lret
or
stos
pop
mov
popf
dec
sub
out
paddsw
mov
ret
int3
xor
mov
jecxz
lods
push
mov
inc
mov
fnstenv
sbbb
xchg
adc
inc
lods
int3
fistpl
in
mov
and
aad
mov
pop
call
pop
sbb
notl
cmpsb
fadd
iret
inc
inc
inc
fucomi
sahf
pop
jbe
call
inc
subl
dec
push
inc
fmull
pop
dec
aad
shrl
leave
icebp
cmc
out
pushf
cwtl
das
push
dec
fwait
js
xor
cltd
into
pop
dec
mov
jmp
push
add
fs
add
fs
fdivrs
adc
adc
adc
mov
scas
xor
je
nop
outsl
cmpsl
push
xchg
xor
ja
dec
xchg
mov
dec
xchg
clc
out
pop
mov
ljmp
cmc
lret
pop
fs
addr16
arpl
xrelease
mov
inc
lods
rclb
vmovss
adc
inc
mov
push
scas
inc
pop
adcl
mov
inc
xor
inc
mov
cwtl
pop
enter
lret
mov
jo
mov
jge
aad
dec
lea
jmp
out
jle
fcoms
nop
daa
push
push
hlt
lahf
sbb
cmpsb
inc
cmc
jg
arpl
imul
xlat
into
pop
jg
scas
and
ret
pop
cmp
push
stos
xchg
mov
adc
js
mov
inc
ret
fwait
jmp
pop
xor
sti
sbbl
bound
push
cld
insb
pop
popf
xor
inc
out
jne
in
insl
mov
lods
xlat
pop
xchg
push
lea
les
int3
cld
scas
dec
movsl
jmp
pop
data16
jnp
cltd
sbb
or
ljmp
sbb
fsubrp
out
rorb
xlat
shrl
cmpsb
sbb
shrb
jb
or
popf
fcom
lods
add
sbb
add
mov
jecxz
ret
jno
sbb
cmp
xchg
xor
xor
lods
lret
sarb
pop
pop
movl
fldt
movsb
rcll
pop
cmpsl
dec
clc
outsl
xchg
or
mov
jl
frstor
mov
and
insb
xchg
sub
sbb
leave
jp
test
ja
pop
jbe
and
arpl
dec
insb
lods
sbb
je
mov
mov
aam
jnp
mov
mov
and
sub
xchg
jp
jae
sbb
test
ss
adc
sbb
das
sti
mov
pop
cld
cmp
aad
inc
jbe
push
inc
aaa
jp
test
ja
inc
fisubrs
fcoms
inc
fwait
imul
pop
cmp
sub
dec
xchg
dec
and
sbb
inc
ret
cmp
mov
ljmp
test
lea
aas
ljmp
pop
jbe
jne
repz
clc
retw
xchg
jae
pop
pop
leave
cmc
mov
push
fidivs
lahf
out
push
movsl
mov
stos
pop
ret
sub
sbb
add
or
xor
lock
rol
mov
mov
les
data16
imul
repnz
in
adc
lods
test
mov
push
inc
or
inc
sbb
or
fidivrl
in
inc
and
inc
daa
sbb
lds
movl
inc
lods
jno
fdiv
aaa
xchg
rcl
out
xlat
dec
js
fs
cwtl
push
stc
gs
scas
jle
adc
sbb
adc
xor
mov
jne
andl
jecxz
mov
push
cwtl
sub
imul
ret
mov
pop
adc
or
sbb
shrl
mov
mov
scas
sbb
fucomp
jle
inc
xor
add
adc
mov
gs
jmp
and
mov
cmc
mov
xchg
popf
or
xchg
shr
sar
mov
enter
jmp
int3
add
popa
fsubl
mov
inc
aam
scas
and
xchg
or
xchg
or
in
aad
mov
mov
sbb
rolb
inc
mov
std
xchg
shrb
repnz
jbe
stc
add
mov
pop
mov
std
arpl
mov
das
mov
shr
xchg
jg
cmpsb
jne
push
test
icebp
fcomip
je
aam
xor
imul
jae
cmc
adc
ret
mov
xchg
scas
xchg
rcr
mov
and
mov
out
ret
pusha
sbb
ljmp
rcll
jae
sbb
mov
shr
cld
stos
xchg
inc
sbb
xchg
mov
les
lds
inc
adc
sub
lret
lret
push
fdivrp
into
or
inc
les
inc
add
das
xchg
or
scas
hlt
mov
fisttpl
shrl
mov
pushf
inc
jl
sub
adc
jns
jg
gs
iret
popa
repnz
and
incl
std
imul
das
orb
aaa
enter
test
mov
outsl
pop
sti
inc
adc
push
shr
call
dec
pop
mov
fstl
push
inc
add
scas
mov
in
jno
and
and
divl
mov
and
lods
lods
dec
je
mov
push
inc
mov
shll
jp
das
jbe,pt
mov
xchg
mov
push
inc
sub
xor
push
call
pop
cmpl
aaa
fdivrl
mov
iret
mov
sub
dec
lods
mov
add
sbb
aad
hlt
jne
mov
mov
push
or
pushf
xchg
inc
sbb
inc
cmp
xchg
push
jp
mov
fldenv
pop
xchg
xor
and
xchg
mov
jge
mov
mov
or
call
xor
loope
xchg
push
lods
gs
std
xchg
jb
bound
add
insl
int3
sub
enter
call
xchg
push
or
fcoms
scas
mov
orw
xor
xchg
lret
mov
nop
mov
aas
add
adc
push
xor
cmpsl
notl
imul
adc
pop
mov
int
push
pop
ret
sub
int3
push
or
push
xor
ljmp
cmpl
adcl
adcb
adc
adc
ret
inc
and
cli
ror
and
jge
jl
rcrl
xchg
pop
mov
lods
mov
iret
fcompl
inc
das
lret
pushf
xchg
adc
adc
mov
xor
je
imul
js
loopne
cwtl
dec
xchg
int3
push
jno
scas
aaa
and
mov
jecxz
push
mov
lds
xor
dec
xchg
sti
adc
and
nop
and
les
cwtl
popf
push
cmp
dec
insb
mov
push
pop
sbb
out
xchg
fs
xor
push
out
add
dec
movzbl
fldcw
inc
stc
int
fldcw
mov
jmp
imul
hlt
adcb
testb
mov
test
lods
mov
clc
gs
pop
repz
push
mov
inc
pushf
outsb
out
arpl
adc
xchg
shrl
js
pop
cmp
inc
inc
inc
std
jns
jmp
notl
ret
imul
mov
sahf
int3
and
mov
je
test
pop
leave
dec
notl
or
andb
mov
mov
pop
rclb
out
push
repz
rcll
xor
out
aad
xor
jno
in
das
bound
push
test
xchg
insl
pushf
in
mov
mov
insb
dec
push
cwtl
pop
jecxz
sbb
fcmovbe
in
dec
in
xor
pushf
adc
push
pop
out
and
mov
sahf
or
sbb
xchg
pop
jl
dec
adc
ljmp
fiadds
ret
cmc
and
arpl
cli
xor
push
inc
jmp
jns
pop
cmp
push
cmp
xchg
xchg
inc
jne
dec
jp
or
dec
lret
lea
pop
jg
mov
repz
dec
and
lret
add
rcll
mov
inc
inc
cmp
mov
test
adc
inc
leave
out
fcomps
int
push
sbb
int3
sub
dec
jmp
inc
movsb
and
ss
loopne
sbb
outsb
loopne
xor
inc
aaa
or
pop
pop
fs
fucomip
push
or
mov
push
data16
pop
push
popf
mov
sub
sbb
mov
pop
sbb
daa
mov
inc
push
movsl
ret
push
pop
ja
and
cltd
ffree
pop
adc
das
inc
jp
insl
jl
cmpsb
jmp
push
jp
push
mov
mov
jl
dec
or
sbb
psubusw
inc
jae
loope
addr16
mov
jmp
fistl
fisttpll
sbb
mov
xchg
inc
lods
fsubs
adc
fwait
cmc
or
add
xchg
aad
in
clc
in
push
inc
inc
sbb
imul
push
dec
push
xor
lret
mov
dec
movsl
popa
dec
les
popf
decb
inc
outsb
sbb
loopne
mov
arpl
lret
xor
mov
lret
xchg
out
daa
pop
add
xchg
scas
jns
scas
scas
repz
rcrb
bound
outsb
xchg
mov
mov
xchg
inc
arpl
nop
pusha
mov
shl
lods
sti
cmp
push
pop
add
mov
push
out
or
pop
jne
lret
inc
lahf
push
dec
sarl
es
inc
daa
fcoml
arpl
repz
into
sti
lock
and
sbb
xor
fdivs
sub
sub
pushf
jl
arpl
rcrb
dec
ljmp
xor
mov
pop
sarb
mov
repnz
pop
ds
ss
mov
or
or
sub
mov
jns
popa
dec
jo
leave
cltd
rcrl
ffreep
sub
inc
je
iret
lahf
push
mov
adcl
mov
xchg
gs
push
add
jp
shll
iret
scas
xor
enter
jbe
sub
add
xchg
jb
lea
inc
ljmp
test
push
jbe
iret
mov
in
mov
xchg
je
jg
xor
mov
mov
push
out
mov
leave
xchg
inc
xchg
and
xchg
sbb
test
xchg
cltd
pop
mov
fstl
sbb
inc
jmp
dec
pop
sarl
lods
adc
xchg
call
test
les
lock
jmp
add
popf
lea
clc
sub
imul
ja
orb
aaa
pop
test
pmulhw
sbb
outsb
popf
add
mov
jmp
nop
enter
mov
and
xor
and
sub
jo
sbb
and
add
push
lahf
fmul
mov
pop
cmp
inc
mov
movsb
hlt
lret
dec
push
dec
dec
lods
pop
sub
aad
pushf
cmp
out
mov
lds
xchg
in
repz
adc
dec
test
mov
js
fstl
or
popl
in
iret
lods
jns
je
fs
mov
mov
mov
xchg
add
sahf
cmpsb
lds
xchg
add
inc
sbb
or
sub
xor
sbb
and
outsb
jae
xlat
into
adc
popa
loop
push
imul
les
cltd
fs
dec
iret
cmpsb
fsubrl
mov
cld
inc
xchg
cli
rorb
sahf
push
das
out
cld
inc
xchg
cld
add
mov
xchg
out
fldt
add
xor
jmp
adc
dec
icebp
call
loop
xchg
or
push
xchg
sub
xchg
or
add
jge
lds
xchg
mov
aam
pop
iret
repz
push
les
xor
cmc
cltd
dec
sti
mov
xor
sub
mov
insb
mov
in
subb
pusha
dec
lods
push
xchg
sbb
sbb
mov
enter
dec
arpl
push
mov
ror
cwtl
test
push
dec
adc
lcall
mov
adc
out
jmp
mov
ja
ror
mov
dec
test
jb
popf
push
das
or
add
or
sub
divb
cmpsb
mov
in
jl
cwtl
push
out
push
rolb
in
sahf
bound
and
xchg
int3
aam
sbb
xchg
jo
mov
testb
shrb
data16
mov
sti
movsb
cmp
les
push
inc
into
ds
into
scas
or
pop
sub
test
or
mov
mov
mov
cs
js
jo
cltd
bound
popf
testb
push
sti
mov
fsubrs
fwait
das
sub
movsl
loop
ret
xor
lods
mov
or
dec
sbb
push
pop
adc
icebp
cmp
in
push
gs
push
xchg
push
in
aas
push
out
les
into
pop
or
add
mov
scas
inc
dec
movb
dec
xchg
cmp
jne
mov
sub
in
scas
mov
sub
andl
fwait
jle
xchg
mov
add
cmpsl
xchg
in
inc
inc
test
into
sub
push
jmp
xchg
int3
dec
or
in
lea
dec
push
cltd
sbb
add
xor
loope
popf
or
push
cmp
xlat
cmp
inc
mov
mov
dec
movsl
out
jne
popf
inc
inc
push
push
mov
push
loop
shll
lret
pop
je
dec
ljmp
jne
xchg
xor
cmpb
sbb
pop
pop
int3
ret
movsb
lods
push
mov
adc
sub
movsb
xor
ljmp
inc
xchg
xor
pop
adc
imul
and
fcoml
pushf
movsl
enter
sbb
dec
mov
mov
or
xlat
xchg
xor
nop
sbb
xchg
or
adc
addr16
xor
sbb
dec
int
leave
aad
push
and
lahf
pop
or
popa
adc
aaa
pusha
inc
inc
push
push
xor
ret
mov
popf
test
sbb
loop
xchg
xor
icebp
clc
in
push
xorl
add
mov
push
fwait
cmc
sbb
push
xchg
push
ss
sar
aas
stc
dec
ficoms
test
mov
fdivs
xor
xchg
xor
mov
scas
push
rcll
jno
lret
in
leave
mov
ljmp
mov
ret
adc
cmp
push
xchg
repz
out
pop
xchg
adc
mov
jecxz,pn
outsb
jl
cmc
xchg
int3
or
inc
das
pusha
push
pop
or
push
xchg
jne,pn
jb
push
daa
ror
push
mov
faddl
mov
or
sti
int
cmpsb
ja
pop
push
dec
leave
addr16
mov
jle
pop
jb
or
fdivrl
add
repnz
sbb
xor
dec
or
in
mov
adc
or
loope
inc
jle
setl
sbb
push
dec
pushf
pop
lea
cwtl
cld
mov
inc
push
jle
je
pusha
out
rorb
inc
and
adc
or
jmp
cmp
push
stc
mov
xorb
cmp
sbb
test
pushf
iret
pop
adc
mov
mov
pop
pop
push
lcall
cmpsl
fdivp
xor
inc
stc
movsb
aas
fildl
xrelease
pop
pop
ds
cld
push
mov
inc
insb
dec
out
mov
mov
nop
pop
lea
cmp
mov
pop
rcrb
rclb
pop
dec
adc
push
jns
adc
pop
ja
pop
and
stc
nop
add
filds
lods
ja
repnz
std
int
push
push
lods
icebp
mov
dec
xchg
fwait
xchg
dec
xchg
adc
mov
aad
scas
es
std
push
ljmp
push
repnz
loopne
xchg
test
out
lcall
pop
dec
js
or
cld
and
push
inc
push
imul
rcl
sbbl
push
mov
jp
das
int3
cmp
mov
pop
jns
jb
imul
mov
in
mov
inc
aad
stc
xchg
inc
pop
pushf
cmp
and
rcrl
mov
nop
arpl
jbe
fcmovu
ret
aaa
xchg
jp
bound
dec
loop
xor
ja
and
pusha
jg
mov
fidivl
vphaddudq
sahf
xchg
dec
test
pop
and
inc
sbb
mov
mov
fmul
mov
pop
ds
or
jbe
jg
jecxz
push
and
push
shr
arpl
test
sbb
call
cmp
stc
sbb
fcoml
clc
inc
mull
pop
mov
adc
jne
enter
cmp
jge
sbb
jge
outsb
mov
shlb
sub
es
and
sub
fs
int3
sti
or
pop
xor
pop
ja
dec
clc
sub
dec
imull
scas
sub
imul
enter
mov
lods
mov
ret
add
push
add
adc
pop
sbb
xchg
loopne
addl
in
je
push
xchg
sbb
jmp
decl
gs
mov
dec
mov
jecxz
cmp
nop
es
add
rolb
adc
hlt
inc
test
jl
cmp
and
lea
scas
lret
arpl
pop
loope
lods
add
xchg
movsb
jp
sti
into
pop
mov
pop
arpl
outsb
lret
mov
sbb
push
add
pushf
sti
hlt
insb
pop
rorl
add
aas
movsl
ljmp
mov
cmp
enter
dec
lret
int
pop
inc
sti
loop
fmuls
dec
inc
outsl
pop
call
cltd
arpl
inc
iret
imul
psrld
rol
sub
inc
mov
or
jecxz
xor
xchg
jbe
out
clc
inc
pop
xchg
sti
int
leave
push
ds
ja
lret
push
pop
cmp
jp
daa
mov
scas
std
std
push
jne
push
dec
fimuls
push
push
fisubrs
insl
and
lock
cwtl
sub
lock
xchg
add
xchg
test
pop
jp
mov
loop
roll
sbb
ret
hlt
xchg
xor
push
or
sub
movsb
lock
mov
aas
int3
xchg
ret
sub
sub
cmc
pop
jg
lods
fwait
repnz
loope
rolb
jno
call
adc
or
fmuls
inc
mov
push
push
pop
and
mov
inc
sub
cmpsl
push
mov
xchg
push
jb
lds
shlb
imul
or
jb
dec
push
sub
xor
ret
je
push
lds
adc
jo
mov
cmp
or
xchg
dec
xor
pop
ret
aad
leave
xlat
dec
outsl
fstpl
call
dec
in
mov
push
add
cmp
dec
jae
mov
addr16
leave
sub
xchg
cli
jecxz
cwtl
hlt
ret
push
test
lcall
dec
lcall
dec
adc
mov
adc
inc
inc
adc
scas
mov
add
push
out
rolb
pop
pop
pusha
fwait
dec
sti
fwait
push
je
mov
call
push
lcall
push
jecxz
add
push
out
shll
add
mov
xchg
add
mov
lea
jle
and
jp
push
ficoml
loopne
inc
adc
dec
sub
fmull
and
imul
pusha
adc
or
dec
cmp
inc
invd
sahf
mov
jbe
and
adcb
data16
imul
xchg
in
adc
and
sub
push
movsl
mov
test
jg
inc
leave
sbb
inc
dec
dec
rcrl
xchg
fists
aad
clc
push
jecxz
cs
mov
outsl
je
dec
lods
rolb
cli
sbb
lahf
and
pusha
xor
sub
decl
add
xchg
cwtl
lahf
dec
rol
xchg
sahf
push
jle
ja
or
and
inc
in
loopne
mov
in
pop
or
shll
jg
mov
jmp
in
lds
xchg
loope
dec
popf
push
rcl
lds
add
ljmp
fwait
aad
or
inc
in
jne
add
dec
xchg
jne
xchg
lret
sub
ss
out
pop
jmp
mov
dec
mov
jg
incl
jns
enter
xor
shr
mov
pusha
cmpsb
ljmp
push
inc
xchg
jecxz
mov
adc
scas
sbb
inc
pop
sbb
daa
pop
xchg
or
shrb
icebp
mov
pop
das
shrd
leave
sbb
pop
cmp
xor
scas
or
mov
out
mov
inc
test
aam
sbb
xor
dec
and
adc
mov
jo
mov
mul
jae
adcb
test
aad
std
insl
push
fwait
lcall
xchg
inc
dec
mov
lret
inc
push
inc
repz
jecxz
inc
dec
sahf
inc
or
sbb
sub
lret
pop
sbb
mov
sbb
jl
andl
stos
rcrl
ja
rcrb
sub
dec
or
sbb
jp
inc
dec
dec
mov
cmc
lret
call
push
sbb
iret
push
adc
lret
mov
inc
mov
dec
and
adcl
out
push
inc
pop
popa
sbb
fcomps
and
icebp
push
xchg
jne
jp
test
push
jb
sbb
adc
xchg
iret
in
loope
aam
outsl
pop
push
in
pushf
pop
popa
adc
sbb
cmpsb
push
add
insb
xorl
inc
inc
mov
sub
push
jne
ja
fnstenv
shrb
add
dec
and
sbb
addr16
addr16
pop
cmp
rcrl
inc
mov
hlt
mov
cld
out
cwtl
jge
lock
jnp
clc
leave
sbb
mov
sti
jbe
lcall
mov
loopne
push
movsl
jecxz
jb
pop
lods
xorl
xchg
repz
ret
push
enter
icebp
adc
and
jmp
js
fistl
popf
mov
pop
sbb
inc
mov
dec
leave
leave
pushf
in
ja
pop
pusha
mov
ret
rcll
aad
call
xlat
int
xor
loopne
push
sub
and
and
sub
push
add
mov
int3
in
push
inc
mov
mov
test
and
xchg
imulb
fldt
lds
push
pop
outsb
cmp
adc
jo
push
ja
jnp
sbb
adc
pop
fistpl
xor
inc
push
pop
cmp
gs
fldl
or
or
add
in
mov
cltd
push
adc
sub
pop
lahf
push
lcall
pop
in
clc
jmp
ds
pop
inc
data16
mov
pushf
lcall
xchg
push
inc
lds
sub
lret
inc
xor
lcall
xchg
call
push
push
gs
jbe
adcb
fisubs
popa
xchg
and
fwait
mov
int
cmp
add
fsub
cli
dec
fwait
popf
cmp
add
lret
sbb
inc
jmp
mov
sub
add
or
dec
mov
or
fdivrp
and
rclb
pop
pop
test
int
jne
sbb
inc
adc
cwtl
dec
mov
pop
mov
and
xchg
dec
cmpsb
outsl
sbb
jge
xor
pop
mov
cmp
push
xchg
sub
inc
inc
cmp
in
int3
and
fs
inc
dec
push
adc
les
dec
pop
cmpb
into
out
xchg
push
pusha
pop
or
pop
popa
xor
dec
or
xchg
subl
out
sbb
lods
aas
or
inc
stc
inc
loopne
xor
fiaddl
pop
cli
inc
or
ljmp
outsb
jmp
iret
inc
insb
cmp
les
call
dec
sbb
lods
in
jbe
and
lods
sar
mov
shlb
repnz
lret
inc
movsb
in
xchg
xchg
or
pop
inc
lods
push
xchg
dec
cld
dec
ds
into
or
ret
push
mov
data16
mov
subb
mov
push
movb
int
pop
push
xor
inc
mov
pop
sbb
xchg
scas
lock
pop
sti
jno
sbb
push
test
push
aad
lock
or
cmc
or
test
data16
int
shl
imul
xor
call
inc
movsl
loopne
pop
pop
lods
dec
push
daa
fbstp
fwait
mov
mov
outsl
jecxz
in
pop
mov
xor
mov
sbb
add
sarl
mov
jg
sub
cmpsl
mov
sub
mov
cmp
ret
icebp
jp
js
adc
js
fmull
rorb
mov
xchg
dec
rcrl
xchg
or
loopne
into
xchg
pop
mov
fimuls
inc
dec
in
pop
mov
jmp
rorb
insl
jg
cwtl
fwait
ret
push
sti
cmp
mov
dec
lods
ljmp
jne
in
dec
rolb
sub
xchg
xor
cmp
adc
int
cwtl
nop
mov
aas
cmp
mov
jnp
xchg
hlt
popa
addr16
push
jmp
dec
test
push
adc
int3
aam
pop
xor
mov
fistpll
xchg
fimull
cmc
int
push
pop
dec
cmp
out
fidivrs
jmp
dec
lahf
push
dec
mov
mov
dec
add
adc
test
mov
xchg
sub
pop
push
fwait
in
in
loope
enter
cmpsl
mov
pop
out
push
pop
movsb
sub
xchg
stos
adc
movsl
hlt
or
adcb
cltd
out
jne
fldenv
jp
push
mov
jg
bound
out
adc
add
and
jno
mov
sbbb
pop
sbb
into
jns
or
mov
popa
fldcw
mov
std
mov
ds
or
das
dec
sub
das
or
and
mov
xchg
mov
imul
rcr
pop
xor
push
pop
adc
adc
or
mov
out
mov
mov
and
out
aaa
xchg
loop
imul
and
hlt
pop
movsb
mov
cmp
add
mov
push
dec
add
fidivrs
daa
lret
test
lahf
mov
popf
sahf
xchg
jnp
scas
and
push
pop
imul
dec
iret
sbb
adc
sbb
pop
cld
cli
inc
lea
sbb
pop
in
or
push
int3
xchg
sbb
sbb
rcrb
mov
dec
push
mov
and
push
je
sahf
lea
test
ficoms
jb
mov
xchg
imul
fnsave
xchg
call
xchg
lea
lret
shlb
sbb
dec
dec
dec
push
mov
test
test
pop
fcoms
or
sbb
enter
and
xchg
imul
fldcw
aaa
adc
andb
mov
popa
nop
mov
stos
dec
out
or
push
fisttps
jge
or
scas
out
sbb
enter
xchg
jecxz
insl
fisubrl
inc
data16
mov
stc
or
out
push
arpl
loopne
hlt
jge
sub
push
add
mov
xchg
and
jmp
xor
mov
pop
fisttps
dec
outsl
inc
inc
mov
movsl
xchg
outsl
mov
stc
mov
sub
mov
data16
xchg
inc
ret
xchg
cmc
stos
gs
mov
fistpl
sbb
pop
xchg
clc
dec
cmpsl
int3
jae
push
loope
cmp
sbb
add
pushf
push
shlb
aas
out
or
mov
sub
dec
push
xchg
lahf
leave
dec
add
das
mov
mov
push
and
mov
mov
lea
ljmp
adc
sub
shl
int
or
popa
dec
mov
xchg
scas
adc
pop
dec
stos
xchg
in
out
rcr
cmp
idiv
fisttps
mov
inc
push
mov
sahf
test
push
mov
cmp
lods
enter
inc
or
in
pushf
pushf
inc
sbb
imul
dec
xor
jg
or
push
fimuls
ljmp
xor
xchg
pop
xchg
inc
dec
movsb
insl
add
popw
sub
jge
lds
test
movd
inc
fidivrl
inc
outsl
mov
test
lods
dec
xor
jl
lods
xor
mov
cltd
fidivrl
leave
fcomps
xor
and
xchg
sub
ret
inc
lods
ret
xchg
fs
and
loopne
cmp
loop
cmp
and
sub
dec
cmpsb
popf
adcl
pop
mov
adc
lods
cmp
or
sti
ret
hlt
call
in
arpl
int3
pop
mov
mov
ret
xchg
push
mov
ja
fiadds
and
decl
lods
pop
in
orl
jecxz
pop
fcomp
mov
bound
lahf
cld
lcall
out
out
mov
stos
popf
out
les
fptan
add
addr16
xor
push
jae
addr16
pop
mov
adc
adc
rcrb
inc
pop
sub
xor
xor
xchg
mov
mov
insb
sub
inc
xor
popa
xor
scas
fldl
outsl
pop
stos
aad
sbb
inc
sub
adc
clc
ret
gs
lods
xlat
insb
jmp
lods
sbb
dec
xor
xchg
pop
sahf
ret
jle
mov
add
repz
cmp
sbb
fcompl
fdivrl
popa
call
add
push
sub
pop
mov
mov
xchg
aam
sti
shld
fidivl
mov
push
add
std
inc
jecxz
loopne
add
insb
pcmpgtd
and
lods
or
dec
mov
push
rorb
insl
dec
movsb
mov
xlat
mov
ljmp
lret
imul
stc
orb
push
cmpsl
nop
in
dec
mov
cmp
fistpl
jmp
lcall
mov
mov
xchg
adc
mov
or
mov
adc
pushf
es
jno
mov
adc
jp
or
sbb
xor
es
in
call
mov
xchg
pop
stos
pop
hlt
xchg
push
ljmp
add
xor
sar
fiaddl
jecxz
add
xchg
fwait
insb
setbe
push
xor
xlat
xchg
mov
dec
ss
je
adc
push
sub
dec
dec
mov
lea
lcall
shlb
pop
scas
adc
dec
mov
add
sub
fs
insb
dec
orb
sbb
pop
fcom
push
inc
push
insb
cwtl
fs
mov
addr16
or
std
inc
xchg
jp
scas
inc
sbb
fadd
ja
les
adc
mov
sub
inc
cmpsb
outsb
loop
pop
lcall
js
or
out
mov
adc
rorb
jns
mov
sahf
movsl
push
dec
jp
push
adc
xchg
adcl
leave
or
adc
and
shl
adc
and
xor
pop
addb
adc
mov
push
adc
pop
add
mov
in
aam
sub
push
or
xor
xchg
dec
xchg
sub
pushf
lret
stos
pusha
out
push
push
bound
sbb
repz
push
jne
gs
or
pusha
pop
test
movsb
inc
jle
mov
fcmovb
sbb
lods
inc
and
hlt
sub
and
xchg
xchg
mov
mov
gs
push
lahf
fs
notl
cld
adc
xchg
add
and
call
fidivl
dec
cli
fnstsw
test
rcrl
xor
and
push
xchg
aas
out
pop
xchg
xor
sti
in
cmp
sub
mov
testl
xor
out
xchg
popa
dec
push
je
mov
sbb
sbb
aam
push
mov
in
jae
add
jmp
subb
lods
inc
rcrb
scas
inc
lret
adc
mov
jae
es
push
js
ss
pop
inc
mov
mov
aad
insb
sbb
dec
es
fisubs
bound
movsb
add
cld
xor
inc
jecxz
xchg
repz
mov
push
pusha
push
into
int
nop
xor
xlat
fdivl
push
cmp
jmp
popf
pop
out
cmp
sarb
fsub
xchg
ds
mov
add
jge
sub
stos
and
push
fstpl
xor
ret
pushf
mov
and
fildl
mov
push
push
enter
pushf
mov
sbb
clc
xor
test
mov
sbb
lret
in
iret
aaa
and
iret
sbb
pop
dec
push
xor
add
jg
subl
mov
lcall
mov
xchg
in
rcrl
sub
or
into
fwait
sub
xchg
xchg
mov
fists
int
lret
mov
or
mov
fwait
mov
rolb
fistpll
fstps
rcrb
sti
fstps
xor
and
sbb
jmp
push
sbb
adc
aad
add
dec
lret
aad
fmuls
push
daa
pop
int
and
xchg
push
push
mov
test
lret
repz
insl
add
mov
rcrb
hlt
mov
scas
in
add
mov
mov
into
stos
or
scas
cld
or
dec
hlt
or
in
add
lret
fstpl
cltd
int3
loopne
shr
lds
sub
and
stos
mov
sub
loope
xlat
stos
jae
sub
jb
sbbb
rcrb
inc
pop
xor
sbb
shrl
add
out
mov
fs
ds
jne
test
mov
xchg
jecxz
addr16
xchg
xchg
scas
adc
outsb
mov
pop
add
dec
aaa
jg
sub
fs
sahf
dec
or
pop
or
arpl
repz
jmp
jo
loope
pop
decl
ret
and
mov
sbb
sahf
popa
repz
mov
xchg
mov
pop
cmp
adc
mov
fs
divl
ret
push
dec
mov
adc
inc
outsb
pop
out
loopne
in
sub
sub
pop
rolb
mov
push
jbe
fsubs
cmp
imul
in
xor
xchg
fs
cmc
xor
pop
mov
sbb
mov
xchg
pop
cmp
jb
nop
fcoml
je
adc
fnstcw
inc
in
je
fistl
js
sbb
jmp
dec
mov
pop
and
test
outsl
int
dec
sub
loop
leave
mov
and
icebp
xor
add
or
xchg
add
add
insb
and
shll
outsb
fxch
lcall
pop
jecxz
out
sbb
shll
xchg
movsl
mov
sahf
jnp
imul
sahf
scas
add
int
inc
notl
lods
dec
out
lods
ja
pusha
flds
xor
lods
lds
sbb
lret
ret
addl
pop
loop
mov
pusha
sbb
xchg
pop
out
mov
and
jno
adc
gs
push
jge
cmp
xchg
pop
bound
mov
dec
fucomip
mov
neg
addl
add
mov
ret
xchg
fimuls
outsb
adc
push
push
call
jb
mov
in
push
adc
dec
dec
sbb
mov
xor
scas
add
rclb
int3
mov
xor
jmp
mov
mov
and
mov
les
es
mov
imul
jmp
cltd
ret
mov
data16
adc
xor
sbb
xchg
xchg
daa
pop
scas
sub
out
xchg
jecxz
lret
shr
push
cltd
test
xlat
dec
repz
mov
inc
addr16
cmp
sbb
idivl
lret
xchg
or
cmc
dec
xchg
orl
jb
je
sbb
inc
inc
push
testb
stc
int
mov
and
int
or
aas
scas
orb
test
divb
popa
popf
add
dec
sbb
lods
shlb
push
dec
mov
les
insl
mov
xor
lcall
cltd
cwtl
test
rcll
jecxz
inc
dec
and
fucomip
and
nop
popf
mov
sub
sar
mov
in
inc
repz
sub
test
mov
lcall
lcall
int3
inc
lea
ret
mov
mov
adc
cwtl
mov
dec
rcrb
or
dec
mov
int3
shll
jae
cmp
pop
xchg
pop
imul
cwtl
adc
shr
mov
pop
mov
fadd
adc
mov
pop
lods
movsb
adc
add
cmc
mov
pop
addr16
jbe
arpl
inc
add
call
push
add
inc
into
clc
insb
dec
out
in
and
ja
inc
int
mov
adc
dec
movsl
inc
not
pop
and
insl
mov
pop
pop
and
fnsave
and
adc
sub
loope
or
jns
sub
sar
nop
in
push
mov
jo
sub
push
and
mov
sbb
aas
jp
xchg
xchg
sub
adc
mov
movsl
repz
mov
lahf
dec
test
bound
xchg
in
adc
fwait
sti
cmpsl
mov
in
outsb
fldcw
sbb
add
cmp
popa
mov
bound
and
add
lcall
push
int
adc
fbstp
jo
bound
sbb
mov
mov
aad
cmp
lea
daa
xchg
xchg
adc
mov
mov
mov
push
add
sbb
dec
dec
fwait
ja
movsb
pop
push
sbb
mov
dec
sub
shrl
dec
jle
mov
push
push
and
and
lcall
das
fidivrs
sub
sahf
fnstenv
imul
iret
xchg
cmp
xchg
xchg
dec
das
mov
addr16
xchg
repz
sbb
in
xor
jecxz
mov
nop
insb
sub
ds
orl
sbb
dec
jmp
and
xchg
es
xchg
sti
xchg
jbe
mov
imul
push
clc
xor
popf
lret
fidivs
xor
fstpl
mov
data16
add
xor
orl
adc
xchg
mov
or
shll
push
lret
sbb
fldl
jne
cmp
inc
and
xchg
sub
adc
mov
fimuls
pop
loopne
xchg
outsl
mov
sub
je
cli
aas
jbe
jo
std
cmc
lea
xchg
cltd
ret
adc
adc
int
rcr
adc
push
lods
in
xchg
out
push
mov
out
call
pop
cli
jecxz
push
inc
mov
negl
iret
or
shr
into
xchg
popf
mov
sbb
pop
sbb
xrelease
cltd
cwtl
imul
cmp
lods
mov
pop
push
or
mov
pop
mov
scas
pop
mov
adc
insl
hlt
adc
inc
mov
mov
dec
jns
add
sub
pop
es
mov
cmp
xchg
mov
cmp
addb
out
mov
je
aam
into
lock
jno
cs
in
out
ja
jnp
jne
sbb
inc
lcall
mov
jle
mov
notb
fs
xchg
loope
cmc
test
dec
stc
pop
gs
pop
addr16
pop
repz
outsb
pop
js
jbe
xchg
stos
repnz
sbb
cmp
ffree
jmp
push
dec
scas
mov
inc
punpckhdq
sub
xor
add
sbb
inc
jmpw
rcrl
test
fcom
xchg
je
add
lods
and
push
inc
add
jns
lds
cwtl
xchg
out
mov
xchg
fwait
add
jbe
xor
jl
mov
jle
fistps
arpl
pop
inc
jecxz
sbbl
cmc
shl
mov
xchg
and
sbb
pop
pop
push
dec
or
rcll
xchg
mov
pop
and
pop
push
cld
cli
int
push
scas
sbb
test
cwtl
aad
lcall
add
or
mov
xchg
inc
add
mov
dec
pop
pop
dec
and
inc
push
jo
pushf
daa
or
lret
jecxz
in
pop
mov
dec
sbb
sbbb
lods
call
cmp
xor
pop
fucomip
shrb
mov
pop
dec
out
push
jo
dec
jmp
incb
xchg
bound
push
inc
repz
push
adc
imul
call
mov
mov
fstpl
pop
cpuid
jno
xor
or
cmpsl
sub
dec
lods
fcmovb
pop
push
and
xchg
arpl
inc
mov
lcall
push
mov
pop
imul
mov
jnp
sti
lcall
push
data16
ds
bound
adc
pop
fsts
cltd
std
out
sti
lods
xor
ficompl
xchg
test
mov
int
pop
and
and
or
pop
adc
or
int
sbb
out
data16
mov
dec
lahf
test
cmp
dec
pop
jge
pop
ficompl
jbe
adc
xchg
mov
xor
lret
pop
mov
mov
cmp
add
push
leave
push
mov
loope
sti
adcl
add
inc
cld
repz
cmpsb
scas
cwtl
ffree
fwait
cld
and
adc
lcall
mov
inc
lahf
lret
mov
xchg
scas
into
fwait
pop
add
out
push
jo
xor
or
sbb
inc
mov
out
push
mov
xor
xchg
or
ret
xchg
cli
ror
imul
ja
sub
xchg
adc
mov
stos
clc
ds
xor
mov
aad
loopne
mov
mov
xchg
in
jbe
int3
out
sbb
xor
xchg
jne
xlat
incb
and
es
jb
push
aad
sub
ds
shlb
and
add
mov
jb
rorl
dec
jnp
shrb
fstps
ss
ud2
jne
fisttpl
push
dec
rcr
hlt
scas
je
sahf
cmpsl
shll
stc
rcr
int
adc
sub
inc
dec
xor
adc
adc
dec
leave
pop
addr16
xchg
add
mov
xchg
gs
scas
and
push
sub
leave
dec
mov
call
pop
shlb
dec
mov
mov
jge
jb
mov
xchg
or
das
mov
out
push
icebp
lahf
scas
dec
inc
and
pmulhuw
add
mov
push
and
or
sub
xchg
and
jnp
push
cmp
cwtl
adc
sar
rclb
jnp
xchg
mov
out
call
ret
cmp
sbb
adc
aaa
xchg
pop
dec
into
mov
adcb
insl
ror
cmp
dec
mov
mov
mov
shl
fistpll
pop
cmp
sub
push
push
nop
sub
adc
inc
push
xchg
sub
out
repnz
repnz
shll
and
scas
fwait
bound
adc
adc
mov
loopne
mov
nop
cmovae
xor
int3
es
mov
xlat
push
inc
jnp
test
jo
inc
jnp
int3
ffree
inc
clc
pop
inc
cmp
rorl
sti
jno
mov
fs
push
arpl
xchg
xchg
mov
mov
xchg
adc
shlb
xchg
addr16
adc
dec
jp
iret
insl
ljmp
mov
cmpsb
addr16
and
push
inc
xor
lds
add
push
fcoml
test
testb
testb
or
or
push
cmpb
lds
and
fisubrl
cltd
in
in
push
in
dec
sbb
mov
fs
xor
pushf
dec
decb
mov
mov
inc
xor
rcll
mov
sub
add
imul
lea
in
mov
ficomps
jge
xor
cmp
xor
xor
cmp
push
mov
fwait
dec
cmpsb
clc
popf
push
sbb
xchg
xchg
push
inc
insl
test
dec
sahf
pop
add
dec
xchg
jecxz
mov
loop
dec
adc
dec
and
js
xor
in
iret
outsb
outsl
mul
push
mov
dec
out
lret
xor
mov
jo
in
pop
mov
lea
in
inc
xchg
out
imul
clc
push
outsb
mov
mov
enter
sahf
pop
sarb
add
adc
int3
pop
xor
js
push
jmp
adc
orl
stos
mov
jnp
shrl
and
dec
cmp
lock
sbb
xchg
xchg
jo
xor
add
mov
xor
add
rorl
in
inc
mov
rcll
rorl
js
or
or
and
popf
push
les
sbb
int
lret
xor
cld
fsubrl
cmp
jae
cld
xchg
faddl
aaa
jae
icebp
sub
sbb
sub
loop
xchg
int
clc
pop
aaa
mov
sub
dec
shll
ss
sbb
xchg
push
mov
lret
xchg
iret
aas
push
inc
dec
xchg
push
or
aas
shrb
push
jge
inc
icebp
lret
addr16
xor
into
stc
mov
cmp
lahf
pop
shll
enter
push
xchg
out
push
lock
arpl
xchg
movsb
or
mov
pop
push
xchg
add
lahf
dec
sti
fmul
fcmovu
xor
pop
xchg
call
jb
jne
xor
rcrl
or
test
jne
jne
mov
orb
gs
shl
mov
lret
es
mov
faddp
xchg
in
and
or
xor
pushf
pop
push
mov
leave
jne
add
aas
lcall
pop
mov
jb
push
out
jno
das
cld
jae
mov
push
sbb
loop
pusha
mov
fs
jb
pop
ficomps
dec
mov
xor
jb
test
and
xchg
insb
fcmovbe
mov
mov
push
in
inc
and
std
cltd
rcr
cmp
pop
mov
stos
lods
loopne
in
fisttpll
xchg
mov
je
pop
xchg
mov
mov
lods
dec
xchg
add
add
inc
flds
mov
fadd
dec
scas
shll
sub
sbb
sub
jnp
xchg
pop
lret
xor
xchg
jo
ja
imul
into
or
rol
dec
jns
les
enter
push
push
push
pop
and
sub
and
push
jmp
dec
mov
sbb
sub
stos
sub
fwait
pop
out
mov
test
mov
rcll
scas
dec
pop
push
bound
arpl
mov
in
lahf
lahf
adc
mov
push
add
mov
xchg
aas
add
out
inc
fildl
mov
scas
addr16
ds
popa
push
lret
pop
push
dec
cmp
pop
mov
in
sbb
adc
jg
xor
mov
add
arpl
cli
fdivrp
leave
lret
fcompl
mov
sbb
push
call
ss
push
shlb
jmp
pop
dec
test
cld
lahf
and
lea
adcb
pop
ret
movsb
psubsb
es
adc
movsb
lcall
push
lods
iret
les
sub
loopne
call
aad
pop
sti
orl
pop
adc
dec
and
sbbb
jmp
jmp
movsl
push
int3
aam
fcoml
and
mov
sarb
push
sbb
inc
lret
clc
xchg
inc
fucomp
stos
addb
mov
rorl
loope
sbb
xor
fsub
and
fnsave
fs
push
inc
jecxz
mov
xchg
pop
jmp
pop
cmpsl
out
inc
and
jnp
and
sbb
dec
cltd
push
lret
push
dec
adc
inc
nop
and
addr16
lret
pop
cltd
sbb
scas
aad
mov
adc
outsl
daa
idivb
xchg
aas
popf
out
lea
xchg
and
pop
xchg
or
pop
lock
pop
repnz
aaa
mov
jno
mov
addr16
mov
jae
call
pop
rcrb
mov
cmpsb
push
xchg
int3
lret
add
pop
mov
test
cli
jg
add
addr16
add
sub
jns
sub
scas
repz
in
mov
jg
cmp
push
lock
mul
sbb
pop
out
jno
psubb
mov
mov
test
inc
xor
into
mov
pusha
mov
cs
adc
notb
mov
test
lcall
dec
sahf
mov
sub
iret
lcall
icebp
mov
sub
xor
movaps
fistps
sahf
cli
xor
adc
sub
test
push
gs
sar
xchg
clc
sbb
cmp
ss
repz
in
bound
push
icebp
faddl
clc
ss
cwtl
mov
mov
fdivs
fimull
jg
jg
mov
in
jo
push
cmp
and
sub
push
dec
jo
mov
repnz
add
jge
cmp
adc
arpl
cmp
or
jb
repnz
jae
dec
stos
push
fistl
mov
sub
ds
test
les
test
cs
cmpsb
notb
sub
sbb
and
pop
test
push
call
gs
xchg
cmp
push
leave
mov
and
jle
mov
repnz
imul
mov
es
je
lods
andl
jmp
inc
mov
test
negb
movsb
ds
js
mov
pop
jmp
xchg
mov
xchg
push
aam
adc
aas
xchg
nop
xchg
ret
xchg
inc
daa
aaa
stos
add
push
mov
mov
add
dec
ffreep
shrl
jno
jo
std
push
mov
arpl
add
or
dec
sbb
or
imul
stos
inc
adc
or
mov
and
pushf
and
ss
fcmovu
ljmp
rcrl
mov
jnp
sub
push
mov
in
push
adc
and
rorl
notl
loopne
lss
add
outsb
ljmp
add
popf
mov
cld
push
pop
int3
cmpsl
mov
into
add
pop
push
lcall
mov
dec
adcb
push
fdivrl
dec
pushf
pop
dec
int3
dec
mov
xor
add
adc
mov
xor
dec
and
mov
pop
adc
jne
add
add
or
mov
mov
inc
in
add
lods
ret
jg
add
je
pop
arpl
aam
icebp
push
fadds
sub
movsb
and
xor
jae
xor
adc
pop
movsb
das
mov
jle
sahf
in
pushl
xor
jae
mov
adc
cmp
push
bound
cmc
inc
sar
pop
mov
xchg
jge
dec
mov
jae
cmp
icebp
jge
sub
mov
or
shl
scas
ja
icebp
test
push
dec
lods
loope
inc
in
movsb
fs
xchg
pop
sub
test
ret
sub
adc
imul
jns
ds
scas
ret
adc
sbb
loope
mov
call
xchg
enter
movsw
cmp
cli
int3
shl
mov
movl
adc
imul
mov
inc
rorl
dec
or
pop
pushf
mov
xor
xor
push
das
jb
push
xor
jmp
iret
daa
in
jge
or
mov
je
jle
xlat
sub
lods
and
mov
pop
add
sti
add
adc
cs
xlat
xor
call
mov
adc
test
sbb
add
addr16
inc
clc
insb
cmpsb
or
push
xchg
das
dec
mov
fldl
stos
sub
sub
xor
insl
xor
xor
mov
sub
dec
rcll
jp
cmpsl
int
outsb
stos
out
sbb
outsl
jmp
sarb
int3
pop
sahf
add
or
mov
in
mov
mov
xchg
push
mov
scas
or
mov
push
mov
sbb
add
push
out
in
mov
lock
inc
popaw
imul
or
or
cmpsb
xor
and
and
nop
push
fwait
andb
dec
push
fcompl
or
mov
jno
das
stos
lods
mov
ja
jbe
sbb
pop
sbb
scas
sbb
mov
and
ss
pop
dec
fisttps
inc
cmp
in
aam
movsl
jne
and
xlat
mov
int
popf
test
sbb
lock
stc
mov
mov
jmp
mov
andl
mov
xchg
add
adc
inc
sbb
lds
lahf
addr16
fsub
sbb
cmp
setbe
ds
pop
mov
xlat
lahf
scas
mov
adc
lret
sbb
lret
popa
leave
rcll
bound
pop
ds
mov
adc
dec
orb
jnp
cltd
rcrb
pop
enter
add
fcomps
or
pop
in
aas
sbb
mov
mov
in
push
xor
inc
or
aam
shlb
dec
daa
repnz
adc
add
outsb
arpl
push
popl
push
push
pop
pusha
ficompl
sub
pop
mov
pop
push
scas
mov
ds
dec
pop
cmp
ficompl
lods
enter
dec
push
adc
imulb
pop
xorl
inc
in
call
idiv
push
xchg
adc
inc
mov
rorb
jmp
data16
outsb
add
imul
jle
rolb
outsb
dec
fbstp
jno
in
lret
loopne
dec
mov
sub
xchg
jle
push
mov
insb
cltd
subb
incb
cltd
inc
xchg
lret
add
xchg
fxtract
add
decl
adc
loopne
mov
push
pop
les
xchg
cwtl
inc
ret
mov
pop
aaa
mov
cltd
adcb
cld
gs
push
in
pop
xor
addr16
add
push
ficompl
into
lcall
scas
lock
xchg
xchg
push
add
pop
movsb
mov
test
lret
fisubrl
int3
sbb
pop
lea
outsl
leave
mov
jo
addr16
jno
jnp
cli
dec
lcall
dec
cwtl
cltd
shrl
rcll
sbb
pop
xchg
push
fwait
push
mov
dec
fwait
push
mov
fsts
adc
pop
mov
xor
jae
inc
cli
pop
int
rclb
jo
loope
inc
movsb
pop
mov
cltd
aam
in
test
dec
jmp
mov
call
psubd
fmuls
lods
pusha
outsl
jle
dec
push
nop
mov
lahf
mov
or
lret
stos
into
inc
mov
jbe
jne
xchg
jl
dec
or
fs
dec
mov
xchg
dec
stc
xchg
add
xchg
les
pop
pop
fisubrl
mov
or
add
les
lea
cli
push
mov
test
add
clc
and
dec
inc
mov
movsb
add
xchg
mov
add
add
add
mov
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
movb
sub
mov
popa
jmp
and
mov
xor
and
mov
sbb
cwtl
dec
es
leave
in
js
pop
das
pop
mov
xchg
enter
jmp
mov
sbb
mov
dec
push
ss
and
mov
inc
ja
fs
jmp
mov
sbb
cwtl
dec
es
enter
mov
mov
cld
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
repnz
cs
call
push
roll
ret
and
and
js
gs
jns
js
push
dec
std
push
inc
cs
inc
je
mov
push
stc
jno
add
add
jae
popa
jb
inc
jo
cs
js
ret
xor
jo
ja
push
outsl
data16
ja
pcmpgtw
insl
jo
outsb
jns
push
out
fs
je
dec
add
mov
mov
loopne
cmpsb
add
xor
adc
mul
push
imul
jae
loope
stos
pop
cmp
out
and
or
pop
aad
cli
push
fs
cs
repnz
cwtl
mov
mov
and
pusha
call
in
pop
add
push
or
or
test
add
xorb
call
push
ret
jo
and
ds
or
push
call
lcall
or
xchg
aad
jmp
adcb
add
fsubr
add
ljmp
inc
dec
fmuls
fmuls
inc
mov
or
xor
or
xorl
inc
jmp
sbb
fsubl
mov
inc
add
jb
xchg
and
pop
or
test
and
lea
roll
mov
cmpl
lea
orb
mov
rcl
stc
ja
pusha
scas
ret
inc
inc
movsb
dec
mov
stc
inc
rcll
mov
lock
adc
inc
cld
dec
adc
add
jns
inc
cmpb
idivl
ret
jge
jmp
and
clc
cltd
insl
adc
or
dec
shll
adc
shl
add
shrb
fisttpl
sti
cwtl
jb
or
ja
add
iret
adc
in
or
ficomps
mov
adc
inc
jb
or
inc
ja
mov
pop
lock
hlt
cmpl
ss
or
outsb
jbe
int3
stos
es
sbbl
push
cld
jb
subl
sarl
fdivrl
cmp
add
jne
mov
mov
icebp
sub
add
cmp
or
pop
ss
loop
jmp
mov
pop
popa
orb
and
xlat
sbb
mov
shlb
aas
jno
add
push
jmp
mov
and
or
and
add
lds
jmp
enter
in
dec
push
inc
ljmp
mov
mov
int3
sub
sbb
inc
mov
add
xor
adc
sbb
hlt
scas
dec
lods
dec
fildl
push
xor
mov
out
shlb
cmp
jbe
adc
rcrl
jne
jne
shlb
in
nop
push
push
mov
test
add
rclb
sub
sub
mov
insl
out
fcompp
incl
and
sbb
xor
enter
nop
cmp
out
xor
cltd
inc
in
les
inc
addr16
cmc
jmp
les
ljmp
adc
adc
ss
sub
cmp
cmp
mov
mov
xchg
inc
mov
testb
push
fstps
mov
popf
lea
ljmp
jmp
pushf
and
or
shll
cmp
or
adc
lcall
ljmp
xchg
dec
cld
push
add
pop
hlt
repnz
inc
sub
inc
and
sbb
int
mov
bound
add
mov
adc
inc
cmp
jmp
add
sahf
aam
rcrb
add
shrl
and
and
ljmp
lret
in
les
bound
cmp
cmpb
imul
dec
push
clc
jnp
dec
add
xchg
imul
add
xor
idiv
in
int3
adc
sbb
and
jmp
push
jae
adc
adc
addl
lret
in
add
fdivs
dec
jns
mov
inc
faddl
es
or
decb
sbb
test
or
repnz
cmpsb
or
loope
pop
adcb
xor
cmp
std
ljmp
shl
outsl
sbb
dec
mov
xchg
loop
das
int
add
jl
pop
or
add
iret
test
push
pop
jge
addb
fdivl
mov
xor
cmp
add
xor
push
pusha
adc
lret
cs
and
push
mov
add
inc
addb
add
mov
lds
add
push
mov
test
lods
out
and
inc
dec
mov
iret
nop
mov
cltd
pop
jle
in
sahf
add
sub
add
ret
and
cld
test
add
and
and
pop
mov
mov
flds
mov
xor
sub
add
sbbl
add
adc
add
mov
xchg
rol
sbb
xorl
inc
cmp
arpl
cmpsl
xchg
mov
mov
mov
fdivs
xor
sti
mov
outsl
add
nop
push
mov
popa
xchg
dec
adc
inc
rcrb
mov
push
mov
adc
int3
les
mov
ret
xchg
sbb
add
cmp
jns
sbb
sub
add
aaa
pop
rolb
cs
mov
es
pusha
add
scas
call
or
mov
aad
int
popl
pop
rcl
mov
add
enter
mov
or
sti
cltd
mov
daa
adc
or
cmpsl
or
or
add
sahf
rorl
jg
add
iret
or
pop
cmp
or
inc
or
mov
mov
shrb
add
cltd
lods
jl
daa
lock
rcrl
nop
pop
out
inc
test
mov
sub
in
sub
sbb
faddl
xchg
and
or
repnz
sbb
xor
leave
in
xor
and
in
loop
adc
mov
mov
sbb
test
out
ret
adc
and
sub
inc
mov
scas
push
call
sub
mov
jnp
add
mov
sbb
adc
imul
cld
inc
lret
adc
add
push
clc
mov
fidivs
daa
in
jae
add
hlt
mov
cld
and
jl
pusha
lret
sbb
add
mov
adc
mov
inc
fmuls
mov
xor
xchg
adcb
out
mov
mov
pop
dec
fnstcw
pop
push
xchg
outsl
subb
lcall
inc
aaa
jno
jle
adc
jge
pop
std
outsb
js
adc
add
imul
enter
add
xor
bound
jo
scas
and
add
test
sub
push
pusha
mov
dec
sbb
data16
adc
adc
jb
xor
lea
inc
jp
negl
test
cmp
scas
mov
and
int3
out
ds
sub
comiss
sbb
cmp
or
push
add
inc
imul
popf
repnz
adc
fisubrl
pop
popa
jb
pop
dec
enter
scas
push
and
das
sbb
push
nop/reserved
inc
sub
xor
fimuls
push
lea
add
dec
scas
int3
and
jo
dec
mov
xor
add
filds
push
test
aas
stos
add
inc
jl
sub
inc
shlb
cld
das
inc
cmp
pop
call
popa
add
inc
jg
mov
add
std
jmp
hlt
sbb
inc
cltd
lds
dec
outsb
addb
and
dec
fadds
inc
adc
int3
or
and
push
add
mov
mov
sbb
cld
insl
subb
add
xchg
jo
and
adcb
jl
bound
pushf
and
inc
or
repz
jae,pn
mov
hlt
lret
or
data16
fwait
mov
xorb
repz
and
daa
scas
jg
lcall
mov
dec
leave
lret
cmp
movsl
add
sub
sub
or
xchg
cwtl
and
add
pop
xchg
cmp
sub
or
inc
mov
nop
int3
ret
cs
icebp
xor
mov
cmp
loope
inc
dec
mov
mov
xchg
push
add
xchg
repnz
andl
adc
pop
pop
sbb
inc
mov
mov
jge
or
out
loop
xor
clc
adc
int3
sbb
dec
jns
and
daa
in
add
inc
push
mov
outsl
insl
ficompl
xchg
pushf
add
mov
stos
sub
cmp
out
push
add
int3
add
lock
test
jae
cmp
xor
pop
int3
ffreep
push
fwait
lret
cmpsb
in
push
sub
cwtl
int3
add
push
pop
testb
xor
push
test
mov
mov
out
pop
insb
sub
jo
adc
ret
fwait
add
xor
data16
outsb
pop
scas
xor
adc
mov
or
leave
sbb
cmp
adc
and
dec
xchg
push
xchg
dec
sub
mov
push
nop
sbb
popa
or
cmp
xor
xchg
or
loopne
and
sub
loope
call
add
adc
jg
push
and
ss
out
hlt
lock
mov
and
call
int3
jb
and
test
jmp
fiaddl
fcomi
and
cld
xchg
sbb
ret
sahf
add
push
add
mov
adc
cwtl
xor
dec
or
sub
push
movsl
xor
or
and
mov
jl
xlat
rcll
repz
movsl
jge
je
and
aaa
add
add
dec
mov
cwtl
inc
insb
fwait
dec
jle
ja
xchg
es
daa
mov
mov
cltd
in
xor
notb
aas
mov
add
adc
inc
mov
adc
xchg
and
jl
add
in
dec
adc
pushf
mov
add
data16
and
mov
mov
ja
mov
mov
sbb
loopne
outsl
lahf
pop
pop
jbe
inc
mov
shrl
mov
lods
imul
test
jmp
sbb
dec
adc
pop
pusha
and
and
loopne
fdivrl
pop
cmp
push
add
mov
mov
sarl
push
int3
mov
add
es
adc
xchg
and
repnz
out
pop
add
sbb
int
cwtl
push
xor
js
sbb
sub
push
jo
stc
mov
aaa
mov
test
adc
cli
sbb
add
leave
inc
add
sbb
test
mov
cmp
add
sbb
cli
lcall
cmp
mov
inc
fsubs
xchg
in
mov
les
arpl
test
movsb
aam
xor
jbe
dec
scas
in
push
je
enter
cltd
xor
inc
in
add
aas
or
int
dec
or
sub
push
mov
mov
mov
and
rclb
repz
enter
std
je
dec
movsb
or
xchg
push
inc
popa
and
into
and
mov
test
xor
sarb
push
cmp
cmp
xor
pop
mov
push
fdivrs
jo
inc
xchg
pop
mov
rorl
and
les
cmpsl
and
icebp
mov
mov
insl
je
rolb
rcrb
jge
add
imul
mov
dec
or
icebp
je
fadds
sbb
mov
add
aad
or
mov
into
xor
adc
enter
jmp
stos
add
out
popa
rorl
add
les
add
aam
add
mov
mov
call
add
adc
cld
cmp
jle
fidivs
add
add
push
mov
je
jecxz
mov
rolb
cmc
inc
clc
gs
inc
or
fadds
lea
jnp
sarl
rorb
mov
arpl
lds
roll
in
lcall
pop
ret
movups
jle
add
repz
fimull
rorl
adc
add
jns
syscall
jne
inc
into
add
shll
add
cltd
loope
jnp
jno
out
lcall
jae
cmp
dec
sbbb
sub
cmp
jno
mov
fmuls
lods
ret
incl
jne
push
roll
inc
adc
movsb
sbb
push
into
dec
lds
notb
movsb
mulb
roll
sbb
add
cmp
add
adc
add
mov
pop
add
mov
or
cmp
xor
ljmp
add
inc
lea
or
in
fildl
rcll
ficoml
out
fwait
add
les
cmp
jge
push
clc
psubusb
ds
sar
jno
hlt
inc
fadds
lcall
popa
lret
popl
push
aam
pop
push
lock
roll
add
int
mov
mov
fdivl
add
cmp
loope
jecxz
ficoml
aam
inc
dec
dec
pop
add
or
addb
push
cld
pop
push
pushf
jmp
stos
dec
push
pop
pop
or
push
push
ds
sti
add
jmp
pop
orb
pop
add
fisttpll
add
jbe
jle
fsubl
ljmp
lret
enter
pop
inc
adc
lcall
add
movb
int
add
adc
dec
xor
push
mov
adc
mov
in
pop
xor
cmp
flds
lret
roll
sbb
xor
sti
dec
lea
lock
sbb
in
xlat
or
repz
push
stc
xor
in
jecxz
lret
xor
in
or
sti
cmp
lods
mov
push
je
jecxz
or
cmp
and
pop
mov
push
sarb
insl
sub
stos
pop
scas
xchg
jl
pop
jp
mov
add
inc
adc
lret
in
xchg
enter
mov
das
adc
mov
sub
cwtl
add
out
pop
out
mov
out
and
pop
sbb
sub
cmp
leave
les
xlat
rorl
xor
shll
lock
int3
jl
inc
add
fsubs
cmp
pop
or
pop
sbbl
stos
adc
mov
add
call
inc
and
and
sbb
dec
push
cld
test
pusha
scas
cltd
jge
pop
xchg
xor
test
fwait
or
mov
je
das
push
mov
loop
xchg
nop
clc
mov
adc
and
sbb
mov
add
into
lods
bswap
test
mov
sub
pop
jmp
add
adc
sub
dec
adc
add
or
sarl
push
sub
jo
ror
jle
int3
xor
pop
and
mov
cwtl
push
sahf
popa
push
and
adc
xchg
outsb
add
cmp
jnp
out
add
or
xchg
sub
inc
fadds
pop
add
in
mov
xchg
and
jbe
shll
adc
sbb
push
adcb
js
in
movsb
pop
xchg
mov
aaa
mov
faddl
mov
sbb
and
dec
fdivp
insl
les
out
pop
aas
or
and
add
insl
push
idivb
mov
popl
pop
jne
or
mov
mov
add
sub
inc
stos
mov
mov
rorb
cld
dec
idiv
jb
lret
add
out
divb
cmp
movsb
inc
and
lret
xor
pop
mov
jmp
sbb
xor
jp
sbb
sub
clc
and
stos
add
cmp
hlt
mov
das
xor
addb
mov
lret
es
mov
nop
sbb
jle
stos
lock
sti
clc
mov
adc
sarb
or
or
and
mov
je
push
xor
repnz
and
add
insl
ret
sbb
insl
scas
leave
dec
ret
push
cltd
push
cli
movsb
andb
aaa
out
addr16
add
imul
pop
dec
jbe
mov
pushf
int3
inc
or
shlb
mov
test
rcll
out
adc
sbb
in
aas
xchg
in
repnz
push
push
or
or
std
cwtl
sbb
call
movsb
pushf
repnz
pop
and
out
dec
add
add
and
mov
shll
mov
add
in
add
push
pop
mov
cli
insl
shll
les
jmp
dec
xchg
mov
inc
push
xor
cmpsb
shrl
or
leave
dec
in
bswap
pop
and
ret
mov
inc
add
xor
dec
and
loopne
and
test
xor
icebp
lret
vphaddbw
add
cmp
adc
imulb
fcompl
aad
cmp
inc
ja
add
mov
xchg
lahf
imul
mov
jp
popf
cltd
jo
inc
lock
xor
dec
xchg
repz
mov
loop
dec
popf
call
insb
mov
push
cld
jg
add
stos
mov
add
and
pusha
dec
in
leave
cmp
test
lcall
rcr
test
mov
inc
leave
icebp
mov
lea
inc
add
nop
mov
jg
dec
daa
mov
xchg
push
movsb
jp
sbb
mov
aaa
jo
xor
sbb
lret
xor
lahf
fwait
lock
dec
and
mov
sbb
clc
insl
mov
dec
int3
lods
jecxz
subb
add
popf
and
cltd
jge
mov
std
add
pop
xor
negb
and
loop
add
mov
mov
jno
test
shll
push
shrb
jecxz
pop
push
lret
or
xchg
push
add
push
add
test
xchg
push
cltd
icebp
and
xor
sbb
xchg
inc
add
add
fucomp
dec
mov
pop
jno
add
fs
xchg
mov
pop
sbb
ds
sbb
pop
cmp
mov
push
sarl
iret
adc
add
rol
dec
fs
das
mov
in
jb
fisubs
add
test
or
add
pop
nop
lcall
fdivrs
adc
add
ret
push
fdivrl
or
and
inc
mov
or
jo
and
pop
pop
je
mov
stos
es
in
pop
inc
add
lods
out
jno
cmp
pop
add
lcall
mov
rol
repz
dec
out
add
add
jl
in
mov
mov
adc
sub
js
xchg
add
cmp
push
addb
orb
pop
or
mov
ret
xor
insl
adc
es
mov
xchg
cs
xchg
sub
add
xchg
pop
mov
hlt
sbb
lret
cmp
shlb
imul
cwtl
xor
ror
or
mov
jae
add
cmp
popa
mov
nop
std
in
or
mov
sub
or
in
adc
pop
ror
push
pusha
jecxz
and
jns
pop
mov
mov
lock
hlt
out
rol
clc
aaa
inc
fbld
rolb
jmp
test
and
les
call
or
cmp
je
js
dec
cld
addb
jmp
adc
int3
and
iret
mov
jl
add
sarb
ret
ljmp
mov
sbb
xchg
cmp
into
adc
inc
pop
lock
xchg
stos
mov
ret
in
add
leave
mov
push
adc
adc
push
and
mov
xor
mov
xor
or
fldcw
adc
add
xorl
add
cmp
jl
mov
xor
hlt
mov
push
movsl
jg
dec
sarb
pop
jp
loopne
cmc
loop
add
ficompl
pusha
xchg
cli
call
jno
clc
jl
add
jp
in
insl
loopne
call
je
shld
movb
mull
xor
add
les
nop
sub
and
movsb
loopne
push
inc
push
adc
movd
fbld
loopne
pop
dec
or
adc
or
pop
dec
js
xchg
je
push
test
pushl
jae
xor
adc
icebp
insl
adc
movsb
mov
xor
insl
test
or
cwtl
subb
add
pop
add
xchg
jl
cld
or
mov
test
aam
mov
mov
push
in
mov
outsb
add
cmp
repz
pop
into
add
pushf
mov
pop
mov
adc
cli
or
scas
inc
inc
outsb
idivl
js
subl
adc
insb
in
pusha
fistpl
sbb
cmc
mov
cmp
push
add
or
inc
sbb
add
jmp
stos
mov
mov
iret
xchg
cmp
mov
or
adc
rolb
leave
aaa
cwtl
lret
rorb
pusha
and
and
orl
xchg
add
add
mov
stos
shrb
xor
jne
add
sbb
dec
cmc
filds
rorb
cmp
pop
movsl
nop
and
cmpl
pop
jle
inc
add
outsb
test
mov
inc
pop
push
jl
mov
in
jns
pop
mov
mov
imul
push
lfs
and
xor
outsb
ljmp
push
dec
pop
mov
xor
sub
int3
adc
add
aam
mov
xor
insb
loop
repnz
test
add
jb
dec
cmp
pop
dec
or
sub
adc
adcl
test
jmp
jecxz
subb
push
mov
pop
xchg
jae
mov
pop
dec
outsl
adc
sbb
rolb
mov
mov
call
inc
mov
movsl
mov
mov
adc
iret
mov
jne
push
fs
popa
sub
out
clc
dec
lahf
and
lods
or
sbb
or
inc
rol
pop
pusha
jl
add
push
cmp
add
cmp
cmpb
mov
add
movsb
jle
push
out
pop
dec
cmc
aas
fs
inc
int
push
jno
rsqrtps
pop
loopne
in
push
out
sub
jne
or
cmp
fsubrs
ficoms
add
popf
imul
sbb
and
mov
adc
push
pop
sbb
enter
or
and
mov
mov
mov
shl
jl
into
xor
sub
add
inc
and
add
lahf
xchg
decl
mov
push
dec
loope
repnz
in
fucomi
nop
insb
add
mov
push
push
xchg
in
dec
sbb
sbb
xor
push
jmp
adc
leave
add
push
xorl
and
mov
cmp
pop
shlb
lret
add
leave
xor
fwait
cmp
or
xchg
mov
test
mov
nop
sbb
xchg
and
or
test
daa
mov
xchg
hlt
pop
inc
cmpsl
add
or
mov
int3
add
lods
nop
adc
add
cwtl
lret
xor
pop
pop
push
lds
and
shlb
push
push
fs
cmp
scas
insl
dec
adc
inc
iret
ret
pop
add
inc
out
xchg
cmp
and
mov
divl
es
add
and
fst
jp
pop
je
pop
mov
push
push
aam
shll
fiadds
xchg
rolb
adcb
out
repz
jae
test
jmp
rcrb
lods
das
add
shlb
js
aaa
pusha
jno
sub
pop
shll
push
add
nop
call
pop
cli
sub
sbb
add
add
cmpsb
cs
out
pop
add
xchg
stos
jmp
mov
repnz
xor
adc
jne
pop
bound
sbb
mov
nop
inc
add
xor
cmp
and
aad
orb
test
cmpxchg
mov
add
cmpb
add
push
add
and
cmp
and
mov
jl
adc
loopne
sub
xchg
mov
call
xorb
repnz
das
mov
rorb
loope
in
fs
stos
mov
icebp
test
pop
int3
add
je
push
mov
add
test
inc
mov
or
mov
sub
mov
fwait
jmp
inc
cmp
pop
movsl
push
or
xchg
add
dec
mov
loope
and
mov
inc
notb
xor
test
jp
inc
or
adc
adc
fwait
test
jns
nop
outsl
jmp
adc
test
or
lods
addr16
push
dec
or
cwtl
sarb
xor
mov
xor
xchg
inc
pop
sub
notb
xor
fimuls
lahf
push
pop
rcrb
and
add
lret
jge
iret
test
nop
mov
adc
cmp
mov
adc
pop
cmpsb
sbb
lcall
mov
xchg
pop
and
loopne
cmp
sbb
leave
adc
and
int
mov
lods
pop
or
cmpsb
adcb
je
add
pop
nop
hlt
jae
or
xor
push
or
movd
clc
inc
adc
push
xchg
int3
insl
je
add
pop
lahf
adc
and
bound
push
add
xor
fstl
subl
daa
or
enter
aaa
testl
jns
dec
jae
add
pop
int
sub
xchg
test
pop
clc
inc
inc
inc
mov
push
iret
lea
mov
mov
xchg
aad
jmp
adc
push
stos
xchg
sub
mov
cld
outsb
mov
in
inc
and
mov
xchg
ret
push
inc
mov
aam
add
lods
jecxz
dec
nop
enter
pop
sub
sub
add
push
out
icebp
clc
movsb
or
std
aad
cli
xor
pop
jno
push
movups
test
arpl
adc
mov
mov
test
cltd
shlb
nop
mov
ljmp
add
or
clc
or
insl
test
inc
xor
or
jno
inc
cld
xchg
aad
cld
sbb
cmp
mov
cli
sub
or
and
cmp
mov
cld
std
jl
pop
xor
arpl
pop
mov
sbb
push
xor
add
jge
ret
int3
int3
pop
icebp
pop
mov
dec
in
lock
cltd
sbb
and
add
cld
and
js
stc
je
xchg
or
xor
dec
inc
ds
int
js
push
gs
mov
pop
dec
cwtl
or
js
adc
clc
inc
or
mov
and
lods
add
cmp
and
mov
enter
sub
mov
cmp
push
sbb
out
jo
es
and
mov
inc
mov
adc
mov
dec
add
push
push
fs
xchg
cwtl
inc
stos
pop
nop
ja
call
lock
push
in
mov
call
fsub
and
xchg
rcrb
fisttpl
xchg
fsub
fcom
or
fcoml
push
adc
or
xchg
out
xor
or
dec
aad
or
clc
aaa
lahf
xchg
xor
inc
add
sbb
mov
cli
jo
notl
inc
and
xchg
pop
adc
add
lcall
and
xchg
in
add
divl
pushf
fcomps
lret
sub
dec
xchg
xlat
test
or
test
mov
adc
adc
or
sbb
mov
cmp
pop
adc
fisubl
shrb
cwtl
inc
and
add
dec
js
dec
test
pop
enter
xchg
enter
inc
adc
mov
js
test
gs
repnz
fisubl
setb
in
pusha
push
mov
add
les
push
sub
flds
push
dec
xor
test
insl
mov
xor
xchg
mov
sqrtps
jno
pop
inc
leave
mov
incl
or
mov
jle
sti
inc
lea
test
sub
pop
add
fs
jmp
xchg
inc
and
inc
dec
lds
stos
xchg
mov
daa
loop
out
or
mov
lds
xchg
mov
lret
xchg
orb
push
push
and
int3
push
lods
jg
push
xor
xorb
xchg
pop
aad
inc
cmp
stc
dec
sub
push
adc
enter
add
dec
jp
sti
cmp
pop
or
dec
and
sbb
mov
add
mov
and
hlt
push
lcall
icebp
repz
ret
adc
arpl
jns
sbb
jl
xchg
add
jp
and
add
adc
std
push
out
and
push
add
cwtl
movsb
hlt
add
jne
aaa
lods
xlat
daa
mov
nop
xor
test
negl
cltd
add
push
addr16
dec
pop
mov
enter
mov
and
jg,pt
shl
sahf
add
add
hlt
cwtl
in
mov
add
inc
jle
sub
fadd
add
jmp
adc
push
pop
adc
in
loop
adc
mov
pop
sti
sbb
dec
clc
pop
in
in
pusha
lcall
push
xchg
fbstp
fiadds
lods
add
or
je
fisttpl
mov
sbb
adc
pop
fldl
in
jo
lods
popf
xchg
test
test
addl
cmp
jns
add
movsl
adc
cs
sbb
pop
xor
mov
push
push
aas
add
add
in
mov
add
in
clc
pop
and
ret
sbb
cmp
out
aaa
and
in
andl
addb
js
sub
xchg
stc
xor
mov
add
inc
cmp
cmp
adc
cltd
cmp
mov
and
in
pusha
arpl
adc
inc
or
sbbb
add
repnz
push
xchg
cmp
add
jo
dec
adc
sbb
pop
addr16
mov
out
testl
cwtl
pusha
add
add
push
sbb
sbb
or
mov
mov
sarb
or
mov
pop
dec
add
sarl
jge
adc
mov
mov
push
mov
ret
xor
ljmp
sub
cmpsb
shl
cld
clc
mov
lcall
mov
outsl
push
in
nop
xchg
xchg
pushf
add
das
xlat
sbb
dec
sbb
mov
call
xchg
or
jmp
jp
nop
insb
sub
xor
aaa
sarb
dec
mov
pop
sbb
sbb
pop
loop
aas
xor
add
xchg
jae
hlt
add
cld
cmp
adc
ret
inc
mov
les
int3
les
clc
xor
and
sub
mov
stos
pop
sub
divb
mov
movsb
imul
leave
push
xor
fadds
out
loopne
push
orl
and
cwtl
fs
sbb
add
call
mov
sbb
les
inc
xor
test
orb
or
adc
pop
sub
dec
dec
mov
xchg
sbb
jns
daa
mov
jo
mov
jg
movsb
pop
sbb
inc
sbb
xor
jb
xchg
xlat
adc
sbb
adcb
add
cmpsb
sub
xor
push
push
push
mov
mov
aaa
mov
jge
sbb
mov
clc
or
mov
cltd
insb
cmpsl
add
adc
mov
cmpsb
pop
mov
sbbb
scas
pop
test
je
add
mov
imul
mov
inc
xlat
add
pop
dec
sti
xorl
test
das
or
aad
dec
pop
repz
stos
out
leave
mov
in
jl
push
add
cmp
int3
jecxz
and
add
adc
cmp
loopne
lea
sbbl
inc
cwtl
or
add
push
es
cmp
add
inc
pop
xchg
mov
add
xchg
fwait
mov
sub
nop
lret
and
mov
shlb
test
sbb
icebp
cmpsb
dec
mov
les
pushf
out
xchg
rorb
mov
test
call
push
loop
mov
dec
sub
dec
fcomps
cld
enter
and
xchg
sbb
inc
jne
add
sbb
add
lock
mov
mov
xor
filds
je
dec
aam
popl
sbb
and
pop
mov
test
jge
and
add
sub
mov
insl
subl
mov
shll
cmp
mov
out
popf
and
pop
aas
shr
popf
push
into
add
jb
ds
cmpsl
imul
jge
lahf
mov
stos
cmpsb
add
push
sbb
dec
cwtl
xchg
pop
sbb
int3
mov
mov
repnz
scas
jg
inc
and
adc
repz
mov
sbb
xchg
or
lock
adc
add
mov
orl
imul
xor
jno
insb
xor
xor
test
int3
pcmpeqb
mov
or
and
cld
lahf
inc
mov
pushf
dec
cmp
and
mov
mov
jge
push
and
jae
cmp
sub
mov
test
incl
xchg
mov
xor
movsb
sub
ds
stos
add
imul
test
sbb
setp
mov
pop
inc
cmp
sbb
pusha
or
xor
or
push
addr16
movsb
test
sub
in
subb
addr16
sbb
push
jg
xchg
add
jo
pushf
call
repz
pop
sub
mov
mov
and
xchg
add
aam
add
lret
lcall
mov
jbe
stos
add
filds
aam
lea
scas
movsb
cmpsl
push
cmp
xor
jmp
add
stos
and
cmp
iret
sete
mov
xchg
xchg
add
and
and
nop
dec
lahf
int3
fcoms
sub
or
dec
xchg
jbe
sub
mov
shrl
add
add
push
or
dec
testb
cwtl
fwait
popa
pushf
lea
push
add
and
cwtl
mov
add
pop
sbb
mov
and
test
adcb
add
hlt
nop
or
loopne
inc
jno
push
fs
push
insb
add
pusha
in
add
jb
dec
xor
js
in
add
xor
sub
loop
repnz
xor
ds
adc
nop
jg
insb
mov
add
and
imul
mov
jb
mov
add
and
xor
aam
add
pop
cli
mov
in
mov
dec
lock
ds
sub
scas
xor
fsubrs
adc
test
lcall
test
xlat
xor
mov
jb
inc
das
sbb
int
pusha
stc
and
and
out
lret
or
shl
and
or
movsb
dec
jge
add
xor
addb
fisttpll
ja
xchg
les
dec
xchg
cmpb
sub
rcrb
sub
lcall
sub
mov
mov
add
test
stos
jl
je
scas
cmp
sub
jle
mov
pop
loopne
pushf
ja
call
push
je
add
cmp
add
adc
cmp
out
add
add
inc
stc
push
outsb
dec
loop
add
pop
sub
or
negb
adcl
insb
decb
and
rcrb
cmp
movsb
fs
adc
cltd
dec
mov
lret
adc
bound
test
rcrb
repz
imul
or
popa
and
push
adc
pop
jl
dec
adc
ljmp
nop
xchg
cwtl
and
add
mov
inc
inc
out
sahf
ds
cmpb
pop
aaa
cs
in
loopne
in
aaa
out
rcl
clc
nop
popa
addb
in
xor
in
test
fsubp
or
sub
dec
push
push
mov
jns
add
sub
insb
iret
mov
mov
movzwl
add
jno
ffree
mov
xor
lds
addb
sub
and
clc
sti
ds
cmp
mov
je
sbbb
and
fsqrt
dec
mov
pop
enter
xchg
cmp
dec
stc
aam
add
cmpsb
out
fwait
add
inc
daa
sbb
mov
das
jecxz
push
cwtl
enter
lods
jnp
add
jmp
sahf
out
pusha
jnp
andb
adcb
mov
les
inc
adc
xchg
xchg
movsl
shlb
popf
and
add
stos
rcll
mov
xor
sbb
das
js
in
lcall
mov
mov
mov
shll
ss
xchg
mov
sbb
shlb
sbb
jmp
mov
aam
push
add
push
or
jmp
xor
lock
aam
nop
fnsave
jae
pop
adc
icebp
mov
scas
add
mov
aaa
mov
insb
arpl
and
mov
in
xchg
cltd
subl
ret
mov
add
pushf
aas
jmp
add
mov
je
jo
test
cmp
xchg
and
inc
cwtl
pop
mov
movsb
rorl
mov
xor
pop
fwait
stos
cmp
cwtl
dec
mov
inc
pop
cmc
scas
jmp
jbe
jns
icebp
cmp
sub
mov
arpl
inc
imul
pushf
jge
mov
in
add
xor
xor
test
mov
test
dec
cmpsb
das
and
ds
dec
pop
xchg
sub
xlat
adc
call
gs
mov
push
adc
or
popa
push
inc
mov
notb
push
xchg
add
enter
xchg
mov
jle
add
and
inc
in
outsl
mov
movsb
lahf
loopne
mov
add
xor
aad
out
loope
pusha
mov
pop
xchg
push
and
push
loope
rcrl
add
cld
mov
movsb
xchg
test
and
xchg
cmp
add
test
or
mov
xchg
pop
cmp
aam
cmp
hlt
das
stos
sarl
fnstsw
test
aas
jb
pop
scas
fsubl
idivb
test
scas
pop
cwtl
dec
std
dec
clc
cmp
add
rol
testl
jl
mov
inc
add
dec
mov
fsubr
rcrl
jb
inc
mov
add
jge
pop
pop
arpl
int
push
cmpsl
or
fsubr
bswap
aad
sub
addl
lds
mov
arpl
lret
in
mov
adc
lret
daa
shr
mov
inc
add
clc
push
scas
repnz
sbb
imul
cmpsb
add
xor
addb
fisttpll
lea
mov
mov
pcmpeqd
pop
sub
pusha
or
pushf
int
and
add
mov
xchg
xchg
enter
add
mov
loop
add
ret
adc
mov
or
cmp
call
mov
lret
mov
cmp
mov
dec
mov
xchg
adcb
add
in
cmp
cli
xor
adc
test
mov
add
int
shl
cltd
subb
cmc
or
das
popa
jae
and
add
pop
push
pushf
mov
jne
mov
orl
sbb
shll
fisttps
sub
iret
xor
xchg
lds
test
cmp
adcl
pop
clc
xchg
stos
subb
cld
mov
xor
test
das
inc
mov
fmuls
xchg
and
lock
pop
xchg
cmpsb
adcb
test
xchg
test
movl
mov
or
adc
xchg
or
cmp
jp
add
xlat
mov
dec
in
fdivrs
hlt
outsl
or
and
xchg
idiv
push
andb
inc
pop
mov
cmpsl
jle
sbb
dec
repz
mov
or
xchg
cmpsl
add
mov
or
orl
cld
mov
and
lret
add
test
fildll
dec
cwtl
ljmp
xor
stos
add
adc
mov
testb
cld
leave
rclb
add
adc
daa
mov
aam
cld
aam
rorl
xchg
clc
dec
in
popa
jbe
push
icebp
enter
jmp
sub
fimuls
lock
xchg
dec
call
je
cmpb
or
out
cmp
arpl
in
cwtl
inc
je
add
cmp
dec
sub
cld
ficomps
mov
dec
mov
cltd
and
into
ror
rolb
in
pop
cmp
mov
dec
cmp
adc
or
sbb
test
add
add
mov
cmp
movsl
adc
or
push
cmp
pop
cwtl
pop
jns
push
stos
insb
repz
ljmp
sub
cmp
cmp
xchg
repnz
clc
pop
daa
cwtl
fs
in
xor
mov
xchg
inc
xor
enter
xor
cmp
dec
push
iret
loop
sub
sub
mov
xchg
pop
inc
aas
or
xlat
gs
dec
ljmp
sbb
nop
and
and
in
popf
cwtl
loopne
xor
inc
cmp
and
leave
mov
imul
pop
sbb
jle
xor
cld
push
std
sarb
cltd
lahf
jl
stos
xchg
or
loope
mov
sti
pop
cwtl
loopne
push
dec
xor
xor
lahf
cmpb
and
mov
mov
sahf
sarb
jmp
popf
lods
mov
mov
in
mov
and
dec
mov
add
mov
icebp
pop
popl
jb
and
and
add
jo
test
les
inc
xchg
push
jns
popa
subb
sbb
add
or
fisubs
out
orb
push
pop
out
mul
cwtl
or
mov
lahf
and
xor
sbb
int3
mov
mov
sti
sbb
mov
pop
adc
sub
add
and
inc
out
mov
and
addr16
shlb
adc
test
push
xorb
in
sbb
cli
pushf
pushf
pop
mov
inc
lock
repz
insl
inc
frstor
dec
cmp
addb
outsb
mov
sbb
add
xor
and
pop
sarb
and
daa
fldenv
xchg
inc
dec
and
push
mov
mov
je
jl
ds
int
sbb
imul
int3
sub
pop
adc
mov
inc
jge
outsb
mov
push
jl
dec
fwait
pushf
xchg
push
test
and
jl
nop
cmpsl
jno
ljmp
mov
mov
fisubs
xor
int3
lock
pop
test
jmp
test
xchg
add
xchg
cmp
bound
push
ds
or
incl
je
mov
cmp
add
mov
lods
push
push
add
clc
adc
addr16
jg
mul
movb
inc
gs
mov
cmpsb
icebp
xchg
pop
or
xchg
push
jg
mov
jecxz
mov
aaa
inc
sbb
inc
insb
add
jmp
push
fimuls
xor
shlb
scas
adc
sub
aaa
or
cmp
cmp
sub
pusha
inc
sub
or
sub
rcr
pop
stos
ficomps
dec
out
add
jecxz
insb
aas
mov
dec
lods
in
and
add
out
xchg
mov
cmp
cs
xchg
push
inc
cwtl
jmp
or
push
mov
movsb
push
pop
jne
fsts
xor
js
shlb
out
push
notb
sarl
mov
ror
xor
mov
das
popa
inc
popa
sub
clc
iret
cmpsl
test
mov
push
xor
popa
int
nop
test
sbbl
dec
ror
pop
imul
inc
test
jo
sub
xchg
sbb
sub
test
dec
mov
lahf
mov
mov
dec
cmp
dec
jo
stos
lods
outsb
adc
add
adc
mov
xor
lret
clc
int3
bound
dec
dec
pop
pop
mov
xchg
sbb
roll
xor
cmc
je
or
and
pop
adc
sbb
sbb
fstps
cltd
jb
out
add
mov
jp
or
or
lahf
sub
and
push
sbb
or
inc
push
pusha
adc
adcb
inc
mov
adc
or
popa
les
and
scas
xchg
stos
inc
ret
call
pusha
fsts
inc
outsl
enter
or
push
jmp
xor
test
in
push
push
pop
and
in
and
sbb
and
sbb
add
in
push
test
insl
and
and
pop
inc
int
imul
cmpsl
setns
sbb
adcl
jnp
ss
adcb
cld
mov
in
arpl
or
or
popa
mov
jg
jg
bound
push
and
jae
add
je
sbb
pushf
and
inc
and
and
or
nop
stos
or
les
sub
push
dec
xor
pop
inc
rolb
jo
inc
pop
lods
test
jbe
or
mov
out
and
sbb
push
pusha
bound
inc
adc
and
sub
test
and
mov
mov
testb
daa
or
fcoml
sub
mov
popf
xor
out
cld
and
and
nop
and
xor
mov
adc
push
mov
in
dec
js
les
and
adc
dec
std
aaa
cmp
pop
mov
pushf
cmc
lock
jno
add
das
add
fnsave
push
subb
test
xor
jp
int
dec
or
adc
add
add
pop
loope
push
xchg
sub
jl
and
dec
lahf
add
fists
into
fcompp
and
adc
ja
inc
les
movsb
sbb
cmpl
aam
inc
xor
and
jbe
mov
mov
popf
ljmp
and
pusha
mov
lock
pop
and
dec
cmpsb
dec
lret
data16
hlt
mov
fcmovbe
lret
test
add
test
lds
dec
ds
adc
xchg
std
add
push
xor
fimuls
xor
loope
mov
xchg
xor
sbb
sbb
stos
enter
cmp
jo
test
mov
movb
nop
xchg
fs
adc
je
sar
pop
data16
ds
inc
out
mov
push
mov
and
cwtl
adc
aas
pop
cltd
mov
push
lock
xchg
add
pushf
ret
testl
adc
xchg
push
movl
inc
xor
sbb
xchg
mov
sarl
pusha
rclb
das
pop
js
jmp
fcoml
add
shrb
xchg
and
aam
sub
mov
js
js
sbb
xchg
fldl2t
shr
xchg
push
clc
enter
cld
cwtl
ja
push
lods
dec
nop
xchg
repnz
cwtl
push
mov
pushf
popl
add
enter
loope
movsl
jb
mov
mov
call
fadds
push
cwtl
push
add
dec
xchg
je
sub
cmp
rolb
leave
jae
cmc
dec
add
xchg
sbb
add
loope
and
insl
pop
adc
mov
push
and
rolb
mov
add
subb
mov
aaa
push
js
mov
pop
sar
clc
popf
aam
push
lds
push
js
call
sbb
fdivs
xlat
andl
cs
xchg
sbb
push
pop
loopne
lahf
pusha
xor
xchg
add
push
push
pushf
bnd
addb
nop
jne
pop
fucomp
add
iret
inc
call
add
mov
aam
add
jg
lods
pushf
mov
and
sub
stc
pop
hlt
rcl
or
aaa
pop
je
add
dec
and
add
or
add
pop
xchg
pop
daa
sbb
dec
mov
lea
cmpsb
cmp
icebp
test
out
adc
call
sub
push
cmp
xchg
pop
notl
cmpsb
call
es
mov
or
push
mov
mov
sbb
dec
inc
test
ds
and
dec
es
loope
fdiv
orb
and
push
test
push
adc
rcrb
sbb
push
sub
push
in
add
into
ja
or
in
mov
ret
cmp
and
add
sub
je
xor
ja
lret
xor
lods
mul
nop
jno
dec
push
int
in
push
adc
adc
and
les
lahf
je
jmp
mov
cmp
cmc
lahf
js
inc
and
pop
test
lock
lock
cmp
mov
xchg
push
repz
mov
rcrb
inc
and
pop
jae
add
dec
ret
or
fldl
test
orb
push
xchg
popa
cli
iret
push
fs
mov
jo
pop
shl
pop
daa
add
cmp
movsb
fdivrs
int3
add
aam
cmp
lea
adc
ja
addb
aam
int
test
pop
addb
clc
pop
adc
jmp
jae
pop
adc
dec
in
xchg
and
ret
add
and
sbb
fcompl
out
add
sbb
adc
mov
js
rorb
xchg
cli
sbb
mov
adcl
jbe
add
sub
jmp
mov
jle
xor
xchg
sub
jne
int3
rcl
cld
loop
xor
mov
add
in
clc
mov
mov
scas
pop
loope
xchg
mov
pop
sbb
and
adc
sub
or
stc
js
pop
pop
cmc
leave
mov
cltd
sub
addl
and
in
mov
cwtl
add
das
jno
adc
add
jb
nop
sets
dec
push
mov
cmp
shrb
sbb
mov
int3
jbe
or
movsb
pop
mov
gs
sub
ror
add
mov
clc
cmp
dec
or
pop
test
jo
add
lret
loopne
loop
ljmp
inc
hlt
loop
les
leave
shlb
add
xchg
sub
or
adc
and
pusha
cwtl
jp
rorl
lret
bswap
icebp
add
adc
das
rorb
inc
add
cld
cli
add
xchg
jo
mov
add
sti
stc
ds
movsb
test
pop
das
mov
pop
mov
ja
leave
push
fcmovnb
dec
cmp
sbb
mov
mov
dec
lret
imul
add
add
jno
or
mov
out
sbb
pop
xchg
movsl
xchg
rolb
popa
mov
jne
mov
inc
es
enter
jno
vpmullw
pop
subb
xor
and
pop
lds
stos
cmp
add
rorb
jecxz
fcoml
call
loope
ja
and
call
mov
cmpsb
cmp
aas
mov
movsl
and
add
sub
jl
pop
ds
sti
jns
call
loopne
lcall
dec
in
push
sbb
loopne
dec
jns
test
push
xchg
adc
addr16
add
in
nop
jmp
cltd
or
sub
fcomp
orb
aaa
or
outsl
or
push
jbe
or
jmp
jg
call
enter
add
xlat
ret
ficoml
xchg
pusha
add
sub
jp
cmc
mov
xchg
inc
mov
dec
lds
lds
dec
and
enter
add
xchg
fs
outsb
xchg
and
mov
dec
aas
daa
testb
jl
push
inc
adc
sub
push
inc
add
je
ljmp
and
mov
in
ss
and
mov
fcompl
mov
in
in
and
mov
lcall
negl
and
mov
add
lods
je
xchg
hlt
or
sbb
mov
add
sar
lock
push
sub
dec
cmc
dec
lcall
adc
add
int
dec
adc
fcompl
jae
ss
and
je
mov
push
pop
out
inc
push
fmuls
adc
mov
mov
push
push
test
xchg
movsb
add
je
lds
add
xchg
loop
mov
dec
xor
cmp
inc
iret
push
jle
nop
lcall
fcoms
decb
and
inc
dec
sub
xor
add
sub
in
std
xchg
faddl
jo
fcomps
std
aaa
adc
push
and
and
shll
clc
movb
dec
das
and
lret
leave
scas
rcrb
or
daa
cmpsb
adc
cmp
js
aaa
mov
andb
pop
icebp
adc
or
leave
xchg
xorl
add
in
dec
mov
in
xchg
push
lret
or
mov
test
mov
jg
sbb
adc
adc
hlt
xchg
das
jns
add
inc
lret
xchg
testl
dec
adc
rclb
imul
or
and
mov
out
and
stos
cwtl
jae
xor
mov
andl
loop
sti
sarb
hlt
mov
add
sbb
adc
outsb
test
sub
add
leave
add
xchg
jb
sbb
and
push
xchg
popf
sahf
and
jge
and
add
xchg
sub
loope
aas
or
inc
mov
call
dec
inc
movsb
add
lret
mov
cmp
in
lret
mov
add
out
orb
outsb
cmp
je
imul
inc
lock
sub
inc
iret
sub
pusha
xchg
js
je
out
sub
leave
add
push
mov
pushf
adc
jno
jb
pop
ds
inc
int3
dec
xor
add
cwtl
jg
dec
subb
and
into
in
and
pop
sbb
test
or
sbb
clc
scas
dec
xchg
rcll
shl
shrb
mov
add
in
push
add
jb
add
jecxz
rcrb
cmpl
jne
xlat
jle
movsb
je
rorb
ror
repz
cmp
rolb
or
jl
es
sub
pusha
and
mov
or
xor
xchg
sbb
xchg
adc
xor
xchg
mov
jno
add
loop
pop
nop
mov
adc
dec
sub
rcrb
xor
fcomps
xchg
stc
int
and
ret
pop
pop
xchg
add
es
sub
repz
add
popf
aam
loop
add
add
jge
pushf
nop
test
cmp
mov
adc
adc
sarb
mov
mov
add
cmpsl
scas
outsb
xchg
andl
fs
jl
pop
jg
mov
outsl
add
std
add
pushf
xorl
jne
sahf
push
shll
pop
out
xchg
adc
int3
push
xchg
sbb
sub
loop
mov
add
mov
push
mov
loop
inc
push
mov
sbb
out
repnz
enter
inc
sub
cmp
jecxz
adc
xor
sub
push
cli
push
or
test
add
das
mov
dec
xchg
scas
testb
cmp
mov
sbb
pop
inc
mov
push
add
xchg
mov
xchg
add
pop
js
sub
hlt
sbb
cmp
les
xchg
scas
lods
inc
adc
sub
les
aam
dec
add
bound
jnp
sbb
mov
sahf
sub
lods
aas
jge
pushf
add
lods
ret
test
pushf
mov
je
sbb
inc
sub
clc
and
sarb
dec
and
mov
and
nop
frstor
and
hlt
add
ss
push
pop
sbb
or
cmp
pusha
pop
scas
xor
nop
arpl
and
aam
dec
or
sbb
xchg
xchg
push
mov
cmp
mov
add
sub
call
out
sub
add
mov
dec
push
in
add
nop
jne
mov
and
dec
int3
adc
std
and
and
out
pop
pushf
inc
in
jns
jae
enter
jmp
adcb
xor
aam
xchg
pushf
sti
adc
cmpsb
dec
adc
dec
orl
test
push
jge
push
add
push
sbb
dec
push
sbb
dec
dec
mov
lds
mov
xchg
xchg
inc
sbb
xchg
iret
in
enter
pushf
and
pushf
pop
jecxz
test
fs
xor
les
sbb
pop
fistps
les
pop
mov
xchg
test
inc
or
andl
subb
xchg
add
or
cmp
addb
and
aad
mov
ret
dec
call
cmp
fwait
add
imulb
js
add
pop
sub
lcall
push
and
jge
pop
ret
and
adc
sti
pop
lret
add
sbb
pushl
loope
add
mov
popa
clts
lock
pop
mov
mov
loop
jecxz
adc
and
xchg
scas
loopne
je
dec
jecxz
add
nop
mov
incb
sbb
lods
inc
pop
mov
sbb
jl
sub
or
sub
push
xbegin
cmp
das
jb
xor
ss
or
inc
cmc
pop
cwtl
pop
test
invd
das
adc
add
cwtl
adc
pop
add
sub
icebp
aad
mov
jb
add
dec
xor
and
pop
cwtl
in
adc
rorl
mov
nop
sub
xor
fldl
mov
or
loopne
cmp
pop
mov
nop
inc
mov
sarb
aad
mov
cwtl
lods
xchg
rcl
sbb
inc
mov
stos
pop
xor
dec
sub
sbb
clc
push
xchg
cmpsl
or
jl
xchg
jne
dec
push
movsl
push
insb
adc
inc
dec
xchg
stc
mov
test
and
push
pop
icebp
das
call
lea
stos
mov
xor
dec
test
cwtl
je
dec
jmp
mov
jo
cmp
leave
mov
pop
int3
cld
lahf
movsb
pop
std
jmp
inc
sub
out
xchg
adc
dec
push
adc
shrl
sbb
pusha
sub
in
ret
push
out
push
sub
or
xor
je
int3
pop
mov
xchg
and
cltd
jns
lods
xor
xor
repz
or
pop
jbe
test
sub
nop
inc
int3
xchg
push
cwtl
sbb
add
xchg
out
xchg
test
pop
or
xchg
jmp
inc
sub
pop
dec
and
cld
mov
mov
mov
movsb
inc
out
js
add
adc
loope
xchg
mov
or
or
add
cmp
or
or
pop
dec
arpl
int3
nop
adc
push
sbb
repz
cmpb
pop
push
mov
sub
pop
les
loopne
cwtl
rolb
loope
subb
cwtl
lods
repz
add
jnp
mov
pop
inc
cli
mov
or
inc
scas
popa
xchg
rolb
jp
push
sti
enter
bound
leave
loope
js
mov
jb
and
hlt
das
pop
data16
fsubl
and
enter
or
push
test
or
jmp
mov
pop
dec
rol
or
cli
adc
je
push
je
xchg
les
iret
or
fwait
xchg
push
inc
mov
mov
incl
lds
lds
mov
mov
cmp
and
add
jle
xor
xchg
xchg
jo
adc
mov
xchg
in
inc
jecxz
add
les
repz
in
jo
xor
xchg
mov
cmpsb
and
loope
add
lahf
rolb
xor
daa
js
fildl
ret
int
lock
xchg
mov
add
and
xchg
out
xor
bound
mov
sub
call
rolb
rcl
pop
mov
imul
out
pusha
inc
cmp
les
adc
les
ljmp
xlat
repnz
fistl
hlt
add
movsb
inc
lds
call
cld
test
jl
rclb
pusha
fidivl
sub
test
mov
add
dec
in
aas
pushf
lret
xchg
and
add
int3
cli
jmp
loopne
dec
jp
pop
mov
lea
add
divl
push
add
rolb
jns
and
jbe
or
inc
lcall
je
xor
pop
pop
fs
cmpl
cmpsl
lock
cmp
adc
add
dec
push
lret
push
mov
lahf
pop
movups
and
and
into
shll
test
es
xor
xchg
jae
inc
std
shl
and
mov
lock
push
adc
lret
xchg
push
add
cmp
shl
movsb
jo
les
jecxz
dec
xor
loope,pn
pop
insb
fs
xor
and
pop
mov
je
mov
in
and
jbe
sarb
cwtl
sub
in
adc
bound
add
pop
cmpsl
inc
cwtl
imul
mov
inc
mov
mov
cwtl
inc
cmp
test
pop
push
test
xor
pushf
xor
jecxz
subl
jb
lea
sub
push
cltd
jnp
inc
or
pop
mov
test
push
shll
aam
rorb
call
rclb
nop
add
dec
out
lock
int3
jg
cltd
cmp
sbb
add
inc
sub
jne
cmc
push
xchg
pushf
lea
test
jo
xchg
and
pop
sub
jge
cmp
vmovups
inc
xchg
paddw
rcrb
dec
lods
pop
inc
cmpsb
sub
inc
aam
faddl
cmc
mov
cmpb
scas
aaa
cwtl
add
jno
out
cltd
mov
mov
outsb
loop
scas
xchg
js
and
cltd
add
mov
mov
mov
jno
test
sub
leave
add
xor
push
sbbl
xchg
test
int3
inc
fucomp
pushf
and
or
ret
or
push
call
lret
or
mov
sub
dec
sub
das
lret
clc
mov
mov
out
or
in
sbb
hlt
cli
fcoml
add
pusha
fcompl
add
sbb
jno
ret
pop
lods
xor
jo
or
pop
pushf
add
lahf
jb
or
lds
cli
sbb
movsb
aam
add
jnp
cmc
jl
sbb
jmp
jmp
bound
pop
sti
jo
and
and
ret
push
xchg
mov
dec
xchg
adc
mov
inc
add
lcall
ljmp
in
push
pop
and
or
les
out
insb
sub
cmp
and
mov
fsubs
ss
jo
adc
pop
pop
or
xor
clc
fadd
add
sbb
stc
mov
jnp
es
xchg
mov
xchg
out
pop
scas
imul
icebp
xchg
and
bndldx
lea
clc
and
jl,pt
xchg
xchg
mov
mov
inc
cld
inc
lock
icebp
add
pop
cmpsb
push
movsl
loopne
cmp
mov
add
xor
test
jge
cs
add
push
rolb
mov
call
mov
sbbl
xchg
and
xor
add
sub
mov
enter
and
xchg
pop
xor
mov
nop
inc
loopne
dec
ds
adc
jo
mov
lods
xchg
adc
and
adc
rclb
pop
cmp
or
enter
js
sahf
pop
mov
mov
xor
and
bound
daa
scas
and
std
sbb
jg
fists
mov
cmp
xchg
pop
fs
test
jl
add
push
aaa
and
loope
pop
push
repz
xchg
sbb
nop
negl
movsb
rcrb
adcb
inc
adc
mov
sub
cwtl
hlt
fcmovnb
inc
gs
test
add
pop
xchg
mov
xor
loop
rorb
leave
push
xchg
push
xor
or
lds
xor
xor
je
adc
xchg
inc
pop
popa
mov
xchg
pop
fs
sub
cmp
popa
adc
lret
add
int
jmp
js
and
push
sub
int3
or
fwait
nop
mov
push
sbb
inc
push
adc
mov
add
cltd
arpl
pusha
and
shr
and
xchg
in
push
adc
outsl
sbb
roll
js
je
mov
pop
fsubrl
orb
jl
lds
or
or
cwtl
jno
mov
rep
in
lock
fs
inc
add
rcrb
xchg
out
jbe
and
call
sbb
test
add
pop
lret
and
and
fnstsw
loope
loope
inc
or
jl
fs
mov
sarl
lods
lret
hlt
les
add
mov
or
lea
pop
lods
inc
leave
pop
mov
cltd
leave
js
les
adc
add
inc
orl
mov
hlt
lods
dec
xchg
fisubrs
mov
xchg
push
pop
lcall
jg
pop
xchg
pop
push
mov
jbe
aas
subb
jnp
pushf
pusha
hlt
jp
loop
jg
sbb
or
test
sbb
add
das
sub
mov
je
cmp
xor
pop
push
pop
xor
cltd
js
xor
adc
mov
incb
jb
or
bound
and
mov
sub
cmp
jl
adcb
add
imul
cmc
test
in
les
shlb
and
xchg
ja
orl
lahf
xor
jns
movsb
push
mov
pop
add
xlat
dec
stc
pop
cmp
cltd
pop
test
lahf
cld
inc
daa
push
decl
cmp
subl
or
xor
insl
les
xor
pop
add
cltd
pop
inc
scas
daa
fstpt
xchg
jmp
insl
sahf
adc
or
call
mov
or
adc
add
xorb
addb
push
ret
or
pop
test
add
fdivs
fwait
cmp
xchg
pusha
nop/reserved
test
and
sub
jg
or
and
in
jbe
adc
js
sbb
sub
lahf
and
cwtl
or
out
and
adcb
lahf
mov
lcall
movsl
and
imul
inc
sub
add
nop
dec
xor
mov
jae
pop
jle
add
lcall
dec
or
fstpt
orl
inc
sbb
xchg
add
in
add
pop
in
mov
inc
mov
xchg
pop
xchg
imul
mov
negl
xchg
dec
push
and
dec
cmp
add
pop
fidivrs
idivl
pop
pushw
pusha
and
jno
sub
int3
in
push
push
scas
inc
xchg
dec
push
leave
xor
test
sub
cmp
setge
or
test
push
add
idivl
and
add
test
clc
jl
das
sbb
inc
dec
test
loop
cmp
repnz
aam
jbe
rolb
xchg
mov
add
or
in
ret
data16
add
out
xchg
test
jo
fsubrs
decl
stos
je
pop
mov
add
mov
sub
cmpsb
in
andl
enter
test
pop
loope
cmp
lahf
cmpsb
mov
add
icebp
adc
or
addr16
pop
add
sbb
sub
mov
gs
aaa
popa
add
or
ret
fwait
add
subb
mov
mov
clc
pop
pop
fs
add
xor
jae
lahf
xlat
stc
push
push
add
dec
push
dec
pop
out
pop
and
add
jle
mov
or
ss
dec
nop
mov
out
ss
push
cmp
jb
sahf
aaa
xchg
mov
enter
lcall
outsb
pop
sub
mov
out
add
ss
xchg
add
mov
in
iret
add
loop
adc
add
mov
shll
mov
or
add
xor
push
push
mov
aaa
inc
dec
push
sub
fwait
addr16
ljmp
pop
add
jl
xor
cmp
push
mov
inc
ljmp
jo
ss
shlb
jo
es
sbb
in
xor
or
mov
addl
inc
pop
mov
ret
or
ljmp
ret
sbb
test
mov
cmp
sub
or
xor
cli
sbb
adc
lahf
clc
pop
mov
repnz
lock
loopne
or
push
aas
jne
jnp
cwtl
pop
sub
mov
jl
push
lds
jmp
mov
nop
jb
lods
add
sub
and
xor
adc
or
cmc
cmp
inc
mov
shll
iret
addr16
pop
bound
push
jns
or
fdivrp
into
push
rcrl
subb
push
loopne
dec
add
iret
scas
or
jno
xor
or
test
push
in
adc
and
aaa
sbb
mov
gs
mov
jns
pop
push
mov
jb
adc
xor
aas
jae
adc
xor
fucomip
and
lea
ret
push
and
lods
xor
clc
pushf
mov
mov
imul
adc
pop
cld
insb
xchg
mov
arpl
pop
xor
imul
add
pop
jo
gs
xor
add
or
xor
inc
nop
daa
adc
shlb
cmp
leave
into
cmpb
add
dec
push
fdiv
test
mov
clc
nop
push
adc
in
xlat
jnp
and
add
stc
pop
imul
xchg
fdivrs
ljmp
sub
rcr
cmp
push
mov
data16
xchg
push
push
sub
pop
or
jg
imul
push
xor
addb
push
and
inc
in
xor
js
les
cli
incb
inc
add
or
mov
insl
sbbb
ljmp
jb
loope
movsb
dec
add
sub
test
ret
ljmp
orb
push
fwait
add
in
mov
or
adc
int3
or
std
adc
cmp
dec
cli
xchg
cmpsl
mov
lock
pop
push
mov
and
mov
push
orb
loopne
xchg
or
push
mov
add
jge
pop
testb
ljmp
decb
es
push
add
pop
jbe
xor
sbb
ljmp
cltd
movsb
mov
rolb
dec
inc
inc
mov
ljmp
nop
push
addr16
inc
jl
or
and
dec
xor
cmp
shl
mov
add
jb
adc
dec
mov
out
aad
push
sub
and
and
adc
or
leave
inc
inc
test
mov
push
push
fs
loop
sbbl
xor
pop
adc
in
std
sub
ljmp
xor
or
push
rolb
adc
out
sub
mov
add
add
pop
add
mov
test
jmp
mov
mov
or
mov
add
clc
xlat
xor
pop
or
imul
push
mov
push
add
sub
pop
push
inc
mov
sub
push
pop
mov
nop
inc
inc
sbb
pop
adc
ja
lcall
filds
imul
test
mov
inc
subl
out
cmpb
aam
frstor
pushf
mov
add
dec
inc
add
js
fnstsw
xchg
jnp
daa
or
adc
push
xor
cmp
add
insb
add
lods
inc
or
sub
jae
es
inc
pop
adc
je
pop
sub
jo
pop
adc
pop
dec
sub
cmp
rcl
jecxz
sbb
xor
sbb
pop
mov
inc
adc
sbb
mov
ret
dec
jb
in
icebp
or
adc
add
int3
xor
push
mov
ljmp
jbe
in
lret
mov
es
lods
pop
mov
sub
or
fsub
adc
jbe
pusha
cmpb
or
ljmp
ja
xor
adc
sbb
jnp
dec
fiadds
lock
pop
jp
dec
push
pusha
and
pop
andb
xor
add
mov
cs
dec
out
mov
push
mov
sti
push
mov
adc
inc
mov
sbb
push
sbb
pop
jo
or
pop
inc
push
mov
push
push
pop
pop
shlb
ljmp
add
sub
jns
and
ljmp
sub
and
mov
or
lret
leave
cmp
pop
mov
arpl
sub
fwait
int3
pop
ja
jmp
cli
pusha
mov
lods
mov
and
imull
arpl
jmp
xor
and
add
mov
and
mov
push
mov
sub
pop
jmp
push
mov
rcll
fldl
dec
push
paddsb
pop
or
xorb
sub
push
lea
imul
test
rorb
or
or
pop
fwait
pushfw
aaa
mov
subb
dec
aaa
add
sub
dec
sbb
dec
push
fcoml
push
add
mov
mov
out
ss
or
roll
clc
in
stos
add
addr16
test
lea
push
jmp
inc
push
mov
es
dec
fisubrs
pusha
cmp
adc
dec
inc
pop
inc
mov
jno
icebp
add
jbe
rolb
pop
sti
in
pusha
imulb
jecxz
add
xor
test
fldcw
out
in
leave
adcb
xor
and
mov
sub
repnz
int
in
popa
dec
or
pop
pop
push
push
mov
jno
push
lcall
shr
push
mov
push
push
xchg
xchg
mov
add
imul
cmp
pop
xchg
push
cwtl
cmp
aaa
dec
jbe
mov
sbb
scas
inc
cmp
int
xor
dec
imul
lds
push
shlb
ljmp
int3
mov
mov
testb
loope
sub
dec
dec
push
in
cmp
or
sbb
shr
shrl
or
jmp
mov
lock
cmp
add
mov
cwtl
and
cmp
cmpl
sbb
jmp
mov
push
mov
popa
out
add
push
sub
cld
fnstsw
push
fdivrp
and
rolb
xor
filds
rorb
or
jmp
and
pop
jae
stc
in
loop
shrl
pop
push
rcr
fxch
fdivr
xor
and
sbb
int3
orl
xchg
adc
push
push
rolb
add
mov
xor
add
mov
jno
jmp
push
notl
pop
xchg
shrl
or
add
pop
add
jmp
ret
pop
cmp
jnp
and
inc
add
or
pop
ror
pop
add
outsl
addl
pop
push
jmp
push
mov
add
leave
fcompl
icebp
das
or
bound
ficomps
sub
jmp
or
add
add
pop
push
push
es
push
mov
add
shr
push
mov
xor
cmpl
and
lret
in
add
decb
or
mov
jmp
cwtl
jne
dec
cmc
pop
rcrb
adc
fstps
orl
push
xor
sub
and
insb
sub
dec
jecxz
push
sbb
nop
jns
xor
loope
mov
cmpsb
push
cmpsb
inc
test
out
subb
xor
push
add
and
addl
cmp
push
xor
add
pop
es
cld
push
orb
pop
add
pop
pop
push
or
xchg
mov
or
mov
xor
outsb
cmpsb
dec
aad
jno
pop
add
adc
outsb
mov
dec
xor
or
lret
inc
ret
jmp
rcll
lret
push
and
sbb
daa
dec
sub
mov
push
sbb
jecxz
leave
jmp
add
sub
inc
jb
jmp
int3
and
in
xchg
push
inc
ja
inc
rorb
cmp
jmp
mov
adc
push
mov
sbb
loop
add
pop
push
push
mov
nop
mov
mov
in
js
xor
jae
xchg
cmp
add
and
fsts
or
out
in
pop
std
rcr
sub
shll
or
pop
add
or
sbb
fbld
pop
movsb
sbb
add
aaa
xor
orl
lret
lods
cmp
fcomps
pop
pop
aaa
clc
cld
jo
nop
test
xor
and
aas
sti
jmp
mov
push
std
add
inc
cmp
enter
fldl
notb
push
push
mov
xor
push
add
and
jne
popa
pop
mov
mov
mov
fcmovu
subb
adc
sub
inc
adc
sbb
mov
jmp
push
jmp
not
jle
push
imulb
add
push
iret
rcrb
sub
dec
mov
mov
xor
cmp
leave
mov
jp
popa
jnp
push
add
outsb
test
das
sbb
pop
jmp
fdivrs
das
leave
or
cmc
add
jmp
ret
adc
popf
loope
out
pop
sub
xchg
add
pop
dec
xor
rcl
mov
push
xchg
adc
sbb
in
nop
popf
push
mov
push
ret
xchg
daa
ret
mov
loope
call
push
or
xorl
inc
pop
inc
xor
mov
push
inc
push
sbb
xchg
xor
adc
dec
mov
and
cmp
cmp
push
xchg
adc
ss
mov
add
sbbb
pop
or
call
or
pusha
mov
and
adc
add
repz
jmp
testl
lsl
push
or
lock
out
fstpt
cmovno
and
xchg
andb
int
aam
loope
mov
or
int
jne
dec
mov
mov
pop
jmp
cmp
sub
jb
psubsw
je
hlt
pop
dec
ss
aam
add
jp
js
mov
jno
jmp
lds
cltd
stc
add
add
add
pushf
ljmp
shlb
xor
xchg
inc
jbe
out
mov
pop
inc
sub
out
outsb
jmp
add
fcoml
inc
dec
in
rcrb
aam
add
mov
pop
sbb
insb
bound
mov
loop
dec
add
and
rcrl
mov
sub
mov
leave
test
cmc
ss
call
fcoml
mov
pop
push
push
aad
push
push
inc
mov
movsb
cld
pop
jnp
mov
adc
in
dec
jne
or
shrb
dec
and
shlb
mov
dec
add
and
sub
sub
mov
or
ret
and
movl
cli
xor
cmp
ficoms
add
call
fs
dec
push
pop
push
mov
mov
neg
addl
sub
sti
sub
fiadds
repz
add
sub
es
sub
rcrb
sub
fwait
push
xchg
push
mov
es
stc
pop
imul
sub
clc
not
cmpsb
or
xchg
add
sti
cmp
imulb
je
mov
daa
or
push
pop
cmpsb
add
push
xchg
push
xor
adc
loopne
icebp
mov
sbb
notl
enter
lods
add
inc
mov
pop
outsl
push
xorb
add
push
push
pop
push
push
popf
loopne
or
insl
add
outsl
sub
add
in
mov
popa
fnstenv
or
xor
inc
cwtl
or
movb
sub
jmp
push
mov
push
mov
inc
adc
dec
nop
jo
xor
fstl
or
movsl
xor
fldl
lea
call
xor
pop
sbb
cltd
add
bound
rcl
sub
jmp
mov
cwtl
sbb
dec
add
jmp
mov
pop
out
dec
pop
aaa
and
and
imul
cmpsb
stos
gs
push
out
call
adc
and
jecxz
dec
inc
or
jmp
or
ficomps
sub
push
xchg
in
les
jmp
aaa
mov
shl
pop
push
push
lock
int
add
loope
push
std
adcb
jae
mov
adc
cmp
sahf
dec
mov
mov
rcrl
flds
ret
cli
xchg
mov
adc
jo
add
mov
popa
jmp
ficoml
dec
lcall
adc
loope
pusha
push
mov
emms
iret
or
xchg
push
aaa
pop
pop
push
dec
add
push
cmpb
inc
pop
add
sub
or
test
adc
test
dec
jle
ljmp
pusha
inc
inc
jo
pop
pushf
dec
jmp
sbb
adc
add
push
mov
sarl
ret
mov
clc
jmp
bound
enter
fists
add
cmp
xor
stos
xlat
jmp
shl
pop
jb,pn
fistpll
or
inc
stos
ds
lret
cwtl
dec
sbb
and
out
add
push
dec
add
and
xchg
xchg
jle
shll
btc
das
and
xlat
mov
repz
bound
cltd
ret
push
lcall
or
sub
jg
jo
cmp
sub
xor
insb
push
mov
or
jmp
xchg
mov
mov
or
sub
adc
mov
mov
out
cmpsb
cmp
jno
xchg
test
jmp
into
xor
fidivl
push
fidivrl
push
xor
push
sahf
sbb
push
pusha
roll
push
testl
push
jmp
cmpsb
pop
sbb
dec
xchg
hlt
std
imul
stos
bound
sub
sbb
sub
pop
sbb
not
xchg
nop
push
pslld
out
add
jne
scas
or
lea
xlat
cmp
inc
in
xor
mov
js
lret
lcall
mov
notl
xor
jmp
shrl
or
rorl
xchg
and
inc
loope
shll
adc
adc
add
add
out
mov
sub
adc
push
lds
mov
add
mov
or
ja
dec
or
in
loopne
mov
mov
and
mov
adc
fcmovnb
pop
pop
inc
mov
popf
inc
mov
pop
pop
jle
sbb
cs
dec
shr
push
lock
xor
or
add
add
dec
inc
xor
xor
pop
adc
pop
push
pusha
lcall
xchg
fldl
inc
test
mov
or
jb
or
and
xor
orb
add
jmp
and
in
sbb
mov
orb
or
push
sub
es
push
imul
inc
xor
addl
add
or
rolb
into
fwait
outsb
cmp
add
cmp
sub
add
pop
add
jmp
or
pop
pop
cmp
push
push
ret
adc
dec
inc
test
insl
cmp
push
movsl
or
jle
jle
mov
imul
insl
lods
icebp
fwait
or
cmpb
aas
add
push
push
jmp
psubusb
dec
mov
dec
mov
add
push
arpl
fwait
cmp
cmc
xor
jne
add
inc
add
mov
pop
repnz
xor
push
push
sahf
ss
rcrl
jnp
dec
mov
inc
out
mov
loopne
loop
gs
sbb
subb
sahf
push
in
push
dec
lea
jo
xchg
and
mov
push
out
pop
jmp
test
xchg
lret
add
pop
adc
jnp
fbstp
iret
xchg
add
into
jge
test
xor
add
push
mov
lock
cmpsb
lods
decl
pcmpeqw
inc
and
mov
dec
or
ljmp
lods
inc
mov
xor
popw
aam
and
push
xor
mov
inc
sbb
adc
inc
pop
inc
push
pop
dec
jns
out
adc
ds
dec
test
out
adc
test
out
xchg
inc
repz
fs
out
push
pusha
std
xchg
subb
sub
xor
add
jo
mov
test
jne
dec
pop
imul
xor
xor
ljmp
mov
and
or
add
or
js
adc
dec
jns
and
or
sbb
out
add
and
xor
ljmp
clc
mov
and
ret
jmp
mov
and
shrb
or
fsubp
push
cmpsb
mov
stos
push
cmc
rcrb
pop
adc
jg
dec
outsl
jb
add
int3
and
add
add
fnstcw
mov
clc
mov
loop
sbb
repnz
sub
add
jmp
adc
clc
fistpl
pop
or
je
add
push
push
nop
and
pop
jo
pop
sub
fisubl
pop
cli
orl
jg
nop
add
add
cs
test
sub
add
jmp
or
pop
and
mov
cmp
push
add
jbe
push
add
jmp
sub
popf
xchg
mov
or
inc
mov
and
fs
adc
and
popf
lahf
add
out
icebp
lret
ss
lds
add
adc
pop
jmp
leave
dec
movsl
xchg
xor
pop
or
adc
loop
xchg
outsb
mov
int
mov
mov
and
das
lcall
fistpll
mov
in
or
or
sbb
jnp
arpl
dec
fcoms
pop
shlb
cwtl
pop
xchg
cmpsb
add
sbb
pop
adc
sbb
and
pop
adc
dec
cvtps2pi
cmp
pusha
or
pop
cltd
mov
std
mov
mov
cwtl
cli
jecxz
in
xchg
sbb
adc
push
xor
jge,pn
pop
adc
jmp
cmp
std
test
mov
fs
inc
test
add
add
sub
pop
push
xlat
dec
ljmp
inc
cwtl
and
jb
jmp
shr
ja
leave
int3
add
inc
xchg
jo
cli
inc
repnz
sub
xor
cmp
jge
roll
or
inc
sub
sub
fmuls
movsb
cs
pop
add
sbb
mov
mov
pop
inc
lock
mov
stos
jle
subb
pop
not
int
cmp
jno
jmp
orb
in
add
fucompp
inc
dec
lahf
dec
dec
popa
lret
lret
in
rcr
es
push
cmp
inc
inc
pminub
sbb
mov
or
fisubrs
mov
cwtl
sbb
pop
and
or
push
and
adc
fcmovnb
dec
xor
mov
push
jg
pop
push
test
ret
inc
pop
jecxz
lock
xor
jmp
dec
push
ret
mov
sbbb
int
or
push
gs
outsl
stc
ja
adc
cmpsl
sub
or
xchg
testl
call
nop
rolb
sbb
pop
push
dec
je
or
or
jne
and
int3
mov
fistl
fisttps
call
dec
mov
or
pop
imul
xchg
cmp
or
jbe
jge
and
add
dec
das
adc
pop
add
mov
jmp
dec
push
or
out
mov
hlt
push
inc
rcll
push
daa
mov
add
sub
cmp
mov
and
mov
or
add
and
pop
int3
cmp
or
aam
cmp
mov
adc
pop
add
fwait
jne
adc
dec
adcl
xchg
push
divb
aad
stos
inc
add
jg
add
xchg
out
sub
mov
in
mov
mov
sub
sbb
std
adc
xor
test
aam
rorb
movsb
adc
mov
sub
test
mov
es
clc
out
imul
add
push
xchg
adc
jmp
test
push
test
push
rol
mov
push
mov
sub
pop
add
sbb
movsb
pushf
cwtl
in
inc
pop
aaa
inc
in
icebp
dec
lock
and
add
subb
int
rcrl
push
mov
and
jle
pop
testb
sub
loopne
pop
push
xchg
or
dec
xchg
cmp
push
mov
and
fadds
sbb
in
incb
sub
call
add
jbe
mov
add
call
dec
add
movsb
inc
test
notb
xchg
ss
inc
mov
ss
xchg
lock
gs
adc
clc
xor
fldcw
push
dec
and
and
cli
outsb
adc
xrelease
sbb
lods
xor
ljmp
add
enter
mov
inc
ret
lds
adc
pop
les
or
rorl
and
lods
push
push
pop
xor
inc
jmp
and
lods
sbb
sub
mov
in
and
cwtl
loope
push
push
testb
push
jno
lock
push
out
mov
cmc
movsl
aad
inc
push
cld
mov
neg
jmp
mov
mov
pop
mov
xor
in
mov
jnp
pop
aaa
subb
mov
or
xchg
mov
fldenv
ds
xchg
and
or
stos
jno
adcb
mov
jp
and
pop
jb
push
and
ljmp
push
test
pop
push
in
into
jle
sahf
addl
mov
ljmp
out
test
sub
or
lock
out
add
jmp
xchg
mov
dec
pop
lret
pop
xor
pushl
nop
or
or
lahf
xor
jb
jl
push
xor
pop
addr16
mov
xchg
scas
dec
cmp
adc
and
xchg
or
pusha
std
pop
dec
or
inc
jge
inc
mov
andb
clc
mov
xchg
pop
jmp
adc
cs
roll
and
lods
add
imul
mov
jo
psrad
icebp
add
cwtl
dec
push
aad
sub
pop
out
jne
jge
dec
push
add
in
loop
nop
cld
xor
lock
add
jmp
test
incb
or
rclb
push
out
mov
xor
rolb
xor
shlb
inc
sub
rcrl
xor
test
xchg
dec
mov
mov
out
sbb
push
idivb
sub
or
inc
pop
shrl
dec
xorl
imul
addl
adc
xchg
fstl
outsl
push
enter
repnz
xor
shll
or
pop
mov
lds
ja
pop
and
aas
insl
and
ret
push
xchg
lret
andl
rolb
mov
pop
mov
add
push
lock
inc
in
jo
call
xlat
pop
pop
pop
inc
mov
add
pop
xchg
inc
dec
scas
jle
popf
or
icebp
push
add
lods
inc
jmp
or
inc
daa
jmp
pop
scas
add
pop
add
inc
mov
sti
out
loope
adc
add
sub
ds
xor
gs
adc
daa
and
hlt
push
lods
rclb
out
into
mov
les
push
push
xor
pop
nop
jp
not
nop
inc
add
xor
jmp
jg
rol
mov
push
xor
xlat
insb
ljmp
xchg
icebp
jmp
scas
sub
arpl
and
push
mov
out
aas
addr16
nop
pusha
sub
call
inc
dec
push
cli
dec
xchg
add
add
adc
push
hlt
mov
pop
cli
jl
into
jmp
sub
xchg
jnp
push
or
pop
and
push
mov
push
adc
add
test
mov
dec
fs
shlb
std
pop
mov
cwtl
gs
add
xor
lods
pop
add
inc
shll
outsb
inc
mov
and
pop
faddl
mov
das
xor
inc
shll
add
rcrl
out
icebp
je
and
gs
cmp
daa
shl
minps
pop
enter
inc
nop
leave
add
push
aas
insb
cmpl
lcall
lock
jg
loopne
ret
inc
and
pusha
or
or
or
pop
pop
test
ror
jmp
push
dec
cmp
add
or
push
je
mov
adc
or
sbb
imul
mov
and
pop
xadd
or
push
imul
sub
in
and
pop
and
mov
pop
mov
adc
cwtl
mov
mov
mov
mov
mov
pop
fs
adc
push
xor
pop
shl
xchg
add
pop
shrb
xor
es
and
insb
test
mov
dec
push
adc
in
cmp
push
cmp
jmp
mov
aad
popa
mov
xchg
xchg
sub
mov
flds
fistpl
in
adc
pop
jo
inc
jle
cmp
cmp
fbld
adc
mov
dec
pop
cmp
sub
sub
mov
subl
scas
xor
and
sub
aas
loope
cmp
xchg
push
mov
add
das
or
jo
and
or
ja
adc
mov
add
xor
adc
pop
dec
xor
fcomp
mov
ss
mov
add
test
pop
js
push
push
pop
addl
xor
jmp
bound
fadds
sbb
push
mov
movswl
lea
test
add
rcll
mov
or
dec
out
sub
cmpsb
push
rol
add
adc
push
addl
pmuludq
andl
jae
cmp
leave
pop
add
ret
push
es
lret
sbb
js
add
push
push
add
inc
or
and
add
push
jle
shlb
mov
lret
mov
pop
mov
ret
cmp
and
adc
fs
or
xchg
int3
pop
add
jp
push
mov
cs
pop
arpl
test
into
add
rorl
addr16
add
add
dec
dec
xor
repnz
jns
popa
jbe
xorl
cltd
addl
clc
aaa
out
cmc
push
pusha
xor
leave
test
mov
xor
cmp
cmpsb
int
icebp
inc
push
xor
sub
push
lods
sbb
add
out
or
clc
fbstp
add
sub
data16
sbb
jge
mov
inc
jecxz
add
pop
adc
aaa
repnz
add
pop
mov
test
or
mov
mov
xchg
dec
ret
movsb
rolb
or
pop
dec
xchg
clc
inc
lret
not
xchg
or
sbbl
jg
sbb
jb
sbb
xchg
xchg
not
or
jmp
adcb
add
pop
jns
inc
movsb
rolb
xor
and
cli
pop
sub
cmp
jae
or
popa
cmp
pop
or
push
cmp
push
sub
pop
lods
add
repz
pop
iret
xchg
in
mov
sub
arpl
loope
xor
cli
or
jecxz
inc
or
xor
enter
and
mov
andb
lds
jae
and
cmpsb
jae
xchg
sub
sub
push
adc
xchg
stc
add
dec
or
addr16
pop
shr
cmp
sbb
imul
push
mov
sub
sub
push
test
sbb
add
movsl
jne
cmpsb
in
add
clc
out
push
add
insl
inc
jmp
jne
push
mov
sbb
xor
icebp
incb
test
jmp
xlat
sub
sub
pop
outsb
pop
fnstsw
mov
notl
lea
fwait
xor
test
loope
mov
gs
jmp
stos
dec
mov
aas
pop
sbb
fimull
dec
push
cmpsb
shrl
daa
mov
xor
push
add
test
mov
add
jmp
sub
shll
and
fistl
orl
inc
push
mov
ret
cld
rolb
pop
inc
out
jp
push
or
outsl
inc
adc
in
add
jp
xchg
arpl
cwtl
fldl2t
les
aaa
call
sub
sub
sub
jmp
add
mov
mov
subl
pop
adc
pop
pop
dec
add
push
sub
test
sbb
clc
insl
cmp
add
ret
dec
in
add
mov
sbb
pop
push
lcall
xor
into
rolb
mov
push
add
out
mov
je
pusha
push
jmp
or
and
adc
add
mov
adc
push
add
sub
pop
add
jmp
cmp
lock
push
enter
mov
adc
cwtl
aaa
sub
mov
sub
mov
xor
pop
syscall
lds
jo
pop
ret
invd
daa
enter
xchg
shll
jns
mov
add
push
push
jb
jbe
out
push
int
imul
push
insb
mov
call
or
leave
push
not
dec
out
cmp
and
sbb
push
sub
or
xor
sbb
aad
ret
add
push
sub
sub
pop
pop
xchg
add
mov
or
cmp
rcl
leave
and
dec
inc
int
add
cmpsb
sbb
in
pop
adc
sbb
jns
bound
cmc
lods
cmpsb
movl
add
sbb
je
add
push
pop
pushf
cmp
xor
insb
addr16
jno
pop
sbb
push
push
mov
nop
or
or
push
jmp
and
ja
repz
dec
lods
lret
xchg
add
jg
mov
push
mov
aam
cld
xor
pop
mov
clc
add
xor
pop
add
sub
add
push
mov
mov
mov
and
add
test
cwtl
mov
je
push
adc
rcll
push
push
repnz
push
dec
push
cld
adc
mov
rcll
inc
pop
pop
pop
inc
dec
jp,pt
dec
int
rcl
fpatan
mov
mov
pusha
mov
push
or
mov
repz
push
fs
into
sbbb
movl
lcall
add
xchg
rolb
add
jmp
loop
push
lahf
adc
loop
shrb
mov
cld
sub
add
fwait
add
cmp
arpl
shlb
jl
push
ljmp
pop
aas
cmp
test
sub
test
lods
cmp
call
shlb
sbbb
xchg
sbb
dec
pushf
jns
pop
scas
fwait
add
scas
inc
cmp
test
xor
jb
nop
jecxz
xchg
data16
and
mov
in
fimuls
adc
mov
fs
mov
loopne
cmp
inc
loope
daa
sub
cld
pop
test
dec
sahf
push
cli
les
xchg
dec
or
pop
jmp
add
pop
pop
or
pop
push
fs
dec
adc
aas
xorb
dec
inc
and
push
mov
push
shr
subb
add
lret
xor
pop
cli
loopne
push
not
ss
dec
rclb
repnz
add
popf
pop
mov
jbe
sysret
sub
movsl
pushf
mov
add
sbbb
mov
stos
int3
rorb
inc
xchg
imul
jne
mov
lds
add
orb
xchg
outsb
jmp
mov
push
xchg
rclb
mov
xor
out
std
pop
shl
and
jg
lds
add
out
sbb
push
movl
cmp
ja
in
mov
test
push
enter
jns
mov
cmp
les
pop
sub
jmp
aas
add
orb
xchg
inc
cmpsl
ljmp
jb
out
loope
mov
adc
sbb
and
pop
into
or
xor
or
jp
cmpb
add
out
shl
mov
xor
jge
add
jne
add
rol
fbstp
mov
mov
adc
mov
xchg
mov
xor
push
sub
das
popf
sbb
xchg
out
mov
and
and
dec
pusha
mov
pop
ret
ret
test
or
cltd
sub
pushf
jnp
aas
xchg
xor
mov
or
adc
loopne
or
push
fbstp
push
dec
mov
mov
mov
dec
mov
mov
cs
push
js
sub
dec
pop
push
xor
inc
xor
and
xchg
add
std
fsts
jmp
es
lds
test
adc
or
add
xor
mov
int
pop
dec
or
icebp
ds
pop
ss
jge
cwtl
add
into
jno
pop
sti
mov
push
dec
inc
std
pop
push
adc
es
nop
sbbl
lds
jecxz
push
sbb
mov
in
js
jne
mov
inc
popa
popa
pop
jbe
or
xchg
sbb
jl
in
pop
push
in
les
int3
bnd
rcrl
push
pop
shl
push
nop
imul
sbb
repnz
adc
xchg
mov
push
adc
pop
pop
cli
ret
pop
and
fmuls
aas
inc
xor
xor
mov
stos
inc
repz
repz
xchg
adc
xchg
xchg
insb
clc
jns
mov
orb
sbb
or
push
jbe
movsb
sbb
lret
es
add
pop
data16
idiv
cmp
dec
ret
inc
enter
in
bound
add
pop
or
inc
push
adc
push
pop
mov
jmp
and
mov
addr16
cmpsb
mov
outsb
adc
or
mov
xchg
rcll
cld
sti
fs
enter
push
mov
pop
cli
xchg
mov
xlat
push
rcll
mov
sbb
into
popa
ja
push
stos
std
ret
push
fwait
outsb
xor
lret
and
call
in
fdecstp
push
mov
nop
mov
inc
push
add
or
repz
mov
jle
loopne
push
dec
adc
arpl
push
aaa
ds
div
lods
add
cmp
inc
pop
xor
outsl
add
xorl
adcl
aas
dec
shrb
repz
fnsave
inc
enter
jae
mov
or
iret
pop
imul
ja
loopne
jmp
clc
pop
xor
movzbl
cmc
cld
xchg
lods
adc
jmp
ljmp
ss
nop
xchg
pop
add
jns
pop
dec
repnz
lea
push
adc
cld
dec
loope
scas
lods
das
shrb
lods
pop
imul
add
test
or
pop
fsts
xor
in
cmp
fwait
sbb
jns,pt
cmpsb
jbe
mov
out
cs
inc
pop
popa
lret
stos
xor
adc
push
adc
push
andb
or
add
adc
sti
pop
pop
sub
jmp
adc
test
jp
mov
add
sub
jl
popa
cmp
es
inc
popf
flds
xor
xlat
jno
lahf
add
mov
sub
pop
xchg
add
roll
aaa
lds
sti
add
add
push
shl
push
mov
jmp
subb
jmp
lahf
ret
inc
sbb
sub
sub
sar
incl
push
sahf
push
dec
mov
mov
jne
cmpsl
or
cmp
arpl
insb
mov
mov
jmp
outsb
ret
lods
lahf
cwtl
ja
pop
cltd
ja
rolb
sub
push
push
fs
nop
adc
repz
pop
adc
mov
cmpsl
dec
and
cmpsl
sub
adc
sub
dec
jne
pop
test
mov
loope
jns
sbb
jp
adc
inc
adc
bound
inc
push
push
arpl
cmp
cmc
and
jae
scas
dec
push
push
cmp
jl
mov
pop
sub
subl
mov
add
lahf
jecxz
xchg
sbb
mov
mov
inc
lret
jnp
dec
adc
push
shl
notl
jge
pop
adc
in
mov
sub
ret
movsl
push
ret
ret
xor
movsb
lods
jbe
add
and
push
mov
adc
pop
enter
mov
mov
add
ds
mov
sub
lcall
lock
mov
add
shr
popa
leave
lret
fnstenv
stos
dec
and
mov
dec
adc
and
pop
aas
and
insl
add
xor
push
imul
jno
jo
mov
mov
jle
test
xchg
pusha
les
pushf
push
inc
add
sbb
push
add
sbbl
pop
dec
mov
dec
fs
cmp
filds
imull
add
pop
xor
push
rcll
and
stos
popa
inc
sub
inc
das
dec
jge
loopne
icebp
jo
sub
mov
ret
mov
and
aaa
add
push
mov
pop
dec
pusha
in
imul
xor
loop
xchg
push
or
ds
mov
add
shl
push
jmp
fsubl
and
mov
out
popf
mov
sbb
sbb
adc
or
sbb
jg
push
push
mov
sbb
fsubrs
pop
adc
xchg
jnp
idivl
inc
scas
enter
cmp
test
push
negl
and
pop
push
jae
in
repnz
ljmp
add
test
pop
inc
fldcw
pop
push
out
dec
adc
cmc
jecxz
add
test
andb
jmp
fistpl
add
insl
scas
pop
add
ret
cmc
sete
pop
adcb
inc
jb
pop
leave
or
roll
xchg
fs
add
or
adc
mov
imul
dec
push
popa
jo
lret
inc
fidivs
sub
stos
add
outsb
inc
decb
and
push
sbb
je
cmp
jmp
loope
sbb
cmp
mov
addr16
dec
push
sub
rorb
or
rcrb
push
inc
arpl
and
push
mov
lcall
jecxz
adc
jmp
nop
out
outsb
rcll
sbb
loop
adc
xor
inc
add
or
les
pop
pusha
sub
xchg
mov
mov
cmp
outsb
lret
clc
push
mov
dec
dec
adc
cwtl
movsb
mulb
push
push
into
mov
jmp
pop
les
dec
xor
and
xor
cs
jl
pop
and
or
dec
rorl
lds
xchg
js
push
cld
add
or
insb
sbb
mov
pop
cmp
and
xor
add
jmp
jmp
jne
inc
add
xor
pop
fisttpll
cs
aam
xor
dec
pop
xor
sub
inc
sahf
or
fsts
jmp
in
bound
dec
fldcw
stos
addl
nop
mov
sarb
sbb
stc
rorb
daa
mov
or
lret
test
cmp
iret
fcomps
push
inc
xchg
lock
shll
int3
jle
pop
push
mov
mov
xor
adc
pop
dec
movb
fdivs
xchg
pop
or
loop
shrb
push
add
imul
daa
ret
cld
sub
mov
les
xor
sbb
jnp
rcll
cmp
add
loope
jbe
leave
push
xor
pop
xor
aam
jb
push
cwtl
sbb
dec
outsl
and
out
cmp
push
push
mov
mov
sub
out
and
jne
mov
rclb
cmp
adc
mov
sub
xchg
add
xor
dec
pop
pop
ds
jmp
je
mov
sub
cmpsl
ret
neg
jl
in
out
push
push
or
out
aas
xchg
sbb
mov
dec
jo
and
enter
push
or
loopne
xchg
pushf
mov
repnz
push
pop
mov
push
and
inc
dec
fldl
inc
jmp
mov
adc
add
cmpsl
pop
jecxz
cmp
push
icebp
mov
jge
push
sub
add
enter
pop
pop
aam
mov
mov
inc
in
mov
test
pop
push
lock
cmc
popa
jg
jns
xchg
add
add
aas
fnstsw
mov
ror
push
sub
and
jmp
pusha
dec
lret
mov
mov
subb
fwait
dec
adc
and
hlt
sbb
aad
je,pt
inc
pop
or
loop
int
pop
dec
ret
in
add
inc
shll
mov
add
pop
sub
arpl
adc
add
sub
mov
add
mov
out
icebp
pop
adc
jns
xchg
push
fwait
jl
add
xchg
inc
stc
mov
push
add
ljmp
je
sub
push
or
les
stc
inc
add
cmp
cmp
test
pop
xor
pop
bound
add
and
pop
mov
mov
ss
inc
mov
std
jne
in
add
adc
mov
fdiv
sbb
movsb
outsl
mov
jge
and
inc
cmp
loopne
mov
sub
hlt
scas
or
mov
mov
orb
jbe
lods
arpl
mov
add
loopne
not
push
nop
pop
or
cwtl
stc
sbb
ret
push
adc
pop
js
lret
adc
or
adcl
push
sbb
mull
cs
push
add
in
adc
sub
jmp
cs
push
mov
out
dec
or
out
aad
nop
std
jmp
and
test
sub
mov
sub
pop
insl
jmp
gs
mov
add
andl
cmc
cs
adc
dec
out
xchg
int3
movb
jne
cmp
ret
or
xor
icebp
gs
xor
jmp
ret
pop
push
xor
pop
add
in
pop
sbb
push
int3
pop
scas
sbb
dec
mov
hlt
ret
insb
mov
pop
jbe
lcall
gs
xchg
or
test
scas
pop
push
lahf
arpl
loopne
rcrb
and
adc
xor
push
jle
gs
leave
jp
icebp
add
insl
adc
or
adc
mov
daa
psubw
ficoms
or
inc
imul
add
je
cmp
xor
lock
cmp
xor
lret
and
xchg
shlb
and
push
loopne
mov
divb
pop
aad
ljmp
mov
mov
inc
or
dec
popa
loope
jle
mov
in
pop
sbb
push
mov
imul
pop
mov
cmp
stos
dec
xchg
sbb
add
push
inc
and
cmpsl
or
add
push
shrb
repz
or
cld
jnp
and
pushf
cmp
popa
add
or
xor
ja
push
ret
lds
add
outsl
jo
out
les
test
adc
jp
pop
xchg
adc
fisttpll
in
adc
test
cwtl
mov
mov
add
pop
mov
bound
aaa
lahf
push
adc
cwtl
mov
gs
sbb
inc
or
das
mov
imul
push
xchg
mov
je
mov
test
jg
add
cmp
std
testb
mov
xchg
adc
xlat
push
paddq
push
mov
jmp
cmc
lret
fidivrl
nop
pop
movsb
cwtl
pop
pop
sub
or
lcall
loop
push
iret
add
int
popf
and
popf
mov
push
popa
mov
scas
pusha
test
sbb
dec
jmp
xchg
mov
cmpsl
icebp
jmp
pop
push
push
and
dec
inc
adc
sti
push
xor
jns
out
mov
inc
inc
sbb
xchg
push
adc
icebp
pop
mov
xchg
jbe
inc
push
pusha
xchg
sub
cs
add
imul
loope
in
cld
lods
daa
add
inc
arpl
pop
and
fsubrl
jns
mov
mov
aad
and
xor
nop
movsb
or
in
xchg
inc
or
pop
mov
stc
inc
inc
mov
add
xor
pop
push
mov
push
jnp
push
push
push
mov
inc
fcomps
cmpsb
into
inc
or
sbb
leave
fld
in
pop
push
lahf
int3
mov
pop
xor
push
mulb
gs
scas
push
loope
add
sbb
cmp
js
jmp
pop
push
mov
add
testl
inc
jns
adc
sub
jge
dec
push
mov
and
add
and
mov
xchg
sub
push
mov
jecxz
cmpsl
das
push
jo
jmp
add
sti
mov
fadd
push
jae
fisttps
mov
sbb
adc
and
aas
sbb
or
cmp
lods
sar
or
daa
fmul
or
fstpt
add
pushl
shrb
pop
cmp
ret
cmp
rolb
fsubl
add
mov
lods
xchg
sub
pop
pusha
aas
lock
in
in
jmp
addr16
xlat
or
add
adc
addr16
iret
or
xor
add
lock
jge
movsb
cmp
cltd
and
jp
mov
mov
push
in
or
mov
shlb
iret
add
pop
push
into
jo
mov
pop
add
cld
loope
jmp
jb
aad
movsb
pop
push
mov
xor
gs
das
jmp
jecxz
sbb
mov
dec
add
bnd
jne
lods
pop
mov
cs
loopne
jmp
sbb
rcll
xor
shrl
or
mov
adc
mov
push
add
pusha
xchg
adc
popa
or
xor
jge
push
inc
push
or
mov
dec
add
add
ds
inc
rcr
add
idivb
and
push
push
ret
and
mov
push
sub
cmp
mov
fistl
pop
insb
pop
lds
jo
clc
pusha
or
pop
push
data16
dec
or
pop
and
div
cmp
pop
and
js
add
mov
sbb
fstps
and
dec
dec
icebp
xchg
and
mov
mov
xor
sub
jmp
xor
add
rorl
pop
pop
fadds
sub
in
adc
add
dec
imul
jno
enter
mov
add
mov
ljmp
fsts
into
jmp
lds
xor
jns
out
pop
mov
xchg
arpl
push
les
into
into
dec
xorl
mov
add
imul
loope
loopne
cmp
divb
jbe
pop
popa
and
xchg
les
add
xchg
js
add
pop
jg
neg
loope
xchg
dec
stos
cwtl
es
dec
adc
in
xchg
out
jb
and
into
cmpb
add
push
test
les
add
jae
shrl
fldl
dec
dec
jns
pop
cmp
jmp
mov
aad
push
mov
add
push
push
mov
cli
mov
insl
dec
js
shr
mov
jle
int
lea
cmp
xor
jo
sub
ds
test
inc
adc
xchg
push
sub
fidivs
mov
dec
cmpb
call
loope
pop
adc
inc
or
shlb
clc
xchg
sbb
pushf
das
dec
loop
stc
jb
in
movsl
cmc
icebp
mov
int
shll
shl
add
outsl
push
aaa
movsb
es
add
orl
outsl
push
cmpb
jb
punpckhbw
arpl
lods
sti
jge
lret
push
dec
add
cs
and
mov
pop
mov
xchg
sbb
loope
sub
jp
add
jmp
adc
or
push
dec
cmpb
xor
data16
jns
inc
in
fdiv
push
into
dec
add
test
mov
das
cwtl
vmwrite
cmp
xor
push
push
cli
xor
movsb
das
rolb
cmpsl
push
sub
jo
mov
cmp
adc
sbb
not
les
js
outsl
iret
push
cld
push
daa
add
pop
add
xchg
pop
or
and
mov
inc
xor
insb
shl
ja
aad
loopne
jmp
ret
dec
mov
mov
xor
data16
inc
sub
push
stos
cmovs
test
enter
xchg
out
inc
xor
inc
mov
inc
repnz
stc
loopne
jmp
push
push
adc
shlb
mov
xor
pusha
loopne
pop
shll
sub
jmp
sub
fcoms
inc
cmp
sbb
rorl
leave
jp
and
rclb
addr16
push
inc
add
scas
inc
jp
pusha
adc
mov
das
and
xchg
inc
adc
sub
mov
jmp
pop
add
sub
mov
and
nop
out
mov
daa
pop
hlt
pop
sub
add
movsl
lahf
lods
dec
testl
push
xor
mov
ret
jne
cmp
mov
clc
jecxz
push
shlb
and
repz
por
jb
push
icebp
and
in
mov
call
dec
ja
cmc
jmp
lret
pop
jne
or
fimull
add
or
push
mov
je
mov
push
push
in
mov
mov
loopne
cmp
dec
add
lea
dec
push
or
lds
pop
or
hlt
inc
pop
mov
fsubrs
in
das
or
push
adc
fdivp
inc
jp
scas
and
ss
das
dec
sarb
sahf
scas
push
ret
cld
mov
mov
loopne
xor
pop
sub
test
sub
push
dec
xor
daa
cmc
xor
sub
push
cs
jl
sub
les
cmpsl
xchg
inc
pop
add
pop
pop
hlt
dec
lock
insb
repz
adc
lret
lock
pop
lahf
nop
idivb
dec
ds
mov
jg
jae
insl
inc
fucompp
xor
add
shlb
int
jae
mov
xor
mov
inc
xchg
addl
dec
push
insl
lea
jmp
push
lret
rorl
ficoms
xor
xor
mov
and
push
loopne
out
sub
inc
cld
add
add
ds
mov
mov
daa
data16
pop
ret
lret
xchg
jae
negl
cmc
jae
jne
mov
pop
xchg
not
or
and
sbb
lods
iret
pop
adc
or
xor
pop
sbb
xor
push
loopne
outsb
lahf
cwtl
adc
pop
and
add
add
push
adc
inc
xchg
mov
mov
sub
push
or
jmp
clc
and
push
xchg
mov
mov
aam
shr
enter
ret
aaa
cmp
adc
inc
daa
or
adcl
sub
xchg
mov
mov
add
or
into
pusha
dec
xchg
sbb
or
mov
jae
xchg
mov
sub
push
lcall
sbb
cmp
mov
test
lock
jno
bound
jge
xor
lahf
sbb
inc
cmp
dec
dec
and
stos
pop
insb
pop
push
dec
adc
fstpt
and
pop
or
sbb
test
or
imul
cmpsl
popl
in
sub
mov
adc
inc
popf
lret
push
mov
push
lret
cmp
sub
cmc
aas
adc
or
aaa
inc
sub
pop
je
adc
xchg
mov
or
lods
scas
repnz
imul
push
andb
add
scas
adc
push
jmp
xor
jne
loop
add
mov
adc
andl
mov
adc
mov
jbe
rolb
fistpll
add
jmp
ror
mov
cmpsb
pusha
inc
aam
aaa
icebp
cmp
lret
aad
add
or
fsubrp
popa
push
add
stos
out
ror
mov
pop
out
or
pop
jno
and
and
pop
sbb
push
mov
mov
xchg
orl
and
add
andb
addl
pop
test
cmovl
xorb
mov
pop
addl
insb
dec
push
pusha
rol
andb
mov
push
sbb
lock
addb
into
add
movl
div
inc
and
push
popa
jnp
sub
jmp
or
xor
inc
pop
mov
loopne
add
xchg
push
mov
jbe
roll
ret
pop
orl
xchg
daa
jmp
outsb
jmp
in
aas
cltd
outsl
daa
or
sub
pop
pop
jge
repz
data16
jbe
add
pop
push
push
dec
jmp
cmp
and
jg
fdivrs
pop
add
xor
bound
jecxz
xchg
inc
push
jo
test
mov
xor
sub
dec
xchg
lret
mov
jne
neg
sbb
mov
pop
repz
ficomps
mov
mov
loope
subl
fisubs
cli
in
push
gs
scas
lcall
xchg
jmp
call
pop
clc
sbb
stos
mov
in
aam
adc
pop
mov
push
xlat
mov
cmp
xchg
cltd
add
pop
xor
push
leave
mov
pop
not
inc
rorl
sbb
and
cmp
daa
jns
cmp
scas
pop
jmp
fiaddl
pop
or
add
popf
ret
add
loop
xchg
ljmp
ss
lods
outsl
inc
inc
jmp
mov
xor
test
mov
popf
ret
adc
sbb
mov
subl
stc
pop
test
cmp
cmp
popw
imul
add
pop
mov
in
or
jmp
inc
xchg
push
cmp
sbb
call
movsl
mov
cmp
mov
pop
shrb
daa
pop
repnz
orl
and
das
add
jp
gs
xchg
mov
inc
lds
adc
push
lods
and
pusha
lcall
pop
ljmp
sub
mov
or
or
aaa
jo
mov
xor
fsubrp
add
pop
xchg
dec
add
mov
pusha
mov
xor
or
shl
push
shl
push
addb
bound
jb
adc
fcompl
push
add
adc
nop
jmp
jns
out
pop
push
stos
add
imul
aas
mov
pop
xchg
repnz
popa
out
cmpsl
rorb
cmc
sbb
pusha
stos
pusha
pop
mov
adc
lahf
cmp
push
adc
add
call
mov
add
dec
or
daa
fmull
push
hlt
inc
jmp
mov
das
push
pushf
je
push
iret
or
cmpsb
ds
cli
add
sbb
jl
cmp
push
adc
mov
push
je
jo
dec
mov
mov
or
lock
divb
mov
lods
ja
sbb
fidivrs
sbbb
mov
push
pop
data16
pop
loop
sbb
int
mov
push
cmpsl
inc
fnstsw
push
in
fidivs
push
inc
ret
add
xor
and
xor
jns
cwtl
jns
xchg
adc
arpl
inc
mov
adc
scas
gs
sub
ja
add
or
pop
mov
les
mov
enter
loop
pop
pop
push
lea
or
mov
es
add
mov
pop
dec
mov
jmp
and
cmp
popf
adc
fsubr
adc
push
fs
sub
pusha
xchg
sbbb
mov
push
xchg
or
popa
fs
out
push
shr
add
lcall
stos
aas
rcrl
dec
leave
cld
fstpt
pop
mov
and
push
icebp
jns
mov
arpl
pop
pop
mov
inc
dec
cmc
cmpsb
xorl
cmp
pop
pop
fildll
movb
daa
rol
jmp
movsl
cld
sub
adc
xchg
js
inc
jmp
leave
pop
mov
call
xor
daa
out
dec
shrb
add
xor
jb
add
pop
sub
dec
or
mov
fs
sarl
nop
rcrl
rorl
bound
inc
jnp
in
cmp
push
xchg
jmp
aad
je
xor
pop
insl
dec
or
pusha
adc
rol
and
daa
mov
dec
inc
jne
xchg
icebp
test
sti
add
enter
pop
fwait
imul
shlb
test
mov
rolb
push
data16
jp
add
repz
cmpsl
cmp
shr
ret
shr
cs
push
adc
xor
mov
inc
cld
push
lock
call
pop
imul
mov
jb
xor
inc
iret
push
mov
and
jmp
arpl
in
mov
push
or
dec
je
push
dec
mov
xor
pop
negb
jb
fidivrs
neg
add
sub
dec
rorb
sub
jno
add
mov
test
lods
add
add
nop
es
or
dec
xchg
test
jmp
les
testb
iret
sub
adc
icebp
xor
add
orb
jo
or
mov
cmp
pop
xor
inc
inc
aaa
movsl
aas
add
in
cmp
test
daa
mov
push
into
mov
imul
stc
mov
sti
push
jbe
or
or
lock
jmp
gs
rcr
ds
sub
add
movsb
cmovle
xchg
mov
sub
out
out
ljmp
push
pusha
popa
dec
push
push
inc
nop
fadds
jae
clc
movsl
ret
cmp
dec
sub
imul
push
add
cs
jg
xorb
push
mov
xchg
push
fiadds
fnstcw
cmp
adc
mov
stc
adc
cmc
movsb
cs
pop
pusha
stos
or
jb
in
or
mov
stos
dec
pushl
mov
xor
popf
pusha
push
push
mov
cwtl
cmpsl
pop
xchg
pop
pop
orl
add
arpl
sbb
dec
out
test
add
iret
and
push
mov
sbb
and
ret
pop
cwtl
dec
jmp
jae
push
pop
and
mov
and
or
cmp
xchg
adc
roll
or
and
sysret
mov
call
jmp
flds
stos
shll
stos
adc
nop
and
pop
xchg
cmc
test
add
cltd
fcomps
mov
nop
pop
insb
push
dec
adc
jmp
in
ret
or
test
mov
mov
enter
mov
inc
std
test
or
psadbw
push
rcll
insb
adc
mov
mov
or
mov
mov
fisubs
in
mov
jmp
pop
out
push
cmpsl
test
sar
or
adc
dec
pop
pop
and
aas
mov
mov
les
cli
or
xor
shlb
and
mov
cmc
and
inc
jne
scas
lahf
loopne
repz
aad
fsubr
int
sub
dec
sti
std
popf
js
mov
jns
mov
sbb
mov
add
xchg
jbe
lds
in
adc
jmp
negl
fimull
xor
or
or
dec
lds
sbb
xor
cmp
xchg
pop
pushf
xlat
fisttps
push
add
ljmp
cltd
cwtl
pop
push
push
loop
sar
jmp
sub
xor
mov
sub
stos
test
xor
out
nop
fwait
nop
loop
add
mov
add
sbb
xchg
xor
xor
outsb
pop
cld
pop
or
movb
iret
sbb
lock
gs
sbb
and
cmpsb
mov
es
add
adc
mov
ja
repz
adc
mov
lea
in
add
aas
enter
in
cmp
add
pop
bound
cmc
push
sbb
mov
dec
pop
xor
pushf
in
xchg
xchg
popf
popa
shl
sub
insb
pop
mov
int3
add
cmpsl
mov
out
enter
push
xor
inc
push
jmp
fdivs
mov
ret
mov
mov
push
call
dec
aam
scas
in
push
xchg
jno
imul
inc
xchg
push
pop
int3
out
sub
int
jns
test
outsb
xchg
jmp
mov
notl
test
jnp
or
add
pop
pop
xor
or
aaa
popf
xor
adc
lods
and
cwtl
add
rol
not
jmp
es
dec
orb
movsb
push
sub
mov
mov
icebp
lock
push
add
call
test
ja
jmp
sbb
or
mov
mov
arpl
int
movsl
xchg
push
xchg
mov
ja
xchg
je
or
push
sub
test
test
mov
mov
sub
dec
cmpsb
mov
adc
sub
outsb
push
and
fwait
dec
and
insb
in
push
ret
mov
je
jmp
sub
push
daa
inc
push
cltd
mov
cltd
mov
mov
push
sub
xor
inc
push
out
aaa
pop
xchg
mov
pop
xchg
popa
push
add
xor
rolb
push
leave
scas
jg
fnsave
mov
add
stc
cmp
push
or
xlat
cmpsl
push
cmp
adc
or
data16
sub
sbb
lret
or
fcoms
mov
int
scas
sahf
or
das
loopne
insl
lcall
jecxz
jmp
mov
gs
and
add
add
pop
xchg
out
loopne
mov
pusha
push
mov
add
xor
fistl
xchg
sbb
jmp
xchg
arpl
mov
pusha
dec
addl
lahf
stos
xor
cmp
cs
pop
test
push
or
adc
add
mov
pop
push
cld
dec
mov
icebp
cs
rcrb
cmpsl
sub
add
out
inc
pop
aam
inc
and
inc
lcall
and
inc
pop
loop
xlat
xchg
inc
add
add
sbb
neg
lret
or
pusha
adc
or
push
pop
mov
jl
xchg
cli
add
cmpsl
add
mov
push
pop
jno
iret
push
mov
loop
cs
ret
sar
mov
sahf
push
jmp
mov
inc
jo
dec
mov
push
push
mov
rorl
lcall
pushf
pop
sbb
hlt
jae
stc
pop
test
jmp
or
data16
sub
mov
ljmp
sub
or
pop
lods
xor
int3
fdivrs
popf
out
cmp
test
mov
cli
shll
ljmp
int
int3
cmc
adc
jmp
clc
pop
jae
push
imul
into
mov
icebp
and
push
orb
jmp
xor
cmp
mov
js
int3
cmp
inc
divb
add
xchg
push
ret
jne
inc
xchg
shlb
mov
in
ffreep
jge
pop
ljmp
push
mov
dec
and
shrl
mov
loopne
cmp
jns
je
jle
or
or
and
mov
push
dec
jp
orl
lds
movsl
repz
in
int
inc
dec
in
fidivrs
adc
not
dec
stos
daa
push
icebp
add
jg
sub
push
bound
inc
ret
push
pop
add
or
mov
push
pushf
mov
cs
xlat
pushf
inc
pop
std
fs
lcall
out
jge
add
andb
shll
jmp
ret
cmc
or
lods
dec
pop
call
push
xor
test
pop
mov
or
and
ud1
jns
dec
jmp
pop
pop
push
ror
int3
roll
mov
pop
cmp
sub
pop
andl
dec
push
loope
lret
push
jnp
add
lds
adc
mov
pop
pusha
repnz
push
mov
sub
loope
cmc
pop
add
in
data16
push
dec
in
jge
jmp
push
push
mov
testl
adc
mov
push
xchg
imul
jno
pop
or
mov
xchg
ds
lahf
movsl
inc
je
mov
sbb
dec
jp
add
repz
and
push
jle
dec
inc
fwait
add
ret
push
or
js
add
push
mov
add
add
mov
clc
dec
imul
jno
add
or
rorb
mov
lea
add
sub
add
xor
sahf
push
cmp
or
daa
lds
adc
mov
adc
clc
xor
nop
jne
inc
push
add
sub
nop
or
mov
hlt
inc
testl
mov
imul
lods
push
add
pop
movsl
pusha
jae
es
shll
mov
mov
add
xor
jmp
sub
push
xor
sbb
mov
cld
adc
pop
dec
and
das
push
cmc
icebp
and
and
xlat
mov
mov
sbb
cmpl
xlat
outsl
cmpsl
out
pop
in
or
in
sbb
gs
outsl
fwait
hlt
sub
test
mov
sarb
xchg
cli
xor
fbstp
movsb
scas
fsubrl
sub
mov
shlb
icebp
push
pop
jns
xchg
xchg
inc
cmp
es
or
sub
or
cmp
pop
pop
loopne
xchg
mov
sub
jg
pop
imul
jo
addb
mov
sub
cmc
add
fcomps
add
xchg
sbb
nop
shl
adc
pop
xchg
in
add
cmp
jle
das
xchg
mov
cmp
cs
lods
repnz
cwtl
ret
outsl
jp
push
loop
mov
lret
in
dec
add
mov
sbb
pop
sub
or
enter
mov
ret
cmp
cmp
or
mov
pop
sub
cs
mov
rorl
mov
add
loope
mov
push
syscall
orb
ja
idivb
push
push
cs
les
mov
es
inc
mov
sub
in
inc
adc
shll
inc
scas
fs
dec
push
xor
fwait
add
xlat
out
and
out
pop
cli
or
adc
sub
pop
inc
ss
popa
xchg
lods
mov
or
incb
test
jae
or
pop
notb
fbld
insb
cmc
dec
sub
add
adc
into
pop
and
and
push
sbb
adc
test
les
sbb
fstl
pop
pop
js
pop
push
cmpb
loop
inc
fadds
mov
or
loope
testb
in
push
nop
sbb
inc
xlat
adc
pop
jne
dec
out
daa
cmp
lcall
std
out
jne
push
mov
push
and
push
add
popf
or
xchg
cli
nop
not
jge
dec
clc
ljmp
daa
or
jle
or
roll
mov
or
aam
lret
mov
loope
cmpsb
add
loope
jo
xor
jo
int3
or
lods
adc
pop
add
push
sub
shlb
inc
push
adc
cmp
mov
push
xchg
les
icebp
mov
cmp
leave
ret
sti
movsb
fabs
adc
repnz
imul
push
push
push
les
imul
jl
dec
adc
mov
mov
add
movsb
sub
adc
or
xchg
shrl
inc
int3
fs
lea
or
nop
aaa
or
mov
mov
push
pop
popa
dec
loope
add
mov
mov
ds
inc
xchg
dec
call
mov
nop
push
push
rcr
xlat
rorb
mov
cmp
push
test
fs
and
or
push
arpl
mov
jne
movsl
push
rol
pop
mov
mov
mov
pop
push
jnp
cmpsb
pop
jnp
pop
sub
loope
mov
and
sbb
aad
jnp
aam
mov
leave
xchg
push
inc
stos
mov
fldt
out
pop
and
add
pop
push
lock
jmp
rorl
push
stos
and
mov
mov
or
add
pusha
scas
int
mov
add
outsl
jo
cmp
push
lea
ds
mov
xchg
cmc
addb
testb
fimull
pop
ds
shl
jnp
pop
push
dec
out
add
outsl
outsb
enter
pop
out
fdivrs
ret
push
sbb
mov
ret
mov
sahf
push
ja
ds
dec
jb
nop
inc
imul
lret
loope
mov
popa
pop
jb
bswap
or
std
lahf
loope
das
dec
add
mov
xor
jmp
mov
ljmp
fisubrl
lock
test
push
ds
jl
movsb
add
pop
jmp
push
leave
loope
pop
xor
fiadds
inc
inc
cmpsb
bound
cli
sbb
ja
push
sbb
bound
and
test
popl
mulb
add
negb
or
clc
inc
adc
ficoml
adc
out
add
iret
jg
dec
cs
in
repnz
adc
sti
jmp
pop
push
test
or
sub
enter
es
mov
xorl
adc
imul
stos
aam
pop
sahf
cmpsl
jbe
push
mov
gs
jle
adc
cmp
lea
xchg
cld
mov
out
jnp
lret
inc
or
adc
adcb
add
jno
inc
add
leave
fcoms
aas
inc
daa
or
mov
negb
xchg
mov
popf
in
xchg
adc
aam
cltd
nop
dec
add
push
jmp
mov
sub
shll
push
cmp
jmp
sub
adc
into
std
lret
pop
pop
adc
xchg
popa
xor
xor
ljmp
cs
push
loope
rcrb
mov
rep
add
add
imul
pop
or
shl
std
xchg
cld
add
inc
dec
adc
fwait
cmp
loope
adc
in
in
pop
aad
and
xor
nop
mov
pop
mov
xor
ds
xor
out
sbb
inc
test
fsubrs
sub
jmp
xor
jecxz
inc
dec
jmp
mov
fidivrs
into
in
shll
pop
jns
sbb
int3
adc
inc
xchg
sub
push
fs
xor
mov
dec
add
push
jmp
les
arpl
mov
jl
out
xchg
outsl
fsubp
mov
jecxz
jns
outsb
push
sbb
movsb
mov
lahf
ds
movsl
aaa
lahf
push
sbb
scas
xor
mov
adc
sub
mov
push
jns
pop
jbe
fbstp
push
icebp
js
xchg
pop
lds
mov
mov
sbbb
ror
mov
loopne
and
hlt
xor
test
and
push
xor
pusha
out
std
mov
mov
test
mov
jle
inc
fstps
jnp
push
stos
sar
inc
rorb
lods
jae
dec
sub
or
pushf
cmp
loopne
test
pop
sub
icebp
sar
mov
stos
jb
mov
test
jno
sbb
daa
mov
push
push
inc
mov
std
out
jle
jmp
pop
pop
test
ds
add
gs
push
fs
cmp
pop
imul
adc
das
and
sub
imul
lcall
sbb
lods
pop
lea
call
cmp
lret
in
push
add
sub
add
icebp
imulb
xchg
loop
pop
fxch
pop
xor
addr16
call
mov
dec
pop
cld
push
or
jmp
pop
sti
cmp
jmp
push
add
in
sahf
stos
jg
push
and
orl
das
repz
pop
outsl
shrl
test
xchg
push
push
xchg
int
push
or
adc
insb
lcall
push
ret
mov
mov
fldcw
dec
repz
mov
in
adc
xor
sti
sbb
push
add
xor
mov
push
xchg
test
test
add
clc
outsb
jo
jo
dec
add
in
out
sbb
dec
lret
or
dec
xchg
fistpll
lds
test
xchg
xlat
clc
es
pushf
or
inc
mov
inc
pop
pop
and
adc
stos
mov
inc
jl
leave
pop
data16
push
push
xchg
mov
dec
loopne
push
add
adc
sub
jnp
call
pop
std
adc
xchg
hlt
sub
lret
lock
subb
or
xchg
mov
nop
rcrl
out
push
lcall
lods
and
xchg
dec
imul
xchg
imul
lds
xchg
cmpsb
and
pop
cmpsl
push
or
aaa
add
adc
xor
cli
jne
in
js
push
xchg
sbb
ja
pop
mov
rol
inc
add
fnstsw
push
pop
pop
outsb
icebp
sub
add
jle
fisubrl
cmpb
test
popf
loop
js
es
and
push
xchg
sbb
pop
jg
sbb
xlat
pop
nop
mov
xchg
mov
mov
mov
es
rorl
and
push
cmp
mov
popa
rorl
outsl
xor
mov
xchg
out
and
sbb
or
xchg
jmp
pop
cld
daa
push
xchg
test
lcall
or
es
pop
xchg
add
das
ds
lods
test
cmp
inc
nop
loop
pop
mov
icebp
lahf
or
movsl
mov
sub
movl
lods
xor
dec
movb
add
mov
pusha
mov
inc
int
inc
ret
imul
out
popf
icebp
leave
iret
lds
in
xlat
call
js
mov
jl
or
jb
rorb
lahf
add
xchg
addr16
fwait
cmc
pop
in
push
leave
or
xchg
dec
or
cmp
mov
popa
mov
add
call
and
or
sbbb
pop
aas
mov
dec
punpckhbw
dec
inc
mov
imul
hlt
aaa
jae
test
pop
dec
pop
test
repz
daa
in
ret
fistps
vmmcall
push
inc
hlt
push
or
sbbl
fdiv
push
push
or
filds
and
clc
insl
nop
mov
dec
loop
jp
xchg
jecxz
mov
lock
pop
cwtl
fcoml
jmp
jl
or
mov
pop
xchg
inc
call
mov
mov
repz
mov
jno
adc
je
jp
cwtl
out
pushf
daa
mov
cli
and
dec
dec
fistl
hlt
xlat
int3
faddp
mov
mov
mov
xchg
cwtl
loope
mov
adc
scas
inc
mov
shlb
sub
or
aaa
sub
mov
ret
pusha
dec
out
sbb
and
sbb
movups
nop
in
daa
inc
je
sub
sub
and
inc
dec
xchg
clc
xor
leave
jae
outsl
add
adc
push
pop
xor
push
ror
push
mov
repnz
pusha
stc
mov
adc
pop
daa
jle
adc
ja
movsl
push
add
sub
and
dec
sbb
jae
mov
pop
pop
outsl
and
pop
or
insl
sbb
sbb
jmp
test
or
and
mov
adc
sub
fnstenv
ret
xchg
mov
cli
dec
jne
stos
pusha
mov
out
cs
dec
andb
and
clc
sub
push
mov
mov
addr16
orl
nop
add
mov
xor
mov
hlt
mov
and
es
dec
push
add
sbb
addr16
cmp
xchg
xchg
cmc
cli
push
popf
test
mov
nop
movsl
push
inc
bnd
cmpsb
push
out
xlat
adc
movsl
mov
adc
rcrl
jns
lcall
sbb
out
mov
jne
jle
xchg
fnstenv
hlt
notb
push
aas
enter
and
push
insl
addl
adc
jnp
dec
add
les
pop
in
mov
dec
add
jecxz
push
adc
jle
je
inc
push
push
daa
and
pop
inc
call
test
jp
ds
adc
out
xor
jns
inc
lcall
and
lds
xor
pop
xor
fimull
dec
adc
or
lock
nop
push
in
das
shll
sub
xchg
dec
adc
xchg
or
add
fnsave
shr
iret
xor
mulb
pop
push
lcall
ss
lock
inc
mov
mov
mov
xor
cmp
cmp
mov
vunpcklps
es
mov
mov
inc
push
cmp
add
cltd
jl
rol
sbb
lods
mov
jae
mov
mov
sbb
or
adc
push
loope
jg
add
push
cmp
mov
jmp
je
hlt
or
imul
std
add
add
xor
pop
push
or
mov
sub
xor
movsl
call
or
xor
xor
out
jmp
cld
pop
imul
in
je
loopne
jg
outsb
or
jmp
pusha
pop
ljmp
imul
pop
outsl
inc
test
xchg
inc
inc
fiadds
dec
pop
mov
pop
sub
shlb
ficoml
xchg
inc
out
mov
mov
xlat
and
adc
outsl
xor
pop
idiv
push
repnz
loopne
sub
cltd
gs
pop
jb
push
fstl
and
aas
popf
bound
decb
addb
mov
test
push
arpl
adcb
and
daa
jbe
out
mull
ja
dec
jmp
push
inc
sahf
or
cltd
push
imul
divb
pop
mov
imulb
push
add
adc
pop
jle
jge
sbb
les
mov
call
cmp
scas
xor
sbb
jecxz
out
xor
add
movsl
outsl
je
loopne
shlb
hlt
nop
xchg
and
clc
sahf
dec
shrl
sbb
mov
nop
mov
jnp
xor
or
xchg
pop
cmp
add
mov
iret
clc
stos
pop
mov
lret
push
psadbw
push
test
clc
icebp
jmp
cli
das
mov
xor
adc
adc
loope
sub
mov
insb
mov
xchg
loop
lock
lcall
sbb
pop
pushf
inc
jmp
cmp
jns
pop
shll
push
xor
repz
sahf
pop
pop
neg
xchg
rcr
popf
jno
lcall
jl
nop
or
xor
jle
add
and
in
xchg
xor
mov
jmp
daa
add
inc
jmp
push
and
xor
rorl
inc
jle
cmp
test
out
out
and
arpl
cli
fsubrl
push
pop
dec
cmpl
bound
paddb
sub
ret
pop
push
mov
iret
mov
pushf
ret
jo
sub
shrl
add
pop
incb
dec
add
fdivr
cwtl
mov
push
orl
outsb
push
sub
jmp
sti
int
inc
pop
stos
add
or
add
cmpsb
call
pop
loope
jecxz
ljmp
rcrb
xor
dec
or
sub
movsl
or
push
cmp
das
test
adc
adc
or
push
adc
push
dec
icebp
jge
push
push
sarl
inc
repnz
cli
cmp
or
pop
ficoml
dec
add
mov
jmp
dec
dec
test
sub
mov
mov
or
mov
mov
xor
movd
inc
push
dec
stos
jo
sub
add
pusha
sub
lret
or
mov
inc
or
jl
scas
or
pushf
outsb
jne
dec
jbe
scas
aaa
popf
js
push
jmp
and
setbe
inc
push
ficomps
add
repz
bound
dec
inc
jl
inc
xchg
sbb
movsb
mov
push
cmp
imul
nop
dec
inc
add
sub
sarl
dec
add
or
inc
cwtl
xorb
and
inc
add
lahf
enter
add
popf
ret
cli
pop
stos
mov
add
cmp
sti
lock
icebp
or
sbb
insb
or
adc
adc
dec
into
rclb
sbb
add
xchg
jae
ja
xor
adc
fcompl
ret
fiadds
dec
rorl
inc
inc
pop
and
enter
iret
pop
test
pop
jmp
push
out
bound
push
call
pusha
aad
mov
push
pop
cwtl
sbb
in
mov
lret
fucomp
cmp
and
rolb
push
pop
cmp
movsb
xchg
jno
dec
push
add
shr
push
jmp
sbb
fnstsw
push
mov
jb
mov
movsb
int3
inc
inc
int
jecxz
in
popa
sahf
mov
dec
repnz
fidivrl
mov
bnd
push
push
dec
dec
xor
out
pop
push
pop
lods
or
mov
rorb
xchg
ficompl
out
adc
lods
mov
mov
inc
call
outsb
cli
lods
xlat
or
xor
lahf
bound
push
adc
ja
fisttpl
inc
jp
lcall
scas
jae
mov
rcl
cmp
cmpsb
and
xchg
push
or
inc
js
pop
add
ret
or
pop
clc
jg
or
call
inc
in
push
pop
xor
shlb
inc
sbb
mov
adc
cmp
mov
cmp
mov
shlb
leave
pop
pop
adc
mov
sub
push
fwait
pop
aad
or
test
neg
addl
sahf
pop
mov
and
shll
jle
movsl
cld
mov
icebp
or
and
xlat
mov
mov
addl
mov
jne
ljmp
rclb
dec
sub
xor
test
mov
pop
popf
fsubs
jmp
adc
aaa
lea
pop
mov
les
mov
out
pop
jbe
movsl
scas
lret
cs
clc
adcl
cmp
sbb
inc
adc
sbb
push
inc
or
aas
or
sbbl
orb
clc
pop
or
test
shlb
jne
mov
pop
dec
and
pop
jp
xchg
clc
xchg
enter
sub
jno
pop
push
int3
pop
popa
inc
arpl
pusha
cmp
cwtl
loop
rolb
shrb
xchg
stc
bound
lock
lds
scas
cmpl
xchg
jp
test
lods
test
and
or
dec
dec
adc
inc
repz
push
mov
or
cmp
add
inc
and
mov
andb
push
icebp
mull
xchg
out
sbb
idiv
sarl
in
sub
fmulp
fisubl
inc
adc
push
arpl
add
or
jmp
add
xchg
ret
dec
aam
cmp
out
jl
pop
scas
testb
add
psrlq
ljmp
add
daa
ficompl
call
xor
add
lea
inc
mov
jns
out
pop
mov
mov
daa
sti
iret
pop
pop
lret
rcrb
jmp
push
sbb
add
scas
adcb
mov
aas
sub
xor
pop
add
mov
push
push
mov
loop
adc
push
mov
add
adc
or
sub
cmp
cmp
ds
nop
jno
mov
aas
cli
js
ret
and
inc
push
push
dec
jmp
xor
dec
test
xchg
xor
sarl
pop
mov
xchg
cmc
insb
jl
pop
xor
sub
test
enter
xchg
dec
mov
add
jmp
jno
pop
mulb
rorl
pop
sub
mov
or
out
xor
aaa
dec
lahf
ja
repz
xchg
mov
pusha
adc
mov
icebp
jle
push
stos
sar
arpl
fxch
cmp
jmp
fdivrl
or
pop
push
gs
mov
dec
pop
rorb
or
add
jmp
std
sahf
les
mov
cmp
and
ret
sbb
in
xchg
pop
lock
cs
and
add
mov
dec
mov
out
or
pusha
and
insb
cmc
cld
es
or
enter
dec
rorl
lock
pop
push
fiaddl
jl
dec
mov
test
ljmp
push
clc
mov
and
and
xor
push
xchg
not
out
dec
add
mov
mov
cli
popf
mov
pop
iret
jmp
or
stc
push
movsl
push
loopne
loope
and
push
xor
in
and
adc
xorb
pushf
xchg
mov
inc
mov
push
xlat
dec
test
mov
rcll
xlat
push
movsl
sbb
mov
push
push
xchg
cmp
testl
mov
insl
std
mov
dec
addl
mov
je
rclb
adc
jmp
loope
inc
push
mov
filds
add
or
add
sub
jmp
adc
test
add
dec
loop
orl
data16
jmp
scas
xchg
push
test
mov
cmp
movsl
vmovdqa
out
push
xchg
sbb
or
mov
pop
out
adcb
nop
inc
cli
or
inc
pop
and
add
testl
js
out
pop
xor
out
into
or
push
push
add
push
dec
and
pop
sahf
mov
xchg
outsl
xchg
and
jge
push
icebp
cmp
das
push
mov
test
test
in
scas
inc
stos
mov
sub
xor
lcall
mov
pop
mov
or
add
mov
jno
push
aad
test
inc
imul
xchg
rol
not
xlat
nop
int3
push
mov
dec
shr
mov
fstl
sbb
pushf
mov
addr16
add
gs
mov
push
add
fcomp
je
and
fnstenv
add
push
and
push
mov
adc
mov
cmp
sbbb
sub
jmp
push
stos
add
cmp
lds
rcll
pushf
fists
std
cmpsl
xchg
mov
aas
dec
xor
cmpsl
mov
add
lret
inc
or
pop
adcl
test
dec
mov
pop
or
add
or
inc
jbe
push
outsl
mov
mov
pop
addr16
jecxz
and
xor
scas
xor
insl
or
jno
cmc
or
adc
cmpsb
mov
and
pushf
add
orl
rolb
and
cmp
out
stos
push
pop
neg
ffree
push
add
decl
inc
dec
bound
or
adc
pop
or
stos
stc
xchg
int3
add
sub
mov
sbb
jmp
les
clc
mov
cltd
lock
mov
daa
add
lret
inc
into
push
pop
nop
aam
or
rol
mov
pop
pop
cmpsl
jo
dec
xchg
pop
sub
je
mov
push
pop
pop
inc
xor
out
nop
aas
mov
jecxz
jl
push
jmp
push
mov
push
push
mov
xor
cmpb
aad
jb
es
dec
xor
stos
bound
adc
xor
movsb
xchg
rclb
popf
add
xchg
shl
stc
inc
dec
xor
push
dec
insl
cwtl
sbb
mov
stos
call
sub
and
loopne
nop
stc
pop
xchg
loope
das
mov
adc
adc
lcall
add
js
push
push
dec
dec
repz
sbb
andb
test
cmpsb
or
jle
popa
xor
cmp
jl
out
dec
cmp
add
inc
sbb
add
sti
sbb
dec
inc
push
or
pop
shr
testb
adc
push
mov
cmp
inc
or
jb
adc
lret
push
sub
or
enter
repz
inc
mov
bound
shl
mov
movb
inc
and
jge
inc
shrd
mov
shrb
sub
push
add
add
aam
push
cmp
cltd
test
xchg
mov
add
mov
pushf
fs
rorb
jmp
dec
ret
xor
cs
in
xchg
inc
adc
sahf
dec
sti
ja
lahf
gs
xchg
push
cmp
ret
rcrb
pop
push
push
pop
mov
jecxz
dec
mov
aas
sarl
stc
test
ja
int
flds
jl
pop
and
cmp
add
and
xlat
data16
cmp
aam
or
xchg
pop
jmp
add
repz
into
jae
aaa
dec
into
or
lock
mov
add
push
push
pop
pop
inc
add
jb
jmp
xor
sub
add
inc
imul
lock
loopne
xchg
pop
or
jo
clc
testl
pop
shl
push
pop
push
and
lahf
push
add
sub
aam
push
das
int
test
pop
or
xor
stc
and
mov
dec
lret
les
add
subb
fdivs
iret
es
movsb
out
xchg
mov
int3
add
jmp
gs
inc
mov
jl
ja
lahf
mov
or
dec
or
jb
pop
xchg
popa
loope
lret
pop
clc
sti
pop
jmp
xchg
fdivs
jno
xchg
mov
or
rolb
lret
in
xchg
xchg
fisttpll
ret
jl
call
mov
outsl
mov
and
icebp
xchg
into
inc
sbb
outsl
hlt
imul
xchg
xor
add
add
and
int
mov
push
movhps
sbb
mov
mov
neg
bound
jo
inc
mov
movsl
push
dec
jp
std
ret
vfmsubpd
mov
testb
sbb
out
cmp
cld
jp
adc
jmp
or
clc
test
cs
stos
add
leave
enter
xchg
repnz
jbe
adc
or
pop
fwait
lret
call
movsb
pop
fadds
pop
mov
add
in
push
add
int3
jns
dec
xchg
mov
fistps
dec
in
adc
fcoml
add
xorl
call
push
push
xchg
or
pushf
xor
sbb
push
gs
mov
sbb
xor
sbbb
jmp
cld
lea
and
int3
push
jno
add
call
mov
push
cmp
or
mov
pop
and
scas
decl
jns
jb
inc
mov
add
mov
call
mov
and
add
adc
pop
push
sub
daa
test
push
xor
mov
push
pusha
sub
mov
shlb
out
or
pop
mov
pop
dec
jecxz
jmp
pop
push
fcoms
push
push
fadd
mov
repnz
pop
sbb
mov
pushf
inc
jmp
jb
ds
cmpl
add
insb
dec
shlb
xchg
sbb
jg
dec
in
sub
outsb
stos
or
or
adc
and
movl
jb
icebp
js
dec
pop
ret
pusha
das
jnp
shr
orl
mov
repnz
or
shlb
imul
popa
sub
cmp
mov
mov
dec
jg
mull
sub
jno
xor
dec
shlb
sub
xor
std
mov
inc
mov
mov
shr
sub
push
sarb
xor
mov
xchg
push
add
sti
mov
pop
mov
gs
xchg
into
outsl
std
leave
je
nop
pop
mov
pop
cwtl
ja
das
cli
pop
push
push
mov
xchg
rclb
or
in
shlb
insb
sti
cmp
xor
enter
dec
or
sbb
mov
mov
add
adc
and
scas
fdivrl
ja
fbstp
nop
outsl
add
sub
fsubrs
pop
ret
push
mov
mov
sub
cmp
lret
xchg
push
jmp
xchg
or
ret
push
push
push
mov
dec
inc
mov
js
xor
pop
sub
xchg
adc
sub
pusha
or
sti
add
push
cmp
mov
pop
push
mov
or
dec
pop
leave
xchg
not
data16
lds
add
push
inc
mov
arpl
test
stos
or
loope
or
fstpt
push
mov
adc
mov
jge
inc
jp
std
inc
dec
xchg
cld
data16
sub
fs
icebp
test
je
sub
pop
out
add
pop
pop
push
push
das
pop
sub
adc
pop
bound
sbb
and
test
dec
out
fs
das
ljmp
fisubrl
aad
stc
mov
sub
nop
andb
mov
push
pop
inc
mov
test
jns
and
test
sbb
xchg
add
adc
push
mov
push
push
addr16
rolb
pop
push
pushf
popa
and
push
sahf
adc
and
inc
stc
push
addr16
subb
sbb
or
cli
or
mov
push
xchg
les
or
ja
outsb
test
adc
or
mov
mov
or
push
dec
hlt
xchg
inc
lods
rcll
imul
xorb
or
push
insb
es
inc
xor
mov
out
ret
jmp
dec
dec
xor
lret
mov
or
sbb
mov
pop
jge
push
mov
call
xchg
dec
fidivl
pop
mov
pop
pusha
jp
pop
call
sub
call
push
and
push
and
hlt
jbe
dec
pop
call
nop
mov
cmc
dec
adc
xchg
clc
xor
adc
add
jmp
xor
dec
pop
sub
or
mov
sbbb
cmp
pop
pop
inc
jmp
inc
fiadds
cmpsb
ret
arpl
mov
cltd
movsl
sub
call
inc
adc
clc
adc
out
inc
jae
nop
stos
outsl
jg
jae
pusha
sbb
mov
jno
pop
jno
loop
loopne
and
adc
push
daa
fsubs
pop
mov
ret
call
jae
popf
seta
scas
scas
int3
cltd
jmp
xor
jne
jp
jae
cmp
push
mov
cmp
sti
dec
xlat
mov
jl
xchg
add
lds
or
xor
ret
ds
and
negl
push
mov
cltd
sub
or
inc
xor
jmp
jno
sub
std
mov
pop
popa
jmp
arpl
aaa
mov
pusha
andl
push
push
mov
and
in
sbb
in
push
cwtl
out
adc
dec
or
mov
and
pop
loop
inc
and
daa
scas
or
rclb
sub
dec
inc
icebp
in
cli
mov
test
sti
std
pop
imul
xchg
inc
cmc
inc
and
sbb
push
push
dec
jg
in
inc
push
pop
dec
jmp
add
and
jmp
pop
push
movb
mov
and
push
imul
push
adc
lea
mov
xlat
push
cld
push
push
ficoms
dec
movsb
dec
pop
inc
rcl
add
cmp
je
int
mov
std
jmp
pop
inc
cmp
das
mov
fisttpll
movsl
or
push
cmp
fwait
sub
add
movsb
and
jmp
sub
and
adc
int3
add
add
add
mov
or
and
rcrl
pusha
push
sub
jl
jge
push
adc
push
das
mov
rcr
shlb
ret
leave
fmul
xor
std
mov
lret
mov
or
push
mov
inc
add
int
xchg
sbb
or
repnz
cmp
xchg
mov
cld
lret
cmpsl
insl
ss
mov
xchg
adc
inc
or
push
pop
call
into
imul
add
sbb
and
mov
ret
int3
loopne
insl
insb
sbbb
jecxz
cmp
cs
std
xor
jmp
jecxz
mov
repz
xor
icebp
or
cmpsb
and
jmp
sub
popa
mov
inc
sbb
sbb
sbb
dec
int3
xor
jnp
mov
pusha
pop
int3
mov
iret
pop
mov
inc
sbb
jbe
divb
pop
jns
es
ljmp
mov
rcrb
mov
adc
cld
lods
icebp
in
leave
addr16
add
jge
or
dec
fimuls
repz
pop
mov
fs
clc
xorl
inc
pop
popa
addb
dec
lcall
cli
sbb
lcall
mov
in
jmp
mov
and
inc
mov
adc
jbe
xor
xor
fdivrs
in
ret
or
popf
push
mov
dec
mov
bound
loop
cwtl
or
mov
jge
outsb
dec
add
aas
mov
mov
xchg
push
or
add
and
jp
push
xchg
push
pop
and
dec
add
and
test
mov
es
mov
loopne
push
push
outsl
jmp
bound
xlat
in
push
aas
push
sub
fcmovu
mov
or
cmc
shll
push
sub
pop
inc
cmp
es
andb
push
icebp
orb
gs
out
adc
xor
add
leave
std
bound
sti
adc
or
inc
leave
xor
add
fwait
dec
stc
iret
popf
jae
outsb
fmull
dec
add
orb
cmp
and
gs
gs
or
fdivs
out
fs
xchg
hlt
rorb
in
imul
ret
mov
push
daa
or
and
lods
jo
test
jmp
or
std
sbb
inc
jae
pusha
cmpl
cmp
jns
shr
mov
mov
ret
and
push
pop
cwtl
test
xor
pop
sub
xchg
sbb
das
add
imul
loop
in
sbb
das
mov
pop
cmp
add
sub
sub
movsl
rcll
test
push
ja
add
ficoms
lds
arpl
sub
fiadds
pop
push
push
xor
sti
lahf
scas
imul
dec
rolb
dec
sub
sahf
das
adc
jecxz
cmpsl
pop
andb
outsl
sbb
pop
imul
or
xchg
cli
in
sbb
clc
out
push
push
push
mov
sub
adc
cmpsl
mov
xchg
loop
push
pop
xlat
mov
fsubl
add
xchg
and
sub
pusha
adc
inc
xorb
xor
cli
aaa
loopne
std
mov
fistpl
jbe
sbb
and
jmp
pop
inc
lea
mov
es
shll
gs
xor
dec
ds
push
sub
push
insb
xchg
test
adc
arpl
jl
or
xlat
pop
dec
push
out
inc
or
cld
das
cmp
in
cmp
test
ret
clc
outsb
addr16
nop
pop
push
arpl
push
inc
rolb
mov
in
lret
inc
and
jmp
add
mov
or
add
pushf
in
hlt
ret
loop
push
inc
pushf
add
gs
es
jle
je
arpl
test
and
pop
imulb
lods
inc
cmpsl
or
andb
push
fsts
test
add
shrl
push
lds
or
pop
cmp
jmp
pop
lret
in
mov
icebp
sbb
jg
push
push
cmp
push
popf
fldenv
push
pop
adcl
cmp
mov
dec
fimuls
lock
jmp
subb
jecxz
mov
sbb
adc
je
aas
xor
jg
cld
in
andb
dec
je
mov
sbb
scas
dec
shll
pusha
sbb
mov
sahf
stos
mov
xchg
inc
gs
aas
push
sub
adc
stc
adc
test
jmp
jnp
notb
mov
das
lret
js
push
repnz
jmp
push
lods
rcrb
jmp
pop
clc
nop
xchg
cwtl
imul
lds
hlt
test
push
mov
pop
jmp
push
cmp
and
rclb
dec
sbb
rcrl
mov
dec
dec
dec
add
xrelease
shll
or
sub
mov
pop
push
push
les
push
cmc
insl
cmp
sbb
out
inc
les
sub
xchg
adc
sbb
data16
mov
pop
xchg
push
sub
push
lea
dec
pop
add
iret
add
out
neg
lds
jmp
cmp
jbe
sub
and
pop
push
imul
jp
xchg
jge
pop
cmp
shll
and
jmp
lret
ds
clc
xor
push
clc
cmc
pop
xchg
add
mov
xor
cmc
test
and
dec
in
loope
add
dec
jmp
add
add
lds
mov
sti
shll
je
pop
ljmp
adc
cmp
xor
mov
pusha
addr16
add
xor
rorb
out
je
mov
clc
adc
mov
xchg
dec
sbb
xchg
repz
addb
nop
inc
and
jl
in
or
insl
add
pop
popa
shrb
and
idivl
or
jmp
fbld
out
es
mov
jg
popf
aas
dec
in
inc
push
mov
push
out
push
and
cli
sbb
movsb
movsb
mov
ds
mov
addr16
fisubs
gs
jno
mov
push
jmp
mov
pop
in
xchg
or
push
pop
rcll
mov
roll
stos
add
inc
jg
cs
dec
dec
mov
jecxz
xlat
repz
inc
mov
xchg
lods
aad
mov
les
inc
add
sub
and
sbb
mov
sbbb
pop
insb
sbb
xor
mov
add
jmp
sub
inc
fisubs
test
mov
movsl
or
in
jp
jbe
jle
andl
dec
fwait
xchg
call
test
lret
adc
jns
cmp
xor
xor
fadds
pop
mov
mov
xcrypt-cfb
cmpsl
mov
not
push
aad
ret
out
push
pop
subb
jp
push
mov
sti
pop
sub
or
mov
movsl
cmpsb
int3
lret
mov
pop
pop
pop
shr
mov
lods
adc
test
gs
xor
xchg
std
inc
cmp
xorb
in
fadd
and
movntq
out
mov
cld
ret
jmp
dec
or
add
in
or
cwtl
push
in
and
loope
les
popa
add
pop
lahf
addb
xor
jne
add
pop
sub
mov
notb
les
in
insb
push
pop
mov
not
push
mov
adc
andb
dec
sub
jmp
push
adc
fsubr
cmp
testb
icebp
jg
adc
sbb
push
dec
cld
add
movsb
das
dec
mov
mov
dec
enter
or
mov
and
xchg
lahf
rcl
dec
sub
fs
or
push
mov
push
cmp
dec
inc
push
dec
stos
das
jo
repz
je
adc
mov
testb
mov
jae
push
pop
popf
lret
xchg
shll
inc
in
or
movsb
push
inc
cld
or
sbb
dec
push
cmc
sbb
and
idivl
or
pop
sarl
inc
push
sub
in
xor
ret
out
adc
orb
pop
pop
fisubl
add
cmpsl
arpl
jne
pop
sbbb
and
lcall
or
jmp
dec
push
push
pop
roll
imul
sub
fcmovbe
xchg
cmpsl
adc
popa
test
push
adc
ljmp
xchg
cmpsl
imul
shr
test
and
push
mov
hlt
cs
xchg
inc
addb
xlat
jp
push
push
xor
fisttps
add
test
push
mov
mov
add
hlt
pop
pop
xorb
movzwl
pop
adc
fimull
jo
push
or
mov
pop
mov
insb
jns
jmp
imul
out
cmp
clc
roll
aam
enter
push
std
dec
rcrl
leave
aas
mov
imul
std
inc
cmp
test
cmpsb
sub
orb
dec
nop
sub
jnp
inc
popf
mov
in
cmp
or
add
sbbl
fistpl
call
cwtl
jae
sub
xchg
jbe
cmpsb
mov
cs
into
sbb
sub
or
nop
inc
lret
or
call
mov
dec
xchg
imulb
mov
cmp
fimuls
add
pop
mov
add
sbb
add
mov
mov
xchg
addb
je
add
andb
dec
inc
jmp
test
inc
xchg
lods
lods
dec
fstl
out
and
in
shll
mov
mov
mov
shlb
adc
ljmp
push
sub
mov
and
loopne
dec
test
add
mov
pusha
mov
xchg
subb
mov
xor
jp
mov
dec
push
cld
push
cmp
xchg
shlb
fcomps
aaa
lods
xchg
mov
xlat
loop
jo
out
mov
add
dec
jg
jmp
popf
xchg
out
idivl
jmp
dec
push
jle
jle
push
mov
xor
bound
je
xchg
out
cmpsl
sti
fisttpll
inc
inc
in
pop
xor
mov
xchg
jo
mov
xchg
popa
lods
jmp
sub
lret
sub
push
xchg
adc
push
cld
mov
sub
mov
lret
push
add
sbb
add
inc
pusha
add
push
dec
aas
dec
or
jb
scas
insl
inc
mov
adc
mov
or
xor
popa
orb
mov
rcrb
pop
add
loopne
bound
fstl
cmpsb
xchg
or
pop
and
push
push
sub
daa
pop
jl
push
mov
iret
sbb
jmp
xor
pop
push
xchg
pop
jge
test
push
dec
cmpb
repz
xor
sub
neg
xchg
xlat
bound
adcb
dec
jmp
add
mov
push
rcl
or
int3
sub
cli
inc
pop
outsb
push
insb
lahf
loopne
insl
enter
jmp
sub
popf
std
sbb
js
mov
xor
pusha
add
or
mov
fdiv
loope
jle
jl
xor
push
adc
inc
mov
or
popf
iret
data16
loope
rcr
mov
sub
ret
push
inc
lahf
notl
stc
adc
pop
mov
movsl
movsb
pop
or
fstpl
int
imulb
adc
mov
sub
lock
stc
divb
adc
or
xchg
lcall
aas
pop
xchg
sbb
or
in
xchg
pushf
sbb
jno
sbb
pop
stos
mov
add
imul
push
in
jmp
pop
jae
push
and
push
or
fcomps
push
jmp
enter
cltd
rolb
rcll
xorb
jmp
loope
push
mov
idivb
imul
push
add
sub
jmp
adc
incl
iret
std
pop
lret
imul
pushf
sub
out
push
push
mov
dec
testl
scas
pop
std
mov
cmp
xor
jge
lret
ret
cmp
inc
pop
das
xorl
fmuls
dec
sub
sahf
pop
das
mulb
icebp
mov
insl
sti
lods
leave
ja
movsl
rolb
mov
jb,pn
add
pop
mov
mov
inc
andl
cld
add
push
decb
xchg
pop
in
hlt
mov
daa
or
movsb
dec
pop
adc
xchg
ja
and
mov
push
push
sahf
xchg
je
pop
jmp
add
popf
movsb
adc
dec
mov
jmp
mov
add
cs
inc
shrb
mov
pushf
jl
or
adc
mov
cs
stc
and
sub
std
xlat
mov
in
sub
push
mov
inc
xlat
movsb
pop
adc
leave
ss
cmp
pop
test
sbb
movsb
mov
mov
adc
dec
add
sub
adc
jae
sub
jae
add
xchg
cmp
int3
sub
movsl
or
and
in
xlat
ret
fdivr
and
mov
mov
clc
xorb
push
jno
loope
add
jae
jmp
outsb
movsb
popf
shll
outsb
fsubs
dec
inc
push
push
in
sub
xchg
outsl
arpl
inc
fimuls
out
jo
cmpsb
sbb
add
or
pop
cwtl
imul
inc
jbe
pop
jmp
adc
mov
jp
dec
in
dec
jmp
add
in
or
pop
xor
add
pop
push
push
xchg
rorb
push
jb
mov
fcoml
sub
mov
inc
inc
xchg
cwtl
and
cltd
cmp
jl
xor
data16
enter
add
addr16
addb
aas
or
xchg
dec
push
xchg
cld
or
inc
add
cmc
pop
pop
add
subb
jge
pop
and
cmp
sbb
ret
pop
jne
cmp
movsl
lret
inc
cmp
pop
cltd
xor
rol
je
dec
push
push
xor
xchg
repnz
jae
push
loopne
or
lret
pop
aad
jl
mov
cli
imul
sbb
xchg
push
shrl
pop
sbb
outsl
inc
mov
add
aad
push
jmp
inc
and
call
push
mov
dec
pop
dec
daa
lds
cmp
dec
mov
and
or
or
pop
xor
test
mov
dec
xor
push
ljmp
mov
mov
in
inc
pop
cwtl
insl
popf
pop
xor
bound
xor
cmp
sbb
dec
inc
cmpsl
pop
and
push
in
push
xor
push
stos
push
xor
lods
sti
lock
lcall
cld
in
inc
inc
fadds
test
add
pushf
in
imul
pop
das
mov
inc
add
test
pop
call
cltd
ret
stc
jb
adc
pop
dec
imulb
dec
loopne
and
or
push
cmp
shll
cmc
or
shl
or
dec
sub
ss
adc
aaa
fimull
or
cwtl
push
inc
imul
inc
cmp
jle
or
nop
pop
or
test
jmp
rolb
add
shlb
xchg
call
xchg
fcomps
mov
loop
mov
movsl
fmull
inc
inc
or
jne
push
jle
adc
dec
andb
xchg
pop
dec
add
xor
pop
out
mov
or
cmp
or
mov
ljmp
orl
rclb
sub
insb
pop
and
lock
inc
pop
push
adc
not
add
fildl
jmp
push
sub
or
jno
xorb
pop
or
sub
cvtdq2ps
testb
outsb
popf
sub
pop
push
push
lea
das
sbb
aad
je
xor
jl
clc
push
inc
jecxz
cltd
push
or
leave
in
push
lahf
repnz
mov
jb
cs
mov
push
add
push
leave
pop
aam
inc
jno
rcpps
mov
pusha
jmp
and
adcl
arpl
push
mov
imul
and
mov
jmp
xchg
test
adc
add
or
xchg
xchg
xlat
inc
enter
mov
mov
rclb
add
add
data16
inc
add
xor
jmp
rcll
inc
jno
sub
mov
mov
xor
inc
pop
xchg
popa
jp
and
mov
data16
jp
pop
sub
push
lods
sub
jb
shlb
nop
mov
xchg
sbb
sti
mov
fwait
sbbb
andl
or
lods
add
cmp
add
int
bound
dec
push
jmp
out
fmull
fiaddl
ljmp
mov
add
orps
shr
fcmovne
jns
stos
mov
call
inc
push
pop
add
stos
dec
repnz
ret
push
pop
sti
sub
sub
xor
dec
push
dec
frstor
cmpsl
jg
daa
dec
push
sbb
jg
out
dec
and
and
mov
or
rcll
cwtl
or
daa
sbb
imul
clc
xchg
ret
jge
pusha
adc
pop
dec
loope
sub
jne
movsb
fs
scas
mov
push
mov
xchg
add
add
add
add
or
add
hlt
add
pushf
adc
add
idivl
add
sub
jmp
lods
and
xchg
scas
or
jbe
dec
shrl
xchg
pop
push
movsb
sub
js
adc
scas
test
or
adc
xlat
add
fists
adc
push
add
stos
insl
and
add
adc
xlat
imul
lea
pop
aas
mov
sbb
or
push
imul
pop
rol
inc
repnz
mov
out
add
insl
pop
sub
sbb
shll
pop
pop
push
sti
inc
nop
xor
insl
pop
adc
shll
jbe
or
or
pushl
add
fs
dec
cli
pop
xchg
daa
mov
jl
jmp
sub
adc
mov
dec
int3
ja
inc
movsb
cmpsl
xor
add
add
rorb
cmc
push
or
jge
ja
ss
lret
cs
push
clc
shl
jne
sahf
std
cmp
fsubrs
adc
inc
in
loop
push
xlat
cmpsb
mov
pop
hlt
mov
js
pop
mov
push
repnz
dec
addb
cmp
inc
or
js
adc
cwtl
nop
pop
xchg
aam
inc
jmp
adc
sub
dec
add
ret
mov
and
jae
fsubrs
dec
xchg
lods
dec
leave
add
imul
mov
add
dec
addr16
ljmp
inc
jne
addb
and
xor
xor
mov
xor
and
mov
add
push
jns
dec
adc
or
xchg
mov
in
popa
dec
and
inc
or
lret
pop
fnsave
ret
rcll
sbb
testb
jp
xor
sub
mov
das
int
add
es
push
ret
pop
pop
out
les
adc
dec
and
pop
nop
mov
das
jne
mov
mov
push
mov
jb
js
ret
addb
inc
jmp
push
dec
pop
mov
popf
dec
loop
add
and
sti
fimull
add
das
mov
pusha
outsb
cmp
ja
or
orb
ret
rol
add
hlt
les
pop
lods
mov
or
fs
adc
dec
int3
sti
jl
push
dec
stos
and
mov
push
pop
ret
add
sarb
push
jnp
mov
in
movsb
adc
pop
dec
popa
jle
pop
add
popa
xor
add
cwtl
xor
pop
push
sub
pop
or
and
add
cs
ds
cmpsl
push
pop
xchg
pop
xchg
add
test
es
ficomps
outsl
movsb
dec
cmp
es
jge
ljmp
gs
pop
lock
sub
sub
inc
pusha
xor
jno
and
adc
out
and
test
jmp
xor
not
xchg
ror
cmp
enter
imul
sub
hlt
inc
sub
out
data16
push
mov
leave
call
in
shlb
hlt
push
push
push
adc
aas
hlt
aaa
xchg
dec
les
decb
xor
sub
push
or
lods
adc
hlt
jb
xor
xorb
mov
pop
dec
push
adc
mov
add
sub
cmp
cmp
rcl
orb
rcll
jmp
sbb
roll
cwtl
sub
das
shrb
shrb
lret
mov
dec
mov
mov
push
xchg
wbinvd
push
orl
sub
icebp
jns
inc
das
xchg
and
jp
mov
mov
pop
pop
xchg
sbb
push
push
xchg
test
sysenter
scas
int3
stos
sbb
in
inc
pop
push
mov
in
mov
lea
psubsw
pushf
and
out
pop
shl
push
add
adc
inc
xlat
mov
roll
cmc
test
add
mov
lock
mov
pop
mov
pop
repz
icebp
inc
dec
gs
sub
mov
push
out
cmpsl
mov
jmp
and
popa
ffreep
adcl
lcall
mov
sahf
mov
icebp
in
loope
aad
adc
push
add
xor
jg
sub
and
sbb
sti
xor
mov
movsl
cmp
or
sub
jle
call
ljmp
aad
sub
add
sbb
pop
dec
and
push
or
pushf
ja
pop
dec
mulb
movsl
andb
loop
testl
inc
jl
shlb
je
xchg
and
aam
sti
fwait
xor
mov
mov
sub
jb
hlt
aaa
xorb
test
xchg
push
lret
pop
popf
sarl
mov
repnz
adc
dec
pop
mov
in
xor
push
pop
int3
inc
sbb
add
leave
push
add
loopne
or
into
mov
test
lock
jno
ss
js
and
cs
inc
loopne
cmp
lds
iret
push
jge
clc
lea
or
xor
adc
pop
insl
in
mov
sbb
jmp
lock
dec
mov
push
xor
popa
cld
dec
arpl
xor
xor
shr
inc
or
stos
ss
fsubrs
or
jmp
and
cmp
out
jg
inc
inc
inc
js
mov
inc
push
mov
or
imul
std
xor
mov
ds
and
rcrb
loopne
mov
call
mov
insb
lods
jns
sub
mov
loopne
daa
jecxz
and
dec
sub
lods
push
enter
mov
sub
inc
lahf
sub
cmp
inc
or
mov
jmp
mov
ja
inc
pop
pusha
jb
mov
sbb
sub
mov
xchg
aam
or
roll
lret
pop
push
bnd
lods
les
dec
push
es
pop
or
ror
lods
mov
outsl
cltd
shll
push
in
jmp
sbb
not
or
lret
cmp
lods
mov
popa
dec
repnz
test
call
jecxz
sub
lods
push
clc
and
add
cmpsb
inc
ja
shr
add
out
addl
cmpsb
or
mov
inc
mov
rolb
or
sbb
dec
fstps
sub
inc
sbbb
jmp
movsb
ret
out
scas
xchg
adc
or
cltd
push
push
rcrl
inc
sbb
or
clc
pop
push
call
jle
and
push
cmpsb
outsl
or
out
testb
and
mov
pop
pop
stc
xchg
out
inc
adc
decl
jg
ret
cmp
movsl
xchg
fistl
subl
pop
mov
rcrl
mov
fisttps
pop
aad
dec
jnp
xchg
mov
lret
xor
sub
dec
gs
push
sub
pop
or
outsb
sub
add
out
les
cmp
pop
mov
pusha
ret
subb
jge
jl
dec
std
xor
push
popa
es
repz
mov
dec
mov
test
mov
pop
pop
inc
lret
leave
sub
scas
test
loopne
add
xchg
aad
jmp
push
add
xchg
lods
mov
sub
sub
mov
jae
mov
daa
inc
cmpb
adc
mov
hlt
mov
iret
stos
orl
dec
pop
cld
lret
xchg
loop
pop
xchg
cwtl
xor
xor
std
mov
dec
cmp
cld
das
fisttps
mov
mull
scas
inc
ficomps
jo
negb
in
stc
ret
add
push
adc
push
inc
outsb
inc
dec
pop
pop
mov
cmc
pop
and
pop
aas
daa
xor
mov
dec
popa
dec
push
inc
dec
mov
out
loop
mov
inc
test
mov
add
out
xlat
call
stos
cmp
das
ds
sub
jmp
sbb
xor
mov
xor
jp
sub
outsl
popf
sbbb
shl
cmp
sar
sub
push
pop
shlb
push
adcb
hlt
cmp
ds
push
push
daa
jg
push
inc
xor
fsubrs
test
ss
xor
pop
xor
add
and
add
dec
mov
out
dec
shlb
bound
movsl
pusha
push
mov
pop
fists
mov
fucomi
rorl
add
dec
push
inc
jne
imul
jg
orb
pcmpeqb
sbb
movl
loope
ds
loop
jno
adc
xor
sub
add
xchg
popf
loope
or
addr16
or
push
leave
test
daa
pop
sub
mov
dec
jmp
rcrb
inc
popa
push
notb
push
insl
sbb
pop
std
cs
jecxz
mov
and
push
cmpsl
sbb
dec
ljmp
pop
or
inc
and
jmp
xchg
and
sub
push
mov
and
jl
je
or
jns
ret
cs
sbb
daa
push
push
adcb
ds
xchg
dec
hlt
push
mov
cmc
stos
add
mov
loopne
sub
jl
xchg
xlat
hlt
roll
fdivr
sahf
dec
or
mov
cmp
pop
jmp
call
push
inc
sub
pop
sub
gs
pop
stos
cmp
inc
daa
add
push
sub
xor
ret
notb
sbb
xchg
imul
cmpsl
mov
jne
repz
test
dec
out
or
out
pop
add
lds
ret
ljmp
loopne
jle
mov
sub
push
jecxz
sub
add
shrb
xor
push
jmp
std
and
jmp
and
pop
mov
bound
repnz
loopne
dec
inc
push
jmp
or
pop
inc
data16
out
or
mulb
xor
jp
mov
imul
xor
aad
mov
movsl
mov
and
inc
enter
push
cwtl
fwait
adc
inc
fnstsw
in
pop
jmp
push
mov
insb
or
cmc
outsl
add
pop
loop
pop
hlt
jno
and
scas
mov
add
push
std
in
cmp
sarb
stc
repz
ljmp
adc
jns
mov
ret
jno
cli
aas
repnz
or
add
popf
jns
lret
lcall
repnz
subb
insl
clc
pop
pop
lea
mov
xlat
insb
cmpsb
pop
jno
mov
sub
and
push
pop
lret
inc
jno
pushf
mov
xchg
push
lret
cli
icebp
sti
loopne
and
stc
outsl
fists
push
ret
push
in
xor
xchg
xchg
mulb
adcb
jne
hlt
mov
cli
imul
mov
fistpl
xchg
cvtps2pi
lods
sub
and
sbb
mov
lret
push
jmp
stos
push
cmp
aas
jne
pusha
jo
and
mov
mov
daa
jmp
lods
cmpsl
jle
inc
and
cmc
inc
std
xchg
cltd
ret
add
fstpt
jecxz
lret
fdivrl
inc
jge
std
popa
std
andb
cmp
movhlps
iret
out
cld
fwait
shr
test
mov
push
neg
cmpsb
adc
add
test
inc
pop
das
ret
add
in
push
add
aad
add
jl
shrb
push
mov
dec
das
movsb
sbb
scas
sbb
into
xchg
push
mov
loop
dec
and
movsb
mov
mov
in
out
roll
mov
jae
adcl
dec
jg
xchg
pop
popf
mov
jle
add
mov
or
jmp
testb
outsb
fildl
sub
sbb
cld
pop
dec
pop
or
clc
pop
sbb
push
bound
adc
and
fstpt
outsb
adc
mov
inc
ljmp
xlat
mov
add
lods
sub
clc
jecxz
inc
or
rcr
jbe
pop
push
mov
add
adc
stos
pusha
nop
stc
or
push
add
xchg
js
rcll
fldl
jg
mov
inc
cmp
push
out
xor
insl
pop
lahf
sbb
push
mov
add
dec
sub
mov
fistl
jmp
mov
fsub
push
add
sbb
imul
dec
ret
in
or
add
add
adc
adc
and
cld
push
dec
out
cmp
iret
cmp
imul
push
push
nop
jg
or
lods
and
aaa
jmp
cmpsb
or
mov
xchg
pop
add
push
push
mov
daa
pop
pop
adcl
lahf
mov
mov
lret
fldcw
adc
xchg
imul
das
mov
stc
push
imull
inc
sbb
in
add
or
dec
mov
divb
stc
jge
xor
roll
mov
dec
rcl
and
xchg
popw
test
adc
cs
mov
dec
inc
push
xlat
mov
aad
popf
and
or
std
test
outsl
lahf
stos
inc
hlt
imul
mov
sbb
or
jno
cmpsb
inc
mov
push
pop
std
repnz
xchg
adc
push
lahf
daa
inc
xchg
xor
push
repz
pop
sub
adc
ds
add
jnp
push
jmp
add
insl
addb
or
mov
out
or
gs
ret
pop
push
rcrb
test
popf
inc
inc
or
inc
in
out
cmp
cli
adc
mov
lea
mov
or
inc
rcll
out
pop
sub
push
loopne
adc
pop
test
call
ret
ret
leave
jle
les
lret
ljmp
daa
fsubrl
xchg
mov
add
pop
mov
add
mov
lret
cmp
jmp
ljmp
or
roll
pop
xchg
cwtl
movsb
out
xchg
jb
mov
sbb
daa
mov
ret
mov
and
jb
dec
inc
dec
sub
adc
sub
fstpl
mov
add
jmp
sub
loop
push
sub
pop
shl
in
fs
xor
dec
lahf
and
pop
add
push
ret
les
dec
iret
movsl
jns
cmp
cmp
sarb
mov
movsl
popa
add
loop
nop
xchg
rcrb
sbb
shl
add
aad
dec
mov
loopne
jp
jnp
sub
jb
inc
xchg
and
loopne
sbb
fstps
das
push
sub
mov
inc
addb
mov
xor
pop
push
xor
push
adc
std
dec
pushf
push
jae
jne
cmpsb
push
dec
call
add
jae
dec
sub
xor
pop
frstor
inc
dec
jp
mov
cmp
push
push
lea
popa
cmp
ss
cmp
mov
push
aam
xor
pop
pop
icebp
pop
rorl
pop
cwtl
or
push
sbb
push
in
sub
pusha
or
cmp
jnp
xor
pop
dec
repz
arpl
ret
sub
imul
xchg
adc
ret
out
inc
mov
imul
push
rorb
xchg
sub
mov
movl
loopne
or
jb
and
fcoml
mov
aad
pop
dec
cmp
xlat
pop
popf
add
cmovnp
aas
xchg
add
cmp
or
mov
mov
adc
jb
xrstors
jnp
jns
lahf
fcompl
xor
dec
jmp
sub
dec
jl
lret
sbb
stos
sub
imul
mov
xor
inc
pop
fmull
push
ja
inc
sub
lret
lea
push
popf
mov
xchg
inc
ljmp
out
pop
and
push
dec
inc
xchg
lods
aaa
jge
mov
js
lret
das
lcall
add
addl
dec
dec
jmp
pop
outsb
sbb
dec
dec
cld
stc
cmp
inc
mov
pop
mov
sub
js
test
pop
cwtl
lock
and
pop
shl
dec
imul
pop
fisttps
or
pop
pop
xor
pop
mov
or
mov
mov
and
ljmp
pushw
cwtl
and
out
dec
pop
fstps
sbb
add
push
rolb
addb
and
add
xor
xchg
imul
or
inc
mov
mov
cmp
cmp
xor
mov
and
pusha
sub
inc
fiadds
xor
in
in
out
sbb
inc
pop
and
lcall
shll
push
jmp
int3
adc
jns
data16
scas
sub
push
inc
mov
icebp
movsb
xor
pop
int3
pop
mov
pop
stc
int
movsb
sub
or
inc
sub
push
insl
aas
and
int3
gs
dec
and
pop
loopne
inc
bound
pop
inc
decb
push
enter
sub
cmpb
pop
mov
xchg
lock
fstps
pop
out
or
jb
xlat
in
or
test
and
in
push
pop
imul
nop
dec
pop
cld
lret
lcall
push
mov
das
filds
xor
pop
imul
mov
jo
lock
adc
out
pop
fsubrl
push
shlb
jb
insb
outsl
pop
lcall
or
push
push
and
ja
jmp
ret
bound
testl
mov
shlb
aad
add
add
mov
sub
lahf
gs
mov
call
mov
or
xchg
add
repnz
cmp
jo
roll
je
jge
push
or
sbb
adc
cmpsb
and
xor
pop
mov
sbb
popa
pop
cmc
cmp
xor
lret
jns
std
sbb
mov
push
repnz
jo
aaa
mov
inc
daa
dec
and
or
ficompl
dec
or
sahf
clc
fmuls
and
push
adcl
std
add
clc
pop
aaa
enter
push
ret
push
mov
push
or
clc
or
mov
data16
int3
rclb
jle
push
adc
cltd
mov
mov
xchg
add
pop
mov
adc
pop
call
mov
ljmp
mov
shll
lahf
gs
test
in
and
lret
ja
out
xor
jmp
xor
adc
cmc
or
sbb
mov
test
popf
inc
stos
testl
popf
aaa
movsl
roll
and
pop
push
repnz
dec
int3
inc
add
lahf
dec
add
push
inc
or
sbb
push
es
or
adc
sub
outsb
je
pop
jns
xor
xor
shl
cmp
mov
out
mov
sub
pop
xchg
sahf
adc
pushf
jnp
jmp
aaa
lcall
mov
dec
enter
and
jmp
leavew
jecxz
jns
sbbb
sbb
or
fs
lock
jge
cld
mov
test
in
jo
fwait
dec
nop
call
or
dec
repnz
sub
nop
fbld
in
jne
pop
adc
xchg
xchg
ss
mov
imul
fcmovbe
fldenv
mov
loopne
sahf
push
pop
inc
xchg
xor
cmpl
or
and
adc
clc
stc
or
and
xchg
push
hlt
inc
lock
loopne
or
mov
ficoml
push
stos
pop
or
in
lds
sub
test
outsb
aaa
rorl
inc
add
test
jno
cmpl
cmp
xchg
pusha
jp
and
inc
add
addr16
jle
outsb
cmpb
push
inc
in
sbb
xor
or
mov
and
inc
je
xchg
inc
push
sub
push
and
ss
nop
push
popf
adc
jo,pn
sub
add
insl
in
in
addr16
push
cwtl
and
xchg
jge
sbb
int
aad
dec
mov
push
jmp
lahf
dec
lds
shrl
bound
sti
push
mov
sahf
test
xlat
fiaddl
in
cmp
add
xor
or
cmp
cs
add
rorb
cmp
rcrb
mov
jno
mov
cmp
or
add
test
std
and
imul
cmp
jmp
rcrl
mov
fsts
fistpl
push
push
shll
test
jae
gs
push
or
add
in
pop
or
cmp
jle
mov
jmp
leave
push
in
fsts
in
test
dec
sbb
fcomps
xchg
inc
add
cmpb
push
dec
or
jmp
scas
inc
rcl
inc
lods
jl
cmp
scas
pop
or
mov
mov
push
cmc
pop
jle
imul
push
adc
outsb
lock
pop
ret
fadds
clc
and
pop
pusha
scas
mov
pop
push
adc
loopne
pop
mov
xchg
jmp
call
jge
inc
adc
mov
dec
lcall
mov
jl
mov
jmp
popf
cltd
inc
aas
or
std
cmpsl
out
pusha
loope
and
adc
add
sbbb
add
test
ja
sub
adc
repnz
sbb
pop
cwtl
adc
and
addl
bound
ds
popl
jp
ficoml
pop
add
cld
or
xor
cltd
cs
mov
hlt
stc
adc
mov
scas
and
cmp
pop
mov
pop
imul
cmp
or
mov
xchg
mov
imul
dec
pop
xchg
dec
fs
das
ds
sub
add
mov
cltd
and
mov
mov
and
pop
dec
sub
test
and
or
push
pop
test
or
sbb
xor
repnz
mov
ljmp
mov
loopne
lahf
push
xor
adc
pushaw
les
xchg
inc
xchg
sbb
sti
pop
lods
fwait
inc
lret
pop
jge
mov
in
pop
pop
cmp
dec
pusha
leave
pop
adc
es
dec
mov
fwait
dec
mov
sbb
push
or
pop
pop
xchg
inc
insb
pop
adc
xor
enter
mov
sub
out
jns
pop
outsl
mov
clc
into
xchg
mov
cmpsl
int
ret
mov
subl
mov
sub
cli
es
dec
or
pop
adc
test
or
jmp
gs
testl
pushf
loop
mov
sbb
iret
movl
and
pop
push
mov
es
or
bound
inc
fcompl
xor
mov
pop
xor
lock
jecxz
adc
xchg
xor
dec
sub
pop
add
or
xchg
pusha
mov
ret
jmp
dec
orl
add
fidivrs
pusha
in
lret
add
push
andnps
std
or
pushf
sub
xchg
xor
out
pop
push
mov
push
out
lcall
lds
lret
push
cmpsb
push
nop
add
repz
sub
andl
or
inc
push
mov
or
and
mov
mov
jmp
mov
dec
xchg
in
push
push
stos
sar
roll
sub
jmp
lea
dec
fld
and
adc
call
or
cmp
call
or
xor
or
or
daa
jecxz
mov
sbb
xchg
clc
rclb
or
and
pop
test
mov
push
xor
sti
pcmpgtb
dec
rcll
pop
lea
icebp
das
enter
stc
or
sbb
pop
adc
dec
xchg
add
or
outsb
mov
mov
inc
mov
insl
xchg
push
dec
inc
mov
aam
cmp
push
pusha
bound
lea
jae
and
or
mov
push
leave
cmp
outsb
int3
fisubrs
add
push
jmp
pop
inc
out
xchg
mov
adc
in
bound
push
mov
dec
jg
repz
push
pop
push
js
popa
imul
jnp
fcoml
add
and
lock
dec
inc
xorl
lods
shll
pop
sub
out
cs
popa
push
adc
mov
out
add
pop
roll
and
xor
add
mov
jmp
mov
jbe
bound
add
fsubs
sub
dec
mov
push
mov
jmp
xor
jmp
das
inc
fdivrl
pop
push
and
jmp
mov
lods
dec
je
in
jae
dec
add
push
insb
lret
dec
iret
mov
and
add
cmp
inc
cs
in
mov
xchg
mov
sahf
jg
test
inc
sbb
in
cmc
bnd
pop
out
scas
adc
or
and
out
iret
mov
pop
push
mov
lds
adc
mov
mov
pop
inc
js
add
jmp
shlb
jmp
push
out
or
dec
jo
add
jmp
mov
sub
pusha
sub
cmc
add
test
cwtl
push
push
mov
push
sub
pop
idivb
test
adc
add
pop
cmpsb
xor
xchg
xchg
push
jmp
loope
mov
add
add
adc
xor
lret
sbb
scas
cmp
push
lea
pop
lahf
cmpsl
mov
ss
sub
or
push
test
mov
jmp
mov
cmp
ds
cli
adc
clc
dec
lods
xor
inc
pop
or
pop
push
xlat
xchg
shl
iret
loopne
xor
cmp
xor
pop
dec
push
daa
ud0
fildll
pop
iret
lret
pop
mov
rcl
inc
jmp
testl
fstpt
movsl
add
mov
mov
adc
fucomp
aaa
dec
in
add
scas
xor
rorb
and
addl
scas
mov
pop
shr
sbb
sub
mov
pop
xchg
idivl
cwtl
inc
or
pop
and
mov
add
cmc
pop
shlb
movsl
pop
loopne
mov
repnz
xor
push
subb
daa
push
inc
mov
jno
push
xchg
pop
jb
fistps
in
xchg
icebp
cs
pop
sbb
mov
xor
xchg
mov
adc
outsb
mov
insb
bound
test
push
movsb
incl
cmpsb
int
cmpsl
arpl
mov
loopne
xchg
mov
mov
ljmp
mov
mov
aaa
adc
ret
jecxz
xchg
add
adc
shll
or
sub
icebp
jmp
adc
mov
shl
rorb
mov
pop
adc
cltd
jl
fcom
dec
aam
push
cli
lcall
adcl
push
shr
cli
dec
or
add
jbe
add
sbb
inc
lcall
repz
xchg
dec
add
fimuls
out
push
inc
push
add
fsubrs
pop
pop
pop
adc
mov
lret
inc
test
mov
fwait
sub
add
or
mov
sub
or
cmp
xlat
mov
lcall
cltd
mov
mov
xchg
fsub
dec
push
adc
or
loope
xor
movsl
lods
mov
mov
lret
mov
push
imul
pop
jmp
fildll
cltd
inc
lods
push
adc
js
popf
stc
xor
loop
and
movsb
mov
cmc
imul
inc
loope
push
adc
enter
cmp
jmp
dec
out
add
mov
jne
cmp
ds
xchg
mov
sbb
mov
cs
shll
nop
push
mov
xor
outsb
or
cmp
in
test
jmp
adc
adc
loop
rcr
mov
adc
pop
or
xchg
cmc
subb
das
sbb
mov
adc
pop
std
and
daa
shl
sub
sub
or
cmp
fiadds
out
pop
add
push
cld
fnstsw
sarl
and
sti
idivl
sub
stos
aad
sbb
popa
dec
inc
rorb
fldenv
adc
add
cwtl
inc
and
outsl
into
sub
mov
xor
sbb
and
jl
popf
test
sub
push
lods
xor
inc
clc
add
sub
xchg
mov
ficoml
pop
test
pop
push
jge
imul
stos
lcall
sar
rorl
out
sub
sti
xchg
popf
cmp
insb
notl
lret
popf
add
jnp
std
loope
rclb
rol
push
mov
bound
fdivrl
push
mov
out
add
daa
jae
push
or
sbb
js
push
cmp
sbb
flds
shrb
test
icebp
jmp
xor
ficoms
lret
aas
xchg
sub
daa
fs
sub
push
in
bound
adc
dec
mov
and
icebp
or
xchg
movsl
pop
jmp
pop
out
pop
sahf
jo
mov
jb
jnp
or
movaps
xchg
ret
cmp
aas
cmc
or
mov
mov
mov
adc
jb
inc
or
dec
sub
pop
mov
push
mov
popf
pop
adc
mov
data16
jmp
out
push
adcb
out
mov
popa
mov
sub
jns
adc
out
cmp
iret
nop
dec
enter
xor
aam
cmp
fsubrs
push
cmpsl
fs
xor
sub
mov
xchg
int
scas
sub
pop
sub
rorl
push
std
sub
adc
out
cmp
fisttpl
push
pop
pop
or
sbb
pop
push
jne
popl
negb
xor
popa
cs
std
or
pop
aam
orl
and
daa
mov
adc
fidivrl
pop
mov
shr
shl
jg
icebp
xlat
rorb
or
inc
int
inc
xor
aam
jp
fmuls
jbe
in
pop
cwtl
push
or
lcall
js,pn
cwtl
or
xor
pop
mov
aad
sbbb
add
cli
jnp
aas
fadds
mov
mov
dec
xor
sub
lahf
std
inc
or
adc
cmpb
dec
data16
mov
mov
das
mov
hlt
add
mov
out
repnz
es
cmp
and
add
repz
out
pop
push
mull
orb
mov
dec
outsb
push
add
or
mov
push
inc
cmp
pop
push
ljmp
in
mov
dec
addl
jno
in
mov
cli
bound
add
stc
pop
and
push
pop
inc
sarl
mov
aaa
into
pusha
adc
or
lods
jmp
andl
fistpll
cmp
mov
aas
mov
les
pushf
xor
xchg
mov
enter
or
push
ret
iret
les
arpl
add
cld
add
jmp
lods
push
mov
adc
clc
pop
dec
rcrb
xor
aam
mov
xchg
mov
movups
dec
dec
sar
push
mov
arpl
cltd
icebp
jl
xchg
shrb
xchg
icebp
and
cs
mov
dec
rdpmc
bound
icebp
jae
out
repz
pop
ljmp
ret
or
and
jns
or
fucomi
mov
push
fbld
pop
push
push
xor
in
mov
int
xor
and
or
sbbl
adc
mov
in
adc
mov
inc
fdivs
dec
test
test
test
sub
sti
pop
or
lods
dec
into
jge
or
rorb
cmovle
pop
sbb
cmpsl
daa
imul
int
and
sbb
mov
and
dec
in
mov
add
aas
lds
sbb
sbb
outsb
addl
inc
dec
push
repz
ja
jp
inc
or
xor
add
and
jl
jge
add
rorb
mov
jmp
mov
xlat
xchg
adc
push
jns
lahf
sbb
adc
or
add
push
lahf
lds
cmp
sub
sub
cld
mov
inc
fbld
and
mov
cmp
adc
pop
mov
xor
in
int
mov
sbb
jmp
sbb
add
dec
push
jge
enter
push
xchg
rcr
dec
dec
cmp
in
lahf
test
leave
enter
pusha
pusha
popa
cmc
lahf
mov
jnp
dec
pop
push
mov
lret
out
loopne
pop
mov
dec
xchg
inc
xchg
cmpb
out
cwtl
lea
add
sub
and
add
ret
pop
sbb
add
sbb
leave
pop
icebp
inc
mov
mov
add
or
sarl
movsb
or
dec
dec
sbb
mov
sbb
dec
movsl
add
cs
or
addr16
imul
mov
dec
mov
or
rcl
in
xlat
and
dec
mov
je
nop
cmp
or
dec
lods
insl
pusha
lods
rolb
mov
in
push
cmp
inc
outsl
test
data16
sub
filds
mov
adc
pop
mov
push
push
jmp
repz
ficomps
imull
ret
mul
sub
shl
and
int
data16
inc
xor
sub
rol
xchg
pop
shll
sbb
add
test
xchg
mov
lahf
aad
push
je
sub
dec
stos
mov
push
xchg
arpl
mov
mov
ret
add
cwtl
or
shlb
arpl
mov
push
xchg
sti
sar
outsb
subb
xlat
xchg
jb
mov
jns
sbb
xor
pop
mov
aaa
dec
jne
xor
pop
shlb
and
adc
adc
mov
push
lcall
sub
mov
sub
sub
rolb
lahf
dec
or
dec
lcall
cmp
xor
push
jnp
add
cmc
xor
mov
dec
push
lock
pop
dec
ss
add
sub
jmp
dec
dec
icebp
xchg
dec
rorb
mov
mov
out
in
and
int3
out
jns
ljmp
js
out
pop
lods
mov
in
and
xor
jg
inc
adc
mov
lret
cmpb
sbb
mov
push
or
sub
out
jmp
out
leave
adc
push
rorb
aad
in
or
jae
jp
adc
loopne
sbb
shrl
ret
cld
xchg
or
jbe
mov
test
mov
push
xchg
or
ja
es
jle
mov
adc
bnd
rorb
inc
jb
jo
lahf
out
enter
sbb
inc
pop
cwtl
mov
jg
pop
stos
cltd
into
call
add
inc
mov
add
jno
adc
xchg
das
stos
sub
iret
cmp
cmp
add
dec
int3
push
jle
ss
divb
out
icebp
shrb
in
leave
sti
ljmp
in
ljmp
aaa
cmp
pop
shrl
lods
adc
ret
jl
dec
fcomp
or
inc
mov
out
add
lock
xchg
loop
repz
cltd
je
cmp
das
fwait
leave
aam
mov
jns
push
adc
mov
inc
xchg
aam
stos
push
stc
stos
or
stc
andb
lock
into
push
sahf
fidivl
xchg
std
xchg
jbe
jp
mov
cmp
addr16
or
idivb
push
cmpsl
rolb
xor
xchg
imul
shlb
mov
fidivrs
pop
cs
cmp
jns
cmp
or
jb
push
push
in
add
call
mov
pop
xor
addl
sahf
push
test
outsl
leave
fnstsw
fisttpll
shl
push
sub
ret
dec
lock
roll
cld
jmp
jmp
mov
xor
int3
pusha
sbbl
add
push
mov
imul
add
out
or
push
pop
push
loop
mov
push
ja
mov
lods
cs
inc
stos
pop
icebp
sub
mov
mov
hlt
je
jb
in
nop
fisubrs
jns
pop
cwtl
jmp
pop
andb
add
add
js
adc
inc
stc
mov
inc
push
inc
dec
jno
mov
fnsave
out
xor
inc
add
js
jae
or
out
push
adc
fimull
out
fs
je
outsl
rorb
popa
pop
jno
stos
xchg
add
test
lock
mov
cmpsl
and
sbb
and
mov
inc
dec
push
pop
loopne
fldcw
nop
js
xor
and
pusha
pop
cmpsb
popf
lods
and
hlt
orb
or
add
rorl
add
add
js
push
in
xor
pop
jmp
dec
inc
stc
mov
push
in
xchg
bound
fmull
sbb
addr16
scas
addr16
shlb
ja
popfw
shr
mov
and
and
adcb
pop
or
nop
icebp
push
push
cmp
xchg
fimuls
andb
test
shlb
push
add
xlat
movsl
pop
repz
xchg
jne
addl
fidivrl
outsb
inc
add
outsl
inc
jmp
jns
loope
call
daa
test
aam
subb
sub
mov
dec
adc
out
pop
and
imul
dec
das
mov
pop
xor
cwtl
pop
mov
mov
mov
and
sub
or
pop
push
fcomps
mov
pop
in
or
sbb
pop
add
pop
mov
adc
sbb
pop
fdivl
xor
dec
shll
cmp
rcrb
pusha
push
mov
nop
cmpb
xchg
ljmp
or
call
mov
rorl
push
loope
dec
push
dec
std
cs
ja
dec
jno,pn
ret
es
sub
in
mov
sub
pop
loope
mov
shl
sti
icebp
ss
mov
mov
push
mov
xchg
test
mov
inc
imul
cld
cwtl
inc
std
sarl
in
mov
jmp
loope
adc
cmp
test
je
or
arpl
adc
push
mov
jmp
mov
mov
mov
scas
gs
mov
inc
cmp
xchg
pop
and
push
scas
inc
xchg
bound
cld
add
scas
pop
aad
aas
aad
testl
in
lods
pop
cld
scas
dec
mulb
shl
rcll
arpl
ss
mov
xor
push
pop
pushf
inc
jle
push
jmp
clc
pop
outsl
jnp
sub
add
sub
and
sub
shll
sub
sub
jae
pop
scas
mov
push
movsb
subb
pop
stc
mov
lods
add
inc
adc
cmpsb
or
dec
shlb
fadd
aaa
push
inc
es
fs
rcrl
dec
lock
mov
mov
addb
adc
popf
shl
dec
pop
push
pusha
or
push
jbe
inc
mov
fs
cltd
xchg
pop
cmp
sbb
fbld
or
add
add
dec
add
loopne
push
in
add
mov
pop
adc
push
mov
call
or
dec
repz
ror
lahf
gs
xchg
pop
pop
and
xor
loop
sub
lds
loope
jmp
repnz
pusha
sbbb
sbb
xchg
movsb
popa
dec
or
dec
xor
outsl
das
pop
xchg
inc
mov
sahf
fidivrl
push
inc
adc
lock
pop
stos
andb
jle
or
pop
pop
fbstp
repz
lock
rclb
insb
inc
lods
cmp
inc
das
inc
inc
push
mov
sub
mov
jo
shr
sbb
out
jp
rolb
rcll
xchg
cmp
lods
or
out
push
cmpl
xor
cmp
push
jg
mov
xor
sub
inc
out
cmpsl
push
xchg
mov
xor
outsl
xor
pop
push
loope
orl
stos
add
into
sbb
cltd
mov
cmp
movsl
out
insl
pop
pop
push
mov
call
ds
mov
out
ja
call
int
das
add
and
mov
out
fbld
and
push
jns
mov
xchg
push
mov
sbb
add
scas
push
or
jmp
sbb
outsl
mov
xor
fsubs
add
add
xor
cs
hlt
add
mov
clc
pop
adc
jg
inc
aad
aam
shll
imul
dec
test
push
in
das
sub
jle
push
mov
nop
mov
dec
mov
mov
adc
dec
test
push
sbb
xchg
clc
cmp
sub
rcll
daa
rcl
cmpsl
js
mov
push
inc
push
subl
sub
shlb
mov
xchg
add
jmp
out
mov
out
xor
pop
lret
mov
outsl
lret
rcr
sub
pop
push
dec
mov
mov
pop
or
ja
push
popa
and
add
rcll
mov
push
cmp
scas
xor
pop
icebp
ret
cs
jb
lahf
add
loop
shr
xor
int3
and
popf
cmp
ja
ds
das
push
sub
adc
push
add
ret
mov
fcmovnb
jmp
int3
inc
cs
jmp
jmp
sub
lods
adc
dec
cmp
outsl
das
sbb
shlb
shlb
es
jge
sub
add
push
cmp
cmp
mov
sub
jecxz
pop
scas
add
pop
jmp
add
not
shr
lock
loop
dec
clc
shrb
dec
mov
sbb
xlat
sbb
jns
fsubr
push
outsl
mov
fwait
arpl
xor
imul
push
loopne
aad
clc
cmp
in
or
daa
testb
filds
push
push
and
or
xor
cmc
in
in
shl
jmp
in
mov
shlb
xchg
popa
inc
push
push
rcrl
adc
pop
lock
dec
sub
fcoms
adc
adc
push
nop
in
add
sbb
xor
sarb
movsb
mov
aam
scas
nop
fwait
ret
and
jne
adc
syscall
pop
xchg
roll
inc
mov
ss
mov
xchg
mov
xor
pop
sub
add
inc
adc
popaw
or
cmp
push
sub
cmp
add
push
sub
inc
in
mov
test
add
pop
aaa
add
push
shrb
adc
call
push
cmp
mov
int
out
iret
add
rcll
and
add
lahf
fs
ljmp
pop
jmp
jg
add
xchg
jmp
mov
inc
imul
insb
dec
dec
cld
push
jo
bound
add
sub
mov
sub
jmp
fldenv
jecxz
inc
add
sbb
push
repz
in
jb
mov
adc
addb
mov
loopne
rcrl
push
mov
dec
hlt
sub
mov
jmp
push
adc
cmp
js
dec
testl
sub
sbb
outsb
push
pop
lret
pushf
inc
jbe
mov
sbb
repnz
jmp
sub
push
cld
mov
or
ja
inc
rolb
add
jl
sub
outsb
pop
in
xor
fucomp
aam
sarb
xchg
xchg
das
adc
mov
enter
cmc
out
and
adc
mov
sbb
cwtl
cmp
xchg
push
ljmp
xor
or
push
cmpsb
or
rcll
call
cmp
xchg
jle
sbb
xor
stc
popa
adc
add
mov
cmc
jns
lahf
inc
cld
test
pop
dec
dec
xchg
dec
cld
sbb
std
lret
mov
sub
les
inc
addr16
or
loop
insb
adcl
clc
jae
loope
cwtl
add
jl
std
push
inc
imul
into
repnz
push
fwait
sub
sbb
pop
mov
mov
add
loopne
ljmp
or
cmp
push
repnz
add
xor
mov
rolb
pop
sub
popf
push
push
loopne
pop
jl
sbb
sub
jo
sub
add
mul
fs
pop
nop
inc
addb
xlat
out
scas
mov
in
xchg
ja
cli
sub
adcb
adc
xchg
in
cli
push
data16
push
loopne
pop
pop
nop
outsb
loopne
ds
imul
pop
sbbl
mov
dec
push
mov
mov
lret
dec
in
lea
xchg
das
ljmp
or
lea
test
inc
lods
pop
cwtl
stos
decb
and
jmp
outsb
rcrl
aad
xor
xchg
inc
dec
lods
insb
mov
lods
lahf
fs
stc
jecxz
hlt
jge
and
das
ret
popf
adc
and
js
mov
push
jmp
dec
sub
lahf
dec
out
mov
dec
btr
shll
mov
add
mov
shl
icebp
pop
jmp
adc
in
dec
lds
rolb
xor
xor
mov
inc
mov
jb
xor
pop
push
and
pop
jne
pop
jmp
mov
add
sbb
ss
pusha
mov
addr16
pop
pop
dec
jg
popa
mov
call
ljmp
xlat
orb
icebp
add
repz
push
pushf
dec
das
sbb
jmp
inc
jae
aam
pop
jo
sub
out
mov
add
nop
sbbl
sbb
iret
cwtl
pop
push
rdtsc
repz
ja
mov
jge
stos
add
int3
cmp
jb
pop
repnz
and
jp
pop
pusha
pop
sub
ds
fisttps
popf
enter
xchg
push
out
xchg
xchg
loope
cli
ja
xchg
pop
inc
add
arpl
js
xor
mov
mov
add
xchg
sti
mov
dec
push
test
test
adc
ret
cld
xor
inc
data16
rorl
cmpsb
or
pusha
daa
ja
pop
fisttpll
cmpb
add
inc
jg
fs
pop
stc
mov
xchg
xchg
mov
cld
mov
or
lock
mov
jo
mov
lahf
adc
into
aas
outsb
fimuls
adc
sub
sub
push
lret
in
dec
and
sub
and
xor
inc
or
and
inc
mov
stos
add
mov
dec
lea
push
repz
xlat
xchg
jmp
and
sbb
int
shr
mov
dec
ret
jg
mov
loop
in
add
pop
cld
mov
add
popf
or
push
inc
and
push
push
mov
rcrb
stos
push
add
xor
dec
mov
or
call
js
clc
test
sarb
js
mov
xor
and
icebp
movsl
insb
jl
adc
test
leave
movsb
cmp
roll
push
add
and
jmp
or
out
jle
inc
gs
pop
dec
sub
or
push
hlt
jns
inc
hlt
mov
cmc
or
jns
adc
cld
mov
or
cmp
sbb
movlhps
cmp
out
jo
aad
jns
mov
test
inc
mov
add
xor
adc
pop
arpl
adc
mov
jg
adc
mov
popa
subb
dec
jno
push
xor
mov
cli
imul
pop
or
jg
pop
add
xor
cwtl
jp
push
iret
lock
push
add
fimuls
call
pop
loopne
call
loope
inc
or
sbb
lret
or
jle
push
add
adc
ds
sbb
mov
jle
cwtl
pop
xor
cmpb
xor
out
lods
ficomps
sarl
fdivrs
out
iret
pop
loop
xor
call
mov
cmp
push
stos
cli
mov
andb
test
add
pop
jnp
loopne
push
mov
aad
in
add
mov
fsub
lock
dec
mov
sub
pop
hlt
pusha
pop
sbb
sub
movsb
ljmp
jns
sub
pop
sub
and
dec
mov
push
imul
inc
ljmp
loopne
mov
mov
cmp
fistpl
mov
aas
ret
adc
mov
jnp
xor
jp
dec
pop
xor
inc
lret
inc
pushf
test
add
mov
fstps
shl
cmp
inc
adc
push
popa
lods
mov
fcomip
ror
jp
dec
sbb
sub
push
lods
jge
shll
jge
push
push
imul
movsl
int3
inc
or
push
sahf
ret
mov
dec
hlt
add
dec
mov
or
clc
jg
outsl
clc
out
xchg
pop
out
mov
or
mov
sub
jno
push
mov
adcb
mov
adc
fstl
and
sub
push
rolb
sbb
addb
loop
jo
jge
xchg
jecxz
or
add
xor
incb
push
add
sub
mov
sti
sub
mov
push
ficompl
add
pop
cwtl
dec
popa
lret
sar
iret
and
cmpsb
lret
or
dec
je
imul
or
movsl
jmp
testb
xchg
aas
test
mov
inc
sbb
test
leave
cmc
push
ret
ret
xchg
mov
jp
cmp
inc
out
sahf
gs
sbb
pop
push
shlb
jge
addr16
push
sub
mov
add
cmp
addb
pop
sub
and
lods
mov
iret
mov
cmpsb
daa
shll
sbb
xor
cwtl
mov
mov
inc
pop
push
pop
and
or
add
add
jbe
bswap
push
inc
push
and
cli
mov
dec
repz
cwtl
inc
int3
push
js
ds
lock
cmpsb
call
fmuls
testl
push
mov
in
out
pop
shl
orb
cwtl
shll
push
or
adc
and
add
adc
xor
pop
dec
jmp
mov
in
or
sbb
push
or
adc
sub
or
xor
xor
xor
vsqrtpd
push
or
loope
xor
jb
adc
adc
insl
or
bound
popf
pop
jno
mov
fwait
or
push
jne
dec
in
xor
int
outsb
xor
jmp
pop
sahf
das
rorb
inc
xor
jl
adc
dec
mov
inc
cmc
jge
fsubl
sub
ret
lahf
repz
rcl
or
arpl
aas
mov
aad
les
popa
mov
sub
in
push
out
mov
jmp
hlt
leave
scas
pop
mov
add
push
incl
mov
mov
pusha
and
jmp
xorb
or
push
jle
jns
jmp
subl
les
push
push
mov
shr
add
ret
aam
scas
xor
xchg
add
xor
bound
cli
add
sar
jae
xlat
out
push
mov
ja
aad
sub
jno
xchg
fsubl
jno
pusha
jmp
jae
dec
in
cmp
cs
shrl
pop
in
arpl
inc
loop
incb
pop
or
jnp
in
enter
pop
inc
lock
sbb
enter
sbb
inc
or
imul
inc
dec
pushf
jmp
and
aad
fildl
aaa
xor
xor
mov
lahf
insb
dec
mov
jns
std
jge
push
mov
mov
je
push
xchg
aam
enter
test
sbb
xor
cmp
jo
shll
ljmp
adc
data16
out
lret
mov
movsl
or
adc
add
scas
pop
add
dec
push
push
sub
stos
cmp
sub
in
lret
insl
mov
jmp
call
pop
pusha
xor
pop
cmpsb
testb
pop
out
data16
daa
lret
jl
inc
or
sub
dec
and
push
adc
stos
addr16
scas
cmpb
leave
addr16
inc
or
mov
aaa
or
imul
push
les
jns
mov
lock
pop
sub
test
xorl
nop
shlb
mov
int3
out
adc
and
jb
loopne
xor
cwtl
ss
cmp
pop
in
dec
push
pop
popf
lds
sahf
jmp
outsb
mov
fiaddl
sub
push
mov
mov
or
daa
lock
in
push
xor
data16
cwtl
sbb
and
xchg
dec
pop
push
or
jge
pop
inc
xchg
mov
jne
add
adc
pop
add
cmp
add
jmp
orl
xor
add
insb
jg
xor
out
mov
sti
sub
mov
mov
int
jmp
mov
or
jnp
rol
and
sub
das
fnstenv
add
jno
fs
cmp
shrb
mov
test
jno
pop
ljmp
push
rolb
jo
pop
sub
stos
dec
rcr
adc
add
dec
mov
sbb
pop
pop
shlb
sti
fisttps
mov
jbe
out
mov
jl
cld
jmp
or
jae
mov
arpl
shrl
ret
xchg
sbb
leave
sbb
or
jle
push
out
sub
jl
pop
sarb
xor
sub
cmova
push
dec
lods
jge
mov
mov
inc
pop
cmpsb
xchg
adc
add
lret
mov
dec
mov
cmp
fcompl
test
stos
loop
leave
xor
lods
jle
pop
jge
and
push
lahf
aam
jb
mov
inc
push
mov
dec
ret
ss
jle
push
jmp
mov
mov
jno
insl
outsl
xchg
cmpsl
inc
add
inc
rorb
movsl
add
adc
inc
sbb
jmp
lods
mov
or
sbb
sti
imul
test
inc
sbb
in
inc
and
xor
sub
rclb
cmpsb
pop
sub
aam
shr
inc
sub
inc
mov
or
mov
popf
pop
out
jge
scas
je
dec
push
das
pop
pop
hlt
subb
push
mov
mov
mov
and
int3
and
xor
jecxz
shll
add
cwtl
xor
push
jmp
mov
or
movsb
xor
push
add
or
ret
sub
test
mov
or
pusha
dec
mov
pop
movsb
loop
aad
stc
add
cmp
and
out
sub
push
insb
mov
imul
xor
and
in
fcomps
xchg
fstl
ficoms
xchg
cwtl
pop
cmp
lahf
pop
inc
test
mov
inc
jnp
jbe
pop
mov
pop
sbb
or
or
push
dec
jge
dec
jmp
and
ds
xchg
ds
push
pop
aad
pop
add
jp
das
mov
pop
adc
fs
pusha
imul
bound
inc
and
scas
imul
idiv
cmp
adc
gs
push
dec
xor
cli
js
div
nop
mov
xchg
xchg
andl
adc
mov
cmp
push
sbb
dec
out
test
pop
jg
subl
rolb
pop
pop
sub
inc
movsb
andb
sub
dec
movb
dec
pusha
add
jmp
jmp
xchg
bound
rolb
ds
inc
mov
xchg
imul
test
jmp
and
jp
testb
xchg
repz
mov
mov
and
push
jp
sbb
mov
cmpsl
lea
loop
inc
xchg
call
test
pop
add
enter
testb
jbe
or
cmpsl
xchg
jge
lds
enter
loopne
imul
pop
sbb
cmc
nop
arpl
ret
cmpsl
cmp
push
cmp
mov
push
test
shlb
push
pop
lret
lret
dec
push
pusha
adc
inc
test
cmpsl
out
mov
push
scas
mov
add
jp
lods
jle
cli
fst
push
add
into
sub
push
pop
add
jmp
dec
xlat
or
push
loope
lock
lret
cltd
or
daa
icebp
ja
mov
movsl
sarb
jmp
add
shrl
out
iret
xor
dec
inc
push
inc
mov
xor
cli
and
sub
dec
cmp
in
or
mov
push
stos
adc
repz
xor
add
and
loop
sub
jb
mov
add
lods
cltd
jl
xor
xchg
test
or
je
xor
mov
imul
jle
lret
ret
adcl
mov
rcll
insb
sbb
pop
clc
sub
ds
push
mov
adc
or
addr16
xlat
lcall
xchg
fiadds
fwait
inc
add
in
add
leave
in
or
dec
dec
fldl
pop
imul
push
int
inc
or
jne
fldenv
movsbl
jbe
mov
popl
or
shl
add
dec
add
xor
push
shlb
cmc
cwtl
mov
rcll
les
or
scas
jmp
in
adc
jbe
sub
mov
andb
adc
idivl
jge
mov
dec
addb
mov
cmpsl
dec
js
addr16
imul
insb
das
add
jnp
pop
ffree
imul
and
add
sub
push
jnp
fisubs
roll
loopne
add
enter
cmp
cli
out
and
sub
mov
push
push
pop
mov
shrb
stos
xor
jmp
stos
shrb
mov
rcrl
pop
add
pop
aaa
or
mov
clc
xor
imul
popf
xor
add
jbe
data16
push
mov
jecxz
pop
xor
adc
pop
mov
ss
cmc
inc
and
and
pop
decl
add
jmp
mov
sub
sbb
push
call
movsb
mov
add
or
dec
sub
sub
scas
pop
xchg
fstpl
out
inc
leave
daa
je
sub
add
lods
jp
cmp
bound
cmpsb
dec
xchg
ss
or
or
daa
idivb
aas
aaa
sub
imul
outsb
movsb
mov
dec
rorl
push
or
pop
loop
int
insb
sub
js
xchg
xchg
adc
es
mov
call
sbb
fldcw
xor
dec
or
pop
mov
cmp
add
adc
pop
push
ficoml
gs
dec
add
push
lea
jp
mov
mov
xchg
sbb
std
loop
sbb
call
outsb
enter
lahf
dec
cmp
repnz
xlat
mov
jmp
add
in
pop
mov
repz
inc
mov
mov
aam
sub
mov
fwait
mov
in
aas
add
fdivr
scas
cltd
xchg
pop
aam
push
shrb
out
or
pop
mov
mov
jno
add
push
ret
fcoml
mov
sub
inc
adc
sbb
rclb
push
inc
jmp
push
sub
xchg
dec
ljmp
mov
pop
pushf
pop
jge
mov
shrl
mov
out
das
jno
jg
movsb
out
imul
movsl
das
ds
pop
out
cwtl
popa
xor
adc
jge
pop
or
or
xchg
dec
ret
sub
jae
test
inc
sub
add
mov
loop
iret
dec
xlat
ret
fadd
fidivl
adc
jbe
add
push
mov
inc
lods
imul
push
mov
movzwl
push
out
add
in
mov
push
inc
xchg
push
or
imul
push
in
insl
xor
mov
or
sub
loope
xchg
data16
mov
push
pop
or
rcrl
shll
push
aad
add
add
jmp
push
jl
sub
mov
xor
jbe
daa
pop
arpl
ss
xchg
lods
popf
jns
dec
test
add
out
or
shl
jmp
in
movl
cs
push
cmp
pop
fidivrs
bnd
repnz
aad
xor
leave
addb
mov
inc
adc
or
cmp
mov
adc
lcall
mov
loope
jae
lahf
mov
idivl
popf
pop
adc
jns
xchg
and
and
je
add
sbb
mov
add
push
mov
repnz
push
sub
fdivrl
add
insb
rorb
adc
xchg
push
jmp
loop
pop
pop
call
and
or
inc
sub
rclb
daa
push
mov
mov
lahf
add
rclb
inc
fdivrl
add
sbb
in
gs
push
sub
sahf
cltd
outsb
repnz
sub
xchg
jno
inc
push
add
cmp
fadds
mov
pop
mov
dec
bound
jge
mov
mov
icebp
pop
pusha
adc
in
xor
mov
cmc
std
leave
repnz
push
push
pop
repnz
dec
pop
test
clc
adc
call
dec
hlt
mov
inc
sub
lahf
pop
jg
xlat
inc
cld
pop
iret
clc
mov
mov
sub
jmp
jecxz
pop
push
add
fsub
mov
jns
push
js
mov
add
cmp
push
dec
adc
jno
cmpb
ds
inc
movsl
aam
or
ss
push
sub
cmp
push
add
ret
repnz
xchg
sbb
sbb
adc
or
fsubrs
aas
push
mov
lods
mov
xchg
call
push
gs
and
or
out
pop
adcl
add
inc
push
ds
loopne
add
mov
adcb
outsl
inc
add
push
sti
pop
or
gs
ficompl
pop
popf
dec
inc
mul
mov
dec
xor
stos
ja
addr16
add
shrl
jmp
shrl
movsb
inc
pusha
mov
xchg
pop
pop
aad
add
mov
and
mov
in
lret
pop
aas
add
adc
sarl
fcompl
mov
outsb
xchg
sbb
addr16
repz
add
in
sbb
dec
mov
rcll
rolb
push
or
push
pop
cmp
popf
mov
jge
test
cmp
push
mov
jle
jns
jne
dec
icebp
fistl
and
xadd
push
lods
fisttpl
pusha
pop
mov
in
ljmp
ficomps
or
pop
stos
jmp
dec
or
add
lret
mov
sub
xor
mov
xchg
jo
dec
addl
gs
jne
test
and
inc
jne
sbb
adc
sub
aad
shl
int
xchg
pop
outsl
sub
inc
leave
icebp
xchg
adc
push
loop
sbbl
xchg
fsub
jb
jg
das
sub
xor
and
subb
call
fadd
push
jle
xchg
and
shrb
ja
jmp
addb
out
lock
or
scas
cmpsl
lret
or
push
inc
imul
and
sbb
and
sbb
jg
fwait
pusha
mov
dec
dec
and
push
inc
jle
and
jo
arpl
pop
ret
es
xchg
inc
inc
mov
int3
shl
cmpsl
mov
sbb
add
mov
cld
lea
and
and
in
enter
call
adc
sub
sub
pop
mov
push
and
ds
sub
xchg
and
fists
xchg
inc
roll
test
push
pop
push
fs
stos
jecxz
push
gs
lods
mov
adc
or
jle
push
sbb
lds
or
fisttpl
mov
test
cli
xchg
or
sbb
inc
dec
ret
lea
aad
push
push
mov
jnp
stos
push
stc
push
pop
fidivs
xchg
arpl
mov
jns
rcrb
add
jo
test
xchg
lods
jecxz
xor
xor
lret
ss
fcomi
pop
je
add
test
andb
mov
bound
sbb
mov
dec
fs
in
mov
mov
js
cmp
sub
jl
repnz
call
mov
bound
aad
xchg
pop
pop
push
mov
popa
in
ror
lock
popa
mov
push
or
adc
jne
fs
push
in
decb
add
ds
loop
out
cmc
xor
and
pop
or
add
jmp
popf
lret
call
insb
xlat
and
sbb
xor
and
push
bound
rsqrtps
sub
lods
jae
xor
flds
shrb
shr
call
mov
mov
cmc
or
jg
cmp
sub
cmpsl
cmp
jecxz
fimull
sbb
mov
inc
shl
push
adc
sub
push
sti
scas
or
push
pusha
push
cwtl
fisubs
jbe
jno
xchg
sbb
jp
push
cmc
push
shrb
xor
cmp
jmp
sub
pop
pop
js
add
dec
scas
and
cltd
inc
jp
pop
faddl
daa
or
xchg
popf
mov
mov
and
and
ds
or
repz
aad
sub
push
imul
jo
sbb
or
pop
idivl
xchg
bound
scas
jmp
adcl
and
es
xor
jo
dec
or
jne
xor
jmp
in
outsb
data16
popf
lahf
mov
mov
les
sub
push
ret
into
jge
inc
test
aad
jmp
or
adc
movsb
adc
iret
push
add
leave
push
ss
add
xor
jmp
or
fstps
pusha
sub
mov
sub
sub
lock
pop
and
loope
xor
jbe
icebp
in
pop
js
push
fidivrs
shr
incb
daa
jb
das
pop
sub
stos
sbbl
jae
outsb
lock
popa
push
push
jmp
jmp
jnp
pop
mov
ret
sbb
insb
mov
mov
imul
and
mov
pop
stos
negb
xchg
outsl
adc
or
ficomps
stc
jae
cmc
xor
stos
roll
mov
rcrb
aas
cmp
or
or
mov
cli
jo
popa
xchg
dec
adc
rcll
iret
dec
mov
jbe
daa
testb
das
jg
mov
aaa
add
pop
int3
stos
push
mov
mov
dec
ss
aaa
ds
dec
adc
fstpl
lods
enter
add
xchg
out
or
jne
cwtl
rclb
sub
push
add
icebp
cmp
mov
mov
cmpsb
ss
rcll
hlt
pop
adc
push
and
jmp
and
fwait
pop
mov
inc
add
shr
xchg
jb
adc
jmp
or
aaa
xor
ja
cmp
xor
mov
mov
mov
bound
push
push
add
std
push
mov
repz
in
aad
test
pusha
push
cmpsl
es
pop
and
push
hlt
push
adc
push
mov
lret
bound
or
dec
in
outsb
push
ja
or
scas
gs
sbbl
push
push
shlb
fwait
xor
mov
jno
inc
mov
pop
xor
sbb
push
pop
pop
push
cs
mov
xchg
mov
in
cwtl
xor
xor
aas
and
orb
add
or
adc
fsub
pop
pop
mov
push
add
xchg
adc
jecxz
loopne
jmp
cmp
add
mov
pop
add
mov
loop
jle
add
test
jmp
and
jp
call
xor
rclb
hlt
lds
sbb
and
add
std
and
pop
add
dec
jmp
or
adc
pop
mov
not
mov
mov
sahf
mov
mov
mov
gs
mov
jge
sahf
xchg
pop
add
pop
fxch
cmp
dec
sub
push
push
call
push
cmp
sub
push
jmp
pop
xlat
sti
rorl
dec
inc
mov
out
and
xchg
arpl
cwtl
jae
repz
js
insl
sbb
and
test
add
std
cli
cmpsb
mov
push
movsl
sbbb
lds
shr
inc
outsl
lods
sbb
pop
sub
adc
das
sbb
ljmp
stc
inc
addr16
push
out
mov
test
mov
push
arpl
mov
cmp
add
cs
jmp
adcb
pop
push
inc
addr16
fdivrl
or
xor
jl
sbb
ljmp
mov
sub
xor
sub
stos
mov
mov
mov
and
sub
aad
loop
push
imul
xor
mov
addl
adc
or
fldl
push
inc
jmp
jmp
push
sub
stos
lret
shrb
sub
xchg
or
cmp
jo
mov
xchg
daa
inc
add
std
popa
add
sbb
inc
cwtl
pop
pop
jmp
and
xlat
je
inc
or
cld
push
pusha
sarl
jnp
sub
or
pop
out
mov
jg
mov
fyl2x
imul
dec
pop
mov
cs
sbb
das
mov
imul
test
and
jle
pop
stos
subb
fsubrl
test
scas
stc
pushf
imul
jne
xchg
pop
rcrl
xor
inc
and
xchg
push
lea
push
ljmp
int3
lret
faddl
shl
push
int
jle
xchg
aad
adc
sub
neg
push
mov
cmpb
popf
xor
or
shr
xchg
push
mov
add
aaa
and
pop
ljmp
mov
jle
mov
mov
lret
inc
push
pushl
bound
add
xor
pop
xlat
out
pop
loopne
nop
lret
mov
test
ret
or
mov
ficompl
shl
push
or
idiv
xchg
pop
jmp
mov
outsl
and
fldl
sbb
dec
jmp
ds
mov
shrl
jp
out
cmc
outsl
cmp
or
add
mov
mov
xchg
loopne
cmc
shll
mov
jl
mov
daa
aas
xchg
call
ret
dec
add
dec
inc
mov
dec
jb
dec
pop
addr16
loope
sub
hlt
dec
mov
lcall
xchg
imul
sbb
add
push
or
idivb
popf
dec
pusha
sbb
sub
mov
mov
repz
adc
insb
loop
adc
fbstp
pop
call
sub
subb
adc
sbb
and
lret
xchg
add
insb
sub
jb
add
call
aas
or
adc
popa
imul
sub
jb
pop
lcall
sahf
inc
ret
add
ljmp
cmp
add
aas
push
pusha
cmp
mov
cltd
dec
repz
or
cmp
inc
add
inc
aam
fildl
push
aas
xor
mov
jecxz
loopne
loopne
jmp
adc
xor
push
in
out
and
inc
jmp
fwait
movsb
stos
dec
jnp
pop
jle
dec
xor
mov
add
sub
add
xor
stos
jo
cmpsb
stos
push
pop
jmp
xchg
sub
xchg
sahf
sbb
mov
outsb
mov
push
ja
sub
sarb
pop
fistps
cmp
mov
cmp
lods
cs
xchg
stc
adc
pop
sar
call
loopne
ja,pn
and
jmp
push
rorl
ficomps
imul
dec
mov
push
out
dec
jae
mov
push
dec
mov
mov
xchg
xor
leave
sbb
jae
imul
aad
js
clc
insb
cmp
sbb
outsl
mov
out
cmp
bswap
add
and
neg
dec
cwtl
xor
outsb
repz
jle
mov
popa
test
imul
push
pop
cwtl
mov
test
push
movsb
stos
icebp
mov
mov
jne
cs
inc
xor
mov
add
jmp
or
pop
shlb
adc
mov
stos
in
or
hlt
or
push
push
icebp
or
dec
sub
and
xor
aam
lret
sti
rcrl
push
in
sbb
or
in
pop
arpl
adc
rcrb
or
sbb
xor
sbb
inc
bound
adc
clc
add
insb
add
adc
into
pop
jo
inc
nop
inc
mov
bound
call
adc
sub
out
rolb
lds
inc
mov
and
test
mov
and
xor
add
add
add
adc
les
xchg
adc
xchg
jmp
lret
push
jae
out
outsl
or
lods
push
or
lret
mov
js
or
ljmp
add
push
mov
xor
cwtl
add
fcmovb
or
push
push
pop
xor
add
mov
shl
or
or
adc
scas
in
lret
bound
dec
mov
or
pop
cmp
add
mov
mov
mov
stos
les
or
xor
pop
cltd
xchg
adc
sub
inc
or
mov
testl
dec
adc
xchg
out
adc
adc
movsb
or
cli
sbb
sbb
inc
ret
mov
sub
inc
iret
shrb
xor
js
and
xorl
rcll
sbb
int3
xchg
lret
les
out
push
test
cmp
mov
fwait
xchg
test
pop
cld
dec
pop
fcomps
scas
loop
dec
sbb
xor
cltd
inc
hlt
test
rcl
adc
gs
push
jp
inc
fsubl
les
ficoms
ret
cmpsl
das
add
andl
int3
pop
or
and
ljmp
fcompl
mov
or
or
incb
call
sub
add
lock
cld
call
xchg
jb
cs
sbb
mov
adc
add
jne
jmp
mov
call
popl
or
jne
dec
je
shl
add
incb
xor
orb
dec
xor
sub
jmp
rolb
xor
jg
or
into
xor
jbe
pop
es
xor
adc
inc
pop
inc
repnz
xorb
jo
fsts
mov
pop
push
ret
add
sub
add
jmp
mov
out
lcall
cmp
mov
aaa
mov
dec
fucomip
pmovmskb
xchg
inc
or
push
inc
xchg
or
in
xchg
imul
data16
es
inc
pop
ljmp
or
mov
out
dec
and
frstor
and
xor
sbb
jmp
fcoml
or
xlat
rol
scas
sub
cli
sub
pop
adc
orb
pop
decb
inc
cmp
cmp
rcr
sub
ret
pop
gs
les
mov
jns
pop
outsb
cmp
cmp
xor
dec
push
out
subl
xchg
clc
sarl
xchg
lock
sub
cmpsl
pop
add
out
or
push
punpcklbw
jle
adc
or
mov
dec
bound
out
and
aas
aad
pusha
or
jg
cmp
add
outsl
jge
out
or
dec
fcomi
nop
sub
pop
sbb
or
xchg
cmp
xlat
jnp
add
push
push
push
clc
fldenv
ljmp
pusha
mov
std
repz
mov
or
sbb
dec
add
call
sbb
sbbl
and
pop
push
mov
sub
iret
movl
mov
sarl
push
sbb
imulb
jge
push
out
in
mov
in
nop
es
adc
cld
popa
mov
orb
push
mov
addb
push
cmpsb
aad
add
push
sub
or
repnz
cld
dec
add
mov
cmpsl
movsb
jle
jmp
jp
daa
dec
int
jle
jae
jmp
mov
add
pop
andb
frstor
lahf
cwtl
sbb
aad
cmc
verr
sbb
or
int
mov
js
add
mov
addl
sub
mov
and
sbb
ret
jl
push
adc
xchg
mov
roll
aad
outsl
push
fsubl
and
push
xor
repnz
lds
or
ret
xor
rcr
dec
loope
xchg
shl
gs
push
jmp
clts
pextrw
imul
inc
pop
std
out
pop
pop
and
mov
pop
push
out
rol
stc
daa
test
mov
cs
xor
add
jmp
aaa
sahf
dec
jne
negb
jae
fists
xor
or
loope
add
pop
movsl
dec
shrb
clc
jecxz
dec
dec
push
stc
push
les
in
or
jnp
or
and
mov
repz
or
pop
jmp
in
mov
sub
mov
add
xchg
xor
dec
stos
inc
roll
insl
cltd
cmp
pop
lcall
xchg
xor
inc
xchg
xor
add
push
mov
adc
adcb
repnz
lock
mov
stos
and
pop
or
jbe
mov
jmp
mov
add
outsl
add
and
mulb
in
adc
xchg
stos
add
xor
insl
sbbb
sbb
cmp
pop
out
in
xchg
in
pop
adc
mov
and
fwait
lods
push
je
adc
sub
xchg
push
scas
mov
pop
out
sub
leave
gs
cmp
add
and
ds
out
cld
popf
in
arpl
inc
int
add
cltd
push
out
xor
int3
jae
push
lea
pop
mov
icebp
insl
and
jp
pop
repz
add
cld
add
mov
and
add
and
pop
stos
lods
outsl
mov
push
pusha
inc
iret
pop
enter
lock
add
test
jmp
loope
sub
mov
pop
xor
pop
xor
cmp
inc
repnz
mov
cmp
pop
cli
repnz
mov
iret
pop
push
jp
mov
and
pop
sbb
push
xor
lahf
add
mov
into
into
adc
out
jp
push
das
adc
cli
sub
sub
je
inc
das
mov
cwtl
repz
fs
lret
or
sbb
inc
in
mov
or
push
adc
xor
testb
ret
test
loopne
push
mov
pop
movsb
pop
jae
rcll
cmpsl
jns
xor
arpl
or
jno
sub
mov
mov
je
pop
cmp
sub
or
sub
mov
and
push
aaa
nop
cmp
cmp
rclb
mov
dec
mov
and
ljmp
sarb
rorl
ss
pop
jmp
pop
add
shl
push
push
cmpsb
ljmp
pop
adc
cmc
divb
pop
stc
arpl
clc
mov
xor
out
dec
addl
cmc
jnp
fiadds
test
sub
or
decl
mov
adc
inc
cmp
out
lahf
and
xchg
or
dec
sbb
not
or
movsl
imul
cmp
push
in
daa
testb
jmp
data16
jo
loope
and
imull
cwtl
mov
jecxz
stos
push
enter
add
addb
jo
outsl
call
lods
jmp
fwait
push
mov
or
addb
push
daa
loopne
cmp
daa
imul
jmp
inc
fildll
mov
add
inc
shrl
push
mov
sbb
sub
pop
pop
sub
cmp
loope
push
xchg
pop
push
insl
push
push
movsb
aam
and
xor
sbb
sbb
push
daa
push
or
pop
add
jl
test
loop
stc
jle
sub
inc
xchg
lea
pusha
xor
fiaddl
sarl
sbb
dec
shl
cltd
jle
mov
and
sbb
xlat
jno
arpl
or
je
pop
and
or
xchg
out
jno
jg
adc
aad
mov
into
popa
cmp
push
sbb
leave
mov
mov
icebp
dec
in
sub
push
and
fld
jp
std
loopne
call
imul
das
cmp
push
adc
xchg
loope
add
mov
gs
subl
jo
out
push
daa
jmp
push
dec
les
sbb
mov
ss
dec
jl
inc
test
or
push
or
pop
addb
cld
and
loope
lret
sarb
popf
jl
sub
mov
add
je
fs
pop
add
mov
les
jne
xor
mov
std
adc
adc
data16
cmc
sti
pusha
push
add
mov
push
incb
dec
add
sub
cmp
pop
int
cmp
pop
or
in
aas
mov
stos
add
dec
hlt
or
lds
sub
popa
ss
or
xchg
pop
loopne
mov
rcr
dec
xor
cmp
jbe
clc
orb
gs
cmpsb
xchg
add
sbbb
push
sub
fiaddl
mov
pop
push
xchg
or
pop
push
cmp
pusha
lcall
iret
scas
mov
adc
js
push
sub
sub
imul
scas
das
les
cmp
add
push
cmp
or
jmp
mov
in
test
mov
ret
jmp
jecxz
jl
push
out
xchg
or
adc
in
and
push
stos
cmp
add
data16
push
arpl
mov
cmp
decb
push
mov
out
push
movsb
bnd
lret
pop
mov
add
xor
mov
push
fdivl
adc
ja
clc
mov
fsubl
cs
jl
and
xchg
dec
insb
push
pop
push
push
das
dec
add
push
dec
add
cs
and
and
fs
pop
mov
mov
fwait
repz
sub
or
xchg
pop
and
out
add
stc
pop
pop
lret
or
inc
or
lds
mov
and
add
mov
sbb
dec
mov
xchg
xrelease
xchg
fstpl
fildl
aad
adc
dec
test
sub
in
into
pusha
dec
mov
cmp
aaa
loopne
mov
or
mov
mov
pop
cmp
rcrl
rcr
clc
jl
repz
or
daa
push
xchg
jbe
cmp
or
int3
not
popa
out
push
add
int
lods
and
fldcw
add
sbb
loope
daa
jne
jmp
cmc
pusha
adc
or
dec
leave
adc
and
fiaddl
xor
and
pop
cwtl
lret
testb
nop
mov
xchg
mov
dec
mov
ss
loope
push
push
jmp
xchg
in
sub
out
sbb
or
jp
xor
mov
in
mov
jo
cltd
dec
mov
pop
xor
fiaddl
sub
mov
sub
inc
lret
shlb
ljmp
sub
add
icebp
sbb
pop
dec
ret
cmpl
xor
or
test
or
outsl
insl
pop
insb
add
jne
es
mov
aam
repnz
mov
push
cmp
fcmovbe
add
xlat
shll
mov
das
sub
pop
mov
dec
and
fnsave
xchg
ds
cltd
pop
sub
xchg
adc
fisttps
mov
call
push
jne
cli
or
mov
enter
mov
cli
sub
enter
ja
repz
stos
addr16
inc
xchg
je
and
les
push
mov
filds
out
add
sti
dec
xlat
xchg
daa
leave
sbb
adc
add
mov
subl
push
xor
mov
loope
or
out
mov
hlt
shrl
inc
imul
pop
mov
stos
pop
sub
and
pop
xor
jmp
in
and
cwtl
ja
sub
push
push
lock
xor
pop
aas
xchg
jmp
jb
rcrl
inc
add
or
push
notb
popf
das
sub
jno
xchg
xlat
sarl
jp
sub
arpl
jge
mov
jmp
mov
push
mov
xor
xlat
leave
nop
add
inc
mov
divb
jecxz
pop
dec
jmp
jmp
pop
jmp
in
hlt
mov
mov
dec
jne
jns
adc
arpl
fs
out
rclb
xor
cmp
lock
stos
inc
lret
hlt
aaa
scas
sbb
out
cmp
xchg
mov
ret
bnd
or
rclb
push
inc
rcrl
pop
dec
jbe
sbb
pop
sbb
pop
fisubl
xor
sub
inc
jmp
jnp
stos
repnz
gs
jecxz
stos
adc
add
test
mov
inc
out
add
pop
rorl
lods
ret
loopne
into
pushf
es
mov
dec
ja
xor
jg
xor
mov
pop
pop
add
xchg
mov
mov
xor
xchg
cmp
inc
ds
nop
shrl
iret
repz
xchg
adc
inc
test
xlat
scas
gs
outsb
shrl
aad
dec
jp
inc
fildll
sub
jg
popa
sbb
xor
and
scas
loop
shr
jae
dec
add
or
sbbb
jmp
dec
stos
pop
adcb
pop
stos
xlat
sbb
int
loop
out
and
decl
push
dec
push
and
adc
inc
sub
pop
js
mov
ret
shl
xchg
neg
push
jmp
add
jbe
outsb
rorl
sbb
xor
rcl
pop
push
mov
mov
cwtl
push
insb
mov
jo
out
jno
adc
or
pop
push
stos
cwtl
test
daa
repnz
int3
repnz
daa
js
adc
mov
add
sbb
pusha
dec
jecxz
cmp
mov
jmp
in
imul
mov
outsb
clc
add
jle
fsubrp
mov
arpl
jl
pop
repz
roll
inc
cmpsl
imul
scas
inc
pop
ret
dec
or
loopne
mov
jge
dec
mov
mov
pop
jge
push
adc
je
xor
aaa
lea
nop
repz
jl
out
or
xor
push
push
mov
pop
jmp
mov
das
xor
sahf
dec
lods
dec
jg
add
test
mov
pop
imul
cs
jmp
clc
bound
or
jmp
add
clc
xlat
xor
mov
xor
cld
mov
dec
lret
ss
adc
adc
mov
sub
hlt
and
pushf
mov
cmp
stos
add
out
loop
shrl
in
stos
cmpl
sbb
jo
pop
lock
stc
out
shlb
mov
push
icebp
mov
or
dec
rcll
leave
je
das
dec
sub
out
je
clc
xchg
or
pop
cld
add
jmp
ret
xchg
lods
push
test
aam
dec
push
jno
imul
rorl
or
outsl
sbb
adc
imul
pop
inc
jmp
jae
loopne
sub
xor
jle
adc
cmpsl
neg
xor
subl
pop
in
inc
test
inc
push
test
cwtl
clc
mov
xor
daa
add
xorb
int
push
xchg
addr16
or
xchg
clc
adcb
add
fimuls
popa
sbb
push
das
jne
ss
jle
lock
testl
rcll
stc
or
jo
push
fwait
insb
sub
mov
cmp
add
out
insb
sub
arpl
cmpsl
mov
enter
mov
add
cli
stos
shrb
mov
mulb
push
add
cwtl
pop
and
jg
add
mov
pusha
and
sub
adc
add
dec
movb
or
sti
inc
sub
mov
in
aaa
jbe
mov
orl
pop
stos
pop
inc
xlat
push
push
adc
inc
mov
add
sbb
pop
and
sub
jbe
inc
popf
jb
add
scas
cmp
xchg
fisttpl
jns
push
jl
push
push
jmp
push
inc
fidivrl
hlt
rolb
call
sarb
neg
inc
cvtps2pi
cmp
cmp
ret
sbb
add
sub
jge
rorl
dec
jmp
push
push
neg
xchg
mov
mov
push
add
mov
xor
insl
inc
inc
push
inc
sbb
pusha
or
add
jnp
aaa
push
xchg
pop
out
cmpl
aaa
add
lcall
cmc
loop
add
mov
jmp
lcall
lds
sub
xor
out
sarb
aas
cli
cli
mov
and
sub
jp
push
inc
or
arpl
addb
sub
aaa
adc
pop
stc
or
cltd
cli
lahf
or
mov
sahf
cwtl
mov
push
push
add
int3
cmp
and
das
repnz
lds
punpckhbw
push
mov
mov
xchg
bound
rcll
inc
push
pop
and
cmpl
out
outsb
andb
mov
stos
mov
adc
sbb
pop
add
loop
sbb
jle
mov
dec
enter
cwtl
dec
mov
sub
test
push
shll
idivb
ljmp
ret
xchg
scas
xchg
kandnw
add
jmp
add
cmpb
outsl
inc
cmpb
stos
mov
popf
dec
xchg
negb
jbe
rorl
dec
inc
push
cmpsb
aaa
xor
push
pusha
push
mov
das
mov
cmpb
js
fs
outsb
jae
xchg
jo
xor
les
push
popa
shl
jae
ss
cmp
or
mov
cmp
push
adc
pop
jle
push
jg
lahf
imul
nop
jae
ljmp
push
ret
shll
cli
xchg
imul
je
sub
and
roll
inc
outsl
aas
dec
orb
inc
js
xorb
mov
sbb
xlat
test
cmp
push
mov
repz
pop
out
cmp
dec
dec
pop
ret
clc
push
popa
xchg
push
xor
cmp
xor
shr
pop
sbb
jmp
loopne
fldt
add
dec
jmp
sbb
shlb
push
add
sub
iret
pusha
call
pop
adc
inc
ret
fwait
and
or
pop
sti
mov
outsl
icebp
sbbb
mov
mov
push
sbbb
loope
sub
repz
push
lds
out
sub
stos
sbbl
push
xlat
repnz
jne
popf
lods
iret
subb
mov
repz
in
mov
out
mov
sbb
daa
std
sbb
add
shr
jae
push
std
adcl
test
mov
mov
sub
inc
outsb
lock
filds
xchg
sti
cmp
cmpsl
ret
jle
push
pop
insl
movsl
fucomip
rorl
and
cmp
arpl
add
int
pop
stos
ds
mov
cmpsb
jecxz
jp
mov
cmp
iret
scas
and
dec
and
dec
or
ja
and
shr
adc
mov
pop
xlat
mov
in
and
dec
sub
pusha
jl
test
sub
mov
scas
add
in
insb
imul
fwait
dec
int3
or
xchg
sbb
cld
add
mov
ljmp
mov
popf
icebp
jl
xlat
cmc
inc
hlt
test
jg
outsl
je
sub
pop
inc
or
popf
jg
add
mov
cmp
adc
or
or
dec
dec
pop
mov
aaa
jle
pop
sub
lods
test
popf
cld
pop
mov
insl
adc
inc
push
xchg
mov
push
sub
xchg
sub
test
push
jmp
mov
dec
daa
sub
adc
enter
stc
pop
sub
adc
aas
loop
or
add
inc
sub
pop
clc
les
rclb
and
adc
cmpsb
and
add
jle,pt
je
loope
es
jge
testb
mov
sbb
ret
xor
adcl
add
jbe
sbbl
aas
and
jmp
push
inc
cs
in
and
inc
mov
sbb
movsb
push
mov
loopne,pn
push
add
push
out
mov
pop
cwtl
stos
add
cs
mov
cld
pop
rolb
cld
mov
mov
dec
sub
or
xor
xchg
cld
add
test
sub
pop
add
out
stos
shrb
dec
faddl
and
xchg
push
adc
adc
lea
aad
es
pop
pop
popa
rorl
cs
bound
mov
adc
addb
aad
adc
pop
aas
stos
push
pop
sbb
rorb
xlat
outsb
sub
stc
les
fs
pinsrw
bound
imul
bound
add
jmp
xlat
add
pop
pop
mov
clc
push
pusha
rcrl
shrl
xor
out
and
out
icebp
mov
aad
cmp
xchg
sub
push
add
xor
xchg
xchg
aad
adc
dec
mov
ds
test
imul
fldl
adc
xchg
pop
repz
mov
jmp
pop
hlt
sub
insb
add
mov
add
dec
push
push
jns
daa
arpl
outsl
add
pop
inc
xor
add
ret
pop
mov
xchg
in
push
mov
or
add
push
add
hlt
movsl
jno
stos
sub
dec
cmp
mov
mov
or
loopne
scas
popa
jmp
push
out
fsubs
sahf
mov
into
ljmp
jge
js
jmp
or
pushf
cmc
lds
push
sub
add
ljmp
push
adc
dec
loopne
sarl
jl
dec
test
pop
jbe
dec
xchg
and
pop
add
add
dec
nop
insb
jmp
push
pop
xlat
insb
pushf
mov
stc
sub
insl
xor
xchg
pop
inc
add
push
repz
mov
cmp
pop
or
or
out
push
loop
cs
pop
ja
data16
xchg
push
pusha
mov
sub
in
pop
jmp
adc
adc
pop
int3
lock
loop
cmpsl
add
fisttpl
pop
push
mov
lret
jle
inc
int3
test
in
xor
pop
int3
das
dec
and
sbb
mov
xchg
jl
jg
dec
xor
mov
inc
bnd
inc
dec
dec
scas
xor
or
pop
dec
and
mov
push
sti
xchg
sbb
lods
aad
add
mov
jge
sbb
mov
inc
fstpt
mov
jmp
lret
inc
sub
mov
jmp
xor
pop
mov
jbe
test
add
push
or
or
jbe
inc
call
cmp
jnp
mov
inc
xchg
xor
loope
xchg
add
dec
adc
mov
push
xchg
scas
push
lds
or
popa
filds
or
stos
std
rcr
add
push
fbstp
and
push
cmpl
pop
in
inc
mov
add
cmp
mov
pop
mov
pushf
xchg
pop
popf
out
daa
cmp
cs
inc
insb
dec
adc
adc
ret
psllq
inc
fisubrs
pop
pop
repz
dec
or
mov
cmc
push
cmp
fbstp
pop
popf
add
cltd
out
aaa
inc
mov
mov
pop
push
xchg
xchg
jp
mov
mov
push
insl
inc
inc
fldl
ss
cmp
push
and
jnp
loopne
push
notb
rorl
cs
push
xchg
adc
out
ja
push
jmp
stos
loope
andb
cmc
xor
push
push
pop
rcl
dec
xchg
dec
add
and
or
pop
pop
mov
roll
imul
push
add
repnz
xor
lds
in
pop
xchg
out
sbb
fiaddl
cpuid
push
dec
loopne
mov
inc
jmp
pop
mov
pop
sahf
push
in
push
in
adc
dec
cmp
push
add
clc
sbbl
sub
in
mull
shl
lock
push
mov
xchg
push
ret
stos
in
pop
jae
push
mov
mov
or
push
mov
or
insb
jno
mov
xor
mov
sbb
cmc
stc
inc
sbb
sub
dec
add
lahf
pop
dec
xor
icebp
sub
jmp
mov
fcos
clc
orb
pop
shl
jbe
and
sbb
clc
pop
mov
cmp
pop
dec
xchg
inc
sub
pop
pusha
fisubrs
push
dec
mov
loopne
push
xor
and
fcoml
and
psubsb
pop
stc
test
jbe
sub
fldt
leave
movsb
and
mov
and
mov
mov
inc
or
push
jle
jne
mov
arpl
sbb
aas
xchg
push
into
arpl
lock
sahf
fcomps
test
frstor
dec
daa
rcrl
or
shlb
and
lret
cmpsl
insb
scas
ret
push
push
pop
and
rolb
lods
inc
inc
pop
and
lea
scas
add
inc
stc
pop
push
rorb
and
sahf
and
sahf
sub
dec
dec
das
push
icebp
popa
jo
adc
dec
fstpt
mov
add
add
and
shr
mov
adc
shlb
sti
lds
jmp
push
fdiv
stc
push
nop
lahf
leave
or
adc
pop
dec
dec
mov
movsb
dec
cmc
mov
lret
and
vmwrite
push
ret
add
add
aas
rcll
pop
cmp
sub
lods
orb
xchg
inc
jmp
mov
aas
cmpsl
inc
add
and
clc
decb
cmp
in
out
fidivrs
adc
addb
mov
adc
jns
add
inc
pushl
fisttps
jmp
mov
out
cmp
dec
cmp
out
push
sbb
cld
fldpi
repz
cltd
daa
push
sub
pop
in
sti
test
mov
lret
test
lds
sub
aad
mov
clc
and
adc
sbb
js
pop
adcl
sub
sub
push
add
sbb
jp
cmp
pop
cmp
test
add
add
jge
pop
xchg
jmp
pop
add
pusha
cwtl
jecxz
shlb
and
int3
inc
adc
sub
movsl
sbb
jmp
jp
ds
scas
rorl
add
jnp
imul
cmp
push
in
or
xlat
repz
push
mov
aas
roll
daa
sbb
test
in
and
lds
rcll
pop
imul
dec
into
mov
adc
and
mov
or
js
jns
xchg
adc
pop
pop
lds
add
jge
pop
lods
pop
loopne
mov
adc
jecxz
rorb
sub
dec
inc
sub
sub
cmp
call
dec
testb
sti
xchg
xchg
je
aas
pop
aaa
mov
add
jle
mov
popf
in
pusha
mov
icebp
adc
add
scas
je
insl
jp
sbb
xchg
enter
pushf
dec
pop
xor
dec
mov
aaa
adc
push
push
mov
mov
inc
sub
xchg
outsl
adc
pusha
inc
scas
push
sbb
mov
pop
inc
inc
sub
stos
leave
or
jle
pop
stc
cs
or
push
sbb
pop
cmpsb
sub
sbb
data16
push
sbb
pusha
bound
cli
add
mov
add
xor
add
mov
je
popa
out
icebp
shll
jmp
adc
mov
add
pop
mov
xchg
js
xchg
xchg
mov
adc
leave
clc
sahf
or
push
push
aaa
incb
inc
xchg
fdiv
inc
dec
and
test
push
ss
add
std
xor
adc
mov
adc
nop
fs
inc
outsb
pop
sar
xor
dec
jge
arpl
and
add
pop
lcall
cs
dec
pop
nop
add
kmovb
jno
sarb
dec
out
adc
add
orl
mov
in
inc
jne
pop
adc
mov
cmp
pop
shr
cmp
jmp
scas
lcall
mov
mov
arpl
in
push
sar
cmp
pop
add
subb
mov
dec
inc
lea
nop
aad
sub
sbb
or
jge
or
pop
loopne
pop
xchg
mov
jns
jl
add
shll
out
lahf
out
push
movd
leave
mov
test
mov
xchg
je
fsubr
test
idivb
cmp
andl
pop
push
adc
fisubrs
jge
xor
out
sbb
out
clc
jp
cmp
add
xor
pop
mov
inc
xchg
div
loope
incl
pop
cli
in
inc
sbb
sub
ret
ss
data16
mov
cli
imul
popf
fldl2e
lcall
aaa
push
mov
data16
pop
jbe
dec
push
and
mov
jmp
enter
sbb
int
out
lock
daa
sahf
jb
dec
lock
out
mov
sbb
and
xchg
stc
not
mov
fs
sub
sub
repz
xor
test
xor
or
adc
not
shr
pop
xchg
pop
sub
stos
int
add
add
push
es
scas
shlb
lahf
andb
test
sbb
sub
jo
ja
add
sbbl
mov
add
dec
fcmovb
testl
outsb
mov
ds
jae
call
mov
jmp
push
xchg
xchg
pop
out
fndisi(8087
daa
jecxz
lods
pop
fists
and
daa
flds
xchg
mov
fdivs
fs
dec
loop
je
dec
inc
xchg
pop
subps
xor
pop
movsl
mov
inc
adc
fs
push
xor
dec
inc
shll
ret
repnz
cli
loopne
pause
sub
pop
add
jmp
cmp
dec
cmovae
sbb
mulb
push
pop
jne
jmp
mov
xchg
pushf
rclb
push
pop
pop
push
mov
inc
mov
add
idiv
or
cmp
repz
shr
mov
inc
frstor
xor
or
or
adc
mov
dec
aad
movsb
stos
andb
call
sub
and
push
add
sarb
addr16
arpl
add
aam
test
dec
xor
push
sub
dec
push
jecxz
stos
nop
scas
mov
add
imul
or
inc
lods
jne
mov
mov
mov
jmp
shlb
add
outsb
insb
add
pop
out
gs
sub
clc
push
sub
add
rorb
pop
fstps
jp
pop
and
or
orl
call
lcall
fwait
push
mov
jbe
mov
jle
iret
je
int
aaa
out
cwtl
add
jg
out
mov
sub
insb
aaa
jmp
and
push
jb
aad
scas
dec
into
mov
loop
jo
jle
add
je
rcrb
jnp
jmp
dec
push
enter
inc
cmp
push
faddl
or
dec
mov
out
add
mov
adc
pop
jge
mov
push
or
pop
ss
mov
mov
mov
sub
enter
mov
jns
jno
popf
adc
xor
add
pop
in
xchg
and
jns
mov
mov
add
mov
adc
add
fcmovnb
jecxz
xorb
insl
bound
sub
out
jmp
sbb
add
test
mov
lock
dec
fistpll
add
inc
stc
mov
xchg
std
adc
dec
mov
in
cmp
xor
aas
pop
cmpb
dec
test
pop
arpl
scas
insl
imulb
dec
jne
frstor
loopne
mov
repnz
xchg
psubw
cmc
and
loopne
or
out
mov
sub
push
jnp
mov
cli
xlat
or
or
push
pop
repnz
rorb
mov
pop
adcb
mov
xchg
outsl
in
push
sbbb
push
sbb
fistpll
push
in
add
sbb
inc
mov
sbb
jns
add
sub
jmp
dec
lahf
and
fs
inc
hlt
xchg
xchg
je
imul
lahf
jns
outsl
movsl
mov
call
jb
pusha
push
xchg
add
aaa
pusha
dec
repz
std
jg
mov
daa
pop
xor
dec
clc
xor
pop
push
push
lcall
cld
inc
lods
negb
loop
add
and
mov
bnd
xor
popa
imul
add
fs
jnp
xchg
jg
scas
mov
dec
sbb
jl
mov
dec
sbb
push
xorb
push
jmp
sub
and
stc
sbb
repz
iret
sub
dec
leave
and
push
adc
add
jle
or
aas
or
xor
and
pop
clc
pop
pop
mov
jle
push
or
or
and
iret
mov
cmovns
push
add
icebp
add
mov
sbbb
jl
sarb
and
xchg
xchg
dec
sub
mov
inc
add
shrb
xchg
jb
inc
add
jmp
into
call
and
mov
jmp
ret
jnp
mov
xlat
xor
bound
inc
jmp
outsl
scas
call
sbb
or
mov
adc
cmp
repnz
jmp
xchg
ds
stos
lret
addb
iret
pop
jmp
adc
cmp
or
das
add
data16
jmp
movsb
rorb
int
sub
arpl
mov
xchg
movsb
or
popf
jbe
stos
mov
sub
adc
test
jnp
enter
repz
push
jmp
sub
lea
fnsave
mov
sbb
xor
in
movl
add
and
mov
cmc
lret
sub
mov
pushf
or
jmp
repnz
inc
pop
inc
and
adc
mov
ds
outsb
out
shlb
push
scas
or
cmp
pusha
mov
pop
fsub
add
insb
adc
push
ljmp
movsb
inc
cmp
sub
pop
jg
rcrb
popa
mov
mov
imul
loop
cmp
pop
push
adc
jp
dec
ficomps
mov
mov
cmpl
xor
push
imul
repz
gs
cmp
add
outsb
icebp
jl
cmp
cs
cmp
ljmp
shrl
lret
cmp
adc
add
dec
or
mov
or
out
pop
std
push
pop
ret
mov
popa
pop
fcompl
sbb
call
sub
das
popa
jle
ffree
jle
repz
pusha
popa
test
adc
mov
stos
enter
data16
jno
and
sub
push
add
mov
loop
not
add
stos
sub
push
mov
insl
cmp
jmp
or
cmp
aaa
enter
inc
cmp
test
xor
xchg
inc
imul
jns
shl
pushl
sbb
popl
sub
push
ds
push
es
sbb
in
in
pusha
mov
sub
daa
add
repz
mov
loop
adc
pop
push
das
pop
and
clc
jo
jl
daa
aas
mov
out
sbb
push
mov
mov
dec
sub
pop
pop
test
push
jne
outsl
hlt
lds
cs
negb
test
jmp
lods
add
add
loope
mov
and
and
or
fldt
fimuls
push
scas
jbe
xor
fidivl
pop
push
xchg
xchg
inc
cmp
fnstcw
mov
add
call
fcmovu
sarl
add
sub
cmp
dec
das
cwtl
dec
sti
dec
xchg
out
leave
push
cmp
mov
or
ret
dec
rcrb
sbb
add
cmp
inc
push
in
adc
std
pop
movl
push
sub
testb
sti
mov
mov
arpl
and
cmpsb
cmp
or
mov
and
loope
pop
icebp
add
lds
insl
fistpll
and
jnp
cmp
pop
cmpsl
addr16
xchg
sub
dec
rcll
ss
or
jbe
or
jb
inc
imul
jecxz
pop
xor
mov
cld
sahf
mov
aad
pop
cmp
pop
lods
jno
addl
rorl
aad
or
inc
add
add
jge
inc
fstl
or
sub
fisubs
popf
loope
push
and
pop
pop
sbb
cli
sbb
push
push
inc
pop
sub
xchg
or
inc
and
adc
jmp
loop
decl
lds
mov
fwait
bnd
iret
pusha
testl
cmp
mov
sub
in
repnz
addb
add
loope
mov
sub
xchg
dec
mov
and
shrl
jno
add
sub
dec
jp
lock
cmpb
push
push
pop
popa
adc
cld
test
sbb
push
adc
cltd
mov
out
xchg
cmp
in
mov
pop
push
dec
jo
add
xor
pop
or
pop
arpl
xor
xorb
pop
mov
and
or
add
rorl
js
or
testl
ficoml
and
push
pusha
cmp
cmp
mov
add
or
mov
adc
les
jmp
sbb
sbb
imul
in
cltd
push
and
or
dec
dec
or
mov
push
emms
mov
mov
cmp
call
or
shrb
movsb
cmp
xchg
jno
push
mov
and
sub
lret
mov
in
push
fildl
pop
push
nop
sub
cli
or
aad
mov
lods
and
push
push
out
sbb
cmpsl
cmp
add
jbe
inc
push
jmp
dec
mov
test
sub
add
jnp
pop
jmp
insb
clc
cvtps2pd
sub
filds
data16
fcoms
xchg
add
jb
xor
fcom
mov
pusha
popl
or
into
jmp
fdiv
sub
pop
xchg
pop
or
xor
pop
push
imul
pop
ljmp
roll
push
stos
leave
sub
test
or
jle
enter
push
ficompl
or
bound
mov
test
add
pop
in
inc
testb
lods
mov
das
cmp
imul
ret
fildll
sti
pop
sub
xchg
cmp
push
mov
jg
daa
xchg
and
shl
int
cmpsl
ss
or
into
movsb
dec
push
sar
push
mov
dec
fisttpll
inc
bound
out
fsubrs
orl
lds
hlt
js
dec
pop
loope
pop
push
mov
mov
les
pop
mov
inc
push
movsb
int
data16
daa
es
jae
add
push
sarb
notb
loopne
add
lret
add
dec
enter
mull
and
or
and
add
mov
sbb
xor
mov
ss
movsl
cmpsb
jecxz
adc
stos
pop
loopne
mov
mulb
fsubrl
sub
fists
sub
mov
not
addb
sub
or
hlt
popa
pusha
push
mov
daa
jmp
push
push
lret
cmp
sub
mov
jmp
pop
or
xchg
addb
js
cmpsl
movsl
push
or
mov
inc
or
add
cld
lods
push
cs
sahf
sub
inc
push
dec
or
adc
cltd
sub
dec
scas
cmp
dec
js
mov
adc
mov
loope
imul
es
mov
stc
push
clc
sub
pop
in
imul
xchg
sbb
outsb
fs
ja
aas
outsb
mov
adc
or
mov
lahf
adcl
cmp
inc
xchg
cli
or
inc
cmpl
push
test
lock
sbb
and
push
loop
sti
inc
and
lods
jp
mov
inc
mov
pop
push
orb
enter
in
jnp
cs
mov
cmp
xor
imul
ret
push
mov
imul
adc
push
push
push
sbb
xchg
in
adc
ret
add
sub
lock
sub
out
sbb
jmp
clc
mov
push
inc
ljmp
and
outsl
outsl
or
iret
decl
push
xchg
jp
push
inc
xor
mov
mov
pop
cltd
mov
mov
js
jo
mov
adc
and
fstps
das
mov
pop
inc
xor
jns
and
mov
adcb
sbb
in
loop
repnz
mov
push
mov
jle
xor
adc
xor
loop
andb
xor
jmp
pop
push
and
ret
push
jo
add
dec
add
sub
sub
ret
pop
cmp
jmp
mov
mov
test
pop
jno
cld
pusha
mov
daa
push
cld
pop
das
lcall
push
xchg
inc
stos
xor
add
or
jns
xorl
stos
inc
dec
mov
cld
sbb
sub
arpl
dec
dec
fdivrl
sub
imul
add
in
cmp
mov
or
dec
mov
leave
inc
push
sarb
xor
and
or
out
pop
pop
ds
inc
cmp
mov
cs
or
or
cmp
rol
insl
fwait
jmp
fistps
lds
xor
ss
lret
sahf
call
or
or
jmp
push
repnz
test
inc
add
pop
clc
pop
or
rcl
mov
aaa
ds
jo
jne
call
sbb
notl
dec
mov
and
mov
lea
dec
pop
sar
xor
mov
fs
jo
stc
and
xor
scas
stc
jns
pop
push
mov
pusha
ljmp
clc
jp
cltd
pop
push
xor
outsl
mov
stos
cmp
push
sub
subb
sbb
pop
jmp
or
xchg
mov
ljmp
jmp
cmp
jo
sub
xor
inc
push
xor
outsb
adc
das
pop
inc
lods
push
or
ja
pop
in
stos
cmp
mov
and
pop
sub
movsb
inc
js
mov
lret
or
jnp
bound
mov
jmp
gs
push
sub
push
sbbb
push
pop
or
adc
sub
out
dec
ljmp
cs
push
lock
loope
cld
cmpsb
mov
cmp
push
jno
jmp
jmp
out
fisttpll
jge
je
mov
ljmp
sbb
lcall
jle
mov
rorb
pop
push
mov
or
sub
push
fwait
mov
sbbb
mov
cmp
fnstenv
ficoml
popa
mov
mov
and
and
push
cwtl
add
inc
shrb
pop
imul
std
out
xor
inc
jmp
popa
mov
cmc
or
test
fldt
leave
pop
rcrl
repz
push
loope
outsb
xchg
add
pop
adc
aam
mov
sub
adc
mov
push
xor
fs
aad
or
xlat
xor
test
inc
jbe
add
pop
pop
dec
xchg
xor
sbb
stc
lahf
pop
incl
mov
incl
mov
in
cmp
ret
shll
cmp
cmp
add
inc
or
inc
pop
lret
push
pop
xor
iret
mov
pop
xchg
push
mov
ret
pop
pop
mov
fisubrl
stc
sbb
push
pop
cmp
adc
dec
dec
or
int3
or
jecxz
test
shr
inc
pop
sub
fs
mov
and
or
pop
outsl
sub
das
push
or
gs
pop
sub
fisttpl
or
cmp
mov
jecxz
dec
add
jnp
or
out
ret
rcrb
inc
pop
push
ljmp
adc
pop
or
cwtl
and
mov
push
inc
pop
and
add
stos
orl
pop
mov
mov
pushl
mov
mov
xor
pop
dec
push
pop
cmc
lret
or
add
inc
aas
push
jmp
sbb
xor
cli
movsl
stos
ja
es
enter
xchg
repnz
inc
and
mov
and
xchg
adcl
inc
enter
push
jo
xchg
xchg
mov
push
xchg
fsubr
xor
out
rcl
daa
pop
pop
and
push
or
pop
mov
ss
dec
or
fucom
inc
idivl
outsl
shrl
rolb
je
and
adc
jb
inc
mov
cmpsl
mov
aas
cmp
add
push
shr
dec
inc
mov
inc
or
xchg
push
jmp
test
sar
daa
lahf
sbb
repnz
pop
fs
into
adc
xchg
pop
stos
or
xor
out
mov
add
jae
sub
sub
sahf
bound
sub
mov
jns
sarl
or
mov
dec
lret
dec
and
push
xor
iret
or
jecxz
in
pop
movsl
aas
fmul
pop
sbb
mov
or
add
pop
ds
push
rcll
pop
dec
dec
int3
or
imul
inc
mov
test
clc
sbb
jno
mov
push
add
cmp
jg
cltd
and
push
rcrl
dec
pushf
int
fmull
mov
adc
test
xorb
pop
shrl
sbb
es
push
inc
aad
push
jle
inc
mov
sbb
dec
pop
sub
cmp
dec
mov
dec
popf
push
imul
stos
add
add
xorl
mov
mov
pop
sub
sub
xor
pop
mov
sub
enter
cs
fs
das
push
xchg
pop
pop
aam
xchg
xchg
gs
or
pop
mov
mov
or
adc
testb
bound
enter
xchg
shr
add
jmp
push
fcmove
mov
mov
mov
push
mov
and
pmaxub
add
push
mov
sub
cld
clc
or
lock
fildll
out
cmp
inc
hlt
aas
xchg
out
add
fnstenv
insb
rcll
mov
adcb
into
hlt
sysret
dec
outsb
jmp
stos
jns
js
loope
mov
bound
xlat
ret
cltd
ljmp
cmp
out
and
pop
inc
cmc
int
inc
dec
fists
add
jbe
pop
loope
pop
outsb
jns
test
jmp
ret
add
mov
arpl
mov
mov
subb
cmc
lcall
mov
out
dec
and
adc
fistpll
loopne
in
and
aaa
loop
fcompl
aad
xchg
sahf
dec
mov
adc
and
jg
sahf
mov
cmp
and
insb
pop
call
or
test
and
sbb
jns
pop
in
cmpsl
inc
enter
icebp
mov
in
xchg
aad
push
std
push
pop
push
mov
imul
jle
mov
rcll
cmp
push
sub
adc
push
es
fwait
leave
add
out
mov
imul
or
pop
rorb
push
lret
sbb
icebp
xchg
cli
gs
pop
xor
add
push
incl
or
mov
push
pop
xor
pop
inc
inc
sub
xlat
add
cld
lock
lret
xchg
mov
insb
sub
and
and
mulb
ds
shr
test
xor
loopne
es
adc
or
add
ja
xchg
mulb
sbb
cmp
movlps
jmp
push
aaa
sub
outsl
aam
mov
repnz
call
jno
in
sub
lock
cmp
mov
inc
or
dec
inc
test
adc
inc
ret
cmp
add
add
push
icebp
jnp
xchg
add
and
ror
pop
fucomip
mov
fcoml
sbb
push
incl
loopne
fisttpl
add
mov
push
popf
ret
push
adc
mov
movsb
jo
cld
mov
test
out
clc
jmp
mov
fsubrs
and
je
shr
xor
es
mov
mov
bnd
out
mov
add
les
ja
mov
mov
inc
add
adc
mov
dec
cmpsl
mov
and
out
adc
dec
in
negl
sbb
jmp
jmp
popf
ljmp
jbe
mov
xchg
mov
sbb
inc
xlat
sbb
sub
or
ljmp
stos
orl
mov
or
sti
leave
rdpmc
cs
jle
push
loopne
sub
out
orl
pop
les
jae
mov
add
in
lock
xor
cmp
and
mov
xor
lret
popf
add
pusha
dec
inc
out
mov
push
mov
in
jp
fnstsw
sub
orb
lret
notb
mov
pusha
pop
or
stos
or
jmp
or
pop
test
or
adc
jns
add
mov
aas
jg
ficoml
xor
sbb
ds
inc
jnp
rcll
insb
mov
sub
push
xlat
and
cmp
pop
or
mov
fldt
jge
xchg
pop
lcall
pop
faddl
jp
pop
cmp
out
and
dec
or
xchg
test
scas
lret
and
xchg
fsubrl
push
cld
loop
adc
js
jmp
inc
mov
ja
cmp
leave
sub
add
and
adc
scas
pop
out
ret
xor
or
es
sbb
dec
pop
or
int3
and
not
sarb
add
shufps
inc
cmp
ljmp
int
loop
xchg
not
or
cmp
sbb
fwait
or
jmp
test
fwait
mov
xor
push
das
dec
ljmp
xchg
pop
shlb
mov
xor
adc
pop
stos
adc
scas
cmpsb
adc
popfw
cmpsb
mov
sbb
filds
add
jp
add
mov
rcrl
add
loopne
jnp
adc
or
mov
fldl
gs
popf
adc
js
loope
mov
cmp
call
loop
incb
sub
mov
and
leave
std
js
nop
xor
fwait
je
push
mov
ljmp
in
push
push
orb
push
dec
repz
pop
movl
adc
or
out
adc
add
add
mov
push
mov
mov
jno
js
das
pop
fisttpl
lret
add
add
icebp
mov
pop
movb
in
repz
add
and
adc
negb
push
roll
ja
call
mov
roll
sti
sbb
ficoms
or
out
fcomps
je
inc
sub
test
decl
sub
cmp
mov
inc
mov
pop
xlat
sbb
lock
into
insl
adc
dec
and
jbe
sbb
sbbb
mov
mov
aas
aas
aaa
cmp
rcrb
cmc
pusha
xchg
cmp
idivb
push
lahf
js
or
or
cmp
or
out
mul
pop
mov
dec
test
cs
lret
xchg
xchg
test
xor
outsb
cld
sub
divb
pop
adc
lock
movsl
hlt
dec
pop
push
sbb
xorl
cwtl
inc
inc
jmp
repnz
add
adc
pop
nop
sub
in
adc
out
push
xchg
xor
lea
push
push
adc
out
sbb
push
xchg
adc
pop
or
imul
add
inc
sub
jnp
pop
inc
lods
jo
xchg
mov
sub
adc
add
push
jp
leave
adc
push
imul
cmp
mov
test
inc
test
scas
push
or
push
data16
lods
lods
adc
push
lods
jbe
test
leave
mov
lret
shr
xor
jp
or
jne
dec
dec
stc
cmp
mov
sbb
es
xor
jno
mov
sub
cmp
jge
ja
orl
mov
xlat
jmp
ljmp
inc
mov
ss
repz
scas
push
sub
shr
xor
loopne
xchg
dec
push
sub
dec
jecxz
or
lock
xchg
add
xor
sahf
es
pop
hlt
adc
clc
mov
lods
and
bound
dec
or
inc
add
sub
pop
femms
fstpt
push
sti
and
sub
mov
xchg
int3
push
outsl
adc
and
mull
sbb
inc
push
jbe
pop
sub
lods
jbe
sub
jg
cld
jl
lds
push
xchg
push
ja
cmpsl
xorb
or
rclb
inc
imull
push
mov
jbe
popf
sub
jmp
add
mov
or
xor
icebp
push
rcll
stc
ret
pop
mov
jecxz
push
push
mov
push
lock
pop
push
movsb
stc
movl
sub
pop
or
add
mov
jle
inc
pop
adc
mov
push
pop
jmp
inc
and
mov
and
jbe
scas
in
stc
ds
add
xchg
mov
push
mov
pop
jne
adc
cmpl
fsubs
xchg
call
std
push
add
pop
iret
call
pop
pop
ficoml
mov
popa
cmpsb
cmp
xchg
das
jmp
push
imul
std
sub
jae
xchg
mov
jmp
rol
push
mov
pop
in
iret
mov
and
scas
mov
xchg
xor
jne
inc
shll
mov
xor
dec
dec
pop
adc
push
lods
lods
adc
push
jmp
mov
call
xor
jb
rcll
jns
xchg
or
sbb
xor
add
adc
add
push
xor
pop
add
jnp
sbb
cld
sbb
mov
jo
das
lock
and
aas
mov
and
push
xchg
mov
dec
and
sub
imul
jmp
dec
test
cmc
fildl
stos
jns
sub
hlt
and
sub
in
fwait
sub
mov
cmpsl
mov
pop
in
movsl
adc
xor
add
setl
pop
in
jo
ds
js
lock
mov
aas
clc
push
movsl
mov
add
and
sub
add
sahf
fwait
add
sub
dec
lcall
mov
pop
adc
jo
sub
xor
roll
sbb
dec
sub
mov
test
xchg
xor
ljmp
aam
adc
add
jg
jno
shlb
clc
pop
mov
popf
jno
lds
mov
fisttps
xor
dec
sub
jb
inc
mov
subb
jl
test
jb
pop
movsb
pop
aas
in
fisttpll
adc
or
pop
or
xchg
dec
cmp
in
aam
call
sbb
mov
cwtl
mov
push
cwtl
xor
outsl
adc
in
pop
stc
and
jp
fimuls
push
loopne
jo
aas
cmp
pop
xor
pop
out
add
xchg
fcomip
mov
xchg
or
inc
dec
jo
ret
cmp
cmpl
arpl
cmpb
out
push
fwait
add
outsb
loope
lods
mov
or
cmp
icebp
fsubl
arpl
push
stos
xlat
cmpsl
dec
pop
or
push
add
icebp
sub
push
and
lahf
mov
adc
aad
dec
out
sub
dec
mov
test
sub
test
or
adc
clc
sub
or
push
and
int
jp
dec
inc
inc
adc
push
cld
popf
dec
mov
mov
inc
dec
mov
scas
lcall
ret
cmp
mov
mov
cs
push
push
ljmp
mov
iret
movsl
jmp
push
hlt
adc
scas
mov
cmp
push
push
iret
push
and
es
and
and
jnp
xchg
or
pop
ret
sbb
adc
lahf
movsl
cld
loopne
int
pushf
aad
ficomps
or
mov
adc
in
cld
aas
xor
fdivs
xchg
notl
xlat
jae
mov
mov
sbb
xchg
stc
inc
cmp
hlt
out
ficompl
mov
jmp
int3
ljmp
leave
add
jo
bnd
sbb
inc
lods
nop
fidivrl
adc
adc
loopne
lods
mov
cltd
inc
sub
jge
aas
mov
fcomps
mov
into
mov
add
inc
sub
rol
mov
fsubrp
ret
cmp
xor
fiadds
dec
ficoml
mov
sub
mov
dec
mov
repnz
mov
xor
dec
xchg
jno
and
push
add
pop
mov
xchg
or
pop
pop
add
stos
xchg
loop
push
pop
xor
or
adcb
xor
add
jnp
jp
adc
sbb
dec
adc
add
xchg
cmp
push
xor
adc
icebp
jmp
jno
jno
cmp
dec
mov
pop
inc
push
iret
cmp
jle
pop
popa
inc
adc
jo
mov
push
call
sbb
or
pop
std
xor
testb
dec
ss
add
dec
push
loope
dec
mov
jmp
pusha
adc
and
jmp
adc
aad
dec
xchg
jg
bound
in
add
adc
push
inc
nop
sbb
dec
xchg
pop
push
loop
aam
and
cwtl
aas
and
das
orb
sub
in
fadds
inc
pop
movsb
mov
gs
sub
sarb
push
adc
lock
imulb
lock
insb
sbb
pop
pop
mov
mov
std
mov
aaa
or
addr16
pop
icebp
adc
push
push
or
adcb
add
inc
mov
inc
mov
lret
xchg
jl
push
out
popa
mov
or
xchg
or
xchg
js
sahf
mov
xchg
jmp
mov
addl
sub
idivl
int3
pop
imul
fisubrs
adc
add
rolb
jne
and
out
or
in
sub
cmc
bound
cmc
sarb
pop
or
and
in
incb
jge
or
fstps
mov
bnd
sti
inc
adcl
lea
push
test
in
push
mov
data16
adc
push
mov
or
sbb
pop
jae
sub
mov
jbe
dec
in
jmp
mov
clc
outsl
mov
cwtl
mov
jo
mov
dec
adc
xor
jmp
xor
push
pop
sub
mov
arpl
lret
lock
xchg
pop
out
sub
mov
rcrl
movsb
in
and
push
xor
or
pop
pop
cltd
dec
inc
addb
xor
call
and
je
rcrb
shl
or
mov
jo
mov
sbb
pop
negb
sub
ds
cmpsb
adc
jl
dec
cmpsl
and
xchg
scas
dec
push
mov
clc
fimuls
mov
popa
sbb
ds
jbe
and
or
or
not
mov
and
neg
mov
push
leave
cs
dec
jge
jbe
xor
cmpb
daa
xchg
decl
push
pop
add
and
loopne
jmp
push
push
xor
jg
stos
add
enter
add
loope
sarb
test
cmc
inc
jle
mov
xchg
cmp
and
bound
sbb
xor
test
out
out
mov
xchg
mov
push
cmpsl
sbb
xor
ss
les
xlat
imul
mov
repnz
dec
cmpsl
sbb
adc
pop
lret
clc
or
xor
sub
xor
dec
pop
cli
xchg
cld
repnz
mov
xor
cli
insb
notl
push
repnz
mov
pop
outsb
sbbb
xchg
flds
mov
push
add
shrl
fwait
out
xchg
xchg
xor
sub
cmp
mov
pop
mov
cmpsb
cmp
xchg
jns,pn
push
dec
sysexit
mov
fcoml
jne
jno
mov
mov
cli
mov
subb
pop
jmp
mov
jo
mov
or
or
jmp
aad
inc
in
inc
or
adc
outsl
jge
and
mov
outsb
test
dec
and
popa
cmc
fstl
or
lea
jg
sub
mov
and
aam
cli
xchg
shlb
sti
xchg
sti
lods
jge
pop
push
jmp
mov
pop
shlb
mov
cmp
xlat
ds
xchg
dec
adc
cmp
insl
xchg
add
outsb
inc
cmp
or
mov
std
add
push
mov
dec
jmp
ret
jg
jne
xchg
dec
jns
xchg
xchg
jno
ret
or
imul
or
imul
inc
xchg
stc
das
es
jbe
ds
mov
and
dec
decl
jbe
test
add
icebp
push
sarl
push
push
add
test
jo
pop
push
push
sahf
sub
jp
outsb
dec
sti
push
sub
loopne
cmp
pop
inc
inc
add
dec
or
push
mov
mov
pop
call
pop
imul
pop
stos
or
call
sub
or
push
adcl
shr
sub
ss
mov
pop
into
pop
mov
ror
pushf
dec
loopne
pop
pushl
ret
mov
cmc
popa
insl
pop
xor
mov
push
out
mov
hlt
aad
ja
rol
enter
ja
sti
sub
lds
lret
push
sub
pop
push
push
es
xor
cmp
xchg
xor
inc
lock
shl
pop
jmp
shll
inc
out
mov
stc
push
pop
scas
inc
stc
xchg
push
cmpl
push
or
cld
shl
push
test
psrlw
loopne
lock
cld
sbb
out
add
loop
adcb
sbb
sub
lret
jne
add
add
xchg
xchg
pop
jno
cmp
lea
mov
dec
mov
inc
call
scas
xchg
fstl
or
loopne
pop
push
add
orl
push
pop
dec
cli
sbbl
cmc
push
mov
cli
ja
add
test
or
xor
push
or
add
or
cs
pop
add
lock
push
xchg
pop
ret
pop
jmp
mov
ljmp
and
adc
adc
or
imul
and
subl
dec
xor
add
jmp
push
dec
push
fidivrs
dec
out
pop
mov
repz
sbb
cmc
add
mov
mov
sbb
and
int3
dec
dec
ja
loopne
je
xor
dec
mov
call
xor
sarl
mov
jmp
mov
jp
or
dec
mov
push
pop
xlat
leave
cmp
inc
xchg
adc
adc
in
inc
dec
and
xchg
out
cmpsb
sub
sti
idivl
and
pop
aaa
or
mov
sub
sbb
push
fmuls
imul
jno
jmp
jle
out
pop
dec
xchg
add
jne
push
lret
cmpsl
push
fsubs
popa
aam
das
cmp
xor
push
les
sub
sub
pop
pusha
mov
in
aas
cmp
bound
jg
or
lret
jmp
dec
add
xlat
stc
scas
mov
push
push
insb
inc
inc
push
fsubp
cmp
or
add
mov
and
test
clc
or
cmp
mov
mov
sti
je
xorl
aaa
aas
lock
inc
fidivrl
adc
xor
mov
pop
scas
push
and
sbb
lock
push
ja
xchg
jmp
sub
movl
mov
cmc
icebp
aaa
sub
or
mov
pop
je
and
data16
sub
jl
mov
jmp
incl
loopne
loopne
in
jno
inc
mov
push
and
out
pop
push
stc
cli
aas
sub
insl
or
lds
sub
nop
adc
add
pop
sub
icebp
repz
shlb
or
mov
ljmp
repnz
mov
dec
dec
pop
push
sarb
stos
add
pop
push
arpl
fwait
inc
xor
or
nop
dec
sub
mov
daa
jl
sub
or
sub
int
inc
outsl
adc
nop
mov
shll
lods
dec
and
add
push
or
out
popf
nopl
mov
adc
shl
pop
cmp
jbe
and
push
lret
pop
pusha
cmp
sub
mov
xchg
inc
ss
xor
popf
push
xor
and
mov
push
add
mov
aas
pusha
ret
lret
lock
in
xor
popf
decl
pop
sub
fwait
stc
sub
or
adc
xor
shll
add
add
repz
or
xchg
xlat
stos
out
add
and
pop
mov
or
inc
inc
push
adc
int
inc
pop
loope
fnstcw
cmp
fisttps
xchg
lods
stos
mov
push
idivl
mov
pop
loopne
mov
push
adc
sub
add
ficomps
pop
or
adc
jo
and
or
mov
push
fmull
cwtl
lods
push
jl
push
nop
in
dec
or
jl
push
xchg
std
push
or
push
add
push
jbe
add
call
pop
imul
add
or
push
pop
add
or
pop
sub
movsl
stos
and
jmp
mov
cs
pop
cmpsl
jno
leave
fstl
jae
jb
movsb
rcll
lock
mov
push
cmpsl
scas
aas
jmp
add
shrb
clc
jge
xchg
push
movsb
mov
stc
jle
push
add
pop
jns
xlat
inc
jns
and
adc
pusha
vmptrst
jmp
cmc
fisubrs
lret
xchg
fcoms
and
sbb
xlat
xchg
fs
mov
pushf
rolb
paddw
xor
test
aaa
test
lods
push
imul
pop
inc
jmp
push
xchg
pop
flds
mov
in
data16
sti
test
push
aam
daa
mov
hlt
lods
shrl
dec
in
mov
jecxz
jl
inc
push
setg
adc
popw
loope
orl
add
sbb
jmp
jge
and
xchg
mov
xor
adc
or
and
add
jo
mov
aas
arpl
scas
pusha
inc
sahf
icebp
dec
cmp
lock
pop
aas
lret
push
ret
and
sub
lods
push
sar
ljmp
mov
push
leave
das
add
sbb
inc
sbb
jl
or
cld
pushl
add
shlb
pop
mov
std
xor
popa
mov
fists
outsl
repnz
xor
loopne
push
mov
nopl
jo
pop
xchg
mov
xor
jmp
cmpsl
inc
sub
insb
dec
lahf
inc
aad
and
lcall
xor
not
test
pop
inc
rorb
xchg
cmp
in
mov
jns
or
inc
cwtl
sub
pop
clc
mov
mov
and
test
pop
mov
mov
hlt
jnp
mov
push
push
pusha
mov
inc
cmp
push
add
cmp
les
fsin
add
sbb
pop
xchg
jb
fdivr
adc
addr16
sub
dec
push
icebp
mov
outsb
push
jbe
inc
icebp
dec
cmpsb
test
testb
dec
gs
idivl
gs
adc
mov
pop
adc
int
stos
push
jae
and
notl
pop
xor
pop
jecxz
cmpsb
outsl
mov
cmp
push
frstor
push
dec
pop
scas
int3
pop
xchg
push
loopne
popa
push
and
or
pop
mov
pop
fdiv
aad
int
jmp
push
popa
fisubs
adc
mov
or
or
xchg
inc
pop
test
fsubl
dec
or
xor
addb
inc
fnstenv
add
jns
or
push
push
add
xor
and
xchg
rclb
or
jnp
outsl
mov
xlat
inc
cmp
ss
mov
or
call
sub
sub
sbb
or
jae
scas
call
jnp
orb
in
pop
or
jp
daa
add
jns
clc
cmp
mov
in
imul
scas
fdiv
dec
movsb
gs
ljmp
negl
jmp
pop
data16
or
das
jne
and
mov
shl
and
lods
mov
add
mov
sbb
jp
add
in
and
daa
jge
pop
and
jg
shll
pop
mov
jnp
or
or
mov
jge
add
dec
push
in
ds
jo
adc
cwtl
adc
inc
and
jb
pop
mov
pop
adc
std
jmp
sbb
jl
push
inc
out
popa
inc
pop
pop
inc
clc
add
sub
push
jns
daa
dec
repnz
and
sbb
jl
and
shlb
xor
push
push
push
add
decl
daa
jmp
loope
int3
enter
jmp
je
mov
or
xchg
push
cmpsl
jo
cmp
int3
stos
lods
sbbl
adc
sub
xor
cmpsb
mov
rclb
xchg
loope
xchg
adc
pop
mov
icebp
insb
sbb
sbb
es
mov
add
dec
inc
jmp
addr16
jecxz
adc
jbe
imul
adc
mov
push
pop
dec
cmp
pop
iret
sub
adc
repnz
push
mov
dec
sub
dec
cli
adc
out
pop
scas
int
dec
in
xor
push
les
pop
pop
insb
adcb
pushl
xchg
call
nop
dec
notb
dec
arpl
add
mov
es
lea
xor
ljmp
add
test
jp
stc
mov
dec
movsb
cmp
in
scas
int3
dec
or
mov
insb
or
cs
jmp
push
push
jmp
ss
aam
scas
cld
mov
imul
pop
aas
add
push
sub
mov
popf
sub
mov
out
ja
add
inc
add
jmp
add
and
fstpt
xor
mov
add
and
cmp
inc
loope
xchg
pop
lods
ljmp
test
xchg
adc
push
inc
cmpsb
sub
sub
mov
adc
mov
mov
aad
push
dec
jle
push
push
add
cld
push
hlt
lds
je
push
push
mov
aas
pop
push
or
push
lcall
fisubrs
stos
inc
cmp
add
add
ret
or
in
aad
test
out
adc
pop
mov
add
call
and
add
adc
je
jo
mov
push
pop
mov
ror
je
mov
inc
add
sub
mov
mov
test
lock
or
dec
jmp
sbb
jmp
lods
ja
inc
std
mov
call
jp
adc
push
add
inc
je
iret
dec
mov
cli
or
mov
lret
scas
and
pop
cwtl
inc
fwait
xchg
das
loopne
fistl
clc
mov
xor
and
mov
jns
mov
incb
cmc
int
aad
in
inc
adc
push
lds
pop
push
mov
out
jbe
shl
fistl
pop
and
or
jle
or
add
adc
cli
and
pop
cmpsl
mov
dec
add
stc
out
sub
loope
mov
cmc
pushf
pop
cwtl
dec
daa
cmp
adc
stos
cld
push
jo
ficoml
jmp
inc
dec
mov
leave
popa
inc
mov
push
mov
pop
ret
insb
or
or
js
in
ror
push
cmp
xchg
not
orb
out
pop
mov
fcoms
cmp
mov
lea
fs
pop
pop
loopne
in
add
out
dec
loopne
mov
fcoml
cltd
mov
adc
xchg
dec
mov
addr16
subb
mov
daa
xchg
ja
adc
pop
push
in
lahf
mov
daa
xchg
adc
fists
scas
loope
push
jnp
loope
fadds
adc
pop
testl
xchg
mov
mov
or
mov
jae
lods
jno
or
or
ret
or
pop
or
scas
iret
push
fcmovnu
or
rcll
pop
sbb
mov
dec
mov
nop
mov
pop
cmpsl
repnz
clc
add
add
test
mov
sub
fs
cld
pop
inc
cmp
rol
push
mov
and
jmp
insb
sub
das
mov
push
fisttpl
cli
lds
add
xor
andnps
lret
or
cli
or
jo,pt
dec
jae
repnz
cli
push
sub
scas
inc
sbb
push
adc
lds
xor
inc
cli
pop
jp
mov
pushf
adcb
xor
mov
or
push
add
adc
test
mov
inc
loop
ja
xor
mov
push
add
jmp
out
ror
mov
xchg
fmuls
push
add
fwait
sub
imull
aaa
shlb
or
jno
xor
out
adc
ret
jmp
nop
repz
add
xchg
adc
jbe
add
leave
roll
lret
cmc
ret
mov
jmp
mov
push
in
negb
xchg
mov
xchg
daa
pop
rorb
repnz
push
adc
in
push
sub
ljmp
pop
roll
sub
sub
pushf
dec
xor
fs
dec
cmc
pop
push
or
test
repz
movsl
inc
xchg
mov
push
jmp
lcall
jmp
sub
cld
bound
imul
pop
and
ja
add
mov
lods
lcall
clc
lock
xchg
cmc
ret
inc
repnz
push
fistps
xor
cmpsb
push
push
nop
inc
or
pop
test
les
daa
and
loop
popa
mov
aam
inc
iret
ret
sbb
testl
pop
sub
pop
andl
aaa
bound
add
pop
mov
pop
cwtl
movsl
popf
jbe
inc
inc
enter
xor
out
cmp
add
lea
jmp
adc
jne
push
fisubrs
ljmp
loopne
adc
fimuls
jmp
pop
pop
bound
and
into
loope
jnp
mov
mov
rclb
sub
jle
fwait
pusha
add
bound
adc
loop
ret
xorb
push
or
cwtl
pop
xchg
inc
movsb
insb
cmp
stos
xor
aad
inc
lcall
adc
push
arpl
jl
jmp
xchg
imul
aam
jmp
hlt
out
movsb
jmp
outsb
mov
inc
sub
rcrl
jp
outsb
mov
cmpsb
out
ljmp
stos
pop
push
pop
sub
in
jp
add
fwait
xchg
cli
mov
aas
clc
js
push
add
jae
fdiv
add
add
cmpl
cs
inc
mov
das
pop
cltd
mov
push
repnz
and
orb
jno
aad
pop
and
das
jmp
stos
sbb
jecxz
out
rcr
sub
sub
adc
out
sub
mov
jnp
inc
mov
test
mov
mov
int
cmp
push
dec
xchg
pop
add
pop
dec
push
jmp
add
or
pop
dec
cld
push
adc
inc
popa
ret
sub
inc
inc
lods
mov
pop
push
mov
add
inc
jge
push
mov
sbb
add
rcrl
fdivrs
lea
xchg
hlt
adcb
cwtl
and
addl
cmpb
pop
orb
jmp
xchg
inc
mov
sbb
and
and
pop
out
aam
push
push
pop
jge
xor
les
push
call
mov
gs
cmp
fs
add
add
pop
neg
add
add
cmp
cli
lds
mov
clts
sub
push
push
add
and
add
dec
cmp
call
lock
mov
pop
mov
std
js
dec
lret
mov
sbb
lods
push
aam
pusha
dec
pusha
sub
or
jmp
sub
push
sub
movsb
push
xchg
movsb
adc
out
jne
das
pop
in
ljmp
cmp
ljmp
ja
adc
add
or
mov
adc
lahf
imul
push
sub
inc
loope
sub
imul
mov
xchg
jbe
lret
xor
rcrl
fnstsw
scas
push
pop
mov
out
adcl
je
dec
adc
adc
and
and
dec
imull
lock
add
loopne
xor
add
bnd
mov
dec
mov
ds
mov
jg
test
push
or
mov
lcall
jecxz
push
inc
lahf
push
notb
push
adc
test
add
inc
cmpsb
and
adc
xorb
inc
jle
xchg
inc
sub
dec
push
ret
repnz
mov
jne
mov
nop
outsl
or
sbb
jmp
orb
sub
inc
and
test
mov
gs
mov
loopne
in
sub
std
sbb
and
mov
or
inc
xchg
and
fidivrs
sub
fdivr
xchg
roll
push
dec
mov
xchg
bound
inc
jb
lea
jmp
fmull
add
push
add
or
inc
dec
or
mov
test
lock
xchg
lret
cmpsl
cmp
inc
push
loopne
pop
pop
pop
hlt
adc
scas
rorb
pop
xor
adc
add
scas
xchg
sbb
rcll
push
lcall
push
jbe
mov
push
jae
adc
mov
xchg
or
cmp
stos
scas
ljmp
push
icebp
and
rclb
repz
inc
lret
jmp
sbb
mov
lods
roll
xlat
cli
aad
cli
jecxz
fidivl
mov
test
add
fimuls
sub
nop
stc
mov
pop
mov
and
loop
xchg
xchg
dec
xchg
ljmp
and
or
aam
ret
or
cmp
rol
data16
shlb
push
loope
dec
and
pop
mov
pusha
es
add
fistps
jmp
mov
and
icebp
rcrl
jmp
jne
loop
or
jge
test
sahf
and
imul
mov
out
pop
xlat
dec
mov
lret
add
add
adc
fnsave
orl
pusha
sbb
push
and
popf
jb
orb
push
sbb
jae
ret
aam
pusha
gs
push
mov
push
push
pop
arpl
addb
or
cmp
xorb
jb
lahf
cwtl
addr16
popa
ds
loop
mov
shll
add
jl
jmp
inc
cmc
out
dec
push
mov
and
xor
mov
xor
or
pop
sahf
popf
and
jmp
or
sub
negl
aaa
pop
popf
inc
ret
data16
dec
andb
mov
push
jmp
in
jbe
lock
jb
dec
dec
jmp
out
stos
lahf
xor
mov
ja
loope
jmp
mov
and
icebp
jb
nop
mov
adc
scas
cs
sub
push
jl
mov
pop
leave
or
mov
pop
dec
insl
or
addb
and
mov
push
ret
push
lahf
inc
pop
pop
add
int3
sub
pop
xchg
lock
lods
pop
sub
shlb
xchg
push
dec
lret
add
clc
push
push
xchg
push
js
imul
or
mov
and
sbb
dec
or
push
icebp
sub
cltd
pop
xchg
pusha
test
out
insb
ds
pusha
cmc
push
jmp
push
sbb
sar
lcall
pop
jle
aaa
ds
push
push
push
push
mov
push
or
and
les
mov
shr
xor
nop
dec
in
jmp
mov
adc
mov
sub
push
pop
mov
push
fwait
in
push
dec
push
push
subb
mov
jg
stos
add
cmp
push
or
ja
add
lock
cli
int
cmp
mov
push
pop
mov
fcoms
cmpsb
loope
inc
scas
aaa
ljmp
pop
add
adc
adc
push
arpl
mov
push
ja
mov
mov
sbb
js
les
jge
pop
push
push
addb
pop
cmpsl
jae
xchg
repz
cmp
sbb
and
mov
pcmpeqw
pop
mov
ret
cmpl
nop
and
cli
pop
sbb
popf
int
or
imul
add
dec
sub
mov
cld
push
push
xchg
enter
or
sub
or
sbb
pop
clc
xchg
add
xor
leave
scas
pop
inc
add
pop
mov
adc
subb
int3
or
pop
pop
add
into
in
lock
xchg
shrb
stc
adc
in
and
sar
mov
sbb
pop
pop
orb
dec
push
sub
push
add
pop
dec
sub
add
sub
push
outsb
aas
sbb
mov
hlt
dec
pop
add
negl
cmp
add
sub
jle
cmp
jmp
cmpsb
mov
dec
or
fld
mov
jbe
add
jno
daa
je
inc
mov
and
rcr
in
sbb
sbb
cld
adc
mov
dec
das
roll
push
mov
stc
mov
inc
aad
stos
insl
add
imul
adcl
jns
jg
js
inc
nop
outsl
adc
add
fiaddl
pop
push
add
jmp
xor
add
lods
push
icebp
leave
jb
and
sahf
sub
int
cmp
add
adc
or
mov
enter
add
jne
faddp
jbe
pop
popf
jns
mov
mov
int
sub
aad
push
jle
out
into
lcall
sub
js
add
out
out
mov
mov
insb
jl
pop
sbb
push
cmp
pop
icebp
and
xchg
std
mov
sub
bound
jne
subb
rolb
lret
push
dec
pop
popa
pusha
sbb
subb
mov
add
stos
dec
dec
mov
adc
jmp
add
mov
xchg
add
sub
pop
or
or
add
jg
nop
mov
jl
cmp
xor
push
or
lock
push
lahf
pop
rorb
lret
fisubrl
sub
sbb
inc
ljmp
cmp
in
add
push
xchg
jle
dec
or
push
or
dec
sub
or
fadds
clc
mov
jmp
leave
das
mov
lret
push
dec
int3
dec
dec
cwtl
stos
fistpl
movsb
subb
push
jle
pop
push
add
push
js
push
mov
in
pop
xchg
pop
ljmp
push
dec
push
push
dec
or
push
push
ljmp
adc
ljmp
cmp
loopne
and
aam
es
push
loope
add
stc
sbb
int
xlat
ss
pop
shr
add
cmp
sbb
sbb
cli
jmp
movsl
jge
push
pop
sub
orb
push
mov
movsl
dec
push
frstor
push
pcmpgtb
icebp
add
or
jno
outsb
inc
insb
fildll
imul
add
jp
in
cmpsl
push
push
cs
icebp
adc
nop
daa
jmp
sti
mov
jmp
inc
mov
xor
fistl
sub
roll
mov
pusha
dec
inc
add
or
add
jmp
push
ret
push
push
add
stos
or
das
jmp
mov
pop
aas
jle
mov
push
push
adc
subb
icebp
out
jp
xchg
ss
sbb
jmp
mov
pop
and
add
test
inc
xchg
xor
push
sbb
jecxz
adc
mov
lret
sbb
cmp
add
push
push
sbb
and
add
nop
sbb
mov
adc
std
pusha
pop
pop
out
xlat
mov
jns
lock
js
pop
cmp
pop
sti
or
nop
icebp
mov
in
inc
jae
cmp
sub
cmp
xchg
sbb
and
addr16
leave
test
scas
mov
adc
cmpb
movsl
mov
push
adc
mov
mov
add
shl
jmp
div
jg
shrl
jbe
inc
or
or
add
sub
call
mov
repnz
adc
push
negb
pop
mov
stc
outsb
xor
dec
or
mov
lock
push
mov
push
push
nop
xchg
or
lret
pusha
es
fists
imul
xor
adc
ret
loopne
mov
hlt
imul
sbb
inc
push
jmp
jo
push
jle
cmp
mov
shlb
push
and
cld
jae
push
ret
loopne
jno
adc
icebp
xchg
cmp
addr16
push
sbb
daa
dec
or
int3
mov
inc
lahf
mov
and
jmp
push
pop
pusha
xor
and
and
sub
push
out
call
fmull
pop
aaa
imul
and
push
in
adc
push
push
roll
cwtl
pop
pop
loop
sub
push
cld
inc
pop
int
cld
addb
add
xlat
pusha
loope
popa
sub
adc
lret
lcall
pop
xchg
adcb
mov
xchg
popa
int3
mul
int3
push
cmc
jmp
es
inc
or
jmp
into
add
push
push
addr16
add
push
cltd
sbb
or
popf
pop
push
aaa
xchg
adc
dec
jae
lahf
test
ret
or
jo
mov
cmp
ja
fwait
mov
insb
das
shlb
mov
sub
nop
sbb
outsb
mov
add
cs
or
jmp
lretw
out
int3
stos
rorl
dec
mov
or
addr16
roll
pop
adc
inc
fwait
xor
pop
mov
movsb
jbe
pop
mov
mov
ret
push
mov
and
in
cmp
dec
into
cli
mov
hlt
mov
outsb
lcall
pop
xchg
adc
add
out
sub
mov
cmp
lds
ret
adc
cmp
divb
jp
and
fsubrs
mov
add
adc
add
lea
loop
daa
sbb
push
mov
sbb
imul
xchg
pop
mov
outsl
repnz
stc
dec
adc
scas
fcoml
sub
pop
out
push
push
sub
jae
movsl
fadd
pop
xor
hlt
and
dec
push
jecxz
les
xchg
data16
xor
fidivl
pop
adc
pop
test
mov
pop
xor
sbbb
aas
mov
outsb
inc
js
jl
adc
add
popf
testl
xchg
mov
pop
out
mov
cli
push
cmp
fdivs
lret
repnz
or
mov
jl
sbb
cwtl
add
repz
insl
pusha
lret
js
lds
add
adc
and
repz
inc
xorl
xor
cwtl
shrb
jae
dec
into
test
jg
inc
add
xor
test
wbinvd
repz
jmp
mov
mov
popa
ss
pop
pushl
repnz
mov
dec
sub
jne
xchg
xchg
test
lret
nop
jae
mov
pop
xlat
pop
scas
leave
ja
insb
add
pop
inc
leave
ret
jmp
mov
push
mov
xchg
and
push
inc
inc
mov
enter
xor
or
dec
jmp
mov
mov
test
pop
mov
jg
and
inc
mov
mov
pop
pop
into
jae
inc
mov
lahf
mov
jl
sub
push
inc
dec
xchg
add
jae
fs
pop
roll
incl
mov
and
cs
or
jbe
add
dec
jns
or
in
sub
dec
jmp
faddp
push
and
fiaddl
sbb
scas
inc
push
mov
in
loopne
pushl
inc
cwtl
xchg
or
adc
push
test
notl
xchg
stos
subb
pop
add
mov
add
clc
adc
rcr
test
add
adc
push
int
inc
jae
dec
xchg
or
neg
daa
xlat
push
stos
aaa
adc
add
dec
cmpsb
sub
push
cmp
and
pop
push
xor
ja
in
enter
popf
jno
leave
jbe
adc
xchg
popa
and
or
aam
adc
mov
ret
aas
lods
out
fsubs
push
push
sub
xchg
les
das
sub
ret
cmp
inc
arpl
push
ss
add
mov
popf
sarb
outsl
add
xor
clc
add
stc
pusha
gs
int
fwait
and
pop
and
jg
int3
stos
mov
sbb
add
or
sub
outsb
stc
and
pop
push
xchg
clc
and
dec
push
icebp
xchg
lock
jle
mov
mov
jmp
or
mov
cld
cld
lret
cli
jge
xor
sub
fcmovb
jmp
popa
stc
push
out
cmpb
fidivs
sbb
rorb
and
push
mov
jne
lcall
cmpsb
hlt
push
jp
aas
push
jmp
ljmp
mov
ljmp
mov
xor
int
or
bound
rcll
sbb
push
lods
inc
andl
js
mov
mov
sub
pop
push
lcall
test
bound
mov
xchg
cld
jmp
sub
pop
subps
loop
mov
fstl
xor
lcall
arpl
fld
insl
ret
cmp
stos
addb
jp
pusha
mov
das
pop
xchg
sbb
dec
and
pop
push
push
push
push
cld
dec
mov
push
or
mov
repz
lods
or
adc
pop
push
mov
sub
adc
pop
fldl
sub
add
mov
sub
rclb
das
mov
xchg
jp
push
inc
mov
stos
cmp
ret
les
loopne
cmovbe
push
inc
shlb
fwait
jmp
lea
pushf
adc
mov
add
dec
sahf
sub
jno
and
pop
xchg
push
std
push
mov
loope
stos
dec
and
and
stos
pop
cmp
lahf
mov
push
mov
into
addr16
adcb
int
mov
add
adc
xor
pop
loope
mov
inc
ret
sbb
add
xor
shl
fsubrs
fcoms
or
and
lock
and
xchg
mov
loop
jl
or
push
or
lahf
mulb
dec
cwtl
scas
mov
and
repz
insl
out
sbb
imulb
push
inc
pop
cwtl
in
xor
into
jmp
addr16
jl
mov
cmpsl
mov
lar
sub
lds
out
xchg
cmc
dec
and
decl
adc
add
push
lahf
popf
out
dec
ja
add
loopne
jmp
lahf
mov
dec
dec
mov
ss
jmp
add
pop
in
sub
call
add
hlt
adc
mov
add
dec
shr
loop
mov
out
add
and
dec
test
test
je
xor
jnp
ficoml
repz
scas
push
pop
sub
nop
jno
movsl
lock
iret
dec
dec
mov
sbb
or
mull
inc
adc
sub
sub
rcrl
cs
pop
add
xlat
andb
pop
js
xlat
jg
mov
add
jno
push
enter
sub
xlat
cmpsb
xchg
or
pop
sub
mov
in
add
pop
inc
push
mov
dec
repnz
cs
xor
mov
outsb
jp
push
andl
in
inc
decb
jmp
push
cld
or
add
cmp
dec
jns
sub
les
push
mov
xchg
out
enter
pop
pop
add
mov
fstps
jmp
mov
addb
xchg
rolb
adc
nop
xchg
add
ficomps
push
mov
cmp
adc
daa
jcxz
cmp
cmc
ds
sub
pop
icebp
add
popa
cld
inc
add
ja
xor
push
fwait
xor
sarl
sub
inc
adc
push
xor
add
push
lcall
add
jecxz
in
aas
les
sbb
int3
mov
inc
dec
jge
dec
jg
xchg
mov
sbb
stc
xor
mov
pop
push
ret
and
inc
fiaddl
push
ret
xchg
xchg
lar
fstp
push
rcll
ljmp
inc
mov
test
mov
push
mov
mov
push
push
repz
loope
into
pop
ljmp
jg
and
sbb
bound
pop
loopne
stc
mov
dec
or
sub
cmp
inc
iret
xor
repnz
cmp
jae
add
jb
push
push
push
fistpll
push
leave
mov
std
jno
push
add
sub
shr
dec
mov
sti
xchg
mov
pand
inc
mov
or
aaa
inc
push
pop
adc
sbb
adc
bound
fsubrs
and
inc
std
mov
test
pop
loopne
pop
jno
imul
cmc
push
call
jmp
cs
dec
inc
xchg
outsl
loope
jg
adc
dec
adcb
xchg
xchg
mov
sbb
sbb
or
cmp
dec
xor
push
push
or
dec
sbb
orb
jno
fmull
movsb
pop
aad
jmp
in
add
pushl
sarl
decb
jg
and
sub
adc
add
hlt
sub
in
fwait
adc
or
repnz
inc
mov
add
push
push
push
pop
daa
cltd
pop
inc
shrl
or
dec
push
mov
in
cs
adc
dec
add
je
push
mov
cwtl
jno
popa
push
sub
ret
lahf
movsl
fs
add
push
lahf
xorb
lods
rcrl
jl
psubsw
jne
bound
jmp
add
or
and
mov
pop
adcl
les
push
push
mov
dec
dec
adc
add
mov
xor
inc
in
adc
jb
xchg
push
addl
jnp
loop
mov
jne
leave
in
pop
adcb
outsl
or
pop
and
cmpsb
add
jge
arpl
push
xor
sub
fwait
sub
jne
mov
or
and
sbb
xor
xchg
pop
mov
mulb
sbb
pushf
xor
adc
cmpsl
adc
or
pop
push
push
push
push
push
loop
push
ret
sub
xchg
add
jle
mov
lahf
in
dec
es
fldt
xchg
jg
hlt
add
push
push
mov
cmp
jl
push
pop
push
mov
jmp
xchg
cmc
movsb
insl
div
sbb
pop
inc
cmc
sub
sbb
imul
mov
scas
mov
test
mov
mov
fs
push
data16
subb
or
jb
es
lods
xchg
jnp
fsubrl
add
fwait
jle
fwait
push
jmp
adc
mov
sub
jo
orl
add
dec
push
neg
xor
in
add
shrb
jp
fs
out
push
jno
int3
push
push
add
cs
icebp
sarl
xor
and
stos
xor
insl
in
pop
sahf
xor
sub
fmulp
pop
stos
mov
xchg
repz
push
mov
or
daa
mov
das
fiadds
pop
mov
mov
cmp
dec
hlt
out
test
dec
mov
es
jmp
addr16
lret
dec
aad
fs
pop
mov
ret
pop
add
add
mov
cltd
popa
or
int3
and
ljmp
mov
dec
movsb
fwait
pop
cmp
mov
test
outsl
scas
add
pop
jb
add
pop
adc
adcl
adc
into
sbb
fists
pop
lret
aam
or
clc
or
mov
jns
pop
push
add
sbb
popa
inc
loope
sub
lods
dec
push
in
xor
or
sahf
outsl
lcall
insl
cwtl
sbb
loope
add
pop
adc
sub
add
gs
add
inc
imul
and
mov
outsl
and
xor
jbe
add
jo
fstpl
scas
loopne
cli
adc
push
rorb
or
insl
rclb
pop
add
jp
jecxz
pop
adc
dec
mov
sbb
neg
nop
and
mov
hlt
ljmp
insl
jmp
xor
xor
dec
sub
pop
ret
inc
mov
sbb
adc
mov
movsl
rep
outsb
inc
stc
ret
jge
pop
add
test
pop
je
into
push
xlat
enter
popf
sub
adc
loope
insb
adc
mov
xchg
into
push
push
sub
and
stos
push
aad
xchg
jle
aaa
adc
sbb
filds
sub
mov
repz
test
push
push
repnz
dec
js
fidivrs
jg
imul
push
and
push
or
hlt
ljmp
push
dec
fdivs
push
xchg
out
sbb
repz
enter
jecxz
jp
push
mov
aad
mov
pop
xchg
dec
pop
insb
and
repz
mov
inc
and
jo
outsb
and
jl
sub
scas
add
imul
push
cmp
xchg
dec
xor
and
jno
pop
push
cmc
pop
jmp
dec
hlt
in
loop
lock
xchg
push
mov
outsb
out
jns
dec
jmp
sbb
pop
sbb
mov
xor
mov
std
xorl
mov
push
cmc
mov
mov
xor
ss
lods
pop
sbb
insb
mov
out
pusha
cld
enter
sbb
mov
addl
pop
pop
push
pusha
xchg
inc
cmp
adc
out
adc
out
shr
adc
lods
nop
pop
mov
test
mov
jnp
cwtl
jo
cmc
add
stc
jns
clc
sti
pop
sub
loopne
aam
ret
pop
dec
push
and
fnstcw
push
dec
dec
mov
orb
sbb
orb
addr16
inc
jge
stos
fs
ljmp
adc
test
xchg
sub
lods
pop
and
shlb
int
push
orl
push
pop
movsb
add
test
add
push
mov
add
or
adc
jo
fidivs
or
fs
in
stos
or
push
stos
ret
or
dec
xor
pusha
xor
push
xchg
push
sbb
mov
gs
mov
add
xor
sub
cmp
out
add
stos
add
adc
sub
das
repnz
push
mov
ljmp
and
and
mov
loopne
loop
je
add
add
add
movsl
adc
outsb
mov
inc
push
mov
add
ja
push
xor
jmp
sub
add
xor
sub
xor
or
pop
testl
mov
push
pop
pop
sbb
xor
adc
jae
fidivl
scas
sub
jnp
mov
push
ret
or
sahf
pop
sbb
xchg
pusha
pop
out
push
sbb
rol
stc
outsl
das
add
and
cmp
jmp
pop
dec
loope
push
or
loop
jns
mov
or
or
mov
clc
jmp
dec
adc
push
cs
in
les
xor
adc
movsb
stos
orl
dec
pop
cmp
add
mov
xor
gs
push
jge
add
and
add
fs
fiaddl
sbb
imul
or
xchg
mov
jmp
subl
push
sub
sbb
cmpl
jo
pop
sub
jmp
pop
push
push
pop
fdivs
xchg
or
xlat
stc
push
outsb
lret
imul
jg
jno
mov
cmovb
aas
les
adc
pop
fnstcw
lret
xor
jns
mov
xor
lahf
sbb
insl
pop
push
cli
fsubr
dec
inc
outsl
pop
xchg
xchg
push
or
sub
pop
adc
add
xchg
mov
dec
popa
adcb
adc
mov
cwtl
xchg
sub
frstor
or
add
aaa
bound
add
cmp
add
xchg
sub
adc
xchg
rorl
cltd
pop
xchg
lods
dec
mov
scas
cwtl
stos
push
or
fnstsw
inc
xchg
pop
inc
inc
js
adc
push
int
imul
arpl
das
inc
iret
fildl
rcrl
cmp
outsb
xor
int3
mov
mov
in
int3
and
out
enter
mov
sub
xchg
jne
mov
sbb
jne
dec
aad
mov
clc
xor
jle
adc
mov
and
jmp
and
mov
lods
mov
neg
xor
jle
fimuls
jo
sub
xor
pop
xchg
repnz
clc
pop
pop
dec
xorb
sub
cli
inc
rcrb
cmp
lods
pop
mov
xchg
add
andl
dec
xchg
jae
cmpsb
mov
out
cmp
idiv
push
repz
cld
stc
xor
scas
adc
or
insl
xchg
xor
stos
fsubr
rorl
dec
jns
icebp
outsl
cmpsb
jo
or
mov
sub
cmp
push
mov
and
in
adc
xchg
cmp
adc
cmpsl
mov
aam
and
fneni(8087
jg
jne
xor
out
hlt
pop
mov
push
shrl
or
jmp
dec
std
add
dec
inc
adc
and
jb
cmp
push
insb
dec
inc
cmp
add
out
jno
mov
test
addl
or
in
loop
pop
jo
fucom
in
mov
outsb
sti
push
fst
or
push
mov
negb
loop
cwtl
xchg
loopne
sub
aas
aad
jmp
adc
xchg
pop
xchg
call
xor
pop
push
push
xorb
test
mov
jbe
jl
adc
push
stc
mov
cmpsb
mov
xor
mov
sub
aas
or
std
aaa
adc
push
ret
pop
cmp
adc
popf
and
lret
cmp
push
rclb
ljmp
pop
mov
fwait
and
cmp
dec
rcrb
aam
movsl
dec
scas
sbb
inc
and
push
popf
mov
hlt
mov
and
add
pop
mov
mov
out
push
pop
and
inc
jecxz
dec
pop
scas
nop
dec
and
mov
iret
lret
aas
mov
sbbb
pop
jmp
scas
cltd
pop
mov
pop
fdivrs
imul
in
mov
rclb
test
lea
sbbb
push
xor
in
inc
test
mov
mov
push
cwtl
jp
movzwl
push
roll
xor
aas
cmpl
xchg
jg
push
fs
mov
cmpsl
in
movsl
jg
out
call
add
sarb
push
jbe
or
fnstcw
loope
aas
movsb
or
xchg
jp
cmovne
add
cmc
or
jmp
push
pop
ljmp
lcallw
loopne
and
xor
movsb
add
add
sub
pop
sub
push
push
mov
lret
icebp
jnp
pop
or
imul
test
cmp
cwtl
jbe
mov
inc
mov
fsts
jecxz
adc
xor
mov
test
pop
pop
mov
cld
rorb
adc
popa
into
fadds
mov
xor
mov
fsts
pop
mov
faddl
loope
xor
rolb
or
call
sahf
iret
adc
scas
cmpsb
jb
out
adc
mov
cmc
pop
pop
cmpsb
mov
jmp
xchg
mov
in
sarl
cltd
imul
add
das
insb
sub
mov
enter
pop
jecxz
pusha
pop
sub
add
cmp
xor
pop
jle
lods
clc
jl
arpl
das
pop
mov
mov
addl
clc
mov
bnd
lock
cs
push
jl
push
sbb
add
add
push
pop
add
arpl
and
sub
stos
jp
cmpb
sub
jp
inc
shrl
sub
and
jne
sub
adc
inc
in
xchg
cld
out
jmp
cli
lods
pusha
in
add
sub
inc
std
in
loope
inc
or
pop
and
popa
add
dec
test
or
aam
pop
dec
sub
ss
leave
add
xchg
mov
shrl
adc
jecxz
sbbb
fistpll
mov
mov
loop
sbb
adc
inc
test
or
popf
sbb
push
or
loopne
ficompl
add
pop
rclb
add
cld
mov
add
sbb
enter
sub
imul
cli
xlat
pop
jo
cmp
adc
pop
stos
sub
jmp
and
shrb
adc
andb
std
mov
xchg
and
push
add
imul
mov
testb
mov
stos
jne
pop
inc
jbe
cwtl
mov
pop
or
push
in
add
test
xchg
mov
pop
out
test
mov
push
mov
pop
ret
mov
pop
das
cmc
jl
roll
add
sub
sub
pop
or
jmp
jbe
pop
add
insb
pop
popa
jns
cld
popa
sbb
aad
ds
lcall
inc
fs
clc
cld
mov
nop
xor
mov
shlb
mov
gs
add
pop
mov
lret
cmpsb
or
add
aam
push
mov
jmp
sub
cmp
push
aas
scas
pop
mov
addb
nop
xor
push
xor
jg
jle
pop
shlb
mov
in
pushw
cld
adc
cltd
xor
jbe
inc
outsb
jns
outsl
inc
scas
inc
sub
dec
push
inc
cli
or
pop
xchg
mov
outsl
stc
inc
pop
lret
push
sub
push
pop
jmp
push
test
and
fistl
cmp
jbe
inc
shl
andb
aad
mov
jnp
pop
sub
clc
gs
or
push
sbb
mov
out
fiadds
or
push
orl
data16
inc
dec
int3
bound
stos
xchg
fsubrl
arpl
mov
and
shl
push
push
dec
stos
mov
fcmovu
lret
or
or
sbb
stos
imul
pop
cli
mov
imul
outsb
mov
lcall
add
ficoms
vpsubd
repz
sbb
adcb
aas
cmp
cli
pop
ror
out
subb
pop
xlat
in
jmp
mov
arpl
sbb
dec
jnp
gs
fstl
lods
or
xor
test
lcall
jnp
jbe
pop
imul
adc
loopne
and
loop
xchg
cwtl
leave
inc
outsb
pusha
pusha
lcall
repnz
pop
sbb
jmp
push
pop
addr16
push
push
push
pop
sbb
or
jo
push
cli
addr16
mov
xchg
iret
xchg
lock
loopne
cmp
cmp
cwtl
adc
and
mov
lret
insl
mov
pop
push
imul
nop
ljmp
push
xor
add
fld
jmp
or
xchg
sub
jne
cmp
and
jle
clc
dec
cmp
pushf
jo
xchg
push
mov
inc
ss
loopnew
notb
cmpl
roll
and
or
test
pop
mov
das
jno
shl
mov
shl
sahf
pop
sbb
xchg
neg
loopne
ds
mov
mov
lds
sbb
add
rorb
aas
fcomps
push
loop
shlb
xor
push
std
bound
insb
fistpl
sub
adcb
add
push
imul
push
jl
iret
movsb
sti
movsb
cmp
pop
sub
mov
and
dec
push
jnp
push
out
or
cltd
dec
or
or
dec
roll
dec
xchg
rclb
les
loopne
call
faddl
adc
scas
and
cmp
jle
pop
and
leave
push
subb
jne
sbbb
outsb
popf
dec
in
insl
mov
sub
sub
xor
imul
jnp
sub
enter
fstpt
ret
adcl
xchg
out
add
and
dec
cmp
imul
in
mov
arpl
adc
pop
shr
jl
sub
mov
scas
add
and
mov
adc
and
insl
imul
outsl
pop
es
push
push
pop
push
or
push
sbb
or
loop
fbld
shlb
hlt
sub
cmp
movsb
or
lock
adc
or
jmp
pop
iret
pop
pop
mov
jl
mov
lea
or
pop
pushf
pop
push
add
daa
dec
pop
or
cmp
adc
push
sub
dec
jl
enter
std
inc
mov
jmp
sub
pop
pop
not
inc
jmp
notb
insb
mov
shll
repnz
and
loope
outsb
call
pop
sbb
push
daa
fdivl
push
xchg
xchg
jbe
bound
push
pop
pop
outsb
repnz
icebp
outsb
stc
iret
mov
ficoml
mov
cmp
xchg
jmp
popf
jno
imul
dec
jb
sub
or
pop
add
mov
xor
add
pop
or
push
mov
jle
and
and
adc
jp
cwtl
xor
add
lods
cmp
xchg
movsb
jecxz
adc
push
inc
mov
pusha
mov
sub
pop
fadds
dec
addl
inc
or
fisubl
push
adc
arpl
adc
outsl
icebp
xchg
xor
pusha
sub
rorb
pop
and
mov
push
inc
xor
jo
cwtl
push
sub
dec
dec
and
push
andb
sbb
add
fstl
pop
push
xchg
lcall
or
imul
out
add
add
arpl
pop
jmp
push
mov
sbbb
sub
add
pop
decl
call
out
dec
cmp
ret
pop
rolb
push
jae
sub
mov
lds
imul
or
inc
test
in
adc
les
mov
add
add
or
mov
add
adc
adc
xchg
out
rclb
rorl
mov
sbb
xor
sbb
pop
and
xchg
in
jnp
rcrl
mov
push
dec
pop
xor
push
sub
jmp
mov
js
pop
push
addb
lcall
add
jle
call
and
adc
jbe
push
stos
add
je
push
jne
cmp
popa
test
push
add
push
sub
fldenv
add
push
sti
and
pop
negl
add
jmp
test
pop
paddd
push
sub
and
xorb
jo
and
add
jae
xchg
sbb
movsl
mov
dec
loopne
jbe
inc
andb
and
jmp
push
cmpsl
jecxz
or
aas
je
xchg
das
pop
dec
imulb
data16
pop
ja
pop
sub
out
pop
or
sub
cld
pop
lods
out
push
push
mov
sbb
xor
jmp
cmpsb
sub
pushf
test
pop
rolb
mov
dec
cmpl
push
popf
sbb
add
or
into
sahf
daa
dec
mov
jmp
inc
jecxz
jae
cld
mov
cmp
dec
add
or
jns
add
clc
in
out
or
pop
jmp
std
mov
lods
js
daa
or
jae
or
jmp
cmp
mov
jns
lret
loop
out
shrl
lcall
push
xor
dec
lahf
push
inc
or
dec
pop
cld
dec
mov
in
push
push
rcll
push
icebp
dec
mov
std
arpl
in
jmp
mov
dec
daa
push
xchg
lea
sbb
shl
loop
or
fimull
mov
nop
mull
pop
xchg
fmull
pop
in
inc
and
sbb
push
imul
push
data16
or
loope
fwait
sub
xor
ljmp
or
jmp
push
popa
loopne
mov
stos
sbb
lret
in
jge
in
sub
test
in
aaa
pop
imul
inc
mov
ljmp
xor
adc
ret
fsubrl
pop
add
inc
or
jmp
jo
enter
sub
mov
les
test
mov
jmp
or
inc
or
loope
cmp
jmp
sub
ret
push
xchg
loopne
aad
or
je
ss
add
fcoms
mov
mul
dec
pop
xor
push
fisubrs
xor
inc
hlt
inc
dec
icebp
dec
int
mov
pop
xor
popa
imul
test
movsb
push
enter
jmp
add
jnp
sub
mov
dec
mov
bound
xor
test
sti
mov
mov
push
mov
outsb
xchg
js
cmpsb
dec
fs
fnstsw
push
jmp
xlat
int3
enter
add
out
outsl
push
push
jo
test
or
mov
hlt
lods
js
pop
dec
fildll
push
jmp
pop
loopne
imul
aaa
sub
jmp
subb
pop
sahf
mov
add
push
call
or
fiadds
dec
push
mov
jae
adcb
push
cmp
xchg
cmp
pop
xchg
mov
lock
insl
and
dec
nop
ret
push
cld
inc
push
push
mov
xchg
jo
add
popa
jmp
lcall
ret
jb
pop
jg
or
xorb
je
jle
jb
rcll
jmp
leave
insl
push
iret
and
jne
shrl
and
call
inc
pop
jns
mov
rcrl
sub
adc
in
mov
or
clc
pop
jnp
data16
xor
icebp
enter
inc
sar
push
push
insl
push
xchg
pop
fcomps
mov
mov
mov
rcrb
sbb
or
outsl
mov
dec
ret
push
xchg
xor
pushf
pop
shl
enter
add
push
ud2
movsb
xchg
inc
stos
inc
adc
push
rcll
jmp
les
stos
lcall
add
out
or
dec
scas
adcl
add
aaa
sbb
jbe,pt
mov
pop
jne
idivl
aas
pop
stos
loopne
mov
sti
mov
pop
push
out
push
test
movsb
or
mov
insl
and
sub
pop
pop
dec
or
jno
orb
push
jne
daa
lret
lods
cmp
add
andb
es
push
pop
pop
sarb
out
or
inc
dec
push
cmp
ffree
jae
add
xchg
ds
pop
sbb
lea
dec
lahf
jnp
mov
out
pusha
scas
out
out
add
lock
sub
add
mov
in
shll
pushf
jns
add
cmovnp
cmp
adc
aad
jb
fidivl
popf
clc
stos
dec
in
xchg
jle
or
sub
push
cmp
enter
in
jp
clc
sub
hlt
out
add
imul
xor
push
inc
and
shl
fldl
je
std
fcom
loopne
push
rclb
movsl
repnz
out
pop
in
sub
pop
inc
mov
jne
xchg
pop
in
out
outsb
mov
rorb
pop
pop
xchg
aam
pusha
and
jmp
push
add
and
inc
in
push
add
aaa
sbb
imulb
call
cmp
inc
and
add
push
inc
or
adc
push
xor
lcall
in
shrl
sbb
push
ret
mov
or
and
pop
cmp
int
add
mov
xchg
mov
push
add
cmp
mov
mov
inc
ds
pop
sbb
xchg
or
out
mov
jmp
call
test
fdivrs
inc
insl
pop
daa
add
fmull
pop
push
ja
sahf
inc
pop
out
out
xchg
mov
and
hlt
sub
fwait
add
jne
fs
or
mov
mov
sub
test
les
mov
ret
ds
sbb
or
testl
sub
cwtl
lea
adc
jne
mov
repz
inc
cmpsl
scas
push
push
bound
mov
clc
or
les
mov
mov
cs
pushf
xor
jno
push
add
xchg
or
aad
pop
inc
out
jae
fsubl
add
sbb
dec
xor
rol
push
adc
add
addl
inc
push
or
stos
je
sbb
je
rcrb
jl
pop
stos
dec
scas
pushf
fnstcw
icebp
sbb
push
mov
pop
adc
and
lds
dec
dec
enter
dec
dec
push
lods
push
jp
or
sbb
sub
ret
out
add
outsl
mov
insb
xor
jo
jmp
add
mov
mov
mov
aas
rcrl
xchg
sub
mov
cwtl
sub
mov
inc
push
rorl
sahf
clc
xchg
pop
rcrl
cmp
sub
mov
pop
dec
imul
xor
sub
inc
leave
add
jmp
test
gs
pop
pop
cwtl
out
push
mov
lret
dec
stos
push
in
inc
mov
mov
or
fucomp
sub
jne
jae
jmp
push
sbb
add
cli
enter
fiaddl
cmp
repz
pop
and
push
movsl
in
repnz
stos
loop
in
cmp
movsl
inc
imul
cmp
push
stc
inc
add
or
mov
lret
in
lock
pusha
adc
cltd
sbb
and
repnz
divb
jle
adc
out
and
add
fists
pop
fmuls
or
test
xchg
cmp
not
push
push
pop
mov
dec
js
in
gs
mov
roll
stc
pop
std
dec
aas
ror
call
xlat
sbb
add
jp
push
imul
pop
push
dec
data16
push
push
or
pop
mov
les
call
push
and
mov
pop
mov
adc
aas
adc
mov
repnz
jne
add
add
xor
or
aad
test
cmpsl
and
jecxz
ret
inc
dec
es
loope
cld
in
jae
push
pop
push
scas
dec
xchg
data16
xor
pop
lock
jmp
loope
cmpsb
push
sbb
or
imul
xchg
jns
push
out
jno
inc
pop
dec
pop
jmp
das
mov
jp
inc
xor
imul
xlat
insl
ja
sub
lret
insl
jnp
stc
out
mov
and
icebp
fldenv
arpl
loop
idiv
dec
mov
add
cmp
and
xchg
jbe
xchg
push
jae
mov
dec
pop
pop
or
popa
nop
pop
pop
cs
fdivs
idivb
hlt
dec
dec
mov
sub
daa
lods
dec
sbb
add
outsl
stos
out
sbb
add
xchg
xor
pop
shr
and
pop
jmp
push
mov
std
sub
pop
xor
sub
out
minps
pop
xor
add
inc
or
lods
cmovs
leave
xchg
or
or
das
inc
cmp
addr16
sarb
or
or
imull
repnz
insb
and
rcl
cld
into
or
jl
inc
cmp
out
jge
fs
add
pop
xlat
pop
sbb
jmp
add
push
pushf
inc
mov
cmp
sub
loop
push
pop
inc
rorb
outsb
or
cltd
insb
sub
jmp
sar
fs
int
insl
cli
mov
ret
jne
lock
push
jecxz
incb
dec
pushf
push
mov
lods
in
mov
and
push
das
cmpsl
xchg
cmc
nop
popa
leave
aas
andb
ljmp
adc
insl
mov
sbb
in
int3
jle
repnz
aas
mov
xchg
xchg
inc
filds
test
inc
sub
inc
jecxz
call
push
push
ljmp
outsl
imull
or
pop
inc
jp
dec
add
push
dec
dec
add
jmp
cld
out
or
testl
lods
insl
bound
jge
inc
std
and
sub
jp
pop
add
push
xor
testl
push
jle
pop
rcrl
and
daa
xchg
jne
xchg
imul
ja
jg
fsts
sbb
push
sbb
jb
popa
inc
insb
das
and
sub
ljmp
clc
add
je
add
cs
pusha
push
jmp
mov
jb
xchg
dec
rcr
popf
icebp
add
jmp
imul
inc
pop
aad
xchg
testl
js
ror
push
push
xor
es
jo
add
lock
xlat
mov
jb
pop
or
inc
dec
test
je
adc
addr16
dec
push
adc
mov
sbb
sub
inc
mov
push
cli
inc
test
xchg
insb
and
push
out
popfw
stc
jno
call
xor
inc
jge
cmp
rorl
icebp
ja
or
jg
xchg
jl
and
test
or
push
icebp
hlt
inc
and
and
mov
jmp
leave
push
pop
xchg
loope
clc
pop
pop
sub
mov
das
js
pop
add
daa
mov
and
jne
cltd
add
add
inc
sub
push
stos
jp
jg
imul
xor
jbe
ficoms
ret
inc
mov
orb
insb
dec
add
adc
stc
lret
dec
stos
popl
and
and
dec
mov
lcall
push
ljmp
subb
out
push
jo
pusha
add
jge
int3
ljmp
andl
xor
sub
mov
mov
lret
mov
roll
subb
hlt
mov
push
sarl
mov
lea
adc
neg
fadds
push
xchg
add
je
incb
pop
stos
push
dec
push
int3
or
mov
push
or
orb
enter
add
xchg
fnstsw
mov
push
xchg
xor
and
sbb
je
dec
inc
std
imul
add
fs
or
add
or
cmp
and
aas
push
push
or
into
adc
or
ja
test
push
je
cltd
xchg
add
push
add
or
jl
add
sarb
or
ds
pop
lods
mov
push
in
mov
lahf
in
dec
adc
aaa
mov
adc
fwait
adc
sub
decb
sbb
xchg
stc
jne
mov
das
mov
pop
jg
incb
aad
out
adc
adc
mov
xchg
pop
pop
shlb
and
jecxz
out
and
push
loope
and
mov
repz
dec
mov
mov
or
imul
dec
adc
push
adc
adc
int
mov
inc
and
inc
daa
sub
movsb
pop
push
or
add
aam
jmp
ret
jne
in
pop
inc
jnp
fucom
push
xor
test
dec
roll
arpl
testb
loop
pop
scas
pop
or
xchg
cmpsb
pop
pusha
xor
shl
inc
stos
les
push
push
jmp
aas
sahf
lret
adc
pop
pop
aad
and
fnsave
or
mov
lcall
jmp
push
mov
cs
inc
inc
dec
cmp
pop
aaa
jmp
icebp
in
lods
arpl
or
pop
dec
fdiv
lahf
lock
jb
and
adc
ret
pop
xor
cmpsl
ds
test
cli
pop
add
jmp
or
push
pop
inc
jle
or
inc
std
stos
loop
vpsrlq
mov
and
push
lock
test
push
cmp
xlat
dec
stc
pop
sub
xchg
cmpb
or
sub
hlt
or
xchg
cmp
pop
add
leave
outsb
es
sbb
std
ret
adc
stc
pop
mov
adcb
sub
push
lods
loope
add
jmp
push
outsl
adc
lahf
jp
adc
insl
mov
js
bound
dec
movsb
orb
inc
push
xchg
xor
inc
mov
adc
sub
rcrl
lods
or
sub
movsl
jg
xor
test
aad
mov
loopne
test
inc
jmp
mov
sub
int
cmp
or
clc
fildl
cmp
mov
mov
dec
sub
rclb
pop
mov
insb
mov
adc
push
enter
mov
insl
gs
pushf
push
jp
shrb
es
adc
add
push
fs
nop
sub
mov
add
pusha
mov
jecxz
xor
inc
stc
sub
imul
out
ljmp
or
into
repz
or
cmp
insl
xorb
mov
or
jecxz
cmp
insl
inc
xor
and
adc
in
outsb
inc
out
mov
mov
cli
push
sub
enter
adcb
sub
mov
rcrb
loope
or
dec
push
jmp
dec
pop
mov
jno
neg
jecxz
jns
sub
aam
or
pop
pusha
and
pop
push
mov
fists
sti
mov
nop
lods
inc
xor
cmpl
pop
arpl
outsl
push
jmp
inc
shr
or
loopne
inc
iret
mov
insl
jge
push
cld
push
or
inc
push
push
add
in
loopne
push
cli
mov
call
cli
lret
repnz
stos
xor
data16
int3
leave
and
sbb
mov
cwtl
inc
out
xchg
std
pushf
xchg
jmp
xchg
or
sub
mov
das
or
pusha
sub
out
bswap
xchg
and
sbb
jge
inc
or
or
push
push
push
clc
cmpsb
inc
xchg
sbb
pop
push
pop
jbe
or
add
inc
test
loope
xor
push
in
les
cmpb
sub
scas
jg
cmp
or
add
adc
vmread
push
leave
sbb
inc
sub
mov
sub
dec
adc
adc
xor
pop
and
dec
in
cli
cmp
cmp
push
jnp
in
cs
mov
jno
sbb
test
jmp
les
stos
clc
and
cltd
lock
xchg
out
adc
cmp
adc
or
push
in
adc
jb
sti
inc
or
pusha
sub
mov
xchg
or
add
add
cmc
cmp
dec
xor
pop
mov
xorb
mov
loope
dec
je
add
and
add
insb
daa
xor
cmp
iret
push
dec
push
or
push
test
das
out
pusha
mov
push
test
inc
sbb
pop
inc
fmul
repz
mov
jmp
jmp
lahf
pop
cltd
and
inc
sbb
ljmp
pop
jge
sub
lods
mov
cmp
jae
nop
lahf
and
add
das
aad
sbb
mov
lahf
mov
mov
cmp
inc
sub
dec
loope
sub
pop
fs
xchg
pop
sub
cmp
adc
sbb
mov
frstor
add
inc
pop
in
add
sub
repnz
or
ret
mov
lret
pop
xor
gs
clc
popa
imul
pop
scas
cmc
or
scas
push
pop
sub
loope
mov
adc
rorb
sub
add
cmp
add
loopne
xor
test
mov
shlb
lea
pop
stc
cmpsb
fstpt
addl
inc
idiv
xchg
subb
fs
jle
or
add
jno
dec
dec
ja
repnz
stc
dec
mov
pop
clc
stos
mov
jp
in
add
xor
das
mov
add
and
sti
shll
ret
dec
dec
push
push
pop
pop
dec
or
loop
jg
ds
jge
sbbl
push
scas
sub
inc
cmpsl
loop
mov
mov
cmp
outsl
pop
push
out
jae
sbb
xor
in
orl
cs
sbb
ljmp
sub
or
xchg
inc
pop
cmp
hlt
pop
inc
mov
xchg
jb
jecxz
imul
xor
push
gs
pop
xor
loop
mov
jmp
aad
or
inc
js
push
outsb
shll
xor
add
push
xor
out
hlt
xlat
pop
pop
xchg
jecxz
imul
aam
shr
add
ljmp
shlw
in
int
jns
dec
inc
jecxz
test
int3
push
popa
pop
cs
mov
fistl
pop
mov
push
pop
pop
and
jg
xchg
add
idiv
test
adc
jno
cld
pop
sub
popf
adc
outsb
pop
rclb
cmc
dec
jb
hlt
and
and
pusha
sbb
insl
add
or
sahf
loopne
sbb
ljmp
pop
inc
out
pop
jl
fimuls
push
sub
or
xchg
jno
adcb
inc
fcompl
popf
popa
sub
mov
xlat
adc
pop
es
cs
sub
dec
repz
xchg
and
xor
outsl
add
or
cmpsl
push
aam
push
movl
or
jle
jmp
jge
outsl
mov
pop
cs
outsb
xchg
mov
mov
pop
push
jbe
and
aaa
adc
add
iret
push
add
sbb
pop
xchg
and
cli
out
imul
inc
cmp
and
call
and
imul
je
mov
xor
push
push
mov
dec
stos
iret
push
sub
mov
jns
addl
xchg
dec
jmp
push
sub
pop
in
and
repnz
cmpsl
mov
jae
stos
ds
inc
xchg
mov
fs
fistps
in
icebp
ljmp
arpl
das
xchg
and
or
xlat
push
jmp
sbb
add
pop
icebp
in
add
add
pop
out
scas
add
mov
add
pop
test
sub
cmpl
add
lea
jl
xchg
lcall
push
or
mov
mov
aad
add
push
insb
mov
pop
int3
scas
je
arpl
push
and
sbb
sub
push
lds
cmpsb
cmp
cmp
test
jne
in
mov
cmpsl
pop
addr16
pop
stc
add
xor
mov
inc
mov
jg
and
sub
sub
add
xor
push
lea
fists
std
cld
lds
mov
and
push
dec
addb
push
cmpl
mov
xchg
add
inc
ja
not
push
and
or
push
pop
add
sti
mov
adc
pop
mov
mov
out
push
rclb
mov
pop
mov
add
sbbl
mov
into
dec
and
aaa
fidivrl
xchg
dec
pop
and
mov
dec
sub
jns
and
bound
cmp
mov
repnz
dec
jns
ljmp
pop
pop
icebp
scas
bound
sub
inc
push
mov
cld
xchg
adcb
push
xor
ja
mov
adc
out
inc
inc
adc
cld
sub
mov
or
movsl
movsl
mov
stos
dec
sbb
loopne
sub
sbbl
aaa
add
xor
xchg
les
dec
jnp
xor
shl
addb
std
mov
fimuls
jp
mov
add
add
test
arpl
jnp
fs
mov
outsl
xchg
aad
sbb
loop
sub
jge
cld
sti
popf
add
mov
sbb
adc
mov
or
adc
cmpsl
push
xchg
jbe
xchg
call
dec
in
scas
adc
jl
aad
stos
lock
addb
rcrb
jmp
in
xchg
mov
push
add
or
push
bound
pusha
int3
sub
add
cmp
cmpsb
pushl
sbb
iret
add
cmpsb
es
inc
jno
sbb
imul
dec
add
test
shl
sub
push
pop
pushf
jmp
jo
xor
nop
stos
mov
in
add
loopne
push
les
mov
pop
ljmp
adc
bound
pop
push
in
jmp
push
das
jmp
or
sub
cs
in
inc
mov
popa
inc
push
mov
adc
mov
jo
xor
loop
push
adc
lds
mov
sti
cld
mov
push
xor
jae
push
push
cltd
popl
dec
es
xor
sar
fwait
aad
mov
mov
sbb
mov
out
lret
scas
addr16
mov
insl
push
rcrl
adc
mov
aam
jmp
cld
inc
pop
test
cltd
and
neg
adc
nop
sbb
xor
sub
fcomps
or
fldcw
dec
push
sarl
and
dec
mov
push
ret
cmp
mov
jmp
jcxz
hlt
push
addb
pusha
int3
jnp
or
sub
inc
dec
sub
push
push
or
fdivl
xor
push
add
or
call
push
cmp
xor
push
mov
cmp
loop
pushl
mov
js
and
stos
lock
mov
enter
xchg
jno
imul
test
cmpsl
adc
and
mov
ljmp
cli
sub
push
scas
mov
mov
pop
xor
jecxz
subb
std
nop
inc
sbb
mov
push
es
mov
and
jb
sub
loopne
or
or
rolb
push
sbbb
or
call
jo
cs
dec
sub
jbe
pushf
loop
pop
loop
test
ljmp
dec
call
xchg
mov
das
jmp
sahf
adc
dec
push
push
jecxz
dec
xchg
mov
jmp
inc
add
push
shlb
sahf
outsl
dec
xor
es
cmp
into
adc
dec
inc
test
adc
iret
inc
test
std
dec
inc
push
dec
mov
sahf
mov
add
push
stos
enter
rclb
hlt
or
or
pop
pop
inc
xchg
iret
pop
push
adc
add
mov
push
shr
mov
sbb
push
push
jmp
aas
sub
inc
clc
repnz
imul
movsl
mov
jnp
adc
mov
lcall
aam
push
das
mov
nop
lahf
int
adc
shrl
or
or
inc
mov
inc
mov
push
mov
pop
stos
cmp
jmp
xchg
push
ja
pop
push
dec
or
push
enter
add
xlat
scas
push
call
stos
pop
mov
add
push
jnp
adc
decb
rcl
jle
inc
dec
mov
ss
mov
add
dec
xchg
ja
int
sub
push
cs
ljmp
and
pusha
xchg
push
ja
add
hlt
lods
sub
pop
jmp
push
adc
dec
pop
pop
sub
sbb
int
loopne
inc
mov
sbb
loopne
shlb
cld
ret
inc
pop
cld
pop
movsb
xchg
lahf
mov
ds
insb
jmp
adc
in
sbb
daa
fldl
repnz
sbb
inc
hlt
xorl
ljmp
aas
pusha
jb
cmp
mov
jne
dec
fiadds
and
lods
xchg
jmp
pop
sub
je
pop
adc
jb
dec
mov
ret
call
mov
and
inc
xlat
and
push
xchg
mov
ja
dec
adc
xor
inc
ljmp
pop
das
cmp
jmp
ljmp
lret
jmp
xor
inc
cmp
adc
gs
push
pop
outsb
popf
inc
push
inc
mov
shl
and
aaa
sub
dec
jg
fdivrl
xchg
js
lret
test
lods
sub
cld
jp
and
cmp
push
mov
arpl
insl
or
ficomps
or
sbb
push
sub
push
jl
pop
rorl
jne
pop
cmp
sbb
insl
testb
das
jge
jge
test
aaa
dec
jmp
mov
es
push
fadds
fnsave
addl
jp
push
add
and
aas
jmp
mov
jp
xchg
decl
dec
add
inc
mov
fstl
or
outsb
pop
add
int
push
repz
push
out
push
aaa
sbbb
sarb
dec
xor
jbe
mov
mov
cmc
push
scas
xchg
les
adc
ljmp
inc
push
out
shl
mov
xchg
xchg
pop
stos
mov
mov
mov
mov
loop
ret
mov
scas
cltd
mov
daa
add
push
jp
orb
pop
pushf
dec
test
cmp
pop
jnp
inc
test
lock
sub
dec
xor
or
jb
xor
popf
pusha
js
add
mov
stc
sti
mov
jo
mov
insl
subb
mov
bound
arpl
push
mov
or
lahf
push
or
outsl
add
jg
loope
dec
push
pop
push
jbe
cwtl
jo
es
add
jmp
out
test
mov
jns
shll
leave
push
sbb
add
and
jecxz
cmp
into
fistl
mov
and
jb
sarl
and
frstor
mov
xorl
mov
hlt
xor
push
xor
clc
pusha
insb
pop
call
add
scas
push
push
ret
nop
fdivs
jecxz
or
push
insb
ss
sbb
push
insl
add
jmp
arpl
push
sub
icebp
adc
push
outsb
xor
shl
adc
dec
jo
pop
loope
inc
push
xor
testl
push
push
push
imul
push
jbe
divl
jmp
cmp
dec
aas
test
in
ljmp
clc
ss
cwtl
mov
dec
adc
sub
ficompl
sub
out
das
mov
and
out
popa
xchg
dec
inc
popl
dec
imul
das
mov
jnp
fsubr
pop
lcall
or
leave
fdivrl
aad
stos
ret
xor
fadds
xchg
mov
add
imul
insb
je
add
lmsw
mov
jle
lods
pop
mov
jmp
push
jmp
ja
cmp
pop
push
mov
dec
inc
dec
iret
insl
dec
clc
fbld
pop
scas
adc
pop
and
jp
scas
xchg
mov
xchg
mov
insl
mov
ss
loop
mov
dec
js
dec
mov
lods
bound
shl
mov
cmp
fsubr
xor
ja
lret
sub
push
das
int
jmp
add
lods
push
hlt
in
fs
dec
dec
test
clc
inc
pop
jnp
mov
add
pushf
lcall
sub
mov
jb
in
jne
loopne
call
cwtl
xor
pop
cmp
stos
popf
adc
movsl
sbb
shr
add
add
cli
sub
sti
loope
movsl
stos
sub
jl
pop
add
pop
inc
push
pop
fiaddl
aad
inc
pop
inc
adc
pop
addl
pop
adc
adc
mov
addl
sbb
fistpl
mov
adc
xchg
mov
dec
add
xor
sahf
stos
xchg
xchg
and
icebp
xchg
cmp
and
sbb
adc
out
aaa
orl
loopne
sub
fiadds
dec
cs
dec
dec
popa
push
pop
cmp
fsubs
or
cmp
fimull
mov
sbb
stos
test
in
clc
mov
pop
push
dec
push
or
inc
push
insl
popf
js
xchg
in
nop
xor
shll
add
ret
xchg
popa
jbe
push
pop
jmp
push
leave
inc
popa
add
daa
inc
mov
push
ret
popf
sbb
inc
jae
pop
and
in
lea
push
sahf
push
xchg
cld
andb
out
fnstenv
adc
dec
ja
sahf
ficoms
pop
add
lret
xchg
push
push
cmp
push
popf
sub
xchg
jg
js
and
xor
sbb
mov
aas
std
cmp
jmp
mov
mov
iret
dec
push
pop
add
jb
or
aas
jmp
fimull
pop
and
pop
or
mov
imul
imul
dec
imul
cmp
shrb
push
mov
xor
in
add
ja
sbb
sub
mov
dec
inc
rcrb
aas
push
popa
and
insl
loop
add
inc
out
lahf
loopne
call
add
cmp
lea
xor
jp
pusha
xchg
test
push
std
pop
pusha
inc
sbb
and
push
out
cmp
and
sahf
and
out
push
pop
adc
xor
add
es
and
movsl
je
cmp
sub
adc
pusha
inc
mov
bound
sahf
push
lret
jo
inc
movsl
daa
aam
scas
and
cmpsl
in
sub
add
push
jbe
into
ja
inc
sbb
rolb
jge
jmp
or
movl
iret
lret
stos
outsb
xchg
jne
inc
add
loop
pop
stos
sub
push
mov
rclb
dec
jns
xchg
cmp
cmpsl
jmp
cmp
je
and
add
add
fisubrl
jb
sbb
popa
cmp
add
sub
sub
and
cwtl
push
pop
dec
bndstx
xchg
bound
mov
add
ficompl
dec
fdivrs
adc
in
mov
mov
xor
or
iret
inc
out
or
and
xchg
xchg
push
stos
cmpsl
call
and
pop
inc
jp
dec
xor
cmp
in
and
lcall
add
sti
aam
pop
jmp
jb
ret
add
je
mov
mov
outsl
lahf
js
setle
lods
aaa
test
and
in
arpl
add
fcmove
push
subl
pop
testb
wrmsr
jl
mov
ja
jecxz
inc
adc
cmp
insl
jecxz,pn
dec
sbb
mov
add
and
idivb
insb
pop
xchg
in
imul
imul
or
in
add
and
call
jo
testl
jp
add
push
mov
dec
sub
xor
jns
mov
or
cmc
jne
out
aam
out
mov
xchg
sti
mov
dec
inc
les
push
add
jmp
xchg
stos
add
pusha
pop
xchg
dec
loopne
out
sbb
daa
dec
push
clc
in
sbb
cmp
add
lret
sub
add
enter
popf
rcrl
leave
add
fisttpl
rcll
or
clc
cwtl
pop
dec
ret
pop
jmp
push
js
dec
sub
push
and
xor
sbb
sbb
pop
xor
inc
out
and
mov
jle
xchg
adc
enter
fsts
push
shlb
add
iret
mov
mov
in
cwtl
pop
out
pop
test
and
icebp
mov
sub
push
push
dec
pop
stos
popa
inc
in
dec
aas
je
mov
push
dec
pop
repnz
dec
jo
and
xor
pop
pop
shlb
popa
jno
mov
lock
mov
mov
cmp
loopne
push
mov
pop
dec
sub
sbbl
decb
jno
xchg
dec
cli
cmpsl
inc
add
push
push
xchg
out
sub
repnz
scas
test
pop
mov
out
push
mov
loop
adc
cmpsl
dec
jmp
jecxz
or
pusha
cmp
enter
dec
clc
jo
add
cmpl
scas
in
pushf
jo
shrb
pop
das
adc
xchg
pop
mov
sbb
sbb
in
and
mov
push
add
fs
cmpsb
icebp
arpl
mull
idiv
mov
pop
punpcklbw
mov
push
xchg
sbb
pop
je
adc
test
sbb
jge
and
popf
cmp
cmp
stos
jmp
mov
inc
push
repz
pusha
jnp
hlt
xor
or
dec
add
jge
imul
mull
dec
arpl
and
push
fstl
inc
lds
shl
or
dec
inc
push
ret
mov
pop
push
xchg
pop
stos
mov
jle
sub
out
adc
or
pop
cld
and
roll
roll
mov
ret
push
pusha
add
mov
cmp
xchg
pop
idiv
and
mov
mov
mov
aad
cld
test
push
lahf
jl
or
sti
mov
mov
clc
adcl
imul
pop
pop
pop
jmp
shll
pop
nop
sub
sbb
inc
cmpsl
out
xchg
insb
adc
push
lret
mov
outsb
mov
shrb
add
add
inc
hlt
mov
add
sbb
call
jnp
movhlps
in
pop
cld
ret
xor
imull
f2xm1
mov
dec
sub
enter
push
xchg
add
orb
mov
jne
pop
mov
pop
or
mov
or
mov
cld
stos
adc
test
mov
cwtl
and
ror
jecxz,pn
es
lock
jbe
insb
pop
sub
ds
daa
jle
push
or
jge
xchg
adc
mov
xchg
adc
fsubrs
or
sub
call
popa
ficoms
imul
jg
mov
cmp
sbb
movsl
faddl
pop
cmp
retw
pop
cld
mov
lret
cwtl
inc
stos
in
adc
adc
sub
fistps
xchg
lods
push
adc
jnp
jmp
bound
ja
sti
inc
pop
test
inc
push
popa
mov
xchg
or
or
iret
test
pop
in
dec
push
enter
or
add
fwait
pop
dec
or
inc
or
stos
pop
push
jmp
mov
outsl
cmpb
xchg
movl
ss
outsb
inc
adc
icebp
pop
dec
pop
fmuls
movb
daa
add
sub
adc
dec
enter
or
pop
jecxz
std
adcb
add
loope
lahf
xor
cs
xor
cwtl
xor
adc
dec
mov
adc
orb
mov
and
jp
cmp
add
arpl
inc
pop
pop
xchg
xchg
in
adc
sub
cwtl
push
sbb
stos
xor
sbb
mov
aad
sbb
dec
repnz
dec
and
aas
sub
mov
jb
or
mov
and
add
sbb
inc
in
add
out
inc
lret
mov
or
jecxz
or
enter
dec
inc
sbbl
xor
add
les
pop
aam
mov
cld
mov
and
cs
or
pop
js
inc
sahf
notb
xchg
push
ror
xchg
add
outsb
loopne
insb
sbb
nop
dec
adcl
jnp
int
push
push
add
repnz
aaa
push
or
pop
sbb
cmp
cs
xor
nop
mov
mov
xor
jae
jl
aaa
pop
lods
adc
testb
ss
pop
pushf
dec
pop
push
in
sub
cmp
call
and
pop
adc
ljmp
add
es
sub
cmp
lods
pop
cs
xchg
push
incb
push
push
scas
xor
mov
pop
ret
pop
out
cmc
roll
js
sbbl
push
lods
and
sbb
out
cltd
in
add
mov
pop
pop
or
sbb
addr16
mov
pop
imul
push
adc
cld
mov
mov
add
cs
mov
int3
push
add
adc
iret
rcll
lock
gs
stc
xchg
jno
adc
lret
lods
ret
fldenv
dec
loope
sbb
jnp
dec
out
xchg
dec
std
in
cld
mov
inc
push
cmc
mov
rcrb
aas
jg
jne
jmp
dec
ficompl
inc
addb
sub
int
mov
jo
das
inc
xor
fadds
notb
xchg
adc
mov
add
daa
addl
inc
js
js
inc
or
fstl
add
push
mov
mov
add
mov
dec
dec
cmc
mov
js
add
rorb
cwtl
adc
mov
xor
sub
push
inc
pop
mov
sub
add
jmp
neg
mov
add
mov
cwtl
imul
add
push
sub
cmp
adc
cmp
js
pop
add
jmp
cmp
je
inc
insl
and
lds
and
and
jge
xor
into
add
mov
sub
std
add
into
jmp
out
mov
ljmp
mov
push
dec
in
arpl
dec
testl
decb
cltd
shlb
push
push
pop
push
and
bnd
mov
push
sub
out
mov
add
xchg
dec
add
add
adc
fsubrs
pop
in
push
push
jmp
mov
je
mov
sub
sarb
push
mov
lock
cmp
sbb
or
add
lcall
lret
pusha
jns
jne
add
mov
add
fmuls
or
mov
pop
pop
push
adc
iret
movsb
decl
in
or
leave
xor
gs
and
cmp
jns
sub
add
jmp
stos
sub
cwtl
test
pop
ret
push
mov
or
gs
in
cmp
lcall
adc
addr16
orl
mov
push
and
mov
push
jge
loope
jb
and
mov
sbb
jbe
dec
lcall
and
cmp
int
hlt
push
je
aaa
not
add
clc
xor
cmc
sbb
or
inc
test
mov
dec
mov
push
mov
mov
aam
test
push
ret
cmc
nop
xchg
orl
sbb
je
add
add
clc
jge
rcll
in
lcall
lds
movsb
inc
jg
aas
fyl2x
fsubrs
stc
dec
pop
inc
add
jns
push
loope
cmpsl
sub
loop
inc
dec
inc
jl
jbe
pop
enter
daa
adc
cwtl
inc
iret
pop
mov
mov
xor
stos
negl
add
bound
cmc
xchg
subl
shrb
popa
dec
xchg
pop
mov
adc
stos
repnz
into
popf
aam
stos
sub
outsb
and
les
cmc
mov
push
xchg
shrb
fnstcw
stos
pop
xchg
mov
mov
jg
add
inc
stc
and
mov
repnz
lret
sub
std
lock
shrl
pop
jmp
adc
les
and
adc
sbbb
mov
fisubs
std
and
scas
mov
pop
inc
inc
shlb
add
pop
push
mov
add
sub
jne
dec
pop
xchg
lahf
cli
lock
loopne
in
scas
pop
xor
jmp
ss
lret
mov
lods
push
mov
movnti
sahf
bound
jmp
pop
mov
fsubrl
test
sbb
add
ds
push
inc
inc
xor
mov
jmp
sti
mov
mov
fisubl
cltd
mov
ret
mov
mov
cmp
sub
out
fimull
ja
gs
add
and
ljmp
ficomps
sbb
dec
pop
lock
inc
mov
aaa
dec
push
or
sub
push
out
push
mov
cmp
jnp
ljmp
and
mov
sub
pop
jge
mov
push
fs
imul
daa
push
jae
push
jmp
cmp
and
sahf
dec
fcomip
mov
push
icebp
pop
repz
sub
sub
lahf
lcall
rcrl
aad
add
aaa
sbb
mov
lock
pop
mov
or
cli
loope
dec
ret
bound
mov
or
adc
in
movsb
sbb
fisubrs
pop
std
push
push
test
sbb
lds
mov
mov
inc
loope
pop
outsl
sarb
xlat
add
aam
cmpsl
mov
mov
dec
cwtl
add
or
inc
add
fmull
pop
push
in
cli
daa
mov
cmp
fs
stos
cld
cmp
fs
cmpsb
cmp
add
cmp
ja
out
repz
loope
jo
mov
dec
or
jnp
ud2
mov
ret
faddp
bound
rcll
shl
add
sub
mov
jmp
dec
or
sub
and
xchg
cltd
ret
stos
cmp
push
pop
push
pop
sub
mov
fidivrl
jmp
inc
add
fs
jge
add
pop
nop
pop
mov
cltd
dec
jns
and
add
jbe
das
inc
cmpsl
pop
sbb
aaa
push
and
mov
lds
jmp
inc
mov
cmp
testl
inc
in
jl
xor
inc
sbb
stc
shrl
pusha
adc
jo
add
jmp
fistl
xchg
xor
push
xchg
jo
roll
fcmovnu
add
gs
pop
fldenv
adc
mov
cli
cltd
pop
jge
add
or
or
cmc
icebp
cmp
push
dec
push
aad
das
popf
pop
pop
adc
mov
ds
dec
and
push
cmp
jmp
call
sub
imull
add
repz
stos
and
mov
lock
add
rclb
jo
push
mov
xor
jg
je
flds
mov
xor
fdivl
and
pop
add
mov
cmp
sub
adc
dec
clc
imul
add
cmp
adc
pop
xor
mov
push
mov
push
cmp
push
fldl
push
inc
test
or
add
inc
or
adc
and
fs
fistpll
fs
in
fs
push
sbb
jne
sub
or
andb
mov
xlat
inc
push
sub
test
mov
mov
xor
lahf
mov
or
dec
or
lods
or
push
pop
bound
notl
inc
pop
and
ffree
pop
add
mov
scas
test
lahf
sti
cwtl
sbb
cmc
sar
movsl
dec
out
dec
and
outsl
and
nop
fcoms
and
sbb
test
ljmp
stos
or
xlat
or
jo
loope
inc
add
or
add
jle
push
push
sub
dec
sub
jmp
mov
add
cmp
xor
adc
sti
pop
dec
xchg
xchg
xchg
and
repnz
jmp
test
mov
and
shlb
jb
push
pop
lret
lods
jns
or
ss
adc
rolb
add
scas
shlb
loopne
and
mov
mov
hlt
rorb
push
xor
call
pop
or
fucomi
mov
jo
lock
mov
jo
or
shr
push
sub
jmp
mov
mov
pop
dec
xchg
sub
xchg
cmp
mov
xchg
jb
lods
mov
mov
dec
jmp
add
dec
ds
bound
outsb
imul
push
mov
ss
sbb
movsl
mov
add
loopne
inc
adc
jg
sbb
packssdw
add
pop
push
stos
sub
sub
add
or
orl
cmp
js
push
sub
xchg
inc
sub
pop
mov
rorl
in
dec
xchg
mov
addb
in
mov
pop
loope
jl
fs
ja
sbb
jmp
leave
mulb
adc
or
in
sbb
sub
and
jns
xchg
mov
push
inc
xchg
arpl
sbb
mov
xorl
push
add
jmp
int
xor
and
out
fidivl
adc
xchg
and
add
fsubrl
mov
das
lcall
test
dec
push
aas
mov
jle
xchg
lock
data16
mov
cmpsb
es
lods
in
dec
push
cmc
jle
cltd
pop
fidivl
sub
inc
aam
add
xchg
stos
adcb
test
adc
add
xchg
xor
and
aam
add
cmp
in
or
shll
pop
dec
and
sahf
mov
cwtl
scas
mov
add
daa
xchg
dec
cmp
rcrb
lret
inc
jmp
sub
mov
dec
xlat
push
add
cli
cmp
dec
ret
out
adc
test
out
pop
sub
inc
xorl
mov
roll
add
jo
jp
leave
popl
dec
add
lret
lahf
push
pop
es
mov
ret
pop
jnp
sahf
sbb
push
jmp
pop
bound
repnz
out
test
cmc
aas
adc
ds
aaa
xchg
pop
adc
jne
ret
xchg
orb
fistl
pop
mov
xlat
jnp
push
jmp
pop
outsb
imul
outsb
es
or
fnstcw
pop
fsubrl
xor
push
inc
cmp
add
or
sbb
rcrb
or
int3
jbe
or
out
add
inc
dec
push
dec
adc
call
insb
and
push
mov
sbb
mov
out
out
mov
mov
mov
pop
xor
add
pop
in
and
sub
cmp
icebp
sbb
add
sbb
shl
test
cmp
add
ret
and
adc
push
add
sub
or
fsubrl
frstor
shrl
pop
cmpsl
adc
mov
and
divb
sbb
sub
out
sub
enter
outsb
lret
dec
adc
test
cmpsl
xor
push
pop
jg
loop
scas
sbb
mov
lahf
repnz
push
repnz
dec
push
hlt
or
mull
jmp
mov
movsl
insl
xor
mov
mov
add
lret
push
stos
pop
pop
sbb
js
push
and
out
ss
in
negw
mov
xlat
or
loop
std
roll
push
inc
loopne
jle
xor
sbbl
stc
mov
in
xchg
cld
lahf
outsb
fwait
inc
fists
and
and
movsl
cmp
lods
les
mov
add
stos
push
mov
add
aas
or
ja
jne
jp
sti
ret
mov
mov
repz
dec
jg
mov
scas
mov
mov
ja
gs
icebp
cmovle
xchg
cld
in
dec
out
out
roll
lods
and
out
pop
mov
subb
fs
icebp
shlb
ret
arpl
jmp
popa
fchs
mov
rclb
cld
sbb
fadd
jge
dec
dec
ja
mov
push
push
xor
dec
repnz
loopne
add
adc
mov
clc
movsl
vpmuludq
test
jecxz
jg
sub
add
fistpl
into
xor
lcall
sub
jle
dec
dec
push
or
in
ja
mov
daa
and
and
cmpsl
cmp
mov
andb
inc
daa
shrl
or
mov
les
ret
or
fcmovb
stc
push
fldenv
or
mov
call
sub
outsb
adc
mov
inc
xchg
mov
push
push
loopne
jmp
dec
shlb
sahf
mov
aad
push
orl
pop
xchg
and
std
cmp
push
rcl
hlt
or
incb
jmp
in
add
iret
fmull
loope
dec
jl
adc
pop
int
repnz
mov
ret
fidivrl
pop
inc
mov
pop
mov
enter
xor
lods
adcb
fiadds
mov
jp
jo
into
cmp
nop
xchg
mov
cmp
mov
lock
pop
push
sbb
nop
inc
idivb
loope
clc
and
pushf
pop
stos
cmpl
add
xchg
movsl
jno
inc
push
xlat
cli
add
push
dec
add
in
rorb
xlat
mov
or
xor
xor
mov
adc
jb
mov
adc
mov
repnz
cmp
jbe
mov
add
cmp
mov
mov
mov
test
pop
popf
push
push
push
out
pop
setne
imul
cmp
push
shlb
lahf
pop
sbb
inc
cli
orl
inc
shlb
ljmp
arpl
cmpsl
push
popa
mov
aas
fbstp
and
clc
and
push
cmc
push
jge
arpl
lret
cmp
shll
scas
mov
les
add
sti
mov
jp
ret
sub
xor
dec
stos
xchg
pop
adc
jo
xchg
mov
outsl
or
jmp
xchg
fsub
loope
add
jae
cmp
cmp
mov
enter
out
cltd
dec
inc
testb
ljmp
in
cwtl
pop
lock
out
add
fwait
pop
and
inc
jmp
mov
into
mov
jb
fsubs
dec
add
movsb
loopne
or
push
adc
xor
pusha
or
cmp
adc
mov
gs
push
jp
rolb
push
sub
mov
add
dec
add
ja
stc
sbb
xor
insb
dec
jne
xor
sbb
pop
popf
movb
pop
out
sub
stc
test
adc
jmp
xchg
dec
mov
inc
push
dec
add
shll
push
call
cmp
inc
outsb
repz
push
adc
cmpsl
sti
and
sub
daa
adc
adc
sti
sub
lds
sub
adc
notl
movsl
addr16
dec
xor
test
or
jo
add
push
push
mov
aam
mov
inc
add
gs
jge
roll
dec
and
pop
and
lods
js
add
ret
imul
or
insb
xor
jmp
cltd
jmp
mov
and
enter
call
rcl
ret
stc
setbe
les
lock
xchg
jno
cmpsb
decb
in
das
daa
add
cmp
dec
int3
mov
jl
mov
and
sahf
cmp
jle
jbe
or
pop
push
daa
arpl
lahf
sbbl
xor
shll
cltd
or
xchg
mov
cmp
jge
mov
xchg
hlt
jo
add
jns
push
xchg
lret
or
lds
add
sbb
sarl
mov
insl
pop
sub
sahf
cli
xorb
js
fmuls
cli
pop
roll
cwtl
inc
fwait
addr16
int3
mov
mov
inc
lret
mov
add
in
push
add
mov
mov
in
cwtl
mov
or
and
andb
cs
jle
icebp
pop
xchg
jp
mov
insb
mov
cmp
push
aas
bound
lods
push
inc
cmpsb
sub
add
push
pop
xchg
call
gs
icebp
xor
cwtl
je
and
add
mov
xor
cmc
dec
daa
xchg
jg
and
inc
pop
inc
adc
out
add
std
jae
inc
xchg
jg
jecxz
inc
into
add
loop
add
mov
lcall
movsb
dec
or
push
test
fiadds
imul
add
jmp
jns
jb
ret
movl
pop
icebp
adc
fwait
dec
dec
lret
outsb
adc
mov
pop
xchg
sbb
pop
cmp
xchg
js
js
mov
pop
mov
add
or
mov
clc
sub
loopne
or
aad
repz
pop
mov
stos
cmp
in
enter
jb
jg
mov
rol
sub
add
jmp
ds
or
jp
add
sub
add
inc
and
daa
xor
fistpl
xchg
or
push
xor
sbb
pop
fcmovnbe
ss
scas
add
or
jnp
dec
mov
sti
sub
stos
scas
cs
pop
inc
aas
bound
sbb
in
and
cmp
push
xor
pop
imul
shll
dec
add
jle
cmpl
jge
push
add
fldcw
mov
mov
mov
sub
jmp
mov
stc
cli
frstor
dec
iret
mov
sbb
in
xor
nop
shrb
clc
les
adc
stc
in
jo
scas
cmp
mov
hlt
fsubl
idiv
xlat
xchg
dec
loope
sub
and
dec
push
pop
mov
mov
aad
lds
cmp
jmp
sti
into
jno
jmp
mov
imul
mov
cmp
jecxz
sub
cs
xchg
push
xchg
and
testl
fs
jmp
jbe
dec
aaa
mov
xor
addr16
inc
mov
dec
lock
push
and
jge
filds
mov
and
pmaddwd
xchg
pop
inc
out
ja
mov
ds
nop
nop
push
fmuls
push
call
inc
mov
sbb
orb
and
loopne
mov
bound
xor
andb
imul
push
or
xchg
or
or
pop
out
dec
push
pushf
inc
addb
mov
and
loop
jmp
cmp
add
out
cwtl
jle,pt
daa
jl
shr
add
insb
outsb
in
and
test
add
xor
push
sarb
dec
mov
jg
fst
or
add
or
and
testl
mulb
or
ret
loop
aam
or
sub
iret
das
mov
add
jp
ljmp
push
test
hlt
jne
mov
and
sbb
mov
loopne
clc
dec
aam
adcb
push
adc
jmp
es
js
push
repz
in
gs
adc
fstpl
shrb
sahf
pop
maxps
push
aad
and
lods
or
nop
sub
jne
add
movsl
aad
lcall
or
jmp
push
test
push
pop
call
jnp
or
ret
fbld
push
xor
repnz
bound
sti
adc
or
or
psubq
and
cld
in
dec
scas
mov
dec
mov
test
sub
or
fs
std
jmp
lds
dec
call
subb
inc
and
out
icebp
adc
scas
inc
xchg
mov
inc
add
neg
dec
pop
xchg
jge
mov
cs
adc
inc
testb
jo
xchg
cmpb
push
mov
sbb
pop
or
std
in
add
bound
mov
cld
stos
ficoms
inc
gs
add
xchg
loop
cli
xchg
imull
jl
sbbb
dec
inc
mov
cmpsl
adc
or
aad
scas
mov
mov
daa
jg
push
or
shlb
xchg
dec
xor
fildl
pushf
clc
arpl
pop
mov
mov
cwtl
push
test
pop
sub
lods
ficomps
inc
dec
jmp
push
mov
lods
ljmp
cwtl
ret
cmpb
xchg
pop
push
jmp
pop
pop
jne
mov
mov
cmpsb
int
push
jne
lret
push
sub
movsl
push
and
das
or
repnz
pop
jecxz
sub
pop
pop
push
jge
xchg
addr16
xchg
lcall
je
mov
or
jne
xor
out
jnp
jno
orb
inc
jmp
sub
add
pop
div
or
sbb
jg
in
outsl
xor
test
in
js
or
shll
cmpsb
xor
adc
jg
adc
mov
jle
sub
idivb
jle
cmp
push
and
inc
jge
call
aaa
mov
and
mov
pop
dec
mov
cld
lods
jae
mov
dec
xchg
hlt
and
div
add
lcall
bound
push
cmpsb
jnp
dec
jno
xor
adc
and
sub
lret
or
sbb
cwtl
or
mull
rolb
dec
in
jbe
jmp
pop
push
pusha
mov
jno
fiadds
and
lds
jge
add
imul
stos
pusha
or
outsb
xchg
outsb
loop
lods
sbb
je
int
outsl
repnz
jle
fadds
xor
ret
jne
cmpsl
pusha
jmp
jmp
add
loop
add
je
push
jo
lods
inc
rclb
mov
dec
jmp
mov
add
push
adc
repnz
xor
dec
aad
daa
or
popa
push
push
lret
or
es
out
movsl
mov
enter
repz
fisttpl
pop
ljmp
pop
fcompl
pop
jb
push
jbe
sbb
inc
push
inc
push
pop
pop
inc
test
pushf
sbb
or
pop
xor
jmp
lea
add
xchg
ret
scas
stc
or
push
mov
xchg
test
mov
push
push
repz
in
jo
add
int3
adc
adc
outsl
mov
cwtl
pop
adc
fmuls
gs
jle
scas
jno
imul
jp
lahf
push
mov
adc
inc
addl
pop
jmp
sub
or
add
or
cli
pop
push
pop
mov
push
pop
inc
push
jb
dec
cmp
xchg
jle
clc
push
jmp
call
xchg
pop
and
adc
repz
inc
mov
adc
mov
cmp
ja
sbb
sub
inc
dec
jbe
and
adc
cmp
push
or
dec
push
xor
inc
inc
sub
inc
sub
add
push
jl
cmp
pop
out
jns
jns
pop
incb
mov
shl
pop
mov
aas
in
ljmp
les
repz
pop
das
inc
out
cld
sahf
pop
test
push
andb
sarb
mov
fisubl
sar
push
je
ret
test
pop
std
and
cmp
push
mov
add
dec
ljmp
push
fisubrs
out
push
cmp
pop
mov
cs
les
stos
lret
pop
sarl
xorl
pop
pusha
or
sub
push
jmp
push
jl
mov
ds
jnp
jl
mov
popl
aad
xchg
and
pop
inc
push
add
jmp
jmp
cmp
cmp
aas
inc
push
add
out
jl
arpl
decb
andl
push
mov
push
sbb
rcrl
mov
xchg
push
cmp
ljmp
mov
or
ds
inc
bound
roll
loopne
pop
mov
insl
ja
xor
roll
not
cli
stos
jle
pop
and
xor
data16
mov
lret
ret
repz
adc
in
add
ret
cmc
mov
fcmovne
mov
idiv
ds
push
add
pop
in
push
popa
aam
mov
shr
pop
sbb
test
icebp
sub
or
xchg
mov
jmp
xchg
and
repz
roll
lds
jle
or
push
cwtl
test
push
push
scas
lret
cli
pop
and
mov
adc
stc
pop
stc
outsl
pop
out
push
repz
das
sti
les
stos
in
pop
dec
lods
insb
add
loop
fnsave
neg
jge
add
roll
jmp
sub
mov
mov
mov
or
pop
je
cmp
lret
hlt
sbb
aas
out
pop
sub
jbe
pop
inc
adc
sub
stc
push
movsl
fildll
stc
jmp
dec
rorl
test
ss
les
xor
or
cld
push
jmp
push
adc
pop
ljmp
xor
test
ret
push
push
scas
and
and
das
xor
js
dec
pop
test
mov
les
and
fwait
hlt
adc
xorb
pop
adc
xchg
sbb
inc
fld
shl
push
push
hlt
ret
jbe
dec
cmc
push
enter
xor
iret
hlt
mov
sbb
xchg
cmpsb
jbe
sbb
inc
or
or
push
jmp
mov
mov
lahf
dec
xchg
int
sub
iret
ljmp
cli
enter
xor
lcall
gs
cli
adc
push
jmp
push
pop
ljmp
add
xchg
sti
sbb
shlb
add
les
es
ja
jp
or
xor
cmc
mov
cli
cli
push
mov
cmp
gs
popl
jne
pusha
fcmovnu
popf
aas
cmpsb
pop
push
or
je
xor
jae
cmp
cmp
adc
xchg
jbe
xchg
lret
mov
mov
cmp
es
push
jbe
xchg
xor
imul
test
stos
in
roll
pop
push
jmp
inc
cmp
outsb
jg
data16
sub
pop
enter
add
test
aaa
push
mov
push
jbe
sub
push
mov
adc
or
push
push
sub
out
xor
sbbl
sbb
and
and
popa
jmp
pusha
dec
adcl
ja
loope
leave
fbld
ror
xchg
mov
clc
sbb
push
mov
inc
add
cld
sub
xlat
mov
cmp
jp
pop
add
jmp
andl
add
addr16
jae
jmp
and
mov
cld
jl
iret
inc
or
in
jmp
outsb
hlt
rcrl
sbb
shll
loope
clc
mov
cmp
filds
aam
jecxz
dec
mov
mov
mov
mov
hlt
or
mov
js
std
jno
lahf
andb
fldenv
out
or
mov
add
call
adc
add
cmp
rcpps
not
and
cmp
dec
add
xor
cmc
gs
out
jecxz
xchg
adcl
sub
outsb
dec
gs
sti
adc
or
sbb
out
add
pop
cmpsl
add
inc
mov
popf
arpl
ret
add
mov
inc
imul
dec
adc
lahf
inc
das
push
andb
add
test
xchg
clc
add
jb
inc
cmc
sbbb
jmp
fbstp
pop
int
test
pop
fs
cwtl
mov
sbb
adc
sbb
sub
cmp
jbe
dec
mov
jmp
add
pop
inc
out
lcall
mov
push
jmp
push
fs
push
fisubs
daa
inc
cs
loopne
into
jno
jbe
add
je
mov
lock
add
ret
cmp
or
js
or
push
pusha
ss
rcrb
out
jmp
cwtl
fisttpl
xor
mov
test
sub
xor
jb
pusha
sub
xor
pusha
call
or
dec
and
inc
dec
shll
stos
push
mov
adc
enter
push
vpsubsw
push
push
les
mov
test
or
mov
pushf
fidivrs
sbb
leave
in
mov
sbb
sub
push
mov
jno
mov
dec
not
push
lock
ljmp
rolb
push
test
mov
or
jl
sub
cmp
iret
ret
xlat
push
xchg
ror
repnz
pop
adc
mov
pop
or
pop
cs
dec
ja
daa
lods
fisubrs
inc
imull
jmp
loop
test
lods
or
sub
push
daa
lock
xchg
jo
push
inc
imul
jne
and
lds
lret
mov
in
add
stos
pop
fwait
jp
dec
mov
out
stos
push
sbb
shl
push
test
sbb
aad
fistps
sub
ret
or
xchg
pusha
test
mov
ja
and
xchg
pop
out
shrb
inc
loopne
hlt
lods
dec
or
pop
lret
mov
fcompl
jecxz
sbbl
mov
in
or
pop
sub
dec
mov
cli
pop
adc
sbb
insb
jnp
push
rclb
jp
das
clc
jle
or
add
fisttpll
lods
ficomps
dec
out
lret
push
xchg
cli
mov
pop
gs
incl
push
mov
push
pop
daa
cmp
jb
popf
push
rorl
dec
lock
faddl
push
mov
cld
iret
imul
stos
mov
in
or
adc
jb
addl
sbb
xchg
pop
add
jmp
add
stos
rorb
imulb
dec
mov
xchg
inc
adc
pop
iret
adc
stc
or
adc
fstpl
sbb
ds
jle
movb
xchg
outsl
add
mov
xor
or
pop
xor
mov
add
outsl
loope
push
inc
loopne
add
mov
inc
cmp
dec
sub
das
sbb
pop
pop
in
sbb
mov
or
mov
movsl
or
ret
pusha
mov
inc
sub
test
push
jmp
addr16
and
aaa
inc
cli
out
pop
or
pop
push
ja
fadds
int
clc
nop
loope
loop
mov
mov
pop
insl
jg
popf
adcb
jbe
pop
das
outsl
dec
push
test
sub
mov
xor
jne
lcall
leave
int3
stos
push
push
mov
xor
mov
ja
and
or
add
xchg
cmpsl
xlat
cmp
sahf
lcall
ja
adc
imul
out
loope
add
shrl
and
xor
mov
sub
add
mov
mov
popf
repz
in
mov
mov
gs
cld
in
xor
or
lret
jge
es
or
idivb
adc
icebp
outsb
ds
sbb
or
push
les
mov
or
data16
test
jne
sub
jmp
jecxz
sub
loop
fwait
push
mov
leave
sub
nop
addr16
out
inc
xchg
push
popf
ljmp
imulb
adc
jl
adc
pop
xor
adc
sbb
push
mov
mov
fs
or
sbb
inc
loopne
data16
jo
push
mov
xor
lock
mov
dec
fists
stos
sti
stos
cmp
stos
pop
push
gs
or
push
sar
das
rcrb
push
fstps
mov
dec
cli
xor
jmp
test
inc
fwait
pop
imul
add
popf
adc
xor
pop
inc
mov
or
pop
mov
jmp
je
daa
jmp
push
adc
leave
push
inc
and
stc
por
sub
xchg
cmpps
ds
dec
mov
sar
mov
fs
sub
imul
sub
cmp
popf
jae
arpl
add
cmp
pusha
jo
call
cs
stos
add
inc
fidivs
jmp
push
inc
xchg
repz
fiadds
pop
push
push
mov
push
or
lret
arpl
jp
sbb
es
rclb
mov
push
lock
jns,pt
inc
mov
subb
mov
cmp
test
inc
stc
lcall
fnstenv
lea
add
sub
sbb
les
dec
adc
push
icebp
pop
sub
into
mov
dec
add
pop
jmp
icebp
cld
popf
jnp
xor
stos
popa
xchg
mov
dec
clc
lock
adc
pop
std
push
fsubs
repnz
or
aad
jne
repnz
pop
ret
mov
not
xchg
or
ret
add
add
add
orb
movb
in
outsb
sub
dec
sub
mov
push
push
inc
inc
push
sti
add
fsqrt
add
aam
dec
push
cmp
or
mov
mov
jmp
fstpl
fimull
adc
dec
ljmp
dec
or
out
push
movsl
inc
roll
push
ja
popf
cmc
sahf
sarb
test
push
add
movsb
cmp
inc
jbe
add
sub
shll
sub
int3
in
push
loope
aaa
push
stc
push
stos
cmp
xor
and
or
xchg
cmp
cmp
out
sub
sbb
lret
sub
xchg
aaa
dec
dec
mov
jbe
test
das
pop
arpl
add
aam
inc
add
cs
push
mov
xlat
in
push
xor
sbb
and
and
pop
rcrl
jo
or
mov
fcompl
lcall
pop
shlb
mov
xchg
pop
loopne
orb
push
test
xchg
lahf
or
aam
stos
mov
shlb
insl
mov
adc
in
mov
pop
in
pop
add
cmc
inc
jmp
adcb
jb
in
inc
lods
sub
xchg
pop
aaa
addb
mov
loope
sbb
aad
mov
int3
dec
pop
loop
shr
roll
orl
jl
mov
hlt
or
dec
mov
loope
cwtl
push
out
cwtl
das
orb
or
pop
ret
lods
or
mov
adc
xor
push
jmp
adc
jl
mov
jmp
xchg
inc
repnz
mov
inc
cmp
clc
pusha
mov
out
xor
sub
jge
sub
neg
push
jp
into
pusha
and
or
sub
shrl
mov
jg
push
fwait
ret
cmp
dec
mov
pop
jmp
inc
jmp
imul
inc
push
cmc
pop
pop
push
jno
xor
movsb
sub
sub
adc
xchg
or
cwtl
sub
aam
jle
jmp
out
mov
jge
mov
push
mov
push
mov
jne
dec
test
pop
sbb
dec
iret
push
inc
pop
call
or
xchg
push
stos
sub
push
mov
xor
out
mov
notl
shll
inc
stc
dec
sub
jge
aam
add
leave
int
and
cmpl
loopne
jns
fimull
daa
xor
xlat
ljmp
jg
pop
mov
jle
movsb
imul
cmpsl
out
imul
cmp
push
mov
xorb
jmp
ficoml
push
es
cld
adc
les
jecxz
ret
jp
jb
jo
pop
sub
rclb
rolb
jne
inc
inc
aas
in
dec
inc
push
xorb
pop
or
rclb
mov
jp
sahf
sahf
xchg
or
push
roll
sub
mov
jmp
faddl
mov
shll
mov
or
ret
and
sbbb
add
inc
dec
push
mov
test
pop
in
push
adc
add
loopne
jecxz
popf
bound
xchg
orb
insl
adc
dec
push
push
sub
fdivs
push
out
inc
loopne
inc
mov
fnsave
xchg
sub
lret
mov
xor
in
add
pop
push
rolb
sbb
pop
in
mov
mov
jbe
cmp
mov
js
int3
repnz
adc
insl
hlt
mov
vshufpd
lcall
icebp
fbld
insb
jg
repnz
xor
ja
inc
test
out
pusha
cmp
popa
lea
push
jge
mov
sbb
ljmp
out
jmp
and
scas
int3
xor
mov
mov
pop
int
ss
and
shl
pop
push
push
pop
dec
xor
jmp
jno
scas
or
mov
mov
subb
mov
pop
and
inc
dec
add
pop
pop
dec
scas
jmp
push
cmp
pop
xchg
cli
loop
loopne
gs
inc
push
fisubl
or
dec
cs
out
push
xchg
movsl
mov
mov
mov
pop
lret
outsl
sub
pop
mov
scas
or
rclb
scas
clc
mov
inc
cmpsb
mov
sub
inc
adc
je
repz
pop
adc
inc
pusha
and
out
mov
ret
xchg
and
add
push
scas
test
sbbl
das
out
jge
mov
loop
jge
jb
mov
movsb
sbb
jmp
xor
enter
sbb
jp
aaa
adc
mov
lahf
fdivl
xchg
add
ja
jmp
stc
mov
lds
add
call
jp
sub
or
ljmp
lcall
pushf
xchg
mov
push
sbb
test
push
pop
pop
mov
sub
cmc
ss
xchg
jno
jmp
mov
bound
pop
push
iret
in
inc
cmp
xchg
call
int3
sbb
aas
add
lds
sbb
xor
mov
inc
push
stc
jl
testb
shl
dec
cld
jmp
xchg
mov
jmp
adc
jae
icebp
add
sbb
stos
inc
aaa
or
int
jmp
inc
mov
loop
xor
mov
in
sub
into
xor
std
xchg
test
mov
mov
mov
dec
fimull
dec
aad
loope
xchg
jmp
fldl
add
sbb
out
mov
fs
adc
pop
pop
xor
and
pop
adc
fildl
xorl
fsubr
xchg
xchg
stos
cmp
jmp
pop
dec
and
std
in
sub
outsb
es
add
ljmp
sbb
dec
lods
add
fdivr
aad
xchg
push
adcb
sub
xchg
xchg
push
push
pop
pop
pop
and
arpl
lds
flds
or
add
jle
inc
and
int3
mov
lret
lds
ds
notb
push
pop
jo
test
mov
lea
fstps
xchg
inc
aaa
cmpsl
inc
test
arpl
cltd
xcrypt-cfb
cmpsl
ffree
or
jmp
xchg
jb
daa
pop
aam
imul
sbb
test
imul
shl
je
cmpb
shrb
mov
orb
leave
dec
not
pop
xor
fistl
leave
push
sub
mov
or
add
dec
cmpsb
repz
dec
jle
ja
push
cli
mov
sub
push
and
add
ret
enter
add
mov
test
shlb
out
xchg
add
fmulp
test
ljmp
sub
add
mov
popf
je
scas
hlt
xchg
sub
and
push
add
mov
loope
iret
add
enter
add
dec
into
das
push
mov
jmp
sbb
sbb
mov
lret
jge
pop
adc
into
es
push
jmp
stos
jle
in
rep
add
cmp
push
lods
arpl
and
push
ret
xor
push
sub
imul
sub
or
idiv
insb
xchg
dec
xor
dec
cmpsb
mov
xchg
mov
mov
fsts
dec
jmp
mov
cs
repz
push
fwait
and
es
hlt
rcr
shll
sub
ret
fstp
rorl
adc
adc
scas
enter
push
mov
aaa
inc
adc
cmp
and
mov
xor
ret
psrld
roll
inc
push
cld
push
and
inc
mov
xor
push
xchg
stc
sub
ficoms
inc
pop
lods
push
push
push
gs
sub
je
mov
xchg
and
mov
add
leave
data16
test
mov
push
add
fwait
mov
js
stos
jno
or
pop
and
add
adc
mov
mov
xchg
or
imul
mov
sub
repz
dec
in
fwait
add
xor
dec
jmp
push
add
icebp
fcoml
ret
push
ja
into
mov
daa
mov
jmp
xchg
or
add
push
fstpt
or
sub
pop
pop
inc
insl
mov
sub
inc
decb
shll
sti
inc
sub
cmp
cmp
stos
leave
popf
add
rcrl
clc
scas
rcrl
mov
pusha
es
push
adc
cmp
pushf
nop
cs
mov
addl
mov
sub
mov
repz
pop
xchg
push
dec
mov
sbb
and
in
test
add
popa
dec
or
outsl
inc
stos
movsl
cmpsb
sub
cs
aam
dec
outsl
or
push
push
cwtl
out
sbb
rol
inc
jnp
icebp
pop
push
rolb
lret
sub
pusha
js
pop
push
or
or
notb
or
sti
leave
and
imul
jmp
mov
dec
and
bound
clc
dec
mov
adc
aad
cmpsl
xor
clc
xchg
cmp
pushf
aad
iret
mov
add
sub
inc
mov
jno
or
inc
fimull
mov
jmp
push
enter
sub
pop
rolb
lock
push
cmp
push
insl
cwtl
int3
dec
xchg
out
rcrb
and
jmp
or
mov
dec
xchg
movsl
fwait
xchg
xchg
hlt
movsl
nop
mov
inc
cmpsl
addl
push
jge
jmp
repz
inc
ret
decb
mov
cmp
sub
sbb
fidivs
stos
fsts
push
mov
inc
inc
lds
sub
pop
mov
outsb
pop
iret
sahf
inc
nop
sahf
shl
pop
aas
outsb
loopne
in
hlt
push
cwtl
insl
xor
mov
sahf
add
mov
or
jmp
sub
xchg
add
add
fs
push
add
push
dec
pop
shlb
push
jae
push
pop
sahf
sbb
dec
cmp
jmp
outsl
shufps
arpl
out
inc
jnp
movsb
add
or
pop
xlat
call
add
iret
mov
sbb
int
mov
mulps
jbe
sarl
or
mov
movsb
inc
ret
jecxz
mov
je
in
inc
neg
or
jb
retw
cmp
sub
jmp
stos
sub
pop
in
dec
xchg
inc
mov
std
xor
ret
je
mov
out
sbb
les
jge
and
mov
dec
pop
and
cmp
icebp
and
hlt
jae
xchg
jno
cmp
lret
xor
inc
push
push
cmp
and
jg
das
ss
push
filds
adc
pop
push
loop
test
sarl
add
insl
cmc
and
add
out
scas
pop
rorl
dec
and
stos
or
leave
sub
sub
dec
arpl
xor
ljmp
fs
and
mov
xor
sub
daa
jmp
pushf
sub
xchg
imul
mov
lock
repz
cmpsb
push
or
mov
pop
test
sbb
mov
lock
sarb
add
cmp
sbb
add
mov
fiadds
jg
jmp
xor
xchg
sbb
adc
scas
sub
popa
xor
pop
jb
in
les
mov
sub
cmp
xchg
scas
mov
push
sbb
xchg
out
push
sbb
adc
mov
sub
dec
mov
or
pop
jmp
in
cmpsl
stos
pop
jge
jno
add
xchg
add
jnp
adc
or
cli
lahf
jne
sbb
aaa
inc
jnp
sub
addr16
popl
or
xchg
lcall
sub
or
jmp
mov
pop
xor
mov
inc
jmp
jnp
or
pop
int3
inc
push
push
or
imul
jne
sbb
sub
ret
sub
or
jl
add
rcll
into
add
aad
cli
aad
cltd
or
jne
mov
jmp
movsb
sub
add
jp
das
push
inc
jno
push
adc
or
dec
pop
loope
jle
jo
cmp
scas
inc
pushf
lods
sarl
adc
push
lahf
dec
andb
add
or
sub
bound
pop
sub
enter
fnstcw
mov
or
sti
notl
cmpsb
dec
cld
aas
add
outsb
pusha
mov
test
jmp
sarl
dec
push
lods
inc
pop
xor
mov
push
pop
ja
sbb
and
add
pop
icebp
movsl
bound
imul
push
pusha
push
jp
cmp
cs
and
nop
or
lods
mov
mov
mov
mov
stos
push
jbe
nop
pop
sbb
stc
std
mov
cmc
pop
xchg
xchg
adc
loop
test
scas
xor
cwtl
cmp
pop
add
or
fwait
lret
fsubrs
jne
xorb
das
pop
call
jns
jmp
push
dec
jmp
test
dec
stc
push
stc
pop
ret
cmp
push
repnz
or
mov
push
cmpsl
sbb
out
add
loope
jge
cmp
inc
mov
shlb
wrmsr
div
or
decb
jmp
out
test
pop
lods
enter
add
sar
add
lods
or
inc
or
shll
into
imul
jmp
test
scas
mov
jne
insl
sub
mov
ficoml
int3
adc
and
jns
sbb
inc
add
insl
push
pop
xchg
and
push
and
pop
and
jmp
hlt
scas
lods
jmp
pop
repnz
leave
and
jne
test
icebp
loope
sub
lds
shll
mov
xchg
mov
cs
push
inc
jo
add
testl
add
popa
popf
bound
adc
out
cmp
mov
add
jmp
jbe
push
add
xchg
and
adc
cltd
lods
fcomps
lcall
fdivrl
test
add
icebp
jmp
mov
push
stos
push
jnp
sbb
sub
inc
xor
add
bound
out
pop
add
test
adc
lret
iret
push
sub
pop
mov
iret
xor
cmp
imul
or
cmp
or
jo
and
adc
jmp
pop
sub
or
loopne
pusha
xor
lahf
inc
cltd
pop
sub
fsubrp
int3
in
jmp
jbe
frstor
fs
dec
adc
stos
push
push
out
pop
stos
sub
dec
addb
pop
lds
sub
push
sti
sub
mov
mov
sbb
test
or
loop
stc
or
ret
iret
shrb
in
jbe
scas
mov
cmp
imul
cmp
jl
inc
inc
jmp
add
push
mov
sbb
pop
pop
pusha
jne
and
out
mov
imul
nop
mov
xlat
xchg
sub
jmp
cli
dec
pop
jno
sbb
push
mov
pop
std
push
dec
lret
xor
lahf
inc
mov
movsb
imul
pop
mov
ret
test
decl
loope
jmp
xchg
sub
dec
pop
repz
into
sbb
int
fdivrs
mov
int3
or
sub
test
mov
aas
stc
ds
cmpsb
mov
push
dec
ja
in
sub
imul
push
push
jmp
push
pop
fs
dec
jne
orb
dec
pop
adc
pop
sub
mov
ret
add
pop
push
or
adc
in
mov
scas
loope
cmp
jmp
inc
into
push
loop
adc
mov
mov
dec
enter
sti
mov
es
inc
insb
or
xchg
jno
mov
or
lahf
fisttpl
hlt
leave
shrb
call
clc
sbb
add
xchg
sub
loopne,pt
or
inc
mov
push
dec
subb
inc
shr
lock
lcall
sbb
movsb
add
ja
push
ja
aad
sahf
lcall
inc
jmp
jecxz
adc
pop
mov
test
imul
xchg
out
add
jae
cmp
adc
les
daa
dec
fwait
shrb
push
add
jle
add
mov
lods
or
rcrl
mov
jae
or
pop
add
shr
iret
icebp
or
andb
jmp
out
imul
and
enter
popa
inc
or
sbb
orb
push
neg
pop
shr
sbbb
push
movsb
fcmovnb
or
dec
fs
sub
test
int3
adc
stos
adc
stos
add
cmp
jg
adc
or
sub
mov
or
out
add
jns
pop
jmp
lock
dec
pop
movsl
cmp
inc
cld
loope
das
and
lods
pop
call
aam
jae
mov
pusha
mov
jmp
mov
pop
jo
xchg
push
or
in
xchg
cld
in
xchg
je
pop
push
xchg
mov
rcll
lahf
xchg
push
push
mov
aas
pop
xchg
test
dec
or
arpl
les
lds
aam
mov
adc
mov
inc
dec
pusha
mov
inc
jns
xor
push
or
call
dec
xchg
and
clc
pop
lds
scas
xchg
push
shl
scas
mov
xchg
push
lock
mov
cmp
fcmovbe
out
inc
mov
lock
mov
pop
push
jbe
loop
adcl
pop
test
mov
fisubs
cmc
pop
cmc
test
mov
insb
lcall
pop
stos
adc
pop
or
es
cwtl
xor
cmp
sub
mov
shr
or
push
fs
sti
sub
cli
add
pushaw
js
xor
push
pop
push
mov
add
pop
sub
pop
loopne
adc
mov
data16
sub
add
and
mov
push
cmpsb
cmp
lret
mov
sub
dec
mov
fadd
mov
out
add
test
les
cli
xor
adc
cmp
sub
pop
inc
ja
mov
add
jb
pop
aad
dec
aaa
mov
inc
stc
scas
in
and
push
out
mov
pop
popf
cld
and
xor
test
adc
dec
pop
jmp
add
cwtl
or
into
jnp
pop
mov
pop
xor
mov
jle
out
mov
pushf
aad
test
mov
decl
das
call
sti
je
stos
popa
push
iret
and
or
cmp
push
ja
jecxz
test
rorl
std
sbb
fildl
and
push
gs
stc
lock
inc
pop
inc
sbb
add
in
or
mov
push
mov
jmp
sbb
fisttps
dec
pop
dec
out
xchg
sub
or
adcb
pop
adc
test
movsl
fstpl
push
pop
inc
mov
shl
jmp
dec
mov
xor
add
out
pop
add
pop
push
add
pop
push
insl
mov
adc
ljmp
in
or
adc
push
jg
add
lcall
mov
ljmp
push
mov
out
or
imul
mov
cmc
jg
aas
and
adc
inc
sub
sarl
bound
sbb
add
xchg
push
mov
clc
dec
ret
fwait
add
pop
daa
mov
repnz
jne
ss
orb
mov
into
xor
pop
push
rorb
mov
xor
add
notl
mov
dec
mov
jmp
pop
sub
push
xchg
fucom
je
out
nop
pop
push
mov
shr
jo
xchg
add
xchg
fidivl
pop
loope
add
mov
lock
push
mov
insb
add
mov
rcrl
add
sub
mov
adc
lods
add
jmp
xor
xor
jbe
or
jae
fucomip
rorl
sbb
xor
sti
and
push
icebp
fcoms
push
mov
push
scas
ret
ljmp
cmp
and
jb
cs
dec
sbb
cli
popw
pop
shr
xorb
in
repz
inc
push
ss
mov
sbb
adc
mov
dec
lods
lods
push
test
adcl
sbb
imul
std
cmp
test
add
mov
add
test
xchg
and
pmaxsw
jo
mov
mov
mov
and
pop
push
push
sarl
mov
mov
sub
adc
enter
notb
hlt
pop
int
icebp
xor
push
pop
jo
orl
xchg
cld
pushf
or
into
jmp
push
or
push
or
mov
mov
adc
pop
xchg
mov
les
enter
dec
pop
jno
repz
lahf
adc
pop
ds
add
and
jo
out
fnstcw
popf
ja
mov
adc
cs
mov
add
fsubrs
xor
imul
gs
mov
jle
xor
int3
add
jge
mov
inc
pop
sbb
lea
pop
mov
mov
nop
test
jbe
jl
aad
in
rorb
push
mov
lcall
je
jmp
in
outsb
orb
pop
xor
mul
xchg
cmp
mov
out
mov
dec
cmpsb
jns
lock
cmpsl
adcb
xchg
jb
imull
movsl
cld
mov
pop
cli
inc
cmp
xorl
lahf
jns
pusha
stos
leave
push
jl
aaa
dec
std
and
sbb
pop
loop
aas
enter
mov
mov
fldenv
mov
mov
add
shl
cs
dec
adc
add
xchg
mov
add
push
inc
stc
pop
repnz
fsubs
int3
dec
cltd
inc
add
jb
pop
sub
sar
sbb
push
jmp
push
shr
jmp
xorl
pop
pop
add
sbb
or
mov
testl
xchg
nop
clc
cmp
into
mov
out
adc
lock
xor
fstpl
js
pop
mov
or
push
adc
jl
mov
loope
push
or
adc
xor
dec
nop
jl
inc
mov
add
cmp
jne
sub
iret
icebp
out
aaa
lcall
xchg
pop
cwtl
push
add
cmp
xchg
and
adc
lret
add
out
push
and
adc
add
add
add
cmp
xchg
mov
out
lret
ficoml
push
jl
pop
mov
push
dec
lds
mov
jmp
mov
inc
repz
daa
xchg
sbb
ret
insb
fsts
add
std
mov
or
imulb
mov
lods
fmull
leave
mov
test
test
or
aad
lret
test
sti
cmpsl
add
addr16
dec
daa
pop
push
sbb
push
push
addb
lock
fadd
mov
and
ret
mov
xchg
aaa
sbb
mov
outsl
pop
out
cs
pusha
mov
jmp
scas
xchg
sarl
in
fs
data16
dec
mov
pop
divb
mov
jnp
jne
cmpsb
add
scas
fadds
and
in
pop
push
in
roll
jb
fmul
shld
iret
ficoms
mov
daa
inc
bnd
das
or
mov
lock
out
add
xlat
jo
add
hlt
jmp
push
push
xchg
subb
mov
or
pop
arpl
js
xchg
xlat
and
xchg
loope
push
in
das
in
es
fwait
or
xchg
ja
fstl
pop
add
mov
in
jmp
add
sub
sub
jae
pop
cld
fs
or
push
xchg
xlat
test
xor
in
or
and
mov
js
sub
push
mov
push
lds
sub
xor
fistps
cli
and
add
add
lcall
lret
sbb
jb
fldenv
ja
test
popa
or
pop
pop
and
in
dec
inc
int3
push
pop
add
jmp
hlt
or
stc
outsw
in
mov
xor
sub
insl
xchg
jmp
je
mov
push
push
cmp
or
loopne
neg
xchg
mov
jecxz
add
adc
pop
inc
mov
roll
mov
insl
lods
mov
outsl
and
inc
pop
sub
sarb
push
stos
sub
inc
dec
ffreep
mov
dec
rclb
inc
dec
cli
sbb
sarb
int
xor
addr16
repnz
pop
jnp
les
push
jg
inc
inc
mov
out
dec
and
mov
push
pop
fdivrl
xchg
cmp
ds
mov
hlt
jg
pusha
adc
stos
sti
add
lds
shl
daa
add
and
mov
or
bound
shlb
push
bound
inc
push
inc
rorl
lret
dec
pop
ljmp
dec
testl
mov
aad
mov
mov
mov
or
shlb
out
mov
xor
dec
mov
es
pcmpeqb
repz
or
inc
jne
gs
sub
add
das
hlt
add
fsubrs
inc
cs
pop
mov
add
xchg
push
movsl
mov
rcrl
jb
xchg
mov
jbe
not
sub
push
jns
push
pop
sbb
sbb
push
jns
lds
xchg
test
and
lcall
add
push
cmpl
sub
bound
push
mov
push
sahf
cmc
jl
and
jmp
pop
mov
stc
dec
jmp
xorb
daa
fsubl
pop
test
cli
out
inc
ret
add
or
ja
sbb
push
pusha
pop
add
add
pop
mov
lcall
mov
fs
mov
mov
or
adc
int
arpl
jo
insl
ljmp
pop
pop
ds
pushl
in
add
mov
das
adc
call
jp
xor
adc
mov
pop
pop
mov
mov
add
mov
or
test
push
fwait
sub
push
outsb
insb
jmp
daa
ja
sbb
and
pop
sub
je
outsb
xchg
in
jnp
and
mov
pop
xchg
cmp
adc
xchg
das
or
addr16
or
je
mov
andb
daa
xchg
stc
fcoms
cs
mov
pop
not
rcll
mov
sbb
lcall
leave
jnp
stc
aam
or
pop
pop
lods
movsb
xchg
xor
mov
sbb
push
shr
icebp
insl
dec
cs
xor
mov
jle
mov
and
dec
imul
jno
xchg
fisubrl
cmp
in
inc
push
mov
mov
jg
adc
mov
mov
inc
adc
mov
and
sub
aaa
dec
mov
cs
xchg
addl
sub
es
push
and
imul
lds
sahf
loope
mulb
dec
aam
and
pushf
or
insb
or
call
dec
push
xor
push
test
lea
xor
add
jb
inc
push
das
mov
hlt
pop
das
and
xor
in
jmp
ljmp
cmp
int
xchg
adcb
js
lds
and
shrl
inc
or
add
lret
push
or
sub
and
jl
adc
adc
loopne
mull
flds
pop
dec
add
xchg
sti
or
fcmovu
sbb
subb
mov
test
cmp
push
pusha
ja
shlb
imulb
das
jl
in
dec
sahf
push
lds
xchg
inc
cmc
xchg
push
lods
xor
add
mov
popa
jb
or
imul
xchg
inc
sbb
jb
xchg
pop
sub
shll
and
insb
inc
dec
pop
pop
adcb
std
flds
daa
mov
sub
into
push
mov
mov
or
iret
imul
pop
pop
inc
test
ljmp
shufps
test
cmp
in
dec
incb
mov
xchg
or
out
or
add
cmpb
lods
out
push
sbb
divl
cld
pop
sub
push
out
and
mov
sub
mov
pop
movsb
cmc
in
loopne
xchg
test
and
cmp
and
xor
inc
add
movups
neg
inc
ret
je
sbb
dec
pop
xchg
mov
outsl
adc
imul
out
jne
in
inc
sub
inc
jge
xor
mov
mov
xlat
or
rorl
popa
enter
hlt
clc
xchg
pop
xchg
xlat
sub
dec
fbld
adcb
xchg
fimull
ja
and
nop
fisubl
push
out
xchg
inc
xor
push
test
sbb
cmp
push
mov
ds
cwtl
movlps
lods
adc
and
cmp
mov
inc
int
stos
arpl
dec
mulb
pop
lds
fwait
inc
add
mov
push
mov
cmpsb
nop
and
jbe
push
or
sbb
fnsave
pop
mov
mov
imul
and
pusha
inc
scas
cs
cwtl
pop
jno
addb
add
hlt
imul
cld
push
xchg
jmp
adc
es
or
cmp
hlt
jbe
push
enter
add
stc
fstl
xchg
add
adc
ds
inc
data16
and
mov
jmp
cmpb
xor
or
stos
jae
push
vunpcklps
pushf
out
repnz
mov
jg
insl
adc
adc
js
dec
cmpl
push
and
cmp
add
ret
sbb
add
push
sub
loop
ss
xor
dec
neg
lock
xchg
xor
or
shrb
push
push
add
jb
or
psubsw
and
mov
pop
pop
lret
clc
inc
push
inc
sub
inc
lds
cld
pop
pop
mov
and
mov
movsb
test
push
dec
cmp
loopne
dec
stos
jmp
ds
inc
nop
dec
pop
mov
bound
in
stos
adc
mov
dec
cmpsl
xor
sub
inc
push
adc
scas
and
cld
push
fidivl
cs
cmp
fidivrl
cmp
jno
xor
jnp
jge
add
and
int
push
les
jo
lahf
fmulp
jae
xchg
cmp
and
jmp
testl
pop
inc
repnz
test
and
roll
in
icebp
or
js
pop
pushf
rcll
dec
xor
aam
call
adc
mov
and
addb
pusha
add
sub
sub
in
shll
mov
and
outsl
add
dec
fstps
xor
xor
pop
mov
ret
adc
xor
adc
fcomip
pop
cli
pop
adc
sub
mov
push
pop
arpl
xchg
pop
cmp
add
mov
xchg
imul
add
aad
xor
jbe
add
das
lds
inc
push
jl
daa
aaa
inc
ffreep
js
jne
repz
mov
adc
jno
pop
inc
pop
add
add
dec
or
negl
push
das
pop
xor
cmp
pop
das
shr
popa
sbb
dec
and
mov
sbb
daa
fimull
dec
pop
jg
push
pusha
int3
inc
push
repnz
cld
jg
fs
push
sbb
jmp
testb
negl
sbb
lret
pop
inc
loope
das
cmp
movl
or
xchg
sti
dec
lcall
pusha
adc
mov
fisubl
daa
add
jae
jmp
ret
jnp
insb
repz
mov
pop
sub
or
mov
pop
or
stos
or
dec
aas
xor
mov
or
sbb
lcall
jl
outsb
addb
mov
xchg
jge
ss
or
fbld
xlat
pop
dec
in
and
loope
xchg
xor
sti
inc
test
mov
push
dec
pop
mov
xchg
addb
mov
push
out
xor
jbe
daa
and
loopne
cmc
in
mov
ja
outsl
lea
or
push
or
push
jmp
cs
push
das
das
ret
fisttpll
notb
js
push
pop
in
arpl
pop
inc
dec
das
mov
dec
xor
jmp
outsl
sbb
pop
add
pop
push
mov
pop
sub
stc
adc
cltd
int
cmp
jns
les
addr16
cwtl
sub
stos
xor
rcrb
jmp
cmp
push
mov
inc
mov
sub
jl
not
shr
pop
push
mov
es
push
adc
inc
lcall
mov
push
inc
push
pop
xor
cs
push
add
push
cltd
push
dec
dec
or
dec
stos
or
push
nop
movsl
and
or
lret
inc
or
and
and
adc
and
inc
inc
sub
lock
inc
mov
add
add
incb
push
pop
jecxz
insb
orb
rolb
out
nop
mov
call
adc
mov
mov
roll
or
add
and
and
outsb
lock
mov
jne
xchg
jp
add
xor
jo
fs
lahf
add
outsb
fmuls
jbe
jle
aas
add
and
cmp
cmp
ja
pop
out
repnz
sbb
inc
pop
cs
adc
subb
pop
cwtl
lea
mov
xchg
cmp
fcoml
stos
xor
inc
dec
movl
ret
adc
add
jge
and
jmp
test
out
pop
mov
lcall
xchg
push
jg
pop
push
mov
rolb
repnz
and
inc
cli
adc
xchg
cmc
insb
adc
shrb
fstl
pop
out
or
stos
aaa
or
cli
push
mov
ror
push
movl
aad
cmp
lock
inc
scas
xor
push
mov
lea
stos
add
sarb
mov
cmp
add
sbb
inc
mov
jecxz
push
ljmp
rolb
mov
fildll
inc
sbb
subb
pop
or
dec
pop
pusha
aad
jnp
add
les
fdivr
jp
add
pop
inc
ja
orb
and
movsb
roll
and
and
cmp
push
sub
mov
lahf
inc
addr16
loope
loope
in
and
mov
adc
scas
subl
shlb
cwtl
or
lods
add
aam
inc
mov
movl
cwtl
aad
pop
add
arpl
outsb
bound
icebp
clc
aad
add
or
xlat
and
lcall
notl
mov
sub
and
ljmp
daa
mov
scas
lret
movsb
je
adcb
add
mov
add
std
sbb
jle
pop
push
pop
mov
push
mov
dec
movsl
sbb
add
pop
aaa
push
mov
and
jae
xchg
xchg
test
and
mov
pusha
adc
loopne
in
aam
mov
icebp
sub
xchg
popw
lret
imul
add
push
iret
jno
xor
dec
repnz
rcll
sub
cmp
test
nop
inc
adc
add
xor
adc
sbb
push
mov
sbb
imul
pop
je
leave
add
xlat
xor
es
in
andb
scas
inc
mov
pop
dec
shlb
mov
sbb
mov
in
or
and
sbb
add
or
add
test
imul
das
xchg
movsb
add
pop
add
cmp
sbb
ret
call
sbb
add
clc
aaa
shlb
cmpb
cmpsb
lcall
mov
stos
add
aas
sahf
sbb
mov
adcb
add
jp
cmpsl
rcl
scas
pop
add
lcall
add
fld
cli
icebp
and
loopne
cmp
mov
pop
repnz
into
push
call
stos
push
or
add
addb
mov
cmpl
dec
sub
sub
outsb
or
push
nop
or
add
push
out
movsl
in
rcll
dec
adc
sbb
in
mov
call
and
enter
xor
add
lods
int3
push
in
lock
pop
mov
pop
sub
add
pop
test
ret
inc
fwait
roll
adc
lret
xor
push
mov
das
add
inc
rorb
or
mov
or
jle
sarb
add
cmpsl
faddp
xor
les
loopne
add
inc
mov
push
into
xor
filds
out
data16
sbb
lods
pushf
sub
fwait
add
sub
fsub
testl
push
loop
mov
out
clc
add
xchg
mov
clc
popa
out
or
mov
movsl
popf
cmp
lods
xchg
cmpsb
lret
add
inc
mov
push
notb
and
mov
add
inc
fcmovb
jns
fsts
insb
lret
push
jl
add
adc
lahf
cmp
xchg
add
fldcw
or
cmp
movsb
push
ret
loop
push
int
or
sbb
and
outsb
dec
stos
js
mov
sar
mov
sub
shlb
pop
in
mov
pop
push
or
add
es
out
out
pop
mov
xchg
push
sub
inc
cmpsb
aad
hlt
jg
aas
mov
cmp
lods
clc
xchg
pusha
add
xchg
dec
mov
add
mov
outsl
push
nop
movsb
rol
sub
xchg
call
add
inc
pop
nop
fbld
mov
or
mov
mov
xchg
leave
dec
inc
and
mov
das
sbbl
pusha
js
add
or
add
xchg
enter
adc
imul
and
mov
addb
mov
adc
jo
adc
push
sbb
jae
and
call
ret
frstor
nop
mov
push
aad
std
add
test
ja
das
fstpt
das
loop
add
sbb
mov
adc
jmp
repnz
fcomps
mov
add
mov
jecxz
xchg
pop
testb
fdivs
jg
fs
or
mov
bound
mov
out
push
nop
orl
sbb
out
add
sub
xor
mov
push
mov
into
add
iret
loop
fcoml
pop
pop
out
hlt
add
nop
int3
daa
lods
or
jmp
test
sbb
pop
testb
pop
cmp
cmp
ljmp
lret
push
addb
adc
mov
test
and
mov
mov
out
sarb
adc
dec
enter
mov
in
cwtl
pop
arpl
jge
ficoms
xchg
in
adcb
inc
bound
mov
inc
ss
pop
mov
xchg
shl
orb
cmp
repz
lret
xchg
adc
or
adcl
or
lcall
mov
pusha
bound
xchg
add
sbb
add
gs
dec
stc
add
or
pop
mov
fwait
or
jl
add
push
adc
mov
push
lret
jne
test
cli
cwtl
test
add
je
in
xchg
lods
mov
and
or
cmp
mov
and
adc
mov
sar
fiadds
gs
in
sbb
aad
ret
sahf
ror
sub
loope
pop
fdivs
cmp
jmp
loop
out
xchg
out
push
or
add
mov
or
fwait
sbb
pop
mov
mov
inc
shll
pop
cmp
movsl
mov
adc
jecxz
mov
dec
cmc
sub
imul
sub
nop
and
and
enter
add
sbb
push
pop
lods
jmp
insl
fiaddl
sbbb
insb
dec
add
aam
movsl
sbb
sub
insb
xor
and
rorb
lcall
cld
add
xor
ja
or
sti
popa
icebp
push
sbb
pop
pop
sbb
scas
jmp
push
pop
fldt
inc
sbb
push
inc
sahf
ret
bnd
or
mov
jmp
mov
fstl
mov
popa
es
cltd
add
jne
push
bnd
mov
push
mov
adc
mov
inc
in
rorl
mov
add
push
xchg
orl
cmp
sbb
fxch
dec
lds
jmp
xchg
or
icebp
pop
testl
mov
dec
mov
push
add
cmp
jns
nop
or
push
xchg
ss
popa
sarb
sub
mov
subl
cli
lods
xor
das
movsb
sbb
or
add
mov
lahf
rcrl
inc
je,pt
dec
fadds
test
sub
shlb
sub
push
repz
jmp
pop
lahf
fisubs
loop
inc
add
lods
lcall
mov
mov
in
cwtl
inc
add
das
xchg
js
pop
push
movsb
adc
sbb
scas
lcall
iret
jno
mov
sbb
add
imul
and
mov
lret
cmp
icebp
js
and
sbb
andb
or
int3
or
test
add
dec
fildl
shlb
and
mov
adcb
rorb
scas
xor
cmpsb
push
adc
mov
push
int
and
cmp
stos
or
mov
add
pop
hlt
rorl
inc
add
aas
pop
xchg
or
or
dec
or
mov
pop
call
mov
call
add
inc
mov
ret
test
mov
repnz
or
jno
add
push
call
jl
in
in
popa
lds
xchg
adc
dec
call
cld
push
notl
mov
xchg
adc
scas
into
or
out
pop
data16
iret
push
xchg
mov
or
int3
dec
jge
pop
test
js
adc
lret
cmp
mov
sub
roll
leave
ja
pop
insl
call
push
mov
addb
mov
pop
in
jbe
push
sbb
dec
add
dec
push
ret
add
cmp
orb
mov
mov
pop
sub
jp
add
or
int3
push
icebp
jae
in
movsl
fcomps
stos
nop
adc
and
cwtl
aam
bound
fnstsw
pushf
sbb
and
pop
sbb
adc
add
std
xchg
inc
mov
test
dec
add
push
cmpsl
ljmp
or
testb
push
sub
addr16
loop
nop
mov
mov
pop
xor
inc
js
orl
add
es
xor
cmpsl
xor
andb
in
xchg
shrb
jmp
xor
push
mov
jo
fiadds
push
aas
les
shll
add
jae
add
or
mov
mov
clc
pop
lea
loope
shlb
or
out
jbe
mov
mov
nop
xor
push
pop
nop
shll
or
xchg
es
push
sbb
add
add
int3
xchg
inc
add
dec
inc
pop
test
ds
sbb
xchg
and
jb
push
ficoml
js
popf
and
test
add
xchg
sbb
push
imul
data16
lods
jns
push
sbbb
mov
inc
add
pusha
fcmovu
and
dec
test
pop
jbe
sbb
pop
cmp
pop
call
mov
popf
rclb
ja
out
mov
push
shrl
nop
mov
pop
jecxz
add
hlt
popa
mov
pusha
subb
add
pop
out
push
and
fists
insl
sub
push
ss
lret
xor
jg
xor
mov
xor
pop
xabort
mov
out
add
repnz
xchg
pop
xchg
push
jns
into
push
sarl
call
cmp
lcall
data16
imul
sub
lods
sub
js
add
jnp
test
add
orb
pop
mov
iret
push
add
add
add
push
mov
or
inc
mov
subl
gs
mov
push
jnp
les
adcb
lock
arpl
push
mov
dec
sbb
or
test
sbb
lret
loope
mov
add
jmp
addb
push
popf
enter
inc
add
adc
cmp
fisubrs
cmp
stos
lret
testb
pop
lea
loopne
adc
cmp
inc
incb
push
push
jp
jp
add
test
in
xor
cmpl
push
sub
mov
and
xchg
push
cmp
cltd
loopne
xor
and
and
pop
mov
mov
test
jl
cs
sti
inc
and
adc
outsl
xchg
cmp
pop
lock
xor
cli
into
or
das
push
js
movsl
popa
es
add
pop
stos
lahf
inc
cmp
cmc
dec
rorl
cli
pop
add
xchg
sbb
sub
lock
aas
daa
fiaddl
out
in
dec
lret
in
or
mov
add
jmp
mov
xor
fwait
push
sub
leave
xor
sbb
out
cmp
dec
cwtl
push
adc
jb
aas
inc
sbb
pop
dec
pop
mov
movsl
repz
add
fistpll
push
mov
add
mov
add
sbb
cld
repnz
mov
out
andl
jmp
add
addl
clc
cmp
loopne
mov
adc
outsb
mov
push
call
insb
leave
cmp
xchg
aaa
ja
sbb
fbstp
jle
in
jmp
pop
dec
add
sbb
xchg
negb
mov
popa
jb
pop
in
or
sub
call
jbe
cmp
jle
add
inc
popa
pop
inc
inc
mov
orl
xorl
loopne
or
daa
pop
push
jne
or
cwtl
sbb
test
inc
cli
add
adc
pop
aaa
jmp
push
sahf
jae
je
das
mov
outsb
xchg
jmp
dec
sahf
xor
push
add
xchg
sbb
mov
stc
jge
cmp
jns
xlat
pop
js
js
jl
pop
stos
add
or
rolb
and
inc
lock
icebp
adcb
rcr
adc
addl
mov
add
cmp
sbb
add
mov
inc
or
mov
outsb
cld
ficoml
and
mov
push
push
add
pop
mov
shlb
dec
sbb
and
adc
cmp
lock
andl
or
or
dec
aas
add
test
pop
out
sub
shrb
scas
pop
mov
xor
cmp
mov
roll
push
pcmpgtb
cltd
adc
test
out
add
test
fs
in
cmc
sarb
or
popf
in
ret
mov
sbb
hlt
cmp
xchg
pop
jnp
xchg
addl
mov
jg
gs
lcall
cld
or
sbb
in
sub
or
or
sbbb
movsl
or
cld
ret
aas
daa
xlat
add
sbb
xor
cwtl
xor
cmp
jl
sarb
jmp
mov
and
add
hlt
cmp
mov
sub
popf
jecxz
cmpsb
xchg
pop
fisubl
xchg
movsl
aam
mov
movsb
call
mov
daa
mov
add
and
nop
add
mov
mov
fildll
scas
xchg
sub
movsl
loopne
push
dec
cmp
mov
in
xchg
fisubrl
adc
or
cmp
sub
sahf
add
push
push
dec
push
sbb
dec
jl
pop
xor
adc
pop
add
aad
xchg
add
xlat
sar
movsb
inc
cwtl
imul
cmp
sahf
arpl
sbb
rol
repnz
inc
or
cmp
lcall
cltd
hlt
orps
xor
mov
dec
jb
xor
cli
cmp
mov
sub
xor
mov
mov
imul
or
fstpt
repz
std
sbb
push
hlt
jne
arpl
enter
cmc
ret
movsb
subb
mov
aas
sbb
pop
inc
sbb
in
xchg
in
aam
jp
mov
lcall
add
into
inc
dec
cld
mov
shr
jp
cmp
shrb
or
pop
lock
adc
cld
push
pop
add
dec
cmp
add
fsts
mov
inc
rcrl
movsb
jb
mov
lock
inc
clc
lret
or
dec
test
orb
inc
cmpsl
popa
gs
leave
dec
mov
xor
sbb
shll
fs
addr16
and
jp
mov
push
push
and
xor
mov
mov
xor
jae
loopne
xchg
dec
scas
subb
mov
cmp
roll
adc
xlat
mov
jno
cmpsb
jno
hlt
cmp
xchg
les
loope
pusha
jne
dec
xchg
sub
loope
sbb
es
and
mov
test
jge
orb
ds
push
inc
enter
ret
cmp
mov
or
adc
jg
lods
je
and
fists
lock
pop
xor
adcb
test
orl
fcomps
and
push
dec
lcall
mov
adc
mov
in
pushf
push
pop
js
insb
enter
fsubl
in
iret
xor
popf
add
add
jno
push
add
jno
ja
add
call
pop
mov
mov
push
fcomps
adc
dec
mov
add
push
cmpsb
mov
adc
rol
mov
dec
adc
jl
lea
sub
mov
pop
inc
mov
or
sub
dec
push
femms
and
cwtl
pop
lcall
jne
cmp
movsl
inc
jl
fcoms
clc
mov
inc
add
mov
loopne
or
cmp
iret
mov
push
fbstp
into
or
leave
pop
mov
data16
insb
movsl
in
jg
test
test
into
incl
pushf
rcrl
stos
and
sti
je
add
pop
leave
dec
sbb
stos
mov
es
cmp
mov
subb
icebp
xor
out
sbb
sbb
fnstcw
nop
push
mov
cltd
xor
shrl
orb
add
mov
das
aas
mov
pop
xchg
and
xor
xchg
rorl
sub
ja
and
dec
or
int3
sti
lods
nop
je
inc
ret
push
xchg
add
and
add
pusha
loop
xor
push
fwait
and
popa
add
or
inc
xor
cld
or
cltd
stos
mov
xchg
cmpsb
je
lret
add
push
xchg
test
mov
inc
ret
and
loope
cmc
mov
or
je
xor
xor
add
jnp
lds
or
jl
sarl
loopne
lahf
mov
gs
and
dec
mov
movsb
out
pop
frstor
cmpb
inc
pop
mov
pop
lods
adc
inc
xchg
inc
mov
outsb
nop
mov
jo
mov
xchg
pusha
jne
mov
or
icebp
stc
add
clc
mov
cltd
add
sarb
adc
mov
jp
pop
sbb
fbld
rolb
mov
jno
nop
or
cmpsl
inc
push
orl
inc
xlat
std
addl
nop
add
stos
pushf
adcb
sbb
xor
ds
pushf
rcrb
mov
ret
sbb
ror
stos
dec
mov
icebp
mov
int3
mov
jle
adc
lea
leave
dec
inc
jb
test
pop
movsb
add
shll
and
bound
imul
enter
lcall
enter
pop
dec
and
and
sbb
or
inc
aaa
addb
aad
std
dec
xchg
loopne
nop
add
loope
mov
pop
insl
rcrl
pusha
lock
lcall
or
inc
xchg
pop
test
les
stos
adc
inc
fmuls
xor
jnp
movsl
pop
cmpb
adc
sub
rcr
ds
xchg
inc
add
imul
addb
or
pop
call
push
in
sbb
lods
xchg
outsb
dec
xlat
mov
aad
xchg
subb
xor
movl
pop
insl
xchg
dec
cwtl
hlt
shrb
fcomi
push
push
dec
js
and
sub
xor
shrl
sbb
stos
arpl
mov
mov
fwait
xchg
adc
nop
inc
xorl
xchg
mov
mov
push
clc
add
stos
push
xor
inc
fsubl
loope
pop
mov
arpl
and
loop
xchg
insl
popf
rorb
rolb
cwtl
fstpt
add
or
fwait
adc
clc
sub
xchg
inc
cld
jne
cltd
add
movsb
xor
mov
jbe
movsl
jmp
orl
shl
push
cmc
add
jne
xchg
and
add
cli
insl
daa
inc
movsb
mov
and
in
add
sbb
lcall
fisttpll
leave
faddl
and
orl
outsb
push
sti
pusha
pop
lea
aaa
sbb
or
ffree
daa
decb
mov
xor
cmp
and
and
in
inc
lea
cmpb
sarb
and
ret
jg
or
sti
mov
push
mov
cmp
dec
clc
call
xchg
aas
dec
testl
xchg
inc
mov
test
es
and
xchg
xor
movsl
call
int3
inc
cmpsb
mov
cmp
jmp
addb
push
cmp
sub
test
lret
and
sbb
sbb
add
push
add
in
pop
or
cmp
call
push
mov
add
and
ret
dec
shrl
jo
movntq
out
stos
lds
or
push
push
lock
sub
sarl
inc
lods
test
popf
adc
stos
icebp
rolb
pop
pusha
int3
or
les
add
imul
xchg
cli
out
mov
in
add
ficoms
lret
mov
repz
inc
pop
and
je
add
or
rcrl
xor
leave
std
cwtl
mov
bound
imul
or
mov
push
or
xchg
fs
mov
add
sbb
clc
dec
push
lds
test
cld
aaa
push
lret
mov
test
xlat
xchg
jle
push
xchg
popf
stos
mov
loope
mov
aad
roll
dec
cmp
push
xchg
mov
in
add
inc
ror
xchg
fstl
data16
dec
or
inc
push
iret
push
out
mov
rol
xlat
cmp
dec
push
pushf
insb
and
or
test
add
jnp
mov
sbb
jge
je
cmp
add
mov
int3
fs
add
scas
dec
or
rclb
stc
mov
lret
push
icebp
mov
subl
mov
jge
and
mov
mov
cld
stos
aad
inc
les
cmpsl
jno
push
mov
in
inc
push
andb
sti
insb
pop
repnz
cld
lcall
sarl
lea
inc
mov
add
aam
pop
xor
mov
pusha
pop
sbb
cmp
fcomps
jl
inc
xchg
add
sbb
xchg
clts
pushw
call
add
pop
stc
mov
push
incb
jbe
fs
mov
sti
cwtl
cmp
iret
sbb
push
sbb
cmp
pop
jb
jecxz
push
sub
or
add
aam
jge
out
mov
enter
add
mov
add
fistl
out
jl
or
jge
ss
mov
mov
mov
push
pop
jmp
fiadds
pusha
xchg
lret
insl
int3
jne
scas
pop
or
add
xacquire
push
mov
mov
push
cmp
pop
xlat
xor
inc
mov
lret
imul
orl
pop
inc
mov
test
not
jns
in
jbe
cltd
jo
mov
imull
stos
sbb
popl
sbb
sbb
add
mov
out
add
ljmp
adc
pop
pusha
or
punpcklwd
inc
cmp
in
mov
sbb
push
dec
jne
add
pop
and
cmc
xor
adcl
fisttps
popl
jb
pop
mov
out
addb
inc
adc
fiadds
xchg
jbe
cmp
jp
cmp
xor
fldcw
arpl
ret
jne
movb
cltd
pop
sub
roll
lds
out
data16
add
add
stos
loopne
xor
pop
and
xor
add
data16
jle
add
cmc
shrb
xor
pop
sbb
rcll
jl
cmp
pop
or
add
push
sbb
mov
cmp
add
jle
out
mov
cld
mov
mov
es
std
sarb
mov
add
mov
fimuls
add
mul
pop
test
mov
imul
shlb
pop
push
pop
push
jg
jns
aas
dec
xchg
nop
inc
mov
imul
hlt
bnd
pop
mov
pop
sub
insl
and
ljmp
xchg
mov
rorb
or
add
xchg
dec
dec
mov
inc
add
push
enter
pcmpeqd
mov
lret
mov
clts
je
and
rcrl
add
add
loope
cmp
add
xchg
adc
mov
pushf
cmpxchg
pusha
mov
add
aam
data16
lahf
inc
add
push
mov
add
xchg
xchg
sbb
std
mov
insb
aas
sub
pusha
mov
andb
add
push
int3
xchg
test
and
add
adc
mov
ret
jmp
movsb
sbb
adc
das
xlat
add
add
imulb
std
sarb
mov
hlt
mov
pushf
test
in
push
popf
scas
xor
movsl
cmp
std
lock
xor
sub
vxorps
cmp
jns
adc
cld
jge
mov
mov
call
inc
bound
xor
aad
inc
gs
dec
cmc
fcmovu
xchg
mov
icebp
jns
loopne
inc
add
inc
enter
or
mov
movsb
dec
inc
out
jle
cld
ja
pusha
data16
mov
add
pop
dec
jns
xchg
mov
in
add
inc
sahf
movsl
and
mov
lock
mov
test
lcall
jbe
xchg
add
lds
or
inc
and
mov
aas
jle
int
adc
fnstenv
test
sub
sbbb
dec
lea
mov
add
mov
add
cmp
lock
add
jp
aad
call
les
lcall
sti
push
mov
ja
or
or
sbb
int3
or
jne
push
shlb
xor
dec
cmpsl
sub
lea
outsb
aam
adcb
pop
add
mov
iret
adc
insb
jae
scas
jnp
enter
mov
arpl
rcrb
out
pop
fstl
add
ss
hlt
in
sbb
pop
or
inc
add
enter
adc
test
mov
lods
pop
mov
fwait
rcl
lret
negl
aaa
mov
in
add
inc
stos
dec
and
aas
scas
add
mov
mov
xchg
cwtl
push
daa
rolb
repz
push
pop
xchg
popa
cmp
cli
adc
hlt
mov
cmp
xor
movsl
add
jnp
nop
add
or
lret
add
pop
scas
fcompp
sbb
outsb
pusha
hlt
mov
ss
inc
xor
cmpb
iret
adc
outsb
add
in
inc
add
xor
mov
add
or
or
jb
out
xor
cmp
arpl
loopne
dec
in
bound
add
sbb
and
jmp
inc
repz
inc
clc
fbld
sub
jne
pcmpeqw
testb
mov
mov
and
xor
inc
lcall
iret
sbb
add
cld
or
lret
xor
popf
lds
or
mov
adc
sarb
hlt
adc
repz
sub
xchg
adc
movb
sub
aaa
sub
ret
popf
and
or
push
mov
dec
add
repnz
or
outsl
cmp
cmp
xor
sbb
cld
movsb
add
adc
push
and
jns
pop
jb
rorl
sbb
into
cmp
mov
cmpsb
fsubl
add
je
mov
jl
mov
push
aas
ss
adc
pusha
movsb
sti
stos
add
call
fdivrs
scas
lahf
add
ret
lds
sub
pop
in
stos
mov
xchg
sub
movsl
in
mov
adc
mov
pop
out
scas
mov
rclb
mov
pop
loope
andb
xchg
adc
add
add
pop
mov
push
sub
scas
sbb
sub
je
sbb
add
int3
pushf
sub
sbb
inc
iret
scas
mov
and
push
mov
mov
sbb
lret
add
aad
movsb
js
dec
mulb
and
adc
aaa
jne
cmp
cmp
rorl
clc
mov
aas
xlat
adc
cmc
in
loope
inc
inc
fstpt
cmpsb
jae
pop
xchg
and
js
sarb
sbb
push
lock
pop
orb
xchg
in
jo
dec
popf
add
addb
cmp
push
xor
add
js
xor
mov
cmp
cmpl
and
insb
lahf
leave
orb
cli
shlb
mov
les
xchg
int3
add
xchg
xchg
add
dec
js
dec
xchg
cmp
fs
orb
pop
sub
dec
lock
imul
add
pop
add
and
stos
cmp
sub
roll
mov
clc
fcomps
mov
aad
js
adc
ret
shlb
mov
inc
add
das
iret
rorb
add
dec
xor
adcl
clc
pop
cmpsl
mov
or
cmpsb
adc
or
or
loop
xor
and
fbld
sbb
xor
or
dec
or
or
outsl
pushf
cmpb
lods
mov
mov
movsl
or
loopne
jbe
ja
js
jns
jp
jnp
jl
mov
jg
orb
andb
inc
test
inc
cltd
nop
adc
rorl
mov
cs
lods
movsl
or
mov
gs
cmp
add
mov
mov
jno
sysexit
dec
mov
popl
inc
sub
add
mov
shlb
arpl
incl
ljmp
andb
inc
leave
icebp
cmp
xchg
cmp
mov
jp
mov
or
mov
cmp
aad
or
lea
inc
inc
ds
adc
notb
or
subb
jge
xor
cmp
dec
or
dec
sbb
les
test
dec
sbb
clc
rolb
roll
push
xchg
sub
pushf
in
sbb
dec
mov
sbb
mov
add
or
and
mov
pop
cli
inc
or
js
test
add
stos
mov
pushf
adc
adc
pusha
stos
xor
add
push
js
pop
cli
push
cmp
add
adc
call
out
push
or
xor
pop
push
cmp
out
jl
push
and
jle
fnstcw
push
pop
rep
add
ds
iret
dec
mov
nop
dec
rolb
xchg
test
cmp
and
test
mov
pushf
ret
lods
add
dec
in
movsl
fsubrp
jb
outsb
pusha
pop
sub
stc
jo
add
xchg
push
push
sub
add
mov
and
sti
shll
stos
imulb
jle
mov
mov
push
xchg
pusha
sub
add
push
sbb
pop
gs
sub
pop
sahf
arpl
add
push
sbb
adc
push
dec
stos
pop
orl
js
clc
fs
sub
inc
sbb
pusha
and
xlat
adc
inc
scas
pop
sub
xor
pop
pop
pop
es
bound
cmp
aas
mov
call
adc
imul
das
sbb
sub
pop
mov
add
or
dec
stos
xor
rclb
clc
add
jg
add
arpl
rcrb
das
dec
cmpsb
pop
cwtl
inc
push
mov
cmp
dec
lods
pop
cmp
icebp
or
push
mov
and
jle
adc
xor
pusha
sub
add
pop
and
loopne
pop
mov
arpl
inc
add
es
rcll
sbb
in
mov
or
xor
movsb
jl
addr16
add
leave
cmp
sub
rorb
adc
xchg
mov
or
repz
imul
mov
xchg
cli
mov
cltd
push
dec
cmp
cmp
test
push
push
inc
inc
add
adc
mov
decb
or
or
cmpsl
sbb
sbb
xlat
das
dec
cmp
adc
call
fidivl
loop
fadds
ret
mov
push
lret
addr16
xor
aas
sbb
addb
std
and
jle
insb
mov
inc
dec
and
addb
mov
repz
jmp
cmp
dec
inc
filds
stos
mov
les
adc
mov
sbb
fs
mov
outsl
pop
or
mov
je
push
push
jne
ds
jbe
pop
mov
adc
es
xor
stos
ret
dec
adc
sbb
lea
repz
arpl
sbb
nop
jnp
roll
push
jg
sub
adc
jp
pop
inc
mov
or
dec
jne
cmpl
js
jl
outsl
js
lods
sbb
adc
popa
inc
inc
mov
cmp
pop
xorl
stc
xlat
mov
mov
cwtl
adc
add
sub
push
movsl
cmp
inc
add
add
repnz
nop
or
xchg
pop
dec
orb
mov
mov
or
repz
mov
jg
pop
cwtl
outsl
popa
in
loop
jge
mov
inc
pop
mov
mov
inc
and
sub
fdiv
insb
inc
xchg
nop
inc
ret
rol
fsubl
mov
xor
mov
mov
loop
pusha
and
mov
mov
data16
dec
push
xchg
sub
std
lea
xchg
dec
and
jp
or
push
in
loopne
mov
xchg
add
inc
dec
inc
mov
adc
cmc
pushf
and
fucomip
sub
cmpsl
testl
ret
repnz
popa
js
push
clc
outsb
sbb
xor
inc
in
xor
es
pop
sbb
call
jb
inc
sbb
in
sub
sub
mov
dec
repnz
lret
sub
arpl
add
outsl
jb
mov
popf
dec
add
push
xor
cmp
cmp
xchg
dec
testl
dec
ds
inc
pop
add
adc
lea
rcrb
das
enter
test
add
aad
pop
pop
aam
add
mov
rclb
push
stc
jmp
adc
lds
mov
sahf
cwtl
pop
sbb
roll
or
jmp
arpl
outsb
mov
adc
sbb
negl
outsb
sub
adc
aaa
sbb
dec
sub
int3
dec
cmp
sub
or
xchg
jb
sub
rcll
or
or
or
add
cwtl
xchg
push
sbb
sub
insb
lcall
popl
test
test
shlb
mov
xor
sub
or
int
sub
jo
sbb
and
add
roll
insl
shll
xchg
xor
sub
mov
pusha
in
xor
mov
inc
sbb
dec
or
fld
add
outsb
dec
sbb
dec
or
fldenv
mov
lods
mov
sub
les
jg
xor
pop
jae
sbb
mov
dec
call
mov
jl
arpl
mov
pop
pop
nop
add
xchg
mov
mov
in
or
xchg
mov
popa
or
fs
dec
dec
sub
push
xchg
sub
inc
mov
call
push
shl
or
addb
inc
movsl
jp
lods
call
mov
or
add
mov
xor
test
cmp
lods
out
loopne
pushaw
add
sbb
jmp
mov
add
test
add
jns
xor
pop
popa
repnz
subl
jne
sbb
mov
lods
aaa
enter
inc
fcomps
ret
sub
ret
jnp
insl
fcomps
int3
or
jns
xlat
cmp
shl
fldenv
cmp
mov
jns
and
push
cli
gs
jp
fdiv
jg
orl
and
mov
push
les
xchg
push
aaa
into
ljmp
sbb
add
inc
sbb
ja
xadd
insb
jo
dec
cld
fists
xor
lret
push
dec
push
js
addr16
mov
cmpsl
insl
fstps
lock
or
repz
dec
mov
push
iret
lds
pop
inc
test
faddl
cld
sarl
add
adc
shlb
pop
sub
add
pop
movsb
pusha
and
lds
arpl
or
add
rorl
repz
adc
xor
or
xchg
sahf
push
push
adcb
rcll
add
cmpsl
xchg
sbb
and
js
lock
mov
mov
ja
xchg
cmp
mov
jne,pn
in
add
negb
out
aas
outsl
mov
repnz
xor
adc
xchg
or
imull
mov
add
or
iret
sub
shlb
push
daa
std
push
xchg
mov
dec
and
test
cmp
insb
pop
and
and
dec
dec
xor
sbb
xchg
call
add
in
bound
inc
cmp
rcrb
scas
ss
adc
xor
jb
xlat
enter
or
dec
es
jg
sbb
rclb
mov
add
aad
cwtl
cmp
loope
fucom
dec
jmp
add
lahf
data16
test
sti
lods
pop
adc
outsl
cmp
cmp
and
add
inc
inc
cmp
push
jge
lcall
jne
push
adc
in
add
sbb
int3
dec
xor
pop
hlt
add
and
int3
or
sub
add
jle
cmpsb
add
xor
jl
adc
fsubl
xchg
push
icebp
shl
xchg
xor
jbe
dec
stos
sub
jno
dec
int3
or
inc
mov
xrelease
int
sbb
ror
popf
aam
jecxz
jne
cmc
icebp
add
xlat
jmp
into
sbb
sbb
push
sarb
push
cmp
jb
lods
sub
js
add
jbe
sbb
add
fadds
sbb
jmp
mov
mov
xor
mov
sarb
jl
jecxz
lahf
aam
jge
cmp
daa
ss
pusha
mov
cmp
inc
pushf
pop
shlb
sahf
mov
stos
sbb
in
loope
cmc
sti
aaa
and
int
pusha
cmp
adc
mov
jg
sub
stos
xor
enter
adc
mov
and
popa
sarb
add
jbe
jge
xchg
inc
mov
sbb
and
sbb
js
add
mov
cmp
inc
pop
push
lock
adc
js
rcrb
jmp
jbe
xchg
add
imul
repnz
jo
int3
mov
pop
xchg
push
add
fsubrp
pusha
mov
test
outsb
sbb
cmp
addr16
lods
cld
cwtl
test
mov
jae
inc
add
xor
rorl
xchg
movsl
subb
inc
jbe
dec
call
mov
pushf
or
xor
out
hlt
mov
repz
cmp
mov
sbb
xlat
sub
mov
scas
outsl
jl
add
jns
xor
or
xchg
dec
mov
lock
jo
jp
add
ja
icebp
test
add
shlb
sub
dec
jbe
ds
pop
pop
jne
in
sub
add
popa
cli
xor
dec
and
mov
jb
mov
enter
pop
add
into
jl
adc
cmc
das
or
mov
inc
js
xor
pop
dec
popf
imul
inc
rorl
sbb
sbb
jge
rcl
add
aam
testl
dec
pop
jmp
mov
lock
out
cld
add
jle
mov
fstpl
arpl
jg
sarb
lahf
xchg
add
pusha
xor
jnp
sub
adc
loope
add
aad
jbe
test
les
xchg
lahf
mov
lods
in
add
lods
or
push
add
xchg
sbb
mov
inc
xor
pop
ja
add
mov
outsl
arpl
jbe
test
pop
xchg
int
inc
sub
imul
adc
lods
out
add
movsb
iret
cmp
mov
fcoms
rorb
shrb
ja
push
faddl
mov
add
repnz
mov
push
xor
add
fincstp
sub
out
out
loop
aam
or
adcl
xor
sahf
movsl
add
xchg
ss
aaa
add
popa
les
fcmovbe
cmp
movsb
jbe
out
push
add
jo
xchg
stos
mov
add
test
in
cwtl
mov
ljmp
inc
daa
add
pop
jnp
or
imul
or
cmp
daa
clc
push
pop
pop
rcl
lcall
mov
xor
in
and
gs
bound
clc
pop
add
out
call
int3
out
and
or
pop
sub
mov
mov
or
fwait
scas
cmpsl
xchg
xor
mov
add
inc
mov
lods
jne
push
add
dec
in
sbbb
addr16
dec
mov
shlb
in
xrelease
fisubrs
or
mov
lock
frstor
fdivs
add
cmp
mov
in
jo
ret
mov
dec
stos
pusha
sub
nop
test
sub
push
bound
movsl
fadds
fisubl
pop
inc
add
push
mov
inc
shll
adc
cli
and
inc
pop
fcomps
inc
jns
lret
loopne
sub
enter
cli
cmp
mov
inc
lods
cmpsb
pusha
js
int3
mov
movsb
sahf
adc
loop
stos
repnz
data16
loope
cmp
cmp
push
or
in
adc
outsb
shlb
xor
or
push
mov
sbb
ss
jo
mov
test
sbb
int
add
push
xor
xchg
leave
andb
jbe
ffree
cmp
or
cmp
sbb
inc
xor
fldl
dec
out
lret
mov
in
and
enter
mov
add
jl
mov
pusha
idivl
add
je
pop
fstps
xor
add
rep
mov
test
imul
push
xchg
xchg
popa
jl
sub
mov
std
lock
sbb
in
sysenter
push
pusha
bound
lods
shll
fidivs
js
mov
xor
mov
outsb
dec
pop
leave
daa
or
fdiv
mov
insl
shlb
fistl
inc
dec
popa
sub
xchg
cwtl
call
mov
mov
jge
and
add
cld
loop
xor
js
add
fistl
shlb
fadd
je
nop
mov
dec
jge
leave
rolb
pop
pop
aaa
sub
in
outsb
repnz
inc
notb
stos
in
mov
stc
mov
js
dec
jno
add
in
inc
outsl
adcl
xor
adc
jne
add
js
xchg
dec
sub
sub
sbb
push
mov
xor
sbb
cmc
push
add
sub
and
jle
pop
sub
sub
mov
mov
jmp
sbb
inc
fmul
xor
pusha
push
jl
fiaddl
ds
inc
mov
and
or
add
and
hlt
add
loopne
fsubp
or
fists
lret
test
sub
sbb
xchg
or
std
clc
adc
lret
jp
push
sub
jle
xchg
mov
inc
gs
adc
imul
pushf
pop
scas
ds
js
mov
sahf
data16
nop
rcrb
inc
jae
enter
pop
xor
jns
cmp
and
pop
insb
add
pop
in
xchg
repnz
aam
xor
addb
add
mulb
pop
loope
lods
pop
mov
dec
pop
inc
cmp
cmpsb
add
jnp
pop
js
nop
pop
push
sub
or
xor
xchg
or
add
add
ficoms
loopne
addl
mov
addb
ret
mov
mov
pop
or
xor
cwtl
dec
mov
or
cli
cmp
sub
aam
subb
lahf
fistpl
pusha
popa
sub
andl
imul
mov
and
mov
enter
or
xchg
fsubs
out
sub
inc
jge
xchg
in
add
insb
jb
ss
cmp
and
mov
movsl
pusha
sub
dec
pusha
sub
mov
jno
add
ds
test
bound
or
out
push
test
add
fs
xchg
je
test
xlat
add
jns
add
or
pop
sbb
adc
adc
cmc
aaa
jne
fstpl
lods
add
in
dec
push
mov
fwait
sub
add
mov
mov
decl
xor
xchg
in
add
pusha
sub
pop
roll
cmp
dec
cmpsl
sbb
mov
test
sub
sub
bound
add
in
push
and
add
shufps
push
or
pop
gs
add
subb
mov
ss
scas
clc
xchg
xchg
int3
or
scas
add
hlt
mov
cmp
daa
enter
mov
and
in
jl
pop
push
es
out
adcb
lods
push
pusha
push
mov
push
jnp
add
inc
in
adc
rcrl
jmp
dec
add
les
out
test
add
cmp
pop
inc
lret
push
mov
ja
fwait
pop
xor
and
mov
ret
xchg
cmp
xor
add
sbb
push
or
or
push
adc
fistpll
in
test
loop
inc
les
pop
or
cltd
xchg
mov
lods
and
mov
dec
add
or
int3
ret
add
movsb
xor
add
testl
mov
testb
dec
push
mov
enter
rcrb
add
rcrb
lods
sbb
inc
popf
nop
adc
shlb
fwait
mov
fbld
pusha
add
imul
lret
mov
and
adc
xchg
jns
fs
dec
adc
mov
adc
push
bound
fsubrl
jmp
mov
mov
in
add
dec
xchg
push
fdivl
cmp
mov
and
aad
sub
xor
push
add
push
sub
xor
cmpsb
sub
mov
cwtl
movsl
out
adc
insl
mulb
popf
sub
mov
jbe
xor
fbstp
jo
mov
add
dec
dec
mov
lods
push
mov
test
jns
add
ret
iret
push
xchg
nopl
add
fdivrl
sahf
test
or
fadds
mov
lds
add
xor
add
jle
ja
sub
fdiv
rolb
bnd
push
inc
cwtl
adc
and
mov
mov
mov
loop
pop
mov
xchg
lret
push
jnp
xor
mov
inc
jbe
lods
les
cmpsb
mov
add
jge
jp
insb
inc
dec
incl
aaa
sub
js
nop
adc
pop
dec
adc
cli
pusha
insb
cmp
loopne
sbb
push
sub
mov
push
push
ror
ds
or
or
fcoml
push
cwtl
in
jns
loop
cmp
mov
or
and
daa
xchg
loopne
cmp
cli
outsb
mov
clc
mov
xor
test
add
loope
pop
jbe
or
imul
inc
or
or
cmp
inc
inc
mov
icebp
xchg
and
orb
dec
push
jmp
pushf
fldcw
lret
pop
dec
mov
pusha
xor
je
cmp
out
add
jge
andl
xor
sub
in
test
jno
and
or
pop
add
out
adc
fnstenv
test
pop
daa
nop
sub
dec
cmp
icebp
add
add
cmp
push
in
xor
inc
loope
mov
fisubs
stos
cmp
add
fisubrl
ret
add
popa
xor
lcall
daa
jecxz
pop
push
popa
mov
das
cwtd
adc
mov
lock
or
imul
sbb
xchg
or
push
adc
inc
das
jnp
dec
aad
dec
inc
out
xor
jb
daa
lds
into
pusha
cmpsl
pop
mov
dec
mov
sbb
insb
mov
ja
out
lock
sbb
add
sub
push
ret
cwtl
inc
inc
mov
xor
jmp
mov
add
sbb
xchg
dec
add
loopne
xchg
xor
or
pop
or
add
xlat
cmp
andl
xor
xor
mov
xchg
add
adc
cli
sbb
sub
icebp
enter
dec
add
inc
mov
adc
lds
xor
pop
push
mov
out
pop
push
aaa
inc
pushf
popa
inc
jl
shrb
fnstcw
in
add
add
mov
jl
pop
fcmovbe
dec
mov
or
fwait
and
inc
adc
xlat
aaa
rolb
xchg
lret
jl
mov
push
repnz
mull
lcall
cli
pop
popa
mov
xchg
popa
loopne
xchg
rorb
lock
push
faddl
fadds
and
mov
cmpsb
test
cmpsb
lret
pop
jnp
add
idivb
and
dec
mov
add
ficompl
lret
sub
out
gs
jns
and
pop
push
mov
pop
mov
enter
jl
icebp
fadds
icebp
pop
inc
ds
daa
aaa
and
push
lret
cltd
ljmp
mov
ja
add
xchg
mov
adc
pop
and
cmp
add
jo
shrl
in
xchg
es
pushf
mov
mov
push
xchg
into
test
add
int3
repz
mov
mov
xchg
nop
jg
add
push
hlt
jmp
loope
push
mov
lret
loopne
stc
add
xchg
ss
ja
xor
iret
or
and
mov
pop
fcompl
add
and
mov
add
repnz
cwtl
je
adc
add
loopne
push
mov
fldcw
mov
mov
cmp
sbb
mov
insb
call
lock
and
push
add
push
push
dec
out
or
xchg
bnd
mov
and
test
shlb
adc
add
push
mov
nop
loopne
mov
daa
shl
arpl
or
and
push
ja
add
pop
dec
inc
nop
add
hlt
mov
dec
and
or
jo
cmpsb
fstps
or
mov
push
loopne
lds
or
or
pusha
icebp
sbb
xor
add
jbe
sub
and
lret
rolb
jbe
and
test
mov
xchg
xor
lock
add
sbb
xlat
dec
lcall
inc
mov
stos
push
and
inc
add
pop
fisubl
mov
repz
add
jnp
xchg
out
loopne
push
mov
lods
lret
js
or
mov
pushf
or
cmp
cld
or
mov
jae
sub
dec
add
push
sahf
outsl
les
nop
or
fcmove
push
add
xchg
aad
dec
adc
iret
scas
nop
lock
stc
popa
sub
mov
icebp
loop
icebp
mov
or
nop
clc
les
xchg
dec
js
pop
loopne
in
in
or
pop
aad
sbbl
cwtl
es
sbb
gs
pop
cld
pop
adc
and
xor
adc
loop
adc
cmp
push
test
add
js
xchg
lret
fcoms
sub
lock
sbb
push
gs
mov
movsb
sub
jno
sub
push
add
pushf
in
scas
je
jl
sldt
cmc
hlt
lock
loop
add
aad
mov
out
xchg
and
les
pushf
cmpl
or
stc
das
imul
mov
push
adc
repnz
mov
mov
hlt
pushf
mov
xchg
mov
into
fmuls
mov
xor
sahf
push
dec
jnp
shrb
adc
arpl
pop
cli
popf
mov
mov
ret
int
push
push
xor
dec
pop
mov
cld
xlat
shr
out
cmp
fistl
dec
push
jo
in
test
popa
jl
test
push
inc
into
or
arpl
push
les
test
xlat
cmc
daa
subl
cltd
pop
fcompl
and
mov
add
or
clc
jecxz
adc
pop
repz
sub
jbe,pn
jo
idiv
fnstenv
sub
nop
addb
xor
sbb
mov
fsubs
mov
add
and
inc
negl
fildl
aaa
add
or
lods
mov
mov
popf
jmp
adc
int
jno
cmp
fldlg2
loop
ljmp
add
pusha
rcrl
sub
lods
cmp
jo
cmp
push
pop
bound
out
cmp
ret
fldenv
mov
outsl
mov
push
je
sbb
int3
adc
lock
les
cld
mov
add
xchg
je
stos
or
pop
mov
mov
sbb
negb
out
add
push
test
inc
ja
mov
add
jg
mov
xchg
xchg
adc
movsl
cmp
jns
mov
push
sub
push
inc
fadds
add
fnstcw
jnp
scas
ds
loop
popa
adc
add
xor
jecxz
movsl
xchg
cmp
xor
pushf
push
pop
pusha
xchg
sbb
jmp
frstor
mov
inc
ret
xchg
leave
sbb
imul
ja
aaa
cmp
mov
and
mov
adc
jecxz
push
and
mov
stos
or
ret
arpl
adc
pop
xchg
dec
sub
jmp
cmp
dec
adc
push
mov
push
cmpsl
std
mov
sub
repz
pop
aaa
mov
fidivrl
imul
loopne
scas
jb
xchg
mov
rcr
orb
es
fbstp
icebp
push
and
js
xchg
push
adc
mov
add
cmp
insl
dec
sbb
jb
ret
aas
adc
mov
mov
sub
int3
cld
push
cltd
icebp
add
stos
sbb
fs
push
mov
mov
lahf
add
enter
pop
xor
add
xor
sbb
inc
cmp
add
or
or
sub
inc
cmp
shl
fnsave
shlb
inc
cmp
push
or
faddp
loop
xchg
in
loopne
or
jle
scas
xor
cmp
pusha
inc
jl
ja
nop
xchg
push
imul
push
pop
int
add
gs
fs
push
xchg
adc
ljmp
fmuls
push
popa
imul
pop
pusha
or
je
xor
das
cmp
cmp
xchg
mov
pop
pop
mov
in
das
add
subl
pop
hlt
cmc
adc
jbe
and
mov
aas
shll
adc
in
push
or
fldl
daa
lret
stos
dec
pushf
cs
and
cwtl
clc
in
jae
pop
pop
sbb
shlb
repnz
xchg
pop
mov
xor
xchg
pusha
adc
insl
jge
mov
dec
sub
sbb
and
ljmp
lds
push
or
adc
dec
xchg
cmpb
ds
loop
or
loopne
sbbl
add
jg
das
or
inc
test
rcrl
out
sbb
mov
or
and
dec
add
andl
in
jno
pop
cwtl
test
xchg
mov
imul
add
add
popf
pop
mov
xchg
push
or
sbb
xchg
clc
inc
out
punpckhbw
adc
sbbb
pop
call
adcb
push
xchg
shrl
fsts
xchg
loopne
pop
in
inc
sub
in
and
scas
cwtl
push
add
jge
gs
shll
lret
aam
cmp
pop
jb
jecxz
lods
es
jne
sub
mov
add
movsl
insl
jmp
pop
orb
mov
std
dec
pop
jbe
sub
or
mov
xlat
sbb
jb
arpl
sub
sub
nop
es
dec
adc
and
mov
add
hlt
sub
adc
rorl
pop
filds
and
shll
popa
addl
clc
jnp
xorb
sub
fstl
imul
fs
clc
inc
into
pop
mov
adc
sbb
push
pop
xchg
cmp
cmp
pop
mov
sbb
fiaddl
sbb
dec
rcrb
call
popa
push
pop
cmpl
sub
and
adc
add
popa
xchg
lret
mov
aam
dec
cmp
and
enter
push
sub
adc
pop
adc
clc
sarb
lock
repnz
pop
aam
lea
loopne
xlat
pop
cmp
mov
inc
mov
nop
popa
mov
pop
clc
in
loopne
lods
xor
add
lds
iret
add
adc
add
jmp
fldt
pop
add
arpl
jo
pusha
imul
pusha
icebp
pop
fldcw
gs
jb
jg
adc
sbb
mov
dec
pop
xor
les
insb
std
nop
aam
outsl
test
pop
xor
mov
add
xor
or
lock
lret
jb
bound
scas
mov
bound
xchg
ret
jp
cli
xor
icebp
push
mov
sahf
push
aam
mov
inc
hlt
sub
nop
push
push
jae
cli
mov
push
inc
or
loopne
pop
add
or
and
out
and
push
lds
mov
push
push
jne
loopne
or
test
notb
cli
add
repnz
aam
ljmp
cmp
hlt
dec
daa
jne
pop
shlb
stos
nop
call
rcrb
enter
adc
pop
and
ss
lock
inc
test
add
mov
mov
je
test
cld
cmp
stc
lret
into
sbb
dec
pop
imul
push
loopne
add
pop
sub
pop
enter
inc
mov
or
sub
adc
add
pop
lgdtl
dec
push
sbb
cmp
cmp
adcb
shl
or
xor
enter
push
testl
int
loope
out
mov
cs
lock
add
pushf
es
mov
les
cs
das
push
pop
add
out
mov
jo
daa
add
xchg
lahf
sbb
fdivrs
fstpt
dec
add
jecxz
mov
cmpsl
cmovp
int3
sbb
rcrb
mov
jecxz
gs
add
lods
and
mov
xor
dec
scas
gs
js
lods
cmp
adc
cmc
xor
mov
push
lea
adc
lcall
fwait
roll
and
cmp
and
push
js
cs
sbb
adc
repz
cmpsl
cmp
sahf
leave
sbb
js
jo
addb
push
pop
repz
lahf
cmp
dec
push
in
fstl
jbe
push
mov
cmp
clc
jns
or
idivl
jb
jge
mov
mov
loopne
add
jecxz
pop
sbb
cmpl
dec
cmp
sbb
clc
push
sbb
in
add
or
sbb
ss
cmp
jo
pop
fs
mov
insb
aaa
sbb
aad
lea
pop
inc
and
sub
addl
mov
sub
lret
aas
fmuls
sub
dec
pop
in
fidivs
and
adc
adc
or
push
data16
or
inc
xchg
add
popa
fiaddl
jle
and
loop
pushw
and
add
arpl
loope
inc
fsubrl
lcall
outsb
or
scas
dec
shlb
xchg
adc
push
inc
xor
and
sub
push
in
pop
sbb
shll
in
lods
cmp
stc
xor
pop
sub
pop
dec
test
cli
or
int
ljmp
pop
push
push
or
xlat
ss
jne
push
into
sub
test
xchg
int3
adc
jmp
fsubr
xor
or
cmp
sti
test
push
roll
add
jmp
sub
cld
icebp
xor
shlb
out
cltd
pop
jl
pop
stos
adc
mov
inc
pop
push
aaa
xchg
adc
jecxz
dec
enter
jns
or
mov
mov
ffree
pusha
data16
mov
add
mov
inc
mov
and
cltd
or
mov
cwtl
or
clc
cmp
jg
add
in
xchg
pop
adc
inc
and
xor
test
inc
jo
push
jge
xchg
add
test
jnp
inc
je
mov
add
gs
lods
adc
mov
xchg
ljmp
or
cs
in
loope
mov
cmp
cld
inc
or
pop
push
ss
cs
and
loop
or
daa
andl
jns
shrb
stc
xor
xchg
sbb
aad
mov
push
or
dec
push
fcoml
xchg
nop
cwtl
mov
pop
fs
inc
mov
test
dec
dec
subb
and
jo
ljmp
aam
filds
mov
dec
repnz
lcall
jp
loope
es
and
rclb
pop
jge
js
in
filds
out
incl
ret
mov
xor
cld
pushf
cld
add
push
push
sub
fs
mov
dec
fcoms
mov
inc
mov
loopne
sub
push
shrb
pop
push
les
inc
add
in
movsl
test
popa
or
sbb
or
mov
enter
cmp
push
aam
enter
adc
xchg
loopne
das
jo
pop
sub
pop
iret
mov
dec
inc
lock
add
aaa
es
mov
mov
dec
or
push
cmpl
mov
mov
dec
adc
nop
xchg
dec
or
pop
dec
adc
sub
mov
or
add
loop
shlb
scas
test
gs
xchg
or
cmp
jge
arpl
mov
sbbb
push
jbe
jp
les
fs
inc
gs
rclb
jle
add
jns
or
pusha
adc
xlat
das
cmpsl
rcrb
cmpsl
pop
xchg
cwtl
out
push
daa
nop
insb
mov
jae
add
in
jb
shlb
cmpsb
or
xchg
lock
ljmp
xchg
mov
cmc
jl
icebp
push
jecxz
movsb
addl
add
inc
in
scas
pop
pop
inc
rolb
and
js
mov
mov
inc
fs
rorb
or
sub
sbb
jne
sbb
add
popf
adc
hlt
add
or
jp
pusha
enter
sub
loope
jnp
xchg
mov
out
insl
jns
shlb
dec
dec
mov
pusha
sub
sub
imul
cltd
add
cmp
cmpsb
mov
lods
clc
adc
mov
in
arpl
pop
jle
pushf
int3
inc
sub
gs
push
test
jo
sti
int
xchg
bound
mov
dec
inc
rolb
inc
and
call
inc
xchg
js
div
add
jmp
stos
daa
testb
sbb
sbb
sbb
and
xor
rorb
add
sub
es
xchg
jne
aam
std
xor
mov
fcompl
adc
pushw
dec
add
cmc
rorb
cmpsb
int3
cwtl
sbb
and
lcall
adc
ret
in
xchg
cmp
ss
dec
pushf
call
lcall
push
xchg
inc
dec
lds
je
es
test
sbb
mov
std
inc
pop
mov
xchg
xchg
int3
and
xchg
xor
pop
mov
inc
adc
ljmp
adc
push
add
fiaddl
shrb
fsub
pushf
push
dec
mov
push
loop
and
outsb
or
xor
pusha
dec
in
popf
cmp
nop
lods
cmp
cli
mov
movsl
orl
sub
mov
int3
js
daa
pop
pop
sbb
clc
inc
loope
sarl
sbb
imul
bound
jp
jecxz
cmp
cmp
test
xchg
cmpsb
in
cltd
rep
push
xchg
dec
lods
xchg
add
mov
and
popa
jae
mov
push
dec
mov
cmc
add
xchg
push
lock
cmp
jnp
cmp
iret
xor
dec
push
and
faddl
test
jnp
sbb
data16
sub
xor
test
and
mov
inc
cmp
rorb
pushf
aas
cmp
subb
nop
xor
jl
push
cmp
and
mov
xchg
lret
mov
pop
rorb
xor
enter
mov
adc
cmp
add
jmp
aad
call
xor
mov
int3
adc
cltd
loopne
pushf
adc
mov
es
mov
push
adc
jnp
mov
mov
adc
or
pop
mov
mov
pop
jg
xchg
bnd
adc
jmp
add
pop
add
cmove
xor
or
dec
jae
repnz
ret
fnstsw
add
xor
pop
fimull
add
lret
sbbb
add
out
or
mov
adcb
add
or
in
test
lds
je
lods
orl
out
cltd
adc
cmpb
loopne
push
sbb
aam
jecxz
loope
mov
ds
mov
hlt
inc
or
mov
ret
or
sbb
enter
xchg
jg
push
or
popf
pop
inc
and
or
cs
add
popa
adc
int3
cmp
insb
scas
fcompl
adc
loope
inc
xchg
xor
and
roll
push
mov
ljmp
adc
mov
mov
push
hlt
inc
mov
mov
iret
xorl
dec
adc
nop
add
pushf
sub
dec
lahf
outsl
xor
push
fs
and
cwtl
xchg
rclb
leave
cli
push
jo
jecxz
mov
jb
aaa
repz
pop
cmp
test
add
movsb
cmp
push
popa
cltd
pushf
movsl
dec
mov
dec
sub
les
sub
ljmp
push
into
clc
mov
or
push
and
test
xorb
xor
sub
jo
sub
rcrb
and
pop
push
cmp
cmp
inc
mov
xchg
inc
jg
cltd
inc
test
push
lods
dec
movsb
lods
movsb
aam
mov
sub
les
addr16
pop
enter
and
cmp
add
imul
dec
test
sbb
xchg
pop
inc
fimuls
add
aas
cmp
shlb
addl
cmp
or
inc
and
push
fnstenv
movsl
xor
mov
sub
jmp
inc
xchg
das
sub
push
orb
aam
xchg
mov
inc
loopne
hlt
dec
adc
imul
sub
inc
xchg
mov
inc
cmp
push
pop
dec
inc
inc
and
push
stos
sub
out
pop
add
test
push
stc
mov
xchg
bound
add
mov
repz
scas
sub
xchg
insb
data16
es
bound
mov
jl
push
js
xchg
jo
sbbb
cltd
push
add
xor
loopne
aaa
imul
push
in
push
filds
pushw
sbbl
sub
outsl
pop
loop
test
or
push
xor
add
out
mov
cli
loopne
mov
fmull
loope
pop
lods
scas
das
negb
or
out
adc
shll
aad
xchg
push
fsubrs
jl
jo
inc
dec
rol
in
gs
jl
or
cli
push
dec
add
xor
inc
ret
pushw
jo
aas
mov
imul
mov
adc
ljmp
jle
sub
pop
mov
je
daa
jne
popa
pop
mov
mov
cltd
or
bound
cmp
sbb
xchg
inc
inc
call
or
xchg
icebp
data16
inc
int3
dec
lahf
dec
lret
shll
sub
inc
gs
push
stc
xor
pop
and
into
push
add
adc
jg
pop
in
pusha
les
sbb
and
add
sar
rclb
or
in
or
mov
dec
movsl
loopne
leave
xor
mov
or
or
mov
pop
sbb
aas
or
cltd
js
pushf
push
pop
in
fadds
cmp
sub
cmp
and
test
sub
cmp
cmp
lret
orb
ljmp
cmpsb
test
in
sarl
popa
lds
jne
and
movsl
rcll
push
shrb
lods
mov
push
sub
xchg
gs
add
dec
test
push
sub
lds
nop
nop
loop
cmp
icebp
push
sub
add
bound
ret
lods
ret
or
ffree
pop
lock
loope
imul
test
and
in
loop
js
gs
dec
xchg
cwtl
bound
movsb
jp
rolb
or
scas
inc
xchg
add
in
and
scas
leave
xor
add
xor
loop
dec
test
mov
xchg
add
ficoml
or
ds
add
shrl
enter
push
jae
pop
js
jbe
mov
fdivrs
push
cmpsl
out
or
push
popf
pop
call
xchg
push
add
hlt
jge
sahf
or
pusha
rcrl
int
ret
pop
jns
add
mov
insl
clc
add
inc
dec
sub
and
jl
add
pop
out
ljmp
jp
xchg
mov
inc
movsb
xor
int
and
cs
pushf
loopne
int3
sub
sti
test
adc
shrb
adc
cli
int3
rolb
push
jno
jnp
out
dec
mov
mov
js
into
hlt
adc
out
dec
add
xor
cmp
das
push
xor
or
rclb
lcall
imul
icebp
adc
fwait
pop
push
les
mov
add
and
and
leave
ret
jle
add
mov
or
inc
ljmp
push
or
push
mov
pop
mov
add
sub
ret
sub
sbb
adc
dec
lcall
fisttps
sbb
mov
stc
or
and
mov
inc
jne
aad
frndint
dec
add
jge
xchg
shlb
in
dec
mov
jmp
add
sbb
pop
or
pop
jae
or
fcmovu
or
pushf
cmp
jp
dec
mov
xchg
dec
orb
in
fmuls
add
or
mov
cwtl
clc
lock
repnz
add
jle
leave
ds
fwait
lods
mov
fstp
das
sub
push
movsl
jne
push
pop
aaa
jo
mov
lods
dec
xor
sub
jmp
int
or
cli
add
incb
mov
test
scas
adc
mov
inc
or
je
cmpsl
xchg
push
shlb
leave
and
inc
lret
loopne
cmp
mov
or
mov
loop
pusha
or
dec
shll
mov
adc
stc
or
lret
push
clc
cld
push
das
xor
test
lahf
ret
pusha
in
pop
add
jnp
push
mov
xor
shrb
ds
lret
cltd
pop
leave
rclb
push
adc
lods
mov
das
das
dec
out
pusha
adc
arpl
push
push
add
pop
inc
xchg
jns
movsl
mov
pop
inc
mov
pop
pop
mov
icebp
addb
addb
daa
insl
popf
test
xchg
or
addr16
loop
bound
sub
mov
ljmp
jp
inc
push
dec
loope
cmp
sub
pop
scas
xchg
cmp
movsb
inc
pop
sbb
adc
add
xchg
hlt
loop
pop
mov
mov
push
add
scas
cmp
mov
les
lods
sbbl
xor
and
mov
repz
inc
enter
cwtl
jl
sti
add
stc
out
ss
xor
mov
mov
andl
inc
in
test
push
pop
push
je
add
gs
das
adc
repnz
push
xchg
sbb
mov
lahf
sub
mov
cmp
mov
inc
shll
les
xlat
imull
pusha
adc
cltd
nop
pop
add
mov
aam
movsb
loopne
jb
sahf
inc
inc
rsm
cmp
in
mov
jno
cmp
or
fmull
arpl
adc
out
xchg
dec
xchg
fidivrs
bound
adc
pusha
jge
aam
mov
pusha
cwtl
sub
bound
or
je
push
pop
and
xchg
pop
pushf
leave
or
faddl
inc
pop
inc
cmc
push
add
fsub
sarb
cwtl
mov
cs
nop
das
iret
or
pop
bound
dec
or
mov
jg
test
mov
add
ljmp
sub
stos
push
testl
insl
add
push
xchg
loope
stc
add
lods
mov
push
dec
out
or
gs
mov
mov
add
cmc
rcl
repnz
adc
pop
cmp
movsl
fldl
push
adc
ss
sarb
xchg
or
cmp
adc
test
mov
mov
jmp
shlb
cmc
or
mov
add
hlt
jae
jne
in
es
xchg
cmc
call
pop
inc
int3
cltd
mov
mov
ljmp
jp
test
or
pusha
pop
in
lock
and
pop
fisttpll
pusha
add
clc
xchg
loopne
cmp
cwtl
xorb
cmp
lods
add
repz
loope
out
ficoml
movb
pop
pop
test
lret
lock
incb
and
push
add
dec
dec
mov
or
cmpb
lock
cmc
clc
and
xor
jb
sbb
mov
gs
lds
inc
push
xor
pusha
push
iret
call
test
jo
add
shl
mov
mov
jb
pop
inc
push
sub
add
arpl
cmpl
or
outsl
and
stos
inc
aam
mov
xchg
and
push
jns
dec
inc
sar
sub
mov
shlb
mov
mov
mov
mov
movsb
add
pop
inc
xchg
aam
stc
sub
xor
xchg
scas
add
inc
nop
pushf
sbb
adc
in
xor
mov
add
adc
xchg
adc
sti
pop
pop
push
add
adc
shr
movsl
push
or
mov
frstor
sub
fs
icebp
mov
cmp
jmp
xchg
lea
in
daa
cld
adc
dec
add
mov
rol
sbb
mov
test
pop
es
or
ja
cld
es
and
mov
aad
jo
dec
jg
lods
mov
jmp
push
test
fadds
xchg
loope
pop
cmp
hlt
add
mov
enter
mov
orl
mov
dec
add
fiadds
rcl
jp
stos
ss
adc
out
shll
daa
pop
iret
or
rcll
xor
iret
cmp
int
jns
lock
and
int3
xchg
pop
sti
rorb
jno
lds
ljmp
pop
in
xor
fistps
inc
pop
cmp
ljmp
or
sub
mov
mov
xlat
xor
xor
rcrl
je
pop
mov
jo
das
out
rolb
sub
aam
dec
xchg
iret
cwtl
inc
inc
mov
pop
jnp
mov
mov
pop
and
test
das
mulb
and
jmp
or
insl
shll
add
xor
pusha
push
insb
pop
nop
in
les
mov
xor
jno
pop
xchg
sub
clc
mov
mov
pop
lret
clc
je
xchg
xor
adc
or
cmc
shlb
cs
add
sarb
adc
add
fucomp
dec
shlb
pop
cli
scas
add
dec
mov
push
push
mov
js
mov
sub
adc
call
fiaddl
out
les
movsb
mov
pop
mov
add
jo
push
scas
or
or
cli
pop
pushf
pusha
mov
cmp
addr16
nop
and
hlt
add
mov
loop
shlb
ror
and
adc
push
in
xor
dec
loop
and
in
data16
add
daa
cwtl
cli
fwait
sti
or
xchg
lods
dec
pop
mov
push
shrl
call
dec
mov
jl
mov
leave
test
shr
adc
pop
clc
xchg
lock
pop
sub
xor
push
or
inc
jmp
xchg
rcrb
lret
fs
sub
jns
cmp
inc
pop
mov
les
mov
movb
add
pop
pop
push
lods
aam
adcl
int3
dec
or
fdivrl
lods
xchg
cmp
lods
aas
and
cmpsb
or
xchg
adc
repnz
arpl
mov
pop
jno
lock
in
es
mov
movsb
xchg
xchg
nop
ja
jmp
stos
inc
xchg
xor
roll
lock
xorb
fmuls
fistl
pop
shlb
cmpsb
xchg
add
inc
push
aaa
pop
jge
pop
lds
orb
dec
cld
int
add
lods
xchg
movsl
mov
call
or
inc
in
andb
cmc
mov
out
add
or
cmp
mov
fdivs
imul
in
sub
push
mov
mov
aad
fcomi
add
lahf
jl
hlt
add
fwait
lods
aas
fdivp
rorb
mov
shrb
es
sar
cmp
fcompl
add
aad
sbb
jecxz
fstl
xchg
js
and
mov
gs
or
and
lods
mov
pusha
fimuls
dec
sahf
mov
sub
shlb
cld
shl
adc
int3
jl
mov
mov
push
mov
pusha
sub
mov
dec
sbb
add
sub
iret
and
nop
mov
cmp
rolb
std
mov
cwtl
pop
sarl
mov
movsb
test
jo
add
add
nop
mov
adc
in
push
cwtl
mov
fcoml
in
xor
rol
dec
mov
hlt
adc
nop
cmpsl
or
addr16
jecxz
push
lock
hlt
ljmp
fimuls
int3
pop
pop
fs
mov
and
mov
sbb
sbb
call
pop
mov
sub
or
inc
cmpsb
inc
cmp
add
add
or
adc
dec
adc
mov
push
add
mov
xchg
leave
lods
sub
dec
xor
mov
test
jne
xor
shlb
lock
sbbb
and
sub
mov
icebp
push
pop
inc
test
dec
adc
pop
mov
lock
adc
jecxz
sbbb
fsubs
pop
jo
or
dec
cmp
sub
mov
dec
jecxz
daa
or
or
js
push
sbb
sub
jnp
sub
adc
roll
in
dec
mov
cmp
cmc
and
outsl
aad
loop
jo
daa
push
adc
or
xor
fildll
je
test
insb
shl
sbb
or
into
lods
shrl
mov
je
aam
push
or
lret
ret
pushf
lods
lods
dec
subb
inc
mov
add
adc
enter
leave
push
jp
pop
out
dec
cmc
orl
add
pop
popf
pop
out
mov
test
icebp
jne
out
mov
or
popf
xchg
outsb
xor
movsb
push
orl
xlat
mov
pusha
push
jle
fadd
mov
hlt
mov
dec
or
and
out
fmull
or
mov
ja
xchg
mov
ss
stos
shrb
pusha
pushf
push
sbb
sub
mov
lods
and
and
jge
repz
push
adc
add
and
dec
mov
cmpsb
xor
stc
cmp
lea
add
adc
scas
ss
push
sub
outsl
adc
jle
jle
adc
mov
cli
cmp
sub
scas
fdivrl
push
push
sbb
mov
lods
dec
xor
mov
addb
addr16
fidivrs
xor
int
adc
add
mov
xor
lea
lcall
add
nop
cmp
mov
aam
jbe
lea
push
imul
adc
pop
mov
xlat
lret
xchg
add
pop
jb
ficoml
add
push
jecxz
test
jecxz
mov
sub
das
xor
pop
xchg
adc
je
xor
pop
ds
xor
push
mov
shl
call
sub
mov
xchg
jno
dec
cmpb
push
dec
dec
jl
loope
pop
mov
in
xchg
or
pop
mov
movsb
adc
call
push
fcomps
fdivs
int3
in
pop
mov
push
sub
call
add
hlt
ss
adc
popa
jl
lods
cmpb
ss
cmc
mov
adc
xor
movsb
out
lods
sbb
outsb
cmp
inc
dec
arpl
pop
jle
push
lock
jecxz
sbb
loopne
inc
add
xchg
lods
mov
cmp
outsl
into
sub
xor
add
lock
insl
add
ficoms
jb
sub
fdivr
mov
jmp
mov
add
and
adc
pushf
mov
and
das
add
push
outsl
mov
cmp
rcr
push
mov
addl
add
ret
jbe
stos
test
in
and
fldenv
jns
jp
cmp
aad
mov
inc
fbstp
shll
test
pop
movsl
lds
int3
cmp
movsb
rcl
jl
sub
insb
imul
aad
sub
mov
jbe
loope
and
je
xchg
cmp
iret
mov
jle
sbb
inc
ljmp
repz
pop
dec
lret
cmp
or
jno
loopne
das
mov
andb
jmp
add
in
or
add
and
shll
ret
loopne
push
loop
xor
and
data16
mov
mov
and
inc
push
cmpsb
ljmp
test
jo
shl
popa
cmc
or
shrb
aas
jnp
dec
test
cli
dec
adc
xor
loope
and
adc
scas
in
mov
inc
dec
dec
jge
mov
enter
arpl
and
jb
inc
call
shl
enter
insb
add
mov
in
rcl
sub
and
repz
dec
and
xor
xor
or
inc
sub
lods
sbb
call
cltd
adc
cmp
mov
and
pop
bound
cli
es
xor
cmp
sbb
test
jb
mov
out
cmp
mov
fucom
andb
jp
adc
aad
sbb
into
or
add
gs
sub
es
mov
mov
gs
mov
lods
push
and
ret
jno
sbb
mov
lcall
imul
loope
pop
or
ljmp
jb
push
in
test
stc
call
fnstcw
cmp
lret
rolb
jl
cltd
adc
sub
mov
sbb
and
mov
sub
cld
daa
imul
das
dec
cmp
roll
cmc
cmpsl
inc
fisubrl
lods
xlat
ret
xor
test
xchg
and
ficomps
mov
mov
pop
push
imul
fisubs
outsl
jecxz
xor
filds
data16
out
sub
leave
xor
js
shrl
ret
sub
lock
dec
js
shl
jecxz
adc
andb
daa
popa
pop
xor
into
xchg
sbb
lods
sub
lods
leave
add
mov
loopne
cmp
lahf
inc
loopne
js
dec
xor
sub
test
fisttpll
das
pusha
inc
push
repnz
or
sbb
shrb
pop
aam
enter
jmp
loop
adcl
pop
jnp
pop
push
nop
jno
or
je
fs
cli
inc
int3
cld
mov
adc
mov
jl
and
test
lds
and
ja
xchg
fistpll
push
punpcklwd
xchg
sti
xchg
adc
add
sub
jl
aaa
jge
xchg
pop
mov
lret
and
mov
pushf
push
pop
in
push
loopne
cwtl
mov
xchg
push
xchg
dec
push
fnstsw
push
mov
aam
mov
rcr
scas
shll
flds
les
stc
call
mov
in
lods
adc
ds
sti
mov
mov
sub
pusha
movsb
add
shl
mov
mov
insb
add
test
add
pop
movsb
cmp
and
add
mov
pop
lret
imul
add
pop
pop
imul
or
xor
or
rclb
mov
mov
test
testb
cmpsb
vmovups
cmp
adc
mov
xor
mov
sbb
popa
arpl
ljmp
je
inc
inc
xlat
and
in
cmpb
stos
add
push
sub
loop
cmpb
mov
pusha
jp
je
mov
mov
add
fimull
inc
add
jl
mov
mov
and
mov
int
repz
out
dec
dec
xchg
je
gs
cmp
cld
call
jmp
pop
js
xor
fidivrs
dec
idivb
imul
mov
or
xor
ror
nop
pop
adc
imul
pop
fdivs
in
ret
out
push
dec
sbb
in
rcrl
xor
inc
loopne
sub
jmp
cwtl
ljmp
inc
popf
inc
push
fsubs
test
loopne
ss
adc
jb
push
mov
pop
pop
mov
push
adc
aas
bound
and
js
iret
in
into
popf
dec
jl
jbe
dec
add
mov
add
pop
and
mov
dec
std
pop
sbb
mov
mov
add
or
lret
cwtl
sub
cmp
loop
andb
cld
mov
pusha
xchg
mov
cmp
pop
mov
rorb
push
mov
sub
jmp
into
pushf
test
in
xchg
jae
inc
das
dec
cmp
js
je
jno
mov
int
or
int3
cld
fs
clc
sub
je
mov
hlt
aas
jne
mov
orb
pop
call
jge
jae
add
inc
pusha
mov
bound
pop
xchg
lods
rcrw
insl
repz
xor
das
inc
aam
andb
das
push
adc
jge
or
and
movsb
mov
es
lcall
das
adc
dec
nop
movsl
stc
in
mov
fldcw
shlb
and
mov
pop
add
or
aam
adc
ss
insb
jo
add
or
xor
or
cmp
push
in
pop
test
mov
aam
lcall
mov
lock
inc
sbb
jae
outsl
cltd
pusha
push
mov
pop
pop
sub
ds
test
pop
popf
xor
gs
mov
sub
mov
push
imul
ljmp
sbb
add
aam
negl
cmp
cltd
bound
mov
xor
dec
pop
js
repnz
ror
out
cltd
rolb
mov
rolb
data16
inc
lret
mov
inc
and
stos
push
jmp
insl
test
shrl
rclb
std
cmp
test
xchg
loope
outsb
in
sbb
adc
mov
and
lock
or
jmp
push
aam
mov
add
fwait
in
push
cmp
lds
cs
dec
and
pop
sub
jo
add
loop
iret
or
out
mov
mov
jne
add
mov
xchg
inc
add
int3
in
xchg
lds
adc
jno
adc
sub
fs
mov
adc
pusha
mov
cmpsl
sbb
mov
pushf
xchg
xchg
daa
nop
addr16
mov
scas
or
mov
cmp
pop
testb
ud0
icebp
and
adc
rcll
enter
xor
je
daa
test
es
mov
imul
xor
mov
movsl
inc
jl
cltd
mov
pop
mov
jae
aam
mov
loopne
dec
repnz
mov
fdivl
mov
jne
cmc
mov
push
notb
jecxz
lahf
and
sbb
dec
add
xor
inc
cwtl
mov
mov
add
sub
xchg
sub
sub
mov
popf
shrb
sub
in
addb
cltd
inc
xorb
mov
adcb
push
add
loope
jg
je
mov
push
push
js
hlt
add
cmp
or
fnsave
xor
add
fwait
mov
mov
adc
push
push
xchg
jb
imulb
lret
sub
xor
test
pop
les
pop
fidivrl
inc
cmp
repnz
add
popw
adc
stos
dec
js
mov
cmp
mov
xor
daa
orb
dec
xor
pop
add
xchg
enter
cwtl
inc
push
pusha
lds
push
movl
push
pusha
inc
inc
add
les
sub
xor
rorb
jl
xor
push
add
mov
mov
outsb
jecxz
lahf
jmp
jecxz
in
sub
jge
mov
rorb
jbe
outsl
inc
mov
notl
mov
sub
aam
push
andl
jae
add
inc
fdivrl
fnsave
jg,pn
xchg
rolb
testl
jne
pop
xchg
cmp
dec
adc
mov
xchg
out
mov
and
dec
push
stc
pusha
adc
add
cli
fcmovne
mov
aas
mov
xlat
popf
lea
push
push
out
lret
mov
sub
jmp
scas
gs
mov
outsl
scas
loopne
sbb
fiaddl
in
outsb
fnstsw
xor
mov
pop
imul
fnstsw
daa
lahf
daa
bound
adc
cmp
jns
push
mov
leave
mov
cmp
imul
mov
lea
mov
add
rcll
cld
sarb
rorb
adc
mul
and
inc
sbb
nop
dec
int
and
mov
sbb
add
xchg
xchg
cmp
pop
mov
imul
mov
das
fbld
push
xchg
xor
mov
inc
int
and
and
add
mov
inc
bsr
outsb
insl
outsl
movsb
dec
mov
sub
movsl
repz
insb
xor
adc
or
adc
outsb
xor
inc
sarb
daa
fs
cltd
addl
jo
ja
mov
dec
lods
lds
loop
jo
mov
pusha
daa
mov
dec
and
leave
or
testl
add
out
test
mov
clc
cwtl
xchg
xor
rcll
repnz
aas
and
cltd
inc
add
popf
sbb
jecxz
imul
dec
addb
mov
leave
mov
and
and
out
pop
or
outsl
int
maskmovq
mull
cmp
jp
in
enter
adc
sbb
xchg
or
iret
xor
cmp
push
aaa
andl
pop
dec
add
add
mov
xchg
and
imul
adc
inc
enter
lret
clc
and
das
and
movsl
mov
bound
es
les
lret
xchg
pop
mov
aam
fistpl
leave
ja
add
or
sbb
add
pop
inc
scas
movsb
test
ret
xor
popf
jmp
out
add
outsb
pop
hlt
ja
cmp
lret
xorb
pushf
movsb
test
xor
cmp
ss
cs
sub
or
filds
xor
push
sub
inc
mov
mov
mov
push
pop
cmp
cmc
cmp
addr16
sub
pop
add
out
cmp
bound
in
sub
fsubl
adc
mov
xor
cmp
es
or
sbb
mov
inc
ja
out
adc
fstl
divb
and
mov
jns
push
pushf
pop
adc
enter
dec
xor
push
je
push
inc
inc
fs
push
inc
int
in
notb
lcall
dec
dec
or
nop
bound
push
and
mov
add
add
adc
adc
add
arpl
mull
fcoms
icebp
mov
cmc
adc
mov
push
add
aaa
cmp
and
xchg
adc
xchg
adc
nop
aas
inc
aaa
push
mov
jp,pn
adc
test
mov
andl
shlb
xchg
dec
dec
add
sti
dec
cld
lret
les
cmp
mov
shlb
popf
cmpsb
call
jae
lds
jg
push
cld
repnz
faddl
divb
mov
pop
add
test
insl
pop
pop
cmp
dec
insl
loope
push
dec
movsb
in
out
shrb
pop
testl
scas
fwait
in
pop
push
inc
lret
addl
xlat
gs
push
dec
sbb
mov
lock
cmp
sub
push
imul
loope
ret
fistpl
mov
flds
sarb
xchg
fidivrl
test
scas
clc
nop
jmp
push
jmp
add
addr16
les
sbb
mov
jae
rorl
mov
push
or
xor
scas
add
add
outsl
xchg
cli
xorb
inc
imul
bound
dec
or
ss
xor
jnp
xor
xor
dec
and
xchg
jno
sarl
xchg
add
xor
nop
faddp
jnp
or
imul
and
pop
outsl
stos
sbb
push
insb
inc
xorl
jo
mov
lock
mov
pop
mov
add
dec
pop
add
mov
sbb
and
lods
pop
int3
popa
int3
jne
dec
push
cli
pop
adc
in
icebp
scas
and
dec
push
add
jb
pop
cmc
mov
in
das
and
lret
adc
psrlq
or
sub
jo
xchg
cld
sbb
lds
mov
sbb
sub
out
dec
jb
push
sahf
pop
dec
dec
aad
adc
xlat
push
and
imul
or
imul
jg
test
xchg
scas
popa
mov
and
out
inc
mov
psubusw
or
pop
push
cmp
daa
adc
repz
and
cmpsb
testl
or
add
xor
xlat
in
lret
or
adc
adc
in
pushf
sub
jb
mov
xor
sub
push
jg
or
xchg
imul
addl
push
xor
dec
xorl
enter
cmp
lret
push
mov
dec
adc
xor
and
andl
sub
push
mov
bound
push
mov
jmp
mov
dec
test
xchg
mov
les
push
mov
xchg
mov
or
in
es
xor
push
sub
jl
cmp
mov
dec
push
sbb
ja
xor
xor
mov
cli
mov
xchg
sub
xor
cmp
mov
xchg
mov
push
mov
xor
mov
sarb
add
gs
and
xor
das
int3
cmp
cmp
cmp
sti
inc
xlat
lret
xor
repz
adc
fst
add
xor
push
add
bound
xor
fiaddl
push
sub
xchg
adc
insb
int
mov
mov
pop
rcll
cmp
xchg
push
xor
mov
dec
gs
js
sbb
and
sahf
mov
scas
insb
sub
cltd
xor
int3
mov
dec
cs
mov
sub
test
jne
and
cwtl
out
pop
mov
in
and
jb
ficomps
lret
loopne
cs
adc
and
lcall
mov
lahf
lcall
ljmp
iret
rcl
xchg
fmuls
lcall
mov
mov
sub
jl
dec
nop
push
mov
cmp
and
fnstsw
push
push
dec
pop
test
stos
test
lret
push
inc
xchg
out
ljmp
popa
fdivs
fldenv
add
xor
inc
mov
pop
xchg
inc
dec
insl
ja
dec
fwait
inc
test
rclb
mov
je
das
imul
lahf
push
push
lea
inc
dec
xchg
sbb
xchg
jno
push
sub
das
xchg
pop
rorl
cmp
aaa
push
xor
push
push
std
dec
mulb
and
imul
add
inc
mov
sub
mov
or
iret
aaa
notb
push
dec
enter
lmsw
jge
std
inc
push
rclb
stos
cmc
nop
arpl
mov
mov
inc
inc
adc
sub
mov
ret
dec
cmp
xor
mov
in
sbb
mov
sahf
or
fwait
mov
push
repnz
adc
adc
inc
mov
mov
out
sbb
les
lods
movsb
sub
jb
sub
dec
mov
popf
mov
fs
xlat
dec
popf
call
insb
xor
out
add
loope
enter
xor
sbb
mov
jo
or
jbe
idivl
andl
lods
adcb
es
mov
push
imul
pop
sbb
rcrl
xchg
ja
insl
lea
int3
insl
mov
adc
mov
dec
cvtps2pi
sub
lahf
dec
int
adc
sbb
xor
mov
xor
mov
sub
push
jbe
mov
push
out
mov
je
out
mov
mov
rclb
ss
dec
inc
stos
aad
dec
xchg
xor
and
ss
pushf
imull
inc
cmc
push
repnz
pushf
pop
push
pop
js
in
dec
shlb
pop
pop
add
sub
loop
dec
stos
dec
cmp
adc
data16
adc
mov
sbb
cmp
repz
sub
pop
sub
push
mov
scas
adc
sbb
repnz
pop
or
sbb
aaa
xchg
bound
pop
xchg
mov
inc
clc
dec
lret
inc
adc
je
push
mov
rcrb
insb
or
ja
jmp
outsb
in
push
mov
xchg
dec
iret
xor
cmp
int3
xchg
imul
inc
xor
or
outsb
jbe
jg
test
pop
mov
rorl
fs
sbb
iret
ds
out
int
pop
push
sbb
ror
pop
add
and
cltd
and
fs
mov
int3
sub
xor
cmpsl
jmp
ret
ret
fildl
mov
xchg
cmp
daa
mov
sbb
nop
xchg
and
fcomps
and
fs
addb
test
xor
mov
dec
xchg
stos
cmp
insb
mov
push
mull
arpl
and
or
xorl
inc
sbb
adc
mov
cmp
xchg
jle
mov
dec
push
xchg
aad
xchg
cmp
sti
gs
imul
push
outsb
js
cwtl
xor
out
or
mov
pop
add
push
xchg
sahf
das
sbb
push
mov
addb
jo
jle
pcmpeqb
sbb
xor
shlb
in
daa
cwtl
mov
mov
jge
xor
adc
mov
rcr
push
je
add
mov
divl
les
test
rorl
or
sbb
xchg
roll
sbb
and
dec
test
pusha
movsb
push
pop
or
sbb
in
mov
sahf
adc
sub
sub
push
shlb
aad
jno
jl
mov
xlat
sti
push
pop
push
cltd
in
sahf
fstp
lret
imul
push
pop
mov
outsb
les
je
divl
pop
arpl
sbb
mov
scas
and
jp
popa
inc
into
sub
out
iret
lods
adc
xchg
xchg
mov
dec
test
in
xlat
icebp
sbb
mov
and
mov
sub
pop
or
xor
shrl
inc
icebp
test
shlb
test
aam
je
outsl
notb
call
mov
inc
int
das
sub
push
jnp
jae
insb
add
jp
dec
fdivl
xor
push
mov
mov
sub
add
sub
nop
push
dec
mov
js
int3
xchg
dec
mov
bnd
out
leave
ret
vpmadd52luq
and
push
in
pop
or
push
fldcw
adc
sub
add
xor
fldcw
adc
ret
push
les
ficoml
rcr
sub
cwtl
outsl
xchg
sbb
mov
out
xchg
inc
xchg
stos
xchg
jp
xor
inc
ror
xchg
scas
dec
insl
mov
xchg
sahf
jb
fimull
in
stos
pop
adc
or
jns
out
push
push
and
inc
sub
inc
jnp
sbb
sbb
xchg
mov
cmpsb
push
imul
jmp
ret
stc
sub
inc
dec
push
stos
pop
xchg
mov
mov
adc
cwtl
lahf
pushf
mov
pop
outsl
and
lcall
and
and
dec
bound
sub
sbb
scas
outsl
inc
mov
cmpl
jne
scas
aas
inc
add
mov
rorb
cmpsl
xchg
lahf
dec
stos
push
dec
add
xor
das
imul
push
mov
cmpl
or
aam
pop
nop
idivb
mov
add
cltd
shrb
je
out
adc
int3
push
sbbb
repnz
mov
rol
jnp
cmp
loope
shll
out
decb
add
xchg
inc
dec
ret
fisttpll
mov
repz
mov
std
cs
ret
ss
push
iret
mov
sbb
mov
test
pop
and
push
pop
popf
data16
je
loopne
cwtl
and
add
fld
cmp
xchg
pop
push
jb
push
cmp
cmp
adc
cmovg
int3
sbb
in
mov
or
testl
out
sbb
xchg
into
or
sub
xor
mov
lcall
iret
add
mov
adc
add
popf
fistl
push
dec
push
loopne
xchg
inc
clc
mov
pop
jl
adc
cmp
push
imul
dec
in
sbb
cmp
push
inc
pop
fldz
repnz
lret
in
int3
mov
outsl
jecxz
in
iret
std
insb
nop
lods
imul
imul
or
ds
leave
out
jmp
bound
out
dec
xor
mov
xor
push
and
jno
or
mov
push
or
lods
push
orb
out
xor
orl
sti
pushf
jmp
mov
out
or
cmp
repnz
inc
shrb
outsb
and
out
cmp
js
pop
dec
jl
arpl
mov
pop
aaa
mov
or
adc
fwait
jecxz
imul
push
loopne
rcl
xor
or
movsb
imul
sub
inc
mov
jmp
dec
sub
xchg
adc
fcomps
dec
fsubr
and
xchg
int
xchg
inc
rorb
into
leave
mov
rcl
fwait
mov
mov
jns
cmpsb
in
push
sahf
mov
mov
xor
in
xchg
out
add
sub
jmp
add
add
leave
dec
hlt
and
push
xor
out
sub
sub
mov
cmp
cmpsl
sub
add
enter
cmp
mov
outsl
movsb
pop
mov
mov
pop
jnp
or
pop
out
or
push
pop
pop
jmp
jns
adc
repz
push
pop
xor
mov
push
sbb
xchg
and
lods
adc
dec
jge
ja
xchg
jb
adc
mov
mov
les
bound
in
mov
and
mov
sbb
mov
mov
dec
mov
mov
cmp
adc
cmp
mov
enter
fnstenv
push
and
and
pop
aam
cli
mov
push
mov
pop
add
adc
adc
inc
rcrl
adc
or
cmp
adc
jg
ss
test
les
jle
das
mov
test
das
sub
aad
jb
inc
mov
sub
push
or
adc
xor
adcl
lods
lea
xchg
and
mov
hlt
sbb
or
xchg
and
mov
or
mov
xor
cld
xchg
ljmp
data16
enter
xor
jo
push
incb
pop
push
fsts
sbb
stc
inc
lahf
adc
pop
lahf
inc
xchg
pop
adc
sub
xchg
sub
dec
mov
std
sbb
repnz
addr16
xchg
adc
pop
clc
dec
cmpsl
sbb
jnp
push
push
pop
inc
push
adc
pop
push
push
addr16
inc
filds
pop
pop
push
iret
aas
mov
cmp
icebp
pop
jmp
inc
dec
rcrb
add
sbb
xchg
out
push
cmp
pushl
push
pop
outsl
rorl
icebp
jno
into
int3
jg
jne
sbb
push
pop
sti
push
mov
cmpl
inc
xor
int
inc
stc
mov
stc
dec
sub
push
pop
pop
pop
or
sbb
add
pusha
jnp
jg
fdivrs
cmp
pop
lcall
mov
cmp
mov
pop
mov
test
push
icebp
xor
lock
or
jg
sbb
adc
imulb
jae
mov
jge
movsl
insl
jge
sahf
push
lods
sti
add
jmp
jns
cmp
inc
mov
inc
jne
mov
push
ja
lcall
and
mov
jg
fsubrs
mov
or
sbb
push
les
in
and
inc
and
push
add
xor
adc
icebp
outsl
pop
out
data16
pop
jge
sahf
fisubl
inc
push
xchg
addr16
xor
push
int
stc
ja
mov
pushf
pop
or
adc
pushf
fnstsw
fsubl
fmull
inc
sbb
ja
pop
sub
je
and
inc
je
addb
outsb
xor
pop
jns
je
sbb
cmp
and
jp
pop
ja
int3
sbb
shll
lea
xor
pusha
push
push
push
pop
pushf
jno
fnstcw
pop
inc
fneni(8087
sbb
into
inc
ja
jl
push
ds
inc
xchg
inc
pop
divb
sbb
inc
pushf
daa
push
jl
push
aam
je
or
and
cmp
push
jmp
mov
iret
enter
daa
push
sub
in
push
icebp
out
sarb
jnp
or
push
cmp
adc
or
pop
mov
push
xorb
jecxz
aam
fucom
ret
cmp
and
sub
pop
add
inc
jge
pusha
nop
push
or
in
cmp
xchg
push
cltd
inc
cmc
pavgw
shrb
jae
or
cmp
sub
add
or
push
push
mov
add
cmp
cmp
mov
ret
pushf
pop
lcall
or
loop
call
rcrb
xchg
sub
sub
pop
or
je
push
test
sbb
push
cwtl
popf
mov
and
sub
addr16
push
add
dec
shll
fimuls
pop
lret
or
jg
pop
insb
pop
push
roll
movsb
shlb
in
call
add
sbb
jnp
add
push
cmp
jo
popa
or
pop
inc
dec
addr16
mov
out
out
out
out
loope
or
leave
add
cmp
jo
bound
and
inc
testl
mov
jmp
pusha
sarl
std
aaa
adc
daa
lret
sbb
sbb
je
push
cwtl
cld
or
sub
incb
mov
pop
add
adc
ret
push
cltd
push
pop
jno
popa
roll
push
push
sub
adc
arpl
sbb
loop
push
adc
pop
dec
idivl
and
add
and
pop
and
out
pop
adc
pop
fs
mov
mov
out
mov
cmp
jle
pop
sbb
mov
adc
adc
adc
add
loop
call
add
xor
sub
mov
sub
push
std
xor
and
cmp
or
nop
or
test
pop
sbb
xor
hlt
adc
sub
sahf
adc
push
sub
push
je
lock
add
paddusb
inc
push
mov
push
outsl
push
and
sub
daa
pop
mov
add
or
cmp
sub
sub
xor
inc
js
mov
pop
jl
mov
mov
dec
repz
fisubrs
mov
pop
xor
fsubrl
in
sub
repnz
or
mov
cmp
pop
out
mov
fsubrl
push
pop
aaa
mov
or
dec
xor
ret
mov
bound
inc
mov
xor
push
cmp
sub
xor
mov
mov
hlt
fs
out
cmp
mov
and
pop
lods
mov
aad
cwtl
aas
incb
fwait
mov
and
push
cs
lods
and
imul
cmp
push
inc
and
inc
xor
daa
and
and
insb
faddl
cmc
and
test
add
push
lock
gs
fs
shll
loopew
jmp
arpl
jl
xor
hlt
lods
js
jno
cli
int3
fdivl
sbb
jge
roll
adc
imul
and
xchg
cli
push
js
mov
ss
jge
out
fiaddl
inc
cmp
lret
pushl
push
cmc
fistpl
int3
enter
fs
sub
jle
xor
fnstsw
int3
jecxz
jle
call
adc
inc
adc
jb
inc
adc
xchg
adc
xor
mov
test
lcall
push
mov
xchg
scas
sbbl
enterw
inc
pop
sbb
inc
ljmp
fmuls
push
rorl
jns
iret
xor
xor
outsl
add
cmpsb
aas
int
enter
scas
xchg
adc
daa
call
ret
xchg
adc
fisttps
mov
rol
fcmovu
mov
sbb
or
aaa
jbe
xchg
nop
sbb
out
xchg
xor
cli
sub
ja
fists
aad
js
mov
xchg
fstp
lock
pop
mov
pop
lret
rorl
ss
or
xor
aas
add
adc
xchg
and
mov
or
and
jle
mov
cmpsb
inc
in
ret
adc
fimuls
adc
fadds
cmc
fldl
pusha
js
aad
inc
inc
add
adcl
fmuls
aad
inc
cmp
repnz
inc
dec
mov
adc
xor
stos
xchg
xchg
sub
push
nop
adc
pop
jp
adc
out
push
test
add
push
and
loopne
sbb
dec
imul
adc
fbld
test
ret
push
dec
pop
push
push
int
rclb
fmull
lock
std
or
inc
in
fsubl
inc
in
loope
xor
inc
gs
addr16
lahf
movsb
scas
add
sub
jmp
xor
sbb
popa
jp
clc
inc
add
push
jle
aaa
inc
sahf
imulb
lret
adc
jle
pop
or
push
jo
xchg
and
lret
nop
dec
or
xchg
arpl
imul
dec
xchg
cwtl
cmp
mulb
mov
pop
mov
and
nop
cmp
xchg
lahf
pop
adc
test
jmp
gs
inc
rcl
xchg
imul
mov
addr16
das
fimuls
gs
push
cwtl
and
dec
lock
add
mov
negl
mov
in
cmc
sbb
sbb
imul
dec
sahf
inc
iret
shl
fmuls
mov
ret
aas
popf
ljmp
push
and
sbb
arpl
pop
push
adc
mov
push
iret
xchg
sub
scas
stos
pop
nop
xor
push
stc
into
and
in
mov
es
mulb
sbb
ret
or
test
fimuls
adc
push
mov
jae
enter
nop
hlt
mov
jne
out
add
push
jg
inc
mov
out
xor
adc
mov
sbb
shrl
packuswb
sub
cmp
ret
and
aad
popa
mov
xor
into
in
out
push
repz
idiv
mov
addr16
repz
lret
out
push
sbb
shll
and
sbb
and
mov
jmp
and
sbb
jbe
or
pop
mov
jno
fildl
hlt
sub
lock
imul
adc
dec
in
loop
xchg
push
inc
test
call
jmp
pop
xchg
xchg
xor
sbb
push
ljmp
inc
mov
dec
adc
sahf
mov
jnp
dec
decb
add
fisubs
aad
cmp
aaa
and
sbb
shr
jl
int3
mov
nop
push
sub
push
sub
pusha
test
fistl
add
pop
js
int3
jno
adc
inc
adc
or
shl
sbb
pop
stc
xchg
and
rcll
jbe
inc
adc
pop
loop
adc
xchg
test
sub
xchg
fidivrs
xor
fsubs
xlat
cmc
mov
leave
sub
aad
or
or
ja
cld
and
xchg
add
or
xchg
fldenv
sbb
andb
pop
jbe
and
cmpsb
jmp
clc
out
out
push
or
fstl
out
adc
and
or
shlb
sti
dec
push
adc
jnp
out
cwtl
pop
xchg
aaa
cmp
sub
and
cmp
dec
bound
test
fnsave
sbb
push
idivl
ret
jae
jns
mov
mov
insb
aas
pop
cmpsl
jns
addr16
test
adc
jno
lret
inc
xchg
push
mov
std
xor
sbb
andb
imul
pop
rol
rclb
sbb
repnz
and
add
lret
xchg
pop
enter
jb
repnz
sub
push
cmp
fdivs
fsubl
adc
or
addb
mov
push
imul
cli
push
sub
aad
fiadds
movsl
outsb
sub
adc
sti
cmp
add
fstpl
data16
ss
and
clc
mov
ljmp
cltd
lret
dec
and
fdivs
leave
inc
or
sbb
mov
push
push
jo
je
cli
and
call
sti
mov
outsb
inc
add
fnsave
dec
adc
cs
dec
or
dec
mov
mov
pop
fldenv
jle
ret
jp
mov
enter
cs
aaa
movsb
les
into
lods
insl
sbb
ds
out
pop
sbb
cwtl
and
test
adc
lea
and
cwtl
sbb
dec
inc
sub
dec
pop
outsb
xchg
or
jns
shlb
inc
add
cli
sahf
dec
or
pop
push
mov
adc
out
push
mov
lds
xor
add
stos
in
popf
cmp
pop
pusha
mov
fimull
xchg
in
sahf
inc
sub
mov
xchg
fld
popl
mov
stos
jl
pop
mov
cmp
ret
outsb
and
int
and
nop
or
ret
call
add
je
outsb
ss
xchg
push
call
jns
xor
outsb
rcll
sub
jns
dec
repnz
vphsubwd
mov
adc
push
jmp
adc
dec
scas
in
fldenv
call
push
push
dec
in
pop
cmpsl
mov
js
xor
add
push
leave
sub
sbb
and
cmc
cmp
sub
in
inc
ljmp
inc
add
stos
push
jne,pn
pop
inc
ret
lret
and
push
inc
pop
xor
adc
push
popa
cmp
insl
sbb
dec
test
fbstp
dec
sbb
scas
jno
test
xchg
icebp
fiaddl
ret
mov
adc
jb
mov
rcrl
mov
scas
jns
cmpsb
xchg
ja
fsts
and
mov
xchg
and
sbb
jmp
lods
inc
lcall
xchg
lcall
pop
loop
and
aad
adc
pop
cmp
add
clc
lea
ret
inc
mov
sbb
jp
test
inc
cld
dec
sub
push
imul
into
sbb
add
inc
pop
and
xor
bound
fs
into
imul
pop
fmul
sbb
ret
cld
int3
or
rolb
xor
dec
aad
mov
adc
sbb
adc
push
sbb
fimuls
pusha
cs
cmpsb
push
push
int3
ja
cs
sub
or
add
mov
shrb
lret
dec
xor
dec
fisttps
movsb
bound
ret
scas
fwait
mov
shll
cvtpi2ps
push
cmpsl
mov
add
adc
xchg
inc
insb
fisubrl
aaa
gs
cmp
and
repz
mov
sub
xor
push
cmpl
pcmpgtw
xchg
push
mov
repz
mov
rcr
insl
nop
out
ret
or
sub
and
loopne
lret
push
rcl
xor
ficoml
lds
ret
jp
mov
xor
ss
pop
shl
cmp
ds
or
jns
out
jo
outsb
cmp
aas
adcl
mov
jge
decl
inc
or
jno
jbe
test
jle
cmp
adc
mov
cmp
cmp
mov
mov
xor
fldl
in
xchg
dec
add
outsb
push
fisubrl
rclb
and
adc
jl
add
jns
xchg
xchg
imulb
mov
lahf
pop
out
sbb
je
les
mov
enter
shrb
jae
insb
push
stos
push
jmp
repnz
test
int3
arpl
cld
mov
cmp
cmp
cs
movl
and
mov
sub
xchg
dec
ret
scas
cmp
add
int3
cmp
sarb
lret
movd
mov
sbb
fstps
cmp
sar
shl
xor
push
xor
pop
jno
mov
cmp
jbe
in
jg
rcl
ljmp
stos
pop
cmc
adc
jbe
mov
inc
enter
xchg
sub
hlt
dec
push
ljmp
fwait
xor
adc
lea
or
inc
mov
cmc
sub
ds
or
dec
clc
adc
fnstsw
daa
cmpsb
hlt
outsl
orb
jle
ss
js
jo
lahf
sbb
dec
cmp
fadd
xor
push
imul
and
iret
dec
inc
jne
leave
adc
and
arpl
push
fldl
cmpsl
and
fidivl
mov
data16
ret
push
push
xor
sub
dec
mov
loop
jns
insb
adc
mov
add
vrcpss
fldcw
xor
or
adcb
les
imul
fstpl
sti
ret
cwtl
sbb
inc
push
cltd
dec
lock
xorl
xchg
adc
repnz
adc
cs
ljmp
xchg
mov
dec
aad
adc
mov
ret
ret
inc
sbb
cmp
leave
fldenv
int3
and
xchg
shrb
into
pop
mulb
mov
push
mov
cmpsb
pop
mull
bound
mov
outsl
mov
rorl
mov
mov
mov
xor
adc
mov
adcl
inc
xchg
xlat
mov
cmpsl
mov
lret
movsb
enter
push
rclb
aad
imul
adcl
adcb
stos
sub
and
pop
ret
sub
in
and
stc
pop
xor
rol
mov
flds
jecxz
push
mov
fisttps
repz
jg
icebp
negb
xor
movsl
inc
int3
imul
inc
into
and
in
mov
mov
mov
mov
decb
inc
pop
scas
popa
mov
pop
xchg
xor
xchg
jo
ret
test
cli
rcrb
dec
es
es
aas
gs
xchg
outsb
loope
je
push
rcl
push
inc
mov
lods
fs
hlt
popf
fdivrs
and
sahf
dec
push
jns
xchg
add
cmpsl
push
push
jb
aam
inc
add
jae
cmp
pop
cli
rorl
xchg
ja
aam
test
repz
push
fsts
movl
adc
repnz
lahf
fisttpll
xchg
mov
mov
fisttpl
sti
enter
andb
leave
dec
cmp
fwait
in
out
ds
inc
pusha
cmp
push
mov
push
pop
sub
pushf
js
push
pusha
jecxz
xchg
sbb
out
push
stc
ror
ret
pop
jns
xor
add
out
dec
adc
ss
jl
je
cmpsb
sahf
adc
aad
dec
cmpsl
and
jo
push
idivb
mov
test
inc
mov
mov
inc
cmpsb
sbb
mov
pop
ret
dec
lret
sub
andb
ret
ret
pop
xlat
mov
push
mov
fsubrl
mov
mov
xchg
lret
sahf
cmp
in
push
testl
xor
cmpsb
fnstenv
addb
ret
js
and
repz
mov
js
out
adc
fisttpl
pop
imul
push
imul
insb
idiv
out
cmpsl
pusha
stos
cmp
jmp
or
shlb
and
adc
in
cmp
jl
sbb
imul
lock
loop
cmp
popf
ja
dec
dec
push
and
jno
xor
or
fistpll
sub
xlat
ja
test
out
or
mul
push
fcoml
mov
push
pop
sub
inc
andb
out
cmc
cmp
in
jbe
fistl
nop
ret
cld
sub
pop
push
aas
ss
pusha
cmc
insl
outsb
mull
into
addr16
dec
xor
in
adc
mov
pop
lret
adc
and
iret
outsl
mull
mov
adcl
mov
mov
rorl
das
ret
or
cmp
adc
mov
mov
inc
inc
add
sub
sub
es
inc
mov
cmp
cmp
dec
ss
add
lret
xchg
jo,pn
inc
push
jns
mov
inc
imul
push
dec
hlt
fmull
inc
pop
negb
inc
nop
mov
dec
adc
xor
cmp
dec
fistps
pop
cld
shr
xchg
mov
ds
in
xor
fs
test
fistpl
adc
mov
and
cmp
jp
adc
inc
cmp
adc
xchg
mov
xchg
and
jns
xchg
xchg
xor
fsubp
adc
mov
mov
sti
sysret
shrl
leavew
sbb
xchg
in
and
dec
xor
lcall
rorb
repnz
test
dec
sbb
mov
mov
clc
ds
dec
adc
push
in
popa
test
mov
sti
xor
mov
int3
icebp
fnstsw
sbb
movsl
test
out
cmpsb
mov
inc
sahf
push
imul
into
faddp
rorl
push
jecxz
ret
int
mov
and
out
pop
dec
mov
fnsave
and
mov
hlt
xor
bound
sbb
insb
pop
or
mov
into
push
pop
push
pop
and
out
push
enter
dec
jb
inc
push
loop
addb
movsb
push
xor
mov
repnz
xor
and
jecxz
or
jbe
lahf
ficompl
shlb
fadds
idivl
rcrl
mov
or
push
pop
int3
jle
mov
mov
inc
je
lods
dec
xor
or
dec
xchg
or
jle
mov
lcall
outsb
addr16
mov
inc
arpl
lcall
enter
testb
inc
jne
fisttpll
cmc
leave
adc
and
sub
sbb
repnz
cltd
in
jmp
push
call
dec
inc
movsb
jl
sbbl
sub
int
dec
jbe
xchg
out
enter
in
sub
cmp
test
push
xchg
andl
enter
push
sbb
pop
push
in
inc
mov
adc
push
addr16
jmp
and
dec
rorb
into
test
scas
ret
xchg
pop
mov
pop
inc
negl
xchg
add
bound
es
scas
mov
into
mov
adc
clc
sub
scas
pop
adc
jle
pop
popa
pop
pop
xchg
out
es
mov
stos
xchg
in
outsb
test
push
sub
enter
mov
push
xor
jg
push
cmp
adc
or
das
hlt
inc
fsubrs
mov
sbb
push
fcompl
or
mov
call
mov
int3
mov
push
rorl
and
imul
push
and
je
cltd
sub
pop
sub
aaa
in
dec
or
outsb
inc
pop
add
push
push
jbe
dec
dec
pop
push
scas
mov
out
inc
jg
mov
xchg
jg
xchg
into
sbb
lcall
fidivl
push
inc
jae
xchg
loop
fstpt
loop
shll
and
aaa
sub
xor
adc
adc
jecxz
fwait
std
repnz
jp
sbb
cmp
mov
fsubp
or
adc
pop
sub
mov
and
jmp
ljmp
push
mov
adc
mov
dec
pusha
fs
mov
sub
cwtl
mov
and
inc
inc
sub
add
test
sti
es
and
cs
stos
in
mov
mov
mov
xor
mov
xor
dec
in
and
push
and
mov
leave
push
cmp
mov
and
inc
mul
adc
or
add
movsl
fcomi
and
mov
mov
out
out
dec
mov
aas
ds
add
mov
jp
insl
cli
movsl
mov
dec
jne
and
add
push
and
cmc
jge
jb
pop
and
sbb
lcall
jnp
and
xchg
pop
push
jge
addr16
adc
mov
inc
stc
and
scas
and
mov
ret
mov
cli
int
icebp
or
dec
mov
sub
push
jno
xchg
mov
push
mov
mov
cwtl
gs
loope
enter
test
sbb
insl
push
stos
data16
dec
add
dec
mov
sub
out
xor
int3
shrl
fldcw
add
ficomps
or
xchg
into
stos
or
push
aaa
mov
jo
dec
mov
sbb
popa
mov
mov
jnp
push
push
andl
imul
data16
mov
lret
testl
xchg
push
adc
call
inc
outsb
inc
rcr
pop
push
mov
pop
cmpsl
push
or
mov
mov
ds
fdivl
push
sub
mov
std
fiaddl
mov
imulb
xor
loop
orl
mov
and
rcrl
dec
mov
adc
cmpsb
adc
add
mov
div
mov
clc
lret
adc
fnstenv
or
xchg
and
jo
jb
add
pushf
xchg
int3
fs
hlt
or
out
fmulp
enter
xor
sbb
add
jbe
mov
inc
xor
pop
adc
sub
mov
jo
xchg
sbb
fwait
ja
xchg
mov
inc
sbb
ds
jo,pt
sbb
jle
arpl
sbb
dec
add
pop
fxch
movsb
stc
jnp
data16
jno
ret
insb
jp
repnz
arpl
testl
sub
add
lret
dec
cmpsb
mov
ljmp
in
add
call
test
dec
xor
or
adc
lods
test
push
cmp
insb
lds
cli
leave
aam
fidivrl
arpl
mov
addl
dec
adc
pop
jne
adc
adc
push
push
sub
hlt
pusha
or
mov
lea
call
cmpsb
sbb
pop
sbbb
and
xor
outsb
jmp
test
mov
xor
mov
add
xchg
rorb
data16
inc
sub
les
lods
cmc
in
cmp
or
jne
add
ret
dec
pop
enter
divb
shrl
mov
rolb
xchg
push
jl
adc
test
add
jmp
push
sub
mov
int
pop
or
bound
inc
cmp
dec
push
push
inc
push
adc
mov
dec
push
inc
clc
repnz
sbb
add
push
call
sub
xchg
push
xor
mov
and
or
add
das
bound
arpl
sub
or
pop
outsl
jae
insb
popa
dec
mov
pushw
jb
gs
sub
data16
ss
aas
outsl
ja
sub
dec
sbb
jb
je
bound
xor
je
shll
dec
addr16
outsl
insb
sbb
jne
pop
mov
sbb
fs
das
test
jo
aaa
outsl
je
aaa
imul
inc
push
inc
inc
jecxz
das
add
jle
sbb
push
and
inc
into
lret
push
sub
xor
xor
xor
and
cmp
and
pop
stc
pop
addl
jnp
scas
popa
das
and
test
lcall
xchg
push
pop
sbb
xor
adc
mov
pop
nop
jg
movzbl
xchg
xor
and
test
add
inc
push
addl
mov
clc
cmpb
popa
inc
into
and
lret
scas
sbb
incl
arpl
xchg
inc
add
cmp
push
and
lret
adc
xor
jmp
ss
ljmp
sub
sub
add
or
dec
lret
xor
faddl
inc
call
mov
jbe
inc
or
dec
adc
and
pop
adc
adc
xor
sti
ret
icebp
jno
or
mov
jno
inc
sub
insl
scas
adc
xor
xor
push
xlat
adc
push
sti
or
loope
es
and
sbb
and
mov
inc
repnz
push
xor
inc
scas
mov
inc
xor
adc
adc
pop
lea
sub
push
and
push
imul
mov
pop
adc
pusha
mov
jmp
add
sub
mov
cmp
xchg
pop
add
inc
js
ds
or
push
shll
adc
and
pop
cmp
sub
mov
popf
push
jmp
add
mov
movsb
and
add
enter
adc
dec
loopne
add
outsb
push
inc
dec
jecxz
xchg
rcl
inc
ret
xlat
dec
testl
out
push
aas
aas
jp
pop
push
inc
repz
inc
jns
jae
insl
dec
outsb
push
outsl
inc
inc
and
inc
aas
insb
push
outsl
cwtl
movsl
outsl
jae
or
jmp
add
lcall
mov
jae
roll
adc
xchg
push
mov
pop
pop
pop
cmp
testl
push
and
push
pop
nop
push
inc
dec
cmp
mul
and
repnz
jns
fs
mov
pop
ja
outsl
nop
test
dec
rcrb
jo
inc
nop
xor
outsl
add
fs
nop
jns
inc
xchg
fcompl
insb
pop
out
das
sub
insl
int
inc
in
mov
push
stc
jns
out
notb
movl
outsb
in
mov
sub
daa
fwait
jb
insb
jle
icebp
mov
push
iretw
int
mov
outsb
stc
xchg
je
fbld
mov
out
insl
cmc
cmc
mov
adc
cli
jmp
push
sub
inc
jbe
or
mov
jecxz
jns
sbb
push
push
mov
arpl
inc
mov
cwtl
xor
arpl
bound
jne
pop
mov
jae
std
outsl
divb
mov
outsl
insl
cld
mov
jl
push
in
shlb
sub
into
arpl
push
ret
fidivl
xchg
jo
dec
lret
adcb
cld
cmp
push
add
mov
adc
test
mov
pop
rclb
outsb
popf
lds
addr16
rcr
push
mov
addr16
data16
ja
pop
pop
push
or
ret
fwait
jnp
mov
and
xor
jb
iret
shll
mov
adc
test
pop
mov
in
popa
ret
dec
push
insl
imul
jl
bound
cmp
xor
mov
lret
lds
imul
aas
jp
xor
shlb
daa
cmp
iret
bound
inc
xchg
fs
xor
add
inc
leave
arpl
mov
push
or
and
mov
sub
call
test
imul
jns
sbb
popa
jo
insb
cmpsb
cmp
dec
gs
add
push
fs
lea
push
pop
aad
stc
call
outsb
sub
mov
pop
adc
jns
and
cld
mov
inc
jg
les
push
call
pop
ret
xchg
mov
and
push
ret
or
mov
icebp
or
or
sub
pop
ffree
in
jge
and
jo
pop
sbb
or
cmp
xchg
shrl
iret
lea
pop
jb
ds
jmp
dec
push
mov
mov
add
fildl
cmpl
push
pushl
daa
sub
pop
sbbl
mov
xor
jge
adc
sbb
xor
ljmp
dec
and
add
ret
xorb
xor
repz
sub
adc
rcrb
mov
aad
ret
sub
test
rcll
add
jns
and
dec
mov
push
xchg
shlb
push
pop
fs
addr16
sbb
inc
push
ret
push
push
icebp
out
mov
aaa
jne
add
cmp
mov
div
aad
jbe
ja
cmp
and
xchg
mov
pop
enter
jmp
and
inc
push
ret
xor
mov
in
call
or
stos
pop
push
movsb
dec
or
inc
aam
inc
data16
cli
pop
jns
jge
dec
popf
hlt
mov
dec
or
cld
imul
sbb
mov
xor
pop
ret
in
inc
jl
inc
push
ret
loope
sbb
sub
and
push
pop
ret
inc
mov
and
ret
sbb
mov
movsb
stc
xchg
xchg
xchg
dec
cmp
shl
add
add
sahf
lahf
lds
rolb
jb
dec
inc
sbb
add
cmp
and
push
das
lods
je
mov
pop
fidivrs
data16
push
cltd
inc
pop
inc
adc
or
sar
mov
jns
test
aad
add
sarb
and
xorl
push
stc
jae
nop
movsb
and
add
push
add
je
mov
idivl
xchg
and
pop
and
add
scas
lcall
inc
push
in
xchg
leave
and
fsubr
test
inc
cmc
push
dec
popa
mov
in
push
push
add
inc
xor
pop
outsl
dec
sbb
ja
mov
pushf
add
push
add
jl
xor
and
push
add
and
pop
daa
xor
gs
jp
mov
inc
outsl
les
pusha
leave
dec
test
cli
das
jae
mov
ss
jne
and
sub
or
add
adc
fidivrs
sbb
orl
outsl
dec
pop
and
sbb
ret
xchg
addl
add
sub
pop
or
mov
mov
mov
dec
or
popa
enter
push
js
dec
jge
xor
sbb
xlat
pop
jo
xchg
xchg
mov
lods
and
add
mov
jbe
and
mov
clc
jne
jl
jmp
aas
int3
push
add
jns
ljmp
add
mov
addl
insb
pop
jnp
testb
xchg
dec
or
incb
push
into
adc
jl
push
mull
push
mov
inc
push
add
dec
mov
lods
adcb
mov
add
push
sbb
mov
ja
mov
addb
add
cmp
or
xchg
add
mov
jmp
sbbl
inc
adc
mov
pop
shl
cmpl
mov
push
mov
mov
imul
ljmp
cld
jnp
sub
cli
sub
jp
insl
sbb
in
addb
aam
jno
repnz
and
mov
sbb
mov
cli
insb
fsubl
fmul
sbb
out
xchg
test
and
push
fistps
lret
sti
pushf
add
push
subb
inc
xor
call
adc
mov
ds
inc
arpl
push
mov
or
pop
dec
jnp
test
mov
and
sbb
and
fidivl
orb
push
or
lock
clc
push
mov
rclb
dec
pop
aad
sahf
or
je
push
dec
add
add
cmp
mov
fs
vmovaps
inc
lret
dec
xor
xor
cmpsl
dec
dec
jbe
xor
icebp
xlat
daa
adc
mov
push
pop
inc
sbb
xor
int3
popa
dec
imul
popf
pop
arpl
sbb
and
or
nop
sbb
push
sbb
js
bound
cmpsl
add
cld
inc
push
xor
xchg
jns
and
pusha
adc
bound
cmp
aam
pop
push
xchg
mov
roll
add
ljmp
mov
sbb
je
sbb
push
add
pop
sar
and
and
mov
aad
xor
mov
adc
dec
inc
addl
jns
adc
jmp
jg
mov
jno
and
int
aam
sarb
ljmp
clc
rorl
mov
sub
movsl
sbb
inc
daa
pop
mov
mov
add
xchg
add
xor
xor
jb
mov
pop
ret
xchg
mov
mov
adc
nop
or
cmpsb
test
and
call
data16
inc
imul
dec
mov
pop
dec
stc
adc
sbb
cmpsl
add
movsl
adc
fistpl
rcl
out
jl
add
xchg
loop
std
mov
push
rolb
push
or
mulb
leave
dec
ret
or
cmc
test
sbbb
cmc
ljmp
push
movsl
inc
and
and
popa
jge
push
fs
fs
in
inc
jmp
xor
js
aad
or
dec
loope
or
cmp
and
roll
test
push
xor
jecxz
ljmp
ja
andb
std
adc
or
or
add
in
add
push
xor
mov
pop
leave
repnz
mov
adc
fwait
pop
push
inc
loope
or
adc
and
add
imul
test
sbb
add
mov
outsb
inc
pop
xor
xchg
jecxz
pop
add
pop
jbe
popf
shl
add
inc
jp
pop
xchg
dec
or
or
push
adc
push
and
pusha
dec
call
sub
push
loopne
cmp
lcall
add
pop
push
xchg
or
or
lock
mov
push
test
adc
push
sbb
pusha
cs
sub
and
push
pop
mov
mov
test
adc
aam
stc
push
andb
je
lcall
pop
je
add
mov
cmp
xchg
mov
fiadds
mov
xchg
mov
sbb
or
fisubs
loopne
add
insl
add
push
add
jnp
cmc
and
dec
mov
subb
sbbb
dec
mov
fldt
and
sub
xor
and
dec
repz
xchg
pusha
repnz
test
aaa
fs
mov
cmp
jl
or
mov
es
sbb
mov
cmpsl
mov
test
jmp
imul
cltd
std
sub
inc
xchg
addb
cld
pop
push
mov
push
lock
push
push
xchg
fs
icebp
xor
add
or
jne
in
orl
and
sub
or
mov
sub
loope
icebp
fstl
dec
or
adc
dec
cmp
cmp
daa
push
pop
jbe
testb
test
sub
pop
jae
sbb
mov
xchg
scas
cmc
jne
repnz
dec
add
clc
jmp
cmp
add
sbb
stc
pop
xchg
mov
aas
cwtl
inc
xor
gs
add
push
mov
mov
shrb
dec
cmc
add
js
leave
enter
push
add
je
into
push
stc
sti
pop
xor
push
or
pop
imul
pop
push
or
ljmp
push
mov
or
adc
jno
adc
loope
adc
shrl
sub
mov
cmp
icebp
shll
fistpll
pusha
add
leave
xor
mov
pop
orb
pop
ss
xor
pop
push
decl
push
mov
adc
clc
flds
pop
fwait
roll
xchg
add
rol
mov
dec
inc
push
xchg
mov
or
mov
mov
inc
pop
sti
add
lret
push
idivb
lods
rcll
test
push
cli
scas
xor
pop
aad
mov
sbb
cmc
push
call
inc
adc
aas
xchg
daa
andl
mov
je
add
sub
dec
out
add
ss
and
test
or
int3
pop
mov
and
xchg
add
mov
lahf
ret
jns
ss
mov
lods
mov
pop
push
push
fsts
sbb
fidivrs
aas
scas
and
nop
or
adc
sub
add
add
pusha
mov
stos
adc
sub
pop
test
pop
cs
insb
jge
mov
jno
add
push
movsb
mov
xor
roll
pop
pop
inc
xchg
add
xor
xor
mov
sbb
jno
pushf
xchg
mov
and
or
js
push
sub
inc
loopne
push
jg
adc
xchg
subb
xor
shlb
xor
add
fildl
aad
or
aaa
scas
or
inc
adc
fdivs
or
push
push
cmp
lcall
pop
push
testl
cld
dec
add
sar
push
sub
int3
popf
dec
add
mov
mov
dec
cmp
test
xchg
dec
pop
les
adc
xor
nop
and
mov
jmp
test
xor
ja
aam
or
jne
cltd
sbb
cmp
pop
les
sub
add
cwtl
adc
push
and
sarl
pusha
jle
push
xchg
insb
jae
mov
jb
mov
sbb
lahf
inc
aam
and
mov
pop
pusha
jo
stos
and
data16
adc
dec
pop
cli
xor
cmpsb
push
loopne
or
adc
mov
adc
jno
add
enter
rolb
lds
dec
bound
in
pop
pop
inc
iret
gs
fdivrl
pop
pop
andl
lods
sub
xchg
ljmp
mov
inc
leave
push
scas
mov
mov
mov
or
cmp
jge
add
or
mov
mov
cli
and
loop
adc
pusha
push
push
pop
pop
jmp
xor
or
mov
pop
jo
sti
mov
popa
sbb
pop
dec
imul
push
push
sbb
int
mov
js
xchg
push
adcl
pushf
pop
pop
pushw
and
xchg
sbb
push
xchg
push
stos
adc
in
sbb
push
fwait
xor
test
xchg
xchg
add
xor
cmp
popl
jne
bnd
jns
push
add
sub
push
push
loop
adc
xchg
ljmp
cmp
mov
add
mov
xor
inc
pop
push
push
stc
lods
push
pushf
mov
add
lret
adc
xor
bound
fbstp
and
psubq
dec
add
fidivs
or
dec
xchg
dec
add
add
cmp
sub
lods
mov
xchg
push
xlat
popa
cld
mov
sub
jge
pop
movsl
call
pop
clc
adcl
pop
outsb
repz
cwtl
push
pop
bound
dec
scas
xor
addl
mov
popa
mov
in
adcb
jns
orb
lods
push
jae
jo
sub
push
xor
mov
adc
into
cmc
push
sti
pusha
push
pop
aas
add
lret
mov
mov
add
xor
sub
push
add
loope
push
leave
dec
inc
outsb
rcrl
xchg
in
sbb
push
arpl
mov
add
inc
jbe
mov
mov
sub
adc
xor
or
ja
mov
movsl
in
cmp
je
add
mov
call
rcr
movsb
xchg
lret
mov
xor
jle
push
inc
loop
into
or
in
xor
out
daa
mov
sbb
xchg
in
adc
loopne
ljmp
sub
rcrl
sbb
hlt
ret
roll
iret
mov
mov
inc
jg
es
clc
and
pop
mov
xchg
push
adc
jmp
in
xchg
sub
xor
push
xor
insb
mov
out
imull
push
fs
dec
add
xor
les
ud2
pop
andb
sbb
cwtl
jo
add
lock
push
sbb
out
bound
push
or
insl
pop
rcrl
sbb
pop
inc
mov
adc
push
cwtl
jbe
pop
mov
enter
std
jo
inc
lods
fdivl
cmc
sbb
mov
cmp
sub
aas
or
sbb
pusha
fisubrs
js
ficoms
add
sbb
add
push
mov
push
popa
cltd
push
shl
mov
repz
adc
leave
and
mov
xor
fwait
popa
lds
xor
shlb
or
and
add
sti
add
push
dec
popa
sub
loop
sarl
icebp
rcrl
js
jmp
icebp
test
add
xchg
push
filds
sub
adc
shlb
sbb
add
jbe
add
pop
mov
push
mov
cmpb
and
xor
dec
loop
jbe
shrb
mov
shrl
andb
xchg
inc
sub
loop
or
jmp
push
enter
cmp
or
outsl
add
push
inc
lods
mov
dec
xor
jno
xchg
cmc
leave
jne
cmpsb
hlt
cld
mov
pushf
or
mov
sub
mov
popa
mov
and
inc
xor
fs
and
lret
bound
and
adc
inc
lret
dec
push
pushf
or
das
xchg
mov
lea
cltd
adc
ljmp
add
in
xor
xor
adc
cld
push
addb
popf
cmp
adc
int3
adc
xorb
sti
pop
mov
sub
jmp
mov
xorw
stc
aas
imul
stc
aam
rorl
ljmp
enter
stos
cmc
xchg
repz
mov
xchg
add
jg
add
jg
adc
xchg
mov
lahf
sub
push
mov
sub
dec
dec
ror
mov
inc
add
jge
mov
cld
in
xorl
push
and
sbb
and
jne
mov
jb
add
push
call
push
or
xor
ja
jns
pop
daa
cmpsb
xlat
out
outsb
mov
push
pop
or
xor
leave
insl
xchg
mov
aam
add
cmp
mov
push
mov
testb
rorl
add
lods
shrl
xchg
jns
movsb
jns
sub
or
aam
dec
xor
add
fs
adc
push
xor
arpl
dec
dec
mov
arpl
push
lret
pop
rcr
push
imulb
jle
pusha
mov
xor
xor
add
sbb
sbb
mov
jo
pushf
pop
fsubl
insl
xchg
xchg
push
mov
stos
sub
cld
push
enter
in
dec
push
add
dec
mov
xor
mov
lods
mov
rcrb
stos
sub
jbe
inc
das
and
imul
fldl2t
jo
and
pop
or
loop
xchg
xor
dec
std
jmp
adc
sbb
pop
pop
popa
mov
jl
ljmp
jno
or
movaps
xchg
lods
sub
adc
fadds
add
fidivs
adc
push
sbb
xchg
imul
icebp
add
stos
dec
jle
data16
loop
inc
xor
mov
lret
je
sbb
dec
pushf
ficoml
adc
sub
mov
add
loopne
incb
loope
mov
mov
mov
or
or
add
arpl
pusha
mov
and
mov
test
xor
fs
stc
arpl
les
test
adc
pop
fcomi
xor
stc
add
loope
xchg
in
sbb
test
fmul
lret
push
adc
call
das
inc
and
adc
outsl
add
add
add
add
stc
mov
fisubs
cld
repz
adc
lahf
imul
xor
mov
nop
push
push
testb
outsl
cmp
les
cmp
stc
enter
add
shlb
mov
clc
cmp
push
inc
push
add
popf
adc
enter
xchg
imulb
enter
push
es
xchg
pop
icebp
sbb
sbb
je
popl
das
stos
mov
dec
adc
add
push
cld
add
jo
lea
fstl
mov
jnp
in
pop
xor
in
outsl
add
adc
sub
push
inc
call
mov
repz
insl
das
and
sbb
addl
lret
mov
push
mov
fcomps
inc
fsubr
mov
cwtl
ds
iret
cmpsb
out
add
mov
xor
cmp
icebp
push
in
loope
or
and
repnz
add
lods
arpl
loopne
addl
out
mov
adc
addr16
in
xor
and
or
jge
loope
out
and
mov
pop
push
xchg
adc
idivb
bound
mov
push
sbb
adc
mov
paddsw
pop
aad
pop
xchg
inc
repnz
and
pop
pop
mov
mov
xor
mov
inc
inc
dec
int3
in
mov
add
jge
pop
push
or
push
mov
xor
or
lahf
mov
rol
inc
stc
sbb
mov
adc
jmp
stos
add
test
mov
push
push
fs
xor
sbb
sbb
lret
xchg
pusha
js
push
add
stc
pop
stos
cld
insl
mov
and
sar
lock
lcall
out
faddl
test
inc
int3
xor
clc
xchg
cmc
dec
mov
lods
je
and
inc
in
dec
xchg
cmpb
add
lret
or
cmp
push
fdivs
test
imul
cwtl
iret
ss
or
popf
jns
into
cs
add
out
and
add
sub
das
add
cmpsb
rorb
mov
add
inc
add
push
call
pop
jae
mov
nop
and
add
adc
mov
lret
imull
aaa
out
and
push
add
test
and
push
adc
mov
jmp
mov
push
add
xchg
dec
enter
in
out
pop
imul
and
add
add
out
cmc
push
std
pop
xchg
lods
mov
and
int3
or
in
mov
mov
cmp
imul
bound
mov
cmp
inc
adc
pop
add
or
pop
pop
mov
cmc
repz
jo
ja
aam
cmp
iret
adcb
loop
arpl
jge
inc
ret
imul
ds
sub
dec
repz
dec
int
sarb
ja
or
add
or
shr
cli
push
cwtl
pop
std
xchg
add
clc
mov
or
adc
or
add
test
in
das
bound
mov
xor
pop
or
adc
fcoms
or
push
push
xor
and
add
xlat
addr16
and
pop
aaa
imul
rclb
mov
jns
movsl
mov
test
xor
pusha
cmp
add
fwait
test
nop
xchg
mov
bound
fcmovbe
mov
fdiv
in
icebp
sahf
sub
dec
push
jle
cmc
add
xchg
or
and
or
aaa
and
xor
inc
cmp
sub
mov
outsl
or
push
mov
sbbb
dec
jge
cmc
pop
push
or
adc
and
sub
aad
inc
mov
push
jno
movsl
js
leave
xchg
push
subb
fistpl
sbb
sbb
std
int
mov
jno
call
sti
dec
insl
in
rcrb
in
pusha
shrl
add
jns
rcr
clc
hlt
sbb
addr16
add
xor
movsl
inc
stos
adc
sub
sub
add
mov
inc
bound
inc
pop
xor
and
add
xchg
cs
mov
sub
cmp
repz
adc
popa
sti
adc
fstpt
pop
xor
xlat
push
add
iret
push
jo
dec
into
xor
push
mov
or
adc
mov
xor
icebp
or
lcall
push
fbstp
insb
jmp
sbb
gs
push
lret
push
xor
movsl
and
or
sbb
adc
iret
lcall
mov
stos
and
push
negl
and
cmp
and
and
xor
pop
sub
xchg
js
dec
adc
shlb
lods
add
fsubs
fcoml
inc
adc
add
inc
mov
icebp
daa
adc
push
add
movsl
sub
push
lcall
mov
pop
into
dec
pop
push
jmp
pusha
jne
lea
cs
mov
ljmp
repz
add
inc
jne
fldl
aas
or
pop
pop
mov
or
adcb
lret
daa
inc
add
pop
push
sub
adc
fst
clc
add
xchg
or
push
sub
jge
into
cmp
shr
popa
adc
sbb
pop
lahf
sbb
cmp
aas
or
hlt
adc
test
adc
pop
sub
inc
sub
xor
jle
sbb
inc
sahf
shl
out
xor
push
outsb
add
adc
add
popf
sbb
push
pushf
lock
mov
fs
scas
cmp
out
sub
push
not
fimull
push
sub
test
jne
jne
inc
push
idiv
stc
rcrb
sbb
movsb
out
andb
mov
add
mov
adc
jbe
or
nop
xor
or
sub
push
xchg
mov
push
pop
or
inc
push
cmp
jb
add
ret
fwait
data16
xchg
adc
std
sbb
lea
sub
ffreep
popf
std
sbb
popa
int
adc
add
cmp
push
add
stos
enter
insb
daa
adc
js
dec
cmpb
call
push
test
mov
cmc
hlt
nop
and
mov
sbb
add
pop
leave
push
gs
test
xchg
add
add
and
sbb
jbe
out
push
jmp
xor
or
push
push
xchg
xor
cmpb
fiadds
push
sub
fistpl
add
jmp
lea
fnsave
fisttpl
pusha
mov
enter
mov
mov
inc
add
jecxz
xor
mov
shlb
fcoms
iret
repz
pop
pop
incb
pop
or
loopne
shrl
leave
sti
jg
mov
fmul
xchg
adc
loopne
bound
sub
inc
add
or
mov
test
inc
dec
dec
and
movl
adc
loop
js
mov
jns
sahf
insl
mov
jne
add
fisubl
leave
sub
add
push
call
fs
fs
shrl
lods
push
xor
inc
add
out
mov
pop
add
cmc
cltd
pop
popa
push
inc
add
push
mov
inc
or
jns
sub
add
mov
dec
andb
mov
xchg
shr
call
sar
pop
dec
push
sub
aas
xchg
mov
add
jmp
mov
movsl
js
outsl
ds
addr16
inc
clc
daa
daa
push
pop
sbb
xchg
xchg
das
xchg
mov
inc
pusha
inc
das
or
add
mov
adc
ret
add
rcrb
loope
sbb
sub
dec
mov
and
jg
dec
dec
mov
out
ljmp
add
daa
sub
jnp
out
popf
add
fs
push
aas
fwait
into
sbbb
jns
push
movsb
dec
mov
cli
pop
in
or
ss
xchg
and
cli
and
cmp
shrb
mov
clc
in
inc
add
or
and
or
push
jmp
or
sbb
scas
movzwl
mov
pop
or
xchg
andl
fcom
adc
hlt
shll
int
ret
fmuls
dec
cld
mov
or
adc
jbe
les
and
orl
sbb
pusha
stos
mov
pop
testl
out
movsl
mov
mov
add
dec
add
xchg
je
mov
sub
or
mov
shr
mov
dec
jno
push
xor
sbb
sahf
dec
decl
add
adc
iret
orb
dec
movl
xor
hlt
shrl
adc
and
mov
add
cmc
xlat
xchg
ds
mov
call
or
inc
xchg
cmp
xor
js
gs
jo
loopne
stc
mov
or
dec
jmp
xlat
lods
mov
mov
insb
mov
ja
imul
imul
jg
push
push
xchg
inc
lcall
cmp
cwtl
xorb
push
sbb
movsl
outsl
je
int3
jno
fistpll
je
jo
test
insb
imul
sub
and
push
fbld
and
call
movsb
pcmpgtb
push
push
mov
cvtdq2ps
cmovno
push
mov
xchg
and
outsl
sub
xor
jne
orb
inc
sub
sbb
sbb
xchg
inc
sub
jl
or
rcll
fwait
mov
xor
and
push
les
lods
cmp
lea
sbb
mov
mov
sbb
sbb
test
or
in
mov
inc
mov
lcall
pop
xor
and
fs
fs
xor
sub
aam
cmp
or
inc
push
mov
dec
pop
cmpsb
mov
inc
push
and
push
inc
pop
and
sub
push
ljmp
int
pop
or
test
enter
xor
sbb
iret
pop
or
popa
and
inc
mov
inc
lock
pusha
sub
mov
pop
or
sar
pop
and
lods
aam
adc
cmp
or
mov
sub
inc
idivb
aas
xchg
and
stos
cmc
jmp
mov
jnp
js
mov
lods
jl
push
out
loop
pop
lods
xchg
fwait
xchg
pop
orb
mov
add
aas
add
xchg
mov
repnz
xchg
pop
mov
jge
pop
push
inc
fcomps
aad
stos
mov
pop
lahf
adc
push
movsb
add
lods
mov
call
jmp
mov
add
or
out
add
mov
jmp
or
push
jns
xchg
and
or
movl
loope
inc
inc
jns
sbb
pop
enter
inc
cs
pop
insb
sub
adc
test
cmp
jo
sahf
add
loop
pop
jge
popf
jmp
lret
aam
pusha
mov
fdecstp
loop
aas
pop
mov
push
sub
test
mov
mov
pop
add
mov
xchg
push
nop
enter
sbb
and
mov
mov
push
daa
std
fs
ficompl
jbe
loopne
lret
pop
mov
popa
mov
add
mov
ret
std
add
addr16
xchg
mov
xchg
bound
push
xchg
pop
outsl
xchg
sbb
mov
add
add
push
daa
rorl
insb
lock
pop
and
sub
cmp
cmc
and
leave
pusha
leave
fcoms
pop
xor
xor
test
sbb
pop
mov
mov
jbe
imul
outsb
daa
jne
jae
js
sbb
push
sbb
popa
pop
push
nop
sbb
js
jo
push
push
leave
pop
and
adc
add
enter
pop
adc
add
add
pop
addr16
inc
sbb
cmp
pop
pop
pop
popa
or
imul
scas
jns
add
or
orb
bound
sub
fcom
fiaddl
inc
movb
inc
addr16
daa
sarb
xchg
pusha
adc
mov
pop
loope
add
loopne
daa
xor
jp
or
aam
std
fnstcw
sbb
aas
or
cmp
test
dec
push
xchg
popa
pop
inc
mov
mov
mov
add
daa
lret
ret
dec
jg
ds
cmpsl
pusha
jecxz
mov
jb
jns
fildl
test
ret
fisubl
inc
outsl
out
and
aaa
mov
mov
push
mov
jg
lcall
hlt
aas
scas
pushf
jl
pop
cmp
cmp
clc
lret
in
sbb
imul
mov
xor
mov
fwait
push
test
andb
fistpl
lds
cmp
lahf
and
xchg
popa
pop
jl
andl
and
ja
aad
cmp
adc
and
incb
and
xor
ljmp
xor
mov
loopne
icebp
addl
push
jge
aad
and
test
inc
clc
orl
pusha
clc
into
ficoms
insb
pop
adc
sbb
jge
add
mov
xor
test
sti
pop
mov
jg
es
loope
mov
cmc
jmp
adc
test
lock
ds
pop
add
rorl
pop
push
scas
add
out
leave
jmp
mov
and
push
jle
cmp
mov
pop
xor
mov
inc
aad
pop
loopne
rdmsr
fbld
les
push
xor
lock
clc
pop
enter
nop
std
sbb
cmp
push
sahf
and
in
loope
cmp
data16
sbb
and
js
popa
inc
sbb
sbb
push
add
jecxz
inc
mov
fiadds
pop
xchg
imul
pushf
pop
mov
cmp
adc
js
xor
outsl
shlb
push
mov
pop
mov
in
or
mov
into
sbb
andl
mov
shll
add
pop
imul
xlat
psubq
push
mov
jmp
or
mov
or
out
mov
lcall
dec
sbb
add
fstl
lods
fbstp
inc
add
add
jle
loopne
jecxz
orl
mov
and
mov
sbb
mov
loopne
push
pusha
insb
jno
rcrl
mov
cltd
push
pop
jge
pusha
divl
mov
loop
add
push
mov
sbb
clc
add
jge
lahf
sbb
inc
hlt
insb
popf
xor
adcl
xchg
imul
and
sti
push
into
and
aam
shrb
xchg
je
fs
sub
add
jle
sbb
loopne
ljmp
and
mov
fdivl
scas
or
xorl
pop
shrl
push
addr16
mov
movsl
jle
outsl
lods
xor
sarb
and
sbb
pop
mov
ret
movsl
xor
into
push
nop
or
dec
aam
clc
cmp
test
push
pusha
or
sar
and
pusha
mov
in
add
xchg
cltd
jg
and
xor
test
add
outsl
pusha
adc
mov
push
movsl
xor
inc
out
pop
outsl
inc
insb
or
shrl
cmp
mov
cs
call
pop
push
sub
mov
add
pop
mov
add
push
mov
pop
adc
call
lea
push
jne
ror
push
mov
pop
shll
mov
jecxz
and
pop
sbb
push
ret
loopne
ret
sbbb
andl
dec
mov
inc
movsb
xor
add
rol
adc
fidivs
cmp
inc
stos
popa
movsb
jo
movsl
jge
sub
pop
pop
xor
fdivr
xchg
nop
xchg
jl
pusha
xor
mov
inc
dec
add
fimuls
les
fwait
pop
test
pop
mov
aaa
adc
test
jo
subb
mov
xor
adc
push
mov
cmp
cmc
scas
sbb
mov
add
pop
mov
xchg
mov
pop
orb
cltd
jl
outsl
addr16
and
cmp
jo
xor
xlat
test
or
jnp
xchg
mov
aas
out
xchg
inc
mov
and
mov
cmpsb
mov
adc
lea
call
or
push
adc
or
stos
push
mov
nop
sub
mov
cmc
xchg
je
xchg
sub
imul
ja
pop
sub
pusha
jno
addr16
and
popa
je
or
inc
and
test
push
add
push
dec
aaa
cmp
cmpsb
dec
add
mov
test
xor
add
push
dec
sub
popa
call
fmull
bound
adc
arpl
nop
andb
adc
cmp
mov
add
cltd
call
mov
push
mov
int
jp
mov
xlat
mov
std
cmp
jns
or
popf
sbb
adc
scas
sub
ds
pop
add
jle
jge
dec
add
loop
stos
stc
jo
pusha
call
lcall
lods
add
jl
sbb
movsl
sbb
data16
mov
mov
xor
mov
mov
setle
xchg
cmp
add
adcl
jge
add
es
add
test
pusha
jmp
cli
out
xchg
mov
xchg
dec
pop
nop
push
mov
mov
sub
xorl
inc
mov
and
mov
add
repz
nop
and
cld
cli
pop
dec
or
nop
push
pop
fwait
rcrl
outsl
dec
and
and
push
stos
inc
add
xchg
jl
adc
in
add
loope,pt
and
sarl
andb
fwait
sbb
xlat
xor
std
movsl
lahf
jns
sbb
mov
dec
orb
mov
mov
popl
pop
fs
adc
cltd
cmp
add
loopne
ljmp
cmpb
sbb
rcll
ja
sbb
mov
cmp
and
lea
fisttps
jne
out
sahf
flds
mov
add
imul
shr
sbbb
inc
test
addl
add
leave
sub
mov
add
pusha
or
inc
int3
lea
sub
jg
in
push
mov
xchg
into
pop
int3
mov
in
mov
push
rolb
pop
add
jns
pop
je
pop
sub
popl
xor
sbb
xchg
mov
cmp
js
inc
int3
sub
xchg
mov
adc
lcall
sbb
clc
jp
jb
sbb
or
out
inc
adc
pop
iret
leave
lods
adc
add
inc
jno
or
pushf
cmp
adc
filds
dec
popa
push
cmp
jecxz
and
aas
add
cmc
mov
dec
add
push
dec
sbb
cld
mul
add
xchg
popf
fst
repnz
lret
sub
stc
je
add
ret
aas
lock
pop
das
addl
roll
sarb
xchg
out
pop
lcall
jno
inc
cmp
mov
or
xor
fnstcw
xor
ja
les
mov
or
push
add
loope
imul
arpl
dec
dec
push
cli
fsqrt
fwait
add
cmpsb
cmp
aam
int3
je
add
loope
in
out
stos
inc
sbb
into
out
or
or
inc
or
sbb
mov
loopne
push
imul
sub
in
mov
jne
loopne
inc
xor
cmp
pushf
push
loope
push
addb
mov
pusha
or
movzbl
clc
aaa
dec
out
add
push
fists
inc
add
lods
add
push
jo
add
int3
sbb
sbb
jecxz
aad
insl
jmp
fnsave
push
jl
cli
cmp
jge
in
btr
movsb
nop
div
inc
mov
gs
mov
xorb
repnz
cs
fmul
out
pop
mov
cltd
andb
clc
mov
aas
push
fs
out
mov
out
add
add
push
cmp
stos
jnp
fwait
pop
add
sbb
mov
iret
sahf
or
fistl
shll
add
pop
pop
sub
inc
mov
add
movsl
jo
add
filds
cltd
sub
xor
adc
push
xor
ja
iret
shlb
xchg
std
add
loope
mov
iret
and
enter
push
je
imul
add
int3
jmp
add
sub
and
jnp
xor
loopne
das
pop
cwtl
add
cmp
dec
out
sbb
xchg
push
sbb
cmpsb
cmp
shlb
dec
ret
out
movsb
es
popf
rorb
js
and
or
pop
jnp
add
insl
cltd
cld
repnz
icebp
jns
js
stc
test
and
add
pop
mov
imul
sahf
aas
adc
pusha
fwait
loopne
adc
add
ret
xchg
iret
xchg
cmp
xchg
scas
adc
js
aad
add
push
push
aas
jno
jnp
push
mov
inc
jo
add
mov
cmc
fdiv
inc
adc
jo
sbb
dec
faddl
aad
test
xchg
push
mov
pop
cmp
pushf
push
xor
inc
sbbb
sarb
out
add
adc
subl
mov
pop
add
flds
jecxz
adc
push
inc
cltd
sub
mov
push
push
mov
pop
mov
loop
add
test
add
sub
out
lea
fdiv
mov
call
arpl
dec
xchg
add
fucomp
jb
jl
xchg
add
lret
nop
pop
mov
and
dec
inc
push
bnd
xor
and
adc
hlt
mov
inc
ret
out
push
mov
mov
test
xor
or
repz
pop
pop
mov
addl
hlt
call
ljmp
mov
sub
jge
dec
mov
inc
or
test
add
mov
xor
cwtl
clc
incb
pushf
ss
sbb
negl
int3
pop
xchg
mov
and
mov
add
and
add
in
subb
into
push
bound
jo
add
add
ljmp
push
das
pop
mov
and
aas
dec
push
andl
inc
pushf
aad
xor
mov
mov
mov
xchg
ja
sahf
cmc
and
mov
and
mov
mov
inc
dec
pop
add
into
mov
xchg
cmp
sub
arpl
lret
add
test
in
ja
and
jnp
mov
xchg
cmpsb
pop
pop
addl
je
push
push
js
lret
adc
mov
push
sub
add
fcmovnbe
add
fcomps
aam
push
jl
shlb
rclb
mov
mov
add
mov
ret
enter
push
or
cs
xor
xchg
out
jno
adc
adc
jmp
add
es
fst
fidivrl
xor
adc
push
dec
xchg
ds
hlt
in
cmpsb
dec
imul
jns
ret
jne
in
add
mov
addr16
xchg
movsl
int3
lret
xlat
ja
add
inc
mov
or
dec
adc
lods
mov
nop
push
push
mov
add
push
mov
fildl
xchg
push
inc
jp
mov
lea
pop
lret
mov
add
addb
xor
mov
pop
aas
mov
inc
dec
sbb
shrb
rcrl
sarb
mov
aam
addb
out
mov
mov
adc
push
mov
or
inc
lret
cmp
lock
lock
std
arpl
es
cli
cld
andb
faddl
sub
cs
bound
mov
or
push
dec
xchg
sub
addr16
test
adc
outsl
add
and
or
inc
xchg
cmp
ret
das
push
mov
int
and
mov
xorb
ret
js
cli
data16
bound
push
and
mov
test
fsubl
call
add
xchg
dec
or
mov
add
rcrl
mov
and
movsb
lcall
fisttpl
mov
gs
add
mov
pushf
sti
andl
push
push
das
mov
out
or
adcb
sub
test
xor
stos
inc
or
andb
into
pop
push
inc
loopne
dec
jbe
mov
add
lahf
clc
and
rcrl
push
insl
test
xor
dec
xchg
cmp
loopne
sbb
jns
xor
fxch
jecxz
jle
orb
loopne
add
ffree
iret
push
and
stos
or
cmp
cmp
sahf
shr
stos
inc
add
pop
out
xchg
aas
addb
push
fnsave
push
stc
dec
and
aas
add
push
mov
outsl
fbstp
jl
mov
push
inc
xlat
sub
bound
in
out
pop
movsb
sbb
add
mov
add
mov
inc
pop
rcrb
test
or
xor
push
inc
cwtl
aad
mov
add
push
add
rolb
and
pop
fisubrs
jle
paddd
pop
loopne
jo
pop
add
push
cmpsl
popa
out
ret
subb
xor
pop
scas
xlat
ret
sbb
pop
xor
dec
cld
add
jno
dec
xchg
adc
inc
out
sub
mov
in
adc
imul
pusha
push
or
dec
ret
addl
sarb
add
push
mov
inc
xor
sub
cmp
scas
add
pop
int
mov
in
aad
cltd
cmp
and
sub
sub
sub
fstl
add
xor
aas
or
out
add
cmp
testb
repnz
adc
hlt
lcall
or
sbbb
jl
push
out
push
adc
imul
or
es
subb
inc
push
add
sahf
outsb
sub
insl
or
push
xchg
sbb
out
inc
add
movl
jecxz
int
cmp
cmc
add
mov
mov
pusha
fidivrl
in
and
xchg
stc
sub
push
mov
out
xchg
lds
push
rcrb
aaa
cmpsb
adc
es
xor
icebp
fimull
mov
add
clc
inc
fmuls
lahf
add
sbb
jns
add
xchg
imul
call
sbb
jns
dec
call
imul
push
add
popf
ds
fadds
ret
mov
pusha
xor
add
lcall
add
pop
mov
jl
aam
pop
add
mov
call
sahf
jl
incl
fcmovbe
leave
cmp
inc
decl
fs
pop
add
ljmp
mov
or
xchg
add
test
fwait
shr
cld
psrlw
xchg
pop
sub
cmp
outsb
loopne
push
and
flds
jae
std
pop
aaa
loop
cmpb
mov
pop
mov
mov
sub
add
lock
add
add
mul
jle
dec
nop
cmp
dec
frstor
stos
popf
xor
push
lret
add
pop
add
cmc
movsb
dec
adc
xchg
mov
sub
lock
mov
aas
aas
test
mov
jbe
add
or
mov
sub
cwtl
inc
and
inc
mov
add
jl
sbb
pop
inc
andl
enter
adcb
xchg
mov
xchg
aam
das
sub
inc
lds
les
out
insb
dec
mov
add
or
xor
xchg
add
addb
push
pop
dec
dec
xor
xchg
xchg
pop
cmp
sub
and
and
push
iret
incl
fnstsw
lods
loope
jge
dec
out
bound
dec
and
fwait
add
add
outsb
arpl
incb
xor
inc
jg
jecxz
xor
add
xorl
xor
ds
pop
jne
add
sub
xchg
jg
xor
pushf
cmp
push
mov
add
inc
or
add
cmp
lock
je
xchg
pop
and
pusha
or
icebp
shll
xor
lods
dec
test
add
fsubr
push
pop
jg
and
push
cmpsb
adc
mov
adc
inc
jbe
lock
add
xchg
test
mov
xor
je
mov
pop
adc
jb
mov
xor
std
or
shrl
sub
lea
mov
cmp
inc
pusha
jae
test
pop
adc
adc
pop
cmp
and
and
or
out
jns
sub
mov
xor
into
mov
sbb
and
out
stc
or
lret
add
push
mov
out
clc
jns
add
xor
pop
xor
in
pusha
add
test
cmp
int3
int3
xorb
jl
add
iret
mov
jae
xor
cmp
inc
or
imul
pop
dec
sarl
call
jp
jne
insl
xor
cwtl
add
loop
xchg
or
in
loopne
push
add
mov
inc
daa
sbb
mov
repz
cmpl
sbb
subl
mov
and
dec
or
sub
js
or
sub
pop
inc
daa
roll
jno
fstp
xor
loopne
in
inc
mov
cmp
or
or
popa
mov
pop
stc
adc
mov
xchg
stos
pop
aad
lods
add
es
add
inc
insl
add
add
mov
and
push
inc
pop
adc
cmp
idivb
stos
lods
sub
or
aas
ficoml
jge
push
push
lahf
daa
pushl
pop
xor
mov
loopne
clc
andb
and
mov
add
nop
mov
test
mov
lock
es
mov
cmp
rol
mov
inc
cmp
add
aad
push
lods
push
sbb
dec
mov
push
add
in
inc
lret
mov
test
cli
push
nop
add
or
pushf
aas
pushf
mov
aam
cwtl
arpl
sub
imul
mov
mov
push
ds
add
imul
leave
pusha
test
and
xor
sbb
aaa
daa
das
xor
xchg
addr16
add
les
pusha
cwtl
pop
movsb
push
pop
xchg
and
dec
add
bnd
push
sbb
and
push
mov
mov
push
jb
subps
mov
adc
dec
fstpt
insb
lods
add
jne
adc
jb
sarb
push
aas
or
andl
inc
nop
shr
lock
pop
mov
sub
imul
sbb
jge
adc
sbbl
push
pop
jnp
inc
shlb
loop
add
cmpsl
rol
ds
adc
orl
mov
jge
movsb
add
outsb
xor
push
push
imul
hlt
and
cs
add
test
pushf
pop
popa
stos
imul
rolb
or
xchg
mov
lcall
add
ljmp
cltd
pop
insb
incl
test
outsl
add
xor
xor
add
mov
add
add
rolb
fsubr
dec
daa
sbb
nop
inc
mov
xchg
or
xor
inc
stos
inc
lods
or
popf
add
enter
and
mov
push
push
pop
mov
in
xchg
in
or
mov
add
add
dec
xchg
dec
add
mov
pop
add
inc
add
adc
add
sub
push
push
dec
cmp
lock
loopne
call
cmp
adc
cmp
nop
bswap
aam
fiaddl
pop
sti
push
or
ja
mov
xchg
adc
leave
lods
add
pop
add
pop
popa
paddq
jo
push
aad
inc
lods
add
sarb
scas
ds
add
lods
or
mov
sub
pop
dec
rcl
add
adc
pop
sti
cmp
lret
sbb
cmc
les
filds
add
ljmp
and
add
hlt
mov
mov
data16
stos
movsb
add
pushf
inc
or
inc
je
mov
addr16
loop
pop
pop
lock
sbb
xchg
sbbb
ds
add
xor
sub
push
test
jmp
in
test
pusha
in
lods
ret
sbb
fcomp
shrb
add
out
inc
adc
pop
mov
ja
cmc
push
sbb
lret
bnd
jg
pop
ds
xor
call
inc
adc
orb
jp
rorl
push
mov
out
hlt
cld
mov
loope
sbb
loop
or
shlb
out
mov
inc
or
pop
arpl
jns
xchg
mov
test
cmp
out
add
jmp
popa
aad
cld
xchg
andb
xchg
call
inc
cmp
mov
dec
xlat
mov
push
add
outsb
aaa
subl
mov
sbb
adc
call
push
pushf
mov
inc
ss
ds
cmpsb
mov
test
add
push
cs
xlat
add
add
mov
push
sbb
jo
xchg
imul
dec
sub
and
pusha
lret
jo
xlat
push
xchg
mov
nop
jns
loopne
mov
test
pop
dec
lahf
and
insb
inc
pusha
xchg
stc
inc
in
add
rorl
mov
sbbb
in
xor
invd
jnp
push
pusha
jge
imull
add
mov
xlat
jmp
cmp
add
fiaddl
data16
pop
fidivrs
test
mov
mov
or
mulb
rcr
cmpb
sbb
lds
and
nop
flds
add
and
and
adc
orl
test
icebp
adc
adc
and
cmpsb
or
dec
pop
inc
lods
add
mov
hlt
fadds
inc
push
test
dec
mov
loope
and
and
xchg
cwtl
inc
xor
jns
pop
xchg
jmp
or
adc
bound
mov
test
sub
fnsave
pop
xchg
leave
add
stos
sub
jnp
nop
push
pop
xor
jo
xchg
sbb
add
test
or
pop
lods
pop
cmpsb
jecxz
std
popa
imul
in
inc
jmp
add
scas
add
jno
add
stos
jmp
fs
inc
add
push
mov
ljmp
cmpb
adc
test
les
decb
imul
test
jne
in
or
xor
fcompl
pop
subb
lahf
aad
test
je
outsl
sub
lret
add
leave
decb
adc
fidivl
inc
mov
fnstcw
mov
adc
add
sub
ret
jecxz
or
and
jg
push
mov
outsl
cmc
fidivs
mov
in
push
insl
dec
xor
push
clc
xchg
jb
orps
les
lret
pop
jnp
mov
rcrb
pop
cld
add
outsl
xor
mov
je
jns
rclb
idiv
jle
jo
add
movsl
stc
mov
pop
push
mov
xchg
test
jne
fcmovu
pusha
je
adc
or
mov
add
lods
pop
inc
dec
nop
cmp
shlb
call
mov
lcall
dec
dec
sub
mov
out
inc
mov
push
roll
ret
push
sbb
es
sub
add
jle
loopne
lock
lds
sbb
jl
mov
jp
lahf
roll
sbb
imul
and
scas
cmp
xorb
sub
sub
cmp
addr16
jbe
cmpsb
add
scas
aad
lock
loope
add
in
mov
pop
pop
rol
add
clc
mov
or
xchg
std
cld
add
into
add
pusha
iret
inc
hlt
dec
aaa
loope
xor
add
xchg
add
xchg
adc
call
jne
sti
cmp
xchg
add
add
add
cwtl
test
test
add
mov
arpl
pop
or
std
out
cmp
aaa
pushf
mov
xor
xchg
ss
adc
lods
or
cmp
add
mov
inc
stos
adc
bound
out
push
push
cmp
outsl
arpl
xor
inc
add
pusha
and
push
stos
inc
add
xchg
pop
or
push
fmull
add
sysret
sbb
push
out
insb
outsb
dec
and
mov
mov
sub
adc
xchg
add
pop
shll
ret
mov
shr
mov
inc
stc
test
int3
shlb
mov
jo
sbb
push
in
add
out
mov
lret
sbb
add
dec
fs
push
cli
cmp
and
inc
sub
jo
rorl
dec
and
xor
inc
xor
call
sub
je
or
pop
mov
cmp
xor
roll
pop
or
mov
repnz
jnp
push
inc
xchg
mov
xchg
ja
sbb
add
aas
sub
add
cwtl
mov
jne
movsb
pop
stc
add
pop
and
mov
lock
in
and
jae
nop
push
cmpb
fs
ds
inc
cld
in
mov
dec
sar
pop
mov
pushf
push
adc
fidivl
loopne
sbb
add
push
add
arpl
add
scas
push
inc
inc
jmp
jb
adc
aaa
shrl
rcrb
mov
notl
arpl
and
cmp
shl
mov
add
into
ss
cmp
mov
aam
jecxz
pop
nop
nop
push
and
jge
pushf
xlat
leave
int
or
xor
adc
add
sub
pop
loope
loopne
adc
mov
add
inc
and
or
and
in
test
add
sbb
add
jecxz
notb
cmp
es
popa
or
xor
xchg
fcomp
movsb
push
pushf
stc
cmc
orl
or
or
sbb
mov
mov
add
out
and
mov
xchg
repnz
std
icebp
add
movsb
int3
pop
jo
add
gs
jp
pop
jecxz
je
mov
push
dec
mov
mov
sbb
push
jns
push
fdivrp
jp
sbb
add
inc
fsts
lret
xlat
popa
cmp
addb
int
sti
fcoms
outsl
mov
scas
es
or
cli
fwait
add
or
movsl
iret
pop
mov
jp
add
lret
xlat
sarb
add
dec
adc
lret
cwtl
std
jmp
es
je
push
adc
subb
mov
or
add
ljmp
cwtl
pop
adc
sub
push
xor
loopne
xchg
cmpsb
push
iret
add
inc
cmp
shlb
add
mov
jne
add
sahf
mov
sbb
fstps
mov
and
add
cltd
or
lods
fwait
movsb
rolb
push
dec
jle
out
les
inc
add
popa
aaa
test
daa
push
cmpsb
test
sbb
push
xor
hlt
xor
add
adc
add
mov
cmp
aad
addb
jo
cmpsb
stc
add
ret
mov
es
cld
subl
add
fistpl
cwtl
sub
mov
add
push
subb
jle
cmp
push
outsl
leave
jo
add
scas
xchg
rcl
add
std
sbb
push
js
dec
rolb
cwtl
mov
loope
jecxz
ja
jae
xor
lods
mov
testb
add
sub
add
cmp
cmp
je
push
add
stc
shlb
cmp
mov
dec
test
mov
mov
or
scas
nop
mov
jae
pop
cld
or
sbbb
ljmp
jo
sbb
adc
or
push
out
mov
mov
cmp
hlt
mov
shrl
ret
adc
inc
in
pop
add
xchg
sub
push
inc
sbb
mov
add
jo
and
mov
insb
jp
les
loope
inc
sbb
in
test
add
sub
cltd
dec
dec
loop,pn
data16
jne
jae
push
add
xor
mov
push
call
shl
cld
cwtl
adc
les
mov
cmp
dec
push
call
inc
lock
inc
loop
push
cltd
mov
call
pop
ss
ficompl
and
sub
and
iret
inc
in
xchg
arpl
in
xor
fstps
sub
add
adc
mov
rcll
inc
cmc
jbe
pop
inc
dec
jb
mov
add
nop
aad
testl
jnp
pop
xchg
rolb
sbb
hlt
subb
stc
jl
add
test
add
notb
dec
dec
enter
sbb
xchg
test
lods
imul
movsl
out
xor
add
dec
inc
ljmp
or
dec
push
xchg
cld
stc
mov
and
xchg
repnz
testl
xor
push
mov
loope
das
jne
inc
rcr
adc
loopne
pushf
xor
and
sub
dec
pop
or
nop
add
add
lcall
mov
xor
stos
cs
xchg
mov
popa
jb
bound
sbb
adc
dec
gs
sbb
mov
inc
pusha
cmpsb
rolb
push
jno
cmp
mov
xor
add
add
add
flds
iret
jbe
xor
sbb
pop
rorb
cmpsl
clc
loop
mov
and
das
lret
dec
call
push
lcall
push
sahf
cmpsl
xchg
out
add
dec
shl
jbe
mov
out
cmc
push
cmp
lods
shl
int3
add
xchg
dec
or
adc
add
and
pop
push
rclb
loope
cmpsb
data16
pop
inc
and
add
cltd
mov
enter
sbb
and
cli
lahf
repz
fcmovu
xor
out
and
addb
add
ss
add
mov
dec
dec
loope
lahf
out
add
adc
ror
lods
dec
jg
movsb
mov
outsl
cmp
push
cmp
rorl
cmpl
in
testb
andl
jecxz
lock
popa
bsf
loopne
imul
sbb
lea
add
and
inc
add
pop
add
pop
add
repnz
in
push
lds
das
and
pop
add
inc
add
cld
push
test
icebp
dec
adc
sub
loopne
in
aas
inc
mov
scas
stc
sbb
jecxz
add
insb
ds
adc
jp
jne
add
push
fidivrs
push
popl
jecxz
jnp
rorb
out
jle
push
xor
and
mov
mov
add
nop
xchg
lcall
push
add
or
inc
xor
push
add
push
shlb
add
add
mov
fildl
ss
mov
lahf
add
and
fadd
pop
cmp
mov
mov
lods
in
mov
out
cmp
or
out
add
sub
add
xor
rcr
pop
sub
add
sbb
incb
dec
push
test
mov
hlt
pop
add
mov
mov
addr16
sub
pop
pusha
and
mov
nop
and
js
add
cmp
jecxz
add
sbb
int
daa
cmp
xor
mov
cmpl
femms
dec
jno
adcb
and
or
add
sub
adc
push
bound
cmp
cmp
mov
add
int3
push
pusha
cs
add
gs
add
cmpsb
lahf
inc
push
mov
rcrb
out
aam
add
popf
xchg
add
bound
popa
sub
jecxz
mov
jno
mov
mov
mov
roll
fdivrs
repz
scas
mov
outsl
dec
push
loopne
mov
or
jmp
aam
mov
xor
xor
mov
push
pushf
sub
mov
sahf
fwait
cmp
jne
jnp
add
out
lock
sbb
xchg
cmp
shlb
push
push
add
sub
pop
push
and
mov
testl
cwtl
lds
andl
xor
pop
je
sbb
push
jecxz
sub
sbb
pop
add
and
les
cmp
outsl
iret
xchg
add
sar
push
push
arpl
stc
imul
pop
cwtl
inc
test
xchg
add
pusha
mov
adc
mov
scas
jge
add
push
lods
jbe
vfixupimmss
mov
inc
out
nop
dec
add
cmp
add
out
repz
dec
and
test
sub
insl
stos
dec
sbb
movsl
ja
xchg
mov
into
and
mov
and
mov
xchg
hlt
inc
add
fwait
or
pusha
aaa
es
adc
xlat
popf
mov
fs
pop
lcall
repnz
aas
aam
push
mov
fildl
mov
imul
push
add
sbb
scas
dec
and
add
int3
mov
ds
mov
push
in
add
fprem
lock
or
and
xchg
inc
call
cld
pop
les
dec
inc
xchg
and
sbb
add
xchg
cld
ret
jbe
test
sub
add
sub
dec
in
add
push
mov
xor
push
xorb
add
jne
sahf
sbb
xchg
mov
out
inc
lret
lcall
adc
mov
cwtl
enter
fdivl
add
jns
ss
push
cld
push
or
add
lods
and
add
fcomps
pusha
andl
jle
and
cmp
inc
adc
push
add
subb
pusha
xor
dec
pop
add
shrb
or
mov
stos
sub
and
in
in
out
mov
aas
and
mov
nop
xor
aas
cltd
adc
dec
es
or
and
loopne
mov
push
hlt
ljmp
in
jecxz
loope
fs
test
push
rcrb
add
lret
add
lods
xchg
js
add
add
jecxz
jo
xchg
data16
push
in
mov
loopne
out
pop
nop
cld
es
faddl
outsl
cmpb
popa
aam
mov
sbb
arpl
mov
xor
cmp
add
js
xor
dec
inc
cmp
mov
cmp
inc
add
popa
lahf
xor
jne
mov
fisttpll
imul
jmp
lret
pop
int
xor
jns
into
rcrb
inc
jne
pop
mov
ja
dec
push
fdivs
dec
int
mov
add
add
scas
push
add
sti
mov
sbb
xchg
into
enter
out
hlt
in
inc
punpcklwd
sub
adc
bound
dec
jecxz
inc
pop
or
inc
push
shrl
orl
xchg
popf
add
daa
rcll
dec
add
jmp
xchg
imul
icebp
add
and
mov
add
cmp
xor
mov
add
mov
imul
xor
cmp
xchg
pop
add
aas
dec
xor
jne
loopne
dec
push
mov
add
jmp
mov
ja
cs
testb
call
scas
pop
cld
shlb
xchg
adc
fiaddl
adc
fistps
shrl
add
cltd
xchg
mov
enter
pop
xchg
mov
ljmp
jg
das
cmp
jae
add
in
mov
ljmp
incb
lods
mov
hlt
addb
push
add
clc
sub
test
lods
add
ret
addl
enter
inc
fcoml
mov
pop
clc
out
or
mov
push
scas
or
add
int
test
pop
push
sbb
push
xchg
xorl
rcl
jo
add
adc
sub
dec
jne
popa
fnstcw
add
in
or
arpl
outsl
jne
ss
insb
mov
mov
jo
scas
les
push
nop
test
dec
pavgb
dec
out
or
pushf
cmp
pop
xchg
mov
pop
adcl
add
aaa
lds
iret
add
cmp
popa
and
out
add
xchg
mov
repz
add
adc
aam
push
stos
add
std
sbb
fcoms
stos
adc
cmp
mov
insl
shlb
and
pop
add
add
pop
lret
sbb
jo
cmp
mov
ljmp
sub
adc
inc
shl
lods
jae
bound
cmp
mov
inc
adc
pop
rcrl
lods
loopne
mull
addb
jl
add
xor
aad
jb
cmp
addb
or
push
nop
cmp
add
rol
sbb
mov
loop
sbb
js
and
sbb
mov
and
and
faddl
daa
mov
jnp
aaa
lea
jo
leave
adc
pop
add
bound
call
dec
sbb
inc
mov
mov
sbb
ret
jno
pop
push
sbb
ja
std
fisttps
and
notb
add
push
and
xchg
stc
dec
mov
push
or
out
sub
mov
or
testl
xchg
outsl
andps
fwait
pop
xchg
mov
lahf
ds
adc
negl
sub
jecxz
or
dec
subps
test
add
xchg
test
sbb
pop
lock
inc
ret
je
dec
pop
enter
testl
jl
enter
add
incl
push
mov
add
fcoms
add
hlt
jbe
test
sub
cmp
movsl
dec
out
adc
mov
add
mov
popa
push
xchg
sbb
dec
ja
or
inc
xor
pushf
pop
clc
or
pop
pop
sbbb
movsl
mov
imul
add
mov
push
sub
add
xchg
or
add
cmc
fdivrp
xchg
mov
pop
jb
test
lcall
insb
into
mov
sub
mov
out
nop
test
add
call
rol
std
lcall
adc
sbbb
loop
mov
outsb
dec
adc
int3
test
pop
add
iret
sahf
xchg
push
enter
inc
dec
fnsave
out
mov
push
add
lea
jle
jo
js
add
xchg
cmpsb
add
mov
aaa
movsl
sub
inc
push
cld
call
insb
inc
mul
and
inc
call
das
in
mov
pop
adc
fsubrs
push
popw
fidivs
scas
jae
adc
sub
ljmp
movsb
ret
sbb
sar
jns
and
insb
or
add
into
pop
in
pop
xor
shrb
in
test
push
dec
popf
mov
cld
test
sub
rcll
mov
pop
pop
fs
adc
mov
add
dec
mov
sahf
and
sbb
push
pop
cmp
add
sub
pop
out
xchg
stc
jae
jg
pop
in
ljmp
insb
add
ficompl
add
add
sbb
cmpb
mov
lahf
adcb
xchg
xchg
lock
sub
xchg
jmp
add
push
adc
btr
cmp
ret
in
cmc
es
xchg
mov
mov
pop
add
or
fisttpll
or
pmuludq
xchg
shll
jecxz
mov
xchg
inc
ror
aad
inc
std
add
movsb
dec
push
add
aam
in
xor
fmuls
bound
add
add
popa
jae
mov
loope
jno
mov
clc
push
xor
push
cmp
mov
and
sbb
mov
xchg
jns
lock
sarb
xor
fldl
inc
pusha
push
popa
dec
xchg
jae
cmpsl
scas
in
dec
mov
mov
cmp
add
lds
js
fadd
gs
jp
sti
sub
test
icebp
mov
push
mov
jbe
fimuls
addr16
orb
jmp
ja
add
imul
sbb
clc
pop
pusha
cmpsl
jge,pt
add
push
xor
mov
jle
jns
in
testb
outsl
testl
add
fsubrs
push
add
addr16
and
dec
sub
mov
push
lock
add
fcmovne
dec
js
pusha
pop
loopne
or
jbe
add
mov
je
call
sbb
inc
mov
and
out
add
lods
lock
lea
or
jge
or
rorl
fmuls
stos
jmp
out
cld
movsb
notb
scas
mov
mov
inc
jbe
sub
jb
sub
repnz
ja
pusha
pushl
daa
xchg
pop
dec
add
shl
mov
push
jp
add
test
fnstenv
xchg
seta
fcmovnu
movsl
popa
shrb
pop
pusha
jecxz,pn
mov
mov
ss
cld
fisttpl
pop
pusha
add
lock
cmp
lock
pop
mov
push
inc
roll
mov
imul
imul
clc
loopne
aas
xchg
add
jmp
int
data16
xlat
lods
scas
mov
nop
scas
rorb
stos
inc
cli
ja
xorl
sbb
add
pop
hlt
in
mov
sub
out
add
mov
mov
jmp
xchg
jp
sub
cmp
addb
sub
stc
sub
sbb
insb
adc
aad
aas
andl
push
dec
sbb
add
faddl
repnz
pop
aad
add
mov
add
push
push
mull
push
mov
sbb
sti
sub
lock
mov
and
into
mov
push
cmp
push
xor
sub
js
fwait
sbb
push
mov
pop
testl
fldenv
add
shl
mov
aad
mov
pop
jl
xor
arpl
sub
xor
mov
sbb
call
mov
sub
fadd
dec
andl
cltd
cld
push
mov
stos
adc
xor
add
rol
lds
and
fdivrp
jae
dec
and
inc
xchg
dec
xor
mov
hlt
mov
out
hlt
nop
sub
cmp
mov
icebp
cwtl
mov
pop
andb
addb
idivb
and
xor
xor
pop
sbb
les
inc
ss
mov
push
call
stos
or
adc
cmc
mov
inc
push
rcr
daa
push
pop
bnd
mov
shl
iret
test
andb
xor
ficoml
je
cmp
mov
push
dec
call
inc
insl
imul
or
inc
sbb
loopne
setge
xchg
add
sub
inc
imul
sbb
cli
fsubl
xchg
cmp
sub
sub
push
das
mov
jae
and
mov
add
inc
fiadds
roll
or
fnstsw
dec
dec
hlt
out
mov
sbb
outsl
or
lea
sbb
gs
fs
rclb
dec
dec
outsb
int3
add
jae
jge
mov
mov
xor
mov
imul
sahf
aaa
orb
insl
xor
add
xor
and
and
loop
cmp
sti
clc
ljmp
cld
add
iret
repz
in
pop
jo
jge
xchg
stos
lock
cmp
dec
add
mov
in
fwait
push
and
call
rclb
sbb
pop
lods
mov
mov
popw
push
jne
dec
push
out
and
dec
cmp
das
fildl
xchg
and
inc
popa
jg
and
shlb
sub
sub
into
bound
and
int3
add
out
sarb
fcmovnb
cmp
or
hlt
mov
enter
cld
call
mov
xor
repz
rcrb
test
popf
inc
sarb
je
daa
lcall
cmp
dec
jge
fdivrl
sbb
add
clc
test
gs
add
roll
push
adc
daa
lock
sub
add
insb
inc
hlt
fwait
popf
add
add
nop
pop
add
cwtl
adc
push
shrb
push
hlt
push
add
add
lods
xchg
and
dec
add
sti
add
pop
dec
add
leave
pop
subb
jecxz
sub
ret
bound
mov
inc
mov
fnsave
add
sub
imul
push
mov
rolb
push
dec
ret
les
jmp
xchg
hlt
jo
mov
mov
dec
paddusb
add
or
cmpb
in
lock
xor
adc
mov
push
mov
lock
mov
jbe
cmp
or
xor
mov
add
ljmp
adcb
add
loopne
enter
add
addr16
and
add
leave
es
dec
add
fcoms
out
test
std
cmpsb
test
push
pop
pusha
sbb
xor
movsb
xorb
add
mul
mov
xchg
les
cmpsl
jno
xchg
jae
adc
out
dec
jo
lods
add
fwait
cmp
pop
or
add
fldt
out
mov
push
aam
xchg
out
push
adc
add
mov
outsl
pop
add
shrl
movb
adc
sub
cmp
sbb
cld
sarl
add
mov
lret
and
shl
scas
jle
ljmp
ret
xchg
dec
mov
test
mov
enter
mov
mov
xor
sbb
jns
mov
adc
lret
add
fbld
mov
xor
add
fs
aaa
in
add
adc
xor
xchg
outsl
jo
cmp
mov
popa
adc
push
rolb
add
or
sbbl
addb
jb
jo
pop
add
adc
push
dec
shll
test
add
sub
imul
add
leave
mov
push
aaa
jl
int3
pop
add
mov
and
call
mov
add
sbb
cltd
rclb
les
jb
lods
fcoms
dec
push
in
and
divb
mov
fistpl
adc
cwtl
into
shll
fwait
jno
lock
jmp
rorb
push
sbb
das
into
jo
enter
cwtl
add
clc
fsub
and
xchg
cld
sbb
and
outsl
test
xchg
mov
orl
mov
leave
jg
out
push
push
push
cs
pop
das
mov
pop
dec
arpl
fnstcw
gs
xor
icebp
cmp
dec
fmulp
scas
int3
xor
jb
loopne
pusha
loope
ss
jg
push
or
insb
cmp
rolb
inc
add
cmp
add
push
idivb
push
jnp
sub
pop
int3
outsb
push
xorl
xchg
andl
add
cs
insl
mov
mov
jecxz
add
cmpsl
or
add
add
int3
mov
dec
push
sbbb
add
cmp
xchg
xchg
nop
adc
std
fisubl
sbb
cwtl
sahf
loopne
ja
je
mov
mov
jae
sub
repz
in
xchg
pusha
or
je
and
gs
inc
lret
mov
add
fchs
ret
pop
inc
arpl
je
add
mulb
int3
add
sub
outsl
mov
adc
setg
fistps
mov
add
mov
jnp
imul
es
stc
pop
orb
inc
xchg
add
cmp
sub
stc
sbbb
outsl
incl
mov
adc
pop
addl
mov
jbe
rcrb
orb
cmc
mov
rolb
sub
int
sbb
add
arpl
in
pusha
dec
jmp
push
sub
cwtl
movsl
shll
xchg
sti
stc
xchg
arpl
fcmovnb
mov
pop
and
mov
push
lret
jae
adc
gs
hlt
pop
ss
inc
enter
xchg
add
lret
xor
push
inc
or
xchg
cltd
or
test
sbb
enter
cld
test
or
pop
inc
mov
minps
scas
lret
insb
sub
das
ror
add
mov
fsqrt
test
xlat
cltd
pop
add
aad
inc
mov
add
dec
addb
sbb
jae
push
jno
cmp
xchg
pop
fldcw
pusha
ret
xor
pusha
ja
scas
push
cmp
shrb
out
mov
ljmp
sub
popa
xor
adc
stc
or
xor
mov
or
stos
and
xor
mov
pop
int
ss
lcall
ret
jno
stos
test
imul
loopne
insb
dec
icebp
hlt
push
pushf
ret
cmp
aas
roll
test
add
push
push
push
out
faddl
dec
or
loop
sbb
test
jbe
add
dec
adc
cmpsb
lods
clc
mov
pop
pushf
push
aaa
or
loop
ds
sahf
mov
xchg
pop
adc
push
dec
sub
sbb
and
mov
jg
adc
sub
sarb
lahf
movsb
add
int
popa
or
leave
xchg
lods
sub
dec
rcll
xor
insb
add
les
adc
dec
pop
fs
shrb
lret
mov
jnp
pop
pop
mov
iret
mov
push
or
add
add
cmpsb
ror
xor
inc
pop
pop
push
int3
jno
and
aas
sbb
sti
movsl
dec
xor
push
inc
inc
add
je
pusha
repnz
outsb
xor
add
mov
inc
fildl
xchg
pushf
cmp
test
dec
add
xchg
data16
mov
fsubr
xchg
clc
pushf
cmc
iret
std
fadds
dec
ljmp
mov
mov
ret
inc
pusha
lret
sub
subl
sbb
dec
add
incb
or
dec
in
jle
add
pop
dec
mov
add
xchg
pop
push
mov
add
jb
sbb
cwtl
in
sub
xchg
xchg
jo
adc
add
jnp
adc
andb
fsubp
insl
xor
sbb
xlat
xchg
shrl
loopne
gs
mov
in
push
adc
or
mov
add
cmp
dec
add
adc
cltd
adc
stos
imull
jb
popa
sub
sbb
add
sarl
and
and
fdivrl
hlt
adc
pop
add
lea
jmp
inc
stos
jae
cmpsb
in
pop
pop
out
lock
fs
out
add
idivl
leave
ss
dec
sahf
and
test
add
lds
jne
adc
push
cld
dec
mov
add
mov
adc
cmp
add
loopne
push
push
dec
idivl
arpl
sub
push
mov
ret
pop
xlat
and
fstps
xchg
adc
hlt
sbb
or
out
movsl
sarb
rcrb
imul
pop
pusha
mov
sarl
test
add
lret
enter
cmovno
cmpsb
adc
sub
lds
ja
iret
sbb
mov
jbe
xchg
inc
add
or
add
cmp
push
xor
stos
push
mov
dec
cmp
loopne
loope
test
enter
into
pop
hlt
push
xor
or
dec
in
scas
adc
mov
inc
negb
or
fisubrs
push
push
pop
mov
cwtl
leave
add
jb
add
test
pop
nop
pop
xor
std
lock
in
int3
xor
cmpsb
popf
jnp
aaa
cmp
clc
adc
cmp
mov
mov
mov
lcall
iret
mov
je
into
sbb
ljmp
daa
cmp
leave
clc
iret
and
stos
sbb
jns
add
arpl
push
je
add
add
push
in
lret
cltd
cmp
add
jp
mov
mov
sub
adc
loope
inc
mov
leave
dec
pushf
cmp
adc
daa
jmp
xlat
hlt
or
lock
fstps
loopne
add
mov
imul
jp
xchg
sub
fcoms
push
and
or
add
push
push
mov
mov
shld
repnz
jo
popf
sbb
add
sub
cld
xor
inc
iret
hlt
add
loopne
notl
sbb
jae
push
jle
mov
xor
cmp
add
out
sub
ja
cli
in
add
pushw
fidivl
cmp
and
loopne
add
pop
int
mov
cmp
mov
dec
mov
push
add
fwait
inc
adc
xor
xchg
lock
or
xchg
mov
and
and
add
inc
icebp
jl
rcr
xor
into
cmp
shl
add
push
jl
xor
mov
inc
sti
jns
mov
dec
jae
mov
jecxz
add
sbbb
aad
in
xor
faddl
cmp
jle
pop
xor
addr16
ds
sub
add
popa
adc
lcall
sbb
stos
xchg
sub
lds
ljmp
mov
sbb
mov
and
dec
jecxz
jg
push
add
cmp
add
mov
aas
pop
sbb
mov
cmpsl
mov
clc
loopne
and
mov
xchg
out
push
adc
in
sub
cmp
mov
xor
rcl
pusha
enter
or
mov
add
dec
scas
xchg
and
add
cli
jl
push
mov
inc
mov
add
push
lock
mov
ljmp
fidivl
and
adc
ds
pushf
daa
fwait
adc
xchg
sbb
insl
arpl
or
dec
mov
lods
lods
call
pop
inc
jmp
dec
xor
shl
add
cmpsb
or
mov
dec
or
fstpl
popf
and
loopne
shlb
pop
jge
loopne
imul
int3
call
orb
neg
add
jp
aam
mov
push
mov
in
rclb
mov
mov
xor
jge
push
mov
mov
out
sbb
add
push
int3
jg
test
sbb
add
xlat
mov
int3
je
nop
add
and
aas
mov
bound
pop
xor
pushf
rolb
inc
cwtl
inc
ja
cmp
add
mov
add
pop
ss
mov
loop
lds
add
test
pushf
mov
lock
add
cmp
jge
rolb
cmp
bound
clc
cmpsl
add
imull
sti
xor
cmp
fsub
in
cmp
pop
add
sti
fstl
mov
ja
xchg
sbb
push
jp
sub
leave
or
imul
in
jo
sbb
or
jge
xchg
rol
insb
imul
jmp
mov
in
xor
cmpsl
mov
dec
add
lcall
sbb
mov
movsl
mov
add
pushf
popf
cmp
ja
pusha
daa
and
inc
sub
adc
imul
add
jno
jb
add
sub
xor
sub
add
push
addr16
or
add
jne
mov
push
or
js
add
fnstcw
subb
mov
std
lods
mov
sbb
lret
mov
add
xor
adc
call
jae
mov
dec
mov
add
add
xchg
mov
test
sbb
and
mov
loopne
test
add
lods
jo
gs
add
mov
push
das
xchg
xor
mov
pusha
sbb
mov
jno
jnp
in
xor
cmp
loop
inc
dec
jp
pushl
add
inc
mov
xchg
in
sbb
out
out
xchg
ficoms
dec
imul
add
aad
std
aas
xchg
insl
push
or
out
add
int
pop
add
jns
mov
xchg
push
mov
loopne
fmul
cmp
xor
add
subb
jo
add
mov
sbbb
adc
xchg
inc
dec
je
add
shll
jl
adc
pusha
fnstcw
adc
jno
aad
out
inc
in
cmp
clc
stos
nop
sbbb
movsb
addb
jge
jae
in
add
jb
rclb
sub
orl
inc
cld
test
push
sbb
pop
pop
add
mov
imul
jmp
das
mov
std
movsb
add
fiadds
mov
add
and
bound
sbb
pop
fldl
pop
push
arpl
mov
jbe
add
shrb
aaa
cwtl
popf
inc
inc
mov
loope
loopne
inc
pop
push
dec
jno
pop
mov
test
cmp
jg
imul
mov
dec
jl
and
and
xchg
jl
jge
aam
loop
imulb
test
mov
pop
add
xchg
sbb
leave
xor
push
js
adc
mov
aam
sbb
addl
je
push
sbb
orb
cltd
mov
pushf
or
pop
js
add
push
add
cltd
push
jge
int3
add
fdivl
dec
rcrl
push
sub
mov
jo
insl
testb
jmp
push
filds
movsl
loope
adc
rol
nop
push
push
imul
inc
and
jl
sub
mov
sub
or
jno
mov
push
mov
mov
pop
lods
adc
out
and
adc
shlb
out
mov
aaa
add
sbb
push
push
orl
movsb
in
clc
add
xor
xchg
and
jo
test
pop
push
addl
adc
sub
nop
cmp
adc
add
mov
les
mov
orl
test
lock
adc
and
mov
je
popa
cmpsl
dec
outsb
or
hlt
lret
nop
sub
ds
cmp
and
repnz
jns
jo
pusha
xorb
pop
cmp
pop
add
inc
cmc
out
icebp
lahf
xchg
fcomps
gs
fcmove
in
sbb
repnz
mov
cmpsl
stos
mov
cwtl
stos
scas
mov
xlat
dec
mov
inc
add
mov
jbe
xchg
dec
outsl
aad
lock
push
pusha
sub
fcoms
int
sub
mov
loopne
push
fsubr
cltd
add
mov
adc
push
xchg
fwait
negl
loopne
into
iret
lock
daa
dec
inc
dec
pop
dec
es
xor
fiadds
das
add
jae
std
lock
test
add
test
mov
pop
jno
enter
sub
leave
pop
add
gs
mov
xlat
push
add
lahf
lds
aad
in
cmp
cs
cmp
mov
jae
js
stos
and
dec
shr
inc
pop
cmp
fs
jmp
push
call
in
and
enter
stc
pop
pop
imul
outsb
cmp
inc
shlb
dec
fstpl
jecxz
out
shlb
insb
movsl
inc
push
test
adc
dec
adc
orb
sbb
fcompl
push
jbe
push
inc
push
lods
cld
push
outsl
and
cmp
fists
loope
cwtl
sub
lods
popa
inc
int3
lahf
outsb
ss
mov
cmp
and
repnz
and
dec
dec
push
popa
dec
cmp
in
imul
pop
add
jb
inc
add
test
cmpsl
push
inc
adc
fs
out
les
or
xchg
push
sub
scas
repnz
cmp
add
cmp
and
imul
ds
xchg
lcall
pusha
add
sub
and
aam
sub
sbb
and
mov
xor
je
add
push
mov
xchg
jno
cld
add
xchg
sbbb
sub
mov
pop
jp
lret
cmp
jo
mov
test
jb
js
shll
je
out
cmovp
mov
daa
pushf
pop
jb
add
sub
aam
xchg
movsb
ror
movsb
in
fcmovne
cmp
push
adcb
jmp
cmpsl
dec
or
cwtl
add
adc
ljmp
pop
lock
xor
jp
loopne
ds
fs
push
push
push
hlt
mov
inc
or
add
or
arpl
shll
imul
leave
add
jns
push
dec
dec
sbb
cmp
or
and
dec
lods
or
fucomp
pop
andb
inc
jge
add
imul
add
fcoms
stos
pushf
xor
movsb
enter
icebp
inc
or
or
dec
and
mov
fisttpl
nop
xchg
add
dec
jg
sub
adc
mov
xchg
or
mov
and
stos
cli
mov
fidivs
push
add
inc
mov
cmpsl
in
jge
and
sbbb
xchg
hlt
pop
add
cmpsl
shll
add
into
lea
sub
insl
in
add
orb
mov
xor
aam
into
push
popa
sub
jns
out
add
pop
fs
cld
out
subb
jne
test
sbb
push
adc
iret
in
lret
add
daa
dec
sub
lcall
add
inc
adc
insl
iret
xchg
xchg
fsubrs
jp
movsb
inc
fcoms
add
inc
clc
sbb
add
mov
arpl
icebp
and
sbb
xchg
mov
rolb
cmp
hlt
or
stc
sbb
iret
repz
and
fcmovb
int
sub
mov
add
pop
add
jp
subl
popf
sub
movsl
ret
iret
adc
xor
cmp
pusha
mov
add
mov
sti
lods
push
fldenv
or
and
cmp
adcb
sbb
lret
iret
test
out
push
jno
dec
push
daa
cmp
xor
mov
pop
pop
mov
add
inc
push
pop
add
jb
fsubs
mov
jmp
mov
stc
push
add
test
fwait
outsl
aaa
cmp
std
sbbb
cmp
pop
jp
inc
sahf
dec
fdivs
or
xor
dec
jbe
add
test
icebp
and
and
mov
inc
mov
add
int3
fldt
push
dec
mov
add
push
lods
pop
fdivl
or
mov
or
pop
setae
jecxz
mov
mov
lea
pop
popa
pop
cmpsl
imul
les
testl
adcb
adc
jp
xchg
sahf
shlb
mov
jbe
add
das
shr
xlat
add
and
jns
icebp
enter
hlt
mov
dec
lock
add
aam
xor
inc
fs
and
in
or
xchg
sub
aad
das
push
or
pop
in
mov
ja
jle
test
aam
mov
xor
in
xchg
add
leave
mov
xor
add
call
add
push
add
pop
mov
enter
sub
adc
adc
or
ret
insl
cmpsb
jb
xor
mov
fimull
mov
sbb
dec
test
cwtl
add
out
stos
jge
popf
call
shr
loopne
loope
mov
and
xchg
rcrl
jbe
xchg
enter
add
fsubrs
dec
repz
add
testb
in
sarb
leave
sub
fdivrl
das
aaa
std
pop
add
push
sahf
rclb
clc
push
cmp
cmc
pop
sahf
add
xchg
outsl
sub
outsb
inc
xor
sti
sub
hlt
movl
mov
shrl
mov
in
pusha
jg
jne
push
jo
rol
dec
call
and
mov
jb,pn
test
shll
arpl
and
nop
add
inc
fldl
stos
and
mov
jg
pusha
leave
sbb
or
mov
cmp
push
psubd
push
test
inc
loope
es
movsb
cwtl
pusha
mov
inc
cmp
jnp
loopne
les
xchg
add
int3
shrl
pop
mov
or
aam
jo
cli
adc
les
cmp
xchg
lds
or
pop
pop
xchg
pop
jge
pop
add
sbb
lods
push
clc
popa
sahf
add
pop
sbb
push
jne
into
imul
icebp
call
push
add
lret
loope
mov
xchg
or
aaa
mov
dec
popa
ds
dec
xchg
aam
or
adcb
inc
dec
jns
stos
add
lret
pop
cld
hlt
ret
mov
leave
push
mov
or
dec
je
mov
cld
fsubl
cmc
stc
or
add
and
das
je
adc
or
mov
pusha
add
clc
js
filds
stos
add
xchg
lret
cmp
add
inc
mov
insb
dec
cld
clc
into
cwtl
inc
add
sub
imul
scas
pop
rclb
mov
or
cmpsl
add
loop
jge
dec
mov
push
repnz
jp
mov
or
mov
add
pushf
mov
push
add
add
insb
insb
add
pop
jle
in
bound
out
and
testl
jno
push
dec
movsl
sbb
xlat
or
and
pop
cs
jnp
repz
pushf
jl
jg
pushf
into
popf
jge
add
mov
dec
push
push
push
or
cmp
loopne
adc
dec
mov
jo
push
jmp
pop
dec
rcl
and
leave
jle
add
mov
cmp
pop
mov
dec
std
bound
sbb
mov
push
stos
lods
add
rorl
imul
jmp
add
pop
incb
out
enter
add
test
out
add
or
add
adc
pop
js
incl
icebp
in
sbb
add
loopne
xchg
pop
sub
add
lea
push
and
lret
rcr
pop
push
mov
ret
stos
add
mov
ret
mov
xchg
stc
and
mov
std
pushf
imul
mov
or
lret
inc
cld
add
fiadds
push
negl
add
sub
adc
sub
filds
movsb
cmp
add
or
cmp
mov
aad
and
and
add
sub
daa
mov
add
sbb
add
mov
add
cmp
xor
in
stos
add
cmp
add
imull
mov
push
xchg
sbb
pop
add
sarl
fcompl
add
xor
int
cmpsb
mov
jbe
lds
mov
pop
cmp
insl
imul
adc
dec
sar
add
lods
cmp
inc
mov
pop
xchg
test
mov
mov
sub
leave
xchg
jbe
in
xchg
add
iret
mov
mov
sbb
add
or
sar
sete
mov
pop
sbb
cmp
jmp
sub
pop
add
jo
pushf
add
pop
clc
or
cli
loope
mov
movsb
ds
dec
int3
into
xor
jg
int3
push
fsubp
push
hlt
mov
add
add
xchg
cmpsb
dec
push
out
fwait
xor
inc
mov
push
xchg
int3
roll
je
add
prefetcht1
nop
in
divl
fisubs
das
ret
rclb
cmp
data16
and
adc
cmp
inc
push
pop
add
inc
les
and
push
mov
sbbb
dec
lret
push
test
daa
bswap
cmp
mov
or
inc
mov
xor
pop
sub
mov
insl
sub
mov
push
arpl
add
or
ds
cmp
insl
mov
adc
ror
adc
loop
and
mov
mov
xchg
ret
mov
inc
loopne
and
ljmp
xchg
pusha
in
jecxz
add
inc
ret
add
push
sahf
pusha
movsb
cs
in
aad
push
mov
adc
and
ss
scas
and
adc
pop
dec
fcompl
cs
push
clc
lsl
xchg
clc
arpl
add
jmp
mov
icebp
pop
ret
loopew
test
pop
and
cmp
dec
test
add
jb
fstp
push
adc
inc
adc
aad
mov
gs
cs
fisttps
es
clc
jg
push
sti
clc
cmp
push
xchg
cwtl
sbb
bound
mov
loope
inc
pop
adc
rol
cmp
int
pop
fstpt
mov
call
mov
ja
cs
mov
cmp
insb
or
xchg
mov
add
leave
rcrb
add
lret
push
mov
mov
loop
mov
pop
add
sub
cmp
out
push
in
and
adc
or
cld
add
rorb
popf
cmp
pop
aam
jno
or
cmp
xchg
xchg
add
out
cli
sub
addr16
nop
inc
sbb
test
xlat
add
mov
aas
sti
lock
aas
ljmp
stc
mov
mov
inc
push
faddl
xchg
add
ds
jecxz
fmull
fnstenv
cmp
add
arpl
out
out
inc
int3
sub
mov
xchg
out
mov
adc
sbb
add
push
in
pop
cld
test
and
fiadds
push
inc
sbb
mov
push
or
inc
ljmp
fs
into
xchg
stos
push
fs
adc
and
cmp
adc
in
in
or
mov
popf
icebp
add
repnz
cmp
inc
push
ficompl
js
lock
cltd
pop
and
sub
daa
adc
test
incl
loopne
mov
sub
dec
jg
hlt
mov
iret
and
sbb
inc
fldl
adc
pop
jle
hlt
cmpsb
add
sbb
push
or
adc
or
push
push
loopne
jmp
xor
sub
rcr
hlt
pusha
jb
hlt
jno
jge
cmp
ror
shll
push
inc
std
aam
lret
dec
ret
lret
lret
jne
enter
sub
lret
js
dec
pop
sbb
loope
sbb
push
nop
cmpsb
sbb
pop
ret
addb
push
jb
mov
jne
pop
stos
in
inc
xchg
icebp
jo
mov
jecxz
pop
dec
fbld
inc
push
push
ja
adc
mov
cmpsb
add
add
mov
rclb
mull
add
push
cmp
or
mov
into
out
add
ja
add
mov
xlat
in
std
xchg
js
popa
dec
xor
mov
mov
fsubl
dec
mov
cld
jge
mov
push
add
loopw
sbb
mov
sbb
out
ja
enter
xor
fistpll
les
andb
cmc
aad
stos
add
sub
jmp
std
adc
mov
inc
sbb
inc
into
popf
cmpb
dec
add
sbb
aaa
mov
es
lods
add
and
push
test
or
pop
pushf
add
stos
pop
adc
dec
sub
sbb
and
insl
mov
mov
pusha
sbb
stos
xchg
xor
and
add
call
orb
cmp
jb
pop
xchg
dec
add
jo
fisubs
rorb
push
enter
arpl
addb
jg
xlat
hlt
mov
ret
cli
cs
ret
rcll
fstps
xchg
jmp
sub
inc
and
lret
dec
imul
xchg
xchg
loopne
sub
das
repz
jo
add
xlat
movsl
adc
push
xchg
sbb
lock
sub
sub
pop
mov
in
loope
push
xchg
sub
adcb
fldl
pop
enter
xchg
test
cmp
and
xorl
lock
push
in
pusha
int3
pop
push
and
outsb
jge
add
mov
add
das
add
shlb
bound
push
pop
sbb
or
cmp
ret
fdivr
cwtl
es
je
daa
lret
xchg
sub
jl
jecxz
lods
adc
mov
pop
add
in
pop
mov
adcl
add
mov
pop
pop
fcmovbe
add
loope
add
xchg
test
mov
jne
inc
test
int3
jno
cwtl
aad
movsb
mov
arpl
js
jg
push
cmp
cmpsl
inc
mov
cli
adc
or
pusha
pusha
add
in
pop
loopne
cmp
orb
ret
imul
mov
push
mov
push
les
sub
push
mov
adc
fildl
movsl
lret
out
sub
in
mov
mov
daa
xor
es
add
push
add
sbb
orb
adc
lods
or
ljmp
inc
adc
mov
add
push
leave
sbb
xlat
fadds
sbb
adc
sbb
xchg
cmp
pop
stos
pop
push
inc
inc
sub
pop
jo
add
push
cmp
sub
push
push
mov
mov
cmp
inc
iret
push
inc
lods
push
dec
orb
inc
jae
xchg
rcr
add
rolb
or
adc
fadds
xchg
in
icebp
jmp
xchg
xlat
or
or
sahf
pop
inc
test
inc
stc
add
jecxz
arpl
jne
pop
leave
push
mov
mov
and
fimuls
sub
xorb
or
in
adc
adc
mov
push
inc
mov
add
icebp
orl
xor
insl
rcrb
or
andb
add
mov
push
mov
add
inc
dec
out
mov
nop
push
movsl
ja
rolb
lret
push
sub
add
shrb
lock
inc
mov
push
int3
call
fcmovu
mov
mov
jecxz
dec
jg
call
mov
sbb
clc
pop
cmpsb
and
push
add
repnz
push
or
int
int3
pop
mov
in
cltd
pop
pop
mov
loopne
mov
or
mov
outsl
test
add
mov
xchg
ja
mov
pop
push
and
shr
decb
mov
jnp
jmp
div
and
pop
movsb
lock
jnp
and
dec
mov
out
mov
les
ret
ss
cmp
and
dec
sti
sub
mov
add
out
rolb
jne
mov
or
pusha
popf
iret
aad
mov
push
sub
ss
xchg
or
xchg
push
sub
jl
ret
xor
ds
jbe
jnp
or
and
rclb
xor
cmpsl
jno
mov
adc
and
lock
movsl
fcomps
shlb
test
sbbb
setp
pop
sti
mov
mov
andb
data16
jns
cli
test
fimuls
push
movsl
inc
jbe
xor
push
xchg
fadds
pop
mov
jno
add
dec
lret
push
nop
push
sub
inc
and
data16
cwtl
jo
and
movsb
loopne
pop
push
int3
scas
dec
mov
sbb
inc
out
sbb
xchg
loop
inc
dec
push
insb
push
jmp
addr16
jle
push
mov
rclb
lds
adc
or
add
lods
mov
addl
test
dec
xchg
cwtl
nop
add
cwtl
fptan
subl
jno
hlt
and
pop
cmp
aad
js
push
psraw
fisttps
rolb
mov
imul
dec
je
adc
mov
and
in
jae
pop
or
mov
shlb
jo
jmp
ja
xor
push
in
test
sbb
mov
adc
stos
stos
add
sbb
inc
sub
adc
push
pop
stos
imul
loopne
push
insl
adc
leave
mov
mov
sub
mov
loopne
adc
repnz
or
fisubrs
or
xchg
aam
jno
jmp
or
adc
fldenv
pop
add
add
sbb
mov
sbb
or
xchg
add
aad
sub
mov
xor
mov
jp
sub
inc
ret
mov
or
insb
push
int3
pop
pop
movsl
aas
mov
rolb
xor
call
add
mov
sub
or
dec
mov
sbb
shl
add
or
push
jl
mov
insb
jg
adc
sti
sub
pusha
mov
and
push
andb
add
pop
sub
in
pop
lods
jbe
gs
int3
add
lret
shll
inc
sti
std
subl
sbb
mov
dec
stos
push
lock
inc
mov
push
inc
lods
subl
xchg
out
jg
add
insl
ret
xchg
test
lcall
filds
in
inc
add
lahf
sbb
add
cmc
js
cmp
push
pop
cld
add
push
jnp
and
and
sbbb
cld
adc
dec
enter
imulb
lock
fwait
and
rclb
sub
roll
arpl
ds
inc
call
add
xchg
xor
lds
test
mov
mov
das
loope
clc
aas
add
pushf
sub
insl
cmpb
add
sub
ficomps
xchg
bound
add
daa
js
push
pop
pusha
jns
adc
and
jno
fdivl
loope
xchg
out
push
ret
or
mov
mov
sub
push
add
mov
xor
add
inc
push
and
in
sub
out
js
push
pop
cmp
push
loopne
pop
in
dec
or
mov
xchg
push
cmpsb
pusha
loopne
add
adc
rorb
dec
push
into
add
iret
popf
mov
jbe
adc
in
lods
hlt
cmp
xchg
lret
add
push
pop
mov
xor
mov
int3
pop
aaa
fidivrl
pop
inc
add
push
pusha
inc
ljmp
gs
adc
jl
stos
push
mov
pmuludq
js
loopne
jp
jae
or
push
je
bound
bound
lret
out
add
jmp
pop
scas
rclb
jbe
jnp
or
or
rcll
out
out
add
mov
sbb
sub
xchg
movsb
jo
jae
outsl
inc
or
add
aad
or
push
xor
adc
inc
mov
flds
fistps
aam
sarb
lret
int
pop
push
sbb
mov
sub
push
pusha
inc
xchg
daa
fimuls
cmp
mov
das
push
xor
push
or
mov
enter
and
or
add
and
lret
nop
add
and
mov
dec
lahf
and
rol
test
mov
push
cmp
orl
rorl
cltd
add
push
fucom
dec
adc
in
insb
fsubs
inc
faddl
ret
pop
lods
loopne
add
dec
push
xchg
mov
sub
inc
ret
je
outsl
sbb
push
imul
xor
jne
push
cmc
mov
and
popa
clc
dec
in
test
push
cmp
cli
add
jg
and
pop
add
fnsave
add
movsl
ja
pop
sbb
mov
rorl
pop
leave
lods
addl
pop
pop
dec
mov
xor
out
call
sbb
aam
shlb
push
sub
sbb
adc
fimuls
add
mov
clc
cltd
add
adc
outsl
ficomps
jo
les
dec
mov
inc
jae
add
cmc
inc
jbe
push
je
inc
js
ss
mov
into
adc
jns
stos
lahf
add
xchg
push
add
sti
jge
cmp
out
ja
cli
push
call
push
je
lock
sbbl
fwait
jns
add
fnstenv
add
dec
das
cmp
jo
add
ss
add
out
shrb
mov
cmp
cmp
lret
push
imul
ds
adc
loopne
sar
add
insl
movsb
xor
sub
repz
pop
mov
in
clc
stos
pop
mov
pushf
or
leave
sbb
add
push
out
addb
aad
cmp
inc
push
mov
stc
cmp
sbb
add
ret
add
popa
and
shrb
stos
push
stos
mov
shl
mov
andl
mov
outsb
icebp
pop
mov
pusha
lahf
leave
adc
jae
and
loope
lcall
mov
mov
mov
or
call
test
lds
xchg
les
pop
cmpsb
jb
jne
lock
ljmp
inc
mov
cli
cltd
mov
pop
mov
hlt
inc
mov
out
push
mov
inc
mov
daa
out
aad
int3
mov
adcb
push
add
faddp
iret
push
and
mov
loopne
pop
and
mov
add
loope
add
scas
and
shll
std
jg
add
cmpsl
adc
jmp
and
dec
aaa
movd
cld
mov
sbb
add
je
add
sub
pusha
mov
push
xor
mov
add
cmpsb
mov
fisttps
mov
cld
cmp
fdivrs
cmovb
xchg
jecxz
nop
push
lods
jmp
aad
add
or
cmp
testb
xor
cs
mov
jecxz
cmpsl
or
sub
jno
adc
faddl
ror
stos
xor
adc
test
add
dec
ljmp
mov
xor
xor
pop
push
andl
mov
ret
push
scas
add
or
pxor
push
or
incl
jnp
pop
mov
aaa
xchg
adcl
sarb
outsb
xchg
add
in
rol
push
out
pop
sbb
mov
sbbb
sbbb
add
or
loopne
xchg
add
pop
addl
sti
rorb
test
adc
mov
and
out
push
add
out
add
subb
loop
daa
mov
and
dec
in
in
mov
pop
push
out
ja
js
sub
xchg
out
in
add
js
mov
ljmp
cmp
sahf
push
pusha
cld
test
cmp
mov
push
cmp
adc
inc
mov
movsb
mov
popa
mov
aad
lcall
add
das
out
arpl
sub
ljmp
aaa
xchg
pop
loope
cmp
mov
xchg
pop
nop
push
mov
adc
xor
pop
les
jp
cltd
adc
in
add
lret
or
in
dec
pop
jo
add
mov
inc
sub
testl
bswap
dec
lret
add
add
lret
stc
paddsb
dec
adcb
popa
adc
pop
and
mov
cmp
addr16
inc
adc
xchg
daa
pop
lcall
pop
or
popa
sbb
pop
cmp
mov
cmp
add
scas
push
xor
push
jbe
frndint
adc
test
adc
aas
lock
into
add
or
imul
mov
pop
cltd
pop
rorb
jecxz
arpl
shl
jae
out
push
fadd
sub
mov
add
pop
xor
add
or
mov
stc
add
ror
add
int3
dec
hlt
verr
push
fs
fsubl
add
movsl
notl
mov
fistps
cmp
lods
pop
adc
mov
mov
cld
cs
test
sti
cwtl
movsl
iret
cmp
out
nop
lods
cmp
es
mov
mov
push
xor
xor
pusha
lock
cmpsb
aad
cmp
ja
pop
lea
std
sarb
push
loopne
xor
scas
jo
add
add
jmp
push
dec
add
cmp
pop
out
jl
add
ret
and
xchg
add
mov
dec
sub
les
mov
and
push
or
xchg
xor
inc
jae
or
outsl
add
inc
and
adc
and
aam
push
xchg
or
and
stos
cmp
movsl
std
push
test
add
dec
imull
xor
cmp
and
pop
mov
xchg
cmpsb
sti
xchg
js
xor
sbb
in
aas
add
aam
pop
test
test
lods
imul
dec
aad
xor
in
aas
or
and
out
jo
rcrb
jg
outsl
incb
xchg
cmp
mov
aas
pop
scas
incl
inc
jle
xor
lods
pop
jae
jo
pop
lock
repnz
pushf
fmul
addb
cmpsb
xor
mov
add
jns
cwtl
enter
popf
add
push
push
and
aaa
pop
add
push
fsubs
mov
cmpsl
and
push
je
mov
cs
rorl
cmp
and
add
jmp
decb
fwait
jg
jns
xchg
or
jle
add
ret
dec
sbb
cmp
addb
push
testl
jae
xor
divb
add
insl
mov
jbe
subb
cmp
add
loope
cltd
and
adc
add
in
sbb
rcrl
dec
andb
add
mov
or
inc
sub
jle
mov
sbb
push
std
or
add
or
aas
sbbl
cli
add
lret
sbb
push
add
jne
sub
adc
or
clc
pop
lea
dec
dec
fmull
add
sbb
sub
mov
mov
psubusw
jge
js
sub
push
test
add
out
sbb
stos
xor
sbb
shll
icebp
cvtps2pi
mov
or
mov
xor
out
sub
insb
cli
push
xchg
or
pop
push
mov
xchg
jg
in
orl
loope
popa
sahf
jns
call
ja
inc
dec
push
cmpl
jmp
movsl
push
cmp
xor
pusha
aam
andb
daa
adc
sub
roll
inc
and
icebp
out
mov
sbb
add
or
push
out
push
cmc
lock
add
stos
sti
pushl
imul
xchg
jecxz
maxps
add
mov
aam
stos
mov
inc
jo
cmp
int
dec
fisubs
and
subl
pop
jb
mov
xchg
cmp
les
cltd
or
push
addb
lret
fadds
push
shll
cmpb
aam
push
inc
lods
and
cmc
iret
push
cmp
add
clc
pop
mov
notb
lock
test
into
pop
repnz
stos
push
lea
add
aam
mov
dec
data16
and
pop
aad
cli
cmp
sbbb
dec
ljmp
adc
pop
pop
or
test
mov
or
push
jo
and
stos
mov
or
out
pop
outsl
repz
das
mov
cs
add
shll
cltd
stos
pop
and
imul
in
inc
fcmovu
fsincos
pop
jmp
outsl
sbb
xchg
filds
clc
lods
mov
and
push
xor
sarb
pop
or
push
xlat
add
mov
in
xor
pop
add
outsb
sahf
xchg
push
orl
stos
push
add
push
andb
mov
and
out
add
jmp
mov
xchg
enter
jle
addl
pop
pop
outsb
cmpsb
dec
inc
mov
adc
sub
mov
add
std
inc
test
add
aam
inc
xor
stos
lds
test
pop
sub
repnz
imul
fcoms
cmp
aaa
pop
out
xor
cmpsb
insb
iret
test
pushf
sahf
inc
add
mov
lods
call
sti
repz
je
pop
xchg
dec
andb
and
add
movsl
cld
pop
jb
and
int
add
cmpl
ret
or
cli
out
adc
and
in
sbb
cmp
pop
jg
repnz
or
xchg
lods
add
lret
aam
orl
outsl
sub
adc
out
push
out
cli
sub
sub
into
xchg
mov
push
mov
pusha
inc
and
icebp
sub
inc
fmull
rcr
in
and
push
lods
mov
add
rcll
clc
stos
inc
lods
mov
mov
adc
inc
mov
xor
out
and
add
push
cmp
in
cmpsb
cmpb
das
inc
dec
test
pusha
test
lods
jo
mov
das
mov
sbb
cmp
sbb
int
out
xor
and
mov
insl
jl
int3
inc
sub
add
add
jle
std
ljmp
cs
dec
pushf
adc
movsbl
inc
add
fstl
imul
out
add
sub
ja
mov
bound
dec
mov
std
frstor
cmp
mov
insb
add
dec
scas
iret
push
int3
sbb
addr16
js
movsb
and
cltd
xchg
mov
into
xor
stc
cmp
aaa
sub
sub
xor
mov
jl
sti
xchg
iret
xchg
mov
add
mov
int3
inc
cmp
sti
xchg
push
inc
mov
dec
lods
pusha
cwtl
emms
jl
int3
inc
orb
dec
ret
xor
ds
jne
add
ret
push
inc
loope
add
clc
adc
xor
inc
xor
add
fwait
push
cs
pop
jecxz
std
adc
or
pushf
xor
dec
enter
xchg
loopne
push
rol
add
repz
fincstp
stos
jae
out
call
imul
or
or
sbb
inc
mov
adc
loop
inc
mov
lea
hlt
mov
movsl
flds
addr16
in
mov
dec
stos
and
hlt
push
add
mov
loopne
out
sub
xor
movsl
add
mov
into
fwait
test
mov
mov
bound
cld
sbb
dec
sub
jg
add
push
jo
js
push
xchg
iret
cmpsl
inc
sub
jge
mov
mov
enter
into
or
pop
xchg
gs
ljmp
inc
xchg
jle
add
xor
add
or
sub
loopne
add
rolb
mov
jo
jb
ror
das
cmp
add
xchg
cmc
rorl
dec
loope
cmp
push
ljmp
adc
jne
xor
std
sub
pop
movsl
cmp
mov
dec
push
loopne
fs
and
sbb
pop
rolb
ret
into
pop
popa
mov
xor
push
pushf
dec
repz
jmp
dec
loope
xor
cmpsb
inc
xor
ret
push
icebp
or
call
std
jg
pop
outsb
pop
and
or
add
leave
add
add
ret
sbb
popf
enter
incl
daa
sbb
adc
sbb
idiv
mov
ljmp
xor
or
inc
out
mov
andb
popf
das
fsubs
sbb
psraw
aam
mov
out
xor
cmp
movsl
aad
add
int
adc
jecxz
mov
cmp
or
scas
xchg
sub
push
pop
int
pop
push
loopne
in
sbb
lcall
aas
push
jle
popa
pop
fdivs
cmc
add
sub
xor
pop
jle
mov
pushf
daa
mov
test
fmull
scas
xchg
sbb
add
das
out
cmp
cwtl
sbb
cltd
cli
int3
add
add
ss
add
fmulp
jb
cmp
add
mov
mov
inc
inc
enter
leave
call
lret
das
dec
test
call
popa
cli
xor
gs
and
sub
xchg
sub
fs
movl
push
adc
pusha
aad
pop
add
mov
in
pop
cmp
lock
lock
lret
sub
ss
sbbb
fwait
pop
and
div
sub
cmp
lret
cmp
call
bound
enter
push
sub
popa
enter
adc
xchg
ds
dec
jmp
or
es
pusha
std
cmp
mov
pushf
sbb
js
or
shlb
ret
roll
cltd
fyl2xp1
push
push
icebp
and
fs
pop
mov
or
icebp
imul
mov
adc
lock
sub
xchg
nop
pop
add
clc
cmpsl
add
add
daa
push
loopne
lods
sbb
enter
lret
std
inc
jmp
push
movb
dec
jbe
or
clc
xor
mov
fwait
gs
arpl
ljmp
cwtl
pop
lock
mov
adc
cmpsl
dec
test
cmp
fiaddl
or
ror
pop
push
or
aas
inc
cwtl
scas
aaa
cwtl
or
and
movntps
adc
mov
in
stos
out
xchg
pop
mov
mov
test
dec
and
adc
in
or
mov
mov
push
mov
in
sti
pusha
iret
mov
sbb
fstps
repnz
pusha
xor
scas
xchg
sbb
xchg
inc
movsl
loopne
ljmp
fs
shl
lret
mov
fcompl
repz
add
movsl
int3
icebp
shlb
shlb
je
out
inc
cld
push
aad
pop
cmpb
xchg
sbb
add
mov
jl
in
div
add
mov
leave
mov
pop
test
daa
hlt
insl
jmp
lods
adc
add
pop
cmp
adc
les
add
mov
dec
dec
add
xchg
dec
sub
fsubl
aam
inc
add
lret
sahf
into
add
pushf
mov
xchg
xor
pop
or
lea
cmp
repnz
adc
push
adcb
repnz
add
loopne
int3
movb
pop
xchg
or
add
movsb
pop
cmpb
mov
mov
mov
iret
aaa
pop
arpl
sbb
pop
ret
add
test
sub
and
repz
inc
incl
clc
ret
mov
push
add
dec
fisttpll
add
repz
ret
jns
loope
icebp
add
jno
cmpl
lock
test
sub
sub
sbb
jb
stos
mov
mov
icebp
mov
lods
repnz
clc
sub
pop
xchg
repz
mov
dec
adc
push
xor
out
sbb
addb
lock
test
popa
not
add
arpl
cmpb
out
lret
sbb
mov
xlat
xor
or
and
mov
adc
stos
mov
das
shlb
sbb
stos
xor
sbb
leave
stos
mov
std
flds
mov
pop
shlb
aaa
or
sub
sbb
push
push
add
rorl
push
repz
popa
pusha
xchg
add
xor
mov
or
and
sbb
rorl
outsb
add
pusha
repnz
addb
dec
rorl
dec
popf
and
add
scas
add
push
xor
sbb
adc
mov
push
push
add
mov
out
and
clc
push
repnz
add
sub
push
sbbb
loopne
sbb
sbb
add
shll
push
in
imul
ljmp
cwtl
call
cmp
lea
aaa
fistpl
test
movsb
loop
dec
cmpsb
lret
mov
mov
sub
lock
or
testl
jl
test
sbb
mov
add
jno
xchg
sub
popa
mov
insb
das
sbb
xor
cwtl
out
fwait
hlt
inc
xor
push
filds
fmuls
jle
out
xor
outsl
jmp
dec
enter
jge
shlb
repz
push
clc
adc
mov
test
mov
shrb
mov
cmpsb
sub
add
int3
stc
cmp
and
test
pusha
xchg
lock
jmp
cmpsl
push
rorl
pop
in
pusha
pop
mov
adc
and
xchg
inc
sbb
mov
adc
or
push
lea
inc
adc
inc
pusha
nop
add
sarl
xchg
mov
call
lahf
ja
aad
mov
mov
lods
call
arpl
fwait
mov
xor
test
push
push
leave
lock
add
cs
jl
sub
test
sbb
rol
les
scas
gs
pop
pushf
pop
cmpsb
sarb
dec
inc
call
les
inc
jns
add
rolb
cli
pop
fldenv
addb
xchg
jl
in
inc
push
and
je
jmp
cmpsl
mov
hlt
aas
pop
jg
pop
je
mov
repnz
jp
jle
or
push
dec
cwtl
out
add
mov
pusha
and
sbb
js
or
xchg
sbb
add
out
jnp
cld
shl
ret
sbb
mov
leave
mov
jecxz
inc
int3
or
jae
mov
leave
insb
push
sbb
dec
mov
push
adc
inc
cltd
movsb
imul
hlt
adc
push
subl
cmp
or
int
fsubr
mov
cmpsb
sub
into
push
jb
dec
or
push
bound
lfs
mov
aas
rcrb
mov
cs
jb
leave
movsl
mov
sti
out
add
pop
fs
cs
mov
jbe
ret
xor
movsb
push
pop
andb
push
pop
mov
dec
push
pusha
xchg
mov
es
mov
loope
cmpsl
mov
test
out
cmovg
dec
pop
inc
stos
les
and
push
out
addr16
sub
add
pushf
test
sbb
xchg
cli
sahf
js
cmp
mov
gs
jl
roll
jmp
xor
out
jecxz
and
test
mov
test
adc
and
cmp
and
jle
mov
push
sub
sbb
jge
movsb
xorb
xor
dec
subb
add
popf
mov
and
add
cltd
fs
push
test
mov
add
jmp
mov
ret
and
mov
add
inc
push
das
out
add
add
push
jb
aaa
push
repz
dec
lods
and
inc
push
mov
loop
xor
jle
add
cld
call
rcrl
push
mov
add
or
add
les
insb
out
rorb
daa
jg
call
xchg
sbbb
icebp
out
jle
xchg
stc
adc
aam
push
pusha
inc
pop
ret
adc
aad
pop
repz
add
pop
and
cmc
mov
faddl
out
cwtl
add
lods
addb
movsb
dec
pushf
cmpsl
enter
rol
data16
andb
mov
mov
sub
jbe
sub
push
nop
xor
xchg
adc
imul
je
add
push
fsubl
add
and
push
push
adc
ret
popf
in
sub
xor
xor
adc
orb
mov
xchg
fsts
mov
int3
push
xchg
gs
test
clc
adc
adc
dec
lds
pop
mov
xchg
cmpsl
mov
rolb
sbb
or
or
std
sbb
adc
mov
inc
in
adc
xacquire
iret
addb
jecxz
dec
daa
orb
xchg
int
pop
cmpb
add
enter
popf
jl
add
divb
shrl
mov
dec
scas
fadd
inc
pop
fmuls
jnp
sub
int3
pop
jo
xor
xchg
int
loope
ss
or
adc
rolb
fcompl
js
push
test
adc
orb
cmp
add
jb
loopne
jge
das
aam
data16
lea
cmpb
out
and
adc
lret
nop
test
mov
outsb
and
add
mov
and
jle
je
imul
cwtl
adc
sbb
test
lock
add
clc
pop
movl
jl
add
dec
xor
mov
test
dec
sbb
add
test
sbb
or
dec
or
add
xchg
cmp
inc
sar
in
mov
xchg
pop
orb
imul
adc
lock
scas
jmp
inc
xchg
cmpsb
sub
inc
mov
xchg
sub
push
call
lods
sbb
insb
fdivrs
sbb
dec
movsb
aam
fs
inc
push
sub
out
test
in
cmp
sub
pop
addb
pop
sti
and
sbbb
fs
push
hlt
lcall
cmpl
xchg
cmp
mov
inc
aas
cmpsl
sbb
out
push
loop
push
sub
push
test
fwait
xchg
sti
outsl
or
addl
std
cmp
push
push
popf
add
imul
cmpsb
pushf
sub
sub
stos
cmp
or
in
stos
mov
test
add
add
hlt
neg
dec
enter
fdivs
dec
and
adc
lret
jle
jge
popa
push
bswap
test
pop
mov
shlb
shll
adc
outsb
sbb
enter
movsl
push
mov
ffreep
int3
fs
dec
jns
iret
mov
fcomp
or
lock
clc
dec
int3
and
add
inc
insb
or
xchg
push
add
lahf
jns
push
add
xor
adc
movb
sbbb
mov
jg
mov
pusha
and
dec
shrb
aaa
xor
jo
mov
in
aad
stos
mov
adc
add
jl
mov
repnz
xor
sti
pop
loop
cmpsb
push
and
jmp
mov
test
mov
xlat
mov
sbb
mov
fwait
in
add
test
add
lret
int3
nop
rclb
daa
sbb
sbb
test
mov
dec
add
loopne
jns
fdivrl
add
mov
pushf
xor
popf
dec
faddl
add
mov
adc
dec
cs
push
or
push
or
scas
or
dec
and
inc
and
in
xor
outsl
cld
inc
add
pop
cwtl
test
fisubrs
lret
xchg
mov
pop
pop
or
push
pop
es
dec
clc
adc
add
adc
jle
sbb
add
movb
pop
imul
add
aaa
lds
push
xchg
xor
mov
mov
jp
dec
int
adc
mov
add
mov
test
xor
dec
xchg
push
xor
stos
dec
leave
sub
adc
xor
pop
dec
repz
aad
xchg
pop
loope
fs
add
imulb
jl
js
inc
pop
cmp
xor
jge
jo
repz
xor
xor
out
orl
js
icebp
clc
popa
mov
pushf
jns
sbb
add
xorl
scas
add
push
dec
xchg
xchg
enter
in
mov
push
or
call
clc
dec
cltd
mov
or
sub
dec
jle
rolb
repz
push
xor
xchg
insb
into
dec
cld
pop
fdivl
mov
fs
add
aam
push
shrb
imul
lds
cmp
nop
dec
enter
ret
add
push
fidivs
loopne
sub
sbbb
jb
repnz
xor
add
popa
hlt
fs
test
adc
fld
or
xchg
inc
dec
pop
xor
lock
int3
or
mov
lods
adc
dec
dec
dec
mov
fwait
call
inc
sub
inc
ljmp
lods
add
lock
int
into
adc
iret
cmpsb
and
jbe
add
sub
cltd
lock
imul
lret
cld
enter
cmp
sbb
push
pusha
adc
xor
hlt
fldenv
sub
sbb
jo
xorb
jmp
nop
in
pop
rorb
lods
negl
cmp
into
inc
subb
dec
mov
sub
mov
sbbb
xor
inc
add
test
sbb
sub
sbb
fucomi
add
jne
dec
pop
ret
rorl
dec
lods
mov
and
aad
sbb
les
or
mov
xorl
dec
ret
add
enter
xchg
fstpl
rcll
jmp
add
push
leave
insb
dec
das
sub
and
pop
add
test
xchg
inc
sbb
insl
js
cmp
xchg
push
add
inc
loopne
arpl
add
inc
stos
lret
rolb
or
jmp
stos
push
out
leave
pop
lcall
jle
jge
xchg
and
leave
or
rcl
mov
stc
insb
push
mov
popa
lock
outsb
pop
jl
sub
test
adc
and
cmc
dec
jb
jl
sbb
fldt
aad
xchg
sbb
test
lods
in
js
sbb
mov
or
adc
add
lret
dec
enter
loop
cmp
jns
rcll
movb
out
outsb
and
add
loopne
jecxz
aas
sbb
xor
mov
mov
xor
xchg
lar
push
rorb
call
cmp
sbb
movsl
push
push
mov
mov
popf
mov
xchg
xlat
add
push
test
and
and
push
inc
mov
adcl
int3
add
sti
repnz
loopne
push
mov
pop
jns
push
jecxz
or
sub
sub
addb
push
rorb
sub
dec
ja
dec
push
mov
pop
and
repz
push
cwtl
cmp
loopne
in
lods
push
cmp
pop
adc
and
lds
es
aam
rcll
rclb
xor
pop
call
xor
sbb
pop
sub
sbb
clc
push
inc
test
jns
jo
aaa
sub
jg
jge
mov
add
test
repnz
clc
adc
sbb
or
or
daa
inc
xor
cld
jo
xrelease
mov
pusha
jle
mov
movb
shlb
adc
xchg
mov
sbb
lds
add
lcall
mov
jbe
mov
iret
xor
add
mov
test
adc
sti
inc
mov
mov
pop
repz
cld
and
mov
xor
inc
xchg
jecxz
inc
and
xchg
decb
adc
ja
xor
in
add
rcl
out
xchg
push
clc
pushf
sarb
jnp
add
sub
mov
add
ret
lods
sub
mov
std
adc
clc
daa
fcom
xchg
adc
or
popa
in
jo
fadds
jg
xchg
and
loopne
mov
call
push
in
test
xor
es
fs
aad
daa
out
nop
cmp
cmp
mov
jo
rcll
or
es
cmp
cltd
or
xchg
and
in
adc
es
sbb
in
stos
inc
repnz
xchg
test
or
nop
int3
push
stos
xor
xchg
pusha
add
rep
adc
cmp
push
push
lods
rclb
adc
xlat
sbb
inc
add
pop
and
sub
mov
loop
dec
popf
fmul
jle
dec
inc
je
fs
pop
sbb
in
int3
adc
mov
andb
cmpsb
add
add
cmp
adc
fdivr
mov
and
mov
or
repz
test
mov
sbbb
xchg
es
xorb
leave
cmp
mov
jb
or
jl
cmc
sub
pop
add
adc
xchg
mov
dec
in
fadds
lods
adc
xchg
loopne
call
leave
adcb
inc
and
js
pusha
lods
roll
pop
inc
enter
pop
dec
dec
test
addl
push
pop
add
jnp
jo
pop
shll
cmpsl
inc
or
pop
adc
add
mov
inc
pop
sarl
jl
push
stos
push
aam
in
fwait
xchg
mov
sub
imul
or
mov
addl
push
pop
pop
sti
scas
fs
mov
addb
or
add
add
push
es
icebp
dec
ljmp
push
daa
mov
mov
pop
add
pop
sbb
insb
cmc
pop
add
aad
push
add
or
jp
fiadds
push
test
hlt
stc
jecxz
sbb
mov
or
in
fistl
mov
cmp
add
jp
push
jne
add
movmskps
hlt
adc
mov
addl
jecxz
call
int
cmp
mov
cmp
jp
dec
pop
in
lock
dec
jl
mov
test
dec
or
push
cwtl
xorb
mov
sbb
adc
adc
cmp
ss
jge
sub
leave
dec
lods
call
movsb
enter
mov
ficompl
xchg
add
inc
inc
loopne
mov
sub
and
adc
sub
cmp
enter
fdivl
push
insb
cmp
outsb
fistl
or
push
mov
nop
or
lods
rclb
mov
les
jae
popf
add
sti
jno
fmul
mov
add
pop
stos
dec
ret
inc
mov
mov
fdivrs
insb
push
add
sub
add
and
push
jbe
fwait
add
ret
fdivrs
lahf
adc
in
jg
nop
push
cmpb
ss
out
subb
movsb
add
add
jecxz
mov
push
orb
xor
cmp
xchg
xor
add
filds
inc
in
ljmp
push
pop
leave
mov
xor
cmc
hlt
mov
mov
mov
mov
in
pushf
add
das
cld
pusha
rorb
lcall
push
cmp
add
mov
sbbb
dec
xor
test
xor
in
inc
lods
lock
insl
cmpsl
lret
mov
adc
out
lods
cmp
andb
sub
mov
push
push
and
sub
jns
adc
mov
push
jb
xchg
xchg
add
out
and
cmovle
inc
fwait
arpl
stos
push
cmp
fbstp
hlt
cld
add
roll
arpl
mov
insb
push
hlt
push
sti
mov
mov
sub
scas
test
cmp
add
insl
fs
xor
add
cmc
shlb
vmaxpd
mov
adc
mul
fists
sbb
orl
adc
mov
sub
loope
ljmp
shlb
cmc
add
fnstcw
add
xchg
xor
rclb
loopne
sbb
jg
cwtl
xor
add
or
mov
scas
repz
mov
lcall
sbb
pusha
add
ret
icebp
xorb
sti
add
xor
pushf
push
dec
mov
in
imul
shrb
movsb
inc
push
cwtl
sbb
and
or
ret
sbb
inc
or
addr16
push
mov
add
and
or
add
push
pop
pop
lods
into
push
lock
call
mov
add
push
push
pop
jmp
dec
in
sub
stos
movsl
repnz
orl
dec
ss
addr16
std
add
mov
pusha
es
pop
add
mov
sbb
sbb
inc
in
ret
pop
gs
insb
lcall
addb
sarb
push
jno,pn
mov
adc
lea
xchg
xor
jl
popf
aaa
in
jno
xchg
adc
scas
rorb
mov
subb
xchg
ja
shlb
mov
sar
pop
add
add
mov
arpl
push
hlt
mov
movsb
js
xchg
out
test
mov
push
incl
pop
mov
jmp
xchg
lcall
pop
add
loop
ret
nop
lcall
or
jge
mov
push
sub
movsl
jmp
das
fld
dec
addl
jnp
push
subb
mov
and
dec
sbb
add
lods
out
insb
repz
std
ret
xor
pop
dec
sbb
sub
mov
push
jp
sbb
push
out
inc
add
mov
xor
add
ficoml
xor
sbb
test
ret
mov
xor
xor
sub
push
mov
add
in
nop
bound
les
dec
addb
clc
testl
inc
add
dec
add
cmp
and
clc
outsw
add
add
mov
call
addb
push
out
scas
jl
adc
mov
push
jnp
xchg
cld
xchg
stc
add
mov
addr16
add
pop
pop
daa
dec
aaa
repnz
sub
mov
jb
xchg
stc
add
adc
sahf
inc
in
xlat
sub
pusha
jge
xor
xchg
sub
add
and
in
out
subl
adc
xchg
test
test
sub
popa
mov
pop
mull
add
or
iret
cmpsl
fisttpll
push
std
pushl
aam
hlt
sub
jnp
movd
pushf
or
hlt
dec
jmp
aad
rolb
rolb
je
pop
inc
lods
movsl
lret
pop
add
push
push
add
mov
loope
int
clc
dec
add
and
cmp
lahf
mov
scas
or
sub
neg
or
jl
add
ja
mov
adc
and
test
inc
movsb
adc
adc
mov
mov
std
adc
idiv
add
push
inc
jnp
sub
sub
sbb
popa
andl
cmp
sub
loopne
sub
xor
sub
cmpsl
mov
or
cmp
daa
js
add
jnp
sub
stc
cld
orb
iret
push
xchg
cli
sbb
sbb
dec
enter
fcomps
and
xor
ret
inc
jno
outsb
imul
pop
sub
add
sub
sub
and
pop
adc
sbb
lock
push
mov
pop
fucomi
and
jp
adc
xchg
imul
sti
stos
add
das
or
push
xor
and
mov
cltd
fcomip
inc
lcall
iret
repnz
mov
pop
dec
or
insl
into
push
ss
inc
lods
cmp
sbb
flds
cli
xor
aam
push
adc
push
icebp
xor
mov
out
add
out
fnsave
jg
add
outsl
shrb
in
aas
mov
add
stc
pusha
cltd
cs
fsubrs
pop
addr16
xchg
adc
adc
jge
in
sbb
mov
pop
push
mov
sub
ret
sbb
push
sbb
sub
data16
add
addr16
out
lret
lock
inc
or
clc
cmp
push
lock
call
pop
cmp
movsl
iret
scas
sti
adc
movzbl
add
loopne
adc
and
mov
loope
subb
and
add
lahf
mov
or
pop
out
add
cmc
jg
xchg
sbb
lds
fucomp
pusha
adc
and
add
movsb
cli
pop
push
loopne
lock
push
dec
insl
testl
arpl
add
dec
in
sub
inc
add
repnz
sbb
lods
lret
add
aaa
imul
jl
mov
add
adc
add
adc
add
push
shl
in
stos
mov
jg
stos
xchg
lds
xor
or
ret
stc
jae
xchg
push
insl
mov
lods
xchg
cmp
mov
ss
hlt
call
sti
lret
int3
and
adc
push
es
add
add
mov
enter
add
xchg
mov
add
xorl
ficomps
mov
inc
add
out
or
jb
xchg
pop
scas
mov
test
or
mov
in
xchg
push
push
jae
add
hlt
or
adc
sbb
add
ds
xchg
sti
mov
xchg
ja
add
inc
addr16
jne
cwtl
mov
lods
stos
jmp
rcl
fs
jmp
rolb
int3
fisttps
pop
add
push
jecxz
cwtl
or
push
repnz
add
scas
lock
test
xchg
data16
add
xchg
ficoms
loopne
add
movsb
ljmp
stos
adc
test
nop
pusha
fcoms
push
pop
push
push
cmpsb
mov
xor
loop
bound
subl
fsubrp
mov
shrb
nop
sti
add
lock
add
jg
cld
shll
ret
fwait
push
mov
inc
mov
mov
cmc
cmp
lcall
mov
dec
pop
jl
add
bound
mov
xor
fisubl
nop/reserved
sub
je
mov
clc
jp
push
mov
dec
add
fs
dec
in
add
sarl
add
les
imul
adc
jns
pop
push
or
je
shl
mov
cmp
sub
idivl
push
and
sarb
aas
push
lahf
insl
dec
subb
sarb
outsb
add
inc
jl
add
call
xchg
or
std
jae
rcrl
mov
add
and
test
sbb
sbb
sbb
enter
xchg
fcmove
add
fstl
add
loop
jle
out
add
rclb
sub
ret
mov
pop
xchg
daa
add
and
jb
sti
push
and
repnz
jmp
in
add
bound
das
cmpl
xchg
mov
adc
jne
addr16
fiaddl
arpl
dec
aad
add
icebp
jl
cmpsl
push
add
mov
dec
pop
mov
dec
scas
xchg
mov
test
pop
lahf
add
gs
xor
inc
test
xchg
dec
outsl
repnz
adc
in
fiadds
aas
rol
mov
cmp
in
dec
push
add
shr
aad
fsubrp
inc
add
inc
filds
add
cmc
push
sub
or
mov
movl
sub
dec
and
add
gs
mov
outsb
sub
xchg
push
pop
xor
out
mov
sub
mov
insl
rep
scas
nop
inc
add
xchg
movsb
pop
cli
ds
das
mov
dec
push
dec
cld
loopne
add
add
in
fld
mov
test
cmp
add
pop
sub
dec
adc
mov
and
ja
lahf
in
xor
adc
inc
test
in
add
gs
push
or
sbb
cmp
mov
add
xchg
and
and
add
addb
jl
xorb
and
cmp
insb
add
xchg
sti
data16
mov
sub
mov
lods
pop
mov
clc
mov
and
arpl
insb
fs
inc
ret
jnp
pushf
ret
push
push
sbb
or
mov
arpl
add
int3
add
cmp
add
in
stos
scas
shr
imulb
xor
add
xchg
fbstp
cli
aaa
add
icebp
push
int
lret
xor
bound
repz
cmp
jge
mov
jmp
sbb
mov
add
or
addb
test
cmp
add
pop
je
out
xchg
rdmsr
xor
mov
add
sub
mov
lds
ds
mov
sub
lss
aam
aas
add
add
dec
ret
or
rorl
mov
mov
das
push
pop
inc
jecxz
or
les
in
pop
pop
fcom
cmp
sbb
test
cmp
push
add
mov
pop
decl
orb
outsb
loope
fidivl
and
adc
inc
dec
lret
xchg
cltd
adc
adc
push
rclb
inc
loopne
adcl
dec
fdivrp
add
jg
push
mov
lea
and
test
adc
xorb
neg
in
stos
cltd
add
data16
add
leave
push
push
pop
into
ret
enter
scas
mov
rolb
fcmovbe
outsb
jl
add
insb
push
cmp
add
ds
pop
cs
add
mov
adc
add
xor
xor
add
xchg
cmpsl
in
aaa
jne
mov
add
mov
add
cmp
lea
out
cmp
lret
loop
or
push
inc
out
xchg
fldl
add
rcrb
pushf
in
inc
dec
bound
stos
sti
mov
inc
lods
dec
decl
add
mov
int
lahf
stos
repnz
xchg
enter
jmp
subl
add
cmpsb
por
or
ds
daa
xor
aaa
pop
test
lds
pop
adc
fdiv
or
cmpsl
mov
push
add
test
and
sbb
out
jnp
popf
cmp
add
ljmp
or
cmp
jns
sbb
push
inc
cmpsb
jge
push
add
sub
and
and
mulb
jl
xchg
pop
rcll
add
out
push
lock
shll
pop
imul
jne
add
std
dec
mov
pop
or
mov
mov
add
lret
cmp
pop
orl
mov
dec
pop
popw
shrl
pop
add
in
cmpsb
add
adc
pop
xlat
push
lcall
mov
das
xlat
add
cmpsb
dec
ret
jecxz
pop
lock
adc
inc
pop
lcall
xchg
dec
jecxz
nop
and
push
cmp
dec
push
cmpsl
mov
add
mov
dec
jle
mulb
and
lcall
cmpb
push
or
insl
xchg
xorb
daa
and
and
mov
sbb
sub
lret
mov
cltd
rorb
fdivrs
add
jo
fbld
adc
insb
xchg
add
pop
ss
mov
pop
das
add
aam
jle
adc
dec
lret
push
and
or
lds
or
and
add
sahf
mov
jae
ficoms
adc
push
in
test
or
mov
call
movl
rorl
insb
aad
fwait
clc
cmpsl
mov
cwtl
pop
addl
out
hlt
jno
pop
xchg
pop
ja
mov
sub
push
inc
sahf
int3
fdivs
add
scas
xor
jb
mov
jae
sarl
cmp
or
addr16
lods
sbb
adc
lods
pop
cmp
in
add
jne
dec
ret
fisubrl
jno
sbb
cmp
std
addb
jb
call
aad
inc
push
ret
pcmpgtw
mov
xchg
add
aam
mov
pop
arpl
add
idiv
pusha
daa
or
leave
test
sub
mov
add
dec
jmp
add
pop
test
shr
jecxz
mov
movd
cltd
cld
outsb
test
dec
inc
aam
jo
jae
mov
repz
call
or
add
mov
add
stos
or
enter
add
popf
pop
fcomps
inc
sbb
pop
jbe
or
call
add
cmp
mov
mov
add
push
inc
add
aad
mov
pop
mov
idivb
lock
cmp
push
pop
test
push
sbb
lcall
outsb
and
mov
sub
movsb
add
test
add
xchg
icebp
ret
loopne
mov
aam
adc
or
and
sbb
pop
cmp
test
dec
test
mov
or
sub
test
adc
sbb
es
addb
cwtl
dec
xchg
shlb
pushf
int3
ror
add
scas
dec
jecxz
loopne
xlat
jle
add
adc
add
sub
negl
and
movsl
lahf
add
scas
xchg
mov
add
and
sub
test
adc
mov
popa
rclb
mov
dec
xchg
cmp
cwtl
das
inc
or
add
dec
push
stos
xchg
out
push
jbe
dec
pushf
add
jo
outsb
mov
push
leave
popf
lds
out
add
test
sbb
add
jecxz
add
push
add
popa
push
insl
jne
or
mov
subb
cmp
push
adc
fs
adc
in
xor
daa
popaw
mov
pushf
push
cmpb
loope
pusha
sbb
cmp
scas
unpcklps
and
sub
push
into
and
mov
cmp
stc
xchg
stos
push
and
inc
popf
adc
push
shlb
inc
pop
cmp
cmpb
inc
lcall
imul
mov
sub
fistps
sarb
push
insb
add
inc
sbb
add
sub
pusha
cmp
add
mov
add
cmc
jb
or
and
test
cld
shl
sahf
fdivp
and
ss
divl
xchg
mov
pop
mov
inc
mov
test
enter
add
jmp
lds
testb
dec
ljmp
pusha
cli
enter
clc
out
mov
cs
ss
js
and
add
add
push
mov
xorl
call
arpl
jge
fiaddl
fldl
cmp
adc
nop
test
sub
mov
mov
lcall
in
add
lret
int3
repz
inc
sub
insb
pop
rcl
add
dec
dec
push
mov
add
stos
mov
cltd
add
jnp
movsb
add
cwtl
push
or
jbe
stos
loopne
jo
out
loopne
aaa
mov
xor
mov
loopne
pop
flds
push
xor
inc
push
xor
aam
jge
adc
and
loopne
lea
mov
icebp
mov
dec
adc
and
js
aaa
test
push
jnp,pt
add
mov
mov
in
xchg
jmp
xor
pusha
adc
cmp
xor
das
fs
jo
add
stc
bound
and
and
add
shll
add
inc
pop
xlat
pop
jge
jb
mov
les
fsubl
es
adc
rcr
shlb
fnstcw
das
pushf
cmc
lods
fadd
pop
outsb
add
sbb
adc
cmp
dec
cmpsb
cwtl
out
add
jge
cmp
and
sub
xchg
lcall
ret
fwait
add
xor
jnp
lods
or
sti
mov
xor
sbb
fistps
andl
inc
inc
inc
fs
mov
shlb
push
push
mov
in
or
jnp
mov
jo
mov
sub
std
xchg
jmp
repz
js
add
cmp
insl
mov
sbb
or
add
nop
adc
lret
pushf
push
add
cmc
mov
adc
pushf
or
outsl
ljmp
fistl
add
mov
test
cmpsb
std
fdiv
or
inc
sbb
cli
ret
and
pusha
or
push
sti
sub
jg
mov
cwtl
lcall
cld
adc
jo
test
push
jg
add
sbb
adc
cltd
rcrb
je
mov
test
divl
repnz
ret
and
xchg
sub
push
stos
mov
mov
lea
push
mov
mov
aad
mov
xor
add
jbe
hlt
sbb
aad
inc
push
ja
pop
jnp
add
insl
shll
in
incl
dec
pop
in
mov
les
push
sub
pop
sub
add
shl
decl
pop
or
push
jae
xchg
loopne
imul
jo
in
pop
jb
pop
jge
mov
adc
add
jp
xchg
adc
pop
sub
out
data16
add
xchg
lods
jg
add
inc
gs
arpl
dec
lock
shlb
jbe
pushf
xbegin
sub
sbb
xor
mov
shlb
push
imul
roll
mov
outsb
cmp
jb
pop
push
mov
xor
pop
and
add
pushf
sbb
xchg
iret
outsl
and
nop
xor
add
pop
jno
fisttps
stos
int3
lods
add
jne
mov
push
pop
inc
add
and
add
jmp
in
ret
inc
xchg
add
sbb
mov
mov
aad
add
mov
movsl
add
js
icebp
mov
mov
enter
adc
xchg
xchg
orb
stc
mov
jo
mov
dec
js
jl
lock
adc
mov
lods
cmpsb
enter
xchg
ja
lds
cli
mov
mov
jno
jns
outsl
add
out
in
outsb
shlb
or
push
sarb
or
add
push
ljmp
pusha
add
dec
clc
jmp
insb
sub
arpl
mov
in
test
pop
mov
sbb
adc
jmp
dec
sbb
and
shll
pop
ffree
xlat
lock
jne
in
adc
pop
ficompl
adc
test
ret
adc
add
push
adc
add
push
aaa
aad
or
pushf
repnz
and
add
popa
arpl
lahf
or
int
mul
mov
lcall
jo
out
mov
pop
mov
add
outsb
rolb
add
ja
mov
cmpsb
ds
je
jne
add
xchg
movsb
push
stos
push
push
je
fs
or
add
test
pop
popa
add
fcoms
cli
es
dec
enter
ja
jge
mov
jge
add
jno
icebp
adc
mov
mov
stc
add
mov
add
jmp
movsl
nop
clc
js
outsb
lds
add
mov
jo
insl
xor
test
sub
cli
fmuls
insl
mov
push
daa
xchg
lods
in
je
sbb
adc
test
mov
test
aaa
ljmp
push
add
sbb
icebp
imul
jle
push
add
movsb
mov
lret
movsl
fiaddl
loop
xor
push
sbb
push
lods
clc
add
sbbb
push
mov
dec
jbe
cmpsl
daa
jmp
clc
lret
adcb
insl
imul
arpl
pop
test
or
hlt
fs
and
and
mov
and
sbbb
jmp
push
mov
incb
add
cmp
mov
inc
in
sbb
aas
imul
test
mov
dec
add
movsb
dec
jne
sti
sbbb
xorl
xor
rcl
mov
ljmp
loop
hlt
inc
xor
lcall
fstpt
lret
cmpl
mov
jl
sub
cmp
out
je
mov
sti
or
ss
andb
sbb
sbb
ror
subb
hlt
lock
movsb
mov
pop
insb
enter
inc
jmp
inc
mov
adc
pop
shl
fsubrs
in
cmp
dec
fldl
test
adc
add
add
or
pop
mov
notb
add
fstpl
sarb
pop
call
imul
cmpsl
ret
and
push
testl
ret
push
push
ljmp
adc
fcoms
and
jecxz
shrb
leave
xchg
mov
dec
add
mov
cmp
jns
not
add
mov
das
jle
icebp
add
mov
stos
movsb
sar
out
or
jge
add
cmp
outsl
andl
jmp
adc
and
scas
add
in
add
fcoms
cmp
jne
inc
xchg
rorb
in
cmp
cltd
xchg
or
push
nop
fidivrl
and
aam
mov
nop
addb
pop
push
movl
xchg
push
fbstp
aaa
sbb
imul
lods
push
ret
add
add
outsl
mov
xor
xchg
aaa
out
sbb
shr
sbb
sub
out
push
sti
aad
push
stc
jo
into
add
mov
outsl
rcrl
and
ret
enter
subb
xor
out
pop
jno
adc
jmp
add
xor
inc
lahf
scas
fstpt
in
das
sbb
dec
jb
cld
loopne
mov
js
mov
pop
add
mov
lds
ret
mov
jp
and
dec
sbbb
out
add
add
fcomps
repnz
add
mov
xor
and
enter
iret
outsl
loope
add
pop
add
test
inc
lods
movsb
pop
mov
unpckhps
dec
pop
adc
xchg
and
adc
test
bound
add
sbb
iret
mov
or
leave
scas
pop
sbb
adc
push
inc
les
push
add
gs
jl
and
xor
jno
mov
pop
fcmovne
ret
addr16
mov
mov
push
nop
xor
ds
cmp
in
mov
or
push
inc
rcrl
movsb
sub
popf
je
sbb
mov
add
jl
cmpsl
push
mov
push
addr16
movl
xor
pop
scas
jmp
scas
cs
and
mov
xchg
jle
xor
clc
lahf
sarl
mov
xchg
xchg
mov
scas
add
nop
repnz
xchg
lods
xor
inc
cmp
pop
add
cld
ror
push
mov
jb
les
aam
addr16
lahf
nop
cmp
fisttpll
sbb
setno
push
in
mov
inc
sbb
xor
mov
add
enter
pop
mov
or
mov
and
jno
fdivl
mov
test
outsl
jns
arpl
sub
add
ljmp
pop
movsl
data16
add
dec
rorb
or
add
mov
and
loopne
popa
push
add
inc
shlb
lock
icebp
or
cs
in
cmp
cld
or
addr16
xor
cli
in
lret
cmp
pusha
xor
int3
enter
and
adc
cmc
aam
adc
xchg
xchg
cwtl
adc
add
clc
mov
sub
or
fcoml
sbb
xchg
cmp
sbb
lcall
cwtl
inc
lock
and
out
mov
xor
mov
mov
loope
ss
loopne,pn
shll
inc
jno
pop
push
inc
and
sbb
mov
inc
and
nop
jo
adc
rorb
cmpsl
out
dec
add
mov
xlat
enter
xor
adc
push
lcall
mov
fs
cmp
imul
sub
mov
push
movsl
mov
and
out
sti
aam
mov
xchg
sbb
mov
sub
popa
ret
sbb
xlat
jne
sbb
mov
mov
fldcw
sbb
or
int3
mov
jno
fs
dec
cmp
rcr
push
inc
adc
lods
mov
je
mulps
xor
mov
mov
push
mov
pop
test
dec
mov
xchg
adc
jns
in
jge
bound
add
fdivs
add
push
sbb
jno
lods
sub
inc
and
jo
or
shll
nop
aam
sbb
bound
mov
and
or
das
scas
imul
or
push
add
out
rorl
ds
add
stos
addr16
or
or
cli
pop
mov
pop
sbb
hlt
inc
sub
les
repnz
mov
fs
sub
jmp
rcr
jae
loop
sbb
pusha
les
and
stos
mov
lret
mov
xchg
inc
subb
js
and
in
outsl
xor
imul
jns
outsl
stc
or
ret
pop
adc
fdivrl
push
and
mov
rolb
test
sti
xlat
cwtl
pop
jo
push
lods
arpl
and
lcall
push
push
xor
nop
add
mov
dec
sbb
jb
repnz
xor
add
inc
sti
push
add
movsb
mov
push
rorb
test
fdivrl
mov
shrb
jno
into
and
in
jne
inc
sbb
or
movsb
rolb
shr
scas
xchg
in
sar
popf
xchg
fnstsw
in
mov
xor
aam
add
mov
push
add
stc
shll
es
lods
or
push
in
sub
pop
icebp
dec
and
push
add
daa
lods
mov
int3
push
int3
orb
lcall
daa
pop
ret
in
push
int3
enter
mov
mov
mov
stos
adc
adc
push
mov
push
sbb
add
sbbb
xorl
cli
add
inc
xchg
bound
cs
andl
inc
or
fmull
loope
loope
push
sub
dec
pop
inc
sbb
ds
jnp
stc
jns
pop
mov
roll
jp
jns
sti
dec
push
lret
es
shlb
jo
rcll
movsl
xchg
mov
into
sar
or
fcomps
adc
and
in
mov
add
push
xlat
dec
addps
ret
or
xor
sbb
mov
in
mov
jmp
adc
lods
mov
cmpsb
js
and
out
mov
inc
push
xor
enter
cmpsb
fiadds
mov
sub
stos
lods
nop
in
jp
pop
xchg
mov
add
sbb
jecxz
add
scas
sub
mov
mov
mov
add
rolb
add
pop
push
pop
data16
sbb
add
jnp
push
sti
xor
mov
xchg
adc
cmp
test
in
sub
fimull
xchg
jbe
loopne
push
addl
xchg
pop
ja
pop
adc
push
shll
mov
and
add
xchg
sti
xor
repnz
xor
lods
fwait
jb
adc
jae
cwtl
leave
add
add
ficoml
or
push
mov
pop
aam
push
nop
fmuls
aam
and
mov
pop
cltd
inc
ror
enter
xchg
pop
cmp
and
in
cmp
jo
xor
xchg
movsl
and
clc
jae
mov
sahf
cmp
jmp
das
sarl
mov
cmpsb
dec
sub
jp
cli
sub
es
or
pop
cwtl
sub
in
pusha
cmp
fiaddl
cmp
call
sub
push
push
lret
cmp
xlat
fidivs
ffree
inc
cmpsl
sub
cmc
enter
mov
mov
and
xor
add
mov
pusha
or
ljmp
or
adc
pop
test
cwtl
pop
add
add
scas
iret
les
cli
jmp
loopne
adcl
sub
inc
mov
inc
js
jno
add
add
jmp
punpcklwd
sbb
xchg
xor
lcall
cwtl
aam
in
pop
adc
std
inc
or
xor
mov
and
pusha
cmp
xorb
inc
xor
push
cmpb
jecxz
cmp
cli
pop
in
xchg
mov
repz
fidivrl
jle
inc
add
fldt
ss
dec
fists
out
mov
psrad
arpl
mov
enter
add
xor
and
lahf
push
and
push
xor
xor
addl
dec
dec
les
dec
nop
or
int
lds
shrb
xor
xchg
xlat
cmp
sbb
pushf
add
adc
pusha
fsubrl
push
and
jns
mov
sub
mov
mov
dec
cwtl
xchg
lds
les
pusha
sti
adc
cmp
mov
mov
cmpl
push
icebp
mov
mov
into
mov
add
inc
aam
jne
out
pop
or
pusha
dec
inc
shr
adc
mov
and
pusha
pop
enter
icebp
cmp
pop
xchg
sbb
sbb
xchg
mov
outsl
cwtl
or
jg
xchg
add
or
ret
es
xor
jl
add
sbb
mov
add
or
mov
xchg
int3
dec
es
pusha
mov
rcll
mov
mov
push
dec
xor
or
push
fistpl
test
dec
mov
das
or
inc
call
mov
or
add
daa
int
xor
mov
push
mov
xor
sub
jnp
add
enter
scas
xlat
add
sbbb
xor
ja
and
nop
test
mov
sub
js
ds
aas
rolb
mov
sar
and
loope
or
mov
cmc
add
add
cmp
movsl
mov
adc
push
mov
jo
jo
jl
ja
inc
pop
push
push
pop
cli
cmpb
insb
xchg
sub
mov
cmp
sbb
dec
pop
jmp
mov
xchg
add
jecxz
pushf
test
xor
sbb
in
nop
stc
xchg
fs
cs
enter
pop
cmpb
fiaddl
xchg
cli
adc
bound
andb
adc
push
insb
outsl
push
lret
pusha
or
cmpsb
push
popf
fwait
out
jnp
jno
xchg
hlt
std
add
frstor
enter
or
xchg
add
bound
popa
test
ret
xchg
sbb
xor
dec
add
ret
dec
movsl
push
sub
push
loope
xchg
dec
mov
xor
testl
iret
adc
sub
and
aad
outsl
sub
xor
push
dec
test
xchg
mov
scas
nop
pop
dec
or
mov
fimull
xchg
pop
xchg
xor
stc
mov
inc
rcll
xor
mov
xchg
cs
xor
adc
dec
pop
mov
xchg
add
shl
clc
out
insb
cmp
out
mov
mov
in
dec
popf
xor
cld
inc
or
mov
mov
out
or
sub
pop
insb
hlt
lahf
adc
pop
test
hlt
sarb
add
xchg
xchg
ds
ret
push
iret
sti
fdivrl
testl
cs
fstl
test
or
inc
idiv
icebp
fwait
loopne
mov
inc
mov
ja
shrb
lock
je
sbb
mov
in
in
incl
or
mov
icebp
adc
hlt
add
jmp
adc
sub
push
data16
mov
fcmovb
and
or
xor
lds
inc
mov
cld
into
sbb
adc
xor
mov
mov
pop
jl
add
cli
scas
js
and
rclb
sahf
dec
add
in
adc
mov
andb
es
inc
xor
adc
mov
pop
hlt
push
mov
test
inc
cwtl
in
pusha
and
add
sbb
in
dec
xchg
int
dec
or
ret
enter
mov
sub
stos
adc
ret
dec
outsl
cmp
mov
imul
mov
sbb
or
les
or
adc
in
nop
and
shrl
fsubl
lock
pusha
adc
push
ljmp
xchg
push
cmpsl
je
loope
jp
mov
and
mov
dec
push
pushf
ret
dec
pop
mov
stc
lods
mov
cmp
push
jo
and
repnz
nop
xor
mov
jbe
je
jo
gs
dec
jo
ret
pusha
jp
dec
mov
add
sbb
out
cmpb
sub
lods
lret
push
add
xchg
xor
hlt
and
add
lret
sbb
bound
mov
or
pop
mov
inc
add
lds
nop
outsb
fcmovnb
or
mov
sub
lea
jns
das
jne
or
xchg
int3
xchg
mov
or
jns
cli
sbb
loop
test
sub
les
test
xor
aaa
dec
adc
sbb
xor
inc
test
data16
test
pusha
fnstcw
add
adc
mov
dec
fcmovnu
dec
add
push
mov
stos
es
movsb
add
sub
cli
int3
in
imul
add
xchg
add
ds
xchg
cmc
adc
cli
sub
adc
popf
shrb
lods
sbb
in
xchg
mov
mov
pop
cmp
mov
bound
adc
push
xchg
pushf
xchg
or
jmp
adc
testb
xor
movsl
mov
mov
nop
pusha
into
xorb
ret
push
push
pushf
dec
dec
les
dec
daa
dec
add
xchg
cli
dec
ljmp
pop
and
sti
adc
in
rcrb
sarb
dec
pop
mov
rcrl
sbb
aaa
rorb
stc
inc
jno
cli
sbb
clc
add
outsl
dec
test
mov
inc
inc
dec
add
sti
aas
lods
push
dec
adc
repnz
out
mov
add
shrl
push
cwtl
mov
and
daa
ss
push
shl
or
popa
adc
lods
imul
adc
add
or
mov
dec
lods
fildll
ror
clc
rcrl
cmpb
sbb
sbb
adc
inc
clc
xchg
xchg
push
and
insl
hlt
mov
sbb
jmp
daa
or
fdivr
or
aam
roll
jbe
leave
inc
into
xchg
addl
mov
cmp
push
jle
add
mov
and
push
ror
sbb
ja
dec
cmp
mov
mov
call
mov
adc
mov
lods
mov
test
outsl
xor
and
leave
enter
sub
sub
adc
cmp
xchg
mov
xchg
inc
ds
push
test
mov
pop
dec
mov
jmp
pusha
andl
mov
xor
add
mov
in
adc
fnsave
adc
movsb
add
incl
repz
add
dec
add
je,pn
int
loopne
xor
aad
jo
arpl
pop
es
xor
push
xchg
js
pop
testl
ja
outsb
adc
les
loopne
ret
add
movb
lock
pop
jl
out
add
ss
movsb
cmc
imul
mov
push
and
jns
pop
sbbl
adc
mov
or
enter
int
dec
icebp
mov
cmp
jecxz
sub
pusha
ja
add
vmread
mov
int3
rolb
mov
repnz
mov
es
mov
or
jo
mov
popf
adc
ja
jae
adc
inc
enter
in
subl
add
out
je
in
scas
insb
xor
movsl
sub
lret
test
xor
jmp
sbb
add
and
sbb
jnp
add
das
fs
xor
cmp
cmpsl
test
in
std
adc
or
mov
lahf
jecxz
or
enter
ljmp
js
nop
int3
and
test
ds
xlat
cmpl
sub
fnsave
push
mov
push
pop
xchg
pop
add
jp
add
int3
sbb
push
cmp
jo
mov
or
sti
test
gs
popa
outsl
or
adc
roll
jne
push
clc
mov
mov
pop
mov
mov
das
dec
add
insb
setl
mov
xchg
or
cmpsl
mov
add
xor
add
pusha
testb
hlt
jp
test
xchg
or
or
sbb
xchg
imul
adc
ret
jbe
aam
iret
fsub
add
dec
lock
cmp
lret
add
mov
lods
inc
adc
inc
int3
test
cld
xor
xchg
mov
mov
mov
dec
pop
xor
mov
or
add
clc
ret
pop
cld
or
jp
aam
ret
fcom
or
dec
or
jecxz
adc
loope
dec
push
mov
dec
mov
push
xchg
ljmp
loop
test
dec
sbb
adc
insb
fs
orb
inc
sbb
or
pop
mov
rcll
sbb
and
jmp
mov
mov
pop
int
lock
fbld
mov
scas
lcall
jns
add
mov
jl
add
mov
adc
jp
sbb
adc
les
add
arpl
ret
mov
sbb
dec
jge
jne
dec
mov
mov
mov
test
and
xchg
call
sbb
mov
enter
push
das
jle
hlt
xor
pop
lock
mov
jo
inc
xchg
add
sub
dec
jne
insb
lret
shlb
sbb
or
cmp
es
loope
call
shll
lock
pusha
cwtl
mov
aam
cmp
sbb
fwait
sub
lods
jmp
add
push
movsb
lahf
or
ljmp
pop
into
sti
push
adc
fiadds
mov
insl
add
add
fbld
testb
sub
or
fdivl
lret
pop
cli
movsl
pop
imul
int3
loopne
pop
in
xor
xchg
xor
sub
gs
jp
inc
cmp
mov
mov
mov
jp
xor
lods
clc
out
add
fdivs
sbb
and
je
dec
pop
jne
ror
rclb
in
adc
sbb
rcrl
pop
jecxz
mov
jae
jb
xor
inc
sbb
mov
shlb
inc
sti
adc
clc
inc
add
enter
lock
pop
inc
xchg
sbb
push
adc
ficoml
xor
add
call
movsb
pop
testl
adc
pop
les
nop
push
out
sub
arpl
testb
xor
pusha
xor
mov
and
adc
mov
lea
int3
fld
cwtl
jo
hlt
fwait
adc
dec
scas
stos
xlat
stos
add
jge
xor
xchg
les
mov
jns
sbb
pusha
int3
gs
sub
and
pop
fsubrl
lods
popf
faddp
ljmp
mov
xchg
test
fidivrl
stc
ja
xbegin
add
jae
cli
fidivl
jo
enter
call
nop
movsb
das
pop
adc
mov
leave
outsb
inc
mov
pop
dec
sbb
add
mov
cmp
sbb
mov
and
dec
enter
aam
add
xlat
mov
lea
mov
xor
cmp
mov
test
and
testb
pop
jge
clc
stos
push
or
shll
lock
and
add
stos
lods
pop
xchg
lret
fisubs
in
xor
aaa
push
inc
jo
shr
jmp
sub
sbbl
adc
push
inc
xchg
inc
and
pushf
pop
fbstp
das
ljmp
adc
shll
sbb
and
inc
test
stos
psubb
cs
mov
rcl
imul
xor
and
or
movsb
sub
add
jb
xchg
repnz
test
add
mov
or
cwtl
or
test
add
push
rorl
div
mov
or
subl
andl
mov
or
inc
arpl
movsb
jae
add
data16
sti
add
loope
and
ja
popf
adc
push
sub
sbb
jmp
xchg
cmpsl
in
cmp
lods
pop
dec
out
pushf
jo
and
pushf
aaa
iret
stc
test
mov
sub
nop
ds
psraw
loopne
jae
das
mov
mov
adcb
mov
fs
enter
shlb
push
and
sbb
and
add
sbb
mov
mov
call
out
lcall
sub
xchg
inc
test
pop
sti
add
push
outsl
faddl
subl
lods
outsb
push
mov
inc
inc
mov
jp
sbb
add
cmp
loopne
jbe
mov
subl
loop
jl
xchg
out
mov
pusha
sbb
outsl
inc
sbb
insl
cmp
and
xchg
je
jns
shrb
ficoml
xchg
mov
ja
pop
loop
or
and
fildl
pop
pop
scas
movsb
jns
jecxz
push
or
imul
cmp
rcl
pop
or
js
loop
cmp
test
add
movsl
inc
shrl
jle
and
fs
mov
jb
pop
mov
loop
xor
jne
xchg
lock
add
out
sub
sbb
add
xchg
dec
pop
insb
in
and
rolb
into
sahf
jno
or
mov
test
rcrb
and
sbb
or
and
mov
mov
repnz
mov
rcll
cltd
movsl
aad
imul
dec
outsb
dec
js
loopne
push
or
and
scas
push
pop
jns
or
or
test
ja
popl
add
fisttpl
shlb
sub
imul
popa
ja
mov
inc
repnz
notl
rorl
push
lcall
andl
mov
mov
ljmp
inc
jp
push
rcrb
test
and
dec
and
xchg
fadds
or
fisubs
jl
add
mov
and
or
push
js,pt
call
mul
je
and
mov
push
in
in
rolb
xor
hlt
push
cwtl
or
adc
or
push
faddl
ret
out
data16
sub
fldcw
divb
push
cmpb
rclb
cmp
and
cmp
or
out
in
add
pop
dec
shlb
sub
add
add
fiaddl
imul
sbb
inc
orl
inc
cwtl
test
imul
adc
pop
fsubr
xor
jae
mov
mov
xchg
sbbb
inc
shufps
xchg
xchg
mov
fistpll
pop
push
push
push
mov
mov
xor
add
pop
icebp
hlt
pop
xor
das
test
flds
ret
movsl
sarb
inc
jo
leave
pushf
cmp
test
xchg
imul
ror
cmp
ljmp
and
add
push
pop
sbb
adc
testl
cmp
dec
fs
les
add
imul
and
add
mov
jmp
add
xchg
jp
je
addb
pop
mov
cmp
sbb
pop
js
hlt
adc
adc
adc
add
repz
clc
lock
mov
ret
cmp
leave
push
add
push
and
xlat
enter
loope
jl
imull
out
loopne
int
xor
or
adc
test
int3
es
ds
int3
sbb
jmp
out
mov
or
and
aam
adc
andb
add
repnz
enter
jle
adc
fadds
fcomps
mov
sahf
adc
sbb
inc
jecxz
pushf
mov
xorb
addr16
insb
jmp
pop
add
lea
mov
or
mov
or
testl
xor
aad
sbb
cmpsl
inc
test
ret
and
arpl
add
push
mov
and
push
movsb
inc
mov
test
or
repz
adcb
xlat
addl
and
jle
or
and
outsl
xchg
or
divb
jo
push
ljmp
mull
stos
out
stos
js
xorb
pop
pop
sbb
mov
mov
imul
mov
push
in
lret
add
jae
pop
sub
mov
or
push
aas
xchg
pop
cmc
add
imul
pop
loopne
loope
scas
mov
jg
and
daa
in
inc
enter
shrb
dec
rclb
out
add
push
lret
add
jmp
xchg
in
add
mov
mov
lods
loopnew
mov
aas
jge
mov
or
and
negb
out
dec
pop
mov
inc
stos
pop
jp
sub
nop
mov
loopne
adc
jmp
push
rorb
or
cwtl
test
mov
aam
sahf
addb
push
cmpsb
xchg
add
mov
inc
inc
mov
push
ret
ljmp
stos
and
das
adc
jge
ss
cmp
aam
out
mov
push
nop
les
xchg
mov
lcall
and
ja
inc
testb
sbb
pop
popf
pop
sbb
inc
sahf
pop
cmp
push
add
movsl
and
add
orl
cmp
and
xor
test
inc
pop
stos
fstps
loopne
lcall
mov
sbb
andb
sub
add
jmp
adc
orb
int3
dec
ficoml
ja
xchg
adc
cmp
push
xor
lahf
and
pushf
jb
xor
xor
mov
mov
mov
push
aas
repnz
add
mov
inc
add
ret
pop
fidivl
and
leave
testb
cmp
adc
push
jg
xchg
sub
xchg
sti
aaa
push
cld
jno
or
clc
jge
add
push
mov
or
cmp
push
les
inc
add
insb
sub
movsl
incb
cld
or
mov
std
add
and
push
adc
cmp
cmc
push
inc
nop
es
mov
repz
fldcw
dec
lea
pusha
aam
mov
mov
add
lea
push
pop
scas
adc
cmc
inc
rcll
mov
add
enter
jno
add
inc
jbe
shll
push
call
inc
lods
sbb
sbbb
or
xor
push
pusha
cmp
scas
and
aaa
pop
jo
xor
daa
sub
mov
and
rol
roll
xchg
shrl
mov
pusha
push
mov
mov
movsb
or
les
cmp
inc
pusha
sbb
shl
push
sarb
mov
repz
inc
shrb
add
arpl
pop
mov
mov
aad
fsts
dec
add
ret
lret
insl
xchg
repnz
and
and
bound
rorb
pop
ss
mov
and
or
cmc
mov
xor
sbb
dec
pop
cmp
push
and
xor
scas
cmp
fnstenv
sub
test
in
pusha
adc
popf
into
sbb
shll
stos
adc
loopne
cli
add
mov
xchg
xchg
dec
mov
xor
cwtl
pusha
movsb
ds
ret
sub
arpl
repnz
ljmp
push
sub
repnz
mov
out
mov
test
and
push
push
pop
jae
mov
call
mov
das
jecxz
add
aaa
mov
add
xor
jmp
xchg
insb
xchg
or
and
add
rolb
popf
je
dec
andl
or
cltd
mov
push
xchg
loop
xor
add
cmpsb
or
pop
popf
jl
or
mov
mov
xchg
incl
aas
add
sti
pop
arpl
xchg
push
test
dec
and
push
xchg
xchg
test
leave
test
xorl
dec
in
jns,pt
xor
sbbb
test
cmp
out
add
cld
rcl
push
sbb
or
jmp
add
and
cs
cmp
pusha
push
jne
xor
and
sub
or
fmul
mov
sub
sub
add
gs
cli
popf
faddl
jns
or
je
adc
dec
test
leave
jl
dec
cmp
lcall
add
sbb
push
and
pusha
add
dec
mov
push
xor
push
shr
mov
cmp
fsubl
or
imulb
add
popa
call
movsb
cmp
xchg
add
sub
mov
test
movsl
mul
test
cmp
gs
fs
dec
jno
cwtl
ret
xor
daa
adc
mov
add
inc
incl
jae
dec
sub
pop
jmp
into
sbb
xor
shlb
jmp
xor
add
stos
roll
les
out
xor
sub
sub
addl
and
aam
fwait
lea
pusha
pop
bound
or
xor
inc
cltd
dec
repnz
shll
cmp
sbbl
or
push
mov
jl
sub
cmovns
test
sbb
jb
stc
rorl
imul
adc
push
add
daa
sub
pop
pop
stos
fsts
mov
sbb
test
into
shrl
dec
enter
mov
cmpb
fdiv
jle
inc
push
adc
cmc
aam
mov
scas
and
jge
sub
mov
adc
sub
xchg
hlt
sub
aas
js
pop
adc
stos
in
add
lahf
shlb
or
roll
repz
adc
cmp
xchg
les
jns
sub
pop
lock
mov
inc
pop
push
aam
test
push
popa
inc
out
add
adc
add
shrl
mov
ror
sbb
sarb
repz
adc
call
xchg
shlb
lods
and
pop
sbb
mov
pusha
push
sbbl
popf
xlat
mov
pop
mov
cmp
jge
adc
add
mov
jo
mov
add
add
mov
cmp
popf
lret
jl
call
jne
sbb
sbb
in
xchg
jns
jb
or
and
add
xchg
shrb
add
mov
jg
push
pop
jne
and
inc
jmp
pop
jae
fmull
rorb
jae
xlat
or
js
testl
or
push
adc
ficoml
cltd
loopne
dec
adc
fisubs
xchg
or
inc
fcoml
or
mov
jecxz
pop
movl
jecxz
cmc
lock
xor
test
imul
inc
call
int3
mov
cmp
bound
mov
lea
cmp
mov
lods
icebp
mov
pop
and
orb
and
arpl
jmp
push
mov
inc
dec
pop
clc
sbb
sub
roll
repz
and
pop
adc
fsubs
iret
pusha
roll
aad
xor
add
rcrb
cs
call
sub
fisubs
mov
out
sbb
or
cmpsb
cmp
fistl
iret
sbb
sbb
lahf
popf
inc
push
sbb
or
scas
pop
iret
in
cmpb
jle
mov
stos
pushf
or
sti
in
andb
sbb
ljmp
daa
stos
pop
xchg
or
sub
test
cs
pop
dec
test
sub
cld
ret
into
sbb
mov
stos
outsl
cmpsl
shlb
ret
pop
xor
cli
sbb
pop
sbb
test
xor
aas
ret
adc
or
sbb
scas
and
rcrl
cmp
sbb
mov
orl
rorb
add
xor
mov
pop
adc
leave
call
mov
sub
sbb
cli
add
cmp
pop
add
push
push
push
lea
cmp
in
loopne
push
jmp
jno
mov
and
bswap
xchg
cmp
filds
pusha
iret
xor
sbb
stc
add
repnz
cmp
pop
add
scas
jne
jecxz
int
mov
je
pusha
int
xor
or
shlb
inc
push
mov
dec
xchg
ret
or
mov
aaa
mov
jp
add
add
aas
out
cld
and
dec
mov
mov
test
mov
adcb
enter
les
mov
or
andl
fld
enter
adc
outsb
clc
mov
popa
mov
cs
add
loopne
dec
rcrl
dec
push
and
in
ds
cwtl
test
mov
not
cmpsb
int3
les
inc
loope
idivl
fs
or
pop
pop
sbb
mov
xor
neg
and
jmp
not
lds
cmpsb
xor
scas
and
pop
mov
sbb
cmp
fdiv
rorb
inc
pusha
push
xchg
in
mov
pusha
sbb
iret
fldl
add
xchg
fimuls
add
inc
pop
mov
out
push
loopne
mov
mov
sbb
fs
mov
adc
loopne
icebp
mov
leave
inc
nop
xchg
loopne
rolb
xchg
fwait
pop
scas
and
stos
test
insl
add
sahf
sbb
or
dec
repnz
scas
mov
push
or
sbb
adc
shl
fildl
jg
loop
jmp
and
pop
sub
sbbl
xchg
add
dec
rcrb
lret
pop
dec
ret
xor
aam
adc
mov
faddl
dec
lret
jb
add
rcrb
xchg
mov
popa
dec
lahf
jne
or
xor
push
add
or
sbbl
push
cld
jecxz
adc
push
jno
shl
aad
mov
add
jno
cltd
hlt
sbb
movsb
add
cmpsb
add
adc
sub
mov
addb
adc
cmp
rcl
lret
ret
or
pusha
adc
test
mov
push
sbb
jp
dec
clc
lahf
sub
push
movsb
sbbb
inc
push
cs
andb
adc
push
sub
sbb
jbe
inc
add
aas
push
mov
and
add
mov
stc
loopne
xchg
sbb
nop
mov
andb
add
test
mov
mov
or
fldenv
in
add
idivl
inc
pusha
mov
ds
je
add
xchg
or
lcall
das
cmpsl
fwait
add
aas
repz
add
cmpsb
mov
mov
test
jae
push
pop
adc
cmp
jnp
sub
jmp
fistpl
insl
sbb
in
dec
or
testb
jecxz
jae
imul
fs
push
frstor
dec
xlat
and
dec
mov
out
add
aam
js
push
lock
test
sbb
dec
pop
inc
add
add
pop
leave
dec
shll
xor
sbb
cwtl
add
pop
push
add
lahf
push
lret
outsb
cmp
xor
sbb
pop
or
push
test
outsl
dec
enter
add
bound
cli
xlat
movsb
and
in
xor
or
aaa
mulb
xchg
xorb
cmp
xor
dec
into
mov
mov
pushf
subb
add
pop
shrb
adc
jne
andl
add
sbbb
bound
shlb
adc
rorb
aas
xchg
xor
test
int3
shl
add
loope
jo
into
fiadds
bound
push
dec
cwtl
and
mov
pop
inc
sbb
adc
mov
add
repz
pop
cmpsb
mov
or
movsl
adcb
or
sub
enter
fisubl
xor
xchg
js
insl
ret
repnz
mov
hlt
fldl
mov
lcall
add
shl
sbb
lahf
jp
push
js
inc
adc
dec
add
add
mov
lahf
dec
fldl
cmpsb
aas
mov
jl
jo
adc
int3
pop
xor
notl
xlat
cmpsb
fmull
orb
adc
jmp
inc
nop
fbstp
pusha
dec
aas
aad
inc
and
add
pop
dec
sub
or
cmp
dec
adc
pop
or
cwtl
dec
adc
and
add
scas
and
push
jmp
jbe
add
or
gs
adcl
scas
movsl
push
cmp
push
idivl
fisubl
add
divl
arpl
add
insl
mov
fdivrl
sbb
mov
mov
test
enter
loopne
add
sub
dec
sarl
and
add
fcoml
adc
xchg
mov
aas
add
add
jmp
push
hlt
daa
mov
pop
fmulp
cmpsl
fsts
popa
push
rcrb
jecxz
addl
mov
lods
pcmpgtd
add
inc
outsb
xchg
xor
int
inc
add
aaa
mov
mov
cwtl
adc
xor
jne
ret
pop
mov
fists
aas
lods
add
aad
mov
pop
and
add
pop
cmp
cs
outsb
rcrl
add
sub
xchg
sbb
arpl
xchg
dec
add
and
add
cmpsl
xchg
ljmp
mov
inc
ror
pop
scas
inc
xchg
pop
sbb
xor
mov
mov
movhlps
pop
xor
mov
enter
push
bswap
add
xor
add
lahf
add
repnz
xlat
lret
es
cmp
mov
cwtl
rolb
into
stos
add
int3
xchg
cmp
dec
lret
das
mov
popf
aad
mov
push
and
add
inc
mov
out
bound
sbb
add
jecxz
and
add
add
push
mov
mov
in
jge
inc
add
shll
sarl
xor
and
dec
fs
clc
bound
add
mov
icebp
mov
clc
addl
inc
mov
cmpb
test
mov
dec
xor
stos
sbbb
pop
ljmp
adc
mov
popf
mov
pop
cwtl
adc
das
pop
test
and
inc
add
popl
fs
or
add
in
mov
popf
mov
das
popa
adc
push
mov
push
mov
daa
push
lock
push
push
gs
add
xchg
enter
adc
mov
sub
aaa
mov
push
das
in
adc
push
cmp
xchg
out
popa
pop
test
adc
xchg
enter
xlat
add
or
in
das
scas
add
cmpsb
imul
scas
add
pop
pop
std
sbb
xchg
int3
aas
loop
mov
out
pushf
pop
in
fs
add
clc
and
sub
sbb
mov
lods
sarl
pusha
in
adc
push
mov
lahf
lods
push
adc
sbb
or
xor
mov
xchg
sbb
pusha
fs
pusha
mov
jmp
shrl
std
add
sbb
mov
loopne
or
xchg
adcb
push
js
sti
clc
call
adcl
adc
rcrl
push
imul
jno
nop
into
loopne
inc
pusha
sbb
iret
add
clc
test
cmp
sbb
mov
add
sub
push
mov
pusha
mov
add
shl
pop
cmpsl
loop
jo
xor
daa
ret
cli
mov
out
cmp
dec
nop
das
or
or
push
mov
mov
outsb
movnti
and
enter
add
cwtl
fs
sub
gs
pusha
lret
pop
push
cmc
stos
push
xor
cmp
insb
adc
jge
cli
sti
testb
subb
es
sub
cli
out
repnz
mov
fiaddl
jl
in
sbb
or
sub
fmul
clc
add
sbb
add
add
mov
mov
push
xor
pop
xor
les
adc
adc
jl
xor
xchg
sbbb
clc
inc
cmp
cld
xchg
sbb
scas
out
rclb
and
and
out
fs
pusha
xchg
cwtl
pop
les
and
push
in
add
push
test
push
cmp
test
add
add
and
xchg
pop
sub
test
jb
mov
shlb
pop
fs
sbb
mov
inc
inc
loopne
push
inc
cli
mov
sub
call
gs
push
sub
test
xor
mov
fisubrs
xor
scas
mov
add
xchg
xor
lret
pop
cmp
jmp
jbe
sub
ljmp
je
lcall
mov
test
add
lods
adc
or
push
add
pop
addl
xor
mov
push
fwait
sub
mov
inc
mov
call
cld
shll
mov
xchg
in
loopne
mov
insb
dec
add
push
lock
sarb
out
pop
mov
imul
mov
sub
fs
lret
and
hlt
je
loopne
push
testl
mov
sbb
mov
inc
mov
or
mov
mov
cld
call
jbe
dec
js
aam
pop
ret
add
add
cmp
divl
jp
push
fucomp
cmpl
jae
pop
mov
xor
add
xor
xor
sub
jo
cmpsl
xorl
pop
aaa
cpuid
pop
xchg
shlb
push
add
jnp
xor
adc
lods
aas
jbe
dec
and
test
mov
mov
mov
ja
or
fidivs
fildl
ds
cmpsb
sbb
push
dec
push
xor
incl
mov
xchg
cmpsl
in
push
sub
or
sub
mov
mov
addb
push
add
dec
in
mov
or
inc
sbbb
dec
sti
and
aaa
subb
sub
jo
mov
dec
mov
dec
and
cwtl
into
add
push
add
mov
add
and
pop
mov
rcrl
pop
loope
and
lods
pop
pop
jl
xchg
mov
add
movaps
jmp
ret
andb
push
repnz
sub
int3
mov
and
and
and
repnz
outsl
into
fists
mov
sbb
int
push
roll
sbb
and
or
jo
mov
sbb
jb
add
add
push
or
call
aam
add
sbb
jp
mov
dec
ds
and
add
or
push
das
xchg
mov
ss
imul
xlat
sbb
subb
jle
sbb
cmp
add
push
fdivr
test
jb
add
push
movsb
jbe
sbb
popa
mov
fimull
and
or
xchg
rcll
dec
push
dec
aam
push
mov
lds
fdivrs
dec
stos
add
jne
movsl
aad
es
xor
int
dec
cs
mov
add
mov
insb
out
inc
push
pusha
mov
mov
and
rorl
cli
lds
xor
pop
add
dec
xchg
xor
out
pop
dec
add
push
je
sub
and
repnz
inc
dec
movl
iret
jp
jo
adc
jle
lret
inc
mov
add
push
jne
jg
sbb
or
cmc
xchg
cmp
out
mov
test
push
mov
or
mov
fsubl
cmp
and
push
arpl
clc
ficoms
xor
dec
pop
mov
sbbb
add
lock
and
lahf
and
sbb
sar
aad
or
sbb
lret
js
mov
lcall
cmpb
sbb
cmp
flds
pop
sbb
sarl
add
popa
sbb
pop
or
das
insb
pop
and
mov
and
xor
fsubrs
in
inc
jle
ret
mov
jo
call
test
in
pusha
sub
mov
clc
mov
inc
test
test
stos
push
in
or
xor
aad
les
push
add
fimuls
repnz
mov
mov
leave
mov
scas
inc
sbb
dec
inc
mov
out
mov
inc
xor
aad
sbb
add
mov
ljmp
enter
sub
cwtl
mov
or
inc
shll
adc
insb
lcall
dec
iret
lock
test
add
pop
adc
les
pop
or
sub
pop
pop
and
into
cmpsl
jmp
cld
mov
pushf
call
ret
nop
rorl
cltd
cmp
out
add
inc
pop
pop
mov
pop
inc
popf
add
scas
or
dec
add
xor
dec
and
push
cli
push
sbb
cld
or
inc
sbb
add
dec
sbb
adc
sub
sbb
inc
inc
and
cs
das
and
fldl
enter
fmul
mov
cmp
inc
sarl
mov
xor
insl
inc
jl
xchg
ret
sub
sub
adc
dec
cltd
cld
xchg
add
incl
xor
adc
cltd
jp
cmp
jo
xchg
mov
adc
pop
pop
in
dec
and
jle
scas
add
jno
nop
in
adc
lret
loop
mov
sub
ret
inc
push
enter
or
pop
aas
dec
mov
inc
movsl
pusha
mov
pop
lods
push
mov
jp
xchg
cmp
pushf
lret
mov
add
mov
scas
enter
popa
fwait
jb
add
repnz
jmp
push
add
sbb
push
adcb
dec
sub
and
enter
or
popa
cmpxchg
enter
int
shlb
shlb
les
jno
sbb
cmp
mov
imull
sbb
pop
adc
mov
inc
in
outsl
and
pop
mov
loopne
mov
lods
fcmovnbe
sbbb
mov
add
sub
push
lret
ficoms
xchg
pop
in
mov
leave
stc
or
or
and
jae
aas
in
lret
rep
add
ret
repz
frstor
and
aam
fiadds
loop
movsb
movsl
mov
jbe
mov
mov
jnp
lds
add
and
sbb
addr16
cld
and
repz
push
or
inc
insl
mov
les
mov
adc
mov
inc
xor
adc
fs
ja
or
pop
add
add
xchg
push
and
lods
fs
pusha
xor
add
loop
aam
jl
xor
in
cwtl
int3
mov
fadd
fwait
popa
in
dec
ret
rcrb
cli
and
jmp
adc
sub
mov
imul
push
out
andb
jns
add
mov
dec
add
pop
mov
or
cwtl
mov
das
xorb
in
adc
int3
aam
push
jae
xor
cwtl
sbbl
jnp
jo
leave
dec
adc
ret
mov
enter
mov
mov
and
in
dec
jns
mov
sub
nop
push
call
das
sbb
fdivr
xor
add
mov
jae
mov
add
rol
xlat
xchg
popf
cmp
std
daa
cmp
adc
xor
push
mov
jl
inc
adc
roll
add
into
and
sbb
lahf
movl
int3
insb
or
push
sub
repnz
and
js
je
jns
orl
jo
xchg
add
lahf
jp
lahf
add
shll
mov
cmp
pop
rcl
repnz
adc
hlt
testb
js
xchg
loope
and
inc
xor
mov
in
push
xor
and
add
xchg
mov
test
shlb
push
xchg
je
push
ljmp
mov
jbe
mov
js
push
add
mov
add
adc
cmpsl
shrb
dec
sub
add
lods
pushf
andb
pop
push
push
cmp
pop
in
mov
pop
add
dec
call
nop
fcompl
adc
stos
xchg
add
pop
orl
xor
ret
mov
lcall
push
xchg
xchg
mov
mov
xlat
aaa
xor
scas
push
std
jecxz
inc
pop
inc
popa
repnz
rclb
mov
es
xor
push
jb
aas
int
mov
mov
adc
jnp
add
push
jecxz
ficoml
xlat
int3
cmp
sub
and
xchg
sbb
pop
jnp
sahf
adc
add
nop
inc
sbb
jb
in
xchg
pop
andl
es
in
pusha
jb
mov
pop
sarl
mov
outsl
cmp
push
les
cwtl
dec
nop
cmp
loopne
cmp
add
fbstp
int
push
or
nop
dec
lret
jl
or
test
pop
lahf
sub
jge
cs
mov
and
gs
inc
movsl
cmc
lret
fsubl
aas
dec
rcll
cmp
stos
jnp
jp
lods
pop
cwtl
mov
dec
ljmp
and
xor
arpl
dec
mov
icebp
and
test
pop
pop
fldenv
or
mov
out
icebp
lds
insl
mov
xchg
push
xchg
ss
mov
hlt
pop
add
stos
insl
sub
mov
lahf
sbb
in
fs
arpl
mov
cmp
test
inc
push
pop
pop
sbb
cltd
mov
jo
sbb
or
mov
insl
mov
adc
pop
push
aas
loopne
dec
add
jmp
stos
imul
enter
jl
or
pusha
and
je
add
outsb
inc
js
mov
jns
rcrb
outsl
movsl
xor
testb
jns
sbb
jnp
inc
fsubrs
shlb
sbb
xchg
loopne
ret
dec
sub
sub
jp
stos
cmpsl
nop
add
mov
fwait
popf
sub
pop
nop
jo
pop
popf
sbb
xor
or
arpl
or
inc
add
cmpl
loope
ljmp
sbb
add
xchg
or
add
dec
add
loope
jno
sbb
push
add
loope
mov
imul
add
or
in
pop
inc
push
add
ds
fwait
dec
ljmp
scas
dec
add
sub
outsl
xchg
add
into
xchg
inc
mov
in
mov
nop
sbb
cmp
mov
adc
lret
insl
lock
add
xchg
add
add
int3
mov
inc
push
fidivs
xor
aam
jne
mov
sub
imul
aam
iret
jno
add
sub
or
adc
pusha
loope
add
aas
mov
int3
outsb
adc
add
inc
cmpsw
sbb
xchg
ja
xor
lret
xchg
pop
je
fcmovnb
repz
cmp
jl
or
js
cmc
mov
cmpsb
mov
pop
enter
pop
xchg
pop
insb
cli
dec
out
mov
jbe
pop
inc
or
aas
pop
push
push
call
cmpsl
enter
push
sub
mov
lcall
mov
and
xchg
cmp
repnz
adc
sub
push
add
sbb
cmp
adc
repnz
les
enter
fdivp
xor
mov
xor
pop
cmp
xor
faddl
pusha
sbb
inc
add
stos
loope
je
sbb
cltd
jmp
mov
jo
and
outsb
sub
int
inc
xor
xor
inc
mov
cmp
fstl
adcb
mov
decb
and
loopne
hlt
mov
mov
cld
or
scas
mov
lods
add
sub
aaa
sub
sub
je
xor
mov
lods
or
pop
fmul
dec
aas
nop
xchg
addr16
push
sub
imul
xchg
nop
js
ret
add
mov
inc
cmpsl
call
add
jbe
xor
mov
mov
insb
mov
xor
test
lock
stc
jecxz
pop
mov
shll
pop
push
jbe
sbb
ret
xor
mov
add
call
cmp
or
push
add
xor
shll
add
roll
xchg
cmpsb
scas
int3
mov
sbb
add
dec
lds
dec
xorl
lock
push
fmull
push
enter
add
xchg
jmp
mov
add
add
mov
mov
test
push
dec
sbb
mov
inc
fcmovnbe
pop
pushf
lock
mov
icebp
enter
jle
adc
fdivl
stos
mov
jl
aas
jbe
sub
sbb
cmpb
push
and
rcl
and
sahf
push
mov
or
aad
add
pop
aam
fdivrl
dec
fstpl
xchg
movb
in
adc
pop
leave
and
jge
lahf
test
or
sub
loop
or
or
rolb
pushf
sub
in
pop
xor
mov
es
mov
push
pop
cmpsb
pusha
and
add
or
pop
insb
ljmp
jecxz
xchg
pusha
jnp
lahf
add
std
adc
push
repnz
push
jns
fisttps
dec
testb
mov
and
inc
xchg
lods
in
nop
in
xor
js
adc
mov
cmp
jae
mov
inc
sbb
xchg
mov
shr
pop
or
fcompl
imul
inc
and
pop
adc
push
cmp
and
loop
push
push
and
aas
cmpsb
dec
mov
jp
and
fistpll
push
sti
add
lds
inc
add
dec
jo
cmpsb
add
mov
test
cmp
popa
mov
pop
pop
cmpsl
dec
test
clc
add
xchg
jg
cmp
push
xor
flds
sub
xor
mov
pop
mov
cmc
mov
push
and
add
enter
call
xor
jl
js
or
jmp
cmp
out
add
into
and
xor
mov
or
fnstsw
mov
xchg
mulb
mov
test
loop
jb
mov
mov
ss
and
ror
adc
add
loopne
insl
sbb
xchg
inc
jo
stc
cld
mov
jle
fcom
popf
sbb
stos
mov
adc
dec
jbe
imul
int3
aas
in
ret
je
iret
es
sub
xchg
mov
xchg
or
mov
bound
test
pusha
sbb
or
nop
mov
push
stos
mov
or
sub
sbb
mov
dec
ret
ret
sbb
pop
movb
pusha
xor
loopne
aam
pusha
call
or
sub
inc
inc
clc
xchg
pop
sbb
xor
fdivrl
add
loop
cmp
adc
enter
stc
loopne
stos
mov
jne
add
pop
inc
adc
dec
mov
pop
enter
gs
cmp
dec
mov
aad
cmp
ljmp
adc
fildl
add
and
pop
jns
mov
mov
cmp
mov
inc
insb
cmp
mov
mov
or
xor
imul
push
push
pop
inc
push
jno
repz
js
inc
les
bound
add
stos
jo,pn
push
pop
pop
insb
pop
xor
pop
cmpsb
shll
jp
pop
or
mov
sbb
shlb
and
add
jnp
sbb
pushf
imul
mov
and
add
push
shrl
lahf
inc
cld
les
pusha
sbb
js
pushf
xor
shlb
xor
out
mull
pop
fs
push
fstp
adc
push
jne
scas
cmp
push
adc
hlt
bound
mov
and
xor
js
cmpsb
mov
sbb
jl
repz
loopne
test
xor
xchg
dec
push
mov
test
loope
addb
testb
inc
mov
cmpb
xchg
mov
sub
push
icebp
jb
repnz
or
hlt
jmp
mov
jo
mov
adc
loopne
test
dec
add
lret
pop
dec
aas
clc
stos
sahf
pop
mov
ds
ret
jne
cmp
and
add
xchg
sub
add
je
sbb
or
mov
pop
and
or
sbb
dec
adc
add
fsts
mov
pop
sub
icebp
dec
add
cmp
popf
ret
pop
movsb
adc
sub
pusha
xchg
dec
cmp
cmp
adc
repnz
sbb
cmp
fwait
nop
cmpb
test
ja
cld
and
bound
sbb
icebp
sbb
and
sub
mov
out
mov
mov
test
add
add
adc
inc
fcomp
add
adc
mov
and
enter
pop
fisttps
xor
and
repnz
inc
xor
add
adc
add
stos
test
out
add
fdiv
outsb
fsubs
mov
enter
mov
inc
pop
or
push
cmpsb
pop
jg
sbb
mov
mov
mov
pop
inc
movsb
sbb
jae
xor
mov
stos
ja
mov
xor
jl,pn
enter
cmp
jge
pop
enter
into
xlat
jecxz
dec
jae
fadds
aas
mov
jae
outsb
les
cmp
rolb
pop
pop
hlt
insb
fiadds
and
fcompl
mov
adc
xor
out
dec
adcb
push
je
add
sub
daa
jo
push
adc
test
fisubl
xchg
loop
ss
inc
pop
pop
add
jg
mov
shll
ret
orb
and
mov
adc
or
pop
sub
push
rorb
pop
je
pop
mov
and
ljmp
repz
push
stc
xchg
es
fnsave
test
dec
fdivrl
jg
bound
jl
sub
divb
add
inc
cmp
clc
xor
push
xchg
lods
sub
shll
mov
call
loopne
fwait
jecxz
push
test
mov
js,pt
xchg
mov
add
adc
sub
or
and
nop
lcall
pusha
jg
incb
cmpsl
mov
in
in
add
test
pusha
dec
testb
push
cld
mov
sbb
movsb
and
sbb
cmp
mov
repz
bt
jno
outsb
mov
or
mov
sbb
add
mov
into
cltd
sub
clc
scas
jns
les
stos
pop
add
popf
lahf
inc
adc
ret
cli
lock
and
imul
stos
mov
or
adc
mov
testb
loope
int
xchg
enter
mov
into
cmpsl
sbb
xor
in
add
fs
and
push
orb
add
sbb
call
lods
add
xor
xchg
lods
xchg
add
mov
mov
shr
push
mov
cld
aam
sbb
mov
jg
mov
adc
jne
std
or
loop
imul
rclb
or
lock
mov
rclb
mov
stos
mov
mov
mov
scas
pop
fmull
mov
lods
in
out
and
lock
add
outsb
loope
add
push
shll
mov
adc
pop
stos
into
adc
cmp
call
inc
pop
out
gs
lods
mov
aas
mov
leave
jp
add
popa
jno
cmp
imul
das
lret
les
rcll
and
movsb
inc
pop
inc
mov
ret
sub
mov
push
add
into
mov
or
imul
aad
pop
loopne
pop
mov
push
icebp
mov
roll
xchg
leave
jns
add
mov
inc
test
mov
sbb
mov
fsubrl
mov
xlat
cmc
dec
or
enter
cwtl
or
or
sarb
pop
fs
add
adc
inc
faddl
out
or
push
ljmp
add
mov
cmp
jmp
sub
push
fcoml
xadd
fs
pop
inc
push
dec
cmp
and
add
loopne
dec
les
pop
lock
decb
and
dec
dec
flds
mov
lock
inc
sarl
and
or
push
jg
cmp
add
xchg
push
stos
inc
shlb
xor
in
mov
loopne
jmp
xor
jne
arpl
mov
xor
cltd
test
jnp
pusha
or
pop
outsl
enter
stc
iret
popa
xor
scas
pop
stos
add
cmpsb
sub
stos
into
xlat
mov
jmp
adc
xchg
add
outsb
jp
cmpsb
xchg
xor
mov
loopne
lock
add
or
fs
inc
push
jne
bound
mov
add
pop
mov
and
ret
call
dec
dec
mov
enter
pusha
aam
fxch
lret
and
dec
js
or
lahf
and
inc
xor
push
js
call
add
lahf
add
adc
out
mov
das
and
lahf
push
cmp
das
dec
inc
and
rcr
shrb
jo
inc
push
shll
dec
shr
xchg
fbstp
mov
mov
scas
mov
pop
ljmp
xor
push
stc
sub
dec
jae
and
push
cwtl
or
ja
test
femms
pop
xor
cltd
jle
std
sub
shrl
and
mov
xchg
xor
xchg
mov
cwtl
sub
lea
stc
pop
mov
es
add
jno
faddl
pop
cmp
mov
and
push
jge
in
push
sbb
push
shll
std
ret
inc
add
popa
icebp
add
or
pop
cmc
cmp
add
insl
mov
add
sub
push
das
xchg
mov
add
pusha
jmp
jp
subb
inc
out
push
push
roll
pop
pop
mov
popa
lret
pusha
jne
clc
xchg
push
push
and
nop
xchg
push
mov
adcb
pop
mov
pop
or
imul
out
out
loopne
pop
rolb
lods
je
mov
pop
or
mov
add
imul
rolb
sub
add
cmp
add
shrb
mov
add
call
cmc
js
scas
push
cmp
sbb
dec
outsl
scas
pop
jne
xchg
je
sbb
rolb
push
push
sar
test
movsb
out
test
insb
lds
shl
fwait
or
test
sbb
punpcklbw
dec
mov
sub
rcrl
add
mov
sub
lea
idiv
sub
sar
jns
loopne
movd
push
or
outsl
add
andl
out
or
xchg
push
xor
and
add
mov
inc
adc
adc
adc
add
mov
lods
fldt
in
mov
xlat
fisubs
xor
enter
test
dec
dec
ds
mov
add
pusha
lret
lds
mov
lret
shrl
sbb
shlb
or
dec
sbb
jl
add
std
or
je
push
cli
cmpl
mov
mov
xchg
mov
xor
pop
cmp
adc
dec
enter
test
mov
add
push
inc
test
adc
adc
adc
sbb
pop
dec
and
push
lock
and
jb,pn
out
mov
jo
out
push
es
jno
cmp
lret
jg
popa
and
mov
rorl
jl
sbb
stos
dec
lods
repz
push
movsb
cwtl
add
inc
sub
ret
xlat
sbb
cmp
aam
mov
mov
push
inc
or
adc
inc
add
cmp
mov
adc
ffreep
sub
mov
add
test
je
pop
daa
mov
in
scas
sbb
ljmp
pop
jb
dec
mov
sti
nop
dec
pop
in
mov
inc
push
pop
push
cmc
and
fiaddl
in
fldl2e
aaa
stc
daa
mov
ja
mov
mov
xor
sbb
add
and
mov
dec
and
cmc
andl
add
fdivrs
in
add
cmp
dec
mov
out
jmp
mov
sahf
in
xchg
sub
adc
mov
movzbl
popf
jne
pop
xchg
stc
and
mov
test
sub
adcb
sbb
mov
mov
cmpsb
sbb
sbb
loope
out
mov
je
aaa
pop
mov
jno
clc
and
call
sbb
imul
out
jnp
inc
lcall
sub
add
cld
mov
sbb
data16
mul
push
dec
inc
pusha
ja
mov
sub
adc
jp
or
movsb
or
push
mov
add
cmp
daa
xor
icebp
les
mov
add
outsl
sbb
push
push
add
jmp
dec
adc
cmp
insl
ds
daa
je
pop
insl
jnp
fsubrl
add
leave
cwtl
lods
mov
push
add
mov
test
sbb
mov
or
aaa
cmp
jae
cmp
repz
mov
repnz
loopew
adc
mov
lret
inc
and
cltd
and
fsubl
stc
pop
push
push
movswl
mov
mov
loope
xor
xchg
xchg
xchg
divl
fldt
sub
mov
nop
aam
scas
add
ds
pop
mov
jbe
cmp
pop
add
dec
mov
jp
add
sub
test
add
lcall
sahf
mov
cmp
xchg
aad
fwait
imul
es
jne
or
daa
dec
adc
jmp
cmpsb
adc
and
test
movsl
xlat
inc
test
hlt
data16
add
test
data16
dec
jl
stc
and
pop
add
sub
aas
lods
pop
add
rorl
scas
call
icebp
ss
movsb
adc
mov
shr
inc
mov
mov
in
push
pusha
sbb
dec
test
popa
adc
out
ds
fldl
repnz
mov
mov
call
cwtl
add
sbb
mov
stc
shrb
inc
testl
sub
mov
enter
dec
fdivs
es
test
in
xchg
add
into
aam
and
jg
fsub
outsb
or
bound
icebp
push
add
movsl
jle
stos
push
out
pop
jbe
dec
adc
mov
mov
jg
mov
out
mov
les
scas
orb
add
mov
sub
or
dec
cmp
loopne
aad
add
test
sar
in
xor
mov
pusha
mov
arpl
cmp
push
test
and
cmp
popf
cmc
adc
ja
mov
jl
addb
adc
xlat
loope
add
test
adc
fcoml
cli
mov
js
pop
add
je
cmp
mov
fs
loope
or
clc
and
xor
ret
mov
sbb
push
add
testb
cmp
icebp
bound
mov
xchg
pop
idiv
sbb
push
in
sub
js
dec
add
cmp
push
add
xchg
insl
neg
mov
cwtl
or
es
sub
out
adc
jmp
mov
mov
jae
js
pushf
das
jo
adc
xor
in
mov
xor
outsl
cmc
add
repz
pop
cs
inc
and
bound
add
hlt
out
fiaddl
xor
cwtl
pop
sahf
inc
das
sbb
jne
aaa
dec
sarb
pop
inc
pop
insb
outsb
dec
pop
adc
and
popf
sbb
pop
outsb
das
add
xchg
imul
xor
xchg
mov
das
cmpsl
cmp
push
mov
or
add
push
pop
dec
adc
cmpsb
mov
pop
cli
pop
int
leave
push
inc
rcll
stos
push
cld
mov
sub
fisubrl
adc
dec
decl
push
sbb
or
outsb
jnp
insb
les
rclb
sbb
pop
xchg
xchg
sub
mov
and
mov
inc
or
das
adcb
mov
shll
add
in
cmp
pop
iret
or
adc
xlat
cmp
sti
mov
mov
and
js
mov
mov
mov
mov
out
sbb
add
clc
pop
jl
popf
mov
mov
pop
cmpsb
jne
cs
and
push
pop
push
sbb
and
test
loopne
fucomi
filds
mov
cmp
ret
into
mov
das
add
jmp
das
cmp
sub
call
pop
cli
out
add
push
aas
sbb
lahf
add
nop
jno
shlb
hlt
pop
and
adc
sub
pop
dec
cmp
ficomps
mov
sub
pop
add
mov
mov
lahf
hlt
stc
mov
and
inc
pop
lods
call
rcr
mov
stc
mov
xchg
in
sbb
add
std
pop
push
arpl
imul
sub
cli
dec
or
ljmp
jg
and
out
into
int
pusha
sar
pop
push
inc
rcrb
or
jle
dec
in
dec
fistl
cmp
out
pop
xor
pop
mov
pop
inc
mov
add
mov
dec
testl
or
jno
pop
jle
mov
ja
and
or
push
repnz
psraw
sub
popl
imul
mov
mov
test
and
adc
mov
push
imul
fstl
in
mov
rolb
mov
clc
push
test
mov
push
or
fsubrs
add
push
cmp
fsubrl
dec
test
mov
inc
mov
add
test
sub
cmp
mov
xchg
mov
aas
add
in
or
imul
nop
push
or
push
inc
push
outsl
mov
inc
push
jns
adc
insl
sub
jae
imul
les
pop
sbb
jbe
push
add
add
das
mov
mov
adc
cmpsl
sarl
add
pop
jns
mov
dec
pop
xor
xchg
sbb
nop
jge
movswl
popf
ja
xchg
popa
orl
xchg
je
xchg
movsb
push
dec
pop
pop
sub
insb
test
mov
mov
daa
push
dec
aam
mov
cmp
fsubrs
and
flds
cs
sub
and
push
leave
sub
popf
lds
and
and
mov
inc
ficompl
sahf
cmp
pop
hlt
xchg
pop
shll
das
xor
les
jg
mov
insl
faddp
in
addb
push
scas
push
sub
mov
test
dec
add
xchg
das
dec
fdivs
inc
add
adc
dec
push
out
add
push
popa
pop
insl
lret
mov
test
xchg
and
jmp
clc
jns
sub
dec
mov
fisubrl
or
dec
jb
jne
sbb
jne
cs
mov
in
push
sub
jbe
adc
fsubrs
add
outsb
out
push
xchg
int
lret
pop
dec
scas
xchg
ret
mov
sub
adc
add
jmp
mov
sub
xor
into
shlb
imul
add
pop
mov
test
and
stc
xor
out
sahf
fadds
push
call
lods
fildll
js
or
clc
add
cld
and
dec
sub
sub
add
cmpsb
cwtl
mov
loope
dec
adc
xchg
push
je
into
imul
shlb
xchg
outsl
or
lea
fsubs
xor
scas
rclb
inc
outsl
adc
imul
mov
cs
add
les
mov
add
adc
pop
lods
sbb
repz
andl
lds
push
clc
add
mov
sbb
jg
and
dec
dec
mov
cli
in
push
mov
xchg
and
add
sahf
shr
stc
insl
add
fldt
stos
jne
xor
pop
lods
jp
movsb
imul
or
popa
daa
push
repnz
push
les
push
mov
jmp
int
cmp
lods
enter
stos
loopne
jbe
je
or
cwtl
xchg
mov
add
mov
push
pop
mov
es
cmp
pop
dec
push
enter
pop
inc
cwtl
xchg
clc
xchg
stc
mov
mov
subb
popa
dec
nop
outsb
int
out
rclb
add
mov
inc
idivl
and
or
std
sub
push
mov
jbe
cmp
inc
sbb
sbb
mov
xchg
or
add
call
das
cli
imul
mov
pusha
in
inc
add
cli
xor
test
js
pop
popa
xor
and
pop
outsb
cmp
inc
lods
data16
xor
xchg
shl
in
push
add
imul
push
call
xor
mov
cmpl
add
adc
flds
test
inc
add
or
and
scas
mov
adc
or
lock
ficoms
stos
lret
rcrl
push
andl
sub
test
push
mov
ds
pop
loopne
fadds
lcall
pop
lret
jbe
sbb
mov
ficompl
inc
add
test
rclb
dec
or
sahf
cmpsb
sub
mov
jp
nop
adc
fldenv
jns
add
sub
sub
xchg
lcall
mov
dec
xor
sahf
or
push
mov
fs
aam
int3
or
add
int
in
add
sub
dec
rolb
pop
pusha
cwtl
lahf
xorl
or
outsb
mov
mov
outsb
mov
mov
jle
push
icebp
lds
loopne
das
xchg
mov
into
or
lea
mov
lret
mov
or
insb
and
popf
pop
sub
lea
mov
jae
in
pop
fbstp
pop
or
roll
adcl
push
xchg
and
add
xor
ds
mov
push
out
and
cmp
add
xor
lds
add
sub
pop
shll
sarb
sbb
outsb
lcall
mov
and
jg
add
daa
or
lcall
pop
jno
aas
add
cmp
outsb
into
test
add
jo
sub
add
jb
orl
dec
sti
fmull
jge
inc
push
fldt
mov
loop
xor
sub
add
pusha
inc
lods
fs
add
adc
sbb
add
add
shlb
add
mov
add
sub
xor
popa
or
mov
js
dec
xchg
sbb
jo
sbb
pop
mov
jle
test
aaa
popf
mov
and
mov
cmp
inc
lcall
mov
shlb
clc
mov
daa
fisttpl
outsl
mov
icebp
sbb
lcall
pop
push
xor
jne
mov
es
or
jns
push
lods
enter
insl
pop
sub
cmpl
mov
and
jo
popf
push
mov
test
xor
mov
jmp
jb
cltd
stos
adc
add
mov
mov
xor
addb
add
xor
fiaddl
cwtl
into
adc
movl
aaa
add
stos
nop
cmc
lock
lret
pop
mov
xchg
mov
adc
xor
loop
std
in
lcall
lahf
push
mov
add
jne
sahf
hlt
add
outsb
out
popf
outsb
out
adc
imull
lods
mov
mov
dec
xlat
flds
sbb
mov
or
xor
lea
xchg
fiaddl
and
push
push
dec
adc
lods
test
clc
fimull
jle
iret
test
jge
jbe
lock
aam
cld
mov
testl
mov
sub
mov
andb
adc
daa
cld
lcall
out
mov
in
add
inc
add
xchg
mov
or
adc
mov
mov
repz
jo
arpl
aad
mov
dec
notl
cmp
cs
scas
cmp
rclb
pusha
call
sub
push
pop
jmp
sbb
and
dec
push
adc
mov
pop
pusha
mov
or
insl
das
sarl
hlt
lock
mov
iret
and
cmp
xor
xchg
mov
xor
or
mov
adc
and
rcrl
loope
add
and
inc
mov
xorb
jp
adc
mov
push
mov
and
rcr
mov
adc
cmpsb
mov
cmp
mov
jnp
fmull
or
or
adc
shlb
mov
enter
fucomip
cmpsb
mov
pushf
mov
nop
xchg
nop
push
mov
push
xor
ja
xchg
hlt
add
cltd
hlt
add
insb
cmp
adc
test
lods
movl
cli
repnz
faddl
dec
inc
jb
mov
sbb
xchg
inc
leave
ja
push
xor
pusha
dec
pop
sbb
mov
dec
mov
mov
test
out
fs
inc
in
and
xchg
sarl
fsubs
jge
push
cmp
jae
js
mov
rorb
jns
add
andl
sub
imul
sti
add
lret
mov
xor
mov
xchg
adc
jmp
push
lods
pop
bound
pop
mov
enter
sbb
ja
fnstcw
add
arpl
mov
xchg
out
pop
pop
and
outsb
dec
cs
imul
incb
cwtl
push
in
jae
fwait
add
push
push
pop
pop
cmpsb
incb
pop
ficoms
sub
cmpsl
and
jp
orl
cmp
mov
faddl
addb
ja
fisubrs
pop
jnp
ss
imul
jmp
sbb
outsb
xchg
mov
xchg
popf
and
adc
pusha
and
pop
hlt
mov
popa
push
push
stc
pop
jmp
lds
sbb
popf
mov
cmp
mov
popl
int3
rclb
xchg
and
sbb
push
xor
aaa
pop
lret
les
push
sbb
das
add
mov
test
mov
test
scas
fdivrs
andl
add
inc
sbb
or
cmp
and
mov
add
or
mov
pop
adc
or
xor
test
jo
push
mov
push
arpl
add
popa
add
pusha
fs
mov
ds
imul
cmp
sti
jnp
and
fidivl
push
inc
xor
fwait
mov
push
in
popf
add
and
call
sbb
cld
out
hlt
add
mov
cmp
pop
jnp
call
adc
and
cld
hlt
push
pushf
pop
xor
and
inc
add
pushl
int
insl
sub
and
add
pop
xor
sbb
add
sub
les
cmp
xor
inc
sti
adcb
fwait
pop
jbe
xor
add
or
aaa
inc
add
cmp
call
neg
xor
lods
enter
call
add
lods
loope
repnz
pusha
cmp
mov
mov
mov
pop
sbbb
lock
push
mov
cmpsb
jo
xchg
push
mov
fwait
jae
xchg
daa
inc
fildl
sub
add
sub
lret
in
inc
and
pop
aam
bound
or
andb
mov
sar
fiaddl
sti
mov
adc
pop
push
mov
mov
dec
xor
repnz
sbb
sub
xorl
test
test
push
pop
sub
aaa
pop
pop
sbb
mov
add
imul
pop
push
roll
leave
inc
mov
or
dec
popa
or
adc
and
sbb
ja
in
addb
cwtl
push
pop
push
dec
adcb
add
pop
call
and
rcrl
xchg
sbb
cmpsb
and
xchg
jge
pop
testb
pop
sahf
mov
mov
cmp
xchg
test
inc
inc
daa
loope
pusha
adc
add
and
and
cld
mov
add
outsb
mov
sbb
lock
xchg
xchg
in
inc
repnz
add
insl
xor
or
pushf
lods
inc
or
scas
xorl
push
shrb
daa
add
cmc
add
test
testl
push
mov
sub
lret
mov
lret
xor
aas
push
xlat
add
or
or
mov
fbstp
ljmp
mov
xchg
pop
adc
mov
jne
test
cld
rcr
movsb
jg
push
cmpsb
mov
es
adc
sub
ljmp
pop
push
cmc
sub
and
xchg
daa
push
push
inc
push
cmp
pop
jp
andl
and
add
mov
std
dec
jno
pop
push
popf
mov
push
add
xor
fstpt
dec
pop
cmpsb
add
xchg
pop
dec
adc
pop
add
repz
imul
testb
call
jmp
mov
add
movsb
xor
mov
scas
add
jge
mov
bound
sbb
subb
cmpsl
insb
mov
or
adc
or
pop
add
jbe
cmp
faddl
mov
xor
sbb
and
xchg
in
xchg
rclb
mov
inc
xor
xchg
in
add
aaa
orb
xchg
and
add
mov
and
popa
push
cmp
pop
mov
loop
movsb
cmp
lods
adc
mov
add
dec
mov
imul
cli
movb
inc
repnz
adc
or
ficomps
dec
cmc
adc
aas
xor
ja
jle
bound
pop
lock
xchg
rcrl
and
das
push
fwait
outsl
add
test
lret
ficompl
out
mov
sbb
addr16
subl
loope
xor
xlat
adc
mov
scas
add
cmpl
pop
js
sub
xor
jmp
jmp
stos
inc
sbb
jne
add
cltd
mov
add
dec
test
sub
rclb
pop
mov
adc
dec
sbb
add
xchg
cmp
dec
push
fucomip
pusha
jl
push
mov
insb
pop
jmp
mov
leave
dec
arpl
mov
add
in
cmc
jge
push
insb
mov
rol
push
fwait
sysexit
mov
dec
add
fldl
inc
pop
loope
or
movsb
out
pop
sbb
cmpb
and
sub
or
push
outsb
js
lret
jecxz
ss
add
add
test
ret
inc
and
pop
fcmovnbe
adc
push
pushf
fdivl
dec
jp
rcl
outsl
jo
pcmpgtd
ret
fwait
add
xchg
je,pn
push
push
data16
test
lret
popa
test
imul
rcrb
dec
sbb
ljmp
dec
roll
pop
pushf
aam
cmp
stc
mov
icebp
es
mov
mov
mov
mov
push
add
lahf
mov
pusha
mov
test
sbb
push
pusha
int
mov
xor
ret
inc
mov
adc
leave
jb
sti
xchg
outsl
jecxz
adc
fistpll
push
mov
mov
loopne
mov
rolb
flds
xor
mov
sub
mov
pusha
push
adc
add
jno
add
push
lods
ficoms
sbb
pop
or
leave
sbb
jecxz
pop
dec
mov
mov
sub
js
addr16
add
imul
fldl
fistpl
pop
pop
xchg
adc
je
sub
sbb
negl
add
lods
cmpsb
mov
shlb
outsb
push
aaa
pop
lahf
cmpsl
xchg
xchg
test
mov
imul
xchg
cs
pop
inc
fwait
dec
rcll
and
mov
pop
ja
sbbb
xorl
inc
in
test
jle
push
add
xor
inc
jae
add
add
jne
ds
xchg
sbbl
push
xor
inc
add
out
add
lea
push
jmp
bound
andb
test
mov
or
inc
mov
add
int
or
or
xor
pop
fistps
cmpsl
xorl
or
into
cmp
out
scas
mov
xor
dec
xchg
imul
add
mov
cld
jne
js
inc
add
xor
pop
mov
mov
enter
test
test
notl
leave
and
mov
mov
or
out
loope
add
or
cltd
sarl
mov
xor
popf
xchg
push
enter
push
in
and
dec
push
add
jecxz
mov
mov
fcoml
ret
shll
stc
or
inc
imul
push
inc
adc
xor
push
enter
add
roll
xchg
mov
std
addl
daa
mov
decl
pop
jl
inc
or
ja
mov
cmp
mov
adc
mov
jmp
popf
push
lock
mov
dec
lock
and
jne
sbb
jmp
popf
out
add
mov
rcrl
lea
repz
lret
int3
dec
push
addr16
es
or
sbb
ja
lock
xchg
out
cmp
or
pop
sbb
add
leave
sub
cmpsl
mov
fiadds
cld
cmp
mov
addb
mov
fnstcw
rol
mov
push
add
add
cs
jle
add
sub
mov
add
roll
push
sub
jne
outsb
jge
lock
pop
add
nop
and
xchg
out
adc
lock
add
cltd
das
push
or
stc
add
and
cmp
sbb
pop
adc
fidivrs
cmpl
loop
jnp
sbb
rorl
shrb
jecxz
or
or
out
xor
lock
mov
popf
dec
sbb
fsubp
leave
fdivl
inc
pop
das
in
into
sub
fs
jae
cmp
xchg
sub
adc
push
mov
add
out
aam
adc
jmp
stc
mov
and
out
inc
test
jmp
jnp
mov
shrl
xor
adcl
add
cmpsl
sub
and
push
mov
mov
adc
lods
mov
pop
xchg
jg
xor
pusha
aad
push
call
call
loope
mov
leave
mov
pop
outsb
push
push
hlt
and
jle
pop
jmp
sub
cmp
push
adc
nop
imul
nop
push
push
mov
pop
pop
nop
sub
sub
sahf
cmc
test
or
mov
pop
sbb
divl
enter
nop
lahf
insl
sub
lcall
lods
sub
mov
pusha
popa
push
repnz
push
outsb
arpl
stos
mov
mov
and
addb
clc
imull
sub
pop
out
popa
adc
popa
add
gs
and
pop
pop
fwait
test
aas
push
fsubs
push
jmp
xchg
inc
cltd
rorb
loop
shrb
jl
pusha
mov
enter
dec
and
mov
lret
mov
jae
push
mov
ljmp
push
loopne
or
pop
mov
lret
inc
pop
add
push
and
push
stc
in
je
adc
jle
push
add
cmc
mov
jae
daa
add
aam
xchg
xchg
addr16
add
push
xchg
mov
and
push
cmp
cmp
xchg
fiadds
and
xchg
and
inc
arpl
dec
add
es
sbb
sbb
imul
mov
dec
outsb
outsb
add
insl
fs
push
add
lods
add
add
bound
jbe
push
in
xchg
mov
and
push
shrb
js
mov
outsb
call
dec
aas
shlb
mov
dec
pop
orl
pusha
rolb
cltd
inc
and
pop
sbb
push
xchg
aam
scas
lods
rcll
add
xchg
xor
mov
xchg
in
sbb
js
push
movl
das
adc
push
dec
loopne
and
jne
add
repnz
mov
pop
xchg
xchg
dec
cmc
repz
pop
or
jle
mov
or
push
inc
popa
add
call
jbe
loop
pop
push
cwtl
sbb
jmp
ss
sub
push
sub
and
add
sbb
hlt
rolb
rorb
cmp
scas
rorl
inc
sbb
or
roll
pusha
fisubrl
popf
test
fwait
in
mov
js
sub
add
out
or
test
adc
or
or
adc
adc
cmp
and
gs
xor
xchg
faddl
mov
gs
sbb
adc
push
add
xchg
sahf
dec
xchg
scas
loopne
pusha
xchg
cmp
repz
popa
xchg
jg
fists
pop
jo
push
dec
pusha
mov
dec
and
pop
xchg
mov
in
incb
je
sub
xchg
std
mov
push
mov
xor
dec
inc
sub
sub
sbb
or
dec
rcr
mov
stos
test
xor
stc
xor
pop
and
test
sbb
dec
call
and
fnstcw
xchg
and
test
add
std
sbb
roll
pop
sub
add
adc
add
sbb
inc
and
adc
mov
lea
cmp
or
sub
test
out
mov
xchg
loop
stos
sti
pop
out
mov
xor
cli
scas
xor
aad
dec
xchg
jmp
fcmovb
add
js
cmovle
lahf
lret
pop
adc
or
aad
or
mov
xor
sub
cmp
adc
inc
add
add
rorl
movsl
push
movsl
fadds
add
test
or
ja
jle
add
rcrb
insl
cmp
jl
loope
pusha
icebp
pop
dec
push
mov
in
mov
scas
xchg
and
stc
loope
testb
sete
popa
out
xor
pop
and
imul
dec
loope
mov
adcb
stos
inc
into
adc
sbb
pusha
mov
nop
mov
add
jno
or
adc
in
sti
in
sub
and
push
sub
fcoml
xchg
loope
pop
out
adc
or
repz
or
repz
mov
mov
mov
popf
xchg
sbb
pusha
push
mov
testw
jno
popf
sub
adc
and
lahf
iret
cmp
pop
out
add
cs
jle
add
loope
mov
mov
je
add
int3
add
rcll
add
mov
aaa
lods
mov
out
jo
and
leave
int
inc
add
iret
xchg
mov
clc
jecxz
add
xor
add
mov
jp
sbb
pop
push
call
mov
inc
xchg
movsb
ficoms
cld
xchg
lcall
call
mov
sti
popa
pop
pushf
inc
jne
clc
push
pusha
xor
add
sub
add
add
pop
or
or
mov
or
lods
loop
sbb
packuswb
fsubs
or
add
dec
cmp
js
imul
jmp
mov
in
mov
in
dec
sti
adc
and
pusha
aad
popa
xchg
cwtl
daa
jns
mov
push
int3
das
jnp
jo
mov
dec
nop
icebp
and
in
mov
jo
cmc
jnp
sub
push
mov
lods
sti
push
imul
adc
mov
xchg
loop
add
mov
push
or
dec
sahf
dec
cmp
pop
insb
cld
or
test
inc
jo
push
btc
jb
xchg
mov
adc
pop
mov
jne
inc
das
test
dec
pop
inc
fdivrp
and
push
inc
insl
and
sbb
andb
jg
dec
mov
mov
jo
mov
xchg
sub
jno
xor
dec
xor
in
subb
or
xor
xchg
dec
stc
or
xchg
pop
lods
adc
bound
les
mul
scas
jecxz
adc
enter
rorl
pop
pop
mull
imul
pop
test
int
sbb
push
leave
mov
inc
roll
sbb
push
jnp
inc
sbb
dec
cs
jmp
ja
mov
sub
ret
jmp
int3
aad
add
wbinvd
or
negl
mov
lods
inc
and
mov
hlt
test
and
jp
jnp
push
adc
or
mov
pop
imull
aaa
add
test
dec
xchg
mov
add
mov
pop
mov
cmp
pop
push
or
fists
dec
inc
aaa
pop
adc
call
xchg
aas
gs
jmp
and
adc
nop
mov
xchg
add
imul
and
movsb
cltd
sbb
mov
or
mov
out
push
cmp
fdivp
shr
sbb
xchg
xchg
push
xor
sub
adc
xor
outsb
movsl
push
mov
mov
sub
jns
jae
and
fs
xorb
popa
lcall
or
push
mov
movsl
mov
add
xchg
pop
jecxz
rclb
loope
add
pop
dec
fwait
test
and
int3
cmpsb
jmp
inc
cmp
rolb
mov
adc
stos
les
jnp
or
and
add
std
ljmp
mov
jns
pushf
or
adc
dec
dec
xchg
jecxz
dec
insl
pop
in
decl
fistpl
int3
shlb
or
sub
add
lret
fcmovbe
push
call
arpl
lret
mov
sar
mov
sbb
daa
adc
fs
add
insb
addps
and
adc
push
add
pop
pusha
mov
xchg
or
negl
cmp
add
mov
adc
fstpl
xor
xor
rolb
sub
add
jecxz
xchg
enter
pop
fstpt
sbb
dec
nop
and
bound
jecxz
xchg
push
and
dec
pop
sub
sbb
adc
cmpb
add
mov
xchg
sub
leave
add
cmp
in
int
pop
nop
in
mov
dec
mov
add
dec
push
call
lock
enter
adcb
movsl
test
mov
jno
sbb
push
sbb
push
pop
loope
hlt
xorl
repnz
fs
jl
insb
roll
loop
add
mov
fildll
jl
add
clc
aaa
divl
sub
add
test
ds
sbb
call
addb
sub
or
mov
daa
mov
sub
and
xchg
lret
mov
dec
les
scas
outsl
pop
and
adc
or
xchg
stc
sbb
xchg
stos
das
iret
cmp
cmovb
add
bound
sbb
add
jno
pop
xchg
into
mov
data16
mov
icebp
mov
push
mov
push
adc
shrb
test
add
adc
jo
roll
ja
mov
cwtl
popa
mov
rol
push
add
daa
sub
rclb
jne
fsubl
addr16
mov
lahf
push
std
hlt
xchg
mov
mov
add
xchg
sbb
add
roll
pop
test
sbb
cmpsl
icebp
ja
out
clc
mov
test
or
in
dec
out
insl
mov
push
push
push
pop
xchg
rolb
add
ret
mov
add
scas
push
loope
mov
adc
test
sahf
add
and
mov
mov
jne
cmpsb
inc
loopne
sbb
sbb
mov
mov
mov
imul
or
sbb
jle
mov
sub
or
aaa
mov
incl
cmp
cmp
jnp
add
pop
popa
loop
add
cld
pop
pop
add
nop
mov
xor
dec
stc
inc
mov
mov
std
das
sub
sub
dec
xor
mov
cmp
jg
add
andb
jmp
cmp
scas
add
data16
movl
shll
inc
jns
dec
sub
mov
adc
pop
pusha
cmp
push
mov
push
mov
sub
sbb
pushf
and
or
ja
addr16
test
jo
add
xor
in
push
xchg
mov
xchg
sbb
sar
pop
das
imul
add
lcall
pop
adc
adc
imul
into
cmpb
sub
ja
jnp
std
cmpsl
flds
or
jp
scas
and
in
mov
add
sbb
and
push
pop
les
lock
aas
pop
sbb
jecxz
adc
jecxz
pop
adc
in
bound
mov
or
inc
cs
adc
or
aaa
negl
fsubrs
addr16
cltd
jecxz
xchg
mov
shl
xor
repz
rcll
in
mov
repz
dec
fwait
clc
test
and
inc
add
jl
or
repz
cli
stc
popf
pop
ret
or
shlb
add
push
xchg
cmpb
out
or
popf
jge
or
int
cltd
rcl
les
jmp
in
add
and
cmp
push
insl
mov
cmp
pop
xor
clc
inc
add
incb
test
lcall
jbe
cwtl
or
sbb
lock
cmp
bound
xchg
push
clc
adcb
cmp
adc
xchg
cwtl
or
movb
es
adc
adc
inc
fstl
scas
or
sbb
cld
dec
scas
loopne
push
aaa
fildll
int
cmpsb
push
pusha
repnz
fwait
push
faddl
pop
popa
inc
or
popa
pop
daa
push
pop
push
iret
push
push
dec
xchg
pop
mov
push
bound
data16
mov
add
mov
push
data16
sub
out
pop
das
dec
xchg
loopne
inc
cmpsb
dec
pop
int3
xchg
mov
lock
sbbb
adc
push
das
xor
and
sub
push
mov
pop
lret
jmp
cltd
adc
mov
mov
enter
add
add
dec
mov
nop
add
pop
add
and
shll
pop
popf
mov
or
inc
cli
ret
roll
cltd
inc
pop
imul
and
cmp
push
cmp
jae
js
adc
cmp
add
and
mov
jo
in
mov
popf
cmc
ret
sub
inc
add
pop
xchg
xchg
xchg
out
jns
dec
mov
lea
out
add
nop
out
xor
popa
loopne
clc
pop
verw
test
push
dec
dec
pop
ror
cmp
add
mov
sub
dec
xlat
xor
or
pop
lea
xor
sbb
nop
les
push
cmp
mov
int3
inc
testl
adc
lahf
pop
inc
loopne
lea
sbb
jge
add
sti
xor
jbe
cli
lods
dec
jp
pop
popf
ret
add
into
test
lret
dec
movsb
jbe
fimuls
js
sbb
in
sub
jb
in
je
fisttpl
popf
mov
mov
iret
push
cmp
xor
seto
shl
dec
in
add
les
mov
inc
or
cmpsl
add
mov
cmp
je
imul
xorl
scas
mov
nop
ret
cs
hlt
lret
push
enter
test
mov
outsb
insb
incl
cld
add
adc
std
jno
mov
add
scas
ljmp
sub
jae
outsb
loopne
push
jg
leave
int3
push
aaa
icebp
and
xor
and
jge
ja
xor
add
jmp
popf
xor
testb
scas
sarl
or
std
adc
jbe
mov
mov
ds
lahf
mov
movsl
add
push
in
pusha
dec
or
adc
push
sbb
sbb
jo
xorb
xchg
add
pop
ret
inc
pop
xchg
popf
xor
cmp
clc
inc
xchg
sbb
jnp
aas
adc
pop
movsb
fs
add
test
popf
xchg
xchg
out
sbb
je
fwait
push
adc
sbb
mov
pusha
pop
mov
mov
push
mov
leave
pusha
xchg
movsb
and
sub
jmp
jp
mov
rorl
enter
pop
sarl
jge
mov
adc
jmp
out
scas
mov
add
jge
les
and
pop
xchg
popf
xor
sti
adc
mov
xor
adc
or
cmpsb
xor
push
repnz
sbb
idiv
lds
stc
pop
sbb
pusha
xor
or
adc
test
decb
sub
aaa
addr16
xchg
sbb
mov
and
jbe
dec
inc
adc
mov
dec
push
pop
mov
lods
dec
push
fnstcw
shll
mov
mov
stos
cmp
xor
xor
xchg
fs
add
mov
add
lods
pop
and
pusha
popa
ss
adc
ss
push
popa
xchg
dec
stos
out
inc
mov
mov
pop
ja
shrb
lock
sar
mov
int
movsb
mov
mov
or
adc
mov
ret
mov
xchg
pop
popf
sahf
inc
cld
cwtl
pop
sub
sbb
aam
faddl
mov
jb
rorl
in
das
in
mov
loop
xchg
sub
mov
pop
and
pop
inc
bnd
sbb
adc
je
push
jbe
out
mov
notb
addl
sub
fidivrl
add
mov
push
je
imul
scas
cmp
repz
inc
add
adc
adc
mov
jae
dec
lret
pop
add
pusha
mov
push
mov
in
jge
decl
push
mov
mov
incl
clc
jae
pop
adc
jnp
jmp
mov
jae
pop
adc
mov
jmp
push
pusha
cmp
lret
xor
loop
mov
enter
push
add
mov
mov
cli
dec
aaa
test
ja
mov
dec
in
orb
pop
xchg
add
in
sub
outsl
pusha
pop
push
mov
lahf
mov
fs
sbb
fwait
pop
mov
xchg
enter
roll
cld
push
push
push
mov
loopne
push
int3
pop
outsl
gs
jecxz
sub
orl
xchg
push
cltd
add
cmp
and
add
out
dec
dec
out
je
popf
sbb
pop
jmp
hlt
icebp
mov
outsl
movsl
adc
jbe
pop
jne
mov
lcall
out
cwtl
call
fimuls
mov
ds
pop
nop
daa
mov
dec
jo
pop
pusha
jnp
cmpsl
dec
mov
sub
adc
faddl
add
push
loop
lret
or
js
xchg
in
cli
ret
test
enter
mov
cmp
mov
cmpsb
pop
fneni(8087
jge
clc
lahf
sarb
stos
nop
mov
sub
leave
xlat
shlb
xor
call
les
cmp
jmp
cmpsb
jo
sub
push
push
mov
pop
or
or
xchg
push
repnz
pop
pop
inc
xchg
imul
stos
mov
icebp
je
jns
adc
inc
xchg
mov
adc
add
mov
popf
pxor
inc
rcll
adc
mov
jbe
pop
movsb
push
add
shlb
mov
jmp
jecxz
add
shlb
add
repz
jne
adc
loope
sub
inc
mov
mov
bound
push
mov
shll
mov
outsb
out
adc
out
daa
fldenv
inc
addr16
jo
xchg
aaa
pop
xor
xor
inc
sub
rorb
add
into
mov
shll
cmp
add
xor
cmp
call
pop
sub
in
movsb
inc
iret
das
lcall
dec
scas
add
cs
or
das
and
sti
outsl
push
add
xchg
push
sub
sbb
jle
inc
push
mov
add
es
cld
xor
add
pop
and
pop
push
xor
insb
scas
mov
test
cld
aas
and
test
jmp
xor
jmp
fwait
mov
and
lods
jmp
xchg
in
add
je
jno
mov
movswl
lea
and
or
aad
jecxz
das
and
loope
sub
shll
or
jno
pushf
xlat
dec
icebp
cltd
imul
js
or
or
adc
inc
sbb
mov
mov
popf
sbb
mov
or
popf
sar
mov
push
popa
xchg
add
adc
push
test
add
mov
add
xchg
in
aas
xlat
dec
mov
push
mov
xor
xchg
xchg
cltd
pop
fs
push
lahf
xchg
nop
lods
cmc
pop
aaa
push
test
mov
xchg
adc
js,pn
dec
or
repnz
mov
orb
add
xor
add
adc
fs
sbb
sub
push
sbb
adc
pushf
rorl
mov
pop
cwtl
imul
or
sbb
and
pushf
xchg
iret
cmp
add
sub
sbb
cmp
enter
xchg
lcall
enter
daa
sub
imul
in
pop
mov
add
fcom
mov
inc
rcrl
stos
jo
inc
or
jno
xchg
push
movsb
cltd
mov
jg
jmp
or
notl
jge
enter
loop
popf
sbb
jecxz
push
repz
fidivrl
xchg
leave
imul
clc
test
mov
bnd
and
fcoms
xor
rcll
add
lods
lret
in
sub
push
addr16
or
aaa
xchg
mov
mov
push
sub
jle
mov
mov
nop
pop
lock
or
das
repz
sub
inc
adc
pop
xchg
adc
xor
mov
cmc
repz
in
push
pop
sarb
xchg
movsl
push
jl
faddl
adc
jo
ja
inc
jmp
pop
dec
or
mov
shlb
xor
inc
push
cmc
pusha
sbb
push
loopne
jbe
sub
dec
add
sbb
rolb
dec
popa
popf
aas
pop
popf
shlb
mov
decb
fbld
pusha
daa
xchg
sub
test
sbb
mov
leave
clc
lcall
fwait
js
jl
mov
xor
sarl
dec
push
cld
ret
cli
mov
jecxz
jle
out
test
push
pop
bnd
in
add
cmp
add
lock
jae
pop
push
cs
cmpsb
inc
sub
add
sub
or
mov
data16
lods
sbb
data16
jg
sub
mov
and
jmp
adc
stc
dec
loopne
ss
jae
rcr
jle
das
rcl
daa
dec
cmp
sbb
pop
mov
rcrl
and
lret
nop
mov
cmpsb
out
ret
xchg
repz
push
xchg
adc
xchg
lock
add
mov
xor
push
ficomps
cltd
sbb
subl
pop
adc
in
cmpsb
push
daa
cmc
dec
sub
xor
sub
sub
mov
and
and
adc
adc
scas
or
pop
adc
adc
and
or
sub
in
mov
and
adc
lds
in
mov
gs
orl
add
in
jge
xor
out
cvtpi2ps
sbb
rol
out
rclb
int3
sbb
jb
adc
sub
push
insb
inc
pop
mov
cmp
add
cmp
arpl
sbb
and
inc
stos
sub
mov
inc
add
loopne
js
dec
clc
lea
dec
aaa
and
add
or
lock
mov
jo
cmc
jp
pop
ret
add
and
cmpsl
daa
scas
scas
idivb
addr16
sbb
inc
adc
and
add
jne
insb
leave
testb
fcomp
dec
mov
pop
xor
dec
imul
ret
sbbl
ja
std
add
and
mov
dec
repnz
popl
cmp
clc
in
and
xchg
lods
fiadds
in
repz
pop
xchg
andb
in
mov
mov
cmc
xor
cld
sti
push
jo
push
xchg
add
inc
pop
cld
xor
jmp
xchg
xor
add
push
insb
loopne
and
add
mov
jnp
mov
add
rolb
cltd
adc
jmp
pop
or
cltd
push
int
shlb
addb
mov
popf
adc
clc
and
inc
or
jmp
pop
push
push
dec
test
test
add
dec
in
in
pop
pop
lds
movswl
xor
xchg
inc
out
repnz
pop
lods
aas
and
dec
in
cmp
cld
jns
cmpsl
push
cwtl
fcoml
lahf
dec
insl
add
scas
mov
xchg
repnz
imul
mov
shl
mov
fildl
cmpsl
mov
das
push
xor
outsb
icebp
add
cmp
xchg
outsl
shlb
pusha
inc
mov
call
xor
in
cli
fstps
addr16
idivl
push
pop
pop
bound
cli
mov
call
add
and
subb
out
popf
sub
push
pop
into
sbb
test
and
sub
rcrb
sbb
fistps
rorb
xchg
mov
stc
insl
pop
xchg
aad
div
loopne
sub
jnp
adc
and
scas
fucomi
shl
scas
add
adc
xchg
orl
popf
adc
add
xorl
fnstsw
mov
cmp
fisubs
lea
push
push
mov
ret
cmpsl
pop
jo
pop
rclb
adc
andl
mov
fiadds
cs
sub
mov
outsl
xchg
cld
jmp
hlt
jg
dec
fimull
and
pop
mov
add
and
lods
sbb
icebp
scas
shrb
aaa
das
mov
dec
mov
cmpb
mov
inc
sub
push
adc
stos
pop
je
es
adc
ds
jge
xor
lds
or
sub
outsl
cwtl
add
incb
xchg
clc
mov
inc
movsl
sub
add
addl
outsb
cmc
mov
jno
dec
icebp
and
sahf
cmp
movsb
mov
jp
popf
rorb
xorb
add
add
lret
inc
je
clc
mov
call
adc
outsb
push
mov
push
iret
adc
adc
jg
test
xor
inc
sub
lret
or
mov
xor
xor
loopne
lahf
stos
out
sbb
lods
adc
adc
stc
adc
es
mov
scas
iret
xor
or
jno
add
sub
lea
mov
mov
sub
repnz
lods
push
ficomps
inc
hlt
sarb
xor
sbb
rolb
or
mov
fbstp
movsl
inc
xchg
cmc
or
dec
xchg
test
int3
pop
mov
sahf
scas
enter
mov
cmpsl
push
loopne
pop
mov
mov
popa
jg
cmpb
aad
pop
sub
mov
test
push
mov
dec
jnp
loope
sbb
inc
js
int
loopne
mov
or
mov
fwait
in
mov
dec
stc
outsb
outsb
loop
out
pop
or
hlt
lods
loopne
adc
shr
pop
xchg
sbb
cmp
adc
dec
es
and
daa
xchg
cmp
mov
jl
sub
mov
clc
stos
dec
jmp
out
mov
xchg
mov
xor
aas
int3
or
mov
nop
fistps
or
mov
jl
add
popa
negb
add
add
insl
inc
xchg
sub
hlt
decl
adc
jno
imul
or
sub
in
aam
jbe
pop
mov
out
mov
sbb
inc
inc
sub
adc
outsl
popf
jae
sahf
fnstenv
repz
mov
add
fstpt
sbb
jne
test
loop
int3
and
and
push
add
pop
popf
mov
mov
orb
dec
add
push
pop
mov
add
cld
mov
mov
or
cmpsl
fndisi(8087
loope
popf
sbb
xchg
mov
sbb
fldt
xor
adc
lods
sbb
ljmp
aam
jno
rcrl
add
sbb
cmp
test
dec
stos
into
bound
xor
add
out
outsb
sbb
pop
mulb
mov
idivl
push
mov
sbb
ret
mov
fnstenv
dec
aas
and
fdivrp
imul
sub
mov
aad
adc
int
jp
lea
addb
cmp
outsl
repnz
pop
xor
pusha
imulb
sbb
test
jae
je
cmpsb
sbb
shlb
sub
mov
push
dec
sbb
inc
faddl
pop
and
aaa
scas
cmc
sub
aam
call
std
ja
adc
mov
loope
pop
cmp
out
into
cwtl
lahf
in
jbe
cmp
jmp
add
jo
pop
jecxz
push
leave
mov
outsb
adc
sti
jmp
stc
sarb
sub
test
push
pop
faddl
sub
add
leave
loop
add
adc
mov
cmp
jle
cmpsl
mov
aam
inc
and
jne
shrb
aaa
movsb
adc
pop
mov
sbb
dec
cmc
add
jge
push
in
pop
mov
add
xor
fnsave
into
js
popf
test
mov
dec
cmc
imul
fidivs
xor
fisttpl
pusha
rolb
or
add
nop
jg
inc
pop
daa
push
push
adc
mov
fldl
data16
clc
adc
mov
cwtl
bndldx
inc
sbb
push
out
mov
xchg
jo
daa
pop
push
cmpsb
js
clc
or
sub
sbb
jno
mov
cmp
pop
cmc
xlat
test
adc
loop
adc
jg
add
jns
mov
roll
jl
inc
sti
mov
loop
and
add
pusha
push
nop
jmp
cmp
sub
xchg
call
or
pop
sub
push
adc
inc
add
rcr
or
lea
ret
mov
dec
adc
pop
cmp
mov
test
mov
cmpsb
pop
xor
jb
and
or
jp
sbb
stc
mov
pop
ljmp
sub
std
xor
in
ss
jae
out
jmp
out
or
cltd
pop
jb
cmp
sbb
testl
dec
inc
test
popf
lret
dec
sub
xor
xor
dec
test
cmp
mov
lods
sub
and
loop
xchg
icebp
fisubrs
xchg
cmp
dec
stc
and
push
jp
dec
inc
sbb
mov
xor
hlt
adc
jge
push
xor
lods
push
lods
push
mov
xchg
cmpsb
push
add
mov
mov
pusha
out
or
subb
jbe
outsl
lcall
adc
push
lds
insl
adc
fbstp
mov
fdivrs
jle
and
adc
fld
mov
sub
pusha
mov
stc
push
je
cmpsb
and
jecxz
popa
inc
call
xchg
add
icebp
pushf
dec
and
or
push
cmp
jmp
loope
sbb
jmp
push
add
add
pop
mov
add
add
push
in
and
inc
and
and
movsl
xchg
test
loop
mov
jo
lcall
icebp
push
cmpsb
add
mov
fs
movsb
test
jbe
dec
jo
daa
inc
adc
add
int3
jl
jmp
and
insb
jbe
inc
push
xchg
push
mov
call
adc
push
lret
cmp
inc
loop
dec
or
adc
loope
dec
or
inc
pusha
mov
stc
xchg
mov
in
fisubrs
sub
movswl
ljmp
negl
pusha
mov
add
mov
dec
sarb
mov
mov
ficompl
push
cltd
orl
mov
mov
fisubs
mov
sti
fdivr
inc
adc
call
div
int
push
add
roll
push
pop
pop
shll
and
pop
je
mov
mov
xor
pop
lods
xchg
and
movsb
sahf
pop
xchg
dec
add
adc
mov
sub
mov
test
mov
add
rcll
pop
mov
loope
inc
inc
pop
clc
popf
xchg
popa
cmp
add
in
mov
sub
shr
pop
adc
pop
xchg
dec
shl
mov
push
mov
je
mov
pop
mov
lds
add
pusha
aas
jp
lahf
mov
pop
lods
test
dec
call
adc
mov
mov
mov
mov
sub
or
pusha
lods
mov
fcomps
mov
cmovl
jo
les
outsl
add
mov
adc
outsl
adc
insb
inc
xchg
fcmovb
inc
jb
xlat
add
fucom
outsl
fdivs
scas
cli
add
or
mov
mov
test
out
add
inc
lcall
out
xor
and
sbb
hlt
push
insb
cwtl
sahf
add
loopne
jg
mov
cmc
roll
cltd
in
les
fmull
mov
push
fistl
js
jp
mov
popf
cld
hlt
add
add
add
jmp
pop
add
lcall
mov
daa
shr
enter
push
sub
leave
lods
adc
or
and
push
fucompp
int3
add
outsl
das
add
movsb
loope
sbb
push
or
jle
and
pusha
sbb
mov
mov
or
jg
xchg
add
lret
add
mov
xchg
lock
pop
dec
test
mov
and
pop
push
push
popa
shl
mov
jl
imul
adc
adc
push
xchg
addl
daa
cmc
pusha
mov
mull
inc
xchg
cmp
movsl
in
fmuls
cmpsb
cmovp
mov
stos
dec
je
je
adc
pop
push
push
mov
xchg
gs
mov
fldt
sub
mov
cmp
dec
nop
and
xchg
divb
add
jp
stc
jp
arpl
jae
notb
inc
ja
or
mov
nop
xchg
dec
pop
rorb
mov
sub
mov
pop
push
add
mov
and
das
jae
inc
movsb
sbb
mov
jecxz
test
inc
aam
and
or
mov
adcl
das
adc
jne
enter
xchg
mov
in
cmp
loop
mov
insl
adc
orb
adcl
adc
adc
aam
leave
sub
mov
loop
sub
inc
pop
cmpsl
or
daa
pusha
pop
notb
push
add
cmp
in
jmp
push
pop
cmc
ret
pop
sub
add
push
int3
sub
es
pop
mov
test
arpl
int
cmp
pop
jle
jge
jge
jnp
jecxz
cld
push
cwtl
inc
xor
mov
loope
rcrl
dec
les
jp
or
push
or
pop
cld
stos
stos
adc
sbb
lret
dec
insl
daa
rolb
sub
or
int3
fiaddl
out
ret
popf
popf
es
mov
sub
mov
negl
cmc
ds
cld
arpl
ret
mov
rclb
add
xor
jp
mov
lods
les
fwait
cmp
mov
and
or
xchg
in
negb
je
cmp
pop
popa
ret
popf
mov
or
jo
and
hlt
pop
add
test
xchg
jge
dec
lds
imul
test
daa
out
in
adc
add
xor
adc
mov
fcoms
ljmp
mov
add
clc
int3
dec
test
or
mov
add
jge
mov
cld
in
pop
jmp
fstl
add
aas
fnstcw
pop
adc
fcmovnbe
mov
iret
in
scas
xor
add
mov
and
popa
popf
mov
jle
add
xor
xor
pop
pushf
rcrb
jb
sti
cmpsl
aaa
sub
and
adc
xor
add
xchg
jl
rcrl
jns
mov
xchg
insl
mov
lds
inc
mov
push
popf
adc
mov
push
in
popf
mov
sub
ds
cmp
push
mov
sbb
sub
fwait
inc
pushf
mov
push
scas
cld
aas
pop
jmp
xlat
pop
adcl
ret
ljmp
xor
aaa
add
sarb
adc
in
enter
mov
fcomi
andb
mov
sbb
imul
daa
jle
rorl
cmpsl
andb
out
push
cmp
xchg
aad
jmp
lock
inc
out
insb
mov
push
inc
lea
stos
fwait
js
int
ljmp
fwait
add
dec
int3
and
adc
mov
nop
jle
sbb
lds
push
mov
jle
inc
or
roll
sub
nop
pop
add
adc
or
mov
mov
lahf
cltd
mov
cmp
add
cmpsl
push
iret
sub
daa
push
adc
push
pop
fcoms
rcll
rcll
lods
mov
mov
or
mov
add
sub
nop
ffreep
repz
js
mov
jae
imul
dec
xchg
rclb
dec
nop
fildl
test
xchg
cmpsl
out
imul
push
add
aad
adcl
jp
pop
sbb
fidivs
xchg
std
sub
mov
cmp
and
lea
mov
pop
sar
sub
mov
mov
ret
repz
gs
inc
movsb
jge
add
insb
out
sub
faddl
push
pop
cmpsb
sahf
push
loop
dec
and
fwait
jge
mov
roll
add
or
jnp
jo
mov
enter
xchg
or
inc
shll
jp
jo
pop
pop
mov
jmp
jge
mov
popa
in
mov
mov
outsl
dec
add
inc
cmp
sub
arpl
jns
pop
adc
test
adc
adc
mov
add
dec
js
test
adc
int
cmc
pop
lahf
sub
je
add
popf
pop
and
notb
adc
mov
add
dec
push
in
lods
cmp
aam
sub
mov
xor
cmp
cmpsb
scas
cld
cli
mov
mov
add
pop
adc
dec
cmp
cld
push
pop
mov
mov
pop
mov
imul
sub
sbb
inc
popf
adc
push
or
jecxz
shlb
leave
dec
add
hlt
sub
push
add
stos
out
out
add
cmp
cmovs
jle
or
sub
jo
daa
es
inc
movl
cli
movsl
test
xor
push
push
test
inc
mov
in
lcall
push
mov
lret
mov
testl
inc
jb
or
mov
jo
xchg
adc
or
add
lcall
cwtl
lods
lea
movsb
jb
loopne
inc
and
mov
shlb
add
shrd
pop
je
add
dec
jnp
pop
jo
fs
mov
mov
push
je
sub
cmp
xchg
push
loop
or
frstor
add
mov
inc
pushf
mov
popf
in
adc
pop
adc
pusha
inc
add
int3
bnd
mov
fildll
pop
in
lds
add
orb
mov
add
jnp
cmpsl
jle
and
inc
sub
popf
adc
test
adc
inc
mov
popf
adc
inc
xor
sub
in
out
movsb
add
mov
in
stc
fcom
cmpsb
loopne
fldenv
lods
push
mov
push
popf
cmp
push
jo
xchg
xchg
imul
sub
insl
inc
in
les
mov
cmp
popf
adc
imul
lods
sub
imul
rolb
movsl
add
pop
loopne
pusha
mov
add
and
stos
jecxz
lret
and
push
test
sub
mov
push
cmc
fs
int3
popa
mov
mov
je
push
cmp
lock
sub
fidivl
jmp
call
or
push
push
pusha
sti
insl
inc
sub
adcb
mov
filds
mov
push
jp,pn
das
cmc
ds
add
jecxz
sbb
fisubrs
int
loopne
cld
popa
jnp
add
es
push
dec
mov
jp
xabort
or
movb
sbbl
jae
or
xlat
push
stc
push
add
cmpsl
sub
dec
lret
cmpl
pop
push
add
repz
or
das
lcall
jno
push
add
movsl
inc
mov
lret
into
jo
cmp
fwait
add
cmp
frstor
push
sub
filds
mov
aas
cmp
pop
adc
ficompl
inc
out
adc
sub
adc
sbb
or
jge
dec
add
popf
cmc
adc
mov
movsl
fwait
loop
fsub
inc
hlt
mov
push
push
jecxz
ficoms
push
jns
mov
jl
push
js
mov
add
mov
imul
clc
lds
cld
cmp
xchg
clc
jbe
adc
add
clc
aad
add
push
xchg
addl
jmp
mov
in
or
jno
dec
icebp
sub
add
fcoms
xor
pop
sahf
xor
std
xchg
test
mov
lods
jmp
ret
inc
cli
push
mov
ret
shl
arpl
mov
andb
push
pop
test
add
push
push
jb
in
das
and
mov
mov
scas
pop
imul
push
in
cmc
das
mov
mov
push
popa
les
add
out
mov
add
les
test
fidivl
mov
cmp
jmp
push
pusha
data16
inc
into
daa
mov
daa
mov
inc
mov
adc
hlt
adc
mov
pop
rcrb
aad
cmp
cltd
dec
lcall
daa
xchg
popa
add
das
shlb
scas
fisttpl
fnstcw
leave
andl
nop
shlb
pop
orl
xor
xchg
mov
cs
mov
xor
ja
lahf
xchg
sarb
xorb
dec
and
push
lock
hlt
imul
insb
jmp
pop
push
push
dec
push
lea
mov
and
adc
icebp
mov
dec
and
adc
add
sbb
pop
fdivl
and
int3
rorb
push
push
dec
in
push
int3
add
sbb
popf
fisubl
add
xchg
or
pop
orl
jb
jle
pusha
xlat
and
jo
sub
shll
adc
les
or
or
nop
aam
push
add
jle
icebp
and
jle
jno
dec
add
or
or
lea
ret
das
fimull
and
loope
das
jne
fidivrl
lret
aam
and
jl
push
add
data16
xor
and
jnp
loope
and
pusha
out
or
cs
shll
rcll
push
xor
pusha
push
xor
jne
adc
jg
inc
popa
sub
xor
lds
cmpsb
scas
loope
xor
pusha
nop
pop
and
or
cld
aas
jnp
and
dec
lea
inc
jp
adc
push
out
add
add
and
add
imul
sti
rcll
in
stos
adc
mov
push
mov
or
cmp
add
pop
loope
cs
add
and
add
das
mov
testl
adc
aam
jmp
cltd
aam
fisttps
xchg
jo
popf
fstps
add
fcomps
xchg
je
adc
lods
addr16
fiadds
nop
sub
jmp
loop
push
xor
out
push
aaa
aam
in
jmp
outsb
lcall
pop
in
cmp
xchg
shll
subb
adc
xchg
notb
ja
add
or
xor
xchg
repz
push
enter
and
int3
and
add
repz
imul
add
enter
iret
fiadds
loope
adc
stc
insb
adc
xchg
mov
sbb
mov
inc
add
fisubrl
lcall
jl
mov
pop
add
ret
mov
or
cld
pop
xor
xchg
setae
push
out
cmp
push
loop
sbb
xor
jo
cli
aam
out
push
xorb
sub
mov
adc
loope
repnz
orb
mov
fstl
push
loopne
jecxz
add
dec
jnp
stos
ljmp
add
add
mov
dec
push
or
mulb
cmc
cmp
inc
aam
repz
xchg
sub
mov
das
pop
outsl
fiadds
les
or
push
dec
clc
pop
or
mov
add
call
daa
push
pop
mov
and
push
sahf
cwtl
ror
jp
xchg
dec
lods
lods
sbb
inc
mov
hlt
mov
pop
push
aaa
das
mov
add
aad
dec
stos
cmpsb
xorl
mov
inc
insb
stos
or
pop
jle
imul
fldenv
pusha
aaa
out
push
ret
cmc
dec
xchg
or
movsl
bound
xor
cli
mov
jae
jno
insb
add
jno
and
imul
nop
cmc
pop
adc
icebp
and
aam
jle
sub
lea
push
inc
mov
daa
shl
testb
shrl
mov
in
movsl
pop
or
mov
jne
out
rcrb
icebp
pop
jmp
dec
mov
adc
test
cmp
jns
sbb
push
pusha
or
mov
cmpsb
sahf
jmp
shlb
adcl
push
adc
cld
int3
notl
clc
mov
adc
xchg
and
or
jmp
fidivs
sub
mov
xor
lea
ja
pop
add
pop
clc
xor
mov
add
push
ljmp
incb
jae
cmp
inc
mov
lahf
add
enter
into
xchg
pop
jne
push
push
lock
jl
pop
inc
negb
fistpll
mov
mov
rcrb
pusha
sub
adc
lahf
popa
xlat
add
and
sub
add
push
sahf
or
clc
jle
incb
add
int
ljmp
daa
dec
dec
mov
mov
ret
enter
sub
add
xor
inc
repz
cli
mov
push
or
or
pop
adc
fs
test
sbb
pop
xor
jp
xor
pop
loop
mov
pop
xchg
adc
mov
mov
adc
cmp
adcl
jle
inc
scas
rolb
ret
dec
pop
pop
jo
xchg
add
cmpsl
add
loope
inc
ja
imul
dec
adc
mov
sub
or
lock
push
inc
add
fsubl
xor
insl
pop
mov
test
in
dec
aad
push
cld
push
adc
push
mov
add
repnz
into
mov
fs
sbb
cli
lods
out
adc
test
mov
mov
or
outsb
add
insb
jg
cmc
add
icebp
add
cmpsl
ror
xchg
pop
jne
xor
es
sub
add
and
stos
add
push
push
out
dec
pop
mov
sub
leave
out
mov
cltd
sahf
sub
and
push
push
daa
pop
pop
adc
or
push
lods
sbb
insl
clc
sarl
iret
dec
dec
mov
fs
sbb
cltd
pop
mov
xchg
mov
jns
lock
mov
inc
popa
loop
rcrb
cltd
adc
repnz
loopne
int3
mov
inc
add
and
push
xchg
push
clc
inc
sbb
jmp
sub
mov
call
sbb
lret
push
add
cmpl
pushf
cmp
test
mov
mov
frstor
add
int
leave
lret
xadd
nop
xchg
inc
mov
shlb
scas
incb
rorb
or
insb
jge
repnz
push
inc
xlat
arpl
push
mov
mov
sub
or
mov
adc
adc
add
pusha
mov
cmc
mov
daa
xchg
mov
pop
mov
sub
ja
cli
add
rorl
int
cmp
and
nop
xchg
push
pop
imul
mov
bound
movsb
xrelease
cmp
jnp
pop
leave
in
add
ljmp
push
hlt
push
pop
popa
loop
mov
pop
jbe
jbe
testb
gs
push
int3
jp
lcall
cmpsb
enter
fdivrp
pushf
add
and
sar
orb
fbld
test
cmp
cmp
fcomi
and
xor
jmp
sbb
and
in
sub
mov
sbb
dec
push
testb
xor
cmp
std
add
and
adc
movsb
test
dec
gs
push
jp
sbb
adc
mov
xor
add
push
push
ds
out
daa
out
inc
icebp
test
dec
adc
das
int3
and
fprem1
pusha
js
loope
jp
add
iret
fwait
xchg
xchg
cmpsl
repz
mov
outsl
mov
es
mov
jae
pop
lods
pop
xor
sbb
push
loop
fistpll
jne
and
add
int3
stos
cmpb
je
jno
jne
sub
push
push
add
cmp
out
adc
add
mov
cmp
clc
xor
xor
aad
mov
mov
rcll
xchg
add
imul
inc
mov
xchg
jl
mov
popf
fsub
xlat
cmp
adc
cmp
aad
pusha
fstp
dec
dec
pop
add
popa
pop
push
xchg
mov
into
and
xlat
out
lods
add
pop
or
jl
ret
xchg
mov
enter
aas
jecxz
popa
jnp
stos
test
dec
lock
das
cmpsl
jp
mov
xchg
sti
jnp
adc
adc
mov
ja
cmp
push
test
scas
dec
cmp
jle
sbb
inc
dec
stos
push
int3
paddw
jbe
mov
mov
adc
add
ret
and
int
je
inc
sub
pusha
adc
sti
enter
push
popf
lock
jbe
mov
stos
stos
push
into
in
lret
dec
repnz
jecxz
push
cmc
push
mov
or
je
pop
mov
or
pusha
pop
dec
push
or
sbb
out
pop
and
ds
fdivl
add
hlt
xor
lcall
mov
rclb
popf
mov
pop
shll
in
hlt
cwtl
sub
or
lret
cmpsl
inc
and
in
inc
aaa
jecxz
adc
or
sub
dec
mov
adc
and
jnp
xchg
add
pop
sbb
mov
popf
xor
mov
cmpsl
ja
or
rcll
movsl
dec
movsb
inc
fldt
inc
sti
pushf
mov
and
clc
imul
cs
das
jbe
fiadds
or
add
add
nop
popa
xchg
pop
jae
sbb
fcoml
sub
in
add
fcmovu
repz
imul
xchg
xorb
mov
jmp
mov
cld
adc
pop
push
xchg
adc
or
lahf
mov
sahf
inc
add
xlat
fpatan
xchg
std
cmp
mov
inc
add
sti
add
pop
adcl
cmp
pop
pop
dec
scas
dec
adc
popa
call
pop
dec
leave
stos
push
fimuls
mov
fcompl
les
or
push
sub
pushf
lock
adc
mov
dec
adc
dec
add
aas
pop
fistpl
sarb
inc
cwtl
push
rcll
daa
xor
xor
in
popf
fidivs
dec
fnsave
adc
test
fucomp
pop
mov
cli
rorb
push
push
ljmp
pop
mov
fsubrl
adc
lcall
xor
or
adc
clc
sbb
jae
add
cwtl
fidivs
fs
add
fwait
and
sarl
mov
arpl
fnsetpm(287
in
call
add
add
dec
mov
cli
aam
cli
popf
test
fiaddl
les
es
xchg
jno
in
push
xchg
add
xchg
insl
daa
dec
fdivs
pop
mov
shlb
jmp
mov
aam
adc
sbb
xchg
stc
adc
mov
dec
push
fimull
xchg
add
sbb
inc
into
mov
push
cmpsb
push
xchg
pop
mov
mov
inc
mov
and
in
data16
lcall
xchg
jle
xchg
stos
inc
sbb
test
sub
adc
bnd
leave
shlb
cltd
aam
add
mov
adc
pop
push
dec
mov
pop
call
scas
test
jb
rcll
adc
sbb
or
jp
or
adc
jl
mov
out
loop
int3
inc
lock
adc
iret
add
es
push
js
xchg
bound
and
adc
or
sbb
in
jno
lcall
and
out
mov
sbb
in
xor
xchg
les
mov
add
cmpl
icebp
add
js
push
pop
je
add
cmp
scas
mov
adcb
fsts
addb
repnz
dec
enter
add
and
or
cltd
insb
or
ror
and
lods
sub
incl
inc
push
jno
push
inc
enter
ds
test
mov
sub
pop
dec
lds
xchg
hlt
sub
ja
ljmp
cmp
data16
sub
popf
adc
pusha
cmp
xchg
pop
pusha
mov
adc
lcall
jbe
stc
sbb
and
dec
lahf
sbb
sbb
movsl
inc
sbb
mov
popf
xor
xor
jge
cmp
sub
sub
add
adc
push
sbb
stc
lahf
jae
pop
rcrl
xchg
and
push
shl
pop
subb
insl
mov
or
aam
and
nop
mov
mov
cmp
decl
sub
ret
add
jo
sbbb
ror
repz
or
or
pop
xchg
or
popa
jbe
rol
fidivs
add
fildl
cmpb
or
push
add
jle
imul
in
pop
in
pusha
mov
les
mov
push
out
out
cmp
and
dec
pop
mov
lret
or
ret
sub
popf
adc
jo
popf
cmp
pop
adc
push
lods
sbb
xchg
jbe
loope
loope
dec
xchg
fs
inc
movsb
outsb
pushf
cmp
aad
stc
jne
xchg
sbb
outsl
pop
and
aas
nop
jo
mov
lcall
mov
pop
or
pop
mov
pop
lret
sti
outsb
loop
enter
shlb
add
sahf
stos
pcmpeqd
adc
fucomi
mov
mov
sub
pusha
mov
cmp
cmp
popa
addr16
out
lds
repnz
test
xor
fiadds
and
push
call
xor
imul
mov
popa
push
or
test
nop
mov
mov
lods
add
aaa
test
add
std
xchg
adc
xchg
ljmp
add
pop
cmp
mov
sub
cltd
mov
mov
pushf
popf
mov
mov
push
and
jl
add
ret
xorb
inc
roll
hlt
aas
scas
pushf
adc
in
rolb
xor
lahf
adc
dec
jno
movsl
shl
mov
push
movsl
jl
bound
subl
repz
add
xchg
xchg
cmp
push
mov
and
pop
ffreep
in
cmc
xchg
faddl
repz
push
adc
daa
sub
add
adcb
sti
dec
jmp
orb
inc
and
mov
or
arpl
xchg
push
jmp
jl
popf
std
sub
test
add
inc
jo
xor
inc
dec
pop
jnp
pop
out
testl
int
jb
add
gs
shrb
add
add
mov
es
fs
mov
lods
adc
inc
mov
nop
ljmp
push
sub
insb
inc
or
push
mov
stc
es
mov
in
xchg
shll
js
and
loope
mov
fcomps
repz
lret
lahf
in
data16
into
pop
xchg
dec
mov
fldl
push
jecxz
inc
das
es
push
xlat
jl
xor
jnp
jo
jne
mov
stos
adc
mov
push
pop
sbb
dec
pushf
stos
fs
lea
jne
jbe
add
add
fisttpll
and
add
push
inc
test
sub
pop
cmp
cmp
mov
jae
push
lods
sbb
xor
lock
jbe
ficoml
or
aas
or
jno
sub
sbb
sbb
and
jmp
rolb
scas
daa
dec
pop
jl
sbb
ja
dec
loopne
or
test
icebp
scas
out
mov
orb
xchg
fmull
mov
in
daa
mov
orl
out
gs
pusha
call
mov
cld
popa
mulss
mov
fimuls
lcall
data16
or
xchg
cmc
xchg
lahf
pop
jmp
mov
or
outsl
inc
dec
mov
in
or
cld
pop
xchg
inc
in
mov
jne
fidivrl
ret
add
sbb
add
outsl
das
imul
jmp
sub
lret
or
xor
jmp
mov
mov
sub
mov
jg
xchg
add
cld
push
xchg
into
push
add
test
shlb
pop
mov
xchg
out
sub
aam
jl
scas
daa
cmpsl
and
or
mov
and
imul
inc
add
xor
imul
sbb
rol
xchg
xchg
xchg
scas
call
fstl
insb
daa
pop
pop
inc
repnz
xor
xchg
por
shrb
subb
cmpsb
lahf
in
add
je
vmovntdq
lret
lods
cmp
scas
lcall
push
jmp
and
in
sbb
test
std
subb
mov
lods
mov
xchg
mov
scas
push
call
cmpsl
in
stos
sub
xchg
mov
jecxz
mov
popf
in
cmp
shlb
and
in
popf
cmp
mov
jl
rolb
lcall
xor
cli
and
xchg
dec
jmp
lcall
mov
mov
js
xchg
sti
lock
daa
push
xchg
inc
ficompl
push
das
das
outsb
idivb
out
fsubl
cmp
push
cmp
jno
pop
add
xor
xchg
push
outsl
sub
les
mov
add
sti
and
mov
dec
loopne
add
add
mov
jnp
icebp
in
or
hlt
movsl
mov
outsl
jg
inc
pop
sbb
dec
add
mov
clc
cld
in
inc
mov
cltd
sub
adc
xchg
js
add
jne
jae
out
mov
das
sarl
and
mov
sarb
jmp
mov
add
jp
or
pop
xchg
add
lret
mov
fdivs
mov
mov
iret
daa
fdivrl
mov
pop
or
mov
stc
mov
inc
mov
lods
pop
sbb
jmp
pop
mov
popa
jle
pop
push
insl
add
xor
je
adc
seto
jbe
dec
mov
or
pop
nop
stos
outsb
mov
cltd
test
in
ret
into
mov
fbstp
fnsave
mov
push
pop
fiadds
fwait
push
add
loopne
cs
jns
add
les
or
outsl
or
cltd
mov
or
push
leave
mov
in
shrl
outsl
xlat
mov
jle
cmpsb
add
or
pop
cwtl
cmp
mov
or
push
pusha
fmul
sbb
cs
mov
push
push
enter
outsb
push
add
mov
shlb
cmp
sbb
xchg
mov
push
into
mov
repz
dec
stos
jl
faddl
stos
lods
inc
xlat
cwtl
dec
mov
adc
or
fnstenv
dec
dec
fwait
aaa
sbbb
and
push
int3
rcrl
add
loope
pop
int3
sbb
out
or
sub
jns
mov
in
in
inc
stos
push
loopne
fimull
scas
cmp
stc
adc
push
push
mov
lds
mov
rolb
ret
push
mov
loop,pt
loope
add
daa
in
in
mov
sub
sub
pop
es
adc
movsb
stos
mov
push
outsl
xchg
push
ret
je
dec
add
mov
gs
int
das
nop
cs
gs
mov
fbstp
push
jmp
fsubrs
enter
mov
inc
pop
jmp
xchg
pop
add
test
push
push
cmp
or
sub
pop
out
pop
sbb
int
cmc
xchg
mov
cmp
mov
daa
push
sti
inc
push
inc
pop
and
and
dec
sbb
leave
imul
scas
inc
or
jmp
pop
mov
testb
jne
in
sbb
call
mov
sub
pushf
or
add
out
mov
jmp
aaa
ljmp
hlt
or
push
cmovae
outsl
js
imull
pop
add
mov
sub
push
pop
sub
xchg
test
add
sarl
mov
xchg
mov
push
or
add
out
cmpsb
add
lahf
fsubrl
shr
dec
pop
test
test
mov
xchg
xchg
out
cmc
pop
cmpl
cwtl
dec
adc
test
pop
pushf
pop
sti
cmpsl
mov
pop
das
js
pop
into
dec
xlat
daa
rorl
jo
shll
add
mov
push
add
bnd
sarl
mov
push
mov
pop
or
sbb
push
and
adc
iret
imul
xchg
pusha
inc
jae
lahf
nop
fildll
movsb
add
test
push
divb
and
lds
sbb
sub
outsl
outsl
pop
xlat
cli
xor
xchg
pusha
push
add
out
dec
and
pop
jns
and
int3
mov
cs
loope
cmp
mov
lret
sahf
push
mov
xor
pushf
cmc
orl
shll
add
and
dec
lret
jns
ljmp
xor
jge
push
pop
mov
and
loope
or
hlt
jae
mov
xchg
fcmove
xchg
test
adc
push
sbb
fsubrs
cmc
ret
cmpl
loopne
jecxz
xor
ficomps
mov
in
xchg
inc
push
daa
inc
push
mov
roll
push
xchg
xor
and
out
adc
pop
push
jmp
cmp
jle
test
sub
pop
mov
call
sbb
push
mov
inc
roll
lods
pop
out
add
sbb
jl
rcr
or
rorl
pushf
insl
xor
xchg
dec
adc
mov
adc
pop
push
aaa
lea
mov
sub
push
adc
cmp
stos
mov
dec
fildll
rolb
mov
test
mov
add
aad
add
and
rcll
lret
movsb
pop
mov
xchg
in
out
rclb
outsb
cmp
lods
aam
and
sahf
fstps
loope
add
fwait
ret
in
nop
sub
add
dec
push
add
test
jno
sbbl
cmp
mov
mov
add
add
xchg
push
adc
add
mov
push
jno
cs
mov
test
clc
cmpsl
repnz
pop
andb
iret
lcall
and
inc
sbb
ret
mov
push
cli
push
jb
push
movl
inc
sbb
xor
cs
add
mov
mov
into
push
cwtl
dec
xchg
add
and
fldcw
test
fdivrp
inc
add
js
icebp
dec
dec
add
jae
fisubrs
jge
addb
testl
ret
popf
or
daa
and
pop
dec
mov
je
enter
pop
in
mov
mov
lods
mov
xchg
scas
popa
add
lahf
or
cwtl
arpl
jmp
popf
mov
into
mov
xor
jmp
popf
and
xor
fildll
mov
add
xchg
dec
out
xchg
outsb
jmp
jmp
add
fisubrs
jno
mov
inc
cs
nop
mov
jg
sbb
jmp
and
adc
test
and
mov
test
push
cmp
shlb
in
cmp
dec
hlt
add
repz
mov
adc
pop
mov
and
push
and
or
mov
push
stos
xor
push
or
pusha
hlt
adc
stc
adc
or
jmp
add
addr16
out
jb
mov
stc
inc
out
mov
inc
test
ficomps
dec
sub
mov
push
lret
out
or
xor
popa
add
dec
popa
test
test
add
movsl
add
ds
jp
fdivrl
fstps
ljmp
js
in
mov
mov
cltd
pop
dec
xor
lret
xchg
dec
mov
bound
pop
push
mov
orl
adc
or
nop
sub
mov
jl,pn
inc
pusha
mov
cmc
add
cwtl
push
popa
or
or
imul
sti
cmp
mov
cltd
adc
imul
add
lods
xor
psubd
lret
mov
push
pop
push
xchg
xor
decb
out
pop
jno
add
lret
scas
adc
pop
repnz
mov
lods
mov
out
lret
cwtl
sub
push
mov
mov
jo
pop
add
fimull
pop
adc
ljmp
popa
nop
and
adc
mov
adc
xor
test
jg
fld1
movsl
mov
xor
les
fsubrl
jbe
add
xchg
xor
fsubrp
bound
pusha
inc
and
sub
pop
iret
cmpb
xchg
cmp
outsb
ljmp
dec
aaa
lods
movsb
pop
jne
add
shlb
mov
lock
lods
es
push
rcll
rcrl
int3
testl
sbb
add
cmp
je
movsl
aam
hlt
add
mov
lea
adc
and
add
mov
int3
sbb
cltd
and
sbb
pop
push
add
adc
daa
call
stos
mov
addr16
or
dec
mov
ret
adc
xchg
repz
clc
pop
jns
add
stos
filds
rolb
filds
xor
clc
pop
mov
in
push
lcall
jg
or
incb
into
adc
cmp
movsb
ret
and
test
addl
jp
jo
xor
in
nop
aaa
jmp
and
cmpb
ss
add
das
test
mov
push
adc
pop
popf
js
and
jmp
xor
xorl
pop
cwtl
jmp
add
push
dec
and
scas
xor
stos
jae
imul
addr16
leave
shll
lock
fsubl
mov
stos
shll
out
outsl
and
add
leave
add
mov
dec
aaa
mov
jl
addr16
or
add
popa
mov
push
push
pop
mov
fdivs
add
xlat
mov
imul
jge
mov
and
sbb
inc
jecxz
imul
fbstp
push
mov
int3
dec
xchg
inc
and
aam
jno
lcall
stc
pop
in
je
jmp
and
dec
stc
push
scas
xor
jo
rcrl
cmpsl
inc
and
cmc
flds
mov
pop
pop
add
xchg
or
test
rol
insl
sub
push
cld
pop
das
stc
pop
jecxz
mov
or
gs
test
fsubs
fimuls
xchg
pop
enter
xchg
jb
add
clc
dec
adc
daa
sbb
sub
sub
cmp
aas
jae
adc
out
xor
sbb
insl
popa
pusha
adc
daa
mov
inc
mov
dec
add
jmp
cmp
ljmp
dec
push
pop
call
mov
mov
leave
jae
cmc
enter
adc
jmp
insb
sbb
lcall
or
or
notw
pusha
xor
pop
inc
lds
mov
push
mov
cmp
lock
sub
popf
sbb
push
divb
push
jle
popa
test
cld
ds
test
int
das
xor
pusha
addl
ljmp
rcl
test
out
lret
mov
adc
rorb
mov
hlt
sub
repz
mov
cmpsb
mov
add
mov
lcall
popf
cwtl
repnz
idivl
js
rolb
outsl
jns
push
or
rcll
stc
sbb
outsl
clc
pop
adc
adc
add
pop
repz
jno
lcall
jge
mov
clc
mov
ljmp
xchg
in
inc
xor
fdivrl
movsl
ja
and
pushl
aas
pop
xchg
movsl
mov
adc
mov
les
add
cmp
hlt
sbb
or
pop
mov
repnz
test
add
add
mov
push
lea
adc
shrl
mov
das
daa
jne
mov
jbe
add
add
hlt
shlb
int3
jbe
push
mov
add
add
out
cmp
in
mov
test
mov
and
punpckhdq
adcb
xor
adc
inc
pop
decl
mov
mov
out
es
cmp
sbb
sub
jbe
sarb
das
lea
shr
nop
mov
and
mov
mov
cmpsb
ror
adc
into
xor
xchg
push
push
test
jo
cwtl
movsb
xchg
lret
test
xor
sub
mov
jp
mov
mov
aam
mov
xchg
sub
jl
mov
es
das
xor
lods
lret
adc
stos
dec
or
out
push
in
jp
mov
in
mov
sub
ss
test
lock
fwait
push
cltd
mov
outsl
test
out
sbb
dec
or
mov
ljmp
sub
movsb
popf
xchg
pop
andb
call
pop
mov
call
xchg
and
or
insl
dec
jecxz
mov
sbbl
out
movsb
js
jne
aam
shlb
lods
dec
xchg
dec
popa
mov
add
in
mov
push
mov
dec
sub
enter
sub
add
out
repz
aas
sar
mov
ljmp
nop
jnp
fidivl
repz
xor
add
ds
stc
mov
lods
shl
pop
cs
xor
mov
mov
dec
adc
in
add
pop
into
and
fisubl
hlt
repnz
jns
popf
xor
mov
push
push
xor
roll
scas
roll
xchg
das
in
lods
pop
xchg
push
daa
mov
repnz
es
sahf
or
cmp
jmp
loop
shl
int
in
subb
jg
loopnew
sarl
sub
outsl
xor
fmull
xchg
dec
fdivr
fdivl
and
adc
sub
in
dec
jmp
enter
push
push
mov
dec
or
adc
add
in
shlb
mov
subb
dec
adc
pop
mov
movsb
inc
test
ljmp
add
sbb
push
aam
gs
lcall
subl
loopne
dec
rdtsc
xchg
rcrb
daa
sbbb
inc
xchg
retw
popa
adc
enter
popf
arpl
dec
inc
int
js
inc
xchg
push
loope
frstor
cmp
stos
call
adc
test
cltd
cwtl
jo,pn
xchg
or
or
sub
jns
push
jl
call
dec
stos
or
inc
push
mov
mov
jg
push
addr16
mov
je
pop
pop
pushf
dec
xchg
mov
or
mov
sbb
repz
loope
pop
icebp
aas
cmp
testb
out
dec
and
or
ficomps
and
sahf
inc
add
fistpll
add
xchg
mov
loopne
hlt
out
dec
loop
in
mov
out
dec
push
add
push
popa
jl
pusha
add
and
aaa
imul
lcall
repnz
arpl
mov
daa
adc
iret
mov
push
xchg
rolb
or
scas
test
xchg
fnop
cmp
sub
cmp
sbb
and
mov
mov
shr
pop
adc
loopne
loope
add
lea
xor
cld
add
adc
push
arpl
add
jns
ss
pop
sub
sbb
fwait
scas
cmp
and
roll
jne
lods
xor
sbb
mov
or
nop
xor
cmc
imul
mov
out
pop
loopne
stos
insl
popf
cwtl
add
sbb
jmp
js
sub
mov
pop
into
test
pop
xchg
out
mov
adc
pop
mov
aad
dec
sbb
imul
out
mov
lret
dec
jbe
and
add
cmp
nop
scas
into
push
repnz
fbld
leave
pop
dec
lods
sbb
jne
cmp
cwtl
add
mov
aas
das
adc
in
xchg
or
jbe
fldt
push
and
mov
test
sub
mov
cmovbe
dec
add
xchg
imul
popf
push
dec
aam
lret
add
mov
or
scas
sbb
sub
mov
nopl
pop
movsb
add
out
or
xor
push
jb
add
into
jae
shll
lret
fisubrl
fbstp
pop
xchg
aam
pop
add
jne
add
jns
jl
sbbb
testb
add
daa
scas
int3
xlat
enter
and
lret
movsb
add
and
idivl
adc
andl
inc
cmc
or
add
mov
push
mov
test
call
gs
hlt
mov
or
cmp
pop
loopne
sbb
call
dec
imull
sbb
pushf
add
call
xor
pop
xor
adc
mov
mov
pop
cmpsb
sti
sbb
fiadds
ljmp
in
sbb
out
mov
ds
jge
insb
add
fs
lods
mov
movsl
sbb
mov
imull
dec
call
hlt
sbb
xchg
mov
fs
bound
enter
cmp
adc
push
hlt
outsl
add
mov
sub
jo
adc
scas
dec
cltd
shll
and
fsubl
pop
aaa
add
and
test
jne
das
push
sbb
call
imul
clc
and
jo
imul
sahf
stos
cmp
adc
or
aad
adc
jno
xchg
repnz
repz
sbbb
dec
js
add
jae
add
pop
fimuls
imull
jb
adcb
mov
inc
add
in
lcall
mov
jge
wrmsr
sub
data16
aad
sub
int3
and
mov
add
lods
adc
enter
cmp
add
mov
int3
pop
mov
or
adc
add
add
cmp
outsb
add
push
loop
ret
jb
inc
dec
pop
jecxz
push
scas
iret
pop
lock
adc
xchg
inc
sub
addl
scas
cmp
cmp
jno
addr16
and
inc
jp
jnp
lock
add
xor
xor
and
pop
movl
fistl
test
or
sub
fnstsw
inc
xchg
fcomps
jmp
pop
mov
cmc
sldt
dec
and
xchg
or
adc
adc
out
push
xchg
xchg
mov
add
enter
sbb
sbb
push
rcll
lock
push
mov
xor
add
test
push
or
mov
ficoms
adc
les
outsl
push
rcrb
mov
add
pusha
jns
paddsw
sahf
scas
add
mov
sbbl
insl
mov
shrb
vmptrst
mov
rcr
fistpll
inc
mov
adc
add
int
rolb
or
sub
add
push
out
out
add
pop
mov
movsb
push
shrl
jae
push
ss
negl
mov
sbb
jmp
add
shlb
and
loopne
jbe
add
imul
imul
pop
cmpb
or
jl
add
sbb
fsubl
xchg
mulb
and
aas
loop
add
es
test
ss
add
add
gs
add
test
add
cltd
cmpsl
out
mov
jg
outsb
movsb
xchg
fcompl
rolb
in
loop
sarb
pop
cmp
mov
adc
inc
jl
sub
dec
aad
jl
sbb
in
loop
bound
mov
adc
clc
cmp
adc
sub
mov
pop
inc
aaa
lods
addb
or
dec
sub
test
or
or
jp
push
mov
pop
mov
add
inc
call
bound
jne
push
popa
test
jp
in
add
mov
ret
fs
xchg
mov
sbb
shrl
add
jnp
pop
add
sub
jbe
jno
push
hlt
test
std
inc
shll
mov
pop
xorb
aam
push
outsl
xor
movsb
pop
cs
incl
outsb
icebp
imul
into
push
xor
add
mov
dec
sbbl
pop
call
push
jae
add
lcall
es
outsb
xor
clc
or
mov
sbb
std
add
cmpl
or
mov
mov
inc
ret
and
pushl
sbb
jbe
xor
bound
inc
shlb
push
in
lods
ror
or
push
fidivrl
dec
js
and
adcb
add
data16
push
dec
stos
inc
js
stos
in
xchg
cmp
jp
imul
scas
lods
adc
push
ljmp
mov
cmp
repnz
inc
call
push
and
inc
add
enter
add
dec
stos
insl
cmp
jns
mov
pop
rolb
nop
pop
std
or
inc
movsl
mov
add
repnz
test
icebp
add
fdivrs
or
outsl
add
and
dec
adc
push
sub
jo
push
sarl
imul
rcll
int3
cmpsl
gs
orb
or
sbb
leave
pop
shrl
push
out
je
and
adc
test
mov
jno
inc
sub
xchg
jae
int3
add
aaa
test
mov
ss
dec
xchg
mov
aam
in
xor
jnp
jne
lret
add
mov
loopne
out
add
or
inc
add
stos
push
inc
add
add
pop
fisubl
dec
xlat
jno
sub
add
shlb
adc
xchg
icebp
sub
dec
mov
xlat
inc
repz
add
stos
ror
add
adcb
xlat
sbb
push
dec
scas
sub
fiaddl
addr16
lods
mov
inc
in
adc
aas
mov
fwait
mov
cmc
xor
outsl
push
out
fisubs
jbe
push
jp
adc
es
adc
dec
xchg
inc
test
mov
imul
xorb
pop
mov
and
sbb
jmp
sbb
dec
mov
jp
jnp
cmp
mov
jg
rcrb
ret
xchg
int3
inc
ss
data16
and
sar
jg
add
sub
clc
jecxz
pop
add
jo
jp
push
adc
sbb
imul
aas
lldt
setb
loopne
jecxz
test
inc
jns
mov
xchg
jnp
dec
mov
dec
loopne
leave
pop
in
js
js
add
scas
iret
push
or
mov
add
xorl
filds
and
jne
xor
mov
mov
adc
xchg
push
popf
and
xor
enter
lods
xor
cwtl
sbb
fwait
xchg
add
shlb
xchg
sub
movsb
dec
fdivrs
jo
dec
sahf
add
xor
imul
fisubs
pusha
and
pop
in
xchg
add
or
sbb
fs
lock
clc
out
add
addb
cmp
pop
popa
mov
push
mov
sbb
jle
and
rcr
idivl
fisttpl
repz
adc
or
or
out
cmp
dec
cmc
jne
aad
add
mov
pop
ja
pop
mov
and
add
push
mov
sub
inc
or
mov
push
mov
cmc
movb
pop
or
data16
mov
add
rcrl
inc
or
add
or
ljmp
xchg
pop
out
sbb
mov
add
loopne
push
dec
pop
xor
jecxz
loope
mov
iret
cmp
mov
popf
out
push
pop
cli
sahf
add
loopne
shlb
sbb
or
fstps
aam
lret
dec
pop
jmp
adcl
shlb
pop
adc
int
push
hlt
cmpsl
fstps
hlt
sti
icebp
xor
dec
sub
xchg
pop
jno
mov
jp
add
mov
mov
out
cpuid
sub
or
push
adc
addl
stos
sub
xchg
mov
nop
outsb
jecxz
or
pop
push
xor
sub
lret
call
clc
jae
shrb
add
lods
bound
adc
mov
sub
aas
xchg
xor
fists
and
enter
xor
cmp
xor
mov
push
cmpsb
jns
mov
or
add
mov
push
dec
test
mov
xchg
add
mov
aad
add
mulb
adc
imul
or
or
popa
pop
xorb
popf
xor
push
dec
jecxz,pt
test
loopne
cmp
cwtl
lods
mov
iret
add
pop
sbb
add
xor
fcompl
add
in
or
mov
inc
testb
sub
out
jp
clc
mov
sub
mov
ds
mov
lds
inc
pushf
xchg
test
adc
test
hlt
das
pop
nop
fimull
xchg
divb
inc
mov
aaa
fwait
pop
xchg
mov
or
popf
insl
mov
sbb
jb
push
sti
adc
add
xlat
xchg
aad
push
pop
mov
int
mov
mov
sbb
xchg
movsl
in
jp
mov
cs
pushf
iret
movsl
adc
pop
mov
xchg
aad
add
popa
inc
jne
add
jno
or
pop
jmp
rclb
add
sub
mov
inc
cmpsb
stos
mov
mov
inc
imul
fstl
inc
pop
adc
xor
add
mov
adc
or
test
jmp
push
insb
sbb
push
push
jmp
add
mov
jmp
inc
pop
popf
add
push
or
push
and
mov
pusha
or
jmp
sub
xchg
xchg
or
popf
std
out
push
fadds
pop
cld
inc
mov
in
mov
imull
dec
xchg
inc
or
mov
dec
xchg
and
incl
mov
gs
in
jne
dec
or
jnp
adc
decb
test
inc
and
lahf
mov
pop
dec
inc
rcr
out
pusha
pop
jle
cmpsl
fwait
lods
ret
ja
jle
scas
push
xchg
and
jo
rolb
adc
call
cmp
cs
jne
lods
mov
popf
frstor
push
insl
imulb
jo
jb
call
arpl
mov
sbb
enter
jle
add
testb
mov
adc
jmp
push
mov
inc
fisttpl
cmp
loope
push
adc
mov
add
mov
pop
shrl
mov
xchg
faddl
rorl
cmpb
jno
inc
out
inc
mov
fisubs
cmp
fadds
cld
shll
mov
cmp
add
jmp
mov
subl
nop
clc
fists
mov
ret
scas
inc
add
nop
jne
das
pop
cmpsl
imul
dec
bound
cli
xor
pop
pop
pop
cmp
loopne
mov
sti
sti
repnz
push
cmpb
and
or
test
dec
aad
int
jp
cmp
mov
adc
imul
sbb
int
leave
insb
cmp
or
ret
and
or
notb
imul
stos
jg
adcl
cld
push
sarb
xchg
xor
aam
xchg
or
sbb
or
cmp
mov
mov
add
jp
fs
ja
jbe
pop
and
rolb
rorb
push
or
fidivrs
add
nop
cltd
push
rolb
mov
push
add
repz
scas
and
lods
sub
imul
scas
jle
mov
into
mov
mov
cld
add
jb
scas
adc
cmp
xchg
cmp
pop
hlt
lret
sub
enter
cmpxchg
add
movsb
push
aad
js
push
inc
mov
fidivs
aaa
mov
jnp
xchg
mov
add
xor
pusha
jo
add
out
push
shlb
or
sti
dec
mov
mov
or
add
pusha
cmp
insl
add
mov
popa
jg
inc
and
aas
xchg
test
scas
mov
jg
outsb
out
outsb
verr
js
and
test
sub
push
pop
push
mov
and
add
and
pop
es
pusha
in
jge
lea
jle
xor
scas
jo
test
or
push
pushf
aas
push
data16
xorb
xor
sub
xchg
mov
mov
jle
shl
das
or
xchg
pop
pop
sbb
pop
lock
repz
and
mov
aas
push
out
pusha
or
jle
add
test
sub
test
dec
nop
pop
pop
mov
repnz
inc
in
nop
lock
idivl
aas
mov
cmp
popa
cmpsb
push
loopne
push
add
mov
es
adc
inc
mov
mov
js
pop
mov
cs
pop
mov
inc
mov
jmp
fcomip
pop
push
lods
enter
xchg
jne
jle
sub
pop
push
add
push
dec
repz
shlb
scas
xchg
nop
mov
movsl
lods
mov
cld
ljmp
dec
in
pop
rcr
cmp
jmp
imul
mov
xchg
mov
or
or
and
or
imul
nop
sbb
ljmp
testb
ja
shrb
cmpsb
pop
outsb
mov
test
or
dec
gs
add
out
fstps
idivl
pushf
lods
cmp
mov
je
out
cmp
jp
popa
xchg
adc
push
push
add
into
fidivrl
jne
mov
pusha
test
loope
jp
pop
add
repnz
leave
xor
in
repnz
push
adc
mov
mov
mov
jle
sti
call
inc
push
and
push
cltd
iret
add
xchg
imul
popa
jp
fnstcw
negl
es
addb
fidivs
add
arpl
repz
pushf
loope
pusha
mov
pop
mov
popa
mov
push
push
jmp
add
mov
cmp
mov
add
mov
xlat
cmp
xchg
pop
scas
imul
adc
pop
mov
ja
mov
inc
leave
cmc
outsl
xchg
mov
inc
pop
mov
jmp
pop
lods
mov
mov
cmc
les
enter
hlt
and
inc
xchg
outsl
push
dec
pop
mov
xchg
inc
movsl
mov
xor
and
xor
repnz
pop
in
mov
cmp
sbb
mov
idivl
inc
jne
jg
xor
inc
mov
aam
stos
outsb
testb
fwait
imul
loopne,pt
negl
mov
dec
arpl
clc
mov
cltd
cmpsb
les
mov
popf
mov
jae
movsl
inc
call
leave
dec
sbb
add
mov
bnd
dec
gs
icebp
cs
sub
fcoml
add
inc
sub
jnp
imul
int
inc
sbb
mov
clc
lods
fcompl
push
inc
or
or
pop
sbb
cmpsb
sbb
or
cmp
jo
nop
cmp
aaa
add
mov
add
dec
lret
fisubl
fucompp
in
mov
adc
adc
outsb
jge
push
lret
xchg
and
dec
add
shll
and
mov
xlat
and
lret
pop
lods
addl
pop
mov
bts
repnz
xchg
pop
jecxz
sbb
iret
sbb
daa
push
pop
pusha
cli
pop
mov
push
push
lahf
cld
xlat
hlt
push
rcll
fwait
stos
ret
js
push
clc
dec
sub
ror
les
je
int
das
mov
jo
add
mov
movsl
andb
das
xor
call
xchg
xchg
dec
jo
loope
outsl
xchg
add
mov
and
or
cmp
push
mov
das
addr16
pop
pop
adc
jg
jecxz
jmp
jmp
enter
mov
jae
xor
jl
jmp
mov
cmp
pop
mov
movsl
mov
mov
outsb
add
xchg
mov
sti
mov
xchg
cmc
inc
sbb
ficompl
sbb
fwait
push
adc
jns
call
jmp
addb
pop
xchg
push
add
push
jnp
inc
or
test
xchg
pop
add
dec
arpl
jecxz
inc
out
lock
hlt
jle,pt
add
fidivl
adc
mov
imul
sbb
pop
shlb
scas
cld
stos
popa
adc
mov
addb
pop
add
mov
inc
in
add
push
mov
insl
outsl
mov
adc
scas
dec
imul
cmpsl
or
out
mov
rcr
or
mul
ds
cltd
inc
or
mov
xchg
data16
ret
aad
mov
xor
cli
xor
shlb
adc
sub
mov
add
mov
xor
and
xchg
jge
adc
in
push
and
cmc
sub
dec
addl
inc
xor
fldt
rcrb
and
shrl
test
pop
lcall
cli
cld
fwait
inc
pop
or
dec
and
fldenv
sbb
mov
adc
pop
call
movl
jbe
and
mov
ljmp
repz
and
das
not
mov
xchg
jl
push
dec
cmp
adc
and
xchg
add
stos
xor
add
dec
adc
clc
pusha
xchg
add
popl
in
xor
cmpsb
stos
and
adc
jne
test
add
pop
in
sbb
adc
mov
pop
pop
insl
and
in
mov
add
push
in
push
or
pop
enter
inc
sbb
mov
scas
push
pop
into
sbbb
fmul
repz
sub
push
xchg
add
push
jecxz
add
dec
xchg
iret
hlt
mov
mov
or
ds
mov
pop
mov
sub
sub
push
pop
repz
leave
push
ret
pop
lahf
nop
mov
xor
mul
jno
push
xorb
xlat
jg,pt
pop
mov
push
dec
out
jno
mov
fcomi
sahf
subl
enter
lcall
adc
add
addb
xor
pop
mov
or
fsubrs
test
mov
xor
ja
es
or
jp
insl
mov
inc
cwtl
pushf
outsb
es
daa
cld
fiadds
mov
jp
mul
mov
push
jecxz
lret
jmp
das
and
test
pop
cmp
adc
push
push
jl
sbb
pop
jbe
cmp
jge
xchg
loopne
jmp
cli
iret
inc
daa
push
push
jmp
lea
xchg
and
loope
lods
xchg
movsl
bound
mov
xchg
daa
and
imul
adc
loope
gs
mov
push
push
cld
mov
sub
inc
and
adc
cli
dec
add
in
flds
cld
dec
in
aad
cmc
pusha
pushf
jecxz
add
cmp
jo
and
adc
arpl
sti
addr16
adc
icebp
loope
mov
out
addr16
ss
adc
mov
push
inc
lock
sbb
xchg
add
fnstsw
bound
mov
imul
faddl
cmp
push
adc
fistps
pusha
ds
push
pop
push
push
cltd
or
add
clc
pop
push
cwtl
mov
adc
sbb
xor
push
mov
daa
mov
js
pop
fcmovnbe
adc
scas
adc
mov
cmp
push
add
flds
jo
jne
int
mov
mov
and
lds
sub
mov
lock
cltd
sarl
push
aas
popf
out
fnclex
jne
add
loop
sub
add
jne
mov
sti
mov
pop
sbb
dec
or
mov
mov
movsl
dec
mov
dec
andb
int
add
pop
outsb
and
mov
jo
adc
mov
jmp
insl
jmp
or
cmp
dec
stc
cmp
and
call
mov
das
push
outsb
ds
out
dec
xor
sbb
xchg
sbb
or
jle
sbb
cmc
lret
aas
cmpl
decl
sbb
mov
fmul
nop
insb
dec
add
and
js
xor
dec
jg
pop
push
lcall
fs
adc
push
pop
mov
or
ret
add
divb
jnp
cmp
aas
mov
mov
xchg
loopne
mov
and
popf
popa
dec
sub
jl
outsl
pop
pop
cli
das
sub
lahf
test
pop
lahf
fdivrl
mov
pusha
loope
ds
imul
add
out
loopne
adc
outsl
push
push
cmp
pop
lea
sbb
add
stc
scas
out
jno
in
out
mov
dec
jle
fxrstor
ficoml
pusha
faddl
xor
sub
addb
lahf
ljmp
push
cmpsb
add
inc
sub
push
cmp
add
mov
and
lcall
out
xor
outsb
mov
adc
es
popf
out
popa
test
add
sbb
mov
ljmp
popf
stc
sub
xor
adc
sbbb
and
andb
in
mov
adc
mov
add
mov
subl
pop
aas
xchg
jae
fadds
add
cli
imul
jmp
pop
test
add
rorl
ljmp
and
sbb
add
ficoml
mov
sbb
push
daa
or
movl
int3
inc
in
add
push
mov
add
hlt
add
aad
je
adc
xchg
scas
mov
sbbb
mov
data16
and
xlat
inc
add
mov
pushf
fiadds
mov
jge
mov
cmp
movsl
in
in
sbb
mov
add
mov
bound
mov
adc
jecxz
push
xor
add
xlat
or
sti
mov
into
mov
shll
xlat
stc
push
xchg
sub
xchg
stos
fmull
add
test
sbb
imul
mov
in
out
xchg
dec
ss
adc
aas
xchg
adc
scas
xchg
add
popa
cs
lret
inc
and
jne
push
js
mov
mov
jns
mov
mov
cld
pop
bound
es
pop
adc
lahf
aas
test
sub
dec
or
in
xchg
mov
lds
movsl
mov
adc
lods
or
jmp
add
stos
xchg
add
mov
mov
and
adc
lret
pusha
jne
adc
stos
adc
scas
xor
stos
add
push
stc
pop
pop
and
movsl
xor
cmp
outsl
dec
out
lret
cmp
ds
scas
jecxz
and
pop
pop
jne
ds
das
adc
mov
dec
cmp
cs
dec
or
imull
mov
pushf
xchg
and
inc
cwtl
add
mov
cmp
xchg
add
xor
add
lds
mov
popa
lods
outsl
or
mov
push
fisubrs
ret
aam
call
sbbl
mov
and
mov
cmpsl
jns
sbb
mov
dec
int3
push
lds
cmp
mov
cmp
stos
pop
popa
pop
pop
add
jecxz
dec
ds
outsb
cmp
add
adc
dec
jmp
fldt
push
popa
add
push
cmp
jp
add
mov
addl
sub
add
push
and
les
mov
lock
popl
lret
inc
adc
sbb
stc
jmp
sbb
push
sub
xor
nop
in
and
push
test
inc
or
leave
std
data16
or
mov
pushf
sbb
adc
jg
xor
jl
sbb
lods
pop
sbb
add
ljmp
mov
sbb
aas
outsl
pop
repz
call
fcompl
sbb
or
xor
mov
inc
popf
pop
mov
ret
inc
nop
add
cmpsl
lahf
test
mov
popa
loope
sub
stos
loopne
mov
add
scas
movsl
xchg
ja
mov
sbb
or
mov
cmc
cmpsl
sbb
inc
cli
nop
mov
push
mov
push
daa
mov
xor
push
pop
mull
daa
lcall
sbb
je
mov
repnz
insb
roll
aas
sub
ljmp
inc
jo
push
lahf
adc
inc
xor
popf
pop
pusha
adc
push
pop
pusha
sbb
sub
push
fdivrs
add
mov
out
lahf
clc
imul
or
sbb
insl
gs
add
push
mov
clc
rcl
dec
xor
test
add
dec
pushf
js
push
das
lock
popa
nop
push
stc
inc
das
inc
lea
mov
mov
cmp
adc
adc
push
scas
mov
inc
adc
pop
and
adc
lahf
add
loopne
inc
daa
mov
fsubp
leave
push
pusha
scas
mov
icebp
leave
push
pop
popa
subb
or
push
push
test
ror
pop
in
pusha
cmp
add
and
mov
and
adc
jno
leave
daa
or
imul
sbb
mov
cmp
mov
pusha
pop
add
push
lret
in
sbb
stos
fnsave
std
into
or
xor
ret
sub
xlat
hlt
xor
shlb
mov
fstl
out
mov
add
leave
stos
adc
sub
and
add
mov
sub
std
lea
rcrb
fcomp
in
lret
test
bound
rclb
stos
add
sub
mov
adc
add
xchg
or
loopne
sub
ret
jmp
dec
pop
jp
and
rcr
nop
arpl
sub
in
daa
pop
in
dec
add
test
mov
xchg
dec
cmp
and
stos
sub
or
push
push
stos
jae
and
pop
in
pop
loopne
cmpps
cwtl
cli
in
rolb
mov
cltd
mov
mov
test
mov
pop
mov
pop
push
fmull
pop
dec
mov
or
add
test
ja
xchg
addl
adc
fadd
clc
cmc
outsl
outsb
xlat
add
mov
mov
shlb
clc
mov
sub
mov
inc
xchg
mov
sub
pop
andl
xchg
mov
dec
popa
divb
push
jbe
imul
inc
mov
adc
enter
push
lret
aas
jg
mov
lret
mov
mov
dec
insb
mov
jnp
push
or
rorl
fistpll
pop
hlt
jnp
or
push
ds
jge
in
addr16
out
aam
aam
mov
outsl
push
dec
pusha
loop
push
rep
add
int
ja
mov
jo
adc
daa
loope
jbe
insl
xor
xchg
push
cmp
inc
mov
pop
jle
push
mov
cmp
test
fucomi
lret
arpl
cmp
in
xor
xchg
int
fistl
mov
xor
rorl
push
jmp
dec
add
daa
rcrb
mov
adc
pop
jns
mov
lahf
push
sbb
iret
ljmp
movsl
push
clc
leave
and
not
cmp
and
cmp
shrl
jge
ljmp
lret
adc
jl
nop
and
sti
xchg
leave
repz
jnp
lret
push
or
pop
popa
cmp
sbbl
push
jae
add
inc
cld
mov
shlb
jbe
movsl
in
jg
sarb
push
adc
inc
mov
push
or
adcb
push
pop
je
bswap
imul
xor
fptan
sbb
call
cmc
dec
jecxz
testl
pop
movsl
or
cmc
icebp
fsts
mov
sbb
add
mov
mov
cmp
decb
test
daa
stos
sahf
sti
mov
inc
xlat
or
jle
sub
sti
xchg
cmp
mov
out
mov
xor
dec
or
hlt
js
popf
aaa
icebp
add
jns
and
lahf
xchg
in
or
push
jg
adc
fstl
pop
xchg
or
inc
shlb
popf
sbb
fsubrs
insb
scas
xchg
lcall
cld
cmpsl
adc
push
std
dec
sbbl
test
jno
xorb
dec
mov
cmp
repz
dec
mov
dec
xchg
hlt
insl
xchg
fnstsw
xorb
test
lcall
push
insb
pop
clc
clc
dec
nop
mov
push
rorl
ret
xlat
insl
imul
popa
loopne
and
jmp
mov
xchg
int
out
jmp
sbb
das
mov
ljmp
mov
dec
sbb
pushaw
add
jmp
adc
cmp
mov
push
ret
sbb
cmove
xchg
aaa
sbb
and
fstpl
jns
stos
jecxz
mov
daa
sub
dec
add
sub
lcall
add
or
mov
loop
sbb
add
out
lods
add
mov
inc
dec
mov
xor
mov
fcoml
lahf
sub
push
add
pop
mov
rol
pop
xchg
mov
xor
js
divb
pop
sub
and
and
pusha
add
iret
xor
stc
cmp
sbb
push
test
jl
lret
out
dec
xchg
cmp
jno
inc
adc
jb
xchg
mov
add
pop
push
movsb
xor
out
jl
mov
mov
push
pushf
push
subb
adc
pop
mov
pop
repnz
pusha
mov
pop
add
data16
lret
push
daa
cmpsb
cltd
dec
ss
and
xchg
push
sub
int3
dec
and
jns
or
xor
roll
sbb
sub
push
out
jg
in
fcomp
mov
cmp
mov
jno
inc
inc
mov
pop
roll
idivl
mov
inc
or
mov
xor
dec
aad
inc
popf
lds
pop
push
psrlq
imul
dec
gs
or
sbb
mov
sub
pop
leave
adc
jns
inc
and
cli
adc
adc
mov
inc
fistps
add
add
dec
lret
fimuls
push
mov
push
repz
lods
in
mov
xchg
lods
and
mov
shrl
or
hlt
add
jmp
add
adc
cmp
incb
mov
pop
or
mov
cmpl
xor
test
mov
sub
cli
jns
inc
adcl
adc
aaa
popf
xchg
cmp
dec
mov
cmp
inc
jnp
mov
stos
dec
mov
fdivr
je
dec
mov
in
mov
aad
int3
push
pop
and
or
mov
call
pop
mov
mov
mov
cli
cmpsb
dec
pop
xchg
out
push
dec
pusha
lds
adc
mov
xlat
xlat
lcall
rorl
dec
jmp
mov
cwtl
dec
inc
and
jg
arpl
roll
nop
int3
sar
add
inc
in
mov
pushf
ret
das
lods
jl
shlb
push
sub
pop
and
cs
jnp
sub
js
pop
clc
jmp
pushf
inc
scas
sub
cmp
sbb
iret
jmp
sbb
jg
cmp
jle
les
pop
stos
shrl
outsl
test
push
divl
inc
mov
cwtl
cmp
sub
jle
sub
mov
push
out
inc
dec
mov
and
inc
push
push
rolb
push
inc
mov
aad
mov
sbb
loope
and
pop
jo
dec
std
pop
and
or
xor
ffreep
sub
add
jns
adc
movsb
es
add
test
add
pop
movzbl
call
adc
inc
rcr
insb
mov
xor
sbb
sub
mov
loop
and
test
xor
cmovg
pop
stos
daa
cmp
popf
call
jnp
xchg
cmpsl
xchg
cmp
and
test
or
loopne
movsb
xchg
and
sub
call
orb
pop
pop
pop
shlb
and
pop
xchg
aad
mov
mov
ret
and
xor
fdivp
fcmovne
and
mov
add
cwtl
or
nop
in
ja
lds
jl
cmp
adc
rclb
iret
cmp
fiadds
lret
add
cltd
andl
dec
cltd
cmpsb
addl
orb
cmp
stos
subb
or
aaa
cmp
insb
xchg
inc
or
push
arpl
cmp
jmp
jb
dec
es
dec
dec
adc
sbb
xchg
test
lret
mov
lods
fxch
stos
push
and
stos
jno
mov
or
add
hlt
inc
sub
fildll
aam
adc
mov
pop
mov
and
cwtl
dec
dec
pop
add
mov
cmc
iret
pushf
rolb
inc
movsl
sahf
mov
mov
cmc
xchg
adcb
jp
mov
loop
loope
stc
mov
out
or
ss
jae
push
faddl
neg
push
int
cld
mov
push
push
mov
pop
lret
in
mov
imulb
pop
mov
cli
xor
cwtl
sbb
fcmovu
lcall
xor
add
inc
jbe
pop
xor
cwtl
push
inc
sbb
mov
pop
xor
cld
cltd
dec
jmp
lds
clc
xor
gs
sub
popf
mov
mov
push
mov
add
stc
outsl
push
stos
imull
js
mov
inc
sbb
and
push
mov
mov
mov
adc
cmp
sarl
mov
xlat
mov
xchg
add
jmp
je
add
add
inc
jmp
cmpsl
xchg
mov
add
jl
adc
pop
push
lods
imul
inc
call
pusha
in
dec
cld
pop
fcompl
inc
cmp
mov
mov
cmpsb
pop
loopne
ljmp
call
data16
sysenter
daa
jns
mov
in
inc
xchg
sbb
cli
mov
ret
and
push
or
xlat
insl
lods
dec
add
addr16
nop
fnsave
das
xchg
push
xchg
inc
nop
daa
dec
inc
es
add
cmp
inc
pusha
dec
clc
inc
add
jg
popa
push
nop
push
mov
out
mov
sbb
shrb
ffreep
add
stos
movsb
jmp
mov
or
aam
stos
jo
mov
dec
mov
xor
jmp
mov
cs
mov
sbb
mov
mov
pop
mov
dec
lcall
out
arpl
adc
push
mov
int
adc
sti
jnp
pop
sub
pusha
shlb
cmpsb
push
out
int3
mov
inc
mov
mov
popa
cmc
xchg
movsb
pusha
popf
pop
sbb
les
lods
sti
push
jb
imull
pop
dec
in
push
test
mov
je
imul
pop
out
cmp
and
cmpsl
lds
in
jle
sub
pop
mov
and
pop
mov
mov
mov
sarl
xchg
push
aam
movsl
fs
lcall
aaa
and
rcr
dec
xlat
add
jae
or
or
rcll
subl
pop
mov
sbb
or
shlb
daa
pop
dec
adc
jno
add
shr
cmpb
mov
xor
aad
out
loopne
outsl
jecxz
mov
xor
xor
loopne
arpl
fstpt
das
add
mov
popf
pop
sbb
adc
mov
or
adc
add
mov
mov
rclw
outsb
add
jb
or
push
jmp
push
add
out
or
pusha
pushf
push
inc
pop
sub
test
pop
out
add
movsb
sub
push
adc
popa
push
mov
pop
ds
jne
fcmove
cmp
sbb
xlat
adc
lret
bound
out
pop
aad
sahf
adc
lock
sub
out
imul
and
ss
imul
test
imulb
sti
add
jg
push
pop
lock
push
fstpl
lock
movsl
push
push
test
pop
mov
add
movsl
xchg
add
pop
mov
xorl
adc
das
jge
loop
dec
loop
or
jnp
pop
jle
iret
rclb
out
jle
enter
xchg
push
pop
and
dec
pop
or
add
mov
xor
popa
mov
mov
push
adc
jno
jl
xor
pop
fldl
fisubrl
out
andb
fisubs
push
mov
xor
filds
jmp
mov
adc
cli
mov
por
scas
sub
mov
or
inc
pusha
mov
outsb
sbb
push
pusha
dec
cmp
mov
je
inc
adc
test
out
and
popa
xchg
scas
jbe
out
sarl
and
pop
xchg
push
icebp
jmp
lods
xchg
aam
testb
hlt
loopne
mov
mov
stos
idivb
add
mov
popf
mov
mov
sahf
pop
insb
and
outsb
repz
mov
push
popa
dec
insb
inc
mov
lea
inc
rcll
mov
imul
arpl
fs
sub
xchg
lahf
insl
dec
shr
xor
xor
out
ficompl
fldcw
neg
jnp
clc
pop
addb
xchg
popf
jg
xor
push
adc
andb
sbb
mov
jmp
mov
idivl
dec
popa
cwtl
xchg
scas
iret
or
mov
pop
scas
ficompl
out
pop
jl
mov
mov
inc
mov
out
setge
aad
addb
dec
mov
js
lahf
adc
call
adcl
hlt
push
nop
add
mov
mov
adc
xchg
movsl
push
or
pop
xorl
dec
jge
inc
bnd
pop
inc
pusha
lock
fidivl
mov
call
testl
mov
popf
mov
xorb
rcrl
mov
mov
add
pop
push
call
or
add
mov
xchg
fs
dec
sub
jmp
sbb
fwait
data16
les
dec
push
cmp
out
add
popf
adc
pop
and
add
pop
pop
dec
popa
adc
jbe
mov
insl
call
sbb
pop
mov
call
inc
in
xor
cld
fists
mov
and
mov
js
sti
add
stos
mov
lods
mov
inc
push
jmp
add
or
jb
pop
push
aaa
mov
sbb
cltd
fstl
nop
mov
loopne
xor
adc
xor
jmp
lahf
clc
add
cs
sub
jmp
mov
xchg
rcrl
xchg
test
sbb
leave
xor
or
mov
fldenv
cmp
stc
daa
cmc
in
lods
pop
fsubr
rcll
add
mov
push
lods
push
add
sbb
xor
add
rcrl
sub
mov
sub
and
dec
sbb
jno
andl
in
cwtl
lret
mov
xor
das
adc
cmp
test
mov
push
loope
lds
pop
add
mov
add
lods
mov
aam
pop
into
daa
push
adc
das
jl
push
sub
andb
sbb
add
sbb
in
mov
repnz
imul
notl
gs
inc
aaa
and
mov
mov
add
jge
push
or
pop
jmp
in
and
dec
test
jge
adc
mov
xchg
test
add
imul
mov
pop
add
icebp
mov
mov
popa
daa
sub
rorb
movsl
inc
sub
mov
aad
inc
jbe
aad
mov
add
testb
cmp
xchg
push
mov
mov
lea
rolb
adc
push
dec
adc
mov
rorb
leave
test
leave
call
loopne
push
add
cmp
subb
adc
xchg
dec
adc
cmpsb
mov
mov
fstpl
int
jge
add
sti
and
mov
pop
lds
or
fiaddl
rcrl
in
adc
mov
mull
add
mov
ret
jae
icebp
sub
ret
fadd
mov
jle
or
add
cld
lods
push
popa
lahf
out
fyl2xp1
cmp
sub
add
pop
push
jo
pop
add
jecxz
dec
sbb
sub
pop
sub
jg
popf
daa
inc
popf
cmpsl
les
or
into
cmp
out
in
mov
adc
add
add
data16
test
nop
jge
mov
jmp
loop
mov
fnstcw
cmc
mov
mov
cmc
xchg
adc
push
jl
addr16
loop
fbstp
sub
push
call
loope
xchg
sub
add
sbb
in
push
and
xchg
jb
mov
mov
movsl
aam
adc
inc
es
xor
dec
mov
ret
testb
movsl
es
xor
fisttpl
adcb
push
aas
push
cs
adc
or
sbb
aad
cmp
and
dec
js
sbb
stc
aaa
test
xor
not
leave
idivb
pop
stc
cld
adc
mov
pusha
pop
pop
jne
mov
push
cmp
mov
in
push
sub
test
loopne
int3
popf
popa
add
inc
jno
push
iret
nop
jns
mov
int3
mov
xchg
inc
fistl
push
fcoml
cs
mov
xchg
sub
aam
add
mov
jge
sub
pusha
dec
filds
adc
pop
cli
xor
in
insb
add
scas
out
fs
jp
popa
mov
lods
dec
mov
cs
jge
aad
xchg
daa
aam
sti
push
xchg
popa
mov
pusha
inc
movsl
xlat
dec
out
push
or
and
movsb
arpl
lds
scas
out
pop
outsb
jg
or
mov
sub
mov
aas
test
add
pop
add
xchg
dec
pop
sahf
sub
cli
clc
cmp
mov
jmp
test
lods
or
mov
pop
stos
popa
or
jne
enter
push
add
sub
add
lahf
xchg
add
sbb
cmp
dec
ds
cwtl
arpl
mov
add
arpl
dec
mov
mov
jno
mov
adc
icebp
stos
cmp
lods
cmc
hlt
pop
cmp
xchg
outsb
std
lods
xchg
jne
lea
mov
ds
adc
or
popf
mov
xorb
xlat
jno
xchg
add
xchg
or
loopne
pop
inc
push
lcall
mov
dec
sbb
dec
test
cmc
mov
xchg
dec
inc
in
pusha
test
lock
fildl
stos
shl
cmp
xor
lcall
inc
sti
sbb
sub
mov
repnz
in
xor
cmp
aas
aaa
or
add
fimull
jnp,pn
sti
and
cmpsl
or
cvtps2pd
repz
jbe
or
dec
mov
lret
call
lret
cli
pop
popa
dec
mov
mov
xlat
xchg
push
mov
lods
pop
jge
lds
insb
adc
push
lea
hlt
out
imul
add
icebp
push
jle
popf
adc
jae
push
cli
sub
pop
ljmp
test
adc
sbb
sub
cmpsb
jo
mov
hlt
fdivrl
mov
out
mov
jno
mul
insl
jb
fimuls
rolb
pusha
daa
xchg
pop
sbb
add
lds
add
jns
daa
xor
ret
sub
push
fwait
push
enter
ja
addl
add
xchg
sti
into
outsl
mov
fwait
imul
push
add
mov
hlt
popl
cmpl
mov
cwtl
testl
mov
daa
jne
jno
mov
inc
test
fcmove
push
xor
add
xchg
repnz
aas
xchg
xor
or
cmpsl
je
inc
push
stc
addb
fisttps
sub
pop
cmp
jnp
ljmp
in
xchg
je
sub
mov
push
inc
imul
negb
fs
in
aam
das
fsqrt
shrl
fsubrs
push
sbb
dec
xor
sub
fisubl
add
add
mov
popf
sbb
mov
cmp
mov
jnp
int
mov
incb
mov
stos
cld
test
call
or
popf
mov
outsl
push
and
leave
cmp
adc
cmp
or
xor
inc
fldl
dec
mov
idivl
push
push
test
popa
mov
hlt
ljmp
lahf
add
mov
daa
xorl
fisttpl
adc
pop
outsb
sarb
add
out
push
clc
in
jle
pop
mov
push
xor
xchg
pop
mov
sahf
adc
jecxz
insb
aad
jae
mov
lret
cld
movb
dec
clc
sbb
xchg
stos
popa
flds
enter
and
push
daa
iret
cwtl
or
mov
xor
sti
inc
gs
clc
dec
dec
fbstp
mov
shrb
sub
lods
xchg
or
or
mov
mov
cs
dec
cld
adc
push
inc
adc
outsl
lcall
inc
loope
idivb
xchg
add
test
stos
rclb
and
ficompl
rcrl
jge
je
rcrb
push
pop
sbb
xchg
out
andb
jne
add
decl
add
sub
adc
pusha
mov
popa
mov
outsb
xor
fsqrt
mov
pop
sub
inc
push
mov
jmp
dec
xlat
jno
test
push
shll
mov
cmp
jbe
sahf
in
faddl
gs
pop
jns
loop
clc
mov
in
je
fstp
and
lock
ljmp
adc
add
push
imull
add
data16
stos
call
pop
inc
push
orb
orl
xchg
pop
fidivrl
cmp
inc
pushf
testl
add
push
addr16
incl
sbb
cmp
fstpl
cmc
dec
add
pop
xchg
or
mov
inc
jnp
imul
sbb
xor
inc
ret
popa
repnz
sub
cmpsb
mov
lds
cwtl
clc
sbb
mov
xchg
add
scas
cmp
add
negl
addl
pop
js
daa
add
test
cwtl
je,pt
cmc
adc
fcom
add
daa
adc
xor
adc
rcrb
sub
pop
add
test
aas
in
adc
xchg
mov
lds
pop
pop
in
xchg
add
mov
and
lods
insl
les
sbb
aas
sbb
sbbb
call
xor
loopne
dec
mov
sti
jg
pop
inc
call
sub
add
nop
push
dec
sbb
push
inc
sub
loop
xlat
inc
jno
out
ficoms
pusha
inc
lea
sti
mov
insb
stc
shl
lock
and
xor
dec
and
adc
jo
call
sub
mov
sub
out
pop
int
clc
pop
add
inc
les
sbb
mov
fsubs
cmpl
int3
xor
fwait
jbe
add
push
lret
jne
test
pop
push
xor
jle
inc
aas
mov
lds
inc
and
inc
xchg
jge
sahf
stos
or
lret
imul
nop
mov
mov
pop
xor
adc
and
inc
je
mov
mov
sbb
out
in
cmc
movsb
loopne
stos
cmp
loopne
add
cmp
inc
mov
mov
lock
ljmp
popa
incl
lcall
std
mov
xchg
ja
add
inc
leave
xor
jno
rcrb
xor
add
outsb
cmc
sub
add
pop
mov
lahf
add
mov
mov
adc
sub
das
icebp
pop
add
jno
mov
cmpsb
orb
mov
cmpl
adc
in
mov
push
or
mov
inc
adc
adc
shr
jb
or
pop
lahf
add
jne
fwait
add
pop
inc
mov
add
sbb
iret
jno
add
scas
xchg
and
add
push
xchg
mov
or
je
xchg
xor
cmp
lret
outsb
mov
nop
pop
xchg
sub
sub
push
mov
add
mov
int3
xor
sarl
add
inc
mov
cmp
or
fwait
rcll
or
or
fcmovb
stc
adc
loope
fsubl
les
mov
mov
and
jae
cmp
adc
pop
out
out
mov
bnd
xlat
adc
pop
enter
pop
mov
jo
pop
out
jbe
add
popa
add
mov
jecxz
in
xchg
data16
loopne
mov
dec
stos
test
cmpsb
adc
cmpl
incb
jne
mov
repz
fists
popa
fldt
call
int
pop
nop
std
xor
sub
in
add
mov
xchg
adc
and
in
xchg
imul
fldt
inc
mov
cld
mov
dec
js
aaa
jbe
setbe
adcl
mov
cmp
push
in
xchg
or
xchg
jmp
lahf
adc
fmuls
addb
aam
xlat
roll
lret
clc
xor
push
mov
fistpl
xorl
inc
add
xchg
push
popf
stc
xchg
add
and
mov
jne
add
loope
xor
cmpb
cmp
fimull
or
xlat
aas
add
enter
adcb
adc
into
pop
mov
and
movsb
ss
out
adcb
test
addb
mov
scas
adc
add
xor
jne
xor
mov
jnp
push
fdivrl
es
icebp
addb
call
out
jo
mov
xchg
inc
push
cmp
testl
jmp
fbstp
add
daa
in
mov
mov
push
jg
dec
mov
ja
icebp
or
sub
sahf
pop
xor
cmc
mov
adc
daa
sbb
mov
push
cmp
outsb
mov
hlt
xor
jge
xchg
rcrb
mov
fisttpll
rcll
inc
adc
xor
sbb
popa
dec
shlb
adc
or
dec
fsubrs
cld
jns
hlt
push
mov
add
popa
fidivs
movsb
add
das
xor
in
xor
dec
lcall
inc
test
cwtl
pop
nop
ljmp
lods
fwait
sub
mov
aas
push
adc
out
hlt
fimuls
adc
push
outsb
pusha
std
in
or
push
js
add
cmp
and
xchg
and
jmp
xchg
and
xchg
xchg
loop
insb
mov
notl
pop
pusha
and
jl
out
inc
mov
dec
shrb
loop
adc
jne
pop
mov
xchg
sbb
cmpb
stc
jae
addr16
movsb
xchg
add
pop
sbbb
cmpb
and
insb
dec
mov
sub
xor
xchg
mov
mov
inc
mov
push
movsl
inc
add
push
add
arpl
scas
xor
mov
and
popa
sbb
inc
xlat
xlat
mov
daa
sahf
inc
enter
pop
and
cltd
jp
pusha
movsl
outsl
push
add
into
call
mov
or
xor
insb
leave
sub
stos
in
sbb
pop
add
pop
imul
insl
stos
in
dec
rol
sub
jb
add
sub
mov
push
cld
pop
or
adcb
cmc
add
and
cmpsl
xlat
imul
add
adc
mov
sub
cli
loop
out
and
adc
pop
dec
ja
and
js
adc
add
xor
add
mov
push
mov
pop
cmp
faddl
lret
std
jl
ds
das
data16
js
adc
pusha
loopne
pop
inc
add
repnz
in
fcmovb
inc
adc
stos
out
ja
aam
mov
lahf
fisubs
jno
mov
in
lods
dec
jbe
ds
jle
in
jae
mov
inc
xor
test
sub
or
test
outsl
push
xchg
arpl
fidivs
rcll
outsb
mov
add
stos
cmp
add
mov
or
gs
adcb
fs
jno
fidivrl
out
cs
fldl
adc
sete
aam
sbbb
add
insl
mov
mov
call
sbb
movsb
fistps
imul
mov
movl
dec
fiaddl
push
punpcklbw
addr16
push
sub
sbb
lods
loopne
adc
mov
adc
mulb
shlb
adc
xor
call
xor
lods
sbb
add
clc
xchg
dec
mov
or
add
push
xlat
cmpsl
add
dec
push
in
into
add
jge
mov
rep
mov
sahf
and
add
or
and
or
add
loope
dec
aad
lods
cmc
shll
imul
xor
sbb
jb
adc
push
mov
add
inc
mov
sub
aam
jl
es
add
rcll
add
icebp
mov
jp
jne
in
or
out
add
mov
mov
in
pop
jg
rcll
addr16
dec
jb
out
scas
push
xchg
fmull
stos
scas
outsb
hlt
loopne
out
std
jbe
push
and
jnp
ds
pop
lods
das
xchg
lds
popa
test
or
sahf
or
outsb
and
xchg
or
inc
pop
xchg
cmovs
jnp
pop
push
push
mov
add
call
lret
cwtl
push
mov
sub
mov
rcl
sub
or
push
outsl
sub
sbb
push
adc
lahf
add
outsb
sbb
mov
xor
push
cli
shrb
push
testb
cmp
and
xchg
push
mov
vminpd
nop
sub
jmp
std
inc
ret
mov
fldt
mov
test
out
mov
cltd
add
in
js
mov
add
add
lahf
and
sar
sbb
iret
pop
xor
dec
add
adc
ret
fdivrl
and
mov
movsl
xchg
mov
sbb
andb
and
test
data16
push
pusha
mov
popf
insl
or
addb
or
jle
aaa
add
mov
fmull
mov
call
out
outsb
stc
add
cld
push
add
sub
ret
loope
cmp
lock
pop
pop
adc
gs
lahf
nop
mov
xor
add
xchg
cld
push
lds
je
mov
adc
sub
ss
aaa
push
sub
add
arpl
out
pushf
xor
add
pop
stos
xchg
push
ss
dec
or
cli
push
cmp
push
adc
jecxz
and
mov
adc
fwait
pop
test
cmp
cmpsl
loopne
pusha
andb
inc
pop
mov
je
pop
sub
push
call
data16
or
lret
into
cld
sti
pop
cmc
inc
pop
push
rclb
test
fadds
pop
jne
xchg
fisttps
loop
pop
sub
flds
in
push
pop
mov
sub
sub
subb
outsl
movb
push
pop
jae
out
add
dec
nop
mov
mov
mov
mov
inc
dec
clc
xor
jns
cli
call
adc
dec
rcrl
jae
in
sub
out
imul
xchg
dec
aaa
add
adc
sbb
mov
sarb
dec
in
cwtl
sub
outsb
lret
das
pop
mov
cmp
pop
mov
mov
xor
jnp
mov
cs
xlat
in
xchg
sbb
inc
es
adc
gs
test
popa
dec
push
push
push
cld
sub
mov
mov
sub
adc
add
pop
repz
sub
shlb
pop
jmp
std
outsl
or
mov
sbb
push
inc
dec
rcpps
cwtl
rcl
in
sub
and
jle
inc
push
sbb
iret
inc
jl
push
outsb
and
fldl
cmp
in
inc
xchg
lcall
mov
push
les
sbb
pop
xchg
push
mov
scas
mov
mov
imul
jmp
test
pop
fucomp
cmp
mov
test
mov
aam
mov
cmp
pop
xchg
push
test
iret
sub
inc
bound
xchg
gs
scas
dec
push
push
mov
jnp
jle
lock
cld
sub
and
sub
push
xor
mov
adc
add
mov
dec
xchg
mov
jb
popf
jns
sub
insb
cmp
fsub
and
jnp
sti
or
testl
pop
mov
dec
pop
mov
or
jae
pop
cltd
mov
add
ljmp
lret
push
adc
sahf
inc
adc
sub
jne
xchg
jmp
fcoms
je
push
jae
push
lea
aam
jle
sub
ret
xchg
pusha
repnz
mov
mov
add
jp
je
jb
daa
sub
les
jno
into
aaa
loop
popf
insl
rcl
movsb
mov
mov
stos
pop
mov
push
mov
pop
mov
push
aaa
bound
test
cmp
xchg
mov
ret
clc
push
loope
add
sahf
adc
jg
inc
mov
pop
adc
andl
movsb
inc
sbb
xor
push
imul
sbb
sub
sbb
cwtl
sub
in
fs
lock
sub
cli
fldenv
xor
and
test
inc
push
or
mov
sub
dec
pop
lcall
push
push
mov
and
inc
add
push
mov
add
call
add
loope
push
and
movsb
cmpsl
jae
sub
sbb
fidivs
and
dec
call
mov
add
push
out
mov
aad
pusha
mov
fwait
shl
and
xchg
inc
add
test
enter
xor
sarl
add
std
test
ljmp
xchg
pop
jge
add
call
insl
in
push
lods
jne
inc
roll
popf
aad
cmp
xchg
stc
push
out
ja
pop
pushf
test
mov
loopne
push
jp
push
js
dec
clc
jecxz
adc
add
in
fsubl
pop
adc
popa
movsb
push
movsl
xor
insb
insb
dec
xchg
jmp
insl
sbb
sub
adc
cli
jmp
xor
xor
jge
pop
gs
cmp
imul
jo
leave
adc
jo
or
mov
leave
mov
mov
es
push
add
sbb
mov
lock
pop
sub
push
jmp
fsubrl
shl
dec
jbe
mov
js
scas
repz
fstps
inc
in
dec
mov
mov
sbb
ja
adc
and
dec
push
xor
inc
push
je
xchg
adc
jnp
xor
shlb
mov
popa
in
mov
pop
xorl
nop
iret
mov
into
mov
int
inc
rolb
pusha
mov
push
add
mov
xor
shll
sub
pop
jp
xchg
jp
add
mov
popa
push
xor
lock
push
jbe
mov
pop
dec
rorb
stos
push
rclb
fucomp
nop
add
push
pop
cmp
sbb
sub
pop
lock
movsl
xor
js
ja
sti
daa
icebp
fisttps
xor
lret
add
jbe
sub
pop
repnz
sub
hlt
add
pop
add
in
pop
xchg
mov
stc
fsubrp
pop
pop
mov
cmp
dec
mov
test
mov
dec
rorb
push
adc
cmc
stos
or
jl
ret
repnz
mov
pop
add
in
bound
and
xor
or
xor
push
insl
jmp
es
or
xor
mov
enter
jnp
orb
mov
shrl
pop
add
push
pusha
push
pop
outsb
pop
popf
in
stos
popf
ja
dec
rol
leave
aas
add
push
dec
ret
add
add
xchg
mov
inc
push
push
mov
cmpsl
mov
inc
add
pop
sarb
inc
inc
leave
fs
dec
hlt
dec
inc
and
int
push
sarl
aad
xchg
and
fstpt
js
fiaddl
scas
fstpt
mov
mov
into
mov
mov
add
rcll
push
xchg
or
fs
push
jg
pop
xchg
or
pop
mov
ja
stos
data16
and
inc
lds
adc
or
addb
int3
pushf
mov
jl
pop
lret
jecxz
adc
bound
mov
push
jns
iret
inc
cmp
xchg
jns
pop
add
mov
orl
mov
lock
push
or
pop
aaa
popf
pop
xor
shll
movsb
test
dec
mov
mov
mov
nop
inc
mov
mov
cmp
outsb
cmc
out
xor
mov
xchg
fcmovnb
rorb
push
sbb
loop
xlat
inc
jle
sub
test
mov
push
mov
cmp
popf
clc
inc
stc
roll
push
sub
push
jo
lock
adc
adc
mov
push
inc
in
pop
lret
outsl
leave
push
arpl
sub
sbb
mov
mov
dec
pop
xchg
jbe
dec
shlb
cmpl
cli
mov
mov
mov
jb
leave
sbb
add
dec
push
mov
and
bound
loope
add
or
rorl
in
or
popl
add
xor
mov
adc
mov
adc
rol
lcall
pop
je
inc
inc
push
aam
adc
push
sbb
jmp
shll
or
iret
addl
sub
call
cmp
bound
add
fcomip
sub
in
cmp
sar
iret
xchg
add
test
mov
xor
mov
pushl
pusha
xor
pop
xchg
xlat
nop
mov
cmp
mov
adc
mov
adc
out
push
imul
hlt
repnz
mov
mov
add
cli
out
or
dec
lahf
sub
jns
or
xlat
shlb
ficomps
push
das
daa
stos
jg
in
mov
fstps
xchg
xor
lds
xor
pop
repnz
add
push
adc
int3
and
pusha
mov
or
jmp
movsb
cltd
pop
pop
mov
sub
nop
aad
xchg
adc
test
push
jnp
add
test
stos
jno
and
mov
sub
jp
mov
les
bound
in
pop
outsb
subb
out
loope
mov
or
pushf
or
out
call
xchg
xorb
pop
cmp
inc
loopne
mov
push
hlt
mov
sbb
jo
adc
xchg
shll
or
and
pop
mov
aas
add
and
pop
sbb
pushf
les
jnp
add
or
lods
add
sub
adcl
fldl
addr16
adc
in
jb
fiaddl
insl
je
cmp
pop
fadd
jbe
push
push
jl
pop
pop
xor
xchg
inc
push
je
add
out
cwtl
and
int3
or
push
add
or
nop
pop
fistpl
dec
loopne
pop
mov
push
and
shlb
call
loop
dec
cmc
push
push
mov
add
ja
arpl
lock
mov
cmp
dec
pop
jno
sbb
mov
mov
inc
mov
scas
xchg
sbb
xchg
xchg
and
popa
adc
add
stos
je
out
orl
xchg
add
mov
xor
shll
cs
sub
aam
pop
ret
jnp
pusha
inc
adc
add
es
jno
movsb
lods
add
push
fadd
sub
subl
fdivrs
xchg
xchg
jg
add
jo
and
mov
pop
or
add
sub
jecxz
rorb
addb
nop
pop
in
sub
inc
or
xchg
push
dec
cmp
int
mov
ds
add
out
test
mov
bound
add
rclb
push
dec
jns
cmp
xor
inc
sbb
das
jo
decb
add
xchg
into
outsb
mov
mov
in
mov
popa
nop
or
sub
testl
add
cmp
or
pusha
xor
add
bound
push
jecxz
subl
andb
hlt
add
lret
inc
lds
inc
in
les
mov
retw
packsswb
imul
xor
in
scas
push
mov
rorb
push
aas
in
insl
std
inc
loope
popf
mov
or
adcb
cmp
inc
movsb
add
call
fsubs
add
or
aam
pusha
cmp
aad
jae
xchg
or
test
ja
sbb
push
test
cwtl
xor
mov
das
sub
cmp
pop
daa
add
mov
mov
jl
xchg
mov
in
lds
mov
cmpsb
add
ljmp
adc
jb
xchg
jge
mov
enter
incl
sbb
aad
popa
mov
frstor
add
push
dec
xchg
jno
adc
sub
ds
mov
jbe
inc
ljmp
jae
xchg
jge
xor
adc
sub
pop
sbb
add
cli
mov
sbb
cltd
loop
nop
nop
inc
adc
outsl
rcr
add
popfw
inc
fsubs
pop
add
mov
sbb
insb
xor
int
lock
sub
xorb
xor
push
fadds
add
jge
xor
adc
sub
aas
dec
lds
pusha
inc
addr16
jbe
jg
add
movsb
test
and
lahf
test
xchg
pop
mov
hlt
jge
xchg
xchg
inc
jns
xchg
pushf
in
out
jecxz
shll
adc
push
je
add
inc
inc
insb
sub
xor
cltd
mov
mov
sbb
sub
addb
xchg
ret
je
xorl
ret
add
xchg
jb
insl
lods
inc
mov
xor
push
test
push
aad
pop
and
cltd
incb
inc
pusha
push
jnp
sub
test
aam
xor
sti
and
push
jbe
shrl
xchg
out
mov
int
lret
aad
push
or
invlpg
popa
cmp
add
addr16
and
shll
or
ljmp
mov
lds
std
and
mov
xor
rolb
jns
pusha
ds
add
dec
fldl
push
popf
mov
sub
jb
pop
mov
jnp
les
inc
and
jge
add
fldl
mov
loopne
pop
cmp
add
sbb
movsb
push
and
add
adc
imul
pushf
imul
mov
xchg
movsb
test
add
xchg
inc
xchg
fs
inc
cmp
pop
pop
add
xchg
push
sahf
out
outsb
mov
add
pop
push
mov
aaa
lea
bound
xor
sbb
add
cli
jle
les
dec
add
icebp
dec
lahf
add
iretw
cmc
mov
loopne
add
mov
lcall
aaa
sbb
pop
lret
add
lods
cltd
imul
cmp
outsb
sbb
sub
inc
jg
fdivs
add
xchg
add
xor
stos
daa
lcall
int
mov
subb
and
mov
add
or
popf
sbb
mov
add
push
and
sbb
cmp
or
adc
sarb
jo
cmpsl
pop
mov
sbb
shr
out
push
and
or
mov
sub
repz
sbb
cmp
bound
adc
mov
push
sarb
dec
xchg
imul
insl
sub
lcall
into
fldenv
pop
add
nop
adc
shlb
hlt
popf
sub
sahf
push
mov
sbb
inc
mov
std
mov
mov
push
inc
pop
jo
add
xchg
mov
mov
dec
xor
add
jmp
jns
cld
int3
lods
lods
inc
sar
out
mov
lds
mov
outsl
mov
add
mov
and
lods
sub
cmpsb
mov
jno
push
je
daa
add
test
push
pop
push
add
mov
aad
arpl
xor
imul
dec
xlat
es
lea
int3
add
mov
jge
push
pop
pushf
mov
mov
insb
minps
cmp
add
mov
adc
fldl
daa
sbb
movsb
jo
adc
je
stos
in
xchg
fnstsw
inc
fs
loopne
fs
add
mov
sub
adc
mov
mov
xchg
cmp
ret
cmp
xchg
pop
enter
jbe
cmp
add
adc
mov
inc
add
insb
fcom
lea
xorl
mov
and
or
add
popf
out
pusha
ds
push
lahf
xor
add
movsl
or
lds
enter
xor
mov
xor
fsub
jne
add
jo
pop
ret
aam
xorb
shrb
xchg
cmp
add
test
mov
int
xchg
lret
mov
adc
add
adc
jnp
loop
in
jno
add
aaa
xchg
mov
inc
movsl
cld
stc
add
push
add
out
inc
rolb
mov
pop
pop
fimull
int3
lea
movsb
push
mov
mov
ja
sete
and
mov
pop
jnp
test
loopne
imul
gs
cmp
or
push
mov
jno
out
add
jb
testl
or
jmp
mov
sbb
add
adc
repz
inc
add
push
inc
adc
lods
mov
or
repz
xchg
shrl
nop
test
outsb
lret
push
mov
push
mov
fs
mov
jb
sti
add
stos
loop
push
stc
out
add
inc
cwtl
in
mov
sbb
mov
mov
xor
add
fwait
jecxz
sub
jp
xchg
mov
add
jecxz
mov
or
jb
jmp
std
xchg
das
out
jae
mov
xchg
jl
push
mov
dec
add
and
pop
push
out
inc
push
add
inc
shl
xchg
xor
dec
sbb
add
dec
rcrl
or
shlb
ror
push
pop
add
mov
ret
andb
jg
push
pop
push
cltd
testl
sub
daa
ficomps
push
add
loop
xor
movsb
data16
mov
mov
cld
hlt
cmc
add
add
pop
cmpsl
sub
mov
hlt
enter
jg
or
mov
cld
pushf
clc
out
add
jge
jb
shll
testl
icebp
pop
out
dec
adc
pop
mov
xchg
push
mov
fidivrl
les
dec
lock
add
cltd
repz
cmp
mov
sbb
fisttps
add
pop
ret
sbb
enter
dec
cmc
aas
lea
stc
xchg
nop
cmp
pushf
sub
cmpb
cmp
es
lods
sub
add
ret
add
dec
iret
sub
mov
inc
pop
ja
movsl
lret
jmp
add
push
loop
adc
xor
mov
mov
sbb
jle
movsb
sub
pop
pop
push
mov
int3
dec
mov
and
outsl
cmpsb
fmul
add
fidivrl
jb
sub
xorb
shll
and
mov
in
xor
iret
inc
cwtl
xor
xchg
inc
aad
dec
or
sbb
xchg
jbe
dec
out
loopne
aam
push
or
out
xor
lret
adc
cmpl
mov
call
repnz
jge
fisttpll
les
fs
fldcw
pusha
pop
sub
jmp
in
mov
call
push
in
jae
xor
enter
mov
and
add
cmp
add
in
std
push
xlat
inc
mov
cmp
pusha
nop
jno
pop
mov
and
cltd
call
and
stos
inc
fdiv
cli
xor
pop
sahf
rorb
out
mov
daa
in
addb
add
cmc
cmp
pop
push
mov
in
cmp
or
ljmp
fdivrs
adc
inc
mov
subb
dec
add
ds
aaa
add
mov
push
test
add
push
pusha
out
je
sbbb
mov
imul
cmp
popf
add
xchg
xchg
sti
fldl
add
mov
test
sub
jnp
aam
rcl
pop
push
push
add
push
lcall
insb
cmp
mov
mov
add
cs
jae
pop
repz
test
inc
mov
adc
cwtl
mov
add
xchg
push
leave
xchg
xchg
add
push
hlt
dec
add
mov
test
arpl
sub
sbb
nop
pop
mov
and
cld
jle
jne
cld
or
aaa
jno
sti
adc
inc
js
adc
lcall
nop
fimuls
repnz
add
je
pop
and
or
dec
lahf
add
sub
mov
es
fimull
dec
rolb
xchg
sarb
sbb
orb
subb
and
add
movsb
cwtl
lds
push
ja
add
hlt
popa
je
popa
cwtl
sub
xchg
out
mov
jecxz
roll
inc
mov
adcl
xchg
add
add
jbe
cmc
add
fcmovbe
sub
sub
adc
add
icebp
aas
and
out
and
add
mov
xchg
adc
out
call
mov
and
inc
ret
aad
pop
or
add
or
lods
xchg
fcomp
pop
cmp
fimuls
inc
and
lret
add
flds
add
sbb
fcomps
std
aaa
add
lahf
jl
bound
xchg
roll
mov
jb
pop
lret
add
mov
js
xor
push
dec
cld
add
lahf
add
sub
add
sbb
in
xorb
mov
out
std
js
pop
outsb
cmp
xor
jbe
add
jae
dec
jo
and
lods
cmp
out
cmp
stos
sarl
icebp
add
mov
fistl
sbbl
repnz
nop
lods
test
jne
lea
mov
jb
shrl
push
lods
pop
rolb
cmp
jno
or
push
xchg
enter
shl
sub
add
lret
insb
cmp
sbb
les
loopne
inc
mulb
loopne
pop
and
sahf
pusha
jg
adc
mov
hlt
dec
pushf
adc
imul
sahf
jl
clc
add
sbb
ja
xchg
adc
daa
add
inc
outsl
lds
dec
add
jg
testb
xor
inc
subl
mov
add
push
call
inc
xchg
jmp
inc
or
repz
xchg
hlt
push
or
inc
call
dec
inc
mov
adc
add
lock
ds
xor
mov
scas
loopne
add
sbb
add
pop
inc
dec
dec
xchg
je
imul
sti
js
xchg
push
add
insb
jb
xor
icebp
test
and
dec
and
ljmp
nop
jnp
add
mov
jmp
scas
add
jp
push
xor
aas
add
mov
add
addr16
cli
daa
add
loop
test
outsb
fcoms
mov
push
in
sbbb
pop
mov
add
test
add
pop
pop
dec
es
add
inc
push
nop
loope
add
sbb
dec
jmp
adc
cld
add
test
sbb
loop
repnz
xchg
jp
lcall
gs
ret
mov
add
jnp
dec
std
ljmp
les
popf
cltd
mov
inc
add
mov
and
xchg
jae
lds
jge
sub
or
lods
mov
push
je
test
nop
pusha
jle
mov
push
hlt
cmp
push
test
mov
insb
ret
jne
mov
cmp
lcall
jo
imul
add
inc
dec
cmp
xlat
movsb
ret
xor
dec
fs
inc
lahf
mov
dec
aas
push
out
dec
outsl
pop
popf
push
in
inc
mov
addb
in
loope
dec
pop
subb
fstpl
add
cmp
cmp
in
lret
sub
or
rorb
jbe
and
add
test
andl
jb
outsb
fnstsw
and
mov
ret
pop
xor
testb
push
dec
inc
push
xor
xor
add
call
pusha
daa
xchg
mov
and
add
lock
push
dec
mov
mov
inc
jns
loope
movl
out
aad
inc
test
in
adc
or
add
aaa
call
nop
add
xchg
stos
cmp
in
dec
add
outsl
sbb
adc
add
xchg
ds
dec
jnp
aad
dec
and
push
and
mov
jmp
sbb
mov
fnstsw
out
cmp
or
test
stos
and
jnp
or
lods
inc
mov
mov
in
pusha
pop
jno
pop
xchg
or
pushf
shlb
jge
sub
pusha
ds
subb
or
adcl
mov
cltd
sub
push
push
dec
xchg
or
sbb
and
mov
subb
or
loopne
das
test
lahf
and
add
subb
lea
and
xor
or
rorb
sub
in
jge
adc
adc
sbb
mov
lock
pusha
or
test
aad
inc
lea
mov
xchg
add
fcoms
pusha
adc
je
les
movsb
and
inc
into
sbb
jle
dec
sub
and
mov
sbb
insb
jae
rolb
rclb
mov
sub
mov
inc
sti
xchg
repz
test
xchg
cmp
ret
dec
push
mov
xor
inc
std
insb
cmp
pop
pop
xchg
scas
mov
rcrb
jo
mov
ret
mov
cltd
out
mov
sub
sbb
inc
add
bound
mov
xchg
pop
ret
pusha
jns
adc
and
je
mov
dec
jne
dec
into
fwait
jge
fists
adc
mov
xchg
nop
inc
adc
popl
arpl
icebp
push
test
mov
pop
js
in
pop
and
mov
jnp
sub
mov
cmpl
lcall
sbb
mov
sub
insb
mov
jmp
xorl
stc
aas
adc
adc
out
xchg
and
insb
sbb
inc
xchg
and
and
xchg
mov
movsl
mov
mov
test
and
fidivrl
add
repz
xchg
bound
flds
push
pop
lcall
dec
lds
add
frstor
imul
sbb
idiv
inc
loopne
dec
sub
cmc
push
int3
or
out
dec
mov
mov
push
repnz
inc
fimuls
and
leave
jb
adc
in
data16
add
pop
dec
push
dec
rcrb
sbbb
cmp
aad
enter
push
adc
ja
inc
and
add
ljmp
add
test
xchg
add
lods
loop
dec
or
add
xchg
push
pushf
hlt
inc
inc
loope
clc
cmp
sarb
shrl
add
imul
and
hlt
repz
or
mov
or
addr16
add
mov
mov
add
xor
cmp
mov
int
data16
mov
sbb
cmpsl
mov
je
jnp
pusha
or
rcrl
or
sub
aam
js
jge
or
out
enter
pop
fldcw
mov
xor
add
jne
add
test
fisubrl
xchg
mov
loop
mov
add
pop
dec
jo
push
ja
push
jecxz
xor
sub
dec
int3
jnp
jmp
imul
add
mov
mov
xor
movsb
cwtl
push
adc
pop
fs
xchg
dec
lret
popf
pop
xchg
jmp
ret
call
aas
out
sbb
js
out
call
inc
jns
pop
fs
fwait
jle
pop
cmp
add
inc
and
xchg
cli
mov
cmpsb
enter
push
mul
cmpsl
stos
ret
nop
pop
add
push
cmp
and
add
inc
add
mov
dec
call
sbb
pusha
iret
pop
inc
push
xchg
xor
lret
sub
cwtl
xlat
cmp
push
insl
mov
adc
xabort
arpl
mov
lahf
jb
pop
cltd
adc
shll
icebp
push
xchg
mov
sub
or
cmp
mov
cmp
cwtl
mov
add
push
pop
push
cmpsl
clc
les
push
rolb
pop
inc
pop
ror
push
pop
push
arpl
dec
and
pop
psllq
dec
loopne
dec
push
dec
mov
or
adc
lods
inc
add
jo
int3
inc
sahf
test
movsb
sbb
or
jbe
leave
loope
xor
rol
js
xstore-rng
cmpsl
inc
mov
inc
add
enter
xor
xchg
push
aas
add
fidivrs
and
adc
jge
push
jl
outsl
push
aaa
xor
sub
fistpll
pop
push
add
lea
add
sahf
add
outsb
pandn
popa
sub
and
cmp
add
subl
xor
sbb
xchg
sbb
pop
sbbb
stos
add
and
inc
pop
sbb
mov
add
xchg
cmp
jae
dec
add
push
push
sahf
shll
outsb
add
scas
jmp
cmp
leave
mov
dec
inc
out
loope
inc
xchg
adcb
les
inc
popf
add
pop
icebp
jmp
pusha
add
adc
mov
jl
pusha
cld
je
push
arpl
test
fs
inc
mov
in
xchg
mov
cmp
cmp
mov
sbb
push
sub
mov
jno
xor
adc
outsl
mov
and
inc
fwait
aas
dec
hlt
push
cmp
inc
inc
add
or
xchg
mov
lret
loope
cmp
pop
pop
das
pusha
arpl
sbb
mov
leave
test
cmp
xor
dec
in
ret
lds
pop
sbb
xchg
movsl
cmpsb
adc
stos
adc
fldl
mov
arpl
add
or
xor
das
imul
dec
add
xchg
int
iret
rcrb
sub
xchg
ljmp
jbe
push
mov
or
sub
lcall
or
fstl
data16
pop
loopne
cmpsl
push
aas
aaa
outsb
dec
ja
shl
inc
stos
add
mov
xchg
push
and
add
mov
faddl
out
jmp
cmpsb
push
push
in
in
add
ret
scas
mov
xor
cmp
js
add
jno
dec
clc
xor
push
pop
incl
das
ljmp
fidivrs
pusha
xchg
pop
xor
push
bound
or
add
cmc
fisubs
andl
sarb
lret
mov
mov
ret
fisubs
push
jecxz
daa
filds
pop
cli
sub
jecxz
pop
cmp
sti
cmp
or
pop
jbe
enter
addl
test
fsub
add
loope
test
inc
add
dec
xchg
icebp
pop
mov
xchg
popf
lahf
inc
add
jecxz
bound
hlt
pop
wbinvd
and
iret
sbb
add
add
pmaddwd
dec
sarb
lods
adc
pop
fwait
push
in
and
jb
cmpsb
inc
add
push
std
or
lods
loop
fwait
loope
inc
add
sarb
fimull
push
xchg
in
outsb
loopne,pt
add
mov
shrb
sub
sahf
mov
add
mov
jmp
dec
jno
dec
mov
shll
lock
add
int3
adc
and
pusha
popa
sarb
push
add
sbb
mov
bound
je
cmp
jnp
add
cmp
jbe
mov
data16
sbbb
push
mov
adc
and
xchg
aad
js
sub
jnp
rcrl
add
cli
popl
or
cwtl
jns
pop
add
in
and
add
inc
std
jno
xchg
xor
push
pusha
adc
jle
add
jmp
mov
pop
push
daa
imul
test
mov
add
dec
cltd
xchg
xchg
cmp
sub
xor
add
into
dec
mov
push
loopne
cmp
insb
cmc
aas
add
add
add
jo
rorb
mov
test
mov
add
mov
or
js
imul
jns
jmp
dec
and
push
pusha
and
iret
mov
cmpb
in
or
sbb
mov
or
hlt
mov
int3
cmp
add
jns
addb
and
sub
cltd
mov
sub
and
add
push
add
mov
call
pushf
cmp
xchg
inc
cwtl
es
daa
or
inc
sahf
adc
mov
movsb
outsl
mov
orb
inc
test
les
xor
mov
add
icebp
mov
adc
loopne
pop
inc
adc
mov
out
push
push
loop
lods
andb
or
ret
sti
inc
pop
push
cmp
in
cltd
push
cmpsb
repz
enter
add
push
rcrb
add
popa
add
jno
repz
xchg
jb
add
out
xor
add
pop
imul
jl
mov
pop
sbb
xlat
mov
or
popf
xor
adc
push
add
mov
jbe
sub
in
xchg
mov
add
jmp
pop
fcomps
insl
jp
add
test
xchg
sbb
outsb
repnz
add
ja
nop
xor
and
jb
add
pushf
rorl
cmp
add
and
or
add
mov
leave
mov
fildl
cmp
lret
add
and
pop
imul
add
mov
lds
pop
mov
or
sbb
push
mov
std
add
fldcw
pushf
jns
roll
dec
out
push
push
jle
movsb
push
xchg
add
sbb
push
icebp
sbb
add
sti
lcall
dec
ret
sub
push
mov
imul
or
sbbb
fistl
dec
inc
push
arpl
inc
mov
cmp
cs
fiadds
aad
push
inc
lret
loopne
sbb
in
int
fnstenv
out
jb
frstor
sub
ss
clc
std
jnp
repnz
mov
xchg
clc
inc
cmp
lcall
aad
adc
jne
add
faddl
cmpsb
add
rolb
sbb
rcll
jns
add
ss
lahf
cmp
enter
add
lods
out
ds
xchg
add
into
loopne
inc
shlb
stc
push
movsl
dec
jecxz
add
ss
adc
icebp
mov
adcb
fisttpl
ret
jbe
movsb
push
add
fnstcw
rolb
adcb
cmpsl
xchg
inc
pop
icebp
mov
scas
je
mov
mov
push
ljmp
out
mov
xor
add
int3
inc
scas
stos
fstpl
or
mov
pop
je
aad
adcl
mov
add
push
or
add
icebp
and
add
mul
add
add
filds
mov
jbe
push
cmp
call
pusha
hlt
mov
push
imul
add
mov
jbe
not
add
out
imul
pop
faddl
xchg
sub
aam
daa
xor
xchg
pop
add
sbb
movsl
jbe
cmp
mov
inc
sub
out
inc
xor
sbb
cmpl
std
mov
imul
jnp
cltd
ljmp
xchg
loop
subl
jbe
mov
xchg
loop
cwtl
adc
test
bound
popf
sbb
call
sub
repnz
cmp
out
jge
je
stos
push
mov
loopne
fcoml
add
add
pop
out
mov
fdivs
mov
ss
push
mov
outsb
pop
out
add
pop
loopne
add
cmp
xchg
add
cmp
inc
sub
scas
pop
push
cmc
add
in
ss
adc
mov
test
xchg
out
inc
jbe
adc
pop
pop
cmp
ja
xchg
add
mov
push
mov
cmpsl
je
pop
loopne
jg
cmp
lock
roll
pop
mov
cmp
add
aam
dec
add
out
pop
push
add
stos
or
add
sahf
xchg
mov
pop
jb
nop
cmpsb
aas
call
or
inc
add
add
popf
out
inc
jo
in
dec
aad
inc
gs
aam
pop
stos
fwait
pop
add
xchg
bound
cmp
cs
sbb
sbb
mov
mov
in
int3
fiadds
test
dec
mov
les
cmovno
lret
not
inc
cmp
add
je
into
and
ret
add
xor
and
add
jmp
push
sbb
ds
hlt
xor
add
and
jbe
add
fst
cmpsb
xor
divl
add
fs
push
mov
clc
or
xor
cwtl
mov
add
mov
sbb
cmc
rcrb
fs
jge
sub
sbb
jbe
add
jecxz
movsl
mov
push
inc
jge
xor
pusha
add
test
push
add
fs
lods
xor
pop
call
adcl
and
ror
or
sti
faddl
js
std
pop
sbb
push
out
pop
stos
js
add
inc
aaa
call
icebp
add
dec
xor
rolb
call
add
jle
add
pop
mov
add
or
add
jmp
pop
mov
hlt
pop
pop
pop
add
cmp
mov
xor
push
sbb
pop
dec
adc
aas
in
push
mov
shll
jge
paddq
add
les
iret
pop
cmp
nop
rcrb
xchg
mov
leave
pop
jae
fstl
iret
std
movsl
or
fmuls
mov
add
jns
push
pop
jg
lods
or
dec
scas
orb
fwait
cmp
mov
in
adc
stos
jge
aam
push
loop
outsl
pusha
pop
mov
lock
pop
sbb
jnp
cltd
rclb
popf
xchg
ror
test
mov
adc
sbb
add
dec
ds
mov
loope
ret
pop
and
clc
add
sub
sub
sbb
fldt
pop
inc
mov
inc
movsb
dec
ffreep
xor
sub
mov
test
test
inc
mov
sub
je
add
lcall
fdivrs
inc
cmp
push
insb
jg
and
dec
adc
out
sbb
je
push
cwtl
inc
andb
loop
mov
xor
xor
je
xor
loopne
out
xor
in
xor
and
add
call
xor
add
adc
dec
inc
inc
xor
pop
cltd
pop
std
enter
mov
clts
dec
xchg
and
adc
call
testw
mov
mov
addl
shlb
dec
and
rcrl
add
scas
std
push
test
adc
add
and
jb
or
dec
jg
pop
xor
sbbb
jae
mov
push
sarl
jecxz
ds
lds
add
cmp
lret
pop
add
insb
dec
outsl
loop
pop
or
xor
mov
lret
adc
in
icebp
xor
push
loopne
repz
ret
mov
or
xor
outsb
mov
add
inc
dec
in
aaa
sbb
scas
cmp
in
add
push
sti
insb
shlb
ja
add
test
or
popa
je
jnp
add
sahf
lods
std
addr16
sbb
or
dec
pop
add
loope
mov
or
push
mov
ja
cmp
mov
inc
lods
shll
mov
dec
add
jp
sub
add
fldenv
or
add
push
test
call
add
jecxz
leave
mov
test
pop
dec
xrelease
add
cmp
ret
mov
daa
idivb
mov
cmp
jmp
leave
or
repz
xchg
push
jo
or
add
adc
jbe
jno
stos
jne
sarl
sbb
pop
jmp
rcll
xlat
mov
jmp
fmuls
pop
dec
cmc
inc
sahf
push
xor
inc
sarb
xor
jle
add
mov
push
mov
enter
and
loope
add
xor
adc
push
push
sbb
add
sti
iret
add
sub
push
bound
pop
int
or
lret
out
add
movsb
popl
in
jp
roll
sbb
push
add
or
push
push
add
sub
push
add
fmull
xor
idivl
test
add
mov
mov
out
enter
aam
pop
and
push
mov
ljmp
pop
scas
ficoml
add
lods
mov
rolb
jmp
decl
bound
jae
test
sbb
xchg
jecxz
and
cwtl
add
or
push
inc
lret
add
pop
sbb
mov
cmp
decb
xchg
cwtl
jle
xor
pop
sbb
push
lock
add
paddq
push
ret
add
pushf
shrb
add
aad
add
inc
jp
je
sbb
mov
lret
pusha
dec
add
cmp
clc
add
lahf
push
test
aas
cmp
add
push
xchg
popa
jge
out
ret
std
jnp
gs
sub
cmp
and
sbb
dec
and
xchg
mov
imul
xor
shrb
cli
cmp
add
sbb
sarl
cmpb
cmp
add
popa
push
pop
push
or
aam
push
sti
pop
shll
cs
hlt
test
in
cmpb
les
loope
mov
cmpsl
mov
sti
inc
push
or
dec
fldt
cmp
pop
scas
add
in
mov
ss
into
jo
lret
rorb
add
mov
int3
add
icebp
xor
jbe
inc
pop
xlat
pusha
js
add
mov
xor
mov
leave
xchg
add
cmp
push
dec
sti
sub
into
add
repz
dec
std
jg
pop
addr16
stos
mov
lock
dec
lahf
add
pop
push
sahf
pop
test
jmp
or
cltd
adc
fwait
dec
stc
cmp
mov
sbb
dec
dec
sbb
or
mov
xor
and
inc
push
mov
mul
and
pop
dec
fdivs
or
arpl
adc
add
dec
mov
jg
add
xchg
lret
dec
aaa
stc
or
test
jb
imul
gs
pop
add
cmp
xchg
push
pop
push
add
addr16
push
orb
fisttpll
xchg
cmc
mov
pop
pushf
addb
add
aam
scas
mov
cmp
xor
daa
pop
iret
add
cmp
es
loopne
xchg
xchg
sbbb
test
mov
lock
dec
js
kmovw
pop
adcb
inc
mov
loopne
scas
add
movsb
dec
not
sub
sahf
repz
ss
adc
xchg
add
sub
xchg
mov
call
sbb
push
cmovp
fildl
push
xor
cld
ret
nop
add
pop
std
cmp
test
lret
cwtl
mov
add
das
arpl
lcall
into
pop
add
push
cmc
pop
add
cmpsl
push
les
loop
push
mov
sub
pop
add
data16
push
or
xor
call
je
xor
inc
hlt
pop
push
pop
out
jmp
and
incb
sbb
pop
pushf
adc
test
add
mov
mov
dec
push
insb
fiadds
mov
inc
jecxz
mov
mov
and
lahf
xor
xadd
ret
dec
mov
test
jae
add
aaa
adc
add
or
pop
push
mov
cli
inc
pop
pushf
jno
and
imul
mov
and
cltd
negb
sub
sub
pop
pop
popf
and
fxch
push
push
addb
mov
rol
stos
mov
add
fistps
jns
jo
add
adc
xchg
inc
xchg
add
lods
xchg
mov
out
test
xor
push
rclb
aaa
mov
add
test
int3
jg
loopne
cmpsl
sub
dec
inc
mov
mov
dec
bnd
outsb
mov
sarb
sbb
cmpb
repz
cltd
mov
jne
push
inc
fndisi(8087
in
add
int3
sti
xchg
mov
xor
cmp
aaa
int3
rorb
fadds
jno
outsl
insb
imul
cmp
in
pop
test
bound
nop
cmpb
fcomps
sbb
mov
outsl
mov
nop
cmp
sbb
jne
add
dec
and
sub
clc
push
inc
or
insb
sub
jecxz
adc
add
daa
pop
cld
adc
sbb
stos
add
in
test
jle
je
popa
sbb
cs
test
cltd
jns
stc
add
loop
insb
inc
and
js
sub
je
aaa
and
add
jl
and
imul
sbb
push
iret
or
fnsave
mov
sub
scas
rorb
sbb
lock
nop
repnz
out
push
pop
filds
nop
adcb
push
stos
add
out
test
xlat
sbb
sbb
aam
sbb
testl
add
and
loop
sub
mov
cmp
pusha
call
dec
jae
pop
add
dec
sub
add
test
add
call
mov
pusha
mov
xchg
xchg
add
je
ret
pop
jo
xor
pop
hlt
sub
jb
or
orb
cmp
sbb
mov
inc
insb
popa
adc
or
mov
xchg
jns
lret
xchg
pusha
mov
cmp
lock
roll
fsts
call
ja
cmovs
sbb
repnz
push
nop
add
subl
loopne
push
dec
movsb
jae
fdivs
add
inc
mov
push
pop
lcall
inc
rcll
sbb
cmp
sbbb
pusha
mov
test
stos
sbb
dec
inc
adcb
mov
mov
inc
stc
pop
incl
leave
pushf
loop
imul
fstpl
aaa
sti
inc
xchg
add
lea
dec
push
in
mov
ret
loopne
cli
out
dec
add
and
jmp
xchg
pop
cmp
dec
or
dec
add
fwait
mov
scas
and
mov
and
testl
call
pop
fcoms
js
inc
inc
jbe
js
ss
cmpsb
adc
repnz
ja
add
push
sahf
in
mov
les
add
iret
scas
mov
inc
push
subb
fidivrs
xchg
aas
pop
add
add
das
add
addr16
or
xor
add
adc
add
mov
repz
mov
jno
add
pushf
inc
sbb
insb
add
lock
int
aaa
hlt
and
mov
xlat
xorb
cli
lods
inc
or
jno
push
add
or
add
shll
mov
sub
lock
es
js
mov
pop
pop
data16
add
into
mov
lret
inc
pop
add
int3
mov
pop
add
pop
adc
ret
ret
out
add
lods
ja
push
add
mov
jno
jmp
ret
lahf
lret
mov
adc
js
xor
fsub
and
jno
add
ljmp
popa
cmp
cmp
movsl
sub
mov
andl
push
je
mov
int
inc
sbb
dec
fildll
dec
xchg
mov
add
xchg
lods
pop
int
test
add
loop
and
daa
inc
and
roll
push
mov
daa
addr16
and
jl
lock
add
imul
add
mov
mov
or
xor
add
into
fnstenv
jmp
pop
pop
add
xor
inc
les
adc
sbb
dec
loope
add
repz
insb
sub
add
sbb
push
lock
pop
dec
in
loopne
imull
movsb
mov
aad
inc
ret
lock
xor
test
rolb
stos
pop
mov
mov
add
mov
inc
call
jno
mov
cmpsl
subb
dec
out
add
xchg
xor
enter
out
andl
push
rcrb
scas
out
sarb
xor
out
call
add
jmp
aas
xchg
repz
and
mov
int
cmpb
repz
adc
cmc
dec
pop
sbb
cmpsl
fnsave
xor
xchg
pop
push
mov
xorb
into
lahf
sahf
sub
aam
cmp
xchg
rcrb
cs
and
mov
mov
xor
jge
mov
js
nop
mov
lds
push
fiaddl
jb
push
mov
xchg
mov
fsubs
inc
add
xor
sbb
rcrb
jle
pop
jl
imul
sbb
inc
sti
add
dec
out
cmp
adc
add
mov
xchg
sbb
add
repnz
leave
mov
je
add
jmp
cld
bound
push
dec
orb
pusha
ret
test
orb
in
sub
dec
push
pop
sbb
cwtl
jge
ret
cmp
fwait
sbbb
cmc
jbe
dec
loop
add
inc
mov
movsb
nop
data16
mov
cmpsl
rclb
push
cmp
adc
sti
mov
or
loope
jnp
add
rolb
sbb
flds
xchg
cli
incb
inc
pop
mov
dec
aam
sub
jl
lock
aaa
stos
jb
jmp
cwtl
test
sub
xchg
idiv
mov
addl
cmpsb
sub
arpl
js
cmc
and
pushf
mov
orl
inc
pushf
ficoms
out
cmp
push
inc
lahf
xchg
ss
fstpt
bound
mov
and
add
adc
clc
fisubrs
js
lcall
xchg
inc
js
es
mov
mov
rorb
xchg
lret
jmp
mov
aas
or
xor
mov
or
lock
outsb
sub
orb
jno
sub
mov
imul
jne
add
push
pop
dec
fsubl
test
jno
inc
lock
cmpl
lods
test
fists
mov
mov
xor
sbb
xor
add
pusha
clc
popf
cmp
leave
add
push
jb
and
ret
xchg
or
xchg
inc
mov
cmp
mov
aas
cli
lock
push
mov
adc
mov
add
subl
add
into
mov
test
scas
inc
push
mov
or
inc
push
mov
lds
adc
mov
loop
mov
cwtl
add
lods
jmp
stos
add
cltd
clc
lahf
add
fs
xlat
sahf
cwtl
add
and
sbb
lods
cltd
clc
not
add
sub
add
mov
mov
test
xor
pop
dec
out
add
pusha
xchg
jbe
push
stc
push
jae
or
rclb
pop
test
lock
arpl
stos
add
icebp
sbb
fwait
cmpsb
inc
out
push
push
fsub
gs
cltd
xchg
mov
xchg
in
add
jne
or
andb
and
jo
test
inc
jnp
cmpsl
dec
jno
inc
add
mov
lods
add
in
shr
mov
js
aaa
inc
cmpsb
sub
adc
pop
flds
cmp
inc
jb
in
int
add
inc
push
mov
mov
adc
cwtl
les
pop
test
cwtl
lahf
shlb
cmp
add
test
pop
xor
pop
enter
pop
sbb
add
push
in
mov
jp
or
sbb
push
xchg
add
mov
outsb
icebp
ljmp
jmp
adc
dec
mov
pop
orb
or
pop
sti
cli
pusha
add
and
add
add
mov
out
add
or
cltd
add
mov
jbe
add
xchg
in
cmpsb
aas
push
jo
shlb
aad
sub
lods
adc
adc
mov
data16
cmp
mov
mov
and
jo,pt
cld
pushf
shlb
jne
fsub
xchg
and
js
cld
and
add
xchg
inc
les
cltd
std
or
or
ficoml
loop
mov
clc
add
stos
enter
inc
jl
sub
cwtl
xor
popa
cmp
test
lock
lea
fbstp
pop
imul
ja
aas
add
jmp
mov
adc
push
or
inc
fs
pop
scas
dec
fsubrl
adc
sar
in
push
push
add
lds
xor
stc
enter
dec
in
ds
adc
adc
mov
out
sbb
cmpsb
cmp
push
pop
and
sahf
ja
add
push
pusha
pushf
cmpsb
dec
add
xor
or
and
pop
inc
add
push
sbb
clc
add
mov
lahf
push
loopne
aaa
cs
bndstx
stos
sub
pusha
movsl
daa
aad
add
outsb
std
inc
call
cld
mov
mov
rorb
inc
mov
rorb
icebp
jl
jmp
arpl
jge
add
stos
mov
and
mov
cmp
das
lcall
mov
icebp
rorb
mov
bound
imul
push
dec
cmp
aad
rcll
subb
add
add
lds
add
lods
lock
sbb
iret
cmp
add
mov
cli
pop
sti
repnz
inc
jno
sub
in
mov
add
mulb
fmull
das
cmpsb
bnd
iret
add
loop
lea
movsb
pop
je
sub
xor
dec
lods
stc
sub
lock
adc
sbb
clc
jne
xchg
fxch
je
testb
and
out
mov
pop
cmp
sub
pop
xchg
cs
ret
stos
mov
xchg
xor
inc
aas
pop
and
sbb
push
aas
js
movsb
ss
add
cmpsl
xor
pop
inc
jno
add
dec
je
adc
fimuls
adc
out
cmp
xchg
mov
cmp
xor
mov
sbb
add
mov
cmp
movsb
jno
mov
sbb
loopne
add
dec
pusha
sarb
jnp
add
mov
xchg
xchg
incl
loopne
sub
int3
mov
add
adc
inc
in
mov
push
push
adc
and
pop
xchg
xor
jmp
or
cmp
add
popa
cmpsl
add
mov
movsb
negb
add
outsb
loop
push
cld
add
dec
arpl
mov
add
xor
es
ret
pop
push
out
and
or
pusha
jmp
xchg
push
inc
aaa
lods
xlat
or
mov
pop
dec
add
adc
arpl
cmpsb
cmpb
out
adc
sysenter
faddl
mov
add
repnz
rolb
or
movsl
pop
pop
imul
pop
add
or
test
test
xlat
mov
inc
lret
cmpsb
mov
lcall
add
dec
mov
adc
jns
lock
jge
or
pop
add
push
arpl
scas
sarb
sub
aad
add
push
les
std
xchg
mov
mov
push
xor
push
lret
es
or
jo
sub
mov
das
add
scas
aas
jo
out
nop
sbb
inc
sub
rcrb
leave
jb
or
in
bound
movsb
std
add
mov
in
add
or
xchg
inc
jle
inc
adc
and
scas
nop
bound
cmovo
add
mov
mov
cmpb
fdivl
int3
pop
mov
test
dec
repnz
shlb
xchg
subl
jns
pop
mov
cli
pop
xchg
popf
loop
add
mov
fnsave
push
add
call
sbb
cmpsb
jg
pusha
inc
mov
mov
cltd
add
addb
or
and
out
sbb
cli
pop
testb
inc
lods
fs
scas
pushf
ret
rorl
xchg
push
in
popf
mov
outsb
add
push
mov
roll
pop
sarl
hlt
xor
xor
stos
pushf
stos
add
addr16
pop
jns
jo
scas
add
loopne
cmc
cld
addr16
enter
fimuls
pop
xchg
jmp
mov
push
cmp
add
jp
aam
in
add
inc
push
movsb
xchg
mov
add
xchg
in
aaa
jbe
xchg
loopne
push
cmp
insl
ja
lods
add
and
xchg
fadds
pop
adcb
pushf
add
push
adcb
jae
add
stc
loopne
pushf
add
aaa
ss
adc
adcb
adc
inc
add
or
pop
ja
or
lcall
jno
xchg
addb
pop
sahf
in
mov
add
imul
jecxz
dec
shlb
outsb
xchg
pushf
inc
cmp
push
popf
push
in
mov
sbb
rol
and
jns
jo
xor
popl
dec
cmpsb
push
inc
addr16
cs
call
inc
pusha
imul
inc
rcll
test
jno
add
inc
and
dec
shl
lods
add
flds
cld
es
pop
jmp
xchg
das
dec
xor
sti
xchg
add
nop
push
add
add
mov
in
icebp
sub
sarl
stos
xchg
pop
sbb
sub
inc
insb
xor
stos
add
inc
call
jnp
add
das
cmc
jae
test
sbb
pushf
xorl
ja
rcrb
add
jnp
pop
add
frstor
mov
jp
loope
lahf
scas
xor
ret
int
enter
pushl
clc
inc
pop
pop
jne
or
jge
cmpsb
shlb
mov
filds
shlb
repz
js
push
inc
mov
push
jb
jmp
push
lock
pusha
add
stc
inc
out
mov
sub
or
add
jle
inc
push
push
mov
adc
push
inc
push
and
mov
mov
orl
cmp
xor
outsb
pop
xchg
ss
xchg
mov
in
xchg
mov
in
jo
jne
in
sbb
adc
ficoms
push
nop
test
shl
outsl
mov
mov
pop
ds
outsb
mov
xor
ja
adc
ret
jb
jl
movsb
gs
daa
push
xchg
sbb
push
in
bound
xchg
sahf
pusha
pop
loop
push
fimuls
cmpsb
loopne
xchg
test
mov
jb
in
add
push
cmp
xchg
fldt
shll
mov
aad
sbb
pop
mov
xchg
btsl
and
add
xchg
sahf
test
adc
notb
jle
ss
sbb
or
test
jmp
pusha
cmp
xor
popa
and
fstpt
mov
mov
andl
jnp
adc
pop
rcl
xor
incb
add
or
add
fnstcw
mov
pop
ret
lret
icebp
push
add
aam
push
imul
mov
rorl
mov
sbb
stc
or
in
jecxz
add
add
add
lret
cmp
add
jle
mov
js
mov
aas
add
push
mov
jns
sbb
fldenv
into
cmp
push
mov
rorl
inc
pop
nop
or
aam
lret
sbb
adc
pop
jmp
and
lret
mov
jb
add
adc
cs
cmp
jle
xor
or
jno
js
xchg
shrl
mov
aam
and
dec
sbb
xchg
add
clc
jmp
lock
or
or
popa
jg
lds
sbb
adc
call
mov
cmpsb
cmp
add
mov
add
outsb
xchg
cmp
xor
aaa
or
cli
add
jnp
stos
add
dec
pop
jae
testl
jmp
int
add
decb
mov
aad
xor
ret
cmpsl
pop
rcrl
sahf
jno
data16
loope
push
pushf
add
pop
fwait
je
testl
lret
add
sbb
sub
addr16
jb
mov
sbb
decb
add
clc
mov
or
inc
lret
pop
std
pop
mov
orl
jo
fisubs
add
xor
sub
or
lret
daa
pop
xor
push
push
gs
pusha
jbe
push
inc
inc
add
enter
and
dec
add
daa
mov
add
sub
push
xor
lcall
icebp
lock
cmpsl
pop
fiadds
lret
adc
jecxz
je
sbb
movsl
dec
dec
inc
popf
shr
insl
pop
mov
add
pop
inc
add
sbb
jl
adc
adc
and
mov
loope
adc
sbb
popa
int3
dec
sub
or
ret
or
sbb
addb
idivl
xchg
inc
les
sub
int3
push
imul
notl
push
aad
xchg
cmpsb
mov
js
sbb
popa
jo
adc
mov
or
jl
mov
add
rol
std
dec
inc
dec
stos
clc
sbb
leave
lcall
adc
add
adc
and
ret
or
repnz
add
lea
addb
dec
xchg
and
xor
jl
sarb
pusha
test
imul
dec
dec
loop
add
push
and
testl
je
xor
bound
jnp
push
orl
add
or
lahf
mov
rorb
push
adc
or
ret
lock
adc
loopne
adc
stc
inc
mov
mov
add
and
mov
cs
jle
sub
pop
cmp
stc
aam
sub
jnp
pop
jns
addr16
dec
adc
enter
outsb
jp
add
or
pop
mov
out
mov
dec
sub
mov
xor
mov
movsl
dec
xchg
mov
add
loope
cmpsb
sbb
add
mov
rorb
dec
int
addr16
sbb
loopne
sti
mov
mov
add
xor
and
out
sbb
enter
add
sti
fcoml
mov
inc
lret
add
in
push
mov
dec
mov
mov
xchg
add
in
sahf
add
sbb
cmpl
clc
adc
push
and
mov
cwtl
xlat
addl
lods
add
enter
add
icebp
mov
jae
add
inc
push
in
jge
mov
inc
scas
inc
push
pop
out
xor
neg
jo
mov
and
andb
dec
pop
pop
iret
add
sub
add
inc
dec
push
cmp
jecxz
aad
aaa
cmp
mov
or
rcrb
sbb
and
out
xor
push
insl
pop
std
add
mov
faddl
xor
jge
inc
add
jae
pop
mov
shl
xlat
jns
pop
dec
rorl
cmp
add
add
enter
ss
adc
add
add
inc
sbb
adc
inc
mov
scas
sbb
add
rclb
sbb
imul
cwtl
add
xchg
jo
add
int
outsl
push
clc
sbb
add
lods
into
movsl
fsubl
push
test
aaa
add
or
out
dec
stc
add
decl
loopne
pop
shlb
call
xchg
sbb
pop
jbe
scas
cld
inc
xchg
cmpsb
add
mov
pmaddwd
in
mov
inc
sahf
sub
or
arpl
outsb
add
lret
pop
sets
pop
mov
adc
leave
add
xchg
sbbl
dec
rcrb
cmp
add
mov
mov
es
xchg
adc
mov
fildl
aad
mov
adc
add
or
sbb
add
jmp
dec
das
pop
loop
lcall
push
mov
enter
fs
sbb
setp
sub
add
loop
or
add
adc
xchg
push
fadd
insl
lahf
faddl
mov
in
and
pushf
in
add
xchg
aam
cld
sub
cmc
add
pushf
mov
test
adc
dec
adcl
add
es
jno
dec
mov
and
mov
mov
push
mov
data16
push
xor
testb
push
push
out
or
fs
pop
sbb
xchg
xlat
jl
pop
jne
cli
mov
out
push
push
sbb
icebp
add
inc
and
xlat
add
movsl
add
adc
in
cmp
cli
insb
es
nop
cltd
cmp
mov
data16
dec
add
add
or
adc
rcrb
daa
cmpsl
test
nop
mov
fildll
ja
imul
loop
push
push
scas
lret
sub
mov
add
add
xchg
add
imul
jle
arpl
xorb
cmp
cli
bound
mov
call
test
or
fs
sbb
cmpsb
lods
pop
stc
pop
sub
dec
pop
clc
rolb
fiaddl
sbb
mov
mov
add
or
add
ds
das
shlb
jg
cli
lahf
loopne
and
mov
in
mov
addl
les
push
sub
fisttpl
sub
add
rorl
push
xchg
pcmpeqd
add
aam
sbb
mov
inc
mov
clc
cmp
pop
jle
xchg
iret
insb
or
mov
nop
lods
nop
outsl
sbb
add
mov
cmp
aad
hlt
ss
movsb
pop
adc
xchg
repz
add
push
jbe
clc
xor
mov
ret
push
pusha
mov
call
jne
cmp
xchg
mov
pop
push
jae
pop
add
push
fdivr
inc
fcomp
push
add
pop
in
testb
dec
test
lret
in
jmp
xchg
push
repnz
loopne
mov
mov
add
dec
pusha
and
je
push
lahf
addl
femms
add
enter
and
fldcw
popl
mov
dec
push
pusha
adc
pop
or
add
lock
xlat
jp
ja
test
dec
scas
cmpsb
add
call
pop
xorb
sarl
mov
leave
push
mov
jno
add
and
fnsave
test
add
pop
mov
addr16
jge
aas
and
mov
movsl
bsf
push
pop
adcb
or
add
add
movsl
roll
mov
nop
gs
jmp
inc
mov
push
add
outsb
pop
mov
dec
push
push
push
add
mov
jmp
pushf
or
adc
loop
mov
add
cmc
cmp
dec
add
add
jns
add
push
testl
sbb
loop
loope
punpckhwd
add
add
jmp
push
add
pop
xor
stos
pushf
xchg
pop
jp
in
unpckhps
push
sub
adc
push
pushf
inc
mov
loop
cli
gs
loope
imull
push
sbb
push
xor
xchg
push
mov
push
push
sub
or
ret
fidivrs
xor
cmp
xchg
add
cmp
lock
les
scas
stos
adc
sub
cmp
filds
dec
or
int3
ret
inc
dec
icebp
sub
push
hlt
addr16
mov
add
xor
out
pop
sbb
imul
lock
inc
mov
outsb
in
cmpb
mov
psubusb
push
sub
and
cltd
movsb
inc
add
xchg
and
cmc
add
mov
dec
jp
jnp
out
pop
dec
aad
leave
push
add
or
add
sub
add
cmpsb
lahf
pop
pop
push
iret
dec
pop
nop
mov
xchg
mov
imul
add
pop
pop
arpl
test
mov
push
aas
imul
jno
xchg
mov
push
dec
sahf
outsl
repz
stc
movb
test
aad
xorl
jb
sub
push
mov
cmc
mov
scas
incb
test
sub
add
add
cmp
fcomps
jg
mov
dec
or
inc
and
sbb
add
jae
pushl
iret
or
rcrl
loope
jo
push
rcll
faddl
xchg
jbe
add
fcmovnb
ss
adc
rcll
add
sub
pop
add
xor
xor
cmpsb
fs
adc
add
pop
sub
add
int
jle
lock
cmp
lret
movsb
adc
or
push
roll
andb
dec
push
jp
mov
push
test
das
outsb
or
fucomp
movsb
xor
pop
jb
jge
rclb
push
jae
add
xchg
add
inc
mov
repz
lahf
cmp
rclb
dec
add
fildll
pop
cld
roll
inc
xor
imulb
xor
mov
add
pop
xchg
clc
flds
imul
mov
mov
xchg
nop
cmp
jo
jne
and
testb
addr16
pop
cmpsl
into
out
addb
dec
and
lret
mov
mov
mov
enter
data16
sub
mov
gs
inc
add
lods
sbb
add
in
cmp
jns
add
pushf
hlt
add
cmp
mov
add
pusha
adc
rolb
ljmp
adc
cmp
idiv
call
pop
je
pop
xor
push
add
adc
or
mov
xlat
mov
imulb
mov
lods
fdivr
mov
adc
inc
fsubrp
in
sub
dec
enter
cmp
idivl
or
cmp
cwtl
mov
dec
mov
addl
or
arpl
xchg
jb
xor
loopne
push
or
mov
in
iret
add
imul
clc
loope
mov
btc
shl
repz
sub
je
loope
add
adc
mov
out
sti
push
rclb
jg
fsubr
xchg
daa
adc
mov
or
icebp
rorb
mov
cs
jmp
adc
setns
cmp
xchg
sub
pop
and
sub
or
scas
add
imul
insb
pop
ficoml
pop
fcomps
aad
arpl
push
add
gs
ret
mov
add
push
cwtl
xor
cmp
das
add
push
and
inc
inc
popf
mov
add
outsb
nop
adc
fcmovne
movsl
popa
xor
mov
add
add
cmpb
repnz
add
mov
mov
das
adc
or
and
push
add
popf
mov
fstps
xchg
loop
cmc
add
repz
pusha
dec
sbb
sarb
add
scas
dec
in
sbb
mov
add
push
pop
mov
inc
roll
dec
cltd
or
push
add
jle
jecxz
aam
push
mov
loopne
add
mov
dec
nop
sub
sbb
fsubrl
fs
ltr
stos
xor
and
add
xlat
scas
sbbb
pop
sub
call
cmp
push
pop
xchg
xor
repnz
js
xchg
cli
sahf
pop
out
data16
aam
cmp
inc
test
add
xor
inc
ja
jmp
push
cltd
xchg
popf
bound
clc
pop
mov
push
add
adc
xor
test
lahf
add
lods
add
cli
push
add
push
movb
sahf
add
adcb
adc
mov
or
mov
jbe
pop
sub
xorb
cmpsl
popf
jne
or
sbbl
out
add
xchg
push
add
mov
loope
ret
mov
movb
push
fisttps
pop
cmp
inc
pushf
shrl
push
ret
add
in
xchg
sub
jecxz
jl
je
lock
xlat
adcb
fadds
inc
sbb
insb
rorb
sub
rcrb
add
pop
andb
repz
lock
decb
push
mov
pop
fwait
jns
mov
shll
cmp
adc
fisttps
or
sarb
push
mov
mov
dec
push
ljmp
lret
add
and
add
dec
out
add
push
adcl
cltd
add
push
sbb
jae
sti
rolb
aam
dec
lcall
push
shlb
nop
xor
pop
rcrb
push
xor
mov
out
ret
add
pop
mov
xchg
dec
das
insl
sbb
in
enter
cmc
xchg
mov
pop
add
cmpsb
insb
pop
aam
push
add
xlat
fildll
sbb
add
hlt
xchg
dec
jbe
xchg
mov
out
aaa
subb
sub
out
fisttps
nop
insb
cmc
nop
enter
scas
xchg
mov
pop
cmpsb
nop
add
adc
add
rcrb
into
cmc
add
in
add
add
inc
sbb
add
or
mov
dec
xchg
pusha
repz
or
jmp
add
mov
jne
ret
testb
xchg
imul
push
stc
icebp
cld
pop
cld
pop
hlt
push
das
fcoms
imulb
or
mov
sti
mov
in
imul
or
and
cmpsl
lock
pop
or
adc
xor
loop
or
xlat
push
aas
add
jo
cmp
sbb
outsl
popa
add
cmpsb
jo
or
rorl
xor
mov
jo
dec
sub
pop
loop
cmp
cmpsb
xor
add
cmp
stos
xchg
mov
sbb
add
out
cwtl
or
mov
pop
fsubs
addl
sarb
sbb
cmp
cli
sub
fildl
xlat
adc
push
in
inc
xchg
lahf
push
xchg
add
aam
orb
add
test
rcr
mov
fisttps
jbe
add
mov
sbb
enter
outsl
pavgb
sbb
inc
push
fists
lods
sbb
xor
mov
bound
mov
rorb
dec
add
scas
je
daa
ret
add
ror
pop
add
cld
fisttps
inc
andl
pop
add
test
mov
xor
cmp
cmp
loope
sti
mov
add
xchg
insl
add
fwait
out
jb
adc
js
fcoml
into
or
scas
dec
cmp
adc
cmp
push
nop
cmp
cmp
add
jp
mov
mov
inc
rclb
les
xor
movl
nop
fs
inc
cmc
lea
sti
sub
loopne
pop
add
xchg
sbb
inc
add
pop
fistl
leave
es
pop
pop
add
and
loopne
pop
add
xlat
cmp
add
ja
adc
mov
sbb
and
loope
clc
mov
pop
xchg
jae
shrb
ljmp
test
xor
leave
lock
adc
cwtl
insl
adc
ja
mov
js
mov
iret
outsl
out
adc
xlat
fsub
fisubs
nop
push
cmpsb
loopne
mov
or
add
xor
lods
stos
or
push
pop
add
std
jecxz
test
xchg
filds
fmul
jbe
xchg
cwtl
mov
loope
jecxz
icebp
or
rclb
insl
out
push
or
cli
shll
jecxz
push
add
les
fimull
xor
pop
jo
loopne
mov
add
xchg
sub
add
stos
push
push
pop
push
leave
xorl
int
jb
and
fimuls
adc
lods
mov
pushf
mov
adc
loopne
sub
jecxz
sbb
dec
lods
sub
dec
inc
dec
sbbb
sarb
add
sub
outsb
jmp
unpcklps
adc
nop
add
scas
pop
test
movsb
orb
add
and
pop
mov
out
push
aam
inc
mov
jecxz
pusha
imul
add
scas
xchg
test
mov
add
fwait
aaa
mov
adc
sbb
xor
stos
jne
jae
add
mov
cld
sbbl
stos
dec
clc
out
and
out
outsb
test
sub
mov
repz
xchg
cmp
jns
push
mov
call
mov
add
daa
fidivrs
repnz
dec
pop
subb
lahf
pushf
xchg
xchg
incb
mov
sbb
and
lods
jmp
int3
test
add
mov
push
addb
xchg
sub
addr16
xchg
ja
inc
sub
add
into
xorl
shlb
mov
add
loopne
dec
and
mov
test
add
bound
inc
or
add
xchg
cwtl
fcoml
in
pushf
add
iret
and
jle
mov
jns
add
jmp
xor
lret
clc
sub
sbb
xor
sub
adc
clc
xabort
jl
cli
inc
mov
cmp
test
lcall
add
stc
and
cmp
mov
into
roll
add
ss
mov
rep
mov
cltd
add
mov
inc
mov
push
hlt
fs
fcmovnu
push
stc
or
push
daa
rolb
mov
xchg
aam
jbe
or
adc
jmp
xchg
xorb
add
pushf
adc
inc
jae
cmp
xor
aaa
je
xchg
add
arpl
ret
rclb
out
shrb
rolb
jb
inc
or
inc
sub
and
cwtl
adcl
jne
dec
xchg
add
add
mov
or
stc
or
push
push
pop
cs
roll
lock
clc
data16
adc
js
leave
lds
fs
rclb
fiaddl
ja
dec
ret
sbb
cltd
mov
int
lods
and
cld
sub
shrl
inc
loop
clc
sbb
mov
ss
jae
sbb
mul
add
cmp
js
adc
inc
clc
lds
cwtl
sub
adc
or
sbb
pop
mov
mov
ds
push
aad
add
cmp
add
int3
push
sub
add
rcrb
mov
daa
pop
add
sbb
or
rorl
call
sub
adcb
stos
mov
inc
andl
test
pop
out
pop
dec
nop
stos
mov
mov
xor
mov
jo
mov
add
cld
loope
push
aad
add
rorb
add
sub
push
adc
and
xchg
lods
xchg
aad
push
sub
sbb
mov
mov
push
mov
test
fwait
xchg
jecxz
jnp
cmp
inc
adc
rolb
add
sbb
sub
pop
add
out
jno
or
filds
mov
inc
cli
ljmp
fcomp
sbb
je
add
adc
add
xchg
mov
movsl
cmpsb
jmp
pop
inc
cmp
idivb
xor
mov
jl
arpl
xor
mov
lcall
mov
add
push
movsb
push
mov
add
jno
int3
xchg
ljmp
into
lea
mov
pushf
int3
data16
add
mov
mov
movsl
push
dec
adc
inc
fstpl
cmpsl
and
cmpl
xor
or
pusha
hlt
outsb
cltd
adc
pop
jne
je
push
add
daa
adc
inc
jl
inc
es
xlat
push
add
shr
lret
pop
add
sar
scas
mov
mov
iret
push
addr16
test
push
xor
xor
mov
rclb
xor
pusha
pop
test
sub
and
rorl
ljmp
and
movsb
cld
andnps
xor
stos
inc
les
outsl
out
sbb
xorb
jns
pop
xchg
sarl
jl
add
xor
clc
xlat
add
lods
add
mov
imul
mov
scas
loopne
mov
dec
lret
sub
mov
cwtl
ficompl
push
in
orb
add
xorb
and
cmp
fwait
loope
inc
cmp
cwtl
lret
sbb
test
adc
int3
push
add
mov
das
mov
jo
nop
xor
mov
shlb
mov
and
iret
add
sar
sub
cmp
jle
les
stos
adc
add
cmp
fsubrl
test
out
imul
or
add
xchg
jp
loopne
pop
and
xchg
lods
adc
mov
push
or
push
inc
jo
filds
test
pop
hlt
out
inc
add
push
mov
add
or
out
iret
or
int3
mov
add
ljmp
add
fstpl
or
add
fnop
mov
icebp
add
repz
cmovs
lock
xchg
loopne
mov
add
pop
pop
inc
jbe
mov
mov
les
in
sbb
scas
cltd
add
push
add
adc
sar
add
or
and
add
icebp
cs
push
sub
pop
mov
in
add
xchg
call
pushf
loope
jmp
shl
add
pop
mov
sub
cwtl
test
pop
and
dec
pop
adc
sarb
inc
rcrb
add
push
jbe
adc
rcrl
bound
cltd
add
dec
or
inc
ljmp
mov
inc
add
mov
stc
adcb
add
and
jo
add
lcall
dec
dec
pop
add
outsb
cmp
sarb
cmp
dec
dec
ficoms
or
cmp
mov
jbe
add
sub
add
inc
rorb
sti
add
insl
push
dec
clc
mov
iret
pop
xchg
sub
je
inc
lcall
mov
aad
add
insb
or
lods
mov
ret
dec
add
outsl
pop
xchg
imul
mov
sub
jnp
les
dec
push
jns
cmc
mov
pop
add
loopne
and
cld
mov
pop
sub
lods
push
mov
pop
dec
movsb
inc
adc
sub
xchg
fisubrs
ret
sti
scas
push
movsb
fwait
pop
xor
outsl
bound
mov
and
daa
add
jae
add
shr
or
fidivs
in
add
dec
push
repnz
sub
add
daa
push
xchg
cli
add
scas
cmp
xor
and
lds
and
sbb
mov
mov
mov
outsl
cmp
inc
ljmp
decb
inc
push
add
inc
mov
ret
scas
jle
lds
add
jl
push
icebp
jo
or
add
or
ss
mov
out
popf
and
push
dec
enter
add
test
push
shr
cs
test
cwtl
pmaddwd
inc
cmp
adc
or
jo
sahf
or
inc
jb
in
loopne
jno
add
jns
adc
lock
je
rcll
hlt
enter
or
lock
and
aam
call
jnp
pop
test
test
mov
and
xchg
cmpsb
push
aad
adc
testb
mov
jge
lret
in
push
movsb
fisubs
not
cmp
push
mov
inc
mov
mov
addb
mov
movsb
ds
test
mov
cmp
sbb
pop
add
iret
inc
push
lret
and
aas
addl
add
jo
cli
lds
push
addr16
roll
aas
cmp
mov
push
shrb
xchg
push
lahf
mov
adc
mov
stos
pop
nop
movsl
or
mov
ds
or
adc
and
mov
push
and
or
cmp
pop
sub
pop
xor
dec
ror
addl
arpl
xchg
fldcw
dec
nop
data16
call
pop
popl
or
rorb
scas
push
fstps
popa
or
cmpb
sbb
mov
inc
in
push
mov
add
clc
in
xchg
test
jge
or
das
insl
cmp
cld
cmc
nop
lock
nop
sub
ss
mov
icebp
test
add
sub
xor
mov
mov
fiaddl
cmp
adc
mov
cli
sub
leave
inc
and
inc
mov
sbb
pusha
xchg
mov
add
mull
aaa
add
fucomi
outsl
jne
loop
add
push
mov
or
nop
shll
aad
ds
xchg
inc
xchg
xorb
les
add
sbb
xor
pushf
sbb
sub
mov
cmp
jg
or
cmpsl
out
mov
add
cmpsb
lcall
jo
xchg
hlt
stos
mov
std
mov
jb
add
lock
mov
xchg
xchg
sarb
stos
andb
ret
nop
or
pop
push
cmp
pop
add
cmc
clc
xchg
push
xor
call
fmuls
add
fdivrp
fstps
mov
imul
add
mov
push
mov
hlt
and
pop
dec
rcrb
cmp
xchg
or
push
add
xchg
arpl
decb
pop
daa
stc
sbb
and
jnp
inc
or
push
and
pop
or
xchg
loopne
mov
sub
aad
lods
cwtl
or
adc
push
add
and
pop
inc
pop
push
adc
cld
testb
or
lds
outsl
add
clc
mov
shll
cs
push
jno
and
pop
sub
add
dec
mov
jb
sarb
jbe
call
mov
cmpsl
sub
add
jno
xor
imul
jge
or
xchg
add
icebp
mov
push
mov
insl
shll
subb
xor
in
arpl
lods
es
jp
push
add
xor
push
xor
pop
mov
movsb
les
add
mov
jbe
lret
loop
push
int3
imul
shrl
pop
add
and
sbbb
cmp
pop
push
jmp
out
pop
xchg
adc
scas
cs
jne
jno
in
inc
mov
add
cmc
andb
arpl
shlb
popf
mov
jae
adc
mov
jmp
inc
shrb
lret
stos
jno
sbb
or
add
loop
mov
sbb
in
jne
mov
mov
sub
dec
lods
rorl
movsl
aas
fprem1
test
lods
adc
xchg
cmp
or
inc
sub
fcompl
add
outsb
mov
ljmp
mov
enter
xchg
add
cmc
add
and
push
add
inc
push
cmp
and
mov
cmpb
test
pop
sbb
daa
add
push
lock
jne
jnp
dec
mov
mov
sub
pusha
outsb
sbbl
rol
jno
lock
ljmp
fwait
cmp
jno
xchg
test
or
sub
daa
cmpb
mov
sub
popa
add
inc
das
faddp
gs
add
and
cmpsw
lahf
mov
add
jg
lea
xlat
or
outsl
cmp
dec
dec
mov
add
xchg
test
lahf
sbb
xor
lret
add
fs
add
out
repnz
sahf
loopne
mov
mov
cmp
mov
xor
in
adc
fstl
add
or
or
lahf
sub
mov
das
inc
pop
fsubs
dec
or
sbb
call
outsl
xchg
xchg
push
aad
sub
sub
push
popf
shl
rclb
mov
adc
fwait
repz
adcb
in
xlat
mov
and
sub
add
pushf
push
jo
xchg
mov
fs
mov
xchg
test
fldcw
loope
les
and
or
jle
popa
lock
add
sahf
jmp
cmp
add
jecxz
xchg
aam
add
inc
pop
dec
scas
and
mov
sub
add
fsubs
and
sbb
enter
dec
add
pop
pop
sbb
mov
sahf
in
pop
pop
xlat
addl
icebp
mov
popa
xor
ror
add
outsl
fadds
xor
and
push
pop
and
sub
lds
dec
out
cmc
sbb
mov
pop
xchg
mov
cli
inc
add
js
in
pop
mov
sub
xchg
jo
popf
push
jo
or
push
stc
add
ss
cwtl
lds
xchg
mov
or
add
fldt
push
lods
ffreep
add
or
mov
add
mov
mov
fsts
sub
je
push
mov
xchg
mov
add
aas
mov
into
jne
cmp
inc
inc
mov
inc
add
aad
jnp
lahf
loopne
sbb
fimuls
mov
mov
inc
cwtl
add
mov
sarb
mul
jno
mov
sub
and
inc
push
and
pop
cmp
jg
xor
push
or
or
addr16
lea
sbb
shlb
or
jle
out
lods
push
push
push
adc
movsl
pusha
fwait
xor
and
add
in
inc
xor
leave
adc
sbbb
scas
or
rolb
in
push
cmc
adc
adc
icebp
push
ja
add
push
cmpsl
int3
or
or
xchg
and
jp
addr16
pop
pop
add
and
in
faddl
mov
roll
add
mov
aam
pop
ret
js
into
jmp
xchg
cmp
mov
cmp
pop
jae
cmc
xchg
into
dec
push
mov
fsubrl
daa
cwtl
cmp
inc
std
mov
enter
cwtl
xor
sub
ljmp
sahf
dec
rclb
mov
cs
push
je
loopne
add
inc
les
pop
fnstenv
dec
fiaddl
jb
push
pop
or
push
pop
pop
add
pop
cmp
rorw
rcrb
add
shl
xor
sti
jne
add
shrb
jo
add
cmp
fsts
decb
xchg
mov
jnp
sbb
push
add
lea
aas
cmp
clc
orb
xor
rol
xor
in
pop
adc
movsl
sbb
dec
int
mov
push
ror
push
add
int
and
lahf
sbbb
inc
mov
fisttps
cmpsl
cmp
loopne
outsl
into
cmpsb
dec
and
add
stc
insb
jecxz
mov
adc
lods
xor
arpl
add
mov
push
and
and
or
xor
popf
pop
inc
out
sub
jp
lcall
mov
or
test
or
cmpsl
and
imul
insb
aaa
adc
mov
cwtl
add
inc
das
mov
addr16
rorl
std
pushf
in
f2xm1
out
sbb
hlt
and
daa
and
mov
call
les
test
movaps
push
leave
ret
inc
sbb
call
xor
push
rcrl
sub
push
dec
cli
nop
jecxz
subb
lods
adcb
mov
aaa
fwait
add
out
xor
jbe
sub
inc
subl
adc
shlb
push
fisubrl
stos
sub
out
mov
mov
cltd
inc
fsubs
push
mov
lock
sub
push
in
add
nop
out
popa
mov
fcmovu
inc
fwait
sbb
sub
sub
sub
and
dec
and
adc
rolb
shr
inc
jl
test
xlat
aad
sbb
rcrl
push
pop
in
daa
stc
and
fsubrl
fcomps
or
mov
loop
movl
outsl
dec
xchg
mov
fiadds
aaa
xor
fmull
test
insb
out
cmp
iret
cmp
test
jp
rorl
ficomps
pop
sub
mov
xor
not
sub
add
mov
subl
or
fcoms
cs
xchg
loope
leave
xadd
sub
ror
xor
jno
pop
and
arpl
or
es
out
aad
repnz
jb,pt
adc
andb
js
ja
add
sub
push
mov
nop
pop
push
pop
cltd
in
and
sbb
push
and
fisubs
daa
mov
sub
push
sub
or
daa
iret
adc
bnd
pusha
pop
movsb
int
in
pop
adc
dec
pop
add
imul
push
xchg
ret
add
pusha
jns
mov
nop
ds
mov
or
into
xor
popf
stos
cmp
fbld
sbb
and
xor
cmp
in
add
loop
bound
push
xor
cmpsl
mov
mov
lahf
rorl
dec
jmp
test
in
lods
test
je
mov
add
gs
out
shrb
add
lea
shr
add
pop
cmpsb
fnstcw
xor
jno
fcomps
adc
jl
mov
sub
pushf
push
xlat
sub
rcll
add
shll
imul
in
xchg
mov
add
sbb
out
add
sahf
hlt
inc
clc
xchg
add
add
mov
pop
or
inc
dec
test
divl
andb
aam
das
ror
jecxz
andl
mov
stc
loopne
cmp
sbb
xor
xor
sub
jge
add
xchg
hlt
mov
dec
jae
loop
cmp
je
pop
adc
repz
inc
movsl
scas
outsl
dec
roll
mov
out
jmp
mov
and
mov
xchg
jecxz
daa
pushf
mov
inc
gs
fisttpll
popa
xor
int
mov
jae
dec
js
add
xchg
jo
mov
lods
repz
add
xchg
fsubr
sbb
push
or
xchg
pop
inc
and
sub
push
lods
jecxz,pt
and
adc
sbb
shrl
adc
enter
mov
leave
fdivrs
sti
mov
sub
mov
fiaddl
mov
add
dec
fsub
xlat
push
jp
test
cwtl
mov
and
mov
mov
mov
mov
mov
cmp
sbb
fwait
lods
loopne
lahf
mov
push
fsubl
inc
sbb
test
mov
das
mov
fdivrp
push
xor
jl
xor
jmp
add
aam
add
out
push
inc
loop
sub
sbb
mov
dec
xchg
push
add
loope
jne
jle
test
lret
bound
inc
rolb
push
cltd
shlb
leave
inc
jbe
nop
sub
mov
xorl
cmp
cmp
lcall
lock
push
mov
cwtl
std
pop
das
fwait
inc
jg
add
push
sbb
ret
mov
mov
cmpsb
jae
push
dec
add
clc
call
cwtl
push
cmp
sbb
jg
aaa
jecxz
add
mov
cmc
sbb
addl
add
popa
add
add
xchg
jae
push
push
sbb
enter
leave
js
add
ds
in
loop
jnp
movsl
xchg
outsb
sbb
or
or
ja
dec
jne
cli
out
adc
sub
enter
cli
push
shrb
or
outsl
sbb
push
bound
sub
add
fdiv
fistpl
in
add
dec
xchg
push
xlat
push
dec
xor
or
or
iret
and
cmpsl
sub
mov
cmp
push
mov
adc
int3
or
jns
icebp
sbb
push
jo
test
lods
mov
outsw
int3
add
jbe
push
add
mov
dec
xor
pop
and
add
pop
sti
jnp
push
adc
inc
mov
out
jns
jo
or
mov
sub
call
add
push
rcll
rolb
clc
jl
xchg
inc
or
and
in
ror
pop
pop
mov
add
into
xchg
sub
pop
dec
mov
subl
pop
dec
xor
push
jg
push
or
sub
adc
pop
dec
pusha
mov
jae
aad
adc
sub
pop
xorb
fiaddl
ret
inc
mov
xchg
pop
mov
push
pop
lcall
push
adcl
xor
xlat
pop
int3
add
adc
or
cmc
sub
nop
xor
shr
or
ficompl
lahf
cld
out
and
add
in
push
cmp
jno
jg
pop
aam
adcb
jl
mov
add
push
jne
mov
add
jp
add
add
faddl
jno
test
pop
cmpsl
jecxz
out
mov
dec
pop
sub
sub
add
dec
jl
negb
fwait
adc
jmp
jle
xchg
inc
mov
inc
test
adc
adc
or
pcmpeqw
inc
or
add
test
leave
cmc
add
nop
cwtl
loope
xchg
xor
aad
dec
aas
sbbb
lret
push
add
pop
xchg
stos
fsubrs
dec
push
shrl
jns
push
cltd
gs
cmp
test
shl
jae
adc
sub
aam
pop
mov
cwtl
in
xor
idivl
mov
cs
sbb
pop
mov
and
stc
xchg
add
push
push
mov
push
and
fcoml
lahf
mov
mov
arpl
push
pop
add
scas
xchg
lock
or
mov
add
mov
stos
add
or
lret
int3
mov
ljmp
in
sub
add
aas
add
xorl
rol
mov
jae
or
dec
xchg
and
arpl
push
add
adc
mov
xchg
add
xchg
pop
rolb
adc
cmpsb
lods
adc
pushf
inc
jbe
add
lret
xchg
ret
subl
flds
inc
fcoml
in
and
js
inc
popf
jb
or
adc
inc
add
mov
xchg
roll
ficompl
stc
inc
imul
es
mov
lret
addl
jne
mov
aam
arpl
cmp
and
loope
lods
sbb
leave
cmp
adc
or
lea
mov
adc
mov
mov
outsl
mov
mov
adc
add
mov
add
not
or
call
aam
push
in
test
mov
mov
sbb
scas
add
lods
add
in
inc
add
neg
fidivrl
cmpsb
cs
ds
and
xor
jmp
test
jmp
aad
inc
js
or
xchg
push
mov
fisubs
add
jb
scas
cmp
mov
mov
adc
test
rcr
out
gs
aas
inc
popa
add
mov
pop
int
mov
and
push
add
lds
arpl
inc
lret
pop
pop
test
fs
faddp
stos
int
push
cld
mov
mov
sub
rolb
gs
std
mov
je
add
push
fsubrs
xor
mov
sub
add
and
add
lds
movsb
f2xm1
add
or
lret
and
ficomps
es
cwtl
xor
push
xor
push
mov
sbb
cmp
push
lea
cmp
cld
stos
movsb
add
xor
nop
cmpxchg
mov
jo
xlat
sbb
dec
pop
repz
pusha
test
ja
and
push
scas
mov
jmp
fmull
and
add
jecxz
add
mov
xor
add
xchg
fs
dec
add
sbb
or
add
rcl
add
and
int3
imul
test
leave
mov
jecxz
jae
and
les
or
imul
nop
xorb
push
xor
jle
sub
out
push
jl
jp
mov
mov
push
sbb
outsb
adc
pop
repz
add
loop
jo
movb
inc
xor
dec
outsb
in
jecxz
add
data16
aas
mov
mov
xchg
je
rcrl
xor
ds
arpl
lcall
sbb
addr16
mov
hlt
jae
cvtps2pd
push
inc
popa
mov
fldcw
adc
jmp
lcall
add
xchg
in
js
mov
mov
adc
pushf
sbb
adc
pop
or
adc
aad
std
test
imul
jmp
jge
fsubr
or
sbb
or
sub
jne
sbb
rcrl
gs
lods
scas
cli
pop
mov
inc
add
je
ljmp
jae
sbb
inc
xchg
popa
jg
lock
insb
shrl
push
mov
clc
hlt
outsl
add
sub
in
stos
insb
fstpl
dec
cmpsl
jns
lds
movsl
stos
andps
cli
das
test
cwtl
ret
pop
leave
je
sbb
lcall
mov
fcoms
sysret
push
cmpsb
mov
or
pop
pop
and
adc
shlb
sti
add
add
ret
movsl
pop
divps
mov
lods
mov
dec
cmpsb
xor
stos
movsl
cmp
add
cwtl
and
add
push
mov
jbe
cwtl
test
xchg
adc
jl
or
mov
decl
stos
add
inc
cmc
lds
and
enter
add
addr16
test
inc
jle
pop
stc
fadds
cmp
inc
dec
out
shlb
inc
addb
jg
pop
aaa
xchg
loope
mov
sub
inc
lds
fdiv
add
inc
pop
dec
add
cld
jmp
movsl
push
in
test
push
cmp
mov
inc
popa
mov
jle
shll
adc
stc
cmp
jge
pop
xchg
inc
clc
add
filds
sbb
lea
ljmp
cmp
fsubl
ja
loop
sbb
xor
dec
add
fs
add
mov
getsec
xlat
fdivrs
dec
adc
divl
add
mov
push
loopne
sub
dec
testb
dec
sub
or
mov
loope
and
xorb
xchg
dec
aam
jmp
adc
subb
test
sub
and
in
sub
sub
and
popa
mov
outsl
sahf
mov
mov
inc
popf
test
pop
mov
adc
lds
fdivrl
cltd
cmp
push
cmp
xor
push
out
clc
cld
push
repnz
les
adc
inc
pop
mov
in
and
add
out
gs
rcrb
jecxz
add
out
push
repz
mov
inc
js
add
push
and
pop
ret
inc
arpl
add
fstpt
xor
cmp
jae
add
add
into
incl
outsl
out
push
pop
cmpsb
add
or
rolb
add
repz
add
ss
es
add
leave
nop
push
add
packssdw
inc
xor
push
div
mov
or
aam
dec
mov
jg
mov
je
sbb
xchg
dec
sub
std
insb
aad
mov
pop
lods
fucom
pop
aam
repnz
out
add
inc
or
or
push
push
or
adc
pop
xchg
jns
in
jo
ds
jge
fsubrl
mov
popa
outsb
rol
pop
sbb
lock
repnz
xchg
lea
inc
jge
rcll
add
jns
sub
cld
sbb
jg
mov
and
jle
push
outsb
lret
xor
push
insl
in
bswap
cli
loop
pusha
xor
scas
adc
mov
std
mov
fcomip
sub
pop
push
mov
xchg
add
sar
xchg
add
push
cmpb
and
mov
test
enter
sbb
add
cs
hlt
sbb
imul
push
and
cmp
add
popa
xor
xchg
push
jp
sti
lahf
pop
jg
mov
add
add
dec
jp
jle
int3
add
fdivrl
push
iret
push
push
push
add
jbe
out
nop
dec
je
adc
or
stos
in
les
cmpb
iret
clc
rolb
push
test
pavgb
test
push
inc
ds
ljmp
movsl
outsb
lds
cmc
add
insl
fdivrl
repnz
xchg
adc
add
sub
adc
add
clc
sbb
and
sub
nop
xor
or
loope
adc
sbb
mov
int3
fsubs
inc
test
sbb
mov
jmp
mov
push
push
push
add
inc
xor
insb
cmpsb
inc
lods
lret
clc
mov
or
ret
test
add
push
pop
shll
add
movsb
mov
add
stos
mov
add
and
add
dec
fs
paddb
jo
das
mov
mov
add
bound
add
fidivl
jmp
aam
fwait
xchg
orb
jae
or
or
ljmp
mov
jo
or
add
lds
insl
add
in
dec
ljmp
jne
aad
aas
xor
repnz
repz
arpl
mov
inc
cmp
sub
aad
push
xchg
data16
notb
dec
test
mov
or
xor
inc
insl
mov
shll
cld
cmp
push
xor
jae
xchg
xchg
add
data16
fptan
shrb
add
leave
rol
mov
lods
loopne
dec
mov
cltd
aad
sar
add
std
lock
sbb
int
push
repz
loopne
adc
jo
adc
aaa
xchg
psadbw
add
js
scas
add
dec
ficompl
out
mov
fcoml
sbbl
scas
sub
loopne
hlt
xor
mov
mov
xor
cmpb
aam
jnp
sub
xchg
jge
push
fiaddl
pusha
pop
pop
std
fadd
add
int
add
or
mov
inc
jbe
xchg
sub
sbb
push
jge
shlb
push
movsl
push
les
imul
out
inc
lds
add
into
cmp
popl
dec
add
loopne
xchg
and
scas
push
fwait
sub
shlb
aam
jbe,pt
adc
xor
xchg
nop
xor
cmp
int3
add
add
lock
jecxz
sub
fldenv
cs
popf
or
mov
xor
scas
jge
jp
add
cmp
dec
jns
lock
cmpsl
stos
scas
pusha
aad
xadd
add
nop
outsb
dec
iret
fst
inc
add
jns
out
lret
popf
push
add
jecxz
push
shlb
in
idivb
test
and
inc
dec
insl
std
stos
imul
cltd
loop
test
push
pop
outsb
cmp
and
inc
scas
aaa
pusha
add
fistpll
mov
mov
sbb
repnz
arpl
sbb
mov
pop
shlb
jg
push
add
cmp
into
xchg
incl
popl
adc
pop
ds
xor
lret
inc
insb
adc
jmp
enter
mov
out
ljmp
inc
mov
or
stc
add
jmp
pop
add
shl
aam
adc
sbb
pushw
fisttpll
jae
inc
adc
dec
add
mov
cs
add
icebp
cmpb
dec
scas
inc
pop
das
rorb
adcl
inc
push
add
add
dec
out
std
sub
pop
push
push
adc
inc
inc
lcall
ret
testl
push
in
mov
xchg
lahf
mov
pop
dec
cmp
mov
lods
cmp
add
mov
mov
jl
add
fistl
in
mov
xchg
pop
sti
jbe
in
fldenv
enter
mov
ret
lods
gs
mov
jle
jo
js
fisubs
int3
in
adc
cmp
push
adc
sbb
sub
add
or
adc
mov
add
repnz
or
lret
pusha
test
xchg
add
scas
bound
or
fidivrs
push
push
lret
add
inc
xorb
push
pop
push
movsl
sahf
cmpl
jnp
mov
sub
std
cld
lcall
jno
and
scas
sbb
cmc
aas
lds
jp
cmp
clc
lods
sbb
jge
jecxz
and
inc
mov
loopne
add
mov
xor
test
jnp
or
or
fstl
aam
add
push
mov
mov
dec
out
ret
outsl
daa
add
call
fisubrs
btc
sti
sbb
aam
mov
adc
ds
add
add
dec
and
add
adc
jns
and
out
ds
xor
out
shll
fst
movsl
lods
add
dec
pop
scas
add
sub
outsb
or
shll
add
jno
hlt
loope
sbb
mov
cwtl
lret
mov
mov
jmp
cmpsl
mov
or
adc
xorl
out
add
lahf
sbb
clc
mov
mov
mov
and
mov
sbb
and
mov
sub
insl
shlb
mov
adc
add
fdivrl
add
aad
xor
jnp
sti
sub
add
rcrb
test
xchg
incb
jo
sahf
shr
sbb
or
js
and
cmpb
add
pop
xor
xchg
fldcw
push
lldt
adc
mov
sbb
fidivrl
push
test
mov
cmp
inc
ljmp
ds
sub
cwtl
and
test
add
flds
add
jmp
fstp
divb
inc
pusha
and
pop
daa
inc
add
dec
ret
cmc
ljmp
arpl
addr16
orb
add
repz
jge
fs
mov
mov
incb
add
mov
push
sbb
in
add
xchg
lahf
mov
pop
imul
or
nop
mov
aas
add
mov
das
inc
pop
outsl
hlt
jnp
cmp
mov
jle
bound
sub
or
js
add
cli
out
sbb
inc
add
dec
cmp
mov
add
fistpl
clc
push
outsl
ss
dec
mov
push
sbb
call
add
mov
jecxz
add
and
adc
jp
loope
mov
sbbl
cmpsl
dec
inc
fcoms
add
shr
mov
add
jbe
decl
lock
lahf
sbb
je
loopne
add
out
dec
int3
jae
cwtl
add
imul
inc
push
daa
pop
add
jle
jl
inc
fbld
adc
mov
sarb
mov
jae
hlt
mov
sarb
pusha
and
jo
xor
pushf
insl
mov
mov
je
add
pop
cld
mov
inc
lods
jns
push
clc
sub
push
mov
jb
mov
icebp
push
cmpb
add
out
test
jnp
cmp
ret
add
inc
push
mov
sbb
fldl
enter
scas
or
mov
jmp
add
or
push
mov
inc
repz
jl
iret
test
dec
jae
or
adc
dec
or
jns
sub
inc
adc
add
ficoms
jo
adc
push
push
and
mov
xor
cmp
int3
cmp
and
xor
insb
jns
xor
imul
sbb
jmp
or
cwtl
aam
mov
into
mov
call
ss
addr16
jecxz
subl
push
ret
aaa
jno
in
sub
mov
adc
add
or
push
push
popf
repz
loop
mov
repnz
imul
fcompl
enter
lret
loop
sub
into
xchg
and
xlat
flds
lock
add
std
stos
push
sub
fcoml
sbb
jno
shl
mov
daa
out
add
int3
or
in
xor
jecxz
repz
add
pop
movsb
ljmp
adc
imul
leave
push
mov
mov
fsubs
cli
jl
push
cmc
mov
fstl
in
push
jmp
jp
enter
icebp
fs
jbe
hlt
add
popa
pop
sub
imul
ljmp
cmp
mov
int
loope
add
js
data16
sbb
dec
xchg
inc
add
es
test
punpckhdq
out
test
int
lahf
pop
pop
pusha
sbb
rclb
mov
pop
mov
insl
shll
mov
add
imul
rolb
jle
cmp
pusha
mov
dec
mov
lods
jnp
out
add
dec
addr16
inc
pop
pop
add
movsl
jp
push
mov
stos
inc
add
rol
add
fs
adc
add
jb
pop
mov
aad
lret
fcomps
dec
aas
jnp
outsl
xchg
test
inc
iret
addb
in
addl
inc
pop
in
dec
and
pushf
add
jae
fisttps
add
mov
inc
popl
pusha
mov
ljmp
inc
sub
push
xor
jo
pop
sub
cltd
aam
cmpsl
pop
jb
clc
or
mov
inc
pop
and
xor
dec
xchg
jne
lret
adcb
in
test
lret
and
pop
divb
insb
outsl
cmpsb
xor
mov
add
mov
cmc
jmp
dec
adc
lahf
iret
push
inc
add
addr16
in
add
push
xor
dec
pop
add
js
repz
stos
xchg
jecxz
mov
hlt
std
movsl
and
add
lea
gs
scas
mov
add
xor
sbb
dec
pop
sub
dec
leave
add
not
jae
mov
into
hlt
push
sbb
pushf
jle
xchg
fadd
rorb
xor
inc
cmp
push
push
notb
mov
mov
mov
add
in
enter
test
jno
cmp
jecxz
iret
daa
push
xchg
mov
inc
mov
sbb
lret
adc
movsb
pop
jns
add
cmp
cmpsl
test
push
popl
adc
add
jo
repnz
add
popa
add
push
inc
loope
clc
addb
les
roll
xchg
sbbl
push
lcall
mov
jmp
inc
fistpll
jae
mov
test
cmp
xor
jg
stos
add
mov
cld
lods
rcrl
aaa
jle
add
frstor
cmp
jb
fcompl
fnstcw
fidivrs
jle
xor
push
add
pop
mov
pop
fmul
jmp
cmpsb
ja
je
inc
inc
cmp
int
incl
mov
movsb
dec
nop
and
sbb
pop
call
cmp
sarl
add
xorl
les
aas
mov
popa
mov
jle
inc
add
dec
xor
cmp
adc
fidivl
sbb
sbb
faddp
popf
sub
icebp
add
daa
jle
in
xor
sbb
dec
fmull
imul
icebp
inc
test
into
ret
rclb
ret
push
arpl
mov
lahf
xchg
xchg
adc
push
loop
ret
or
aad
les
and
add
sub
dec
jp
adc
or
cmp
and
iret
jns
add
fimuls
xor
mov
aam
lods
add
cmp
nop
inc
add
imul
xchg
dec
mov
cmpsl
xchg
je
std
add
xor
fdivs
jp
aad
js
and
push
in
cmp
inc
add
jo
aad
subl
cwtl
popf
addr16
adc
dec
ja
or
pop
inc
xchg
add
leave
cmp
dec
jp
jmp
add
stc
dec
js
clc
or
add
cltd
ret
xchg
dec
dec
test
imul
les
test
mov
inc
and
lock
addr16
sub
add
arpl
adc
ja
jp,pt
test
add
rorb
ret
mov
rcll
push
aas
inc
movb
das
dec
std
dec
mov
dec
xchg
rolb
mov
mov
add
pop
sub
les
dec
outsb
xchg
add
cwtl
xor
cmp
rolb
sub
popa
dec
inc
mul
add
push
jp
sbb
das
lret
xchg
imul
pop
in
sub
xor
cmp
adc
add
lret
adcl
dec
inc
clc
jmp
stos
push
andps
xchg
xchg
dec
xchg
pop
mov
or
mov
call
orb
xchg
pop
xchg
fsubs
jmp
je
and
add
jl
cld
xchg
push
pop
xor
push
push
mov
out
mov
sub
imul
andb
xor
lds
mov
fstpl
int
cmc
out
or
mov
pop
adcl
test
pop
dec
int3
add
cmp
dec
divb
ljmp
xchg
or
cltd
xor
add
mov
inc
adc
bswap
pop
dec
xor
adc
out
out
sub
es
inc
add
adc
ja
add
mov
es
sub
push
mov
sub
add
divb
lds
add
xor
sbb
add
in
in
test
push
pop
call
fisttpll
ret
cwtl
es
cmp
mov
mov
movl
cwtl
and
test
jp
xlat
out
hlt
mov
into
stos
icebp
mov
fmull
loopne
jb
arpl
roll
insl
out
mov
and
lcall
jne
fiadds
add
dec
rorl
mov
sub
and
pop
sbbb
or
mov
fisubl
loopne
lahf
cmp
pop
xchg
xchg
mov
loope
pop
inc
mov
add
icebp
orl
and
dec
cmovae
mov
mov
pop
popa
lods
add
mov
jl
jne
add
pop
into
cmp
add
insl
cltd
cmpsl
mov
add
sub
sbb
and
jne
cwtl
shlb
add
outsb
fiaddl
or
jmp
jmp
mov
and
test
mov
xchg
add
jbe
sbb
adc
mov
ss
repz
or
mov
add
ds
inc
loope
lahf
add
add
insl
and
aad
adc
fsts
or
xor
in
push
fucomi
and
mov
add
daa
int
fcmovbe
add
ljmp
add
movsl
xchg
xor
add
and
xor
cmp
add
or
daa
orl
fbld
sbb
in
or
mov
fs
incb
mov
pop
aad
add
sbb
jl
ljmp
loope
add
pop
adc
mov
loopne
negl
out
call
inc
ret
push
push
lret
cmp
sbb
xor
insb
cmp
jne
inc
sub
call
add
arpl
in
pop
sub
jns
inc
inc
xor
mov
aad
pop
fiaddl
push
fdivrs
incl
jle
xorb
rcrb
jno
pop
cmc
cmp
add
xor
push
test
add
jnp
sub
mov
mov
imul
jne
mov
pop
fidivs
cld
inc
inc
sbbb
add
ret
push
inc
mov
mov
adc
in
inc
add
fcomps
and
stc
mov
out
jle
mov
std
sbb
pop
or
push
icebp
pop
pop
add
jp
in
out
cmp
push
add
xor
sbb
xchg
movsb
add
dec
shlb
decl
jge
mov
repnz
shll
hlt
xchg
sub
imulb
stc
or
arpl
out
mov
jl
add
xchg
pop
add
ds
adc
pop
xchg
pop
pop
in
jb
shl
sbb
xchg
cmpl
shrb
add
mov
mov
or
icebp
cmpsb
testb
xor
xchg
aas
sbb
mov
add
out
xchg
dec
xor
add
insb
sub
add
mov
test
cmpb
jecxz
icebp
scas
sbb
ss
lret
push
inc
and
mov
cmpb
scas
fnstenv
add
mov
shlb
add
mov
add
cmp
sti
sahf
cmpsl
roll
in
xchg
pop
mov
test
xchg
pusha
mov
dec
addb
mov
add
mov
jle
push
arpl
out
cli
push
cmp
rol
push
jae
scas
hlt
dec
push
add
inc
subl
sbbl
xor
adc
cs
jne
cld
sub
repnz
cmp
pop
iret
cmpb
dec
ficompl
mov
enter
cmp
int3
lods
mov
xchg
loope
xlat
add
or
insb
jnp
push
fstpl
pusha
jg
push
add
mov
xor
add
iret
ljmp
out
mov
test
dec
std
subb
bound
xchg
xchg
mov
cmp
add
dec
pop
pushf
mov
mov
repnz
cmpl
sbb
sahf
lret
cmp
mov
and
pop
ret
add
push
in
pop
mov
add
xor
push
push
lock
or
out
add
dec
in
adc
call
push
and
add
xchg
sbb
push
icebp
sbb
pop
pop
push
sub
enter
shr
pop
dec
add
adc
mov
bnd
add
mov
add
dec
adc
add
mov
repnz
add
push
add
repz
add
lea
xchg
and
push
imul
hlt
jle
sbb
xchg
pop
ljmp
jp
jge
movsl
int
mov
pop
je
aam
or
cli
add
rcl
cmp
and
mov
loop
add
lret
pop
jo
bound
out
jl
adc
loopne
and
addb
sbb
ret
bound
dec
mov
dec
das
pop
cwtl
lods
cmp
ja
dec
cmp
cltd
add
sahf
push
add
incb
xor
xchg
pop
insl
xchg
or
test
adc
daa
dec
xor
adc
add
mov
pusha
adc
xlat
add
sbb
add
out
push
add
mov
sbb
rcr
xor
jbe
add
into
bound
add
rolb
in
cmp
add
push
cmp
pop
or
nop
jae
xor
gs
ds
lahf
cmpb
pop
dec
mov
inc
testl
repnz
mov
sub
pop
fwait
add
cltd
cmp
shl
pop
add
pop
in
out
jmp
inc
adc
mov
out
pop
arpl
jb
add
mov
jmp
add
adc
xor
cmp
jo
mov
xlat
dec
mov
bound
inc
and
int3
cld
jb
mov
pop
push
and
pop
inc
push
mov
sbb
jge
pop
divps
or
cld
and
push
outsb
jne
mov
cmp
jbe
add
imulb
icebp
pusha
jnp
adc
shll
out
add
mov
and
adc
jp
add
add
sub
adc
or
ss
and
dec
ret
inc
sub
arpl
add
sbb
and
mov
add
popa
inc
shl
or
add
imul
xchg
pop
or
loopne
jns
jb
lock
push
xlat
jae
test
js
adc
sub
adc
out
push
mov
push
or
jne
sbbb
inc
test
lret
test
test
mov
mov
pop
das
mov
sub
mov
mov
cmpsl
jb
ret
add
mov
dec
testb
shll
lods
inc
lret
pop
pop
cltd
sub
inc
or
mov
mov
xor
jno
popf
cmp
cmpsb
push
mov
push
out
xchg
stc
add
jo
push
inc
test
mov
fs
sbb
loopne
stos
add
sbb
jecxz
fdivrp
pop
int
sbb
pushf
dec
mov
jnp
into
xchg
mov
cmp
push
fstl
mov
add
outsb
sbb
mov
xor
insl
mov
int3
add
dec
mov
jmp
sub
or
jo
call
add
imul
mov
rol
xchg
mov
loopne
dec
push
addb
call
xor
pop
mov
pop
add
enter
sub
push
lds
push
add
xchg
sub
add
je
mov
sbb
sbb
jbe
adc
pop
mov
push
pop
xchg
add
xchg
ret
xor
nop
jb
add
inc
jmp
xor
jo
loope
stos
jae
inc
push
fistpl
pop
stc
jecxz
daa
push
and
mov
jge
sbb
lcall
add
cmpsl
shrb
arpl
cs
movl
push
cmpsb
jo
call
cmp
mov
jnp
cmc
lahf
add
sub
jns
dec
jbe
add
leave
inc
pop
lret
or
fsub
fmuls
mov
aam
jecxz
pusha
mov
insb
in
sub
rorb
pop
es
rcr
sti
lds
add
call
leave
adc
into
push
mov
rolb
fistpl
push
add
dec
xchg
add
ja
pop
or
jno
push
pop
jecxz
or
pusha
push
clc
outsl
add
jle
add
xchg
push
or
inc
lea
fwait
mov
mov
push
decl
cltd
mov
testl
ljmp
add
daa
xlat
cmpl
add
and
push
mov
nop
inc
or
cld
repnz
aaa
imulb
or
add
jbe
sub
add
add
or
popf
jns
jo
add
mov
addb
loop
xlat
stc
movsb
das
dec
loop
cs
rcll
and
push
pop
xor
ljmp
and
nop
push
xchg
pop
icebp
add
test
xlat
mov
psrlw
jecxz
inc
icebp
sbb
iret
dec
xchg
dec
jle
fisubs
jb
jp
add
add
adc
cltd
jae
fs
mov
mov
pop
inc
adc
and
add
sub
outsl
iret
subb
ss
sbb
repnz
rcrb
insl
iret
nop
xchg
sub
fisubl
repz
push
loope
into
or
cld
arpl
pop
or
pop
ja
insb
sbbb
mov
push
js
xchg
subb
cmp
push
lret
loopne
push
rolb
rol
dec
lcall
push
nop
pushf
aad
add
outsb
rcrl
cmp
repnz
dec
aas
sub
add
xor
mov
and
push
sbb
adc
rorb
incl
imul
mov
xor
sub
mov
imul
sub
enter
dec
jnp
cmp
jge
add
mov
add
cli
sbb
scas
push
mov
adc
xor
add
xor
mov
flds
add
or
xor
xor
xor
adc
jno
add
mov
divb
bound
pushf
jg
into
aaa
in
incb
pshufw
filds
jns
add
pop
push
fadds
add
mov
cmp
into
jg
push
cltd
add
bound
mov
inc
in
jecxz
negl
sub
and
add
pushf
mov
pop
jge
pusha
fidivl
lcall
out
cltd
add
or
inc
pop
cmp
cmpsl
popa
sbb
jnp
call
xor
js
fs
adc
into
lods
icebp
xchg
push
fadds
test
cmp
xchg
xchg
pushf
or
cwtl
cmp
push
xchg
lgs
sti
xchg
and
sbb
clc
jb
add
pop
mov
fdivs
filds
lcall
into
repnz
testl
sub
xchg
add
or
dec
push
sbb
scas
dec
and
insb
rolb
lret
lds
and
xchg
enter
mov
or
add
movb
mov
cltd
int3
outsl
push
out
loop
addl
mov
dec
jno
leave
adc
subb
dec
mov
add
mov
add
push
inc
mov
xchg
add
std
aam
cwtl
add
movsb
or
mulb
pop
jo
adc
add
mov
ret
sahf
and
mov
testb
sbb
mov
cmpsb
addr16
xchg
push
mov
data16
mov
add
or
and
cmc
stc
test
jne
lods
mov
outsl
jge
les
jg
inc
dec
cld
nop
mov
je
or
add
sbb
mov
cmc
ret
cmpsl
sahf
shrb
leave
mov
rolb
inc
loope
xchg
mov
clc
or
in
push
addb
sbb
fwait
dec
jns
mov
mov
pop
xchg
ss
sub
lods
mov
add
pop
ljmp
pop
dec
or
add
sbb
into
sbb
add
lret
sub
push
xchg
add
out
fcoml
jp
add
fildll
jecxz
into
dec
xchg
mov
scas
int
push
movsb
fcmovu
cli
enter
pop
and
gs
mov
add
nop
in
jno
aad
pop
lock
adc
cmp
mov
pusha
push
lock
push
push
ljmp
out
xor
dec
pop
div
jbe
cmp
jmp
mov
mov
mov
cmp
scas
cwtl
sub
mov
in
sub
repnz
add
sub
jge
jns
and
cmpsl
jmp
xchg
cld
std
and
aaa
sbb
or
add
lret
in
jnp
cmp
sub
push
sbb
vpmulhw
fsubrs
pusha
mov
ret
clc
mov
sbb
add
mov
nop
pop
shl
add
jp
or
in
call
mov
stc
cmpsb
add
xorl
je
testl
or
add
xchg
mov
dec
int
add
sub
lods
dec
push
cwtl
mov
movsl
adcl
xor
push
mov
jmp
add
fsts
cmp
and
mov
rcr
xchg
inc
jl
xor
repnz
add
sbb
enter
xorl
out
adc
mov
push
enter
jns,pt
cmpl
repz
ret
mov
shl
cmp
and
cmp
sti
add
mov
seta
notb
imul
lahf
xchg
dec
add
int
les
adc
add
into
and
sbbl
or
jl
es
adc
in
roll
jle
fsubs
mov
insl
add
cltd
leave
cmc
aam
or
xor
pushf
add
fcom
jo
and
xchg
dec
lock
and
mov
dec
insb
fadds
pop
jmp
in
out
push
call
dec
inc
repz
adc
movsb
push
les
andb
leave
add
mov
mov
xchg
push
sub
sarb
inc
mov
add
inc
mov
add
push
jl
idivl
pop
test
loopne
cmp
xchg
scas
aaa
loopne
sub
out
jp
mov
cmpsl
addl
rcl
test
jmp
dec
das
pop
push
rorb
test
or
jp
push
inc
repz
pop
or
add
add
xor
add
cmpsb
cmp
and
pop
jg
pop
xor
pop
push
mov
sbb
pop
mov
adc
cmp
test
xchg
cwtl
les
mov
jg
sti
xchg
push
dec
add
xor
cmp
imul
nop
add
dec
push
add
or
fld
repnz
add
add
xor
xor
ss
push
fiadds
lods
mov
imul
aas
jns
sbb
mov
call
add
stos
nop
mov
in
jp
add
addr16
and
rcrb
fdivl
xor
rorb
dec
jne
add
and
pusha
cmpb
add
sbb
dec
lahf
adc
sub
mov
inc
repz
nop
pop
mov
test
mov
and
push
enter
jle
aas
xchg
clc
repz
xor
outsb
in
sub
jae
add
xor
popa
mov
jle
cmp
faddl
andb
movsl
push
cs
add
push
push
add
xor
inc
sbb
hlt
stc
dec
mov
sbb
adc
add
xchg
adc
push
sbb
pop
xor
dec
jns
cmovs
mov
cmp
jecxz
fidivl
add
and
add
mov
or
mov
push
stc
jo
add
jecxz
in
dec
pusha
cmp
mov
inc
repnz
mov
lea
adc
jne
add
call
aas
mov
cmp
adc
scas
arpl
push
push
inc
add
loope
fs
int
sub
inc
add
pop
fsubl
cmp
lock
test
add
cmp
das
cltd
xor
and
shl
sub
add
shll
cmc
and
lret
add
fists
sub
inc
sub
cmp
insl
aam
adc
jge
add
popa
stos
mov
nop
enter
sbb
movsb
adc
sahf
pop
pop
aad
loopne
rolb
xchg
jns
lods
push
scas
pop
inc
inc
insb
pop
and
mov
add
or
addb
or
fsts
pop
add
pushf
jl
ja
sub
push
xor
mov
es
and
cmp
sub
data16
cmp
xor
jbe
add
int
out
cmp
ds
xlat
inc
adc
dec
inc
jmp
orl
dec
add
jg
lea
pop
xor
dec
dec
aam
xor
inc
lock
pop
imul
add
jmpw
push
add
iret
sahf
fstpl
dec
sub
add
push
and
fwait
dec
es
pusha
cmovb
xor
jmp
fiadds
add
dec
xlat
add
dec
popa
dec
int3
jmp
and
add
and
ljmp
lods
mov
sbb
testl
sbb
jne
pop
and
sub
notl
and
push
and
inc
das
push
xchg
sbb
sbb
sbb
pop
xor
cmp
pop
jns
test
mov
mov
push
test
dec
push
dec
arpl
jp
push
mov
ds
dec
sahf
xchg
push
dec
push
sar
adc
sti
xor
xchg
pop
aas
or
inc
and
xor
scas
shrb
cwtl
cmp
sub
shlb
cmc
test
add
into
lock
ret
ficomps
pop
je,pt
scas
and
inc
hlt
mov
pop
xchg
dec
add
pusha
stos
mov
ret
subb
mov
dec
loopne
xor
push
stos
fcmovnu
inc
inc
insb
xchg
dec
mov
add
fldl
loopne
jg
in
add
and
out
dec
enter
inc
movsl
fildl
dec
add
sbbb
lcall
add
and
bound
hlt
dec
sti
jp
in
ds
insl
cli
pop
out
aam
push
andb
push
scas
xor
lods
jbe
push
mov
int
xor
jbe
push
pop
data16
shll
add
mov
call
push
dec
das
and
inc
mov
out
js
aas
aaa
pop
fadds
jle
add
inc
pop
test
adc
inc
filds
add
adc
xor
loop
roll
aam
xchg
inc
rcrb
add
or
sub
mov
add
in
and
ror
cmp
neg
jmp
sbb
jno
cwtl
and
dec
roll
add
icebp
push
loope
mov
out
sarb
lods
pop
out
xorl
inc
loopne
jl
xor
mov
sbbb
push
frstpm(287
xor
inc
int3
sti
ljmp
cmp
and
lea
scas
sbb
add
xorb
pop
pop
jmp
jb
adc
frstor
inc
repz
ret
and
add
add
lcall
sub
sbb
ds
scas
cmp
je
pusha
fucomi
imul
mov
setge
add
das
pop
xlat
xchg
scas
dec
xchg
sarb
mov
cltd
add
adc
dec
orl
sbb
pop
mov
rolb
sbb
cmp
mov
cmp
out
loope
pushf
ds
add
ret
pop
lcall
rol
sahf
in
call
cwtl
xchg
add
pop
out
push
add
nop
xchg
push
in
clc
and
iret
dec
sub
call
pop
jmp
and
jp
ljmp
cmp
lahf
rcll
xorb
xlat
fsts
ror
bound
inc
adc
loopne
mov
add
mov
and
pop
dec
jp
add
inc
je
push
int
mull
lock
mov
vpperm
repnz
rolb
sbbb
sub
lcall
js
je
call
mov
ss
lret
add
shlb
add
ja
sub
lods
push
xor
cmp
mov
push
sbb
jne
in
in
roll
pop
dec
les
rcrb
andl
stos
xchg
mov
push
ja
or
sbb
pusha
mov
add
std
add
xor
or
add
jle
sub
xor
loope
scas
popf
roll
jge
cwtl
fisttps
rolb
sub
gs
add
adc
inc
push
cld
add
aas
and
movsl
add
xchg
rcrl
pop
push
add
test
out
adc
shrb
mov
push
and
pusha
fadds
cmp
mov
xchg
fadds
dec
movsl
fisttps
cmp
xchg
jmp
frstor
dec
enter
data16
dec
mov
inc
rclb
mov
push
movsl
xor
cmp
ret
clc
or
mov
jp
add
rcr
cmp
add
jecxz
add
out
adc
dec
lock
inc
add
fwait
loope
dec
mov
cwtl
je
mov
or
test
jo
inc
xchg
in
iret
addr16
mov
add
aam
dec
sbb
rolb
xor
xchg
scas
fsubl
sbb
ret
movl
ds
pop
out
popf
mov
inc
push
call
es
fwait
aaa
fs
cmpsl
add
dec
arpl
mov
scas
insl
dec
pusha
sbb
lahf
test
mov
ss
jecxz
xor
cmc
sarl
js
sahf
mov
cmp
jp
add
mov
int3
lret
xor
dec
addr16
add
fdivrs
and
out
into
add
ja
loope
dec
push
xchg
fldcw
fdivrp
nop
les
and
frstor
or
xchg
lods
and
outsl
sbb
stc
and
cmp
add
jnp
mov
add
jne
adc
rorb
jp
pop
out
addb
push
mov
sub
sbbb
inc
popf
jb
add
mov
add
sub
cltd
leave
movsl
and
push
add
cmc
inc
xor
pop
sub
lock
add
or
cld
add
lods
dec
xorl
adc
xor
insl
cs
xchg
repnz
in
pop
add
ljmp
sahf
fbld
jecxz
mov
xorl
js
cmp
adc
in
mov
ds
gs
insl
sub
loop
inc
mov
push
cmpsb
stos
add
aas
mov
test
adc
aas
jb
sbb
cmp
add
sbb
dec
enter
cmp
adcb
lahf
incl
js
lods
xor
fwait
leave
sbb
es
or
scas
loop
popa
mov
cmp
rcl
imul
scas
pop
setae
cmp
xorb
push
enter
cs
mov
add
adc
fildl
fs
cmp
aas
out
or
mov
es
nop
cmp
sbb
jo
lods
ja
jnp
mov
movsl
test
inc
and
out
inc
repnz
sbb
or
aam
adc
out
pop
scas
add
fwait
or
adc
sbb
std
or
daa
pop
sbb
pop
out
inc
push
sha256msg2
or
loopne
push
out
inc
repnz
inc
adc
push
movsl
pop
pop
lea
fldcw
dec
adc
repz
xlat
sbb
sbb
add
pop
scas
inc
mov
xor
add
lret
cwtl
int
add
push
enter
popf
add
fcoms
dec
xlat
stc
add
add
cltd
outsl
hlt
push
jne
jmp
notb
bswap
or
push
jno
add
int
cmp
pushf
lea
pop
into
loopne
lock
pop
jae
imul
mov
cmc
mov
fisubs
cli
push
ret
pop
add
cwtl
dec
adc
gs
or
dec
subb
rorl
cmp
loope
mov
subb
sahf
ret
xor
mov
mov
icebp
sub
xchg
lods
pop
enter
dec
add
jle
outsb
adc
and
out
sub
insl
inc
movsl
ljmp
icebp
cmp
xchg
mov
inc
mov
cwtl
adcb
arpl
and
int
dec
push
sbb
mov
mov
psubusw
inc
cmp
jno
pop
dec
pop
daa
std
dec
xor
mov
add
insb
popa
and
test
xchg
add
out
cmc
jne
pop
pop
pop
add
nop
stc
sahf
jp
add
loop
mov
cwtl
or
add
dec
pop
test
inc
filds
je
mov
shll
mov
clc
mov
xchg
or
mov
sbb
add
pop
sbb
add
sub
cmp
fs
sbb
add
add
subb
mov
testl
add
andb
jge
jnp
pop
cld
add
add
aam
ss
add
jnp
imul
pop
mov
push
add
xchg
sub
test
add
add
in
lcall
aaa
jnp
orl
js
movl
add
mov
add
mov
lds
cld
and
shll
jp
push
and
pop
cmp
jmp
xor
mov
and
in
add
lds
lods
add
dec
push
lock
movl
in
filds
cwtl
jle
push
push
xchg
pop
sbb
andb
jg
adc
cmpsl
stc
xchg
add
mov
dec
mov
inc
cld
hlt
fidivs
add
cmc
ss
pop
mov
decb
dec
dec
popl
pusha
mov
push
fsts
sub
xchg
cwtl
lods
add
mov
xor
push
adc
rclb
jl
fs
push
push
add
dec
sbb
mov
ljmp
outsb
xchg
rcll
pop
stos
aad
inc
mov
pusha
loopne
pop
pop
add
icebp
xchg
sub
pop
imul
sub
sub
xchg
add
sub
in
mov
ljmp
leave
sarl
and
mov
push
rclb
js
rolb
outsl
inc
lock
jge
out
mov
xor
or
insl
add
out
mov
dec
inc
pusha
add
adc
fadds
fistl
data16
sub
add
rcrl
outsb
jp,pn
add
inc
xor
push
push
clc
xor
leave
outsl
mov
in
add
inc
jno
or
lea
jne
fcompl
in
repnz
push
popf
pop
sub
xchg
sub
out
lods
outsb
push
psubusw
pop
sbb
jne
sub
inc
in
lcall
insl
sbbb
add
fistl
add
push
xchg
sbb
in
xor
test
dec
pop
sbb
aad
ds
add
aaa
lcall
pop
inc
xchg
pop
jo
addr16
pop
pop
sahf
imul
ss
movsb
sub
add
rolb
inc
cmp
push
cmc
imul
and
jecxz
rcrb
loop
mov
lea
je
hlt
fdiv
cltd
jbe
orl
jl
jae
testl
movsl
lds
xchg
orl
pop
add
pushf
bound
int3
cmp
inc
or
orl
jmp
loopne
push
sbb
jb
dec
push
lods
pushf
subl
addb
out
add
lcall
mov
lds
ja
fmul
fldl
insl
dec
mov
adcl
jb
mov
aam
xchg
mov
bound
cmpsl
pop
cs
xor
add
push
sbb
mov
addr16
in
cmp
add
mov
add
lret
fs
sbb
add
cmp
xchg
andb
inc
sub
adc
xchg
mov
loope
ljmp
cwtl
je
test
aad
mov
jbe
add
andl
xor
adc
lods
in
std
mov
cs
cmp
mov
push
in
outsl
adcb
test
pushf
mov
sbb
faddl
pop
dec
test
mov
mov
lods
dec
fiaddl
sub
jmp
add
add
cwtl
add
or
aad
inc
mov
push
sub
mov
scas
loopne
int
jg
add
sub
xchg
add
shlb
filds
pusha
sbb
mov
add
sbbl
mov
ljmp
add
adc
testl
add
jg
decl
push
lcall
mov
sbb
dec
rorb
rcrb
xchg
mov
jg
jo
bnd
rol
add
ja
add
mov
ds
or
bound
test
dec
je
andb
jb
iret
mov
lahf
aam
cmp
insb
mov
fwait
inc
push
mov
mov
jne
add
and
inc
push
ret
in
out
gs
or
pop
push
cwtl
xor
and
xchg
mov
xchg
mov
add
or
mov
adc
or
add
imul
jbe
jnp
push
jle
adcl
out
xchg
push
pop
fcomps
or
adc
clc
jp
add
add
popf
shlb
addl
xchg
pop
sub
in
xor
iret
add
iret
std
mov
jno
mov
add
pop
pop
and
ffree
bound
pop
sbbb
mov
add
inc
loop
roll
and
clc
mov
adc
or
add
xor
pushf
add
loop
inc
pusha
std
push
pop
mov
rorb
rcl
divl
mov
pop
add
jns
and
add
in
mov
das
push
add
add
xchg
inc
out
addl
lock
flds
sbb
pushf
pusha
vmwrite
add
xchg
out
shlb
xchg
inc
add
add
fstps
dec
mov
add
mov
cmp
cmpsb
sbb
or
addb
inc
pop
les
push
repnz
shlb
lret
inc
pop
adc
addb
mov
mov
lods
add
inc
dec
ja
out
lea
shr
pushf
pop
cmp
aaa
insl
test
add
or
mov
add
mov
pusha
push
pop
call
inc
test
mov
rcll
jno
dec
adc
cmp
xchg
imul
inc
int3
inc
mov
mov
sahf
or
pop
add
or
adc
and
push
mov
test
pop
dec
xchg
pop
ficomps
sbb
mov
jl
jle
cmp
popl
and
test
push
inc
dec
mov
insl
add
mov
xchg
dec
test
jne
movsl
sbb
and
adc
pop
mov
das
mov
cmp
and
sbb
int
or
inc
pushf
sbb
aaa
inc
lds
iret
mov
sbb
jns
pop
scas
lret
mov
mov
add
jg
push
lods
out
sti
addr16
dec
cld
sub
aas
inc
adc
imul
adc
and
mov
popf
test
push
addb
pop
mov
inc
sti
xor
in
cmp
push
andb
jb
movsl
xor
lret
leave
loop
fimuls
cmp
and
movaps
cltd
sub
sbb
cmp
int
xlat
add
lret
mov
rolb
ja
repnz
lock
mov
jnp
mov
imull
dec
push
aad
xor
xchg
and
cmp
sarb
rcr
adc
outsb
das
scas
pop
fcoml
xor
dec
sub
clc
add
es
rclb
pop
mov
add
cmpsb
insl
adc
add
xchg
sub
repz
ret
jge
pusha
popl
push
iret
aaa
shl
adcb
add
and
pop
int
ret
andl
call
loope
test
sahf
and
push
and
inc
ds
add
push
push
js
test
jnp
addl
in
mov
add
fiaddl
ljmp
add
sti
lock
pushf
or
std
pop
aaa
add
shrb
outsb
jl
into
sub
add
cmp
sbb
hlt
add
lock
add
inc
add
pop
xchg
jmp
pushf
and
cmp
add
adc
add
sbb
add
les
cmpsl
cmc
imul
cs
sub
test
or
jecxz
pop
je
sbb
stos
pusha
pop
jns
lcall
push
loopne
add
popa
int
mov
add
roll
add
test
fs
push
call
aad
ficompl
pop
xor
test
pop
push
sub
cs
fwait
rcrb
xchg
dec
pcmpeqw
add
add
in
inc
cwtl
movsl
mov
push
fldl
aam
stos
xor
add
jne
ret
loope
push
add
mov
nop
sti
add
jbe
ror
push
lcall
push
imul
jge
movsl
add
popf
add
push
scas
xchg
add
jg
fnstenv
lahf
rcll
add
inc
stos
dec
rclb
cwtl
iret
dec
lcall
and
lds
loope
mov
jnp
pop
xlat
cwtl
adc
cmp
js
push
cmc
jecxz
mov
sub
sbb
clc
push
ja
sti
mov
inc
hlt
mov
mov
repz
sahf
jl
ds
aaa
jge
divb
es
jns
setle
xor
mov
popf
dec
push
dec
add
add
enter
add
ljmp
fsubrl
push
das
xor
pop
adc
xor
pop
add
fldcw
fiaddl
add
insb
and
mov
fabs
out
addb
pop
jae
insb
mov
inc
mov
cmpsl
cmpb
lcall
inc
loopne
ja
pop
or
movsl
in
xchg
movsb
rolb
mov
mov
xchg
add
jns
dec
mov
call
pop
xchg
fadds
dec
lds
daa
sub
jo
add
mov
lods
pop
pop
cltd
xchg
pushf
or
imul
adc
jp
pop
cwtl
cmp
test
xor
fcmovne
push
add
dec
int3
pop
push
mov
push
xorl
push
aad
in
xorb
fdivl
xchg
push
dec
loope
pop
xor
inc
cmp
lods
inc
inc
sub
lds
test
and
hlt
call
insl
jne
sbb
sahf
mov
iret
lock
xor
add
dec
or
inc
pop
shll
ss
push
jl
sti
xchg
cmpsb
mov
inc
movsb
cmp
or
inc
call
and
push
mov
dec
add
cmp
insb
js
inc
xor
pop
inc
sarl
add
push
pop
jo
xchg
leave
add
pop
cmc
xor
js
add
dec
jg
es
lods
jl
add
int3
js
je
movsb
xor
jo
pusha
sbb
and
adc
add
dec
lret
cwtl
add
mov
push
and
jmp
lock
xchg
xlat
lods
mov
inc
push
mov
dec
mov
js
push
and
sub
or
cld
dec
or
mov
push
xchg
push
out
mov
enter
dec
aad
out
inc
and
js
adc
sub
or
and
fmul
adc
aaa
cltd
mov
xor
loopne
add
push
je
add
push
out
mov
mov
mov
xorl
in
in
insl
jl
rorb
add
cmp
imul
es
pop
aas
jle
xchg
shl
hlt
dec
add
iret
pop
das
jecxz
jns
add
or
pop
sti
xlat
repnz
adc
or
nop
lea
or
mov
cmp
rclb
add
cmc
mov
jmp
shll
inc
dec
xchg
lock
sub
int
dec
daa
lret
pop
orb
lcall
add
push
mov
add
push
jne
mov
leave
ret
jmp
shll
iret
and
inc
adc
add
adc
inc
or
ret
xchg
add
jno
mov
add
pop
xorb
sbb
ds
insl
orb
jno
mov
sub
xchg
sub
push
dec
xchg
mov
push
jecxz
addr16
and
adc
scas
test
movsb
push
adc
add
mov
jne
ja
add
sbb
mov
iret
add
rcll
add
in
add
lcall
iret
pop
cmp
test
adc
hlt
xchg
outsl
lds
fcom
fistpl
mov
loopne
adc
mov
nop
xchg
inc
jnp
lods
cmp
and
add
rep
fnsave
rorb
sub
movsl
adc
pusha
add
dec
inc
in
xchg
minps
sub
pop
dec
and
xor
and
dec
xor
adc
xchg
or
jnp
dec
sbb
lea
aad
in
pushf
and
std
loopne
pop
lret
jns
jp
pop
jno
in
loope
aaa
mov
sbb
bnd
repz
ficomps
add
pop
fbstp
pop
loop
mov
out
ss
cmp
and
pop
push
cmp
add
aad
mov
xor
shl
xchg
ret
stos
aas
xchg
xchg
sub
dec
xchg
add
inc
xchg
or
lret
sbb
push
cli
orl
add
jmp
pop
add
dec
stos
aam
loope
outsl
add
mov
enter
push
cli
paddusb
outsl
inc
ja
mov
cmpsl
insl
mov
jns
add
shl
test
pop
and
sbb
add
incl
dec
das
lret
mov
add
add
push
repz
xchg
pop
insl
addb
sbb
and
fldl
out
pop
or
adc
in
jae
add
push
cmp
add
dec
clc
sub
dec
pop
in
pushf
mov
inc
mov
pusha
test
mov
test
sub
sbb
and
ljmp
or
xor
sbb
sbb
je
pushf
call
or
push
ds
sub
jb
subl
push
cmp
loop
inc
dec
inc
jae
xchg
mov
add
push
pop
or
icebp
addb
iret
add
fstpl
push
dec
mov
jae
rorl
mov
loop
aaa
add
jp
xchg
rcrl
jbe
add
and
add
test
out
sbb
or
lea
xorb
inc
addr16
mov
add
pop
sbb
add
add
fmul
dec
pushf
sbb
fs
add
not
xchg
adc
int3
sar
pop
jae
cmp
cltd
mov
add
jne
sar
add
pushf
stos
daa
sbb
push
sbb
cmp
jns
lock
scas
pusha
or
faddl
pop
rolb
lods
pop
shll
lock
pop
es
xor
ljmp
xlat
fdivrp
dec
mov
jno
scas
testl
adc
js
sub
clc
jne
add
sbb
cmp
sub
jl
add
scas
pushl
cmp
add
jle
and
mov
push
orb
bound
xor
pop
add
dec
clflush
jo
nop
pop
adc
mov
rolb
push
mov
orl
add
mov
and
lock
arpl
mov
mov
jp
cwtl
jg
add
fisttpl
jmp
inc
je
out
cs
je
and
add
incb
add
insl
sub
pop
cld
pop
or
push
sbbl
mov
add
test
push
addr16
mov
aam
jnp
xchg
daa
int3
pop
push
fwait
ja
inc
and
jp
lock
loopne
mov
pop
imul
add
jb
rolb
cmp
fidivrs
ret
adc
pop
fmuls
add
cmc
lret
pusha
pop
dec
mov
cmp
jno
ja
push
nop
sbb
jbe
push
ficoml
adc
scas
sub
sub
pusha
dec
pop
stc
jp
faddp
add
jo
shll
push
add
push
add
shrl
mov
pop
cwtl
mov
jge
inc
pop
nop
into
mov
cmp
xchg
arpl
add
mov
imul
xchg
jle
adc
pop
xlat
loope
cmpl
adc
inc
lods
sub
lahf
std
cmpb
dec
pop
ret
into
loope
add
dec
adc
insb
testl
in
movsb
out
ljmp
sarl
test
in
pop
mov
inc
das
out
pop
int3
jns
add
push
out
and
jecxz
pop
cmp
test
ror
pusha
sub
and
arpl
loopne
inc
adc
rorl
ljmp
sbb
xchg
add
xor
leave
sbb
ror
sbb
dec
popl
or
mov
adc
push
pop
mov
aas
imul
cmp
sub
imul
rolb
in
in
ljmp
std
inc
pop
aad
fsts
rcl
leave
pop
clc
jmp
cmp
adc
lock
jmpw
xchg
cltd
jl
add
mov
std
js
push
add
add
je
inc
es
jno,pn
ja
add
xor
lock
cmp
sub
cltd
pop
or
mov
or
lahf
mov
or
jmp
cmpsl
daa
add
pop
cs
outsb
clc
ja
adc
xchg
add
icebp
in
mov
pop
pop
push
popa
add
pusha
shr
add
inc
enter
mov
pusha
sbb
mov
stos
ficoml
out
inc
add
jg
das
hlt
les
icebp
xchg
popf
sbb
mov
subb
test
xor
test
fimuls
jne
cmpl
scas
inc
pop
ja
add
out
addr16
stc
cmpb
cwtl
mov
mov
add
int
rorb
add
pop
dec
lods
and
jb
les
outsb
push
cmp
pop
push
dec
jae
idivl
adc
inc
rorb
add
pop
sahf
addl
ficomps
jae
and
ss
adc
addb
cld
mov
add
jnp
rcrb
mov
push
jno
or
add
cmpsb
mov
testl
xchg
jo
rcr
in
add
inc
imul
lahf
outsl
fmul
cmp
mov
xor
add
mov
push
and
dec
inc
test
sbb
outsb
jb
xchg
mov
jne
add
enter
adc
mov
inc
add
sub
push
push
inc
rcrb
jo
cmp
in
pop
sub
orb
scas
add
adc
add
pop
and
ja
add
xor
sbb
jno
repnz
inc
add
scas
mov
push
outsb
add
jb
inc
add
insb
xchg
loopne
sub
add
dec
iret
dec
nop
ret
gs
andb
mov
test
xlat
lock
outsl
dec
add
fbld
out
add
fs
fstps
arpl
int3
inc
in
insb
shl
pop
lret
lods
xchg
into
mov
add
movsb
cli
adc
xchg
pop
add
inc
testb
lea
fsubs
and
push
repz
pop
sbb
sbbb
lcall
add
mov
xchg
into
jp
push
pushf
sbb
jge
iret
jne
aaa
jmp
je
cmp
repz
xlat
cmp
stc
or
jg
dec
jo
add
inc
cmpsb
les
ljmp
jecxz
inc
and
sbb
test
dec
mov
repnz
addr16
mov
mov
add
push
in
inc
add
in
aam
inc
test
add
lds
sub
fstpt
pop
out
mov
dec
outsb
push
stos
js
add
jne
out
subb
xor
mov
loopne
add
in
mov
shr
sub
stos
lock
pop
js
aas
daa
add
mov
fwait
add
iret
rcrl
xchg
clc
mov
jbe
in
imul
rorl
les
add
mov
sbb
scas
or
push
push
mov
fmull
cmpsl
sub
jne
add
mov
mov
push
add
add
dec
pushf
jp
cmp
sub
cmp
adcb
add
clc
mov
dec
sub
std
xorb
dec
jno
lahf
sarl
enter
mulb
add
push
jmp
aaa
pop
cmp
sub
fsubs
or
lods
leave
adc
popf
ret
mov
outsl
inc
jno
pop
sbb
cs
addl
rorb
xor
pop
fs
inc
leave
or
mov
pop
out
push
add
jo
icebp
add
sar
hlt
xor
inc
fisubs
rolb
add
in
sbb
arpl
aad
add
mov
pop
repz
mov
int3
add
pop
cmp
dec
jp
jmp
add
inc
ss
das
add
pop
xchg
mov
sbb
js
or
rclb
add
dec
fst
push
mov
aaa
lret
jmp
mov
fsts
mov
mov
sbb
or
xchg
dec
cmp
in
mov
int
arpl
xchg
sub
add
mov
test
cmp
cmp
add
popf
in
imul
loopne
fstl
or
fisubrs
push
add
sbb
aaa
push
in
mov
add
subb
mov
jl
pop
ret
add
fidivrl
jne
push
fnstcw
xchg
mov
adc
inc
imul
cmp
sub
mov
add
mov
push
add
jg
xchg
sub
fistpll
dec
int
mov
mov
pop
jae
add
aad
jg
mov
xchg
pop
mov
cmpb
jo
dec
das
jb
cmc
jmp
addl
adc
mov
dec
xchg
add
out
clc
adc
data16
add
mov
jb
cmp
in
cmp
add
sub
ret
jnp
add
das
icebp
insl
rol
and
or
mov
pop
shlb
cmp
pushf
es
mov
add
jnp
incl
inc
xabort
mov
dec
pop
and
jmp
dec
add
repz
mov
sub
stos
add
adc
mov
lret
leave
or
pop
subb
popl
xlat
xchg
jle
out
loop
jbe
jae
add
push
mov
add
std
sub
mov
jo,pt
out
fldl
popf
aam
ljmp
std
push
stos
push
push
pop
or
stos
jl
sbb
shlb
lahf
push
mov
add
adc
add
or
loopne
mov
popa
add
sbb
mov
mov
out
sbb
insb
mov
and
ret
loopne
rcrb
cltd
add
shll
push
mov
add
std
lcall
or
leave
cmp
mov
test
loope
scas
mov
lds
add
inc
movsl
jmp
stos
outsb
push
push
shrb
jb
test
nop
ja
movsb
testl
mov
dec
add
mov
mov
out
lock
dec
add
je
dec
add
sbb
hlt
sbb
sarl
add
gs
xor
add
adcb
repz
and
mov
jge
or
add
enter
and
nop
add
scas
cmp
add
push
ror
outsl
mov
pop
adc
add
call
insl
lea
sbb
pop
mov
ljmp
add
pop
xlat
push
imul
out
adc
and
aam
out
lods
setp
cmp
hlt
out
add
ds
jmp
pop
fst
dec
sti
sub
mov
add
cltd
add
fisttpll
icebp
push
inc
adc
and
xchg
inc
jnp
jns
cli
ja
xlat
packsswb
imul
jae
bound
mov
adc
add
insb
dec
push
pop
in
stos
flds
mov
xchg
cld
xchg
enter
fsubl
cmp
xor
out
pop
push
sub
or
xchg
or
enter
loopne
adc
sub
cmp
data16
jne
insl
push
add
and
add
mov
bound
std
out
inc
rolb
add
or
inc
pop
aam
add
fdivrp
outsl
in
jne
incb
out
sbb
mov
shrb
add
hlt
and
inc
cmp
clc
cwtl
xor
sbb
add
pop
inc
pushf
cmp
stos
jo
imul
jns
cli
inc
rolb
mov
pop
std
adc
inc
add
fsubl
and
pusha
jl
add
enter
ljmp
sub
insl
pop
or
inc
sub
shlb
loope
cmpsl
mov
add
pop
add
sub
mov
cmp
cwtl
mov
xor
in
fcmovnb
sub
inc
xchg
daa
inc
sbb
pop
add
std
lods
lods
addb
inc
ror
pop
mov
cmp
shll
dec
xlat
and
sbb
add
cmp
jge
add
cmp
lods
add
add
pop
out
mov
shlb
mov
sbb
lock
or
xchg
pop
movsl
dec
and
mov
pop
and
xchg
add
mov
and
add
push
sub
es
repz
rorl
test
push
push
add
dec
adc
aad
dec
repnz
pop
xchg
push
dec
mov
pop
adc
add
and
pusha
add
push
add
push
cmp
cmp
imul
pop
pop
pop
mov
inc
popa
mov
aaa
adc
and
insb
daa
scas
repz
dec
jl
in
inc
cld
jmp
je
movb
xchg
sub
les
das
add
mov
pushf
mov
mov
mov
clc
xor
mov
dec
aaa
nop
call
mov
call
mov
lret
stos
sub
hlt
orb
push
inc
addr16
dec
sbb
push
js
out
repnz
pop
and
dec
push
mov
outsl
lock
pusha
push
lods
out
divl
fsubr
nop
out
cmp
mov
xlat
in
cmp
pop
fwait
loope
in
add
sbb
iret
lahf
add
mov
nopl
mov
loopne
daa
adc
int3
aas
mov
lea
cmp
or
push
dec
xchg
sbb
jmp
out
inc
pop
xchg
pop
cmc
jl
and
mov
add
jp
jbe
out
sub
mov
in
mov
out
aaa
xchg
sti
ret
stc
xor
sub
add
jg
push
xchg
arpl
je
outsl
rcrl
or
int
out
add
add
cld
sub
fninit
fnstenv
add
fdivp
and
add
sub
mov
mov
push
mov
add
mov
xor
sub
out
jmp
nop
dec
and
push
sub
or
imul
push
test
int3
cmp
xor
inc
dec
ror
add
out
test
imul
les
push
and
mov
push
leave
inc
pushf
pop
lods
add
cld
mov
add
xchg
aaa
test
sub
test
mov
add
fs
mov
test
aam
add
mov
sbbb
nop
jp
sbb
jg
sbb
mov
enter
add
aas
cmpsb
nop
loope
push
push
add
inc
mov
mov
sbb
test
add
shlb
lods
pop
mov
pop
pop
mov
daa
es
push
add
mov
outsb
jns
sbb
lock
add
addl
mov
jecxz
jmp
inc
lds
dec
jo
push
xor
sub
mov
dec
fs
hlt
cmp
ljmp
jmp
xchg
sbb
jne
add
lret
shr
int
inc
add
xchg
and
mov
add
ret
out
ljmp
insb
or
xchg
loope
cmp
mov
shlb
mov
mov
pop
lods
scas
call
sbb
mov
cmpsl
push
and
testl
sahf
cmp
push
mov
loope
mov
pusha
sub
and
inc
or
aaa
filds
rol
cmp
iret
enter
imul
jo
add
mov
out
je
arpl
jnp
push
js
and
inc
adc
xor
mov
stos
pushf
jno
out
add
fucomi
in
xchg
ret
inc
addr16
sub
sub
rcll
xchg
xor
fadds
dec
sarb
bound
jno
lods
add
mov
add
and
lea
or
dec
in
mov
add
dec
testb
lret
cmpsl
xchg
push
mov
popf
pop
cltd
mov
jp
cmp
test
cld
nop
inc
sarb
jmp
out
sbb
outsl
add
jbe
lods
or
fdivrl
adc
addl
mov
push
cmp
mov
push
mov
repnz
push
cld
in
mov
iret
lret
mov
mov
and
pop
lcall
pop
xchg
push
add
sbb
sub
dec
jae
add
fstl
cli
add
ror
sahf
mov
cmc
jne
idivb
xlat
fs
add
sbb
mov
mov
lret
xor
mov
scas
je
xor
jo
add
imull
arpl
or
and
add
outsl
sub
adc
mov
shrb
fcmovbe
inc
jns
dec
adc
mov
jge
ffreep
in
sbb
cltd
mov
clc
xchg
in
mov
lods
push
and
daa
and
dec
add
inc
scas
mov
cmpsl
or
rcrb
clc
leave
lock
int
int3
in
and
add
andl
add
xchg
add
adc
pusha
add
add
test
add
or
outsb
push
sub
sbb
stos
lahf
shl
sub
inc
pushf
cld
shl
dec
leave
add
cwtl
sub
sarl
mov
jnp
outsb
cmc
add
pop
jg
cwtl
pop
mov
add
rorl
pop
shlb
jecxz
les
call
jge
dec
jle
inc
pop
add
xchg
xchg
fldl
adc
adc
add
or
lds
add
lahf
outsb
add
gs
mov
xor
sti
frstor
ret
push
add
inc
gs
fs
jl
test
mov
cld
ljmp
pop
inc
outsl
imulb
subb
push
push
xor
push
int3
fnstsw
cs
xor
pop
inc
hlt
mov
pushf
dec
push
sar
daa
addb
lahf
xor
sub
pop
sub
adc
lock
mov
xchg
pop
test
add
adc
hlt
shrl
add
adc
in
je
outsb
maskmovq
negl
jno
adc
add
loope
fldl
jmp
out
fstps
lods
and
pusha
and
inc
ss
sbb
das
inc
repnz
pop
shrb
dec
add
mov
mov
aam
sub
les
adc
add
sbb
jbe
dec
test
lods
add
inc
enter
cmp
out
jmp
mov
ljmp
add
sbbl
out
push
rcll
jg
into
add
or
mov
sti
adc
cld
dec
nop
addr16
das
add
mov
mulb
std
mov
hlt
js
cmp
push
mov
stos
nop
fiadds
es
dec
out
pop
movsl
push
repnz
jo
add
nop
nop
filds
fisubrs
rorl
out
xchg
cld
lock
pop
rcll
sub
add
pop
jns
and
dec
push
or
rolb
mov
add
xor
mov
int3
and
in
sbb
sub
jae
dec
lock
mov
and
lods
faddl
lods
rcl
js
mov
cmp
dec
fstps
pushf
je
add
sbb
sub
xchg
ret
add
int
adc
fistpll
out
cmpsb
mov
in
and
add
lods
lret
pop
and
adc
scas
add
test
fildl
mov
sti
jno
clc
or
ja
add
fs
and
cmp
mov
dec
dec
inc
in
mov
aad
sub
pop
push
icebp
and
pop
mov
jle
sbb
lods
filds
addb
das
sahf
jecxz
jno
test
cmpsb
test
or
es
jns
mov
mov
push
movsl
rcrb
repnz
cmpsl
js
add
in
scas
movsb
mov
insl
mov
incl
outsb
cmp
fwait
push
ficomps
dec
xor
cmp
test
mov
lret
call
jb
cmp
sbb
lods
popa
fistps
add
ror
pushf
mov
add
call
cwtl
movsl
sbb
dec
xor
mov
imul
nop
jb
push
pop
mov
aaa
cld
pop
cltd
sbb
add
stc
test
cmpl
insl
jp
into
scas
arpl
inc
mov
xor
and
sbb
push
jns
xchg
movsl
fimuls
cmp
xchg
nop
rolb
sti
and
js
inc
add
sub
into
lods
push
add
and
xchg
shrb
pop
add
dec
or
add
xchg
jp
test
ljmp
push
xchg
popa
aas
mov
pop
loope
add
out
loopne
loop
je
dec
adcb
icebp
cwtl
stos
xor
cmp
in
pop
sbb
sub
pop
negb
insl
out
sbb
xor
adc
jge
mov
inc
push
xchg
add
pusha
jmp
and
insb
cmc
loope
and
ds
sti
add
cmp
cs
rcrb
xor
add
inc
inc
xchg
js
add
cmp
dec
jnp
push
push
loopne
clc
cli
jnp
add
fcoml
ret
mov
adc
jp
add
das
cmpsl
xor
jl
scas
mov
jnp
jecxz
enter
inc
jo
loopne
xor
and
stc
out
xor
cwtl
mov
int3
add
pop
jne
imul
stc
add
xor
sbb
pushf
sub
add
adc
jns
ret
pop
sub
fsubrl
pop
negl
inc
add
scas
pushf
inc
cwtl
fnstenv
add
push
vminpd
or
in
test
js
add
mov
shl
lret
sbb
loopne
addb
ror
loop
clc
test
fimull
in
mov
mov
insl
pop
loop
push
leave
sbb
jmp
jge
inc
add
cmp
loop
out
add
pop
dec
pop
bswap
cli
and
jae
dec
add
adc
enter
rol
cmp
add
push
in
or
add
ljmp
mov
sti
pop
jne
add
ds
popf
add
in
aas
rcrl
add
loope
add
add
adc
mov
add
jg
int3
and
dec
call
or
hlt
jmp
push
lret
insl
orl
pop
cmp
fidivs
das
dec
jo
add
xchg
mov
add
scas
out
add
xchg
mov
add
xchg
cmpb
xchg
sbb
and
scas
pushf
pop
push
inc
jmp
shlb
add
mov
int3
jecxz
add
and
cmp
mov
hlt
xchg
dec
imul
push
insb
in
cs
dec
push
add
sub
add
xor
mov
test
sub
mov
notl
add
push
adc
lods
add
inc
bound
imul
in
loop
adc
rcrl
jo
pop
subl
xchg
adc
pop
out
imul
push
jmp
mov
and
mov
push
add
orl
hlt
jbe
enter
clc
insl
xor
mov
imul
push
add
jmp
roll
or
in
jmp
std
sti
pop
add
push
adc
mov
add
mov
loopne
add
mov
cwtl
add
cmp
lahf
xor
add
inc
inc
sbb
push
add
in
int
dec
or
xchg
sub
icebp
jo
xchg
shlb
jl
mov
popa
dec
sbb
cmpsl
rclb
repnz
jo
pop
add
sub
push
add
fwait
push
sti
loop
add
cwtl
sub
add
jae
js
and
push
push
mov
mov
cld
ljmp
add
mov
jecxz
mov
shrb
mov
dec
in
adc
add
sbbb
jno
add
xchg
subw
jno
ja
mov
in
mov
push
in
stos
test
sub
pusha
mov
cmpsb
sub
nop
movl
rcrl
push
pop
adc
push
mov
into
pop
test
mov
iret
adc
mov
add
sbb
push
add
and
adc
push
add
sub
or
inc
mov
sbb
cmp
out
stos
mov
mov
push
test
pop
add
sarl
mov
xchg
add
xor
pop
xchg
dec
aad
add
icebp
fcomip
xor
adc
outsb
mov
or
lret
lods
push
add
mov
ds
in
jo
sti
in
mov
and
pop
ret
sub
int
add
mov
pusha
lods
adc
fldcw
adcb
add
xor
sbb
push
in
cmpl
add
jne
add
add
fisubrl
cmovno
cmp
mov
mov
roll
add
in
pusha
mov
jbe
inc
sbb
sub
jb
add
sbb
je
add
adc
rclb
int3
int
aam
adc
cmp
or
sbb
andb
loop
ret
lods
ljmp
je
flds
es
andb
lcall
add
or
xchg
cmp
loopne
icebp
jl
pop
rol
sbb
and
loopne
cmp
jb
add
outsb
fdivrs
mov
mov
inc
cli
add
dec
sub
lock
insl
add
cmp
cmp
dec
ljmp
add
aas
fildl
iret
or
out
clc
movups
call
mov
add
pop
jae
pop
in
and
xchg
add
xchg
fcomps
mov
add
bound
mov
les
push
cld
xor
mov
das
add
adc
dec
inc
xchg
fiaddl
into
repnz
es
mov
mov
dec
test
cmp
call
sbb
mov
jae
out
or
ret
js
and
mov
sub
lcall
pushf
add
mov
fsubr
loop
xchg
sbb
clc
add
shl
jg
mov
xor
jns
in
test
add
cmp
fwait
xchg
push
ds
loope
push
stc
push
dec
xor
mov
xchg
out
dec
andl
pop
nop
ljmp
rcrb
mov
test
inc
cmpb
sbb
dec
add
or
stos
push
push
mov
cmp
mov
sahf
fildl
jg
into
fidivrl
ret
mov
stc
pop
lcall
xchg
cli
add
add
leave
cmp
mov
add
lods
rorb
xchg
and
sbb
push
cmp
ss
and
prefetcht1
inc
adcb
fwait
xlat
jl
jmp
sub
mov
push
add
das
xchg
pop
pop
xchg
cwtl
ja
pop
inc
sbb
rcll
jae
cwtl
sbb
test
xor
xlat
int3
and
push
pop
inc
sbbb
push
or
les
aam
add
add
push
popa
sub
btr
call
dec
inc
stos
paddusb
stos
scas
pusha
push
popa
mov
nop
pop
insl
xor
in
lock
pop
cmpsl
dec
pop
add
mov
or
mov
cmp
pop
sbb
push
inc
andb
inc
add
jl
add
dec
cmp
push
push
shlb
adc
add
hlt
sbb
or
add
ret
xchg
movsb
pop
push
add
mov
loop
add
cmpsb
adc
cwtl
sub
popa
dec
mov
hlt
add
pop
lods
insb
sar
addb
jp
jmp
adc
and
mov
nop
jge
scas
jp
add
sbb
add
cmp
aas
in
lret
add
pop
subb
test
out
loop
adc
mov
fdiv
push
adc
aas
sbb
jecxz
lahf
daa
negl
adc
add
add
aad
bound
js
outsl
add
adc
pop
push
lods
push
in
pop
pop
sub
in
add
add
pop
add
lret
test
jge
push
sbb
inc
mov
shrl
ljmp
setbe
leave
jl
rorb
jnp
hlt
verr
sbb
mov
xchg
mov
ret
jge
jno
add
rolb
cmpsb
movb
hlt
cwtl
fistpl
add
add
es
ss
mov
vcvtsi2ssl
loopne
mov
leave
rorb
pusha
bnd
femms
js
pop
andl
les
push
aaa
out
or
repz
or
pop
nop
pop
or
inc
fwait
push
scas
push
xor
mov
imul
pop
xchg
mov
cwtl
jmp
push
in
add
jg
mov
inc
test
frstor
or
add
mov
popa
arpl
ss
out
add
jp
lds
pop
aas
cld
jbe
das
xor
and
or
dec
mov
push
test
mov
jb
adc
add
add
bound
xorb
sarl
arpl
xor
mov
mov
nop
jno
iret
add
xchg
xchg
insl
jg
add
and
rolb
and
dec
int3
mov
cmp
add
or
les
add
ss
and
push
sbb
sbb
jp
call
lock
jae
or
popa
lds
jo
jmp
lock
repz
jo
push
push
ret
fcomp
and
movsb
sahf
xchg
sub
pop
scas
in
rclb
jnp
loopne
jns
or
and
jmp
cmp
push
sbb
mov
pop
add
mov
add
inc
adc
shr
add
in
imul
push
adc
xor
js
dec
dec
or
lods
pop
xchg
cmpl
in
in
mov
scas
cmp
sti
stos
lds
add
ljmp
inc
add
mov
xchg
int
or
xor
xchg
add
ljmp
loopne
mov
cmpl
add
push
cmp
jno
movsl
cmp
pop
stos
xlat
sub
fadds
dec
cmc
add
sbb
jp
or
add
pop
pop
mov
jle
cmp
stos
aaa
popf
dec
inc
negb
add
and
imul
std
mov
add
stos
mov
mov
add
lahf
das
mov
add
icebp
sbb
test
pusha
scas
cwtl
das
mov
movsl
sub
ljmp
add
insl
sub
add
pusha
adc
in
mov
jg
add
lahf
xchg
sub
enter
mov
mov
out
addl
sbb
sbb
ror
mov
lcall
push
push
mov
scas
inc
push
dec
sbb
dec
xchg
mulb
sti
add
mov
cwtl
rcrl
dec
pusha
pop
int3
incb
sub
jecxz
pop
mov
daa
mov
jno
add
jne
push
std
xchg
mov
push
rcrb
stos
jecxz
inc
xchg
push
jg
repnz
add
mov
mov
add
ljmp
lock
push
and
jbe
sbb
mov
mov
adc
add
add
cmovg
lahf
cmpb
cwtl
mov
xchg
sarl
xchg
push
in
dec
xor
les
sbb
inc
xchg
arpl
pop
cmp
and
add
iret
adc
jp
ljmp
mov
mov
jp
add
cs
mov
sub
sti
out
jns
pop
les
jle
push
add
pop
mov
jns
sti
cld
xor
and
push
and
cmc
push
inc
jne
pop
or
nop
dec
and
or
loope
gs
fdivrl
push
mov
add
cwtl
rcrb
pop
push
into
ja
mov
pop
lcall
in
lods
mov
and
jb
mov
mov
push
mov
inc
mov
mov
in
sbb
mov
sub
cwtl
add
add
repz
sahf
and
add
sbb
das
out
or
add
lahf
jnp
jecxz
push
pop
pop
enter
sarb
add
push
jns
cli
rolb
mov
pushw
add
sti
fcmovu
jb
movsl
or
dec
mov
add
shr
mov
push
sti
arpl
inc
push
lea
stos
xchg
add
xor
lods
add
or
add
fxch
ds
jle
add
aas
mov
and
movsl
jbe
fistpll
or
add
sub
mov
into
pop
push
cs
xchg
cli
stc
or
inc
in
mov
add
into
std
lahf
cld
js
sbbb
imul
cmp
inc
inc
in
adc
xor
std
subb
sub
mov
inc
jmp
jbe
call
imul
push
std
or
inc
sahf
dec
and
cltd
add
pop
mov
sahf
jp
pop
sbb
fisttps
rcrb
out
push
sub
add
jnp
hlt
sbb
add
pop
mov
jmp
fimuls
lret
cmpsb
movsb
cmpl
aad
imul
jae
sub
movsl
jnp
call
pop
or
cli
fisubl
mov
ja
dec
and
add
test
add
jmp
cmp
jnp
movsl
adc
bound
stc
out
lods
int
aad
repz
push
test
mov
pushf
cmpxchg
sbb
outsb
xor
add
mov
popf
mov
xchg
dec
jle
test
add
orb
mov
adc
mov
out
arpl
add
and
and
add
in
jae
mov
add
bound
rclb
mov
xor
iret
clc
sahf
gs
inc
int3
daa
out
loope
adc
push
call
rol
cmp
add
sub
imul
inc
cmc
jg
add
repnz
pusha
jg
xchg
adcl
add
cmc
and
jl
add
pushf
add
jae
hlt
movl
fwait
les
mov
dec
dec
icebp
add
pushf
add
jle
lock
fldl
call
pusha
ljmp
fwait
loopne
dec
add
gs
lock
imul
loopne
xor
rolb
data16
ficompl
hlt
or
stc
mov
inc
pusha
cli
dec
add
mov
pop
inc
addr16
mov
push
mov
pop
inc
sub
rep
push
cmc
sbb
cmp
repnz
inc
inc
cmpsb
lret
sbb
sbb
add
icebp
push
sub
jmp
insl
xchg
orb
aas
or
mov
enter
fs
aas
stos
mov
dec
mov
mov
pushf
or
and
mov
sbb
daa
jl
jge
jns
add
add
add
fwait
out
pop
push
sub
sbb
xor
into
in
adc
int
xchg
aaa
add
out
sbb
pop
scas
mov
call
imul
add
popa
pop
mov
in
add
call
jno
call
faddl
adc
sub
bound
jne
repnz
shll
out
cmc
jns
data16
add
push
ljmp
push
mov
rclb
outsl
xorl
in
jb
xor
sbb
es
mov
xchg
test
dec
stos
jo
add
pop
push
test
and
mov
cmp
stc
and
ljmp
call
repz
or
jge
add
dec
shll
jmp
imul
add
mov
lahf
and
leave
or
mov
nop
lods
mov
popf
jno
cmp
xor
mov
add
je
sub
fbld
orb
ffreep
pop
add
dec
loop
js
add
repz
nop
cwtl
add
fsubp
adc
sbb
paddusb
subl
in
add
insl
inc
mov
mov
iret
ds
fsubrl
jne
add
add
js
mov
adc
fwait
loop
cmp
dec
int3
mov
jp
add
pop
mov
push
lahf
out
and
pop
xor
pusha
lret
negb
lcall
test
sub
mov
add
or
xlat
push
sub
adc
lods
pop
xor
fs
and
aam
sbb
and
popa
pop
and
inc
aad
wrmsr
scas
xchg
sbb
icebp
mov
pop
and
notl
xor
mov
add
jne
mov
aas
push
loope
sub
push
add
inc
push
sbb
clc
add
mov
loop
mov
fwait
add
pop
aam
mov
push
inc
sbb
outsb
mov
add
sub
sbb
xchg
clc
push
mov
stos
inc
add
adc
mov
add
mov
sti
out
add
sbb
xchg
jb
int3
sarb
add
add
mov
movb
sub
hlt
push
add
inc
inc
roll
insb
ljmp
xor
movsl
or
mov
and
add
sbb
xor
cld
sbb
push
nop
dec
and
or
add
mov
adc
daa
mov
movsb
andb
cld
jae
jns
std
add
push
inc
pop
je
ror
sbb
idivl
cwtl
dec
mov
inc
xchg
push
inc
lods
sbb
lods
pushf
xchg
icebp
add
ss
mov
je
fsubrl
xchg
leave
psadbw
push
sahf
push
xchg
aad
cld
add
rcr
push
xor
incl
push
inc
cmp
inc
inc
dec
jl
mov
dec
add
jns
push
loope
jnp
rol
js
divl
add
cmpsb
in
sti
xchg
rclb
add
cmc
mov
push
fdivl
add
xchg
mov
cmp
jg
add
sti
sbb
jne
mov
sbb
push
dec
rcr
fldl
in
jg
jnp
pop
sti
es
sub
pushf
add
shll
divb
cmp
add
int3
mov
dec
inc
fidivs
push
or
jl
pop
mov
cmpsl
lret
xor
js
push
lock
iret
fisubl
add
shl
or
mov
fstpl
inc
cmpsb
mov
out
jo
adc
mov
imul
test
aaa
and
jle
cmp
and
test
adc
icebp
cmpsl
mov
sbb
add
and
adc
fsubp
add
and
add
jb
movsl
pop
xor
mov
push
clc
int
jg
add
imul
rcl
push
push
mov
es
xchg
sbb
inc
add
mov
movsb
add
insb
negl
lahf
cwtd
push
cmp
push
insl
imul
movl
sbb
add
inc
xor
adc
ss
xlat
add
test
or
sbb
lcall
pop
adc
mov
or
inc
xor
pop
inc
push
adc
and
add
movsb
iret
fldcw
push
mov
in
adc
shr
mov
in
jo
add
outsb
mov
subl
mov
movsb
add
jge
mov
movsl
jo
in
jno
sbb
sub
ds
add
sbb
cmpsb
add
clc
lods
loope
dec
xchg
andb
mov
addl
jecxz
pop
xor
nop
sbb
shrb
and
xor
enter
cmpsl
sub
and
mov
fstl
or
int
add
out
rorl
in
nop
push
sarl
fwait
out
fildll
loop
imull
add
cmp
pusha
sar
cwtl
loope
testl
jmp
popl
push
mov
add
ret
pop
mov
ds
movsl
sarl
add
movsb
aad
xor
add
out
test
jmp
into
mov
add
cmpsb
frstor
xor
xor
sub
jecxz
pmulhuw
dec
bound
aas
inc
insb
out
test
or
sbb
cwtl
std
push
les
cmp
cmpsb
inc
sbb
int3
add
mov
xchg
psubq
xchg
and
jno
sahf
fcomps
pop
add
das
cld
cmp
add
cwtl
int
sbbb
jecxz
js
and
add
push
test
les
jno
sub
test
push
lods
ljmp
sbb
cmpsb
add
scas
and
jo
pop
xchg
sub
dec
push
mov
cmpl
mov
cld
push
add
mov
pusha
cmc
push
in
jmp
movsl
add
pop
sbb
fnstsw
lds
push
add
das
ss
push
movsb
fsubrs
inc
loopne
leave
sti
cmp
add
and
add
sub
scas
or
sbb
in
pop
inc
and
add
mov
iret
loopne
cwtl
test
sbb
sub
mov
shll
popa
fbstp
sub
push
jmp
cmpsb
movb
outsb
aad
or
ret
sub
test
mov
or
push
fs
movsl
cmp
enter
loopne
mov
add
add
pop
cmp
das
pop
add
push
pop
xchg
inc
and
cltd
stos
and
addr16
add
jbe
lahf
pop
repnz
dec
add
sahf
jp
fsubrl
jne
loopne
add
aad
rolb
in
in
dec
loope
or
and
dec
bound
push
lods
add
shrb
call
in
fnstcw
jmp
xchg
and
out
ds
adc
jp
mov
stc
sahf
in
not
adc
pop
xor
mov
xchg
lods
jnp
fistl
aas
pop
cld
add
fwait
imulb
mov
loop
inc
clc
add
push
cltd
and
or
or
adc
rolb
mov
mov
and
mov
mov
sub
add
call
mov
addb
aaa
es
incb
int
pusha
mov
stos
push
push
hlt
jbe
sbb
xor
comiss
std
aas
add
insb
mov
inc
aam
and
loope
enter
loop
or
call
mov
in
or
nop
add
inc
pushf
or
test
add
mov
dec
cmc
sbb
ljmp
in
add
call
int3
xor
inc
cltd
xchg
mov
mov
dec
mov
jns
add
sub
add
nop
add
push
fcoml
sar
test
add
inc
jb
subb
add
lahf
outsb
add
roll
add
mov
jne,pt
xchg
add
iret
push
cmc
add
mov
adc
or
es
cmp
addb
mov
sub
push
test
fists
cmp
sbb
push
lods
mov
hlt
push
push
jne
adc
xor
cld
add
mov
sbb
push
inc
sahf
sub
in
add
mov
mov
ficoml
loopne
icebp
sbb
cmc
jle
dec
pusha
cmp
sbb
mov
rolb
add
mov
add
mov
aas
cmp
add
xorl
mov
movsl
mov
outsl
xor
shll
xchg
push
add
in
movsl
add
daa
rclb
lods
repz
xchg
inc
xor
pop
popf
jns
cmp
push
pusha
lock
repnz
push
fs
pshufw
sub
jb
sbb
testb
setp
sbb
test
add
shl
mov
out
push
mov
loopne
jge
aad
mov
scas
pop
mov
mov
mov
and
and
add
pop
adc
mov
xor
inc
clc
js
adc
sub
pusha
stos
test
outsl
out
or
mov
mov
outsb
xor
push
mov
gs
pop
and
or
lods
and
inc
stc
mov
sub
xor
add
and
cmp
lret
jnp
mov
shl
inc
popf
loopne
add
lret
out
jne
add
cs
in
adc
cmp
or
fwait
jl
fiadds
fsubl
test
divl
or
rcr
sbb
add
push
mov
das
lods
add
rclb
adc
inc
out
add
sbb
das
dec
fdivl
ret
test
cmove
imul
xlat
sahf
pop
fdivrl
arpl
cmpb
lods
xchg
push
lock
rol
aam
ret
andb
add
js
or
xstore-rng
cmpsl
add
cli
pop
lea
sub
push
dec
or
push
xchg
je
dec
fldenv
pusha
mov
fwait
or
push
or
dec
out
sbb
push
add
cs
dec
mov
xlat
insb
adc
jle
cld
push
pop
xchg
add
cmp
cmc
pop
shll
xchg
sbb
dec
cmpsb
xor
mov
push
ror
adc
je
nop
sbb
jb
stos
outsb
pop
xor
cmp
ret
xchg
insl
jb
dec
jle
test
lods
pop
pop
in
mov
or
popl
add
sub
cwtl
push
mov
pop
jge
jle
pusha
addr16
lods
sub
pop
inc
add
mov
test
dec
sub
mov
in
pop
std
mov
jle
mov
inc
not
add
sbb
sub
bound
icebp
xchg
cmc
mov
jbe
sub
mov
aaa
cmpsl
or
cmp
insl
shlb
filds
fldenv
data16
add
ja
test
cld
dec
add
nop
xor
cmpsb
or
inc
or
aam
and
and
je
and
xchg
add
push
inc
bsr
loopne
add
xor
loopne
mov
inc
adc
mov
repz
dec
dec
inc
roll
nop
jnp
sbb
mov
sahf
call
or
cmp
xchg
jo
push
fidivl
add
ret
test
push
add
push
cmp
mov
in
lock
cmpsb
xor
add
add
inc
mov
rolb
lret
mov
fcomps
or
add
rolb
ret
sub
clc
pusha
cmp
add
aam
sub
gs
les
mov
mov
bound
scas
test
lea
test
sbb
ds
dec
stos
ret
jecxz
int
mov
shr
mov
data16
dec
mov
je
insl
push
iret
cmp
or
cmpsl
xor
sahf
push
dec
add
or
push
mov
shl
add
movsl
add
sub
sbb
cmpsl
mov
shll
xchg
into
adcl
in
cmpsl
adc
inc
mov
movsl
mulb
mov
mov
and
inc
mov
add
movsb
jl
add
in
popa
fildll
add
ficoml
test
push
ror
add
and
insb
lret
sub
cmp
leave
pop
xor
rorb
cld
cltd
push
add
lret
jb
aad
adc
xor
push
test
add
or
out
sbb
jns
sbbb
lea
addr16
pop
dec
pushf
mov
cmpsb
jno
pop
and
ret
pop
sti
subb
inc
sti
mov
xchg
dec
mov
in
pop
hlt
add
xchg
pushf
aad
fadd
leave
pop
test
fs
add
and
stc
mov
and
push
dec
ss
jp
add
cmpsb
decb
add
dec
mull
jne
adcb
inc
movb
or
inc
aam
jge
shrb
add
jno
jbe
add
test
mov
jbe
dec
sti
std
aas
sarb
sub
mov
iret
lods
add
stos
pusha
lock
rorl
int3
fwait
pop
clc
mov
add
sar
popf
jo
imul
push
repnz
fwait
daa
fs
sar
pop
or
add
sub
add
or
and
add
sbb
js
pushf
add
push
fucomp
mov
addl
pusha
popf
das
stos
xor
mov
add
lods
cli
daa
dec
call
or
add
test
scas
mov
mov
loopne
hlt
mov
mov
add
mov
adc
lret
ja
cmpl
out
or
or
add
into
jns
ss
cmpb
xchg
mov
jae
add
sbb
sbb
aad
mov
mov
test
xchg
add
push
adc
pop
xorb
xor
mov
jge
int3
cmp
sahf
lds
stc
mov
inc
pop
je
sbb
sbbb
adc
pushf
cmc
in
inc
jo
sbb
dec
shlb
idivb
pop
cwtl
sbb
sub
xor
orb
push
movsb
rolb
cmc
mov
aaa
mov
push
in
dec
adcb
or
push
push
test
int3
pop
add
and
sbb
mov
add
aaa
ficomps
mov
adc
xor
mov
sbb
sahf
and
mov
cwtl
jb
insb
cli
jl
popl
insl
sub
mov
or
jno
cmp
add
inc
xor
pop
adc
mov
hlt
lods
in
popf
add
push
fmull
add
sub
mov
add
popa
xor
xchg
cli
clc
xor
push
test
adc
loope
jns
and
jne
add
dec
push
cwtl
xchg
lods
pop
ljmp
test
xchg
add
fimull
add
aas
and
inc
sub
cwtl
mov
mov
cmp
or
add
mov
ds
sbb
mov
repnz
lret
xchg
orl
in
shll
inc
and
hlt
lea
out
pop
aam
das
clc
add
jb
test
and
ja
fwait
lahf
mov
xchg
das
inc
add
movsl
add
mov
mov
adc
jno
dec
or
in
out
cwtl
sti
lcall
pop
cltd
adc
sbb
jno
adcb
jne
jnp
push
push
adc
mov
dec
xlat
dec
mov
out
das
pop
or
xchg
cmpsl
arpl
gs
pop
jp
add
and
inc
stos
popa
scas
jbe
adc
cmp
add
ret
adc
add
rorb
jne
cwtl
stc
fs
dec
pop
mov
flds
popf
jno
pop
ret
jae
push
add
clc
xlat
pop
cmpsb
sub
lds
insl
fsubs
sub
mov
pop
cmc
inc
cmp
cmpl
les
stc
add
aas
sbb
inc
jns
shlb
cmp
add
fcompl
add
lret
xlat
add
inc
sub
nop
push
jge
loopne
or
mov
inc
fwait
xchg
jmp
mov
dec
add
std
stos
cmp
sqrtps
imull
mov
repz
testl
pop
xorb
push
xchg
fwait
cwtl
in
mov
mov
lea
push
mov
in
push
dec
rep
daa
sbb
andb
daa
push
inc
roll
push
add
push
into
add
and
pop
xor
pop
rcrb
ja
ucomiss
arpl
xorl
rcrb
cmp
leave
subb
les
inc
xor
ss
dec
add
cmp
push
mov
loop
add
popa
daa
int
sysret
lods
loop
adc
or
popa
leave
add
sbbl
inc
dec
movsb
filds
fcom
je
inc
dec
or
mov
movsl
cwtl
cmp
or
fnstsw
or
inc
popa
push
lea
mov
push
pop
decl
out
dec
lock
sbb
hlt
rorl
add
sub
js
push
aad
cmp
mov
ljmp
xor
adc
gs
loope
aaa
or
dec
pop
add
js
or
pop
gs
mov
jnp
cmp
fiadds
outsl
mov
cld
or
mov
or
mov
push
sub
pusha
mov
shl
xor
and
fucomi
and
je
shr
rol
cmp
jae
mov
push
test
adc
jl
lods
dec
pop
add
test
mov
stos
adc
enter
xor
sti
pop
pop
dec
xor
add
fstps
movsl
add
and
je
mov
fnstsw
or
xor
rol
jne
xchg
or
mov
scas
mov
loopne
aam
add
ret
icebp
jae
mov
dec
sub
pusha
int3
lret
jo
mov
push
push
enter
add
dec
mov
push
lock
lock
add
push
pop
shrb
cmpsb
shlb
pop
pop
popf
fs
out
lods
test
lea
xchg
scas
xlat
inc
mov
push
sub
imul
loop
jg
pop
mov
sahf
fsubl
rclb
popf
add
test
cld
pop
dec
sub
out
pop
fsubs
adc
add
ret
shll
outsl
call
imul
outsb
add
mov
mov
lahf
sti
adc
mov
sub
add
cmp
enter
xchg
xchg
push
or
mov
outsb
pop
xor
sub
add
adc
push
je
add
scas
mov
xor
mov
rcll
xchg
sbb
popa
push
add
loopne
mov
or
dec
daa
jge
enter
xor
add
mov
ret
xor
cld
jne
call
inc
add
ret
mov
dec
pop
mov
subb
sti
xchg
inc
pushf
enter
add
add
inc
add
sahf
adc
adc
mov
or
nop
int3
or
and
ror
and
inc
addb
js
dec
in
add
mov
pop
sbb
fadds
loopne
add
jp
inc
mov
ss
push
jle
cmp
incb
mov
rorl
mov
push
aas
dec
mov
test
sti
pop
mov
xor
aam
and
push
push
xlat
mov
jae
sbb
sbb
xchg
pop
cmp
add
sub
xchg
faddl
mov
add
in
jno
jle
add
and
mov
jne
add
lret
filds
shrb
pop
adc
inc
add
jns
ds
cmp
sbb
loope
stos
or
add
nop
sub
jno
lock
sbb
orl
pusha
idivb
sbb
outsb
add
push
ficompl
xor
aas
cs
xorb
ljmp
test
or
add
in
or
xchg
add
inc
enter
and
test
sbbb
call
inc
add
pop
mov
das
gs
sti
add
push
mov
add
dec
dec
test
mov
xchg
push
testl
jns
shr
pop
cmp
pusha
add
xchg
add
imul
mov
sbb
lock
add
xor
add
cmp
lea
xchg
shlb
dec
test
sbb
push
andb
xchg
sub
dec
ja
ja
push
fstpt
pop
jl
add
or
lahf
jns
je
mov
jnp
or
xchg
rclb
jmp
add
sbb
cli
xor
mov
pop
scas
je
inc
adc
out
les
dec
push
dec
aad
adc
pushf
or
iret
out
out
add
es
clts
cmp
mov
add
ss
inc
cli
jge
xorl
pop
lret
and
sbb
pop
add
insl
push
out
jp
add
xlat
jae
add
add
xor
and
insb
mov
add
cmp
cmp
pop
or
into
and
add
and
test
and
pop
jae
shlb
jb
bound
callw
stos
jbe
cli
push
sahf
popf
add
repz
adc
and
add
movsb
add
sarb
mov
add
out
jp
dec
add
stc
lahf
out
inc
ret
xchg
mov
dec
arpl
faddl
mov
mov
push
xor
rcrb
add
out
bound
in
jbe
nop
mov
push
pop
adc
pop
pop
test
sub
mov
leave
jae
mov
add
mov
sub
sbb
sbb
mov
data16
xor
cli
push
test
jp
lret
mov
jle
cld
setb
and
or
cmp
js
xor
dec
mov
add
rcrl
jb
cwtl
xchg
add
or
addl
out
inc
mov
les
scas
roll
xchg
add
xorb
add
dec
loop
adc
test
sub
adc
in
stos
adc
sub
sbb
ljmp
lahf
outsb
lcall
mov
pop
fstl
andl
xorb
fwait
pop
insl
enter
xchg
fstps
push
sub
adc
add
push
jno
cwtl
dec
xor
and
add
lret
repz
xchg
adc
mov
lret
adc
add
arpl
adc
mov
mov
imul
orb
add
xor
clc
cmp
jp
xor
or
xor
add
push
cmc
in
adc
stos
or
or
xchg
push
cli
aas
sbb
adc
jle
fs
outsl
dec
push
test
xchg
stc
incb
add
in
int
xor
or
shrb
xorl
add
jl
dec
call
add
inc
push
add
cmp
in
jl
sub
mov
sub
jo
rcr
sbb
xchg
xchg
add
xchg
cmp
test
and
stos
dec
lods
add
je
fsts
cmp
jo
sub
jno
add
inc
inc
push
aad
add
dec
sahf
adcb
add
jg
adc
sbb
aaa
dec
movsb
flds
mov
and
add
cmp
mov
dec
xor
sbb
test
adc
or
insb
push
call
jl
movsb
add
push
std
mov
add
fcoms
add
add
aad
cli
sbb
cs
jp
out
add
jp
sbbl
xor
je
push
das
ja
fs
or
ja
scas
sub
cwtl
rcrb
add
jae
xchg
and
jg
shll
or
addl
pop
adc
and
das
xchg
pop
pusha
inc
movsb
xor
inc
dec
jle
add
dec
or
add
pop
gs
jo
jle
or
sbb
inc
cmpsl
add
out
sub
add
xor
xchg
test
fbstp
pop
add
adc
sbb
mov
je
fsubl
test
aad
ljmp
pop
dec
incb
pop
cmp
jl
test
add
push
mov
push
or
add
mov
xchg
push
aam
pop
loop
adc
icebp
pop
and
pusha
fcoms
sti
shlb
jl
mov
dec
lods
sub
xor
pop
jecxz
pop
rcr
add
add
hlt
add
xchg
out
inc
xor
lods
cmp
xor
pop
inc
xchg
add
sub
les
mov
pop
fdivrl
test
jae
adc
dec
xor
add
mov
cmpsb
sbb
pop
pop
mov
jp
sub
gs
or
inc
and
pop
loopne
xchg
daa
cwtl
mov
jg
nop
fsubs
push
fimuls
incl
clc
enter
jae
add
adc
xlat
jg
mov
nop
mov
xchg
roll
sub
decl
jne
popa
fistps
or
dec
cmc
jg
mov
xor
movsb
int
pop
add
push
dec
lahf
adc
add
mov
bnd
movsl
push
xchg
lret
jecxz
add
sub
or
loopne
jne
xchg
add
sti
test
add
xchg
into
shrd
dec
pop
sub
addr16
popa
pushf
inc
ficomps
jbe
shlb
fcmovne
add
sub
mov
jl
jnp
jle
jge
popf
mov
jp
and
dec
mov
movsb
into
xor
and
ljmp
test
inc
jnp
xor
out
mov
aas
add
add
ss
not
and
aam
cmp
lcall
cltd
ss
sub
push
mov
aaa
out
test
fcmovbe
inc
and
clc
xor
mov
sub
lahf
inc
cmc
pop
sub
add
push
xchg
loop
or
loopne
lea
jl
rcrb
dec
pop
sub
movsb
push
xchg
mov
sub
fadds
add
int3
push
add
mov
mov
pushf
fistl
cmp
xor
sub
sub
imul
inc
jno
mov
ret
repnz
or
push
add
add
mov
mov
aaa
lcall
add
xchg
rorb
sbb
outsl
add
and
sbb
xorb
add
movsl
loope
fimuls
cmp
mov
pop
adc
loopne
mov
sbb
fdivr
xor
ss
adc
adc
clc
add
dec
mov
addb
mov
test
jns
mov
ret
enter
and
imul
push
mov
nop
out
outsl
loop
leave
loop
js
mov
sti
add
push
lock
icebp
das
or
out
mov
sbbb
push
enter
gs
mov
xchg
add
cmpsl
and
cltd
jo
ds
inc
or
cmpb
std
or
aas
add
adc
inc
mov
add
into
ds
xchg
add
or
add
je
sub
xlat
and
shll
cmp
push
pushf
xchg
or
mov
rolb
mov
xchg
mov
inc
aam
jbe
xor
dec
subl
jl
mov
xchg
icebp
xchg
ret
test
xchg
movsb
cwtl
addl
mov
dec
mov
loope
inc
inc
pop
pop
xchg
xlat
inc
add
cmpsl
js
orps
andb
xor
mov
sbb
jp
add
mov
and
push
mov
or
sbb
sbb
inc
xchg
pusha
lret
fsubr
lods
in
inc
test
mov
or
mov
lahf
and
fldl
pop
adc
inc
outsl
scas
pusha
sbb
mov
xor
jnp
test
xor
rcl
push
or
loope
fwait
add
fistpl
xchg
test
out
push
xchg
mov
sbb
cmpsl
lods
add
and
addl
stos
nop
ficomps
cs
or
mov
out
in
data16
lods
push
adc
mov
dec
shll
sub
mov
jle
fmuls
cmpsl
push
lds
sub
scas
in
mov
xchg
add
cmp
or
sub
sub
and
bound
adc
cmpsl
leave
xchg
imul
and
les
daa
cwtl
int
cmp
fbstp
cltd
add
mov
or
add
fwait
inc
sub
lds
push
ja
pushf
int3
inc
pop
jbe
sbb
js
sysenter
lea
testl
sbb
push
out
and
sti
push
insl
jb
add
and
mov
xor
or
int3
inc
popf
pop
add
sub
loop
add
sbbb
add
and
add
pop
adc
out
scas
adc
or
lock
test
jmp
and
sub
dec
jne
cli
stc
sbb
insl
and
cwtl
in
push
mov
pop
int
dec
cmpsl
push
fcmovb
sbb
jns
sbb
xor
sub
aaa
pop
add
inc
std
add
inc
loop
test
out
shll
push
dec
or
stos
in
pop
jge
add
push
sub
loope
repz
movsl
out
sbb
cmp
pop
mov
add
pop
roll
mov
sub
jbe
insl
xorb
mov
subb
js
adc
insl
xchg
add
ret
push
mov
hlt
dec
mov
iret
add
sub
mov
lea
shrb
push
add
mov
add
jns
dec
mov
adc
add
aaa
pop
scas
xchg
and
sbb
sub
jecxz
mov
adc
mov
loop
iret
mov
add
mov
jns
add
xchg
daa
adc
jl
inc
adcb
nop
add
pop
rolb
popa
or
mov
mov
mov
mov
or
inc
in
xchg
test
push
filds
adc
out
fstpl
push
add
xchg
push
repnz
jnp
pop
push
in
mov
test
fcompl
xor
xor
lret
cli
push
dec
sub
cwtl
in
add
cmp
inc
adc
add
push
push
iret
je
add
or
cmp
in
cmp
sbb
xor
lock
das
les
mov
mov
or
add
and
push
imul
lods
xlat
or
cmp
es
pop
and
out
mov
cld
or
jl
out
push
sbb
loopne
cmpsb
les
push
pop
push
fildl
push
push
add
loope
fbld
mov
subb
pop
stos
inc
out
ds
add
mov
mov
lea
ja
imul
add
xchg
cwtl
lret
mov
xor
call
mov
mov
imul
xor
hlt
mov
fsubs
add
lret
and
push
mov
add
sub
js
imul
cs
jb
push
and
xchg
jo
add
ss
ret
outsb
decl
inc
mov
push
jle
aam
xor
push
in
pop
lods
push
cmp
and
or
test
add
adcb
push
movsl
add
icebp
mov
fisubrl
push
outsw
jno
and
push
add
idivl
scas
jnp
add
orl
or
dec
inc
sbb
push
add
add
pop
xchg
outsb
das
sbb
jo
sbb
lcall
into
in
adc
mov
add
add
adc
inc
mov
add
cwtl
jecxz
or
test
pop
cmp
jae
or
inc
mov
outsb
xlat
sbb
xchg
push
mov
push
testb
movsb
mov
adcl
push
and
imulb
jae
pop
jno
mov
adc
test
cmp
call
lock
cli
add
rcrb
dec
inc
jle
push
xlat
pop
lds
dec
pop
dec
iret
std
cmpsl
jae
dec
or
jmp
cmp
push
inc
inc
rolb
out
cld
xchg
jno
or
xchg
arpl
mov
fistps
mov
add
lods
xchg
stos
icebp
ja
call
pop
mov
sub
cmp
mov
add
xchg
lahf
imul
test
fcoml
push
cli
rolb
adc
imul
adc
rcrb
pop
pop
fs
fisubl
adcl
dec
xor
jne
mov
cld
rcll
or
or
shrb
call
ja
jb
loopne
into
cs
daa
stos
jo
cmpsl
in
xor
sbb
fsubs
pop
imul
and
push
aad
ljmpw
js
add
mov
mov
or
mov
clc
movl
push
jns
ds
pusha
adc
sbb
dec
shlb
and
xor
jg
add
or
push
imul
cmp
xor
outsb
ret
mov
xchg
mov
push
adc
or
fistpll
lea
or
sbb
lahf
push
nop
xlat
call
sub
aas
cltd
inc
mov
jae
or
ds
pushf
incb
dec
jns
cpuid
roll
shlb
insb
test
stos
dec
mov
push
icebp
sub
call
sbb
stc
pop
shl
add
adc
and
ja
js
cmp
add
push
xor
push
push
jno
andl
pusha
scas
push
add
andl
jmp
adc
inc
mov
dec
xlat
or
add
aaa
add
push
cwtl
popa
adc
pop
sub
mov
movsl
pusha
inc
pop
mov
subb
sti
stos
jno
add
inc
mov
add
popf
jae
cmpsl
push
or
mov
jo
jns
icebp
push
add
fadd
and
or
out
loope
mov
pop
pop
subb
cmp
mov
cmp
pop
mov
xchg
push
imul
and
pop
xlat
pop
scas
dec
mov
mov
clc
enter
mov
dec
inc
das
sbbl
inc
out
mov
pop
cmp
add
jecxz
popf
jae
cmp
sbb
xor
push
out
sub
les
ret
aad
jp
mov
out
sbb
mov
pop
inc
ffree
jecxz
dec
mov
fs
iret
sub
jmp
jl
pusha
stos
pop
mov
xlat
add
js
sub
nop
hlt
ljmp
rorb
adc
add
and
insb
add
jne
inc
shl
inc
cld
sbb
pop
add
sub
jbe
lock
outsl
mov
les
jl
cwtl
inc
mov
pop
int3
xor
push
daa
sub
cmp
cmpsl
sub
mov
icebp
stc
cmp
aad
mov
fiaddl
sbb
jecxz
adc
dec
repnz
cmp
add
rclb
adcb
adc
push
sub
inc
filds
jmp
cmp
adc
push
mov
and
dec
jne
add
dec
les
and
inc
mov
jo
lret
nop
sbb
jb
out
jns
add
and
mov
xadd
mov
in
adc
adcb
sbb
xor
testl
lds
push
jecxz
add
repnz
jb
push
popa
push
roll
leave
xor
cmp
je
fs
ror
pop
jbe
add
sbb
adc
cmp
andb
orb
xor
xorb
sbb
dec
cld
loopne
out
jo
xor
orb
push
iret
xor
add
fldt
gs
mov
shlb
test
inc
clc
mov
mov
or
pop
ret
inc
call
cmc
add
fwait
outsl
repz
pop
push
jmp
xchg
popa
out
or
lock
js
add
scas
lea
shrb
andb
test
adc
xor
and
imul
insl
addr16
enter
adc
das
jae
add
mov
icebp
and
leave
rolb
dec
jne
push
rclb
add
fmul
pop
movl
sbb
sbb
push
clc
lods
pop
cli
dec
sahf
dec
jae
add
aas
dec
cmc
and
xor
mov
cmpsl
loop
fcompl
pop
scas
inc
out
js
stc
adc
xchg
in
mov
adc
add
lahf
xchg
adc
lcall
std
add
cmp
inc
gs
add
jns
imul
daa
mov
enter
xor
xor
mov
add
adc
mov
daa
sbb
sbb
dec
add
inc
and
add
mov
or
add
sti
or
jp
add
cltd
in
dec
add
popa
sbb
add
and
and
orb
push
lcall
outsb
xor
sbb
adc
addb
popa
loope
or
pop
fldenv
dec
mov
mov
mov
add
jb
push
mov
xor
fldl
loop
iret
pop
aas
sbb
in
jmp
arpl
in
sti
aad
add
bound
cwtl
hlt
lods
sub
outsl
icebp
loope
xlat
add
lret
jnp
in
mov
js
mov
push
add
add
clc
insb
xchg
cmp
rcrl
or
add
and
jge
cmp
lock
add
loope
dec
pop
jg
dec
inc
pop
add
cld
repz
fmull
sub
mov
andb
out
pop
cld
push
movsl
fwait
cwtl
in
inc
sbb
add
mov
out
jl
outsb
mov
pop
inc
pop
jnp
into
scas
pop
fcomp
loop
cld
out
addl
pop
dec
test
subl
in
add
movsb
ja
out
pusha
shlb
sbb
inc
movsl
or
call
test
mov
add
andb
repz
cmp
add
clc
rorb
jnp
ds
and
dec
push
adc
mov
mov
xchg
cltd
pop
sub
push
mov
mov
xchg
mov
push
fisubrs
sub
push
mov
loope
rcl
add
imul
lret
aas
out
movsl
add
sbb
test
rolb
in
jnp
fimuls
xor
out
xor
std
jne
movsb
aam
nop
sbb
xor
pop
roll
jp
push
hlt
jae
cmp
pop
ret
je
mov
xor
pusha
divl
add
mov
insb
sbb
mov
mov
xor
cwtl
das
pop
mov
insl
sbb
inc
roll
mov
ljmp
aad
or
mov
sub
mov
add
or
pop
lods
dec
xor
les
adc
xor
pop
xchg
xchg
incl
add
push
add
mov
push
sub
das
loopne
cwtl
sbb
xor
cmp
call
adc
scas
add
in
paddusw
shlb
sub
iret
cmpsl
mov
loope
out
test
test
in
cmp
jge
lds
insb
dec
jne
sub
add
and
adc
push
pop
jno
incl
cwtl
ret
mov
sbb
push
sub
sub
insb
gs
fiadds
sub
inc
fldt
xor
add
xchg
stos
jg
xor
lods
ljmp
pop
pop
mov
jbe
aaa
dec
xlat
pop
mov
add
or
dec
cmpsb
mov
add
and
in
in
jo
sbb
fwait
push
mov
pop
cmp
mov
dec
fwait
add
in
push
ret
and
or
mov
mov
push
inc
jle
add
add
dec
lret
and
ljmp
pop
mov
cs
and
adc
in
sbb
fimuls
jmp
aad
sub
sub
add
add
jl
push
dec
insl
mov
and
aad
xor
push
jb
shl
imul
mov
in
jae
cwtl
gs
dec
cmpb
les
push
aam
out
or
stos
add
add
test
mov
popf
and
add
cmp
xchg
imul
lea
jbe
mov
pop
and
jo
sbb
and
cmp
sbb
dec
pop
mov
loopne
push
rclb
in
jge
lcall
std
stos
lods
sbb
lds
adc
inc
add
push
movsb
adc
inc
xchg
jo
les
cmp
nop
mov
div
mov
sub
nop
or
testl
out
test
inc
imul
insl
js
xchg
jl
jo
cmc
cs
orb
dec
mov
stc
jp
jge
add
cmp
ljmp
cmp
add
lcall
sbb
jg
mov
inc
xchg
jno
shlb
cmp
sahf
add
mov
movsl
adc
add
hlt
push
lea
mov
add
lds
aam
data16
push
add
cmp
into
xor
or
aas
and
mov
add
das
sarb
mov
xor
xchg
call
add
cltd
outsb
stos
out
lcall
cmp
inc
shlb
insl
or
jae
cmp
add
leave
stc
mov
jnp,pt
repz
ja
lods
add
fiaddl
adc
xchg
rcll
pop
dec
and
adc
ss
jns
add
pop
sbbb
cmp
pop
insb
mov
cmp
dec
adc
cmp
lret
orb
outsl
add
loop
js
in
xchg
into
jg
add
jge
xchg
nop
and
or
nop
cld
dec
ljmp
sub
iret
push
mov
add
add
inc
icebp
pop
add
or
dec
jo
pop
fldt
mull
cwtl
add
popf
sbb
fsubrs
add
aaa
fisubrs
push
stc
adc
cmp
jp
ds
sbb
or
leave
xor
dec
and
add
push
dec
js
push
xor
scas
add
or
mov
cld
rcll
pop
std
rorl
xchg
push
leave
xor
in
pop
cmpsl
sbb
sbb
movsl
js
xor
add
ret
outsb
add
push
mov
shll
scas
cmp
sbb
sub
push
test
xor
push
add
mov
je
pop
adc
mov
nop
mov
dec
andl
mov
xor
add
mov
sub
fcomps
xor
pop
push
and
addb
or
xlat
push
fstpl
js
gs
sub
adc
ficoms
faddl
push
test
stc
insb
sbb
inc
push
cmpsl
pusha
pop
mov
fs
imul
add
xor
push
add
shrb
push
in
add
mov
cmp
mov
jb
pusha
mov
xchg
add
imul
std
cmp
outsb
add
jno
xor
mov
push
ret
mov
inc
add
repz
jnp
xor
inc
lret
push
int
adc
sahf
push
in
dec
jnp
mov
int
mov
negl
add
shrb
add
test
lret
lahf
jp
lret
fsubs
daa
and
mov
sub
sub
mov
xchg
sub
or
bswap
arpl
int3
mov
mov
adc
jno
add
cld
add
add
dec
mov
aas
cwtl
add
fs
push
clc
mov
dec
mov
andl
outsl
sub
lcall
call
dec
xchg
hlt
add
pop
lahf
pop
xor
mov
xorl
ds
mov
cmc
lock
jne
jbe
sub
dec
mov
and
inc
push
mov
xchg
insb
fists
xchg
sahf
and
pop
in
nop
mov
jo
xor
mov
or
push
jecxz
cltd
bound
imul
into
daa
in
shl
addl
mov
jnp
push
xchg
cmp
or
jno
add
pop
sub
and
or
mov
xor
cld
pop
jno
test
shll
sub
add
sub
push
xchg
add
in
out
xchg
push
dec
in
in
loopne
dec
sbb
jae
pop
or
xchg
jno
adc
nop
pop
stc
popf
ss
mov
adcl
sub
ja
xor
xchg
into
loope
adc
push
in
or
enter
pop
enter
int3
std
cmp
test
or
inc
cmp
das
or
push
loopne
jp
pcmpgtd
mov
or
fwait
or
call
popf
mov
data16
jmp
and
jecxz
aam
or
add
push
jno
data16
fimull
dec
xlat
lret
adc
rolb
pop
sahf
xchg
insl
aaa
test
cmp
fisubs
rorb
xchg
mov
sbb
aad
lret
add
aam
sub
pop
add
popf
add
std
mov
test
mov
add
pop
leave
push
lahf
outsb
mov
enter
add
sysexit
xchg
stc
mov
mov
sbb
dec
sbb
div
rol
push
dec
push
xchg
add
repnz
pop
sub
pop
ds
pop
enter
xor
cwtl
ds
pop
lods
inc
std
jnp
inc
pop
add
mov
mov
fwait
add
test
cmp
xchg
subb
rolb
int3
push
jecxz
xchg
js
pusha
fwait
bound
cmpxchg
les
inc
orl
ja
es
xchg
push
rcll
xorb
movsb
cmp
test
push
dec
push
loop
pop
popf
rcll
stos
cmp
je
das
adcb
cmpsl
push
fsts
scas
cmp
or
pusha
ja
iret
stc
pop
dec
jl
addb
push
fnsave
repz
insl
xor
cmp
push
vmovd
cld
add
leave
cmpsl
cmp
pop
clc
push
mov
push
mov
mov
lock
pop
je
add
shlb
sbb
add
repnz
dec
pushf
ret
outsb
lret
inc
push
inc
mov
stc
repz
mov
adc
lcall
pop
int3
mov
fstp
and
pop
mov
mov
cmp
inc
cmp
fwait
add
fmull
gs
nop
in
rclb
adc
xchg
int3
sub
pop
push
out
mov
cmp
pop
push
adc
add
xor
mov
sbb
sbb
cmp
sub
push
ja
add
push
frstor
pop
pop
mov
mov
jge
mov
lcall
loope
add
mov
icebp
add
scas
adc
ljmp
inc
pop
mov
sub
jmp
popl
dec
xchg
addr16
movsb
or
in
sub
les
sub
sbb
sub
sbb
shrb
cwtl
inc
or
shlb
adc
add
cmpb
or
cmp
jp
mov
push
lahf
gs
jecxz
in
ret
andl
inc
out
popa
rcrb
je
add
xchg
fs
inc
mov
mov
xchg
js
add
stos
pushf
xor
pop
adcb
add
scas
and
repnz
add
sysexit
jl
hlt
pop
add
or
insb
ret
imul
cli
es
idivl
iret
push
pushf
adc
add
sbb
inc
add
clc
js
popf
pop
orl
add
jmp
push
ja
psubusw
test
mov
mov
add
ja
int3
fdivl
inc
add
cld
ss
inc
clc
add
test
js
push
btc
inc
jb
push
cli
mov
scas
xor
leave
fs
pop
rolb
mov
es
sub
xchg
add
jnp
pusha
mov
out
add
xchg
insl
mov
pop
fisubrs
xchg
aaa
repnz
divb
push
push
dec
sub
adc
ja
jnp
sbb
icebp
cmpsl
jbe
call
pop
fisubl
xor
push
jmp
ret
inc
xor
roll
arpl
or
pop
cli
jnp
sbb
imul
add
jg
push
loop
sub
in
xchg
add
cmc
insb
loope
mov
jg
hlt
add
les
push
in
jp
xchg
inc
add
popf
sub
mov
and
andb
push
mov
inc
scas
mov
jbe
cmpsb
lea
xor
pop
or
push
mov
dec
sub
or
fisttpl
pop
test
pop
repz
add
test
pop
jg
inc
hlt
fstps
lock
pop
push
test
cwtl
pop
in
fadds
sbb
push
lods
sarl
fst
inc
mov
ljmp
jmp
popa
add
add
rclb
cli
mov
movsl
add
pop
push
lock
and
ror
lock
cmp
mov
add
data16
cmpsb
inc
add
fwait
dec
inc
cmpb
pop
dec
inc
sub
incl
aad
mov
cmpsb
adc
addl
fcomps
add
hlt
mov
lods
ds
fisubs
insl
xor
jo
out
mov
subb
bound
dec
add
mov
adc
ficompl
popf
xor
push
daa
add
push
pop
mov
and
in
pop
jbe
addb
imull
repz
inc
xchg
test
pop
clc
add
jge
push
add
or
add
and
mov
sub
mov
ret
jmp
loopne
or
lds
add
add
xchg
int3
add
mov
cli
push
xor
and
adc
iret
subb
jmp
xchg
adc
addr16
jle
add
sub
jnp
cli
cli
add
inc
add
xchg
add
sub
mov
fbld
outsb
scas
or
pop
in
fisubrl
and
push
popf
addl
call
aad
jne
mov
pop
jmp
pop
ret
sub
sbb
popa
add
negb
mov
push
je
dec
rcll
in
cmp
subb
add
imul
add
push
pop
cmp
pop
xlat
xor
and
inc
les
sub
rcll
inc
jno
pop
aad
or
lea
in
mov
inc
in
cmp
popa
xor
jne
mov
adc
outsl
aam
add
lret
push
out
push
mov
mov
fdivl
fnsave
in
adc
jb,pt
das
loopne
push
sbb
cwtl
jmp
aas
add
inc
loop
mov
addl
cmp
add
mov
fs
aas
inc
mov
cwtl
add
clc
ja
rclb
lea
add
test
pop
mov
fsubs
loop
sub
and
cmp
shr
jbe
pop
pusha
push
or
adc
adc
push
das
bound
dec
push
mov
mov
add
xchg
and
cmp
adc
lcall
inc
adc
dec
int
add
adc
movsl
jns
lcall
push
cld
pop
inc
mov
push
rorb
aaa
in
subl
mov
or
lcall
inc
add
or
dec
push
jl
es
add
andb
cld
or
inc
mov
fsubrs
sub
xchg
push
jns
or
mov
test
mov
loope
mov
imul
jo
hlt
add
and
loop
subl
loope
inc
jo,pt
int3
or
and
and
xor
add
xchg
jb
mov
std
mov
scas
repnz
push
mov
inc
scas
test
inc
movsl
and
add
mov
sbb
add
imul
loope
and
sub
bound
lret
scas
jmp
jnp
sbb
push
inc
xchg
and
add
inc
add
inc
lods
pop
mov
push
shl
aad
adc
imul
lock
or
add
or
and
xchg
mov
pop
pusha
in
mov
dec
sbb
inc
or
sub
int3
cmp
xchg
jb
mov
mov
adc
add
cmp
inc
mov
and
pop
push
mov
jp
fnstenv
sbb
call
sbb
push
orl
pop
adc
jecxz
gs
cltd
jns
insb
dec
test
paddd
xchg
mov
jno
add
pop
pop
hlt
rorb
mov
hlt
insb
sub
add
xchg
mov
fwait
lods
cmc
xchg
sub
cwtl
jnp
stc
sbbb
push
lret
jo
cld
aas
xchg
add
lret
lods
loopne
shlb
mov
loope
rcr
ss
jae
sub
push
sbb
movl
jo
push
pop
push
sbb
push
leave
mov
hlt
mov
cltd
js
jb
sub
or
inc
bound
mov
add
arpl
and
add
or
dec
dec
or
jmp
add
in
test
movsl
setp
and
cltd
push
adc
fwait
pop
loopne
test
rolb
push
inc
scas
or
cmp
call
orb
inc
jnp
adc
jb
pop
xchg
js
pushf
fsubr
outsl
rorb
test
mov
adcb
dec
in
and
jge
push
dec
inc
jb
mov
or
adc
dec
xor
adc
addb
sbb
cmp
add
fnstsw
add
adc
adcl
or
and
es
js
jne
sub
rolb
add
adc
add
push
mov
or
fmuls
pop
xchg
xor
cmp
inc
push
sbb
dec
mov
test
cmpb
dec
lock
js
jp
push
scas
or
xchg
adcb
inc
pop
push
inc
std
movsb
jle
xchg
add
std
cmp
or
ret
pop
cmp
dec
xchg
in
andl
cmpsl
lds
and
mov
jno
sbb
add
imul
or
arpl
push
or
mov
add
mov
cld
dec
pusha
push
lds
mov
sub
stc
add
mov
int
cmp
cmpsb
xchg
push
add
mov
adc
push
mov
or
dec
jp
cltd
jo
add
inc
addb
or
sub
aad
outsb
cltd
icebp
test
adc
pop
out
xor
add
aaa
out
adc
or
xor
scas
adc
jmp
and
cmp
ret
loopne
les
cwtl
arpl
or
cmp
into
sub
and
or
adc
add
les
ljmp
and
sbb
scas
fcmove
add
add
lret
addr16
or
xchg
or
pop
fbld
dec
jg
nop
jge
mov
rol
and
enter
adc
add
jg
lds
into
aaa
addb
push
mov
or
mov
pushf
xchg
jmp
sti
dec
xchg
adc
pop
mov
jno
inc
add
mov
aam
loopne
push
jmp
rclb
sbb
int
in
test
shr
cld
repnz
add
cs
mov
dec
movsl
jo
add
push
sub
xlat
cwtl
int3
test
add
and
int
jno
add
into
or
add
lock
jmp
mov
lcall
ret
roll
add
dec
mov
add
lds
add
push
dec
or
ret
push
dec
mov
cli
push
cmp
inc
in
add
pop
add
pop
cmp
aas
mov
mov
rol
rcll
and
add
inc
cmp
cmpsb
cmp
popa
addb
lcall
insl
adc
and
arpl
addb
das
addr16
movsl
cmc
addb
and
dec
mov
xchg
push
jecxz
je
scas
out
ds
add
xchg
daa
jle
mov
lcall
add
or
das
orb
std
add
mov
jb
pop
icebp
mov
push
jl
cli
jge
xchg
push
call
xor
ret
or
mov
add
and
add
sbb
iret
sbb
out
mov
add
test
shlb
add
ljmp
dec
ja
xlat
outsb
jg
inc
shll
pop
mov
ss
jp
scas
mov
into
call
jle
jne
and
rcll
inc
mov
inc
add
clc
inc
pop
pop
cmp
add
into
or
sub
inc
or
add
les
mov
pop
les
repz
push
jecxz
inc
lret
adc
test
sbb
fwait
jg
scas
add
lock
add
sub
and
adc
sarb
cmp
xor
ret
fs
add
lods
fcomps
test
pop
mov
push
testl
or
scas
aaa
xor
pop
add
dec
sbb
add
iret
lret
pop
mov
mov
cmp
dec
inc
xchg
or
push
lods
cmpb
sbb
mov
mov
mov
fsubrl
sub
loopne
out
adcb
pushf
popa
push
mov
sbb
add
popf
incl
xchg
loopne
mov
xchg
adc
or
inc
sub
test
in
inc
xchg
loope
mov
add
imul
nop
adc
in
or
pop
movsb
cli
mov
mov
jbe
loopne
fdivl
out
add
fwait
or
add
icebp
bound
andl
cwtl
lcall
adc
xchg
xchg
loopne
pop
movsl
push
mov
sbb
xorl
sbb
iret
mov
inc
mov
or
mov
cmp
mov
xor
orb
add
push
cli
xor
sub
scas
push
lret
movsl
ret
add
add
inc
jge
fistps
add
sub
syscall
add
faddl
fs
xchg
add
insl
mov
mov
mov
sub
xlat
mov
insb
add
pop
and
push
jmp
xor
and
sbb
push
cmp
pop
lret
xchg
add
pop
add
jb
cmpsl
fldpi
imul
xorb
fs
add
fnsave
jp
test
mov
xor
loop
mov
fcmove
shrl
sbb
add
mov
inc
bound
adc
and
shlb
mov
arpl
insl
lret
cmpsb
pop
test
inc
pop
cs
faddl
dec
mov
add
jbe
adc
push
xchg
or
ja
andb
mov
aad
fcoms
add
mov
pop
add
sub
es
ljmp
xor
rcrb
pop
push
add
jo
arpl
jno
dec
or
jmp
cmp
mov
insb
lret
add
inc
xor
add
shlb
add
andl
xchg
movsb
je
dec
repz
shlb
ds
nop
dec
pusha
push
adc
adc
add
add
mov
cmp
add
cmpsl
mov
jb
data16
int3
push
or
sahf
sbb
arpl
mov
xor
xor
add
inc
jg
push
xchg
pop
push
mov
cmp
out
mov
xchg
add
iret
imul
mov
loopne
popf
arpl
xor
add
fdiv
leave
repnz
es
out
add
xlat
sub
mov
mov
aaa
mov
add
sarb
ret
je
pop
push
mov
std
add
sbb
mov
pusha
cmp
sbb
out
mov
adc
lea
ljmp
jmp
or
pop
pop
setg
mov
or
mov
add
shll
sub
and
xor
out
add
push
sbb
cli
and
in
test
std
ss
pop
or
xorb
repnz
rcrl
das
aas
lods
jmp
sbb
nop
dec
mov
cmc
fsubrs
pop
jg
dec
out
add
outsl
adc
jg
xchg
dec
cld
xor
test
push
std
in
lret
sub
je
aas
sub
xchg
call
shlb
lds
test
movsl
fistpl
add
xor
outsb
gs
ret
addr16
push
mov
mov
push
xor
in
adc
push
inc
mov
cltd
jae
pop
mov
or
sbbb
jnp
add
cmp
sbb
aad
or
leave
pusha
loopne
mov
int
test
insb
movsl
or
add
loop
lcall
rorb
mov
movsb
test
addb
fsubrs
jo
add
addr16
sub
sub
mov
adc
scas
fistpll
lods
mov
mov
or
scas
push
out
jp
cmp
mov
fbstp
bnd
std
jl
xchg
cs
movsb
add
lock
add
sub
cmp
inc
roll
pop
fadds
roll
mov
out
pop
out
push
adc
addb
xchg
scas
aad
outsl
jmp
jmp
lods
cmp
push
dec
movsl
add
aaa
rcrb
sub
rclb
mov
add
fsubrp
jmp
leave
int3
mov
lods
xor
testb
ja
mov
hlt
mov
pop
inc
mov
push
xchg
or
cmpb
fwait
xchg
xor
xor
pop
loopne
jno
pop
xor
mov
inc
mov
repz
push
cmp
shr
add
cmp
call
cmpsb
xlat
fildll
int
and
in
dec
movsl
and
push
lret
mov
mov
jge
mov
and
or
leave
pop
sbb
cli
stc
add
pusha
xchg
lret
fdivr
pushf
add
popa
out
cwtl
pop
dec
ja
pop
push
int
adc
xor
or
xchg
or
lcall
hlt
int
add
adc
xchg
cld
repz
rorl
sbb
mov
push
xchg
mov
mov
cmpsb
push
subb
lock
add
mov
jae
add
push
lret
and
jnp
ja
nop
sub
adc
adc
cmc
mov
push
add
mov
pop
pusha
cmp
call
xor
jns
pop
pop
mov
out
xchg
jp
cltd
hlt
orb
xchg
push
scas
cwtl
addr16
or
les
js
or
movsb
sub
pop
rolb
pop
int
and
idivb
add
xchg
pop
sub
shll
rorb
and
nop
mov
mov
inc
in
mov
or
pushf
add
aas
mov
jbe
cwtl
insb
adc
inc
fidivs
lods
loopne
dec
lds
xchg
pop
add
fidivrs
pop
cmp
mov
xor
out
stos
cli
add
add
rolb
fs
insb
iret
maskmovq
testl
mov
xchg
lock
or
test
outsl
pop
pop
jg
fwait
push
xorb
push
adc
dec
stos
dec
fdivrl
adc
bound
sub
cmp
and
aad
in
push
sbb
ds
mov
add
push
sub
xor
inc
sahf
ljmp
inc
add
aaa
xchg
rolb
add
pop
loopne
out
inc
and
cmp
inc
jns
add
leave
add
aaa
fsubl
add
xor
cwtl
mov
mov
and
cmp
cli
ljmp
add
int3
mov
stos
enter
and
lahf
iret
add
loopne
das
je
mov
adc
push
add
sbb
out
add
out
iret
or
mov
push
jo
fwait
cmp
add
inc
jl
pushf
xor
sub
add
cwtl
test
jo
das
xchg
add
mov
cmp
and
jno
add
inc
mov
decl
fiaddl
jnp
inc
sbbb
xchg
cmpsb
pusha
jo
add
lods
add
sbb
or
fildl
in
aam
lret
dec
add
cld
fcompl
cmp
mov
cmp
add
xchg
cmp
call
pop
add
orb
add
pop
inc
jno
pop
lcall
add
mov
cmc
es
push
in
out
repz
test
xchg
test
loopne
pop
sub
jmp
cmp
cmp
loope
pop
icebp
mov
arpl
sahf
adc
adc
mov
sbb
add
mov
movb
shll
pop
or
or
rorl
clc
popf
dec
and
es
jne
pop
mov
mov
hlt
xor
nop
jecxz
mov
xchg
xchg
or
add
inc
testl
mov
inc
or
or
iret
push
loopne
pop
jl
outsb
inc
in
mov
fadds
loope
sub
mov
and
cmpsb
mov
mov
scas
or
cmp
jle,pn
sub
lret
xorb
sbb
add
stos
in
cmovnp
mov
lret
xchg
shlb
xchg
push
mov
flds
insb
ja
mov
adc
fisubl
cmp
mov
add
mov
push
jmp
ds
fistps
jne
dec
xor
cmp
outsb
clc
out
adc
xchg
add
and
lock
loop
cmp
addb
mov
sub
xor
xor
and
mov
mov
dec
shrb
add
dec
mov
mov
jae
add
and
pop
dec
adc
or
shrb
xor
xchg
in
pop
push
enter
mov
orl
repnz
add
movsl
cmp
js
nop
jl
adc
adc
adc
add
mov
inc
xchg
or
into
add
jno
lret
dec
mov
pop
sub
xor
inc
adc
pop
xchg
and
dec
push
add
push
fwait
cld
int
lods
stc
dec
pusha
movsb
mov
or
xor
sbb
test
adc
inc
dec
fs
add
and
daa
sarl
mov
or
dec
add
ljmp
test
rolb
jp
fs
sub
sbb
mov
stc
and
mov
xor
roll
inc
es
mov
pushf
fadds
xchg
cmpsb
inc
adcb
xor
push
add
popf
das
sbb
outsl
cmpsb
pop
add
test
add
cmp
jle
subb
push
pop
add
pop
out
arpl
xlat
loop
rolb
jo
mov
loopne,pt
or
sbb
loopne
pop
pushf
add
or
push
sahf
lods
hlt
in
imul
or
jle
adc
rorl
or
jp
scas
icebp
lods
dec
popa
mov
mov
pop
loopne
enter
inc
pop
mov
mov
shl
mov
add
shll
sub
daa
jmp
stos
mov
btc
push
cs
xor
add
mov
lock
enter
sbb
xor
mov
xor
mov
jg
into
scas
and
mov
das
add
outsb
jg
add
xlat
sub
jo
mov
sbb
in
sahf
pusha
dec
adc
or
mov
es
add
repnz
sbb
mov
enter
in
outsl
mov
out
les
or
rcrb
cmpsl
mov
adc
jne
cmp
lds
mov
outsb
xchg
je
je
add
pop
push
push
xchg
sub
rorl
outsl
cmp
add
sbb
adc
scas
addr16
xchg
sub
mov
test
sub
push
add
push
push
aaa
pop
mov
or
pusha
mov
or
rcrb
jp
add
add
sub
icebp
enter
popf
cmp
fwait
lahf
jno
lds
jns
xchg
mov
lea
or
jae
add
sbb
fnstsw
pop
inc
adc
dec
loope
xchg
cltd
add
call
cmp
add
pusha
add
xchg
lock
sahf
shll
jmp
orb
loope
mov
push
in
cmp
hlt
jno
inc
mov
cmp
cmp
sbb
mov
add
fdivrs
out
add
out
andl
add
iret
dec
add
xchg
aas
loopne
xor
cmp
mov
out
and
mov
or
lods
add
test
jo
adc
add
fnsave
pop
enter
je
les
call
mov
jle
mov
in
jecxz
mov
and
int
mov
pop
popa
jl
push
js
fiaddl
filds
mov
add
leave
mov
and
mov
pop
adc
jns
sti
andb
cmc
lret
stos
mov
add
and
int3
dec
and
pop
pusha
aaa
add
sub
roll
lea
inc
jle
iret
mov
sbb
push
pop
mov
add
and
mov
pop
xor
aad
add
arpl
xor
in
push
push
and
addr16
pop
popa
dec
push
inc
lods
push
out
add
les
je
add
out
jo
lea
or
rcrl
dec
flds
sub
in
imul
add
mov
fstl
add
jl
lods
push
and
dec
and
ljmp
or
add
jp
rcll
daa
adc
out
add
mov
mov
jne
aam
mov
repz
push
pop
sbb
or
dec
loopne
jg
xchg
fidivrs
add
or
out
pop
adc
sahf
sub
add
mov
dec
and
push
add
outsb
and
mov
mov
test
push
dec
mov
mov
sub
in
into
dec
gs
add
mov
adc
adc
cld
mov
jo
add
lea
lret
in
stc
into
or
fidivl
mov
inc
lret
mov
dec
add
je
cmp
xchg
sarb
sbb
lret
push
outsl
push
sbb
jns
sub
sbb
into
repz
shlb
add
xor
xorl
mov
fcmovnb
xor
scas
mov
add
mov
fcoms
dec
dec
add
rcrb
int3
cmp
mov
jns
enter
xor
push
dec
aaa
pusha
sbb
js
add
sbbl
jge
push
dec
cmp
ja
ret
xchg
mov
add
push
cld
aaa
sbb
mov
dec
je
xchg
add
sarb
popa
cmp
jbe
lea
out
adc
add
inc
xor
stc
shrl
es
cmp
flds
push
fists
not
and
sbb
jecxz
cmpb
mov
mov
mov
xor
push
sbb
push
mov
test
loope
lods
adcb
cld
cmp
ret
or
mov
test
sahf
int3
pop
add
fidivrl
pop
mov
inc
mov
pushf
sarl
icebp
rol
push
pop
push
out
sub
or
in
call
inc
lods
push
adc
sbb
push
add
sarb
mov
xor
pop
xchg
add
xor
lea
lds
pusha
ljmp
sbb
les
mov
dec
bound
pushf
sbb
and
cwtl
cmpl
inc
call
jmp
ja
dec
add
sub
sti
pop
and
cli
pop
dec
hlt
lods
nop
add
test
subb
dec
push
les
repz
xchg
push
iret
pop
adc
push
or
decl
add
adc
and
je
cmp
jle
add
filds
inc
adc
sbb
in
je
mov
inc
sbb
test
mov
fmull
fwait
push
pop
aam
xor
mov
jno
adc
add
add
push
and
add
jo
mov
add
mov
push
cld
cli
mov
loop
hlt
xchg
push
cmpsb
leave
push
sbb
adc
xchg
add
jp
sub
test
fdivp
xor
jge
mov
gs
push
vfrczps
loop
jne
cmp
mov
std
fwait
push
mov
push
fsubrs
icebp
incb
popf
clc
sbb
xor
push
enter
mov
xor
xchg
dec
push
fcomp
rol
sub
ja
add
call
add
stos
dec
jae
mov
add
gs
cli
add
nop
push
test
push
and
test
add
adc
sbb
aam
add
pop
dec
sub
or
cmpsl
pop
pop
loop,pn
add
push
cld
lahf
mov
push
stc
or
and
sub
scas
unpckhps
xchg
das
push
or
cld
or
xor
push
out
dec
lahf
push
sub
lock
vandps
and
cmpsb
push
cli
sbb
shrb
aas
add
sub
sbb
add
xchg
push
call
mov
cmpsb
in
adc
or
mov
mov
pusha
add
xchg
pop
push
add
mov
jmp
ds
pop
lds
addb
lock
rcrb
cmp
popa
add
aam
inc
inc
xor
add
insb
enter
add
pop
cmpsb
push
add
test
mov
cmc
aas
cli
iret
push
and
pop
sbb
or
fwait
pop
sbb
dec
into
adc
dec
xchg
push
xchg
xlat
or
jne
xor
fistl
or
add
subps
out
add
mov
adc
xchg
adc
mov
fwait
shrb
imul
mov
loope
nop
fwait
lahf
cmp
inc
subb
push
mov
inc
add
ljmp
add
and
in
sbb
test
loop
sbb
lret
adc
hlt
sbb
adc
or
adc
out
dec
cmp
adc
jo
clc
cmp
xlat
inc
add
jmp
add
aas
and
pop
cmp
ret
sarl
add
cmp
xchg
popa
out
jg
cmp
inc
add
lcall
pop
movsb
jmp
jecxz
add
sbbb
imul
addr16
add
int
mov
jbe
dec
dec
fdivrs
sbb
inc
dec
clc
out
ret
cli
xor
xchg
adc
sub
shl
jle
into
inc
out
sub
inc
push
pop
mov
enter
les
lock
cmp
push
call
movsb
lock
in
mov
add
loope
inc
push
ljmp
pop
test
mov
sti
sub
cld
clc
int3
adc
ds
enter
xchg
mov
jecxz
sbb
add
mov
add
mov
inc
sbb
xchg
sti
mov
push
out
push
sub
cmp
push
cmp
adcb
andb
fiaddl
ljmp
pop
dec
enter
push
jns
xchg
add
adc
adc
add
cmpsb
pop
js
pop
sub
and
out
call
add
inc
add
loopne
cs
sbb
add
mov
and
add
lahf
pop
pop
jecxz
cmp
jbe
or
js
add
inc
dec
or
sub
mov
xlat
movl
test
xor
jg
xchg
pop
mov
fs
sti
int3
ds
cmp
dec
add
mov
sar
sub
add
das
mov
add
loopne
adcl
push
outsl
scas
adc
add
mov
popa
pop
or
cvtps2pd
cmp
mov
push
jno
add
scas
lods
jle
iret
dec
dec
add
push
jp
cmp
repnz
rolb
into
adc
pop
call
test
push
test
scas
mov
pop
daa
loopne
sti
testb
xor
dec
xor
lock
mov
cltd
popf
add
xchg
adc
sbb
and
data16
aam
or
jns
xchg
push
mov
xor
sub
add
cltd
int3
pop
jecxz
mov
cmp
daa
xacquire
mov
popa
dec
adc
or
and
xchg
adc
jmp
lds
mov
add
aam
mov
mov
fisubrs
and
adc
movb
call
xor
add
outsb
add
jge
subb
ret
sub
rcr
aaa
mov
xorb
add
es
clc
xor
sub
lods
add
inc
xchg
pusha
sbb
and
push
add
hlt
or
add
sahf
cmp
inc
fsubs
jne
sbb
sub
sarl
loopne
aaa
std
andl
sbb
jo
daa
add
cmp
push
fimull
into
fidivrs
ds
lcall
int3
push
and
add
sub
pusha
pushf
dec
pop
xchg
mov
es
into
mov
scas
cmpsl
push
inc
add
aaa
aad
add
insl
jmp
cmp
push
dec
push
fadds
pop
into
fbld
or
roll
xchg
hlt
add
mov
mov
jl
movsl
sbb
rorb
cmp
mov
mov
inc
in
sub
push
or
jae
frndint
lcall
test
sbb
fisubs
lret
lods
lcall
or
dec
push
xchg
add
loopne
or
test
add
push
adc
incl
add
pop
aas
mov
into
pop
lret
loopne
add
loop
lods
mov
cli
sub
int
xor
pusha
mov
mov
jmp
mov
orb
clc
push
pop
sbb
mov
shll
adc
test
jno
or
movsb
mov
mov
in
lock
sbbl
clc
sti
xor
dec
mov
adc
jmp
bound
or
fmul
data16
push
jne
pop
mov
xchg
or
mov
adc
dec
add
out
ret
add
addb
xchg
adc
add
lock
out
pop
inc
jp
add
xchg
jg
jo
add
adc
add
add
sti
dec
mov
push
jge
mov
fs
imul
or
add
shll
jno
xchg
add
pop
or
pop
dec
add
lds
xchg
inc
and
shrl
add
test
clc
adc
cltd
add
pop
std
subb
out
and
cmp
lahf
adc
add
shlb
mull
dec
add
std
cmovp
nop
pop
rcl
cld
in
mov
cmpsb
xchg
adc
jecxz
mov
ss
and
push
lods
in
add
bound
and
add
cs
loopne
adc
jnp
int
dec
add
dec
js
add
in
or
inc
add
aad
lret
add
je
repnz
insl
inc
iret
cmp
adc
sbb
rorb
or
jecxz
xchg
fisttps
add
push
iret
pop
rol
sar
out
js
jo
movsl
mov
jle
loope
ret
shlb
push
loopne
repz
add
inc
nop
sbb
call
loope
jge
incl
bound
bswap
and
scas
add
push
xlat
push
fildl
into
push
mov
push
je
sbb
stos
pushf
lock
push
dec
pusha
cwtl
inc
inc
cs
push
ja
xor
ss
ret
sbb
jo
add
add
inc
cmc
and
jg
add
push
std
dec
cmpsb
ljmp
ret
jno
inc
movsl
fcoms
add
inc
mov
sub
push
sub
add
push
cmp
or
outsb
nop
add
push
fs
arpl
cmp
pop
adc
hlt
notb
add
push
sbb
pop
mov
pop
xchg
les
sub
pop
sub
inc
inc
sti
clc
cld
sbb
mov
mov
cmp
add
inc
mov
mov
fisttpl
jae
cwtl
out
push
pop
mov
mov
stos
adc
test
cld
nop
les
inc
gs
xor
cs
loope
dec
fcmovb
push
cmpsb
pop
mov
jno
int3
mov
mov
addb
addr16
jmp
add
pop
mov
and
insb
cltd
je
xchg
add
jns
inc
int3
lods
testl
xor
repz
dec
in
inc
and
xchg
xchg
pop
insl
mov
mov
pop
or
icebp
cmp
test
add
xchg
sbb
jmp
add
push
dec
inc
push
xchg
iret
or
aas
and
mov
xchg
sbb
push
pop
in
add
stos
jno
pop
push
cli
add
loop
out
mov
test
inc
mov
cld
fsubrp
sarl
dec
sbb
fnsave
push
sahf
subl
jb
lahf
lret
addl
shrb
add
test
mov
add
loope
bound
in
gs
lock
flds
push
or
loopne
dec
add
push
out
stos
mov
testb
scas
sub
xor
jno
xchg
cs
fcomi
xchg
or
add
mov
pop
jg
jb
mov
jmp
fcomps
mov
push
mov
cmc
loopne
shll
aas
sahf
add
mov
ja
cmpl
lahf
mov
mov
mov
in
and
sbb
adc
stos
mov
inc
mov
cli
add
adc
leave
inc
lods
and
xchg
enter
lods
pusha
js
push
insb
ds
dec
add
sub
out
push
inc
add
adc
jmp
jnp
add
xchg
fcoms
insl
dec
push
adc
div
fstps
xor
mov
add
inc
cmpsb
lcall
adc
fwait
mov
or
mov
popl
stos
cmp
mov
lock
cmpsb
add
fnstsw
std
pop
bound
mov
imul
jecxz
add
sub
inc
jl
inc
lea
add
loop
nop
aad
push
sahf
add
pop
pop
pop
imul
jnp
rorb
loop
popf
cwtl
add
out
out
add
sub
cmp
add
das
xor
add
test
adc
add
lock
sub
mov
shlb
push
bound
incb
sub
xor
cmpsb
inc
dec
fisttpll
push
add
xchg
addw
add
mov
add
faddl
xor
test
in
fisttpl
arpl
filds
add
lds
cld
loopne
add
cli
xor
jns
pop
das
pop
adc
std
cmpsl
aaa
adc
jle
lods
add
mov
outsb
shll
mov
fwait
aad
js
pop
call
mov
mov
sub
lock
out
cmp
adc
jecxz
jo
popf
push
jge
fs
clc
jo
es
adcb
cmp
stc
mov
cmp
rcrl
outsb
and
lock
push
dec
pop
daa
mov
mov
adc
xchg
loop
hlt
sbbb
add
pop
int
mov
push
out
or
jns
and
inc
add
cmpsb
push
jg
movups
iret
loopne
fucomp
add
imul
jo
adcl
push
pop
jnp
fstps
sbb
pop
jge
cli
in
add
aaa
int
or
ds
popf
cmp
xchg
xor
sub
dec
jecxz
mov
rorb
sbb
iret
mov
ljmp
repz
adc
mov
cmc
icebp
cmpsb
roll
addr16
xchg
in
jae
add
dec
jne
mov
bound
add
inc
sub
bound
add
inc
outsl
push
add
sbb
sub
int3
cs
lahf
mov
adc
into
inc
out
test
aad
int
and
pop
cmpl
pusha
add
dec
test
and
mov
mov
add
lcall
jmp
and
ret
lock
or
aam
faddl
cmp
cld
and
inc
popa
mov
inc
dec
mov
dec
pop
xor
pop
es
leave
ds
loope
sub
cmpl
add
mov
push
push
mov
adc
ficoms
mov
ljmp
popf
xchg
add
sar
inc
inc
call
fdivs
push
sub
cltd
dec
test
mov
mov
push
push
dec
lahf
pop
sub
addps
push
gs
jmp
roll
in
mov
cmpsb
jg
adc
fdivrs
scas
fistpll
and
add
push
dec
add
fidivl
testl
pop
sbb
icebp
push
addb
test
cli
add
jl
inc
pop
add
test
out
das
fstpl
rclb
cmpsb
cmp
fists
mov
enter
rcrl
gs
and
pop
adc
fsubl
call
add
dec
fdivs
or
movsb
in
lods
mov
inc
add
std
cmpsl
out
add
xor
sbb
lods
rolb
divl
test
add
fbstp
scas
nop
add
or
jle
xor
dec
push
adc
aad
les
lods
sbb
int3
mov
popa
jns
cmp
pop
xchg
adc
adc
cmc
add
inc
call
outsl
or
add
pop
mov
lcall
xor
or
xor
add
inc
sbb
ret
sub
jle
fwait
inc
aaa
add
popf
mov
hlt
bound
cmpsb
dec
xor
insb
add
pop
loop
repz
aad
loopne
clc
add
dec
add
in
pop
jbe
nop
push
pop
cwtl
rolb
push
push
aaa
inc
xchg
pop
and
sahf
dec
arpl
and
pop
pushf
clc
inc
pop
add
inc
daa
imul
sub
mov
push
notb
lock
jo
sbb
sbb
mov
jg
add
pop
sub
ds
add
nop
jns
add
je
out
insl
call
adc
pop
pop
sarb
cmpb
xchg
mov
lret
inc
in
cltd
mov
mov
sub
add
cmp
les
or
scas
iret
repz
mov
icebp
pop
cmp
sbb
repnz
lahf
mov
es
mov
jne
pop
or
sbb
add
sbb
out
in
add
subl
insb
dec
test
test
imul
add
ds
jnp
popa
lret
pop
call
adc
loopne
inc
jg
es
hlt
adc
fldl
mov
rcrb
or
cli
in
pusha
sbb
inc
jp
inc
or
lea
or
mov
in
addl
ja
andl
cmp
push
lahf
rcll
add
test
push
add
sub
daa
jge
ret
shrb
adc
cmc
add
ja
jmp
lcall
or
cmp
push
adc
sub
mov
or
xor
inc
int3
sbb
in
fldz
orl
sahf
scas
or
insb
xchg
mov
clc
and
sub
loop
lods
push
clc
stos
rorb
sbb
movl
pop
jp
cmp
mov
cs
xor
adcb
xor
insb
push
pusha
fdivl
cmp
mov
orb
and
fistpl
add
cmpsb
inc
add
ss
popa
sbb
xchg
fidivl
rorl
sahf
aaa
std
mov
inc
jecxz
xchg
and
push
adc
push
daa
shrl
xorl
faddl
mov
sub
add
mov
dec
mov
aam
add
cmp
repnz
or
inc
pop
push
xchg
sbb
mov
add
xchg
adc
pop
testb
sbb
add
xchg
add
xchg
xorl
mov
popf
pop
add
stc
call
cltd
or
sbb
xchg
cli
mov
pusha
add
inc
push
mov
das
mov
xor
add
loop
and
mov
xor
dec
ja
pop
and
ret
in
lock
mov
call
xchg
adc
xchg
adc
stos
cmp
cmpsl
xchg
cmp
inc
xor
cmp
mov
lret
jae
arpl
pusha
imul
sti
xor
xchg
pop
fdiv
shrb
push
push
lods
fbstp
pop
add
mov
fwait
cmp
and
mov
in
dec
out
cwtl
pop
divl
dec
in
add
dec
xchg
jmp
dec
xchg
adc
scas
xchg
call
cmp
push
push
jns
ss
jo
lods
mov
dec
mov
add
loopne
push
cmp
jne
push
push
add
js
pop
add
jo
popa
jne
pop
rolb
xlat
or
jbe
pop
loop
mov
and
and
inc
ret
aaa
mov
add
push
fwait
push
call
push
adc
or
sbb
xacquire
shlb
adc
jecxz
lock
sbbl
push
repnz
test
inc
xor
jb
inc
shll
orb
les
or
add
sbbb
lods
add
mov
push
shl
movsl
add
lcall
and
dec
or
cli
pop
xor
add
scas
pop
add
xchg
lret
cmp
dec
lods
iret
add
lret
push
fidivs
mov
xlat
rolb
push
xor
adc
xchg
and
pushf
xor
xor
add
jl
sub
fwait
jl
dec
das
xchg
pusha
jae
aas
or
icebp
jle
movl
lret
adc
addb
dec
push
add
push
jl
rorl
mov
mov
lods
aam
and
add
xor
and
push
mov
push
sub
sub
cmp
pop
mov
clc
and
pop
push
fldt
xchg
enter
sbb
sahf
lods
add
lea
out
cltd
add
sub
and
lret
test
pop
pop
mov
pop
inc
xor
push
pop
mov
add
cmp
jb
add
iret
enter
enter
xchg
or
mov
mov
add
push
in
pop
jnp
jns
xor
sub
sahf
cmp
jge
daa
push
mov
adc
xor
pop
dec
jmp
lds
dec
call
ss
adc
add
jnp
popf
cmpb
sbb
daa
lods
add
push
sahf
subb
sbb
sub
adc
faddl
cmp
test
xchg
test
outsl
fidivrs
aam
sub
cmp
sub
scas
jp
pop
data16
iret
mov
dec
das
mov
and
jo
add
addr16
sub
jecxz
dec
jp
cmpb
ljmp
add
out
clc
mov
adc
dec
inc
xlat
jge
scas
and
push
add
mov
sbb
pushf
add
mov
add
inc
dec
mov
cmp
std
sbbb
push
add
lret
adc
andb
movsl
jge
pop
push
pop
pop
push
cli
loope
hlt
pushf
imulb
pop
sub
add
xor
sbb
jmp
ja
pop
adc
mov
add
nop
add
mov
je
js
add
sbb
dec
or
subb
scas
dec
sbb
sbbb
orb
mov
cmp
inc
inc
push
icebp
aam
jb
add
mov
and
or
arpl
pop
mov
movsl
sbb
int3
jo
imul
dec
cwtl
loopne,pt
xchg
mov
dec
adc
pop
ret
test
push
push
pop
loopne
pop
int3
out
mov
xor
jns
jg
lahf
add
dec
into
in
mov
lock
enter
add
cli
hlt
jno
ror
pop
dec
pusha
add
sub
xor
jne
jp
aam
je
jns
or
mov
cwtl
add
bound
or
push
shrl
jo
loopne
sti
jnp
inc
mov
sbb
xor
xchg
decl
mov
lock
stc
in
lock
add
lcall
mov
push
cltd
pop
cmp
call
addr16
sbb
jg
push
les
pop
pop
fwait
and
dec
call
push
into
cwtl
pop
jg
sbb
sahf
jae
je
or
jge
pop
stos
pushf
mov
mov
pusha
outsl
ss
dec
adc
add
sub
mov
sbb
sarb
inc
push
xorb
shlb
jp
addr16
pop
sbb
and
std
cmc
daa
loopne
rolb
inc
cld
sahf
pop
neg
addr16
lock
ret
add
xchg
cmp
fld
aas
ror
icebp
adcl
fsts
inc
cmp
or
test
frstor
rolb
mov
test
add
adc
jae
pusha
adc
sbb
movsl
in
pop
ds
in
add
inc
pop
xchg
pusha
lret
add
push
les
jecxz
addr16
inc
mov
add
jne
ss
clc
bound
or
pop
push
jg
inc
or
add
aaa
add
lds
add
stc
pop
push
jp
jg
add
clc
xchg
add
cmp
sbbb
sbb
mov
pop
or
mov
add
int3
dec
out
adc
add
out
pop
clc
add
xchg
arpl
pusha
bound
pop
jae
adc
mov
stos
imul
xchg
fstps
addl
sarl
xor
in
test
xchg
or
shll
push
negl
sub
pop
popf
sbb
cmp
sub
and
cmp
xor
daa
push
inc
or
push
fisttpl
cmp
mov
pop
mov
add
popa
mov
xchg
std
sub
push
pop
jnp
mov
cmp
push
orb
xor
mov
jmp
imul
jecxz
ret
and
test
pop
push
and
test
mov
cmpsb
adc
pusha
inc
cmp
loop
hlt
mov
pop
push
cld
mov
xchg
cmp
and
pop
loop
mov
cmp
cmp
mov
popa
and
mov
pushf
xor
add
lock
loope
and
add
jmp
add
loopne
mov
mov
add
cmpsb
imul
cmp
adc
inc
push
push
jle
xchg
into
adc
xchg
sbb
dec
mov
loop
rol
jae
pop
aaa
cmpsl
sub
subl
xor
dec
sbb
jge
xchg
push
and
and
sub
xor
scas
mov
mov
jecxz
ljmp
push
and
and
add
enter
stos
loopne
add
inc
test
in
lods
into
xchg
and
dec
pop
mov
pop
xchg
mov
dec
adc
jne
sub
mov
mov
and
and
dec
and
cmp
fildll
cmp
test
mov
mov
inc
pusha
xor
mov
cmpsb
icebp
and
mov
cmp
push
push
imul
mov
insb
and
or
sub
daa
pushf
inc
nop
and
mov
mov
adc
add
jo
test
and
push
nop
sbb
dec
add
push
ret
push
mov
mov
lds
jb
sub
sub
mov
subl
dec
rcll
pop
xchg
rorl
loope
fiadds
scas
cmpsb
mov
aaa
or
mov
out
mov
daa
fs
and
mov
sub
stos
adc
push
shlb
push
scas
sub
push
les
dec
sbb
push
rcll
out
add
js
and
inc
mov
out
mov
or
push
pop
sub
fisttpll
jle
add
inc
das
xor
xchg
test
add
dec
data16
mov
add
insl
addb
test
icebp
mov
lcall
das
xlat
pop
sbb
pop
inc
xor
test
and
mov
dec
or
mov
cwtl
or
call
dec
aam
sbb
xchg
and
inc
adcl
fidivrs
dec
xchg
mov
ret
add
les
or
cmp
xor
sbb
mov
xor
mov
add
push
dec
or
push
cmp
or
fwait
push
mov
out
cmpsl
in
dec
rcrl
aas
lock
sub
xchg
dec
mov
in
je
insb
out
cmpl
aaa
incb
push
sti
aas
add
cs
std
daa
sbb
pusha
rclb
and
xor
cmpsl
pop
out
mov
inc
ljmp
and
nop
cmp
mov
inc
int3
adc
mov
sbbb
add
mov
xor
bound
jbe
test
add
sub
cmp
insb
int
fldl
faddl
cmp
and
mov
in
sub
mov
mov
dec
mov
jle
sbb
dec
sub
sub
das
test
pop
adc
insb
sbb
ret
aad
popa
js
adc
or
cltd
push
push
inc
or
mov
dec
rcrl
adc
or
imul
or
mov
mov
inc
jp
or
imul
xor
mov
and
mov
adc
pusha
add
daa
call
jl
in
and
or
mov
nop
cld
inc
inc
and
rorb
orb
mov
js
popa
mov
ret
fwait
mov
or
push
jae
inc
data16
enter
mov
mov
cld
pop
xchg
sub
jl
test
nop
imul
dec
das
test
ss
aam
or
mov
inc
inc
fmul
fildll
mov
add
adc
decb
mov
mov
das
lods
add
pop
or
push
les
mov
adc
and
sbb
mov
into
adc
sub
sahf
pop
mov
in
add
add
push
cmp
clc
sbb
or
xchg
pushf
shrb
adc
inc
enter
dec
es
sbb
mov
cs
lahf
jne
es
jae
or
mov
push
mov
push
dec
inc
xor
pushf
ss
inc
and
add
jp
adc
sub
pop
fs
dec
jne
or
aad
push
fisttps
outsl
test
xchg
pusha
int3
dec
daa
pop
mov
and
nop
or
xchg
xchg
test
or
fcoml
or
pop
push
imul
mov
enter
cmp
daa
mov
test
addr16
stc
mov
test
js
ljmp
adc
or
cltd
add
add
loop
movsb
xchg
pushf
pop
push
cmpsb
cltd
in
popa
cwtl
add
dec
sbb
jbe,pn
dec
inc
outsb
dec
jg
push
mov
mov
pop
mov
dec
loopne
cs
inc
int3
xor
jmp
pop
or
xor
mov
cwtl
cmp
cwtl
stos
subl
cwtl
rolb
and
push
mov
hlt
add
or
sbb
push
es
dec
or
mov
xchg
popf
lods
lock
add
mov
daa
or
xor
rclb
pop
das
andb
inc
icebp
dec
cmp
and
xor
dec
adc
xchg
mov
pusha
pop
xor
cmp
mov
mov
movsl
pop
in
cmp
fdivl
inc
into
sub
mov
or
mov
mov
test
filds
test
push
and
inc
push
jle
mov
pop
or
inc
or
daa
lds
mov
adc
nop
mov
adc
sbbb
mov
sbb
mov
inc
or
pushf
fidivl
mov
adc
push
mov
inc
xor
mov
shlb
mov
jmp
sahf
ljmp
test
inc
mov
xchg
hlt
je
sarl
scas
imul
call
in
add
pop
adcb
or
add
mov
in
dec
mov
add
or
sbb
lcall
mov
rorl
mov
fdivs
sub
int3
add
cld
sarl
xor
je
mov
inc
mov
fdivrp
cmp
bound
add
loop
aam
and
dec
fadds
aaa
push
das
inc
dec
xor
dec
fsubl
lods
pop
and
and
mov
fnsave
das
pop
imul
dec
push
cli
rol
daa
dec
mov
adc
movsl
dec
dec
adc
add
mov
jns
dec
ja
je
mov
lock
push
addr16
xor
xchg
test
dec
or
and
mov
and
pop
test
xchg
cmp
and
adc
dec
lock
pop
push
and
mov
subb
xor
jge
imul
out
pop
sbb
pop
mov
clc
push
les
cmpsb
and
inc
das
pop
fcoms
dec
adcl
push
imul
push
rcrb
adc
add
xchg
add
and
push
add
add
aam
aaa
orl
xor
shrl
les
sub
lods
push
mov
add
in
inc
enter
icebp
adc
dec
movsl
and
sbb
mov
nop
or
xor
and
dec
xor
pop
jge
in
adc
mull
sbb
popf
or
adc
testb
mov
add
lahf
xor
sbb
pop
out
xchg
addl
icebp
test
icebp
add
mov
lods
and
loopne
add
inc
lock
js
mov
fbld
popa
cmp
add
icebp
gs
hlt
lock
mov
nopl
push
push
push
or
mov
fldenv
pop
in
popf
inc
and
sbb
sahf
mov
fists
popf
add
mov
xchg
sbb
pusha
sub
sarb
dec
mov
add
pushf
icebp
lahf
aas
xchg
add
mov
xchg
cwtl
in
or
ljmp
pop
and
dec
push
orb
cwtl
inc
sub
movq
scas
pop
mov
jl
mov
mov
fadds
ljmp
pushf
andb
loop
enter
enter
add
or
lock
xchg
loopne
cmp
stc
or
jecxz
add
aam
or
roll
adc
push
into
push
loopne
inc
ficoms
dec
test
adcb
jne
add
pop
decl
aad
inc
js
addl
or
jmp
push
aam
add
push
dec
aas
dec
push
mov
add
mov
push
and
cmc
xchg
loopne
push
dec
xlat
dec
lcall
cwtl
add
xchg
test
sub
add
xor
xor
pop
scas
rcll
mov
inc
dec
and
test
sbbb
stos
push
jg
and
pop
pop
mov
mov
push
push
dec
test
mov
sbbb
xor
xchg
cld
add
cltd
adc
rcrl
pop
add
add
add
pop
mov
mov
stc
test
cmp
test
aam
or
addb
sub
adc
je
divb
lcall
mov
mov
jl
inc
cs
push
in
and
jecxz
popa
inc
push
mov
cwtl
dec
xchg
or
mov
push
xchg
push
loopne
inc
hlt
jne
and
mov
inc
out
cmp
addr16
jns
je
test
push
and
push
inc
sub
stos
dec
xchg
rorb
mov
xchg
xchg
push
pop
dec
es
shlb
cmp
bound
out
fadd
dec
push
loope
sub
movsb
loope
sbb
pop
mov
minps
add
and
xor
pop
into
sti
xchg
push
add
jecxz
mov
mov
and
pop
clc
lret
add
add
mov
push
outsb
aam
cmpsl
pop
cld
push
or
inc
gs
shlb
test
lret
shlb
xor
adc
movsb
mov
andb
xor
leave
shrb
mov
ret
test
jp
popa
psubw
xor
subl
sub
ret
rcr
aas
inc
jbe
dec
adc
add
outsl
nop
cmpsl
les
stc
std
and
xor
test
bound
imul
cmpsl
sbb
testl
mov
dec
repnz
add
xchg
jp
mov
fmul
or
sbbb
call
jb
mov
mov
add
fwait
stos
cwtl
mov
pop
sbb
and
test
ds
pop
push
add
testl
sub
data16
sbb
or
pop
adc
sbb
movsl
inc
mov
lret
adc
dec
xchg
cmp
add
mov
ss
fildl
cltd
jp
pop
xchg
outsb
push
lods
cli
ljmp
call
xchg
js
jns
dec
dec
push
mov
lret
push
test
shrb
jmp
lret
mov
push
test
popf
dec
or
or
sub
push
jnp
ds
jne
xchg
jg
add
repnz
add
sbb
pop
ljmp
jl
push
roll
xorb
add
dec
add
add
stos
jg
or
cmp
jae
pop
mov
dec
xchg
cmp
mov
cmpsl
fdivs
lods
dec
pop
popl
aam
adc
push
mov
lock
addr16
adc
mov
push
mov
je
jle
fdivrp
add
ds
add
push
add
test
mov
out
aad
or
rclb
repz
mov
xchg
xor
scas
cs
add
sbbl
out
subl
in
rcll
ret
xor
and
adc
daa
mov
sub
jno
xor
cmp
push
push
add
jp
or
in
and
dec
add
scas
pop
imul
hlt
fisubl
shrb
repnz
mov
adc
in
jae
loopne
xlat
mov
test
jge
loope
sub
test
add
jo
xor
mov
sahf
addr16
cwtl
push
jno
xorb
pop
insb
mov
roll
fwait
test
xor
fs
cmp
ss
mov
imul
in
ret
scas
cmp
push
or
add
add
sub
add
test
add
sub
sub
loop
sbb
sbb
lret
pop
pop
lret
push
push
push
and
arpl
push
cmp
out
dec
loop
test
test
mov
inc
adc
push
or
pusha
test
sub
add
adc
adc
add
sub
fs
sub
and
or
dec
adc
mov
and
and
jnp
and
mov
mov
daa
add
inc
nop
pop
hlt
pop
cli
xor
dec
pop
lea
sbb
shlb
jne
push
insb
mov
add
add
dec
imul
stc
inc
subl
repz
xor
mov
push
jge
shrb
inc
add
inc
mov
popf
insb
pop
pop
loope
out
lea
pop
repz
roll
mov
add
dec
das
and
xor
inc
ja
sahf
daa
inc
push
sub
dec
pop
cmp
ret
push
scas
dec
push
addb
mov
pop
xchg
push
sub
lret
push
push
xor
rol
xchg
mov
in
out
mov
lock
in
pusha
sub
cld
jmp
sbb
jb
sbbb
jae
loopne
add
mov
ljmp
in
push
loopne
cltd
arpl
adc
adc
xor
ret
mov
roll
lock
outsl
adc
push
das
dec
iret
sti
int3
push
add
sarl
aad
test
scas
jecxz
leave
ror
shll
lea
loopne
mov
cltd
and
fmuls
sub
pop
add
ss
sbb
outsl
mov
inc
aaa
clc
clc
xlat
xchg
cli
jp
loopne
repnz
mov
loope
fwait
into
jnp
testb
xchg
call
sub
daa
adc
add
ret
xor
or
add
sar
movsb
or
imul
ret
add
test
cmp
dec
add
out
jb
sbb
inc
std
mov
fsubs
insb
pusha
shl
es
cld
ljmp
jne
aas
xchg
mov
iret
xchg
push
sub
ret
dec
pop
add
and
xchg
nop
xor
daa
enter
push
hlt
or
adc
and
inc
push
xor
ja
mov
pop
mov
pop
add
xor
jle
mov
popa
mov
repz
jp
test
jo
and
pop
in
adc
std
xor
mov
mov
das
add
in
xor
arpl
daa
xchg
sub
test
rolb
add
pcmpeqd
push
enter
adc
mov
sbb
fwait
sub
enter
ljmp
cmp
or
or
jle,pn
jae
add
sub
leave
xchg
bound
mov
push
add
in
jbe
mov
cmc
sarb
sub
lcall
adc
testl
add
jbe
push
cmpsb
stc
inc
jmp
xchg
rorb
mov
cs
dec
xchg
outsl
or
pop
popf
into
cmp
decb
jae
pop
sbb
cmc
int
das
jb
dec
out
add
dec
stos
cwtl
mov
add
js
sub
add
mov
sbb
repz
mov
ret
ss
addr16
mov
das
fsub
mov
bound
add
pop
test
shll
shrb
jb
and
cmpsb
cmp
arpl
jo
add
add
push
into
jmp
and
leave
fwait
pop
mov
xor
sub
mov
add
push
std
sbb
cltd
loopne
mov
push
mov
jl
aaa
icebp
push
in
rorb
add
addr16
inc
gs
mov
add
jge
sbb
fsubl
sti
enter
lahf
je
ljmp
jmp
adc
icebp
and
or
movsl
sub
scas
scas
sbb
jmp
mov
stos
jg
dec
add
das
cmpsb
repz
push
insl
push
imul
xor
or
jns
imul
jo
fildll
cmp
add
icebp
sbb
and
pop
add
add
stos
dec
addl
sbb
inc
cld
add
inc
imul
jg
int
xchg
in
dec
repnz
jle
mov
loop
jae
push
lret
pop
mov
sahf
xchg
push
add
inc
xchg
jle
testl
dec
add
mov
xchg
lea
add
cmp
sbb
cmp
or
mov
or
in
add
arpl
popw
jne
loopne
out
ret
push
filds
std
mov
or
pop
loopne
push
iret
push
cmp
cmp
xchg
jle
mov
adc
lds
cmpsl
add
jp
add
mov
mov
add
xor
addb
mov
xchg
ds
pop
jne
in
repnz
and
mov
jl
add
hlt
shll
insb
adc
add
cmp
fidivl
adcb
sbb
je
push
fbld
stos
gs
aas
inc
jmp
add
inc
cltd
add
test
lret
sbb
add
add
xchg
jge
jg
xor
dec
in
mov
pusha
iret
pop
scas
cld
xchg
js
add
dec
sub
add
pusha
dec
icebp
jnp
cwtl
in
push
add
aam
xor
shll
shlb
add
cs
out
lods
subb
out
jb
push
cmp
adc
add
dec
icebp
in
aam
clc
or
sbb
jns
imul
aad
ljmp
add
mov
fs
push
scas
add
in
loop
jmp
aad
jns
pop
cmc
add
pop
shll
jnp
hlt
fbld
lds
fstps
mov
arpl
pop
mov
inc
push
sbb
rolb
shll
jnp
enter
jp
inc
xor
std
sbb
jne
ret
insl
push
imul
test
dec
sti
addb
imul
stos
or
incb
push
inc
mov
add
jns
int3
lcall
movsb
lea
nop
andb
pop
cmpsb
add
mov
cvtps2pi
clc
mov
mov
add
adc
mov
add
fnsave
incb
cmpsl
sti
dec
arpl
cmp
pop
cwtl
xchg
push
repnz
addr16
inc
add
es
icebp
stc
mov
and
inc
add
xor
xchg
call
cwtl
bound
test
adc
add
cli
std
add
test
jnp
lods
cld
push
sbb
andb
mov
pop
or
fmull
xchg
jge,pn
pop
jae
mov
iret
and
add
out
clc
cmpb
orl
test
push
lods
cld
addr16
add
insb
xorl
call
xor
add
fisubs
out
cmp
and
andb
push
les
jg
pop
xchg
and
jns
lahf
xlat
pop
cmp
add
add
mov
bound
push
fs
lods
hlt
repnz
add
mov
rolb
dec
push
cwtl
cs
add
nop
inc
int
test
js
or
xchg
rcrl
stos
jl
add
mov
adc
pushf
cmpsb
xchg
adc
call
sbb
bound
out
shlb
sub
xchg
test
sub
mov
cmpsb
sub
out
push
add
mov
frstor
orl
xor
popf
add
dec
inc
cmpb
js
imul
cli
add
leave
std
add
fs
ror
push
jge
out
add
inc
push
fistl
es
mov
idivb
add
xor
into
xchg
and
rcrb
or
cmp
loop
add
aad
xor
sbb
jecxz
jle
nop
push
jp
add
jns
outsl
sbb
mov
add
mov
xor
ds
xor
mov
std
add
aaa
adc
cmp
outsl
scas
shlb
stos
sbb
incl
pop
mov
pop
cmp
add
push
pushf
test
add
pusha
cltd
mov
clc
jp
ds
stos
fwait
lods
lea
pop
inc
push
mov
aam
cmp
fcomps
inc
aaa
repnz
xchg
add
mov
inc
mov
or
nop
repnz
xchg
fcmovne
je
jae
rcrl
push
mov
add
cwtl
cmp
mov
pop
sub
cmp
ja
lret
jo
inc
inc
xchg
push
lahf
adc
add
mov
add
dec
mov
sub
fstpl
sub
push
sti
inc
add
stos
add
and
mov
mov
mov
mov
shlb
aad
rolb
or
and
lea
mov
lret
pop
cmp
enter
popl
testb
int3
push
add
adc
cld
add
repz
cmpsl
shrb
lock
push
xchg
lods
dec
jmp
rolb
bound
sbb
mov
repz
jnp
push
inc
sar
mov
roll
mov
neg
dec
dec
fisubl
jge
lods
inc
enter
mov
dec
sbb
loopne
and
loopne
dec
les
adc
cs
ret
rcrb
adc
inc
pop
push
test
call
push
rorl
add
push
inc
popa
inc
loopne
ljmp
nop
dec
dec
cmp
add
sub
jne
add
mov
mov
jmp
nop
xor
jns
insb
lods
mul
rcrb
repz
into
sarb
mov
shlb
xchg
shlb
add
inc
xor
pop
push
sbb
add
push
xchg
xchg
push
sbb
inc
cmp
add
fdiv
or
inc
hlt
nop
mov
push
mov
mov
das
imul
test
int3
out
push
push
xor
push
cmp
dec
xor
mov
add
jbe
push
sub
fldl
dec
push
dec
cwtl
adc
add
cmp
and
pop
jmp
jge
movsl
rclb
jl
imul
in
mov
dec
stos
add
push
jbe
mov
add
xchg
adc
push
xorb
adc
push
xchg
add
in
pop
adc
js
hlt
and
into
pop
inc
ds
inc
fcoms
push
pop
jle
mov
fildl
cmp
xor
pop
push
pop
sub
mov
add
out
and
sbb
lds
add
mov
add
jb
inc
mov
inc
sub
mov
ret
je
add
aas
mov
jno
stos
sub
mov
mov
push
adc
inc
faddl
movsl
cltd
cmpsl
and
fwait
roll
and
pop
imul
or
push
bound
add
dec
sarb
sbb
xchg
and
inc
out
add
adc
xchg
addl
scas
xor
insl
outsl
add
lea
add
in
jnp
mov
and
mov
add
cmp
mov
pop
sahf
mov
cltd
fnstcw
data16
inc
iret
cmp
jmp
pop
mov
add
mov
sub
dec
inc
dec
add
xchg
xchg
rsm
xor
xchg
add
negb
add
mov
add
xchg
sahf
sbb
pop
call
or
push
adc
lds
mov
jecxz
lret
inc
xchg
lahf
fnstcw
and
or
add
fs
jg
mov
inc
jmp
mov
mov
jno
lods
les
loope
sub
xchg
mov
cld
mov
xor
jns
add
stos
pop
lcall
xchg
push
add
adc
cmp
out
jmp
mov
lret
and
adc
fs
test
es
sub
aas
mov
cmp
pusha
push
add
jae
mov
or
add
add
add
inc
out
nop
test
xor
or
inc
lret
aas
or
pusha
jns
imul
testl
faddl
roll
mov
inc
sbbb
or
xor
bound
xchg
addl
mov
cmpsb
adc
cmp
xchg
pcmpgtw
loope
cmp
stos
lret
test
xor
sbb
repz
mov
cmpsb
pop
pusha
bound
dec
adc
xorb
arpl
aaa
add
ljmp
outsb
adc
xchg
cli
add
movsb
xchg
and
cmpsb
faddl
loop
mov
pushf
jb
adc
add
cld
mov
xor
loopne
lahf
jmp
cmpxchg
xchg
daa
ljmp
or
sbb
sbb
repz
push
xor
pop
test
movsl
jnp
mov
add
enter
pushf
push
lcall
add
add
mov
aaa
in
sarb
mov
jns
adc
in
pop
cmp
rorb
or
addl
test
add
jnp
pusha
add
in
mov
lcall
mov
inc
inc
pop
dec
bound
mov
mov
sub
mov
add
mov
loopne
test
pop
loopne
mull
stos
cli
push
push
inc
das
pop
lahf
jo
ljmp
jp
add
and
or
repnz
adc
xor
sti
int
jmp
xchg
movsb
add
out
in
add
repz
sbb
dec
adc
inc
wbinvd
mov
add
pop
xor
mov
loopne
and
repnz
add
popa
jno
adc
cmpsb
fstp
fidivrl
add
push
test
xor
sub
lods
shlb
and
add
movsl
aaa
mov
jns
or
fs
addr16
sbb
orl
cld
in
xor
add
mov
movsb
sub
testb
loope
lahf
sub
in
push
stc
shrl
in
repz
jp
lock
out
pop
lock
mov
jecxz
in
xrelease
into
sbb
pop
mov
aad
in
xor
dec
cmpsb
in
xor
popf
loopne
ds
adc
addb
stc
cmc
dec
add
jnp
cmpl
add
mov
mov
mov
add
inc
xor
add
mov
adc
sbb
addl
fadds
sub
xchg
rsm
or
sbb
add
mov
test
jl
add
lea
or
add
sbb
clc
dec
movsb
decl
add
int3
hlt
push
add
insb
push
out
xchg
int
mov
add
jnp
ss
test
add
out
imul
sub
add
push
je
cmp
add
dec
aaa
adc
shlb
mov
sbb
mov
pop
cmovo
icebp
jbe
add
pop
xchg
daa
xchg
add
das
xchg
stos
adc
popl
jg
mov
iret
xor
xor
stos
in
add
bound
icebp
mov
and
jne
mov
or
cmp
enter
fsubs
pop
xor
or
or
mov
orb
jnp
movsl
stos
sbb
test
adc
pop
clc
cmpsl
aaa
les
outsl
inc
mov
add
fisubl
std
push
add
and
xchg
xor
pop
xor
shlb
mov
cs
mov
cwtl
test
roll
xchg
ljmp
dec
pop
xor
std
ret
sarb
inc
mov
pop
sub
and
and
push
add
and
dec
sub
add
int3
shll
stos
shlb
xor
std
add
cmc
daa
adc
dec
or
arpl
stc
jne
int
lock
rcrl
jno
add
aaa
mov
mov
mov
outsb
fisubrs
or
sbb
push
pop
imul
add
enter
aam
inc
lock
dec
add
xchg
mov
mov
sbb
dec
es
xchg
dec
shlb
jnp
scas
add
mov
xchg
sub
push
add
pop
jnp
sarl
insl
adc
fcom
sti
cmc
test
push
add
daa
or
loopne
adc
jecxz
add
aad
ss
xor
mov
lods
daa
clc
mov
insl
xor
jg
add
pop
sub
mov
jge
cwtl
push
mov
jg
repnz
es
dec
cmp
test
push
pop
cmp
xchg
inc
loopne
in
mov
sti
aam
xchg
dec
and
inc
aam
pop
or
int
imul
mov
shlb
lods
adc
es
dec
add
cld
mov
scas
icebp
in
pop
mov
push
add
mov
cld
add
test
mov
lret
sbb
add
cmp
fimull
mov
xchg
outsl
sbb
outsb
shlb
mov
repz
xor
adc
nop
dec
push
sbb
repnz
sbb
iret
sarl
add
mov
jecxz
int
jnp
xor
test
ds
sbb
adc
push
add
xor
enter
push
rclb
add
pusha
add
js
das
add
out
insl
jae
je
add
ljmp
add
fs
gs
rorb
je
pop
inc
idivl
cmp
inc
adc
imul
xor
add
testl
cs
add
bound
sub
ret
dec
psubb
loope
add
movsl
mov
shl
sbb
ljmp
or
jmp
int
aaa
fadd
add
dec
sub
inc
clc
or
mov
jne
add
rcrb
push
sbb
loopne
movsb
out
pop
outsb
js
add
data16
cmpsl
cmpl
out
dec
das
fs
jecxz
jae
aaa
xor
sub
int3
lahf
test
cmp
ljmp
repnz
je
mov
fwait
mov
cmpsb
stos
or
scas
push
jle
mov
clc
outsb
add
mull
jo
out
dec
call
pop
out
rcr
ljmp
mov
xchg
and
cmp
repz
lock
mov
sti
push
movsb
add
pop
arpl
fistl
jne
add
rclb
push
and
sub
cmpsl
cwtl
cmpsb
nop
mov
sbb
mov
xchg
inc
mov
jp
cli
and
stos
dec
jne
mov
cwtl
loop
add
ret
xor
sarb
push
xchg
or
mov
rcl
lea
inc
lods
ds
loopne
sbb
inc
cmp
sbb
int3
add
jns
fs
xor
pop
push
and
add
outsb
pushf
cmpsb
or
ds
mov
and
xor
sbb
or
sbb
movsb
sub
jge
push
lock
iret
test
ret
mov
add
lret
add
xchg
pop
and
add
adc
movsl
fidivrl
or
dec
cmp
fnsave
and
xchg
sbb
adc
sbb
jmp
movsl
xor
mov
movsb
xor
xchg
adc
stc
bound
xor
sbb
js
cltd
jae
mov
xor
pop
jne
adc
das
in
pop
shlb
inc
in
je
sarb
inc
movsl
cltd
aam
add
hlt
xchg
add
aaa
test
add
push
push
cmp
dec
mov
jb
sbb
dec
pop
push
xchg
dec
subl
stos
xchg
and
je
jno
icebp
xor
test
sub
leave
mov
push
push
sahf
imul
cmp
mov
push
stos
adc
in
sbb
adc
scas
xor
mov
or
add
int3
mov
jp
test
add
xchg
jg
sbb
pop
pusha
ret
jae
mov
add
sbb
add
scas
arpl
adc
loope
add
push
jb
xchg
stos
push
test
xlat
adc
fadds
mov
stos
dec
inc
adcb
cld
add
mov
pop
add
dec
adc
lock
sti
mov
mov
dec
jmp
out
xchg
into
and
mov
fidivrl
stos
aas
adc
fstpl
add
pusha
add
pop
in
push
inc
aam
gs
add
fstp
xorb
adc
fiaddl
fs
sub
cmp
negl
aam
andl
xchg
pushf
pop
pop
and
or
fsts
je
rol
pop
mov
xor
mov
orl
cmp
js
pop
mov
scas
xorl
pushf
add
ds
mov
sub
xchg
bound
jmp
mov
jo
stc
pop
cmpsl
push
mov
shl
or
or
pop
arpl
in
adc
adc
enter
mov
aad
orl
add
jl
aas
incl
jnp
push
nop
mov
mov
fldcw
mov
aaa
sub
adc
add
jp
mov
and
mov
test
inc
sahf
std
out
add
mov
les
lds
ljmp
xchg
lahf
pusha
rolb
add
mov
mov
andl
cmpb
jnp
sbb
xlat
add
in
mov
cs
push
aad
cwtl
add
push
cmp
xor
xor
int
adc
divb
add
popa
cmp
cwtl
dec
xor
push
xor
lock
lock
jns
xlat
or
add
mov
test
sahf
ja
sub
push
sbb
es
test
adc
inc
cmp
into
cmp
sbb
add
insl
aas
sbb
mov
xchg
loopne
js
lea
mov
loope
xor
cwtl
jmp
test
jnp
add
adcl
cmpsb
fwait
mov
in
add
push
cmpsl
adc
xor
addb
mov
or
inc
mov
inc
cltd
pop
dec
xor
sbb
mov
push
xchg
subl
or
mov
and
push
pop
mov
out
sub
or
and
pop
inc
popf
adc
mov
or
shll
lds
mov
aas
xor
fldenv
test
bound
lods
adc
mov
dec
nop
rcll
inc
push
test
cmpl
mov
dec
test
cmc
cmp
test
pop
imul
sbb
xlat
fs
addr16
fsubr
xor
mov
pop
inc
stos
negb
jne
js
mov
xchg
lock
mov
popa
subps
iret
aaa
adc
rolb
xchg
fwait
test
jns
push
or
push
bound
and
xchg
stc
sub
fnstsw
ret
into
lahf
roll
push
or
push
xchg
in
mov
insl
dec
xlat
fdivrs
dec
stos
add
lods
dec
add
sbb
add
test
jbe
pop
test
adc
sti
mov
mov
pop
mov
nop
xchg
cmp
stos
pop
or
lret
xchg
hlt
dec
pusha
scas
sbb
adc
in
add
lods
imul
add
push
mov
test
mov
add
shl
adc
lods
add
inc
divl
xor
addb
adc
insl
push
gs
pop
popf
xor
popf
inc
or
add
std
mov
loop
or
xchg
push
mov
and
push
inc
xchg
adc
xor
cli
inc
xchg
add
xchg
jle
mov
cs
jne
pushf
loopne
inc
adc
insb
cmp
test
repnz
dec
hlt
sub
lea
sbb
sbb
mov
xchg
outsb
pop
cmpsb
aas
lock
test
out
add
add
cmp
or
add
insl
lahf
iret
pop
rol
nop
and
jbe
add
and
jae
add
jle
add
sbb
push
push
lds
fldt
into
push
test
mov
pop
lahf
xchg
cmp
and
mov
or
fsubrs
pop
scas
aas
test
cmp
or
mov
jbe
push
mov
inc
xchg
mov
iret
add
test
or
and
sbb
mov
and
movsb
pop
cltd
jne
ljmp
add
xchg
jecxz
clc
mov
pop
push
int3
lock
outsl
iret
mov
gs
lret
aas
test
jmp
mov
xor
pushw
inc
push
sub
pop
outsb
punpckhbw
popl
mov
jl
icebp
sub
out
sbbb
push
sbb
ljmp
add
in
mov
loopne
adc
or
inc
ret
dec
aad
ret
add
in
gs
fld
add
lcall
lock
fcompl
adc
cmc
repnz
in
push
pop
rcr
cs
add
add
adc
jae
int3
push
jmp
add
loopne
dec
jns
fldcw
mov
int3
ret
jp
out
push
mov
adc
pop
or
nop
aas
aaa
in
add
cmp
and
fs
mov
fistpl
adc
in
add
aad
shrl
test
jle
mov
sbb
imul
inc
or
in
lcall
aad
sbb
rcr
dec
in
push
out
push
clc
mov
fdivrs
dec
pop
dec
add
pop
and
pop
cmp
enter
ljmp
test
xor
cs
or
mov
fldenv
mov
add
mov
ljmp
inc
xor
lods
add
adc
jmp
mov
loope
xor
add
add
mov
mov
add
sti
repnz
inc
cld
pushw
mov
stos
add
or
push
push
int
outsl
cmp
add
ss
push
or
repnz
loope
decl
add
pop
out
cs
sbb
jo
enter
fwait
or
das
adc
add
push
add
dec
stc
fildl
ret
xor
inc
ljmp
add
lock
cld
mov
sbb
and
cs
outsl
cwtl
and
or
mov
loope
enter
daa
mov
mov
out
dec
cli
or
mov
test
daa
cmp
lock
add
mov
fstpl
xor
scas
jge
adc
es
add
cld
jno
xchg
or
push
xchg
inc
fwait
cwtl
mov
adc
jb
stos
cmp
add
and
sti
pop
or
pop
dec
push
and
xchg
mov
and
dec
xor
mov
rcr
mov
stos
or
push
enter
jmp
in
ljmp
push
sbb
xor
mov
mov
adc
dec
test
pop
add
mov
scas
add
imulb
xor
out
cmp
inc
ja
push
addr16
test
push
pop
int3
in
imul
pop
adc
push
testl
es
dec
cwtl
clc
sarb
ficompl
jno
jns
cmp
add
rorb
test
popf
cltd
xchg
sub
iret
mov
sub
jl
mov
xchg
ss
jns
rolb
notb
imul
psraw
scas
rolb
xlat
movsl
add
inc
aas
jae
aam
jb
sbb
lahf
cmc
dec
shlb
add
xchg
imul
pop
inc
fistps
call
fs
insb
adc
mov
sbb
in
fildl
ja
sahf
pop
push
mov
test
xchg
addl
loopne
pop
and
mov
je
and
repnz
jb
imul
ljmp
cmp
jmp
mov
inc
dec
fistpll
lds
xchg
xchg
push
out
cmp
jmp
push
inc
inc
add
dec
adc
and
push
add
xchg
add
mov
andb
cmp
pop
mov
inc
pop
inc
addb
push
xchg
rolb
mov
or
arpl
inc
data16
shll
xor
jo
lret
int3
loopne
dec
push
adc
jmp
add
std
jecxz
fcoml
sti
addl
addl
add
mov
cld
add
popa
xchg
out
std
sti
sbb
lea
push
pop
push
or
add
push
nop
xor
and
add
mov
ds
jns
les
sub
mov
arpl
outsb
dec
push
pop
test
add
lods
cmp
pusha
cli
or
decb
mov
out
scas
imul
push
sahf
push
and
idiv
adc
loope
or
add
pop
nop
int
clc
add
or
ja
jmp
lret
stos
sbb
out
data16
in
ljmp
and
repnz
adc
popf
push
iret
cmp
push
inc
scas
imul
dec
sub
test
inc
push
mov
sub
loop
add
xchg
cwtl
ja
add
add
out
jo
push
jmp
add
and
fs
jge
out
lods
xchg
add
idivl
dec
pop
aam
add
xor
cmp
mov
in
addb
ret
test
sub
pop
mov
cmp
aaa
inc
stos
or
ss
test
lea
cmp
icebp
mov
daa
add
scas
nop
out
pop
mov
sub
fbld
add
stc
mov
sbb
inc
test
jne
cmp
clc
mov
aas
and
gs
mov
push
enter
mov
add
push
insl
mov
inc
push
xor
fiadds
sbb
lret
mov
add
fstpl
push
nop
push
add
cltd
pop
sarb
add
cmp
cmp
in
pusha
push
cwtl
push
pop
lods
rclb
dec
sbb
mov
add
lret
cmp
inc
int
mov
inc
iret
lahf
jb
repnz
add
pop
into
pusha
fsubr
dec
add
add
cmp
mov
jo
imull
dec
fiadds
out
sbb
jmp
add
mov
xor
fdivs
or
xchg
adc
cwtl
cmp
mov
mov
xchg
sar
scas
stos
add
xchg
mov
add
dec
pop
jl
into
mov
shlb
int
and
std
in
divl
icebp
add
mov
rolb
int3
fcmovnb
pop
scas
enter
cmpsl
xor
les
addr16
stos
or
pop
inc
arpl
dec
jmp
fs
inc
popf
cwtl
out
add
ljmp
mov
sbb
jg
push
pop
cmp
inc
dec
push
cwtl
add
mov
add
sbb
pushf
in
cmp
adcl
lds
jbe
jb
sbbb
push
movsb
call
out
xchg
repnz
lahf
movsb
add
aaa
lock
sbb
push
add
add
jecxz
cltd
sub
cli
cmp
loopne
data16
xor
rolb
push
inc
mov
es
add
cmp
pop
adc
or
mov
cmpsb
sbb
mov
pop
gs
sbb
xor
dec
fiadds
inc
lret
ss
push
pop
cwtl
scas
es
cld
mov
xor
hlt
cmp
repz
hlt
es
add
sub
xlat
add
cmp
imul
lock
movsb
mov
mov
add
les
imul
sbb
pop
inc
sub
cmovns
mov
add
cmp
lret
pusha
enter
and
in
mull
stc
int3
jne
mov
out
add
push
xor
or
pop
and
lahf
and
fwait
xlat
and
xchg
mov
rclb
pop
lods
cmpsb
and
jne
sti
loopne
mov
jmp
fcompl
andb
cmc
cli
inc
xchg
iret
shl
pop
decb
push
and
and
adc
xsaves
cmpb
mov
inc
sbb
jge
jge
nop
mov
push
cmp
cmpb
mov
adc
lcall
cwtl
mov
das
test
jle
dec
xchg
mov
lock
mov
add
dec
sbb
pushf
int3
adc
mov
out
dec
inc
mov
ffreep
loope
dec
aas
add
mov
mov
sbb
add
jno
push
push
mov
push
clc
jmp
mov
lea
pop
cmp
jae,pt
adcb
aas
push
or
add
stc
sahf
dec
lock
adc
jo
dec
sbb
pop
in
enter
loope
imul
cmp
push
inc
dec
fisubrl
testb
or
addr16
sub
and
inc
inc
or
jl
cmp
jmp
add
daa
dec
xchg
or
and
or
lds
popf
add
icebp
test
dec
aam
in
cmpb
xor
adc
inc
and
mov
cld
imul
add
and
cmc
add
jmp
aas
cli
or
fcomps
add
shlb
and
pop
add
ret
cmpsl
das
lcall
popf
pop
cli
int
cmc
add
push
loopne
and
sub
add
aad
out
cmp
scas
xchg
xor
push
pop
add
mov
mov
pop
cmp
lahf
int
imul
dec
jge
mov
sahf
movsl
in
and
mov
adc
or
pop
shlb
pop
sbb
add
xor
ja
or
xor
andl
pop
add
or
icebp
ljmp
cli
stos
xlat
cmp
rorl
js
push
push
lock
add
popl
shl
mov
xor
push
test
xchg
testb
xchg
mov
add
or
push
loope
cld
shr
jmp
add
data16
repz
sub
add
fistpll
mov
in
test
mov
lock
push
xor
lock
lods
push
mov
data16
fwait
shll
fcoml
push
bound
sub
add
push
and
je
pop
insb
pop
addb
add
pushl
push
arpl
add
insb
into
int3
mov
cs
sbb
imul
dec
scas
add
jne
popa
clc
bt
out
add
pop
and
movsb
mov
adc
dec
cli
xchg
test
dec
add
loopne
out
insl
jg
inc
cmp
adc
add
xchg
fidivrs
xacquire
sahf
add
mov
jne
sar
cltd
clc
adc
and
jecxz
pop
add
lea
dec
or
dec
fldl
imul
ret
pop
repnz
in
mov
clc
aaa
jns
add
lock
add
lret
push
lcall
sahf
insl
nop
lock
pushf
gs
push
sbbl
pop
out
iret
lods
jb
jge
add
and
int
mov
add
lods
stc
into
pop
push
mov
add
add
cmc
imul
shlb
cld
cmp
dec
adc
cmc
push
shrd
xchg
mov
jl
mov
dec
into
xor
adc
ljmp
xchg
jno
add
lea
adc
hlt
nop
cmp
fbstp
lock
adc
mov
imul
sbb
fdivs
adc
push
pop
sub
dec
outsb
loope
push
ljmp
cld
inc
jmp
push
cwtl
mov
ds
and
ret
mov
out
call
mov
out
sub
xchg
mov
fmuls
pop
xor
sbb
icebp
inc
out
js
add
mov
add
stc
lret
cltd
add
mov
xor
sbb
rorb
cli
inc
jno
and
pusha
xor
and
cs
outsl
imul
sbb
fisttpl
subb
shrb
subl
cmpsl
xchg
xor
adc
adc
add
lods
shrb
push
in
pop
jecxz
adc
or
nop
cli
cwtl
pusha
shr
add
cltd
test
inc
dec
pop
mov
cmp
sub
mov
push
push
stos
ret
xor
push
scas
repz
mov
rolb
pushf
and
add
loope
sbb
dec
or
adc
loopne
nop
fisttps
bnd
mov
pop
out
jle
mov
aad
aas
add
or
jnp
push
es
js
iret
xchg
cmpsl
xor
insl
jae
or
inc
add
jp
les
mov
insb
xor
pop
push
in
and
dec
movsl
inc
nop
shlb
jnp
in
add
lods
clc
sub
ret
mov
adc
sub
addb
push
in
push
leave
pop
xlat
add
jle
add
jmp
and
add
mov
in
arpl
jno
mov
std
cltd
notb
outsb
add
xchg
cmp
je
enter
add
mov
fcomps
jg
sub
dec
ret
inc
push
adc
jge
inc
push
dec
inc
repnz
hlt
jle
add
fstpt
mov
inc
inc
cmp
clc
in
test
mov
imul
fs
sbb
fisttpl
mov
fdivs
inc
dec
jo
adc
push
xor
mov
cmp
add
mov
cld
add
add
push
fabs
mov
xor
or
inc
pop
ljmp
jp
stos
rclb
fisubs
dec
pop
cmc
sbb
dec
push
cmp
sub
dec
jnp
add
movsb
sbb
cs
mov
xor
std
cli
cld
fs
add
loopne
jmp
nop
sti
hlt
and
sbb
add
out
push
adc
lret
sub
bound
push
lods
fidivs
mov
add
outsb
and
rol
test
cmp
lods
andb
aad
mov
add
clc
mov
arpl
subl
pusha
push
fs
loopne
pop
sub
pushf
fstpl
rol
cmp
adc
jb
cmp
sub
fmul
xorl
cmpb
addl
xorb
xchg
jns
mov
imul
ljmp
and
clc
push
lret
fwait
inc
pop
lods
xchg
add
push
adc
add
loope
jmp
stos
add
ret
xor
pop
stos
mov
xchg
jg
fiaddl
in
rolb
jecxz
pushf
out
clc
icebp
loop
jo
cs
sub
inc
dec
out
lret
add
or
jae
shll
outsb
stc
ficoms
dec
js
or
add
fwait
cmpsb
pop
inc
fs
sbb
hlt
xchg
sbb
push
push
leave
fidivrs
jo
add
push
jbe
xchg
mov
add
repz
pop
add
pop
cli
xchg
repnz
daa
shrb
mov
dec
adc
mov
xchg
jne
and
push
mov
xor
xlat
call
pop
orl
test
adc
les
cld
fst
rcr
in
jmp
pop
test
pushl
sub
pusha
in
mov
sub
lcall
into
je
mov
adc
adc
loop
pop
test
fadds
pop
cmp
fcomps
fcmovne
or
push
xchg
inc
inc
es
push
movsl
push
lods
add
and
adc
add
cmpsl
test
adc
test
cmp
mov
add
ret
push
in
push
lock
insl
inc
mov
and
or
sub
ss
into
mov
xor
mov
jg
and
xor
orb
ret
loopne
fdivrl
data16
cmpb
sub
push
aad
jmp
shlb
or
int3
jmp
test
clc
or
push
xchg
xor
mov
lods
scas
aaa
lods
popa
mov
cmp
subb
add
jno
cmpsb
ja
mov
mov
inc
push
inc
inc
adc
data16
mov
add
bound
pop
jp
add
cmp
movsb
decb
sbb
pop
jge
mov
adc
jo
stc
jbe
cs
mov
call
and
faddl
add
ret
es
mov
and
sbbl
insb
add
mov
and
push
pusha
mov
in
add
mov
sub
add
ret
sub
inc
addb
cmp
orl
cmp
push
or
xchg
stos
test
add
pop
mov
mov
in
je
in
jno
test
or
hlt
push
movsb
lret
das
mov
inc
lods
mov
fadds
nop
aas
inc
aaa
mov
xorl
xor
stc
cmp
lds
rcl
int3
sarl
or
mov
out
sbb
out
sbb
xchg
xchg
sbb
fs
add
divb
add
nop
stc
jle
aam
xor
bound
fistpll
and
xor
into
sbb
movsb
cmp
mov
icebp
insb
adcb
xchg
mov
nop
test
mov
and
adc
clc
mov
xchg
dec
mov
add
das
nopl
inc
and
push
cmp
add
out
push
mov
dec
je
lret
into
or
dec
jl
add
hlt
xchg
fisttpl
xor
adc
pop
jmp
adc
lock
xor
insl
rcll
push
flds
in
add
je
pushf
mov
push
push
cmp
faddl
push
aas
stos
add
fcmovb
popa
out
shlb
aam
jnp
and
mov
xor
push
mov
xchg
jne,pn
mov
dec
cmp
xchg
btr
mov
sbb
cmpsl
xorb
mov
push
pop
pop
inc
cmp
inc
loop
clc
sbb
insb
mov
int3
cmp
dec
xchg
rorb
pusha
int
clc
in
jb
inc
cli
nop
mov
mov
das
add
xor
inc
add
sbbb
jns
add
mov
outsb
andnps
adc
mov
movsl
lods
or
adc
ljmp
add
or
jne
add
adc
inc
and
or
cmp
pop
in
addb
mull
test
daa
push
push
or
sub
out
inc
add
dec
sub
and
loopne
push
push
lea
pop
das
aam
cmp
adc
lret
idivb
or
pop
adc
int3
xchg
icebp
adc
xor
cmp
stc
addb
mov
ja
add
add
cmp
add
jb
sbb
add
mov
cmpb
and
in
sub
mov
cs
sub
sub
lods
inc
cmp
mov
jae
lcall
call
pusha
xchg
jl
add
lods
xlat
mov
add
xchg
ss
sub
sti
cld
or
jnp
imul
in
cmc
pop
mov
mov
inc
dec
jne
sub
cmp
xchg
push
dec
xchg
adc
popa
data16
lock
pop
add
fdivs
mov
mov
or
lret
add
mov
arpl
addr16
xor
loope
call
cmp
movsl
das
je
add
adcl
sbb
lret
sub
dec
jnp
pop
sub
in
aad
out
rclb
push
daa
xor
inc
addb
faddl
jne
add
mov
shll
cmp
jle
jl
into
or
add
mov
jmp
xor
rcl
pop
daa
push
fdivrp
push
pusha
movsb
mov
add
dec
in
add
imull
orb
mov
jmp
jb
cmpsl
repnz
lret
adcb
pushf
dec
loope
cmpsl
sub
cld
lods
xor
dec
lahf
clc
mov
add
imul
hlt
and
and
dec
jo
jno
jp
daa
insb
push
mov
sti
add
xor
idivl
jnp
add
dec
xor
sub
fwait
cmpsl
inc
pusha
loope
hlt
push
xor
mov
out
nop
or
sarb
jecxz
jge
and
cmpsl
cmc
inc
mov
pop
cs
mov
add
in
and
popf
aad
fld
insb
out
out
out
enter
adc
test
and
rolb
and
cmp
add
pushf
nop
mov
repz
add
pop
lret
inc
fistpll
aaa
hlt
repnz
pusha
inc
jle
clc
xlat
add
pusha
sbb
xor
jo
les
fcmovb
mov
sub
push
lret
fldt
orl
xchg
fldl
or
jl
xchg
lea
push
test
addb
rolb
jns
add
das
nop
jg
xchg
jp
mov
js
hlt
push
mov
filds
dec
mov
cs
les
fisttpll
push
cld
push
icebp
xorl
xchg
mov
loopne
jne
adc
mov
mov
dec
add
mov
push
mov
repz
inc
in
adc
inc
fstl
dec
sbb
mov
loop
mov
jl
in
nop
cmp
leave
nop
adc
add
cld
ss
inc
movsb
sbb
cmp
scas
mov
mov
data16
push
movups
push
js
add
push
add
or
outsb
sub
lock
mov
sbb
inc
stos
dec
cltd
test
sbb
mov
add
mov
data16
rolb
adc
andl
cmp
loop
add
out
les
add
arpl
mov
mov
stos
loopne
popa
str
pop
cld
cmp
mov
mov
add
test
or
xor
dec
add
inc
sti
lods
jmp
into
or
loopne
notb
add
sbb
rorb
jae
in
push
test
sbb
cs
xor
incb
fwait
rolb
daa
add
dec
in
mov
arpl
sbb
mov
add
sub
push
es
adc
lods
call
cld
mov
ss
mov
dec
pop
ffreep
in
cmpsl
mov
out
or
ud2
popa
clc
add
ss
sub
adcb
adc
test
int
mov
roll
ret
test
mov
sub
xchg
push
xor
fdivs
lods
or
pop
sub
pop
xor
jecxz
add
into
sub
test
out
mov
push
js
test
out
in
dec
mov
add
sbb
aam
pop
xor
test
loopne
add
loope
sub
frstor
mov
sbb
and
mov
push
mov
lahf
xchg
loopne
pushf
add
fcoms
push
mov
and
loop
shrb
popa
je
or
call
fildll
in
in
filds
mov
popf
call
add
xor
aas
adc
or
mov
push
inc
inc
add
jnp
mov
jp
add
mov
mov
push
mov
jnp
pop
vandps
cmp
aas
pop
aam
movsl
add
cltd
push
add
pop
xchg
jns
inc
add
out
xor
mov
push
fsubp
mov
ja
adc
add
inc
mov
xorb
flds
mov
ret
pop
sbb
pop
enter
insl
dec
icebp
inc
xor
mov
lcall
add
in
cs
test
cld
leave
pop
dec
movl
pop
and
add
add
add
loope
sti
push
int
adc
mov
adc
jp,pt
push
out
scas
cwtl
add
lahf
xor
and
xchg
adc
push
mov
add
mov
push
clc
lcall
pop
add
fs
loope
inc
or
pop
pop
or
in
cmp
iret
ret
mov
and
jbe
xlat
or
adc
roll
enter
mov
sub
cmp
add
pop
mov
movsl
inc
orl
mov
add
sbb
pusha
add
add
aas
pop
mov
add
jns
iret
sub
or
jl
shrd
inc
mov
fs
adc
stc
or
mov
jge
dec
add
cwtl
mov
sarb
add
or
leave
jns
sbb
enter
sbbb
mov
int3
sub
ja
rolb
pop
pop
bound
mov
mov
inc
or
dec
arpl
orl
nop
xor
mov
insb
jns
dec
push
cmc
hlt
lret
jno
sub
shll
pop
outsb
mov
aad
jle
add
cmpsl
shrb
jp
jl
adc
cwtl
in
test
daa
into
enter
add
mov
mov
add
mov
cmp
mov
mov
repz
shrl
ds
jge
iret
and
xchg
movsb
sti
pop
and
dec
arpl
or
pop
or
sbb
add
xchg
loopne
or
adc
pop
mov
lods
inc
push
mov
pop
sahf
jp
bound
push
xchg
pop
xorb
jae
sti
mov
enter
je
or
xchg
imul
call
mov
push
add
sbb
pushf
jno
xchg
mov
cmp
dec
sub
wrmsr
xchg
insb
sbb
insb
cmp
test
movsb
sbb
andl
add
inc
mov
aam
clc
sub
inc
les
in
add
fildl
xchg
stc
add
inc
mov
outsb
sbb
stos
dec
adc
dec
adc
in
mov
sbb
mov
adc
out
push
pusha
bound
mov
inc
add
pop
andl
add
xchg
jmp
pop
inc
enter
add
out
pop
mov
cmp
divl
in
jecxz
adc
mov
nop
add
lahf
fldcw
xor
shr
fldl
jmp
jno
data16
or
mov
mov
insb
loope
mov
lods
sub
add
test
push
js
add
data16
cld
add
cltd
push
inc
stos
lds
pop
cli
fnsave
pop
and
and
out
loop
sub
pop
lods
popf
mov
decb
addr16
and
or
dec
call
jne
jo
add
jl
push
ja
mov
mov
or
lea
sbb
jl
shrb
rclb
in
test
push
mov
je
mov
jmp
clc
cli
push
lret
rclb
rolb
pop
mov
mov
mov
faddl
out
lahf
pop
cmp
lock
inc
pop
aam
push
inc
push
adc
in
add
push
addl
daa
test
sub
outsl
add
scas
push
pusha
pop
sub
sbb
lret
pop
inc
add
sub
pop
cmp
mov
xchg
out
jl
xchg
loopne
sbb
rep
rolb
stos
clc
and
enter
jns
in
les
adc
pop
mov
das
add
adc
add
repnz
mov
mov
xchg
mov
popa
insb
pop
add
jmp
out
cmp
ret
mov
xor
mov
and
adc
xchg
das
cld
add
lea
mov
loop
xor
ss
xor
or
pop
cmp
out
mov
cli
rol
jle
daa
pop
pop
inc
in
dec
push
add
scas
xchg
ret
addl
xor
cmp
pop
sub
dec
pop
push
mov
sarb
add
daa
mov
add
push
add
fmuls
add
fidivl
sub
pop
std
icebp
push
push
mov
aam
leave
xchg
adc
add
outsl
loope
add
mov
push
pop
cmp
and
add
mov
stos
ljmp
jp
mov
add
ret
add
mov
dec
loopne
push
es
xorl
inc
or
mov
mov
frndint
mov
adc
hlt
sub
pop
int3
jns
cwtl
dec
add
ret
and
jge
sub
add
cmpsl
clc
dec
cmp
pop
add
sub
jle
cld
jo
shrl
sbb
add
mov
xor
jmp
and
inc
fwait
aad
and
sub
add
add
lret
movsb
lds
jp
adc
in
pusha
decl
mov
and
or
xor
out
jmp
lods
push
leave
sbb
xlat
mov
adc
pop
jo
test
sbb
fs
jns
sub
sti
sbbb
push
testl
add
jb
imul
int
mov
out
dec
adc
icebp
push
push
push
clc
add
dec
bound
and
jae
xchg
pusha
sbb
xor
lock
add
sahf
lds
xchg
pop
add
cmp
mov
cltd
xor
arpl
fsubs
and
out
mov
push
mov
loope
pop
je
das
mov
and
pusha
dec
test
out
std
add
je
xchg
test
inc
or
add
das
repz
add
aam
xor
mov
mov
shl
inc
stos
cmp
add
mov
add
adc
adc
out
and
pop
xchg
add
inc
jp
mov
inc
mov
sbb
xchg
fbld
cld
mov
ja
sbb
data16
inc
xor
int
stc
into
lods
or
jo
loopne
mov
xor
and
enter
std
ja
cld
dec
add
cltd
shll
cld
scas
in
repnz
push
and
shll
adc
xor
jmp
cwtl
mov
sbb
es
or
in
les
lock
push
sbb
inc
ljmp
and
push
push
inc
loopne
shll
jb
inc
cmpsl
jle
lock
loopne
push
add
sbb
or
rorb
in
or
add
movb
loopne
es
push
test
xchg
test
sub
xchg
mov
arpl
rolb
xor
or
inc
dec
adc
mov
or
in
add
stc
cmp
insb
mov
cli
mov
pushf
shll
popa
jmp
lret
arpl
cwtl
out
mov
sub
add
inc
add
jne
lods
add
xchg
push
xor
push
mov
jge
mov
jnp
cmp
inc
daa
inc
pop
add
icebp
mov
pop
add
ja
nop
cmc
shr
imul
or
cli
jge
fs
add
loopne
xchg
dec
mov
mov
icebp
add
sbb
xor
clc
sub
js
and
xchg
shlb
sbb
sbb
cmp
xchg
jns
xchg
add
fwait
mov
clc
cmp
fcomps
in
mov
mov
inc
pop
add
sbb
add
paddq
dec
cld
pushf
add
xlat
sbb
sti
mov
test
add
mov
mov
add
xchg
inc
in
repnz
adc
sbbb
stos
sbb
ds
syscall
add
xor
add
xchg
ds
add
rorb
pop
call
jno
sub
mov
mov
lock
add
add
push
les
add
aas
insl
mov
sbb
paddusw
push
and
lods
cwtl
clc
call
mov
sub
cmp
in
push
pop
lahf
dec
xchg
arpl
pop
add
leave
mov
inc
aaa
popf
xchg
jecxz
inc
arpl
addr16
scas
sub
mov
pop
cmp
dec
mov
sub
in
mov
fwait
sti
scas
out
sbb
sbb
icebp
ljmp
sub
cmp
add
cmp
cmovne
sbb
in
push
lcall
aam
pop
stc
add
fdivl
ret
test
scas
lods
imul
add
in
and
xchg
dec
dec
or
push
sub
sbb
push
add
lcall
mov
movsb
inc
les
mov
dec
roll
ds
inc
cmpsb
sbb
pmuludq
jl
or
fdivrl
or
outsb
cmpsb
nop
push
add
shll
xor
loopne
ror
sub
gs
int3
jg
cmp
push
sub
push
ds
jne
add
mov
xchg
lds
je
xchg
add
inc
jp
aad
loopne
or
jnp
repz
testl
mov
add
orb
arpl
add
addr16
push
cmp
mov
shl
inc
nop
mov
or
add
sub
lods
mov
dec
add
xchg
or
push
mov
ret
xchg
push
int
add
movsb
jmp
fistpl
mov
push
call
jno
adc
mov
push
lods
jg
add
mov
add
add
jns
addl
jge
or
dec
rolb
add
pusha
mov
or
and
add
lock
fisttpl
loopne
arpl
add
adc
enter
push
sbb
cmc
pop
loop
pop
jno
mov
push
xchg
fdivr
int3
ljmp
dec
xlat
mov
mov
scas
add
cmc
add
leave
inc
add
pop
or
orl
ret
mov
cmp
adc
add
iret
xor
mov
fwait
or
sbb
jecxz
stos
sub
xor
mov
sub
lds
or
jo
push
add
and
sbb
add
mov
lock
add
pop
test
push
jg
rorl
jge
cltd
push
jbe
lahf
pop
xchg
mov
adc
mov
pusha
lock
lods
pop
inc
sub
add
test
add
in
cld
jg
and
add
jb
arpl
jp
push
imulb
or
push
and
xchg
sbb
nop
mov
and
xchg
test
add
or
xchg
mov
bound
rcrb
cmp
push
pushf
imul
mov
pop
ss
ret
jp
xchg
xchg
mov
sbb
xor
stos
xchg
add
sbb
add
data16
lahf
pusha
xchg
add
inc
jmp
adc
push
fistps
xchg
add
cmp
lcall
mov
imul
sbb
ja
adc
add
xchg
jnp
adc
jle
add
cmp
sbbb
xor
pusha
rcll
rcrl
loope
shl
cmp
pop
xchg
inc
add
ret
mov
int3
or
lods
mov
push
aad
adc
jl
mov
nopl
xor
jo
dec
repz
xor
decl
lds
jnp
fldt
add
shrl
push
xor
popf
in
lahf
add
cwtl
mov
loopne
cltd
add
lock
add
mov
es
popf
xchg
xor
inc
push
outsb
push
out
inc
imul
in
dec
mov
or
fstps
or
add
jle
fdiv
fimuls
and
add
shll
inc
lds
arpl
fstps
add
lcall
xor
cs
jbe
repnz
and
xor
cmp
push
rorb
dec
and
jb
cmp
test
mov
fildll
pop
add
aaa
and
add
stc
sub
clc
int3
jle
cmpl
xor
push
mov
adc
add
inc
pop
jb
pop
jmp
dec
test
test
mov
imul
inc
movups
pop
dec
and
or
mov
inc
xchg
mov
inc
lds
sarb
adc
das
mov
xor
push
enter
gs
cs
and
sbb
sti
push
and
ljmp
cmp
mov
or
dec
cmp
add
add
push
scas
push
ret
add
inc
xchg
imul
mov
ffreep
add
pop
cltd
pop
aaa
add
rorb
add
xchg
faddp
cltd
ja
add
adc
sub
sbb
outsl
lock
add
dec
pop
jge
or
insb
loop
inc
inc
add
cmovo
jl
and
pop
pop
aam
in
mov
lcall
dec
fdivrs
pop
in
xor
outsb
sbb
pop
out
inc
bound
ja
or
adc
add
mov
jecxz
mov
addr16
jmp
cmpsl
fisttpl
inc
cli
mov
cwtl
imul
gs
or
adc
xlat
mov
push
cld
xor
adc
inc
int3
repnz
ror
nop
fadds
fs
in
subl
mov
dec
jae
scas
dec
pusha
xchg
push
adc
ds
subl
adc
mov
sbb
fstl
dec
cwtl
dec
cs
fidivrs
xchg
fldcw
jbe
and
leave
add
or
xchg
and
into
pop
pop
mov
and
cli
enter
cmp
inc
pushf
mov
mov
mov
sbb
sbb
xchg
add
sbb
gs
push
clc
scas
ljmp
and
es
gs
pop
add
sbb
imul
sar
add
test
ljmp
xor
sbb
mov
fadds
ss
add
std
xor
push
cmpsb
out
push
inc
sub
dec
jbe
dec
bnd
and
pop
add
pop
push
je
xor
lock
repz
cmp
rorb
imul
add
jg
add
jne
test
adc
or
lret
and
enter
decl
adc
adc
xor
in
add
push
loopne
int
fs
jo
mov
dec
inc
sub
and
xchg
pop
mov
and
add
in
jecxz
inc
cmp
pop
pusha
add
and
mov
dec
push
inc
jp
mov
mov
in
sbb
add
mov
test
in
add
push
test
int3
mov
rcl
add
fisttpll
push
xor
adc
dec
push
addl
das
test
call
add
mov
add
xchg
loop
mov
add
int3
sub
add
lret
mov
fnstcw
outsl
insb
cmp
add
jl
cmp
sbb
mov
add
dec
add
xchg
ja
pushf
stc
in
out
pusha
mov
xlat
fsubrl
add
fcom
add
nop
rorb
fcoml
cmp
add
mov
nop
and
fisttpll
out
repz
rorb
xor
mov
adc
fcomip
lock
ja
addr16
adc
iret
sub
stos
rcll
fisubl
adc
xchg
enter
push
cltd
add
mov
mov
inc
add
and
pop
lret
add
pop
test
int
fcomps
push
add
leave
mov
add
cmp
add
iret
ret
or
add
jmp
push
fisttpl
repz
enter
jne
push
cmpsb
add
xor
fldt
and
push
push
aas
or
in
jns
les
adc
mov
push
mov
and
add
int
imul
mov
sbb
push
pop
mov
cmp
jbe
dec
add
shrb
subb
les
adcl
mov
pop
aam
and
add
xchg
cmc
and
mov
aaa
jecxz
mov
testb
sbb
mov
add
jnp
push
cmp
jle
add
push
ljmp
add
pop
pop
lock
out
hlt
push
hlt
jge
add
or
out
jmp
cmpsb
in
jb
add
jg
xor
add
icebp
mov
mov
test
das
lahf
add
fcoml
adc
pusha
add
rcl
sbb
icebp
mov
adc
lcall
es
and
add
or
add
cld
xchg
cwtl
out
jno
add
sti
pushf
sahf
mov
insb
add
cltd
mov
mov
add
rorb
iret
push
jge
add
es
jecxz
or
shl
mov
pop
sub
outsl
dec
rorb
hlt
and
mov
add
fxch
and
sbb
rorl
stos
pop
enter
repnz
mov
arpl
add
jl
in
ret
test
push
xor
push
div
loop
outsb
outsl
cld
mov
add
add
pop
sub
jnp
movsl
aas
fneni(8087
or
iret
push
leave
push
pop
add
ret
mov
addl
sub
mov
sbb
xor
orb
out
dec
pop
adc
xchg
hlt
add
cltd
cwtl
push
mov
ret
xor
stos
leave
fsubrl
cs
mov
add
mov
adc
enter
inc
cwtl
les
add
jp
aam
dec
push
sbb
cltd
xor
fld1
enter
jl
jbe
add
lcall
es
inc
jge
fcmovne
loope
mov
mov
leave
push
jg
lea
test
pop
popf
add
adc
pusha
cmp
or
or
shl
cmpb
add
xor
jne
jle
sbb
pushf
lret
cmpsb
adc
test
xchg
pop
test
mov
in
push
jns
cmpsb
loopne
add
push
or
add
les
faddl
icebp
inc
cs
inc
cld
test
in
outsb
fmulp
out
pop
xchg
xor
das
ficompl
pop
mov
inc
jge
sbb
test
pop
es
xor
xor
dec
sbb
aad
sbb
mov
pop
sub
pop
lret
shl
dec
push
jp
cmpsl
add
pop
inc
fs
add
gs
add
es
add
insb
jle
dec
dec
mov
mov
sti
repz
lock
sub
stos
es
add
jbe
xchg
std
shl
push
cmp
add
inc
or
addl
mov
ret
sub
cmp
pop
mov
aam
push
and
sbb
push
push
outsl
sbb
lret
repz
cwtl
call
cmp
insb
sbb
xchg
or
out
mov
stos
mov
repnz
loop
jg
cmp
jl
mov
fisttps
push
sbb
xchg
in
xorl
cmpb
lock
pop
jne
add
sahf
enter
push
push
outsl
add
xchg
shll
addl
and
mov
add
insb
inc
push
es
mov
stos
mov
jl
daa
mov
cmpb
jnp
add
loopne
clc
int3
sbb
and
xor
and
add
fcom
sub
mov
out
push
fwait
inc
sbb
test
xor
shl
cmp
jg
mul
xor
mov
out
adc
out
call
push
test
jo
ficoml
int3
loope
call
loopne
mov
jmp
ret
les
stc
mov
rcrb
add
ljmp
shll
lock
sti
loopne
cmp
or
jecxz
nop
sub
sbbb
aaa
xor
pusha
add
fwait
jno
in
dec
orb
jg
incl
pop
nop
mov
mov
and
push
add
popf
or
fadds
xor
clc
cmp
sub
fldl
lret
in
scas
pop
xchg
cmp
jb
hlt
nop
das
int
xlat
jno
cmpb
lret
gs
add
mov
or
add
add
popf
add
sbb
sbb
aaa
jb
jg
mov
add
inc
xlat
add
cmp
scas
das
shlb
testl
mov
faddp
fwait
in
mov
mov
aad
mov
pop
adcl
call
mov
aad
push
jg
popf
and
sarb
mov
add
ret
out
lret
mov
pushf
jb
ljmp
std
xor
push
jb
add
gs
sub
pusha
pop
lret
add
mov
mov
repnz
add
and
add
mov
add
sub
clc
add
rcll
movsl
cmpsb
daa
rclb
addr16
inc
cmp
xor
in
push
shlb
push
sub
cmp
jb
add
shl
dec
iret
rolb
stos
add
dec
imul
or
stos
push
fwait
push
pop
cwtl
xchg
xor
xchg
jle
mov
pushf
inc
add
mov
xchg
pop
pop
and
lods
mov
add
cltd
push
jge
jns
add
push
pop
add
cmp
shll
and
cli
adc
sti
ds
add
js
outsb
ljmp
rorl
lcall
xchg
inc
inc
cli
icebp
test
push
mov
add
outsl
ds
add
cmp
pop
push
and
add
out
bnd
aam
test
push
int3
cwtl
roll
dec
jae
adc
xchg
cmp
mov
xchg
xchg
rol
xor
sbb
arpl
sahf
or
call
out
lods
xor
scas
or
fwait
test
lods
mov
sub
push
pop
psubsb
inc
or
movsb
mov
insl
lret
jnp
mov
cli
sti
sbb
leave
add
mov
jne
add
mov
dec
xor
push
inc
ljmp
add
cmpsb
mov
ss
icebp
add
cmp
cmp
add
fs
addr16
add
faddl
xor
dec
mov
insb
mov
imul
cmpsl
jae
out
call
and
sub
cmc
sti
xchg
or
xor
add
mov
js
les
inc
es
inc
mov
je
leave
bswap
data16
ret
fs
es
dec
and
pop
xchg
pop
sbb
jno
in
shlb
fs
add
cmp
into
je
adc
in
ljmp
sti
pushf
lahf
push
add
jmp
mov
aas
cli
lds
or
stc
add
bound
jae
push
xor
push
mov
xchg
or
cmp
inc
mov
cmp
mov
pop
addr16
push
popa
xor
jo
mov
jbe
cmp
cmp
aaa
aas
jno
out
inc
mov
pusha
call
dec
sbb
pop
rcll
nop
mov
idivb
add
call
push
leave
and
xchg
add
repnz
adc
movsl
push
push
pop
xchg
cmp
mov
mov
aam
test
sbbb
xchg
js
add
call
jo
repz
inc
adc
orb
push
cmp
dec
jo
cmp
add
aas
decb
call
mov
dec
push
scas
add
xor
sbb
xlat
es
aas
inc
pop
mov
daa
std
outsb
loop
push
push
lcall
pop
ljmp
sub
int
rol
call
jmp
aad
push
xchg
nop
adc
data16
or
or
add
sub
inc
push
and
push
aam
add
mov
insb
adc
sub
add
setbe
cld
insb
add
pop
cmp
mov
lahf
sti
sbb
xchg
pop
mov
cmc
xlat
push
cld
int
sub
pusha
push
cltd
cmp
incb
hlt
out
push
fisubrl
inc
js
add
or
pop
and
mov
orb
arpl
mov
mov
adc
iret
push
mov
cmp
sarb
inc
or
add
cltd
movlps
aaa
jnp
aad
es
xlat
insl
add
out
push
sbb
clc
lret
push
stc
cmp
jl
mov
pop
test
movups
inc
inc
xchg
cmp
xor
push
mov
and
testl
cmp
inc
add
sub
jo
add
cmp
icebp
enter
call
add
pop
xchg
mov
mov
or
pop
jb
or
and
mov
js
lcall
and
cmpsl
add
xlat
add
sbb
add
jp
add
lcall
sahf
out
lret
stos
loopne
pop
sbb
jb
mov
add
pop
xchg
out
or
in
cli
out
push
pop
leave
int
fwait
or
sub
cmpsl
add
loop
sub
push
mov
add
and
incb
cmp
push
les
fcoml
insb
xchg
pop
pushf
jnp
aas
out
add
adc
xor
add
fisttpl
iret
jae
mov
fs
ljmp
mov
add
xchg
cpuid
scas
sub
lahf
add
dec
mov
sbb
pop
mov
add
addr16
jo
out
sbb
add
sub
jae
pop
cmp
jnp
add
scas
shrb
mov
mov
jbe
inc
add
hlt
rcl
and
cmp
outsb
inc
addr16
xorb
xchg
inc
jb
test
add
outsl
aaa
lock
fdivl
jae
and
dec
or
pop
pop
pusha
shll
cmp
mov
ja
sbb
mov
xchg
xchg
add
loop
xor
adc
dec
and
aas
lret
fs
xor
xchg
sbb
pop
ja
stos
loop
inc
roll
jl
add
jp
jmp
test
or
add
lock
mov
push
mov
test
add
mov
ret
dec
pop
add
mov
adc
cmpsb
cld
xor
movsl
push
sbb
sbb
push
mov
sti
mov
rolb
jno
arpl
dec
lret
sbb
and
sbb
or
push
das
ljmp
add
xchg
ficomps
shlb
in
call
andl
and
imul
int
inc
sbb
push
inc
xchg
loopne
mov
push
cmp
mov
add
in
out
mov
cmp
in
stos
pop
aam
rcr
icebp
repz
rolb
jnp
add
call
add
rcl
cmc
fs
add
jne
push
out
nop
in
inc
out
in
test
push
push
mov
mov
jge
data16
leave
in
mov
mov
es
xchg
xchg
pop
adc
and
inc
inc
mov
add
dec
pop
jg
dec
popa
mov
nop
xchg
inc
pop
outsl
mov
mov
push
std
xchg
shll
fwait
imulb
in
arpl
int
dec
cmpl
shll
or
cmp
sarb
sbb
mov
addr16
je
cli
add
iret
ret
sub
mov
sahf
rolb
jbe
mov
aas
outsb
and
pop
add
mov
insl
js
adc
test
or
in
arpl
bound
sub
dec
mov
jb
mov
clc
mov
add
mov
hlt
add
fldl
adc
mov
or
sbb
jl
add
mov
inc
cmp
add
add
add
xchg
fisttps
paddb
mov
imul
xchg
mov
loopne
js
mov
or
sbb
andl
or
mov
mov
add
cmp
lea
adc
dec
jb
push
dec
add
cmp
arpl
add
loope
fsub
push
loope
shl
adc
lods
adc
cmp
jo
cmp
add
aaa
jle
outsl
push
xor
andb
sbb
pop
cpuid
not
and
dec
mov
ja
ljmp
sbb
push
mov
pusha
cmp
and
push
aad
ret
addl
shl
jp
xor
add
jle
das
xchg
ss
jl
mov
arpl
shlb
inc
test
add
adc
insb
mov
roll
xor
loope
sbb
adc
sbbl
movsb
lds
adc
sbb
pop
add
mov
cmpsl
clc
cmp
cmp
subl
scas
rolb
push
rcll
mov
clc
xor
lret
popf
jo
hlt
mov
cli
adcl
sahf
xlat
add
inc
and
jno
lods
adc
jno
add
xor
movsb
out
inc
repnz
jle
cld
inc
cld
mov
push
out
in
add
cli
ret
add
bound
popf
in
mov
add
inc
nop
enter
add
decb
dec
or
sbb
enter
in
xchg
jo
mov
jecxz
push
rorl
ss
in
cmp
mov
push
inc
popa
orl
xchg
mov
subb
outsl
inc
ja
mov
shlb
adc
inc
dec
ljmp
sbb
popa
mov
xor
cmp
cwtl
clc
sbb
cmc
pushf
aas
loope
insb
out
jl
adc
loopne
jmp
ret
test
push
pop
jb
push
test
push
aas
add
jae
xor
inc
int3
add
lds
push
icebp
dec
ja
jbe
add
or
inc
jle
xchg
inc
mov
xchg
xchg
push
je
out
sbb
push
sub
pop
xor
push
jg
xchg
cmp
cmpb
dec
add
sbb
call
enter
cmp
pop
cmp
es
cmp
daa
dec
jge
mov
aam
negb
mov
add
ljmp
add
in
cli
nop
std
dec
roll
push
mov
fidivs
jg
call
sub
or
inc
pop
loope
test
add
ljmp
andb
push
cli
sub
lods
mov
adc
dec
dec
add
xor
cmp
andl
dec
xor
and
in
bswap
faddl
cld
jmp
add
icebp
adc
aaa
rcrl
cmpsb
cmp
ja
add
mov
pinsrw
sbbb
cld
jbe
sbb
aam
mov
pop
add
xor
add
movsl
lds
or
add
xorb
cmp
dec
sbbb
add
popa
into
push
fimuls
or
push
mov
sub
mov
sahf
adc
sbb
test
lahf
push
arpl
or
adc
xchg
push
bswap
push
adc
shrl
aam
and
jp
pop
mov
loopne
and
xchg
mov
fdivp
sub
pusha
das
or
jo
pop
add
inc
lods
jecxz
insl
xor
jne
lods
icebp
push
dec
fdivs
outsb
xor
add
es
cmpsb
lea
jp
inc
nop
call
add
sub
jae
in
or
jmp
or
lds
and
pop
push
jle
add
inc
cmp
adc
insl
jge
jo
pop
lock
mov
pushf
ret
or
pushf
add
jle
subl
xchg
pop
enter
add
lret
in
mov
mov
lds
aad
mov
loope
cmp
or
xchg
loopne
xor
or
inc
ret
push
xchg
fisubl
in
inc
clc
adc
test
xor
ja
mov
jl
sbb
pop
mov
pop
or
add
add
pushf
mov
xchg
rorl
mov
loopne
push
les
pop
adc
in
cmc
lock
test
shll
jbe
jge
pop
pop
push
dec
ret
add
jnp
add
out
data16
ja
lds
inc
lret
lcall
dec
jg
lock
leave
js
clc
pusha
pusha
xor
pop
outsl
inc
cmp
jns
arpl
sbb
pop
loop
pop
inc
sahf
add
hlt
push
into
add
add
pop
push
popf
or
je
mov
jne
add
lock
mov
pop
sub
dec
dec
inc
ds
mov
pop
inc
ret
call
lock
call
add
stos
sub
add
lock
inc
pop
js
or
and
sbb
sbb
sub
add
rcll
movsb
adc
push
or
aaa
mov
pusha
xor
and
lods
xor
pop
mov
xchg
rolb
pop
push
add
and
jno
rorb
pop
shlb
add
jg
cmp
xorb
stos
jmp
addr16
pop
cmpsb
inc
outsl
rclb
mov
pop
pop
repz
dec
jle
add
jnp
insl
xchg
bound
addl
push
mov
jle
jecxz
add
dec
xor
and
xchg
add
sar
xchg
lahf
add
roll
add
mov
movb
call
mov
in
sbb
cmp
sbb
scas
out
xchg
out
and
lods
ss
dec
jo
dec
add
aam
push
outsl
addb
inc
add
sbb
in
clc
push
pop
add
add
in
movb
jno
pop
inc
insl
adc
jle
push
rcll
and
pop
cltd
inc
es
dec
add
mov
and
or
je
shl
lock
fs
mov
and
pushf
add
fcomps
xchg
cld
jae
mov
loopne
lds
jle
cwtl
iret
ds
sub
jae
push
fs
xor
shlb
scas
add
add
or
add
sahf
rclb
lret
add
adc
popa
jmp
in
inc
jae
add
lock
test
testl
xor
and
jp
lahf
and
mov
dec
sbb
adc
cwtl
sti
add
out
orl
add
mov
loope
mov
testb
fs
and
push
xorb
cmpsb
xor
aad
cwtl
add
sbb
jb
lahf
cld
mov
add
sbb
xor
and
subl
aad
xchg
mov
ficompl
insl
outsl
mov
pop
lods
dec
add
dec
cmpsl
or
hlt
inc
mov
lret
in
push
mov
test
adc
push
mov
loop
xlat
movsb
insb
dec
ja
stos
out
mov
mov
adc
adc
rolb
mov
inc
sahf
movsb
mov
sbbb
adc
xchg
push
enter
out
mov
lock
aad
int
repnz
fwait
inc
icebp
fisttpl
pusha
js
ljmp
inc
xor
or
nop
test
xchg
add
inc
in
test
dec
dec
add
ss
stos
cmp
xchg
je
mov
leave
lock
shlb
fwait
ds
sub
imul
lret
mov
add
cwtl
inc
imull
packsswb
repz
aam
ds
fs
cmc
add
lea
jo
add
dec
inc
test
mov
and
xchg
push
les
out
xor
add
jecxz
xchg
pop
xorb
push
dec
mov
mov
push
push
push
jno
in
mov
sub
fcomps
cmp
jge
push
cmp
pop
add
loope
rcrb
add
add
insl
mov
sub
movsb
xchg
pop
add
and
jo
or
mov
rcr
std
mov
lods
rol
scas
xor
aad
js
lret
test
inc
add
lods
add
decl
mov
inc
add
dec
sub
call
sti
inc
loopne
psubusw
jb
sbb
sub
ljmp
ja
xchg
and
cld
aam
std
pop
push
repz
push
mov
pushf
dec
sub
fstpt
aaa
ret
jg
sbb
pop
mov
or
addb
and
into
imul
xor
es
jmp
add
mov
xchg
test
adc
test
mov
fiadds
mov
dec
inc
dec
sbbl
inc
les
push
and
xor
xchg
pop
xchg
shlb
add
scas
pusha
das
dec
jns
and
sti
les
or
push
loopne
idivb
popf
inc
loop
scas
lret
mov
mov
jmp
add
leave
mov
loope
in
ljmp
test
insb
cwtl
mov
add
sub
faddl
enter
pop
fistl
sbb
movsl
ljmp
sbb
addb
ret
push
jae
cli
insl
sub
push
roll
mov
sbb
sti
call
je
xchg
pop
stc
add
neg
xor
popa
shr
nop
fcomi
insb
add
mov
add
rorl
mov
sbb
test
push
nop
mov
xchg
and
or
lds
int3
test
add
out
push
add
insl
pop
or
dec
pop
test
cmp
push
sub
add
call
fcomip
sahf
xlat
hlt
and
imul
xchg
popa
xor
fiaddl
xor
enter
lahf
add
jecxz
push
push
mov
fwait
movsb
std
sbb
or
lds
add
test
movntq
push
je
add
movsb
mov
push
sub
mov
mov
sbb
sub
fldl
adc
outsb
cwtl
daa
out
pop
add
add
push
gs
inc
add
mov
cmc
clc
add
sahf
fcmovb
add
xchg
pop
adc
lods
dec
lahf
sbb
ffreep
fdivs
cmp
add
inc
add
add
int3
add
loopne
pusha
hlt
fwait
mov
add
lea
out
add
ja
xor
sarl
movsl
pop
or
cmp
add
fwait
iret
cli
add
nop
lcall
das
pop
jb
xchg
add
or
mov
push
xchg
lea
lock
fcmovb
pop
loope
call
insb
adc
sbb
lods
repz
enter
adc
fsubrl
lods
lock
scas
mov
add
xor
add
mov
pop
jg
add
jmp
and
insl
out
adc
and
xchg
mov
xchg
adc
sub
cmp
or
mov
cmpsb
lock
ljmp
in
inc
jl
popa
aas
int
cmpb
adcl
or
jb
add
jnp
je
fistpl
mov
xor
icebp
and
pop
push
std
incl
cmp
insl
or
bound
test
add
push
cmp
cmp
scas
ret
adc
sbb
ret
pusha
pop
mov
sub
push
pop
adc
dec
mov
add
push
add
xchg
jl
add
pop
pop
int
add
dec
loopne
push
aaa
jns
mov
scas
jge
mov
int
cmpsb
ret
xor
dec
mov
js
in
test
jl
lock
call
sub
or
jae
jg
push
add
adc
add
ds
iret
push
cmp
push
inc
repz
xchg
add
loope
and
mov
add
sub
dec
cmp
repz
push
cmp
pop
push
pop
in
inc
sub
push
pusha
or
sbb
sub
sbb
shl
xchg
mov
mov
mulb
fsubrl
adc
jo
mov
mov
stc
mov
lahf
dec
push
jns
add
fistps
mov
nop
sbb
loopne
cmp
or
and
add
or
mov
lds
loope
cmp
xor
sub
cmovno
jge
adc
adc
jge
jecxz
andl
push
dec
fldt
push
negl
cmp
shlb
aad
pop
stos
jnp
nop
je
mov
adc
imul
jo
push
xchg
repnz
jno
popf
adc
pop
add
int
add
mov
add
sbb
and
addr16
cmp
xor
enter
cs
insb
add
mov
repnz
ss
add
jmp
mov
loopne
dec
add
into
push
icebp
hlt
push
push
pop
jno
xchg
inc
sti
andb
adc
push
loop
inc
jg
add
sub
lret
mulb
mov
cmp
inc
orl
sbb
nop
rol
add
xchg
loop
add
sub
mov
xchg
rorb
mov
incl
lock
ds
xlat
add
movsl
ds
mov
sub
sub
outsl
lds
push
inc
and
adc
aas
adc
and
mov
cltd
lcall
and
cwtl
dec
xor
and
xchg
dec
and
testl
and
adc
adc
adc
das
and
addb
jae
xor
mov
popl
add
sub
jl
add
sub
ja
adc
xchg
jno
decb
add
sbb
add
imul
ds
jne
loopne
add
out
mov
xchg
andl
adc
xor
mov
test
sub
mov
fcomps
mov
cmc
dec
add
hlt
repz
add
loopne
and
lock
add
sub
and
nop
mov
add
pop
adc
add
lret
and
lcall
loopne
inc
movsb
mov
add
ss
jge
or
das
add
loope
cmp
mov
dec
mov
and
push
pusha
aas
jmp
add
push
in
loop
pop
cwtl
mov
add
cmc
mov
xlat
sbb
dec
pusha
insb
xchg
ds
cmp
pop
xchg
pop
push
add
andl
add
inc
dec
xchg
sbb
sti
pop
inc
sub
imul
fdivs
out
add
das
and
add
mov
fidivl
or
icebp
repnz
addl
in
pop
cwtl
pop
or
xchg
mov
mov
mov
psrlq
ds
inc
andb
jle
cmp
add
sbb
popa
sahf
pcmpeqd
mov
lods
test
lret
es
add
cwtl
aam
cmp
mov
add
das
arpl
dec
jbe
add
repz
add
in
test
adc
cmp
pop
xchg
testb
jg
lods
test
lods
inc
xchg
pushf
mov
xchg
fdivrl
add
flds
or
pop
fimuls
outsl
outsb
fisttpl
add
jge
cwtl
lock
jno
add
sub
add
cmpsb
es
and
sbb
nop
das
pop
dec
incl
sub
jo
hlt
jnp
push
shrl
cwtl
and
pop
xlat
push
clc
lea
cmpsb
scas
fucomip
pop
mov
push
cmp
add
mov
inc
in
jecxz
call
jp
loop
push
ret
in
add
mov
mov
xchg
imul
xor
pop
inc
out
mov
pop
mov
mov
faddl
push
hlt
mov
inc
add
pop
xor
cltd
cmp
lret
push
add
ljmp
rolb
mov
pop
jl
inc
inc
and
in
out
sub
nop
push
pop
pusha
enter
inc
cmp
add
aaa
push
or
push
dec
or
scas
insb
mov
loop
add
push
call
cs
cli
mov
into
adc
aas
jg
loopne
popl
pop
xchg
jecxz
jmp
dec
inc
inc
jp
aas
push
adc
mov
adc
cld
sub
repnz
les
xchg
or
test
cmp
dec
dec
cmp
adcb
add
jno
mov
hlt
arpl
add
mov
nop
lods
add
xor
sbb
enter
fadd
dec
or
mov
cmp
push
add
xor
mov
sbb
mov
test
jle
addb
mov
pop
sti
mov
mov
xlat
xchg
lock
push
js
push
pop
add
push
rcrl
xchg
cmp
fdivrl
pop
jecxz
rol
jne
lock
push
mov
in
ljmp
fs
jns
add
notl
push
mov
cmpb
jbe
rcll
jne
in
dec
add
mov
in
add
ja
shll
pop
andb
xor
jo
mov
pop
das
dec
cmpsl
int
pop
dec
jb
xor
sbb
cmc
movsb
imul
add
inc
stos
in
sahf
cmp
arpl
scas
sub
and
sub
pop
push
jbe
cmc
in
add
jmp
sbb
xchg
stos
sar
pop
aas
pop
enter
and
popa
mov
add
pop
jge
add
inc
test
pusha
push
mov
xor
adc
roll
aas
out
cmp
cmp
cmpsl
scas
push
call
icebp
sub
mov
sbbb
rclb
js
movsl
ret
jne
loope
sti
and
iret
mov
xchg
aad
mov
bound
cmp
movsb
int
enter
and
lds
shll
and
imul
inc
or
mov
cltd
orb
xchg
imul
data16
add
lea
test
fdivl
inc
fwait
add
add
popf
cmp
add
int
dec
jo
sbb
add
jne
in
add
adc
jb
cli
inc
pop
or
add
push
sbb
jnp
out
lret
sti
jp
jo
adc
cli
pcmpgtw
add
stos
insl
int3
xor
add
pop
and
pop
shlb
and
add
enter
or
push
push
cmpsl
ret
pusha
sub
sbb
lods
cmp
gs
lcall
add
push
and
bound
add
loop
lret
push
ljmp
sahf
repnz
mov
sti
fistpll
out
sub
rorb
lds
hlt
ror
add
pushf
add
pop
push
rcrb
aam
incb
adc
adc
add
lds
out
mov
lret
pop
call
sbb
insl
lock
stc
daa
je
mov
pusha
xor
bound
inc
xchg
jno
mov
lahf
dec
sbb
add
pop
daa
lock
aam
mov
adc
roll
movsb
adc
aas
rcll
int
cmp
adc
inc
push
add
pusha
add
push
clc
movsl
cmp
add
adc
jo
les
add
adc
js
insb
addr16
or
dec
stc
xchg
shr
sbb
mov
inc
add
xor
xor
scas
cmp
add
pusha
jg
adc
nop
inc
add
mov
xorl
inc
mov
add
insb
mov
add
rorb
add
push
into
cli
adc
negl
xor
les
shl
pop
inc
xchg
test
or
mov
add
pop
cmc
add
inc
push
push
push
repz
outsl
pop
and
insb
add
xchg
call
add
je
xor
cmpsb
add
sbb
xchg
idivb
and
imul
lret
inc
in
rol
leave
xor
pop
dec
add
mov
mov
push
roll
jo
mov
movsl
es
and
cwtl
fwait
ljmp
pushl
pop
mov
in
cmp
pushf
sub
sar
mov
cs
daa
lock
pop
or
jae
inc
arpl
xor
adc
inc
add
scas
gs
and
lcall
addb
add
inc
rol
pop
add
dec
int3
inc
jo
add
scas
cltd
adcb
mov
add
and
add
gs
mov
jg
dec
jle
dec
jmp
mov
scas
int
lods
push
inc
loopne
and
pop
rorl
add
lods
ja
movsb
mov
jb
push
pop
mov
sarb
in
or
sub
xor
bound
das
mov
mov
add
lahf
cmp
mov
cmpsb
add
pusha
push
xchg
dec
movsb
js
dec
xorl
pop
movsl
adcb
xchg
xchg
lock
add
loop
mov
xor
dec
dec
nop
pop
adc
lods
fisubrs
push
clc
loope
and
xchg
ss
sub
add
adc
jno
shrb
je
or
insl
loop
add
pushf
dec
sub
dec
pop
ret
pop
ds
lock
cmp
icebp
add
adc
sahf
test
ret
mov
andl
leave
mov
loopne
lahf
into
aas
in
roll
scas
sub
mov
xchg
mov
sti
dec
std
pop
not
fldl
ljmp
mov
pusha
xchg
mov
push
shl
popa
add
icebp
push
mov
out
push
loope
adc
mov
fdivr
mov
inc
add
ret
or
sarb
add
jl
repz
and
int
add
out
add
and
fcmovnb
xor
iret
cmp
lea
and
add
aad
push
pop
sbb
or
mov
scas
sub
add
push
aaa
mov
add
mov
add
inc
jmp
mov
std
xor
add
loopne
pop
push
ja
add
lock
pop
add
mov
mov
scas
dec
nop
sub
push
aaa
cmpl
pop
cmpb
fld
pop
movsb
sub
push
sarb
fiadds
cmp
mov
inc
jmp
jmp
push
dec
mov
push
lret
loope
inc
add
ljmp
sbb
data16
imul
mov
rcll
lcall
insl
dec
dec
inc
xchg
sbb
rolb
sti
or
pop
dec
mov
sbb
push
outsl
xor
xor
xor
mov
xor
xchg
add
mov
iret
pop
stc
sub
int3
fisttpl
call
mov
sbb
mov
rcrl
adc
add
inc
ds
mov
jmp
jg
orps
or
add
dec
insb
pop
pop
xchg
cmp
pop
ja
jns
mov
rcrb
or
fiadds
push
xor
dec
lsl
mov
inc
shlb
pop
mov
sub
loopne
ret
shl
add
dec
push
and
sub
dec
xor
neg
sbb
ljmp
mov
xchg
mov
mov
fsin
movsl
pop
jl
xchg
mov
sbb
or
into
add
sbbl
outsb
and
prefetchwt1
or
fsts
push
dec
push
mov
or
shll
sub
sbb
out
add
jo
pushf
inc
cmp
enter
add
fistpll
lret
testb
adc
sahf
dec
ret
decb
out
xchg
mov
cmp
fsubs
dec
add
call
inc
sti
adc
imul
jae
lcall
cmp
inc
push
das
and
ret
adc
outsb
push
clc
leave
repz
jecxz
add
arpl
pushf
aaa
mov
xorb
adc
aas
ljmp
xor
aam
mov
xchg
inc
push
cmp
repnz
mov
jne
or
push
cmp
mov
dec
ljmp
lods
sahf
add
addr16
cmpsl
fiadds
add
cmp
add
and
dec
rclb
lret
adc
shll
cmp
mulb
out
or
add
pop
add
add
add
ja
fsubrs
xchg
xchg
inc
aas
or
loopne
sbb
sbb
jg
jge
mov
lret
jb
cmp
add
aas
insl
int
mov
in
pop
mov
push
loope
clc
add
leave
jae
push
mov
push
jp
out
xor
jl
outsl
sbb
lock
mov
pop
loope
sarb
xlat
jp
push
rcrb
jle
xchg
xor
cmp
out
add
in
or
jae
push
add
repz
cmpsl
ss
adc
int3
mov
add
add
push
outsb
push
mov
mov
push
add
imul
push
les
add
mov
lcall
sub
sahf
sub
loope
mov
mov
imul
stos
popf
mov
repz
lods
and
push
test
mov
je
mov
dec
loope
stos
xchg
mov
cmc
inc
pusha
cmp
aas
jl
add
cmp
cli
xchg
cmp
and
movb
das
and
inc
lahf
jmp
enter
dec
inc
js
mov
adc
loopne
ss
or
cld
mov
leave
and
mov
push
roll
mov
add
sub
in
sti
cwtl
or
fiadds
adc
fcompl
pop
push
jns
stos
mov
or
mov
shlb
sbb
add
xor
std
in
loope
push
pop
adc
movsb
subb
push
xchg
leave
mov
pushf
ds
int3
aas
inc
sbbb
roll
rorl
xchg
sbb
jg
mov
negb
das
mov
call
jne
add
repz
push
aad
scas
push
xchg
add
outsl
xchg
ja
imul
and
mov
sub
out
inc
nop
and
ljmp
ret
loopne
mov
add
pop
andb
add
cmp
hlt
add
or
roll
movsb
and
jecxz
jl
mov
sbb
adc
jmp
lcall
xor
inc
imulb
mov
out
std
push
jno
pextrw
dec
jg
and
cld
jne
inc
add
je
adc
push
mov
mov
xor
dec
mov
fists
sub
sub
fidivrl
mov
xor
add
fwait
add
ljmp
cli
icebp
adc
add
inc
ljmp
xor
hlt
push
add
loope
pop
test
mov
mov
add
pop
pushf
cmp
sbb
orb
into
add
xchg
cmp
rol
lods
add
add
cmp
out
push
rcrl
ficoml
leave
push
push
mov
push
inc
into
arpl
pop
fidivrl
xorb
adc
lea
sarl
add
jb
dec
add
incl
or
jns
insb
bts
fnstenv
pop
and
popf
in
adcb
fsubrl
inc
sbb
mov
lahf
add
pop
cmp
les
aaa
sub
test
rcrl
push
mov
jne
add
rcl
js
dec
lods
fnsave
dec
push
inc
add
sbb
int
imul
xor
add
push
cmp
bound
fildl
fsubrs
hlt
repnz
or
adc
cld
or
aas
out
cwtl
add
mov
pop
and
lea
pop
adc
add
sbb
fwait
add
out
cmp
add
js
clc
dec
xor
std
dec
ficomps
popf
xchg
or
js
in
arpl
fisubs
bound
notb
out
inc
xor
or
into
add
inc
xor
mov
ja
icebp
cmpsb
jecxz
pushf
dec
push
jbe
mov
push
add
mov
jns
push
add
xchg
insb
roll
add
jbe
pop
add
mov
es
add
into
scas
xor
es
stos
or
in
mov
cwtl
data16
xchg
int3
xchg
xor
dec
imul
xchg
or
jno
bound
negl
in
add
pop
jb
and
xlat
sub
rcr
pushf
jae
mov
jns
pop
fcoms
movsb
mov
add
jmp
je
mov
jbe
pop
mov
dec
dec
add
into
sub
push
stos
pop
dec
xor
adc
mov
add
adc
or
pop
fistpll
add
sub
xor
mov
xchg
repnz
jmp
xor
push
add
sbb
and
int
mov
xchg
test
pop
add
fbstp
push
push
cmp
mov
pop
sbb
adc
out
adc
into
shl
popa
cmpb
jge
out
adc
cmp
std
out
xchg
in
add
pushf
sbb
cmp
or
jo
mulb
xor
jnp
not
mov
andb
cs
sbb
and
add
dec
adc
shlb
js
dec
pop
bound
push
dec
insb
mov
dec
jno
js
pop
cmp
and
sbb
push
add
cs
lods
add
or
pop
adc
js
cwtl
cmp
jns
sub
jmp
push
scas
add
in
ret
cmp
aas
imul
dec
data16
cmc
add
popf
rolb
add
xchg
mov
inc
add
and
out
ret
xchg
pop
pop
push
icebp
or
add
adc
aad
push
stos
test
out
ret
sub
pusha
mov
dec
jae
jmp
scas
add
rorl
pop
xor
ds
xor
push
add
sbb
pop
push
fiadds
je
xchg
push
add
jae
sbb
dec
pop
xchg
roll
add
and
into
xor
inc
adc
adc
nop
cmp
out
mov
inc
adc
repz
dec
xchg
add
in
in
mov
add
jne
add
fmuls
push
insb
pop
mov
je
imul
jnp
mov
cwtl
xor
add
xchg
enter
pop
mov
xchg
or
sti
push
fadds
shrb
call
movq
jne
jns
add
data16
add
push
jo
enter
mov
imul
movsl
aam
dec
rcr
mov
and
sahf
mov
jecxz
dec
add
out
jp
add
xorb
out
push
sub
jle
push
and
addl
add
mov
addl
stos
test
adc
out
add
jb
test
sub
add
and
int
jo
mov
cmp
cs
sub
xor
sbb
cmp
xlat
jmp
cmp
cmpb
movsb
xor
add
stc
and
mov
shlb
push
punpckhdq
std
mov
inc
jl
into
sub
add
sub
repnz
cmp
and
pop
in
scas
rcrl
movsb
and
sbbb
jne
fs
cs
or
popa
fisttps
mov
loopne
push
add
cld
push
add
aam
es
sbb
cmp
xor
mov
ror
add
mov
lods
jmp
out
inc
push
rclb
inc
xchg
add
aaa
shr
in
jno
add
enter
lcall
jae
sbb
jge
sub
les
dec
dec
push
loopne
mov
subl
xchg
push
sub
push
and
push
inc
cmpsl
scas
mov
add
sbb
or
adc
outsl
jb
mov
mov
int
and
xor
int3
jo
fsubrl
ds
loopne
mov
fisttpl
movsl
loop
cmp
fs
dec
addr16
mov
mov
fistps
or
cmpsb
add
inc
dec
loop
jbe
mov
idivb
pop
pushf
aad
inc
add
pop
sti
cmp
add
insb
adc
inc
pop
lea
mov
jle
mov
aas
add
mov
sbb
add
rolb
mov
test
mov
or
push
xchg
push
nop
jnp
push
in
cmp
add
ss
sbb
stc
sub
xchg
push
sub
cmp
or
clc
ss
jae
lea
mov
jecxz
adc
aas
add
and
dec
inc
and
aas
rolb
xor
imul
nop
sbbb
adcb
jmp
push
inc
push
sbb
jae
add
xor
mov
nop
dec
mov
push
add
jmp
clc
add
insl
or
or
xor
jo
shrb
cs
sahf
pop
jg
sbb
daa
cmc
add
roll
xchg
lea
ljmp
inc
inc
xor
mov
pop
int3
or
int3
mov
jns
in
mov
fnstcw
add
std
dec
mov
pop
popa
inc
or
mov
dec
jne
cmpsb
js
pop
sub
sbbl
adc
arpl
loop
add
jae
in
mov
cmp
push
mov
lock
xsave
xor
dec
mov
lods
and
das
inc
add
pop
lock
lods
push
pusha
in
fwait
add
shrb
dec
xchg
or
and
loopne
add
jne
ja
add
mov
push
add
fbstp
xchg
xor
add
dec
mov
add
sub
lahf
mov
add
sub
mov
and
icebp
jae
test
mov
inc
pop
inc
test
aam
sub
loop
cltd
add
inc
jg
sar
imul
add
ficomps
add
inc
jmp
push
xorb
cmpl
sbb
cmp
add
mov
sub
xor
mov
int3
jne
nop
pop
mov
fiaddl
test
bound
sahf
movsb
add
pushf
pop
shrl
add
lea
pusha
jge
add
xchg
xor
pop
test
sbb
addr16
sbb
mov
orb
rorl
add
and
dec
pop
push
xchg
xchg
js
xor
inc
insb
cmp
pop
xor
sbb
jns
out
xor
pop
mov
add
sub
inc
incl
loope
stos
sbb
jbe
divb
push
xchg
push
mov
xchg
sub
popf
jne
stos
pop
adc
jnp
pushf
sub
add
jb
insl
add
push
shr
push
rol
cmp
sahf
insb
in
rol
cmp
insl
jl
mov
jge
and
mov
cwtl
aas
xchg
sub
cmpsb
sub
roll
cld
ss
cltd
nop
dec
push
push
out
dec
mov
mov
test
hlt
call
add
pop
sarl
fnstsw
cltd
ret
outsb
pop
push
lret
stos
xor
jo
and
add
pop
xchg
dec
add
lea
daa
sahf
loopne
push
add
imulb
jge
cmp
xor
into
mov
or
clc
add
jnp
cmp
xorb
scas
sbb
add
cmp
leave
ret
out
and
dec
data16
inc
add
stos
test
dec
inc
cmp
ret
scas
or
push
mov
nop
std
push
mov
inc
sbbb
imul
test
push
sbb
mov
pop
mov
sbb
rclb
mov
test
out
pop
jns
add
je
jne
fstps
add
hlt
pop
mov
sub
nop
aaa
fisttpl
add
out
jnp
iret
pusha
mov
push
mov
pop
addb
and
icebp
push
add
lods
mov
addr16
shrl
cmp
mov
daa
and
fdiv
xor
add
xchg
mov
sahf
ret
add
or
stc
mov
jnp
mov
xchg
add
push
clc
dec
cwtl
fnsave
cmpb
or
cmp
hlt
les
scas
adc
dec
jecxz
add
idivb
xlat
xchg
pop
mov
lcall
addb
push
test
mov
aad
mov
add
fnsave
add
cmp
dec
sbb
xchg
cmp
imul
adc
ds
testb
add
cmp
inc
mov
leave
push
cmp
xchg
subb
jae
push
sarb
add
aaa
push
mov
push
add
mov
nop
repz
adc
inc
or
cmpl
out
out
js
jl
push
dec
dec
jp
movsb
rolb
mov
imul
repz
andl
push
test
sbb
jge
scas
add
pop
loop
cmovo
ss
mov
lock
add
repnz
add
mov
movsl
lret
mov
stos
das
mov
pop
adc
add
hlt
dec
sahf
push
mov
mov
adc
aam
aas
and
cmpsl
pop
pop
pop
mov
push
stc
les
loope
cmp
loop
pusha
push
push
cld
sbb
add
les
add
stos
add
int3
pop
lods
leave
out
lcall
cltd
jmp
and
jbe
call
mov
lret
movsl
setl
sub
pusha
sub
mov
and
popf
add
xchg
push
push
fcom
testl
pop
insl
inc
mov
cmp
out
loopne
inc
lock
add
test
push
gs
sbb
pop
push
adc
jl
mov
cld
scas
or
add
push
aas
jg
cmp
nop
into
or
or
cmp
add
icebp
lods
shrl
cmc
insl
add
in
out
add
cs
adc
pop
or
adc
cmp
mov
add
cmp
out
pop
ror
sub
xor
adc
pop
rorb
sbb
leave
movsl
add
mov
out
push
add
sbb
jmp
mov
js
mov
jp
sbb
push
mov
call
mov
ja
call
das
add
add
inc
fdivrp
mov
or
add
pop
aaa
fidivl
aas
jp
shrl
mov
mov
add
scas
mov
jp
popf
fwait
bound
add
loop
jbe
mov
fiadds
mov
adc
mov
cmp
cmp
or
js
fs
push
fadds
loope
pushf
test
push
pop
stc
insb
mov
mov
sbb
or
add
cmp
in
aaa
add
fcoml
pusha
pop
mov
mov
arpl
mov
mov
add
pop
dec
push
pop
lret
cld
add
lcall
push
ljmp
outsb
or
adc
js
sti
cwtl
adc
arpl
sub
inc
push
insb
ret
sti
negl
dec
add
xor
cmp
sub
pop
adc
fwait
inc
ret
xchg
xchg
shll
mov
repnz
dec
fisubrl
push
pop
pop
xchg
sbb
push
jecxz
imul
or
adc
add
jl
push
cwtl
in
pop
int3
add
ja
mov
mov
imul
scas
test
aas
add
push
jae
mov
add
hlt
xor
lret
sub
add
xorb
sti
scas
adc
clc
push
pop
pop
pop
rcll
fprem
dec
mov
shrl
call
sbb
fisubs
inc
push
mov
je
cli
ljmp
mov
aas
scas
adc
lcall
iret
mov
adc
cmp
out
cwtl
adc
add
lahf
inc
adc
xor
inc
ds
out
pop
xor
cmpsb
inc
adc
add
pop
and
loop
inc
xor
add
mov
xchg
mov
mov
sbb
out
sti
ret
or
mov
pop
mov
fcmovb
fadds
push
test
and
mov
add
fld
jb
add
cmp
cmp
dec
mov
jg
pusha
mov
or
sarl
rcl
stc
js
mov
mov
xchg
mov
pop
out
iret
shrd
inc
ja
pushf
and
xor
and
jnp
rolb
mov
mov
out
push
push
push
adc
jle
jo
push
adc
out
popa
movsb
outsl
or
les
sbb
stos
enter
ljmp
or
lret
test
jns
lods
cmp
push
cmpsl
aas
sub
cwtl
mov
std
movsb
loope
jnp
icebp
mov
test
bound
inc
xor
cwtl
adc
cwtl
arpl
xor
lret
lock
cmp
inc
dec
mov
jne
dec
stos
sbbb
push
shll
aas
lock
test
loope
loop
xorb
inc
je
or
cmp
dec
add
xchg
adc
jle
hlt
popf
cmp
mov
bound
sar
jle
and
add
inc
mov
stos
js
push
cmp
xchg
dec
sub
and
fs
adc
sub
pushf
xor
mov
icebp
enter
int3
inc
or
outsl
stc
sahf
pop
js
cmp
fistl
rcrl
sbb
pop
push
test
int3
or
fcompl
inc
jbe
adc
cmp
add
jle
cmp
or
scas
sub
aad
add
movsb
add
add
inc
sbb
adc
ljmp
pushf
and
adc
and
add
idivb
repz
imul
add
xlat
aas
sub
pop
sub
movsl
xchg
xchg
lahf
mov
jb
js
xorl
adcb
cmp
xchg
xor
repz
test
mov
arpl
cmp
sbb
adc
and
xor
lret
and
aam
jmp
inc
jne
enter
enter
popl
mov
xchg
stc
mov
idiv
loope
inc
stos
hlt
repz
add
lods
movsb
imul
mov
aad
stos
jbe
mov
into
jg
je
push
mov
repnz
loope
clc
sub
out
mov
add
flds
nop
mov
test
inc
movsl
or
sbb
push
add
xor
mov
leave
int
add
sub
mov
push
pop
outsl
iret
sbb
push
mov
scas
jno
faddl
sbbb
aam
add
test
fdivs
mov
inc
pop
sub
push
jne
int3
mov
rol
add
mov
sahf
push
cs
fbld
fcmovb
adc
insb
clc
mov
xchg
bnd
arpl
adc
mov
mov
or
stos
fsubr
add
sub
je
call
jg
xchg
lahf
jb
mov
sub
jle
cs
lds
out
int
and
pop
nopl
adc
pop
xlat
push
sub
pop
sbb
add
dec
repnz
push
push
jmp
cmp
bound
pop
shrb
push
loop,pt
int
sbb
or
cs
mov
icebp
add
mov
mov
jecxz
add
outsl
add
stos
test
xor
add
sub
popf
shlb
adc
outsl
sub
mov
rcr
inc
or
sahf
jl
pop
and
ffree
ds
ss
push
cmp
dec
push
aaa
flds
add
xchg
aas
inc
mov
jmp
insb
and
or
mov
xor
shlb
and
jne
add
xchg
shlb
add
pop
sub
dec
and
adc
pop
ljmp
sbb
pop
adc
add
pop
mov
repz
in
add
mov
lret
test
xor
or
sbb
mov
in
adc
or
lds
cmp
inc
rclb
ret
call
out
add
jle
add
ret
add
cmp
or
pop
out
cli
aam
pop
lret
lods
adc
xchg
nop
lds
mov
cmpsl
sbb
mov
mov
sbb
out
shl
frstor
arpl
push
cmp
sub
cmp
insl
dec
roll
cmp
cmp
jecxz
cmp
add
stos
mov
pop
sub
xchg
push
orb
std
int3
shll
pop
add
and
mov
push
mov
int3
add
ret
sub
push
mov
out
inc
pusha
xchg
divb
push
pop
or
lcall
push
jb
mov
add
xor
push
mov
mov
decb
sarb
pop
inc
mov
call
imul
ss
add
test
scas
rclb
loopne
cmc
andl
or
mov
lock
mov
sbb
jo
mov
cli
inc
sub
xor
rol
jecxz
and
stc
mov
rcrb
push
pop
add
in
xchg
scas
jecxz
push
mov
and
xchg
sub
inc
cld
add
sub
pushf
int3
loop
sub
cmp
add
cmc
add
push
out
mov
imul
enter
add
mov
xor
scas
popa
movsb
or
xchg
mov
addl
inc
push
movsl
xchg
add
lds
call
cmp
cmpsb
shlb
pop
inc
jbe,pn
fdivrs
dec
mov
jb
jg
and
add
pop
cmc
xor
jne
sub
add
out
scas
xchg
adc
add
aas
ss
pop
mov
dec
addb
enter
push
ret
outsl
rcrl
pusha
dec
faddl
inc
cmp
int3
add
xchg
mov
push
adc
addb
inc
sub
pusha
inc
cmp
xor
xchg
fucom
sarb
mov
rolb
or
sub
push
inc
pop
inc
enter
fldenv
mov
cmp
or
jle
ret
pushf
pushf
rolb
ss
push
in
iret
int
movsb
add
out
push
stc
sbb
inc
add
hlt
xchg
dec
rolb
add
push
and
cld
jbe
fisubrs
imul
sub
add
insb
shl
orb
jno
mov
mov
cmp
lock
add
pop
and
cltd
pop
fdivs
add
xor
into
mov
jae
test
insb
adc
add
clc
aaa
movsl
dec
daa
pusha
mov
xor
or
push
add
sarl
test
jb
or
sbbl
sub
ss
jp
mov
aaa
xchg
or
pop
add
xor
and
imul
add
mov
notl
dec
dec
add
loope
mov
or
das
push
xor
gs
xorb
pop
sub
xor
xchg
loopne
sbb
push
rcrl
roll
mov
adc
add
lods
daa
push
pop
cmp
ljmp
push
fstsw
sub
fisttpl
mov
push
arpl
lds
inc
or
xor
adcl
in
mov
xchg
pop
xlat
add
or
rorb
pop
insb
cmp
incb
cmp
lock
inc
loop
icebp
add
sbb
sbb
outsb
jns
add
test
pop
jg
lock
hlt
test
jo
stos
das
mov
in
add
mov
xor
mov
fadds
jmp
xlat
fidivrs
mov
les
sbb
sbb
or
mov
lds
rol
push
js
je
cwtl
adc
inc
mov
add
shlb
push
add
push
sarb
add
sub
xor
fwait
movsl
add
ja
inc
outsb
sbb
mov
push
rcrb
push
xchg
add
mov
notb
cmpsb
cs
adc
jle
add
sbbl
fistpll
mov
iret
xor
ret
incl
aaa
cmp
and
xor
push
jo
and
cwtl
sbbb
inc
sub
or
sbb
lods
push
sbb
pop
xor
add
xor
push
dec
sbb
mov
xor
fs
das
filds
insb
call
cmp
cmp
clc
push
and
popf
xchg
add
adc
mov
les
mov
aas
es
mov
icebp
mov
push
mov
adc
fiaddl
loopne
or
andl
into
add
and
lock
shl
test
push
das
add
xchg
jl
inc
punpckhdq
adc
loopne
inc
hlt
adc
pop
pop
sbb
imul
out
add
nop
push
dec
xor
lock
jns
fwait
add
xchg
and
push
add
pop
ds
shl
out
sbb
xchg
fxch
mov
or
add
in
dec
adc
add
mov
inc
mov
cltd
rcrb
pop
cld
inc
cmp
aad
inc
cmp
push
enter
add
cmp
lcall
rorb
cmp
jo
xlat
add
out
psubd
pop
dec
jne
dec
verr
ds
xchg
mov
dec
bound
int3
aad
pop
movsl
hlt
push
pop
jg
xor
push
add
ljmp
jb
cmc
add
add
sbb
mov
pop
cwtl
cmp
movsb
sahf
ret
pop
push
mov
xchg
pushf
imul
adc
cmp
lods
adcb
dec
add
cs
inc
lea
das
fimull
in
test
or
push
pop
add
push
jle
dec
cmp
lods
aaa
mov
pusha
add
lcall
mov
xor
es
aas
mov
clc
cmp
aam
dec
xchg
loopne
fdivrl
enter
push
test
data16
mov
imul
pop
add
nop
pop
out
aaa
fildl
or
clc
sbb
clc
cld
push
dec
add
jecxz
mov
mov
lahf
test
insl
cmp
aaa
hlt
mov
mov
mov
imul
adc
aaa
sahf
addb
sub
es
cmp
lret
mov
inc
pop
subl
adc
pop
loope
addb
std
mov
popf
add
mov
rcll
mov
pop
xchg
add
adc
jg
out
js
add
sub
aam
add
mov
xchg
dec
test
and
inc
rcll
mov
rolb
jo
test
shr
pop
push
ficompl
add
push
dec
mov
sbb
cmp
xchg
in
pop
int3
imul
sbb
jge
or
rolb
add
je
and
cmp
fimuls
movsb
mov
imul
cmp
mov
and
adc
push
dec
xor
xor
pusha
sbb
or
push
insb
cmpb
adc
sub
out
and
xor
imull
mov
shll
fadds
cmc
xlat
sub
jo
lret
movsl
adc
add
into
dec
les
xchg
and
jge
mov
out
scas
inc
xchg
ljmp
mov
addb
bound
out
and
dec
sbb
nop
mov
leave
fdivp
jl
sbb
jle
sub
lock
arpl
jg
add
cmp
inc
xchg
or
push
and
add
ljmp
std
sub
add
mov
sub
inc
cltd
adc
insb
or
psubusw
xor
push
add
cmpsb
add
pop
outsl
xchg
jecxz
mov
mov
fdivrl
lods
icebp
xlat
cld
mov
or
jo
outsl
jno
push
out
out
lret
or
mov
call
xor
fnstcw
mov
mov
pop
into
pop
jl
arpl
dec
mov
frstor
inc
push
dec
stos
incl
jae
cmp
subb
dec
mov
mov
adc
in
adc
int3
insb
cld
sub
xchg
xchg
and
pop
adc
add
cld
icebp
sbb
pop
cmpb
inc
in
xor
ret
or
sub
mov
pop
xor
movsb
cwtl
sbb
xor
popf
add
inc
pop
sbbb
xchg
adc
dec
inc
inc
sub
dec
mov
cwtl
sub
cmp
repz
jl
arpl
mov
stos
in
je
mov
pusha
mov
rolb
cmp
ja
adc
repnz
mov
jne
push
rcrl
rolb
mov
fwait
cmpsb
out
pop
mov
adc
jne
add
or
cmp
cmc
xchg
cmpsl
push
xor
mov
add
pop
imul
push
cmpsb
push
inc
mov
pusha
popf
pop
push
xchg
loop
pop
lods
add
cld
and
dec
dec
add
dec
jne
es
mov
add
in
add
or
leave
int
and
cmp
pop
sub
lds
cltd
sbb
mov
mov
dec
sbb
sarb
lods
mov
adc
mov
nop
xor
mov
jle
add
mov
dec
sbb
call
ja
adc
xchg
pop
out
sub
push
stos
or
int3
std
adcb
add
mov
xchg
sar
gs
pop
or
sub
inc
jl
inc
sbb
in
fs
mov
xchg
add
xor
cmpsb
cwtl
add
or
add
cmp
enter
inc
cmpsl
jnp
shll
jb
add
hlt
fidivl
sbb
mov
lret
cmp
cltd
inc
xchg
fst
sbb
lods
dec
cli
mov
aas
popa
dec
xor
add
xor
movsl
add
inc
add
adc
add
pop
jb
movsl
orb
cmpb
cli
xlat
sub
push
inc
bsr
sub
push
fiaddl
shrb
out
xor
xor
lds
nop
cli
mov
cmpsl
add
mov
mov
fadds
popf
and
xchg
scas
nop
fcmove
fs
dec
and
mov
mov
cli
int
fnstcw
orb
aas
add
data16
cld
lea
push
xorb
cs
shll
das
test
cwtl
pop
cmp
and
inc
shrl
in
pop
std
movsl
mov
pop
cmp
jmp
xchg
jle
ja
pop
call
dec
das
cmp
iret
sti
add
mov
or
fsubr
add
pop
jle
movsl
int
cld
divb
push
add
xchg
sbbl
mov
cld
mov
pop
sub
push
add
faddl
mov
or
dec
cmpsb
mov
cmp
mov
sub
enter
or
pop
or
sbb
lret
push
ljmp
outsb
pop
or
mov
mov
adc
mov
xor
xchg
jo
dec
insb
push
add
jl
pop
or
in
addl
adc
xor
rclb
add
outsl
xchg
stos
inc
add
add
fbstp
ds
loop
add
popf
test
adc
xchg
insb
pushf
addb
mov
mov
or
stos
in
fdivrl
add
xchg
test
xchg
clc
stos
inc
push
add
test
add
mov
cmp
add
in
daa
cmpl
imul
test
push
int3
lock
dec
mov
mov
cwtl
cmp
ljmp
into
adc
cs
ss
add
or
xlat
lret
testl
in
je
test
mov
sahf
stos
shr
xor
push
jmp
subb
add
dec
add
repz
add
mov
jle
and
cmpsl
jp
insb
cwtl
dec
in
call
loope
add
bswap
sub
adc
int
aad
add
and
cmp
adc
fld
dec
cmpsl
sbb
testl
pop
push
jne
cmp
test
cmc
mov
fwait
aam
cmp
ss
add
sub
add
pminub
jbe
mov
mov
and
leave
mov
clc
outsb
out
cmp
add
push
aam
loop
jnp
imul
cmc
shll
push
or
out
lret
xchg
stos
sub
out
cld
aas
cltd
mov
and
sbb
adc
int
mov
dec
mov
lods
mov
and
adc
movb
aaa
pusha
hlt
xchg
es
xchg
addr16
sub
adc
or
dec
dec
aam
stc
pop
mov
pop
adc
add
imul
or
add
ljmp
imul
and
lahf
add
push
shll
xchg
lret
mov
sub
les
sub
gs
sbb
jns
lahf
xorb
sbb
mov
jb
ljmp
ret
nop
fs
sub
pusha
jae
mov
lgs
jp
addl
add
jg
jmp
scas
imul
xor
lock
popa
mov
adc
sbbl
adcl
xlat
dec
push
fsubrs
sbb
mov
nop
sbb
mov
xor
adc
cmp
mov
aam
insb
and
out
mov
adc
jge
sbb
push
mov
mov
and
loopne
addb
or
inc
jle
call
mov
int3
je
add
mov
cmp
cld
daa
adc
lret
jno
adc
fiadds
and
adc
jnp
incl
scas
mov
add
mov
movsl
add
mov
or
push
cmpb
xchg
push
fisubrl
push
xchg
add
dec
and
outsb
add
mov
jmp
fwait
mov
pop
jl
push
and
push
cli
popf
jle
adc
add
loopne
aas
lahf
lock
inc
roll
sahf
gs
movsb
pop
test
dec
push
mov
movb
fs
out
loope
xchg
ficomps
add
inc
cmpsl
les
mov
insb
aam
push
push
dec
mov
pop
add
inc
and
fadds
scas
in
push
loop
push
jp
add
fidivs
jmp
stc
hlt
pusha
loopne
jnp
add
adc
jge
sbb
xchg
fistl
cwtl
std
movsb
sub
maskmovq
idivl
mov
sbbl
push
adc
mov
xchg
xor
insb
xor
das
inc
aam
jge
jl
or
dec
add
add
mov
iret
sbb
mov
scas
mov
cmc
loopne
add
lea
jae
ja
bound
lcall
mov
sti
add
jp
sub
add
imul
jp
add
inc
xor
pop
xchg
ret
lret
mov
mov
repz
xchg
mov
rcll
std
inc
adc
mov
mov
iret
jbe
shll
sub
jl
clc
push
mov
lret
add
call
inc
pop
sub
add
xor
aam
outsb
jns
ror
sarb
add
popa
and
pop
fistps
sub
in
ret
sti
pop
pop
movsb
cwtl
jge
mov
pop
dec
add
fwait
add
sub
in
nop
and
mov
addl
out
mov
pop
pop
jbe
mov
inc
or
das
faddl
xchg
xor
cmp
and
cwtl
inc
sub
mov
dec
test
int
adc
jge
and
xchg
out
pop
mov
xor
movsb
shlb
cmp
add
xchg
xor
lahf
sub
jg
in
mov
insl
ret
movsb
lea
xor
sahf
xchg
add
js
sbb
xchg
add
idiv
fisttpll
mov
mov
test
adc
lret
sbb
mov
mov
xchg
push
adc
push
inc
ror
out
pop
add
bnd
adc
mov
dec
inc
fadd
insl
in
add
adc
aad
cmp
aaa
sarb
aas
jno
pop
dec
inc
push
add
nop
mov
call
testl
sahf
shll
add
pop
mov
cs
enter
jl
in
mov
dec
mov
sub
pop
jno
or
enter
sarb
fistpll
sub
ret
mov
mov
cld
pop
mov
inc
imul
jl
lods
inc
je
push
sbb
and
psubd
lods
in
xchg
hlt
adc
pop
mov
sbb
pop
push
or
pop
push
jmp
fadds
stc
sbb
xor
daa
pop
add
addr16
adc
orb
cmp
daa
add
or
jl
repnz
pop
lds
test
fmuls
imul
add
dec
adc
hlt
mov
jl
sahf
lods
cmp
xor
pop
mov
js
and
mov
or
push
std
or
or
mov
movsb
lahf
addl
mov
in
into
push
nop
fsubp
pop
add
sub
rclb
jecxz
ja
dec
je
or
imull
adc
sbb
jecxz
mov
cmp
dec
rolb
mov
sbb
nop
xchg
mov
push
add
cmpsl
pop
incb
insl
test
sbb
scas
mov
mov
inc
dec
dec
add
jg
idivl
xchg
mov
xchg
jno
cmc
pusha
or
add
pop
add
inc
mov
cmpsb
sbb
int
shlb
inc
cli
mov
pop
dec
rol
and
jo
daa
mov
add
es
add
cmp
lcall
add
or
lahf
push
cmp
push
inc
std
enter
shl
mov
or
shlb
sub
cmp
pop
sbb
mov
add
and
imul
icebp
add
jns
icebp
push
push
add
lock
inc
enter
aas
add
xor
add
mov
movsb
add
mov
test
iret
sbb
sub
pop
daa
aam
and
ss
sub
dec
xor
mov
adc
pop
mov
cmp
xor
call
lcall
sahf
or
adc
out
or
and
pop
std
add
add
enter
jns
inc
add
movsb
adc
paddw
xor
pop
sub
jnp
push
loope
push
cmp
idivb
push
cmp
lret
xor
pop
cwtl
dec
cmpxchg
pusha
push
out
mov
add
sub
int
rcll
xchg
sub
inc
add
inc
test
and
inc
xchg
lahf
inc
push
pop
pushf
pop
arpl
add
jecxz
repnz
mov
hlt
cmc
in
loopne
add
lods
js
push
adcb
stos
jp
pop
xor
dec
or
testb
out
sub
rorb
mov
dec
or
jne
pop
je
arpl
ljmp
cli
inc
sbb
pushf
jecxz
mov
icebp
stos
lock
in
push
out
cmpsl
xchg
add
es
inc
sar
xchg
stos
xor
jb
das
add
add
and
sub
scas
pusha
push
mov
add
stos
lahf
cli
add
mov
jo
add
or
jmp
add
lods
cwtl
add
jge
adc
xchg
bound
xchg
pop
add
mov
add
leave
ljmp
and
mov
push
jbe
int
jo
jnp
pop
sbbl
out
cmpb
jns
negb
aas
insb
xlat
sub
push
or
hlt
dec
mov
dec
js
ficoml
cmp
mov
sahf
loope
mov
or
or
add
jo
or
add
xor
mov
rol
inc
add
inc
clc
lcall
insb
cmp
jnp
mov
sub
pop
cmp
sbb
mov
movsl
dec
les
mov
clc
jl
pop
mov
inc
xor
jmp
add
mov
test
mov
out
push
loopne
dec
inc
cmp
jp
icebp
adc
xor
das
lcall
cmp
mov
xchg
pop
inc
aas
imulb
jp
add
ds
pop
int
lret
cmp
sahf
or
add
repz
and
add
addr16
dec
je
scas
lods
dec
test
add
subl
dec
inc
dec
pop
cs
test
sub
ret
scas
mov
out
cltd
fs
test
addr16
push
ret
sbb
inc
call
lods
xchg
rcll
mov
push
push
loope
fs
add
jmp
pop
xchg
scas
out
lods
mov
fst
imul
mov
add
cmp
out
or
pop
psrad
ret
add
insl
addr16
cmp
lcall
cmpsb
imul
or
pop
cmp
adc
pop
push
lods
dec
pop
lcall
jl
add
rorb
sbb
faddl
cld
dec
sub
adc
shrl
pop
adcl
jp
shrb
add
add
jl
mov
jg
mov
rolb
fdivrl
xor
test
mov
repnz
add
mov
insl
dec
testl
movb
mov
mov
mov
int
icebp
mov
mov
iret
addr16
xor
cmpsl
add
and
xorl
dec
ret
push
and
es
push
cmpsb
dec
sub
arpl
add
or
shl
push
xchg
add
jne
adc
push
mov
in
stos
jnp
adc
mov
scas
ficoml
inc
clc
push
cwtl
add
add
dec
lock
andb
sub
inc
sbb
ja
adc
push
jmp
push
pop
add
add
gs
cmp
leave
xor
cltd
in
add
add
fwait
inc
repz
dec
mov
rclb
mov
lods
in
roll
xchg
inc
push
scas
add
adcl
cld
call
add
xor
jo
mov
pushf
jne
inc
mov
mov
subl
lods
mov
push
add
cmc
mov
lahf
in
dec
add
dec
pop
fcmovnb
jns
xor
dec
sbb
popa
test
adc
add
notl
mov
repz
inc
popf
loopne
testb
clc
loope
add
xlat
cmp
mov
mov
adc
mov
add
aam
add
cmp
enter
out
iret
add
ljmp
lcall
jmp
fstpt
aas
enter
inc
push
xchg
push
ret
add
into
cmpsb
push
and
scas
jno
adc
outsl
sub
lret
xchg
cmp
pushf
and
add
or
inc
incb
push
add
mov
mov
cmp
sub
inc
mov
test
fwait
aam
ret
push
aaa
nop
scas
mov
add
inc
daa
into
test
jmp
inc
jb
jge
add
sti
pop
sbb
ja
movsl
xbegin
or
cltd
or
xor
fiadds
je
jecxz
push
or
in
cltd
mov
add
repnz
loopne
inc
js
cmc
add
dec
mov
cmp
sub
imul
push
mov
divps
std
pop
mov
mov
jb
lcall
fimull
xor
enter
push
lahf
and
rorb
fldt
cmp
add
loopne
rorb
and
mov
fistpll
or
mov
xorl
xchg
xor
loopne
push
and
dec
pop
arpl
jb
call
cltd
and
pop
pop
clc
cmp
mov
add
adc
pop
dec
or
push
mov
faddl
and
addl
inc
stos
bound
clc
push
mov
jecxz
orb
xchg
jg
in
sub
fs
fiaddl
in
mov
hlt
pop
movsl
add
jbe
ret
aam
sbb
mov
dec
js
add
mov
mov
sub
mov
out
push
mov
incb
lods
fiaddl
lsl
insb
mov
jg
loopne
add
aad
add
shrb
sub
xor
shll
mov
adc
dec
add
sub
mov
hlt
in
push
jbe
fiadds
imul
push
add
sbb
add
jnp
pop
cmp
and
pop
in
or
cmp
push
test
dec
xchg
push
add
or
mov
add
adc
jecxz
mov
jmp
xchg
cmp
add
and
out
enter
push
mov
add
sub
fmul
mov
insb
imul
mov
add
ds
mov
sub
int
mov
add
shrl
push
dec
push
cwtl
maskmovq
imull
cld
push
add
test
adc
cmpsl
add
mov
loopne
jg
js
add
ja
rep
inc
and
xchg
inc
jbe
das
lods
call
mov
rorb
hlt
cld
mov
jmp
dec
push
pusha
fmull
xchg
cmpsb
sub
sarb
add
sbb
mov
outsb
xchg
hlt
sbb
out
andl
pop
popa
ret
push
lds
xor
dec
test
test
xor
add
daa
add
pop
mov
cmp
add
movb
loop
adc
fisttpl
rol
cmpsb
add
loop
cmp
clc
stc
movsl
fnstenv
je
add
mov
pavgb
dec
add
dec
lret
xchg
aad
or
add
movsl
fisubs
les
cmpsl
mov
jge
add
scas
addr16
cmp
iret
or
jge
hlt
lods
out
inc
negb
sbb
cmpb
inc
iret
adc
xor
mov
and
sahf
ljmp
pushl
lret
jne
jmp
mov
mov
jo
mov
std
add
cmp
sub
adc
and
arpl
aas
shl
push
dec
out
cmpsb
sub
inc
mov
cmc
ret
test
sub
cli
cs
mov
dec
add
inc
jmp
add
jg
test
and
xchg
adc
lea
adcl
add
jo
icebp
es
mov
insl
pop
cmp
add
and
add
outsl
dec
lock
jno
ret
and
push
cmpsb
out
mov
mov
jns
sti
cmp
das
sti
xor
push
xchg
push
inc
popa
aad
xor
mov
mov
push
repnz
add
sub
add
lret
fildl
mov
nop
cmp
lea
mov
shl
inc
hlt
or
add
test
add
mov
and
sarb
fdivr
push
aam
test
dec
lahf
mov
fcomps
jne
aas
into
addb
imulb
test
inc
cmp
aad
dec
xor
pop
rcl
and
fadds
cmpb
add
loop
inc
sti
mov
das
add
xor
xor
cmp
add
cwtl
pop
jno
or
fs
cltd
cmp
pop
aad
add
push
sahf
mov
push
mov
fisubrl
mov
jl
add
sub
sbb
imul
jae
shll
inc
cld
popf
jmp
stc
pop
das
dec
push
mov
jne
or
xor
dec
ret
int3
inc
pop
leave
lret
sbb
lods
ljmp
add
stc
int
mov
push
flds
add
cld
sbb
imul
cli
lock
cmpsl
inc
and
cmp
lret
cld
hlt
sbbb
push
shll
add
xlat
jg
inc
sti
out
push
ud0
sbb
mov
loope
cmp
inc
ret
mov
jae
cli
enter
jmp
data16
pop
rcrl
mov
cmp
xor
mov
xchg
adc
mov
inc
xchg
push
sub
jl
sbb
inc
xor
scas
out
add
sbb
addr16
fstps
jne
lret
pop
ficompl
adc
or
andb
or
adcl
cmpsl
dec
scas
jno
lea
jns
mulb
mov
out
popf
orb
cld
pop
add
movsb
stc
add
mov
and
imul
mov
sbb
xchg
clc
scas
ds
mov
add
repnz
add
push
loopne
arpl
sub
mov
pusha
repnz
sub
xchg
xor
dec
rorb
mov
pushf
sarb
pop
in
jb
sub
outsb
dec
sbb
rcll
lret
jge
inc
jmp
bound
shll
test
add
mov
int
xchg
add
out
cmp
popf
push
jmp
pop
jae
ja
roll
push
mov
add
or
sarl
movsl
call
rclb
jb
dec
adcb
and
adc
adc
adc
pop
mov
or
push
lock
call
pusha
bound
mov
xchg
sbb
push
ljmp
xchg
xor
iret
out
and
pusha
sub
fs
and
and
loop
inc
adc
out
outsb
sbb
mov
sub
add
sub
and
pusha
push
stc
inc
shll
and
mov
adc
out
pop
and
jb
loopne
mov
shlb
or
pusha
repz
sub
sahf
push
test
mov
rol
mov
cmp
adc
inc
xor
add
adc
fidivs
cmp
outsl
cmpsb
add
ss
pusha
xlat
sub
xchg
jnp
rcll
and
xor
fwait
cmp
dec
add
addb
adc
and
faddl
mov
mov
add
addb
iret
push
cmpsl
add
test
or
dec
adc
or
inc
cli
roll
mov
jns
ljmp
sub
pop
aad
fidivrs
cwtl
xchg
leave
inc
addr16
js
mov
mov
pop
mov
dec
mov
jnp
mov
sbb
mov
dec
sbb
out
jo
pop
xchg
or
cmc
leave
add
into
scas
inc
roll
rclb
iret
xor
testl
and
dec
fcoml
dec
lahf
add
sahf
lods
mov
test
inc
adc
mov
sub
jb
js
ret
pop
idivl
ret
adc
cmpsb
aad
imul
and
ret
mov
push
sub
pusha
adc
dec
cwtl
pop
lcall
out
or
rorl
mov
mov
rol
inc
pop
nop
test
and
gs
mov
loop
roll
loopne
mov
add
pop
adc
dec
popa
or
jne
cmpsl
ret
sahf
mov
incb
inc
pushf
xchg
popf
push
arpl
push
add
test
jns
pop
mov
or
imul
add
ss
clc
push
pop
enter
push
mov
push
cld
add
xchg
test
dec
insb
addl
jns
push
xchg
sub
lea
lret
and
cmp
xchg
int
jae
mov
and
inc
pop
adc
cltd
and
or
in
pushf
dec
std
inc
or
and
and
sahf
adc
adc
add
fsub
mov
or
and
testl
lods
add
xchg
rolb
pop
cwtl
sti
xorb
roll
sbb
in
jl
cld
leave
adc
push
fdiv
data16
iret
fisttps
add
outsb
in
rol
adc
sbb
pop
dec
fistl
add
rorb
sbb
or
add
mov
jns
xor
das
cwtl
xchg
add
adc
inc
jmp
cmp
imul
cld
jo
mov
lret
mov
fwait
xor
add
jnp
inc
jp
add
std
aas
mov
mov
lods
int3
push
shlb
sub
add
and
dec
add
iret
icebp
div
mov
inc
and
push
add
in
aaa
add
insl
rorb
loope
mov
out
hlt
inc
push
test
add
rcll
mov
lcall
dec
int
mov
add
icebp
or
sahf
push
add
dec
inc
cld
pushf
xor
nop
xchg
pop
and
xchg
push
call
inc
inc
pop
mov
ficomps
rorb
mov
xor
add
xchg
xor
push
scas
les
das
sbb
xchg
pusha
jne
xlat
pop
dec
cmp
sub
orb
flds
sub
lock
lods
and
icebp
dec
ljmp
rcrb
add
cmp
add
dec
movsb
lods
mov
add
fs
add
fwait
das
imull
hlt
push
cmp
gs
mov
and
pop
mov
push
mov
mov
cld
cmpsb
dec
insl
fdivl
int3
sub
idivb
repnz
es
and
xchg
pop
add
and
cmp
outsb
jecxz
mov
xchg
add
out
ss
sub
test
daa
jb
dec
and
jge
push
call
lods
aaa
and
adc
or
pushf
out
push
cs
inc
push
and
push
xor
cld
dec
nop
pop
xlat
inc
push
mov
push
insb
sbb
shrl
push
arpl
add
mov
sub
sbb
cmpsl
add
jb
sub
shl
pop
or
add
lods
add
dec
or
add
outsb
pop
rcl
mov
pop
test
sbbb
xor
sbb
addr16
jge
enter
add
js
ror
mov
cmpsl
sub
fstpl
dec
xchg
and
mov
sti
dec
sbb
in
sarb
add
andb
xor
pop
dec
mov
lods
mov
pop
outsb
jne
push
xlat
out
jge
add
jle
inc
mov
test
movsl
add
jp
into
adc
dec
aad
fsubl
std
nop
nop
add
lock
ljmp
push
xlat
jl
xor
jmp
cmpl
pop
sbb
test
jge
add
inc
lret
inc
add
shrl
add
pusha
add
testl
inc
fstps
or
hlt
dec
cmp
fdivrl
aaa
lea
or
cltd
loopne
xor
outsl
mov
sub
cmp
pop
sub
or
adc
cs
in
pop
mov
aas
xchg
lret
sbb
scas
fbstp
imul
jl
jae
popa
int
or
mov
fnstcw
sbb
jne
stc
add
cmc
lea
outsb
push
movntq
cmp
inc
mov
and
push
pop
popf
in
add
pop
mov
add
adcb
mov
fbstp
int3
add
pop
push
enter
push
rcrl
sub
addr16
test
sub
or
inc
xor
xchg
test
cli
add
mov
push
sub
sub
sarb
sub
mov
add
jns
pop
repz
insb
lret
lods
sbb
push
les
test
bound
mov
and
test
add
incl
out
add
jg
xor
sub
movsb
cmc
cmpsb
hlt
inc
dec
sbb
inc
pushf
add
daa
push
dec
enter
je
lods
add
and
nop
pusha
dec
inc
in
add
push
fildl
and
sti
testl
js
and
xor
lret
cmp
movb
rorb
sub
pushf
pop
add
nop
inc
fwait
cmp
add
sbb
add
rolb
pcmpgtb
mov
push
daa
add
jge
push
inc
adcb
mov
add
std
pusha
lods
dec
popf
add
mov
ljmp
jae
jne
pop
ret
mov
shlb
nop
or
jbe
fdivrs
and
shlb
addr16
fdivp
in
call
data16
test
sbb
repnz
lahf
jne
jge
xor
adc
int3
sbb
xor
adc
in
add
dec
dec
cmpsl
adc
aas
dec
cwtl
hlt
inc
push
sub
mov
rcrb
stc
in
je
and
imul
cltd
xchg
jo
iret
sbb
pop
add
leave
pop
enter
jo
lret
ret
sbb
test
inc
xchg
inc
mov
mov
lods
pushf
xchg
dec
push
insb
jnp
sahf
clc
fwait
cmp
and
dec
mov
xor
call
int
mov
cmp
icebp
cmp
add
popa
sbb
add
jp
fisttpll
mov
cltd
xorb
jnp
mov
stos
add
aaa
popf
fdivr
add
cltd
lea
popa
test
add
xor
sti
or
inc
cld
imul
push
cli
push
hlt
sarb
add
add
jb
add
call
call
lock
add
add
add
stc
cmc
ds
popf
push
mov
loopne
add
aaa
inc
cwtl
jp
adc
cli
add
pop
mov
cmc
shr
scas
popf
push
loope
cwtl
outsl
aam
lret
sub
add
and
add
sub
mov
mov
call
push
inc
dec
and
pop
add
aas
test
cli
add
mov
les
jbe
inc
cs
outsl
test
fisubrs
shlb
pop
sub
mov
test
sub
push
xchg
insb
push
jb
add
xor
sbb
popa
inc
inc
test
rolb
test
ffree
call
repz
pop
sbb
and
fs
inc
leave
sbb
movb
sahf
xor
and
pusha
in
jl
add
mov
mov
hlt
imul
push
out
and
inc
pusha
test
cmpb
gs
mov
push
ds
dec
add
icebp
addb
add
addr16
shlb
cmpsl
mov
cmp
mov
outsl
je
add
cli
ja
iret
xchg
and
or
push
into
inc
enter
push
add
mov
mov
add
mov
shrb
and
adc
push
add
rcll
xchg
cmpb
push
jno
mov
ficomps
add
mov
lcall
inc
mov
xchg
into
push
push
sub
xchg
push
imul
xchg
xchg
add
add
dec
pop
fwait
xchg
mov
cmovp
loopne
ficoms
mov
mov
add
imul
stos
add
or
push
add
popa
cmp
fldz
sbb
push
and
push
xchg
add
mov
xor
jae
mov
hlt
clc
popa
outsb
jecxz
dec
lret
xor
sbb
lods
sub
sbb
icebp
jecxz
add
loope
mov
mov
mov
data16
mov
loopne
and
sbb
push
or
add
jno
mov
ret
insl
inc
in
dec
pusha
add
loope
or
add
into
xchg
pushf
leave
ljmp
insl
sbb
jo
sbb
aas
subb
jns
xchg
dec
in
add
jmp
mov
sub
lret
mull
dec
mov
cmp
sbb
xchg
sub
pusha
xchg
cld
add
insb
ss
mov
scas
or
js
add
jo
cmp
es
aas
stos
jl
out
iret
add
out
add
lret
mov
jge
or
ss
fadds
aas
iret
lcall
and
mov
pop
flds
in
pop
xchg
xor
movsl
popa
loopne
or
cmp
mov
shr
imul
push
cmpl
cmp
pop
jb
add
mov
lahf
les
and
jns
inc
mov
js
sub
or
insb
pop
and
dec
aam
xchg
add
xor
test
add
out
sbb
cmp
mov
movsl
adc
in
xor
fsubp
dec
inc
mov
js
dec
iret
out
jne
jns
or
loopne
ds
push
pop
roll
xchg
mov
rolb
cmp
jmp
and
mov
call
xchg
sub
pop
sbb
sub
rorl
arpl
pusha
jae
pop
xor
add
bound
dec
into
inc
je
pop
and
or
daa
and
add
and
fdivrl
and
loop
lcall
lock
lods
in
add
cmp
add
jl
ss
ror
mov
in
cmc
inc
mov
jmp
mov
pusha
addr16
fimuls
push
sbb
add
lahf
jns
xchg
jge
scas
cmp
push
adc
int3
repnz
out
mov
adc
fs
add
aaa
dec
js
inc
push
push
mov
cmp
test
pop
hlt
xor
adc
leave
sub
adc
cltd
add
imull
pop
pop
aad
xchg
shlb
pop
rcr
add
adc
roll
mov
sti
ret
add
scas
cwtl
push
outsb
loopne
int3
and
add
aad
adc
aad
lock
in
mov
adc
enter
cmp
inc
in
fsubs
mov
inc
xor
rcll
xchg
add
jmp
cmpsl
test
out
das
stos
cmp
pop
mov
cltd
push
fnstcw
mov
push
cmp
cmp
dec
sbb
inc
jb
mov
test
adcl
sub
mov
sbb
add
ror
out
sbb
scas
adc
add
add
fwait
lea
xchg
clc
inc
mov
leave
push
and
jnp
adc
lahf
pusha
sbbl
mov
inc
or
fldcw
cmp
adc
outsb
sbb
andl
and
push
add
nop
in
mov
dec
mov
cli
xchg
dec
cmp
aaa
or
mov
repnz
ficoms
mov
sub
sbb
repnz
inc
cltd
xor
mov
aaa
xor
out
dec
pusha
jp
push
call
dec
mov
jge
add
xchg
add
cld
sub
add
inc
mov
mov
lods
roll
push
inc
xlat
popa
inc
loop
sbb
fnsave
div
add
push
or
stos
jne
or
push
shlb
jp
mov
popa
add
int3
lods
xlat
add
xor
push
or
clc
jbe
and
ss
mov
enter
outsl
add
mov
loope
add
fcomps
add
lcall
add
subb
or
push
mov
sub
mov
mov
add
out
add
jg
mov
shlb
ret
cltd
mov
insl
stc
lea
adc
nop
mov
or
stos
jle
add
xlat
imul
add
pop
push
adc
cltd
imul
and
cmpsb
sti
xlat
jae
test
pop
addr16
nop/reserved
movl
movsl
enter
inc
pop
fmuls
or
sbb
lock
int
pop
add
jno
shlb
call
mov
add
xor
lods
pop
mov
inc
sub
lock
popf
movsl
xchg
mov
jmp
lea
push
cmp
or
add
xchg
jae
inc
mov
insb
aad
or
addb
movsl
mov
dec
xchg
shrb
add
hlt
movsl
adc
int
loopne
dec
scas
sbb
push
jbe
sub
inc
lcall
insl
mov
jno
ret
test
ret
js
lcall
and
push
stc
jmp
add
je
addb
pop
dec
lcall
add
xor
cmp
jno
mov
or
and
adc
mov
data16
loop
enter
shlb
movsb
inc
sti
cmp
inc
icebp
mov
push
add
push
xor
out
mov
rcrb
subl
add
dec
aad
cld
and
fs
jae
rcll
dec
fsub
adc
add
cmp
scas
out
push
jbe
lahf
pop
add
cmc
bound
dec
mov
mov
movsl
xchg
fisubl
in
add
clc
sub
adc
sahf
arpl
sbb
cmp
jne
add
xchg
jne
add
test
cmp
outsb
sarl
mov
xchg
dec
inc
fdivl
jo
mov
scas
add
jmp
in
pop
pop
dec
out
or
arpl
cmp
add
outsl
daa
add
ja
loope
sub
mov
add
or
xchg
testl
outsb
in
mov
rolb
xchg
out
pop
pop
adc
or
insl
pop
bound
les
es
mov
adc
testl
aad
jne
aas
pop
addl
lods
in
xchg
js
xor
loop
cli
stos
xor
inc
add
pop
sub
punpckhdq
addl
mov
jl
xchg
xchg
cmc
push
adc
in
mov
into
mov
stos
add
pop
adcl
dec
cli
int3
add
mov
loopne
jb
sbb
pop
scas
adcb
in
add
sub
jge
scas
add
loopne
pop
jnp
cmpsb
roll
fistl
xor
insl
add
test
and
dec
xchg
outsb
xor
add
adc
mov
xor
pop
ret
inc
sbb
fdivs
mov
pop
dec
insb
cmp
add
lods
or
add
add
fstpt
xor
mov
sub
mov
pop
inc
insl
mov
add
and
cld
mov
jbe
push
mov
cli
gs
andb
or
sub
in
hlt
add
lock
pop
inc
sbb
push
addr16
mov
add
mov
test
sahf
icebp
xorl
inc
dec
aam
jae
dec
mov
into
xor
cmp
jns
jl
add
xor
dec
std
mov
lock
and
enter
ret
movsb
es
lret
les
pop
xchg
or
es
lcall
aam
nop
lret
adc
aaa
inc
add
push
imul
fucomip
mov
cmovbe
mov
push
popa
mov
add
mov
add
aas
jbe
pop
jmp
add
sbb
cmp
push
cltd
cmpsl
cmp
mov
jne
xchg
xor
das
inc
or
cwtl
jmp
daa
xor
shl
xor
push
call
cld
xor
pop
pop
cmp
cli
and
add
sub
xlat
adc
push
sub
jb
xor
pop
sbb
fiaddl
fnstcw
fcomi
outsl
movsb
movsb
cmovo
dec
mov
add
dec
lods
xor
cmp
add
sbb
add
add
movd
dec
mov
data16
nop
adc
and
lods
xor
mov
bnd
jb
sbb
popa
and
push
xorb
add
loopnew
jnp
dec
cmpb
rclb
mov
add
aas
cmpsb
xchg
sbb
jns
popf
lock
mov
jecxz
push
fs
push
int3
je
sub
rclb
cltd
add
lret
xchg
mov
dec
xlat
pop
mov
or
idivb
xor
add
stos
jecxz
push
xor
mov
das
adc
imul
dec
xor
mov
pop
mov
and
jae
push
xlat
dec
sub
sbb
jo
xor
scas
dec
push
mov
jo
mov
push
or
insl
xor
and
cltd
sbb
gs
aam
pop
jno
xchg
repnz
std
adc
and
cld
cmovl
aas
iret
xor
aad
mov
sub
or
adc
cwtl
idiv
add
inc
shll
xchg
out
loopne
xchg
or
scas
ret
mov
in
lods
or
int3
decb
pop
pop
ss
mov
sub
add
movsb
push
lret
xchg
in
dec
fcoms
outsb
aaa
movsl
push
movl
and
rolb
icebp
add
xor
adc
xor
add
and
shrb
jg
or
inc
pop
xchg
and
pop
and
jo
push
jb
jnp
sub
stos
insl
add
mov
and
test
mov
gs
idivb
xchg
adc
pop
je
cs
dec
test
jmp
push
test
xchg
out
pop
ljmp
xchg
lods
push
test
push
inc
and
adc
or
pop
data16
incb
inc
scas
push
cmpsl
push
int
add
add
test
or
xor
sbb
push
gs
mov
outsl
add
out
out
insl
jl
xor
push
ljmp
addl
sbb
mov
dec
add
mov
icebp
xorl
xchg
fmull
scas
orb
sub
mov
inc
add
jnp
cmp
movd
mov
add
mov
or
push
pop
sahf
xorb
mov
dec
sti
push
mov
push
mov
add
inc
push
testl
push
into
xchg
push
xor
add
repz
dec
jbe
xchg
dec
cli
add
push
cmp
loopne
cmp
adcb
cmc
repnz
dec
pop
xchg
clc
aad
add
cmp
test
fimull
add
and
jbe
sub
push
inc
mov
and
lcall
fidivrs
jmp
mov
push
ret
xchg
in
mov
push
mov
imul
mov
fs
adc
push
sbb
push
add
mov
or
stc
xchg
filds
push
pop
bound
add
and
push
test
jne
shrl
inc
or
pop
jmp
push
iret
jns
notl
das
enter
dec
sahf
sti
or
fcompl
mov
adc
pop
sarl
mov
into
add
cmpsb
pusha
push
add
lcall
add
mov
pop
push
and
imul
dec
mov
addr16
shlb
in
push
loope
push
inc
add
imull
pop
data16
sti
lock
dec
sub
adc
in
outsl
push
jno
mov
mov
aad
add
xor
jo
sub
cmc
jbe
add
cli
inc
cmpsl
mov
jl
dec
popa
xchg
adc
add
jg
mov
enter
imul
push
push
bsf
add
push
mov
xchg
mov
inc
lahf
cmp
xchg
sub
lret
dec
testl
cltd
pop
repnz
add
pushf
ds
movb
ret
sub
mov
adc
loope
inc
movsb
and
test
and
mov
or
mov
hlt
outsl
scas
aaa
push
insb
fwait
test
out
fstpt
push
add
add
push
mov
dec
jl
xchg
jne
xchg
rcrl
out
adc
aad
push
add
sub
mov
cld
xlat
dec
testl
inc
xor
xchg
cmc
xchg
pusha
lock
adc
outsb
or
pop
fdivrs
mov
jo
mov
aas
pop
mov
add
int3
lods
cmp
imulb
or
pusha
mov
xchg
add
jnp
push
fistps
xor
es
or
xor
fiaddl
sbb
mov
xchg
loop
shl
inc
std
sbbb
mov
push
jns
or
xchg
stos
loop
add
fisubrs
mov
add
cmpb
incb
add
sub
mov
ficompl
js
enter
gs
push
mov
negl
xor
pop
add
mov
sbb
test
sub
rorl
pusha
xor
sarl
mov
lods
ficoml
xor
fadds
inc
sbb
data16
negl
jb
sbb
pushf
daa
and
mov
add
bound
aaa
lahf
iret
push
cmpsl
pusha
dec
testb
and
push
pop
leave
and
sbb
outsb
pop
cmp
push
sub
jb
cmp
lret
ds
cmp
ljmp
add
shlb
jmp
dec
stos
sub
or
aaa
xor
shlb
mov
add
popw
mov
cmp
or
jb
and
mov
xchg
hlt
mov
and
jno
pop
jmp
icebp
add
inc
mov
mov
or
test
add
mov
add
loope
jae
movsl
push
mov
data16
mov
sub
mov
dec
rcrb
add
cmp
add
ret
and
loopne
insb
mov
xchg
shrb
mov
lods
adc
shlb
jle
pop
xchg
loopne
xchg
or
test
cmp
ret
sbb
adc
lret
sar
sbb
push
pop
sub
mov
and
sub
mov
ss
and
jge
cwtl
aam
jo
incb
and
sub
xor
push
xchg
daa
dec
mov
xlat
js
icebp
fwait
test
int3
xchg
push
jno
add
and
mov
inc
xchg
cwtl
testl
jae
sub
repz
outsb
jns
inc
cmp
jne
ficompl
xor
jl
icebp
out
out
nop
loope
adc
inc
in
ljmp
mov
cli
xchg
int3
adc
aad
jo
xor
gs
add
xor
ret
stc
push
ret
add
ss
jo
mov
add
movsb
and
mov
lock
push
clc
repz
shrl
xor
lahf
xor
aaa
stos
xchg
push
ja
inc
cs
sbb
leave
inc
inc
mov
or
push
mov
push
push
fnstenv
sub
add
add
fistl
imul
push
xor
add
fwait
mov
js
xchg
lds
mov
xor
call
daa
imull
cmp
fadd
push
sti
cwtl
filds
sub
in
pop
call
sub
gs
mov
rcrl
push
pop
cmpb
mov
cwtl
les
mov
imul
ljmp
push
dec
mov
sub
or
ljmp
aas
loop
leave
jb
rcr
push
in
pusha
out
in
or
ljmp
ror
xor
ss
mov
jns
aad
add
mov
push
xchg
sub
loope
loop
inc
outsb
dec
jno
es
sbb
mov
inc
lds
mov
or
sub
lods
push
inc
pop
mov
and
fwait
iret
sub
and
add
ffree
imulb
or
flds
mov
dec
cwtl
cmp
rclb
cmovle
mov
data16
add
or
imul
stc
shlb
movsl
popa
adc
adc
pop
pop
mov
adc
add
mov
add
ret
cmp
cmc
mov
mov
roll
mov
int3
flds
gs
ficoms
cs
mov
dec
and
sti
outsb
andb
lret
loopne
inc
ja
xchg
rcl
jno
pop
dec
jmp
addr16
cmpb
xchg
stos
or
add
leave
add
cwtl
bound
adc
out
roll
jmp
add
in
jnp
pop
or
or
and
pop
ss
outsb
and
mov
cmc
push
jg
add
es
push
dec
faddl
xchg
add
jns
push
ret
inc
out
fists
add
and
add
adc
mov
pop
int
sub
adc
push
xchg
pushf
xchg
enter
mov
pop
jle
movlhps
pop
movl
aas
pusha
cltd
jle
daa
push
negl
sub
cmp
mov
je
andb
push
les
sbb
cmp
addb
sahf
and
addb
cwtl
sub
xor
jg
lcall
shlb
cli
jo
or
ja
ret
adc
add
jbe
movsl
shr
xchg
clc
or
jnp
imul
movsb
and
lods
lods
int3
push
cmp
sbb
mov
push
xor
add
insl
add
mov
cmp
les
sbb
imul
sub
inc
addr16
mov
mov
ret
mov
xchg
mov
cltd
icebp
push
push
ss
out
inc
xor
adcb
dec
fcompl
fisubl
addl
push
sub
jb
pop
add
mov
je
mov
cmp
sbb
movsb
add
dec
repnz
jge
sbb
icebp
mov
xchg
addb
cmp
loopne
or
pop
cmc
sbb
sbb
stos
cmp
and
dec
aam
jge
add
cmp
add
into
jb
xchg
or
cmp
fs
ja
push
js
pop
adc
add
cmpsl
int3
xchg
add
or
xchg
nop
sbb
or
push
xchg
ret
add
push
in
inc
xchg
hlt
out
xchg
add
jp
out
pushw
jmp
add
xor
xchg
sub
push
or
push
lock
mov
fisttpll
dec
add
xchg
lods
cmp
sbb
adc
or
outsl
push
xchg
movsb
andb
xchg
call
and
test
add
popa
and
lods
or
adc
mov
jae
hlt
xchg
adc
pusha
filds
hlt
arpl
mov
sub
inc
shll
xor
cmp
dec
jns
dec
test
inc
dec
rcll
add
jmp
adc
adc
add
sti
lds
in
sbb
rcrb
pop
lahf
mov
sbb
add
pop
movsb
pushf
lods
rorb
roll
xor
xor
xor
lods
sarb
nop
xor
mov
outsb
sub
setnp
sbb
and
jmp
or
and
loop
andps
jne
and
aad
imul
popa
add
stos
mov
subb
dec
add
mov
and
push
mov
cmp
jbe
or
push
mov
subb
cmpsb
xchg
add
jge
pusha
jp
in
cmp
adc
xor
jo
xlat
add
dec
xor
into
data16
inc
adc
and
dec
pop
mov
sub
sub
imul
or
jb
push
push
sub
xchg
sub
and
adc
cmp
push
cmp
mov
mov
cmp
lds
inc
stc
mov
call
clc
call
flds
push
mov
mov
add
push
inc
mov
fs
mov
lds
enter
ficompl
sub
sub
mov
pop
popf
push
adc
mov
nop
sahf
jp
jle
daa
cmp
cmpsb
leave
rclb
mov
add
cwtl
inc
mov
sbb
sub
sub
inc
inc
pop
mov
and
roll
shl
dec
pop
push
mov
es
icebp
jae
add
in
mov
and
and
repz
jne
mov
movsl
es
add
adc
fistpl
inc
lcall
push
push
mov
test
hlt
add
lret
add
loop
inc
mov
add
xchg
push
cmc
xchg
inc
jge
and
movsb
xchg
mov
add
xlat
cmp
xchg
adc
shl
addr16
xchg
mov
sub
imul
push
shrl
imul
inc
xchg
mov
aam
in
cmc
cld
test
idiv
inc
outsl
hlt
dec
lock
mov
push
push
cwtl
popa
pop
adc
adc
and
cmp
aam
jmp
push
or
adc
stc
jle
add
int3
jl
pop
xor
xor
add
mov
mov
dec
mov
daa
jae
add
add
mov
push
mov
mov
add
cs
add
test
and
in
xor
jns
mov
jae
sub
or
sbb
ret
das
adc
aad
inc
ret
nop
jge
mov
add
cmp
jo
add
shrl
dec
sub
pop
sub
imul
test
inc
jecxz
inc
mov
push
jno
mov
loopne
jne
mov
add
lock
popa
sbb
xchg
add
jle
adc
fstp
add
and
add
add
adc
sub
ret
mov
pop
sbb
lods
pushf
cli
or
xchg
or
leave
cmp
cmp
xchg
dec
scas
and
enter
push
push
popa
repz
mov
xchg
cmpb
push
sbb
add
adc
lahf
mov
push
add
test
sbb
pushf
movsb
or
inc
sub
rorb
in
xchg
mov
pop
dec
movsb
sahf
mov
test
ss
mov
sub
jl
and
out
xlat
push
dec
jbe
push
dec
push
mov
out
repnz
inc
pushw
addr16
sar
insb
or
imul
fwait
xor
xchg
mov
inc
sbb
add
cmpsb
push
pop
ret
push
dec
mov
test
sahf
clc
xor
out
inc
cmp
lea
dec
mov
ror
or
movsb
add
shl
push
rcrl
in
into
ljmp
xchg
push
lock
stos
jle
rcll
push
xchg
pop
mov
add
pop
fimull
cs
lods
popl
push
mov
mov
mov
rolb
daa
dec
pop
popa
and
inc
pushf
fldl
xor
pop
idivl
or
jnp
incb
mov
lea
adc
or
inc
jns
xchg
icebp
ror
nop
pop
adc
lea
sbbb
mov
adc
inc
add
fsts
pop
add
imul
testl
cmp
adc
xorb
cwtl
adc
and
pop
clc
add
lods
inc
add
nop
enter
jno
add
imul
add
add
xor
and
adc
add
dec
pop
and
pop
test
lock
cmc
add
out
mov
sti
rcrb
and
test
outsb
fsubrl
divb
out
inc
adc
aas
cmpsl
push
mov
cmp
add
out
sub
scas
or
sarl
pop
add
xchg
enter
sbb
sti
lahf
jo
ljmp
shlb
mov
mov
sbb
dec
sbb
and
xchg
pop
repz
insl
push
test
inc
mov
xor
and
loopne
sbb
lcall
inc
adc
xchg
cli
mov
das
add
xor
jnp
pusha
aam
jb
pop
orb
mov
test
push
mov
xor
or
xchg
leave
or
cmp
popa
adc
jg
add
mov
inc
pop
mov
xchg
add
loopne
mov
cmpsl
and
or
jo
mov
arpl
or
jb
xchg
add
loop
lods
lds
in
je
frstor
jmp
mov
push
cmp
push
in
or
push
xor
out
xchg
add
cwtl
add
adc
inc
lahf
rcrb
dec
xchg
andb
dec
xchg
mov
cmp
bound
adc
outsl
notb
arpl
push
roll
jg
cmp
or
lcall
sbb
or
or
outsb
fs
xchg
loop
movsl
mov
mov
arpl
cmp
addb
or
ret
add
cmc
mov
inc
cmpb
shr
or
mov
rorl
sbb
fwait
or
mov
adc
es
adc
loopne
test
and
stos
push
pop
ret
xchg
lock
sub
stc
es
fwait
les
hlt
lea
mov
std
clc
xor
rol
mov
sbb
mov
cltd
sub
cmp
xchg
ret
jno
push
inc
add
scas
lcall
mov
in
pop
and
add
push
adc
xchg
out
mov
add
dec
daa
adcb
rorb
subb
dec
adc
or
popf
push
add
ds
and
inc
aaa
pop
test
add
in
cmpsl
mov
inc
dec
shlb
cmpsb
push
std
push
aas
lods
pop
xor
and
jnp
pusha
jecxz
cmp
xchg
jns
loop
test
fsubs
add
jmp
mov
xchg
ret
push
push
and
xchg
testb
rcr
inc
xchg
push
mov
ficoms
adcl
cmp
rorl
or
leave
push
jmp
sub
pop
and
es
add
and
adc
jmp
cwtl
adc
mov
pop
shrb
jo
jg
push
mov
dec
pusha
scas
outsb
lods
add
loope,pt
sbbb
pop
ljmp
or
cli
rolb
push
jmp
outsl
and
jp
outsl
mov
add
jmp
scas
dec
sub
or
add
sbb
and
lods
push
enter
add
xor
test
or
sub
add
adc
test
inc
jo
out
cmp
mov
out
lods
lods
adc
in
imull
nop
sub
xor
or
dec
mov
add
or
add
ja
jg
pop
fcoms
dec
adc
adc
add
add
addr16
push
sub
mov
inc
mov
xchg
jbe
push
dec
sbb
outsl
fldl
dec
dec
mov
push
imul
xchg
or
cwtl
test
pushf
jge
mov
xor
sub
mov
pop
adc
cmp
push
scas
sbb
popf
jp
jmp
xchg
test
fs
jnp
lret
stos
xor
cwtl
sbb
lock
mov
mov
and
push
lods
fmulp
gs
shll
icebp
sub
xor
lahf
and
gs
inc
sub
cli
pop
nop
mov
adc
pop
and
lds
enter
popa
pushf
mov
xchg
mov
fists
loop
mov
jle
nop
popa
jo
dec
andb
inc
mov
pop
ret
fwait
dec
shl
lea
mov
movb
addr16
pop
and
test
jnp
adc
or
add
test
movsb
add
push
jecxz
loopne
push
push
movsl
push
inc
call
pop
stos
or
mov
jno
jle
and
mov
cltd
or
int
mov
dec
xor
test
fldenv
clc
pop
add
clc
mov
cmc
addb
xchg
pop
int3
or
push
ret
test
xchg
add
add
push
cmpb
fists
and
push
addl
pop
mov
aaa
push
push
loopne
pop
shr
cmpsl
adc
push
jo
and
out
testl
sub
nop
and
lods
pop
pop
ret
sub
dec
cmpsl
or
cltd
sahf
add
cmpsb
pop
pop
add
sub
push
negl
and
push
add
cmp
cmp
add
out
cwtl
fiaddl
dec
mov
jp
loop
fisubl
add
xchg
call
fbld
cmc
mov
lock
das
js
test
push
mov
add
nop
out
cmp
daa
xchg
rsqrtps
xchg
or
lcall
movl
jle
cmp
cmp
shlb
add
cmpsl
push
fsubrl
arpl
movb
xlat
pop
insl
mov
lods
push
xlat
xor
aam
pop
and
or
add
mov
fwait
xlat
test
sbb
inc
pop
test
nop
mov
pop
rdpmc
jp
xchg
out
pop
into
aaa
movsl
lgs
mov
leave
mov
cs
cmp
and
daa
rcrl
adc
inc
mov
cmp
mov
repz
cmc
addr16
jo
imul
in
dec
stc
inc
inc
add
pop
das
xchg
js
add
pop
lds
or
clc
popf
in
xchg
or
adc
add
rorb
sbbb
je
adc
aaa
adc
popa
test
mov
sub
cs
pop
sbb
pop
int
and
jnp
inc
mov
das
add
sbb
mov
xchg
jp
or
dec
jge
cmpsb
and
addb
addl
in
lds
test
mov
je
cmp
xor
test
mov
lock
roll
cmpsl
insb
call
adc
fdivl
fisubl
add
scas
pop
orb
shll
incl
fistpl
xchg
push
push
inc
hlt
aas
sbb
xchg
xor
test
mov
jb
shrb
push
adc
xchg
mov
add
movsl
add
hlt
outsl
push
sbb
and
or
mov
ret
jb
fs
pusha
push
dec
aaa
sub
inc
std
xchg
add
loope
test
push
pop
push
test
xchg
xchg
fidivs
add
loopne
jns
ror
and
pusha
dec
rolb
js
mov
mov
inc
lret
add
mov
imul
mov
popf
sub
xor
add
fucom
ret
inc
inc
sub
sbbb
push
lahf
mov
sub
into
dec
inc
mov
mov
push
mov
or
add
inc
or
cli
and
xor
cmp
sbb
mov
nop
fidivs
ja
push
inc
cmp
shlb
or
call
stc
cmp
add
cld
sub
leave
test
add
sbb
pop
pop
adc
add
push
lock
sub
dec
xor
subl
push
mov
push
and
or
xchg
test
xchg
or
push
pusha
mov
cmp
and
push
and
stos
rorl
jp
cld
popa
jl
cmp
mov
cwtl
sub
push
out
mov
cltd
mov
rolb
or
rolb
stos
movsl
sub
add
dec
loope
ja
push
and
lcall
stos
popa
shrl
inc
cmp
xchg
adc
cwtl
sbb
sahf
or
pop
adc
dec
test
imul
pop
adc
push
xor
mov
xlat
mov
rol
push
lods
sarl
add
dec
lcall
xor
push
scas
add
push
cmpsb
nop
daa
pop
popf
mov
sbb
test
add
jno
push
ret
sub
popa
mov
cmp
movsl
aam
or
pop
lds
or
xor
mov
xchg
stos
jl
mov
imul
cmp
repnz
adc
fiadds
insb
orb
push
cmp
dec
or
dec
sub
xor
clc
dec
scas
dec
ljmp
cli
jg
xlat
pop
push
popf
sarb
add
dec
movsb
sbb
lahf
xor
fisttpl
sbb
add
xor
cli
inc
add
jns
mov
nop
shll
add
jnp
jecxz
pop
and
into
fs
mov
mov
cmp
add
fidivs
cmc
sub
scas
mov
xchg
outsl
jmp
xlat
add
arpl
push
mov
mov
repnz
jmp
pop
mov
lock
in
bound
bound
add
jp
push
fs
xchg
je
mov
cmp
add
roll
dec
lret
shlb
lock
xchg
push
jbe
popf
sbb
push
and
or
int
mov
pop
and
mov
and
sbb
xchg
adc
scas
wbinvd
sub
push
vprotb
mov
add
in
push
add
cmpsb
iret
push
or
pop
inc
mov
jns
cmpsb
mov
push
and
jnp
push
pop
lods
or
int
mov
inc
xor
cmp
add
inc
mov
jmp
clc
push
push
cmpsb
dec
insl
loopne
cmp
mov
lods
jnp
sub
jp
mov
cmpl
mov
loopne
movsl
mov
add
jne
adc
add
push
xchg
xor
in
add
dec
xorl
xor
push
sbb
insb
xchg
jge
in
adc
test
inc
iret
movsl
add
lret
pusha
sub
xor
pop
pop
adc
mov
dec
stos
jne
pop
dec
rorl
mov
repz
pop
ror
scas
idivl
sbb
xchg
dec
lret
test
mov
mov
cwtl
cmc
orl
arpl
mov
xchg
xchg
add
dec
adc
add
addl
add
rcrb
jno
nop
cmc
in
adc
inc
xchg
cmp
push
pop
xchg
xchg
inc
add
neg
sbb
int
xor
fdivrl
or
add
sbb
mov
dec
and
adc
inc
lods
int
mov
add
scas
xchg
and
stos
add
add
mov
mov
das
sbb
or
push
movq
popf
inc
leave
mov
punpcklbw
arpl
mov
insl
xchg
adc
aam
mov
adc
sbb
add
mov
repnz
scas
sbb
cmp
sahf
or
mov
xchg
mov
cwtl
int
aas
pop
xchg
or
aaa
aam
jns
mov
add
xchg
cmp
mov
cmp
add
xor
test
pop
insb
dec
add
sbb
and
mov
in
pop
clc
bswap
clc
nop
mov
mov
and
inc
mov
xchg
faddl
sti
js
cld
fsubl
in
xchg
mov
xor
push
cmp
ds
adcl
push
pmullw
je
rorb
repz
adc
clc
mov
adc
pop
pusha
sbb
push
xor
jg
out
jno
add
aam
mov
repnz
xor
fmull
mov
mov
inc
imul
mov
dec
in
mov
ss
or
cmp
pop
out
fwait
stos
adc
imull
mov
or
bound
repnz
and
sbb
sub
pop
adc
call
lea
sbb
pop
push
jmp
xchg
and
addr16
dec
rolb
int3
adc
bound
mov
pop
add
and
daa
mov
cmp
movsl
popa
sbb
jle
mov
mov
ret
mov
dec
test
shrb
mov
or
std
mov
add
fsubrs
out
pop
jnp
add
frstor
out
add
adc
aaa
push
sbb
xorl
add
jno
aam
test
subl
sbb
sub
or
sbb
jb
or
or
lds
outsb
add
push
dec
xor
lahf
in
dec
jnp
dec
jae
popa
fbstp
adc
or
push
movsb
xchg
adc
push
test
and
jne
lret
adc
arpl
imul
mov
jo
out
jo
aad
add
cli
jnp
push
clc
or
cltd
mov
mov
xor
xchg
les
ror
fs
fwait
mov
xor
or
jb
pushw
test
or
sub
ja
pop
cltd
mov
cmpsl
outsb
sub
jno
and
pop
ljmp
mov
in
sar
insb
jbe
mov
xchg
repnz
cmpl
cmp
pop
mov
dec
mov
inc
add
notb
dec
lods
js
add
inc
shll
and
dec
mov
inc
xchg
adc
test
inc
mov
popf
mov
xchg
lods
iret
or
xchg
loope
fnstsw
loop
sub
ds
repz
andb
pop
mov
hlt
adc
mov
das
pushf
pop
push
jmp
push
scas
ret
out
pop
pusha
sbb
das
pop
adcb
pop
stc
mov
cwtl
ja
jl
xchg
add
add
cmp
call
add
insl
in
loop
ja
ret
imul
cmp
add
sub
fucom
nop
push
and
in
jo
xor
or
mov
mov
es
inc
cmp
and
mov
add
cwtl
in
and
inc
das
pop
cmp
sbb
inc
push
xchg
mov
adc
outsb
setbe
rol
in
cld
cmp
sbb
pop
lds
loop
leave
fcompl
stos
and
pusha
inc
movsb
mov
xchg
shl
and
fsubrl
adc
arpl
add
in
mov
loop
add
bound
add
fldt
pop
pop
fistpl
xchg
loopne
movsb
and
out
pop
inc
insl
pop
cmp
popf
add
clc
lock
cmp
push
inc
aas
data16
cmp
lret
outsb
fistpl
inc
push
sti
sub
idivb
mov
xor
mov
cmc
inc
jb
push
mov
jge
test
mov
xchg
add
mov
cld
jecxz
add
aas
cltd
repnz
out
loope
inc
and
stos
cmp
push
dec
cmc
popf
das
push
xor
sub
or
dec
xchg
mov
dec
cmc
add
or
add
dec
mov
dec
std
inc
mov
incb
or
mov
jbe
lret
cmovge
outsb
or
pusha
das
inc
adcb
aam
outsb
add
inc
dec
pop
int3
les
ss
rcr
or
pushf
sub
les
xchg
orl
and
or
fcoml
es
sbb
or
pop
lea
or
imul
add
sbb
shrl
popf
lock
xor
cmp
add
repnz
shl
setb
out
xchg
mov
push
mov
mov
and
rorb
adc
push
jo
outsl
fisubs
nop
adc
mov
mov
fwait
sub
daa
clc
pusha
ret
xor
mov
rclb
add
mov
fwait
into
lods
cmpsb
sbb
adc
pushf
jo
cwtl
xor
xor
stos
xchg
enter
dec
orl
adc
jl
push
xor
dec
add
outsb
rcl
pop
pop
or
stc
jmp
jmp
testl
out
outsb
xchg
pop
sarb
add
lcall
push
mov
add
out
pop
xchg
pop
lcall
add
push
sbb
push
adc
mov
add
cmp
or
jmp
mov
push
mov
pop
push
mov
lret
adc
add
mov
pop
pop
mov
mov
push
mov
add
sub
jmp
push
mov
mov
or
lds
test
push
enter
cmp
iret
pushl
lea
rorb
sub
push
push
push
shrl
aas
push
add
clc
pop
cmpl
mov
cld
sbbl
jne
sbb
je
popf
in
or
movsb
lods
jo
ret
mov
push
push
call
push
push
add
jmp
cmpb
je
pop
adc
in
in
xchg
andl
push
pop
fsubp
add
push
cmp
call
les
inc
movb
sub
es
xor
ljmp
sub
or
xor
call
pop
sbb
inc
add
scas
fisubs
rolb
push
scas
and
pusha
push
lret
pop
sahf
out
mov
xchg
cmp
push
out
in
inc
add
and
push
mov
popa
pop
sub
xorb
adc
push
sub
jecxz
inc
das
push
mov
ret
movswl
pushl
shrl
outsl
ss
in
mov
lock
clc
adc
shr
fs
xor
cs
pop
sbbb
xor
add
adc
movb
sub
xor
mov
fwait
mov
ficoms
mulb
popa
jmp
stos
mov
add
or
repz
ds
jmp
add
mov
lods
add
sub
sbbl
rorb
aas
mov
xor
adc
jno
xchg
fimuls
or
lcall
ljmp
dec
sub
stc
aam
add
jbe
dec
add
pop
mov
fistpl
shl
cli
cmp
jbe
push
add
js
stc
mov
adcb
scas
mov
pusha
pusha
std
dec
sub
jp
clc
adc
bt
movsb
mov
push
int3
out
lds
push
and
popa
inc
ljmp
jbe
sub
loopne
xchg
jns
cmpsb
adc
clc
scas
pop
sub
and
nop
mov
inc
add
sahf
add
add
fnstcw
insb
jmp
orl
js
add
ror
mov
dec
lods
mov
mov
sbb
adc
cmp
add
push
inc
or
add
or
adc
jo
xchg
add
push
jno
sti
sarb
push
js
daa
push
push
je
add
in
mov
movsb
jp
dec
movsl
sbb
jbe
jp
add
add
lretw
mov
and
xchg
mov
pushf
stos
dec
mov
add
lret
and
jle
push
push
fdivs
jmp
add
dec
clc
insl
imul
jne
or
add
pop
arpl
loopne
add
sub
js
ja
lods
adcb
mov
xchg
call
xchg
push
or
mov
outsl
mov
inc
adc
add
arpl
xchg
xor
dec
mov
and
push
clc
popf
sbb
out
sbb
adc
mov
add
or
or
repnz
movsl
sahf
lock
cmc
loope
mov
faddl
inc
mul
std
mov
imul
add
inc
sbb
xchg
jb
ret
out
add
scas
ret
cmp
inc
int
insl
mov
push
subl
xlat
mov
mov
into
enter
adc
out
fildl
cmpsb
and
daa
dec
mov
jns
in
lahf
add
cmp
xchg
aam
or
sub
clc
test
push
xchg
sbb
es
push
mov
mov
jl
add
push
add
sbb
and
or
and
iret
push
xor
inc
pop
jmp
add
sbb
push
pusha
cltd
xchg
adc
jge
xor
xchg
add
in
or
xor
push
je
add
cs
and
cmpsl
fldcw
add
inc
insl
fdivs
rolb
xor
add
push
wrmsr
sub
stc
popa
jle
sbbb
or
push
scas
test
cltd
bnd
hlt
add
mov
push
add
nop
jg
push
push
mov
fisubl
icebp
mov
int
cmp
mov
sub
pop
out
add
shrb
ds
int3
popl
mov
addr16
push
push
jb
jns
int3
pop
xchg
inc
and
shrb
push
mov
icebp
dec
pop
jge
mov
pusha
sub
jp
sbb
cwtl
aaa
or
mov
mov
cwtl
add
cld
jne
push
incb
inc
sbb
pop
cmp
fadds
xchg
fists
push
mov
add
push
sub
dec
jl
insl
add
jo
test
out
dec
or
cmp
shlb
mov
push
hlt
cmp
mov
aas
push
xchg
or
lods
fucomp
mov
pop
push
push
or
mov
push
mov
mov
xchg
das
hlt
inc
sbb
insl
push
mov
mov
bound
push
jo
push
jg
mov
iret
mov
mov
cmp
ds
sbb
imul
sbb
mov
addl
add
idiv
push
sub
mov
sbbl
push
xor
iret
sub
mov
adc
cmp
cmpsl
mov
mov
and
fwait
inc
dec
mov
pop
pop
andb
insb
lcall
xor
mov
jno
fwait
dec
dec
addl
adc
cmc
xor
mov
xor
rcrl
jmp
sbb
add
xchg
push
inc
or
iret
add
ljmp
and
data16
add
dec
scas
inc
mov
std
sarb
into
dec
add
add
add
lock
xor
inc
pop
and
cmp
adc
sbb
aam
ljmp
adc
pop
dec
inc
add
pop
ficoml
xor
loopne
movsl
nop
addl
aad
mov
push
cmp
inc
xor
xor
and
outsb
adc
cli
fs
js
jmp
nop
iret
ja
add
dec
xor
inc
dec
and
sti
push
gs
clc
sbb
xchg
dec
add
cmp
mov
or
xchg
sbb
mov
pop
inc
pop
fisubrl
push
and
gs
shll
cmp
daa
mov
xchg
das
adc
mov
or
adc
hlt
mov
add
push
insb
jmp
inc
xor
sbb
cmc
loope
fiadds
xor
nop
mov
sbb
pushf
add
jno
push
jnp
mov
out
and
rorb
in
js
movsb
aaa
add
cmp
iret
add
aas
cmp
add
xor
jb
add
sbb
pop
dec
add
mov
lods
xchg
add
cli
pushf
sbb
mov
add
andb
insl
orb
xchg
pushl
add
xor
les
shll
inc
or
pop
add
and
inc
adc
adc
subb
add
scas
mov
add
call
nop
fstps
or
mov
add
lods
mov
negb
sbb
add
cmp
inc
and
repnz
pop
stos
idivb
mov
mov
mov
jns
add
pop
cmp
nop
stos
roll
std
mov
jl
fidivl
and
popf
pusha
add
outsb
cmp
sbb
mov
xchg
inc
add
lcall
dec
xlat
sub
and
inc
lret
adc
pop
insb
push
and
mov
int3
sub
loop
outsb
or
adc
add
test
mov
or
enter
jo
jnp
add
lock
fidivrs
add
inc
into
enter
add
mov
add
inc
js
add
data16
xchg
outsl
mov
lds
sbb
shlb
add
adc
into
sbb
aad
in
mov
ret
mov
push
inc
arpl
into
fs
cmp
enter
dec
lods
icebp
add
inc
and
sbb
out
fmuls
addb
int3
push
add
mov
mov
and
dec
shlb
xor
mov
loopne
add
cs
pop
out
out
lahf
imul
jo
jne
adcl
bound
and
jbe
push
mov
clc
pop
mov
cmp
clc
sbb
add
adc
dec
dec
dec
or
imul
std
add
mov
out
lock
dec
lea
loop
push
scas
in
pop
sbb
nop
sub
sbb
push
push
gs
stc
jmp
test
add
aad
push
xchg
repz
gs
add
stos
lods
test
add
inc
jb
popa
sbb
clc
cmp
movsb
cli
add
cmp
xchg
es
testb
fwait
xchg
mov
add
inc
rorb
mov
jp
das
int
xchg
inc
push
dec
push
scas
mov
mov
xchg
gs
or
ljmp
or
mov
dec
mov
dec
gs
mov
rclb
add
sub
or
mull
adc
add
shlb
mov
incb
test
mov
and
adc
mov
push
shr
cmp
or
incl
subb
lock
and
sbb
roll
push
mov
cli
stos
pusha
add
lahf
xor
cld
inc
jns
pop
aaa
pop
movsb
inc
xchg
int3
sbb
lcall
or
outsb
out
push
adc
data16
and
push
sti
roll
fisubrl
cmp
pop
adc
fimuls
mov
jno
and
popl
pusha
dec
inc
mov
mov
int
pushw
add
pop
call
mov
inc
sbb
pop
or
cmpsb
adc
adc
rcll
lret
push
out
gs
sbb
add
or
or
notl
xor
add
mov
arpl
outsb
xlat
addb
aad
andb
add
fisubl
add
sub
jb
add
scas
ficompl
nop
pop
idivl
jmp
xor
int3
add
dec
insl
je
mov
aam
sub
popf
jle
xor
add
mov
stos
sub
pushf
xchg
mov
dec
mov
inc
scas
ret
pop
arpl
mov
sbb
cmp
push
cmpsl
in
xchg
jg
mov
ljmp
popa
dec
into
xlat
push
mov
int
inc
xchg
ret
movsl
adc
adc
and
add
sub
xchg
add
aaa
out
fmull
shl
addb
movsb
std
mov
in
in
mov
add
sbb
add
int
xor
add
mov
cmp
sub
divb
xchg
cmp
bswap
add
sbbb
cltd
addl
mov
push
sbb
not
pop
roll
pushf
add
nop
add
xchg
inc
sti
jno
sub
mov
rclb
or
push
add
je
orb
cwtl
or
or
and
push
add
out
scas
jae
mov
add
fidivl
add
xor
mov
mov
mov
clc
push
enter
and
inc
cmp
dec
jo
scas
add
or
dec
inc
loopne
stos
add
pminsw
sbb
test
pop
fcomip
adc
fyl2x
test
jne
mov
dec
lock
lcall
add
push
push
and
push
scas
jmp
repnz
cmp
add
mov
adc
loopne
adc
nop
mov
sub
lds
cmp
push
je
and
enter
ret
out
sub
xchg
fcmovbe
sbb
cmp
mov
mov
sahf
add
lods
enter
les
jg
ficompl
fidivrs
sarb
repz
pop
std
add
adc
xchg
mov
int
jns
sub
add
push
jmp
cmpsb
out
xor
stc
ja
repz
sub
push
setae
fsubrs
jmp
rorb
and
add
cmpb
xlat
mov
push
add
fildll
js
and
adc
mov
lods
iret
lds
lods
dec
push
add
cmp
sbbl
and
sbb
push
data16
out
add
lret
pushf
adc
adc
adc
jecxz
jne
mov
aam
aad
ret
xor
adc
add
add
enter
into
mov
popf
ss
jbe
iret
leave
or
pop
cmp
clc
add
xchg
xor
pop
int3
test
nop
gs
mov
ret
add
movsb
xor
add
cs
sbb
add
xor
cli
or
cmp
in
imul
inc
add
sbb
dec
add
cmp
push
xor
jmp
pop
mov
sub
insl
enter
add
add
add
push
imul
adc
adc
add
loopne
sbb
mov
or
push
in
push
scas
xchg
and
jns
ja
cltd
adc
insl
xor
pop
mov
dec
add
xchg
mov
mov
dec
or
pop
push
push
add
cmp
add
sti
nop
pop
sub
je
filds
adc
add
mov
add
xorb
call
fistpll
negb
hlt
pop
jbe
pusha
ror
xor
pop
adc
faddl
and
sahf
std
mov
dec
pop
adc
mov
mov
add
ss
ror
in
fwait
and
add
into
mov
test
xor
outsb
add
negl
xchg
add
mov
add
pop
cld
idivb
scas
or
stos
xchg
paddd
mov
sbb
xor
push
add
js
dec
add
and
mov
lret
add
popf
jae
inc
pop
add
cmpl
jb
dec
iret
jle
into
jecxz
das
inc
sbb
or
jno
andb
int
ret
loopne
dec
in
icebp
jbe
add
fiaddl
or
pop
movsb
add
cmc
mov
add
nop
adc
sub
stc
jl
sar
jae
xor
sbb
xchg
stos
jne
cmpb
rolb
scas
xor
cs
jae
mov
clc
mov
xchg
xlat
test
inc
test
incb
push
fcompl
mov
hlt
ud2
popf
dec
mov
cmp
test
pop
outsb
mov
add
in
pop
imul
test
add
lods
pop
std
or
in
adc
adc
stos
fildl
jp
xchg
rcll
push
or
cs
and
out
cltd
bts
add
push
pop
ret
mov
add
mov
aas
sbb
sub
cmpsb
xor
pop
shrb
shlb
or
mov
inc
add
pop
lret
inc
jns
sub
add
cmp
add
out
insl
xchg
mov
and
clc
sbb
rcll
add
cli
sar
lcall
lock
push
aam
mov
xchg
mov
jp
dec
sbb
sub
pop
add
lret
shl
mov
inc
test
ud2
xor
fidivl
cli
cmp
xchg
es
rcrl
add
or
add
mov
cmp
pop
add
in
push
xorl
add
adc
jle
add
call
sarb
pop
mov
jecxz
adc
push
inc
xchg
add
mov
test
mov
add
lods
ret
shrl
inc
sbbb
nop
mov
or
push
sub
push
dec
stos
add
in
push
jge
lds
cmp
pop
xchg
add
fwait
stos
mov
xchg
add
popa
or
add
gs
push
out
mov
popa
fcom
pop
rclb
mov
mov
mov
add
sub
mov
insl
add
jp
clc
pop
fists
scas
lods
js
xor
subl
int3
add
shrb
cvttps2pi
jecxz
sub
xchg
add
orl
loopne
shll
push
mov
pusha
lahf
loopne
add
sbb
inc
addb
mov
rol
and
push
lock
aam
xor
mov
pop
xchg
push
or
and
adc
andb
inc
ret
sbb
sub
mov
cmp
mov
mov
jmp
jecxz
mov
fwait
data16
nop
sbb
mov
add
sbb
mov
call
or
fldcw
pop
xor
add
into
mov
pop
in
fidivs
aas
pop
fiaddl
push
in
pushf
add
pop
jnp
add
test
push
mov
adc
push
xchg
out
mov
loope
xchg
push
sahf
dec
sarb
repz
imul
pop
int
or
add
cmp
or
nop
rcr
in
sub
mov
and
or
stos
mov
enter
add
push
push
cmp
mov
pop
fmuls
lret
add
mov
adc
mov
mov
add
push
popf
mov
dec
ror
and
pop
or
mov
loopne
push
add
mov
cmpsl
add
cmpb
popf
loope
jecxz
aad
cmpb
pop
in
sahf
aaa
add
add
add
jp
das
add
pop
sub
jne
sub
je
shll
lahf
gs
xchg
pop
push
xchg
sub
push
jge
add
jp
jg
fs
inc
bound
and
or
outsl
pop
repz
jge
sub
add
ja
clc
cmp
test
sbbl
and
repnz
rorb
int3
pop
jbe
add
sbb
and
push
push
inc
fistpl
shrb
movsb
push
jg
inc
mov
outsl
jae
xchg
mov
movl
dec
and
adc
cmc
pop
pause
jb
xor
cmp
cmp
bound
jg
push
hlt
fiaddl
movsb
xor
sub
sub
add
out
scas
sbb
add
fldl
push
pop
loopne
ljmp
sbb
inc
adc
in
insl
js
jae
add
xchg
pop
inc
jp
into
and
loop
add
or
lret
xchg
inc
andl
lock
push
lahf
add
pop
cmp
jp
push
jnp
adc
inc
das
add
jns
imul
sub
xchg
jmp
sbb
add
adc
and
dec
add
add
jne
ret
dec
cmp
push
clc
pop
jmp
int
clc
loop
jne
add
and
out
or
jp
xchg
and
fildll
aam
add
addb
and
xchg
aas
out
add
mov
mov
cmp
push
sbb
cmpb
imul
sbb
push
inc
add
pop
sbb
or
adc
xorl
test
or
add
in
and
adc
imul
out
dec
pop
popf
add
jmp
orl
inc
sbb
mov
cwtl
pusha
add
lahf
pop
xchg
pop
xchg
sub
add
push
dec
repz
add
mov
xchg
mull
cmp
ja
loope
and
mov
xor
pop
dec
lea
xlat
add
inc
aaa
mov
add
pushf
out
or
push
rcr
sti
adc
outsb
stc
push
inc
jecxz
rcrb
mov
add
sahf
sub
cmp
les
es
adc
add
out
mov
inc
pop
sti
push
add
add
jg
faddl
xor
imull
xchg
inc
inc
adc
push
orb
cltd
adc
incl
nop
pop
ds
stc
mov
cmpsl
and
or
xor
mov
dec
push
push
out
lret
add
popa
pusha
in
jmp
cmpsb
add
mov
adc
decl
add
pop
daa
dec
sbb
inc
inc
cltd
dec
and
inc
sub
fisubrs
pop
mov
pop
or
loope
cmp
ljmp
jne
add
and
lcall
mov
imul
ret
mov
adcb
je
push
into
add
rclb
pushf
arpl
or
loopne
adc
push
inc
icebp
sbb
push
sbb
cltd
adc
push
add
stos
gs
scas
mov
cmp
add
mov
sub
shll
add
pop
mov
jbe
add
loope,pt
mov
mov
adc
or
and
fs
and
popa
adc
xchg
adc
addb
rorl
sbb
loopne
mov
inc
jge
lods
jnp
ret
call
imul
xchg
push
xor
mov
or
jmp
mov
mov
sub
in
jno
mov
cmp
sub
adc
add
mov
adc
dec
test
jno
add
mov
ljmp
xchg
or
add
imul
out
push
insl
testl
stc
xchg
xor
clc
popf
add
pop
or
mov
cwtl
out
sarb
fadds
mov
add
loopne
mov
jp
movsb
pop
mov
nop
adc
into
pop
mov
cmp
pop
and
xchg
xor
xchg
push
std
pop
push
fisubl
fwait
add
stc
call
adc
jmp
test
xorb
xchg
in
and
or
mov
call
add
out
loopne
or
push
test
and
filds
pushf
add
adc
out
pop
insb
imul
dec
sub
add
dec
aam
push
imul
aas
and
dec
adc
insb
repz
fisubs
add
xchg
xchg
add
andl
cmp
push
ret
push
jmp
push
pop
clc
iret
pop
mov
pop
sbb
add
or
loope
or
add
nop
adc
sbb
dec
ja
jp
xchg
mov
fwait
cwtl
xchg
movsl
jb
icebp
mov
call
stc
stos
dec
daa
mov
enter
scas
push
test
popa
add
sub
xchg
dec
cmp
js
stos
negl
add
cwtl
pop
and
add
jb
sti
push
jno
pop
dec
filds
mov
subl
jmp
in
xor
adc
xchg
adc
cmp
into
std
mov
dec
lret
push
sub
test
ljmp
or
cmp
mov
sbb
leave
push
js
or
pop
jbe
cmp
call
inc
push
cmp
add
add
mov
add
dec
addr16
add
sub
stos
push
or
fmuls
or
enter
xor
incl
nop
mov
pop
mov
lea
sbb
cli
adc
hlt
mov
add
dec
test
pop
sub
inc
xor
and
cwtl
inc
lock
dec
clc
or
adc
dec
add
mov
add
inc
in
stos
mov
test
and
add
pop
loope
xor
pop
or
jnp
lea
pop
or
add
insb
pop
cmc
mov
or
insl
outsl
pusha
mov
sub
lea
pop
pop
int
add
movsl
mov
inc
push
clc
or
xor
xor
mov
lret
fmull
add
cld
test
mov
mov
aas
inc
test
cmpsb
fwait
sbbb
roll
ret
add
daa
stos
xorl
dec
mov
pushf
dec
sbb
xor
mov
repz
or
mov
es
and
test
xchg
es
add
fldl
jbe
add
int3
jl
ljmp
or
sub
nop
and
sub
add
mov
aas
lods
mov
mov
roll
cli
push
out
sarl
add
loopne
repnz
sbb
js
cmp
je
jne
fsubr
pop
add
pop
adc
sub
mov
aam
mov
loopne
pop
add
or
icebp
cltd
push
std
xchg
aam
fdivp
add
jecxz
xchg
mulb
push
mov
sub
lock
fadd
scas
add
pop
jge
test
je
es
fs
and
add
lods
jp
sub
add
xor
xchg
add
inc
lret
cmpsl
push
test
xor
scas
pusha
jns
adcl
ss
sbb
mov
subps
aaa
rolb
add
jg
add
adc
or
test
add
das
mov
sahf
mov
cmc
sti
add
mov
fnsave
cmpsb
dec
repnz
jb
add
add
adc
ds
imul
dec
enter
sar
leave
push
mov
xor
test
adc
movd
dec
dec
xor
add
add
pop
jle
jbe
jge
add
inc
aaa
push
pop
mov
xor
mov
jo
loope
int
mov
movl
pop
pop
xor
adc
imull
les
dec
xchg
aas
jb
mov
test
sub
jne
scas
pop
mov
adc
inc
pop
cmpsl
lret
add
mov
popaw
mov
xor
add
gs
mov
add
jl
inc
and
das
icebp
je
jle
cs
pop
dec
add
lcall
scas
repnz
or
jle
bound
stc
push
push
loopne
push
shll
sub
push
and
sbb
add
cmpsl
jne
jp
sub
test
jo
movsb
sbb
mov
std
push
or
dec
add
mov
loopne
shl
js
in
cld
jp
loopne
push
sub
add
je
mov
pop
popa
cmpsb
gs
adc
jmp
lds
add
insl
cld
in
lcall
mov
lret
add
inc
mov
mov
add
andl
jge
cmp
xchg
add
fistpl
aas
mov
xor
ret
repnz
fcompl
rorb
jo
dec
xchg
add
jnp
xchg
inc
ja
call
shll
cmpsl
movsl
pop
add
mov
push
je
add
fyl2xp1
shlb
lock
test
xor
sbbl
js
fadds
movsb
pop
enter
shl
stos
sub
aaa
mov
add
int3
hlt
push
fiadds
or
jae
fs
loopne
dec
in
and
das
add
jecxz
ret
ljmp
jo
cmp
xor
scas
imul
lcall
mov
mov
jo
xlat
xor
push
imul
dec
push
and
push
and
or
push
jo
rclb
mov
adc
adc
push
data16
fwait
stc
in
lcall
repnz
and
enter
add
xor
push
push
mov
add
xchg
add
pushf
mov
add
add
mov
out
lea
loopne
test
or
lahf
ret
add
loopne
dec
hlt
addl
popl
mov
and
icebp
mov
testb
addb
cmp
adc
pop
std
mov
sub
or
push
cmp
arpl
imul
hlt
push
in
mov
lods
push
lock
and
mov
mov
es
dec
inc
cmpsl
xchg
push
shrb
adc
pop
rcrb
adcl
movsb
push
aas
bound
outsb
or
inc
xorb
mov
aas
sub
xor
mov
jnp
push
insl
mov
aaa
pop
pop
add
jne
mov
popf
xorb
test
dec
adc
cmp
cmp
jns
dec
sub
and
sti
jecxz
add
fdivrs
adc
pusha
sub
cmovge
ret
mov
imul
out
addl
push
xlat
mov
jns
aam
xchg
loop
add
push
test
aaa
add
xchg
jmp
push
cmp
call
sub
dec
mov
and
loop
int3
add
in
pop
sbb
jns
inc
mov
movl
shlb
psrld
enter
sbb
popf
add
adc
pop
mov
add
mov
cmpsb
push
enter
sbb
addb
xor
push
xlat
roll
adc
add
mov
ljmp
in
push
mov
push
sub
addr16
pop
xor
mov
push
lock
subl
loopne
lods
push
jno
mov
call
push
sbb
cmp
dec
add
loopne
icebp
add
inc
cmp
add
jae
arpl
add
mov
sub
jmp
push
les
je
cmp
hlt
mov
xchg
xor
push
add
das
std
jae
jbe
cld
loopne
sbb
mov
jl
and
push
inc
ret
adc
or
stc
repz
dec
adc
loope
add
call
mov
inc
and
pop
adc
sub
push
repnz
cli
dec
jbe
xor
lock
inc
out
jge
popf
popa
jmp
add
add
jae
mov
inc
les
in
hlt
pop
loope
sub
inc
mov
stc
inc
cmp
lcall
push
pop
or
add
aas
arpl
inc
popa
pusha
in
rcll
jmp
in
testb
dec
stos
mov
add
xor
jmp
cmp
pop
cmc
push
loop
xchg
loopne
lds
arpl
pop
lea
pusha
test
add
pop
jp
insl
pop
std
cmp
cs
int3
inc
cmpsl
andb
add
sub
aas
in
insl
loop
add
xor
push
hlt
add
add
and
repnz
or
pop
aas
add
add
dec
xchg
cwtl
out
add
xor
call
cmp
xor
ret
sbb
push
dec
jb
data16
and
shlb
mov
jo
dec
cmp
int3
pop
jl
fnsave
sbb
add
addr16
adc
clc
test
mov
jge
inc
ret
jbe
sub
and
add
sbbl
js
cmp
xor
fdivrl
lods
jmp
loop
test
jge
add
stos
push
clc
mov
repz
es
nop
pop
adc
mull
mov
mov
push
stos
sarl
dec
add
daa
push
subl
or
mov
or
cmp
dec
add
mov
mov
pop
fstpl
popl
jne
push
add
mov
loop
test
shlb
inc
hlt
inc
jb
add
stc
inc
add
stos
mov
lods
fs
add
or
push
push
push
addl
sahf
jmp
dec
xor
adc
dec
in
xor
shrl
icebp
aaa
add
das
inc
fadds
mov
inc
in
xchg
subb
jmp
adcb
add
sub
push
add
pusha
ficomps
xor
add
repnz
inc
xchg
out
pop
clc
add
sub
push
insb
xor
js
popl
lret
cmp
in
fiadds
xor
or
sub
stos
dec
mov
add
mov
dec
mov
in
mov
sti
push
loop
add
push
ja
fcompl
add
sbb
xchg
push
push
and
jbe
insb
adc
lret
loopne
mov
pop
cmp
mov
int3
jp
mov
add
push
jae
nop
inc
add
les
ljmp
pop
pop
sar
push
add
insl
mov
or
xchg
jl
add
in
fwait
aad
ret
push
sahf
push
mov
shl
adc
dec
push
add
out
jne
cli
test
xchg
add
sbb
mov
inc
push
push
scas
out
xchg
add
mov
int
outsb
add
loope
shl
test
test
sbb
jb
inc
imul
sti
stc
cmp
data16
xchg
shrl
adc
pushf
push
fisttpl
pop
add
push
adc
movsb
jge
mov
test
sub
adc
aaa
inc
and
xorl
or
adc
pop
imul
add
bound
ret
lds
dec
outsl
aad
loopne
mov
add
mov
push
jl
sarb
xor
subl
add
xchg
jae
or
iret
cmp
cs
add
inc
cmp
sub
push
lea
paddsb
dec
cmp
push
lret
sbb
add
sbb
add
xchg
mov
je,pn
out
add
jecxz
aaa
xor
push
mov
inc
xchg
xchg
xchg
add
jg
xchg
mov
push
sub
mov
mov
js
adc
jl
sub
dec
loopne
adc
movsb
xor
add
push
pop
inc
cltd
mov
and
jns
call
cmc
add
lahf
push
and
pop
add
imul
jne
ja
clc
enter
rcrb
popf
ret
or
outsl
pop
add
fnstenv
sub
mov
andl
imul
cmp
pop
mov
add
in
sbb
or
ja
add
shrb
mov
orb
pop
adc
call
pop
push
aas
and
mov
push
adc
sbb
punpckhbw
mov
cmp
rcrl
pop
xchg
pushf
aas
xor
repnz
xor
add
stc
dec
adc
mov
iret
popa
call
lock
rorl
stos
xchg
daa
pop
and
xlat
add
arpl
dec
cmp
inc
cmp
les
arpl
sarl
fisttpll
inc
outsl
rclb
adc
and
xor
add
jge
outsl
ja
sbb
mov
inc
jb
cmp
and
dec
xor
jl
jmp
addl
nop
in
scas
mov
push
adc
aam
cmpb
cmp
loop
mov
popa
jnp
sbb
dec
fdivs
xchg
and
ss
mov
cmp
push
sbbl
rcrl
and
lock
ficoms
in
xchg
scas
popf
cmc
addl
aam
mov
adc
in
add
add
and
mov
cld
mov
test
loop
clc
xorb
les
fwait
push
or
inc
addb
cld
or
jne
pop
loopne
jbe
adc
scas
cmpl
and
out
pop
lcall
push
sub
ja
mov
lcall
xor
inc
int3
adc
dec
push
adc
sbb
jnp
add
add
or
pop
push
adc
adc
in
lock
adc
call
inc
jne
add
call
inc
mov
ret
adc
cmp
test
add
pop
test
add
inc
js
adc
leave
push
call
sbb
hlt
dec
mov
ja
push
xor
and
or
adc
insb
sub
or
mov
out
test
mov
roll
jecxz
add
mov
jae
xchg
mov
rcrb
xor
dec
sub
clc
test
addb
dec
call
xchg
sub
pop
mov
inc
fadd
or
xor
sub
cmp
packsswb
push
mov
jns
dec
mov
lock
dec
les
add
mov
incl
lods
cli
add
flds
sbb
adc
add
aaa
lret
call
sbb
mov
dec
push
daa
cltd
cld
lahf
aas
push
cmp
in
cmp
mov
add
push
add
xchg
fwait
add
rorl
jo
add
jg
and
mov
inc
out
sub
das
sub
dec
xchg
cli
je
mov
push
adc
cs
and
int3
mov
daa
icebp
push
les
ficoml
sub
xor
daa
adc
adc
adc
push
or
fldl
push
or
push
xchg
popf
test
adc
das
rolb
xor
dec
test
das
fcomps
adc
sbb
lods
xchg
faddl
ficomps
test
pusha
rol
add
aas
push
xchg
push
outsb
cwtl
shlb
pop
or
je
push
and
sbb
add
inc
xor
cmp
test
jb
inc
cld
call
aaa
jle
nop
cwtl
add
shll
fsubr
fstp
or
xchg
dec
nop
jno
mov
out
je
das
mov
fnstenv
add
aam
mov
add
sbb
ja
nop
inc
lahf
adc
pop
es
iret
and
daa
add
push
inc
loop
xor
push
push
inc
jl
add
cld
mov
jne
add
mov
repz
pusha
lahf
inc
test
dec
add
gs
stc
loop
or
daa
outsb
sub
js
push
inc
dec
add
or
test
sub
jo
push
lea
xchg
add
adc
popa
push
dec
add
push
cmp
sub
push
pop
lds
cs
sbb
sti
xlat
jne
fimuls
dec
sub
push
jecxz
jnp
add
pusha
pop
mov
cmp
mov
push
add
dec
xor
dec
dec
and
mov
sub
push
jp
fstpt
leave
repnz
or
test
xchg
cltd
push
xor
mov
iret
sahf
lock
sarl
stc
mov
add
movsb
mov
xor
add
jecxz
nop
push
iret
sub
lods
fwait
lret
clc
mov
stc
adc
sub
cmc
jp
aaa
add
adc
das
repz
stos
add
movsl
arpl
mov
jbe
mov
add
push
fistpl
lock
adc
and
add
jge
stos
cwtl
popf
clc
push
lea
and
jl
mov
add
xor
repz
sti
and
xor
pop
inc
lods
shll
adc
push
dec
loope
inc
add
mov
or
in
cltd
xlat
mov
jp
or
iret
cmp
sbb
hlt
sub
add
fsubl
xchg
add
dec
testb
imul
shll
mov
xorb
aaa
insl
adc
cmpsl
adc
dec
cwtl
xchg
add
data16
push
push
pop
pushf
jb
imul
out
mov
cmp
sbb
lret
popl
xor
mov
dec
add
sbb
leave
xchg
cmove
insb
sub
loopne
xor
imul
cltd
or
jl
pop
sti
scas
sbb
dec
outsl
je
push
scas
addr16
aam
sub
das
xchg
mov
push
inc
icebp
or
pop
jns
aad
cmp
cli
out
add
and
add
out
pop
or
add
je
add
push
lret
jle
imull
cmp
lods
jmp
inc
imul
mov
and
mov
incb
rolb
cmp
add
pop
imul
or
sbb
in
in
jns
inc
subl
je
mov
popa
or
loop
std
dec
enter
adc
in
int3
add
arpl
add
loope
ds
dec
inc
or
push
idivl
adc
push
inc
fs
add
jmp
cld
add
push
dec
add
scas
loopne
test
add
jle
imul
lea
out
add
incb
repnz
jae
popa
xchg
addr16
aas
push
or
nop
lods
mov
jg
push
pop
cmpsl
mov
push
dec
sbbb
test
push
test
push
cmp
lock
dec
jl
add
dec
cmp
mov
add
mov
gs
push
and
cmpsl
and
pop
pop
cmp
add
roll
mov
fdivs
pop
pop
pushf
sbb
inc
lret
mov
in
out
add
sbb
lahf
and
add
or
cmp
xchg
inc
mov
add
dec
add
andb
cli
inc
sub
int
shlb
in
pop
add
jp
push
je
es
shll
lcall
int
mov
das
pop
popa
in
inc
mov
out
add
dec
out
iret
add
jl
lahf
fcomp
fildl
ja
jle
sbb
int3
mov
js
fildll
fwait
mov
test
xor
outsb
movsb
mov
mov
ja
jbe
pop
xor
popa
incl
or
mov
sbb
xorb
int3
hlt
add
std
xor
das
pop
stos
inc
enter
or
mov
pop
aad
or
out
fldt
hlt
andl
in
out
roll
fisubl
fs
int3
add
sub
add
xchg
push
fnstcw
push
in
sbb
push
ret
psllw
mov
mov
add
adc
movsl
fldcw
inc
test
sahf
add
fucomp
push
fidivrs
pusha
fistl
cs
movsb
shrl
sub
add
scas
mov
lldt
dec
aad
sarb
mov
adc
hlt
fiaddl
test
mov
add
in
xchg
ss
and
aad
stc
add
mov
adc
add
mov
push
add
sub
add
push
xor
rcll
cmc
jbe
add
sahf
push
nop
and
add
std
test
in
xor
mov
stos
add
inc
adc
jbe
and
add
adc
push
pop
adc
xor
add
cmp
sar
mov
or
call
add
call
aad
sbb
xor
jae
sbb
lods
lret
cmp
orb
out
and
add
mov
push
dec
inc
inc
cmp
mov
push
lahf
jp
loopne
and
pop
xor
rorb
push
icebp
mov
add
xchg
add
out
jns
dec
pop
add
xchg
add
sarl
insl
lret
push
add
push
pop
test
dec
cwtl
in
or
inc
sbb
adc
or
mov
and
dec
push
es
enter
aam
add
sub
jg
jl
lret
pop
aas
nop
push
jmp
mov
addr16
sbb
fsts
and
push
in
enter
pop
xchg
sub
mov
nop
xor
pop
sbb
inc
and
pop
inc
std
add
jns
jmp
and
cmp
add
xchg
std
push
test
in
sahf
add
sbb
dec
and
and
in
shlb
inc
add
cli
push
fdivrl
push
outsb
add
jmp
pop
es
popa
mov
dec
push
jo
or
notl
mov
and
fisttpl
xor
cmp
jl
popa
pop
pusha
int
jae
call
inc
pop
jge
adc
daa
pop
xor
cmp
adcb
ljmp
stos
jb
mull
cmp
mov
fisttps
out
imul
into
add
fsubrl
cmpsb
int
jbe
jl
add
inc
mov
test
dec
add
outsl
in
cmp
or
add
inc
add
lds
xchg
add
pop
fsts
jno
insb
add
test
fistps
xchg
adc
cmp
repz
add
and
mov
pop
rolb
loope
gs
jnp
rolb
cmp
adc
rorb
adc
hlt
test
insb
out
adc
jp
cmpsl
xchg
out
aas
add
mov
adc
dec
lods
sub
mov
cs
leave
add
inc
inc
lahf
addb
cmp
mov
sbb
pushf
xor
adc
push
mov
mov
jno
out
ret
stc
cmp
push
add
xchg
pop
leave
ljmp
jg
in
js
mov
js
sbbb
add
cmc
mov
add
pop
sysenter
fsts
nop
pushl
icebp
add
sub
add
mov
inc
jge
loop
test
fisubl
jle
add
jnp
and
push
jae
aaa
add
mov
mov
and
cmc
mov
ret
add
inc
into
repnz
jp
add
in
mov
in
pop
mov
daa
cltd
cli
daa
lds
add
imul
add
xor
jecxz
add
and
cmp
test
mov
push
test
les
sti
movsb
pusha
negb
out
clc
push
aas
cltd
adc
jo
subb
mov
pop
int3
sbb
push
mov
dec
adc
sahf
stos
add
pop
cltd
outsl
stc
sbb
xchg
out
stos
in
mov
lods
fbld
jns
mov
add
sarl
add
xor
push
scas
sti
outsl
add
fsubr
fdiv
orl
int3
add
sub
add
icebp
fldenv
pop
out
inc
pop
add
jo
cli
push
jle
adc
add
divb
jg
pop
stc
in
fisttpl
insb
sbb
movlps
call
std
popf
mov
out
pop
pusha
cli
push
outsl
xchg
lock
mov
rcll
fdivrs
loope
jg
iret
inc
in
lcall
std
ds
mov
fadds
lahf
shl
adc
push
test
jmp
ss
out
sbb
jo
popa
inc
lock
push
fnstsw
xchg
add
repz
fwait
data16
sti
fiaddl
shrb
push
jl
jae
add
sti
sub
addr16
cmpb
adc
pusha
popf
test
jmp
mov
enter
lds
jne
ja
jns
add
mov
stos
fldl
scas
stos
and
sbb
xor
je
roll
test
lret
and
stos
sub
andl
jge
rorl
outsl
jg
sub
filds
test
mov
sub
leave
jge
add
nop
add
mov
cwtl
xchg
insb
push
and
sub
ja
sbb
jge
adc
add
out
push
fidivrs
test
add
and
push
movl
adc
jo
mov
push
addb
fnstcw
add
push
mov
add
xchg
fnstsw
rcr
add
sub
push
push
rcrb
notb
int3
sbb
cwtl
xor
mov
shlb
mov
xor
jecxz
je
push
sbb
jge
loope
adc
daa
cld
pop
mov
mov
xor
andb
js
sub
add
testl
mov
jmp
mov
jl
dec
dec
or
add
sbb
sbb
push
inc
rol
cmp
inc
clc
push
inc
sbb
in
lock
sahf
push
or
fildll
and
sub
arpl
mov
sbb
int
add
in
les
scas
cs
je
aas
das
dec
mov
pop
sub
push
adc
push
dec
gs
cmp
add
pop
dec
iret
arpl
cmp
and
aaa
lds
andl
int
xor
or
sbb
cmp
mov
cmp
add
in
ret
sub
pusha
lods
xor
fwait
dec
pop
lds
mov
mov
jnp
inc
xchg
cltd
add
repnz
jecxz
fisubs
mov
or
pop
adc
orb
inc
imulb
jne
or
sahf
push
inc
add
push
popf
and
sub
test
inc
and
lret
test
std
cmp
xor
add
daa
jp
or
ret
js
dec
xor
mov
add
mov
sub
mov
loope
lret
adc
test
sbb
and
xchg
dec
inc
mov
pusha
jle
xchg
or
add
ljmp
and
mov
cmp
inc
dec
mov
xchg
stos
inc
and
sarb
or
jns
cld
push
fcompl
testl
aad
cld
jne
push
push
inc
pop
cmpb
loope
dec
jno
mov
cmp
loopne
sbb
loopne
xor
ficoms
adc
mov
not
add
clc
test
push
adc
stos
mov
push
dec
sub
pop
test
enter
add
adc
sbb
push
jo
or
mov
mov
sub
sbb
or
popf
pop
add
dec
lods
mov
xor
jb
or
sub
sbb
and
inc
les
arpl
inc
divb
lods
aas
es
nop
lods
jbe
add
add
addl
aaa
in
clc
inc
cmp
and
mov
pop
mov
mov
add
clc
mov
ljmp
pushf
icebp
jae
mov
and
add
pop
mov
dec
cmpl
push
dec
daa
pop
lret
nop
xchg
inc
out
add
jecxz
push
inc
push
das
in
test
aaa
xchg
hlt
or
dec
xchg
cmp
add
rcr
adc
icebp
outsb
pop
lock
ljmp
daa
aam
dec
jae
sar
xor
loopne
in
mov
mov
mov
call
lock
les
add
mov
push
push
mov
lahf
xor
movsb
add
data16
add
out
sahf
popa
ret
mov
je
mov
pop
ds
sarb
mov
repz
sbb
insb
push
movsl
test
addb
push
mov
push
dec
pushf
cmp
dec
cmc
adc
lcall
sbb
adc
adc
sub
xor
std
mov
inc
mov
insb
sbb
add
repnz
push
sti
xchg
pusha
lds
adc
movsb
andb
pop
pop
mov
pop
dec
or
mov
andl
pop
add
in
xor
xchg
pop
adc
adc
adc
ss
mov
pop
out
sub
clc
add
lret
jmp
fisttpll
xor
push
dec
and
cmp
and
inc
mov
add
int
jecxz
cmp
or
cli
push
dec
mov
mov
shr
pop
sbb
dec
addb
pusha
jne
popf
jmp
imul
cs
mov
push
add
je
mov
test
cmp
adc
pop
loop
add
movsb
add
mov
and
jl
add
mov
cmp
lods
rcrb
ja
add
adc
mov
mov
add
jbe
mov
sbb
adc
cmpsb
sbb
cmp
insb
clc
sub
push
lods
outsb
add
icebp
sub
iret
mov
xor
push
pop
aas
add
mov
lahf
xchg
pop
test
jp
add
test
into
mov
xor
sbb
inc
cmp
mov
cmp
add
imul
dec
fwait
jo
shrd
arpl
jns
into
adc
std
test
jle
pop
xor
ds
or
bound
clc
ret
dec
mov
dec
cli
in
mov
cmp
add
xchg
inc
pop
push
je
mov
jl
scas
dec
mov
xchg
mov
or
js
es
or
aam
imull
pusha
imul
xor
jns
inc
inc
push
adc
mov
out
imul
and
adc
push
add
sarl
cmpl
in
xor
adc
mov
sbb
jns
shlb
shrb
sub
mov
adc
je
and
lret
push
lea
sbb
rorl
pop
or
int3
dec
xchg
pop
movsb
or
jmp
enter
in
mov
or
nop
leave
mov
fidivrl
scas
mov
call
mov
mov
leave
lea
in
pop
sahf
test
adc
and
jp
pop
add
cltd
push
rolb
sbb
dec
and
inc
test
mov
mov
pop
push
faddl
sub
and
daa
std
add
mov
add
add
or
mov
in
push
pusha
out
call
xchg
pop
jp
push
xchg
add
push
cmp
fldenv
cmp
dec
ret
loopne
test
lds
rolb
or
mov
mov
xlat
imul
xor
xchg
sti
dec
push
push
jbe
or
add
inc
stos
push
mov
sbb
jne
adc
jle
push
mov
out
sahf
xlat
clc
out
gs
iret
pop
outsb
nop
rorb
jns
cwtl
andb
push
mov
or
ret
mov
scas
push
xchg
inc
adc
test
lock
adc
add
mov
aaa
shrb
cli
pop
push
mov
lret
jnp
outsb
hlt
mov
xchg
cmovg
outsl
jl
adc
dec
or
adc
pop
test
and
adc
sbbl
fidivs
push
aaa
sub
shr
adc
std
sub
mov
push
sahf
or
xor
and
jl
pop
inc
ja
inc
push
and
add
mov
push
cmpsl
mov
test
clc
lea
mov
add
push
lret
or
adc
inc
dec
rcrl
and
add
adc
sarb
inc
pop
cld
idivl
out
push
test
adc
fstps
add
ds
iret
ljmp
adc
mov
inc
ja
dec
mov
inc
mov
call
les
lea
aas
addb
mov
es
pop
test
xor
roll
xchg
push
mov
rorb
xchg
nop
repz
dec
adc
loope
mov
nop
add
cmc
mov
sub
add
mov
sub
mov
xchg
or
out
push
cwtl
fadds
mov
fstl
jns
subb
in
mov
cmpsb
jp
dec
les
mov
mov
mov
adc
inc
and
mov
jl
aad
inc
add
adcb
out
mov
mov
adc
jmp
ljmp
mov
sub
imul
xchg
push
out
inc
inc
dec
jp
test
adc
lcall
cmpb
shrw
add
ljmp
pop
xor
dec
sbb
jle
cltd
iret
jmp
xchg
ss
mov
mov
adc
add
xchg
push
int3
sub
cmp
pop
mov
mov
or
pop
cmc
adc
xorl
shrb
add
add
mov
add
test
jmp
push
mov
and
xchg
lods
xchg
hlt
xchg
adc
nop
shlb
cmp
xchg
jp
xchg
pushf
mulb
adc
and
in
push
adc
dec
lods
push
adc
rclb
mov
cmpsb
cwtl
sbbb
fisttpll
and
push
xor
pop
pop
mov
ret
jp
or
clc
jge
add
nop
pop
push
jno
cmp
fdivr
outsl
xlat
xor
pop
add
bsf
insb
pop
sub
adc
jne
pop
mov
sub
sbb
dec
lret
insb
enter
mov
jge
add
add
push
data16
testb
jmp
inc
push
loopne
inc
cmp
aas
adc
or
loopne
inc
xor
pusha
mov
arpl
sbb
pop
call
push
mov
fxtract
sbb
test
jge
in
pop
in
cwtl
mov
xchg
scas
jl
jno
push
mov
call
in
mov
adc
addr16
stc
in
and
fstps
lds
xorb
mov
or
ja
insb
xor
xchg
mulb
inc
xchg
mov
add
ja
insl
je
in
and
adc
inc
int
inc
test
mov
add
gs
push
and
xor
jae
pop
sbb
inc
mov
xchg
fcomps
int3
movsb
cmp
faddl
push
orb
out
in
daa
add
int3
addb
cmp
sub
pop
mov
movsl
fistpll
add
data16
dec
jns
rcrl
jae
andnps
pop
pop
mov
dec
xor
xlat
or
ja
jp,pt
xor
and
push
cwtl
cmp
out
outsl
pushf
sarb
movsl
add
jo
sahf
fs
xor
repnz
mov
jns
mov
push
inc
enter
in
das
inc
and
push
lret
push
notb
or
ss
push
lds
sub
adc
pusha
nop
mov
mov
cmp
jne
xor
pop
cltd
xor
lods
cmpsl
add
addr16
xchg
mov
cmp
jns
dec
sub
inc
xor
repnz
pushf
nop
inc
ficoms
fwait
sbb
mov
cmp
add
in
add
mov
pop
adc
and
mov
push
cmpsl
outsl
inc
ja
pop
mov
mov
push
push
jno
test
lcall
pop
add
pop
aaa
mull
add
and
test
add
push
aaa
sbb
push
mov
call
lock
imul
mov
test
or
es
icebp
sahf
testb
and
inc
pop
repnz
mov
cld
data16
mov
xchg
cmc
and
sbbb
jge
nop
pop
lods
push
dec
or
adc
xor
mov
mov
or
xor
add
dec
xchg
hlt
out
add
cmp
imul
add
push
push
sbb
loopne
in
xor
mov
adc
das
xor
push
loopne
and
sti
repz
leave
test
xchg
idivl
sbb
push
ja
cli
xor
repnz
pop
iret
push
inc
mov
insb
xor
hlt
and
adc
or
loopne
cmc
das
ds
add
push
push
pusha
pop
mov
add
fsubl
cmp
pop
xchg
xchg
loope
push
and
filds
mov
xor
fisttpll
sub
bound
aas
mov
sub
int3
xchg
pop
add
movsb
xor
add
fcmovnb
sti
pop
in
int
adcl
stc
mov
nop
add
add
mov
loope
fadds
inc
cmpsl
test
sub
pop
push
xchg
xchg
mov
test
movsb
jne
test
pop
xor
mov
push
jae
es
lock
popl
mov
push
stos
in
int
in
add
mov
xchg
or
xor
add
arpl
cli
daa
and
add
ja
pop
lock
inc
loope,pn
lods
imul
mov
inc
sti
pop
and
fists
adc
clts
and
xor
popl
mov
cmp
or
in
sub
pop
adc
mov
movsb
roll
inc
and
push
sub
inc
dec
add
inc
inc
pop
scas
dec
pusha
mov
add
out
cmp
push
dec
and
pop
dec
mov
xchg
add
inc
mov
or
and
fcoms
add
push
pop
aam
pusha
xchg
dec
ret
nop
mov
pop
push
pop
jo
or
jg
or
rorb
adcb
and
mov
add
and
sbb
lds
sahf
outsl
es
in
fisttps
dec
cmp
push
add
and
xchg
lock
pop
add
arpl
mov
add
mov
dec
dec
fadd
jnp
fnstsw
jns
mov
popa
test
scas
bound
push
mov
cmp
pop
dec
cmp
adc
mov
pop
add
jle
test
jns
clc
mov
jge
stc
jbe
cmove
sbb
inc
cmpsb
sbb
inc
inc
mov
add
cmp
xor
dec
mov
mov
xchg
dec
jge
andb
fnstsw
scas
or
in
adc
mov
inc
mov
adc
push
movsb
cmp
and
adc
xchg
loop
lahf
dec
cmp
sbb
add
mov
push
into
dec
dec
dec
mov
or
add
lea
mov
sarb
or
adc
dec
mov
sbb
sub
nop
dec
sub
mov
inc
jno
outsb
sub
xchg
and
add
movsb
adc
mov
cmpsl
movsb
jge
dec
add
scas
int3
sbb
mov
mov
inc
or
jo
mov
or
mov
xor
and
frstpm(287
dec
jmp
loope
repnz
addb
bound
cltd
aaa
xor
lods
xchg
inc
inc
fadds
les
test
shll
jo
sbb
jns
lods
dec
daa
xchg
enter
outsl
popf
and
in
cmpsb
xchg
lcall
or
jno
cmpsb
push
pusha
out
or
movsl
mov
xchg
stos
mov
test
or
add
rorb
fcomip
inc
cmp
movsb
dec
aas
push
sarb
and
movsl
fdivp
enter
es
lret
jne
xor
fldcw
add
add
insl
pop
sarl
in
adc
cmp
or
sub
int3
dec
mov
pop
rol
mov
lock
push
mov
leave
push
jae
mov
push
mov
jl
loop
add
push
xor
push
or
and
adc
enter
lret
sbb
add
cmp
cmp
adcl
cmc
jb
jns
add
adc
push
dec
mov
mov
pop
lret
jne
add
pop
int3
sahf
jl
orl
cld
xchg
jns
or
test
mov
inc
and
pop
mov
add
mov
leave
adc
nop
inc
pop
xchg
shrl
stos
out
dec
cmp
inc
shl
dec
dec
dec
and
jle
and
or
jge
popa
sub
in
jp
pop
int
mov
sub
cltd
mov
pop
vmaxsd
push
adc
lods
mov
nop
mov
ds
xor
andb
inc
jb
add
icebp
in
movsb
xchg
mov
rcrb
add
rep
push
push
cmp
test
test
mov
in
adc
int3
and
add
sbb
insb
cwtl
rclb
inc
and
push
adc
movsb
in
out
add
sbb
mov
add
sub
or
rcl
jae
add
std
lods
cmpl
mov
lret
sbb
and
je
lret
xchg
data16
movsb
or
and
cmp
jns
out
adc
inc
dec
hlt
pop
add
xor
in
loopne
inc
add
cmp
movsb
rclb
mov
insb
rcrb
add
mov
lea
cmp
push
add
xchg
add
sub
xor
mov
jns
add
adc
cmp
jp
bound
xchg
adc
jns
mov
xchg
mov
sbb
sbb
mov
rcll
addb
insl
fs
sub
add
call
ljmp
jnp
push
test
mov
shl
and
clc
push
mov
adcl
push
adc
pop
xor
fistpl
jp
add
cmp
scas
arpl
lds
bound
out
xor
cmp
cmp
iret
xchg
push
scas
lcall
lret
mov
jmp
dec
add
xchg
jns
outsb
loopne
mov
test
bound
pop
add
in
pop
and
pop
iret
mov
in
shlb
adc
test
xor
ja
add
jp
cli
subl
or
sbb
adc
sub
adcl
xor
shrl
inc
sub
and
insl
hlt
dec
shlb
xchg
push
push
add
mov
jnp
jo
pop
or
dec
xor
inc
add
jne
faddl
sub
sbb
hlt
sbb
and
into
aam
jns
add
mov
ss
dec
push
push
and
pushf
adc
mov
mov
add
divl
add
inc
add
stc
jmp
enter
sahf
adc
enter
sarb
fcomps
mov
push
pop
int
jecxz
mov
pop
dec
ljmp
pop
mov
add
in
shlb
fs
and
mov
jg
xor
xchg
nop
mov
add
in
dec
mov
xor
movsb
and
add
xrelease
mov
cwtl
test
insb
push
daa
sbb
add
inc
xchg
in
mov
mov
jb
rclb
mov
lock
imul
or
ficoml
lds
sub
sbb
xor
in
nop
sbbb
dec
add
mov
inc
dec
lds
daa
cld
xor
add
jne
sub
pop
sbb
sbb
and
out
std
jo
xchg
clc
adc
hlt
test
and
mov
popf
sbb
mov
mov
fdiv
fisubs
jae
or
dec
out
adc
stos
push
aam
shrl
xorb
lods
or
adc
xlat
call
je
push
xchg
enter
push
xchg
mov
jb
ss
pop
or
mov
dec
cmpsl
fldcw
push
and
pop
mov
sub
andb
enter
cs
xchg
addr16
lods
add
clc
aas
inc
jle
cmp
add
add
jge
pop
add
rcrb
stos
xbegin
mov
rcrb
je
sti
pop
adc
sbb
dec
fwait
add
mov
jo
adc
push
or
andl
mov
outsl
xor
sbb
jno
int3
andb
out
and
lds
push
add
roll
pop
test
xor
and
sub
mov
ret
or
imul
movsl
sbb
xchg
pusha
mov
sub
push
out
xorb
jmp
push
add
jb
and
mov
outsl
jge
add
and
loopne
add
add
sbb
push
xchg
inc
stos
popf
test
add
and
jmp
sub
imul
or
lds
jae
popf
cld
fildl
and
jge
scas
loopne
mov
add
mov
pop
xchg
in
das
or
in
fisubrs
test
or
clc
fmuls
mov
loop
jbe
add
pop
test
shlb
andb
dec
sub
divb
xor
ss
mov
jae
add
or
fsubl
inc
popa
out
sbbb
sub
xor
lds
or
call
scas
inc
lret
jnp,pt
cld
cmp
pop
or
xchg
xor
mov
push
xabort
orl
cmp
insb
inc
push
sbb
fmul
test
add
jno
cmp
call
dec
roll
push
movsb
mov
js
pop
loope
dec
mov
jge
mov
sahf
test
xchg
mov
cltd
mov
sub
test
or
dec
or
cld
inc
xchg
in
call
push
mov
mov
sub
idiv
xchg
sub
inc
mov
fcmovu
push
stos
sub
adc
out
andb
pop
adc
scas
or
pop
or
xchg
decl
lcall
mov
fistps
push
mov
mov
jo
leave
das
int3
daa
test
mov
sub
cmp
orb
loopne
aas
aam
inc
jg
sbb
sbb
mov
aam
inc
imul
mov
fs
arpl
and
push
adc
xor
clc
mov
sub
sub
or
cmp
and
push
fistpll
movsb
push
add
dec
mov
inc
test
fxtract
inc
lret
arpl
ljmp
movups
decb
xchg
mov
mov
and
adc
test
add
orl
int3
fsubl
mov
and
jno
daa
push
mov
dec
cmpsb
fcmovbe
add
mov
cmp
sti
sbb
pop
and
pop
shl
daa
mov
aam
xchg
dec
dec
jo
call
in
rcll
scas
ret
add
std
inc
inc
test
enter
nop
sbbb
shlb
jo
int3
adc
inc
add
and
or
cmp
sbb
adc
cmp
lea
xor
sub
mov
or
insb
roll
out
lock
and
repz
adc
sbb
je
je
pop
and
ret
sub
cltd
in
addr16
test
out
test
testb
xchg
adc
sub
loopne
push
mov
cmp
inc
xor
imul
test
and
add
ss
sub
lods
xchg
mov
jl
cmp
add
push
scas
and
push
add
mov
pop
xchg
popf
rolb
jb
add
sub
dec
push
inc
adc
dec
and
or
test
call
pop
mul
aas
inc
add
add
es
mov
pop
push
lock
add
adc
jmp
les
add
ffree
push
repz
add
mov
adc
clc
pop
mov
in
push
loope
inc
sarl
or
test
cmp
xor
stos
lret
aas
lds
pop
mov
aas
add
push
jae
inc
sahf
test
nop
pusha
hlt
cmp
sbb
mov
or
mov
lea
push
loopne
lock
xor
dec
mov
pop
data16
pop
add
xchg
pop
cmp
leave
or
testl
add
sahf
cmp
add
data16
cwtl
mov
push
lcall
pop
mov
jae
stos
loope
in
dec
je
faddl
mov
push
xchg
addr16
lds
adc
out
ret
sub
and
push
xchg
add
and
adc
andb
jmp
xchg
out
xor
lahf
fidivrs
and
add
dec
dec
mov
push
js
add
cmpsb
sub
add
outsb
adc
scas
and
repnz
xor
jns
adcb
xchg
test
add
fisttps
adc
jge
ret
mov
sbb
shrl
xor
daa
and
sarl
add
mov
ret
cmp
jo
adc
jae
add
mov
jg
add
dec
out
negb
xor
sub
inc
pop
lock
push
mov
fadds
bound
dec
leave
pop
jmp
sbb
movsb
and
add
sub
inc
pusha
xchg
inc
inc
bsr
lea
scas
int3
mov
in
xlat
add
loope
lods
and
ss
add
repnz
dec
js
inc
mov
aaa
sbb
imul
in
cmp
inc
rol
or
imull
fstps
mov
jp
lock
rcll
jmp
and
cmp
and
daa
cmp
outsl
or
loopne
mov
ret
xchg
stos
fs
jecxz
fs
sbb
and
or
call
lcall
sbb
push
xchg
push
add
test
lret
shl
jmp
add
and
mov
xchg
shlb
sbb
or
test
clc
daa
inc
xor
jo
mov
lret
test
lock
mov
ss
inc
cmp
lods
sahf
enter
or
outsl
add
inc
push
mov
addb
cmp
mov
dec
lret
mov
mov
inc
add
cmovne
adc
mov
pop
inc
sbb
nop
or
add
sahf
and
dec
jle
jl
cltd
fistpll
in
lret
aad
push
int
pushf
test
in
add
incl
insb
jge
in
add
out
mov
cwtl
add
ffree
add
inc
ret
loope
sbb
jp
add
jno
js
pop
je
push
jbe
mov
nop
arpl
adcb
cmpsl
or
imul
push
pusha
or
jne
aad
sbb
and
adc
js
enter
and
fidivrl
in
mov
xchg
sub
sbb
add
xor
ja
add
jge
jbe
jecxz
xor
mov
gs
sub
loopne
stos
dec
xchg
pop
in
movsb
push
out
add
jne
xchg
call
mov
pop
decl
add
and
sub
fimuls
push
push
dec
in
or
cmpsb
addl
pop
dec
push
jo
loopne
xchg
clc
xor
adc
out
pop
push
daa
test
and
test
inc
xor
cwtl
or
leave
sub
pop
cmpsb
out
insl
cs
pop
fisttpl
cwtl
inc
adc
adc
call
or
nop
loopne
stos
push
js
in
sub
xchg
adc
pusha
and
inc
mov
sahf
mov
and
pop
sbb
rcll
xchg
in
add
fldenv
in
and
push
add
sarb
push
pop
sbbb
add
loope
mov
pop
pop
mov
inc
or
ret
mov
xchg
pop
mov
loop
jmp
addr16
add
pop
xlat
test
add
jb
sub
push
xchg
les
subl
pushf
scas
movsb
and
andb
mov
je
cmp
xchg
adc
out
jge
pop
cmp
cmpsl
cmp
lcall
jp
adc
and
add
insl
loopne
es
pop
js
fdivrs
popf
nop
test
in
shll
ljmp
movsb
pop
xorb
jle
add
xchg
inc
add
imul
xchg
add
cwtl
lods
xchg
jns
jne
cmp
jecxz
sarb
cwtl
adc
pop
cmpsl
gs
sub
mov
adc
fucom
add
out
dec
and
shrb
repnz
or
adc
test
sub
cmp
adc
push
jg
add
jge
sbb
sbb
push
in
test
cmp
adc
test
sbb
int3
add
test
test
pop
das
inc
xchg
es
inc
jns
into
pop
add
cli
xchg
jnp
int
shrb
inc
shl
add
pop
pusha
mov
dec
add
lahf
sbb
mov
dec
xor
test
dec
sub
add
ljmp
sbb
out
or
arpl
lret
popf
fisttps
dec
and
loopne
stos
out
popf
dec
xchg
push
imulb
sub
mov
les
rcrl
iret
iret
push
test
dec
dec
rorb
enter
leave
out
xchg
cmp
and
adc
in
inc
repnz
lea
scas
cs
mov
mov
jmp
in
cld
imul
or
test
loopne
and
mov
mov
sub
adc
testb
dec
in
sub
bnd
les
mov
imul
jns
inc
in
sub
inc
out
adc
add
mov
and
add
jg
mov
sbb
adc
call
outsb
inc
pushf
loop
or
es
push
adc
xchg
rolb
pusha
mov
mov
jmp
or
and
cwtl
in
pop
push
jo
incb
xchg
pusha
push
and
call
add
mov
movsl
adc
pop
stc
push
add
in
orl
mov
dec
enter
push
or
aam
idiv
add
push
loop
cmpsl
mov
push
push
ja
inc
add
daa
push
sub
in
aas
adc
xlat
pop
fsubrl
add
outsb
and
es
mov
push
ja
push
xor
or
push
push
cli
mov
cld
sub
bnd
mov
ret
das
dec
sub
gs
or
loopne
lcall
je
xchg
dec
les
aas
outsb
loopne
jnp
insl
and
aad
int3
add
lret
inc
imul
mov
cmpsb
jmp
mov
popf
push
in
aad
das
cmp
and
les
mov
imul
jmp
cmp
sub
fistps
enter
mov
mov
push
jl
inc
cs
das
and
adc
loope
add
fisttps
and
cmp
add
lds
add
rolb
inc
dec
sub
movsb
xchg
add
dec
es
fisubl
mov
xor
inc
dec
sub
sub
fstl
add
ss
inc
hlt
ljmp
movsb
push
add
pusha
nop
adc
xor
cmp
push
cltd
mov
sub
push
test
cmp
in
add
xchg
pop
std
inc
cwtl
dec
ret
jnp
stos
xchg
movsl
add
cmp
push
pop
jae
aas
nop
add
pop
mov
lahf
jle
adc
stos
mov
les
xlat
jae
cmp
jb
add
xchg
repnz
sbb
adc
or
out
imul
clc
inc
test
mov
enter
out
rorb
and
jmp
dec
sbb
mov
add
movsl
jne
and
add
pop
mov
cmpb
scas
hlt
outsb
dec
inc
mov
pop
lds
mov
xchg
or
call
movsl
in
dec
xchg
es
flds
dec
imul
add
cmp
mov
in
mov
add
lods
xchg
add
mov
or
xor
cmp
add
stos
jnp
add
or
xchg
in
inc
sub
mov
add
movsb
arpl
scas
data16
push
popa
popa
mov
jp
jge
clc
xor
hlt
pop
stos
and
aam
ret
jae
dec
pop
xchg
dec
lods
cmp
mov
sub
shrb
insb
nop
adc
jle
cmp
push
push
mov
xchg
inc
je
cmp
push
xchg
pop
cmc
test
xor
add
adc
xchg
repnz
dec
shl
mov
mov
pop
dec
adc
test
cmc
mov
sub
sbb
push
push
inc
jecxz
in
loop
je
pop
xor
mov
add
sbb
push
xor
in
dec
or
jl
sarb
adc
or
pusha
and
inc
add
inc
mov
cli
push
mov
out
les
add
nop
xchg
test
lcall
out
mov
outsb
or
rcl
add
mov
stos
push
cmp
and
inc
pop
cltd
divb
flds
arpl
push
sub
popa
push
mov
and
and
inc
mov
fwait
add
stos
notb
dec
sub
test
xchg
mov
es
out
pop
add
jge
add
mov
rcll
or
cmp
pusha
jnp
mov
adc
in
sbb
pop
es
or
js
lock
imul
filds
movsl
lahf
xchg
cli
push
push
ret
cmc
lcall
and
dec
or
mulb
inc
jo
mov
jmp
jbe
inc
inc
into
add
pop
inc
mov
push
sbb
aad
jns
add
sbb
dec
addl
scas
add
adc
jg
scas
mov
out
orb
icebp
cmpsb
ret
ljmp
rolb
cmc
movsl
addr16
adc
repnz
pop
cmp
cmp
mov
imull
mov
dec
arpl
or
pop
outsb
pusha
sub
xor
sbb
test
ret
jbe
dec
sbb
in
lds
mov
addb
sub
mov
aaa
xor
stc
mov
sub
je
mov
adc
lds
scas
loop
cmp
mov
jns
and
push
pop
add
xchg
leave
mov
or
sbb
push
adc
pop
or
in
and
jmp
add
loop
pop
dec
andl
inc
cmp
ret
xchg
mov
jp
xchg
add
pop
xor
jle
cmp
xchg
repz
movsb
in
add
shl
push
aas
mov
pushf
insl
add
pop
gs
cmp
add
movsl
std
jo
adc
lret
xchg
add
xchg
in
cmp
push
push
out
test
xchg
pop
rcl
push
rorl
xor
dec
pop
inc
ret
test
sbb
add
xchg
dec
mov
lods
add
iret
lret
inc
imul
inc
add
pop
les
and
fcomps
bound
xchg
std
inc
dec
cli
adc
adc
pop
push
sub
inc
and
dec
add
mov
in
outsl
mov
xchg
xor
dec
xor
adc
sbb
push
gs
cmp
jns
xchg
dec
loopne
add
pop
es
mov
ljmp
arpl
ljmp
mov
sar
or
je
sbb
movsb
icebp
xlat
cmpsl
inc
dec
add
out
jb
lret
inc
xor
push
pop
sub
mov
add
push
lahf
rolb
xchg
dec
rolb
mov
pusha
add
stc
fdivs
sbb
test
loopnew
imul
pop
inc
adc
or
dec
cltd
mov
mov
adc
inc
movsl
shl
mov
lcall
and
cmc
popf
inc
stc
mov
add
cmp
dec
inc
and
add
xor
mov
cs
sbb
dec
dec
sub
call
aas
cltd
mov
sti
leave
sub
adc
iret
mov
adc
pop
add
sub
xor
mov
aaa
call
xchg
fisttpl
add
cmp
rcrb
jp
sbb
mov
jl
test
inc
mov
es
js
add
ljmp
movsl
test
add
repnz
shlb
cmc
add
push
adc
pusha
jg
adc
aaa
sbb
cmp
add
bound
push
dec
std
pop
in
in
pusha
imulb
hlt
mov
ret
sbb
das
mov
in
mov
pushfw
aas
mov
movsl
ljmp
call
jbe
or
jge
sub
xor
mov
movsl
insl
cmpsb
jbe
icebp
xor
sub
mov
ret
or
sub
pushw
lock
cmc
mov
and
and
arpl
cmp
mov
pop
add
mov
pop
xor
enter
lret
out
cmp
loop
iret
cli
lcall
cmpsl
loopne
inc
aad
stos
es
push
clc
cwtl
decb
add
push
in
cmp
add
fs
jns
adc
mov
cmpsb
mov
ror
mov
je
cld
inc
div
rorl
xchg
jnp
mov
fldl
cmp
mov
pop
in
sbb
push
inc
hlt
jne
nop
pop
cmp
sub
andb
test
mov
ret
mov
jmp
lret
jns
imul
xchg
pop
ljmp
jns
dec
mov
icebp
fists
xor
mov
int3
subl
clc
test
mov
loope
sbb
out
and
xlat
sub
xchg
sbb
mov
cmc
xor
aad
xor
mov
lret
sti
push
jle
std
add
adc
sbb
sub
mov
sub
add
fsub
movsb
pushf
mov
shr
outsl
adc
add
dec
xor
or
add
xor
loope
lcall
xor
sbb
push
or
repnz
push
xchg
add
jne
and
in
daa
sub
fcoms
dec
add
push
mov
jp
aaa
add
imul
cmp
jae
and
mov
ret
push
mov
fs
dec
aam
nop
mov
inc
and
cli
dec
adc
test
in
cmp
add
lahf
inc
sub
add
call
adc
cmp
test
cmp
xchg
sbb
xorl
mov
lea
pushf
sbb
xor
mov
aam
mov
rcll
test
add
jle
lock
inc
jbe
in
and
ret
add
xor
bsf
sbb
std
sbb
cmp
test
sub
jbe
inc
xchg
cld
out
mov
iret
or
mov
push
xchg
bound
stc
add
pop
dec
daa
xor
and
sbb
mov
jecxz
test
inc
xchg
adc
pop
or
mov
sbb
dec
loopne
frstor
add
lcall
cwtl
adc
movsb
aas
mov
add
inc
popa
jmp
sahf
ret
sbb
lds
add
adc
sbb
xchg
xchg
aad
stc
mov
jns
adc
mov
jne
adc
popa
add
pop
cltd
cmp
xorb
push
inc
jg
in
add
jecxz
add
adc
ja
or
add
mov
sub
inc
xchg
daa
shrl
mov
ret
and
mov
push
out
sti
jg
sbb
add
push
sbb
inc
jl
mull
shll
add
loop
and
dec
pop
mov
gs
inc
push
or
insb
fisttpll
adc
dec
mov
add
fimuls
dec
add
sub
stc
add
adcl
out
fidivrl
fidivrs
inc
lea
test
sub
mov
hlt
in
mov
inc
std
hlt
jge
add
test
movsb
fadds
imul
sub
frstor
ret
aaa
pop
adc
sbb
adc
jg
add
jns
add
sbb
add
rorb
fs
loopne
adc
jns
bound
aaa
dec
hlt
fcoml
repnz
xor
mov
je
fnstsw
arpl
fldt
cmpsb
ds
sarl
inc
insb
push
rolb
xchg
xchg
ss
loopne
cmc
je
jle
add
jns
outsb
add
leave
pop
sahf
out
mov
out
cmpl
or
je
or
cwtl
xchg
lahf
adc
iret
sub
idiv
lret
mov
loop
cwtl
fs
sbb
shll
sbb
add
and
xchg
movsb
add
lea
mov
in
and
mov
add
js
fstps
dec
lods
or
adc
dec
or
sub
jno
sbb
inc
test
xor
cmc
push
jb
sbb
stc
mov
sub
jb
xor
mov
push
loopne
adc
and
inc
cmp
addr16
push
cs
mov
or
repz
dec
shl
nop
xchg
addb
iret
mov
inc
fsubrl
pop
push
add
insl
daa
std
test
jb
cmp
add
aad
nop
sbb
pop
pop
fsubr
xor
jbe
cwtl
push
sbb
push
sbb
mov
hlt
mov
mov
push
notl
add
cmpsb
lret
adcb
test
jmp
jns
jno
faddl
rcll
adc
mov
add
ret
stos
test
sqrtps
sarb
pop
jp
ficoml
push
mov
adc
movsb
ja
adc
aad
js
push
out
aaa
inc
adc
mov
and
pusha
add
subb
xchg
add
cmp
xchg
jno
out
shlb
outsb
pop
sub
jmp
out
test
call
ja
and
cwtl
loop
popf
mov
pop
add
scas
xor
sbb
pusha
pusha
or
jae
call
stos
jp
shlb
cmpsl
pop
mov
movsb
add
push
aad
ja
and
adc
repz
jge
scas
add
adc
stos
imull
cmp
or
jl
cld
shl
mov
add
clc
adc
xor
adc
push
shrl
dec
dec
add
mulb
mov
fwait
add
stos
cs
in
sbb
repnz
subb
xor
out
xchg
add
imul
add
mov
add
sbb
test
shl
cmp
icebp
sbb
nop
jecxz
adc
jmp
sqrtps
loopne
or
and
mov
mov
sbb
test
or
jo
sahf
mov
or
out
sub
stos
pop
aas
jge
pop
adc
cmp
mov
std
pop
addr16
xchg
and
mov
jae
jns
mov
clc
adc
pop
sub
mov
mov
jno
add
mov
or
or
lods
adc
mov
inc
ret
jmp
add
aas
push
add
mov
xlat
scas
mov
jo
add
sahf
cmpsb
orl
in
mov
adc
xor
in
or
mov
xor
cwtl
pop
sub
or
test
add
loope
push
pop
scas
flds
jp
in
fdivrs
pop
std
mov
xor
adc
insb
mov
cmc
sbbb
cmp
push
sbb
mov
aas
or
incb
push
adc
push
dec
fsubr
sahf
mov
loope
scas
movb
movsb
sub
cmp
pop
imul
jns
test
push
add
xchg
fxch
dec
mov
lret
mov
adc
roll
cld
sahf
xlat
add
add
fdivrl
movhlps
push
xchg
add
inc
pop
aas
popf
pop
adcb
add
push
sbb
mov
xchg
mov
sbb
mov
and
popf
pop
popa
push
jge
add
cmp
inc
jle
xchg
ret
es
mov
pop
inc
cmpsl
fs
or
or
sbbb
fsts
repnz
or
or
aam
hlt
adc
xchg
pop
inc
or
jae
jno
add
dec
cmp
aam
pop
push
add
jmp
and
enter
fstpt
lahf
mov
adc
mov
fiaddl
or
loopne
dec
sbb
and
in
xor
imul
adc
xchg
push
pushf
fiadds
sbb
mov
aas
jmp
xor
add
ret
xor
das
lock
pop
mov
pop
add
sbb
roll
and
test
add
js
loopne
add
test
mov
xchg
add
rclb
repnz
xor
push
sbb
mov
clc
clc
add
dec
add
adc
fisttpl
loopne
jle
jecxz
mov
add
scas
lock
xchg
adc
sbb
frstor
cmp
sbb
test
dec
loope
xchg
lods
pusha
adc
push
stos
lods
sbbl
rcrb
xchg
iret
or
push
sbbl
rcl
fsubs
xchg
flds
pop
sbb
bound
push
inc
xor
inc
pop
aaa
inc
jns
sbb
inc
mov
or
mov
adc
dec
and
les
xchg
hlt
adc
inc
mov
mov
outsl
mov
loop
xchg
dec
fstpl
xor
cmp
adc
xor
add
inc
add
mov
jae
lret
lock
cmp
jns
add
movsb
shrl
and
aas
push
xorl
xchg
xor
pop
out
ds
mov
mov
push
add
push
pushf
in
jle
or
push
testb
pop
pushf
xor
mov
fimull
adc
call
addl
pop
push
ljmp
fcoms
inc
in
xchg
cld
and
icebp
sub
mov
cwtl
int3
shl
nop
pop
and
add
fistps
pop
push
mov
imul
push
push
jmp
mov
mov
add
lods
bound
mov
lock
sbb
arpl
popf
adc
and
cwtl
js
ss
xchg
push
push
fadds
lahf
and
cmp
sbb
jo
lea
aam
adc
add
push
sub
adc
mov
jno
mov
pop
and
popf
mov
xor
add
xor
jb
adcb
adc
inc
test
jmp
and
jns
push
mov
imul
cli
pop
add
ljmp
sub
pop
sub
ret
inc
push
lcall
or
xchg
hlt
movsl
or
dec
mov
in
cltd
or
in
adc
cli
pushf
inc
inc
sub
mov
das
jne
pop
dec
add
pop
sbb
mov
xchg
sbb
aad
push
dec
pop
outsl
push
push
aam
dec
idivb
add
mov
fistpll
or
enter
add
lret
pusha
gs
pop
xor
add
cmp
jns
lock
stos
imul
enter
mov
pop
and
aam
shrb
cmp
adc
iret
out
pusha
gs
fwait
hlt
and
incl
mov
ficoml
or
sub
or
mov
sbb
add
dec
mov
movsb
sub
mov
and
pop
fdivrl
in
dec
jns
stos
dec
pop
pop
xorb
das
jb
add
clc
inc
frndint
mull
and
xchg
mov
jb
hlt
aas
cmpb
shlb
fldl
inc
mov
test
push
loope
cld
cmpsb
popa
in
fcomps
fiadds
add
cmp
cmp
xlat
and
xchg
cltd
cmpsl
inc
add
xor
pop
adc
outsl
add
jne
and
or
fcmovnu
inc
cmp
insl
sbb
nop
repnz
addl
adc
xor
lret
cmp
jl
imul
and
enter
adc
inc
jg
dec
inc
test
fmuls
inc
out
adcl
sahf
adc
pop
dec
icebp
sub
nop
dec
lds
call
jle
gs
mov
arpl
mov
xchg
and
ljmp
mul
fs
loope
in
sbb
clc
sti
notl
out
loopne
jecxz
sbb
sbb
jecxz
scas
addl
int3
or
loopne
cwtl
mov
test
add
test
mov
add
add
sbb
ljmp
sbb
add
fsubrs
into
add
sahf
jmp
sbb
adc
shlb
dec
jne
sbb
pop
jmp
mov
mov
mov
inc
and
sti
push
cmc
xor
arpl
loope
cmp
fadds
outsb
lcall
test
test
inc
adc
mov
mov
jnp
or
cwtl
imul
jle
fcoml
and
or
je
push
jo
hlt
add
in
mov
adc
and
add
xor
call
fs
icebp
pop
sbb
imul
das
sub
and
xchg
arpl
stos
sub
fs
dec
or
inc
out
mov
cmp
add
loopne
sbb
enter
notl
xchg
addb
inc
add
sub
jns
adc
das
lock
adcb
addb
xor
cmp
lret
int
inc
jno
pop
cwtl
cmp
add
aad
adc
rorb
popaw
testl
test
arpl
mov
add
sbb
sbb
sub
jg
es
lret
enter
sbb
dec
mov
sbb
and
push
orl
imul
jmp
sarb
test
mov
pusha
sti
jne
fildl
xor
ja
pop
into
add
addr16
test
outsb
sbb
cld
stc
loope
mov
jno
add
lock
lods
insl
cwtl
inc
hlt
sub
pop
jnp
std
call
addl
cmp
or
ret
test
xchg
in
cmp
shl
fldl
adc
popa
incb
inc
add
cmpl
and
or
popa
jmp
das
insb
push
or
pop
jno
dec
mov
roll
pusha
sub
jmp
in
andl
and
mov
adc
add
scas
std
jb
xor
push
rep
cld
jmp
cmc
fcoms
inc
add
rorb
mov
jns
push
mov
sub
dec
dec
repnz
mov
sub
and
fwait
adcl
adc
inc
pusha
pop
mov
in
daa
les
iret
popa
xchg
inc
add
xchg
inc
hlt
mov
mov
mov
xchg
pusha
add
sub
in
adc
divb
adc
xor
mov
fldcw
inc
aas
mov
inc
shll
aas
mov
add
and
fxch
or
adc
dec
sub
imul
sbb
jmp
add
ss
add
push
mov
push
imul
fistps
xor
aaa
cmp
and
jmp
pop
aas
add
sti
push
and
pop
repz
push
jmp
pop
add
repnz
mov
add
mov
data16
popa
sub
adc
cmp
mov
cmc
add
inc
or
movb
data16
inc
sub
inc
dec
jmp
xchg
xchg
ficoms
jbe
hlt
popa
pop
ljmp
inc
push
adc
push
movsb
push
mov
bound
pop
or
and
psrlq
scas
js
push
cs
mov
add
lock
nop
push
inc
pop
pusha
adc
imul
popf
cmp
mov
cltd
sbb
mov
in
fisubs
sub
xchg
pop
jo
add
insb
jb
sub
jno
xchg
repz
mov
add
push
andb
movsl
stc
xchg
roll
pop
cltd
insb
add
lods
push
fmulp
mov
jb
xor
dec
and
fnstcw
fwait
popf
inc
mov
clc
xor
stc
pop
fs
lds
push
rclb
repnz
cmp
cld
inc
pusha
xor
pop
inc
test
jne
sbb
xchg
add
cmp
add
mul
mov
dec
fldcw
push
repnz
leave
and
cmp
mov
ret
adc
pop
leave
add
gs
jno
mov
and
nop
mov
sub
sub
xor
inc
xchg
xor
cld
add
call
ljmp
adc
jbe
inc
lea
pusha
dec
clc
inc
mov
mov
dec
pop
add
xchg
sbbb
mov
mov
lods
movsl
xor
inc
in
aas
push
sbbl
fmuls
mov
or
add
and
sbb
mov
leave
add
or
scas
popf
sub
roll
lods
nop
inc
cltd
sub
pushl
les
mov
cltd
adc
nop
adc
or
hlt
cmpsb
add
ficoms
push
mov
inc
or
cmp
addr16
pop
cmp
mov
cmpsl
fcoms
cmp
pop
pop
or
add
faddp
filds
fisttpll
lcall
mov
dec
out
xor
popa
or
xor
es
cld
lcall
lods
cwtl
push
sub
cmp
push
shlb
fstpt
adc
ret
cmp
xchg
push
inc
add
sub
or
stos
repnz
mov
cmp
stc
enter
nop
xor
mov
mov
shll
les
cmp
push
push
lods
and
mov
adc
mov
cli
and
sbb
popa
and
add
pusha
stc
mov
xchg
cmpl
push
xchg
fbld
add
fdivs
mov
sarl
jp
mov
hlt
or
add
pop
clc
mov
xor
insb
lret
xchg
jo
xchg
and
push
std
bound
testb
dec
gs
aad
mov
cwtl
testl
xchg
mov
out
daa
xorl
push
test
inc
iret
inc
dec
add
fiaddl
test
push
or
push
fstl
push
push
push
jbe
jp
or
or
adc
inc
xor
jmp
or
aam
cmp
icebp
xchg
mov
add
fdivp
dec
hlt
repz
push
repnz
add
popa
mov
xor
xchg
nop
pop
aam
les
filds
movsb
cmp
popa
adc
shlb
pop
es
sbb
pop
xor
loop
or
int
mov
sbb
insb
andb
loopne
add
adc
insl
push
dec
push
in
jle
pop
inc
ds
inc
sarl
ret
sbb
fwait
adc
inc
xor
or
lcall
cli
push
add
subb
add
fsubrs
mov
mov
add
mov
daa
cltd
dec
jo
sub
mov
xchg
jnp
fs
rcll
and
stos
daa
cmp
add
cmpsl
in
stos
add
inc
shrl
cmc
jmp
xlat
aam
add
call
push
push
scas
add
dec
sbbl
call
mov
hlt
popf
aad
and
inc
cmc
jno
orb
add
mov
and
adc
xor
adc
aam
pusha
cmp
sbb
jnp
mov
and
insl
xchg
aad
mov
je
test
mov
out
cld
les
pop
pop
xchg
xchg
popa
insl
in
xor
ret
adc
aas
mov
pop
test
rcll
dec
lock
push
pop
jl
int3
dec
sbb
int
mov
mov
mov
mov
clc
cs
clc
in
incl
cmp
or
add
jle
mov
push
subb
rep
dec
dec
push
mov
push
adc
cmp
fiadds
nop
test
faddl
or
xchg
dec
xlat
jo
dec
outsb
das
add
or
pushf
dec
mov
ret
pop
mov
mov
shlb
sbb
out
sbb
sbb
cmp
lret
fists
fldl
addr16
data16
cmpsl
popa
imul
sub
adc
inc
lea
out
enter
nop
mov
pop
inc
mov
sbb
mov
mov
leave
pushf
addl
jns
or
pop
or
push
push
outsb
insb
iret
xchg
pusha
sti
xchg
or
aas
jo
call
inc
fimuls
fildl
sub
inc
int3
dec
stos
arpl
or
mov
data16
xchg
int3
and
xor
sub
add
adc
popa
sbb
xor
dec
mov
xchg
xlat
dec
and
sub
les
dec
leave
inc
popf
add
mov
pop
popa
cs
aas
add
jle
xchg
inc
xor
pop
cmp
cmc
dec
aaa
adc
mov
stc
cs
addr16
mov
out
mov
xor
push
addb
aam
dec
mov
clc
adc
push
inc
pusha
mov
and
sbb
imul
cmp
dec
test
pop
xor
or
ret
mov
push
imul
jbe
cs
mov
pop
mov
fsts
inc
jmp
add
cmpsl
push
sbb
jmp
clc
shll
mov
cmc
or
and
xor
add
jg
in
jno
popa
push
xchg
testb
mov
sub
jb
push
mov
add
mov
cwtl
inc
mov
fadds
mov
xchg
jo
xchg
jmp
and
inc
mov
push
and
out
push
das
mov
imul
test
xor
rcrb
inc
shr
test
cltd
sub
xchg
adc
push
scas
in
stos
adc
ror
enter
clc
outsb
ds
lock
mov
cmp
push
jl
into
out
movsb
imul
inc
outsl
pusha
test
inc
das
xor
ret
jb
xchg
orl
pop
call
stos
add
in
add
xor
inc
pop
inc
sbb
movsb
push
arpl
dec
and
mov
sub
jmp
js
cmc
inc
and
sbb
inc
mov
pop
ret
andb
cs
pop
call
pop
mov
mov
enter
xchg
movb
dec
pop
push
or
popa
inc
push
mov
repnz
das
repz
lock
and
stc
xchg
inc
out
add
lods
xor
lea
dec
insb
sub
add
dec
imul
mov
xlat
xchg
push
pop
mov
xor
ret
jp
notl
popa
test
sbb
and
add
scas
add
mov
xor
push
stos
sbb
cld
int3
clc
leave
mov
or
jb
insb
test
inc
dec
sbb
cmp
ret
lods
addl
push
pop
popa
push
mov
jbe
jecxz
mov
mov
push
push
fbld
rclb
cltd
fadd
dec
loop
cwtl
out
in
add
mov
jle
test
dec
sbb
repz
test
outsb
dec
cli
mov
push
mov
movsb
sbb
cltd
jbe
pusha
pushf
lea
lcall
cvttps2pi
test
adc
iret
mov
fsts
push
mov
pop
add
loop
cmp
addl
xor
mov
aas
jge
ljmp
inc
mov
mov
jmp
insl
inc
jbe
cmpb
test
or
adc
add
cmp
mov
sub
cld
test
jo
cmpsb
mov
cmpsl
rclb
mov
lods
notb
mov
rclb
notl
pop
test
jg
pop
stos
jo
xchg
pop
mov
pushf
mov
iret
xchg
cltd
push
mov
add
stos
inc
arpl
or
ljmp
in
fsts
das
cmp
test
xchg
sti
xchg
or
roll
inc
push
and
xchg
sbb
pop
in
icebp
insb
mov
lea
pop
add
push
cmc
pop
or
push
pop
iret
bound
rolb
adc
aas
mov
jo
cmp
add
gs
or
test
push
movsl
jmp
fildl
mov
ss
push
sbbb
test
stos
enter
into
pop
inc
andl
adc
sbb
mov
fadd
cmc
push
push
mov
in
cld
mov
adc
and
mov
mov
and
mov
test
adc
cwtl
rorl
pop
inc
jmp
jae
rclb
iret
sbb
lret
movsb
pusha
cmp
or
xlat
xor
pusha
in
aas
or
pop
inc
call
mov
es
adc
fwait
das
in
aas
imul
pop
xor
adc
fnstcw
lret
dec
leave
leave
pop
add
aaa
xor
push
add
push
inc
cmp
out
jnp
mov
cmp
lahf
xchg
or
adc
push
jns
and
stc
jae
add
stos
add
inc
popa
add
and
movb
mov
sbb
test
enter
inc
mov
mov
aaa
dec
pop
xchg
dec
addr16
dec
xchg
pop
imul
test
cmc
pop
or
or
xchg
or
rclb
mov
adc
add
lea
gs
nop
sub
out
outsl
mov
int3
popl
sbb
stos
pop
cmc
js
repnz
jecxz
test
adc
sub
jo
std
push
call
jg
mov
in
dec
sub
dec
pop
push
inc
or
repz
lods
loop
movsl
sub
jno
add
rdtsc
cld
pop
push
add
jmp
roll
and
xchg
pop
or
add
inc
mov
or
sbb
call
push
xchg
fidivs
push
cmc
and
loop
popa
pop
mov
push
clc
add
mov
and
int3
mov
mov
pop
cs
mov
ret
push
add
jo
cwtl
or
ds
daa
push
lahf
pushf
test
xor
jmp
mov
mov
push
push
test
mov
rcrl
jmp
inc
ficompl
mov
push
das
pop
call
lea
add
pop
mov
add
popf
dec
fildl
enter
dec
movb
sbb
xchg
and
or
ljmp
int
mulb
xchg
lcall
std
aaa
pop
in
mov
loope
jmp
and
mov
cmp
pushf
sub
and
cld
cmp
into
add
addr16
mov
mov
add
dec
sbb
lret
xor
sbb
inc
rolb
jno
les
pop
mov
adc
into
int3
orl
or
aam
and
lret
shll
int3
mov
leave
sbb
inc
in
add
xor
adc
and
popf
in
loopne
adc
or
sbb
and
add
addr16
lcall
dec
add
add
call
repz
orb
inc
pop
cltd
mov
add
push
pop
push
adc
or
jge
dec
or
sub
push
icebp
lea
shld
cld
sub
lahf
dec
cltd
adc
inc
stos
mov
xchg
xchg
push
dec
fwait
add
mov
ret
add
lods
int3
popa
pop
clc
xchg
js
mov
sarb
jmp
cmpsl
add
jne
test
jns
and
ret
outsl
pusha
inc
movaps
repz
and
mov
push
push
aas
pusha
add
outsb
cmp
addb
pop
pop
rol
lods
lret
mov
inc
mov
inc
dec
inc
aam
in
inc
cmp
jns
data16
pushaw
sub
add
cli
pop
clc
pusha
bound
push
clc
fildl
and
mov
xor
imul
mov
ret
mov
sar
pop
aad
mov
pushf
mov
scas
iret
push
adc
push
out
rcr
lock
in
push
jb
cwtl
pop
aam
addb
movl
scas
and
or
dec
push
adc
movsl
sbb
or
or
adc
imul
adc
addr16
xchg
mov
mov
jns
outsb
out
xor
je
cwtl
mov
and
cmp
or
pop
mov
fistpl
popa
in
addb
inc
mov
mov
aaa
mov
cmc
int
es
pop
pop
or
ds
cmp
out
push
daa
cmp
push
mov
dec
xlat
aas
pop
lahf
shlb
and
add
jb
inc
stc
push
shrl
cmp
movsl
daa
in
pusha
call
pop
lret
ja
shrb
nop
addr16
pop
xchg
add
rcrl
in
xchg
cwtl
fmull
stos
jb
and
call
sahf
xchg
popa
push
mulb
sbb
stc
push
mov
pop
aad
xchg
push
push
cmc
push
test
iret
mulb
push
fmuls
xchg
and
idivl
cmp
add
ja
cwtl
subl
mov
jo
mov
xchg
and
sub
add
jg
cld
stc
add
rolb
xchg
cltd
imul
push
rcrb
das
add
mov
cmc
mov
loope
adc
mov
cmpb
mov
xchg
or
xlat
dec
mov
jl
leave
push
add
inc
add
sbb
mov
fstl
mov
xor
and
lahf
inc
adc
add
xor
lret
lea
aaa
add
in
or
push
mov
pushf
xor
clc
incl
fbstp
data16
lahf
call
xchg
data16
pop
ljmp
ret
cmp
jae
cmp
dec
add
pop
leave
push
outsl
mov
jg
icebp
call
push
loope
ret
test
scas
aad
mov
pop
push
and
add
mov
adc
fisubl
iret
sti
dec
ror
jnp
addl
add
imul
push
movsl
enter
jmp
xor
mov
sub
and
mov
push
cmp
aad
subb
bound
mov
loop
pushf
mov
xor
ret
jno
mov
jg
rorb
in
or
inc
jecxz
sub
aaa
jb
add
mov
xchg
test
xor
inc
push
movsb
add
insb
xor
inc
and
in
add
cmp
cmpsl
roll
pop
add
xor
lahf
and
mov
shrb
nop
cmpsb
pusha
lods
cs
fisttpll
repz
incl
add
mov
add
push
or
mov
push
jb
add
sub
xor
add
loopne
xor
adc
dec
mov
sbb
inc
sub
or
nop
cmp
dec
aad
add
in
xor
push
xchg
aam
mov
add
test
test
aam
sub
jl
xchg
sbb
ficoml
fdivrl
or
out
cmpsl
loop
cwtl
jge
sbb
lods
dec
lahf
dec
or
mov
jp
xchg
leave
sub
inc
dec
add
pop
mov
sbb
fcoms
jle
add
inc
add
or
insb
ret
test
sbb
adc
inc
fldt
pop
les
insb
cmp
inc
sarb
insb
stos
rorb
in
jns
fiadds
divl
sti
test
push
jnp
xor
ficoml
push
repz
jecxz
call
lcall
add
dec
or
movsb
rclb
ficoml
repz
test
cmp
fcmove
mov
xor
pop
faddl
jp
in
xchg
mov
xchg
add
repnz
ds
xchg
adc
int
pop
cmp
jle
or
int3
rolb
roll
mov
enter
pop
dec
and
mov
lock
mov
xor
dec
imul
ja
jb
adc
add
outsb
push
add
and
fs
mov
loopne
jg
add
daa
shrl
cltd
push
ss
popa
add
mov
adc
inc
xor
ret
cmpb
push
add
jg
ret
add
jbe
sbb
fs
inc
in
dec
mov
mov
mov
repnz
leave
sbb
mov
loope
jne
xlat
adc
cmp
outsl
inc
fidivs
cmp
insb
in
mov
add
push
jecxz
outsb
cld
mov
jmp
inc
data16
fidivs
inc
enter
out
inc
imul
mov
mov
lahf
jge
cli
push
rcl
in
add
jae
and
data16
divb
add
imul
and
in
inc
pop
scas
add
fwait
shlb
pop
or
call
ss
mov
cmp
xor
inc
inc
add
aaa
fisttpll
mov
shrl
in
xchg
dec
or
xchg
add
shlb
cmp
dec
pop
mov
mull
out
or
xor
sub
nop
aam
jg
add
cli
into
pop
push
mov
jae
repnz
out
push
nop
sbb
cs
data16
cld
mov
add
adc
and
sti
xor
mov
dec
imul
inc
or
jnp
add
out
cmp
or
xor
adc
xor
int3
call
mov
or
cmc
rorb
push
daa
pop
and
inc
stc
or
sahf
mov
pop
stos
sbb
cmpb
adc
or
dec
das
insl
add
leave
sbb
in
dec
add
out
stos
cltd
fstl
and
je
insb
add
imul
or
sub
pop
lods
pop
call
addl
sbbb
dec
xchg
add
fsubs
mov
pop
sbb
ljmp
test
outsl
loop
cmp
pusha
add
pop
xor
xor
push
imul
lcall
or
pop
add
dec
and
ss
cmc
rorb
mov
add
mov
fwait
xlat
mov
lret
and
arpl
cwtl
pusha
loop
imul
movq
mov
orb
or
int3
cmp
loop
mov
out
sub
incb
loop
xor
mov
xchg
sbb
jl
subb
shlb
mov
into
and
xor
jp
sbb
and
jno
cmp
xchg
cmp
mov
xor
stos
lds
iret
outsl
fdivl
xor
out
push
popf
push
mov
add
call
andb
je
inc
cli
rcll
add
adc
repz
adc
lcall
in
sub
call
aas
mov
mov
cmpsl
dec
cmp
andl
daa
add
add
cmpsl
adc
imul
imul
cmp
hlt
in
cli
insb
add
jl
or
pop
lahf
int
sub
mov
push
inc
pop
add
mov
jb
add
lahf
sub
lods
push
mov
add
stos
in
enter
pop
mov
sub
mov
mov
add
fistps
sahf
inc
pmulhw
leave
cmpsb
enter
push
imul
test
xor
xchg
outsl
sti
xorl
cmc
incb
repz
pop
aad
push
jmp
pop
aas
mov
stos
add
repnz
fcoml
inc
jns
add
jne
popf
iret
add
test
jg
lea
mov
xchg
cld
add
mov
jmp
mov
xchg
leave
push
out
lods
add
sub
ja
repnz
add
adc
testb
dec
clc
push
stos
add
out
nop
jp
out
notl
add
adc
and
dec
and
ss
daa
leave
out
jge
cmp
add
or
push
sahf
sub
xor
ljmp
mov
lock
pop
call
sbb
fs
sub
push
fbstp
adc
push
add
jns
jmp
aas
mov
lahf
pop
xchg
xchg
ja
popf
add
out
jo
push
in
stos
lods
add
push
or
xchg
dec
fsubs
add
fidivl
xchg
mov
push
jnp
push
loop
xor
push
mov
jge
int3
xor
jne
add
and
aaa
or
jo
or
cmpsb
pop
and
pushf
adc
sub
mov
xchg
ret
cmp
mov
add
enter
add
mov
mov
movsl
sahf
sub
adc
lods
mov
add
pop
lods
xor
sbb
int
push
js
pop
repnz
add
mov
mov
sub
stos
out
cmp
adc
addr16
out
lock
insb
popa
jg
add
or
ss
push
sub
adc
pop
dec
add
shr
jne
pop
divl
or
add
jns
xchg
cmp
add
in
roll
mov
cwtl
cmp
repnz
negb
or
cli
jo
cld
imul
add
js
addr16
jl
xchg
imul
fbstp
add
mull
movsb
sbb
je
adc
and
lea
pusha
jo
mov
xor
aas
xchg
add
cmpsl
dec
pop
add
mov
push
test
dec
roll
xchg
ret
pop
pop
and
and
addl
dec
add
mov
push
fisubrs
sbbb
inc
clc
dec
iret
nop
lods
int
xor
cmp
loop
icebp
movsl
push
in
add
daa
test
inc
les
movsb
outsl
add
cmpsb
repnz
inc
aaa
ret
fstl
scas
cltd
mov
ljmp
push
dec
sahf
jne
jbe
fcmovu
xor
xorb
xchg
loopne
cmp
and
leave
adc
add
nop
ljmp
loop
add
push
lock
sub
lock
movb
add
xor
mov
add
cmp
addr16
add
push
loop
inc
decb
xor
data16
mov
cmp
sahf
iret
icebp
pop
out
cmp
ljmp
outsl
inc
xor
xor
xchg
loope
mov
pusha
jno
lret
dec
mov
lcall
xchg
add
pop
sbb
and
push
cmp
ret
xchg
pop
push
sub
pushf
inc
mov
mov
rolb
sub
dec
ficoms
dec
pop
popf
psubb
mov
xor
rcll
mov
mov
add
popa
addr16
rcrl
fimull
add
xchg
in
add
push
std
or
push
add
sarb
add
loopne
jmp
lea
leave
mov
add
inc
lahf
es
cmp
add
and
sbb
je,pt
jecxz
add
xchg
sub
andl
nop
js
push
push
sbb
mov
test
add
pushf
push
shlb
sbb
scas
lret
outsb
cmp
and
and
jnp
add
mov
add
and
mov
enter
loope
insb
dec
roll
push
stos
dec
jbe
xchg
mov
orb
repnz
fsub
scas
mov
and
scas
jecxz
add
pusha
daa
aas
add
lahf
adc
push
lret
mov
popa
add
icebp
cmc
pop
aad
rolb
lea
push
outsl
mov
jb
adc
xor
jno,pn
add
rclb
mov
mov
add
adc
pop
inc
adc
dec
xor
packssdw
adc
imul
inc
lret
or
dec
push
sti
in
ds
scas
xchg
mov
inc
mov
xchg
and
and
sub
adc
mov
inc
mov
sub
push
mov
inc
xor
jb
dec
inc
fadds
rorl
mov
pop
sub
lock
pusha
or
ljmp
lods
pop
gs
jmp
sbb
insl
clc
mov
add
ret
lea
add
pop
mov
add
call
mov
add
out
enter
mov
sarb
mov
int3
rclb
sbb
and
dec
js
add
movsl
push
xchg
xchg
in
pusha
or
dec
aaa
mov
mov
aas
fs
add
adc
cmp
jnp
add
xchg
mov
dec
js
loopne
sub
add
pop
xchg
mov
jle
add
loope
xor
add
das
iret
push
ljmp
rcl
repnz
mov
add
jne
xor
inc
imul
mov
mov
inc
movl
outsb
sub
in
ret
notl
add
cmpsb
inc
test
test
loop
cwtl
push
add
lahf
sarb
add
lret
mov
daa
sbb
sub
jo
rolb
jg
jb
cmp
fidivs
cmp
xchg
icebp
cmpb
out
cmpsl
xchg
shll
dec
dec
lds
dec
lahf
add
in
inc
sarl
testl
lret
pop
add
loopne
adc
repnz
icebp
pusha
push
cmp
mov
pop
dec
subl
imul
rolb
in
pop
xor
push
and
dec
cmp
jae
ret
add
nop
and
add
loopne
inc
pushf
outsl
cld
xor
push
mov
push
into
rcl
faddl
fsub
call
sub
mov
mov
aaa
cmp
inc
inc
enter
scas
inc
pushf
rcll
in
into
jl
xchg
je
insl
es
push
pushf
flds
fmuls
mov
ja
and
jecxz
ret
jmp
mov
addb
adc
and
xorl
in
mov
test
adc
adc
pop
outsb
add
int
in
out
push
xor
fwait
pop
push
out
in
fisubrl
inc
xlat
mov
add
pop
pop
and
pop
mov
add
sbb
xor
xchg
add
add
dec
test
pop
lcall
add
and
sub
jo
test
mov
pop
out
test
xor
xor
xchg
ds
sti
add
out
inc
push
push
inc
pop
add
add
addr16
jns
nop
mov
ret
add
cmp
and
ljmp
mov
sub
cmp
fistps
cmp
dec
stos
sub
and
sbb
or
aam
cmp
stos
movsl
arpl
lahf
add
dec
inc
and
mov
add
out
and
and
fiaddl
jmp
jecxz
iret
mov
jmp
mov
pop
jno
inc
and
testl
leave
lahf
popf
rcr
dec
aam
add
jle
into
retw
lret
sbb
out
pop
sub
push
inc
add
cmpsb
sub
ss
pop
and
add
lock
inc
aad
outsb
add
in
jle
loope
dec
add
out
andb
mov
add
lret
cwtl
std
pop
jl
addps
movsb
outsl
aaa
add
mov
sbb
add
mov
mov
add
cli
push
push
cmp
xchg
push
testb
mov
xor
mov
call
push
add
mov
in
dec
jne
int
nop
lds
mov
out
enter
aad
pop
shrl
and
cmp
dec
add
jno
pop
cwtl
gs
cmp
add
stos
jne
inc
mov
pusha
and
fucomp
xor
jecxz
add
mov
lret
out
or
sbb
aam
jno
add
push
xor
movsb
adc
rcl
push
inc
enter
pop
subl
loopne
jno
pop
or
jnp
ja
cmp
add
and
adc
adc
sahf
arpl
ljmp
xchg
mov
loop
and
mov
outsb
pop
mov
adc
loope
outsl
adc
push
insb
add
jmp
pop
sub
add
and
and
xor
rcrl
test
jmp
pop
mov
cmp
pop
pop
int3
inc
xor
add
loopne
repz
jge
shl
pop
imul
andb
cmp
push
push
stc
push
cld
inc
jno
adc
imul
jo
rol
cmp
lgs
jmp
loop
aaa
in
pop
in
push
xchg
adc
pushf
mov
pop
adc
cwtl
jns
lock
sub
sbb
inc
pop
jp
xchg
xor
sub
lahf
mov
push
aad
ror
lods
sti
sub
add
xor
mov
mov
bound
out
add
rcrb
push
push
sub
repz
aas
clc
xor
add
dec
cmc
cmp
test
fisttps
mov
test
pop
inc
sbb
movsl
sbb
dec
rcrb
cmp
cmp
push
dec
pusha
mov
cmp
daa
sub
push
shl
dec
inc
aas
mov
pop
lcall
outsl
pop
dec
add
into
nop
test
aad
subl
pop
bound
adc
adc
push
stos
int3
xlat
add
cld
mov
add
sbbl
add
add
xor
popf
mov
out
mov
stos
dec
bound
in
and
cmp
sbb
sbb
nop
lahf
add
cmc
popf
in
sahf
xchg
cmp
inc
test
insb
xadd
mov
add
jno
and
add
cmp
mov
xor
icebp
or
mov
dec
ret
jle
ret
mov
pop
pop
mov
popa
insl
xor
faddl
in
pushf
xor
add
cmpsb
sbb
cmc
fisttps
das
or
loopne
loopw
ss
je
xchg
sub
add
imul
sbb
mov
cli
pop
push
lods
push
adc
cld
inc
cmp
jne
movb
lcall
add
cmc
mov
mov
jae
dec
jl
jb
movsb
add
scas
sbb
hlt
add
ljmp
ficomps
add
mov
rolb
fistps
std
add
lret
je
add
inc
mov
pop
cmp
add
push
jge
jmp
and
movb
push
sarl
sbb
loopne
mov
dec
clc
sub
add
stc
cmp
xchg
pop
roll
movsl
lds
push
pop
js
pop
adc
push
stos
sbb
int
cmpsb
cmp
jmp
sub
add
add
les
orl
ss
jo
loop
xchg
add
shlb
dec
add
or
add
cmp
mov
roll
fsubs
xchg
call
cld
add
or
lcall
xorl
add
push
and
outsb
jl
jecxz
js
ja
or
or
mov
cmp
adc
ds
orb
cmp
out
jns
xor
dec
sbb
inc
adc
pop
pop
loop
xor
aaa
jno
arpl
add
testl
sarb
jg
adc
sub
leave
cli
lock
dec
ja
xchg
daa
inc
mov
shrb
test
add
movsb
mov
in
popa
arpl
dec
sarl
insb
in
jns
std
lock
cs
dec
push
bound
hlt
sub
into
cmpb
nop
inc
fxrstor
lcall
xchg
es
pop
into
push
ljmp
pop
push
cmpsb
add
sub
jmp
push
push
lds
dec
ret
push
aas
inc
push
adc
jle
xlat
jl
pop
push
mov
movhps
dec
jns
inc
add
xchg
in
lcall
mov
movsl
clc
sub
xor
add
cmp
test
inc
ret
test
add
sbb
shrl
pusha
sub
add
dec
fsts
in
and
add
call
fs
inc
cmc
js
rcrl
pusha
xchg
lahf
adc
push
aaa
mov
jmp
xor
cli
push
sub
xchg
addr16
xor
fsubrs
add
adc
icebp
jge
in
mov
cltd
cmpsl
pop
add
xchg
mov
loop
outsb
enter
cld
xchg
and
fucomi
lahf
je
adc
inc
fdivs
fdiv
pop
rclb
pushf
push
or
in
inc
cmp
test
xchg
dec
sub
mov
adc
xchg
rorl
sti
cs
hlt
sbbb
rorl
add
add
outsb
cs
negl
pop
enter
daa
add
sbb
jbe
shrl
insl
push
jecxz
fiaddl
push
outsb
popf
adc
loopne
lods
lahf
les
xlat
sub
pushf
leave
mov
pop
scas
add
ljmp
mov
push
inc
add
in
push
inc
mov
push
call
push
dec
jns
and
sub
push
frstor
orb
push
mov
cmp
dec
loopne
push
cltd
add
iret
fistps
cli
push
xor
and
pop
push
inc
mov
jl
ja
push
cld
je
inc
xlat
sub
loopne
dec
into
add
dec
fidivrl
sub
cmpsb
aas
subb
fdivrl
hlt
push
cmp
sub
push
sbb
pop
sub
fwait
xchg
add
xchg
popa
pop
sub
cmc
xor
sbbb
in
outsl
pop
jb
mov
inc
ret
jo
test
push
add
lret
pop
add
lahf
add
shll
and
or
push
flds
scas
dec
daa
sarb
jecxz
rcrl
faddl
out
add
mov
dec
fs
insl
push
leave
mov
out
mov
or
push
les
add
pop
jecxz
pop
xchg
stos
or
lahf
xchg
in
clc
mov
cwtl
mov
push
outsb
das
add
or
jns
fbld
mov
inc
out
cmp
mov
scas
fs
cmp
add
pop
stc
cmp
jl
mov
or
cmc
in
push
jl
shrl
add
inc
mov
bound
lock
xchg
adcb
jmp
mov
pop
cltd
inc
pop
sub
mov
pavgb
std
add
cs
pop
add
and
daa
out
sub
lcall
xlat
popf
adc
arpl
inc
test
loop
in
pop
mov
insl
and
fldenv
add
add
fs
sbb
addr16
fistl
fwait
popa
lcall
in
mov
je
out
mov
mov
ljmp
aas
mov
aad
ja
fmull
fisubl
aam
test
call
arpl
clc
pop
cmp
push
test
orb
cld
push
movsb
mov
sbbb
mov
aad
lret
mov
rcrb
cld
xlat
sbb
push
add
rclb
or
ret
pop
clc
call
out
add
xchg
rclb
stc
addb
or
mov
cmp
lock
cmp
lock
push
xchg
push
popf
repnz
push
int
out
cmp
xor
pop
and
int
adc
or
das
jae
je
add
xchg
into
call
cmp
inc
push
int
testb
xor
or
jle
xor
in
shrb
cmp
push
push
notb
add
shll
inc
rcrb
and
mulb
inc
jno
inc
xchg
adc
dec
inc
or
icebp
pop
push
pop
mov
rolb
dec
and
mov
cmpsl
mov
ret
je
push
dec
shr
imul
popf
xchg
mov
sub
mov
add
adc
add
pop
outsl
rorb
das
cli
cmp
shrl
sub
jp
lahf
out
mov
inc
loopne
jl
sub
cld
and
fldt
loopne
repnz
je
push
jae
daa
add
jo
es
out
lcall
xchg
mov
je
test
inc
mov
cld
sarb
dec
cmp
adc
pushf
loopne
mov
add
inc
sub
sbb
fwait
push
lock
mov
in
sbb
cmp
xchg
pop
sarb
push
je
pop
jecxz
iret
sub
into
loop
push
mov
imul
jl
leave
pop
xchg
jnp,pn
pop
add
popa
adc
jmp
xchg
data16
push
cmp
ret
xchg
push
lcall
sub
push
mov
pusha
xor
test
dec
addr16
enter
sub
pop
and
mov
fimull
jp
add
iret
leave
sbbb
add
push
and
mov
ds
or
incb
add
and
push
adcb
loopne
hlt
cmp
and
ljmp
inc
xor
les
fwait
mov
mov
ss
add
pop
or
and
pusha
in
out
fs
inc
sbb
push
lock
pop
push
loopne
insl
cmp
in
push
add
xchg
cmpb
pop
jb
push
lds
psllw
add
inc
push
ja
repnz
push
add
sti
fucomi
insb
call
flds
mul
imul
add
or
stos
jle
pop
icebp
out
mov
in
mov
inc
pusha
subb
out
xchg
add
jle
arpl
xor
xchg
inc
scas
lcall
mov
dec
repz
imul
add
fwait
cmpsl
mov
add
xchg
lret
ljmp
pop
and
fdivrs
push
shll
sbb
pop
and
jp
out
test
cs
dec
mov
dec
add
aam
mov
hlt
insl
xchg
add
daa
loop
add
int3
data16
stc
dec
jle
sub
push
mov
mov
add
outsb
cmp
and
push
cmp
adc
in
pushf
shll
aas
fldcw
inc
adc
and
sbb
mov
xor
xor
in
cmpb
std
or
xchg
out
push
bound
sub
or
add
mov
push
les
rol
pop
movl
sbb
xchg
add
push
mov
leave
iret
cmp
sbb
lea
fnstsw
ret
out
enter
xor
nop
sti
repz
decb
ljmp
pop
mov
fdivr
xlat
push
add
outsl
xor
out
lds
loopne
and
into
das
xor
adc
inc
push
jg
dec
add
stc
in
shrb
cs
imulb
pop
add
outsl
or
mov
dec
push
or
mov
pop
out
cmpb
and
in
clc
cmovo
add
stc
cwtl
mov
sarl
inc
or
add
mov
xchg
or
je
into
xor
lcall
lcall
jmp
daa
les
movsb
test
outsl
pop
mov
dec
mov
xchg
add
mov
push
popf
imul
fiadds
mov
nop
xchg
inc
sub
cmc
inc
lret
and
daa
and
add
xchg
mov
in
orl
jno
test
daa
sbb
lret
inc
fnstcw
and
adc
jne
sti
popa
push
notl
lahf
test
jb
adc
push
cwtl
push
xor
add
cmp
add
dec
cmc
or
xor
ja
pop
inc
rolb
popa
xor
add
or
std
jge
xor
clc
dec
stc
add
mov
pop
jns
cmp
popf
pop
fwait
fs
sub
mov
lret
xlat
loope
addb
ljmp
mov
pushl
test
or
and
imul
adc
outsl
pop
and
je
cmp
fnstcw
jno
std
xchg
out
add
cwtl
into
xchg
mov
pushf
sub
jmp
test
loop
add
ds
fs
pop
add
or
lret
xchg
ret
lock
leave
xchg
xchg
ja
mov
rcl
jbe
mov
xor
adc
and
insl
push
mov
repz
mov
xchg
inc
xor
shll
xchg
int3
test
mov
rcll
and
mov
add
or
cwtl
mov
mov
add
call
pop
stos
call
leave
dec
mov
roll
std
sub
aam
out
sub
arpl
insb
sbb
jge
sbb
pop
jmp
sbb
push
mov
sub
mov
xor
pop
insb
push
or
push
movsl
add
cmpsl
cmp
push
mov
push
sbbl
mov
frstor
and
mov
pop
add
insb
cmp
sbb
cmp
dec
or
xor
add
dec
xchg
mov
mov
shll
lock
inc
std
mov
nop
jg
add
stos
sub
call
add
fsubp
unpcklps
lret
inc
add
add
sbb
and
fldz
jno
iret
sbb
sbb
iret
add
xchg
cs
add
sbb
jae
loopne
mov
adc
jns
dec
mov
inc
insb
push
outsl
sbb
or
and
fmull
into
push
loope
inc
int3
loope,pt
mov
and
cltd
pop
pop
xchg
in
test
stos
repz
or
fnstenv
pop
cmp
in
inc
add
sbbb
pop
aaa
push
orl
sbb
in
cmpsb
push
leave
fwait
clc
loop
add
xor
xor
in
loopne
fdivp
fdivrs
push
push
inc
sub
popl
cmpsl
enter
add
fisubs
jnp
pop
push
shlb
in
mov
add
fbld
sub
out
mov
orb
add
out
loopne
pop
jmp
mov
das
inc
add
stos
je
add
mov
pop
int
push
push
add
jno
xchg
jbe
mov
sbb
lock
sbb
inc
or
add
int
test
inc
mov
cwtl
push
cli
in
pop
arpl
pop
or
dec
add
lahf
imul
sbb
emms
pop
cmp
xor
imul
iret
jae
push
mov
lock
filds
sbb
pop
popf
pop
mov
ret
inc
and
jo
mov
je
sbb
pop
aam
xor
in
add
rcll
das
cld
jle
add
adc
mov
adcb
xor
sub
les
push
movsb
add
daa
pusha
cmpsl
jb
rolb
das
jecxz
xor
add
and
pop
and
ror
repnz
dec
xor
sti
inc
orb
push
jecxz
xchg
mov
dec
inc
add
mov
and
out
pusha
icebp
push
sub
cld
add
inc
int
aas
loop
lea
add
or
add
iret
and
pop
sub
arpl
lock
jns
mov
imul
jb
add
test
lock
add
xchg
adc
cwtl
fiaddl
dec
add
cmpsl
mov
mov
in
loopne
sbb
fs
push
pop
mov
jle
add
pop
arpl
and
cmp
dec
adc
push
add
sbb
sbb
bound
and
pop
adcl
add
test
sahf
adc
dec
lock
push
movsb
inc
dec
mov
cmpsl
outsl
fildll
add
lcall
test
lret
jnp
pop
ljmp
outsb
xchg
loopne
call
push
or
mov
out
cwtl
cmc
mov
add
mov
pop
add
xchg
sbbb
nop
xchg
add
mov
out
sarl
nop
lahf
testb
jle
lods
aam
adc
std
in
xchg
adc
jp
pusha
or
ja
add
mov
sub
or
cmpb
mov
loop
mov
repz
test
vmread
rorb
sahf
outsb
cs
pop
ret
mov
inc
or
push
inc
in
ja
rolb
pop
push
and
sub
or
popa
pop
cwtl
sub
and
sti
pop
add
or
ja
inc
sbbb
aad
add
jns,pn
or
js
test
fisttps
mov
inc
mov
sti
stos
add
in
shlb
pop
incb
jmp
push
sbb
push
xchg
rcrb
mov
dec
add
push
addr16
aam
mov
clc
cmp
andb
call
stos
xchg
lods
or
xchg
add
in
lock
nop
jno
add
cmp
outsl
add
scas
adc
sbb
iret
pop
sbb
mov
imul
or
xchg
sub
add
pushf
xchg
pusha
jnp
clc
xor
pop
cltd
mov
nop
dec
ljmp
fstpt
and
gs
fwait
add
mov
clc
ja
push
add
cmpsl
adcb
jmp
fistl
inc
imul
mov
rclb
sbb
or
inc
sub
fnstcw
ret
arpl
and
push
mov
sub
ss
push
pop
cmpsl
cmp
imul
add
push
movsl
insb
cld
les
fs
shll
add
pop
ja
mov
nop
adc
jnp
jp
rep
into
pushf
lahf
mov
xlat
rolb
adc
mov
lock
add
dec
xchg
cmc
daa
outsb
testb
xchg
or
test
and
push
call
cmp
insl
lret
das
sahf
fdivrs
jne
mov
mov
xchg
mov
add
popa
mov
push
sub
sbb
add
std
fdiv
sahf
aad
xor
and
cs
xchg
add
lret
imul
mov
push
xor
orb
adc
pop
jo
icebp
loop
add
rcr
iret
aaa
xchg
dec
out
mov
sub
push
adc
xor
sti
push
or
sahf
not
mov
rcl
jns
sub
add
jne
pop
es
dec
add
dec
and
inc
enter
scas
repnz
push
int
adc
lock
add
mov
cmp
pusha
test
mov
and
xchg
dec
clc
popl
out
jnp
jl
js
mov
les
and
sbb
pop
mov
and
push
jne
adc
add
lds
mov
popa
adc
test
or
jno
add
dec
rorb
es
je
pop
lret
mov
cmp
mov
adc
aad
fnstcw
nop
cwtl
push
in
cmc
mov
add
jbe
xlat
cmp
fildl
and
lods
mov
cmp
nop
and
push
push
loopne
xchg
adc
test
enter
inc
add
popf
fwait
jbe
push
in
fiaddl
in
lcall
dec
adcb
mov
cmp
adc
stos
inc
je
pusha
sbb
add
cwtl
add
es
mov
jb
dec
pusha
ds
push
in
aad
hlt
fstpl
jns
add
cld
xchg
adc
imul
ss
cmp
insl
add
or
adc
jo
sub
aad
inc
cs
ret
cmc
imul
sbb
adc
and
inc
pop
fdivl
push
es
or
xor
mov
dec
add
and
es
mov
mov
and
repz
or
push
fwait
mov
sbb
cwtl
add
test
std
xlat
pop
sub
mov
xchg
xorl
stos
push
pop
and
pop
outsb
fistl
add
mov
mov
sub
add
clc
lea
xor
dec
mov
dec
and
mov
ret
inc
adc
add
push
out
mov
cmpb
lds
adc
repz
jb
mov
lret
clc
jle
pop
jg
pop
js
adc
notl
inc
add
lret
or
push
mov
add
cs
jno
daa
arpl
ljmp
mov
jae
popa
sbb
enter
xor
test
shrb
in
add
xlat
loope
mov
sub
cmp
andb
cli
adcl
lea
dec
adc
sbb
sbb
add
movsl
cld
add
jns
sub
inc
and
andb
fdivs
jb
sbbl
xor
adc
add
mov
or
daa
jb
xor
mov
add
ret
sub
dec
outsl
test
fldpi
loop
mov
rol
add
cmp
jnp
cmp
sbbb
add
lahf
or
xchg
add
jns
pop
add
mov
pop
lret
push
mov
push
add
pop
sbb
popl
mov
mulb
in
mov
xor
sbb
xchg
xchg
cmp
insb
jns
add
mov
sub
test
push
nop
add
out
or
scas
push
roll
inc
or
mov
fs
mov
adcb
popf
add
push
ljmp
push
inc
adc
shrb
add
sub
push
mov
pop
xor
cmc
pusha
dec
mov
lret
pop
or
in
xchg
jp
jge
sti
inc
sbb
jae
fcoml
inc
dec
pop
decb
iret
add
je
and
add
sbb
cmp
sub
out
jno
add
mov
jg
adc
sbb
sbb
movsl
or
add
jmp
ljmp
in
int
pop
in
fwait
mov
dec
sbb
add
or
add
cmpsl
push
sbb
stos
add
mov
mov
call
add
cmp
in
and
cmpsb
add
cmp
and
fsubp
xchg
dec
lcall
dec
sub
jmp
mov
jb
or
mov
cmp
aam
mov
jbe
dec
mov
sbb
add
xchg
ljmp
push
push
add
cmp
pop
cwtl
sbb
push
sbb
inc
rolb
xor
fistpl
aas
mov
cmp
or
sub
xor
sub
push
add
pop
popf
jns
add
ss
dec
aam
sbb
xor
add
jno
add
sti
popa
cmpsb
prefetch
cwtl
in
add
xor
mov
add
rolb
adc
and
jo
sbb
div
lret
add
add
lahf
pop
movsl
daa
jne
pop
repz
data16
xor
iret
add
std
rclb
out
inc
or
add
ss
stos
divl
mov
cld
test
inc
pop
xor
sub
jg
adc
or
xchg
inc
incl
inc
test
rcl
rclb
fildl
xchg
xchg
add
movsb
jns
pop
test
mov
sub
cwtl
sti
mov
lods
add
xchg
enter
add
pop
push
adc
ds
testl
fidivrs
js
add
lods
mov
or
mov
jnp
cmp
mov
xor
std
add
add
dec
aaa
push
test
js
aad
int
inc
push
shll
push
fdivr
xchg
cld
cmpsl
cmp
adcb
data16
jae
int
stos
cmp
lea
mov
mov
pusha
insb
test
jno
adc
shl
mov
mov
push
add
insl
mov
dec
jle
punpcklwd
mov
mov
ds
add
sub
push
js
add
pop
test
dec
sbb
adc
jne
aas
shl
lahf
add
mov
bound
jo
jne
xchg
rol
add
rcr
jnp
add
sbb
pop
adc
or
sub
ret
leave
jo
sahf
lock
lahf
cli
cmp
imul
jne
add
test
aam
in
popa
or
xchg
inc
sahf
mov
and
push
insb
and
dec
nop
jno
add
pop
xor
lea
pop
or
add
lock
daa
enter
add
fcom
aas
jl
add
xchg
cmpsl
out
mov
or
bound
dec
loop
fnsave
sbb
lods
add
xchg
or
push
inc
enter
cmp
fcmovu
sbb
aad
push
add
mov
add
imul
lods
or
push
pop
cmpsb
in
add
int3
outsb
loope
adc
inc
add
loopne
cmpsl
daa
cmp
and
rclb
jnp
sbb
rorb
jae
xlat
out
test
or
push
outsl
loopne
jb
add
int
mov
mov
sbb
mov
sub
and
xchg
add
cmp
add
hlt
xor
xor
stos
int3
clc
sub
cwtl
inc
pop
inc
adc
lods
cmpsb
les
mov
in
add
mov
sbb
add
jle
jmp
hlt
mov
xchg
and
mov
sbb
inc
rcl
out
jns
jmp
pop
sbb
sbb
andb
adc
imul
fimuls
mov
std
ja
cwtl
add
cli
xchg
add
mov
pusha
cmp
outsb
dec
lock
stc
sbbl
out
mov
add
ljmp
cmc
mov
stos
pop
repnz
add
pop
xor
loop
cmp
es
lcall
cmc
mov
fs
cld
out
dec
ja
cmp
and
or
add
pop
mov
mov
sti
iret
popf
mov
lds
out
push
add
xchg
add
lods
in
jno
add
nop
sub
or
xchg
push
cmpsb
mov
insb
and
sbb
into
push
add
sbb
movl
aas
xchg
out
cmpsl
push
sbb
ret
xor
psubb
add
in
scas
jle
sub
pusha
mov
adc
sar
add
daa
jl
add
mov
into
or
adc
movsl
shlb
jnp
xor
aam
jmp
mov
repnz
mov
mov
pop
out
cs
dec
in
loope
subb
ja
push
and
jmp
insb
and
out
add
jp
mov
les
mov
inc
add
sbb
ljmp
setb
test
sub
add
xor
bound
jmp
and
jp
enter
cli
out
outsl
js
cmp
lock
cltd
sahf
push
inc
sub
mov
insl
repz
cmpsb
pusha
fldl
mov
roll
dec
or
mov
jnp
dec
orw
mov
outsb
pop
mov
inc
je
imul
rcll
dec
iret
sbb
mov
jo
add
adc
pusha
sub
jl
cld
cmp
jmp
or
sbb
cld
into
inc
mov
xor
add
jns
dec
data16
add
xor
inc
adc
cld
imul
orb
xchg
pushf
pop
add
fstps
sqrtps
es
xchg
pop
jle
sbb
test
mov
jg
mov
mov
push
lds
loope
xor
bound
shll
rolb
pop
jmp
adc
sub
sti
aaa
push
cs
sarl
je
rorl
xchg
sahf
sbb
clc
push
fwait
push
mov
mov
sbb
decb
sub
add
push
test
push
mov
adc
fidivs
stc
xor
inc
mov
test
out
add
or
lahf
mov
dec
sbb
inc
sbb
imul
addr16
icebp
jmp
inc
or
fdivrs
or
sbb
sti
fsubl
jns
pop
leave
pushf
test
insl
loopne
cmpsl
mov
dec
xor
mov
adc
addb
pop
inc
fmuls
adc
test
jle
and
mov
push
loopne
lods
loopne
dec
add
imul
and
out
mov
sbb
push
and
mov
adc
cmp
fcmovne
flds
clc
idivb
int
xor
dec
lods
mov
mov
cmp
fmul
jp
sub
xchg
mov
out
xchg
aas
movsl
pop
cmp
jne
ret
shlb
or
enter
push
into
or
or
cmp
ljmp
iret
imul
pop
xor
jp
pop
mov
jmp
movsb
mov
pop
cmpsl
mov
call
jecxz
sbb
add
loope
fistpll
sub
jns
call
push
xchg
scas
arpl
faddl
adc
jo
xchg
jae
es
adc
mov
lret
add
movl
out
js
in
dec
add
or
adc
mov
jns
je
add
mov
lods
add
xlat
add
sti
sbb
add
adc
xchg
pop
mov
jge
mov
add
mov
mov
adc
cli
sub
fbld
mov
jg
xchg
dec
add
inc
lods
pusha
xchg
dec
sbb
sub
and
or
xchg
movsb
jnp
cld
scas
and
std
ret
push
xchg
stos
mov
pop
inc
scas
and
cmpl
ds
mov
sbb
jmp
and
mov
sbb
jmp
roll
adc
fdivrl
add
or
mov
add
movl
cld
inc
push
and
mov
dec
jne
fadd
test
xor
dec
lods
mov
cmp
sub
mov
push
mov
jge
ljmp
jne
lock
bound
mov
cmp
test
or
add
push
dec
push
out
push
setl
push
ret
gs
rcr
add
mov
dec
std
cmpsb
inc
push
jns
test
out
and
add
adc
ljmp
add
popf
mov
mov
popa
xchg
add
fisubs
pop
vpavgb
mov
dec
ds
push
subl
outsb
push
mov
jb
mov
push
clc
xor
xor
aam
mov
or
jmp
std
mov
shrl
leave
or
ja
mov
adc
sub
and
jno
add
xchg
enter
cwtl
mov
adc
cmc
inc
xor
jo
inc
add
enter
add
pop
stos
add
andb
scas
dec
jg
idivb
mov
xor
mov
jecxz
clc
inc
mov
imul
xor
add
xchg
pop
sbb
xor
roll
movsb
push
sub
add
mov
cmp
loop
das
scas
rclb
out
adc
adc
mov
mov
mov
xor
and
test
pop
mov
pop
int
mov
imul
bound
adc
les
clc
sub
loopne
test
fwait
enter
push
mov
rorb
or
clc
lock
cmp
popa
movsb
xchg
and
cwtl
fimull
inc
cmp
jp
loopne
jecxz
dec
add
mov
sub
add
push
mov
arpl
or
insb
int3
jo
inc
add
hlt
fidivrl
lret
mov
ljmp
cltd
in
dec
lea
dec
shlb
aaa
sti
sbb
in
add
cmp
dec
fdivrl
jle
clc
xor
mov
dec
arpl
add
scas
sbb
andb
sub
push
scas
jae
cwtl
mov
cmp
jno
lods
in
pop
jns
scas
mov
cmc
xor
insb
add
stc
maskmovq
testl
add
movsl
fimull
bound
add
or
jmp
movsb
test
shl
stos
into
jp
stos
jl
add
mov
push
add
pop
insb
ret
mov
mov
hlt
xor
emms
mov
jo
pusha
cmp
fnstsw
sarb
mov
or
xor
icebp
popa
insb
mov
add
call
sbb
inc
add
addr16
add
lods
add
and
aas
jo
inc
or
push
fdivl
mov
call
pop
rorb
xor
out
add
aad
sahf
iret
sbbl
pop
mov
sub
mov
cmc
outsb
add
fidivrs
mov
mov
fildl
inc
mov
scas
dec
sbb
les
mov
pop
lods
jl
faddl
js
in
push
mov
loopne
and
bound
jno
add
push
and
pop
xchg
add
shrl
push
dec
aam
hlt
add
data16
imul
stos
arpl
add
in
mov
xor
sti
add
mov
test
shl
call
scas
js
stos
cltd
inc
jge
jg
clc
sub
lods
inc
xchg
adc
ja
mov
inc
lock
mov
sbb
dec
les
add
loope
fsub
decb
fldenv
les
in
lret
jo
js
cvtdq2ps
fdiv
inc
addb
stos
dec
bound
cmp
push
add
sub
repz
ds
dec
hlt
fildll
sbb
inc
rorl
pop
xchg
add
mov
or
popa
jnp
and
jg
pusha
xchg
sub
shl
outsl
mov
in
or
and
push
mov
sbb
jae
add
pop
jno
add
sbb
xchg
xchg
and
sti
roll
mov
inc
ficomps
int3
pop
add
loop
pop
push
add
loope
jge
mov
aas
xor
jg
mov
or
in
lods
cmc
scas
add
mov
inc
add
lods
rcl
add
xchg
outsb
repz
lods
sbb
les
arpl
jge
pusha
jnp
std
hlt
ret
aaa
add
jnp
mov
xor
jo
add
xchg
mov
jae
add
mov
loope
subb
xor
dec
sbb
in
mov
into
rcrb
mov
or
test
sarl
pop
inc
sub
and
cmp
fstpt
adc
add
lret
call
into
push
adcb
lahf
bound
out
shll
icebp
adc
xchg
or
rcrb
divb
mov
in
out
add
stos
lcall
pop
jp
cltd
add
leave
mov
outsl
add
or
cs
loopne
add
inc
in
out
add
sbb
and
add
sbb
add
or
fwait
sbb
or
shr
clc
xchg
add
mov
mov
jo
xor
ret
mov
mov
jns
jae
and
sti
cmp
mov
add
test
ljmp
sahf
hlt
sbb
and
inc
add
scas
pop
add
in
and
shr
addb
std
xor
pop
inc
add
out
add
outsb
add
cltd
rclb
add
or
add
lods
push
sub
leave
je
inc
mov
adc
andl
es
cli
dec
clc
into
xchg
cltd
add
outsb
lock
incl
dec
jne
popf
enter
xchg
add
adc
mov
fidivl
pop
fs
sub
dec
call
jge
mov
pop
jb
xchg
sbb
aas
and
jne
andb
fisubrl
in
cs
sub
xchg
jge
mov
rolb
and
mov
mov
lock
jo
insl
cmp
mov
xor
fsubrp
lds
fdivrl
pusha
sbb
shl
sbb
sbb
sub
sbb
xor
repnz
pop
pushaw
mov
hlt
jns
aaa
pop
mov
jmp
cltd
pop
repnz
addb
test
jns
js
add
ljmp
pop
cmp
add
mov
iret
fwait
or
imul
fadds
cmc
jo
xor
movsb
movl
or
jecxz
or
add
sbb
stos
xor
clc
or
sub
repz
add
test
mov
pop
add
xchg
mov
push
fwait
sbb
add
aam
clc
jb
add
cmp
fwait
push
int
repnz
roll
rolb
inc
inc
push
xor
xor
pusha
xor
and
and
jmp
rclb
or
shr
adc
pop
cmp
andl
inc
icebp
cmp
push
mov
pushf
push
adc
pop
or
sti
sbb
jmp
sub
mov
aas
push
incb
cli
and
fsubp
add
jl
mov
les
sub
cltd
mov
sub
in
push
pop
add
divl
pop
jl
and
int3
jno
add
fcom
jno
popf
add
inc
xchg
push
mov
sub
sub
outsl
aam
arpl
mov
fidivs
push
mov
jl
andb
jnp
mov
add
data16
sbb
add
mov
cwtl
sbbb
jecxz
sbb
test
fbstp
les
test
push
add
out
fnsave
adc
ret
sbb
imul
sbb
aaa
pop
inc
jae
mov
in
mov
movsl
jle
add
in
data16
icebp
repnz
and
jl,pt
add
and
stos
or
incl
pusha
addr16
nop
lret
into
ljmp
in
sub
rolb
idivl
sbb
or
insl
lret
mov
add
aas
into
sbbb
out
push
cmp
xchg
jmp
shll
mov
sbb
sub
ffreep
add
dec
cmpsl
mov
cmp
imul
mov
xor
lea
mov
mov
xchg
gs
mov
add
mov
mov
daa
js
pop
leave
cmpsb
add
add
mov
pop
add
out
and
jo
stc
fiadds
cmp
fs
loopne
xchg
add
add
cs
sbb
pop
xor
dec
movsb
add
cmp
out
out
push
insl
xor
rolb
pop
xlat
push
stos
out
lcall
inc
cmpsl
add
enter
dec
sti
adc
xlat
push
pop
jmp
addb
das
clc
insb
jmp
cmpsb
mov
addb
sti
enter
add
cmp
cwtl
sub
movb
jo
push
test
mov
add
xchg
mov
sbb
pop
mov
add
fwait
cmp
in
iret
add
mov
mov
add
mov
test
jl
jle
cmp
lsl
pop
jb
add
xor
dec
add
pop
test
sarl
mov
add
lods
mov
jge
jne
sub
add
ds
fimull
out
adc
pop
or
add
dec
daa
orb
mov
pop
push
sbb
cmp
ss
in
out
jne
push
add
add
ss
cltd
add
scas
out
mov
mov
jno
adc
sbb
add
dec
cmp
sbb
jns
fnstcw
daa
rcll
ja
popf
or
lret
das
adc
inc
out
sbbl
inc
mov
fcoms
xor
fidivs
adc
ret
mov
push
jmp
or
ja
mov
add
in
xchg
push
lds
pop
dec
add
sub
fmull
add
cmpsb
sub
mov
cli
push
pop
add
sarb
xor
sub
dec
hlt
mov
rorb
pop
ja
add
jbe
add
call
test
dec
dec
mov
cmp
push
add
ljmp
inc
rcll
mov
jecxz
hlt
shl
jge
mov
mov
dec
nop
sbb
mov
xchg
xor
dec
sbb
popa
sbb
mov
shr
lret
mov
std
push
xorb
mov
cs
fwait
icebp
lds
jg
fnstcw
mov
mov
push
pop
jecxz
std
inc
add
data16
mov
sbb
sub
cmc
add
sarl
ja
inc
enter
ror
andl
adc
add
mov
leave
mov
addb
lahf
dec
add
mov
sbb
repnz
aad
loopne
je
mov
fidivl
add
testb
out
sub
jae
in
mov
xchg
cmp
enter
movsl
imull
fwait
xchg
add
jne
xor
cmp
sti
popf
das
jno
xchg
sbb
clc
dec
and
dec
sub
xor
ficompl
xor
inc
sub
stos
test
aas
add
jnp
into
cmpsb
cmpl
or
fbld
pop
hlt
sarl
ret
pop
into
cltd
add
sbbl
add
push
shlb
mov
adcl
int3
add
cmp
dec
mov
fistps
push
ss
xor
push
daa
sub
sbb
ds
rcrl
cld
add
xchg
aaa
lcall
fadd
xchg
jnp
or
scas
or
pop
pop
push
sub
pop
test
mov
add
inc
push
adc
add
cmp
mov
dec
jno
sbb
jnp
int
sahf
mov
stos
rcrb
shl
or
ss
xor
sbb
dec
fiadds
jbe
adc
mov
xchg
and
xchg
lock
addr16
jnp
add
push
mov
add
rol
sbb
sub
add
xor
insb
add
xchg
test
add
inc
sbb
stos
lea
xor
sub
xor
cmpsb
enter
in
sbb
bound
fdivrl
xchg
imul
xor
add
pop
test
pop
jg
in
aas
iret
add
arpl
mov
cld
loop
nop
dec
push
or
fs
push
mov
dec
ds
test
jmp
mov
adc
popf
out
lods
inc
movsl
fdivp
add
push
cmp
push
push
insb
and
sub
xchg
add
mov
sti
negl
adcl
lea
ss
add
clc
inc
les
add
pop
push
or
add
pop
fxch
add
jl
popf
pop
add
cli
pop
cmp
aas
sub
cmpsb
push
push
pop
ret
or
je
adc
jbe
cmp
cli
or
loop
mov
mov
scas
and
and
js
dec
daa
push
pop
jecxz
out
add
mov
sti
aas
pop
in
aas
fcompl
test
test
popf
push
outsb
call
or
pop
fsub
sti
add
inc
ja
ret
add
into
fwait
stos
jbe
addr16
ret
sahf
rolb
mov
nop
jg
mov
int
jmp
repnz
dec
and
nop
sti
loopne
daa
xchg
add
aas
shll
push
das
add
add
in
outsb
insb
aam
add
cltd
out
dec
inc
out
test
and
xor
mov
in
sahf
xchg
icebp
pop
mov
arpl
pop
fildl
jge
and
xor
mulb
in
mov
add
add
jns
test
lea
cmpsb
add
xchg
add
fwait
iret
popl
xor
xchg
dec
add
lock
fs
int3
cs
fucomp
pop
sti
pop
pop
orb
xchg
sub
out
xlat
pop
mov
pusha
add
rol
cmpb
insl
cmp
sar
cmpsb
rcrl
sti
xchg
in
adc
push
int
test
filds
fmul
nop
add
ljmp
add
inc
jg
lea
loopne
jb
or
mov
icebp
sub
inc
lahf
add
cmpsl
jmp
push
xor
pop
insb
push
mov
mov
jge
subl
sahf
es
pop
fiaddl
jecxz
sbb
jo
lahf
outsb
int
dec
jbe
pusha
adc
jae
test
mov
fimuls
mov
call
or
cmp
mov
enter
add
pop
mov
ds
add
mov
cmp
cmc
mov
and
pop
add
add
shll
dec
cmpsl
stos
xchg
xor
cmp
mov
dec
je
test
cld
inc
add
call
xchg
sbb
pushf
push
insb
and
in
incb
jnp
scas
lret
call
xchg
pushl
add
shl
call
movsl
push
inc
pop
jmp
iret
roll
jp
pop
jl
xchg
mov
and
pop
mov
xor
or
jl
or
cmpsb
pop
sbb
js
jl
add
subl
add
push
lcall
into
jo
xchg
loopne
adc
scas
and
add
sbb
repz
mov
popf
pop
mov
enter
es
nop
mov
xchg
gs
mov
sarl
rcrb
and
mov
and
fildll
xor
movsl
add
sub
add
test
test
stc
xchg
add
sbb
add
inc
fcompl
rorb
repnz
int
dec
mov
jbe
mov
add
jb
rorb
icebp
mov
out
call
xbegin
sub
add
dec
push
cmp
mov
pop
fbstp
in
push
cs
push
add
test
xchg
xlat
ja
xchg
call
cmp
cmp
and
add
add
sbb
movsb
jnp
xor
out
rclb
or
jp
icebp
pop
pop
jnp
cmovo
mov
repz
dec
sbb
or
lods
fiaddl
inc
out
cli
jae
call
dec
add
lods
adc
jnp
sarb
and
add
or
stos
add
add
xor
jmp
jecxz
mov
cmpsl
imul
pop
loopne
imul
xchg
and
add
push
sbb
rol
cmp
sub
notl
adc
push
cmpb
push
add
std
fistps
mov
in
add
mov
inc
jae
jns
scas
idivl
popf
cli
mov
loope
ja
dec
cltd
sub
pop
ljmp
mov
adc
push
imul
negl
add
inc
sbbb
jle
js
outsb
aaa
stos
in
pop
lcall
sti
add
xor
cmp
mov
cld
pop
dec
aas
lock
add
incb
cmp
mov
movsb
inc
ret
mov
jmp
adcb
out
popa
in
add
pop
insl
or
imul
sbb
mov
mov
fs
sahf
mov
mov
dec
scas
lds
adc
add
andb
arpl
sub
add
sub
mov
js
xor
pusha
adc
add
out
pop
sbb
jmp
lret
push
xchg
shlb
cmp
push
fs
loopne
add
pop
bound
add
loope
mov
outsb
or
add
data16
xchg
adc
lea
add
push
bt
adc
faddl
popf
test
adc
cvtdq2ps
inc
movsl
xchg
fiadds
pusha
mov
push
out
bswap
stos
mov
loopne
xlat
xor
sub
push
sub
loope
je
cmc
call
or
push
pusha
pop
push
pop
scas
lcall
retw
add
hlt
out
inc
sahf
mov
add
push
xchg
lahf
aaa
call
jnp
mov
xor
add
sbb
ret
jae
dec
aas
je
sbbb
divl
jmp
addb
pop
dec
or
add
or
test
out
in
jle
add
and
add
pop
loope
cwtl
mov
xor
pop
int3
sbb
test
xor
and
mov
add
sbb
inc
xchg
addb
shr
add
jbe
or
xor
inc
cmpsl
cwtl
cmp
add
lods
arpl
fiaddl
dec
stos
stc
or
call
frstor
out
add
test
lock
scas
cltd
pop
sub
sbb
mov
inc
jg
sbb
lds
loop
fadds
dec
lcall
fnstenv
adc
push
pop
add
sub
mov
lret
sbb
sub
ljmp
sbb
push
add
call
test
xor
outsl
loopne
in
pop
shrl
jb
sbb
or
shl
lcall
repz
xchg
or
mov
mov
rcll
sbb
mov
ja
inc
mov
add
and
cmpl
mov
cwtl
add
sub
dec
jae
inc
movsb
loop
and
adc
cmc
pop
nop
jo
dec
cltd
lods
push
dec
xchg
dec
clc
addb
xchg
cmp
adc
sbb
add
mov
inc
add
add
fstpt
mov
leave
mov
add
fldt
mov
add
inc
push
stos
add
lods
cmp
out
idivb
add
loope
mov
fadds
jne
pop
outsb
push
test
popf
into
mov
cwtl
fmuls
push
cld
out
dec
mov
pop
add
add
inc
fiadds
add
inc
adc
push
insl
jle
rcll
sbbb
sbb
fsubrp
adc
ja
pop
cmp
add
call
mov
in
dec
jg
add
loopne
rcrb
or
mov
add
xor
es
shlb
xchg
ret
push
inc
jmp
mov
mov
sub
cmp
dec
add
cld
insb
test
xchg
and
cmc
add
leave
jo
mov
movsl
sub
xor
je
test
and
imul
jmp
mov
daa
add
sbb
xchg
cmpsb
ret
push
add
mov
dec
add
enter
call
add
into
or
add
imul
insw
psubb
hlt
inc
or
or
pop
add
sub
lock
inc
ret
push
sbb
rcrl
ds
push
sbb
sub
shlb
imul
or
dec
mov
or
xor
nop
mov
enter
lock
fdivs
icebp
js
add
and
or
dec
sub
pusha
lock
adc
dec
pop
pushf
sbb
inc
popf
jo
add
aas
repz
enter
arpl
inc
iret
cmpb
hlt
xlat
add
sbb
pusha
testb
push
add
xchg
add
hlt
push
xor
inc
pop
add
push
jl
add
mov
mov
movb
jbe
or
mov
xchg
inc
rclb
inc
rorb
mov
add
inc
xlat
push
mov
shrb
adc
sbb
wrmsr
imul
or
rcrb
jo
ret
adc
fcoms
xchg
xor
push
hlt
adc
xor
sbb
add
push
nop
pop
repz
into
pusha
inc
xchg
hlt
or
jb
inc
sub
sbb
rclb
pusha
jns
dec
add
mov
xchg
cwtl
sbb
pop
popa
shr
push
in
and
shlb
nop
cmp
icebp
xlat
mov
adc
mov
mov
mov
push
add
inc
xor
xlat
push
jmp
nop
push
mov
add
add
repz
pop
mov
roll
push
leave
fxam
inc
push
dec
or
aad
xchg
mov
add
xchg
jns
call
push
jg
mov
popa
shr
or
dec
icebp
or
cltd
insl
pop
and
pop
xor
imul
mov
rol
or
rolb
mov
inc
sub
inc
and
mov
sub
shr
adc
inc
je
and
xor
add
adc
adc
in
and
mov
lea
andb
sbb
loopne
add
mov
or
out
mov
insb
imul
push
stc
int
xlat
xor
or
cwtl
loopne
mov
pop
inc
test
inc
nop
loopne
xchg
push
and
jl
add
ljmp
push
dec
xor
add
mov
push
clc
and
sub
mov
mov
or
les
add
xchg
decl
in
orb
jo
in
icebp
aam
nop
or
adc
cwtl
and
nop
mov
fadds
pop
xchg
aam
and
add
call
mov
sbb
cld
jne
add
adc
and
push
add
cmp
pusha
imul
and
outsl
cmp
cltd
sub
test
inc
sbb
ret
adc
mov
xor
adc
popf
xor
mov
jp
xchg
mov
adc
pop
jle
cmp
jns
enter
lcall
gs
roll
andb
add
sbb
int3
das
add
test
xchg
pusha
mov
pop
jo
cld
mov
clc
idivl
jmp
scas
xchg
mov
fstpt
inc
adc
out
add
sub
enter
popf
rorl
push
jo
insl
pusha
mov
dec
stc
movsb
add
loopne
in
xor
leave
xor
mov
and
sbb
and
and
sub
add
cltd
je
jbe
xchg
loop
aam
in
mov
inc
test
lock
mov
push
mov
mov
fmuls
lahf
shll
enter
scas
add
adc
enter
rolb
daa
aam
cld
mov
in
adc
roll
mov
cmpsb
xor
add
in
adc
pushf
orb
sbb
fmull
xchg
pop
cld
add
mov
ds
dec
pushf
and
adc
and
popa
psrlw
or
scas
je
add
dec
xchg
das
in
or
aam
dec
loopne
add
ss
add
sub
in
push
pop
movsb
test
jl
hlt
loop
lods
and
add
aad
add
dec
mov
loopne
test
cmp
jp
arpl
or
add
xchg
xchg
xor
add
test
outsb
adc
mov
aad
jb
pushf
fs
add
mov
push
xor
enter
and
add
inc
push
pop
mov
dec
pop
inc
outsb
xor
stc
sbb
mov
add
popa
inc
mov
or
add
xchg
addr16
dec
cmp
nop
push
xor
cs
jne
subb
cmp
inc
inc
pop
mov
xchg
dec
js
add
fidivl
ret
add
rcrl
shlb
inc
push
xor
fcomps
sbb
je
mov
lret
adc
in
jb
ds
push
add
cs
add
cmpsl
data16
add
cmp
dec
pop
mov
mov
insl
sub
add
push
fcomip
les
test
xchg
add
lahf
stos
daa
outsl
mov
sbb
add
mov
jne
rorb
shlb
jae
out
inc
ficompl
mov
adc
sbb
inc
mov
and
xor
lahf
inc
aad
and
test
xchg
fmuls
cmp
jo
xchg
shlb
movsb
push
jle
out
popf
jns
lock
iret
testb
mov
stos
aam
jnp
add
mov
mov
xor
sub
mov
xorb
dec
out
inc
lds
and
sub
cmpsb
push
jnp
js
movsb
rclb
es
add
dec
test
sub
sub
cmpsb
mov
xor
addr16
cmp
adc
icebp
cmpb
test
mov
pusha
outsl
sub
mov
add
or
mov
add
dec
xchg
xchg
push
and
aad
mov
iret
add
in
inc
cmc
sti
dec
add
fcompl
jl
jae
les
fs
shl
mov
test
enter
test
out
xor
add
es
jns
fdivs
add
adc
add
out
jge
mov
mov
leave
mov
cmp
add
nop
cmpsb
loopne
std
enter
adc
adc
and
pop
mov
xchg
call
leave
add
lock
mov
add
or
loope
mov
les
jg
pop
add
orl
lds
mov
aad
pop
mov
gs
push
int3
sbb
and
cmp
adc
fiaddl
xchg
cmpsb
jecxz
fidivrl
movsb
sub
cmp
pusha
xor
dec
mov
pop
xorb
notl
in
iret
in
sub
iret
sbb
test
or
std
or
dec
jo
fiaddl
xchg
xlat
loope
xor
add
fisubl
lret
addb
or
inc
enter
shrb
add
mov
dec
das
mov
test
in
sbb
dec
xchg
and
xchg
loope
adc
pushf
int
adc
testb
outsb
in
inc
xor
or
mov
xchg
mov
mov
icebp
shlb
push
adc
aaa
xchg
xor
sahf
add
push
xchg
add
cli
movsl
das
ret
sbb
sub
push
and
cmpsl
add
loope
inc
jno
mov
das
fbstp
iret
add
and
bound
loop
loope
mov
jnp
mov
arpl
out
mov
add
lea
add
add
imul
pop
inc
inc
aad
mov
insb
mov
sub
add
mov
pop
pop
dec
add
push
add
jnp
or
je
add
add
xchg
or
or
xlat
sbb
test
es
add
mov
cltd
adc
xchg
jge
scas
mov
xchg
out
cmp
cmpsl
mov
mov
int3
shlb
jle
push
ja
sub
lahf
adc
pop
or
clc
add
xchg
out
pop
scas
ja
add
xchg
sub
fildl
in
jnp
push
cli
jge
cmp
stc
outsb
mov
and
add
pop
mov
ret
data16
add
dec
jge
add
push
xchg
packssdw
mov
jmp
and
out
jle
xor
xchg
or
cmp
add
pop
jno
out
jb
pop
mov
inc
cmp
cmp
add
std
movl
xor
jae
add
jmp
add
pop
mov
bound
les
add
clc
dec
add
pop
adc
xor
sbb
jmp
add
inc
xor
ja
pop
mov
icebp
or
inc
rcrb
cmp
add
jmp
roll
pop
pop
mov
test
push
dec
loopne
fwait
js
add
xor
adc
aas
mov
stos
mov
xchg
imul
sahf
fisubrs
mov
leave
pusha
adc
push
andb
pushf
mov
mov
mov
sbb
movsb
pop
add
add
mov
pop
sbb
call
mov
add
mov
fcompl
sub
add
dec
pop
jne
cmp
add
lock
insl
in
xchg
add
jno
lea
imul
repz
pop
in
aas
adc
xor
lods
xchg
loop
or
push
cwtl
fstl
bound
sub
cld
or
add
iret
loop
test
inc
popa
push
jne
roll
dec
int
movsl
xchg
imul
pushl
jbe
nop
xchg
jg
sub
add
stos
mov
add
fsts
cmp
cmp
push
mov
jmp
cmp
cld
jp
push
mov
and
loopne
scas
push
clc
les
cmp
rcrb
dec
sbb
aam
mov
loopne
loop
add
dec
ja
pop
cmp
mov
fs
ror
pop
xor
and
jmp
sbbb
mov
addr16
es
test
jne
in
stos
and
push
loopne
push
testb
repz
add
xor
adc
sahf
cld
cmp
in
dec
pop
fisttps
inc
and
jle
push
xor
mov
mul
icebp
dec
jo
add
loope
cmpl
inc
imul
repnz
sahf
xchg
push
add
fdivl
add
jns
pusha
add
adcb
into
shrd
nop
pop
and
or
push
mov
jl
mov
dec
add
add
add
movsl
lea
cmp
pop
stc
das
daa
xor
movsb
push
sub
inc
and
or
pop
gs
loope
mov
sti
bound
lods
out
pop
dec
or
das
pop
pop
jecxz
mov
xchg
aam
mov
out
pandn
rcll
imul
movsl
dec
imul
cli
call
xchg
repz
sti
mov
inc
data16
lds
dec
push
and
jo
scas
xor
shl
mov
in
jge
dec
lcall
pop
adc
in
add
push
cmpsb
pushf
stc
int
cmp
jl
daa
inc
mov
push
xor
incl
imul
sub
or
sbb
adc
add
push
dec
xlat
push
add
adc
js
in
roll
cmpsb
jl
pop
addr16
subb
popa
scas
sbb
xor
dec
xchg
or
inc
jp
sub
add
mov
out
lock
cmc
shr
popf
vhaddpd
jg
sbbb
mov
pop
aam
out
dec
pop
dec
out
rep
psllw
ljmp
sub
jbe
scas
pushf
or
dec
xchg
add
mov
inc
pop
das
fcomps
loope
lock
test
adc
aad
or
dec
push
pop
call
negl
or
jae
int
pop
and
nopl
je
and
shr
ficomps
xor
dec
add
insl
outsb
xchg
pusha
push
clc
adc
fldl
add
fsub
xor
subl
dec
inc
pop
lods
add
test
add
xor
xchg
lock
push
clc
jle
add
sub
in
cmp
add
jbe
repz
xor
js
cmp
addr16
aam
loopne
in
pop
inc
daa
sahf
fldt
outsb
inc
aad
rolb
xor
sahf
push
pop
cwtl
nop
add
sbb
xlat
call
pop
mov
insb
jecxz
dec
scas
sbb
shlb
add
mov
in
pop
loope
lods
mov
adc
test
sbb
xchg
mov
and
sub
cli
or
fsubs
mov
scas
mov
sbbb
idivb
mov
mov
dec
fiaddl
push
scas
push
inc
fnstsw
pop
jbe
mov
pop
jae
xor
sub
add
add
jno
fdivl
xchg
shlb
loop
inc
mov
xorb
cmp
seto
ss
mov
sbb
lret
adc
mov
jge
add
xchg
adc
fmulp
jns
jp
addr16
sub
add
add
add
lcall
lahf
push
int
mov
and
loope
dec
sar
pop
dec
add
imul
jecxz
je
sub
cli
int3
add
and
mov
add
push
imul
aas
pop
or
sbb
mov
loop
pushf
adc
cli
sarb
sub
mov
nop
idivb
ljmp
dec
xorb
xchg
push
sub
cmp
add
cmp
shrb
xchg
je
add
or
add
out
adcb
jns
lea
mov
mov
jge
add
cltd
mov
and
and
add
mov
add
test
push
pop
sub
sbb
or
cli
int
enter
mov
call
into
test
jae
mov
jns
lea
movsl
mov
or
push
leave
test
lods
push
clc
xor
lea
dec
rorb
int
mov
cltd
mov
add
pop
int3
jno
cld
mov
lea
xchg
pop
add
lret
test
mov
mov
mov
pop
inc
mov
jg
mulb
xor
cs
add
pusha
movsb
add
loopne
xor
xchg
jp
mov
push
inc
mov
clc
mov
rorb
pop
dec
xorb
jmp
mov
jbe
xorb
enter
negb
mov
jnp
cmp
shll
add
mov
cmpl
cmp
popa
cld
and
sub
pop
sbb
loop
fwait
add
sub
pop
mov
aaa
xor
xor
or
aad
roll
aam
cmp
aaa
sti
mov
push
add
push
outsl
js
ror
add
adc
pop
add
popl
cmp
add
jnp
push
inc
js
mov
outsl
popf
ds
push
ja
sbb
stos
pop
jle
pop
push
popf
shlb
dec
rcll
xchg
outsl
mov
push
nop
add
xorb
cmp
jp
mov
add
inc
test
jge
testb
pop
gs
push
mov
mov
push
movsb
xor
insb
jo
and
add
arpl
or
mov
dec
sub
mov
xchg
and
inc
and
pop
repnz
test
adc
insl
aas
jmp
add
lea
mov
sbbb
icebp
mov
dec
mov
xlat
clc
sar
jb
daa
inc
xchg
subb
repz
sbb
fnstcw
add
lret
sub
add
ret
iret
test
sub
add
and
sbb
pop
pop
int3
lds
outsb
roll
nop
cs
es
push
add
dec
push
pop
popf
outsb
cmp
mov
inc
int
or
std
add
push
fs
mov
das
test
movq
mov
mov
cmpl
rcrb
cmp
dec
loope
lea
pop
aas
add
mov
arpl
test
insb
dec
add
add
popa
mov
lock
or
inc
or
lods
add
in
push
push
pop
xchg
jmp
xor
or
push
pop
mov
add
mov
jbe
clc
lahf
test
or
stos
xor
add
jge
pop
mov
adcb
subl
pusha
in
inc
pusha
adc
loope
pop
add
mov
das
test
cmp
pop
dec
pop
and
push
push
dec
cmc
add
xor
mov
ficoms
mov
inc
scas
add
ret
and
cltd
or
dec
rcrl
add
shll
cmp
insb
dec
add
pop
xor
or
pop
out
cmp
inc
inc
mov
add
push
inc
popf
aam
scas
hlt
or
out
cwtl
pop
enter
or
sub
fdivr
push
sbb
xlat
push
rorb
pop
lods
pop
in
xchg
adc
je
sub
packsswb
ljmp
or
jp
out
mov
loop
out
add
dec
adc
fs
sub
or
add
mov
lock
sete
enter
sbb
mov
inc
cld
ja
dec
loop
lahf
sbb
test
cmp
mov
xor
adc
pop
push
in
std
mov
sbb
fisubl
mov
mov
rcrb
adc
dec
or
rcr
test
pop
mov
leave
mov
add
repz
add
mov
jle
push
jbe
insl
jecxz
test
push
jne
xor
cmp
roll
int3
mov
hlt
insb
xchg
fiaddl
dec
insl
add
mov
aam
and
add
mov
add
pop
in
int3
cmp
les
mov
mov
cltd
inc
gs
xor
mov
insb
into
out
inc
mov
lock
in
xor
es
mov
pop
xchg
lahf
dec
insl
rcr
cmp
and
sbb
add
lds
push
sbb
mov
xchg
jecxz
xchg
cmc
cmpsl
call
cmp
add
push
and
push
dec
xchg
sbb
pusha
arpl
xchg
or
testl
aas
pop
enter
pop
outsl
and
dec
dec
movsb
add
adc
xchg
pop
arpl
add
or
add
dec
les
mov
imul
mov
jb
jp
mov
pop
adc
jb
add
mov
mov
mov
push
add
stos
adc
add
aas
movsb
ficomps
aad
jno
orl
add
and
mov
pop
dec
incl
lods
lahf
sub
cmc
ljmp
lret
cmpb
sbb
jl
cmp
xor
inc
jno
inc
mov
adc
mov
imul
adc
add
xor
jg
add
dec
test
xchg
loopne
xor
insb
xchg
sub
andb
flds
add
loop
mov
es
cmc
dec
inc
dec
lret
imul
idivb
adcb
aaa
sbbl
dec
enter
fcomip
cltd
add
xor
lea
push
pop
add
std
lcall
mov
inc
inc
pop
pop
add
aas
roll
mov
pop
dec
lcall
jne
adc
icebp
add
imul
cltd
pusha
mov
sbb
cld
dec
add
adc
jmp
add
mov
enter
jle
push
add
lods
inc
jp
and
add
icebp
pop
sbb
cmpsl
add
push
and
add
inc
pop
push
das
jbe
add
push
dec
or
enter
push
andb
pmulhuw
sbb
inc
insl
add
test
loopne
pop
adc
adc
dec
xchg
cwtl
jle
sbb
mov
inc
add
dec
daa
cmp
xorb
pop
mov
adc
sub
lret
call
add
aad
daa
test
inc
xchg
push
jb
add
cmpl
scas
mov
out
in
icebp
add
and
cmp
pop
incb
es
push
push
add
xor
nop
mov
sub
jo
push
in
and
rclb
inc
mov
add
cmpsl
int3
inc
fldt
or
and
push
add
das
bts
ja
add
lea
adc
add
push
popa
mov
mov
jmp
loopne
roll
mov
fnstenv
jne
fs
cmp
push
add
xlat
out
add
add
or
inc
movb
stc
xor
and
sub
cmp
outsl
xorb
jle
into
inc
push
add
or
push
je
add
sti
scas
lret
add
push
dec
fsts
push
into
je
data16
fistps
aaa
add
js
scas
popa
inc
int
jnp
add
mov
ret
xchg
push
xor
dec
lahf
add
int
mov
dec
adcl
arpl
fildl
ficoml
lret
dec
dec
scas
pushf
call
cmpsl
sub
push
cli
add
mov
stos
push
into
int
push
sbb
push
mov
jl
out
adc
pusha
lahf
add
lcall
cmc
xor
and
call
in
data16
aam
inc
add
xchg
xlat
test
mov
add
sbb
add
cmp
fisttpll
sub
xor
push
mov
add
and
arpl
mov
xchg
in
pusha
mov
js
add
mov
jp
xor
fdivrs
mov
leave
xchg
pop
add
dec
stc
sbb
pushf
lds
xor
jge
in
fs
sahf
fsubrl
add
inc
pop
leave
xor
notl
loopne
jg
cli
sbb
mov
cmp
xchg
pop
pushf
test
das
fiadds
inc
test
jo
movq
rorl
adc
das
add
sti
push
aad
mov
mov
es
out
fcmovb
minps
loopne
xchg
sti
sbb
lret
dec
mov
add
inc
movsb
nop
cmp
wrmsr
push
mov
add
jae
jnp
cltd
xor
xchg
lahf
imul
inc
pop
push
mov
inc
xor
xchg
xchg
pushf
fiadds
ret
jp
push
cmp
aam
es
and
pop
daa
call
mov
fidivrs
ret
idivb
mov
aam
sub
lods
inc
fsubr
mov
xchg
sbb
insl
sbb
and
add
pop
pop
xorl
sahf
push
mov
lock
loopne
dec
jo
adc
nop
add
popa
lcall
outsb
jge
cli
std
movsb
add
imul
cmp
mov
inc
jae
in
or
jns
faddl
imul
scas
add
rol
or
add
mov
loope
pusha
clc
cli
jns
mov
mov
popa
jg
repnz
nop
or
rcr
xchg
test
sub
mov
aas
jmp
negl
cli
and
xor
mov
icebp
dec
sbb
mov
lret
sbb
sub
add
out
leave
push
and
adc
test
jne
into
add
loopne
pop
mov
fimuls
and
or
mov
xor
sub
inc
lods
test
stos
xor
shr
fcomps
xor
mov
inc
xchg
gs
sub
jae
cli
push
mov
sbbb
mov
adc
push
lahf
ror
sbb
pop
sub
jg
pop
push
adc
add
dec
aam
xor
stos
and
jo
xchg
dec
mov
inc
insb
add
mov
or
mov
adc
xor
lods
jecxz
outsb
pop
jle
in
mov
xor
push
subl
dec
out
shrb
mov
roll
xor
xor
dec
xor
js
nop
and
stos
test
and
jo
pop
mov
and
push
adc
pop
cmp
sub
mov
stos
sbb
xorl
call
fcoml
cmpsl
add
dec
cmpsb
pop
in
data16
jmp
orb
or
cmp
shl
iret
add
mov
inc
dec
xchg
insb
add
xor
in
sbb
add
jo
push
xor
add
add
fistl
add
mov
jmp
pop
iret
jmp
lods
add
mov
addb
cmc
pop
ret
sti
cmp
mov
cwtl
scas
push
mov
repnz
xchg
imul
pushf
push
movsb
jp
lret
lcall
sbb
cmpsl
add
data16
shrb
push
lock
add
push
xchg
sar
popf
stos
shrb
add
bound
jl
fs
push
add
pop
leave
add
push
cwtl
cmpsb
or
pop
mulb
xorb
rol
test
or
movb
popa
jmp
out
push
mov
jmp
mov
jl
cltd
mov
sarl
inc
jb
lock
add
pop
push
int
sub
xor
and
hlt
sar
stos
mov
rcrl
xlat
push
addl
insb
sub
or
das
pop
xor
fildll
jge
xchg
inc
insb
add
and
inc
les
cmp
pusha
xchg
bound
add
int
or
cmp
test
mov
jecxz
adc
jae
ret
rolb
aaa
mov
mov
cmp
xor
les
bound
in
loop
push
sbb
xchg
add
or
jns
mov
pop
in
sub
insl
lods
pop
mov
add
imul
sub
jns
mov
add
jno
add
out
add
adc
iret
cmp
imul
jb
mov
sub
fs
add
push
ds
pusha
sbb
js
out
daa
jo
add
fisttps
mulps
add
idivb
xor
push
adc
add
cli
xlat
scas
push
subb
loope
fs
or
outsl
out
dec
mov
fisubrs
cmp
sbb
pop
add
out
push
push
sahf
sahf
xor
mov
clc
cmp
loopne
add
xor
ret
sub
cmp
mov
cwtl
pusha
pop
mov
add
mov
leave
add
daa
push
jg
cmc
int
or
pushf
lods
mov
add
out
enter
pusha
fcoms
mov
rcr
mov
cmp
mov
push
mov
int3
add
and
dec
repnz
add
xlat
es
repz
push
mov
mov
dec
dec
xor
in
push
push
mov
sub
jae
cmpl
rorb
cli
inc
incl
sbb
inc
lds
jnp
add
faddl
or
gs
mov
test
add
data16
dec
in
idivl
mov
out
outsb
sub
addb
insl
lea
dec
cmp
or
clc
mov
push
jne
pop
test
std
imul
push
sbb
mov
insb
fistps
pop
mov
add
and
mov
adc
aad
fldcw
dec
jp
add
jmp
daa
mov
push
xlat
mov
jge
sar
enter
add
cltd
test
cmp
inc
cvtps2pd
xlat
jns
add
cs
inc
scas
jae
add
add
xchg
in
sub
hlt
inc
xchg
fwait
add
rcr
pop
ficomps
pop
arpl
pop
or
push
lcall
pop
rolb
push
mov
push
mov
or
xchg
mov
fcom
stc
out
loopew
int
sti
xor
clc
lcall
shr
popa
icebp
sbb
add
ret
jge
jnp
cmpsb
dec
dec
and
cmp
add
stos
add
stos
inc
cli
add
pop
dec
add
xor
or
out
cmp
pop
adc
out
shrb
jmp
cmp
pop
or
adc
sub
scas
cmp
flds
mov
cmp
inc
sti
pop
xorb
call
push
add
rcrb
pushf
aaa
fcomi
rolb
testb
sub
ds
push
outsl
sahf
add
lods
or
jp
xchg
inc
add
or
outsl
aas
mov
sbb
mov
icebp
inc
jbe
add
sbb
cld
adc
lods
mov
clc
mov
add
rorb
leave
add
inc
sbb
inc
ja
cmp
cmpsb
sub
daa
ret
cmp
xor
xchg
xchg
add
cmp
xchg
movsl
sbb
add
dec
mov
add
lret
invd
adc
sbb
rcl
sarb
pop
faddl
mov
into
jae
inc
sub
sub
jge
push
push
imul
and
cmovbe
add
cs
push
pop
mov
dec
and
jo
dec
out
add
addb
lock
xorl
outsb
adc
loope
add
pop
daa
das
lock
and
sub
movl
or
mov
sub
push
xor
fs
xor
xchg
add
les
nop
xor
mov
push
pop
jo
cli
add
mov
mov
fsubs
inc
add
cmp
addr16
xlat
out
push
sub
xchg
dec
mov
sub
push
mov
pop
mov
movsl
sbbb
or
popa
clc
and
or
adc
add
push
dec
les
xchg
add
sbb
or
mov
mov
push
and
insl
jb
add
movsb
sub
adc
leave
popa
add
jae
fdiv
xor
iret
ss
xor
jecxz
jb
aas
lret
and
add
add
cmpsb
leave
mov
es
mov
pop
adc
dec
xor
out
push
pushf
testl
xchg
xor
xlat
sti
daa
or
cs
mov
loope
jp
xor
push
adc
lret
xchg
fildll
mov
ss
cmc
push
fldl
push
inc
cmp
xchg
mov
pop
rcll
adc
out
dec
mov
pop
sub
mov
data16
push
mov
imul
fcoms
stc
sahf
add
mov
int
push
or
add
inc
jl
pop
sub
notl
arpl
add
repnz
add
addr16
dec
nop
and
mov
outsb
lcall
je
mov
add
mov
iret
pop
aaa
jecxz
mov
pop
pop
std
shl
scas
popf
add
arpl
scas
insb
iret
sub
xor
xchg
hlt
dec
in
pop
lea
dec
add
or
sbb
aaa
imul
mov
ljmp
ficomps
test
add
mov
in
dec
ja
and
aas
push
adc
sbb
mulb
ret
adc
inc
add
jnp
hlt
add
jbe
add
dec
out
xor
mov
imul
aaa
jge
in
dec
xchg
hlt
add
xor
and
stc
mov
pop
jmp
mov
and
push
jbe
int3
fs
jl
dec
inc
add
add
add
sub
xor
inc
insb
push
movsl
push
mov
cmp
adc
sti
pusha
je
push
add
fstpl
and
sub
stos
aaa
push
mov
aad
repz
cmpb
je
jmp
push
das
or
jge
push
loopne
pop
pop
cmp
aam
std
add
or
mov
js
jbe
arpl
je
dec
clc
dec
xor
push
xchg
add
push
cmp
cmp
jecxz
dec
int3
lods
add
out
adcl
repz
mov
cld
std
rcrl
call
sub
add
and
push
fdivrl
mov
stos
and
mov
aad
ret
pushf
rclb
int
jo
sbb
jp
or
and
scas
aaa
mov
xor
test
insl
pop
xor
jecxz
out
in
in
xchg
push
add
sbb
xor
rcrb
scas
mov
cmc
sbb
icebp
or
loopne
dec
pop
pop
pushf
cwtl
add
das
rolb
test
inc
push
scas
pop
add
sbb
lods
sbbb
mov
add
stos
dec
nop
clc
fbld
in
add
imul
push
addb
dec
addr16
or
sbb
lods
sub
or
std
scas
in
cmpsl
call
pusha
test
add
sub
les
jb
dec
aaa
daa
dec
je
mov
sub
mov
repnz
adc
test
inc
movsl
lar
push
jo
inc
pop
pop
mov
out
mov
movsb
shlb
and
mov
roll
push
push
out
jmp
lahf
test
inc
push
mov
repnz
in
jmp
iret
fwait
es
call
out
imul
jne
xlat
adc
roll
hlt
arpl
add
enter
push
push
cwtl
loopne
add
cmpsl
stc
push
cmp
mov
nop
bound
pop
test
lcall
jle
ds
pop
fwait
clc
push
add
arpl
je
iret
adcb
or
mov
nop
jge
mov
nopl
ds
xor
ret
push
mov
jnp
push
inc
sub
mov
je
mov
imul
push
cmp
lea
pop
mov
sbb
aad
dec
scas
dec
xor
int3
pop
push
enter
pop
mov
adc
cwtl
adc
inc
lar
mov
mov
roll
inc
cmp
out
pushl
cmc
xchg
mov
lds
mov
scas
add
push
addr16
jg
sbb
aaa
and
push
daa
lcall
mov
push
add
fadds
xor
or
enter
add
out
inc
pop
outsl
adc
and
sub
jns
sahf
cwtl
aad
mov
sub
out
or
pop
cmp
pop
cltd
mov
adc
push
cs
mov
test
and
aaa
es
add
and
cmp
mov
adc
aam
mov
adc
lret
popf
movsb
ret
pop
jg
and
push
iret
cmc
clc
out
aaa
adc
mov
add
xor
cld
cmpl
cmpsl
loope
popa
add
jb
shll
scas
sbb
mov
lods
add
inc
std
and
idiv
adc
add
stos
pop
sub
dec
gs
ja
imul
pop
mov
iret
add
mov
sbb
jo
jns
add
test
pop
adc
pusha
add
je
jle
xor
sbb
ret
sub
cld
add
aad
sbb
mov
dec
jg
divb
stos
jnp
fs
mov
sarl
jo
cli
mov
insl
dec
stos
popf
pop
lock
testl
sbb
add
mov
or
adcb
aad
rolb
pop
js
sub
push
pop
add
dec
push
lds
xchg
adc
mov
mov
pop
imul
iret
cmp
push
jo
ds
rcrb
in
out
jno
clc
push
or
mov
les
add
cltd
aaa
enter
inc
lods
mov
or
es
push
bound
loopne
fwait
mov
rolb
out
ret
jmp
mov
add
popl
add
sbb
jl
pop
add
add
jge
inc
add
mov
mov
cmp
sahf
cmc
adc
movsl
add
mov
add
xor
shll
push
sub
repz
shrb
jae
push
add
in
insl
jns
loopne
add
adc
pop
pop
sbb
add
out
push
arpl
icebp
add
mov
je
int3
jg
or
sub
adc
lcall
mov
ja
mov
and
int
push
pop
xor
add
sub
daa
push
jmp
add
das
aam
dec
add
fdivrp
imul
pop
sbb
stc
add
ud0
sbb
xor
add
sub
pusha
ret
mov
inc
adc
and
inc
out
add
test
add
push
mov
call
lock
mov
cld
test
scas
gs
sbb
data16
sahf
ret
pop
mov
cwtl
addr16
inc
out
ss
lret
arpl
sbb
push
inc
das
cmc
push
lds
push
push
shlb
sub
test
cli
scas
xor
mov
add
inc
dec
xchg
add
in
adc
test
mov
outsb
pop
out
push
push
out
dec
add
test
out
shll
mov
cwtl
push
test
push
out
cmpsl
inc
add
nop
add
cltd
js
data16
les
stc
xorb
into
add
rcrb
xor
and
jecxz
mov
es
cmp
aam
dec
sub
ficoms
add
pop
cmp
cltd
mov
cmp
lods
call
jbe
ret
mov
add
fisttpll
add
cld
jne
lret
pusha
xor
xor
add
inc
outsl
clc
jle
xor
jl
out
jmp
test
add
ret
and
adc
add
out
test
orps
push
fsubrl
repnz
inc
or
mov
jmp
ljmp
sahf
jo
push
pop
xchg
xor
repz
rcr
add
adc
cmp
stc
aad
mov
xor
mov
ret
shll
adc
in
cwtl
das
push
cmp
sub
push
mov
inc
sbb
cmp
dec
xorb
jmp
outsb
add
fwait
add
cmp
das
popa
pop
pop
adc
out
inc
daa
and
xchg
rolb
push
add
fbstp
jb
jno
add
sahf
outsb
dec
xchg
add
imul
lods
popa
sbb
inc
xchg
int3
xchg
lock
les
mov
fs
pop
cmpsb
adc
dec
pushl
jbe
cmc
ja
push
sub
aaa
aam
add
cmp
jmp
or
mov
sbb
and
sbb
push
push
adc
fldcw
shrb
out
add
add
adc
mov
mov
add
dec
enter
fdivrs
lods
loop
and
ss
int3
jnp
add
inc
xchg
cmp
or
jns
cmp
sbb
xchg
movsb
add
loopne
lea
push
data16
sbb
iret
push
and
add
mov
aam
mov
sub
js
sbb
inc
lds
add
pusha
inc
add
mov
cmc
sbb
push
mov
sbb
add
push
fwait
out
test
inc
add
lahf
fdivrl
fbstp
cltd
add
sub
sub
add
inc
fiaddl
xchg
or
jg
bnd
incl
in
mov
xor
mov
sbb
aad
and
pop
mov
sbb
sub
add
or
mov
out
lret
mov
daa
nop
adc
push
pop
xor
mov
andb
mov
ret
push
fadd
adcl
and
int3
adc
cmp
xchg
jge
in
clc
mov
fmuls
mov
aas
lcall
pop
dec
push
dec
and
popa
cs
std
pop
inc
fsubs
cmp
fiadds
aaa
cmc
pop
add
jp
arpl
push
into
in
xchg
lret
loopne
adc
popa
add
adc
sub
pusha
jmp
pop
dec
test
mov
and
push
xchg
cmp
xor
pop
movsb
jmp
push
ss
add
push
or
imulb
adc
stc
movsl
cmpsl
js
adc
gs
and
ljmp
adc
loopne
stos
mov
in
ficompl
and
test
xchg
add
adc
add
stc
mov
jmp
push
daa
pop
push
dec
cld
jg
add
fnstcw
push
sbbl
aam
movsl
mov
mov
pop
fldenv
mov
adc
es
pop
mov
xchg
add
and
jo
gs
adc
mov
js
cmp
orb
jae
dec
jge
add
cmp
ljmp
jle
sarl
add
push
lods
xchg
and
shll
repz
inc
test
loope
stc
mov
xor
xor
in
add
sbb
daa
jg
mov
add
lds
add
sbb
mov
sahf
test
popf
inc
insb
inc
and
jnp
sbb
inc
mov
pop
loope
int3
mov
clc
sti
fldl
push
push
imul
arpl
filds
adc
mov
push
pop
fdivp
adcl
add
scas
rorb
in
icebp
sub
mov
mov
repz
add
push
dec
fcoml
scas
stos
fnstenv
cmp
add
mov
movl
inc
out
dec
daa
ljmp
shrb
lock
add
ds
xlat
adc
mov
add
jmp
add
mov
std
pop
orb
mov
xadd
in
add
data16
fstpl
das
ds
mov
aas
dec
movsb
adc
jnp
jg
xor
push
cwtl
dec
test
push
xor
inc
orb
add
mov
test
jns
sub
gs
mov
shrl
add
scas
or
mov
rorb
jp
mov
pop
mov
shrb
jl
sbb
lahf
mov
in
adc
add
popa
xor
or
lret
ret
jle
adc
add
fsubl
flds
mov
daa
dec
mov
dec
add
and
loope
lods
add
pusha
pop
out
fistpl
sbb
push
mov
xor
add
pop
rorl
bound
xchg
add
in
addr16
xchg
jecxz
lock
icebp
cmp
or
pusha
cmp
fadds
mov
stc
hlt
movsl
dec
or
add
mov
add
dec
cmp
add
sti
push
out
xlat
pop
cwtl
lock
arpl
fwait
mov
mov
ror
jmp
xor
mov
jnp
ja
add
popf
xor
sub
jae
or
outsb
inc
dec
shrl
push
pop
cld
jns
loopne
mov
add
mov
push
add
fwait
lds
cbtw
dec
add
sbb
pop
test
js
pop
sub
mov
int3
mov
sbb
jmp
inc
pop
push
jl
mov
jecxz
sbb
mov
cmp
in
dec
aam
inc
sbb
or
mov
int
pop
lret
xlat
add
adc
push
pop
push
stos
shll
aaa
xchg
push
xchg
xchg
aam
add
or
adc
push
push
dec
jno
add
ret
dec
stos
mov
aad
ja
add
arpl
mov
clc
mov
add
je
cmc
into
int3
shlb
andb
jle
mov
sub
es
inc
jmp
lods
jbe
add
jl
fs
xor
adc
xchg
xadd
mov
notb
cltd
pop
add
lret
push
sub
sbb
fldcw
mov
jl
cmp
mov
aaa
xor
sarb
fs
xchg
cmpsb
jo
adc
filds
push
iret
lods
lock
push
xchg
sub
incl
aaa
ror
pop
push
mov
inc
clc
xchg
add
mov
sbb
add
int3
test
push
add
add
dec
jmp
add
xor
rorl
add
fstps
loopne
mov
mov
ret
fwait
cli
add
ret
push
jne
mov
popf
sub
add
sub
rcrb
add
stc
or
nop
ret
cmp
xchg
xchg
jno
or
mov
fs
cmpsb
dec
add
fstpt
adc
or
jne
sub
mov
clc
subb
xchg
cmpsl
repz
adc
add
adc
ret
sub
lock
in
adc
and
mov
aas
fistpll
cmpsl
or
xor
mov
test
adc
mov
andb
and
notb
add
jb
and
dec
add
fwait
mov
dec
in
out
mov
push
cmc
lock
and
std
add
ret
out
pop
pushf
fidivl
rolb
andb
jnp
aad
jae
mov
inc
and
pop
push
and
inc
enter
sti
repz
sbb
or
dec
ret
ds
fimull
cmp
lods
add
ret
pop
add
lds
add
push
call
mov
and
sbb
mov
add
int
subl
add
add
and
pop
inc
jnp
gs
or
test
in
push
aaa
cmp
pop
adcb
pop
sub
rcrb
subb
add
mov
jecxz
pop
nop
call
sbbb
mov
pop
loopne
flds
lret
push
scas
loope
lret
pop
mov
dec
jns
addr16
je
mov
loope
xor
push
pusha
insb
imul
pop
out
lret
mov
dec
ja
out
add
pusha
icebp
jnp
and
push
outsl
jne
push
mull
popl
sbb
shl
mov
add
push
mov
aas
and
stos
adc
mov
pop
pushf
or
movl
cs
sub
sub
popa
fs
jbe
jo
adc
sahf
pop
dec
ss
sar
lret
or
insb
sub
dec
data16
andb
idiv
mov
clc
pushf
in
icebp
test
push
add
stos
repnz
daa
mov
in
add
pop
lods
and
sub
jg
mov
xchg
cld
sbbb
in
sbb
add
pop
cmp
je
out
fistps
mov
nop
mov
scas
scas
cmp
add
sarb
sub
inc
sbb
add
jle
mov
sahf
add
pop
pop
out
add
xchg
ljmp
imul
lods
cwtl
pop
adc
jae
push
pop
out
repnz
adc
and
pushf
add
or
cmp
add
push
mov
xchg
inc
mov
orps
dec
arpl
addb
add
sahf
xchg
das
loopne
outsb
pop
sub
cmp
out
sbb
cmp
jns
aas
jge
orb
jecxz
adc
sub
and
lock
mov
add
int3
push
dec
call
lret
add
and
enter
add
mov
popl
push
push
push
lret
sysretw
stos
jae
jne
add
dec
repnz
icebp
popa
or
mov
push
test
push
and
das
addl
ret
rcl
repz
nop
stos
pushf
pop
add
insb
cld
jecxz
add
xor
and
or
lea
jmp
cmp
pop
imul
add
push
ret
out
mov
insl
lea
adc
pusha
mov
pop
les
dec
xchg
ret
xor
mov
data16
pop
rol
mov
cs
imul
sahf
mov
mov
xchg
insl
push
adc
rclb
inc
and
cwtl
add
pushf
in
inc
mov
daa
xchg
sub
mov
cli
jp
dec
sbb
xchg
sub
out
mov
shl
movsl
cld
mov
mov
mov
mov
sub
aas
paddusw
or
rcr
nop
xor
add
addr16
test
jb
imul
xor
add
inc
cmpsb
ret
clc
test
hlt
sbb
jno
es
add
addr16
xor
cmp
call
jle
add
shll
test
mov
sub
hlt
sbb
jno
lock
adc
add
fsubs
sub
mov
add
test
bound
in
pusha
add
jbe
mov
sub
arpl
mov
cld
int3
lret
add
loope
test
jo
push
mov
mov
andps
test
ss
scas
mov
ljmp
mov
outsb
inc
scas
stos
movsl
add
test
sti
in
std
add
dec
xor
gs
ja
aaa
int
and
add
xor
mov
sub
mov
popa
add
addb
xchg
repz
clc
xchg
pushf
cli
cmp
mov
inc
fs
pop
add
rolb
add
mov
mov
or
add
cmp
cmp
scas
shl
fdivrs
fs
xchg
inc
daa
sbb
test
leave
iret
pop
add
clc
push
or
mov
and
cmc
pop
add
leave
xchg
stos
bound
sub
push
ds
popf
mov
dec
int3
and
dec
icebp
js
add
les
adc
mov
in
call
lods
add
jmp
std
add
xchg
cmpsb
xlat
and
aas
jae
xor
jno
rclb
add
fldenv
out
or
or
sbb
clc
lock
sbbl
test
out
addl
shr
cld
stos
add
divl
inc
lock
andb
pop
xchg
pop
lret
in
out
lahf
add
inc
add
inc
loopne
add
xor
pop
sarb
add
fcmovb
or
add
mov
jae
leave
xor
add
rolb
add
insb
loopne
lahf
lret
pop
pop
push
sbbl
dec
add
les
loope
push
jb
test
and
add
mov
fcomip
stos
add
dec
movsl
enter
push
pushf
iret
mov
int3
ljmp
adc
das
add
fstps
lea
ret
pop
sbbb
rol
and
pop
sub
pushf
clc
push
push
in
cwtl
add
inc
mov
mov
pusha
push
mov
divb
rcrl
dec
push
arpl
jae
dec
cli
adc
sbb
sbb
add
in
aas
sbb
inc
xor
call
dec
push
stos
push
sbb
adc
lret
lea
add
cmp
xlat
int3
add
mov
add
out
repnz
repz
lret
cmp
or
shrb
jp
repnz
jne
add
scas
or
pop
jge
or
add
fiaddl
push
and
cmp
scas
adc
ret
add
mov
fnstcw
aam
js
add
add
jge
xor
add
cmp
jns
mov
cld
loopne
pop
test
add
mov
imul
jb
mov
sub
push
sub
mov
ljmp
insl
sub
in
jns
fmull
sbb
add
les
scas
fisubrl
mov
add
pop
and
push
in
add
shlb
dec
clc
xor
or
bound
add
aaa
mov
mov
xchg
sub
jle
cltd
stc
dec
testb
out
add
dec
fdivl
push
scas
mov
inc
movb
mov
cmc
lock
jg
add
mov
inc
cmp
jbe
jne
or
xchg
mov
testb
xchg
cmpb
sbb
or
test
mov
dec
clc
shrb
rcrb
add
jmp
and
lcall
test
mov
xchg
mov
cs
pop
adc
add
mov
mov
and
push
cltd
cmpsl
push
inc
mov
add
add
lods
adc
imul
loope
xor
xor
test
iret
adc
incb
ds
mov
inc
cltd
lds
mov
mov
mov
fcoml
or
int
or
scas
cmpsb
xor
add
push
dec
fbstp
jne
push
add
fwait
mov
out
and
add
jae
xchg
shlb
sub
inc
fildl
data16
lret
or
adc
push
movsb
push
in
mov
idivl
xor
loop
cwtl
rcrb
push
jg
fnsave
dec
add
xlat
testb
inc
adc
inc
adc
jmp
sbb
mov
add
dec
jge
das
popf
sub
mov
cmp
mov
add
xchg
hlt
aam
int3
aad
mov
loopne
add
ss
icebp
in
sbb
lea
sbb
add
push
cmp
movsl
sarb
fidivl
bound
icebp
add
mov
shrb
add
xchg
mov
pop
jb
mov
int
push
add
sub
or
lods
repnz
add
or
mov
xchg
cwtl
jecxz
xchg
mov
ret
dec
cmp
sarl
pushf
adc
and
dec
add
add
ret
sbb
scas
mov
pop
jno
fisubs
add
idivb
pop
pop
cmp
out
dec
dec
xchg
lds
sbbl
pop
rcrl
call
sbb
inc
pop
sub
pop
pop
dec
mov
fwait
add
lret
push
cld
test
cmp
pop
push
test
mov
pop
and
pop
add
lret
inc
add
and
aas
add
fisubs
aam
sbb
add
sub
dec
xorb
sub
cmp
or
adc
es
inc
xor
push
pinsrw
jl
lret
mov
push
stos
pop
test
push
xlat
cmpsl
pop
int3
loopne
loopne
push
in
cli
rolb
push
dec
lock
js
cmc
mov
hlt
pop
movsl
inc
dec
add
push
loopne
sbb
jge
and
mov
mov
int3
or
test
cwtl
add
fcoml
mov
iret
stos
or
repnz
add
pop
cltd
sbb
push
push
push
clc
sub
idiv
ror
add
jbe
dec
inc
xchg
pop
push
pop
mov
xchg
adc
add
sub
xor
loopne
fcmovnb
pusha
adc
pusha
jae
add
jmp
add
add
add
sub
lea
add
cmp
mov
add
adc
jno
sub
add
sahf
mov
cmp
loopne
and
dec
in
or
sbb
sbb
js
adc
pop
fildll
nop
xchg
out
and
frstor
sub
adc
mov
lods
ja
jnp
mov
jge
jo
ds
jns
cltd
push
add
sahf
lahf
iret
test
xor
sbb
scas
sbb
inc
jnp
inc
push
popf
add
pop
jae
into
and
sti
sbb
mov
repnz
inc
movsb
add
enterw
addl
cld
mov
stos
hlt
movsb
cltd
cmc
dec
add
and
inc
add
out
sub
daa
pop
sub
jns
pop
orb
aam
popa
cmp
sbbb
mov
pusha
fisubrl
push
shl
dec
data16
add
std
push
aad
inc
or
popf
pushf
lret
push
jmp
test
cmp
or
pop
xchg
sub
roll
and
mov
xchg
cmc
adc
xlat
iret
les
push
pop
js
hlt
sub
stos
adc
add
lock
and
shr
repz
sahf
mov
negb
sbb
and
std
adc
fldl
imul
jne
lea
es
xchg
adc
rcrl
push
and
leave
add
mov
stc
mov
sub
mov
mov
cli
cli
enter
mov
xchg
add
inc
in
sbb
mov
cmp
or
push
pop
add
xchg
lock
sub
dec
xorb
add
es
fwait
stos
arpl
add
ljmp
pop
adc
push
and
popf
xchg
xor
into
mov
cmp
cli
and
fsts
mov
add
fmull
add
movsb
inc
and
lcall
xchg
fnstenv
xchg
sub
addb
xor
pop
hlt
sbb
mov
jae
dec
add
adc
fstpt
xchg
fdivl
add
pushf
xchg
in
outsl
mov
dec
push
xchg
add
mov
add
scas
mov
out
mov
lahf
pop
movsl
das
xor
imulb
int3
add
lahf
rorl
outsl
push
pop
xor
sahf
dec
clc
mov
es
ljmp
jo
int3
add
and
inc
lock
out
ret
orl
daa
addr16
sbb
push
sbb
movsl
mov
mov
mov
adcb
fists
mov
xchg
or
mov
daa
push
jecxz
mov
movsl
shrb
imul
add
cmc
rolw
push
sub
fisttps
enter
loope
push
or
push
ficoml
out
pop
iret
sub
gs
xor
mov
loopne
sbb
mov
leave
scas
add
addr16
dec
sti
cli
xchg
cmp
scas
roll
lods
pusha
xchg
cmp
sahf
adc
jp
call
add
sti
adc
es
and
jno
cmp
call
hlt
jns
jbe
mov
jecxz
mov
add
lock
loope
lcall
lret
movsl
add
push
add
icebp
aad
xchg
jne
add
ficompl
or
fsubrl
sbb
pusha
mov
sbbb
pop
push
dec
add
stos
int
fnstcw
stos
inc
cmp
pop
orb
jb
push
add
cmpsl
push
mov
ret
xlat
cmp
xchg
aas
outsb
add
sbb
adc
push
hlt
roll
ljmp
out
pushl
hlt
push
push
mov
std
mov
roll
jne
dec
shr
inc
add
push
sbb
add
dec
xor
stos
shrl
shrl
add
push
imulb
fs
add
cmp
pop
fdivl
jbe
xchg
add
ljmp
add
in
int3
scas
dec
in
lea
lgs
xor
fimuls
jge
xor
imul
es
lahf
mov
inc
push
or
jnp
jns
xlat
add
push
pop
movsb
mov
and
or
add
inc
roll
inc
bound
pushf
inc
cmc
arpl
sbb
jmp
nop
add
adc
sahf
and
mov
and
xor
sbb
lods
loop
sbb
pop
pusha
and
sub
mov
repz
add
imul
add
or
mov
loopne
cld
andb
add
add
arpl
shlb
aam
pop
sbb
ljmp
xor
mov
loopne
loopne
int3
fs
pop
adc
xchg
mov
cli
xor
scas
nop
push
xor
add
xchg
aas
cmp
mov
sub
sbb
mov
incl
pop
dec
ds
icebp
jno
mov
push
pop
sub
adc
cmp
pop
pop
pop
xor
sbb
jo
sbb
sub
adcb
add
push
add
stos
dec
in
mov
popa
sti
mov
andb
inc
fdivrs
add
jb
jmp
add
dec
popf
and
xor
sub
mov
lods
and
enter
jne
push
add
xlat
jbe
aam
popa
dec
adc
loopne
add
mov
out
dec
mov
push
insl
sub
scas
xchg
pushf
dec
sti
or
add
push
or
add
dec
sub
mov
popf
outsb
inc
inc
daa
sbb
pop
sbb
lods
adc
pop
sub
add
mov
pop
push
sbb
lahf
cmp
add
cwtl
xor
cmpsb
dec
pop
jno
xor
mov
add
xchg
mov
in
fwait
out
std
add
push
jnp
call
cmp
push
sub
pop
add
or
jge
clc
enter
loope
test
push
fldt
hlt
add
shll
data16
xchg
jae
dec
cmpsl
sahf
cmpsb
movsl
or
insb
rcrb
andb
les
pop
lret
mov
sarb
add
lock
adc
aam
and
aaa
dec
jg
inc
fnstenv
out
ds
add
movsb
lahf
add
outsl
sti
add
lods
lea
or
jbe
jae
or
add
fdivrl
pop
mov
push
ret
out
sbb
cli
sub
inc
andl
pop
xor
inc
mov
jge
jp
or
out
sub
jg
scas
sbb
sbb
iret
xlat
push
mov
in
pushf
fiaddl
sarl
add
xor
cmp
xor
xor
roll
add
cmp
dec
dec
push
mov
std
test
stos
fildl
repnz
xchg
psubb
cmp
faddl
xor
loopne
pop
lock
jmp
lods
pushf
cmp
idiv
rorb
dec
sub
pop
sbb
ret
add
jne
pop
xchg
lock
add
decb
jle
out
movups
repz
mov
add
stc
hlt
jno
pop
movsl
arpl
cmpb
pop
push
iret
push
xchg
orb
xchg
ret
add
arpl
pop
out
mov
je
sar
leave
xchg
add
fnstsw
cmpsl
jbe
push
mov
ret
pop
jle
adc
push
jmp
push
testb
in
jle
add
cltd
xchg
push
je
or
mov
or
jl
jge
movb
ss
roll
ret
and
dec
jl
add
xor
fldl
cltd
adc
jne
iret
jmp
add
daa
inc
push
push
gs
movsl
ljmp
xorb
rcll
add
jmp
lock
sbbl
cmc
int
xor
push
icebp
sub
xchg
test
and
rcr
mov
shrb
cmpsb
xchg
sbb
xor
add
jg
add
and
mov
push
and
mov
xchg
ja
add
sbb
jo
lcall
lret
ss
in
stos
pop
jge
in
and
or
push
test
pop
mov
jno
jns
pusha
and
pop
xor
add
das
sbb
divl
mov
add
insl
sbb
adc
orb
sarl
cmp
and
jo
or
arpl
fisttps
add
mov
sahf
cmp
fcomps
xlat
fistl
aas
int
add
mov
pop
popf
rorb
mov
xor
add
call
add
sbb
insl
mov
cli
inc
sahf
jbe
push
filds
ret
mov
dec
cmc
jl
dec
repnz
rolb
and
loopne
cmp
sbb
jp
mov
adc
push
add
add
jmp
loopne
or
ja
add
sbb
loopne
fidivrs
cmpsl
iret
ja
outsl
test
rcl
add
out
insl
lds
mov
leave
add
mov
movsl
sarb
add
dec
int3
les
mov
sbbl
flds
imulb
sbb
sub
rol
add
in
dec
add
outsl
inc
add
cwtl
dec
out
cmc
mov
add
stc
mov
sbb
adc
or
add
mov
dec
push
add
enter
cmc
adc
add
xchg
dec
add
out
pop
das
xchg
pop
inc
cmpsl
jbe
or
lcall
mov
cmp
fbld
push
jno
rorl
xor
std
add
test
pop
push
xor
xor
lcall
fucomp
pusha
bound
jg
jle
push
mov
shrb
inc
insb
repz
js
jbe
notl
jno
pop
fstpt
sbb
mov
adc
jg
iret
sub
dec
mov
xor
jl
add
jo
xor
into
mov
lret
add
rorl
pusha
loopne
mov
daa
push
mov
dec
scas
mov
cltd
lret
push
push
loopne
out
lcall
dec
movsl
add
cmp
es
das
and
sub
imul
in
cmp
pop
xchg
mov
mov
sub
jmp
jp
xor
sahf
mov
xor
lcall
and
mov
xor
push
ljmp
cmp
xor
stos
add
inc
into
xchg
cmp
cltd
aas
orb
addr16
flds
adc
test
addl
data16
pop
loopne
repz
add
pop
add
jb
xchg
clc
pop
in
push
aaa
cmp
jo
lret
xchg
cwtl
add
gs
xchg
sbb
push
mov
ret
push
sbb
dec
add
cmpsb
jbe
mov
cmp
divb
push
add
in
cld
out
sbb
lret
add
cmpsb
loope
jle
add
mov
aam
into
dec
or
add
cltd
aaa
loopne
insl
add
sbb
xchg
mov
scas
add
sbb
out
sub
in
or
add
push
iret
rolb
and
notl
inc
xorl
dec
inc
add
mov
popf
cltd
pop
fsts
add
fucompp
test
sbb
mov
jnp
mov
js
js
add
inc
xor
movsl
cmp
andb
hlt
dec
add
iret
inc
sub
hlt
jns
enter
mov
insl
repz
ret
int3
mov
aam
xchg
push
shrl
cwtl
cmp
push
sarl
sbb
cmp
xchg
mov
adc
sbb
jnp
dec
add
and
jmp
pop
cmp
pop
std
mov
jno
adc
push
pop
hlt
call
test
ja
testb
and
nop
fcoml
sbb
or
scas
xor
out
push
and
or
rolb
out
faddl
pop
fidivs
mov
pop
pusha
aas
mov
scas
pusha
out
outsb
push
add
push
cmp
sub
cmpsb
sbb
pushf
dec
mov
int
leave
adc
add
nop
xor
mov
xor
out
sbb
repz
xchg
enter
add
lahf
sub
push
mov
cmp
pop
add
std
and
rolb
jae
sbb
sbb
add
add
push
out
mov
sbb
fs
mov
lock
push
enter
ja
add
mov
movsl
jbe
or
data16
lret
xchg
cmp
xchg
aam
inc
add
in
jns
loopne
pop
add
inc
sbb
jae
adc
rcrb
mov
adcb
aas
add
das
mov
repnz
rolb
pop
mov
rclb
jge
and
rclb
aam
lahf
cmp
pop
mov
xor
cmp
jbe
imul
or
int3
addl
pop
jmp
loopne
repnz
sbb
cmc
scas
cld
aad
add
loope
cmpsb
clc
lahf
fldl
mov
sbb
push
mov
xor
add
ficoms
aam
dec
push
cs
cltd
push
push
mov
xor
hlt
and
fxch
pusha
rolb
in
cmp
jae
adc
test
add
mov
xchg
add
aaa
popa
mov
jo
outsl
add
push
lea
pop
jp
cmp
mov
cmpsb
cmp
add
cs
lcall
mov
cmpb
add
xlat
push
mov
push
loopne
inc
stc
jo
dec
call
adc
cmp
daa
arpl
push
add
dec
mov
hlt
jno
call
outsl
xchg
xor
imulb
out
cmp
xlat
or
dec
dec
lret
mov
je
loop
inc
ljmp
cli
mov
pop
in
and
or
sub
dec
leave
pushf
adc
mov
aam
lret
lods
test
inc
stos
in
xor
pop
ds
inc
xchg
pop
int3
and
cmp
push
mov
fmull
mov
es
ret
test
xor
push
sbbb
pop
add
sbb
lds
and
shlb
add
mov
push
pop
outsb
add
add
dec
and
dec
inc
add
jge
and
pop
add
rcrl
jecxz
xchg
xchg
xor
push
pop
pushl
mov
into
fnstcw
add
aam
adc
cmpsb
je
add
mov
pop
adc
push
test
jg
mov
xor
pop
xchg
sbb
cmp
sub
jno
jecxz
lcall
or
lods
add
push
cmp
xchg
mov
in
add
cltd
jl
not
push
or
add
inc
pop
dec
add
outsl
in
jno
test
movl
dec
fs
add
or
add
fsub
sarb
xchg
sub
loope
jno
sbb
jb
pop
leave
mov
lods
sbb
movsl
cmp
add
cmc
add
xor
aam
movsb
test
in
lock
xchg
fdivl
dec
pusha
push
test
xor
push
out
jns
das
pushf
icebp
add
scas
pop
pop
xor
test
mov
cmp
imul
add
xor
add
out
pop
adc
mov
dec
mov
sub
and
cli
cwtl
int3
inc
push
mov
cmp
lods
push
xchg
addb
test
int
cmpsb
inc
adc
out
insl
pop
adc
int3
add
mov
mov
cmp
sbbb
push
mov
adc
pop
xchg
dec
les
add
ret
push
xor
push
push
movsl
inc
mov
push
sub
test
sbb
inc
mov
sarb
jo
mov
and
dec
jb
jp
xor
and
aaa
cs
and
scas
pop
aam
add
and
or
popl
icebp
pop
fdiv
sub
cld
int3
adc
adc
sbb
aam
dec
repnz
inc
adcl
mov
repnz
add
mov
shl
pop
mov
cmp
pop
add
sarb
push
jb
add
and
xor
push
bound
dec
clc
dec
cmp
mov
add
in
int
xor
call
xchg
mov
add
mov
push
fwait
repz
addl
xor
jp
xor
sbb
add
push
imul
xor
adc
test
in
out
cmp
call
outsl
cmp
cld
arpl
sbb
xchg
xlat
push
call
adc
push
clc
leave
xor
cmp
cmp
xchg
mov
sbb
cwtl
mov
je
pop
rcr
inc
xchg
mov
sub
push
cwtl
pop
pop
fsubs
aam
or
add
push
fildll
xor
dec
cmp
cs
mov
add
mov
cmpsl
leave
add
cmp
pusha
sub
add
cs
insb
or
aaa
and
inc
add
stc
mov
sub
and
std
enter
sub
mov
inc
dec
loop
lock
add
cmp
pusha
cmp
dec
test
mov
fisubl
adc
add
pop
sub
mov
ds
mov
push
roll
cmp
cwtl
sbb
xchg
sub
loopne
add
in
lock
js
add
adc
mov
inc
cwtl
fiadds
jnp
jno
dec
mov
insl
and
dec
mov
out
in
add
sbb
mov
ret
sbb
xchg
add
sbb
lea
and
and
fs
add
mov
shll
push
add
sbb
jae
nop
iret
jecxz
shl
add
lea
sub
mulb
cli
add
das
mov
psllw
sub
pusha
cmc
sbb
mov
sub
and
add
push
and
jo
aaa
cld
fwait
push
pop
cltd
inc
into
dec
mov
jg
and
adcl
icebp
and
jmp
sub
out
enter
lds
popa
aaa
sbb
push
adc
in
jp
neg
jle
add
mov
pop
cmc
stc
or
xor
int3
add
xor
nop
push
xlat
dec
je
aam
mov
es
and
push
mov
xlat
or
pop
cmp
test
rdmsr
add
mov
mov
mov
dec
popf
pop
fiaddl
sbb
mov
add
test
xor
gs
pop
inc
fistpll
sbb
cmpsl
faddl
xor
outsb
inc
mov
cmc
cmp
enter
scas
dec
roll
add
and
adc
adc
push
mov
test
jae
cmpsb
add
pop
dec
test
testl
mov
loope
push
mov
pop
mov
lcall
shlb
push
mov
popf
andb
mov
cs
push
add
ja
add
mov
lock
or
cld
dec
pop
fistpll
add
lret
fstpt
jno
push
loope
andb
mov
lcall
and
xor
fisttpl
inc
sub
jp
in
sbb
add
sbb
inc
add
lret
push
add
arpl
imul
add
bound
dec
jo
add
dec
push
add
and
or
int3
xor
jg
sub
pusha
outsl
inc
xor
push
adc
add
iret
jle
dec
mov
stos
bound
and
jns
jno
fcomps
mov
mov
pop
mov
xchg
cmp
add
mov
mulb
test
sahf
or
sbb
xor
pop
ret
cs
or
test
lods
inc
and
push
pop
bound
aam
mov
add
mov
sbb
cmpsb
pop
lods
ds
add
xchg
add
push
add
dec
mov
orl
dec
or
imul
mov
pop
xchg
andb
xor
jg
mov
out
adc
stc
xor
aas
pop
dec
add
push
mul
insb
sub
mov
xor
and
fiadds
mov
jno
cmp
pop
xor
jno
sbb
mov
dec
jbe
int3
add
sub
and
int3
cmp
cmp
loope
push
add
aas
pop
jl
popl
push
mov
clc
pop
aad
dec
dec
xorl
xor
xor
shll
out
dec
sub
cmp
add
mov
xor
push
es
mull
jl
adc
fistl
jbe
and
bound
and
fwait
add
pop
pusha
rolb
int3
ds
xchg
in
add
insb
inc
lds
inc
or
dec
jae
add
out
push
mov
mov
mov
jb
not
enter
xchg
imul
or
mov
or
and
and
inc
cmp
add
xorl
data16
lock
pop
int3
and
loop
jb
add
shrl
xchg
stos
jbe
inc
std
out
in
out
pop
adc
adc
sbb
or
rcrb
dec
sub
add
or
fprem
add
out
imul
jmp
test
popa
jecxz
jbe
xchg
pusha
or
and
xor
add
cltd
in
sbb
leave
mov
aas
jl
psubw
push
mov
data16
lret
int3
add
add
lds
add
or
in
xchg
rorl
mov
adc
pop
cmpb
mov
cmc
pusha
lea
sub
dec
add
mov
sahf
adc
out
pop
xor
add
push
insl
sarl
data16
int3
cmp
add
add
xor
add
mov
xchg
leave
jo
pop
add
sub
fdivs
xchg
xchg
adc
add
daa
pop
cld
inc
jmp
sbb
test
fsubl
add
xchg
fs
mov
xchg
add
int3
lret
mov
mov
jns
lahf
iret
jo
push
add
rorl
ret
add
mov
fwait
out
add
xlat
je
mov
adc
je
push
and
repz
add
mov
js
cmpb
arpl
push
inc
shrb
add
sub
or
jbe
add
out
jae
jmp
jnp
push
jecxz
sahf
mov
aaa
pop
add
js
pusha
add
ja
sub
pop
test
std
sahf
add
popf
mov
sub
push
sub
arpl
and
fs
dec
mov
inc
sbb
lcall
iret
cmpb
ljmp
ror
inc
and
js
add
aad
push
es
add
test
and
cmp
dec
pop
cmp
mov
inc
cmp
jge
mov
push
shlb
adc
cmp
and
xlat
ja
fwait
and
cmpsl
mov
push
scas
mov
add
aas
jle
pop
stc
add
xabort
and
outsl
jns
mov
add
xchg
add
sub
push
loop
jg
pop
jns
faddl
lcall
je
add
ds
or
mov
popa
jne
sub
pushf
and
je
out
dec
fisttps
mov
xor
inc
ljmp
cmp
xchg
sbb
cmpsb
fnsave
aad
mov
xor
pop
sub
lods
push
cmp
add
cltd
test
mov
mov
or
subb
xor
mov
pop
or
aaa
dec
adc
iret
es
mov
xchg
mov
imul
aad
add
xor
inc
sbb
push
jg
add
fdivrs
stos
jb
add
cld
or
add
mov
sub
imul
fnstsw
add
pop
pop
cmp
xor
sbb
insb
xlat
add
jb
xor
push
enter
imul
bound
loop
js
aas
mov
cmpb
call
out
add
rorl
mov
adc
movsl
pop
jno
rorb
add
add
sbb
pop
add
jle
mov
jne
add
mov
inc
test
mov
fcoml
add
scas
pushf
mov
out
pop
and
popf
push
aas
mov
push
mov
jnp
insb
test
mov
push
add
inc
stos
mov
fildl
xchg
fidivl
mov
inc
cmp
sbb
pop
cmp
movsl
bound
dec
dec
sbb
push
sbb
add
sub
cld
inc
xor
inc
sbb
push
dec
xchg
nop
gs
inc
clc
adc
push
lods
sbb
mov
and
and
or
adc
lods
add
outsl
fimull
in
or
add
jnp
fidivrs
jl
add
mov
rol
mov
ljmp
xchg
add
push
int3
out
fistps
inc
loopne
pop
mov
loopne
fbld
sbb
stc
add
addb
pop
cmp
hlt
pop
add
mov
add
fisttpl
shl
cli
xor
out
iret
or
push
inc
jne
mov
dec
inc
jg
cmp
sub
pop
out
loopne
jns
add
sbb
inc
or
dec
leave
add
xlat
loopne
xchg
mov
arpl
push
inc
dec
ret
dec
cmc
jbe
mov
jae,pn
int3
dec
popa
push
mov
neg
loopne
add
cmp
leave
jbe
mov
add
push
je
aaa
sub
inc
pop
xchg
stc
cmpb
inc
mov
dec
in
in
mov
add
lds
cwtl
sub
in
and
add
push
lock
pop
jo
add
test
out
mov
aad
repz
add
sbb
dec
cmp
test
push
ret
mov
sub
push
into
xor
lods
addr16
add
insb
add
mov
lcall
inc
leave
iret
test
add
mov
sbb
lds
and
call
daa
std
mov
mov
pop
mov
jmp
inc
push
frstor
sbb
xchg
mov
sub
and
add
popf
cmpl
aam
cmc
or
jl
add
clc
push
mov
or
sbb
sub
aam
push
add
andb
pop
add
or
jo
or
lock
xchg
cmp
add
adc
and
pop
mov
dec
fnstcw
insb
xor
xor
cli
inc
adc
bound
adc
sub
fbld
int
xchg
mov
dec
popa
mov
xchg
sbb
pcmpgtw
std
mov
faddl
xchg
jg
jb
dec
push
mov
pop
imul
inc
xor
push
lods
cmp
pop
in
push
add
cmpsl
adc
pop
inc
js
sub
sub
mov
fidivl
add
popf
or
mov
lock
std
rorl
pop
test
add
cmp
jge
push
pop
jp
xchg
push
pop
lret
insl
les
sbbb
incb
mov
mov
xchg
mov
lret
cmpsb
sbb
add
jl
fstl
xchg
push
inc
xor
mov
fdivr
cmp
mov
add
in
popa
movsb
dec
jmp
or
mov
shlb
mov
and
xorl
arpl
xor
mov
lods
in
push
ficoms
loopne
rcl
cmp
scas
cltd
cmpsl
xchg
sub
call
out
cli
dec
incb
xor
das
int3
add
repnz
insb
rorb
outsl
add
sub
xchg
sub
lahf
pop
pop
inc
mov
xchg
xlat
repnz
dec
inc
imul
sti
adc
jo
aad
xchg
lret
add
jae
xchg
cmp
stc
xchg
adc
inc
xor
popf
add
inc
dec
ret
and
data16
pop
orb
pop
insb
push
add
push
adc
jl
and
aaa
add
mov
xchg
sbb
in
push
stos
xchg
leave
mov
in
not
add
or
loopne
movb
push
adc
and
lea
mov
repnz
sti
roll
iret
sahf
out
mov
sbb
and
je
cld
mov
add
fdivl
jno
pop
inc
mov
ret
push
dec
sbb
stos
add
lret
sbb
add
mov
pop
add
inc
aad
fs
or
movsl
mov
mov
add
cmp
sbb
faddl
jbe
jg
pusha
pop
xchg
outsb
add
xor
add
mov
insb
xor
add
sub
mov
imul
mov
mov
into
andb
add
lea
xchg
int
insb
pop
sbb
mov
cmp
mov
outsl
dec
jge
and
iret
imulb
daa
pop
repz
call
push
add
sbb
add
xlat
loope
cmp
add
cmpsl
sub
sub
cs
repz
out
std
rcrb
add
push
rorb
mov
ss
sub
mov
addb
setnp
shlb
cmp
imul
aad
add
mov
inc
add
out
sbb
add
mov
cmpsl
push
insb
daa
sub
mov
nop
add
jno
cwtl
call
mov
xchg
sbb
lods
push
fcmovne
jmp
scas
icebp
test
popl
xchg
dec
mov
call
jae
add
bnd
scas
repz
cmp
pop
in
fs
xchg
pop
xsha256
cmpsb
push
inc
jbe
shrl
inc
fisubrl
push
or
add
add
pop
lods
push
jo
dec
xor
js
add
jbe
insb
add
mov
cmp
je
adc
mov
or
pop
ja
subb
popf
aad
xchg
dec
mov
cmp
insl
add
je
jmp
dec
sub
fimuls
add
lret
and
xlat
mov
out
lahf
or
jge
xchg
jno
je
dec
adc
in
aam
add
jle
jecxz
mov
adc
and
mov
rcl
mov
add
fistpll
std
push
mov
jp
call
xorb
xchg
add
dec
aas
cld
add
xchg
loop
pusha
test
in
or
sub
add
mov
adcl
lods
add
icebp
mov
inc
or
cmp
sahf
pop
inc
push
add
xor
shrl
inc
aas
mov
add
mov
js
daa
jecxz
je
add
dec
jle
inc
xor
dec
add
fcom
adc
cmp
cltd
in
pusha
arpl
aaa
add
jle
mov
and
sub
in
popf
mov
loopne
lcall
test
xchg
lret
hlt
insl
mov
add
mov
sbb
andb
std
cmp
rclb
jl
add
popa
sbb
scas
addr16
jb
fdivp
add
call
stos
add
loop
dec
je
loope
pminub
push
fildll
pop
cmp
lcall
in
shrb
cmc
mov
imul
add
in
push
push
cli
movb
les
or
pop
xor
jle
pop
and
lods
fcmovb
inc
aas
pusha
mov
rorl
mov
push
repnz
cmp
imul
cmp
mov
roll
pusha
inc
loope
jne
out
mov
push
aam
scas
fiadds
xor
shll
add
gs
mov
jg
xchg
and
cwtl
push
cmp
out
add
xor
mov
cmp
push
mov
xchg
add
jl
add
test
mov
and
mov
jle
add
nop
insl
jno
push
clc
aam
xchg
lcall
iret
add
icebp
dec
hlt
add
add
rcrb
add
mov
popa
jge
xchg
and
imul
int
popf
es
fisubl
rolb
adc
xor
cmp
xchg
inc
testl
pop
dec
outsl
inc
bound
imul
dec
into
aas
pusha
scas
subl
cmpsb
sbb
data16
cld
or
je
inc
cmp
popf
imul
popa
xlat
jp
pop
add
addr16
adc
mov
jae
mov
xchg
sbb
ja
scas
cmp
and
add
cmp
add
add
jg
xchg
add
cmp
add
cmp
inc
lock
jae
jp
les
pop
pop
jns
mov
scas
add
xlat
mov
fldl
stos
ror
icebp
loop
inc
lret
sbb
dec
incb
add
cmc
or
imul
ljmp
cmp
mov
sub
inc
push
mov
daa
xchg
add
xchg
push
gs
in
add
lret
add
jmp
addr16
ficoms
mov
add
add
lds
sbb
mov
adc
dec
add
imul
push
inc
dec
aam
roll
ja
xchg
loop
inc
mov
xchg
mov
dec
sub
adc
bound
add
push
sahf
aam
or
dec
xchg
and
sbb
inc
inc
popl
jmp
xlat
cmp
jbe
scas
xchg
in
inc
add
or
add
push
orl
or
inc
or
imul
es
jb,pn
push
ds
add
jnp
jle
add
jp
lock
add
jnp
ja
daa
add
cmpsl
rcl
stos
xor
test
fadds
jae
or
push
add
vhsubps
mov
inc
lret
xchg
add
jns
int3
rolb
mull
xchg
pop
mov
pusha
jp
rcl
mov
sub
pop
out
or
loop
jg
repz
add
out
pop
sarl
dec
es
call
push
add
dec
cs
jae
and
repnz
add
dec
dec
pop
rcl
hlt
adc
pop
rcrl
lret
push
dec
jnp
add
inc
adc
add
mov
lods
mov
add
add
lret
add
ret
cmp
sbb
add
mov
xor
xchg
inc
cmp
add
jns
fcmovbe
add
mov
jge
pop
or
dec
pusha
repz
cmp
je
or
test
push
add
push
xchg
dec
add
add
mov
xchg
adc
loopne
dec
pop
cli
pop
cmpsl
scas
add
aas
add
jno
fadds
gs
repnz
mov
ja
mov
cmc
scas
mov
loopne
xor
cwtl
adc
xor
xor
and
sub
add
sbb
jl
or
pop
outsl
xchg
xor
inc
add
mov
out
adcl
push
int
jae
xor
or
arpl
add
push
call
xchg
es
inc
pop
jmp
fwait
out
add
addl
inc
pushf
test
xchg
aad
outsb
arpl
add
sbb
shl
lock
add
lea
insb
or
add
jg
mov
push
cmc
or
orb
push
jle
push
ss
fs
inc
ret
rcrb
pusha
repz
inc
mov
push
push
inc
in
cmp
in
add
stc
mov
add
jmp
icebp
jo
jo
icebp
jl
add
pop
fimuls
int
add
add
or
cs
arpl
xor
shl
and
add
lods
adc
loopne
inc
pop
cmp
rolb
jb
inc
daa
mov
sub
add
int3
fmul
inc
insb
add
cmp
call
cmp
sub
sbb
fdivs
fnsave
add
lea
jmp
les
rolb
pop
mov
orb
dec
or
movb
in
lret
jl
popa
jno
lock
insl
dec
mov
aam
setnp
loopne
dec
mov
add
sub
in
or
ret
add
xor
js
pop
and
mov
pop
sbb
mov
cwtl
in
add
lods
cmpsl
sub
rcrb
cli
mov
mov
push
add
xor
pushf
sub
sbb
push
or
nop
cmp
aaa
push
mov
or
lock
imul
jo
jmp
imul
pop
lret
push
ds
int3
nop
xor
lods
mov
cmp
mov
jge
or
repz
cmp
lods
add
in
in
clc
gs
imul
jge
pop
aad
or
js
sub
test
je
jl
add
popa
cmp
jg
mov
mov
movsb
fadds
adc
mov
xchg
add
es
or
add
mov
jl
add
lret
pop
hlt
add
pop
push
mov
sub
jg
bnd
push
or
mov
pop
cmpsb
xchg
and
xlat
aas
jo
sub
popf
or
add
clc
pushf
arpl
dec
add
aas
pop
popf
mov
adc
jle
add
repz
rclb
xorl
sub
or
mov
push
dec
mov
mov
mov
shrb
rcl
sbb
push
hlt
fidivs
add
xchg
push
int3
push
pop
cmp
enter
cli
or
lcall
stos
jecxz
add
pop
out
push
aad
fadd
mov
mov
out
movsb
mov
fcompl
push
add
hlt
inc
loopne
mov
push
mov
sbb
in
enter
add
dec
ljmp
xchg
and
push
rcrb
jo
cmp
inc
xor
add
xorl
jo
out
jae
pop
mov
push
bound
xor
hlt
fstpl
imul
add
adc
imulb
outsb
mov
rcrb
adc
mov
bound
cmc
pop
loop
pusha
ret
add
out
dec
sub
loopne
sbb
sbb
sbb
sub
lods
mov
int3
sahf
xor
push
and
mov
add
clc
pop
popa
repz
sub
dec
add
push
scas
lcall
inc
in
pop
out
add
cwtl
ljmp
adc
mov
add
sbbb
pop
call
dec
jbe
repnz
adc
test
xor
mov
in
pop
pop
adc
in
add
insl
rcrl
mov
clc
cmp
rolb
movsb
mov
add
push
or
ret
xchg
or
imul
insb
jge
les
dec
cmp
stos
sahf
xchg
iret
ror
pop
aad
out
dec
add
adc
and
add
xchg
sub
add
inc
sub
jg
add
ficompl
adc
shll
or
ret
ljmp
and
inc
sahf
lret
add
scas
jge
push
dec
push
movlps
xchg
sahf
adc
add
cmpb
cmp
jl
es
or
test
insl
mov
fucomp
call
clc
or
add
mov
test
iret
mov
pop
nop
insb
repz
js
push
enter
jl
mov
addl
cmp
and
mov
add
adc
adc
push
and
flds
dec
fildll
jle
lret
clc
jns
iret
sbb
rclb
cmpl
add
mov
stos
ljmp
stos
imul
pop
add
or
ret
les
rolb
jnp
and
or
sbb
in
jecxz
cmp
jge
clc
cmp
adc
add
mov
pop
add
and
out
add
mov
add
push
popf
add
push
insl
movl
pop
adc
dec
add
cwtl
imul
sbb
mov
adc
mov
out
inc
or
adcb
mov
fcoms
mov
repz
fcomip
pushf
clc
mov
nop
cmpsl
call
jne
push
cmp
inc
fadds
lret
jo
add
push
das
xor
jp
cwtl
cmp
stos
insb
pop
mov
movsb
cltd
pop
cmpb
pop
add
xchg
add
sti
insb
add
mov
rcrl
sub
jbe
ljmp
dec
add
movsb
int3
cmpsl
mov
xchg
add
std
jno
jb
clc
add
je
cld
mov
add
in
wrmsr
js
cmp
push
jns
jl
inc
xchg
movsl
lds
mov
in
cmp
into
andb
fdiv
pusha
add
sub
add
mov
add
cmp
mov
out
mov
das
std
test
shrl
cmpsb
shll
dec
aam
inc
iret
pop
aas
jne
adc
imul
xlat
push
call
cmpsl
mov
setnp
cmp
adc
add
bound
adc
dec
popf
lods
pop
clc
rorl
and
mov
push
inc
andb
push
pushl
inc
mov
lock
and
call
add
aam
push
dec
sahf
inc
fnstsw
push
movsb
adc
incb
decl
jns
push
xchg
mov
cmpsl
add
and
adc
pop
inc
jno
cwtl
das
pushf
mov
dec
jle
jmp
add
or
addb
sbb
mov
pop
pop
cmp
and
add
loop
mov
mov
mov
movntps
cmp
je
bswap
mov
pop
push
insl
das
mov
or
xor
js
int
stos
push
xchg
or
sub
mov
sub
add
mov
add
sub
xor
cmp
outsl
mov
mov
cmpsl
daa
std
loopne
scas
dec
popw
loopne
add
pop
adc
inc
adcb
inc
add
sub
lret
inc
enter
mov
je
push
mov
aad
mov
dec
xor
or
pusha
outsb
adc
adc
es
cli
sub
lahf
shll
imul
cmp
add
hlt
add
aas
incb
push
lret
cmp
ds
out
add
push
cmpsl
mov
push
and
clc
faddl
sbb
das
dec
std
mov
dec
pop
movsb
lcall
pusha
lods
lar
arpl
add
fdivrl
jle
shlb
jnp
inc
stos
jl
ljmp
dec
in
lods
xchg
cmpl
movsl
cmp
mov
jae
inc
push
mov
or
bound
push
inc
and
pop
ljmp
into
add
adc
aaa
add
flds
push
mov
rolb
hlt
xchg
xchg
push
push
jp
add
test
add
inc
in
ljmpw
fildl
lret
jns
push
pop
adc
add
and
stos
jg
dec
js
adcb
ffreep
pop
mov
rorb
xor
add
test
sbb
negb
cwtl
into
jae
pusha
mov
or
lock
add
add
popf
pushf
and
or
sbb
jp
std
push
jl
push
add
cwtl
loope
add
pop
pop
xlat
dec
dec
add
mov
mov
jg
sahf
or
pop
push
in
clc
out
pop
nop
movsl
mov
mov
enter
add
loope
popa
pop
xchg
mov
sub
mov
and
xor
jle
dec
inc
jns
sbb
adc
leave
pop
fs
sbb
adcb
aam
dec
inc
ljmp
add
ret
pop
aam
add
dec
into
mov
clc
dec
push
cmp
pop
and
xor
push
sbb
jbe
jmp
cmp
pusha
stos
add
jnp
dec
sarb
ja
cmpsl
cmp
push
filds
into
sarl
jo
push
stos
sbb
push
jle
add
call
sbbb
icebp
mov
or
push
int3
into
das
xchg
pusha
jne
test
out
add
or
push
push
push
sbb
incl
or
popf
loope
adc
mov
add
cmp
loopne
inc
mov
and
xchg
dec
loop
add
or
mov
lock
inc
mov
dec
pinsrw
xchg
cmp
stc
inc
or
int3
pop
add
jnp
dec
aam
add
enter
mov
push
xchg
sar
ret
xor
jnp
outsb
fsubrs
dec
push
cld
pop
roll
jno
cmp
sbb
add
mov
jmp
and
test
xor
rcrb
mov
xor
ret
mov
lods
fcompl
push
and
inc
ss
xchg
add
lahf
adc
dec
or
add
jmp
mov
insl
aad
add
push
int3
sbbb
shlb
add
pop
scas
cld
add
orl
fldt
inc
addb
and
ret
mov
movsb
das
jecxz
aaa
shrb
xorl
movl
dec
cmpsb
push
xchg
jecxz
adc
fsub
mov
cmp
out
clc
das
jle
and
shll
adc
enter
jo
fiaddl
cmpsb
xchg
fs
push
mov
xlat
pop
hlt
push
into
cltd
jb
jnp
sub
clc
sbb
inc
lods
shl
mov
dec
jae
add
les
cmp
jge
inc
testb
dec
cltd
es
ds
fstps
mov
add
add
in
xor
adc
aas
lret
ljmp
add
lahf
fsts
cmovnp
add
xchg
push
lret
hlt
fwait
lret
les
push
xchg
fisubrs
cs
movsb
add
inc
sysexit
daa
add
frstor
cmp
ds
leave
xchg
mov
jmp
cmp
pushf
fdivl
pusha
call
cli
add
jno
mov
hlt
or
mov
jbe
cmpsb
lods
add
inc
xchg
sbb
aas
insl
rol
adc
push
fisubl
sbb
nop
cmp
sbb
xchg
add
xor
js
add
sbb
out
xchg
inc
pop
ret
sbb
subb
add
dec
dec
in
add
pop
call
push
pop
mov
cmp
jo
or
mov
sbb
fmuls
mov
xchg
in
dec
pop
and
add
pushf
sahf
pop
push
mov
xor
or
jb
aam
or
xor
bound
inc
sahf
jmp
add
xorb
ss
in
jae
mov
fcomps
xor
icebp
out
adc
lods
add
std
mov
call
mov
add
jl,pt
cmp
add
sbb
xchg
ds
pop
pop
divb
test
addb
add
data16
jmp
or
mov
and
mov
push
sbb
xchg
sub
add
adcb
imul
loop
or
pop
js
inc
lahf
jg
aaa
mov
testb
add
mov
out
add
iret
and
repz
jne
insb
sbb
hlt
add
je
push
add
scas
sahf
cmp
loopne
ds
mov
dec
push
lock
out
add
mov
adc
rcrb
subb
push
lcall
outsb
add
adcl
aaa
cmp
out
stc
pop
jmp
push
pop
shrl
jae
clc
adcb
cmp
mov
nop
test
pop
iret
ret
jnp
fstl
dec
pusha
jmp
inc
cvttps2pi
jle
xchg
adc
add
push
fwait
mov
ja
add
push
jp
std
mov
add
divl
mov
int
jo
or
lock
mov
faddl
and
test
xchg
or
idivb
mov
dec
aas
popf
hlt
cwtl
dec
cmpl
mov
int
in
add
rcrl
mov
fidivrl
or
ljmp
hlt
insb
sahf
add
add
push
xchg
aaa
jo
scas
pop
test
int
xor
jnp
iret
fadd
movsb
cmp
mov
lock
push
jnp
ret
psrld
cmpsl
xor
mov
push
xchg
pushf
into
lock
lea
loopne
xchg
xor
xor
lods
or
pop
sbb
push
nop
mov
les
push
add
cld
pop
mov
clc
fisttps
loop
mov
add
outsl
sub
lds
push
dec
push
popa
jns
inc
bound
mov
fdiv
pushf
cmp
add
stos
pop
lcall
cmp
jae
pop
mov
hlt
cli
mov
clc
adc
add
loopne
lahf
add
jl
xchg
inc
repz
sti
xchg
and
or
mov
aad
sbb
push
add
jg
xorl
lret
bound
pop
pop
jne,pn
jle
ja
mov
jg
add
sbb
gs
add
or
add
imul
icebp
loope
int
inc
add
or
lods
cmp
pop
btc
jle
cmp
mov
push
mov
or
xor
in
repz
sub
inc
lods
mov
adc
add
xor
add
or
dec
push
data16
loopne
jp
loop
add
or
clc
pop
add
andb
test
stc
mov
test
leave
xchg
and
mov
mov
cld
pop
xor
cmc
cmpsl
adc
add
int
mov
incb
les
sbb
shll
loopne
je
add
jo
jle
out
add
stos
mov
ljmp
insb
sbbb
pusha
mov
pop
xorb
loopne
sub
inc
sub
pushf
add
icebp
ret
aad
add
mov
push
add
das
cwtl
xchg
shl
xchg
ds
hlt
lcall
jmp
mov
inc
push
out
xchg
inc
in
mov
outsb
pop
in
das
mov
aas
ror
lahf
sbb
sub
and
push
add
sub
mov
adc
jne
pop
push
xchg
mov
or
fs
scas
rorl
mov
jb
sbb
mov
insl
std
jbe
add
pushf
lds
in
ds
nop
sti
nop
out
push
cmp
mov
jae
int3
add
push
mov
add
iret
rol
cmp
rorb
xor
push
hlt
sbb
lahf
dec
test
add
rclb
add
jecxz
mov
mov
sbb
in
cmp
add
sbb
loopne
add
and
add
stos
pop
arpl
push
push
test
mov
sti
add
jb
jecxz
nop
mov
mov
clc
cmc
ret
add
xchg
icebp
cwtl
adc
inc
sti
add
subb
xchg
jecxz
cmp
loope
les
push
cmp
cmp
sub
cmp
inc
and
pop
add
cmpb
lock
lods
inc
jb
faddl
jg
mov
pop
mov
mov
mov
sahf
cmpsb
call
cli
shrl
sbb
add
into
push
hlt
mov
xchg
jg
xchg
mov
lds
jmp
addl
dec
or
add
ss
add
push
hlt
push
cmpsl
add
aaa
jl
mov
shlb
les
divb
mov
icebp
add
mov
dec
sbb
add
pop
clc
out
mov
pop
loope
jecxz
aas
jl
add
mov
and
sbb
lahf
sub
subb
cld
int
jns
jmp
stos
jl
jb
add
jle
idivl
repnz
push
call
and
cmp
xchg
popf
ficomps
pop
or
cwtl
jl
ret
add
sub
jns
cmpsl
mov
mov
push
cmp
or
mov
test
outsl
push
jle
sarl
push
popa
mov
orb
and
movsb
add
xor
imul
pushf
pop
roll
jne
jns
mov
lods
add
dec
pop
lret
cmp
add
xor
lahf
jne
push
jae
add
sub
inc
pusha
sub
int
xor
xor
sub
fcoml
testl
hlt
jbe
inc
mov
add
cli
ret
push
add
test
mov
fld
mov
jno
sti
push
adc
loopne
lea
in
jl
divl
cmp
rorb
fisttpll
add
sahf
or
xchg
js
and
jge
pop
and
add
add
cwtl
pop
add
popf
mov
add
test
enter
add
jle
adcb
and
lds
scas
cmp
test
ja
push
cmp
movl
aam
mov
dec
mov
rolb
hlt
addr16
out
jno
enter
ljmp
cwtl
shlb
or
mov
mov
je
jo
or
pop
jne
push
mov
hlt
ja
cmp
imul
std
mov
loope
shlb
pop
psubsw
cltd
mov
or
mov
lcall
jmp
or
add
mov
mov
jle
push
xchg
addb
mov
popa
or
lret
js
jb
add
imul
shr
lds
fstl
shrb
add
adc
pushf
push
xchg
mov
inc
ret
movsl
add
pop
insb
add
int
or
out
add
inc
mov
pop
bound
aad
rorl
cwtl
inc
add
roll
sub
fbstp
or
hlt
mov
rcrl
sbb
mov
xor
lahf
and
add
mov
jp
mov
sbb
pushf
shrb
orb
push
inc
ss
cmp
aas
xchg
add
jno
fidivl
js
cmp
lret
push
push
jo
push
and
in
idiv
xor
add
push
in
cmp
xchg
mov
into
add
popa
fdivs
dec
mov
lret
pusha
pop
and
add
into
and
inc
xchg
inc
cmp
jae
sbb
mov
pop
lcall
lods
shlb
outsb
shr
cmp
repz
add
push
pop
mov
inc
or
add
mov
pop
movaps
push
and
out
adc
jl
imul
or
sbb
adcb
jno
mov
and
mov
iret
mov
decb
push
inc
andl
add
mov
fstp
sub
add
or
imul
lret
cmp
pop
es
pop
fisttps
xchg
lock
lret
inc
mov
orl
jg
jb
or
out
loopne
mov
cmpb
add
in
in
xor
mov
xor
stc
test
xchg
shlb
jae,pt
cld
mov
out
sub
enter
and
in
hlt
pop
repnz
pusha
pop
push
aas
ret
add
cmp
jbe
and
push
push
aas
adc
popf
pop
pushf
jg
add
movsl
cmc
xchg
add
or
mov
lret
add
jbe
movsb
sbb
pop
jl
mov
pop
xchg
test
cmpsb
mov
adc
lock
add
mov
add
inc
and
push
jle
sbb
pop
add
loopne
and
sub
pop
fcom
jmp
sbb
pop
xchg
mov
jne
and
add
fisubrl
and
and
mov
pushf
pop
sbbb
xchg
pushf
push
inc
das
push
ret
sbb
pop
push
adc
mov
addb
cmpsb
mov
dec
add
das
stos
cmpsl
in
or
jl
movsl
xor
adc
rcrb
sbb
shlb
imul
push
add
dec
inc
jmp
sbbb
and
test
stc
insb
dec
adc
jl
mov
push
add
mov
xchg
mov
int3
jge
movsb
jo
cmp
mov
adc
aad
les
pop
add
addr16
adc
xor
ds
icebp
jp
test
aas
mov
and
pop
lret
push
out
xor
daa
pop
fwait
add
inc
repnz
jg
test
pop
insb
mov
ss
inc
popa
cli
gs
xor
andb
add
scas
stos
mov
rsqrtps
pop
push
sub
movsl
inc
lds
out
pop
pushf
push
pop
xchg
sbb
daa
fadd
jne
add
insb
cwtl
cmc
jae
jbe
add
and
sahf
je
add
movsb
repnz
pop
mov
jge
fsubr
rolb
or
adc
cmpb
and
jbe
test
sub
sbb
ret
stos
add
in
sbb
repz
pop
sub
mov
popa
mov
cld
pop
add
jge
bound
xchg
enter
aas
pop
jle
testl
cmc
or
dec
ret
outsl
jne
repnz
addr16
hlt
xchg
add
int
add
mov
cltd
sarl
loopne
stos
add
mov
iret
add
sbb
mov
stc
fisttps
fnstcw
aam
add
aaa
pop
sub
mov
push
lods
and
sti
lahf
and
mov
and
adc
xchg
out
adc
add
subl
or
add
fdivrs
and
jbe
pop
sar
fidivrs
and
int3
clc
lret
fwait
sub
adc
mov
fs
scas
mov
repnz
pop
call
int
adc
rcr
mov
xchg
fisttps
popa
enter
fiadds
mov
imul
push
decb
add
minps
mov
pop
add
and
in
fxch
leave
mov
and
pop
nop
imull
out
lock
jno
and
mov
orl
lds
xorl
adc
mov
jne
sub
xor
in
inc
cwtl
xchg
inc
arpl
add
jg
lods
dec
test
loopne
pop
ret
sub
cmc
std
mov
adcb
push
push
push
ds
adc
xor
and
addr16
pop
and
sahf
adc
in
add
xchg
xlat
and
loopne
mov
cmp
iret
test
cmp
pop
add
loope
mov
jge
pop
insb
bound
push
cmp
cmp
add
leave
sub
aaa
dec
test
repz
push
int3
jecxz
xor
inc
aad
pop
out
add
test
std
mov
popf
movsl
int
add
dec
sti
cwtl
and
xor
mov
mov
jecxz
add
and
fimuls
pushf
mov
mov
or
push
stc
mov
outsl
lods
jg
ds
arpl
jno
sar
jb
mov
or
sti
lock
push
dec
repnz
cwtl
sub
adc
add
or
lods
add
jno
push
adc
ret
push
fisubs
xchg
ljmp
add
pop
xchg
xchg
andl
iret
sbb
lcall
push
insl
jo
into
popa
fidivl
xchg
jbe
or
dec
call
pusha
test
mov
dec
nop
movsl
push
add
pusha
imul
cmp
xor
insl
cltd
dec
add
jp
sbb
sub
pop
jmp
add
push
ljmp
mov
test
adc
mov
adc
out
push
xchg
pusha
cmp
les
adc
lret
pop
adc
les
mov
mov
mov
push
jnp
xor
das
pop
mov
and
cmp
pop
xchg
xor
push
notl
test
mov
adc
cmp
jns
scas
loopne
ja
test
xchg
add
js
mov
call
in
popf
sbb
jge
rcrb
dec
cwtl
out
jl
sbb
mov
andb
mov
mov
or
dec
mov
popf
orb
adc
jbe
movsb
sbb
sbb
popa
inc
mov
xchg
adc
push
ret
push
loopne
sti
push
sarb
faddl
add
cli
in
jg
add
js
mov
rcrb
lods
mov
push
cltd
adc
cwtl
xchg
mov
push
inc
dec
pop
stc
pop
or
mov
mov
push
shlb
shll
ret
test
or
xchg
adc
and
mov
push
sbb
add
test
and
ficompl
inc
icebp
aad
push
int
std
enter
jo
add
out
outsb
ljmp
sub
xorb
dec
mov
negl
push
mov
pusha
cld
stc
add
and
dec
testb
add
sbb
out
pop
push
fidivl
xor
fstps
adc
add
push
sti
aaa
add
or
cmp
outsl
sbb
add
cld
xor
les
mov
push
push
inc
nop
jne
jge
test
test
add
mov
add
mov
ss
jae
xor
xchg
or
sub
inc
add
in
cmp
xchg
mov
add
pop
mov
faddl
popf
ljmp
add
sti
xchg
arpl
add
add
into
int3
shlb
cmp
and
and
pop
andb
bswap
lods
pop
arpl
into
inc
mov
ret
mov
cmp
and
test
outsl
jno
lret
mov
lock
pop
mov
adc
dec
sbb
push
fwait
cmp
sbb
and
dec
movsl
ud0
jnp
cmp
je
add
add
jmp
or
lock
mov
std
out
lret
mov
inc
nop
sub
fs
fimull
inc
jns
add
and
and
jnp
add
fs
add
out
lret
add
xchg
sbb
add
mov
hlt
fistps
dec
mov
sub
sub
test
push
xor
and
inc
negl
xchg
dec
icebp
pushf
aaa
lea
loope
rol
sahf
cmp
inc
sbb
ljmp
int
in
add
push
cwtl
mov
icebp
add
dec
pop
push
add
in
mov
cmp
adc
or
adc
pushf
incb
sbb
enter
scas
popa
lock
pop
data16
mov
aad
add
leave
mov
scas
mov
or
mov
imul
outsl
ja
adc
xchg
mov
xorl
xor
stos
pop
dec
lahf
sbb
jle
adc
arpl
and
dec
push
jo
xor
mov
inc
push
stos
arpl
push
or
add
cmp
pop
fdivp
xor
lods
push
or
mov
leave
sbb
adc
pop
ret
mov
sub
xchg
cmp
push
pop
js
xor
les
mov
hlt
pop
push
and
inc
mov
adc
frstor
mov
mov
add
adc
test
cmp
sbb
ret
or
mov
cli
enter
ret
pop
add
imul
xor
inc
repz
outsb
mov
fmull
jo
pushf
cli
or
mov
mov
mov
and
pushf
out
adc
cmpsl
and
add
inc
idivl
lret
sub
fmuls
push
pop
andl
xlat
mov
pop
add
dec
fisubs
jmp
xor
or
adcl
movl
add
cltd
jbe
pop
xor
repnz
add
test
daa
xchg
dec
mov
mov
jle
out
push
pop
fnstenv
ret
dec
je
addb
xchg
stc
ds
mov
lock
test
insb
lods
add
mov
mov
add
and
inc
push
movsb
pop
add
loope
icebp
mov
js
lahf
add
jg
dec
mov
aas
or
ja
add
xchg
inc
andb
dec
in
add
fistps
pushf
xor
push
mov
inc
sub
shll
pop
cmp
jbe
sub
inc
sarb
cmc
inc
mov
cmp
add
or
push
dec
sti
sub
dec
test
add
hlt
mulb
xor
add
fcoml
lcall
push
insb
cltd
adc
add
jle
test
rorl
stos
mov
mov
setl
xchg
popf
dec
mov
rclb
add
push
mov
push
data16
pop
xchg
in
inc
fldl
sub
adc
sbbl
dec
cmp
mov
push
push
fiadds
inc
sub
rcrb
mov
int3
sbb
cmpsb
or
jecxz
scas
int3
add
inc
and
mov
dec
pusha
jnp
in
xchg
add
shll
jge
xchg
es
mov
inc
xor
mov
xorb
push
add
and
testb
jno
out
ja
cmp
fsub
fisttpll
push
sbb
or
dec
aam
jl
jp
clc
aas
dec
flds
fs
sti
ret
cmpsl
rcrb
inc
and
mov
shrl
add
push
insb
cmp
add
fistl
mov
sti
fstpl
sub
jl
xchg
sbb
ret
loopne
add
mov
push
jle
pop
xchg
add
test
mov
rol
push
add
aad
aaa
add
rorb
dec
shlb
and
mov
add
jmp
out
out
push
inc
add
in
pushf
adc
lock
push
int
mov
cli
push
adc
pop
pop
sbb
cmp
sub
jecxz
cmp
add
mov
out
cmpsb
imul
adc
outsl
in
add
or
out
push
hlt
outsb
out
add
cmc
jle
dec
push
adcb
mov
dec
push
mov
ja
pop
leave
inc
xor
push
add
jecxz
test
dec
loopne
or
and
xor
sbb
lret
test
fadd
jbe
in
iret
fs
je
lret
adc
mov
ds
mov
into
add
push
movsb
add
pop
inc
mov
mov
in
out
adc
dec
and
fldenv
add
arpl
ja
push
loopne
mov
pop
cltd
mov
mov
stc
mov
aas
mov
push
das
loope
add
int
xor
aas
data16
movl
lret
fiaddl
fwait
mov
mov
lods
insb
cmp
ret
add
or
pusha
sub
add
jmp
and
enter
sbb
mov
test
add
imul
aaa
testb
sbb
lahf
xor
fiadds
jle
loop
mov
add
fwait
into
add
mov
dec
fs
xchg
pop
jle
add
mov
clc
loopne
daa
insb
add
lahf
mov
bound
int3
push
pop
add
pop
call
loope
clc
lret
cmp
add
andl
mov
jecxz
push
add
arpl
mov
xchg
add
sbb
stos
cltd
pop
xor
pop
dec
cmc
add
sbb
pop
add
ljmp
mov
mov
sbb
divb
lahf
xor
push
jb
or
jne
add
cwtl
rcrl
shll
and
dec
add
dec
es
jp
sub
sbb
js,pt
add
mov
cmp
push
lds
pushf
aam
pop
mov
push
add
outsb
inc
mov
add
mov
decl
loop
prefetch
mov
mov
add
pop
xchg
mov
cmp
sbb
sub
pusha
pop
xchg
add
cli
jae
ljmp
fwait
xor
dec
sbbb
out
pop
popf
mov
fcomps
mov
mov
add
loope
push
sbb
ss
out
enter
mov
inc
lock
jnp
je
fisttpll
and
cmp
jmp
lahf
test
add
sbb
popa
push
mov
sbb
hlt
adcb
mov
outsb
dec
popa
inc
mov
ret
or
sbb
incb
adc
add
or
std
or
adc
ja
or
cmp
lret
inc
cli
ljmp
outsl
xchg
adc
sbb
push
xchg
subl
movsb
pop
mov
xchg
je
aaa
mov
add
jbe
add
inc
hlt
mov
ljmp
test
and
aas
sti
adc
dec
add
mov
pop
add
jno
inc
dec
aam
xor
out
cwtl
ficoms
adc
add
jns
and
sbb
test
add
test
push
fildll
ret
push
dec
push
xchg
and
add
imul
cmpb
add
push
outsb
repnz
cmc
and
xchg
sbb
sbb
int3
xor
or
pop
xlat
dec
sahf
orb
xor
mov
mov
cmpsb
add
jle
popf
pop
push
jne
lock
incl
xor
add
in
repz
and
push
test
dec
out
add
xchg
or
inc
out
add
int3
rcr
and
mov
mov
lock
aas
inc
in
call
add
ljmp
mov
push
push
dec
cmpsl
pop
xor
aad
sbb
insb
lret
add
fs
cmc
or
mov
lds
enter
and
add
je
bound
pop
xchg
jg
mov
add
hlt
mov
sbb
mov
mov
pop
int
add
inc
rol
cs
add
cmp
dec
fldt
jg
add
add
push
add
jl
sub
cmp
scas
xor
subl
insl
lock
add
divb
jbe
popf
add
int
xor
jmp
sbb
mov
and
rcl
lea
mov
jae
add
fldl
dec
das
sbb
adcl
sub
aam
int3
cs
add
cmp
cmp
pop
out
lds
movsb
inc
out
and
fistpll
aaa
int3
enter
outsb
insb
and
in
add
add
repnz
add
cmpsb
sub
add
sti
lahf
adc
inc
adc
mov
mov
add
ljmp
fsubr
loopne
adc
mov
push
addr16
adc
andb
mov
add
jo
sbb
xor
in
sbb
push
dec
add
xor
clc
hlt
add
insb
insl
sub
negl
mov
or
push
loope
sub
mov
sub
jb
pop
js
jnp
in
dec
scas
xchg
in
cmc
mov
pop
in
divb
sar
push
xchg
stc
add
jg
movsb
xchg
rorb
inc
mov
test
pusha
mov
fldcw
add
shl
bound
movsb
add
cli
outsl
push
rorb
das
add
mov
or
add
mov
jle
xor
pop
clc
js
bound
mov
imul
call
xor
repz
xchg
lods
add
sbb
aam
ret
push
cmp
or
lods
ds
add
mov
push
lret
andl
pushf
push
xchg
ror
les
mov
addl
jl
sbb
sbb
dec
sbb
mov
sti
cmp
nop
adc
dec
loope
gs
je
add
stos
in
dec
std
aas
mov
cs
xchg
in
add
mov
outsl
add
pop
mov
lahf
fwait
popf
cmp
pop
cli
and
in
andb
xor
add
mov
pop
out
or
xchg
add
shl
sbb
iret
call
mov
pop
lret
push
inc
push
mov
push
mov
sub
add
sub
icebp
cld
push
imul
xor
fbstp
push
sbb
xor
cld
add
and
fiadds
jns,pn
add
cmp
bound
outsb
add
lcall
addr16
push
stos
mov
data16
mov
mov
ja
push
push
cmpsl
inc
sahf
pop
adc
push
mov
jle
iret
rolb
das
call
insl
lcall
jbe
ret
leave
dec
jmp
popf
fdivrs
push
xor
loope
addl
mov
mov
jl
mov
add
loopne
push
into
push
push
add
out
aas
and
incb
in
int
inc
xor
pop
inc
daa
cmp
adc
sub
jg
dec
sahf
add
and
inc
sbb
adc
jg
pop
rorl
jmp
add
push
lret
push
jge
add
aad
add
call
mov
xchg
xorl
add
push
dec
das
fbld
into
add
js
mov
inc
hlt
add
mov
push
or
push
and
cmc
nop
cmp
fistpl
gs
jns
cwtl
mov
imul
stc
add
lret
push
out
ret
inc
dec
add
cmc
test
mov
sub
imul
cmp
and
int
push
fwait
mov
xchg
mov
lahf
mov
jmp
sbb
fcoms
mov
dec
fistpl
sar
add
add
incb
mov
das
incl
repz
mov
add
shll
mov
cmp
fisttps
pop
add
mov
fnsave
pop
sub
test
imul
mov
icebp
repnz
push
xchg
lods
lods
in
xor
loop
add
jp
fcoms
push
lock
ret
fstps
scas
hlt
jae
or
sub
xlat
and
add
push
out
sbbb
xchg
jmp
movb
rorb
lods
add
and
sbb
gs
clc
add
rol
xchg
pop
xchg
ret
movsb
js
js
xor
loop
rcl
out
lahf
mov
add
sub
filds
xor
cmp
stos
jae
xor
sub
movsl
xor
sbb
xor
or
popa
testb
fistpl
popf
js
repz
sub
subl
aas
adc
add
mov
adc
xor
stos
int3
adcb
gs
testl
pop
xor
iret
add
scas
out
mov
add
inc
stc
cmpsb
add
jns
sub
sbb
es
sub
mov
pop
popa
test
cmp
mov
xlat
add
jnp
rcr
or
mov
pop
cmp
add
addr16
repnz
add
xchg
sbb
orb
sbb
pop
lret
in
jb
and
sub
pop
xor
or
push
inc
cmp
xor
push
add
mov
mov
dec
mov
inc
jge
test
pusha
adc
sbb
icebp
pop
dec
dec
add
in
mov
sahf
add
xchg
dec
jbe
sub
lret
rolb
int3
inc
push
push
pop
adc
add
mov
insb
mov
sub
and
add
clc
les
sahf
sub
add
pusha
addr16
scas
xchg
ds
push
cmpl
xor
aad
lret
pushf
adc
inc
add
add
filds
adc
lcall
cld
loop
mov
pop
cmc
flds
add
push
mov
cmp
xor
mov
cwtl
fs
sub
mov
orl
fstpl
mov
pop
push
ds
sub
dec
dec
inc
ss
mov
sbb
mov
icebp
xor
or
orb
int
lods
adc
adc
mov
inc
clc
pop
fdivrs
mov
add
push
es
sub
push
push
mov
and
out
xor
decb
lcall
cmp
mov
js
sub
xor
mov
pop
mov
push
lock
push
je
ret
cmp
cmp
movsl
jnp
and
icebp
mov
adc
add
dec
cwtl
leave
pop
xchg
outsl
call
lock
push
or
add
mov
xor
push
sub
vmovapd
add
ja
push
jb
dec
push
sub
add
mov
add
inc
test
outsb
push
iret
sub
sub
loop
sbb
push
sbb
jmp
adc
in
arpl
xor
fnstcw
outsb
jge
loopne
jg
lock
mov
les
add
adc
clc
add
push
lods
in
cmp
mov
sub
sub
loop
add
jmp
outsb
jns
add
mov
fadds
fwait
adc
push
add
and
aam
imul
and
mov
or
pop
mov
filds
mov
jg
xchg
pusha
sarb
test
fisttpll
xchg
inc
gs
xchg
rolb
lods
xor
adc
and
xchg
sub
cs
imul
leave
pop
ret
xor
add
mov
in
inc
push
sub
in
test
mov
jns
js
aad
sbb
mov
repnz
cmp
jp
fstpt
nop
push
and
es
sbb
add
sbb
pop
imul
adc
inc
mov
add
mov
aad
push
or
imul
test
xchg
fwait
and
test
inc
scas
cli
inc
jnp
fimuls
mov
into
add
cltd
clc
sbb
mov
test
add
js
test
mov
pop
ficompl
fmull
imul
push
je
add
ret
dec
out
or
inc
adc
mov
int
pop
cmc
or
xchg
ds
add
add
sub
das
hlt
add
push
xor
mov
xchg
sbb
decl
outsl
test
mov
cmpl
inc
xor
push
leave
fstps
add
addr16
cmp
outsb
lahf
cmp
movsb
fbld
xchg
insl
mov
pop
nop
sbb
xchg
sahf
shrl
push
int
ret
es
movups
clc
fbstp
mov
pop
and
call
lods
inc
push
sbb
and
jnp
popf
xor
mov
out
neg
add
cmp
sahf
mov
mov
jnp
or
push
push
sub
fcompl
popf
xchg
inc
pusha
inc
cmpsb
fsubr
cs
fidivrl
mov
and
cwtl
nop
lcall
sub
sbb
mov
ret
or
cmp
repz
xor
imul
xchg
fxch
out
dec
es
sub
pop
cltd
or
inc
sub
inc
and
jp
adc
dec
cmpsb
push
pop
adc
sbb
dec
enter
loopne
pop
test
in
adc
jp
aaa
arpl
js
inc
aad
imul
xchg
movsb
js
push
push
dec
loopne
sbb
or
or
addl
mov
es
int
mov
jp
adc
xor
test
inc
jo
mov
test
sub
xor
out
fistl
add
das
and
rol
and
push
jnp
icebp
inc
xchg
aas
es
push
fs
cmp
add
mov
cmc
jnp
in
add
or
imul
push
icebp
sbb
lea
arpl
pop
loopne
pop
xchg
or
and
mov
aad
mov
pop
add
mov
add
adc
push
xchg
rorl
adc
mov
add
dec
jge
xchg
sub
jnp
sarl
into
clc
repnz
sbb
dec
js
fisubrs
stos
fbstp
add
sub
inc
add
sbb
mov
pop
sahf
dec
test
add
ret
into
in
fldcw
shll
pusha
call
mov
insl
mov
neg
inc
pop
add
fs
sarl
aas
add
pop
leave
test
xor
pushf
add
jo
mov
mov
mov
push
popf
addb
dec
mov
pop
ds
ret
dec
lods
jnp
sub
xlat
ljmp
flds
fs
push
inc
add
sub
outsb
ljmp
mov
out
outsl
loopne
out
das
arpl
in
es
imul
and
sbb
mov
xchg
push
clc
pusha
add
iret
cmp
loopne
pop
scas
sub
dec
ss
pop
daa
add
fnstcw
cmc
push
mov
sbbb
adc
aaa
pop
add
hlt
dec
pop
nop
cmc
adc
das
sbb
lods
test
lahf
or
ja
cmp
inc
fimull
dec
loopne
xlat
notb
pop
dec
mov
inc
jmp
movsl
xor
nop
mov
scas
add
push
fwait
lcall
dec
or
les
dec
inc
test
push
jo,pn
mov
in
lds
inc
out
lods
pop
inc
pmaddwd
xor
shrb
frndint
rorb
insl
or
add
mov
push
mov
add
and
push
mov
push
dec
cmp
jno
movsb
adcl
cmpsb
adc
mov
mov
outsl
aas
add
xchg
scas
adc
es
ds
add
inc
pop
or
sub
in
rorb
ret
and
ror
lds
push
out
sub
cli
add
push
sub
add
jecxz
cltd
xchg
shrb
scas
jb
and
cmpsl
push
add
inc
cmp
mov
sbb
cmp
or
mov
and
cmp
sub
add
xchg
out
jle
fsubs
bound
lds
add
push
ss
mov
stos
lret
xchg
invd
movsl
aas
out
add
pop
rcl
jmp
push
jbe
pop
mov
xor
sbb
pop
dec
jmp
popf
push
inc
ja
push
das
out
xor
and
jo
fsubr
cld
xlat
aam
cmp
push
out
test
dec
xchg
sub
push
stos
in
aas
and
push
ljmp
add
adc
sahf
scas
lea
add
fsubrs
pop
outsl
sub
add
arpl
cld
stos
data16
jne
lods
fiaddl
pop
lcall
mov
arpl
mov
and
add
mov
xor
clc
loope
add
aas
jmp
ds
repnz
lea
or
or
inc
add
add
xchg
shll
sbb
cmp
and
insb
mov
add
mov
push
jl
test
mov
lock
add
pop
inc
push
rcrl
aam
mov
out
mov
sti
jb
add
out
sahf
xchg
mov
mov
test
enter
mov
cmova
and
add
add
pop
aaa
pusha
js
shll
inc
jle
imul
push
rclb
fnstcw
das
adc
push
sub
mov
inc
xchg
in
roll
jo
lods
gs
dec
xchg
sub
add
pop
les
add
push
xchg
popa
jnp
push
inc
adc
pop
sbb
xor
and
jns
call
add
or
jg
add
outsl
mov
aam
and
add
lods
add
jb
push
add
cmp
dec
xchg
fists
and
das
mov
in
mov
and
nop
pop
ret
inc
xor
mov
or
pop
sub
sahf
popa
aad
xchg
call
adc
mov
mov
push
in
add
iret
lret
xchg
lock
jl
xchg
add
jns
out
xchg
movsb
into
adc
pushl
push
pextrw
jne
insb
add
sub
pusha
loopne
jmp
xchg
rolb
sub
sub
imul
add
test
aaa
adc
push
xchg
add
pop
repz
mov
adc
adc
mov
int3
add
fsubs
popa
pop
int3
sbb
add
call
ret
inc
add
shl
jmp
jecxz
fwait
test
addl
xor
push
shl
pop
sbb
fninit
stos
mov
dec
inc
rcll
mov
pop
dec
aas
lods
in
ret
xchg
hlt
shrb
xor
mov
out
fidivs
subl
popa
shl
xchg
inc
pusha
aaa
js
cmpb
add
rclb
mov
call
pusha
sti
dec
jp
or
or
xchg
cltd
add
jnp
mov
pop
arpl
push
das
jl
ret
cltd
mov
xchg
add
cmp
xchg
xchg
xor
jmp
into
fnsave
daa
adc
or
pusha
addr16
jno
jle
jne
inc
fcoml
add
jge
sbb
pop
jae
fldcw
pop
mov
add
lds
mov
sub
adcb
jecxz
pop
add
pop
mov
jp
xor
adc
jle
push
pop
fistl
and
push
add
mov
mov
lret
xor
xchg
mov
and
out
xchg
add
xor
loop
add
cmpsl
pop
movsb
push
and
addr16
push
mov
mov
test
sub
std
popf
or
mov
ficomps
and
add
orb
enter
mov
int
cmp
jle
add
scas
sarl
inc
je
sbb
jg
dec
sub
sahf
push
lods
cmc
add
outsl
cltd
push
iret
pop
xor
fisubs
and
mov
aad
add
jp
out
pop
fnstenv
das
call
jo
sbb
pop
push
xchg
sub
adc
in
add
roll
std
fs
add
mov
into
roll
cmp
pop
lea
cmp
add
gs
pop
fistpll
test
mov
dec
xor
mov
daa
xchg
adc
testl
cld
mov
mov
dec
sbb
rcrb
add
loop
cmp
fldz
dec
and
insb
mov
or
hlt
jmp
fsubs
movups
jb
gs
adc
pusha
insl
or
repz
das
mov
nop
cmp
fdivl
sub
scas
in
pusha
add
pop
cmp
sbb
add
in
mov
call
sub
jle
sbbl
nop
data16
cmpsl
sbb
add
loopne
or
fcompl
bound
or
dec
jp
add
pop
add
adc
add
ret
lock
stos
addb
mov
push
inc
pop
pusha
mov
jae
outsl
add
mov
repnz
pop
add
add
xchg
fwait
pop
add
jge
out
aas
jno
push
or
addl
add
lret
js
push
mov
mov
xor
insl
jo
push
divl
add
adc
bound
mov
out
push
sbb
sbb
rcll
or
add
pop
pop
and
add
ret
out
mov
roll
inc
add
pop
adc
cmc
or
mov
jmp
loope
lods
pop
lods
pop
mov
ret
les
lahf
dec
xor
adc
cmp
add
adc
mov
movb
or
movsb
mov
inc
in
cld
mov
lods
add
divb
add
and
push
mov
and
mov
fwait
sbb
lret
arpl
outsb
or
es
in
out
dec
or
test
nop
mov
mov
fs
scas
test
outsl
pop
add
mov
xchg
adc
lcall
sub
sahf
ret
dec
repz
ret
add
shl
or
add
jo
imul
es
mov
outsb
daa
xchg
push
dec
pushf
and
xorb
or
cmpsb
pushf
fsubrl
dec
cmp
add
or
sub
jl
add
ljmp
in
jo
jo
jns
pop
or
bound
dec
cmp
sub
arpl
add
cmp
xchg
psubb
out
andl
sub
data16
leave
cmp
lods
je
stc
add
lahf
push
mov
pop
pop
scas
mov
outsb
pop
mov
sub
and
out
lcall
adc
mov
sub
xchg
or
add
ret
lea
rcrb
and
test
add
jb
loopne
bts
loope
pushf
add
and
add
cmpsl
sub
xchg
inc
pop
ret
rclb
pusha
dec
dec
lret
cmp
and
pop
mov
add
push
arpl
and
dec
rorl
push
in
jne
pusha
xchg
add
xchg
nop
or
mov
inc
inc
add
pop
je
incl
repz
loopne
xlat
sbb
mov
ja
lds
shll
lea
mov
lret
add
adcl
lock
pop
mov
add
xchg
in
dec
shll
pop
inc
movsb
push
mov
rcl
stc
movl
mov
rclb
gs
cmpsl
rolb
add
pushf
mov
add
cmc
push
xor
jne
fisubs
cmp
loop
int
jmp
pop
xor
jo
mov
push
dec
mov
jne
sbb
jle
insl
add
push
or
jg
pop
pop
bound
orl
data16
test
movq
cmp
scas
and
stos
inc
pop
rorb
in
pusha
ret
fstpt
js
add
add
arpl
adc
ljmp
mov
adc
adcl
ds
mov
jp
ds
je
inc
sahf
cld
xchg
clc
inc
or
adc
push
nop
add
pop
imul
clc
in
adc
pop
jo
sbb
addr16
sbb
xchg
repnz
mov
push
jp
add
fwait
add
dec
mov
testl
shll
push
addb
sbb
xchg
push
lcall
or
cli
xor
xchg
scas
inc
ja
jno
add
int
cmc
aas
jbe
add
fisubl
jno
fs
testl
add
or
testl
push
fs
lods
jnp
or
scas
add
je
jge
in
xchg
fldl
mov
jns
icebp
daa
in
out
jnp
adc
mov
pop
add
outsl
addr16
add
sbbb
and
je
mov
arpl
roll
push
jbe
movsb
push
bound
or
ret
xor
adc
push
add
jae
aas
lods
adc
pop
ja,pt
in
cmpsl
scas
add
pusha
push
iret
add
xchg
sub
inc
dec
nop
mov
sbb
mov
jne
add
addl
mov
xchg
xchg
inc
icebp
dec
addb
ja
add
loop
stos
sub
loopne
int3
rolb
leave
cmp
adc
inc
fiaddl
mov
shlb
add
jnp
xlat
or
mov
push
pushf
xor
pop
mov
mov
scas
and
into
scas
add
insl
dec
mov
mov
in
bound
movsb
lret
aad
out
add
cltd
int3
insb
jbe
pop
int
mov
add
lcall
arpl
clc
pop
push
cs
test
inc
cmp
and
rolb
prefetch
add
iret
lcall
sti
mov
test
mov
xor
jmp
rolb
sar
ret
add
out
cwtl
add
sarb
pop
outsl
jbe
inc
out
dec
or
insl
add
sarl
sti
addr16
sub
xor
lds
pop
sbb
add
mov
mov
add
lock
xchg
setle
add
or
notb
lods
or
jo
add
sub
int3
mov
add
lock
loopne
inc
add
outsl
pop
inc
dec
mov
sti
and
data16
popf
bound
mov
gs
xor
and
lods
clc
and
cmp
test
fildl
cmc
xchg
push
xor
insl
faddl
jecxz
mov
ja
loop
and
test
addb
arpl
mov
add
adc
cmpsl
adc
pop
cld
insb
mov
mov
aaa
ljmp
add
mov
or
lods
jbe
pop
fdivs
les
arpl
or
dec
add
out
mov
dec
cmp
mov
cwtl
xchg
or
sub
add
filds
aam
aaa
add
push
mov
cmp
adc
mov
out
cs
loopne
or
stc
add
js
mov
jp
xchg
pushf
push
outsl
mov
dec
in
add
mov
pusha
and
daa
and
or
add
test
add
push
inc
ficoml
jae
rolb
fsub
loopne
jge
dec
ja
mov
sbb
mov
inc
inc
sub
mov
push
add
pop
lods
adc
fs
faddl
inc
mov
mov
es
stos
add
xchg
mov
push
mov
add
xor
and
jb
or
add
add
add
mov
xchg
std
jo
jmp
push
mov
and
cld
inc
or
adc
std
or
mov
push
data16
pop
add
rcrb
adc
test
xor
push
push
xorb
daa
mov
add
fisttps
mov
ret
or
push
mov
cmp
leave
stos
int3
or
sbb
sub
push
lods
and
mov
stc
fistps
repnz
fcomp
push
imul
lods
lret
mov
ss
pop
jb
imul
mov
inc
inc
sub
sarl
fdivrs
aaa
andl
or
pop
arpl
into
or
jecxz
or
adc
mov
pop
push
mov
dec
inc
add
mov
lea
stc
pop
test
inc
cmp
fildll
gs
inc
mov
aaa
pusha
or
shlb
es
add
jae
fsubrl
shld
lcall
add
push
jecxz
testb
pop
jge
cmp
inc
lock
cmpb
inc
inc
lahf
shll
mov
mov
mov
xor
mov
push
push
popa
inc
inc
sub
mov
inc
leave
pusha
add
dec
mov
test
mov
add
shll
mov
cmp
pop
repnz
ljmp
aam
mov
add
int
roll
xor
cmp
mov
rcrb
push
xor
add
xchg
clc
aaa
cmp
daa
scas
mov
jns
shl
hlt
pop
lret
push
fldl2e
pop
in
cli
add
nop
pop
cmp
adc
in
cmp
cs
inc
lcall
repz
push
icebp
scas
loopne
cld
in
jmp
in
lock
filds
stc
lcall
add
das
fsts
fwait
push
insb
add
sub
and
adcl
jge
movl
stos
cmp
add
jne
jmp
dec
adc
lock
je
shll
sbb
sub
movl
lahf
adc
add
cmp
pop
addr16
hlt
add
mov
add
adc
add
mov
add
shll
nop
sub
xor
pop
jmp
push
sbb
pop
cltd
fsubs
into
jge
pop
out
xchg
bound
mov
or
js
dec
rolb
adc
adc
sti
incb
and
cli
and
pop
push
cmpl
dec
rcrb
and
mov
push
pop
outsl
mov
pop
loope
nop
and
inc
or
shrl
sar
inc
jg
add
enter
bound
jb
push
mov
lret
pushf
dec
cmp
dec
inc
pop
cmp
push
fdivs
add
cmp
adc
xchg
cmp
pop
cmp
fcoml
pop
xchg
lret
add
pop
sahf
or
jne
add
fdivrl
xlat
mov
push
outsl
jp
jb
stc
mov
mov
iret
push
add
out
jae
fwait
enter
inc
repz
adc
popa
and
mov
and
ds
add
outsb
cmpsl
xor
faddl
xchg
dec
scas
or
gs
push
addr16
or
dec
cmp
scas
pop
loopne
sub
and
dec
popf
or
mov
xor
lahf
test
cmp
scas
int3
add
lds
vshufpd
add
data16
loopne
add
xor
leave
mov
push
dec
fmul
or
and
add
rolb
xchg
xor
jbe
jl
mov
mov
arpl
rcll
add
cmp
jne
fldcw
or
add
in
pop
mov
xor
add
int3
cmp
inc
pop
cmpsb
sbb
insb
add
cwtl
imul
mov
mov
jno
xor
jmp
xlat
xchg
cmc
add
stc
stos
ret
outsl
sbb
dec
pushf
loopne
push
add
mov
pusha
inc
sbb
es
lock
sub
dec
sbb
sbb
movb
add
and
aam
jle
int
or
mov
and
or
xchg
xor
or
movaps
sbb
mov
push
adc
call
dec
jnp
lods
or
call
mov
pop
add
pusha
mov
mov
pop
push
pop
jb
stos
add
add
in
sahf
mov
mov
mov
mov
xor
lcall
and
cmc
scas
mov
jle
inc
ret
push
jbe
mov
jo
jecxz
cwtl
adc
aaa
lahf
sbb
shl
and
xchg
lock
hlt
inc
int3
call
cltd
dec
aad
xchg
test
cli
mov
repz
pop
shl
xor
std
inc
sub
push
dec
cltd
aaa
add
or
fucomip
mov
xchg
int3
cld
push
cmp
cs
push
fcomip
inc
add
mov
dec
loope
loopne
test
add
xchg
in
add
jmp
xlat
sbb
or
pop
mov
mov
sbb
ja
fneni(8087
das
cmpsl
add
cmp
sub
add
shll
pop
mov
sbb
sub
iret
jmp
mov
inc
enter
jns
push
out
inc
fadds
addb
inc
adc
adc
push
movsl
hlt
dec
jg
cmp
sub
daa
mov
mov
rcrb
push
jg
add
fsub
cmp
pop
cmp
rcl
add
jb
add
daa
clc
rep
add
push
fimuls
dec
add
xchg
cmp
cli
or
mov
stos
je
sbb
inc
clc
rcl
in
xor
add
fistpl
jno
pop
sar
lods
add
loope
cmp
jns
ds
sub
inc
mov
test
cmc
sbb
out
and
pop
lods
mov
add
mov
mov
add
icebp
out
test
ljmp
lods
inc
nop
pusha
movb
and
adc
fdivrp
xchg
xor
jge
sbb
push
addb
out
and
jp
iret
push
int
add
mov
imul
add
mov
or
xor
jl
lret
hlt
icebp
or
sub
cmp
adc
les
mov
mov
add
adc
arpl
xor
out
and
nop
adc
enter
bound
repz
mov
das
push
loop
mov
mov
mov
xor
orb
and
push
and
push
and
add
fistps
cmp
xorb
pop
dec
dec
cld
mov
inc
push
jle
sub
bound
xchg
cmp
sahf
xor
incb
or
xor
adc
push
add
int
fldl
cld
push
in
mov
lea
hlt
leave
sub
cs
in
add
daa
subl
shlb
mov
push
push
aaa
add
bound
add
stc
leave
adc
ss
hlt
arpl
and
subb
or
fcomps
xchg
add
push
lds
jle
xchg
setg
shll
add
stos
xchg
inc
push
sbb
mov
adc
add
cmp
and
push
movsb
mov
push
jbe
roll
and
and
sbb
or
mov
cmp
push
sbb
insb
adc
mov
xchg
and
sub
addl
into
pop
add
icebp
hlt
jle
out
cs
push
and
inc
add
cmp
lahf
pop
sub
fwait
pop
lods
add
mov
jge
push
imul
and
call
mov
es
add
cltd
sti
fs
cmp
add
sub
and
cmp
daa
int3
mov
pop
in
xchg
push
add
je
push
loop
xchg
andb
dec
hlt
xchg
sub
lret
dec
lcall
dec
sarb
sbb
jp
add
adc
adc
nop
sbb
push
dec
xchg
insb
mov
jle
add
mov
add
call
loopne
pop
mov
rcr
int
add
xchg
rcrb
xlat
or
sbbb
mov
mov
pusha
ror
lea
add
cmp
test
fsubrs
pop
jge
add
lret
addb
adc
pop
push
add
jns,pn
sub
cmp
jecxz
mov
sbb
add
push
les
xchg
std
inc
add
insl
mov
mov
push
fcoms
into
jo
ds
sbb
pop
ror
rorb
add
mov
pop
and
sbb
add
movb
ljmp
adc
jge
add
xchg
fnstcw
pop
add
jecxz
imulb
cmp
dec
wrmsr
dec
add
sbb
adc
push
cs
adc
jle
fildll
pushf
sub
pop
adcb
inc
cs
dec
loopne
mov
jae
jb
push
pop
dec
mov
inc
add
das
sub
data16
xchg
sub
idivl
xchg
andl
sbb
jmp
pop
enter
jp
add
sti
pop
repnz
shl
xchg
add
cmc
iret
adc
gs
stos
sbb
fldl
fmuls
add
insb
adc
cmp
loop
add
jl
adc
popf
pop
cli
and
add
xchg
mov
mov
and
mov
adc
mov
mov
shl
add
sub
mov
incb
jne
insl
and
or
mov
mov
popa
adc
mov
xchg
sarl
jo
inc
lods
andl
sbb
shr
pop
sbb
sub
adc
push
jge
cmp
cli
xor
mov
out
xchg
cmp
xor
sbb
push
repnz
flds
imul
int
shlb
shrb
cmpsb
mov
into
pop
pop
adc
adc
or
push
sbbb
pop
fnstcw
mov
lahf
lret
inc
cld
xchg
pop
mov
int
aas
lcall
pop
jbe
inc
or
aaa
cld
and
sub
xchg
leave
jo
mov
jmp
add
pop
push
cmp
clc
push
pop
ljmp
fildl
rol
inc
and
pop
movsl
cld
pop
in
xchg
pusha
cmp
xor
cs
pop
mov
imul
push
insl
xor
fcomps
sub
jl
cmp
xchg
add
adc
out
push
push
add
aas
xchg
and
sbbl
add
clc
sub
push
sbb
add
fcmove
add
bound
movsb
and
les
in
pop
imul
lret
in
and
mov
in
ficoms
pop
or
push
imul
iret
pop
bound
lds
lcall
dec
cld
pmaddwd
push
cmp
inc
add
ret
sub
in
das
or
mov
ds
fcmovbe
mov
or
dec
pop
sar
in
shlb
add
lcall
pop
inc
iret
pop
mov
and
cmp
xchg
cmpsb
sbb
add
push
sbb
call
cmp
add
jo
in
js
adc
rol
dec
fdivr
add
mov
pop
loop
dec
ljmp
lret
add
popa
fbld
push
stos
add
push
mov
dec
mov
test
sub
inc
int3
inc
cmp
push
dec
add
push
dec
adc
idivl
push
pusha
fadd
dec
mov
fs
cltd
push
sbb
call
or
pop
fwait
xor
jns,pn
jle
adc
and
add
fwait
pop
jmp
mov
add
hlt
dec
nop
mov
sub
jns
push
fucomp
xor
adc
jl
subl
pushf
cwtl
cltd
das
lds
push
jecxz
pop
adc
xlat
int3
add
aam
clc
sbb
mov
push
jbe
ja
add
add
shll
std
mov
cmc
pushf
push
or
adc
movsl
cld
in
cmp
sub
xchg
stos
add
shl
scas
out
popf
inc
insb
std
jecxz
sbbb
push
inc
add
ret
scas
stc
ja
lods
mov
cmp
icebp
shlb
add
addr16
add
sbb
sub
sub
adc
add
lea
add
cld
or
inc
add
jo
pop
pop
leave
add
mov
ljmp
into
lods
mov
sti
je
push
add
loop
mov
in
push
xchg
sub
add
push
mov
mov
js
add
mov
jg
loope
lds
xchg
jb
adc
rcrb
stos
xchg
stos
add
hlt
xor
cmp
sub
orb
jns
out
inc
xchg
mov
ja
and
sti
sub
lock
add
push
inc
xchg
add
test
loop
insb
mov
sbb
push
stos
cmpsl
or
add
mov
push
cli
add
aam
dec
std
and
add
in
sbbb
adc
test
adc
add
imul
stc
es
loope
stc
bnd
inc
xor
adc
sub
clc
jge
ja
add
lret
jb
jo
xor
dec
mov
and
fdiv
xchg
add
rcrb
sahf
cwtl
or
pop
shrb
int3
sbb
stc
push
insl
sub
mov
ret
sbb
inc
xor
cmp
add
xchg
cmc
orb
push
int
add
jae
mov
js
cmc
int3
ret
lock
sub
std
mov
push
sbb
add
fldenv
and
xchg
sbb
pop
loopne
outsl
mov
rclb
arpl
mov
lcall
or
inc
decl
cmc
cmp
in
cmp
push
scas
adcl
pushf
add
add
test
xchg
fsts
and
dec
fistl
pop
or
inc
sub
jno
mov
cmp
add
idivb
mov
out
or
arpl
add
fwait
ret
popf
aaa
sahf
movb
mov
and
daa
jl
add
jle
lcall
push
decb
fwait
shll
bound
add
push
std
jg
ss
mov
dec
push
cmp
cltd
xor
nopl
and
addb
dec
aad
add
pop
jne
or
jl
add
jmp
fs
mov
dec
hlt
sub
sub
or
adcl
add
mov
stos
cmp
xchg
daa
rcll
adc
mov
cmp
mov
or
sbb
jno,pn
sahf
incb
iret
inc
insl
mov
rcrl
subl
xchg
pop
xchg
and
push
adc
push
adc
xchg
sbb
int
push
lods
cmp
in
iret
push
lock
lds
jp
adc
outsb
arpl
and
rolb
dec
adc
mov
push
jle
loopne
xor
add
pop
das
lret
inc
loopne
sbbb
lds
rcl
sub
adc
mov
movsb
lahf
adc
mov
sbb
loope
out
sbb
shlb
add
push
ret
sub
pop
jp
or
xchg
adcb
mov
cmp
clc
sbbb
lret
data16
push
je
shrb
push
mov
repnz
mov
scas
imul
stc
dec
int
cmp
xor
push
sub
xor
jp
mov
inc
and
repnz
idivl
mov
loopne
add
cmp
add
mov
pop
pusha
clc
cmc
adc
mov
orb
pop
jp
sub
nop
mov
imul
fcomi
cmpsb
push
xor
dec
xor
inc
push
insl
pusha
nop
sbb
add
roll
dec
cmpb
cmp
bound
int3
test
pop
inc
sbb
cmp
adc
pop
flds
xchg
add
sbb
cwtl
adc
add
imul
inc
sbb
dec
lock
mov
fnstcw
filds
and
pop
test
dec
mov
loop
jp
add
ret
ss
lea
mov
sbb
add
lahf
sub
test
lcall
add
push
lahf
out
ret
xor
lret
sub
out
xor
aas
cmp
adcl
sahf
and
test
mov
daa
into
add
cmpsb
nop
mov
test
cmp
jmp
push
idiv
call
ret
outsb
popl
je
mov
popf
add
sbbb
shlb
mov
cmpb
js
add
inc
aas
jle
sbb
mov
inc
insl
xchg
enter
in
faddl
or
add
lock
jnp
push
add
aas
xchg
jae
std
out
int3
add
sbb
inc
or
loope
bound
mov
out
aas
add
or
ror
mov
aam
into
call
add
test
xchg
mov
fcompl
add
hlt
pop
loope
fcmovbe
pop
sbb
push
mov
js
xor
insl
hlt
es
pop
arpl
add
mov
xor
clc
test
add
add
leave
add
test
xor
jmp
dec
inc
sbb
mov
sbb
sub
psubusw
sub
lods
mov
mov
adc
cwtl
ss
cmp
popa
ja
xchg
inc
adc
sbb
cmpsl
push
lret
sub
xor
xchg
or
mov
imul
fstpl
inc
daa
imul
aaa
fisttpl
push
into
rorb
add
scas
cmp
jmp
lock
inc
stos
xor
addr16
add
mov
pop
fldenv
dec
mov
add
mov
cmp
xor
sbbb
jg
push
out
repz
push
add
insl
outsl
pop
dec
dec
cmp
call
mov
dec
cmp
sub
or
xchg
arpl
push
shlb
pushf
sbb
cmp
aad
mov
pop
sub
mov
inc
push
repz
add
repnz
nop
loopne
push
mov
fists
cltd
jno
and
cmp
hlt
movsbl
subl
mov
test
dec
insl
jbe
push
fildl
and
and
mov
leave
or
pusha
sbb
mov
stc
pop
push
pusha
jo
in
ret
call
out
add
jns
jmp
clc
pop
dec
or
add
mov
sub
insb
or
mov
pusha
cld
cwtl
sarl
add
and
add
scas
dec
jne
mov
push
mov
andl
cs
add
mov
fsubrs
add
scas
in
add
pop
add
and
into
jae
dec
loopne
test
add
movsl
jae
xchg
mov
lcall
add
lahf
push
add
sbb
pop
pop
add
insl
push
ds
popf
cmpsb
add
punpckhwd
cwtl
iret
pusha
insb
clc
data16
fisttpl
in
sub
notl
rcll
add
mov
addps
push
inc
negb
leave
mov
mov
xlat
or
es
push
lret
into
add
mov
or
mov
jp
push
daa
shl
push
pop
dec
add
std
hlt
jle
add
pop
xor
sub
jae
bound
dec
ret
mov
fbstp
cmp
jne
jnp
dec
sbb
inc
loopne
ffree
inc
loope
jae
and
in
and
pop
dec
or
rclb
dec
add
pop
test
xchg
lea
out
inc
loopne
fs
mov
dec
push
ss
push
aam
add
mov
arpl
and
jp
ror
cmp
inc
pop
fimull
sub
fcomps
cmpsl
mov
sbb
add
notl
or
pop
movsl
mov
popa
inc
mov
das
mov
dec
pop
and
cli
add
pop
ret
jb
xchg
dec
mov
inc
add
mov
xlat
or
pop
pop
pop
in
dec
and
or
je
mov
jl
pop
shlb
jge
cmp
push
cmp
inc
andl
rolb
aam
xorl
add
add
sti
adc
das
push
inc
rcr
add
movsl
pop
frstpm(287
mov
add
test
test
inc
repnz
inc
add
pop
jp
scas
negb
mov
rclb
dec
pop
xchg
pop
cli
push
cmp
ljmp
push
in
add
int3
jno
sbb
adcb
add
mov
mov
je
lahf
add
into
testb
add
nop
mov
xchg
add
cli
sbb
mov
add
aaa
movsl
push
call
pusha
aas
dec
add
push
inc
stc
mov
mov
test
add
push
mull
aas
add
mov
shlb
push
std
xor
xchg
adc
rcll
dec
clc
shld
xor
xchg
mov
jns
enter
adc
arpl
xor
cmp
jo
rorl
xchg
jle
lds
insb
add
idivl
enter
sbb
mov
xchg
mul
xor
pop
mov
push
das
jne
shlb
and
pop
add
pushf
fsub
adc
or
les
push
lcall
sub
loope
push
lock
faddl
dec
ds
xchg
outsb
mov
call
push
cmp
xlat
sbb
nop
cmp
cmp
dec
or
add
leave
jnp
mov
jns
lods
cmp
add
lods
sbb
inc
loop
add
stc
ror
pushf
stos
mov
mov
popl
add
dec
cmpsl
jmp
test
rclb
notb
pop
test
inc
in
cmpb
sti
pop
mov
fwait
ret
cmpsl
roll
dec
xor
dec
int3
adc
test
mov
add
inc
or
loopne
push
add
repz
add
shr
fimull
push
inc
insl
addl
lcall
sub
leave
dec
push
add
imul
inc
call
rorb
outsb
nop
mov
jl
dec
sbb
cmp
push
xchg
roll
fisttpll
pushf
push
cmpsl
mov
call
lret
mov
aad
mov
or
push
fcomps
popl
flds
dec
les
lods
xchg
jne
jno
mov
pusha
xchg
jns
test
xchg
gs
sbb
add
jae
pop
ljmp
data16
idivb
lcall
repz
adc
addl
push
dec
jmp
jae
rcrb
je
cwtl
pop
add
inc
cmpsl
hlt
dec
or
into
add
mov
cmp
and
movsl
shl
mov
test
and
mov
dec
xchg
jp
enter
mov
fildl
mov
adc
stc
jecxz
add
lret
pop
sbb
clc
fiaddl
std
push
ret
mov
push
notl
pop
mov
out
or
das
repnz
je
add
xchg
push
lret
push
jae
mov
inc
loope
iret
shrl
sbb
and
nop
mov
dec
inc
pop
leave
or
adc
outsl
iret
add
mov
ds
inc
dec
sbb
ss
pushf
add
aad
inc
or
sbb
add
pop
adc
xchg
add
fstpl
fxch
or
or
testl
lods
add
or
and
add
push
xor
lahf
xor
push
mov
dec
pop
push
flds
mov
fistpl
imul
loopne
mov
mov
in
sub
fsubl
mov
inc
pop
out
scas
add
sub
outsb
xor
insb
sub
push
dec
sub
mov
arpl
adc
mov
mul
call
add
sbb
sub
inc
jge
dec
sbbb
test
push
cmpsl
xchg
shll
mov
add
addl
or
int3
aad
leave
mov
pop
mov
xchg
inc
mov
sar
add
xor
mov
xchg
test
ret
rolb
or
imul
pop
pop
inc
push
repnz
lods
shl
xchg
mov
jb
andl
sarb
push
incb
sbb
jnp
leave
inc
add
xchg
and
inc
rorl
in
xor
hlt
dec
ret
sbb
mov
addr16
mov
pop
mov
or
int
lahf
rorl
add
ja
shl
testb
pop
or
or
xor
mov
or
cmp
add
cmp
rorb
sbb
lods
rcrb
inc
enter
adc
mov
hlt
rorb
jo
loope
nop
jnp
or
push
jle
dec
popa
xchg
int
pop
mov
mov
or
loope
scas
bound
add
mov
xor
out
add
push
add
sub
pop
xor
add
xchg
fisubrs
add
mov
or
and
push
repz
jb
data16
pop
adcb
cmp
aas
add
jg
sub
sbb
insb
ficompl
adcb
je
rorb
out
jae
or
or
add
pop
sbb
jno
insl
stos
in
pushf
cld
js
loop
mov
add
aas
sahf
push
add
lahf
lds
cmp
roll
in
xchg
fcoml
pop
ds
jnp
in
lret
fildl
jle
pop
ja
jl
lret
enter
xor
movsb
add
inc
ret
sbb
sub
lahf
jno
enter
pop
dec
add
in
movsb
push
int
sbb
or
add
mov
mov
repz
loope
push
cmc
mov
add
outsl
fucomip
cmp
add
movsb
jae
shrl
mov
stos
add
mov
add
mov
mov
aam
dec
sbb
repz
int3
add
daa
cli
sub
outsl
mov
test
dec
jns
mov
in
jb
mov
out
aam
mov
cmp
aam
pusha
sub
or
mov
add
in
frstor
loop
xor
cmp
xchg
push
xchg
cwtl
clc
push
jnp
adc
ljmp
sub
faddl
shr
inc
inc
aaa
mov
push
add
repnz
es
cs
mov
mov
mov
jnp
inc
cmp
cmp
popa
std
adc
or
add
aaa
push
sti
add
or
xor
pop
sbb
mov
mov
lods
mov
addl
arpl
div
ss
movsb
xor
sbb
test
add
add
addb
or
flds
push
call
adc
in
add
lods
or
push
or
jge
inc
mov
xchg
shlb
fs
push
pop
in
inc
add
xor
and
test
adc
add
cmp
je
add
push
sub
or
mov
loope
fildl
lds
or
jp
shlb
add
lret
popa
lcall
fidivs
call
pop
add
xorb
push
cmpsl
mov
int
dec
mull
insb
ja
pop
subb
cmp
mov
adc
fdivrs
or
add
pop
stc
and
test
test
add
push
cmp
es
ds
leave
add
mov
inc
push
ljmp
mov
cld
scas
out
cmp
cmpb
lea
or
add
add
sahf
mov
out
test
in
rorb
or
lods
mov
mov
pop
fisttpll
stc
test
insb
into
xor
inc
cmc
cmp
sub
xchg
js
add
or
pusha
cli
mov
lret
add
jge
add
mov
out
mov
mov
xchg
pushf
xor
loopne
cmp
add
mov
inc
or
cmp
or
sbb
inc
adc
xchg
ret
push
mov
int3
testb
xor
push
outsb
add
xor
cmc
daa
mov
mov
xchg
stos
out
pop
mov
adc
lods
cltd
adc
pop
imul
mov
sti
std
aaa
xchg
test
mov
add
shlb
mov
inc
adc
add
inc
push
mov
cld
ret
add
jns
push
adc
mov
mov
pop
xchg
addr16
test
mov
je
add
push
notb
insl
adcl
fldl
loope
rorb
add
in
inc
add
cmpsl
push
gs
je
stc
test
shlb
ss
dec
mov
mov
add
xchg
jg
int3
pop
aas
add
mov
jne
add
mov
data16
dec
test
add
pop
movsl
pop
mov
outsb
dec
test
ljmp
cld
psrad
mov
aas
orl
subb
mov
fsubl
mov
jg
fists
add
imul
rcrb
call
stc
pop
mov
xor
ss
stos
nop
lahf
push
fsts
in
loopne
mov
inc
pop
sti
add
cli
imul
mov
pop
push
add
in
cmp
add
ret
add
mov
jp
add
xor
or
or
push
pop
fistps
mov
lock
inc
fsub
shrb
jecxz
clc
pop
add
adc
adc
sbb
push
jmp
push
xchg
add
and
or
dec
pop
mov
lods
cmpsb
cmc
sub
mov
add
inc
ficomps
xchg
imull
sub
and
xchg
iret
enter
xor
outsb
jae
mov
mov
dec
mov
or
lods
js
pop
push
insb
mov
or
or
in
and
les
test
repnz
jns
jmp
mov
movaps
pop
mov
dec
insl
lea
lods
and
rorl
jae
daa
int
movsl
sub
rcrl
xchg
inc
or
push
inc
test
icebp
inc
xor
xor
leave
fdiv
or
je
add
xor
lret
sub
cmp
ret
push
sub
test
pushf
xchg
add
and
add
inc
mov
dec
adc
push
add
pop
push
pushf
add
mov
xchg
mov
dec
in
rcl
add
xor
adc
mov
add
shll
jae
mov
adc
ret
test
mov
ds
add
das
leave
pop
clc
mov
imul
add
push
cmp
push
aam
xor
sarb
mov
shlb
xchg
loope
push
mov
add
sahf
mov
add
jo
add
es
xor
popf
mov
gs
movsl
enter
leave
add
mov
xchg
repnz
xor
dec
add
dec
jmp
xchg
outsb
inc
push
or
fdivrs
xor
mov
mov
add
pop
shll
stos
pop
pop
sbb
add
popf
subl
dec
scas
add
mov
cs
stc
sbb
lods
add
xor
sti
mov
outsl
loope
data16
lods
pop
adcl
sbb
setp
push
out
mov
mov
shl
dec
cs
mov
rclb
xor
cmpsb
push
inc
mov
pop
push
mov
add
jb
mov
add
inc
dec
xor
jp
add
mov
dec
int3
push
cmpsb
pop
inc
aam
xchg
pusha
aam
push
pop
xor
adc
lock
add
in
jge
ja
cmp
mov
in
add
sbbb
stc
mov
aaa
inc
pop
es
inc
cmp
roll
and
inc
mov
jmp
fdivrs
mov
sbb
xchg
pop
xchg
clc
inc
loopne
jg
jge
add
sti
add
mov
gs
adc
je
mov
xchg
push
or
adc
add
mov
fldenv
sbb
nop
jo
outsb
rclb
mov
sub
clc
sarb
sub
add
mov
dec
scas
clc
add
call
lock
in
add
add
push
es
es
pop
pop
dec
add
dec
dec
clc
ss
adc
loope
mov
add
repnz
mov
or
push
test
or
ss
addr16
pop
lret
movsl
xor
add
cwtl
outsb
jle
into
add
insl
fstpt
sar
es
jae
inc
iret
mov
push
pop
jb
or
andb
rcrb
adc
aam
cwtl
shll
mov
mov
arpl
push
shlb
inc
out
and
divb
dec
stc
popa
and
test
push
sti
into
inc
mul
fsubr
test
movb
jb
cwtl
divl
decb
add
mov
push
shlb
mov
xchg
shlb
jns
insl
adc
xchg
jnp
add
in
orl
cld
sub
mov
xor
mov
inc
arpl
shr
add
fsubs
loopne
add
inc
mov
outsl
dec
leave
cli
mov
add
xor
inc
insb
dec
jo
dec
mov
xor
or
push
xor
and
add
icebp
aaa
mov
push
cmpsb
cmp
or
out
or
push
add
push
mov
add
cs
popf
inc
in
jae
call
cmpsb
push
dec
fiaddl
inc
ljmp
xchg
int3
divl
push
cmp
rclb
pop
push
add
mov
enter
sbb
jp
xor
add
jmp
les
xor
jnp
sbb
cmpsl
es
jae
pop
add
or
stos
cmp
roll
sbb
mov
add
inc
cmp
lods
mov
pop
adc
push
pop
inc
inc
push
rolb
cltd
mov
add
hlt
jl
idivl
adc
xorb
or
or
sbb
push
push
imul
push
hlt
adc
jbe
xchg
movsb
icebp
ret
andb
mov
loopne
arpl
fcomip
pushf
adc
cmp
pop
and
cld
popa
into
push
inc
cli
dec
inc
mov
sub
bound
cmp
dec
bound
iret
rcl
cltd
xchg
dec
jo
aad
popa
mov
mov
adc
hlt
cwtl
add
mov
sbb
sub
shrb
and
xchg
mov
repnz
mov
xor
xchg
mov
sbb
notb
in
adcb
xchg
stc
sti
add
imul
sbb
test
or
push
lahf
repnz
add
ja
mov
dec
pop
add
outsl
cmp
ret
jl
data16
pushf
test
sub
cld
insl
mov
call
jbe
pushf
push
rolb
add
rolb
mov
xchg
add
adc
rcrb
aad
or
jne
jecxz
pop
add
xor
push
sub
sub
inc
setl
pmulhuw
dec
dec
rolb
xchg
xorl
mov
enter
jb
fisubs
data16
xor
test
ja
cmp
loopne
push
icebp
ds
fdivs
sbb
mov
ret
push
adc
sub
lods
or
cmp
ret
lods
mov
push
hlt
test
mov
jge
jne
and
or
movsb
inc
add
jno
lds
xor
rep
cmovo
fcomps
push
xorb
jo
rorb
xchg
fcomps
add
adc
add
in
add
idivb
and
jae
popa
mulb
add
adc
push
xchg
inc
mov
add
shll
movsl
bound
xchg
add
out
sbb
adc
orl
add
out
pop
ret
or
mov
ret
inc
add
xor
scas
dec
hlt
pop
and
push
jecxz
push
cmpsl
rolb
add
mov
adc
and
adc
aad
xlat
mov
movsb
sub
mov
push
xor
or
call
add
mov
push
push
inc
test
rcll
inc
aam
push
pop
xchg
pusha
add
add
adc
add
adc
inc
xchg
loop
lods
sti
add
dec
or
adc
xor
neg
add
add
das
mov
dec
mov
mov
cmpsb
add
jno
cmp
mov
call
rcll
je
or
cmp
mov
sbb
xor
fwait
or
inc
filds
jno
cmpsb
mov
lock
insl
or
pop
mov
scas
dec
mov
addr16
mov
orb
dec
lock
outsl
pop
inc
fcomi
rolb
adc
xor
punpcklbw
inc
pop
xor
fwait
out
xor
jo
lods
lret
mov
or
sbb
aad
mov
xor
xor
test
add
pop
or
xor
js
xchg
sub
in
cwtl
sbb
adc
lret
arpl
xor
popf
in
add
pop
stos
clc
in
fldenv
jbe
and
add
push
out
xor
jb
imulb
lret
test
xchg
inc
mov
ds
push
cld
sub
leave
sub
mov
mov
mov
cli
jmp
js
cwtl
stc
add
stc
pop
cmp
insl
dec
into
add
ja
jg
enter
jmp
movups
pop
jle
enter
mov
inc
lret
pop
sbb
mov
inc
xchg
mov
xlat
dec
jge
ja
add
daa
adc
jmp
jge
add
mov
sub
shll
jne
mov
insb
adc
push
ret
in
nop
fidivrs
fistpll
aad
and
mov
test
ficompl
push
push
cmp
imul
jno
mov
sti
movsb
fcoms
sti
aam
add
ljmp
add
and
add
pusha
add
sahf
loope
shrl
mov
rorb
in
fwait
out
mov
xor
cmp
pusha
repnz
daa
add
out
mov
std
shrb
in
or
mov
hlt
sarb
mov
sahf
out
gs
add
ror
addr16
sarl
inc
add
mov
out
or
or
cmp
xor
cwtl
add
call
mov
aaa
add
pop
fbld
mov
leave
sub
push
jo
fwait
shlb
push
add
cmp
cmpsb
test
test
sub
add
cmp
loope
cmp
adcb
add
add
add
add
ja
cmp
sub
pop
test
mov
and
shlb
xchg
cli
and
or
xchg
filds
cs
cmpsb
add
mov
add
stos
pop
bound
add
inc
ret
dec
add
loope
pusha
fstp
add
pushf
push
pop
test
add
push
xor
cs
pop
inc
cs
add
mov
inc
divl
inc
add
clc
or
inc
int3
or
outsl
sbb
arpl
cmp
inc
shlb
pop
andb
fisubrl
add
mov
jecxz
shrb
shll
rclb
add
jp
push
cmp
sbb
jo
ficomps
repz
dec
adc
aam
rorb
adc
inc
fsubs
add
jns
mov
dec
push
pop
sbb
adcb
cmpsb
fwait
inc
or
lret
lret
xor
cltd
jne
iret
push
or
rorl
enter
leave
add
insb
rclb
xchg
sbb
sbb
dec
in
into
inc
xor
imul
jne
add
fwait
add
nop
cmp
or
adc
dec
cmp
pminsw
or
imul
fwait
mov
or
inc
insb
fldenv
es
mov
pslld
mov
add
out
test
add
adc
mov
cltd
xor
shlb
out
mov
push
xor
jp
call
insb
sbb
out
hlt
add
mov
je
movsl
verw
push
cmp
and
repz
test
push
mov
loop
xchg
mov
xchg
push
in
add
xor
xchg
push
add
pop
ss
out
mov
add
adc
inc
lret
jne
in
xchg
sub
xchg
sti
orb
testb
cmp
ror
push
and
adc
pop
inc
mov
add
test
dec
push
add
or
mov
dec
orb
sbb
rolb
je
jo
outsl
sub
xchg
shrl
pop
loop
stos
pusha
std
sar
pop
daa
mov
rcll
rorb
dec
std
add
lcall
adc
sarb
add
dec
push
in
add
enter
cmp
pop
and
push
test
adc
dec
mov
clc
add
sub
sarb
add
mov
pop
out
add
xchg
mov
mov
je
mov
pushf
call
xchg
adc
dec
or
or
adc
cmp
stos
sbb
mov
sbb
mov
xchg
inc
clc
les
sbb
xchg
dec
mov
stos
jmp
cmc
fcomps
loopne
out
mov
pop
and
and
mov
fdivrs
sbb
fstpl
test
adc
or
jl
cmpsb
add
mov
sahf
or
add
xchg
jge
push
cmp
call
mov
jecxz
lods
mov
aam
clc
mov
pop
cmp
mov
push
push
cmp
setns
js
xchg
les
xchg
xor
loopne
int3
nop
aad
repnz
sbb
movb
add
sbbl
mov
add
sbb
xor
push
test
inc
frstor
ret
cli
add
inc
dec
xor
add
pop
mov
nop
pop
and
daa
ja
ficomps
sub
dec
mov
fs
into
jp
inc
add
cmp
pop
clc
mov
sbb
xchg
jmp
call
jle
sbb
add
les
shlb
jns
add
movsl
lcall
mov
loope
add
and
loop
push
xchg
xor
mov
jecxz
mov
hlt
cmp
lods
shlb
cmc
mov
les
jo
rol
mov
sub
jl
push
adc
mov
add
mov
insb
fsubl
and
daa
ret
add
jb
enter
sub
cmc
mov
je
lods
mov
jge
mov
adc
or
jbe
insb
add
jb
test
inc
rorb
add
iret
or
sbb
lods
inc
int3
xor
filds
jmp
push
fcom
cwtl
xchg
adc
xor
adc
rcrl
xor
mov
push
adc
stos
aam
push
sub
lds
bt
dec
add
in
jl
cmp
lock
inc
push
add
test
js
test
or
das
out
lret
add
sub
push
clc
imul
fwait
pop
dec
mov
pushl
cmpsb
sbb
adc
push
mov
xor
cmpsb
jnp
cmp
repz
pusha
loope
stc
mov
add
in
inc
xchg
jmp
pop
addr16
and
lahf
mov
push
mov
add
add
add
in
andl
push
sbb
aam
inc
add
dec
imul
and
imul
ficomps
add
adc
js
sarb
mov
je
cwtl
jecxz
data16
lea
add
movsb
mov
cmp
adc
std
or
add
adc
add
vmwrite
add
repz
int
les
rorb
inc
mov
call
add
ljmp
popf
or
mov
pushf
cmp
fcomi
shr
sub
jmp
add
les
not
sbb
loope
out
lods
lods
add
inc
add
enter
jmp
lock
and
adc
mov
scas
loopne
pop
mov
inc
loop
xor
mov
pop
cmp
lds
sub
ja
es
push
pop
push
mov
and
mov
rclb
iret
xor
jecxz
fs
jle
mov
lock
cmpsl
stos
add
pop
or
movsb
icebp
enter
or
jno
out
dec
or
inc
xor
and
pop
mov
and
arpl
add
inc
jg
and
cmp
pushf
push
cli
inc
push
loope
rcrl
loopne
pop
xor
out
adc
repz
inc
add
mov
leave
mov
mov
sbb
and
mov
or
dec
mov
mov
gs
ljmp
add
xchg
ds
fiaddl
push
mov
add
pop
xchg
xchg
stos
jns
or
cld
push
ljmp
popf
add
push
lock
cmp
jnp
add
bts
outsb
jle
push
or
cmp
push
push
rorl
inc
xor
or
inc
mov
xorl
mov
jl
push
es
mov
push
mov
xchg
sbbl
xor
mov
or
adc
int3
iret
pop
mov
out
push
or
cmpsl
dec
cld
inc
fisttps
pop
jl
sbb
adc
pop
push
xorl
mov
sbb
rcrb
int
jge
cmp
xor
orb
icebp
add
push
mov
sub
lods
jle
cmp
adc
inc
insb
pop
sub
inc
mov
out
fwait
pushf
pop
add
cli
aam
xorb
and
inc
add
push
jnp
sbb
sub
loop
inc
xorb
or
xchg
sub
pop
add
bound
inc
jg
xor
test
repz
insl
ds
pop
popa
loop
je
movsb
add
arpl
xchg
sbb
sbb
inc
push
fimuls
imul
into
scas
orb
mov
xor
cmp
leave
cmc
xchg
xor
add
pop
idivb
mov
mov
gs
je
outsl
lock
push
pop
cwtl
lret
cmp
cmpsb
adc
jl
bound
add
call
mov
mov
jl
add
or
arpl
or
and
call
pop
pop
mov
lods
add
mov
add
add
test
sbb
sbb
add
cs
push
cmc
hlt
dec
add
jns
jmp
or
xor
out
inc
cmpsl
aaa
out
data16
js
scas
dec
sbb
add
out
mov
mov
aas
pop
and
add
sub
jo,pn
xor
addr16
push
add
jae
dec
xchg
inc
cmp
mov
icebp
popf
mov
mov
pop
add
dec
sbb
mov
loop
xchg
mov
add
stc
pushf
mov
xchg
and
pop
repnz
cltd
jbe
dec
rorb
jle
in
divb
ljmp
pop
and
lock
pop
push
mov
mov
and
test
dec
sub
out
in
mov
inc
inc
jo
loopne
adc
cmc
or
xchg
pop
rcl
lret
xor
jl
test
imul
push
add
loop
lret
test
or
jno
repz
mov
cwtl
push
das
mov
test
insl
and
fs
mov
out
or
pop
xorb
outsb
jb
frstor
mov
iret
jmp
test
add
lret
bound
mov
add
icebp
or
mov
lock
push
pop
loop
pop
jp
and
fnsave
inc
hlt
or
push
aaa
lcall
dec
mov
jne
out
adc
add
add
mov
sarl
add
jmp
sbb
aaa
daa
loope
ja
ljmp
repnz
cmp
add
cltd
add
and
bound
push
lret
mov
test
cmp
test
into
mov
or
inc
mov
dec
jbe
hlt
or
inc
mov
arpl
xor
add
jp
lahf
test
sbb
cmp
push
shl
pusha
and
ds
jg
cltd
icebp
mov
lods
mov
movsl
orb
sbb
add
mov
xchg
mov
mov
outsb
outsb
jo
fiadds
pop
lock
cmp
add
incl
or
fwait
dec
lea
push
jg
ja
mov
cmp
push
pop
daa
xchg
add
pusha
jp
add
pop
xor
ficoms
add
jbe
ds
push
adcl
add
mov
stc
int
fdivrs
ljmp
and
add
jne
pop
mov
test
xchg
xchg
cmp
sahf
pop
idivl
in
xchg
lret
and
sub
lock
jb
daa
mov
imul
lods
mov
or
push
dec
clc
aam
mov
mov
lock
mov
addb
sbb
insl
mov
adc
test
adcb
xchg
sbb
fidivs
iret
pop
mov
movlps
mov
icebp
xor
lods
test
cmp
jp
xchg
mov
sub
adc
inc
sbb
sbb
fcompl
xchg
popf
out
xor
add
in
mov
pop
push
aas
push
adc
sub
fistps
shll
gs
sbbb
gs
jge
add
push
mov
xor
dec
in
add
mov
add
sbb
add
xchg
ror
mov
mov
fdivl
add
rclb
int
cmp
push
insb
hlt
addb
mov
jmp
mov
jno
sarl
add
pop
lods
push
sub
mov
in
insl
fdivr
add
and
fiadds
jns
out
loopne
dec
push
les
mov
rcrb
mov
rolb
dec
movsl
rolb
gs
out
stos
pop
mov
pusha
aad
pop
fwait
add
mov
shll
pop
ljmp
add
add
xchg
ss
inc
aas
mov
stc
dec
and
adc
pop
add
pop
cmp
sbb
sti
inc
add
jp
fildl
and
mov
lock
cmpsb
lds
push
add
cltd
or
mov
push
cmp
enter
dec
jge
dec
lret
and
loopne
cmp
add
jge
cmp
add
movb
in
add
idivb
sbb
syscall
rcl
inc
add
xorb
or
add
hlt
sbb
das
cmpl
sub
push
sbb
add
add
fimuls
imul
adc
xchg
xlat
cmp
push
lcall
xchg
mov
push
inc
sub
out
jp
or
xor
inc
out
lock
es
testb
xchg
pop
mov
add
je
cli
ja
add
icebp
clc
cmp
mov
add
adc
roll
inc
pop
mov
cmp
ds
jbe
mov
roll
sbb
dec
add
jno
sub
ljmp
test
jl
push
sbb
call
push
push
stos
xlat
xchg
lock
or
inc
jle
add
mul
mov
cwtl
add
dec
dec
lret
dec
add
jae
mov
inc
add
mov
jmp
add
lea
lret
fcoml
inc
and
adcl
or
movsb
cld
mov
add
jae
int3
push
je
push
add
out
xchg
sbbb
or
jo
push
add
cmpsl
push
pop
pop
fimuls
adc
mov
es
inc
fmuls
sbb
cmp
push
xchg
int3
sbb
lret
and
lret
ret
mov
mov
rcl
pushf
push
pop
push
aas
sbb
pop
loop
xchg
leave
jp
push
fs
fldenv
outsl
mov
sub
jecxz
loop
nop
pusha
add
bound
mov
hlt
add
sbb
jg
push
rolb
sbb
adcb
loope
cs
add
movaps
mov
test
add
lods
push
xlat
rolb
add
push
mov
rorb
inc
imul
rolb
mov
in
pop
push
mov
mov
mov
add
aas
push
cmp
jo
rclb
in
inc
popa
adc
jmp
adc
cmp
enter
out
sub
cmp
imulb
push
add
sub
lea
into
sub
loopne
aad
add
push
sbb
rolb
enter
clc
add
ljmp
mov
stos
outsb
cli
hlt
jne
cmp
movlps
push
repnz
jecxz
add
adc
pop
adc
push
daa
cmpxchg
popa
push
in
repz
push
ret
lods
into
orb
sub
daa
and
sub
cmp
mov
xchg
mul
fcomps
cmp
pop
add
add
add
mov
mov
push
push
push
clc
dec
and
adc
leave
mov
cmp
faddl
sbb
stos
xchg
scas
push
xor
mov
cmp
add
out
push
push
xchg
call
lret
lods
dec
roll
out
cmp
push
xor
inc
sub
jecxz
enter
mov
inc
xor
js
repnz
mov
or
dec
fldt
aam
dec
hlt
in
lret
inc
and
mov
add
dec
out
xorps
xlat
sub
iret
out
int
pop
jo
jge
ljmp
xlat
sbb
lods
pusha
shrb
aaa
loopne
add
fsts
mov
mov
pop
lret
loope
rclb
sub
sbb
and
subl
lods
cmp
xlat
lcall
xchg
fwait
add
out
int3
cmpsb
clc
jae
add
movsb
and
pop
inc
das
incl
jo
sbb
test
push
out
xor
adc
add
je
cmp
pop
notb
sub
filds
lret
in
je
inc
or
and
inc
mov
add
dec
fcomps
jmp
add
sub
test
xchg
and
test
sub
stos
out
mov
push
xor
jne
lret
lahf
roll
pop
es
sbb
adc
pop
mov
add
mov
sldt
stos
iret
cmpsl
dec
or
hlt
subb
add
dec
orb
xchg
rcrb
mov
inc
mov
popf
jmp
add
inc
lock
lret
add
push
cmp
and
shrl
jno
or
jecxz
add
cmp
inc
nop
lods
jnp
add
mov
in
inc
in
add
outsl
nop
jecxz
push
rcrl
inc
add
das
dec
xor
pop
lods
add
pop
push
lret
stos
aas
sbb
test
mov
scas
outsb
and
push
jo,pn
adc
inc
sti
dec
jecxz
add
adc
iret
push
mov
and
test
add
cmp
rol
push
test
fs
pop
adc
dec
lahf
sbb
fwait
cld
pop
lock
xorb
pop
push
and
scas
inc
pop
xor
call
sahf
push
add
mov
push
xchg
out
xchg
sahf
mov
xor
scas
push
in
test
add
mov
add
cli
xchg
lret
ss
mov
mov
rcr
sar
mov
jp
pop
add
cltd
adc
ret
frstor
adc
jge
outsl
and
shll
push
add
nop
pop
mov
mov
add
inc
cli
jbe
xchg
sbbb
xchg
jl
pushf
jp
enter
add
xchg
jnp
pop
mov
jmp
jmp
nop
xlat
outsb
punpckhwd
int3
mov
jp
scas
or
pop
popf
out
lods
call
adc
movsb
xchg
pop
out
mov
xor
cmp
add
add
setge
or
and
lds
dec
ds
add
or
inc
scas
loopne
and
into
mov
arpl
or
jno
mov
enter
push
les
movsl
sbb
mov
sub
in
xchg
adc
cmp
jecxz
cmp
ret
nop
jo
ss
sbb
add
data16
mov
das
push
push
pop
lock
dec
aam
sub
mov
sub
ds
cmpsb
inc
add
and
add
jnp
push
add
subb
sahf
sbb
cmp
xorb
lcall
inc
adc
scas
pop
sbb
stos
add
movsl
repz
ret
sub
jge
repnz
mov
fwait
add
dec
mov
jmp
or
arpl
addl
iret
pop
push
lock
inc
paddq
lock
fdivp
add
out
dec
cmc
mov
xorb
std
pop
popf
mov
loopne
jg
push
in
mov
into
sbb
rorl
das
cld
lods
add
fsubr
push
stos
sbb
pop
imul
loop
xchg
sbb
pop
cli
add
sub
inc
xchg
out
and
mov
add
arpl
fstl
xchg
adc
and
add
xchg
imul
inc
lea
js
mov
sbb
aad
addb
add
cmpsb
pop
inc
mov
scas
add
pusha
ljmp
daa
pop
cwtl
je
add
dec
inc
cs
sbb
and
jb
mov
add
adc
inc
int3
lock
enter
pop
or
cvttps2pi
adc
fisttpll
arpl
loopne
mov
push
add
nop
rorl
dec
xchg
in
add
loope
and
shlb
xor
xchg
push
out
stos
xchg
into
lds
in
int3
jecxz
push
push
fmull
mov
add
lods
bound
or
mov
stc
cmp
cmpb
arpl
and
in
sbb
fs
inc
or
mov
fbld
mov
mov
int
int
stc
clc
adc
adc
into
add
test
mov
add
lea
test
mov
dec
loopne
add
cwtl
cmpsl
orb
add
xorl
bnd
add
jb
or
les
nop
mov
cld
das
jne
fmul
add
roll
lods
dec
cmp
cld
add
stos
loope
or
arpl
pop
jnp
test
sar
lds
loop
repz
xlat
mov
or
rcrb
jne
mov
aas
jmp
adc
ss
popa
jl
leave
hlt
mov
sbb
stc
inc
jne
sbb
cltd
js
jle
add
xor
arpl
mov
add
xchg
mov
add
das
mov
add
push
add
and
fmull
test
add
js
in
jbe
popl
inc
gs
cld
mov
add
test
jg
push
aad
dec
xor
jae
call
cmp
mov
iret
mov
in
in
imul
cmp
cmc
add
push
sub
mov
fildl
add
fidivrl
pop
or
in
cmpsb
popf
and
inc
sub
xchg
mov
xor
adc
clc
push
add
call
fbstp
sahf
sub
popa
add
adc
mov
cltd
xchg
loope
and
add
add
loope
add
xchg
xlat
pop
add
sbb
add
std
das
mov
push
jmp
hlt
movsb
pop
leave
lret
mov
jo
xor
rol
sub
xchg
sub
in
int
cmpsb
mov
xchg
notl
dec
dec
stc
mov
fwait
loopne
jb
jns
and
in
jecxz
sub
cmp
push
cmp
scas
pop
and
adcb
testl
pusha
popa
and
imul
jae
jmp
add
out
ret
outsb
aas
xor
mov
mov
pop
add
adc
pop
fs
cmpsb
add
ret
adc
stos
movsl
es
lds
xchg
add
out
mov
add
ds
test
sbb
shlb
mov
icebp
lcall
mov
test
pop
pinsrw
jecxz
std
add
ja
rorl
jno
jge
jp
and
repnz
mov
repnz
fs
mov
mov
pop
cld
pusha
add
push
mov
add
jnp
pop
and
add
popf
push
fnsave
in
push
xchg
jo
ljmp
adcb
imul
clc
enter
mov
sbb
mov
jmp
mov
sbb
mov
add
rclb
daa
adc
add
push
mov
xor
add
push
mov
adc
add
jge
cmp
sub
jbe
push
mov
cmp
inc
arpl
ret
dec
xchg
clc
mov
pop
adc
aaa
test
idiv
in
call
loop
shll
xchg
push
stos
insl
int
jge
add
sbb
and
xor
imul
mov
pop
xchg
add
or
xor
call
aad
imul
adc
mov
push
add
cltd
sub
scas
pop
outsl
sbb
sbb
mov
lahf
and
test
mov
pop
dec
shrl
xlat
into
xor
ljmp
mov
enter
add
and
and
fadd
iret
insb
call
and
sbb
repz
xor
lock
sub
jge
es
dec
add
or
outsb
mov
adc
jo
push
add
lock
incl
ja
les
push
xchg
cmp
out
pop
cwtl
adc
addb
les
jle
decl
enter
lea
and
lods
pushf
xor
test
stos
sbb
hlt
idivw
cmp
pop
sub
mov
repnz
loop
stc
mov
adc
movsb
std
outsl
jl
arpl
add
imulb
outsb
das
setle
aam
inc
mov
mov
mov
imul
popf
stc
dec
gs
push
lea
sbb
and
push
int
add
xor
jg
xchg
shlb
add
or
fdiv
stc
mov
insl
rolb
mov
popf
mov
nop
aaa
push
sub
mov
push
in
enter
in
fldt
sub
es
push
push
icebp
jb
inc
push
jmp
cli
pop
outsl
cs
sahf
xor
emms
add
fucomi
xchg
or
jmp
aam
pop
mov
push
mov
in
dec
add
inc
mov
sub
gs
fnstsw
sbb
push
mull
add
ds
inc
xor
nop
cmc
push
scas
testl
fimuls
test
add
out
in
xchg
pop
sarb
add
lcall
jg
sbb
out
in
xor
xor
xor
add
add
add
popf
sub
loope
rorl
movb
push
push
mov
neg
addl
pusha
mov
pop
add
add
pop
pop
sub
pushf
and
xorl
rorb
fimull
and
les
jbe
clc
out
add
push
inc
pusha
pop
xor
testb
cmp
pusha
scas
xchg
add
add
jmp
and
pop
mov
dec
add
sbb
cmp
scas
ret
mov
popf
mov
add
sbb
push
sbb
ja
jecxz
repnz
decl
pop
lea
das
cmp
ds
dec
outsb
pop
inc
aaa
movsl
nop
cmp
mov
add
lret
jno
add
pop
or
sub
pushf
push
in
add
ds
push
fcom
mov
cmpb
or
lcall
in
pop
add
insl
xor
clc
mov
dec
leave
inc
scas
rolb
dec
lret
add
icebp
sbb
lcall
std
fwait
insb
movsl
pop
adc
ret
jno
add
sbb
add
arpl
pop
popa
adc
testl
in
lock
and
xchg
mov
adc
mov
xor
and
mov
gs
incl
push
inc
jge
ss
sub
sub
pop
popl
or
xchg
in
or
call
add
mov
xchg
out
jae
add
cmp
rorb
sub
mov
das
pop
mov
pushf
add
repnz
sub
cwtl
jbe
lcall
mov
mov
out
setbe
loopne
add
dec
bound
xchg
iret
loopne
add
shll
pop
movsl
incl
out
jbe
jae
xchg
sub
loop
push
xor
push
mov
mov
mov
push
popa
stos
sub
inc
shlb
xchg
ret
mov
cs
aad
sub
add
mov
xor
hlt
lods
pusha
pop
btr
jbe
add
pop
jno
jg
and
lret
add
cltd
push
test
inc
mov
ret
shrb
jne
pop
and
pop
jmp
sub
sbb
popf
sbb
push
dec
aam
lret
xor
lods
mov
pop
add
adc
js
aas
jo
adc
pop
incl
add
mov
mov
movsb
ljmp
pop
mov
dec
lock
arpl
add
pop
push
dec
cmp
out
out
mov
orb
and
add
loope
xor
cld
xlat
dec
pop
mov
sub
push
popl
dec
xchg
pop
sbb
jecxz
ret
scas
dec
ror
sbb
jmp
rolb
adc
jne
push
lock
repz
insl
sarb
stos
loop
out
je
aam
or
mov
in
subb
push
mov
mov
loop
loope
cmc
inc
and
sub
je
jnp
sbb
pop
pop
inc
jne
and
sbb
add
xor
scas
jb
mulb
outsb
xlat
movsb
add
cs
ljmp
fbstp
pop
dec
add
je
outsb
add
rolb
jge
ret
push
mov
dec
jno
jg
and
stc
js
aaa
lahf
sarl
out
pop
aam
aad
add
mov
push
addl
sete
and
movsl
mov
ficoms
xchg
dec
cmpsl
orb
inc
add
mov
adc
icebp
jno
adc
and
xor
pop
mov
ss
out
xor
pop
add
pushf
inc
jnp
ror
loopne
ret
sbb
xor
add
adc
add
test
xor
push
test
push
fisubrl
mov
ret
pop
ljmp
inc
lods
or
in
lds
in
sbb
pop
add
pop
pusha
cmp
out
call
dec
push
mov
inc
add
sub
pusha
push
into
push
mov
inc
daa
rorl
push
xchg
add
fxch
int
jmp
mov
sub
push
jg
push
and
ja
inc
or
aaa
scas
add
dec
popa
stc
cltd
not
add
mov
loope
das
aam
out
and
loopne
add
jecxz
xchg
mov
test
in
push
cld
test
sti
inc
outsl
hlt
js
add
addw
sub
xor
jo
sub
mov
imul
leave
adc
and
xchg
or
ret
das
jbe
rorb
push
fdivrl
or
add
jge
call
lcall
push
repz
dec
push
inc
jnp
add
mov
add
mov
mov
adc
inc
push
lret
mov
cmp
jns
push
outsl
xlat
icebp
pop
ljmp
push
push
out
push
xchg
inc
int3
imull
fldcw
pop
cmp
sub
dec
cmpsl
pop
orl
outsb
and
xchg
cmp
sbb
rol
imul
int
cmp
cmpsl
cmpsl
cmp
sub
jge
mov
or
out
xchg
and
xor
mov
or
loope
push
or
ja
movsb
lds
jb
mov
popf
sbb
push
or
push
sbb
insl
mov
add
jmp
gs
push
popl
out
sbb
xchg
cwtl
push
add
sub
add
cltd
mov
sbb
lods
rolb
and
push
aad
xchg
push
into
jb
stos
lock
daa
sbb
and
shlb
outsb
push
inc
pusha
cld
ja
mov
fcoms
loop
rcrb
add
test
repnz
inc
loop
or
xor
pushf
icebp
imul
outsl
fmull
lcall
sub
and
add
xor
int3
mov
loopne
jecxz
ret
mov
call
shll
repnz
outsb
scas
ss
dec
mov
push
xchg
add
out
xchg
push
cmp
sbb
push
jne
in
push
mov
jl
pop
fldl
cmp
es
lret
jg
push
insb
ds
push
sahf
das
shll
dec
mov
push
add
add
push
mov
inc
cmp
cmp
jle
hlt
push
and
pop
sarb
lock
aad
in
push
enter
imul
add
xchg
test
and
and
add
clc
add
xorl
inc
jne
ficoml
pop
xor
adc
or
push
xchg
pushf
dec
jno
ja
scas
sbb
nop
or
jle
adc
in
and
pop
cmp
or
sbb
loopne
cltd
std
add
add
jp
add
inc
out
and
add
dec
xchg
dec
lods
push
cmpsl
add
dec
sti
mov
dec
stos
xor
xor
addr16
jne
adc
add
pop
test
cli
jecxz
mov
stos
or
sbb
cmp
pop
and
js
add
fisubrs
mull
inc
rolb
ss
bound
mov
xchg
cmp
cmc
cpuid
movsl
cld
cmp
les
sbb
sub
mov
adc
add
sub
bound
movsb
xchg
sub
fucomp
or
mov
cmpsl
insb
rorl
push
jmp
xor
mov
pop
mov
mov
pop
sti
dec
dec
ret
add
les
jno
add
outsl
push
mov
outsb
cmpsl
sbb
mov
daa
imul
stc
add
sbbl
mov
aaa
add
push
fs
popa
test
iret
push
pop
pusha
pushf
out
jmp
pop
push
lods
insl
movsb
add
lret
jp
sahf
jge
add
aaa
lods
loopne
adc
or
aas
cmpsl
add
mov
sar
xchg
fldt
and
mov
pop
mov
lcall
cmp
cmp
add
testl
and
mov
test
dec
xchg
sub
lcall
fs
or
cmp
mov
xor
ffree
xchg
sbb
or
and
dec
jecxz
loop
mov
xchg
mov
fsubrs
add
inc
adcb
stos
cltd
xor
stc
xorb
inc
and
push
imul
iret
xor
movsl
sti
sbbb
ds
mov
mov
stos
or
pop
dec
cmpsl
and
aad
push
mov
cmp
inc
pop
ret
out
loop
call
add
jp
fwait
or
xchg
lds
dec
jg
push
bound
add
mov
mov
aaa
or
iret
sub
sbbb
add
cmp
mov
jae
btc
xchg
mov
adc
xlat
add
movsl
mov
jp
sub
cmp
xor
gs
outsb
clc
ret
jb
push
dec
cmpsl
xor
repnz
sbb
lret
loop
pop
dec
mov
mov
add
lock
lods
arpl
jnp
mov
mov
das
cmc
add
xor
xor
aam
mov
dec
stc
add
pop
sbb
jo
cmp
inc
scas
dec
and
mov
sti
mov
add
mov
popa
sbb
lock
xor
xor
push
aad
xchg
lret
and
fcmovbe
test
cmp
jle
call
movl
add
stc
push
xor
dec
int3
shr
dec
dec
int3
movl
pop
or
push
repz
lods
or
test
sbb
test
dec
fsts
push
test
loope
mov
xor
inc
rolb
push
mov
pop
push
test
insl
movsb
mov
mov
rorb
ret
stc
sub
add
fsubl
gs
pop
pop
out
add
std
push
dec
sub
fcoml
mov
paddd
add
pop
xchg
cmp
add
sbb
sti
icebp
outsl
push
shll
dec
hlt
jl
pop
jno
cld
dec
sbbb
xchg
cmp
push
mov
adc
mov
push
mov
push
cmpsl
lret
call
mov
jo
push
fidivrl
xchg
adc
sub
and
ficompl
or
jge
arpl
cmp
adc
adc
adc
idiv
roll
mov
jmp
ja
push
loope
out
ds
jge
lods
loopne
pusha
hlt
push
mov
je
mov
test
adc
add
and
fmuls
jg
mov
inc
cmpsb
dec
add
add
jecxz,pt
cmpl
mov
jb
mov
lock
add
or
int3
jl
pop
mov
mov
jo
push
push
push
rclb
mov
aaa
jno
mov
lds
jg
loope
aam
jg
pop
nop
das
xchg
test
jns
sub
add
pop
mov
stos
xchg
adc
dec
mov
out
and
jo
pusha
insl
mov
xchg
enter
push
push
cmpsb
ja
pushf
rcrl
jmp
shrb
jns
iret
test
frstor
pop
xchg
dec
repz
mov
lods
mov
add
add
push
mov
jae
cmpb
scas
adc
mov
and
mov
in
jge
cwtl
mov
add
sub
mov
xor
mov
fsubp
test
dec
incl
popa
aam
fidivrs
add
inc
xor
or
mov
sub
push
xchg
add
js
test
xlat
in
add
jg
mov
enter
and
xchg
add
loope
ret
mov
adc
pop
adc
das
pusha
movsl
fstpl
out
clc
repnz
xchg
lcall
pusha
inc
xor
sbb
push
add
mov
call
loopne
xor
jmp
lea
jnp
sbb
shlb
negb
sub
std
cmpsl
mov
and
mov
shll
std
dec
enter
pop
or
dec
or
js
mov
outsl
add
mov
xchg
out
pop
pop
orb
pop
in
aad
xor
or
lret
dec
lods
adc
jbe
add
mov
push
adc
cmp
shlb
stos
and
stos
push
add
ljmp
adc
and
pop
addr16
cmc
movsb
inc
xchg
dec
das
mov
hlt
in
cwtl
cmp
xchg
inc
jb
inc
add
mov
clc
pop
xchg
or
popf
add
mov
aam
rorb
jmp
enter
mov
outsl
pop
fcoml
dec
dec
in
sub
pop
fcoms
pop
inc
loopne
pushf
mov
or
pop
inc
movsb
sub
cmpsb
jg
faddl
lea
dec
add
and
adc
loopne
dec
adc
aam
loope
inc
fdivl
movsl
pop
push
nop
testl
mov
xchg
in
xchg
add
mov
push
xchg
xor
outsl
loopne
pop
ret
ret
lea
pushf
cli
test
inc
into
and
mov
pop
pop
outsb
notb
into
inc
xor
xchg
dec
iret
int3
lods
cwtl
adc
cld
addl
xor
xchg
icebp
lcall
mov
xchg
pcmpgtb
or
xor
push
or
je
xor
rcrl
adc
setb
test
xchg
adc
or
add
cltd
jae
adc
jp
ret
dec
popf
test
mov
in
in
add
call
push
adc
in
and
pop
sbb
jnp
push
jbe
loope
loopne
je
push
mov
push
int3
sub
dec
xchg
cmp
mov
loope
ficomps
mov
add
pop
jg
pop
enter
mov
mov
sub
out
das
xchg
ret
push
cld
add
xor
sahf
and
jae
js
test
mov
lcall
push
xor
pop
pop
mov
adc
jl
in
aas
add
pushf
sbb
sbb
test
push
gs
mov
pop
dec
pop
jae
jne
add
adc
inc
adc
adc
jle
dec
xchg
loopne
jecxz
push
bsr
movsl
push
int3
je
rclb
cmpb
xor
push
mov
adc
xchg
ja
mov
mov
jl
jno
add
movl
or
mov
and
decl
sub
pushf
add
and
les
mul
mov
cwtl
and
js
jbe
add
movsb
imul
notb
out
add
int3
and
cld
insb
adc
push
mov
repnz
jmp
sbb
cmpsb
push
stos
pop
gs
mov
aaa
inc
unpcklps
sub
mov
sbb
or
pop
mov
push
mov
popa
fildl
outsb
lahf
dec
push
xchg
pop
scas
mov
add
push
subl
and
sbb
dec
xor
shrl
sbb
out
mov
mov
mov
stos
nop
add
and
push
lea
xchg
inc
int
push
enter
add
std
test
inc
ret
push
add
sub
or
cmp
push
pop
fistpl
into
ds
movsl
xor
pop
loope
jmp
fwait
test
fsubrl
pop
mov
rcl
xchg
dec
sarb
int3
inc
cwtl
add
ja
push
popa
lds
dec
mov
jnp
xor
push
pop
jge
push
test
in
mov
push
in
mov
out
jl
ljmp
add
cmp
cs
mov
and
pop
movsb
push
fmuls
leave
sub
adc
cwtl
test
aaa
test
call
dec
mov
lds
sub
jecxz
rol
ficomps
mov
pop
fildll
inc
jae
dec
loope
jp
add
out
lock
or
cmp
adc
or
adc
push
mov
fs
jge
and
mov
cmp
or
insb
adc
push
mov
and
shlb
xchg
dec
inc
repnz
out
pop
and
loope
das
jb
sbb
test
jns
cmp
mov
and
loopne
xchg
in
pop
or
mov
adc
out
mov
lods
repz
sbb
mov
mov
imul
push
xorl
ffree
idivb
fmull
sub
sbbl
dec
in
cwtl
mov
iret
push
cmpsb
add
xchg
xchg
mov
adc
enter
pop
mov
jecxz
gs
add
mov
insb
jo
sub
outsl
sub
xor
sbb
fimuls
fmul
jo
add
out
iret
xchg
mov
add
mov
mov
notb
mov
sub
sub
pop
cltd
pop
hlt
inc
jns
fisubl
push
pop
shlb
add
test
inc
movsb
into
cli
mov
rorl
in
andl
loopne
mov
test
dec
cmpl
mov
ds
fisttpll
daa
cmp
inc
or
jnp
jns
add
push
adc
cmpsb
add
cmp
or
push
xchg
movsb
loop
addb
jo
jmp
pop
testb
cwtl
roll
fildl
or
mov
bound
rol
push
sub
ficompl
rcrb
aad
shrb
inc
xchg
nop
or
mov
rcrb
iret
adc
pop
inc
jnp
pop
push
fisubrl
ret
add
jl
xchg
push
add
mov
les
aam
aad
fs
inc
or
inc
gs
lret
ret
dec
clc
xchg
add
and
mov
inc
xor
in
leave
add
push
das
shr
lcall
outsl
neg
adc
dec
es
iret
pop
mov
pop
fdivrl
rcrb
sub
jo
lahf
mov
pop
and
das
popf
cmc
testb
pop
mov
jge
add
cmp
test
or
or
or
inc
cmp
loope
in
std
or
add
pop
jnp
aam
js
out
add
lods
cmp
jbe
dec
adc
arpl
mov
out
pop
testb
fdivrs
jp
dec
cmp
inc
or
jne
imul
cli
mov
or
pusha
loopne
xchg
adc
hlt
icebp
mov
dec
pusha
jmp
inc
nop
dec
add
sub
nop
addr16
inc
mov
add
js
or
mov
jl
add
sbb
dec
or
stc
adc
cmp
xor
and
testb
incl
test
dec
add
mov
int3
in
sub
push
fdivrl
push
or
xchg
mov
jmp
insb
data16
in
inc
sahf
fadd
lret
sbb
fbld
fs
inc
aas
xchg
nop
and
mov
ds
lret
jo
push
cld
nop
sbb
dec
and
je
add
or
pop
pop
push
daa
fwait
mov
shll
incl
or
sti
lahf
arpl
mov
ja
cmp
add
ss
into
scas
inc
adc
shlb
in
jo
cmp
sbbb
out
frstor
ret
add
mov
mul
popa
add
stos
sbb
push
xlat
and
dec
jbe
jg
and
iret
aaa
pop
testb
add
add
leave
nop
ss
imul
sub
or
cmp
lock
int
out
mov
add
addps
jno
cmc
addr16
pop
out
or
fdivrs
lods
xor
xor
addb
push
jle
je
dec
ret
test
pusha
xor
push
loopne
nop
sldt
out
jne
out
cwtl
mov
leave
call
pop
push
lret
orl
mov
enter
xchg
loope
and
testl
jne
and
fsubrp
and
jb
or
push
rcll
pusha
jbe
push
cmpsb
push
jge
sub
mov
and
es
mov
mov
into
cmpsb
sbb
add
out
sub
mov
xchg
les
and
dec
sbb
sbb
lods
int3
adc
or
jle
mov
mov
or
movsl
in
lods
or
mov
mov
push
int
mov
jbe
pop
jo
jo
pop
dec
pop
js
jl
cli
xchg
hlt
pop
andb
mov
jns
mov
pop
test
add
imull
jno
pop
ss
adc
or
and
xor
cli
jo
sbb
jp
movb
push
mov
or
popa
xor
xor
cmpsl
cmp
xchg
push
mov
shl
imul
pop
push
loopne
pop
ret
inc
sbb
std
dec
orb
psraw
add
fildll
test
das
dec
push
js
fwait
subb
mov
outsl
fisubs
adc
popa
cs
pusha
add
addb
push
scas
pop
inc
mov
xchg
dec
lods
adc
insl
xorb
add
push
in
mov
dec
negl
jb
or
push
dec
jle
push
pop
mov
mov
xor
xchg
icebp
leave
test
xchg
lock
fsts
xchg
add
pop
enter
add
mov
ljmp
jns
dec
adc
or
dec
mov
inc
mov
inc
jmp
jp
sub
ja
cwtl
sbb
sti
jne
dec
imul
mov
sub
fstl
pusha
outsl
movl
pop
test
mov
pop
out
pop
ljmp
push
adc
scas
loopne
out
or
add
adcl
cmp
or
das
pop
cmpsb
sub
push
sarb
pop
xchg
pop
hlt
je
jmp
popa
arpl
nop
or
jo
add
movsb
loopne
jns
add
aam
inc
mov
shrd
mov
mov
fldenv
addr16
mov
xor
sub
pusha
int3
je
push
mov
test
mov
fists
adc
int3
sub
rol
xor
pop
push
jo
mov
lods
mov
gs
notb
mov
dec
and
pop
mov
cmp
push
jo
in
out
or
addl
mov
lea
idivl
pop
cltd
jp
jbe
push
xchg
fcoms
addl
icebp
lds
mov
add
and
lds
mov
subl
push
mov
xchg
cmc
jbe
inc
fmul
js
jne
add
lods
ret
inc
pop
cmp
push
or
inc
mov
and
inc
and
test
sub
fwait
mov
shlb
test
push
cmc
orl
inc
cmp
and
mov
sbb
sub
repnz
test
dec
stc
pop
push
aam
and
or
cltd
or
push
shll
inc
push
add
test
sub
cmp
push
ja
or
cmc
dec
out
mov
xchg
nop
dec
popf
outsb
add
or
pop
cmp
dec
and
dec
shrb
jg
adc
leave
test
add
daa
pushf
push
enter
bound
mov
push
push
push
in
cmp
dec
test
add
faddl
jo
push
mov
inc
mov
push
xchg
subl
fdivrp
xor
test
dec
sbb
mov
test
dec
mov
jnp
mov
mov
xchg
cmpsl
xor
repz
enter
fdivrl
ds
inc
and
mov
movzwl
or
jo
add
clc
mov
add
test
sti
test
inc
cmp
inc
out
dec
lods
sbb
jle
sbb
out
in
aas
xor
mov
jg
add
cwtl
scas
pop
mov
adc
loop
add
pop
jmp
xchg
inc
push
mov
sub
push
fwait
or
lahf
and
push
lock
in
inc
ds
add
lods
insl
into
add
outsb
cmc
push
loope
xchg
sbb
loop
or
fcmovnu
or
addr16
add
add
filds
lea
mov
cmp
pop
mov
loopne
jne
stos
xchg
jle
mov
les
mov
imul
ja,pt
dec
or
iret
es
cmpsb
push
movsl
sub
std
pop
xchg
nop
mov
jae
jae
cmp
sbbb
or
arpl
addb
or
add
dec
or
and
or
fldenv
mov
ret
mov
loop
jp
jae
xor
sub
pop
mov
add
clc
mov
xchg
mov
sub
inc
adc
sbb
pop
mov
in
adcl
xchg
inc
or
int
cmp
and
dec
inc
inc
push
inc
inc
jmp
add
sbb
push
dec
lock
scas
add
jp
mov
or
and
mov
lcall
push
iret
jno
movsl
idivl
add
lods
hlt
adc
pop
add
or
lret
pop
push
xor
push
pushf
sub
pop
cld
pop
rolb
insb
inc
dec
mov
add
fwait
sub
mov
pop
inc
inc
or
movsb
push
adc
jnp
sub
inc
aam
jecxz
and
sbb
cmpsl
pop
cld
fsts
jns
cmp
rorb
ret
pusha
call
cmpsb
test
add
push
mov
mov
insl
sbb
cmpsl
cmc
insb
aam
dec
movsb
fadds
stc
mov
or
ret
add
shll
cmpl
push
mov
push
cmpps
or
jns
lock
xchg
jp
xchg
pusha
dec
loop
in
pop
jno
add
mov
jg
xchg
mov
aam
pop
add
aas
mov
jle
add
mov
rorl
std
add
mov
mov
popa
adc
and
add
sti
mov
cmp
cld
dec
fadds
inc
repnz
dec
jne
mov
mov
sti
outsb
sub
push
pop
mov
mov
or
add
mov
sbb
iret
cmp
loope
pop
outsl
test
adc
sub
inc
cmpsb
lidtl
push
sub
and
jno
jmp
out
xor
daa
mov
pop
mov
fadd
shrb
fs
cwtl
dec
sti
jo
jmp
push
orb
das
icebp
jne
and
loop
adc
pop
lret
lret
inc
cmpsb
fistps
push
mov
outsl
frstor
mov
cmpsb
aas
popa
add
das
jo
xchg
bound
push
push
pop
jle
in
mov
pop
sahf
imul
mov
loopne
xchg
loopne
adc
mov
das
pusha
fcoms
lret
mov
clc
sbb
iret
inc
jl
jnp
cmp
jae
loop
pop
xor
pop
out
ret
negb
push
movsl
xor
divl
dec
inc
add
daa
xor
imul
stc
push
mov
insb
test
jmp
lcall
pop
cmpsl
inc
ljmp
addr16
stos
mov
adc
call
loope,pt
mov
mov
push
outsl
test
xchg
scas
push
hlt
mov
outsb
mov
mov
inc
in
arpl
leave
xchg
adcl
sub
incl
mov
push
jecxz
loopne
adc
inc
pop
pusha
xchg
or
and
xor
and
push
call
inc
sbbb
or
clc
add
lret
adc
inc
orb
mov
repz
bound
and
fadds
add
notb
pusha
addr16
mov
xchg
sar
push
hlt
inc
or
xor
movsl
push
sbb
fisubrs
cmc
add
frstor
nop
inc
nop
gs
mov
jns
fmuls
jmp
cmp
sbb
add
mov
fs
adcb
ja
dec
or
xlat
sbbb
cmp
inc
push
mov
call
cmp
or
sbbb
pusha
and
or
rolb
inc
push
icebp
ja
repnz
in
addl
xchg
mov
mov
cmpsb
aad
hlt
dec
add
test
and
lds
rcrb
or
or
fsubrl
add
add
inc
and
pop
roll
adc
push
dec
ret
sbb
adc
sbb
fldl
pop
jmp
out
add
insb
scas
fldl
mov
outsb
push
push
pop
stc
popl
dec
cmpsb
cmp
mov
sub
inc
jne
or
test
lcall
and
pop
and
pop
in
mov
addr16
xor
jp
les
lods
hlt
scas
xor
cmpsl
add
imul
stos
cmp
add
in
int3
sbb
pop
adc
rcr
jne
jge
add
jbe
jp
sub
in
mov
add
jmp
clc
pop
add
mov
pusha
cmp
call
sahf
and
lret
mov
lahf
and
inc
sub
jle
mov
sbb
xchg
xorb
mov
loope
jecxz
insl
push
xorb
arpl
xlat
dec
out
das
pop
mov
xorb
out
je
mov
add
cltd
sub
or
enter
pusha
inc
in
pop
mov
sbb
idivl
add
sahf
std
mov
or
std
pop
and
dec
mov
jg
sub
push
push
dec
lret
icebp
and
or
pusha
pop
push
adcb
jl
rcll
fdivrl
mov
mov
outsb
add
dec
icebp
jo
in
xchg
rcrb
sub
outsb
and
xchg
push
ds
aas
sbb
movsl
mov
pushf
push
scas
andb
add
mov
mov
mov
shll
iret
cmp
clc
shrb
lods
test
cld
add
jle
outsl
xlat
push
xchg
fstl
jb
cmpl
std
or
and
loopne
in
and
inc
jb
ror
cmpsl
ss
scas
inc
iret
push
mov
std
cmpb
lcall
gs
clc
pop
aam
inc
cli
test
push
xchg
ficomps
xchg
push
xchg
xor
int
bound
xchg
jg
inc
lret
pop
call
popa
push
iret
fistps
popa
test
sbb
cwtl
cmpsl
icebp
jl
and
mov
repnz
jg
xchg
adc
in
inc
cld
inc
ret
mov
mov
rclb
data16
imul
mov
out
xchg
mov
sti
clc
pop
and
les
mov
mov
inc
mov
jmp
inc
rorb
rclb
jge
notb
add
pop
or
sbbl
fisubrl
and
iret
mov
rorb
ds
adc
rdtsc
push
cli
pop
inc
roll
or
repz
xor
sbb
jne
lea
mov
or
repnz
jae
push
in
add
sahf
sub
pop
sbbb
stc
mov
shlb
pop
lods
sub
adc
adc
push
addr16
mov
ror
add
fdivs
pop
out
ljmp
jb
ficomps
test
push
roll
lds
dec
mov
xor
sub
sbb
inc
out
dec
xchg
fs
pop
outsb
cmpb
adc
dec
cmc
adcb
addb
xchg
dec
xor
push
rcrl
into
inc
inc
jns
jns
add
cmp
dec
subl
adc
jmp
outsb
test
add
testl
andb
pop
add
add
insl
inc
sub
inc
inc
or
mov
add
daa
lcall
inc
insb
dec
inc
mov
mov
lods
icebp
fwait
push
xorl
xchg
sbb
bound
data16
cld
add
emms
adc
loop
pushf
pop
add
cmp
jbe
test
sub
xlat
cmpsb
cmp
sub
mov
push
mov
sbb
sub
enter
sarl
xchg
inc
std
mov
inc
out
xchg
and
add
hlt
pop
test
mov
push
and
pusha
pop
cmpsl
leave
inc
push
jnp
fmull
out
sbb
ret
hlt
cmp
adc
call
mov
hlt
in
rolb
sub
imul
js
fld
loope
stos
jo
mov
or
lods
or
cmp
sbb
inc
leave
mov
inc
adc
add
pop
aad
mov
loopne
xchg
adc
jmp
jecxz
loope
push
imul
adc
out
jl
inc
and
ds
xchg
cld
inc
rolb
sbb
pop
popa
jge
mov
cmpsb
add
sbb
xchg
push
cmp
jp
stc
sub
ret
mov
mov
xchg
jo
popf
popa
out
adc
xchg
sbb
mov
or
gs
loopne
push
adc
add
ret
mov
or
jo
cli
add
ficoml
lret
sub
dec
mov
icebp
fldl
arpl
xchg
movsb
and
push
add
aam
lahf
mov
adc
xor
add
pop
fnstsw
or
ja
shll
adc
lods
inc
jns
push
add
jns
leave
cmp
jl
and
xor
test
aaa
out
jns
add
push
repz
les
hlt
insb
iret
cmp
in
mov
sbb
clc
test
jb
loopne,pn
cmpsb
xor
cmp
cmp
adc
pop
in
adc
in
imul
mov
xchg
cld
icebp
pop
sub
and
mov
call
les
pop
jo
add
in
lds
shlb
into
mov
imul
jmp
jb
or
adc
ficoml
ficoms
push
dec
bound
mov
pop
pop
aam
add
daa
dec
ret
xchg
pushf
loop
pusha
fcom
jmp
stc
and
mov
add
das
mov
inc
gs
in
xor
imul
loope
scas
adc
adc
dec
sbb
push
cs
push
mov
sti
dec
mov
data16
push
fisubl
addl
jns
nop
push
lds
adcb
stos
ficomps
dec
inc
inc
pop
sub
sbb
call
mov
lea
add
cmc
sub
and
ds
outsl
inc
fstl
rcrb
iret
push
subb
mov
outsb
add
into
movsb
outsl
add
pop
jg
jbe
or
inc
jnp
ja
leave
and
das
adc
mov
loopne
sub
ret
fidivl
adc
lret
dec
cli
and
push
and
add
aas
popf
out
jl
adc
aas
cmp
mov
jge
pop
sub
imulb
div
add
fnstenv
or
imul
cs
les
or
sbb
xor
aam
inc
cmp
sub
jae
add
pop
push
mov
mov
ficomps
mul
push
nop
xchg
pop
mov
mov
xor
xchg
not
add
inc
aas
insb
adc
add
mov
cld
sub
xchg
push
lods
add
loopne
pop
sub
fbld
js
js
adc
sbb
mov
and
movl
mov
or
xlat
add
pushf
jp
shlb
mov
cmp
insb
js
add
jo
mov
js
add
sub
pop
daa
test
mov
ljmp
mov
inc
int3
fstpl
test
call
stos
push
xchg
roll
inc
lds
dec
xchg
mov
dec
test
aas
or
add
sarl
out
or
adc
shlb
das
dec
sbb
mov
cmpsb
out
xchg
pop
add
push
mov
add
cld
add
pop
sub
mov
add
aaa
std
lahf
loopne
sub
mov
cltd
and
xchg
pop
fld
ret
std
and
mov
lock
popf
and
sbb
dec
xor
jl
add
push
call
in
lock
jmp
push
jecxz
int
cmp
mov
out
je
xor
push
mov
add
dec
sahf
fisubl
mov
pusha
dec
pop
jecxz
sub
jo
cmc
cs
xor
out
testl
sub
push
jnp
fisttpl
loopne
pop
adc
stos
push
fadds
jae
jmp
sub
lea
or
cmp
push
mov
sub
jb
mov
or
lahf
xor
dec
pushf
push
xchg
ja
add
push
sbb
cwtl
adc
daa
insb
cs
addl
add
add
xchg
push
int3
stc
xor
or
ds
dec
or
rorb
inc
andl
push
mov
xlat
jb
mov
cs
in
nop
mov
dec
push
mov
xorb
fnstsw
fnstcw
dec
cmc
ret
adc
mov
xchg
ljmp
and
scas
push
into
mov
outsb
add
shlb
out
ja
aam
pop
and
scas
add
or
sbb
fidivrl
in
call
call
mov
cmp
push
movsl
mov
lahf
inc
jle
mov
test
orl
mov
sbb
or
xlat
add
dec
jge
cmp
cmp
dec
fdivs
sub
mov
pop
mov
roll
sarb
xchg
jbe
pop
and
add
xchg
push
or
fistl
cs
dec
and
imul
inc
mov
add
loopne
add
pop
gs
and
cmpsb
lcall
hlt
push
les
lock
cmp
xchg
cmp
mov
mov
cmpsl
nop
push
imul
dec
out
mov
adc
push
add
jo
fstpl
outsl
jg
insb
cmc
dec
sub
add
mov
jne
rorl
roll
movsl
lea
inc
add
aam
loop
add
and
lods
or
xor
add
daa
ds
xor
mov
cmovle
outsb
faddl
or
mulb
addr16
cmp
scas
repz
outsb
pop
call
cld
add
pop
sub
pop
subb
jns
add
sub
or
bound
jecxz
loope
adc
icebp
xchg
repnz
adc
gs
xor
test
and
xor
adc
push
push
mov
stc
loopne
xchg
jmp
hlt
mov
daa
jne
shll
stos
dec
imul
jp
cmp
inc
cmp
pop
sahf
inc
add
out
fiadds
jbe
mov
pop
jecxz
cli
fcom
fsubrs
sti
test
and
xchg
icebp
mov
mov
addr16
std
push
xchg
mov
add
add
pop
andb
std
pop
jl
lret
pop
push
xor
lods
into
mov
add
in
loopne
scas
xchg
cltd
sub
jle
add
in
movsl
fmul
push
push
add
hlt
mov
lret
mov
adcb
movsl
mov
add
in
in
in
mov
dec
ds
adc
in
pop
fisubl
cmp
dec
mov
xor
das
add
add
pop
push
scas
lret
repnz
xchg
dec
add
sub
push
dec
jg
mov
adc
mov
inc
je
out
mov
and
outsb
scas
pop
pushf
or
test
pop
or
out
and
out
pusha
jg
push
mov
inc
dec
ret
sbb
add
ret
bound
mov
cmp
fisttpl
jecxz
shr
mov
inc
ret
addl
out
xchg
movb
testl
pop
loope
or
add
sbb
mov
or
mov
mov
std
add
addr16
or
cltd
add
jge
mov
pop
data16
test
xor
inc
stos
or
push
or
mov
jecxz
dec
andb
aam
andb
outsl
popf
sub
stc
mov
mov
test
jg
dec
push
mov
int
mov
pop
aad
inc
dec
movsl
push
mov
pop
add
sbb
sbb
xor
adc
pop
mov
push
xor
mov
add
mov
mov
jle
cmp
inc
cmpb
imul
xchg
jbe
mov
mov
dec
dec
xchg
pop
call
popa
mov
mov
insl
push
ja
push
cmp
mov
ret
sub
jnp
mov
nop
or
push
xchg
movsl
test
addb
and
push
mov
pop
jae
paddusb
inc
outsl
push
mov
xchg
cmp
rcrl
mov
xor
pop
dec
cs
stc
cmp
push
or
xchg
adc
sub
jo
cmp
add
rclb
or
inc
mov
mov
push
mov
fdivp
adc
mov
lcall
and
cmc
push
fs
dec
and
jns
pop
xlat
movsl
inc
mov
jg
jns
or
inc
jnp
mov
lods
lock
and
addr16
add
cmp
inc
pushf
jmp
rclb
cmp
cli
popf
add
mov
dec
xchg
cli
cmp
call
ret
roll
dec
inc
adc
call
imul
das
dec
iret
fisubl
icebp
mov
movsb
add
mov
add
mov
jo
pop
jge
movl
jnp
add
adc
subl
push
lret
mov
lods
cli
stos
and
ret
mov
sub
pop
cmp
std
popa
or
frstor
or
mov
add
add
pop
cmc
or
outsb
rol
mov
bnd
add
mov
mov
push
jmp
and
out
cmpsl
sub
xchg
scas
add
in
std
lock
stc
stos
xchg
mov
add
cltd
cmpsl
add
repz
in
xchg
lods
es
inc
ja
pop
scas
xlat
cmpsb
mov
lea
cld
or
add
imull
jle
movl
or
sbb
mov
pop
or
xlat
lret
xor
out
pop
push
adc
cmp
push
lahf
in
dec
jns
or
jl
inc
hlt
pop
roll
fidivs
arpl
cmp
mov
and
pop
and
push
mov
add
push
xor
lock
push
xchg
or
jb
pop
add
scas
lods
mov
add
push
inc
ds
push
inc
pop
add
mov
adc
cwtl
mov
repnz
clc
loope
inc
pushf
add
cmp
xchg
add
push
loope
mov
push
or
xchg
push
mov
push
jl
push
stc
pop
pop
clc
cmpsl
mov
push
mov
clc
pop
add
xlat
rcrb
sbb
pop
or
inc
mov
xchg
jnp
int
nop
add
add
mov
inc
movsb
gs
fildll
lods
push
add
aad
fisubl
add
mov
push
pop
mov
dec
std
or
pushf
push
movsb
mov
test
and
mov
ret
test
sub
sub
mov
lods
sbb
incl
lsl
mov
add
jbe
pushf
mov
sub
adc
lds
pop
lret
outsb
sub
cmpsb
mov
pop
mov
sar
dec
xchg
rorb
mov
mov
ret
xlat
inc
pop
push
jo
pop
aam
test
sub
push
adc
rcrb
push
xor
es
sub
out
sub
inc
hlt
hlt
dec
fcomps
and
pop
mov
jmp
stc
loopne
out
dec
pop
inc
cld
xchg
lmsw
pop
popa
sbb
insb
cltd
pop
daa
add
xlat
in
fmull
mov
dec
jle
or
mov
jbe
pusha
pop
mov
neg
add
adc
outsb
fldcw
push
lret
mov
pop
lods
mov
sarl
jns
scas
cmp
add
mov
and
aaa
rorl
cmpsb
int3
cmp
stos
cmp
mov
mov
pop
int
jb
rolb
sti
or
xchg
out
aam
dec
sbb
jge
movsl
xor
xor
dec
movsl
sbb
xchg
int3
mov
out
jae
xor
push
cld
nop
adc
cli
add
cmp
into
mov
shlb
mov
aas
fiadds
jae
add
loopne
ret
push
daa
push
jl
icebp
jmp
xchg
and
pusha
xor
inc
push
add
rclb
lock
arpl
gs
loopne
mov
ss
xor
in
dec
inc
test
jae
jl
add
sarb
lret
fnstsw
test
and
jl
jbe
mov
mov
push
mov
test
adc
add
and
adc
dec
xchg
subb
ss
xchg
popa
sti
push
or
imul
inc
mov
add
sub
pop
mov
data16
dec
jb
push
daa
leave
pop
mov
aas
dec
push
push
jno
in
sub
or
sub
scas
add
icebp
mov
notl
cmp
mov
add
sbbb
xchg
pop
lods
test
mov
hlt
scas
scas
add
aas
lods
dec
pop
pop
dec
add
xchg
movsl
int3
shrb
sub
cld
ja
sbb
movsl
repnz
scas
sub
flds
mov
pop
sbb
adc
mov
and
or
sub
out
jmp
and
rorb
add
xchg
mov
inc
fwait
divb
pop
inc
push
push
loope
int
adc
add
mov
hlt
movb
test
shll
inc
mov
dec
js
dec
push
push
cmc
test
bnd
add
inc
je
jae
mov
aad
sbb
bound
out
ret
clc
pop
xor
push
jmp
add
pop
push
enter
cwtl
aas
xchg
inc
adc
movsb
adc
out
mov
sub
xor
pop
add
xchg
loop
in
pushf
jo
dec
sub
cwtl
mov
jmp
rcrl
test
repz
pusha
mov
jb
in
pop
stos
cli
dec
std
mov
outsb
sbbb
xchg
inc
repnz
adc
filds
xchg
vorpd
out
mov
stos
andb
rep
shll
add
inc
mov
jp
sti
mov
call
ss
adc
inc
adc
pop
mov
adc
push
pop
fsubrs
pop
cmp
js
pusha
push
mov
adc
or
xlat
add
mov
push
in
popf
mov
jp
inc
pop
les
add
cltd
mov
ret
adc
mov
aaa
mov
cwtl
les
adcb
lea
add
and
add
shlb
cmp
and
mov
imul
les
aad
sub
xchg
sub
inc
mov
js
add
in
pop
insl
mov
andl
les
test
das
inc
dec
mov
xchg
pop
loop
lahf
fisubs
inc
or
stos
addr16
loopne
ret
pop
cmp
push
popf
lock
sub
push
add
or
sbb
jle
jb
inc
int3
jns
pop
xor
sarl
repz
or
xor
fbld
xchg
dec
mov
adc
or
push
pop
loop
idivb
mov
bound
add
push
mov
jle
rcrb
repnz
push
shr
shlb
ret
mov
loop
ja
xchg
pop
push
mov
or
mov
insl
sbb
jne
add
test
pop
pop
mov
pinsrw
add
push
shlb
je
inc
add
mov
inc
nop
in
push
mov
xchg
clc
add
lret
mov
rol
pop
lds
adc
and
clc
popf
in
imul
movsl
mov
sbb
test
arpl
adc
xor
xor
jg
or
ljmp
and
jno
jecxz
cmp
or
push
jg
ds
cmp
push
add
xor
scas
adc
and
jl
add
dec
mov
subl
in
sub
sti
sub
fbld
mov
test
outsb
andb
fisubrs
sub
inc
rorl
or
pushf
incl
jl
adc
mov
lahf
inc
shrb
xchg
xor
cld
std
and
adc
adc
into
dec
xchg
inc
mov
inc
rol
xchg
in
cmp
out
mov
dec
les
add
mov
xor
shrb
adc
dec
loop
lahf
loope
cmp
in
pop
mov
js
pop
jp
adc
add
ds
inc
and
subb
sarl
adc
repnz
adc
push
mov
adc
dec
shl
add
out
jb
mov
adc
jbe
push
pop
pusha
sbb
push
mov
push
jb
jecxz
ret
sub
add
or
lret
outsb
pop
mov
hlt
test
inc
jb
push
or
cld
mov
loopne
pop
out
sbb
mov
and
pop
hlt
and
add
cltd
mov
mov
clc
mov
stc
adc
lahf
mov
daa
lcall
and
pop
stos
adc
xor
cld
adc
in
sub
pushf
sbb
test
or
mov
lret
es
or
and
mov
xorb
int
adc
fadd
dec
push
stos
or
sbb
cmpsl
out
cs
jno
loopne
subb
loopne
nop
nop
fiaddl
lock
movsb
add
leave
mov
push
and
xchg
sbbb
or
dec
int
arpl
or
sub
sub
popf
mov
ds
mov
inc
aam
in
sbb
cmp
push
stos
push
and
jp
add
jae
push
xchg
xor
and
and
pop
cmpsb
add
pushf
lret
dec
mov
sbb
fcomps
arpl
adc
cmp
jne
dec
mov
dec
mov
jecxz
add
outsb
ja
lods
mov
push
lea
push
push
pop
or
fdivrs
inc
shl
imulb
and
dec
aaa
add
push
rolb
sub
add
xor
nopl
sub
daa
gs
imul
inc
adc
jg
xor
fldt
addl
xchg
and
sti
adc
neg
sub
je
push
pop
sbbl
lret
pop
xchg
mov
or
lods
in
sub
adc
add
add
fildll
je
pop
call
insl
dec
repnz
loop
mov
adc
inc
xchg
movsb
lahf
push
outsb
xchg
xor
add
inc
bound
jb
adc
mov
clc
jp
mov
orl
fmull
push
mov
imul
mov
repz
sub
sbb
cmp
or
lret
lcall
pop
cmp
xchg
add
push
jno
adc
stos
stos
add
and
out
sub
add
fbld
rol
imul
lds
inc
jb
adc
iret
pop
pop
add
pusha
std
cmp
inc
mov
sbb
sub
add
shlb
jg
outsl
test
xchg
or
or
pop
and
jp
lcall
mov
add
push
inc
or
sbb
and
push
test
mov
ss
test
xchg
test
mov
repnz
lods
lods
imul
insb
cltd
repnz
sbb
jne
cmpl
sub
cmp
loop
xor
loopne
test
sub
call
sbb
cltd
dec
lock
daa
loop
out
clc
sbb
push
push
mov
icebp
dec
movsl
paddusb
jg
inc
out
fldcw
mov
stc
jmp
dec
xchg
xchg
xchg
cmp
sahf
inc
pop
xchg
push
push
cld
fisttps
out
movsb
insb
push
sti
adc
xor
iret
bound
mov
and
loope
push
imul
add
jnp
jl
lea
inc
pop
or
cmpsb
jmp
sbb
adc
incb
fistps
repz
xlat
mov
jp
pop
add
mov
cltd
mov
xor
adc
push
dec
mov
lods
push
js
add
sub
or
imul
int3
maxps
cmp
push
xor
jg
cmpsb
push
push
mov
cmp
add
test
sub
xor
add
cmp
enter
data16
or
cld
aam
stos
mov
fwait
orb
daa
xor
icebp
std
mov
mov
lret
test
mov
idivb
cld
fdivp
jae
lcall
sbb
iret
stos
inc
movsb
push
lret
repnz
mov
dec
sub
cwtl
les
repz
pusha
dec
call
movsb
repnz
testl
push
pop
mov
or
and
das
test
push
shll
sub
sub
sbb
pop
in
push
mov
cmp
shrl
jnp
aas
inc
jp
fcomip
pop
popa
lahf
or
sahf
push
push
add
test
mov
jbe
mov
les
adc
and
cmp
xor
stos
inc
cmp
jle
add
call
rorl
mov
icebp
subb
js
cmp
jns
cwtl
sahf
add
push
sbb
and
dec
loopne
xor
lock
cmc
dec
cmp
pop
adc
xor
xor
push
inc
andl
popa
sbb
pop
ja
push
fstpt
mov
mov
jb
int
xchg
sbb
not
lock
dec
repz
lods
cmc
mov
loopne
pop
adc
pop
mov
sbb
push
add
cwtl
inc
jae
mov
adc
dec
push
add
out
push
cld
pop
mov
movl
int3
push
fsubrp
add
dec
fdivs
test
or
push
push
lret
loopne
or
pop
push
sbb
adc
cli
movsb
lcall
jne
sub
push
push
loop
imul
stos
adc
sub
pop
test
movsb
lods
aas
pop
aas
shll
pop
ds
ss
inc
lcall
popf
pushf
fidivrl
cld
adc
push
mov
xor
sti
arpl
pusha
cmp
push
movsb
lods
rorl
pop
lock
push
std
repz
push
mov
lahf
pop
inc
js
mov
gs
psubsb
adc
cmp
mov
push
pusha
vmread
push
inc
fidivl
ja
sti
add
mov
movsl
call
add
inc
pop
mov
sub
dec
or
out
mov
mov
dec
pusha
xorl
enter
add
pop
mov
cmp
mov
add
xor
mov
or
pop
faddl
test
js
scas
inc
in
inc
daa
mov
add
xchg
add
add
and
lods
inc
sub
add
mov
arpl
adc
mov
mov
cmp
xchg
or
loope
jnp
movsb
sbb
insb
loop
lock
mov
fld
cmc
xchg
loopne
les
xchg
pusha
popf
cmpsl
int
syscall
jne
bound
push
scas
lcall
into
cld
pop
nop
add
jecxz
xorb
mov
xchg
in
nop
sub
ret
and
cld
dec
dec
xchg
push
cmpsl
mov
sbb
mov
es
mov
add
ds
negb
mov
inc
push
add
xchg
mov
dec
and
jecxz
insl
add
ss
xor
popa
push
popf
cmp
mov
and
bound
mov
mov
lea
notb
or
and
adc
dec
xchg
daa
mov
shl
ret
andb
jmp
push
mov
mov
cmp
bts
mov
pop
cmpsb
jno
jg
adc
mov
pop
push
mov
add
mov
xchg
and
hlt
or
addl
in
mov
lret
and
push
pop
dec
dec
sti
pop
popf
push
aad
js
lods
or
sbb
jo
push
lgs
sbbb
loope
sbb
pop
or
mov
lret
cmp
and
call
es
pushl
dec
inc
mov
popf
fmull
push
test
ljmp
mov
lds
sbbl
mov
xchg
inc
jp
add
push
loop
fsts
add
orb
imulb
imul
leave
dec
test
xor
ret
je
mov
mov
or
orb
and
mov
mov
xor
int
add
roll
add
inc
mov
add
mov
shlb
sarb
loop
mov
and
mov
je
inc
add
adc
test
push
ret
or
lahf
test
sarl
outsb
icebp
mov
cwtl
rcrl
int3
jo
sub
mov
es
and
loopne
testb
push
or
xlat
and
adc
idivb
pop
mov
add
dec
adc
xchg
sbb
add
jne
cmpsb
mov
dec
pop
outsb
pop
mov
aam
inc
add
mov
xor
and
cld
sbb
std
clc
enter
shrb
pop
jl
inc
in
test
fcoms
or
in
out
mov
mov
fcomps
mov
and
imul
xchg
lret
sbb
cmp
shll
pushl
mov
push
outsb
icebp
add
in
sub
pop
push
and
jne
or
add
ja
in
arpl
sbb
cmp
scas
nop
pop
add
call
pusha
add
cmpb
push
arpl
xchg
or
rolb
xlat
pop
lea
add
pusha
add
outsl
add
add
bound
mov
movsb
dec
fnstcw
fucomi
xchg
jmp
dec
sub
inc
ficompl
and
pop
out
add
push
mov
inc
adc
adc
xor
xchg
or
js
int
scas
xor
data16
adc
push
and
scas
rcr
add
add
das
fwait
adcb
sub
daa
sub
lock
imul
insl
mov
sbb
cmpsl
outsl
enter
pop
sbb
xchg
insb
jl
ret
out
mov
aam
or
dec
addb
dec
xor
nop
push
add
cmpsl
jae
mov
leave
popa
mov
adc
and
cmpsl
sbb
mov
jge
cld
sbb
adc
filds
int3
dec
inc
repz
call
pop
sub
popf
out
push
imull
fistl
jno,pn
xor
rorl
in
pop
lea
push
xor
fwait
aas
mov
mov
loope
pop
xchg
or
lods
sbb
aas
sbbb
lods
mov
xor
mov
pop
in
aas
fisubrl
xor
mov
cmp
push
insb
es
dec
xchg
push
lahf
add
pop
cmpb
sub
out
add
push
sarl
pusha
add
aaa
push
cmp
les
push
loope
fsubs
cmp
or
push
mov
bound
add
or
fbld
and
jle
push
pop
scas
sub
push
cmp
add
fwait
pop
aaa
out
mov
fdiv
push
mov
push
xchg
add
loop
and
cmp
ds
pushf
lods
call
xlat
jbe
cmpsl
inc
inc
add
and
add
dec
push
mov
add
loop
xor
and
push
int3
imul
add
pop
mov
bound
test
dec
sbb
sub
mov
add
xor
inc
cwtl
xor
ds
ja
sahf
jo
ret
mov
call
icebp
fldt
mov
daa
into
adc
sub
push
jo
test
sti
loop
cmp
loopne
or
fwait
mov
xchg
xchg
mov
sarl
clc
loope
cmp
adc
stos
mov
xchg
rolb
mov
cmp
jno
or
xor
lcall
popa
xchg
or
or
loopne
outsb
in
lahf
leave
inc
mov
sbb
add
insb
cmpl
sbbl
push
inc
mov
cmp
inc
and
cs
loope
push
or
lahf
pusha
push
cmp
lcall
inc
push
mov
push
push
loop
test
lods
xor
jmp
lock
mov
xchg
lahf
lret
mov
arpl
pusha
dec
fcompl
das
sub
mov
mov
add
lea
ret
das
ret
sbb
and
jae
cs
roll
mov
enter
gs
or
jne
push
pop
push
mov
or
ss
mov
rorl
add
xor
push
ss
call
cmp
inc
test
outsb
sub
push
mov
add
call
je
mulb
xor
mov
lea
mov
test
jp
mov
icebp
dec
push
mov
sub
add
xchg
test
or
popf
stos
frstor
sarb
add
hlt
and
pop
mov
repz
out
mov
mov
add
adcb
jae
jg
add
lahf
pop
jno
xchg
movsl
aam
pop
test
mov
in
mov
add
lret
addl
xor
xchg
gs
push
xchg
mov
lock
outsb
idivb
push
mov
je
xor
cmp
add
mov
dec
mov
pop
dec
inc
add
xlat
or
je
cmpb
sbb
mov
or
add
test
pop
xchg
outsb
cmpsl
xchg
fidivrl
std
adc
xchg
ret
inc
add
sbb
push
lcall
orb
jp
add
add
dec
dec
cmpsl
pop
sub
pop
loop
pop
stc
mov
xchg
push
jp
jmp
xor
push
shrb
daa
or
fildll
fdivrl
leave
clc
xchg
cmpsl
in
or
sbb
jbe
fcoms
test
mov
cmp
test
lret
adc
sarl
pop
and
cmp
outsb
sbb
popa
mov
inc
adc
sbb
adc
movl
cs
add
cld
mov
pop
inc
clc
addr16
mov
xchg
iret
sbb
stc
fisubrl
das
mov
mov
imul
inc
nop
mov
in
inc
xor
cmp
mov
out
add
imull
pop
iret
inc
dec
or
mov
inc
clc
mov
add
pop
loop
imul
movsl
imul
cmp
mov
pop
inc
or
mov
nop
add
cs
out
push
daa
icebp
or
add
and
std
scas
push
mov
xor
sbb
inc
mov
adc
xor
repz
and
ficoml
call
adcb
add
test
xchg
std
notb
and
int
jae
repnz
mov
loop
adc
and
mov
roll
dec
mov
lock
icebp
ss
out
inc
daa
cltd
cmpsl
mov
mov
mov
pop
inc
jp
push
cs
lods
inc
nop
push
push
mov
or
mov
push
and
cmc
gs
iret
sub
mov
repnz
lret
and
dec
cld
inc
or
ds
mov
push
scas
inc
jae
cltd
xchg
inc
pop
les
cmp
cli
inc
xchg
outsb
inc
leave
fucom
pop
shll
add
add
popf
imul
push
push
xchg
add
movsb
pop
and
jbe
lret
sub
dec
shrb
sarl
jb
in
xchg
into
add
in
dec
sbb
test
sbb
scas
add
sbb
and
adc
mov
adc
sbb
jle
inc
cmp
ljmp
dec
shrb
aaa
and
cmpsb
sub
xor
jecxz
outsb
pop
dec
mov
add
bound
dec
mov
les
mov
sti
mov
xor
xchg
cmp
fs
je
xchg
dec
jbe
cwtl
or
inc
loopne
xor
xor
ss
xor
loopne
jp
popa
ja
push
push
cli
jp
add
inc
icebp
pop
pop
jge
push
dec
push
mov
mov
or
nop
xor
insl
mov
push
mov
lds
add
push
sub
add
hlt
sub
and
aaa
or
adc
fidivrs
xchg
cli
sti
inc
mov
pusha
in
mov
hlt
adc
mov
loop
adc
and
push
cmpsb
mov
adc
cmp
and
xchg
mov
popf
pop
lock
dec
ret
push
movd
mov
add
xchg
jns
dec
pop
insb
cs
ret
xor
je
dec
dec
ret
adc
and
lret
mov
lods
pop
sub
outsb
adc
cmp
je
add
pop
jge
sbb
call
das
cmpl
sahf
and
add
inc
hlt
cmp
push
ret
test
push
es
jl
xor
xor
lock
out
cli
push
pushf
or
cmpsb
test
xchg
adc
mov
cli
bound
push
add
sub
sbb
mov
subl
lods
xchg
pop
jp
push
sti
lea
inc
movsb
into
lcall
adc
pop
jle
and
cmp
or
in
repz
add
lock
push
jb
inc
loope
popf
incb
dec
pop
mov
and
inc
add
xor
jg
ret
mov
inc
mov
lods
imul
or
push
in
leave
je
push
rclb
icebp
cmp
xor
xor
mov
inc
push
leave
lea
adc
neg
shl
in
icebp
int3
jb
cld
or
lret
pop
inc
into
stos
inc
cmp
sbb
jmp
fwait
push
hlt
dec
cs
leave
std
lcall
jg
add
or
or
or
lret
in
sub
add
mov
les
add
jp
xor
pop
rcll
add
mov
dec
inc
stos
jne
popa
push
ljmp
cwtl
mov
shlb
xlat
jno
mov
clc
lods
cmp
push
ror
imul
shl
mov
adc
aam
je
rcr
sbb
sbbl
or
cmp
and
mov
push
inc
fsubrp
aas
mov
repnz
fldt
cmp
dec
adc
jp
dec
loop
daa
mov
mov
sarb
add
insl
mov
jg
in
outsb
imul
mov
xchg
mov
push
lahf
int
adc
fisubrs
rorl
ja
shll
lret
sub
pop
mov
push
adc
rorb
les
mov
movsl
mov
xchg
mov
xor
push
inc
int3
push
or
mov
dec
or
dec
pop
in
jp
xlat
and
pop
xchg
pusha
movsb
inc
dec
lds
push
rorb
add
xlat
dec
lcall
mov
pop
and
xchg
les
inc
enter
pop
fstl
mov
mov
int
and
lods
add
repz
cmpsb
fisubs
shlb
pop
add
push
call
xor
mov
daa
setl
dec
call
fwait
outsl
andb
scas
or
in
or
cld
add
jae
jns
mov
add
cmp
fistpll
xchg
jae
sti
movsb
or
arpl
or
jbe
pop
push
rcr
rep
negb
mov
mov
jecxz
cwtl
fsts
mov
add
or
add
nop
push
cmp
or
and
push
sub
dec
inc
mov
adc
mov
mov
xchg
sbb
pop
scas
mov
fisttps
jmp
stos
mov
aas
jbe
or
cld
cmpsb
jns
mov
adc
fsubr
lock
out
push
nop
pop
jne
add
dec
pop
xchg
or
int3
pop
nop
imul
mov
add
adc
xchg
jmp
or
icebp
stos
pop
mov
xchg
outsb
out
sub
mov
mov
rorb
das
pop
xchg
rol
add
loopne
or
hlt
lahf
mov
mov
std
lods
fsts
dec
js
or
mov
ja
and
and
faddl
sub
pop
pop
mov
jae
jecxz
mov
cmpb
sub
and
mov
inc
or
jp
inc
call
lret
dec
popa
nop
inc
dec
push
inc
popa
push
lret
dec
notl
jno
pop
testb
and
mov
sbb
insl
mov
outsb
push
lret
insb
or
loop
push
push
pushf
mov
cmpsl
ret
add
fwait
lret
sub
cld
mov
inc
fidivrs
add
and
ret
add
sahf
sbb
jp
ret
scas
popf
insl
addb
xchg
push
in
sbb
clc
cld
push
push
jecxz
or
into
mulb
stos
popf
filds
js
jmp
test
and
lock
idiv
and
add
stos
pop
dec
movsl
leave
lea
inc
xchg
inc
mov
xorl
std
inc
out
rcr
or
stos
add
jp
popf
pop
push
leave
in
mov
les
push
mov
daa
sbb
outsb
jne
adc
mov
lods
mov
test
add
out
add
gs
scas
or
adc
sub
and
ljmp
test
adc
or
pop
call
add
inc
add
shlb
push
dec
shl
ljmp
sub
mov
dec
pop
mov
push
jb
pop
scas
xor
aas
cmp
mov
jno
jmp
jmp
mov
push
shlb
inc
xor
aam
das
mov
inc
cmp
xchg
mov
sahf
jo
hlt
push
add
add
addb
sbb
adc
add
into
bound
fstps
or
sub
pop
push
hlt
adc
adc
out
cs
dec
mov
out
push
cmpsb
mov
jmp
adc
jp
stc
pop
in
cli
adc
idivb
sbb
icebp
pusha
loopne
sub
inc
adc
or
mov
add
scas
in
mov
adc
mov
es
cltd
mov
xchg
xchg
fdivrs
out
mov
fisubrl
xchg
mov
sbb
sbb
outsb
test
andb
push
push
ss
jo
shll
or
arpl
decl
mov
pop
inc
cmc
xchg
mov
dec
insb
jnp
daa
sbb
adc
xchg
stos
repnz
pop
or
aad
dec
stos
and
aas
sub
sti
fistps
add
xchg
cmp
mov
std
mov
dec
lock
mov
push
xchg
pop
add
in
add
and
shl
andb
roll
in
cmc
jle
mov
and
pop
das
call
sub
int
add
mov
jge
jnp
cmp
xlat
pop
outsl
mov
xor
xorb
lahf
and
mov
inc
imul
cwtl
add
xor
cld
mov
add
sbb
and
cmp
sbb
stos
rolb
rclb
sbb
outsl
inc
add
or
sbb
sbbl
adc
mov
cmp
xor
jne
push
lret
out
and
or
add
add
xchg
adc
push
ljmpw
aas
add
pop
add
dec
pusha
fisubs
inc
test
iret
inc
lea
mov
hlt
pop
in
test
fs
and
daa
bnd
or
in
adc
test
mov
mov
push
inc
push
cmpl
in
cmp
jl
mov
out
push
movsl
pop
dec
xor
addr16
mov
fbld
xchg
xor
test
sbb
stc
sub
lock
daa
sbb
sbb
jmp
mov
out
pop
push
sbbb
mov
sub
in
push
inc
pop
adc
sbb
pop
xor
mov
fsubrs
rolb
push
popl
xchg
cmp
push
add
in
cmp
xchg
bnd
outsl
cmp
pop
daa
mov
mov
mov
ss
push
dec
xchg
hlt
cmp
sbb
adc
shrl
mov
dec
call
xchg
sbb
fs
inc
or
testb
xchg
testl
dec
xlat
cwtl
imul
sub
adc
jnp
sbb
sbbb
stos
sbb
sub
jle
xchg
mov
ror
ljmp
pop
pusha
push
xchg
mov
jns
mov
pop
loopne
movsl
add
lock
jo
das
cmp
orb
rcrl
stos
clc
or
mov
push
icebp
mov
lahf
pop
pop
xorl
dec
lock
add
insb
mov
xchg
push
loopne
inc
add
lock
mov
fs
sti
repnz
sbb
pop
xchg
es
stos
xchg
lock
imul
repz
js
adc
shrb
mov
imul
sbb
adc
cmp
cmp
rorb
aas
sub
cmpsl
push
jno
jp
mov
push
add
fldcw
das
loopne
sbb
mov
pusha
les
clc
add
ja
mov
test
pop
scas
mov
dec
adc
mov
mov
shlb
out
loope
rolb
adc
push
push
cmp
andb
or
mov
push
jecxz
cs
and
mov
and
or
insb
cmpsl
add
in
add
stos
dec
sub
and
add
lods
or
jns
add
xchg
icebp
jbe
rcrl
jmp
fdivrs
daa
out
push
pop
fs
mov
mov
pop
insl
test
xchg
fmull
xor
das
outsl
rcl
or
adc
mov
ret
outsl
lods
add
jmp
fcomps
or
sub
data16
lods
scas
adc
addl
adcl
push
call
loopne
lock
insb
lods
sbb
aam
movsl
and
in
enter
dec
jbe
mov
ds
cmp
in
dec
sbbb
and
nop
sub
loope
js
ds
adc
mov
mulb
or
das
stos
push
out
add
cmp
fnsave
add
mov
into
jl
dec
inc
adc
xchg
shlb
es
cmovae
outsl
mov
adcb
jge
inc
cmpsl
into
dec
push
in
sarb
addb
popa
cmc
aad
jg
xchg
dec
adc
add
mov
idivb
push
xor
push
and
imul
push
inc
mov
decl
sub
adc
test
mov
jne
pop
scas
add
mov
sub
aaa
pop
mov
test
push
cld
push
dec
pop
int
imul
cmc
addl
pop
inc
mov
xor
not
call
arpl
mov
add
push
mov
daa
sub
mov
pop
mov
pop
outsb
shlb
int
aaa
add
push
aas
add
and
fstpt
adc
add
test
mov
das
lds
movsb
fstl
das
ss
inc
pop
ja
add
push
mov
jmp
cmp
sub
cmp
outsb
sbb
loope
and
fsubs
rclb
sarl
cmp
dec
mov
sub
add
imul
inc
pop
dec
jge
test
repnz
pop
movsb
aas
cmp
nop
lahf
jnp
pop
add
sarb
scas
or
test
sahf
push
stos
daa
lahf
nop
cmpsb
ffreep
hlt
fs
push
fidivs
pop
out
mov
xor
insb
xor
pop
add
fcoms
adc
jae
out
dec
xchg
sarb
add
ja
subb
dec
aad
xchg
mov
call
in
hlt
sub
dec
aam
mov
mov
inc
loope
decb
insb
stos
pop
in
pop
pop
daa
xchg
sub
addl
or
imul
rolb
jle
ret
ljmp
or
add
cld
subl
loop
lret
mov
negl
dec
mov
je
lods
aaa
adc
jg
loopne
xor
add
xchg
out
movsb
out
or
add
push
jg
into
fdiv
pop
jg
addr16
or
arpl
or
sbb
sub
pop
ljmp
sbb
pop
dec
lods
call
mov
in
pop
add
jl
subl
push
jbe
jnp
out
pop
and
cmp
ljmp
dec
sbb
dec
mov
inc
push
das
add
gs
mov
int
js
add
jo
ret
and
push
mov
dec
xor
in
out
or
cmove
sub
jl
fildll
aas
add
out
outsb
mov
xchg
mov
repnz
clc
jle
xchg
pop
addr16
sbb
lcall
insl
pop
xor
jns
lods
jl
push
in
add
and
sbb
inc
jnp
pop
test
mov
fsubl
inc
dec
or
loopne
sbb
mov
roll
or
enter
daa
mov
enter
push
mov
cli
add
cmp
out
sbb
cmp
decb
jl
lea
push
adcl
pop
insb
lahf
scas
fbld
push
inc
rol
sub
mov
add
add
add
mov
and
rolb
adc
cmp
mov
daa
pop
sbb
xchg
adcb
scas
cmp
imul
and
push
mov
clc
adc
shrl
lcall
fidivs
nop
lret
adc
inc
xchg
sub
inc
jb
jae
add
cmp
mov
adc
dec
mov
stc
ds
rolb
cmp
gs
ret
aam
test
mov
popf
add
xchg
rcrl
cmpsl
inc
js
jle
pop
ds
add
sti
mov
imul
add
loop
hlt
pop
in
mov
sub
sbb
mov
leave
shll
cmp
fsubs
xor
push
not
in
dec
inc
in
pop
dec
sbb
shr
add
add
add
push
pop
ret
or
add
stc
jb
sbb
cltd
xor
outsb
fadds
fbld
mov
and
pusha
adc
xor
pop
sub
mov
cmp
or
jo
test
push
dec
and
dec
pop
xchg
mov
cmc
push
jbe
lea
cmpsb
mov
loop
inc
mov
or
mov
ficompl
and
js
pop
test
push
out
adc
add
xchg
sbb
xchg
or
add
mov
and
add
sub
xor
sbb
and
addr16
xor
sbb
inc
cmp
cmp
mov
xchg
add
pop
mov
dec
leave
loop
sub
push
stos
mov
enter
stc
pop
int3
and
xor
add
ljmp
add
outsl
icebp
cmp
inc
xor
mov
mulb
mov
jmp
and
movsl
icebp
leave
aam
pop
add
decb
cmp
test
xlat
xor
or
and
cmp
scas
jecxz
enter
in
leave
sbb
sarb
adc
mul
mov
out
aaa
adc
pop
dec
out
xchg
leave
pop
movsl
push
repz
push
adc
scas
pop
jno
inc
aad
push
add
lea
mov
jl
adc
xlat
dec
stos
aam
scas
add
addr16
ds
mov
scas
inc
std
cmp
in
mov
test
movsl
sarb
add
test
cs
outsl
xchg
pushf
out
dec
scas
pop
icebp
ja
loope
outsb
inc
sub
jne
clc
sbb
dec
or
add
mov
pop
cmp
sbb
fiadds
lods
and
movsb
bound
pop
sar
out
insl
xchg
stc
push
cmp
pop
imul
adc
or
xor
pop
mov
loope
inc
add
pop
sbb
add
mov
mov
adc
add
xor
adc
mov
mov
shrb
add
push
leave
ja
imul
icebp
or
sbb
or
sub
mov
aad
xchg
aad
mov
xor
mov
insb
add
and
adcb
lods
adc
lds
lret
push
pop
sbb
aas
cmpsb
in
add
sub
nop
shlb
loop
in
cld
pushf
dec
dec
pop
sub
pop
lock
dec
xor
stos
add
sbb
aad
jp
xor
xchg
add
push
imul
xchg
add
cmp
clc
fxrstor
jg
xor
ljmp
add
and
mov
daa
mov
daa
jo
popf
jo
add
out
repz
inc
ret
add
movsl
rcrb
aam
add
je
dec
mov
add
adc
das
push
scas
inc
aaa
clc
push
mov
pop
cmpsb
sub
sahf
xchg
stos
add
es
push
iret
push
into
dec
sbb
and
inc
sub
mov
and
shll
cmp
add
mov
pop
push
inc
sbb
adc
dec
and
pop
fnstsw
shlb
not
sbb
in
add
add
pop
or
or
add
pop
stos
cmp
addl
popa
jmp
cld
mov
fists
or
jmp
add
push
or
adc
dec
jp
pop
sbb
inc
jns
or
xor
jge
mov
cmp
js
add
test
mov
in
decb
aaa
add
mov
and
pop
adc
mov
dec
jle
pop
mov
push
xchg
shl
push
ja
sahf
and
or
call
test
mov
or
dec
mov
mov
push
adcb
mov
adc
subl
fdivrs
sub
das
jo
les
lock
mov
mov
in
or
test
fsubl
pop
adc
hlt
add
add
ds
bound
rcl
fimuls
pop
fcoml
pop
jge
cmp
in
jl
daa
fsubl
inc
xor
mov
jg
lock
or
stos
add
lods
or
jge
pop
sbb
mov
fldl
sub
pop
pop
call
push
push
xchg
push
and
xchg
call
pop
sub
push
and
pop
stos
insl
adc
rclb
shl
test
adcb
pusha
pop
add
xchg
mov
add
movsl
adc
adc
mov
jp
push
xchg
jmp
pop
ds
sti
cmp
mov
imul
pop
insb
and
push
enter
dec
inc
mov
sbb
mov
icebp
leave
push
sbb
push
pushf
push
dec
sub
push
pop
popl
or
pop
mov
cmc
adc
inc
push
mov
add
movsl
not
ret
inc
mov
test
xchg
inc
int3
fwait
add
adc
add
lds
xchg
imul
shlb
mov
sbb
cmovb
inc
pop
or
pop
inc
xchg
sub
movb
movsb
scas
sbbb
sub
je
decb
outsl
ret
cmc
les
add
push
inc
inc
divb
ljmp
std
add
jmp
add
shrb
xchg
jmp
adc
jo
add
jecxz
movsb
and
fs
call
mov
popf
pusha
lods
mov
xorl
adc
xor
add
or
push
mov
xchg
in
outsb
and
mov
mov
or
mov
adc
das
cmc
push
hlt
xor
sti
shlb
shll
adc
popf
shlb
pop
or
mov
mov
add
cmp
pusha
or
hlt
data16
adcl
or
sub
adc
and
jp
push
xchg
mov
popa
fucomp
sarl
or
mov
xlat
mov
mov
inc
orl
pusha
pop
mov
stc
mov
pushf
lods
xor
pop
imul
jp
les
loopne
push
or
sbbb
cmc
cmpsb
xor
daa
pusha
fsubl
sub
gs
jne
loope
movsb
push
aam
xchg
loope
xchg
or
test
pop
gs
in
and
dec
jns
aaa
test
out
inc
fiaddl
shl
test
pop
or
sub
mov
dec
pop
pop
and
sbb
pmullw
cmpsl
or
and
cmp
dec
scas
ja
cmp
js
dec
add
repz
mov
jmp
xor
xchg
je
pusha
mov
adc
sub
sti
shl
repnz
cmp
mov
pushl
push
add
sub
in
inc
push
push
orb
pushf
push
xchg
jno
pop
jmp
add
stos
mov
inc
sub
dec
int
xor
jp
adc
adc
ljmp
sub
inc
adc
lock
or
sahf
stos
mov
leave
fbld
push
and
jg
lahf
jnp
cmp
adc
or
test
adc
cmpl
lcall
or
loopew
cs
test
adc
dec
adc
xchg
inc
rcl
sub
dec
pop
mov
jb
mov
jae
test
mov
dec
shrb
push
inc
pop
nop
fwait
mov
ss
pop
shl
cmp
add
ffree
push
testl
cmovl
mov
pop
pop
sub
loopne
ret
inc
cltd
ret
decl
cmpsl
push
cmpb
popw
mov
sbb
add
in
xchg
inc
and
sub
or
mov
dec
add
aam
sti
and
xchg
test
adc
scas
sti
inc
pusha
mov
cmp
faddl
mov
fldl
arpl
push
mov
or
out
add
jne
cmc
push
jg
int
sub
xchg
shrb
icebp
imul
push
and
cmp
icebp
loop
cmpsb
push
cmp
add
jno
mov
push
xorl
cmp
sbb
xchg
or
mov
push
jl
mov
loope
iret
fists
arpl
aaa
inc
jne
incb
jmp
fsubrl
icebp
scas
xor
sub
pop
rep
and
inc
mov
cmc
dec
scas
clc
inc
dec
loop
or
or
jae
sub
or
push
mov
adc
xorb
mov
push
mov
dec
leave
pop
das
xchg
dec
mov
rolb
pop
cmp
cld
pop
stc
scas
sbb
loop
rclb
pop
into
aas
fsub
add
cmp
nop
xlat
stos
mov
add
xchg
test
sub
ss
push
insl
push
sub
aas
inc
jg
pop
ret
lcall
lret
mov
in
dec
mov
cmp
pop
xchg
sti
xor
repnz
fistpl
push
popa
rcrl
dec
ret
inc
fldl
adcl
adc
inc
and
mov
fidivl
adc
or
add
nop
jnp
push
dec
dec
xchg
dec
and
ds
xchg
push
xor
outsb
mov
inc
insl
aas
test
jle
xchg
push
lods
ja
loopne
xlat
cld
sbb
in
dec
sub
mov
cld
push
xor
insl
jmp
in
push
add
mov
mov
push
push
inc
mov
daa
dec
xchg
les
pop
cmp
hlt
jmp
jge
cld
xor
mov
icebp
and
stos
mov
pop
jmp
mov
sub
outsl
xchg
es
sar
andb
nop
xchg
bound
cmc
dec
add
xor
push
aam
outsl
cld
or
loop
pop
in
and
mov
int
in
lock
and
dec
clc
cmpsl
xlat
xor
adc
xor
add
mov
jmp
mov
sub
dec
and
adc
cltd
out
dec
cmp
lock
mov
cmp
xchg
adc
mov
xor
add
clc
stos
cli
xchg
sbbb
std
int3
lcall
sbb
je
adc
mov
bound
xchg
mov
mov
lds
lahf
and
sarb
icebp
mov
xchg
icebp
je
insb
cwtl
aad
repnz
or
ljmp
pop
das
and
inc
ljmp
pop
out
fucomip
xchg
sbb
mov
add
out
push
jg
push
inc
out
xor
add
imul
mov
add
test
repnz
out
inc
pop
push
pop
in
or
cld
inc
push
pop
and
xchg
sub
in
add
jbe
jb
jo
bound
call
ret
push
cmp
mov
lock
add
mov
xlat
cs
jle,pn
add
or
sub
inc
jge
pop
in
cmp
mov
jmp
cmc
gs
stos
inc
addr16
aam
dec
adc
enter
nop
and
addl
lea
cwtl
test
cmp
adc
pop
and
push
pop
pop
mov
sahf
or
push
add
push
dec
das
mov
mov
int3
and
jge
shl
pop
adc
daa
lods
or
mov
push
sbb
sub
sti
dec
into
test
or
or
dec
das
fisubl
cmp
insb
add
mov
dec
xor
dec
daa
cmp
sub
pop
mov
sub
jp
aas
or
sahf
mov
adc
cmp
mov
and
mov
jne
xor
xchg
adc
bound
push
cld
and
jbe
jo
mov
cmpb
repnz
scas
or
fldl
or
adc
add
dec
cld
pop
add
jge
icebp
ljmp
add
xchg
fucomip
jb
cmp
mov
adc
sahf
jmp
push
mov
clc
pushf
das
ljmp
jge
mulb
inc
xor
hlt
mov
xor
sub
fwait
daa
sbb
shlb
filds
icebp
shrl
popf
lock
mov
add
test
movsb
leave
cmpsb
dec
mov
cmp
movsb
pop
xchg
push
pusha
mov
and
mov
add
sti
add
lcall
in
cmp
pushf
jmp
sub
rcrl
or
inc
mov
fiaddl
push
jae
ret
movsl
sahf
stc
rorb
push
jmp
stos
inc
das
push
adc
enter
lret
das
sbb
xor
jle
cli
pop
and
jo,pt
lcall
push
addb
xchg
sub
xchg
pop
ljmp
data16
loopne
pop
pop
jle
out
shll
lods
nop
adc
push
movsl
das
xchg
scas
adc
cmp
enter
ljmp
movlps
mov
xchg
cmp
mov
jo
rorb
or
cli
clc
je
xchg
inc
jns
xchg
dec
cli
mov
lret
out
jg
pop
pop
shll
xchg
jecxz
pop
push
adc
loopne
cmpsb
shrb
icebp
out
clc
rcrl
pop
aad
mov
sti
imul
push
mov
testb
push
mov
jg
rcrb
mov
add
leave
or
push
inc
aam
push
mov
addr16
mov
cmp
scas
push
orl
inc
loop
repz
cmp
adc
fsubs
lahf
jle
xchg
add
push
sbb
push
adc
xor
js
pop
dec
call
add
sbb
mov
mov
sbb
xchg
xchg
clc
sub
and
pop
cld
ret
pop
call
enter
out
pop
pop
mov
pop
in
ret
sbb
push
xchg
mov
lods
or
icebp
mov
and
pop
or
mov
dec
mov
inc
insl
fisubs
adc
cmp
loope
adc
cmp
mov
test
sub
xchg
testl
cmp
jno
mov
xchg
adc
add
stos
jl
mov
or
inc
add
stos
decb
scas
xchg
pop
enter
cltd
push
cmpsb
js
ficoms
pusha
jo
pop
pop
sbb
push
pop
lds
mov
andl
cmpb
push
pop
add
imul
jbe
in
je
mov
xor
add
inc
add
jmp
sbb
sahf
dec
lea
inc
int3
push
lahf
es
cmp
dec
ss
inc
lock
inc
stos
add
scas
cwtl
sbb
and
lds
xor
sbb
daa
inc
jmp
mov
shlb
adc
mov
fs
sbb
imul
lods
mov
push
adcb
push
mov
or
add
es
push
in
push
push
pop
mov
pop
fwait
roll
das
xchg
pushw
pusha
mov
nop
mov
pop
fistps
cmp
add
das
scas
add
add
outsl
mov
iret
jge
mov
cmpsl
mov
pusha
jge
pop
jo
scas
xchg
mov
test
and
sub
xchg
pop
daa
out
and
push
mov
stos
fcoms
mov
pop
cld
xchg
push
mov
mov
dec
mov
pusha
js
sbb
iret
je
inc
outsb
pusha
mov
add
xor
xor
ljmp
inc
popa
jg
pop
lock
mov
or
push
and
das
cmp
test
add
inc
les
add
dec
scas
inc
aas
mov
mov
inc
xor
mov
jp
pop
filds
xor
call
inc
jg
add
in
mov
inc
stos
mov
ret
adc
daa
pop
and
addb
ss
in
lods
mov
add
call
mov
xchg
test
lahf
push
test
test
inc
dec
and
mov
lock
pop
add
mov
add
imul
add
fildll
js
or
testl
push
adcb
rcr
jg
xchg
fs
arpl
mov
add
jbe
adc
add
stos
and
dec
mov
je
xchg
cmp
mov
cwtl
mov
pop
mov
sub
rclb
lea
push
loopne
or
mov
mov
dec
push
loopne
mov
jnp
stos
sbb
pop
popf
fstl
fwait
mov
jge
pop
dec
push
in
xor
in
and
in
push
or
and
ja
lret
or
in
inc
mov
pusha
sbb
bound
push
or
cmp
pop
shl
incb
cmp
popf
testl
sub
pop
sub
push
jo
in
outsl
or
push
subb
test
mov
pop
movsl
mov
mov
inc
and
push
mov
jmp
dec
rcrl
in
aam
pop
mov
cld
cs
movsl
lahf
cli
dec
dec
xchg
out
lods
sub
cmc
nop
push
xor
sti
imul
and
sbb
inc
or
sub
rep
xlat
adcb
push
add
ficoml
mov
dec
push
or
test
adc
daa
inc
movsb
cmpsb
and
icebp
jge
mov
xchg
jp
mov
adc
inc
ja
cmp
fistl
lret
adc
pop
add
xchg
mov
out
cltd
xchg
jp
and
sub
push
aaa
lods
mov
pop
add
ror
sub
call
cmp
xchg
mov
jno
push
mov
push
in
daa
or
and
pusha
outsb
pop
xor
pop
inc
neg
dec
add
pop
add
inc
push
jmp
sub
dec
push
out
and
jmp
xchg
cmp
jp
cmp
mov
cmp
adc
sub
dec
cmp
adc
enter
rorb
sub
cmp
add
pop
fs
and
int3
inc
push
in
out
and
add
outsb
cmp
ds
mov
add
in
lret
or
or
test
sbb
pop
test
lods
sar
xorb
xor
int3
fidivs
sti
cmp
push
jmp
push
ret
in
mov
push
dec
dec
pop
mov
sub
or
mov
jmp
add
stos
xor
pop
into
call
jb
out
push
or
push
mov
icebp
add
rcl
jbe
mov
fisttpl
add
push
sarb
outsb
test
jge
or
push
addb
jne
adc
add
js
fxch
test
ss
jl
inc
xchg
push
js
xchg
dec
mov
sbb
out
sub
sbbb
push
push
jae
push
inc
cmpsb
sub
pop
dec
scas
jo
pushf
push
or
push
sub
add
orb
ljmp
loope
data16
add
mov
mov
lea
xchg
xlat
xchg
inc
sub
sub
push
ds
xchg
add
lret
jo
bsf
push
cld
scas
int3
ret
das
fstl
push
mov
and
inc
mov
adcb
in
mov
scas
dec
mov
fdivs
add
mov
mov
int
js
adc
pop
in
jnp
adc
repz
mov
stc
loope
dec
jae
or
arpl
sbb
sub
jne
iret
movsl
mov
push
cmp
jg
sahf
sbb
adc
dec
xor
xchg
or
das
cmpsb
inc
or
insb
lret
push
add
mov
mov
cmp
rolb
sbb
test
cmpb
lcall
es
jge
stos
scas
and
js
daa
push
adc
filds
xchg
sub
pop
mov
ror
scas
adc
clc
icebp
mov
cmp
pop
pop
mov
pavgw
mov
out
dec
mov
fidivrl
sub
lea
mov
nop
pop
test
push
mov
das
jb
adc
push
addr16
add
dec
push
dec
pusha
adc
and
cmpsl
pop
in
js
mov
mov
jl
lret
jmp
mov
mov
insb
xchg
lods
push
popa
push
jnp
mov
push
sbb
sbb
into
xlat
add
mov
ret
inc
hlt
ja
push
mov
dec
mov
sub
cs
sub
push
ficoms
jae
mov
jb
xchg
inc
jns
xchg
popa
cltd
add
add
mov
add
pop
jl
jmp
adc
xor
cmpsb
dec
sbb
je
faddl
mov
mov
mov
dec
das
fmul
add
scas
cmp
ljmp
and
std
iret
add
cld
cmp
imul
lahf
dec
out
mov
rclb
shll
sub
popf
inc
ljmp
int
cmpsl
mov
add
or
mov
xor
loop
cmc
scas
pop
sbb
in
ret
jb
inc
jnp
pop
lods
or
popa
jecxz
adc
or
xchg
xor
cmp
jns
or
xchg
and
out
loopne
pop
in
add
es
gs
push
pop
cmpsl
xor
xchg
dec
add
loop
pop
in
pop
or
outsb
inc
test
pop
add
adc
pop
mov
cld
xchg
pop
lods
ljmp
inc
dec
mov
mov
add
mov
push
imul
push
dec
pusha
xchg
jo
or
jp
lock
ljmp
out
inc
cmp
pop
in
sti
sti
fists
out
xchg
rclb
subb
push
jbe
rorb
xchg
cwtl
add
ss
pop
cmp
and
pusha
mov
in
add
adc
mov
bound
sbb
aas
popa
je
inc
dec
scas
leave
jge
sub
xor
in
push
movsl
pop
les
cmp
inc
add
imul
lds
adc
add
sub
pusha
loopne
xorb
dec
xchg
ret
stos
push
push
pop
lahf
int3
add
and
and
ss
outsb
nop
test
pusha
dec
or
lcall
push
std
loop
nop
ja
push
mov
push
cmp
dec
push
js
jo
pop
or
push
fs
mov
mov
mov
in
push
and
push
xor
jae
aas
add
push
dec
lahf
pop
nop
aad
test
inc
cld
loope
dec
call
mov
jp
cmp
movsl
xor
enter
pop
dec
mov
adc
or
das
jae
xchg
jns
pop
mov
fs
test
fiaddl
subb
subb
push
int
add
mov
sbb
xlat
adc
add
es
outsb
daa
lahf
fsubp
in
mov
pusha
add
ret
aad
dec
lock
daa
addb
jp
dec
ljmp
or
adc
jecxz
xchg
cmp
aam
sub
jo
sbb
add
push
mull
inc
daa
insl
ret
ret
add
sub
adc
cltd
sub
movsl
cmpsl
clc
out
insb
pop
repz
jg
lcall
scas
shlb
andl
dec
push
mov
pop
outsb
insl
xchg
lods
sbb
das
and
enter
add
into
push
xor
push
push
or
pusha
xchg
stc
add
lods
bound
mov
cmp
sbb
fisttps
mov
add
add
push
stc
adc
inc
mov
mov
scas
nop
loopne
add
hlt
rcrl
popf
dec
mov
out
push
rcr
dec
addb
push
pop
and
or
dec
shlb
mov
rorb
sbbl
add
icebp
jg
inc
cltd
mov
or
data16
popa
sub
inc
mov
mov
or
pusha
add
sbb
sub
mov
push
mov
es
mov
xchg
mov
and
jecxz
dec
xchg
add
adcb
push
sub
icebp
lret
pop
mov
invd
bound
cmp
pop
ret
or
pop
jl
out
inc
pop
test
add
loope
or
mov
adc
add
popa
adc
cmpsb
arpl
push
mov
gs
rcrb
ja
imul
and
push
sub
clc
pop
mov
lock
pop
pop
loopne
jno
or
push
sbb
lock
imulb
mov
mov
stos
cmp
icebp
shrb
and
xorb
mov
cmp
int3
xchg
lock
sti
adc
mov
add
jge
xchg
mov
push
inc
inc
adc
pushw
movsl
scas
mov
rclb
add
lods
in
and
ljmp
push
test
mov
pop
xchg
sti
inc
dec
lods
aaa
cld
int
mov
test
imul
add
mov
inc
sahf
pop
mov
lea
inc
lods
xchg
movsl
subl
call
ljmp
add
xchg
and
xchg
add
sbb
ficoms
fdivrs
push
mov
dec
sahf
lods
mov
jmp
nop
add
repnz
dec
jge
sbb
xor
sbbl
pop
arpl
test
data16
add
pop
std
rorb
loope
cs
fs
adc
xchg
frstor
pusha
scas
add
mov
pop
mov
test
add
clc
enter
test
xchg
cmpsb
dec
iret
lcall
mov
repz
mov
clc
pop
mov
stos
or
call
cmpsl
add
test
pop
clc
dec
cmp
sbb
xchg
and
fisttpll
lea
or
js
jbe
jnp
jno
xor
mov
sbb
push
dec
pop
mov
fwait
test
nop
and
inc
repz
cmp
mov
sahf
pop
pop
arpl
sti
xchg
sbb
add
ucomiss
or
dec
lret
shrl
jne
aad
sbb
push
xor
enter
das
test
dec
loopne
cld
jp
subb
arpl
pop
adc
or
sub
jno
insb
pusha
leave
add
repnz
jno
sub
or
inc
mov
stos
mov
leave
adc
dec
in
xor
mov
mov
icebp
dec
jns
adc
fsubrs
dec
jns
sub
test
sbb
das
or
ret
fists
inc
cld
out
aad
out
mov
add
jns
mov
call
cmpsb
scas
imul
inc
lahf
push
movsl
push
rcr
inc
cmp
xchg
in
add
sbbl
mov
ret
push
jbe
ja
shrb
xchg
jb
imul
outsb
or
or
in
xchg
subb
jl
in
push
mov
lea
push
mulb
mov
es
pop
sub
das
jge
jb
inc
wbinvd
mov
mov
xchg
inc
repz
aaa
loope
outsl
lock
jnp
cld
fildll
add
cmp
enter
push
add
jle
popa
jg
in
xchg
ficoml
or
incl
into
push
adc
orb
add
rcrb
es
dec
sbb
movsb
adc
test
mov
mov
fldcw
fisttpll
sbb
or
loope
leave
int
hlt
movsb
out
jns
pinsrw
fiadds
sub
xchg
movsb
cmp
jge
enter
in
lea
xchg
push
push
add
sti
je
adcb
out
mov
add
sahf
ljmp
sub
pop
fldcw
push
sbb
sub
test
jns
lcall
or
jne
out
data16
cmp
xchg
or
test
push
and
dec
jbe
adc
rorl
out
adc
lock
pop
lds
es
mov
jle
testb
mov
inc
or
in
stc
pavgb
test
call
lahf
rcrb
mov
push
pop
ret
test
enter
pop
es
fimull
shl
mov
dec
adc
jo
mov
sti
mov
popa
pop
ljmp
loop
clc
push
pop
dec
hlt
loop
or
jle
push
jge
into
push
rcll
push
pop
addl
pop
arpl
jmp
sub
mov
or
rcr
jo
add
mov
add
sub
xchg
repz
push
sti
cmp
in
aam
add
frstor
loop
lret
ficoms
dec
nop
ret
jbe
add
fwait
mov
fidivl
pop
and
cld
popa
pop
lcall
sub
adc
aad
cmp
incl
jmp
push
sahf
daa
mov
out
xchg
loopne
push
add
js
arpl
dec
insb
pushf
dec
das
jl
adc
shll
push
cmc
xchg
jecxz
jl
cmp
fcomi
jne
push
in
add
xchg
pop
cli
fs
lods
out
pop
and
add
pop
mov
push
nop
div
pusha
shll
insb
push
in
inc
iret
add
dec
jns
int3
sub
xor
inc
ss
and
lahf
fnstsw
dec
mov
push
push
nop
loope
lods
aad
xchg
sbbb
add
mov
and
scas
pushf
xor
popf
iret
scas
adc
pop
movsb
std
mov
mov
and
sbb
movsb
std
jmp
jae
mov
cltd
je
mov
and
or
lret
mov
lods
cmc
or
ja
repnz
out
test
lds
mov
xchg
add
into
pop
pop
inc
neg
sar
mov
jmp
cmpsb
jbe
sbb
jge
add
enter
push
mov
adc
mov
out
bound
add
cmpb
xchg
cmp
inc
ja
into
and
add
je
push
data16
pusha
sub
jo
mov
into
mov
lcall
fiadds
lock
jbe
xor
cli
lds
pop
in
mov
daa
imul
rolb
mov
ja
jmp
cmp
mov
or
gs
cmp
mov
push
pop
inc
in
outsl
add
imul
pusha
repnz
pop
std
push
mov
test
out
sbb
dec
adc
mov
jne
mov
dec
add
scas
repnz
test
rcrb
shlb
sub
add
pop
cmp
mov
dec
fld
jle
dec
loop
iret
daa
cwtl
fidivl
xchg
jp
pop
inc
sahf
enter
mov
loopne
push
testb
mov
xchg
mov
xchg
cld
dec
adc
scas
incl
js
dec
shrb
mov
movsb
fstpl
int3
scas
sbb
pop
lods
cld
jp
adc
sub
sahf
stos
flds
jne
out
jl
inc
xor
call
je
push
into
cmp
out
dec
std
cs
mov
mov
and
stc
or
fs
pcmpeqw
enter
das
in
cmc
pusha
and
fcompl
push
xor
imul
shrb
add
mov
sub
push
loopne
dec
xchg
xchg
jo
sub
mov
pop
sbb
gs
mov
inc
or
or
xchg
rcrb
mov
std
mov
mov
mov
xchg
aad
push
jp
lret
mov
xor
push
test
mov
jg
or
mov
mov
inc
in
xlat
aas
jbe
and
mov
pop
mov
movsb
ss
lock
das
testl
push
xor
push
mov
enter
and
hlt
push
les
adc
gs
sub
lcall
cld
mov
xor
sbb
xchg
fisttps
pop
add
mov
mov
je
xchg
jno
cmp
call
mov
nop
adc
rorb
inc
jl
sub
add
sbb
out
shll
pop
mov
add
mov
add
jo
jge
arpl
shlb
xchg
jb
add
mov
sub
mov
loopne
inc
xchg
in
add
inc
mov
push
dec
xlat
push
in
dec
mov
shrb
cmc
adcl
adc
push
mov
pushf
cmp
lret
mov
lock
addb
pop
sahf
and
pop
in
popa
and
mov
subb
ficoml
fbstp
xchg
in
dec
imul
dec
add
imul
mov
lahf
sbb
pop
mov
xor
sarb
mov
xlat
dec
adc
or
fs
xor
mov
jnp
test
lds
jg
inc
sbb
adc
add
mov
adc
rolb
in
pop
pop
pushf
rorl
add
adc
and
call
lahf
or
jne
and
fs
repz
sarl
and
clc
lock
sbb
push
imul
mov
sub
les
popf
fcoms
push
mov
in
addl
cwtl
xchg
push
adc
pop
sbbb
test
mov
mov
out
cmp
jle
lahf
test
scas
add
cmp
sub
mov
les
sub
jge
inc
sbb
dec
add
fs
pop
fidivl
and
mov
xchg
adcl
jnp
loop
enter
dec
sti
andl
sub
mov
adc
sub
iret
inc
ret
mov
mov
push
xor
xor
lcall
into
mov
dec
rclb
scas
sbb
int
dec
and
daa
popfw
push
dec
xchg
pop
add
inc
stos
je
ret
test
cld
ss
pop
mov
inc
loopne
lock
jp
fbstp
pop
inc
mov
bound
xor
xchg
jb
pop
repnz
rclb
push
mov
loope
cmp
into
push
int
stc
mov
jo
push
loope
into
jnp
jns
sub
or
ret
mov
add
bound
movsl
push
roll
cmp
inc
push
mov
sub
inc
sub
or
add
jo
sahf
xor
add
mov
pop
iret
inc
ljmp
push
lret
jl
dec
adc
lods
rolb
je
xchg
mov
sub
ja
jle
sti
js
jne
jmp
jp
and
adc
push
sub
mov
cmp
daa
lods
push
add
cmp
dec
rolb
add
mov
push
pop
mov
xor
pop
jnp,pn
sub
sahf
or
sub
adc
pop
pop
sbb
push
js
lahf
ret
sti
pop
sbb
flds
xor
push
lahf
push
xlat
pop
movnti
clc
xchg
cmc
out
jno
das
mov
xchg
imul
inc
movb
push
pop
inc
xor
cmp
adc
cmp
and
cmp
aaa
sbb
in
fcoms
test
inc
xlat
jge
push
cltd
outsl
cmc
mov
jne
dec
xlat
ljmp
mov
inc
out
xchg
adc
cmc
enter
sub
mov
sub
or
add
mov
daa
inc
dec
mov
cmp
add
pushf
test
add
adc
daa
xchg
fdivs
daa
call
paddsb
inc
pop
xchg
stc
orb
lods
aaa
shlb
add
jmp
dec
lods
push
cltd
jbe
jne
mov
mov
mov
stos
les
cmpb
cmc
xlat
movsl
aas
mov
stos
test
mov
xchg
xchg
add
jb
call
fdivrl
movsl
inc
cmpsl
pop
inc
push
adc
les
ja
and
bound
test
call
imul
andl
lcall
test
sub
sbbl
icebp
das
test
int3
test
cmpb
aas
mov
lahf
push
push
addr16
test
pop
movsb
sar
and
into
mov
push
movsl
lea
movsl
fdivr
xchg
add
movd
clc
lods
bound
fsubl
imul
scas
or
mov
add
fadds
out
sub
and
jecxz
ss
ljmp
sbb
outsb
cmpsb
jecxz
in
xchg
push
pop
jnp
inc
push
or
mov
mov
xchg
jnp
popa
jle
bound
out
xlat
scas
and
incl
je
dec
mov
xchg
cmp
in
imul
mov
test
xlat
xor
jp
sbb
cmp
cmp
sub
arpl
xchg
lahf
push
dec
sub
movsl
fstps
dec
and
mov
pop
mov
ljmp
subb
pop
ljmp
es
add
adc
inc
mov
test
aas
mov
xor
nop
ds
dec
sbb
shrb
incl
jno
push
out
mov
mov
neg
cwtl
sub
mov
mov
ljmp
testl
or
mov
sbb
fs
jb
cltd
jecxz
cld
movsl
inc
adc
lcall
cmpsl
ret
xchg
mov
mov
jge
jmp
arpl
fwait
sub
js
push
out
divl
mov
aad
testb
pop
iret
and
aad
adc
les
ss
rolb
shlb
sbb
std
inc
mov
in
mov
outsl
movsb
shrl
mov
mov
adc
inc
mov
dec
xchg
ds
mov
xor
mov
shr
cwtl
xchg
push
sub
pop
jge
insl
inc
faddl
jg
and
dec
jp
push
in
dec
out
das
aam
les
mov
outsl
or
jno
lret
add
add
inc
sahf
add
jecxz
test
aam
mov
push
int
mov
push
ds
and
cmp
loopne
and
jmp
out
lock
shlb
sbb
stc
add
data16
int
dec
cmc
and
jmp
mov
ss
sub
sbb
andb
jbe
jo
mov
cmp
ret
arpl
xor
push
add
mov
sub
fimull
or
aad
push
ss
mov
xchg
or
mov
aam
cwtl
add
or
out
rcr
stos
adc
xchg
in
mov
push
fucom
pop
inc
jno
sbb
adc
mov
rorl
xchg
cmp
mov
add
insb
sbb
mov
xchg
xor
sbb
movsl
fbld
roll
jae
stc
hlt
ret
or
testl
pop
inc
sti
xchg
add
sub
and
xor
cmp
lods
xchg
adc
ja
int
push
dec
jae
in
push
shl
jge
push
in
mov
stos
adc
xor
xchg
pop
clc
jl
mov
cmpsb
adc
inc
aam
in
mov
lcall
out
sbbb
xor
pop
add
xchg
push
dec
pop
add
addl
push
popf
in
das
das
stc
sbb
xlat
addr16
imul
cmpsl
fldt
dec
pop
sarb
rorl
xor
pushf
test
sbb
sbb
stos
sub
loop
and
std
xchg
ss
aas
and
bound
sub
rcrb
mov
push
inc
rcrl
movsl
pop
adc
pop
addb
jecxz
pop
mov
fdivs
mov
sbb
adc
ret
push
addb
xchg
iret
shlb
mov
sub
jge
das
jmp
mov
or
or
xchg
jbe
lret
push
add
cli
ss
mov
and
mov
mov
fbstp
xchg
jle
add
mov
stos
inc
push
cmp
dec
movsb
sub
shlb
pop
cmp
dec
mov
dec
dec
sbb
and
or
icebp
ficoms
sar
sbb
daa
imull
adc
imul
sti
add
sub
jl
mov
jge
lock
sbb
lods
popf
lock
sub
sbbl
dec
mov
mov
mov
push
cmpsb
test
adc
pop
dec
mov
adc
cld
cmp
mov
scas
std
adc
aad
jp
mov
ficoml
jns
or
clc
test
xor
xor
sub
fcompl
inc
or
pop
mov
das
stc
xchg
jns
add
adc
mov
lahf
push
add
cmp
loopne
xor
adc
mov
pop
push
cwtl
dec
fists
andl
sub
sti
incl
clc
adc
clts
mov
xorb
das
dec
cs
push
push
fwait
jnp
inc
cmp
xor
mov
daa
xchg
mov
in
loop
nop
xorb
mov
or
inc
pop
pop
orb
addl
jnp
stos
add
xchg
cmp
scas
jns
or
stc
inc
inc
cmp
xor
mov
pop
add
mov
jno
adc
jg
popa
cld
sbb
xchg
pop
loope
pusha
xor
mov
and
roll
in
int3
push
xor
sub
fiaddl
loop,pt
sbb
adc
test
cli
daa
call
test
mov
test
inc
clc
xchg
sub
dec
in
xor
push
xor
mov
push
iret
mov
mov
subb
sahf
dec
mov
mov
sbbl
aad
sbb
push
daa
mov
cwtl
lods
bound
loop
bound
mov
sub
loope
imulb
sbb
jno
pop
sbb
arpl
and
inc
pop
xor
xor
or
andl
movsl
mov
sub
xchg
or
xchg
ret
adc
xor
pop
push
hlt
andb
rcl
push
mov
test
add
addl
decb
push
xor
decl
mov
add
dec
sub
mov
push
fistps
lret
xchg
inc
imull
mov
mov
xchg
jg
dec
sbb
mov
dec
jg
repz
sbb
js
cwtl
rol
xor
test
adc
or
adc
cmpsl
fmul
xchg
stos
add
push
inc
orl
push
inc
jg
rorb
rcrb
jns
mov
mov
lea
xlat
sub
mov
push
test
and
jae
fidivrs
add
sbb
pop
lret
fsubrs
dec
das
pop
inc
shr
jg
fcmovne
mov
inc
idiv
leave
subb
fldcw
test
test
mov
fidivrl
push
loopne
lods
xchg
hlt
cmpsl
subl
rclb
inc
or
dec
sub
outsb
ds
push
daa
shrb
cld
push
sbb
xchg
lods
enter
sarb
adc
or
pop
pop
ret
or
push
jns
push
mov
pop
jnp
daa
pop
popf
lahf
and
push
mov
sub
xor
mov
push
inc
sub
imul
jno
add
push
pop
pop
push
pop
push
push
loopne
add
mov
pop
js
shlb
pop
or
sub
add
test
pop
mov
sub
notl
adc
add
sti
pop
aam
push
pop
mov
mov
bound
cmp
jle
and
add
aas
enter
lahf
test
xchg
in
push
or
push
enter
pop
jno
das
and
addl
cld
dec
sub
push
pop
sbb
cmp
push
and
cmp
inc
test
scas
hlt
leave
sub
dec
stc
bound
xor
inc
pop
push
add
sbb
and
add
cld
enter
sub
and
adc
daa
ret
pop
or
sbb
mov
push
andl
das
fidivrs
jle
das
fdivl
cmp
pusha
imul
lret
testl
xchg
ret
cld
cltd
adc
push
add
std
add
popw
push
sbb
out
push
int
lods
cmp
cmpb
push
stc
ret
sub
adc
sub
jecxz
sub
loop
or
std
mov
aam
insb
popf
mov
test
push
pop
pusha
add
xchg
scas
pop
clc
adc
jmp
and
sub
test
imul
dec
mov
cmp
sub
jmp
dec
sbb
jmp
test
idiv
cli
adc
aam
daa
pop
mov
mov
aad
and
aam
jg
leave
sbb
outsb
call
imul
cltd
jns
dec
in
push
imul
or
aaa
outsb
cli
inc
mov
daa
lods
mov
adc
cmp
cli
pop
jp
mov
and
jo
pusha
sub
xor
std
adc
sub
je
mov
pop
test
inc
jge
gs
mov
dec
lods
fnstenv
cli
add
fmull
mov
mov
rorl
add
std
cmp
out
mov
nop
jns
das
jge
dec
in
cs
data16
test
lea
mov
jl
incb
ljmp
lcall
add
sbbb
push
jp
mov
ds
ret
inc
adc
mov
add
push
inc
mov
ja
push
mov
pop
mov
addr16
js
nop
addb
lahf
push
xor
inc
sarl
mov
sbb
push
sbb
or
pop
mov
xor
dec
cmp
cld
cmp
xchg
xchg
push
or
mov
pop
push
mov
std
cmp
sub
mov
jp
mov
movb
out
mov
inc
push
dec
or
add
pop
inc
and
outsl
repz
inc
scas
int
sub
xchg
in
das
add
pop
jg
lret
cli
push
sub
js
xacquire
cmp
cmp
fwait
xchg
lods
call
sti
xchg
into
or
lahf
pop
jg
repz
dec
mov
pusha
mov
imul
push
lahf
lock
pop
pusha
fs
fdivs
daa
jmp
in
xor
push
dec
ret
ljmp
or
or
sbb
cltd
adc
cmpsb
jecxz
xor
and
lock
add
sbb
or
mov
inc
xor
jmp
mov
movsb
shr
or
imulb
loope
rcrb
xchg
mov
pusha
sbb
push
adcb
ss
jnp
sbb
out
jb
sub
test
jge
inc
jecxz
add
pop
and
mov
or
popa
cld
jnp
xor
and
sub
inc
mov
lods
addb
hlt
dec
add
pop
movsb
orb
mov
into
sub
notl
clc
jmp
movsl
int3
and
xchg
mov
add
ret
push
pop
mov
loopne
arpl
pop
fs
fisubrl
fnsave
pop
lock
cld
out
fsubs
fcoml
mov
inc
add
sahf
inc
or
jnp
sub
xlat
or
fwait
pop
sahf
test
fs
xor
dec
xchg
stos
test
mov
mov
inc
push
jne
in
jecxz
lods
add
iret
push
pop
jp
pop
pop
ret
and
xchg
and
lock
jge
in
push
pop
repz
int3
cmp
cmc
inc
jb
push
xor
fists
lcall
xchg
out
jo
lds
cmp
mov
lahf
bound
clc
lret
jne
ds
mov
dec
xlat
jecxz
pop
idivb
pop
mov
jo
inc
mov
inc
or
out
lret
lock
imul
ret
mov
and
or
xchg
add
or
mov
xor
pop
in
pop
xchg
fimuls
jns
aad
ficompl
cld
jp
sysret
test
lret
fidivrl
ja
dec
fsubp
mov
clc
xor
adc
aas
leave
and
cs
inc
scas
dec
mov
jecxz
les
fisttpll
jne
push
jp
subb
scas
aaa
loopne,pt
mov
repnz
es
sbb
xlat
or
jns
ljmp
mov
call
out
lret
xchg
sbb
mov
cmp
add
lods
and
test
fwait
inc
mov
bound
push
pushf
dec
adc
add
fstl
lahf
rorl
insb
mov
nop
mov
dec
adc
popa
dec
subb
push
push
mov
mov
cmp
rcll
xchg
rolb
add
jnp
aam
cld
lods
inc
fwait
add
testl
mov
xlat
insl
cmc
les
adc
pusha
andl
popf
add
mov
les
mov
inc
add
lret
lods
call
xchg
inc
mov
daa
stc
inc
and
mov
jl
add
mov
mov
pop
pushf
fs
lods
ucomiss
orl
outsl
push
out
arpl
je
pop
jmp
mov
sbb
ds
daa
cld
adc
hlt
jno
rep
lahf
inc
icebp
xor
cmp
popa
cmpsb
loope
xor
mov
das
nop
test
scas
xor
cmp
das
mov
or
cld
mov
out
mov
mov
daa
testl
add
pop
xchg
shl
or
daa
push
or
and
dec
imul
dec
lods
dec
les
scas
mov
mov
adc
out
pop
or
negb
test
mov
pop
js
or
xorl
mov
imul
push
insb
outsb
jnp
mov
jle
mov
jns
call
pop
sahf
and
rcrb
jne
clc
outsb
add
and
pop
mov
mov
out
or
stos
cltd
loopne
stc
loop
dec
mov
xlat
pop
bound
adc
sub
ss
out
cli
test
mov
outsb
pop
shl
cwtl
add
inc
das
cld
out
or
mov
orb
daa
push
mov
jp
leave
mov
and
aad
inc
mov
subl
fxch
mov
dec
pop
scas
jge
sub
clc
sbb
sbb
test
sub
fstl
jmp
ds
xchg
mov
les
add
mov
add
push
repnz
cs
insb
das
xchg
sbb
fld
or
add
scas
mov
and
orb
popf
adc
xlat
in
in
jbe
leave
aad
movsl
sbb
incl
std
jecxz
nop
jbe
push
xchg
pop
mov
xlat
cmp
push
mov
bound
call
lock
cld
shlb
ret
imul
out
aas
adc
inc
sti
add
mov
add
mov
mov
push
push
daa
rolb
int3
fstl
fidivs
push
clc
xchg
adc
std
dec
rorb
jne
or
inc
subl
and
sub
jne
fildl
dec
dec
push
int3
jno
mov
sub
mov
push
popf
pusha
mov
jb
shl
adc
jge
xchg
loop
outsl
add
xchg
jecxz
add
scas
sarb
cmp
je
fs
sahf
filds
leave
addl
add
test
cmp
jl
movsl
push
sbb
jo
ficoms
pop
lds
call
adc
xchg
push
jl
add
sbb
outsb
js
lret
jg
pop
test
sahf
or
push
xor
add
xor
or
mov
push
mov
stos
pop
lret
push
sub
dec
xchg
rcrl
cmp
lcall
cmp
jnp
insl
lahf
inc
rcrb
and
aad
push
add
sub
mov
sub
xchg
inc
clc
pop
adc
test
push
sub
jp
or
inc
ficomps
leave
fnstcw
push
test
outsb
jle
xchg
lods
test
add
subb
dec
mov
and
inc
or
mov
roll
push
mov
or
sub
rcrl
fcomps
or
out
loope
inc
or
nop
xor
add
cmp
add
push
sub
add
xor
clc
xor
cmp
sub
xchg
push
xchg
push
jg
pop
cmp
xchg
mov
mov
dec
lcall
mov
cmp
mov
cmpsl
sahf
mov
cmpsb
sub
sub
and
stos
inc
arpl
out
jae
xchg
sarb
add
sbb
pop
das
xor
add
cld
push
pop
int
sbb
fs
sub
cli
jmp
cmpb
mov
mov
dec
pop
pause
xor
add
cli
inc
xchg
mov
es
inc
imul
push
sbb
imul
das
adc
jmp
and
outsb
and
push
test
shll
call
adc
cli
push
lea
into
push
mov
push
insb
inc
hlt
ljmp
test
push
xchg
pop
and
iret
in
andl
ret
shlb
xchg
js
sub
push
cmp
mov
xchg
call
xchg
shr
add
ja
popf
xlat
cwtl
orb
push
jbe
sbb
cmpsl
fbld
pop
orb
in
fldl
movsb
sti
push
divps
push
daa
add
adc
mov
dec
mov
sub
mov
and
sub
jp
adc
out
mov
pop
cmc
test
pop
repnz
rorl
in
fbld
mov
jg
mov
in
and
or
test
add
xchg
xlat
and
mov
xchg
dec
stc
repz
add
adc
mov
in
jne
push
or
popf
mov
cmp
lods
outsl
mov
and
js
test
cwtl
push
inc
sbb
dec
ljmp
mov
inc
sub
lcall
push
shr
out
sbb
push
add
popa
mov
aas
fld
cmc
jne
cmp
imul
testb
and
js
imul
jne
test
shlb
mov
or
cmpsl
jbe
jbe
push
mov
and
pop
shr
xor
or
push
sub
sub
or
mov
popf
je
out
inc
cmc
sub
enter
pop
data16
add
mov
nop
inc
test
nop
dec
lret
xchg
jl
add
js
mov
add
and
jb
dec
push
mov
jg
test
test
inc
dec
rorb
cwtl
add
xchg
jns
sbb
ret
adc
sahf
pop
and
add
sub
sub
push
pop
push
mov
aas
test
jnp
xchg
mov
mov
jmp
les
jb
xlat
mov
je
pop
pusha
lock
and
repnz
pushf
cli
loop
and
xchg
jne
inc
fisttpl
or
push
pop
mov
jg
mov
sar
sarb
sub
imul
xor
add
sarb
out
jno
or
cltd
jne
adc
sbb
addb
adc
roll
in
test
jne
push
push
imul
out
cmpsl
inc
pushf
into
mov
fdiv
push
in
std
cmp
sbb
add
jmp
sbb
sbb
loope
scas
sub
hlt
pusha
add
sti
jmp
repz
fildl
or
pop
je
sub
mov
out
add
push
or
jo
hlt
mov
std
jbe
loop
scas
add
imul
sbb
dec
mov
lea
test
repz
sub
test
je
lods
jle
jne
lahf
mov
mov
inc
add
imul
jae
cmp
push
fists
es
std
or
pop
or
mov
add
int3
lret
xor
inc
loope
mov
pop
pusha
dec
in
daa
cmpsl
adc
js
mov
addr16
mov
ds
repnz
icebp
mov
int3
pop
data16
or
jno
add
mov
or
into
sub
movl
repnz
push
pop
rorl
or
flds
pop
mov
inc
pop
jl
out
push
lret
pop
push
inc
xor
sarb
stos
sub
cwtl
repnz
lea
fisttpll
jne
and
and
and
push
add
inc
mov
sbb
out
and
sbb
cmc
insb
or
fcoml
lret
inc
leave
jge
imul
xchg
xorb
mov
or
std
push
dec
jns
add
out
and
xchg
or
loop
mov
lods
add
sub
shrl
xchg
enter
out
cmp
fidivl
call
dec
and
fwait
lcall
ret
test
pop
es
mov
rorl
ljmp
jge
mov
dec
std
jecxz
sub
repnz
cmp
arpl
test
stc
fstl
in
mov
cwtl
out
popa
je
adc
jns
in
mov
scas
pop
fcomps
daa
loopne
mov
popa
adc
or
xchg
ds
jmp
xor
adc
testl
movsl
jl
sub
stos
insl
pop
test
pop
or
push
xchg
scas
adc
push
xchg
das
push
sbb
cmc
xor
mov
sti
add
outsb
in
dec
cld
or
das
icebp
push
lret
lock
loopne
or
or
inc
aas
mov
icebp
mov
inc
pop
xor
push
sub
stos
jae
test
pop
shl
push
add
jge
ret
lret
gs
xchg
hlt
pusha
sub
fidivrl
pop
and
std
xor
add
inc
push
cltd
pop
xchg
nop
mov
outsb
repz
daa
ja
outsl
lock
or
outsl
fmull
fstps
cmp
jle
mov
rorb
mov
cli
adc
cs
lret
into
shlb
fwait
mov
jle
and
xchg
es
pop
push
ja
mov
sub
jl
repz
or
in
xchg
pusha
jae
ja
nop
push
add
ljmp
rcrl
jne
jno
pop
fadds
push
xchg
out
add
pushf
mov
mov
cmp
adc
pop
cmp
xchg
jle
pop
hlt
cmp
jp
fidivs
lahf
pop
icebp
daa
and
repnz
xor
jne
add
outsl
mov
ds
lock
les
dec
cs
jmp
lahf
cmp
sub
xor
and
addb
ljmp
inc
lahf
je
mov
dec
dec
js
pop
dec
sub
pushf
movsb
cmp
jge
mov
cmp
mov
add
enter
dec
iret
mov
aam
xor
pop
or
arpl
adc
add
js
clc
xchg
sbb
sub
inc
sbb
mov
and
fiadds
pop
mov
movsl
roll
hlt
inc
movsl
gs
clc
sub
loopne
mov
mov
mov
jecxz
lret
ja
jae
or
xchg
into
sub
loopne
js
push
loope
das
cmpl
add
insb
sar
jne
out
or
inc
test
push
and
hlt
cmp
dec
out
or
rorl
popf
fisubs
adcl
push
out
sahf
dec
jecxz
movsl
out
ds
cmp
xchg
xchg
pusha
in
in
pop
push
push
mov
xor
pop
pusha
movsb
mov
and
popf
addr16
pop
push
pop
popa
add
in
push
or
fs
push
int3
push
enter
xchg
psubw
cwtl
inc
icebp
dec
lods
xor
or
into
xchg
nop
pushf
mov
testb
mov
or
sub
popa
inc
dec
adc
sbb
test
andl
std
and
sub
or
or
adc
sbb
and
sub
and
leave
or
sub
cmp
adc
sbb
xor
mov
and
inc
test
xchg
sub
orb
test
xchg
add
xchg
inc
inc
lods
and
fwait
inc
stos
push
sbb
lods
adc
xchg
xor
jnp
imul
test
sub
cmpsl
push
daa
or
test
push
adc
push
test
or
test
and
or
aam
push
orb
adc
test
cld
pop
adc
sbb
and
insb
adc
pop
or
nop
or
insl
adc
push
or
and
or
xor
or
jb
mov
leave
push
outsb
or
inc
adc
movsb
das
bound
or
movsl
bound
ljmp
or
and
pop
or
and
push
adc
push
test
test
mov
inc
xchg
pop
dec
dec
jnp
sbb
cmp
add
pop
ret
xchg
mov
rolb
and
push
ret
mov
sti
or
mov
or
das
mov
fs
mov
pop
ret
adc
inc
push
ret
xchg
jmp
mov
addr16
mov
xor
sbb
adc
pop
ret
and
inc
push
ret
add
or
sub
and
inc
test
mov
xor
jmp
sbb
imul
xor
orb
mov
std
push
es
add
hlt
xor
cli
bound
mov
enter
mov
add
xor
in
in
pop
or
mov
push
ljmp
dec
dec
mov
push
pop
xlat
test
sbbb
add
fldt
jle
mov
or
push
dec
aaa
xor
add
call
jle
add
stc
data16
mov
inc
jnp
inc
jb
add
scas
sub
add
pop
inc
jle
push
adc
add
pop
pop
or
and
and
mov
decb
xchg
loopne
push
roll
rol
xchg
in
dec
pop
test
roll
add
mov
stos
add
sub
mov
and
add
xor
mov
inc
dec
clc
pop
lahf
xchg
add
std
mov
jecxz
pusha
mov
imul
or
and
ret
sub
stos
add
dec
inc
repnz
cmp
adc
add
xlat
dec
cmc
adc
mov
adc
cld
js
mov
add
in
outsl
popa
cltd
mov
pop
push
scas
enter
xor
cmp
add
pop
push
pop
add
inc
adc
adc
mov
xchg
add
ja
sbb
popa
pushf
nop
or
inc
in
xchg
mov
mov
repz
jmp
add
divb
or
scas
call
and
jmp
and
stos
ret
das
push
pop
or
jb
cltd
cs
jmp
and
fnstenv
add
and
aaa
mov
sti
stc
jg
gs
loope
push
fstl
dec
in
pusha
notb
pop
inc
xchg
loop
icebp
adcl
cmp
jae
mov
mov
lds
mov
sub
fadds
rclb
pop
jmp
add
push
xlat
xchg
and
jp
jl
sbb
jnp
cmpl
arpl
xchg
cli
stos
imul
outsb
repz
insb
jb
cmp
shll
adc
aaa
pusha
push
popf
mov
add
mov
or
dec
mov
dec
cmpsl
adc
pushf
movl
call
in
mov
aad
push
sbb
shrb
mov
dec
pop
xchg
add
pop
mull
cmp
fistpll
or
push
sbbb
push
and
in
negl
adc
jne
adc
mov
lock
data16
imull
add
adc
sbb
jge
add
cli
mov
mov
add
add
out
sub
mov
mov
addb
xor
addb
in
insl
or
inc
add
cmp
jno
xchg
testl
mov
pop
adc
push
cmp
bound
jo
xor
pop
cmp
fisubs
cwtl
adc
loopne
scas
rdtsc
cs
pop
inc
push
sub
add
jmp
dec
pop
lea
gs
mov
push
or
shlb
stc
sbb
popa
das
inc
and
push
lahf
lret
sub
cmp
rolb
pop
mov
push
sbb
jle
jg
push
pusha
or
jne
movlps
imul
lods
and
lahf
mov
and
jp
add
mov
nop
outsl
shlb
ret
mov
lcall
test
pushl
fiaddl
lea
fpatan
loope
sub
inc
aam
stc
frstor
lret
imul
mov
add
sub
popl
lret
repnz
ds
xlat
neg
lock
add
add
sbb
andl
out
and
icebp
out
pmulhuw
mov
int3
cmp
xchg
add
push
repnz
inc
cli
ret
jl
adc
arpl
lahf
push
clc
into
and
mov
push
roll
stc
aam
ja
cs
loop
ficoms
or
mov
and
repnz
add
mov
ja
add
iret
cmp
jo
push
pop
lret
js
pop
jno
sbbb
es
mov
jb
or
push
bound
mov
sbb
or
movl
lock
jb
mov
mov
push
loopne
add
repz
mov
movsb
cmc
jmp
sarb
mov
lea
sbb
mov
shlb
movsl
mov
push
cwtl
mov
imul
dec
movsb
or
mov
pop
add
adc
fdivl
shrb
fs
loope
jne
or
add
lods
lds
in
xor
iret
ds
add
je
add
repnz
add
imul
shll
cwtl
lds
jp
popa
ud1
and
nop
and
xchg
sahf
adc
push
mov
xchg
sbbl
fstl
lods
cmpsb
fcompl
add
scas
rcl
cmp
shll
roll
cmp
jae
jle
pop
sub
loop
cld
iret
cli
in
add
cmp
sti
pop
or
dec
sub
inc
aaa
loopne
daa
cmp
mul
sbb
scas
jno
add
out
jo
inc
and
pop
rclb
fmul
jo
cmp
or
push
addr16
jp
out
cmp
rol
outsb
call
enter
int
jae
add
adc
or
xorl
sahf
xor
mov
stos
ret
or
movl
out
aaa
xlat
add
ja
or
sbb
pop
mov
pusha
push
addl
fiaddl
push
jbe
fsubrl
ficomps
enter
adc
test
fcomps
ja
pusha
inc
clc
mull
xlat
mov
jge
add
aaa
push
movsb
jnp
jnp
add
rclb
or
ljmp
js
pop
or
mov
xchg
add
push
add
adc
cltd
js
push
xchg
enter
add
cmp
push
loopne
jns
cmp
add
mov
dec
imul
in
dec
dec
mov
xchg
push
sub
aad
rol
test
sarb
mov
mov
xchg
sti
jne
xor
add
mov
movsb
jp
out
lret
scas
pop
jbe
es
jns
jge
out
xchg
push
cwtl
add
lahf
mov
nop
add
mov
out
and
xchg
cmpsl
mov
int3
mov
shl
les
inc
test
xor
fimuls
cmpsl
adc
pop
mov
xchg
mov
jns
push
dec
sbb
push
jae
jne
rolb
add
cmp
cmp
sbb
rclb
repz
mov
fcoms
out
ja
and
add
sbb
lds
js
mov
or
add
xor
and
add
mov
sbb
js
push
movsb
sbb
loop
and
push
gs
mov
jg
push
sub
add
xrstors
mov
or
int
or
scas
pop
xchg
sbb
pop
mov
xorb
push
ds
or
loop
adc
sub
fdivrl
adc
add
dec
add
mov
addl
jnp
inc
cmp
push
cs
inc
adc
dec
push
add
fiadds
add
aam
imul
xor
add
aas
xor
icebp
pop
mov
adc
push
in
sub
shl
xchg
ret
imul
dec
inc
subb
fcom
in
in
out
les
aad
push
jbe
idiv
and
push
jno
les
mov
imul
jp
stos
add
pop
lock
pop
loopne
les
xor
icebp
inc
dec
fisubs
sahf
ds
in
mov
mov
sti
mov
push
out
push
int
lahf
enter
rolb
and
in
mov
pop
cwtl
xor
pop
mov
fwait
pop
mov
repnz
das
jecxz
sub
cmp
and
sbb
inc
mov
xor
mov
inc
push
call
mov
int3
lds
imul
add
dec
sarb
xchg
repz
rclb
adc
es
enter
aas
test
and
push
clc
dec
inc
push
test
add
mov
outsb
roll
jo
pop
into
fcom
inc
inc
nop
in
push
aaa
xchg
test
test
add
sub
in
shlb
sarb
es
add
in
imul
inc
dec
inc
mov
dec
sbb
lcall
lret
inc
pushl
add
mov
push
and
push
push
xor
pusha
repnz
pop
into
icebp
xchg
xchg
insl
and
push
mov
add
ret
pop
sub
lea
mov
add
popfw
mov
lock
and
lods
mov
push
adc
pusha
into
push
dec
jmp
add
adc
outsl
popf
push
clc
xchg
sub
nop
mov
pop
jle
int
cmp
pop
xor
mov
pop
and
push
pop
push
mov
jbe
mov
jmp
in
addr16
mov
dec
add
push
stc
fsub
mov
les
and
cmp
cmp
enter
xchg
xor
out
fadd
push
mov
jno
mov
pusha
sahf
pushf
add
mov
imulb
mov
test
pop
call
pop
in
lret
jno
and
adc
or
mov
xchg
jno
mov
popl
sub
or
add
lahf
scas
inc
xor
sub
cwtl
or
stos
imul
mov
dec
repnz
arpl
inc
jae
xchg
lods
insb
sub
cmp
or
loope
addb
rolb
adc
or
pusha
sbb
jmp
add
mov
lcall
shlb
jnp
dec
in
andl
stos
sub
push
and
or
mov
jno
mov
std
fs
pop
cli
and
dec
mov
cld
imul
test
mov
add
loopne
xor
mov
sbb
jne
mov
mov
cmp
jns
mov
and
dec
mov
xchg
inc
repz
xlat
xor
inc
test
psubq
addb
in
pushf
aas
pop
scas
add
dec
fbstp
jb
fldenv
je
nop
mov
in
adc
xor
inc
jnp
mov
scas
sbb
push
lods
dec
adc
icebp
sub
mov
sar
adc
xor
popl
push
les
xor
roll
jb
add
repnz
push
cmp
dec
scas
add
jae
pop
jns
ja
hlt
jne
add
test
fistps
loopne
sub
push
mov
sahf
xchg
andb
jecxz
xor
lock
pop
in
rol
stc
addr16
pop
test
repnz
push
sub
icebp
cmp
fnstsw
cmp
pop
lds
sbb
sbb
xchg
lock
dec
add
addr16
lds
xchg
add
and
insl
pusha
or
js
mov
add
mov
add
mov
hlt
jecxz
xor
test
mov
pusha
lods
sbb
int
or
adc
xchg
fwait
rorb
lcall
test
leave
dec
call
xor
xorb
add
xchg
testb
hlt
mov
jmp
stc
popf
add
fidivrs
push
inc
test
data16
mov
pop
inc
scas
nop
vsqrtsd
jg
fcoms
gs
fwait
mov
inc
and
jo
in
or
sub
dec
notl
add
outsb
insb
in
mov
les
xor
sbb
add
push
rol
jnp
mov
ret
jl
push
add
out
in
add
add
into
mov
lahf
add
lods
dec
push
pop
xchg
cmp
int
or
pop
fnsave
test
add
cmp
js
add
or
decb
mov
or
lds
add
loopne
std
mov
fwait
imul
nop
sub
test
inc
and
in
sbb
insb
and
mov
sub
xor
or
rcll
mov
pop
sbb
mov
addr16
add
jl
push
mov
add
push
dec
mov
inc
insb
les
popf
sbb
mov
sub
shll
cld
test
faddl
inc
gs
mov
cmp
lds
mov
test
stos
js
aas
dec
inc
shrb
mov
xchg
push
clc
pop
fs
push
inc
adc
outsl
out
nop
sbb
adc
pop
adc
test
scas
cmp
or
mov
mov
popf
pop
ret
in
cmpsb
clc
add
sub
mov
cmp
fiaddl
enter
adc
mov
inc
dec
mov
adc
js
inc
in
jge
lret
adc
addr16
out
lock
es
mov
push
cwtl
sbb
sub
jo
dec
pop
dec
or
mov
pop
jmp
dec
outsb
add
add
mov
xor
mov
imul
add
mov
les
xor
jne
fistpl
mov
faddl
jnp
nop
mov
dec
inc
pop
add
shrb
pop
sub
pop
hlt
adcb
and
out
or
pop
adc
add
outsb
repnz
sarb
movsb
pop
mov
add
sahf
stos
jns
insb
stc
and
pop
add
mov
jle
lea
sbb
add
inc
int3
out
pop
cmc
mov
inc
jae
stos
and
pop
inc
add
addb
push
cmp
mov
mov
or
jmp
ds
in
cmpsb
pop
push
jle
cmp
fsts
and
pushf
fidivrl
inc
mov
add
loope
adc
cwtl
and
push
pop
push
add
adc
aaa
movntps
lcall
cmp
xchg
aas
add
cmp
xor
hlt
cmp
subb
push
or
sbb
or
aas
inc
out
movsb
add
movsl
add
int3
jecxz
or
adc
test
add
add
stos
and
adc
jb
add
mov
xor
xchg
popf
mov
cli
inc
dec
add
fists
out
fsub
mov
xchg
add
lods
mov
ret
mov
push
bound
xorb
dec
add
lods
out
ret
pushf
lret
aaa
mov
cltd
add
ret
loopne
aam
pop
pop
xor
in
sub
or
scas
rep
seto
push
xchg
jnp
aaa
cmp
rcr
add
or
fmul
mov
int
repz
add
pop
sbb
add
movsl
das
dec
inc
les
or
xchg
adc
sbb
cmp
int
ljmp
push
push
jl
cmp
addr16
pushf
lods
jo
lahf
mov
cwtl
clc
shrl
push
andb
aad
popf
fiadds
mov
dec
out
add
pop
std
add
sysret
rcrl
jo
add
add
mov
iret
sub
dec
add
je
cld
xor
dec
adc
push
sbb
xchg
jns
pop
nop
dec
mov
aas
arpl
test
mov
add
aam
ljmp
pop
adc
mov
sti
ja
sbb
mov
inc
xchg
push
daa
lret
adc
out
push
aas
pop
add
sbb
ljmp
dec
adcb
add
mov
in
loop
insb
push
idivl
add
cwtl
imul
nop
in
xchg
jo
add
xor
shl
stc
dec
xor
mull
and
leave
in
add
sub
sub
mov
mov
popa
xor
adc
xlat
push
add
test
cltd
cmp
dec
mov
lret
mov
mov
popf
leave
sbb
out
call
fcmovu
subl
add
outsb
xlat
jbe
inc
rolb
mov
arpl
bound
mov
xchg
jo
mov
adc
push
xchg
leave
lahf
nop
push
outsl
dec
mov
adc
sbbl
pusha
addb
dec
popa
iret
cmp
jae
lret
faddl
mov
xchg
sbb
pop
fildll
inc
out
cmp
test
fcompl
enter
movb
imul
adc
push
mov
inc
sub
ret
mov
popa
mov
xchg
push
cmp
cli
pusha
cwtl
popf
or
inc
xor
cmp
rolb
mov
ltr
xor
xchg
pusha
adc
clc
push
add
jmp
adc
rdtsc
add
jg
or
sbbb
add
inc
sbb
mov
js
push
add
movsl
and
inc
ds
call
cmp
cwtl
enter
inc
lods
add
jae,pt
pusha
pop
push
leave
inc
pop
in
add
jns
pop
enter
add
imul
ret
push
fdivl
cmp
add
xchg
imul
das
sub
pusha
cwtl
imulb
repnz
dec
fwait
mov
mov
scas
test
add
rcl
js
pusha
mov
rorb
add
mov
xor
dec
cmpsl
mov
mov
scas
lret
pop
jge
mov
leave
xor
fs
jle
cmp
cwtl
fidivrl
adc
out
dec
add
xor
loopne
cltd
add
or
ja
mov
add
imul
es
lret
sub
and
pop
fdivr
insl
adcb
inc
push
cmp
lahf
pusha
fwait
orb
add
or
rol
jno
cmp
imul
les
add
mov
push
mov
stos
test
inc
fiadds
in
ljmp
push
dec
movsb
mov
push
mov
inc
mov
and
inc
inc
pushf
add
xor
sub
adc
cmp
aam
lret
fcoml
add
dec
mov
roll
add
and
in
and
sbb
adc
inc
pushf
out
pop
les
cmp
les
stos
mov
inc
sub
sub
xchg
or
arpl
mov
cwtl
and
mov
add
nop
lcall
jge
add
insb
sub
lds
or
mov
pusha
xchg
and
jns
add
add
mov
push
pop
insl
leave
stos
push
xchg
imul
sub
cmp
or
in
outsb
mov
and
lcall
or
outsl
dec
add
stc
adc
jecxz
enter
jnp
sub
cmp
jle
and
cmc
cwtl
and
lahf
jo
pop
add
into
ret
in
add
inc
sbb
dec
dec
stos
mov
nop
cmpsl
int3
cltd
add
mov
lret
jle
push
xor
xlat
and
je
pop
xor
sbb
xor
repz
in
push
rolb
movsb
xchg
pusha
and
or
push
sbb
outsb
fcompl
lar
lock
xchg
add
push
mov
dec
add
hlt
popf
mov
add
push
dec
movsl
mov
add
lcall
dec
add
bound
es
je
push
sub
movsl
sub
jo
add
pop
adc
xchg
mov
pop
sti
and
inc
addr16
jns
fisubl
test
or
add
into
sarb
add
fcom
ljmp
xchg
cmpsl
mov
iret
test
lods
xorl
push
jg
les
outsl
pushf
push
inc
mov
pop
pop
pop
mov
pop
add
std
in
mov
mov
push
add
and
push
mov
iret
inc
ja
or
mov
addb
sbb
cli
sub
jnp
insb
add
inc
sbb
add
or
subb
sarl
xchg
jmp
orb
add
push
das
jnp
add
and
aad
stos
jae
call
outsl
add
jno
iret
add
push
ss
push
loop
mov
or
dec
pusha
je
or
arpl
ds
fdivl
mulb
cmc
inc
enter
loopne
ffreep
cwtl
inc
cmp
pop
mov
and
jns
add
jmp
inc
jne
in
out
aas
shrb
pop
movl
pop
cmpsl
cmp
int3
dec
jp
sarb
add
mov
adc
add
pusha
fisubrl
adc
mov
and
test
cltd
pop
lds
rol
dec
dec
insb
mov
mov
dec
call
mov
sbb
push
test
dec
adc
fstl
mov
mov
mov
inc
add
ror
mov
jo
sub
mov
pop
push
call
ficoml
clc
cmc
and
sahf
test
incl
rcr
int
out
shrb
or
mov
add
sub
ret
add
mov
movb
or
pop
sub
out
cmp
xor
loopne
add
pop
jbe
in
jno
or
sub
rcrl
push
add
clc
fimull
out
dec
dec
sbb
push
sub
leave
shlb
push
jmp
js
adc
std
ja
sbb
add
inc
sub
shl
sbb
imul
pusha
test
test
aad
push
mov
jg
xor
cmp
adc
pop
dec
mov
push
sbb
mov
testb
cmp
jl
xorb
lret
aam
inc
sbb
and
push
pop
out
or
imul
dec
adc
addb
adc
push
mov
or
ret
xorb
adc
jecxz
cmp
movsl
lods
xchg
stos
mov
daa
aas
lahf
inc
adc
cmp
imul
rolb
inc
jmp
and
sbb
push
xlat
xor
or
in
or
movsb
loopne
dec
scas
add
jo
pop
js
jl
das
and
pusha
or
adc
outsb
roll
outsl
cmp
nop
inc
inc
pusha
ss
dec
or
sbb
dec
pusha
xchg
adcb
mov
call
xchg
add
and
xchg
out
or
cmpsb
ljmp
mov
adc
or
test
mov
cmp
int
adc
fs
jg
add
iret
fmuls
jne
pop
dec
imul
and
ss
mov
jns
or
jb
jmp
addr16
add
push
xor
insl
push
mov
incb
aam
push
or
cmpsl
inc
ret
add
sbb
ret
leave
fstpt
pop
sub
and
lret
add
insl
jmp
and
iret
sbb
shl
and
mov
clc
loop
add
and
mov
jnp
sbb
sub
dec
push
add
rcl
or
pop
dec
pushf
or
push
lock
jecxz
clc
data16
scas
je
add
ljmp
sbb
insl
sbb
mov
arpl
mov
leave
xor
mov
out
pop
sarb
cld
hlt
push
aam
int
xor
mov
sbb
es
cmpsb
mov
int3
push
inc
insb
adc
sahf
add
insl
dec
jno
pop
sbb
arpl
movsl
mov
mov
lds
xchg
cltd
dec
and
mov
mov
jno
and
pop
cmp
imul
fcomip
xchg
pop
jg
in
cld
dec
add
adcl
add
mov
and
push
pop
add
ror
icebp
push
iret
mov
xor
sbb
sub
xchg
xor
xor
xchg
cmc
hlt
fimuls
or
repnz
lds
pushf
add
enter
ljmp
mov
inc
movl
hlt
add
ljmp
sub
fs
mov
nop
jmp
movsl
sub
mov
sub
inc
add
pop
sub
inc
push
das
jb
hlt
sbb
ret
cmp
xor
add
sub
ja
sub
inc
or
add
xchg
inc
sub
dec
in
lret
sub
sbb
fwait
adc
push
loopne
filds
xor
push
and
in
cmp
leave
rolb
sub
jp
stos
call
inc
addr16
add
es
cmp
fldl
inc
push
repnz
les
ds
cmp
in
push
push
test
rcl
add
inc
out
pop
les
enter
add
mov
push
or
sbb
dec
scas
lret
xor
call
pusha
push
sarb
mov
dec
andb
xchg
jno
add
cmp
mov
mov
in
es
inc
icebp
clc
cmpsl
mov
cmp
add
insl
enter
shlb
inc
pop
fcoms
mov
add
pop
mov
xor
mov
or
adc
push
cmp
je
add
dec
mov
enter
and
fisttpl
cmpsl
loope
in
adc
add
sbbl
add
xor
loope
and
push
add
adc
add
pop
pop
xor
mov
xor
cmc
pop
add
push
inc
pop
pop
ja
into
xor
aas
popa
pusha
aam
mov
scas
mov
xor
ret
hlt
add
jo
fildll
or
jp
add
adc
pop
cmp
outsb
or
jle
push
aam
lds
mov
movsl
adc
add
mov
sbb
js
xor
inc
shlb
mov
pop
xor
cld
cltd
add
dec
popf
dec
adc
cli
pop
cld
dec
cmp
add
jae
push
inc
ret
add
loope
xchg
add
nop
pusha
mov
push
outsl
add
in
jp
inc
sarw
cld
jae
xor
push
hlt
sub
adc
xchg
aam
push
xor
push
push
loope
rorb
or
add
xor
frstor
iret
enter
mov
pop
mov
rorb
jbe
xor
add
dec
xchg
mov
pop
jg
add
sbb
cli
dec
jns
push
pop
jno
push
mov
xor
cmp
or
dec
sub
push
shll
shll
or
push
aas
hlt
ret
push
mov
lahf
cmp
xor
mov
lea
nop
lock
adc
fiadds
mov
add
xchg
dec
repnz
adc
repz
sbb
in
inc
sub
je
sbb
or
outsb
insb
andl
mov
mov
stc
jg
test
adc
sub
pop
jecxz
mov
icebp
push
stos
mov
sarb
jb
mov
ret
daa
and
leave
ds
xchg
lods
xor
push
js
push
out
jp
orb
cmp
dec
inc
sarb
in
mov
add
and
int
add
daa
jmp
pusha
dec
pusha
jmp
jo
add
gs
pop
dec
fistpll
dec
nop
jo
cmp
pop
lock
dec
dec
fbld
jno
lds
cli
mov
cmpsl
sub
arpl
add
mov
rolb
add
sahf
jmp
pop
pop
push
mov
cltd
cmpb
push
pop
mov
jmp
push
mov
sbb
lods
scas
adc
xor
pop
jbe
lret
mov
cmp
mov
pusha
fdivl
add
cwtl
fistl
sub
mov
filds
add
fistpll
add
fisttpl
out
xlat
leave
cli
adc
sbb
pop
mov
fwait
hlt
or
sub
rclb
add
push
sub
test
push
test
mov
dec
jne
and
xchg
lock
mov
jno
sub
pop
inc
xlat
and
cmp
xor
lods
ret
sbb
pusha
test
xchg
call
add
mov
outsb
ljmp
test
jbe
push
mov
call
lcall
aaa
add
jne
sbb
or
sub
sub
sub
mov
hlt
leave
fbld
jbe
add
dec
push
lea
add
ret
xchg
shr
pusha
aad
js
clc
pop
sbb
sub
loope
sbb
je
add
ficomps
xlat
jbe
add
sbb
mov
mov
and
movsb
iret
in
clc
pop
sub
lods
jo
dec
js
mov
test
ret
jmp
fcoms
std
jo
inc
or
mov
dec
clc
adc
mov
popa
icebp
push
add
and
cmp
mov
sbb
dec
push
jo
loopne
add
cltd
data16
jae
addr16
cmp
jge
and
in
pop
insl
jb
or
int3
mov
int3
cli
pushf
push
pusha
add
push
loope
imul
dec
jbe
stos
data16
cmp
mov
call
inc
cmp
fistl
inc
inc
jnp
subb
add
jp
fadds
and
insl
push
add
call
or
mov
cmp
enter
inc
sub
outsl
add
mov
xorl
ror
insl
adc
sbb
pop
dec
inc
enter
xchg
test
push
pop
sub
mov
es
pop
cmp
cmp
and
mov
bound
aad
fldl
cs
sbb
or
out
and
xor
and
int
inc
aaa
cmpsl
and
mov
push
or
push
addl
jo
lock
packuswb
ret
loopne
mov
enter
loop
xor
int
adc
mov
test
add
push
dec
rolb
out
popa
data16
mov
xor
adc
xor
xor
pop
add
cmpsl
and
cmp
mov
add
shll
stos
sti
faddl
mov
push
cltd
jo
adc
sbb
xchg
cmp
cld
mov
nop
or
or
test
xor
mov
cmpsl
xor
stos
xchg
dec
and
lock
insl
jae
or
insb
scas
pop
add
arpl
les
xchg
adc
aam
repz
nop
inc
add
fs
cltd
and
add
push
dec
pop
test
push
xor
add
mov
adc
xchg
add
subl
add
xchg
daa
flds
cs
sub
and
dec
mov
pop
fimull
lock
addb
inc
sbb
sbb
int3
xchg
aas
jp
sahf
clc
mov
jb
pop
into
mov
pop
adc
push
and
test
dec
mov
mov
mov
jl
pop
cmp
aaa
sbb
outsl
adc
rclb
xor
hlt
sbb
push
push
sbb
mov
insb
leave
pop
mov
xchg
les
shlb
rcrb
int
stos
sbb
ljmp
and
pop
cmp
mov
push
mov
mov
pop
fs
sub
push
enter
cltd
push
call
xchg
ljmp
rolb
iret
arpl
insl
dec
adc
pop
or
insb
cmp
pushf
add
dec
jno
out
mov
int3
jae
mov
sti
popa
inc
mov
dec
loope
adc
inc
loop
pushf
and
push
push
ret
or
add
mov
in
add
cs
pusha
faddl
xchg
or
adc
icebp
mov
outsb
fldl
js
push
cwtl
sbb
cmp
std
in
jbe
inc
sbb
or
sbb
inc
pop
add
std
jmp
push
ja
sbb
pop
add
or
xchg
cmpsl
rorl
xchg
mov
pusha
mov
iret
ret
sbb
sub
push
pop
pop
xchg
sub
sbb
dec
popa
loope
add
scas
xchg
notb
dec
sbb
mov
movsb
cwtl
sbb
sbb
jbe
inc
pusha
popf
sbb
dec
cmp
pop
dec
mov
add
icebp
int3
pop
sbb
ja
aad
in
ss
add
xor
push
jecxz
ja
add
xchg
dec
pop
stc
mov
lcall
mov
xchg
stos
adcb
sub
mov
dec
dec
fwait
jp
push
add
ret
cmp
cwtl
adc
push
jne
ret
push
mov
lds
cmc
pop
xor
scas
out
test
mov
and
in
shl
add
add
enter
mov
js
mov
mov
add
movsl
pop
outsb
pusha
pusha
pop
aas
add
in
repnz
aam
sbb
jnp
sbb
push
pxor
adc
mov
jae
add
nop
cmpsb
mov
js
jne
pop
push
les
push
bnd
cmp
xchg
add
shrl
add
mov
lret
and
mov
sub
jg
cld
loopne
add
sbb
pop
sub
xchg
sbb
je
mov
call
dec
lods
dec
fildl
andl
xor
sbb
lds
cmc
add
push
cli
movsl
clc
inc
incb
cmp
add
mov
icebp
add
mov
push
cmp
add
rorl
or
std
dec
je
cmp
lcall
dec
add
jp
or
pop
leave
cmp
xchg
add
and
dec
lods
mov
testb
movsb
rorb
push
xor
repnz
stos
adc
sbb
subl
rcl
inc
add
xchg
and
add
pop
cltd
add
jl
leave
arpl
adc
add
xchg
or
stos
les
mov
lods
xchg
rolb
gs
popa
mov
scas
pusha
cltd
cmp
test
push
nop
addb
push
loopne
add
dec
jno
mov
pop
push
dec
mov
add
mov
inc
pop
in
mov
jge
adc
push
mov
in
cltd
cmp
mov
xchg
or
jge
ja
rol
cs
and
pop
add
xchg
repz
sarb
repnz
adc
xchg
add
data16
daa
cmp
dec
add
mov
sbb
inc
adcl
cltd
out
cmpsl
mov
adc
nop
xor
xchg
xchg
and
dec
sti
push
dec
aam
push
sbb
les
mov
mov
pmaxsw
imul
jnp
mov
pop
or
pop
xorb
add
mov
std
out
push
rorb
mov
jbe
adc
aam
aas
sub
sbb
stos
imul
fldl
test
fsubrl
mov
lods
add
outsb
push
sbb
mov
nop
pop
add
dec
push
lret
pushf
fisubs
jno
add
je
stos
mov
call
dec
add
mov
mov
lcall
lea
and
mov
xchg
xchg
sbb
pop
and
orb
loop
add
inc
inc
sahf
xchg
aas
add
dec
mov
mov
movsl
mov
enter
adc
lock
add
xorb
pop
add
nop
mov
or
psubsw
test
or
xchg
repz
das
xor
mov
inc
sub
outsb
hlt
sbb
mov
ror
add
out
xchg
push
adcb
cltd
pop
leave
test
cmp
orb
movsb
stc
xor
lcall
nop
dec
arpl
sti
in
lret
outsl
mov
sub
lret
inc
push
sbb
sub
pop
lret
pop
or
add
adc
mov
push
fwait
loope
dec
and
sbb
pop
cmp
movsb
cmc
add
call
mov
std
mov
lret
sub
out
pop
adc
ss
std
mov
pop
adc
sbbl
jge
mov
fs
add
mov
lahf
cmp
das
ljmp
ret
cld
add
jle
lret
xor
sub
les
xchg
cwtl
push
imul
mov
pop
mov
cld
sbb
out
mov
lods
pop
jmp
stc
dec
sbb
xchg
xorl
arpl
flds
dec
cmc
mov
out
rol
mov
sbb
jle
loopne
or
push
inc
mov
adc
xor
push
xor
add
sarb
sub
add
scas
lock
push
or
or
add
idivl
mov
mov
das
pop
aas
cmc
jo
dec
imul
sbb
add
pop
ss
call
aas
int3
loop
stc
jbe
add
sbb
mov
lret
cs
jae
add
arpl
movsb
mov
jns
mov
push
inc
inc
add
in
mov
popa
aas
dec
inc
fdivs
add
mov
cmp
fdivl
push
adc
cmp
sub
jns
pusha
sarl
xchg
add
js
cmp
xchg
add
fcmovne
out
out
push
add
ja
add
mov
sbb
mov
push
gs
jecxz
aad
popf
lock
cld
adc
cmp
mov
sub
push
xor
test
xor
push
test
in
hlt
jns
inc
cld
clc
xchg
xor
add
mov
mov
je
sbb
push
arpl
mov
roll
sbb
out
add
es
addb
add
mov
mov
cmpl
popl
xor
sbb
add
rol
clc
dec
pop
and
inc
sub
add
movsb
aas
sbb
jecxz
nop
mov
pusha
shll
add
sbb
xchg
push
and
pusha
cltd
cmp
push
add
sahf
scas
push
ret
or
mov
xchg
cmp
pushl
mov
out
in
popa
add
sbb
rorl
sahf
fcoms
pop
jmp
adc
adc
shl
and
pop
jb
adc
and
pusha
or
iret
sub
adc
cwtl
roll
and
jae
push
add
into
rcll
add
out
repz
pop
mov
loopne
mov
data16
xor
lret
push
subb
or
fidivs
cltd
jnp
into
sub
xor
mov
clc
pop
pop
xor
cmpb
push
inc
loop
pop
lret
decl
rolb
popf
or
fs
sub
aad
add
jae
mov
pop
adc
xor
add
movsb
add
mov
fs
pop
add
add
mov
xor
pop
jns,pt
pop
test
jns
int
sub
jle
add
lahf
stos
sbb
mov
outsl
mov
stos
roll
and
sbb
mov
ds
pop
xchg
movsl
inc
test
pop
rcr
and
pop
add
dec
push
popf
adc
imul
mov
lcall
cmpsl
push
inc
lods
hlt
lcall
dec
clc
bound
daa
add
and
pushf
rcll
sbb
adc
scas
mov
or
push
cmp
xor
int3
cmp
orb
sbb
dec
adc
add
repz
adc
mov
cmp
cwtl
aad
push
leave
scas
add
sub
dec
aam
adcb
cwtl
dec
incb
push
xchg
mov
mov
dec
ljmp
mov
inc
push
xorb
mov
shll
mov
shr
sub
and
cmp
adc
sbb
or
mulb
mov
mov
add
lcall
das
add
pop
and
sahf
jle
or
pop
movsl
add
js
xor
cmpl
jne
xchg
xlat
add
loope
xor
lcall
cltd
ret
cmpsb
andl
inc
test
test
movb
push
and
repnz
das
add
sbb
sub
cmp
shlb
sbb
stos
mov
xchg
hlt
jbe
mov
leave
push
scas
addr16
bound
add
lds
lcall
xchg
aaa
xchg
xor
sti
sbbb
jns
push
dec
mov
ja
push
aaa
inc
pop
mov
insl
add
sub
in
arpl
lcall
mov
movsb
xchg
sub
sbb
mov
add
loopne
xor
stc
movsl
repnz
insb
out
rcl
fcomps
push
mov
sub
das
mov
cld
hlt
mov
jae
jne
loope
and
sarl
jg
pop
adc
push
jge
shll
add
add
pop
fiadds
pop
push
out
sub
bound
add
fstpl
add
dec
push
pop
xorb
in
enter
xor
sbb
sbb
shl
js
mov
cltd
cmc
js
imul
scas
inc
push
inc
xchg
mov
shlb
orl
add
into
daa
mov
int3
push
or
mov
imul
pop
push
push
mov
outsl
cwtl
push
fstps
mov
push
pop
insl
test
pusha
push
sbb
xchg
dec
adc
rcr
aas
sub
out
add
dec
test
mov
cmpsl
jp
subb
and
xchg
fs
mov
mov
mov
in
jb
push
pop
cmp
and
sub
int3
mov
movsb
in
nop
or
es
and
imul
mulb
sub
clc
cmpsb
xlat
jo
xor
xchg
in
aaa
and
andb
out
pop
and
pop
xor
das
dec
inc
les
aam
mov
push
out
lds
mov
mov
sbb
push
dec
shlb
adc
sub
sbb
push
roll
lds
inc
adc
cmp
mov
sarl
in
test
stos
jns
fpatan
add
imul
cld
hlt
add
aaa
mov
lcall
lret
pusha
or
lret
inc
add
test
mov
aad
into
adc
pop
add
inc
pop
jl
mov
fldl
ds
mov
leave
out
add
cmp
adc
or
arpl
mov
sbb
or
add
dec
sbb
cmp
xor
nop
add
adc
xor
divl
jge
add
call
cmp
and
loopne
test
inc
fcmovnu
mov
or
into
iret
shr
js
cli
cmpsl
cwtl
scas
mov
das
mov
add
add
jecxz
hlt
les
ss
jnp
push
jg
movsl
inc
leave
fistl
sub
add
test
push
enter
push
mov
jbe
push
roll
push
icebp
pop
xchg
je
dec
add
dec
stc
std
or
sarb
mov
mov
fnstcw
adc
lods
enter
lock
or
push
in
idivb
aam
mov
scas
xchg
lret
add
dec
jmp
movb
lds
mov
dec
mov
add
in
and
sub
mov
orb
add
lret
push
cmc
jns
jmp
add
pop
pop
mov
xchg
mov
mov
pop
cmp
fsts
into
aad
dec
aas
push
add
outsb
xor
push
inc
nop
adc
inc
jmp
lcall
lret
or
pop
mov
rcrb
dec
or
test
out
add
push
dec
fs
inc
in
popa
add
icebp
xchg
sbbl
push
pushf
sub
inc
inc
outsl
add
dec
pop
or
loop
xor
dec
nop
inc
add
xchg
sbb
xchg
mov
shlb
jne
xchg
push
sahf
jo
mov
ljmp
mov
add
shlb
insl
add
jo
push
adcl
mov
lret
adc
in
or
clc
inc
call
movsl
add
pop
mov
add
arpl
add
cmp
aam
xchg
nop
sbb
mov
inc
test
pop
dec
add
mov
testb
and
push
fstps
add
push
stc
mov
xchg
les
sarb
addb
pop
aaa
dec
orl
cwtl
sub
mov
mov
mov
inc
and
sub
popf
cmc
xchg
jb
xchg
inc
add
lods
add
into
pusha
pop
cmp
mov
mov
test
inc
cmp
push
nop
jmp
or
mov
arpl
test
pop
test
pop
stc
sarb
push
dec
jno
add
pop
mov
mov
xchg
rcrl
sub
jns
mov
cmp
xor
or
div
nop
sbb
push
cli
mov
shrl
add
enter
ffreep
inc
ret
pop
pop
outsb
jecxz
add
add
frstor
out
repz
loope
mov
aam
mov
xlat
jns
xor
mov
push
mov
popa
and
pop
adc
add
sub
mov
mov
add
sub
fs
push
add
add
add
pop
inc
or
das
out
scas
mov
fs
loop
mov
addl
loopne
jge
jne
xchg
dec
or
xlat
add
mov
popf
loopne
pop
xchg
lds
pop
lods
fdivs
sbb
loop
add
adc
pop
ret
adc
rolb
iret
xorb
mov
cmove
fstps
cmp
ds
add
sahf
dec
lcall
mov
in
and
jmp
lds
roll
mov
jb
inc
adc
add
push
cltd
aam
rcrb
mov
xchg
xlat
std
push
insl
dec
dec
sti
add
push
xchg
mov
mov
xchg
loope
fcmovbe
xor
arpl
es
pusha
cmpb
pop
add
sti
sbb
jle
decb
lahf
repnz
add
scas
jge
adc
cmp
stos
bound
cvtdq2ps
aas
pushf
sub
push
push
add
mov
ja
or
iret
inc
sbb
jno
cmpsb
js
dec
pushf
xor
sahf
jbe
cli
add
push
cwtl
dec
out
mov
push
mov
add
icebp
push
sub
jo
clc
mov
nop
mov
pop
adc
jb
in
add
aaa
insb
xchg
jbe
sub
loopne
outsl
add
les
movsb
arpl
scas
int
add
jmp
hlt
les
add
mov
call
pop
xor
sub
sbb
push
inc
dec
aaa
lcall
shll
sbb
add
je
notb
pusha
loopne
aad
inc
loopne
push
xor
jp
pop
or
test
add
mov
nop
pop
add
mov
xchg
jns
fwait
outsb
pop
mov
mov
jl
lea
popf
and
in
lods
or
mov
test
xchg
fdivrs
mov
inc
add
pop
or
test
movsb
dec
xor
xchg
lret
pop
aas
xor
add
mov
add
shl
jno
mov
push
sbb
adc
adc
popf
stos
sets
adc
add
insb
cpuid
mov
jp
mov
gs
dec
jnp
add
aas
das
repz
sbb
xorb
add
pop
pop
cmp
sbb
test
repnz
sbb
sahf
roll
rcr
rcll
inc
aaa
sub
fadds
pop
dec
callw
in
adc
arpl
ret
orb
int3
cmp
es
test
add
bound
popa
scas
inc
pop
cs
in
add
sub
jecxz
fwait
mov
int
and
jb
fs
daa
mov
add
sub
or
add
cltd
pop
ds
arpl
jne
hlt
mov
js
dec
inc
icebp
sbb
sbb
add
outsl
out
adc
shll
mov
nop
pop
inc
enter
ds
jl
add
sub
lods
cmp
add
add
cmp
aad
add
js
out
push
add
ret
mov
add
mov
gs
or
jno
loop
fs
or
sar
pop
dec
movsb
das
stos
leave
pop
lods
mov
scas
aam
mov
ja
dec
fcmovnb
or
add
mov
int
rcrl
pusha
add
dec
out
stos
jbe
adc
mov
fadds
mov
dec
cmpsl
push
jmp
dec
stos
and
lcall
stc
push
ljmp
pop
add
stos
mov
out
daa
pop
xor
and
mov
jmp
sarb
pop
xor
clc
and
sub
add
mov
mov
cmpsb
pop
addb
lds
sbb
aaa
xchg
push
or
or
mov
pop
daa
test
jne
lahf
pop
pop
inc
add
subl
rcll
nop
or
cltd
inc
je
in
int3
test
fisubrl
push
imulb
leave
add
pop
sbb
push
decl
inc
add
movsl
and
pusha
xor
add
lea
mov
cmp
stos
fwait
shlb
dec
jmp
add
sub
nop
and
test
dec
push
mov
out
outsb
mov
mov
xchg
call
push
pop
push
cmp
xchg
jg
rolb
add
push
dec
and
repz
outsb
inc
mov
jge
sbb
lahf
dec
mov
mov
inc
loope
mov
inc
lret
mov
loopne
jg
pop
push
les
mov
lods
or
sub
insl
jnp
or
repz
and
or
sub
les
adcl
sti
mov
cmpb
inc
cmp
test
adc
lock
push
or
sbbl
mov
movsl
sbb
pop
sti
xor
dec
push
push
call
cmp
hlt
fs
lcall
popf
jno
pxor
jae
mov
fists
dec
iret
je
dec
ds
repz
negb
in
fs
xor
mov
fildl
sbb
inc
leave
cmp
rorl
mov
lret
repnz
fcoms
sarb
xchg
rcll
pop
addl
out
mov
fcompl
loope
push
ret
jge
mov
pop
nop
add
stos
fs
jb
or
aas
imul
scas
or
and
addb
xor
mov
sub
movsb
or
adc
iret
enter
mov
xchg
movsb
mov
xchg
loop
mov
ljmp
inc
clc
cmp
or
into
add
fxch
in
fs
add
inc
int
sub
push
pusha
and
or
jns
add
fisubl
cmp
in
leave
lahf
test
add
scas
fidivs
arpl
into
dec
gs
adc
rorl
cmp
inc
and
popf
pop
insb
add
arpl
and
out
testb
ljmp
fdivl
out
mov
stc
dec
adc
out
sbb
in
out
test
add
and
xchg
pop
mov
dec
ret
mov
dec
jno
hlt
pop
sar
cwtl
les
leave
sub
push
jle
cmp
popf
add
icebp
push
push
out
stc
mov
sbb
adc
mov
test
loope
fmull
xor
addb
and
cld
xor
popf
adcb
or
loopne
rolb
test
es
fldcw
xor
mov
insl
inc
jne
stc
xchg
pop
aas
in
push
sub
fimuls
nop
hlt
repz
jl
movsl
inc
cmp
or
pop
fnstsw
push
and
push
or
loope
cmp
cld
pop
push
int3
movsb
imulb
stc
jge
add
fwait
cmp
pop
call
out
adc
cmp
aas
adcb
clc
js
sbb
aas
sub
dec
mov
outsl
loop
mov
mov
sqrtps
xlat
add
jmp
inc
inc
imul
gs
dec
stc
mov
hlt
add
or
rcr
adc
xchg
rolb
sbb
jne
mov
testb
dec
call
jae
pop
add
xchg
in
jge
push
cwtl
adc
push
add
aaa
xchg
pop
sub
mov
sbb
int3
add
adc
add
dec
cmp
push
repz
mov
dec
cmp
inc
xchg
pop
jno
les
fimuls
sub
cli
push
pop
or
jecxz
lods
ror
scas
aas
mov
testb
jmp
shlb
dec
xor
addl
sub
push
cmc
jl
push
mov
xchg
sahf
sbb
ret
maxps
stos
loopne
imul
enter
pop
addl
daa
jle
mov
dec
sahf
ss
mov
loopne
jge
jb
lret
insl
popa
js
pop
add
and
and
push
xor
mov
rolb
pop
pop
cli
xchg
mov
ret
mov
push
jno
test
push
js
fisubs
add
sbb
xchg
sbb
movsb
push
and
cmp
push
sub
divl
sbb
fstpt
xchg
mov
cwtl
jnp
popa
inc
icebp
lds
add
cmpsl
icebp
shr
bound
lret
fadds
test
jl
lret
stos
dec
lock
add
and
add
fwait
movsl
jge
pop
jb
sbb
ret
faddl
jl
jns
jmp
fwait
cs
cwtl
cmp
adc
test
shl
jne
outsb
sub
mov
push
call
jp
std
xchg
scas
sbb
push
inc
insl
insb
mov
pop
cmp
lahf
sbbl
es
or
in
mov
inc
inc
adc
xchg
add
push
and
cmc
ret
mov
inc
gs
pushf
repnz
stc
or
subb
out
loope
dec
adc
sub
sbb
sti
popf
inc
rclb
shll
dec
mov
sub
cmpb
xor
sub
push
jecxz
rclb
add
hlt
mov
fcmovu
xchg
les
mov
popa
xchg
add
sub
jbe
ret
pusha
sub
arpl
or
sbb
pop
arpl
call
sbb
or
ss
jbe
cmc
or
test
pop
sahf
mov
push
shrb
jb
push
cmp
outsb
test
xchg
add
push
and
popl
pushf
push
xor
aam
lret
add
mov
fstpt
lahf
call
outsl
add
lock
clc
aas
xchg
cs
xchg
mov
shrb
testl
mov
loopne
out
mov
dec
jge
sbb
loope
jno
dec
mov
xchg
inc
out
cmp
addb
outsb
popa
lods
dec
pop
sbb
cwtl
cmp
sub
push
add
add
sub
mov
and
adc
mov
push
inc
andb
push
jg
mov
fdivp
cmp
imul
push
int3
add
cmc
pop
add
rclb
cmp
mov
or
add
fdivrs
bound
enter
mov
pop
stc
push
lods
fcmovnbe
dec
scas
sbb
rorl
movsb
and
je
add
mov
shll
lods
data16
jb
sub
cmp
arpl
push
out
mov
add
cmp
jg
xchg
sbb
jmp
insb
pop
cmpsb
gs
add
aad
in
dec
andl
adc
pushf
cmpb
sub
or
daa
test
aam
add
psubsw
lcall
subb
add
movsb
lret
add
add
jnp
and
lock
add
mov
jl
loopne
push
into
test
cmp
mov
jp
loopne
sub
rolb
push
ret
xchg
cmp
inc
pop
sarl
inc
mov
scas
fldcw
mov
stos
or
dec
test
gs
das
and
sub
rcrb
rcrl
mov
jne
and
ret
test
test
aas
push
inc
pop
addl
addr16
dec
rorb
and
movsb
jg
add
xchg
in
dec
test
dec
jae
sbb
mov
lcall
add
fdiv
jns
add
xchg
push
aad
and
add
lods
stos
ret
mov
sub
in
xor
sbbb
pop
mov
jp
push
mov
push
nop
xchg
or
enter
ds
dec
addb
xchg
jp
sub
inc
xor
leave
mov
add
ret
cmp
adc
add
dec
pop
add
out
in
push
add
jp
cmp
rcl
cmpb
ret
dec
push
fst
enter
add
mov
jmp
call
cld
in
enter
add
xchg
ret
cmp
in
jno
adc
in
lods
jge
or
lret
sub
add
insl
outsb
xchg
out
dec
int
add
xor
sbb
lea
pop
les
mov
ret
or
imul
sti
xchg
mov
loop
add
fstl
push
mov
cld
fists
addl
sbb
mov
divb
iret
dec
xor
stos
jge
dec
add
shll
rcrb
sti
add
dec
mov
dec
outsb
enter
xchg
fwait
mov
sbb
je
mov
stos
popa
add
std
cli
addl
push
sub
cmp
jae
add
daa
icebp
jno
inc
inc
sub
or
xor
outsb
add
insb
xchg
inc
cmp
lds
sbb
sarl
movsb
loop
stos
dec
clc
pop
jo
jno
add
addr16
loopne
xchg
add
ds
ret
pop
jle
pop
icebp
xchg
add
iret
pop
insb
xor
push
add
andb
or
in
pusha
gs
adcb
icebp
adc
pop
and
push
or
int
insl
out
mov
call
add
sbb
out
movl
movsb
pop
sub
out
mov
fadd
addl
inc
scas
jmp
and
push
nop
xchg
add
sbb
f2xm1
je
xchg
out
xchg
cwtl
or
cwtl
pop
cmpsl
xor
shll
loopne
jb
ds
dec
jge
out
add
xor
loopne
shll
cltd
ret
adc
jae
and
pushf
lods
cmpsb
xchg
rol
js
add
mov
mov
shll
sub
jmp
cld
into
js
les
xchg
test
lock
adc
cltd
mov
and
nop
dec
std
pop
and
push
arpl
aam
mov
test
iret
loopne
push
dec
dec
int
test
loopne
fcomps
xchg
flds
mov
jl
sub
cmp
imull
subl
cwtl
pop
add
xorb
test
test
and
out
sti
loopne
pop
add
mov
pop
test
adc
mov
cmpsb
in
jp
xchg
add
clc
ret
iret
aas
pop
cmp
out
dec
lahf
mov
mov
pop
call
data16
rorb
xor
movsb
pop
add
xchg
cmp
ror
mov
mov
dec
or
je
mov
movsb
push
xorl
or
subl
xlat
jb
push
inc
cli
fldl
xchg
cmc
out
xor
inc
mov
jo
mov
adc
dec
faddl
cmp
inc
add
add
adc
cmpsb
out
ja
push
and
mov
jnp
adcb
insb
clc
or
dec
mov
test
mov
or
call
imul
test
xchg
lret
and
adc
add
cwtl
xchg
and
icebp
lods
or
andl
pop
je
jge
add
out
push
mov
call
dec
lcall
sbb
push
mov
pop
idivb
and
test
loop
daa
mov
adc
mov
adc
pusha
sbb
ficoml
or
int
subl
add
mov
xchg
dec
or
or
xor
aas
stos
cltd
push
ja
in
add
push
addr16
inc
repnz
lods
sub
rol
sbb
dec
into
pop
int3
add
fld
and
in
sub
iret
lcall
shlb
or
jmp
test
aas
sub
jmp
dec
inc
std
push
shlb
xor
pop
aaa
int3
daa
fisubrl
cs
xchg
mov
hlt
push
add
mov
out
dec
mov
add
mov
sbb
adcb
mov
mov
or
or
js
mov
jb
jno
mov
das
cmp
mov
loopne
repnz
lcall
push
mov
xchg
test
sbb
test
es
lods
rcrb
inc
call
ja
int3
or
cmpsb
notb
mov
xchg
shl
adc
inc
pop
nop
cmpsl
gs
xlat
fists
js,pn
xor
les
mov
add
rcr
jge
shll
dec
jecxz
dec
sub
push
lret
and
push
fwait
inc
and
mov
push
lcall
nop
cmpsl
insb
xchg
pop
test
push
add
sub
lea
outsl
stc
subb
jecxz
jo
adc
in
pop
cmp
test
fisttpl
push
std
and
scas
push
mov
test
pusha
add
or
add
cmp
push
inc
jnp
push
dec
push
inc
add
mov
outsl
sub
test
add
cmp
pop
xchg
mov
pcmpgtd
and
in
add
pop
xchg
jno
lock
adc
std
mov
not
ret
cmp
or
flds
addr16
add
loop
out
mov
subb
and
adc
clc
subl
inc
inc
mov
jns
add
or
add
inc
push
fcmovnbe
add
xchg
push
int3
cmp
xchg
push
jb
and
loopne
cmp
cld
add
imul
or
subb
cltd
dec
cld
in
sub
sub
adc
lret
bound
mov
mov
rcrl
cli
xchg
sbb
adc
mov
daa
mov
mov
or
aad
cltd
add
nop
push
sub
ds
fiadds
dec
call
lret
sub
clc
aam
mov
dec
fisubs
mov
dec
mov
mov
mov
fistpll
add
lahf
mov
loopne
shll
cwtl
pusha
fxch
jb
ja
or
jno
out
push
and
sub
dec
push
enter
add
mov
cmp
sbbl
sti
inc
ret
adc
add
jl
jmp
pop
popa
xchg
jnp
or
stos
ret
pop
addr16
nop
pop
test
lods
fldt
cli
sahf
mov
or
shlb
inc
cli
mov
addr16
or
mov
add
imul
pop
mov
adc
jno
ret
sub
and
adc
or
push
inc
sbb
and
add
subb
xlat
aaa
outsl
call
pop
jae
decl
insl
stc
inc
loop
pushf
loope
lods
clc
shl
ror
dec
stc
sub
and
popa
loop
xlat
mov
sbb
push
out
ltr
sbb
add
in
test
dec
add
lods
push
or
out
int
faddl
jne
sbb
mov
mov
xor
in
loope
insb
pop
jbe
jl
loopne
mov
add
jne
and
out
shlb
ljmp
leave
pushf
aad
cmp
adc
xchg
add
iret
xchg
add
dec
int3
adc
cmp
cmpsl
push
cmp
xor
movsb
sbb
add
ljmp
mov
mov
fisttps
push
cmpsb
lret
popa
dec
test
cmp
lret
xor
jno
je
pop
popa
mov
pop
lcall
ljmp
adc
jo
jmp
in
and
shrb
mov
dec
sbb
add
orb
shlb
and
loopne
out
lcall
shlb
aam
stos
pop
imul
popf
andl
inc
push
push
mov
add
xor
pop
roll
enter
sar
rclb
fld
in
in
dec
mov
ret
loop
xor
int3
add
dec
mov
cmp
pushf
add
je
inc
loop
pop
mov
je
add
jmp
ret
add
pusha
out
sbb
add
xchg
lcall
add
and
push
mov
gs
bound
jmp
fimull
add
push
sbb
sub
loope
adc
sbb
jnp
ljmp
add
out
rolb
jmp
ds
dec
stos
adc
push
mov
frstor
inc
js
rorl
fwait
add
add
in
inc
add
mov
sbb
fldt
add
movsl
lret
mov
fdivrs
ss
inc
ja
lea
xchg
adc
pusha
test
stos
cld
mov
mov
fmull
push
add
mov
mov
or
mov
inc
fists
fisubrs
xchg
sub
cmpl
push
xchg
adc
stos
inc
xchg
int3
mov
add
stc
dec
jecxz
fldcw
fwait
enter
and
pop
mov
add
int
and
push
mov
push
psubq
das
push
stos
or
jl
dec
sbb
xchg
or
mov
in
mov
pop
mov
test
inc
in
push
xchg
cwtl
dec
mov
fbstp
test
sbb
sub
cltd
jns
add
add
xchg
sub
popf
cmpsl
orb
ficoms
xchg
push
cld
mov
mov
xor
in
or
push
imull
rol
in
bound
mov
jmp
lret
cmp
dec
or
add
jecxz
je
loopne
mov
sbbb
bound
ljmp
jge
lds
ja
loopne
test
add
stos
pop
push
add
lahf
lods
mov
mov
rolb
daa
in
lcall
test
or
mov
add
inc
les
leave
pop
or
stos
push
in
push
pop
mov
js
add
pop
push
xorb
mov
jae
mov
rcrl
or
push
arpl
jg
pop
adcb
aam
xchg
ret
xor
sub
mov
jecxz
jbe
push
mov
push
mov
xor
dec
in
jmp
aas
loopne
xor
jo
mov
sub
pushf
pop
ss
loop
push
jno
cmp
hlt
mov
mov
add
and
test
nop
fcomip
fwait
and
adc
push
sbb
push
push
cwtl
int3
push
das
cmp
sbbb
ficoms
cmc
rclb
loopne
mov
sub
daa
sbbl
in
jnp
add
mov
cltd
push
or
push
jo
pop
mov
aad
adc
cmp
xchg
repz
xor
mov
sbb
or
icebp
aam
push
mov
xchg
jl
fists
pop
sbb
xchg
addb
cmp
pop
roll
ljmp
add
push
or
jg
icebp
or
dec
cmc
lock
and
mov
or
dec
adc
pop
pop
in
add
jmp
sub
cmpsl
in
sbb
push
xor
xchg
inc
jl
add
test
dec
push
and
ret
sub
jo
nop
push
add
lods
mov
add
add
pop
shrl
xchg
ds
xchg
lds
in
sbb
or
dec
aaa
test
xor
pop
fcomps
ret
inc
pop
sahf
mull
mov
mov
pop
aam
ret
mov
cmpsb
mov
insb
out
jmp
adc
xor
mov
mov
daa
jg
sti
sub
stos
push
pop
mov
jo
push
jns
and
add
mov
jae
flds
sarl
pop
push
cs
add
rorl
loopne
xchg
lcall
outsb
shll
lock
outsb
stc
add
lret
xor
mov
sub
mov
fsubr
ds
pop
adc
dec
push
cmp
rorl
jb
xchg
xchg
cmpb
test
push
out
inc
pop
stc
shlb
in
mov
mov
or
fidivl
addr16
shll
jo
adc
pop
jnp
and
mov
lock
push
loopne
aam
addl
je
pop
jbe
mov
adc
mov
out
addb
pop
mov
fsubl
add
mov
clc
sbb
arpl
jnp
mov
pop
aaa
xchg
inc
in
inc
inc
int3
mov
fiadds
test
xchg
and
push
or
mov
inc
push
test
sahf
repnz
xor
sub
push
xchg
daa
sbb
inc
sub
pusha
lock
adc
add
rclb
dec
xchg
cwtl
cwtl
adc
mov
movsb
add
pop
xor
popa
pop
pop
push
lea
test
xchg
dec
fisttpl
push
jns
jle
aam
inc
jp
pop
cmp
add
es
sbb
and
mov
sti
xor
push
loop
dec
mov
and
popa
dec
adc
movsb
add
and
lods
add
cmp
cmp
add
outsl
into
fistpll
jb
adc
jecxz
roll
pusha
xor
push
fnstsw
lock
mov
jl
push
lods
cmp
pop
dec
stos
dec
mov
push
pop
inc
push
aam
faddl
lahf
inc
rcrl
mov
mov
add
pusha
bswap
or
inc
outsb
jge
and
rol
add
cmp
sub
mov
sbb
test
in
subb
add
mov
sti
add
addr16
subb
push
mov
aaa
in
aad
mov
add
cmp
rolb
cwtl
in
xor
int
lret
xchg
xlat
mov
jo
mov
cmp
test
cmp
jno
add
hlt
lds
mov
into
scas
int3
hlt
sbbb
lret
orb
dec
pop
xor
rcr
xor
pusha
pushf
aad
add
leave
fsts
add
shrl
popf
in
push
daa
or
add
pop
popf
jbe
adc
jo
cmp
fsubr
sbbb
sbb
dec
mov
in
xchg
sbb
push
mov
aas
sti
xlat
sbbl
pusha
aam
inc
pop
cmp
jle
cmp
je
scas
sbb
mov
mov
pushf
pop
xor
or
ret
daa
inc
dec
andb
inc
mov
fdivrl
sub
jecxz
loopne
add
out
fdivrs
or
loop
ja
mov
jecxz
xor
push
cs
movsb
sub
ds
jo
ret
int
enter
jl
push
mov
add
sbb
mov
nop
add
cmp
jns
sbb
xlat
dec
mov
loopne
jbe
push
jmp
jns
add
lds
cmp
aas
sbb
or
xor
sarb
lcall
jb
add
mov
imul
sahf
pop
fiaddl
lock
nop
roll
jg
lahf
jmp
push
js
adc
mov
mov
repz
jmp
add
dec
aaa
iret
add
sub
add
in
push
jle
push
test
movsl
sbbb
jne
test
adc
jge
js
lods
into
xchg
push
add
inc
dec
shl
cmp
gs
cmp
or
sub
xor
shlb
stos
pusha
clc
fldcw
push
shll
nop
subb
pop
cli
testl
inc
or
lds
sbb
movsb
mov
xor
fcmovnb
orl
sar
mov
pop
fs
shll
jge
in
fsubs
popa
push
pop
stos
pop
add
mov
lds
add
dec
pop
push
add
sti
stos
jnp
xchg
enter
xor
daa
sub
into
repnz
xlat
xor
add
sbb
xchg
mov
jae
pop
ret
movsb
imul
push
dec
mov
pop
daa
call
insl
mov
in
or
pop
adc
xchg
pop
dec
enter
pop
ret
outsb
push
add
and
dec
clc
mov
mov
mov
gs
mov
cltd
fwait
daa
jbe
add
push
adcl
ds
adc
out
daa
cmp
push
orb
mov
test
pop
pop
in
rolb
mov
loopne
xor
push
aad
mov
inc
ret
scas
leave
jg
notb
je
out
lret
inc
pop
jb
or
enter
mov
or
fdivrs
jbe
das
add
clc
pop
adc
xlat
in
mov
mov
and
bswap
mov
xor
stos
add
and
pop
add
ja
test
xor
or
mov
sub
dec
les
mov
leave
mov
jo
or
inc
lock
add
mov
dec
add
cmpsb
iret
enter
xchg
popa
jg
movsb
mov
push
fbstp
mov
fisubrs
test
fsubs
add
xchg
dec
cmc
int
push
adc
test
dec
sub
jbe
cmpsb
mov
lock
xor
mov
sbb
sub
movsl
inc
mov
add
mov
or
inc
mov
mov
jp
mov
nop
jp
add
imul
xchg
or
xor
nop
je
push
jge
lahf
inc
pop
inc
movsb
xchg
lock
push
fsubrs
test
outsl
inc
test
mov
lds
jb
and
clc
popa
popf
out
stc
ja
add
jne
push
xchg
xor
mov
ja
lea
daa
cmp
or
push
gs
in
incb
pushf
cmp
add
jbe
jmp
mov
add
jbe
sbb
ret
ja
push
test
cmpl
mov
punpcklbw
add
in
or
mov
pop
cmp
lret
mov
shlb
lcall
movsl
and
lea
cltd
fadds
pop
in
or
scas
fxch
xchg
jp
mov
inc
int3
xbegin
add
xchg
les
xchg
push
add
fldenv
cmpsl
mov
or
shrb
mov
subb
add
dec
sub
add
add
aad
iret
ljmp
ret
or
or
mulb
repnz
enter
sti
and
dec
dec
aam
add
fcom
sbb
cmp
mov
mov
pusha
iret
addb
add
add
fistl
dec
mov
or
inc
xchg
rol
or
dec
shl
popa
xor
jp
or
pushf
adc
xor
xchg
inc
mov
and
sub
cmpsb
dec
out
and
adc
add
inc
sbb
cmp
jo
add
je
lods
std
jle,pt
pop
push
roll
pop
aaa
xchg
cwtl
add
test
and
sub
add
ja
fistps
mov
add
arpl
les
cmp
xor
nop
stos
mov
xchg
pop
dec
sub
scas
inc
xor
enter
mov
outsl
xchg
icebp
sub
add
adc
imul
or
out
pop
mov
mov
jp
pop
xorb
mov
xchg
or
nop
insb
cmp
add
jbe
lods
test
inc
or
pop
out
out
fwait
test
cmp
psubsb
jge
xor
pushf
jl
sbbb
mov
aam
mov
addl
add
stc
xchg
inc
cmp
inc
or
out
jae
adc
or
std
mov
cwtl
adc
and
imul
mov
pop
sub
stc
add
xchg
clc
mov
lock
jg
fsubrs
adc
mov
outsl
into
fs
inc
add
or
rolb
pop
push
adc
pop
xor
sbb
mov
fwait
rclb
inc
andb
add
add
roll
pusha
ss
scas
adc
push
add
mov
xor
insl
xchg
enter
add
test
or
sti
fadds
nop
pop
cmp
mov
jbe
pop
xchg
cmpsb
imul
xchg
hlt
out
add
out
mov
add
shl
push
dec
ret
les
dec
js
fs
jbe
push
ljmp
xchg
sahf
sub
push
adc
roll
adc
shrl
jns
ret
jo
jne
push
push
inc
cmpb
loope
pop
sbb
fwait
dec
xor
loop
add
adc
pop
cli
lods
pop
xor
mov
enter
xor
rcrb
out
add
dec
push
cmp
lea
mov
aam
lods
outsb
cmp
dec
test
movsb
into
push
cs
xor
or
push
push
jmp
es
mov
scas
jmp
mov
pop
repnz
xchg
int3
rol
add
repnz
jl
je
adcb
mov
clc
subb
test
loopne
push
mov
push
cmpsb
js
out
or
int3
subl
add
sbb
mov
add
insb
inc
bound
sub
and
aam
xchg
add
scas
stos
pop
rclb
add
and
adc
xchg
mov
adc
adc
inc
pop
inc
fcmovu
inc
shrb
jnp
aas
shlb
add
pop
mov
shl
lcall
push
stc
test
mov
adc
in
pop
sbb
nop
cmp
push
jmp
flds
add
sub
xor
mov
outsb
aam
sbb
paddb
shrb
es
sbb
lods
enter
int3
sti
xchg
add
les
pushl
lea
enter
std
mov
mov
sub
inc
lods
xchg
lahf
add
ss
stos
push
cld
pop
popa
sahf
imul
aam
sbb
loopne
cmp
in
xchg
lds
mov
insl
xchg
lcall
dec
loope
and
jne
jp
xchg
mov
push
pop
dec
loope
lea
lds
cld
cmpsl
shlb
mov
jge
rclb
inc
sbb
lds
push
or
xchg
fistpll
or
in
or
aam
push
mov
cld
dec
add
dec
nop
xor
mov
sbb
mov
je
mov
gs
mov
mov
inc
sub
and
shlb
stos
arpl
add
in
lods
xchg
jo
inc
cld
mov
mov
sub
cmp
in
sbb
push
jmp
lcall
lds
jo
pusha
dec
lock
pop
add
scas
rcrb
pop
push
mov
add
insb
mov
orb
loopne
xchg
sbb
je
cmp
jnp
push
lcall
shr
adcb
add
std
ret
je
cmp
push
mov
in
stc
jo
push
loopne
rol
xchg
xchg
lcall
xlat
shll
mov
movsl
imull
sub
into
xchg
aam
adc
mov
xor
cmpb
pop
dec
xchg
nop
mov
inc
pop
scas
sub
adc
add
lea
scas
ljmp
dec
rorb
mov
adc
popa
cmp
jbe
aas
push
cmp
lods
pop
cld
andb
add
fwait
mov
test
mov
xchg
rcrl
imul
leave
in
add
sarl
mov
es
xchg
cmp
or
lahf
adc
inc
enter
xor
cmpl
stos
pusha
in
adc
cmp
mov
js
test
or
and
ficoml
ret
repz
loope
push
into
and
add
stos
jbe
or
cmpsb
inc
fmull
rolb
sub
mov
adc
push
fs
out
pop
add
adc
xchg
pop
inc
jbe
and
jmp
sub
and
xchg
push
fsqrt
stc
mov
adc
xor
daa
call
add
add
sar
rcr
add
jecxz
xchg
mov
sbb
call
pop
mov
sub
add
mov
or
outsl
dec
clc
jno
and
push
mov
mov
xchg
cmc
mov
int3
sar
cld
mov
adc
fdivrl
or
orb
jae
mov
xchg
add
and
lahf
loop
mov
clc
xorb
dec
mov
jl
pop
rcl
xchg
inc
add
sbb
and
pop
add
repnz
incl
jae
jns
nop
cltd
jno
popl
cmp
sub
push
ds
nop
sub
out
inc
sbb
scas
leave
and
iret
ret
xchg
add
inc
dec
pop
jg
mov
pop
pushf
shrb
roll
fdivrl
lds
insb
pop
in
cmp
jo
sub
fisttps
ret
mov
add
sub
loop
xor
cmp
test
add
add
push
rol
js
pop
add
in
mov
sub
adc
cmp
mov
loopne
int
fidivrl
repnz
xor
rolb
sbb
xor
jp
or
xor
mov
nop
sbb
popa
fs
push
incb
popa
add
and
les
jo
lret
gs
cltd
add
mov
fmull
and
enter
mov
mov
jp
and
adc
aam
add
add
inc
movsl
hlt
sbb
out
sbbb
std
xchg
fbld
jo
lcall
dec
jle
loopne
push
pop
and
orb
adc
imul
mov
add
fcomps
push
push
inc
add
xchg
xor
sub
xchg
dec
andb
cld
pop
add
jbe
sub
fdivrl
mov
cmpsb
shlb
mov
jns
pop
inc
mulb
jns
sbb
mov
sbb
clc
jo
stos
add
arpl
pop
adc
scas
jl
add
rcl
push
in
xchg
mov
cmp
jnp
leave
mov
or
add
ret
pop
mov
mov
out
mov
mov
adc
daa
mov
in
and
dec
cld
stc
rolb
inc
mov
mov
les
aam
push
test
or
sbb
push
dec
inc
icebp
in
call
sahf
rol
push
into
pusha
mov
xchg
mov
mov
xor
mov
xor
fidivl
inc
stos
stc
lahf
lret
add
loopne
pop
popa
cmp
aad
das
movl
and
mov
xlat
pop
add
sub
popf
mov
mov
out
inc
std
aam
push
pop
aas
nop
cwtl
cmpsb
sbb
inc
lea
jmp
add
mov
je
xlat
mov
bound
jne
xor
loop
jl
jp
and
sti
add
pop
adc
data16
or
sbbb
jnp
aam
or
dec
and
icebp
test
lahf
out
pop
pop
inc
jl
push
test
std
in
mov
lea
xchg
sbb
adc
daa
mov
or
icebp
sbb
xchg
or
hlt
test
cltd
lods
frstor
rolb
adc
pop
mov
call
sub
add
jmp
je
inc
jbe
adc
mov
loopne
fists
xor
add
and
adc
out
mov
test
je
addl
repz
and
fsubs
or
adc
pop
mov
sar
and
dec
ror
mov
xchg
sti
sbb
jnp
test
add
push
mov
roll
dec
pop
sti
shl
cwtl
jns
scas
int
int3
xor
fs
cwtl
push
sub
fdivr
cmp
pushf
imul
ja
inc
bound
sbb
mov
fsubr
es
add
repnz
lahf
mov
int
push
dec
add
in
adc
fcompl
aaa
mov
jbe
in
xor
fidivs
jle
inc
xchg
adc
push
cmpsb
mov
and
into
je
test
out
clc
sbb
mov
lods
mov
mov
pop
test
lds
and
add
push
dec
loop
repnz
fdivl
std
pop
sahf
mov
xchg
in
bound
add
cld
sbb
fpatan
xchg
jl
stos
or
xchg
push
or
pop
or
adc
loop
add
sbb
shll
fldl
hlt
adc
and
or
scas
mov
fbstp
add
cmp
and
movsl
mov
jmp
mov
mov
adcb
sbb
pusha
add
ret
cwtl
cmp
xor
cmp
and
xchg
outsb
fldenv
clc
fcomp
xor
cwtl
mov
popf
and
add
cmpl
in
loope
add
mov
mov
repz
mov
jb
or
sub
xchg
leave
pusha
lahf
and
sbb
pop
cmp
in
sub
outsb
ret
data16
loope
cmp
in
hlt
lahf
add
add
inc
dec
xor
mov
popf
mulb
and
cmp
sbb
add
jp
js
xchg
pop
pop
inc
xchg
mov
je
daa
mov
xchg
mov
add
mov
sub
inc
fsubl
sbb
sbb
xor
or
ss
xorl
or
jbe
psubb
push
flds
inc
inc
lock
dec
inc
std
roll
xchg
push
mov
dec
mov
es
push
insb
test
mov
dec
push
xor
roll
or
std
xor
mov
add
fidivrs
xchg
pop
or
mov
mov
xchg
adcb
out
pusha
rclb
mov
dec
inc
xchg
imul
or
loopne
jle
or
dec
mov
add
bound
push
inc
testb
lods
insb
shlb
int
xor
test
rolb
jl
adc
andb
add
inc
pushf
ljmp
fdivl
add
xor
adc
stos
in
dec
and
add
sub
mov
mov
adc
pop
or
mov
testb
and
add
pop
fwait
xor
out
push
ret
adc
add
xor
dec
jbe
lea
add
pop
stc
mov
push
add
sbb
fmuls
out
dec
ja
jae
push
sar
sbb
xor
or
loopne
mov
sub
orb
cmp
pop
add
rorb
call
sbb
pop
cmp
sub
ret
add
es
cwtl
sbb
cmp
jl
add
sub
add
and
ficomps
les
loop
in
cmp
cmp
mov
ss
push
or
add
jge
add
mov
sub
out
daa
add
dec
roll
add
insl
xchg
cmp
xlat
pop
movsl
or
adc
and
and
dec
lcall
mov
adc
sub
cmp
popa
in
mov
jg
arpl
mov
cmp
push
fsubrs
and
enter
sbb
sub
cwtl
bound
sub
or
xor
jno
push
pop
cs
jp
mov
leave
add
and
cli
dec
jnp
mov
les
aam
add
into
add
testl
pop
icebp
xor
loopne
clc
sbb
dec
lock
mov
mov
mov
lcall
cmp
jl
sbb
mov
clc
sub
cld
sub
je
dec
push
adc
mov
lods
push
push
dec
jo
adcl
mov
mov
lock
aad
aaa
cli
pop
dec
loop
pop
jl
fstps
add
incl
test
aas
leave
add
jg
and
imul
mov
sbb
outsl
dec
fimuls
mov
add
lea
xor
in
add
stos
ret
outsl
das
call
mov
std
je
arpl
cmp
iret
addl
iret
xorb
fnstenv
and
mov
icebp
mov
mov
dec
sbb
dec
test
out
dec
add
jbe
pop
or
sub
add
test
outsl
add
adc
cmp
orb
sub
xor
sub
aas
add
jge
mov
mov
scas
inc
daa
sbb
leave
add
or
daa
sbb
adc
in
pop
leavew
cwtl
jge
add
push
imul
mov
gs
mov
pop
imul
and
adc
aad
sub
or
xor
lds
shlb
mov
add
or
les
repnz
fdivl
or
imul
add
popf
je
inc
lods
insb
add
stos
add
add
push
js
xor
sub
imul
sbb
mov
push
cltd
and
stos
add
jno
in
inc
dec
dec
pop
sarb
lea
or
inc
or
add
into
clc
xlat
ds
repnz
fnsave
pop
mov
sub
push
out
mov
cmpb
mov
pop
and
mov
add
cmp
icebp
mov
or
jo
mov
and
mov
stc
call
aas
cmp
out
loopne
ret
aam
cmc
sbb
mov
adc
pop
jp
fadds
aaa
sub
jecxz
mov
dec
add
repz
ds
xchg
lahf
rcrb
mov
test
aaa
jl
lods
sub
jp
daa
push
xor
insl
dec
dec
divb
loop
je
add
inc
mov
inc
popf
call
sub
mov
inc
jmp
xchg
mov
jl
movsb
mov
jle
cmp
mov
fcmovnbe
dec
fsubr
dec
add
mov
adc
inc
xchg
mov
push
loop
pop
push
and
mov
fdivs
dec
fimuls
clc
lock
xchg
add
jnp
xorb
pusha
shl
add
fisubs
std
push
outsb
add
jb
pusha
dec
sub
mov
adc
dec
pop
mov
lds
cmc
xor
clc
and
push
jecxz
or
sbb
lds
adc
dec
es
xchg
jecxz
outsl
std
andb
fs
dec
mov
nop
add
push
cmp
add
push
xor
repnz
ljmp
pop
rcl
add
adc
adc
mov
push
xchg
sub
add
lcall
or
test
sbb
pop
push
xchg
std
jmp
fimuls
imul
rolb
adc
test
or
lock
aaa
dec
aad
xchg
in
add
jb
and
cli
jle
xor
and
sbb
pop
loopne
mov
adc
insl
shl
inc
push
cld
cwtl
mov
pop
lret
mov
add
dec
in
xchg
movsb
test
scas
xor
inc
add
lcall
ljmp
xor
dec
add
aas
jae
jl
jg
push
sbb
jne
mov
push
ret
add
mov
into
ds
outsl
int
push
and
sbb
verr
or
xor
stos
aam
push
cmp
sub
adc
xor
loopne
add
sub
inc
andb
jecxz
adc
pop
or
mov
mov
push
std
jns
enter
cli
lcall
dec
inc
jmp
idivl
inc
test
xor
or
fidivrl
test
add
pusha
mov
pop
add
mov
jae
add
inc
outsb
jne
sbb
leave
out
inc
in
jg
flds
rcrb
loopne
cmp
push
mov
addb
dec
fisubrl
add
ss
add
cmpsb
lods
sti
adc
clc
in
shll
sub
ss
mov
add
inc
iret
mov
mov
mov
dec
mov
mov
sub
cmp
add
pop
jg
outsl
clc
test
sub
ret
cmp
lcall
sbb
dec
mov
rorb
outsl
ds
popa
xchg
and
jecxz
jg
jns
outsb
sub
sub
pop
inc
pop
mov
ja
cli
jnp
arpl
mov
leave
add
jmp
mov
jns
add
cs
jmp
dec
test
pop
add
sbb
sbbb
out
or
fcoml
addl
cltd
sub
jno
mov
les
mov
cmpsb
xchg
push
adcb
daa
add
sbbl
out
test
sub
mov
and
pop
lods
xchg
call
pop
add
inc
mov
pop
dec
cli
push
adc
sbb
scas
push
mov
add
mov
adc
dec
loope
push
push
jnp
in
add
outsb
mov
and
cwtl
notl
mov
dec
cmp
mov
push
xorl
add
adc
addb
mov
fbstp
add
push
test
pop
int3
or
nop
dec
add
add
xchg
push
aam
jmp
pushf
add
dec
sbbl
pop
mov
mov
push
hlt
add
scas
jo
xor
sub
call
insl
add
add
cli
add
cmp
lcall
shl
sub
es
imul
out
or
mov
sti
mov
add
xchg
das
repnz
cmp
add
inc
add
andb
popf
inc
jbe
mov
les
rorb
sub
or
add
jmp
int
push
fs
pop
pop
add
lahf
mov
xor
push
and
add
sub
popa
mov
pop
sbb
dec
test
rolb
mov
sbb
xchg
rcr
add
icebp
push
scas
or
mov
dec
cmp
jb
or
or
imul
jmp
in
dec
test
pop
addl
add
mov
or
fidivrl
lock
mov
cmp
or
add
lahf
inc
enter
adcb
dec
icebp
xchg
popf
call
and
push
and
out
jecxz
nop
testb
in
add
push
stos
push
mov
cmp
cmpsb
xor
xor
add
aas
ret
sbbl
aam
jle
xor
lea
cmp
je
mov
sbb
mov
inc
call
pusha
dec
repnz
push
mov
into
repz
imul
inc
or
cmpsl
faddl
outsb
sub
aad
fidivl
loop
clc
push
out
add
inc
xchg
add
xchg
mov
and
out
adcb
loop
lock
lret
enter
stc
sbb
inc
jmp
or
and
jno
mov
in
adc
test
add
cmp
xor
adc
in
mov
inc
bound
push
push
add
jnp
pop
adc
sub
push
and
hlt
add
mov
pop
sar
and
pop
ficomps
xchg
fadds
sub
or
push
enter
dec
mov
shll
and
push
adcb
xchg
movsl
lret
loopne
enter
adc
sub
rolb
or
mov
lea
sbb
push
inc
ficoml
insb
cmp
or
xchg
cmp
icebp
mov
pop
adc
mov
ljmp
push
std
rorl
mov
add
xor
pusha
jnp
or
rol
mov
rcll
pushf
or
and
cmp
fisttps
mov
shlb
cmp
cmp
cmp
pop
add
sti
popa
sub
enter
xor
mov
ret
and
add
mov
pop
cmpsb
in
xchg
das
mov
mov
add
sub
sbb
jmp
sbb
xchg
loop
outsb
pusha
adc
push
stos
inc
or
jne
add
or
push
insb
pop
ret
mov
mov
pop
rorl
push
and
add
movsb
mov
enter
pcmpgtb
leave
faddl
lods
outsb
adc
cmpb
sahf
je
jg
or
xchg
add
ret
dec
dec
std
add
cmpsl
clc
mov
sbb
icebp
inc
cmp
cltd
jne
mov
xlat
lods
or
xor
or
and
data16
push
pop
mov
outsb
cmpsl
popf
sbb
hlt
shll
dec
cs
xchg
mov
push
lcall
stos
int
lea
jae
push
mov
xor
dec
addb
sbb
adc
popf
jbe
or
xchg
movsl
adcl
rol
mov
sub
imul
gs
dec
dec
push
bound
mov
mov
out
dec
jl
popa
js
cmp
push
inc
sub
sub
xorb
jl
pop
imul
push
pop
or
ficoms
add
mov
sbb
adc
mov
sbb
daa
push
loopne
adc
and
in
lods
push
or
lods
add
insb
mov
je
fcomps
cmp
add
inc
jo
pop
mov
jecxz
adc
push
dec
lcall
push
loopne
inc
adc
mov
mov
js
gs
add
add
or
or
or
and
popf
dec
sbb
mov
inc
adc
jne
lahf
xor
pop
adc
cld
mov
push
xchg
inc
enter
loopne
jl
xchg
movsl
aas
xor
movsb
push
fildl
test
adc
inc
imul
mov
mov
jg
add
nop
mov
add
sub
in
add
xchg
cmpb
mov
sbb
ss
add
pop
push
and
sarl
daa
jae
sbb
sub
jo
xorb
push
add
mov
loopne
scas
pop
add
out
inc
jmp
or
push
xor
inc
fisttpl
sub
xchg
ljmp
or
pop
cmpsb
dec
inc
mov
xor
test
mov
in
or
xchg
fwait
push
hlt
push
stc
add
adc
push
and
andl
in
out
ja
sub
pop
xchg
enter
pushf
or
fdiv
jae
std
add
lods
inc
in
bound
adc
fimuls
test
adc
orb
rcrb
add
cmpsb
push
push
jnp
pop
outsb
xchg
or
insb
sahf
shll
sub
leave
ret
adc
add
jl
mov
movsb
cmp
mov
das
in
mov
adc
add
movsb
es
or
mulb
insb
outsl
push
insl
hlt
add
outsb
xor
lahf
dec
xchg
dec
test
subl
pop
leave
cmp
orl
test
in
xlat
int3
shrd
mov
add
sbb
add
movsl
cmp
shrb
jmp
sbb
adc
jno
popa
add
cmp
jb
push
arpl
or
xlat
je
subb
inc
or
iret
xor
push
mov
mov
cmp
inc
leave
add
fs
mov
in
sub
shlb
iret
mov
cmp
xchg
push
jo
push
mov
out
mov
mov
dec
dec
clc
mov
neg
add
rol
nop
add
stos
add
xor
enter
imul
add
enter
outsl
rcrb
cmp
dec
jne
mov
pop
or
fildll
dec
repz
or
xor
test
call
add
popf
sbb
dec
jp
mov
pop
jmp
ss
das
sahf
inc
inc
repz
shr
rolb
repz
sbb
push
add
cli
inc
jl
sub
or
fwait
aam
push
pushf
dec
add
filds
in
jno
or
fwait
or
or
add
push
push
cmp
popa
ret
ret
xlat
nop
fcmovb
inc
add
sbb
test
popl
jne,pn
and
add
nop
popa
es
addr16
and
or
inc
dec
sub
lock
enter
add
in
pop
fcmovnu
pop
insl
xor
pusha
and
pop
sbb
out
mov
or
cwtl
ret
dec
in
xor
push
lret
insl
je
add
aas
loope
les
add
xor
scas
in
pop
ds
xor
sub
sarl
cli
pushf
mov
add
stc
imul
add
jp
jo
mov
mov
js
add
std
mov
and
pop
add
addb
xchg
pusha
psubb
nop
xchg
movsl
loope
out
repnz
adc
inc
add
aam
mov
nop
test
fsts
pusha
xor
push
cmc
js
out
cmp
lcall
mul
xchg
scas
and
lret
add
mov
fimull
sbb
cli
nop
cmp
in
add
jbe
mov
xchg
xchg
or
repz
cld
bt
push
adcb
popf
add
negl
and
mov
sbb
arpl
mov
clc
add
popl
xchg
add
add
sbb
fbld
push
jbe
sbb
add
in
int3
pop
insb
add
pop
push
add
add
adc
decb
sarb
and
shrd
mov
popf
sub
mov
mov
inc
mov
cmp
shrb
adc
sahf
fisttpll
clc
loop
jbe,pn
mov
clc
cmp
pop
pop
mov
mov
inc
rclb
repnz
sbb
and
lret
popl
inc
imul
and
dec
jl
ret
sahf
stc
push
jno
adc
dec
lock
lods
sbb
cmpsl
ja
cltd
jl
pop
insb
add
mov
aam
add
xchg
aas
out
sbb
pop
and
loop
fmulp
fiaddl
pop
sub
add
mov
in
aas
nop
pop
scas
mov
mov
jne
ja
mov
pop
pusha
jns
adc
pop
clc
bound
inc
test
mov
aas
mov
ds
lods
andb
add
dec
sbb
aad
sbb
dec
jecxz
loope
adc
aas
stos
scas
add
addr16
push
dec
cmpb
test
xchg
xchg
inc
loopne
sbb
jge
fcoms
cmc
add
out
inc
pusha
inc
loopne
add
jbe
pop
iret
out
es
jno
ds
insl
mov
sub
cmp
nop
mov
pop
jno
sbb
scas
stos
push
xor
adc
in
add
sbbb
mov
push
flds
shlb
add
int
fdivl
xor
jmp
push
enter
xchg
add
pop
xor
xchg
cmp
inc
pop
sbb
and
mov
js
add
jae
add
xchg
dec
push
cmpsl
pop
pop
cwtl
add
mov
xchg
inc
loop
xchg
ds
and
and
movsl
cld
clc
mov
hlt
nop
es
jnp
add
rcrb
add
scas
sub
testl
lea
outsb
fildl
pop
lods
mov
sbb
jbe
inc
daa
imul
jae
dec
jge
mov
sarb
cwtl
mov
enter
xchg
add
movsb
dec
mov
mov
xchg
ds
rclb
mov
out
ret
mov
dec
or
sarb
and
adc
add
push
insl
inc
push
repz
xor
ljmp
pop
sub
xchg
or
test
into
mov
out
sbb
lcall
add
mov
adc
inc
int
add
mov
add
rcrb
xchg
pushf
jne
and
loope
pusha
pop
mov
enter
shll
cltd
jbe
add
mov
mov
cwtl
les
mov
jp
movsb
mov
out
sbb
faddl
mov
fs
cs
mov
shlb
pushf
dec
pop
mov
adc
rorl
jb
pop
add
push
inc
mov
aas
push
push
mov
dec
data16
mov
push
aas
adc
add
push
jnp
ret
lock
push
rorl
pop
xor
aam
test
pop
inc
in
add
inc
test
adc
shr
and
in
mov
das
dec
sub
push
inc
add
mov
sahf
or
inc
sti
lock
lahf
cmp
gs
test
rcrb
inc
cmp
mov
pushf
sti
xor
add
jae
test
xchg
sbb
leave
stc
lods
lods
sbb
in
dec
loop
sbb
jbe
mov
cli
call
add
ret
pop
pop
mov
leave
cmp
sbb
dec
pop
push
adc
adc
movsl
push
cmpsl
insb
cmp
loopne
adc
xchg
add
imul
movsl
xlat
outsb
add
in
out
push
sbbl
add
lds
ret
xchg
mov
mov
pop
lds
xorl
repz
add
cmp
std
hlt
xorb
inc
dec
inc
mov
adc
out
lock
pop
test
hlt
push
dec
aaa
enter
js
imul
mov
push
and
lcall
add
cmp
jb
roll
incb
pop
push
add
push
and
lret
int3
in
lods
xor
adc
inc
or
pop
lahf
ret
cld
add
or
repz
add
fsubrs
shrb
sub
xlat
repnz
xor
xor
lret
mov
add
rcr
dec
fnsave
mov
mov
mov
mov
test
pop
cld
arpl
xchg
pop
test
je
push
mov
or
xchg
lret
inc
or
add
and
dec
testl
test
mov
inc
mov
or
shrl
inc
add
push
jo
mov
mov
dec
xor
int
jp
fbld
add
in
shl
jl
cmp
rep
cmp
and
mov
or
gs
mov
push
aaa
push
add
loopne
xlat
jmp
and
and
rorb
movsl
dec
mov
mov
and
dec
enter
fwait
push
dec
push
fadds
and
incb
jp
out
adcb
cmp
add
xchg
enter
jo
loope
sub
repnz
sbb
push
push
xor
lock
xchg
stos
addr16
add
sbb
enter
sub
out
mov
sbb
cmpsl
shl
je
mov
add
sbb
pop
pop
pop
out
jbe
mov
inc
push
sbb
scas
cmp
and
nop
add
cltd
add
sbb
fdivr
aam
cmp
fistl
add
pop
lea
pop
js
fcoml
xor
inc
out
add
mov
jl
xchg
loopne
sbb
hlt
inc
add
cwtl
push
add
cmp
pop
xor
push
lcall
inc
sahf
or
xor
push
jbe
cmp
cld
jnp
xchg
cwtl
fistl
push
sbb
inc
mov
dec
out
adc
inc
mov
push
fsubrl
adc
ljmp
dec
fsubr
add
hlt
xchg
sub
orb
lcall
movl
jo
pop
jb
cs
leave
cwtl
pop
lcall
xchg
add
cmp
daa
fldt
pop
pop
jl
lea
pop
add
inc
fldenv
xchg
cmp
add
mov
add
movsb
in
and
xchg
cld
dec
dec
popa
add
fildll
sub
and
or
dec
adc
es
call
xor
add
pop
add
lahf
loope
xor
xor
les
adc
sarl
leave
add
push
xchg
mov
push
add
dec
and
shl
rcrb
in
test
adcl
imul
inc
addr16
xchg
cmp
ja
pushf
or
shrl
sbb
add
or
mov
loop
fstl
add
mov
push
mov
jbe
add
pop
punpckhwd
cmp
mov
push
sahf
adc
add
jo
test
cltd
lods
cltd
add
dec
or
mov
fmuls
add
stos
iret
cmp
loopne
int3
out
ds
or
rorb
sbbl
or
xchg
adc
fisubs
xor
movsb
sub
push
fmuls
inc
int3
and
nop
out
enter
xor
and
insl
mov
lgs
jl
mov
aam
test
mov
sbb
xchg
mov
imul
pop
xchg
cld
pop
test
push
xchg
add
ret
lahf
fsubl
mov
xchg
lahf
shlb
arpl
push
push
test
pop
add
push
sub
mov
imul
or
push
ja
shll
jmp
test
sbb
push
pushf
add
fincstp
xchg
add
mov
sbb
mov
pop
lret
ds
ljmp
jns
dec
rolb
adc
push
mov
cmc
add
sub
mov
pop
test
sub
add
and
add
out
pop
loopne
movsb
cmp
loop
int3
jle
lahf
fcmovb
fwait
adc
adc
and
fucomp
cld
into
loop
test
pop
and
add
dec
imul
inc
rolb
pop
sub
enter
and
pushf
pop
ljmp
xchg
je
xorl
out
test
inc
xor
nop
inc
andb
ja
or
pop
xorb
fucompp
jle
xchg
call
mov
aam
cwtl
je
inc
lods
mov
xchg
and
outsb
pop
mov
inc
or
xorl
imul
lea
push
or
adcb
dec
cwtl
sbb
push
cmpb
xchg
mov
pop
adc
cmp
enter
mov
and
xchg
inc
pushf
imul
pop
pop
adc
mov
cli
jne
test
adc
pushf
ds
jae
push
sahf
cwtl
adc
pop
jne
jle
test
mov
and
ljmp
pop
jg
mov
into
cmp
movsl
push
xchg
xchg
or
sub
add
ds
add
push
mov
pop
test
imul
lods
mov
movsb
fmuls
lret
pop
je
pop
add
inc
dec
add
cwtl
daa
cmp
adcb
inc
or
dec
fsubs
and
imul
ret
jle
or
je
cld
push
add
enter
ret
mov
mov
sbbb
sub
and
call
mov
cltd
push
loopne
adc
out
xor
and
lahf
adc
add
and
adc
adc
jnp
imul
mov
mov
cltd
xchg
inc
mov
sub
inc
mov
sub
fmul
dec
mov
pushf
test
insb
cmpsb
cltd
add
xchg
inc
mov
rolb
sbb
lret
lods
in
pop
inc
dec
xchg
nop
xor
mov
sarb
inc
mov
mov
lods
xor
nop
and
clc
nop
xchg
sbb
cltd
pop
mov
xlat
test
aad
sbb
andb
or
stos
cmpsb
push
loop
add
nop
push
sbb
inc
call
sub
xlat
cmpl
les
xor
and
xorb
and
xor
add
inc
and
andl
fnstsw
sbb
cmpsl
fwait
xchg
adc
and
add
jle
sarb
ds
lret
mov
clc
mov
inc
aas
sbb
stos
rcr
jno
stc
push
sbb
repnz
ret
adc
adc
add
pop
jo
lahf
add
push
pop
fldl
and
add
idivl
mov
aaa
cmp
orb
inc
jne
add
bnd
sub
mov
xchg
add
mov
push
or
add
jo
mov
push
mov
leave
add
or
sub
out
jge
in
dec
push
mov
sbb
mov
pop
lahf
js
xchg
adc
sbb
push
addb
adc
or
inc
jns
push
test
jge
les
test
int
arpl
clc
or
inc
mov
imul
jle
femms
or
jge
rorb
insb
xor
or
rcl
clc
mull
sbb
adc
iret
jp
out
repnz
dec
cmpsl
insl
pop
sbb
ss
add
mov
stos
pusha
xchg
dec
lock
scas
xchg
popf
and
test
lock
push
cmpsb
out
aam
and
inc
bound
mov
cmp
add
mov
jmp
mov
mov
add
push
mov
pop
xor
into
cmpsb
push
andl
addl
push
stos
add
sti
lods
xor
mov
mov
popa
lods
loopne
add
test
popf
push
movl
fdivr
loopne
xchg
pop
add
jne
push
shrl
adc
cmpsl
xchg
jb
inc
dec
jmp
jb
or
ret
subb
insl
jo
push
jle
xchg
jb
cmp
add
jo
inc
scas
add
test
int3
xor
adc
add
pop
add
add
test
xlat
push
jo
outsb
add
es
pop
ljmp
inc
push
in
push
mov
add
fisubl
das
add
lods
mov
push
pop
pop
cld
adc
adc
add
and
xchg
pop
xor
orb
jns
ja
loope
psrld
pop
jnp
add
xchg
add
iret
mov
mov
fisubrl
movsb
hlt
or
aam
or
mov
add
fdivrp
mov
divl
or
adc
mov
fldcw
pop
sub
mov
popf
inc
sub
dec
pusha
shll
add
mov
imul
jnp
shll
sbb
inc
loop
pop
mov
testb
mov
clc
or
insb
bound
adc
pop
mov
cmc
fstpt
jmp
and
add
movsb
sti
insb
rcl
mov
adc
pop
and
je
mov
add
into
inc
enter
movsb
cli
push
or
or
les
call
pop
int3
push
mov
cld
je
add
data16
and
je
dec
mov
in
add
shll
jg
and
cmpsb
pop
popa
xor
jp
xchg
xorb
add
or
fucom
loopne
mov
lds
xchg
testl
sar
add
cmp
mov
icebp
ret
mov
xchg
stos
inc
dec
pop
int
adc
mov
sbb
cs
fcomps
add
sbb
call
xor
int
cwtl
sub
repz
loop
aam
mov
loope
sub
bnd
cmc
add
jg
scas
pop
mov
les
sbb
mov
adc
cmpsb
insb
inc
ret
add
inc
fwait
cmp
push
adc
dec
push
mov
cli
push
nop
add
xchg
call
or
xlat
add
invd
in
sub
add
jecxz
xor
xlat
jecxz
lock
mov
incb
stos
cmp
pushf
shrl
in
in
mov
mov
aaa
dec
std
push
loopne
add
lods
das
add
xchg
roll
ds
jle
mov
loop
or
dec
mov
subb
nop
dec
insb
leave
add
inc
mov
push
push
add
lock
dec
ror
sbb
adcb
fimuls
pop
das
jne
aas
pop
xchg
test
stos
xor
shlb
popf
in
add
sbb
cltd
sbb
loopne
add
jne
divb
mov
mov
out
adc
clc
mov
pop
outsb
data16
inc
pop
shlb
cmp
adc
movsl
bound
lods
pop
addr16
xchg
jns
inc
jmp
mov
mov
add
cmp
ret
add
int3
clc
pop
cli
mov
dec
lds
stos
xchg
jge
sub
scas
push
mov
inc
int3
cmpsb
mov
fcom
mov
mov
pop
loop
mov
loopne
pop
iret
xchg
jno
popf
sbb
inc
pop
dec
ljmp
and
mov
movsl
stc
adc
push
add
add
sbb
add
insl
push
ret
xor
icebp
test
jmp
jle
jo
jecxz
repz
shrb
xchg
in
ja
pop
xor
in
addb
and
pop
hlt
fnstsw
push
inc
mov
push
sub
into
int3
xchg
call
xchg
testb
test
mov
popf
cmp
icebp
insl
clc
in
and
add
popf
dec
repz
pop
and
adc
js
cltd
xchg
cmp
adc
pop
jo
xchg
xor
adc
sub
add
clc
push
inc
add
mov
cld
add
aas
mov
sub
sub
pop
icebp
cwtl
dec
push
sti
push
imul
push
and
mov
inc
pop
mov
clc
cmp
rorb
push
out
dec
xlat
mov
add
mov
add
push
jmp
call
repz
popf
pusha
dec
pop
notb
push
addr16
lret
xor
add
inc
mov
add
cmp
addr16
sbb
xor
data16
testl
jns
mov
add
in
xor
lock
stos
and
add
dec
popf
scas
adc
daa
add
xlat
lret
jnp
push
add
iret
or
dec
sub
fsub
scas
stc
ficomps
push
rcrb
rcr
or
in
sub
xchg
xchg
fmull
fidivrl
into
jo
dec
int3
incl
push
jl
jno
mov
addb
jge
scas
iret
mov
add
dec
jne
fchs
pusha
mov
jge
mov
add
sub
dec
subl
push
jmp
and
nop
lock
sub
mov
rcrl
mov
pushl
gs
mov
inc
and
add
dec
mov
pop
add
adc
or
test
mov
cli
add
add
mov
xor
sbb
dec
sar
add
dec
jp
aad
loop
xchg
into
test
shr
inc
sbb
sbbb
popf
or
pop
out
imul
xor
sarb
push
mov
jle
add
lock
test
or
fwait
pop
std
inc
cli
cmp
inc
leave
inc
shrb
repnz
inc
cwtl
add
test
idivb
incl
pop
iret
mov
jbe
inc
filds
xor
shl
test
shrb
iret
rorb
out
pusha
mov
lea
push
adc
es
dec
add
loopne
mov
rclb
lock
jecxz
int3
xor
xor
imul
lahf
add
loop
les
mov
add
mov
faddl
and
testl
movsb
fldt
add
mov
or
mov
sahf
sub
mov
inc
aam
aad
jmp
lret
fistpll
add
fsubs
outsb
add
test
push
int3
add
stc
lcall
ds
push
add
push
adc
add
push
popl
js
outsb
fistpl
jmp
jecxz
arpl
add
scas
and
mov
je
jbe
xchg
pop
mov
add
mov
mov
add
pop
mov
andb
sbb
movsl
add
inc
push
adc
or
ljmp
lods
jno
cmpsl
rorb
mov
add
jnp
subb
incb
mov
iret
adcb
push
movsb
xchg
inc
shlb
push
movsl
dec
dec
fnsave
xchg
mov
and
cmpb
adc
andl
in
dec
mov
scas
inc
call
and
adc
push
ljmp
fiadds
dec
mov
dec
imul
cmpsb
lock
rolb
add
ja
mov
inc
dec
dec
rorl
jmp
mov
insb
sub
std
or
add
push
test
rcll
insl
data16
mov
dec
addb
call
js
add
leave
outsb
sbb
xlat
jne
inc
push
mov
push
nop
pop
add
mov
daa
cmp
sbb
fistpl
aas
roll
cmp
loopne
inc
addps
sub
lcall
jae
xchg
call
in
xorb
lcall
lahf
add
cmp
inc
jo
sub
imul
out
clc
cs
cld
and
cltd
loopne
pop
adc
test
les
ret
push
add
add
call
sbb
pop
and
adc
push
jno
mov
cmp
dec
loopne
add
pop
daa
jb
dec
xor
ja
jnp
add
int
rclb
or
pushf
mov
dec
sub
adc
mov
add
les
xchg
pop
fbld
sbb
shl
mov
inc
dec
add
sub
inc
sbb
sub
negb
mov
into
inc
mov
in
cli
fdivrs
pop
shl
jno
popa
enter
xor
push
mov
shrb
shlb
loop
mov
and
push
out
or
dec
mov
mov
fiaddl
je
aas
ljmp
in
aad
pop
push
in
neg
add
and
fs
stc
dec
sub
cmp
or
add
push
stos
pusha
subl
cld
shr
add
pop
lds
das
sub
add
inc
push
pop
add
sbb
je
mov
cmp
jg
ret
add
xor
jmp
nop
add
js
rolb
hlt
add
or
add
stc
cmc
insl
mov
and
sub
pop
jns
mov
cwtl
xor
jecxz
adc
loop
add
mov
add
in
imul
and
ret
int3
mov
sub
xchg
rolb
push
add
mov
mov
fisubrs
hlt
cmpsl
pop
or
add
sub
incb
sub
cltd
pop
sbb
pop
lds
xchg
fdivrs
mov
pushf
add
pop
cmpsb
and
lods
mov
movsl
cmp
rcrb
dec
outsb
add
sub
dec
adcb
add
xor
push
inc
sub
mov
mov
mov
and
jge
mov
popa
and
xor
aad
add
dec
addl
pop
adc
pop
add
lds
pop
rorb
test
fists
fcoml
and
int
sbb
xchg
or
push
add
rolb
mov
sub
xchg
or
rcll
dec
push
push
jae
movb
push
cwtl
pop
rcll
add
mov
cltd
dec
nop
or
push
and
add
cmpsb
sub
cwtl
in
jb
add
xor
enter
lea
dec
pushf
pusha
aad
xorl
push
rcrb
arpl
inc
push
lds
cmp
xor
xchg
sub
jge
hlt
pop
sub
add
cmp
clc
lret
or
add
add
in
pusha
sub
inc
jnp
or
dec
ja
sub
sbb
jge
dec
mov
push
loope
js
out
aaa
cmpb
ja
testb
shll
xchg
add
adc
gs
mov
add
adc
cmp
pusha
add
jnp
mov
andl
add
sbb
fwait
mov
push
jbe
or
add
in
dec
jns
stc
pop
das
pop
addr16
repnz
jne
push
fucomi
lret
adc
in
jl
repz
pop
pop
inc
push
pushf
mov
in
unpckhps
fisttpl
cs
add
fiaddl
or
add
arpl
or
inc
insb
dec
sub
cmp
ja
cmc
fisttps
pop
mov
in
dec
ja
xchg
mov
repnz
mov
fstpl
insl
aad
out
aaa
je
add
inc
loope
pop
ss
pop
pushf
inc
push
push
andb
jge
push
cmp
sti
add
add
sbb
cmp
pusha
fistps
pushf
sub
popf
sub
roll
push
mov
mov
cltd
cmpsb
popw
ja
push
push
add
adc
jle
xor
ret
or
sub
mov
mov
mov
cmp
pop
sbb
pusha
mov
xchg
mov
or
add
cmp
js
or
pop
loope
adc
stos
pushf
popl
inc
lcall
pop
mov
insl
dec
out
in
arpl
mov
clc
jb
cmc
push
fistps
in
dec
pop
adc
nop
pop
es
mov
sub
inc
nop
inc
push
ljmp
and
and
push
cmp
pusha
mov
repnz
xchg
jg
in
or
push
pop
or
add
add
cli
fimuls
popf
jbe
adcb
mov
push
jmp
ret
push
js
xor
test
push
imul
test
or
dec
cmp
jno
dec
jo
cmc
add
inc
mov
in
popa
out
mov
mov
sbb
jmp
sbb
pop
add
repnz
fcoms
iret
andb
bound
add
adcl
aaa
in
mov
add
loop
jns
jge
cmp
xchg
mov
out
adc
in
test
sub
int
insb
sbb
inc
test
sbb
outsl
push
mov
push
rcll
add
dec
jecxz
lods
cli
scas
pusha
jns
add
data16
inc
test
enter
jnp
dec
aaa
mov
dec
loopne
add
xor
jmp
jp
ljmp
pusha
add
cmp
adc
test
por
dec
xchg
decb
cmp
sti
mov
or
sub
cmpsb
call
jns
push
xchg
repnz
sbbb
or
aam
popf
pop
dec
shrb
sbbb
jp
cmpsb
ror
xor
mov
add
xor
into
in
icebp
mov
pop
test
scas
or
add
mov
fs
sti
sbb
in
and
dec
add
addr16
addb
fs
xchg
sub
mov
xchg
std
push
jbe
add
mov
pushf
pop
adc
in
adc
int
imul
and
int
mov
add
jo
mov
in
addb
pop
mov
shrl
mov
mov
jl
sub
pop
les
rcr
fmuls
adc
push
cld
jecxz
mov
movsb
adc
leave
xchg
stos
popf
mov
fildl
je
push
or
inc
mov
push
loop
in
mov
mov
popa
mov
cmpsl
inc
xchg
mov
mov
repnz
dec
and
cmp
pusha
cwtl
mov
adc
add
sbb
daa
push
andb
btcl
addr16
adc
call
adc
int
imul
lcall
mov
mov
subb
and
aaa
xor
imul
add
shrl
lahf
mov
add
dec
push
nop
xchg
sahf
int
sbb
repz
mov
dec
movsl
test
cmpl
or
or
and
pop
sub
decb
or
ds
add
push
inc
pop
jmp
movsl
loop
js
stos
mov
roll
add
test
or
adc
icebp
sbb
sbb
push
subb
ror
push
cwtl
nop
push
sbb
jo
dec
cmp
cli
inc
sti
incb
sub
aaa
cltd
push
jns
sbb
add
test
push
push
rcrb
mov
jnp
adc
pop
mov
cwtl
pop
add
dec
lcall
push
adcb
xchg
das
ss
push
cwtl
push
adc
in
mov
mov
je
mov
sbb
dec
nop
adc
or
lock
les
jge
mov
ficoms
icebp
in
mov
push
mov
xlat
int3
adc
in
addr16
sbbl
xor
or
in
shlb
push
and
push
add
add
inc
clc
in
scas
or
loope
cwtl
sbb
cltd
add
fsubrs
pop
fnstenv
add
sarb
ds
es
iret
sbbb
pusha
xchg
and
movsl
xorl
mov
aad
movsb
insl
push
xor
and
popa
call
fs
in
pusha
add
adc
sbb
fidivrs
mov
movb
jl
jo
mov
sub
adc
dec
push
push
shr
cmp
and
add
xor
cld
mov
add
imul
repnz
iret
arpl
mov
mov
popa
push
rolb
movsl
cmp
roll
sbb
negl
dec
mov
out
mov
loopne
jnp
mov
pand
ja
lcall
pop
les
in
popa
loope
cltd
insb
sti
mov
jge
pop
xchg
inc
movsb
cltd
xor
adc
pop
mov
or
xor
mov
add
loopne
dec
cmp
and
scas
mov
jno
mov
push
loop
dec
imul
lret
popf
add
xchg
repz
lock
mov
inc
jg
xor
psllw
mov
push
inc
fs
std
and
cmp
subl
push
idiv
aam
mov
jle
pop
in
and
add
pop
sub
add
ret
mov
sahf
test
test
jo
sbb
inc
leave
xchg
sbb
push
imul
insl
bound
test
cmp
mov
mov
fs
lods
sbb
sub
popa
test
mov
in
or
repz
push
mov
adc
adc
mov
les
out
or
add
fadds
xchg
add
divb
inc
popa
adc
mov
setne
jp
mov
ljmp
xchg
test
jns
inc
popa
and
and
test
mulb
inc
negl
mov
add
in
rorl
out
inc
in
pop
and
rcll
hlt
loopne
jecxz
cmp
add
mov
movsb
jmp
add
xchg
pusha
sub
ret
jmp
jl
inc
push
mov
out
leave
icebp
ds
test
ljmp
sub
fistpll
add
xchg
sub
lcall
add
test
rolb
push
ss
xor
xor
or
lcall
int3
sbb
in
cli
mov
sub
sub
mov
sbb
or
xor
lea
stos
pop
adc
jge
mov
fucom
inc
bound
pop
and
add
ficompl
jnp
popl
loopne
xor
loop
pusha
sub
icebp
add
in
or
popa
push
scas
es
pop
add
and
fnstsw
mov
jnp
adc
cmpsb
cmp
lea
mov
addr16
test
xchg
xor
sbb
xchg
add
add
loope
lods
je
cltd
movsb
shlb
and
or
pop
push
es
mov
push
icebp
dec
push
push
popa
inc
adc
inc
fidivrs
rcr
int
add
add
push
xchg
pop
or
adc
mov
sbb
xchg
fwait
mov
sub
push
adc
pop
xor
imul
fisttps
adc
sub
sbb
push
xor
adcb
mov
or
sub
jno
mov
jo
add
cmp
cmp
movsb
pop
roll
or
out
xor
ljmp
fldl
popa
or
loope
or
in
and
inc
mov
iret
cmp
sbb
test
data16
test
mov
mov
cmpsl
loopne
inc
sbb
fisubl
and
mov
mov
bound
and
popa
sub
mov
movsl
pop
add
inc
in
out
sub
ret
mov
push
mov
out
out
and
out
adc
pushf
or
orb
cmpl
sub
xor
sub
das
or
inc
adc
jo
lock
ljmp
lock
xor
pop
add
mov
push
or
imul
loopne
test
sub
push
xchg
cmp
arpl
rcl
popa
movsb
add
js
push
and
inc
sub
add
and
ficomps
push
sub
or
xchg
xchg
and
mov
sbb
adc
sub
imul
rcr
mov
or
jno
je
pop
popa
push
test
dec
push
add
call
loopne
xchg
xor
push
in
add
sub
clc
adc
mov
adc
inc
movl
mov
jns
sbb
movsb
enter
movsl
xor
imul
sbb
dec
sub
mov
or
movsl
and
adc
xor
and
sbb
ds
sub
mov
shl
sarl
enter
mov
repz
jns
bound
ljmp
movsb
insb
sbb
js
push
sbb
xor
fisubs
adc
or
cmc
push
dec
push
and
jmp
fnstenv
xor
aaa
sub
xor
sub
bound
xchg
adc
mov
pop
fcoml
mov
pop
xchg
push
arpl
loop
mov
mov
roll
add
insb
pop
bound
dec
dec
shlb
cmpsl
hlt
sbb
mov
inc
or
mov
pop
jno
fdivs
add
jo
sbb
in
push
add
adc
adc
jl
cli
sbb
lcall
vmovapd
aad
jl
add
push
sbb
mov
lea
addb
repnz
loopne
inc
hlt
rclb
insl
cli
xchg
stos
mov
inc
outsb
add
sbb
fidivl
push
inc
stos
and
nop
or
lods
adc
or
xchg
and
fmulp
sub
hlt
sbb
or
xchg
and
ljmp
nop
mov
xor
into
or
xchg
sub
xchg
or
in
mov
iret
xchg
outsl
add
pushf
mov
add
mov
jmp
call
fdiv
enter
add
mov
lret
loopne
mov
cmc
jno
repnz
in
mov
mov
addl
mov
insb
into
adcb
int3
mov
andb
mov
test
cmp
dec
push
aas
dec
loopne
add
add
mov
jl
add
int
pusha
xchg
movsb
lock
ljmp
and
and
xor
mov
and
jnp
adc
in
fdivr
push
ljmp
cmp
or
push
jp
in
xorb
mov
push
add
add
test
push
mov
pop
mov
add
add
sub
mov
fcompl
pusha
adc
arpl
in
jle
add
int3
in
jmp
sub
push
push
and
add
push
mulb
dec
or
xor
add
fprem1
sub
mov
cld
inc
call
adc
adcb
movl
mov
fs
sbb
add
push
repz
xor
xlat
mov
mov
lahf
adc
test
adc
add
xor
xor
bound
mov
and
cmpsl
dec
enter
stos
dec
xchg
xchg
pop
mov
dec
je
and
mov
fmuls
xor
jl
in
mov
or
ja
cmp
mov
jp
cltd
pushf
dec
pop
sti
add
mov
dec
mov
cmc
call
hlt
adc
imul
js
clc
push
and
or
or
test
adc
mov
pop
cmp
mov
call
cld
add
xchg
mov
pusha
out
xchg
inc
test
dec
cli
mov
xor
dec
push
call
ss
add
sbb
iret
push
jnp
or
das
movsb
fsubl
sub
test
popa
icebp
lods
leave
sbb
les
mov
shl
in
test
jmp
mov
pop
add
push
and
and
xor
in
add
into
mov
or
mov
pop
fnstsw
stos
das
cmpsl
xchg
mov
or
xchg
dec
pop
bound
adc
dec
in
aam
clc
loope
jnp
push
mov
cmp
mov
arpl
pop
mov
mov
stc
outsl
cmpsl
stos
in
inc
push
je
movsb
xor
push
mov
push
test
sarl
adc
inc
inc
stc
rcr
push
insb
mov
jbe
and
cmp
mov
xor
add
xchg
mov
push
loopne
add
inc
cld
jl
test
out
dec
cmp
jmp
add
sub
jle
mov
sub
or
xchg
mov
dec
test
cld
push
cmpl
or
sub
add
fisubrl
dec
xchg
clc
mov
add
mov
mov
sub
mov
add
add
das
cmp
cmpsl
push
mov
sbb
cmpsb
mov
adc
dec
into
int3
add
dec
sbb
jl
add
hlt
pop
orb
das
int3
push
jmp
orl
mov
subl
jns
mov
sub
add
cmp
dec
add
call
shrb
insb
add
in
icebp
ljmp
cmp
pop
cmc
or
inc
mov
add
int
cmp
les
je
xor
pop
xlat
cmp
popa
push
cmp
sbb
jnp
jmp
jmp
jle
rolb
mov
test
xchg
paddusb
jmp
add
adc
add
shl
jge
bnd
lea
enter
lcall
aam
bound
sub
mov
inc
dec
sub
imul
jne
repz
ljmp
xchg
stc
je
add
and
loopne
add
sbb
cmpsl
jg
add
inc
cwtl
cmc
popf
scas
roll
sub
loop
pop
or
xor
adc
repnz
cld
roll
cli
js
push
data16
popl
xchg
outsl
int3
inc
daa
sub
xchg
xor
cmp
jb
pop
xchg
mov
lods
push
or
adc
push
push
popf
fwait
add
dec
repz
add
fidivs
add
push
inc
daa
mov
xchg
lea
addr16
ss
rcr
add
cmp
outsl
push
add
mov
inc
add
fildll
cmp
cmp
lods
in
sub
std
cmp
mov
lock
mov
sbb
dec
mov
add
mov
xor
add
or
out
mov
out
push
imul
ret
lret
jmp
or
cwtl
jp
cmp
xchg
xor
jg
push
cmp
pop
cmp
adcb
add
scas
push
iret
out
icebp
orb
sub
push
xchg
or
and
ret
jns
pushf
lock
repnz
cli
jg
movsl
stos
adc
xchg
add
or
mov
divl
mov
add
sub
push
add
fisttpll
or
push
xchg
addb
hlt
adc
popf
sbb
mov
jo
add
add
popf
pop
and
enter
pop
sti
add
ss
xorl
cmp
add
test
jo
and
mov
fmuls
stos
push
shll
shrl
sarb
aaa
lock
mov
xchg
add
cld
call
test
sub
push
jae
pusha
cmp
outsl
cmp
adcl
insb
lret
fmuls
aas
pop
mov
data16
sahf
out
add
in
imul
adc
inc
out
cwtl
push
add
or
imulb
jl
adc
add
out
subb
pop
repnz
mov
xchg
cmpsl
or
push
mov
sbb
inc
inc
pop
ja
add
icebp
dec
in
jo
lds
ret
add
mov
sti
test
scas
sub
out
faddp
push
jb
mov
pushf
jle
jmp
loopne
mov
icebp
and
outsl
pop
shrb
fimull
into
xchg
mov
test
cwtd
jne
mov
adc
push
aaa
scas
add
out
dec
or
call
cmp
xchg
rclb
mov
mov
cmp
add
sbb
add
imul
sbb
cmpsl
lahf
and
icebp
cltd
and
inc
sbb
jmp
cmp
and
call
add
std
mov
mov
mov
jnp
incl
sbb
cld
test
rcr
add
dec
shl
cmp
idivl
fbld
mov
scas
shll
dec
cmp
incb
loope
test
lea
or
cmp
lock
stc
add
rorl
add
outsb
fnsave
xorb
filds
sub
push
fildl
into
pushf
inc
cmp
outsl
fisttpll
xchg
divb
xor
dec
and
nop
stc
sbb
int
inc
insl
lods
xchg
mov
insb
test
aam
xchg
and
pop
xor
add
call
push
jbe
negb
xchg
push
cmpsl
mov
lods
pop
and
adc
xorb
mov
dec
int3
pop
or
rclb
mov
loop
inc
jae
dec
mov
loopne
xor
cmp
sub
add
xor
aaa
and
faddl
ljmp
cmp
jl
mov
push
inc
pushf
push
and
scas
sbb
xor
in
mov
pop
xchg
add
mov
mov
aaa
cmp
jle
sbb
test
pop
dec
lock
mov
and
movsl
test
inc
ret
insl
add
jp
xor
push
ficompl
add
cs
add
arpl
call
ds
mov
out
sub
cs
xchg
push
push
xlat
add
jns
inc
fnstcw
push
push
jl
xchg
dec
loop
add
je
lret
add
xchg
movsb
add
push
addr16
mov
pop
or
imul
aas
adc
mov
mov
xor
add
mov
add
mov
test
add
loope
and
ljmp
and
cwtl
lods
add
or
push
loope
sbb
lds
mov
inc
jne
xor
test
pop
mov
adc
sbb
fiadds
adc
mov
mov
loope
in
add
jp
add
cmp
cmc
mov
push
mov
and
sbb
aas
inc
mov
push
add
shr
testl
sbb
leave
aas
sbbl
inc
int3
fstpl
test
ficoms
and
test
cmp
out
push
inc
or
sub
cmp
cwtl
jl
mov
and
mov
shlb
mov
add
and
pop
out
pop
das
sahf
mov
nop
les
leave
jns
and
and
lock
jb
add
inc
push
rcrb
xor
sub
in
mov
inc
in
js
mov
cmpl
sarb
sbb
out
xchg
fs
push
add
loope
xor
filds
sbb
inc
btrl
int3
sbbb
fucomip
sub
sbb
outsb
xchg
inc
mov
mov
shll
lock
pop
sbb
test
sbbb
add
nop
xchg
mov
dec
popa
add
add
pusha
aas
repnz
aam
lret
push
push
in
add
and
jg
xor
je
lock
adc
dec
scas
rcrb
lcall
int3
mov
aaa
out
ljmp
popa
and
test
mov
push
iret
jge
nop
in
mov
inc
add
pusha
sbb
and
mov
in
ret
scas
bound
add
sbb
xchg
xor
add
aam
cli
rclb
fisttps
sub
push
push
mov
adc
clc
in
cs
push
cltd
mov
xor
outsl
jae
pop
sub
dec
cs
add
cltd
xchg
pop
adc
sub
andl
nop
addb
int3
jne
pusha
sbb
icebp
sub
lret
xchg
add
sbb
push
cld
das
or
xor
push
pop
cmp
out
cmpsb
stos
dec
mov
mov
ja
add
cmp
mov
sub
aam
jmp
or
and
push
mov
int
pop
popa
add
jnp
pop
loopne
and
mov
das
pop
cld
jecxz
mov
inc
loopne
scas
add
out
fnstcw
pop
arpl
fsubrp
push
add
mov
adc
jmp
xor
sub
pop
dec
jecxz
add
xor
xchg
add
movsb
insl
add
inc
je
xor
and
insb
add
push
call
jmp
stos
pop
popa
dec
mov
jecxz
add
xchg
and
fcmovne
jbe
add
in
mov
xlat
push
pop
sbb
adc
add
arpl
nop
popa
imul
add
shlb
push
lcall
mov
je
and
repnz
sti
jbe
repz
out
call
sub
loop
adc
lcall
adc
pop
cmc
movsl
push
add
je
jg
in
fwait
xchg
pop
sub
in
jmp
add
adc
xlat
and
mov
add
mov
idivl
add
leave
int3
xchg
insl
arpl
add
pop
popa
roll
in
sbb
in
add
pop
mov
imul
daa
call
and
insl
dec
enter
inc
add
mov
shrl
popf
push
add
lea
into
pusha
xor
add
jge
mov
loop
jne
in
jno
je
adc
loopne
mov
js
pop
add
leave
cmpsl
inc
pop
aas
enter
jae
inc
sbb
call
jmp
jg
dec
pop
and
sub
sbb
mov
daa
push
popf
inc
sbb
add
sub
or
push
nop
stc
cmp
sbb
lock
sti
test
dec
or
and
test
push
adc
fimuls
testb
jp
decl
and
sahf
pop
add
and
ja
dec
mov
jo
jb
add
aam
mov
sbb
je
jns
jae
xchg
pop
mov
shrb
xchg
mov
pushf
cmp
cwtl
cmp
and
jp
jmp
popa
test
shlb
and
xchg
add
fisubs
cmpb
mov
add
sub
call
jno
fistpl
jbe
and
jo
test
add
test
push
sbb
sti
sub
cmpb
int3
sub
out
clc
shl
pop
push
in
add
inc
lods
dec
cmpsb
jno
jl
add
add
fs
push
lcall
fcmovb
mov
jecxz
cmp
roll
dec
mov
cmp
xchg
jp
xor
sbb
cmpsl
imul
xchg
sbb
xchg
xlat
add
add
add
fisubs
cmpsl
inc
subb
lock
push
ret
sub
je
repz
shll
add
cmc
cmp
mov
rcrl
sbb
lea
ficompl
add
cmp
pop
int3
in
add
pop
jns
js
in
mov
orb
hlt
int
jno
xor
fldcw
xor
sahf
adc
xchg
add
push
cmp
pop
jno
pop
gs
and
pushf
in
lea
add
outsb
mov
pushw
xor
mov
jno
mov
loopne
in
sbbb
clc
lcall
sub
add
xor
and
xor
push
and
jecxz
add
add
fcmovnb
aaa
paddsw
xchg
push
pop
out
in
mov
add
mov
inc
lret
add
mov
add
or
and
sti
pop
movl
mov
call
loop
add
inc
shlb
test
lcall
pop
xor
cltd
in
adc
and
mov
add
lahf
ljmp
fisubs
mov
in
sbb
add
movb
lgs
outsb
out
mov
inc
add
fldcw
dec
push
mov
dec
add
mov
xor
adc
orb
cmp
lea
or
sub
lds
adcb
xor
push
push
xchg
add
sub
xlat
and
add
jns
jmp
add
mov
mov
incb
leave
dec
stos
out
dec
add
std
jnp
dec
inc
je
add
mov
xor
mov
mov
scas
fistpll
inc
jb
mov
cmp
add
daa
in
hlt
jp
jns
add
popa
stc
addl
push
or
add
rep
xchg
mov
daa
popa
or
mov
sbb
ret
push
fisubrl
fiadds
loope
nop
add
xchg
mov
add
push
in
addb
inc
add
jb
push
andl
shrb
add
out
sub
loopne
and
and
inc
push
out
cmpsl
pop
and
xor
sub
test
rcr
enter
mov
test
cwtl
cmpsl
add
add
daa
or
mov
inc
iret
sub
imul
inc
jo
fs
pop
mov
jo
lock
add
dec
inc
lock
jecxz
aas
xor
xchg
fcoms
jl
add
ret
pop
sarl
fldcw
test
or
loop
mov
shll
enter
leave
mov
lods
add
dec
mov
clc
cmp
or
pushf
jecxz
pcmpgtd
inc
hlt
inc
mov
outsb
adc
loopne
int
add
mov
mulb
sub
or
mov
ret
imull
stc
push
sahf
loopne
sub
xchg
mov
jge
xor
jbe
pusha
pop
sbb
jb
stc
and
lods
enter
xchg
cmc
out
pop
inc
sbb
rorb
repz
cli
push
mov
sbb
adc
test
pop
in
jle
and
pop
mov
clc
xchg
jp
add
leave
cmp
ror
jle
ds
add
testl
add
dec
push
pusha
clc
daa
stos
inc
sarb
inc
mov
je
mov
ja
testl
mov
mov
add
mov
mov
xchg
dec
pop
aam
imul
jae
loopne
add
xorb
popl
sub
lret
cmp
add
xor
push
ds
decb
xchg
or
ret
xor
mov
push
out
dec
cmc
test
adc
orb
lahf
pcmpeqd
lock
mov
add
push
ror
subl
stos
cld
bound
pop
in
xor
das
mov
ss
clc
cli
add
pusha
and
or
xchg
pop
enter
data16
movsl
add
adc
jl
nop
and
push
in
mov
jp
and
sti
mov
rolb
cmp
sub
loopne
sbbl
insl
cmp
sbb
sub
mov
mov
add
es
repz
mov
cli
pop
or
pop
adc
mov
rolb
cmp
push
mov
or
into
in
add
mov
dec
fiaddl
inc
pop
stos
dec
mov
sub
jmp
jns
nop
sub
jno
cmc
dec
sub
add
lahf
mov
sbb
push
jnp
pusha
shrb
test
nop
add
dec
sbb
into
mov
pop
mov
add
loopne
mov
sbb
jns
inc
out
xrelease
scas
push
mov
cmp
nop
orb
add
arpl
mov
nop
sti
or
das
add
scas
inc
sub
incb
arpl
or
std
xchg
sbb
pusha
push
pop
mov
leave
mov
adc
sbb
mov
add
orb
negb
ja
sbb
stos
xor
aaa
pop
sbb
out
add
pop
sub
push
jecxz
pop
popa
add
dec
lcall
add
or
imul
mov
pop
cmp
dec
mov
mov
test
adc
inc
add
xchg
mov
jns
sbb
js
pop
push
dec
add
add
add
push
aam
sbb
cmp
lahf
add
pop
ret
aas
int
lock
and
mov
idiv
add
lods
xchg
out
adc
mov
lds
inc
dec
dec
pop
lret
mov
jle
sub
push
mov
add
ljmp
ret
test
bnd
ja
movl
sub
shrb
call
lcall
add
push
test
add
int3
cmp
mov
pop
push
in
cmpsb
lock
mov
or
add
xor
add
adc
jmp
scas
outsl
add
inc
or
adc
xor
add
ja
add
inc
scas
sub
or
xchg
cmpxchg
pop
aam
push
mov
dec
int3
lcall
lods
and
add
cmp
xadd
xor
and
imul
sarb
pop
push
rclb
add
ret
popa
pop
sarb
and
call
into
cmp
fwait
push
jns
pusha
add
cmpl
lods
add
out
pop
bound
sub
les
test
fstl
xchg
xchg
adc
jmp
addr16
pop
icebp
mov
pop
and
dec
sbb
xchg
leave
jo
mov
push
icebp
sub
xor
add
dec
mov
sbb
add
lods
or
inc
aaa
pop
out
lock
flds
ja
pop
scas
adcb
mov
pop
call
or
pushf
lret
jae
sub
andb
jge
adc
add
fmull
mov
adc
flds
adc
sbb
lcall
adc
xchg
rorl
cli
xchg
push
fldt
jns
sbb
jbe
out
dec
dec
pushf
sbb
xchg
jnp
jb
pop
adc
outsl
leave
add
lcall
pop
in
jmp
lods
loope
es
inc
mov
pop
mov
add
not
pop
mov
add
out
test
cmpsb
mov
push
xor
test
iret
loopne
jl
or
ljmp
in
sub
in
or
adc
cmp
fldenv
addb
jae
add
shlb
xchg
sub
rcr
in
in
cli
cwtl
int3
ds
jb
mov
movsb
inc
cld
mov
pop
in
stc
je
or
and
mov
sbb
xchg
or
and
aam
lods
pop
inc
push
push
pop
leave
pop
push
nop
dec
cmpsl
and
movb
repz
rcrl
mov
cmp
jo
daa
out
pop
push
jnp
jbe
nop
add
aad
fisubl
cmp
adc
pop
cwtl
enter
cmp
scas
mov
testl
jns
xchg
in
push
bound
and
jmp
fnsave
and
inc
in
movsl
mov
lret
cmpsl
sub
mov
sarl
ja
orl
add
pop
sbb
add
jmp
call
add
pop
ja
aaa
xchg
sbb
rcrb
inc
mov
shrl
das
mull
stos
mov
outsb
adc
add
push
cli
inc
fcomps
andb
jmp
or
mov
push
cli
add
outsl
mov
ljmp
cltd
dec
push
std
das
add
test
lock
mov
in
iret
push
mov
ret
out
popa
jo
add
pop
ljmp
sub
cmp
cmp
inc
icebp
mov
cmp
das
shll
int3
pop
gs
cld
and
insl
sbb
mov
jmp
add
gs
inc
add
adc
outsl
les
shll
cmpsl
lret
add
dec
mov
iret
cmp
cmp
sbb
add
pop
jg
cmp
mov
push
into
push
insb
ljmp
push
cmp
add
faddl
pusha
les
std
aad
add
stos
add
fs
imul
in
movsl
add
sub
jecxz
adc
xor
clc
popa
cmpsl
cmp
cmpsb
jne
adc
das
int
push
dec
fdivs
or
insl
add
addr16
loopne
cmp
xor
dec
idiv
mov
jo
fs
dec
imul
add
mov
orl
leave
or
pop
scas
and
pop
jne
xchg
hlt
stc
popa
and
lret
pop
sbb
mov
xor
jge
add
cmp
dec
add
cltd
inc
add
shl
add
sbb
add
inc
jne
add
mov
adc
ret
add
dec
push
add
movsb
scas
xor
xorb
and
mov
add
inc
cwtl
stos
mov
xor
sarb
xor
xchg
imul
add
sahf
scas
test
gs
xor
adcb
adcl
aas
jge
orb
sahf
in
test
iret
jecxz
cmc
mov
adc
pop
int3
push
cmpsb
mov
shr
add
gs
ljmp
add
sbb
inc
popa
xor
out
dec
scas
je
add
iret
inc
cwtl
xor
cvtdq2ps
pop
cmp
add
lods
adc
xor
es
imul
add
fcoms
pop
cmp
mov
clc
jne
cmp
hlt
pop
inc
hlt
adc
sub
addb
pop
lret
js
mov
cmc
add
and
pusha
xor
sbb
add
out
pusha
sahf
cs
cmp
addb
add
sbb
sub
sbb
pop
jae
test
or
dec
insb
test
popl
nop
sti
lock
push
and
cmp
test
out
cwtl
in
inc
imul
mov
ja
xor
mov
sahf
fiaddl
sarb
mov
mov
add
mov
or
add
frstor
push
pop
jae
adc
inc
pop
mov
enter
push
pop
cmc
imul
outsb
addb
sarl
les
movsb
dec
in
cmp
dec
int3
adc
xchg
sub
outsb
add
xchg
or
sahf
loopne
push
dec
push
xlat
sub
and
test
adc
mov
adc
push
rclb
bswap
inc
pop
mov
loopne
pop
aas
mov
fs
inc
ret
outsb
jp
mov
jno
pop
xchg
mov
je
mov
jae
jns
leave
pop
negb
ret
mov
dec
test
adc
and
lods
andl
fwait
lahf
add
add
inc
xor
or
fisubl
and
add
leave
inc
incb
sub
rcrb
bound
pop
xor
mov
and
ljmp
jg
mov
pop
rol
lret
sbbb
add
in
test
dec
adc
jl
cmp
test
loope
sub
jge
sbb
fmul
xchg
pusha
sub
les
test
and
add
sbb
xor
cs
rcll
add
lock
cmp
or
ja
sbb
dec
and
out
inc
es
lock
cltd
jno
pop
mov
shlb
popa
sti
xor
or
and
push
aad
cld
minps
mov
js
cli
add
lret
jae
jp
push
xchg
add
jle
xchg
cld
and
outsb
push
in
mov
dec
mov
mov
inc
xchg
cld
orl
inc
sbb
nop
fucomip
push
add
aaa
rorb
nop
adc
sub
add
lret
mov
repnz
mov
xor
jle
jae
out
shrb
imul
add
or
push
adc
vmread
int3
sbb
cmp
inc
pop
lret
cwtl
inc
add
cld
rolb
lret
add
mov
pop
pop
mov
dec
pop
mov
or
test
add
hlt
cs
push
fdivrl
jno
jl
add
xchg
in
cmpsb
jne
xorb
mov
mov
dec
xchg
add
jno
scas
dec
or
gs
inc
xlat
sub
mov
xchg
xor
and
cs
xor
adc
rcl
push
mov
repz
xchg
popf
push
mov
pop
jne
mov
xor
pusha
cmp
inc
loopne
sbb
shrb
sub
leave
test
cmp
sub
pusha
jl
icebp
shlw
jnp
add
push
adc
leave
push
ret
push
add
add
mov
pusha
push
nop
cli
mov
mov
es
pop
pop
mov
and
jg
add
jle
fisubrs
in
lock
sbb
push
test
add
sub
jne
nop
add
pop
in
outsl
aas
call
cmp
dec
sbb
movb
push
mov
add
fmul
pop
mov
add
push
xlat
aam
fucomp
add
sub
in
stc
add
mov
mov
xchg
clc
clc
movb
mov
sub
push
adc
sub
add
xchg
pop
xor
enter
je
adc
out
int
lds
inc
or
mov
subb
mov
outsl
call
jo
icebp
or
push
jbe
mov
ljmp
xor
push
clc
lods
add
leave
and
add
int3
scas
fildll
add
inc
or
jecxz
fcoml
sub
out
adc
cwtl
adc
and
add
stos
dec
jl
cmp
sub
loope
lret
hlt
aad
popa
js
ret
fisubl
push
pusha
cmp
dec
and
lcall
aaa
lahf
sbb
cs
add
jle
jbe
enter
imul
test
mov
insb
mov
adc
addb
icebp
stc
xchg
inc
lock
add
fmuls
cmp
dec
clc
xchg
movsl
cmc
std
inc
fldl
mov
mov
addr16
mov
subl
enter
add
dec
sub
movsb
mov
lds
mov
mov
xchg
lods
lock
adc
pop
cmpsb
sub
adcb
adc
shl
fstl
adcb
sub
adc
out
adc
xchg
pop
je
cltd
mov
add
dec
test
loop
aad
add
xchg
dec
outsl
sbb
js
add
shl
push
cmpb
add
lcall
add
cmp
or
dec
in
jl
rclb
lea
jnp
adc
pop
mov
fnsave
or
dec
pop
call
and
sbb
add
dec
or
shlb
sti
mov
mov
and
out
cwtl
inc
sar
add
fiadds
lahf
lock
mov
sbb
cmpsl
pop
xorb
mov
int
rolb
add
xchg
dec
inc
jne
and
cld
fs
add
mov
mov
loope
add
neg
gs
dec
pushf
add
pop
jno
xchg
dec
out
add
enter
jbe
add
push
push
ficomps
add
dec
add
xlat
add
ror
jle
and
xor
ret
in
inc
mov
add
cltd
cmpsb
arpl
xor
add
repz
popa
fistps
pop
add
add
add
and
loopne
out
add
das
into
cmp
lahf
and
cld
cmp
add
jmp
leave
add
push
cmp
push
add
push
outsb
test
lock
push
aam
icebp
or
mov
clc
push
add
xchg
test
xchg
out
pop
clc
movl
pop
out
pop
inc
nop
xor
lds
mov
enter
imul
mov
outsl
mov
or
cmp
cmp
lcall
xchg
push
in
cmpl
push
aam
repnz
or
imul
gs
test
or
cmp
out
xchg
sahf
ss
lret
add
icebp
outsl
fcomip
fdivs
add
cmpsl
add
jg
mov
pop
movsl
cwtl
clc
add
pop
fisubrs
int
add
or
jbe
insb
aas
pop
push
and
les
movsb
lret
pop
gs
inc
sahf
pop
or
pop
mov
add
sbb
cmp
adc
pusha
test
inc
rorb
jmp
and
cmpb
push
mov
leave
mov
test
sarb
adc
add
in
insb
add
pop
jnp
push
jle
loopne
sub
test
pop
js
add
jnp
rol
jo
rclb
ds
sub
add
repz
imul
lods
out
fwait
mov
bound
ret
jp
mov
cmp
xor
xor
cmp
dec
xor
mov
ret
call
sbb
pop
jae
out
clc
add
sbb
je
adc
pop
sbb
insl
mov
inc
cmp
add
jmp
xor
jnp
jp
jl
lods
sub
push
mov
adc
sti
cmp
fildll
push
daa
cmp
xor
cmp
pop
jns
jno
xlat
fistps
push
ja
or
sbb
mov
push
movsl
into
test
or
inc
in
push
mov
rolw
mov
pop
push
in
mov
add
cld
push
inc
dec
sub
sbb
js
frstor
inc
jecxz
and
mov
ret
aam
test
mov
subl
or
or
data16
orb
addb
fwait
jo
testl
add
mov
call
orl
in
add
loop
push
lods
out
ja
jl
stos
or
inc
ss
in
test
inc
je
sub
mov
push
outsl
jecxz
inc
sti
hlt
faddl
inc
stos
mov
lahf
daa
dec
dec
mov
aam
mov
sbb
dec
dec
mov
mov
inc
push
movsl
in
rclb
xor
sub
cmp
sbb
add
or
les
or
xchg
pusha
daa
imul
sarb
adc
shlb
adc
pop
dec
add
dec
pusha
clc
adc
repnz
add
pusha
stos
lea
lcall
fadd
add
mov
jmp
mov
ds
jne
pop
push
and
jmp
pop
mov
dec
hlt
clc
add
rclb
mov
lds
pop
cltd
mov
das
mov
mov
js
inc
in
or
sbb
rolb
mov
faddl
sbb
stos
adc
fsubrs
movsl
add
mov
jbe
push
out
add
mov
mov
add
pop
sahf
and
adcb
lds
js
dec
outsl
hlt
sub
dec
add
push
int
mov
add
call
and
leave
sub
loope
ja
or
add
sbb
popa
xor
pop
ss
add
fsubs
int3
xor
add
push
pushf
fsubr
cmpsb
and
ret
mov
sub
orb
mov
push
add
lea
adc
fwait
js
pusha
inc
or
ds
or
popa
dec
jo
add
dec
popf
cmp
mov
push
mov
in
add
mov
jecxz
sbb
jnp
in
inc
out
pusha
cmpb
xlat
cwtl
pop
mov
push
call
pop
cmpsl
cmp
stos
mov
or
mov
mov
fadd
xchg
hlt
pop
mov
add
mov
std
ljmp
mov
jmp
or
add
inc
sub
mov
add
dec
mov
in
pop
in
mov
xor
hlt
sub
pop
sbb
and
inc
cmp
add
add
mov
sbb
xor
ss
test
dec
add
jp
mov
xchg
test
mov
pushf
nop
jo
push
insb
inc
dec
mov
inc
mov
lcall
xor
sbb
mov
add
adc
stc
scas
sbb
add
cmpsb
xchg
cld
add
sbb
popf
icebp
and
push
add
add
mov
pusha
mov
xor
add
pop
lret
cli
jo
fcoms
add
sbb
hlt
imul
ret
sub
orl
orb
push
pushf
int3
mov
add
mov
insl
adc
add
scas
dec
push
sub
add
mov
lock
jl
or
nop
or
loopne
mov
add
pop
add
lahf
add
pushf
es
mov
dec
add
pop
mov
mov
cmpsb
jge
cmpb
cmp
lret
add
mov
inc
adcl
unpckhps
add
inc
pop
mov
adc
shlb
out
lods
ror
cmp
or
daa
out
insb
xchg
lock
and
dec
fldl
add
push
rcll
inc
loope
inc
test
add
test
enter
push
push
sbb
insl
add
sbb
xchg
or
mov
sahf
mov
add
dec
fsubr
sbb
adc
fs
sub
sub
stos
and
fiaddl
xor
nop
in
pushf
cmpl
imul
xchg
loopne
out
pop
hlt
andb
xchg
rcrb
fldt
or
add
xchg
push
pop
add
dec
cld
add
mov
cmpsl
icebp
dec
call
or
sbb
call
add
js
mov
jmp
rclb
add
xchg
adc
xchg
pop
and
das
xor
clc
xor
add
jecxz
ret
lock
add
test
cmc
incb
insb
frstor
aam
and
fwait
scas
cmpsl
test
jmp
clc
pusha
ja
test
fmulp
lods
sahf
lahf
loopne
or
popa
lea
test
mov
add
pop
push
call
jae
xchg
adc
xchg
je
mov
inc
cwtl
mov
movsb
mov
cmp
aad
faddl
jo
mov
cmp
dec
loope
push
or
call
or
arpl
push
adc
jns
addr16
add
pop
imul
outsb
mov
adc
jl
outsb
dec
mov
sar
sbb
shlb
jns
add
add
add
sub
push
xchg
cmovle
jmp
movsb
cltd
sbb
rcrb
xchg
lods
xor
shrb
adc
cmp
pop
fldcw
mov
pop
adc
pusha
movsb
add
loopne
lret
orl
out
repz
and
jnp
incb
stc
insb
loopne
into
xor
imul
idivb
xchg
xor
in
aas
insb
cli
add
popf
movb
andb
repnz
jmp
add
in
push
add
arpl
xor
adc
pop
and
or
dec
mov
mov
repz
cmp
mov
add
push
std
shll
add
out
pop
mov
mov
inc
mov
in
or
jbe
out
pop
xchg
fs
hlt
loop
mov
add
cmp
inc
cwtl
shll
dec
add
pop
and
mov
sbb
out
xor
fisubrs
xor
aaa
xor
jae
dec
fmuls
rclb
mov
sbb
out
sbb
out
mov
jne
add
push
jg
add
fbstp
push
and
int
inc
xor
add
fstps
outsb
adc
lret
int
stos
jge
call
sub
xor
jbe
scas
icebp
add
and
mov
ljmp
fstpt
xor
adc
inc
dec
mov
fbstp
add
mov
jl
pop
inc
and
xlat
mov
push
jp
aaa
ss
mov
cmp
dec
outsl
out
dec
xchg
cmp
xchg
inc
into
in
sub
cwtl
outsl
aam
sbb
in
jl,pt
lcall
mov
or
sbbb
lret
jbe
pop
jl
pusha
mov
pushl
les
adc
sub
mov
movsb
in
inc
je
push
bound
add
pushf
repnz
shlb
add
mov
lahf
je
push
pop
jbe
popa
push
icebp
add
jmp
inc
inc
add
gs
scas
aas
mov
push
add
push
adc
mov
nop
or
dec
out
mov
popa
add
mov
xchg
pop
or
inc
fbstp
dec
stc
ljmp
jle
lret
pop
sub
lea
mov
push
add
dec
xor
mov
xor
mov
pop
pop
leave
xchg
xchg
int
or
jg
mov
mov
xor
sbb
jle
sub
push
aas
into
movsl
mov
repnz
addr16
fistpl
sbbb
and
out
push
jmp
xor
sbb
cmp
rcrb
lcall
sbb
fcmovnbe
push
movsb
sbb
or
das
mov
add
and
cltd
xchg
push
and
mov
add
aam
push
movsl
or
mov
add
jmp
mov
cmp
adc
mov
jno
insl
mov
push
stos
iret
cwtl
jo
fcomip
cmp
mov
fidivs
or
and
into
adc
sahf
jg,pn
loope
fwait
rcl
and
rol
dec
ret
shlb
add
repnz
mov
popf
js
js
xorb
sahf
adc
pop
bound
and
jmp
xor
pop
add
pop
test
sbb
les
cltd
dec
add
iret
andb
pop
xchg
inc
or
out
add
xor
xchg
ss
dec
lock
cvtps2pi
ret
xchg
movsl
pop
daa
pop
mov
mov
loop
pop
add
xchg
testb
mov
fdivs
out
or
xor
movsb
shl
hlt
pop
mov
xor
pushf
rolb
push
cltd
testb
push
pusha
push
aad
mov
add
fwait
pop
pushf
mov
sub
dec
call
packsswb
add
iret
jmp
push
add
rcl
mov
pop
add
mov
clc
lods
xchg
mov
and
lock
jl
shl
mov
cmp
mov
mov
xor
rcrb
ret
xchg
dec
cmpl
cmp
mov
stos
jnp
add
movsb
xchg
ljmp
cmp
sti
push
mov
add
imul
arpl
outsb
sbb
pop
jns
push
add
xchg
push
adc
xor
cmp
call
cmp
ret
jmp
xchg
mov
push
dec
jecxz
push
add
nop
and
into
xchg
add
xchg
rorb
arpl
movsb
add
filds
adc
mov
lods
sub
pop
shl
pop
cld
imul
imul
mov
xchg
mov
cwtd
mov
aam
dec
int
add
scas
cld
sti
scas
ja
shr
jp
add
sub
inc
push
push
push
xchg
xor
adc
jmp
test
pop
test
roll
xor
ss
daa
adc
insl
mov
iret
lods
xlat
lock
add
arpl
dec
sti
aaa
inc
add
pop
push
dec
xchg
insb
adcb
iret
xchg
jo
pusha
dec
mov
and
dec
rcll
loope
daa
test
out
movsb
rclb
stos
inc
std
xchg
or
daa
dec
mov
out
xlat
cmpl
or
lcall
cwtl
dec
cmp
sub
or
es
lods
xor
and
ss
jo
mov
cmp
pop
sub
in
push
shll
jmp
jmp
xchg
push
les
je
dec
bnd
roll
cld
pop
add
nop
jne
das
mov
aad
jecxz
mov
push
rcll
and
xlat
fwait
out
xchg
jnp
pop
test
int
add
xchg
frstor
imul
cmp
aas
nop
call
lds
stos
inc
cs
mov
pop
inc
dec
add
repz
xor
lods
rorb
jae
xor
mov
faddl
push
push
add
jo
push
mov
cmp
jb
loope
loopne
push
push
jo
cltd
mov
stos
verr
add
jbe
pop
test
loope
lcall
subl
mov
ret
or
dec
mov
adc
popf
in
mov
jb
add
ror
add
mov
mov
jl
add
or
dec
push
push
in
inc
add
pop
movsb
mov
arpl
inc
pop
adc
sub
mov
mov
or
mov
add
hlt
sub
or
aam
nop
js
pop
lret
push
xchg
push
lock
mov
add
je
mov
orb
clc
dec
add
rclb
sti
stc
adc
add
and
mov
cmpb
repz
cs
mov
inc
xor
add
loope
sub
aad
sahf
adc
repnz
cld
addl
jae
fs
nop
cld
pop
dec
add
xor
mov
xor
sbb
test
push
and
js
mov
pop
faddl
rolb
lods
cld
or
and
repz
pop
sbbb
cmc
pop
sbb
adc
das
jns
mov
add
mov
popa
lret
xchg
icebp
push
sub
call
std
push
cwtl
lods
xor
ds
cmc
cmpb
mov
pop
bound
data16
cwtl
fsubs
and
imul
push
sbb
xor
jns
sbb
sbb
test
fnstsw
dec
ret
cvtdq2ps
and
xchg
inc
add
ds
rol
mov
and
jl
jecxz
pop
push
cltd
pop
aam
sbb
pushf
cmp
add
andl
and
gs
shrb
int
jmp
cmp
addr16
std
add
lret
test
test
pop
imull
ds
cmp
call
rorb
xchg
add
inc
in
jl
test
push
jns
cmc
xchg
mov
and
mov
add
pop
push
jo
aam
decl
add
mov
jne
shl
cli
push
xor
fcomps
loopne
popf
andb
xchg
mov
add
ret
mov
movb
ljmp
ljmp
xchg
cmp
add
leave
lods
addb
stos
cmp
das
pusha
inc
push
aaa
push
adc
test
mov
or
sbb
adc
cmp
adc
lods
ja
arpl
out
dec
inc
fdivrs
ds
adc
lods
ret
and
cmp
jge
cmpsl
test
sbb
pushf
jae
mov
jnp
pop
jl
add
mov
enter
mov
in
ror
add
mov
jno
pcmpgtb
lds
mov
mov
cmp
add
push
adc
test
cld
movsl
and
mov
out
inc
adc
cwtl
xchg
daa
add
xor
arpl
mov
decl
mov
int
inc
sbb
add
out
clc
xor
dec
lods
adc
addb
and
rolb
adc
js
add
mov
ret
sbb
movl
fdivrs
mov
inc
scas
imull
lods
and
in
int3
hlt
in
ljmp
sahf
cs
jbe
je
jecxz
pop
out
cld
jle
sbbl
push
push
movsl
sbb
pusha
sub
mov
loope
push
sub
addb
add
lret
push
lods
ret
fldenv
sub
pusha
mov
inc
pop
or
sbb
test
xor
nop
mov
pop
cmova
cwtl
cltd
mov
mov
test
arpl
cli
push
ret
pop
lahf
test
rclb
decb
jae
cltd
call
bound
andl
ss
fidivrs
into
xor
pop
jle
das
lods
inc
test
shlb
xor
sbb
loopne
and
pop
dec
sub
lret
pop
push
lret
clc
adc
sahf
pusha
add
xchg
icebp
pop
xchg
jecxz
add
std
vmread
jo
popf
push
imul
add
xchg
js
or
sub
xchg
add
xchg
pop
cltd
insb
mov
aam
rorl
in
push
shlb
add
pop
mov
dec
in
add
jecxz
mov
push
add
cmp
mov
fcomps
popa
inc
jnp
mov
mov
jle
cmp
sbb
mov
sub
mov
int3
pop
add
loope
test
sub
lret
jl
scas
jae
mov
sbb
push
lahf
adc
inc
in
jae
add
cmc
xchg
lcall
pop
xchg
pop
mov
or
mov
dec
xor
cmc
dec
lods
add
inc
lret
push
add
and
out
fs
je
add
ja
or
pop
pop
mov
test
ds
jns
aas
daa
movsb
xorb
jle
je
jns
mov
mov
int3
fisttpl
add
mov
xchg
inc
mov
push
pusha
or
mov
mov
ja
push
mov
ret
mov
sbb
sbb
neg
cli
add
cwtl
lods
add
sub
out
mov
andb
cs
pop
or
pop
pop
cli
rolb
std
fldenv
or
jo
mov
xchg
or
mov
test
xchg
aam
xchg
test
adc
add
jmp
iret
call
pusha
xchg
push
pop
xchg
add
jns
adc
pusha
shlb
jmp
cmp
imul
add
and
push
sbb
jo
pop
out
mov
notb
pavgw
push
aaa
cmc
hlt
ja
pop
mov
pop
std
mov
mov
adc
inc
cmp
sbb
in
xor
add
xchg
add
fs
xor
aaa
shlb
sub
aam
or
inc
add
in
shlb
pop
dec
add
lret
or
fidivrs
out
cli
loopne
hlt
sbb
inc
lods
add
xor
xchg
adc
mov
adc
pop
lcall
inc
sbb
mov
rcl
jb
add
and
and
or
and
and
mov
add
jge
add
cmp
das
mov
add
and
stos
jge
cwtl
xchg
dec
xchg
or
pop
dec
push
xor
pusha
fdivl
mov
cwtl
add
dec
push
lds
call
arpl
inc
jl
dec
sahf
add
popf
pmulhuw
pop
mov
add
add
movsb
jmp
push
inc
adc
popf
inc
clc
mov
fsubl
in
add
mov
in
dec
or
mov
xor
sbb
inc
out
fnstenv
int
or
or
pusha
sbb
dec
outsl
and
sbb
xor
xchg
lods
rcrl
add
cmp
mov
sub
and
lods
inc
or
or
mulb
js
dec
fstl
adc
les
insb
mov
sbb
call
or
aad
sbb
adc
cld
test
xchg
gs
hlt
push
dec
mov
stos
fistpll
pop
push
inc
enter
xor
adc
mov
shlb
and
fildll
aas
sbb
movsl
adc
movl
push
and
in
inc
jecxz
dec
inc
pop
repnz
xchg
inc
outsb
xorl
pop
lahf
call
fcoms
cmp
lock
pop
jge
arpl
mov
in
ss
fadd
pop
add
pop
or
or
js
nop
hlt
xchg
icebp
add
cmp
scas
inc
ret
xchg
fdivl
mov
cltd
clc
idivb
loopne
adc
jnp
pop
test
dec
iret
push
jmp
mov
cwtl
push
mov
inc
add
push
popa
movsl
lahf
mov
mov
mov
andl
test
lock
add
adc
push
pop
ja
add
sub
sub
xchg
jg
or
jnp
movsl
mov
inc
loop
dec
add
pushf
inc
jnp
and
lods
rolb
mov
jl
inc
push
adc
sbbb
push
pop
imul
pop
sbb
repz
inc
nop
inc
fcompl
jl
ds
mov
push
test
fiaddl
mov
push
pop
fsubs
dec
int3
add
daa
and
mov
push
cmp
sbb
shll
mov
inc
popa
pop
xor
adc
or
into
cmp
scas
cwtl
mov
dec
aas
pusha
dec
fwait
jae
mov
arpl
jge
popa
clc
scas
xor
sub
negb
test
xchg
popf
jge
and
xor
jg
in
add
inc
rol
sbb
sbb
push
dec
test
xor
inc
mov
mov
pop
dec
add
push
sbb
mov
and
pop
sub
pop
push
nop
nop
sub
or
je
and
add
stos
sub
xor
scas
pop
dec
iret
and
out
fistpl
hlt
outsl
imul
push
aam
mov
inc
dec
adc
fwait
dec
pusha
xor
jnp
or
sub
enter
pop
inc
roll
bnd
icebp
mov
pop
cltd
ret
pop
sbb
dec
shrb
mov
lcall
dec
xor
daa
add
inc
mov
xor
adc
mov
fadds
iret
aam
or
pop
adc
inc
jo
je
mov
add
mov
lods
aas
mov
in
sbb
imul
sbb
pusha
mov
test
addb
dec
add
mov
out
inc
sub
fildl
pusha
clc
insl
sub
add
arpl
mov
in
or
mov
andb
je
lods
shlb
ficompl
data16
std
push
cmp
sbb
rcrb
push
pusha
lock
mov
xor
mov
cwtl
xchg
roll
xchg
lods
fsubl
iret
mov
int3
leave
fstpl
insb
inc
nop
pop
and
inc
clc
or
sbb
nop
mov
loop
and
rep
lock
lods
push
mov
add
mov
add
mov
gs
mov
pop
daa
sbb
stos
outsl
and
cmpb
nop
jg
xchg
loopne
loopne
and
cmp
andb
cmp
add
rorb
mov
and
push
stc
add
ret
shll
add
fcmove
xchg
inc
shlb
lods
lock
pop
andl
addr16
add
stos
iret
sub
movsl
shlb
nop
test
cmp
adc
daa
pop
insb
pop
out
mov
fwait
and
fdivrs
add
sbbb
pop
adc
popf
mov
loopne
repnz
lea
imul
test
mov
les
scas
lods
and
add
and
popa
repnz
lds
in
fmull
cmp
add
sub
shrb
add
lret
adc
and
push
xchg
sbb
bnd
pop
fmull
pusha
mov
lret
xchg
add
loop
dec
pop
jge
fwait
das
int3
rcrl
adc
lods
add
cmp
add
dec
sahf
loope
inc
aas
add
mov
pop
inc
inc
xchg
sbb
inc
dec
inc
mov
roll
or
mov
xchg
test
sub
and
out
sbb
lods
or
sbb
push
pop
roll
aam
mov
bound
outsb
das
or
leave
sub
pop
pop
add
fwait
jecxz
cmp
adc
sbb
out
cs
js
dec
or
ja
adc
shlb
adc
add
idivl
push
loop
mov
jae
icebp
lods
pop
push
and
iret
dec
or
enter
outsl
add
or
and
adc
cmp
pusha
vpclmulqdq
pop
inc
pop
push
sub
push
push
pop
or
mov
mov
inc
inc
pusha
inc
jmp
cwtl
xchg
or
popa
faddl
adc
jnp
inc
mov
add
shlb
add
jmp
mov
les
xchg
inc
add
pop
pop
out
orb
pop
cmc
dec
fnstsw
xor
je
add
or
enter
movsb
icebp
add
adcl
into
or
inc
adc
sub
call
dec
pop
sub
gs
xchg
adc
lds
cmp
into
mov
in
outsb
add
sub
scas
jne
or
leave
adc
lea
test
les
push
cltd
sbb
int3
jae
sbb
fdivp
sub
add
jne
lds
ja
add
rcl
test
push
mov
scas
pop
add
sub
add
inc
sti
lret
add
push
sub
push
shlb
loopne
sbb
jne
dec
aas
lds
add
sbb
scas
add
push
pusha
outsl
mov
mov
jo
sbb
pusha
cld
test
add
and
cmpsb
cmpsl
cmp
xor
or
movsl
adc
and
jb
pop
clc
add
fucomp
sbb
scas
push
ficompl
addl
mov
enter
pop
xchg
mov
clc
sub
mov
rorb
inc
pop
jl
inc
ljmp
neg
incb
sub
leave
nop
jo
jnp,pn
add
add
insb
fldcw
in
clc
test
mov
push
sub
aam
pop
sbb
inc
add
push
mov
add
adc
addr16
loopne
sub
call
mov
inc
dec
rclb
or
stos
mov
xchg
test
mov
dec
ret
mov
insb
add
es
cwtl
jb
xor
add
pop
add
psllq
sbb
add
sub
test
push
add
jge
sti
and
jbe
add
out
xorb
es
mov
and
or
pop
inc
sub
sbb
cmp
dec
cli
mov
loope
aad
shr
push
add
mov
push
xor
cwtl
add
lret
add
add
push
divl
pop
or
ret
or
lea
shlb
outsb
jno
dec
daa
into
shlb
cmp
das
aam
xor
xchg
sub
sahf
fnstsw
or
sub
clc
or
or
and
or
xor
push
call
push
push
aaa
stc
xor
testb
and
mov
testl
fistpl
jns
cli
or
sub
add
cmpb
andb
leave
xchg
jns
add
and
and
fwait
add
data16
lea
sbb
das
cwtl
jle
inc
add
push
jne
sub
add
sbb
mov
popa
cs
inc
pop
cltd
add
jecxz
lock
add
or
test
mov
stos
sbb
leave
sub
mov
sub
add
dec
dec
cmp
and
jns
inc
mov
jb
xchg
push
arpl
stos
sub
cs
mov
and
adc
adc
pushf
or
xchg
nop
mov
fisubs
ljmp
add
fidivs
leave
shll
cmpsb
push
push
repz
sarb
lock
push
xor
push
xchg
rcrb
scas
add
imul
adc
sbb
cwtl
or
adc
sar
insl
out
sbb
xchg
adc
fsts
pop
xor
sti
insl
test
add
jmp
add
ja
mov
xor
ds
mov
lea
cli
add
adc
bound
mov
incb
and
fdivs
and
and
sbb
push
add
adc
jp
xorl
sbb
and
adcl
aas
dec
mov
sub
stc
sbb
adc
mov
inc
inc
cmp
sub
and
lock
xchg
push
and
mov
cwtl
loopne
and
out
jmp
rorl
fldcw
jno
in
sbb
cmp
add
jp
cmp
test
fcomps
xchg
popf
leave
imul
daa
out
sahf
arpl
dec
insb
popf
mov
add
nop
pushf
enter
cli
aad
fwait
lea
stos
mov
ret
ljmp
ja
xor
sbb
bound
add
ret
outsl
in
test
sbb
jnp
adc
movsl
xchg
je
movsb
in
push
xor
add
fucomip
xor
cmp
loop
cmp
cpuid
hlt
xor
jg
arpl
xor
sub
mov
shlb
mov
sti
add
mov
push
out
mov
push
shlb
sarb
fists
repnz
xor
add
pop
inc
pop
lahf
test
pop
mov
js
pop
xchg
iret
push
sti
lods
add
or
add
cmpl
adc
mov
mov
xor
popw
lea
sub
flds
sub
sbb
fs
mov
and
inc
dec
lea
xchg
aaa
sbb
adc
cwtl
inc
ret
mov
shrl
mov
mov
fcompl
scas
in
iret
repnz
xchg
or
jp
movsb
xchg
mov
mov
insb
inc
sbb
test
add
test
jno
ljmp
mov
xchg
cs
sbbl
xchg
les
ret
aad
sbb
out
xor
negb
adc
cld
mov
in
sarl
and
pusha
add
sbb
loope
dec
daa
sub
mov
or
inc
add
rcrb
add
aam
mov
pop
jns
add
lcall
jp
dec
push
xor
xchg
pop
shll
add
rsm
lret
jae
add
mov
cmp
xchg
xor
arpl
push
ret
add
call
mov
adc
xchg
in
sbb
dec
arpl
test
dec
or
pop
mov
leave
mov
mov
jecxz
cmp
cld
fmuls
add
iret
mov
inc
sahf
or
shlb
push
jp
adc
mov
ljmp
or
fisubrs
sbb
repz
into
adc
inc
mov
add
adc
push
jle
sahf
sar
ror
cmc
adc
mov
adc
pop
out
imul
inc
imul
xor
insl
inc
clc
popf
mov
and
popa
clc
out
adc
ret
fdivrl
add
and
cltd
xchg
dec
mov
mov
sub
sub
ret
cmp
rcrl
iret
cmpsl
and
cmp
sub
push
xchg
jbe
mov
mov
insl
and
add
test
in
loop
add
out
cwtl
or
push
inc
lods
sahf
rolb
add
fs
mov
and
mov
xchg
pusha
and
and
es
push
dec
lret
push
lcall
pop
or
lret
fiadds
dec
mov
int
sbb
add
cmp
push
add
push
and
mov
sbb
aam
nop
mov
imul
enter
xchg
sub
mov
or
lcall
jb
lods
or
or
add
jo
mov
ds
add
or
add
test
lods
sbb
int3
inc
push
lock
test
gs
pop
or
cmp
push
jno
cltd
xchg
add
xlat
aam
jae
add
jnp
cld
sarl
mov
push
out
add
rclb
mov
pop
bound
dec
cmp
subl
add
adc
xchg
cmp
sbb
lcall
into
sub
int3
sub
int
out
sub
loop
pop
ja
sar
rcrb
and
sbb
xchg
inc
xor
add
push
xchg
mov
mov
imul
add
in
leave
cmpsl
fwait
cmp
add
push
fmull
and
sub
jmp
push
dec
mov
imul
inc
xchg
mov
add
mov
popf
in
xchg
repnz
mov
test
sahf
xor
adc
pushf
mov
xor
add
aad
pusha
lock
pusha
es
nop
rolb
cmp
test
mov
add
inc
rorb
sub
or
cli
mov
std
or
add
jbe,pn
add
fldenv
iret
out
cmp
xor
aaa
popf
ret
das
add
orb
adc
je
and
in
cli
cmp
cmp
mov
mov
xor
adc
test
dec
adc
sahf
test
mov
add
xchg
or
mull
adc
out
fstps
addr16
inc
xor
test
inc
and
mov
mov
test
add
and
loopne
lock
mov
hlt
mov
sbb
mov
jge
lea
arpl
mov
enter
and
sbb
test
mov
hlt
cmp
sbb
cmp
enter
int3
mov
bound
add
nop
andl
mov
cwtl
lods
cmp
jne
pop
ficoml
xchg
xor
int
and
mov
mov
inc
cld
or
movsb
addb
imul
into
cmp
shll
ljmp
sti
add
dec
daa
insb
adc
sbb
fsubrs
mov
repnz
dec
lcall
sahf
mov
insl
nop
imul
adc
aas
movb
das
mov
or
fucom
add
pop
dec
je
fidivl
pop
mov
movsl
popa
test
sbb
ficomps
dec
adc
addl
imul
enter
fwait
in
add
mov
rorb
or
mov
jo
sbb
lds
cmp
jmp
sbb
jnp
cmp
mov
fstps
xchg
add
call
adc
or
mov
or
fcoms
pop
and
movsl
sti
cwtl
int
lods
xchg
push
out
sbb
rolb
cmp
push
pop
clc
lods
add
and
fbld
jne
dec
cltd
jae
nop
mov
test
ljmp
imul
int3
addr16
jno
add
adc
mov
cmp
rol
addl
fs
cltd
dec
and
lcall
sbb
test
in
aam
bound
jle
or
jmp
nop
pop
mov
cmp
movsb
cmp
outsl
xchg
dec
mov
stc
sub
loopne
clc
push
and
andb
add
mov
sbb
add
stos
ja
xchg
jns
pop
and
cmp
cld
leave
mov
subb
adcb
push
popa
popf
add
or
orl
pushf
inc
mov
out
or
call
sub
je
inc
inc
xchg
pcmpgtw
mov
push
aad
dec
fs
mov
aam
or
aam
fisubl
adc
push
push
push
add
push
push
sbb
pushf
scas
test
cli
mov
aas
xchg
add
mov
pop
jge
inc
nop
ja
add
repz
insb
dec
movsb
jl
mov
outsb
pop
sbb
sub
xor
lock
pushf
sarb
mov
out
or
cmp
cltd
sti
aaa
add
xor
push
sbb
testl
lock
add
mov
cwtl
mov
lea
cmp
cmp
xor
in
pop
sbb
mov
leave
push
mov
rcll
sub
mov
les
sub
add
xchg
xchg
jp
stc
add
dec
into
int
jb
les
add
mov
popa
mov
add
bound
test
cld
xlat
add
in
cmp
or
loopne
dec
movsl
and
pusha
xor
and
in
or
and
cwtl
or
xchg
imul
std
sbb
push
sbb
cmp
push
dec
cmp
mov
jmp
fcoms
adc
add
enter
mov
pop
pop
ret
cmpsb
and
xor
roll
and
xchg
sub
test
sbb
in
dec
clc
sahf
mov
mov
je
xchg
pop
add
pop
mov
pop
fs
cmp
shlb
popf
cmp
js
pop
or
test
and
mov
dec
cli
adc
jp
pop
dec
add
mov
add
test
dec
pusha
aad
xor
or
mov
into
inc
cmp
addl
mov
es
insb
andb
cmp
popf
sub
pop
loope
adc
adc
jge
add
in
pop
xchg
mov
je
aaa
mov
push
sub
mov
lret
ret
xchg
arpl
cwtl
add
dec
mov
mov
inc
adcl
hlt
mov
xor
mov
clc
loope
lds
push
mov
outsb
invd
inc
inc
mov
pusha
hlt
mov
add
clc
aaa
call
xor
ret
clc
sub
pop
shl
addr16
lcall
loope
pop
in
adc
add
jmp
in
adc
rcrl
add
and
sbb
inc
inc
and
cmpb
add
inc
pop
push
cmpsb
shlb
jmp
icebp
push
aam
cmpsb
or
mov
loopne
stos
xchg
mov
adc
dec
xor
inc
jbe
xchg
cmp
mov
pushf
ret
bound
imul
inc
cmp
daa
test
and
mov
mov
cltd
sbb
sbb
das
dec
inc
faddl
mov
jge
je
xor
shlb
in
dec
lret
mov
and
xchg
orb
mov
pop
ja
jp
and
add
xor
push
bound
cld
subb
push
mov
add
xchg
repnz
das
adc
or
pop
sub
ret
mov
loop
in
rcr
stc
cmp
cmp
mov
pop
stc
nop
and
in
sahf
call
xchg
repnz
jb
cmp
mov
lock
add
jle
gs
lret
and
sahf
test
int
and
pop
out
sbb
inc
pop
dec
dec
or
push
jg
incb
and
inc
sub
pusha
cwtl
nop
xchg
arpl
push
test
iret
test
rcll
or
bound
dec
pop
pop
lahf
inc
aas
sub
and
hlt
int
ret
sbb
jb
sbb
adcl
add
dec
pop
xchg
xor
js
pusha
inc
loopne
jg
jg
or
ret
cmpl
ret
xor
mov
adc
arpl
movsb
mov
or
adc
inc
inc
call
packssdw
lret
add
in
pop
mov
repnz
test
aam
rclb
inc
test
push
das
cmp
push
les
cmc
push
in
movsb
add
mov
in
xor
ret
fwait
push
sbb
arpl
ljmp
sbb
dec
mov
sbbl
mov
push
cwtl
call
hlt
bound
sub
mov
add
xchg
in
dec
add
mulb
xor
icebp
clc
test
test
adc
xor
inc
mov
sbb
inc
ret
stos
adc
cmp
lock
pop
scas
les
mov
mov
and
push
call
add
mov
pop
mov
mov
jmp
xchg
cmp
xchg
faddl
incb
cli
dec
mov
adc
sub
hlt
inc
mov
fs
mov
addb
cmp
sahf
cmp
inc
jns
sbb
xor
out
lahf
sti
pushf
js
aam
xchg
in
add
clc
pop
mov
scas
and
or
xchg
or
sbb
mov
testb
sub
add
addb
cwtl
sub
and
divl
or
fimull
xor
mov
vmwrite
push
mov
rorb
loop
pop
add
inc
popf
notl
add
xor
mov
in
add
jmp
dec
mov
sub
inc
xor
and
insl
shll
cmp
int3
adc
pop
adc
sub
in
dec
mov
inc
lret
imul
adc
sub
rorl
rorl
add
jp
stc
mov
xchg
enter
pop
mov
roll
add
jecxz
hlt
pop
lahf
and
add
adc
rep
pop
cwtl
stc
dec
inc
in
fsubr
test
push
push
movsb
ret
mov
mov
and
rol
pop
cld
add
push
pop
shrb
test
mov
ret
bound
test
mov
pop
mov
popa
in
movsl
enter
daa
pop
cwtl
dec
out
jl
sbb
xchg
dec
sbb
cmp
in
out
ret
dec
stc
sarl
cwtl
nop
dec
testl
andb
sub
xchg
shrb
or
pushf
popf
mov
mov
xchg
and
pop
js
xor
cmp
pusha
inc
ret
mov
inc
dec
arpl
lret
sbb
mov
sbb
sub
xor
ret
pop
andb
and
movsb
mov
dec
popf
cmpb
mov
mov
fmuls
cmp
mov
fucomp
sbb
rcr
in
cld
add
and
es
xor
dec
or
fcmovb
out
fcoms
xor
xchg
inc
inc
adc
insl
lahf
cmp
add
pop
and
jns
pop
popa
sti
addl
pushf
mov
xorb
stos
pop
icebp
pop
mov
or
outsb
daa
mov
mov
add
push
dec
enter
lock
movsl
push
das
enter
mov
js
popf
lock
shlb
loopne
mov
std
test
aaa
negb
insl
add
sub
out
sbb
inc
add
fs
js
int
loopne
add
daa
enter
imul
arpl
mov
add
mov
and
cltd
inc
leave
lock
add
xor
add
jl
mov
mov
sbb
cmp
enter
add
in
popa
test
push
push
pop
pop
insl
lcall
and
or
cmp
fs
inc
leave
jge
or
fs
int
sub
jg
pop
out
test
clc
imul
idiv
cmovg
les
in
or
pop
push
sbb
mov
mov
shlb
mov
hlt
dec
and
adc
mov
adc
push
pop
mov
xor
les
scas
push
mov
lahf
fwait
adcb
je
fdivrl
or
mov
pop
pop
enter
dec
int3
or
dec
test
add
pop
std
insb
pushf
nop
pushf
jle
cwtl
add
aam
push
push
xchg
sar
test
push
das
call
mov
inc
pop
cli
sahf
add
cmpsl
ret
push
jnp
repz
mov
mov
xchg
clc
aaa
dec
in
sbb
xor
sti
cli
or
add
add
jne
test
add
popf
dec
or
inc
push
jno
mov
adc
xor
push
sbb
push
cwtl
js
es
fs
lcall
stos
in
inc
add
cmp
out
scas
or
sub
add
push
push
in
clc
hlt
sti
les
pop
sub
adc
dec
cmp
sbb
ss
or
xor
rolb
mov
sub
or
or
cmp
js
outsl
mov
andb
in
inc
push
mov
icebp
rorb
lods
in
xchg
ret
fwait
roll
xor
dec
inc
orl
cltd
mov
xor
int3
cmp
outsb
push
shlb
sbb
add
in
in
or
cmp
sbb
lahf
sti
or
lcall
mov
in
imul
adc
lods
cmp
aad
add
push
and
clc
adc
out
and
pop
xchg
inc
fcomp
jecxz
movsl
pop
add
adc
mov
pushf
pusha
orb
in
into
fwait
add
mov
cmp
add
clc
adc
dec
ss
add
sti
je
mov
inc
test
jne
adc
sbb
test
movsb
dec
orb
inc
jb
mov
cs
mov
outsb
ds
mov
daa
mov
push
and
mov
leave
mov
sub
or
lahf
cmpsb
movsb
add
fwait
aas
aad
mov
add
in
clc
mov
adc
shrb
adc
and
inc
ret
cwtl
mov
lock
jae
subl
add
arpl
fs
jnp
test
or
rorb
and
movsl
iret
mov
mov
inc
push
js
int
rolb
aad
inc
jp
loope
add
scas
jmp
or
ret
mov
roll
in
lahf
fistps
outsl
mov
cmp
ljmp
xchg
lods
orb
ret
xor
cmp
cmp
mov
shll
lahf
in
int
and
jl
dec
in
jno
int
repz
shl
xor
jo
popa
mov
gs
test
aam
jns
test
mov
xchg
sbb
push
sbb
cmp
or
pop
inc
or
sbb
aad
and
stos
or
fistpl
jmp
iret
xor
out
push
andl
sbb
jno
test
push
xchg
fstpt
mov
loop
add
pop
ljmp
lock
push
incb
lods
jae
loopne
xchg
adc
inc
call
loope
or
add
nop
dec
push
mov
lock
add
xchg
sbbl
and
call
add
and
scas
adc
inc
or
dec
cmp
sbb
xchg
jmp
adc
dec
mov
adcb
stos
cwtl
mov
jno
pop
rcrl
pop
mov
push
push
fiaddl
jmp
daa
in
pushl
cmp
cld
add
push
adc
out
test
icebp
mov
es
loopne
stc
aas
or
xor
xorl
xchg
shlb
push
mov
pop
or
dec
daa
xor
mov
add
in
mov
jbe
xor
inc
je
dec
loopne
shlb
bnd
add
lcall
mov
addb
sti
push
orb
ljmp
pop
add
sti
inc
aas
test
jmp
adc
stos
les
jle
adc
je
jmp
fs
ljmp
mov
mov
ja
pop
imull
imul
xchg
add
mov
mov
mov
dec
pushf
daa
sbb
icebp
push
mov
and
xchg
xlat
xor
test
mov
mov
xor
scas
xlat
daa
and
sete
mov
mov
or
jne
lds
adc
xor
add
sbb
push
test
out
cld
sub
in
hlt
push
dec
xlat
or
adc
jne
ret
sbb
push
fs
pop
mov
mov
popf
sub
decl
push
jle
mov
cli
add
xor
js
shl
es
sub
xchg
mov
push
in
sbb
and
je
or
xchg
test
mov
jle
xchg
aam
pop
or
ds
test
je
loopne
adc
nop
aam
int
push
in
nop
je
add
sub
cmp
arpl
add
test
lods
and
mov
jae
mov
es
mov
jne
in
mov
out
add
test
add
into
mov
xor
mov
xchg
or
xor
les
or
dec
andl
fbstp
sub
sub
pop
stos
add
repz
shl
cli
pop
push
ds
aaa
jo
cld
add
and
xchg
jle
dec
or
cltd
mov
out
into
add
jmp
adc
cmp
mov
xchg
mov
and
xchg
adc
adcl
clc
inc
mov
nop
test
rolb
mov
dec
cmpsb
cmp
mov
cs
mov
bound
in
add
and
je
sub
add
mov
stos
pop
test
cld
mov
pop
les
xchg
sar
cmp
ret
sahf
dec
pop
cmp
adc
cmpsb
std
push
xor
inc
sbb
sub
dec
int3
gs
mov
inc
and
jae
add
inc
sub
adc
std
mov
inc
pop
loope
push
pop
in
andb
inc
into
sti
inc
mov
call
or
pop
xor
xchg
sub
add
mov
enter
dec
test
mov
ror
add
hlt
cmpb
out
xchg
cmp
push
and
adc
add
js
mov
xor
mov
or
pop
nop
mov
pop
je
gs
rcrb
pop
sub
fs
xlat
and
orb
xchg
pop
sarl
sub
js
push
in
mov
dec
or
inc
sbb
jl
add
sub
mov
mov
push
pushf
sbb
in
adc
test
add
xchg
adcb
mov
test
mov
mov
test
or
and
jo
mov
sbb
sarb
push
mov
shl
stos
stos
pop
and
repz
add
jo
inc
inc
add
sbb
add
add
add
psubw
rol
popf
mov
xor
inc
ljmp
je
fsubl
js
incb
sub
jmp
cmpsb
mov
fistl
stos
js
jo
push
xor
cmp
iret
add
mov
cmpb
xor
adc
push
sub
or
or
test
nop
scas
sbb
in
mov
aam
test
cmpsb
mov
sub
scas
pop
push
xor
add
adc
xchg
push
push
pusha
pusha
lods
add
subl
push
jmp
cmp
adc
jp
sbb
mov
popa
xor
dec
lahf
add
push
add
adc
mov
xor
push
sbb
shll
mov
mov
mov
jno
sti
sub
sub
sub
data16
movsb
addb
cs
push
jl
aas
xchg
add
mov
shlb
xchg
out
daa
orb
into
adc
cmp
pop
adc
or
sbb
std
movsl
clc
or
loopne
clc
adc
cmp
mov
add
mov
jne
jmp
push
sbb
mov
adc
mov
aaa
cmp
add
jmp
adc
shlb
mov
mov
pop
mov
adc
push
enter
add
add
dec
cmp
push
fadds
in
test
test
dec
cmpsb
xchg
adc
mov
movsl
push
orb
xor
iret
cmp
jg
cmp
pop
rcrl
cwtl
jmp
mov
xchg
dec
mov
add
fstpt
clc
mov
lret
add
adc
pop
test
in
cmp
js
jecxz
iret
sub
push
sub
mov
int
test
fimull
cmpsl
inc
scas
pop
pop
add
shr
push
push
adc
mov
add
mov
mov
sbb
xchg
cmp
mov
call
dec
pushf
mov
sub
test
adc
adc
xor
mov
iret
add
inc
aam
jmp
cs
data16
push
add
sub
out
int
ret
mov
cmp
rolb
fcoms
add
je
ljmp
mov
adc
adc
mov
outsl
and
xchg
sbb
pop
mov
push
cmp
pushf
adc
cmp
or
lcall
and
scas
rcr
ss
adc
cmp
mov
push
xchg
or
cmp
cmp
or
xor
add
jecxz
jne
mov
xchg
jns
add
jne
jnp
idivl
jb
rorl
cmpsb
push
xchg
cmp
shll
pop
pop
add
add
fwait
movsb
sbb
mov
or
lods
cmpb
push
movsb
jne
pop
cmpsl
jns
add
sbb
daa
and
ret
push
add
adc
in
dec
repz
out
fdivs
imul
pop
xor
rclb
decb
add
mov
xchg
add
inc
mov
stos
inc
push
mov
push
lods
imul
push
adc
sti
push
or
push
scas
sbb
jge
add
roll
adc
sub
mov
bound
insl
fimuls
add
aas
xchg
push
mov
jg
pop
sbb
push
gs
loope
mull
lods
test
js
pop
pop
adc
push
sub
or
jno
iret
lods
add
fldl
or
inc
mov
stc
rclb
imul
lods
push
test
mov
xchg
jae
add
mov
fs
fwait
mov
inc
xor
stos
aam
push
test
shlb
mov
mov
jge
jae
test
or
mul
rolb
sahf
add
pextrw
add
xor
sbb
cmp
adc
mov
js
pop
jl
cld
xor
enter
pop
js
negl
and
out
loopne
sbb
leave
jns
cmp
in
add
mov
jae
mov
out
and
mov
mov
adc
xchg
push
push
andl
mov
and
pop
cmp
push
adc
mov
lds
add
orl
mov
shr
push
les
cmp
xchg
or
imul
add
in
daa
jmp
mov
test
cmp
add
popf
xchg
or
add
cli
mov
lods
xchg
cmp
lahf
adc
cmp
and
mov
and
ds
adc
inc
add
inc
les
sub
in
mov
push
add
jl
adc
jno
push
adc
or
xor
adc
sbb
sbb
mov
rclb
jp
push
add
je
and
lock
mov
xor
add
inc
xchg
out
mov
push
das
and
mov
lock
or
rolb
and
out
cmp
dec
push
sbb
dec
mov
sti
inc
xchg
pop
inc
adc
pop
add
arpl
xor
mov
push
add
push
mov
inc
add
jecxz
mov
add
sbb
arpl
dec
addb
andb
xor
xchg
xchg
pushf
ret
outsb
stos
fists
lahf
call
fs
mov
pusha
adc
fs
adc
pop
lret
xor
subl
jns
mov
loope
nop
jbe
mov
pop
inc
fwait
sahf
mov
inc
push
adc
cltd
fldl
xchg
add
mov
xlat
adc
push
adc
loope
and
adc
xchg
cmpsb
shrl
add
adc
test
shll
ds
sbb
in
inc
adc
fcompl
sbb
mov
add
out
dec
or
arpl
cmp
and
add
xor
fsubrl
sub
mov
and
cwtl
lods
mov
fsubl
adc
add
push
cld
mov
dec
bnd
cmp
scas
fcomps
fwait
add
imul
test
mov
sbb
lods
js
loopne
sbb
add
add
push
popa
rorb
ret
test
ret
sbb
fwait
nop
sti
jb
dec
out
ljmp
sbb
pop
xadd
and
clc
push
and
push
mov
add
or
adc
fadds
sbb
sub
popf
int3
add
xchg
add
adc
fld
cli
xor
cwtl
or
popa
pop
sbbb
mov
lcall
adc
jo
popf
add
jne
or
and
pop
jmp
pusha
ret
mov
out
adc
nop
and
inc
rolb
aam
loopne
pushf
lea
lods
leave
jge
add
getsec
shrb
dec
add
xchg
adc
mov
push
loope
pop
popl
sahf
sbb
xchg
ja
cs
xchg
js
int
jnp
js
or
inc
inc
adc
xchg
fstps
or
shl
out
jp
or
inc
dec
mov
dec
mov
mov
repz
sub
sub
lea
test
repnz
outsl
lds
loope
add
inc
in
add
add
je
aas
movsl
nop
or
pop
shll
or
imul
add
jle
stc
sub
bound
dec
xchg
add
jp
push
mov
xor
popf
jmp
sub
adc
sub
fcomps
mov
xor
or
jle
jmp
jno
rcll
or
or
scas
int3
push
mov
shrb
adc
inc
cmp
shl
xchg
adc
sbb
mov
je
add
jge
mov
clc
mov
inc
mov
xchg
mov
add
jno
aam
xor
test
dec
add
out
add
fsubl
push
and
lcall
and
mov
and
inc
push
pop
mov
mov
inc
incl
bound
repz
pop
xchg
out
mov
mov
xor
cmpsb
add
dec
mov
add
jo
ret
add
call
sbb
fcomp
cmp
xchg
pushf
and
adc
jno
dec
xor
out
dec
xlat
and
test
mov
in
or
incb
dec
add
cmp
add
mov
mov
mov
jno
mov
adc
push
leave
adc
or
adc
je
adc
sbb
cmp
add
and
xor
call
movsl
add
roll
push
adc
jp
in
cwtl
jmp
push
fs
dec
mov
xchg
sbb
mov
add
sbb
stc
or
add
gs
or
jno
dec
jns
fcoms
out
shlb
add
cwtl
iret
sbb
push
movsl
mov
sub
push
xchg
out
aam
cmp
add
sbb
mov
pop
test
xor
add
notl
adc
insb
add
dec
xchg
mov
test
mov
mov
jg,pn
lock
dec
or
dec
add
icebp
in
test
rcrl
gs
int3
mov
lods
out
adc
push
cwtl
ret
mov
mov
int3
fwait
fs
jmp
jle
clc
fmull
std
or
dec
rcrb
pop
rcrb
pushf
aam
pop
das
jmp
stos
ds
cmp
scas
into
xchg
mov
in
push
addb
movsl
jns
add
sub
adcb
adc
xchg
push
and
pop
pop
mov
or
adcl
and
test
push
mov
or
mov
push
push
sbb
incb
push
mov
je
addr16
or
ja
mov
push
out
mov
mov
cwtl
mov
je
pop
cmp
dec
jmp
insb
pushf
xchg
adc
push
and
mov
pop
inc
idivl
cmp
std
arpl
sahf
rcrb
test
lcall
pop
xorb
out
repnz
fidivl
movq
popf
mov
push
add
xor
mov
dec
add
sub
clc
pop
sub
mov
andb
adc
cwtl
loopne
cmp
push
scas
adc
jecxz
lcall
outsl
mov
scas
cmpb
movsl
xchg
add
mov
sti
lcall
dec
add
repnz
mov
popf
xchg
add
pusha
fimull
int
add
jbe
add
inc
clc
cmp
mov
push
mov
adc
pusha
add
fsubr
xchg
adc
adc
mov
xor
inc
or
in
pop
add
jge
sbb
cmp
jmp
push
in
insb
mov
les
xorb
repz
rcr
subl
or
and
push
loope
add
dec
or
in
aad
pop
inc
and
jge
cmp
mov
inc
fistl
sbbb
aad
inc
mov
mov
js
dec
mov
add
cmpsl
repz
cmpsb
xchg
and
clc
inc
adc
dec
mov
pop
hlt
daa
add
dec
outsl
mov
mov
loope
dec
and
dec
mov
push
and
cmpb
movsl
mov
mov
call
dec
add
mull
add
add
lahf
inc
and
fisubs
out
fs
and
iret
in
mov
push
notb
pop
xor
pop
and
cwtl
testl
cmp
mov
mov
or
fimuls
lods
ror
lds
testl
pop
push
sahf
das
pop
cld
inc
pop
and
adc
push
cs
pop
lods
call
shlb
outsb
sub
fcoms
or
sub
sbb
int3
add
es
rcll
ljmp
mov
sbb
add
stc
fst
push
add
xchg
std
pop
addl
aam
or
imul
loope
dec
push
movsl
jb
adc
dec
std
sub
add
xchg
hlt
add
mov
ffree
stc
and
inc
test
jne
inc
xchg
cmp
add
enter
mov
xchg
lret
add
and
addb
js
cmp
hlt
fnstenv
loope
and
add
and
scas
sbb
mov
push
shlb
cmp
js
jno
and
mov
inc
lcall
cmpsb
es
bnd
mov
inc
pusha
xchg
in
add
scas
ja
jne
mov
into
adc
adc
dec
inc
out
fsubl
or
nop
js
dec
add
pusha
insl
add
fmul
test
loop
add
add
mov
cmp
mov
jge
xchg
cmpl
inc
adc
push
add
and
xor
js
sub
lods
enter
xchg
ljmp
call
ret
daa
push
mov
inc
xchg
and
adc
push
sbb
rol
in
popa
pop
sbb
adc
mov
movb
ret
leave
call
add
mov
or
sub
fs
xor
jb
incl
lea
add
ja
mov
sub
in
sbb
call
test
sub
pusha
fstpt
imul
sahf
xchg
add
pop
ficomps
add
mov
mov
mov
lds
cmp
scas
adc
cmp
adc
loope
adc
xchg
pop
sbb
adc
sbb
clc
or
insl
pushf
sbb
fmull
cwtl
mov
ja
mov
test
nop
or
in
add
xchg
mov
pop
cmp
adc
cld
sub
add
sbb
cltd
sbb
aaa
xchg
adc
mov
repnz
xor
pusha
and
sbb
cmpsl
orb
das
mov
dec
loopne
pushf
flds
pushl
stc
fdivrl
push
lock
lock
fs
fnstcw
inc
add
fisubs
loope
loope
inc
dec
xchg
push
push
stos
xchg
in
inc
jmp
jg
sub
arpl
sti
cwtl
add
jl
test
pop
fcomp
fiadds
mov
or
test
sub
arpl
enter
sbb
setg
xchg
insb
xchg
outsb
fmull
sar
out
or
mov
movl
fldl
add
jmp
mov
sub
bnd
push
rolb
insl
sbb
mov
pop
xor
fdivs
lock
stos
inc
push
outsl
pop
lock
cli
mov
pusha
and
call
jne
std
cmp
repz
and
jno
sbb
and
adc
mov
mov
mov
andl
mov
mov
mov
xchg
sahf
cmp
jae
pushf
mov
xchg
pushf
stos
pop
mov
inc
repnz
mov
andb
add
cs
adc
es
mov
or
mov
mov
push
ret
aam
mov
mov
and
nop
test
test
cmp
dec
cmp
pop
gs
jg
iret
lret
cmc
mov
pop
and
mov
pusha
scas
pop
and
pop
or
int3
xor
push
cmp
xchg
popa
mov
pop
mov
xchg
fwait
mov
push
pop
mov
fadds
inc
movsb
pop
inc
inc
lcall
adc
in
dec
stc
mov
jne
dec
sub
push
movb
lods
scas
mov
pop
and
pop
mov
ja
xchg
add
iret
clc
movsl
bndldx
adc
rol
fnsave
jle
cmp
test
mov
mov
sub
push
mov
inc
aad
pop
out
rcl
pusha
lock
mov
jp
pop
mov
or
fcoml
test
adc
xchg
int
cs
jns
mov
add
stc
loope
aad
fs
xchg
test
icebp
mov
adc
psllq
mov
out
jne
sub
sbb
aad
xchg
or
mov
outsb
mov
inc
mov
mov
test
dec
add
or
mov
dec
mov
dec
test
xor
inc
jmp
push
mov
or
fwait
or
lahf
nop
add
les
test
add
fstpl
aaa
jb
int
fbld
lcall
sbbb
mov
or
jg
test
xchg
divl
add
leave
mov
shlb
mov
mov
and
movsb
in
js
inc
mov
in
in
push
sbbb
fsts
add
push
into
jg
outsl
dec
and
pop
mov
mov
inc
cmpsb
scas
shll
pushf
lahf
add
ud2
jge
mov
xchg
push
movsl
cmpsb
push
test
dec
ret
and
int3
in
xchg
push
test
pop
fwait
push
add
add
stos
scas
nop
inc
mov
sub
das
add
imul
add
mov
add
adc
jne
aam
sub
mov
mov
cs
call
dec
in
cli
push
pushf
add
loopne,pn
aas
or
movl
xlat
add
and
ljmp
sub
shr
adc
and
push
jns
mov
jno
test
mov
idivl
push
push
adc
pop
and
les
popa
mov
loopne
enter
cmp
cmpb
xchg
ret
js
mov
jo
push
mov
pop
lock
pop
adc
or
mov
mov
fcmovnb
push
jl
xchg
add
mov
lds
rcrb
fimuls
pop
mov
mov
or
movsb
adc
xchg
add
data16
mov
outsb
insl
xor
mov
popf
rorl
pop
lret
mov
je
std
mov
jle
outsb
push
aaa
and
mov
je
sbb
lea
xor
mov
add
scas
loopne
in
push
subb
lock
outsl
fs
lds
adc
insb
cltd
pushf
je
xor
add
clc
dec
les
and
pop
mov
mov
xchg
and
jns
and
adc
xchg
adc
pop
add
cmp
fistps
mov
shlb
jg
pop
nop
or
mov
mov
lods
inc
and
nop
add
jmp
add
and
lock
jno
and
imul
and
hlt
mov
xchg
cld
jge
call
stc
xor
sub
xchg
pushf
pop
das
cmp
mov
lret
jne
mov
nop
dec
and
aas
and
adc
dec
test
lea
cmp
lea
mov
xchg
inc
imul
les
inc
sub
cld
bound
cs
mov
add
iret
adc
lahf
add
jne
fadd
aad
adc
mov
cld
xor
rol
xchg
dec
and
rcrb
mov
cmc
add
jb
ret
push
xor
pusha
je
mov
cmpsl
jbe
fwait
mov
adc
pushf
aad
push
sbbb
add
mov
negl
xchg
addr16
pop
mov
cmpsb
add
mov
hlt
inc
sub
in
add
cmp
fldt
test
add
imul
cmp
test
add
xor
mov
xchg
jns
sub
inc
lret
push
outsb
shlb
cmpsl
xchg
mov
fldenv
int3
and
divw
inc
mov
jb
push
pushf
adc
jbe
lods
clc
lcall
push
out
jg
cmpsb
mov
mov
jbe
add
sbb
movsl
xchg
and
pop
fs
shlb
pop
sahf
inc
sub
js
popf
inc
mov
add
and
mov
sbb
dec
out
rcrl
add
sbb
add
cmc
adc
aaa
rcr
xlat
test
mov
in
mov
xchg
add
jle
imul
mov
add
in
mov
pusha
imul
add
mov
movsl
mov
roll
in
cmp
or
lds
pop
xor
dec
inc
ja
push
sub
stc
mov
loop
dec
add
sub
sarb
add
xor
cwtl
push
pop
ror
and
xchg
sub
cltd
push
pop
ss
cmp
inc
mov
mov
movsl
pop
push
and
mov
dec
adcl
enter
gs
repnz
add
outsl
lods
or
xlat
xor
mov
mov
int3
add
xor
mov
movsb
and
fsub
test
cltd
test
in
iret
mov
xchg
lcall
incl
push
mov
rcrb
add
and
add
mov
jne
mov
in
inc
push
addr16
shrb
notl
inc
mov
repnz
les
sub
mov
sbb
test
or
sub
adc
xor
add
pop
addb
add
inc
aas
aaa
ret
push
cmp
call
fwait
and
xor
mov
nop
mov
inc
and
xor
mov
and
push
jmp
adc
mov
popf
les
pop
and
scas
orb
sbb
rcll
jb
and
mov
add
or
in
lods
jo,pn
movsl
add
ret
ds
push
pop
jle
mov
jno
mov
sub
icebp
faddl
and
adc
out
ja
cmp
stos
add
inc
sub
mov
sub
dec
adc
mov
adc
scas
add
fwait
pop
mov
add
fnsave
mov
insb
inc
inc
mov
jl
sbb
jp
orb
int
mov
adc
addr16
jecxz
dec
insb
or
mov
fs
sti
xchg
mov
int
data16
pop
dec
pop
sarl
push
cmpsb
cmpsl
nop
lock
jb
xchg
push
mov
mov
add
aaa
daa
ds
add
mov
sbb
jge
mov
pop
hlt
inc
push
dec
es
push
pop
xchg
add
sbb
push
sbb
mov
cmp
movb
pop
mov
add
inc
cwtl
pop
loopne
add
out
mov
movsb
or
cmpsl
jno
clc
pop
mov
adc
mov
cmp
es
sbb
and
js
adc
mov
stc
or
adc
mov
nop
pop
add
mov
rclb
mov
in
outsl
stos
mov
or
sub
nop
fldenv
fs
test
enter
mov
test
shrb
sbb
shl
stc
pushf
pop
push
scas
jge
sub
inc
int
lds
dec
jnp
sub
test
out
fsub
inc
push
test
dec
test
xchg
jno
cltd
mov
adc
xlat
add
int
insb
push
in
call
in
add
lock
mov
in
mov
inc
inc
jae
dec
mov
inc
push
mov
xchg
cmpsb
cmp
call
add
pusha
js
and
pop
movsl
mov
cmp
insb
pop
shlb
sarb
add
movsb
cwtl
or
sbb
insb
cwtl
ljmp
sbb
push
cmp
xchg
fcoml
jb
mov
xchg
mov
add
mov
mov
shlb
rcl
or
cwtl
inc
outsb
outsl
pop
and
mov
insb
push
jmp
mov
mov
sbb
add
sub
stc
jmp
popf
and
rorl
movsl
jae,pt
adc
mov
inc
leave
add
fcmovbe
lcall
ds
and
or
ljmp
fildl
push
push
repz
and
mov
dec
pop
push
leave
jo
rcrb
movsl
sub
mov
add
xchg
and
sub
scas
int
mov
pop
jbe
push
push
mov
add
hlt
add
push
loopne
mov
add
sbbl
in
shrb
jmp
mov
mov
xchg
lock
jp
pop
scas
mov
xchg
cli
mov
cmp
mov
pop
ficoms
sub
popf
mov
imul
jmp
fucom
sub
idiv
movsb
cmp
xorb
mov
add
nop
mov
call
push
xchg
loopne
test
loope
and
gs
xor
add
mov
test
cltd
pusha
daa
sbb
pop
mov
push
jb
pop
add
xchg
adc
add
cwtl
fsubp
sub
sbb
pop
pusha
lods
mov
cmp
adc
or
jb
push
cmpsl
int3
sbb
add
mov
pop
add
daa
loop
mov
subb
movsb
cmp
mov
orb
stc
inc
aad
pop
cli
add
roll
out
incb
mov
jmp
add
jne
sti
dec
mov
int
test
lods
xchg
sub
fsts
jle
xor
imul
dec
or
rcrl
sub
xlat
jge
sbb
js
add
sub
pop
decl
and
mov
pop
inc
mov
dec
lret
fsubrl
add
faddl
hlt
iret
insl
add
xchg
cmp
popf
stc
mov
aam
fimull
cwtl
dec
add
or
push
mov
sbb
popf
icebp
popa
mov
cmpsl
ss
cmp
loope
pushl
xor
int3
sbb
add
ret
pop
mov
dec
jno
inc
rolb
cmp
dec
push
pop
notb
sahf
test
xchg
movhps
mov
push
das
adc
call
andb
sub
jge
pop
lret
adc
xchg
mov
shlb
sub
adc
cmp
push
inc
add
imul
jl
addb
in
and
enter
inc
js
sbb
scas
aad
fs
add
ds
rolb
out
pop
in
cmpxchg
imul
push
flds
sub
and
cwtl
repnz
int3
fwait
aad
xor
xchg
mov
cltd
sbb
imul
xor
iret
movsl
daa
mov
bound
push
outsb
pop
dec
cwtl
fmuls
rcll
rcrb
lds
adc
and
in
enter
addb
push
dec
mov
movsl
sahf
mov
mov
sbb
divl
adc
fadds
movsb
push
xchg
xcrypt-ctr
cmpsl
fisttpll
xchg
inc
insb
call
shll
popa
rorb
movsl
shlb
rep
test
je
pop
mov
popf
push
stos
jns
pushf
adc
inc
movsb
adc
stc
pushf
cmp
repnz
push
pop
xor
jnp
scas
push
cmovle
mov
fstpl
and
in
or
and
and
mov
movsb
lock
cmpsb
out
add
sbb
sub
fsubl
add
xchg
xchg
cmp
push
or
int
les
mov
push
add
push
ret
or
cwtl
cltd
inc
mov
cmpsb
and
popf
mov
dec
int
fistps
dec
jno
sbb
inc
add
jb
jl
int
jge
pop
test
nop
jo
ljmp
ss
sub
lret
sbb
sub
cmc
or
pop
shlb
es
push
dec
push
mov
cli
faddl
stc
out
jnp
add
mov
pop
lock
cmp
fistl
sbb
out
inc
insl
cmp
xchg
loopne
mov
and
and
or
sbb
jns
sub
sbb
das
pop
dec
mov
xchg
add
fdivrl
lock
mov
nop
jae
insb
mov
loop
pusha
stos
mov
xor
les
stc
adc
sub
sbb
lods
dec
in
xor
in
jmp
push
push
inc
cmp
inc
fisubrs
inc
and
add
dec
pop
lret
push
mov
xor
pushf
popf
add
lret
xchg
and
shlb
xchg
mov
mov
stos
or
and
cmp
push
cmpsb
push
daa
sub
add
xor
fidivs
mov
sub
rcr
addr16
icebp
pop
mov
jl
adc
outsl
lret
call
movsb
or
adc
dec
ja
cmp
bswap
fs
data16
pop
jns
and
and
mov
sbb
loop
add
int
sbb
fwait
add
adc
dec
jo
mov
fldcw
add
cmp
or
push
fisttpll
cwtl
das
add
sti
and
fwait
mov
sbb
xchg
jne
jbe
sbb
mov
adc
add
ds
xchg
fwait
cmp
mov
inc
cmp
ss
sbb
enter
mov
movsb
cld
xchg
stos
add
test
jo
adc
jecxz
shlb
fidivs
dec
add
fmul
xchg
and
adc
mov
dec
pop
cmp
fwait
mov
bnd
fcomps
mov
nop
cld
out
fadds
cmp
rcll
or
test
xchg
cmp
mov
cmp
subb
xchg
and
imul
inc
cwtl
gs
inc
outsb
mov
lahf
les
sbb
roll
and
test
jmp
in
cmp
adc
movb
les
subb
push
push
add
scas
cmpl
xchg
in
bswap
hlt
add
add
addr16
out
and
or
scas
fisubl
pusha
adc
sub
push
inc
shlb
push
sbb
mov
add
mov
rolb
push
ja
sbb
cmc
into
sbb
sarb
add
dec
dec
pop
jo
into
push
sti
and
add
movsl
inc
xchg
nop
adc
js
stos
daa
or
add
pop
std
lods
test
or
sahf
push
movsb
mov
push
mov
inc
mov
xor
lock
test
loope
icebp
fidivs
je
cmpsb
xor
xchg
pop
dec
sahf
pop
xchg
cmp
movsl
divb
aaa
add
stos
test
xor
inc
add
or
movsl
pop
adc
lods
push
sbb
push
mov
in
ss
push
cmp
pop
fildl
push
xor
mov
test
and
testb
hlt
inc
mov
imul
cmp
mov
inc
rclb
das
hlt
push
jecxz
add
mov
sub
sub
sbb
jl
mov
sarl
in
mov
fdivs
rcll
cltd
fiaddl
push
cwtl
popf
xchg
ss
push
add
divl
stc
add
dec
cmp
add
call
mov
popl
xor
loop
cvtps2pi
jge
imul
loop
adc
les
sbb
loopne
aad
xchg
loopne
and
sbb
pop
mov
add
jl
xchg
dec
jae
rdmsr
jmp
add
jp
push
dec
pop
enter
fcomps
dec
bswap
mov
or
jo
and
lret
mov
jo
ret
popa
xchg
add
and
add
jno
xor
cli
adc
xchg
add
into
pop
test
cs
inc
jl
mov
sbb
movsl
mov
add
push
fs
or
mov
loop
cs
add
cli
mov
movsl
cmp
push
cmpl
in
popf
stos
popf
adc
jo
pop
lea
push
dec
nop
add
loope
sub
mov
inc
dec
ds
inc
sbb
xor
mov
cmpsb
test
inc
mov
stc
shll
insb
adc
lock
mov
jbe
js
sbbl
mov
rcrb
stos
mov
adc
loope
xchg
clc
lock
push
xor
sub
dec
ja
mov
mov
test
rep
sbb
and
adc
cmpsb
pop
pop
ret
sbb
pop
hlt
lods
inc
aam
loope
ficomps
jle
fadd
pusha
or
mov
sbb
push
pop
dec
xchg
mov
vpmadcswd
push
inc
cltd
les
sub
call
inc
js
ret
or
cli
sbb
pop
out
stc
aam
jo
push
lret
iret
xchg
in
push
cmc
dec
xchg
repz
aam
mov
lret
cmp
sbb
inc
mov
xor
xor
pop
inc
sarb
into
loop
mov
lock
adc
fcoms
ret
inc
inc
punpckldq
sbb
out
push
nop
cli
enter
icebp
add
sub
clc
pop
lcall
into
roll
ds
push
and
cmp
xor
cmp
push
xchg
xchg
xlat
ret
repz
loopne
mov
push
mov
loope
adc
stos
test
inc
cmp
inc
jb
pop
add
js
xchg
pop
jno
cmp
leave
push
arpl
fadd
inc
cmp
jno
add
mov
lcall
or
ljmp
sti
icebp
imul
add
mulb
push
inc
andb
jbe
in
add
mov
mov
mov
jbe
jmp
sub
and
mov
cmpsb
dec
push
push
add
jbe
jge
mov
pop
dec
inc
fiaddl
add
sbb
shlb
sahf
ds
pop
pop
adc
nop
inc
and
add
add
repz
push
test
insb
ds
inc
pop
js
cmpsl
jbe
mov
je
jns
in
or
icebp
in
cmp
push
fwait
test
add
ret
xchg
adc
fdivrs
bound
dec
add
mov
out
push
outsl
and
push
dec
adc
mov
adc
jecxz
mov
mov
pop
and
push
aaa
out
push
xor
adc
adc
add
lea
es
sbb
pop
add
sbb
push
test
jno
pop
sub
pusha
adc
movsb
inc
arpl
add
inc
dec
adc
adc
inc
pop
in
mov
cwtl
xor
jb
insl
and
jae
sub
out
ret
add
push
lock
sbb
adc
sbb
repz
add
rcrl
dec
pushl
add
jmp
mov
loope
and
jecxz
int3
loopne
cltd
push
pusha
pop
dec
in
or
fnsave
pusha
or
in
hlt
adcb
inc
add
push
add
adcl
add
jg
movlhps
std
scas
add
push
nop
mov
dec
adc
pusha
cwtl
imul
fdivp
in
addl
mulb
inc
add
xlat
cmpsl
test
and
dec
lea
add
loope
mov
into
ret
pop
lahf
mov
cmc
out
rcl
js
mov
ds
lret
push
add
movb
xor
jbe
add
push
add
dec
faddl
fstps
mov
in
mov
push
loopne
js
fadds
movsl
cmc
cmpsl
pop
call
pusha
xlat
jecxz
pusha
inc
add
insb
leave
xor
mov
mov
fstpl
icebp
aad
xchg
xor
or
and
leave
jp
pop
jp
jl
ror
aas
xor
fadd
dec
push
pop
hlt
hlt
popf
inc
pop
fidivrl
arpl
iret
inc
jo
or
xchg
testl
arpl
pop
cmpsl
mov
addl
add
push
fmull
fsubr
sub
mov
mov
enter
sub
fwait
mov
ret
lcall
fcomi
js
jno
js
orb
iret
movsl
cli
lds
or
cwtl
pushf
or
mov
push
jge
jl
pop
add
fidivs
and
cmp
add
dec
mov
lock
vcvtdq2ps
jg
sub
dec
xorb
dec
iret
dec
clc
mov
test
hlt
push
nop
sbb
cmc
cltd
lods
add
push
mov
es
aad
push
push
and
cld
out
out
mov
out
lock
push
jnp
sbb
scas
xchg
rcrl
testl
rcrb
dec
sbb
inc
repz
pop
inc
jl
repnz
fcomps
or
insb
push
cmp
inc
sub
sbb
bound
jne
mov
jl
pcmpgtb
pop
dec
ret
sbb
pusha
xor
cmpsb
pop
or
push
push
test
inc
lock
in
mov
inc
aas
pushl
mov
mov
lods
mov
push
add
dec
inc
sbb
add
inc
mov
mov
icebp
cmc
dec
movsb
mov
les
add
lods
mov
xlat
aas
outsb
mov
push
in
inc
add
mov
push
rolb
jg
call
aas
ds
or
les
add
or
loopne
insb
clc
enter
cmp
loope
xchg
aas
stos
shlb
mov
fadds
and
insl
out
mov
or
movl
push
repnz
inc
fsubl
push
or
pop
stos
or
int
loop
add
iret
es
fpatan
es
jnp
or
popf
cltd
mov
int
mov
cld
lahf
sbb
add
sbb
xchg
imul
outsl
jno
inc
adc
flds
repz
pop
and
or
inc
xchg
pop
cmp
dec
pop
shlb
push
xor
bound
test
fcoml
shll
orb
pop
xor
stc
mov
cmpsl
cld
testb
add
dec
imul
xor
enter
fsubr
adcl
xor
pop
out
insb
sbb
insl
cmp
shl
test
and
sahf
mov
js
pop
cmp
push
add
stc
cli
stc
dec
cmp
leave
xchg
inc
shrb
or
mov
fsubs
or
inc
mov
mov
cmpsb
jle
or
sarb
loopne
push
sbb
fs
dec
jle
pushf
jl,pt
xchg
add
lea
and
push
push
sub
pusha
lret
pop
xor
mov
cwtl
test
ret
js
xor
in
adc
inc
jl
sub
mov
ret
jne
jmp
ljmp
aaa
and
adc
repz
add
push
inc
xor
dec
mov
inc
add
cs
sub
pop
dec
pop
fsub
adcl
push
xchg
arpl
cmp
cmc
push
fisubrl
sbb
cltd
in
add
inc
jl
sahf
test
adcl
flds
jo
xchg
mov
and
lcall
xor
add
sub
pop
add
test
sub
stc
ss
ljmp
or
repz
mov
push
jecxz
loopne
sarl
enter
cld
cmp
add
and
sub
ret
cmp
imul
add
clc
inc
aas
addl
dec
pop
cmpsb
lods
xchg
mov
ds
add
adc
mov
mov
mov
int3
sbb
ss
icebp
xor
jno
orl
jns
push
xchg
inc
loopne
sarb
sbb
dec
inc
xchg
mov
xor
mov
pushf
addl
xor
inc
cmpsb
jns
and
mov
pop
icebp
addr16
push
add
movsl
xchg
add
stos
lods
imul
or
add
orl
xchg
xchg
scas
clc
mov
mov
push
sbb
mov
jb
in
push
push
inc
xor
adc
test
push
cli
loope
dec
adc
stos
jns
cwtl
xorl
cmpsl
dec
sbb
repz
pop
xchg
pop
jmp
mov
mov
arpl
push
in
pop
negl
mov
nop
stc
mov
xor
and
add
inc
movntq
out
ja
mov
mov
inc
cmpsl
adc
pusha
and
testb
dec
mov
sub
fisubs
mov
or
stc
pusha
bound
arpl
ss
mov
xor
mov
add
cltd
call
int3
sub
push
enter
loopne
pop
in
mov
cltd
rol
push
mov
add
sub
stc
jge
lods
dec
push
call
add
mov
scas
jle
push
sti
insl
fwait
nop
add
inc
inc
sbb
add
pop
fldl
dec
xor
cmp
mov
push
sub
or
xor
pop
jo
add
lret
aam
xchg
mov
lret
mov
imul
or
and
push
push
sbb
sbb
add
push
and
ljmp
add
add
rcrb
mov
dec
or
add
repz
dec
nop
xor
lcall
lds
dec
mov
shrb
xchg
xor
add
mov
add
push
std
mov
cmpb
or
add
cmpsb
lahf
into
mov
add
xor
out
mov
cmp
dec
cmp
adc
add
and
pusha
mov
cmp
fdivrs
mov
dec
or
sbb
xlat
divps
inc
inc
dec
dec
xchg
xchg
xchg
push
mov
shrd
mov
jnp
and
out
mov
cmc
orl
push
pop
sbb
test
xor
orb
add
inc
cmp
add
arpl
jbe
pushf
int3
hlt
push
jb
jbe
add
test
adc
loop
add
add
inc
mov
add
adc
dec
sub
jle
jl
add
cmp
jnp
add
dec
xor
xchg
lret
repz
mov
and
xchg
or
clc
push
add
mov
imul
xor
mov
roll
mov
xchg
inc
jbe
mov
adc
lcall
and
jae
dec
add
les
aam
sbb
jbe
push
mov
lea
ss
add
mov
push
pop
jb
ret
out
out
test
jne
dec
call
incl
fwait
aam
pusha
pop
lret
mov
dec
dec
or
orl
in
xchg
jno
and
loopne
mov
or
mov
addb
sbb
xchg
add
or
stos
mov
xor
and
incl
addb
xor
imul
mov
and
mov
inc
inc
push
xor
insb
pop
nop
inc
cmpl
or
test
sarb
lods
inc
cmp
enter
push
xor
mov
add
mov
jae
and
sub
lods
jecxz
xor
and
xchg
add
dec
cmp
movsb
hlt
add
sti
mov
rclb
cmp
aad
aam
fmuls
leave
clc
ret
fnstenv
and
aas
pop
or
and
js
sbb
pop
cmpb
mov
dec
out
lcall
cmp
cwtl
popf
shll
ljmp
pop
jle
sbbl
sbb
cli
push
leave
pushf
aam
add
push
cmp
adc
push
hlt
add
test
add
out
mov
push
jle
add
and
lods
xchg
xchg
nop
pop
add
mov
add
sub
and
inc
subb
mov
xchg
sti
add
popa
int3
das
push
les
insl
add
push
js
sub
jmp
xchg
mov
inc
cmp
in
or
mov
into
jb
add
cli
jl
add
xor
cwtl
test
clc
mov
xor
xchg
lods
xchg
xchg
mov
push
and
mov
cmp
mov
ret
add
mov
xor
mov
outsl
and
dec
cltd
mov
subb
xchg
push
les
stc
mov
inc
cmp
and
and
adc
jecxz
aam
mov
mov
pop
aad
cmpsb
mov
lods
xchg
rcrl
dec
mov
incl
out
xchg
cmpb
sub
pusha
out
sbb
pop
fnsave
test
orb
popf
pop
jns
scas
mov
or
loopne
sbb
dec
push
fimull
and
add
loopne
hlt
cmp
push
push
call
mov
add
add
out
add
lcall
bound
jmp
adc
and
xor
sub
inc
dec
pop
aaa
subb
push
inc
sarl
or
sbb
cmpsb
xor
cs
loop
jp
xchg
mov
pop
and
repnz
stos
fsts
rsqrtps
fs
pusha
inc
push
and
push
dec
cltd
shlb
int3
ss
cmp
mov
incb
mov
out
cmp
pop
xor
loop
pop
movsl
sbb
sbb
mov
add
mov
inc
jmp
dec
and
mov
cmp
mov
adc
and
cs
and
test
push
or
movsb
and
pop
jecxz
fwait
dec
add
mov
inc
xlat
push
xor
aaa
mov
adc
xchg
mov
cmp
aaa
insb
cmp
push
icebp
push
pop
jl
xchg
lcall
dec
xor
addr16
inc
sbb
rclb
pop
sbb
imul
and
push
aam
inc
rep
sbb
push
pop
les
sbb
out
sbb
mov
outsb
mov
lock
sbb
pop
inc
aaa
inc
add
pushf
call
jo
in
add
clc
xchg
jae
and
sub
xor
outsb
adc
notl
cmp
subl
je
push
push
sbb
ljmp
mov
cmpl
test
xor
jl
push
add
pushf
or
and
shl
sahf
pop
inc
sub
pop
sahf
push
mov
or
fmull
jno
outsb
cld
add
adc
popf
cwtl
add
pop
sbb
xor
sbbb
xchg
jecxz
les
add
cmp
xchg
mov
jp
in
sbbb
sub
fnstsw
mov
xchg
mov
mov
fcoml
into
xchg
loop
sbb
pop
xor
dec
mov
mov
pop
aam
jl
dec
inc
fmul
test
call
mov
push
pop
stos
xchg
sahf
push
or
add
push
sub
inc
loopne
xor
inc
lahf
push
addl
mov
hlt
adc
inc
pop
sub
lds
stos
add
std
fidivrl
in
bswap
repnz
xchg
jo
das
es
add
mov
mov
js
pop
shlb
roll
jle
faddp
xchg
int
add
xchg
repz
pop
mov
iret
push
cmpsb
add
adc
dec
cmp
dec
ret
dec
and
stos
addl
jge
xchg
add
rolb
frstor
or
call
or
rorb
scas
jmp
mov
nop
aas
in
hlt
inc
cmpsb
lods
mov
loop
mov
adc
popf
lods
mov
and
fs
dec
mov
dec
inc
sub
jp
jbe
sbb
cmp
pop
ret
mov
stos
pop
in
test
int3
fsubr
sbb
push
inc
inc
scas
pop
int3
cmp
jmp
sub
cld
test
mov
xor
dec
jg
sub
pop
add
and
or
xchg
dec
sub
dec
cmpsb
jmp
adc
std
and
cmp
subl
jmp
xor
lock
imul
and
inc
mov
insb
push
mov
mov
gs
add
or
mov
movb
loopne
sub
mov
js
add
lret
divb
or
pop
es
sub
inc
clc
imul
inc
addl
xchg
subl
add
out
cmc
push
cltd
ss
pop
xchg
mov
cmp
icebp
lods
add
pop
add
aas
inc
daa
lahf
ja
jle
or
and
push
cmp
pop
jl
adc
and
mov
mov
add
sahf
mov
inc
dec
or
or
sub
sahf
in
or
in
shrb
mov
inc
int3
or
js
pusha
pop
mov
jl
pop
sbb
add
shrb
cmp
lods
lods
filds
adc
mov
addl
mov
jae
add
push
mov
inc
push
cs
es
cmp
add
push
enter
and
or
inc
dec
adcb
cwtl
mov
xchg
popl
adc
mov
out
les
sub
and
ljmp
repz
and
in
and
adc
repnz
test
xchg
test
mov
dec
push
cmpsb
out
cmp
in
fimuls
sub
mov
inc
jl
dec
add
test
cwtl
insb
add
nop
pop
sbb
scas
xchg
xor
adc
inc
cld
xchg
mov
out
add
inc
lcall
xchg
sbbl
addr16
dec
xor
andl
insb
cmp
xor
adc
imul
ret
shlb
aas
push
ret
add
sub
cmp
lods
cmp
dec
xchg
mov
add
pop
inc
push
cmp
or
jae
dec
rclb
mov
mov
push
xchg
lret
add
add
movl
inc
dec
jp
fwait
aad
push
das
faddl
inc
xor
jge
xor
add
cld
arpl
test
icebp
jbe
sbb
xor
mov
cli
sbb
nop
mov
je
aam
push
int
dec
add
pusha
ret
scas
sbb
lock
leave
ret
lods
inc
jmp
movsb
sbb
sub
mov
psubsb
ljmp
xchg
and
push
add
fcoml
push
add
xor
jb
loopne
inc
aad
popa
sarb
jne
ss
fisttpll
xchg
xchg
mov
adc
lds
jle
mov
add
jmp
add
xor
subl
dec
inc
in
mov
jae
add
jp
fs
mov
xchg
inc
aas
jecxz
enter
stos
daa
shlb
imul
mov
dec
sub
aam
fsubl
add
out
outsl
adcb
mov
ds
pop
and
sbb
adc
or
dec
sub
loop
adc
lods
mov
shl
std
notb
scas
mov
dec
xchg
js
call
add
mov
cmp
and
sub
nop
or
loope
or
adc
adc
pusha
aam
jns
mov
add
push
les
fsubrl
cwtl
adcb
in
lret
or
xchg
and
or
sub
add
fwait
add
stos
popf
test
daa
idivb
push
and
pusha
pop
loopne
rcrb
pop
or
adc
add
sarl
and
or
adc
lcall
insl
add
xor
jge
out
push
aam
out
les
clc
scas
xchg
inc
dec
insb
sbb
shlb
dec
pop
sub
inc
sub
aam
mov
stc
push
sub
cmp
adc
add
inc
repnz
xchg
xchg
cs
dec
and
push
out
hlt
cld
xor
pop
lods
mov
add
pop
dec
pop
pop
sub
pushf
sub
and
iret
inc
in
dec
scas
lock
pop
outsl
jne
cld
xor
stc
insb
push
mov
adc
shll
jnp
es
lcall
add
inc
popa
add
inc
xchg
or
orb
lock
or
fmul
pop
ret
ror
fildl
cmpsl
lea
and
xchg
std
je
jnp
add
sbb
imul
push
xchg
repnz
nop
push
inc
xchg
pop
add
mov
or
test
outsb
adc
adc
repnz
scas
dec
pop
pop
and
rclb
sub
add
jae
sbb
xchg
mov
dec
idivb
out
jecxz
mov
pop
sub
lods
dec
mov
fs
pop
pushf
orb
add
xchg
mov
mov
inc
and
lock
shr
insb
fwait
idivl
pop
cld
jge
rol
push
sbb
push
mov
and
fiadds
and
mov
notb
cmpsb
pop
mov
mov
push
movsb
adc
xor
adc
loopne,pn
inc
cmpb
mov
xchg
push
cmp
mov
mov
mov
in
mov
jle
cmpsl
adcb
insl
mov
mov
arpl
push
pop
in
imul
loope
push
and
les
adc
mov
inc
das
jns
add
cmp
and
clc
push
out
test
das
mov
insl
shrb
inc
and
mov
pop
test
or
and
pop
test
push
dec
mov
dec
mov
jg
add
jns
mov
ljmp
add
add
cmp
jle
cmp
enter
iret
mov
adc
shlb
and
mov
dec
jae
pushf
adc
in
xor
jecxz
hlt
jg
sub
mov
nop
clc
add
mov
inc
xchg
in
movups
xor
lods
sahf
popa
imul
dec
or
mov
loopne
dec
mov
adc
fnstenv
cmp
xor
push
xor
dec
ja
mov
mov
add
lock
sbb
jge
adc
sbb
sub
and
sub
and
mov
orb
loopne
add
lods
mov
mov
lea
adc
fidivl
inc
pop
inc
sti
xchg
add
jmp
ljmp
mov
ret
pop
mov
pop
aam
jo
add
push
sti
test
mov
push
cld
enter
jl
bound
pop
mov
pop
push
inc
cmp
sub
test
fcoms
mov
xchg
add
clc
mov
mov
imul
or
hlt
jg
pop
jp
movsl
daa
adc
sbb
add
add
push
test
lea
pop
pop
maxps
data16
fsubr
loopne
push
jo
in
sub
push
mov
xlat
lds
pop
shl
addl
mov
push
cmp
fwait
lods
lods
cmp
enter
scas
test
xor
dec
xchg
loopne
inc
inc
mov
xchg
and
mov
xor
in
add
cli
push
adc
adc
in
movsb
inc
add
loopne
dec
sub
imul
mov
leave
insb
call
aad
ja
shrb
add
movsb
lea
pusha
adc
sarl
or
xchg
ja
xchg
loopne
sub
jns
mov
sub
sti
imul
das
adc
xchg
add
icebp
xor
add
xchg
cmpb
ret
daa
add
es
xor
xlat
mov
mov
nop
scas
add
push
cmp
nop
or
es
add
repz
mov
hlt
add
std
pop
ret
and
xor
adc
mov
add
jb
mov
ds
inc
dec
cwtl
push
xchg
xchg
in
inc
mov
loop
inc
push
leave
xchg
adc
pop
hlt
add
ficoms
adc
add
test
cmp
pop
call
cli
inc
add
xchg
pushf
icebp
add
inc
xor
sarb
adc
cltd
das
and
push
es
lea
and
cld
and
cmp
inc
aad
data16
pop
mov
add
push
cmpsb
push
or
jb
add
xchg
push
sar
add
inc
cmp
dec
shr
adc
shrl
daa
pop
nop
aad
jo
add
mov
pop
int
add
aaa
movsl
ja
std
subb
cmc
or
jns
mov
mov
scas
add
inc
fisttpl
inc
loopne
mov
insl
or
lods
xchg
and
shl
push
xor
or
push
aam
loope
push
pop
mov
lods
xchg
mov
mov
and
jmp
sbb
arpl
shlb
mov
xchg
lods
sahf
rolb
push
mov
xchg
add
cmp
movb
les
inc
fstpt
and
xlat
inc
inc
inc
cmp
sbb
mov
add
sub
lods
add
add
xchg
add
and
lods
pop
cwtl
movsb
rclb
stos
push
ds
cmc
nop
mov
or
add
push
lods
pop
mov
cltd
xor
fdivrl
arpl
lcall
adc
or
pop
adc
ja
mov
pop
dec
ret
shrl
add
xchg
inc
and
cmp
and
cmp
pushf
dec
repnz
and
and
loop
xchg
xchg
sub
and
lcall
xchg
dec
dec
enter
sub
mov
mov
and
js
and
ret
cmp
and
inc
test
repnz
add
mov
add
les
pop
push
or
rcrb
repnz
push
in
cmp
les
mov
cmpsl
imul
inc
shl
shll
xlat
push
inc
daa
and
xchg
les
and
data16
xchg
mov
cmp
test
stc
sbb
lds
push
je
insl
inc
xor
test
and
fldt
xor
stos
and
add
jl
test
add
leave
xorl
jle
movsb
call
scas
inc
aas
or
imull
sub
stos
stc
dec
and
inc
sbbb
lods
cli
lock
fildll
testb
mov
dec
inc
iret
in
mov
insl
add
cwtl
test
xchg
roll
mov
and
add
cmpb
pop
pop
add
test
add
daa
sub
pusha
clc
imul
in
cmpsl
mov
outsl
sub
mov
inc
pop
mov
js
mov
xchg
add
and
stc
lea
cmp
mov
rcll
cli
jle
and
je
rclb
into
dec
push
add
aas
ss
add
jnp
insb
xchg
inc
outsl
and
lock
cmp
mov
xor
adc
add
add
mov
les
js
nop
sub
push
lea
mov
adc
adc
jae
xchg
add
into
test
roll
mov
inc
or
sbb
xchg
inc
xchg
in
mov
aas
push
sbb
add
cmpsb
inc
orl
cwtl
cmp
rorl
pop
syscall
mov
stos
jae
or
or
xor
andb
movsb
mov
inc
xchg
pop
lahf
push
mov
add
in
andl
push
mov
stos
pushf
add
fstpl
in
mov
xchg
add
xchg
sbb
loop
jbe
popa
outsb
outsl
and
fwait
xchg
cmp
pusha
push
pop
mov
add
jecxz
cwtl
aam
inc
jae
lds
inc
insl
cmpsb
pop
or
imul
add
fld
sub
dec
hlt
loop
sub
cmp
push
mov
f2xm1
push
rolb
sbb
test
fsub
movsb
mov
push
pop
push
pop
mov
in
sbb
pop
jl
add
xchg
mov
lea
pop
push
das
jns
or
sbb
push
adc
and
fiaddl
cmpsb
ljmp
mov
inc
sbb
mov
pop
jl
add
pusha
in
sbbb
sub
or
rclb
pop
add
enter
arpl
cmp
insl
dec
or
cmp
rolb
or
addl
nop
aas
sub
subl
mov
js
pop
jp
xlat
add
insl
movsb
or
fadds
outsl
jl
lds
fdivrl
or
adc
in
sub
push
push
sub
ret
lret
imul
add
lods
fwait
inc
aas
dec
jecxz
or
and
mov
les
mov
sub
nop
lods
mov
cmpsb
test
arpl
adc
lea
or
es
jle
add
and
lcall
mov
shrl
inc
and
or
xchg
xor
add
mov
lock
xor
cmpsl
cbtw
adc
ja
and
lahf
lea
add
or
add
call
xor
xchg
jp
ficomps
into
xchg
cmp
loopne
add
cld
mov
pushf
sbb
add
dec
cltd
push
pop
lods
test
fwait
mov
add
jnp
add
icebp
sub
in
jl
test
inc
pop
and
ss
aas
mov
dec
pusha
dec
ljmp
dec
aad
pop
aam
push
add
pop
fdivrl
test
jns
pop
addr16
add
lock
fnsave
pushf
shl
sub
sti
outsl
xor
rolb
adc
dec
lods
add
lea
and
and
adc
adc
or
ss
jmp
pushf
ljmp
push
xchg
mov
jl
insb
dec
cmp
cmp
or
ljmp
mov
jmp
outsl
mov
adc
add
and
push
xchg
sub
pushf
pop
mov
inc
jge
lea
and
add
int
sbb
cld
enter
mov
les
dec
out
test
mov
outsl
push
push
rcr
dec
loopne
scas
aam
clc
add
fmull
add
and
addb
lods
fdivrs
ret
das
insb
push
sub
and
mov
jno
scas
lods
cmp
cmpsl
push
ds
adc
or
xchg
loop
rol
dec
push
hlt
add
nop
loopne
mov
dec
cmc
das
aas
loopne
cmp
add
pop
loopne
pushf
pop
nop
cwtl
xor
andb
repz
lahf
leave
vcvtsd2ss
cltd
pop
or
loop
cmp
pusha
add
mov
sub
es
loop
pop
pop
fistpl
das
adc
dec
mov
pop
test
imul
mov
mov
jg
add
cmp
orl
sbb
xor
lods
jns,pt
inc
add
test
sbb
adc
mov
xchg
add
cmpl
mov
jmp
add
les
fstps
cmp
adc
fisubrs
jo
icebp
int3
ja
nop
in
xor
sbb
stos
cld
mov
mov
cld
or
add
adc
mov
push
add
xchg
jp
and
add
mov
outsl
xchg
add
add
icebp
add
dec
lods
test
and
xchg
cmp
leave
fstps
or
pusha
mov
inc
or
add
shll
lods
add
xchg
dec
and
adc
nop
jl
inc
add
pop
pusha
adc
into
mov
iret
ljmp
xor
clc
xor
pop
lret
add
ja
mov
in
loop
test
sti
aam
lock
and
lods
adc
pop
aas
pop
mov
pop
xor
or
dec
mov
inc
popf
enter
lcall
enter
jle
push
mov
xchg
push
xchg
out
mov
call
jo
stos
xchg
push
pop
add
sbb
adc
les
in
adc
test
outsl
leave
pop
push
sbb
fs
and
add
sub
add
imul
je
lods
addr16
les
inc
pop
sbb
in
jnp
aad
fmull
adc
xchg
and
inc
sbb
ss
jo
in
popa
cmp
xchg
inc
adc
inc
or
lods
mov
ljmp
sbb
ret
inc
rorl
enter
jle
and
scas
sbb
xor
add
jns
aam
int3
sub
sub
cmp
push
insb
push
inc
xlat
jp
xor
and
fsubr
test
cmp
lds
mov
mov
adc
mov
movsl
cmp
add
ret
dec
shrl
das
test
mov
adc
mov
xchg
ljmp
jl
inc
punpckldq
in
adc
add
sub
in
daa
les
mov
cmpsl
push
xchg
and
jg
dec
pmaddwd
orb
mov
add
aaa
xchg
mov
clc
sbb
xor
inc
ja
loopne
xchg
mov
pop
xchg
add
cwtl
inc
adc
call
mov
mov
lods
jnp
aas
jne
sbb
mov
dec
xor
dec
xor
imul
data16
lock
push
mov
js
call
sbb
and
ret
je
lcall
setns
inc
cmp
pop
out
clc
push
xchg
leave
xchg
aad
push
add
loop
adc
or
es
test
popa
sub
sarl
jl
jl
add
mov
add
xor
out
dec
shrb
cli
mov
test
scas
clc
or
popa
js
and
cmp
inc
push
push
or
shl
fistps
les
or
fs
add
in
call
cmp
aad
das
idivb
jns
jge
mov
lock
push
push
out
inc
subb
jmp
push
mov
jno
add
mov
cld
loopne
add
xor
mov
pop
pusha
cld
add
out
add
int
popf
outsb
cmpsl
pop
add
les
mov
lods
xchg
out
lock
fdivrp
and
call
rol
mov
inc
fsubs
int
add
test
pop
xchg
xor
aaa
popf
add
negb
mov
add
jnp
mov
pop
shlb
cmpsb
cld
in
inc
ljmp
bound
cmp
and
adc
dec
or
dec
loop
and
push
addl
jno
pop
into
mov
loope
bound
xlat
outsb
mov
xchg
and
add
sbb
sahf
arpl
push
loopne
rorl
in
call
jp
rclb
push
xchg
mov
popf
rcr
push
or
hlt
xchg
lock
sub
call
and
cmp
and
lea
add
xchg
dec
mov
xchg
add
push
lea
jl
sub
jl
dec
ret
jecxz
scas
xor
cs
add
cltd
and
call
in
dec
mov
mov
int3
xor
enter
xorb
and
test
mov
mov
push
xor
hlt
sarl
add
mov
fwait
in
cmp
addb
movsb
sbb
dec
fs
xor
mov
add
adc
inc
dec
test
ret
pop
inc
sub
iret
test
leave
mov
pop
xor
jecxz
adc
and
test
mov
popa
xor
mov
dec
inc
sbb
shr
pop
add
xchg
mov
pop
or
dec
push
mov
rorl
dec
out
mov
icebp
add
sub
add
dec
push
shlb
stc
inc
in
test
mov
mov
adc
add
and
jl
test
sarb
lock
mov
mov
jo
inc
push
mov
add
movnti
enter
mov
mov
pop
lea
add
dec
mov
jecxz
jmp
sbb
rol
cmp
lea
lock
andb
adc
jp
fs
loopne
repz
push
cmc
or
or
add
pop
jl
sbb
mov
jbe
add
mov
movsb
add
setbe
lock
xchg
add
lds
mov
add
js
inc
jns
nop
add
xchg
pop
add
gs
mov
inc
jne
shrl
sbb
cld
sub
push
out
lods
cmp
add
rcrb
les
and
loop
jnp
je
and
and
adc
xchg
pop
jge
push
adc
cld
pusha
rcl
es
into
les
lret
rcrb
popf
rorl
dec
push
jmp
pop
mov
push
imul
mov
fadds
enter
push
cmp
cwtl
xchg
addl
mov
or
pop
sbb
test
mov
int3
rcl
sbb
and
adc
sarb
icebp
inc
mov
add
mov
sub
hlt
sbb
aaa
inc
loope
jecxz
rorb
add
stos
and
into
dec
sub
xor
stc
daa
pop
xor
push
dec
pop
push
xchg
leave
jae
jo
or
pop
pushf
bswap
icebp
or
in
mov
or
mov
dec
cmp
mull
mov
add
add
cs
shr
push
add
mov
lret
adc
je
sbb
cmc
cmp
add
jl
cs
xorb
jne
add
ficompl
mov
sub
xor
jns
push
push
mov
inc
movsl
lods
mov
faddl
dec
test
in
mov
lods
rcrb
leave
xor
sbb
int
push
popf
or
push
push
cmp
add
fnstcw
add
in
nop
into
in
xchg
adc
push
stos
mov
adc
mov
mov
enter
jmp
movsl
mov
shrl
and
or
and
das
and
or
hlt
in
xchg
aad
mov
push
pusha
fbld
fadds
mov
dec
mov
add
inc
pop
movsl
cmp
inc
mov
push
and
stc
ret
jl
mov
and
daa
sbb
leave
test
add
add
std
push
movsb
cmp
xchg
xor
add
clc
mov
mov
aad
mov
mov
dec
add
lahf
sti
ret
dec
repnz
icebp
ret
pop
jbe
push
or
and
xchg
pop
xchg
adc
and
xchg
shrb
iret
or
cld
push
outsl
push
mov
sub
js
leave
add
insl
cli
addr16
cmp
cmpsl
cltd
or
dec
add
in
sbb
add
add
arpl
mov
pusha
in
repnz
add
aam
movsl
mov
cltd
add
aas
add
pop
jmp
incl
xchg
test
cmc
add
dec
mov
ljmp
in
inc
das
jno
jle
add
pushf
aas
cmp
add
add
adc
or
add
loop
cmp
aas
or
pop
arpl
js
pop
pop
jns
dec
inc
pusha
pop
xor
mov
inc
add
cs
arpl
into
ret
in
jmp
add
adc
sbb
xchg
sbb
out
sbb
and
add
lahf
inc
clc
sub
popf
add
add
aas
jno
pop
fwait
dec
add
sbb
lret
repz
fiaddl
call
pop
inc
inc
lds
mov
mov
jle
add
and
cmp
lods
pop
dec
test
out
add
insl
or
inc
lds
jbe
dec
lret
stos
add
jecxz
int
mov
fiadds
dec
ljmp
add
stos
jle
inc
je
xor
sub
cld
or
push
fildl
imul
cli
mov
add
cmp
inc
add
dec
ret
jo
sahf
add
dec
femms
mov
jmp
test
or
mov
add
das
cmp
lret
repz
xchg
cmp
mov
pop
les
add
pop
in
jne
or
out
pop
push
jl
rcr
es
or
or
int3
push
pusha
add
mov
mov
add
sbb
cltd
out
test
lock
push
mov
clc
jno
nop
movsb
add
cmp
xlat
jbe
push
lret
or
pusha
int
movsb
add
popa
pop
mov
xchg
add
pop
movsb
lcall
push
pop
add
stos
adc
cmp
mov
sub
nop
jl
add
imul
mov
or
sarb
js
inc
hlt
xchg
pusha
lock
cmp
cmp
add
aas
pop
subl
jecxz
xor
ret
mov
fisubrs
jecxz
je
insl
leave
dec
outsl
inc
add
sub
jb
repz
xlat
lea
in
orl
subb
or
iret
xor
inc
imul
jecxz
sbb
mov
scas
sbb
leave
flds
push
or
dec
je
fimuls
rolb
cmp
fcompl
adc
add
mov
adc
sbb
sbb
inc
and
out
inc
or
add
dec
ret
push
add
pop
shr
jmp
icebp
push
xor
and
add
xor
xor
mov
add
xchg
mov
in
add
pop
aas
cmp
addb
or
sbb
jle
pusha
scas
sub
fstpt
pop
arpl
ficoms
sbb
lock
add
inc
or
jle
add
mov
xchg
or
cli
cmpl
xorb
xor
add
aam
mov
mov
popf
rol
add
lods
gs
sub
cld
add
mov
jmp
xor
dec
pop
sub
pusha
pop
fdivrs
icebp
add
shlb
loop
inc
es
lds
mov
xchg
sub
repz
incl
cltd
pop
inc
xchg
mov
xchg
push
fiadds
rorb
sub
inc
mov
xlat
or
jnp
jl
mov
repnz
daa
dec
push
add
mov
add
fisubl
inc
dec
push
add
hlt
add
pop
cmp
es
ds
xchg
xor
rcr
outsl
shlb
fdivs
cld
loopne
ret
hlt
dec
add
movsl
jne
icebp
stos
and
add
je
cld
push
add
fxch
pop
pop
sub
adc
les
sti
cmp
adc
dec
call
xchg
int
adc
in
js
fildl
stos
lahf
inc
out
jmp
aaa
adc
outsb
adc
push
mov
rolb
add
imul
cltd
insb
orl
cmp
mov
mov
popa
or
xchg
and
jo
stc
add
sbb
xchg
std
cmp
orl
cmp
stc
or
out
aas
mov
inc
out
sbb
arpl
mov
add
pop
mov
push
mov
xor
adc
mov
push
repz
jae
jle
cltd
lcall
je
xchg
lods
pushf
lock
adc
adc
xchg
add
mov
rcrb
pop
stos
pop
idivb
aas
data16
xor
ds
pop
cli
xlat
jne
and
movsl
loopne
pop
test
push
movsb
cld
mov
inc
lea
into
xor
cmp
scas
test
and
fmuls
jp
add
jmp
adc
jns
filds
add
push
and
add
inc
imul
in
orb
jnp
inc
call
add
pop
fsubs
mov
jno
sahf
inc
popa
add
jns
stc
add
cs
mov
aam
dec
xchg
cmc
mov
es
xchg
out
cmp
inc
adc
add
cwtl
sbb
xchg
mov
arpl
rorl
sub
xchg
or
inc
rorb
ds
add
in
leave
icebp
mov
lock
inc
dec
cmp
push
pop
push
jns
popf
sub
xor
call
int3
add
cli
or
jg
push
addr16
mov
add
xchg
add
inc
negl
mov
or
popa
push
push
imul
fldenv
cmpsl
xor
jo
mov
xchg
orl
dec
gs
std
in
cmp
mov
addb
loope
aas
lret
sub
or
and
xchg
pusha
adc
js
lret
add
add
xchg
adc
add
sbb
pop
adc
les
xchg
mov
shrb
add
sti
int3
cmp
xchg
inc
das
xorb
iret
jbe
mov
lds
insl
out
mov
push
clc
lock
jnp
add
pop
lds
cmp
pop
cld
fs
adc
imul
cmp
mov
add
scas
cmp
and
sub
das
sbb
lret
mov
in
pop
add
fistl
jecxz
shlb
mov
std
sub
cmp
addl
xchg
inc
movsl
lcall
adc
test
in
add
pop
roll
sbb
mov
sbb
sbb
mov
jl
sub
repnz
add
pushf
cwtl
push
cmpsl
rorb
xlat
add
addr16
scas
mov
mov
cmp
in
ret
push
loop
sub
mov
push
aad
mov
push
push
pop
dec
mov
addb
or
adc
push
add
xlat
mov
loope
or
mov
add
andl
add
hlt
inc
pop
xchg
mov
fwait
lea
lds
sub
adc
add
daa
popf
dec
test
inc
jb
xor
mov
test
shrl
add
push
or
add
sbb
outsb
aad
pop
push
xchg
pop
jp
jg
pop
mov
xor
out
movsb
jle
jg
add
jmp
jl
add
loopne
cmp
js
dec
scas
sub
pop
add
into
rolb
lahf
out
pop
aas
pusha
inc
mov
popf
jg
in
sbb
push
add
out
push
mov
pop
pusha
xchg
mov
jo
fstpl
dec
adc
cmp
add
mov
adc
pop
add
mov
cmp
or
cwtl
mov
add
adc
pop
add
fcmovu
lock
add
jae
xor
in
jle
add
loop
jnp
xorb
jbe
out
xchg
jmp
add
inc
add
insb
xchg
cwtl
add
mov
dec
ret
add
sub
cmp
mov
xor
out
loope
fadd
xor
jno
add
dec
rcr
mov
jmp
insb
push
into
xor
mov
and
dec
fs
pop
mov
adc
fldenv
and
xchg
and
push
cmp
mov
orl
ljmp
out
cli
shrb
lea
inc
arpl
nop
in
xchg
sub
dec
add
add
shlb
add
sbb
xchg
dec
mov
xor
jno
adc
cmp
mov
jl
xchg
mov
dec
mov
dec
repz
pop
pop
or
pop
cs
inc
pop
push
jg
rol
mov
mov
rcrb
fsubp
and
push
hlt
or
push
xchg
push
jp
pop
sbbb
lcall
mov
stos
push
loop
lods
call
push
ja
add
adc
popf
in
add
cmp
test
aad
cmpsb
add
jno
add
loope
inc
mov
add
cli
mov
loop
inc
jo
add
mov
xchg
push
add
fiaddl
inc
inc
scas
inc
mov
add
push
sub
jns
enter
int3
lods
ret
adc
xchg
rcrb
dec
add
xchg
xchg
mov
add
pop
xchg
lds
adc
jmp
and
sbb
insl
fnstenv
sbbb
add
sbb
aas
dec
test
lret
xor
sbb
insl
add
rol
add
ficoml
pop
mov
and
fadds
cmp
test
mov
scas
addr16
and
pop
mov
sub
add
cld
es
pop
cmp
pushaw
rolb
mov
ja
rclb
sub
xchg
mov
push
sub
stos
in
cmp
ja
mov
mov
addb
xor
loopne
xor
sbb
jo
sbb
adc
cwtl
add
sbb
dec
mov
aas
pusha
dec
lret
sub
out
pop
add
fsub
outsb
xchg
in
lock
fcoml
mov
out
aad
sub
stos
inc
les
bnd
mov
in
sub
jmp
test
xor
push
or
subb
repnz
jp
xor
es
iret
or
fidivrl
mov
jl
cmp
les
add
rorl
aam
test
les
js
sub
adc
cld
xor
sub
jne
enter
mov
push
add
lock
xor
loopne
inc
stc
add
add
add
dec
xchg
je
mov
pop
cmp
jb
cld
insl
dec
add
add
je
pusha
mov
imul
mov
ss
or
add
test
pop
jecxz
arpl
or
lret
add
aad
mov
jo
jmp
mov
sahf
add
xchg
cmp
push
lret
add
xchg
aad
rol
movsl
sti
add
loop
bndstx
hlt
jle
pop
jge
inc
adc
xchg
sbb
cmpsl
add
xor
add
mov
xchg
add
pop
jnp
je
rolb
scas
jmp
xchg
inc
and
push
rolb
and
push
pcmpeqb
das
pusha
in
imul
add
dec
or
cmp
es
js
iret
inc
sbb
pop
ja
mov
pop
mov
das
shl
mov
add
stos
push
jns
inc
mov
notb
add
xor
sarl
jp
add
out
pop
add
shl
adc
xor
addps
cmpsb
movsl
mov
inc
mov
pop
xchg
xchg
dec
lods
push
mov
add
je
push
mov
gs
pushf
es
jo
repz
push
pusha
sbbl
aad
enter
add
imul
sub
in
jns
inc
cmp
sbb
push
jno
pop
push
out
xor
pop
test
ret
xor
cs
and
gs
add
fwait
out
adc
js
aam
add
or
xchg
pop
nop
cmpsb
sbb
add
filds
jns
cmp
fcom
ss
dec
or
aam
add
jbe
jmp
or
aas
test
mov
rcrb
pop
add
lea
or
testl
in
xor
ret
out
pusha
or
int3
cwtl
push
jbe
sbb
jnp
mov
int
stos
lods
cld
cmp
xchg
add
test
aam
mov
pop
adc
jb
xchg
in
roll
cltd
insb
pusha
ret
pusha
add
add
and
cltd
jp
add
cmp
and
jl
add
xor
pusha
les
pshufw
sarl
inc
add
and
add
daa
mov
or
add
test
ficompl
cmp
cmp
repz
arpl
cld
je
add
ret
loopne
lds
add
std
inc
mov
jne
imul
cltd
add
xchg
jl
fimuls
cmp
mov
xchg
jp
add
push
ret
mov
add
add
sub
dec
xor
fnstsw
or
and
loopne
out
ds
pop
push
nop
loope
icebp
add
pextrw
add
repz
xor
sbb
mov
sbb
fisttpll
xor
jno
cli
sub
rolb
data16
pop
lea
out
adc
jmp
push
aas
mov
pop
xlat
pop
push
jbe
pop
pusha
mov
and
mov
xor
jno
add
test
orb
adc
pop
jne
jo
and
pop
xchg
sub
cmp
jno
loope
ret
cmpsl
movsbl
rcrb
xchg
add
inc
movb
mov
sub
mov
pop
ret
cli
lods
xchg
ss
bswap
cmp
adc
mov
inc
add
cmc
pop
push
stos
leave
push
xchg
or
cs
jbe
nop
cltd
mov
cmp
dec
jno
out
or
sub
xor
imul
sub
call
xor
inc
pop
aad
ja
in
inc
inc
adc
cmpb
sahf
call
out
pusha
and
call
int
adc
in
roll
out
arpl
cmp
xchg
movsl
xor
push
out
mov
or
cmpsl
fldenv
add
stc
fwait
bound
sahf
lods
add
popa
mov
dec
dec
outsl
inc
xchg
cmp
cmp
mov
pop
sti
mov
arpl
adc
ljmp
in
push
jae
push
ret
hlt
out
testb
jmp
out
mov
jb
std
sbb
add
mov
repz
pusha
rorl
insl
popa
mov
rolb
inc
mov
mov
test
mov
push
dec
roll
inc
mov
xor
rcrb
dec
js
cmp
or
nop
xchg
inc
add
adc
add
scas
cmp
and
add
pop
je
jnp
shlb
outsl
sub
orl
or
inc
dec
or
inc
fdivl
adc
gs
adc
mov
sub
or
fsubrs
cmp
jae
fxch
mov
imul
call
sbb
fs
push
or
xor
inc
xchg
adc
stos
push
xchg
push
xchg
xchg
and
aas
xorb
pop
je
sbb
inc
pop
mov
push
xlat
enter
mov
inc
mov
insb
mov
in
sbb
or
test
adc
repz
in
rclb
inc
xchg
addl
fdivs
mov
pop
push
dec
and
ja
mov
iret
or
notb
leave
cwtl
xchg
mov
arpl
lods
js
pop
xchg
adc
int3
fnstsw
pop
mov
and
sbb
mov
add
xor
js
mov
sar
mov
rcrl
pop
mov
mov
or
sbb
scas
cmpsb
jmp
lret
nop
inc
sub
add
xchg
or
fwait
scas
stos
je
sbb
add
frstpm(287
or
cmpsl
fdivrl
and
push
xchg
hlt
lahf
mov
in
mov
dec
mov
pop
dec
subl
cwtl
or
mov
add
jo
dec
cli
stos
and
insl
xor
push
enter
inc
aaa
cmpb
fsts
pop
and
sbb
in
or
xor
adc
fnstsw
dec
aaa
into
or
and
pusha
pop
bound
add
subb
in
cmp
sbb
xchg
pop
mov
or
nop
and
jle
and
jns
sbbl
adc
leave
inc
jge
stos
jbe
inc
sub
ja
add
movb
icebp
repnz
mov
lods
xchg
sub
out
pop
aaa
lea
mov
xchg
jb
add
mov
jmp
add
mov
jnp
ljmp
or
filds
orl
into
sub
test
in
sub
cmp
mov
mov
stc
add
push
xor
add
int3
sub
add
cltd
push
out
fists
lret
sbb
pushf
inc
call
js
outsb
jbe
je
mov
adc
sbb
mov
adc
add
les
mov
pop
lcall
sub
mov
or
mov
xchg
ret
sub
jo
sub
or
inc
mov
mov
push
and
and
and
push
ja
aam
rcll
fs
mov
in
dec
int3
add
in
lods
push
xchg
dec
lcall
adc
cs
add
cmp
jge
add
cmp
sahf
ret
jae
add
dec
pusha
gs
es
cs
nop
insl
lock
loop
sub
push
jae
test
aaa
scas
sbb
push
cmp
xor
or
push
add
xlat
jo
add
ds
shl
aas
lods
mov
out
insl
add
jle
jbe
cli
push
and
sbb
push
cmp
aaa
or
lds
pop
mov
xorl
int
cmp
jp
popa
scas
ret
inc
xor
notb
add
out
cltd
icebp
cmp
aas
orb
adc
add
aam
ret
jmp
in
jp
lret
jb
push
es
outsl
add
outsb
mov
cs
add
stos
mov
xor
mov
lcall
cs
popa
out
scas
cmp
cmp
sbbb
cmp
pushf
jb
xchg
or
jbe
addr16
mov
sarb
pop
pop
icebp
pop
ror
adc
push
pop
jno
jge
jmp
push
add
push
int3
cld
nop
and
push
or
add
dec
mov
or
add
lahf
xchg
imul
call
aas
add
and
es
or
daa
sub
push
dec
push
inc
add
lret
xchg
movb
add
sbb
mov
mull
inc
dec
sbb
and
scas
or
push
inc
push
pushf
sub
divl
imul
sub
push
sbb
push
fsub
inc
clc
dec
jmp
aad
pop
enter
sbb
inc
sub
iret
mov
or
pop
js
loopne
add
arpl
add
adc
and
fildll
shll
dec
or
push
or
adc
add
insl
loop
cld
push
inc
sub
ds
push
loope
and
jle,pn
mov
cmp
mov
xor
pshufw
mov
out
sbb
out
dec
mov
add
jge
scas
lcall
mov
jns
inc
and
dec
hlt
push
sbb
cmp
mov
or
push
popa
or
repz
fcoms
add
mov
mov
orb
mov
dec
into
push
mov
repnz
test
test
ja
lahf
push
adc
andb
pushf
sbb
add
push
stos
repnz
and
cmp
add
or
aad
insb
pop
out
fdivs
pop
hlt
push
add
or
and
js
jnp
mov
jl
das
dec
xor
lods
aaa
push
sub
xchg
lret
add
pop
add
and
jecxz
pusha
lods
mov
mov
xor
mov
add
push
fiaddl
das
add
sub
add
pop
lock
dec
jg
movsb
add
pusha
xchg
lcall
rol
add
aad
xchg
push
mov
arpl
psubw
add
je
and
movl
add
xor
push
cld
stos
inc
sti
enter
int
loopne
xchg
add
insl
ficoms
jg
into
aad
mov
mov
add
add
lock
cmp
pushf
xchg
pop
dec
test
call
ja
or
lret
push
push
divb
lcall
add
mov
lea
sahf
loopne
inc
add
dec
inc
mov
dec
imul
dec
add
cltd
test
shlb
pop
cld
lahf
in
mov
lods
push
and
jmp
sbb
ss
subb
dec
add
inc
arpl
les
adc
dec
mov
mov
test
mov
js
add
test
loopne
add
dec
inc
or
xor
subl
pop
hlt
xchg
add
push
andb
mov
push
andb
jg
sbb
dec
pop
insb
cmp
sar
fidivs
add
and
loope
inc
cli
into
add
sub
add
insl
mov
test
push
mov
hlt
xor
les
cwtl
cwtl
add
lahf
or
add
adc
pop
fadd
mov
jp
xor
aaa
push
fistps
out
sbb
lea
dec
jo
pop
and
xchg
sbb
dec
outsl
cmpsb
and
adc
jmp
dec
fstpt
push
mov
xchg
out
adc
mov
jb
in
aam
in
pusha
add
cli
insb
jmp
cltd
xchg
inc
add
mov
xchg
sbb
push
or
sub
jle
add
sbb
cmp
imul
sbb
push
inc
xchg
jb
add
test
mov
add
arpl
stc
jmp
and
sti
mov
in
pop
xchg
mov
pop
stc
cli
cmpsb
cwtl
xchg
cmp
pop
mov
mov
lock
cwtl
les
testb
push
cmp
mov
cld
dec
daa
add
loop
lcall
sub
adc
scas
xchg
pop
jno
mov
std
mov
mov
leave
int3
xor
shrb
pusha
hlt
fadd
push
jecxz
sbb
inc
and
jnp,pn
or
mov
cmpsb
out
add
jbe
pushf
into
bound
pop
clc
sub
adc
clc
cmpb
push
pop
mov
mov
xchg
mov
pop
add
movsb
or
push
sbb
into
loopne
pop
jo
adc
xchg
testb
popf
orb
mov
hlt
iret
add
inc
adc
jg
lret
inc
sub
xchg
and
idivb
add
jnp
inc
lea
call
and
pop
hlt
xchg
outsl
fsub
dec
cmpb
xor
lret
jge
shrb
add
push
out
repz
xchg
dec
mov
gs
mov
cwtl
push
add
pusha
push
jno
shlb
add
test
idivl
add
mov
scas
add
ss
clc
jp
sbb
movsb
into
sbb
adc
adc
push
pop
ljmp
insl
or
imul
pop
push
ret
mov
or
push
dec
out
inc
leave
pushf
stos
subl
add
adc
jno
dec
and
popf
es
xchg
jle
cmpl
rol
scas
dec
dec
add
adc
add
imul
push
jae
add
jo
sbb
in
ds
icebp
aas
or
pop
les
cwtl
fstl
dec
add
sti
push
and
inc
addb
int3
mov
lcall
mov
test
lods
pop
adc
repz
aad
sub
add
add
call
movb
push
jle
add
outsl
jo
loop
dec
adc
lods
ret
shlb
lahf
push
add
xor
sbb
add
insl
int
jge
mov
add
pop
aaa
divl
loop
and
inc
inc
cmc
in
cwtl
add
jnp
add
cmpsl
mov
in
mov
dec
or
dec
pop
pushf
test
sub
mov
sbb
sbb
insb
sub
add
sbb
sub
pop
ds
aam
xor
stc
mov
pop
cmp
and
add
push
adc
out
sbb
inc
mov
xchg
into
mov
xchg
mov
add
cmp
add
imul
push
lods
imul
add
mov
cmp
rolb
mov
push
dec
jo
add
sub
xchg
cmp
insl
in
mov
sti
or
mulb
dec
ljmp
nop
pushf
cli
push
test
pop
ret
mov
inc
repz
push
pop
or
sahf
jmp
ret
add
pop
or
loopne
sbb
pop
nop
hlt
add
scas
mov
cwtl
fwait
cwtl
fcompl
cmp
test
stc
nop
cmp
mov
mov
test
lods
les
pop
add
push
adc
dec
and
xchg
das
nop
in
mov
lret
int
add
fisubl
add
pushf
xor
xchg
add
sbb
mov
and
push
negl
sbb
mov
lds
addl
lods
add
xor
jp
and
test
imul
dec
sbb
sarl
jne
int
andb
or
pusha
mov
adc
pop
mov
ljmp
cmp
inc
fisubs
add
je
cmp
cltd
push
xchg
mov
repz
xchg
insl
mov
js
dec
adc
add
xorb
lock
add
inc
cmpl
add
sbb
mov
adc
pop
add
mov
push
aaa
add
jae
outsl
adc
pop
add
les
aad
jno
fists
add
subl
out
mov
cmp
fiaddl
ljmp
jns
nop
push
add
xchg
mov
pusha
push
outsl
push
adc
add
loopne
ret
push
or
cs
lds
cmp
loope
pusha
xchg
xchg
or
insl
roll
mov
dec
notl
sbb
pop
inc
fnsave
rep
jae
jp
cmp
push
push
daa
dec
pusha
cmc
loopne
dec
mov
aam
or
mov
pop
pusha
add
pusha
jmp
out
jp
mov
inc
xchg
xchg
xchg
add
fisttpll
add
cs
cli
add
sbb
ret
jae
subb
jle
fiaddl
jns
push
fistl
hlt
addr16
mov
cwtl
dec
adcb
inc
jecxz
out
aad
or
inc
out
and
into
mulb
mov
add
mov
adc
jmp
pusha
lret
jg
out
cld
xchg
mov
andb
push
adc
add
fsubrs
mov
xchg
lock
add
sub
sbb
xchg
jle,pn
icebp
je
push
pusha
lds
sbb
jne
cmp
pop
addl
mov
jg
mov
xor
adc
add
mov
popa
cmc
jnp
movsb
stos
das
fwait
sbb
jl
xchg
fdivrs
mov
add
stos
dec
cld
mov
fwait
mov
add
repnz
lods
sub
pop
xlat
je
daa
inc
xchg
in
ffreep
mov
sbbb
out
jne
movsl
mov
sbb
mov
add
int3
push
pop
and
ja
fcoms
jo
popa
adc
add
pause
xchg
out
inc
mov
mov
pop
sub
mov
into
mov
js
loopne
xchg
or
in
fld
scas
subb
push
pop
dec
lods
add
mov
pop
into
in
and
scas
imul
mov
pop
in
push
add
aam
pop
mov
push
leave
aam
imul
add
add
add
dec
jb
iret
mov
jp
push
rorb
ret
mov
loope
add
fstpl
mov
mov
and
test
push
popa
add
jb
test
xor
rcrb
mov
pop
mov
sbb
xchg
mov
sbb
stc
mov
push
add
lahf
js
loop
nop
es
and
imul
mov
daa
jle
push
aas
mov
pop
ret
js
push
std
data16
bound
cli
fiadds
cld
push
icebp
or
pop
stos
stc
and
jbe
out
les
rolb
cmp
dec
add
cwtl
push
jae
push
popa
pop
add
stos
mov
xchg
pushf
inc
xchg
test
movsb
in
js
dec
and
and
scas
adc
dec
or
inc
dec
cmp
add
clc
jno
jo
inc
cmp
subps
pop
cltd
jge
add
rcr
dec
mov
push
jmp
mov
sbb
scas
add
icebp
fwait
pop
imul
and
push
les
sarb
shlb
adc
repnz
or
iret
add
cld
add
arpl
cmpsb
add
sbb
and
aam
pop
add
jecxz
pop
xchg
dec
add
push
jecxz
or
mov
sub
test
push
sti
push
fmul
or
xlat
adc
inc
cmpb
inc
mov
inc
scas
loopne
jno
dec
iret
sbb
xor
jbe
sub
dec
fimull
js
sub
pusha
or
or
lret
and
std
test
pop
push
or
xor
shl
jno
pop
loopne
or
mov
rorb
aas
test
cli
add
jmp
inc
xchg
out
clc
std
inc
filds
jle
lods
aam
sahf
adc
cmp
fnstcw
int
shlb
and
or
test
and
cmpb
imul
xor
mov
jo
movsl
add
adc
or
pop
xchg
call
imul
sbb
popw
push
add
sahf
mov
inc
or
aam
aaa
jo
pop
add
pushf
pop
jmp
adc
arpl
sbb
add
or
sbbb
lock
fdivrs
or
xor
movd
imul
js
adc
adc
sbb
movsl
bound
dec
daa
add
ret
add
pop
out
cmp
sbb
or
xlat
mov
push
or
push
pusha
cli
inc
loope
leave
add
xchg
adc
push
in
rolb
inc
add
mov
cmc
jg
jo
punpcklbw
inc
movl
rorb
notl
nop
mov
sbb
mov
mov
add
push
movsl
vmptrld
shll
jne
cmp
ja
jnp
popa
hlt
or
loop
add
or
adc
xchg
addb
test
jbe
loope
push
add
out
add
test
xor
aam
xor
outsl
sbb
sbb
jp
stos
add
xor
or
mov
pop
inc
or
mov
fiaddl
rorb
es
lock
sbb
xchg
mov
push
or
add
data16
mov
cmp
add
iret
sbb
and
push
pop
jae
fcomps
mov
add
ret
and
call
imul
cmp
es
leave
lds
cmp
test
mov
mov
xchg
inc
stos
mov
add
testl
xchg
shr
loop
mov
icebp
push
lahf
add
adc
nop
iret
xor
cmp
mov
inc
cmpsl
bound
clc
jmp
mov
add
ret
out
mov
sbb
sbb
mov
inc
sub
mov
mov
xchg
ja
pop
orb
and
rcll
jnp
mov
and
fmuls
cld
out
add
mov
push
xor
cld
add
push
pop
test
jmp
cmc
add
enter
and
cmp
testb
jno
and
xchg
or
jle
loopne
pop
add
fisubs
les
addr16
lods
jle
sti
mulps
sbb
mov
popa
jae
jg
dec
incl
inc
mov
cmp
adc
aam
dec
add
or
add
jo
pop
dec
aad
or
dec
jmp
stos
enter
ret
push
in
sbb
add
fildl
xor
xor
add
loop
push
inc
andb
pop
add
pop
mov
in
push
add
sub
or
inc
inc
mov
cs
add
pushl
and
mov
sbb
mov
or
loop
add
stos
clc
mov
popa
subb
loopne
dec
add
adc
cmp
sub
stos
inc
add
mov
fbld
jb
add
mov
int
sub
cmp
inc
loopne
mov
add
add
cmp
adc
aam
add
mov
clc
int
add
pop
jmp
iret
outsl
icebp
or
cltd
xor
aad
scas
fs
stc
jmp
xchg
xor
aaa
and
and
mov
sbb
jb
ljmp
pop
add
sbb
adc
pop
and
dec
xorb
add
test
movsb
mov
inc
popf
add
add
das
adc
mov
push
or
xchg
loope
imul
xor
cmp
scas
cmp
jb
cmp
xor
mov
add
mov
adc
repnz
add
jnp
into
adc
mov
pop
out
dec
stc
cmpsl
sub
test
sbb
cmp
add
lods
mov
add
mov
jae
xor
popa
cli
subb
mov
aas
mov
mov
inc
mov
add
imul
push
cmp
cmp
arpl
adc
mov
cmp
add
imul
xorb
cmpb
add
xor
cs
jbe
adc
out
xlat
add
ljmp
adc
xor
adc
mov
cmp
inc
cmp
xchg
push
int3
test
es
pop
xchg
mov
stos
ret
orb
daa
cltd
or
mov
push
mov
mov
mov
mov
icebp
in
jecxz
pop
cmp
paddq
shlb
sbb
jno
adc
daa
call
push
lods
imul
add
xchg
arpl
add
ja
ds
xorb
out
or
add
fs
negl
jb
lods
sub
arpl
push
xor
sbb
fs
incl
faddl
aaa
pop
add
and
in
clc
add
jns
dec
rolb
sub
enter
je
adcb
sbb
cli
adc
lcall
jge
add
outsl
in
add
cli
or
add
lret
fbld
leave
clc
sbb
xor
mov
ret
sub
testl
adc
aas
hlt
add
ljmp
jb
daa
cs
cmp
fldl
sbb
add
sub
push
sbb
insb
sub
and
mov
adc
push
in
ret
mov
scas
js
les
imul
mov
jnp
xlat
rclb
sbb
cli
push
insb
lods
adc
inc
clc
cwtl
mov
xor
ror
jmp
push
add
cmpsb
enter
std
and
ret
icebp
pop
sub
or
mov
into
push
xchg
mov
cmp
jg
add
stos
rcrb
adc
fcomps
xlat
les
pop
xchg
pusha
jg
sub
add
fmul
mov
inc
shlb
cld
dec
push
jbe
scas
push
clc
xchg
loopne
mov
pop
pop
in
jae
dec
jo
add
push
loopne
lds
fadds
xor
mov
daa
cwtl
in
add
dec
repnz
dec
pop
cld
jge
leave
mov
je
jg
mov
sarb
jno
mov
mov
mov
pop
add
xchg
hlt
add
xchg
nop
or
push
push
sbb
lods
sub
rcr
jmp
adc
and
dec
push
add
dec
xor
add
aam
and
adc
gs
cwtl
add
cmpl
add
in
jp
xchg
pop
mov
repz
cmpsb
aaa
jg
out
mov
test
sub
add
outsb
cli
inc
mov
pop
dec
push
adc
imul
test
and
mov
rclb
add
sbb
inc
xor
adc
sub
mov
sbb
into
xor
push
daa
inc
sub
xchg
add
and
mov
pop
pusha
clc
lret
push
nop
inc
popf
mov
scas
nop
xor
push
xchg
js
xchg
cmc
xor
pop
add
add
add
fidivrl
and
rolb
test
xor
repnz
cltd
inc
cld
xchg
or
cmp
mov
pop
add
loope
fwait
arpl
sub
sub
jnp
rorb
clc
xchg
pusha
or
nop
adc
cmc
mov
cli
pop
lea
in
lds
rclb
jns
add
push
sbb
test
orl
adc
icebp
dec
lds
add
mov
int3
jns
or
xchg
inc
pop
hlt
jb
or
add
aas
rcrb
les
add
mov
pop
add
loopne
jmp
mov
cmpl
sub
jo
out
insl
aam
in
add
dec
push
sbb
das
push
and
inc
lods
inc
mulb
or
jg
add
push
lock
ss
add
jo
dec
ret
bound
push
sbb
add
loopne
std
jo
pop
add
pushf
outsb
inc
pop
call
les
dec
or
movsb
jnp
xchg
push
out
adc
mov
xchg
add
cmp
and
cmc
xor
nop
lods
pop
jbe
jge
mov
jecxz
lods
add
add
mov
std
xor
fcomps
mov
icebp
ret
mov
pop
sarl
clc
mov
mov
stc
pop
pop
int3
dec
out
pop
adcb
loop
rcrb
cmp
les
or
pop
push
stc
sarl
jo
in
xor
pop
sub
sbb
cmpsl
push
popa
add
cmpb
pop
ljmp
ret
cmpsl
jg
cli
call
aam
mov
mov
sub
push
xor
add
mov
jo
adc
and
inc
jg
or
xor
inc
xchg
jne
dec
aam
mov
sub
add
and
dec
xchg
pop
xchg
sahf
jnp
or
movsb
out
cld
adc
in
adc
mov
lods
or
add
sbb
out
loop
call
in
xor
add
push
popf
push
rep
fimull
add
lea
add
mov
add
and
mov
rcrl
add
lock
adc
mov
test
add
cli
mov
cmp
inc
push
push
movsb
les
pop
adcb
push
push
or
push
sub
sbb
add
repnz
cmp
nop
out
lahf
cmp
ljmp
inc
jne
sub
push
out
mov
mov
sbb
loope
movsb
cmp
push
fnstcw
add
test
mov
dec
mov
pop
cld
stos
xor
inc
and
sub
add
jb
lret
add
jns
mov
roll
jns
xchg
xchg
int3
mov
adc
add
nop
add
mov
and
adc
in
icebp
adc
pop
enter
pop
cmp
sbb
enter
and
adc
outsb
mov
sub
mov
or
pusha
shr
push
and
add
cmpsl
adc
mov
sub
push
xchg
dec
rol
mov
dec
add
ljmp
sbb
jmp
add
fisubrs
add
call
jmp
sub
push
out
pop
dec
into
add
popa
add
fisttpl
add
in
mov
lret
pusha
fidivl
in
jae
iret
mov
xor
adc
and
jns
aam
aam
mov
lock
cmp
aad
adcb
dec
add
add
add
jecxz
sahf
inc
sbb
mov
movups
test
rolb
stos
lods
sub
js
dec
jg
add
mov
stos
mov
xchg
jnp
lea
ljmp
insb
icebp
in
add
mov
fstps
xchg
lods
pop
push
nop
add
mov
add
mov
add
sbb
repz
test
push
inc
sbb
mov
call
call
push
push
inc
mov
cmp
add
fwait
nop
jl
cmp
mov
pushf
lods
in
sub
cld
ds
bound
ficompl
fs
aas
jae,pt
xchg
cmp
push
loopne
cmp
std
or
jl
fmull
aaa
jmp
mov
xor
hlt
loope
jae
add
sbb
jns
add
mov
jmp
mov
shll
and
cmp
and
mov
or
and
adcb
cli
loop
mov
mov
shrl
fimuls
inc
cmpb
sbb
add
sub
push
add
push
std
mov
cmp
lea
xor
add
popa
cs
ret
sub
shrl
test
push
aad
or
jge
and
daa
mov
fadd
adc
stos
cmpxchg
into
loope
sbb
dec
call
lret
inc
push
push
insb
nop
rclb
popf
sbbb
mov
add
and
lea
jge
jo
clc
dec
mov
scas
sbb
pop
jae
lds
dec
cmp
sub
pop
loope
sbb
jp
mov
inc
repz
mov
cld
sub
fs
pusha
push
inc
add
pop
mov
lahf
xor
cli
and
and
addb
xchg
add
adc
in
sbb
cmp
je
bound
add
add
dec
scas
test
sub
cwtl
js
negb
movsb
popf
clc
shl
ljmp
mov
push
mov
and
in
cmp
jno
sbb
add
pusha
inc
stos
cmpsb
aas
and
clc
jb
test
add
imul
push
pop
inc
cmp
or
mov
cwtl
mov
lret
add
les
add
mov
add
adc
lds
jb
shll
push
inc
mov
xor
add
cltd
mov
pop
jnp
add
pop
in
and
sbb
dec
lret
les
pop
add
scas
hlt
xchg
ds
arpl
cld
scas
dec
aas
add
sub
mov
and
or
cli
rolb
jne
xor
xorl
shlb
nop
loopne
push
add
rolb
lret
mov
mov
pop
and
es
fnstsw
lcall
adc
mov
cwtl
add
fs
jg
test
add
into
pop
xor
or
push
jge
adc
clc
cmp
movsl
int
les
ret
dec
xchg
clc
cld
dec
insb
push
sub
aam
repz
jae,pn
add
pop
xor
testl
add
addr16
insl
and
cmp
sbb
loop
stc
pop
cmp
dec
fdivl
pushf
jb
sbbb
add
cltd
sub
cwtl
jns
sbb
pop
jl
sub
jne
and
dec
rorl
and
jno
in
addr16
inc
es
add
insl
fnstcw
leave
sbb
mov
pop
scas
xchg
test
mov
sbb
cmp
jae
and
inc
sub
call
adc
cmp
mov
test
js
cmp
rclb
jno
add
stos
xor
loope
add
pop
xchg
dec
ficoml
mov
orl
xor
pop
add
add
dec
sar
idivl
hlt
and
loopne
pop
pop
test
fidivrl
lock
sub
add
std
lret
leave
xor
xchg
fsubrl
jbe
lret
or
rclb
xchg
sub
movsb
add
jmp
xor
add
xor
and
inc
push
push
sbb
inc
add
lods
pop
loopne
cwtl
aad
call
adc
jno
stc
aaa
lods
cwtl
nop
add
test
clc
insl
movl
mov
add
punpckhbw
nop
repz
sbb
dec
dec
lret
mov
push
or
cwtl
pop
icebp
fistpl
and
add
xchg
inc
fidivrl
shlb
jbe
add
call
fdivp
add
mov
mov
outsb
push
insb
fwait
sub
sahf
mov
imul
loopne
cltd
pop
inc
dec
add
mov
ret
inc
repnz
pop
clc
pusha
jno
add
fwait
out
push
pop
fists
outsb
sarl
and
aam
adc
add
dec
mov
add
inc
mov
lock
icebp
shrb
xchg
lret
mov
in
mov
add
xchg
mov
add
cmp
xor
pop
movl
or
add
pusha
lahf
lods
lock
shlb
jmp
test
add
mov
add
pop
or
lcall
into
or
popl
je
shll
insl
mov
shr
fstpl
push
and
add
lods
popf
xor
add
lahf
insb
fidivs
fbstp
xchg
mov
aam
loope
imul
addl
add
xchg
jmp
adc
xchg
and
and
test
fistps
popa
and
leave
xorb
add
push
or
adc
inc
movsb
rcl
fldl
dec
loope
dec
sarb
enter
add
add
dec
and
add
push
js
ret
movb
fcom
rep
cmp
fcomps
jle
xlat
mov
mov
add
lods
aam
ja
scas
add
inc
das
pop
outsl
adc
adc
xor
lcall
in
xchg
popa
jnp
shrb
inc
ror
adc
and
fdivs
negl
add
data16
pop
sar
test
cmp
call
icebp
jl
popa
add
mov
loopne
xchg
add
sbb
aad
in
jb
or
in
rolb
mov
add
cmc
mov
imul
sub
das
cmp
inc
sbbb
cmpsb
andb
push
insb
mov
add
sbb
incb
push
cmp
int
push
pop
xchg
cli
loop
add
jb
xchg
add
xchg
inc
test
ret
add
and
and
pop
or
mov
xchg
call
aam
add
into
sti
xchg
jno
add
sbb
stos
add
and
out
inc
inc
dec
enter
or
notl
loop
add
xor
pop
iret
xor
hlt
loopne
cltd
cwtl
add
cmpb
adc
mov
test
ljmp
cmpsl
and
mov
dec
mov
pop
xchg
sub
xorb
pop
out
pop
pop
cmc
inc
orb
aam
icebp
and
pop
insb
add
inc
xchg
cmp
sub
leave
xchg
mov
je
pop
or
lret
loop
rcrb
cmpsb
sbbb
sbb
adc
cwtl
pop
xorb
stos
lea
movl
add
sub
jle
aad
push
push
dec
or
mov
pop
pop
call
xchg
fcmovb
loope
mov
addb
inc
repnz
cmp
sub
xor
pop
cs
call
xor
jne
mov
mov
mov
out
jns
pop
dec
pop
jb
xlat
xchg
mov
add
in
mov
mov
add
dec
lea
hlt
mov
pop
les
iret
and
mov
mov
inc
cmp
jge
pop
pop
xor
adc
test
or
jo
pusha
dec
aaa
rcr
jle
dec
stos
stos
mov
add
sbb
mov
loopne
mov
add
cmc
cmpl
test
xchg
aam
xor
out
sbb
loopne
mov
rcrl
movsb
mov
ret
faddl
add
repnz
pop
bound
adc
dec
jecxz
xor
push
add
jno
cmp
mov
mov
aas
inc
mov
and
fwait
xchg
add
mov
and
fildl
add
add
repnz
mov
jno
mov
testl
mov
daa
pop
cmp
adc
adc
shlb
adc
mov
imul
inc
xchg
inc
hlt
pop
xchg
and
rorl
in
add
loope
fisttps
pop
sbb
aas
add
or
mov
mov
les
mov
pop
je
pop
push
loope
data16
or
jne
cwtl
mov
pop
ds
insb
pop
sub
push
dec
add
push
shrb
adc
test
jno
mov
les
fiadds
lret
add
loope
insl
adc
xchg
hlt
shlb
xchg
in
add
jp
and
pop
jae
add
pop
jge
xor
loop
pop
sub
out
addb
cli
cld
testb
or
add
dec
rcll
push
xor
repnz
out
mov
inc
add
popf
fmull
mov
mov
jne
cmp
imul
and
lods
add
jae
pop
xchg
daa
push
inc
pop
sub
sbb
pop
add
cs
sbb
push
adc
adc
loopne
rolb
push
mov
in
sbb
cmp
push
inc
mov
ret
clc
les
dec
xchg
jl
cmp
fst
add
cs
clc
sub
les
fs
push
cmp
inc
mov
movsb
add
xor
aaa
loop
pusha
in
call
and
pop
mov
mov
leave
add
sti
lea
fiaddl
inc
fmuls
std
dec
add
inc
cmp
jbe
ljmp
insl
mov
inc
mov
int3
imul
pop
fnstsw
aaa
adc
cmp
subb
adc
xor
aas
sub
filds
add
ds
shlb
add
push
inc
aam
jne
add
sysexit
subl
shr
and
add
push
inc
int3
fs
mov
mov
out
add
hlt
add
mov
jns
rcrb
xor
or
sbb
inc
push
dec
loop
push
inc
add
insl
add
sbbl
add
in
aaa
or
hlt
xor
add
add
jle
add
sub
in
pop
ljmp
add
lock
mov
jmp
enter
in
inc
cwtl
pop
sarb
or
and
inc
xchg
lret
jne
inc
mov
adc
es
pusha
cmp
jle
mov
jmp
and
cmp
das
add
inc
push
mov
les
dec
cmp
add
mov
add
fcomps
out
add
shlb
or
outsb
xor
cmp
movsb
add
jo
popa
and
push
mov
xor
and
mov
aad
cmc
add
push
es
mov
fs
push
mov
rdpmc
pop
and
and
jno
or
rcrb
add
repz
mov
add
lods
int3
pop
jno
fildl
sbb
and
adc
or
loopne
jmp
ret
mov
jb
or
mov
hlt
push
arpl
push
dec
aaa
dec
add
sub
jno
dec
ds
add
popa
inc
mov
add
lcall
clc
inc
mov
dec
push
fisttps
push
mov
add
xor
xchg
sti
test
leave
add
mov
mov
shr
into
pop
ret
les
sub
push
adcb
dec
dec
add
test
jae
push
adcl
popa
push
roll
sbb
jp
cmc
cli
jae
in
loopne
test
pop
mov
adc
cld
push
lock
and
popa
cmp
popf
lcall
pop
cwtl
sub
dec
test
and
push
roll
mov
pop
mov
jp
pop
cmp
add
test
add
jecxz
pop
ja
loopne
jmp
add
xchg
mov
push
test
jo
pop
push
subl
stos
add
cmp
imul
ss
test
add
mov
cwtl
pop
repz
pop
add
push
jo
add
fs
mov
sub
and
imul
rorb
and
add
dec
imul
jmp
in
inc
mov
popf
aam
cmc
xchg
test
push
mov
lods
add
sub
xchg
popa
ret
sub
cli
add
mov
xchg
add
cld
sbbb
insl
mov
pop
lea
add
cmpl
push
add
xchg
and
ret
sbb
or
movsb
add
xor
cwtl
push
je
sbb
ret
into
lcall
push
ss
bnd
xchg
scas
popl
pop
iret
xchg
push
negb
lock
lock
je
rcr
add
push
pop
push
lea
test
adc
scas
mov
sub
add
rolb
lds
ja
jmp
incb
add
sti
push
sub
in
adc
or
add
dec
adc
fildll
dec
int
add
mov
leave
gs
jbe
outsb
push
cwtl
mov
add
stos
xorb
jo
add
dec
mov
stos
ja
add
imul
loop
add
bound
mov
adc
inc
shr
xlat
xchg
stos
imul
or
test
subb
sub
sub
push
lock
push
push
and
daa
mov
pop
and
adc
mov
imul
jne
sbb
out
mov
and
adcb
add
pusha
sbb
sub
fildl
gs
hlt
setle
push
ret
add
loopne
push
and
popa
stos
adc
lret
aam
adc
mov
add
popf
inc
sbb
add
das
sbb
frstor
imul
cs
jecxz
pop
adc
xchg
mov
add
mov
das
cwtl
xchg
negb
cmp
sti
je
add
arpl
js
and
pop
push
rolb
xchg
daa
fisubl
jg
cmp
or
popl
push
test
dec
jbe
stc
sbb
and
int3
xchg
ret
cmp
jno
add
sub
fsubl
pop
loopne
ds
and
fcmovnbe
jp
out
sbb
xchg
xor
inc
and
mov
lods
sub
mov
add
fidivrs
mov
add
in
push
mov
mov
pop
and
cmp
scas
aam
movsb
jmp
dec
lret
cs
pop
out
es
inc
andb
addr16
dec
inc
mov
jae
add
dec
stc
call
push
and
xor
fisttps
js
pop
insl
nop
lock
push
mov
sbb
dec
into
cs
xor
push
cmp
fldl
popa
and
sti
add
xor
ss
mov
xor
cmpsl
push
fiaddl
mov
or
cli
push
add
call
sub
sbb
sbb
es
rcr
ljmp
jbe
js
test
add
and
cwtl
dec
jl
pop
fbld
js
sahf
pop
test
fwait
add
lahf
xchg
xchg
adc
mov
adc
inc
jb
xchg
int3
mov
dec
push
enter
lea
dec
mov
sbb
xor
hlt
jns
or
mov
ss
jno
push
xchg
add
and
add
shlb
ljmp
push
rol
adc
loopne
pop
dec
pop
jne
std
add
push
int
pop
mov
cmp
sub
shlb
loop
in
test
cmp
test
decb
mov
lock
pop
call
adc
adc
ror
jno
add
test
out
add
mov
mov
cmp
push
mov
dec
pusha
add
jbe
adc
pop
or
push
push
inc
in
nop
fstl
add
xchg
jbe
dec
or
cltd
loop
movups
fadd
aas
movsb
and
mov
aas
push
add
inc
fnstenv
testl
mov
add
sub
jno
jne
add
or
xor
enter
push
sbb
test
mov
stc
lret
add
lock
cmpl
lret
pusha
inc
mov
stos
jg
je
out
rolb
mov
and
popf
idivl
xchg
das
add
pop
add
arpl
push
testl
inc
xchg
dec
pop
mov
in
mov
add
push
push
or
into
int3
je
mov
mov
pop
inc
xor
add
stos
add
cwtl
hlt
sub
and
cs
mov
xor
aaa
adc
sbbl
test
lock
inc
repnz
adcb
test
inc
xor
pop
ds
pop
mov
sbbl
fdivrs
push
cmp
hlt
lret
jne
fbstp
xor
sbb
out
adc
pop
roll
sbb
xchg
or
and
fldt
or
shll
add
out
loop
rcrb
inc
js
insl
mov
add
fs
cltd
aam
push
clc
dec
jnp
les
pop
mov
sbb
ret
adc
ss
adc
ret
insb
add
jl
jmp
lods
cld
push
fmul
add
mov
adc
loope
push
jo
add
adc
dec
test
ja
int3
in
jge
in
add
enter
jg
sti
cld
jo
sub
mov
add
jle
mull
ljmp
sub
adc
jbe
call
jns
mov
aam
pop
fcoml
push
add
sahf
jbe
add
scas
es
ds
xor
clc
inc
mov
add
ficompl
add
xchg
cmp
and
fistpl
scas
xchg
lahf
addb
cs
fcoms
aad
fwait
add
in
repz
push
or
shl
adc
bound
jp
mov
imul
mov
dec
nop
cli
xchg
mov
fcoms
cmpl
push
push
sbbl
pop
push
jne
push
push
insl
and
rcrb
mov
sbb
imul
xor
xor
das
pop
dec
adc
add
fcoms
xchg
xor
std
cmp
jmp
mov
dec
imul
and
icebp
shl
add
aaa
xchg
add
shlb
in
popa
cmpsl
insl
inc
loope
mov
idivl
sbb
in
add
je
pushf
and
idivl
add
insl
xchg
cli
push
push
xor
rclb
cmpsb
sub
mov
mov
add
cmpsb
in
pop
add
mov
in
das
push
jge
cmp
loop
inc
push
xchg
stc
xchg
jecxz
mov
add
ret
js
orl
pop
pusha
jb
or
and
clc
aaa
push
xchg
add
xor
mov
mov
push
mov
sub
stos
and
call
mov
inc
pop
xor
adc
test
mov
pop
mov
lock
aam
shrb
cmp
inc
add
out
mov
outsl
or
xchg
dec
data16
add
movsb
add
adc
jl
or
cs
add
xor
rolb
xchg
sbb
ret
fisubl
mov
sbb
adc
push
add
dec
sbb
mov
les
les
jmp
jns
test
movsb
roll
int
sub
xchg
jbe
cmp
add
mov
mov
in
add
mov
int3
sahf
and
dec
insb
adcb
imul
pop
add
inc
and
ds
sti
and
jl
inc
lds
aam
pushf
lods
loopne
fisttps
adc
shl
sub
sub
or
push
adc
cld
add
pop
add
mov
iret
push
mov
cli
cmp
sub
add
icebp
mov
and
fstpt
loopne,pt
out
xor
je
ret
mov
sbb
int
ds
movsl
push
lods
and
add
fldt
add
fwait
dec
ds
loope
ja
arpl
or
add
shrl
jno
cmp
add
cld
push
jo
clc
imul
lods
pop
je
ret
les
gs
and
icebp
pop
lods
add
pop
add
lods
mov
xor
nop
pop
sbb
jl
and
lock
add
push
in
pop
add
loopne
cmp
add
cli
sub
pop
aas
and
xchg
pop
std
add
adc
stos
pop
loope
mov
in
bound
mov
add
out
add
in
mov
push
push
bound
js
add
cmp
xchg
add
fists
mov
int3
into
or
jmp
cltd
pusha
lea
in
loope
cmp
lods
push
add
test
outsb
sahf
jmp
pop
jns
and
lds
add
jbe
pop
inc
sbb
cmp
test
pop
add
sub
in
jge
dec
rorl
cltd
or
xor
cmpsl
out
xchg
dec
mov
sub
sbb
movsb
inc
mov
push
loopne
jno
enter
and
push
enter
sahf
jp
adc
stos
insb
nop
push
add
sarb
ror
and
and
xor
add
mov
outsb
or
sbb
xlat
add
mov
hlt
imul
sub
xchg
loopne
popa
xchg
mov
int
lret
add
mov
xor
and
add
jno
or
jae
cmp
push
inc
xchg
add
push
in
ror
jbe
fnop
cmp
sbb
xchg
inc
adc
pop
sbb
add
mov
mov
and
or
outsb
psubsw
sbb
push
mov
sub
iret
jne
in
test
inc
add
sahf
lahf
sub
packsswb
inc
xor
andb
or
das
sbb
dec
fbld
add
lret
inc
gs
lds
aad
ret
clc
xchg
adc
pop
inc
mov
dec
xor
call
sbb
mov
sbb
movsb
cmp
mov
popf
or
sub
mov
mov
sti
in
add
loope
enter
add
and
xor
mov
pop
loop
test
push
add
flds
test
fwait
push
adc
fs
dec
and
push
sub
add
fincstp
cltd
add
insl
movsl
mov
out
add
mov
hlt
addr16
adc
fs
jmp
dec
jo
or
inc
mov
dec
sbb
ret
sub
mov
push
push
fdivrs
hlt
add
add
add
cmp
add
pop
pushf
outsb
insb
fidivrs
loop
add
jno
push
cmp
sar
aam
addl
add
adc
andnps
inc
cmp
jge
cmp
enter
jae
scas
stos
sub
stos
testb
inc
ds
cmp
imul
push
push
adc
fwait
popw
mov
icebp
pop
xor
xchg
incb
xchg
nop
mov
adc
sbb
sahf
cmc
adc
mov
mov
pop
stc
xor
mov
sub
subl
mov
shll
nop
add
fninit
pushf
pusha
repnz
jnp
and
add
push
cmpb
pop
int3
or
movsb
aaa
jmp
and
mov
setno
push
adcb
mov
addr16
inc
pop
in
push
push
or
sahf
fmuls
sub
out
add
jg
test
aad
ds
dec
add
cmp
xchg
mov
jo
leave
movsb
and
testb
outsl
mov
jne
sbbb
or
push
mov
test
repz
xchg
adc
add
cld
sbbl
je
push
cmp
sub
inc
add
movsl
nop
mov
sti
add
push
sbb
dec
cli
adcb
pop
dec
lahf
or
sbb
repnz
jecxz
push
lret
or
and
filds
insl
ror
sub
popa
es
ret
lock
pop
add
add
jg
push
sarb
hlt
out
dec
imull
mov
xor
ljmp
sub
outsb
imul
pushf
jae
cmp
add
test
rolb
and
faddl
aas
mov
pop
adc
or
fs
call
stos
push
cwtl
psrlw
out
cmp
add
incl
dec
cli
aad
addb
or
cmpsb
and
pop
enter
popf
notb
jno
add
sbbb
arpl
in
ss
xlat
inc
ljmp
add
ret
std
lcall
fisttpl
sbbl
int3
inc
dec
add
xor
mov
jecxz
cmp
loopne
dec
xlat
pushf
ror
pop
jg,pt
xor
je
popa
add
mov
push
pop
push
fmull
mov
mov
fcmovb
xchg
pop
insb
jbe
pushl
cmc
jmp
xchg
xorb
xor
mov
repnz
xor
fstps
ljmp
mov
repz
imul
add
mov
cwtl
jne
push
loop
inc
jo
sti
xor
mov
pop
popf
and
sub
stos
sub
test
or
clc
out
add
pop
push
adc
sbb
popa
xor
out
jo
imull
mov
loope
in
ja
sub
ljmp
cld
mov
pusha
pop
adc
fadds
pop
xchg
in
jbe
or
test
push
xlat
pusha
dec
pop
adc
mov
mov
xchg
mov
test
in
xchg
push
xchg
call
js
and
ljmp
push
inc
sub
pop
mov
jmp
adc
fildll
or
ror
movsb
sbbb
xchg
jns
mov
mov
ss
pop
adcl
jo,pn
andl
dec
push
movsb
adc
adc
ja
mov
xchg
xor
or
add
jge
mov
jge
add
adc
push
lcall
clc
inc
mov
loope
lock
iret
test
inc
ljmp
sarb
popa
rorb
mov
xor
jo
push
hlt
add
call
mov
dec
xor
add
test
shrb
cltd
insl
mov
inc
add
int3
xor
add
sub
xchg
shlb
mov
push
inc
push
mov
cmp
xchg
mov
xchg
jbe
lcall
test
inc
mov
jns
inc
andb
lock
test
sbb
pop
inc
mov
les
insb
adc
add
ja
arpl
rcrl
mov
sbb
pusha
pop
ja
cmp
add
sub
mov
mov
cltd
mov
rorb
fld
dec
inc
mov
push
cmc
mov
pop
xor
inc
mov
sub
and
sbb
add
sahf
and
push
inc
int3
notb
jnp
or
or
rcr
lret
inc
add
leave
xor
add
jns
xchg
cmc
bound
int
rcrl
or
ljmp
jns
sbb
add
xlat
inc
rcrb
jb
push
lods
insl
js
ret
inc
sub
mov
or
sub
jno
add
sub
mov
mov
imul
dec
pusha
sub
push
push
adc
setns
stc
loopne
jecxz
ret
clc
test
xor
stc
inc
pop
jmp
sub
out
inc
sbb
pop
lcall
movsb
aam
jg
cvttps2pi
leave
ljmp
add
je
lcall
jmp
or
dec
xchg
add
imul
das
and
mov
mov
subl
lret
mov
jg
mov
je
pop
and
push
jbe
xchg
pushf
or
xchg
sbb
inc
push
add
add
fidivrl
pop
push
shrb
and
mov
xchg
test
popa
jl
push
push
shll
lcall
ja
push
xor
pop
iret
das
pop
xchg
loope
push
adcb
xchg
xor
and
enter
lahf
xchg
cltd
jp
add
nop
test
mov
mov
rcrb
add
mov
xor
je
ss
sbb
mov
frstor
nop
sti
stos
mov
cwtl
je
jecxz
out
es
loopne
sub
adc
mov
jl
add
mov
jnp
nop
pushf
mov
fbstp
inc
mov
and
add
xchg
addl
sahf
fisttps
loop
faddl
pop
jo
std
sbb
enter
add
sti
xor
negl
mov
sbb
divb
lock
jmp
adc
or
ja
pop
sbb
xchg
into
pop
and
adc
xchg
mov
and
fldenv
add
or
pop
jl
ja
sbb
and
ljmp
add
sub
inc
ss
dec
mov
sbb
loope
je
dec
add
out
arpl
xor
inc
dec
mov
lock
mov
jbe
data16
xlat
sbb
dec
jb
add
mov
mov
bound
push
imul
sub
xor
mov
mov
in
add
out
sbb
movsl
sti
dec
subb
cwtl
mov
jecxz
xchg
push
jg
out
push
adc
and
andl
imul
xchg
add
adcb
daa
mov
dec
jno
in
nop
das
mov
mov
rolb
and
mov
inc
icebp
add
xchg
add
call
jne
ja
adc
cltd
jo
jg
test
cmp
add
and
mov
jg
mov
in
xorb
mov
leave
sub
inc
and
pop
jbe
shrl
les
cld
pop
adc
xor
add
cli
mov
and
insl
test
aaa
enter
mov
xor
add
lock
or
pusha
movb
je
leave
push
fs
sbb
jl
adc
jle
jp
add
mov
mov
sub
dec
push
and
out
sub
inc
int
dec
test
inc
cmp
add
rorl
fldcw
or
data16
pusha
ljmp
arpl
addr16
cmc
test
lods
pop
inc
sbb
push
mov
dec
push
adc
cld
push
pop
sub
jp
ret
ss
ljmp
repnz
pop
xchg
fsub
cmpb
sbb
aas
jmp
jmp
int3
aad
add
sti
mov
cmp
mov
or
adc
inc
mov
add
sub
enter
xchg
bound
ds
push
notl
loopne
mov
add
outsl
lret
test
mov
jl
mov
out
push
ds
add
in
and
mov
arpl
xchg
xchg
add
mov
insb
push
xorb
loopne
adc
loope
es
pushf
ret
popa
and
sub
jno
xchg
mov
add
add
mov
leave
sub
inc
pop
push
mov
push
add
lock
mov
ror
movsl
xchg
icebp
add
out
add
pop
add
fdivl
push
imul
out
sub
xlat
aam
dec
adc
mov
cmpsb
jp
test
and
mov
mov
cwtl
xor
adcl
sarb
mov
jae
loopne
jne
add
int3
push
imul
mov
pusha
or
inc
mov
adc
out
inc
add
arpl
mov
mov
test
call
mov
stos
cmpsl
enter
add
fstps
mov
add
out
push
add
pop
out
loop
int3
ficompl
jns
fistpll
addr16
pusha
sub
sbb
jge
les
xchg
dec
mov
mov
add
adc
jne
frstor
out
add
ljmp
push
lcall
inc
push
cmpb
or
cs
nop
sub
int3
pop
cmc
xchg
push
add
pushf
dec
xchg
xor
les
shlb
in
sarl
cld
xor
iret
divl
add
rcrl
repnz
mov
sub
lret
and
mov
add
inc
xor
arpl
pop
rcrl
sti
sbb
hlt
mov
repnz
pop
push
daa
add
outsb
sbb
leave
icebp
xchg
aam
inc
cmp
dec
lret
insl
mov
subl
int3
mov
inc
mov
add
mov
out
sti
lds
fbld
pop
or
pop
std
mov
mov
lods
and
ljmp
xor
lcall
sub
orl
jo
cltd
jno
cmp
add
push
xor
rcrb
mov
int
pop
add
push
stc
push
je
mov
fildl
mov
sub
test
je
mull
add
cmpsl
mov
into
mov
pop
testb
mov
cltd
pop
cmpsl
and
mov
faddl
xchg
add
sub
jl
push
lods
xchg
and
push
add
cld
cli
out
mov
in
add
and
inc
inc
xorb
dec
push
add
sbb
inc
sar
mov
addr16
mov
dec
sub
int
cltd
jmp
es
sub
jb
add
xor
or
pusha
mov
add
add
js
dec
and
push
ss
bound
add
fs
cld
add
hlt
inc
push
push
sbb
dec
lock
inc
cmp
jbe
sub
pop
xchg
icebp
scas
sbb
insl
shrl
xor
sbbl
or
inc
xlat
dec
mov
add
aam
sub
adc
test
in
push
add
pop
mov
aaa
add
push
dec
push
jmp
inc
add
xchg
dec
xchg
inc
clc
mov
add
cmp
stc
lods
sbb
mov
push
les
xor
inc
enter
add
cmpsb
popa
jge
sti
js
adc
and
pop
push
mov
mov
mov
push
in
push
inc
movb
xor
sub
lret
add
pop
dec
stos
pop
pop
push
pop
lret
or
add
sbb
testl
enter
mov
add
jb
sbb
pop
add
idivb
sbb
mov
and
or
lea
adc
add
dec
xchg
push
add
in
jmp
xchg
cs
mov
or
add
pop
pop
mov
push
jg
std
xor
stos
jno
es
add
lods
or
pop
rcrb
enter
jge
mov
dec
jl
add
mov
add
push
insl
and
lahf
push
aam
es
push
add
mov
mov
rcll
pop
lds
cmc
aad
frstpm(287
pop
mov
es
mov
or
push
fnstenv
rcrl
dec
in
mov
push
or
cmp
sub
ds
pop
sti
pmullw
pusha
xor
pop
pop
and
pop
and
rcrb
jecxz
adc
xchg
xchg
cmp
mov
incb
lods
test
mov
dec
mov
movsl
sahf
sub
jae
jg
insb
cs
shll
mov
sbb
pop
mov
add
aam
sbb
xlat
stc
jp
mov
jl
lcall
int
adc
sbbb
and
jecxz
and
dec
mov
add
xchg
test
push
add
dec
mov
jne
pop
and
jmp
add
out
das
jmp
jnp
add
int
aad
jo
add
in
rorb
stos
sbb
testl
pusha
and
or
inc
mov
jg,pt
orb
xchg
and
cmp
mov
fnstenv
fwait
push
inc
fdivrs
mov
addl
mov
mov
fldt
paddsw
iret
xchg
add
push
push
xchg
mov
mov
push
lock
pop
cltd
add
icebp
lock
add
into
jns
add
imul
sub
stos
mov
cmp
adc
loope
pop
jge
int
fidivrs
fstpt
cmp
add
ffreep
test
rolb
adc
aas
dec
jae
pop
push
ja
jl
xlat
insl
add
mov
sub
push
mov
in
aam
jns
dec
stc
scas
adc
pushf
out
pop
or
inc
sbb
test
testl
jo
pop
cld
and
jne
js
or
insl
jns
xchg
fadds
dec
inc
jmp
and
mov
add
adc
int
pop
push
outsl
jge
sbb
push
ljmp
jge
flds
jno
xor
push
sbb
call
jecxz
pop
orl
pusha
stos
mov
push
js
push
rorb
xchg
add
insl
in
js
add
sahf
inc
incl
add
sub
fstps
add
mov
xorl
xchg
out
sub
or
add
jbe
je
sbb
add
or
push
mov
call
or
mov
lahf
xor
jns
add
loope
push
in
mov
sbb
lods
mov
pop
mov
orl
add
stos
push
clc
inc
out
push
and
sti
movsl
lahf
mov
inc
push
mov
stc
scas
add
sbb
movsb
addr16
pop
add
or
xor
push
aam
inc
inc
xor
loopne
loop
add
inc
cmpsb
insl
test
inc
loopne
inc
xor
xchg
stos
aaa
pop
cld
push
and
mov
add
shll
test
out
ljmp
and
push
dec
adc
cmp
adc
jne
fadds
mov
rcrl
push
addr16
and
in
pop
mov
add
jmp
or
dec
call
sub
test
leave
add
movsl
std
lret
add
sub
mov
popa
xor
xchg
push
adc
jmp
movsb
sbb
cmp
pop
cltd
loop
enter
hlt
mov
test
aaa
pop
inc
push
pcmpgtw
cmp
jno
and
add
filds
jne
mov
jge
and
clc
jns
orb
loope
test
cmp
ja
add
inc
dec
jnp
pushf
add
add
outsl
pushl
dec
fs
adcb
push
add
cmp
inc
jmp
dec
add
int
and
mov
mov
sbb
pop
adc
pop
out
aam
add
dec
inc
incb
or
add
sbb
rclb
dec
mov
int
nop
pop
in
out
add
jmp
lea
and
popa
pop
sub
xchg
in
push
cmc
xor
or
adc
subl
sub
lret
sahf
add
test
adc
cld
movsb
and
and
and
stos
fwait
lds
fs
loope
out
inc
push
pop
sub
dec
rcrl
add
mov
xchg
cmpl
inc
cmpb
add
mov
sarb
cmp
add
test
mov
dec
stc
push
mov
cmc
sbb
xor
add
adc
mov
push
add
fwait
sar
sub
lock
repz
call
sbb
pop
orb
lds
jbe
mov
sbb
adc
in
dec
dec
loopne
add
mov
mov
fldl
hlt
lret
popf
mov
repz
cmpsl
xchg
inc
shlb
adc
popf
cmpsl
jo
in
jle
sub
adc
xchg
xor
add
test
repnz
add
stos
inc
xchg
mov
add
and
mov
dec
outsb
add
jmp
xchg
pop
push
xchg
add
or
pusha
sbb
jae
sarb
js
inc
sbb
dec
jb
push
call
jnp
insb
sbb
mov
lcall
loope
ffree
cltd
cmc
mov
cmp
xchg
das
dec
popa
add
fadd
and
add
adc
sbb
adc
mov
add
jne
pusha
in
pop
aas
call
sub
shlb
push
movsl
mov
and
les
ror
adc
test
push
xchg
dec
sub
sbb
lcall
mov
jo
fnstsw
add
mov
scas
lods
lret
and
ss
jae
sub
int
pop
ret
sbb
in
mov
jmp
ljmp
xchg
sbb
fisubs
dec
pop
and
add
dec
add
cmp
pop
xor
pop
pop
jo
and
push
mov
fidivrl
add
mov
sbb
add
stos
dec
push
add
push
and
loope
add
das
mov
and
jne
pop
pop
mov
clc
push
jl
inc
sahf
imul
arpl
push
out
xchg
mov
pop
aas
jb
cmp
dec
sbb
addr16
add
movsb
aas
or
xchg
xchg
cmp
fcoms
test
cmp
sub
in
mov
inc
pop
or
into
and
cwtl
mov
ds
push
ret
add
das
addl
rcr
pop
dec
shlb
and
mov
imul
mov
ljmp
in
push
and
add
imulb
jo
outsb
js
jae
test
enter
and
out
test
call
mov
jno
cmp
adc
lret
shr
es
jno
rclb
and
pop
or
and
movl
dec
in
ljmp
cmp
mov
mov
fwait
and
std
push
adc
je
lods
and
cld
inc
loope,pn
or
push
fiaddl
mov
aas
cs
and
lods
add
mov
push
imul
inc
inc
mov
mov
sbb
jg
xorl
sub
pop
cmpsl
pop
lss
sbbl
sbb
push
outsb
cld
pop
xchg
push
fnsave
xchg
add
scas
ret
or
lahf
push
leave
shlb
lods
add
xor
jp
dec
int
add
je
loop
add
mov
inc
rorl
mov
xor
mov
rolb
xchg
mov
push
inc
inc
aas
lds
fiaddl
mov
insb
cmp
xchg
or
adc
pop
xchg
mov
sub
fwait
std
add
sbb
inc
cwtl
add
mov
cmp
pushf
jns
mov
cmpsl
fadds
mov
loopne
ljmp
sti
orb
ja
outsb
dec
loop
stos
lods
test
test
or
xor
or
pop
rol
add
sub
xor
xchg
and
clc
push
add
addr16
add
push
add
bound
daa
lods
lds
rorb
push
xchg
xchg
add
mov
scas
add
jmp
iret
mov
ds
rclb
mov
add
movsl
adc
and
push
adc
pop
cmp
andb
add
xor
dec
aaa
rorb
test
adc
or
addb
adc
mov
push
add
shlb
popa
pop
lock
in
push
and
push
jae
pop
sub
popa
notb
in
shlb
out
mov
movl
pop
loope
xor
sbb
add
push
movsb
jmp
gs
jno
add
mov
sub
in
or
dec
push
lahf
and
add
testb
movsl
adc
xor
and
nop
into
add
sbb
or
pop
clc
mov
outsl
inc
jmp
and
sub
orl
js
and
cmpsl
out
mov
add
das
ljmp
dec
shl
inc
cmpsb
add
negb
cwtl
repz
and
push
mov
aas
in
pcmpgtb
andb
add
frstor
cld
inc
add
jae
gs
mov
xchg
scas
mov
mov
bound
pop
pusha
add
aad
shll
cs
mov
fisubs
out
and
popa
testb
je
je
jle,pt
arpl
cmp
xor
lock
or
pop
fcmove
cmc
int3
jnp
add
sub
fnsave
dec
mov
loop
das
sbb
cmc
jl
pop
rolb
and
jmp
fidivl
add
jg
aas
pop
mov
popa
pop
sub
cmc
add
lds
fdivr
xor
andb
sbb
fcomps
jno
pusha
mov
add
add
jo
add
mov
mov
add
inc
push
mov
or
xlat
lahf
incl
sub
movsl
je
add
adc
mov
lods
xor
pop
pop
mov
mov
loope
push
js
movb
push
sbb
xor
jnp
add
shl
push
cli
int
cwtl
push
xor
ljmp
ret
sysexit
aaa
push
js
adcb
push
add
loop
popa
add
mov
rcll
jmp
mov
add
filds
dec
jae
mov
scas
gs
clc
arpl
jecxz
and
lds
pop
dec
mov
fsubrs
pop
jne
popf
andb
cmpsb
mov
in
mov
jl
xor
lsl
mov
mov
loope
cmc
jmp
fs
jge
xor
xchg
sbb
mov
xchg
pusha
adc
and
and
pusha
lret
sub
pop
imul
outsl
add
adc
add
pop
adc
sbb
jb
xor
outsl
mov
jno
adc
in
andb
jmp
pop
fsubrs
inc
fs
cmp
aam
xchg
cmp
fidivrs
inc
pop
pop
cltd
lea
pop
jbe
daa
lods
mov
xchg
adc
adc
adcl
or
pop
pushf
mov
ficoml
cltd
pusha
sub
mov
shrb
enter
mov
cmp
xor
push
ret
mov
loop
add
adc
sub
adc
ljmp
and
add
ss
cwtl
cmp
cmpb
ljmp
xor
add
repz
inc
cld
repnz
dec
pusha
push
iret
inc
fistps
cmpsl
cmp
andl
cmp
mov
cmp
gs
aam
dec
add
or
and
lret
test
inc
and
xchg
cmp
xchg
adc
pushf
faddl
dec
jb
jmp
pop
out
mov
push
aad
shlb
hlt
jb
mov
repnz
xchg
mov
xorl
or
ss
pop
or
loopne
ds
imul
pop
mov
jnp
mov
lds
insl
in
jo
add
sub
pop
cmp
out
inc
popf
add
mov
mov
xchg
adc
cltd
push
ret
inc
test
sti
sar
add
rcrl
cmp
xor
ja
pusha
cld
xor
cmpb
dec
add
out
rcll
fwait
scas
add
idiv
inc
jbe
mov
fsubrl
add
stos
leave
sarl
add
mov
test
jle
out
adc
push
mov
pop
or
arpl
or
inc
fsubs
stc
sbb
jns
fwait
mov
cmp
into
adc
sub
popa
xchg
add
xchg
dec
inc
xor
ffreep
push
mov
jns
pop
pop
adc
xchg
mov
test
loope
jp
push
or
xchg
stos
jmp
add
xchg
lock
add
loopne
mov
out
add
sub
shlb
call
ds
jecxz
popa
push
ficompl
xchg
add
and
xor
push
pushf
push
incb
pop
mov
pop
clc
test
rorb
mov
incb
mov
filds
imul
push
rorb
add
dec
lcall
push
mov
inc
shlb
jno
jb
cltd
jp
repnz
aas
mov
lock
std
call
inc
lods
mov
rcl
cli
inc
pop
sbb
cs
push
idivl
mov
push
insl
test
rep
loopne
push
add
adc
enter
add
xchg
ss
inc
push
mov
mov
jge
sbb
pop
jmp
jb
jo
sbb
dec
xor
add
es
ret
in
jne
xor
push
outsb
pop
xchg
call
mov
add
jnp
sti
inc
out
lret
add
xchg
mov
lods
mov
popa
adc
call
cwtl
stos
or
dec
cmpsb
add
cmp
add
adc
add
insl
test
movl
or
std
leave
add
popf
jmp
bound
push
roll
lret
fidivrs
mov
xor
sbb
call
sbb
lods
push
divb
push
in
clc
daa
push
xor
je
push
dec
xchg
mov
xchg
add
push
nop
stos
or
push
mov
push
es
in
jge
mov
cmp
scas
add
dec
push
test
pop
dec
faddl
cli
push
mov
lods
xor
es
loope
std
imul
cmp
and
pop
imul
jno
lcall
sub
add
cmpsl
fmull
arpl
stc
stos
push
and
les
sbb
bound
dec
lahf
pop
dec
mov
pushf
add
aam
inc
stos
data16
push
stc
pop
rolb
jbe
sti
cld
outsl
add
dec
dec
cmp
mov
push
mov
add
cli
jge
xchg
inc
dec
fbstp
dec
es
add
clc
imul
add
dec
popa
js
test
add
or
xchg
jge
add
gs
in
sub
add
mov
add
xchg
sub
mov
mov
shll
mov
repz
outsl
add
mov
les
add
mov
ret
sahf
notb
pop
or
fsub
in
in
pushf
pop
js
ss
add
sub
push
jl
xchg
in
movsb
xchg
dec
mov
add
push
in
shlb
xlat
add
shrl
or
add
addr16
inc
cmp
nop
jno
cmpl
sbbb
cmp
xchg
fwait
mov
jp
and
out
cmp
xchg
mov
add
pop
or
loopne
pop
in
pop
jl
pop
test
movsb
lock
add
or
inc
xor
cmp
cwtl
push
or
sbb
sub
popf
cmp
dec
xchg
les
out
xlat
sti
test
jle
cmc
scas
je
sbb
fmull
pusha
icebp
and
icebp
and
cmp
add
cld
adc
push
xchg
adc
sbb
dec
popf
cmc
lret
inc
mov
cli
xor
sub
jle
xor
and
add
add
cmp
rorb
sub
add
cli
adc
movzbl
cld
push
popf
cld
add
inc
call
cmp
sub
out
mov
mov
outsb
adc
bnd
lcall
test
pop
add
in
out
aas
add
inc
jle
adc
sub
sub
int3
jg
and
dec
hlt
xchg
movsb
adc
sbb
add
sub
cmp
cmp
pop
cmpsl
fs
xchg
inc
add
repz
inc
out
mov
adcb
or
dec
or
shlb
sbb
add
push
es
sbb
add
ljmp
dec
stos
cmp
mov
test
loope
add
fistps
inc
repnz
add
mov
je
or
add
ss
push
push
aam
mov
dec
cli
xor
cld
push
push
add
les
sbb
dec
cmp
subl
cwtl
int3
jo
mov
push
jmp
cmpsl
js
mov
cmp
push
enter
adcl
adc
iret
xchg
shlb
js
cmp
jbe
add
add
xchg
std
pusha
sbb
pop
loopne
mov
pop
mov
sub
ret
std
sbb
add
adc
inc
add
cmc
mov
add
arpl
popl
fsts
das
mov
roll
sti
cmp
int3
add
out
pop
jbe
or
dec
mov
sbb
xorl
sti
adc
incb
jg
inc
jnp
popf
int3
add
dec
mov
add
xor
pop
pop
shll
mov
loop
pop
add
sti
push
jmp
stos
lcall
mov
std
rclb
sbb
add
xor
add
test
leave
cmp
xorb
dec
jne
xor
cli
ja
mov
aad
roll
loope
mov
pop
pop
sbb
iret
push
ljmp
orb
scas
jae
mov
pop
or
push
jl
add
and
add
xlat
fsts
ds
add
fstpt
les
shll
sbb
sahf
out
stos
mov
nop
push
mov
push
add
mov
fldenv
jl
and
sbb
xor
and
inc
add
xor
fwait
or
dec
add
xor
pop
iret
leave
pop
and
inc
scas
inc
rolb
jns
ret
mov
pop
push
and
add
shrl
or
add
pop
repz
mov
test
ds
add
push
xchg
bound
ja
push
dec
ss
push
add
inc
das
jle
leave
pusha
jno
fcomps
and
inc
aam
decl
xor
sarb
arpl
push
xchg
and
mov
lret
and
pop
data16
xchg
push
idivl
cwtl
mov
sub
in
movsb
fstpt
push
insb
add
jb
pop
dec
in
aaa
pop
inc
dec
leave
add
pushf
jns
add
add
lock
add
pop
lahf
mov
shrb
fdivl
gs
or
loopne
es
xchg
and
mov
fsubrp
add
and
mov
pushf
psubsw
pop
es
add
daa
popf
mov
mov
mov
sub
mov
sub
mov
adc
addr16
enter
in
scas
fidivrl
or
sub
xchg
andb
adc
insb
add
ret
cwtl
adc
pushl
addb
mov
int3
je
bnd
outsl
add
sarl
aam
mov
push
push
pop
mov
loope
xor
insb
pop
or
in
dec
fs
shrb
inc
cmp
outsb
cmp
push
sbb
mov
inc
test
cmp
and
and
shl
adc
xchg
inc
push
je
add
pop
dec
mov
jp
adc
les
mov
mov
hlt
in
xchg
mov
push
mov
addb
mov
js
add
addl
orl
pop
mov
flds
mov
outsb
pop
rolb
jmp
adc
lock
ret
sub
das
inc
clc
sub
rolb
mov
lcall
xor
add
inc
test
jo
and
jns
mov
lcall
inc
lock
out
pop
in
ds
xchg
inc
ficoms
lret
sub
test
test
xchg
imul
push
add
repnz
lea
fisttps
pop
in
jmp
jne
cmpsl
jp
mov
repz
mov
ss
fwait
clc
ret
adc
adc
mov
dec
add
lods
stos
or
or
test
pop
movb
push
mov
or
or
inc
stos
sub
loope
push
xchg
fsubrp
fidivl
mov
adc
adc
popa
repz
mov
add
mov
in
cld
push
jnp
or
mov
or
xor
xor
les
shrb
and
pushl
inc
xchg
pop
mov
cmp
push
dec
ficoms
mov
movsl
add
pop
xchg
or
mov
add
jae
jge
mov
xor
test
sbb
add
aas
cmp
xchg
push
add
in
mov
adc
jmp
movsl
dec
movsb
mov
pop
xor
and
mov
out
sub
lods
mov
or
xlat
adcl
movsb
sbb
add
pop
add
pop
cmpsb
push
sbb
push
into
pop
loope
jp
mov
xor
pop
fldenv
clc
add
in
dec
aad
or
jbe,pn
cmc
dec
or
mov
cmp
lahf
adc
in
insl
jmp
jbe
adc
inc
aaa
xchg
inc
mov
imul
andl
dec
shrl
mov
insb
pop
add
pop
fdivs
add
adc
sub
mov
sbbl
push
jmp
mov
mov
aaa
testl
mov
scas
dec
pop
dec
xor
add
and
test
imul
rclb
jp
or
test
stos
sbb
or
push
jge
andb
sbbl
or
mov
pop
and
mov
sbb
xchg
and
bound
pop
loop
or
mov
mov
outsb
xchg
lahf
call
outsl
lea
sarb
movsl
filds
or
jnp
xor
in
movsb
in
mov
or
mov
stos
inc
mov
in
or
sub
jae
pop
push
jp
enter
rclb
jno
frstor
shl
xor
out
bound
dec
and
rclb
mov
jmp
push
loopne
std
mov
aam
fildl
loope
fsubr
lret
movsb
inc
push
inc
lods
lock
sbb
pop
cli
xor
inc
movq
aas
cld
popa
pop
lock
push
add
mov
push
jl
sbb
std
mov
loop
push
xchg
mov
jmp
mov
add
or
push
or
loopne
lcall
pop
sub
pop
xchg
add
outsb
mov
je
in
mov
leave
xor
js
dec
adc
inc
in
in
adc
inc
sub
inc
pusha
sub
xor
mov
add
pushf
les
cmpsl
add
sbb
or
enter
adc
dec
and
cmp
cmp
or
lods
aad
sbb
shll
gs
sbb
add
cmpsl
insl
dec
icebp
dec
inc
pop
add
scas
popl
rolb
aam
push
push
xor
addr16
lds
mov
add
and
mov
cwtl
or
pop
lahf
test
mov
out
jp
int3
mov
movsb
in
pop
mov
mov
adc
cld
xchg
sbb
insl
pop
rcr
mov
add
xor
jne
and
cld
inc
inc
mov
pop
cmp
test
xlat
fbstp
cwtl
mov
inc
rol
add
cmp
test
push
lret
xchg
xor
adc
mov
inc
inc
mov
lret
pop
out
add
sub
test
cmp
xor
add
aam
dec
add
fadd
and
imul
es
int3
sbb
xor
push
loopne
and
shrb
add
lods
mov
push
cld
pusha
in
xchg
pushf
add
popa
add
mov
ljmp
jle
leave
pop
or
lods
cmpb
in
adc
test
xchg
cmc
adc
and
push
jnp
push
xchg
xor
lods
inc
add
or
mov
mov
push
cmp
mov
or
dec
mov
push
jae
ljmp
push
aad
loop
aaa
cmpsl
xor
inc
into
dec
repnz
fimuls
push
xchg
inc
or
add
mov
adc
and
dec
test
lock
mov
out
clc
pop
je
or
or
sub
aam
ds
mulb
push
cld
push
test
hlt
test
push
jb
inc
mov
add
pop
push
adc
pop
sar
or
mov
fimuls
test
add
mov
jno
inc
int
rep
push
xchg
fs
push
shl
pushf
sbb
leave
aas
ljmp
jno
mov
mov
mov
les
inc
repnz
outsl
dec
cmpsb
pop
fmull
addb
xor
cmp
mov
fadd
jb
jnp
fwait
jecxz
daa
mov
inc
jmp
mov
inc
xor
mov
inc
cmp
pop
movsl
insb
add
cmpl
or
repnz
pushf
add
add
pop
gs
fwait
adc
jecxz
clc
test
sbbb
add
lds
cmp
fldt
enter
lock
or
cmp
test
xor
and
divl
and
jnp
xchg
and
addr16
cmp
addb
xor
lods
mov
mov
fidivrl
out
out
frstor
or
cmpsb
and
sbb
adc
dec
add
ss
push
sbb
pop
sub
out
ficompl
push
push
testl
pop
jp
or
testb
cmp
xchg
cwtl
sarb
lods
daa
sbb
or
mov
add
pop
dec
dec
dec
cmp
rolb
sbb
xor
cmc
add
out
mov
clc
add
clc
inc
les
push
ljmp
sub
test
pop
adc
stos
mov
push
flds
adc
sbb
jle
jg
pushf
add
js
adc
adc
pop
pop
add
int
sub
enter
pop
xchg
stos
sbb
add
fimuls
mov
add
xchg
jb
pop
mov
mov
sub
lds
nop
add
subb
fnsave
xchg
movl
xchg
stos
xor
sarb
pop
jmp
adc
lcall
ds
inc
out
inc
cmp
jge
cs
std
xor
mov
mul
jl
shrb
jle
push
add
lods
mov
outsb
cmpsb
mov
push
mov
pop
fidivrs
add
test
shll
ljmp
push
out
orb
lret
pop
ljmp
cmp
icebp
and
ja
into
shl
loopne
push
movsl
fistpll
add
and
out
gs
les
negl
mov
pop
add
push
cmp
je
rolb
sub
add
xchg
negl
push
bound
push
enter
int3
lock
or
mov
gs
ja
popa
cmpsb
nop
mov
les
cmp
jns
sbb
sarl
cmpsb
out
mov
movsl
mov
pushf
sbb
inc
stos
sbb
jne
pop
aaa
sbb
and
add
pusha
lock
repz
test
add
cmpsl
out
cmp
xchg
mov
mov
adc
jge
add
mov
enter
cmp
movsl
and
stos
push
inc
scas
or
inc
pop
mov
ss
jno
ja
cltd
push
xchg
add
mov
push
add
movsl
int3
adc
cmp
pop
xor
cmp
adc
and
add
shrb
sub
pusha
push
shlb
test
shll
pushf
cmpl
and
push
fmuls
cld
jne
and
add
jns
adc
xchg
jae
scas
lock
sub
push
in
sbb
inc
push
push
in
rcll
add
insb
mov
and
inc
push
push
lods
or
dec
lock
jge
xchg
inc
js
ds
mov
rcrb
add
xor
loope
jo
sbb
sbb
xor
pop
lahf
xchg
cmpsl
add
pop
xchg
xorl
out
idivl
incb
leave
sti
nop
sarl
lret
sbb
sub
mov
or
push
cmp
add
arpl
lret
add
cli
add
scas
insb
ss
xor
fistpl
xchg
sbbb
scas
adc
add
lods
cmc
dec
xchg
xlat
sbb
lcall
test
mov
mov
pop
pop
fdivl
fcomps
in
sbb
xchg
adcb
fwait
repnz
mov
push
pop
leave
jmp
cvtps2pi
es
fidivl
or
ret
adcb
cmp
shl
enter
stos
fsub
mov
out
sti
pushf
roll
aam
stos
leave
push
sub
xor
loopne
sbb
push
cltd
imul
jmp
add
jno
loope
pop
mov
test
add
leave
test
push
xchg
sub
je
jg
add
fsubr
dec
cltd
adc
pop
or
inc
test
pop
cmp
scas
nop
fiadds
jbe
sti
add
mov
xor
mov
jns
pop
jbe
sbb
xchg
add
repnz
add
add
testl
repz
bound
insl
dec
xor
popf
mov
pop
push
stos
pop
add
mov
push
push
ljmp
jne
xor
notb
enter
loopne
movsb
mov
nop
sbb
andb
aaa
leave
cmp
jns
add
ret
and
inc
ja
arpl
bound
pop
filds
aaa
sub
cmpsb
adc
cmpsl
add
lret
fstpl
loopne
sbb
insb
inc
xor
sbb
mov
sar
or
decb
and
sarb
in
ds
loop
add
cmpsl
mov
arpl
xor
push
pop
jl
pop
cwtl
rorl
dec
or
add
push
pop
add
andb
mov
outsl
in
add
add
inc
inc
rolb
loop
mov
dec
jno
add
cmpsb
cmpsl
mov
add
pop
push
repnz
and
outsb
test
shrl
push
push
mov
add
fmul
out
push
rcll
ja
loope
inc
pop
add
mov
nop
cmp
rolb
mov
xchg
add
es
dec
shl
dec
inc
inc
call
stos
pop
sub
xor
cmpsl
sbb
cmp
xor
xchg
pop
js
push
sets
adc
jo
call
inc
jge
push
sahf
add
andl
cmp
or
std
mov
dec
cld
add
push
sbb
mov
add
sarl
xor
pop
and
xchg
andb
jle
fnstsw
add
mov
mov
sub
pop
roll
pop
testb
xor
movsl
pusha
cwtl
leave
outsl
ja
pop
push
fwait
add
mov
lds
sub
xchg
or
sbb
cmp
mov
rclb
insb
cmp
or
jg
mov
nop
xchg
xor
int3
jl
and
imul
or
std
test
popa
ja
enter
inc
xor
dec
xor
lds
fsubl
add
aad
js
stos
cmpl
rolb
shlb
push
and
xor
jp
hlt
jns,pt
cmp
add
mov
lret
pop
jl
das
cmpsl
out
adc
cltd
and
lret
lcall
out
cwtl
dec
jbe
push
add
cmc
outsb
mov
add
sbbb
les
inc
and
mov
shlb
cmp
sahf
pop
add
inc
decb
cmp
test
faddl
sub
pop
mov
mov
clc
pop
add
inc
mov
or
push
loop
dec
adcb
dec
sahf
cld
add
jmp
out
add
mov
sahf
rclb
dec
lahf
sbb
inc
add
push
push
adc
add
loope
or
jo
fldl
or
das
adcb
sbb
fsts
nop
and
shrl
cmp
mov
xchg
sub
add
out
sarl
add
xchg
addr16
scas
aam
movsb
jno
loope
scas
dec
add
movsl
cmc
mov
dec
cld
cli
add
jp
addr16
jecxz
add
scas
fldcw
ret
push
xor
adc
sbb
jb
add
std
xchg
xchg
rcrl
adc
sub
cmp
cwtl
mov
jge
outsb
repnz
call
and
cwtl
add
inc
rolb
std
sub
icebp
push
cwtl
or
jb
ds
mov
jno
das
adc
lods
scas
add
jmp
popa
push
stos
fadds
shr
mov
pop
xchg
add
pop
in
aam
ret
jge
add
mov
cmp
jne
cmc
adc
add
into
xor
data16
pop
xchg
fiadds
dec
push
adc
mov
aas
jb
dec
outsb
test
loopne
sbb
imul
lock
data16
and
add
sbb
add
cmp
in
lock
or
cmpsl
add
icebp
mov
mov
or
cwtl
lcall
mov
add
mov
push
aas
das
xor
and
ja
inc
ds
sahf
mov
adc
das
pusha
pop
jno
dec
shll
add
pop
adc
mov
jmp
push
mov
inc
sub
push
je
and
or
mov
push
outsl
mov
cmpsl
lahf
add
jbe
sbb
sub
popf
jno
push
add
in
dec
idivl
loop
push
add
jmp
je
icebp
jl
mov
and
js
orl
xor
or
rolb
mov
add
add
or
cmp
add
mov
movsl
sbb
mov
add
pop
cmp
cmp
jno
mov
in
xchg
or
rclb
add
xor
pop
sbb
add
push
cmpb
sub
lret
pushf
test
and
test
leave
push
and
jl
add
add
test
add
inc
jbe
fsubl
sbb
add
push
das
arpl
fwait
or
loope
xchg
adc
shlb
cmp
pop
add
xorl
sub
lods
mov
mov
sbb
or
lock
test
jg
pop
bound
xor
add
fimull
clc
je
sbb
xchg
mov
jnp
add
cmc
or
jmpw
pop
xorb
out
aam
mov
mov
xchg
stos
pop
pusha
in
sub
cmp
cmp
add
in
mov
sar
or
add
lods
fwait
inc
push
push
add
add
repz
addr16
inc
pushf
mov
or
clc
dec
cmp
push
add
sub
add
popa
add
add
mov
jb
mov
scas
nop
mov
mov
add
mov
and
add
add
das
add
jne
cwtl
mov
add
adc
pushf
inc
add
cmp
mov
cmc
add
mov
in
mov
and
mov
les
fmulp
rclb
scas
cwtl
shrb
pop
mov
je
sarb
rorb
jl
fdivrl
gs
ja
pusha
movsb
inc
out
fs
in
scas
cltd
nop
add
push
push
js
mov
and
pop
push
int
add
inc
push
xchg
and
xor
call
in
add
adc
mov
pop
lock
iret
lds
add
pop
adc
cmp
cmp
test
pop
push
bound
inc
mov
push
mov
add
xor
jge
xor
cltd
dec
adc
add
fdivrl
cmp
ds
sbb
mov
outsl
sub
das
pop
push
scas
ljmp
add
pusha
cmp
jns
xor
xor
ffreep
je
movsb
test
inc
andl
data16
mov
imul
movsl
icebp
add
or
cmp
xchg
jle
aam
out
clc
and
fildl
add
sub
cli
mov
imul
jmp
fildl
ror
jns
jle
pop
push
dec
test
or
iret
addr16
dec
mov
test
mov
add
xor
es
lock
das
add
rorl
cmp
pop
decb
mov
repz
sub
add
js
popa
imul
add
push
mov
in
cwtl
add
mov
lock
add
ljmp
sub
push
inc
inc
xchg
fnsave
inc
out
jp
enter
addl
mov
sub
cmpsb
and
push
xchg
xor
inc
mov
cmp
out
les
push
add
daa
push
xchg
add
cmp
or
gs
jbe
ficoml
jmp
test
rorb
jmp
fadds
fistps
addb
stc
pop
dec
imul
add
in
mov
inc
jne
mov
pop
dec
pop
adc
cmp
push
dec
or
shr
out
enter
cmp
aaa
adc
jno
je
mov
pop
test
and
push
mov
pop
xor
or
mov
sar
mov
jbe
or
add
jno
dec
add
xor
cld
in
add
and
ja
add
cmpsb
fistpll
imul
inc
sub
cmc
sub
push
jno
adcb
push
adc
adc
mov
dec
xor
add
pop
jge
popf
and
fmull
mov
dec
out
rolb
lret
add
mov
add
adc
lds
jne
mov
add
adc
fidivl
sbb
adc
jbe,pt
push
ja
cmp
mov
subl
or
xchg
andb
pop
enter
fwait
cmp
sbb
push
cmp
popf
jmp
sbbb
ret
add
cltd
stos
push
xor
test
movsb
addb
pop
lahf
fidivrl
mov
sbb
call
pushf
adc
add
lods
add
cs
add
add
pop
cmpsb
je
pop
in
sbb
sub
mov
and
and
js
push
cwtl
in
adc
mov
imul
into
fisttps
mov
pop
or
es
add
xchg
xor
fdivs
mulb
pop
add
cmp
arpl
push
pusha
sbb
test
cld
sbb
mov
cli
pop
xor
sarl
jo
out
push
jge
jae
rorb
cli
or
push
mov
xchg
add
leave
mov
inc
dec
lock
rorb
cmp
cmp
imull
leave
add
adc
repnz
push
add
jg,pt
stos
xchg
roll
mov
andb
idivb
fsubr
shll
repz
xor
lock
inc
outsl
data16
out
jl
adc
xor
sub
negb
push
push
adc
lret
and
inc
adcl
add
mov
hlt
add
aam
test
add
cs
aam
sbb
adc
int3
sub
inc
lahf
addb
pop
mov
mov
int3
xor
lret
dec
repnz
daa
jmp
shll
lret
inc
mov
push
add
enter
clc
fmuls
xchg
dec
push
xchg
xor
push
add
push
movsl
pop
jl
sub
nop
add
push
dec
add
push
xlat
xchg
mov
inc
add
jp
and
mov
or
hlt
sbb
add
sbb
lds
pop
or
mov
bound
lret
imul
push
jmp
lock
testb
sbb
xchg
jle
jne
add
movsl
mov
xor
mov
and
xchg
pusha
add
jp
push
pop
icebp
test
add
leave
inc
inc
arpl
pop
aam
mov
lods
nop
add
push
or
repnz
inc
pop
scas
add
imul
arpl
cwtl
lcall
les
filds
jmp
ja
sti
lcall
popf
pop
aam
movsb
addb
cmp
push
xor
nop
int
xchg
repnz
push
push
add
xchg
jae
add
nop
cmp
aad
loopne
es
add
inc
cmp
push
sub
outsl
add
push
xchg
sbbb
sub
jo
dec
or
in
jb
jmp
push
mov
fdiv
mov
leave
adc
and
mov
pop
adc
dec
or
add
in
daa
pop
repnz
inc
add
cmpsb
inc
jecxz
cwtl
push
mov
add
movsl
adc
pop
negl
or
test
push
outsb
leave
adc
and
xor
push
enter
xchg
popf
rclb
mov
push
and
add
mov
es
fistl
mov
cmpsl
dec
fldenv
sub
inc
and
add
imul
es
out
icebp
mov
or
out
and
add
aad
test
fsubs
mov
adc
or
adc
push
scas
js
adc
sbb
mov
mov
je
push
mov
aad
add
mov
mov
jp
mov
xor
mov
ljmp
pop
adc
mov
mov
and
enter
mov
and
nop
outsl
xor
xor
mov
jno
add
inc
cmp
mov
sbb
cltd
cmpsb
int3
adc
dec
sbb
adc
jo
add
lret
inc
or
sbb
mov
mov
xchg
fstpl
bound
popa
add
jne
inc
xchg
pop
add
mov
xor
in
dec
daa
sbb
push
nop
jns
add
push
movsl
or
orb
inc
iret
addr16
pop
mov
and
and
and
ret
cwtl
test
push
xor
lods
loop
xor
add
lock
mov
ss
push
adc
leave
and
and
push
cld
inc
sarl
imul
jmp
xor
cmpsb
movsb
sbb
aam
push
sub
xchg
fisubrl
mov
es
add
push
mov
hlt
and
jmp
xor
rcrl
test
fldcw
jmp
mov
cwtl
pop
daa
je
mov
jmp
cmp
adc
push
xchg
sbb
call
clc
or
push
inc
cmpsl
sbbb
cld
adc
dec
adc
adc
jmp
sub
cwtl
movsb
ret
xchg
clc
loopne
lret
arpl
lcall
int
dec
add
add
fimull
inc
sub
dec
es
xchg
test
cli
add
add
and
cli
nop
add
lock
push
scas
cmpsl
addr16
stos
xor
and
repnz
imul
out
push
lods
xchg
in
cmp
push
adc
fadd
mov
clc
shlb
jno
test
fwait
mov
nop
and
jbe
pop
adc
pop
push
pop
arpl
inc
jecxz
dec
xchg
mov
or
lock
and
imul
xor
clc
xchg
rcrb
or
mov
mov
sbb
mov
stos
add
scas
adc
insb
inc
test
xchg
or
les
adc
rclb
pop
pop
mov
popa
jl
pop
fcmovnb
in
mov
dec
repnz
jo
mov
add
rcrl
add
test
jae
dec
cmp
push
aam
repz
mov
mov
sbb
pop
add
lea
rorl
jge
sbb
pushw
pop
xchg
and
sbb
flds
fucomp
aam
mov
pop
mov
sub
outsb
lret
sbb
sub
add
icebp
jne
sub
add
clc
scas
push
cwtl
shl
push
inc
dec
add
xor
pop
popf
inc
add
pop
add
ja
inc
je
push
mov
pop
hlt
inc
hlt
in
cmp
cmpsl
mov
mov
xchg
add
mov
dec
lock
dec
outsb
stos
or
shrb
jns
leave
out
cli
dec
sub
cmp
cld
dec
push
ljmp
ja
mov
and
push
mull
shrb
add
into
adc
hlt
cmp
and
inc
inc
int
pop
jns
add
or
add
adc
add
enter
adc
lretw
fadds
and
in
lods
and
out
push
notl
pop
mov
inc
add
icebp
adc
addr16
ds
insb
cmpsb
mov
stc
add
pop
ja
cmpl
cmp
mov
mov
cmp
fwait
jb
add
push
mov
sarl
xchg
push
inc
nop
arpl
add
fisubs
pop
shrb
or
fistpl
sbb
imul
hlt
aam
add
sub
add
xchg
movsl
xor
jle
daa
add
and
dec
dec
xchg
test
nop
and
lret
dec
dec
push
insl
inc
daa
std
lods
iret
inc
pop
add
les
ja
mov
sub
dec
push
add
inc
int3
out
add
into
cld
add
mulb
ljmp
lds
lret
int
orl
adc
hlt
add
push
inc
ss
push
jo
and
lea
add
jbe
divb
cmpsb
inc
inc
ret
in
cmp
xor
inc
in
or
fldenv
outsl
mov
data16
test
add
arpl
aam
mov
test
push
jmp
repz
loopne
mov
and
push
lods
and
aas
aam
dec
inc
jne
dec
je
add
decb
pop
inc
cs
adc
add
repz
and
sub
ss
cmp
pushf
add
xor
call
ds
stos
xchg
add
ds
cmpb
sbb
je
lret
cmp
pop
dec
and
mov
mov
xchg
or
adc
imull
dec
add
das
in
xchg
jnp
out
std
loop
push
push
int
mov
inc
mov
add
jl
loopne
add
shrl
and
and
add
push
inc
or
loope
es
in
adc
mov
jmp
mov
scas
mov
push
push
fsubrs
inc
dec
cmp
adc
scas
xor
imul
rcll
xchg
xchg
dec
add
cmp
add
nop
add
push
pusha
inc
sahf
mov
popf
dec
in
adc
adc
ss
push
in
js
xchg
adc
cmp
push
repz
pushf
xchg
and
cmp
or
fimull
orb
jno
add
xchg
mov
stc
and
bound
ds
out
movsb
xor
into
push
nop
aas
je
add
rclb
and
enter
rcrl
arpl
jle
add
jo
xchg
sub
outsl
cmp
mov
cld
inc
popf
rcll
or
xchg
inc
rolb
sub
mov
lock
nop
imul
pop
jb
and
or
mov
movsl
jnp
lcall
xchg
cmpsl
sbb
lea
popf
mov
popa
mov
dec
add
cmp
das
bnd
add
loopne
mov
sbb
xchg
adc
cs
btc
adc
mov
add
adcb
dec
inc
mov
addb
mov
push
cli
sahf
nop
je
sbb
test
jl
test
ret
pusha
adc
es
cmp
or
mov
pop
daa
add
mov
pop
cltd
push
dec
push
mov
aaa
add
divl
sub
hlt
jne
xchg
xchg
ret
push
pusha
adc
iret
push
jo
dec
push
enter
mov
xor
rolb
std
push
and
mov
pop
hlt
das
pusha
dec
add
cwtl
lcall
ja
fs
out
dec
nop
out
sbb
or
jbe
loop
mov
adc
rorb
pop
push
cmp
adc
jno
rolb
sub
inc
and
adc
xchg
inc
movsb
pop
jno
data16
cld
nop
in
xchg
adc
inc
inc
loopne
arpl
std
mov
ficompl
dec
sbbb
imul
ja
icebp
mov
jo
orb
mov
pop
mov
mov
pusha
mov
jle
dec
adc
push
xlat
std
add
sbb
cmp
pop
adc
inc
or
cs
xor
add
inc
shl
shrb
jno
add
in
pop
and
adc
push
imul
repnz
sbbb
mov
dec
lock
push
movsb
inc
rorb
add
pop
add
inc
mov
stc
aad
xchg
in
xchg
shlb
jbe
jmp
inc
adc
push
add
xchg
les
dec
cmp
push
push
pop
pushf
sub
je
pop
push
push
or
mov
popf
add
in
out
lret
fnstcw
xchg
dec
popf
mov
shrl
mov
sub
call
lods
mov
or
add
shrl
jbe
insb
out
add
sbb
mov
inc
in
shlb
dec
sti
mov
add
add
in
mov
andb
sbb
arpl
xchg
shr
or
add
int
mov
push
or
jp
or
xchg
dec
call
enter
dec
xor
jge
add
sbb
inc
add
mov
inc
dec
gs
inc
dec
clc
mov
pop
es
stos
pop
inc
add
or
fxch
cmp
test
ret
fimull
jge
cmc
add
call
rcrl
or
xor
test
adc
das
push
add
test
dec
or
xorb
add
inc
popa
mov
push
push
add
dec
and
scas
adc
ljmp
lock
addl
bsr
addb
ja
shlb
repnz
test
fcoms
in
lcall
hlt
add
xchg
add
inc
jo
add
pop
push
jne
xchg
mov
shl
cs
pop
add
add
stc
lods
mov
add
or
push
push
aad
notl
mov
repz
jge
add
and
adc
mov
add
test
sti
in
add
aas
push
push
pop
and
jge
add
sub
dec
add
fistpll
add
pop
out
es
iret
stos
adc
cmpsl
dec
push
xor
pop
dec
pop
add
addl
emms
jge
or
repnz
pop
xchg
and
pop
push
leave
adc
lock
data16
out
daa
or
xchg
add
mov
or
add
out
add
add
jg
inc
cli
lods
loope
pusha
adc
mov
cmp
andl
or
or
pusha
or
hlt
sbb
jo
loopne
inc
pop
iret
fcomp
push
cmp
es
adc
mov
mov
outsl
xlat
in
jns
xchg
cmpsl
add
and
in
add
test
push
pop
cltd
mov
frstor
out
lods
cmp
xor
xchg
aaa
pop
sbb
push
in
jno
add
cmp
or
push
or
pop
and
jl
test
mov
dec
adc
jl
loopne
outsb
sbb
inc
std
fld
mov
lock
lret
mov
and
mov
inc
add
push
jge
add
or
pop
inc
adc
xor
enter
fiaddl
sub
cmpb
add
repnz
lds
pop
sbb
push
les
mov
stos
sti
hlt
cmp
mov
into
pop
cmc
push
daa
pop
nop
pushf
nop
push
repz
mov
addb
sti
outsb
mov
and
mov
jae
mov
push
adc
add
xor
add
mov
add
mov
lds
nop
daa
in
dec
mov
shlb
inc
jle
js
cmp
lcall
push
xchg
cs
and
je
lds
lods
cmp
push
sub
add
sub
addb
lret
jmp
call
movsb
xor
fadd
scas
mov
jbe
inc
hlt
rclb
fisubs
les
repz
mov
dec
or
xor
incl
adc
push
pop
lahf
add
sbb
nop
sbb
sbbb
xorb
sbb
adc
inc
sbb
test
and
mov
imul
pop
imul
mov
daa
pop
fs
shrd
clc
jmp
shr
push
addr16
mov
xor
sbb
out
mov
add
pusha
or
adc
loope
push
mov
and
jno
mov
fwait
clc
psubq
sbb
shl
fidivs
jp
or
fisttpll
arpl
sbb
cld
or
outsl
adc
xchg
jb
enter
add
jmp
pop
jns
inc
xchg
mov
pop
add
imull
inc
or
loop
pop
lret
pusha
sar
mov
pop
dec
test
je
lds
add
push
sub
aas
aam
mov
add
pop
mov
jp
pushf
in
je
aaa
ret
add
inc
cli
add
pusha
sub
adc
inc
add
push
dec
loop
push
cmpsb
push
in
ja
mov
xchg
enter
sbb
mov
and
leave
in
movd
ret
pop
dec
ss
mov
and
adc
popa
je
add
mov
mov
pop
mov
xchg
out
ds
cmp
in
bound
pop
inc
inc
hlt
lods
notb
sub
pusha
add
in
aad
into
shrl
call
sar
dec
pushf
enter
das
push
add
mov
add
dec
movsb
cmpsb
jg
xchg
or
imul
ss
lds
ja
adc
add
jmp
inc
xor
mov
inc
sub
mov
imul
incb
enter
add
addr16
or
mov
xor
add
mov
rorl
xlat
mov
addr16
or
sub
add
ja
ja
sbb
imul
add
and
cmpsb
push
add
push
jge
jg
jnp
pop
mov
and
mov
mov
movsb
rclb
jl
add
pop
inc
cmp
insb
loopne
sub
fistl
adc
jns
lods
popa
add
movb
jb
or
pushw
sahf
cmp
je
hlt
inc
mov
cmpsl
and
fisubl
add
lret
or
fs
and
jmp
fs
dec
cld
lods
xor
xor
pop
mov
insb
in
repz
int3
pusha
mov
add
nop
push
in
fisubl
dec
shlb
and
mov
xorl
or
mov
stos
aas
xchg
mov
push
fistpll
xor
ljmp
pusha
cld
pop
add
push
clc
aam
daa
in
lods
pop
pop
jp
pop
xor
stc
jo
sub
addb
loopne
les
and
movlps
adc
mov
enter
sarb
pop
nop
add
iret
lret
pop
test
mov
lods
mov
cmp
cmpxchg
mov
mov
mov
std
mov
ja
inc
inc
das
pop
and
xchg
mov
aas
loopne
leave
or
add
mov
rcl
hlt
add
in
mov
adc
mov
push
in
and
loopne
push
leave
pop
push
or
insb
pop
push
icebp
in
jg
lods
faddl
inc
cltd
lcall
add
ret
and
scas
push
sbb
cmp
adcb
dec
xchg
sbb
fisttpll
lret
push
and
rcl
sub
inc
pop
cs
xor
jp
enter
rcl
inc
dec
pusha
dec
add
pop
js
mov
cmp
rorb
add
out
and
movsb
lahf
lret
je
repnz
sub
mov
stos
sub
fmuls
int3
js
add
testl
lds
aam
jbe
xor
dec
xchg
test
mov
nop
fidivrl
sub
inc
cmpsl
lods
jp,pt
push
xchg
xor
roll
cmp
push
xor
mov
cmp
push
addb
outsb
jns
sbb
dec
aas
push
cmc
mov
popf
nop
push
loope
xor
popa
ja
mov
dec
ret
lods
pusha
out
negb
inc
or
mov
cwtl
add
dec
cmc
push
loopne
sub
and
dec
xorb
into
rorb
iret
addb
out
ret
js
enter
fwait
push
mov
insb
inc
loopne
push
push
jecxz
arpl
clc
adc
push
inc
and
mov
xchg
push
sbb
and
add
pop
lcall
and
je
js
push
add
or
cmp
jno
add
push
das
repnz
outsb
stos
jne
or
cmp
mov
xor
lea
or
pop
sub
bound
add
mov
add
push
imulb
push
xor
cmpsl
data16
jl
ret
push
hlt
fldl
cmpb
std
scas
inc
call
and
aas
inc
and
xchg
sub
and
xchg
push
lods
movsl
rcll
mov
and
adc
xorb
add
inc
and
mov
jl
add
xchg
ja
add
xchg
adc
cmp
adcb
pop
dec
sbb
mov
test
jnp
mov
adc
mov
jle
mov
dec
repz
sysret
jnp
mov
add
jle
mov
jl
cwtl
push
cmp
pop
and
and
mov
cmp
enter
js
mov
inc
es
aas
pop
testl
addl
xchg
mov
out
add
lock
and
faddl
jns
push
shll
xor
jle
std
push
or
push
cld
cmp
daa
in
aad
inc
add
inc
loopne
lods
sub
popf
ret
mov
iret
and
push
jo
mov
aaa
and
hlt
and
pop
push
lret
pushf
lods
lock
andb
mov
ja
iret
inc
andb
push
pop
incl
adc
test
xlat
cmp
and
xchg
add
push
in
jb
aad
add
add
ds
imul
add
mov
pusha
inc
and
sbb
mov
repnz
mov
sbb
push
cmp
mov
dec
or
mov
in
loop
xchg
mov
xchg
add
jae
pop
dec
int
stos
pop
jno
jle
int3
aas
add
and
xchg
icebp
ja
add
lahf
add
pop
add
clc
mov
fnstenv
adc
addr16
xchg
adc
lret
inc
test
mov
push
sbb
xor
hlt
mov
add
mov
sbb
shrb
jmp
or
outsl
arpl
adc
mov
add
push
movsb
pop
inc
add
xor
sub
fcompl
add
out
loope
sahf
dec
stos
sub
push
mov
jl
xlat
push
mov
add
out
push
repz
mov
das
or
aas
rolb
cmpsl
xchg
pop
pop
dec
xchg
inc
cmpb
je
and
cld
mov
add
in
mov
xor
mov
adcb
add
clc
xchg
or
jno
popa
les
add
jmp
outsl
or
into
mov
and
and
fcoml
insb
in
xlat
push
or
push
sti
adc
and
movsl
fwait
pop
test
add
xchg
dec
add
add
rolb
sarl
push
int
lret
sub
mov
dec
jg
pop
in
xlat
lcall
enter
push
repnz
into
add
pop
push
les
and
out
movsl
jl
inc
sahf
push
rcr
add
xor
or
nop
push
pop
jbe
mov
pop
and
aas
or
add
fwait
out
dec
dec
clc
adc
and
and
enter
cmp
mov
popf
rolb
dec
push
xchg
jnp
cmp
in
fistpll
out
add
mov
adc
cltd
out
popa
add
loopne
xchg
incl
xchg
dec
mov
pop
sbb
inc
sub
loope
nop
xchg
test
xorb
les
sarb
std
pop
mov
imulb
sahf
adc
inc
mov
mov
fildl
sub
rcl
push
push
imul
sbb
sbb
ret
in
xchg
nop
adc
inc
sub
cmp
xor
nop
enter
shlb
arpl
mov
add
push
sbb
xchg
inc
or
stc
add
pushf
inc
pop
add
mov
xlat
dec
outsb
add
jl
pop
jge
mov
int3
sbb
xchg
xor
cld
out
adc
negb
cltd
and
pusha
dec
out
clc
mov
and
mov
test
aaa
sub
inc
xchg
add
add
inc
sub
cmp
mov
mov
icebp
mov
add
stos
bound
leave
aas
add
xchg
mov
push
inc
adc
mov
shll
xlat
mov
dec
out
lret
nop
add
aam
jb
adc
or
arpl
dec
adc
das
add
dec
notl
add
fistps
lods
pop
mov
adc
enter
cmp
mov
and
mov
nop
mov
cltd
add
push
icebp
jb
cld
aad
aas
xor
ds
popa
mov
adcb
add
push
lahf
mov
pop
mov
add
das
popf
pop
jae
adc
sbb
add
out
out
or
sbb
aas
inc
rcr
jnp,pn
pop
aas
jb
push
int3
pushf
imul
fs
pop
sub
or
enter
mov
inc
in
daa
in
cmp
dec
push
sti
call
xor
add
ljmp
loope
mov
in
push
sbb
pop
xor
pop
add
inc
faddl
sub
mov
xor
add
hlt
pop
clc
or
mov
sbb
push
nop
jl
pop
sahf
add
cmpsb
lock
fwait
test
loopne
and
jmp
push
lock
in
adc
insl
mov
add
repnz
mov
jbe
pop
lock
fdivl
negb
adc
dec
or
xchg
lock
aam
loopne
add
testb
negl
xor
in
lock
shr
dec
cmpb
cmc
sbb
lods
stc
pop
adc
leave
or
dec
mov
jl
lods
or
add
fcomp
dec
and
mov
add
frstor
cmp
ljmp
lods
pop
mov
pop
out
inc
add
pushaw
int3
push
cmp
int3
clc
inc
cli
push
add
outsb
xor
add
jnp
add
mov
adc
or
pop
mov
add
or
bound
pushf
imul
dec
pop
push
and
add
fdivrl
clc
das
sub
cmpsl
sbb
aaa
pop
adc
inc
adc
ljmp
sbb
and
fmuls
add
addl
mov
jno
add
sbb
shlb
sbb
and
add
icebp
pop
jg
mov
pop
out
ljmp
cmp
and
sbb
pushf
dec
ljmp
lds
push
pop
pop
test
fs
cwtl
shll
je
das
inc
sub
daa
aaa
orl
andb
pop
add
sub
test
enter
sub
and
out
cmpsl
ljmp
in
xchg
dec
daa
pop
cmp
push
aas
inc
push
push
mov
pop
jns
xor
xchg
xabort
pusha
stos
push
daa
mov
xor
in
and
push
je
pop
sub
pusha
scas
loope
adc
pop
inc
or
call
add
add
jl
push
stos
sbb
loop
jbe
es
xorl
add
repnz
push
and
xor
pop
movsb
jne
cli
sbb
xchg
mov
in
dec
inc
push
dec
add
xorb
jae
mov
push
mov
clc
jo
push
pop
pusha
das
loope
and
pop
xor
lret
and
clc
jge
add
daa
imul
fdivr
inc
push
shlb
inc
add
push
or
adc
pushf
lock
jmp
push
imul
xchg
sbb
xor
and
or
inc
and
xchg
int3
push
in
mov
push
mov
inc
or
xchg
or
or
push
rclb
cld
mov
pop
adc
enter
mov
dec
out
clc
or
filds
add
jmp
loope
inc
dec
iret
sbb
xlat
adc
shrl
jg
dec
xchg
mov
inc
fs
test
cli
pop
insb
loop
add
loopne
js
cltd
dec
das
inc
cmp
mov
ljmp
clc
xlat
inc
mov
pop
sbb
dec
andb
inc
test
push
imul
rolb
cmpsb
loopne
cs
pop
out
xchg
cmpsb
movsl
testl
push
xchg
add
mov
mov
in
fcoms
sbb
or
push
mov
or
cld
hlt
ret
out
jecxz
les
inc
cmpsl
inc
cltd
sbb
add
dec
sbb
outsl
mov
add
shrl
inc
test
mov
rcrl
test
loop
add
xchg
les
and
pop
and
mov
dec
cs
mov
nop
inc
bsr
dec
stc
xchg
pop
mov
imul
adcl
enter
inc
ja
les
mov
packssdw
pop
xchg
jno
pop
pop
xchg
add
mov
int
dec
add
adc
push
mov
and
repnz
mov
add
leave
inc
andl
test
sbb
std
mov
mov
pop
out
rorb
and
shll
repnz
cld
cmpsb
std
xor
sub
mov
andb
aad
add
bound
mov
popa
push
sbb
add
pop
and
jne
or
push
flds
test
jge
fs
xchg
shlb
push
insb
sub
jb
adc
stc
push
sub
stos
adc
pop
mov
inc
push
pop
jne
inc
int
push
bound
iret
cld
sub
sub
cmp
push
ret
inc
push
divb
inc
stos
out
mov
dec
add
sub
orb
fsubrl
jmp
xchg
add
add
jb
push
shrb
movsl
add
pushf
int3
nop
pop
arpl
adc
rcl
mov
js
and
mov
xchg
dec
push
or
pop
icebp
mov
roll
mov
cld
in
jbe
add
stc
sub
jno
add
xor
pop
imul
jns
sti
ror
sbb
push
add
ret
fs
sbbb
outsl
test
xor
ljmp
xchg
sbb
test
push
and
arpl
push
add
mov
lahf
push
jp
push
sub
inc
sub
mov
xchg
mov
push
test
adc
mov
mov
cli
test
push
mov
and
lcall
xor
sub
cltd
xor
lds
aaa
imul
pop
shr
fscale
sbb
jo
dec
push
lret
mov
dec
sti
and
xor
xchg
mov
mov
mov
pop
xor
cmp
shrb
test
add
mov
pushf
adc
mov
add
subl
xchg
std
sub
je
mov
adc
sti
add
addr16
loope
cli
roll
fmuls
jbe
add
cmp
int
pop
dec
add
or
sahf
mov
or
stc
sub
add
sbb
add
jmp
iret
add
jle
mov
dec
or
add
cmp
data16
push
es
test
xor
psubsb
iret
stc
mov
mov
pusha
push
add
icebp
dec
loopne
sub
lds
arpl
push
inc
add
push
and
adc
mov
loopne
movsl
add
test
add
xchg
mov
cmp
aad
add
loop
add
popl
icebp
mov
sbb
loopne
add
jmp
icebp
fwait
mov
faddl
or
jecxz
or
ljmp
fwait
ds
imul
dec
add
xor
jnp
mov
clc
outsb
push
add
add
jmp
movsb
pop
mov
fmull
bound
sbbb
int3
xchg
sub
and
cmp
xchg
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
test
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
imul
add
je
pop
add
xor
arpl
imul
add
insl
add
add
popa
add
outsl
add
add
outsl
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
outsb
add
xor
outsb
add
add
xor
arpl
imul
add
insl
add
add
popa
add
outsl
add
add
outsl
add
add
add
pusha
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
outsb
add
xor
outsb
add
add
xor
arpl
imul
add
insl
add
add
popa
add
outsl
add
add
outsl
add
add
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
pop
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
imul
add
je
pop
add
xor
arpl
imul
add
insl
add
add
popa
add
outsl
add
add
outsl
add
add
add
pop
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
outsb
add
xor
outsb
add
add
xor
arpl
imul
add
insl
add
add
popa
add
outsl
add
add
outsl
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
outsb
add
xor
outsb
add
add
xor
arpl
imul
add
insl
add
add
popa
add
outsl
add
add
outsl
add
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
add
add
pop
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
outsb
add
xor
outsb
add
add
xor
arpl
imul
add
insl
add
add
popa
add
outsl
add
add
outsl
add
add
add
cmp
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
xor
adc
add
push
add
add
imul
inc
add
imul
add
xor
xor
xor
cmp
xor
xor
xor
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
jae
insl
bound
fs
je
je
and
and
jb
imul
xor
xor
xor
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
or
and
insl
gs
jb
jae
data16
push
imul
fs
insl
jns
or
and
gs
xor
and
or
or
jae
jb
jo
imul
gs
outsb
push
arpl
cs
cmp
fs
jb
jo
imul
cmp
gs
outsb
fs
arpl
and
and
gs
outsb
fs
je
jae
gs
bound
and
and
and
and
jae
gs
bound
fs
je
je
and
and
and
and
and
and
gs
xor
and
or
and
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
and
and
and
and
and
jb
imul
xor
xor
xor
and
and
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
or
and
and
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
and
and
and
and
and
addr16
addr16
or
and
and
and
and
and
fs
outsb
fs
je
jae
gs
bound
and
gs
outsb
fs
arpl
and
jae
gs
bound
