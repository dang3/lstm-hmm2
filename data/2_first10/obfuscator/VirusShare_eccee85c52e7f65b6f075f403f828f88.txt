in
incl
add
push
push
mov
leave
pushl
rorb
not
sub
in
stc
mov
mov
mov
xadd
add
movsl
mov
sbb
loope
rep
sub
and
insl
ja
in
mov
dec
sub
mov
lea
std
mov
and
push
call
lea
clc
push
push
mov
out
jbe
mov
mov
call
push
push
mov
pop
mov
sti
fisttpl
push
call
or
mov
sub
sti
decl
outsb
add
add
add
add
test
jle
mov
mov
sbb
decl
add
pushl
dec
incb
push
mov
inc
jmp
mov
inc
xor
xor
mov
jl
fdivrs
std
push
lea
lods
add
add
jle
lret
call
jb
inc
ja
push
cmp
cli
mov
lret
orb
out
lock
push
push
adc
push
add
test
jne
lea
idivb
push
xor
loope
loopne
mov
add
dec
ds
fwait
in
adc
push
inc
pop
push
and
ds
cmp
add
jo
mov
test
add
adc
int
ss
or
or
mov
sub
mov
jbe
adc
jl
rep
ret
in
cmp
sbb
and
sub
push
cmc
add
sbb
push
or
bound
fisttpll
push
inc
sbb
in
fbstp
pop
pop
pop
pop
add
sti
inc
imul
mov
push
add
pop
std
ljmp
pop
outsb
mov
pop
xor
cmp
xchg
sub
bound
push
pop
jnp
je
push
push
or
jbe
or
sbb
cmp
ret
or
fsubs
gs
jl
test
push
insl
fucomi
mov
mov
fldl
adc
or
mov
pusha
pop
mov
adc
divb
insl
mov
mov
or
xorl
test
pushl
incl
je
add
jne
and
or
sbb
add
or
fstl
xorb
and
adc
xor
test
je
imul
not
jne
movl
xor
jg
jnp
jbe
mov
push
xor
cmp
setne
dec
out
sbb
out
jmp
mov
push
add
jbe
pusha
mov
inc
je
popw
pusha
fldt
imul
pop
push
movl
mov
xor
addr16
and
push
jbe
jbe
jge
lahf
lock
and
or
test
dec
mov
adc
jo
test
add
adc
jg
hlt
popf
sbb
push
in
jge
imul
inc
mov
or
pop
mov
std
mov
mov
fucomi
xor
negl
pop
mov
jmp
inc
adc
adc
insb
sbb
mov
and
xchg
add
cmp
mov
out
out
jbe
jb
mov
push
mov
jle
add
mov
sub
add
jmp
cmp
jb
test
out
fidivrs
jnp
jns
jge
je
ret
xor
mull
or
sti
cld
sbb
sti
fildl
cwtl
sub
cmp
jb
mov
jmp
scas
push
movsbl
xchg
loopne
daa
sbbl
movsb
inc
fcmovnu
dec
movsl
pop
jg
cltd
test
jne
ret
xor
and
js
and
cld
gs
sub
mov
inc
loope
xor
mov
xor
mov
shr
inc
cs
inc
sbb
mov
add
in
adc
stc
pop
pop
mov
mov
loopne
and
add
push
and
push
cmp
adc
stc
cli
out
mov
fisubrs
cmp
sbb
ja
es
insb
or
xor
add
jmp
test
xchg
pop
add
xorl
shl
lock
sbb
clc
mov
sub
dec
aas
dec
or
cmp
push
int3
mov
pop
stc
and
adc
mov
out
out
push
push
add
aaa
cld
and
inc
in
outsb
aas
cwtl
or
jmp
push
and
jge
fucom
fldt
aam
je
mov
into
mov
xchg
imul
jne
cmp
jo
mov
xor
sub
popa
in
sti
xor
xchg
add
push
push
push
pop
mov
mov
stc
xchg
or
adc
or
cmp
repnz
and
pop
clc
call
leave
push
call
or
push
jae
mov
pusha
ja
ret
xor
push
push
and
add
fdivp
inc
jns
xor
and
test
adc
cmp
retw
cmp
or
pushf
push
jl
pop
xlat
xor
xor
xchg
addb
pop
loope
jo
push
lock
push
jmp
mov
insb
and
sete
push
push
xor
mov
inc
call
pavgb
dec
in
jle
or
cmp
in
daa
jno
sbb
inc
cmpb
xor
jo
push
sub
xchg
pop
mov
or
dec
xchg
insl
orb
pop
add
mov
inc
cmp
into
leave
adc
clc
sbb
jbe
cmpsl
cmp
pop
nop
scas
xor
and
mov
adc
xor
cmp
fdivs
nop
je
jl
pop
ss
out
pusha
rcrb
fsubs
fiadds
xlat
push
sbb
sub
mov
sti
imul
cmp
insb
add
push
push
aas
jne
push
push
mov
xorl
jmp
outsl
mulb
cmp
or
cmp
sbb
xchg
pop
sub
inc
sub
frstors
push
adc
jge
inc
jb
jp
clc
jne
outsl
sbb
sub
add
hlt
and
xchg
in
movl
or
pop
pop
mov
sbb
add
or
loope
lods
cmp
shrb
mov
or
jge
in
sbb
push
or
in
add
repnz
pop
cld
add
push
shr
mov
into
mov
imul
imul
outsb
in
inc
mov
mov
mov
test
or
jg
stc
hlt
aas
dec
pop
or
iret
jbe
sub
dec
adc
add
jne
pop
and
mov
lcall
not
and
decb
jne
jne
xorb
orl
and
mov
adc
jns
xor
push
mov
add
jo
sub
or
mov
add
mov
jnp
pop
das
mov
loope
in
mov
adc
mov
dec
pop
cmp
cmpsb
jbe
mov
lret
mov
inc
ds
jbe
mov
mov
cs
mov
push
mov
fs
ret
sbbb
shlb
xchg
pushf
insl
pop
lods
dec
push
mov
add
test
xchg
sti
in
add
out
mov
cmp
test
or
lods
mov
mov
push
add
or
pop
add
and
out
neg
rorl
cmovbe
mov
jmp
jo
xchg
insb
or
or
iret
bound
imul
adc
pop
add
mov
jo
popf
test
jg
push
inc
lock
mov
or
iret
clc
xor
xchg
in
jo
int
femms
shl
add
mov
add
push
push
cmp
xor
push
and
add
iret
sbb
insb
push
ret
push
iret
out
paddd
or
in
inc
adc
jnp
pusha
add
adc
push
adc
lods
mov
pop
adc
adc
cmp
xor
hlt
mov
cmp
sub
enter
cli
les
push
shrb
pushf
insl
mov
das
cmp
and
sub
xchg
dec
add
mov
lods
mov
sub
das
push
ret
mov
int
popa
pop
jbe
pop
push
pop
mov
cmpsb
into
call
out
sub
in
push
divl
jmp
es
xor
rcll
or
dec
cli
in
ret
jne
jg
jae
mov
cmp
sub
jmp
decb
iret
jne
add
cmp
inc
mov
fiaddl
es
add
pop
and
adc
jns
outsb
or
aaa
jmp
es
sbb
out
pop
adc
mov
adc
pop
pop
adc
or
adc
sbb
movsl
adc
push
cli
dec
sub
mov
mov
mov
pop
fxch
adc
push
fldl
mov
or
mov
jne
mov
mov
mov
xlat
je
xor
lret
pop
jne
xchg
pop
dec
push
into
pop
cli
or
pushw
fs
xlat
jl
shl
inc
jmp
jne
mov
and
or
jg
jno
and
add
push
aas
jle
pop
cmp
fidivl
fwait
or
jge
insl
jmp
jl
pushf
shl
push
jb
std
in
and
mov
decb
jne
push
sub
and
jmp
pop
sub
mov
ss
jb
inc
mov
test
or
hlt
mov
clc
add
std
fsub
nop
test
or
mov
and
out
movsl
ror
decb
jge
les
leave
lea
mov
cmp
hlt
sbb
jmp
sub
filds
mov
lods
push
mov
out
or
push
mov
mov
jle
mov
jne
add
and
adc
cld
and
outsb
sbb
jns
jne,pt
test
lock
dec
cmp
imul
or
push
mov
mov
xchg
push
pop
mov
push
loope
movsl
push
movsb
push
xchg
push
push
je
xchg
lds
pushf
sarb
push
inc
xor
gs
xorl
je
push
gs
insb
nop
and
dec
push
inc
pop
data16
sbb
pop
insl
lods
and
mov
adc
inc
adcl
jl
cmp
jno
pop
sub
fadd
dec
loopne
mov
outsb
xor
aaa
imul
pop
push
ljmp
dec
test
sbb
sti
test
out
jns
inc
xor
mov
or
daa
adc
inc
shl
shl
ja
lea
dec
repnz
hlt
lea
cld
lock
push
hlt
ds
out
jmp
call
sbb
xchg
jbe
cmp
les
mov
mov
fs
inc
inc
mov
inc
mov
xlat
enter
jp
dec
inc
inc
or
jo
pusha
mov
movsl
mov
loopne
jo
inc
push
mov
int3
mov
mov
cmp
jge
pop
mov
jbe
adc
rcrl
insb
fdivs
and
push
insb
adc
loop
into
add
add
or
mov
shlb
nop
arpl
lcall
xor
jb
mov
loopne
mov
add
pop
jle
add
repnz
ret
sub
mov
popa
nop
jl
mov
inc
push
das
fnstsw
imul
pop
xorb
inc
adc
push
clc
rcrb
in
fcomps
mov
pusha
adc
lods
xchg
xchg
push
push
lods
and
nop
test
adcb
sub
and
adc
mov
neg
scas
arpl
push
and
inc
pop
clc
jbe
or
or
jb
stc
and
sbb
rorb
insl
mov
cmc
xor
mov
insl
leave
pusha
fwait
lret
sub
or
xor
nop
push
and
or
shlb
movb
or
testb
pop
xor
ja
push
lods
xor
jge
adc
movl
cltd
or
andl
lret
add
pusha
dec
xor
std
adc
or
pop
sub
sub
into
nop
push
sbb
jle
jmp
push
jmp
mov
sub
sbbl
out
test
scas
test
fs
lea
mov
pop
xchg
inc
or
mov
neg
pop
pop
xchg
mov
jmp
push
cs
outsl
inc
or
sti
mov
stc
add
test
xor
adc
sub
cld
add
jle
push
push
cld
das
test
rorl
cmpsb
push
and
je
adc
ret
pushl
andl
mov
pop
dec
inc
adc
jno
inc
push
fcomi
cmp
repz
cmp
jle
mov
or
testb
cmp
pop
push
sbb
pop
pop
sbb
or
sbb
mov
inc
mov
pop
sbb
mov
adc
bound
add
clc
inc
and
pop
dec
inc
cmp
mov
xchg
cmp
pusha
ret
je
xor
pop
test
jge
mov
cs
cmp
jb
xchg
pop
xlat
rorl
ret
jmp
test
test
sub
add
pop
jno
push
push
das
fsubrs
ficompl
lods
mov
arpl
fisubrs
insb
push
loope
popf
or
shlb
lahf
lret
jae
cmpb
aam
mov
inc
jmp
xor
and
mov
or
daa
cmpsb
dec
les
sbb
dec
imul
jnp
jne
xchg
lea
fstpl
sbb
sbb
add
xchg
lods
cmp
cli
insb
ror
enter
clc
jne
mov
adc
out
sti
mov
cmp
and
xor
cld
xor
mov
cmp
fistpl
scas
imul
lds
add
sbb
jge
add
inc
popa
sub
lcall
push
jb
dec
dec
outsl
cmp
addr16
rorl
ret
adcb
cmp
push
lock
mov
dec
pop
pop
cmp
sbb
adcl
mov
cmpsb
ss
lcall
push
cmp
test
mulb
pop
mov
adc
cmpsb
ja
add
xor
sub
andw
and
sub
leave
adc
mov
add
push
xor
fisubrl
pop
adc
inc
xor
loopew
testb
push
inc
test
jmp
hlt
pop
sti
adc
cmp
sbb
push
add
or
movsl
or
and
fcom
or
jg
cld
test
lcall
push
pop
inc
jp
adc
rcll
mov
cmp
push
pop
sbb
mov
clc
dec
add
adc
ret
pop
inc
jmp
cmp
sbb
ret
movsb
rolb
fiadds
sub
scas
je
clc
clc
add
je
push
push
push
pop
mov
mov
movsb
add
add
pop
push
lods
pop
je
mov
loope
sub
nop
jmp
or
ret
pop
xchg
sbb
and
jbe
adc
mov
mov
lock
dec
jb
inc
or
add
or
sbb
add
or
jp
rclb
push
inc
jbe
mov
incl
sub
dec
adc
dec
add
mov
imul
lock
faddl
out
enter
mov
lret
sahf
jl
sarb
xor
xor
or
push
jno
xor
cmp
hlt
add
jl
jecxz
aaa
insl
or
inc
adc
push
bound
pop
cmp
pop
or
mov
jmp
cli
ret
subl
jmp
lea
mov
roll
and
cs
push
push
sub
pop
cmpsb
push
dec
sbb
mov
adc
cmpsb
ss
idivb
jmp
movsb
lock
add
push
push
or
pop
mov
cmp
cmp
clc
jb
xchg
mov
mov
inc
add
or
rep
jmp
fcmovnb
mov
add
inc
loopne
enter
mov
cs
push
call
fildll
jge
sub
and
mov
mov
fstps
mov
add
leave
sahf
fs
pop
int3
lea
sub
mov
arpl
and
ss
and
inc
aas
mov
iret
mov
mov
xchg
mov
inc
in
cmpsb
imul
cmpsb
imul
mov
pop
test
add
adc
push
add
cld
mov
mov
mov
popa
nop
popf
or
insb
ss
adc
and
sub
add
cmp
jg
ret
testb
jo
fldenv
sbb
cmp
and
stc
sub
jne
sahf
sbb
or
or
insl
add
outsl
add
dec
push
and
or
mov
pop
mov
out
add
add
mov
daa
and
sub
push
scas
inc
pop
push
lcall
sub
cmp
lcall
xchg
sbb
lcall
adc
imul
imul
add
lods
mov
xchg
loopne
mov
xchg
and
and
sbb
lcall
jae
mov
push
imul
popa
je
cmp
ljmp
ss
mov
add
and
add
rcr
mov
add
dec
inc
cmp
mov
jecxz
cmp
pop
fisttpl
mov
xchg
cmp
jg
pusha
sub
je
add
je
imul
push
sub
inc
lods
popa
or
push
mov
fs
mov
mov
jmp
sbb
mov
jnp
jne
or
lcall
add
dec
cld
lar
add
cmc
cmpb
or
je
mov
bound
je
pop
or
push
jne
sub
xchg
cmp
mov
lahf
in
clc
jne
pop
clc
and
bound
inc
push
mov
push
call
or
pusha
push
xchg
cmp
and
push
mov
shll
jmp
les
cmp
jge
sbb
push
test
push
adc
jo
fisubrl
ret
sbb
add
mov
mov
in
loopne
jle
inc
inc
jle
je
ret
jne
mov
or
push
mov
incb
jmp
cmp
jmp
push
pop
testb
inc
sbb
and
push
jbe
rorb
cmp
cmp
sahf
daa
cmp
test
ret
sti
cmp
scas
add
push
pop
add
in
sub
mov
shrl
call
push
pop
repz
fistpl
sbb
push
out
ret
imul
adc
sub
sbb
xchg
xor
add
adc
and
mov
push
push
sub
mov
cmp
ret
pop
shrl
fs
decb
ret
push
mov
and
mov
mov
cmp
pop
and
int3
push
xchg
fmull
cmp
jb
scas
lcall
push
shlb
pop
xchg
and
pslld
adc
and
fistpl
idiv
sbb
or
pop
ret
subl
ss
adc
out
or
jno
jle
jae
jo
std
xor
add
push
or
cmp
fwait
sbb
add
xchg
push
loop
test
adc
mov
imul
sub
test
pop
adc
cltd
and
adc
xor
out
add
add
mulb
or
push
sbb
or
adc
inc
push
or
push
fldenv
jne
sarb
rcrb
or
inc
jb
mov
adc
mov
push
popf
mov
pushf
pop
jl
xchg
adc
jbe
int3
xchg
adc
push
outsb
adc
shlb
and
pop
push
mov
or
dec
enter
daa
aam
out
push
cmp
add
or
lret
dec
push
andb
sub
sbb
test
fldt
xchg
inc
dec
jge
shlb
push
incl
ja
std
add
inc
add
and
pop
jmp
mov
mov
jge
shrb
push
cmp
push
in
fnstsw
pop
mov
pop
pusha
pop
idivl
mov
stc
mov
mov
subl
add
sbb
pusha
das
pop
lcall
lret
shr
sbb
and
dec
jl
jmp
mov
sbb
push
insb
jle
fmuls
mov
cmp
arpl
pop
in
stos
mov
xchg
test
push
dec
or
add
inc
add
inc
cmp
jl
adc
or
cmp
jne,pt
sub
das
jne
push
pop
jmp
or
neg
sbb
xchg
cmc
xchg
mov
es
je
push
jo
mov
pop
mov
dec
out
mov
jmp
sbb
or
add
addb
jl
mov
jmp
jnp
aaa
push
jno
xchg
inc
jae
lea
pop
push
cmp
push
fnstsw
mov
and
jb
xchg
popa
push
jge
add
in
or
jne
enter
daa
fidivrl
fists
addr16
adcl
rcr
loopne
cmp
je
dec
insb
icebp
inc
dec
aaa
mov
push
add
insl
stc
mov
repz
je
xor
inc
or
test
cmp
je
push
push
cmp
aas
dec
and
inc
orl
outsl
jg
cs
popf
ss
lcall
pop
sbb
sbb
insb
adc
xor
add
out
scas
mov
and
push
cld
cwtl
stc
rclb
cmp
mov
sti
mov
adc
push
add
push
push
push
lahf
daa
and
mov
imul
pop
imul
or
sbb
mov
mov
add
or
add
sbb
lea
adc
pop
scas
aam
vpmuldq
add
dec
aaa
sahf
jmp
and
mov
inc
cmp
aaa
cs
test
je
movzbl
testb
add
pop
sub
mov
mov
testb
fiadds
jbe
into
or
lret
inc
inc
insl
mov
add
sti
mov
sbbl
mov
inc
and
jmp
lods
or
or
jne
dec
ret
dec
imul
sbb
dec
mov
mov
sti
lcall
adc
int3
mov
enter
hlt
outsb
test
test
pop
jne
mov
xchg
sub
ret
add
in
push
pop
sbb
insl
or
jecxz
push
subb
ret
add
shlb
fldt
sbb
xchg
ret
shr
mov
dec
test
pop
jnp
movb
inc
mov
jne
andb
aam
push
mov
enter
sarl
loop
push
test
es
sbb
inc
add
add
sub
ret
inc
outsb
xlat
femms
daa
fcmovb
frstor
mov
sbb
push
adc
sti
pop
ret
dec
and
mov
push
jp
loopne
rcr
outsb
push
mulb
jne
aad
out
mov
cmp
sub
shlb
pop
ljmp
pop
sub
in
inc
or
daa
ret
mov
jmp
inc
or
jne
push
or
repnz
pop
mov
add
add
xor
movsb
pop
into
call
adc
adc
push
push
lea
and
mov
add
pushf
mov
push
and
movsl
test
push
pusha
iret
je
inc
cmp
xchg
mov
clc
add
sub
push
into
sub
adc
mov
lret
lds
adc
and
cmp
and
out
mov
inc
pop
adc
push
lds
dec
push
sti
mov
inc
or
gs
cmp
sub
or
jl
xor
out
fimuls
rolb
cmp
insb
es
pop
sbb
jo
shl
ljmp
icebp
adc
add
int
or
je
sub
pop
adc
pop
lods
mov
mov
cmp
sub
push
mov
dec
ret
scas
aad
add
cmp
popf
dec
dec
outsb
push
pusha
ljmp
xchg
lea
sbb
roll
lahf
int
adc
and
daa
jl
icebp
lods
jo
pop
sub
jmp
add
xor
orb
hlt
push
pop
mov
mov
add
int
enter
sub
ljmp
mov
pop
jl
add
add
add
add
sub
mov
call
lcall
mov
and
andb
jnp
or
lock
add
imul
adc
xor
or
add
or
subb
shll
pop
push
xor
cmp
inc
shll
ja
xchg
pusha
nopl
roll
cwtl
test
bt
mov
scas
dec
xor
loopne
fidivs
js
mov
add
sbb
sbb
int3
push
jne
push
xlat
add
shll
inc
sbb
sub
push
and
inc
lock
and
test
adc
cmp
inc
addl
pop
or
adcb
ljmp
test
jmp
adc
inc
adc
fucomip
mov
mov
adc
sub
aam
add
cmp
aas
inc
lds
bndldx
clc
xor
mov
pop
jl
pop
out
pop
pop
or
add
or
push
or
mov
cmp
pop
add
jo
add
add
cld
inc
cmpl
mov
les
inc
or
incl
test
push
mov
lea
pushf
inc
cmp
rcr
sbb
mov
stos
leave
push
movsl
insb
je
adc
push
push
pop
cltd
idiv
dec
add
push
icebp
xor
clc
and
std
out
mov
mov
jmp
mov
stos
push
dec
lea
ljmp
add
ret
dec
push
sub
out
add
jmp
shl
mov
or
dec
daa
xchg
add
sti
jp
push
cmp
push
lock
mov
cmp
stos
lock
jne
push
or
sub
adc
dec
xchg
lret
pop
mov
add
jmp
div
fisttpl
add
pop
jmp
pop
adc
jg
pop
or
dec
and
dec
mov
add
popa
lods
jbe
pop
inc
jle
push
lods
mov
cmp
orl
jle
adc
jae
lcall
lea
ss
add
pusha
cmp
add
fadds
mov
push
cmp
add
sbb
push
pusha
insb
aas
cmp
shl
testl
xor
pop
inc
inc
rcr
negb
and
mov
push
dec
mov
int3
ret
push
roll
jb
ret
ret
scas
pop
mov
pop
es
push
push
add
pop
leave
adcb
sub
mov
aam
jb
imulb
pop
mov
adc
inc
xorb
push
inc
movsb
js
cmp
and
in
fsubr
pop
sub
or
inc
sbb
jmp
or
in
add
adc
loopne
and
popa
add
cltd
jae
xor
jb
xchg
pushf
mov
inc
add
mov
sub
cmp
cmp
mov
cs
in
nop
pop
call
sub
inc
call
incb
shrb
subb
adc
lds
or
jmp
dec
dec
incl
mov
ret
jecxz
bound
sbb
movsb
enter
mov
add
jmp
sbb
test
ficompl
ljmp
lret
je
xor
je
jne
adc
and
into
jmp
or
das
fists
roll
pop
jge
and
mov
inc
cmp
jg
je
cmp
inc
jo
inc
sub
je
pop
sbb
or
dec
or
mov
add
pop
clc
jmp
es
ljmp
push
cmp
jo
push
sbb
mov
push
jne
cmpsl
add
movsl
push
mov
je
adc
addr16
not
and
aaa
and
ffree
or
test
add
imull
fisttps
adc
jmp
test
push
or
das
fisttps
jne
sbb
sbb
mov
lods
push
mov
sbb
bound
cmp
shlb
xor
adc
dec
jge
xor
or
pop
jmp
pop
movsb
jg
ds
or
xor
aaa
xchg
mov
mov
mov
add
jecxz
ret
push
dec
mov
mov
ljmp
insl
scas
rol
test
mov
mov
std
cmpl
shll
icebp
fistps
jmp
inc
adc
adc
into
cld
pop
imul
or
sbb
mov
cmp
bswap
inc
add
mov
movsl
out
je
js
or
loopne
rolb
inc
stos
add
pop
dec
das
je
lea
and
xor
fwait
jp
mov
push
jne
mov
mov
add
andl
imul
add
std
outsb
cld
and
cmp
sbb
test
push
pop
fsubr
int
jmp
xchg
xchg
mov
add
jmp
std
jmp
cld
pusha
or
mov
rolb
mov
inc
mov
mov
inc
bound
jmp
mov
sub
push
subb
loope
xor
outsl
in
lods
test
daa
test
cmp
sub
cmc
pop
ret
data16
inc
or
or
xor
ficoms
xchg
out
sti
lds
jecxz
and
push
loope
adc
sub
ret
or
pop
xchg
dec
es
cld
inc
mov
fistpl
movsl
pop
pop
xor
sbb
movsl
pop
pop
outsb
add
out
imul
fidivl
adc
dec
xor
ucomiss
cmp
je
imul
jno
pop
jl
and
push
cmp
cmp
mov
fcmovnu
ljmp
push
mov
stos
add
mov
xchg
push
jge
divl
dec
out
jg
or
adc
les
loopne
jp
testl
adc
out
sbb
lcall
push
loope
lret
rep
add
lea
das
pop
sbb
dec
aam
jmp
add
ret
jge
cmp
ja
cld
mov
nop
inc
inc
adc
inc
inc
cmpb
aam
test
ret
or
pop
pop
loopne
rorl
ss
outsb
add
mov
data16
jo
ret
std
std
imul
inc
dec
test
or
mov
or
lock
lds
jb
push
cmp
mov
push
and
pop
jp
cmp
inc
fldt
dec
flds
cmp
add
jmp
jnp
xchg
sbb
sub
pop
jge
dec
ljmp
push
mov
adc
mov
pop
add
je
dec
sub
jo
jo
add
pop
add
je
int
cld
jb
add
add
adc
or
push
jno
and
add
add
pop
pop
mov
jno
imul
push
xlat
and
jecxz
adc
aas
sarb
mov
jne
pushl
mov
movb
lea
repz
shrl
sub
and
mov
out
mov
out
stos
inc
inc
mov
pusha
mov
jne
imulb
lds
xor
push
cmp
test
sbb
xor
std
sbb
push
push
push
xor
inc
loop
xsave
stos
daa
mov
pop
lea
iret
push
ret
adc
xchg
add
jmp
sbb
in
mov
pop
jmp
andb
sbb
jmp
adc
jbe
jb
add
mov
enter
mov
dec
pop
sbb
ja
and
and
loopne
dec
mov
dec
push
insb
enter
std
test
push
outsb
and
repnz
sahf
mov
les
out
testb
sub
mov
hlt
pop
loopne
adc
or
push
mov
or
push
call
pop
test
stc
or
push
add
adc
cmp
add
and
push
push
insl
jp
push
sbb
test
lcall
pop
jp
jne
jmp
mov
inc
mov
inc
dec
sarl
addr16
jmp
jne
and
lods
call
sbb
sbb
mov
xchg
cmp
cmp
fmull
insb
sbb
cli
sub
insb
adc
ljmp
add
sub
sahf
or
push
or
cmp
sbb
cmpsb
clc
or
add
push
in
push
or
pop
aaa
insb
xlat
loop
push
mov
test
dec
push
sub
loope
sbb
cli
lea
ffree
loop
sub
shlb
sti
push
adc
pop
test
lcall
je
dec
leave
loopne
sub
mov
lea
xchg
adc
lret
rolb
mov
enter
mov
sbb
adc
and
std
jne
mov
mov
push
jp
sub
repnz
jp
bound
inc
dec
aaa
sti
test
in
insb
mov
sub
sbb
test
fsubs
or
xlat
es
sub
pusha
or
sbb
pop
jmp
jge
mov
mov
adc
inc
dec
mov
dec
int3
neg
sbb
add
bound
sbb
movsb
and
outsb
aam
mov
ret
ficoms
mov
pushf
pushf
gs
jle
sub
or
daa
push
add
cmp
lods
sbb
adcl
push
push
sahf
mov
add
insb
xchg
fcmovnbe
mov
inc
jge
fwait
sbb
or
dec
adc
add
outsb
xor
add
add
vmovhpd
mov
rorb
push
gs
fwait
adc
insl
xchg
and
pop
mov
outsl
inc
fstl
add
push
mov
push
test
jp
inc
cmp
stos
sarl
or
push
bound
or
insb
inc
cs
ud0
pop
xchg
push
pop
add
xor
sbb
or
dec
cmp
adc
add
push
sub
insl
rorl
push
pop
ja
inc
inc
jmp
push
add
iret
roll
sbb
push
addb
shl
and
ret
stc
adc
mov
inc
mov
jmp
cmp
fistl
lea
jmp
push
or
popa
or
inc
inc
ljmp
sbb
sub
or
imul
je
push
inc
rcr
xchg
mov
sub
test
aam
add
fdivrs
andps
fs
outsl
adc
xchg
jne
and
ror
sbb
gs
and
fucomip
inc
push
push
jp
push
xor
xchg
xchg
or
fcoml
push
sbb
mov
jmp
and
fdivrs
insl
add
add
stos
cli
andl
adc
jp
push
fld
inc
push
clc
mov
sahf
lret
sbb
sbb
adc
add
inc
jb
push
mov
roll
mov
pop
mov
fisubl
jae
pop
lea
inc
push
aaa
and
mov
pop
in
pushf
jo
push
fildl
mov
cld
repnz
adc
subl
outsl
insl
lods
mov
mov
fdivl
xchg
lods
int
push
dec
fsubl
push
hlt
das
pop
negb
sbb
fdivs
jb
or
xor
mov
aad
lea
push
fidivl
dec
shlb
dec
cwtl
daa
gs
loope
jg
mov
insl
mov
add
loopne
pop
imul
jae
lods
jnp
je
push
fs
je
mov
data16
push
add
push
mov
push
xor
xor
and
jno
inc
rolb
test
rcr
test
cmp
loop
dec
cmp
or
xchg
sub
sbb
dec
mov
dec
inc
inc
mov
leave
sbb
xor
ds
push
pop
push
push
jl
rorb
sbb
cmp
addr16
push
sbb
xchg
pop
out
pop
mov
sbb
add
push
xor
xor
xchg
iret
enter
pop
sbb
data16
and
inc
sub
fistpl
loopne
arpl
inc
stos
sub
scas
jl
mov
hlt
loop
push
int3
rorl
movsl
sbb
jmp
orl
fldcw
inc
sub
push
pop
sbb
in
loope
push
push
clc
xlat
xchg
test
adc
cmc
int3
push
pop
push
cmp
push
fdivrs
and
push
adc
and
add
and
jmp
cmp
inc
mov
rorb
push
jecxz
sbb
push
fmul
push
cmp
pop
pop
jb
sub
fimuls
mov
jae
dec
push
or
loope
clc
push
mov
sti
inc
add
das
mov
sti
lods
or
sub
fcompl
xchg
mov
inc
add
inc
out
cmp
addb
cmp
mov
mov
dec
ror
pop
clc
push
out
incb
lods
xor
xchg
or
mov
das
jo
movsl
mov
cs
je
rcr
out
mov
jbe
mov
mov
mov
mov
imul
push
inc
inc
sbb
lock
push
or
ret
popl
mov
push
loope
xor
jns
push
jecxz
push
push
or
jno
fwait
add
add
push
mov
or
insl
sub
dec
add
mov
pop
pop
ret
sbb
mov
push
inc
xor
pop
inc
xor
cli
or
cld
and
testl
imul
lods
xchg
add
and
or
pop
mov
shll
jbe
je
push
push
lea
test
fsubrp
outsb
or
inc
or
xor
and
mov
sbb
ss
dec
mov
fimuls
xlat
insl
push
or
or
sbb
mov
test
pop
jae
or
xchg
mov
cmp
push
add
push
and
or
mov
inc
push
sbb
pushl
outsb
je
insl
and
jb
jb
or
push
push
pop
nop
jmp
push
add
dec
inc
add
in
notb
push
xor
cmp
sub
std
in
bound
and
imul
push
sti
stc
data16
daa
aaa
outsb
outsl
je
add
cmpb
jae
popa
arpl
data16
outsl
ja
cmp
in
outsl
outsb
aaa
ss
and
jo
jb
jbe
fldt
in
jb
jne
xor
or
insl
or
bound
pop
xor
sub
fisubrl
gs
das
pop
push
fsub
pop
fwait
sti
ret
cmp
outsl
jo
pop
xor
subb
pcmpgtb
arpl
cmp
ret
inc
and
gs
nop
jl
and
insl
jne
lods
sbb
mov
je
mov
arpl
or
fs
cs
ret
lods
xor
insl
add
addr16
sub
popa
insl
and
ss
xor
adc
in
lea
xor
sub
push
ret
popa
jb
jne
jae
xor
outsb
outsb
subb
cmp
fs
dec
sub
pusha
cmp
push
imul
push
fdivl
xor
jb
daa
or
push
inc
push
and
push
aam
ss
mov
ret
add
mov
ja
sbb
je
popa
mov
ja
xor
jbe
push
scas
jne
adc
lods
insl
xorps
xchg
jae
addr16
outsl
popa
sbb
js
add
and
sub
add
add
or
popa
sarb
inc
add
aaa
or
push
inc
fistl
and
xor
repnz
push
and
bound
ja
outsl
xchg
bound
gs
dec
dec
inc
add
jnp
pushf
in
inc
adc
addr16
and
mov
mov
add
leave
cmpsb
xchg
dec
adc
mov
add
arpl
add
cmp
imul
imul
fs
or
or
or
negl
push
cmp
xorps
rorb
add
pop
inc
push
sbb
and
insb
nop
inc
push
xor
push
sbb
pop
push
pop
pop
jnp
pop
lcall
jo
jb
in
jnp
das
xorb
push
sbbb
test
xchg
sub
sbb
inc
sbb
xlat
or
pop
shlb
or
pop
or
pop
push
push
or
or
cld
or
adc
jl
pop
adc
push
hlt
sbb
sbb
in
xor
and
adc
add
popf
in
mov
scas
pop
push
lock
dec
testl
lea
and
add
and
nop
xchg
xchg
sbb
xor
xchg
add
pop
or
cmpsl
add
add
jbe
out
sub
cmpb
pop
cmpsb
filds
sahf
jg
jns
movsl
sbbl
fldenv
test
mov
cmp
enter
inc
test
fisttps
in
sbb
in
call
sbb
push
add
pop
pop
fisubrl
xor
jg
rcr
fsubp
stc
cmp
jle
mov
sbbl
or
add
add
add
add
add
add
xchg
push
scas
push
push
push
jmp
out
sbb
inc
jg
fs
ss
bound
ss
jg
push
inc
jnp
cmp
xor
dec
dec
or
add
or
mov
out
mov
in
sub
es
jg
sub
and
and
inc
jne
pop
inc
push
pop
adc
iret
decb
negb
sbb
add
xchg
dec
outsb
fstpl
add
push
add
out
add
lret
lret
pop
inc
mov
inc
dec
adc
push
fadds
jne
add
and
add
adc
push
push
fnstenv
push
xor
xchg
sbb
push
mov
or
or
jmp
bound
shlb
repz
mov
lcall
mov
cmp
dec
sti
mov
push
pop
adc
sti
lcall
xor
add
dec
add
cli
mov
leave
call
or
push
inc
shll
mov
sahf
pop
fists
xchg
add
lcall
fcom
pop
das
ss
dec
fs
lahf
fwait
mov
popf
popf
xchg
push
xor
daa
push
jp
call
cmpsl
leave
lret
pmullw
cmp
shrl
aam
mov
ds
pushl
aad
mov
std
inc
add
xor
fistps
loope
ljmp
test
fdiv
in
loopne
xchg
xor
pop
jnp
inc
movsl
adcb
call
xlat
in
push
faddp
bnd
xor
sbb
and
jbe
sbb
dec
mov
sub
cmp
xchg
andl
ljmp
push
push
jp
fsubr
and
bound
pop
out
inc
sahf
movsb
es
inc
inc
out
fdivs
jno
pop
pop
mov
push
push
shl
pop
mov
pop
ss
xchg
mov
ljmp
and
adc
push
xchg
out
cmpsb
negb
push
xchg
adc
arpl
ljmp
in
bound
adc
scas
dec
mov
repz
jb
xchg
jp
xchg
jp
sbb
sub
aaa
mov
fcmovnbe
sbb
int
jl
inc
add
stc
sbb
idivl
xor
incl
negl
mov
xchg
fiadds
xor
and
add
rclb
dec
sti
fstps
sbb
ret
pop
sub
inc
lahf
adcb
lea
and
icebp
mov
dec
push
cmp
sbb
jecxz
sti
lods
nop
pop
sub
jp
push
jmp
popf
or
fcompl
sbb
fstpl
fs
jae
orb
ljmp
inc
xchg
adc
jo
xor
cli
push
jae
pop
jl
mov
data16
add
out
lahf
mov
push
lret
add
decl
cmp
sbb
loope
into
shll
imul
lcall
pushf
inc
pop
or
lcall
out
or
pop
movsl
pop
cmpsb
dec
jns
add
popf
and
enter
int3
iret
jp
sbb
ljmp
lret
adc
mov
push
dec
bound
test
lea
rcl
mov
loopne
outsb
call
adc
lret
push
pop
xor
mov
sub
push
jge
jl
outsb
pop
decl
sbb
aam
mov
xchg
jno
cli
out
into
movq
adc
mov
mov
jg
inc
add
or
mov
lret
xchg
lret
jmp
out
lret
push
xchg
mov
ljmp
imul
cld
aad
aaa
xor
adc
inc
mov
push
adc
jmp
lcall
sbb
and
popa
adc
rcr
outsl
pop
movb
call
arpl
pushf
pop
and
push
push
rol
fwait
or
or
loope
jmp
jmp
js
push
xor
inc
outsb
pop
dec
xor
mov
adc
jne
iret
or
add
decl
or
sub
mov
jbe
push
mov
cli
rolb
imul
add
xor
add
jbe
push
sbb
xor
xchg
mov
outsl
cld
mov
lods
xor
xor
mov
popf
dec
sub
lcall
jmp
xchg
xchg
pusha
pop
fsubr
cmp
lahf
xchg
cmp
ljmp
inc
dec
mov
mov
iret
dec
cmp
int3
call
or
jg
xor
xor
lods
add
fsubrs
lds
inc
aas
mov
nop
or
and
ljmp
push
out
scas
repz
dec
cmpsb
rclb
dec
das
sbb
mov
or
js
mov
test
pop
fcoml
push
xor
rcr
adc
repnz
mov
mov
hlt
incl
jmp
sti
pop
sbb
aaa
push
cmp
sub
aaa
push
xchg
lods
dec
sbb
ret
in
jp
inc
lahf
jo
sub
sbb
cmp
pop
mov
xor
repz
js
ss
xchg
add
push
push
sbb
cmpsb
loope
mov
incl
cmp
sub
lds
dec
movsl
dec
iret
orb
pop
cwtl
xchg
mov
cmpsb
adc
xlat
ljmp
jle
pop
inc
xchg
mov
add
pop
cmpsl
xor
inc
lcall
fiaddl
ljmp
das
inc
inc
pminsw
xlat
or
dec
fs
sbb
push
lea
push
push
sbb
cmp
decl
pop
je
xchg
xor
xchg
push
mov
jle
pop
pop
sbb
loop
les
ss
pop
cli
inc
sbb
loope
mulb
push
decb
mov
lret
call
adc
sbb
mov
sbb
arpl
mov
adc
aaa
enter
lcall
bound
pop
int
cmp
xchg
push
js
xor
sbb
cli
and
ljmp
ds
lret
dec
push
roll
mov
adc
int
inc
popf
fs
arpl
adc
pop
in
call
ds
pusha
cmpl
sbb
in
mov
icebp
adc
lret
icebp
jmp
pop
adc
fiadds
loopne
sbb
cli
adc
xlat
int3
aad
inc
out
fstpl
fisubs
or
ljmp
int
int
or
into
mov
cmp
pushf
pop
cli
pop
test
clc
mov
sub
cmpsl
jb
xchg
and
push
shll
inc
aas
lret
xchg
stos
dec
in
fdivp
test
imul
call
inc
jg
or
in
popf
lods
add
and
mov
xchg
or
bound
lcall
inc
inc
int
cmp
dec
pop
push
ds
mov
ja
jg
ljmp
xchg
aas
ljmp
lea
sbb
jb
adc
insb
ds
sbb
cmp
jge
aaa
scas
mov
or
push
xlat
adc
loopne
sub
push
sub
in
adc
fistpll
lahf
pop
add
jp
sbb
cli
decl
aam
or
lcallw
mov
cmp
push
imul
or
je
jl
pop
pop
jnp
lcall
pop
xor
or
iret
push
cmp
inc
xor
inc
dec
cmp
jle
jp
add
pushl
cmp
adc
shrb
shl
push
ds
push
into
xchg
inc
inc
mov
mov
sbb
stc
mov
push
cmp
mov
incl
jb
js
push
adc
inc
movb
js
jo
aam
cli
bound
fimuls
ljmp
dec
mov
mov
push
pop
dec
sbb
loope
inc
mov
fdivr
mov
inc
call
arpl
pop
pop
add
mov
call
lcall
outsl
pop
insb
xchg
or
movsb
sbb
push
dec
xchg
add
xor
js
xor
xchg
inc
lss
pop
mov
jmp
mov
shrb
mov
jb
xchg
cwtl
push
push
sbb
push
push
push
add
fs
nop
cmp
mov
fisttps
mov
xchg
ss
sahf
xor
xchg
pop
xchg
pop
jb
and
es
scas
or
icebp
ljmp
push
scas
aam
xchg
inc
push
sbb
in
icebp
das
xchg
fidivs
pop
outsl
add
call
ret
fsubr
enter
push
int
mov
pop
enter
std
das
lock
cs
ja
jbe
pop
sbb
inc
hlt
jle
push
fwait
int
ljmp
push
aaa
inc
ret
xor
jne
pop
loop
or
mov
pop
pop
cmp
push
cmpsb
shlb
decl
push
mov
inc
in
aad
iret
fnstcw
cmp
mov
outsl
icebp
fnstsw
insl
fdivrs
cmp
xchg
adc
aas
xchg
adc
decl
shll
out
cld
lcall
jnp
dec
jle
idivb
outsl
fsubs
pop
decb
lods
sbb
sbb
lods
sbb
dec
sub
sbb
ljmp
mov
xchg
lods
or
cmp
scas
or
mov
push
jb
sar
pushl
push
inc
sahf
adc
inc
rolb
ficoms
inc
repz
call
incl
xchg
outsl
adc
clc
test
mov
push
jle
and
sahf
dec
adc
sbb
pop
cmp
pop
add
pop
clc
fstl
dec
push
data16
iret
dec
jno
daa
fcoml
loop
inc
xchg
and
lcall
sbb
fsts
cld
outsl
lock
sub
mov
xchg
movsb
incl
inc
pop
push
mov
push
jo
push
icebp
sbb
cmp
scas
sub
pop
dec
lds
pusha
add
pushl
clc
std
ret
mov
xchg
decl
aad
stos
leave
push
andb
call
or
xchg
sbb
adc
cmp
adc
lcall
push
lea
sbb
mov
mov
js
movsl
iret
jnp
jg
push
jo
add
add
cmp
xor
aam
pop
mov
push
push
sub
jne
mov
icebp
cmpb
cmp
aaa
mov
daa
and
xor
mov
daa
xchg
mov
xchg
mov
adc
dec
pop
add
jmp
test
push
dec
aaa
jno
inc
or
aaa
lfs
call
jns
adc
or
scas
sbb
enter
or
add
cmpsb
pop
push
pop
xor
xchg
xchg
lds
movsl
decl
aad
adc
pop
aaa
fbstp
jne
ds
aaa
incl
dec
sahf
jne
push
pop
pop
cmpsl
pop
mov
adc
push
inc
jmp
sbb
jg
mov
pop
mov
jg
xchg
add
mov
or
mov
ljmp
inc
pop
negb
fsubs
fidivs
int
jb
jb
xchg
cmp
lcall
xlat
bt
lcall
jle
out
mov
jl
and
rcll
fstpt
pusha
inc
ja
sti
push
clc
jg
xchg
mov
addb
in
iret
pminub
mov
fdivrp
mov
jmp
pusha
add
adc
call
pop
inc
dec
add
int
and
cmp
push
sbb
decl
push
movsb
and
push
std
mov
sbb
or
cli
jo
cmp
push
and
sub
mov
call
cli
inc
imul
mov
mov
test
xchg
mov
xchg
iret
add
mov
cmp
xchg
sub
orb
out
dec
call
jae
pop
sub
in
mov
ljmp
lock
cmpsb
stc
in
pop
sarl
out
or
pop
jb
push
cmc
int
cmc
leave
pusha
out
push
rcrl
pusha
pop
mov
xor
popf
out
fs
jmp
pushl
test
jle
xchg
push
popf
jo
push
jp
push
pop
outsl
mov
fildl
or
scas
das
jg
loope
mov
pop
clc
aaa
push
and
or
sbb
ljmp
or
test
dec
xchg
push
or
or
fmull
call
sub
fwait
sub
mov
inc
enter
jg
xchg
and
call
pop
pop
enter
pop
insl
fcoms
subb
cmp
std
lcall
sahf
jl
int
and
leave
mov
flds
mov
les
jle
ljmp
lock
jge
rcr
fisubrl
rcll
dec
sbb
mov
pushl
sbb
enter
push
push
cmc
lret
mov
mov
mov
jo
jl
inc
sbb
loopne
jb
jmp
jmp
adc
jne
repnz
outsb
aas
xor
cli
jbe
add
jb
pop
push
cs
push
push
sub
outsl
fiadds
in
je
xchg
ret
fidivl
jbe
sub
icebp
pop
outsb
mov
jbe
adc
fiaddl
ret
repnz
loop
ja
outsb
lock
ja
fsubp
repnz
aaa
jb
pop
outsb
add
inc
dec
jb
bound
in
in
lcall
cmpsb
xor
into
neg
dec
movsl
and
jne
ficompl
mov
cs
pop
inc
dec
jbe
xchg
lret
in
outsb
xchg
sahf
xchg
ljmp
icebp
sbb
fisubrs
outsb
xor
push
fimull
add
mov
adc
fidivl
in
pushl
insl
ret
inc
cwtl
jl
pop
sbb
or
jnp
loopne
adc
call
rorb
mov
inc
rorb
enter
jmp
aam
push
lods
or
fwait
mov
xchg
sbb
jmp
arpl
jg
mov
sbb
repnz
mov
movsb
jbe
mov
or
dec
inc
stos
incl
ljmp
aaa
push
cmp
outsb
jge
shlb
outsb
aaa
lcall
call
mov
xchg
mov
icebp
adc
mov
xchg
int
jg
lcall
ljmp
loopne
andb
fucomip
lahf
or
aam
xlat
cmpsb
sbb
nop
push
adc
jg
call
pop
jno
adc
adc
fistl
adc
aam
ja
scas
or
cmp
and
adc
cmp
and
pop
out
lds
ds
or
inc
fldl
lock
int3
mov
xchg
dec
inc
inc
pop
mov
and
pushf
push
inc
pop
das
jl
sti
jp
inc
inc
inc
cs
sub
add
push
das
and
mov
jbe
push
aam
ss
xchg
xor
add
inc
fisttpl
cmp
movsl
mov
or
jg
adc
out
and
into
iret
pop
sbb
sbb
jg
cmc
scas
clc
inc
jno
xchg
andl
aam
mov
sarl
add
add
inc
pushf
repnz
add
and
adc
outsl
das
stos
cmpsb
mov
lds
mov
adc
and
cmpsb
push
sub
jg
mov
testb
add
sub
cmpsb
mov
cmp
insl
cmp
sti
dec
jge
mov
pop
dec
dec
add
xchg
popf
adc
inc
sub
xor
jg
mov
adc
lock
cmp
jl
pop
xchg
pop
jp
add
cmp
jle
jmp
xchg
sbb
cmp
data16
inc
jmp
jo
fs
jg
gs
js
mov
jmp
fs
test
js
js
jnp
mov
jle
jns
jp
lcall
xor
push
push
repz
push
jae
pusha
mov
push
push
in
mov
orl
jae
dec
jg
ja
int
jns
ljmp
push
jp
jb
mov
int
cmp
loop
push
mov
popl
loopne
outsb
push
call
push
or
shll
scas
push
imul
add
in
arpl
push
push
hlt
dec
std
cmp
sti
dec
fidivl
inc
repz
lods
gs
je
add
das
shr
and
jnp
mov
push
push
push
pop
add
cli
js
rorb
jge
iret
add
xlat
mov
fistl
adc
ljmp
ja
push
dec
push
or
js,pn
fs
rorl
stos
pushl
js
movb
xor
cmpsb
call
js
es
jp
add
cmp
fnstcw
cmp
pushl
cli
or
add
xchg
and
pushw
es
ljmp
mov
insl
mov
jne
inc
jae
pop
inc
fisttpl
jb
jno
into
mov
inc
pushl
jne
int3
mov
test
int3
sbb
gs
pusha
adc
pop
cli
fistpll
jge
jmp
jbe
pusha
stos
xchg
test
and
ljmp
daa
cs
dec
pop
insl
outsl
outsb
dec
or
sbb
inc
pushl
inc
dec
nop
data16
cmp
fnsave
jge
xor
aaa
jl,pn
mov
mov
jo
test
mov
js
jne
jge
pop
ljmp
icebp
adc
mov
ficompl
pop
icebp
or
pop
push
sti
push
jge
sbbl
ljmp
ja
jmp
pop
adc
adc
dec
leave
in
sbb
mov
test
cmpsl
jmp
jnp
adc
adc
outsl
decl
pop
ljmp
fbstp
ss
std
jae
jle
cmp
dec
sub
cld
call
aaa
mov
xchg
or
sbb
mov
xchg
mov
jmp
jge
mov
mov
jl,pt
mov
idiv
mov
popf
mov
dec
fisubs
fdivs
xor
cmp
and
ud0
inc
and
mov
je
xor
or
sbb
jmp
das
sti
jnp
jg
pop
es
outsb
loopne
ror
je
insl
cwtl
mov
ja
adc
call
fidivs
push
imul
and
je
inc
add
rclb
sbb
adc
idiv
pushl
mov
inc
cmp
jb
dec
lods
and
das
cmc
mov
mov
jae
lret
call
dec
pop
mov
xchg
sti
loopne
incl
push
xchg
js
push
adc
adc
adc
ficoml
jmp
jns
ds
push
aam
test
push
mov
or
mov
cld
popa
cmp
ficompl
pop
lods
cli
add
pushl
jae
int
cmp
and
push
push
push
dec
mov
lods
jae
sarb
and
in
pushl
pop
xor
jmp
test
adc
outsl
jmp
xorb
push
mov
add
fs
bound
aad
mov
mov
sbb
inc
ficoml
or
call
mov
cmp
mov
dec
inc
mov
loope
hlt
xor
sbb
push
outsb
or
sbb
mov
out
insl
mov
mov
xor
ds
mov
mov
mov
cmp
mov
mov
and
nop
test
mov
mov
adc
push
add
xchg
loopne
sti
sub
int
scas
push
or
shlb
pop
push
fimull
mov
mov
xor
xchg
cmp
push
ja
int
repz
ljmp
imul
pop
xchg
cmp
inc
lcall
ljmp
clc
mov
in
out
jns
insl
fidivrl
mov
fistps
push
sub
mov
and
lods
and
or
dec
pop
arpl
ljmp
daa
out
leave
xor
lock
jmp
push
cltd
pop
es
in
jg
mov
adcl
mov
cltd
xchg
adc
bts
lcall
mov
scas
int
dec
cmpsl
push
sbb
stos
pop
loope
loop
popf
stos
outsl
icebp
pop
outsb
mov
mov
push
hlt
fcmove
jecxz
lods
in
decl
cld
adc
mov
loope
add
jne
cmp
push
outsl
sbb
lcall
scas
dec
xchg
scas
cld
fstpt
pop
add
xor
jnp
cmp
std
dec
jno
lahf
mov
ds
lock
test
sub
cmp
ds
push
lret
mov
jb
in
cmp
add
aad
pop
pop
subl
sti
adc
out
outsl
incl
or
push
push
push
imul
jne
add
mov
xor
mov
mov
jns
mov
dec
inc
rcr
xor
inc
stc
xor
pop
js
dec
in
jl
rep
jnp
mov
xlat
xlat
pop
dec
inc
repz
xchg
jns
in
jae
jge
xchg
jmp
pop
int
incl
xor
fxch
pop
sbb
dec
add
lahf
cmp
fstl
jmp
add
adc
bt
xchg
lods
imul
dec
jae
fmuls
lcall
or
out
mov
push
ds
ror
lods
je
lods
vmwrite
xor
ljmp
and
mov
jno
dec
mov
inc
mov
adc
xlat
scas
jl
mov
sbb
sbb
out
mov
hlt
loopne
mov
jo
xor
in
out
fcoms
inc
mov
in
in
adc
aad
pop
fcoml
add
call
push
pop
xor
inc
das
in
mov
xchg
stos
add
push
jae
mov
jg
mov
cmc
jnp
in
les
push
pop
dec
aaa
stc
mov
js
in
dec
mov
stos
xorb
scas
mov
pop
fadds
push
rolb
push
test
pushl
clc
outsl
add
mov
add
int
scas
xor
je
mov
add
les
sbb
mov
repnz
mov
test
scas
xchg
sub
or
lret
or
std
loop
pop
xor
cmp
adc
mov
jg
pop
lea
adc
outsb
push
or
jns
cwtl
js
ds
mov
cmc
mov
inc
mov
jge
jno
mov
popa
lcall
mov
and
int
add
cmp
jns
mov
add
jae
jmp
out
jmp
rcr
sbb
jmp
and
xor
jns
bsf
add
mov
in
mov
mov
add
pop
mov
in
jge
out
aaa
outsb
cmc
clc
ljmp
xchg
ljmp
cltd
push
ret
mov
in
imul
jmp
loopne
mov
loop
mov
add
mov
or
or
outsl
cli
call
cmpsl
jmp
dec
into
in
adc
jg
mov
push
jle
sbb
lahf
mov
out
jg
push
incl
jo
addl
sti
push
incl
ftst
in
sti
rcr
push
ja
cs
mov
cmp
pop
push
out
test
fnstsw
or
loopne
movsl
icebp
mov
xchg
fsubs
jg
adc
pop
das
sub
pop
std
das
testb
sub
pop
sbb
mov
rclb
ljmp
pop
ljmp
imul
mov
fldl
mov
ljmp
leave
pop
das
xchg
mov
orb
hlt
cmpsl
addr16
inc
and
pop
cmpsl
sbb
mov
aad
lret
lcall
pop
leave
imul
jp
mov
mov
mov
hlt
stos
ljmp
clc
pusha
xchg
mov
ljmp
mov
adc
es
ja
fucomip
mov
jo
stos
inc
jmp
pop
mov
mov
punpcklwd
incl
or
popf
pusha
cmp
add
or
test
xlat
jnp
xchg
lds
push
fidivrs
jg
cmpl
and
and
or
ljmp
xchg
stos
cs
mov
xor
mov
ljmp
xlat
fstps
movsl
sub
out
jns
mov
fmull
sbb
ret
aad
cmpb
fmul
loope
xor
or
add
ljmp
push
mov
outsb
cltd
add
lock
in
scas
mov
mov
fists
ret
inc
dec
fcompl
roll
jno
insl
xchg
push
jns
leave
pop
data16
pushl
outsl
fstpt
stc
ret
add
cld
add
icebp
int
arpl
jmp
ficoms
pop
sbb
jecxz
and
fildll
data16
shrl
imul
test
ret
sub
ja
std
inc
outsb
imul
enter
ficoms
leave
xorb
pop
mov
inc
fstpt
fisttpll
jle
int
sub
sahf
pop
fdivl
icebp
add
mov
jo
cmp
je
or
push
stos
mov
push
mov
xor
pushl
loop
mov
rolb
mov
imul
jno
sar
lcall
jmp
and
jl
scas
fdivr
jno
out
sub
xchg
add
loopne
jmp
lret
fdiv
sti
pop
or
leave
rcrb
std
sarb
cli
push
decl
jnp
add
sbb
sbb
dec
std
lods
aad
lret
mov
jns
rcrl
aas
lea
aam
js
xlat
xor
mov
inc
cwtl
test
je
mov
leave
lret
jmp
leave
or
xor
mov
arpl
rcrl
cmp
test
aas
out
sub
fmuls
lock
jne
sahf
pop
pop
adc
add
pop
mov
sbb
or
push
stc
jg
mov
mov
in
ret
iret
test
rorl
fs
xchg
and
cmp
sub
rcrb
xchg
cmp
add
lds
and
mov
mov
or
pop
pop
les
shrl
jns
mov
sub
pushl
nop
push
or
fbld
imul
rclb
outsb
jbe
fcoml
clc
pushl
popa
dec
lahf
dec
jns
mov
mov
jo
outsl
lods
xchg
nop
dec
fwait
ret
fidivs
sbb
fdivrp
push
sub
loopne
pushf
dec
or
pushl
mov
pxor
jne
scas
pop
jnp
push
mov
add
das
std
pop
jle
jle
in
push
jmp
jle
idivl
imul
sar
sub
cmp
xchg
mov
add
mov
add
xchg
add
pop
pop
mov
sbb
jle
enter
adc
test
call
add
negl
push
sbb
dec
or
add
mov
pushl
cli
mov
dec
jg
test
cmc
aad
push
sub
cmpsl
out
or
jmp
xchg
jbe
sbb
mov
adc
pusha
cmc
pop
int
mov
xchg
sub
sbb
loop
ss
jmp
adc
imull
cmp
cmc
xor
xchg
jp
lcall
mov
lock
xchg
testl
hlt
jle
lds
divl
adc
add
scas
insb
bound
and
fstpt
fwait
test
adcl
add
jle
in
add
outsl
add
add
repnz
cmp
pop
push
adc
adc
pop
add
pop
call
sbb
pusha
aas
cmp
xor
or
cli
lcall
sbb
pop
cmp
pop
and
jmp
jnp
or
sar
pop
mov
pop
cmp
jns
cmp
adc
sbb
or
sbb
pop
sub
mov
xlat
pop
and
inc
inc
mov
mov
push
adc
adc
ljmp
jmp
ljmp
aam
add
out
out
mull
pop
loopne
jb
cmpsl
in
jmp
xchg
lock
xor
incl
mov
push
push
push
pop
pop
pop
fs
cmp
mov
cld
aas
lahf
lods
movsl
or
imul
inc
adc
mov
dec
cmc
inc
incl
cmp
sbb
mov
add
push
ret
add
ljmp
outsl
sub
xor
jge
sbb
jle
out
pop
adc
inc
andb
outsb
test
aaa
xchg
add
sbb
pop
in
inc
decl
cmp
hlt
fwait
push
sub
sub
out
hlt
lods
sub
add
mov
push
cmpsl
mov
pushl
jnp
clc
bound
cmp
push
mov
fildll
js
jle
adc
push
in
in
dec
pushf
sbb
cwtl
cmp
or
ret
pop
mov
inc
sbb
test
xchg
cmp
mov
adc
stos
xchg
pop
and
stos
xor
sbb
lods
dec
xor
push
pop
leave
insl
cmpsb
xchg
mov
pop
add
or
adc
push
adc
lods
outsb
cld
sub
movsl
lret
sbb
incl
or
cmp
sbb
outsb
addb
nop
lcall
or
bound
sbb
xchg
shrb
sbb
dec
rcrl
imul
and
loopne
push
cltd
dec
sub
mov
and
cmp
jl
sarb
sub
icebp
ljmp
decl
mov
pop
add
stc
out
sbb
or
int3
call
lods
pop
cmpsb
icebp
cmp
mov
jge
lret
ljmp
cmp
cmp
inc
test
aas
mov
push
paddusb
jge
add
adc
call
mov
popa
or
ret
aam
cld
sub
push
mov
sub
stos
stos
in
stc
aas
fisttpll
pop
adc
lods
push
out
jmp
and
xor
ss
sbb
es
mov
or
cld
std
or
and
sbb
lret
push
ss
jle
or
adc
or
pushl
pop
or
inc
jle
dec
adc
push
jbe
ds
outsl
cld
sub
sub
testl
xor
sbb
shrb
data16
dec
inc
or
jle
lods
adc
jno
xchg
stos
or
test
sub
and
push
mov
jge
jle
or
sti
aam
shr
dec
lods
lahf
out
jl
adcl
push
mov
mov
sbbl
push
pop
mov
pop
jo
cmp
sub
jge
addb
mov
call
ss
scas
mov
xchg
insl
outsb
hlt
andl
int
stos
adcl
push
xchg
push
mov
cmpsb
cmpsb
lret
in
sarl
cs
pushl
lds
mov
pushl
fisttpl
mov
mov
adc
and
xor
movl
push
scas
loopne
cmp
addl
stos
sti
cmp
inc
pusha
popa
adcl
sub
sbb
call
sti
daa
mov
mov
js
push
incb
dec
push
out
xor
sbb
push
lods
sbb
push
mov
fists
jb
mov
pop
incl
sbb
mov
jmp
sub
or
pop
sbb
or
pop
call
pop
pop
movsb
clc
cmpl
cs
testl
push
es
mov
or
or
xor
pop
inc
sbb
loopne
lahf
cmp
cmp
sub
cmp
pop
and
pushl
and
cmp
es
ja
mov
and
fistpl
push
or
sbb
es
in
pushf
xchg
mov
je
in
or
ret
lret
cmp
pop
insl
insl
dec
cltd
push
push
outsl
ss
pop
mov
loopne
dec
aam
aad
mov
test
lcall
pop
push
xorl
scas
lret
xchg
adc
jge
adc
push
jg
fadds
pop
popa
pop
jns
push
sbb
mov
rcrb
mov
ljmp
jl
stc
dec
fstl
or
data16
and
es
dec
pop
or
test
pop
arpl
pop
mov
cmp
jg
mov
sar
mov
sub
fwait
cmp
ja
cmp
pop
adc
push
nop
fwait
cmp
pop
sbb
decl
jbe
sub
xchg
outsb
bound
js
data16
sbb
mov
addr16
dec
dec
ret
or
mov
mov
fidivl
and
inc
ret
cld
ret
or
cs
mov
cmpsb
cwtl
jns
pop
sub
mov
fs
mov
mov
cmp
fidivl
push
xchg
jb
xchg
mov
mov
pop
xchg
push
fdivr
push
add
sbb
inc
lds
pop
fcomps
test
repz
cmc
andl
mov
and
xor
sar
cld
in
push
pop
orl
pop
rcrl
and
js,pt
xorb
lahf
and
pop
adc
adc
movsl
adc
std
inc
or
ljmp
sahf
pop
adc
fisttpll
inc
inc
or
jb
push
shr
ljmp
ficoms
enter
dec
inc
mov
fldcw
jo
xchg
es
incl
sbb
or
imul
scas
mov
inc
mov
incl
sbb
sahf
jmp
cmp
add
and
and
pop
mov
sar
mov
inc
inc
jg
add
jnp
adc
push
xchg
xchg
dec
xor
push
pop
and
adc
ljmp
jmp
xchg
fs
push
or
and
push
push
popa
and
push
adc
leave
lods
dec
std
lcall
out
and
jae
push
call
fstp
out
push
dec
sti
xchg
push
insl
lcall
popa
dec
shrl
popa
jbe
sub
movsl
jg
push
or
into
adc
adc
js
movsl
imul
mov
sbb
dec
xor
fildll
pop
push
sbb
sbb
sub
das
shrl
fildl
call
mov
icebp
sub
sbb
sub
call
loope
pop
imul
lret
inc
jg
lods
jno
adc
clts
xor
lock
mov
negl
std
mov
or
push
pop
push
and
or
or
xchg
or
push
pop
std
adc
iret
inc
divl
jae
loope
scas
adc
inc
pushl
addr16
std
pop
inc
jne
xor
sbb
pop
dec
sub
xor
fldt
add
sbb
pop
inc
adc
dec
ja
inc
push
dec
test
mov
stc
and
pop
jp
imul
ljmp
negb
ficoms
jns
push
loop
pushl
push
sub
or
clc
aaa
iret
sbb
lcall
mov
xchg
std
cmpsl
ds
and
movhps
sbb
popf
sbb
inc
sbb
add
push
jne
sbb
or
pop
repz
pushl
ja
arpl
adc
jae
add
jno
jnp
cmpsl
ljmp
je
lock
jo
sub
es
testl
movsl
cltd
cmpsb
jae
vpackssdw
inc
ja
and
aam
into
out
ljmp
cld
cmp
xlat
cmp
rcr
adc
add
jbe
xchg
inc
jbe
cmp
aaa
clc
aaa
clc
ja
cmpsb
lea
pop
ljmp
or
mov
sub
fs
jge
pop
jae
sahf
or
xchg
shlw
mov
or
cmp
dec
ss
adc
mov
loop
outsl
jp
sbb
and
jne
in
mov
jmp
andb
in
mov
enter
lret
arpl
fcmovu
xlat
cwtl
push
cli
decl
xor
pop
cmp
jnp
xlat
jno
arpl
sbb
push
pop
jno
pop
js
push
add
lret
inc
cmc
pop
cli
movsl
lea
je
sti
jne
pushl
and
jnp
lcall
adc
mov
or
jb
fidivs
mov
and
mov
pop
xchg
dec
fsts
cmp
andl
jg
decl
inc
into
cmp
dec
push
push
add
cmpsl
insb
cmp
lea
rcr
test
add
jge
sub
jp
dec
push
inc
xor
mov
lock
push
sbbl
ja
ljmp
inc
ror
pop
xchg
push
dec
xor
xchg
neg
cmovae
ret
add
hlt
decl
outsl
adc
insb
outsl
dec
cmp
std
xor
dec
mov
ljmp
inc
adc
xchg
notl
jne
mov
lds
incl
push
xchg
jp
add
push
xchg
out
cltd
popf
ja
push
jp
push
push
call
or
mov
or
cmp
ret
adc
push
jae
lock
jmp
inc
xor
sbb
pusha
adc
mov
arpl
jnp
sbb
push
jg
mov
push
jne
repnz
push
ds
adc
jle
fistpll
jb
inc
fs
sbb
jne
xchg
dec
sbb
fld
mov
mov
jge
call
or
aam
rcrb
ljmp
dec
cli
jl,pt
incl
cmp
or
xchg
lock
add
jmp
sub
push
xchg
pop
jecxz
add
jnp
sbb
adc
adc
mov
int
mov
xor
mov
mov
jg
or
push
xor
or
dec
in
cmp
pop
insl
mov
jmp
inc
aas
or
sbb
andl
fldl
inc
rcr
dec
jmp
sti
xor
cmp
sbb
mov
js
mov
pop
xor
sbb
xor
inc
in
idiv
idiv
cli
stc
flds
js
sbbb
and
daa
and
pop
jae
pop
jmp
inc
jg
sbb
mov
jg
in
mov
dec
and
sarb
jg
xchg
sbb
shr
clc
sbb
adc
loope
loopne
sbb
push
sbb
sti
lods
icebp
mov
inc
push
pop
adc
cmp
mov
pop
pop
loopne
push
add
in
nop
or
scas
fstpl
decl
inc
mov
jne
dec
bound
mov
jo
int
cmp
jb
ljmp
and
mov
bound
jno
jno
test
in
aaa
call
add
cs
or
jle
repz
jo
jg
decl
mov
add
sbb
mov
cld
adc
mov
sbb
cmp
cmp
movsl
inc
aaa
add
adc
cmp
pop
clc
inc
cmp
cmp
andb
xlat
imul
cmpsl
inc
add
cmpsb
movsb
rclb
jp
xchg
sub
les
xchg
decl
pop
leave
cmp
aam
std
push
ja
cmp
add
inc
pop
cmpsb
xchg
xor
and
xchg
mov
jp
pop
xchg
lret
loopne
cmc
idivb
incl
jbe
push
fwait
push
jmp
pushf
push
adc
arpl
addr16
pushl
pop
or
pop
gs
xchg
psadbw
adc
lahf
pop
push
movsb
push
pop
pop
gs
xchg
mov
or
adc
push
arpl
xor
insl
roll
jb
dec
loope
push
pushf
push
pop
lods
mov
fndisi(8087
sub
pushf
adc
push
nop
aas
xchg
out
sahf
adc
popf
pop
bound
shr
push
sbb
aad
adc
push
mov
lahf
inc
loop
push
pusha
into
and
test
jmp
dec
jl
jmp
pop
mov
inc
inc
ret
ja
fnstenv
add
push
push
push
sbb
adc
shrb
gs
or
adc
adc
or
sbb
push
jae
jo
sub
push
int
push
push
int3
sbb
leave
imull
mov
adc
enter
out
ss
or
add
xchg
out
mov
mov
pop
push
cmpsb
ds
sbb
out
pop
pop
sarb
es
sbb
shll
pop
pop
add
xlat
jne
inc
add
add
add
addr16
xchg
mov
out
in
pop
pop
inc
nop
fisttpll
xchg
outsl
pop
das
adcb
adc
test
nop
insl
fwait
jbe
pop
rcr
test
cli
pop
adc
dec
leave
dec
dec
cld
nop
xor
adc
push
sahf
push
rorb
and
je
mov
js
inc
ret
push
stos
pop
jg
repnz
dec
out
push
or
ja
sub
and
push
pop
mov
push
inc
inc
pop
pop
pop
dec
pop
pop
push
pop
sub
sahf
int
add
jmp
pop
jno
jp
pop
js
jns
es
add
or
push
iret
jns
jnp
js
gs
and
pusha
outsl
pop
ja
popa
hlt
xor
sbb
add
push
jae
jne
pop
jg
repnz
in
lods
or
jne
or
mov
lods
lds
inc
cs
cmp
es
fcomi
ss
or
push
pop
inc
bound
js
jp
lods
outsb
mov
push
fs
xchg
add
mov
outsw
push
jno
bound
or
ror
std
ds
aas
ss
mov
mov
mov
ja
jge
lea
icebp
add
pop
jg
jne
push
cmp
push
mov
dec
pop
pusha
int
arpl
negb
inc
add
vmwrite
jne
xlat
fadds
sbb
shrl
data16
insl
cmp
add
mov
popa
or
xor
adc
jnp
pop
roll
in
or
pop
xchg
pop
mov
inc
push
in
pop
mov
pop
mov
dec
sbbb
pop
scas
popl
ss
lcall
pop
sbb
je
push
fwait
cmpsb
push
pop
inc
push
and
pop
and
jp
push
int
outsb
jmp
pop
pop
inc
inc
cmp
pop
and
psrlw
fistps
sub
push
pop
ja
je
outsl
dec
cs
inc
mov
dec
arpl
in
jg
mov
push
lock
inc
jno
gs
sbb
pop
mov
pushw
push
in
pop
sbb
sti
lods
sub
inc
adc
push
mov
jmp
mov
jle
data16
pop
fisubs
scas
xor
jg
pop
adc
sbb
sarl
fildl
clc
add
xchg
frstor
add
fucomi
or
add
pop
roll
mov
xor
adc
xor
ss
iret
dec
mul
adc
es
xchg
xchg
or
sub
jno
lahf
imul
push
insl
dec
adc
sbb
inc
iret
jbe
inc
adc
adc
mov
cmp
pop
sbb
aaa
sbb
pop
out
sarl
cli
cs
call
jb
mov
rol
popf
dec
or
stos
loopne
pop
js
add
lods
aam
cmp
pusha
push
outsl
add
in
jle
pop
dec
or
lcall
mov
xlat
inc
or
jmp
pop
lahf
popf
xchg
sbb
mov
lahf
daa
pop
pop
push
divb
lock
mov
das
lock
jl
jg
daa
mov
pop
inc
inc
push
sahf
xchg
imul
popf
sahf
xchg
sbb
push
sbb
int
cmp
inc
loope
notb
jmp
repz
xlat
test
mov
sbb
outsl
aad
xchg
or
sub
xor
xchg
adc
in
mov
ljmp
aam
add
mov
xchg
push
dec
push
inc
test
jl
inc
test
add
out
loope
lcall
add
in
adc
loope,pt
adc
xor
stc
mov
aad
sbb
lcall
push
pop
push
push
xor
dec
mov
jl
fnstsw
pop
dec
nop
adc
mov
test
sbb
ss
ljmp
ficompl
jg
jmp
jb
push
fsts
xor
loope
push
mov
pop
mov
pushl
adc
push
inc
lcall
cs
andb
cmpsb
ds
cmp
ljmp
mov
xchg
mov
push
ljmp
xchg
aaa
mov
xchg
xchg
ret
fisubrl
adc
xchg
idiv
jmp
mov
adc
mov
push
mov
push
mov
and
das
and
xchg
dec
stos
xchg
pop
dec
std
mov
or
sbb
add
dec
movsb
and
cmp
incl
or
push
test
adc
push
lods
mov
decl
jae
jmp
popf
jl
sub
sub
scas
lret
inc
sbb
xor
or
clc
lea
pop
popf
sbb
push
mov
andl
mov
inc
xchg
roll
mov
dec
loopne
xor
pop
ljmp
cmpsb
lea
addr16
inc
cs
pop
mov
shll
fistpll
mov
js
outsb
inc
lcall
pop
cmpsb
push
aam
or
push
lret
ds
cld
outsb
arpl
pop
adc
or
nop
test
sar
call
loop
loope
push
pop
sub
mov
xchg
jge
dec
dec
sub
repnz
pop
clc
call
push
leave
iret
test
aam
or
pushf
push
or
push
bound
cli
stc
bound
ffreep
cmp
ljmp
push
cmp
push
inc
cmp
popf
movb
stos
adc
test
ret
lcall
sbb
push
sub
sti
test
xchg
or
cmp
decl
int
testl
cmp
repnz
addr16
pushl
outsb
clc
cmp
dec
jnp
ss
cmp
ja
sbb
xor
and
jo
push
dec
dec
pushl
pushl
decb
adc
nop
mov
loope
out
cmp
int3
add
call
inc
jg
aaa
clc
jmp
inc
add
xor
and
imul
es
adc
dec
sub
push
call
insb
jmp
in
xchg
xchg
lret
pop
outsl
pop
fcoml
push
xor
sbb
ljmp
inc
jl
push
fcmovu
in
or
popf
jno
js
jle
push
movsb
and
jmp
push
loope
cmp
inc
ljmp
ljmp
std
lcall
pushl
es
enter
cmpsb
xchg
je
mov
popf
and
fs
fistpll
call
dec
inc
adc
idiv
mov
arpl
sbb
inc
inc
xor
jno
stc
sbb
movsb
mov
push
adc
loop
xchg
lea
out
into
push
xor
decl
lcall
sahf
adc
xchg
push
push
pop
add
adc
jle
test
sar
decl
cmp
mov
inc
jg
js
inc
add
ret
call
cmp
test
mov
out
in
sbb
sbb
pusha
clc
push
flds
mov
decl
dec
cmp
xor
sub
xor
xchg
and
repnz
repz
sub
mov
roll
cmpsb
daa
push
pop
mov
jp
xchg
sub
or
ljmp
xchg
and
sbb
in
je
sbb
arpl
xchg
xlat
ja
xchg
sub
sbb
incl
jbe
or
cwtl
dec
lahf
sbb
lea
lcall
stos
jo
jl
xchg
xchg
faddl
cmp
repnz
pop
xchg
flds
testb
jle
mov
lret
pop
push
pop
xor
inc
sbb
mov
fistps
xchg
sub
mov
mov
jmp
lret
add
dec
and
dec
and
sub
add
lret
dec
adc
rorb
ficomps
fdivs
add
pop
in
jns
and
ljmp
jmp
test
pop
push
mov
push
push
and
jmp
fisttps
pop
fdivr
jmp
std
sbb
adc
int3
mov
fs
js
xlat
cltd
sbb
loope
xchg
int3
jle
and
push
inc
xor
mov
mov
int
xchg
testb
inc
call
pop
roll
dec
out
jo
push
push
jns
pushf
sub
pop
dec
cld
add
insl
sub
je
add
pushf
adc
decl
lcall
out
mov
aaa
push
clc
das
adc
push
adc
sub
inc
movsl
ljmp
add
add
fs
add
std
cmp
loope
inc
dec
xchg
lods
add
ljmp
dec
lods
pop
leave
pop
push
xlat
push
es
adc
and
cmpsb
pushw
push
test
adc
or
push
notl
cmc
adc
fwait
inc
cmp
xchg
cmp
jp
adc
pushl
push
xchg
mov
jbe
jb
pop
push
popf
push
fbld
push
and
mov
std
call
inc
lahf
adc
sbb
xor
pop
adc
jmp
xor
adcl
jo
hlt
cwtl
and
xor
stos
dec
add
jle
aad
sti
and
lock
test
cmp
fadds
test
push
cli
fldt
lcall
sbb
adc
lds
cmc
pushl
pop
xor
push
xchg
fs
daa
mov
es
pop
es
hlt
lcall
negb
and
push
pop
sbb
mov
sbb
inc
and
in
or
mov
sbb
mov
adc
addr16
sbb
cwtl
xor
push
cmp
dec
cmpsb
xor
sahf
cs
popf
push
loope
je,pn
xor
add
fsubrs
pushl
dec
inc
or
stc
mov
clc
adc
fidivs
ret
xchg
sbb
jg
inc
xchg
mov
popf
cmp
add
aas
jns
shrb
sbb
mov
fimull
inc
enter
ds
adc
icebp
sbb
repz
dec
adc
lods
ficomps
sub
xor
or
push
xchg
jne
inc
xor
rorb
insl
out
mov
jmp
test
loop
scas
into
roll
test
xchg
adc
fimuls
add
sbb
lods
lock
jle
push
cmpsb
test
push
mov
fiadds
inc
jl
cmp
push
push
cmp
ficoml
cli
outsl
push
adc
insl
in
repnz
fistps
scas
xchg
clc
xchg
or
testb
mov
or
dec
pop
pusha
or
movsl
fdivr
adc
sub
mov
dec
loop
or
and
sbb
pop
lret
icebp
adc
jo
dec
orl
add
xor
and
fwait
mov
in
ds
ljmp
mov
add
cmp
push
inc
les
lock
stos
mov
stos
pop
cld
adc
ror
int
inc
aaa
inc
enter
sti
lcall
mov
sub
mov
leave
inc
mov
sub
or
jg
sar
mov
movsl
fstl
es
sub
ja
pop
adc
cld
fistl
inc
push
fistl
inc
xchg
mov
xor
xor
xchg
mov
sbb
xchg
mov
add
xor
sahf
sbb
jbe
pushf
jmp
jl
lcall
sub
pop
push
ficomps
push
adc
aaa
pushf
ss
ljmp
pop
xchg
das
xchg
call
and
ljmp
lock
outsb
iret
loop
dec
xchg
sbb
dec
sarl
lcall
rcrl
movsb
mov
dec
xchg
hlt
mov
sbb
push
lcall
cmp
es
jae
sbb
pop
popf
pushf
ds
lods
ss
cmp
adc
cmp
adc
xlat
cmp
repnz
ret
leave
pop
hlt
outsb
sub
idiv
pop
call
push
and
xor
ss
jl
jo
pop
clc
incl
and
hlt
aam
cmp
push
or
rolb
jne
je
call
inc
js
in
bound
jg
jae
xchg
int3
push
outsb
dec
into
xchg
jne
dec
adc
fsubrl
in
pushl
add
decl
cs
sbb
or
adc
adc
xor
mov
call
inc
gs
int3
mov
stc
inc
push
out
push
sahf
cld
xor
arpl
jno
pop
rcrl
add
pushl
pop
arpl
mov
inc
xchg
push
fimuls
dec
or
jbe
xorl
add
add
lds
sub
sti
pop
shl
insl
mov
mov
jmp
xor
stos
ds
decl
test
mov
cmp
sub
daa
and
xchg
repnz
std
hlt
out
pusha
push
adc
aad
incl
shl
xchg
mov
push
jb
adc
insb
inc
jne
mov
shufps
decl
icebp
and
and
jmp
mov
lahf
ret
decl
mov
loopne
sbb
jp
hlt
xor
jno
mov
xchg
xor
lock
lock
inc
lahf
mov
push
enter
int
sbb
call
ljmp
jo
sarb
aad
test
imul
call
cmp
pop
pop
jbe
lods
sub
sbb
pushf
sahf
dec
jo
jecxz
push
push
mov
incl
inc
stos
dec
ret
xchg
push
xchg
into
in
add
lret
mulb
arpl
mov
jg
mov
arpl
bound
xchg
sub
daa
push
xchg
mov
rcrl
call
lcall
out
mov
lods
lahf
cs
fst
lcall
jbe
push
sar
incl
bound
push
pop
mov
pop
test
push
jp
stos
outsl
push
ss
lcall
lods
push
dec
jp
movsb
push
inc
adc
in
xchg
push
clc
xor
jecxz
push
pushl
movsl
push
dec
push
sub
jns
sahf
cltd
sbbl
dec
jb
nop
adc
or
cmp
call
jno
jno
mov
adc
nop
and
pop
stos
cld
divb
mov
fdivp
incl
incb
loop
lret
mov
add
cmp
jle
fwait
xor
movsl
inc
xchg
xchg
fstpt
cltd
xchg
push
xor
xchg
jle,pn
repz
pop
cld
pushl
arpl
push
push
clc
jnp
inc
lahf
pop
push
lods
stc
dec
sub
jns
xchg
stos
or
insl
shlb
cmpsl
jle
jno
fdivrs
pop
jmp
push
pusha
test
and
pop
pop
push
add
push
or
mov
dec
cmp
push
outsl
xlat
out
ljmp
xchg
out
movsb
mov
xor
movsb
dec
sub
sahf
push
lret
in
pushl
fldenv
jp
xor
pop
push
sub
cmp
cld
das
push
or
testl
mov
xlat
xchg
mov
mov
mov
cs
scas
add
movb
idiv
out
mov
push
push
sbb
add
push
or
std
and
in
mov
jbe
data16
xchg
sahf
in
sti
xchg
xchg
lahf
stos
pusha
rcr
add
lret
mov
loop
mov
mov
in
xor
sub
inc
dec
jb
bound
pop
cs
lcall
decl
ljmp
mov
jne
mov
pop
add
add
f2xm1
incl
js
push
into
adc
xchg
loope
jae
gs
mov
arpl
mov
ljmp
mov
adc
sbb
mov
mov
lret
or
enter
or
clc
xchg
cli
push
jle
push
xor
subb
cmp
ljmp
jge
ret
stos
loope
js
lcall
bound
in
adc
pusha
ret
out
loopne
pop
ljmp
sahf
ljmp
and
out
cmp
pop
sahf
lcall
dec
popf
mov
jne
and
mov
enter
mov
adc
lds
popa
das
inc
adc
fdivl
in
arpl
jle
mov
out
loope
mov
cli
ljmp
std
enter
dec
fwait
inc
gs
pop
inc
add
xor
scas
push
out
ss
ss
call
push
jge
or
adcb
ss
outsb
push
push
sbb
xor
pop
int
inc
idivl
inc
test
pop
xor
fcomps
ss
fisubs
mov
mov
mov
out
sbbb
xchg
scas
cmpsl
adc
mov
adc
inc
add
and
out
cli
idivb
ret
jg
inc
js
lods
mov
mov
adc
jp
sub
mov
adc
lds
or
pop
ljmp
clc
roll
imulb
sbb
jmp
out
push
and
dec
xor
ljmp
and
stc
xchg
xchg
cli
or
and
es
pop
js
into
jno
call
push
ss
repnz
in
in
cli
lock
int3
ret
popa
mov
loopne
incl
adc
cltd
pop
add
out
xchg
fldt
call
mov
cmp
imul
jmp
mov
jle
dec
jmpw
xchg
adc
inc
dec
mov
lcall
lea
dec
mov
adc
and
adc
les
jmp
and
mov
mov
cwtl
or
ds
add
mov
test
jns
jmp
jne
mov
jb
dec
arpl
jmp
or
push
jae
dec
test
adc
jg
jmp
into
std
push
ja
or
push
ja
aaa
jg
loopne
jae
jp
inc
inc
cld
jp
shlb
pop
push
fldcw
pusha
arpl
jp
mov
or
jnp
jae
sub
lods
std
fistps
inc
in
jge
lds
enter
jae
cmpsl
pop
pop
and
inc
inc
insb
pop
jb
lcall
dec
out
pop
jnp
jb
lret
push
or
repz
pusha
aad
divb
das
cmc
push
pop
divb
imul
xor
les
xchg
jmp
lcall
push
jne
jns
add
push
or
dec
mov
dec
gs
push
pop
mov
cmpsb
xchg
cmp
outsl
hlt
fistps
mov
push
mov
pop
xchg
in
adc
cmc
call
test
das
push
loopne
loope
or
sub
jge
repz
int3
rorl
sarl
push
xor
dec
pop
xlat
add
dec
fbld
push
shl
xchg
sub
pop
mov
fwait
or
and
jbe
jno
inc
mov
pushl
int
out
ljmp
dec
jne
test
push
mov
push
lea
out
pop
adcb
std
ds
sbb
repz
popf
int3
dec
and
bound
decl
mov
xlat
sbb
daa
push
sbb
cmpsb
adc
jae
divl
pop
pop
sar
or
ja
outsb
lret
cmpsl
jo
jge
js
ljmp
dec
pop
xor
cwtl
incb
pushw
loope
sahf
ss
jecxz
cmc
mov
push
daa
jne
jb
and
cmp
sub
movsb
clc
jg
adc
dec
push
aam
leave
arpl
jmp
push
sbb
lods
jmp
pop
pop
or
cmp
push
cli
das
aam
pop
and
in
addr16
mov
decl
xchg
gs
fldl
outsb
adc
jle
test
jle
jns
cli
decl
rorl
push
jp
std
cli
jle
cmc
jge
dec
shll
mov
sbb
inc
and
jp
and
loopne
js
cmc
xchg
add
mov
addb
mov
and
cld
aaa
shlb
sub
jmp
sar
cmp
sahf
push
lds
leave
cmp
int
mov
lods
mov
adc
pushf
jae
test
movsb
jmp
decl
xchg
jmp
or
into
pop
xchg
xchg
mov
add
repnz
jmp
mov
rolb
push
or
mov
loopne
push
xor
mov
ficoml
scas
aas
std
mov
faddl
scas
push
and
cmp
lods
lcall
xor
inc
xchg
test
bound
sbb
fstps
push
in
mov
clc
xchg
lds
cmp
hlt
int
jg
lods
cmp
jns
dec
in
dec
and
call
call
push
sahf
sti
scas
rcr
fadds
loop
int
pop
adc
inc
shlb
push
pop
push
push
lods
lods
hlt
xchg
cmpsb
pop
in
int3
int
lret
fnstcw
cmp
lcall
int3
mov
sbb
es
fisubrs
mov
loopne
mov
mov
incl
mov
repz
test
dec
icebp
pop
cmp
stc
outsb
mov
xchg
cli
das
jmp
mov
movsl
ljmp
mov
cmp
stos
test
inc
minps
mov
add
ja
loop
decb
fildl
mov
fdivrl
jg
addl
int3
push
lods
sti
lcall
iret
adc
das
mov
sbb
cmp
push
inc
icebp
js
pop
add
jae
jmp
loopne
mov
sub
xor
lods
xor
outsb
xchg
jg
jecxz
mov
ss
scas
out
fsubr
jmp
mov
adc
and
cmp
add
add
ljmp
push
mov
incl
cld
ficoml
pop
jecxz
mov
xor
xchg
jmp
jecxz
ljmp
push
xchg
arpl
add
jl
pop
add
lods
push
inc
sbb
add
mov
fstpt
inc
adc
pop
pop
popa
je
xor
addl
lcall
jnp
lock
pushl
nop
pop
in
cmp
mov
add
adc
lret
hlt
cmp
mov
rclb
lods
jmp
les
iret
add
int
mov
jg
lds
scas
cmp
sahf
sub
fs
mov
dec
gs
xor
mov
decl
pop
adc
jnp
and
scas
movsl
dec
loopne
out
ret
jecxz
add
lret
mov
cmp
xor
pop
mov
popa
jmp
in
cmp
inc
popa
adc
icebp
lea
ret
popa
mov
stos
incl
jne
insb
cmp
fsubrp
xchg
push
add
jmp
repz
pop
pop
push
lcall
sub
fstl
int3
rol
enter
jae
fcmovnbe
int
scas
incl
call
mov
in
or
jecxz
mov
dec
or
imul
add
out
adc
mov
test
fsts
jg
scas
xchg
int
scas
int
mov
loopne
push
mov
inc
cmc
add
push
jecxz
idiv
mov
xchg
cmpsl
pop
cmp
out
inc
out
and
ret
std
or
xchg
add
mov
sbb
pushl
popa
jno
mov
cli
add
je
and
arpl
decl
dec
shll
mov
ds
jno
jmp
jne
repnz
fcoml
jmp
lods
lea
add
cmp
in
test
je
fadds
sbb
decl
push
or
ret
inc
mov
jo
test
insb
mov
push
aad
mov
mov
dec
sub
frstor
mov
shlb
decl
push
jns
jecxz
insl
mov
scas
add
test
repz
inc
and
movsl
jg
xchg
xor
out
jb
pop
outsl
inc
xchg
scas
jnp
test
pusha
outsl
jl
mov
mov
mov
popa
and
hlt
fcoms
ljmp
inc
out
popa
in
sti
pop
dec
cmpl
xchg
subb
pop
dec
dec
jg
add
mov
jle
fiadds
jmp
cli
aaa
enter
sbb
sbb
sub
push
or
jmp
mov
mov
test
clc
test
data16
xchg
orl
mov
jno
inc
adc
jg
cmc
mov
in
dec
outsb
jbe
cltd
pop
cmc
and
mov
jle
jp
and
xchg
xor
aad
mov
and
mov
lods
jg
jmp
add
cmc
add
pop
orl
roll
in
pusha
and
fucomip
mov
sbb
call
pop
ja
incb
jns
and
mov
rol
pop
adc
inc
jmp
fimuls
pop
imul
mov
or
jg
jns
inc
pop
add
imul
pop
movsl
cs
mov
rcll
imul
sub
jmp
in
int
imul
bound
shll
jg
xchg
ljmp
jnp
adc
pop
call
fsubs
out
call
pop
outsl
stos
and
inc
bound
inc
cs
dec
clc
dec
and
in
fidivs
sbb
ret
loopne
mov
int
and
dec
in
shrl
sub
cmp
xchg
incb
or
pop
gs
and
es
getsec
loopne
lcall
jle
cmpsb
or
push
adc
sar
filds
test
lcall
cs
cmp
sub
cs
sub
pop
dec
sub
mov
add
jno
pop
jo
shlb
data16
pop
call
jae
pop
aaa
andl
and
cs
mov
decl
xchg
and
mov
test
sti
cwtl
sbb
in
cmpsl
mov
mul
in
jmp
js
add
cvtpi2ps
fidivrs
dec
std
call
pop
sub
int
stos
jno
adc
sub
dec
ud0
lcall
dec
scas
jmp
rcrl
repz
xchg
dec
sbb
add
aaa
imul
movsl
pop
mov
test
sub
mov
xchg
sub
pop
sbb
hlt
adc
and
sub
dec
jbe
add
orl
mov
or
sti
jmp
xor
jg
aas
mov
xchg
pop
mov
aam
lcall
insl
dec
dec
loop
outsl
sbbl
adc
dec
mov
out
inc
popf
data16
hlt
cmp
inc
cmc
scas
fisttps
jl
cmpsb
dec
in
roll
adc
jno
ljmp
cld
mov
or
out
sti
jle
xor
dec
adc
jb
jnp
lcall
int
dec
push
dec
fsubrp
mov
pop
sbb
sbb
flds
mov
lods
call
pop
shl
fistpl
push
cltd
mov
fisttpll
dec
repz
jp
outsl
hlt
lret
jmp
rcll
jns
in
cmp
ret
and
mov
std
movsl
outsb
sbb
xchg
ficoms
scas
sub
in
push
push
lods
sub
pop
push
call
clc
stc
out
out
cltd
sti
gs
int
dec
scas
jae
aad
arpl
dec
call
clc
lea
sub
add
mov
cmp
inc
jmp
lds
js
pop
into
imul
pop
or
into
adc
push
test
push
bound
jmp
leave
add
aas
lcall
lahf
negl
out
or
int
lret
mov
test
popa
cmp
notrack
incl
cmpsl
jecxz
clc
stos
xchg
mov
pop
js
jae
cmpl
ljmp
aad
push
xchg
rcrl
mov
leave
jb
add
das
enter
mov
or
add
jp
call
call
add
adc
mov
jmp
repz
push
mov
rorb
ja
inc
xchg
clc
testb
movsl
sub
in
das
arpl
addr16
pop
or
mov
mov
pop
std
das
push
xlat
sub
rorl
imul
mov
lods
out
arpl
add
scas
movsl
dec
pop
xor
das
icebp
mov
lret
jns
rorl
out
jmp
jg
ljmp
sub
mov
enter
sti
out
pop
roll
xor
mov
ljmp
fxch
mov
movsl
in
push
orl
cmp
mov
mov
fs
std
ret
out
dec
fcomps
jle
jnp
orl
pushl
adc
pusha
mov
add
adcb
pxor
jg
adc
jg
xchg
fidivs
rcrb
insl
test
pop
data16
sub
ret
jmp
dec
test
call
test
and
cli
push
jnp
sbb
sahf
stos
ljmp
jg
or
insl
add
jb
ljmp
dec
jge
mov
mov
ljmp
aaa
xchg
or
test
mov
lcall
lock
testl
xchg
inc
mov
adc
test
les
sub
push
das
std
jle
cmp
jmp
or
mov
sti
decl
ds
aas
xchg
add
xchg
or
sbb
loope
cmp
dec
jbe
jg
aaa
clc
inc
shlb
sarb
clc
adc
adc
add
ret
push
ror
xor
andl
jnp
fbstp
mov
jmp
mov
jae
int3
test
or
bound
scas
dec
mov
xchg
lods
jmp
call
fmul
popa
.byte
in
incl
add
push
push
mov
leave
pushl
rorb
not
sub
in
stc
mov
mov
mov
xadd
add
movsl
mov
sbb
loope
rep
sub
and
insl
ja
in
mov
dec
sub
mov
lea
std
mov
and
push
call
lea
clc
push
push
mov
out
jbe
mov
mov
call
push
push
mov
pop
mov
sti
fisttpl
push
call
or
mov
sub
sti
decl
outsb
add
add
add
add
test
jle
mov
mov
sbb
decl
add
pushl
dec
incb
push
mov
inc
jmp
mov
inc
xor
xor
mov
jl
fdivrs
std
push
lea
lods
add
add
jle
lret
call
jb
inc
ja
push
cmp
cli
mov
lret
orb
out
lock
push
push
adc
push
add
test
jne
lea
idivb
push
xor
loope
loopne
mov
add
dec
ds
fwait
in
adc
push
inc
pop
push
and
ds
cmp
add
jo
mov
test
add
adc
int
ss
or
or
mov
sub
mov
jbe
adc
jl
rep
ret
in
cmp
sbb
and
sub
push
cmc
add
sbb
push
or
bound
fisttpll
push
inc
sbb
in
fbstp
pop
pop
pop
pop
add
sti
inc
imul
mov
push
add
pop
std
ljmp
pop
outsb
mov
pop
xor
cmp
xchg
sub
bound
push
pop
jnp
je
push
push
or
jbe
or
sbb
cmp
ret
or
fsubs
gs
jl
test
push
insl
fucomi
mov
mov
fldl
adc
or
mov
pusha
pop
mov
adc
divb
insl
mov
mov
or
xorl
test
pushl
incl
je
add
jne
and
or
sbb
add
or
fstl
xorb
and
adc
xor
test
je
imul
not
jne
movl
xor
jg
jnp
jbe
mov
push
xor
cmp
setne
dec
out
sbb
out
jmp
mov
push
add
jbe
pusha
mov
inc
je
popw
pusha
fldt
imul
pop
push
movl
mov
xor
addr16
and
push
jbe
jbe
jge
lahf
lock
and
or
test
dec
mov
adc
jo
test
add
adc
jg
hlt
popf
sbb
push
in
jge
imul
inc
mov
or
pop
mov
std
mov
mov
fucomi
xor
negl
pop
mov
jmp
inc
adc
adc
insb
sbb
mov
and
xchg
add
cmp
mov
out
out
jbe
jb
mov
push
mov
jle
add
mov
sub
add
jmp
cmp
jb
test
out
fidivrs
jnp
jns
jge
je
ret
xor
mull
or
sti
cld
sbb
sti
fildl
cwtl
sub
cmp
jb
mov
jmp
scas
push
movsbl
xchg
loopne
daa
sbbl
movsb
inc
fcmovnu
dec
movsl
pop
jg
cltd
test
jne
ret
xor
and
js
and
cld
gs
sub
mov
inc
loope
xor
mov
xor
mov
shr
inc
cs
inc
sbb
mov
add
in
adc
stc
pop
pop
mov
mov
loopne
and
add
push
and
push
cmp
adc
stc
cli
out
mov
fisubrs
cmp
sbb
ja
es
insb
or
xor
add
jmp
test
xchg
pop
add
xorl
shl
lock
sbb
clc
mov
sub
dec
aas
dec
or
cmp
push
int3
mov
pop
stc
and
adc
mov
out
out
push
push
add
aaa
cld
and
inc
in
outsb
aas
cwtl
or
jmp
push
and
jge
fucom
fldt
aam
je
mov
into
mov
xchg
imul
jne
cmp
jo
mov
xor
sub
popa
in
sti
xor
xchg
add
push
push
push
pop
mov
mov
stc
xchg
or
adc
or
cmp
repnz
and
pop
clc
call
leave
push
call
or
push
jae
mov
pusha
ja
ret
xor
push
push
and
add
fdivp
inc
jns
xor
and
test
adc
cmp
retw
cmp
or
pushf
push
jl
pop
xlat
xor
xor
xchg
addb
pop
loope
jo
push
lock
push
jmp
mov
insb
and
sete
push
push
xor
mov
inc
call
pavgb
dec
in
jle
or
cmp
in
daa
jno
sbb
inc
cmpb
xor
jo
push
sub
xchg
pop
mov
or
dec
xchg
insl
orb
pop
add
mov
inc
cmp
into
leave
adc
clc
sbb
jbe
cmpsl
cmp
pop
nop
scas
xor
and
mov
adc
xor
cmp
fdivs
nop
je
jl
pop
ss
out
pusha
rcrb
fsubs
fiadds
xlat
push
sbb
sub
mov
sti
imul
cmp
insb
add
push
push
aas
jne
push
push
mov
xorl
jmp
outsl
mulb
cmp
or
cmp
sbb
xchg
pop
sub
inc
sub
frstors
push
adc
jge
inc
jb
jp
clc
jne
outsl
sbb
sub
add
hlt
and
xchg
in
movl
or
pop
pop
mov
sbb
add
or
loope
lods
cmp
shrb
mov
or
jge
in
sbb
push
or
in
add
repnz
pop
cld
add
push
shr
mov
into
mov
imul
imul
outsb
in
inc
mov
mov
mov
test
or
jg
stc
hlt
aas
dec
pop
or
iret
jbe
sub
dec
adc
add
jne
pop
and
mov
lcall
not
and
decb
jne
jne
xorb
orl
and
mov
adc
jns
xor
push
mov
add
jo
sub
or
mov
add
mov
jnp
pop
das
mov
loope
in
mov
adc
mov
dec
pop
cmp
cmpsb
jbe
mov
lret
mov
inc
ds
jbe
mov
mov
cs
mov
push
mov
fs
ret
sbbb
shlb
xchg
pushf
insl
pop
lods
dec
push
mov
add
test
xchg
sti
in
add
out
mov
cmp
test
or
lods
mov
mov
push
add
or
pop
add
and
out
neg
rorl
cmovbe
mov
jmp
jo
xchg
insb
or
or
iret
bound
imul
adc
pop
add
mov
jo
popf
test
jg
push
inc
lock
mov
or
iret
clc
xor
xchg
in
jo
int
femms
shl
add
mov
add
push
push
cmp
xor
push
and
add
iret
sbb
insb
push
ret
push
iret
out
paddd
or
in
inc
adc
jnp
pusha
add
adc
push
adc
lods
mov
pop
adc
adc
cmp
xor
hlt
mov
cmp
sub
enter
cli
les
push
shrb
pushf
insl
mov
das
cmp
and
sub
xchg
dec
add
mov
lods
mov
sub
das
push
ret
mov
int
popa
pop
jbe
pop
push
pop
mov
cmpsb
into
call
out
sub
in
push
divl
jmp
es
xor
rcll
or
dec
cli
in
ret
jne
jg
jae
mov
cmp
sub
jmp
decb
iret
jne
add
cmp
inc
mov
fiaddl
es
add
pop
and
adc
jns
outsb
or
aaa
jmp
es
sbb
out
pop
adc
mov
adc
pop
pop
adc
or
adc
sbb
movsl
adc
push
cli
dec
sub
mov
mov
mov
pop
fxch
adc
push
fldl
mov
or
mov
jne
mov
mov
mov
xlat
je
xor
lret
pop
jne
xchg
pop
dec
push
into
pop
cli
or
pushw
fs
xlat
jl
shl
inc
jmp
jne
mov
and
or
jg
jno
and
add
push
aas
jle
pop
cmp
fidivl
fwait
or
jge
insl
jmp
jl
pushf
shl
push
jb
std
in
and
mov
decb
jne
push
sub
and
jmp
pop
sub
mov
ss
jb
inc
mov
test
or
hlt
mov
clc
add
std
fsub
nop
test
or
mov
and
out
movsl
ror
decb
jge
les
leave
lea
mov
cmp
hlt
sbb
jmp
sub
filds
mov
lods
push
mov
out
or
push
mov
mov
jle
mov
jne
add
and
adc
cld
and
outsb
sbb
jns
jne,pt
test
lock
dec
cmp
imul
or
push
mov
mov
xchg
push
pop
mov
push
loope
movsl
push
movsb
push
xchg
push
push
je
xchg
lds
pushf
sarb
push
inc
xor
gs
xorl
je
push
gs
insb
nop
and
dec
push
inc
pop
data16
sbb
pop
insl
lods
and
mov
adc
inc
adcl
jl
cmp
jno
pop
sub
fadd
dec
loopne
mov
outsb
xor
aaa
imul
pop
push
ljmp
dec
test
sbb
sti
test
out
jns
inc
xor
mov
or
daa
adc
inc
shl
shl
ja
lea
dec
repnz
hlt
lea
cld
lock
push
hlt
ds
out
jmp
call
sbb
xchg
jbe
cmp
les
mov
mov
fs
inc
inc
mov
inc
mov
xlat
enter
jp
dec
inc
inc
or
jo
pusha
mov
movsl
mov
loopne
jo
inc
push
mov
int3
mov
mov
cmp
jge
pop
mov
jbe
adc
rcrl
insb
fdivs
and
push
insb
adc
loop
into
add
add
or
mov
shlb
nop
arpl
lcall
xor
jb
mov
loopne
mov
add
pop
jle
add
repnz
ret
sub
mov
popa
nop
jl
mov
inc
push
das
fnstsw
imul
pop
xorb
inc
adc
push
clc
rcrb
in
fcomps
mov
pusha
adc
lods
xchg
xchg
push
push
lods
and
nop
test
adcb
sub
and
adc
mov
neg
scas
arpl
push
and
inc
pop
clc
jbe
or
or
jb
stc
and
sbb
rorb
insl
mov
cmc
xor
mov
insl
leave
pusha
fwait
lret
sub
or
xor
nop
push
and
or
shlb
movb
or
testb
pop
xor
ja
push
lods
xor
jge
adc
movl
cltd
or
andl
lret
add
pusha
dec
xor
std
adc
or
pop
sub
sub
into
nop
push
sbb
jle
jmp
push
jmp
mov
sub
sbbl
out
test
scas
test
fs
lea
mov
pop
xchg
inc
or
mov
neg
pop
pop
xchg
mov
jmp
push
cs
outsl
inc
or
sti
mov
stc
add
test
xor
adc
sub
cld
add
jle
push
push
cld
das
test
rorl
cmpsb
push
and
je
adc
ret
pushl
andl
mov
pop
dec
inc
adc
jno
inc
push
fcomi
cmp
repz
cmp
jle
mov
or
testb
cmp
pop
push
sbb
pop
pop
sbb
or
sbb
mov
inc
mov
pop
sbb
mov
adc
bound
add
clc
inc
and
pop
dec
inc
cmp
mov
xchg
cmp
pusha
ret
je
xor
pop
test
jge
mov
cs
cmp
jb
xchg
pop
xlat
rorl
ret
jmp
test
test
sub
add
pop
jno
push
push
das
fsubrs
ficompl
lods
mov
arpl
fisubrs
insb
push
loope
popf
or
shlb
lahf
lret
jae
cmpb
aam
mov
inc
jmp
xor
and
mov
or
daa
cmpsb
dec
les
sbb
dec
imul
jnp
jne
xchg
lea
fstpl
sbb
sbb
add
xchg
lods
cmp
cli
insb
ror
enter
clc
jne
mov
adc
out
sti
mov
cmp
and
xor
cld
xor
mov
cmp
fistpl
scas
imul
lds
add
sbb
jge
add
inc
popa
sub
lcall
push
jb
dec
dec
outsl
cmp
addr16
rorl
ret
adcb
cmp
push
lock
mov
dec
pop
pop
cmp
sbb
adcl
mov
cmpsb
ss
lcall
push
cmp
test
mulb
pop
mov
adc
cmpsb
ja
add
xor
sub
andw
and
sub
leave
adc
mov
add
push
xor
fisubrl
pop
adc
inc
xor
loopew
testb
push
inc
test
jmp
hlt
pop
sti
adc
cmp
sbb
push
add
or
movsl
or
and
fcom
or
jg
cld
test
lcall
push
pop
inc
jp
adc
rcll
mov
cmp
push
pop
sbb
mov
clc
dec
add
adc
ret
pop
inc
jmp
cmp
sbb
ret
movsb
rolb
fiadds
sub
scas
je
clc
clc
add
je
push
push
push
pop
mov
mov
movsb
add
add
pop
push
lods
pop
je
mov
loope
sub
nop
jmp
or
ret
pop
xchg
sbb
and
jbe
adc
mov
mov
lock
dec
jb
inc
or
add
or
sbb
add
or
jp
rclb
push
inc
jbe
mov
incl
sub
dec
adc
dec
add
mov
imul
lock
faddl
out
enter
mov
lret
sahf
jl
sarb
xor
xor
or
push
jno
xor
cmp
hlt
add
jl
jecxz
aaa
insl
or
inc
adc
push
bound
pop
cmp
pop
or
mov
jmp
cli
ret
subl
jmp
lea
mov
roll
and
cs
push
push
sub
pop
cmpsb
push
dec
sbb
mov
adc
cmpsb
ss
idivb
jmp
movsb
lock
add
push
push
or
pop
mov
cmp
cmp
clc
jb
xchg
mov
mov
inc
add
or
rep
jmp
fcmovnb
mov
add
inc
loopne
enter
mov
cs
push
call
fildll
jge
sub
and
mov
mov
fstps
mov
add
leave
sahf
fs
pop
int3
lea
sub
mov
arpl
and
ss
and
inc
aas
mov
iret
mov
mov
xchg
mov
inc
in
cmpsb
imul
cmpsb
imul
mov
pop
test
add
adc
push
add
cld
mov
mov
mov
popa
nop
popf
or
insb
ss
adc
and
sub
add
cmp
jg
ret
testb
jo
fldenv
sbb
cmp
and
stc
sub
jne
sahf
sbb
or
or
insl
add
outsl
add
dec
push
and
or
mov
pop
mov
out
add
add
mov
daa
and
sub
push
scas
inc
pop
push
lcall
sub
cmp
lcall
xchg
sbb
lcall
adc
imul
imul
add
lods
mov
xchg
loopne
mov
xchg
and
and
sbb
lcall
jae
mov
push
imul
popa
je
cmp
ljmp
ss
mov
add
and
add
rcr
mov
add
dec
inc
cmp
mov
jecxz
cmp
pop
fisttpl
mov
xchg
cmp
jg
pusha
sub
je
add
je
imul
push
sub
inc
lods
popa
or
push
mov
fs
mov
mov
jmp
sbb
mov
jnp
jne
or
lcall
add
dec
cld
lar
add
cmc
cmpb
or
je
mov
bound
je
pop
or
push
jne
sub
xchg
cmp
mov
lahf
in
clc
jne
pop
clc
and
bound
inc
push
mov
push
call
or
pusha
push
xchg
cmp
and
push
mov
shll
jmp
les
cmp
jge
sbb
push
test
push
adc
jo
fisubrl
ret
sbb
add
mov
mov
in
loopne
jle
inc
inc
jle
je
ret
jne
mov
or
push
mov
incb
jmp
cmp
jmp
push
pop
testb
inc
sbb
and
push
jbe
rorb
cmp
cmp
sahf
daa
cmp
test
ret
sti
cmp
scas
add
push
pop
add
in
sub
mov
shrl
call
push
pop
repz
fistpl
sbb
push
out
ret
imul
adc
sub
sbb
xchg
xor
add
adc
and
mov
push
push
sub
mov
cmp
ret
pop
shrl
fs
decb
ret
push
mov
and
mov
mov
cmp
pop
and
int3
push
xchg
fmull
cmp
jb
scas
lcall
push
shlb
pop
xchg
and
pslld
adc
and
fistpl
idiv
sbb
or
pop
ret
subl
ss
adc
out
or
jno
jle
jae
jo
std
xor
add
push
or
cmp
fwait
sbb
add
xchg
push
loop
test
adc
mov
imul
sub
test
pop
adc
cltd
and
adc
xor
out
add
add
mulb
or
push
sbb
or
adc
inc
push
or
push
fldenv
jne
sarb
rcrb
or
inc
jb
mov
adc
mov
push
popf
mov
pushf
pop
jl
xchg
adc
jbe
int3
xchg
adc
push
outsb
adc
shlb
and
pop
push
mov
or
dec
enter
daa
aam
out
push
cmp
add
or
lret
dec
push
andb
sub
sbb
test
fldt
xchg
inc
dec
jge
shlb
push
incl
ja
std
add
inc
add
and
pop
jmp
mov
mov
jge
shrb
push
cmp
push
in
fnstsw
pop
mov
pop
pusha
pop
idivl
mov
stc
mov
mov
subl
add
sbb
pusha
das
pop
lcall
lret
shr
sbb
and
dec
jl
jmp
mov
sbb
push
insb
jle
fmuls
mov
cmp
arpl
pop
in
stos
mov
xchg
test
push
dec
or
add
inc
add
inc
cmp
jl
adc
or
cmp
jne,pt
sub
das
jne
push
pop
jmp
or
neg
sbb
xchg
cmc
xchg
mov
es
je
push
jo
mov
pop
mov
dec
out
mov
jmp
sbb
or
add
addb
jl
mov
jmp
jnp
aaa
push
jno
xchg
inc
jae
lea
pop
push
cmp
push
fnstsw
mov
and
jb
xchg
popa
push
jge
add
in
or
jne
enter
daa
fidivrl
fists
addr16
adcl
rcr
loopne
cmp
je
dec
insb
icebp
inc
dec
aaa
mov
push
add
insl
stc
mov
repz
je
xor
inc
or
test
cmp
je
push
push
cmp
aas
dec
and
inc
orl
outsl
jg
cs
popf
ss
lcall
pop
sbb
sbb
insb
adc
xor
add
out
scas
mov
and
push
cld
cwtl
stc
rclb
cmp
mov
sti
mov
adc
push
add
push
push
push
lahf
daa
and
mov
imul
pop
imul
or
sbb
mov
mov
add
or
add
sbb
lea
adc
pop
scas
aam
vpmuldq
add
dec
aaa
sahf
jmp
and
mov
inc
cmp
aaa
cs
test
je
movzbl
testb
add
pop
sub
mov
mov
testb
fiadds
jbe
into
or
lret
inc
inc
insl
mov
add
sti
mov
sbbl
mov
inc
and
jmp
lods
or
or
jne
dec
ret
dec
imul
sbb
dec
mov
mov
sti
lcall
adc
int3
mov
enter
hlt
outsb
test
test
pop
jne
mov
xchg
sub
ret
add
in
push
pop
sbb
insl
or
jecxz
push
subb
ret
add
shlb
fldt
sbb
xchg
ret
shr
mov
dec
test
pop
jnp
movb
inc
mov
jne
andb
aam
push
mov
enter
sarl
loop
push
test
es
sbb
inc
add
add
sub
ret
inc
outsb
xlat
femms
daa
fcmovb
frstor
mov
sbb
push
adc
sti
pop
ret
dec
and
mov
push
jp
loopne
rcr
outsb
push
mulb
jne
aad
out
mov
cmp
sub
shlb
pop
ljmp
pop
sub
in
inc
or
daa
ret
mov
jmp
inc
or
jne
push
or
repnz
pop
mov
add
add
xor
movsb
pop
into
call
adc
adc
push
push
lea
and
mov
add
pushf
mov
push
and
movsl
test
push
pusha
iret
je
inc
cmp
xchg
mov
clc
add
sub
push
into
sub
adc
mov
lret
lds
adc
and
cmp
and
out
mov
inc
pop
adc
push
lds
dec
push
sti
mov
inc
or
gs
cmp
sub
or
jl
xor
out
fimuls
rolb
cmp
insb
es
pop
sbb
jo
shl
ljmp
icebp
adc
add
int
or
je
sub
pop
adc
pop
lods
mov
mov
cmp
sub
push
mov
dec
ret
scas
aad
add
cmp
popf
dec
dec
outsb
push
pusha
ljmp
xchg
lea
sbb
roll
lahf
int
adc
and
daa
jl
icebp
lods
jo
pop
sub
jmp
add
xor
orb
hlt
push
pop
mov
mov
add
int
enter
sub
ljmp
mov
pop
jl
add
add
add
add
sub
mov
call
lcall
mov
and
andb
jnp
or
lock
add
imul
adc
xor
or
add
or
subb
shll
pop
push
xor
cmp
inc
shll
ja
xchg
pusha
nopl
roll
cwtl
test
bt
mov
scas
dec
xor
loopne
fidivs
js
mov
add
sbb
sbb
int3
push
jne
push
xlat
add
shll
inc
sbb
sub
push
and
inc
lock
and
test
adc
cmp
inc
addl
pop
or
adcb
ljmp
test
jmp
adc
inc
adc
fucomip
mov
mov
adc
sub
aam
add
cmp
aas
inc
lds
bndldx
clc
xor
mov
pop
jl
pop
out
pop
pop
or
add
or
push
or
mov
cmp
pop
add
jo
add
add
cld
inc
cmpl
mov
les
inc
or
incl
test
push
mov
lea
pushf
inc
cmp
rcr
sbb
mov
stos
leave
push
movsl
insb
je
adc
push
push
pop
cltd
idiv
dec
add
push
icebp
xor
clc
and
std
out
mov
mov
jmp
mov
stos
push
dec
lea
ljmp
add
ret
dec
push
sub
out
add
jmp
shl
mov
or
dec
daa
xchg
add
sti
jp
push
cmp
push
lock
mov
cmp
stos
lock
jne
push
or
sub
adc
dec
xchg
lret
pop
mov
add
jmp
div
fisttpl
add
pop
jmp
pop
adc
jg
pop
or
dec
and
dec
mov
add
popa
lods
jbe
pop
inc
jle
push
lods
mov
cmp
orl
jle
adc
jae
lcall
lea
ss
add
pusha
cmp
add
fadds
mov
push
cmp
add
sbb
push
pusha
insb
aas
cmp
shl
testl
xor
pop
inc
inc
rcr
negb
and
mov
push
dec
mov
int3
ret
push
roll
jb
ret
ret
scas
pop
mov
pop
es
push
push
add
pop
leave
adcb
sub
mov
aam
jb
imulb
pop
mov
adc
inc
xorb
push
inc
movsb
js
cmp
and
in
fsubr
pop
sub
or
inc
sbb
jmp
or
in
add
adc
loopne
and
popa
add
cltd
jae
xor
jb
xchg
pushf
mov
inc
add
mov
sub
cmp
cmp
mov
cs
in
nop
pop
call
sub
inc
call
incb
shrb
subb
adc
lds
or
jmp
dec
dec
incl
mov
ret
jecxz
bound
sbb
movsb
enter
mov
add
jmp
sbb
test
ficompl
ljmp
lret
je
xor
je
jne
adc
and
into
jmp
or
das
fists
roll
pop
jge
and
mov
inc
cmp
jg
je
cmp
inc
jo
inc
sub
je
pop
sbb
or
dec
or
mov
add
pop
clc
jmp
es
ljmp
push
cmp
jo
push
sbb
mov
push
jne
cmpsl
add
movsl
push
mov
je
adc
addr16
not
and
aaa
and
ffree
or
test
add
imull
fisttps
adc
jmp
test
push
or
das
fisttps
jne
sbb
sbb
mov
lods
push
mov
sbb
bound
cmp
shlb
xor
adc
dec
jge
xor
or
pop
jmp
pop
movsb
jg
ds
or
xor
aaa
xchg
mov
mov
mov
add
jecxz
ret
push
dec
mov
mov
ljmp
insl
scas
rol
test
mov
mov
std
cmpl
shll
icebp
fistps
jmp
inc
adc
adc
into
cld
pop
imul
or
sbb
mov
cmp
bswap
inc
add
mov
movsl
out
je
js
or
loopne
rolb
inc
stos
add
pop
dec
das
je
lea
and
xor
fwait
jp
mov
push
jne
mov
mov
add
andl
imul
add
std
outsb
cld
and
cmp
sbb
test
push
pop
fsubr
int
jmp
xchg
xchg
mov
add
jmp
std
jmp
cld
pusha
or
mov
rolb
mov
inc
mov
mov
inc
bound
jmp
mov
sub
push
subb
loope
xor
outsl
in
lods
test
daa
test
cmp
sub
cmc
pop
ret
data16
inc
or
or
xor
ficoms
xchg
out
sti
lds
jecxz
and
push
loope
adc
sub
ret
or
pop
xchg
dec
es
cld
inc
mov
fistpl
movsl
pop
pop
xor
sbb
movsl
pop
pop
outsb
add
out
imul
fidivl
adc
dec
xor
ucomiss
cmp
je
imul
jno
pop
jl
and
push
cmp
cmp
mov
fcmovnu
ljmp
push
mov
stos
add
mov
xchg
push
jge
divl
dec
out
jg
or
adc
les
loopne
jp
testl
adc
out
sbb
lcall
push
loope
lret
rep
add
lea
das
pop
sbb
dec
aam
jmp
add
ret
jge
cmp
ja
cld
mov
nop
inc
inc
adc
inc
inc
cmpb
aam
test
ret
or
pop
pop
loopne
rorl
ss
outsb
add
mov
data16
jo
ret
std
std
imul
inc
dec
test
or
mov
or
lock
lds
jb
push
cmp
mov
push
and
pop
jp
cmp
inc
fldt
dec
flds
cmp
add
jmp
jnp
xchg
sbb
sub
pop
jge
dec
ljmp
push
mov
adc
mov
pop
add
je
dec
sub
jo
jo
add
pop
add
je
int
cld
jb
add
add
adc
or
push
jno
and
add
add
pop
pop
mov
jno
imul
push
xlat
and
jecxz
adc
aas
sarb
mov
jne
pushl
mov
movb
lea
repz
shrl
sub
and
mov
out
mov
out
stos
inc
inc
mov
pusha
mov
jne
imulb
lds
xor
push
cmp
test
sbb
xor
std
sbb
push
push
push
xor
inc
loop
xsave
stos
daa
mov
pop
lea
iret
push
ret
adc
xchg
add
jmp
sbb
in
mov
pop
jmp
andb
sbb
jmp
adc
jbe
jb
add
mov
enter
mov
dec
pop
sbb
ja
and
and
loopne
dec
mov
dec
push
insb
enter
std
test
push
outsb
and
repnz
sahf
mov
les
out
testb
sub
mov
hlt
pop
loopne
adc
or
push
mov
or
push
call
pop
test
stc
or
push
add
adc
cmp
add
and
push
push
insl
jp
push
sbb
test
lcall
pop
jp
jne
jmp
mov
inc
mov
inc
dec
sarl
addr16
jmp
jne
and
lods
call
sbb
sbb
mov
xchg
cmp
cmp
fmull
insb
sbb
cli
sub
insb
adc
ljmp
add
sub
sahf
or
push
or
cmp
sbb
cmpsb
clc
or
add
push
in
push
or
pop
aaa
insb
xlat
loop
push
mov
test
dec
push
sub
loope
sbb
cli
lea
ffree
loop
sub
shlb
sti
push
adc
pop
test
lcall
je
dec
leave
loopne
sub
mov
lea
xchg
adc
lret
rolb
mov
enter
mov
sbb
adc
and
std
jne
mov
mov
push
jp
sub
repnz
jp
bound
inc
dec
aaa
sti
test
in
insb
mov
sub
sbb
test
fsubs
or
xlat
es
sub
pusha
or
sbb
pop
jmp
jge
mov
mov
adc
inc
dec
mov
dec
int3
neg
sbb
add
bound
sbb
movsb
and
outsb
aam
mov
ret
ficoms
mov
pushf
pushf
gs
jle
sub
or
daa
push
add
cmp
lods
sbb
adcl
push
push
sahf
mov
add
insb
xchg
fcmovnbe
mov
inc
jge
fwait
sbb
or
dec
adc
add
outsb
xor
add
add
vmovhpd
mov
rorb
push
gs
fwait
adc
insl
xchg
and
pop
mov
outsl
inc
fstl
add
push
mov
push
test
jp
inc
cmp
stos
sarl
or
push
bound
or
insb
inc
cs
ud0
pop
xchg
push
pop
add
xor
sbb
or
dec
cmp
adc
add
push
sub
insl
rorl
push
pop
ja
inc
inc
jmp
push
add
iret
roll
sbb
push
addb
shl
and
ret
stc
adc
mov
inc
mov
jmp
cmp
fistl
lea
jmp
push
or
popa
or
inc
inc
ljmp
sbb
sub
or
imul
je
push
inc
rcr
xchg
mov
sub
test
aam
add
fdivrs
andps
fs
outsl
adc
xchg
jne
and
ror
sbb
gs
and
fucomip
inc
push
push
jp
push
xor
xchg
xchg
or
fcoml
push
sbb
mov
jmp
and
fdivrs
insl
add
add
stos
cli
andl
adc
jp
push
fld
inc
push
clc
mov
sahf
lret
sbb
sbb
adc
add
inc
jb
push
mov
roll
mov
pop
mov
fisubl
jae
pop
lea
inc
push
aaa
and
mov
pop
in
pushf
jo
push
fildl
mov
cld
repnz
adc
subl
outsl
insl
lods
mov
mov
fdivl
xchg
lods
int
push
dec
fsubl
push
hlt
das
pop
negb
sbb
fdivs
jb
or
xor
mov
aad
lea
push
fidivl
dec
shlb
dec
cwtl
daa
gs
loope
jg
mov
insl
mov
add
loopne
pop
imul
jae
lods
jnp
je
push
fs
je
mov
data16
push
add
push
mov
push
xor
xor
and
jno
inc
rolb
test
rcr
test
cmp
loop
dec
cmp
or
xchg
sub
sbb
dec
mov
dec
inc
inc
mov
leave
sbb
xor
ds
push
pop
push
push
jl
rorb
sbb
cmp
addr16
push
sbb
xchg
pop
out
pop
mov
sbb
add
push
xor
xor
xchg
iret
enter
pop
sbb
data16
and
inc
sub
fistpl
loopne
arpl
inc
stos
sub
scas
jl
mov
hlt
loop
push
int3
rorl
movsl
sbb
jmp
orl
fldcw
inc
sub
push
pop
sbb
in
loope
push
push
clc
xlat
xchg
test
adc
cmc
int3
push
pop
push
cmp
push
fdivrs
and
push
adc
and
add
and
jmp
cmp
inc
mov
rorb
push
jecxz
sbb
push
fmul
push
cmp
pop
pop
jb
sub
fimuls
mov
jae
dec
push
or
loope
clc
push
mov
sti
inc
add
das
mov
sti
lods
or
sub
fcompl
xchg
mov
inc
add
inc
out
cmp
addb
cmp
mov
mov
dec
ror
pop
clc
push
out
incb
lods
xor
xchg
or
mov
das
jo
movsl
mov
cs
je
rcr
out
mov
jbe
mov
mov
mov
mov
imul
push
inc
inc
sbb
lock
push
or
ret
popl
mov
push
loope
xor
jns
push
jecxz
push
push
or
jno
fwait
add
add
push
mov
or
insl
sub
dec
add
mov
pop
pop
ret
sbb
mov
push
inc
xor
pop
inc
xor
cli
or
cld
and
testl
imul
lods
xchg
add
and
or
pop
mov
shll
jbe
je
push
push
lea
test
fsubrp
outsb
or
inc
or
xor
and
mov
sbb
ss
dec
mov
fimuls
xlat
insl
push
or
or
sbb
mov
test
pop
jae
or
xchg
mov
cmp
push
add
push
and
or
mov
inc
push
sbb
pushl
outsb
je
insl
and
jb
jb
or
push
push
pop
nop
jmp
push
add
dec
inc
add
in
notb
push
xor
cmp
sub
std
in
bound
and
imul
push
sti
stc
data16
daa
aaa
outsb
outsl
je
add
cmpb
jae
popa
arpl
data16
outsl
ja
cmp
in
outsl
outsb
aaa
ss
and
jo
jb
jbe
fldt
in
jb
jne
xor
or
insl
or
bound
pop
xor
sub
fisubrl
gs
das
pop
push
fsub
pop
fwait
sti
ret
cmp
outsl
jo
pop
xor
subb
pcmpgtb
arpl
cmp
ret
inc
and
gs
nop
jl
and
insl
jne
lods
sbb
mov
je
mov
arpl
or
fs
cs
ret
lods
xor
insl
add
addr16
sub
popa
insl
and
ss
xor
adc
in
lea
xor
sub
push
ret
popa
jb
jne
jae
xor
outsb
outsb
subb
cmp
fs
dec
sub
pusha
cmp
push
imul
push
fdivl
xor
jb
daa
or
push
inc
push
and
push
aam
ss
mov
ret
add
mov
ja
sbb
je
popa
mov
ja
xor
jbe
push
scas
jne
adc
lods
insl
xorps
xchg
jae
addr16
outsl
popa
sbb
js
add
and
sub
add
add
or
popa
sarb
inc
add
aaa
or
push
inc
fistl
and
xor
repnz
push
and
bound
ja
outsl
xchg
bound
gs
dec
dec
inc
add
jnp
pushf
in
inc
adc
addr16
and
mov
mov
add
leave
cmpsb
xchg
dec
adc
mov
add
arpl
add
cmp
imul
imul
fs
or
or
or
negl
push
cmp
xorps
rorb
add
pop
inc
push
sbb
and
insb
nop
inc
push
xor
push
sbb
pop
push
pop
pop
jnp
pop
lcall
jo
jb
in
jnp
das
xorb
push
sbbb
test
xchg
sub
sbb
inc
sbb
xlat
or
pop
shlb
or
pop
or
pop
push
push
or
or
cld
or
adc
jl
pop
adc
push
hlt
sbb
sbb
in
xor
and
adc
add
popf
in
mov
scas
pop
push
lock
dec
testl
lea
and
add
and
nop
xchg
xchg
sbb
xor
xchg
add
pop
or
cmpsl
add
add
jbe
out
sub
cmpb
pop
cmpsb
filds
sahf
jg
jns
movsl
sbbl
fldenv
test
mov
cmp
enter
inc
test
fisttps
in
sbb
in
call
sbb
push
add
pop
pop
fisubrl
xor
jg
rcr
fsubp
stc
cmp
jle
mov
sbbl
or
add
add
add
add
add
add
xchg
push
scas
push
push
push
jmp
out
sbb
inc
jg
fs
ss
bound
ss
jg
push
inc
jnp
cmp
xor
dec
dec
or
add
or
mov
out
mov
in
sub
es
jg
sub
and
and
inc
jne
pop
inc
push
pop
adc
iret
decb
negb
sbb
add
xchg
dec
outsb
fstpl
add
push
add
out
add
lret
lret
pop
inc
mov
inc
dec
adc
push
fadds
jne
add
and
add
adc
push
push
fnstenv
push
xor
xchg
sbb
push
mov
or
or
jmp
bound
shlb
repz
mov
lcall
mov
cmp
dec
sti
mov
push
pop
adc
sti
lcall
xor
add
dec
add
cli
mov
leave
call
or
push
inc
shll
mov
sahf
pop
fists
xchg
add
lcall
fcom
pop
das
ss
dec
fs
lahf
fwait
mov
popf
popf
xchg
push
xor
daa
push
jp
call
cmpsl
leave
lret
pmullw
cmp
shrl
aam
mov
ds
pushl
aad
mov
std
inc
add
xor
fistps
loope
ljmp
test
fdiv
in
loopne
xchg
xor
pop
jnp
inc
movsl
adcb
call
xlat
in
push
faddp
bnd
xor
sbb
and
jbe
sbb
dec
mov
sub
cmp
xchg
andl
ljmp
push
push
jp
fsubr
and
bound
pop
out
inc
sahf
movsb
es
inc
inc
out
fdivs
jno
pop
pop
mov
push
push
shl
pop
mov
pop
ss
xchg
mov
ljmp
and
adc
push
xchg
out
cmpsb
negb
push
xchg
adc
arpl
ljmp
in
bound
adc
scas
dec
mov
repz
jb
xchg
jp
xchg
jp
sbb
sub
aaa
mov
fcmovnbe
sbb
int
jl
inc
add
stc
sbb
idivl
xor
incl
negl
mov
xchg
fiadds
xor
and
add
rclb
dec
sti
fstps
sbb
ret
pop
sub
inc
lahf
adcb
lea
and
icebp
mov
dec
push
cmp
sbb
jecxz
sti
lods
nop
pop
sub
jp
push
jmp
popf
or
fcompl
sbb
fstpl
fs
jae
orb
ljmp
inc
xchg
adc
jo
xor
cli
push
jae
pop
jl
mov
data16
add
out
lahf
mov
push
lret
add
decl
cmp
sbb
loope
into
shll
imul
lcall
pushf
inc
pop
or
lcall
out
or
pop
movsl
pop
cmpsb
dec
jns
add
popf
and
enter
int3
iret
jp
sbb
ljmp
lret
adc
mov
push
dec
bound
test
lea
rcl
mov
loopne
outsb
call
adc
lret
push
pop
xor
mov
sub
push
jge
jl
outsb
pop
decl
sbb
aam
mov
xchg
jno
cli
out
into
movq
adc
mov
mov
jg
inc
add
or
mov
lret
xchg
lret
jmp
out
lret
push
xchg
mov
ljmp
imul
cld
aad
aaa
xor
adc
inc
mov
push
adc
jmp
lcall
sbb
and
popa
adc
rcr
outsl
pop
movb
call
arpl
pushf
pop
and
push
push
rol
fwait
or
or
loope
jmp
jmp
js
push
xor
inc
outsb
pop
dec
xor
mov
adc
jne
iret
or
add
decl
or
sub
mov
jbe
push
mov
cli
rolb
imul
add
xor
add
jbe
push
sbb
xor
xchg
mov
outsl
cld
mov
lods
xor
xor
mov
popf
dec
sub
lcall
jmp
xchg
xchg
pusha
pop
fsubr
cmp
lahf
xchg
cmp
ljmp
inc
dec
mov
mov
iret
dec
cmp
int3
call
or
jg
xor
xor
lods
add
fsubrs
lds
inc
aas
mov
nop
or
and
ljmp
push
out
scas
repz
dec
cmpsb
rclb
dec
das
sbb
mov
or
js
mov
test
pop
fcoml
push
xor
rcr
adc
repnz
mov
mov
hlt
incl
jmp
sti
pop
sbb
aaa
push
cmp
sub
aaa
push
xchg
lods
dec
sbb
ret
in
jp
inc
lahf
jo
sub
sbb
cmp
pop
mov
xor
repz
js
ss
xchg
add
push
push
sbb
cmpsb
loope
mov
incl
cmp
sub
lds
dec
movsl
dec
iret
orb
pop
cwtl
xchg
mov
cmpsb
adc
xlat
ljmp
jle
pop
inc
xchg
mov
add
pop
cmpsl
xor
inc
lcall
fiaddl
ljmp
das
inc
inc
pminsw
xlat
or
dec
fs
sbb
push
lea
push
push
sbb
cmp
decl
pop
je
xchg
xor
xchg
push
mov
jle
pop
pop
sbb
loop
les
ss
pop
cli
inc
sbb
loope
mulb
push
decb
mov
lret
call
adc
sbb
mov
sbb
arpl
mov
adc
aaa
enter
lcall
bound
pop
int
cmp
xchg
push
js
xor
sbb
cli
and
ljmp
ds
lret
dec
push
roll
mov
adc
int
inc
popf
fs
arpl
adc
pop
in
call
ds
pusha
cmpl
sbb
in
mov
icebp
adc
lret
icebp
jmp
pop
adc
fiadds
loopne
sbb
cli
adc
xlat
int3
aad
inc
out
fstpl
fisubs
or
ljmp
int
int
or
into
mov
cmp
pushf
pop
cli
pop
test
clc
mov
sub
cmpsl
jb
xchg
and
push
shll
inc
aas
lret
xchg
stos
dec
in
fdivp
test
imul
call
inc
jg
or
in
popf
lods
add
and
mov
xchg
or
bound
lcall
inc
inc
int
cmp
dec
pop
push
ds
mov
ja
jg
ljmp
xchg
aas
ljmp
lea
sbb
jb
adc
insb
ds
sbb
cmp
jge
aaa
scas
mov
or
push
xlat
adc
loopne
sub
push
sub
in
adc
fistpll
lahf
pop
add
jp
sbb
cli
decl
aam
or
lcallw
mov
cmp
push
imul
or
je
jl
pop
pop
jnp
lcall
pop
xor
or
iret
push
cmp
inc
xor
inc
dec
cmp
jle
jp
add
pushl
cmp
adc
shrb
shl
push
ds
push
into
xchg
inc
inc
mov
mov
sbb
stc
mov
push
cmp
mov
incl
jb
js
push
adc
inc
movb
js
jo
aam
cli
bound
fimuls
ljmp
dec
mov
mov
push
pop
dec
sbb
loope
inc
mov
fdivr
mov
inc
call
arpl
pop
pop
add
mov
call
lcall
outsl
pop
insb
xchg
or
movsb
sbb
push
dec
xchg
add
xor
js
xor
xchg
inc
lss
pop
mov
jmp
mov
shrb
mov
jb
xchg
cwtl
push
push
sbb
push
push
push
add
fs
nop
cmp
mov
fisttps
mov
xchg
ss
sahf
xor
xchg
pop
xchg
pop
jb
and
es
scas
or
icebp
ljmp
push
scas
aam
xchg
inc
push
sbb
in
icebp
das
xchg
fidivs
pop
outsl
add
call
ret
fsubr
enter
push
int
mov
pop
enter
std
das
lock
cs
ja
jbe
pop
sbb
inc
hlt
jle
push
fwait
int
ljmp
push
aaa
inc
ret
xor
jne
pop
loop
or
mov
pop
pop
cmp
push
cmpsb
shlb
decl
push
mov
inc
in
aad
iret
fnstcw
cmp
mov
outsl
icebp
fnstsw
insl
fdivrs
cmp
xchg
adc
aas
xchg
adc
decl
shll
out
cld
lcall
jnp
dec
jle
idivb
outsl
fsubs
pop
decb
lods
sbb
sbb
lods
sbb
dec
sub
sbb
ljmp
mov
xchg
lods
or
cmp
scas
or
mov
push
jb
sar
pushl
push
inc
sahf
adc
inc
rolb
ficoms
inc
repz
call
incl
xchg
outsl
adc
clc
test
mov
push
jle
and
sahf
dec
adc
sbb
pop
cmp
pop
add
pop
clc
fstl
dec
push
data16
iret
dec
jno
daa
fcoml
loop
inc
xchg
and
lcall
sbb
fsts
cld
outsl
lock
sub
mov
xchg
movsb
incl
inc
pop
push
mov
push
jo
push
icebp
sbb
cmp
scas
sub
pop
dec
lds
pusha
add
pushl
clc
std
ret
mov
xchg
decl
aad
stos
leave
push
andb
call
or
xchg
sbb
adc
cmp
adc
lcall
push
lea
sbb
mov
mov
js
movsl
iret
jnp
jg
push
jo
add
add
cmp
xor
aam
pop
mov
push
push
sub
jne
mov
icebp
cmpb
cmp
aaa
mov
daa
and
xor
mov
daa
xchg
mov
xchg
mov
adc
dec
pop
add
jmp
test
push
dec
aaa
jno
inc
or
aaa
lfs
call
jns
adc
or
scas
sbb
enter
or
add
cmpsb
pop
push
pop
xor
xchg
xchg
lds
movsl
decl
aad
adc
pop
aaa
fbstp
jne
ds
aaa
incl
dec
sahf
jne
push
pop
pop
cmpsl
pop
mov
adc
push
inc
jmp
sbb
jg
mov
pop
mov
jg
xchg
add
mov
or
mov
ljmp
inc
pop
negb
fsubs
fidivs
int
jb
jb
xchg
cmp
lcall
xlat
bt
lcall
jle
out
mov
jl
and
rcll
fstpt
pusha
inc
ja
sti
push
clc
jg
xchg
mov
addb
in
iret
pminub
mov
fdivrp
mov
jmp
pusha
add
adc
call
pop
inc
dec
add
int
and
cmp
push
sbb
decl
push
movsb
and
push
std
mov
sbb
or
cli
jo
cmp
push
and
sub
mov
call
cli
inc
imul
mov
mov
test
xchg
mov
xchg
iret
add
mov
cmp
xchg
sub
orb
out
dec
call
jae
pop
sub
in
mov
ljmp
lock
cmpsb
stc
in
pop
sarl
out
or
pop
jb
push
cmc
int
cmc
leave
pusha
out
push
rcrl
pusha
pop
mov
xor
popf
out
fs
jmp
pushl
test
jle
xchg
push
popf
jo
push
jp
push
pop
outsl
mov
fildl
or
scas
das
jg
loope
mov
pop
clc
aaa
push
and
or
sbb
ljmp
or
test
dec
xchg
push
or
or
fmull
call
sub
fwait
sub
mov
inc
enter
jg
xchg
and
call
pop
pop
enter
pop
insl
fcoms
subb
cmp
std
lcall
sahf
jl
int
and
leave
mov
flds
mov
les
jle
ljmp
lock
jge
rcr
fisubrl
rcll
dec
sbb
mov
pushl
sbb
enter
push
push
cmc
lret
mov
mov
mov
jo
jl
inc
sbb
loopne
jb
jmp
jmp
adc
jne
repnz
outsb
aas
xor
cli
jbe
add
jb
pop
push
cs
push
push
sub
outsl
fiadds
in
je
xchg
ret
fidivl
jbe
sub
icebp
pop
outsb
mov
jbe
adc
fiaddl
ret
repnz
loop
ja
outsb
lock
ja
fsubp
repnz
aaa
jb
pop
outsb
add
inc
dec
jb
bound
in
in
lcall
cmpsb
xor
into
neg
dec
movsl
and
jne
ficompl
mov
cs
pop
inc
dec
jbe
xchg
lret
in
outsb
xchg
sahf
xchg
ljmp
icebp
sbb
fisubrs
outsb
xor
push
fimull
add
mov
adc
fidivl
in
pushl
insl
ret
inc
cwtl
jl
pop
sbb
or
jnp
loopne
adc
call
rorb
mov
inc
rorb
enter
jmp
aam
push
lods
or
fwait
mov
xchg
sbb
jmp
arpl
jg
mov
sbb
repnz
mov
movsb
jbe
mov
or
dec
inc
stos
incl
ljmp
aaa
push
cmp
outsb
jge
shlb
outsb
aaa
lcall
call
mov
xchg
mov
icebp
adc
mov
xchg
int
jg
lcall
ljmp
loopne
andb
fucomip
lahf
or
aam
xlat
cmpsb
sbb
nop
push
adc
jg
call
pop
jno
adc
adc
fistl
adc
aam
ja
scas
or
cmp
and
adc
cmp
and
pop
out
lds
ds
or
inc
fldl
lock
int3
mov
xchg
dec
inc
inc
pop
mov
and
pushf
push
inc
pop
das
jl
sti
jp
inc
inc
inc
cs
sub
add
push
das
and
mov
jbe
push
aam
ss
xchg
xor
add
inc
fisttpl
cmp
movsl
mov
or
jg
adc
out
and
into
iret
pop
sbb
sbb
jg
cmc
scas
clc
inc
jno
xchg
andl
aam
mov
sarl
add
add
inc
pushf
repnz
add
and
adc
outsl
das
stos
cmpsb
mov
lds
mov
adc
and
cmpsb
push
sub
jg
mov
testb
add
sub
cmpsb
mov
cmp
insl
cmp
sti
dec
jge
mov
pop
dec
dec
add
xchg
popf
adc
inc
sub
xor
jg
mov
adc
lock
cmp
jl
pop
xchg
pop
jp
add
cmp
jle
jmp
xchg
sbb
cmp
data16
inc
jmp
jo
fs
jg
gs
js
mov
jmp
fs
test
js
js
jnp
mov
jle
jns
jp
lcall
xor
push
push
repz
push
jae
pusha
mov
push
push
in
mov
orl
jae
dec
jg
ja
int
jns
ljmp
push
jp
jb
mov
int
cmp
loop
push
mov
popl
loopne
outsb
push
call
push
or
shll
scas
push
imul
add
in
arpl
push
push
hlt
dec
std
cmp
sti
dec
fidivl
inc
repz
lods
gs
je
add
das
shr
and
jnp
mov
push
push
push
pop
add
cli
js
rorb
jge
iret
add
xlat
mov
fistl
adc
ljmp
ja
push
dec
push
or
js,pn
fs
rorl
stos
pushl
js
movb
xor
cmpsb
call
js
es
jp
add
cmp
fnstcw
cmp
pushl
cli
or
add
xchg
and
pushw
es
ljmp
mov
insl
mov
jne
inc
jae
pop
inc
fisttpl
jb
jno
into
mov
inc
pushl
jne
int3
mov
test
int3
sbb
gs
pusha
adc
pop
cli
fistpll
jge
jmp
jbe
pusha
stos
xchg
test
and
ljmp
daa
cs
dec
pop
insl
outsl
outsb
dec
or
sbb
inc
pushl
inc
dec
nop
data16
cmp
fnsave
jge
xor
aaa
jl,pn
mov
mov
jo
test
mov
js
jne
jge
pop
ljmp
icebp
adc
mov
ficompl
pop
icebp
or
pop
push
sti
push
jge
sbbl
ljmp
ja
jmp
pop
adc
adc
dec
leave
in
sbb
mov
test
cmpsl
jmp
jnp
adc
adc
outsl
decl
pop
ljmp
fbstp
ss
std
jae
jle
cmp
dec
sub
cld
call
aaa
mov
xchg
or
sbb
mov
xchg
mov
jmp
jge
mov
mov
jl,pt
mov
idiv
mov
popf
mov
dec
fisubs
fdivs
xor
cmp
and
ud0
inc
and
mov
je
xor
or
sbb
jmp
das
sti
jnp
jg
pop
es
outsb
loopne
ror
je
insl
cwtl
mov
ja
adc
call
fidivs
push
imul
and
je
inc
add
rclb
sbb
adc
idiv
pushl
mov
inc
cmp
jb
dec
lods
and
das
cmc
mov
mov
jae
lret
call
dec
pop
mov
xchg
sti
loopne
incl
push
xchg
js
push
adc
adc
adc
ficoml
jmp
jns
ds
push
aam
test
push
mov
or
mov
cld
popa
cmp
ficompl
pop
lods
cli
add
pushl
jae
int
cmp
and
push
push
push
dec
mov
lods
jae
sarb
and
in
pushl
pop
xor
jmp
test
adc
outsl
jmp
xorb
push
mov
add
fs
bound
aad
mov
mov
sbb
inc
ficoml
or
call
mov
cmp
mov
dec
inc
mov
loope
hlt
xor
sbb
push
outsb
or
sbb
mov
out
insl
mov
mov
xor
ds
mov
mov
mov
cmp
mov
mov
and
nop
test
mov
mov
adc
push
add
xchg
loopne
sti
sub
int
scas
push
or
shlb
pop
push
fimull
mov
mov
xor
xchg
cmp
push
ja
int
repz
ljmp
imul
pop
xchg
cmp
inc
lcall
ljmp
clc
mov
in
out
jns
insl
fidivrl
mov
fistps
push
sub
mov
and
lods
and
or
dec
pop
arpl
ljmp
daa
out
leave
xor
lock
jmp
push
cltd
pop
es
in
jg
mov
adcl
mov
cltd
xchg
adc
bts
lcall
mov
scas
int
dec
cmpsl
push
sbb
stos
pop
loope
loop
popf
stos
outsl
icebp
pop
outsb
mov
mov
push
hlt
fcmove
jecxz
lods
in
decl
cld
adc
mov
loope
add
jne
cmp
push
outsl
sbb
lcall
scas
dec
xchg
scas
cld
fstpt
pop
add
xor
jnp
cmp
std
dec
jno
lahf
mov
ds
lock
test
sub
cmp
ds
push
lret
mov
jb
in
cmp
add
aad
pop
pop
subl
sti
adc
out
outsl
incl
or
push
push
push
imul
jne
add
mov
xor
mov
mov
jns
mov
dec
inc
rcr
xor
inc
stc
xor
pop
js
dec
in
jl
rep
jnp
mov
xlat
xlat
pop
dec
inc
repz
xchg
jns
in
jae
jge
xchg
jmp
pop
int
incl
xor
fxch
pop
sbb
dec
add
lahf
cmp
fstl
jmp
add
adc
bt
xchg
lods
imul
dec
jae
fmuls
lcall
or
out
mov
push
ds
ror
lods
je
lods
vmwrite
xor
ljmp
and
mov
jno
dec
mov
inc
mov
adc
xlat
scas
jl
mov
sbb
sbb
out
mov
hlt
loopne
mov
jo
xor
in
out
fcoms
inc
mov
in
in
adc
aad
pop
fcoml
add
call
push
pop
xor
inc
das
in
mov
xchg
stos
add
push
jae
mov
jg
mov
cmc
jnp
in
les
push
pop
dec
aaa
stc
mov
js
in
dec
mov
stos
xorb
scas
mov
pop
fadds
push
rolb
push
test
pushl
clc
outsl
add
mov
add
int
scas
xor
je
mov
add
les
sbb
mov
repnz
mov
test
scas
xchg
sub
or
lret
or
std
loop
pop
xor
cmp
adc
mov
jg
pop
lea
adc
outsb
push
or
jns
cwtl
js
ds
mov
cmc
mov
inc
mov
jge
jno
mov
popa
lcall
mov
and
int
add
cmp
jns
mov
add
jae
jmp
out
jmp
rcr
sbb
jmp
and
xor
jns
bsf
add
mov
in
mov
mov
add
pop
mov
in
jge
out
aaa
outsb
cmc
clc
ljmp
xchg
ljmp
cltd
push
ret
mov
in
imul
jmp
loopne
mov
loop
mov
add
mov
or
or
outsl
cli
call
cmpsl
jmp
dec
into
in
adc
jg
mov
push
jle
sbb
lahf
mov
out
jg
push
incl
jo
addl
sti
push
incl
ftst
in
sti
rcr
push
ja
cs
mov
cmp
pop
push
out
test
fnstsw
or
loopne
movsl
icebp
mov
xchg
fsubs
jg
adc
pop
das
sub
pop
std
das
testb
sub
pop
sbb
mov
rclb
ljmp
pop
ljmp
imul
mov
fldl
mov
ljmp
leave
pop
das
xchg
mov
orb
hlt
cmpsl
addr16
inc
and
pop
cmpsl
sbb
mov
aad
lret
lcall
pop
leave
imul
jp
mov
mov
mov
hlt
stos
ljmp
clc
pusha
xchg
mov
ljmp
mov
adc
es
ja
fucomip
mov
jo
stos
inc
jmp
pop
mov
mov
punpcklwd
incl
or
popf
pusha
cmp
add
or
test
xlat
jnp
xchg
lds
push
fidivrs
jg
cmpl
and
and
or
ljmp
xchg
stos
cs
mov
xor
mov
ljmp
xlat
fstps
movsl
sub
out
jns
mov
fmull
sbb
ret
aad
cmpb
fmul
loope
xor
or
add
ljmp
push
mov
outsb
cltd
add
lock
in
scas
mov
mov
fists
ret
inc
dec
fcompl
roll
jno
insl
xchg
push
jns
leave
pop
data16
pushl
outsl
fstpt
stc
ret
add
cld
add
icebp
int
arpl
jmp
ficoms
pop
sbb
jecxz
and
fildll
data16
shrl
imul
test
ret
sub
ja
std
inc
outsb
imul
enter
ficoms
leave
xorb
pop
mov
inc
fstpt
fisttpll
jle
int
sub
sahf
pop
fdivl
icebp
add
mov
jo
cmp
je
or
push
stos
mov
push
mov
xor
pushl
loop
mov
rolb
mov
imul
jno
sar
lcall
jmp
and
jl
scas
fdivr
jno
out
sub
xchg
add
loopne
jmp
lret
fdiv
sti
pop
or
leave
rcrb
std
sarb
cli
push
decl
jnp
add
sbb
sbb
dec
std
lods
aad
lret
mov
jns
rcrl
aas
lea
aam
js
xlat
xor
mov
inc
cwtl
test
je
mov
leave
lret
jmp
leave
or
xor
mov
arpl
rcrl
cmp
test
aas
out
sub
fmuls
lock
jne
sahf
pop
pop
adc
add
pop
mov
sbb
or
push
stc
jg
mov
mov
in
ret
iret
test
rorl
fs
xchg
and
cmp
sub
rcrb
xchg
cmp
add
lds
and
mov
mov
or
pop
pop
les
shrl
jns
mov
sub
pushl
nop
push
or
fbld
imul
rclb
outsb
jbe
fcoml
clc
pushl
popa
dec
lahf
dec
jns
mov
mov
jo
outsl
lods
xchg
nop
dec
fwait
ret
fidivs
sbb
fdivrp
push
sub
loopne
pushf
dec
or
pushl
mov
pxor
jne
scas
pop
jnp
push
mov
add
das
std
pop
jle
jle
in
push
jmp
jle
idivl
imul
sar
sub
cmp
xchg
mov
add
mov
add
xchg
add
pop
pop
mov
sbb
jle
enter
adc
test
call
add
negl
push
sbb
dec
or
add
mov
pushl
cli
mov
dec
jg
test
cmc
aad
push
sub
cmpsl
out
or
jmp
xchg
jbe
sbb
mov
adc
pusha
cmc
pop
int
mov
xchg
sub
sbb
loop
ss
jmp
adc
imull
cmp
cmc
xor
xchg
jp
lcall
mov
lock
xchg
testl
hlt
jle
lds
divl
adc
add
scas
insb
bound
and
fstpt
fwait
test
adcl
add
jle
in
add
outsl
add
add
repnz
cmp
pop
push
adc
adc
pop
add
pop
call
sbb
pusha
aas
cmp
xor
or
cli
lcall
sbb
pop
cmp
pop
and
jmp
jnp
or
sar
pop
mov
pop
cmp
jns
cmp
adc
sbb
or
sbb
pop
sub
mov
xlat
pop
and
inc
inc
mov
mov
push
adc
adc
ljmp
jmp
ljmp
aam
add
out
out
mull
pop
loopne
jb
cmpsl
in
jmp
xchg
lock
xor
incl
mov
push
push
push
pop
pop
pop
fs
cmp
mov
cld
aas
lahf
lods
movsl
or
imul
inc
adc
mov
dec
cmc
inc
incl
cmp
sbb
mov
add
push
ret
add
ljmp
outsl
sub
xor
jge
sbb
jle
out
pop
adc
inc
andb
outsb
test
aaa
xchg
add
sbb
pop
in
inc
decl
cmp
hlt
fwait
push
sub
sub
out
hlt
lods
sub
add
mov
push
cmpsl
mov
pushl
jnp
clc
bound
cmp
push
mov
fildll
js
jle
adc
push
in
in
dec
pushf
sbb
cwtl
cmp
or
ret
pop
mov
inc
sbb
test
xchg
cmp
mov
adc
stos
xchg
pop
and
stos
xor
sbb
lods
dec
xor
push
pop
leave
insl
cmpsb
xchg
mov
pop
add
or
adc
push
adc
lods
outsb
cld
sub
movsl
lret
sbb
incl
or
cmp
sbb
outsb
addb
nop
lcall
or
bound
sbb
xchg
shrb
sbb
dec
rcrl
imul
and
loopne
push
cltd
dec
sub
mov
and
cmp
jl
sarb
sub
icebp
ljmp
decl
mov
pop
add
stc
out
sbb
or
int3
call
lods
pop
cmpsb
icebp
cmp
mov
jge
lret
ljmp
cmp
cmp
inc
test
aas
mov
push
paddusb
jge
add
adc
call
mov
popa
or
ret
aam
cld
sub
push
mov
sub
stos
stos
in
stc
aas
fisttpll
pop
adc
lods
push
out
jmp
and
xor
ss
sbb
es
mov
or
cld
std
or
and
sbb
lret
push
ss
jle
or
adc
or
pushl
pop
or
inc
jle
dec
adc
push
jbe
ds
outsl
cld
sub
sub
testl
xor
sbb
shrb
data16
dec
inc
or
jle
lods
adc
jno
xchg
stos
or
test
sub
and
push
mov
jge
jle
or
sti
aam
shr
dec
lods
lahf
out
jl
adcl
push
mov
mov
sbbl
push
pop
mov
pop
jo
cmp
sub
jge
addb
mov
call
ss
scas
mov
xchg
insl
outsb
hlt
andl
int
stos
adcl
push
xchg
push
mov
cmpsb
cmpsb
lret
in
sarl
cs
pushl
lds
mov
pushl
fisttpl
mov
mov
adc
and
xor
movl
push
scas
loopne
cmp
addl
stos
sti
cmp
inc
pusha
popa
adcl
sub
sbb
call
sti
daa
mov
mov
js
push
incb
dec
push
out
xor
sbb
push
lods
sbb
push
mov
fists
jb
mov
pop
incl
sbb
mov
jmp
sub
or
pop
sbb
or
pop
call
pop
pop
movsb
clc
cmpl
cs
testl
push
es
mov
or
or
xor
pop
inc
sbb
loopne
lahf
cmp
cmp
sub
cmp
pop
and
pushl
and
cmp
es
ja
mov
and
fistpl
push
or
sbb
es
in
pushf
xchg
mov
je
in
or
ret
lret
cmp
pop
insl
insl
dec
cltd
push
push
outsl
ss
pop
mov
loopne
dec
aam
aad
mov
test
lcall
pop
push
xorl
scas
lret
xchg
adc
jge
adc
push
jg
fadds
pop
popa
pop
jns
push
sbb
mov
rcrb
mov
ljmp
jl
stc
dec
fstl
or
data16
and
es
dec
pop
or
test
pop
arpl
pop
mov
cmp
jg
mov
sar
mov
sub
fwait
cmp
ja
cmp
pop
adc
push
nop
fwait
cmp
pop
sbb
decl
jbe
sub
xchg
outsb
bound
js
data16
sbb
mov
addr16
dec
dec
ret
or
mov
mov
fidivl
and
inc
ret
cld
ret
or
cs
mov
cmpsb
cwtl
jns
pop
sub
mov
fs
mov
mov
cmp
fidivl
push
xchg
jb
xchg
mov
mov
pop
xchg
push
fdivr
push
add
sbb
inc
lds
pop
fcomps
test
repz
cmc
andl
mov
and
xor
sar
cld
in
push
pop
orl
pop
rcrl
and
js,pt
xorb
lahf
and
pop
adc
adc
movsl
adc
std
inc
or
ljmp
sahf
pop
adc
fisttpll
inc
inc
or
jb
push
shr
ljmp
ficoms
enter
dec
inc
mov
fldcw
jo
xchg
es
incl
sbb
or
imul
scas
mov
inc
mov
incl
sbb
sahf
jmp
cmp
add
and
and
pop
mov
sar
mov
inc
inc
jg
add
jnp
adc
push
xchg
xchg
dec
xor
push
pop
and
adc
ljmp
jmp
xchg
fs
push
or
and
push
push
popa
and
push
adc
leave
lods
dec
std
lcall
out
and
jae
push
call
fstp
out
push
dec
sti
xchg
push
insl
lcall
popa
dec
shrl
popa
jbe
sub
movsl
jg
push
or
into
adc
adc
js
movsl
imul
mov
sbb
dec
xor
fildll
pop
push
sbb
sbb
sub
das
shrl
fildl
call
mov
icebp
sub
sbb
sub
call
loope
pop
imul
lret
inc
jg
lods
jno
adc
clts
xor
lock
mov
negl
std
mov
or
push
pop
push
and
or
or
xchg
or
push
pop
std
adc
iret
inc
divl
jae
loope
scas
adc
inc
pushl
addr16
std
pop
inc
jne
xor
sbb
pop
dec
sub
xor
fldt
add
sbb
pop
inc
adc
dec
ja
inc
push
dec
test
mov
stc
and
pop
jp
imul
ljmp
negb
ficoms
jns
push
loop
pushl
push
sub
or
clc
aaa
iret
sbb
lcall
mov
xchg
std
cmpsl
ds
and
movhps
sbb
popf
sbb
inc
sbb
add
push
jne
sbb
or
pop
repz
pushl
ja
arpl
adc
jae
add
jno
jnp
cmpsl
ljmp
je
lock
jo
sub
es
testl
movsl
cltd
cmpsb
jae
vpackssdw
inc
ja
and
aam
into
out
ljmp
cld
cmp
xlat
cmp
rcr
adc
add
jbe
xchg
inc
jbe
cmp
aaa
clc
aaa
clc
ja
cmpsb
lea
pop
ljmp
or
mov
sub
fs
jge
pop
jae
sahf
or
xchg
shlw
mov
or
cmp
dec
ss
adc
mov
loop
outsl
jp
sbb
and
jne
in
mov
jmp
andb
in
mov
enter
lret
arpl
fcmovu
xlat
cwtl
push
cli
decl
xor
pop
cmp
jnp
xlat
jno
arpl
sbb
push
pop
jno
pop
js
push
add
lret
inc
cmc
pop
cli
movsl
lea
je
sti
jne
pushl
and
jnp
lcall
adc
mov
or
jb
fidivs
mov
and
mov
pop
xchg
dec
fsts
cmp
andl
jg
decl
inc
into
cmp
dec
push
push
add
cmpsl
insb
cmp
lea
rcr
test
add
jge
sub
jp
dec
push
inc
xor
mov
lock
push
sbbl
ja
ljmp
inc
ror
pop
xchg
push
dec
xor
xchg
neg
cmovae
ret
add
hlt
decl
outsl
adc
insb
outsl
dec
cmp
std
xor
dec
mov
ljmp
inc
adc
xchg
notl
jne
mov
lds
incl
push
xchg
jp
add
push
xchg
out
cltd
popf
ja
push
jp
push
push
call
or
mov
or
cmp
ret
adc
push
jae
lock
jmp
inc
xor
sbb
pusha
adc
mov
arpl
jnp
sbb
push
jg
mov
push
jne
repnz
push
ds
adc
jle
fistpll
jb
inc
fs
sbb
jne
xchg
dec
sbb
fld
mov
mov
jge
call
or
aam
rcrb
ljmp
dec
cli
jl,pt
incl
cmp
or
xchg
lock
add
jmp
sub
push
xchg
pop
jecxz
add
jnp
sbb
adc
adc
mov
int
mov
xor
mov
mov
jg
or
push
xor
or
dec
in
cmp
pop
insl
mov
jmp
inc
aas
or
sbb
andl
fldl
inc
rcr
dec
jmp
sti
xor
cmp
sbb
mov
js
mov
pop
xor
sbb
xor
inc
in
idiv
idiv
cli
stc
flds
js
sbbb
and
daa
and
pop
jae
pop
jmp
inc
jg
sbb
mov
jg
in
mov
dec
and
sarb
jg
xchg
sbb
shr
clc
sbb
adc
loope
loopne
sbb
push
sbb
sti
lods
icebp
mov
inc
push
pop
adc
cmp
mov
pop
pop
loopne
push
add
in
nop
or
scas
fstpl
decl
inc
mov
jne
dec
bound
mov
jo
int
cmp
jb
ljmp
and
mov
bound
jno
jno
test
in
aaa
call
add
cs
or
jle
repz
jo
jg
decl
mov
add
sbb
mov
cld
adc
mov
sbb
cmp
cmp
movsl
inc
aaa
add
adc
cmp
pop
clc
inc
cmp
cmp
andb
xlat
imul
cmpsl
inc
add
cmpsb
movsb
rclb
jp
xchg
sub
les
xchg
decl
pop
leave
cmp
aam
std
push
ja
cmp
add
inc
pop
cmpsb
xchg
xor
and
xchg
mov
jp
pop
xchg
lret
loopne
cmc
idivb
incl
jbe
push
fwait
push
jmp
pushf
push
adc
arpl
addr16
pushl
pop
or
pop
gs
xchg
psadbw
adc
lahf
pop
push
movsb
push
pop
pop
gs
xchg
mov
or
adc
push
arpl
xor
insl
roll
jb
dec
loope
push
pushf
push
pop
lods
mov
fndisi(8087
sub
pushf
adc
push
nop
aas
xchg
out
sahf
adc
popf
pop
bound
shr
push
sbb
aad
adc
push
mov
lahf
inc
loop
push
pusha
into
and
test
jmp
dec
jl
jmp
pop
mov
inc
inc
ret
ja
fnstenv
add
push
push
push
sbb
adc
shrb
gs
or
adc
adc
or
sbb
push
jae
jo
sub
push
int
push
push
int3
sbb
leave
imull
mov
adc
enter
out
ss
or
add
xchg
out
mov
mov
pop
push
cmpsb
ds
sbb
out
pop
pop
sarb
es
sbb
shll
pop
pop
add
xlat
jne
inc
add
add
add
addr16
xchg
mov
out
in
pop
pop
inc
nop
fisttpll
xchg
outsl
pop
das
adcb
adc
test
nop
insl
fwait
jbe
pop
rcr
test
cli
pop
adc
dec
leave
dec
dec
cld
nop
xor
adc
push
sahf
push
rorb
and
je
mov
js
inc
ret
push
stos
pop
jg
repnz
dec
out
push
or
ja
sub
and
push
pop
mov
push
inc
inc
pop
pop
pop
dec
pop
pop
push
pop
sub
sahf
int
add
jmp
pop
jno
jp
pop
js
jns
es
add
or
push
iret
jns
jnp
js
gs
and
pusha
outsl
pop
ja
popa
hlt
xor
sbb
add
push
jae
jne
pop
jg
repnz
in
lods
or
jne
or
mov
lods
lds
inc
cs
cmp
es
fcomi
ss
or
push
pop
inc
bound
js
jp
lods
outsb
mov
push
fs
xchg
add
mov
outsw
push
jno
bound
or
ror
std
ds
aas
ss
mov
mov
mov
ja
jge
lea
icebp
add
pop
jg
jne
push
cmp
push
mov
dec
pop
pusha
int
arpl
negb
inc
add
vmwrite
jne
xlat
fadds
sbb
shrl
data16
insl
cmp
add
mov
popa
or
xor
adc
jnp
pop
roll
in
or
pop
xchg
pop
mov
inc
push
in
pop
mov
pop
mov
dec
sbbb
pop
scas
popl
ss
lcall
pop
sbb
je
push
fwait
cmpsb
push
pop
inc
push
and
pop
and
jp
push
int
outsb
jmp
pop
pop
inc
inc
cmp
pop
and
psrlw
fistps
sub
push
pop
ja
je
outsl
dec
cs
inc
mov
dec
arpl
in
jg
mov
push
lock
inc
jno
gs
sbb
pop
mov
pushw
push
in
pop
sbb
sti
lods
sub
inc
adc
push
mov
jmp
mov
jle
data16
pop
fisubs
scas
xor
jg
pop
adc
sbb
sarl
fildl
clc
add
xchg
frstor
add
fucomi
or
add
pop
roll
mov
xor
adc
xor
ss
iret
dec
mul
adc
es
xchg
xchg
or
sub
jno
lahf
imul
push
insl
dec
adc
sbb
inc
iret
jbe
inc
adc
adc
mov
cmp
pop
sbb
aaa
sbb
pop
out
sarl
cli
cs
call
jb
mov
rol
popf
dec
or
stos
loopne
pop
js
add
lods
aam
cmp
pusha
push
outsl
add
in
jle
pop
dec
or
lcall
mov
xlat
inc
or
jmp
pop
lahf
popf
xchg
sbb
mov
lahf
daa
pop
pop
push
divb
lock
mov
das
lock
jl
jg
daa
mov
pop
inc
inc
push
sahf
xchg
imul
popf
sahf
xchg
sbb
push
sbb
int
cmp
inc
loope
notb
jmp
repz
xlat
test
mov
sbb
outsl
aad
xchg
or
sub
xor
xchg
adc
in
mov
ljmp
aam
add
mov
xchg
push
dec
push
inc
test
jl
inc
test
add
out
loope
lcall
add
in
adc
loope,pt
adc
xor
stc
mov
aad
sbb
lcall
push
pop
push
push
xor
dec
mov
jl
fnstsw
pop
dec
nop
adc
mov
test
sbb
ss
ljmp
ficompl
jg
jmp
jb
push
fsts
xor
loope
push
mov
pop
mov
pushl
adc
push
inc
lcall
cs
andb
cmpsb
ds
cmp
ljmp
mov
xchg
mov
push
ljmp
xchg
aaa
mov
xchg
xchg
ret
fisubrl
adc
xchg
idiv
jmp
mov
adc
mov
push
mov
push
mov
and
das
and
xchg
dec
stos
xchg
pop
dec
std
mov
or
sbb
add
dec
movsb
and
cmp
incl
or
push
test
adc
push
lods
mov
decl
jae
jmp
popf
jl
sub
sub
scas
lret
inc
sbb
xor
or
clc
lea
pop
popf
sbb
push
mov
andl
mov
inc
xchg
roll
mov
dec
loopne
xor
pop
ljmp
cmpsb
lea
addr16
inc
cs
pop
mov
shll
fistpll
mov
js
outsb
inc
lcall
pop
cmpsb
push
aam
or
push
lret
ds
cld
outsb
arpl
pop
adc
or
nop
test
sar
call
loop
loope
push
pop
sub
mov
xchg
jge
dec
dec
sub
repnz
pop
clc
call
push
leave
iret
test
aam
or
pushf
push
or
push
bound
cli
stc
bound
ffreep
cmp
ljmp
push
cmp
push
inc
cmp
popf
movb
stos
adc
test
ret
lcall
sbb
push
sub
sti
test
xchg
or
cmp
decl
int
testl
cmp
repnz
addr16
pushl
outsb
clc
cmp
dec
jnp
ss
cmp
ja
sbb
xor
and
jo
push
dec
dec
pushl
pushl
decb
adc
nop
mov
loope
out
cmp
int3
add
call
inc
jg
aaa
clc
jmp
inc
add
xor
and
imul
es
adc
dec
sub
push
call
insb
jmp
in
xchg
xchg
lret
pop
outsl
pop
fcoml
push
xor
sbb
ljmp
inc
jl
push
fcmovu
in
or
popf
jno
js
jle
push
movsb
and
jmp
push
loope
cmp
inc
ljmp
ljmp
std
lcall
pushl
es
enter
cmpsb
xchg
je
mov
popf
and
fs
fistpll
call
dec
inc
adc
idiv
mov
arpl
sbb
inc
inc
xor
jno
stc
sbb
movsb
mov
push
adc
loop
xchg
lea
out
into
push
xor
decl
lcall
sahf
adc
xchg
push
push
pop
add
adc
jle
test
sar
decl
cmp
mov
inc
jg
js
inc
add
ret
call
cmp
test
mov
out
in
sbb
sbb
pusha
clc
push
flds
mov
decl
dec
cmp
xor
sub
xor
xchg
and
repnz
repz
sub
mov
roll
cmpsb
daa
push
pop
mov
jp
xchg
sub
or
ljmp
xchg
and
sbb
in
je
sbb
arpl
xchg
xlat
ja
xchg
sub
sbb
incl
jbe
or
cwtl
dec
lahf
sbb
lea
lcall
stos
jo
jl
xchg
xchg
faddl
cmp
repnz
pop
xchg
flds
testb
jle
mov
lret
pop
push
pop
xor
inc
sbb
mov
fistps
xchg
sub
mov
mov
jmp
lret
add
dec
and
dec
and
sub
add
lret
dec
adc
rorb
ficomps
fdivs
add
pop
in
jns
and
ljmp
jmp
test
pop
push
mov
push
push
and
jmp
fisttps
pop
fdivr
jmp
std
sbb
adc
int3
mov
fs
js
xlat
cltd
sbb
loope
xchg
int3
jle
and
push
inc
xor
mov
mov
int
xchg
testb
inc
call
pop
roll
dec
out
jo
push
push
jns
pushf
sub
pop
dec
cld
add
insl
sub
je
add
pushf
adc
decl
lcall
out
mov
aaa
push
clc
das
adc
push
adc
sub
inc
movsl
ljmp
add
add
fs
add
std
cmp
loope
inc
dec
xchg
lods
add
ljmp
dec
lods
pop
leave
pop
push
xlat
push
es
adc
and
cmpsb
pushw
push
test
adc
or
push
notl
cmc
adc
fwait
inc
cmp
xchg
cmp
jp
adc
pushl
push
xchg
mov
jbe
jb
pop
push
popf
push
fbld
push
and
mov
std
call
inc
lahf
adc
sbb
xor
pop
adc
jmp
xor
adcl
jo
hlt
cwtl
and
xor
stos
dec
add
jle
aad
sti
and
lock
test
cmp
fadds
test
push
cli
fldt
lcall
sbb
adc
lds
cmc
pushl
pop
xor
push
xchg
fs
daa
mov
es
pop
es
hlt
lcall
negb
and
push
pop
sbb
mov
sbb
inc
and
in
or
mov
sbb
mov
adc
addr16
sbb
cwtl
xor
push
cmp
dec
cmpsb
xor
sahf
cs
popf
push
loope
je,pn
xor
add
fsubrs
pushl
dec
inc
or
stc
mov
clc
adc
fidivs
ret
xchg
sbb
jg
inc
xchg
mov
popf
cmp
add
aas
jns
shrb
sbb
mov
fimull
inc
enter
ds
adc
icebp
sbb
repz
dec
adc
lods
ficomps
sub
xor
or
push
xchg
jne
inc
xor
rorb
insl
out
mov
jmp
test
loop
scas
into
roll
test
xchg
adc
fimuls
add
sbb
lods
lock
jle
push
cmpsb
test
push
mov
fiadds
inc
jl
cmp
push
push
cmp
ficoml
cli
outsl
push
adc
insl
in
repnz
fistps
scas
xchg
clc
xchg
or
testb
mov
or
dec
pop
pusha
or
movsl
fdivr
adc
sub
mov
dec
loop
or
and
sbb
pop
lret
icebp
adc
jo
dec
orl
add
xor
and
fwait
mov
in
ds
ljmp
mov
add
cmp
push
inc
les
lock
stos
mov
stos
pop
cld
adc
ror
int
inc
aaa
inc
enter
sti
lcall
mov
sub
mov
leave
inc
mov
sub
or
jg
sar
mov
movsl
fstl
es
sub
ja
pop
adc
cld
fistl
inc
push
fistl
inc
xchg
mov
xor
xor
xchg
mov
sbb
xchg
mov
add
xor
sahf
sbb
jbe
pushf
jmp
jl
lcall
sub
pop
push
ficomps
push
adc
aaa
pushf
ss
ljmp
pop
xchg
das
xchg
call
and
ljmp
lock
outsb
iret
loop
dec
xchg
sbb
dec
sarl
lcall
rcrl
movsb
mov
dec
xchg
hlt
mov
sbb
push
lcall
cmp
es
jae
sbb
pop
popf
pushf
ds
lods
ss
cmp
adc
cmp
adc
xlat
cmp
repnz
ret
leave
pop
hlt
outsb
sub
idiv
pop
call
push
and
xor
ss
jl
jo
pop
clc
incl
and
hlt
aam
cmp
push
or
rolb
jne
je
call
inc
js
in
bound
jg
jae
xchg
int3
push
outsb
dec
into
xchg
jne
dec
adc
fsubrl
in
pushl
add
decl
cs
sbb
or
adc
adc
xor
mov
call
inc
gs
int3
mov
stc
inc
push
out
push
sahf
cld
xor
arpl
jno
pop
rcrl
add
pushl
pop
arpl
mov
inc
xchg
push
fimuls
dec
or
jbe
xorl
add
add
lds
sub
sti
pop
shl
insl
mov
mov
jmp
xor
stos
ds
decl
test
mov
cmp
sub
daa
and
xchg
repnz
std
hlt
out
pusha
push
adc
aad
incl
shl
xchg
mov
push
jb
adc
insb
inc
jne
mov
shufps
decl
icebp
and
and
jmp
mov
lahf
ret
decl
mov
loopne
sbb
jp
hlt
xor
jno
mov
xchg
xor
lock
lock
inc
lahf
mov
push
enter
int
sbb
call
ljmp
jo
sarb
aad
test
imul
call
cmp
pop
pop
jbe
lods
sub
sbb
pushf
sahf
dec
jo
jecxz
push
push
mov
incl
inc
stos
dec
ret
xchg
push
xchg
into
in
add
lret
mulb
arpl
mov
jg
mov
arpl
bound
xchg
sub
daa
push
xchg
mov
rcrl
call
lcall
out
mov
lods
lahf
cs
fst
lcall
jbe
push
sar
incl
bound
push
pop
mov
pop
test
push
jp
stos
outsl
push
ss
lcall
lods
push
dec
jp
movsb
push
inc
adc
in
xchg
push
clc
xor
jecxz
push
pushl
movsl
push
dec
push
sub
jns
sahf
cltd
sbbl
dec
jb
nop
adc
or
cmp
call
jno
jno
mov
adc
nop
and
pop
stos
cld
divb
mov
fdivp
incl
incb
loop
lret
mov
add
cmp
jle
fwait
xor
movsl
inc
xchg
xchg
fstpt
cltd
xchg
push
xor
xchg
jle,pn
repz
pop
cld
pushl
arpl
push
push
clc
jnp
inc
lahf
pop
push
lods
stc
dec
sub
jns
xchg
stos
or
insl
shlb
cmpsl
jle
jno
fdivrs
pop
jmp
push
pusha
test
and
pop
pop
push
add
push
or
mov
dec
cmp
push
outsl
xlat
out
ljmp
xchg
out
movsb
mov
xor
movsb
dec
sub
sahf
push
lret
in
pushl
fldenv
jp
xor
pop
push
sub
cmp
cld
das
push
or
testl
mov
xlat
xchg
mov
mov
mov
cs
scas
add
movb
idiv
out
mov
push
push
sbb
add
push
or
std
and
in
mov
jbe
data16
xchg
sahf
in
sti
xchg
xchg
lahf
stos
pusha
rcr
add
lret
mov
loop
mov
mov
in
xor
sub
inc
dec
jb
bound
pop
cs
lcall
decl
ljmp
mov
jne
mov
pop
add
add
f2xm1
incl
js
push
into
adc
xchg
loope
jae
gs
mov
arpl
mov
ljmp
mov
adc
sbb
mov
mov
lret
or
enter
or
clc
xchg
cli
push
jle
push
xor
subb
cmp
ljmp
jge
ret
stos
loope
js
lcall
bound
in
adc
pusha
ret
out
loopne
pop
ljmp
sahf
ljmp
and
out
cmp
pop
sahf
lcall
dec
popf
mov
jne
and
mov
enter
mov
adc
lds
popa
das
inc
adc
fdivl
in
arpl
jle
mov
out
loope
mov
cli
ljmp
std
enter
dec
fwait
inc
gs
pop
inc
add
xor
scas
push
out
ss
ss
call
push
jge
or
adcb
ss
outsb
push
push
sbb
xor
pop
int
inc
idivl
inc
test
pop
xor
fcomps
ss
fisubs
mov
mov
mov
out
sbbb
xchg
scas
cmpsl
adc
mov
adc
inc
add
and
out
cli
idivb
ret
jg
inc
js
lods
mov
mov
adc
jp
sub
mov
adc
lds
or
pop
ljmp
clc
roll
imulb
sbb
jmp
out
push
and
dec
xor
ljmp
and
stc
xchg
xchg
cli
or
and
es
pop
js
into
jno
call
push
ss
repnz
in
in
cli
lock
int3
ret
popa
mov
loopne
incl
adc
cltd
pop
add
out
xchg
fldt
call
mov
cmp
imul
jmp
mov
jle
dec
jmpw
xchg
adc
inc
dec
mov
lcall
lea
dec
mov
adc
and
adc
les
jmp
and
mov
mov
cwtl
or
ds
add
mov
test
jns
jmp
jne
mov
jb
dec
arpl
jmp
or
push
jae
dec
test
adc
jg
jmp
into
std
push
ja
or
push
ja
aaa
jg
loopne
jae
jp
inc
inc
cld
jp
shlb
pop
push
fldcw
pusha
arpl
jp
mov
or
jnp
jae
sub
lods
std
fistps
inc
in
jge
lds
enter
jae
cmpsl
pop
pop
and
inc
inc
insb
pop
jb
lcall
dec
out
pop
jnp
jb
lret
push
or
repz
pusha
aad
divb
das
cmc
push
pop
divb
imul
xor
les
xchg
jmp
lcall
push
jne
jns
add
push
or
dec
mov
dec
gs
push
pop
mov
cmpsb
xchg
cmp
outsl
hlt
fistps
mov
push
mov
pop
xchg
in
adc
cmc
call
test
das
push
loopne
loope
or
sub
jge
repz
int3
rorl
sarl
push
xor
dec
pop
xlat
add
dec
fbld
push
shl
xchg
sub
pop
mov
fwait
or
and
jbe
jno
inc
mov
pushl
int
out
ljmp
dec
jne
test
push
mov
push
lea
out
pop
adcb
std
ds
sbb
repz
popf
int3
dec
and
bound
decl
mov
xlat
sbb
daa
push
sbb
cmpsb
adc
jae
divl
pop
pop
sar
or
ja
outsb
lret
cmpsl
jo
jge
js
ljmp
dec
pop
xor
cwtl
incb
pushw
loope
sahf
ss
jecxz
cmc
mov
push
daa
jne
jb
and
cmp
sub
movsb
clc
jg
adc
dec
push
aam
leave
arpl
jmp
push
sbb
lods
jmp
pop
pop
or
cmp
push
cli
das
aam
pop
and
in
addr16
mov
decl
xchg
gs
fldl
outsb
adc
jle
test
jle
jns
cli
decl
rorl
push
jp
std
cli
jle
cmc
jge
dec
shll
mov
sbb
inc
and
jp
and
loopne
js
cmc
xchg
add
mov
addb
mov
and
cld
aaa
shlb
sub
jmp
sar
cmp
sahf
push
lds
leave
cmp
int
mov
lods
mov
adc
pushf
jae
test
movsb
jmp
decl
xchg
jmp
or
into
pop
xchg
xchg
mov
add
repnz
jmp
mov
rolb
push
or
mov
loopne
push
xor
mov
ficoml
scas
aas
std
mov
faddl
scas
push
and
cmp
lods
lcall
xor
inc
xchg
test
bound
sbb
fstps
push
in
mov
clc
xchg
lds
cmp
hlt
int
jg
lods
cmp
jns
dec
in
dec
and
call
call
push
sahf
sti
scas
rcr
fadds
loop
int
pop
adc
inc
shlb
push
pop
push
push
lods
lods
hlt
xchg
cmpsb
pop
in
int3
int
lret
fnstcw
cmp
lcall
int3
mov
sbb
es
fisubrs
mov
loopne
mov
mov
incl
mov
repz
test
dec
icebp
pop
cmp
stc
outsb
mov
xchg
cli
das
jmp
mov
movsl
ljmp
mov
cmp
stos
test
inc
minps
mov
add
ja
loop
decb
fildl
mov
fdivrl
jg
addl
int3
push
lods
sti
lcall
iret
adc
das
mov
sbb
cmp
push
inc
icebp
js
pop
add
jae
jmp
loopne
mov
sub
xor
lods
xor
outsb
xchg
jg
jecxz
mov
ss
scas
out
fsubr
jmp
mov
adc
and
cmp
add
add
ljmp
push
mov
incl
cld
ficoml
pop
jecxz
mov
xor
xchg
jmp
jecxz
ljmp
push
xchg
arpl
add
jl
pop
add
lods
push
inc
sbb
add
mov
fstpt
inc
adc
pop
pop
popa
je
xor
addl
lcall
jnp
lock
pushl
nop
pop
in
cmp
mov
add
adc
lret
hlt
cmp
mov
rclb
lods
jmp
les
iret
add
int
mov
jg
lds
scas
cmp
sahf
sub
fs
mov
dec
gs
xor
mov
decl
pop
adc
jnp
and
scas
movsl
dec
loopne
out
ret
jecxz
add
lret
mov
cmp
xor
pop
mov
popa
jmp
in
cmp
inc
popa
adc
icebp
lea
ret
popa
mov
stos
incl
jne
insb
cmp
fsubrp
xchg
push
add
jmp
repz
pop
pop
push
lcall
sub
fstl
int3
rol
enter
jae
fcmovnbe
int
scas
incl
call
mov
in
or
jecxz
mov
dec
or
imul
add
out
adc
mov
test
fsts
jg
scas
xchg
int
scas
int
mov
loopne
push
mov
inc
cmc
add
push
jecxz
idiv
mov
xchg
cmpsl
pop
cmp
out
inc
out
and
ret
std
or
xchg
add
mov
sbb
pushl
popa
jno
mov
cli
add
je
and
arpl
decl
dec
shll
mov
ds
jno
jmp
jne
repnz
fcoml
jmp
lods
lea
add
cmp
in
test
je
fadds
sbb
decl
push
or
ret
inc
mov
jo
test
insb
mov
push
aad
mov
mov
dec
sub
frstor
mov
shlb
decl
push
jns
jecxz
insl
mov
scas
add
test
repz
inc
and
movsl
jg
xchg
xor
out
jb
pop
outsl
inc
xchg
scas
jnp
test
pusha
outsl
jl
mov
mov
mov
popa
and
hlt
fcoms
ljmp
inc
out
popa
in
sti
pop
dec
cmpl
xchg
subb
pop
dec
dec
jg
add
mov
jle
fiadds
jmp
cli
aaa
enter
sbb
sbb
sub
push
or
jmp
mov
mov
test
clc
test
data16
xchg
orl
mov
jno
inc
adc
jg
cmc
mov
in
dec
outsb
jbe
cltd
pop
cmc
and
mov
jle
jp
and
xchg
xor
aad
mov
and
mov
lods
jg
jmp
add
cmc
add
pop
orl
roll
in
pusha
and
fucomip
mov
sbb
call
pop
ja
incb
jns
and
mov
rol
pop
adc
inc
jmp
fimuls
pop
imul
mov
or
jg
jns
inc
pop
add
imul
pop
movsl
cs
mov
rcll
imul
sub
jmp
in
int
imul
bound
shll
jg
xchg
ljmp
jnp
adc
pop
call
fsubs
out
call
pop
outsl
stos
and
inc
bound
inc
cs
dec
clc
dec
and
in
fidivs
sbb
ret
loopne
mov
int
and
dec
in
shrl
sub
cmp
xchg
incb
or
pop
gs
and
es
getsec
loopne
lcall
jle
cmpsb
or
push
adc
sar
filds
test
lcall
cs
cmp
sub
cs
sub
pop
dec
sub
mov
add
jno
pop
jo
shlb
data16
pop
call
jae
pop
aaa
andl
and
cs
mov
decl
xchg
and
mov
test
sti
cwtl
sbb
in
cmpsl
mov
mul
in
jmp
js
add
cvtpi2ps
fidivrs
dec
std
call
pop
sub
int
stos
jno
adc
sub
dec
ud0
lcall
dec
scas
jmp
rcrl
repz
xchg
dec
sbb
add
aaa
imul
movsl
pop
mov
test
sub
mov
xchg
sub
pop
sbb
hlt
adc
and
sub
dec
jbe
add
orl
mov
or
sti
jmp
xor
jg
aas
mov
xchg
pop
mov
aam
lcall
insl
dec
dec
loop
outsl
sbbl
adc
dec
mov
out
inc
popf
data16
hlt
cmp
inc
cmc
scas
fisttps
jl
cmpsb
dec
in
roll
adc
jno
ljmp
cld
mov
or
out
sti
jle
xor
dec
adc
jb
jnp
lcall
int
dec
push
dec
fsubrp
mov
pop
sbb
sbb
flds
mov
lods
call
pop
shl
fistpl
push
cltd
mov
fisttpll
dec
repz
jp
outsl
hlt
lret
jmp
rcll
jns
in
cmp
ret
and
mov
std
movsl
outsb
sbb
xchg
ficoms
scas
sub
in
push
push
lods
sub
pop
push
call
clc
stc
out
out
cltd
sti
gs
int
dec
scas
jae
aad
arpl
dec
call
clc
lea
sub
add
mov
cmp
inc
jmp
lds
js
pop
into
imul
pop
or
into
adc
push
test
push
bound
jmp
leave
add
aas
lcall
lahf
negl
out
or
int
lret
mov
test
popa
cmp
notrack
incl
cmpsl
jecxz
clc
stos
xchg
mov
pop
js
jae
cmpl
ljmp
aad
push
xchg
rcrl
mov
leave
jb
add
das
enter
mov
or
add
jp
call
call
add
adc
mov
jmp
repz
push
mov
rorb
ja
inc
xchg
clc
testb
movsl
sub
in
das
arpl
addr16
pop
or
mov
mov
pop
std
das
push
xlat
sub
rorl
imul
mov
lods
out
arpl
add
scas
movsl
dec
pop
xor
das
icebp
mov
lret
jns
rorl
out
jmp
jg
ljmp
sub
mov
enter
sti
out
pop
roll
xor
mov
ljmp
fxch
mov
movsl
in
push
orl
cmp
mov
mov
fs
std
ret
out
dec
fcomps
jle
jnp
orl
pushl
adc
pusha
mov
add
adcb
pxor
jg
adc
jg
xchg
fidivs
rcrb
insl
test
pop
data16
sub
ret
jmp
dec
test
call
test
and
cli
push
jnp
sbb
sahf
stos
ljmp
jg
or
insl
add
jb
ljmp
dec
jge
mov
mov
ljmp
aaa
xchg
or
test
mov
lcall
lock
testl
xchg
inc
mov
adc
test
les
sub
push
das
std
jle
cmp
jmp
or
mov
sti
decl
ds
aas
xchg
add
xchg
or
sbb
loope
cmp
dec
jbe
jg
aaa
clc
inc
shlb
sarb
clc
adc
adc
add
ret
push
ror
xor
andl
jnp
fbstp
mov
jmp
mov
jae
int3
test
or
bound
scas
dec
mov
xchg
lods
jmp
call
fmul
popa
mov
push
pop
scas
jle
xchg
jle
jg
xor
sbb
or
in
mov
xor
or
or
idivl
fidivs
iret
dec
das
std
push
sub
inc
cmp
xor
cmp
cmp
adc
adc
aam
hlt
decl
sbb
xor
loope
sbb
lcall
sub
incl
sub
and
mov
or
pushl
pop
mov
sbb
cmp
stos
and
adc
jle
fucompp
in
pop
cli
pushl
mov
jp
mov
mov
add
ret
ds
cs
popl
cmp
push
jle
arpl
sbb
mov
cli
pop
jl
icebp
xor
dec
jmp
dec
mov
jl
sbb
cmp
cmc
call
data16
add
stos
orl
jb
cmpsb
add
rcrb
xchg
mov
pop
mov
add
and
pushl
dec
sbb
test
repz
push
sub
das
inc
loope
stos
or
call
xor
sbb
jl
mov
int
stc
pop
xchg
mov
jecxz
jmp
insl
xchg
dec
pop
cmpl
aas
adc
pusha
cmp
aas
fs
push
imul
int
xchg
ss
pop
mov
out
sahf
sub
xor
adc
jg
cmp
mov
push
pop
mov
inc
jl
cmc
dec
fcomip
mov
cmpsl
mov
push
pushf
adc
pop
loopne
pop
out
fdivrl
aam
lock
adc
cmc
ds
cld
pop
dec
adc
jns
iret
test
adc
mov
iret
adc
mov
pop
sbb
pop
mov
das
lock
jg
aaa
sub
add
cli
pusha
sub
sbb
mov
aam
loopne
fstpt
or
push
pop
sbb
adc
adc
pop
dec
dec
dec
fwait
and
pop
adc
pop
cmp
xchg
fisubl
mov
sub
sub
inc
loopne
sub
adc
clc
sbb
pushl
js
push
sbb
fsubr
xchg
movsb
cmp
mov
das
hlt
pushl
jnp
mov
cmp
jle
mov
xor
pushf
add
out
push
xchg
stos
push
xchg
mov
cli
mov
inc
sub
or
push
adc
pushl
iret
int
dec
inc
or
jbe
repnz
adc
int
push
dec
pop
adc
xor
cld
push
cmp
push
push
jl
mov
xor
mov
imul
ljmp
jbe
push
cs
cmp
sub
or
cmp
mov
sar
sbb
or
cmp
popf
adc
out
cmp
xor
adc
jo
ljmp
addr16
add
add
dec
jge
jbe
aas
push
ljmp
or
dec
ss
call
or
cmp
inc
sahf
inc
push
adc
clc
fcomip
decl
pop
jge
xchg
in
dec
sbb
mov
or
sbb
adc
sbb
sbbb
insb
cltd
inc
shrl
sbb
pushl
cmc
std
lea
sti
adc
dec
push
push
pop
mov
cmpl
jmp
ds
mov
test
sub
and
fcmove
lea
aas
push
in
xchg
sti
fisubrl
jg
lods
sbbl
dec
cmp
mov
and
arpl
mov
adc
jo
cmc
mov
xchg
add
sbb
test
fstpt
jbe,pn
sub
out
push
xchg
and
jmp
xchg
add
sbbb
lds
adc
lods
popa
cs
jnp
shlb
in
mov
pop
pop
mov
sub
imul
sti
popa
es
or
or
jge
repz
insb
or
fsubr
adc
jp
nop
fldcw
movsl
mov
aam
add
lds
movsb
addl
ljmp
jl
or
add
mov
das
jge
daa
imul
or
or
cmp
jmp
in
inc
lock
jns
jno
adc
pop
add
mov
jg
incl
imul
int
inc
add
test
cmp
call
pushl
xchg
pop
cmp
and
stc
je
push
xor
mov
sub
or
add
dec
cmp
sub
jg
pop
int3
mov
notb
loopne
inc
push
pop
sbb
loope
loope
pop
enter
pop
push
jmp
adc
xchg
movsb
ficomps
outsb
pop
jl
jle
xchg
sbb
ljmp
call
mov
pop
insl
insb
jle
or
dec
jmp
insl
push
jae
jmp
ljmp
lret
ss
in
or
push
or
test
push
sbb
lock
decl
fisttpll
cs
aam
mov
or
das
pop
mov
mov
cmpl
mov
adc
cmp
pop
sub
push
add
inc
int3
outsl
incl
pop
adc
push
cmp
jle
push
hlt
mov
sub
push
push
cmp
push
rorb
push
inc
inc
adc
or
cmp
add
xor
xor
mov
sub
or
adc
sbb
aam
pushl
push
hlt
ds
outsb
loop
ss
mov
mov
subb
mov
add
sbb
cmp
add
lcall
mov
jnp
or
outsl
pop
std
push
dec
ret
jle
xchg
mov
dec
add
das
cld
dec
std
out
jbe
push
ss
adc
icebp
pop
xor
add
lret
fs
jge
push
out
test
movsb
xor
pusha
adc
mov
pusha
or
fidivs
jno
idivl
add
jmp
sub
cmp
insl
movsb
sar
daa
cmpsl
pushl
cld
or
adc
bound
xor
ss
cwtl
hlt
and
ljmp
cmc
in
mov
xchg
push
cmc
sbb
nop
stc
mov
fists
push
arpl
cmp
add
and
pop
imul
adc
inc
lock
incl
jno
les
into
jmp
push
or
jo
stc
aad
xchg
loop
aas
adc
add
pop
and
ljmp
xor
and
inc
loop
inc
repz
js
push
xchg
sbb
dec
push
push
adc
pop
in
das
cld
push
push
jmp
push
adc
jmp
pushaw
loopne
push
popa
and
cmpsb
pushw
popa
adc
bound
cltd
and
jg
pop
testb
xchg
push
lods
das
sub
jnp
ljmp
popa
adc
outsb
popa
pusha
jno
cmp
ficoms
cmpsl
pusha
loop
test
or
rclb
call
push
push
jb
add
imul
pop
and
inc
int
icebp
filds
enter
sti
xchg
mov
mov
test
xchg
in
ljmp
mov
and
insb
jns
and
stos
inc
cmpsb
adc
sub
aad
dec
movsb
adc
push
mov
push
and
dec
imul
popa
sbb
push
sub
sbb
ud0
incl
pop
stc
and
js
xor
repnz
neg
mov
gs
mov
jle
pushl
pusha
xchg
xor
aaa
xor
imul
adc
testl
mov
int
pop
mov
arpl
lods
lcall
outsl
jle
push
xor
xchg
jp
lea
adc
inc
dec
and
pop
cmp
incl
sub
inc
push
push
bound
bound
fs
xor
cmp
push
std
adc
mov
ja
insl
adc
scas
xchg
xchg
arpl
mov
push
jp
dec
inc
and
jg
daa
sub
xchg
jno
add
call
das
lea
adc
fildl
dec
or
mov
or
sbb
fstpt
lahf
ss
xor
dec
push
jb
ja
and
arpl
aas
xor
ljmp
aad
imul
jne
and
ja
sub
js
jmp
dec
leave
jle
mov
pop
jne
jecxz
stos
lods
pop
loopne
je
aaa
jae
mov
scas
push
push
mov
jo
sub
decl
adc
inc
cmp
add
push
mov
sbb
xchg
xor
testb
aad
sarb
lods
push
ljmp
xor
das
stos
leave
cmp
enter
decl
sub
pop
daa
andb
sub
xchg
xor
cmp
decl
cmp
jb
addl
xchg
mov
add
fidivs
lock
push
jne
xchg
lds
and
cli
mov
xor
xlat
fwait
js
mov
push
push
inc
test
inc
fs
sbb
jae
inc
fildl
loope
adc
data16
fcoms
ljmp
lock
outsb
and
jmp
sbbb
add
mov
cli
pop
daa
inc
scas
nop
jge
lods
jl
adc
inc
adc
push
pop
arpl
inc
clc
call
dec
xor
adc
xchg
sbb
or
ficoms
push
xor
mov
out
xchg
repnz
or
lret
jne
add
scas
inc
or
pushl
aad
xor
xchg
outsl
xor
push
movsl
xchg
testl
dec
mov
loope
mov
call
gs
mov
sbb
cltd
rcl
prefetch
pop
imulb
stos
adc
ret
xor
or
cmc
jg
cmp
mov
inc
pop
push
add
mov
mov
pop
call
and
incl
pop
adcl
cltd
lea
jne
gs
js
test
loope
outsl
adc
sbb
push
push
xor
jb
push
or
jg
mov
sarb
cmpsb
sbb
push
add
and
jp
js
push
pushl
fwait
add
stos
jb
scas
xor
sahf
popf
cmp
jo
call
push
movsb
jnp
xor
js
pop
cs
xchg
mov
decl
sbb
push
mov
lcallw
jns
push
pop
mov
std
shlb
or
mov
les
cli
jg
or
nop
push
jmp
pop
mov
int
cmc
dec
std
fistps
and
cmp
sbb
int
int
adc
outsl
xor
outsl
imulb
pop
mov
pushf
in
call
jnp
adc
sbb
sti
das
jp
fucomip
sbb
int
push
dec
in
dec
xor
in
call
or
pop
jns
inc
lcall
cmpsl
and
jecxz
mov
test
sub
cmpsl
jb
cmpsl
stc
outsb
mov
or
lcall
aas
cld
adc
outsl
call
pop
adc
mov
xchg
inc
int
adc
push
pop
or
xor
test
push
data16
push
imul
xor
adc
test
adc
jecxz
mov
jg
imul
nop/reserved
fnsave
mov
lea
add
jp
lods
dec
stc
xchg
jo
adc
test
je
std
fildl
xor
movsb
int
popa
sarl
cmpsb
loop
push
push
push
inc
jne
jo
cld
fistpl
xlat
dec
int
add
dec
mov
sbb
lcall
lds
js
and
jg
lret
push
fs
dec
gs
xlat
mov
jae
sub
dec
jp
pop
push
outsb
or
pop
divb
sarb
js
jo
std
lods
sub
shrb
pop
adc
inc
cmp
pushl
out
push
or
scas
inc
jbe
sbb
push
jg
ss
insl
leave
pop
push
and
outsl
adc
adc
fcmove
call
adc
jbe
lret
push
incl
sbb
adc
mov
jp
cmp
lock
push
sbb
call
aad
ds
adcl
xchg
xchg
js
xor
or
push
inc
add
add
test
jecxz
adc
xchg
fs
pop
fcoms
int
jg
xlat
push
adc
mov
popf
add
adc
adc
fwait
cmp
pusha
pushf
push
adc
jne
xchg
mov
popa
pop
or
sub
pop
loop
jmp
adc
xlat
push
shr
std
pop
sbb
sbb
inc
jmp
push
push
in
push
out
push
std
xchg
mov
mov
inc
push
push
aad
jmp
pop
mov
mov
adc
xchg
adc
ss
ds
inc
inc
and
xor
xchg
xchg
mov
stos
pusha
test
pusha
adc
dec
xor
adc
adc
pusha
inc
mov
xchg
adc
fldenv
adc
add
mov
leave
add
push
scas
aad
sbb
in
mov
adcl
iret
push
adc
in
lret
push
adc
cmpsb
lods
arpl
pop
pop
sbb
adc
adc
dec
enter
imull
inc
cmpsb
movsb
mov
insb
dec
push
lock
adc
pop
mov
daa
std
add
adc
dec
data16
dec
add
adc
push
xor
adc
in
loope
out
adc
mov
mov
test
mov
adc
aas
add
insb
xchg
in
cmp
add
add
xchg
pop
add
pop
insl
mov
repz
inc
inc
out
push
and
inc
inc
jb
inc
push
push
adc
push
adc
push
jns
mov
mov
jns
jb
test
push
lock
cs
push
ljmp
or
push
or
jg
sub
dec
jle
js
jae
sub
outsl
ja
push
incl
add
inc
ret
mov
inc
mov
mov
push
arpl
mov
and
in
in
or
or
jne
adc
dec
stc
xchg
pop
mov
imul
fisubrs
ret
pop
push
je
lods
or
fists
addr16
jns
gs
nopl
fisubl
jo
outsb
or
insb
pop
and
outsl
loop
mov
insl
insl
popa
dec
dec
sub
gs
mov
push
subb
jns
mov
data16
or
sub
in
dec
test
or
push
gs
mov
dec
push
adc
adc
sub
insl
add
push
ja
fimull
xchg
mov
or
adc
test
push
sub
or
outsl
imul
and
dec
in
mov
arpl
fcomps
push
or
ret
adcl
add
mov
testl
push
mov
or
cmp
int
or
mov
xchg
je
inc
sbb
insl
jne
cmpsl
fs
inc
rorb
sbb
jo
in
dec
mov
dec
outsl
fs
mov
add
ja
jo
xor
repz
sbb
fs
push
mov
push
outsl
dec
testl
je
sub
fildll
mov
fnstenv
xchg
inc
fstps
xchg
jne
data16
mov
imul
push
ret
or
dec
inc
dec
adc
xadd
push
fs
cmp
loop
xchg
jg
sbb
fs
scas
push
jle
mov
into
cmp
adc
inc
or
push
outsb
ja
imul
mov
arpl
jb
mov
inc
fisubrl
add
sub
sub
or
push
and
pop
push
dec
pusha
push
push
lock
mov
push
pop
invd
or
push
or
add
push
inc
adc
sbb
pop
adc
adc
xlat
mov
daa
or
or
or
or
add
push
jg
adc
sub
push
pop
or
push
or
lock
add
push
sbb
notb
or
adc
push
or
inc
cmpsb
lock
mov
out
add
adc
adc
sbb
bound
pushl
adc
push
or
sbb
adc
sbb
or
adc
and
filds
pop
sbb
jl
pushf
adc
sbb
or
pop
adc
sbb
cmp
add
es
add
dec
push
add
or
pop
jg
out
push
sbb
dec
add
sbb
sbb
adc
mov
add
pop
or
inc
leave
mov
sti
mov
cmp
sbb
adc
or
adc
push
or
mov
in
fists
bound
push
sub
and
adc
and
push
xor
and
rdmsr
adc
adc
inc
push
pop
pop
dec
inc
jecxz
xor
decb
aas
push
adc
adc
daa
cmovb
insb
adc
jecxz
movsb
jb
push
or
or
pop
mov
decl
or
nopl
cs
sub
sbb
or
aam
mov
dec
lock
add
adc
add
adc
or
jnp
push
and
jno
loope
or
sbb
in
mov
push
outsl
push
push
adc
adc
or
push
movups
data16
jg
jg
lock
add
push
enter
mov
push
push
sbb
sti
lcall
xor
inc
add
or
cmp
xchg
sbb
lock
inc
out
stc
add
dec
or
les
add
and
adc
repz
add
pusha
sarb
gs
add
dec
shll
inc
adc
loopne
push
and
add
fisubl
js
pop
and
outsl
push
in
in
add
add
pop
adc
xorb
sub
add
lret
mov
pop
push
or
mov
mov
nop
cwtl
add
ret
pop
add
cld
inc
je,pn
js
out
nop
sub
pop
imul
adc
jb,pn
dec
outsb
scas
push
push
jp
add
out
add
es
or
jo
rorb
insb
mov
add
nop
and
dec
mov
push
xor
mov
lock
mov
js
adc
add
add
add
and
incl
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
