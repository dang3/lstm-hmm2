add
fsubs
push
sub
mov
push
and
aaa
and
popa
dec
test
enter
xor
outsl
nop
pop
sahf
sub
enter
movsl
mov
movsl
pop
xchg
scas
popf
cmp
daa
add
repnz
test
mov
mov
jg
popa
dec
xchg
mov
sub
push
insl
fnstcw
int
inc
push
dec
dec
pusha
mov
mov
cltd
pop
iret
subb
sbb
movsbl
xchg
add
jmp
loop
inc
fisubrl
cltd
dec
sub
jns
test
imul
stc
xor
sub
arpl
and
and
adc
jns
jge
lds
fidivrs
lock
add
mov
sbb
xchg
xor
bound
pushf
addr16
push
rep
dec
aaa
dec
add
and
scas
jne
cmp
jle
push
rorb
jle
sbb
jecxz
and
dec
cltd
pop
jnp
jg
and
in
and
scas
or
pop
test
mov
pop
popa
push
xchg
cli
xor
and
stc
in
lods
lcall
jns
push
mov
add
dec
xchg
mov
or
mov
mov
sahf
imul
lcall
mov
shl
rorb
sbb
pusha
imul
scas
add
movsl
lcall
dec
sbbl
dec
scas
pop
imul
mov
and
pop
shlb
push
xchg
mov
lahf
push
adc
nop
mov
inc
int3
in
std
adc
jl
push
and
adc
add
lock
xor
lret
sub
cld
bnd
aam
mov
stc
movsl
popa
aaa
mov
andl
sub
pop
or
ljmp
xor
out
pushf
pushf
leave
dec
pop
inc
mov
dec
and
movsl
mov
adc
xchg
mov
cwtl
sub
loop
icebp
or
pop
cmp
popf
adc
mov
and
lret
adc
dec
cltd
mov
fcom
jae
data16
scas
dec
xchg
cmp
loopne
test
repz
in
lahf
loope
pop
xor
push
mov
jno
jle
push
flds
inc
xlat
jo,pt
dec
mov
rcrl
outsb
push
test
mov
push
mov
sub
and
cwtl
in
movsl
out
cmpsl
jg
xchg
cmp
add
je
mov
fwait
xchg
shr
lods
cmp
push
dec
mov
fdivs
xor
mov
pusha
or
lret
ficoml
mov
loopne
movsb
orb
fadds
xlat
rol
xlat
adc
iret
sahf
pop
outsl
or
pop
out
sti
sbb
imul
push
xchg
arpl
orl
jp
adc
mov
xor
dec
and
push
clc
pop
dec
cmp
or
lret
adc
adc
push
sub
add
mov
arpl
jbe
inc
jno
cmp
aam
pop
fisubrl
xchg
xor
or
and
mov
jmp
cmp
inc
enter
add
in
mov
xor
loope
ret
stos
sub
sub
jp
pop
fbld
loope
mov
std
cli
aas
sub
mov
movsl
fwait
jge
pop
cmpsb
arpl
lret
fistps
sti
xor
enter
sbbb
jmp
hlt
loop
into
xlat
jb
xor
arpl
or
inc
dec
push
mov
pop
out
pop
cmp
insb
pushf
jo
inc
add
sbb
jecxz
push
mov
nop
pushf
fwait
sub
dec
cld
inc
inc
sub
cmpb
xchg
adc
lock
popf
xchg
popf
sbb
lret
xor
add
sub
or
leave
jp
push
add
clc
adc
mov
scas
adc
mov
negl
ret
in
push
or
out
insl
ljmp
mov
and
sub
inc
cwtl
repz
fistpll
aam
mov
push
pop
aam
inc
sub
add
popa
ror
lea
xchg
outsb
lahf
fadd
andl
std
xchg
loopne
mov
lahf
in
insl
incl
lods
push
mov
mov
xor
cmp
and
sbb
pop
not
jmp
sbb
int3
cli
pop
jo
cltd
divl
pop
mov
xchg
and
movsl
icebp
mov
mov
push
push
fiadds
dec
mov
inc
add
pop
test
lds
and
xchg
loopne
jg
adc
mov
addr16
mov
cmp
fcoml
dec
mov
add
cmp
call
andl
jecxz
xchg
into
lcall
pop
movsl
xchg
mov
lods
out
or
jns
pop
pop
push
imul
dec
pop
rcr
nop
iret
sarl
insl
es
and
jp
cmpsb
jo
jbe
cld
rorl
ja
movsl
rol
mov
mov
adc
or
pop
insl
pop
xlat
ss
int
sbb
jl
pop
and
sbb
aad
in
sbb
sub
fcomps
sbb
enter
jbe
xor
jmp
mov
les
or
mov
out
fcoms
sub
add
cmp
sub
cmp
in
es
push
fisubs
dec
outsb
push
pop
lret
lret
xchg
or
ds
in
mov
into
xor
dec
mov
cmp
sub
int3
xchg
leave
pushf
leave
cmpsl
shrb
or
sub
test
or
or
iret
les
es
hlt
xor
pop
push
repnz
add
js
mov
into
orb
xchg
inc
pop
enter
dec
imul
adc
mov
sbb
mov
push
mov
add
cltd
xchg
inc
sbb
sub
sbb
jns
push
leave
and
lret
fwait
mov
mov
xchg
in
sub
xchg
push
lea
popa
scas
and
sub
ret
out
xor
mulb
add
das
push
mov
jp
inc
fidivl
mov
cmpsl
out
dec
push
dec
sub
cs
insb
mov
adc
mov
mov
push
ds
xchg
ret
push
dec
and
repnz
cmp
loop
cld
pop
xlat
lds
shlb
dec
add
movsb
mov
pop
aad
es
inc
xchg
inc
xchg
bound
movsl
cmc
mov
adc
lock
jecxz
xor
inc
sub
inc
xor
insl
lods
dec
jbe
fucom
fsubs
xchg
dec
ja
jle
cmpsl
and
mov
insl
mov
sbb
dec
je
cmp
push
push
mov
shlb
cmp
fs
xor
fadds
cmp
pop
cmpsl
fimuls
xchg
xor
or
ss
sbb
jg
fs
pop
shll
incl
adc
inc
rorl
mov
int3
jmp
das
or
stos
pop
cmpsb
jo
std
test
push
jp
es
add
inc
xchg
pop
cmc
mov
fdivs
insb
push
pop
repz
out
adc
fwait
jmp
and
jns
movsl
mov
mov
xchg
push
cmpsb
push
and
or
add
xchg
insb
fidivrl
sbb
sbbl
mov
ficoml
mov
mov
das
dec
xchg
loopne
mov
and
push
and
sub
mov
cmp
dec
rcl
mov
jmp
insl
rcr
subl
fildll
mov
jb
scas
push
lock
pop
inc
push
imul
cmp
jecxz
adc
inc
lahf
push
jns
mov
add
inc
lahf
xchg
stos
aas
lods
negb
pusha
adcl
sub
jmp
test
pop
and
jp
lock
lds
repnz
cs
arpl
jne
adc
adc
xlat
popf
mov
mov
lods
stos
scas
stc
fwait
sub
xchg
test
cmc
mov
jle
jnp
mov
mov
or
inc
sbb
cmpl
out
pusha
popf
fstps
xchg
jno
test
push
mov
in
cld
fisubrl
xchg
clc
aad
in
inc
je
push
dec
cmp
mov
mov
xchg
push
or
sbb
in
inc
ret
push
push
ror
fistl
jecxz
fisttpll
test
nop
sub
push
push
jnp
and
jb
pop
adc
push
jno
jns
push
dec
push
ja
pop
mov
sub
push
cwtl
jbe
mov
shll
mov
ret
push
movb
xchg
shll
cmc
movb
test
mov
adc
xchg
ret
push
ret
je
sbb
cli
pop
fnsave
push
cmp
or
xor
mov
pop
bound
flds
addr16
mov
sub
std
dec
in
repz
inc
cli
cmp
xchg
dec
movsb
aam
clc
es
mov
setbe
cs
push
iret
pop
lea
sarb
inc
or
bound
pushf
mov
cmp
addl
lds
pushf
repz
lahf
dec
mov
sub
adc
inc
clc
sub
nop
test
ds
ljmp
push
je
push
sti
leave
mov
jge
inc
icebp
leave
cmp
jp
fstl
push
test
and
push
fdivrl
outsb
mov
outsb
and
clc
aam
mov
mov
pop
add
push
or
js
or
mov
pop
mov
cs
mov
xchg
stos
das
xlat
push
jae
and
loopne
ret
jns
xor
mov
inc
scas
push
cltd
out
pop
cs
js
mov
jbe
out
sbb
xchg
push
xchg
sbb
push
inc
aam
scas
mov
jl
cmpsb
scas
mov
lock
ljmp
insb
mov
imulb
stc
negb
jecxz
sbb
dec
das
xchg
cltd
test
int3
mov
xor
sub
lret
insb
shlb
mov
js
andl
push
mov
ljmp
popa
push
mov
nop
repnz
and
psubusw
ret
mov
jle
jge,pt
xor
fstpt
pop
in
cmp
jae
push
mov
xor
mov
mov
scas
push
in
fstpt
inc
xchg
vpunpckhwd
fsubrl
inc
and
xor
sub
push
sub
lock
inc
scas
adc
cs
mov
inc
mulb
gs
outsb
mov
into
pop
mov
inc
das
mov
xchg
ljmp
add
loopne
popa
jg
push
xlat
addr16
cmp
add
ljmp
mov
adc
sahf
mov
cmp
ret
jmp
sub
and
pushf
clc
mov
mov
call
mov
out
lods
pop
or
dec
movsl
lods
mov
cmp
icebp
push
stos
arpl
loope
mov
mov
test
dec
inc
fs
jp
pop
shll
sub
xor
mov
adc
mov
pop
push
sub
sub
clc
es
fistpl
cmp
aaa
testb
xor
add
sbb
in
xor
sub
mov
pop
ret
and
jl
jecxz
xor
je
stc
shl
inc
sbb
ret
sub
dec
mov
inc
pop
popf
movsb
adc
cli
push
xchg
in
push
jbe
push
cmp
pop
xchg
repnz
xchg
push
cltd
mov
aas
in
add
sti
and
test
scas
das
cmovno
sar
xor
adc
jnp
fildll
inc
mov
les
in
ds
adc
jo
or
rcr
xor
in
pop
inc
in
addr16
cltd
sbb
mov
popa
xlat
repnz
mov
jno
mov
and
jecxz
inc
xchg
scas
mov
sbb
sarl
xchg
aad
cmpsb
cmpsb
dec
jle
pusha
inc
inc
or
gs
mov
push
jns
pop
sub
xor
shrb
lahf
push
jmp
jmp
sbb
xchg
sbbl
fcompl
mov
jo
out
aad
ja
cmp
sub
cwtl
and
or
call
movl
filds
cltd
mov
dec
das
push
mov
test
and
es
mov
dec
mov
pusha
js
jo
push
cld
lods
push
ja
sbb
mov
cld
adc
xor
test
lret
repz
pop
or
mov
mov
lods
nopl
or
inc
mov
mov
pop
pop
pop
mov
xchg
notb
aad
adc
sub
inc
and
pop
pushf
int3
mov
cld
pop
mov
sub
jae
fdivp
add
push
push
in
mov
mov
loope
pop
fsubl
sbb
push
loope
xchg
xlat
sub
movsl
rcll
add
or
out
cmp
pop
shrb
jmp
adc
mov
mov
dec
sbb
inc
cmp
call
xor
xchg
push
add
dec
push
scas
push
lods
ja
fstps
push
js
lock
sub
add
fs
scas
fdiv
push
mov
jmp
push
ja
clc
outsb
mov
push
aam
imul
seto
call
lret
call
push
adc
lods
aaa
mov
dec
popa
das
add
test
dec
cmp
shl
xchg
jle
push
or
xchg
mov
jecxz
add
sbb
arpl
mov
jae
push
dec
pop
cs
ret
pushf
stos
out
jle
in
iret
js
lcall
lods
imul
xchg
mov
mov
arpl
pop
mov
popf
outsl
and
es
add
xchg
data16
lods
or
pop
or
fcmovb
and
orb
outsb
sbb
iret
jmp
pop
jg
push
push
mov
or
xchg
mov
outsl
pop
hlt
mov
or
dec
sub
call
ljmp
lods
jge
jge
lcall
sbb
jecxz
je
dec
and
in
cmp
push
dec
les
ds
outsl
dec
aas
push
push
adc
fwait
jg
cs
imul
push
in
andb
cmp
cmc
xor
pop
jge
mov
insb
cltd
jg
mov
jnp
mov
or
daa
rcrb
jbe
js
js
lret
cli
cmp
pushf
test
mov
mov
js
jb
mov
stos
daa
aaa
cmp
fcoml
cmpb
lds
stos
lret
fiadds
cmp
jmp
cmpsl
in
in
dec
sub
inc
rorb
cmp
push
fnstenv
cmp
fcompl
mov
dec
fbstp
mov
pop
cmp
pop
movsb
out
add
lahf
dec
test
bound
jne
pop
cmp
push
jns
add
pop
rol
je
nop
ret
rcrb
jp
xchg
xchg
or
int
mov
mov
adc
adc
push
punpcklwd
je
loope
shr
adc
jmp
and
cwtl
dec
xchg
lret
out
sbb
xchg
pop
cmp
jnp
jae
dec
pusha
shrl
dec
lret
std
enter
out
js
sub
fs
test
jle
idivb
mov
mov
fwait
aad
dec
xchg
inc
scas
cmpsl
mov
into
aaa
push
dec
mov
lahf
aad
mov
ja
popf
mov
les
rcrl
mov
cli
imul
sbb
movsl
add
daa
fdivrl
clc
cmpsb
pop
fld
js
sahf
leave
pusha
test
out
and
jle
cli
mov
xchg
add
movsl
mov
mov
push
aaa
mov
sbb
movsb
insb
mov
or
cmpsl
leave
std
cmc
cmp
subb
in
xor
movsb
arpl
xor
ror
aas
pop
jmp
and
mov
mov
jmp
and
stc
mov
subl
jo
lret
fwait
cli
int
xchg
mov
fimull
pop
xchg
fisubl
pusha
jbe
dec
xlat
xchg
lods
es
xor
cmp
mov
push
insl
pusha
imulb
or
gs
shll
push
push
mov
aam
or
mov
add
movl
jmp
mov
imul
xchg
dec
scas
adc
call
pop
hlt
xor
add
shr
or
hlt
push
jns
push
xchg
ret
movsb
outsl
out
xor
add
add
mov
lcall
mov
cwtl
adc
arpl
int3
outsb
add
test
xchg
push
inc
scas
xchg
test
cmp
adc
pop
cld
sub
mov
cmc
jl
pop
adc
test
scas
inc
push
xor
iret
sub
scas
jns
add
sahf
push
and
dec
sbb
xchg
inc
mov
aad
mov
mov
sbb
mov
inc
test
in
and
fdivrs
cs
int
aam
add
pop
daa
add
movsb
pop
pop
test
sub
icebp
xor
les
dec
enter
ljmp
loope
adc
andl
incl
mov
add
lods
mov
adc
or
test
mov
push
fstl
fildll
stos
sahf
test
mov
inc
loop
nop
sbb
les
test
xchg
sub
lahf
dec
rol
mov
enter
call
arpl
mov
push
test
inc
sub
sarb
pop
lcall
out
push
xor
inc
push
fwait
call
das
das
xor
ljmp
in
xor
cmp
ss
mov
dec
movsl
xor
pop
in
mov
xchg
out
mov
mov
jne
aad
notl
mov
jnp
push
add
adc
dec
je
test
or
incb
cmpsl
pushf
nop
xchg
jb
jno,pn
stos
das
cmp
ss
rorb
xchg
fcomps
icebp
mov
lea
push
sbb
test
cmc
and
les
sbb
cld
dec
jle
jnp
leave
add
or
jge
and
lahf
lret
adc
sbb
pop
popf
lahf
jecxz
int
sahf
repz
sub
shrl
push
pop
rorl
subb
out
es
xor
pop
scas
popf
popa
dec
rep
jge
inc
fwait
jno
add
fiadds
sahf
jbe
popa
mov
pop
push
or
outsl
xchg
insl
insb
and
push
stos
xor
movsb
pop
xchg
insb
test
jno
jno
cmp
xchg
sbb
les
arpl
cltd
loope
and
jae
out
enter
call
cmp
daa
insl
xchg
dec
push
cmpsl
in
iret
and
outsl
sbb
test
out
add
add
cmp
xchg
adc
inc
scas
fwait
pop
push
scas
ds
jo
std
int
inc
mov
adc
xchg
xor
stos
rcl
mov
sbb
push
ja
popf
dec
pshufw
testl
nop
pop
in
and
jbe
dec
xchg
mov
mov
cmp
push
shll
lcall
mov
pushf
cmpsl
add
mov
roll
iret
cli
enter
push
arpl
push
in
outsb
pop
fcoml
and
mov
mov
ret
idivl
add
les
push
cmp
xchg
xchg
cmpsb
mov
lds
repnz
sub
mov
mov
mulb
movsl
lret
xchg
pop
xor
imul
xchg
iret
pop
jp
inc
pop
dec
cmp
mov
out
rorl
mov
test
mov
mov
jbe
sbb
cmp
movsl
lods
push
mov
cmp
jne
push
inc
xchg
sarl
or
mov
lcall
std
cmp
mov
jbe
sub
int
jne
data16
ret
in
ret
jns
mov
push
popf
and
jle
dec
xor
rorb
cwtl
and
cwtl
cltd
push
jbe
inc
push
scas
and
ret
mov
cmpsb
sub
xchg
fs
and
rolb
dec
clc
nop
call
popaw
push
adc
imul
rorb
into
es
pop
fimull
xor
xor
fdivr
sbb
dec
push
das
inc
dec
inc
pop
dec
fstl
iret
cmp
loop
cmp
cmp
adc
lods
mov
lea
cwtl
insl
push
push
es
hlt
in
ss
hlt
adc
das
push
push
fsubl
lret
jge
clc
enter
into
inc
cmp
fstp
pop
pop
mov
xlat
jae
cmp
dec
cli
lcall
jnp
xchg
sub
loop
push
and
cmp
xor
insl
pop
mull
loop
cmc
xor
jl
mov
cmpsb
xchg
mov
sub
or
mov
sbb
rcll
subl
out
int
xor
rolb
fwait
jmp
lahf
shlb
adc
jo
mov
lahf
xchg
negl
cmp
push
xor
xchg
nop
fwait
sbb
decl
mov
push
mov
imul
mov
sub
das
cmp
xchg
xchg
xchg
out
call
or
push
xchg
xchg
sar
inc
js
mov
xlat
xchg
xor
xchg
std
add
mov
pop
xor
sbb
icebp
into
adc
call
and
aas
push
inc
mov
cmc
xchg
xor
dec
ss
add
xor
mov
and
cli
pop
shr
add
jns
cmp
cli
cmp
mov
imul
into
daa
add
cmp
inc
pop
cmp
xchg
inc
lock
sarb
dec
cmp
mov
pop
xchg
lret
jae
call
and
jge
jle
pop
shll
lock
xlat
aaa
mov
cwtd
imul
sbb
rcrl
or
cmp
pusha
scas
mov
xlat
clc
subl
inc
and
dec
sub
mov
pop
std
inc
fs
push
mov
repnz
sbb
cs
rcl
imul
in
fsubl
adc
xchg
mov
sbb
mov
jmp
xchg
xchg
mov
notl
push
mov
ja
cltd
xor
mov
pop
fdivl
das
mov
push
push
pusha
mov
or
adc
jle
iret
in
jge
mov
mov
xor
cmp
subl
cltd
or
lods
mov
jbe
inc
pushf
insb
fbstp
inc
lret
add
pop
mov
push
and
mov
aam
mov
hlt
enter
cmpsl
lock
fdivr
cs
adc
cmp
fwait
mov
xor
stc
out
paddsw
dec
mov
push
jnp
int3
cmp
mov
xchg
mulb
cmpsl
mov
lret
ja
fcmovne
pop
pop
sub
add
aam
inc
inc
mov
cmp
add
push
popf
xlat
loop
jno
pop
cmpsl
outsb
cmc
daa
xchg
mov
pop
jl
jb
stos
pop
loope
mov
jno
pop
and
stos
lods
inc
push
xchg
fisttps
call
push
cmp
cmp
repnz
testl
add
and
adcl
mov
mov
xor
mov
adc
cwtl
les
inc
imul
sbb
mov
pop
mov
imul
mov
push
jle
jb
lcall
push
sbb
fcoms
pop
push
mov
sub
dec
dec
out
pop
dec
icebp
sub
int
and
aaa
fisubl
test
cmpsl
dec
xchg
je
mov
stos
cmp
pop
fwait
push
inc
sbb
sbb
sbb
inc
mov
xor
stc
cld
icebp
add
out
out
xchg
fadds
jp
repz
ss
pop
popf
mov
push
mov
adc
dec
push
jl
xchg
xor
add
cmp
and
je
sbb
adc
in
rorb
dec
xor
add
jl,pt
bound
stos
lds
gs
inc
pop
scas
ret
inc
je
dec
leave
lea
add
repnz
fmull
inc
icebp
testl
orl
or
and
add
push
pop
push
or
lcall
push
aaa
mov
sbb
rorl
jae,pt
data16
dec
fisubrs
xor
loopne
push
pop
bound
cld
fdivp
ret
push
movsb
pushf
mov
addb
push
test
cmpsb
cmp
mov
pushl
insb
dec
sub
sbb
cwtl
xor
pushl
push
divl
pusha
rclb
dec
out
aad
mov
mov
push
pusha
cmp
xor
movsb
mov
jnp
pop
ficomps
aam
imul
pop
mov
jo
jae
mov
cvtdq2ps
leave
adc
nop
das
mov
outsl
call
in
ficoml
mov
insb
cmp
ficomps
sbb
movsl
es
lret
sub
mov
cwtl
adc
pop
and
adc
push
cmp
sbb
jle
cmpsl
stc
pusha
mov
jg
or
and
lock
out
mov
mov
cmp
mov
sbb
pop
inc
aam
mov
imul
push
fisttpl
xor
fisttpll
sbb
sbbl
jmp
adc
ljmp
inc
jmp
xlat
mov
dec
stc
ja
mov
mov
adc
xor
scas
inc
sahf
ss
xchg
inc
add
pop
xchg
and
mov
cmc
in
ret
pop
call
pusha
dec
out
pop
jmp
stos
hlt
cmp
xlat
sub
cmp
add
les
stos
int3
jl
scas
jg
xchg
shlb
cltd
lahf
mov
inc
lahf
mov
ss
aad
xlat
dec
out
addr16
fcmovnb
aas
xor
cmp
fldt
std
sarl
mov
add
or
mov
mov
inc
dec
in
jg
inc
insl
lcall
int3
jle
fcoms
jbe
dec
leave
sub
push
inc
mov
cmp
jns
es
pop
imul
and
sbb
lods
dec
cmp
es
iret
mov
push
mov
test
loop
sub
jb
push
cmp
pop
xchg
dec
jmp
inc
adc
rcr
push
fwait
adc
xor
or
test
push
adc
mov
push
std
js
je
push
and
and
test
movsb
or
cmp
movsb
hlt
dec
jae
sahf
jbe
sbb
jbe
std
pop
inc
or
sahf
lods
xchg
test
xor
sub
sub
lret
xchg
inc
mov
xor
test
ljmp
out
int3
jbe
xchg
mov
cmp
inc
cmpsl
lcall
add
fidivs
mov
jecxz
add
dec
dec
insl
lret
frstor
lods
cmp
lret
inc
das
lock
xor
dec
fstenv
insb
dec
mov
add
sti
pop
fxch
inc
cmpsl
xor
sbb
repz
sub
cwtl
jae
mov
push
test
and
sbbl
outsl
dec
sbb
imul
lods
test
inc
imul
out
add
cmp
cmpsl
push
aas
lds
dec
movsl
xlat
das
inc
imul
aad
jbe
mov
xchg
mov
or
fidivs
sbb
adc
or
inc
add
subl
adc
inc
repz
mov
jae
mov
out
nop
test
fisubrs
dec
inc
xor
add
push
aad
inc
cmp
and
shl
mov
pop
jae
dec
pop
mov
pop
jb
or
test
je
cmp
negb
jle
add
mov
and
push
pop
inc
push
inc
jae
rorl
mov
in
or
and
xchg
imul
std
das
out
in
pusha
push
int
fnstcw
mov
ja
push
test
fistpl
andb
jae
ret
and
inc
pop
sbb
dec
pop
ret
inc
sbb
popa
sub
sub
cmp
mov
adc
in
push
jle
pop
cmpsl
xor
sub
loop
fsubl
adc
rol
xor
jns
sahf
insb
cltd
ret
mov
incb
or
cmp
sbb
test
and
mov
outsl
aas
xchg
add
shl
sub
mov
pop
sbb
pop
ja
cmp
push
fisubrs
push
push
pop
xor
jg
scas
pusha
mov
mov
push
add
mov
mov
mov
ss
adc
ficomps
dec
pop
insb
xor
or
cmp
add
mov
jns
cltd
push
and
mov
cld
in
into
mov
push
xor
dec
lods
scas
pop
lock
fdivrs
dec
sbb
fwait
subl
mov
leave
mov
loop
jmp
jg
mov
in
mov
sbb
stc
or
pop
cmp
loope
leave
xchg
lcall
repnz
test
into
lods
dec
or
shrl
add
ss
sub
jne
sub
dec
mov
add
fwait
mov
lea
sahf
out
es
cmpsl
dec
outsl
sub
ret
fcoml
in
push
imul
leave
jge
mov
add
nop
pop
xor
jmp
inc
fsubr
mov
pop
scas
int
pop
lret
mov
mov
inc
or
shlb
xchg
xchg
ficomps
add
mov
test
jbe
out
popa
or
mov
mov
sbb
xchg
inc
push
dec
lret
jnp
jge
jl
push
adc
nop
sub
inc
mov
add
lods
sub
ret
add
adc
cmp
dec
inc
stos
push
scas
jae
add
adc
push
xchg
adc
aaa
aam
into
dec
dec
mov
inc
mov
jo
or
dec
std
notb
dec
push
push
sbb
iret
and
sub
and
sbb
pusha
cmp
fucomi
test
outsb
push
inc
mov
mov
jg
cmc
iret
std
mov
or
shl
rcrb
data16
stc
stos
jne
call
mov
mov
lock
aad
std
pop
cli
and
roll
cmp
ja
out
cmc
cmpsb
icebp
xor
push
movsl
imul
inc
adc
mov
add
xor
jmp
inc
notb
or
and
adc
and
push
sub
sub
clc
rolb
push
mov
lret
es
adc
xor
adc
outsb
mov
arpl
sbb
cmp
cs
inc
arpl
popa
inc
imul
outsl
jns
pushf
gs
pop
shll
in
imul
jmp
jns
std
mov
push
shlb
dec
lock
adc
rol
lcall
scas
xor
andl
jle
inc
ret
xchg
mov
cs
dec
test
repz
push
ret
push
ja
ja
push
cli
and
roll
ljmp
nop
add
mov
or
jb
adc
and
push
push
sub
int
in
adc
bound
addps
fisubs
mov
jl
push
cmp
or
xor
adcl
into
mov
js
imul
testl
inc
test
push
xor
adc
cmpsb
mov
xor
das
xlat
test
rol
adc
fidivrs
out
jg
push
fisubl
out
in
jns
push
mov
mov
adc
test
cmp
jns
jbe
xor
sub
dec
jg
xor
lds
ljmp
or
pop
lret
xchg
inc
xlat
add
sbb
jo
ret
cmp
icebp
jnp
mov
xchg
mov
in
xchg
sbb
mov
aas
xchg
call
lods
xor
push
shlb
mov
pop
int
scas
cltd
es
and
sub
andb
test
push
fdivs
adc
pusha
lea
test
arpl
in
push
sarl
adc
pop
stc
nop
fldl2t
rol
lods
mov
dec
rclb
jnp
faddl
sbb
cmpsb
insl
xchg
sub
das
divl
outsl
add
xchg
pop
daa
cwtl
iret
test
jmp
outsb
neg
push
scas
sti
decl
std
ret
sbb
into
std
mov
mov
mov
add
leave
and
push
aas
add
xchg
sti
add
and
inc
scas
inc
add
add
std
repnz
mov
cmp
popl
bnd
into
fiaddl
roll
jns
lds
lret
jno
inc
inc
stos
sbb
push
mov
mov
insb
mov
push
xlat
xor
fistl
out
mov
clc
xchg
cmp
push
cwtl
out
mov
and
adc
jle
mov
int
sub
or
sti
mov
mov
sbb
aaa
mov
fwait
dec
popf
out
mov
adc
jmp
jno
adc
sar
fcom
outsl
fnstsw
cmpsl
int
pop
push
out
test
lahf
in
imul
ja
in
mov
das
sti
lea
movsl
repnz
sub
sub
adcb
int3
stos
sub
stos
mov
sbb
fimull
adc
sub
or
repz
daa
movsb
scas
cld
cmp
mov
lods
push
clc
jp
stc
test
movl
mov
ret
and
rcrb
or
push
xor
jo
dec
adc
jb
xchg
mov
xchg
iret
cmp
leave
es
add
sub
loop
bound
cmp
addr16
sbb
add
mov
int
decb
or
stos
mov
ret
xchg
fsubrs
add
cli
ljmp
mov
adc
movsb
hlt
fmul
mov
jl
out
pop
je
adc
jb
mov
mov
and
mov
cwtl
into
lods
add
mov
mov
pop
xorl
cli
jge
in
xchg
loopne
addl
push
orl
xor
out
dec
jmp
fiadds
stc
jns
mov
inc
ret
xor
les
jl
loop
loopne
mov
inc
fisubrs
imul
add
add
mov
and
test
outsl
insb
lods
rclb
jne
fwait
inc
iret
sahf
lock
adc
shrb
in
ja
std
sbb
and
mov
sub
mov
inc
dec
jg
ret
push
aaa
in
sti
push
cwtl
rol
jae
out
cmp
sbb
outsl
pop
xor
or
stos
pop
cmp
cs
mov
cmpsl
into
or
sbb
shll
mov
loopne
cwtl
sarl
jecxz
mov
int
xor
jecxz
idivl
pop
test
stc
cmp
clc
cmpsl
pop
xor
lock
sub
out
lods
inc
out
dec
fdivl
js
push
jbe
mov
mov
xchg
jns
loope
roll
in
and
loopne
fidivrl
pop
and
ret
or
mov
push
jbe
push
daa
cmp
shl
mov
imul
test
imul
out
les
add
pusha
call
iret
testb
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
cli
add
add
add
or
add
or
add
inc
sti
add
xchg
add
jno
add
insb
push
add
add
add
lods
dec
add
aam
add
fmuls
add
push
add
inc
inc
add
mov
dec
add
inc
inc
add
or
add
add
add
add
add
add
add
add
add
add
add
sti
add
int3
sti
add
xlat
sti
add
in
add
cmc
sti
add
sti
add
or
add
sbb
add
and
add
sub
add
inc
imul
imul
popa
bound
push
popa
jbe
add
pop
inc
jb
push
inc
gs
popa
push
insl
jo
inc
gs
popa
push
imul
jae
dec
popa
imul
push
addr16
imul
outsb
add
imul
add
outsl
addr16
pop
push
outsb
fs
dec
