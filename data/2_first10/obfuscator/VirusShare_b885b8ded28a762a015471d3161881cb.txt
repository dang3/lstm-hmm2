in
jns
sbb
movsl
loope
sbb
lcall
inc
inc
jnp
pop
xchg
inc
adc
inc
pop
les
mov
push
aas
inc
xchg
addr16
adc
lea
ja
test
movsl
dec
aas
mov
je
and
mov
sbb
std
iret
and
pop
sbbb
or
lds
sbb
fmuls
fmuls
aaa
add
jae
rolb
sbb
dec
int
mov
data16
in
outsl
rorb
cmpsb
push
decl
pop
sub
fimull
stos
xor
out
in
int3
dec
inc
stos
inc
cwtl
sbb
cs
or
pop
jle
scas
push
insl
fcomps
jne
fcmovnbe
js
subl
icebp
sub
gs
pop
cltd
inc
subl
inc
xor
andb
jno
jae
adc
test
popf
les
decb
andl
daa
movb
movzbw
lahf
pusha
mov
pusha
bswap
jmp
pushl
popl
call
aad
xchg
cs
les
push
push
negl
call
iret
add
adc
outsb
test
inc
cmp
inc
jo
cmp
mov
sub
daa
aam
push
mov
mov
sub
out
mov
divl
sub
stos
xchg
pop
mov
imul
orb
jmp
stc
lret
sbb
mov
add
cmc
insl
inc
xchg
cmp
pushl
call
call
mov
mov
push
les
jle
daa
xchg
mov
scas
xchg
and
or
out
mov
loopne
mov
push
mov
push
jns
insl
dec
dec
addl
test
inc
cli
in
std
jg
xchg
test
nop
rcll
mov
sub
call
pop
test
scas
push
xor
cwtl
push
pop
mov
iret
add
xor
lods
xchg
mov
test
xor
bound
cmp
push
pop
movsb
iret
insl
jle
data16
adc
adc
cmp
sbb
cmp
mov
jecxz
lods
pop
mov
mov
inc
hlt
mov
fcmovbe
insl
adc
gs
lret
shll
gs
out
jmp
ficoms
cld
arpl
outsb
rcrb
cmpsl
mov
sbb
jmp
sub
sti
mov
leave
roll
aaa
ss
push
sahf
sahf
jb
mov
adc
dec
out
adc
xlat
inc
scas
adc
popa
icebp
fcmove
mov
insl
stc
sarb
mov
mov
enter
dec
push
lods
pop
sbb
js
push
pushl
fdivs
xor
inc
lock
sub
sbb
mov
mov
cmpsb
jg
fwait
mov
mov
shll
pusha
inc
ljmp
add
sahf
and
inc
dec
or
orl
andb
sbb
stos
shll
subb
pop
and
sbb
adc
and
fistpll
cmc
pushl
pushl
lea
jmp
nop
push
lret
les
stos
dec
jno
xor
and
rclb
inc
shl
aas
add
mov
outsl
and
and
outsb
cmp
or
dec
xor
imull
pop
int3
mov
enter
push
lret
xor
mov
cmpsl
mov
fs
adc
sbb
in
add
incb
jno
pop
xor
mov
or
and
sti
das
xchg
push
cwtl
jp
mov
add
mov
ljmp
insl
push
mov
andb
lcall
sbb
mov
sti
sub
jno
jl
push
repnz
in
int
sbb
push
xor
bsf
sub
xadd
mov
add
bswap
btr
mov
call
pushf
jmp
and
sub
les
sub
repnz
repz
loopne
in
lock
add
jg
jb
inc
adc
ljmp
cmp
mov
or
int3
sub
scas
xor
lods
cmp
insl
cmc
xchg
je
jb
mov
or
xor
leave
mov
in
hlt
push
popf
outsb
push
push
in
jge
and
push
jg
dec
mov
mov
fsubrs
pusha
dec
dec
fisttpl
fcmovnb
scas
pusha
rclb
push
out
jmp
fwait
push
cmpsb
into
add
pusha
gs
test
xchg
test
mov
mov
mov
cmp
or
es
ljmp
lea
jne
push
movzbw
movsbw
seto
mov
push
lea
jmp
inc
les
push
les
out
push
jno
aaa
mov
sub
push
dec
adc
mov
pop
call
pop
mov
cmp
fwait
idivl
cltd
push
jle
cli
mov
lret
fisubrs
bound
mov
dec
mov
roll
add
in
inc
into
dec
add
add
and
push
loope
pop
scas
add
mov
pop
rclb
shl
push
fnstenv
roll
cltd
push
mov
and
or
mov
add
xchg
fisubs
loopne
jne
repz
xchg
fnsetpm(287
sbb
out
arpl
pop
test
rclb
xor
mov
outsb
sub
les
fidivrl
lods
int
add
jbe
repz
lods
out
daa
sbb
insl
dec
sbb
lods
xchg
mov
xchg
sbb
dec
cli
pusha
in
cmp
popa
scas
push
cmp
cld
pop
test
gs
mov
or
aad
push
and
xor
aas
mov
popf
mov
push
mov
das
or
loopne
xchg
popa
nop
jmp
inc
mov
loop
jbe
stos
fldt
xchg
in
xor
out
xchg
dec
dec
and
call
mov
fadds
in
into
pop
lods
sbb
xchg
ss
mov
xor
push
or
add
nop
push
lods
loope
popa
dec
lock
cltd
jg
or
pushf
adc
mov
pop
mov
push
les
addr16
xor
jno
clc
and
pusha
cmp
jmp
outsl
lea
dec
lds
add
shrl
imul
pop
adc
enter
das
cmp
and
cmpsb
mov
jmp
or
imul
jmp
aas
xor
jns
and
cs
repnz
jle
je
imul
out
aaa
mov
out
mov
fadd
gs
xor
mov
test
and
lea
mov
shl
call
mov
movb
cmp
add
stc
stc
bt
cmp
mov
bt
test
push
call
lea
call
pushf
pushl
mov
pusha
pushl
movb
lea
jmp
repnz
call
inc
lea
shl
shl
pusha
neg
xchg
add
push
daa
mov
push
pushf
mov
sub
pusha
pushf
mov
xchg
dec
jmp
call
insl
lock
push
les
mov
mov
in
test
lock
insl
lock
pop
inc
pop
orl
adc
lahf
inc
movb
jle
jp
scas
filds
adc
xor
idivl
rcl
sbb
or
dec
popf
dec
mov
mov
adc
iret
fidivl
push
adc
xlat
jl
jmp
jnp
out
push
ljmp
test
outsl
adc
pusha
or
push
pop
sbb
jmp
mov
xor
rcl
dec
daa
push
les
cmp
push
shlb
loop
cmp
es
insl
cld
roll
incb
xchg
enter
daa
cmp
xor
leave
aam
pop
add
std
jl
in
popf
mov
mov
cmp
in
mov
inc
inc
les
stos
mov
in
lcall
cmc
pusha
shll
add
pop
sbb
cmp
lods
mov
bound
pop
pushf
nop
dec
cmc
inc
lcall
sub
mov
sarl
out
dec
xchg
jbe
push
ret
and
sub
xor
jne
inc
sub
insb
popa
out
xor
add
xchg
daa
sub
mov
cmp
jp
std
popa
inc
out
insl
pop
xchg
leave
mov
inc
add
mov
xchg
push
fcmovnu
adc
faddl
fimuls
iret
lods
mov
rol
xchg
icebp
sub
stos
enter
cmp
dec
add
mov
enter
subl
hlt
mov
inc
add
into
les
movsl
cs
nop
push
aad
add
call
addr16
inc
testb
int3
xor
es
mov
add
push
cmpsb
jb
and
pop
add
push
les
add
mov
popf
or
orb
test
das
mov
xlat
mov
mov
mov
push
cmpsb
push
push
insl
adc
xor
adc
and
sub
bnd
adc
rcll
sub
sub
mov
pop
sub
test
pop
mov
fwait
icebp
cmp
cmc
shll
int3
repnz
ret
push
dec
or
es
andl
scas
and
les
xchg
shl
fdivrs
pop
cld
fwait
dec
push
adc
cs
clc
xchg
inc
jle
mov
scas
lock
xchg
out
pushf
iret
xor
in
cmp
arpl
lahf
jb
pop
enter
cmp
sti
test
inc
pop
movq
jb
into
pushf
mov
cmpsb
sub
jge
dec
ljmp
cmp
or
push
scas
in
xchg
icebp
data16
movsl
std
movsb
adc
sbb
jno
pop
mov
dec
adc
cwtl
cmp
inc
es
movb
push
aas
cmpsb
lret
fldenv
mov
movsbl
pop
mov
bswap
cmp
jmp
pusha
push
setno
lods
pushf
add
bt
pushf
bt
rol
jmp
lea
jne
shld
lea
sbb
bsf
mov
cmp
inc
ror
add
sub
cmc
or
or
sbb
mov
jmp
pushf
call
lea
je
call
not
not
pusha
mov
lea
pushf
lea
call
jg
pushf
pusha
adc
pushf
lea
jae
pusha
lea
jne
push
jmp
pushf
cmp
pusha
movb
pushf
lea
ja
push
mov
lea
jmp
arpl
push
les
out
push
xor
test
fs
les
inc
cmp
xor
in
cmpsl
or
bound
cld
push
sbb
mov
push
sub
out
mov
imul
fldenv
adc
pop
jl
lcall
ss
call
in
dec
xlat
movsl
add
sbb
or
mov
push
push
shlb
xchg
subl
movzwl
jmp
ror
test
call
push
lea
je
test
clc
sub
jmp
inc
mov
pusha
inc
pushf
setno
mov
push
call
and
mov
xor
std
mov
or
pop
jl
sub
sbb
lods
lds
fmull
xlat
sbb
mov
insl
cmp
fimull
lcall
fwait
cs
add
add
adc
push
xor
pushf
loop
add
add
enter
xchg
fmull
or
loop
cs
jp
inc
sub
std
and
xor
cmp
jne
movsl
sbb
aam
and
bswap
mov
jmp
push
sbb
and
les
add
inc
cmpsb
or
push
lock
mov
std
sbb
incb
mov
nop
cltd
aam
dec
in
icebp
aas
xchg
outsb
test
and
rorb
pop
ficoms
mov
insl
lds
out
lea
loope
sbb
mov
jo
lods
mov
xchg
test
testb
clc
ficomps
test
and
sti
lds
aaa
and
in
push
jge
outsb
cmp
loope
xor
push
imul
mov
shlb
shrb
lock
ret
or
jmp
xor
inc
xchg
pop
insl
xchg
push
push
jg
dec
jae
pop
ret
cmc
or
loop
inc
popa
xchg
pop
xor
add
pop
and
pop
out
rolb
jns
xor
sub
call
rolb
in
and
xlat
mov
mov
jle
jg
jns
lock
add
and
jns
adc
jmp
inc
stc
movsl
ftst
jae
mov
mov
loop
mov
adc
pop
inc
outsl
lock
jno
nop
cmpsb
xchg
jbe
xchg
mov
xor
sbb
insl
lock
ja
pop
outsb
cmc
push
jne
hlt
in
jbe
insl
or
pop
bound
out
and
loop
inc
or
dec
inc
dec
mov
inc
dec
cld
jle
xor
dec
inc
and
jge
arpl
pop
test
in
adc
js
jno
dec
call
iret
loop
decb
loop
lock
testl
push
frstpm(287
pop
imul
sbb
mov
scas
rol
and
fildll
xor
jo
mov
dec
pop
insb
and
insl
dec
cld
in
insl
popa
mov
std
dec
cmp
mov
jns
inc
je
xchg
int
jg
xor
jg
xchg
outsl
xchg
xor
outsl
adc
pushf
into
loopne
or
push
outsb
daa
jae
bound
dec
leave
lods
scas
jmp
imul
dec
mov
lods
test
call
outsl
aas
test
fildll
lahf
jecxz
dec
add
pop
cld
imul
shll
outsl
jle
xor
push
adc
add
jo,pt
insl
es
into
dec
popa
shll
fisubs
hlt
xor
and
pop
subb
mov
insb
xor
sahf
cmp
int3
xchg
jns
repnz
outsl
sub
dec
arpl
pop
inc
insl
sbb
mov
push
and
cvtps2pd
dec
jo
inc
sbb
stos
outsb
sub
inc
outsl
dec
mov
pop
insl
cmpsb
pop
or
mov
jl
fisubl
xor
movsb
negl
clc
stc
sbb
dec
pop
out
inc
in
mov
sub
rorb
add
jp
gs
std
movsb
and
ret
dec
insl
push
enter
jg
sub
dec
jg
add
jmp
jecxz
lods
in
enter
loope
push
pop
je
imul
xor
inc
push
inc
xchg
push
jecxz
mov
mov
sub
add
xchg
repz
outsb
loop
xorb
mov
arpl
mov
jnp
sbb
jo
inc
xor
push
sub
mov
mov
in
imul
or
out
jg
outsb
mov
insb
js
jo
mov
mov
and
sub
mov
xchg
test
xchg
lock
mov
std
cs
leave
stos
inc
mov
imul
in
jecxz
mov
js
imul
add
push
js
cmp
jg
mov
adc
imul
jo
je
xor
add
fucomp
inc
insl
loopne
test
sub
gs
add
mov
dec
loope
xchg
in
daa
loop
xor
push
jl
arpl
mov
bound
adc
adc
jns
dec
lock
out
outsl
inc
add
dec
or
imul
scas
pop
divl
xchg
imul
cmp
cmp
xor
out
sub
inc
lock
cmp
add
sbb
sbb
mov
mov
dec
in
scas
fdivs
and
fs
mov
out
pop
in
mov
or
push
jno
dec
ja
sub
mov
xor
xor
popl
movb
or
adc
das
je
enter
cs
iret
or
adc
popf
and
pushf
or
arpl
and
xchg
push
je
icebp
add
out
add
js
mov
iret
inc
out
xchg
add
xor
inc
sub
clc
imul
or
inc
sbb
fadds
cmp
cmp
xor
jns,pn
or
sbb
jg
leave
mov
pop
adc
push
fcmovu
dec
ret
push
out
pop
jl
lods
cmp
int
jge
dec
and
xor
out
js
and
cmpsb
xchg
add
outsl
gs
cmpsl
add
mov
int
pop
lods
cmpsb
fcoml
out
xor
rclb
gs
adc
xorl
add
sub
shr
inc
jnp
cwtl
nop
sti
lahf
iret
inc
int
decl
shlb
test
jg
data16
cmc
cmp
mov
je
ret
push
hlt
inc
out
sub
push
mov
out
mov
jo
xlat
mov
arpl
hlt
mov
leave
lock
xchg
xor
add
mov
xor
aam
insl
and
fistpll
mov
addr16
je
mov
imul
jno
add
in
out
or
lea
inc
xchg
rclb
pop
cmc
inc
mov
push
data16
mov
mov
scas
jne
xor
jb
je
and
or
adc
ds
in
push
sub
pop
cmp
adc
mov
mov
movsl
adc
sbb
outsl
cmp
adc
idivl
inc
jo
add
je
xor
inc
loope
pusha
es
leave
ret
in
outsl
sub
mov
mov
imul
xor
insl
sub
xor
sbb
pop
cmp
dec
and
sub
je
xor
je
in
and
push
adc
out
dec
dec
adc
mov
and
je
jnp
fisubl
inc
shr
xor
jne
cmp
jmp
ljmp
pop
repnz
adc
cwtl
andl
and
loopne
add
mov
je
sub
sub
xlat
popa
adc
mov
pop
dec
mov
insl
movl
pusha
cmp
iret
pop
jl
popl
pop
sbb
shr
sti
ffreep
in
dec
out
push
pop
jno
sub
jb
out
insb
dec
ss
loope
jp
inc
or
sbb
push
xor
outsl
lcall
or
andb
or
insl
int3
adc
inc
out
mov
jp
xlat
popa
dec
or
daa
insl
scas
pusha
pop
push
repz
cmc
imul
sbb
insb
push
dec
insl
cmc
sbb
test
xchg
inc
sub
inc
lret
adc
inc
and
outsb
test
imulb
cmp
in
loopne
and
mov
xchg
lret
into
arpl
mov
sub
fcomps
sub
sub
xlat
inc
xor
xorb
cmpsb
outsb
xchg
ret
call
out
rolb
sbb
push
stos
cltd
aas
les
xor
jecxz
xor
int
cs
rcr
mov
pop
push
sub
outsb
adc
and
insb
mov
fistps
je
adc
xor
dec
mov
movsl
sub
dec
imul
dec
int3
hlt
aad
in
outsl
daa
cmp
insl
hlt
popa
in
push
icebp
xchg
filds
dec
jns
outsb
pop
lods
xor
out
inc
fists
insl
pop
xorb
out
fcmovne
pop
jo
xchg
dec
xchg
and
out
call
arpl
push
or
sub
sub
out
add
out
pop
iret
or
dec
jle
xchg
inc
adc
imul
ret
pop
ja
es
jg
add
cs
jo
or
or
inc
sub
loop
mov
jno
jns
pop
adc
aaa
jg
ds
jmp
ljmp
js
add
shrb
pop
lret
xor
and
pop
push
cmp
ds
pop
add
jge
data16
adc
jb
je
push
dec
inc
dec
outsb
cwtl
dec
push
dec
imul
push
dec
and
lods
cmp
pop
into
fcoml
sbb
lea
pop
or
pop
jne
je
pop
enter
jno
in
loope
arpl
and
and
aas
push
add
mov
cmp
int
rclb
ret
and
cld
ljmp
and
imul
daa
jle
cmp
in
inc
out
pop
clc
daa
or
andl
and
dec
dec
jmp
gs
aas
addr16
dec
daa
icebp
fs
push
rclb
jbe
xor
daa
movsl
ss
scas
es
jmp
lret
pop
cs
xchg
in
push
sub
dec
pusha
ret
sarb
repz
dec
add
pop
cmpsb
jle
adc
fwait
xchg
call
jmp
xchg
outsl
ror
pop
mov
test
xor
inc
adc
loop
fisttps
sbb
in
jb
out
ss
xchg
enter
pop
jnp
pop
jg
lock
sbb
mov
mov
sbb
cmpsl
jb
mov
mov
and
adc
sub
in
jmp
xchg
jmp
mov
pushf
das
push
cmpsb
inc
shrl
sbb
jno
jb
dec
sbb
out
xor
mov
popa
push
cwtl
or
adc
cmp
jnp
inc
int
bound
push
push
jb
xor
jb
push
xchg
addr16
pusha
pusha
add
mov
push
and
in
sub
sahf
mov
leave
inc
lods
dec
cmp
xchg
scas
fwait
push
xchg
cmp
jns
xor
jbe
in
out
insl
xchg
jns
dec
push
add
dec
dec
js
jecxz
outsb
in
jp
decb
jb
jecxz
cwtl
popa
xchg
pop
in
inc
subb
fdivrl
call
push
inc
adc
push
addb
jmp
jb
mov
jo
mov
jmp
add
outsl
divl
add
and
jp
cmp
imul
sub
mov
das
lock
push
std
popf
test
outsl
mov
inc
fs
adc
es
dec
jmp
outsb
or
fimull
inc
xor
add
ret
cmp
scas
adc
jg
jb
in
push
pop
mov
je
imul
dec
dec
call
das
mov
add
das
rclb
inc
iret
push
enter
push
jb
fmuls
push
je
repnz
loop
mov
mov
in
jl
push
psrlq
jne
dec
int
dec
xor
insb
fs
int
inc
push
lods
or
push
xor
dec
int3
scas
scas
dec
and
xor
cltd
fdiv
cmp
lods
xor
clc
aad
repz
repnz
stos
in
pop
jp
ret
push
dec
ja
xchg
pusha
adc
call
subl
adc
stos
xchg
jg
adc
sarb
lock
fbld
inc
psraw
fsubs
adc
aad
mov
and
xchg
mov
int3
xchg
dec
cmpb
ljmp
jb
mov
adc
jo
jmp
aaa
jo
and
scas
testl
adc
xchg
imul
push
xor
outsl
xchg
push
push
mov
aad
lidtl
jo
mov
mov
sbb
adc
cmp
ja
scas
shlb
ret
jns
in
mov
loop
jmp
into
pop
imul
jbe
fisubrs
lods
add
mov
das
loop
js
adc
imul
insl
inc
popa
outsl
or
sub
jb
out
mov
mov
adc
push
mov
data16
xor
inc
dec
pop
into
leave
lods
jo
xchg
out
jg
jp
cmp
arpl
xchg
xor
or
pop
decl
ss
push
insl
outsb
js
add
imul
ret
xchg
push
rorl
call
push
xor
outsb
mov
aas
xchg
in
or
dec
nop
push
cs
adc
mov
in
sub
pusha
mov
sub
dec
lea
out
or
cmpsl
and
ss
cmp
ret
pop
das
adc
repz
aas
pop
xor
imul
mov
lock
add
lds
insw
add
inc
sub
and
jns
add
hlt
daa
addr16
je
mov
adc
adc
bound
and
repnz
dec
mov
jb
loop
addr16
mov
adc
jnp
push
mov
cmpsb
xchg
jg
mov
je
stos
rol
addr16
ljmp
inc
jl
pmaddwd
mov
or
mov
mov
cmovno
xchg
mov
daa
mov
shl
inc
inc
ljmp
clc
hlt
xchg
imul
enter
aaa
and
je
stos
jecxz
push
mov
push
and
insb
int3
mov
iret
mov
jns
adc
out
repnz
cmpsb
outsb
ret
cs
sahf
or
mov
mov
std
inc
callw
and
push
mov
in
iret
jae
into
jge
inc
in
and
dec
cmp
sub
out
call
jae
push
imul
je
cmpsl
fstpl
add
pop
loope
sub
loop
lock
xlat
lock
outsb
jb
pop
mov
push
fsubrl
sbb
imul
jl
out
imul
mov
sub
jle
xor
dec
adc
jne
ds
in
cmp
hlt
xchg
mov
or
jns
push
rcrl
mov
addr16
dec
shlb
cmp
outsb
jo
andl
in
and
mov
sbb
in
mov
jp
add
in
sti
jg
shl
rcll
sti
cs
imul
sub
add
lods
jo
push
mov
repnz
sar
dec
outsl
insl
jae
push
sub
jo
shlb
pusha
xlat
out
sub
ret
or
sbb
fsubrl
mov
loop
jbe
test
adc
mov
adc
push
xchg
call
push
cmp
hlt
sub
pop
data16
outsb
addr16
addl
lock
mov
ret
mov
cmc
jae
and
pop
push
cmpl
xlat
lods
je
or
jbe
outsb
imul
shlb
mov
aam
sub
fidivs
and
movsl
pushf
clc
and
xor
jg
dec
xchg
mov
outsl
mov
loop
ljmp
js
call
das
mov
mov
mov
repz
bswap
pop
shrl
pop
insl
pop
in
cmp
fimuls
inc
inc
aas
xor
pmaxsw
ret
xor
jl
bound
aaa
or
iret
scas
adc
sub
dec
daa
lods
xor
add
add
inc
cli
cmpsl
sub
mov
loop
mov
popa
sbb
in
jns
cmp
xchg
das
pop
je
jbe
cmpb
incl
pop
insb
pop
adc
repz
cwtl
or
jae
mov
or
cmp
out
icebp
xchg
scas
mov
in
hlt
or
cltd
pop
aad
add
pushl
xchg
xchg
popf
cmp
call
xchg
test
jge
jg
add
ret
data16
add
dec
clc
inc
test
sub
mov
xchg
jo
push
add
mov
push
mov
lret
sbb
add
int3
push
insb
jp
cmpsb
test
or
adc
jb
jmp
or
loop
adc
insb
jp
mov
xor
jp
into
dec
mov
xor
in
aas
jmp
sbb
mov
mov
hlt
push
dec
into
out
xchg
bound
mov
loopne
xchg
jo
das
add
fisubs
inc
cs
insb
aas
add
pop
insl
daa
cmp
dec
add
mov
decl
jo
jp
pop
jl
outsb
sub
gs
and
push
insl
fnstenv
mov
call
cmp
hlt
dec
sbb
fisttpl
frstor
xchg
mov
addr16
inc
adc
out
mull
cwtl
inc
cmpsb
jne
aaa
and
pop
jmp
xchg
sti
push
nop
push
mov
bound
int
mov
adc
test
jmp
push
ret
in
pop
fbstp
out
xor
lret
test
xchg
int3
test
sub
movsl
sbb
insb
cltd
mov
ljmp
cmp
mov
add
and
pop
movsb
and
inc
addl
int3
std
test
aas
test
es
addr16
pop
jl
enter
out
imul
insb
js
cmp
shlb
mov
fwait
mov
loopne
pop
int
xor
pop
xchg
in
adc
mov
pop
lock
mov
imul
test
cmp
mov
mov
testl
mov
pandn
or
idivb
xchg
inc
mov
pop
mov
les
repz
ret
pop
mov
jns
lock
imul
cmp
nop
or
je
add
inc
mov
cmp
aaa
xor
jne
iret
movsb
shrb
cmp
mov
jo
stos
pop
push
lock
fucomip
dec
inc
xacquire
imul
insb
add
pop
nop
jg
xchg
sub
pop
loopne
stc
sub
aaa
xchg
push
movsb
xlat
xchg
mov
inc
shlb
sbb
lret
sbb
cmp
mov
cwtl
shl
cltd
add
or
bnd
sahf
jg
cmp
pop
imul
ret
inc
popf
mov
out
mov
sub
sbb
jno
add
lock
das
ret
jnp
xchg
aam
add
or
ret
sub
imul
rclb
cwtl
imul
out
jge
insl
sub
cmpsb
leave
push
and
lock
or
sub
add
je
in
xchg
or
mov
add
clc
js
loop
addr16
jo
and
pop
call
cli
fsubr
je
add
aam
or
outsl
js
insb
cmpsl
fidivrs
fwait
nop
add
jnp
push
out
xor
adc
sbb
push
inc
movsl
jp
in
mov
cmp
scas
jg
ljmp
push
int
add
pop
loop
sub
aaa
out
outsb
addr16
js
ljmp
cmp
or
outsl
ja
sub
out
adc
stos
hlt
lret
les
ja
xchg
sub
cmp
call
push
loop
jle
int
popa
loopne
add
sbbb
xchg
enter
sarb
dec
jmp
cs
or
movsl
jo
into
int
xchg
test
adc
dec
fdivp
popf
pop
into
lock
cwtl
je
dec
cmpsb
ja
fisubl
jbe
adc
jo
lea
ds
jo
iret
jno
push
ret
pop
in
fidivrs
jg
adc
xor
sbb
mov
call
in
je
movsb
pop
data16
jne
jp
push
push
pop
or
ljmp
imul
and
push
jbe
cli
imul
shl
and
out
test
xor
mov
orl
and
rcrl
jge
mov
push
adc
cmp
xor
aam
pop
jbe
inc
pop
mov
lods
pusha
nop
mov
cmp
out
lods
fildl
push
push
out
dec
out
inc
jg
dec
push
out
jge
jno
loop
add
and
push
push
jo
nop
xchg
in
fistpll
sub
jmp
adc
jo
dec
jae
xchg
outsl
outsl
jo
sub
test
push
jo
inc
comiss
int3
push
push
call
loop
jns
inc
xchg
push
add
cltd
out
add
mov
insb
mov
push
dec
cmp
fbstp
out
dec
mov
add
mov
cwtl
push
jb
imul
inc
popa
cmp
lcall
popa
outsb
and
into
pusha
sub
lret
int3
dec
inc
lock
mov
test
iret
insl
outsb
adc
scas
rcl
sub
inc
inc
outsl
xchg
adc
jg
int3
sbb
or
addr16
insl
mov
adc
add
out
rolb
adc
or
inc
or
in
jl
mov
in
out
add
stc
arpl
outsl
fldcw
push
or
out
pop
sub
adc
jbe
loope
in
mov
pop
lcall
addr16
cmp
stos
call
xor
iret
popa
jb
pusha
call
test
adcb
fs
or
sub
ss
pop
jg
movsl
sbb
inc
clc
jb
nop
ss
nop
xchg
shlb
js
mov
or
js
testb
adc
aad
mov
dec
add
loop
lods
outsl
add
cmpsl
adc
push
cmp
add
cmp
je
jne
in
enter
scas
sbb
mov
or
xor
inc
pop
add
sub
adc
call
je
push
xorb
insl
inc
ret
in
and
push
xor
insl
nop
mov
outsl
lods
add
sahf
or
push
aaa
es
loop
out
or
jns
xor
movsb
inc
out
add
out
xchg
insl
lock
aam
roll
in
leave
rolb
insl
push
test
sbb
add
icebp
xor
movsb
leave
jnp
sbb
sbb
nop
sbb
and
loop
xor
lods
add
in
in
push
jle
out
nop
cwtl
mov
imul
dec
subl
xchg
outsb
cmp
pop
daa
repnz
add
shr
and
add
addr16
jo
out
adc
js
loop
mov
stos
dec
lock
push
adc
jae
inc
loopne
fucomip
jp
lret
loopne
and
pop
cmpsb
sti
dec
test
jmp
or
dec
jno
out
es
jno
loop
or
or
fdivrl
dec
movsb
mov
and
in
xlat
arpl
fisttps
push
fdivs
insb
lret
aaa
stc
pop
std
push
push
dec
test
incl
rcrb
rcrb
dec
xor
adc
dec
dec
jns
xor
in
or
dec
insl
out
das
popa
mov
cmp
mulb
pushf
jns
daa
addr16
fildll
cmc
mov
jmp
cld
lock
mov
rcrb
or
sbb
dec
imul
inc
adc
xor
and
sahf
addr16
sbb
inc
xor
fistpll
or
es
gs
add
add
stc
mov
imul
imul
dec
ja
sub
test
push
leave
fbld
pop
popa
mov
in
out
stos
out
cld
pop
pop
adc
call
jbe
je
dec
outsb
repnz
popf
std
shrb
loop
xchg
mov
sbb
in
ljmp
fisubl
sahf
movsb
lods
mov
adc
cld
iret
sub
mov
xor
mov
gs
out
pusha
out
popa
filds
cmp
lods
mov
push
scas
shr
pop
push
insl
cmp
sbb
mov
movsl
std
fmull
inc
fwait
imul
aaa
insl
fcom
dec
loopne
adc
loope
jmp
or
popa
inc
push
sbb
pop
dec
sbb
cmp
and
pop
cmp
xor
lock
adc
imul
sbb
push
push
mov
addr16
xor
jo
outsb
insl
xor
add
mov
jg
xor
int3
jg
push
out
jo
fcmovnu
and
xchg
dec
adc
jo
out
cmp
fnstcw
das
inc
adc
xor
mov
dec
stos
icebp
jg
adc
sub
mov
sbb
imul
push
adc
insb
hlt
aaa
dec
and
adc
push
inc
push
cmp
or
push
lods
add
scas
adc
sub
into
cmc
cwtl
add
test
push
mov
add
ja
adc
js
lock
cltd
adc
loop
and
mov
nopl
mov
xor
popf
lcall
push
bound
rorl
adc
arpl
inc
inc
mov
pop
mov
mov
call
jo
insl
add
cwtl
sub
andl
jo
xor
sub
sub
mov
arpl
inc
and
dec
jg
sbb
ret
fwait
scas
fmuls
and
or
xchg
imul
and
popa
push
cs
add
lock
pop
mov
adc
jb
push
xchg
xchg
outsb
jle
add
lock
pusha
xlat
loope
clc
enter
aaa
push
lock
nop
xor
aad
mov
xor
xorb
xor
sahf
or
ja
ss
loope
repnz
adc
out
adc
mov
test
sub
sub
in
push
cs
outsb
push
das
call
das
xor
mov
mov
addr16
jno
fstps
xorl
push
add
sbb
sub
divb
sub
mov
pop
je
pop
outsl
jmp
insl
adc
mov
xchg
popf
jl
mov
xor
inc
int
test
sub
cltd
lock
js
sub
or
cld
lret
or
das
test
xor
cs
in
outsl
cmp
je
xchg
rcrw
mul
frstor
shl
inc
insb
loop
mov
push
xchg
mov
or
jno
dec
loope
and
sub
xor
pushl
adc
xorl
lods
xor
nop
test
sub
jp
mov
mov
mov
inc
in
test
loopne
loop
jmp
inc
push
push
js
daa
outsb
sub
es
or
push
addr16
mov
cmc
das
push
jae
inc
xchg
mov
or
sbb
sbb
and
jmp
insb
int
loopne
out
jne
or
mov
jb
pop
sbb
scas
insb
dec
xor
xchg
inc
clc
out
hlt
xlat
xchg
push
push
aas
mov
in
ja
cmpsb
dec
jge
ret
dec
mov
and
cwtl
setbe
imul
outsl
scas
jecxz
push
push
cltd
divl
out
and
out
loop
ficompl
and
jo
mov
es
or
xor
nopl
push
test
adc
iret
or
push
or
jb
dec
mov
lock
and
insl
outsl
mov
xlat
loop
push
test
adc
icebp
popa
pop
xchg
jbe
adc
bound
dec
mov
mov
std
cltd
and
pusha
or
xchg
sbb
inc
and
dec
insl
out
mov
rolb
xor
pop
jne
lock
insl
jle
jns
inc
dec
mov
sub
and
add
int3
jo
outsl
je
sahf
sti
jo
xchg
clc
cmp
inc
loopne
mov
sub
cmp
repnz
pop
test
lret
out
adc
or
mov
cmp
push
rorl
ja
cld
push
cmp
lock
data16
je
and
stos
adc
push
iret
daa
ljmp
test
scas
cltd
push
shlb
pop
adc
ret
lcall
imul
push
roll
pop
lahf
ljmp
ja,pt
loop
ljmp
mov
leave
push
je
jae
adc
ja
scas
pusha
push
sub
das
cld
imul
jg
jle
lret
addr16
push
dec
mov
sub
sbb
imul
jmp
inc
push
adc
inc
fs
lds
loope
sub
lahf
dec
arpl
sub
inc
fbstp
cmp
movsl
lea
push
sti
pop
insb
mov
jns
loop
pop
scas
aad
push
push
lock
sti
addr16
adc
dec
mov
into
shrl
adc
call
adc
aad
mov
out
push
mov
cmp
popa
xchg
andl
xor
pop
xor
cmc
std
out
mov
cmp
repnz
imul
jle
xor
mov
or
xor
insl
push
jb
or
or
je
outsb
sub
sub
pop
sub
repnz
mov
lret
jo
lock
pop
test
pop
outsl
push
mov
stc
cmp
mov
mov
push
je
lock
and
fisttpl
popa
and
jbe
jno
sti
mov
push
xor
jno
shl
mov
push
cmp
cmpsl
or
out
jae
inc
inc
repz
bnd
fmull
sub
or
jno
insl
repnz
jno
push
jb
dec
mov
inc
in
aam
pop
stos
xchg
nop
lahf
leave
pop
test
cmpsl
test
xlat
pop
xor
and
inc
enter
icebp
les
fisubl
or
fcmovnu
fldl
mov
lea
je
out
jno
fsubrs
dec
jno
call
mov
pop
and
mov
jno
sub
mov
xchg
lods
arpl
popa
imul
xchg
mov
aas
mov
adc
cmp
inc
or
mov
aaa
sbb
adc
loopne
jb
xor
push
push
scas
mov
popf
mov
mov
mov
clc
xor
std
jnp
nop
ja
xor
enter
adc
sub
and
jbe
jp
dec
test
pop
scas
mov
adc
ret
mull
hlt
pushf
pop
dec
or
jno
cmp
pop
aam
leave
fcoms
es
out
fdivr
mov
jmp
jno
lds
push
test
jb
mov
popa
mov
and
daa
gs
nop
int3
ret
jne
dec
lret
cmp
sbb
je
fstpt
call
aam
mov
mov
ret
push
push
addl
xor
mov
jns
sbb
ret
mov
out
repnz
lcall
jb
or
addr16
outsb
sub
xor
popa
je
aaa
loope
add
dec
fs
in
pop
in
imul
pop
sbb
jb
js
fs
xor
fs
daa
outsl
fs
pop
scas
clc
outsl
sbb
push
jecxz
xchg
jle
movsb
int3
push
jns
repz
jb
pop
mov
ds
mov
test
xchg
daa
enter
mov
arpl
daa
out
imul
scas
jecxz
stc
std
and
adc
jno
jnp
push
inc
fwait
mov
lods
shr
inc
jo
add
addr16
jb
xor
dec
pop
and
jle
icebp
adc
icebp
mov
push
fldl
and
shlb
fimuls
jne
iret
sbb
push
or
cmp
movb
jo
dec
subb
cmp
fs
mov
fists
sbb
dec
jo
insb
das
sub
push
imul
sub
negb
dec
repz
add
int
xchg
in
sub
leave
addr16
jns
jl
loopne
sahf
jno
clc
jae
push
sbb
rolb
sbb
imul
xchg
sbb
mov
nop
cmp
jo
inc
icebp
cltd
pop
jp
cmp
jbe
jns
pop
push
xor
adc
sbb
ja
xor
lea
jae
movsl
cmc
das
xchg
jp
nop
adc
dec
test
adc
adc
sbb
jnp
jne
out
inc
imul
insl
in
dec
ret
mov
mov
adc
nop
and
push
and
movsb
ret
push
adcb
daa
inc
sub
dec
jo
mov
nop
pop
in
scas
pop
dec
mov
dec
in
and
inc
push
add
jne
sbb
jns
cmp
dec
mov
cwtl
xchg
push
out
sbbb
mulps
call
fists
testb
jo
mov
movups
test
dec
add
lock
adc
ffreep
decl
rcrl
cs
cmc
loop
add
test
mov
jo
call
dec
loopne
xchg
pop
cmp
dec
sub
mov
add
or
jmp
arpl
js
jo
jb
xor
scas
loop
and
sub
fdivr
or
jl
adc
sub
sbb
out
call
mov
jno
inc
pop
add
push
jae
repz
jns
pop
ret
xor
es
lret
xchg
mov
add
cwtl
xor
movsb
fwait
loopne
inc
pusha
xorb
push
jns
js
loop
icebp
mov
je
inc
imull
cwtl
xchg
aad
add
sub
sbb
jae
movsl
ret
pop
dec
pushf
fstps
jo
jl
jae
cld
call
pushf
popa
pop
dec
cld
or
scas
mov
push
orb
jns
sub
gs
rolb
movsl
jg
xchg
ljmp
out
and
imul
sub
mov
and
iret
scas
push
mov
xchg
push
inc
add
adc
ret
in
dec
mov
in
dec
popa
adc
dec
leave
test
popf
out
outsl
loopne
addr16
out
out
mov
lods
outsb
fucomip
dec
nop
std
xor
es
push
out
aad
or
shrl
daa
shlb
inc
pop
inc
sub
adc
repnz
out
outsl
in
cs
and
inc
jo
dec
lock
test
int
pop
out
lock
push
jb
andps
out
jmp
out
and
jo
inc
cmp
je
dec
pop
jmp
stos
jns
add
daa
jb
pop
loopne
or
mov
out
sub
add
sub
jns
adc
push
imul
cmpsb
sti
sub
xchg
aad
out
dec
add
add
cmc
daa
imul
pop
insb
insb
int
push
mov
pushf
push
xchg
xor
scas
xchg
into
out
sub
dec
in
pop
je
sub
out
jo
fs
lods
repz
cld
jl
jmp
and
inc
lock
outsb
push
jge
add
in
push
mov
pop
jecxz
nop
addr16
push
push
clc
aad
mov
add
popa
dec
push
sbb
int
adc
mov
xor
add
cmp
insb
jnp
fmul
cli
rcll
push
scas
inc
inc
fstpt
das
daa
insl
call
xchg
dec
lods
outsl
cbtw
adc
fisubl
imul
inc
push
enter
jns
out
loop
mov
fs
outsl
inc
pop
iret
loopne
inc
xchg
cwtl
fwait
push
out
xchg
into
sbb
mov
inc
jno
mov
xchg
scas
loop
je
mov
mov
mov
subb
gs
int
cmp
jae
bound
inc
cmp
adc
adc
jg
or
or
into
addr16
jge
mov
sub
pop
leave
mov
push
and
aaa
and
sub
pusha
mov
imul
aad
fstpt
insb
je
mov
jge
mov
orl
pop
pop
cwtl
mov
jecxz
pop
add
shlb
jnp
adc
push
mov
fimuls
pusha
mov
dec
inc
jg
and
push
icebp
sbb
loop
sub
out
cmpl
icebp
jle
into
out
pop
lods
pusha
pop
push
fadd
sbb
push
mov
jmp
jo
flds
jne
inc
xor
filds
inc
fdivrs
dec
inc
rorb
push
xchg
in
mov
sub
jb
mov
scas
jbe
xchg
cmpsl
xchg
fdivp
je
xor
stos
je
and
cmc
mov
inc
ret
pusha
mov
xchg
push
test
inc
pop
out
lods
jp
dec
xchg
fistpll
and
sub
mov
dec
inc
cmp
xor
popf
pusha
out
call
js
ret
jg
pushf
add
cmpsb
dec
pusha
js
adc
push
inc
and
mov
repz
dec
icebp
sub
or
orl
loopne
jb
loopne,pn
iret
out
jnp
dec
std
or
sub
mov
popa
add
je
nop
pop
xchg
inc
mov
je
push
xchg
lock
out
dec
mov
adc
push
or
jl
or
push
icebp
and
sbb
jo
or
push
ds
jb
jge
mov
adc
xchg
sub
aam
push
int3
call
imul
je
dec
mov
inc
mov
lock
xor
cmp
mov
push
add
outsl
inc
imull
inc
daa
dec
add
mov
loop
shlb
in
jmp
jo
xchg
lds
xor
push
daa
jo
enter
xor
in
cmp
int3
cs
ret
xor
aas
mov
loop
fidivrs
xchg
ror
insl
aad
cltd
lcall
rolb
mov
and
insb
leave
mov
lret
pop
mov
cmpxchg
adc
rcl
or
mov
sub
pop
lods
stc
test
xchg
or
adc
das
adc
ss
lock
cmp
popa
mov
mov
rol
jb
push
notl
sar
and
movsb
aam
loop
dec
jle
sub
call
and
or
xor
outsb
loop
inc
or
xor
inc
jbe
lret
xlat
mov
jge
popa
dec
mov
sub
push
test
jp
shll
inc
push
out
jae
push
push
mov
in
mov
lock
adc
gs
fs
aad
enter
out
in
dec
es
jmp
push
add
cmp
je
push
ret
sub
js
pop
ja
mov
into
lret
lock
pop
jb
rclb
mov
lock
lock
das
adc
mov
sub
adc
aad
out
push
inc
aaa
jnp
leave
adc
call
scas
sti
daa
inc
les
arpl
loopne
push
jmp
movlps
jbe
cld
jecxz
fsubrs
and
sub
dec
in
dec
add
jns
jg
rcrb
das
notl
pop
out
outsb
sub
sbb
ja
inc
dec
into
jbe
lods
and
je
in
ret
shrb
outsb
les
sbb
mov
add
jmp
hlt
pop
scas
xchg
addl
xchg
arpl
rol
adc
test
push
jl
insb
adc
pop
jo
shrb
jg
out
dec
repz
arpl
sbb
lret
std
mov
pop
xchg
push
popa
cmp
jp
xor
nop
dec
mov
push
or
test
sbb
dec
data16
stos
popa
pusha
inc
scas
adcb
lock
or
and
mov
xor
adc
nop
xchg
jbe
pop
imul
out
xchg
sub
loope
outsb
mov
ret
adc
sbb
imul
cltd
outsl
push
xchg
jp
pmaxsw
push
jbe
popa
mov
mov
ror
fnstsw
lods
sbb
bound
push
loopne
iret
push
nop
xor
imul
imul
pandn
fs
sub
dec
iret
xor
in
sbb
push
insb
movb
jns
popl
nop
cmp
dec
jb
ret
scas
lock
fs
in
je
fwait
cmp
dec
andb
inc
inc
xor
scas
jp
out
rcrb
mov
in
dec
loop
or
ja
jae
data16
enter
ret
div
loop
xor
cmpsb
je
and
jg
ret
jo
fisttps
dec
jo
mov
or
cs
sub
push
pop
insw
xor
loope
das
adc
push
add
std
cmp
daa
sbb
push
jbe
lahf
shl
cmpsl
push
or
jno
push
jnp
je
mov
jl
pop
insb
ja
scas
or
out
mov
add
flds
imul
daa
repnz
movsl
cltd
in
fisubl
and
inc
inc
ljmp
repnz
lods
gs
dec
push
inc
pop
sub
icebp
in
cmp
jnp
iret
jne
jo
mov
in
rorb
mov
or
rcll
shlb
jo
popa
addr16
inc
imul
out
pop
push
std
in
jmp
adc
stc
stos
das
outsl
jnp
in
xchg
jb
dec
loope
pop
gs
ret
ffreep
sub
imul
add
cmp
cs
adc
dec
enter
mov
pop
xor
inc
in
enter
cs
sub
in
dec
inc
cmp
outsb
push
xor
cmp
add
out
out
and
call
sub
ljmp
addr16
xor
mov
inc
or
movsb
cwtl
call
jns
xchg
add
inc
xchg
lret
xor
cmpsb
hlt
test
ret
jl
jnp
cwtl
dec
lret
push
and
in
je
lds
or
aas
daa
cmpsl
es
inc
mov
push
jns
inc
daa
repnz
loopne
cltd
mov
test
add
mov
add
push
inc
mul
popa
pop
adc
fbld
shrl
cmpl
addl
fbstp
sbb
mov
mov
adcl
xor
out
imul
daa
or
daa
inc
imul
inc
xor
out
cmp
jg
sbb
sub
xor
cltd
push
inc
lcall
inc
adc
add
rclb
nop
xor
es
dec
push
divl
lret
dec
daa
movsb
or
mov
iret
shrb
iret
mov
ljmp
adc
mov
push
and
sub
and
jg
dec
dec
mov
stc
dec
nop
push
push
pop
dec
test
dec
dec
shlb
clc
imul
outsb
add
or
jns
dec
dec
push
mov
jo
aas
je
cmc
pop
pop
sbb
dec
shlb
out
test
push
and
inc
lods
and
push
xor
dec
mov
fidivl
cmpsl
push
sub
insb
push
mov
sbb
into
mov
scas
loopne
xor
push
cmp
mov
imul
jb
je
cmp
dec
lea
cltd
push
aas
fimull
xchg
icebp
adc
ret
das
sub
add
inc
push
add
lcall
lock
mov
dec
push
icebp
inc
rolb
push
pop
stc
push
test
out
jp
xor
out
bound
out
dec
sub
or
jae
icebp
sub
adc
mov
scas
adc
insl
arpl
lods
mov
mov
xor
xchg
sbb
ja
bound
jo
push
cwtl
cmp
std
loopne
xor
mov
and
je
cmp
ja
push
out
daa
push
adc
je
cmp
push
add
in
ja
push
sti
dec
adc
aas
jne
imul
and
ret
pop
data16
icebp
or
or
add
dec
push
mov
dec
dec
js
cmp
in
push
or
dec
xor
bound
loop
insl
mov
stc
push
adc
imul
sub
jo
mov
jp
sbb
fmull
das
je
pushf
ret
cli
fiaddl
iret
jp
xchg
mov
sbb
jae
pop
pop
in
push
cmc
xchg
gs
packuswb
jo
push
cs
testl
mov
inc
ja
jns
or
fwait
jo
pop
pop
lret
pop
fsubrs
lods
sub
push
xor
rorl
dec
jns
orl
ja
adc
dec
aaa
push
aam
and
xor
mov
sti
push
xchg
test
cmp
loope
jle
in
shrl
or
fidivl
xor
lock
insb
es
insb
aas
int
daa
stos
push
movsl
sub
insl
movl
adc
push
dec
xchg
add
push
xor
inc
cmp
add
out
mov
test
cmp
xor
inc
sbb
xor
lret
cwtl
aas
pop
push
cmpsl
sbb
add
icebp
xchg
adc
loope
gs
jmp
xor
inc
loop
jmp
das
xchg
push
pop
jbe
out
mov
dec
mov
sbb
sub
mov
iret
mov
dec
adc
dec
int3
push
mov
push
outsb
sub
iret
mov
xor
jnp
mov
cmp
aas
or
pop
mov
pop
pop
ret
loopne
fs
sub
push
pop
sbb
adc
in
push
ret
inc
test
jae
mov
sub
sbb
jmp
mov
dec
data16
push
push
bound
jnp
out
ret
push
jnp
bound
fcom
rcr
sarl
mov
mov
shlb
das
sub
jb
sti
dec
push
adc
jge
pop
xchg
mov
in
data16
inc
jecxz
cmpsb
or
das
mov
jp
fnsave
push
cli
movsl
adc
sbb
orb
push
in
lds
loope
cmp
lret
bt
adc
push
push
lret
fidivl
dec
mov
push
xor
pop
bound
hlt
jecxz
mov
je
daa
pop
outsl
dec
add
scas
divl
js
dec
sahf
adc
in
jg
inc
out
mov
jmp
divl
dec
outsl
dec
into
shrl
jp
pop
cmp
fldt
daa
cmpsb
push
jp
subb
scas
push
pop
loop
mov
das
lds
jb
mov
adc
rcl
jmp
loopne
xor
loope
adc
dec
inc
hlt
inc
push
lret
sarb
fucomi
mov
es
je
aaa
int3
das
lock
repnz
jb
jae
shrl
jmp
out
cmp
dec
scas
in
pcmpeqd
std
imul
sub
cmc
fdivs
push
push
loop
sub
xchg
divl
jae
inc
or
jbe
mov
push
xchg
push
sbb
rcl
scas
leave
dec
xchg
outsl
adc
stos
es
daa
inc
orl
outsl
or
adc
ret
mov
cltd
rcrl
out
cs
jg
mov
mov
sbb
and
inc
gs
out
push
sbb
bound
mov
jb
mov
mov
andb
xor
icebp
jno
mov
jbe
test
je
pop
rclb
push
shrl
sbb
push
out
xchg
jbe
mov
inc
jb
or
jns
jo
int3
je
jecxz
jp
lcall
mov
push
lcall
bound
negb
jg
lret
mov
dec
mov
or
jle
decb
push
jmp
jb
call
pop
xor
cmp
push
sub
mov
aas
gs
sbb
cld
jg
jae
sub
aas
mov
stos
mov
jl
outsb
addr16
pop
ficoml
in
cli
cs
mov
pop
call
sub
inc
push
sub
push
mov
jecxz
mov
das
adc
ljmp
lret
loopne
inc
jmp
push
fdivrl
jp
sub
out
jae
sahf
pop
cld
or
push
push
adc
jnp
and
push
je
push
fldpi
mov
jb
adc
out
cwtl
or
mov
inc
out
jg
outsl
nop
xchg
adc
jae
add
stos
in
xchg
int
in
push
and
jge
das
je
lret
sub
lds
leave
push
cs
in
enter
in
dec
pop
push
and
sub
leave
outsl
loope
and
sbb
je
xchg
add
addr16
jne
addr16
in
repz
push
in
mov
jae
call
and
gs
mov
xor
xor
pop
mov
aad
sarb
popa
adc
cmp
cltd
push
mov
test
mov
dec
arpl
iret
lock
iret
js
or
lods
jmp
dec
push
adc
inc
jnp
insl
fnsave
insb
pop
call
outsb
out
adc
lret
enter
aaa
jno
and
push
icebp
or
jo
dec
pop
mov
jae
mov
jge
mov
mov
push
pop
cmpsl
or
dec
addr16
leave
divb
stos
lret
iret
mov
xor
imul
push
dec
cmp
dec
lock
addr16
es
cmp
xchg
sub
call
sbb
adc
push
loopne
fisttps
inc
icebp
push
stos
enter
dec
xor
dec
out
dec
push
in
outsb
inc
mov
or
dec
xor
mov
dec
stos
jmp
sub
sub
out
push
dec
pop
imul
adc
dec
pop
out
les
xor
insb
and
sub
lcall
shl
in
out
and
sub
dec
inc
outsl
cmpl
cmp
shll
mov
mov
add
adc
pop
not
je
mov
out
outsl
dec
cmp
adc
dec
xor
addr16
jo
xor
xchg
xorb
lea
mov
lods
push
es
add
or
je
jbe
sub
adc
insb
fs
xor
fs
out
pop
insb
popf
and
repz
jnp
les
imul
add
mov
mov
or
mov
push
mov
mov
push
int3
jg
addb
rcrb
pop
out
test
stos
push
in
call
mov
lock
or
hlt
adc
dec
xor
pop
mov
push
je
xchg
cmp
lods
es
dec
push
in
daa
mov
xchg
pop
inc
pop
and
xchg
in
out
push
adc
enter
inc
mov
jo
pusha
test
repz
addr16
cmpl
movsb
cwtl
data16
push
jg
out
pop
jnp
adc
inc
insb
push
xchg
inc
or
popa
loope
xchg
or
and
cmpsl
lcall
lret
ret
nop
push
enter
or
scas
sbb
imul
lea
xchg
mov
data16
in
into
out
ljmp
je
sbb
loope
and
in
sbbb
pop
lock
ja
xor
scas
test
mov
outsl
mov
adc
stos
jb
xchg
imul
jo
push
mov
xchg
push
ja
ficoml
adc
inc
cmpsl
int3
ficompl
lock
adc
subl
out
cld
jg
fldl
adc
psrld
cmp
movb
js
out
enter
and
lahf
loopne
mov
xlat
movsb
jmp
xchg
push
or
sbb
jnp
push
pop
push
stos
xchg
jg
mov
cmp
push
dec
das
enter
sbb
add
sub
mov
xor
cmp
jo
jge
cmp
adc
jle
loop
pushf
fbstp
rorb
push
push
aas
jns
adc
das
loop
lods
test
test
pop
les
nop
sub
out
sub
jle
adc
imul
push
xchg
jb
icebp
push
xchg
push
push
dec
pushl
out
sub
in
jb
pop
cmp
inc
push
sbb
push
xchg
subl
jnp
add
cmpsl
mov
jmp
aas
jns
lahf
sub
shrl
jge
test
xor
addr16
je
mov
les
sub
or
out
ds
inc
jae
xchg
xor
out
in
jo
pop
mov
or
lret
jne
shll
es
push
subb
fwait
mov
into
jae
xchg
popa
sub
jne
hlt
rcr
fiadds
adc
jbe
out
jae
repz
pusha
push
inc
sbb
lahf
sub
cmpsb
cmp
test
leave
sbb
lods
das
add
or
mov
imul
push
jge
cwtl
adc
or
popa
jg
mov
addr16
scas
mov
insl
lcall
mov
lock
shrb
lock
in
ret
cmc
pop
scas
fisttps
cmp
sbb
push
sbb
ret
sbb
std
das
out
out
imul
mov
outsb
rcrb
or
jle
jae
dec
jb
movsl
mov
add
das
out
sub
pop
mov
daa
mov
pop
lcall
inc
dec
pop
inc
out
imul
scas
addr16
addr16
xlat
or
je
sbb
dec
test
clc
hlt
and
mov
push
lock
pop
fistpl
or
ret
imul
in
pop
je
jns
xchg
sub
cmpsl
ret
data16
sbb
rcrb
clc
cmp
xor
inc
and
mov
mov
adc
in
hlt
int
imul
add
pop
xor
adc
out
cmp
push
sbb
adc
dec
push
imul
leave
mov
sub
je
cmp
imul
mov
popa
adc
ret
scas
into
sbb
push
adc
stos
out
jmp
mov
mov
pop
pushf
in
test
and
fdivl
xchg
mov
sbb
sti
xchg
repnz
inc
pop
or
jb
jmp
je
xchg
inc
push
insb
add
add
jo
push
adc
movsb
in
into
popa
daa
xor
popa
test
fistpll
je
fmull
dec
xor
adc
outsb
ret
xor
mov
or
xor
or
pop
and
out
pushf
dec
js
or
loop
mov
insl
cld
lahf
jl
dec
das
xor
cmpsb
ljmp
in
cmp
pop
inc
dec
cmp
mov
and
int3
outsl
mov
out
out
dec
scas
pop
push
outsl
lds
loopne
jge
in
jge
or
les
mov
xchg
xchg
fs
imul
mov
shll
lret
jl
addr16
out
repnz
adc
and
sub
lahf
mov
out
mov
frstor
ret
out
out
pop
clc
outsl
jne
fidivrs
pop
insb
adc
or
mov
cs
fs
je
mov
lods
jecxz
xor
popa
je
leave
cmp
or
jecxz
jmp
sub
aad
int3
add
pop
fdivs
and
je
in
loopne
je
and
cmpb
sub
shll
jl
sub
call
lods
cmp
cld
fdivs
in
jmp
out
jg
sbb
xchg
jg
xchg
mov
daa
and
add
and
mov
stos
shll
jo
or
stos
push
push
ror
adc
mov
mov
dec
pop
sbb
sub
loopne
jge
adc
adc
popa
or
sub
jae
xor
dec
loop
insb
add
or
jbe
cmp
pushf
sar
sbb
pusha
mov
addr16
loop
in
test
pusha
adc
xor
push
pop
stos
xor
and
mov
loop
xor
daa
add
xorb
cmpsb
popf
out
rorb
out
or
and
sbb
inc
pop
into
call
shlb
push
xor
xchg
sbb
inc
push
test
insl
or
ret
sbb
add
jo
mov
adc
ficoms
or
lret
out
je
mov
cmpsb
adc
adc
lds
je
xor
and
push
test
xor
lds
lods
loopne
lock
movsb
xor
push
call
add
adc
push
ret
mov
or
sbb
inc
push
inc
jo
ret
pop
xor
push
mov
adc
outsb
or
jge
ret
insl
push
pop
cmp
mov
psllw
push
inc
push
out
mov
xor
xchg
or
popa
or
xor
sub
loop
lret
dec
add
mov
jg
lahf
iret
pop
ret
xlat
inc
sbb
mov
iret
jge
lock
shl
sub
imul
inc
test
jns
nop
jnp
push
pop
mov
hlt
jecxz
inc
xor
lock
cmp
add
in
jb
push
sbb
xor
dec
loopne
je
sub
push
push
test
repnz
outsl
jb
sahf
jo
scas
loopne
mov
jp
imul
js
dec
hlt
es
lcall
cs
adc
pop
adc
or
cwtl
pop
mov
push
andl
iret
insl
sahf
test
push
shlb
xchg
lock
jnp
push
mov
sub
sti
test
rol
xchg
insl
sti
jg
outsb
aas
ljmp
sbb
adc
data16
lods
sub
xor
int
sub
add
addl
inc
xchg
ja
mov
adc
popa
xchg
ss
adc
xor
jne
in
imul
ret
in
push
repnz
out
xor
mov
and
mov
sub
jo
sarb
and
shl
imul
imul
pop
dec
int
cwtl
sub
xor
xor
push
and
cmp
jnp
insl
sub
jae
repnz
aaa
mov
loope
mov
mov
cwtl
outsl
xchg
or
fisubrs
mov
popa
mov
pop
popa
insb
loop
add
jo
add
xor
jg
dec
mov
adc
leave
mov
jmp
test
mov
push
add
sub
and
or
icebp
cmp
dec
jae
inc
pxor
imul
push
cmp
push
cmp
push
sub
enter
cmp
mov
fldt
lock
dec
sbb
xor
sub
cs
and
cmp
cmp
enter
push
sub
jg
pop
ljmp
je
push
mov
xchg
jnp
loop
add
das
scas
fucomip
imul
or
add
aas
sahf
xor
js
fs
addr16
cld
stos
dec
mov
hlt
and
popf
outsl
pop
iret
add
jmp
adc
xor
xor
fnstenv
add
push
shll
or
push
sbbl
cwtl
push
out
popf
sbb
inc
push
ret
mov
jo
fbstp
push
cmp
push
imul
jle
int3
inc
es
fwait
sbb
adc
xor
rcrb
cmp
daa
mov
es
xchg
add
push
push
out
xor
or
cmc
or
mov
mov
xor
shrl
lret
std
and
sbb
jbe
jge
add
fidivs
xchg
jp
loope
scas
xor
jle
jecxz
jbe
jge
jg
pusha
jbe
xchg
sbb
cmp
lret
add
ret
inc
je
addr16
sahf
in
repnz
lret
ljmp
mov
xchg
imul
fwait
xor
jbe
jne
enter
pusha
fs
mov
outsl
lods
call
imul
cmpsl
ljmp
push
stos
add
lds
sbb
inc
test
or
mov
daa
out
into
sub
addr16
sub
sub
iret
repnz
setl
add
jmp
xchg
and
fucomp
sub
mov
sbb
icebp
lds
lds
push
mov
cmpl
ss
int3
ljmp
dec
bound
enter
add
pop
cld
lret
or
sti
or
cmp
cmp
jbe
xchg
loop
out
jae
xchg
mov
aaa
xorb
jo
jb
mull
jnp
xchg
cmp
in
pop
je
scas
sub
xor
sbb
loope
push
ljmp
jp
mov
call
pop
dec
adc
stos
dec
out
fsts
and
pop
mov
and
das
mov
sbb
push
push
dec
scas
or
pop
xor
dec
call
jecxz
loop
push
test
dec
mov
mov
dec
xchg
adc
xor
daa
push
fcoms
in
movsb
scas
popa
and
jae
fsubr
fildll
scas
pop
icebp
ret
and
fidivl
loopne
nop
xchg
mov
jg
mov
out
xchg
mov
inc
call
push
sub
sbb
mov
push
sub
mov
dec
lret
dec
fsub
jno
mov
inc
movsb
sub
outsl
mov
movsb
lret
scas
mov
imul
in
insl
loop
std
gs
pusha
fs
dec
jecxz
es
imul
mov
lods
mov
sbb
lods
ljmp
dec
adc
adc
in
pusha
inc
jne
jg
sub
push
popf
mull
insb
jo
push
mov
cld
dec
imul
fsubrs
add
addr16
mov
fmuls
mov
and
shrl
mov
xor
arpl
lea
adc
inc
xchg
nop
rorb
and
popf
les
dec
jae
dec
lods
push
xor
outsb
arpl
mov
daa
inc
pusha
into
jle
outsl
fwait
scas
dec
and
imul
shlb
dec
add
pop
imul
arpl
into
outsl
gs
push
shll
lret
or
outsl
fsubrs
ja
pop
outsl
mov
add
sti
jae
fadd
jp
sti
fwait
dec
mov
xor
sbb
cltd
pusha
dec
out
xchg
add
jns
inc
cld
push
mov
jle
xchg
bound
xchg
jnp
mov
jae
inc
popa
jo
jne
and
jnp
sub
pop
fwait
xor
push
icebp
insl
sar
pusha
sub
dec
fs
push
lret
cmp
inc
lock
les
push
dec
mov
arpl
push
pop
mov
insl
xchg
dec
imul
adc
out
dec
inc
inc
jb
insl
das
cli
pop
inc
jbe
aas
outsb
insb
and
push
cmc
gs
sbb
inc
scas
fisttpl
call
dec
movsb
ja
jg
sub
push
addr16
jnp
ja
js
aas
sub
test
jbe
mov
sarb
cmp
sbb
cmp
lret
insb
push
insl
insl
popa
jge
mov
aad
outsl
push
imul
shrl
daa
inc
insb
into
dec
lds
push
cmpl
cmp
inc
mov
sahf
push
inc
adc
pop
jle
decl
ljmp
jl
loopne
inc
mov
shlb
out
jl
sub
out
out
lcall
fiaddl
lods
std
sbb
xchg
mov
sub
lea
jns
lret
dec
imul
mov
lock
jnp
rolb
outsl
mov
inc
orl
inc
jge
cmp
jecxz
jnp
push
outsl
xchg
inc
daa
outsb
inc
pop
dec
fs
decb
jb
cmp
outsb
jnp
loopne
add
stc
insl
xor
test
and
loop
clc
dec
sbb
xor
and
mov
sub
cld
insb
in
test
jle
lret
jle
cmpl
push
push
sub
out
repnz
jle
loopne
inc
in
jno
pop
pextrw
jg
push
xor
bound
outsl
jle
lret
and
dec
mov
mov
add
sub
mov
cld
imul
inc
pusha
fcoms
jae
movsl
add
xchg
dec
xor
inc
test
stos
xchg
dec
lea
push
gs
mov
imul
insl
outsl
cmovb
push
dec
je
mov
gs
clc
jne
in
popa
shl
inc
push
imul
xchg
arpl
outsb
inc
jg,pn
xor
inc
jnp
test
imul
add
js
or
cltd
in
jae
jge
and
shrb
xor
insb
xor
inc
cmp
jb
outsb
sub
out
mov
addr16
outsb
jmp
inc
adc
cmp
pop
ja
pop
lods
hlt
dec
mov
push
or
mov
in
loopne
es
cs
rolb
adc
dec
inc
insb
mull
out
or
stos
mov
cwtl
push
dec
dec
rol
xchg
push
outsl
sbb
lods
sub
ret
outsl
cmc
sub
arpl
pushw
sub
stos
push
jg
mov
add
sub
out
jb
dec
add
add
je
rcrb
jo
sbbl
arpl
jg
outsb
enter
sub
out
loopne
add
popaw
fmuls
test
data16
daa
and
jae
inc
push
enter
pushf
and
insb
lods
xor
in
imul
shr
push
outsb
and
or
mov
popf
cltd
and
jbe
sub
ret
leave
std
popa
enter
fs
enterw
mov
dec
insl
repnz
call
jnp
popa
pop
ss
lock
lea
jle
dec
movsb
mov
or
into
js
cmpsb
jmp
arpl
dec
jl
lods
daa
cmp
or
scas
xchg
fmuls
mov
xor
and
mov
fs
orb
scas
inc
mov
in
sub
int
dec
outsl
xchg
inc
outsl
xchg
sub
call
pop
imul
push
je
dec
imul
dec
mov
mov
and
dec
inc
je
inc
out
out
movsb
scas
cmp
push
jge
shlb
adcl
dec
sbb
movsl
sub
fimull
push
cmc
jg
cmp
sbb
insl
sti
dec
ja
movl
jns
sub
shlb
insb
dec
sub
out
scas
out
movaps
inc
js
pusha
out
xchg
imul
imul
sbb
mov
imul
outsb
jle
out
insl
aad
scas
insl
test
sbb
and
xchg
imul
outsl
pop
xor
subb
sahf
cmp
outsl
lock
jl
push
stos
add
inc
imul
dec
insb
sarb
inc
insb
std
dec
xor
outsl
movsl
push
ja
pusha
aas
pusha
sbb
sahf
cmp
fisttpll
mov
ja
jmp
addr16
dec
int3
xor
xor
arpl
dec
mov
pop
call
rolb
push
mov
pop
xchg
in
out
fwait
inc
fs
subl
or
pusha
push
loopne
imul
sbb
xchg
mov
gs
jae
mull
mov
outsl
push
cmp
and
jns,pt
jo
stos
adc
xor
stos
cmpsl
outsl
andb
ljmp
or
mov
add
jle
mov
gs
dec
loopne
addr16
sahf
dec
icebp
imul
jbe
mov
jg
fwait
ja
inc
lcall
lock
imul
cmpsb
sub
jae
mov
mov
out
push
call
das
in
in
insl
push
mov
loope
cmp
pop
das
pop
cmp
push
push
subl
mov
stc
adc
xor
dec
xchg
rcll
shl
jo
jne
test
sub
int3
nop
out
sahf
outsb
fidivl
add
cmc
push
imul
or
in
nop
inc
ja
jo
push
nop
sbbb
arpl
inc
scas
test
jecxz
lret
imul
inc
enter
out
subl
outsl
out
jne
xlat
outsb
mov
aam
das
scas
addr16
or
imul
inc
or
roll
or
popa
mov
scas
imul
leave
lock
sbb
adc
addr16
sbb
adc
loopne
cwtl
add
adc
mov
out
test
out
add
pop
addr16
inc
arpl
jo
add
enter
ret
cmp
mull
push
jo
les
add
dec
dec
push
out
cmp
dec
inc
mov
push
les
jp
scas
shr
sbb
inc
ret
loopne
dec
push
stos
push
lock
push
out
cld
or
or
addr16
xor
test
movsl
jae
or
jo
out
push
push
xor
cli
shlb
xor
pop
fs
ljmp
push
xor
loopne
mov
in
mov
push
lea
jo
loopne
mov
shlb
lock
sub
sub
jae
inc
adc
andl
jno
pop
cli
cmp
outsl
mov
ljmp
push
ljmp
cld
cli
pusha
loopne
jno
adcl
or
cwtl
cmp
je
loopne
out
mov
arpl
out
loop
sub
cmpb
addr16
cmp
add
mov
push
loopne
lahf
insl
inc
movq
add
ret
imul
add
addr16
pop
add
sbb
out
sbb
scas
pop
jge
jle
andl
fs
or
inc
imul
mov
insb
cltd
jae
sbb
movsb
jns
inc
enter
mov
in
jle
in
addr16
dec
loop
in
orl
popa
clc
and
or
push
ja
cmp
jae
dec
xor
dec
xor
adc
pop
mov
xchg
xchg
pop
js
hlt
xor
adc
in
sarl
mov
push
pop
xor
and
dec
mov
mov
je
push
mov
pop
repz
hlt
mov
xchg
dec
ja
push
mov
pop
idivb
hlt
mov
xchg
dec
jbe
push
mov
pop
cmc
js
hlt
mov
xchg
dec
jns
pop
mov
pop
clc
js
hlt
mov
in
pop
mov
pop
idivl
hlt
mov
xchg
dec
jnp
pop
mov
pop
cli
js
hlt
mov
in
pop
mov
pop
stc
js
hlt
mov
in
pop
mov
pop
cld
js
hlt
mov
in
pop
mov
pop
sti
js
hlt
mov
adc
push
outsl
test
sub
push
scas
xor
pop
shl
and
gs
sbb
or
dec
out
sub
and
jmp
cmc
imul
scas
adc
mulb
enter
test
mov
add
imul
enter
cmpl
xor
pusha
outsb
ss
scas
enter
arpl
fwait
and
in
mov
xor
enter
loop
movsb
cmpsb
lock
pusha
call
insl
push
adc
dec
mov
fidivrs
data16
andb
cmp
xchg
repnz
adc
movsl
data16
xchg
addr16
xchg
fisubrl
out
pushl
int3
outsl
inc
scas
xor
fldenv
sti
xchg
jo
mov
inc
mov
sbb
data16
or
pop
imul
fsubp
repz
inc
out
sub
fwait
mov
jecxz
addb
in
jp
sahf
in
out
das
jb
or
xor
mov
mov
insl
cli
out
dec
rolb
arpl
jp
dec
fs
in
lcall
data16
cmp
dec
inc
dec
xor
outsb
lahf
mov
imul
arpl
add
cmpl
mul
repz
aam
push
out
inc
in
xchg
cmp
sub
in
insb
jg
adc
enter
and
jbe
loopne
cmp
dec
int
sub
mov
std
add
inc
pop
mov
cli
imul
hlt
xor
pop
repnz
jmp
enter
add
inc
sub
fxam
jg
xchg
push
stc
insl
or
push
jae
or
sbb
push
in
out
aas
mov
and
pushf
js
dec
and
dec
and
js
fwait
gs
or
push
push
and
fstps
jo
movsl
in
jo
test
insb
dec
in
in
sub
jo
cld
movb
daa
outsl
stc
fldenv
stc
cli
xchg
lods
das
popa
lock
movsb
les
imul
dec
adc
jbe
push
pop
inc
add
test
jecxz
jno
pop
in
push
aas
aam
inc
test
in
push
arpl
dec
jno
mov
push
jo
push
fsubs
imul
repnz
lock
add
push
lcall
inc
sbb
outsb
xchg
out
rcrl
push
rorb
neg
popa
sub
push
fucom
clc
jno
ljmp
lahf
int
out
std
xchg
xchg
dec
leave
mov
clc
dec
jmp
jne
fisubs
insl
imul
das
sbb
stc
outsl
stc
xor
in
out
ret
mov
xchg
movsl
pop
mov
xchg
shlb
mov
mov
fwait
les
jno
cmp
outsl
movsb
int3
xchg
adc
rcll
pop
mov
sti
popa
pop
cmp
pop
cmc
addr16
je
or
cmp
andl
jle
jmp
jo
and
sub
xor
inc
into
jo
jecxz
sbb
out
xor
mov
cmp
dec
xchg
pop
or
adc
outsl
or
das
xor
into
pop
pop
das
cwtl
pop
test
rolb
lds
xchg
mov
pop
jle
divl
sbb
mov
adc
popa
jge
mov
lret
add
dec
cmp
mov
loope
int
jno
out
icebp
add
push
mov
xor
xor
xor
fsubrl
out
or
mov
fs
pusha
push
cmp
filds
adc
data16
lahf
pop
push
stos
pusha
add
push
jo
mov
mov
scas
push
dec
js
xchg
xchg
jle
jo
sbb
mov
jb
out
dec
ljmp
sbb
fstpl
out
cmp
ret
push
mov
fldenv
push
pop
and
push
daa
outsl
imul
lds
mov
pop
jo
orl
sbb
push
adcl
enter
xor
jo
outsb
outsl
xor
nop
adcl
es
and
mov
lock
jb
jg
xor
lock
cmpsb
sbb
shll
aad
pop
dec
push
jge
fucomip
push
sub
dec
outsb
loop
cmp
dec
sbb
dec
dec
jbe
daa
push
jo
cli
jecxz
nop
inc
loope
dec
and
popa
movsb
adc
xor
adc
dec
jbe
ret
xor
loop
dec
add
lret
mov
stos
ficoms
inc
je
lds
repnz
mov
idivb
popa
dec
or
loopne
out
je
cltd
imul
jnp
sahf
pop
loopne
add
cmp
rcll
push
mov
je
cmpsb
cmp
add
jl
shrl
subb
fldcw
and
xor
cmp
xchg
subb
mov
fdivs
andb
jl
push
popf
daa
pop
call
jbe
lds
mov
dec
test
or
in
cwtl
fstp
jae
fistps
or
push
add
outsb
scas
shll
sarb
mov
cmpsl
sub
out
loop
scas
or
dec
adc
and
faddl
xchg
lret
mull
loopne
xchg
push
je
roll
xchg
test
push
jg
loope
xchg
xchg
loop
repnz
fsubrl
mov
adc
xor
iret
adc
popa
rcll
ljmp
add
xor
push
or
xor
int3
jl
cmp
scas
sbb
shrb
jg
add
jg
arpl
aas
add
repz
je
pop
xchg
aas
mov
or
xchg
push
rcrb
dec
test
or
gs
mov
inc
and
adc
outsb
lock
jo
aaa
rcrb
mov
stos
push
mov
dec
cmpsl
repnz
xor
ficomps
aas
push
adc
shr
fistl
cld
sbb
lahf
cmp
outsl
aas
push
call
mov
fwait
lret
add
sub
cmp
xchg
sub
push
mov
add
mov
cltd
notl
and
lock
js
mov
push
cltd
pop
adc
cltd
imul
rolb
mov
dec
xor
subl
mov
stos
loop
int
xor
and
outsl
push
ror
jo
jo
add
test
xor
adc
or
cs
pop
ja
icebp
mov
ss
mov
call
inc
scas
jp
sbb
lret
dec
cmpsl
pusha
mov
sahf
push
sbb
daa
cmpsb
dec
cltd
clc
jg
loopne
imul
sub
adc
pusha
scas
jns
ret
es
and
cmp
imul
test
xor
cmpsb
inc
mov
rep
dec
lret
arpl
data16
aas
sub
ss
push
push
imul
xchg
mov
xor
arpl
xchg
in
in
add
leave
insb
push
in
xor
mov
dec
push
arpl
lret
cld
lock
cmp
jmp
out
push
shl
das
inc
int
je
pusha
mov
xchg
andl
loop
pop
es
mov
movb
lea
mov
mov
push
cmc
push
and
push
imul
jbe
fsubr
xchg
mov
jbe
pop
push
xchg
jne
add
imul
movsl
lock
hlt
cmp
jns
inc
adc
xchg
lock
xchg
adc
sar
or
insl
jmp
jp
mov
push
insl
movsl
mov
orl
mov
xor
loopne
cmpsl
inc
jl
and
pop
sub
int
xlat
outsb
sahf
out
repnz
fwait
xor
popa
icebp
fst
jo
add
fidivl
dec
inc
jne
adc
popa
pop
jne
sarl
pop
dec
je
xchg
or
jo
inc
shlb
fbld
je
orl
xor
pusha
es
xchg
sub
out
jl
inc
mov
sbb
test
mov
hlt
lds
clc
std
and
outsl
inc
push
mov
aaa
mov
rcl
das
outsl
cmp
dec
add
ja
sti
shlb
sub
cmp
mov
mov
or
pusha
out
inc
bnd
mov
popf
outsl
xor
cmpsl
jl
js
adc
mov
scas
push
mov
push
lock
sub
inc
ljmp
xor
loop
clc
cmp
mov
xchg
dec
xchg
xor
mov
cmpsb
push
sti
jle
sub
push
or
mov
imul
fnstenv
jge
rcll
outsb
fisubl
mov
icebp
fcomip
mov
je
push
into
ss
ja
jno
push
ret
jae
int
inc
jge
sub
adc
je
aas
repz
dec
loopne
fcomp
pusha
jo
dec
xchg
xor
lret
adc
push
pop
lret
or
or
cmp
lock
sub
xor
pop
push
je
xchg
flds
dec
sarl
mov
mov
cmp
adc
jo
out
clc
ret
jge
adcb
out
fsubrp
insb
imul
inc
out
pop
jns
ja
jb
jg
jb
lcall
orb
push
fldt
mov
mov
adc
insl
mov
pop
mov
jne
or
data16
or
or
cwtl
je
fwait
push
out
icebp
mov
scas
jecxz
inc
ljmp
cmc
je
xchg
pop
jmp
nop
cwtl
jo
ja
cmpsb
xchg
cmp
into
jmp
xchg
push
and
ja
push
push
inc
pop
out
or
jo
and
loop
cmpsb
repz
mov
ret
out
push
jg
sub
xchg
pop
cmpsl
jo
mov
imul
loop
jl
outsl
fcmovbe
add
jnp
test
testb
jg
xor
inc
pop
inc
sahf
adc
je
mov
sbb
sbb
push
add
out
xchg
dec
jle
jb
or
cmc
stos
in
das
cwtl
sub
jp
and
je
xchg
cmp
or
or
sarb
mov
add
rcll
test
jb
ja
sub
repnz
shlb
add
sub
jae
inc
cld
or
push
dec
fsubr
push
out
jo
iret
mov
insl
xor
jp
outsl
jae
ja
sbb
icebp
fwait
pop
lods
movsb
jl
mov
jle
mov
jbe
scas
mov
or
xchg
hlt
loopne
cmp
sbb
lock
fisttps
cmp
outsl
outsb
in
cmpsl
mov
jnp
mov
adc
jmp
or
mov
test
sub
out
xor
pop
lahf
pop
lods
bound
imul
jmp
cld
adc
in
push
mov
out
add
das
outsl
fs
popf
cmp
pop
xchg
dec
out
loope
mov
inc
push
and
gs
aaa
dec
add
and
aas
sub
insb
imul
cld
in
inc
xor
aad
add
call
sub
das
aaa
jns
push
sbb
repz
scas
test
and
aaa
ret
cwtl
in
ret
mov
data16
pop
xor
movsl
mov
jmp
gs
xor
lods
and
xor
jbe
push
mov
shll
mov
in
or
fdivrs
mov
xchg
pop
nop
mov
add
or
es
jge
pop
jg
sub
mov
cmp
sub
outsl
in
pop
ljmp
out
sbbb
js
cwtl
roll
push
xchg
mov
jp
faddl
lret
mov
shlb
je
ret
dec
imul
out
loopne
adc
stos
pop
xchg
pop
out
out
xchg
in
fs
mov
sti
in
aaa
inc
js
dec
and
mov
daa
repz
je
pusha
outsb
xor
dec
adc
out
pop
push
jb
icebp
int3
push
push
fwait
mov
inc
push
repz
es
jge
mov
movsl
pop
dec
jl
cs
and
outsl
lcall
popf
cmp
jg
dec
push
movsb
popa
test
out
incb
sub
xor
into
cmp
bnd
daa
inc
cmpsl
cmpsb
jb
insl
push
inc
aas
pusha
mulb
lea
jl
repz
adc
sub
aad
call
mov
les
jbe
js
das
lcall
push
lea
lds
loope,pn
mov
xchg
pop
stc
push
jl
sbb
push
and
add
data16
shrl
or
mov
cmpsb
adc
out
mov
out
push
fst
std
jb
pop
inc
inc
pop
das
bound
mov
rclb
jns
dec
pusha
popa
push
loop
nop
inc
cmp
xchg
jne
movsb
add
aam
out
loopne
ret
pop
loop
rcll
jnp
dec
int3
adc
ret
cwtl
sub
repz
lods
fisttps
lods
push
aas
sbb
cmovl
pop
insl
mov
gs
xor
push
imul
dec
outsl
movsb
inc
enter
push
adcb
sbb
in
inc
sub
test
push
dec
dec
sbbl
xchg
jns
adc
mov
sbb
jp
test
push
movsl
test
mov
push
bound
sbb
jg
rorb
dec
jae
mov
xchg
int3
cmovo
lea
cli
ret
push
mov
mov
loope
jg
add
les
inc
xchg
icebp
out
addr16
add
lock
leave
out
or
jmp
insb
js
jg
cmp
push
cmp
adc
mov
jg
jo
dec
xor
or
in
movsb
mov
rolb
adc
xchg
icebp
loop
xchg
xchg
popa
xor
and
xor
call
jo
sbb
imul
inc
xchg
sub
push
dec
fcompl
sbb
das
imul
pop
jecxz
xchg
adc
loop
rclb
arpl
push
mov
movsl
xchg
daa
mov
dec
orb
imul
test
rcl
sub
popa
es
out
push
inc
sbb
loopne
sub
outsl
xchg
inc
jmp
mov
xor
mov
mov
pop
ds
out
pop
pop
mov
or
imul
mov
push
push
mov
lea
push
dec
pop
sub
jb
aas
out
jmp
clc
dec
icebp
mov
in
add
or
shrb
fnstcw
adc
xlat
inc
inc
inc
sbb
jg
xchg
adc
pop
insb
movsb
insl
str
imul
adc
ss
push
cmpsl
push
cmp
cmp
pop
in
dec
pop
mov
out
aaa
notl
je
shll
bnd
jae
repz
cmpsl
adc
scas
cmp
jne
inc
in
jb
enter
or
dec
mov
test
mov
xchg
push
cmc
sti
xor
bnd
imul
or
das
out
jne
dec
jge
stos
sbb
mov
push
in
jbe
sbb
fisubrs
push
add
jmp
jns
push
popa
or
xchg
mov
lock
push
ds
cld
adcb
jnp
aam
dec
scas
fsubr
loop
sub
daa
into
or
es
add
mov
and
sub
adc
and
pop
dec
sbbb
out
popf
jmp
jns
push
sbb
xchg
adc
nop
hlt
push
adc
and
or
outsl
push
mov
popa
loope
xor
rorb
adcl
je
jmp
outsl
ret
fucomip
mov
jns
cmpsb
lock
das
fimuls
out
lds
push
roll
cmp
or
icebp
push
mov
push
mov
or
sub
add
icebp
sbb
jbe
push
jmp
lock
sub
pop
aaa
imul
loopne
push
test
mov
mov
dec
xor
sub
jecxz
lret
movsl
jg
outsl
pop
stos
dec
mov
fs
int
dec
fcoml
jb
inc
xchg
vmread
sbb
outsl
movsb
add
push
mov
add
rorl
dec
daa
pop
dec
sub
sti
dec
lock
leave
mov
aad
pop
outsl
sub
insl
dec
lods
sbb
stos
icebp
jae
push
mov
cltd
aam
adc
in
shr
fcomi
pop
adc
fimuls
cmc
adcb
dec
mulb
push
mov
jge
mov
sub
push
pop
push
test
addr16
dec
xchg
cmp
xchg
in
lcall
arpl
push
scas
push
mov
mov
push
xor
adc
adc
adc
addr16
dec
cmp
test
test
ss
and
leave
add
jnp
jp
sysret
or
inc
xor
test
fsubr
push
fimuls
xor
sahf
sbb
addr16
cmp
cs
pushw
fiadds
or
sbb
and
push
scas
or
cmpsl
mov
push
cli
jmp
out
sbb
add
scas
je
icebp
sub
mov
outsl
or
cmp
stos
sub
xchg
loopne
fst
je
sub
dec
jo
inc
fwait
call
inc
mov
out
cmpsl
je
cmp
popf
push
xor
sbb
fs
jmp
das
fwait
das
aam
mov
dec
repnz
scas
enter
lret
jmp
sbb
push
lahf
push
adc
rcrl
je
cld
sub
movaps
inc
cmp
nop
je
pop
jg
mov
in
scas
dec
ror
outsl
repnz
ljmp
jno
dec
mov
jo
ret
push
adc
xor
push
shll
pop
jo
arpl
adc
aas
addr16
adc
popa
sub
wbinvd
dec
mov
pop
adcl
adc
mov
xchg
cmpsb
jg
jo
xor
inc
fmulp
jge
outsl
jmp
lods
xor
jp
movsb
cmpsl
jne
dec
mov
push
loop
sub
loop
inc
mov
jns
shrl
adc
jae
sub
divb
xor
outsb
lret
pusha
adc
xor
cs
add
dec
lock
es
repnz
adc
adc
jle
cltd
arpl
out
push
loop
lock
or
mov
in
dec
fnsave
lods
lds
push
adc
icebp
pop
xchg
push
push
ljmp
mov
cs
and
sar
pop
cs
shll
jle
enter
notb
popa
pushf
out
or
loope
lods
stos
cmpsl
outsb
cmp
test
dec
xor
adc
pop
test
mov
xor
pusha
clc
out
or
jb
insb
sub
lods
jp
mov
les
jae
cltd
inc
stos
dec
inc
cli
or
cmp
pop
jnp
and
jge
cltd
adc
sub
stc
mov
xor
cmp
daa
loopne
add
repz
imul
push
pusha
adc
dec
shl
push
mov
rcr
stos
adc
sub
mov
adc
sub
dec
ret
es
lods
xchg
sbb
and
jo
in
xor
lock
jle
pusha
stos
mov
std
push
rcrl
jmp
es
nop
imul
pop
repz
cmp
xor
insl
sub
shlb
cld
incb
or
rcrb
jb
cwtl
jg
push
in
sub
xor
mov
inc
insb
popf
sub
test
rcl
rclb
dec
dec
ljmp
stos
mov
mov
shl
test
insb
inc
dec
xchg
ret
inc
in
idiv
jne
adc
jp
arpl
jl
jl
je
jp
push
lods
popa
sti
dec
add
lea
inc
cmp
in
inc
xor
leave
nop
jno
sub
xchg
in
dec
add
mov
imul
push
stos
lret
xchg
js
inc
jns
outsl
out
pop
jb
imul
jne
push
or
jo
xor
mov
mov
fwait
loop
shlb
aad
mov
sub
jae
dec
loop
ss
ret
add
cmp
push
and
call
jp
push
popa
hlt
movsb
shrb
and
sub
aaa
and
jo
inc
nop
cmpsl
push
push
orb
xor
add
loope
lahf
lret
mov
xchg
mov
jno
dec
adc
adc
movsb
cwtl
pop
out
dec
les
dec
out
cltd
mov
dec
xor
push
icebp
adc
pop
xor
in
lret
xor
cld
or
push
je
lock
mov
mov
jp
mov
push
loopne
mov
and
fs
pushf
push
pusha
sbb
lock
xchg
xchg
decb
lea
lret
sbbl
dec
out
scas
aaa
loopne
in
pushf
imul
xchg
ret
fsubr
xor
sub
das
xor
ss
jo
jo
push
lahf
xchg
lock
pop
inc
iret
sub
dec
imul
jp
or
mov
dec
cmp
and
or
xor
push
jno
out
adc
nop
jge
popa
mov
xchg
out
lock
lea
or
pusha
jo
je
dec
or
decb
sub
and
push
push
or
cmp
lret
push
mov
shlb
popa
xchg
or
xchg
xor
ret
test
lds
loope
out
mov
ret
test
ret
lea
dec
push
loop
popa
lods
in
xchg
jmp
test
je
or
push
cmp
inc
dec
rol
or
ja
add
or
imul
sub
lock
mov
adc
push
popf
and
movsb
pop
loopne
ret
cwtl
add
lock
sbb
jg
lock
sbb
icebp
jmp
icebp
xor
ss
aas
out
cmp
xor
loopne
scas
clc
icebp
mov
push
scas
or
addr16
jmp
repnz
and
scas
push
sub
cmpsb
cmpsl
out
jo
jp
mov
popf
xor
int3
ja
hlt
out
xchg
xor
sub
push
pop
push
je
jge
jb
and
idivl
sub
pop
or
mov
mov
mov
in
call
call
aad
push
lcall
pusha
or
push
push
or
loop
mov
bound
dec
push
adc
call
sub
dec
repz
int
sbb
jbe
scas
adc
cld
xor
dec
inc
dec
dec
dec
lock
sub
jb
repnz
pop
dec
test
add
out
xor
xrelease
xor
xor
sub
scas
popa
mov
dec
das
aaa
xchg
pop
gs
inc
adc
jg
push
jmp
xor
or
lock
lret
sbb
jo
outsb
les
pushf
push
pop
sub
movsl
test
push
popa
sbb
out
out
jl
add
jmp
pop
and
xchg
xchg
xor
sub
xor
stc
mov
ljmp
test
aad
or
jae
imul
cmp
je
mov
or
stc
out
movsb
cmp
inc
in
xorl
jmp
dec
fsts
stc
js
mov
jle
out
sub
pop
add
adc
add
insb
out
push
pop
in
inc
mov
in
outsb
out
lods
pop
jg
push
insl
push
movsl
loop
jecxz
dec
jbe
jecxz
cs
nop
icebp
shll
and
je
pop
jnp
sbb
ljmp
shll
fisubl
andb
xchg
iret
out
fnsave
adc
mov
mov
mov
and
mov
movsb
adc
adc
xchg
imul
pop
jge
pop
fcos
inc
push
ret
mov
addr16
jle
jnp
add
int
xor
mov
mov
xchg
or
mov
mov
call
rcr
in
aaa
cmpsb
outsl
call
pop
pop
jg
pop
clc
mov
lock
inc
or
jb
cmp
arpl
jbe
in
je
cmpsb
shll
repz
divb
icebp
out
jo
mov
xchg
out
lock
arpl
rcll
sub
nop
loope
xor
ljmp
shrl
jno
sti
mov
mov
pushf
or
movsb
sub
sub
in
mov
sub
sub
adc
je
push
sbb
jae
jns
lock
out
je
push
out
test
lds
xor
aaa
push
mulb
out
ljmp
lcall
outsl
and
into
imul
in
imul
push
mov
repnz
cmp
inc
aas
and
sub
mov
dec
lahf
mov
int3
cmp
xor
dec
lea
rcrb
ljmp
mov
out
or
je
out
scas
xor
xor
add
icebp
lahf
sbb
mov
out
scas
addr16
loope
xchg
jo
outsl
je
icebp
jmp
in
out
mov
mov
jae
je
stc
cmp
cmp
push
mov
negb
or
icebp
sbb
or
mov
das
ss
fldenv
push
inc
aas
xadd
dec
fcomi
sub
and
and
push
jle
cs
imul
aad
es
je
jge
clc
fstl
sbb
js
addr16
cwtl
cmp
pop
hlt
stc
pop
sub
mov
mov
insb
push
fcoms
pusha
outsl
or
lret
lea
jnp
sti
pop
pusha
add
jno
xor
and
push
jge
sub
adc
rcll
pusha
push
rolb
das
fidivs
shll
test
inc
insl
mov
sub
push
fildll
mov
addr16
out
data16
or
mov
ljmp
adc
hlt
addr16
mov
stos
pop
adc
hlt
mov
jecxz
cmp
ss
fnstenv
rolb
inc
mov
insl
xor
cld
adc
jae
call
dec
cmp
je
aas
lds
ffreep
repz
hlt
pop
stos
cltd
psubsb
cmpsb
loope
xchg
dec
and
pop
push
mov
fimuls
jge
je
gs
cmpsl
pop
fstpl
out
loop
loop
xor
pop
lods
and
adc
cli
ret
scas
mov
add
ja
push
dec
ret
inc
rclb
inc
fidivl
popf
xor
sbb
out
mov
decb
lods
jae
mov
hlt
add
pop
and
wrmsr
je
and
mov
addr16
and
xchg
movsb
jg
mov
push
xlat
mov
push
scas
mov
or
and
daa
mov
xchg
outsb
aam
xorb
adc
jo
loop
inc
out
jl
or
fcomps
mov
dec
loop
mov
ret
in
popa
push
mov
pop
xor
fbstp
das
call
mov
jo
fdivr
test
add
inc
lods
das
jp
mov
fs
fistl
jbe
repz
sarl
outsl
mov
shl
int3
or
jp
sahf
in
xor
out
or
popf
outsl
popa
pop
mov
xor
inc
adc
push
mov
leave
repz
push
jnp
or
jl
adc
nop
jp
movsb
int3
mov
inc
lods
or
cli
mov
out
mov
das
inc
lds
jno
lock
jmp
sub
sbb
mov
mov
push
jmp
xchg
lock
addb
popa
in
jge
xchg
in
jle
pop
fsubrl
push
sar
adc
dec
test
out
shlb
xor
jge
jo
loopne
push
xor
add
jns
call
dec
jle
push
std
cmp
xlat
in
mov
or
jo
pusha
push
clc
dec
mov
push
inc
xor
je
xchg
out
mov
jg
push
dec
pop
add
inc
aaa
xor
add
fnstenv
mov
fdivrl
jg
pop
xchg
fists
test
dec
loope
inc
pop
lret
out
aam
out
xor
icebp
mov
sub
aad
outsb
repnz
push
into
outsb
adc
fistps
aaa
icebp
out
dec
cs
sbb
jmp
lock
sbb
loopne
in
dec
xchg
push
lea
mov
jnp
mov
adc
js
les
mov
sub
mov
fwait
or
pop
je
jb
pushf
sub
decl
out
pusha
fwait
mov
cmp
out
inc
mov
dec
mov
outsl
cmp
dec
mov
das
in
in
add
push
out
push
mov
mov
scas
mov
iret
jae
loope
insl
inc
push
add
xor
push
movsl
adc
jb
adc
xchg
scas
inc
fists
inc
out
mov
cmp
and
or
outsb
int3
rcrb
prefetch
lock
cmp
sub
ret
adc
prefetch
or
pusha
mov
test
and
inc
imul
push
mov
jo
cwtl
sub
sbb
xor
ret
scas
call
sub
push
sub
and
adc
cmp
outsl
nop
dec
jp
loopne
dec
dec
lock
inc
pusha
mov
sub
out
imul
subb
outsl
add
std
push
jmp
out
out
mov
movsb
fs
outsl
hlt
loopne
xchg
sub
enter
fsubrs
hlt
das
ret
scas
xor
stc
repz
fisttps
adc
sub
or
fldl
in
and
adc
into
fs
cld
jmp
dec
adc
rorb
in
enter
adc
jo
sbbb
dec
xchg
out
mov
bound
test
cmp
and
jmp
cmp
push
mov
and
jg
pusha
or
xor
icebp
or
mov
stos
xlat
shlb
dec
jg
ret
cld
jbe
mov
pop
adc
jg
das
je
adc
mov
lds
pop
pop
and
sahf
pop
xchg
icebp
push
pop
push
jo
sbb
popa
leave
dec
in
add
dec
pop
dec
lret
mov
jo
mov
sub
gs
int3
lods
aas
ffree
mov
lea
cmp
leave
push
cs
fidivs
int3
or
dec
push
test
das
mov
dec
stos
aam
shlb
out
das
jecxz
js
int
decl
pusha
clc
mov
hlt
outsl
nop
mov
mov
ljmp
sub
mov
leave
mov
ret
outsl
adc
jo
insl
mov
dec
sbb
mov
ja
scas
shll
repz
cltd
shrl
mov
fimuls
mov
je
dec
and
or
cmp
clc
lea
fdivrl
negl
roll
loopne
cwtl
pop
cld
jge
xchg
mov
add
rcrb
out
push
iret
or
stc
and
popa
push
out
addr16
imul
daa
dec
in
das
ljmp
mov
and
inc
jle
or
int
clc
mov
das
sub
mov
dec
pusha
xor
outsb
or
movsl
imul
cmp
cmp
in
xchg
daa
push
sbb
cmpsl
call
push
pushf
enter
fldl
lret
adc
and
add
addr16
xchg
enter
arpl
shr
cltd
shll
inc
lahf
lret
push
cmpl
mov
mov
into
js
repz
and
jo
add
jae
hlt
adc
in
pusha
out
in
dec
cmp
adc
loope
sub
call
in
ret
aas
cmp
ss
data16
sub
nop
test
gs
mov
jle
push
add
push
out
jae
adc
outsl
sbb
dec
cs
scas
cld
out
mov
scas
mov
std
pop
or
sbb
jecxz
add
cmp
adc
leave
outsb
iret
add
add
enter
push
subl
pop
cmc
int3
mov
add
xor
cltd
aaa
ret
jmp
jbe
mov
or
int3
dec
jb
mov
mov
adc
push
jne
frstor
sahf
clc
aam
mov
push
xchg
xor
xchg
imul
push
lcall
mov
das
ret
adc
mov
sbb
jle
pop
or
or
adc
pop
pop
sub
push
add
adc
jbe
dec
add
adc
out
mov
xchg
bound
or
jbe
mov
and
jb
stc
test
cmp
out
shll
arpl
xchg
adc
jo
push
insb
mov
arpl
jb
data16
das
xor
out
mov
fimuls
lcall
jne
lahf
fcmovb
sbb
dec
adc
pop
movl
mov
stc
xchg
das
ss
insl
int
jo
test
pusha
scas
icebp
pop
mov
xchg
adc
xor
pop
inc
das
iret
mov
rorl
in
mov
mov
lods
and
mov
push
sub
mov
rclb
into
adc
jmp
and
or
cmpsb
mov
shl
aam
xor
ret
out
cmpsl
out
pop
xor
mov
je
cmpsb
push
pusha
mov
jae
push
mov
xchg
clc
repz
xchg
out
sti
add
xor
xor
adc
popa
shl
adcb
sub
shlb
push
inc
sub
fdivp
shl
mov
insl
in
in
out
mov
js
lret
in
mov
je
push
jb
jg
push
ret
cmp
jle
sarb
dec
out
js
xor
leave
negb
cli
push
inc
sbb
sahf
dec
and
out
xor
sub
mov
push
pop
pop
inc
or
inc
out
push
inc
popa
mov
sub
out
lods
movsb
push
fmuls
jg
xchg
add
add
and
mov
outsb
adc
movsb
daa
pop
out
repz
push
pusha
sub
jo
jbe
sub
loopne
jae
pop
icebp
pop
je
push
adc
jbe
sbb
out
cmp
iret
cwtl
dec
gs
call
int
std
jp
mov
xor
inc
ja
lds
dec
xor
jb
sahf
jb
iret
pop
dec
cmp
mov
pop
divb
pop
xchg
aas
arpl
dec
in
and
orl
out
sar
out
mov
dec
and
xor
das
or
sbb
out
les
dec
xor
push
loop
or
cmc
or
fldl
and
cmp
cmc
and
dec
scas
pop
cld
cmp
roll
int
int
out
adc
bnd
sub
push
add
mov
test
jo
subb
jmp
lea
jae
das
cmpsb
pushf
dec
addr16
test
scas
jo
pcmpeqb
xchg
jb
pop
push
sub
inc
or
jecxz
dec
or
pop
addr16
cmpsl
push
jne
xchg
mov
and
mov
adc
movsl
ficoml
ror
pop
or
in
mov
xchg
cld
test
out
xchg
insb
mov
aas
and
hlt
test
pop
push
inc
movsb
mov
push
out
xor
sbb
sub
and
jo
inc
push
rorl
iret
dec
pop
outsl
fimuls
into
ljmp
sub
insl
jbe
insb
aad
ret
mov
lret
insl
ja
sub
and
outsl
push
cmc
sbb
push
adc
adc
in
cld
movb
inc
adc
ss
push
gs
addr16
sub
je
mov
dec
mov
jne
xor
imul
xor
loop
jl
sbb
je
inc
movb
cmpsl
or
enter
pop
inc
lahf
adc
imul
out
mov
dec
call
push
xor
xor
mov
jp
push
loopne
and
stos
insl
dec
je
dec
int3
and
sub
scas
clc
fldl
xlat
adc
test
sbbb
ret
insb
test
in
mov
sub
cmpsl
decb
or
loop
aaa
insb
je
adcl
mov
cltd
gs
and
xor
push
pop
test
hlt
inc
pop
loope
das
or
push
data16
and
jae
clc
pop
clc
jo
clc
jae
push
mov
mov
xchg
inc
and
adc
dec
ret
outsl
jg
sti
cmp
or
jle
cmp
out
jnp
add
je
or
lahf
cmp
outsl
dec
scas
lock
adc
testl
std
inc
shrl
aaa
dec
je
or
rol
sbb
adc
or
mov
nop
loop
inc
mov
lcall
mov
jo
and
mov
jmp
inc
dec
push
fs
jmp
jae
xchg
into
outsl
cld
push
frstor
sbb
lock
out
inc
jmp
jae
out
out
dec
cmpl
mov
jae
sbbb
je
inc
insl
mov
inc
jl
cmp
outsl
inc
xor
movb
scas
xchg
cmp
imul
dec
rcll
lock
push
lock
jp
setle
lock
mull
daa
sub
sarb
pop
cmp
loopne
lahf
mov
sbb
subb
sbb
out
mov
fwait
add
xchg
sbb
push
cmp
cwtl
inc
icebp
loopne
jb
imul
adc
loope
out
jmp
adc
push
pop
iret
in
mov
stc
mov
lods
xchg
jmp
push
push
sbb
push
add
movsb
insl
pusha
popa
sbb
xor
push
fwait
mov
jo
push
ja
mov
imul
fcomip
jb
aam
push
push
stos
sub
push
jecxz
pop
jae
xchg
jecxz
xor
dec
push
adc
fstl
lds
push
cmp
cmp
js
faddl
mov
out
cld
or
xchg
jmp
and
outsb
dec
inc
jp
gs
add
lea
adc
idivb
xor
das
testl
push
jo
loop
out
ret
jbe
call
test
outsl
dec
sbbl
mov
pusha
add
enter
dec
sub
outsl
push
ret
repz
shll
call
in
data16
xor
pushf
pusha
lods
icebp
insl
std
lret
mov
arpl
clc
jl
or
cmp
jecxz
ja
out
mov
adc
jne
push
mov
push
in
push
je
mov
cmpsl
add
int3
lock
pop
ljmp
movsl
popa
out
or
push
pop
fcoml
pop
xor
or
or
cmp
je
push
dec
pop
arpl
outsl
insl
adc
mov
xchg
into
out
cltd
shlb
inc
dec
jnp
clc
gs
dec
je
loope
andb
sbb
sbb
or
out
ja
ffree
pop
push
lock
je
pop
cld
pop
insl
fidivrl
fdivp
popl
mov
loope
push
sub
stos
inc
out
test
mov
movsb
pop
lods
or
cli
inc
mov
in
jp
stc
mov
aaa
fnstsw
iret
clc
xchg
testl
inc
rorb
mov
sub
xchg
fstl
push
rorb
pop
sbb
je
xchg
pop
int3
in
fwait
or
loop
je
sti
jl
imul
test
push
lds
je
mov
fisttps
fcoml
popf
dec
jae
pop
or
xchg
jbe
stos
or
pusha
adc
mov
pop
or
ljmp
jo
cmpsl
pushf
xchg
ljmp
push
ja
cmp
cmp
aad
jecxz
iret
xor
push
add
add
xchg
dec
inc
mov
adc
inc
and
cwtl
jae
mov
aaa
mov
xchg
jbe
dec
in
lret
and
leave
jle
repnz
inc
jo
push
mov
or
les
das
push
jbe
mov
and
js
in
aad
add
ret
shlb
sarb
stc
and
mov
or
xchg
push
ja
pop
add
push
sbb
neg
pop
pusha
xchg
fwait
push
loopne
jb
jl
mov
adc
hlt
xor
cmp
mov
jp
rcll
decb
mov
dec
inc
push
insb
insb
ss
adc
sbb
cltd
jo
xchg
inc
int3
xchg
nop
push
je
fnstenv
pop
jne
mov
push
or
ljmp
imul
mov
scas
int
ljmp
scas
hlt
iret
jmp
rorb
inc
arpl
inc
bound
jl
call
aam
inc
sub
push
mov
cmp
push
outsl
sub
popa
xor
and
jae
into
pop
cmp
insl
dec
dec
jmp
xor
lock
dec
push
lds
enter
sti
xchg
jmp
cmp
cmp
fisttpll
loop
xor
add
mov
dec
jnp
dec
jae
push
out
stc
addr16
push
pop
fwait
iret
and
pop
cmc
stos
push
jns
sahf
add
icebp
in
mov
ret
jae
shl
jb
div
sbb
lock
jne
loopne
push
mov
sub
inc
jbe
rorb
push
xor
push
mov
xor
adc
mov
xchg
cmpsl
add
rclb
sbb
decb
ffreep
or
fs
dec
mov
or
dec
data16
in
mov
push
sbbl
dec
inc
call
jmp
inc
or
bswap
mov
insb
mov
pusha
int3
call
adc
mov
js
shrb
insl
nop
imul
lock
jo
lea
clc
mov
decl
push
inc
cli
jg
push
and
in
in
cli
sub
dec
jnp
mov
xchg
data16
add
dec
fdivrp
jnp
dec
mov
mov
and
outsb
and
mov
jge
ja
cmp
shll
pop
sbb
sarb
mov
ds
enter
icebp
jp
or
cli
sub
add
pop
dec
iret
je
sbb
scas
cli
and
cwtl
out
and
dec
adc
sub
js
outsl
testl
in
sub
pusha
sti
pusha
pop
out
lret
sub
cmp
dec
jp
sub
mov
pop
mov
inc
in
out
jge
or
or
xor
loopne
mov
jmp
and
add
loopne
movsl
mov
inc
inc
inc
fiadds
loop
pushf
sub
add
sub
ja
pop
sbb
xchg
add
mov
ja
cmp
divl
popf
adc
int
adc
add
push
sarl
or
jmp
rorl
scas
imul
jb
pop
test
dec
pop
data16
dec
popf
and
out
jl
out
into
addr16
shld
xchg
sub
scas
aam
insb
xchg
ficompl
push
mov
mov
cmp
adc
mov
out
inc
std
and
mov
out
call
lahf
sahf
loopne
insl
shll
cmp
lretw
insb
sti
adc
push
push
icebp
xor
fwait
outsb
jl
fdivp
adc
mov
jp
inc
iret
test
lahf
sbb
xor
iret
pusha
out
dec
xchg
fs
in
push
loopne
cs
fidivrs
push
mov
dec
iret
jg
test
mov
push
add
jge
and
insb
push
jg
cmp
loopne
mov
cli
push
mov
mov
jg
es
jns
jmp
repz
jne
pusha
out
sub
sahf
sub
push
test
out
xchg
insb
negb
pushf
imul
out
int3
pop
movsl
mov
adc
outsl
sub
adc
mov
pop
jg
je
loop
pop
std
sub
jge
loope
cld
jo
ret
into
out
mov
push
cmp
aaa
sub
pusha
cmp
cwtl
dec
jmp
clc
nop
and
xchg
and
repnz
mov
into
lds
cmp
xor
divl
arpl
mov
std
push
mov
jge
notb
add
out
aas
jg,pn
inc
jmp
aaa
sub
loopne
sti
or
in
dec
and
pop
pop
sub
cwtl
arpl
dec
cmp
jb
cmpsl
cmp
jne
xlat
fnsave
leave
fmull
pop
scas
and
in
bound
stos
shl
mov
xchg
cmpsl
fwait
mov
outsl
ljmp
iret
imul
or
inc
push
jge
popa
inc
rorb
add
dec
ret
cmp
adc
add
push
mov
add
cmp
scas
mov
cmpsl
jmp
ja
jmp
mov
pop
lods
int3
nop
xchg
sbb
addr16
movsl
pop
xchg
cli
int3
sbb
in
mov
sbb
cmp
inc
or
dec
jb
cmp
mov
fdivrs
jmp
shlb
and
or
in
icebp
rorl
pop
test
je
push
xchg
add
shl
mov
leave
adc
outsl
push
adc
test
callw
or
call
imulb
clc
out
sub
push
lds
xchg
lods
jg
jecxz
cltd
add
sarl
jb
das
mov
adc
dec
dec
adc
int3
or
mov
mov
aas
call
xchg
adc
push
sub
jge
cmpsb
jbe
lea
mov
pop
cmp
iret
or
pusha
jmp
rclb
and
outsl
les
and
sbb
xor
or
or
pusha
pop
jg
call
pop
imul
in
das
or
aaa
outsl
into
aaa
dec
pusha
in
and
mov
cltd
cs
and
das
lods
ljmp
ret
sbb
mov
add
das
jmp
jo
enter
sbb
outsw
dec
sahf
pop
aad
add
sbb
in
dec
push
mov
out
test
ljmp
test
inc
out
cmpsl
cmp
jmp
das
cmpl
in
in
out
js,pn
and
std
out
fwait
xor
jmp
int3
mov
dec
adc
arpl
ret
dec
xchg
xchg
pop
fsubs
pop
pop
in
out
inc
rolb
or
mov
adc
push
rcrb
out
cwtl
mov
repnz
pop
xlat
ljmp
rcrl
frstor
outsb
pushf
orl
or
sbb
push
adc
cmpsb
add
das
sub
out
js
sti
jle
or
add
pop
cmp
cmp
cmp
dec
rorb
and
inc
call
pop
pushf
and
fstpl
pop
testb
inc
or
pop
hlt
add
loopne
dec
adc
pusha
adc
popa
dec
enter
pop
jnp
pop
and
inc
ret
mov
dec
in
push
ret
cwtl
addr16
or
pop
and
mov
ja
xor
inc
fidivs
stc
sub
out
mov
lock
sub
test
or
and
push
cmpsb
gs
cmp
jns
inc
or
loop
dec
xchg
mov
jne
into
loop
xor
cmp
and
xchg
mov
pop
jo
cwtl
sub
call
sub
int
movsl
nop
jns
and
pusha
enter
or
mov
jle
ret
adc
rcll
mov
scas
jo
ret
out
ds
dec
push
lea
and
lret
roll
inc
mov
pop
scas
int
sbb
adc
lods
imul
pop
je
xor
dec
std
cltd
call
adc
movsl
add
cmp
stos
aaa
mov
iret
adc
je
cmp
paddb
sub
sbb
popl
mov
fimull
or
push
push
clc
enter
aam
ret
dec
push
outsl
xchg
adc
je
cmp
jne
jl
cld
sti
mov
push
mov
mov
pop
or
cmp
mov
popf
adc
jp
roll
in
sbb
data16
and
jg
adc
inc
ja
cli
push
cmp
imul
in
and
inc
call
cmp
cmp
cmp
test
dec
ret
dec
mov
and
jo
pop
mov
push
jo
das
lea
out
cmc
ficomps
mov
and
outsl
aas
fs
imulb
lret
insl
outsb
dec
mov
loop
lret
pop
jp
jo
pusha
pop
sub
lods
dec
mov
cmp
sub
insb
jo
aam
ja
insl
ror
push
pusha
dec
fcomps
in
dec
scas
out
jb
cmp
test
fimull
jo
js
pop
int3
loopne
aam
js
mov
notb
mov
pusha
push
out
aam
xor
mov
clc
test
cmp
nop
es
push
out
jns
xlat
dec
loopne
repnz
jnp
outsb
jb
arpl
inc
pop
lea
fs
dec
outsl
repnz
jge
dec
dec
popa
and
int
mov
cmp
test
dec
shl
sub
mov
loopne
add
mov
push
push
imul
mov
jbe
mov
ret
mov
or
out
inc
ret
adc
jmp
mov
inc
xor
ret
sub
or
fs
xchg
test
insl
ret
sub
insl
mov
mov
mov
pushf
outsl
jecxz
shlb
pop
add
rcl
cmpsb
scas
ret
adc
xor
mov
out
xor
incb
or
adc
mov
push
movsb
in
xor
adc
or
into
pop
mov
les
push
xchg
ljmp
mov
cmc
in
bound
inc
cmp
sbb
in
in
inc
aas
dec
sub
ficomps
sbb
push
push
popf
repz
addr16
or
out
mov
ret
sub
test
adc
or
sub
test
mov
pop
mov
mov
stc
inc
push
hlt
rcll
je
adc
cmc
outsb
add
push
mov
sub
unpckhps
jle
push
dec
scas
scas
out
xchg
jno
push
inc
and
inc
and
add
xor
inc
in
mov
scas
adc
movl
std
shll
add
repnz
orb
dec
shlb
lods
mov
xor
jo
adcl
sbb
movsl
inc
fsub
insb
rorl
fwait
sbb
dec
jns
adc
sub
lock
ret
setb
pushf
fisttpl
push
test
add
popfw
icebp
fisubrs
xor
popf
stos
ja
xor
push
pop
or
pcmpeqb
rorl
enter
jmp
loope
cmp
fchs
push
das
test
in
out
outsl
out
lods
sub
and
adc
cmp
in
jno
lret
rcll
inc
mov
rorb
hlt
xlat
xlat
cmpl
cmp
dec
dec
xchg
mov
and
addr16
ja
and
and
aad
test
iret
loop
fwait
test
repnz
addr16
and
je
pop
in
shlb
or
unpcklps
gs
imul
sti
inc
or
mov
mov
leave
clc
popa
push
jne
add
icebp
inc
cmpsb
push
and
add
jns
dec
and
dec
inc
push
mov
outsl
jnp
ss
scas
inc
es
loope
lods
xchg
push
pop
bound
loopne
repz
and
inc
jae
jg
pop
int
shlb
icebp
repnz
cmp
fmull
in
pop
stos
push
and
faddl
clc
cld
out
int
icebp
lods
mov
jo
cli
push
dec
mov
sub
or
push
js
mov
testl
add
mov
in
jp
fmul
sub
inc
icebp
sub
jns
repz
or
arpl
dec
mov
loope
lock
pop
xor
inc
test
subb
jg
pop
std
addb
jecxz
pusha
mov
adc
f2xm1
out
das
aas
jb
sahf
and
test
bound
mov
mov
icebp
lock
stos
daa
lods
mov
push
fmull
cltd
das
aaa
jp
adc
in
sarb
and
in
and
cmp
stc
mov
sub
push
imul
adc
daa
pop
jecxz
xor
adc
cli
jge
or
xchg
lods
repnz
repz
cmpsl
movaps
outsl
jne
leave
aad
jle
call
inc
sbb
call
xchg
iret
xor
sub
mov
lock
mov
mov
in
insl
adc
addr16
je
mov
mov
and
loopne
sbb
or
lcall
cld
dec
aaa
dec
outsl
shlb
cwtl
test
xor
test
ljmp
int3
test
push
je
pop
outsl
out
cmpsl
outsb
fsub
inc
pusha
in
and
scas
cs
pusha
cmc
jl
inc
out
pop
mov
ret
push
xchg
and
dec
cld
pop
jg
outsb
mov
or
add
out
outsl
xchg
insl
iret
dec
cmp
jl
sub
pop
mov
aas
movb
out
cmpl
sub
sub
gs
mul
add
or
in
xchg
inc
pop
in
pop
aad
enter
lods
out
das
popa
adcb
nop
sahf
add
sub
sbb
inc
xchg
adc
cs
cmp
shll
ret
pop
cmpsb
jmp
ljmp
leave
add
ret
mov
js
jo
outsb
test
rcr
insb
js
push
sbb
mov
js
or
scas
or
add
add
repnz
mov
add
mov
sbbb
jb
nop
pop
aam
pop
outsl
mov
es
jae
cld
jb
mov
mov
sub
loopne
and
imul
sbb
inc
mov
in
notl
out
lret
push
add
sub
sub
sbb
mov
es
cmp
icebp
mov
cmp
sub
scas
cmp
subb
adc
rolb
push
pop
pop
lods
rclb
rcrb
out
pop
pop
scas
or
insb
pusha
sub
fldpi
outsl
insb
aas
jo
in
test
insb
pop
adc
lds
je
cmp
ja
repnz
rolb
cld
add
inc
mov
outsl
jl
pop
leave
mov
out
dec
sahf
cmpsl
pop
fildl
shlb
bound
addr16
push
idivl
int3
insb
adc
repnz
pop
negl
and
mov
rclb
mov
dec
jmp
gs
jb
adc
sub
xor
out
adc
hlt
inc
pop
hlt
xor
test
fchs
xchg
jbe
std
xor
sub
pop
sbb
je
es
sub
dec
xchg
out
dec
lahf
outsl
inc
leave
loop
pop
dec
jo
in
nop
jo
inc
ss
mov
cli
xorl
insb
sbb
clc
dec
in
jo
pop
imul
ja
std
sub
inc
jns
outsl
dec
jp
outsb
dec
call
jl
out
dec
jge
data16
jle
inc
inc
jg
insl
sub
dec
popa
out
dec
bound
pop
inc
arpl
testb
jne
call
data16
hlt
cld
popa
addr16
inc
push
imul
js
call
sahf
repnz
dec
fwait
adc
dec
dec
fs
insl
pusha
cli
mov
outsb
in
call
in
icebp
and
pusha
sub
out
sub
das
push
xor
mov
pusha
icebp
push
insl
loopne
jb
lock
in
call
repz
jge
push
movsb
hlt
dec
push
out
jne
ja
imul
pusha
in
jbe
jle
outsb
testb
gs
jnp
testl
in
clc
inc
addr16
jns
jae
jecxz
inc
pusha
out
jp
out
out
cli
inc
imul
in
sti
inc
jecxz
imul
call
call
call
call
call
enter
std
jecxz
xor
add
imul
jo
push
xor
fucomi
push
mov
js
invd
or
icebp
pusha
adc
ljmp
or
mov
sub
data16
imull
gs
jne
mov
enter
out
call
jge
insl
loopne
mov
pusha
insb
call
bound
inc
pop
or
es
xchg
or
gs
call
sub
or
jbe
adc
add
push
push
sarl
popf
jecxz
fiaddl
bnd
loopne
push
and
aam
into
call
mov
stc
sub
outsb
out
call
sub
scas
dec
cld
jo
and
popf
pusha
xchg
xor
mov
mov
lock
je
mov
lcall
xchg
js
inc
xor
inc
fildll
pop
popa
shrl
lret
loop
xor
popa
adc
fidivrl
outsb
addr16
adc
out
ror
mov
gs
out
imul
push
icebp
jg
js
inc
outsl
jo
push
or
cmp
xor
cmp
and
jbe
inc
or
scas
xchg
push
ds
in
shrb
out
je
push
adc
loopne
cmpsb
outsl
ss
xchg
jge
jne
jecxz
stos
icebp
mov
shl
cmp
dec
leave
icebp
pusha
pop
and
cmp
cmp
xchg
sub
shll
aaa
or
shll
in
mov
pop
xchg
inc
js
and
iret
or
jmp
pop
hlt
push
cs
lret
bound
xchg
mov
mov
pop
pop
and
push
jns
add
mov
jb
je
out
lods
es
hlt
fs
in
sub
mov
test
inc
push
test
dec
or
mov
int3
hlt
imul
ficoms
add
jecxz
int
add
pushf
xor
out
out
jg
stc
mov
call
je
cwtl
or
cmpsb
sub
pusha
aam
sbb
dec
dec
push
or
xchg
add
push
lea
je
ffreep
jge
adc
je
xor
popf
push
sbb
or
das
je
sub
push
ret
jo
imul
pop
andl
icebp
mov
into
addr16
adc
adc
xor
cmp
adc
inc
fs
dec
test
shlb
fcomip
bndstx
dec
js
out
imull
dec
imulb
js
in
sub
in
subb
push
in
push
loopne
enter
repnz
dec
icebp
outsl
dec
js
arpl
xor
out
imul
sub
dec
xchg
jg
xor
jmp
in
outsl
sbb
pop
jg
pusha
jmp
fisubrs
call
loopne
orl
out
inc
fstps
dec
cli
outsl
in
pop
in
dec
insl
shrl
jecxz
leave
out
out
sub
dec
loope
mov
test
js
jmp
in
sub
dec
std
jo
sub
dec
gs
pusha
sti
call
and
int3
ret
repz
cmpsb
mov
xor
shrl
loope
roll
sbb
imul
and
and
and
in
das
outsb
adcl
dec
daa
mov
mov
jo
ret
arpl
ljmp
adc
daa
movsl
outsl
or
and
das
je
into
inc
insl
sbb
insl
push
sub
jge
outsl
cmc
addr16
outsl
je
dec
outsl
js
mov
push
xor
dec
xchg
in
stos
addl
or
push
stos
push
cltd
in
xchg
adc
push
outsb
es
sub
les
mov
adc
pop
jge
int
fwait
jo
imul
in
ljmp
pop
push
imulb
outsl
dec
stc
sub
push
call
imul
dec
gs
das
out
ret
cmp
scas
out
jg
push
nop
fmull
cli
xchg
dec
imul
jl
and
lock
rcll
idiv
pop
and
jle
scas
pop
enter
or
adc
out
fwait
in
jp
js
daa
das
rcl
lcall
ja
rcr
and
mov
popa
int
mov
test
mov
pop
stos
jge
or
imul
mov
dec
jmp
sti
in
or
stc
outsb
ror
mov
add
in
inc
data16
nop
movsl
fs
nop
and
pop
cmp
mov
loope
out
shrb
jecxz
in
lea
jne
aad
icebp
xchg
and
push
lods
in
xor
cld
sub
stc
into
rorb
mov
or
xor
jo
call
xor
inc
xchg
scas
mov
bound
dec
in
sub
or
jb
mov
mov
sbb
and
mov
je
ss
out
push
aas
mov
out
rcr
outsl
sti
inc
popf
inc
sub
sub
mov
pop
mov
dec
arpl
sahf
mov
es
and
fldt
inc
cmp
in
ljmp
push
jo
xor
cmpsl
sarb
cmpsl
lea
mov
ja
push
loopne
popa
andb
inc
scas
out
popa
daa
imul
imul
pusha
inc
xlat
inc
in
cmpsl
in
shlb
push
mov
dec
imul
adc
leave
iret
daa
je
xor
popa
orl
iret
xor
loop
lret
xor
insb
jb
push
mov
xor
in
outsb
push
and
lret
jo
dec
loop
push
loopne
adc
and
lretw
push
loope
rorb
jb
push
insb
dec
xchg
cmp
or
es
sarl
loopne
outsl
ss
fwait
pusha
mov
shlb
neg
sub
dec
jb
out
clc
pop
jp
push
movsb
xor
imul
stos
cmp
mov
imul
mov
xor
jae
arpl
xor
repz
call
or
dec
hlt
movsb
test
shr
sbb
stc
lods
jae
push
sti
mov
dec
xchg
jo
loopne
mov
lods
or
pusha
ljmp
adc
lcall
movsb
shr
dec
dec
mov
addr16
repnz
jle
or
adc
ja
negb
lcall
xchg
sti
stos
jbe
cmc
ljmp
jns
call
shll
cmpl
pop
leave
xor
mov
dec
jne,pn
jo
arpl
imul
sub
je
roll
lock
dec
mov
cltd
outsl
mov
cmp
mov
adc
outsl
adc
orl
sub
aas
add
mov
scas
dec
cltd
dec
in
aas
jg
or
insb
cmp
and
adc
sub
cmc
call
shlb
mov
fdivl
pop
inc
jmp
es
loopne
sbb
bnd
gs
sarb
dec
jp
dec
inc
scas
loopne
call
xorl
push
jne
fstl
sbb
rcl
or
lahf
lock
and
mov
jge
popf
cmp
loopne
lock
enter
dec
jb
bnd
js
inc
or
mov
xor
adc
mov
repnz
fucom
pop
inc
aaa
adc
pop
mov
mov
jmp
mov
daa
push
cld
xchg
pop
movsl
in
stc
jge
icebp
das
xchg
addr16
imul
jne
jg
xor
lcall
mull
xor
out
imul
imul
mov
dec
adc
lds
push
dec
sbb
jae
fldl
loope
or
or
ficompl
out
cmpxchg
cmp
mov
dec
dec
repz
dec
xchg
inc
lret
sbb
popa
or
pusha
add
insl
pop
popa
sub
sub
fsubl
mov
idivb
cmp
arpl
xor
cmp
and
lods
cmp
push
dec
sub
repz
and
fisubrs
jg
push
pop
mov
pop
lock
daa
jg
pop
pop
or
cmp
test
mov
mov
iret
data16
in
mov
lock
ret
inc
pop
sub
fbstp
sti
sub
jp
into
sub
rcll
movsb
push
loop
push
ljmp
push
inc
fsubs
sahf
and
dec
ljmp
vmread
rcr
mov
loop
je
ret
inc
mov
and
mov
dec
data16
lds
in
fildll
jb
ss
mov
test
dec
adc
cmp
dec
outsl
mov
jg
repz
push
testb
jne
cli
jecxz
mov
rclb
je
call
inc
or
mov
sbb
and
je
repz
mov
out
mov
and
and
insl
adc
arpl
pop
jl
mov
mov
scas
imul
lea
cmpsb
popa
insl
dec
jmp
xor
ja
fwait
dec
push
fisubrs
jg
adc
xor
xor
adc
pop
les
aam
test
lcall
mov
loopne
adc
add
mov
mov
jmp
inc
aaa
leave
push
xor
or
cld
in
jo
jmp
cmpsb
das
jo
mov
leave
push
adc
pop
inc
or
call
cwtl
dec
outsl
pop
arpl
xchg
loopne
sub
adc
pop
sub
mov
daa
out
xor
lods
outsb
inc
scas
insb
outsb
mov
das
test
loop
jle
ret
scas
mov
inc
loopne
leave
pusha
adc
cmpsl
inc
xchg
cmpsl
cmpsb
test
dec
popa
ss
fucomip
out
mov
test
pushf
or
adc
movsl
out
jae
sbb
ljmp
out
jg
inc
or
punpckhbw
mov
xchg
mov
mov
stc
sub
mov
out
dec
pop
cmpsb
dec
icebp
lret
and
pop
stos
xor
sub
loopne
aaa
clc
das
into
dec
dec
pop
das
stos
stos
shll
mov
cmpsl
das
dec
into
idivl
push
jo
cmp
subl
insb
fisttps
clc
or
dec
pop
lret
cmp
stos
jmp
pop
push
data16
ret
cmp
or
in
sarl
or
int3
stos
mov
stos
push
dec
lods
je
mov
mov
cmp
and
sub
push
or
stc
push
add
pop
hlt
mov
nop
int3
push
xor
scas
cltd
xchg
decb
roll
xor
cmp
psubusb
test
outsl
jle
mov
jge
adc
push
enter
scas
cmp
push
les
or
push
repz
cmp
push
xchg
jae
adc
mov
or
ret
fmull
rcrl
cmc
jne
jo
ja
aaa
inc
add
adc
push
addr16
popl
lock
lret
push
call
dec
lock
xor
pop
aaa
sub
or
ret
std
das
mov
insb
or
insl
ja
push
dec
aam
aaa
and
xchg
je
ret
sub
push
and
mov
cmpsb
out
in
pop
cmp
enter
dec
into
jbe
in
sbb
sub
ljmp
in
jle
lret
icebp
push
out
sub
fnstsw
mov
inc
shrb
jb
outsb
sahf
loopne
cmp
int3
mov
pop
pusha
mov
pop
std
ljmp
insl
inc
icebp
icebp
mov
clc
or
pusha
mov
push
sub
incl
nop
in
lods
pusha
adc
clc
int3
fidivl
ljmp
sub
call
daa
call
call
dec
pop
adc
jo
jg
lret
inc
xor
pop
loop
movsl
sub
inc
jo
insl
sub
movsb
or
sbb
jae
sbb
mov
pop
icebp
popa
pop
jnp
cltd
dec
shr
js
jne
dec
jge
in
pop
repz
add
mov
sbb
xor
add
fcomip
dec
and
sub
loopne
aad
push
mov
mov
adc
or
movsb
pop
adc
arpl
mov
push
mov
jae
and
dec
add
mov
loope
pop
cmc
push
push
and
and
ja
addr16
test
rorl
inc
movb
test
into
gs
repz
loopne
dec
ljmp
pop
inc
adc
jle,pn
fnsave
imul
icebp
mov
jnp
pop
mov
enter
mov
jl
lds
or
jp
cli
push
out
jl
mov
inc
pxor
in
mov
out
repnz
aad
cmp
lods
dec
dec
fdivrl
or
cmp
out
jg
in
jo
push
and
sbb
out
in
xor
pop
movsl
xor
lock
inc
data16
orl
adc
mov
cs
movsb
jp
fldcw
insl
popf
xor
cmp
popl
cld
scas
test
insl
push
outsb
je
outsb
in
pop
lock
or
data16
test
fisubrl
sub
jecxz
mov
fs
lret
push
test
and
push
mov
je
shrl
fwait
in
lcall
pop
pop
mov
and
sarb
mov
test
addr16
or
and
cmp
mov
sub
cmp
fisubrs
push
dec
sub
xlat
int
nop
mov
cmp
or
push
pop
or
xchg
or
xor
loopne
aas
out
mov
jns
movsl
cltd
fcompl
jge
outsl
rclb
out
cld
lods
lock
popa
pop
sbb
das
daa
lods
in
ljmp
jge
call
das
gs
mov
arpl
decl
xor
or
push
cmp
jg
mov
or
js
xchg
addr16
xchg
insb
mov
dec
or
add
shr
outsb
fistps
cmp
dec
je
adc
and
adc
dec
outsl
mov
jo
pop
inc
scas
dec
lcall
xchg
or
mov
shr
lods
or
imul
mov
aas
test
roll
dec
arpl
adc
mov
adc
push
mov
out
js
je
sbb
ror
arpl
imul
push
sub
fisttpll
pop
lods
iret
shlb
adc
imul
jmp
push
inc
outsl
outsb
test
shr
add
pop
scas
push
jo
in
push
stos
pusha
ljmp
fsubr
pop
jl
nopl
xchg
shl
jmp
mov
add
fnstcw
push
push
or
jo
rcrl
addr16
lret
sbb
repnz
mov
dec
scas
sbb
push
lret
sub
lock
insl
cli
loopne
xor
insb
mov
or
insl
and
jl
ret
stos
inc
push
xor
out
pop
push
lret
xor
mov
addr16
or
push
stc
call
das
push
jmp
push
arpl
incb
aam
ss
call
sub
daa
test
pusha
cmpsb
sub
dec
ljmp
push
jge
dec
or
lock
pop
stos
mov
repz
insb
or
into
das
andb
outsl
add
mov
rcrl
rclb
cmp
clc
in
xlat
push
das
outsb
or
jle
scas
sub
je
cmp
insl
mov
clc
das
lock
dec
xchg
loope
push
cmc
mulb
inc
push
sub
jne
mov
dec
in
push
aas
push
mov
add
test
outsl
arpl
gs
xchg
mov
cld
jae
xor
popf
mov
aas
and
dec
repz
int3
scas
insl
cmovge
bound
je
adc
mov
rorb
mov
jb
lcall
popf
sub
das
aad
je
and
dec
inc
ret
bnd
nop
js
or
dec
jnp
push
jl
adc
icebp
or
xor
std
in
addl
adc
fidivl
mov
push
cmc
enter
xor
mov
cmp
lock
sbb
mov
out
sub
jae
repnz
adc
cmp
lods
insb
dec
in
mov
push
fimull
sti
xchg
call
push
out
cs
cmp
es
cs
push
ss
mov
dec
shl
je
lret
sbb
bound
lret
lods
mov
insb
mov
or
int3
push
je
stos
xchg
loopne
xor
sub
jb
mov
loopne
stos
ss
inc
repnz
mov
jl
fcompl
insb
imul
out
mov
xchg
sahf
mov
jg
lea
popf
cmp
sub
lods
jo
in
mov
pop
jecxz
and
jle
inc
cmp
mov
add
outsl
adc
jae
dec
adc
mov
test
push
fs
out
in
hlt
xor
mov
push
jmp
mov
das
scas
sbb
insb
outsb
push
push
lock
sbb
adc
clc
dec
incb
xor
cmp
xchg
in
pop
daa
xor
psubusb
cmp
insb
aas
push
push
or
in
out
push
mov
push
ficompl
out
sub
ljmp
sub
pop
je
adc
movups
adc
and
mov
dec
jno
ja
pop
mov
loopne
mov
inc
dec
dec
lock
in
pushw
pusha
sub
in
push
inc
test
out
jmp
mov
dec
adc
testl
iret
sub
sub
div
and
xor
push
scas
jmp
in
mov
mov
daa
inc
lods
add
lcall
je
pop
cmpsb
mov
fdivrs
sbb
popf
fstpt
bound
stc
pop
aad
dec
das
pop
in
outsl
pop
xchg
pop
lock
repnz
ja
adc
push
and
hlt
int
sbb
lret
clc
pop
jp
jo
mov
mov
lods
clc
out
in
cmpsb
adc
pop
shl
mov
xchg
pop
es
clc
xchg
sti
clc
and
ljmp
or
xchg
dec
jb
mov
push
adc
add
adc
test
dec
lea
adc
adc
das
icebp
xor
sub
mov
imul
insl
push
rcrl
mov
or
std
popf
xor
in
fsubp
cld
and
jns
xchg
lock
ja
insl
or
lock
je
push
mov
in
sub
cmpb
aad
aam
scas
xchg
lea
sub
jb
outsb
sub
lods
inc
jl
das
adc
int3
pusha
aam
faddl
das
adc
xchg
mov
xor
call
insl
inc
lret
das
or
inc
push
mov
iret
lret
decb
lret
outsl
adc
cld
sub
push
mov
pop
mov
xor
push
adc
dec
aad
lea
fldt
fisubrs
iret
aad
mov
mov
lock
cmpl
add
out
pop
jmp
leave
and
vunpckhpd
pusha
lea
sub
loopne
dec
iret
add
jecxz
mov
push
xchg
cmp
fstps
scas
aam
vmwrite
add
cmc
out
and
clc
adc
dec
addb
rcrl
mov
mov
cmpb
psrlq
sub
in
rcrb
sub
push
xchg
in
xchg
push
mov
in
les
xor
in
inc
push
mov
push
xchg
xor
aaa
dec
adc
dec
push
cmp
pusha
aad
test
orl
adc
test
test
int
in
adc
ret
test
fadds
lds
xchg
and
out
lods
bound
je
in
push
adc
jecxz
mov
mov
fmuls
mov
dec
mov
dec
mov
ficoms
add
lock
mov
scas
jae
mov
push
sub
imul
int3
or
loop
test
push
cltd
adc
adc
cmp
nop
push
je
decl
or
aas
push
loopne
aad
in
push
callw
cmpb
jg
pusha
lock
sahf
out
shll
mov
sbb
lret
cs
js
jge
dec
jb
jp
jmp
js
sub
jb
out
pop
lock
inc
out
pop
cmp
rorb
ds
or
arpl
dec
jo
push
sub
cmpsb
fs
and
ljmp
out
dec
scas
and
outsl
mov
pop
dec
in
push
push
push
test
pop
cld
sub
push
mov
push
test
int3
repnz
out
in
call
lcall
mov
push
add
jb
inc
stos
decb
lret
sub
arpl
pop
leave
call
cltd
aaa
mov
mov
jo
push
or
mov
pusha
mov
lahf
out
mov
in
xchg
jecxz
pusha
xor
cmp
insb
pusha
and
and
jae
adc
inc
and
sub
imul
insb
fdivrp
jmp
loop
or
xor
dec
in
push
jb
mov
js,pn
stos
popf
sub
daa
push
daa
pop
outsl
ja
sub
inc
fsubrl
mov
arpl
data16
cld
scas
test
or
faddl
stos
push
daa
std
cli
daa
mov
cmp
inc
maxps
cli
mov
sub
sub
call
test
fcompl
cld
in
adc
call
push
int3
daa
fidivrs
dec
dec
xchg
std
cs
int3
out
adc
imul
imul
sub
dec
mov
in
lcall
daa
imul
sbb
dec
inc
comiss
scas
adc
and
decl
arpl
test
div
pusha
push
xchg
fcoms
push
daa
je
lret
cwtl
jp
repnz
mov
in
pop
sub
scas
inc
add
mov
inc
cmp
aam
and
jae
or
fmull
sub
ret
lret
and
test
push
in
call
das
in
imul
shrl
inc
mov
insb
js
jge
hlt
insb
sbb
mov
rorl
xor
push
sbb
lea
nop
jae
mov
outsl
ret
jo
cs
adc
cmp
subl
xchg
adc
repnz
xor
in
into
sub
andb
call
cli
in
lods
stc
int3
int
cmp
adc
cld
movsb
xchg
nop
or
mov
pop
out
into
and
xor
dec
xchg
mov
adc
mov
in
mov
repnz
repnz
mov
clc
xchg
addr16
imul
test
dec
rorb
decl
dec
aas
pcmpeqb
mov
fldl
or
sub
popa
sub
jo
in
and
jg
xor
stc
call
pop
testl
lock
dec
mov
push
adc
js
sub
mov
addr16
decl
jmp
fildll
std
imul
inc
dec
icebp
js
loop
scas
pusha
mov
or
cmp
aas
pop
mov
pusha
dec
dec
rcrl
imull
clc
bound
clc
out
insb
jg
sub
pusha
popa
inc
test
pusha
dec
cmp
lock
sub
insb
push
es
in
clc
and
xor
mov
inc
dec
in
push
sti
push
jmp
rcll
int3
xchg
jle
pushf
icebp
mov
or
sbb
ja
sahf
push
outsl
inc
stc
fucomip
out
push
jle
adc
sub
adc
sar
jle
xchg
jle
ficomps
or
jb
fwait
xor
loopne
dec
mov
jae
inc
and
in
jl
push
js
lea
pop
xor
je
fisubrl
or
fs
mov
in
sub
mov
mov
and
fs
xchg
jmp
daa
mov
cmp
shll
push
mul
dec
sub
jo
ret
loope
out
cmp
fldlg2
mov
js
cmp
leave
mov
push
call
dec
scas
test
das
imul
fsubrl
lock
add
mov
inc
cmc
into
sbb
rcrl
jmp
adc
iret
out
dec
fsubl
js
push
push
mov
daa
clc
mov
into
loop
mulb
into
sub
loopne
and
pop
loopne
lds
dec
and
jmp
mov
push
sub
int3
push
and
fcoms
sub
cwtl
sub
push
dec
test
cmp
daa
xlat
imul
fstps
outsb
imul
or
or
outsb
fsubrl
cmp
outsl
es
subl
ljmp
fneni(8087
inc
icebp
inc
outsl
push
insb
mov
leave
in
dec
rep
jo
adc
cmc
cmp
cltd
clc
out
int
cmp
cmp
dec
lcall
hlt
lret
lea
adc
xchg
add
and
xchg
in
push
mov
ljmp
mov
loop
mov
js
jns
fscale
jmp
dec
je
idivl
push
jo
or
cmp
ljmp
cmp
jp
cltd
add
push
dec
mov
jns
pop
ljmp
fidivrs
shr
cmp
xchg
mov
push
jno
ss
nop
jb
pcmpeqb
test
icebp
repz
out
push
cmp
adc
push
adc
pop
sub
fldcw
mov
mov
pop
sahf
cwtl
jmp
push
mov
push
sub
cmp
outsl
dec
xchg
jo
add
and
xchg
mov
dec
nop
or
sbb
pop
and
jmp
mov
gs
je
xchg
je
push
jo
mov
outsb
cmp
popf
inc
jnp
shrb
pop
das
cmp
pop
je
mov
fldt
loopne
in
scas
sub
mov
cmp
jo
shll
hlt
jg
enter
lcall
cmp
mov
sti
mov
shlb
sub
nop
xchg
enter
arpl
mov
popa
call
pop
pop
adc
xchg
inc
loop
loopne
add
mov
dec
jno
sbb
hlt
popa
repnz
adc
xor
je
mov
or
fcmovnbe
add
adc
bnd
mov
mov
sub
mov
push
call
das
xchg
sub
push
addr16
inc
in
dec
mov
jg
or
dec
mov
push
push
movsb
lock
sub
sub
mov
or
mov
call
aaa
call
push
lea
xchg
sub
ret
xchg
adc
push
stos
jb
enter
xor
xchg
inc
fisttpl
repnz
shll
call
sarl
pop
pusha
fdivrs
rcl
pop
mov
adc
jg
jl
cld
sbb
out
mov
inc
loop
pop
adc
in
or
mov
and
in
ja
sahf
jmp
sub
enter
mov
imul
sub
je
cmpsb
lahf
push
pop
dec
bswap
dec
fnsave
mov
jb
out
repnz
sub
inc
cltd
push
xor
aad
push
inc
scas
rorb
daa
pop
add
or
das
cltd
loopne
sbb
jge
je
sbb
clc
push
or
stos
jo
rcr
filds
mov
sub
loopne
mov
insb
pop
mov
pop
push
mov
imul
mov
test
outsl
cmp
loopne
mov
pop
xchg
inc
pop
out
and
outsl
out
lock
lods
push
ret
sub
outsl
pop
aas
popf
cmp
cmp
sub
add
inc
aas
jo
popf
cmp
je
ret
psubb
orl
cli
dec
out
or
push
lock
mov
inc
iret
pop
dec
jnp
je
mov
xor
es
lret
push
pop
or
push
dec
pop
jmp
mov
sub
adc
pop
adc
dec
or
xor
pop
jge
cltd
je
pusha
int
in
mov
out
add
int
push
xchg
cmp
cmpsb
jo
je
movb
cmpsl
pop
xor
je
in
stc
call
daa
pop
add
js
ljmp
dec
mov
notl
ja
dec
sbb
mov
pushl
push
mov
mov
negb
iret
sti
lret
jl
adc
cld
dec
or
push
daa
jne,pn
xchg
ds
inc
repnz
outsl
adc
inc
lcall
mov
stos
or
dec
lds
negb
mov
lahf
jb
adc
lret
out
fmull
mov
ja
jns
ljmp
jmp
sarl
mov
loope
lahf
jne
adc
sub
adc
xor
ja
sub
dec
sbb
jne
pop
push
or
rcl
add
or
loopne
das
push
mov
adc
int3
test
mov
lods
mov
sub
add
bound
sub
mov
xor
pop
in
cs
mov
loopne
jne
dec
in
nop
mov
or
lea
dec
incl
fstpt
pop
pop
push
sub
call
das
aas
sub
out
dec
inc
and
outsl
mov
fmuls
push
adc
scas
dec
ljmp
cmc
stos
mov
mov
outsl
clc
dec
fxch
outsl
das
scas
lods
dec
cwtl
addr16
adc
xor
insb
xchg
call
jo
inc
mov
dec
jp
lea
fs
dec
mov
repnz
scas
in
and
fsubrs
repnz
cmpsb
stos
in
mov
outsl
out
das
or
std
lret
out
cmpsl
scas
insb
das
jne
mov
push
aaa
dec
mov
wrmsr
and
dec
jbe
fildl
scas
test
mov
scas
add
jns
je
addr16
mov
clc
sbb
inc
ja
xor
cmpsb
iret
leave
pusha
add
inc
js
addr16
imul
lods
iret
stos
loopne
rcrb
dec
lock
cmpsl
xor
in
inc
push
mov
mov
sbb
cmovo
in
and
sbb
jge
das
mov
iret
std
das
pop
cmc
inc
and
cld
iret
adc
ja
dec
lret
iret
adc
jg
movsb
inc
lret
push
jl
pcmpeqb
std
dec
adc
jnp
and
xchg
dec
psllq
mov
sti
inc
loope
dec
imul
pusha
jl
pop
movl
fsubrs
dec
cld
clc
mov
jp
and
or
mov
mov
out
into
das
pop
std
push
jge
mov
mov
out
stos
das
data16
mov
std
das
inc
inc
in
incb
iret
xor
nop
adc
xor
pop
xchg
jmp
and
sub
adc
ror
jo
xor
sti
adc
cmpsl
jp
shl
fsubrl
js
ljmp
test
dec
inc
pop
jae
push
xor
sub
scas
popa
or
xchg
adc
add
lods
sahf
mov
mov
mov
es
sbb
addr16
push
dec
aam
bound
psllq
fwait
repz
movsl
mov
out
xor
subl
lods
xchg
pop
sti
jo
mov
addr16
push
stos
adc
sub
dec
bound
push
lcall
or
adc
push
sti
mov
popf
pushf
test
cmp
adc
pop
sbb
push
mov
jl
dec
fimull
cmp
xor
adc
xchg
sub
add
xor
xchg
lret
shrb
jp
jg
pusha
ret
inc
push
outsb
dec
ljmp
xor
sub
loopne
and
push
dec
push
push
pusha
out
cmp
cmp
mov
sti
xchg
loop
dec
movsb
xchg
nop
sub
push
cwtl
outsl
sarb
outsw
add
sbb
lock
movsb
inc
nop
adc
xor
flds
test
sub
mov
pusha
neg
mov
add
jo
ja
enter
insl
mov
movsl
push
add
sub
shlb
and
pusha
outsl
imulb
push
outsb
pop
insl
call
ret
push
cmc
xchg
ret
call
stc
xchg
mov
cmpsl
cmpsl
xor
outsl
push
stc
rcrb
shrb
mov
jg
jl
fucomip
in
dec
nop
sub
out
push
cld
sub
popa
adc
jl
xor
ds
push
ds
lret
shrb
adc
jnp
mov
and
xchg
bound
call
sbb
lea
adc
push
fistps
mov
xchg
int
out
jl
cli
dec
jnp
addr16
jo
mov
arpl
repnz
xchg
and
jmp
js
cmp
popa
sahf
mov
sbbb
xchg
or
es
lock
popa
sar
movsl
inc
mov
or
mov
mov
mov
imul
loopne
int
shrl
jle
mov
inc
or
iret
dec
aam
mov
mov
sub
pxor
popa
mov
push
int
xchg
jns
es
test
sub
fisttpl
sub
jecxz
or
insb
inc
jns
pop
adc
mov
xor
popa
loop
dec
jg
pusha
enterw
enter
or
adc
push
adc
push
lods
mov
stos
mov
and
dec
outsl
out
pusha
mov
rol
push
cltd
xor
bound
outsl
lock
idivb
mov
mov
dec
jl
adc
cmpsl
push
out
jo
mov
add
test
nop
mov
adc
insl
fwait
pusha
add
cmp
sti
int3
pop
loope
pop
mov
lock
sbb
adc
sub
inc
xor
cltd
adc
shrl
enter
inc
fisubs
inc
jecxz
out
jo
ret
js
clc
nop
pop
mov
gs
jecxz
xchg
cmp
xor
int3
or
fisubs
inc
push
sub
ljmp
ljmp
hlt
pop
aas
sahf
lods
pusha
fldl
ret
mov
jb
outsl
call
xchg
lcall
cmpsl
je
fs
cld
ja
inc
subb
xchg
out
jb
out
inc
shrb
stos
ljmp
xchg
addr16
and
les
lods
add
jnp
dec
xchg
xchg
sub
std
das
subb
hlt
fsubp
fimuls
jle
mov
mov
clc
push
ja
mov
je
jo
mov
jg
pusha
add
cmpl
popf
or
xchg
mov
rorl
in
jge
outsl
sbb
dec
xor
je
xchg
or
cmp
adc
pop
pop
loopne
mov
clc
bswap
cmp
out
das
sub
cwtl
insl
addr16
mov
push
sub
lret
inc
rorb
add
dec
push
jae
rcl
scas
gs
les
dec
xor
insb
inc
aad
or
push
cld
iret
daa
les
cmpl
mov
mov
jnp
gs
dec
adc
mov
arpl
xchg
sbb
sbb
jg
jmp
je
js
fst
jmp
mov
js
clc
or
inc
loope,pt
mov
or
ljmp
mov
rorb
repnz
insl
push
sub
das
out
int
lea
inc
lock
push
das
popa
pop
insl
or
mov
xor
movsb
out
outsb
fprem1
push
das
mov
leave
pop
dec
mov
inc
adcl
and
jno
jo
or
lock
loopne
lock
xchg
dec
enter
sub
jmp
je
jmp
movsl
sarl
fists
ljmp
mov
mov
and
fucomip
daa
inc
cmp
jae
cs
push
loopne
insb
fdiv
cmp
loope
out
insb
xchg
out
shrl
cli
or
mov
aad
cmpsb
es
out
pop
jb
dec
adc
int
jb
out
inc
sbbl
mov
mov
imul
inc
aas
iret
in
popa
mov
sahf
cmp
in
and
dec
push
jo
mov
mov
mov
je,pn
mov
loop
and
xor
inc
outsb
and
sub
mov
jg
xchg
xchg
jge
cmp
adc
jne
jg
lea
shr
je
xchg
inc
in
shl
pushf
mov
dec
jns
xor
roll
push
repnz
cs
jge
enter
in
xchg
and
scas
mov
lret
and
test
inc
je
cltd
hlt
sub
outsb
dec
mov
movsl
xor
scas
je
nop
sub
xchg
pop
popf
dec
fisubrs
outsl
xchg
lcall
shll
ret
mov
sub
psrlq
xchg
test
hlt
push
inc
clc
inc
rolb
adc
push
imul
sahf
mov
cmpsl
jno
cli
mov
rcr
mov
add
addr16
inc
mov
or
lret
jae
adc
je
adc
cmp
adc
addr16
sub
adc
outsb
popa
aam
adc
mov
js
in
loopne
test
or
daa
push
in
js
dec
repz
xor
fwait
jb
dec
jns
mov
xor
and
xchg
aas
jae
gs
popa
jp
jge
mov
and
ror
xor
pop
push
push
out
dec
ror
decb
cltd
nop
push
mov
jge
inc
jb
popa
mov
mov
les
jo
dec
aas
in
pop
mov
pop
mov
and
ds
push
mov
pop
mov
and
and
add
pop
mov
and
and
add
pop
mov
call
imul
xchg
push
divb
xchg
outsb
popa
push
lahf
xlat
imul
pop
out
xchg
jecxz
push
fwait
sbb
int3
pop
sub
and
or
outsl
jb
cmp
dec
xor
subb
xorl
in
imul
jmp
jne
sbb
mov
scas
add
adc
xchg
adc
inc
dec
iret
out
and
adc
insb
mov
movsb
lret
dec
fwait
mov
lret
mov
pop
cltd
xchg
adcl
in
fsubp
jg
xchg
test
inc
mov
push
mov
mov
aaa
and
jae
mov
out
ss
cmp
lock
test
bound
jae
adc
pop
dec
pop
adc
dec
scas
lcall
push
loop
aad
inc
mov
dec
call
fidivrs
push
xor
cli
mov
popf
pop
jo
cmp
je
xor
push
dec
cld
jecxz
icebp
imull
or
ret
mov
jbe
push
fbld
sbb
shll
mov
push
mov
rcl
cmp
mov
imul
mov
mov
push
add
jl
pop
imul
pop
mov
push
push
cwtl
mov
mov
nop
dec
jns
scas
test
pmaddwd
dec
lea
sbb
push
adc
imull
sub
push
dec
jb
aad
push
test
or
ss
ficomps
sbb
mov
adc
jp
loopne
cmp
dec
push
int3
dec
subb
popf
sbb
inc
rorl
lcall
and
xor
inc
push
push
and
inc
sub
push
xchg
test
shlb
jp
xor
movsl
xor
lcall
sbb
add
cs
xchg
xchg
dec
sbb
mov
outsb
push
adc
repnz
add
repz
js
popa
aam
mov
jmp
mov
outsb
cmp
or
jae
clc
dec
outsl
push
je
push
ret
pop
std
in
imul
jb
push
jmp
lahf
out
out
insb
and
ja
pop
imul
lock
lock
loop
cmp
pusha
addr16
sub
xor
outsl
and
or
movsl
mov
sub
movsl
cmp
and
adc
and
sbb
dec
lock
or
dec
jecxz
xor
mov
sbb
dec
cltd
add
inc
andb
lods
stos
xchg
sub
xchg
lods
adc
inc
popa
ret
cmp
mov
and
and
scas
inc
mov
mov
jae
pusha
jo
inc
dec
cmp
in
xchg
les
add
push
insl
das
adc
out
dec
push
por
test
call
or
cmpsb
mov
or
lods
and
lret
cmpsb
outsb
jmp
inc
loopne
sarl
movsb
jbe
and
rep
outsb
aam
cmp
popf
sub
mov
jl
fsubrl
shl
mov
cmp
xchg
cld
pop
xor
sub
pusha
loope
in
dec
ja
verr
push
sub
lods
fidivrl
sahf
mov
daa
xchg
adc
xchg
test
data16
jo
hlt
sbb
jmp
adc
std
in
adc
cmpsl
mov
scas
das
in
lret
movl
xor
and
popa
das
adc
negb
and
lods
adc
cwtl
add
out
mov
add
int3
xchg
mulps
add
add
jge
outsb
fs
push
xchg
subb
shll
add
inc
mov
sbb
pop
dec
cmpsl
lock
push
push
fsubr
pop
lds
sbb
lar
loop
filds
cld
cmp
aaa
ljmp
nop
js
pop
dec
cmp
pop
xor
ret
add
mov
dec
out
jns
ds
out
sbb
push
mov
adc
cmp
loopne
mov
inc
mov
mov
out
push
xor
push
xorb
sbb
adc
push
fs
aas
xor
das
je
inc
mov
in
divb
and
test
in
cmp
cmpsb
cmp
insb
pop
sub
je
or
jecxz
pop
test
cmp
inc
iret
xor
mov
xabort
ja
pusha
mov
mov
add
mov
inc
js
pop
mov
mov
lock
je
and
lock
inc
dec
mov
js
jb
add
mov
adc
push
sbb
jae
int3
add
add
data16
repnz
popa
xchg
je
stos
xor
inc
mov
adc
frstors
mov
xor
insl
mov
loop
adc
jae
pop
xor
jmp
push
adcl
cmp
mov
pop
clc
push
jb
jp
cmc
loope
popa
adc
adc
jmp
and
je
or
pop
sti
nop
leave
inc
int3
cmpsl
call
pushf
cmpl
jmp
sahf
push
push
insb
xor
lods
push
adc
lret
in
inc
xchg
ds
aaa
outsl
or
adc
mov
add
xor
sbb
ret
sub
adc
mov
jb
lods
stc
mov
jg
addr16
adc
xor
notb
adc
jo
mov
adc
mov
push
push
lods
addr16
sub
inc
push
add
push
outsl
jmp
jl
lcall
push
bound
fdivl
push
and
add
xchg
mov
and
or
negl
inc
adc
adc
jno
or
mov
xchg
divl
xchg
mov
outsl
sub
inc
bnd
mov
push
mov
and
jnp
movsl
jo
push
int3
shlb
insb
sbb
cmp
cmp
jle
lock
int3
sbbb
rcrl
pushf
call
ret
adc
cs
push
add
adc
inc
into
pop
add
xor
lock
dec
push
gs
adc
iret
insb
mov
call
int
adc
das
inc
sub
insb
xchg
insb
std
iret
ljmp
ret
in
push
sub
cltd
clc
and
cmpsl
cwtl
rorl
aad
mov
jl
cld
sub
lcall
sub
jmp
jp
push
push
and
sahf
into
andb
sub
inc
hlt
das
xchg
sub
adc
jg
dec
adc
fbld
insb
fsubl
sub
popf
orb
sahf
push
push
dec
fcoml
cmp
gs
mov
inc
lock
mov
outsb
mov
aaa
jo
push
push
dec
mov
das
inc
lock
adc
iret
sub
outsb
ret
cmovp
cld
inc
and
adcl
bound
mov
addr16
xchg
mov
push
leave
sub
push
push
fistl
inc
mov
push
mov
adc
push
dec
xchg
out
push
scas
mov
ja
inc
inc
es
lods
adc
mov
or
ja
lea
movsl
sub
mov
mov
mov
stc
in
inc
adc
out
add
inc
push
adc
adc
ret
jecxz
test
push
addr16
xchg
or
push
inc
out
movsb
sub
inc
movsb
scas
in
daa
out
fs
insl
jo
or
jecxz
add
arpl
or
dec
test
out
pop
clc
insb
imul
sub
and
push
ret
inc
jmp
iret
and
andl
lods
into
out
pushf
scas
frstor
into
rcrb
out
inc
and
jge
arpl
out
call
inc
jecxz
repz
std
or
call
xor
pop
adc
xchg
xchg
fwait
mov
sub
xor
push
pop
fs
stos
loop
outsl
and
mov
out
or
mov
jo
sbb
inc
jecxz
fisttpl
mov
mov
into
mov
out
test
dec
jmp
pmulhuw
dec
nop
out
out
sbbl
xchg
addr16
mov
loope
dec
push
cmc
or
mov
ret
out
jp
stos
push
push
jmp
adc
dec
or
jo
jbe
push
shlb
outsl
add
xchg
sbb
addl
cmpsl
and
or
out
enter
push
push
data16
mov
jge
jb
dec
cmpsb
mov
shll
pop
and
mov
add
and
push
aam
jnp
in
or
stc
adc
insl
xchg
mov
data16
xor
out
fisubs
dec
out
loop
out
test
outsl
add
andb
in
and
xchg
inc
mov
stc
scas
push
scas
enter
jae
test
in
aam
jg
push
cld
imul
es
loop
movsl
in
loop
jl
jo
inc
add
fdiv
add
divl
add
jg
mov
mov
xlat
xor
mov
gs
or
push
js
ret
arpl
aam
test
in
insl
dec
outsl
mov
or
adc
das
push
cmp
pop
out
and
in
imul
mov
imul
or
fsubrp
xchg
pusha
pop
jo
push
jo
fnsave
outsb
cld
push
shl
pop
and
adc
in
stc
pop
adc
jg
fisubl
sub
out
stc
imul
sti
push
sti
aam
jmp
jp
dec
mov
idivw
cmc
pop
js
hlt
jb,pt
shll
add
je
int3
mov
or
nop
dec
rclb
mov
shr
outsl
sub
out
scas
in
push
xchg
dec
push
xor
roll
inc
sub
punpckldq
orb
std
sub
sti
dec
jbe
jmp
call
sub
pusha
cmp
lahf
jmp
sahf
adc
cmc
dec
decb
into
out
and
lods
movsb
inc
ss
in
hlt
xor
nop
push
loop
std
not
mov
jnp
jo
mov
or
dec
aam
jae
inc
arpl
add
std
add
leave
daa
ja
mov
leave
and
lret
shlb
push
jo
add
sub
push
sub
shlb
loop
shl
fdivl
divl
jl
outsl
lock
dec
in
jo
xor
cld
fwait
adc
jnp
pop
pop
jo
cmp
inc
inc
arpl
insl
pusha
outsl
jl
inc
cmp
insl
sbb
repnz
insb
sti
push
outsl
push
stc
movsl
outsl
fldt
repz
call
in
xor
cltd
cmc
lock
lock
out
aam
sub
xor
out
dec
scas
adc
dec
and
ret
pop
dec
in
jns
insb
fsubs
outsl
inc
push
jmp
imul
outsb
je
jo
mov
sub
sub
lcall
push
jo
mov
push
test
inc
std
dec
imul
cmp
js
hlt
pop
push
popa
mov
imul
push
push
pop
inc
in
push
insl
ficomps
popa
or
addr16
push
adc
sub
cld
push
inc
jmp
fidivrs
jbe
cltd
popa
adc
loope
jmp
fwait
std
cmp
hlt
cmp
dec
out
outsb
jae
inc
js
push
nop
out
mov
cltd
hlt
scas
roll
stc
loopne
mov
pop
push
dec
iret
out
inc
mov
in
in
inc
cmc
mov
mov
cltd
bound
dec
mov
loope
aaa
das
cmp
rol
jge
in
push
dec
outsl
int
xor
addr16
jns
out
repz
outsb
setns
orb
clc
add
sub
mov
jne
pop
dec
mov
popf
test
call
jb
orl
clc
fbstp
jle
loope
out
xorb
arpl
repz
inc
out
push
or
outsb
fistps
cmp
xchg
push
or
testb
mov
xor
inc
clc
maskmovq
testl
push
outsl
adc
sub
inc
inc
das
sahf
in
fsubrl
pop
pop
sub
loope
out
jmp
out
lret
push
int
push
lods
jg
jb
lods
jmp
push
sub
loop
cmc
sub
call
outsl
jo
pop
out
callw
inc
scas
xor
add
sub
insl
mov
loope
jmp
aas
stc
out
mov
add
sbb
int3
jbe
add
sub
jb
clc
push
fadds
ja
push
mov
aaa
imul
arpl
dec
incl
inc
cltd
divb
jne
in
div
jo
pusha
out
popa
xlat
popa
jle
inc
std
pusha
dec
in
mov
fs
outsb
addr16
insb
mov
in
popa
dec
nop
out
addr16
addr16
jl
and
imul
icebp
out
mov
out
jge
dec
andb
fcoms
inc
xor
rcll
in
pushf
dec
shr
loopne
je
dec
mov
in
in
jno
je
pop
mov
push
scas
cmp
in
out
add
jbe
popf
shlb
mov
and
lds
dec
imulb
mov
pop
rolb
xchg
das
pop
in
push
pop
jg
data16
add
mov
xlat
add
xchg
inc
rcr
dec
insb
pop
les
mov
push
jmp
jnp
imul
loope
lock
lret
push
imul
pop
sbb
or
dec
inc
out
pushf
dec
or
xchg
add
jnp
insb
shrb
adc
push
imul
dec
imul
lahf
pop
leave
jmp
mov
adc
icebp
fstl
or
xor
push
pop
jb
xchg
adc
adc
xor
jae
mov
cmc
pop
hlt
push
enter
pop
ljmp
call
dec
icebp
nop
adc
dec
repz
jbe
push
in
push
xor
and
mov
sub
mov
ds
mov
mov
popa
lock
lock
call
and
cld
dec
adc
inc
test
gs
or
popf
jne
dec
out
and
push
imul
pop
cli
sub
inc
repz
outsl
out
inc
mov
cmpsb
add
popa
or
jmp
loop
dec
loope
out
iret
loopne
jne
call
xor
jl
in
aas
popa
notl
inc
idivl
jge
repz
sub
jnp
sti
dec
std
nop
xchg
sub
xor
enter
dec
dec
in
mov
inc
arpl
out
mov
inc
cmpl
mov
fdivp
fxch
inc
movsb
mov
sub
test
jg
sbb
addr16
xlat
or
push
sbb
insb
cmp
test
jb
mov
ljmp
imul
test
arpl
xchg
mov
and
arpl
jg
lock
fwait
ret
stos
out
lock
jno
roll
push
xor
sti
lret
mov
mov
xor
push
or
mov
cvtpi2ps
rorl
int3
dec
push
mov
sbb
fadds
mov
in
adc
jle
jo,pn
xchg
inc
lds
jae
xor
scas
or
xor
mov
push
icebp
ret
pop
repnz
dec
lret
sbb
out
pop
mov
mov
xchg
popf
in
pop
fldcw
push
ljmp
cs
xor
subb
mov
sub
sbb
cmp
mov
push
test
mov
test
inc
lock
cmp
jo
jo
addr16
aaa
outsl
xor
mov
inc
outsl
xor
wbinvd
pop
inc
fs
push
sub
dec
enter
and
insb
je
or
jb
testb
inc
ret
push
xor
in
enter
repz
dec
and
outsb
movsb
sti
or
frstor
inc
xor
xchg
xor
rorb
pop
imul
test
ja
jmp
scas
jo
or
aam
sub
sti
cmp
mov
xor
fdivr
dec
je
dec
lods
imul
stc
data16
xorl
and
mov
repnz
iret
or
sub
mov
mov
das
add
lock
and
push
jnp
lods
ficoms
pop
cwtl
outsl
mov
fcomps
jl
fdecstp
in
add
xchg
and
int3
xor
cmp
push
hlt
dec
outsb
jmp
jbe
loope
and
pop
jo
test
sub
mov
dec
or
push
sti
or
cmp
cmp
sub
lret
jo
and
orl
cwtl
and
cmp
push
outsb
aas
mov
jecxz
cmpsl
insl
hlt
loope
cmp
inc
scas
in
xor
popa
scas
je
pop
cmp
push
sbb
bnd
pusha
or
jns
adc
les
inc
cmp
ss
leave
test
jl
mov
add
jo
sbb
adc
or
sti
sub
in
andb
jg
insl
and
push
mov
movsb
aas
outsl
cmpl
pop
sub
shlb
inc
out
mov
mov
sub
lahf
in
daa
xor
or
lods
ret
rorl
aas
inc
mov
xor
out
xor
enter
pusha
push
movq
or
sub
sub
push
inc
clc
sub
jo
jnp
out
lods
inc
push
push
in
pusha
xchg
ret
out
daa
jo
jne
popa
bound
lret
cmp
mov
pusha
inc
cwtl
data16
push
jo
wbinvd
mov
push
inc
into
filds
lock
cmpl
pop
jo
inc
pop
dec
aam
jb
inc
outsl
decb
mov
cs
loop
push
and
inc
mov
add
jb
sbb
sub
add
cltd
in
ret
psubsb
jb
push
xchg
js
imul
mov
mov
jbe
imul
jbe
lds
jae
call
push
scas
test
mov
out
add
dec
cmc
lods
push
xchg
sub
cmpsl
in
or
ret
dec
add
scas
lods
and
cmp
push
neg
dec
cmp
loopne
sbb
jg
jns
mov
xchg
sahf
clc
cli
jg
rcll
mov
add
mov
xchg
and
lcall
push
out
mov
xchg
pushf
cs
shl
push
mov
data16
adc
out
xlat
shrb
shl
xlat
pop
cs
push
in
ja
fbld
xor
std
or
subl
pop
out
and
test
jmp
bound
ret
dec
popf
sbb
xor
sbb
stc
cld
mov
sahf
pop
pop
adc
repnz
inc
inc
xchg
mov
fsubr
das
or
xor
pusha
scas
pop
clc
push
xor
daa
ficoms
lods
dec
push
adc
fs
push
inc
data16
jbe
movsb
add
iret
cmp
jae
fwait
outsl
cmpsb
push
sbb
ja
sarl
loop
dec
push
or
dec
and
dec
inc
into
dec
test
cmp
mov
lods
mov
push
jnp
or
jmp
je
mov
std
dec
cmp
out
and
pop
mov
jl
adc
dec
pop
addr16
add
add
xor
stos
pop
pop
adc
cmp
pop
push
mov
adc
xchg
cs
popf
nop
adc
or
divb
dec
aaa
shll
pop
sbb
sub
mov
pop
xor
fdivrl
addr16
rorb
subb
mov
jp
je
mov
and
loop
or
bound
dec
dec
jns
cwtl
jp
ret
inc
pop
push
cmp
loopne
icebp
jbe
cmp
outsl
fdivs
xchg
mov
pop
aas
xchg
inc
adc
ret
lret
icebp
cs
shll
pop
adc
js
daa
adc
add
clc
lret
adc
int
outsl
icebp
adc
loop
push
and
daa
aam
pop
int
add
pop
clc
jmp
icebp
outsl
xor
jb
arpl
test
dec
and
test
leave
xchg
mov
or
out
and
mov
outsl
xchg
adc
aaa
test
xchg
push
inc
adc
inc
jo
xor
inc
outsl
mov
loop
fdivs
ja
test
or
daa
mov
push
mov
inc
or
frstor
fincstp
jge
push
outsl
add
xor
jbe
ret
cli
pop
ss
pop
sub
adc
jo
mov
sub
fisttps
arpl
decb
mov
jns
clc
mov
ss
adc
in
fnstenv
aam
mov
pop
sbb
push
jle
aam
lock
hlt
es
push
call
mov
add
sub
push
jno
sub
cmp
imul
popa
mov
jp
int3
filds
outsl
mov
push
jb
jle
out
jnp
push
cmpsl
cli
or
inc
xor
ret
jns
cvtdq2ps
clc
xor
sub
lods
test
lds
push
outsl
arpl
sbb
add
pop
stc
sub
xor
inc
mov
or
aas
xchg
dec
js
ret
dec
insl
adc
addr16
imull
das
je
sarb
out
sti
outsl
insl
bound
jne
jmp
loopne
int3
adc
movsl
call
sbb
into
addr16
es
in
outsl
stos
loopne
lock
ret
dec
sbb
test
loopne
sub
int3
loop
jl
adc
and
lock
xchg
das
xlat
pop
addr16
int
pop
add
and
sbb
addr16
mov
xchg
repnz
dec
ficomps
movl
or
xchg
inc
into
loop
xor
add
aas
mov
mov
in
sbb
in
das
jl
out
inc
lds
jle
push
dec
imul
jp
or
jbe
fimull
inc
push
ss
insb
jg
insb
mov
or
fbld
mull
in
sub
test
outsl
into
mov
adc
or
adc
mov
lock
je
mov
popa
add
and
js
pop
in
jo
inc
add
divb
jnp
scas
imull
dec
icebp
lcall
push
dec
insb
in
jg
inc
lods
sbb
out
mov
inc
dec
mov
mov
jle
loopne
or
shl
es
out
enter
jb
cmpsl
loop
dec
and
cmp
jo
pop
ja
stc
add
stos
push
call
dec
ja
adc
push
xor
sahf
in
and
mov
mov
push
hlt
or
mov
mov
or
scas
into
testb
enter
rcl
gs
mov
je
jl
popf
push
dec
inc
mov
mov
ja
outsb
js
jge
sub
insl
sub
outsb
test
cmp
mov
xor
inc
ret
sti
addr16
mov
fildl
sub
dec
mov
xchg
jmp
subb
or
add
addr16
hlt
int3
fs
push
pop
add
push
jo
sub
sub
mov
jo
sarb
or
cld
add
jo
sti
call
ss
shrl
xchg
shlb
jnp
dec
fucomip
jnp
mov
ss
sbb
xor
sbbl
xchg
aaa
data16
loop
pop
sbb
je
cmc
jmp
and
leave
das
test
inc
cmp
sub
push
out
fiadds
inc
int3
jbe
and
repz
pusha
push
inc
lods
les
jl
fdivl
dec
in
ljmp
fwait
sub
adc
stc
sub
hlt
jnp
std
fnstenv
nop
add
imul
add
push
dec
xor
lods
jo
fsubl
rclb
jns
cmp
push
je
out
push
idiv
pop
pop
adc
dec
or
push
data16
ret
push
mul
pop
cmp
jl
jg
sub
mov
cmp
in
out
dec
nop
jno
je
fidivs
gs
pop
jle
adc
sbb
push
outsb
sub
stos
or
cmp
add
dec
cmpb
jns
in
cmpsb
sbb
addr16
jg
iret
pop
cmp
lods
mov
scas
incl
inc
pop
inc
and
daa
nop
push
dec
out
mov
dec
jecxz
aaa
aas
lock
sbb
aas
cmp
je
sbb
leave
and
shll
pop
pop
ljmp
jno
and
js
add
jns
lock
aas
je
std
push
mov
jns
roll
push
es
push
test
ret
jne
pushf
imul
jns
sbbb
inc
stc
xchg
les
fdivr
pop
test
xchg
das
jg
cmp
inc
out
hlt
add
fnsave
mov
aas
fwait
lret
call
add
dec
jmp
fwait
mov
fldt
out
add
mov
shrb
or
adc
je
pop
js
dec
fs
cmp
ret
and
ljmp
outsl
inc
add
fwait
gs
ret
outsl
and
push
adc
push
into
xor
rorb
testb
xlat
inc
pop
xor
add
aaa
and
xchg
movsb
jnp
jg
scas
std
jae
incb
and
sub
add
scas
iret
cmp
rcll
dec
lock
or
cmpsl
mov
mov
rcrb
pushf
andl
jg
mov
dec
dec
dec
sar
sub
ja
shll
loop
pop
add
loopne
push
lcall
call
insl
rorb
or
rolb
add
xchg
xchg
dec
push
pop
lods
mov
or
pop
cltd
icebp
or
cwtl
je
lahf
and
andl
decb
add
jg
aaa
stc
mov
xchg
dec
fadd
dec
icebp
js
out
call
jbe
xor
inc
scas
or
or
add
add
imul
sbb
jle
push
andb
inc
sub
cmovbe
data16
adc
xabort
daa
jbe
mov
imul
fcom
je
data16
jnp
and
jns
popa
xor
lea
sbb
cmc
pop
or
loope
lret
jae
inc
cmp
das
das
adc
jno
jmp
xchg
out
mov
es
xor
std
das
inc
mov
sub
cmp
mov
mov
jge
dec
repnz
mov
or
cmp
lret
dec
jmp
leave
rolb
dec
pop
outsl
popf
sbb
addl
or
loopne
jp
in
ret
jl
shl
inc
pop
lret
adc
stc
loope
out
cmc
call
gs
pop
fwait
xor
pusha
cwtl
jnp
pop
ficoml
arpl
add
cmp
xchg
xchg
aad
xor
jg
dec
addr16
iret
dec
cwtl
js
lock
add
xor
jnp
sub
outsb
jns
and
jnp
xchg
pop
mov
sarl
ficompl
andb
cmp
jl,pt
mov
sub
in
mov
xor
dec
aaa
cmp
lea
push
imul
xchg
sbb
lret
jle
or
lock
sbb
mov
rclb
inc
push
push
rolb
aas
adc
jbe
insl
sbbl
lcall
add
mov
inc
xor
movsl
adc
icebp
dec
pop
dec
sbb
cmp
pusha
mov
and
jle
cmp
pop
mov
xchg
idivl
pop
lcall
add
dec
jb
popf
ljmp
addl
inc
ret
and
pop
pusha
ret
sbb
or
push
sbb
push
dec
sbb
adc
xor
shlb
adc
out
push
sbb
lret
xchg
lret
sti
js
jne
jae
adc
push
ljmp
cltd
xchg
js
inc
loopne
pop
clc
cmp
inc
mov
fdivrl
push
sub
lods
mov
xchg
lret
xor
cmovns
mov
xchg
sbb
fmulp
scas
stc
imul
add
jge
jmp
mov
jmp
or
je,pn
cltd
sub
je
int
sub
cld
adc
sub
mov
test
sub
inc
sbb
lds
jo
jnp
push
adc
out
xlat
insb
call
repz
mov
popa
adc
dec
cwtl
pusha
sub
into
iret
mov
cli
push
cmp
cmpsl
fcmovne
imulb
push
lock
aad
pop
inc
shl
mov
push
jo
mov
xor
mov
dec
test
or
push
pop
in
mov
sub
push
or
cmc
pusha
idivb
out
mov
insb
jb
popa
pop
je
jbe
push
dec
adc
das
dec
aas
faddl
popf
fwait
cli
add
lret
repnz
fs
pusha
negb
je
jl
pop
lock
mov
xchg
sub
jle
push
stc
nop
dec
cmp
inc
jnp
xor
or
inc
pushf
sbb
out
lods
jbe
inc
or
sub
mov
imul
xchg
loope,pt
addr16
mov
push
ret
sub
xor
cmpsb
cmp
dec
das
xchg
inc
jmp
sbb
stos
mov
std
add
jbe
pop
imul
out
mov
jl
xchg
mov
mov
fidivs
stc
cmc
jbe
jl
mov
loopne
mov
xchg
sub
push
jg
adc
lods
and
je
rcr
xor
dec
cmpsl
lods
out
mov
and
mov
into
scas
dec
shr
sub
lock
insl
jo
inc
in
or
enter
inc
cmp
adc
pop
and
mov
int3
sbb
jnp
xor
jno
jecxz
aad
addr16
pop
ret
dec
stos
fimull
or
sahf
mov
mov
pop
sub
and
xor
push
xor
stc
aaa
sub
mov
loope
and
out
repnz
hlt
mov
sub
xor
fs
hlt
in
mov
fistpll
mov
mov
xchg
lret
rclb
sbb
mov
push
mov
pop
adc
pop
cltd
mov
pop
jne
mov
jp
arpl
in
in
test
xchg
fadd
ret
leave
int3
mov
jne
mov
and
lds
jb
sub
mov
or
cmp
cmc
mov
rol
mov
shrl
jge
lock
fbstp
mov
cmp
inc
je
jmp
pop
jb
repnz
mov
test
and
ljmp
adc
test
nopl
jo
jge
and
inc
jbe
stc
les
sub
and
add
and
ds
es
inc
outsb
and
dec
mov
sub
sub
pop
inc
sub
jne
ds
jecxz
mov
or
adc
inc
dec
ret
cwtl
cmp
xor
sbb
aaa
mov
dec
ljmp
jo
icebp
call
test
jmp
je
nop
popf
inc
mov
add
xchg
jmp
movsl
mov
cld
outsb
jo
pop
mov
jmp
and
push
gs
loop
fidivrs
je
es
and
cmp
pushf
sti
inc
cli
and
sub
test
pusha
dec
fistl
cmp
jmp
pop
std
les
out
popa
outsl
push
iret
jmp
mov
iret
inc
mov
cld
lret
test
cmp
incl
cmp
rep
dec
ficoms
adc
jbe
fistpl
icebp
jo
fsubrl
cmp
ret
daa
xor
push
pop
jnp
adc
adc
in
frstor
dec
adc
xchg
aam
jmp
adc
loopne
or
dec
mov
lods
cs
or
mov
aad
pushf
sbb
in
pushf
mov
jne
pop
lahf
sub
mov
sbb
xchg
hlt
push
sbb
scas
jb
popa
or
jmp
sbb
nopl
or
sub
out
in
std
fwait
cmp
test
jb
xchg
mov
dec
mov
add
push
cld
negb
pusha
mov
test
jo
sub
repz
jae
ficomps
fdivrl
jmp
je
push
out
pushf
fiaddl
fwait
imul
cmp
aam
mov
imul
adc
xlat
dec
mov
insl
mov
jb
ljmp
hlt
insb
jle
xchg
pusha
cmp
nop
scas
je
jmp
lods
jnp
and
jb
popf
push
pusha
clc
jne
jle
outsl
daa
enter
pop
ljmp
pusha
add
inc
les
push
daa
incb
ret
cmp
pop
xor
sub
sbb
adc
or
jo
jmp
sub
and
cwtl
xor
or
fnstcw
stc
cmp
push
or
ret
out
xor
js
pop
jle
repnz
jl
aas
xchg
lods
jae
jo
je
xor
ljmp
xchg
out
adc
and
fistpll
je
sbb
xchg
and
mov
and
addr16
loop
adc
mov
in
jmp
repnz
fisubrs
in
and
pushf
outsl
test
jecxz
sub
cmc
push
pop
mov
in
clc
idivb
and
rcll
in
shll
cmp
jge
sub
or
icebp
push
mov
inc
mov
mov
and
mov
xlat
jle
dec
lods
xorb
lock
out
cmp
mov
jp
push
add
xor
sub
loopne
js
out
mov
dec
scas
popa
or
filds
sub
test
int3
xor
cld
mov
dec
adc
jg
cmc
and
leave
scas
dec
out
push
pop
jb
sub
dec
nop
popa
movsb
cmpsl
out
pusha
lods
fidivrs
int
mov
insb
mov
pop
jo
xor
in
xor
pop
in
or
outsl
mov
and
add
mov
and
sti
mov
insb
add
ret
mov
dec
or
sub
jcxz
cmp
in
and
sub
adc
xchg
out
mov
sub
int3
mov
push
lods
lds
xor
pop
hlt
fs
add
loopne
xchg
test
pop
andl
icebp
sti
aam
test
sub
sub
mov
fucomi
outsl
sub
ljmp
inc
or
sarb
xor
in
mov
fs
or
popa
orl
jge
enter
jo
lock
fwait
in
cwtl
sti
lcall
int3
out
mov
mov
inc
loope
ret
sub
filds
shlb
add
call
sbbb
push
daa
out
test
pop
in
push
lock
int3
test
jl
sub
mov
adc
rcrl
mov
mov
outsb
out
or
jo
dec
icebp
in
out
adc
test
out
jbe
mov
ljmp
popa
rcl
iret
add
push
mov
lret
ret
or
or
mov
sbb
lods
xchg
imul
mov
rorb
bound
lock
loopne
dec
xchg
pop
popf
shlb
pop
mov
adc
insl
loop
and
pop
sti
inc
mov
subb
insl
movsb
inc
xor
jb
add
test
andb
xchg
dec
cmpsb
mov
inc
scas
or
cld
mov
dec
loop
cli
pop
mov
cltd
leave
jmp
inc
jo
and
imull
in
cmpsb
cld
and
inc
loop
sbb
push
sbb
in
sbb
fildl
dec
sub
std
int
lods
mov
insl
mov
lods
pop
and
out
xor
jo
dec
or
je
inc
jg
pop
idiv
dec
test
xchg
lcall
cltd
mov
inc
xchg
mov
mov
scas
adc
scas
mov
mov
in
adc
mov
ficomps
dec
push
cs
cmpsl
sbb
rol
es
adc
push
cmpsl
je
and
or
aas
xor
loope
cmpsl
dec
mov
test
loope
inc
sub
sub
mov
nop
ret
jmp
xor
adc
push
mov
adc
je
loopne
xchg
push
test
cmpsl
rclb
aaa
call
sbb
push
int3
insl
movsl
scas
testb
xor
clc
out
xchg
in
pusha
lods
push
rclb
das
jae
cwtl
out
inc
xlat
push
out
jb
inc
ljmp
rorl
into
pop
imul
xchg
insb
decb
push
mov
stc
das
dec
jp
pop
fcomps
mov
xor
push
fidivl
push
jle
dec
loopne
stc
dec
adc
es
pusha
or
sub
dec
xchg
cmp
lcall
and
fdivl
aas
outsb
cmp
bnd
jbe
mov
sbb
xchg
xlat
cmpsl
das
into
xor
loopne
rol
sbb
int3
outsb
adcb
xchg
cli
aad
loope
or
ror
inc
ss
cwtl
mov
mov
dec
out
andl
mov
mov
add
xchg
jne
ja
pop
pop
and
jb
pop
icebp
daa
xchg
jecxz
out
sbbb
jnp
jg
dec
dec
adc
jg
aam
adc
add
or
jecxz
cmp
in
cmp
xor
scas
mov
push
add
sbb
pop
gs
lea
dec
sub
sub
or
lods
out
xor
dec
das
imul
jge
mov
dec
insb
outsb
add
mov
or
repnz
sub
cmp
mov
out
pop
test
int3
add
xor
aas
arpl
sub
out
aad
or
jns
inc
ds
es
into
add
push
outsl
imul
mov
jo
ror
pusha
out
or
mov
test
das
test
pop
clc
or
adc
imul
jne
push
jns
iret
inc
push
or
iret
add
mov
xor
or
loopne
shr
leave
mov
or
sub
shrb
ss
cmp
pusha
adc
add
mov
dec
sbb
in
cmp
pop
mov
fsts
in
je
push
inc
js
pop
filds
stos
jb
hlt
cmp
jg
cmp
cmp
xchg
call
sbb
add
fldenv
in
xorb
xchg
cwtl
incl
adc
mov
insb
ffree
sub
fistpll
cmp
aas
pop
fdivrp
pop
pusha
or
cmp
rolb
pop
cmc
pusha
adc
pop
daa
outsl
jle
lmsw
add
mov
outsl
cli
lods
fiadds
push
lea
dec
cmpsl
cld
mov
decb
adcb
call
pop
addl
andb
imul
mov
mov
pop
movsl
push
pushw
cmp
ret
and
push
lea
lahf
mov
cmc
xchg
fdivs
hlt
mov
xor
cmpsb
clc
shrb
rclb
movsb
dec
inc
mov
ret
mov
mov
jns
rcrb
arpl
sub
mov
or
fchs
sti
mov
je
jg
aam
daa
sbb
push
lcall
inc
ja
rolb
outsl
adc
fisubrs
jnp
outsl
cli
and
orl
mov
cmp
hlt
or
inc
pop
stos
or
les
out
cmc
jae
mov
sbb
push
add
iret
add
aas
cmp
cmp
adc
lcall
sbb
add
mov
lods
cld
sub
imul
out
lods
lret
mov
insb
fidivl
jmp
or
adc
cmp
and
add
jae
loop
xchg
sub
jo
xchg
shlb
mov
xor
mov
imul
mov
mov
push
push
and
xchg
pop
xor
outsl
mov
mov
adc
push
movsl
sahf
insl
in
je
jle
mov
sahf
mov
sbb
iret
sub
outsl
jle
into
cltd
out
push
shr
cmc
in
jae
pop
mov
lods
sahf
js
lock
imul
xor
ljmp
negb
fcmovnbe
idivb
push
or
shr
inc
pusha
sub
inc
test
cmpsl
div
inc
ja
or
shll
mov
mov
insl
push
rcr
xchg
or
xchg
ror
movsb
repz
and
fimuls
ss
mov
sub
out
or
inc
cmp
iret
jne
jb
addr16
mov
or
loop
xchg
out
ret
cmpsb
out
out
adc
stos
shlb
aaa
adc
mov
mov
repz
cltd
mov
dec
push
fisttpll
cmp
out
push
push
data16
dec
xchg
pop
push
leave
jmp
push
pop
xor
jmp
out
or
push
clc
ljmp
mov
jo
dec
xor
jl
jl
icebp
mov
loope
out
out
add
fcomps
push
xchg
mov
push
mov
adc
cmp
inc
out
mov
aam
int
js
imul
sbb
fldt
ret
mov
adc
clc
outsl
mov
mov
test
leave
push
in
xorl
imul
stos
daa
insl
xchg
inc
in
les
fwait
mov
jo
out
sub
shrb
sbb
sbb
push
push
jo
enter
inc
mov
mov
mov
faddl
cli
cmp
jb
in
outsl
rclb
dec
dec
lret
outsb
out
decl
push
pusha
bound
call
xchg
inc
enter
xor
aam
add
leave
cmp
scas
mov
push
cli
fildl
stc
xchg
fdivs
cmpsb
pop
pop
xor
inc
xchg
inc
fisttps
push
mov
sub
push
insl
and
adc
in
data16
leave
fisubs
and
inc
mov
int3
arpl
in
add
fwait
or
sub
std
cmp
mov
pop
jo
out
lret
xor
mov
sti
jge
mov
repz
sti
loopne
movsl
test
je
and
popf
test
das
inc
cmpsl
lock
cwtl
push
outsl
pandn
sbb
mov
pop
out
movsl
ds
sbb
and
sub
andb
xlat
xor
popa
xor
ret
or
add
mov
xlat
filds
mov
xchg
je
sbb
fwait
jnp
mov
sub
mov
xchg
adc
or
insl
pushf
stc
push
mov
jg
add
movsb
dec
jns
addr16
mov
add
es
stos
inc
lcall
inc
outsb
or
xchg
shrl
sub
mov
jo
mov
js
push
xchg
out
cmp
push
add
mov
add
mov
out
clc
xor
add
sbb
repnz
hlt
sbb
cltd
inc
cmpsb
test
nop
push
test
int3
or
dec
fcoms
mov
mov
test
xor
inc
shll
jne
jnp
and
pushf
add
mov
fisttpl
repz
subb
addb
popf
or
decl
iret
in
cwtl
es
sub
out
jae
loop
out
jp
mov
enter
dec
xor
inc
enter
mov
or
cmc
dec
je
dec
mov
cmp
stos
add
imul
and
movsb
jo
pop
daa
dec
int
iret
das
call
mov
push
mov
aaa
pop
insb
xchg
outsl
lods
adc
xchg
xchg
pop
mov
sbbb
shl
int
mov
mov
in
xor
dec
jmp
push
inc
cld
lret
mov
dec
leave
adc
addr16
mov
shrl
pusha
and
ja
shrl
jo
aas
adc
fsubr
fldt
or
arpl
negb
push
inc
jo
mov
mov
dec
sub
mov
je
pop
orl
dec
xor
mov
inc
test
adc
daa
inc
push
cmp
lahf
daa
daa
int
dec
int
into
inc
inc
out
mov
jg
lcall
mov
stos
xor
popf
lds
push
xor
scas
loopne
outsl
sub
cwtl
adc
loope
in
into
push
dec
jns
jae
mov
dec
fimuls
add
sub
cmpsb
outsl
outsl
xor
stos
mov
flds
cmp
cmp
cmp
imul
ljmp
js
xor
fwait
pop
fcompl
or
cmp
dec
xchg
and
cmp
jo
andl
je
jns
dec
mov
iret
test
jns
pop
in
and
lcall
sub
insl
push
cmp
and
cs
add
or
out
fxch
movsb
pop
push
jle
lea
push
mov
adc
lods
xchg
pop
lret
cmc
jmp
push
nop
pusha
cltd
insl
push
sub
loope
cmpsl
outsl
int
dec
dec
out
jp
cld
roll
out
and
fcompl
cs
nop
jnp
adc
outsl
xchg
enter
outsl
fcomip
insl
leave
je
das
xlat
fisttps
cmp
jg
imul
cmp
dec
jmp
scas
fwait
stos
jle
lret
jmp
dec
cltd
outsl
xor
into
or
scas
mov
mov
fiadds
pusha
bound
data16
ror
mov
mov
outsl
jb
and
repnz
outsl
add
mov
scas
xlat
inc
mov
mov
dec
shlb
movsb
mov
and
ret
das
outsl
dec
jnp
sbb
bound
imul
in
gs
ja
ficoms
pop
loope
lret
notb
add
call
jle
push
or
setnp
dec
sub
adc
movsb
push
into
cmp
sub
mov
call
sbb
popa
rol
into
in
dec
cs
shl
icebp
pop
loope
pop
xchg
fcomi
aas
inc
ret
cmp
outsl
adcb
out
dec
nop
sbb
aas
jbe
pop
in
jl
shrb
adc
or
mov
stos
push
xchg
lret
psrlw
dec
lds
jo
jb
add
sub
mov
test
jg
enter
xchg
scas
jg
out
add
out
je
loop
call
or
shlb
addr16
ja
or
repnz
stos
test
xchg
imul
loopne
ja
sub
aam
stc
lret
rorl
mov
stos
push
jo
sbb
pop
out
rcrb
pop
add
les
lret
add
mov
dec
movq
mov
mov
jge
add
mov
xchg
mov
xor
lods
lret
and
and
repz
xchg
lahf
outsb
imul
mov
jg
mov
cmpsl
pop
sub
xor
test
and
xchg
les
and
sub
sbb
mov
ret
negb
jge
sbb
outsl
shrb
out
cmp
repz
or
or
adc
gs
and
adc
outsb
dec
xor
fdivr
jmp
fwait
in
aam
cmp
inc
repz
xchg
outsb
pop
fucom
test
dec
cltd
lods
xchg
push
fstpt
xor
xor
int3
cmc
in
cmpl
adc
or
jbe
shll
jge
or
fisubs
outsl
leave
ret
sbb
pop
call
je
adc
sahf
clc
cs
pop
adc
cltd
jg
jb
mov
lret
dec
or
outsl
ds
cmc
popa
and
pop
aas
stos
adc
ss
notl
out
jg
or
sbb
sbb
adc
mov
cmpsl
bound
xorb
jae
jne
dec
lods
dec
push
adcl
cmpsb
dec
cmpsl
sbb
adc
iret
or
cmp
xor
adc
repnz
sahf
sarl
push
push
ret
push
xchg
or
xor
fisubl
cltd
lret
out
inc
xchg
pop
cwtl
nop
outsb
inc
mov
dec
in
mov
int3
mov
push
jmp
adcl
xchg
stos
leave
ljmp
push
in
mov
mov
jo
popa
sub
shrl
xor
loope
xchg
insl
in
hlt
jb
lcall
sub
pop
and
pop
dec
mov
dec
dec
out
pushl
sub
or
mov
lock
adc
icebp
aad
test
mov
in
aam
sbb
xchg
enter
mov
daa
das
iret
dec
sbb
mov
pop
ficompl
aam
cs
or
jns
lret
adc
loopne
ljmp
jl
aaa
or
sbb
sbb
out
jnp
and
mov
mov
es
data16
adc
iret
or
xchg
sub
clc
jns
mov
and
test
js
sbb
addr16
sahf
xchg
jle
loopne
imul
lret
addr16
adc
inc
nop
push
and
out
das
pushf
incb
mov
mov
lds
stos
and
in
sub
rcll
cs
jmp
mov
movsb
adc
mov
cs
xchg
ja,pn
or
xchg
cmp
jno
xchg
push
ret
add
jae
shlb
pop
in
jnp
jno
add
cmc
mov
es
outsl
mov
jo
xchg
add
mov
mov
and
sbb
aaa
aaa
and
jp
sub
cmpsl
in
jns
outsl
dec
pop
xchg
sub
test
mov
pop
ja
mov
cmp
arpl
dec
inc
std
inc
addr16
into
arpl
push
or
and
out
ljmp
sbb
jp
addl
addr16
ret
sti
mov
pop
push
adc
jne
cld
rorb
push
cmp
adc
adc
push
jle
je
cwtl
sbb
sbb
dec
in
cs
push
imul
push
pop
inc
or
test
test
push
add
jmp
movsb
mov
addl
push
pushf
push
repnz
outsl
loop
dec
out
hlt
je
cltd
leave
xchg
add
ror
ret
hlt
jmp
sahf
test
js
inc
sub
adc
scas
jge
adcl
sub
sysret
hlt
fiadds
scas
add
call
dec
inc
pushw
lods
adc
das
out
pusha
data16
into
jbe
sub
pushf
sbb
inc
rol
jo
loop
mov
aas
jg
cmp
js
in
mov
outsl
stc
push
jge
jne
movb
push
divb
bswap
cmp
js
jmp
mov
in
sar
dec
icebp
cmp
shll
mov
mov
adc
hlt
enter
loopne
lcall
cltd
or
enter
cmp
enter
outsb
mov
or
les
dec
std
mov
push
scas
jp
notb
int
jae
dec
xchg
xor
in
xchg
xor
test
pusha
repz
popa
into
out
or
xabort
and
or
into
repnz
and
sti
outsl
push
outsl
sahf
jecxz
stos
sub
aam
loopne
je
cmp
fsubl
sub
pop
xor
imul
jns
adc
pop
subb
sub
push
sub
lock
lods
and
fldenv
add
out
add
fcomps
fistl
js
dec
mov
leave
sbb
into
adc
mov
loopne
enter
push
xchg
iret
mov
sub
push
imul
pop
roll
call
shl
fsubl
mov
xchg
inc
inc
mov
xlat
sub
mov
adc
test
jo
ss
test
hlt
arpl
cmp
outsb
pusha
loop
xor
lods
dec
sub
xor
packuswb
cmp
mov
jb
push
insb
mov
pop
aaa
insl
adc
and
jg
loopne
push
lret
jg
icebp
dec
aaa
insl
lret
bound
outsb
sbb
dec
insb
je
sub
test
dec
mov
pop
dec
push
iret
int3
or
mov
insb
xchg
sub
lret
mov
testl
jmp
negb
ficomps
dec
in
rclb
scas
dec
pop
dec
iret
fmull
jle
out
push
sahf
rorb
in
lret
into
out
jo
sub
jo,pn
xor
add
sub
add
mov
xlat
daa
shr
pusha
into
clc
lock
push
push
push
pusha
dec
adc
cmp
inc
push
push
movsl
pusha
lea
scas
cmc
dec
das
xchg
std
into
outsl
add
adc
icebp
mov
sbb
dec
enter
inc
xchg
cld
xor
jo
cmpsl
mov
iret
iret
popl
popa
add
push
mov
cmp
mov
xor
aad
cmp
lret
adc
push
inc
nop
ds
into
push
in
inc
push
inc
jp
mov
fldl
mov
fwait
jns
idiv
and
sub
cmp
cltd
inc
int3
aam
jo
mov
call
dec
sub
dec
pop
dec
cmovge
sbb
push
mov
inc
cltd
push
cmc
movsl
cltd
mov
xor
add
jp
ljmp
stos
int3
adc
pop
imul
adc
mov
lret
pop
xor
call
into
mov
dec
sbb
imul
xchg
sub
jg
mov
dec
out
jmp
icebp
lcall
lret
pinsrw
xchg
xor
or
jae
adc
daa
daa
rorb
sbb
addr16
rolb
pusha
mov
push
sbbb
dec
mov
fdivs
pop
sbb
das
lcall
pusha
div
loopne
mov
inc
xchg
lcall
push
pusha
pop
adc
sbb
vmptrld
loop
and
ret
sbb
ds
outsl
mov
dec
jne
pop
xchg
or
insb
hlt
sub
leave
adcb
das
ja
enter
insb
push
pop
jecxz
xchg
adc
mov
dec
imul
mov
cli
loopne
add
bnd
pop
insb
pop
jle
pop
jb,pn
mov
or
je
pop
or
in
popf
mov
cmp
adc
dec
sbb
jle
jae
dec
pop
xchg
repnz
sub
popa
adc
stos
ret
leave
pusha
lcall
dec
stos
je
loope
inc
cmpsl
lcall
fwait
pop
std
sti
ds
aas
jmp
mov
inc
movsb
mov
jecxz
and
in
repz
and
arpl
pop
dec
mov
or
and
push
xchg
in
loop
sub
add
iret
mov
xchg
scas
pop
nop
into
and
pusha
nop
push
pop
jecxz
js
or
jo
in
jb
fcmovbe
in
adc
xchg
je
in
adc
jmp
inc
adc
push
push
mov
cmc
pop
in
pop
xchg
cli
std
inc
jg
jg
rorb
add
sbb
pop
popa
jp
push
push
insb
pop
and
mov
add
cmp
xor
fldenv
add
add
cli
xor
aaa
xchg
cltd
dec
jl
sbb
xchg
cwtl
sbb
jmp
aaa
xchg
orl
add
cmpsl
mov
aaa
orl
and
ret
sub
adc
je
lcall
repnz
sbb
xor
pop
out
lret
jmp
out
scas
movsl
repnz
popa
loopne
xor
stos
leave
popa
scas
in
push
pop
aaa
mov
and
mov
iret
ret
in
push
push
jmp
mov
add
mov
je
aad
adc
aad
cmp
pop
inc
jb
mov
push
subb
std
jo
mov
lcall
cmpl
fsubrl
test
cmp
cltd
mov
sbb
pop
mov
push
fstl
push
dec
sete
dec
scas
or
jle
xor
inc
dec
dec
out
sbb
cmpsb
xchg
and
xor
mov
lahf
add
push
pop
jb
outsl
repz
xchg
xchg
in
pop
pop
dec
sahf
push
xlat
das
repnz
push
cmp
pop
dec
sub
inc
in
lock
das
test
xor
rcrb
loop
mov
cmp
xor
xchg
adcl
js
pusha
and
fcom
roll
and
in
cmp
sub
xchg
inc
jmp
sub
mov
fs
mov
test
pop
lea
sbb
test
jne
sub
mov
out
outsb
call
cmc
dec
js
cwtl
dec
das
mov
mov
jo
cmp
adc
jmp
repnz
in
pop
jecxz
in
add
and
orl
mov
movsb
movsb
sub
in
xor
enter
sub
leave
cwtl
outsl
inc
icebp
xor
add
and
addr16
adc
repz
out
jo
pusha
push
adc
xchg
js
negb
movsl
out
movups
outsb
xchg
mov
loop
sbb
xchg
stos
mov
lea
lods
jge
mov
mov
nop
push
push
bound
mov
ret
add
insl
ljmp
in
lret
jae
in
mov
jb
xor
cmpl
scas
sub
adcl
pop
mov
jp
adc
je
cwtl
in
aad
cmp
cmpb
int3
add
jns
jle
divb
cmc
ftst
jbe
hlt
mov
imul
repnz
mov
push
pop
push
fstl
jb
fucomi
sbb
mov
or
addr16
pop
and
loop
add
jnp
outsb
adc
data16
cmpsb
test
pushf
call
imull
dec
adc
dec
lret
pop
dec
sub
ja
int3
fwait
dec
and
xchg
xor
cmp
fcoml
je
or
hlt
push
movsb
dec
jo
xor
inc
and
xchg
sbb
xor
je
inc
mov
cltd
repnz
loope
popa
ljmp
mov
dec
ljmp
test
jp
and
pop
inc
xchg
fisubrs
mov
adc
dec
push
dec
stos
outsl
in
aas
rol
in
out
inc
push
or
xchg
aaa
adc
sbb
out
xchg
pushf
ljmp
out
push
xchg
cmp
cmpsl
xchg
stos
push
and
subb
sub
sti
in
test
sub
adc
rclb
cmp
movsl
inc
jns
mov
and
adc
mov
sbb
fimuls
loop
jne
dec
lds
fmuls
inc
lds
mov
fcoml
and
mov
xor
test
daa
mov
mov
cmp
enter
pushf
or
test
ss
jmp
sub
sar
rcrb
adc
xchg
jne
push
adc
or
jb
mov
in
mov
je
sub
sbb
jne
sbb
adc
push
mov
outsl
cmp
pop
and
inc
cltd
bnd
xchg
aad
inc
sbb
test
sub
dec
xchg
mov
add
out
call
out
xor
fstpl
mov
sbb
jge
insb
inc
test
mov
sub
jecxz
sub
outsl
jl
pop
in
mov
sbb
adc
mov
jmp
int
lock
scas
shlb
lret
mov
aas
push
cmc
icebp
jle
xchg
jmp
and
sbb
and
pop
jg
xchg
sbbb
sarl
xchg
mov
ret
pushf
mov
mov
adc
loopne
adc
std
mov
test
sti
sub
in
insb
cmp
or
js
call
repnz
les
jb
mov
xor
adc
out
jb
cmp
inc
jo
inc
lret
adc
dec
shl
popa
adc
fmull
or
push
ret
sub
pop
es
dec
outsb
sbb
out
pop
mov
push
xor
mov
mov
push
lods
mov
xchg
loop
sbb
add
push
jnp
jae
adc
test
les
out
lds
mov
xchg
test
nop
data16
pop
cmp
add
mov
inc
inc
xchg
mov
daa
out
sub
fwait
pop
push
inc
cs
mov
callw
movsl
adc
jmp
xchg
ljmp
call
and
dec
cmp
inc
dec
jnp
xchg
enter
xchg
aaa
xchg
hlt
cmp
push
dec
insl
mov
testl
das
mov
jne
adcb
adc
dec
push
sub
in
xchg
pop
jecxz
and
cmp
or
jo
xor
sub
or
sub
xor
pusha
pushf
fistl
xor
in
decl
inc
pop
inc
mov
rorl
push
jg
popf
popf
mov
xchg
movsb
outsl
xor
dec
mov
dec
push
pusha
cmp
fisubrs
dec
inc
rcl
jo
mov
push
cld
inc
xchg
jl
repz
sub
aam
lods
das
call
data16
push
repz
stos
fldt
push
mov
push
mov
push
cmpsl
jae
sub
fbld
ret
cmp
sub
or
insl
push
xor
into
sahf
loope
mov
aad
repz
ja
rorl
ficomps
xor
inc
sbb
jmp
lahf
sub
mov
sbb
mov
out
imul
ds
mull
mov
iret
dec
enter
jnp
or
ret
loopne
es
xchg
push
les
in
pop
data16
int
pop
in
pop
pop
pop
xchg
negb
jo
sti
inc
cs
mov
es
push
call
inc
inc
push
in
sbb
push
out
push
cmp
addr16
in
mov
in
sub
mov
test
push
xchg
sub
insb
loopne
cltd
cmp
pop
sbb
ret
cmp
loope
outsb
out
or
mov
adc
mov
and
inc
fs
lret
or
scas
jge
je
fadds
test
jl
mov
cltd
fsubrs
repz
fiadds
adc
mov
scas
outsl
or
inc
cmpsb
enter
das
iret
jp,pn
jmp
lods
or
std
movsl
andl
pop
hlt
adc
pop
rclb
stos
jecxz
cmp
xor
das
push
xchg
sub
jae
push
xchg
loopnew
repnz
mov
stc
fwait
xchg
jmp
clc
call
mov
and
sub
pop
jge
je
cmp
adc
mov
repz
sbb
and
repz
jb
adc
dec
insl
and
in
pusha
jp
lea
or
xlat
lods
ja
mov
push
pusha
jp
fcmovu
bound
ljmp
push
call
subb
stos
mov
testb
jg
cwtl
inc
out
mov
out
pushl
jecxz
mov
int
push
pop
xchg
dec
ror
pop
int3
dec
mov
jle
out
push
sub
ljmp
movsl
jno
out
push
mov
lahf
imul
mov
out
cld
dec
mov
in
test
int3
dec
aad
mov
and
mov
dec
mov
outsb
pop
push
loope
outsb
cmp
lock
jns
sub
jmp
out
fs
pop
dec
mov
pop
imul
lock
loopne
push
xor
or
push
stos
mov
mov
mov
push
loopne
pop
mov
js
clc
cltd
or
loopne
gs
les
inc
lea
test
jb
dec
fmul
test
idiv
gs
dec
dec
jns
jo
sub
or
cmp
jp
push
call
pop
rcr
repnz
out
nop
clc
lds
pop
and
movsb
mov
push
aas
and
mov
cmpsb
out
outsl
stos
xchg
or
jge
clc
lret
mov
fbld
icebp
inc
inc
mov
xor
lods
insb
lret
sub
int3
mov
clc
jle
lods
inc
lds
loope
shr
adc
push
lret
mov
inc
jle
xchg
lock
mov
jge
in
imul
hlt
or
cli
mov
cwtl
outsl
xchg
or
jo
pushl
lods
jb
fmuls
xchg
mov
mov
ret
push
jmp
or
clc
outsl
sub
ret
cmp
xchg
insl
sahf
cmp
fistpll
sbb
shrb
jbe
loope
push
sbbl
scas
push
movsl
xchg
sarb
stos
inc
mov
jne
loope
aad
push
sub
xchg
leave
inc
jmp
xor
jl
or
lock
test
jnp
jo
push
jae
push
or
ffree
std
jns
inc
mov
loop
inc
loope
xor
arpl
out
mov
imul
xchg
mov
fs
jmp
sub
mov
shrl
sti
arpl
es
mov
incb
mov
inc
sahf
loop
push
or
inc
dec
jb
mov
dec
cmpsl
int3
mov
inc
jb
hlt
xor
loopne
mov
mov
bound
mov
in
push
repnz
in
in
cmpsl
ja
test
loop
and
lock
sarb
sbb
leave
mov
push
inc
xchg
cmp
ljmp
ret
lcall
cmp
outsl
dec
popa
inc
dec
aas
xor
pop
shrl
loopne
fs
stos
mov
call
jo
jg
imul
xor
dec
rorl
add
mov
loope
dec
in
dec
sub
push
and
and
pop
arpl
mov
jg
pop
xor
in
sbb
fldcw
sar
lret
and
repnz
push
fimull
orl
jbe
notb
xchg
cmp
jb
sub
jo
sub
imul
test
mov
xor
jno
je
stos
roll
and
das
inc
sub
xchg
in
push
cld
js
cmc
iret
push
jmp
lock
andl
lock
xor
in
sub
in
imul
in
scas
jne
out
das
mov
out
fstps
rclb
lahf
insb
cli
inc
xchg
pop
cltd
mov
nop
dec
lds
aas
add
inc
call
int
jg
scas
jns
adc
iret
test
xor
add
das
push
repnz
lods
push
mov
mov
data16
arpl
cld
dec
and
jne
je
ds
faddp
filds
movsl
into
dec
and
xor
xchg
pop
ret
lret
adc
or
adc
sbb
outsl
pop
fmuls
pusha
movsl
scas
and
lods
pop
cli
sbb
inc
imul
jbe
movsl
adc
sbb
jne
notb
sub
inc
push
je
scas
dec
inc
aad
out
addr16
iret
icebp
and
add
mov
mov
pop
push
repnz
divb
or
mov
xor
stos
jnp
push
jl
cmp
push
daa
cs
fldt
mov
mov
mov
testl
aaa
or
mov
xor
sub
mov
dec
push
push
sub
push
or
pop
sub
shr
fnop
push
push
cmp
xchg
dec
sbbl
out
fistpl
cmp
cmc
sub
dec
shll
repz
sysenter
mov
insl
cmp
imul
push
mov
push
jae
mov
outsb
sub
stos
adc
outsb
imul
mulb
stos
ss
cs
test
mov
and
add
pop
push
add
aad
aad
push
les
out
fiaddl
push
adc
push
xor
cs
jns
ret
xor
nop
mov
in
dec
cmp
int3
adc
ljmp
dec
jg
stos
popa
dec
cwtl
je
pop
fnsave
mov
lret
shl
add
je
sar
jae
sub
cmpsl
in
vpsllw
push
xchg
dec
lcall
je
imul
or
mov
inc
xchg
push
push
cmp
mov
xchg
sbbb
adc
jns
adc
mulb
mov
loopne
sbbb
cli
sbb
adc
pusha
addr16
add
dec
mov
mov
fsubrs
lock
adc
and
shl
jb
jbe
shl
sbb
into
jne
iret
cmp
jo
outsl
cmp
and
xchg
sub
inc
test
mov
leave
and
cltd
or
inc
into
mov
sub
push
mov
mov
data16
scas
pop
mov
ja
insl
sub
sbb
popa
jmp
xchg
insb
pop
xchg
cld
adc
in
jbe
dec
or
sub
popl
frstor
dec
lea
lock
push
add
iret
push
xor
mov
aam
imul
pop
rcl
data16
cmp
add
mov
adc
das
xor
xchg
fcomip
sub
xorl
push
shll
out
loope
or
jmp
mov
cs
lods
or
cmp
js
ficoml
out
test
pushf
loopne
pop
cld
out
adc
pop
adc
sub
add
aam
daa
xchg
xchg
inc
es
sub
pop
or
jo
push
sub
mov
adc
jg
cmp
mov
sbb
mov
inc
je
or
adc
xor
enter
or
test
lahf
int
icebp
pop
push
xor
ficoms
or
out
pop
mov
out
jno
je
adc
jecxz
lock
inc
cs
xchg
sub
push
sub
add
sub
adcl
jo
je
push
aad
call
or
fwait
notb
inc
jge
dec
out
push
add
push
mov
imul
int3
jle
je
lahf
jp
shlb
fwait
sbb
imul
out
or
popa
lahf
outsb
aas
je
repnz
insl
dec
or
outsl
pusha
inc
outsb
out
outsl
loopne
repnz
and
lcall
insb
mov
ds
dec
jl
lahf
xor
scas
in
push
mov
out
fidivrs
mov
xor
sub
push
rcrl
xor
xchg
sub
xor
inc
enter
pop
ljmp
sub
mov
dec
aas
das
dec
insb
stos
inc
data16
outsl
xchg
mov
or
cmc
sbb
adc
lds
sbb
add
popw
dec
jecxz
or
das
add
data16
aaa
int
jle
adc
movsb
or
into
lock
adc
and
jnp
adc
out
shrb
pop
push
popf
in
xor
in
sub
in
mov
insl
xor
mov
jnp
pop
cmpsb
xchg
fwait
lcall
out
loopne
outsb
je
inc
repz
push
pusha
sbb
push
push
aas
clc
xor
jae
xchg
xchg
mov
dec
pusha
imul
or
test
enter
jnp
sub
or
or
dec
or
sub
nop
dec
outsl
dec
rcll
push
xor
lock
pop
dec
test
sbb
shl
dec
sahf
and
ror
out
das
imul
jno
pop
cmp
lock
insl
jg
and
icebp
cld
or
test
sahf
inc
or
or
popa
hlt
sbb
sub
arpl
mov
neg
jb
out
lock
push
and
cmp
das
lock
bound
adc
add
das
push
insb
and
testb
jb
aas
adc
jmp
sbb
push
xor
sub
inc
call
pop
push
and
stos
or
jle
jle
in
inc
es
imul
dec
mov
dec
sub
hlt
int3
out
divb
insb
scas
cmp
cltd
pop
int
aas
add
or
jae
fnstsw
sti
mov
test
ficoms
or
jmp
mov
in
mov
jne
sub
scas
jle
test
sbb
mov
in
fnstcw
imul
enter
lret
fidivs
cltd
inc
icebp
push
data16
push
jl
jecxz
xor
inc
addr16
push
mov
dec
fsubp
push
mov
sarb
js
aaa
add
add
cmpsb
jle
cwtl
mov
cmp
sbb
push
in
mov
jb
pop
lret
out
scas
hlt
inc
jbe
jle
out
out
mov
cmpsl
das
xchg
sub
negl
xchg
pop
and
loop
xchg
jo
dec
adc
mov
cmp
jecxz
inc
in
loope
dec
cld
lahf
and
xchg
ss
lds
or
cmpsl
cmp
scas
outsl
mov
mov
jne
out
filds
jne
loop
ss
and
nop
lock
cmpsl
in
jl
subl
loop
dec
jle
mov
xchg
dec
jmp
in
cmpsb
in
sbb
cmc
mov
ret
enter
pop
insb
add
adc
leave
insb
cmp
jle
mov
inc
and
and
ljmp
push
lock
inc
push
cmp
loope
mov
imul
push
inc
icebp
push
data16
pushf
jns
insb
inc
jmp
lock
or
repz
sti
jnp
movsl
insl
cmpsl
lea
repz
jle
je
test
shlb
sub
ja
test
ror
ret
repz
dec
cs
imul
call
xchg
or
daa
pop
push
outsl
or
pushf
addl
insl
loop
lock
idiv
loope
jo
cltd
adc
pop
leave
jo
sub
test
jge
push
push
adc
pop
outsl
lods
nop
jo
lea
cmpb
popa
leave
mov
xor
push
and
jp
and
ljmp
or
jne
lret
or
cmpsl
push
les
add
jae
das
std
cmc
pop
add
jo
in
push
adc
popa
cltd
push
jg
mov
xor
push
jno
imul
cmp
out
je
cmp
adc
add
imul
jnp
imul
cwtl
pop
and
inc
out
mov
add
xchg
fisttps
inc
push
jmp
jp
orb
sub
dec
nop
xor
subb
out
inc
jne
out
cld
imul
call
mov
std
or
in
jg
dec
push
dec
jne
or
pop
or
out
outsl
call
std
jle
in
pop
mov
lret
jg
jg
stos
pop
mov
mov
mov
iret
sub
dec
in
sub
in
imul
insb
lahf
clc
and
mov
notb
pusha
lods
out
push
scas
addr16
movsb
lahf
sub
cmpsl
cmpsl
dec
sub
outsl
push
filds
and
ret
xor
add
xchg
or
or
jl
mov
clc
cmp
jecxz
dec
mov
jecxz
pusha
clc
outsl
cmc
push
mov
sub
push
lods
jae
dec
or
push
xor
sub
scas
fucomi
pop
shrb
das
mov
jecxz
inc
cld
or
fs
sub
dec
or
mov
adc
enter
dec
lods
cmpsl
xor
shll
shlb
inc
xor
lea
push
jge
rolb
das
sbb
cmp
fs
or
mov
or
push
into
jecxz
test
fs
mov
and
iret
sub
shrb
dec
mov
call
std
cmpsl
fldenv
lcall
dec
js
pop
fisubrl
out
or
sbb
dec
stos
shl
xor
mov
andb
sbb
scas
insl
das
sub
aas
ret
lods
insl
dec
sbb
rolb
mov
daa
filds
test
out
ficoms
test
je
gs
sub
std
adc
xor
adc
sub
push
mov
xor
movsb
cmpsl
mov
dec
aad
fisubs
push
mov
cli
lea
je
stc
insl
loop
inc
xchg
in
push
fs
aad
pop
test
fwait
push
push
ret
mov
mov
jae
xchg
xchg
test
push
xchg
mov
out
xor
jp
cli
xchg
imul
pop
push
jge
dec
addr16
jbe
sbb
cmc
dec
fucomip
addr16
mov
mov
mov
icebp
or
cmc
insl
movsl
jne
hlt
cmp
or
test
sub
or
test
adc
addr16
adc
jle
pusha
jnp
addr16
cs
sub
popl
sbb
inc
or
je
dec
lea
outsl
in
test
hlt
cld
call
pusha
sbb
stc
das
adc
jmp
dec
outsl
push
add
enter
andl
push
fildll
arpl
sub
push
mov
out
in
cmc
and
setno
out
subb
outsb
cld
sub
roll
sub
push
loop
dec
mov
lock
xchg
mov
fwait
lret
mov
shrb
in
jo
loopne
in
in
xor
xor
pop
mov
outsb
cmp
sbb
and
xorb
push
and
xchg
outsl
dec
sub
adc
push
mov
lcall
into
lock
cmp
mov
sub
rorl
notl
inc
test
cmp
mov
out
jle
inc
xor
dec
dec
stos
sbb
or
adc
insl
sbb
mov
jecxz
imul
test
add
xrelease
mov
cmpsb
lock
ret
push
je
cmp
test
rcr
sbbl
xor
sbb
mov
nop
xchg
xor
push
lea
sbb
inc
insb
or
leave
icebp
and
fbld
stos
pop
lea
pop
sub
or
xor
sbb
data16
into
in
sahf
inc
pop
rcrb
out
adc
sub
mov
mov
andl
in
int3
xchg
push
or
sub
fwait
out
and
loop
and
xor
call
lods
cmc
pop
int
dec
or
xlat
mov
test
add
into
pop
sbb
inc
into
js
out
pop
jne
cmp
inc
into
ljmp
inc
inc
xchg
push
in
pop
out
fistpll
mov
bound
pop
adc
loopne
sbb
loop
scas
in
sub
inc
je
add
dec
outsl
insl
out
dec
inc
adc
xchg
pop
adc
addr16
cmp
dec
ja
sub
dec
stc
out
roll
je
addl
jg
push
mov
dec
repnz
cmpl
popa
testb
clc
cs
jmp
in
sbb
pop
into
xor
sub
hlt
lahf
js
in
lret
test
xchg
jle
jne
mov
xchg
jne
xchg
xor
aaa
mov
adc
mov
xor
ret
pop
movsl
sbb
in
test
mov
push
mov
out
xchg
push
addr16
out
push
out
nop
out
and
les
sub
fs
testb
cmpsl
jg
mov
pop
shl
inc
add
aas
fwait
push
repz
popf
cmpsb
push
push
icebp
outsl
cmp
push
dec
stos
mov
loope
loopne
lock
dec
jae
into
sub
mov
orb
out
sahf
push
dec
sbb
jbe
sarb
hlt
mov
fisttps
sub
loopne
xchg
mov
out
pop
jmp
addr16
iret
dec
frstor
jnp
loop
sahf
icebp
cmp
jnp
scas
test
mov
jno
jns
inc
fldt
inc
push
sub
je
cmp
push
adc
scas
mov
mov
scas
mov
mov
ficoml
andb
call
addr16
ucomiss
bound
test
push
movsb
test
scas
outsl
push
fmull
mov
out
enter
xchg
das
dec
lds
maskmovq
divl
xchg
cmc
push
or
inc
jo
in
pop
loopne
out
fwait
out
pop
cltd
jo
xor
lcall
out
scas
stos
and
lret
xor
or
iret
or
lods
sarb
or
jecxz
inc
rcr
cmpsb
jmp
xchg
jle
int
in
js
or
maskmovq
xor
xor
movmskps
sub
out
dec
test
inc
pop
add
inc
mov
xchg
xchg
pop
shrb
mov
out
add
sbb
dec
pop
clc
push
in
push
fimuls
movsl
mov
jno
or
push
call
adc
pop
ljmp
push
push
pusha
xor
out
fldcw
pop
jno
lea
mov
push
ffree
insl
in
jp
outsb
mov
mov
popf
test
dec
or
sub
cmp
sub
in
es
call
ret
nop
movl
jg
dec
fsubl
sub
sub
stc
xor
push
jnp
xor
call
push
push
cmpsl
andl
int3
in
xor
adc
and
add
hlt
ret
leave
pop
loop
enter
jecxz
sub
pushf
popf
dec
mov
dec
int
bound
mul
rclb
xor
inc
adc
inc
outsb
gs
into
jge
pop
idivb
add
pop
adc
movsb
fidivrs
sbb
sbb
cmpsb
dec
and
in
sub
outsl
shr
sti
sbb
jg
ljmp
push
push
jo
sti
dec
xor
adc
jecxz
outsb
push
sbb
out
repnz
and
fcoms
cmc
bound
xchg
or
popa
loopne
popa
adc
popa
loop
jmp
or
ret
fs
in
mov
inc
sub
sbb
xorb
sbb
test
jmp
gs
sar
ficompl
jns
arpl
cld
push
sub
push
mov
and
mov
pop
mov
push
scas
aas
in
push
dec
outsb
pushf
daa
push
js
and
add
cwtl
mov
sbb
xchg
outsl
sub
notl
out
xor
clc
pop
je
lds
sub
rcrb
push
add
push
dec
test
cmp
aas
adc
shl
adc
int3
rcl
test
jmp
xor
aaa
ja
fxam
sbb
arpl
int
icebp
loopne
add
mov
repz
cmp
cmp
sahf
jnp
sub
scas
fidivrs
xor
dec
xchg
mov
sub
push
cmp
fcomip
mov
movsl
sbb
loop
jmp
movsl
mov
loope
pop
lcall
adc
gs
sarb
or
add
push
sub
aas
cmpsb
jg
fs
push
outsl
mov
addr16
mov
into
int
das
repnz
call
push
stos
sahf
js
xor
scas
pop
cmp
jg
je
sbb
test
loopne
or
out
mov
xor
jl
jo
es
xor
ja
xchg
lret
loop
out
lods
cld
mov
mov
adc
test
or
outsl
sahf
sarl
ret
dec
or
or
push
es
or
sbb
jl
mov
adc
push
pop
sbb
lods
stos
outsl
rolb
mov
sub
jnp
in
jno
add
mov
push
mov
sub
arpl
add
push
js
pop
sbb
sub
cwtl
insl
jl
xor
jns
cli
je
ljmp
loopne
dec
mov
in
outsb
loope
or
cmp
cli
cmp
cmc
cmpsb
sti
sub
fidivs
daa
outsl
mov
dec
inc
add
cmc
ret
dec
lahf
push
imul
mov
das
notb
fs
fbld
lods
push
sub
and
subl
loope
lret
insl
sub
pop
mov
in
repz
insl
add
pop
nopl
cltd
push
add
in
dec
js
insb
add
fdiv
xchg
mov
mov
inc
ja
hlt
flds
cld
mov
and
sub
movsl
cmp
sub
je
or
or
cmp
les
push
inc
fisubrs
je
jge
in
cld
inc
je
add
sbb
icebp
je
fsubrs
insl
adc
jg
subb
pushl
dec
push
aas
sub
adc
int
dec
xchg
sub
sub
inc
pusha
dec
movsb
mov
addr16
ret
cmc
int3
jl
push
aaa
push
out
sub
lods
adc
jb
fdivp
out
je
dec
and
mov
pop
in
pcmpeqb
scas
out
cmp
push
sub
out
shlb
jmp
dec
adc
ds
aam
dec
pop
jmp
mov
repnz
mov
or
cltd
call
addr16
rorb
scas
out
jecxz
movd
jmp
insl
pop
outsl
xcrypt-ctr
cmpsl
sbb
lods
mov
or
xor
push
inc
cmp
flds
adc
xchg
in
gs
stos
orb
rorb
scas
and
stos
stc
pop
cld
ja
pop
fs
pusha
fnstcw
dec
push
ret
pop
push
xor
call
sub
sub
fbld
mov
outsb
pop
lock
add
or
jae
or
out
cmp
das
pusha
inc
or
push
cmpsb
add
and
jnp
lock
pop
mov
movsl
or
lahf
mov
jb
pop
gs
mov
pop
test
repz
popa
dec
jae
xor
mov
dec
shll
insb
jbe
and
dec
notl
outsl
mov
pusha
notl
adc
pop
outsl
sub
inc
cld
or
loopne
mov
call
stos
enter
je
add
cmp
addr16
loop
cmp
orb
shr
or
in
loopne
fsubrs
repnz
jno
or
jmp
sbb
aaa
mov
inc
popa
int
adc
arpl
outsb
aas
xchg
insb
pop
clc
push
in
sbb
sbb
je
pop
sahf
jno
movsl
incl
arpl
push
call
in
push
scas
mov
lret
add
adc
in
dec
pushf
dec
xchg
std
cmp
mov
cwtl
sbb
cmp
dec
jmp
jg
movsl
inc
cmp
je
dec
fidivrl
leave
int3
rcl
or
sub
mov
pusha
clc
push
xor
addr16
pop
pushf
test
dec
xor
adcl
imul
lret
lods
scas
mov
das
loopne
or
mov
mov
jg
sub
faddp
xchg
js
mov
pop
lcall
push
dec
cmpsb
adc
mov
mov
mov
sahf
jmp
inc
cli
out
jb
aam
push
std
xchg
jb
push
xchg
jmp
dec
xchg
jo
mov
repnz
ds
sar
addr16
decl
fwait
sub
jne
jo
int
sub
adc
jge
imul
cs
arpl
ljmp
repz
cltd
push
lret
stc
xchg
fmuls
and
icebp
std
jb
jl
push
je
decb
repnz
sahf
jge
cmpsb
xchg
dec
imul
rol
jne
shl
fs
push
test
sbb
jo
or
push
dec
inc
dec
movsl
pop
push
adc
aad
in
sahf
push
loopne
mov
jbe
aaa
push
mov
sahf
loop
pop
out
in
je
add
push
sub
adc
pop
cmp
lret
sub
push
je
out
pop
and
cmp
cmovg
jmp
cmpsl
cwtl
xor
stos
mov
xchg
js
xchg
mov
aas
xor
xchg
dec
test
js
dec
insb
xor
cs
jb
repz
mov
stos
lods
mov
fdivrs
jp
xor
mov
insl
popa
push
loop
loopne
xor
popa
out
scas
insb
lret
test
pop
out
lock
lock
aas
test
xchg
outsl
sub
dec
dec
jle
addr16
mov
pop
mov
and
and
mov
mov
jg
aas
push
imull
loopne
sub
adc
aas
jl
mov
fisttpll
andl
scas
pop
dec
mov
jg
test
shrb
gs
dec
sti
icebp
push
mov
into
je
mov
imul
adc
add
js
sub
cmp
jns
xor
push
das
loop
sub
mov
outsl
cwtl
adc
aad
scas
push
lods
ljmp
jb
mov
je
lret
incl
lds
outsl
inc
loopne
or
das
and
mov
fbld
inc
or
fmul
jnp
cmp
xchg
out
out
lret
mov
jne
gs
mov
scas
lods
and
pop
orb
cwtl
das
fcoms
out
or
repnz
push
adc
shrb
outsb
xchg
or
jns
daa
les
idivb
cmp
aas
int3
gs
pop
pusha
sub
push
push
imul
out
adc
adc
inc
or
mov
inc
adc
cmpsb
je
xor
sti
movsl
in
in
adc
mov
int3
pop
lods
adc
inc
das
rclb
fs
call
stos
and
imul
insl
or
jo
adc
shll
out
xchg
mov
dec
push
out
sahf
sub
lods
lds
das
in
jmp
jae
shrl
loope
or
enter
fwait
mov
divb
jns
jmp
xchg
mov
std
ret
jge
dec
insb
sbb
jae
xchg
icebp
dec
cmp
push
bound
sti
pop
imul
loop
add
test
xor
or
push
imul
mov
aas
imul
lcall
outsl
cmpsb
fisttps
out
inc
jae
adc
popa
jns
push
jmp
in
adc
dec
jbe
lret
sbb
add
dec
ja
and
call
dec
inc
stos
testb
outsl
sub
adc
lds
out
jg
pop
out
pop
sub
cmp
jle
loopne
out
jo
je
xchg
dec
mov
jl
clc
inc
or
orb
stos
pop
mull
outsb
or
out
das
add
cli
cmp
je
jnp
and
adc
push
cmp
xchg
sub
add
cmp
filds
fadds
sub
ja
out
les
ja
stc
or
sub
jb
cwtl
lock
pop
jb
and
lcall
iret
xchg
ret
cli
xchg
stos
xchg
ret
push
mov
dec
adc
dec
scas
scas
or
sarb
inc
test
or
outsl
enter
ret
adc
jg
inc
inc
cmpsl
jmp
and
ja
or
insl
mov
insb
sub
sub
xor
dec
call
pop
out
outsl
ljmp
call
pop
outsb
outsl
jnp
or
popa
pop
enter
stos
call
add
inc
mov
xor
bound
mov
add
imul
fsubrl
rorb
and
into
fs
int3
pop
out
iret
outsl
insb
xchg
lods
call
jp
mov
ffree
mov
or
insb
fs
shl
cmp
jecxz
enter
adc
and
in
in
fs
mov
sbb
mov
imul
xor
or
or
leave
sti
add
roll
dec
mov
outsl
xchg
iret
sti
jl
out
mov
daa
xor
out
aam
pop
addr16
pop
jo
mov
lds
out
popa
dec
xor
pusha
aas
xchg
push
sub
push
inc
pop
fs
das
cmp
pop
lock
mov
jae
scas
or
out
repnz
icebp
div
push
mov
cmpsb
ja
shll
fmul
or
out
dec
data16
and
enter
push
and
inc
sbb
add
push
test
jmp
or
mov
dec
xorb
js
hlt
and
add
in
sarl
gs
hlt
and
in
les
pop
fs
hlt
and
add
jecxz
ret
mov
pop
addr16
hlt
daa
and
or
and
dec
cmpsb
in
xchg
pop
es
hlt
in
lds
in
test
pop
sub
hlt
call
in
mov
pop
sub
hlt
out
dec
cmpsl
in
xchg
pop
sub
hlt
ljmp
mov
pop
sub
hlt
jmp
in
mov
pop
sub
and
dec
lods
in
mov
pop
sub
or
jmp
lret
dec
stos
in
mov
pop
das
js
mov
in
pushf
cwtl
loopne
hlt
pusha
jecxz
inc
jmp
lret
in
or
or
orl
push
sbb
movsl
std
addr16
ljmp
int
das
enter
test
xor
xor
jg
daa
lret
dec
test
in
jb
mov
mov
push
push
and
fucomi
bound
sub
sbb
xchg
cmp
lock
popa
or
xchg
push
jp
insl
aaa
mov
adc
ja
out
aad
xor
mov
lcall
cmp
daa
pop
popa
xchg
sub
jg
lds
arpl
cltd
imul
shlb
cltd
sub
outsl
mov
xor
sbb
mov
mov
jp
mov
mov
jbe
ljmp
jo
fsubl
pusha
mov
add
cmp
pop
aad
popa
fisubs
or
and
xorl
push
inc
shlb
icebp
jo
and
inc
and
loope
lds
sahf
inc
das
jns
je
in
ficomps
mov
cmp
ret
pop
push
sahf
add
shlb
cltd
jp
nop
mov
xchg
or
xor
xchg
lea
push
loop
xor
dec
cmp
push
jge
test
inc
and
mov
fisubrs
loopne
add
mov
stc
cs
ret
rep
fiadds
fdivl
push
pop
xchg
push
clc
mov
ds
lds
sbb
movsb
insl
ret
add
mov
pop
imul
stos
add
fs
xor
xchg
pusha
jmp
sub
das
mov
clc
adc
faddl
js
fdivrs
sahf
sarl
adc
dec
mov
mov
cmp
out
subl
inc
leave
pop
mov
push
icebp
fistpll
enter
out
outsb
lcall
push
cmp
cltd
pop
cwtl
das
sarb
inc
push
cmpsl
xor
sub
fbld
or
xor
pop
flds
lcall
sub
or
mov
js
idivb
fldl
cmpsb
cmpsb
in
xor
fdivrs
adc
nop
in
in
in
es
pushf
jecxz
jb
insl
popa
adc
addr16
movsb
cmp
mov
pop
lcall
in
rcrl
popf
pop
mov
in
pusha
xor
js
ljmp
loope
or
clc
or
or
jns
push
mov
or
lock
sub
dec
cld
insb
push
cmc
xchg
imul
mull
and
arpl
into
or
push
pop
or
mov
insl
pop
adc
imul
loop,pn
inc
mov
es
in
adc
push
movsb
arpl
les
ret
push
xchg
out
sbb
jle
pop
fwait
scas
mov
jo
cwtl
add
xchg
push
call
jg
dec
push
out
outsb
or
add
and
aaa
arpl
fwait
xor
mov
movsb
add
jecxz
scas
dec
out
jnp
in
das
xchg
pop
sbb
nop
and
add
arpl
mov
insb
add
dec
pop
imul
out
les
jo
repnz
arpl
mov
call
xchg
cmp
push
iret
out
out
sarb
fsubrs
iret
outsl
lahf
enter
test
out
adc
sbb
dec
dec
push
mov
lret
xor
bound
adc
mov
cld
adc
addr16
fstpl
stc
stos
dec
xchg
add
cmpsl
xorl
mov
ret
fsubrs
push
addr16
xor
test
jp
leave
pop
ds
out
int
pop
loopne
decl
mov
nop
out
xor
int3
adc
dec
xor
sbb
pop
clc
ljmp
ret
test
leave
in
and
movsb
out
outsl
push
and
xor
test
pop
les
scas
test
and
dec
sub
lods
and
ret
bswap
out
cmpsl
push
jb
bound
daa
test
out
mov
mov
xchg
in
sbb
rcll
mov
add
icebp
jmp
gs
nop
into
hlt
insl
shl
dec
and
out
inc
daa
dec
xchg
xor
adc
lods
pushf
add
jno
or
add
mov
or
jg
clc
xor
icebp
jmp
xor
xor
in
lods
sti
mov
testb
sub
scas
out
data16
cli
sub
insl
jl
mov
jae
rolb
cld
adc
imul
cmp
aaa
add
imul
push
push
xchg
sbb
jp
sub
rclb
outsb
shlb
out
leave
pop
push
push
aaa
cli
insl
jnp
scas
mov
les
cmpsl
gs
cwtl
outsb
in
fsubl
popf
mov
inc
gs
and
pop
push
add
add
xlat
shl
add
xlat
sbb
mov
jle
or
cmc
cmpl
nop
mov
pop
imul
in
in
jge
pusha
test
icebp
mov
fildll
addr16
fcmovne
testb
in
imulb
xchg
adc
xchg
adc
ffree
inc
ljmp
lock
add
in
aaa
and
mov
mov
xor
xchg
or
imul
dec
adc
gs
das
jecxz
loope
dec
lahf
cmp
enter
inc
orb
mov
or
pop
nop
iret
and
xor
xor
outsb
loopne
inc
pushl
in
mov
outsl
cmp
js
negl
jl
imul
cli
into
out
cmp
data16
clc
in
cli
mov
ja
lock
out
inc
jne
add
imul
pop
push
popa
daa
mov
push
es
rorb
js
xchg
lret
scas
pop
imull
inc
jo
rcrb
jb
clc
push
push
jl
pop
push
test
mov
fadds
pop
daa
cmp
in
scas
adc
addl
pop
sub
cmc
sbb
arpl
in
imulw
nop
adc
ret
into
jo
enter
das
jmp
imul
adc
and
inc
arpl
clc
fmuls
call
xchg
cli
cmp
daa
inc
in
andb
sub
das
push
daa
adc
xor
movl
cmp
imul
cmp
jg
cmc
addl
lock
sbb
iret
or
aam
and
jecxz
push
push
shll
adc
xchg
ja
rclb
sub
outsb
sbb
and
popa
push
cmp
mov
call
dec
loop
pop
addr16
enter
repnz
icebp
dec
mov
and
jae
outsl
incb
sub
in
aam
sub
jo,pt
lock
sbb
jle
in
mov
out
out
repz
push
dec
clc
imul
insl
dec
cld
xor
pop
dec
jo
push
jle
mov
sub
aam
shlb
xchg
dec
cmp
mov
clc
ret
inc
imul
fistpl
pop
fimull
push
das
lret
in
lret
je
es
sti
jp
int
std
out
clc
dec
in
test
or
jmp
xchg
in
fisttpl
push
push
aas
push
out
xor
mov
lret
xor
sub
and
push
imul
outsb
das
bound
outsb
pushf
into
test
addr16
outsl
in
push
xchg
and
jns
out
les
jmp
inc
mov
push
js
into
nop
into
xor
cs
test
xchg
imul
push
sub
pop
xor
ret
repz
into
jg
repz
dec
hlt
test
leave
aas
jp
cld
repnz
scas
fcoml
jae
and
call
call
loopne
sub
test
xchg
jg
push
jle
jo
add
pop
dec
in
pusha
dec
jbe
jo
popf
lods
in
repnz
and
xor
mov
frstor
jo
sbb
bound
lret
clc
call
decb
xchg
sub
enter
mov
loop
call
in
push
cld
jne
loop
ret
stc
cld
inc
ljmp
jl
jmp
sbb
test
outsl
jo
sub
outsl
jmp
imul
call
jp
add
lds
mov
push
loopne
mov
in
cltd
insl
xchg
jae
mov
push
out
pop
loopne
loopne
imul
iret
clc
ljmp
sub
outsb
out
pusha
addr16
popa
push
xor
push
dec
add
loope
in
jae
in
dec
ljmp
out
call
add
imul
jne
push
iret
pop
xor
ds
jmp
ja
adc
sti
je
loope
push
jg
outsb
dec
sarb
outsb
call
and
jne
or
call
pusha
mov
jecxz
out
in
loop,pn
push
in
int3
call
das
jge
and
xchg
adc
pop
mov
in
cmc
sbb
lds
xchg
ret
addr16
and
cmp
movsb
pop
imul
ret
mov
cmp
inc
mov
rorb
pop
push
ds
push
inc
pusha
push
xor
push
adc
push
inc
cmpsl
dec
pop
xor
push
or
call
call
cmp
inc
mov
gs
inc
xchg
push
jae
xchg
xlat
into
test
xor
cmp
in
popf
mov
mov
or
ret
push
gs
je
sub
in
addr16
mov
out
lods
imul
popf
jge
mov
outsl
mov
call
les
sub
dec
add
es
push
mov
insb
outsb
push
cmpsl
sbb
sbb
xchg
icebp
mov
loop
cmpsb
xchg
loopne
fcompl
push
xchg
imulb
pop
hlt
dec
repz
call
aad
mov
fnstcw
pushf
insb
sti
adc
ret
xchg
loop
or
mov
or
adc
pop
mov
or
or
mov
inc
cmpsl
stc
pop
clc
sbb
ret
adc
xchg
xchg
mov
in
fcompp
xor
repnz
loopne
mov
adc
add
outsl
dec
dec
stos
pop
loopne
push
orl
xor
rorl
pop
inc
xchg
sub
jle
sti
fmull
shrl
sub
mov
pushf
xor
sar
jne
sarb
adc
loope
push
add
mov
pop
loopne
and
nop
xchg
or
and
mov
je
fcompl
or
jecxz
or
jg
mov
or
dec
xchg
out
adc
mov
repnz
addb
out
xor
adc
mov
aaa
aaa
jne
popa
mov
sahf
adc
dec
mov
std
xor
dec
xchg
lret
sub
lods
push
pusha
sbb
lcall
shll
xchg
sub
adcl
jle
cmpsl
dec
adc
xlat
ljmp
sahf
scas
dec
mov
out
stos
cld
sub
sar
rorb
jo
xor
mov
decl
add
adc
arpl
add
and
pop
in
nop
mov
into
mov
inc
mov
lea
inc
cmc
inc
dec
call
arpl
mov
loope
insb
out
loop
pushf
outsl
sub
ljmp
and
cmpsb
sub
out
ret
std
ljmp
pop
ret
push
popf
test
lock
dec
into
inc
ret
cld
jb
pop
adc
imul
inc
shrb
out
pop
add
aas
test
inc
ret
mov
dec
push
mov
jp
push
inc
loop
dec
sub
mov
or
jb
imul
inc
xchg
add
cmp
xor
sub
sbb
imul
mov
repz
push
push
sub
adc
popf
ret
imul
outsb
ja
mov
in
mov
inc
in
addr16
ja
dec
pushf
insl
std
dec
icebp
pop
sub
inc
inc
sbb
and
ljmp
mov
dec
out
clc
outsl
stos
push
pushf
inc
cli
ret
push
jmp
into
in
in
lock
jo
pop
movsb
subl
cmp
jns
mov
cwtl
mov
imulb
dec
inc
lods
lock
mov
outsb
je
push
cmpsl
lret
insl
dec
pop
sbb
int3
scas
ss
mov
sub
jp
imul
fwait
insb
cmp
mov
loopne
loope
outsb
xchg
xchg
arpl
adc
aam
mov
dec
pusha
and
mov
add
cmp
repnz
outsl
outsb
mov
mov
clc
out
jo
test
popa
sbb
je
xchg
addr16
outsl
xchg
adc
push
out
mov
popf
call
out
lds
sub
sub
imul
dec
or
push
fstl
iret
in
cmpsl
mov
cmp
sub
jmp
mov
sub
dec
push
xrstor
in
sub
lret
popf
mov
loope
out
daa
or
mov
cmp
xchg
aaa
iret
outsb
lods
push
pop
dec
or
outsb
loopne
dec
loopne
inc
outsb
nop
gs
push
jo
jne
gs
out
movsl
fisubrl
jecxz
das
icebp
dec
in
pop
out
nop
daa
xchg
mov
xchg
jnp
dec
pop
in
jo
jb
mov
clc
outsl
loop
pusha
loopne
mov
adc
adcb
movsl
sahf
arpl
jno
jmp
fsubp
jmp
loopne
or
inc
loope
outsl
stc
xor
in
xchg
nop
popa
or
push
push
adc
inc
scas
outsb
jo
loop
push
mov
scas
scas
jmp
pop
and
rcll
pop
lea
fs
imul
lock
pop
push
push
adc
or
xor
or
imul
gs
jae
xchg
test
out
jns
cwtl
and
rclb
jg
arpl
repnz
push
sub
push
pop
out
mov
xchg
shl
je
rol
mov
cld
call
std
pusha
dec
mov
xor
jecxz
pop
add
pop
out
loopne
out
icebp
clc
aam
jl
call
insl
out
je
repz
loopne
push
out
fs
cwtl
data16
les
inc
sub
in
or
sar
test
das
mov
movsl
ja
mov
mul
dec
xorb
lock
ja
in
out
cmpsb
xor
pop
pop
fidivrs
jg
push
sub
ret
xor
hlt
push
stos
in
xor
addr16
cmp
cli
mov
imul
aad
inc
popa
inc
xor
xchg
jns
mov
inc
scas
daa
sbb
fcoms
sbb
mov
ss
push
leave
sbb
cmpsb
or
loop
aam
xor
sub
mov
cmp
sub
imul
jp
filds
gs
insb
jo
je
in
call
xchg
stc
in
cli
jo
das
stc
sbb
pusha
push
scas
int3
or
sub
roll
rcrb
inc
fdivr
xor
mov
push
rcll
out
lret
mov
push
mov
popf
dec
mov
int
loop
popa
shll
push
adc
sub
xor
icebp
sahf
leave
dec
test
lock
clc
jo
mov
push
mov
xor
out
ja
adc
xchg
adc
adc
fnstsw
stc
pop
movl
dec
xor
ret
add
cltd
xor
icebp
xchg
js
xchg
rorb
je
jne
andl
inc
mov
mov
pop
addr16
mov
inc
out
cmp
push
xor
and
insl
cmc
push
fidivs
out
jnp
call
jo
and
loopne
push
in
notl
add
jmp
cmp
push
mov
jo
sub
negl
mov
push
pop
outsl
fcoms
jae
mov
jo
out
cwtl
sub
xor
adc
scas
lods
fiaddl
test
jo
leave
add
data16
push
out
mov
push
xchg
or
dec
sbb
pop
mov
and
ror
add
insb
movsl
add
xchg
popa
ds
leave
add
ja
shll
ja
cld
mov
sti
sub
out
lcall
jmp
inc
icebp
lock
das
iret
push
lret
inc
mov
imul
out
cmpsb
inc
popa
mov
test
in
fcompl
mov
clc
dec
insl
rorb
imul
lods
outsl
sbb
and
stos
ljmp
cmpb
imul
or
xchg
and
cmp
mov
xchg
jbe
gs
stos
rorb
adc
dec
imul
pop
or
push
cmpsb
lock
mov
call
xchg
psubb
lock
and
dec
pop
psrlw
push
push
jns
outsb
inc
test
mov
in
out
xchg
push
cmp
pop
inc
lods
xor
lahf
mov
movsb
adc
mov
test
das
cmp
icebp
adc
das
xchg
mov
into
mov
inc
dec
sub
sahf
push
cmp
push
or
bound
push
xchg
or
dec
insl
imul
pop
mov
std
movsl
jmp
sbbl
mov
ret
sahf
add
movsl
call
daa
sub
mov
int
iret
mov
pop
jg
neg
bound
sbb
mov
push
dec
test
negb
inc
lret
xchg
mov
jo
test
jns
outsl
mov
shrb
xchg
xchg
popf
jnp
outsl
test
sbb
shll
js
in
sbb
jmp
sbb
je
div
hlt
push
inc
fucomip
and
jne
aam
and
pop
sbb
adc
pop
imul
mov
mov
dec
jae
cmp
pushf
cmc
cld
js
jae
shrl
scas
clc
mov
inc
ljmp
stc
aad
fcoml
fdiv
loop
out
out
cmp
clc
pop
divl
xchg
rcr
ds
iret
scas
xor
scas
adc
or
stos
mov
ficoml
psubq
dec
je
in
push
daa
push
outsb
sub
scas
jecxz
mov
test
rolb
jae
xor
xchg
add
mov
in
xchg
shrl
das
fbld
mov
push
aam
dec
dec
mov
mov
insb
repz
addr16
dec
fistl
add
jo
inc
inc
out
lret
cltd
scas
out
ret
movhlps
jmp
imul
jecxz
test
outsl
shlb
mov
mov
ds
sub
and
push
call
aas
and
push
adc
in
pop
inc
loope
cmp
outsb
cld
sahf
adc
icebp
add
jge
inc
out
sub
je
or
mov
std
jae
mov
pop
out
rcl
mov
dec
inc
and
js
jbe
shlb
mov
mov
loope
movsb
aas
popa
lods
xchg
adc
mov
jb
arpl
fmul
fs
mov
fdivrl
popa
xor
pop
shl
loop
adc
scas
mov
dec
inc
push
add
insl
rdtsc
xchg
iret
das
fcomps
pop
ss
sub
repnz
xor
test
stc
pusha
fiadds
cld
dec
mov
test
add
cmp
div
inc
std
repnz
js
cli
out
repnz
cli
std
adc
or
xchg
sub
push
mov
test
fnsave
enter
fildll
fisubrl
mov
adc
testb
out
push
mov
stos
jge
insb
dec
adc
or
test
outsl
or
inc
icebp
and
shl
sahf
sub
ja
outsl
jns
sub
imul
xchg
sahf
push
pop
loopne
xor
jns
je
xor
stos
sub
iret
jae
imul
xor
jo
jle
decl
and
orb
cmp
sbb
cmp
jne
icebp
or
cmp
pusha
and
jb
subl
add
lock
test
cmpl
cmc
test
fld1
xor
aam
pop
outsl
cmp
sub
cld
dec
dec
adc
dec
push
dec
cmp
ss
add
xchg
dec
repnz
movb
hlt
xchg
lea
scas
jecxz
scas
jbe
cmp
add
sub
inc
sbb
or
outsl
repnz
decb
jecxz
xor
scas
push
xor
jle
outsl
cmp
in
fwait
jne
xor
out
call
insb
jne
stc
inc
enter
xor
outsb
mov
sbb
ss
jbe
aas
add
fisubrs
addr16
daa
out
outsb
adc
xchg
lahf
xchg
or
outsl
and
mov
and
lock
fistpl
xchg
in
dec
dec
dec
in
dec
sub
cld
cld
inc
inc
sbb
jmp
out
arpl
scas
enter
hlt
fs
out
mov
nop
xor
dec
loop
outsb
hlt
and
push
stc
jmp
nopl
dec
int3
cmc
mov
sub
lods
int3
jecxz
pop
in
insl
jbe
iret
enter
inc
sub
and
ficoms
pop
test
or
fucom
call
xchg
in
ja
int3
dec
cmpsl
push
jae
scas
push
jne
sahf
out
frstor
loopne
and
in
xchg
lods
mov
cmp
lea
pop
daa
xor
lock
out
xor
cmpsb
cmc
stos
xor
push
ja
outsb
sbb
loopne
movsl
out
xchg
addr16
fcoml
in
movsl
pop
dec
add
cmp
cld
in
dec
pop
bound
mov
or
cmp
xor
ret
jo
das
faddl
xchg
imul
push
dec
out
adc
decb
adc
push
lods
in
lret
repz
out
cmpsl
mov
mov
out
xor
push
daa
and
std
je
sub
ljmp
jns
inc
addr16
jmp
mov
movsl
fldenv
mov
outsb
test
xchg
cwtl
dec
outsl
jle
fmulp
outsb
push
fs
stos
stc
mov
push
or
iret
scas
scas
inc
fbstp
lret
xchg
xlat
jmp
out
rorl
xor
push
loope
xor
push
jmp
daa
pusha
or
or
fcomip
inc
iret
pushf
jmp
lods
or
mov
add
mov
enter
ds
mov
in
jo
cmpsb
push
aas
das
lds
jns
cs
mov
mov
lds
pop
xchg
mov
lret
push
add
cld
outsl
mov
pop
nop
notl
not
popf
loop
hlt
xchg
fdivs
rcl
repz
scas
adc
sbb
cmc
js
cltd
fwait
lock
aas
test
in
sub
mov
add
in
inc
repz
popf
mov
mov
dec
add
addr16
add
nop
inc
hlt
shrl
mov
sub
rcll
js
xchg
enter
lahf
es
insb
popa
push
jne
or
mov
call
insb
sub
add
repnz
iret
jo
out
sarb
inc
pusha
cli
jecxz
loopne
fadds
cmpsl
iret
xchg
jecxz
cmc
mov
mov
jns
jmp
out
scas
mov
rcll
pushf
lock
dec
dec
push
and
push
cmp
pop
jmp
sub
jae
xchg
sub
jmp
addr16
mov
jecxz
clc
loopne
fs
outsl
ret
sub
ja
or
loop
inc
sub
loop
pop
addr16
pushf
jo
pop
mov
xchg
and
data16
pusha
mov
xlat
scas
cmp
cld
jmp
movsl
es
mov
push
jle
jle
outsb
fisubrs
jmp
hlt
inc
jae
into
add
dec
jmp
aas
cltd
push
popa
fiadds
xor
mov
pop
sub
std
mov
pop
mov
xor
incb
xor
xchg
jg
clc
jae
call
jbe
sbb
xor
pop
sub
or
dec
cmpl
pop
pop
xor
fdivl
pop
adc
loop
mov
cmpsb
out
je
fidivl
xor
aam
insl
and
mov
jae
push
lret
outsb
sahf
in
xor
dec
and
imul
pop
adc
jo
jmp
in
add
sub
das
ret
addr16
addr16
out
dec
aad
in
idivl
mov
xor
pusha
xlat
das
xor
shrb
hlt
and
lods
call
pop
and
dec
mov
mov
dec
popf
rorl
adc
fs
jns
insl
lock
adc
addr16
push
ljmp
xchg
test
insb
insl
cld
repnz
insl
sub
in
xchg
fs
pusha
mov
ljmp
jo
mov
cltd
cmpb
jo
aaa
cmp
in
mov
cmp
jns
icebp
mov
mov
loop
scas
arpl
loopne
push
rorl
pop
jnp
jns,pn
fcmovnb
mov
jnp
call
sahf
mov
cltd
inc
gs
mov
xchg
icebp
cmp
outsl
popa
je
or
js
mov
fisttps
test
ljmp
fistpll
int3
dec
jbe
das
rclb
or
rorl
je
mov
rcll
rolb
out
jl
pop
sbb
repnz
shr
push
mov
jbe
ud1
or
mov
mull
test
insl
jo
xchg
test
lock
loope
repnz
sbbl
sbbb
dec
shl
pop
mov
push
int
stc
or
push
dec
frstor
inc
lret
cld
mov
push
fs
in
dec
pushf
outsb
scas
dec
rorl
jbe
rorl
loop
stos
mov
rcrl
mov
mov
hlt
lods
sub
testb
lock
ja
jg
jle
sub
and
dec
cld
cmpsb
test
fisubs
push
fidivrl
adc
cld
pop
sub
push
fwait
lcall
out
arpl
xor
adc
push
mov
cmp
sbb
adc
adc
push
or
popf
pop
scas
push
inc
fsts
sbb
imul
mov
test
out
mov
int3
xor
sarb
fisttpll
insb
xor
sub
fsubr
jo
lock
mov
dec
pop
sub
add
js
sub
push
dec
inc
cmp
leave
and
in
push
insl
inc
in
das
insb
in
jmp
stos
sub
xchg
nop
or
mov
push
psrld
pop
jle
xchg
das
xchg
cmpsb
int
cltd
push
inc
dec
pop
arpl
push
inc
ret
cmpsb
pop
cli
mov
sahf
repz
xchg
je
pmaxub
fiadds
pop
in
adc
das
sarb
push
xor
into
jle
jne
loopne
adc
dec
leave
pop
lret
cmp
out
mov
and
and
sbb
lods
lods
and
insb
adc
iret
cmpsl
outsb
sub
scas
dec
bound
fisubrs
test
mov
or
and
test
movsb
inc
cmpsb
jg
jl
and
ret
inc
in
sub
loop
js
jnp
hlt
sarb
lock
mov
pop
sti
or
push
xchg
dec
cmp
out
push
insb
xchg
cmp
test
mov
sahf
movsb
out
daa
mov
scas
sub
pusha
xchg
jg
push
add
bnd
push
adc
sub
mov
rol
jle
inc
ficomps
das
mov
dec
aas
mov
mov
pusha
movsb
out
dec
mov
scas
pusha
mov
pop
mov
lea
cmc
jae
inc
sub
adc
insb
mov
xor
outsl
movsl
daa
push
xchg
pop
lahf
imul
in
sarl
sub
ljmp
pop
cmp
dec
bound
mov
js
mov
inc
outsl
jno
inc
xor
pop
dec
push
cwtl
mov
lods
adc
jo
sbb
inc
in
lret
fdiv
adc
aaa
pop
xor
movsb
cwtl
shlb
adc
xor
outsl
mov
fdivp
dec
mov
mov
sub
roll
cltd
divb
fiadds
call
mov
outsl
jmp
fadds
jo
mov
xlat
insb
jns
jns
out
imul
pop
in
sub
lcall
imul
in
scas
jecxz
in
fs
outsl
out
adc
ljmp
cmp
test
std
sbb
call
insl
loopne
pop
enter
push
ljmpw
shl
cli
scas
ja
cmp
add
out
and
add
js
push
stos
bound
rcrl
jb
or
add
loope
cmpsl
fildll
push
out
pop
je
jge
sbb
insb
add
outsb
aam
mov
pop
daa
push
pop
clc
leave
bound
loopne
push
aaa
in
pop
faddl
fs
in
sub
adc
mov
cmp
sub
push
add
xchg
mov
sbb
xchg
pop
jecxz
insb
inc
push
adc
fiadds
mov
int3
test
insb
out
add
icebp
mov
je
fdivrl
movsb
add
ja
shrl
jo
outsl
jl
sar
je
mov
add
int3
sub
push
repnz
inc
mov
adc
jae
inc
in
daa
push
cmp
bound
mov
pushf
ror
dec
xchg
pusha
sub
pop
or
rcll
enter
addr16
jl
scas
ds
les
push
lret
es
xor
mov
jo
dec
loopne
scas
repz
and
fsubrs
inc
sub
cmpl
outsb
jae
dec
mov
adc
movsb
cmp
and
jns
mov
in
repz
xchg
sbb
cmp
mul
mov
xchg
imul
lcall
jle
inc
lods
adc
in
jne
cmp
adc
lock
mov
js
movsb
bound
push
insl
pop
popw
scas
cli
or
mov
std
jb
loopne
imul
in
loop
lcall
push
pop
lret
xor
mov
pusha
fnstenv
pop
push
jo
inc
mov
test
fdivrl
jg
pop
jae
jo
sub
lods
dec
repnz
jae
lcall
or
xor
jns
je
sub
incb
add
mov
rcrl
sub
js
es
mov
and
ret
stos
lret
jae
dec
ljmp
jae
pop
leave
or
xor
jmp
rcrb
jne
loope
lods
out
in
jmp
cmpsl
pop
int
das
adcl
jb
sbb
dec
lret
test
mov
repz
out
pop
mov
jne
push
pop
je
sbb
push
pusha
aaa
push
fisubs
mov
xchg
push
ror
ret
add
popa
xor
test
jge
dec
adc
je
jge
addr16
or
push
fidivrl
test
pusha
mov
cmp
loope
mov
je
je
adc
test
call
fwait
cmp
mov
jnp
hlt
pop
adc
enter
adc
loopne
jbe
jnp
loopne
mov
pop
add
mov
je
fs
jne
shl
cli
cwtl
out
mov
mov
imul
dec
popa
imul
jne
lods
out
fisttps
out
cmp
insl
mov
lret
lock
inc
cld
mov
popa
jg
inc
ret
mov
pop
call
das
sub
mov
xlat
fisttpl
addr16
je
cmp
scas
mulb
mov
push
xor
repz
or
movsb
pop
push
sbb
and
cs
push
hlt
pop
add
cmpsl
xor
js
movsl
jo
pop
rorl
jno
icebp
sarl
jl
divl
cmp
or
jle
aam
jge
inc
repz
outsb
xchg
ret
jnp
jp
xor
clc
cmp
jb
xor
ds
lods
shll
rclb
xchg
call
cmpsb
add
pushf
test
jge
or
in
pop
sub
cmp
repnz
sar
push
rcll
mov
out
sub
js
faddp
aas
sub
or
xlat
fdiv
mov
imul
divb
sub
push
mov
jnp
jmp
idivl
push
in
ja
enter
mov
xchg
das
mov
fsub
mov
xlat
imulb
sti
fabs
adc
outsb
mov
adc
dec
insl
mov
push
jmp
mov
das
imul
insb
and
cmpsl
loop
sbb
fnsave
sbb
je
jne
cwtl
adc
out
stos
jo
lock
out
add
orb
adc
movsb
cwtl
or
adcb
sub
insl
ss
loopne
jo
pop
pop
add
movsb
xchg
jecxz
outsl
mov
out
movsl
or
in
add
ret
out
jle
sub
scas
xchg
sub
dec
cli
adc
js
jo
mov
inc
insb
or
ss
and
jbe
push
pop
mov
jo
out
int3
sub
sti
mov
loop
add
out
adc
mov
out
sar
xchg
lock
or
xchg
add
iret
aaa
lds
mov
out
lahf
ljmp
mov
aam
mov
sbb
rorl
pop
popa
insb
rcl
cmpsb
mov
ja
loope
testl
das
ficoms
fdivl
inc
add
data16
out
jp
and
enter
subl
or
aam
adc
adc
cmc
sub
fmulp
clc
cmpsl
js
sbb
jne
je
push
mov
xchg
xor
inc
in
mov
jg
rol
pusha
pusha
sti
js
outsl
call
inc
scas
jle
aas
mov
shl
loopne
and
xor
inc
aad
push
js
and
daa
sub
mov
je
or
and
stos
jne
sub
fcmovu
adc
movsb
xlat
jg
out
adc
mov
int3
jne
jne
or
cmc
adc
push
hlt
adc
sbb
in
es
in
dec
pop
xor
lods
rcl
scas
adc
jae
lods
add
std
fwait
sbb
aas
mov
dec
iret
ss
outsl
mov
mov
mov
jge
lock
pusha
sti
jo
lcall
pop
inc
adc
test
cmpsb
dec
cli
popa
jp
jnp
loopne
pop
outsl
ljmp
xchg
xchg
mov
je
inc
cmpsb
repnz
shl
repz
and
sub
xor
push
sti
push
jmp
test
fidivl
xor
daa
adc
hlt
clc
js
scas
lock
adc
xor
in
push
adc
mov
dec
mov
je
cld
cmp
rorl
pusha
or
mov
push
cwtl
sub
mov
out
lock
mov
dec
icebp
rcrl
mov
shll
fcoml
xor
ja
stos
pusha
adc
cs
test
xchg
jecxz
xchg
pop
icebp
rcrb
xor
ljmp
fsubl
xor
sti
xchg
imull
call
jp
cmp
fwait
jmp
and
ds
xchg
sub
mov
test
test
inc
lret
sbbb
push
aas
sub
in
sbb
lret
mov
or
sbb
fcoml
cmp
lcall
pop
sub
cmpsb
call
repnz
loopne
repnz
mov
das
daa
addr16
adc
ret
nop
pop
es
int
js
mov
je
subl
jb
cmpsb
shlb
pusha
int
sahf
xlat
or
lods
int
fisubrs
int
iret
add
in
stc
in
mov
out
adc
xchg
popa
rorb
ja
cmp
inc
hlt
subb
push
mov
movsl
adc
or
jmp
out
adc
out
mov
jbe
adc
sbb
jae
movsw
sbb
incl
push
lahf
outsl
mov
scas
mov
jo
test
in
aas
and
sbb
add
imul
dec
dec
ljmp
outsl
sbb
inc
in
fldt
jae
cmpsb
insb
sbb
adc
mov
pop
ja
mov
mov
jne
mov
addb
int3
ret
out
outsl
add
add
mov
pop
cltd
sub
pop
lea
stc
fs
jmp
fistpl
push
adc
mov
iret
xchg
fisttpl
aad
in
mov
cmc
sbb
fmuls
mov
imul
jmp
sbb
or
dec
stc
dec
push
pusha
roll
loopne
push
jbe
orb
roll
xchg
cli
in
mov
into
in
testl
ret
movsb
and
les
jnp
ret
arpl
pop
lods
imul
gs
je
add
daa
xor
data16
test
ret
jecxz
mov
dec
cmp
icebp
ja
test
outsb
dec
adc
add
pusha
daa
dec
xchg
mov
adc
mov
jb
cmp
outsl
mov
xor
pop
adc
cmpsb
xor
addr16
xor
mov
mov
jl
mov
add
das
aas
sub
cmp
stos
enter
outsl
cmpsl
xchg
lret
subb
xor
fisubl
das
adc
mov
push
pop
cmp
inc
pop
sbb
cltd
sbb
scas
loop
mov
dec
lahf
test
push
lahf
dec
pop
pop
ljmp
out
out
loop
mov
cmpsl
fwait
mov
xchg
sbb
push
in
scas
dec
js
mov
int3
ret
outsl
mov
push
pop
notl
sbb
movsl
imul
inc
dec
out
jecxz
xor
addl
mov
mov
lcall
jp
shrb
sarb
dec
movsb
dec
cmp
lcall
jo
mov
xor
daa
stc
fiadds
push
inc
movl
xlat
jg
inc
pop
outsl
mov
cs
and
pop
mov
push
je
scas
xchg
out
in
and
jae
or
mov
aad
mov
or
push
or
enter
pop
mov
andb
mov
scas
movsb
or
ljmp
push
lods
lret
and
test
lret
enter
cmc
icebp
pop
pop
adc
out
into
loopne
scas
inc
push
leave
loop
push
cmp
xchg
mov
mov
into
sbb
in
imul
or
mov
loopne
push
cmpsl
jbe
and
mov
ret
in
sub
jp
or
pop
arpl
push
cmp
jb
enter
and
sub
xlat
mov
pop
cwtl
ficompl
inc
pop
jp
mov
test
sub
dec
in
lahf
into
lcall
push
dec
sbb
add
adc
mov
into
and
addr16
movsl
ja
and
aam
in
jmp
icebp
or
pop
fldt
aam
test
pop
sub
jl
arpl
into
imul
outsb
loop
loopne
mov
in
fidivs
out
pop
push
dec
cli
lock
es
pop
jne
inc
data16
addr16
popa
ja
inc
outsl
pop
outsb
in
iret
mov
push
insb
outsb
pop
sbb
filds
out
jno
fidivrl
aas
movsl
pop
js
mov
mov
scas
iret
dec
les
sub
cld
cltd
insb
jnp
pop
outsb
shlb
cmp
pop
jg
call
les
sbb
call
add
inc
sub
push
jp
mov
in
push
ja
push
dec
inc
fdivr
inc
aas
sbb
pop
dec
mov
das
ret
pop
mov
mov
mov
adc
gs
inc
shlb
add
pop
lods
mov
mov
mov
repnz
mov
mov
test
aas
jne
pushf
jl
addr16
outsb
xchg
loopne
mov
ljmp
imul
sahf
subl
enter
out
idivb
xor
inc
adc
int3
insb
sub
int
xchg
dec
out
sub
push
cmp
push
arpl
push
arpl
js
je
jnp
mov
lret
pushf
sub
pop
cmc
ljmp
imul
sti
push
pop
test
pop
das
pop
cmp
repnz
stos
outsl
add
movsl
mov
fcomip
jg
outsb
popf
or
std
sub
insl
test
jbe
jp
dec
add
rorb
sub
out
out
mov
fxch
scas
cltd
outsb
jb
je
sub
sahf
adc
test
cmc
cmp
cmpsb
sti
mov
xor
cmc
jg
pop
dec
sbbl
dec
add
jne
popf
cmp
stos
sbb
fistpll
and
aas
imul
dec
add
dec
scas
mov
stc
cmp
outsl
jp
dec
mov
fstps
sbb
outsl
push
cmp
shrb
dec
aad
stc
cmp
imul
pop
out
adc
mov
daa
mov
push
testb
push
mov
jp
push
cmp
stc
xchg
sbb
pusha
xchg
test
subl
popf
mov
sbb
or
std
loop
scas
xchg
arpl
push
mov
rolb
mov
leave
out
inc
xor
int
dec
stos
sahf
sbb
neg
and
push
ljmp
jg
mov
test
popa
aas
lcall
test
and
cmpsb
cmp
outsb
xor
dec
fdivrp
dec
test
hlt
mov
test
or
jp
insb
inc
decb
shrl
iret
cli
push
aaa
jns
ret
insl
lret
inc
xchg
sub
shlb
cmp
inc
mov
test
xor
nop
jmp
mov
or
int3
mov
adc
mov
and
sbb
mov
cmp
aam
ret
cld
sub
ficoms
pop
mov
bound
jl
mov
xor
das
push
push
adc
jg
cmc
mov
je
xchg
lea
mov
clc
add
aam
add
in
clc
adcb
adc
and
daa
push
mov
testb
dec
insb
rcrl
adc
cmpsl
add
arpl
js
in
jecxz
or
mov
mov
inc
insl
xor
out
dec
cmp
cmp
test
pop
lock
popa
mov
jo
pcmpgtd
or
cmpsl
dec
cmpsb
xlat
repz
sub
dec
lcall
dec
incb
outsl
pop
enter
dec
adc
fsubrl
je
jbe
jg
sahf
pop
sahf
cmp
cmp
in
sub
lods
dec
cli
inc
sub
loopne
and
jae
mov
or
lcall
mov
jo
xchg
out
cmp
xchg
js
mov
and
es
mov
mov
jecxz
sahf
test
sti
push
and
fdivp
sbb
out
test
push
jo
push
and
repz
mov
xor
gs
pop
jnp
test
sar
sbb
pop
jo
xor
insb
es
mov
stc
mov
mov
or
xchg
sahf
bound
push
sbb
lods
pop
insb
inc
pop
mov
fsts
adc
sub
sti
dec
inc
gs
adc
cmpsl
inc
call
in
sub
cmpsl
rcrb
jmp
stos
movhps
pop
mov
xchg
xchg
push
xchg
icebp
mov
es
add
adc
sarl
and
xchg
and
push
lea
and
jbe
push
fbstp
fdivl
cmp
out
out
push
outsl
and
inc
dec
popf
bound
js
mov
outsl
xor
in
and
in
repz
cmp
pop
out
mov
or
je
xor
movsl
or
jmp
rep
inc
fwait
out
xchg
pop
cmp
into
insl
sarl
mov
out
and
lock
sub
fs
test
inc
shlb
xchg
cmpsl
repnz
call
cld
fs
jge
daa
into
rorb
mov
inc
pop
and
push
jg
mov
xor
mov
jnp
or
inc
js
push
std
out
int3
ret
jnp
xchg
push
pop
movsb
je
ret
jo
data16
scas
insl
adc
or
and
icebp
sub
add
test
adc
sub
insb
stos
xchg
xor
pop
xor
loop
subl
in
je
inc
js
sub
or
subb
cld
push
test
sbb
lods
jbe
inc
inc
or
je
in
xchg
sbb
inc
sub
mov
add
shr
inc
xchg
out
fsubl
inc
loop
jb
cmpsb
and
test
and
dec
push
adc
jns
lods
stc
adc
stc
insl
adc
loopne
or
subl
jg
outsl
scas
mov
jp
enter
ja
sub
lret
das
xchg
adc
daa
lods
mov
dec
ja
cld
jecxz
push
loopne
jne
or
jl
popa
push
pop
add
popa
push
add
mov
aas
fwait
push
jg
mov
pop
mov
ljmp
roll
scas
lock
add
rorb
adc
adc
loop
in
mov
add
dec
mov
lcall
pop
push
vprotw
jle
inc
in
imul
imul
enter
rclb
testb
js
adc
hlt
movsl
insb
dec
sbb
rcr
insl
jmp
int3
xor
and
push
loopne
xchg
js
pop
call
add
mov
fidivl
outsb
sbb
jp
jnp,pt
push
stc
cmp
das
cli
push
lock
mov
std
jecxz
lahf
fs
mov
out
es
push
jo
fs
dec
mov
je
sub
outsl
mov
fsts
mov
addr16
jbe
xor
scas
lahf
cli
ljmp
cmp
mov
rcll
push
add
jb
daa
cwtl
mov
aas
mov
subb
adc
push
out
push
rep
test
pop
enter
andl
or
jo
hlt
or
jge
pop
push
ja
jne
int
xor
mov
loope
outsl
mov
jne
aaa
sub
push
pop
mov
cld
sahf
hlt
push
in
pusha
mov
push
stos
pop
lcall
in
pop
sti
je
aad
imul
out
mov
xor
out
ljmp
push
int
and
adc
xor
je
pop
xor
adcb
xchg
in
xchg
mov
pop
and
leave
mov
testl
push
pop
cltd
js
repnz
insb
inc
push
out
pop
jns
aaa
ds
bound
pusha
pop
xchg
inc
sub
cmpsb
out
jmp
and
sti
mov
enter
fidivrl
arpl
rorl
sbb
stos
pop
jmp
sahf
adc
loop
popa
mov
je
adc
scas
bound
std
dec
mov
je
jg
frstor
jo
add
mov
cmp
pop
sti
out
cmpsl
fsincos
shll
shlb
jno
add
out
or
outsb
mov
in
jmp
cmp
cmp
std
loopne
jg
decb
sub
adc
ficoms
rolb
jo
imul
adc
jl
daa
je
xchg
ss
iret
stos
outsb
outsl
imul
rcrl
int3
add
std
push
xor
cltd
enter
jae
inc
pop
dec
jg
cmp
arpl
cmp
mov
mov
inc
mov
jmp
in
jo
test
jo
push
rol
popa
in
or
in
and
loopne
scas
jbe
inc
inc
xchg
jae
xor
jae
xchg
ret
xor
imul
mov
out
out
hlt
out
lcall
or
push
ret
ja
sub
mov
inc
pop
push
push
jbe
data16
ret
push
push
popa
adc
jge
lock
int3
mov
cmp
xor
jbe
ds
sub
lcall
lahf
popf
jo
out
jg
add
nop
push
je
nop
fisubl
xchg
sub
dec
bound
rorl
insb
cmpsl
ret
xor
add
das
push
outsb
into
mov
mov
pop
daa
imul
xchg
add
pop
data16
or
movsl
mov
movsl
outsl
mov
leave
fs
mov
psrad
xchg
ficoms
outsl
test
mov
cmpsl
inc
inc
mov
out
adc
subb
in
imul
sbbb
lret
inc
sbb
inc
push
cmpsb
in
cmp
loopne
jmp
sub
mov
das
cmp
je
sahf
pop
lcall
pop
cmp
das
dec
stc
jo
push
in
adc
inc
lret
aad
xchg
push
clc
pop
push
mov
outsl
inc
and
xchg
pop
aaa
push
loop
int3
xor
sbb
lea
jo
into
sub
mov
xchg
andl
fisttpl
in
or
add
movsb
xlat
std
mov
lods
lea
mov
clc
mov
decl
jge
pop
int3
pop
mov
nop
cli
cmc
dec
popa
pushf
lods
or
outsl
jbe
adc
cmpsl
popf
jp
daa
idiv
mov
adc
insb
dec
push
in
iret
sub
std
es
pushf
fs
or
jp
or
repz
lret
cmpsl
xor
cltd
xor
sbb
dec
cwtl
and
scas
adc
in
outsl
xor
push
notb
sahf
mov
mov
dec
lods
out
cmpsb
sub
and
shr
mov
add
mov
add
bound
add
inc
lahf
pusha
jg
adc
jg
mov
mov
adc
jecxz
es
in
enter
in
imul
imul
int3
in
cmp
in
pushf
pushl
iret
popf
adc
lret
out
add
mul
into
nop
into
cld
scas
cmpb
test
out
aam
call
xchg
jmp
movsl
mov
jo
inc
imul
test
rorb
sub
stos
leave
stc
ljmp
push
fildll
mov
cld
mov
icebp
testb
js
sbb
addr16
sub
shll
fs
insb
or
jae
repnz
sub
mov
int3
dec
xchg
outsl
jb
insb
fdivs
and
enter
adc
or
xorl
lock
cltd
xor
andb
in
jae
add
bound
shll
fsts
movsl
cmp
jp
adc
loopne
mov
cmp
hlt
pushf
popf
ljmp
xchg
sub
add
aam
dec
inc
dec
xor
adc
dec
mov
push
inc
push
or
movsl
daa
arpl
mov
insl
mov
mov
es
pop
inc
data16
ja
mov
fldenv
push
sub
cmp
ljmp
into
inc
cli
dec
xor
jbe
pop
arpl
or
pop
or
xor
in
jo
inc
sub
daa
mov
decb
insb
gs
out
mov
jle
adcb
shlb
jl
dec
and
jo
cmp
push
adc
aad
loop
rorl
mov
cmpsb
mov
iret
push
loope
jne
ds
daa
mov
call
sbb
mov
imulb
mov
ja
sub
sbb
insb
in
and
xlat
fbld
test
rcrl
fisttpll
sbb
push
or
sbb
push
push
outsl
ljmp
pop
mov
inc
add
jmp
mov
mov
lcall
call
call
inc
lods
jo
sbbb
insb
insl
add
ja
scas
xchg
lds
das
pop
pop
aad
inc
aaa
lds
shrb
outsl
xchg
addr16
mov
in
push
subl
mov
shrl
popf
out
add
pop
loop
sbb
jge
xchg
movsb
jns
mov
push
adc
sub
jmp
cli
lods
xor
mov
mov
nop
subb
out
adc
or
ret
dec
xchg
push
mov
out
push
inc
std
or
mov
dec
push
push
in
ljmp
insl
push
ret
dec
xor
jo
rcl
jle
out
adc
in
add
out
inc
xor
outsl
add
in
inc
jmp
in
jae
test
add
lahf
push
call
repnz
hlt
outsl
xor
lock
add
jae
movsb
out
adc
das
adc
pop
jne
out
xor
jb
pop
out
out
jae
push
test
das
ljmp
mov
test
sbb
out
add
or
and
dec
movsb
fsubrs
mov
or
shlb
iret
add
in
test
bound
outsb
fidivs
cmp
or
and
sbb
cmpsb
or
jo
cld
std
fwait
addr16
les
insb
or
jmp
popf
dec
inc
insb
fisttps
jns
xlat
lock
aaa
les
cli
push
outsb
xlat
lret
mov
lock
not
push
cli
lods
incl
repnz
les
mov
shlb
int3
mov
sub
push
or
lcall
in
inc
pop
shl
cli
xchg
adc
lods
jp
pop
orl
push
lret
call
insl
ja
push
int
icebp
imul
sahf
mov
mov
mov
das
ss
sbb
lret
arpl
pop
int
in
xchg
pop
or
loope
out
ret
fsubl
pop
push
sub
cmp
xor
mov
sbb
mov
mov
ret
pop
xor
mov
mov
and
mov
push
jg
mov
popf
icebp
mov
fwait
clc
xlat
adc
push
sub
idiv
push
mov
jbe
js
pop
mov
and
pop
in
fimull
or
lret
cli
xor
hlt
jle
sub
in
dec
lock
sub
inc
clts
inc
cmp
test
xor
sbb
jge
int
pop
js,pn
inc
dec
jmp
jg
jp
dec
xchg
call
ja
jg
and
neg
mov
pop
xor
mov
pop
adc
fs
andl
cld
mov
mov
pop
call
aad
mov
jne
sub
jp
mov
jae
pushf
es
jo
dec
roll
sub
cmp
cmovl
in
inc
pop
pop
cmp
pop
cs
adc
loopne
pushf
in
sbb
xor
or
pop
mov
xor
cmp
xor
jge
add
and
mov
pop
rcrb
lock
or
sub
push
pusha
adc
inc
sub
sub
leave
jmp
rcll
sahf
shl
dec
mov
and
dec
call
inc
xchg
js
cmpb
cmp
clc
lock
pop
js
imul
ds
test
mov
imul
pusha
sub
dec
pop
shrl
clc
stos
movsb
xor
rclb
mov
clc
mov
repz
pop
or
mov
fnsetpm(287
push
repnz
xchg
out
pop
jmp
pushf
inc
pusha
fdivrs
push
out
inc
jbe
lret
mov
adc
insl
test
loopne
cld
cmp
insb
aaa
dec
jns
fptan
lcall
add
sbb
outsl
mov
cltd
mov
je
in
or
lds
jle
sub
test
outsl
pop
jge
hlt
inc
adc
adc
inc
ljmp
lods
push
xchg
mul
sbb
or
sbb
xor
test
mov
das
stos
jb
movsl
adc
jp
mov
jg
jle
sbb
sub
mov
pop
bswap
xchg
shll
and
int3
xchg
ret
test
ficompl
dec
out
dec
cmpsb
dec
mov
imul
jge
loop
jg
lods
jl
bound
sbb
rep
dec
and
add
hlt
xchg
inc
imul
fmull
and
cmp
add
mov
in
loopne
imull
stos
lds
dec
pop
ret
scas
out
cmp
mov
and
push
hlt
adc
subb
test
stc
xor
testl
inc
pop
jmp
enter
cmpl
and
cmp
mov
xchg
aas
mov
lcall
pop
sbb
aad
mov
rcrb
sbb
mov
sbb
ljmp
dec
rolb
add
jo
or
push
dec
scas
inc
lret
mov
cwtl
sbb
pusha
mov
ljmp
sbb
leave
out
aaa
loopne
sub
fcomi
insb
loope
sbb
mov
inc
or
pop
adcb
aad
in
repz
or
mov
or
sbb
cmpsl
cltd
mov
mov
push
jg
cld
sti
or
jo
jns
inc
pop
into
mov
jl
aaa
rclb
sbb
sub
out
into
or
call
mov
sbb
popf
adc
inc
jmp
aad
and
in
rorb
pop
arpl
xchg
push
jg
je
jbe
adc
andps
or
mov
lret
push
pop
push
xrelease
inc
adc
inc
inc
pusha
mov
or
out
jns
loopne
mov
jbe
mov
mov
aad
sbb
fildl
shr
data16
mov
imul
pop
cmpsb
mov
adc
dec
aas
movsl
cmpsb
nop
out
push
out
push
aas
imul
addr16
push
dec
sub
icebp
in
cmp
lds
outsb
add
into
imulb
jp
cmc
mov
mov
fs
jb
and
fnsave
int3
shl
mov
sub
xor
das
cmp
scas
xchg
scas
pusha
in
fdivl
mov
orl
fwait
push
or
loope
cmp
movsl
dec
das
push
xchg
add
and
scas
mov
adc
inc
adc
sbb
pop
insl
cmp
pop
mov
push
pop
sub
jp
or
mov
shlb
shrb
xor
cmpsb
loop
xchg
shr
mov
es
xchg
sbb
sar
pusha
rcrl
loop
negl
push
out
dec
and
sbb
mull
push
jo
nop
in
sbb
lcall
les
iret
test
lods
push
insl
out
sub
push
into
mov
and
inc
jae
jge
pop
mov
cltd
push
sub
and
daa
subb
aas
inc
mov
sub
es
cmc
test
add
push
into
stc
add
push
xlat
mov
xor
xchg
sub
call
shll
jb
fiadds
push
mov
mov
inc
lret
hlt
lret
das
add
push
js
push
rcll
icebp
repnz
int3
hlt
fsubrl
cmc
cmc
imul
loopne,pt
cmc
pop
hlt
jmp
xor
inc
jns
or
call
out
jecxz
adc
xor
xchg
cmp
cmp
dec
dec
fsubrl
push
add
out
cmp
mov
xor
dec
insb
scas
ljmp
cmp
push
add
call
out
rcrl
mov
punpckhwd
pop
insb
xor
jmp
loop
or
out
ret
mov
out
loope
ficoms
int3
rclb
dec
insb
mov
outsl
int3
mov
addr16
in
mov
in
outsl
mov
popl
imul
outsl
mov
cmp
jo
push
clc
ds
adc
insb
aaa
mov
scas
scas
sub
jno
outsl
orl
je
adc
cmp
adc
cltd
scas
icebp
test
xor
sub
push
sbbb
subb
mov
outsl
test
int
sbb
push
dec
inc
and
lods
sub
les
inc
fucomp
xor
cmp
cmc
outsl
es
adc
pop
push
xor
xor
cmpl
std
and
push
es
adc
lods
or
push
scas
icebp
jg
cmpsb
es
jns
lock
xchg
adc
out
sbb
lds
inc
leave
enter
mov
imul
lea
insl
pushw
push
aad
push
inc
jne
pop
fisubl
ret
xor
inc
ljmp
mov
icebp
into
add
imul
and
int3
add
jl
xchg
mov
xor
add
lcall
shrb
int
test
xor
outsl
lods
and
jmp
and
popa
or
je
adc
xchg
mov
sub
andl
je
or
adc
jae
out
out
mov
cmp
js
daa
push
ss
sub
unpcklps
jno
or
add
mov
data16
pop
dec
jg
mov
add
and
fstl
call
stc
fmull
push
lret
add
int3
js
push
and
pushf
push
jg
loopne
sub
lret
jbe
outsl
mov
rorb
enter
rcll
in
cmp
xor
jle
jnp
fbld
stc
pusha
cli
mov
fldenv
mov
out
data16
sub
jp
test
sub
test
mov
fdivs
dec
fists
rcll
adc
addr16
jo
aaa
ret
xchg
pop
pop
insb
popa
subl
call
mov
ljmp
xchg
les
ljmp
sub
dec
sub
inc
push
je
cmp
mov
sbb
jecxz
dec
cltd
out
jo
into
xor
inc
jp
mov
jecxz
cmp
loop
sub
enter
insb
xchg
xor
fsub
pop
lods
imul
pusha
lds
pop
push
das
push
outsl
mov
or
push
sub
sbb
insl
sti
mov
pop
clc
jne
xor
stos
rclb
xor
pop
cmpsb
lock
stc
daa
mov
jg
popf
xor
sbb
jns
pop
sub
clc
mov
mov
fwait
je
mov
mov
cmp
xorl
or
divb
mov
aas
jnp
mov
idivb
mov
icebp
mov
int3
aad
jmp
sahf
adc
fdivrs
js
cmpsl
outsl
push
jne
jnp
mov
es
dec
add
xchg
cmc
lea
movsl
inc
dec
loopne
andl
mov
jo
outsl
mov
and
fwait
xlat
dec
or
adc
mov
into
or
fdivrl
inc
or
aaa
les
into
cmp
enter
jecxz
in
in
or
adc
shlb
dec
dec
jle
or
jge
shl
lock
je
pop
je
push
ds
mov
fistps
jl
arpl
fst
cmp
jb
fimuls
mov
std
and
out
imul
ja
push
neg
xor
mov
dec
jne
test
std
xchg
jge
jns
jbe
pop
je
lret
mov
out
jne
shlb
dec
neg
push
jp
jle
dec
pop
jo
xor
clc
mov
bound
insl
stc
sbb
insl
mov
movsb
outsl
out
push
mov
push
xlat
and
jne
sbb
fadd
out
or
jne
clc
std
lret
adc
mov
sub
inc
pop
call
ret
lea
sub
xorb
cwtl
cmp
aam
mov
push
lods
ljmp
pop
sbb
outsl
pop
stos
js
push
mov
sub
lea
sub
ficoms
movsl
sti
or
ss
sbb
sub
push
pusha
sub
inc
hlt
mov
push
out
push
mov
jo
fstpt
insb
ret
out
lret
scas
call
add
mov
aad
jle
cli
hlt
pop
fidivl
mov
mov
push
leave
inc
jge
je
or
or
out
push
shlb
jmp
js,pn
lock
push
or
enter
or
dec
rol
cltd
or
jle
sbb
or
xor
inc
hlt
scas
je
cmp
iret
dec
dec
cmp
fildl
in
sub
negb
pushf
das
ret
pop
addr16
movsl
push
ljmp
cmp
imul
repz
stos
test
std
ficompl
or
mov
xchg
js
sbb
lcall
mov
and
pop
cli
shrb
and
negl
test
sarl
shlb
daa
lock
aas
mov
insl
into
push
lea
stos
mov
addr16
mov
fistpl
icebp
or
rcrl
cld
iret
enter
sub
ja
leave
stos
cmpsl
fdivrs
out
mov
mov
repz
mov
andnps
pop
fwait
mov
andb
mov
cld
cld
or
loopne
sub
lock
fcoms
in
fimuls
enter
jbe
call
sub
cmp
fdivrs
insb
jp
sub
outsl
js
fiadds
jo
call
sub
add
mov
lea
pop
cmp
sub
inc
mov
inc
dec
sarb
outsb
es
push
js
outsl
std
js
das
jge
outsl
lahf
and
rolb
pushf
shrl
test
bound
loopne
je
loope
cmp
and
inc
add
scas
jb
or
ja
pop
in
sub
mov
lret
sbb
fnstenv
xchg
cs
pop
xor
lods
and
adc
inc
cmp
addr16
cwtl
sbb
fdivp
jbe
cwtl
int3
je
addr16
in
add
sub
out
mov
push
aad
stos
add
mov
mov
or
enter
cmpsl
adc
or
out
fnstsw
out
xorb
arpl
outsl
xlat
mov
outsl
adc
cs
jno
out
pop
nop
add
or
and
sub
cwtl
out
add
jb
xor
test
inc
int
add
lcall
fwait
push
repz
push
aam
jle
stos
xor
sub
insl
mov
jo
js
out
femms
xchg
not
xchg
hlt
jae
out
aaa
cwtl
aaa
outsl
sahf
dec
mov
push
ret
mov
sbb
aas
adc
clflush
dec
repnz
or
lahf
dec
adc
xchg
xchg
jo
fistpll
outsb
daa
or
sbb
or
xlat
in
or
xchg
test
fisttps
add
push
jmp
repz
adc
aaa
loope
dec
rcrb
or
out
movsl
pop
ja
cmp
filds
cmpsl
test
out
outsb
jge
es
xor
xchg
or
rclb
out
dec
and
out
push
dec
lock
movsl
jg
adc
das
lds
jmp
add
in
fcoml
in
sti
xchg
jb
subb
aas
pop
out
cmpsb
aaa
in
das
mov
inc
and
ljmp
add
cmc
xchg
stc
ja
lods
loopne
outsl
lods
das
aas
xor
mov
push
xchg
jmp
dec
jle
or
bound
cli
sub
pop
test
enter
add
add
and
sub
stc
xchg
enter
shll
mov
xor
xor
data16
fisttps
xchg
testl
aaa
sub
mov
fwait
dec
dec
and
arpl
adc
out
sahf
xchg
out
repz
in
wbinvd
sub
test
in
arpl
jae
pusha
imul
mov
nop
loop
dec
adc
cmp
int3
clc
mov
mov
dec
pop
shlb
dec
iret
adcl
sub
arpl
sbb
xchg
push
lods
lcall
pushf
pop
cs
out
sbb
push
ljmp
inc
aam
inc
mov
adc
movsb
mov
jno
popa
insl
push
loop
adc
dec
xor
sbb
inc
popf
sahf
cmp
bound
stos
xchg
mov
pusha
dec
or
out
adc
jnp
jecxz
push
scas
adc
xchg
jne
adcb
sbb
cmp
fs
ja
fdivrs
je
push
rclb
stos
sub
sbbl
cmp
sbb
or
push
xchg
test
jle
jae
or
ljmp
inc
mov
test
test
push
inc
stos
adc
sub
mov
int3
and
repz
mov
leave
insb
sub
je
lret
loop
rcrb
daa
aas
jge
adc
lods
xchg
pushf
inc
push
push
mov
bnd
xchg
sbb
pop
push
test
inc
clc
notb
cmp
push
lret
stos
xlat
scas
outsl
cmc
addr16
sub
popa
call
leave
loop
mov
sbb
jbe
ds
scas
loop
jns
jae
mov
xchg
int3
data16
mov
cmpsl
cmp
rclb
pop
cmc
call
adc
aaa
ss
shufps
push
dec
mov
push
adc
dec
addr16
cmpsl
test
outsl
cmp
adc
out
fsubl
jns
ljmp
fsubp
insl
repz
lahf
add
pusha
lock
cli
jae
sbb
inc
cld
add
xor
sti
push
dec
mov
xchg
stos
sub
adc
or
add
jo
ret
add
out
int3
scas
mov
sub
cmpsb
call
sub
adc
xor
sbb
jecxz
jno
shrl
xchg
out
cmp
scas
or
lds
add
inc
pop
call
jp
ficoml
loop
mov
subb
shll
inc
imulb
mov
fcompl
imul
dec
movsl
or
test
pshufw
pusha
jmp
imul
sub
add
dec
lods
pop
out
imul
popa
adc
pushf
sub
imul
push
test
jno
mov
imul
leavew
clc
flds
add
arpl
jo
lock
in
mov
dec
call
sbb
lds
scas
shll
aam
rcrl
xor
testb
stc
addr16
dec
jmp
jmp
push
sbb
imul
repz
mov
inc
push
outsb
movsl
scas
repz
hlt
mov
decl
mov
cmpsb
mov
addr16
fsts
fildll
stc
rcrb
xor
mov
sahf
and
add
xchg
inc
push
fst
je
push
push
lods
jo
scas
mov
adc
push
frstor
push
mov
xor
in
adc
mov
cmpsl
sub
push
movsl
insb
or
in
ret
add
lods
loop
rolb
adc
mov
mov
pop
dec
in
mov
jmp
xchg
cmpsl
hlt
test
mov
int3
add
and
insb
mov
mov
sbb
xor
shlb
and
push
lock
and
dec
out
push
jbe
or
dec
mov
inc
fdivr
popf
insb
push
xchg
arpl
xchg
mov
iret
mov
test
ds
test
ficoml
loopne
mov
jne
imul
dec
mov
insl
pop
cwtl
adc
jecxz
pop
mov
in
es
scas
mov
stc
push
add
and
cmp
adc
mov
outsb
mov
cmp
fwait
sbb
cmp
mov
mov
insb
lcall
xor
outsl
outsl
cmp
je
sub
int3
in
repnz
mov
and
cld
aas
scas
je
xchg
cmpsb
movsb
jo
mov
stos
icebp
rclb
fnsave
lret
xor
adc
insb
pop
in
mov
and
test
loop
sbb
out
out
sbb
mov
inc
xchg
sub
outsb
mov
shlb
jecxz
fbld
in
xchg
add
in
addr16
pop
rcr
pop
in
mov
and
dec
jnp
cmpsl
mov
xchg
clc
mov
lcall
adc
sbb
daa
imul
xlat
mov
and
bound
push
lcall
mov
jg
shlb
loopne
es
mov
mov
aam
sbb
addr16
and
lahf
dec
insb
pop
insl
jb
xor
push
outsl
loopne
movsl
das
add
add
fisubrs
dec
call
arpl
jnp
inc
pop
mov
push
lret
dec
xor
call
and
mov
subb
idivb
outsl
mov
jmp
daa
int3
pop
inc
inc
fdivl
fs
icebp
pop
icebp
sub
pop
xor
add
int3
push
and
out
dec
das
lcall
or
mov
mov
repz
mov
testb
push
inc
stos
adc
test
mov
ljmp
scas
mov
nop
fiaddl
push
sahf
mov
imull
pop
push
int
neg
pop
call
and
lds
orl
in
lret
mov
imul
in
ret
addb
xor
add
push
hlt
insb
and
xlat
gs
adc
ret
push
jae
and
out
out
pushl
pusha
sarl
jo
mov
popl
xorl
sbb
mov
push
lds
lret
insb
mov
cmpsb
je
cld
pop
ret
out
inc
jmp
sarb
in
ljmp
fisubs
ja
xchg
ljmp
xchg
jmp
lcall
shlb
jbe
insb
push
inc
cltd
push
pusha
enter
push
jmp
pop
sub
rolb
pusha
xchg
jbe
ljmp
into
nop
pop
xchg
pop
inc
mov
cli
sbb
shr
loop
iret
or
mov
jg
jle
adc
test
int
push
loop
adc
int3
ficoms
xchg
test
mov
shl
adc
sbb
shll
pop
popl
adc
call
sub
push
xchg
out
loop
sbb
inc
fs
pop
outsl
jmp
jno
xchg
enter
scas
add
movsb
loop
xchg
dec
mov
leave
cmpsl
out
or
and
xor
addl
and
aam
xchg
loopne
cmp
sbb
pop
insl
jg
call
push
outsb
jbe
pushf
je
push
insl
insl
into
je
gs
mov
out
inc
loop
int3
and
inc
jno
mov
push
popf
xor
jmp
insl
ljmp
push
sub
out
jo
mov
mov
push
test
fdiv
sbb
ja
xor
stos
fdivp
mov
call
jo
xor
arpl
xor
movsl
push
and
or
lods
mov
nop
repz
orl
testl
xchg
fdivl
std
mov
aaa
inc
sbb
push
mov
leave
das
out
sbb
cs
fisubrs
iret
inc
ljmp
daa
mov
and
dec
out
pop
call
or
jb
jmp
mov
adc
inc
sub
dec
and
ja
popa
inc
shlb
imul
clc
sub
cmp
rcrl
adc
jno
add
scas
push
ret
divl
mov
mov
test
mov
sahf
lods
jmp
repnz
jb
in
xchg
pop
xor
jle
loopne
ss
fidivs
sti
decl
shll
arpl
mov
daa
es
mov
fs
lcall
dec
mov
sub
clc
dec
and
orl
ja
dec
lea
xor
xchg
cld
popa
mov
push
push
fadd
pop
cmp
lret
inc
rolb
xor
loopne
mov
arpl
push
ds
addr16
lret
in
loopne
jg
loopne,pn
decb
outsl
jle
mov
call
mov
movsl
pop
or
push
into
jp
loop
pop
std
xchg
and
into
cli
mov
add
leave
das
das
in
enter
sub
fnstcw
test
fs
imul
icebp
inc
push
rolb
mov
push
push
scas
out
inc
mov
mov
sarb
in
std
call
lahf
movsb
jb
sub
ljmp
inc
mov
xchg
fucomi
pop
cmp
addr16
inc
roll
insl
lock
imul
sahf
inc
loop
and
pusha
imul
pop
data16
rolb
ret
js
add
ds
and
test
out
lock
xchg
aam
sub
dec
insb
mov
mov
xchg
xor
loopne
daa
xchg
adc
insb
in
push
mov
mov
dec
iret
jne
push
sbb
lods
loope
icebp
xchg
mov
and
out
je
dec
enter
call
loopne
or
mov
outsl
call
loop
mov
cmpsl
call
scas
lea
les
fistps
inc
mov
in
pusha
bound
out
push
sbb
adc
jecxz
insb
jle
shl
aaa
jle
bound
pusha
xor
stos
arpl
enter
and
push
out
push
andl
iret
pop
lahf
push
mov
push
dec
outsl
fs
cmp
dec
mov
hlt
fcomps
jg
mov
lods
jecxz
fs
icebp
incl
cwtl
shrl
or
jbe
mov
push
shll
mov
push
and
dec
sahf
pop
jae
sbb
xor
outsb
sti
ljmp
jp
stc
xchg
dec
pusha
clc
clc
js
testl
jbe
cmc
dec
jne
hlt
clc
je
repz
jae
repnz
cmpsb
jl
lock
dec
jo
out
clc
outsl
and
in
ljmp
insb
pusha
jmp
imul
ljmp
push
and
in
sbb
sub
or
das
lods
sbb
repnz
das
mov
push
hlt
aas
sbb
lods
cmc
das
icebp
inc
cwtl
xchg
hlt
jmp
fisubrl
mov
adc
adc
out
lret
mov
into
mov
add
sbb
fs
aam
das
push
jl
in
push
fiadds
jo
mov
dec
imul
loopne
jp
gs
pusha
stc
call
jns
pusha
mov
dec
std
js
call
inc
jo
loopne
ja
xchg
leave
pusha
imul
jae
or
jbe
lock
dec
dec
outsl
cmc
pusha
jmp
nop
sub
shr
hlt
loopne
out
adc
jg
pusha
repz
jae
bound
dec
js
call
inc
jo
loopne
jnp
subb
mov
les
pusha
ja
pop
sub
dec
loopne
out
or
outsl
sub
dec
int
out
loopne
in
loope
sub
imul
jg
pusha
push
call
in
push
mov
loopne
bound
outsl
jmp
push
popf
sub
fnstsw
sub
or
push
jp
inc
dec
jmp
xchg
dec
hlt
js
call
pusha
or
push
jo
loopne
imul
cmp
jg
pusha
in
adc
dec
popa
in
push
loopne
in
sbb
mov
stc
addr16
loopne
push
mov
and
xor
and
popf
mov
dec
mov
rclb
jecxz
add
lret
dec
jmp
cld
sbb
or
ss
or
pop
jnp
daa
dec
add
and
or
or
orb
cld
xchg
mov
sub
mov
test
lods
push
inc
insl
cli
test
jmp
dec
movb
jmp
mov
mov
nop
lods
inc
push
adc
ljmp
cld
adc
bound
outsl
test
sub
cmp
std
pop
in
xlat
andl
loop
mov
cli
cmpsb
aad
sbbl
xchg
outsl
je
hlt
fistl
or
fmull
and
mov
fs
addr16
cmp
xchg
push
inc
jg
pop
or
ljmp
jecxz
roll
push
jl
pop
inc
add
daa
test
sbb
outsl
es
scas
outsl
loopne
subb
push
jle
lds
dec
stc
fnstcw
testb
jne
fwait
jns
push
loop
mov
sbb
jb
repnz
leave
outsb
jo
in
loop
fimull
out
pop
outsb
rcr
inc
negl
lea
nop
call
aad
pop
faddl
loopne
or
dec
fwait
cld
leave
jp
lock
cmpb
xchg
into
hlt
inc
fnsave
ljmp
sbb
arpl
push
pusha
gs
dec
cmpsl
sub
scas
jbe
push
xor
xor
loopne
es
push
nop
push
jo
test
scas
fildll
loopne
pusha
xchg
inc
jmp
ret
loope
je
push
mov
std
xchg
inc
clc
pusha
push
test
stos
or
scas
std
xchg
push
call
dec
mov
jmp
jle
in
lods
and
les
scas
xchg
adc
rcrb
ret
pop
and
jle
out
xor
inc
scas
pop
mov
adc
fisttps
pop
xchg
ficompl
in
lahf
jle
xor
inc
arpl
aaa
insb
push
minps
hlt
sbb
clc
xchg
cmp
fwait
pop
lcall
mov
dec
sahf
xor
popa
sub
in
push
push
xor
popa
test
lock
push
das
popa
xlat
add
sub
or
sub
push
mov
call
icebp
xchg
call
enter
jo
jae
insb
shl
outsb
hlt
push
outsl
clc
xor
jo
push
scas
imul
mov
or
repnz
dec
jo
inc
insl
push
pop
pop
or
popa
pusha
push
cli
mov
loope
imul
inc
out
sbb
dec
lcall
js
sti
out
cmc
cmp
xor
imul
imul
hlt
jle
std
pop
je
js
xor
dec
repz
in
roll
jle
ja
in
popa
fs
inc
jo
jne
jmp
sub
push
or
clc
dec
in
lock
mov
pop
jo
ljmp
pop
outsl
push
rcrb
push
loopne
push
std
sub
rorb
mov
add
cld
push
pause
fwait
mov
out
aaa
iret
mov
rcrb
or
out
repz
call
jl
pusha
xchg
jbe
out
cmp
insb
dec
daa
pop
or
ljmp
adc
lret
jl
imul
jb
xor
rorb
push
test
daa
or
imul
imul
insl
adc
scas
cli
dec
fnsave
andl
jmp
arpl
aaa
enter
jecxz
cmpsb
call
mov
inc
xchg
dec
xchg
sbb
add
push
dec
bound
push
sub
sbb
jle
testl
sti
sub
adcb
jo
insb
rcrb
in
mov
pushf
aaa
jns
adc
aaa
loope
imul
aad
notb
test
iret
insb
mov
imul
loop
or
insl
cmc
pusha
jo
and
roll
sbb
jmp
and
mov
mov
repnz
in
out
jnp
test
outsl
stc
addr16
mov
int3
mov
mov
ljmp
fs
cld
scas
loopne
movsb
mov
dec
call
outsb
scas
jmp
push
xchg
pop
fs
jmp
push
pop
dec
xchg
hlt
lods
jecxz
in
xchg
or
and
inc
in
pusha
or
movntq
lods
js
and
out
out
xchg
arpl
or
in
outsl
adc
xlat
sub
pushf
pop
dec
clc
int
add
dec
adc
call
xor
cmp
js
push
lea
push
lods
push
pop
or
insl
ds
pop
and
call
push
and
scas
dec
xor
lock
cmp
fistps
in
gs
inc
sub
jae
mov
sbb
pop
adc
or
xchg
xor
popa
test
push
popa
jb
push
dec
clc
in
mov
ja
sub
cld
cld
lahf
aad
int3
in
cmpsb
inc
add
mov
jl
jmp
ret
xor
jo
enter
rorb
xchg
push
divb
xchg
outsl
cmp
or
test
testl
jmp
ret
inc
insb
mov
dec
or
jae
ret
leave
jo
out
jg
xchg
enter
jmp
dec
jo
outsb
cmp
popf
daa
call
cli
xchg
lahf
into
or
dec
repz
jle
lds
mov
jmp
and
xor
insl
inc
lock
or
mov
xchg
jne
mov
daa
mov
in
mov
cmp
clc
pop
outsl
in
mov
sub
pop
pop
push
dec
jae
lahf
aas
dec
lods
out
fnstenv
sub
std
sub
in
bound
push
fs
fidivrl
pop
adc
and
adc
cmp
ret
jg
lods
repz
pop
push
test
pop
ljmp
stc
pusha
movsb
inc
in
outsl
jns
sub
scas
lret
sub
xchg
lods
adcb
test
jns
add
loope
mov
inc
daa
sub
js
pop
xor
cmp
mov
or
arpl
arpl
aas
outsl
mov
cmp
inc
sub
cmp
jo
mov
or
dec
insl
xor
or
out
or
imul
shl
inc
int
pushf
aad
inc
gs
lret
call
out
or
lods
iret
jno
or
addr16
imul
mov
aam
les
adc
push
jge
repnz
scas
scas
cltd
sar
fs
test
scas
les
xchg
cwtl
loop
inc
inc
out
leave
js
outsb
mov
outsl
or
dec
lock
dec
cld
aad
inc
jecxz
fistl
scas
mov
in
inc
aaa
push
mov
jle
out
imul
pusha
imulb
sbb
imul
push
and
jbe
push
jo
sbb
inc
jbe
push
dec
or
sub
mov
sbb
outsl
jo
jnp
cld
mov
test
jo
jne
icebp
scas
hlt
mov
mov
jecxz
in
push
jge
imul
lock
pop
and
imul
push
into
jg
pusha
mov
jae
xchg
fldt
insl
dec
jl
and
jmp
pop
push
jg
and
out
push
push
push
pop
out
jp
push
data16
daa
jg
or
scas
jo
insl
fsubl
inc
rcll
adc
out
fstp
gs
add
in
mov
dec
xchg
ror
cmp
ss
sub
call
test
outsb
push
jmp
out
jb
sub
js
sarl
mov
pop
pop
push
out
test
adc
add
mov
aaa
hlt
xor
xor
pusha
insl
xor
jne
pusha
nop
or
pop
dec
pusha
mov
out
mov
iret
xor
pop
nop
or
push
pop
pushf
outsb
or
in
daa
pmulhuw
jmp
or
leave
inc
mov
inc
sub
sub
lods
das
lcall
cli
pop
mov
addb
cmp
mov
rolb
cmpsl
mov
dec
stos
mov
mov
lahf
mov
dec
repnz
or
repz
ljmp
outsb
imul
adc
out
in
mov
sub
pop
mov
mov
jmp
jo
add
jecxz
adc
sbb
sbb
in
dec
out
dec
out
int3
out
mov
jns
rcll
ja
xchg
push
imul
or
jo
out
repnz
cmpsl
call
sahf
fisubl
outsb
repnz
scas
insl
push
and
push
add
push
jl
jp
jl
ljmp
mov
js
insb
dec
jo
jge
jnp
mov
das
addb
add
jmp
push
imul
cli
call
repz
cld
sbb
cmpsl
faddp
icebp
mov
ficomps
iret
cmp
das
jg
idiv
jne
pushf
outsl
pop
pusha
daa
divl
shrl
xchg
cwtl
decb
xchg
icebp
nop
aas
push
test
xchg
or
xor
leave
or
xor
xchg
movsl
incb
cmp
sub
add
out
dec
orb
das
jg
les
add
arpl
pop
call
mov
mov
push
out
bound
and
loope
push
push
out
rclb
xor
lods
push
pop
into
dec
insb
xchg
jle
in
jo
scas
int3
mov
fdivp
sbb
in
cli
pop
pop
cmp
push
push
outsb
inc
dec
test
fisubs
pusha
adc
js
and
aas
sbb
orl
mov
jp
popf
fsubrp
in
sub
dec
into
filds
pop
test
stos
sub
jns
mov
and
aaa
inc
ficomps
js
jno
ret
cld
add
call
lret
lcall
sub
addr16
bound
jno
inc
out
mov
lods
loope
mov
jne
enter
std
or
cmp
cmp
insb
popf
sahf
std
call
lds
jl
clc
pop
xor
mov
je
jmp
out
daa
add
xor
inc
mov
lret
lahf
pop
cmpsb
sahf
cli
lea
inc
in
mov
das
pop
mov
mov
imul
pop
mov
scas
and
mov
and
gs
cmp
in
mov
sti
lret
stos
adc
stos
pusha
dec
xchg
sub
mov
jmp
xchg
xor
or
jae
enter
arpl
and
aaa
test
mov
arpl
pop
dec
xor
sub
push
or
xor
or
test
pop
mov
jns
addr16
pop
adc
popf
test
test
mov
dec
and
cltd
mov
mov
mov
jmp
ja
insb
outsl
cld
testl
xchg
popa
or
push
sti
inc
jge
out
out
mov
jne
jmp
sbbb
jp
and
and
or
jmp
movl
in
std
rclb
scas
fcomi
pop
imul
out
outsl
call
iret
mov
shrb
inc
loope
out
out
int3
iret
dec
test
xor
cmp
jle
jmp
rcr
jg
cmp
loop
psubw
popf
cmpl
or
hlt
mov
dec
xor
mov
push
or
in
xchg
sbb
lods
push
lea
xor
in
jmp
push
dec
sub
inc
jae
insb
shl
xchg
jg
mov
stc
in
rclb
cmp
stos
js
lds
sub
enter
hlt
cli
fmuls
pop
xor
mov
push
jecxz
icebp
mov
cli
and
sbbb
rclb
inc
mov
pushf
bound
ss
outsl
dec
dec
lods
cmp
ja
xchg
xor
push
lcall
into
cmp
push
adc
mov
inc
call
imul
dec
idivb
pusha
imul
fisubrs
jle
jne
imul
jge
push
inc
dec
insb
pop
inc
popa
dec
test
dec
call
or
or
dec
jl
inc
in
jle
in
sti
dec
jne
hlt
push
fs
movsb
pop
out
inc
add
movsb
inc
dec
imul
sub
sahf
imul
dec
dec
add
add
jp
bnd
mov
outsl
dec
jne
xor
jne
xchg
call
popf
enter
idivb
jns
rorw
dec
sti
pop
ja
push
lock
rcr
out
push
xchg
xchg
push
pop
out
fnstsw
mov
scas
frstor
and
push
jecxz
js
add
testl
jl
scas
or
in
mov
sub
inc
cltd
loopne
es
fdivrp
cli
push
int3
shlb
movsl
nop
and
push
cwtl
add
sub
dec
outsl
in
hlt
out
lds
push
nop
sub
jae
in
les
push
mov
sub
jmp
lock
ja
mov
idivb
inc
mov
fistpl
pushf
jg
std
cmc
push
dec
dec
mov
fistpl
mov
mov
dec
fcoms
sbb
fsubp
mov
pop
mov
outsb
repnz
inc
jecxz
daa
les
aaa
push
and
dec
push
aaa
push
testl
call
pusha
lea
cmp
in
jecxz
add
inc
adc
outsl
in
sbb
int3
daa
inc
adc
adc
or
dec
xchg
sbb
or
sub
stc
lret
rclb
cmp
js
test
mov
ljmp
scas
cli
lods
jge
scas
ret
fs
in
push
out
cmp
sarb
adc
enter
push
dec
outsb
or
outsl
jo
mov
inc
sub
dec
lret
dec
push
scas
or
dec
daa
mov
int
arpl
in
icebp
or
movsl
xchg
dec
gs
popa
pop
push
out
mov
xor
decl
fucom
pop
push
loopne
insl
test
enter
sbb
loopne
jns
xchg
fwait
mov
js
movsl
jecxz
lock
insl
or
jae
dec
shlb
bound
icebp
lods
sub
mov
pusha
jae
dec
xor
or
in
jmp
sub
dec
cwtl
lock
std
jb
sahf
mov
pop
xchg
mov
push
sbb
push
das
xor
xadd
adc
out
lret
or
push
push
xlat
into
call
iret
xor
and
hlt
dec
stos
pusha
xchg
mov
int
push
cmp
fdivrl
dec
insl
mov
addb
push
mov
add
push
int3
pop
shr
std
pop
xchg
push
pop
lods
push
roll
insb
into
clc
dec
sub
sub
outsl
or
dec
jmp
sub
stc
stos
rolb
cmp
call
lds
sbb
xor
jnp
imul
mov
sbb
mov
or
sbb
push
dec
pop
xor
add
xor
cmp
push
call
sub
in
sub
push
in
call
arpl
loop
mov
test
int3
imul
mov
movsl
sub
mov
ss
push
mull
dec
xlat
les
cltd
int3
aad
imul
mov
mov
xchg
jmp
jle
je
jb
xorb
loope
in
adc
enter
nop
cmpsl
dec
daa
dec
sub
sub
inc
cmp
xor
and
add
sbb
mov
sub
popfw
lea
mov
sbb
outsb
icebp
dec
shlb
flds
out
pop
push
xchg
enter
js
icebp
or
dec
rclb
cmp
loope
imul
int3
test
lods
xor
adc
push
xor
jb
push
dec
and
out
mov
mov
lock
dec
hlt
or
pop
jmp
sub
jg
cmp
loop
mov
inc
dec
and
outsl
xor
cmp
push
lret
stos
mov
mov
push
jg
jl
cmpsl
sub
jp
cmpsb
or
jo
in
psubsw
cltd
mov
xor
jo
fsubl
xchg
and
xor
inc
mov
dec
insl
push
dec
cld
fwait
jo
daa
stc
outsb
add
inc
inc
arpl
movsb
dec
lock
movsb
outsl
inc
jo
dec
cmp
insl
sbb
inc
push
jb
inc
insb
sti
mov
stc
insl
fnsetpm(287
repz
call
fucom
sbb
in
dec
notl
or
mov
mov
mov
pusha
movsw
jo
dec
pop
jle
inc
inc
test
cmp
inc
dec
pop
ret
or
push
out
xor
mov
das
sbb
lock
imul
test
push
jb
push
or
cmp
adc
mov
mov
popa
sbb
and
xor
call
push
out
fadds
dec
sbb
je
lcall
call
mov
mov
mov
pop
lcall
sbb
mov
xchg
pop
jmp
jge
xchg
pop
fiadds
sti
test
push
ret
rcll
and
jl
aad
enter
cld
adc
mov
jge
mov
fldenv
js
jnp
mov
pop
adc
daa
xchg
sub
sub
jno
je
daa
mov
insb
sbb
outsl
mov
mov
pop
fidivl
or
adc
add
je
or
xchg
sub
js
dec
insl
iret
sub
pop
test
lock
repnz
adc
fistpll
push
es
push
adc
adc
jo
fmull
sbb
jne
jo
add
pop
lea
inc
hlt
test
outsb
xchg
push
loopne
in
popf
ja
pusha
repz
jnp
sub
insl
jg
fmuls
cltd
xchg
xor
out
mov
dec
dec
outsl
lea
lret
mov
jle
imul
sub
mov
loop
out
xchg
jle
movsb
pop
lods
shlb
push
cmp
call
out
int
rcll
cmpb
sub
dec
insl
hlt
lret
xchg
mov
mov
cmp
xor
pop
or
lock
in
sub
dec
adc
call
ret
repnz
jmp
loopne
outsl
fbld
or
insb
pop
dec
mov
pop
out
adc
divb
hlt
mov
jg
pop
aam
dec
xor
lret
xchg
mov
xchg
jge
cld
pop
sub
jo
test
cld
enter
add
loope
dec
aaa
popf
sbb
aaa
iret
dec
push
loopne
ljmp
cmp
je
imul
ret
shrl
adc
inc
je
fstl
fisubs
out
dec
shr
popf
filds
fbld
cmpsb
js
loop
or
lods
std
cmp
stos
dec
mov
xor
or
fidivs
dec
outsl
xor
popf
inc
inc
and
jecxz
cwtl
cmp
xor
testl
cmpsb
xchg
cmp
and
lods
in
lods
and
fs
jg
repnz
xchg
iret
push
jo
std
into
outsl
pop
cmp
mov
je
adc
xchg
out
pop
cmp
insb
int3
xchg
mov
cld
pushf
pop
out
lcall
cmp
xor
dec
iret
push
shrl
mov
rcrb
adc
nop
pusha
in
not
dec
mov
push
xor
and
xlat
mov
aas
dec
popa
sbb
insb
sti
sub
bound
loopne
icebp
out
mov
dec
rorb
xor
push
fistl
addr16
int3
in
dec
jle
outsb
dec
call
inc
dec
pop
mov
scas
jge
je
dec
ds
insl
mov
pop
inc
fs
xchg
ja
pop
loope
adc
daa
xchg
xchg
dec
fwait
iret
and
imul
xlat
arpl
movsl
xlat
jb
push
inc
lds
inc
je
push
or
cmpl
jnp
and
fs
lods
out
imul
adc
icebp
and
popa
shlb
pop
fdivp
jo
mov
js
mov
cli
cmp
and
dec
psubw
cmp
dec
leave
bound
xorl
adcb
jmp
add
jp
insl
stos
sbb
mov
mov
loopne
outsl
adc
out
mov
ds
into
icebp
xchg
cltd
arpl
cmp
out
mov
fisubs
scas
cmp
mov
aas
pop
scas
jbe
push
cltd
ja
lahf
in
cwtl
loopne
test
scas
dec
enter
pop
out
xor
jle
inc
or
xchg
fsubs
inc
adc
cs
fcomip
push
gs
in
pop
mov
pop
pop
dec
fsubrl
hlt
add
jb
mov
mov
fndisi(8087
cmp
leave
cwtl
out
scas
jb
dec
sub
in
popa
mov
cwtl
lock
lds
int
lret
popa
jp
cmp
mov
scas
iret
jo
lods
add
xchg
hlt
cmp
sbb
xchg
dec
sub
sub
ret
sbb
mov
jle
jl
movsl
addr16
xchg
jne
pop
imul
loopne
das
outsl
dec
and
out
cld
mov
add
cltd
leave
mov
in
jo
addr16
loopne
mov
fs
gs
xor
jno
xchg
ffreep
hlt
ljmp
sbb
jge
dec
enter
dec
repnz
sbb
repnz
hlt
fwait
xchg
idiv
xor
push
imul
mov
mov
pop
test
loop
jg
je
lea
or
addr16
push
addl
mov
fcompl
test
mov
cs
jne
aad
lea
imul
adc
repnz
pop
imul
outsb
fdivp
add
push
or
adc
sti
imul
loopnew
shrl
rcll
arpl
ljmp
insb
in
ficomps
movb
and
add
bound
inc
es
sub
jne
stc
cwtl
sub
adc
mov
jp
jae
leave
or
outsb
jbe
out
fucom
sub
in
lds
jb
inc
stos
pushf
xor
mov
mov
dec
scas
xor
dec
jle
mov
repz
sub
addr16
xchg
aam
lock
ja
dec
in
add
incl
roll
mov
xchg
jp
add
pop
outsb
mov
lock
jno
pop
cmpsb
xchg
and
inc
add
test
mov
pop
imul
dec
cmp
les
fldl
pop
gs
sub
or
cld
aaa
inc
lcall
rcr
jmp
or
xchg
test
aaa
add
and
xor
pop
cmc
add
push
subl
cmp
pop
les
cs
push
outsl
or
outsl
or
cmp
daa
out
scas
loopne
leave
outsl
cld
imul
lcall
movsb
add
imul
mov
mov
fists
sub
jmp
jge
sbb
and
imul
cmp
xor
mov
mov
sub
gs
mov
pop
scas
lret
sub
sub
sbb
and
int3
insl
cmpl
fcomps
sub
cmp
pop
repz
sar
popa
sbb
loopne
rorb
ja
push
or
dec
dec
in
xchg
test
jecxz
push
iret
imul
cs
or
and
out
or
xchg
inc
mov
add
std
pusha
pusha
lock
in
add
cmp
dec
inc
stc
and
fsubr
xchg
pop
aaa
push
bound
sbb
iret
insl
adc
or
push
pop
pusha
clc
ds
out
push
dec
call
out
outsl
pusha
pop
jo
or
mov
enter
mov
sub
out
loop
out
jo
incb
das
dec
dec
dec
lock
scas
push
lock
mov
jg
or
aaa
imul
jle
rorl
in
fs
pusha
push
adc
mov
sbb
mov
ret
loopne
repz
adc
iret
xor
jae
std
loopne
fs
mov
push
jb
insb
sahf
popf
dec
sub
pusha
jo
insl
mov
push
scas
jmp
test
jle
out
repz
or
clc
jle
lock
inc
or
jb
cld
mov
push
data16
pop
div
mov
xchg
loopne
sbb
std
dec
lret
or
sbb
in
int3
out
jg
dec
jo
jge
or
movsb
pop
inc
test
lods
add
mov
and
outsl
and
shl
and
cmp
ljmp
jo
or
and
sbb
pop
loop
lahf
loop
jae
push
cld
xor
cmp
jecxz
lds
xor
into
mov
push
inc
test
jecxz
loopne
xor
xchg
data16
inc
loopne
mov
nop
jnp
mov
out
jecxz
cli
and
int3
adc
pop
jp
jo
mov
adc
data16
scas
dec
jmp
pop
xchg
das
adc
insl
idivb
out
pop
jg
loop
pusha
jo
subl
add
fwait
idiv
aad
adc
dec
sbb
dec
inc
or
addr16
int
outsl
loopne
lret
sub
mov
test
mov
in
or
pop
es
out
int
sbb
das
mov
and
pop
or
stos
call
xchg
loop
fwait
js
sbb
add
out
cwtl
or
sbb
sub
mov
pusha
out
adc
addr16
jle
jl
enter
loopne
push
cmpsb
mov
inc
add
aas
cli
testl
inc
sub
imul
and
lahf
dec
frstor
out
arpl
out
push
adc
cmpsl
clc
jns
sub
pusha
jo
jp
xchg
daa
bound
mov
outsb
or
out
and
int3
sub
mov
xchg
jae
sahf
xchg
or
cmp
pop
imul
int3
stos
sub
lock
dec
aam
push
mov
scas
inc
es
adc
fisubrs
dec
popa
adc
push
in
fwait
daa
pop
pop
or
or
jnp
mov
lcall
cmp
loope
gs
or
dec
out
mov
xchg
add
sub
pusha
dec
in
dec
push
push
jp
ret
pop
xor
loope
jae
sub
mov
and
mov
adc
jo
mov
arpl
or
mov
cmpsb
ret
imul
or
adc
or
inc
jo
cwtl
jl
or
adc
mov
data16
pop
push
mov
jge
sbb
adc
jne
inc
jl
lods
jg
loopne
push
sbb
fcomps
stos
and
lea
cmp
aas
je
rcll
dec
push
jge
shll
shrl
insl
pop
sbb
scas
outsb
cwtl
cmp
iret
jns
out
mov
fisubs
sbb
mov
xor
pop
enter
scas
call
inc
outsb
ljmp
inc
clc
incb
mov
scas
inc
in
movsb
lock
in
adc
cmpsl
jo
mov
dec
out
out
xchg
loopne
xchg
insl
pop
jle
xchg
add
mov
leave
adc
sbb
mov
mov
faddl
in
jle
xchg
mov
sub
shrl
data16
test
lock
dec
mov
jle
cmp
inc
or
stc
sbb
mov
jg
popf
dec
fists
ficomps
mov
adc
adc
rcr
inc
jg
or
xor
out
jg
into
and
cmpsb
lret
fadd
out
push
int3
and
repz
popa
repz
lods
out
adc
in
mov
dec
jecxz
add
rcll
ja
inc
repz
cwtl
popa
out
insb
fs
iret
rcrb
ss
dec
sub
xor
in
add
xchg
jmp
cltd
xor
stc
fdivrl
xchg
out
pop
stc
xchg
in
xlat
jne
shll
into
or
out
arpl
scas
fcmovnbe
out
jg
jg
push
xchg
jbe
inc
pop
dec
sti
mov
test
jne
scas
stc
orl
push
subb
jg
xchg
scas
dec
dec
mov
insl
dec
lret
test
mov
mov
pop
and
je
or
add
in
xchg
pop
or
mov
sub
dec
adc
rclb
in
sbb
cld
push
push
out
shll
mov
out
insl
mov
movsb
add
and
shl
inc
in
xchg
pop
gs
iret
mov
clc
je
add
clc
pop
cmp
aas
rcrb
push
das
outsb
adc
pop
xor
dec
mov
aam
ljmp
xchg
addr16
mov
icebp
mov
hlt
xchg
cmp
jbe
je
jnp
mov
test
aas
adc
out
dec
fldl2e
xchg
and
push
push
push
pop
insb
inc
fisttpll
sub
arpl
es
int3
push
nop
mov
dec
imul
sub
xor
loopne
jp
cmpb
ss
aaa
call
sbb
sbb
jge
movsl
sub
in
cmp
repnz
mov
push
xchg
jg
inc
cmp
inc
cmp
push
sbb
jp
ret
dec
nop
inc
ret
imul
leave
pop
movl
jl
bnd
mov
mov
sub
repnz
cmp
dec
js
adc
push
or
push
cmp
xor
mov
add
repz
or
dec
jno
lock
cwtl
adc
pop
cs
mov
aam
cmp
lret
jge
in
sub
mov
push
xor
jle
int
or
inc
jb
pextrw
push
les
pop
outsl
fwait
cmpl
inc
data16
lock
in
jg
movsb
mov
dec
xchg
sub
hlt
data16
fldenvs
dec
push
xor
and
repz
mov
cmpsl
hlt
or
push
fisubs
shll
pusha
mov
push
cli
fs
pusha
mov
or
xor
inc
inc
daa
scas
jb
insb
in
out
nop
cmp
imul
in
cmp
psubsw
or
push
int
ss
add
js
push
sarb
rol
jne
xor
jae
cmp
adc
or
cmpsb
fs
js
and
int3
sbb
jecxz
out
cmpsb
ljmp
cmp
popf
outsb
scas
loope
ja
cmp
adc
push
or
cmp
or
pop
inc
enter
stos
repnz
jae
adc
jns
cmp
or
xchg
push
pusha
or
fwait
push
push
and
mov
xchg
mov
pusha
repnz
out
in
mov
lods
enter
jae
cmp
je
negl
or
xor
add
inc
pop
lahf
out
pop
xor
bound
clc
mov
xor
testb
sub
cmp
test
in
shll
or
mov
int
jne
lods
inc
jb
int3
shrl
push
into
clc
in
dec
xor
adc
sbb
insl
push
stos
mov
and
push
jg
push
mov
mov
jbe
mov
enter
jnp
adc
scas
cmc
sub
sub
ljmp
adc
outsb
cmpsl
push
in
dec
dec
mov
gs
addr16
jl
movsw
and
cmc
imul
cld
insb
outsl
push
adcb
ss
cmc
sub
sahf
adc
fwait
cli
add
out
jbe
push
push
xchg
add
cli
ja
outsl
arpl
rcll
mov
rcrl
xchg
pop
sub
stos
das
xor
popf
xchg
sbb
lea
mov
lret
mov
repnz
out
mov
dec
pop
insl
cltd
mov
adc
cld
shlb
push
icebp
cmp
cltd
push
je
fucomi
mov
je
fistps
outsl
insl
loopne
sbb
lret
dec
lock
or
jne
test
sarl
pusha
lret
fldt
imul
inc
pop
pop
outsb
outsb
cmpsl
mov
dec
imul
inc
and
adcb
jmp
jae
aas
dec
iret
inc
sbb
jbe
outsb
mov
dec
fst
jle
pop
adc
mov
lret
dec
sub
mov
xchg
adc
mov
or
inc
repz
in
loope
xchg
pop
mov
fsts
aas
adc
jge
or
loop
icebp
jg
xchg
dec
mov
mov
xchg
push
or
adc
sahf
dec
ret
jp
bound
push
in
in
jmp
sub
xor
rcrb
jo
sub
push
sub
movsb
sahf
outsb
loope
jmp
outsb
pop
out
jo
jmp
lret
dec
sub
push
or
outsl
loop
jnp
je
call
inc
xchg
outsl
jb
out
inc
mov
push
das
orb
insl
cmp
loop
hlt
adc
imul
loopne
xchg
outsl
lcall
xor
pop
call
sbb
addb
sbb
imul
insb
call
loopne
rorl
lods
outsl
clc
js
inc
adc
sti
call
call
or
outsb
lods
es
sbb
cmc
xchg
mov
push
sub
add
sub
mov
xchg
inc
mov
push
push
prefetch
sub
pop
clc
les
popa
sbb
jecxz
or
movsb
sub
lods
orb
iret
adc
sub
lret
jns
xor
pop
adc
push
fbld
jbe
jle
bound
insb
cmp
bound
mov
xor
cmp
jbe
xor
icebp
sbb
sub
inc
cmp
outsb
test
daa
in
inc
mov
imul
insl
aaa
dec
mov
outsl
sub
cmc
popf
lods
clc
rorl
sub
jb
mov
pop
mov
out
ds
icebp
push
inc
inc
testl
ret
mov
sbb
mov
xchg
dec
jg
clc
push
shr
nop
pop
inc
scas
pop
push
or
push
inc
in
cmp
mov
out
pop
cmpsl
cltd
xlat
outsl
add
jecxz
outsl
daa
mov
push
fldcw
adc
js
cmpsl
nop
lret
push
js
scas
fucom
push
sbb
adc
cli
xor
ret
jmp
and
lret
addr16
sub
aaa
jo
insb
dec
out
push
sub
xchg
loop
adc
dec
xchg
addr16
sub
aam
dec
cmp
push
je
add
ret
push
dec
add
leave
dec
adc
jnp
cmpsb
add
das
jecxz
dec
cmp
mov
mov
cmpsl
jl
sub
mov
cmpsl
and
xchg
cmp
and
scas
jp
test
jne
pop
and
aad
clc
add
push
mov
int3
fcompl
pop
pop
jmp
dec
sbb
fists
mov
mov
ds
mov
jns
pop
loop
inc
clc
or
dec
rorl
jge
aad
pop
shl
stos
mov
mov
mov
inc
test
jg
inc
in
pusha
add
repnz
out
inc
js
mov
jg
jl
xor
outsb
mov
jae
out
pop
lcall
jns
mov
cwtl
mov
into
jne
fs
std
js
lret
in
cltd
psubsb
js
pusha
pop
retw
xchg
insl
pop
js
cwtl
jg
in
daa
jne
nop
loopne
out
add
ficoms
pop
in
sub
xchg
jg
jb
call
ja
push
test
sbb
out
xchg
mov
inc
aaa
pop
stc
fs
pop
movsl
push
xor
jg
js
outsl
xor
loopne
outsl
pop
outsl
push
aad
xor
loop
nop
add
pop
sbb
aam
imul
xor
lods
in
xchg
daa
push
cmp
inc
lret
add
jecxz
and
test
cmp
cs
and
lods
dec
sub
js
mov
push
popf
mov
ficoms
call
pop
nop
into
push
shlb
ret
push
imul
xchg
lods
or
shr
pop
jmp
fimuls
lds
add
int
gs
add
cmp
gs
popf
jmp
clc
movsl
sub
cmp
out
xchg
scas
and
inc
dec
clc
adc
lods
out
pop
sub
outsl
ret
cmp
out
call
flds
clc
push
in
inc
lcall
xor
jecxz
jp
mov
pop
repz
sbb
iret
mov
lds
rcll
jo
scas
mov
cmp
in
adc
repnz
inc
aas
push
jb
dec
in
adc
mov
mov
shrb
pop
dec
jo
or
hlt
sbb
nop
clc
dec
fs
pop
leave
pop
cmp
lock
andb
mov
push
mov
cli
sub
loopne
dec
pusha
std
ss
push
ja
in
stc
cmpsb
pusha
es
inc
inc
divl
dec
sub
xorb
lahf
jle
pop
ljmp
fists
adcb
or
inc
add
rclb
cmp
or
icebp
in
pop
mov
outsl
mov
sub
push
stc
sbb
dec
dec
add
cmp
je
push
sub
dec
out
das
test
jge
in
dec
jbe
pop
or
pop
mov
jmp
iret
and
jl
inc
xor
inc
stc
jg
push
xor
adc
dec
shl
adc
sahf
jo
enter
mov
inc
call
fs
push
scas
test
cwtl
cwtl
or
hlt
xor
loopne
xchg
sbb
cmp
mov
jmp
stc
xchg
movsl
fs
mov
scas
push
cmp
in
test
arpl
mov
jbe
ret
inc
xchg
mov
pop
out
dec
int3
dec
or
outsl
pusha
pop
gs
add
mov
xor
or
cmp
mov
icebp
mov
sbb
cld
mov
loope
sub
outsl
aas
inc
fs
sub
mov
sub
sub
out
jb
testb
adc
inc
xor
adc
inc
pop
pop
fisubs
inc
jmp
out
sub
testb
test
add
mov
shll
sti
sub
sub
mov
and
xchg
outsb
test
or
fbld
lods
mov
enter
in
lret
add
aas
jb
mov
pop
imul
jp
jae
ret
mov
insb
mov
ds
das
cli
pusha
jp
pop
out
xor
rclb
data16
addr16
sub
pop
xchg
in
lock
pop
push
outsb
decb
jmp
dec
outsl
ret
lahf
inc
pusha
out
inc
jb
outsb
popf
sbb
out
sub
xor
inc
mov
ror
imul
mov
stos
and
outsl
push
out
inc
or
or
sbb
add
addl
outsl
ret
cmp
xor
out
inc
adc
push
pop
mov
cmp
adc
movsb
inc
imul
cmp
mov
dec
jnp
shrl
aad
cwtl
lock
xorb
dec
push
mov
cmp
das
push
xchg
das
je
cld
adc
repz
mov
cmp
jge
icebp
cs
jo
push
inc
stos
icebp
dec
pop
mov
imul
or
sbb
in
or
sbb
xchg
out
add
or
les
sub
addr16
das
and
dec
or
lret
out
dec
test
stc
int3
inc
cmpb
and
inc
mov
sub
push
mov
push
push
xor
mov
sbb
jg
pop
dec
mov
ret
or
lods
mov
jmp
sub
inc
test
outsb
dec
shlb
loop
inc
ret
pop
or
sub
inc
loop
xchg
outsl
es
imul
int3
sbb
into
outsb
popa
mov
loop
xchg
lock
iret
negb
mov
and
cmp
inc
or
inc
in
in
dec
inc
arpl
inc
mov
cmpsl
and
and
out
push
movl
push
sub
and
inc
addb
in
pop
dec
and
and
test
pop
lds
sbb
sbb
xor
or
test
gs
xchg
push
ret
in
or
inc
movups
or
sbb
in
mov
lds
fs
push
inc
add
push
addr16
movsl
xor
cmc
mov
or
fs
or
and
jmp
imul
dec
jmp
dec
push
test
sbb
flds
pop
inc
cmp
dec
xor
cld
aaa
mov
cwtl
mov
out
add
sub
inc
ret
add
cmp
pop
in
andb
push
mov
and
rcr
inc
in
dec
add
pop
aaa
sub
enter
push
cld
pop
out
scas
out
aaa
jl
jg
test
and
jns
lods
add
adc
in
xchg
lds
sub
inc
mov
jmp
lock
scas
stos
jbe
jecxz
loop
daa
lock
inc
lahf
in
jmp
add
hlt
loop
stc
and
jo
dec
repz
mov
sar
sbb
lea
cmc
push
sub
xchg
jb
in
enter
shlb
sub
imul
sub
cmp
mov
dec
scas
lods
jg
movsb
and
push
rcr
cli
and
movsb
or
add
jmp
jbe
mov
jmp
push
idiv
in
jecxz
scas
pop
icebp
cmp
dec
ljmp
pusha
into
inc
imul
adc
insb
loopne
and
icebp
cld
loope
scas
pushf
in
dec
je
movhps
repz
ljmp
dec
add
cmp
jae
pop
arpl
mov
scas
divl
shrl
mull
push
das
test
sub
out
and
orl
inc
jmp
inc
pop
dec
outsb
and
mov
xchg
jnp
punpckhdq
bnd
adc
dec
leave
loopne
in
stc
jmp
adc
insl
inc
test
xor
div
push
dec
push
cwtl
jmp
pop
xor
out
jg
aam
outsb
push
and
xor
and
inc
jo
in
mov
popa
in
enter
inc
lods
fldt
je
inc
out
inc
jmp
ja
add
dec
xor
jl
push
xchg
jmp
inc
add
cmpsb
inc
loopne
das
fcompl
insb
mov
fs
xchg
movl
jne
jo
in
ss
addr16
mov
lods
fs
ss
js
jge
dec
out
cmp
push
stos
pusha
mov
ljmpw
in
push
push
dec
aaa
mov
daa
jmp
push
inc
addr16
ret
add
mov
out
add
loope
jecxz
push
cli
or
orps
cmp
test
mov
dec
mov
imul
jge
sahf
or
xchg
adc
push
iret
cmovb
out
pop
or
into
outsb
int3
les
pusha
jnp
ret
addl
mov
adc
inc
ret
add
test
push
and
and
jae
mov
inc
lds
push
cmpsb
mov
out
sbb
test
dec
je
insl
jo
inc
inc
jo
cs
leave
std
dec
addl
jo
addr16
loop
push
jp
leavew
push
and
div
pop
fcom
icebp
scas
jo
inc
or
out
and
loope
clc
outsl
movsb
jl
les
js
pusha
jle
stos
frstor
outsb
insl
in
dec
ja
jae
sahf
cltd
push
lcall
out
jl
mov
sti
arpl
das
xchg
xchg
mov
loop
jo
out
shrl
dec
je
hlt
mov
or
int3
sub
xchg
das
lds
lret
adc
pop
push
xor
std
or
cmp
ss
mov
dec
rclb
cmp
or
into
shrb
addl
adc
jecxz
inc
arpl
mov
jge
test
fsts
das
jb
sub
outsb
fdivl
test
ficoms
push
dec
lea
fildll
push
arpl
sub
xchg
in
bound
data16
fldl
mov
pop
sub
test
stc
lahf
dec
divl
imul
lds
sbb
lea
rclb
cmp
or
int3
xchg
adc
mov
rclb
cmp
cmp
push
pop
rcll
int3
mov
rep
shrb
jmp
call
dec
loop
dec
jmp
pop
or
lcall
addr16
jno
insb
imul
imul
mov
int3
cld
jge
mov
addr16
nop
mov
icebp
push
sarb
mov
insb
mov
in
sarl
lods
imul
loope
ficompl
inc
mov
dec
das
testb
or
leave
xor
lock
addr16
loope
inc
pop
out
cmp
and
movsb
lock
imul
sbb
ljmp
pushf
xorb
pop
int
arpl
push
dec
or
sub
mov
adc
movsb
pop
and
lock
jl
test
jmp
xor
mov
nop
into
and
out
dec
enter
jg
and
outsl
push
jg
mov
inc
mov
mov
mov
nop
iret
and
test
push
push
xchg
mov
fmull
mov
push
ficoml
in
add
adc
xchg
adc
or
imul
dec
fmull
cmp
mov
scas
push
js
fisubs
xor
dec
rolb
hlt
sub
lods
push
outsb
sub
sub
test
xor
insl
push
sub
enter
pop
pop
xchg
aaa
xor
xchg
cmp
in
dec
jp
mov
popl
popa
test
inc
jecxz
arpl
icebp
in
orb
add
rcrb
es
lds
push
lods
push
test
lret
xor
mov
push
dec
int3
insb
xchg
mov
repz
push
or
cmp
xchg
and
dec
inc
mov
xor
aaa
outsl
inc
xor
dec
jp
cltd
push
pop
add
xchg
orl
ret
clc
or
bnd
jnp
mov
enter
les
mov
cmp
push
mov
sub
enter
aaa
outsl
cmp
lahf
in
push
sahf
in
loope
dec
je
fisttps
cmp
loop
leave
je
rolb
xor
jp
rolb
jb
rclb
cmp
mov
enter
test
sbb
push
je
fsubrp
sbb
jo
sub
push
sub
cmp
lds
movsl
or
mov
popa
repnz
sbb
ljmp
fwait
dec
stc
pushf
sbb
in
mov
adc
or
daa
enter
sub
call
pop
or
lods
lret
mov
sbb
scas
xchg
cltd
out
pop
lahf
test
dec
mov
mov
out
jecxz
dec
loope
fisttpl
cmp
dec
dec
arpl
inc
adc
and
dec
out
imulb
into
repz
rclb
cmp
cmpsb
sub
orb
pop
or
lock
out
mov
lahf
jo
push
lds
cld
fwait
xor
call
hlt
rclb
push
aaa
xchg
inc
pop
lods
push
lahf
out
lea
push
dec
adc
or
in
xchg
adc
lods
fidivs
insb
xchg
fidivrs
stos
js
out
je
lcall
test
nop
jecxz
jae
cmpsb
std
dec
sub
in
sbb
dec
dec
pop
loope
lret
push
jge
scas
or
dec
pusha
int3
push
loope
mov
inc
jle
or
outsl
bound
and
ja
hlt
add
js
or
jnp
mov
test
push
in
push
jmp
das
roll
jno
enter
inc
loopne
fsts
cmp
loop
lahf
xor
mov
hlt
dec
imul
std
fwait
sti
out
push
out
cmp
std
in
ds
pop
mov
test
fidivs
push
add
movsl
cmp
sbb
adc
xor
lea
adcl
in
or
int
jae
popa
sub
movsl
icebp
inc
push
stc
shl
lea
insl
sbb
sub
dec
mov
rcr
inc
loop
int3
jae
or
fs
fisubs
or
add
jo
insb
pushf
and
lds
dec
mov
or
sub
fisttpl
fdivs
rclb
xor
pusha
dec
xchg
sub
ljmp
cmp
stos
pusha
dec
lds
fwait
dec
or
rolb
xor
js
ret
sbb
loope
call
test
xor
mov
jo
push
adc
dec
movsb
lock
imull
xor
scas
out
das
repnz
in
addr16
imul
test
inc
jmp
jbe
repnz
out
cmc
or
jne
hlt
popf
mov
pop
je
out
repz
jbe
ljmp
jecxz
sub
in
insl
mov
xor
jbe
ja
loopne
cmpsl
out
mov
inc
lock
sbb
addr16
inc
dec
xchg
cmp
cmp
or
pop
fwait
icebp
ja
out
jl
jo
push
push
mov
xor
lret
addr16
sub
dec
repz
mov
cmp
ljmp
cmp
aaa
loopne
es
xchg
push
pop
enter
adc
outsl
out
cwtl
test
outsl
fisttpll
pop
in
pcmpgtb
icebp
test
insl
icebp
cmc
jbe
iret
push
push
addr16
adc
pop
ret
dec
mov
xchg
ja
je
mov
inc
mov
or
out
pop
cmpsl
jl
outsl
mov
pusha
insb
mov
lods
or
repz
cmc
jmp
push
mov
into
jb
outsl
jnp
out
inc
lock
into
xor
fidivl
jb
ret
imul
iret
or
in
sub
adc
outsb
loop
jb
mov
fnsave
insl
outsl
push
push
adc
imul
mov
jmp
or
sub
je
imulb
jmp
je
out
or
dec
jae
sub
shlb
and
adc
mov
or
lods
cmp
shlb
pop
add
or
xor
mov
scas
mov
mov
mov
pushf
imul
clc
fdecstp
divl
pop
pop
cmp
ds
adc
dec
xchg
push
loop
scas
sbb
popa
sti
inc
jmp
cmpsl
fisttpl
arpl
andb
inc
repz
and
push
in
les
movsl
es
fildll
pop
push
or
gs
je
mov
mov
mov
dec
jle
push
mov
push
and
pop
xchg
dec
fsubl
pusha
push
adc
push
mov
loopne
push
dec
sub
xchg
add
push
add
xchg
std
cmc
dec
dec
mov
xchg
adc
mov
pusha
setge
adc
xchg
fistl
das
mov
pop
insl
and
mov
popf
ja
adc
insb
ret
or
push
push
mov
mov
mov
push
imul
daa
dec
arpl
roll
enter
jecxz
add
mov
xchg
cmp
aad
les
es
fdivs
imul
popa
cltd
mov
adc
lea
xor
jbe
lods
fsincos
and
les
repz
jg
clc
cmp
scas
lock
jg
sbb
in
fwait
daa
or
sbb
pusha
xchg
xchg
jg
lds
loopne
cmp
loop
cmp
or
pop
out
aas
call
daa
xor
sub
mov
push
ror
out
addr16
mov
pop
xchg
push
dec
cld
mov
mov
jnp
mov
outsl
jbe
addr16
push
iret
pusha
jo
lea
stc
movsl
push
bound
out
mov
js
sbb
dec
pusha
push
inc
fcmovne
xor
xchg
mov
dec
lock
in
test
cmp
sahf
test
mov
outsb
insb
mov
out
or
cmpsb
imul
jl
out
aad
mov
scas
dec
sub
call
pop
sub
lea
dec
cmp
mov
adc
and
fimull
call
inc
cmp
lods
mov
popa
push
int
or
pxor
out
iret
pop
bound
aas
iret
rcrl
mov
sahf
jge
imul
popa
mov
leave
fldt
lret
or
imul
lcall
adc
std
nop
xchg
push
aam
sub
test
jno
mov
shr
xor
iret
mov
addr16
push
jmp
adc
scas
into
js
call
jmp
cmp
pushf
jp
push
pop
inc
cld
sub
imul
cmpsb
out
fs
or
sub
pop
jle
push
pushf
or
hlt
in
dec
jl
mov
sahf
mov
mov
inc
mov
pop
pushf
mov
mov
or
sbb
mov
sub
popf
push
xchg
mov
roll
hlt
push
fstps
pop
popa
mov
in
clc
stos
sarb
sti
aas
jae
in
addr16
enter
ljmp
inc
or
cltd
and
sub
clc
sub
test
and
push
fs
aad
nop
aas
add
outsl
imul
inc
xchg
mov
cmpsb
dec
sub
xlat
cld
jne
gs
sahf
xchg
in
pop
jne
imul
pop
movsb
jge
out
sub
cmp
cmp
sbbl
dec
andb
je
ret
lods
or
insl
inc
inc
xor
add
repnz
mov
pop
sub
loope
jmp
mov
cmpb
dec
lds
pusha
push
std
sub
adc
or
adc
pusha
pop
lret
dec
xchg
shlb
or
and
push
call
ss
call
inc
lahf
cmp
das
lock
cmp
or
in
adc
out
mov
sub
xor
adc
push
mov
out
dec
jg
es
lret
lret
lock
jb
sub
dec
jbe
call
gs
test
int
add
in
icebp
movsl
mov
rcrl
xor
outsl
fcoms
adc
jo
roll
movsb
or
push
cwtl
sub
in
pop
sbb
jo
cmp
mov
pusha
or
ljmp
xlat
nop
push
add
adc
aaa
movsl
dec
inc
push
and
ljmp
mov
adc
in
fisttps
push
inc
mov
outsl
or
mov
mov
fcmovb
mov
fs
in
cmc
and
jmp
lods
sbb
sub
js
and
int3
xchg
inc
mov
loopne
repz
fwait
sub
pushf
sub
inc
sub
into
jo
out
lret
neg
xor
sub
outsb
enter
inc
lods
fdivs
hlt
sbb
fadd
mov
push
lds
daa
xchg
in
mov
or
add
push
in
add
cmpsl
repnz
sahf
push
shrl
mov
imul
imul
jne
daa
lock
ret
outsb
arpl
gs
sub
dec
adc
jge
dec
dec
xchg
jbe
stc
not
cmpsl
xchg
inc
jmp
lahf
call
adc
dec
insl
inc
adc
imul
test
scas
mov
std
clc
roll
dec
mov
test
cwtl
pop
roll
jmp
out
xchg
gs
bound
call
xchg
and
hlt
clc
mov
xchg
movsl
mov
inc
aas
fwait
les
popa
cwtl
cwtl
xchg
pop
cld
xor
test
fisttpl
out
mov
movsb
out
lcall
loop
imul
jbe
cmp
dec
inc
pop
in
jmp
insl
push
sub
or
out
loopne
dec
cmpsl
cli
jnp
inc
divl
and
bound
dec
std
ljmp
or
ja
daa
add
aad
add
jnp
xchg
test
dec
popa
in
icebp
mov
repnz
add
sub
arpl
lcall
push
mov
sub
gs
ret
or
call
cmp
lret
jae
jle
fsubr
adc
dec
int
and
das
sub
mov
cmp
nop
sub
fmul
imul
das
adc
daa
sub
mov
jmp
sub
dec
mov
das
sub
outsl
leave
dec
push
or
enter
or
orl
dec
jo
mov
scas
adc
lock
loopne
loop
mov
inc
mov
xchg
outsb
cmp
dec
icebp
mov
jg
pop
jl
ficoms
ret
xchg
test
mov
adc
outsl
lods
inc
jle
xchg
inc
in
dec
push
mov
test
mov
jno
in
jl
cmp
js
outsb
lcall
inc
inc
mov
outsl
lcall
mov
dec
mov
and
adc
ret
sbb
jge
inc
rcrb
lock
mov
or
std
fimuls
js
cld
iret
mov
flds
xchg
xchg
pop
mov
call
insb
test
pop
shll
xor
xchg
inc
dec
inc
sub
ja
insb
cmp
dec
jo
cmpsl
imul
pop
cmp
jmp
jl
add
mov
pop
adc
push
xchg
rolb
and
testb
dec
loopne
add
sub
cmpsb
test
jge
sub
mov
loop
je
das
ja
pop
fiaddl
or
loop
xchg
fmull
inc
sarb
je
jmp
lcall
lcall
cld
cmp
std
mov
sahf
ret
jbe
and
inc
mov
cmp
in
das
sbb
out
lret
mov
sbb
jmp
pusha
cmp
test
paddq
sub
push
pop
xor
mov
add
sub
mull
mov
jns
cmc
shr
xchg
push
loopne
mov
adc
mov
dec
adc
leave
aaa
dec
out
xchg
pop
inc
and
call
shr
sbb
incb
leave
push
xchg
lea
dec
lret
xchg
sbb
iret
popa
adc
push
iret
test
jle
addr16
fdivrl
lret
out
xor
jmp
pop
cld
xchg
jo
addl
in
sub
adc
inc
cli
and
jo
das
in
cmpsb
in
add
repz
mov
xchg
lock
push
fcomi
inc
and
push
pop
outsl
sub
icebp
dec
pusha
lods
push
fwait
mov
and
cmc
inc
inc
repz
ss
xchg
adc
pop
decb
imul
ljmp
adc
mov
fs
adc
cmp
dec
fstl
sbb
jmp
sub
xor
fimuls
les
int3
sti
xor
lret
sarb
out
jecxz
cld
adc
mov
sti
jmp
dec
dec
insl
mov
push
jae
or
popf
insb
dec
icebp
addr16
fwait
divl
inc
sti
js
arpl
call
or
outsl
push
and
fs
popa
js
jle
insl
jnp
loope
loope
push
ret
adc
mov
jns
and
xchg
lods
adc
test
scas
lods
push
jns
jo
stos
mov
xor
sub
pushf
jmp
push
arpl
enter
adc
xor
shlb
aam
pusha
mov
imul
rcrl
add
outsl
repz
in
data16
int3
pop
out
aaa
daa
or
je
in
outsb
imul
addr16
fistpll
lods
je
aad
sub
daa
mov
jo
jle
or
pop
js
out
jp
and
sbb
loopne
int3
scas
mov
adc
out
pop
xor
test
repnz
lea
or
das
or
jnp
test
dec
jnp
stc
mov
insb
insl
das
icebp
aas
loope
in
jg
pop
hlt
pop
sbb
aas
jno
loopne
jo
pop
push
inc
xchg
jo
testl
jge
mov
cmp
ljmp
ret
jle
sub
dec
adc
call
sbb
inc
push
push
nop
mov
pop
insl
mov
xchg
fdivrp
mov
cli
js
jnp
test
movsl
jno
cmpsb
mov
nop
jb
push
iret
shrl
mov
repz
inc
lods
jo
pop
mov
push
shll
cltd
sbb
cmpsb
aas
pop
pop
jno
cmp
or
push
ret
mov
lcall
in
add
mov
loopne
ja
vpmaxsw
add
mov
call
in
lods
repnz
jecxz
cmp
daa
scas
imul
es
jo
fdiv
jge
negl
push
sub
into
jb
ret
jp
bound
inc
popw
and
ljmp
movsl
stc
call
xchg
js
adc
scas
adc
jo
imul
push
dec
insl
in
mov
pop
enter
xor
imul
dec
test
add
repnz
add
cli
mov
outsl
outsb
xchg
inc
mov
mov
push
cli
lock
mov
outsl
jle
or
adc
cmpsl
jo
jbe
push
or
ret
loope
jb
insl
jmp
xor
jnp
loope
dec
cli
xchg
jo
out
jg
xor
insl
outsl
data16
xchg
inc
in
das
icebp
outsb
pop
testb
loope
sub
test
outsb
dec
jg
insl
push
push
call
fiadds
imul
cmc
cmc
and
adc
dec
outsb
outsl
js
jo
or
addr16
out
out
cltd
and
inc
test
icebp
xchg
addr16
nop
into
mulb
mov
fs
nop
fwait
sti
data16
sti
mov
and
dec
dec
mov
mov
imul
rorb
fucomip
mov
jnp
je
mov
or
inc
adc
mov
jl
lcall
mov
add
lods
mov
mov
lock
repnz
xchg
lret
ja
xchg
add
sbb
mov
enter
cld
leave
test
mov
inc
xchg
pop
xor
loopne,pt
sbb
inc
adc
popf
dec
fimuls
pop
sahf
lcall
in
icebp
out
sbbb
pushl
cli
out
popa
add
notl
inc
mov
add
cli
scas
int3
vmovq
cmp
imul
add
add
insl
dec
clc
and
into
lret
dec
mov
lret
cli
das
popa
in
dec
fisttps
push
inc
adc
xchg
out
xlat
pop
js
push
dec
and
sub
in
inc
ljmp
xchg
sub
adc
cmpsl
int3
daa
push
je
dec
cmp
fwait
mov
sub
pusha
je
addr16
jmp
add
jl
adc
jo,pn
inc
imul
ret
dec
cld
and
repz
lret
and
jne
call
in
lcall
imul
movsl
repnz
xlat
outsl
test
cmp
jnp
xorb
icebp
pop
pop
inc
popa
dec
je
jge
dec
js
jb
je
xchg
jb
pop
mov
mov
mov
pop
ja
lahf
or
push
mov
xor
sarb
and
insl
jo
cld
mov
adc
jge
das
insl
and
inc
xchg
fwait
xchg
mov
or
cmpl
mov
mov
cmc
and
ja
mov
mov
ret
sub
xlat
std
shrb
lods
fisubrl
cld
jl
daa
sub
lock
jmp
fcoms
jge
cli
jp
outsl
stc
or
js
jb
divl
ja
clc
divb
clc
cmc
out
jne
sub
push
fldcw
std
leave
je
xchg
pop
push
xor
jecxz
clc
arpl
dec
ja
iret
dec
add
mov
push
mov
jnp
in
pop
cmp
popa
mov
outsl
shlb
sub
out
sub
push
insl
sub
xchg
push
pop
xchg
cmp
add
fcoml
shr
adc
je
adc
outsl
andb
xor
imul
sub
in
dec
jecxz
shl
repz
aam
outsl
jo
popa
loopne
mov
mov
jg
pop
gs
jle
out
cld
or
outsl
clc
stc
cld
fmuls
dec
outsl
hlt
jnp
mov
xchg
testb
adc
ljmp
adc
je
fnsave
jo
inc
lahf
daa
les
cli
adc
lea
cmp
lea
enter
mov
icebp
cmp
pop
leave
call
add
orl
jns
out
out
cltd
jbe
in
dec
mov
hlt
les
xor
cmc
out
jne
cmpsb
js
into
cmc
sub
inc
add
mov
cwtl
add
jne
cmp
adcb
enter
pop
mov
inc
fiadds
sub
mov
aas
cli
sub
or
insl
cltd
push
inc
pop
jge
pop
sub
stos
cli
cmc
jmp
cmp
mov
loopnew
jg
mov
sub
in
jl
adc
add
inc
mov
int3
or
popa
mov
add
lock
popl
sbb
daa
cltd
mov
sub
outsl
ja
pop
fs
out
leave
sbb
sub
mov
imul
addr16
out
js
fdivl
sbb
incb
loopne
jge
sub
cmp
ja
test
xchg
or
insl
adc
rcll
push
jmp
std
sahf
push
and
xor
out
sbb
add
sub
fldenv
nop
push
pop
or
adc
stc
lretw
loop
dec
insb
ja
lods
shrl
divl
xchg
sub
call
cmp
aaa
or
in
xchg
or
jmp
subb
out
pop
inc
xor
adc
loop
sbb
jle
mov
sar
je
jp
cmpl
iret
mov
adc
ret
fcmovu
jmp
mov
xor
push
push
xchg
inc
pop
scas
in
imul
inc
or
aad
xchg
xor
jne
in
push
or
cmp
xchg
sub
jecxz
fs
cwtl
clc
pop
ret
aas
jp
sub
shlb
dec
shrl
lock
lods
push
sahf
test
jmp
mov
sub
stos
cmp
loope
pop
sub
je
mov
out
cmpsl
sbb
into
call
daa
aas
xchg
mov
or
in
adc
insl
mov
fisttps
stos
and
in
push
daa
lds
clc
mov
ljmp
pop
sti
fstl
lds
xchg
mov
in
int3
jo
popa
or
adc
js
xor
or
xchg
fstpl
js
nop
in
and
outsb
jnp
inc
call
pop
repnz
clc
push
sub
dec
addr16
and
inc
in
addr16
iret
dec
ret
jmp
ja
lcall
mov
mov
jnp
call
push
sub
jo
into
jge
int
pop
push
jo
jge
dec
test
orl
stc
loopne
inc
in
mov
mov
and
xchg
mov
cmp
and
pop
inc
jecxz
adc
inc
push
mov
ret
pop
std
jo
push
test
iret
jns
jnp
cwtl
mov
jb
push
sbb
lret
xorb
lock
mov
pop
mov
clc
jne
cmp
clc
cli
fdivl
out
in
dec
mov
idivl
adc
into
push
adc
rolb
lcall
add
fdivr
and
jo
jle
ror
jmp
sahf
jmp
outsl
mov
addr16
pop
pop
add
enter
and
pop
xor
dec
adc
adc
shlb
jo
sub
cmpb
mov
int
push
push
sahf
jo
mov
cmp
dec
js
pop
sub
or
mov
cli
das
dec
lret
movsb
adc
push
fildll
scas
jb
inc
test
jnp
sbb
cmc
shr
xchg
push
scas
stos
popa
leave
pop
in
push
loop
loopne
into
scas
adc
scas
push
sbb
aad
enter
sbb
add
push
cld
inc
mov
cld
jns
adc
sti
into
cld
lock
pop
test
and
pop
adc
popa
add
mov
mov
fcomip
dec
ljmp
iret
std
mov
sbb
push
cld
in
scas
out
inc
add
sub
xchg
adc
out
cmpsb
jmp
addl
sarl
filds
adc
cpuid
fdivs
sbb
and
push
lods
inc
sbb
and
in
add
sbb
hlt
push
ljmp
and
mov
add
adc
jnp
je
add
addl
mov
push
scas
xor
das
leave
sahf
pop
sahf
stos
cmp
lret
push
pushf
enter
push
push
aas
icebp
clc
xchg
push
outsl
loopne
add
je
mov
mov
mov
loop
iret
loopne
pop
dec
addl
inc
das
data16
mov
call
mov
sub
insb
or
sub
aam
loopne
pop
or
jb
loopne
sub
mov
inc
mov
sub
lea
push
adc
push
stc
fwait
imul
insl
insb
xor
fwait
dec
sub
sbb
mov
fwait
shl
mov
out
push
push
in
or
out
and
icebp
dec
imul
sbb
pop
inc
lret
xor
pop
jnp
aas
mov
fldenv
orb
mov
adc
mov
in
js
mov
scas
dec
repz
adc
stos
subb
cld
mov
shll
repz
cmp
push
cli
in
clc
inc
scas
and
stos
sbb
fnstsw
mov
stc
inc
clc
xchg
cltd
lahf
mov
scas
mov
test
mov
std
subb
cmc
repnz
jle
push
inc
psubd
jg
jo
lock
insl
vpunpcklbw
jne
arpl
fdivrs
into
jge
out
cmp
std
imull
insb
outsl
movsl
movaps
dec
je
cmp
das
addr16
jp
cmp
hlt
fdivrp
outsl
pusha
clc
cmp
lret
ss
inc
data16
imul
push
jae
jne
cltd
mov
inc
adc
cltd
sub
popf
mov
mov
outsl
fdivrs
sub
jl
adc
or
outsb
pop
xor
fildll
pop
insl
lock
xchg
pusha
push
inc
inc
fs
jo
cltd
cld
cmp
add
loopne
aas
xlat
lock
jns
arpl
nop
je
jnp
xchg
xor
roll
mov
idiv
mov
insl
jne
int
cmpsl
mov
sbb
pushf
inc
orb
mulb
jns
decl
pop
mov
lret
leavew
ret
std
loopne
leave
sub
pusha
cld
pop
jo
out
xchg
decl
flds
jo
fwait
cmp
add
pop
loopne
enter
loop
in
out
sbbb
jo
lea
dec
fdivrl
mov
mov
jne
inc
cs
enter
push
out
outsl
jo
mov
and
or
pop
fucomp
cmp
dec
out
in
cwtl
jae
into
repnz
push
out
ror
ja
mov
dec
cmp
jp
lret
jns
lds
std
fbld
adc
jo
js
les
scas
cltd
and
out
and
je
jecxz
xchg
loope
dec
clc
dec
arpl
lret
bound
pop
mov
pop
icebp
dec
lock
nop
fsubs
lahf
jo
int3
ja
xorb
out
jl
jns
mov
js
mov
mov
lahf
jo
rcrb
and
cmp
pop
insl
loope
stc
push
rcrl
pop
push
outsl
push
pop
jmp
pop
inc
ds
mov
cmpsb
setp
ret
outsb
mov
lret
sbb
xchg
dec
push
jns
jnp
adc
iret
mov
xor
jmp
pop
jp
pop
cwtl
je
icebp
lret
mov
add
ja
dec
cld
fcoms
cmp
sbb
cli
pusha
and
flds
mov
and
out
int
inc
imul
rcr
cmp
xchg
lock
lock
xchg
xchg
cwtl
add
movsb
sbb
clc
imul
push
add
test
test
ljmp
test
xchg
lods
mov
adc
test
insb
push
lock
pop
inc
jo
xlat
gs
imul
test
insb
outsb
div
xchg
jnp
fwait
out
sub
dec
repnz
neg
outsb
jae
out
out
repz
jo
outsb
je
jb
out
hlt
inc
imul
pusha
call
stc
mov
mov
out
call
fldcw
xchg
mov
ret
add
pusha
jmp
lcall
pop
adc
iret
pop
adc
ret
decb
loopne
je
adc
imul
and
jmp
test
js
pop
outsl
das
bound
mull
out
cmp
pop
jmp
sbb
movsb
js
pusha
inc
movsb
je
out
dec
cmpsl
xor
insb
insb
jg
daa
nop
dec
ja
and
bound
nop
push
out
in
sub
cmp
insb
sub
or
call
shlb
jmp
insb
cmp
push
jo
add
cld
adc
push
int3
ret
cltd
xchg
mov
in
clc
dec
cmp
inc
outsb
je
cli
cmp
out
test
push
pop
mov
xchg
sub
jmp
sub
dec
mov
cmp
das
das
pop
fs
repz
mov
out
push
adc
pop
lcall
mov
popf
enter
enter
bound
test
sahf
je
cmp
inc
cli
lret
and
cli
popf
outsl
scas
push
sbb
jge
or
movsl
pushf
and
and
sbb
cld
jg
nop
jae
push
fiadds
xor
mov
dec
ljmp
push
in
or
loopne
lahf
bound
pop
pop
xchg
inc
mov
jecxz
pushf
fidivs
loope
jge
shlb
je
inc
ret
fisubrs
push
movsb
xchg
xchg
pusha
xor
mov
sub
ret
test
adc
cmp
and
adc
test
les
mov
das
mov
dec
jae
or
icebp
enter
int3
in
xlat
test
int
adc
unpcklps
icebp
popf
cmp
or
xchg
sub
mov
mov
ljmp
mov
jae
sbb
jb
mov
push
clc
rcrb
fbstp
mov
cmp
in
sbb
adc
insl
xor
dec
cmp
lods
popa
int3
xchg
shl
pop
loopne
ret
in
cmp
cmpsl
loopne
test
loope
pop
cmp
clc
roll
xorb
pusha
gs
inc
mov
gs
repz
js
cmp
iret
inc
sbb
sbb
cmc
pop
testl
neg
inc
movsb
stos
in
xor
dec
cmp
je
mov
xchg
mov
cld
in
push
test
out
or
mov
dec
loope
outsl
push
es
xor
cmp
in
call
fwait
add
aam
call
jmp
out
jo
push
jecxz
outsl
sub
push
loop
xchg
repnz
mov
imul
xor
mov
dec
movsl
out
add
add
push
std
inc
idivl
jge
jle
jmpw
jnp
in
call
out
pop
in
mov
nop
pushf
dec
dec
jo
cmc
cld
sub
mov
xchg
mov
push
loope
xchg
fnstsw
stos
pushf
fs
test
mov
outsl
dec
xchg
mov
jns
sub
loop
repz
daa
lea
int3
out
or
sbb
xchg
into
dec
or
and
mov
push
aas
push
pushf
jo
in
mov
rclb
xchg
cmp
loope
pop
cmp
inc
pop
fs
mov
or
sbb
outsl
push
loopne
insl
dec
hlt
jg
pusha
out
xchg
adc
sub
ja
adc
nop
push
inc
lret
xchg
out
in
xor
loope
out
sbb
dec
or
ljmp
pop
dec
jb
dec
in
mov
pusha
sbb
pusha
out
ja
loop
test
jo
test
lock
cmc
enter
std
out
int3
mov
xchg
cli
in
and
out
sub
dec
scas
enter
push
sub
dec
mov
sub
into
sub
sub
jo
test
push
mov
loopne
subb
fiadds
fcmovnb
cmp
imul
gs
scas
xor
mov
adc
sub
das
adc
jg
fisttpl
imul
xor
outsl
out
push
cmp
outsl
lods
and
push
push
test
dec
enter
outsb
jb
mulb
jo
pop
adc
popf
arpl
add
adc
fstl
stc
leave
pop
in
sub
dec
jmp
jmp
add
out
add
and
shlb
push
mov
mov
dec
out
add
out
out
ret
aad
cmp
bound
in
dec
inc
sub
les
imul
pop
push
inc
and
scas
out
in
and
add
push
das
cmpb
out
pop
arpl
test
or
sbb
and
mov
in
add
lret
out
fsubp
inc
jns
push
stos
scas
cmpsb
sub
push
jo
out
scas
and
add
mov
clc
dec
jecxz
and
and
sbb
arpl
jmp
add
les
add
movsb
outsb
int
nop
decb
xchg
out
sub
pop
subl
cmpsb
adc
and
xchg
int3
push
sub
leave
jmp
outsl
ret
fs
push
mov
fldt
push
mov
pop
loopne
iret
jne
push
inc
push
add
mov
sub
call
mov
in
inc
mov
popl
jae
aas
insb
int3
loopne
out
jg
xchg
addr16
popf
jns
xor
bound
aad
cmpsl
arpl
fisttpll
pusha
test
jp
xchg
bound
leave
aas
arpl
sub
inc
dec
xlat
jo
mull
add
les
out
out
je
leave
ret
push
lahf
mov
adc
pop
or
addr16
push
lods
mov
add
pop
xchg
xor
push
sub
js
arpl
cli
iret
inc
call
stc
mov
dec
jmp
dec
mov
or
mov
insl
and
imul
nop
dec
push
in
pop
jp
lock
addr16
stc
shrl
stos
push
outsb
ret
mov
mov
and
loop
repnz
mov
lods
mov
mov
jb
cmp
xchg
movl
out
call
cld
jmp
or
aad
push
add
sub
jle
aad
lods
std
adc
cmp
jb
out
pop
jno
push
push
jns
cltd
jecxz
daa
into
bound
cmp
or
inc
in
ret
push
adc
in
enter
or
jbe
xchg
rcrb
xlat
inc
xchg
mov
in
arpl
mov
push
sub
rcl
jns
mov
shlb
outsb
xor
jo
dec
adc
lods
push
adc
xor
nop
xor
loop
adc
test
dec
lock
je
xchg
mov
imul
dec
push
or
call
int
jge
inc
ss
xor
sub
inc
jo
hlt
nop
loopne
addr16
mov
sub
adc
fs
out
pop
push
test
jns
dec
andb
and
mov
xor
adc
lock
rorb
lret
xchg
in
add
pop
lahf
or
adc
in
mov
filds
xlat
imul
or
mov
nop
mov
push
mov
mov
mov
out
iret
push
outsl
call
das
out
in
into
push
outsb
call
das
in
insl
int
lea
dec
sub
push
pop
ss
xchg
pop
push
jae
push
push
sub
inc
enter
test
pop
inc
sub
inc
xlat
das
mov
xchg
in
ss
inc
call
push
pop
call
das
imul
xor
sub
jg
cs
cmp
adc
pop
and
in
inc
jo
push
test
adc
add
push
out
dec
call
adc
sub
pusha
jo
scas
sub
outsb
loopne
js
xor
pusha
lcall
outsb
out
loopne
lods
or
insl
call
in
jo
ljmp
dec
insb
dec
and
sub
imul
imul
clc
cvtps2pi
lods
outsb
out
loopne
jmp
pusha
imul
outsb
mov
sub
outsl
outsb
pusha
out
pop
and
ss
jo,pn
loopne
pushf
dec
push
outsl
pushaw
mov
dec
shrb
call
int
sub
lea
jo
inc
insl
jo
loopne
dec
loopne
in
cmp
dec
or
dec
test
dec
int3
outsl
fs
inc
je
lret
loope
push
insb
jp
and
pusha
sub
cmpsl
xchg
mov
mov
xor
push
mov
push
pushf
dec
scas
in
insb
cmc
xchg
out
push
jge
lods
out
je
cld
into
in
loopne
xor
xor
arpl
mov
bound
sub
outsb
push
cmp
clc
loop
frstor
cmp
in
jb
dec
jmp
lock
aaa
ss
mov
cld
cmpsb
stc
scas
icebp
imul
out
rcll
and
jae
aaa
es
jbe
jb
push
jge
or
insb
jns
dec
jne
nop
cmc
xor
jbe
pusha
or
fst
ffreep
divl
jo
push
mov
int3
add
hlt
adc
pop
ficomps
sub
je
cld
sbb
mov
popa
mov
push
sti
js
push
popa
add
jb
ret
pop
xor
hlt
mov
imul
or
push
or
sub
cli
imul
je,pn
loopne
fucomip
stc
lea
imul
or
push
mov
aad
data16
out
pusha
lods
pop
mov
sbb
push
leave
lret
xor
je
movsb
pop
inc
addr16
adc
dec
cmp
xor
ja
int3
out
pop
dec
int3
xchg
loope
xor
test
sbb
add
inc
adc
out
dec
sub
dec
inc
add
cmpsl
lock
jp
mov
and
nop
scas
in
xor
xlat
sub
rorb
loop
jle
xchg
cmp
test
scas
loop
mov
repnz
dec
dec
add
cwtl
fcoml
or
loop
ret
adc
inc
jecxz
push
cmp
lock
insl
sub
je
adc
das
fwait
xchg
pusha
xchg
dec
dec
outsl
lock
dec
mov
jo
outsl
rorb
dec
push
shrl
mov
test
addr16
push
xchg
jg
imul
in
mov
cmp
xchg
or
xorb
sub
jo
out
push
push
into
mov
lahf
ljmp
xor
in
ficomps
add
cltd
clc
push
daa
lock
call
dec
inc
cli
adc
xor
adc
test
inc
cld
rorb
inc
outsb
out
dec
xchg
jo
out
mov
mov
dec
sbb
out
jae
dec
iret
pop
call
jle
gs
cli
push
cmc
pop
dec
in
adc
fmul
test
imul
push
out
ljmp
insl
addr16
popa
pop
out
dec
jnp
dec
data16
jnp
sbb
push
jp
out
shl
ljmp
dec
sub
push
jnp
out
push
repnz
sub
push
cmp
push
sub
push
jbe
popa
decb
outsl
cmp
in
mov
xchg
in
adc
test
cld
icebp
lock
call
outsl
jns
insl
push
loope
gs
inc
in
lock
outsl
dec
cld
push
jo
dec
push
jle
adc
hlt
push
or
lcall
bound
xor
push
dec
cmc
int
jbe
fbstp
outsb
rcrb
out
push
push
imul
nop
sub
std
outsb
mov
lret
scas
xchg
in
cmpsb
mov
push
pop
or
xchg
push
xor
cmp
cmpsb
out
cld
stos
test
dec
scas
popa
insb
call
jle
inc
in
push
inc
add
icebp
dec
lahf
in
shrb
ficomps
test
jl
jnp
aas
imul
test
aas
lock
jbe
push
dec
pop
mov
add
xchg
in
shl
dec
jo
in
inc
push
enter
insl
xchg
fisubl
clc
ljmp
xor
ret
out
daa
xchg
sub
add
dec
stc
jmp
adc
loop
jo
dec
pusha
out
mov
lea
repz
into
cmp
jns
xor
fmull
aaa
enter
mov
addr16
cld
sbb
scas
adc
mov
loopne
sbb
mov
imul
movsl
icebp
lcall
pop
dec
leave
into
jnp
lahf
xor
inc
push
and
mov
pop
hlt
mov
dec
inc
and
or
out
test
lock
jb
cvtpi2ps
push
lock
insl
and
pop
repnz
and
xchg
push
jg
fcoml
test
add
or
jle
test
sub
ljmp
lret
std
mov
in
hlt
jnp
in
aam
adc
outsl
in
push
in
cmp
call
lretw
fcoml
in
mov
stc
dec
test
add
outsb
mov
jmp
jmp
test
dec
in
push
jo
jg
adc
outsb
xchg
add
sti
daa
nop
iret
dec
cwtl
stos
jb
adc
push
pusha
pop
ljmp
sub
adc
mov
push
das
lods
outsl
cmp
or
shlb
idivb
enter
jo
idivl
xchg
adc
loopne
repz
cmc
arpl
add
pop
xor
lods
call
lock
push
push
repnz
push
shrb
jae
test
dec
jb
popa
loopne
push
add
cmc
imul
loop
pop
in
test
insb
pusha
ljmp
jg
sub
testb
push
test
aad
rcr
or
xor
jae
push
push
mov
inc
test
repz
cmpxchg
xchg
lods
push
scas
popf
push
push
fisubrl
fistps
je
out
out
movd
push
sbb
loop
stos
pop
push
push
out
in
or
arpl
sbb
xor
aaa
ljmp
sub
ret
jle
out
sbb
test
andb
int
add
mov
clc
sub
sub
fcoml
test
jbe
mov
cli
fs
push
test
hlt
jmp
outsl
push
popa
das
hlt
bound
adcb
xchg
jne
testl
popf
inc
pop
enter
nop
mov
rorl
add
and
add
push
cld
ss
pusha
lock
icebp
inc
add
xchg
xlat
mov
dec
dec
jnp
dec
testb
aas
aas
xlat
jne
xchg
je
fidivs
lods
xlat
push
mov
xor
negb
inc
or
popf
lock
fdivl
cli
test
xchg
jl
js
cmp
lods
push
rolb
mov
mov
outsl
loop
or
lret
bnd
inc
popa
repz
out
pushf
xchg
xchg
outsl
xchg
loopne
dec
or
std
jmp
add
jg
repz
sub
jo
loope
sub
jecxz
push
imul
fs
out
call
in
pusha
dec
sub
ljmp
lods
dec
sub
push
out
cmpsl
xchg
daa
jno
out
cmpsb
xchg
es
popa
fistps
fstl
pop
mov
inc
xchg
jno
sbb
inc
push
scas
rcrb
xor
adc
mov
pop
cwtl
or
je
jae
addr16
mull
aad
fidivs
cs
out
test
test
out
pusha
dec
shll
loope
add
sub
mov
stc
lock
xor
insl
into
clc
sub
xor
popa
xchg
push
inc
inc
cmpsl
clc
rcrb
cmp
leave
enter
pop
mov
jbe
lock
jne
je
paddsb
mov
inc
daa
sub
dec
jg
data16
out
pop
cs
je
test
sub
hlt
aaa
mov
bound
aas
mov
xchg
rorb
mov
dec
daa
jb
rorl
xor
loop
and
pop
idivb
popf
outsb
push
push
and
adc
dec
rorl
pop
scas
jmp
ljmp
out
xor
into
push
rorl
cltd
imul
or
outsb
call
adc
push
imul
jl
mov
in
push
pop
cld
mov
add
testb
jne
mov
jo
out
popa
sbb
imul
loope
mov
mov
pusha
std
enter
add
mov
mov
adcl
nop
sub
mov
insb
lods
sub
in
jmp
xchg
bound
xchg
fcomi
jmp
loop
mov
movsb
dec
out
ljmp
popf
mov
inc
jg,pn
stos
mov
iret
adc
test
movsb
push
sub
out
loopne
or
dec
mov
add
rcll
cmpsl
add
ss
push
cwtl
fildl
jp
test
repnz
test
cltd
mov
push
xchg
push
pop
mov
out
mov
pop
in
mov
das
or
push
pusha
data16
movsl
test
fcompp
cmpsl
lcall
xchg
pop
or
lea
pop
push
mov
and
inc
sbb
push
nop
popf
aas
sbb
test
out
fwait
cmp
mul
sahf
xchg
outsb
lock
movsb
sbb
outsl
or
enter
iret
jb
push
das
icebp
and
out
jo
inc
imul
mov
cmp
inc
je
dec
arpl
enter
lock
outsl
sbb
sub
lods
scas
popa
adc
je
lahf
les
pop
cmp
cmp
mov
movsl
repnz
pop
xchg
add
xchg
icebp
adc
xor
and
sbb
lods
loopne
movsb
adc
push
cwtl
and
xor
mov
xchg
cmpsb
xor
popf
pop
pop
and
je
mov
movsb
dec
jo
inc
mov
ror
imul
jmp
sub
xchg
inc
cmpsl
pop
pop
push
push
sbb
inc
jne
push
xor
enter
adc
stos
cltd
int3
push
and
into
adc
jle
imul
orl
ret
lock
mov
xchg
adc
fs
les
pop
sbbl
add
aam
or
repz
push
xor
push
pop
call
cmpsl
sbb
mov
mov
jae
fbstp
stos
shrb
sub
inc
or
jae
dec
add
in
jle
and
ret
mov
ficompl
adc
mov
sub
aas
sub
pop
adc
int
sbb
or
mov
push
ljmp
adc
dec
outsb
pusha
add
aam
int
arpl
xchg
pop
lods
in
and
mov
inc
push
lahf
sub
in
das
dec
daa
adc
jg
sti
dec
aas
xor
jne
xor
sar
outsb
cmp
arpl
cltd
mov
stos
mov
sti
sub
ficoms
adc
pop
outsb
sub
jl
cvtdq2ps
aaa
stos
int3
xchg
jnp,pn
or
mov
lcall
or
aas
xchg
pop
jnp
push
decl
cs
rolb
inc
xor
loop
sub
aas
xor
clc
and
dec
into
dec
and
inc
jecxz
out
aas
loop
or
out
jg
imul
lods
scas
dec
jmp
test
mov
jle
popa
bound
sub
mov
push
dec
in
scas
out
imul
daa
mov
cmp
xor
dec
popa
mov
imul
inc
and
movsb
aas
jecxz
sub
outsl
mov
js
arpl
addr16
pop
pop
mov
std
lock
mov
sub
sub
fsubrl
pop
jg
mov
bound
lods
pusha
jle
dec
push
call
daa
insl
dec
xor
loope
enter
xchg
popf
sahf
sti
cwtl
inc
shlb
insl
js
inc
rorl
mov
inc
arpl
test
sub
mov
jge
je
inc
lds
adc
jmp
les
insl
rolb
push
ror
jecxz
jge
jo
into
sti
fildl
jg
cmpsl
sbb
int3
das
pushl
arpl
xor
mov
jo
sub
sub
dec
scas
movsb
nop
fwait
addr16
imulb
in
pop
stos
jmp
push
je
out
in
or
bound
out
cwtl
fisubl
dec
call
jmp
das
je
addr16
popa
mov
ljmp
cmp
in
or
add
in
or
cmp
jl
and
outsb
sbb
adcl
adc
or
mov
in
mov
rclb
rorl
cld
pop
jmp
mov
pop
notl
call
lret
rcrb
xchg
jae
loope
mov
push
out
jp
fldcw
adc
push
pop
add
adc
dec
filds
arpl
and
out
scas
fidivrl
lcall
test
or
int3
add
inc
inc
nop
jmp
inc
sub
lock
jne
mov
or
icebp
sub
in
adc
inc
jb
ffreep
clc
mov
and
dec
rol
sub
vmovntdq
xorl
jl
lock
and
cwtl
into
enter
dec
mov
in
or
pop
gs
dec
popa
mov
mov
push
mov
leave
dec
add
cmpb
outsl
jne
aad
jg
in
movsl
jp
fldcw
dec
rorl
lock
xlat
pop
leave
jecxz
sub
adc
fucomip
sbb
cs
adc
lock
outsb
shll
pop
mov
xor
mov
test
sub
addr16
adc
das
push
adc
mov
dec
xor
lock
popa
scas
mov
mov
mov
or
xchg
mov
push
sub
jp
in
inc
ljmp
subb
push
pushf
aas
dec
outsb
sub
inc
mov
js
cmp
jb
negl
addr16
xchg
dec
xor
pop
arpl
das
adc
loop
sub
ret
dec
out
xor
mov
add
inc
mov
cli
xor
clc
scas
lret
xlat
jg
sbb
sub
mov
mov
dec
and
and
lcall
data16
shll
sub
out
ffree
outsl
inc
inc
dec
push
lock
xchg
adc
mov
inc
add
fs
mov
inc
xchg
cmc
inc
pop
shrl
loopne
xor
outsl
jae
and
cmpsb
cmp
pusha
jo
xor
sbb
outsl
dec
addr16
fs
push
mov
sub
jo
sub
jecxz
test
decb
jbe
dec
jecxz
test
int
mov
je
mov
pusha
inc
dec
push
lock
stc
cmp
cmp
pop
jle
add
cli
mov
imul
adc
or
pushl
shl
jnp
xor
push
mov
push
cmp
xor
jecxz
push
je
sub
dec
fsubs
sub
jg
add
xor
pusha
call
xchg
es
lock
imul
cmpsl
fs
add
repnz
mov
cmpsl
sbb
dec
pop
dec
inc
pop
out
adc
inc
test
mov
xlat
adc
or
and
adc
inc
dec
int3
xchg
les
mov
in
aad
call
mov
test
rorl
jmp
mov
cs
dec
pop
insl
sub
add
out
or
subb
out
scas
inc
inc
pusha
jno
cmpsl
ret
es
ljmp
jae
dec
inc
push
subl
xor
xor
sub
sar
loopne
inc
nop
mov
xor
insl
cmpsb
arpl
mov
out
shll
loopne
xchg
lret
out
mov
adc
insl
cmpsl
icebp
mov
mov
pop
mov
daa
dec
push
cmpsl
xchg
sarb
pop
push
push
sub
mov
adc
adc
add
or
ret
roll
add
mov
insb
mov
cld
sti
add
cwtl
lock
xor
lods
dec
aam
lds
repnz
hlt
cmp
ds
xchg
xor
jge
push
inc
ret
inc
fwait
movsb
mov
xchg
test
and
pop
mov
jbe
jb
imul
push
push
rorl
and
imul
les
mov
punpckldq
inc
mov
ja
xor
push
sub
dec
js,pn
push
and
in
dec
outsl
mov
imul
xchg
es
icebp
adc
data16
cli
and
sti
pop
and
mov
stos
lcall
jmp
iret
dec
test
xor
xchg
rol
push
inc
and
das
lods
incb
jmp
mov
sub
inc
pop
dec
nop
out
cmp
fdivrs
out
sbb
jmp
outsb
xchg
icebp
bound
jle
add
aas
or
das
push
adc
mov
jo
rcrl
adc
lds
out
fcompl
je
xchg
mov
enter
xchg
xor
push
push
aas
mov
fs
das
inc
loopne
rol
mov
pop
testb
inc
mov
push
cld
push
mov
out
or
or
lods
jbe
aam
cmp
xchg
and
lds
iret
pusha
rcrb
dec
stos
inc
inc
in
xchg
and
in
sub
xchg
mov
hlt
fbld
jne
xor
or
gs
jae
mov
call
stc
repz
gs
pusha
sub
inc
dec
jne
xor
inc
sub
pop
hlt
pusha
repnz
js
das
imul
cmpsl
mov
mov
mov
popa
inc
lcall
popf
jb
ss
mov
push
push
push
sub
mov
popw
jb
xchg
mov
jns
gs
loope
insl
push
push
jmp
arpl
pusha
add
sbb
cltd
mov
inc
sarb
or
add
mov
rorb
in
das
sub
push
or
or
jae
sarb
sub
push
js
repnz
adc
lods
jmp
add
lods
and
icebp
cmpsl
pop
test
jo
outsb
mov
sbb
iret
push
icebp
pop
xchg
and
dec
in
leave
jp
inc
dec
test
call
mov
jbe
or
int3
cmp
jae
xchg
imul
push
pop
out
rclb
addr16
or
or
out
repnz
lock
push
push
lret
sub
shrl
addr16
sub
loop
aaa
sub
add
jbe
outsl
inc
lahf
scas
push
iret
loopne
sbb
cmp
fs
sar
clc
mov
gs
aaa
out
outsl
or
in
push
es
icebp
out
rol
cli
jmp
sbb
addr16
das
out
xlat
int3
cmp
pop
mov
cmp
xchg
inc
repnz
dec
shrl
daa
daa
dec
pusha
jmp
jb
inc
jae
test
xchg
sub
inc
je
in
out
out
or
data16
push
int
call
mov
icebp
dec
adc
jns
arpl
and
and
xchg
cmpsb
call
or
jae
into
cmp
sub
xor
jle
mov
lods
jae
and
cs
out
cmp
repnz
mov
ja
xlat
outsb
in
xor
out
and
cld
jae
lods
adc
add
xchg
push
and
cmp
ret
je
mov
lret
das
les
mov
or
sarb
nop
icebp
push
pop
and
cmp
and
sub
int3
addr16
sub
and
nop
das
add
out
into
iret
or
jne
scas
sbb
test
das
ss
mov
lods
out
sbb
notb
or
shrw
jns
sub
push
ret
int3
lcall
or
cmp
aaa
fsubl
sbbl
push
pop
insb
or
pop
lret
lcall
dec
add
outsb
jns
dec
std
cld
mov
adc
es
sahf
or
push
cmp
jmp
ljmp
xchg
mov
test
xor
sbb
push
xchg
sbb
std
fwait
aam
jg
push
mov
imul
xchg
cmp
xchg
repz
or
ret
pop
addr16
loopne
addb
sub
ret
dec
dec
push
sub
mov
repnz
gs
cmpsb
decb
in
je
push
mov
and
add
lcall
hlt
sbb
enter
clc
fdivs
push
mov
mov
test
push
sbb
cmp
test
cmp
sbb
test
insl
dec
dec
leave
gs
sub
clc
int3
inc
or
mov
je
or
into
inc
int
icebp
pop
push
jecxz
rolb
mov
pop
jmp
das
loope
out
fbld
rolb
push
xor
jb
inc
jg
cmp
loopne
js
cmpsb
test
cmp
jae
push
lods
and
push
sbb
js
in
scas
xchg
clc
push
cmpsb
mov
xchg
push
jl
lea
fwait
lods
dec
lds
cmpsb
outsl
push
add
dec
shlb
pushf
ljmp
andb
xchg
out
cmp
jo
or
scas
shlb
sub
aas
test
aad
lret
mov
dec
sub
xor
hlt
xchg
fs
fwait
in
pop
mov
mov
fs
or
lds
ret
mov
jae
out
das
mov
daa
xor
mov
cmp
fs
mov
daa
jmp
cmp
xor
data16
call
iret
repz
inc
stc
je
es
popa
testb
clc
sub
cli
orb
icebp
dec
and
inc
test
lret
cmpsb
out
or
ret
add
dec
inc
sub
dec
pop
jl
fists
add
xchg
ds
xor
popa
loopne
das
inc
or
push
mov
add
jle
dec
insl
jne
inc
dec
jbe
enter
je
adc
pop
ja
adc
push
loopne
jns
jmp
inc
cld
xchg
xchg
jbe
lock
outsb
xor
xor
xorl
pop
sbb
cmp
aam
mov
mov
mov
mov
inc
inc
xor
fs
adc
es
pop
gs
pop
mov
mov
add
aam
sarl
add
mov
imul
hlt
ds
setne
jb
cmp
addr16
out
jbe
mov
daa
ljmp
jne
xor
xchg
loopne
vshufps
add
popf
pop
out
jle
adc
daa
or
lahf
out
cmp
aas
push
cmpsl
xchg
inc
call
sub
imul
jno
addr16
adc
adc
or
and
imul
into
rolb
es
out
je
push
inc
fisttpll
pushw
add
inc
push
jb
ret
mov
add
xchg
sub
adc
scas
xchg
xor
lds
bound
mov
xchg
outsl
maxps
das
scas
adc
insl
sub
pushf
imul
leave
add
call
and
mov
lods
ret
jb
outsb
imul
pop
je
stc
push
lret
sub
or
shlb
aas
and
adc
repnz
imul
ret
add
shlb
mov
xor
dec
iret
dec
adc
addr16
xor
ret
adc
fcmovnb
inc
fwait
push
iret
fiadds
cs
test
mov
add
xor
jo
adc
arpl
popa
dec
je
dec
in
dec
lret
mov
stc
or
dec
movsl
gs
aam
mov
lret
sbb
cmc
cmp
je
jbe
xor
xchg
in
imul
jecxz
dec
scas
pusha
outsb
imul
imul
daa
arpl
addr16
test
aaa
sub
clc
and
les
xchg
push
dec
pop
repnz
cmp
xchg
sahf
es
cli
jae
scas
call
sub
dec
jle
mov
lret
add
lock
jb
jnp
shr
js
add
pusha
xchg
les
jg
into
mov
in
es
call
push
loop
in
sbb
pusha
dec
dec
push
inc
pop
pop
push
imul
or
imul
jbe
or
out
adc
sub
std
mov
adc
jbe
mov
push
dec
pusha
mov
jae
lods
jb
push
xor
insl
dec
or
outsl
into
in
leave
jmp
aam
xchg
and
push
loop
iret
popa
mov
shrb
jae
loop
movsb
mov
cmpsb
int3
push
loop
cli
xchg
xchg
in
inc
inc
dec
imul
inc
adc
adc
stos
inc
xor
or
sub
push
addr16
outsl
bound
mov
out
enter
ja
sbb
inc
arpl
mov
sbb
sar
mov
cmpsl
xor
xchg
sub
out
xchg
pop
pop
lret
out
jne
sti
ljmp
out
sub
enter
add
push
lret
fisttpl
testb
add
or
int
ds
out
xor
test
imul
push
insl
cmp
shll
mov
loopne
or
dec
loop
je
int3
mov
scas
jge
mov
jae
mov
xchg
mov
mov
mov
jl
xlat
cmp
mov
jge
mov
jl
adc
pop
mov
out
jnp
adc
test
lcall
out
enter
movsb
xchg
cmp
push
imul
dec
push
sub
lret
cld
ljmp
dec
mov
dec
pop
dec
scas
outsl
pusha
imul
pusha
mov
fmul
adc
inc
js
andb
negb
popa
dec
popa
jnp
cmpsl
pop
pop
jg
loope
dec
pop
je
dec
subl
shrb
loope
imul
insb
mov
cmp
je
inc
sub
ret
test
mov
inc
out
dec
dec
leave
cmp
scas
cmpsl
movsl
rorl
scas
xor
in
dec
push
scas
inc
movsl
shl
mov
popa
sbb
je
mov
outsb
cmp
push
push
inc
scas
mov
inc
push
aam
jae
cmc
jp
loope
aas
pop
pop
mov
jl
fcmovb
loope
clc
and
insb
icebp
dec
popa
push
jb
out
hlt
dec
orl
adc
loopne
ret
jne
inc
push
sbb
insb
xchg
mov
arpl
popf
or
sti
cmp
xor
enter
jb
sub
mov
push
call
out
push
fwait
imul
and
lret
or
addl
sub
pusha
pop
int
lret
test
xchg
dec
movsl
imul
insb
das
ret
mov
dec
outsb
adc
xchg
sub
popf
cmpsb
jbe
cld
arpl
fisubs
call
mov
icebp
pop
jge
mov
ret
dec
hlt
dec
cmp
xor
dec
sub
aas
jge
fwait
jmp
insb
out
dec
cltd
ljmp
outsl
aam
cmpsb
dec
loopne
adc
mov
push
mov
pop
adc
mov
mov
and
adc
rorl
and
stos
pushl
jo
xchg
mov
jns
cld
pop
je
jl
adc
fsts
adc
dec
insb
sti
bound
or
in
ss
jg
fidivrs
mov
les
pop
xor
pop
idivl
je
mov
push
loop
jg
lret
sbb
mov
push
xchg
mov
dec
out
dec
inc
data16
imul
mov
jnp
pop
aaa
jmp
lret
xchg
jne
ljmp
test
xchg
jns
add
jb
js
and
fsub
frstor
pop
push
mov
cmc
sub
and
sahf
mov
data16
nop
push
ror
fimull
mov
push
mov
ljmp
dec
repnz
aam
in
int
notl
push
inc
ret
pop
arpl
leave
loop
inc
pusha
xor
call
clc
mov
mov
xor
lods
fsubrs
popf
sarl
daa
mov
sbb
punpcklbw
push
mov
add
out
cld
mov
xchg
add
das
cmp
insl
loope
repz
mov
adc
xchg
ret
jnp
loope
les
shrb
imul
mov
jecxz
sahf
popa
idivb
and
nop
movsb
ljmp
sahf
xor
daa
dec
incl
test
sahf
mov
in
scas
and
stc
stos
xor
lahf
lods
lret
call
cld
mov
xchg
push
movsb
sbb
xchg
or
xchg
pop
sbb
out
jl
add
mov
inc
insl
lods
mov
in
mov
insb
xor
pop
imul
lahf
hlt
imul
inc
cld
movsb
and
frstor
mov
test
sarb
imul
dec
test
jg
imul
fbstp
fs
xor
sub
mov
cmp
sub
jns
hlt
clc
sbb
insl
sti
adc
insl
ljmp
adc
das
add
adc
icebp
mov
mov
scas
jo
fs
xchg
push
jbe
popf
ret
imul
jo
bound
inc
cmp
das
outsl
xor
push
addr16
inc
clc
dec
dec
fs
rolb
mov
sbb
in
xchg
mov
or
ja
js
push
dec
mov
adc
add
cmp
aas
je
fwait
mov
dec
je
clc
aaa
xchg
push
cltd
in
aaa
jle
dec
add
lret
icebp
pop
push
xlat
pusha
xchg
lret
push
lds
xchg
dec
pop
mov
or
repz
int3
push
cli
outsl
dec
dec
push
into
aas
pop
js
addr16
scas
cmp
cmp
jmp
sahf
pop
imul
imul
add
push
addb
cltd
push
ja
js
lahf
or
adc
mov
mov
and
mov
imul
sub
in
scas
aaa
jb
dec
lret
test
jns
test
ret
fdiv
inc
cltd
and
sub
ret
enter
sbb
mov
xor
sub
je
ljmp
push
repnz
fsubrs
ret
stos
insl
je
mov
push
adc
cmp
lret
daa
or
jno
xor
pop
adc
cs
js
and
inc
out
push
sub
adc
mov
or
cltd
scas
into
icebp
loop
sub
adc
jp
push
je
ljmp
call
dec
lods
mov
mov
rclb
mov
jl
pop
xor
dec
loop
inc
shlb
cltd
cmpsb
clc
arpl
dec
push
popa
loopne
insb
push
fisttpll
push
xor
xchg
jg
cmp
test
adc
shrl
sbb
dec
jb
jae
sub
data16
outsl
loop
dec
jo
icebp
ljmp
repz
testb
jb
popa
pop
adc
call
xchg
pop
imul
dec
popa
bound
push
lret
push
pop
dec
arpl
dec
in
clc
insb
in
pusha
add
imul
ffreep
js
and
enter
hlt
xlat
or
mov
int3
xor
inc
addr16
xor
dec
jbe
popf
dec
mov
in
and
iret
and
loop
sub
mov
inc
inc
mov
dec
shrb
enter
loop
outsl
scas
insl
test
pop
ret
lret
icebp
fs
cmp
hlt
mov
notl
adc
jle
loope
lret
pop
mov
xor
in
jmp
jae
rcl
call
add
sbb
mov
fstl
std
out
sbb
enter
call
add
nop
xor
adc
adc
clc
shll
inc
dec
cltd
inc
push
and
jmp
xor
adc
insb
test
mov
rcrl
or
pusha
sbb
and
sbb
outsb
mov
mov
jnp
lahf
jmp
adc
or
or
mov
sbb
in
xchg
out
out
rorl
adc
aas
or
mov
sub
ljmp
and
xor
dec
aad
cli
loopne
arpl
push
mov
fsubl
xor
xor
pop
int
mov
in
jb
pushf
outsl
into
mov
fstpt
mov
in
gs
lds
repz
add
call
pop
xor
int3
adc
or
decb
add
jae
push
pop
sti
insl
sub
cmpsb
scas
push
mov
test
jbe
je
out
gs
dec
fs
repz
loop
repnz
jecxz
mov
jbe
pop
push
enter
add
mov
iret
inc
push
pushf
or
mov
lret
mov
das
add
dec
cmpsl
lahf
call
or
jnp
mov
jnp
outsl
stos
and
pop
ret
movsl
jb
push
mov
sti
sbb
loopne
push
cmpsb
cmp
gs
clc
dec
adc
sbb
mov
mov
das
mov
divb
or
loope
mov
adc
mov
test
or
aad
test
das
pop
sbb
push
push
adc
inc
lahf
lcall
inc
std
adc
daa
stos
sub
scas
popa
shll
jo
enter
pop
addb
out
iret
and
and
outsb
stos
pusha
ret
in
outsl
jp
movsb
xchg
cld
pop
enter
and
loope
mov
dec
mov
or
int3
jp
add
insl
das
pop
adc
or
mov
mul
dec
jmp
or
xor
out
leave
int3
add
das
test
jns
lock
clc
and
loopne
or
loope
xchg
iret
outsl
lret
in
scas
add
sahf
icebp
pop
loopne
jne
testl
test
jb
mov
movsl
arpl
outsb
or
sarb
xchg
mov
shll
xchg
jo
or
int3
jmp
rcrb
mov
fsubl
dec
sub
in
xchg
pop
jae
push
sbb
mov
rclb
push
mul
je
mov
mov
ljmp
lret
dec
cltd
lods
out
int3
icebp
insl
sahf
adc
rcrl
test
or
rorl
cmp
call
mov
mov
pop
pop
or
mov
or
gs
js
scas
and
cltd
rorb
test
jo
sub
adc
mov
insb
out
loop
out
mov
gs
clc
mov
pop
jg
push
sub
jns
scas
loop
or
add
dec
addr16
movsb
push
sbb
sbb
cld
sbb
mov
lock
pop
mov
pop
aad
inc
add
fs
xor
or
addb
pusha
out
in
divb
outsl
mov
mov
mov
test
cmpsb
outsb
sub
or
loopne
scas
jg
dec
jnp
pop
lea
cwtl
aas
call
add
fsts
dec
inc
push
mov
lret
rcrb
aaa
addr16
adc
xlat
sbb
adc
arpl
cmpsb
test
cmpsb
in
dec
xchg
cmpb
xor
mov
mov
sbb
nop
xor
cmp
insb
rcl
rol
mov
call
mov
inc
dec
inc
stos
or
jge
bswap
lods
or
mov
je
daa
hlt
bound
inc
leave
and
fwait
enter
js
ret
loope
dec
mov
jo
cli
lret
pop
jle
dec
fcoms
push
push
push
ljmp
mov
ret
mov
les
xor
xchg
out
sbb
or
pusha
repnz
shlb
mov
icebp
xchg
sti
add
repnz
stos
leave
movsb
add
xor
bnd
fisubrs
cmp
call
dec
fldenv
mov
dec
xor
xor
xchg
cwtl
xchg
and
daa
movsb
xchg
and
or
jb
dec
ss
insl
lcall
push
jo
pop
push
sarb
out
mov
lret
inc
rorl
cltd
push
sbb
loopne
pop
int
jo
rcrb
mov
or
sub
enter
scas
in
inc
sub
enter
cmp
inc
mov
adc
test
xor
insl
mov
cltd
scas
add
cmp
divb
insl
fldl
and
add
add
cmpl
push
add
rorl
xchg
into
or
jg
psrad
jo
mov
inc
iret
out
sbbb
pop
mov
sti
jnp
aam
pop
imul
out
jg
stos
and
out
je
movl
dec
je
cmpsl
dec
jno
mov
in
adc
pop
out
popa
cmp
ljmp
mov
lods
dec
adc
shlb
mov
cmp
in
loop
push
dec
mov
bound
adc
fbld
aaa
push
dec
ficompl
lret
ds
outsl
xor
sahf
mov
mov
icebp
xchg
out
inc
aas
push
sbb
xor
cmp
cs
fnsave
cmpsb
pop
insl
stos
jg
cmp
adc
sbb
xchg
or
dec
lahf
in
add
inc
fadd
lock
pop
imul
xor
jg
and
scas
repnz
imul
aam
adc
adc
dec
lock
or
xor
xor
out
adc
push
push
cmp
cmpsb
pop
inc
jp
je
sub
outsb
inc
adc
cmp
or
jmp
fstpl
fbstp
je
xchg
insb
jecxz
emms
sbb
dec
mov
movsb
ljmp
sarl
pop
mov
loopne
jmp
sub
lcall
je
mov
enter
es
inc
jecxz
or
lcall
sub
pushf
jmp
out
inc
mov
ljmp
outsb
int3
mov
in
clc
mov
sbb
xor
in
and
jg
js
xor
xor
sbb
lods
push
inc
ja
ljmp
xchg
pushf
jle
iret
cmp
add
into
aas
cmpsl
sbb
ljmp
orb
dec
outsl
dec
fists
inc
mov
addr16
out
daa
cmp
inc
ljmp
out
in
jo
xor
push
push
push
aaa
sub
cmp
imul
dec
pop
ror
lock
cmp
daa
pusha
add
gs
add
push
xchg
dec
lret
inc
clc
testl
sbb
sub
stos
aaa
sbb
inc
jp
xchg
les
js
mov
adc
pop
sub
sbb
push
push
dec
cmp
xchg
inc
sub
stos
dec
lahf
call
dec
cmpsb
pop
orl
xchg
cwtl
xor
mov
jo
int
iret
ss
push
out
or
nop
int
sti
cmp
test
lds
add
and
insb
inc
rclb
sbb
roll
out
das
iret
and
sbb
jmp
imul
lods
mov
add
push
dec
ss
or
jmp
xor
je
cmpsl
inc
mov
out
clc
mov
leave
jmp
loop
test
sbb
or
into
daa
dec
rorb
dec
das
loope
ljmp
call
xor
sub
hlt
outsl
adc
test
jmp
dec
nop
insb
mov
pop
dec
push
scas
ljmp
inc
add
loope
sbb
mov
xor
fdiv
fistl
orl
ljmp
pop
je
test
push
mul
jmp
xchg
test
scas
lret
stc
pusha
cld
pop
ds
daa
push
movsb
dec
fucomi
pusha
scas
into
jl
or
inc
pushf
arpl
mov
push
xlat
in
clc
sti
insl
push
or
popf
loopne
mov
outsl
out
jnp
mov
push
je
and
movsb
loopne
pop
enter
icebp
cld
add
jp
xlat
imul
aas
inc
push
inc
pop
scas
fnsave
or
xchg
mov
test
push
cmp
dec
inc
popf
inc
dec
pop
push
aas
adc
cld
push
jae
adc
or
xchg
jne
outsl
cld
lods
sbb
rcr
mov
imul
adc
vmwrite
and
xor
sub
mov
icebp
jo
mov
enter
cmpsb
lock
jb
daa
sub
pusha
roll
xor
jne
or
adc
hlt
sahf
call
int3
fbstp
popf
push
das
je
int
xorl
stos
jo
insl
outsb
loope
sahf
out
pop
in
sub
in
punpckldq
stc
inc
mov
cmpsb
jmp
dec
js
in
jne
lea
test
push
xor
pushf
pusha
sarl
jns
das
pushl
and
in
dec
mov
jo
sub
jmp
pop
adc
adc
or
insb
cwtl
jp
and
scas
jae
repz
and
stc
adcl
push
jmp
jns
jbe
bound
xchg
into
scas
in
pop
mull
rcrl
jo
inc
sbb
xchg
inc
pop
mov
mov
adc
jl
out
inc
jp
inc
cwtl
xor
add
js
popa
cs
dec
int
sub
or
sbb
je
mov
inc
cld
or
push
test
and
and
dec
test
or
inc
aas
movsl
cmp
mov
jl
subl
insl
adc
into
lret
cmp
test
xchg
jb
ret
sub
das
loopne
xor
mov
push
lock
pop
scas
push
dec
mov
loopne
xor
or
cmp
into
jl
btrl
pop
dec
dec
outsl
mov
ret
out
lea
pop
les
ss
adc
cmp
pop
pop
add
mov
sub
sbb
xor
jbe
loopne
insb
sub
inc
xchg
cmp
adc
dec
jb
jmp
push
je
sub
fidivl
push
mov
loop
jb
cli
or
imul
jmp
mov
ljmp
stc
into
cmp
xor
jecxz
lret
sahf
in
inc
in
jmp
sti
das
in
dec
outsb
sti
popa
jno
shlb
mov
jnp
daa
je
testb
fsubrl
jnp
es
xor
xor
push
jbe
xchg
into
das
sub
das
sbbb
inc
test
dec
enter
int3
sbb
leave
pop
aas
loopne
mov
xchg
or
adc
call
sbb
jle
sarl
dec
into
insl
push
sub
ret
push
add
pop
insb
jbe
xor
outsl
imul
pop
lods
fstps
pop
adc
ds
lock
cmpsb
mov
shll
in
xchg
sub
xor
adc
imul
int
jg
push
xchg
lock
mov
imul
cmpsl
ret
out
cmpsb
fdivr
in
sub
mov
mov
cmp
enter
mov
loope
sub
sti
mov
mov
fstl
jb
fisubs
in
jl
aad
mov
dec
daa
outsl
inc
and
je
sub
xchg
addr16
mov
pusha
outsl
add
adc
aam
je
in
mov
xor
mov
xor
inc
xorl
loopne
cmp
and
out
insl
mov
pop
or
lret
add
sub
sbb
push
cmp
jo
push
xor
lcall
pop
lea
sti
cmpb
stos
or
cmpsb
lock
push
xchg
incl
or
push
push
jecxz
stos
or
js
js
es
mov
outsl
adc
aaa
push
jp
loope
mov
sbb
fcoms
mov
cmpb
push
bound
inc
jle
adc
cwtl
xor
fstpt
mov
loopne
insl
inc
std
jmp
adc
jb
loopne
sub
hlt
aam
loop
ffreep
ja
int
and
mov
cltd
test
mov
jno
cwtl
adc
xor
dec
mov
pushf
cmc
pusha
inc
adc
lds
push
mov
sub
inc
imul
shl
cs
das
adc
scas
push
xor
pushf
ds
mov
in
adc
sub
cmp
mov
adc
adc
xchg
inc
pavgw
and
adc
dec
and
pop
iret
or
mov
arpl
rclb
cs
mov
aam
aas
je
xchg
xor
jbe
xor
out
pushf
in
push
movsl
mov
js
bound
js,pt
dec
jo
dec
rclb
or
jo
call
ficoml
push
adc
rcll
negb
jo
mov
outsb
mov
bound
out
or
jmp
sub
loopne
fildll
xor
movzbl
lock
shll
dec
xchg
lret
or
loop
lea
sbb
jecxz
mov
mov
dec
and
lret
mov
sub
das
dec
inc
push
js
push
andb
call
lea
or
mov
hlt
loopne
dec
dec
sub
or
dec
hlt
mov
cmp
cs
loop
jge
in
sub
pop
or
loope
dec
outsl
cmpb
out
push
sub
push
inc
adc
inc
dec
mov
xor
push
push
out
dec
wrmsr
or
jmp
insb
subb
or
or
mov
xchg
inc
sub
xor
or
mov
dec
pop
jne
test
inc
test
adc
ljmp
mov
adc
int3
je
xor
add
out
sub
or
sbb
mov
sub
test
aas
in
or
cmpsb
push
pop
push
and
inc
jae
jg
add
jo
scas
das
fs
jg
inc
ja
pusha
or
or
xchg
outsb
icebp
insb
push
and
cmp
mov
rcl
jo
lock
lret
mov
cwtl
test
jecxz
fnsave
xchg
mov
aas
mov
mov
outsl
test
test
mov
mov
xchg
mov
and
add
icebp
xor
je
mov
inc
es
out
dec
stos
lock
xor
outsb
sbb
or
jl
out
bound
addr16
pop
stc
gs
loop
jmp
or
in
lcall
dec
mov
dec
aad
loopne
scas
fwait
adc
int
arpl
movl
dec
incl
iret
xchg
call
add
mov
mov
pop
movsl
imul
fnsave
jp
pop
mull
adc
movsl
out
call
push
xor
je
jb
loopne
test
lcall
cmp
rclb
cs
pop
loope
out
jmp
outsl
or
enter
lcall
xor
je
loopne
ret
sub
cmpsb
lock
jecxz
lea
lret
lods
data16
inc
and
xchg
push
push
mov
cmp
xchg
das
adc
lock
scas
in
and
pop
bound
jnp
mov
lret
jo
stos
or
pop
cmp
cmpsb
cmpsb
arpl
insb
outsl
jg
pusha
cmp
pop
into
outsl
stos
sbb
jne
fstps
dec
mov
xchg
in
lcall
cmpsl
mov
jmp
aaa
mov
mov
jo
push
loop
popa
rcrl
sub
push
shrb
in
pusha
out
je
int
shlb
mov
lock
pop
push
sub
out
and
dec
dec
in
push
loopne
cs
dec
test
pmaxsw
mov
rorb
int3
xor
jg
repnz
mov
jge
out
pop
cmp
or
jle
loopne
mov
call
xor
jmp
ljmp
mov
add
sub
cltd
lahf
cmpsl
cmpsl
add
or
xor
xor
adc
mov
adc
out
mov
insb
rol
cs
leave
cmp
push
dec
mov
and
in
jl
or
cmp
pop
lock
scas
int
push
ljmp
add
mov
nop
or
mov
mov
iret
out
jmp
popf
inc
pushf
gs
adc
or
pop
xchg
sub
lods
xchg
jb
inc
outsl
movsl
add
sub
mov
jb
or
push
push
jmp
inc
insb
je
in
push
fsubs
clc
shld
fs
repnz
xchg
subl
aaa
push
loop
add
cs
mov
movsl
mov
add
add
je
inc
push
pop
mov
push
arpl
stos
mov
mov
mov
adc
adc
das
pop
mov
nop
outsl
mov
jnp
call
push
jo
fwait
dec
jb
jg
repnz
out
inc
repz
dec
lock
je
call
dec
jne
cli
inc
cmc
lods
in
sub
dec
mul
jmp
ja
loopne
inc
imull
std
dec
js
repnz
adc
popa
push
add
inc
aad
dec
adc
mov
jmp
cmp
dec
or
out
lock
sbb
pop
loopne
mov
subb
jmp
jle
or
xor
ror
lock
sti
dec
in
nop
out
stc
and
xor
out
jns
clc
dec
adc
push
push
jns
push
movntq
mov
mov
xor
pushf
outsl
in
and
xor
jg
fs
or
dec
jmp
mov
xchg
test
or
or
dec
lock
dec
push
push
jle
insl
dec
in
push
call
cltd
cmpsb
shlb
or
nop
dec
clc
lds
pop
jno
out
sub
icebp
mov
in
mov
shll
adc
repz
std
pusha
scas
out
sub
les
sbb
dec
push
nop
int
dec
sti
jle
pusha
inc
sbb
fs
clc
pop
icebp
sub
sbb
jo
rcrl
fdivrl
in
cltd
pushl
or
loopne
in
dec
jl
xchg
jp
dec
in
or
jg
jmp
inc
bound
mov
in
jne
mov
daa
sti
ja
dec
gs
in
push
jle
decb
xchg
or
or
nop
into
js
or
cld
cmp
out
or
js
jge
add
lea
sarb
mov
outsl
pop
jecxz
in
hlt
dec
loop
mov
cmc
pop
mov
jg
cli
mov
jo
imul
sub
shl
ret
into
push
pusha
xor
lock
aam
loope
in
cmpsl
outsl
pusha
push
repz
repz
sti
enter
xor
xchg
dec
fiaddl
out
jl
fmul
je
or
cld
or
adc
jg
cmpsl
mov
xchg
xor
loope
sub
call
outsl
jo
enter
or
jmp
test
push
inc
loop
shlb
pusha
test
cmp
int3
scas
les
loopne
mov
sub
fprem1
jmp
mov
js
imul
clc
or
add
sub
adc
out
sub
das
pushf
iret
dec
insl
or
add
idivl
lcall
jo
ret
fwait
or
adc
in
cwtl
fs
outsl
xor
xor
add
xor
out
pop
mov
arpl
pop
out
inc
ss
test
jns
aam
push
ret
adc
stc
xorl
stos
jg
ds
push
adcl
or
sub
inc
inc
imul
out
mov
call
sbb
fldenv
movsl
adc
add
pop
inc
shrb
out
or
repnz
les
xor
dec
push
jg
fsts
scas
out
and
cmp
jbe
gs
ljmp
jb
insb
push
arpl
daa
fldt
repnz
insl
out
fwait
pushf
cld
xor
pop
in
cmp
ljmp
outsl
out
dec
subl
dec
ja
and
bound
mov
mov
sti
sti
sahf
cmpsb
push
pop
mov
sarb
fbstp
push
int
outsl
jo
xchg
in
inc
or
stc
ret
lahf
jb
mov
hlt
adc
mov
sub
add
sub
clc
jmp
bound
outsl
pop
push
loopne
rcr
dec
icebp
rorb
dec
jb
xor
cmpl
and
call
jp
loopne
fs
test
inc
lock
out
leave
aaa
or
lods
outsl
or
movsb
inc
inc
insl
out
or
lock
mov
pop
call
jo
arpl
gs
lcall
mov
in
cmp
and
xchg
jo
push
lods
cmc
or
imul
out
divl
rol
in
mov
in
mov
out
pop
fs
pop
fs
sti
push
jecxz
cwtd
inc
xchg
shr
jne
xchg
mov
dec
xor
hlt
lcall
dec
and
push
popl
jae
bswap
insb
cli
sub
adc
inc
aam
push
add
pushf
ret
sti
pushf
pcmpgtb
int3
insb
stc
jp
jl
inc
push
out
enter
loope
push
adc
aad
xor
popa
outsl
jg
jg
jo
scas
or
xor
dec
inc
xor
push
imul
dec
jmp
sub
or
or
mov
popa
leave
jecxz
xchg
fnstenv
jo
scas
int3
mov
jp
pusha
ljmp
pusha
cltd
mov
lret
xchg
inc
pop
int3
push
push
xor
mov
xchg
je
jge
iret
out
enter
cld
mov
pushf
pushf
jb
popw
lock
test
jnp
out
pop
out
sub
inc
cmp
je
lds
and
sahf
icebp
jo
inc
mov
mov
cli
jecxz
or
repnz
pop
xchg
mov
push
rcl
cmp
gs
js
ret
push
insl
es
jo
push
pop
insb
jecxz
jb
lcall
jo
pusha
test
aad
ds
int3
sarl
test
movsl
pop
or
arpl
pop
outsb
sub
cli
ret
jecxz
sti
jbe
mov
xor
mov
fwait
mov
ss
push
cmp
call
cmpsl
cmovne
fs
dec
mov
adcl
xor
ljmp
lret
int3
fwait
in
icebp
out
and
lock
jno
mov
dec
xchg
jecxz
push
in
jp
pop
dec
call
movsb
mov
push
into
fcmovbe
aad
pusha
dec
popa
in
scas
pusha
xor
sti
adc
pop
and
loop
es
dec
push
insb
push
adc
cli
les
je
lds
outsb
insl
or
imull
dec
das
pusha
jg
cltd
inc
jmp
sbb
aam
adc
jle
xchg
popf
out
xchg
test
xor
cmp
mov
sub
xor
sbb
mov
push
mov
lahf
int3
xchg
xor
dec
xor
push
iret
push
or
push
lret
push
or
push
rsqrtps
push
in
push
sub
push
leave
push
or
xorl
repz
push
mov
mov
adc
mov
xchg
mov
mov
mov
mov
jbe
xchg
mov
mov
mov
mov
ja
xchg
mov
mov
xlat
mov
mov
int3
cmp
mov
cwtl
xor
stc
outsb
jnp
arpl
mov
icebp
outsl
push
hlt
pop
outsl
cmp
sbb
imul
jo
jg
pusha
xchg
jo
xlat
dec
cmc
or
arpl
loop
inc
mov
jo
push
inc
popa
dec
jle
adc
dec
stc
dec
jne
push
cld
dec
jb
dec
je
dec
jge
dec
mov
imul
mov
cli
dec
imul
cmp
push
sti
fidivl
push
jl
inc
jp
imul
lcall
lock
insl
jecxz
loop
push
fwait
adc
sub
js
call
cld
dec
jnp
std
loope
in
fistl
mov
repnz
addr16
bound
notl
inc
in
inc
jecxz
and
inc
jg
jns
lds
pop
mov
scas
jnp
adc
mov
mov
sub
pop
sarb
out
jg
js
stos
lcall
or
push
lods
push
push
adc
mov
insl
out
cwtl
mov
cmc
cmp
mov
or
sti
ss
jne
mov
xchg
jge
in
fisubs
enter
data16
and
pop
push
out
scas
cmp
pop
jge
xchg
dec
xchg
inc
ljmp
xor
jne
daa
dec
xorb
insl
fldt
test
dec
pop
and
mov
out
pop
int3
enter
and
pop
dec
in
lods
jg
mov
jmp
loope
xorb
push
scas
pop
jl
push
xor
xchg
push
jno
jp
jbe
inc
jle
ret
les
insb
adcl
push
inc
ret
movsl
inc
add
pop
inc
nop
pushf
out
xchg
mov
xchg
push
mov
or
test
frstor
xchg
cmp
adc
pop
or
insl
nop
mov
jecxz
mov
push
test
iret
jge
iret
xor
push
push
dec
jg
inc
cmp
data16
js
testb
adc
adc
les
repz
pop
arpl
sbb
test
in
out
daa
inc
inc
xchg
jg
nop
push
cmp
jg
push
loopne
and
dec
les
lods
popf
scas
popf
out
sub
popf
jle
cmp
push
cmp
cmp
daa
loop
push
out
dec
dec
and
out
jecxz
pop
mov
aaa
mov
fsubrp
out
in
xchg
and
xchg
push
push
push
outsl
out
dec
fnstenv
popa
push
inc
adc
dec
mov
cmp
jns
xchg
test
mov
fldenv
outsl
push
ficompl
fimuls
adc
sub
or
cmp
in
gs
lock
out
les
sahf
mov
dec
jo
in
nop
push
pop
in
push
nop
pop
in
mov
pop
pusha
aam
fcmovne
xchg
dec
push
and
fcoms
adc
sarb
mov
sub
pop
xchg
aam
push
adc
movsb
std
in
jmp
test
inc
outsl
cmp
out
int
lds
xor
xor
jbe
lds
lea
or
loop
movsb
jnp
pop
lcall
dec
adc
pushf
orb
mov
call
outsb
add
and
cmp
mov
push
xor
mov
arpl
add
and
mov
arpl
arpl
or
iret
push
scas
aas
add
jnp
aam
mov
iret
cli
lods
lea
popf
popf
outsl
popf
dec
popf
dec
popf
sub
and
in
ja
mov
mov
push
loop
mov
jmp
out
or
dec
or
adc
repz
test
pop
mov
cltd
mov
rcll
xchg
pop
aam
jge
lcall
push
cli
push
sbb
push
pop
fs
push
je
jo
adc
jmp
loope
std
sub
imul
in
iret
xor
sub
push
call
jmp
cs
gs
xor
pop
sub
dec
popa
push
inc
out
push
jge
movsb
ja
repnz
movsb
push
jecxz
imul
xor
lods
lock
push
jmp
hlt
dec
out
lea
inc
push
push
insl
out
loop
out
imul
pop
hlt
or
jae
push
addr16
dec
cld
dec
jg
sub
or
insb
dec
cmc
imul
addr16
jns
jo
scas
inc
jbe
jmp
pop
test
stos
outsl
jle
dec
jne
push
out
pop
pop
push
jb
push
ja
xor
in
out
push
xor
lods
decb
pop
clc
inc
jecxz
out
testl
mov
call
out
arpl
mov
imul
aaa
dec
insl
ljmp
push
sbb
jbe
cmpsl
movntq
cs
iret
out
jbe
and
out
rep
sbb
dec
jbe
push
add
adc
jb
xchg
cld
adc
cmp
lret
dec
fisubrl
popa
out
and
fs
add
nop
into
xor
or
jecxz
sub
ss
mov
sub
test
ljmp
hlt
or
scas
pop
xchg
in
pusha
imul
js
test
testl
ss
test
sub
pop
hlt
dec
lods
jecxz
jo
sub
sarb
cmp
call
push
js
dec
jbe
lock
das
out
jnp
adc
fdivr
xlat
push
push
push
mov
fldenv
addl
cmpsl
inc
adcl
cli
fldt
jge
popa
int3
imul
jbe
and
fisubs
pop
cmp
jge
mov
insl
jge
inc
in
popa
std
mov
dec
jl
aaa
mov
jnp
jg
fcmovne
pop
cli
into
cmc
jg
xor
push
insb
mov
cmpsb
loope
js
pop
popa
ljmp
out
js
loope
sub
sti
and
out
clc
adc
push
pop
stos
aaa
push
lret
add
or
jecxz
dec
xchg
jl
int3
push
aad
push
or
adc
add
sub
ret
push
lock
jo
mov
inc
add
or
or
ret
aas
out
or
jae
fxam
jge
dec
call
mov
fadd
movsb
dec
jne
or
std
nop
out
push
xor
fimull
ret
gs
movl
testl
call
jg
sub
lock
adc
and
and
ret
fdivr
and
ljmp
lret
inc
pop
imul
arpl
stos
jb
cmp
push
hlt
or
jnp
add
and
jo
inc
adc
out
fidivrl
out
or
in
sbb
pusha
outsl
push
push
jmp
push
mov
push
jmp
jne
jo
icebp
adc
inc
ja
aaa
ss
lds
das
ret
in
and
pop
sub
inc
js
int3
test
dec
bound
sub
repnz
and
lods
cld
push
pushl
loope
cmp
out
insl
popa
mov
std
or
xor
ljmp
insl
sti
lds
scas
repnz
and
jo
out
test
jecxz
inc
dec
test
dec
imul
imul
jle
and
add
mov
sub
enter
loope
jnp
inc
lcall
ja
adc
loop
adc
mov
fnsave
icebp
pop
xchg
push
pop
xor
test
adc
push
and
dec
addr16
cmp
and
adc
pop
addr16
imul
das
out
push
inc
iretw
out
pop
fadds
mov
dec
int
cmp
out
mov
mov
orl
lahf
add
out
aas
mov
xchg
ljmp
mov
out
xchg
jg
mov
xchg
je
pop
inc
xchg
cld
sahf
sarl
xor
in
das
or
ret
ficoml
insl
push
cmp
xchg
xor
inc
fld
pop
ljmp
rorb
incl
mov
ljmp
jle
popa
pop
jmp
popa
movsb
or
out
ret
dec
push
sub
subb
and
mov
ds
dec
jl
aaa
ds
je
lock
test
movb
mov
iret
mov
push
fldcw
dec
mov
xchg
jg
cmpsb
je
dec
mov
lods
icebp
or
sbb
mov
dec
in
addl
add
dec
sub
inc
sub
fwait
cmp
and
pop
or
xor
cld
sub
ret
sub
enter
xor
and
int3
mov
jecxz
inc
pusha
dec
mov
jl
out
cmpsl
sbb
inc
or
popa
push
mov
pusha
cmpsb
ss
gs
in
rolb
in
pusha
jg
push
out
inc
inc
out
in
pop
lock
testb
push
jle
cmp
es
stc
push
fcomp
stc
jle
in
mov
jecxz
aam
mov
into
pop
stc
jge
je
rcrl
xor
fidivl
jp
andb
sbbl
cwtl
mov
cwtl
xchg
insb
mov
movsb
fs
adc
call
inc
xor
jne
in
test
call
mov
filds
push
pop
jb
push
pusha
loopne
cmpsl
pop
ss
call
and
fs
test
addr16
jo
imul
sub
fildll
sub
mov
jp
inc
es
xchg
add
xchg
notl
jecxz
out
outsl
add
push
jno
sub
rcrb
xor
push
jo
cmp
loope
fidivl
xor
dec
mov
xor
add
mov
xchg
movsl
pop
cli
inc
js
std
sub
in
sti
dec
outsl
xchg
mov
jge
call
scas
loop
stos
cmpl
sahf
push
sub
jb
mov
in
mov
add
sub
lock
sbb
imul
aam
inc
test
hlt
xor
mov
cmp
sub
adc
out
and
ljmp
add
sbb
cli
jae
jp
mov
dec
pop
and
inc
adc
rcrb
jb
add
ffreep
add
sbb
les
push
stos
sahf
mov
sub
inc
nop
sub
jnp
repnz
sbb
add
push
sub
dec
sub
leave
and
pop
mov
incb
sarl
mov
popf
jae
and
orl
xchg
push
in
mov
aam
lret
mov
mov
and
sbb
cmp
ja
sbb
adc
adc
lods
pop
stos
adc
and
mov
scas
sub
push
push
outsl
add
nop
push
outsb
add
nop
push
insb
add
nop
push
imul
ljmp
xor
negw
cmp
loope
add
mov
inc
clc
das
fcoms
or
dec
cwtl
inc
add
mov
push
ss
push
dec
cmp
out
cli
xor
jmp
setnp
mov
xor
into
mov
loop
lret
sbb
add
test
xor
push
add
test
mov
mov
push
into
mov
jae
cltd
fwait
mov
repz
add
ret
divl
pop
or
add
pop
orl
mov
outsl
pinsrw
loopne
in
out
push
push
js
sbb
sub
imul
ret
fs
cltd
imul
mov
push
iret
dec
loop
xor
lods
xor
cltd
sbb
daa
sbb
inc
dec
jmp
jg
mov
ja
sub
inc
cmp
out
dec
loope
adc
imul
sarb
loop
popa
aam
movsb
jp
jle
test
out
adc
repz
andl
inc
jne
es
jg
jae
notl
fucomip
scas
orb
popf
pop
mov
cmp
into
je
outsl
fdivl
inc
mov
mov
lea
push
or
addb
inc
rcll
imul
jg
orl
rcrl
leave
mov
das
xor
pop
pushf
aad
add
mov
pop
fs
push
cmp
dec
mov
cld
and
xchg
enter
imul
mov
cmp
call
imul
mov
xor
test
sub
imul
jge
notl
ja
jp
mov
sub
out
ja
pop
int3
push
fisubrs
imul
rolb
push
in
dec
mov
imul
mov
and
dec
pop
adc
test
push
push
xor
dec
test
and
rorb
mov
sub
pusha
pop
xchg
xchg
add
push
loop
cmpsb
xchg
bound
add
loopne
movsl
dec
in
push
cmp
push
cmpsl
or
ja
andb
mov
sbb
movsl
je
lds
and
or
or
or
sbb
jnp
shlb
leave
enter
divl
xor
mov
xor
or
loope
mov
stos
lods
mov
out
mov
sbb
or
cltd
dec
out
mov
out
mov
loopne
mov
jns
sub
scas
xchg
jbe
and
mov
mov
pop
sbb
sub
gs
imul
mov
ss
daa
sarb
jecxz
loop
and
lods
lods
loop
movb
lds
adc
xor
pusha
jno
lods
add
hlt
mov
mov
push
pushl
mov
sbb
sbb
outsb
inc
andb
arpl
push
adc
pop
sub
lock
pop
inc
sub
sub
sbb
jecxz
xchg
cmc
test
and
xchg
je
stos
mov
repz
aaa
les
fwait
loop
jne
loop
mov
repz
repnz
push
mov
xchg
aas
jb
cs
or
inc
lods
xchg
sub
jnp
adc
dec
jnp
jae
push
and
adc
lahf
out
jnp
shll
push
test
nop
add
or
rcll
sub
sub
pop
fmull
sub
out
loop
into
mov
rcl
aas
xor
xchg
and
sbb
sbb
mov
dec
mov
dec
adc
jb
push
jmp
clc
stos
std
ror
push
push
dec
cmp
rclb
mov
jmp
xchg
dec
stc
sbb
dec
out
xor
add
popf
imul
loopne
je
out
pop
or
loop
dec
idiv
cmp
cmc
lock
aad
mov
lods
cs
gs
into
jge
dec
jl
add
jge
inc
leave
out
test
sahf
flds
cli
popa
movsl
add
dec
jbe
jae
rcll
enter
leave
push
imul
in
push
lock
sar
adc
daa
repz
and
shlb
and
cmp
mov
loop
xchg
mov
je
outsb
shl
xor
jae
mov
inc
outsb
popa
jp
fwait
shl
inc
rep
sbb
pushf
cld
pop
in
cmp
lock
shrl
fisubrl
arpl
push
idivl
out
call
dec
xchg
mov
sub
add
ret
sub
inc
dec
iret
addr16
je
in
mov
sbb
sbb
call
ja
dec
mov
daa
outsb
xchg
fisttpl
shufps
cmp
cmp
test
mov
xchg
mov
inc
arpl
ss
loop
out
fadd
dec
mov
cltd
je
ljmp
push
repnz
ret
jo
scas
lods
mov
mov
ja
pusha
cmp
movsl
xchg
mull
call
jg
dec
add
or
repz
out
sub
repnz
icebp
jno
popa
leave
loopne
xorb
pop
pusha
xor
int3
je
repnz
daa
mov
and
and
lods
mov
jl
out
fiaddl
xor
pop
dec
adc
data16
sub
int
adc
out
into
add
cmp
imul
lea
and
arpl
add
mov
rcll
sahf
mov
lcall
ret
enter
mov
push
mov
loopne
int3
scas
pop
addr16
inc
mov
sbb
fwait
aam
pusha
or
lret
shlb
shll
dec
sti
test
rcrl
push
scas
inc
fmull
mov
xor
imul
lcall
int3
cmpsb
pop
jmp
xor
dec
mov
int3
pop
movsl
adc
cld
push
arpl
punpcklwd
mov
jg
addr16
mov
and
ret
incl
insl
lock
mov
arpl
aam
add
repnz
or
push
mov
call
adc
adc
gs
adc
cmp
int3
dec
divl
mov
jg
dec
pop
loop
or
jmp
mov
rorl
out
xor
lock
es
sbb
into
sub
mov
push
stos
pusha
lahf
aam
sub
test
out
js
pusha
xor
int
cld
xor
xchg
int3
rcr
iret
xor
pop
push
shlb
ljmp
ret
shrb
leave
push
hlt
inc
dec
adc
or
outsl
ljmp
push
or
mov
les
mov
inc
and
ret
daa
fmuls
outsl
pop
pop
lock
out
jmp
cmp
sub
js
lods
imulb
jae
ljmp
rcrl
out
repz
adc
je
js
jg
dec
adc
lock
jb
mov
insl
xlat
insl
lea
lock
and
xor
stos
pop
mov
bound
sbb
dec
and
xor
pop
in
adc
pop
or
cmp
lret
cltd
xchg
dec
ret
jp
adc
xlat
xor
ror
sbb
addr16
inc
mov
daa
mov
arpl
popa
adc
mov
cld
pop
dec
jb
loopne
gs
sub
out
int3
fbld
pusha
jo
in
sub
pusha
sub
fcomps
mov
stos
lods
cs
daa
mov
loop
int
pop
pop
in
xor
push
bswap
jge
ds
push
in
add
mov
inc
in
scas
ljmp
adc
in
mov
push
lret
stc
jle
pop
sbb
in
pcmpeqb
outsl
sub
push
out
jnp
fmuls
loope
lret
push
mov
call
out
mov
stc
aas
das
dec
xor
sbb
jle
push
js
push
jg
leave
mov
das
inc
jmp
lcall
clc
jno,pt
push
aad
insb
push
adc
cli
mov
movsb
mov
sub
jno
lock
rcrb
jb
icebp
inc
add
pop
xor
sub
out
clc
inc
imul
inc
test
mov
ljmp
repz
push
in
or
push
xor
ds
mov
pusha
out
jl
sub
pop
mov
lock
andb
mov
xchg
sahf
mulb
in
jp
movsb
mov
shlb
cmp
cli
call
sbb
jb
dec
jecxz
popa
cltd
dec
xchg
or
cmc
int3
lret
adcb
iret
test
lret
add
into
add
mov
mov
mov
or
cmp
jl
fs
jmp
add
out
mov
imul
mov
add
addr16
imul
sbb
inc
push
and
inc
sub
jb
and
xor
push
push
mov
xor
icebp
lods
out
mov
repnz
aam
insb
fwait
rclb
cltd
sahf
or
add
mov
shlb
lcall
sub
repz
xchg
push
add
pusha
out
lea
pop
and
lods
ror
loope
data16
das
push
mov
pusha
je
push
cmp
ficoml
mov
loope
pop
and
fadds
sbb
lock
pushf
test
in
test
pop
xor
mov
xchg
lret
das
popf
addr16
cmpsl
cs
loopne
loopne
out
dec
std
insl
or
or
mov
enter
in
int3
out
fisttpll
ret
jl
xorl
shrb
xor
xor
pushf
mov
addr16
mov
clc
push
mov
push
cmp
and
sbb
inc
test
cwtl
test
les
sahf
sub
push
or
insl
inc
out
or
sub
adc
out
outsl
mov
frstor
dec
rcrl
mov
mov
js
mov
rcr
out
adc
xchg
sub
xchg
imul
test
hlt
add
cld
pusha
add
sahf
xchg
outsl
arpl
pop
test
mov
aam
push
cmp
sub
jecxz
mov
insl
icebp
pushf
push
imul
or
add
jle
jns
pop
sub
leave
dec
aas
mov
lods
or
mov
pop
sub
and
inc
out
add
fistl
into
and
jns
fildl
dec
pop
daa
xor
cmp
insb
jmp
pcmpeqb
push
fs
sbb
adc
push
jg
and
lods
hlt
xor
mull
pop
cli
push
loope
cmp
loop
mov
arpl
mov
test
mov
jg
outsb
xchg
dec
push
jp
jo
shlb
or
sbb
pop
data16
jno
mov
out
push
dec
out
mov
add
cmp
xor
sbb
sbb
hlt
cmp
int3
push
cmpsl
jp
stos
push
jmp
push
daa
jge
shl
int3
outsl
icebp
push
sahf
cmp
pop
push
aam
or
cmp
xchg
mov
loop
adc
lods
push
jp
push
pop
rcl
into
rcl
sbb
or
xchg
shll
push
into
add
fs
ja
inc
or
mov
pop
flds
clc
enter
adc
leave
lock
ss
aad
sub
std
adc
scas
dec
jmp
or
addr16
adc
or
fnstsw
enter
xor
addr16
fnstsw
mov
sahf
push
jne
jae
jle
mov
jmp
sbb
pop
call
aaa
jb
or
mov
or
xor
sahf
inc
loope
or
mov
mov
in
inc
js
mov
adc
roll
jge
dec
sarl
sub
loope
mov
xacquire
popf
clc
push
cmpsw
adc
mov
xor
cld
int
popa
iret
stc
in
sub
add
loope
xchg
fisubrl
push
pusha
repnz
adc
ss
and
push
je
xor
sub
test
inc
push
test
aam
jmp
xchg
iret
dec
dec
inc
andl
xchg
inc
xchg
cli
adc
inc
sahf
cmc
xor
imul
je
push
fprem1
xchg
js
outsl
in
gs
push
daa
pusha
fistpll
daa
jne
lock
sar
push
and
iret
push
mov
lret
rolb
in
inc
lret
nop
rcll
cltd
xor
and
jp
ret
pop
inc
sub
xor
loopne
push
mov
xchg
pop
push
pop
mov
test
mov
inc
or
inc
sti
pushf
inc
push
dec
inc
fwait
outsb
loop
pop
imulb
adc
insl
xchg
imul
je
adc
xor
insb
push
adc
ret
sarl
xor
or
xor
mov
xor
incb
lock
or
outsl
xchg
lcall
out
mov
out
in
aam
pop
cs
outsl
sub
mov
jecxz
loop
out
repnz
adc
or
inc
xor
pop
xchg
xchg
or
jmp
outsb
aad
sbb
daa
loop
out
pusha
out
cmpsl
jnp
and
mov
jns
nop
negb
add
imul
pop
out
shl
cmp
std
insl
in
sub
push
nop
aaa
js
push
dec
jnp
fldenv
mov
and
mov
adc
lock
loop
arpl
cmp
pop
subb
sbb
xor
mov
cmp
bound
xor
xchg
pusha
sub
mov
enter
cmpsl
nop
mov
adc
adc
pop
ret
push
push
icebp
dec
fdivrs
movsl
add
sahf
inc
pop
fcomp
adc
cmp
cld
hlt
je
or
fisubrl
out
imul
hlt
sbb
js
dec
add
jo
or
adc
scas
push
sbb
icebp
sbb
imul
movsl
addr16
push
cmp
in
hlt
dec
pop
pop
das
loop
push
fistpl
in
ljmp
data16
in
das
in
ret
loopne
call
pusha
out
sub
aam
in
mov
sub
mov
hlt
sub
repnz
in
push
sbb
out
in
fimuls
xchg
dec
hlt
sbb
cld
sub
dec
sbb
das
add
in
bound
dec
loope
adc
xchg
loopne
add
push
or
xor
js
inc
bswap
mov
sti
fcoml
xchg
arpl
sub
lock
bound
dec
repnz
fwait
or
outsl
aam
cmp
outsl
push
xchg
out
imul
test
adc
sub
mov
dec
fs
dec
mov
push
inc
pop
jo
mov
or
ret
cmp
mov
mov
loop
aam
sbb
insl
jmp
push
and
inc
push
adc
aaa
insb
or
repnz
fs
adc
jmp
jns
push
jg
pop
call
popa
test
rolb
xor
lods
jb
cmp
adc
inc
or
inc
xor
and
lahf
xor
loop
in
outsl
outsb
repnz
int
call
push
jo
ljmp
xchg
mov
sub
xchg
jnp
xchg
push
jo
push
add
push
arpl
repnz
jge
ja
les
sti
fs
cmpsl
xorb
les
xor
add
je
je
and
mov
in
xchg
je
xchg
mov
add
addb
ret
mov
daa
xchg
jo
dec
mov
movsl
aaa
sbb
push
loop
enter
mov
add
sub
sbb
lods
sub
jmp
mov
je
pop
push
adc
push
loop
test
jo
in
mov
fwait
pop
mov
clc
jp
movsb
mov
inc
scas
cld
sti
adc
in
mov
negl
push
das
cwtl
push
push
mov
repnz
cs
outsl
popa
cmp
loop
pop
mov
jecxz
pop
repnz
out
in
jne
push
mov
push
outsl
xchg
outsl
pop
cmp
sub
or
dec
inc
jae
hlt
mov
std
addr16
cmpsb
test
sti
and
mov
call
sbb
int3
test
mov
aam
scas
cmc
jle
mov
jecxz
leave
data16
push
sub
xchg
call
out
insl
pusha
lcall
call
sub
loop
inc
adc
stos
ret
shlb
subl
scas
loopne
add
imul
out
out
lods
scas
and
out
mov
add
fdivrs
mov
push
fs
scas
jge
fcompl
divl
adc
cmpsb
inc
or
adc
add
fsubp
mov
pop
adc
push
mov
repz
jb
adc
test
adc
fsts
outsl
jmp
enter
add
out
cli
mov
aaa
dec
add
sub
int
test
movsb
fs
arpl
adc
mov
add
pop
cmp
loope
das
fucom
loop
pusha
addr16
je
sahf
rcrl
mov
rclb
pusha
mov
mov
dec
call
sub
cmp
mov
xor
int
pusha
mov
cmpsb
jb
mov
addr16
pusha
push
cmp
outsl
pop
jo
adc
outsb
adc
adc
leave
dec
push
into
das
scas
cmp
pusha
test
clc
bound
rorb
in
lods
sbb
lcall
daa
pop
hlt
test
std
je
int
pop
mov
jg
sub
js
pusha
inc
mov
pop
mov
das
mov
adc
pushf
fwait
in
fcoms
cmp
repz
and
mov
cmc
xlat
xchg
andb
jmp
aaa
aas
jns
aad
shll
sub
imul
stc
jmp
faddl
adc
sub
xchg
jo
xchg
xchg
enter
pushf
movsl
ret
and
subb
dec
sahf
pop
imul
mov
repz
daa
in
std
cltd
mov
push
ffreep
jo
out
aas
gs
cltd
insb
pop
dec
inc
inc
mov
into
xor
jnp
cltd
xorb
pop
push
outsl
loopne
test
call
push
inc
mov
inc
cmpsl
add
inc
mov
orl
or
dec
mov
push
dec
and
fwait
push
imul
jno
jae
mov
fs
test
and
cmc
mov
inc
pop
jb
adc
sub
or
mov
xchg
insb
and
imul
xor
inc
pop
add
clc
jge
bound
sub
xor
or
mov
lock
xorl
cmp
les
das
push
insb
sub
push
inc
mov
jo
mov
xor
inc
loopne
imul
mov
lret
sub
push
out
out
fistpll
sub
addr16
jb
xor
or
cld
push
fisttps
call
movsl
lahf
popa
mov
mov
aas
cltd
inc
xor
add
lret
jge
ljmp
stos
dec
xor
call
out
daa
cld
bound
lock
pusha
fsubs
sub
dec
jo
out
jmp
xor
hlt
push
ret
es
or
fwait
ljmp
insb
add
pop
fimuls
je
lcall
dec
mov
jp
sahf
pop
jb
andl
aas
inc
dec
xor
out
movsb
out
inc
push
mov
cmp
fcmovu
mov
nop
dec
mov
sbb
fisttpl
loop
adc
lods
push
dec
or
stos
cmp
mov
iret
scas
movsb
lods
pop
outsl
into
test
repnz
xchg
xlat
jl
into
cmp
lret
or
jp
jns
sub
lahf
mov
xchg
adc
push
test
adc
mov
leave
std
test
cmp
insl
aad
std
ret
sbb
inc
lock
cmp
mov
out
adc
mov
ret
mov
in
inc
inc
inc
xchg
nop
mov
pushf
test
mov
xchg
sti
mov
mov
pusha
fwait
bound
pop
push
insl
dec
sub
das
jo
lea
out
out
xor
loopne
int3
sub
inc
outsw
ja
and
push
xchg
das
popf
cli
mov
iret
dec
mov
jo
sub
mov
sub
idiv
pop
xchg
inc
sbb
outsl
pushf
xorl
mov
jo
lret
jmp
popf
mov
shr
out
or
push
in
daa
fwait
pop
sub
cld
xchg
pop
add
pop
cld
cld
cli
addr16
xor
loopne
jg
or
xor
daa
repnz
pop
hlt
popa
pop
je
mov
fst
in
push
outsl
xchg
or
mov
daa
imul
cmp
push
mov
inc
cld
test
sbb
bound
cltd
flds
xor
je
jb
cli
dec
mov
and
adc
decb
fiaddl
push
jne
out
rcl
es
stc
push
xor
popa
sahf
js
mov
enter
and
outsb
add
clc
xor
movq
test
ljmp
call
adc
into
lock
popf
add
pusha
jmp
es
pop
jno
mov
push
and
xor
ret
pop
mov
mov
dec
pop
div
add
lcall
nop/reserved
sub
aaa
inc
push
stc
ficoml
mov
scas
cmp
jae
out
in
sbb
fisttpll
jmp
mov
dec
mov
ljmp
jl
daa
and
das
adc
push
shlb
aam
mov
lret
or
jg
sub
ret
loop
lock
cld
pop
push
cmp
shlb
sub
dec
inc
adc
push
or
xchg
pop
push
dec
lret
movsb
sub
movsl
gs
or
pop
xor
dec
outsl
pop
cmp
out
stos
lods
xchg
xlat
test
jge
decb
out
xchg
xchg
mov
xchg
scas
ffree
arpl
add
push
loope
stos
je
xchg
fsubp
pusha
sub
cmp
adc
out
fcmovnb
xor
and
dec
jo
outsl
and
sub
cs
out
popa
mov
jge
outsl
loop
lods
sub
mov
cli
dec
inc
out
out
xchg
repnz
cmp
mov
repnz
mov
out
lea
rcrb
ja
xor
fs
das
in
ds
xor
cmpsl
aaa
mov
xorl
cmp
mov
jge
mov
loop
or
arpl
lret
push
je
jmp
jle
mov
test
sar
xor
loop
mov
mov
std
sbb
sbb
mov
xor
js
jmp
cli
pop
sbb
pop
dec
inc
cmp
in
je
fst
jbe
mov
inc
xchg
or
sbb
scas
mov
push
dec
jo
mov
push
hlt
cld
or
xor
fldenv
add
cli
sbb
cmp
xchg
sahf
push
or
push
outsl
fisubrl
mov
rol
out
movsl
xchg
loop
and
xlat
rcrb
aas
insl
and
push
jo
adc
push
fmull
vunpcklps
in
popa
sub
fmull
pusha
xor
mov
and
outsl
std
scas
sub
jl
iret
sub
mov
lret
adc
jl
decb
js
std
cmpsl
out
mov
popa
rolb
jbe
das
mov
cwtl
dec
push
mov
daa
ja
xlat
dec
popa
xor
das
notl
shlb
jmp
aad
mov
fadds
sub
lret
or
jge
cltd
loop
xor
call
xchg
mov
adc
mov
ret
sub
js
idivb
dec
scas
stc
pushf
jo
sub
pushf
gs
xor
mov
sti
cmp
jmp
imul
adc
clc
jmp
jnp
rcll
scas
into
cli
mov
mov
pop
xor
dec
pushf
shll
add
bound
loop
cmpsl
in
add
push
out
mov
packuswb
inc
insl
loop
adc
cmpsb
out
shlb
addr16
daa
dec
jge
sub
xor
pusha
jo
mov
sub
jg
mov
lahf
cmpsl
jg
pusha
out
clc
cwtl
or
arpl
sbb
xor
push
or
out
sub
pop
insb
fcmovnu
xchg
in
cmp
iret
data16
test
call
push
xor
jg
loopne
outsl
dec
addr16
data16
sub
dec
mov
loope
mov
cs
loopne
std
test
loope
jmp
aam
xlat
popf
std
push
loopne
jbe
mov
imul
stos
lret
std
scas
cmp
cmp
lds
js
pop
cwtl
ret
div
pop
jle
lret
fdivl
in
shl
call
adc
sub
mov
xchg
aas
je
shll
mov
dec
pop
sbb
mov
cli
into
call
xor
lock
dec
into
lret
test
in
push
inc
pop
loop
insb
in
dec
cmp
out
daa
jo
je
xchg
pop
cmp
add
gs
in
add
out
fbld
sub
outsl
mov
insl
in
outsb
call
imul
add
push
cmpb
mov
cld
cmpsl
insb
std
dec
out
jmp
lcall
not
dec
fsubs
pop
in
or
out
scas
mov
mov
jae
imul
xor
push
or
cwtl
repnz
jb
scas
add
jns
push
scas
xchg
repz
mov
test
cmp
or
pusha
adc
cmp
and
xchg
stc
fadds
inc
lock
incl
je
mov
sbbb
add
adc
ret
insl
fs
test
icebp
mov
xchg
cli
addr16
or
aas
sbb
push
outsl
stos
mov
in
leave
in
nop
mov
mov
sub
loopne
mov
adc
xor
mov
insb
clc
push
xchg
jecxz
in
jae
inc
popf
loope
fwait
xchg
lods
mov
pop
mov
mov
mov
scas
lahf
mov
outsl
subb
aam
bound
add
mov
ret
rorl
dec
shll
push
fadds
pop
push
and
push
adc
fmull
addr16
cmp
adc
dec
int3
cmp
jle
das
iret
add
into
add
jns
in
pop
xor
inc
xor
out
add
xchg
pop
mov
push
loopne
mov
call
push
pop
cld
flds
or
mov
orb
inc
lret
xchg
mov
inc
mov
fildl
pop
outsl
dec
mov
sub
push
mov
lds
or
inc
sbb
lahf
sarb
xor
push
sbb
mov
or
sub
sub
ds
xor
jo
sub
adc
adc
pushf
adc
mov
ljmp
cli
stos
push
lock
dec
and
cmp
lds
push
mov
add
sbb
insb
pop
lods
je,pn
sbb
mov
loopne
enter
mov
outsl
int3
pop
pop
insl
cmc
sbb
icebp
push
dec
jbe
xor
jo
adc
push
adcb
mov
out
and
je
sbb
fbld
push
adc
outsl
stc
cld
decl
pshufw
adc
xor
mov
inc
xor
inc
lcall
fistpl
ja
es
test
xor
push
jbe
or
int3
push
jo
cmpsl
ja
nop
jmp
mov
mov
push
sub
pop
pop
adc
cmpsb
out
call
jne
jg
imul
mov
test
fwait
jmp
test
pusha
xor
das
cmp
and
sub
xor
in
lret
in
addr16
frstor
popa
insb
jp
dec
imul
outsb
imul
into
or
inc
loope
sarl
cmc
or
mov
aad
and
inc
jecxz
out
imul
in
in
inc
push
filds
out
add
je
popa
xchg
daa
movsl
add
add
xchg
filds
out
lock
dec
pop
call
mov
cmp
in
add
xlat
or
add
insb
add
repz
xor
mov
fdivs
or
in
into
rep
mov
outsl
jp
push
jo
pop
in
xor
repnz
in
jae
xorb
nop
data16
lock
sbb
jo
out
sub
jg
xchg
adc
inc
incl
ret
lcall
dec
inc
mov
sub
mov
test
dec
jo
call
popa
shrl
ret
popf
jle
adc
in
dec
iret
std
sbb
xor
movb
loopne
stos
sub
xor
mov
mov
cmp
push
xor
jg
mov
daa
into
mov
jo
lahf
fs
arpl
add
xchg
jbe
jae
repnz
mov
out
push
push
movsl
rolb
xchg
sub
inc
test
adc
push
aaa
inc
push
mov
push
and
mov
or
addr16
mov
dec
or
xor
jb
popa
scas
cmpsb
add
inc
movsl
adc
jg
out
je
cwtl
pop
sub
push
and
add
je
mov
xchg
test
lcall
rol
daa
in
test
clc
insl
jae
dec
jne
mov
scas
ret
mov
or
xchg
xlat
or
or
cwtl
lcall
pop
sub
enter
outsb
repz
cmpsb
fwait
dec
xchg
lret
sub
das
jae
test
and
sub
fdivs
enter
scas
clc
mov
je
push
mov
push
jl
jb
and
daa
dec
push
cmp
aaa
push
jecxz
aaa
push
insb
ret
jae
inc
ret
jo
sub
lahf
rcrb
sub
xor
bnd
adc
nop
loop
push
push
enter
push
dec
sbb
imul
out
int3
jae
jge
mov
sub
lock
sub
push
inc
xor
enter
lret
iret
cmp
pop
dec
insl
fisubrl
lods
dec
outsb
dec
xlat
add
out
sahf
push
sar
cmpsl
negl
sti
das
rclb
fstps
mov
insb
mov
adc
hlt
pop
jle
sub
out
out
and
cmc
mov
pop
ljmp
call
cmpsb
in
cmp
call
icebp
adc
adc
out
jne
je
dec
ja
fmull
xor
je
adc
fs
sbb
add
lods
mov
and
ret
imul
xor
pop
ffreep
notl
aas
sub
push
push
adc
lods
adc
add
cmc
rol
push
les
adc
lcall
es
popl
hlt
fimuls
mov
xor
xchg
fwait
mov
outsl
out
fsubr
scas
push
je,pn
arpl
shrl
fldt
mov
aas
scas
insb
iret
cmpsb
mov
out
loopne
lret
iret
sahf
add
addr16
into
es
xor
jbe
ret
test
stos
mov
in
mov
rolb
leave
aam
in
dec
repnz
cmpsl
rorl
xor
pop
cmp
leave
xor
shrl
mov
pop
lcall
loope
jb
popf
mov
cmpsb
fwait
sub
and
mov
pop
xchg
xchg
cmovs
pop
sub
in
in
inc
add
out
adc
push
xchg
mov
inc
fldenvs
inc
sarl
aaa
xchg
sbb
popf
adc
mov
dec
pop
ds
mov
jnp
jp
jle
and
and
sbb
arpl
push
jo
xchg
fstpl
cli
out
jnp
out
sub
in
imul
js
mov
cmpsl
sahf
imul
xor
cli
fbstp
pop
and
cmpsb
push
jl
pop
loop
jo
pop
roll
xor
push
mov
lret
inc
dec
push
xor
xchg
iret
cltd
out
cltd
test
xor
sbb
push
je
adc
mul
inc
imul
sahf
add
imul
cmp
push
aam
dec
xlat
call
cltd
movsb
xchg
push
loop
in
je
adc
loop
idivl
jno
es
fwait
hlt
add
or
mov
or
sub
mov
negl
dec
out
cmp
xor
sbb
mov
arpl
out
shlb
mov
jle
cmp
mov
pop
mov
mov
scas
out
and
clc
mov
ret
cld
sti
outsl
adc
xorl
loope
lock
call
test
das
add
jge
dec
rcl
cmp
out
dec
mov
jle
inc
test
lock
fists
in
clc
test
push
mov
divl
icebp
cmp
pop
movsb
in
jmp
insl
sbb
ror
js
sahf
out
xor
sahf
hlt
lret
std
mov
jmp
inc
xor
rcrl
add
cld
lret
adc
insl
or
iret
lock
or
cld
loopne
sbb
xor
out
call
int
out
out
dec
sub
shrb
push
es
in
jecxz
notb
clc
je
inc
mov
cs
xchg
jnp
push
lahf
and
lods
push
cmpsl
sbb
lret
jle
aas
lret
sbb
in
sub
push
dec
xor
adc
js
and
push
clc
popl
je
int
adc
repnz
xor
test
sub
sahf
pusha
stos
leave
dec
or
push
int3
sub
and
adc
jle
mov
ret
adc
clc
pop
rclb
ret
push
adc
xchg
test
out
jecxz
xchg
sub
cltd
popa
stos
jns
or
pop
jo
or
ljmp
sbb
sub
pushf
movsb
jg
inc
cld
fstp
into
jne
cmc
jns
sub
mov
mov
pop
fsincos
cmp
out
mov
add
xchg
or
xor
lahf
ja
cs
fwait
mov
inc
sti
mov
out
daa
pop
sbb
das
sub
xor
dec
fdivrp
in
push
pusha
je
cmp
psrad
mov
jno
cwtl
or
push
fsubp
std
addr16
out
repz
fiaddl
cmp
fimuls
addb
push
sti
or
je
movsb
mov
enter
shlb
gs
iret
out
adc
scas
xchg
sbb
popa
bound
mov
xchg
in
scas
inc
jg
fisubrs
or
icebp
ret
ffreep
adc
mov
mul
cltd
push
aas
jo
je
fwait
cs
cld
in
repnz
or
push
mov
ljmp
popa
mul
popa
adc
push
leave
decb
rolb
repnz
fsub
pop
add
aam
cli
fwait
int3
jne
cmp
out
push
fstpl
out
loop
push
sub
test
jb
pusha
cltd
fs
int3
sarl
ds
aam
add
in
mov
ja
aam
xor
pop
in
or
mov
dec
sar
or
int3
rol
jne
push
rorl
cmp
addr16
jle
dec
add
lock
mov
jae
push
lahf
outsl
rcll
lret
jae
je,pn
lret
out
pop
sub
push
into
xor
push
lea
sub
sub
popa
jne
jmp
and
pop
sub
outsl
xchg
push
pusha
arpl
xor
jl
mov
in
xor
or
dec
out
ret
in
add
mov
pop
cmp
sbb
sub
cmp
or
out
ret
pop
outsl
adc
pop
sub
insb
cs
or
pusha
inc
sti
dec
and
loope
inc
testb
rclb
js
add
sub
test
pusha
mov
lcall
hlt
sub
mov
xor
lods
or
dec
nop
mov
cltd
jmp
not
pop
in
xchg
js
ffreep
pop
call
fs
xchg
in
popa
sub
je
xchg
fisubrs
jo
fmul
enter
lock
in
cld
lods
insb
icebp
xchg
jo
jg
iret
fdivs
js
pop
popa
pop
push
or
in
push
ljmp
inc
fldt
ljmp
jle
cmpsb
dec
push
push
pushf
arpl
pusha
je
icebp
push
gs
sti
jae
fidivrl
dec
add
pop
sub
out
pusha
enter
aaa
and
cmpsl
pop
jbe
les
clc
mov
jo
out
pop
mov
scas
lods
fstl
jp
dec
lock
add
das
loope
inc
lret
mov
cmpsl
jmp
pop
mov
jo
out
mov
or
push
fisubs
xchg
outsl
hlt
sub
cli
sarb
fsubr
push
jg
xchg
push
jo
ficompl
out
sub
mov
xchg
sub
sub
lds
test
mov
inc
push
pop
movsb
inc
subl
das
sub
das
mov
popf
out
mov
cmp
sub
cmp
adc
xchg
je
mov
cltd
test
addr16
adc
mov
cmpsb
enter
xor
ss
mov
mov
push
jae
xchg
int3
push
ljmp
popf
inc
scas
xor
outsl
mov
mov
sbb
shrl
mov
and
pop
cmp
push
xchg
inc
out
fs
jp
pusha
push
into
or
in
arpl
xchg
dec
js
jp
xlat
imul
jns
repz
je
int3
nop
pop
repnz
add
cltd
pop
mov
lds
es
out
sbb
gs
mov
adc
or
xor
out
ss
jnp
shrb
sbb
iret
bound
ja
jl
aad
mov
data16
push
mov
imul
xor
pop
cmp
jecxz
jg
cmp
pop
jle
xor
cmp
jmp
mov
ss
cmp
dec
xchg
insb
sub
daa
xorl
movsb
mov
addr16
cwtl
popl
push
dec
inc
add
shrl
xor
jge
call
jmp
rclb
lock
loope
adc
mov
sub
dec
fsubrs
jo
dec
into
or
enter
aaa
orl
sbb
bound
sub
outsl
das
jecxz
imul
insb
popa
hlt
pop
cwtl
cld
mov
cmp
loopne
out
push
addr16
aas
xorb
mov
outsl
push
xor
cmovl
in
dec
out
call
shlb
mov
adc
imul
adc
test
aas
and
sub
rcr
jl
dec
insl
xor
xor
es
mov
fs
cmp
je
cmp
mov
xlat
imul
jo
and
add
jbe
inc
push
pmaxsw
jle
je
push
mov
cmpsb
aas
scas
push
mov
jae
mov
lcall
scas
movsl
sbb
mov
jp
xor
je
lods
repz
loop
addr16
iret
mov
push
inc
lods
adc
pop
insb
out
sub
cltd
aam
jo
lods
out
sti
lea
outsl
popf
push
lret
dec
insb
or
stos
lea
dec
jbe
outsb
mov
bound
iret
pop
out
out
shl
scas
sub
adc
subl
push
nop
out
addr16
mov
jnp
lods
je
pop
outsb
inc
adcb
fidivrs
push
mov
daa
icebp
or
arpl
daa
mov
insl
inc
std
shll
in
es
and
pusha
or
xchg
shl
imul
and
mov
pop
jo
out
out
jmp
jo
je
xchg
pushf
lods
outsl
sbb
cmp
and
sahf
das
ljmp
sub
movsl
and
gs
adc
call
fsubrs
cmp
pop
pop
xchg
std
mov
sbb
push
xchg
push
or
or
xor
add
bswap
add
push
sbb
cld
dec
jo
xchg
lret
out
outsb
sub
insb
outsl
cld
mov
ret
aaa
arpl
sbb
lcall
gs
imul
cmp
outsb
mov
fisttps
fstpt
adc
inc
shlb
je
cmpsb
int3
or
adc
iret
ret
mov
lea
scas
pop
adc
jg
cmpsb
int3
outsb
dec
or
push
cmpsb
cmp
cwtl
pop
push
loop
inc
iret
mov
fmull
jo
jl
add
push
out
push
iret
mov
out
sub
mov
or
pusha
ljmp
negb
sbb
cld
scas
or
sbb
adc
cmp
cmp
jle
or
shll
xchg
sub
dec
aaa
lock
xor
sub
or
scas
push
testb
jg
scas
add
clc
outsl
lcall
cwtl
icebp
ffreep
mov
call
int3
sbb
loope
jg
insb
jb
or
add
jecxz
shrl
inc
out
sti
cmp
popf
mov
and
test
in
xor
adc
jo
jne
or
fwait
nop
xchg
pop
lods
xor
pop
icebp
fstps
push
sub
cltd
cld
faddl
pop
push
sub
jb
mov
fidivrs
je
push
dec
hlt
cmp
and
andl
test
cs
dec
mov
inc
dec
int3
stos
es
add
imulb
es
adc
jb
cmp
loop
pop
je
call
cmp
adc
sbb
sub
push
mov
sarl
insl
mov
mov
mov
push
mov
addr16
sbb
insb
xchg
lods
mov
int
add
fbld
loope
mov
adc
push
pop
mov
lret
fs
pop
adc
pop
outsl
push
cmp
or
aaa
sbb
fsubrs
and
cmp
mov
aad
test
loop
mov
es
jno
jecxz
xchg
jecxz
or
push
jge
jecxz
rorl
rorb
or
xchg
sbb
dec
scas
or
enter
push
or
xlat
xchg
hlt
xchg
and
shrb
inc
sbbl
arpl
and
loopne
pop
insl
addr16
movsl
jae
xchg
outsl
in
pop
aaa
jecxz
mov
jbe
xchg
adc
mov
pop
xchg
adcl
fsts
xchg
or
dec
lcall
xorl
add
insl
fildl
sbbb
mov
add
cmp
xor
cmc
in
jbe
out
xchg
jne
add
in
dec
dec
xor
add
jmp
shl
arpl
mov
xor
mov
nop
sbb
push
inc
cwtl
fimuls
jae
lock
rolb
xor
add
neg
test
jae
fmul
aad
sbb
jmp
push
inc
out
adc
xor
stos
pop
insl
in
shl
ljmp
xchg
push
gs
jmp
or
iret
in
mov
adc
xacquire
mov
xchg
xor
loope
jbe
adc
mov
ja
jb
imul
mov
xlat
jecxz
inc
pop
imul
jo
or
call
jae
je
cmp
xchg
clc
and
sbb
out
call
push
pop
std
adc
sbb
aas
cmp
cld
mov
testb
inc
fwait
xor
fs
loopne
jp
shlb
inc
call
mov
push
jecxz
data16
stos
push
in
pop
or
nop
cwtl
mov
xor
les
cmp
cmp
shrb
scas
add
inc
mov
lret
pusha
dec
sbb
dec
jne
andl
clc
je
cmp
inc
adc
ret
repnz
ja
pop
loop
and
ja
outsl
insb
add
cmp
ret
pop
fisubrs
add
lea
sub
outsl
or
ret
insl
mov
shlb
sbb
out
add
stc
stos
sub
shl
call
mov
in
sub
out
testl
mov
lahf
imul
loop
lret
aad
pop
stc
inc
jo
push
enter
ja
pop
ret
add
inc
jle
insl
es
jmp
mov
push
les
mov
xchg
call
pop
sub
or
stc
sub
inc
ss
orb
outsb
fsubrl
std
rol
xor
sub
rsm
addr16
pop
xchg
xchg
push
adc
dec
imul
shr
adc
fcoms
sub
xor
popa
xchg
gs
ret
outsl
and
fstpt
xchg
inc
call
subl
jmp
shrb
sub
pop
test
add
sub
out
sarb
mov
inc
adc
push
loopne
inc
cmpsl
addr16
or
add
dec
mov
pop
fnstsw
js
sub
pop
aad
inc
rolb
and
orb
loopne
push
inc
out
ljmp
clc
repz
popf
push
dec
dec
insl
cli
mov
inc
jge
xchg
movsl
sub
jae
loopew
dec
mov
cmp
outsl
in
sub
into
pusha
xchg
lock
pop
inc
sbb
insb
outsb
jge
jecxz
dec
or
int3
jmp
dec
je
lahf
cltd
test
cmp
mov
adc
cmp
push
aas
cmp
pop
mulb
loopne
jns
adc
xor
cld
dec
rolb
arpl
aad
filds
aad
xlat
cwtl
aad
mov
pop
jecxz
jp
adc
aas
punpckldq
mov
test
or
int
rol
mov
insl
inc
cmpb
in
push
xchg
ds
pop
mov
insb
pop
inc
xor
scas
fs
jle
sub
in
xor
sub
movsl
orl
jp
cmp
mov
inc
xchg
and
cltd
out
cmp
jae
incb
lods
ret
es
fildll
xor
leave
fdivr
jecxz
repnz
popa
fprem1
push
sub
mov
pop
sub
sarb
negb
test
inc
and
movsb
aaa
add
pushf
outsb
or
iret
sbb
cli
pop
test
adc
test
lock
in
clc
or
hlt
sub
jp
int3
jb
mov
loope
cld
icebp
out
dec
push
or
ret
sub
out
repz
mov
enter
fiadds
ret
mov
mov
nop
push
scas
mov
lret
jno
repnz
push
stos
insb
stc
push
in
fdiv
je
lds
dec
bnd
insb
inc
popa
lret
pop
dec
sahf
jb
dec
test
je
pop
icebp
jne
jecxz
repnz
imul
int3
out
je
jns
jg
lods
shlb
data16
xor
fisttpl
movsl
sahf
out
pop
push
in
enter
aad
scas
je
jle
mov
mov
inc
popf
push
loop
and
sbb
xchg
pushf
mov
ficoms
std
loope
or
cmp
scas
addr16
outsb
mov
jns
push
and
in
jge
ljmp
test
dec
jp
fnstsw
mov
out
clc
pusha
inc
ret
jo
xor
adc
out
or
lock
outsl
dec
inc
jo
out
lahf
imul
and
cmp
mov
out
jo
out
dec
mov
loopne
sbb
in
test
loopne
cmp
add
cmp
fiadds
sbbl
push
mov
sarl
mov
jns
loop
test
push
xor
int
inc
mov
cmp
xorb
imul
int3
negb
call
je
in
push
and
mov
lret
xchg
loop
iret
xor
inc
mov
adc
scas
cmpsb
out
repnz
sub
push
mov
inc
pusha
jns
call
loop
sahf
ret
in
jne
sub
insb
into
fldcw
outsl
stos
cld
or
outsl
popa
fstpt
jmp
add
jg
pop
sub
xchg
repz
jnp
ficomps
jb
push
je
ss
popf
sub
or
dec
or
push
sub
shlb
aaa
and
cwtl
out
or
lock
cmp
iret
sub
push
cmp
stos
repnz
add
int3
addb
mov
mov
push
call
enter
push
dec
and
fimull
dec
cmc
and
inc
loopne
jb
nop
aad
cmp
aad
lret
insb
imul
jae
xor
xchg
movsl
mov
lret
pop
stc
dec
pop
push
ja
fsubl
stos
adc
scas
pop
js
mov
das
inc
dec
clc
shlb
js
add
imul
pop
inc
xchg
das
mov
sub
jge
or
dec
xchg
mov
xchg
adc
cmp
fistpll
lds
mov
sub
repnz
sbb
ja
mov
test
inc
mov
mov
ret
push
ret
cli
iret
xor
imul
add
inc
addr16
mov
scas
out
adc
dec
cmpsb
lock
hlt
jb
pusha
adc
clc
mov
f2xm1
add
mov
or
push
jo
mov
popa
cmp
aaa
push
dec
adc
dec
loop
cld
out
inc
pushf
dec
xchg
xchg
jo
cli
into
pop
pop
jbe
std
jns
fwait
daa
fistpll
push
add
imul
stos
adc
sbb
xor
out
adc
insl
aam
and
xor
clts
inc
in
aam
sub
pop
js
add
mov
int3
push
pop
test
add
jb
push
or
xchg
aad
sub
test
cmp
ljmp
push
loop
call
mov
outsb
out
lret
call
push
pop
movsl
mov
out
sub
push
es
push
or
fistps
push
inc
repz
cmp
arpl
pop
xchg
sbb
jg
xchg
dec
or
pop
orb
in
popa
cmpl
shrl
or
sub
push
cwtl
out
or
mov
out
push
test
and
ret
or
push
adc
test
repnz
jb
cmpsl
shrl
out
loope
jp
xchg
cltd
incl
fnsave
int
sub
lods
out
jb
lret
out
dec
push
inc
aad
cld
sub
fadds
xchg
adc
lret
test
aad
aaa
test
and
ljmp
pop
stos
sbb
scas
push
lock
xor
ficoml
icebp
bnd
stos
and
pop
test
cmc
dec
hlt
adc
jo
mov
push
xor
add
xor
add
jp
adc
pop
mov
sub
pop
pop
push
add
test
jge
jmp
mov
negb
dec
hlt
insl
and
push
cmp
test
out
cmp
hlt
dec
cmpsb
xchg
jg
aas
pop
push
lods
adc
lahf
lock
sbbl
push
and
in
cmc
adc
mov
gs
cld
mov
hlt
dec
mov
movsl
jo
xchg
dec
push
das
lret
mov
stc
xchg
fs
js
add
lret
mov
ret
or
push
iret
push
nop
jmp
scas
jmp
add
aam
pop
js
xchg
stos
out
out
scas
pop
mov
push
pusha
mov
gs
xchg
test
and
sti
cld
les
movsb
push
popa
mov
outsl
pusha
loopne
subl
sarb
outsb
leave
ljmp
jg
pop
ret
sbb
fsts
add
pop
test
in
insb
in
fcmovb
in
ds
sub
mov
inc
ja
push
xchg
sbb
push
out
mov
xchg
inc
imul
iret
sbb
sub
testl
scas
and
test
dec
sub
scas
xor
loope
mov
cmp
fdivrl
pusha
dec
adc
pop
pop
aad
xchg
imul
in
push
jno
shrl
and
incb
cmp
insl
mov
adc
out
dec
imul
or
cltd
popa
and
sbb
in
movsl
cli
adc
das
push
adc
push
cmp
sub
adc
xchg
icebp
mov
add
dec
dec
ss
sarl
add
lds
das
in
scas
xor
mov
das
mov
ss
call
lcall
and
adcl
fwait
aaa
addr16
int3
mov
clc
addr16
daa
sahf
xor
ret
jp
test
scas
inc
repnz
stos
xchg
je
add
xor
mov
icebp
nop
pop
shl
out
in
mov
mov
negb
iret
cwtl
pusha
adc
js
idiv
jp
inc
add
cwtl
jae
push
or
mov
loope
push
cmp
ss
jmp
push
insl
rolb
pop
inc
in
in
and
leave
lock
mov
inc
mov
dec
or
daa
jmp
sub
bound
xchg
sub
enter
fisttps
cwtl
mov
mov
sbb
notl
vpshld
mov
sub
sub
dec
sub
out
outsb
in
adc
bt
fldl
mov
repnz
daa
outsb
aas
add
mov
outsb
lcall
mov
je
in
call
out
jmp
sahf
pop
dec
push
add
cmp
outsb
and
cmpsb
inc
in
xchg
test
or
cmpsb
shll
clc
sbb
out
mov
sub
mov
enter
pushw
push
mov
jmp
jge
js
sbb
pop
adc
roll
push
mov
push
or
test
ret
or
pop
hlt
mov
push
jnp
and
stos
pop
push
adc
jo
ja
or
icebp
leave
inc
xor
mov
loop
hlt
dec
xchg
cmp
mov
test
je
push
dec
ret
lock
loop
adc
xchg
xor
pop
icebp
dec
jmp
scas
lcall
mov
mov
stc
push
aas
call
cmp
fidivl
in
add
ljmp
clc
adc
call
push
dec
xor
mov
pop
stc
lcall
out
scas
mov
ss
addl
out
int3
lea
pop
scas
test
mov
push
in
insl
jg
aad
dec
imul
inc
mov
inc
pop
iret
mov
dec
imul
cmp
add
inc
int3
clc
icebp
shlb
mov
rorl
shl
sbb
push
xor
aaa
je
push
jp
loopne
adc
mov
pop
jo
push
addr16
loop
inc
or
jo
sarb
das
cltd
sub
mov
pop
lea
jo
mov
outsl
lret
js
out
fisubrs
push
lock
mov
lock
leave
dec
sub
mov
inc
out
in
adc
outsb
call
fs
and
into
loopne
aas
shrl
jmp
push
jl
daa
ficoms
ffreep
sub
and
mov
add
bound
in
mov
into
shll
push
movsl
test
jmp
imul
aad
dec
mov
inc
push
mov
outsl
add
jg
ret
mov
add
imul
fbld
or
sub
jmp
jne
test
jae
test
ret
mov
adc
iret
mov
jle
add
inc
outsl
pop
sbb
fnstenv
shr
pop
ficoml
std
inc
mov
and
fstpl
enter
jl
add
xchg
iret
cmp
fisubs
mov
dec
cmp
test
cwtl
jge
insl
ja
decb
stc
out
jle
jmp
pop
lods
movsb
clc
shrb
int3
adc
shrl
push
jge
mov
dec
or
and
fisubrl
clc
jg
xor
rorl
in
inc
pop
pop
outsl
pop
sub
push
out
in
in
dec
mov
push
jmp
pop
adc
js
imul
div
dec
ret
jns
pop
divl
pusha
insl
je
sti
add
in
shll
cmp
mov
dec
out
js
outsl
pop
out
sub
or
sbb
mov
je
in
and
out
xchg
mov
mov
inc
add
icebp
dec
cmp
iret
pop
test
jb
imull
cltd
and
sahf
push
sbb
add
ret
fadds
nop
sub
pop
inc
les
push
out
mov
jo
xor
pop
loop
je
cmp
pushf
push
inc
dec
dec
dec
fbld
rclb
pcmpeqb
xchg
mov
fdivrl
push
inc
outsb
or
jbe
push
sub
pop
jne
out
dec
lods
push
into
cs
xor
out
jnp
jl
jae
test
rclb
lcall
or
lret
std
mov
lret
testl
push
push
je
pop
mov
inc
fs
cmp
pcmpeqb
icebp
xchg
icebp
or
cli
adc
repnz
xchg
insl
sbb
xorb
jp
jbe
adc
rorl
push
lcall
imul
and
repz
shr
xor
and
add
cmc
popf
push
or
rcr
inc
roll
es
fnstenv
jnp
mov
push
imulb
outsl
xchg
and
lock
mov
xchg
psubw
jmp
shll
inc
loopne
push
or
fisubs
cmpb
jae
lret
pusha
or
sti
add
mov
mov
mov
daa
rcl
sbb
mov
dec
popa
loopne
js
cld
dec
adc
add
cmp
mov
in
or
sub
and
xchg
pop
cmp
pusha
data16
dec
xchg
in
mov
sbbb
ss
ret
into
jo
xchg
mov
xor
fsub
insb
sub
mov
daa
xchg
cs
sbb
cltd
and
mov
enter
loope
and
or
out
adc
cmpsb
cmp
cltd
push
imul
jae
mov
lods
dec
xorl
sarl
out
and
push
mov
push
das
xor
arpl
sub
cmp
adc
inc
xchg
sbb
es
jbe
sbb
dec
lods
in
jmp
je
pushf
icebp
push
cmpsl
xlat
std
aam
xchg
fisttps
lods
lock
insl
adc
lods
pusha
mov
fs
test
je
lods
inc
adc
jp
and
and
sub
jecxz
mov
mov
lcall
mov
add
and
or
or
ret
push
or
jecxz
test
pop
and
add
iret
inc
mov
mov
ss
imul
hlt
shrb
lods
mov
das
inc
in
push
inc
imul
lret
sub
in
push
dec
in
fwait
es
xchg
ret
cmp
loopne
mov
loopne
mov
or
cltd
ss
push
sub
mov
loopne
rorb
dec
fldcw
cmp
lods
push
ds
adc
enter
lock
je
sahf
imul
mov
cmpsl
jne
ss
mov
fildl
scas
ret
inc
movups
xchg
imul
cli
bound
loopne
xchg
push
hlt
inc
or
jle
mov
xchg
fiadds
out
sub
int3
xchg
inc
or
pop
xchg
xor
mov
mov
loope
sbb
sub
jg
int3
pop
adc
cmp
mov
inc
adc
jnp
push
push
adc
aad
mov
ja
cmp
outsl
jg
loopne
out
pop
mov
cmpsb
xchg
xchg
push
rcrb
mov
inc
sub
ds
bound
sub
test
mov
jo
pop
push
lods
or
jg
push
hlt
test
add
push
daa
lock
call
sbb
adc
inc
push
fcomi
sub
cmp
push
int3
xchg
arpl
mov
cmp
clc
xchg
add
enter
les
pusha
es
or
ret
xchg
and
insb
adc
outsl
mov
mov
sub
mov
xchg
dec
pusha
repnz
sub
pop
adc
mov
aaa
xor
and
inc
hlt
inc
leave
fadds
mov
or
sub
jmp
push
notb
push
test
stos
xchg
jg
repz
cmp
sub
xchg
arpl
sti
insl
adc
repz
xchg
mov
mov
xor
outsb
or
jns
ljmp
jp
std
fmul
sub
and
insb
je
mov
sbb
in
cs
clc
jbe
subb
jmp
cmpsl
loope
nop
mov
pxor
xor
add
fisttps
xor
lret
gs
das
das
xor
inc
popf
jge
jb
pop
or
xor
inc
cmp
sub
in
lock
aaa
mov
rorl
loopne
in
inc
outsb
out
mov
sub
cs
mov
mov
in
mov
cmp
leave
mov
lock
adc
mov
and
in
adc
stos
rclb
sub
dec
out
arpl
mov
mov
pop
xor
push
das
int
aaa
jo
sarb
xor
stos
dec
sub
cmp
outsb
int3
xchg
jno
mov
ds
aas
out
pop
leave
insb
xor
cmp
mov
xchg
mov
pushf
xchg
push
or
das
pop
jo
or
cmp
adcb
sbb
inc
mov
fcoms
test
out
cmc
jl
shr
gs
sarl
test
sbb
xchg
cmc
xchg
adc
cmpsl
loope
clc
add
rolb
pop
sbb
xor
shl
mov
out
shr
add
outsl
lret
or
das
mov
lret
sub
cld
into
dec
sarb
jo
add
pop
clc
mov
lret
ds
cmp
mov
xor
and
insl
adc
add
out
jo
in
xor
jmp
xor
or
repz
incb
pop
dec
ljmp
ds
jne
cmp
dec
sbb
ja
adcb
out
sahf
sub
sub
add
sahf
test
dec
cli
loopne
adc
out
mov
cs
enter
mov
xor
pop
xor
hlt
in
jmp
and
add
mov
inc
sub
aaa
outsb
cmp
jb
mov
push
popa
mov
xchg
out
js
mov
mov
je
pop
or
jb
bound
sub
fcomip
jo
scas
hlt
insl
mov
je
cwtl
imull
hlt
and
xor
adc
push
cwtl
imul
mov
dec
push
jmp
dec
mov
dec
cmp
xchg
mov
push
pop
cli
cmp
jecxz
ret
fcompl
clc
sbb
daa
xor
xchg
scas
jno
je
inc
icebp
cld
jg
sub
xor
sbbb
mov
bound
enter
daa
aas
cmp
adc
dec
divb
adcl
dec
mov
das
or
in
xor
and
and
ret
and
js
inc
test
into
in
sbb
mov
fiadds
jp
inc
and
mov
shrl
mov
mov
ret
jg
push
cwtl
test
outsl
mov
jbe
mov
pop
repnz
int3
in
jne
inc
xchg
clc
repnz
xor
std
pop
insb
inc
pop
adc
dec
jg
push
aas
mov
js
mov
mov
push
mov
in
sub
fidivs
cmp
jmp
mov
inc
mov
jo
mov
imul
jmp
pop
pop
les
dec
insl
inc
sbb
sarb
jbe
sub
fsts
xchg
or
sub
das
bound
clc
addr16
orb
jns
fdivr
cmpsb
les
lods
and
cmp
and
test
leave
shrb
pop
jno
out
or
in
dec
pop
jg
rolb
push
sbb
pusha
popa
fwait
testl
ss
jle
ss
xchg
or
xchg
add
in
hlt
and
lods
fcmovnbe
pop
xchg
cmpsb
imul
inc
popf
xor
inc
rcrl
or
cwtl
shlb
nop
and
mov
in
adc
mov
fdivr
jne
inc
cwtl
jne
jbe
divl
cmpl
jge
outsb
je
push
out
xchg
insl
sub
ljmp
inc
sub
xchg
pop
data16
mov
jmp
leave
cltd
pop
mov
rcl
add
lea
jecxz
js
jl
je
and
ret
cmp
jae
pop
ret
adc
cld
cltd
pop
dec
sbb
push
or
je
add
dec
jbe
test
mov
aas
pop
sarl
fmul
mov
rcl
jl
pop
int3
push
jo
ret
jnp
mov
jg
stos
xor
ret
sahf
xor
gs
push
pusha
ret
sub
mov
clc
clc
call
inc
je
inc
ffree
mov
cltd
mov
fldcw
cmp
and
das
out
cmp
sub
das
out
mov
int3
ret
dec
movsl
or
shl
es
sti
pop
sbb
das
push
cmp
repz
insl
xor
jle
pop
andb
cmp
shll
xchg
sti
pop
scas
jle
inc
jge
mov
bound
pop
fldcw
ljmp
mov
xchg
loopne
das
and
cmpsb
cmp
popa
dec
aad
add
cmp
cwtl
bound
cli
mov
push
outsl
movb
call
jecxz
dec
cmpb
dec
scas
pop
test
or
lods
add
cwtl
xchg
repnz
push
push
mov
push
push
pop
pushf
rolb
mov
mov
pop
out
fucomip
push
lods
pop
jle
je
inc
sahf
sub
repz
lret
sbb
cmp
xor
push
pop
iret
scas
imul
sti
iret
insl
inc
lock
add
arpl
cmp
js
jbe
int
imul
sbb
inc
adc
insl
add
rclb
mov
popa
ljmp
push
daa
or
loope
push
adc
mov
lods
lcall
xchg
in
out
sbbb
pusha
out
or
inc
cld
clc
mov
fsubrp
pop
add
pop
and
jl
mov
ds
out
fnstenv
ret
xor
pop
jmp
xchg
sbb
lods
popf
lret
mov
or
mov
sbb
ja
and
xor
fidivrs
xor
and
out
enter
loopne
cmp
mov
clc
jmp
ret
lds
inc
loop
mov
cltd
add
or
imul
je
inc
mov
add
call
dec
imul
jle
pushf
call
cmp
xchg
rorl
push
inc
in
ret
addr16
push
add
rcrb
xor
jo
xchg
lock
jle
mov
xlat
mov
fs
xor
das
inc
mov
out
in
pop
pop
lods
into
xchg
mov
pop
adc
mov
repz
sbbl
mov
outsb
sbb
bound
lods
jnp
bound
lahf
push
lods
and
loop
outsl
aaa
outsl
pop
jo
sub
sub
or
cld
hlt
push
lock
push
fisubl
and
push
cltd
pusha
add
subb
adc
sbb
mov
adc
and
loope
pop
dec
stc
into
jp
gs
xor
adc
push
add
mov
add
ret
test
cmpsl
or
push
aas
repz
and
cmp
test
loope
fwait
call
iret
jecxz
jg
outsl
out
into
adc
sub
addr16
cli
xchg
cltd
mov
cmp
into
jge
xchg
aaa
insb
or
iret
sbbb
popf
pusha
dec
rolb
mov
and
rolb
and
adc
testb
imul
jbe
ds
dec
test
mov
pop
pop
out
leave
adc
iret
ficoml
adc
movsb
pop
clc
loop
mov
mov
aas
jecxz
es
push
mov
and
loope
call
jge
mov
pop
mov
icebp
sbb
xor
xchg
popa
cmpsl
std
sbb
jp
pop
jns
sub
or
push
idivb
push
xchg
sbb
int3
pop
adc
jae
mov
fisttpll
sub
xchg
dec
adc
shrb
push
and
push
enter
jb
cwtl
jp
xor
jle
mov
jbe
fimuls
negb
das
lock
outsb
adc
or
fisttpl
or
pop
pop
mov
ljmp
xor
std
add
xor
outsl
inc
clc
mov
pusha
int3
inc
call
or
pop
insl
clc
insl
idiv
testl
subl
xor
addr16
jb
loope
outsl
inc
inc
sti
enter
decb
call
repz
cmp
inc
xor
insb
inc
xchg
mov
fbstp
fs
mull
daa
sbb
ljmp
iret
adc
xor
mov
pushf
je
jecxz
push
loopne
push
mov
lea
and
lahf
mov
addr16
inc
adc
int3
testb
jo
mov
cli
jo
push
fwait
pop
insl
add
cwtl
xor
sub
popa
jbe
rcrl
outsl
repnz
dec
in
test
dec
lock
fisttps
dec
insb
call
dec
jg
outsl
mov
mov
shlb
aaa
jne
je
fmull
out
dec
je
cmpsb
out
imul
dec
div
pushl
aad
negl
in
into
add
dec
loop
cs
movsl
dec
stos
pop
lahf
xorl
test
repnz
xchg
push
mov
mov
mov
popa
dec
mov
daa
lock
shll
fcoms
lock
mov
and
adc
movsl
mov
lods
xchg
cmpsl
lock
dec
popa
sbb
push
in
test
or
es
add
cld
je
xlat
push
jg
call
mov
aaa
dec
lock
or
clc
outsl
push
jo
inc
mov
push
xchg
cs
xchg
pop
cmc
outsl
inc
js
fucompp
scas
sbb
jnp
loop
ficoml
push
jle
cmpb
shl
push
cmp
pop
sub
insl
and
xor
dec
roll
xor
hlt
or
movsl
push
repnz
ja
iret
das
int3
insl
mov
adc
cs
jns
ljmp
repz
push
insb
scas
enter
jmp
cmc
lret
mov
into
in
fbld
sub
jbe
lock
mov
sbb
xor
xor
jp
lea
mov
in
cmp
add
out
stos
int
pop
or
outsb
lea
fs
xor
call
jo
mov
rclb
fwait
popa
jbe
add
je
ret
sub
adc
or
mov
call
xchg
je
dec
xor
mov
xor
mov
movsl
sub
push
push
aaa
dec
ficoms
inc
movsb
cltd
mov
loope
sub
fs
mov
fdivp
andl
inc
dec
data16
xor
mov
stos
repz
lcall
adc
in
mov
mov
loop
mov
arpl
add
push
jp
insl
mov
xor
push
add
das
mov
in
shll
pop
ljmp
jb
out
jp
mov
cmp
xlat
and
bnd
addl
stc
push
dec
add
mov
pop
addr16
enter
mov
or
xchg
push
mov
adc
mov
es
insb
or
or
and
fwait
cmpb
mov
jmp
subb
insb
out
loopne
mov
popf
cmp
int
and
inc
cli
jle
xchg
fimuls
dec
pop
or
pop
mov
cwtl
andl
adc
leave
and
outsl
sub
xchg
jbe
xchg
sub
outsl
sbb
loop
lahf
jmp
test
movsl
sbb
out
pop
and
cli
cmc
or
sbb
test
lods
fmull
imul
adc
adc
scas
notb
cmc
sbb
clc
cmp
lods
in
xchg
xchg
out
popf
xor
push
imul
sub
inc
insl
xor
dec
icebp
fnsave
fwait
mov
xor
loop
xchg
push
bound
fdivrs
and
dec
into
jg
hlt
sbb
add
andb
fiaddl
inc
cmpb
and
cmc
int3
daa
jne
xchg
fstl
xor
pop
mov
lods
outsl
cmp
xor
mov
out
sbb
cmpsb
pop
stos
xchg
dec
fcmovnbe
xor
xchg
iret
mov
daa
aam
imul
sub
lret
xor
jl
aas
and
lds
insl
xchg
jecxz
insl
cmp
insb
inc
nop
mov
cltd
inc
cmpb
xchg
fnstsw
jecxz
sti
pop
out
stos
js
mov
cmp
in
jae
jb
fs
adc
or
in
push
xor
cmpsb
inc
pusha
cmp
insl
dec
jg
sti
push
cmc
or
notb
loope
addl
mov
add
xor
lds
js
mov
xchg
lret
mov
cwtl
test
in
pop
hlt
jnp
dec
ret
fprem1
loopne
loop
das
push
dec
lods
mov
enter
call
adc
xor
pusha
adc
iret
fdivrl
lea
ss
push
aad
addr16
pop
mov
cltd
push
data16
dec
dec
and
cltd
popf
lds
sub
lock
insb
sub
popf
sbb
loop
pusha
jo
push
out
xchg
outsl
jl
mov
insl
loope
adc
stos
xchg
ffreep
adc
dec
fistpl
add
pop
clc
jne
insb
aas
and
mov
mov
lcall
imul
lret
add
fimull
sbb
or
xor
arpl
xchg
repz
dec
loopne
out
test
cmp
mov
lea
scas
inc
fs
push
pushf
mov
enter
sbb
pusha
dec
inc
int3
out
mov
push
in
ja
fnstsw
fucomp
pop
and
bound
ljmp
cltd
divl
cmpsl
or
xor
sbb
outsl
out
and
subw
push
data16
out
repnz
push
xor
je
inc
or
xchg
lods
xchg
test
or
push
out
xchg
lds
fists
out
xchg
out
fidivrs
testb
xor
arpl
movsl
pop
adc
xor
sar
shlb
es
aad
jno
out
push
sbb
icebp
mov
push
int
or
xor
popa
fld
fsubrl
mov
fs
fs
dec
subb
mov
sub
add
jo
popl
out
lea
add
xchg
sub
in
fldenv
jg
lods
dec
filds
jp
lock
outsl
stc
imul
out
push
xchg
cmp
jg
int
fiadds
inc
int
jmp
push
in
dec
in
cs
sub
dec
inc
sub
js
bound
sub
cs
scas
xor
outsl
xor
inc
jmp
and
push
divb
inc
jns
test
dec
inc
insl
and
ja
mov
inc
out
out
outsl
add
dec
js
jnp
xor
sub
fldcw
roll
negb
or
test
mov
pop
mov
add
inc
xor
ja
dec
cmp
cmp
aas
push
repz
pushf
mov
repz
inc
mov
push
das
push
outsb
jns
fisttpll
dec
and
dec
inc
or
scas
pop
add
cmpsl
test
lret
lahf
movsl
out
inc
sbb
mov
jae
cmp
lcall
andb
insl
loop
xor
mov
inc
sub
sub
sahf
and
callw
and
int3
lret
pop
movsl
sbb
scas
mov
rcrb
and
sub
mov
lds
mov
data16
clc
aam
dec
call
add
fldt
push
mov
xor
or
fldl
je
inc
imul
xchg
lock
fistpll
and
ljmp
or
jo
lcall
test
xchg
jge
js
cmp
pop
mov
dec
cmp
push
stc
or
test
frstor
out
fmuls
sbb
sub
aas
sbb
sub
inc
repnz
sub
js
int3
jb
bnd
loopne
in
ret
mov
mov
pop
xor
xor
mov
repnz
xchg
cld
xor
inc
aaa
das
sub
or
sub
in
dec
or
lea
cli
mov
out
lret
movsb
jb
pop
mov
mov
into
movsl
jnp
dec
or
js
nop
dec
shlb
scas
mov
jg
sbb
pop
cmp
test
and
inc
imul
inc
sub
lods
jg
dec
mov
fmuls
jo
push
cmp
jns
cmp
lret
add
add
pop
push
mov
push
repz
out
inc
je
testl
sub
dec
pop
mov
int
jmp
je
fnstsw
xchg
sub
inc
cmp
out
arpl
outsl
daa
xchg
and
inc
jne
lds
scas
mov
in
lcall
flds
lods
push
xor
add
iret
sub
add
arpl
inc
push
jg
shlb
push
sub
sbb
jle
insb
das
push
and
outsb
fisubs
sub
mov
pop
mov
jo
sub
cltd
push
outsl
jb
stos
push
lds
sub
pop
out
xchg
add
fwait
in
arpl
or
scas
stos
dec
fdivl
scas
jg
insl
sub
aam
les
mov
rep
fs
imulb
inc
cmpsl
sti
int
cmpsl
loop
data16
loop
or
enter
addr16
push
mov
sub
jae
sub
loop
mov
test
aaa
out
xchg
and
jns
call
imul
sbb
outsl
push
push
xlat
cwtl
mov
clc
mov
and
in
lcall
add
lock
and
out
adc
add
cmp
xchg
adc
sahf
movsl
cmp
adc
cmp
insb
rol
adc
push
cld
add
repnz
out
mov
sti
pop
cmovo
sbb
mov
and
xor
aad
lret
rcrb
scas
mov
and
mov
pop
adc
insb
mov
mov
popf
dec
das
mov
or
sbb
xchg
outsb
fists
cmp
xor
sub
add
xor
pop
insb
cs
pop
jnp
lock
jp
fs
mov
shrb
les
test
sub
shll
mov
pop
fidivl
inc
pop
and
cmpsb
aas
and
mov
or
ljmp
orl
lret
mov
scas
pop
xor
fmull
push
dec
and
mov
fdivp
jecxz
out
xchg
mov
shl
lock
jbe
dec
and
movsl
test
outsl
push
ds
sti
xchg
inc
sbbb
call
dec
inc
negb
pop
lret
aam
in
or
test
or
imul
sub
out
lock
adc
and
sub
xchg
sub
sub
lahf
jns
pop
mov
leave
sbb
jl
jmp
pusha
cs
inc
push
and
stc
in
pop
loop
push
pop
outsl
ret
movsl
in
aaa
jp
ja
pop
movsb
xchg
jb
sub
dec
jle
and
das
ljmp
negl
ret
lock
andb
loopne
push
jbe
push
das
js
addr16
out
xchg
jecxz
movsl
xchg
outsb
lods
mov
in
sub
mov
lahf
dec
jl
mov
test
dec
outsb
stos
fs
ffreep
in
or
push
push
push
ret
sub
fimull
fsubrs
and
cltd
test
adc
repz
hlt
pop
jmp
pushf
dec
ficoml
sub
jle
imul
cmp
adc
imul
ror
mov
mov
mov
sbb
adc
jno
sub
rorb
notl
cmpsb
and
mov
sub
test
inc
inc
and
sub
or
mov
ror
sub
adc
mov
notb
mov
pusha
dec
repnz
inc
popf
cli
test
xor
je
push
inc
mov
iret
jo
loope
sub
pushf
cmp
pop
rolb
jle
inc
dec
es
rcrb
insl
jecxz
sarl
cld
mov
push
lods
and
push
lcall
stc
push
or
mov
dec
movsb
ret
or
push
outsb
imul
dec
imul
ret
xchg
out
dec
mull
adc
test
test
inc
es
pop
add
daa
xchg
notl
mov
movsb
adc
or
jo
call
ret
inc
mov
test
das
sub
sbb
xor
push
push
push
cmp
je
add
sub
loop
xchg
xchg
out
and
stos
nop
jp
jmp
push
jbe
or
in
mov
dec
fisttps
cmpsb
pop
inc
sub
orl
xor
das
push
sahf
lods
add
fnstsw
mov
mov
call
into
lret
loopne
shrb
add
mov
aaa
adc
pop
xor
mov
std
push
outsl
dec
lds
xor
loop
inc
je
sub
add
insl
movsl
das
cltd
dec
xor
or
jmp
lods
test
inc
sahf
jo
mov
jno
pop
adc
hlt
cli
sbb
jge
inc
scas
fnstenv
jo
je
out
mov
sub
in
jg
std
and
xor
test
ljmp
test
lret
xchg
int3
adc
pop
int3
rorl
pop
add
jmp
mov
cltd
aaa
xchg
std
movsb
int3
cmpl
bound
mov
mov
sbb
das
lret
sbb
pop
aas
pusha
mov
lods
in
aaa
imul
jne
xchg
cmc
fstl
cmp
lock
jg
and
dec
in
dec
sub
sub
sub
lret
sti
es
and
xor
fs
or
scas
jge
pop
mov
fmul
fisubs
or
int3
dec
mov
fsubrs
lds
stos
call
aam
imul
lret
test
insb
pop
movsl
call
hlt
pop
jle
arpl
mov
cltd
or
loop
cmpsb
popa
adc
pop
stos
and
xor
iret
je
xor
mov
inc
or
sub
ret
mov
mov
push
jp
imul
cmp
xchg
inc
cmp
and
je
in
ficompl
addr16
sbb
pop
mov
mov
jle
dec
cli
cltd
movsl
ljmp
js
mov
mov
xor
inc
xor
int
lock
outsl
stos
pushf
inc
je
xor
mov
mov
inc
cmpsl
les
adc
dec
out
or
dec
or
mov
jb
aam
icebp
repnz
cmp
inc
inc
add
sarl
pop
dec
mov
cmp
jb
cli
sbb
inc
sbb
faddl
lret
mov
sbb
pop
push
test
scas
in
pop
pop
push
fsubrp
dec
lods
sub
int3
sbb
dec
pop
or
xchg
adc
clc
mov
jle
sub
pusha
jo
mov
and
outsl
dec
aas
dec
std
mov
mov
sub
sbb
ss
loopne
cmc
jg
mov
std
in
ljmp
icebp
hlt
lea
aam
cwtl
loopne
lret
jg
cltd
jns
loopne
test
jl
jo
movsb
stos
repz
pop
out
and
rcl
aas
je
adc
xchg
pop
pusha
cmp
repnz
pop
lea
xor
jl
clc
lahf
dec
inc
call
push
jo
std
incl
fiadds
and
movsb
cmp
cltd
adc
adc
int
cmp
jo
in
repz
mov
movsl
lcall
lret
rcl
pop
push
mov
mov
mov
loopne
and
popf
push
in
lret
clc
out
or
clc
and
sbb
clts
int
test
shl
add
xor
out
sub
xor
js
outsl
jmp
mov
push
jmp
sbb
shll
mov
into
adc
out
pusha
mov
enter
xlat
xor
cmpsb
imul
out
xor
scas
enter
push
adc
jo
dec
sub
into
aaa
dec
mov
arpl
lods
jmp
jb
jae
js
movsb
xchg
rorb
into
push
pusha
inc
je
mov
pop
loope
stos
sub
dec
sbbb
jl
lock
cmpsl
jb
shlb
notb
xor
xchg
inc
push
sub
sub
push
mov
xor
aam
daa
enter
loopne
jae
mov
sarb
je
add
mov
cs
popf
out
or
cmp
adc
inc
mov
xor
or
insb
cmp
push
adc
jl
xchg
push
outsl
cltd
jbe
dec
aad
iret
ret
xchg
outsl
inc
adc
mov
aam
adc
cmp
inc
push
pushf
movq
repnz
je
and
mov
pop
cmp
xchg
xorb
fisubs
adcl
mov
out
add
je
loopne
mov
stos
movsl
sub
dec
mov
or
lret
testl
lds
fdivrs
adc
lock
sub
jo
xor
add
idiv
sbb
out
dec
out
jmp
adc
out
or
pop
add
inc
and
inc
ljmp
int3
imul
push
call
push
out
dec
insb
outsl
xchg
imul
ds
lea
adc
or
xor
in
js
test
adc
lret
mov
dec
mov
loop
ljmp
or
xor
ret
or
test
dec
mov
fists
mov
out
adc
pop
adc
cmp
dec
xchg
adc
jl
push
cmpl
enter
sarl
movsb
sub
testl
jbe
jmp
scas
insl
insb
mov
and
xchg
in
mov
or
xchg
decl
fstl
imull
inc
mov
in
mov
enter
add
stos
pop
jb
bound
jo
mov
cmc
andb
out
loopne
stos
dec
sub
insb
jne
sub
cmc
outsl
mull
call
pop
clc
sub
jge
lds
outsl
enter
fwait
mov
sub
mov
out
inc
int3
into
xchg
js
cli
push
jp
mov
inc
cmp
lock
and
pop
jo
std
adc
mov
cltd
iret
loope
test
add
stos
repz
dec
xor
sarl
push
add
add
ja
mov
mov
sub
outsl
mov
adc
stc
push
push
jp
mov
dec
rcl
xchg
mov
dec
mov
call
fsubrl
jg
add
int
dec
imul
cmp
push
mov
jne
in
add
cs
xor
jbe
outsl
das
in
jne
mov
addr16
push
xchg
test
out
outsb
add
jmp
inc
pusha
das
cmc
mov
push
adc
lods
pop
push
jo
outsl
push
mull
add
lods
or
jb
cmp
add
in
dec
das
jbe
andl
mov
mov
add
test
imul
add
in
addr16
mov
push
outsl
or
out
lock
dec
sti
jne
outsb
scas
cmp
pop
fwait
pop
shll
adc
test
push
insl
jnp
loop
add
aas
lods
cs
shrb
js
jmp
daa
call
clc
mov
enter
stos
dec
cli
and
push
lea
sbb
pop
das
adc
cmp
movsl
push
jecxz
cmp
xchg
and
jle
adc
loopne
ret
call
in
scas
mov
insb
movsb
add
scas
lret
mov
push
jo
test
jecxz
test
pop
in
stc
inc
call
leave
push
or
dec
or
pop
cmpsl
mov
cli
popa
or
lret
adc
test
mov
repz
cs
sub
sbb
mov
cmc
pop
push
dec
jns
in
testl
sub
xchg
sarb
push
inc
jmp
cmp
pop
dec
repz
shrl
pop
and
fiadds
aam
mov
jl
add
ret
xlat
testl
scas
and
ja
xchg
ficoml
sbb
sub
imul
mov
jg
jmp
or
je
cmp
icebp
xor
lods
mov
pop
fsubl
lods
hlt
out
mov
outsb
icebp
adc
push
not
pop
jl
out
push
popa
xor
int3
dec
pop
shl
adc
mov
test
or
and
adc
je
jne
out
jbe
ja
bnd
repz
cmp
add
push
dec
sub
pop
and
rorl
enter
pusha
out
jmp
jg
mov
call
fsubrl
lock
rorl
and
add
jne
sub
fisubs
aaa
movsl
mov
aaa
jg
out
xchg
dec
cli
fldt
push
push
inc
xor
test
lock
pop
faddl
cld
push
ss
xchg
sahf
je
ficoms
loop
jg
js
pop
inc
mov
add
and
xchg
mov
sbb
xor
dec
adc
dec
out
mov
dec
mul
out
xchg
jo
test
mov
cmp
sti
add
mov
xor
or
lret
call
jmp
js
mov
sub
das
cld
or
into
add
xor
pusha
jg
icebp
jmp
and
jge
test
je
into
popf
push
mov
jg
mov
cwtl
fcmovnb
testb
fcompl
push
loopne
insb
outsb
call
das
xchg
dec
mov
inc
loope
or
sbb
cmp
out
pop
je
sbbb
dec
jns
scas
outsl
dec
into
in
jne
and
pop
mov
in
inc
loopne
rcll
in
adc
mov
decb
das
lock
stos
das
in
mov
pop
cmp
sub
dec
jbe
lock
mov
pusha
jne
mov
call
fnstsw
out
dec
push
dec
jl
inc
pop
xchg
push
sarl
add
ljmp
adc
daa
jecxz
mov
lahf
imul
sarb
imulb
rorb
stos
fistl
mov
pop
rcll
or
dec
cmp
cltd
rep
into
test
dec
sbb
fisttps
out
jbe
mov
or
rorb
sbb
add
mov
mov
inc
loop
je
mov
gs
callw
popf
inc
add
inc
call
popf
js
outsb
fldenv
pop
mov
push
mov
ds
enter
int
mov
int3
out
mov
sub
push
mov
cltd
repz
loop
std
add
adcl
sahf
fwait
lcall
loop
mov
add
cmp
pop
out
test
rolb
cs
insl
into
push
adc
mov
call
insb
dec
mov
dec
les
jp
popf
aaa
out
sub
leave
adc
test
jne
push
mov
outsl
test
ss
das
cmc
jmp
mov
xor
mov
call
pusha
ret
pop
insb
out
iret
pop
jg
adc
addr16
mov
push
or
int3
aaa
lds
lock
divl
cmp
push
dec
mov
cmc
add
rcrb
movsl
add
xchg
cld
jg
js
cmp
jb
inc
in
pop
out
push
pushf
das
lds
cld
test
int3
icebp
cltd
jb
dec
and
call
dec
sub
notb
andl
je
sub
push
sti
adc
mov
mov
aaa
out
insl
mov
add
add
mov
stc
or
icebp
cs
cmp
sub
test
adc
imul
ret
movsl
mov
inc
mov
outsl
test
cmpsb
mov
rorb
in
xor
ljmp
or
int
out
sbbl
cli
fsin
mov
incb
repz
clc
insl
sub
pop
negl
sbb
sub
idivl
imul
lods
mov
in
mov
mov
pushf
ret
or
xchg
es
out
push
or
call
daa
sarb
cmp
lods
mov
and
je
or
or
ficoms
out
nop
pop
out
je
stos
add
xor
mov
andl
dec
js
aas
jg
lret
push
loopne
cltd
mov
pusha
leave
cmp
clc
pop
dec
jmp
daa
lock
loopne
jmp
jnp
fiadds
aas
jg
jmp
or
imul
icebp
jno
push
loope
int3
test
and
loopne
call
mov
daa
call
cmp
jns
fistpll
stc
pop
cltd
popa
sbb
xchg
inc
out
popa
testl
sbb
test
pop
dec
sub
sbb
fidivl
adc
dec
divb
outsl
jl
pop
xchg
popa
or
aad
leave
xchg
mov
call
pop
imul
shrl
jns
or
cmp
out
cmpsl
std
or
dec
xchg
imul
or
es
pop
pop
cmc
ljmp
je
jl
or
shlb
mov
jo
lret
movsl
mov
into
pop
data16
jmp
add
enter
repnz
out
or
popa
jmp
subb
gs
je
sub
xor
loopne
jg
iret
outsl
int3
adc
xor
jmp
movsb
psubd
inc
addr16
ljmp
dec
cmpsl
dec
dec
lock
ja
push
jae
mov
xchg
lock
mov
add
inc
push
das
inc
out
loop
jg
push
lahf
or
and
scas
loopne
sub
call
out
jmp
cmp
out
iret
dec
jge
or
sbb
fstp
and
jne
pop
xor
in
lods
leave
xor
fistps
inc
imul
fsts
pusha
mov
js
cmp
xchg
ja
cmp
cltd
mov
enter
sbb
pop
stc
daa
sar
cmp
int3
mov
push
xor
iret
outsl
out
aas
sbb
imul
mov
lret
fsubrs
mov
out
pusha
cli
test
mov
daa
fdiv
xchg
cmp
mov
xchg
daa
out
jg
iret
or
shrl
sub
cmp
pop
in
push
insb
push
scas
out
or
mov
scas
pusha
push
in
sub
push
push
and
sub
mov
fstl
lret
jo
in
hlt
pop
loopne
or
mov
or
in
aaa
leave
xor
enter
jb
std
xor
cmc
inc
icebp
leave
push
jl
lods
cmp
jbe
fs
dec
outsl
dec
ljmp
mov
dec
or
in
push
push
and
jne
mov
mov
repz
call
cmpsl
iret
inc
sbb
in
mov
into
fistl
and
fwait
xor
shlb
int
sahf
pop
jl
or
jmp
sbb
je
in
push
andl
add
clc
shll
stos
aad
lret
jae
jne
sub
cmp
sbb
std
aaa
xor
and
sub
jo
jns
add
inc
inc
outsl
stos
popf
sub
and
adc
jnp
int
and
cmp
fidivs
sarl
or
jns
jp
sub
ljmp
or
push
js
mov
xor
sahf
ret
sub
je
fstl
xchg
add
ljmp
jg
out
imul
insl
jne
push
mov
out
mov
jo
mov
adc
pusha
faddp
jo
insb
notb
hlt
xor
je
ljmp
stos
outsl
popa
jb
mov
adc
fisubrl
repz
cs
sbb
push
push
cs
sub
das
jo
je
lret
stos
inc
cmpsb
jecxz
lods
xor
add
arpl
int3
shll
jb
test
outsb
adc
cmp
or
fstpt
jg
movsb
or
ficoml
cmp
push
loope
outsl
mov
aas
je
mov
pop
push
cmpsl
stos
sub
scas
popa
les
les
pop
mov
decb
jne
jge
sub
lret
loopne
popa
mov
shrb
cmpsl
jge
cmpsb
bound
mov
in
xchg
sub
fidivs
test
loope
xchg
cmpsb
stos
dec
imul
loopne
cmp
out
add
jg
lahf
loop
imul
je
ljmp
fucomi
dec
xor
test
sarl
jo
loop
sub
in
mov
lods
jo
mov
mov
inc
push
or
pop
ja
pusha
fdivs
sub
xor
scas
test
addr16
cmpsl
mov
aad
and
out
je
jae
xchg
and
int3
inc
es
insb
fdivrs
push
push
or
cmpsl
lods
push
push
mov
pop
dec
jno
dec
push
in
cmp
fcoml
lods
test
dec
jecxz
adc
std
cmpsl
jo
je
scas
sub
test
shrb
lock
dec
addr16
push
push
xor
icebp
or
xchg
cwtl
and
enter
mov
xor
inc
push
push
mov
pusha
mov
xor
daa
sti
lods
push
xchg
pusha
mov
aaa
insb
in
fsubl
movsb
sub
lock
mov
test
inc
mov
sub
push
adc
aad
int3
je
add
or
add
int3
add
adc
jbe
fstl
test
and
scas
js
xchg
lret
jmp
outsl
in
xchg
or
in
sub
inc
lret
mov
clc
in
mov
inc
pop
imul
sub
outsl
ret
pop
out
xor
mov
mov
ficoms
xchg
sub
and
mov
in
sbb
leave
xchg
jbe
das
mov
mov
mov
je
sbb
ja
dec
clc
and
sub
push
and
je
jle
insl
xor
xchg
or
movsl
lock
or
test
inc
imul
push
mov
into
sbb
cmp
pop
ds
mov
das
pop
das
test
jne
in
lds
ja
out
sub
enter
lock
iret
or
dec
lock
adc
xor
jp
js
data16
push
fwait
lods
mov
test
orb
mov
loope
jo
das
jp
pop
shrl
adc
bound
ficoml
js
das
xor
and
mov
push
repz
mov
test
sti
loop
sub
lds
push
mov
and
bound
jecxz
sbbb
adc
into
jo
jmp
xor
dec
adc
aad
cmpsb
insl
sub
fldl
adc
push
or
and
or
adc
insl
sbb
sbb
xchg
notb
sub
data16
fs
je
sub
int3
fsubs
jmp
sub
shll
nop
inc
outsl
push
test
cmp
adc
mov
test
aas
scas
inc
mov
das
adc
sbbl
nop
mov
sub
sub
outsl
xchg
mov
xchg
and
es
pop
xchg
push
lcall
cmpsl
mov
nop
js
comiss
setnp
adc
cli
dec
push
or
es
fnstcw
repz
sub
std
or
shl
cmp
subb
test
fcmovne
or
ds
icebp
les
jo
ret
add
xchg
add
das
jb
insl
out
rcll
and
jl
movsb
mov
rclb
popa
faddp
enter
or
inc
in
dec
loopne
xchg
sub
addr16
mov
adc
es
insb
addr16
dec
sub
or
mov
repz
adc
cmpsl
ret
repz
mov
xchg
nop
dec
fcomps
xchg
out
add
lock
mov
bound
adc
in
add
jecxz
insl
shrb
pusha
jg
shlb
xchg
jbe
push
out
push
mov
into
insl
inc
stos
out
and
or
out
pusha
dec
adc
sbb
jp
jmp
add
mov
loop
daa
outsl
into
in
in
jl
cmp
imul
or
push
loop
jo
loopne
jb
inc
mov
je
rorb
shrl
dec
arpl
mov
pop
push
adc
xor
lret
mov
cmp
add
shll
incb
push
je
inc
xchg
xor
nop
test
mov
or
push
sub
or
jl
roll
imul
cmp
pushw
cmc
outsl
mov
jo
xor
inc
arpl
cwtl
sub
push
mov
imul
insl
out
lret
ret
jle
ljmp
push
and
punpcklwd
xor
lods
out
out
out
mov
icebp
and
xchg
enter
inc
adc
and
gs
pop
ljmp
outsl
ror
outsb
mov
dec
dec
fcoml
out
je
insb
pop
cmp
sub
adc
adcl
cmpsl
inc
loope
jae
lods
daa
cwtl
mov
mov
and
pop
packsswb
sub
outsb
out
int
repnz
sub
icebp
lret
in
inc
in
fwait
ja
arpl
xor
jb
push
fucomip
add
fmul
lods
jbe
jle
push
outsl
xor
movsb
rolb
popl
mov
add
mov
dec
aam
xor
mov
fldenv
dec
pop
dec
cld
mov
cmc
dec
js
or
loopne
lock
cmpsb
xchg
lods
inc
lcall
jmp
aas
and
dec
mov
xor
dec
push
shll
je
xor
dec
imul
adc
ljmp
test
inc
cmpsb
inc
push
out
ljmp
fwait
push
sbb
outsl
lret
sub
push
xor
xor
in
mov
add
sbb
mov
push
mov
je
push
out
xchg
adc
pushf
cmp
or
xor
stos
je
push
in
push
pop
movsl
out
push
ret
sbb
out
inc
in
lcall
push
ficoms
sbb
xchg
push
jmp
outsl
movsb
in
out
xor
sub
jb
ret
adc
clc
fbld
ja
test
xchg
inc
scas
xchg
xchg
sub
test
push
data16
je
add
mov
ds
std
xchg
out
cmp
fmull
movsl
addr16
mov
sub
ret
cmp
test
pop
and
pushf
xchg
dec
add
lea
cs
push
dec
dec
icebp
cmp
pop
repnz
bnd
mov
mov
add
shll
jbe
or
pop
mov
pop
iret
stos
inc
arpl
push
adc
or
insb
in
icebp
jo
sbb
insl
in
in
adc
or
jne
ds
test
outsb
lret
bound
in
int
sub
jg
xor
pop
jmp
mov
enter
xor
ja
xor
ret
jne
insb
mov
ffreep
ja
repz
pop
in
in
mov
out
sbb
call
insb
adc
aad
dec
pop
test
mov
repz
cmp
jbe
out
sahf
loope
out
mov
shll
jb
clc
jo
stc
stc
mov
pusha
sub
push
sbb
ret
add
xchg
pusha
insb
mov
std
inc
pop
lret
adc
sub
cmpsb
fs
fadd
mov
sbb
xchg
xor
and
fwait
fs
iret
or
cmpsb
out
das
es
or
pop
call
xchg
sbb
dec
or
fwait
int
pushf
sub
ds
adc
push
stc
adc
push
sub
mov
cs
fldenv
clc
aas
daa
jp
or
int
lret
in
mov
sahf
xchg
aam
inc
mov
push
repnz
fwait
jge
out
pusha
or
sar
mov
out
cmpsb
fs
add
mov
jnp
fs
shrl
int3
lea
xchg
mov
pop
jge
xchg
adc
mov
repz
sub
sub
insb
cltd
dec
movsl
in
mulb
pop
mov
stc
icebp
push
adc
adc
in
or
jb
addl
call
test
insb
mov
sub
cmpsb
inc
cli
lret
in
addr16
cmpb
and
pop
mov
lret
add
lcall
inc
mov
iret
inc
outsb
int3
daa
or
dec
ret
mov
xor
scas
mov
mov
mov
adc
aad
out
fidivs
decl
pusha
aad
repnz
test
frstor
add
std
pop
adc
into
fwait
cmp
loopne
mov
adc
lock
sbb
push
out
stos
les
inc
lcall
adc
cltd
sub
mov
push
popf
adc
or
data16
insl
addr16
je
lods
inc
dec
insl
mov
movsl
push
cmp
insb
sbb
test
mov
mov
repnz
push
add
mov
unpcklps
in
and
in
jno
or
lock
pop
insl
mov
in
sub
addr16
lcall
insl
lret
adc
or
popa
in
push
pop
addl
or
roll
cwtl
pop
out
and
adc
adc
and
scas
jmp
lahf
outsb
aad
pusha
cmp
daa
pushf
pusha
push
call
jb
loope
insb
data16
lahf
repz
add
jnp
cs
push
inc
cwtl
push
fwait
pop
jecxz
scas
jo
enter
rcrl
les
ficoml
mov
cmp
dec
push
mov
lret
xchg
cwtl
xor
divl
pop
ret
lock
xor
pop
add
scas
jb
cltd
pop
sar
sbb
shlb
lds
in
daa
repnz
dec
inc
ret
inc
hlt
mov
sbb
or
jmp
out
stc
jge
adc
dec
jae
and
xor
shlb
roll
or
sub
add
in
cmp
or
push
sub
jp
ficoml
sub
out
ret
aam
xchg
dec
stos
lds
mov
lea
adc
xchg
xor
inc
hlt
pop
ret
sahf
push
ss
mov
leave
cltd
jle
dec
sahf
out
clc
jmp
loopne
mov
lods
sti
inc
pop
xchg
inc
xchg
mov
js
imul
ss
enter
jmp
mov
scas
pop
add
out
out
pop
xorl
mov
into
jl
das
ffreep
test
les
push
out
out
mov
jmp
stos
je
das
ljmp
pushf
push
jl
xor
push
mov
push
test
gs
jl
add
iret
adc
mov
jl
das
int3
sahf
mov
sahf
fidivrs
stos
ja
mov
pop
fisttpll
inc
inc
shl
or
test
shlb
out
arpl
inc
hlt
ret
mov
loopw
push
mov
outsl
bound
cld
imul
mov
les
notl
data16
jno
stc
pop
out
sti
out
imul
cmpsb
dec
xor
shr
sub
cmp
xchg
pop
test
dec
ja
push
hlt
jo
xlat
mov
jmp
add
fmull
outsl
pop
mov
lcall
ret
sub
leave
stos
pusha
in
add
mov
ret
fs
pop
repnz
xchg
loop
sub
push
shr
sub
sub
iret
je
outsb
fwait
push
nop
out
push
pop
xchg
test
pop
repz
imull
mov
loopne
push
mov
mov
outsl
filds
push
mov
insl
insl
pop
lock
xor
insl
in
ja
and
hlt
nop
stc
inc
or
push
std
rol
in
or
xchg
xchg
cmove
mov
and
push
inc
sbb
ret
adc
sarb
jge
xor
insb
add
jp
loopne
inc
cltd
push
mov
je
cltd
inc
in
movsl
out
push
add
test
xchg
out
adc
imul
insl
shrl
in
fs
mov
fnstenv
in
movsb
xchg
stos
ret
imul
aaa
or
or
mov
push
adc
sbb
jge
cmp
push
out
ret
dec
cmp
call
or
adc
mov
adc
xor
js
enter
pop
mov
cmp
jecxz
dec
sub
stos
push
fs
loop
push
pop
ret
jge
adc
mov
xchg
sbb
aam
and
xchg
sub
call
dec
push
ljmp
movsl
inc
mov
div
mov
cli
ljmp
mov
adc
and
cmpsb
push
es
fsubrs
push
adc
out
sahf
lods
inc
out
dec
pop
mov
rclb
iret
inc
shl
iret
pop
jg
and
lea
jo
dec
adc
or
mov
or
cmp
insb
or
hlt
xchg
adc
dec
out
sahf
jg
pop
in
aas
xor
push
fldt
mov
outsl
loopne
xor
inc
in
aaa
inc
and
mov
shll
lds
xchg
fisubrs
lahf
xor
rclb
cltd
bnd
jg
dec
arpl
inc
pop
loop
sub
adc
lods
xor
mov
xor
sub
dec
stos
sub
je
es
push
push
test
sub
inc
outsb
pop
pushf
adc
jns
cmpsl
aas
subb
arpl
jle
dec
or
pop
or
outsb
imul
jno
mov
fidivs
orb
or
dec
cld
js
mov
jnp
jle
xchg
adc
in
js
into
or
dec
pop
sub
sbb
mov
push
dec
lds
dec
pop
in
push
fwait
ret
decl
and
push
jo
mov
sbb
clc
loop
stc
es
xor
mov
fwait
int3
in
fwait
and
mov
je
mov
loope
xchg
dec
std
jb
add
dec
dec
add
jmp
xor
ret
repz
push
test
lcall
xchg
movsb
xchg
dec
jne
xchg
push
sti
sbb
pop
inc
fxch
and
gs
inc
mov
mov
lea
and
int
nop
dec
call
xchg
cmp
xor
mov
cmp
jmp
daa
jae
setnp
and
loop
addb
mov
pop
xchg
sarb
fistps
pop
mov
and
je
clc
sbb
es
popa
fdivl
adc
insl
lret
mov
or
dec
dec
push
cmpsb
inc
push
outsl
lods
push
cmc
cli
int3
inc
xchg
das
mov
sbb
sar
lea
inc
sbb
or
fnsave
out
push
sti
imul
in
sub
pusha
out
bound
lock
adc
movsl
lods
lds
mov
movl
xchg
pop
mov
popa
insb
push
xchg
inc
push
add
fmull
sahf
jp
int3
out
mov
loopne
jmp
out
sbb
rclb
push
shl
jge
repnz
mov
imul
lret
xchg
mov
cmp
insl
cmp
and
dec
addr16
sub
mov
ret
sahf
inc
cmc
inc
sub
xor
dec
push
mov
cmc
xor
sub
sbb
push
je
cld
push
outsb
jo
mov
cwtl
into
adc
sub
lea
jg
outsb
add
or
loope
add
cmp
push
mul
jne
cli
push
imul
xchg
sahf
outsb
push
mov
sub
ret
or
adc
aad
daa
ja
es
adc
repnz
pop
dec
adc
sbb
subl
data16
xor
xchg
jge
dec
pop
hlt
rcr
push
fs
mov
jae
outsl
fwait
inc
xchg
mov
mov
test
es
popf
and
mov
in
mov
mov
push
sbb
mov
shlb
cld
test
and
out
cmpsb
call
jne
mov
lret
inc
inc
bound
sub
sbb
insl
je
hlt
fsts
loope
scas
push
xchg
and
xchg
cmp
jl
inc
jnp
dec
push
xor
cmp
es
rclb
jp
jg
stos
data16
fnsave
push
adc
fadds
loope
or
nop
loope
repnz
decl
stos
daa
sbb
xchg
jle
jo
inc
and
jp
das
jl
cmpl
add
mov
pop
and
ss
adc
mov
and
enter
mov
decl
fdivl
out
mov
data16
mov
pop
enter
push
outsb
je
mov
dec
dec
push
jnp
iret
loop
cli
sbb
les
fbld
fldenv
leave
xor
dec
shll
xor
inc
mov
mov
inc
inc
leave
push
scas
jae
push
enter
hlt
shrl
lret
ja
in
loop
cmpsb
andb
adc
hlt
in
movsl
inc
idivl
out
push
cmp
ja
jnp
dec
push
mov
icebp
int3
pop
divb
cld
xchg
popa
mov
filds
cmp
lretw
adc
mov
jb
jo
add
movsl
je
lock
mov
mov
adc
xchg
fbstp
mov
fs
mov
mov
jb
push
sub
outsb
lret
jl
sti
push
lods
mov
inc
int3
lock
lahf
xchg
sub
ret
xor
inc
pop
sub
mov
cmp
push
mov
cli
push
mov
mov
xor
ds
mov
xor
jne
xor
sub
add
aaa
jmp
movsb
cld
xchg
fcompl
out
and
movsl
outsl
mov
mov
pushf
and
data16
clc
jp
xchg
pusha
mov
fldl
ret
xor
pop
sbb
cmp
ret
int3
lock
int3
int3
enter
push
in
sqrtps
mov
cmpsl
in
xchg
movsb
add
stc
xchg
daa
adc
add
cld
cmc
jp
rorl
hlt
js
add
mov
xor
mov
mov
push
sub
push
call
insb
je
out
popf
fdivs
aad
filds
dec
xorb
outsl
fst
mov
jge
mov
arpl
sub
cld
int3
outsl
mov
inc
xchg
add
cmp
adc
ret
mov
add
lret
cmp
dec
mov
int
mov
add
jb
data16
cmpsb
cmpsl
cmp
inc
push
loopne
or
pop
adc
pop
pop
jns
insb
sti
mov
jae
data16
inc
test
sub
into
lcall
in
dec
xor
ret
cmp
mov
xor
aad
iret
popw
mov
push
and
sub
jbe
mov
push
jmp
or
mov
cmp
or
and
cmp
pop
dec
bnd
cmpsl
push
out
sub
and
cmc
mov
ljmp
hlt
stc
sub
dec
repnz
pop
lods
cmp
dec
cmc
or
out
or
cmpsl
mov
lock
repnz
dec
aaa
mov
pop
fnstsw
out
lock
pop
or
cmp
popa
mov
push
mov
int3
cmp
pop
lds
in
aam
inc
or
xchg
mov
mov
addr16
dec
adc
mov
lds
xorl
jmp
mul
xor
scas
jg
aas
popa
jae
add
xchg
xor
cmpsb
je
iret
adc
lds
outsb
out
sbb
lods
jne
dec
mov
jnp
pop
iret
cmp
pop
fbld
push
in
push
inc
outsl
mov
out
mov
xor
or
push
popa
adc
pushf
out
imul
push
xchg
mov
cmp
sbb
aam
mov
ret
aad
mov
push
cltd
das
xchg
pop
ret
cmc
xchg
in
ret
pop
cltd
mov
movsb
cmp
loop
xchg
shll
les
add
mov
cwtl
push
les
xor
lock
fdiv
cvtdq2ps
ss
jne
sbb
xor
nop
in
sub
aad
test
xchg
out
cmp
adc
std
ljmp
shll
ffreep
xchg
in
stos
cmp
jno
ds
cmc
fcoml
outsl
je
push
cmp
clc
mov
cmp
adcl
outsl
js
cmp
inc
adc
and
sub
insb
add
cmpsb
cld
xor
stc
out
cmp
icebp
loop
cmp
imul
call
mov
sahf
push
arpl
jmp
sub
cli
das
scas
add
arpl
jae
push
in
mov
popf
test
mov
pop
clc
subb
jne
sti
sub
out
fistpl
xor
add
sbb
xor
pop
push
adc
pop
ss
cs
sbb
mov
movsb
jp
je
pop
mov
xchg
scas
ljmp
jne
jae
sbb
pop
xchg
inc
cwtl
stos
je
xchg
mov
dec
aam
fcmovne
mov
enter
imul
repz
inc
outsl
je
sahf
and
mov
jne
push
ljmp
adc
hlt
mov
jmp
xorl
and
add
pop
mov
sub
xlat
push
ret
jmp
or
das
jle
faddl
mov
int
rcrb
mov
mov
js
add
inc
and
add
addr16
neg
les
and
call
sahf
xchg
arpl
mov
imul
xor
in
jo
jecxz
mov
outsb
xchg
imul
jge
push
cmp
xor
cmpsl
inc
outsb
jnp
adc
push
out
add
xor
and
push
mov
fldl
pop
mov
aad
testl
aas
xchg
pusha
xchg
mov
into
dec
push
loopne
scas
sti
maxps
js
out
scas
inc
mov
adc
dec
test
add
or
dec
popa
jbe
call
test
dec
lcall
pop
mov
push
mov
add
fcoml
mov
adc
popa
dec
in
pop
push
mov
test
idivl
dec
es
aas
xchg
cmpsb
jns
test
pcmpeqb
das
cmp
mov
test
cmp
sar
pop
sbb
popa
insl
rcr
xchg
inc
or
out
enter
push
jb
mov
es
push
nop
mov
push
lea
addr16
push
inc
jae
adc
je
cmp
mov
lret
jne
loop
mov
mov
adc
inc
pop
insb
aaa
out
inc
push
lea
dec
sarb
pop
scas
pusha
rol
sub
jo
push
sbb
das
pop
rclb
lcall
dec
push
xor
movsl
push
xor
cmpsl
int3
adc
adc
xchg
repz
cwtl
pop
add
das
jns
push
iret
out
out
ljmp
js
adc
iret
std
cmpb
or
xor
lods
dec
cmp
xchg
call
shlb
icebp
in
fistps
jae
add
insl
out
cmp
xor
mov
imul
movsb
mov
sub
or
ret
iret
dec
fldl
packsswb
aam
into
lds
ret
pop
dec
add
enter
out
adcl
cmc
cmpsl
push
mov
sub
lea
xchg
xchg
gs
mov
push
lods
outsb
pop
into
insb
lcall
movsl
dec
jae
andl
lret
push
xor
mov
and
je
jbe
dec
negl
imul
je
int3
stc
xor
and
lret
cltd
int
ljmp
push
jbe
iret
push
fsubl
inc
push
xchg
pop
push
popa
xor
daa
das
push
loopne
adc
cmpsb
movsb
jge
sbb
das
sub
insl
mov
push
or
sub
adc
icebp
pop
dec
lock
call
jo
insl
es
dec
xor
in
pop
add
in
and
mov
sahf
push
aaa
sahf
outsl
rclb
mov
call
lods
push
inc
es
insl
or
cmp
xor
test
xchg
and
test
int3
rcll
into
je
scas
test
and
loop
dec
sub
leave
mov
xor
lods
dec
push
adc
xor
fcmovne
sub
adc
and
xchg
nop
lods
adc
sar
or
jnp
out
int
leave
das
pop
mov
pop
push
addl
aaa
int3
xchg
mov
stos
sub
out
xor
and
push
insb
jg
mov
int
mov
lock
nop
or
gs
in
stos
push
mov
imul
mov
sub
loope
subl
jb
or
cmp
or
ret
xor
cmp
stc
insb
push
sub
add
repnz
add
mov
test
sti
fstpt
push
xchg
ss
mov
jecxz
jl
jb
out
je
stc
adcl
jno
pop
lock
push
ret
mov
mov
mov
lahf
xchg
sub
out
ret
inc
fidivrs
mov
xor
push
call
cmp
inc
lahf
stos
jecxz
xorb
popf
ret
lcall
cmpsl
idivl
sub
ds
sbb
jb
add
repnz
inc
stc
mov
xchg
xchg
rcr
jae
xor
inc
nop
jmp
mov
insb
call
xchg
imul
add
jmp
or
jg
hlt
dec
call
aad
pop
push
pop
sarl
cmp
out
xor
dec
or
lock
ffreep
jl
mov
add
insl
cmc
dec
mov
scas
xchg
cmp
mov
out
add
icebp
jo
cmp
arpl
cwtl
aad
mov
mov
push
fisubs
pop
push
rol
ljmp
inc
mov
rcrl
inc
loope
test
out
push
fs
xchg
jmp
jbe
popa
les
scas
xor
lret
xor
mov
data16
add
call
mov
add
stc
xor
out
leave
lret
cmpl
adc
in
ss
mov
add
xchg
ljmp
jg
insb
jge
scas
fiadds
pop
cmc
mov
call
cmp
sbb
out
shlb
jmp
pusha
movsl
insl
xor
mov
jo
outsl
stc
jmp
push
pop
xchg
icebp
mov
or
mov
out
adc
je
lock
sub
shl
pop
jle
insl
fnstenv
jle
or
dec
rcrb
cmpsb
in
adc
nop
cs
outsl
rcll
sub
xchg
lcall
and
sub
xchg
and
test
dec
adc
mov
stos
sbb
fsubs
sbb
dec
adc
pminsw
or
cmp
sub
mov
testl
inc
outsl
shrl
cmp
mov
outsb
cmp
sub
mov
ret
sub
call
fs
je
scas
push
pop
popf
jbe
jnp
mov
sbb
loopne
cmp
aas
out
fs
sub
in
push
jo
in
dec
imull
popa
ficoms
jb
enter
daa
cmc
into
pusha
mov
in
sub
jo
popa
inc
jo
loopne
insl
pusha
sub
sub
pop
outsl
jp
in
imul
or
jns
in
sub
and
out
adc
xlat
loopne
sbb
ret
adc
pop
enter
scas
outsl
xchg
jmp
outsb
mov
jecxz
gs
inc
ret
cwtl
stos
stos
in
push
dec
dec
loopne
mov
loop
sti
sub
lahf
daa
cmpsw
inc
add
or
scas
stos
sbb
add
sbb
dec
jmp
arpl
ljmp
jl
cmp
outsb
dec
mov
out
add
pop
dec
out
cmpsl
andl
movsb
inc
outsl
inc
sub
je
fstl
rorb
aaa
daa
mov
insl
dec
popf
sub
roll
loop
push
cld
inc
inc
pop
flds
jnp
fucom
scas
mov
sbb
mov
mov
inc
cmpsb
pop
sti
jge
repz
push
jl
sbb
adc
dec
or
out
cwtl
sub
push
and
jmp
jne
sub
cmp
cmp
js
sti
sbb
inc
cld
and
pusha
jbe
pop
jns
cmp
jbe
dec
dec
out
out
mov
sbb
push
dec
test
cmp
cs
or
mov
shrb
jp
and
out
xchg
loopne
sub
orb
inc
fistpl
xor
andb
outsl
cld
add
push
mov
jl
xchg
mov
loop
int3
inc
cltd
or
cwtl
adc
bound
js
movsl
call
pusha
pop
testb
xchg
push
movsb
sbb
mov
inc
fsubr
sbb
hlt
sub
jmp
jne
cmp
or
sub
xor
push
cmpsb
jo
sub
sbb
dec
cli
sub
cs
sub
adc
js
repz
dec
dec
fistl
lock
enter
mov
xor
aam
popa
sub
je
adc
fcompl
mov
adc
push
aaa
fs
enter
fistps
adc
dec
mov
pslld
sbb
jge
je
mov
sahf
mov
ds
jns
add
out
aaa
mov
stc
jecxz
arpl
stos
push
stos
repz
das
imull
loopne
pop
push
dec
mov
les
arpl
cmp
jb
nop
cwtl
xchg
and
roll
loopne
cmp
or
jg
scas
jae
daa
fmuls
jbe
inc
aaa
mov
push
cltd
in
in
in
xchg
xchg
mov
cltd
in
jae
sub
test
or
adc
out
insl
dec
imul
ret
jmp
roll
loop
push
out
fwait
repz
std
scas
ffree
jns
sub
xchg
dec
xor
xor
nop
mov
and
lods
add
and
cmp
int3
imul
outsb
daa
fstpl
cmpsl
dec
sub
out
jo
stos
and
testb
push
out
das
jg
inc
mov
ftst
inc
and
cs
sbb
outsb
and
add
fmull
pop
or
lcall
pop
xchg
fwait
mov
xchg
dec
jnp
lods
xor
adc
sub
or
in
sahf
push
lret
subb
jns
pop
inc
adc
mov
je
dec
bsr
or
jo
fs
xchg
adc
je
stos
stos
insl
call
pushf
xchg
fs
hlt
push
and
push
push
outsl
push
mov
dec
xchg
push
jge
imul
sub
lahf
out
cmp
subl
sbb
into
pop
mov
mov
or
ja
loopne
ljmp
gs
iret
fsubl
rclb
dec
fimull
sub
pop
cwtl
xor
dec
aam
mov
cmc
xor
jl
or
addr16
jp
sub
ret
scas
mov
xchg
aas
cmp
stc
push
sbbl
cli
mov
std
pop
inc
sub
xor
cmp
jb
loope
or
push
hlt
iret
in
popa
push
sub
push
mov
imul
dec
adc
xchg
aaa
dec
addl
out
xchg
std
and
popa
dec
nop
in
test
add
outsl
pop
push
jbe
adc
scas
cmpsl
andl
ss
mov
jge
nop
das
dec
ret
test
xor
out
xor
shll
jne
inc
inc
loop
dec
mov
outsl
adc
add
outsb
inc
daa
jge
pop
ljmp
fwait
mov
inc
lock
jne
outsl
or
js
push
cmp
jg
loopne
test
xchg
jp
add
jp
jo
xor
outsl
cmp
cltd
pushf
inc
push
nop
dec
je
enter
xor
jae
sbb
jns
mov
xor
inc
mov
shrb
xlat
mov
and
jae
sbb
jp
mov
in
jae
or
call
xchg
inc
in
xchg
in
stc
xor
sub
scas
pop
scas
imul
int3
ljmp
cmpsb
xchg
loopne
dec
jb
outsl
push
lahf
dec
icebp
mov
adc
and
add
adcl
scas
adc
lea
movsl
in
cmp
out
hlt
xchg
add
imul
mov
test
pop
movsb
ds
addl
iret
leave
repnz
loope
test
dec
push
testl
cmp
pop
mov
add
jne
cwtl
lods
or
dec
xchg
arpl
xlat
dec
adc
call
push
sub
mov
xchg
xchg
aaa
pop
lret
xor
sub
mov
lods
decl
push
inc
jo
enter
jno
mov
pop
subb
push
xor
inc
xor
decl
movsb
sub
ret
dec
rcrl
sub
int3
repnz
mov
movsl
or
insl
addr16
mov
jmp
jbe
flds
rcll
shll
mov
cmc
icebp
mov
ljmp
js
jns
cmp
sub
inc
pop
jge
iret
je
lcall
lcall
jne
jb
bound
push
sub
ret
daa
insl
repz
inc
sub
mov
out
add
mov
or
loop
inc
aaa
xor
dec
mov
shl
and
push
jmp
imul
xchg
pushf
mov
pop
jae
int3
mov
icebp
call
das
ds
dec
loopne
xor
or
js
fstpl
mov
mov
jno
add
popf
icebp
movsb
out
inc
ficoms
les
mov
or
dec
cltd
push
in
repz
jo
mov
push
push
jmp
push
cmp
call
jmp
or
push
call
push
adc
xor
les
xlat
rcl
punpcklwd
sub
add
or
xor
sarb
and
dec
cmp
imul
out
pop
addr16
or
pop
shrb
arpl
sti
jl
ljmp
in
inc
ret
dec
jle
dec
lcall
fnstcw
loop
jecxz
out
rcll
mov
outsl
ret
stc
pop
loopne
cmp
pop
insb
test
enter
je
push
sub
pop
lcall
shll
repnz
adc
das
pop
sbb
pop
out
jge
mov
pop
out
mov
jge
xlat
sbb
andb
sub
dec
xor
pop
jle
sbb
xor
adc
aad
mov
adc
shrl
mov
in
inc
cmpsl
stc
js
loope
jecxz
jg
pusha
or
stc
add
data16
mulb
push
inc
add
cwtl
icebp
push
stos
jg
shll
inc
jg
cmp
xchg
dec
out
ds
inc
nopl
pop
and
adc
and
movsl
xchg
mov
out
stos
lret
mov
inc
add
sub
dec
daa
out
cltd
cmp
push
inc
pushf
cmp
push
jecxz
inc
sti
stc
pop
fsubr
xor
je
inc
inc
call
insl
iret
fdivp
pop
or
jno
je
jp
mov
daa
inc
outsl
or
add
lock
ret
or
inc
sub
sahf
jg
sbb
fwait
or
or
or
je
dec
sub
jnp
mov
and
aas
ljmp
outsl
pop
push
mov
dec
in
outsl
notb
add
mov
pop
push
std
pop
dec
aad
iret
cmpl
cmpsb
ja
out
xchg
cmp
iret
bound
mov
out
fidivl
adc
popf
jmp
jge
push
xor
sub
fs
xor
cmp
imul
mov
jo
outsl
call
mov
leave
repz
stos
and
cmpsl
pop
popf
in
adc
out
imul
mov
mov
cmp
fisubs
addr16
test
addr16
cmp
enter
ja
push
fdivp
pop
mov
xchg
lcall
mov
sbb
cmp
mov
fldt
rcll
cmp
dec
inc
sub
jp
fadds
cmp
lahf
xchg
jmp
jle
ljmp
dec
scas
out
jae
daa
mov
lret
or
jg
test
idiv
test
cmp
lock
xor
push
lret
pop
stos
jbe
push
outsb
ret
test
scas
test
addr16
pop
sub
push
ficoms
adc
jo
cmp
push
rcrl
jae
in
rclb
pop
xor
hlt
or
jno
sbb
jo
fwait
sub
stos
or
int
sbb
pusha
stos
mov
sub
out
mov
aam
dec
push
jb
mov
pop
or
jbe
ret
dec
lea
push
scas
dec
imul
jnp
fwait
sbb
test
dec
test
pusha
or
cmpsb
imul
dec
sub
aad
popa
xchg
cmp
sub
les
inc
pop
ja
hlt
mov
jmp
imul
mov
dec
mov
fmul
mov
cmpsl
push
dec
ja
icebp
mov
xlat
in
leave
xchg
mov
sub
jo
dec
push
sbb
imul
out
clc
mov
clc
aam
jmp
xchg
lea
xchg
loopne
sub
iret
xor
imul
sbb
mov
push
mov
pop
popa
cmp
mov
jmp
jbe
sub
ljmp
sbb
mov
mov
add
adc
loop
scas
mov
mov
sbb
das
jae
mov
in
sub
push
jmp
push
xchg
fcompl
inc
nop
push
sub
gs
outsl
mov
push
ret
lock
or
add
nop
imul
jo
mov
mov
jo
xchg
cmp
cmpsb
sbb
mov
jmp
lds
int
test
and
and
inc
cmpsb
sahf
out
push
test
cmpsl
push
pop
outsl
mov
fwait
push
aam
iret
sbbl
stc
int3
dec
sub
std
push
cmpsl
jbe
sbb
inc
sbb
nop
and
mov
and
mov
insb
je
lret
mov
popf
fisttpl
pop
gs
and
in
xchg
jmp
push
mov
mov
daa
shlb
lock
xor
aad
out
or
ljmp
adc
sbb
ds
push
das
daa
addr16
into
cmp
adc
ret
bound
andb
push
or
cmpsb
mov
or
jne
pushf
add
orb
mov
mov
enter
test
mov
push
aad
sub
fcmovu
mov
mov
jl
adc
push
inc
add
bound
outsb
pop
bound
sbb
mov
push
inc
repnz
cwtl
iret
and
jb
scas
arpl
pusha
out
push
and
stos
cmp
stc
pop
jecxz
sbb
sub
dec
int
popf
dec
mov
cltd
ss
xor
lods
loop
mov
ret
or
and
adc
pop
mov
fdivs
pusha
into
xchg
inc
shl
mov
popf
pushf
push
shrl
bound
adc
xorl
je
xchg
xchg
call
enter
lds
loop
push
arpl
inc
jns
push
jecxz
fbld
add
mov
out
mull
push
xor
out
dec
shll
add
das
loope
divb
jmp
outsl
je
adc
inc
fmull
dec
adc
out
and
dec
mov
add
repz
xchg
push
mov
test
pushf
out
push
std
dec
call
adc
outsb
rol
and
sbb
push
cmc
imul
cli
rcrl
je
jne
or
hlt
out
enter
mov
pop
cmp
pop
adc
fsubl
test
xor
xor
sub
or
dec
addr16
andl
movsb
fidivs
xor
icebp
aaa
test
rol
popf
jae
dec
sub
sbb
sub
icebp
hlt
mov
cmpsl
pop
inc
into
movsb
mov
out
test
inc
std
rorb
nop
jo
loop
adc
push
sub
lret
mov
mov
movsb
out
sbb
and
lret
divb
loope
cmp
inc
popa
imul
addr16
adc
je
repz
add
fisubrs
jae
cmp
frstor
arpl
fildl
xlat
shlb
xchg
inc
sub
enter
outsl
xchg
fsubl
sub
je
in
sub
in
inc
enter
cmp
and
mov
scas
xchg
fnstcw
jae
xor
ret
int
xchg
push
pop
test
push
and
sbb
xchg
pop
or
lea
cli
lcall
les
mov
into
daa
insb
cs
mov
pop
outsb
xchg
dec
mov
pop
sti
lods
pushf
clc
and
int
iret
push
sub
sbb
or
mov
add
add
jae
test
sbbl
test
sets
push
out
xchg
or
pop
es
sub
add
outsl
outsl
aam
dec
in
in
popa
adc
adc
jo
cmpsb
outsb
out
pop
out
mov
xor
popa
adc
dec
ret
pushf
aam
inc
test
pop
lret
cltd
shrl
cmp
adc
xchg
mov
addr16
das
add
js
ja
or
jge
mov
das
inc
cld
outsb
jne
jne
out
insl
fs
xor
lods
mov
xchg
sbb
in
mov
addr16
jecxz
push
jo
sub
cmp
jo
aas
xchg
push
hlt
sub
in
out
lods
dec
out
sub
fistpl
dec
insl
int3
sti
dec
adc
push
ret
pop
loopne
je
jg
mov
js
arpl
pusha
jae
cli
mov
pop
test
cmp
jno
out
or
jecxz
cmp
mov
cmp
and
dec
lock
imul
push
push
hlt
cmpsl
imul
sub
bnd
mov
test
lds
enter
cmp
mov
imul
loopne
out
pop
fldt
shrb
sbb
dec
cli
outsl
in
push
jne
xchg
sti
pop
neg
jno
pop
dec
fstl
sti
adc
jb
icebp
scas
push
addl
outsl
pop
cli
dec
lock
gs
xchg
ss
movsb
out
dec
imul
or
mul
adc
dec
cmpsl
mov
addr16
nop
fwait
dec
pop
xor
jge
adc
je
icebp
pusha
bound
inc
or
sub
popa
stos
pushl
sub
fisubs
test
jns
cmp
or
pusha
dec
mov
xor
in
jl
jp
lret
pop
enter
jae
je
cmp
imul
scas
bound
adc
repnz
lret
imul
dec
add
xor
push
dec
cld
out
nop
mov
inc
push
pop
shlb
jmp
jne
jbe
outsl
sub
shlb
je
dec
sbb
jmp
mov
je
imul
lcall
jmp
xor
lock
call
inc
insl
cld
insl
push
in
push
hlt
out
inc
popa
pop
call
push
stc
dec
imull
data16
add
cmp
xor
mov
push
push
dec
inc
in
pop
push
insl
pop
in
popa
imul
pop
push
outsl
dec
mov
bnd
nop
fcmovne
dec
nop
lock
dec
out
push
push
dec
jne
outsl
call
pmaddwd
xchg
mov
scas
mov
jo
bound
loope
adc
mov
jmp
push
iret
mov
ja
es
sub
int
pop
jmp
pop
jmp
addr16
push
inc
js
dec
outsb
stos
gs
mov
cmpsl
jg
jne
dec
popf
hlt
test
jle
pop
jno
cmpsl
jo
std
loop
js
jecxz
xchg
push
jns
xor
adc
or
push
imul
jbe
and
mov
mov
out
fsubrs
pop
inc
in
adc
or
fs
add
call
aaa
ja
lock
imul
icebp
xchg
jne
cmpsb
push
in
test
movsl
icebp
pushf
mov
xor
das
jg
adc
hlt
int3
sub
mov
cmp
xor
repnz
test
and
dec
adc
in
and
je
sti
mov
dec
jle
adc
call
fimuls
or
jg
cmp
data16
loop
adc
scas
fisttps
mov
jne
push
enter
mov
out
fsubr
cli
jmp
push
jmp
mov
push
movsb
lcall
ret
xchg
js
mov
movsb
mov
dec
xor
mov
movsl
icebp
repz
xchg
mov
add
enter
xchg
cli
repz
das
mov
push
xor
jo
out
inc
pusha
lods
push
mov
rclb
or
data16
jo
insl
orb
push
push
xor
jmp
enter
inc
outsl
ljmp
mov
cmp
ret
mov
jae
js,pn
aad
outsb
add
mov
cmp
pop
push
subb
call
push
ds
sti
inc
sub
cmpsb
mov
aaa
pop
scas
sbb
mov
repz
and
jne
mov
loopne
jae
aaa
adc
inc
push
jge
insl
std
das
out
loop
or
in
push
fs
jo
out
ficoms
jge
mov
pop
pop
inc
daa
dec
das
dec
mov
pop
mov
in
call
mov
icebp
in
jae
es
out
sub
mov
aaa
repz
inc
xchg
cwtl
in
movsl
pushw
daa
mov
sub
pop
insl
jae
push
jl
jle
jnp
push
je
xor
in
xchg
shl
inc
jbe
insl
mov
insl
call
arpl
adc
aas
xor
popw
jp
xchg
aas
mov
imul
pop
add
outsb
out
add
adc
mov
xchg
push
inc
xchg
imul
cli
shlb
sbb
imul
jbe
aam
jbe
sub
xchg
movsb
rcl
test
cmp
je
in
jg
sbb
and
imul
or
pop
mov
pop
jo
adc
sti
sub
sarl
and
xchg
in
lds
adc
jo
push
bound
mov
std
idivl
insl
out
push
clc
insl
js
inc
out
addr16
sahf
out
clc
jbe
iret
dec
sub
sub
std
les
push
lods
in
ljmp
movsl
outsl
lds
sub
sbb
adc
mov
sbbl
in
je
adc
shrl
call
dec
popa
jmp
xor
in
xchg
pop
out
mov
enter
xchg
ror
sarl
xchg
test
dec
lahf
out
jo
jle
sub
stc
sbb
hlt
sahf
mov
inc
adcl
push
pop
mov
jmp
arpl
pop
sahf
test
jo
in
loop
xor
mov
cltd
and
scas
push
movsl
insl
in
lret
inc
ja
pop
int
cmpsb
je
ds
mov
sub
adc
cmp
out
je
mov
jb
arpl
sbb
lret
jo
cmp
stc
int
mov
xchg
aas
test
outsl
xchg
inc
mov
call
sub
lock
loope
dec
xor
nopl
or
dec
add
sbb
call
call
movsl
ljmp
rcrl
cmpsb
push
stc
out
std
jo
dec
push
jbe
pop
cmpsl
adc
faddp
fdivr
jbe
mov
jl
loopne
call
stos
mov
cmp
mulb
mov
das
sti
out
loopne
fistpll
pop
lea
xor
es
fs
mov
lock
pop
dec
jle
jecxz
sub
inc
mov
push
pusha
dec
push
jmp
test
mov
add
divb
pusha
mov
mov
xor
daa
jge
in
lock
mov
xchg
fiaddl
inc
in
adcl
mov
lds
int3
and
clc
fcmovu
lret
xor
xchg
aaa
inc
shrl
dec
lds
and
push
add
aam
insl
js
xchg
frstor
scas
sbbl
push
push
addr16
sub
and
add
insl
addr16
int3
fsts
test
adc
in
orb
mov
insb
bound
fisubs
out
push
enter
fdivrs
in
sbb
je
mov
cmpsb
push
lret
dec
repz
addr16
loopne
dec
lds
out
dec
cld
dec
sub
les
push
aaa
insl
repz
in
je
cmp
fs
jmp
or
loop
mov
in
lods
ret
cs
jmp
je
fdivl
xor
fs
pusha
loope
fcompl
fistpll
add
loop
movsl
movsl
loopne
pop
jecxz
fcompl
das
add
aad
scas
in
movsb
xlat
dec
mov
push
dec
test
js
clc
arpl
jo
inc
and
movsl
pop
in
add
call
sarl
inc
leave
xor
and
xor
jne
sub
popa
ret
imulb
call
push
hlt
dec
clc
pop
lret
ds
dec
adc
test
sahf
lds
push
xchg
loopne
cmp
push
push
jp
call
add
cltd
mov
adc
jl
pop
lret
notb
data16
fsubr
mov
ja
inc
imul
mov
inc
es
pushf
jecxz
aaa
popa
xor
add
fs
mov
push
pslld
cmp
push
jle
jne
cmp
xor
add
stos
sub
jno
cmpsb
repz
loopne
aas
int3
adc
mov
dec
sub
aad
sub
jae
js
xchg
sahf
sarb
es
gs
out
inc
popf
jb
idiv
sahf
mov
sub
cs
shl
mov
pop
sbb
adc
or
sbb
inc
jno
xor
sar
cmpsl
mov
xchg
xlat
or
das
xchg
out
pop
dec
push
jmp
clc
sub
dec
and
xchg
sbbl
in
popf
les
leave
push
add
daa
les
ret
mov
out
test
call
push
ds
jae
mov
xchg
xchg
imul
pop
xor
jg
cmc
loop
mov
lods
andb
mul
out
nop
dec
pop
jo
divb
jle
out
cmp
not
push
int
xor
popf
aas
xor
jae
fldl
or
out
dec
fildll
or
pop
aas
outsl
fwait
jo
dec
lock
in
mov
dec
in
push
in
enter
ret
andb
jge,pn
addb
mov
xor
jmp
cli
cli
scas
jo
lock
in
ss
push
imul
negl
cmpsl
adc
cli
nop
or
int
sub
divl
dec
sub
js
nop
pop
ret
subl
fs
cmp
cli
in
pop
lock
ljmp
xchg
pop
or
push
repz
call
ret
and
stos
pop
adc
push
shrb
in
add
mov
outsl
insl
mov
nop
cmpsb
inc
xor
and
mov
out
cmc
xchg
cmpsb
dec
clc
mov
and
in
adc
das
push
in
inc
test
dec
nop
aas
lock
out
loope
outsl
sbb
push
in
icebp
jb
push
jb
test
mov
loop
popa
out
xor
push
dec
repz
inc
call
mov
out
adc
outsb
jmp
pop
loope
int3
jecxz
jg
push
ljmp
inc
dec
mov
xor
mov
nop
mov
daa
mov
dec
sbb
in
insb
jg
inc
xchg
jo
insb
push
gs
jl
das
aas
outsl
mov
stos
arpl
cmp
lods
jmp
cld
push
cmp
sahf
aas
and
dec
xor
jmp
sbb
pop
rclb
outsl
out
mov
jmp
rolb
inc
mov
les
scas
pop
rol
sub
das
push
mov
stc
mov
out
call
test
inc
out
dec
cld
xchg
and
dec
push
jp
movsb
jae
in
cwtl
sub
es
rorb
iret
dec
mov
imulb
add
add
jno
int
lods
xor
xchg
jno
imul
rorl
test
das
adc
jno
iret
inc
jo
xchg
mov
jle
pop
push
xor
ss
ja
mov
fwait
leave
and
mov
sbb
push
inc
dec
scas
out
daa
dec
xchg
and
inc
jo
ljmp
dec
arpl
xor
mov
or
test
dec
or
in
adc
adc
aaa
push
inc
dec
pop
out
aaa
jne
jns
adc
dec
add
enter
inc
pop
inc
in
out
in
ret
mov
pop
adc
mov
xor
mov
sub
outsl
sbb
out
or
add
dec
jg
dec
adc
sub
nop
inc
in
dec
xor
mov
mov
jb
outsl
xor
inc
int
cmp
dec
xor
push
push
pop
push
or
cld
xor
pusha
mov
mov
pop
jg
jle
xchg
or
clc
mov
mov
stos
fdivl
jns
push
in
ret
push
and
push
adc
test
test
out
push
pusha
push
mov
push
outsb
stc
push
fs
ja
cmovne
mov
and
sbb
pop
sub
jl
lods
punpckhbw
imul
and
jg
gs
jl
xchg
and
inc
in
jge
dec
cmp
test
outsl
xor
scas
pop
fsubr
je
fadds
jo
in
push
mov
inc
andb
and
repz
outsl
dec
inc
ret
xchg
jnp
mov
mov
addr16
dec
jg
flds
and
sub
adc
add
roll
fwait
sub
enter
push
jmp
call
in
push
push
push
test
call
sub
dec
dec
or
jmp
fldenv
pop
loopne
in
mov
or
ret
push
decb
xor
test
out
mov
dec
insl
pop
outsl
call
in
adc
lcall
out
repnz
test
dec
stc
repnz
add
outsb
xchg
inc
repz
std
repnz
dec
lock
dec
daa
outsl
clc
jae
repnz
and
test
mov
adc
insl
jmp
int3
jg
repnz
cmp
outsb
bound
outsl
data16
inc
in
mov
cwtl
outsb
jbe
dec
ret
repnz
test
jg
test
push
push
sarb
or
outsb
pusha
xor
dec
outsl
js
clc
jo
or
repnz
pusha
loopne
das
cmc
loopne
rcll
cmp
in
dec
imul
scas
xor
std
push
mov
push
inc
out
pop
jg
dec
push
mov
insl
je
jle
push
in
add
adc
sub
scas
pop
cmp
mov
push
mov
push
push
push
rclb
push
outsl
push
scas
push
into
push
dec
push
int
dec
push
das
push
dec
push
leave
push
jo
push
xchg
fwait
test
fildl
cmp
pop
xchg
rcll
mov
pmuludq
stos
fdiv
pop
icebp
jbe
sub
insl
or
jne
popa
call
lret
push
arpl
outsl
in
sub
pusha
jg
popa
out
dec
push
inc
push
pusha
dec
outsl
sub
jp
jo
dec
jmp
in
inc
xchg
imul
call
dec
decl
pusha
push
cld
push
dec
jne
insb
in
sub
pop
mov
imul
xlat
inc
push
push
scas
pop
inc
dec
jg
push
jecxz
sahf
dec
mov
pop
push
push
jns
dec
xor
in
imul
scas
jnp
insl
popa
push
insl
repz
les
ljmp
cmovne
xor
or
mov
repz
pop
push
adc
jns
out
nop
cmpsl
movntq
out
andb
aam
scas
xor
mov
pop
test
jecxz
jp
popf
xchg
js
fiadds
testl
loope
loope
shl
jp
jbe
insb
iret
sub
cmp
loop
enter
mov
into
rcrb
fisubrl
negb
inc
loope
fs
popa
pop
and
dec
das
pop
iret
push
mov
jl
test
push
jo
stc
fisttpll
add
es
movsb
push
imul
xor
popf
xchg
cmp
pop
or
xchg
pop
stos
into
int
int3
mov
gs
mov
ficoms
std
dec
cld
in
enter
dec
mov
add
jl
jae
cmp
and
or
adc
aas
lahf
gs
adc
sbb
push
push
arpl
test
sub
in
sub
dec
or
out
push
data16
jecxz
in
in
mov
adc
inc
or
xor
sub
add
aas
sub
sub
in
lods
int3
movb
xchg
push
jo
in
jne
inc
sub
xor
sbb
decb
push
lods
arpl
jg
cmp
mov
bound
mov
shr
arpl
in
ljmp
rorl
adc
push
jne
xchg
sub
hlt
mov
jge
out
icebp
mov
inc
sub
jle
jo
add
call
sub
pop
pop
loop
and
lock
insb
push
pop
or
call
lretw
mov
movb
test
or
lock
enter
daa
pop
fs
dec
cmc
dec
jo
xor
xchg
push
jae
xchg
dec
add
insb
mov
test
mov
lds
dec
or
push
mov
call
sub
adc
test
addr16
inc
fadds
loop
mov
int3
mov
sahf
daa
inc
in
jb
sub
xchg
jmp
cwtl
jmp
lock
xor
and
mov
pop
popf
ret
out
jmp
xchg
pop
jae
jbe
xchg
push
or
jecxz
popf
ret
test
aaa
pusha
sbb
imulb
repz
pusha
out
dec
gs
inc
mov
fwait
jmp
test
and
lret
shlb
push
shlb
out
pop
sub
mov
sub
outsb
in
sti
and
jg
clc
lds
mull
movsb
sub
lods
or
adc
negl
ja
js
jl
bound
ljmp
dec
es
cmp
arpl
je
cs
sbb
pop
dec
jecxz
je
fs
inc
stos
insl
insb
addr16
inc
int
cmp
push
inc
or
xchg
clc
mov
jp
push
add
dec
jb
in
sti
mov
and
xlat
push
dec
scas
mov
dec
lock
ret
push
dec
pop
adc
dec
mov
je
jg
sbb
test
mov
mov
ds
inc
or
sub
sub
nop
ds
arpl
int3
xchg
mov
fisubrs
inc
jo
or
inc
insb
sbb
adc
add
xchg
pop
gs
jae
adc
xchg
out
inc
daa
push
inc
shrb
movsb
fadd
mov
or
arpl
cld
push
mov
out
mov
enter
rcr
shrl
add
or
in
xchg
movsb
das
dec
shld
aas
sub
shrl
cld
lods
cld
or
inc
and
loop
sbb
mov
or
mov
sbb
es
cmp
jo
shll
daa
stc
lock
daa
sbb
push
lods
cmpsl
push
lahf
push
jge
add
cld
lret
jbe
or
xchg
out
jle
les
jne
mov
inc
cltd
out
in
mov
sbb
mov
and
dec
enter
or
in
dec
push
pop
cld
bound
scas
mov
mov
cmp
adc
loop
in
sub
data16
or
in
or
call
iret
int3
insl
inc
aaa
mov
les
enter
xor
je
cmp
push
jp
push
jne
fsub
stc
cmpsl
cmp
and
jle
insl
inc
jl
push
test
js
pop
negl
std
sub
push
mov
cmp
fdivl
sub
or
push
sub
pop
jb
or
xor
pop
xchg
enter
and
shl
lods
lds
inc
fsubrl
outsl
int3
pop
dec
push
fbstp
adcb
out
push
addr16
fsubrl
fs
mov
loop
fisttpl
dec
sub
enter
sub
cmpsb
mov
or
stos
pop
adc
sub
pop
dec
outsb
mov
xchg
lock
imul
repz
in
push
and
pop
cltd
fisubrl
sub
ljmp
jns
nop
cmpsl
dec
adc
das
sahf
dec
shrl
pop
dec
jp
push
and
pop
lods
enter
mov
in
out
imul
pusha
push
js
cld
loope
sarb
mov
push
int
je
push
xor
fiadds
test
add
loope
pop
push
outsl
jecxz
hlt
in
xor
or
cmp
push
movb
and
inc
shl
dec
cmc
sub
outsl
jo
push
inc
jmp
xorl
jo
mov
pushf
pop
data16
js
sbb
mov
int3
sub
sbb
sbb
xchg
hlt
movsb
inc
or
dec
push
jnp
xor
pop
xor
lock
ja
cmc
pop
lock
sub
jp
lds
ret
repz
cmpsb
mov
mov
jmp
jnp
sub
adc
stc
and
ljmp
jo
inc
icebp
dec
jne
xor
gs
mov
dec
in
push
fsts
je
pusha
nop
stc
into
cmp
das
add
sbb
scas
jg
aaa
pop
out
shrb
sbb
jo
roll
jne
repnz
in
pop
stos
insb
fisubs
lret
dec
jge
jl
outsl
loope
test
stos
mov
jae
es
xchg
dec
push
nop
out
fimuls
push
pusha
xor
adc
in
xor
mull
jg
in
scas
push
out
push
imul
dec
sbb
sub
jg
repnz
outsb
loope
lock
dec
fs
and
push
push
jecxz
dec
nop
je
dec
jmp
out
outsl
addr16
jmp
popa
mov
lret
dec
arpl
inc
addr16
jg
out
nop
pslld
mov
jl
fwait
jne
jo
outsl
push
jb
dec
jmp
jmp
jmp
cmp
cmpsb
jb
js
out
ret
les
nop
dec
js
dec
aam
mov
add
inc
and
es
repz
aas
pushf
sub
dec
sub
lret
lea
dec
xor
out
inc
xor
adc
daa
mov
fisubrl
insl
mov
insb
lock
pop
mov
ja
push
shrb
incb
data16
loop
movsb
mov
in
jnp
into
testb
adc
hlt
cmpsl
mov
es
sbb
insb
pop
xor
clc
jae
pop
in
mov
jo,pt
loop
push
leave
and
repz
movsl
jl
rcll
clc
xor
ret
pushf
mov
loop
int3
xchg
cmp
cmp
rorl
dec
mov
int3
in
push
xchg
cmp
jmp
popf
bnd
pop
aas
insl
arpl
mov
xchg
lods
mov
enter
es
lcall
ficoms
xor
sbb
adc
sbb
addr16
add
inc
dec
daa
sub
xchg
adc
inc
xchg
jl
adc
rclb
push
mov
cli
cmpb
scas
push
xor
and
stos
sub
inc
outsb
out
cltd
loop
pop
inc
sbb
mov
iret
je
lcall
xchg
inc
fimull
sbb
clc
xor
jo
int
push
je
adc
jmp
pop
dec
sub
xchg
xchg
adc
ljmp
lock
pop
push
in
bound
mov
sti
std
div
and
mov
sbb
mov
shrl
jbe
mov
push
into
sub
cs
popf
imull
xchg
cld
inc
pop
inc
dec
enter
adc
arpl
mov
cmp
push
add
mov
inc
ljmp
sub
mov
cmp
in
addr16
sbb
push
aas
ljmp
lcall
jo
and
daa
vprotb
or
jo
movsb
jmp
mov
mov
cmp
out
sub
imul
pushf
add
data16
aas
jmp
popf
xor
insb
std
xchg
push
out
xor
rclb
sub
insb
cltd
in
jmp
and
je
or
loop
pop
jo
sbb
int
sti
imul
dec
lcall
or
jae
pop
out
xor
out
add
xchg
je
dec
or
adc
cmp
jae
aad
and
xchg
fsts
insl
fsubr
sub
lods
lods
ret
inc
popa
inc
push
lods
add
mov
add
rorl
inc
ds
movsl
mov
fiaddl
clc
addr16
push
pop
insl
fmuls
adc
jo
arpl
dec
sub
or
rcrl
je
je
out
pop
cmp
scas
psubq
insl
sti
daa
xchg
scas
dec
and
jbe
es
mov
je
fldcw
add
add
ss
in
mov
data16
push
mov
jne
push
xor
adc
je
stos
cmp
aas
orb
sbb
fdivs
xor
movsb
xchg
mov
popa
sbb
push
into
jo
lock
jo
xor
cmp
push
jne
je
movsb
xor
frstor
lods
in
jmpw
and
test
fsubrl
sbb
sbb
insl
loop
imul
popa
stos
sahf
das
or
lock
insl
xor
push
insl
jo
out
outsl
inc
lock
insl
fadd
faddl
movsb
pusha
xor
daa
mov
sub
and
addr16
jg
shll
dec
repz
jb
bound
inc
add
pop
addr16
test
push
rcr
loopne
mov
fidivl
sbb
adc
and
and
jo
fs
push
in
xor
xor
jb
xchg
inc
test
lahf
xor
sbb
mov
outsl
pop
cmc
mov
sub
in
mov
test
fstpl
pop
adc
add
js
lods
fs
ret
cmpsb
mov
mov
mov
inc
mov
ja
movsb
mov
pusha
mov
pop
addr16
mov
pop
pop
aam
ljmp
dec
jo
mov
insl
cmovnp
or
outsl
insb
out
dec
xchg
imul
mov
push
cmp
loope
ja
ljmp
cli
call
or
mov
call
lcall
inc
out
out
pusha
mov
insl
aas
loop
ret
fisubl
jmp
xor
pop
adc
aas
sbb
adc
pop
mov
pop
xor
mov
fnstsw
inc
cmpsb
adc
shll
dec
xor
outsb
imul
into
popa
shl
addr16
sub
mulb
sub
cltd
mov
imul
daa
inc
jb
out
adc
mov
push
xor
inc
or
sub
call
push
addr16
xchg
in
lret
arpl
lock
push
jg
cmp
lret
dec
out
out
or
addr16
sub
clc
mov
lock
sbb
push
stc
pop
xchg
jmp
orl
xor
je
adc
pop
hlt
sahf
sub
push
test
scas
lea
xor
push
fpatan
pusha
and
scas
pop
decl
test
loop
addr16
ja
je
test
cmp
daa
xor
hlt
jbe
mov
mov
call
and
pop
js
or
mov
lahf
int3
shlb
and
sbb
movsb
add
cmc
lods
in
or
push
das
jbe
xor
aas
xchg
fildll
out
imul
jns
dec
and
cmp
les
sbb
mov
pop
imul
adc
sub
ret
inc
imul
addb
jge
pusha
or
cmp
psubq
inc
dec
popf
dec
push
int3
aas
cmp
add
or
in
fimuls
xor
movsb
cmp
arpl
insb
je
test
mov
out
jno
mov
les
insl
int
rol
je
jmp
cmpsl
stc
data16
xor
and
or
outsl
std
jg
cltd
push
repnz
xchg
mov
movsl
outsl
jl
hlt
lret
lds
popa
ja
mov
addr16
mov
mov
rcrb
in
sbb
mov
movsl
shrl
bound
push
pop
insl
fcomi
jg
je
loop
mov
jo
mov
sub
cmc
sbb
in
enter
xor
jo
lahf
inc
fcoml
call
ljmp
sub
das
mov
or
jae
repz
push
pop
pop
outsl
je
faddp
xor
and
adc
repz
push
arpl
scas
push
or
mov
ss
dec
sbb
scas
loop
push
xchg
arpl
addr16
addr16
out
or
mov
nop
mov
adc
loopne
in
lods
js
call
cmp
add
lahf
rorl
mov
mov
pusha
stos
sub
dec
add
or
adc
mov
gs
jmp
ja
sub
jo
mov
mov
stos
adc
push
and
mov
jb
dec
hlt
xor
insb
sub
pop
rclb
pop
test
cmp
fsubs
sub
xchg
ss
scas
ja
pusha
sub
cld
jmp
pop
loopne
push
adc
je
sub
jg
inc
bound
out
hlt
mov
je
shrb
fstps
or
add
cwtl
and
pop
pop
fmulp
bound
test
lahf
push
jnp
mov
cs
mov
or
outsl
lcall
or
mov
lret
lock
repnz
adc
or
shlb
or
sbb
fwait
movsl
cmp
or
loop
repz
jo
pusha
dec
std
imul
loop
pusha
xor
or
mov
xchg
mov
lret
cmp
mov
push
pop
rclb
lock
aaa
roll
jmp
adc
out
mov
loop
push
lds
outsl
or
out
mov
cmp
or
int
mov
movsl
outsl
inc
scas
pusha
dec
push
xchg
lods
adc
out
add
and
scas
jge
mov
jge
pop
dec
jo
fwait
mov
dec
mov
jg
clc
sti
les
ret
jmp
js
addr16
dec
imul
jo
loop
sub
pop
in
dec
andl
cmpb
push
shll
jmp
and
push
test
in
push
je
cmp
out
popa
into
out
dec
jmp
loope
fsts
loopne
ret
mov
xchg
addr16
imul
pusha
scas
outsb
fcomip
popa
js
push
or
xchg
jle
cmp
in
and
mov
cmp
inc
out
dec
movsl
pop
jmp
push
test
in
or
dec
adc
out
jo
sub
cmp
lahf
insb
inc
cmpsl
shll
inc
scas
dec
mov
std
sub
aam
insb
xor
mov
inc
out
add
push
dec
sbb
ret
cmp
jo
cmpsb
insl
je
or
mov
inc
adc
rcl
nop
imul
enter
and
push
mov
mov
inc
xor
outsl
pop
insl
xor
hlt
inc
xchg
or
add
lods
mov
sub
mov
mov
std
inc
outsb
int3
popl
sub
inc
mov
shlb
dec
minps
mov
jle
push
icebp
and
fwait
sub
icebp
cmp
jbe
movsb
inc
mov
lea
mov
cmp
dec
mov
ljmp
std
xor
loopne
int3
mov
adc
hlt
mov
das
fldcw
js
dec
in
mov
xor
cli
and
push
scas
pusha
pmulhuw
cmpsl
mov
mov
mov
sub
mov
fs
and
xchg
cmp
jo
jae
addr16
lds
pop
mov
add
in
lret
mov
cmpl
loop
xor
imul
lret
cmc
xchg
push
push
inc
inc
xor
in
das
mov
mov
xor
out
sbb
jne
sbb
lock
inc
cltd
cmp
psubw
jmp
mov
mov
icebp
jle
jb
pop
loope
aas
int3
xchg
push
mov
ljmp
inc
mov
cli
mov
xor
js
sub
shrl
mov
xor
xor
sbb
out
mov
stos
jge
cld
fwait
sub
fwait
xchg
or
in
ljmp
testl
mov
lock
or
cmp
sub
shl
xor
push
mov
mov
and
data16
inc
push
gs
ljmp
xor
aam
add
dec
stc
sub
sub
loop
pusha
jo
pop
pop
xchg
inc
loop
das
aad
push
or
or
sub
xor
cld
xor
adc
dec
out
ret
and
jo
push
sub
lds
rcrl
sbb
or
fdivrs
adc
or
pushf
shll
data16
jl
in
push
aas
adcb
or
adc
ret
insb
shrb
in
out
dec
mov
into
jmp
test
cmpsl
pop
aaa
jne
das
mov
push
dec
mov
xor
repnz
mov
lret
shlb
ret
inc
jne
xor
icebp
loope
pushf
aas
es
jecxz
dec
call
dec
nop
push
mov
pop
inc
lock
shll
outsb
jmp
lods
sub
out
or
lea
iret
out
ret
xchg
dec
or
lcall
mov
xor
das
inc
dec
je
mov
cmpsl
pop
mov
adc
push
sub
jo
fadd
lret
sub
push
out
in
adc
dec
add
lret
cmpsb
lret
popa
xchg
hlt
jae
xchg
add
xor
call
call
out
stos
inc
and
sub
clc
jo
sbb
out
dec
and
jl
xchg
jnp
dec
or
mov
rcll
cld
ja
xor
jmp
xchg
or
and
out
insb
sbb
jle
imul
sub
mov
jno
jb
imul
push
xchg
sbb
int3
xchg
push
sbb
insb
je
and
out
out
cmpsb
inc
ds
sbb
je
or
orb
xchg
aas
push
inc
jnp
xlat
xor
mov
cmp
in
jnp
out
jne
adc
idivl
xchg
inc
pusha
cmpsb
insl
pop
mov
cmp
xchg
adc
xchg
bound
shl
xchg
lret
xchg
sub
xchg
dec
aaa
push
cwtl
ret
daa
aaa
js
jo
push
iret
add
jo
insl
pusha
pop
dec
inc
mov
sbb
mov
rorl
iret
in
or
xchg
dec
outsl
pushf
js
dec
xchg
call
pop
lods
mov
ljmp
outsl
or
shl
and
ljmp
xor
xor
cmp
xchg
adcb
fnstenv
mov
das
sahf
imul
loop
inc
fadd
adc
adc
add
xchg
mov
push
pushf
push
outsl
or
jae
pushf
mov
outsl
fwait
out
pushl
pop
cwtl
and
push
roll
gs
mov
std
jae
imul
mov
and
std
leave
pop
les
repz
mov
jae
inc
std
xlat
mov
xor
push
fstl
fdivs
lret
push
loopne,pn
pop
insb
xor
push
pop
out
cmc
mov
dec
jo
dec
std
sbb
aam
adc
jae
jns
lret
or
stos
fidivl
lcall
sarb
popa
pusha
adc
cli
cmp
dec
call
hlt
sub
sub
mov
xor
mov
dec
fdiv
in
fdivrp
pop
int3
pop
jne
je
out
cltd
fistpll
mul
insl
xlat
mov
call
into
xchg
push
add
inc
mov
or
popa
jp
adc
hlt
movsb
int
xchg
pop
adc
repz
pop
mov
jno
je
gs
jecxz
xchg
retw
ret
pusha
cwtl
out
loop
es
and
sbb
add
lods
movsb
dec
mov
push
popa
sbb
les
das
sbb
add
ds
out
je
jmp
cld
fwait
loopne
xor
adc
repnz
or
dec
fwait
add
int
push
xor
cmp
loope
jae
out
mov
sub
push
mov
sub
mov
movsl
adc
out
mov
pusha
dec
hlt
ljmp
sbb
push
mov
cmp
inc
popa
aad
pop
ljmp
addr16
pusha
add
dec
and
jmp
inc
inc
adc
decl
data16
pop
imul
std
insl
test
mov
rcrl
ja
sbb
insl
in
xor
popf
test
test
rcll
loopne
loopne
xchg
push
inc
inc
dec
dec
test
xor
adc
pop
dec
cmp
in
push
fs
cmp
xchg
mov
pop
movsl
pop
fimull
add
adc
pop
mull
adc
fidivs
sub
test
xor
and
loope
mov
jl
adc
add
sti
jl
stc
sbb
mov
addb
rcr
mov
jecxz
mov
push
jp
fistps
or
and
out
fcoms
stc
rclb
je
pusha
adc
sarb
cli
pop
cmp
pop
dec
shrb
inc
das
push
loop
or
xor
scas
shr
test
push
pop
jp
push
cld
sub
pop
fimuls
adc
pusha
cld
sub
sub
ret
icebp
scas
shrb
outsl
push
pop
sub
mov
mov
cmpsl
cltd
lret
push
data16
mov
dec
jno
dec
mov
lds
insb
bound
add
dec
rclb
pop
cmp
test
xor
aam
imul
pop
repnz
mov
movsl
sbb
popa
sub
dec
sub
cmpsb
or
sbb
inc
sub
addr16
and
loop
adc
xor
in
push
push
lock
es
mov
enter
daa
into
in
xor
mov
push
shrb
out
outsb
sub
lcall
movsb
fldl
xchg
arpl
push
jbe
jmp
or
or
into
add
mov
sub
and
outsl
mov
je
or
insl
and
push
cmp
out
lcall
mov
sub
lea
xor
sar
or
mov
cli
xor
cmp
push
scas
ss
mov
cmp
push
adc
and
dec
push
mov
loopne
jo
insb
xorb
insl
clc
xor
jo
jle
xor
lods
les
movsb
test
inc
js
aad
dec
je
in
pop
icebp
adc
rol
icebp
fwait
shll
adc
cli
pusha
jp
mov
outsb
in
and
std
xorb
sar
int
mov
cmpsl
std
cltd
xor
aas
fs
add
cld
add
cmp
and
mov
ficompl
outsl
loop
insb
in
adc
iret
dec
fsubrl
sahf
cmpb
ljmp
jg
cmpsl
and
mov
lods
cltd
insb
dec
daa
xchg
pop
sub
mov
add
int3
push
sbb
fwait
js
pop
sub
xchg
out
pusha
daa
jp
clc
add
jmp
lock
out
mov
xor
xchg
adc
shlb
ljmp
dec
and
ja
pusha
jo
or
dec
add
push
jge
loop
shr
sub
out
xchg
dec
or
pushf
jb
jnp
shl
mov
inc
pop
outsl
ss
cli
insb
mov
jne
xor
aas
add
add
sbb
push
ret
fsubrs
mov
das
mov
dec
mov
pop
inc
or
dec
pop
jbe
movsb
mov
sbb
test
leave
push
or
movsw
loopne
fwait
roll
add
sub
cmpsl
inc
and
mov
lods
cld
xchg
fwait
repnz
int3
rcl
ret
adc
xchg
js
push
pop
out
outsb
fistps
cmpsl
cwtl
mov
and
jo
lahf
je
aas
stos
pop
loope
shr
shlb
scas
imul
gs
push
cmp
int
aas
adc
or
mov
out
jmp
js
jge
pop
test
es
jge
fwait
sti
jle
divl
imul
pop
in
arpl
push
add
clc
mov
mov
leave
je
mov
jl
insl
imul
imul
jmp
mov
int3
lock
repnz
std
out
out
les
mov
cltd
add
dec
mov
fmul
sub
xor
dec
cmc
lret
or
xor
in
xchg
pop
pop
push
in
or
test
outsl
lods
or
mov
hlt
adc
mov
out
jl
sbb
mulb
push
sub
out
imul
ss
je
sbb
push
into
and
ljmp
movsb
cs
into
cmc
dec
call
int3
push
outsl
push
cltd
jns
xchg
lods
and
jg
mov
dec
mov
xchg
int
call
scas
aas
sarb
aaa
insb
cmc
mov
push
lret
fdivl
shll
mull
int3
adc
aam
shr
mov
int3
fmul
aas
out
lods
push
sub
and
cld
data16
sbb
movsl
inc
rcll
inc
movl
arpl
push
je
mov
pop
lods
ret
loop
cmp
out
scas
popa
push
test
dec
mov
mov
mov
fiaddl
icebp
testl
xchg
sarl
jb,pt
mov
inc
call
aad
outsb
add
push
xchg
jp
cmp
add
mov
pop
push
and
repnz
int
nop
xor
pop
movups
in
add
sahf
shrb
pop
ss
dec
or
dec
outsl
lods
outsl
icebp
js
add
test
dec
das
adc
out
jbe
fstps
scas
imul
xchg
mov
push
int
push
dec
mov
test
repz
sbb
fidivrs
stc
into
aas
hlt
mul
jl
xor
add
adc
cmpsl
xor
test
adc
out
jo
mov
dec
daa
mov
test
in
mov
loope
in
mov
mov
sub
mov
icebp
test
jbe
stos
cmp
ja
adc
cmp
rcrb
mov
cmpsl
call
adc
push
or
sub
roll
pop
adcb
pusha
ret
outsl
fcoms
das
loope
mov
cli
sarl
push
and
lock
je
jne
adc
je
mov
xchg
jle
movsl
or
xor
outsl
xchg
divl
loope
adc
nopl
imull
dec
sub
fmuls
aad
lods
outsb
cmp
or
lea
mov
xor
fwait
jp
fcomip
or
ret
sub
call
cmp
cmp
mov
test
cwtl
xchg
fucomp
sbbl
jo
push
inc
xchg
pop
scas
cmp
aad
sub
adc
mov
push
scas
pop
mov
adc
ljmp
shrb
jl
loopne
mov
pusha
lods
popa
test
aam
sub
sti
jp
out
bound
ret
sub
jl
pextrw
test
jl
or
popa
int3
ret
fldz
mov
mov
mov
sbb
repz
shl
jne
jnp
popf
out
mov
ret
xorb
fmul
stos
adc
outsl
jg
out
sub
sbb
pop
jmp
dec
sub
shll
fwait
sbb
dec
adc
cld
stos
enter
sub
dec
insl
dec
jecxz
mov
jge
daa
push
in
std
and
enter
xchg
call
dec
mov
ljmp
or
loopne
repnz
cmpsl
aam
and
xchg
pop
mov
outsb
jl
lock
cli
push
lods
adc
pop
jnp
cmp
mov
add
jecxz
jle
pushf
or
push
push
xchg
mov
outsb
bound
loopne
subl
xchg
add
pop
je
pop
cmp
outsb
aam
xchg
fisttpll
jge
mov
adc
sub
cmp
mov
adc
das
sub
and
loopne
cs
cmp
push
cltd
xor
push
inc
cmp
xor
lds
ret
inc
push
pushf
imul
jmp
clc
dec
sub
repnz
insl
or
mov
call
aas
dec
je
in
jmp
mov
es
gs
lea
outsb
mov
test
nop
jmp
mov
pusha
mov
std
test
stc
iret
call
jnp
pop
in
mov
xor
in
sub
je
push
lcall
je
inc
add
push
or
add
pop
imul
mov
shlb
or
loop
iret
lock
jo
movsb
xchg
adc
jnp
mov
sahf
mov
and
xchg
adc
ret
push
arpl
dec
add
or
movsb
fldenv
pop
sbb
and
pop
jb
push
add
add
fs
and
outsl
mov
sbb
xor
push
sub
insl
jnp
and
in
movsb
or
test
push
into
push
pop
inc
mov
out
mov
xor
dec
maxps
cmp
adc
jo
push
jmp
push
lods
or
hlt
dec
jmp
mov
or
push
pop
out
lret
mov
or
test
xor
sbb
adc
sbbb
test
lfence
push
inc
bound
test
xor
in
jp
inc
jo
sarb
outsb
mov
add
shl
pushf
int
outsb
out
repnz
pop
les
stc
lods
insl
out
or
outsb
outsl
addr16
fildll
in
sti
shlb
je
jmp
pop
in
fsubs
or
inc
pop
in
mov
mov
pusha
sub
insl
lret
insb
outsb
or
sub
into
test
and
outsl
into
cmpsb
jb
lock
dec
repnz
aam
ret
and
mov
push
and
jae
lods
and
out
incb
cs
adc
sub
enter
add
iret
pop
cmpsl
out
or
push
and
xor
pop
cmp
xor
stc
dec
sub
hlt
andl
dec
popf
das
jae
in
jae
adcl
call
imul
shlb
add
movsb
dec
in
int3
stos
inc
outsl
ret
sbb
cmp
sahf
mov
lret
insb
push
mov
hlt
dec
insb
leave
mov
scas
cmp
daa
mov
scas
jne
rcrl
addr16
shrb
out
std
and
stc
jo
push
sub
push
xchg
les
in
add
test
enter
mov
je
mov
popa
faddl
fucom
scas
fcoml
sbb
arpl
je
dec
sub
loop
or
or
fwait
loopne
enter
mov
adc
mov
loopne
or
int
pusha
sbb
cmp
pop
mov
aad
push
stc
add
cmpl
xchg
and
push
loop
addr16
and
adc
je
xchg
mov
incl
jbe
sarb
gs
sbb
jo
insb
loopne
mov
mov
adc
dec
incl
je
cmp
mov
dec
xor
cli
sahf
loopne
add
scas
sub
dec
into
mov
sub
lock
jmp
iret
cld
mov
lret
push
mov
popf
out
jl
xlat
xchg
push
jle
cmp
jg
je
add
sub
push
pop
repnz
setnp
inc
xchg
xchg
inc
test
pop
ror
cmp
rcrb
mov
repz
cmc
sub
popa
std
inc
or
mov
sbb
mov
inc
das
nop
stos
scas
cmpb
xchg
and
clc
ds
pmovmskb
dec
pop
dec
out
dec
push
jmp
cwtl
mov
out
jo
and
movb
cmpsb
test
jge
jg
mov
jg
adc
inc
int3
aam
xchg
dec
adc
sbb
mov
xor
daa
stos
fimull
xor
out
push
jg
push
adc
mov
insb
inc
into
outsl
aam
insb
mov
scas
outsb
sub
jmp
xchg
and
es
stc
das
cmpsb
roll
decl
ret
dec
mov
jmp
scas
test
push
int3
aad
cld
test
ret
lods
ljmp
in
cmpsb
test
sub
xor
fdivl
cmp
rclb
dec
mov
inc
lds
imulb
test
dec
mov
movsb
lock
xchg
lods
repz
pop
enter
adc
je
mov
loopne
fisttps
fwait
in
in
adc
adc
pop
and
lock
xor
mov
inc
out
jb
scas
jo
out
lock
outsl
sub
add
repz
xchg
call
gs
xor
push
sti
push
outsl
lods
out
mov
jmp
cmp
xchg
xor
insl
mov
movups
add
cwtl
xor
adc
lods
int
aaa
lahf
push
test
das
sub
adc
fs
ljmp
mov
pop
loop
jnp
mov
add
or
loop
enter
nop
ss
push
aaa
mov
xchg
and
int3
push
sub
divl
dec
mov
cld
icebp
dec
and
inc
dec
lods
mov
cltd
int3
test
dec
aam
pop
out
fisubs
das
sub
loope
insb
sub
outsl
aaa
mov
pop
loopne
dec
prefetch
push
cmpsl
out
js
cmp
popa
lret
adc
outsb
push
arpl
out
jo
sbb
sub
js
push
xchg
mov
cwtl
sahf
mov
movsl
dec
fwait
subl
cmp
and
mov
adc
push
push
popa
iret
add
pop
mov
sar
push
mov
cli
fadds
push
jl
dec
fwait
inc
fistpll
push
call
or
push
hlt
mov
pop
fdivrl
mov
inc
js
popa
adc
or
and
sub
repnz
in
lods
outsl
add
insb
pop
stos
add
add
mov
fisttpll
dec
pop
jl
mov
mov
iret
das
add
jg
cmpsb
loopne
iret
insl
adc
push
jnp
lock
jecxz
or
xchg
cld
das
push
adc
mov
sub
xchg
out
out
popa
mov
adc
not
cwtl
je
push
mov
push
push
in
scas
popf
push
push
dec
mov
sub
push
dec
subl
cmpsb
imul
stc
adc
clc
in
stos
sub
das
call
dec
cmova
scas
adcl
push
cwtl
inc
pop
push
les
lock
pusha
pop
cwtl
jle
out
and
ss
pop
mov
dec
out
dec
jo
fs
out
dec
lods
cs
cmpsb
push
dec
sub
xchg
inc
out
iret
jae
leave
push
int
dec
imul
inc
sub
ret
or
inc
dec
popf
das
and
out
call
aas
flds
int3
in
mov
mov
dec
dec
mov
and
lcall
or
andb
cltd
jp
mov
jbe
push
xchg
clc
nop
sub
jne
push
dec
fwait
and
lea
stos
sbb
jl
shll
xlat
mov
js
pusha
loope
sub
loope
imull
mov
pusha
sub
pop
test
add
adc
dec
cs
iret
fs
outsb
insb
clc
pop
jmp
nop
inc
sbb
mov
or
cmc
pop
stos
fisubs
inc
int
mov
scas
enter
dec
mov
lret
mov
pusha
push
aaa
xor
or
or
dec
lods
or
shlb
add
mov
sarl
stos
push
out
int3
jbe
repz
mov
ret
call
adc
pushf
loopne
mulb
or
pusha
mov
dec
jb
adc
mov
je
sub
scas
call
lock
repz
test
das
loop
and
aas
or
js
out
xchg
jmp
fsubp
xchg
fstpl
cmc
mov
inc
movsl
ljmp
xor
cmc
add
xor
add
hlt
fnstcw
sub
pop
insb
pop
out
cmp
push
push
dec
subb
adc
ret
dec
xchg
push
adc
pusha
inc
in
inc
int
inc
dec
mov
mov
psubsb
addr16
and
sarl
loope
add
data16
insb
loopne
and
push
pop
cmp
iret
sub
arpl
jns
ljmp
aaa
push
jae
test
pop
sbb
mov
clc
lods
lret
aaa
insb
ds
xchg
jbe
test
shrb
das
loopne
int
mov
fisubrs
cmp
inc
cs
int
pop
fisubs
adc
in
xor
inc
insb
sub
lods
popa
fsts
les
mull
jg
push
les
fimull
inc
xor
aam
mov
mov
outsl
sub
movsb
popa
or
rcl
sbb
mov
negl
cmpsb
add
jmp
js
xor
jl
daa
lods
call
xor
dec
into
ret
mov
in
jns
pop
jge
xor
movb
xchg
ss
adc
sub
adc
xchg
je
cld
xchg
cmp
leave
xor
mov
fnstcw
mov
adc
adc
inc
frstor
adc
ret
clc
popf
mov
loop
sub
and
in
sub
dec
sti
mov
aas
cmp
sub
ret
xor
sub
pop
jle
push
mov
add
push
or
movsl
jg
shll
pop
divb
dec
xchg
in
mov
cmp
mov
icebp
mov
lea
sub
push
xchg
cmpsb
pop
dec
jb
dec
dec
sub
rolb
dec
lret
lods
mov
jmp
test
pop
add
push
push
divb
mov
pop
xor
test
std
inc
mov
mov
outsl
ret
test
das
popa
pop
in
iret
mov
inc
scas
mov
sbb
aad
dec
shrl
cltd
icebp
adc
xchg
mov
sarb
sbb
push
jae
xchg
dec
int3
shlb
jmp
je
dec
xchg
ljmp
jo
je
ret
sahf
sub
loope
imul
into
add
mov
xchg
dec
in
es
dec
outsb
jg
aad
or
or
or
jno
add
in
int3
loope
test
cmpsb
jp
xlat
out
mov
xor
outsl
int3
inc
outsb
pushf
in
sub
movsb
xchg
pusha
xchg
jo
call
insb
push
xchg
lcall
sub
jo
loop
jge
sub
or
rolb
adc
aad
das
sbb
es
inc
add
adcl
xchg
pop
mov
xor
xlat
sbb
mov
dec
cmp
movsb
mov
cmp
rolb
inc
add
cmp
fwait
sbb
les
or
shrl
cmp
fsubr
pop
push
pop
ret
jo
adc
add
cmpsb
adc
jp
push
pop
arpl
icebp
mov
dec
les
mov
sub
fistl
inc
test
pop
loop
cmp
arpl
mov
dec
push
dec
aad
leave
stos
xor
arpl
ret
sbb
or
scas
xlat
cmp
ss
loopne
jp
fs
in
addr16
mov
mov
jg
js
mov
adc
sub
mov
jo
pop
inc
ret
mov
lcall
addr16
addl
movsl
std
je
xor
lret
inc
xor
aas
xor
testl
push
or
outsb
enter
test
dec
stc
and
pushf
add
sbb
rorb
jmp
or
fs
sbb
jge
daa
mov
sti
xchg
nop
cwtl
bound
aaa
dec
add
sub
pushl
cli
les
outsl
cmp
push
shlb
fsubp
add
roll
cmp
imul
loopne
dec
push
test
rorb
bound
ret
and
rolb
movb
jle
pusha
add
clc
sbb
and
or
adcb
and
lods
outsl
fbld
mov
and
ds
push
sub
xor
int3
xchg
fmulp
lds
out
jmp
loopne
cs
lret
sub
sub
sub
leave
xchg
mov
cmp
xlat
sub
std
adcl
cmpsb
or
gs
sub
and
sub
push
pushf
fmuls
cmpl
sub
es
add
pop
scas
call
lock
mov
ja
or
sub
mov
mov
dec
jmp
cmp
and
lret
insb
cmc
pop
lea
dec
inc
and
out
movsl
jle
arpl
jmp
aam
xchg
das
pop
sbb
mov
cli
int3
cs
mov
push
push
mov
mov
or
out
insb
mov
out
and
int3
fmulp
imul
shl
jne
jmp
push
sbb
int3
dec
in
hlt
dec
dec
pop
push
outsb
xchg
dec
loopne
cmp
or
imul
mov
js
push
das
mov
rolb
pop
cs
clc
inc
cmp
adc
cmpsb
cmpsl
test
push
sub
aas
xchg
inc
fisubrl
xor
ficomps
or
in
add
jl
shll
pusha
sbb
call
loop
jmp
js
or
ret
inc
aam
loop
call
call
jmp
das
jg
push
add
mov
in
push
and
pop
test
sub
pop
out
push
mov
das
je
cli
sbb
jle
sub
popa
lds
iret
mov
lods
add
cmpl
lea
push
je
insb
ret
insl
cmpsl
mov
lods
cmc
mov
and
lods
aad
jae
and
adc
iret
jnp
arpl
int3
push
aad
pop
pop
mov
notb
xor
pop
inc
repnz
adc
and
mov
lret
add
inc
icebp
scas
das
pop
xchg
cltd
nop
inc
popf
jmp
rclb
call
mov
fmuls
in
out
cli
or
imul
jmp
dec
daa
insb
inc
xlat
adc
jmp
pop
rcl
popl
mov
or
cmp
jnp
sub
pop
pop
xchg
bound
int3
outsb
ljmp
sbb
es
mov
aad
imul
pavgb
mov
xchg
out
inc
test
and
mov
sub
adc
out
inc
xchg
xchg
jne
dec
in
push
outsb
jg
pop
cs
adc
ret
popa
scas
outsl
jo
mov
addb
jb
pusha
pop
jo
sub
cwtl
push
push
jno
loopne
test
sbb
aaa
scas
dec
or
in
jo
out
push
sbb
pop
out
outsl
outsb
pop
jne
mov
push
insb
fprem1
daa
and
push
push
jnp
insl
push
dec
xor
imul
mov
mov
rorl
jo
jmp
insb
std
fisubrl
es
dec
into
lds
mov
insb
std
lea
push
push
sbb
and
sti
loope
cmpsb
mov
in
sahf
cmc
mov
add
shll
add
xor
lret
loope
rorb
cmp
mov
out
cmp
rclb
push
pop
adcb
pushf
jo
sbb
xchg
daa
dec
es
in
pushf
jnp
sbb
fs
ds
jp
mov
movsl
cmpsb
gs
pushf
mov
adc
fsubr
shl
push
fldl
out
test
gs
jp
pop
je
in
icebp
je
pop
test
stc
je
repz
or
push
pop
fmuls
inc
jo
stc
fiadds
cs
addr16
enter
dec
test
push
pop
cld
mov
ret
ljmp
movsb
test
call
ret
xor
xor
out
xor
fwait
mov
mov
int3
aaa
fildl
lock
fs
icebp
xchg
dec
popf
call
add
rcr
push
pop
fwait
inc
fs
dec
cmp
jne
ficompl
mov
pop
lcall
jle
inc
clc
xor
fucomip
adc
inc
mov
xchg
adc
out
pop
mov
test
ret
xor
mov
fiadds
lock
jne
cld
cltd
stc
nop
jnp
pop
xor
int3
sbb
fists
in
xor
adc
test
out
je
outsl
lock
outsl
jae
outsb
imul
insl
adc
fs
fsubl
mov
clc
cli
push
lock
add
mov
mov
shrl
pop
or
inc
pop
data16
xor
addr16
aas
cwtl
mov
repz
and
shr
and
pusha
xchg
mov
or
sub
shll
out
cli
mov
out
ljmp
xor
cmpsb
xor
data16
aaa
je
push
xchg
or
cwtl
out
push
test
add
imul
shrb
cltd
push
sub
and
mov
cmp
aad
mov
lock
add
sahf
inc
and
ljmp
jecxz
lods
jo
and
aad
mov
testl
add
shl
inc
out
shrl
pop
test
add
pushf
rcrl
inc
fs
out
movsb
cmpsl
or
out
out
jg
mov
push
imul
loop
int3
jne
or
xchg
xor
xor
cmp
js
sbb
mov
enter
arpl
push
test
and
fstpl
mov
int3
push
enter
ds
stos
int
jecxz
js
cmp
js
mov
pop
inc
cmp
xor
push
xor
or
repz
loop
mov
loope
mov
xchg
mov
rcll
add
jne
pop
push
mov
pusha
cld
fwait
pusha
enter
mov
inc
out
dec
jmp
xchg
das
inc
cmp
in
fwait
jo
pop
fldenv
sub
insb
outsl
xchg
insl
rorl
push
or
mov
cltd
mov
xchg
shl
sbb
adc
cs
sub
insb
mov
push
pusha
and
out
sahf
fs
cs
and
cmpsl
xor
jns
sbb
in
mov
or
aas
cmp
pop
mov
cmpsl
shlb
pushf
cmp
ret
shl
mov
adc
pop
sbb
pop
and
fwait
adc
bound
fxch
xchg
addr16
sbb
xchg
ljmp
cwtl
cmp
adc
dec
cmp
in
and
in
push
mov
test
xor
ud1
xchg
mov
dec
notb
aad
jb
adc
fs
enter
sub
testb
in
repz
lret
out
shlb
ljmp
movsb
cmp
fldenv
fldt
lea
pop
push
addb
dec
lods
lcall
and
into
jo
jecxz
mov
cld
push
add
push
sub
loopne
and
je
shr
mov
cmp
push
mov
jo
xchg
cmp
ret
enter
sbb
stos
lea
adc
movsl
imul
in
mov
lods
inc
lcall
fmull
sti
cltd
cmp
mov
jbe
add
das
into
shlb
or
jle
iret
kxorw
mov
in
aas
push
sbb
dec
insl
lret
cmp
inc
push
ds
imul
jnp
outsb
jg
in
movsl
push
in
into
sbb
or
cs
scas
add
push
jl
clc
mov
push
lds
jecxz
insl
fcmovb
jns
sub
mov
ret
and
sub
out
inc
or
dec
stos
jl
insl
in
jnp
enter
xchg
cltd
or
xchg
mov
dec
dec
sub
cmp
inc
pusha
enter
hlt
cli
push
shrl
push
pop
jge
mov
mov
lods
pusha
cmp
mov
inc
push
clts
in
dec
data16
scas
imul
mov
sub
cmpsb
lahf
sub
or
je
mov
dec
out
int
sti
into
ljmp
shlb
inc
cmpsb
xchg
pop
and
pop
inc
iret
loope
pusha
inc
rorb
gs
call
fs
add
movsl
inc
push
loope
das
in
popa
out
and
xcrypt-ecb
cmpsl
or
cmp
jae
addr16
push
popa
es
js
jp
das
add
ss
ficoms
or
mov
mov
das
insl
outsl
out
fiadds
gs
lock
stos
aas
pop
mov
mov
push
pop
mov
adc
pop
mov
dec
scas
or
mov
call
mov
outsb
insl
lea
je
pop
dec
in
jp
jle
popf
aas
out
movsb
dec
or
iret
test
loope
mov
or
cmp
push
mov
mov
adc
lock
rcr
repz
mov
push
sti
popa
fdivl
dec
jb
dec
mov
repz
adc
call
mov
sub
xor
dec
dec
sbb
movsl
inc
enter
fisubl
jmp
test
in
xor
add
into
mov
ffreep
hlt
xor
pop
sub
insb
mov
dec
inc
mov
ljmp
stos
jae
or
scas
repz
out
push
xor
cltd
push
mov
mov
ret
lock
dec
xor
das
dec
jmp
es
out
cmp
xchg
je
dec
icebp
adc
scas
xor
shlb
pop
unpcklps
mov
pop
scas
or
cmp
jnp
xchg
mov
pop
cmpsl
xchg
gs
ficoms
popa
or
mov
insb
adc
dec
out
movsb
mov
movswl
in
adc
sbb
push
sarl
ja
ja
sub
jae
outsb
xor
out
and
out
sarl
imul
out
add
pop
jo
shl
pushf
or
sbb
add
addr16
les
xchg
gs
enter
loopne
cmpsb
ret
cmp
dec
lahf
iret
jb
lahf
dec
mov
cwtl
pop
call
jbe
inc
into
mov
lea
fwait
push
jmp
inc
sbb
pusha
lods
push
jns
add
imul
ret
movsl
push
out
or
movsb
adc
shrl
inc
jo
mov
outsb
and
cs
xchg
add
ds
sbb
sbb
movsl
dec
lock
aaa
movsb
jge
pop
hlt
imul
mov
fdivs
inc
jne
out
mov
fnsave
jl
inc
cmp
shrb
popf
fwait
je
mov
addb
call
push
xchg
sbb
fwait
ljmp
push
shl
cwtl
sub
mov
mov
xchg
jbe
jg
mov
addr16
jp
inc
xor
daa
popa
lss
arpl
notl
in
sub
sub
push
je
rorb
out
les
pop
jns
pop
adc
imul
mov
lock
nop
cs
scas
imul
jae
lahf
pop
iret
insl
out
and
push
out
ret
insl
cmpsl
mov
adc
cli
pushf
mov
out
iret
and
push
aaa
pop
in
clc
lock
mov
xchg
adc
and
icebp
rolb
xor
lahf
nop
adc
dec
sbb
and
out
les
aam
sub
add
jg
arpl
les
repnz
daa
inc
jge
fsubrl
jno
ds
subl
fs
mov
mov
dec
hlt
imul
out
mov
and
imul
je
and
sbb
lock
call
sub
call
push
sbb
fsubr
out
push
sbb
cltd
imul
cmp
sbb
pop
outsl
adc
aas
xor
inc
outsb
lods
pusha
imul
adc
pop
adc
scas
cmc
scas
mov
xchg
pop
int3
stc
xchg
push
push
cmp
sub
nop
popa
dec
daa
lods
mov
mov
int3
addr16
xor
movsl
addr16
cmpsl
and
mov
and
xor
push
jne
loop
popa
pop
mov
insb
in
and
or
sub
orb
mov
clc
dec
and
mov
out
fwait
icebp
popa
repnz
ret
mov
mov
mov
rclb
add
inc
pop
pop
sub
push
rcrb
pop
lods
addr16
je
shlb
testl
push
mov
fdivr
xor
cli
jl
fdivrl
sub
popf
inc
or
fwait
dec
mov
pop
dec
outsl
jno
jmp
mov
mov
jle
das
je
test
and
and
jae
or
pop
cs
imul
sub
inc
xor
enter
fcoml
pop
pusha
mov
sub
das
in
pushl
clc
fisttps
push
mov
nop
xchg
int3
movsl
popf
dec
shrb
sub
icebp
movsb
fwait
test
fidivrs
inc
or
invd
xchg
imul
pop
out
xor
clc
daa
pusha
pop
rcll
inc
nop
mov
test
mov
mov
pop
stc
pop
aas
repnz
inc
cmc
fldl
out
xchg
fdivr
mov
les
jp
out
add
and
adc
mov
xchg
and
push
adc
push
clc
stos
scas
nop
cwtl
or
mov
in
mov
scas
ret
addr16
jb
push
jle
leave
popa
adc
mov
into
rcrl
mov
cmpsb
mov
dec
scas
push
mov
outsl
aaa
jne
out
xor
outsl
add
testb
pusha
jo
push
xchg
or
les
xchg
xor
movsl
push
insl
sbb
mov
adc
in
or
adc
push
sqrtps
std
loop
in
cltd
pusha
add
fwait
push
xor
iret
jg
sbb
outsl
push
dec
adc
mov
cmp
and
rorl
ljmp
dec
pop
or
or
outsl
push
adc
or
jnp
lock
psubq
xorb
in
aas
rorl
jae
sub
daa
into
loope
stos
sbb
test
push
add
pop
cmpsb
push
mov
pop
jns
repnz
sahf
js
push
enter
jecxz
pop
fldl
cmp
adc
mov
pop
push
lds
push
push
sarl
xor
insb
in
or
cmpsb
xchg
mov
push
xchg
push
jo
inc
add
aas
pop
out
aas
scas
repnz
jmp
dec
xor
push
call
xor
ljmp
or
sub
je
scas
enter
outsl
neg
inc
cli
pop
jb
adc
mov
adc
js
mov
lock
je
push
inc
fwait
and
imul
dec
test
mov
test
idivl
lock
sub
or
enter
dec
adc
add
out
xchg
inc
inc
xchg
inc
cmp
mov
mov
lret
arpl
jg
dec
push
cmp
or
cld
test
cmc
push
push
xchg
dec
mov
dec
adc
jo
jmp
rorl
jl
lock
xchg
cmp
cmp
xor
mov
jp
cmp
pop
test
adc
jmp
jb
loopne
sub
jns
iret
inc
jb
lock
adc
pop
jmp
call
hlt
adc
pop
iret
xchg
out
mov
icebp
push
jae
inc
adcb
xchg
and
pop
dec
jmp
test
fildll
out
rcrb
inc
in
das
outsl
xchg
or
jmp
xor
out
sub
mov
mov
in
das
mov
insl
mov
adc
adc
or
int
or
inc
movsl
cmp
pop
and
or
lret
inc
or
fdivr
xor
pop
popa
cmp
push
popf
cmp
adc
ljmp
movsb
lods
mov
sub
or
out
dec
inc
pop
into
add
imul
sub
sub
xchg
pop
out
inc
outsb
int
je
in
mov
sbb
int
dec
or
stc
sub
mov
cmp
outsl
movsl
insl
push
pusha
out
in
lods
mov
outsb
inc
jl
divb
mov
lods
and
jb
or
push
and
iret
dec
gs
stos
push
sahf
lock
push
jno
mov
rcr
pop
xor
jne
adc
aaa
hlt
call
xor
push
or
push
push
ss
sub
mov
fisttpl
push
jmp
outsl
jb
or
outsb
cmp
stos
sahf
gs
in
imul
and
add
adc
or
and
es
cmc
sti
jge
sbb
das
or
adc
je
or
call
add
adc
push
loop
dec
mov
lods
cmc
test
xchg
or
lret
cmc
mov
push
movl
and
test
subl
cmp
outsl
push
fs
jmp
cwtl
cmpsl
or
ljmp
mov
and
sbb
mov
lock
data16
fidivs
cmpsl
pop
xor
nop
sarb
insl
fsubr
in
lock
dec
sub
mov
leave
or
lahf
aas
lcall
adcl
test
xor
mov
outsb
loope
fldl
insl
scas
fstpl
cs
repnz
mov
sets
fsubrp
arpl
std
pop
xor
jp
insl
pop
imul
clc
lret
in
aam
aaa
lods
xchg
mov
sahf
ljmp
mov
lret
test
jmp
mov
jnp
scas
sahf
dec
aam
mov
sub
xor
inc
fwait
dec
test
jg
ljmp
clc
ret
sbb
stc
clc
inc
lock
ret
aad
xchg
addr16
sbb
and
sahf
mov
dec
test
repnz
pushf
xchg
int3
mov
repnz
icebp
imul
outsl
push
ret
cmp
das
out
xor
pushw
adc
pop
push
in
loope
sub
arpl
push
inc
inc
mov
mov
adc
jbe
pop
sub
mov
dec
decb
call
popf
mov
scas
into
pop
imul
or
into
add
sahf
xchg
pop
xor
mov
pop
sbb
fisubrs
adcl
xchg
iret
test
cmpsb
cmp
mov
jo
push
addr16
pop
or
and
mov
not
fisttpl
push
insb
mov
push
arpl
adc
cmp
push
xchg
jbe
ret
cmpsb
out
movsl
dec
sbb
mov
jp
addr16
outsb
xorb
outsb
push
inc
xor
loope
fisttps
jo
jo
jbe
adc
jmp
adc
test
cmp
stos
sub
in
mov
push
mov
sti
cld
mov
insb
cld
stos
cmpsb
jae
mov
stos
pushl
cmpsb
out
cmp
mov
or
repnz
inc
mov
sub
pusha
add
push
stos
and
imul
or
xlat
sub
or
or
inc
push
orb
mov
out
sub
in
imul
aaa
popf
rol
in
dec
daa
and
xchg
add
lret
mov
movsb
repz
fsubs
popa
sub
xchg
int
jo
adc
sub
inc
or
dec
js
ja
xor
lock
out
movsl
jecxz
js
add
call
mov
push
aam
and
inc
jo
sub
cmpsl
mov
std
pusha
jmp
les
es
mov
mov
xchg
lods
mov
push
mov
dec
or
test
adc
pop
jb
fmul
adc
sub
dec
adc
dec
and
popa
xchg
adc
inc
addb
or
sbb
enter
jge
mov
adc
scas
fwait
mov
sub
xor
adcl
int3
inc
xchg
mov
push
sbb
aaa
stc
mov
movsb
loop
leave
adc
xor
mov
enter
dec
adc
int
imul
hlt
test
mov
mov
js
iret
fldl
mov
jnp
popa
insl
test
cmpb
push
or
sub
arpl
jl
push
inc
movsl
xor
insb
mov
pop
or
nop
fcoml
icebp
push
dec
loop
stos
les
xor
cmpsl
cmp
in
xchg
xor
cwtl
xor
push
xor
insl
pop
push
ret
call
and
test
movsl
popf
outsl
outsb
loop
cltd
gs
adc
xor
jl
addr16
jp
mov
es
pusha
inc
leave
fdivrp
jle
stos
outsl
ja
cs
dec
cmpsb
add
rep
lea
mov
xchg
jne
lcall
es
arpl
stos
jmp
sub
cmp
pop
in
xchg
add
jo
cmp
aam
adc
dec
xchg
test
outsl
add
fldlg2
xor
iret
xor
add
sbb
testb
sub
or
xor
mov
add
stos
pop
jmp
popf
jecxz
cltd
dec
mov
adc
into
pop
cmp
mov
push
xchg
in
jnp
sub
adc
out
pop
sub
test
enter
lds
sbb
repz
fwait
dec
out
vpmacssdql
or
jp
inc
adc
cmp
and
xchg
and
mov
mov
mov
or
dec
jmp
nop
jo
push
stos
xchg
dec
out
pop
inc
pop
call
les
dec
or
dec
cli
pusha
pcmpgtd
imul
pop
mov
xor
ljmp
or
sub
or
push
ret
pop
push
loop
pop
push
sbb
rolb
push
jg
outsl
test
int3
or
dec
push
aas
mov
sbb
mov
mov
lods
jl
fmul
cmpsl
sbb
mov
mov
cmpsb
stos
in
sarl
mov
push
je
pushf
sub
dec
jnp
mov
hlt
sbb
xor
imul
bound
push
inc
xchg
xchg
loop
es
cs
mov
or
stos
std
mov
ja
mov
repnz
cltd
jp
push
cmpsl
fists
mov
and
out
mov
pop
sub
fisubs
rorl
xor
cld
inc
xor
xor
mov
dec
sets
cmp
or
inc
and
mov
jp
pop
jb
ret
push
push
cmc
loopne
outsl
mov
add
mov
loop
ds
inc
movl
or
xor
int3
cmpsl
outsl
xchg
cmp
or
mov
cs
sbb
out
inc
scas
fldcw
das
and
and
out
pop
sub
ja
sti
and
mov
loopne
int3
pushf
cmpsl
push
popa
call
int3
cwtl
mov
sub
mov
jo
cltd
inc
les
xchg
and
mov
inc
xchg
add
into
push
call
loopne
cmpsl
insl
jne
mov
lock
icebp
push
fcmovnb
adc
dec
test
repz
mov
icebp
pop
or
and
shrb
popa
cmp
je
xchg
xor
mov
outsl
out
push
add
mov
rcr
inc
insb
or
cmp
icebp
and
iret
out
adc
or
jl
xor
je
js
ret
imul
mov
cmc
add
cmp
inc
jle
cmp
sbb
sbb
mov
cmpsl
mov
fsubs
lret
sbb
pop
jo
fadd
mov
adc
sbb
sti
scas
lock
sbb
enter
mov
inc
jg
push
push
rclb
aam
cli
adc
cmc
imulb
lds
shrb
clc
sub
int3
sub
outsl
cmpsl
sub
xchg
inc
loopne
xor
and
fs
mov
loop
test
inc
fimull
dec
jg
loope
in
xchg
mov
mov
out
cs
int3
out
sub
enter
dec
mov
jl
jno
jae
repnz
xor
cmp
andl
in
and
hlt
addr16
pop
out
jbe
cli
or
adc
pop
mov
ljmp
cs
inc
rcrb
das
sarl
frstor
idivl
sbb
push
jbe
arpl
dec
xor
adc
filds
je
add
sbb
iret
enter
sbb
in
popa
fwait
add
sbb
pop
adc
dec
movb
hlt
add
jg
std
mov
outsl
mov
pop
cmpsb
int3
xor
dec
out
sbb
sub
push
xchg
sub
out
cltd
cmc
jmp
cmpsl
adc
fwait
cmp
gs
fcomps
jbe
mov
in
cli
stc
mov
stc
dec
lock
imul
sub
cmp
leave
out
ret
push
jp
push
cmp
ss
pop
xor
and
sub
jb
insb
std
or
push
xchg
pop
insl
jae
out
scas
inc
mov
sub
sub
lcall
dec
test
jl
in
pop
subb
int
or
pop
cmp
cmpsl
sub
pop
imul
in
daa
out
or
shlb
subb
sub
imul
jge
loop
out
jo
dec
into
inc
sub
insb
dec
or
sub
out
inc
jl
je
es
jle
jle
loop
pusha
jo
push
dec
push
push
adc
pushf
dec
xor
mov
push
and
adc
add
jmp
in
std
out
dec
mov
xor
dec
popf
inc
imul
imul
outsb
inc
push
mov
cmp
in
or
stc
daa
sbb
loop
into
push
fdivrs
minps
push
sbb
or
push
add
arpl
push
push
popf
out
enter
mov
mov
pop
lret
outsl
out
je
fidivrs
sub
ja
cltd
mov
adc
bound
push
push
movsl
cltd
inc
outsl
or
inc
adc
push
notb
sarl
cmpsb
test
movsl
adc
xor
xorb
fwait
js
pop
roll
xor
fdivrl
mov
ss
loope
addr16
mov
fptan
mov
insb
cltd
ljmp
cs
popa
xor
mov
add
sub
ficomps
ss
rolb
sub
push
xchg
sbb
outsl
adc
outsl
pop
mov
inc
push
push
aas
sti
xchg
rclb
mov
call
push
adc
adc
movsb
mov
fstps
sbb
xchg
jne
sub
xchg
mov
hlt
call
arpl
rcrl
or
xchg
js
xchg
mov
or
jae
cmpsb
out
mov
in
decb
filds
mov
outsl
stos
xor
xor
jns
push
loope
dec
loop
pop
ret
dec
mov
outsl
pop
mov
pop
jecxz
mov
jmp
jo
dec
in
fsubrl
add
insb
cmp
int
pop
add
test
es
xchg
aad
int
or
sbb
xchg
jae
stos
mov
cli
fstl
dec
push
pusha
imul
add
or
dec
sbb
sbb
das
sub
pop
rcr
xor
ss
pop
push
data16
das
repz
lret
xor
je
sahf
cmp
int3
and
sbb
insl
lods
jecxz
lcall
xchg
movsl
jno
daa
or
xchg
loopne
inc
ss
inc
sti
jno
data16
dec
jp
test
lock
dec
sbb
das
js
pop
sti
add
call
jbe
mov
push
add
xchg
mov
insb
pop
popl
xchg
cs
test
in
push
inc
push
adc
adc
outsb
sub
cmp
push
addr16
cmp
sub
jo
addr16
pusha
jbe
cwtl
sub
sbb
dec
pop
jnp
cmc
std
adc
adc
popf
xchg
out
ret
pop
push
or
mov
rorb
fiadds
insb
sbb
jmp
mov
loope
out
outsb
jmp
lock
mov
cmp
pop
scas
imulb
mov
adc
jmp
push
pop
push
out
dec
neg
cmp
in
insb
mov
popf
movsb
loope
mov
mov
out
addb
int3
and
addr16
out
inc
inc
mov
dec
pop
hlt
fildl
sub
inc
icebp
adc
andb
ljmp
or
xor
hlt
mov
dec
popa
push
out
cwtl
xor
jne
cmc
cli
movsl
jecxz
popa
lahf
int3
push
push
adc
adc
out
add
or
rorb
lea
adc
sub
jae
cmp
pop
dec
mov
jo
and
clc
xacquire
jo
in
loopne
or
in
inc
lods
xor
ja
jo
mov
ja
mov
in
mov
xchg
mov
inc
lret
or
ds
xor
ds
cmp
lds
out
fsts
jnp
ss
adc
push
int
scas
cltd
xor
fstl
cltd
out
xchg
rcll
shr
movl
dec
cld
imul
loope
test
xor
out
and
sub
cmp
mov
imul
inc
dec
mov
test
or
fs
loop
mov
mov
add
sarb
std
push
jo
pop
mov
in
arpl
in
aas
push
mov
sub
xchg
mov
cmp
outsb
popf
fucomip
and
pop
mov
fildll
call
sub
out
aad
repz
fucom
negb
add
loope
push
jg
lret
insb
jmp
lret
jp
push
loopne
and
loopne
and
enter
jb
scas
mov
adc
repnz
mov
and
cmp
repnz
stc
test
repnz
xchg
arpl
aad
add
ret
xor
outsb
aaa
lea
in
jge
adc
insb
push
adc
push
mov
adc
pop
xor
das
ret
imul
lahf
or
out
sbb
push
mov
mov
ret
or
insl
jno
or
loop
daa
jle
ss
pop
xchg
shrl
or
je
ja
pop
in
int
lock
insb
jle
or
not
inc
clc
jge
xor
jno
fisubs
paddw
subl
mov
pop
ljmp
movsl
xchg
sbb
cmpsl
sbb
imul
lret
stos
imul
dec
lods
mov
jae
push
popf
inc
jp
xor
movsb
loop
adc
cli
in
arpl
xor
inc
sar
or
adc
cmpsb
jg
add
mov
in
sub
int3
fldt
sbb
or
sahf
imul
pop
jb
mov
pop
fs
and
je
add
ret
sub
fimuls
je
rclb
pop
adc
filds
jmp
mov
jb
dec
pmuludq
push
add
sub
into
rcrb
push
repz
adc
add
jae
jnp
sbb
dec
cmp
je
data16
hlt
mov
xor
mov
xorb
imul
icebp
mov
xchg
in
xchg
push
in
adc
jae
and
sub
push
mov
push
loop
in
stos
push
fisubs
scas
mov
pop
mov
jnp
adc
imul
cmp
xor
cwtl
imul
mov
nop
inc
ljmpw
dec
add
ret
leave
psubq
dec
pusha
mov
lret
ljmp
ret
out
or
in
sub
data16
das
or
scas
mov
push
push
popf
imul
lock
pop
mov
cmpsl
gs
dec
jg
es
jp
cli
imul
call
inc
out
sbb
xchg
push
les
xor
adcb
imul
mov
mov
ret
mov
lcall
mov
inc
push
pusha
shrl
xor
dec
and
in
add
adc
popl
cltd
xchg
xchg
push
pop
mov
dec
or
sti
movsb
out
jecxz
sahf
stos
scas
icebp
in
in
inc
iret
mov
add
adc
outsl
xchg
insb
mov
dec
jmp
aas
in
rcrb
xchg
jge
outsb
sbb
loope
aas
pop
repnz
sub
outsl
cwtl
rolb
dec
dec
out
outsl
mov
je
mov
or
mov
insl
push
jb
sub
dec
jbe
adc
dec
lods
mov
push
mov
dec
in
mov
inc
cli
lods
mov
insl
push
xor
nop
outsl
dec
scas
push
lock
push
scas
fldenv
sbb
jo
or
je
jns
pop
push
jl
xchg
movsb
cmpsb
xor
lcall
scas
mov
mov
insb
outsl
jnp
es
ret
fisubs
pop
cmp
push
dec
in
sub
adc
jbe
lret
mov
xchg
popf
mov
test
js
pop
fxch
test
int
sub
adc
push
sahf
shr
call
jle
arpl
mov
mov
shlb
xchg
aam
dec
aad
push
mov
das
or
test
push
or
xchg
outsb
push
ret
test
decb
dec
sub
mov
repnz
leave
je
jnp
adc
mov
or
add
sbb
push
mov
jae
mov
or
scas
popf
dec
out
sbb
lea
into
xor
dec
arpl
test
pop
cmpsb
popf
push
pop
int3
movsb
int
and
sahf
push
jg
pop
push
or
sbb
test
sub
test
inc
js
sarl
jns
rolb
lods
and
push
and
add
std
push
sbb
iret
and
call
sub
adc
aam
loop
xor
out
fcoms
sbb
ret
lret
lock
dec
popf
push
pop
int3
in
out
add
out
inc
fidivrl
cmp
mov
je
and
out
or
pusha
dec
loop
out
insl
ja
push
and
ds
xchg
push
loop
dec
addr16
dec
in
decl
daa
adc
adc
mov
insl
lods
inc
sub
xchg
imul
mov
jmp
data16
lea
mov
test
and
adc
jbe
push
sahf
mov
out
ljmp
mov
dec
mov
lods
sbb
xor
jge
xchg
pop
inc
into
sub
cmp
inc
addr16
mov
lds
aam
xorl
jnp
xchg
das
cmp
fwait
xchg
adc
ljmp
inc
in
push
or
addr16
or
stos
aaa
fwait
sbb
dec
testl
repnz
cmp
imulb
enter
jnp
xor
psubsw
xor
nop
lahf
lock
data16
push
out
jg
lret
inc
sbb
xchg
push
fs
sbb
cld
shl
call
outsl
adc
dec
je
adc
jno
inc
sub
push
je
push
outsb
sub
xor
ss
shrb
loope
jge
addr16
insl
repz
xor
mov
imul
and
cltd
inc
into
loopne
dec
rcl
push
inc
out
and
jns
pop
jg
push
xor
mov
call
pop
push
dec
repnz
cmp
shrl
pop
mov
pop
push
jo
mov
rolb
loope
sbb
cld
xlat
dec
int3
inc
or
xlat
or
sbb
adc
test
mov
mov
dec
adc
mov
pop
popf
pop
mov
push
mov
adc
add
clc
mov
add
adc
imul
pop
das
je
out
mov
int3
mov
addr16
std
stos
mov
clc
imul
sbb
push
mov
cwtl
scas
aam
push
out
addr16
jae
or
das
mov
into
push
fdivrl
nop
fcomps
mov
hlt
in
gs
pop
je,pn
sti
sub
jp
inc
in
cld
call
int
test
pop
das
push
push
mov
or
dec
repnz
out
jg
push
mov
insl
in
imul
fwait
pusha
repnz
insb
ja
sub
mov
rorb
scas
std
inc
inc
or
das
push
andb
repnz
cs
dec
adc
adc
imul
jp
jo
fptan
inc
cmpsl
xchg
jmp
clc
dec
pop
xor
xor
ror
add
imul
push
jle
pop
test
dec
mov
adc
sti
dec
pushl
stos
nop
mov
xchg
das
inc
loope
mov
push
in
fisubl
leave
mov
repz
js
int
scas
adc
mov
lods
jbe
test
rcl
mov
inc
push
and
and
stos
mov
shll
int3
shlb
int
lods
adc
jb
mov
mov
repnz
pop
das
stc
mov
out
adc
pop
shrl
cmp
or
fsub
out
sahf
mov
add
cmp
div
sub
test
loopne
sub
pop
aas
movsb
xor
pop
scas
pop
out
cmp
mov
xchg
nop
mov
xchg
sub
or
jle
popf
out
jnp
xchg
xor
aaa
xor
sbb
cwtl
pop
in
out
xchg
subb
loope
sub
popa
outsb
loop
inc
push
mov
sbb
fdivrl
dec
stc
mov
out
xor
rorb
mov
popa
jg
mov
das
mov
or
pop
mov
inc
adc
pop
lret
cmp
jge
sub
out
nop
je
test
jg
and
jl
fbld
push
out
xor
lea
mov
push
in
xor
filds
test
cli
imul
fildll
cld
outsb
js
pop
jmp
sbb
aad
js
lahf
pop
mov
inc
xor
in
push
push
mov
mov
jl
fisttpll
nop
mov
jne
jbe
lahf
fwait
jnp
dec
dec
dec
cmpsl
int
xchg
out
mov
pop
jne
pop
adcb
shl
divl
or
mov
sbb
nop
in
dec
rorl
lea
xchg
jnp
add
mov
adc
enter
xlat
push
push
pop
dec
vmwrite
inc
ljmp
or
dec
int
xor
lahf
dec
xlat
scas
inc
xor
lods
jo
popa
mov
into
add
sub
adc
pusha
das
enter
mov
fbstp
js
imul
dec
jnp
lret
mov
xor
jle
lods
jg
pusha
push
fadd
push
data16
xchg
xor
out
mov
icebp
mov
in
inc
dec
out
pop
mov
lds
test
in
fwait
pop
jecxz
xchg
and
sub
imul
outsl
mov
lock
jbe
mov
in
sub
iret
hlt
or
add
adc
je
outsl
in
dec
loope
lahf
negb
sbb
scas
adc
lea
dec
dec
cmc
cmp
test
mov
push
fmull
dec
out
loopne
pop
outsl
add
je
mov
jle
cmp
in
jp
cmp
dec
add
out
jecxz
inc
outsl
mov
call
iret
cmp
fucomp
sbb
loopne
xor
mov
lods
sub
int3
jbe
dec
int3
aam
xorl
outsl
mov
pop
or
divb
inc
sub
cmp
repnz
daa
fcmovnbe
or
ret
testl
test
add
pop
in
gs
adc
scas
fs
xchg
ljmp
or
mov
sti
scas
add
push
je
adc
sbb
inc
xor
xor
adc
add
lock
ljmp
cld
push
enter
lock
enter
mov
push
shr
and
lock
xor
nop
inc
inc
inc
outsb
inc
cld
mov
xchg
fsubrl
adc
add
mov
xchg
cmp
es
outsl
inc
test
aad
sar
dec
xor
sti
mov
cmp
or
cmpsb
xor
std
inc
nop
xchg
inc
jge
imul
loopne
jmp
or
loopne
sub
stc
decl
xor
pop
jle
scas
sarb
or
adcl
mov
push
ret
fnsave
shll
mov
loopne
das
ljmp
arpl
movsl
fmull
int3
jecxz
aaa
cmpsl
outsl
sbb
sub
rcrl
shlb
dec
sub
fucomip
loope
adc
mov
push
pop
lock
jne
add
movsl
xchg
out
testb
mov
imul
loope
repz
push
mov
add
pusha
insb
push
cmp
mov
jbe
mov
adc
js
popa
mov
mov
dec
push
test
imul
out
add
fsubrl
sbb
scas
scas
xchg
mov
inc
fists
or
call
adc
sub
test
sub
fistpll
or
das
scas
sub
int3
jmp
push
ljmp
inc
sti
push
jg
xchg
xchg
xchg
mov
repz
stos
push
mov
xor
inc
xchg
jp
dec
out
push
clc
add
loopne
in
enter
adc
inc
loop
repz
cltd
xchg
arpl
pop
aaa
iret
stc
mov
push
push
rorb
das
mov
addr16
insb
sub
fs
jo
push
mov
sbb
imul
dec
inc
sub
push
mov
xor
xchg
jle
xchg
loopne
xor
sub
call
jecxz
sub
inc
mov
jne
mov
fwait
jg
mov
rcr
pusha
rcrb
clc
or
adc
jb
int3
loopne
sub
aaa
in
or
aam
sti
xor
push
dec
jns
sub
xor
mov
ljmp
push
mov
nop
adcl
test
jb
ret
cmp
mov
push
and
xor
jg
je
pop
lock
ljmp
es
imul
mov
jo
subb
loopne
in
mov
je
aad
cltd
xor
rorl
push
mov
fnstenv
or
mov
scas
repnz
notb
push
sbb
out
push
movsl
sub
repz
pop
xlat
mov
adc
lods
and
xchg
jns
adc
ret
xor
rorl
cmpsb
dec
sub
movb
dec
inc
mov
jne
je
or
or
mov
rcr
lock
fwait
sarb
push
cltd
jle
dec
lcall
mov
mov
add
insl
int3
rcrb
lods
dec
andl
lahf
outsl
lods
adc
rclb
xor
push
pop
fisubrs
lock
push
inc
push
out
lahf
sbb
inc
cli
jnp
jl
subl
test
loop
loopne
lock
fcoms
mov
in
out
push
cs
or
pop
push
addr16
out
mov
movsb
xchg
mov
adc
loopne
dec
xor
jnp
lret
jg
loop
add
jne
nop
and
les
popf
lret
idivb
dec
fdivs
pusha
sbb
xor
dec
pop
insl
outsl
lea
lods
jbe
shlb
lock
testb
pop
dec
addr16
enter
jp
int3
outsl
push
jp
flds
loop
cmpsb
add
lret
or
aam
and
xchg
sub
sahf
data16
cs
inc
and
ss
cmp
xor
sub
push
mov
push
les
or
in
xchg
je
xchg
into
in
outsb
inc
imul
daa
fs
fiadds
sub
or
in
mov
scas
or
mov
mov
push
mov
jmp
cmp
data16
popf
dec
clc
test
sub
adc
sub
adc
imul
sbb
jb
imul
pop
bound
push
jle
inc
test
enter
cmp
mov
popa
leave
adc
test
addr16
ljmp
imul
lret
lds
mov
imul
sub
sub
pusha
int
out
mov
in
cmpsl
outsl
cmp
push
mov
inc
test
mov
sbb
pop
xor
cmpsb
je
mov
xor
cmpb
jbe
xchg
loop
shll
push
jg,pt
dec
rolb
jge
jo
cmpsb
repz
loopne
dec
mov
mov
ds
mov
les
or
xchg
stos
push
lahf
cmpsl
aaa
mov
ljmp
leave
out
lret
or
insb
dec
insl
out
movsl
mov
mov
push
sbb
shll
or
xchg
dec
jo
mov
mov
jge
icebp
fs
sub
push
jmp
jmp
das
cmp
jmp
mov
cmpl
lret
shll
xor
fldenv
fs
shlb
jae
push
adc
push
mov
sub
pop
and
xchg
sbb
imul
xchg
out
add
adc
test
cmp
je
push
cmp
notl
in
mull
popa
pop
lcall
scas
jmp
pop
xor
outsb
pop
push
imulb
adcb
sub
popa
dec
aas
push
xchg
add
push
out
adc
sub
ljmp
mov
mov
xchg
aas
dec
adc
xchg
and
in
and
dec
push
adc
lock
fxrstor
in
adc
aad
push
iret
call
pop
aad
rcl
sub
test
jno
into
push
imul
sub
icebp
cli
ds
mov
je
dec
jge
je
pop
mov
call
dec
push
push
sbb
loope
popf
push
inc
xchg
pop
into
fstpl
xor
mov
aad
outsb
outsl
mov
add
dec
into
mov
push
loope
lcall
jecxz
js
ds
jo
and
movsb
or
out
cmp
outsb
pop
frstor
pop
int3
and
add
shlb
lods
pop
or
incl
ljmp
xor
das
mov
aas
in
iret
cmp
push
sub
sbb
cmc
sub
sbb
pop
loopne
ret
sub
push
jecxz
pop
fisttpll
movsl
ds
jle
das
and
push
dec
cmp
outsb
lcall
dec
and
fnstsw
xor
sarl
in
sti
dec
xor
push
js
pop
xchg
ljmp
push
test
push
rcll
sbb
lods
add
aas
jge
call
cmp
push
lret
adc
jno
popa
repnz
aad
imul
pop
fldt
in
xor
sub
mov
xchg
push
or
push
jmp
imul
arpl
sub
cli
dec
mov
mov
mov
or
pop
add
movsb
inc
push
outsl
pop
ret
cs
or
out
push
movsl
leave
js
negb
imul
mov
sub
in
and
ret
xchg
jo
dec
push
call
lret
xor
add
jmp
ret
xor
mov
dec
dec
fwait
sub
inc
dec
jp
pop
dec
pusha
xchg
sbb
or
cmpsb
fisttps
cmp
stos
jp
or
test
out
rcrl
ds
push
sbb
addl
js
push
sub
sbb
das
add
dec
sub
dec
and
int
int3
popaw
cmp
movsb
mov
mov
xchg
inc
movl
in
int3
and
ss
and
sbb
je
repnz
nop
rcl
addl
daa
jnp
out
je
pushf
mov
adc
int
sub
lods
jb
pop
js
mov
xor
lock
and
call
cmp
addr16
mov
and
jp
sbb
mov
dec
lea
outsb
mov
out
lods
int
lods
xor
xchg
mov
dec
ret
inc
test
and
xchg
push
sti
fnclex
dec
je
push
fisubl
addr16
mov
clc
repz
xchg
cmpsl
cld
xor
sahf
loopne
sbb
lock
mov
test
jle
shl
add
iret
repnz
aas
ret
add
xchg
jae
cwtl
scas
je
mov
out
das
pop
inc
mov
sbb
jae
xchg
jl
push
jg
mov
imul
jl
sbb
jnp
ds
inc
loope
imul
add
cmp
xor
scas
or
loope
jge
dec
cld
imul
cmpsl
jp
fsubr
pop
iret
sbb
xor
jb
das
je
cwtl
and
je
fdivl
dec
inc
dec
sub
jnp
cwtl
enter
jo
push
mov
mov
out
xchg
mov
xchg
push
call
xor
xchg
sub
or
scas
and
lret
daa
and
out
scas
sub
pop
out
jle
sbb
lock
outsb
shrb
or
out
das
ljmp
lock
cwtl
je
ja
jmp
movsl
or
sti
push
inc
jg
mov
dec
imul
leave
iret
pop
xor
in
and
xchg
add
jo
outsb
or
or
nop
mov
sbb
xorb
push
out
lcall
mov
movsb
fwait
pop
lea
fcomip
jmp
cld
xor
movsb
xor
enter
popf
mov
into
adc
in
mov
inc
outsl
xor
out
aas
in
ja
sub
stos
xchg
ret
sahf
movsl
xor
dec
push
in
xchg
test
sub
jecxz
xchg
or
push
outsl
or
movsb
ret
xor
imul
mov
jne
adc
pop
sti
addr16
add
insb
add
adc
push
mov
outsl
ss
iret
imul
outsb
stos
call
add
mov
sbb
push
inc
jmp
add
scas
push
ficompl
sbb
fcom
outsb
es
adc
sbb
leave
mov
js
outsl
sbb
mov
mov
dec
aaa
repnz
stos
arpl
jp
xchg
pop
add
push
call
popf
das
add
adc
scas
xor
sub
xor
cmp
je
fidivs
ljmp
dec
mov
je
in
mul
sub
and
int
imul
stos
pop
lret
and
fimull
aad
push
rol
cltd
xchg
cmp
cmp
mov
add
inc
sbb
push
ficoms
xchg
jl
jle
test
jle
test
pop
xor
cltd
adc
mov
mov
fisttpl
mov
mov
in
es
icebp
mov
mov
je
dec
cmp
cmp
aaa
adc
push
jb
pop
push
mov
clc
addr16
in
and
mov
data16
jo
je
jnp
sub
std
pop
lea
lret
lock
je
test
pop
xchg
mov
xchg
imul
cmp
xchg
int3
loop
les
rep
gs
ret
notb
push
pop
lods
js
popf
sub
cwtl
iret
adc
add
ja
cmpsl
fimuls
les
mov
jae
cmpsl
or
jp
xor
xchg
xor
int3
test
cld
and
dec
cwtl
sub
push
jle
jmp
incb
lret
in
loop
jmp
hlt
ja
pop
inc
out
loop
cwtl
repz
popf
in
mov
mov
sti
add
push
sub
and
cmc
lods
enter
jns
cmp
push
int
xor
lods
clc
cmpsl
stc
int3
or
mov
xchg
mov
dec
xchg
or
test
out
jo
push
sub
outsl
clc
stc
inc
loope
jo
inc
dec
or
aad
xchg
mov
cs
in
sub
cli
sti
lahf
outsl
jnp
jl
cmp
loopne
subb
sub
fisttpll
insl
bound
call
ds
cli
aaa
push
dec
jb
in
test
jmp
pushf
mov
mov
push
jo
je
js
xchg
push
fldl2e
push
cld
pop
filds
rolb
jo
cmp
xorl
insl
mov
inc
shl
lock
rcr
mov
pop
iret
insl
cld
testl
jecxz
and
xor
push
fs
incb
cwtl
pop
ljmp
cltd
sub
sbb
xor
mov
cmp
in
and
int3
or
mov
pop
push
mov
enter
adc
cmp
adc
mov
stos
lea
pusha
pop
jge
adc
jb
push
cmp
jmp
cltd
jl
ja
mov
cmp
cmp
inc
test
push
pop
out
or
addr16
jmp
mov
jo
stos
movsl
gs
loop
xor
lahf
mov
lcall
andb
ds
add
in
imul
ss
je
shl
inc
call
mov
aas
lea
ret
ja
lcall
adc
test
mov
ja
out
inc
mul
repnz
or
movsb
rcrl
sar
mov
out
in
imul
mov
push
dec
xor
fwait
push
sarb
aad
rorb
pop
cld
xchg
movsb
and
fnstenv
pop
dec
leave
jp
sahf
cmc
mov
out
sub
cmpsb
icebp
lret
jo
in
push
mov
imull
cld
cltd
push
outsl
cmpsl
adc
push
hlt
xor
pop
in
sti
and
clc
hlt
sub
and
lea
or
mov
sti
cmp
ret
pop
xchg
das
vpcmpgtd
in
ds
fbld
test
push
fwait
clc
in
sub
mov
es
jg
add
inc
cwtl
call
outsl
xor
test
mov
stc
fistpll
jg
fdiv
adc
cltd
fs
cld
imul
mov
and
stc
loop
insl
cltd
hlt
jo
frstor
popf
das
jmp
cmp
push
sub
jg
lret
cli
mov
fdivrl
adc
pop
out
sbb
lods
push
xlat
mov
test
dec
and
xor
or
push
or
sub
repz
leave
mov
mov
je
or
push
arpl
adc
xor
xor
jb
xchg
mov
addr16
lahf
out
arpl
iret
jmp
lahf
out
je
xchg
cltd
fistps
leave
xchg
push
jne
push
cmp
mov
stc
sub
xlat
repnz
xchg
inc
fmull
jmp
stos
xchg
out
fisubl
add
jmp
clc
je
push
adc
push
xchg
in
pop
cs
jno
loope
fstl
sub
push
xchg
movsb
push
add
jg,pt
ds
or
into
cmpsb
sub
insb
cltd
inc
decl
enter
jns
mov
inc
cmpsb
push
inc
adc
dec
lods
pop
iret
outsl
ret
dec
in
mov
inc
arpl
out
push
outsl
mov
lods
mov
shrb
lcall
dec
sbb
clc
or
jg
dec
das
or
push
sbb
push
or
sbb
mov
insl
insl
pop
inc
fcomip
test
pop
push
or
pop
jmp
push
cmpsl
sbb
ret
jnp
push
xchg
or
pop
xchg
lret
hlt
loop
es
bound
inc
outsl
js
sub
das
test
outsb
int3
add
mov
mov
lcall
hlt
ljmp
jnp
les
or
stos
int
ja
xor
mov
jns
add
sbb
pop
in
sub
adc
mov
or
das
cld
or
xor
sbb
aas
xchg
cmp
fadds
or
push
mov
sub
xchg
push
cmc
das
xchg
repz
pop
push
sub
ljmp
int
adc
or
adc
in
out
enter
sahf
push
loope
or
daa
lret
cmp
inc
jecxz
and
daa
jmp
cmc
fimuls
ss
add
ds
lods
add
addr16
nop
sahf
outsl
rcl
repz
ret
in
lret
iret
cmp
imull
inc
repz
daa
cmp
or
je
ss
bound
es
xchg
loopne
cltd
xor
ljmp
lods
cmpsb
push
in
pusha
clc
inc
dec
andb
pusha
popf
adc
adc
or
in
es
jmp
push
movsb
inc
shr
cmp
jmp
cmp
cwtl
mov
testb
jl
jmp
cltd
adc
outsl
dec
scas
int3
out
sbb
dec
cmp
nop
repz
popa
xchg
enter
sti
mov
cwtl
idivb
popa
cltd
and
lods
insl
jp
das
or
imul
in
sub
in
in
addl
xor
fildll
adc
rcll
add
shld
dec
mov
cmc
jns
rcrb
movsl
dec
outsb
leave
push
cmp
dec
je
clc
jle
outsb
xchg
int
insb
fs
sarb
jge
push
cmp
insl
adcl
dec
mov
repnz
in
in
clc
and
pusha
jb
loope
dec
out
jmp
insb
jl
std
sbb
cltd
js
loop
cmp
ret
cmp
jo
out
add
fwait
pusha
pop
fcomps
es
cmp
gs
pop
jle
in
mov
dec
or
xor
loop
imul
orl
sbb
pop
imul
imul
inc
dec
pop
loop
mov
in
repnz
add
test
loope
rcr
pop
aam
xlat
data16
cmp
in
inc
xchg
xchg
inc
inc
push
pop
xor
jmpw
fnstcw
xchg
add
inc
jae
dec
aad
add
pusha
xchg
push
push
cmp
loop
and
jb
outsl
sahf
dec
xchg
aas
cld
cmc
lret
je
push
adc
xchg
adc
repnz
jae
sub
mov
adc
jb
cld
ret
mov
xor
lds
outsb
jae
xchg
nop
scas
push
ret
test
jg
sti
test
push
add
lea
jne
aaa
mov
pop
xor
sbb
jb
imul
push
or
xchg
pop
xchg
mov
mov
or
fs
in
fldenv
aaa
or
loope
fucomi
or
pop
rclb
pop
call
jle
jne
fisubl
cmp
cmc
icebp
mov
mov
jle
cli
das
xor
or
je
mov
mov
xor
iret
fucomi
movsl
nop
loopne
mov
addl
aad
mov
jmp
jnp
mov
outsl
insl
cs
inc
sbb
mov
js
dec
je
sti
test
sub
or
fidivl
mov
sarb
ja
mov
jb
lret
loop
dec
lock
xor
dec
fcoms
int3
ret
xor
mov
inc
je
sbb
sub
into
mov
pop
cmp
ljmp
cli
je
pop
movsl
outsl
mov
dec
icebp
xor
iret
ret
or
xor
cmp
add
das
dec
jle
dec
clc
test
dec
sarb
ss
or
movsl
out
arpl
movsl
arpl
loop
out
lock
fwait
icebp
out
cli
pop
ret
dec
into
test
jmp
fdivr
pop
lds
cmp
push
pop
adc
sbb
repz
mov
push
lret
inc
jmp
outsb
mov
inc
in
adc
enter
sbb
inc
cli
idivb
mov
sbb
ja
sub
sub
jnp
add
push
inc
jecxz
call
adc
popa
iret
add
outsl
insb
xor
test
dec
sub
sub
ja
push
popa
pop
ljmp
ret
xlat
adc
sti
pop
cmp
xor
jl
out
fwait
jnp
loop
out
test
mov
sub
adc
dec
arpl
jns
mov
outsl
cmp
mov
jmp
mov
push
lods
stos
mov
xchg
lods
mov
cmp
jnp
aad
add
bound
push
sub
das
loope
je
sub
leave
xchg
mov
mov
jmp
loop
lret
sub
jo
adc
cmp
sbb
pop
push
pop
dec
loop
jns
jmp
cwtl
jb
pop
sub
cmp
repnz
dec
sbb
aas
or
insb
outsb
lret
jnp
dec
sbb
fsub
dec
xchg
mov
sub
out
popf
cmp
inc
and
data16
xlat
bound
xor
nop
xchg
mov
dec
dec
inc
xor
and
in
cmp
test
mov
out
loop
sti
mov
into
xorl
test
jmp
clc
sub
jbe
mov
movsb
mov
cmp
inc
pop
mov
cmp
add
shl
dec
cmpsb
mov
pop
out
testb
scas
out
push
in
or
or
mov
pusha
cmp
xor
inc
xchg
adc
dec
dec
fisubrl
pop
les
sub
lahf
call
dec
iret
aaa
pop
ja
cwtl
push
jecxz
das
adc
inc
adc
jae
int
and
sub
clc
cmpxchg
jecxz
pop
push
jo
cmp
push
push
pusha
push
mov
sbb
jo
fwait
add
test
scas
std
or
add
xor
or
xor
dec
cmc
pop
xchg
test
xor
add
jmp
or
mov
pop
jmp
out
loope
lods
idiv
std
xorl
push
je
cld
lods
pop
sub
sub
or
fldl
popa
pop
outsl
mov
cmpsb
xchg
ljmp
and
xchg
scas
fnstenv
mov
jo
pop
cmp
push
out
mov
in
inc
add
inc
jns
and
adc
scas
dec
adc
lea
add
pop
inc
fisubrl
xor
scas
insl
add
arpl
loopne
jae
cmpsl
nop
inc
jo
movsb
jne
push
scas
mov
dec
push
xor
push
call
push
mov
cmpsb
cli
call
cwtl
pushl
call
aas
adc
loopne
pop
shl
cltd
cwtl
dec
je
lea
call
shlb
in
and
je
cs
inc
aam
pop
cmp
xor
and
mov
pop
fmull
cli
shr
add
iret
test
cmpsb
mov
mov
mov
clc
jp
fstps
jbe
cmc
push
xchg
xchg
scas
mov
or
jne
inc
xchg
add
iret
sbbb
ljmp
push
and
push
lods
mov
cltd
adc
mov
icebp
mov
in
les
mov
shll
xchg
insl
push
inc
xor
sub
mov
xor
lods
xor
and
je
mov
pop
jmp
jo
mov
lods
push
inc
jnp
ret
cmp
es
mov
push
push
xor
insl
pop
dec
add
repz
test
imul
mov
adc
sub
mov
sub
and
jo
rclb
push
dec
out
cs
in
outsl
and
pop
xlat
sub
orl
dec
sahf
call
stos
lcall
xchg
loopne
xchg
rolb
mov
mov
aas
dec
or
test
out
movsl
insb
pop
or
sub
mov
xor
pop
xchg
xchg
out
mov
sbbl
sub
dec
out
jo
jnp
cmpsl
clc
mov
pop
push
movsl
stos
in
sti
fstps
mov
sar
mov
adc
sub
mov
inc
push
pop
adc
daa
or
add
inc
and
std
insl
xorl
out
movb
jp
mov
hlt
addr16
fiadds
or
push
inc
cmp
in
pop
out
dec
pop
push
xor
cld
out
push
rorl
dec
inc
sbb
fcoml
xor
cmc
xlat
hlt
outsl
ljmp
adc
fcoml
or
xchg
into
sbb
sub
dec
setp
std
inc
fsts
std
mov
test
popf
negb
cmp
mov
mov
cmp
in
xor
push
in
das
loopne
je
loopne
adc
or
outsl
add
jo
outsl
xor
sub
popa
jmp
aas
pop
popa
mov
jl
xlat
mov
popa
mov
dec
mov
lcall
js
and
jbe
cmpsl
mov
mov
inc
dec
mov
out
outsb
add
in
popa
pop
or
push
lock
push
lret
in
loope
out
jmp
int3
in
fwait
add
jo
xor
filds
pushf
movsl
pop
push
xchg
push
cmpl
cmc
cmp
out
pusha
lock
call
mov
cld
jnp
cltd
cmc
out
sub
loop
int3
and
cmpsl
lock
pop
mov
cmc
int
pop
fidivl
and
dec
sub
ret
ret
test
push
inc
dec
cld
sub
sti
jo
in
xor
loop
scas
jnp
into
jg
stos
outsb
cmp
push
xchg
push
icebp
insb
call
imul
outsl
insl
out
xchg
xor
jl
imul
lock
shl
jb
or
dec
push
and
and
clc
xchg
sub
fcoml
loope
cmpsb
inc
mov
mov
mov
add
loopne
stos
cmc
push
push
add
imul
insl
cwtl
stos
cmp
jecxz
cmp
dec
nop
fsubl
lret
ret
pop
fnstenv
gs
repz
pop
popf
sahf
adc
out
les
and
ss
push
push
xor
xchg
loopne
cmp
mov
sbb
adc
xor
out
xor
dec
scas
in
mov
ret
push
pop
xor
mov
inc
add
addr16
enter
in
and
xorl
xor
lods
push
lahf
data16
out
in
fwait
clc
inc
movb
out
push
in
dec
lahf
in
daa
dec
outsb
das
jg
in
scas
pop
sub
jg
push
je
pop
jo
das
iret
jle
bound
sub
movmskps
dec
icebp
inc
mov
loop
scas
adc
fnstenv
pop
sub
nop
xstore-rng
cmpsl
inc
jecxz
je
jge
je
sahf
mov
out
jae
push
mov
call
cld
jbe
cmp
push
mov
pusha
cli
mov
mov
dec
and
jge
loop
fmulp
jne
sbb
mov
cmpsl
cmp
push
popf
mov
jmp
adc
ret
loop
pushf
cltd
mov
rcrl
arpl
ret
clc
aas
out
push
insb
xor
in
test
pop
sub
sbb
repz
jne
je
mov
popf
cmp
sub
insl
inc
add
les
pop
mov
cmp
pop
bound
sub
movsl
xchg
jle
daa
popf
xchg
mov
lds
ret
mov
sub
inc
jle
cmp
or
cwtl
pushl
cmpsl
xchg
sbb
loopne
out
leave
scas
out
cmp
dec
jl
std
outsl
xchg
aad
dec
jae
jnp
jp
es
idivb
aad
cmpsl
outsl
jg
test
popa
xlat
movb
mov
jmp
fldcw
jbe
cmc
out
mov
jp
aad
movsl
mov
out
in
mov
pop
mov
cmp
outsb
es
je
jmp
test
pop
pop
push
sbb
test
hlt
lcall
lcall
scas
sub
enter
testb
cld
div
mov
mov
addr16
push
fucomp
adc
push
inc
jne
loopne
xor
pop
out
lock
adc
cltd
adc
mov
mov
jae
or
out
or
push
mov
xor
and
cmp
and
pop
jo
pcmpeqb
jl
lods
jb
fdivr
dec
pop
pop
push
sub
pop
cld
or
loopne
test
adc
ror
add
loopne
xchg
jne
dec
jmp
das
stc
je
js
sti
add
jg
es
push
dec
jbe
mov
imul
fstpl
add
jmp
lahf
add
push
sbb
push
rorb
stos
xor
sub
add
inc
aad
sbb
cmc
mov
cmpsl
js
inc
xchg
mov
out
mov
ja
call
fisttps
stc
push
push
test
lds
and
mov
jp
jl
sub
sar
push
ret
out
jnp
inc
jg
or
das
mov
stos
cmpsb
sub
ret
out
outsl
mov
xchg
insb
jl
pusha
adc
lcall
push
cltd
sub
add
out
push
nop
sbb
test
fxch
stos
shrb
push
daa
fs
or
jae
xor
jmp
sar
jb
movaps
repz
add
pop
out
or
xchg
lods
jl
pop
add
lcall
pusha
push
and
popf
aad
sub
aad
imul
and
jo
pop
push
cmpsl
sti
std
jbe
adc
cs
push
dec
xchg
orb
nop
fsubrl
add
sub
sub
pop
mov
lret
push
scas
pop
sbbl
sti
out
sbb
rolb
jb
loopne
mov
lock
cmp
in
outsl
mov
ljmp
push
push
jo
adc
fstpt
sbb
stos
cmpsl
dec
les
in
sub
xor
cmp
add
mov
mov
arpl
mov
jo
jns
mov
call
cli
ja
jl
imul
cmp
jnp
gs
sti
cmp
push
fnstcw
dec
imul
mov
in
mov
jo
call
outsb
dec
icebp
pop
das
addr16
pushw
and
xchg
mov
or
loop
dec
dec
mov
add
in
mov
and
outsl
dec
inc
in
daa
mov
addr16
mov
inc
add
test
adc
outsb
nop
ret
outsb
rclb
ljmp
arpl
ffree
sub
adc
insw
fwait
pop
inc
hlt
enter
cmp
shlb
or
lods
and
aas
xchg
out
std
das
imul
sbb
outsb
shl
arpl
in
cmpsb
pop
cmp
pop
test
sbb
pop
dec
hlt
push
lods
movsb
mov
js
jne
jnp
add
lds
repz
aad
cmp
shlb
loope
mov
outsl
cmp
iret
maxps
xchg
call
out
mov
mov
jbe
insb
testb
into
rep
mov
and
emms
pop
ret
outsl
push
jge
mov
sub
lock
sbb
outsl
inc
std
cmpsl
xor
xor
out
fcmovnu
push
cwtl
adc
loopne
test
in
nop
js
push
add
cmpsb
outsl
loopne
call
mov
and
in
sub
rcr
ss
js
fisubrl
or
xor
push
mov
push
mov
jnp
pop
repnz
cmp
lret
fnstcw
sub
repnz
clc
inc
xor
and
sub
or
imul
and
pop
sbb
dec
icebp
addr16
test
cld
lret
addr16
rclb
adc
sub
push
enter
ja
nop
pop
call
aaa
lods
push
iret
push
sub
add
push
fnstenv
in
enter
pusha
test
fcomp
insb
jns
and
repnz
or
adc
scas
dec
outsl
sti
insl
dec
bnd
mov
jo
and
sub
add
je
stos
push
inc
lods
not
outsl
xchg
call
sub
into
iret
nop
or
or
push
push
or
pop
rcr
cmpsl
ss
shl
sub
jns
out
cli
jb
push
xor
fsubrl
out
mov
add
ret
fcomip
dec
inc
push
hlt
mov
ret
fidivl
rolb
cld
adc
cli
lock
xor
mov
sub
pop
out
cmpsl
das
add
xchg
inc
data16
mov
adc
jecxz
jae
sbb
cmc
sub
test
int3
add
jne
not
add
ja
jp
or
in
cli
aad
xchg
mov
jge
mov
je
add
push
test
pusha
imul
jae
mov
imulb
jle
add
pop
and
sti
and
cmpsl
xor
mov
mov
pop
and
fwait
dec
push
push
lods
dec
gs
lock
out
hlt
movsb
push
xchg
xchg
out
push
movsl
shl
mov
repnz
jne
dec
clc
cmp
cmp
push
adc
jb
movsl
or
fmuls
jns
inc
adc
jne
pop
stos
je
call
mov
scas
fmulp
or
pop
ds
fldt
shlb
pop
enter
jns
rep
cwtl
call
adcb
mov
rorl
je
ret
mov
or
les
movsb
mov
leave
mov
inc
ret
sub
xor
jge
das
cmp
dec
sti
xor
jle
sbb
mov
shrl
sahf
inc
inc
push
imul
adc
fistl
fldl
shl
adc
mov
xchg
lods
xchg
cmp
dec
mov
pop
std
fldcw
aas
sti
movsb
out
or
dec
xor
scas
push
adc
pop
sbb
lret
nop
xor
in
inc
out
nop
push
fildll
jmp
inc
popf
lahf
lock
adc
jmp
mov
pop
cli
push
cli
xor
leave
push
jb
xchg
or
sbb
rolb
lock
push
lods
orl
repnz
ljmp
sar
xsavec
std
iret
lret
adcl
pop
popa
aas
xchg
aad
mov
cmpsb
insl
jnp
mov
addr16
xchg
dec
xor
xor
out
testb
pop
or
mov
test
psubd
pop
mov
mov
and
mov
out
cmp
insb
arpl
push
popf
enter
out
dec
arpl
aas
leave
test
dec
sbb
lock
addr16
insb
scas
jmp
shlb
mov
cmpb
daa
add
adc
outsb
std
mov
das
aaa
insl
xor
in
xorl
mov
aas
pop
cmp
cmpsl
icebp
cmp
ret
mov
mov
int3
scas
scas
and
inc
stos
imul
mov
iret
push
int3
pop
push
and
repnz
push
nop
ja
inc
add
aas
xor
gs
fs
out
fucomi
loope
add
push
scas
jno
pop
push
cmp
jo
icebp
push
add
outsb
adc
out
dec
jns
adc
jne
lret
int
testl
cmp
push
inc
daa
shl
jge
js
in
rorb
out
mov
js
hlt
shrl
inc
jo
lahf
sbb
outsl
out
xchg
stc
adc
aad
mov
xchg
call
adc
pusha
pop
xchg
test
adc
mov
jo
sub
adc
mov
out
rolb
out
scas
ds
outsl
daa
or
fidivl
sub
xchg
into
push
les
adc
imul
imul
cmp
sti
sahf
push
imul
lods
xor
imul
repnz
lret
insl
aas
mov
mov
sbb
push
jo
dec
xchg
arpl
iret
je
add
arpl
jmp
mov
xor
pop
sbb
dec
stc
mov
ds
inc
sbb
sbb
xchg
pop
push
mov
imul
aad
jg
mov
movsb
xchg
movq
jp
je
ljmp
dec
in
mov
das
movsb
jl
popa
mov
std
or
stc
clc
push
call
decb
out
pop
jo
das
scas
xchg
ret
pop
in
arpl
les
call
mov
jo
xor
add
lret
cltd
jo
xor
or
movb
xor
mov
in
inc
push
jno
adc
push
xchg
outsl
mov
rorl
mov
out
outsb
outsb
pop
in
cmp
popf
lret
insl
daa
out
repz
enter
loop
cltd
pop
aas
and
push
add
xor
adc
js
out
ficoml
test
jo
std
and
lock
mov
insl
dec
out
inc
in
addr16
sub
push
in
push
inc
push
test
inc
add
into
insl
inc
jge
fcoml
xchg
jns
fwait
jae
mov
dec
ds
jne
or
call
leave
and
call
jg
cmp
sbb
pop
in
inc
jmp
jne
push
sub
out
imul
out
out
repnz
pop
repz
jg
jle
push
scas
pop
insl
sub
cli
out
xchg
insl
pushw
cli
ror
xor
cld
das
faddp
jge
test
in
push
pop
call
dec
dec
jo
inc
xchg
or
aas
imul
cmp
dec
arpl
cmp
testl
sbb
insb
outsb
jp
jo
out
addr16
add
mov
pop
insl
stc
out
cli
arpl
sub
sub
sub
std
cmp
stc
incb
or
jns
dec
clc
push
jne
dec
ja
pop
cmp
sti
sub
jp
shrb
mov
push
sub
mov
dec
or
and
sub
dec
jne
imul
cli
push
jne
inc
insl
fwait
imul
adc
imul
call
clc
nop
std
pavgb
dec
jo
sub
loop
jecxz
cmp
je
pop
je
cmpsb
push
adc
mov
pusha
cmp
rcl
xor
push
sbb
push
data16
sub
ret
js
je
pop
add
jae
loop
add
cmc
fisttps
insl
je
pop
pop
sbb
pop
test
jns
fldl
sahf
int3
sbb
jo
pop
cli
jecxz
or
out
in
mov
lds
daa
mov
leave
js
push
or
mov
jbe
jnp
mov
fdivrl
dec
xorl
sti
or
mov
inc
jb
xchg
mov
xor
out
sub
aam
loopne
je
test
jg
popf
lret
inc
jno
jp
mov
mov
aaa
fwait
cmpsl
je
and
scas
xlat
xchg
cmp
dec
push
rorb
in
test
call
jno
fildll
loopne
outsl
lret
fistps
je
push
sahf
cmp
ret
inc
cmp
xchg
out
dec
in
or
add
inc
mov
or
leave
ds
outsb
imul
aas
in
test
hlt
mov
cmp
out
filds
mov
add
insb
lret
repz
lea
mov
inc
mov
cwtl
daa
push
mov
loopne
xchg
add
into
mov
or
cmp
pop
sarb
shll
push
fcmovne
mov
dec
add
in
dec
mov
in
in
fldt
pushf
imul
cltd
xor
fcompp
repz
lret
lock
jmp
dec
push
popa
aas
mov
pop
jbe
outsb
in
sbb
or
repz
insb
jg
test
cwtl
das
mov
pop
in
clc
mull
adc
js
out
sbb
pop
subb
insl
cmp
inc
dec
cmpsl
jge
daa
cs
pop
icebp
or
out
jb
loopne
or
adc
inc
push
push
cmp
sarb
mov
xor
in
mov
out
in
scas
sub
pusha
xor
xor
jo
xor
iret
xor
xor
stc
adc
pop
push
pop
and
cmc
js
sbb
adc
js
cwtl
bound
outsl
xchg
cmpl
insb
push
sub
xor
imul
imul
js
and
pop
sub
js
cmp
jg
sub
outsl
sbb
lret
jne
add
mov
mov
out
sbb
adc
mov
fdiv
pushf
repnz
jg
std
adc
jb
pusha
stos
mov
and
sub
addr16
jnp
cld
mov
std
sbb
sbb
or
enter
outsb
mov
xchg
xchg
push
out
or
outsl
push
iret
jbe
sti
shlb
into
jmp
outsb
xchg
inc
scas
jl
mov
insl
mov
inc
insb
in
sbb
sub
cmp
jo
call
lcall
push
sbb
cmp
jbe
sub
in
sub
push
lahf
cmc
push
out
sahf
pop
cmp
subb
and
cmpsb
cmp
out
push
dec
lret
idivb
icebp
int3
jb
ja
clc
sbb
sub
pop
rorl
dec
pop
stos
jle
add
pop
movsb
adc
insl
inc
out
lea
inc
int3
shrl
out
ret
repz
xchg
out
shll
sub
outsb
movsb
mov
adc
shlb
push
jo
xchg
cmp
les
pop
inc
and
jge
sub
dec
lock
sub
movsl
pusha
xor
imul
ljmp
or
adc
sub
in
push
pop
popf
inc
mov
or
je
adc
push
dec
sub
loopne
fimuls
mov
out
out
adc
outsl
fdivr
in
lods
test
sbb
pop
jcxz
out
add
xor
push
aam
jmp
movsb
or
dec
mov
rorb
aaa
lahf
jno
inc
test
in
mov
aas
bound
jecxz
mov
push
clc
lods
mov
insb
lds
pop
ljmp
ret
jge
add
mov
push
cwtl
push
enter
outsb
jns
push
jb
insl
sub
es
add
enter
and
xchg
jb
psadbw
test
movsl
out
pop
adc
js
jecxz
lahf
enter
gs
rorl
push
xchg
or
das
addr16
xchg
adc
je
icebp
xlat
fnstcw
out
jne
push
fdivrl
pusha
js
push
daa
loope
dec
stos
out
jae
dec
imul
mov
sub
push
aad
sub
xor
add
mov
or
shrl
js
call
adc
jnp
push
cwtl
fcmovnbe
je
sbb
mov
daa
in
into
or
ljmp
clc
pop
sbb
mov
addr16
testl
negb
add
sub
iret
in
popa
inc
cmc
out
enter
jg
jmp
dec
push
jb
fmuls
ja
out
jge
push
fsubl
popa
shll
push
pop
cmp
data16
cmp
mov
fsubr
jne
pop
test
mov
inc
dec
cmpsb
dec
fs
adc
aad
sub
outsl
fsts
add
xchg
mul
into
sbb
ret
cmp
sbb
cmp
loope
and
ficoml
jl
add
call
insb
loopne
adc
cmp
adc
pop
repnz
addr16
imul
in
js
xchg
push
leave
inc
movsl
sbb
jge
xchg
imul
fldenv
mov
fistpll
insb
mov
icebp
lock
ret
js
aam
fwait
pop
imul
lea
and
setbe
xchg
jbe
into
int3
and
cli
xor
mov
mov
repz
je
mov
mov
fdivl
dec
mov
cmp
dec
push
pusha
cmpl
xor
out
loop
out
cli
mov
sbb
sbb
mov
mov
inc
jae
frstor
jns
sbb
or
adc
movsl
bound
push
and
shll
jb
push
inc
es
je
jae
mov
call
push
push
rorl
out
lret
mulb
mov
gs
rorb
pop
xor
cld
mov
in
aad
arpl
shr
outsb
lret
das
dec
iret
scas
movsl
outsl
cld
push
cmp
stos
jl
in
dec
adc
fistpll
sbb
xchg
or
cmp
sbb
push
mov
fwait
dec
loop
pop
push
sub
aaa
popa
push
shrl
fs
xor
or
sbb
sub
out
js
jbe
and
pop
jns
xchg
repnz
inc
sbb
adc
cmpl
mov
in
jb
cmc
pushf
lds
adc
hlt
fs
mov
cmp
stos
insl
test
jbe
or
mov
mov
cmpsb
and
xchg
mov
ffreep
sbb
repz
test
sahf
testl
fiadds
js
pop
insb
mov
xchg
push
sbb
in
cmp
fdivs
pop
loopne
popa
mov
push
inc
jb
pop
sub
pusha
xchg
xor
outsl
mov
push
fucom
out
out
sub
cmp
push
roll
sub
shrl
pushf
sub
xchg
arpl
dec
jp
pop
je
sub
dec
sbb
loop
fs
inc
pop
iret
add
push
adc
jb
pop
rcrl
outsl
outsl
mov
jp
dec
imul
pop
dec
ljmp
nop
imul
roll
bound
mov
sbb
cmp
outsb
fstpl
test
pop
sbb
in
shl
addl
xor
jg
clc
xor
jl
loope
xor
sbb
imul
lea
adc
cmp
lds
call
mul
and
mov
adc
leave
ljmp
out
jb
ret
pop
mov
es
mov
jge
sub
inc
mov
sub
enter
pop
shr
push
ret
cmc
ljmp
pop
and
cmp
adc
mov
dec
out
jo
add
mov
insl
xchg
insb
dec
jo,pn
push
js
hlt
int
cmp
dec
push
les
pop
out
add
dec
ret
or
dec
insl
dec
mov
or
inc
neg
cld
pop
loopne
sub
add
das
sahf
or
dec
sub
xlat
imul
jne
in
mov
jne
out
movsb
jecxz
cltd
mov
test
outsb
ss
sub
mov
adc
inc
add
arpl
add
addr16
push
aas
ljmp
gs
subb
out
out
dec
sub
hlt
dec
leave
xchg
or
push
push
sub
pusha
jae
push
mov
lret
test
sahf
iret
mov
cmp
stc
ljmp
lods
lret
daa
inc
push
iret
imul
cmp
jo
mov
cs
lods
test
pusha
adc
cs
in
fistps
dec
xchg
cmp
iret
jmp
pushf
ljmp
jg
dec
lahf
cmp
pusha
stc
push
cwtl
outsl
xor
push
lods
fistps
subb
loopne
dec
jmp
cmp
sub
xchg
lods
decb
xchg
and
in
sub
pusha
dec
pop
clc
fs
outsl
sub
leave
inc
dec
lods
jge
scas
roll
xor
push
call
das
jne
shrl
pop
cmp
push
sub
js
scas
pop
inc
sub
push
loop
push
inc
stos
das
or
inc
dec
psubq
dec
pop
push
mov
pop
shrl
lret
psrld
inc
xor
lods
popa
push
call
das
cli
in
pop
push
je
fiadds
push
call
das
out
inc
push
pusha
insl
scas
imul
jmp
jns
dec
xlat
push
ss
xchg
in
repnz
push
dec
and
xchg
pop
imul
dec
popa
ljmp
or
jnp
mov
loop
out
push
outsl
pop
cmpsl
or
or
or
int
cwtl
testl
scas
bound
in
mov
sbb
pop
inc
mov
adc
or
push
mov
mov
jne
jg
mov
sub
or
xchg
outsl
in
jbe
call
out
int3
ja
cwtl
push
adc
loope
outsl
sti
cli
or
adc
insl
gs
xchg
push
adc
std
shrl
insb
je
insl
inc
xor
adc
repz
insl
cli
stos
sbb
push
cmpsb
jmp
adc
aas
adc
addr16
insl
repz
hlt
jne
mov
push
jecxz
insl
loopne
gs
sub
icebp
loope
in
loopne
fs
clc
dec
dec
jecxz
arpl
pop
js
loop
pusha
sub
jge
jns
jnp
iret
loop
mov
dec
loope
out
ja
loop
js
clc
push
lock
gs
hlt
dec
arpl
xor
adc
in
dec
repz
xchg
xor
push
dec
aad
js
aad
iret
adc
lret
xchg
jp
or
mov
fdivr
push
das
mov
xor
loope
cwtl
and
fbstp
sub
popf
dec
pushf
pop
mov
cmp
jmp
push
repz
mov
mov
arpl
push
stos
call
pop
hlt
adc
je
outsb
xor
dec
lods
push
xor
sub
push
sbb
mov
cmp
or
fwait
in
sti
rcrl
arpl
dec
or
lea
jge
mov
movsl
push
pop
outsl
inc
cmp
ja
push
xor
mov
and
xor
cmpsb
je
sti
pop
lea
and
les
xchg
fisubrs
mov
shlb
xchg
cmpsl
jnp
lock
push
insl
sub
push
sub
movl
jp,pn
pop
xchg
pusha
sbb
pop
iret
std
outsb
or
inc
shr
add
leave
xchg
jnp
loope
outsb
gs
orl
pop
outsb
xor
dec
js
fadd
pop
cmp
bound
jb
pop
dec
jecxz
sbb
mov
in
xor
shl
jne
mov
push
cli
sub
shlb
and
insb
cmp
faddl
addl
lahf
repnz
js
lea
rcl
or
outsl
jmp
and
lods
call
dec
clc
dec
inc
jle
dec
xchg
jnp
decl
jns
pop
cs
cltd
shlb
sub
dec
repz
xchg
cmp
data16
in
ja
xchg
cli
sbb
es
mov
pop
gs
popf
and
add
dec
mov
dec
inc
or
decw
mov
mov
loope
mov
into
push
push
xor
pop
xor
lret
pop
sti
or
je
cmp
mov
adc
mov
outsl
sub
push
or
jne
or
call
mov
inc
jle
lods
addr16
jg
jg
inc
gs
cmp
xchg
pop
sbb
insl
loop
sub
mov
push
push
mov
xchg
adc
adcl
or
cwtl
cmovno
imul
add
add
ss
into
gs
push
xchg
je
mov
movsb
jno
or
mov
in
ss
mov
insl
xchg
pop
inc
and
jmp
xor
scas
aas
mov
mov
or
cmp
fbld
jg
imul
xor
hlt
stos
enter
shl
cmp
pusha
dec
or
sub
addr16
mov
daa
in
sub
and
addl
sub
jne
add
jae
and
in
cli
lock
rcl
sbb
jg
fbld
outsl
sub
insb
out
adc
iret
push
mov
inc
dec
mov
mov
pop
xor
fbstp
or
inc
or
jle
inc
inc
sub
sub
scas
lret
push
xor
je
inc
adc
push
aas
inc
dec
scas
xchg
stos
lea
icebp
imul
xor
pop
lds
nop
sahf
movsl
pop
shl
aas
outsl
loopne
and
gs
ljmp
dec
imull
mov
out
callw
out
pop
outsb
jecxz
je
daa
or
dec
inc
rcl
lock
jb
sub
out
iret
jg
xchg
sub
push
and
jg
dec
shlb
mov
xor
addr16
data16
test
add
mov
outsl
or
inc
cmp
jno
fs
mov
xor
cmpsb
and
clc
jo
mov
mov
fbstp
adc
sub
test
movsl
xor
mov
fs
popf
and
mov
sahf
pop
mul
stc
icebp
push
data16
gs
pop
lahf
jnp
sarb
mov
jne
pop
add
scas
enter
push
pop
lock
push
repnz
outsl
out
jno
das
push
lock
ret
pop
cli
mov
dec
pop
je
inc
rol
sbb
sbb
pop
xchg
sub
mov
mov
hlt
pusha
icebp
sub
xor
inc
add
fimull
inc
push
mov
insl
inc
mov
and
dec
test
mov
push
xchg
cmpsl
push
lahf
aas
in
mov
insb
je
and
es
xor
dec
lcall
fistpl
lret
rcrb
rorb
outsl
scas
fucomi
shlb
push
movsl
xchg
addr16
adc
imul
repz
loop
fwait
mov
dec
lret
dec
cmp
jg
in
js
cmp
cli
dec
xor
cmpsl
clc
sbb
int3
lock
bound
or
rolb
mov
clc
lahf
popf
jns
das
enter
in
stc
cltd
imul
adc
subb
test
aam
je
in
lcall
shlb
call
aam
in
inc
scas
je
add
lcall
ja
ret
fcoms
lds
js
bound
inc
pop
lret
dec
mov
mov
cmp
jne
sub
negl
dec
adc
and
andb
fsubrs
pushf
xor
fisubl
inc
test
jns
test
call
repnz
xchg
adc
cmpb
xchg
cmp
scas
fldcw
shlb
jecxz
xchg
fisttps
std
lea
push
mov
stc
push
xchg
sub
cmp
pavgb
push
cltd
cmp
push
clc
mov
sub
hlt
test
iret
clc
cmpsl
aam
scas
add
push
mov
and
jb
or
cmp
scas
std
in
mov
ret
mov
pop
shrb
dec
jl
shrl
hlt
inc
test
pop
mov
pop
push
mov
gs
push
lods
jne
je
fs
ljmp
mov
cmc
or
cmp
mov
leave
add
repnz
sub
mov
dec
mov
aad
jne
test
mov
add
pop
cmp
aam
mov
push
dec
jo
inc
stos
push
cmp
push
mull
sbb
pushf
cld
push
je
xor
sbb
pop
inc
push
repz
arpl
and
xor
aad
pop
xchg
mov
lret
dec
sahf
into
js
shlb
xor
lea
enter
scas
shll
and
mov
js
sahf
pop
adc
and
imul
loop
mov
inc
xchg
xor
or
push
xchg
cmp
fisubl
int3
mov
rorl
ljmp
pop
adcl
test
push
aas
int
in
xchg
mov
aaa
imul
icebp
mov
je,pn
ds
sbb
mov
and
test
push
lret
mov
aad
in
int3
daa
mov
fildl
in
dec
jns
mov
out
mov
dec
jb
mov
in
jno
adc
addr16
inc
imul
ret
fwait
dec
aam
add
das
cld
adc
outsl
in
inc
push
adc
jns
divl
nop
push
sbb
out
lock
movsl
popl
std
sahf
inc
fwait
loop
js
test
clc
xchg
int3
jae
add
shlb
xchg
xchg
dec
cmpsl
movsl
mov
jo
cmc
push
sub
ret
sbb
pop
sub
cmp
in
mov
loopne,pt
lcall
add
addr16
push
icebp
stc
pop
add
je
addb
loopne
ret
xor
lds
cli
add
jno
cmp
mov
mov
mov
iret
or
inc
scas
sbb
push
add
dec
mov
mov
mov
jl
and
cmpsb
jns
push
mov
shll
or
clc
xor
jp
adc
cwtl
nop
sub
adc
icebp
push
xchg
push
sub
data16
in
or
ljmp
push
faddp
and
cmp
mov
push
jne
sti
adc
mov
inc
push
or
lret
fwait
sub
stc
test
sub
subl
add
cli
push
dec
ret
xor
sub
inc
out
in
stos
jg
cld
jnp
inc
xchg
pusha
mov
pusha
ljmp
in
das
cmpsb
je
cwtl
pushf
adc
or
or
add
test
sahf
shl
das
and
mov
aam
lret
pxor
insb
jno
add
mov
push
jmp
iret
inc
adc
hlt
idivb
dec
jmp
das
mov
inc
cmp
adc
inc
repz
imul
in
out
insl
inc
push
aad
inc
mov
cmpsb
cmpsb
cwtl
ret
inc
fldcw
incl
mov
or
xorl
daa
iret
addr16
shl
mov
pop
outsl
arpl
in
loopne
dec
popa
adc
pandn
cmp
xor
inc
loope
add
adc
cmc
ja
movsl
xor
jo
test
mov
insl
repnz
push
mov
pop
aaa
inc
mov
lea
or
out
into
inc
dec
mov
pop
mov
in
je
mov
nop
test
aaa
mov
adc
mov
mov
out
adc
outsl
push
js
adc
cmp
dec
mov
jmp
test
in
out
lods
adc
push
push
movsl
push
sub
dec
xor
insl
loop
iret
leave
aaa
or
mov
test
jmp
dec
je
pusha
mov
add
repnz
out
add
mov
jo
and
ret
aad
jne
in
push
inc
dec
pop
jge
inc
inc
fstpl
inc
push
in
dec
inc
loopne
je
out
call
test
sti
decl
pop
xchg
inc
bound
xor
or
and
clc
cmovns
pusha
dec
jp
popl
and
jo
shl
imul
mov
movsl
jo
enter
jbe
pop
jne
dec
aaa
push
mov
mov
leave
sub
subb
loopne
aaa
ret
push
mov
pop
xchg
fwait
push
inc
push
and
sub
scas
out
imul
movsl
cmc
sbb
adc
ret
pop
das
repnz
sub
movsb
or
ja
outsl
add
ret
setnp
or
push
pop
mov
sub
jp
inc
rolb
push
mov
push
sub
sub
pop
mov
aad
lcall
cmp
icebp
xor
jge
mov
mov
or
inc
sub
xlat
dec
dec
aam
shlb
imul
testl
stc
movsl
insb
loop
movsl
mov
adc
xchg
cmp
fptan
mov
jae
xchg
incb
clc
and
dec
sub
das
jcxz
dec
mulb
dec
jae
inc
jnp
sub
jne
out
adc
mov
push
addr16
test
mov
pop
bound
leave
in
cmpsb
lock
das
rcll
cmp
push
pop
hlt
inc
mov
test
and
out
cmpb
sub
jo
js
mov
fdivrl
xchg
fs
icebp
add
repz
or
push
shlb
adc
sbb
pop
call
cltd
es
adc
ret
add
leave
jmp
mov
decb
xor
insb
mov
test
push
fcompl
vandpd
stos
fs
cmpsb
sahf
inc
rcrb
jb
dec
clc
dec
lret
mov
outsl
push
push
fcompl
pop
cmpsb
xor
inc
test
inc
aas
neg
add
in
insb
stc
mov
out
mov
xchg
push
pushf
adc
xchg
mov
out
rcll
cmc
in
daa
mov
lock
cmp
imul
nop
cltd
xor
adc
les
and
js
ret
cld
cmp
xor
xchg
out
inc
xchg
dec
lds
loopne
add
cmp
dec
inc
adc
addb
push
fldl
and
push
cmp
push
aas
cli
jb
mov
fwait
sarl
ss
cmp
jae
mov
inc
jb
xchg
test
jae
lods
or
push
pop
shl
lea
sbb
outsb
and
in
icebp
in
inc
mov
dec
or
jb
std
cmpsl
fistpl
enter
mov
jae
push
and
es
fiaddl
push
and
jp
movsl
push
fiaddl
rcrb
movsl
jg
and
inc
and
into
mov
push
dec
mov
jle
or
bnd
cmp
xor
xchg
mov
divb
jg
cmpsl
xor
test
or
cmpsl
ret
sbb
mov
std
insb
mov
or
push
xor
loope
pop
inc
inc
jne
icebp
push
xchg
jecxz
rdpmc
andb
jmp
loope
sbb
scas
testb
xor
jp
mov
push
sub
jne
xorb
pop
dec
sbb
scas
ret
jo
or
fldenv
xor
out
dec
stc
sub
inc
loop,pt
inc
xchg
adc
and
and
insb
push
pop
inc
sub
sbb
fs
adc
push
mov
pop
sub
cmp
mov
scas
mov
mov
adc
xor
rorl
lcall
mov
jle
mov
xor
enter
jo
xor
lcall
adc
sti
xchg
sub
dec
roll
int3
push
out
mov
clc
xchg
repnz
dec
fs
test
push
mov
std
jo
and
addl
std
inc
shlb
and
push
ficoms
pop
cmp
lock
decb
jo
xor
hlt
cmp
adc
imul
lahf
mov
in
add
jo
jmp
into
lcall
cmc
movsb
cmp
mov
loope
mov
or
loop
add
xor
stos
sbb
push
icebp
mov
shrb
xor
cmp
push
cmp
mov
dec
imul
outsb
aam
jnp
mov
out
pop
fdivrs
mov
pusha
enter
dec
jp
shlb
push
add
or
mov
jnp
lock
arpl
int3
pop
push
xorl
push
iret
cmpb
sti
mov
sbb
xor
popa
paddd
repz
push
adc
fs
adc
pop
orb
lods
inc
xor
add
adc
push
xor
in
jo
and
sub
xchg
dec
adc
xor
dec
sub
pusha
aaa
dec
lret
xchg
xor
pop
fs
cmpsb
leave
in
repz
hlt
aas
jb
mov
jnp
popl
bound
inc
subl
lret
sub
pop
hlt
je
push
out
je
pusha
pop
and
outsl
jns
out
push
push
sub
dec
dec
outsb
das
jae
sub
push
adc
and
pop
jo
cltd
dec
shrb
lret
popa
add
cmpsl
movl
test
call
xor
dec
sbb
mov
in
xor
jnp
xor
jecxz
cmpsl
in
js
popf
pusha
icebp
jmp
or
scas
pushf
out
lret
mov
push
adc
jbe
jo
aad
fbstp
jmp
js
pop
adcl
xchg
pop
sahf
sub
inc
outsl
out
iret
sub
bound
mov
test
pop
xchg
sub
jo
xchg
loope
cltd
out
scas
int3
inc
jne
xchg
scas
jae
mov
in
movsb
movsl
loop
ljmp
subb
je
pop
loop
sub
call
orl
data16
lret
loopne
inc
xchg
rclb
sbb
push
mov
sbb
je
fnstenv
inc
pop
dec
sub
lret
dec
adc
push
add
stc
outsl
mov
test
inc
sub
outsl
or
fidivl
push
jo
mov
stc
cmp
or
pop
lret
nop
jne
mov
inc
sub
xchg
add
cltd
std
ja
stc
add
ret
cmp
in
xchg
andl
mov
lret
jecxz
loopne
mov
das
push
jb
aad
mov
test
clc
movsl
sbb
sbb
int
jmp
outsl
test
cli
in
loopne
mov
and
fs
pop
out
in
dec
cmp
jg
js
addr16
add
cmp
mulb
push
and
in
pop
decl
lcall
je
fwait
jge
mov
lcall
in
stos
cmpsb
pop
xor
inc
movsb
cmc
daa
aas
sti
loopne
xor
mov
sbb
push
jp
and
pushf
arpl
add
lods
push
inc
jo
je
insb
mov
shlb
sti
jb
dec
xchg
js
cmp
jecxz
dec
repz
fs
pop
or
stos
roll
sub
jne
xchg
sbb
adc
aas
sub
or
cmp
mov
push
in
dec
jo
test
movsl
mov
add
xor
mov
adc
xor
mov
mov
cmpsb
push
add
cmp
mov
inc
js
xchg
add
inc
jno
push
cmp
push
jmp
shrb
int3
push
addr16
jo
or
adc
push
jo
jl
ja
int
icebp
cli
mov
sti
jo
xchg
dec
jne
xor
dec
ret
and
out
inc
outsb
jg
outsl
dec
fs
jo
or
jnp
mov
loop
lds
loopne
push
lods
aaa
je
pop
inc
loopew
mov
mov
push
in
outsb
dec
pusha
and
lret
iret
scas
sub
jb
mov
out
out
out
sarb
jo
nop
je
test
outsb
fwait
mov
das
add
ret
mov
pop
aam
mov
mov
push
pusha
jb
pop
mov
lret
add
insl
mov
dec
pop
xchg
into
cltd
push
mov
pop
sub
inc
jl
cmpb
aaa
out
ja
mov
js
and
dec
sti
andb
mov
lret
inc
popa
test
cld
cmp
sbb
scas
icebp
push
cmp
dec
sub
lock
int
adc
popa
mov
iret
js
test
insb
imul
subb
lock
sti
push
loopne
inc
cmpsl
rol
jg
loope
lods
enter
sub
test
fdivrp
cld
mov
test
dec
loopne
add
cmp
pop
jmp
call
push
je
andl
mov
cld
in
incl
jg
hlt
cmp
cltd
stc
out
arpl
fdiv
sbb
lods
push
adc
lcall
scas
imul
push
inc
xor
fidivl
andb
cltd
mov
popa
xor
cld
add
adc
outsb
in
jb
adc
mov
rclb
inc
xchg
repnz
inc
xor
test
and
fdivl
out
shrb
xor
aaa
aas
in
adc
push
mov
outsb
sbb
dec
in
pusha
and
mov
lods
fdivrp
int3
daa
mov
loop
in
mov
jae
or
pop
ljmp
fisubl
xor
int3
pop
out
add
pop
sarb
pop
push
lock
in
cld
dec
imul
insb
out
pop
jb
mov
mov
sbb
lock
loopne
mov
pavgb
mov
inc
out
lods
and
call
sub
dec
repnz
nop
push
inc
mov
bnd
imul
loop
rcll
pop
shr
cltd
sub
repz
mov
aas
mov
push
outsl
inc
push
inc
shlb
lret
adc
sbbl
subl
or
add
aas
subb
ret
push
aad
out
cmp
insl
push
or
and
xor
pop
loopne
jge
aaa
fiadds
mov
sbb
add
pop
ret
pusha
push
call
das
and
jo
call
movsb
adc
enter
cmpsb
mov
mov
das
rclb
push
add
adc
jmp
icebp
cmc
adc
daa
mov
xchg
adc
icebp
mov
andb
mov
insb
mov
shrb
jo
inc
push
fstpl
fs
outsb
pop
ljmp
mov
sub
cld
dec
xchg
inc
mov
sarb
cmp
lods
divb
shlb
clc
outsl
outsl
push
cmp
adc
sub
sbb
jle
out
cltd
cmpsl
adc
sub
push
cmp
sbb
dec
xchg
inc
cmp
in
out
stos
aam
lods
pop
xchg
in
adc
cmp
inc
scas
mov
cli
xlat
loopne
ret
pushf
stos
jmp
cmp
lcall
jp
add
sbb
insl
add
mov
lret
sub
and
stos
adc
out
popa
lret
jl
scas
push
sti
mov
daa
bound
sahf
loopne
fstps
jg
into
cmp
loopne
shll
pop
pop
aaa
sub
sub
or
aas
dec
cmp
dec
aas
xor
lock
stc
xor
and
sahf
mov
daa
fs
in
pop
js
aas
outsb
xchg
cmpsb
test
rol
fs
fadd
fldt
roll
sub
out
fcmovb
outsl
and
cmp
jo
push
call
lcall
test
jp
arpl
sub
or
pop
aam
ja
outsl
push
in
sub
mov
rolb
jo,pn
out
daa
out
push
jbe
insl
push
xchg
pop
jle
iret
cmp
call
xor
repnz
jp
push
je
lds
mov
aas
enter
decb
iret
out
in
inc
and
loop
ss
mov
inc
jg
push
push
xchg
xchg
or
adc
or
mov
in
cmp
add
dec
ret
test
ret
iret
lods
iret
test
int
das
dec
jo
test
comiss
lods
icebp
fs
pop
push
and
jl
inc
repnz
ret
adc
out
add
shrl
insb
adc
pop
dec
leave
mull
xor
pushf
dec
add
ret
in
or
pop
xchg
mov
inc
mov
out
nop
inc
mov
shrb
adc
jns
out
out
adc
cmp
jo
cli
push
imul
push
lcall
dec
notl
push
or
testl
pushf
push
outsl
call
dec
loopnew
aad
hlt
loopne
adc
mov
iret
xlat
push
inc
add
jmp
sub
daa
out
inc
push
rcll
movsb
call
jo
dec
jge
or
sub
icebp
std
out
pushf
rolb
inc
idivl
xlat
hlt
jo
cmpsb
ret
inc
xor
xor
mov
pop
cli
or
js
in
das
leave
jne
pusha
xchg
aaa
jo
mov
aas
push
adc
stc
lret
sbb
dec
lock
inc
aam
add
jnp
push
scas
mov
lret
adc
lcall
or
mov
mov
adc
imul
insl
xchg
xor
mov
cmpsl
cmp
hlt
inc
je
repz
and
fidivrs
pop
call
sbb
mov
aad
mov
xchg
into
jg
xor
cmpsl
mov
mov
in
jns
inc
outsl
mov
pop
sbb
or
icebp
imul
adc
icebp
je
int3
push
push
bnd
ret
mov
stos
shll
adc
mov
xor
jns
in
into
fucomip
cmp
or
jle
psllw
push
mov
fxam
push
jae
or
in
int3
lahf
lcall
cmc
fidivl
cld
lahf
out
fidivl
sub
loop
mov
int3
cwtl
xchg
test
jo
jbe
addr16
out
ds
jae
dec
je
movsl
rcrb
adc
and
sub
jg
pop
test
lds
arpl
dec
xor
loopne
ret
icebp
out
sbb
push
mov
or
enter
call
push
clc
aaa
xchg
insb
out
or
cmp
shlb
adc
pop
xchg
imul
imul
lret
sbb
and
test
out
cmp
into
pop
pop
je
mov
push
xor
bound
iret
out
mov
jbe
push
add
push
xchg
repnz
sub
mov
jb
adc
dec
das
push
inc
push
or
lea
sub
repz
pop
lock
sbb
push
std
mov
xor
lret
inc
jmp
and
enter
in
xchg
jo
loopne
int
inc
push
adc
push
cli
das
push
push
orl
push
imul
push
push
jae
sub
fildll
rcl
je
lret
rolb
or
or
lds
rorb
fsts
push
lds
std
icebp
push
pusha
shld
pop
jge
cmp
push
test
pop
ret
mov
adc
subb
xor
mov
outsb
add
nop
cmp
call
lds
inc
std
cli
or
iret
mov
loop
lret
out
inc
mov
gs
adc
inc
leave
inc
push
movsl
adcb
fwait
in
dec
lock
dec
inc
test
decb
pusha
add
jle
out
add
lock
aad
shll
repz
loope
outsl
outsl
outsl
fimull
js
pop
mull
jmp
adc
adc
loope
dec
lret
jae
mov
ret
jno
xor
bound
or
clc
sbb
jp
call
sti
clc
jnp
loopne
in
call
int3
clc
sub
sub
das
outsb
pop
in
std
dec
popa
sbb
in
js
or
pop
sub
dec
xchg
dec
adc
pop
sbb
dec
jecxz
in
insl
into
jp
clc
fstps
adc
mov
add
push
jbe
idivl
dec
in
fwait
lock
jae
pop
testl
dec
gs
xor
jne
int3
andb
dec
lds
xor
js
or
loopne
lods
add
jne
cmpl
xchg
movsb
popa
jp
mov
and
pop
inc
out
mov
das
int
outsb
pop
jge
dec
pusha
adc
popa
leave
jg
pusha
pop
out
cmp
xchg
imull
sbb
sub
test
push
adc
mov
sbb
dec
mov
and
arpl
add
out
inc
scas
dec
dec
cli
cltd
jne
inc
mov
out
std
fiaddl
jg
jmp
loop
or
leave
xchg
fwait
dec
jmp
xor
cli
je
or
push
aas
cmp
jle
pop
or
jo
jb
aas
xchg
jl
out
js
or
loop
scas
inc
xor
mov
rcrl
daa
sbb
push
xchg
xor
jecxz
sub
pop
popa
cmp
in
push
dec
pusha
mov
sub
clc
sub
sub
inc
into
jns
outsb
je
dec
or
mov
mov
outsl
outsb
dec
jmp
push
dec
jb
xor
iret
enter
xchg
aam
insl
testb
call
out
cmpsl
push
das
adc
pushl
sub
and
lahf
push
rol
cwtl
icebp
or
push
lret
outsl
or
outsl
or
js
movsb
pop
mov
push
add
es
mov
in
movsb
push
add
sbb
int3
out
sub
mov
pop
in
outsl
pop
in
add
cs
add
jno
cltd
cmp
pushw
push
call
imul
xchg
inc
ljmp
push
mov
jns
sbb
xlat
sub
jne
in
add
in
add
mov
bound
adc
test
scas
add
roll
jmp
scas
out
xorb
out
movsl
pop
nop
out
xor
sbb
sbb
and
mov
adc
push
imul
test
jp
jae
rol
xchg
jge
pop
test
jge
jmp
mov
dec
test
xlat
push
push
stc
in
sub
lea
mov
xchg
push
movsl
ret
xor
add
test
sub
pop
aaa
cmpsl
fwait
mov
out
cmp
pop
dec
out
scas
fndisi(8087
sub
inc
sub
out
movsb
inc
or
mov
rcr
xor
or
push
cmp
ret
sub
out
out
sub
dec
mov
cs
shr
loopne
sub
inc
in
dec
out
out
xor
enter
scas
pushl
dec
in
and
adc
out
lret
dec
jmp
out
loope
xor
aad
jnp
mov
or
inc
jp
and
cs
mov
fcmovb
pop
ja
inc
cli
cli
sub
sub
out
sbb
jl
fildll
add
out
xchg
xor
xchg
push
jl
lods
cmpsb
imul
outsl
fisttpl
sbb
jmp
mov
mov
jmp
mov
ljmp
add
inc
lock
xor
jo
popf
call
lcall
add
push
out
test
jl
ljmp
loop
dec
cmp
dec
lea
sbb
ljmp
std
mov
jle
pop
jmp
incl
icebp
out
xor
jmp
in
scas
adc
cmp
hlt
pop
xchg
mov
mov
inc
cwtl
je
mov
imul
mov
mov
mov
cwtl
mov
inc
aas
loop
in
mov
adc
jecxz
mov
jbe
cmpsl
lret
add
jbe
enter
jae
das
test
ja
or
mov
int
cmovbe
or
pop
iret
lods
cmc
loop
mov
test
cli
xchg
shlb
jg
jb
loopne
imul
or
outsl
mov
shrl
push
out
push
es
jmp
lcall
push
fldt
pop
hlt
xchg
mov
das
jns
mov
ljmp
insb
je
lret
mov
or
inc
mov
test
pop
jo
arpl
inc
fcoms
add
int3
addl
jo
push
outsl
lahf
outsb
cld
xchg
xor
cmp
jmp
xchg
cmp
cmp
popf
insb
inc
cmc
fisubrs
mov
dec
iret
imul
ljmp
scas
adcb
mov
outsb
arpl
inc
pop
mov
cmc
sub
es
call
push
pop
sub
pop
or
outsl
je
test
test
das
cmp
mov
xor
pop
jae
inc
imul
mov
or
jb
pop
hlt
out
add
popf
lret
or
xor
mov
icebp
cld
das
in
icebp
xchg
std
aaa
xor
dec
bound
in
shll
daa
insb
pusha
in
xor
jo
ds
lahf
pushf
dec
pop
out
jmp
dec
ja
xor
sbb
divl
jbe
adc
push
cmp
mov
shll
jg
hlt
sub
mov
jo
sub
cmp
xchg
insb
cli
les
dec
testl
or
jnp
add
in
cwtl
pusha
sub
dec
cmp
push
cmc
imul
or
sbbb
mov
fidivl
addr16
in
popf
cmpsb
push
dec
lock
dec
out
pop
data16
js
cwtl
or
or
ret
jns
data16
out
mov
jb
test
xor
push
sahf
movsl
scas
dec
pop
pusha
dec
sbbl
cmpsb
fsubl
ret
dec
movsl
fisubs
loope
insl
jnp
std
loope
jle
inc
adc
lods
pop
add
adc
les
ds
jl
push
fldl
pushf
xchg
imul
dec
lea
dec
adc
jecxz
dec
mov
lock
mov
mov
ret
js
xorl
or
cmp
icebp
push
jge
dec
mov
pop
cmp
jne
repnz
mov
and
add
adc
jp
xchg
stc
into
jg
ja
insb
add
outsl
leave
insl
cmpsl
bound
dec
ljmp
in
sbb
add
mov
or
les
pop
jmp
jo
cmc
mov
outsb
mov
pop
lock
xchg
add
rcrb
dec
mov
mov
jge
push
xchg
cmp
or
jge
addr16
adc
sub
xchg
cmp
and
repz
sub
pop
out
push
jne
jmp
fidivrs
cmp
loopne
push
adc
sbb
xchg
outsl
imul
or
dec
fisttpl
addr16
push
jns
int3
pusha
mov
dec
mov
divl
shll
addr16
pop
push
or
in
or
sub
mov
jo
addb
add
gs
les
fistl
pop
ret
in
inc
hlt
mov
mov
dec
ret
push
call
clc
cs
orl
imul
das
pushf
aaa
in
dec
mov
enter
xor
insb
push
out
mov
xchg
scas
movsl
dec
mov
lock
inc
sub
and
mov
mov
dec
sti
xchg
bound
jge
push
dec
inc
adc
je
imull
inc
add
xchg
jecxz
lret
les
scas
iret
movsl
addr16
popf
nop
ret
mov
repnz
test
xchg
dec
push
test
jp
es
adc
cmp
repnz
or
mov
sub
data16
scas
arpl
mov
sti
and
lock
out
rorl
fwait
loopne
in
int
lret
out
popf
push
jp
daa
fs
ja
push
clc
dec
ja
push
adc
adc
push
pusha
rep
sbb
jle
je
stc
bound
bound
or
xlat
mov
cmp
daa
jecxz
das
test
dec
sub
pop
in
subb
movsl
out
cli
xor
and
in
std
lods
mov
sub
adc
ret
cmpsl
roll
jnp
sbb
mov
pop
dec
lods
out
adc
pop
call
test
jae
cmp
lods
or
jb
clc
mov
push
push
pop
insb
push
add
lock
sub
aam
xor
ret
xor
xor
cmp
ljmp
mov
dec
out
enter
mov
adc
lods
repz
pop
and
cmp
add
mov
in
loope
dec
adc
js
mov
sahf
mov
outsb
pop
mov
ficompl
sbb
ss
loope
push
jmp
pop
outsl
push
aam
sub
daa
daa
insl
push
mov
clc
out
mov
sub
in
jmp
jle
jns
lods
out
imul
mov
icebp
jmp
mov
xchg
pusha
sub
jo
push
lods
out
inc
inc
mov
cmpsl
ret
cmp
adc
fildll
aas
ljmp
loopne
ja
loop
ja
scas
xchg
cmpb
insl
inc
ljmp
pushl
dec
shll
rclb
jo
mov
inc
je
fisubs
mov
arpl
mov
shlb
sub
pop
je
inc
repz
test
xchg
adcl
int
out
xor
pop
imul
pop
push
ds
call
int
push
cmp
sbb
and
addr16
popf
push
sbb
cwtl
and
cmpsb
cwtl
aam
sbb
lret
jg
cld
addr16
lock
sub
shll
lods
stos
enter
mov
les
inc
cmp
cmp
test
ret
cmp
stos
jl
mov
jns
xchg
jae
cli
pushl
pop
loopne
movsl
addr16
add
scas
jbe
xchg
lock
aad
or
insl
cmp
sbb
scas
scas
jo
stc
sbb
scas
adc
mov
filds
sub
ds
out
sub
clc
jp
scas
in
push
outsb
in
and
cmpsb
and
jmp
xchg
insl
hlt
pop
xlat
xor
out
rcll
out
es
or
dec
push
dec
add
dec
xchg
pusha
cmp
and
sub
jo
mov
mov
push
in
popa
imul
jbe
dec
push
insl
ds
jg
out
push
lods
adc
lock
and
sbb
std
adc
dec
xchg
or
push
enter
push
js
imul
stc
arpl
orb
mov
xor
lea
pop
outsb
outsl
scas
loop
dec
mov
lret
in
aam
pop
add
add
and
ret
scas
stos
cmp
jnp
sub
ret
cld
sbb
pop
cs
xor
hlt
cmp
jae
int3
divb
cli
shrl
push
cs
int3
aam
hlt
je
mov
ret
nop
pop
roll
cmp
or
pushf
push
leave
notl
mov
das
mov
out
cld
loop
xchg
repnz
into
in
push
jbe
lods
adc
lret
out
int3
daa
push
pop
jne
push
xor
jo
mov
or
sub
lret
push
sub
lea
mov
arpl
sub
std
xor
insl
out
jno
dec
ret
test
loop
jecxz
jle
scas
add
jno
push
push
cmp
sbb
mov
sbb
jbe
sub
dec
mov
mov
pop
prefetcht0
and
mov
into
loop
xor
mov
testb
out
mull
pusha
call
inc
addl
stc
mov
cmpsb
add
or
stos
ljmp
hlt
in
nop
add
add
pop
sub
add
jmp
test
xor
movsb
inc
sub
add
mov
ret
mov
jp
outsl
jle
inc
divb
pop
icebp
sub
sahf
in
rclb
add
mov
outsl
ja
or
wrmsr
into
mov
push
mov
divb
inc
xchg
pop
loop
test
pop
xchg
cltd
mov
sub
pop
xchg
outsl
stos
mov
loope
inc
mov
lock
push
rorb
rcr
fsubr
sub
aas
lds
fwait
or
xchg
inc
adc
imul
pop
in
sbb
pop
add
push
in
adc
mov
out
cmp
inc
jecxz
es
mov
sub
aam
dec
roll
push
dec
test
jb
add
adc
jg
insl
ret
adc
jle
rcll
xchg
into
xchg
mov
js
dec
cld
push
je
mov
push
pop
mov
divb
aaa
mov
shll
roll
mov
jg
popa
xor
shl
xchg
adc
jo
inc
sub
arpl
push
inc
loopne
sahf
jle
je
mov
out
dec
adc
push
stc
dec
or
out
or
hlt
sbb
sub
or
in
add
and
jae
stc
roll
push
testb
adcl
rclb
xchg
fbld
and
loopne
test
mov
notb
js
je
jne
or
ja
inc
lret
pop
stos
xor
hlt
aad
aaa
jnp
or
loope
daa
test
movsl
mov
imul
loope
and
dec
pop
jo
idivl
hlt
cmpsl
nop
add
push
fwait
stc
sub
popa
insl
je
es
cld
mov
loopne
cmpsl
ret
dec
add
jl
adc
sbb
cmp
stc
cld
ds
mov
inc
in
test
insb
adc
xor
cmp
imul
xor
push
aad
call
sub
inc
out
sub
in
aad
mov
aad
test
or
out
adc
insl
mov
sbbl
jp
jbe
jmp
mov
leave
and
cld
jmp
dec
in
xchg
push
ret
push
or
add
jmp
ljmp
or
or
sbb
add
repnz
or
aad
fisttpll
fwait
or
popa
inc
cmp
sbb
jo
lea
nop
popf
iret
lock
int3
lock
insl
cmp
lods
je
clc
mov
push
pop
lods
ror
mov
jmp
rcr
js
in
add
bound
imul
std
out
jae
jo
imul
jnp
imul
jp
add
push
sub
imul
xchg
cs
repz
in
push
adc
or
cmp
out
into
je
lock
mov
mov
sub
inc
ret
add
ret
scas
loope
xor
sarb
mov
and
es
fsubrl
add
dec
sub
lret
dec
scas
cmpsl
loope
outsl
sub
lods
inc
lret
enter
into
fs
faddl
mov
sbb
add
jp
push
je
xchg
push
mov
cmp
lods
fwait
test
stos
xchg
adc
out
in
jg
dec
push
xor
sub
cmp
dec
mov
loop
xor
dec
in
adc
jno
and
xor
push
shrl
pop
sub
mov
enter
testb
add
pop
in
shl
lds
dec
js
enter
jp
xor
mov
sub
fwait
mov
inc
xchg
int3
fsts
sub
repnz
pop
pop
cmpl
repnz
jo
test
dec
repnz
in
and
aaa
int
int3
and
loopne
ret
int3
negb
pop
jnp
jbe
in
sub
cmp
add
push
lret
ret
std
add
popa
loope
xor
push
jmp
dec
shlb
out
je
lea
rorl
faddp
scas
jl
jae
aas
add
sbb
mov
test
cmp
lret
in
cld
out
daa
loope
scas
pop
pop
outsl
insl
outsb
push
adc
add
in
mov
pop
bound
lods
pusha
shlb
jbe
repnz
cmp
xchg
jmp
pop
ss
imul
dec
add
iret
outsl
out
and
adc
push
ja
jmp
lret
or
shrb
adc
pop
cltd
push
push
jb
sti
notl
mov
push
daa
call
jae
add
outsb
push
sbb
add
das
adc
or
dec
jb
push
mov
jno
push
ret
dec
lods
lret
cmpl
lret
lcall
push
dec
jmp
xlat
imul
jo
jmp
push
test
outsl
or
inc
adc
adc
loopne
jae
pop
dec
jmp
push
jnp
shl
mov
dec
stos
inc
sahf
inc
dec
dec
out
sar
jl
sbb
in
add
lock
hlt
jbe
cmpsb
dec
int
pop
xchg
dec
jnp
sbb
mov
pop
clc
inc
stos
dec
sub
popf
out
pop
test
stos
fnstsw
insl
xor
das
add
outsl
sbb
lret
dec
add
adc
out
mov
inc
repnz
out
dec
fucomp
jb
or
jge
rcll
hlt
dec
pop
add
pop
sub
adc
xchg
dec
pop
pop
fildl
xchg
cmp
add
insl
xchg
sbb
xor
or
and
dec
jae
in
lods
loop
imul
mov
dec
jp
fs
mov
sarb
push
in
imul
insl
fldt
xchg
mov
test
ret
daa
rcll
in
dec
jno
aam
pushf
out
inc
jne
outsl
insl
popf
jle
rorb
pop
das
sbb
ffreep
gs
call
push
xchg
pushf
fwait
push
mov
adc
dec
xchg
pop
outsl
test
ficoms
cli
rcrw
in
out
test
and
imul
or
cmp
daa
xchg
int3
inc
xor
loopne
out
cltd
sub
pop
addr16
jl
adc
daa
test
inc
or
lea
cmc
xorb
pop
loopne
mov
js
sub
lret
lock
sub
sub
jbe
xor
push
aad
xor
jmp
insb
xor
or
adc
in
imul
mov
lret
xor
push
jmp
addr16
iret
push
cmp
pop
jns
and
mov
pop
je
int
addr16
pop
call
inc
fldcw
adc
dec
sub
das
adcb
push
cmp
enter
mov
in
xor
repnz
or
je
into
jp
or
lock
xor
or
dec
adc
mov
cmp
out
or
xor
adc
fbstp
clc
pusha
mov
pop
sub
enter
mov
insb
divl
insl
or
cmpsl
out
out
mov
clc
call
bound
loope
es
in
in
adc
daa
xor
call
insl
fs
loope
jo
loope
xor
insb
fs
cmpsl
imul
mov
cs
jp
into
cmp
dec
outsb
lea
in
or
insb
test
hlt
pop
out
pop
jbe
jo
adc
and
xchg
icebp
jge
push
fs
loopne
test
inc
xchg
pop
test
test
insl
inc
enter
cld
in
dec
sbb
imul
cs
xchg
cmpsb
pop
pop
jo
addr16
imul
iret
dec
mov
cmp
adc
loop
push
ror
in
pop
jae
frstpm(287
xchg
and
jo
pushf
jb
add
pop
dec
imulb
mov
push
adc
outsl
mov
into
std
aaa
shl
cld
jb
data16
test
cmpsb
sbb
pop
jno
imul
es
or
push
iret
mov
sub
scas
push
and
mov
loope
scas
mov
or
inc
orb
and
push
add
mov
std
xor
cmp
fimuls
adc
add
rol
paddusb
xor
arpl
sbb
and
pusha
mov
xchg
ljmp
pop
add
sub
jmp
sub
mov
add
adc
lds
stos
rorb
in
and
xor
jg
pushf
in
insb
xor
shrb
adc
test
or
mov
call
push
push
shl
mov
orb
push
mov
or
mov
and
pushf
cmpsl
mov
push
int
dec
mov
and
dec
cmp
jg
and
shrb
and
insl
popl
sbbb
xlat
xor
mov
xchg
arpl
mov
in
into
pusha
dec
inc
es
out
dec
fs
call
xorl
and
cmp
imul
sarb
subl
sbb
idivb
xor
orb
dec
dec
outsb
jg
test
jg
cld
in
sub
scas
xor
or
test
cld
cmpsb
mov
pop
or
repz
mov
inc
sbbl
pop
push
scas
inc
call
ljmp
push
das
in
push
loope
mov
in
test
adc
cltd
push
dec
in
roll
adc
scas
add
jo
dec
sub
in
das
jbe
dec
or
inc
cmpsb
data16
sub
pop
sub
shlb
adc
push
adc
stc
jg
push
sbb
pop
pop
pusha
loop
sti
mov
call
repnz
mov
das
add
xchg
dec
mov
inc
pop
ret
and
out
imul
xor
addb
xor
cmpsl
ret
lret
shr
push
outsl
je
jg
lds
daa
pusha
add
and
jg
jae
lcall
in
lods
and
xchg
jns
clc
and
in
lock
xchg
jecxz
test
inc
push
cmpsb
dec
add
std
mov
inc
loop
jmp
push
sub
das
dec
xor
pushf
pop
out
cmp
icebp
int3
rcll
cmpsb
outsb
data16
pop
in
in
mov
dec
daa
xchg
out
inc
xchg
loopne
fstl
add
ret
mov
je
or
mov
out
stos
repnz
fstl
cmp
push
ljmp
push
jbe
jecxz
push
icebp
pop
insb
sub
aas
out
jno
push
sub
addr16
lock
jo
or
pop
sbb
jmp
pop
sbb
sub
jae
repnz
hlt
fsubrs
sbb
int3
inc
inc
das
insl
pop
in
outsb
inc
out
arpl
jae
iret
sub
cmp
dec
jb
insb
push
in
sub
stos
or
imul
lret
or
shll
sub
rolb
lea
and
aad
xchg
add
out
mov
repz
outsl
sub
out
inc
out
outsl
loop
les
std
out
mov
sarb
pop
in
stos
loopne
cmp
push
mov
jb
sbb
mov
inc
lods
sub
aas
fstps
mov
movsl
cmp
je
aam
shl
imul
or
push
inc
je
pop
in
test
test
push
mov
inc
insb
push
jge
xchg
cwtl
push
daa
sbb
cmp
outsl
js
cmovns
aaa
xor
cltd
je,pn
and
int3
or
bound
mov
jne
nop
arpl
and
mov
cmpsb
fldl
and
sub
les
dec
or
mov
js
push
cmc
jo
mov
add
ja
sahf
mov
insl
shll
jnp
aas
sbb
xor
ret
sbb
jg
fstl
inc
inc
and
enter
adc
popa
xchg
inc
scas
loopne
mov
add
fs
jmp
aaa
push
mov
sbb
lcall
outsl
mov
mov
and
das
aad
mov
sub
mov
andl
jl
xchg
inc
in
push
or
stos
ds
loop
pandn
sub
das
mov
sub
es
jne
sbb
fs
iret
scas
xor
pushf
xchg
xor
int3
sub
pop
hlt
xchg
ret
insb
lahf
cld
clc
pop
inc
insl
jl
sub
dec
call
add
repnz
scas
lea
test
fmull
lcall
sub
or
movsb
cmp
into
cwtl
dec
dec
and
cmova
jbe
or
add
cmp
in
lret
jle
add
push
jnp
and
mov
ds
push
leave
cli
jne
jmp
ljmp
shrb
shlb
je
iret
push
aam
sub
repz
push
addr16
adc
jg
jmp
das
sub
mov
enter
xor
aad
push
into
push
in
sbb
out
loopne
ror
adc
and
clc
repnz
pusha
mov
out
bound
mov
loop
pushf
ret
ret
xchg
out
enter
in
pop
and
out
int3
cltd
mov
addr16
int
ljmp
in
dec
pushf
int3
xor
inc
scas
pop
je
inc
cwtl
or
call
pop
rcrb
mov
inc
jae
jecxz
add
push
push
mov
jle
movsb
loope
pop
int
je
sbbl
icebp
ss
mov
shlb
loop
lods
enter
int3
add
rclb
xchg
or
dec
pop
insl
into
mov
cs
sbb
mov
mov
or
mov
dec
loop
into
mov
addr16
inc
imul
daa
outsb
dec
dec
repnz
out
mov
popa
sahf
jbe
sub
push
lahf
jns
int
out
lock
xlat
dec
sti
xor
cmp
pop
adc
test
dec
or
out
jle
push
mov
adc
pop
cltd
fptan
insb
es
ret
push
test
add
into
sub
cmpsb
subb
idivb
xchg
sbb
cmc
movsl
mov
push
loopne
adc
inc
add
stos
jecxz
inc
insl
arpl
mov
loop
scas
push
sub
ljmp
add
shlb
cwtl
adc
in
inc
push
out
arpl
xchg
xor
insl
out
mov
in
shr
push
and
imul
lret
daa
jmp
aas
je
andl
outsl
insl
pusha
in
call
imul
mov
jle
mov
push
inc
aaa
insl
and
xchg
call
xchg
loop
sbbl
cs
adc
outsb
call
clc
push
or
je
and
shll
addr16
out
enter
ja
push
faddp
dec
mov
and
add
ja
add
add
leave
loope
testl
inc
pushf
cmp
nop
subb
faddl
inc
lock
cmp
jg
shll
sub
ret
outsl
insb
push
shlb
insb
mov
cs
test
xor
push
test
xchg
mov
jmp
add
lods
cli
pusha
push
rcll
hlt
or
bound
mov
inc
out
lods
adc
mov
aam
mov
inc
inc
in
add
jg
xchg
cmp
movsb
rorb
aam
sub
ret
mov
mov
dec
pop
cmp
pop
adcb
add
pusha
imul
cmp
shll
xchg
dec
jle
mov
ret
mov
gs
cli
iret
add
outsb
adc
mov
sub
rorl
push
out
mov
iret
jle
inc
leave
push
lahf
outsl
out
adc
lds
xorl
rcrl
mov
das
neg
or
add
cmpsl
and
nop
or
ret
cmp
push
sbb
xchg
jb
add
push
popf
inc
cmc
adc
out
andl
xor
pop
push
cmp
xchg
sub
in
shrl
lods
fcoml
stos
cmp
shlb
inc
lea
push
xor
pop
lock
popa
gs
ret
lret
dec
loope
aam
cmpl
popf
out
and
jp
mov
xor
xchg
or
in
or
ficoml
jb
insl
and
xchg
ret
pusha
xchg
imul
imul
mov
mov
sub
sub
jge
nop
xlat
out
pusha
insl
stos
lods
push
loop
adc
xchg
mov
test
pusha
test
shl
out
je
test
jbe
sbb
out
xor
rcll
lods
insl
daa
cltd
js
cmova
pop
sbb
leave
pop
sub
push
add
pushf
decb
in
cmp
ret
addr16
or
mov
mov
cmp
pcmpeqb
mov
add
push
scas
pop
adc
dec
scas
fwait
cmc
shrl
enter
mov
push
or
mov
fsubrs
outsb
cmpsl
mov
shlb
push
jae
je
xchg
daa
icebp
and
nop
scas
and
or
ret
jge
jb
mov
daa
xchg
stos
in
mov
add
or
fnsave
imul
jmp
cmp
ljmp
mov
xchg
popaw
out
pop
xchg
inc
mov
insb
mov
dec
sbb
in
insb
je
or
fisttpll
out
mov
je
lret
out
loope
lods
xor
jb
lahf
adc
testl
adc
add
popa
xor
push
xchg
cwtl
pop
out
cmp
and
mov
loopne
jl
xchg
xchg
inc
xchg
mov
call
sub
shl
jb
fwait
pusha
sub
sub
mov
loope
mov
xchg
test
or
sub
push
fisubl
pop
mov
and
lds
dec
inc
scas
add
les
test
cmpl
popa
adc
scas
test
out
lcall
jo
out
pop
push
iret
add
or
outsl
jle
gs
lret
or
lock
punpcklbw
fcoms
dec
std
mov
cmp
call
leave
inc
lret
lock
out
push
lock
pop
mov
mov
imul
fimuls
addr16
pop
cmovle
out
addb
add
dec
je
pop
setno
pop
pop
daa
out
cmp
int
sub
sahf
enter
adc
adc
in
jmp
inc
in
ljmp
test
mov
imul
imul
jno
fsubrl
fisubrs
sti
loop
ja
aaa
outsl
inc
dec
mov
add
push
xor
cwtl
jne
push
push
cmp
enter
call
cmp
mov
stos
shll
sub
sub
mov
dec
enter
call
dec
js
and
sub
adc
pusha
push
stos
mov
jl
mov
jle
jb
or
add
inc
jge
repnz
mov
push
push
add
out
push
loop
in
cmp
test
and
add
mov
ljmp
outsb
jbe
xor
pop
cmc
sbb
jp
test
push
push
mov
pop
jnp
ret
xor
lock
sbb
out
sbb
jo
movsb
mov
sbb
push
jmp
inc
idivl
js
pop
shl
jg
or
sbb
out
dec
cmc
cmp
sbb
sbb
adc
icebp
call
jge
xchg
lock
out
loopne
leave
fimull
pop
jecxz
xor
and
out
sbb
mov
mov
dec
lock
iret
je
xlat
outsb
repnz
lret
xor
jg
cmc
lds
or
push
inc
vprotb
pop
test
cld
ret
jne
int3
adc
lock
xchg
pop
repz
adc
test
test
icebp
mov
xchg
sub
arpl
repz
or
incl
pop
pop
sbb
pushf
outsl
mov
inc
mov
sub
mov
outsl
sbb
dec
jo
xchg
mov
js
mov
mov
jo
and
sbb
dec
in
lock
outsb
jo
das
pusha
push
jmp
clc
sub
div
ret
add
or
jne
push
js
insb
jo
int3
jmp
inc
push
add
iret
out
aaa
aaa
mov
push
shll
movsb
adc
sub
add
cmp
loop
jbe
and
xor
ret
xchg
ljmp
jns
test
adc
mov
inc
das
test
shrb
fimull
int3
aaa
xchg
inc
out
loop
fnsave
inc
or
lret
aas
xor
enter
xchg
adc
pop
loopne
das
push
add
loop
xor
cli
mov
and
jl
sbb
inc
dec
or
add
mov
dec
sub
adc
insb
sbb
cld
in
or
push
lret
inc
mul
jne
testl
in
xchg
dec
int3
xor
int3
push
xchg
push
jb
sub
push
insb
adc
loope
push
xor
movsl
je
shlb
nop
fbstp
push
lcall
sahf
in
xchg
jge
out
mov
mov
pop
sub
addr16
cltd
test
push
ret
push
pop
aad
cltd
in
cmp
sarl
adc
or
idivl
mov
rcl
and
scas
sub
popa
sbbl
fcoms
ret
xchg
sbb
jno
jo
je
adc
out
es
add
mov
dec
push
push
stos
mov
jl
imul
dec
clc
pop
rcll
es
fistpll
or
push
mov
repnz
insl
out
ljmp
pop
sub
rcl
lock
cmp
je
cmp
push
je
js
mov
repz
imul
dec
cli
into
rorl
fs
ret
push
xchg
out
dec
das
xchg
test
insl
push
pop
ljmp
into
cmp
lods
repz
ljmp
dec
adc
cmp
xor
out
xor
pop
mov
rorb
sub
loopne
dec
enter
mov
insb
js
xor
icebp
mov
or
insl
pusha
adc
arpl
and
outsl
adc
and
xor
jg
inc
test
test
js
mov
pop
aam
sbb
add
add
xor
enter
xor
fdivs
out
jle
popa
fs
dec
cltd
outsl
testb
cmp
or
dec
and
out
out
fsubrl
cvtps2pi
mov
outsl
sbb
je,pt
stos
jp
mov
testl
dec
cmp
les
or
xor
mov
xor
adc
lret
in
mov
and
adc
insl
push
lods
rorl
push
cld
es
insl
repz
dec
insb
orb
data16
popa
in
js
repnz
cmpsl
or
jns
pop
daa
nop
dec
jg
ret
xchg
adc
add
push
push
out
xor
pop
movsl
dec
call
sti
jb
mov
pop
ljmp
loop
jg
cmp
je
test
test
cmc
push
mov
jae
jmp
cld
mov
jecxz
add
push
loop
push
std
outsl
lock
nop
into
enter
jg,pn
inc
aad
jno
dec
dec
and
fs
jns
testl
mov
gs
arpl
lahf
insb
rorb
popa
clc
dec
jmp
jmp
jmp
enter
nop
mov
icebp
and
pop
pusha
in
lds
in
pusha
lds
movsl
movsl
repz
xor
sub
push
cmc
and
and
add
lds
in
sbb
imul
sub
or
sub
fxch
adc
clc
lahf
in
sub
dec
jg
sub
lahf
mov
in
xor
es
lock
outsl
sub
xchg
or
insl
in
out
popa
add
inc
jle
cwtl
cmpsl
insl
xor
sbb
bound
mov
cwtl
imul
call
or
mov
mov
sarl
jnp
test
das
loop
int
cmp
xchg
stos
jnp
enter
dec
jg
sbb
jle
je
inc
bound
push
lods
xchg
and
add
sbb
in
cli
mov
gs
insb
out
enter
cwtl
push
lods
js
adc
add
sbb
insb
lods
int3
dec
aad
xor
xor
pop
ljmp
and
inc
push
mov
jle
jnp
das
nop
hlt
jb
xchg
push
icebp
ret
dec
out
inc
je
jp
jae
mov
rcll
fs
out
scas
lods
and
xchg
call
das
jnp,pn
das
xchg
dec
test
add
es
adc
inc
lock
loope
outsb
push
out
stc
test
subl
sub
js
dec
daa
test
and
inc
shrb
pop
push
cmp
int3
sub
mov
or
jns
lret
and
insb
cmp
mov
mov
std
test
xor
adc
lods
or
push
adc
repz
std
and
inc
bound
sbb
push
cmpsb
in
pusha
push
xor
test
or
arpl
mov
xchg
push
fcomp
mov
mov
push
ljmp
xor
pop
mov
out
lock
jmp
lds
std
pop
fs
xchg
xor
fsubr
push
sub
jle
adc
in
mov
jmp
insb
mov
mov
lret
push
dec
shr
out
mov
push
inc
cwtl
testl
fistpll
les
ljmp
and
jb
cmpsb
mov
push
insl
xor
jmp
call
inc
sahf
orb
jne
das
jmp
jb
and
push
jbe
in
cmc
das
lea
sub
arpl
push
aaa
jb
in
push
add
in
mov
cmp
or
in
add
into
in
add
jl
and
pusha
addr16
ret
ficompl
pop
loopne
mov
pop
or
clc
or
je
xchg
js
adc
aam
dec
out
bound
add
inc
jg
cs
in
cmpsl
aas
mov
dec
pop
push
pusha
mov
push
jl
loope
enter
xchg
xchg
push
mov
cs
out
hlt
lds
add
stc
inc
push
sahf
pop
lods
or
stos
das
outsl
xchg
sub
inc
dec
inc
cmp
dec
insb
push
into
out
iret
dec
xchg
dec
cwtl
mov
pop
arpl
pop
scas
lods
scas
out
aaa
jb
pop
outsl
ds
out
stos
and
jp
ja
mov
ret
in
shrb
dec
mov
dec
into
sbb
icebp
xchg
lods
jmp
out
xor
cli
xchg
inc
mov
imul
in
cmp
push
mul
call
inc
popa
orb
push
jb
lock
push
xor
dec
cmpsl
jo
pop
push
rolb
sbb
adc
dec
clc
sahf
jb
dec
push
lods
push
and
push
popf
jp
mov
mov
push
xlat
in
test
push
inc
xor
movsl
xchg
cmp
push
or
mov
add
sub
fcoml
test
push
and
mov
jmp
mov
addr16
insl
fbld
pop
mov
push
pop
outsb
sub
outsb
roll
fdivrl
push
sbb
push
mov
lock
into
dec
pop
ljmp
icebp
call
sub
pop
out
out
clc
xor
cltd
popf
cmp
cwtl
pop
out
popa
cmp
fldl
das
pop
xor
adc
dec
xor
bound
ret
inc
jnp
inc
icebp
lock
sbb
aad
push
inc
push
inc
out
add
mov
xchg
cmpsl
out
cwtl
lahf
sbb
add
out
or
dec
outsl
and
and
dec
or
inc
push
out
add
dec
insl
lock
sahf
add
lock
dec
xchg
fsubrl
test
jle
or
aas
movsl
dec
fs
into
jp
aas
mov
aas
pusha
test
push
lock
xchg
dec
int
out
or
mov
push
add
lods
sub
out
mov
xor
push
jl
jno
or
push
pop
outsl
xchg
inc
push
shr
cwtl
aas
mov
inc
and
jg
mov
icebp
fucomi
divl
int3
shll
loope
into
insl
sub
in
mov
arpl
test
fdivs
sub
aam
push
arpl
insl
lods
push
gs
in
add
or
xor
loop
pop
jo
pushf
and
mov
nop
test
cmp
inc
ljmp
pop
ljmp
jns
in
lods
shrb
mov
pusha
add
cmpsb
dec
sub
movsl
fs
sbb
jo
addr16
add
insl
add
in
cs
or
movsl
xchg
jns
mov
xor
insl
popf
gs
or
ffree
or
aaa
inc
jmp
cld
push
outsl
adc
adc
int
popl
jo
dec
xchg
inc
mov
inc
xor
dec
adc
dec
ljmp
sub
push
ljmp
sub
int
in
dec
or
sub
push
jge
push
aas
push
imul
sbb
ljmp
pusha
or
pusha
adc
dec
lahf
out
leave
push
and
or
dec
in
dec
push
adc
mov
mov
mov
cmp
cmpsb
mov
dec
xlat
or
dec
mov
dec
xor
test
in
pusha
jae
sti
decl
xchg
lret
push
push
je
xor
jnp
into
mov
js
out
or
in
jg
outsb
jg
pop
xchg
ss
daa
cmpl
stos
out
clc
xor
jmp
mov
ffreep
psraw
cmp
mulb
cmpsb
push
inc
lds
leave
xor
add
sub
adc
imul
insb
mov
jp
outsl
jne
push
add
out
insb
clc
jp
loopw
in
jnp
sub
jle
cmp
fidivl
stc
orb
idivl
add
xor
or
mov
mov
push
pop
nop
cmp
imul
and
loop
testb
es
ja
fimuls
ljmp
add
fldenv
mov
lods
ljmp
cmp
insb
dec
lock
jecxz
jne
rcr
out
loopne
mov
lret
out
cltd
shrb
mov
inc
mov
out
imul
mov
xor
jmp
push
ljmp
lock
jg
push
pop
lods
sahf
inc
dec
out
jmp
inc
jmp
sbb
jecxz
push
and
ljmp
inc
in
out
jo
rolb
dec
sbb
enter
sub
or
push
js
shrl
arpl
or
inc
aad
lret
into
push
pop
cmp
je
xchg
pop
mov
cmp
xor
pop
sub
in
in
sbb
ja
mov
mov
or
jns
pop
push
stos
in
adc
dec
enter
or
mov
out
dec
jp
jmp
mov
bound
xor
out
je
mov
bnd
xor
stos
frstor
sbb
imul
add
push
jmp
dec
inc
inc
js
rcll
andb
int
add
das
xor
or
fxch
jg
and
imul
insb
pop
out
in
je
sbb
pop
cmp
and
mov
and
leave
popa
out
mov
lret
repz
in
in
jne
xchg
outsl
insb
push
into
adc
in
dec
clc
pop
adc
call
cmp
cs
ljmp
jmp
roll
es
sbb
mov
mov
pop
xchg
push
call
xchg
rcrl
mov
outsb
jle
add
mov
jae
unpckhps
outsl
xor
loop
das
das
jmp
jb
popl
imulb
imul
xor
shr
push
jae
adc
adc
icebp
xchg
das
lock
cmp
or
jb
xlat
sub
out
lret
shr
mov
flds
jo
leave
push
pop
ljmp
repz
insb
pop
in
fistps
int
push
pop
push
int3
adcl
sub
mov
int
das
pop
ret
ljmp
xor
push
push
mov
das
inc
and
or
xor
outsb
mov
or
xchg
sub
xchg
js
iret
scas
test
insb
lret
outsl
jnp
enter
data16
push
push
push
loop
lret
add
dec
insl
orl
movsb
leave
adc
push
shlb
xchg
in
ja
lods
xchg
mov
xor
sub
pop
adc
push
fs
mov
loop
int
popa
rcrl
das
lcall
adc
shlb
mov
das
popa
cmp
cmp
aaa
lret
into
out
inc
push
xchg
sub
ficompl
imul
lret
out
add
shlb
pusha
js
enter
xor
ret
jg
daa
push
js
push
inc
popa
iret
sub
mov
adc
in
push
ss
adc
inc
jle
daa
mov
pop
sub
push
xor
je
inc
dec
aaa
into
push
push
pop
loop
dec
mov
outsb
sub
iret
roll
loopne
mov
je
shl
shlb
imul
out
adc
push
push
pop
or
jmp
shll
imul
sbb
data16
push
and
push
jae
jmp
je
icebp
incl
push
inc
mov
inc
les
mov
in
cs
fcoms
jb
inc
and
pusha
imul
pop
xchg
sub
shlb
je
push
js
leave
insb
pop
int3
popf
add
jp
inc
inc
add
mov
int
dec
in
loop
mov
scas
in
in
push
jmp
cwtl
ljmp
jecxz
das
sub
fwait
sbb
ljmp
and
dec
adc
jnp
or
stos
push
dec
xchg
ss
fiaddl
stos
xor
cmp
in
inc
xor
cmp
mov
xchg
jo
add
jne
movsb
inc
inc
testb
pop
gs
jae
lock
add
jmp
dec
xor
je
adc
stc
popa
pop
lds
dec
jo
xchg
lods
insb
fwait
mov
fidivl
aad
mov
nop
cmc
cwtl
insl
sahf
repnz
add
jle
shrb
mov
xchg
jnp
jp
sbb
jg
mov
mov
pop
push
or
loope
jp
cmp
push
lds
ljmp
popf
xor
into
pushf
les
push
mov
loopne
mov
cmpsl
cmc
push
push
das
into
xchg
movaps
jmp
popa
int3
jp
mov
mov
icebp
xor
std
insl
xor
mov
daa
mov
push
push
lret
push
xchg
pop
ja
cmpb
dec
sub
ja
sub
and
aam
push
in
lahf
lods
imul
inc
cmpsl
sub
push
insl
adc
ffreep
les
xchg
iret
outsl
cmpsl
fistl
mov
imul
scas
dec
inc
int3
or
push
fcmovnu
shrl
je
push
push
rcrl
cmpsb
out
stc
out
mulb
movsl
aaa
iret
ja
imul
dec
pop
sub
cltd
xchg
ja
insl
mov
shrb
nop
jecxz
fnstsw
jbe
sub
imul
movl
adc
cmp
jp
notb
lods
sbb
clc
les
and
jp
stos
pop
add
mov
cli
dec
data16
push
movhps
mov
fcmove
cmp
outsb
jmp
aas
pop
sub
outsb
adc
xorl
mov
mov
out
hlt
mov
adc
fsubrl
hlt
mov
jmp
cwtl
out
imul
jmp
inc
sbbb
cmp
sub
dec
lea
dec
insl
shlb
xor
jo
cli
test
call
js
cmp
sub
out
enter
push
int3
adc
jl
push
out
das
rclb
adc
sub
cmpsl
mov
icebp
add
push
dec
mov
or
sbb
scas
add
test
pop
int
enter
test
sbbl
mov
mov
mov
xor
ror
or
test
xchg
popf
shlb
pop
lock
sub
dec
imul
fwait
repnz
mov
movsl
je
pop
xor
jmp
shrb
push
and
pusha
insl
daa
pop
cwtl
inc
mov
cmp
jo
jl
push
adc
add
sub
lcall
or
imul
loopne
push
sub
fwait
or
jb
out
jb
loopne
dec
enter
das
or
cmc
push
iret
arpl
aam
xlat
call
scas
icebp
cmp
ret
jo
fs
insb
imul
dec
and
into
fwait
loope
fsubrs
adc
cltd
clc
jmp
inc
divl
push
mov
inc
out
ds
or
and
out
mov
clc
pop
clc
data16
rol
mov
arpl
xor
in
mov
iret
mov
push
lea
dec
std
stos
repnz
dec
xchg
fsubrs
testb
call
daa
sub
or
out
sub
mov
push
cwtl
enter
mov
mov
cmpsb
rclb
or
jp
mov
add
jb
xor
movsl
cmp
call
dec
mov
jbe
pop
dec
pop
out
es
addr16
cwtl
cmpsb
je
test
out
es
outsb
call
jb
out
fistl
insb
jge
sti
adc
mov
mov
mov
lds
cmpsb
call
cmpsb
jmp
ljmp
pop
je
sbb
dec
into
out
outsb
clc
popf
int
adc
cmc
push
mov
stos
mov
add
and
inc
gs
lret
mov
mov
mov
js
filds
sti
out
out
repz
scas
jne
hlt
or
outsb
inc
lock
aam
movb
cmp
jnp
js
imul
das
test
andl
je
cld
xor
xlat
sub
stc
mov
push
js
out
mov
pop
mov
js
add
xchg
lret
xchg
pop
and
cmpsl
test
es
dec
sti
lret
or
jo
xchg
pop
insb
and
lock
ficoml
stc
insb
fisubs
inc
out
push
lds
mov
das
dec
je
cltd
jg
loop
ficomps
inc
cmp
and
ffreep
pop
aad
jge
stos
fdiv
pushf
movsl
out
inc
cwtl
inc
add
mov
pop
pop
or
daa
jb
call
in
cmpsb
gs
mov
sub
add
pcmpeqb
flds
inc
adc
cmp
orb
out
jmp
mov
lock
arpl
outsl
cld
icebp
psubd
cs
out
and
push
mov
lock
repnz
jecxz
les
or
stc
jne
int3
mov
int3
add
in
sub
mov
push
out
iret
xchg
xchg
push
add
leave
lds
in
xchg
jo
inc
cmp
pushf
divb
mov
call
sahf
jg
xchg
nop
and
cltd
or
imull
or
lahf
out
sbb
cld
cmp
xchg
push
rolb
and
push
xchg
sbb
xchg
outsl
inc
lea
data16
insb
lcall
imul
or
xor
xor
cmp
lss
xchg
jns
pusha
or
ss
and
data16
mov
add
int3
add
mov
in
repz
shl
mov
repz
decb
leave
in
pop
aaa
and
sti
or
add
pushl
push
pop
or
loopne
loop
add
outsb
adcb
mov
or
or
test
and
call
sub
xor
lock
in
shrl
dec
inc
dec
enter
xchg
shrb
sub
aad
push
decb
xchg
sti
cmp
stos
and
cmpsb
mov
shr
loop
dec
and
adc
jg
xchg
jns
lds
mov
sub
or
fisttpl
insb
cmp
lods
sub
outsb
shrb
ret
hlt
and
dec
test
and
adc
in
xlat
imul
pop
adc
mov
add
pop
and
jg
mov
into
jle
jne
xor
out
scas
jmp
add
sub
test
ljmp
mov
push
sahf
xchg
or
fdivl
das
mov
out
sbb
cs
mov
popa
shrl
int3
and
icebp
cmp
insb
addr16
ljmp
pop
push
mov
adc
sub
adc
int3
cmp
loopne
jl
xor
cmp
loop
out
popw
sbbb
mov
sub
std
xchg
push
push
je
cmp
arpl
sbb
addr16
addr16
mov
sub
jecxz
insl
mov
cwtl
movsb
sahf
das
fildl
push
push
jg
scas
or
adc
cwtl
add
mov
je
push
lods
andb
push
xor
or
add
mov
jg
int
in
mov
push
jae
js
test
push
roll
jle
pop
mov
jb
mov
daa
jecxz
mov
out
outsl
cmpsb
insb
loope
out
int3
loop
in
loop
stos
sti
sarl
or
xchg
stos
loop
mov
mov
adc
fs
mov
test
gs
mov
pop
js
jo
xor
cmp
sub
dec
xor
sub
divl
adc
lods
inc
mov
frstor
xchg
out
inc
addr16
mov
jae
xchg
inc
loop
inc
fs
cmp
sbb
out
ljmp
loopne
and
sub
into
and
dec
push
lods
pusha
sbbb
test
mov
dec
clc
inc
test
xlat
sbb
add
adc
fucomi
dec
xchg
mov
jp
mov
in
xor
push
mov
adc
jg
scas
push
mov
jle
inc
fwait
or
push
jne
or
jbe
test
scas
inc
add
scas
int
loopne
fwait
js
jg
push
mov
outsl
repnz
inc
cld
out
jge
in
cmp
dec
mov
bound
dec
cmp
jp
jnp
xchg
sahf
inc
adc
mov
pop
pop
addr16
mov
mov
sbb
cmp
fs
dec
lock
or
ljmp
and
adc
jge
jg
sahf
insb
loopne
rorb
pop
js
push
icebp
fists
pusha
mov
fwait
stos
int
lock
sbb
adc
or
pop
cmp
iret
lock
ljmp
mov
fistl
sbb
mov
stos
sbb
adc
js
pop
rcll
cmp
and
mov
sbb
jae
dec
sub
jge
jle
data16
sub
dec
xlat
inc
add
xchg
sub
lods
jns
cmp
push
std
inc
pusha
xchg
dec
cli
or
dec
cmp
cmpsb
add
leave
imul
subl
orps
shl
sahf
push
inc
loop
push
mov
lods
pop
fiadds
gs
loop
push
sahf
fstl
movsb
pop
pushf
hlt
lahf
rcr
jle
xchg
mov
filds
in
adc
mov
pop
nop
mov
std
or
jle
jecxz
mov
sub
push
mov
sub
and
psubsb
insl
outsb
cmp
cld
in
push
push
je
cmp
inc
mov
cmc
sub
psadbw
jge
lds
add
mov
fistps
dec
sub
mov
enter
aas
inc
gs
push
xchg
or
outsl
mov
lea
or
cmp
mov
pop
adc
lret
jnp
xor
fucom
sub
adc
shl
inc
add
lock
add
cmp
negb
fwait
movsb
loope
cmpsl
jo
pop
lcall
push
aad
mov
sbb
jb
jbe
bound
sub
arpl
cmp
pusha
in
sub
vucomiss
je
dec
iret
clc
loop
xchg
idivl
data16
cmp
or
pop
in
mov
dec
lret
outsl
adc
clc
in
cmpsb
daa
je
insb
imul
les
loop
and
xor
inc
bound
adc
inc
test
pusha
cld
adc
js
or
ljmp
cli
xchg
dec
mov
and
inc
lods
add
and
loopne
xor
cs
add
test
ljmp
pop
cmp
pushf
push
aad
nop
jns
add
sbb
std
dec
out
cld
and
in
loop
pop
jecxz
lock
shl
decl
out
dec
mov
jmp
addb
and
das
mov
adc
jge
out
jl
sub
fwait
or
insb
sub
in
or
pop
imul
hlt
inc
test
or
xchg
adc
jle
icebp
add
mov
jmp
pushf
cmpsl
inc
sub
xchg
out
fsubs
push
xchg
sub
adc
xchg
insb
push
cli
out
sub
call
dec
xor
inc
cmp
mov
dec
arpl
dec
and
cmp
pop
mov
adc
fnstsw
sbb
push
or
add
and
mov
mov
nop
loop
and
xchg
xchg
mov
cmc
sub
sti
push
filds
outsl
push
insb
mov
int3
js
rorl
xchg
movsb
subl
clc
sti
and
pusha
cmp
mov
ret
repnz
ja
mov
movsl
es
sti
loopne
adc
cwtl
enter
cmp
sti
addr16
fnstsw
push
cli
je
clc
dec
sarl
outsl
testl
xchg
pop
ss
and
je
sbb
ljmp
xor
lcall
das
std
shll
pop
lods
pop
inc
sbb
gs
insl
adc
in
sub
mov
jo
xor
dec
and
sub
pop
dec
jp
dec
sarb
loop
stc
xor
gs
out
adc
dec
sub
loop
out
ljmp
insl
js
and
imul
xlat
jae
lods
xor
cmp
inc
inc
dec
xchg
pusha
xor
xchg
sbb
push
stos
mov
sub
mov
sbb
std
js
loope
movsb
add
dec
mov
or
scas
jge
pop
cld
cli
pop
sbb
xor
jo
pop
fiadds
js
inc
cs
pop
or
pop
sub
lock
push
out
jg
je
fwait
subb
cld
jb
jae
lcall
enter
add
push
and
xor
jo
jne
lods
in
fistpll
imul
rcll
repz
jae
push
mov
xor
cwtl
xlat
repz
pop
clc
sub
jbe
je
cltd
cli
cs
sub
pop
shll
pop
rolb
push
in
je
mov
sub
in
cwtl
xor
cmpsb
ret
call
icebp
mov
js
dec
sbb
iret
xor
cmpsb
dec
mov
inc
or
sarb
or
insb
repz
inc
dec
dec
repnz
dec
lods
ss
icebp
xchg
arpl
dec
cltd
cwtl
mov
or
xchg
pop
inc
mov
fsubr
std
subb
inc
add
push
in
push
dec
invlpg
push
mov
aas
jg
pop
repnz
pushf
push
mov
test
add
adc
mov
sbb
inc
sub
sti
jg
pop
hlt
cli
and
test
call
xchg
loope
and
jp
enter
adc
outsl
clc
cmp
dec
pop
mov
pop
into
mov
adcb
insl
lea
testb
sbb
xor
lahf
xchg
mov
mov
and
add
jns
dec
pop
push
movsl
dec
xchg
int3
sbb
cmpsl
xor
dec
or
sbb
loop
jl
pusha
out
test
lret
out
push
stc
iret
imul
adc
fimuls
and
lcall
imul
mov
ret
dec
jo
mov
int3
sbb
cli
pop
loopne
dec
sub
in
adc
add
cmpsb
ss
loop
subb
xor
mov
iret
push
mov
outsl
in
pop
sbb
call
jp
xchg
fisttpl
stc
clc
inc
popf
out
dec
dec
dec
ljmp
jge
mov
adc
jnp
aas
pop
mov
call
repz
push
pop
stos
jbe
test
dec
inc
xchg
push
xor
and
inc
ss
test
ret
cld
add
out
pop
out
in
and
fstl
or
insb
icebp
call
xor
fisubs
mov
mov
ret
xor
push
sub
sub
push
mov
xor
repz
cmpsl
icebp
jp
cmp
mov
fisubrs
dec
fldt
das
je
jns
sub
sub
repnz
dec
mov
sub
sub
mov
out
sub
testb
scas
sti
shll
adc
dec
push
xchg
fs
or
jge
in
addr16
add
bound
daa
mov
aad
and
pop
aas
jecxz
mov
ds
dec
js
xor
inc
jge
cmp
into
popa
or
push
into
dec
test
scas
clc
fildl
loop
andl
enter
fmul
ret
mov
into
dec
movsl
inc
popl
cmp
icebp
mov
aas
push
imul
bound
test
and
mov
gs
fnstsw
jmp
cmp
sbb
mov
test
mov
out
mov
aaa
push
sbb
add
outsl
arpl
mov
cld
shll
mov
mov
pop
add
div
mov
push
inc
gs
popa
sbb
lret
xor
jp
push
fidivs
mov
out
xchg
sarb
pushf
scas
sarl
fimull
es
cwtl
mov
mov
ds
insb
sbb
or
iret
in
popa
mov
int3
add
repz
ja
pop
pop
out
adcl
dec
pop
inc
xchg
out
test
mov
and
testl
sahf
mov
mov
lods
mov
je
je
mov
mov
jbe
cmc
push
in
shrb
aam
push
ret
and
loop
push
mov
std
leave
pusha
sub
mov
mov
sti
mov
loope
mov
loopne
jnp
jo
shlb
jno
or
out
pop
xchg
jo
call
and
pusha
imul
pushf
ss
idivb
std
stos
sub
push
iret
cmp
std
mov
fmulp
das
push
imul
jle
and
loopne
mov
sub
imul
or
lods
cmp
pop
ja
sbb
dec
loop
or
dec
out
call
xchg
test
xlat
adc
lods
or
dec
test
stos
test
xor
sbb
jo
jo
in
jp
lds
loopne
fnstcw
push
stc
pop
fistpll
jp
das
inc
xchg
xchg
insb
inc
or
xor
call
xchg
or
pusha
mov
sub
loopne
pop
adc
push
ret
mov
shr
jbe
dec
lods
lcall
cmpsl
lods
jle
xchg
push
xchg
pop
mov
movsl
outsb
add
mov
pop
push
hlt
jo
xchg
das
inc
mov
call
lods
and
imul
rcrb
loop
rcrl
or
xor
dec
icebp
int
hlt
mov
jecxz
in
mov
callw
jnp
xchg
jle
in
mov
dec
test
or
lds
mov
nop
rcrb
push
test
dec
in
pop
pop
pop
cli
or
outsl
cmp
cmp
jo
lods
jl
imul
loop
jmp
and
lret
adc
call
insb
jo
jecxz
test
js
xor
mov
inc
lods
fcmovnu
push
aaa
dec
enter
push
sub
sbb
divl
ljmp
insl
pop
outsl
inc
sbb
sets
je
iret
push
popa
mov
hlt
out
jne
jb
and
lret
and
adc
shr
iret
cmp
jbe
inc
in
insl
or
sub
fmull
jnp
mov
and
pop
mov
xor
pop
xor
jmp
call
mov
jmp
push
gs
outsl
insb
clc
cli
push
out
pop
mov
movsl
push
push
mov
lods
pusha
pushf
pusha
adc
jge
insl
loop
divl
imulb
int3
neg
dec
cli
insb
mov
dec
rcrb
xrelease
dec
shrb
pop
cld
js
addr16
jb
adc
std
xor
sub
mov
pop
dec
dec
dec
sti
cmp
testl
lret
dec
jg,pn
stc
js
jg
imulb
mov
jns
neg
sub
sub
popa
clc
clc
mov
clc
inc
dec
out
fwait
lods
dec
out
mulb
sti
test
pushw
xor
jns
xchg
insb
stos
push
test
stc
movsb
into
stos
lock
clc
in
dec
call
mov
and
dec
sarb
lret
shl
jp
shrb
jp
test
jmp
fldenv
fwait
out
leave
daa
push
sub
adc
sbb
jo
sarl
cli
ret
fs
sti
cmp
adc
jns
jl
or
popa
loop
mov
jmp
popl
ret
inc
pushf
add
jnp
or
bound
mov
sub
test
dec
pop
dec
sub
jg
push
imul
mov
jl
jl
movsl
fmull
fs
cli
mov
dec
shrd
or
dec
dec
or
ret
sub
dec
jge
divl
inc
insb
push
daa
push
outsl
dec
or
mov
imul
add
std
dec
popa
out
sub
clc
jge
orb
jl
aad
stos
xor
int3
sub
scas
cmp
outsl
fists
sbb
cmp
dec
xor
mov
ror
cmp
enter
sbb
movsl
test
or
test
push
cmp
rclb
test
outsl
fstpl
loopne
in
push
in
cmpsl
imul
and
and
loop
adc
inc
and
imul
incb
stos
dec
hlt
das
pop
mov
push
adc
mov
push
sti
sbb
adc
fdivl
cmp
sub
sub
enterw
aam
popa
test
call
mov
and
addr16
xor
orl
push
dec
pusha
enter
xchg
cmpsl
fwait
or
jl
ffreep
cmpsb
or
std
std
out
inc
cmc
gs
loop
jecxz
dec
mov
scas
add
inc
and
addr16
hlt
fisubl
addr16
icebp
sub
jle
nop
ss
dec
addr16
inc
cs
out
outsb
popa
jbe
dec
inc
cmpsb
jns
fs
jae
xor
sbb
or
imul
imul
pop
dec
stc
xchg
add
je
call
pop
or
imul
ret
out
pop
test
inc
loop
clc
inc
add
lods
jne
popa
dec
lcall
mov
jmp
jg
in
pop
xchg
jmp
insb
mov
dec
pop
out
mov
mov
mov
cltd
push
lods
jle
or
or
bound
ret
xchg
or
add
xchg
aad
mov
imul
xor
sbb
lods
imul
inc
std
dec
out
rcl
ret
fs
adc
movsb
mov
dec
lcall
push
nop
js
adc
sbb
es
in
cmp
fisubrl
push
or
dec
lods
sub
mov
test
mov
or
push
lds
jae
xor
mov
mov
pop
push
repz
mov
mov
mov
repnz
jge
icebp
movsb
mov
int3
std
call
push
ljmp
jge
je
push
push
cld
push
xchg
ds
jmp
aam
icebp
outsl
stos
jl
pop
es
fadds
xor
sbb
jns
pop
stos
mov
pusha
loope
in
sbb
dec
jae
shrl
cmp
fdivp
and
loop
fsubs
test
cmpsl
addr16
xchg
lret
rolb
cmp
imul
insb
jb
sbb
mov
cmp
dec
jne
das
sbb
or
cltd
jl
cmpsb
cmpsl
inc
push
sub
cmp
push
inc
mov
mov
xchg
aaa
ljmp
test
jo
int
ret
dec
into
in
loop
aaa
mov
jle
sarb
xor
pop
iret
xor
leave
xchg
pop
dec
xchg
insl
mov
imul
push
je
and
in
insb
fbstp
js
dec
mov
fiaddl
stos
pop
loop
dec
je
cmp
out
jne
pushf
fidivrl
das
xchg
jno
test
lcall
outsl
hlt
and
xbegin
hlt
idivb
iret
repnz
push
jp
stos
xlat
dec
jle
xchg
xor
adc
ficoms
cld
in
adc
sarb
loope
lret
idivb
push
xor
pop
out
popa
sub
sti
mov
ud0
mov
stos
stc
xor
je
insl
xor
jp
mov
enter
jo
cmpb
lea
push
sti
sbb
xor
mov
popf
call
cwtl
jo
outsl
cli
pusha
push
push
adc
call
fstpl
clc
jo
fwait
cltd
outsl
popa
cld
jl
loopne
jge
dec
enterw
pop
pop
icebp
jecxz
or
pop
je
dec
cmp
or
pop
into
mov
ljmp
mov
pushf
xor
and
shrb
cmp
fnstsw
xchg
pop
xchg
push
loopne
stos
push
adc
js
das
sahf
fisubrl
inc
enter
mov
lea
mov
and
pop
push
or
pop
cmp
push
mov
sub
sub
lahf
inc
insl
jo
push
sub
mov
enter
loopne
cmpb
add
xor
jmp
add
pusha
iret
mov
inc
fsubl
ljmp
pushf
sbb
xchg
dec
test
xor
cld
and
jns
das
cmp
fsubl
out
pushf
pop
lods
pop
test
inc
xchg
inc
sti
sarb
insb
xchg
xchg
das
push
loopne
xchg
loopne
sarb
or
out
icebp
loopne
jnp
ljmp
sbb
out
je
pusha
loopne
lock
outsl
lcall
xor
fidivrl
push
bndldx
in
loopne
dec
cmc
fstpl
inc
jecxz
outsl
std
mov
add
neg
sub
sub
mov
dec
cmc
sarb
out
lahf
dec
fsts
call
jmp
xor
popa
call
mov
lret
in
inc
push
cltd
adc
in
jge
enter
pop
fbstp
xor
sarb
incl
ret
sub
jecxz
jb
insb
repz
or
mov
pushf
xchg
mov
xchg
je
aaa
pop
mov
pop
xchg
cmp
cmpsb
push
or
cmp
sbb
out
ret
push
adc
jg
frstor
int3
ret
mov
aam
jmp
lods
cmpsb
loopne
jmp
imul
leave
or
jbe
orl
std
pusha
adc
imul
ds
std
and
cli
add
cli
jo
push
and
mov
cmc
sahf
adc
push
loopne
sub
cmc
jg
aaa
sti
mov
pop
addr16
das
lods
das
daa
std
cmp
jb
je
lret
xchg
mov
cmpl
inc
insb
cmp
cmpsb
pusha
sbb
jb
jle
testb
adc
mov
repz
mov
cmc
mov
or
lret
cld
and
test
lds
mov
mov
fxch
pop
mov
loop
pop
xor
adc
and
je
push
pop
push
ret
push
lret
ja
fwait
pop
mov
movsl
jb
push
add
lret
movsl
fstpl
iret
inc
add
push
sbb
int3
out
adc
push
popf
xor
jae
fucom
loopne
mov
incb
add
xchg
push
bound
mov
les
sbb
loope
in
in
cmp
cld
and
or
adc
frstor
adc
sub
sub
xchg
pusha
ret
mov
outsl
add
in
pusha
mov
sahf
loope
dec
int
ret
int
mov
ret
jl
inc
arpl
jecxz
loopne
dec
jmp
mov
bound
leave
pushf
jle
andl
mov
int
andl
andb
arpl
cli
and
aad
jmp
cld
fs
push
out
les
stc
and
rcll
or
jg
aaa
inc
and
test
arpl
add
out
stc
insl
xor
jecxz
sub
sub
iret
sbb
dec
test
stos
add
mov
js
repz
icebp
test
xchg
into
mov
faddl
incb
mov
pusha
sbb
jge
in
outsl
out
gs
je
daa
je
mov
mov
pop
icebp
jge
in
mov
movsb
pop
add
dec
sub
sbbl
addb
jno
flds
and
pop
lcall
mov
or
lret
jg
lock
loopne
lock
sbb
out
das
into
and
xor
out
push
std
push
clc
mov
pop
pop
push
mov
mov
dec
xor
fisubrs
mov
mov
sahf
jo
adc
mov
xor
inc
sbb
popf
ljmp
daa
out
sub
movsl
add
adc
out
nop
add
scas
sahf
out
int3
sub
ret
jg
push
test
adc
out
sub
xor
loope
insl
xor
test
jge
sub
mov
dec
stos
scas
out
jl
rclb
push
scas
and
sbb
push
popa
nop
jle
inc
xchg
out
push
adc
mov
fcoms
xor
lods
xor
lods
pusha
fsubrs
pusha
jo
mov
stc
dec
inc
sub
xor
leave
sbb
mov
inc
imul
adc
cmpb
lock
push
mov
lds
outsl
dec
mov
ljmp
cwtl
mov
xor
mov
cs
push
nop
pop
pcmpgtw
sub
lea
in
outsl
push
call
xor
pusha
arpl
cmp
loopne
jge
sbb
icebp
or
xor
push
test
pushl
jns
fsubrs
push
mov
repz
inc
scas
in
mov
mov
jne
fisttpl
insl
testb
aad
and
push
mov
or
fucomp
adc
lock
or
dec
xchg
daa
jg
or
inc
into
int3
repz
inc
xor
xchg
das
and
push
mov
lret
fs
jne
inc
xchg
fidivs
test
xchg
sbb
mov
pop
insb
adc
jmp
push
jnp
adc
pop
sub
int
push
dec
cmpsl
xor
jb
ljmp
pushl
or
xchg
cmp
jo
test
aaa
mov
js
jbe
sub
dec
inc
test
es
popf
jmp
in
jo
scas
cmpsl
mov
stos
ret
xor
aam
dec
insl
xorl
repnz
adc
loop
aam
out
dec
push
pop
mov
repnz
loopne
push
push
test
dec
dec
mov
lahf
bnd
in
dec
xor
jnp
pusha
sbbb
cli
pop
and
add
hlt
or
lret
cmc
bnd
test
inc
movsl
sarl
out
repnz
pop
sbb
sti
sbbb
xor
jecxz
pusha
out
sub
sahf
addb
loop
mov
push
cmp
cld
jmp
jmp
cld
inc
std
dec
jl
jl
dec
cld
aam
mov
dec
jnp
jl
adc
mov
das
loope
cwtl
add
repnz
sbb
sub
imul
jae
stc
test
sub
fdivl
and
jne
cmpsb
filds
xchg
cmpl
insl
mov
inc
sbb
or
inc
popf
sub
pushf
mov
dec
in
sbb
test
mov
dec
jno
call
jo
ja
add
call
dec
popf
outsb
mov
mov
ffreep
stos
add
in
sub
and
ljmp
test
into
fistpll
sub
dec
lea
cwtl
imul
sahf
aam
jno
clc
outsl
lcall
fwait
lods
or
pop
mov
or
add
sub
fdivl
push
es
add
mov
lods
pop
in
test
pop
incb
loope
and
mov
adc
jle
jo
dec
popa
sbb
sub
scas
and
lock
fists
cmp
mov
loopne
jae
stos
lock
je
fnstenv
pop
jmp
xchg
and
xor
das
jo
popa
cmp
jnp
repnz
xchg
fstpt
out
out
cmp
sub
cs
movsb
es
add
out
add
out
cmpsl
inc
xor
movsb
jbe
sbbl
sbb
xor
into
js
clc
push
push
movb
jbe
aas
in
pop
stos
das
je
divb
aas
cmp
in
adc
xchg
loop
mov
cmp
fldcw
xchg
je
jbe
cs
popa
cltd
mov
ret
ror
push
push
mov
push
incl
das
jle
push
adc
sub
pop
dec
sarl
mov
scas
push
fs
xchg
fdivr
pusha
adc
daa
inc
jmp
xor
scas
and
mov
fwait
loop
jge
or
push
sbb
test
xchg
out
fcmovnbe
std
rorb
xchg
pop
cmp
sbb
dec
insb
imul
in
imul
dec
mov
ja
and
and
repnz
pop
lea
pushfw
or
add
sbb
xor
add
out
outsl
or
xchg
pop
into
rcrl
insb
aas
mov
dec
out
or
insl
in
fiadds
mov
lods
sti
int3
pop
fs
and
pop
or
stc
push
mov
loope
mov
mov
xor
addr16
popl
xchg
adc
dec
outsl
pop
push
sbb
sub
cltd
hlt
shl
mov
out
and
in
inc
loopne
xchg
into
adc
insl
cmp
pushf
call
dec
lods
in
sub
popa
loop
iret
int3
mov
xchg
int
js
dec
mov
lods
fmuls
out
sub
pop
sti
sub
xor
mov
hlt
out
pop
sub
mov
test
rorl
cmc
icebp
insb
add
push
xchg
inc
inc
jbe
mov
fs
push
push
xchg
adc
inc
xchg
lock
ret
adc
movsb
sub
jae
mov
mov
sub
inc
addr16
add
loope
shrl
shrl
adc
sbb
pop
scas
out
inc
dec
cmp
out
mov
out
or
cmp
mov
fstl
mov
dec
int3
pop
insb
jle
negl
xchg
sub
lret
outsl
sbb
je
aam
dec
or
cmp
cmc
jmp
shl
sbb
daa
jle
in
adc
iret
cmpsb
or
mov
pop
sub
mov
mov
inc
dec
repnz
mov
insb
jle
inc
out
pop
pop
pop
orl
jp
in
shll
jb
pop
mov
popf
sub
mov
jge
in
xor
fdivs
stos
ds
dec
pop
mov
imul
jl
ficoml
xchg
pop
daa
outsl
pusha
sti
fwait
repnz
jne
add
in
jl
mov
inc
mov
outsb
jmp
aaa
and
dec
rcpps
lret
add
loopne
jbe
rclb
push
mov
fimull
jo
jp
or
das
arpl
pop
push
je
dec
sub
test
jge
rcll
sub
or
mov
add
lcall
data16
sub
outsb
fnsave
int3
test
int3
pop
leave
cmp
nop
outsb
popa
jg
mov
loopne
add
aas
adc
jmp
jp
or
idiv
jbe
fs
jne
push
stc
out
jnp
mov
cmp
pop
ds
mov
cmp
jns
jecxz
cmpsb
mov
loop
fbld
xor
das
sub
repz
dec
mov
movsl
or
mov
sub
mov
or
sbb
mov
cltd
fs
sbb
js
outsl
ret
iret
nop
shrb
imul
dec
push
mov
aad
push
das
cmovno
test
push
loop
loope
push
inc
or
mov
cs
push
in
mov
push
push
cmp
imul
es
cmp
into
dec
dec
lret
inc
sbb
sbb
adc
test
out
inc
rol
fcomps
xchg
pop
jne
es
addr16
stos
sub
lock
push
cmp
test
lret
mov
rdpmc
jo
shr
fsubrp
push
dec
pop
sub
jge
sub
pusha
mov
imul
sbb
fwait
aas
adc
mov
pop
pop
enter
popf
movsl
in
in
mov
outsl
xchg
add
sub
loope
ss
test
faddl
popa
mov
faddl
and
mov
popa
subl
mov
fwait
push
dec
inc
mov
enter
push
outsl
mov
pop
outsb
and
dec
jle
sahf
loope
pop
out
adcl
and
std
jbe
fnsave
lods
adc
iret
jb
sbb
ja,pt
ljmp
nop
mov
and
and
sub
sbb
push
mov
lods
and
inc
dec
mov
das
or
in
repz
lcall
push
mov
in
cmpsb
stos
out
add
shr
pop
nop
and
stos
push
adc
lods
cmp
insl
add
mov
adc
lock
filds
outsb
mov
das
xchg
xchg
call
push
lock
xchg
xorb
loop
popf
jg
mov
pop
xchg
int
and
dec
dec
dec
call
jb
shr
or
or
mov
in
out
outsl
lods
inc
xlat
aas
andps
out
lret
push
popa
adc
loop
push
sahf
fmul
leave
push
or
pop
mov
int3
ljmp
lret
insb
outsb
lret
call
adc
sub
mov
cmpsb
scas
loopne
into
push
inc
sub
gs
es
outsl
or
stos
jo
rcr
out
scas
pusha
cmp
cmp
mov
pop
stc
mov
jbe
scas
cmp
mov
pusha
mov
bound
jo
xchg
insl
clc
ljmp
nop
fwait
incb
mov
outsl
loop
cld
lret
ffree
pop
dec
jmp
mov
inc
sub
data16
jg
es
jp
cmp
inc
lds
iret
mov
std
sub
pop
dec
adc
pop
mov
adc
enter
lahf
cs
out
test
cmp
push
xor
pop
sub
push
scas
pop
sub
jmp
pop
push
stos
push
scas
mov
mov
loop
lea
outsl
jae
jle
lods
inc
pop
cmp
dec
push
je
adc
add
loop
mov
push
cmc
out
dec
iret
lea
jge
out
in
mov
push
lcall
movsl
ljmp
or
mov
push
popa
adc
jl
and
inc
and
sahf
call
outsb
xor
in
xlat
xor
xor
sub
pusha
rorb
pusha
push
out
jg
clc
mov
add
push
adc
sar
push
addr16
rcr
inc
xchg
add
pop
loop
inc
ljmp
push
lock
mov
cmpsb
mov
out
insb
sub
popf
cmpsb
cltd
orb
add
shrl
ret
std
dec
adc
inc
pop
dec
test
das
lock
test
mov
xchg
pop
sub
lret
popf
push
loop
push
fwait
in
pop
aas
clc
xlat
or
xchg
push
test
fs
dec
cli
movsb
jo
out
push
lock
dec
outsl
lret
xor
add
fists
mov
dec
aaa
in
jl
orb
or
in
xorb
sti
test
xchg
sub
xchg
inc
push
push
mov
cmpsl
repz
addr16
sub
mov
stc
xor
jle
arpl
out
lds
or
scas
dec
xchg
test
lea
out
ja
lcall
adc
pop
or
imul
std
pop
and
pop
add
rclb
inc
inc
sbb
in
mull
imul
inc
dec
push
lock
inc
dec
fisubl
cmpsl
adc
sbb
shrl
mov
ja
inc
jmp
jg
ja
fildl
out
inc
sub
repz
push
gs
push
dec
jb
xor
add
fnstsw
jge
cmpsl
add
dec
or
and
mov
ljmp
icebp
adc
inc
stc
dec
and
sbb
mov
ljmp
mov
push
lods
mov
mov
fiaddl
aas
dec
mov
es
push
cmp
dec
mov
jle
ret
inc
ret
stos
xor
push
leave
in
fldl
loope
jmp
dec
imul
jno
jb
cmpsl
ja
dec
xor
cs
lcall
test
aas
movq
push
je
loope
push
mov
daa
nop
sub
fs
insl
pushf
lock
dec
inc
fsubr
mov
sbb
adc
inc
jle
cmp
aaa
adc
das
scas
scas
and
sub
lret
inc
inc
pop
test
int3
imul
outsl
pop
push
xor
nop
dec
xor
cmc
scas
pop
mov
pusha
andb
mov
add
pop
push
mov
seto
cmc
in
mov
pushf
jmp
xor
in
adc
add
sub
repz
fdivl
cltd
cmp
cs
inc
rcl
jo
repnz
push
je
pop
xor
add
or
push
mov
jae
jle
subl
mov
mov
std
xor
aam
in
pop
lret
out
lock
es
test
mov
and
in
cmc
cld
mov
cmpsl
jae
and
rolb
ret
inc
sub
push
or
lret
imul
lock
xor
outsl
out
outsl
lret
add
in
sar
pop
dec
inc
insl
push
xchg
cs
cltd
jecxz
mov
mov
xchg
fwait
repz
xor
add
cmp
jge
outsb
mov
addr16
jge
cmp
in
icebp
xor
and
xor
sub
push
ja
clc
cwtl
jp
stos
and
call
insl
je,pn
repnz
jl
stos
xchg
jge
mov
subl
scas
jo
xorb
rclb
sbb
xchg
sub
mov
pop
pop
sub
sub
push
jp
adc
out
leave
push
lods
out
test
cmp
je
leave
notl
cltd
pop
lock
stos
lods
dec
in
sub
dec
push
xchg
sbb
je
rorl
pop
andl
cltd
push
or
outsl
pop
push
dec
xor
xchg
dec
iret
iret
xor
hlt
frstor
or
cmpsl
xor
outsl
je
stc
push
es
pop
mov
dec
add
mov
lcall
enter
movsl
sbb
and
scas
addr16
dec
imul
out
adc
outsl
cltd
push
dec
in
adc
test
push
cmp
mov
lea
jecxz
mov
jns
out
rolb
jo
xor
adc
ret
jge
or
out
lahf
aas
sub
dec
jno
adc
or
loope
adc
fsub
dec
ja
hlt
ljmp
shrb
daa
int3
mov
fistl
cmpsb
icebp
mov
insb
pushf
addr16
loop
pop
push
das
mov
div
dec
cmpsl
xor
sbb
add
jle
je
dec
cmc
stos
mov
and
das
jecxz
in
loop
push
and
mov
pop
and
or
in
mov
rcr
orb
repz
cmp
inc
loope
jo
sub
adc
ja
cltd
out
ret
inc
mov
in
icebp
xchg
and
cs
inc
push
testb
rol
mov
int3
jo
icebp
dec
mov
in
or
sub
pop
out
dec
jnp
adc
mov
outsl
jg
shrl
cltd
or
adc
push
cmpsl
sub
mov
xor
dec
cmp
lods
loop
fisttpl
inc
ret
xchg
enter
lret
das
divb
xor
or
xor
sbb
lock
inc
sbb
cmpl
lcall
push
lahf
outsl
out
loop
aad
mov
fiadds
xor
jne
xor
ss
scas
fbstp
sub
test
lret
sti
fmuls
jl
ret
and
movsl
xchg
test
mov
icebp
fs
into
push
out
push
cmp
icebp
xchg
and
sbb
ds
mov
daa
jae
cmpsb
push
push
cs
lret
test
je
cmp
push
sub
sub
repnz
cs
loop
push
add
ret
icebp
das
je
stc
leave
push
or
popa
inc
pop
scas
daa
xchg
push
inc
and
push
stos
or
je
addl
arpl
mov
fst
mov
out
dec
movsl
shrb
cmc
sbb
shll
jmp
outsl
or
cmp
movzbl
xchg
dec
mov
cmp
mov
inc
stos
repnz
inc
fidivl
xchg
arpl
popf
sub
xor
adc
mov
cmp
sbb
std
xchg
xor
add
inc
fwait
pop
mov
xor
cli
cmp
or
push
mov
jne
pop
mov
bound
je
mov
adc
negl
lcall
push
insl
outsl
call
pusha
lret
push
aas
lahf
and
mov
das
aad
cmp
xchg
adcb
movsl
mov
in
inc
add
jl
sahf
insb
sub
pop
inc
push
out
push
adc
push
popa
and
das
jge
mov
pop
inc
push
cltd
push
mov
cmp
cld
stos
dec
add
out
pextrw
popf
sub
add
and
stc
push
scas
outsl
mov
jp
mov
xor
push
in
jmp
add
ds
cmp
dec
push
adc
jmp
outsl
pop
mov
cmc
dec
jge
cmp
in
push
pop
jo
jo
mov
cmp
or
mov
std
or
and
add
test
mov
enter
pop
mov
sub
jo
clc
jl
mov
loopne
mov
ret
outsb
sbb
jo
add
jbe
cmp
sub
push
lods
imul
mov
mov
mov
sub
orb
fsubrl
mov
mov
adc
enter
dec
mov
mov
and
or
loop
fimuls
std
xor
es
jg
sub
mov
fmull
fisubrs
cmp
cmp
aas
shlb
xor
dec
loope
ficompl
add
push
push
push
addr16
fsubrp
lretw
jg
sbb
mov
sbb
in
test
lock
scas
test
jnp
inc
pusha
in
push
ss
xchg
and
mov
pop
out
int3
add
imul
and
ljmp
push
pop
outsl
insb
frstor
push
addr16
enter
sahf
fnsave
daa
xlat
sub
sub
hlt
jbe
scas
pop
inc
imul
mov
in
push
jnp
pop
imull
add
jp
adc
in
and
repz
popa
in
in
xchg
enter
out
mov
es
shrb
test
addr16
add
mov
jle
mov
clc
xchg
and
gs
rclb
test
movsl
pop
xorl
addr16
enter
sbb
testb
mov
dec
cmc
das
iret
ja
dec
adc
mov
cmc
add
call
int
sub
ret
jle
test
dec
arpl
fisubs
les
imul
adc
cmp
push
int3
fisttpll
rolb
xchg
insl
mov
jo
ja
lret
mov
enter
mov
test
pop
cmpsl
cltd
mov
xchg
lcall
adc
add
orl
mov
add
outsl
addr16
shr
loopne
mov
dec
sub
into
dec
jo
jns,pn
push
mov
xor
in
xor
inc
push
pop
jp
loope
gs
clc
clc
adc
jne
scas
pop
mov
mov
jnp
imul
inc
push
lock
xchg
test
ret
popf
icebp
cmp
jecxz
and
xchg
movsb
xor
or
loopne
inc
lock
test
jbe
mov
out
ljmp
and
fnstcw
mov
test
inc
jo
push
data16
cwtl
xchg
adc
pusha
xor
inc
mov
and
cmpsl
ret
and
mov
loopne
in
and
cmpb
loopne
ficoml
xchg
jnp
sub
ficoml
mov
mov
andl
xchg
aam
cmp
mov
test
jmp
xchg
cli
daa
shlb
movsl
dec
adc
jp
cmp
lcall
push
adc
pop
dec
mov
dec
outsl
test
inc
inc
xor
test
repnz
loope
cmp
fcoml
inc
int3
jae
sbb
add
ret
popa
icebp
jo
loop
xchg
lret
mov
mov
js
push
pusha
aad
rorb
lds
insb
lahf
ja
push
sub
sbb
pop
lock
clc
jg
xor
iret
cmc
dec
add
divl
stc
outsl
xchg
jbe
mov
loopne
shlb
lret
insl
pop
add
mov
je
push
push
mov
lods
adc
pop
pop
jmp
sahf
pop
imul
das
ljmp
cmp
ljmp
or
and
loopne
jnp
pop
xchg
mov
add
jmp
xor
jle
int3
cmpsl
sbb
xor
mov
add
push
insb
popa
call
sub
xor
inc
dec
int
out
pop
lea
mov
mov
pusha
fcoml
bound
in
clc
lea
pop
js
sub
jno
add
test
les
inc
xor
mov
adc
mov
or
mov
shrb
add
push
mull
push
pop
pop
imull
movmskps
dec
popa
dec
and
xor
imul
cmpsl
pop
cmp
jo
mov
daa
cmp
pmuludq
pusha
fcompl
adc
xor
sahf
pusha
sbb
aaa
push
sub
mov
fldl
sbb
das
outsb
ljmp
mov
test
push
or
adc
in
push
jg
lahf
sub
lea
fs
imul
popa
jp
subb
push
jno
loop
hlt
add
dec
scas
dec
stos
pop
fistpll
in
aaa
in
es
insl
pop
sub
mov
jg
loop
nop
sub
ret
adc
lret
movb
cwtl
out
or
out
dec
mov
fisubl
jae
push
sahf
and
pop
pop
mov
cwtl
lock
ret
mov
fsts
mov
xor
sbbl
fwait
out
outsl
loopne
push
in
std
push
sbb
ret
mov
adc
shrb
xor
mov
jo
xchg
mov
out
jg
insb
mov
pushf
sub
cmpsb
push
rorb
jne
je
sub
sbb
enter
sbb
push
cmpsl
sbb
popa
mov
shld
call
shll
shll
push
movsl
jl
in
negl
imul
push
hlt
pushf
pop
loop
sbb
or
inc
mov
das
fldz
aas
cmp
in
mov
scas
leave
outsb
mov
jp
es
cmc
lock
pusha
pop
daa
test
fadds
outsl
cld
out
in
xor
or
and
add
popf
xchg
aas
js
adc
mov
movsl
jb
mov
pusha
cld
shll
push
pop
pop
cmp
call
pop
mov
adc
jnp
jge
xchg
pop
push
out
int3
mov
popl
testb
jae
out
sub
outsl
repnz
clc
arpl
pusha
std
cs
fidivrl
and
cmp
push
mov
ljmp
jnp
cld
aam
imul
es
sbb
int
subl
mov
or
cld
insl
xchg
sub
popa
and
je
pop
dec
lock
loopne,pn
repnz
push
loop
mov
xchg
call
loopne
loop
add
cld
jbe
adc
cmc
mov
ret
mov
in
ss
fs
bound
out
push
dec
shlb
pop
inc
sbb
mov
pop
in
enter
jp
repnz
imul
adc
fnstcw
adc
xor
push
cmp
sub
test
sahf
bound
and
and
scas
outsl
ret
jmp
sbb
jg
inc
pop
cmp
adc
add
inc
sbbb
fimuls
fnstcw
inc
icebp
div
ja
sti
push
aaa
mov
xorl
jle
sub
dec
add
mov
dec
push
pop
xchg
imul
xchg
in
rcll
add
loop
mov
inc
xor
adc
mov
shll
add
and
sub
add
cmp
xchg
cmpsb
movb
movsb
mov
daa
jb
inc
jb
mov
xchg
or
cld
movsb
cmp
xchg
clc
pop
sahf
addr16
loopne
pop
call
sti
out
cmp
mov
enter
fmuls
mov
dec
arpl
push
rclb
dec
mov
xchg
mov
lret
fucomp
lea
cltd
pop
in
ja
sbb
cmpsb
sub
int
dec
and
outsl
lret
out
imul
std
pop
in
push
cmp
xor
jns
stc
divl
stos
shll
ret
dec
jg
sub
sbb
sbb
nop
jmp
dec
icebp
cmp
clc
xchg
sbb
dec
or
dec
cmpsl
lcall
ffreep
imull
mov
rep
gs
xchg
adc
lods
stc
in
push
mov
sbb
dec
leave
bound
cmp
cmpsl
or
fstl
imul
outsb
fwait
insb
js
int3
movb
mov
mov
lret
sub
jbe
sub
int
pop
fisubs
mov
out
or
daa
mov
cmpsl
jnp
jl
push
xor
and
and
and
pop
add
or
fldcw
or
testb
pop
push
jle
cmp
je
jle
xchg
jo
dec
clc
jnp
andl
dec
ja
fs
iret
cs
xchg
pop
cmp
cld
adc
cltd
ret
mov
adc
fdivs
xchg
sub
sbb
jg
push
arpl
mov
cwtl
ret
jge
and
mov
imul
add
mov
imul
cs
scas
jo
outsb
cmpsl
shlb
mov
jo
ret
dec
mov
push
push
and
sbb
hlt
daa
cmc
divb
mov
aaa
jge
imul
cmp
cltd
je
fdivl
and
and
scas
shlb
loopne
daa
lock
cmp
sub
sub
inc
or
lods
out
popf
xor
int3
enter
or
rorl
jmp
mov
xor
pop
sbb
mov
or
roll
popl
mov
adc
and
ret
ret
ja
fistps
stc
push
mov
in
movsb
push
add
cltd
xor
sub
dec
sti
or
fsubs
jnp
imul
mov
mov
xchg
xor
scas
lret
das
and
sbb
and
dec
loopne
out
aas
out
dec
in
imul
jp
cli
ss
les
shlb
repnz
movsl
add
xchg
mov
cmpsb
mov
mov
sahf
jno
stc
je
xchg
inc
idiv
movsb
iret
out
sub
into
imull
sbb
push
fdivs
or
mov
pop
mov
cli
jbe
mov
push
mov
pushl
pushf
lea
pushf
inc
jbe
sub
fwait
pop
sub
scas
in
mov
sarb
adc
mov
insb
ficompl
jp
and
lock
or
lds
clc
or
lds
lods
jo
shrl
push
imul
jmp
jo
and
push
xchg
mov
sub
cld
int
lods
sub
stos
sbb
mov
cmpsl
mov
in
sub
js
aam
inc
adc
cmp
jle
cltd
jl
int
mov
addr16
dec
out
in
outsl
bound
out
ss
sbb
out
jmp
xchg
mov
fmul
lock
shlb
inc
jmp
int
and
fdivp
mov
addr16
enter
cli
push
imul
push
xchg
mov
clc
popf
mov
dec
dec
push
mov
fucomi
fwait
jmp
in
and
mov
or
out
jnp
cli
pop
ret
sub
xchg
xchg
dec
movsl
mov
fstpl
jmp
lret
fildll
mov
test
stc
mov
mov
test
test
inc
mov
mov
jb
jl
scas
and
xchg
je
pop
or
or
mov
cmp
xchg
addr16
sahf
mov
push
std
scas
loop
sub
bound
bound
shll
xor
nop
orl
jns
xchg
in
fmulp
jb
push
or
push
jo
sub
push
clc
in
pop
push
shrl
sub
int3
jo
hlt
in
scas
jbe
adc
push
cld
mov
mov
in
call
lea
enter
dec
push
out
pop
das
xchg
add
popl
mov
fmull
decb
gs
fs
mov
arpl
mov
add
xchg
lods
cmp
mov
sbb
inc
or
dec
jge
js
sbb
pop
pop
pusha
and
out
adc
loope
orl
imull
cld
stos
in
out
gs
cmp
das
in
lock
push
cmpsl
js
pop
mov
or
call
into
adc
aad
xchg
jnp
popa
push
negl
in
clc
in
push
cmp
inc
dec
adc
push
xor
jecxz
add
das
inc
in
jle
cld
pusha
stos
adc
jnp
pop
cmp
dec
push
sub
cld
nop
call
adc
dec
cmp
outsb
cs
fdivs
mov
outsl
in
cmp
cmp
fdivrl
lods
pop
lods
mov
push
and
out
out
popa
xor
in
mov
sbb
js
insb
out
cli
cmp
push
mov
or
sbb
mov
fsubrs
pop
call
mov
xor
mov
repz
jg
pop
pop
cld
das
aas
cmpsb
por
push
xor
adc
stc
inc
movsb
push
or
cmp
ja
and
out
aad
adc
jns
pusha
inc
in
adc
or
push
dec
je
loop
adc
push
jmp
pusha
mov
in
aad
bound
jbe
jo
je
pop
xor
mov
movsl
jmp
jp
pop
mov
mov
add
push
dec
mov
fstps
mov
loopne
jnp
pop
repz
dec
loop
outsb
stos
rcrl
or
scas
fldt
out
mov
sar
jb
enterw
out
cmp
jmp
pop
aad
enter
inc
mov
jb
mov
stc
pop
repnz
enter
popa
and
sbb
push
jo
pop
push
add
lock
loop
test
loope
std
scas
das
adc
flds
xchg
roll
idivb
lds
icebp
dec
jbe
fisttps
sub
sbb
xchg
push
inc
sub
sub
inc
loope
mov
call
daa
and
out
jae
lock
adc
and
or
cmp
adc
out
pop
scas
jmp
loop
bound
jge
ja
push
cmp
add
mov
push
xchg
cmp
jnp
out
sub
push
push
into
pop
ret
sub
je
add
xor
cmpsb
mov
aam
in
pop
push
notb
jno
jecxz
cld
mov
jo
fstpt
int3
or
out
push
push
cmp
nop
std
jo
jecxz
sbb
in
and
les
push
cmc
cli
cltd
das
jb
test
or
les
xchg
mov
lods
pusha
mov
loop
or
adc
or
call
addr16
sahf
in
push
xor
icebp
stc
mov
mov
pop
data16
sbb
cs
sbb
mov
and
sub
stos
ja
js
in
jmp
xorb
ret
call
add
outsb
std
test
adc
das
stos
out
daa
les
lds
pusha
fmull
mov
jmp
mov
xlat
xchg
lret
jl
adc
inc
lods
jo
rcrb
cld
adc
pop
jne
mov
xchg
icebp
js
stos
and
sbb
jae
adc
push
cli
sub
orb
mov
push
inc
out
push
or
xor
daa
sub
pop
xor
adc
pop
das
lods
movsl
movsl
mov
add
adc
insl
call
test
xchg
dec
jp
outsb
jecxz
test
setl
shrl
cs
outsb
pop
xchg
call
push
daa
js
cmp
subb
xor
adc
xor
scas
pop
xor
scas
into
or
arpl
xorb
sub
add
jns
xor
iret
rorb
ds
jo
andl
movsb
jecxz
in
aam
cwtl
mov
sti
sub
loope
addr16
push
xchg
dec
add
scas
mov
das
pop
or
push
mov
adc
sbb
push
lcall
xor
loop
mov
ljmp
mov
inc
inc
push
xor
or
cmp
add
ret
sub
inc
mov
xor
xor
imul
int3
adc
mov
pusha
cmpsl
add
jnp
lret
jb
sahf
push
ror
in
xchg
dec
or
std
sbb
lock
test
fwait
loopne
jns
sbb
inc
xchg
imul
push
outsl
or
fsubr
mov
and
adc
mov
mov
push
cld
test
xchg
std
mov
out
jo
cmp
cmc
pop
or
out
and
jl
ja
inc
mov
sbb
pop
fs
pop
rclb
xchg
mov
jo
ffreep
not
lret
jg
hlt
cmp
cmpsl
test
or
imulb
test
jne
inc
jbe
outsl
ds
adc
cmpb
std
add
xchg
ds
fstl
xchg
cs
in
xchg
xor
ljmp
jb
push
outsl
gs
outsl
dec
push
add
jmp
cmovbe
ljmp
inc
ds
shrb
js
sbb
jno
adc
push
sahf
adc
shl
push
test
icebp
div
js
leave
stos
xor
mov
mov
and
pop
inc
and
movsb
cmpb
push
das
int
bnd
dec
mov
cmpw
into
sti
jmp
lret
pop
sar
push
addr16
out
cltd
jb
pop
out
ret
test
test
dec
pop
pop
fisubl
lds
enter
push
das
ret
in
sarl
lea
xor
adc
cld
push
repnz
out
and
stos
das
push
ret
jl
cltd
and
mov
jne
adc
adc
or
movb
in
int
ljmp
arpl
mov
jg
dec
iret
icebp
lods
dec
sub
mov
out
add
das
je
jmp
inc
mov
inc
add
loop
subb
out
shll
and
jle
dec
sbb
out
loop
jmp
out
jo
cltd
in
aaa
enter
loop
xor
rorb
push
mov
cs
mov
and
and
mov
or
iret
dec
dec
cld
lock
sub
mov
adc
into
mov
in
rcl
xchg
xor
lock
enter
call
dec
bound
mov
sbb
aas
sbb
pop
or
inc
pop
pop
xor
in
mov
insl
repnz
test
call
in
data16
inc
das
adc
sub
add
mov
jl
jmp
das
adc
js
imul
fdiv
insb
hlt
je
cmp
into
pop
lret
push
push
inc
fldt
cwtl
andb
addr16
in
imul
push
push
pop
mov
loope
jmp
lock
jb
shlb
addr16
outsl
mov
outsl
repz
jnp
mov
into
lods
loopne
or
in
sub
mull
add
js
in
sub
stos
pop
or
xor
jmp
in
pop
js
push
cmpsl
lea
jecxz
and
roll
mov
pop
mov
pop
stos
cmp
jae
jbe
cmpsl
outsl
cmp
addr16
nop
js
int3
and
cmpsb
mov
in
jecxz
dec
lods
xchg
mov
sub
pushf
adc
lahf
inc
mov
insl
es
and
mov
call
push
loope
imul
push
dec
loope
sub
imul
jmp
enter
inc
clc
das
into
fidivrs
stos
iret
dec
fistps
ljmp
loop
andl
bound
out
adc
jne
sub
aad
or
insb
jmp
popa
sub
mov
test
cli
xor
enter
jb
add
es
dec
insl
jl
pop
dec
sbb
push
xor
push
outsl
loope
push
jmp
mov
cmpsb
pop
push
out
cs
in
sub
mov
mov
daa
cmpsb
push
cmp
je
or
test
movsb
pushf
mov
jl
js
sbb
sbb
scas
fwait
scas
lods
cmp
les
pop
pusha
cmp
pushf
dec
jne
dec
hlt
cmp
fcmovne
pusha
push
mov
xchg
jb
mov
das
inc
enter
jbe
aaa
push
jo
add
sarb
dec
fmull
gs
in
in
jmp
pop
repz
jp
stos
fisttps
sbb
inc
xchg
inc
enter
inc
gs
xchg
dec
or
outsl
jge
repz
dec
and
in
stos
mov
sub
repz
or
dec
shlb
in
pop
out
les
jbe
cld
mov
icebp
lds
lods
gs
inc
and
rcr
pop
fnsave
cwtl
sub
stos
in
sti
sbb
cmpsb
insl
pop
movsl
fiadds
int
leave
mov
outsl
mov
js
inc
push
je
pop
add
sub
jg
xchg
dec
sub
dec
xchg
icebp
xor
stos
and
fcmove
stc
je
mov
daa
shlb
mov
inc
xor
jp
push
pop
lea
jg
loop
pop
pop
enter
mov
sub
bound
and
mov
pushf
idivb
imul
iret
lods
test
daa
sub
push
pop
mov
roll
dec
jae
xchg
add
hlt
mov
scas
mov
out
enter
cld
stos
sahf
dec
ret
or
ljmp
push
cmpsl
cltd
and
sub
outsb
je
or
jbe
jo
lcall
popf
mov
frstor
hlt
iret
dec
loop
out
js
jo
dec
lock
cmp
cmp
js
hlt
xchg
sub
in
pop
inc
cmpsb
daa
jnp
hlt
cmp
mov
std
lods
mov
sub
int3
test
mov
insb
bound
sti
neg
dec
and
push
data16
je
push
jb
daa
iret
repnz
cmc
inc
adc
arpl
dec
or
cmp
fdivl
test
lods
into
inc
mov
data16
push
jno
mov
lods
aas
ud2
jb
orl
div
dec
adc
divl
arpl
insl
inc
xchg
mov
je
mov
daa
jbe
or
aam
jp
sub
mov
out
int3
js
loopne
inc
jo
inc
clc
cmp
adc
je
push
leave
dec
int3
call
fbld
xor
jmp
addr16
insb
int3
fs
and
hlt
xor
popf
out
jns
addr16
das
in
pop
call
pop
hlt
and
add
pop
adc
inc
cmp
rcrb
jo
jp
xor
test
test
cmp
jns
cli
loopne
das
mov
call
mov
ret
ds
inc
jns
xor
out
in
mov
jno
das
xor
dec
mov
fidivrs
fstl
out
cli
out
inc
in
repnz
aas
ja
add
call
decb
dec
jb
inc
jae
pop
stos
icebp
sub
add
inc
je
cmpsb
into
mov
cmc
push
aad
xchg
add
cmp
dec
jg
pop
push
shll
jecxz
call
cwtl
iret
add
rcrl
inc
mov
jmp
in
fbld
pop
and
jecxz
cld
push
sub
sbb
arpl
pop
sub
xor
aas
dec
js
jbe
cmc
je
adc
sub
pop
adc
hlt
xor
xchg
add
mov
jecxz
sarb
jne
out
jnp
fcmovu
mov
sbb
cld
imul
data16
jb
rorl
mov
mov
arpl
notb
sahf
rcrl
adc
push
test
push
in
jmp
iret
in
test
jb
das
test
test
dec
mov
adc
mov
fcoml
outsl
call
cld
das
xchg
push
jo
js
jbe
push
in
out
outsb
push
cmp
int
push
in
je
sub
int3
or
sti
push
into
leave
push
add
mov
dec
and
lods
cmc
add
mov
xlat
outsb
sub
ljmpw
inc
xor
imul
add
add
idivl
push
mov
and
mov
cmc
test
imul
dec
icebp
add
sti
rep
and
shll
push
sbb
inc
xor
push
loope
cmpsb
and
mov
ljmp
fwait
addr16
bound
push
iret
jae
ss
das
repnz
icebp
dec
ds
call
xchg
pop
shlb
movsb
fimull
sbb
mov
mov
fs
leave
test
call
es
repz
pop
xchg
lock
scas
jge
push
sbb
or
cld
add
sbb
cmp
sarb
or
lods
xchg
and
in
mov
adc
cmp
imul
fidivs
mov
xor
js
jo
loope
push
push
sbb
loopne
mov
mov
or
mov
xor
add
stos
fwait
or
das
test
fnsave
dec
lds
mov
add
in
pop
dec
sub
mov
push
jl
jae
test
repnz
jb
lcall
iret
push
add
clc
adc
jmp
mov
enter
pop
sbb
mov
vmptrld
stc
gs
scas
jp
dec
mov
cld
sbb
jecxz
pop
jbe
pop
adc
clc
push
leave
cli
or
sti
push
idiv
dec
aaa
xor
je
xchg
jo
sub
scas
imul
or
je
ds
jnp
jae
xchg
das
int3
xor
jg
stos
pop
ja
stos
call
jp
push
in
push
push
movd
outsl
je
sub
loope
and
jo
or
loope
xor
outsb
mov
or
cmp
loopne
lods
inc
add
and
mov
pop
outsl
or
loop
mov
js
outsl
jg
pusha
jmp
imul
into
mov
and
loope
xchg
add
dec
mov
out
je
in
jge
out
loop
das
add
aaa
pop
add
cld
dec
lock
cmpsb
or
pusha
lods
cmpl
shl
push
dec
mov
inc
xchg
and
sub
rcl
mov
stos
loop
dec
call
dec
and
xchg
push
dec
cmp
pop
xor
jo
repz
sub
cwtl
mov
repz
imul
push
dec
aas
cmp
mov
xchg
pusha
rcll
nop
xor
push
jle
aaa
in
movsl
mov
jg
xorb
xor
pop
mov
arpl
sub
inc
inc
mov
nop
push
pop
pop
js
insb
or
fcomps
lock
jbe
lock
cmp
gs
in
push
mov
lock
jne
sub
fs
cmp
xor
jge
loop
ja
and
or
inc
test
jnp
push
xor
clc
ljmp
lds
loope
inc
ret
adc
add
or
xor
lds
jne
sub
lahf
enter
push
dec
xchg
subb
jo
push
and
mov
iret
test
les
lcall
pusha
pop
hlt
stc
pushf
cmpl
icebp
insl
imul
clc
mov
pop
es
mov
jge
jbe
adc
aad
mov
imulb
std
jo
repz
fcomip
cmp
lods
int
cmp
mulb
clc
orb
stc
dec
xor
arpl
xorl
imul
in
mov
inc
xlat
dec
xchg
jns
pusha
inc
bound
in
ret
adc
add
in
lds
xchg
fwait
dec
mov
or
cmpsb
xor
lods
lahf
sub
shlb
sbb
js
and
pusha
push
in
sub
notl
jp
lahf
sahf
xbegin
int3
cmpb
mov
sbb
sar
icebp
in
out
loopne
jle
pusha
das
jg
sub
popa
mov
fs
dec
mov
mov
jae
jae
cld
push
or
es
inc
stc
outsl
repnz
arpl
outsb
int3
shr
call
push
in
jecxz
jne
pop
clc
rcrl
sub
adc
xchg
or
push
and
test
jge
jg
push
adc
dec
icebp
leave
pop
sbb
mov
jg
xor
push
outsb
jle
jge
mov
sub
xchg
std
cmp
das
mov
push
xor
cs
xchg
out
out
mov
cmpsl
mov
lahf
xor
xchg
pop
and
mov
jg
push
xor
jp
xchg
sub
cmp
push
adc
inc
insl
xor
adc
mov
es
sub
jb
repnz
and
mov
push
ds
pusha
cmp
inc
push
mov
jmp
int3
jnp
jp
cli
xchg
sbb
cld
movsl
into
fs
xchg
ja
xchg
cmp
jb
aas
ds
dec
inc
cs
pop
jbe
sbb
pop
jne
movsw
test
xor
mov
outsb
cwtl
xchg
je
xchg
xchg
outsl
adc
or
or
adc
inc
add
insl
cmp
out
jbe
mov
rcll
mov
inc
jle
sub
cmp
add
jns
js
aas
add
ret
sub
das
ja
lods
shl
fs
lds
sbb
pop
cmp
int
mov
inc
xchg
cmp
test
adc
inc
and
in
out
pop
std
mov
jae
push
dec
fwait
mov
gs
inc
stc
mov
out
movsl
mov
daa
push
pop
out
jae
rorl
lea
dec
lret
adc
adc
push
insb
aas
mov
aas
jb
divb
mull
enter
dec
or
dec
mov
inc
ret
clc
or
out
popf
mov
test
stc
xor
mov
enter
clc
cmp
scas
xchg
js
mov
push
push
mov
stc
xchg
ret
jns
adc
dec
and
cmpl
pusha
hlt
les
adc
jne
jl
fcomip
dec
into
das
leave
outsb
push
xchg
sub
jmp
test
pop
dec
js
pushl
aas
inc
and
inc
mov
test
dec
cmp
sbb
cmp
pextrw
iret
lock
sbb
fidivl
cli
sub
sbb
dec
je
and
jecxz
stc
xor
daa
jl
mov
lret
insl
jns
mov
sar
sarl
jns
dec
and
hlt
fdivr
jle
daa
in
mov
call
pusha
sti
mov
and
push
mov
iret
es
sbb
test
outsl
pop
jbe
jl
pop
sbb
xor
ja
and
cmp
jp
sub
cli
pop
and
ja
fisubrs
dec
mov
cmp
subb
mov
jnp
jns
shrb
push
rorb
mov
repnz
in
je
sub
jmp
mov
call
in
jmp
xchg
je
push
dec
out
add
or
or
mov
or
idivl
xorl
ja
pop
xor
mov
lods
js
pop
or
xchg
out
jge
or
xor
ja
pushf
xor
push
jecxz
shlb
jmp
mov
mov
sub
cmp
stc
daa
out
int3
jne
ficompl
or
inc
mov
mov
data16
mov
scas
into
insl
pop
sub
stos
cmp
rcr
inc
push
xchg
push
das
mov
sbb
fsubl
outsb
dec
mov
scas
pop
adc
dec
pop
mov
sub
inc
lret
push
xlat
pop
dec
stc
mov
repz
mov
call
inc
scas
mov
call
es
inc
sub
je
adc
cltd
sub
mov
mov
ja
in
dec
cmp
mov
mov
dec
cmp
filds
aas
jb
jno
jbe
clc
xchg
push
ds
mov
test
outsl
push
cmp
dec
mov
xlat
loopne
test
xchg
mov
insb
cmc
lss
addr16
popf
or
and
pop
std
pop
xchg
or
or
adc
jge
out
lahf
gs
call
sub
adc
cmp
adc
ja
call
gs
xchg
ja
mov
xor
dec
pop
jle
in
and
lds
icebp
sbb
mov
cmp
insl
xacquire
pop
dec
sub
push
sub
or
jae
mov
loopne
xor
dec
and
xor
pop
xor
ljmp
xchg
and
push
roll
enter
sub
clc
add
imul
outsb
inc
and
cmpsb
imul
int
cmpsb
mov
stc
testb
ss
mov
ret
xchg
outsb
xor
fisttps
or
push
pop
and
dec
std
test
mov
out
xor
cltd
pop
add
xchg
enter
mov
or
inc
push
outsb
fimuls
call
dec
pushl
or
cmpsb
inc
rep
mov
jne
ljmp
lods
pop
loopne
pop
testl
mov
ficoms
repz
adc
mov
push
into
pop
jp
sbb
call
stos
xor
jmp
add
aaa
cmp
clc
cmp
mov
sub
mov
pop
mov
sub
sti
dec
or
outsb
in
or
cmp
and
xchg
sub
in
pop
cmc
orb
push
in
mov
stos
sbb
jle
xor
adc
inc
jp
xchg
jp
in
testb
sub
dec
sub
lods
adc
or
mov
in
jae
test
movsb
insb
sbb
mov
ds
incb
nop
fs
xor
jg
dec
out
pop
in
sub
daa
inc
test
dec
push
or
out
mov
movsb
outsb
fldt
leave
adc
or
scas
sub
iret
push
pop
in
cli
jl
xchg
xor
out
mov
adc
mov
rol
sub
mov
push
insl
movsb
jmp
call
sub
push
mov
lret
xchg
int
adc
add
add
outsl
jo
out
clc
inc
or
dec
bound
notb
sahf
dec
out
mov
xor
jnp
nop
pslld
adc
and
add
jp
fdivrs
insb
outsl
testl
shr
add
or
out
dec
call
dec
or
outsb
sti
jae
into
daa
repz
invlpg
dec
imul
pop
stc
or
rcrl
fs
xor
outsb
adc
xor
xor
jnp
pop
jge
jp
movsb
int3
imul
push
inc
push
dec
and
add
jg
imul
and
iret
or
dec
ljmp
pusha
std
pusha
popa
or
mov
and
inc
ljmp
dec
test
lahf
outsl
cmp
movsb
or
and
jnp
sub
imul
jg
mov
testl
and
push
cmc
bound
mov
lock
push
jle
outsb
call
loopne
fmull
jmp
dec
scas
dec
mov
arpl
mov
in
fstpl
out
in
mov
call
jp
outsb
ljmp
add
enter
daa
ret
push
imul
cmp
pusha
cmpsb
icebp
outsl
js
pop
jge
in
in
lds
clc
in
lds
jb
popa
clc
es
out
popa
loope
sarb
and
out
dec
enter
cld
call
clc
mov
repz
mov
dec
jl
out
jbe
push
movsb
enter
push
sub
cmc
js
dec
cli
ficoms
jb
or
mov
adc
out
addr16
mov
les
pop
or
cmpsl
inc
nop
jbe
add
arpl
lahf
and
mov
sub
daa
xchg
jp
and
mov
shll
out
daa
or
jl
mov
and
jne
shrl
stc
rcl
repz
pop
lahf
out
inc
arpl
xor
mov
push
iret
jnp
sub
cmp
inc
addr16
enter
call
jg
ljmp
out
cmp
fwait
dec
repz
cld
rolb
sbb
xchg
iret
pusha
jmp
out
lret
loop
outsl
gs
jge
std
xchg
outsl
jbe
xor
xlat
ret
sub
nop
into
clc
out
pop
outsl
inc
jne
repz
jne
daa
dec
cli
pusha
in
dec
fwait
jne
jo
xorl
inc
jnp
pushf
sahf
aas
and
sub
xor
jl
fs
sbb
je
mov
hlt
adc
mov
outsl
call
xchg
and
xchg
repnz
popa
insl
xchg
pop
divb
jbe
iret
out
or
lock
jge
cli
into
and
inc
sti
push
stc
test
into
insl
push
cmp
fdivp
cmp
mov
icebp
jo
rcll
adc
loop
dec
add
pop
or
std
nop
std
dec
and
ret
pusha
inc
js
dec
outsl
mov
push
jae
or
scas
pusha
pop
loopne
xchg
push
mov
sub
out
sub
or
dec
je
dec
aam
shlb
jne
outsl
pop
testl
sti
jle
sbb
add
ret
sub
jg
enter
lock
test
divl
jl
cmc
jl
test
jmp
in
cmp
jo
sub
jp
std
ficoms
jnp
insb
mov
and
push
loope
test
mov
lahf
pusha
sahf
sub
int3
mov
dec
jge
es
dec
sbb
lods
or
outsl
in
dec
jge
jmp
je
adc
xchg
jecxz
cmp
js
and
ds
xor
mov
adc
dec
sub
inc
lock
jae
data16
in
jno
and
dec
cli
or
clc
jne
mov
inc
out
dec
mov
jo
fsubs
pop
popa
out
std
outsb
push
jg
aaa
jle
push
sbb
jl
and
nop
jns
je
testb
outsl
call
xchg
aaa
orl
hlt
jo
pop
inc
jbe
dec
loop
hlt
daa
xor
and
dec
jg
std
nop
or
je
push
stc
test
mov
ss
insb
dec
pop
dec
test
pop
xacquire
loopne
sub
and
jp
js
icebp
push
outsl
or
jbe
mov
in
jecxz
addr16
push
inc
jo
jge
nop
inc
into
rcrb
lahf
jecxz
arpl
jbe
outsl
pop
clc
or
xor
gs
push
mov
adc
adc
sub
loopne
cmpsb
nop
into
jg
or
push
out
lods
or
outsl
in
daa
ss
in
js
rcrb
dec
push
cwtl
pushf
xchg
jo
jbe
jnp
pop
dec
push
insl
sub
loop
lret
je
sub
jae
shl
ds
lcall
out
nop
dec
cli
outsl
stc
jb
fwait
clc
add
xchg
in
into
or
fwait
jg
lret
dec
cwtl
insb
call
jg
dec
or
repnz
icebp
jg
js
fsubrs
outsl
in
and
notb
popf
incb
subb
xlat
popa
sub
nop
into
push
cld
test
into
out
enter
call
jnp
dec
add
jbe
lock
cmc
jae
and
jge
loopne
cmpsb
nop
into
jg
or
xor
mull
pushf
fucom
jb
addr16
cmc
or
jnp
jle
data16
out
mov
addr16
cmc
dec
into
je
mov
push
js
outsl
sub
stc
jl
dec
dec
mov
call
fs
outsb
call
sub
outsl
repnz
dec
popa
in
fcomip
addr16
je
pushf
aas
out
call
jge
xorb
js
push
jg
neg
jne
gs
cmp
in
insl
cli
stos
test
pusha
sub
out
hlt
sti
jl
sti
add
and
pusha
jns
les
and
dec
insl
push
enter
fwait
out
pusha
stos
hlt
mov
test
dec
cmc
dec
bound
jge
stc
mov
mov
xchg
push
push
insl
out
adc
xchg
lock
bound
pop
out
cli
jne
jae
push
xor
enter
call
dec
scas
xchg
xchg
in
sub
nop
into
fs
dec
xchg
push
fwait
dec
and
ljmp
loope
xchg
sub
dec
lret
inc
inc
jecxz
push
jb
dec
repnz
xor
dec
clc
adc
jg
loopne
pop
nop
movq
jae
jae
cmc
mov
or
icebp
js
jns
outsl
test
jae
dec
inc
iret
out
out
add
loop
aas
les
nop
into
aaa
outsl
cwtl
clc
test
addr16
and
fiadds
in
cmpl
popa
mov
in
cmp
or
fiaddl
repnz
js
test
jmp
das
pop
inc
dec
and
addb
aas
ret
cmp
xchg
xchg
ja
mov
scas
lahf
lock
sub
cmp
xchg
test
jmp
sub
ja
jl
loop
aad
jb
gs
xorb
sub
pop
shrb
mov
sbb
jp
ss
or
rolb
shrb
loop
gs
push
cwtl
cmp
pop
jo
outsl
mov
push
cmpsl
mov
into
nop
dec
pop
lret
aad
bound
cltd
jl
pop
popa
sbb
pop
jp
mov
add
or
mov
cmp
popf
hlt
fimuls
gs
int3
jge
orb
push
push
dec
add
pop
mov
filds
and
aad
stos
or
in
cmp
or
pop
add
je
pop
mov
lock
add
inc
or
addr16
inc
imul
cli
das
add
dec
idivl
cwtl
or
xchg
mov
cmp
push
loopne
pop
adc
xor
cmpsl
dec
or
sub
jb
adc
int3
mov
and
mov
jae
shl
cli
ja
lea
aaa
sub
movsl
ljmp
adc
imul
or
test
push
or
in
out
das
test
sbb
in
mov
push
lea
inc
test
sub
xor
adc
rclb
repz
add
andps
cmpsl
fnstenv
sub
fistl
shrb
mov
adc
sub
out
lds
adc
lret
mov
enter
pop
cs
movsb
gs
es
xor
lret
pop
ss
in
pop
loope
sub
in
sarb
in
push
cmp
shll
mov
dec
imulb
popf
mov
popa
push
out
cmc
sub
jl
cmpsb
mov
push
in
test
in
shl
sub
lds
dec
test
mov
adc
dec
inc
mov
das
bound
and
mov
fwait
nop
push
mov
ljmp
idivb
pop
push
fadd
out
scas
dec
push
xor
jb
jle
cld
mov
das
loop
addr16
lret
imul
mov
cmp
adc
aaa
pop
scas
add
imul
mov
das
adc
inc
inc
cmp
or
push
lods
out
or
and
imul
mov
mov
lret
inc
mov
out
pop
lret
push
inc
arpl
adc
or
or
jmp
je
test
scas
mov
push
clc
cs
jo
xlat
in
jno
xchg
popa
sub
add
pushf
into
pop
test
call
das
hlt
aam
insb
shlb
shrb
out
jnp
clc
daa
je
stos
aaa
push
jg
daa
cltd
lods
mov
iret
sti
cwtl
fsubl
add
dec
mov
out
jnp
mov
inc
jp
shlb
mov
push
mov
scas
mov
jmp
xor
fmul
js
dec
outsl
daa
mov
cmp
mov
icebp
xchg
xchg
fs
sarb
test
xchg
rclb
mov
mov
pop
or
mov
lret
scas
mov
loope
or
movsl
sub
rclb
mov
jae
sbb
lods
jb
aad
xor
sbb
repz
or
dec
xchg
pusha
pushf
ss
ja
inc
dec
mov
xchg
gs
push
shrb
out
inc
faddl
pop
in
xor
dec
jecxz
mov
popa
bound
jo
jg
sub
mov
mov
mov
dec
cmp
rolb
js
push
aad
outsl
xchg
int3
pusha
dec
aaa
shr
cmc
fisubs
sub
jp
aas
mov
out
sub
jae
push
movsl
cld
mov
sbb
cmc
lret
xchg
outsl
out
xchg
jne
movsl
push
sbb
icebp
mov
stos
jae
pop
jne
mov
rcll
cs
inc
or
in
test
xor
inc
sub
js
or
adc
inc
xor
pusha
scas
repz
subb
shlb
dec
fs
je
mov
lcall
insl
mov
add
sub
jns
test
push
mov
lret
pop
sub
jmp
adc
mov
pop
call
and
loopne
das
sub
sub
push
mov
mov
pop
ljmp
out
mov
adc
add
xchg
testl
inc
add
push
jp
ljmp
and
push
jb
scas
or
mov
cmp
insb
add
add
mov
movsb
call
cmp
sub
int
pop
mov
xlat
xchg
dec
push
rclb
inc
sbb
test
cmp
add
mov
icebp
xchg
loopne
dec
jo
inc
dec
into
xor
insb
stos
xchg
inc
ret
jle
jmp
xor
mov
xchg
addr16
lret
int
mov
js
scas
inc
xchg
aad
outsl
inc
xor
popa
ret
cmp
nop
mov
dec
and
push
cltd
mov
imul
mov
inc
mov
insl
mov
out
mov
push
js
pop
mov
into
cmp
lds
in
push
outsl
xchg
xchg
xchg
clc
pop
xchg
and
call
movsb
xor
stos
stc
inc
mov
ret
mov
mov
jb
into
jb
ljmp
enter
call
imulb
xchg
adc
fucomp
sub
adc
cmp
daa
test
sbb
fidivs
outsb
sub
test
push
scas
pop
fsubp
xor
xchg
pop
data16
push
adc
repz
insl
divb
fsubs
mov
pop
icebp
repnz
es
roll
push
xor
add
loope
out
ljmp
inc
test
inc
pop
fnstcw
out
or
jmp
mov
xor
das
sub
das
outsl
jmp
clc
and
cmp
jp,pn
js
loopne
sub
dec
push
mov
mov
jnp
gs
mov
adcl
enter
in
nop
fbstp
pusha
inc
aam
adc
xchg
stc
pop
in
out
mov
cvtpi2ps
je
roll
cltd
divb
or
repz
sub
mov
xor
jmp
repz
push
xchg
dec
in
jnp
and
jg
push
outsl
scas
int3
adcl
fcoms
popa
cltd
mov
inc
mov
outsl
mov
pop
mov
out
xor
push
in
out
mov
mov
dec
test
mov
mov
cmp
sbb
leave
xchg
imul
sbb
xor
ja
adc
push
lret
push
xor
mov
mov
in
fsubrl
mov
lods
shlb
iret
xor
push
push
insb
imul
dec
mov
dec
or
inc
xor
mov
aad
push
nop
pushf
mov
mov
or
jg
pop
adc
cmp
adc
xlat
les
mov
int3
xor
negl
leave
stos
inc
int3
lret
xchg
pop
jmp
push
lret
repnz
int
pusha
xor
pop
lret
cld
add
add
dec
sbb
and
add
push
or
out
xchg
sub
insl
fldz
jl
sti
in
sub
sbb
loop
push
sub
jnp
les
mov
xlat
mov
pop
xor
loopne
shrb
mov
xor
cs
xchg
cltd
sbb
insl
adc
ficoml
jecxz
jl
cmp
shlb
cs
xchg
add
xchg
clc
jge
mov
and
adc
in
out
call
mov
fmuls
xchg
roll
daa
lahf
out
jmp
invd
loopne
dec
xor
mov
in
int3
mov
dec
dec
xchg
loop
sbb
mov
scas
mov
bound
mov
pop
pop
push
cmpl
pop
inc
jno
push
jmp
and
cmpsb
xor
jle
outsl
fstpl
popf
stos
push
xor
push
mov
xor
das
add
mov
xor
adc
sahf
es
cltd
jle
pushf
sub
addr16
jb
in
cmp
jbe
mov
movsl
clc
enter
fcmovnu
jecxz
sti
or
mov
xchg
sub
fdiv
std
push
outsl
xchg
or
push
outsl
mov
popf
negb
sahf
je
ret
mov
lret
inc
or
mov
dec
into
test
negb
and
pusha
stos
movsl
bound
repz
mov
imul
and
addr16
jb
xor
push
icebp
jo
scas
idivb
add
mov
fbstp
jb
mov
lcall
imul
mov
jp
imul
push
mov
sbb
mov
imul
dec
inc
iret
mov
dec
inc
test
dec
stos
js
lods
in
shrl
inc
clc
mov
inc
outsl
adc
inc
loopne
mov
lods
negl
orb
int3
mov
inc
popf
jo
lea
dec
scas
mov
pusha
adc
aas
mov
ljmp
pop
aas
sti
pop
inc
xchg
fidivs
push
testl
movsl
push
mov
rcl
cmc
inc
or
jne
jbe
pop
call
push
and
test
and
jecxz
out
jne
cmpsb
jge
sub
js
fbld
dec
xor
in
imul
xor
or
imul
lock
idiv
jl
adc
adc
in
mov
gs
adcb
inc
daa
in
lods
gs
xor
or
dec
cmp
mov
imul
out
addr16
xor
imul
aam
pop
adc
test
faddp
jg
loopne
xchg
test
rorb
and
call
xchg
aad
in
jns
clc
insl
stc
into
out
sub
sub
lcall
and
and
popa
les
rolb
mov
add
ds
xor
cmp
sub
orb
jg
and
addr16
repnz
clc
popf
sbb
lea
mov
jns
adc
xor
xchg
jo
aas
cld
loopne
mov
adc
adc
or
rorl
pop
push
push
dec
lock
in
sub
adc
sbbb
xor
push
lods
mov
jle
ja
jge
int
push
mov
arpl
adc
cltd
dec
xchg
scas
dec
ljmp
lods
dec
out
je
mov
imulb
adc
jb
pop
imulb
mov
js
sub
xor
lock
push
jecxz
jae
cmc
loopne
jp
mov
cmp
xor
aad
or
mov
das
cmp
test
jo
ror
mov
sub
aaa
xchg
xchg
stos
ja
sahf
inc
rcr
lea
in
subl
push
daa
push
lock
mov
or
xor
out
or
fistpll
xor
je
gs
and
fs
dec
and
clc
push
xor
mov
addr16
dec
pop
popf
pusha
pop
in
enter
pop
stos
fdivrl
pusha
sbb
in
sub
pop
jae
loope
and
outsl
pusha
js
sbb
fsubrs
repnz
sarl
or
js
pop
out
dec
mov
dec
jmp
jmp
jg
js
push
cmpsb
lods
addr16
cs
pusha
xor
pusha
push
jo
adc
dec
jl
jp
out
out
adc
cmp
cmc
dec
scas
insl
sti
stc
pop
sbb
xor
out
and
icebp
shl
cltd
inc
adc
pop
loope
inc
add
std
mov
mov
mov
push
dec
pop
inc
jb
int
or
lcall
inc
sub
movsl
les
je
rcrl
dec
jns
shlb
push
outsl
ljmp
sub
sub
sbb
out
adc
js
inc
bound
jno
les
cmc
outsb
xchg
xchg
aaa
xor
bound
icebp
jecxz
push
lods
movl
mov
inc
imul
or
sarl
testb
add
cmp
mov
adc
sub
bnd
mov
jb
xchg
mov
sbb
jne
mov
push
sbb
out
add
insl
lret
or
jmp
mov
ja
pop
and
repz
neg
int3
idiv
cmpsl
xchg
ljmp
mov
xchg
pop
ficomps
hlt
adc
sbb
adcb
push
loopne
icebp
jb
clc
flds
adc
cmpsl
inc
mov
jae
in
fbld
sarl
jbe
data16
es
add
rorb
out
je
pop
mov
sub
jmp
cmp
push
add
jns
into
jnp
and
adc
push
and
inc
loop
scas
mov
sub
sbb
pusha
loopne
and
pop
pop
out
stos
jne
push
out
mov
popa
mov
mov
gs
sub
push
sub
pop
lahf
fisubs
inc
sub
sub
call
mov
lods
shr
push
and
int3
ljmp
push
imul
addr16
sub
and
dec
outsl
and
cmpsb
fildll
sub
mov
xchg
sub
pop
add
outsl
fbstp
jo
mov
add
jmp
dec
pop
ljmp
shll
lock
test
ja
push
sub
clc
mov
leave
jo
jmp
ret
dec
add
cmc
pop
or
insb
stos
or
enter
fs
orb
orl
rclb
icebp
lcall
inc
enter
push
dec
jge
iret
cmc
mov
xor
cmp
outsl
dec
sub
cmc
cmp
or
lock
out
and
push
cmc
add
inc
shll
pop
in
int
mov
sub
dec
imulb
fsubr
sub
and
in
sub
out
fisubrs
and
mov
pop
push
loopne
and
popa
xor
ret
xor
into
jecxz
add
jo
adc
call
outsl
xor
pusha
jl
dec
sub
adc
cwtl
pop
xor
insl
addr16
jo
mov
cli
es
in
mov
in
ss
movsb
out
jg
ret
scas
mov
jno
imul
enter
inc
jbe
enter
cmpsl
cmpsl
or
repnz
addr16
jge
outsl
jmp
add
das
imul
outsl
rcrb
sbb
xor
sub
xor
xchg
mov
movsb
adc
mov
and
test
adc
cmp
adc
inc
fdivr
add
dec
shlb
sub
jp
test
scas
or
fsubs
ds
push
xor
int3
fsubrl
sti
call
addl
insl
ljmp
mov
and
dec
out
xlat
cs
pop
add
jae
jp
sub
inc
inc
js
rclb
sub
scas
insl
clc
or
inc
testl
mov
or
call
jmp
loopne
in
movsb
dec
xchg
mov
mov
repnz
add
mov
xor
lret
shl
cld
imul
cmpb
jnp
sub
out
jb
adc
mov
addr16
lahf
cld
lret
pop
adc
or
push
adc
sti
lods
jl
lcall
push
mov
dec
in
in
xchg
pop
jge
jg
cmp
sahf
sub
fwait
and
mov
cli
addr16
roll
pop
je
mov
shl
adc
jo
outsl
jnp
idivb
push
and
loop
lea
mov
inc
clc
adc
mulb
out
fnsave
mov
mov
push
out
sub
imul
mov
sub
jb
imul
push
mov
dec
jnp
std
and
sub
in
shl
in
addr16
outsb
and
mov
sub
cmc
cmp
xor
imul
pop
fsubrl
jge
in
or
jb
inc
jg
xor
sub
dec
dec
cwtl
sub
je
or
mov
or
jge
in
xor
or
mov
cmp
imul
sbb
cmpsl
push
cwtl
je
mov
xor
bound
in
add
mov
stc
outsl
movsl
or
xchg
dec
jp
mov
dec
adc
jl
add
dec
jp
test
bound
outsb
int3
or
xchg
xchg
repz
mov
jge
cli
push
test
pop
mov
test
add
stos
rcll
testl
insl
push
jo
and
dec
outsl
stos
cmp
jae
and
inc
loopne
sub
icebp
shlb
jb
stc
cmp
in
scas
jg
inc
fnstcw
test
xchg
aas
imul
push
jo
std
inc
pusha
sub
cmp
cmp
movb
ret
in
and
xlat
sar
push
xor
jmp
call
insl
out
adc
jae
jecxz
push
push
mov
dec
pop
push
out
adc
mov
mulb
and
add
add
cwtl
jno
add
inc
mov
inc
arpl
mov
orl
cmp
add
in
xor
xor
loop
arpl
mov
jl
in
push
addr16
inc
and
pop
arpl
fisubrs
insl
xchg
out
inc
add
aas
scas
dec
out
mov
mov
inc
scas
arpl
fs
les
dec
fldt
in
push
mov
lods
cmp
out
mov
outsl
das
in
cs
cltd
call
or
dec
jecxz
test
aaa
mov
outsl
pop
loopne
daa
mov
jp
inc
clc
or
insb
jno
add
data16
js
in
sub
test
jg
aas
mov
mov
or
enter
mov
or
add
adc
adcb
outsl
arpl
std
add
adc
mov
outsl
mov
jbe
pop
lods
pop
push
push
sub
scas
mov
scas
or
lock
push
ret
dec
adc
xor
sub
pusha
or
pushf
adc
jg
in
mov
imul
loop
push
call
jo
addr16
jnp
popa
cltd
sub
sbb
push
lahf
outsl
mov
cli
dec
in
lods
jg
pusha
fldl
loopne
das
leave
mov
mov
scas
xchg
or
in
loop
and
inc
ljmp
jns
es
adc
mov
shl
icebp
dec
jmp
ja
call
pop
imul
call
hlt
mov
call
nop
pop
push
sar
xchg
nop
jl
add
add
cmpsl
jge
jae
popa
loop
mov
movsb
xchg
and
dec
sti
add
lea
stc
mov
push
jae
mov
nop
out
or
cmp
outsl
outsl
xchg
xchg
mov
sub
jae
scas
inc
stc
insb
rorb
lods
call
mov
scas
mov
push
pushf
fldcw
ret
mov
outsb
call
sbb
in
call
xor
jo
loopne
jge
xor
adc
into
or
call
out
bound
ljmp
dec
shlb
xor
dec
mov
add
mov
dec
aas
xor
push
mov
mov
in
sub
les
es
xor
fwait
mov
mov
dec
loop
xchg
xor
jns
push
popa
or
push
xchg
je
stc
dec
xchg
jae
js
push
xor
pop
lret
pop
mov
jo
subb
clc
clc
hlt
mov
js
jbe
jns
insl
jne
out
js
imul
cmp
in
dec
shrb
hlt
aas
mov
push
loope
jae
loopne
pop
roll
jp
divl
outsl
js
jns
mov
out
jecxz
cmp
call
stc
bndstx
call
xor
out
loopne
shrb
push
cmp
sub
stos
push
ds
addr16
js
jp
je
xorl
inc
je
outsl
jecxz
and
das
addr16
adc
stos
in
lds
jbe
lds
dec
pop
jle
push
mov
mov
out
je
insl
push
xor
pop
imul
testl
xchg
dec
mov
sub
push
add
loop
loopne
insb
cmc
shlb
jmp
scas
aaa
sub
cs
loopne
mov
jg
imul
cmp
clc
mov
xor
pop
add
hlt
cmp
inc
and
mov
fistl
imul
lret
in
jge
push
mov
add
sub
and
inc
push
xchg
arpl
xchg
pusha
mov
dec
or
pop
shlb
or
stos
or
sub
enter
push
sub
pusha
repz
mov
push
loopne
mov
loopne
test
ljmp
dec
insl
pop
jo
and
dec
aaa
stos
fstpt
es
outsl
or
popf
dec
pop
jmp
add
jno
test
xor
ret
mov
inc
sahf
sbb
cmpsb
pop
lds
pusha
or
inc
outsl
ljmp
js
incl
dec
add
enter
xchg
cmpsl
push
add
adc
fsubp
outsl
fmuls
sbb
aas
xchg
dec
jnp
cwtl
cld
mov
pushf
fsincos
cmc
popf
add
dec
push
aaa
push
popf
and
outsl
xchg
rorl
sti
stos
mov
shll
pop
cltd
or
jo
or
mov
out
out
adc
nop
mov
push
xor
subl
enter
outsb
dec
lcall
insl
or
jbe
push
cmp
and
and
add
jp
pop
push
popf
add
pop
jb
dec
addr16
aas
mov
and
jmp
xor
jo
bound
sub
xchg
test
or
pcmpeqd
xchg
adc
sti
or
jb
xor
adc
inc
xchg
addr16
pop
rol
dec
jo
jmp
mov
mov
inc
and
out
sahf
jecxz
inc
mov
outsl
cwtl
mov
mov
sub
aam
lock
push
imul
mov
push
xor
cmp
pop
dec
jecxz
dec
xlat
rcrb
jb
movsl
lds
outsl
hlt
cmp
lret
into
push
mov
or
xor
in
mov
iret
jg
cmpsl
sub
out
out
and
mov
enter
xchg
data16
daa
xor
sub
or
mov
scas
out
out
add
sub
out
pop
repnz
insl
lock
outsb
cltd
out
mov
imul
push
out
gs
sbb
and
loop
in
mov
mov
nop
mov
push
mov
inc
out
cmp
add
je
cmp
int3
xchg
xor
and
loopne
aaa
adc
fmuls
outsl
je
and
popa
add
adc
mov
scas
mov
hlt
push
add
or
mov
cli
inc
jo
jnp
sbb
cmpsl
mov
jg,pt
outsl
inc
sbb
vpmacswd
push
mov
mov
push
mov
test
ret
out
lahf
cmpsl
lock
scas
imul
cmp
sti
pushf
subl
dec
pusha
sahf
push
cmp
inc
and
js
fisubl
outsl
clc
and
mov
or
into
ret
xor
popf
sub
sub
adc
stc
mov
pop
inc
adc
scas
lock
sbbl
xchg
xchg
nop
push
mov
out
imul
mov
shr
imul
inc
movsl
xchg
sub
addr16
jae
and
push
addr16
push
cmp
pop
mov
je
jne
daa
aaa
inc
scas
bound
dec
jg
push
daa
shll
testb
push
ffreep
jae
aas
pop
adc
inc
jb,pn
mov
dec
and
mov
pop
enter
fwait
lea
adc
pusha
loopne
lods
pop
in
push
mov
enter
js
sahf
pop
sub
ja
mov
sub
repnz
mov
repnz
in
std
clc
mov
rolb
mov
in
pop
sub
adc
mov
cli
inc
clc
je
ja
cmp
imull
pop
shl
or
bsr
push
pop
and
stos
iret
clc
xor
xor
ljmp
js,pt
jg
sahf
mov
sbb
mov
pushf
mov
pop
push
push
mov
loop
push
lret
je
mov
fwait
das
into
cs
in
mov
cmp
call
mov
mov
pushf
cmp
addr16
pop
pop
jmp
hlt
std
xor
cmp
xchg
jle
es
xchg
arpl
and
jo
lock
xchg
scas
rcrb
mov
icebp
cwtl
lcall
icebp
xchg
push
jno
outsb
enter
lahf
outsb
fistl
dec
outsb
inc
mov
outsl
hlt
and
adc
jmp
inc
cwtl
out
mov
and
lock
iret
push
cltd
jmp
popa
data16
stos
inc
dec
or
sarl
mov
dec
and
inc
inc
jnp
push
lock
icebp
stos
mov
aam
fwait
push
mov
or
dec
repnz
push
cmpsl
repz
leave
hlt
mov
fnsave
jo
adc
mov
out
mov
std
and
inc
inc
aas
daa
jmp
pop
repz
hlt
xlat
jae
xchg
lret
loop
cmp
aad
pop
push
xor
ret
test
enter
mov
call
xor
xor
out
mov
clc
mov
adc
or
aas
daa
sbb
outsl
mov
mov
cltd
pcmpgtd
jp
mov
sub
sbb
adcl
repz
loope
sbb
in
icebp
mov
ljmp
add
inc
mov
adc
push
mov
push
inc
pop
clc
fwait
in
and
outsl
popa
clc
xchg
or
out
adc
aaa
loop
jno
gs
je
ja
fildll
xchg
iret
roll
aas
pop
mov
inc
mov
out
jg
cmp
cmp
mov
pusha
jg
shll
filds
cmp
sbb
imul
pushf
push
dec
stc
mov
insl
scas
dec
addr16
out
mov
cmp
lahf
inc
jbe
xchg
sub
nop
lods
imul
jecxz
sub
xchg
mov
outsl
data16
lahf
dec
loopne
jo
mov
out
movsb
clc
mov
pop
jmp
jl
mov
sub
add
adc
pushf
jp
dec
cmpsl
cmpb
jbe
jb
xchg
clc
lods
dec
sub
aam
dec
xchg
xor
sbb
decl
xchg
mov
pusha
test
imul
cmp
outsl
or
popf
mov
int3
scas
int3
cs
je
ffreep
cmc
es
jb
jb
call
int
mov
outsl
shl
pop
pop
popf
insb
arpl
sbb
shll
lret
fldcw
mov
dec
sub
int3
push
xor
xor
push
mov
shl
lahf
je
pop
shll
or
jne
sub
xchg
addr16
test
jo
lahf
pusha
sahf
dec
fsub
jo
and
shlb
add
cmc
dec
addr16
adc
fbld
aas
jbe
test
mov
or
repz
andl
push
imul
in
test
outsl
lret
inc
test
xchg
sub
testb
dec
add
dec
pop
icebp
jb
mov
dec
fdiv
jb
idivb
inc
dec
movsl
mov
sti
out
jge
xor
lock
jbe
ja
sub
divb
jp
cmpsl
popf
and
lock
xor
pop
int3
scas
mov
fcomps
xor
psadbw
jp
into
pop
lods
xlat
sub
sbb
aaa
fsubrp
es
gs
adc
das
fucomp
test
das
inc
es
out
fcoms
cmc
jne
sub
cmc
and
sub
and
jg
dec
testb
outsl
or
jge
ljmp
inc
inc
fs
pcmpeqd
divl
clc
cmp
int3
xor
fcomps
cmp
dec
xchg
cmpsl
hlt
jns
mov
lock
adc
sub
adc
mov
dec
cmp
shr
push
jbe
or
shll
cwtl
imul
fnstsw
loopne
xchg
loop
outsl
lret
arpl
negl
jo
divl
mov
mov
out
mov
jo
mov
or
or
out
clc
push
dec
push
call
in
inc
int3
int
outsb
hlt
push
dec
ret
jmp
das
add
je
and
jb
pop
aad
push
push
outsb
or
sub
inc
add
cmp
jbe
and
pop
lret
insb
mov
jg
js
pop
push
test
cmpsb
insb
jg
js
in
sub
jne
mov
insl
cmp
movsb
or
xchg
push
mov
push
je
outsl
out
or
mov
push
sub
rolb
loopne
jae
test
jae
sub
mov
xchg
cmp
lea
push
jg
lock
pop
cmp
repz
dec
inc
lahf
sub
push
repnz
and
xchg
sti
shr
sub
inc
mov
in
mov
shlb
sub
lcall
xor
cmpsl
xchg
jecxz
sbb
pop
mov
sarb
je
jns
inc
cmpsl
out
aaa
scas
mov
out
loop
mov
sub
push
in
arpl
pop
mov
xchg
roll
mov
sbb
out
jo
mov
pop
sub
cmp
add
cmp
sub
lret
lcall
lret
sub
sbb
push
dec
jg
clc
mov
es
into
sub
xor
or
push
imul
mov
insb
jp
mov
xor
imul
pop
cmp
pop
mov
fistl
dec
ret
xor
cmp
xor
jo
je
xor
cltd
aam
add
loop
cmp
xchg
push
mov
sub
add
sarb
fdivrl
lret
popa
out
fbstp
jbe
in
dec
ds
push
lock
dec
mov
dec
lea
fbld
popa
loop
dec
mov
jg
ja
fs
je
add
sub
insb
or
sub
shr
jge
cmp
and
orl
sub
shll
xor
sqrtps
bound
xchg
outsb
push
mov
lret
push
push
mov
data16
xor
out
ja
mov
nop
test
outsl
iret
xchg
outsl
push
push
mov
jae
jle
cmp
pusha
push
cmp
movsl
popa
in
sbb
inc
stos
cld
dec
mov
movsl
cmp
xor
dec
xchg
insl
sti
xchg
lcall
dec
adc
pusha
push
cwtl
dec
cmp
dec
mov
in
sub
push
cli
jnp
std
xor
jmp
in
loopne
pop
test
dec
xor
je
jbe
repnz
lcall
sub
xchg
pop
movsl
pusha
inc
fs
mov
cmc
hlt
push
ds
or
and
push
aad
push
dec
xor
or
std
sub
cmp
subb
xor
mov
or
cwtl
pusha
loope
fsub
adc
test
movsl
mov
popa
sti
and
sub
cmp
xor
and
jp
jp
jne
dec
outsl
mov
lods
dec
adc
enter
sbb
movsb
and
jb
movsl
test
scas
outsl
sahf
and
sbb
xchg
jnp
loope
sub
push
pusha
ljmp
lcall
pop
jo
jg
out
jecxz
outsl
std
pusha
xor
jecxz
loopne
sub
add
mov
sub
lret
movups
into
jmp
or
scas
test
dec
fs
sti
sub
scas
add
jns
je
fcoms
out
stc
mov
dec
mov
testl
daa
dec
cmc
xor
or
jp
rorl
xchg
jp
sub
jae
adc
cmpsb
add
jns
mov
aad
pop
mov
popf
out
movq
or
jnp
gs
insl
dec
jge
or
cmp
out
iret
add
fsubr
into
jb
pop
push
xchg
in
outsl
adc
arpl
into
mov
lock
adc
out
and
and
fs
pop
cli
daa
pusha
inc
mov
aas
ljmp
shll
add
fisttpll
jno
je
push
imul
pop
jns
mov
fidivrl
daa
mov
adcb
or
je
cli
ret
dec
insb
mov
lea
sub
and
mov
push
fisttpll
in
sub
sub
pushf
aas
ja
inc
pop
push
icebp
mov
insl
insb
in
and
or
jg
and
or
cmp
shlb
test
dec
addr16
scas
pop
inc
in
or
push
ja
scas
pop
repz
jbe
into
leave
add
mov
add
in
xchg
int
out
imul
push
push
cmc
or
int
dec
and
fldenv
rcl
xor
sub
jnp
iret
adc
out
ja
repz
mov
int3
or
test
sub
sub
or
es
fidivrs
or
mov
pop
ret
rorl
xchg
jb
mov
ljmp
mulb
imulb
push
ja
test
dec
int3
pushf
popa
push
cmc
lea
xchg
test
mov
call
es
sub
inc
pop
jmp
push
in
and
leave
or
mov
sub
in
jge
icebp
push
cmp
cmp
dec
cltd
outsl
fmulp
cmp
setae
push
or
sahf
mov
mov
xlat
and
push
ret
cmp
cmc
sub
testl
lock
je
stc
jecxz
pop
scas
cli
bound
or
dec
imul
push
js
cmp
and
psubusw
std
jns
push
cmp
test
out
cmc
jo
inc
cli
nop
jmp
decl
roll
mov
inc
inc
jecxz
sahf
les
add
sub
push
add
cmp
repnz
jbe
aas
movsb
dec
int3
sub
lret
das
inc
js
js
cmp
movsb
jg
dec
test
into
lret
insl
mov
push
sub
adc
adc
sub
xchg
clc
inc
pop
push
sub
sub
sub
ss
sub
cltd
sub
jge
cmc
pop
sub
cmp
in
or
dec
and
je
xor
xchg
cltd
sub
in
mov
int3
xor
mov
adc
repz
movsb
push
mov
or
push
xorb
test
fsubs
mov
or
sub
or
stc
fwait
outsl
mov
repz
sub
adc
pop
or
cmp
test
xchg
insb
enter
xchg
sbb
dec
scas
push
frstor
inc
cmp
in
dec
insl
xor
push
in
fstpt
js
mov
test
fs
cmp
push
and
pop
stos
test
jg
idiv
or
and
pop
push
jb
lcall
scas
insl
fnstcw
lock
aaa
or
shll
lds
data16
test
xchg
add
insl
pop
inc
test
push
lcall
out
cwtl
and
in
xor
xchg
xor
mov
nop
jne
jo
inc
clc
in
hlt
ficompl
xor
fistpl
mov
push
movsb
xor
les
bound
pop
pusha
neg
loopne
bound
mov
not
push
dec
mov
pop
mov
push
mov
and
lret
adc
ficoml
push
fisubl
pop
add
mov
js
insl
sub
sbb
mov
push
hlt
loopne
or
sub
popf
fs
int3
aaa
leave
xchg
xor
out
fcmovu
cmpsl
mov
test
sub
out
lock
cli
insl
stc
add
xchg
bound
xor
xchg
ret
out
mov
xchg
xor
das
cld
mov
addr16
mov
sbb
sbb
punpckhbw
out
cli
mov
dec
sub
add
and
xor
enter
insb
loope
sub
mov
into
ret
lcall
lock
pusha
mov
push
icebp
mov
aad
cmc
cmp
ds
ds
loopne
pop
push
fbld
pop
sbb
mov
push
into
xor
scas
and
pusha
insl
scas
pusha
cmp
rcrb
pop
clc
mov
pusha
fwait
cmp
addr16
and
cmc
or
adc
stc
imul
mov
mov
clc
mov
sub
ljmp
out
and
ret
data16
pusha
aad
mov
loope
inc
mov
or
and
mov
dec
xor
clc
pop
xor
xor
xor
stos
out
xor
out
cli
clc
dec
xor
out
pop
push
cli
xor
imul
xlat
sbb
sti
sub
das
add
push
fs
test
dec
mov
cmp
cmp
pusha
jnp
pop
andl
jne
inc
aam
xor
jae
dec
and
fdivl
idivl
mov
pop
mov
es
xor
inc
lds
jp
arpl
js
outsl
jp
mov
push
arpl
xor
cmpsl
xlat
jo
push
push
mov
test
or
and
movsb
sub
xlat
mov
ja
or
or
stc
arpl
je
xchg
mov
movsl
cli
stc
arpl
cli
sub
fisubs
jp
test
je
sahf
jp
test
repz
out
jae
arpl
pop
sub
dec
and
push
arpl
mov
sub
divl
cs
int3
push
orl
aas
mov
jns
jb
js
jg
js
outsl
mov
imull
jecxz
ljmp
iret
pop
fwait
outsl
lock
repz
jnp
js
outsl
pop
pop
jnp
push
ljmp
fadd
jnp
fs
outsl
jmp
and
rorb
insb
clc
loope
cwtl
inc
xor
cltd
cwtl
and
jecxz
jae
pop
fbld
pop
xchg
or
dec
icebp
jnp
loop
lret
pop
jo
jo
jae
movsl
jl
and
pop
inc
jecxz
adc
mov
mov
pop
testb
cmp
ret
popa
sub
je
sbb
push
aam
fcompl
inc
adc
push
test
aad
imul
clc
mov
into
jo
xchg
js
fwait
sbbl
mov
inc
das
ds
dec
test
testb
xchg
xor
sub
mov
xchg
das
jae
xor
stos
jl
int3
iret
xchg
jp
loopne
cmp
xchg
ja
cmpsl
mov
cmp
cmpsb
mov
cs
mov
cmp
or
lea
and
popw
xor
inc
add
and
out
dec
xchg
fdiv
cmp
mov
adc
in
and
xor
mov
or
scas
sub
and
addr16
daa
pop
dec
jne
sarl
dec
daa
data16
add
jbe
sbb
cli
fisttps
les
cwtl
bound
inc
sub
add
test
hlt
lods
adc
fcoml
movsb
xchg
adc
xor
aaa
pusha
daa
jo
loope
lock
loop
xor
cmp
pop
mov
adc
mov
sbb
mov
xchg
es
push
dec
das
repnz
push
out
sub
lods
mov
lret
or
fbstp
das
mov
dec
in
lret
lahf
and
sub
cltd
xchg
outsl
in
arpl
sub
addr16
lds
out
pop
clc
rcrl
rcr
clc
gs
mov
popa
bound
cli
imul
sarl
je
js
mov
scas
pop
bound
inc
scas
cmp
sbb
push
cmp
push
sub
jg
js
rolb
movsb
sti
xchg
xor
lds
sbb
xorl
roll
ja
jae
ret
push
inc
ja
add
outsb
jnp
sub
xchg
sub
sahf
jp
and
adc
or
cs
mov
push
sahf
loop
inc
lds
sbb
xchg
je
cmp
cmp
es
cmp
test
mov
jg
loop
cmp
xchg
push
inc
bound
push
pop
jne
or
dec
xor
jo
data16
loop
mov
push
imul
push
jge
add
out
jbe
lock
xchg
ret
cmp
sub
dec
imul
jl
ret
jo
mov
rclb
cmpsb
fistpll
out
add
ret
hlt
test
iretw
repz
add
adcl
mov
add
jns
shlb
scas
test
jge
es
imul
or
aaa
loop
sub
out
xor
nop
leave
jp
cmp
xchg
pop
push
aas
je
and
out
sbb
xor
xchg
movq
jle
dec
rorb
cmp
inc
out
outsl
jne
pop
je
xchg
lret
dec
shrl
hlt
in
scas
mov
rorl
mov
test
mov
add
movsb
arpl
jb
xchg
rdtsc
clc
sub
inc
dec
pslld
in
mov
mov
jae
imul
int3
fstpl
std
icebp
or
lret
bound
mov
sub
rcrl
bt
mov
pop
cmp
inc
xchg
insb
cli
pop
dec
lock
and
int3
sarl
hlt
call
mov
loopne
jg
je
cmp
push
jbe
mov
adc
fisubrs
test
pop
pop
jg
loopne
xchg
mov
negl
jb
cmp
cmp
bound
jne
les
mov
pop
adc
sbb
mov
dec
bndldx
pop
stos
push
dec
lret
jmp
jg
aaa
into
icebp
call
std
std
dec
pusha
fcoms
repnz
pushf
pop
and
xor
xchg
sbb
lahf
or
lahf
sarl
cmp
imul
nop
fiaddl
sub
adc
scas
jo
imul
push
mov
ds
outsl
lret
gs
push
jae
popa
xchg
pop
ss
ret
dec
ffreep
jbe
jp
pop
stos
stc
cmp
nop
sbb
xlat
ljmp
in
je
das
rclb
mov
lret
sti
or
push
lock
mov
cli
out
popf
sub
push
mov
cmp
xor
fnsave
pop
push
xor
out
jp
out
into
loop
mov
js
sahf
out
movsl
addl
dec
lock
push
popf
into
addr16
cmpl
mov
xor
stc
inc
inc
ret
lods
xor
sbb
int3
popa
bound
mov
test
pop
mov
pcmpeqb
pop
icebp
out
jnp
int3
loopne
lret
sarb
dec
jb
es
repnz
xchg
fsub
pusha
push
adc
lcall
jne
adc
sub
in
clc
clc
je
pop
cmp
lods
pushf
test
in
gs
das
mov
jl
add
add
loopne
cmp
movb
shlb
fwait
and
push
dec
jl
fwait
repnz
jmp
jmp
fsubs
cmpsb
or
in
xchg
add
push
mov
pop
iret
shll
scas
mov
nop
test
mov
ja
xor
fadds
dec
push
in
push
pusha
call
aad
adc
or
cli
cmpsl
xor
cmpsb
fs
fmull
add
inc
rcrl
add
ja
insl
cwtl
or
cli
shrl
sbbl
popf
xor
mov
shlb
jns
dec
xor
mov
xor
or
or
adc
std
inc
dec
outsb
sub
pop
out
or
sbb
lock
orl
test
fcmovnbe
outsl
dec
mov
in
sahf
jns
int3
mov
jne
call
clc
idiv
imul
in
fs
in
push
pop
mov
pop
xchg
sub
mov
sub
stos
jp
stc
sub
stc
sbb
push
adc
cmp
loopne
dec
pop
cli
dec
leave
jp
adc
xchg
outsb
mov
es
je
sub
icebp
imul
data16
and
insl
pop
and
out
repnz
in
aas
loope
popa
sub
or
clc
nop
mov
sub
lods
pop
fists
sarb
mov
pusha
call
jge
es
je
clc
in
dec
xor
mov
sbb
jns
inc
ret
arpl
dec
jae
repnz
push
push
call
ret
jp
mov
ja
enter
outsb
les
dec
repz
inc
stos
and
and
test
xchg
mov
pop
jbe
ss
jo
xchg
push
scas
inc
sbb
in
ret
mov
jbe
out
ficompl
setns
inc
jb
push
lret
cmp
clc
add
dec
push
jg
or
jo
sub
out
cmp
push
js
push
xor
push
jl
push
vpsubq
cmp
loopne
lds
and
sbb
loop
subb
mov
cmpsl
inc
pop
orb
fsts
mov
sub
dec
ss
mov
sub
inc
mov
sub
in
idivl
mov
sbb
es
out
aas
push
mov
or
add
inc
and
int3
jb
les
cmp
addb
and
add
adc
adcl
mov
inc
push
ja
imul
or
fptan
loope
adc
cmp
mov
and
andb
pusha
sahf
mov
jp
mov
lods
xchg
idivb
dec
cltd
test
push
xor
iret
add
loope
jmp
mov
xor
sbb
cmpsb
fstpt
in
jno
cmp
mov
jo
pop
or
push
movsl
dec
push
outsl
loop
or
into
fsubs
jmp
xlat
lret
fmuls
xor
aam
dec
pushf
mov
adc
sub
mov
ret
sbb
or
mov
out
loopne
fdivrs
sbb
cmpsl
adc
outsb
je
jns
jecxz
inc
push
or
mov
imul
pusha
sub
scas
mov
fidivrs
lds
out
mov
enter
imul
jp
xlat
mov
sub
mov
bnd
mov
stc
test
xor
loope
mov
rolb
adc
das
push
out
fstpl
xchg
jb
ss
cmc
in
inc
jnp
out
bound
fs
cld
and
mov
xchg
daa
cli
dec
mov
outsl
mov
add
outsl
lock
mov
push
insl
dec
jnp
mov
pusha
pop
mov
pop
into
dec
je
dec
mov
add
cmp
fnsave
dec
insb
pop
imul
sahf
and
push
push
test
out
imulb
fsubrs
mov
test
stc
cld
mov
data16
xchg
dec
les
pop
ret
xlat
xor
sbb
jp
rcrb
sub
stc
push
std
pop
jp
aad
mov
ret
aad
sub
xchg
fs
repz
jns
dec
push
mov
mov
push
aam
dec
popf
jecxz
sub
push
in
dec
jae
scas
test
les
dec
dec
add
dec
mov
negb
jb
fisttpll
jns
inc
jnp
inc
loope
mov
mulb
xor
cmp
cmp
cltd
imul
in
jmp
and
pop
and
std
imul
xor
add
jecxz
addl
xchg
xor
lret
inc
dec
xchg
mov
lahf
clc
or
dec
imul
movsl
pop
mov
je
mov
iret
dec
jnp
or
and
jb
sub
jnp
aas
outsl
and
out
dec
jne
pushf
push
aad
jmp
imul
insb
pop
or
aad
int
pop
mov
and
insb
das
xor
movsl
pusha
repz
ja
adc
mov
filds
adc
test
test
or
lock
cmp
sub
mov
bound
out
cltd
jecxz
movsl
cmc
sti
loope
inc
push
fucomp
je
fldl
cmp
sub
fndisi(8087
adc
les
gs
cmc
incl
xlat
pop
pop
pop
cmp
outsl
out
jp
sub
xor
test
ficoml
aaa
or
mov
jb
and
or
inc
sahf
and
insl
inc
push
pop
xor
push
lea
jmp
mov
pusha
mov
ds
clc
or
ss
dec
sbb
hlt
lcall
nop
cmp
shll
cmc
dec
out
sub
push
aaa
cmpsb
mov
cmp
jg
add
out
push
pop
lods
mov
dec
out
xor
cmpsb
jo
sub
push
push
dec
lock
add
cmpsl
repz
push
push
inc
inc
int3
sub
imul
or
insb
adc
insl
shr
cmp
pop
push
idiv
sbb
add
add
movsb
xor
shr
and
dec
cmp
cmpsl
cmp
sub
mov
mov
add
rcrb
fdivr
and
add
es
outsl
jne
mov
push
out
xchg
js
fcomps
adc
sub
adc
jo
lahf
add
test
add
loopne
enter
and
sarb
push
pusha
mov
out
sbb
pop
arpl
push
mov
jge
mov
or
js
add
jae
outsb
jl
mov
add
cmp
outsl
sbb
je
and
sbb
js
loopne
ret
and
mov
andl
adcb
loopne
loope
mov
outsl
jmp
pop
push
inc
iret
pushf
jg
mov
mov
mov
push
cmpb
out
sarb
dec
jge
jno
loope
mov
mov
xchg
jp
mov
fisubrs
fprem
mov
js
dec
fimuls
fstl
mov
enter
pop
and
aas
ret
sub
test
mov
shrl
sti
fstl
sahf
mov
pop
or
push
mov
rcr
cmp
jnp
mov
mov
inc
cmpsb
out
cmp
add
data16
xchg
lcall
in
add
mov
out
mov
jno
inc
mov
push
sub
shl
shrl
mov
punpcklwd
cmp
pop
pavgw
fistpll
push
fwait
dec
mov
into
push
cmpsb
sub
cmp
fmull
push
xchg
lods
in
jmp
data16
in
mov
mov
ret
mov
rcr
pop
xor
add
sub
cwtl
outsb
sub
mov
add
sub
adc
enter
xchg
ss
cmp
and
push
pop
jo
insl
dec
mov
or
pandn
jge
push
lea
pop
push
mov
mov
push
call
call
inc
mov
or
sub
mov
mov
dec
jg
pop
cs
add
adc
clc
mov
lcall
lods
push
mov
outsl
adc
jle
xor
xchg
or
test
dec
mov
xor
bnd
push
rclb
lds
pusha
mov
mov
or
xor
adc
js
dec
or
sbbl
out
mov
push
jge
movsl
out
outsl
sahf
arpl
fstl
int
loop
test
in
push
or
das
jp
ljmp
mov
jae
pop
mov
dec
push
test
mov
adc
test
cmpsl
out
lock
cmp
ja
jle
loop
shrl
jns
ret
out
lcall
mov
pop
ss
mov
push
test
pop
mov
inc
inc
into
dec
out
dec
mov
cmpsb
loopne
xchg
cmp
daa
xor
js
cmp
dec
mov
popa
in
cmp
dec
adc
xchg
enter
test
bnd
out
sbb
out
js
aas
push
shl
push
sbb
fldenv
jg
push
push
cmpl
addr16
sub
sub
fisubrs
out
or
je
stc
sti
or
test
cmc
outsb
sub
dec
sub
xor
jo
fistpll
js
xor
scas
bound
int3
lock
jg
inc
sti
mov
sub
outsl
jl
ja
cmc
in
xchg
test
add
push
or
ds
ljmp
inc
sbb
inc
jo
popf
sbb
sbb
sarl
push
cmpsl
pop
mov
leave
inc
aas
xor
clc
clc
cli
int3
jp
add
mov
pusha
ds
imul
add
xor
loopne
mov
sbb
loope
stos
loopne
enter
jg
loopnew
stos
clc
pop
fs
jb
in
add
xor
ljmp
dec
imul
testl
jmp
rcr
inc
fisubrs
adc
loopne
pusha
xchg
outsl
scas
mov
push
scas
xchg
sbb
rcll
enter
std
sub
dec
mov
int
adc
mov
notl
push
sub
in
add
or
cli
pusha
aam
fiadds
je
cmp
and
fnsave
add
inc
ret
scas
sub
insb
lret
arpl
or
pop
enter
je
pop
loope
or
lds
inc
outsl
push
mov
cmpsb
mov
xor
pop
pushf
popf
mov
cmpl
cld
adc
and
pusha
mov
sub
in
dec
pop
in
repz
xchg
or
int
jae
sbb
fcmovne
movsl
addl
and
mov
pusha
or
jg
js
out
jmp
jo
mov
pop
or
call
and
cmp
pop
aad
mov
jmp
xchg
push
stos
push
repnz
sub
pop
sarl
jne
clc
xlat
xor
stc
mov
jge
outsl
fmull
in
pop
jbe
sub
outsl
aas
xchg
cmp
mov
push
ret
into
imul
dec
repnz
or
sub
loop
jl
cld
xchg
adc
dec
lock
es
pop
fcmove
xchg
shlb
jg
insl
add
push
push
and
pop
sub
push
lds
and
shlb
sbb
push
cmp
insb
pop
cmp
in
pushl
je
loope
data16
out
push
pop
bound
cld
push
insb
adc
lock
jge
cmpsb
mov
jae
call
inc
jmp
lods
or
xor
sub
push
mov
and
jo
mov
vpsubsb
xchg
pop
in
daa
ja
fstl
lods
cmp
mov
aaa
pop
or
icebp
dec
or
imul
jmp
shl
push
pop
popa
pop
das
jb
enter
inc
sbb
ret
and
ret
push
push
pop
sub
push
lret
jl
push
movsb
outsl
int3
add
imul
popf
inc
push
adc
cmpsl
lock
mov
in
inc
outsb
paddsw
cmp
test
rol
push
mov
out
dec
xor
pop
shl
push
lock
push
mov
jno
or
add
out
rcrl
xor
fsubr
add
fsubrs
or
outsb
sub
out
out
or
push
jp
in
rclb
insb
leave
mov
imul
outsb
test
shrb
sub
inc
sub
out
es
outsb
jg
sub
push
sbb
push
xor
mov
xor
push
inc
sub
add
dec
leave
push
mov
sti
push
or
push
sbb
inc
inc
and
test
daa
ret
fwait
repnz
test
push
shl
cs
add
scas
cmp
inc
ret
jbe
mov
pop
negl
dec
and
pop
dec
pusha
push
fildl
and
movsb
call
ficoms
and
cmp
xor
pop
ret
movsb
sahf
xchg
decl
fdivp
js
sbb
movsb
xchg
inc
outsl
xor
ret
std
cmp
jp
add
xor
out
out
adc
mov
adc
insl
sub
addb
inc
mov
std
movsl
sub
sbb
xor
ds
lret
cld
xchg
sbb
adc
mov
or
xor
inc
adc
dec
xchg
insl
daa
jne
ret
mov
dec
pop
in
movsb
fucomip
flds
sbb
sbb
dec
inc
js
adc
cwtl
dec
je
sbb
in
fdivrp
lcall
clc
out
sbb
insl
aas
push
fimuls
daa
sti
jecxz
sahf
or
das
int3
aas
out
push
insl
sub
repz
xbegin
fidivs
fs
push
and
movsb
aaa
or
pop
int
lret
push
pop
mov
cmp
loop
sbb
pop
jl
pop
or
in
fs
dec
lret
insb
mulb
lods
mov
push
aam
mov
jno
jns
adc
lods
dec
daa
loopne
adc
ljmp
scas
pushf
aad
fcmovnb
movsb
dec
mov
lret
loope
mov
and
cmp
mov
cli
dec
popa
fistl
adc
mov
mov
mov
sarl
insl
pop
dec
aam
sub
test
and
xchg
lods
dec
xor
jmp
mov
test
cmp
xchg
cld
je
shlb
push
jmp
aad
jmp
sti
pusha
inc
mulb
nop
mov
rol
cmc
rclb
mov
dec
push
jne
xchg
pop
das
in
iret
pop
xchg
mov
data16
dec
cltd
mov
jge
push
add
xchg
add
jl
push
dec
sbb
insb
das
adc
xor
inc
sarb
mov
jl
mov
rcrb
aaa
mov
mov
aam
enter
push
shll
sbb
icebp
push
js
push
push
inc
cmp
inc
add
inc
push
adc
das
subl
int3
outsl
outsl
push
pusha
mov
sub
adc
cs
jnp
jmp
outsl
lods
push
adc
je
or
xor
daa
lock
mov
push
lods
daa
mov
dec
das
out
enter
in
xor
movsb
scas
test
lods
stc
sahf
test
dec
cmpsl
sbbl
xor
daa
push
call
adc
and
cmp
stos
int
dec
movsl
push
add
mov
int3
jbe
xor
aam
xchg
mov
imul
add
cmp
cmp
push
shrl
push
mov
or
loopnew
ljmp
sub
jp
add
rcl
jle
adc
aaa
adc
mov
push
loopne
xchg
aad
jmp
add
push
and
lods
dec
xchg
out
pushf
cmp
adc
adc
xor
xorb
je
test
fxtract
mov
jp
arpl
xchg
inc
add
dec
and
int
dec
push
out
adc
and
jg
dec
shlb
adc
jge
rolb
add
and
adc
jnp
or
fwait
xchg
or
dec
addr16
jns
pop
andb
inc
xor
adc
cli
jb
xchg
jecxz
mov
js
daa
subl
mov
cwtl
int3
insb
mov
mov
xor
sbb
cmpsl
cmp
shr
jle
cwtl
jl
das
jo
mov
rcrb
dec
jo
or
fadd
dec
imulb
pushf
jbe
es
clc
mov
pop
jb
aam
mov
test
aaa
in
jns
jge
cmp
pop
int
outsb
xchg
dec
cwtl
insl
add
jnp
sti
js
je
jp
cmp
mov
jg
mov
mov
sub
push
mov
sub
fs
or
add
jle
dec
iret
mov
insb
ret
add
inc
inc
into
orb
fimuls
jns
mov
push
addr16
push
call
dec
out
sub
int3
ds
xchg
je
inc
arpl
xchg
jo
sub
mov
pop
mov
dec
popa
dec
iret
cmpsl
push
dec
or
xchg
xchg
add
cld
adc
jo
xchg
xchg
out
pop
xor
rcll
in
inc
addr16
insb
cs
xchg
ljmp
es
stos
adc
out
xchg
dec
jl
push
mov
push
xchg
mov
inc
cmc
dec
wbinvd
loope
aas
sbb
cld
lods
jne
push
jg
pop
add
fidivl
sbbb
xchg
loopne
es
jl
xor
ret
sarl
aam
leavew
inc
xchg
in
test
push
pop
das
fistl
jle
jge
xchg
in
or
gs
daa
jg
dec
pmaxub
sub
into
sub
lret
out
sub
push
loopne
aad
ffreep
loope
out
fsubrl
cltd
jle
inc
ret
lret
sub
ret
stos
cmp
repnz
jl
sbb
cmp
repnz
ret
aam
int
push
scas
mov
in
rolb
sti
shrb
test
mov
jecxz
call
out
sub
add
icebp
jle
insb
jecxz
and
inc
out
xchg
call
jbe
mov
dec
fucom
push
les
push
or
mov
out
je
and
sub
mov
jns
cmp
clc
mov
jo
mov
inc
jle
inc
mov
js
jg
push
xor
lock
jo
add
int
icebp
push
stos
adc
push
repz
adc
shlb
outsl
ret
lock
cwtl
adc
std
jne
stc
mov
rep
add
iret
jmp
imul
adc
mov
xchg
repnz
loop
dec
push
lret
sahf
repnz
in
cmp
mov
or
ret
es
and
or
adc
sub
mov
divl
stc
dec
repz
or
and
das
ljmp
fsts
stos
out
pop
mov
lret
test
push
xor
cld
and
out
popf
test
js
inc
stc
out
sub
push
js
in
or
sub
jg
data16
outsl
dec
ret
sub
lahf
mov
pop
sbbb
and
pop
pusha
cmc
inc
and
scas
add
cs
jle
jne
push
dec
adc
jb
lods
hlt
sub
push
pusha
sti
xchg
insb
pop
call
pop
jp
std
xor
sub
add
std
scas
outsl
insb
inc
js
fsubrs
lds
xor
enter
repz
mov
out
call
mov
gs
push
clc
std
subb
push
xchg
jecxz
loopne
test
sbb
arpl
mov
mov
inc
jmp
dec
lcall
mov
scas
iret
cltd
cmc
stc
sub
imul
jp
cmpsw
sub
stc
dec
mov
mov
mov
and
scas
aad
mov
pop
dec
stos
adc
test
or
xor
or
sbb
mov
scas
xchg
es
pop
stos
jo
push
adc
jae
or
scas
in
je
sarb
adc
add
js
jb
jo
and
popf
mov
insl
in
std
push
aad
inc
add
mov
add
dec
in
adc
into
and
sbb
xor
je
cmp
or
aaa
arpl
test
test
data16
sub
xor
shll
cmp
cmpsb
int
mov
jmp
out
adc
xor
xchg
lods
fcomip
out
adc
imulb
pusha
push
stos
decb
jmp
jo
or
inc
mov
cli
imul
push
cli
out
push
add
mov
ljmp
test
push
sub
cmp
adc
mov
push
pop
dec
jns
jg
jg
dec
out
cmp
xor
jnp
popa
pusha
loopne
clc
dec
dec
addr16
in
in
out
ljmp
sbb
mov
iret
add
stos
stc
pop
mov
or
sub
sub
fucomip
adc
cmpsb
and
mov
xor
adcl
mov
shrb
jg
and
cmp
sub
leave
fsubl
jg
int3
push
test
imul
jle
dec
in
push
mov
pop
cmp
cmc
pop
lock
mov
sahf
scas
scas
out
xor
addr16
pop
imul
mov
xor
loop
push
jle
jb
mov
aas
xchg
into
adc
leave
out
xorb
rorb
and
xchg
inc
adc
jb
movsl
dec
lcall
jmp
hlt
ds
xchg
inc
es
test
je
cmpb
lret
add
test
jne
cmp
loope
bound
lea
lds
inc
cmpsl
or
pop
clc
lcall
mov
or
push
and
fimuls
outsb
and
push
in
mov
push
inc
inc
push
scas
loop
xor
arpl
push
or
or
mov
cmpsl
ret
ljmp
xchg
adc
mov
push
test
pop
mov
imul
scas
lea
jecxz
je
inc
fwait
xchg
dec
jl
and
fs
stos
cwtl
sub
idivl
rorb
test
fmulp
cwtl
je
data16
inc
movsl
xchg
adc
xchg
jecxz
decl
jge
pop
cmc
outsl
xor
je
fnstcw
sti
push
enter
enter
enter
jg
ljmp
das
insb
outsb
or
jbe
sahf
imul
test
int
test
sub
rcll
mov
es
js
out
jmp
push
outsb
rolb
jg
jg
push
clc
jecxz
nop
push
in
jbe
inc
dec
imul
das
mov
movsb
mov
aam
outsl
jmp
xchg
fisttpl
xor
out
sbb
pop
pushf
out
std
inc
xchg
jo
std
fwait
push
popf
dec
fs
mov
es
xor
mov
outsl
shrb
adc
cmp
cmp
enter
dec
mov
imul
repz
ret
fwait
mov
jo
in
adc
pop
inc
sub
or
das
outsb
mov
adc
cltd
movsb
adc
sahf
ja
adc
xor
lret
sti
cmp
cmp
je
push
notb
jge
insb
mov
loop
xchg
mov
and
push
les
push
cltd
adc
push
dec
xor
fldenv
ficoms
pop
sti
popa
push
sub
pop
fimuls
aad
inc
aad
int3
push
iret
pop
jo
lds
in
and
push
pusha
pushf
xlat
pusha
mov
push
push
mov
jo
mov
adc
lods
or
lock
jge
sbb
fldenv
mov
mov
mov
outsl
shll
mov
jg
sub
lcall
xchg
pop
je
inc
sahf
and
stc
sub
xor
out
cmp
insb
dec
or
insb
addr16
lret
cmp
adc
sbb
addr16
rclb
fdiv
mov
dec
cli
out
mov
lock
mov
imul
shlb
test
in
push
sub
ret
xor
xchg
ljmp
mov
or
sub
add
xor
enter
daa
fdivp
push
insl
in
cmpsl
jb
mov
and
push
outsb
out
arpl
cmc
rcl
hlt
test
es
push
outsl
jae
jp
inc
cmc
jo
dec
stos
stos
sbb
pop
jecxz
insb
shlb
push
mov
inc
insb
adc
mov
bound
insb
xor
inc
jbe
icebp
xchg
fstps
aaa
nop
imul
scas
sub
test
fstpt
je
xchg
jne
mov
lods
aad
jg
xor
in
lods
bound
ljmp
outsl
cmp
push
xchg
dec
add
out
repz
adc
mov
xor
push
push
xchg
cmp
adcl
std
adc
mov
popa
sub
mov
jmp
jle
xchg
inc
mov
jno
jb
pusha
push
and
inc
jo
mov
push
cmp
or
icebp
inc
push
mov
rorb
test
push
scas
or
xchg
fmuls
mov
or
jbe
dec
insl
adc
jo
cmc
jno
mov
les
jg
push
js
pop
shlb
cmp
dec
inc
fwait
jmp
jno
and
fwait
push
inc
or
je
stos
or
inc
int
das
cwtl
sbb
push
or
jg
mull
xchg
adc
test
mov
daa
pop
push
add
inc
insl
push
mov
sub
dec
or
pushf
sub
bnd
mov
jecxz
sub
push
outsb
movsl
or
jo
mov
sbb
insl
adc
cmp
push
in
mov
mov
jo
lret
cmpsl
mov
pop
push
pusha
iret
push
out
outsb
dec
dec
inc
in
nop
sbb
sbb
dec
pop
and
sbb
subb
hlt
add
push
pop
das
jmp
lods
jnp
loopne
ftst
aas
dec
loopne
push
adc
cli
in
and
dec
xchg
dec
mov
insb
sub
loopne
ljmp
lret
ljmp
dec
out
aam
test
xlat
fsubs
mov
mov
jmp
pusha
jbe
xchg
decl
fcomps
test
movsb
test
xor
dec
outsb
lods
dec
out
pmaxsw
or
in
dec
ret
inc
jp
out
jb
pushf
pop
lods
adc
lods
loopne,pn
in
sub
mov
in
out
sub
jmp
jo
pop
out
inc
add
ret
push
in
or
sub
shlb
pop
imul
pop
xchg
sbb
mov
out
or
in
cwtl
mov
add
clc
push
outsl
jb
gs
rorb
je
in
mov
cmp
ret
lret
loopne
clc
sub
sti
aas
pusha
test
lods
je
mov
adc
ljmp
fsubr
add
jp
adc
dec
mov
popa
jo
sbb
fcoml
out
push
push
push
jle
xchg
dec
enter
push
add
imul
imul
addr16
pop
out
aad
jecxz
or
adc
mov
test
data16
pop
mov
cld
push
outsl
addr16
cltd
les
inc
push
aad
dec
out
dec
outsl
or
ret
mov
xchg
or
mov
sbb
fimull
or
das
je
push
cmp
call
push
ljmp
xor
dec
sbb
ss
jo
inc
insl
ret
test
push
inc
sub
xchg
and
jo
pusha
fcoml
adc
testb
sbb
push
outsl
push
test
loop
pop
xchg
insl
mov
orl
and
out
cmc
insl
ss
sahf
negl
jb
ja
push
outsl
shrl
adc
mov
jbe
lods
xor
je
sbbb
cs
mov
mov
popf
pop
lret
mov
aam
aad
test
sahf
arpl
inc
xchg
out
and
dec
push
outsl
fwait
dec
jns
data16
loopne
jb
or
cmc
pop
mov
insl
cmp
daa
inc
js
and
push
aam
dec
xchg
rol
cmpsb
test
xchg
mov
or
loope
repnz
xchg
daa
inc
sub
mov
mov
decl
fidivrs
sti
jae
fs
jbe
and
insl
pop
mov
mov
sbb
mov
inc
xchg
mulb
lahf
int
pushf
nop
out
adc
aad
jge
hlt
cmp
mov
xor
sub
sub
into
lds
lcall
aam
inc
mov
sub
mov
sub
xchg
sbb
xchg
fwait
sbb
inc
pop
cmp
sahf
repnz
sub
inc
inc
xor
mov
dec
dec
pop
xor
cmc
rcrl
xor
cmp
sbb
sub
int3
xor
daa
dec
fbld
pop
sub
and
mov
sbb
addr16
into
imul
push
cli
inc
push
std
mov
and
in
push
jg
or
mov
and
sub
jne
lretw
ljmp
mov
fbstp
xlat
in
xor
sarb
outsl
sub
push
enter
scas
push
push
mov
data16
andb
or
or
mov
inc
xchg
mov
and
or
mov
jns
test
pop
sbb
mov
iret
je
push
pushf
add
pop
out
mov
mov
das
out
add
js
inc
pop
adc
rorb
enter
or
das
push
dec
pusha
out
xchg
jnp
fidivrs
pushf
jb
push
mov
adc
mov
fists
and
fidivs
fs
pop
mov
mov
lock
in
jns
insb
das
sbb
cmp
shrl
jp
push
data16
popf
out
es
imul
dec
scas
lock
and
dec
sub
push
pop
mov
test
push
xor
imul
jno
filds
stc
inc
sub
cmp
push
cwtl
cmp
push
pop
push
mov
loopne
cmp
xor
dec
xchg
push
xchg
ja
test
repz
inc
pop
jge
andb
and
loopne
jnp
jl
fisubl
inc
xchg
into
loopne
imul
dec
pop
jb
cli
push
cmp
sub
cmc
mov
idivb
fs
pushf
adc
add
xchg
jecxz
cltd
mulb
and
dec
inc
mov
sub
dec
cmp
jae
mov
pusha
xor
or
ja
sarl
inc
pop
mov
mov
int
loop
lea
or
add
fwait
int3
test
push
adc
or
outsl
mov
outsb
dec
je
pop
add
fnstenv
iret
cld
mov
es
add
mov
push
xchg
aaa
cmp
rorb
dec
js
mov
lret
mov
inc
cmc
adc
xchg
les
dec
pop
mov
daa
mov
andb
mov
cmpl
scas
push
andl
adc
data16
sub
xchg
test
icebp
sub
test
ja
push
cmp
stos
xbegin
mov
cld
mul
lcall
loop
add
adc
fiaddl
popa
nopl
ljmp
jo
push
dec
adc
cld
mov
pop
xchg
xor
das
sub
adc
int
pop
lret
sti
mov
push
lret
dec
mov
out
pop
dec
push
das
push
add
xchg
dec
xchg
add
xor
inc
xor
out
adc
test
push
loopne
mov
mov
ret
mov
call
popf
orl
repz
repnz
pop
push
xchg
addr16
mov
out
loop
arpl
push
and
mov
sti
lret
adc
out
push
cli
loopne
test
in
cmp
scas
ret
stos
sbb
push
add
cmc
lds
test
push
dec
cmpsl
push
pop
pop
fwait
lahf
pusha
or
xor
dec
sub
xchg
jbe
mov
outsl
inc
xchg
bound
inc
add
push
in
cld
int3
enter
jmp
dec
pop
clc
shll
in
or
lret
pushf
stos
out
cltd
aas
push
arpl
dec
xor
cmpsb
jne
test
dec
mov
jae
mov
pusha
cli
idivl
mov
push
int3
out
daa
mov
dec
jo
in
inc
and
mov
and
stc
xchg
sub
leave
fsts
jnp
stos
and
mov
pop
push
fsubl
dec
std
into
cmc
pusha
sbb
scas
and
decb
sbb
pusha
lret
add
int3
cmp
inc
leave
shlb
sub
mov
negl
lret
les
pop
lock
out
pushf
rcr
clc
and
out
push
fsubrl
clc
ljmp
pop
shlb
jns
xor
xchg
jle
and
into
jno
fnsave
arpl
jge
ret
faddl
loop
pop
add
imul
cltd
sbb
push
jnp
xchg
inc
outsb
stos
dec
cwtl
mov
ljmp
outsl
push
fisubrs
mov
cmpsb
and
lock
leave
adc
lret
jbe
inc
cmp
dec
or
out
lock
fs
mov
push
mov
ret
insb
outsb
insl
sub
inc
das
imul
js
dec
push
das
insb
sub
jmp
cmpsb
movsb
and
pusha
mov
addb
pop
cld
or
jge
rclb
jg
sub
jo
jns
adc
aam
nop
jg
loop
outsl
pusha
outsl
ret
jg
mov
insl
adc
mov
mov
cmp
test
or
jl
imul
rcrl
aam
inc
dec
fdivl
sub
insl
xchg
loopne
or
or
pop
xchg
mov
mov
and
xchg
mov
jecxz
das
pop
jl
push
jmp
fsubr
pop
jmp
insl
push
cmp
xchg
xchg
and
les
jp
repnz
sub
xor
inc
lea
sub
cs
gs
nop
add
in
je
mov
addb
push
repnz
int3
in
pop
lea
movsl
dec
and
pop
mov
cltd
cmp
je
push
je
lds
je
pop
movsb
fsubrp
mov
push
lods
and
push
mov
enter
lahf
jl
pop
ret
insb
sub
cs
inc
into
mov
out
pop
out
add
mov
shrl
xor
loop
or
dec
jo
inc
sub
scas
xor
dec
iret
jge
inc
jmp
imul
cmpsb
jl
inc
dec
jmp
and
in
bound
rcl
xchg
sar
and
inc
jne
push
mov
repz
xchg
mov
jmp
add
es
pushf
sub
fisubrs
dec
test
pushf
inc
lods
and
add
cs
sub
mov
in
icebp
data16
mov
rorl
inc
inc
lret
jo
test
insl
je
ret
cli
jne
push
dec
mov
scas
sahf
test
iret
jbe
pop
gs
bound
dec
sbb
dec
mov
insl
fwait
cwtl
nop
sub
lock
add
dec
pop
stos
pusha
pop
clc
jo
fistl
popa
mov
call
adc
imul
inc
add
addr16
sbb
fwait
js
and
imul
int3
dec
sub
mov
and
sub
iret
or
orb
and
dec
dec
fstpt
and
mov
ss
fadds
cmpsb
outsl
in
add
add
sub
xchg
dec
mov
xor
mov
test
stc
inc
jno
lcall
jo
call
add
fs
push
pop
in
ret
dec
xor
inc
imul
ss
mov
in
in
mov
add
test
daa
sbb
in
sub
mov
in
push
faddl
aas
or
add
out
insl
ficoms
int3
fwait
xchg
xchg
dec
or
stos
and
mov
jl
cmp
cld
jb
lds
sarl
cld
jmp
fildl
js
mov
jne
das
rcll
inc
or
push
inc
or
dec
pop
jae
ret
test
imul
sub
orb
pop
jg
fmull
lret
pop
add
out
dec
cmp
roll
aas
dec
sub
dec
loopne
push
out
jo
or
xor
iret
dec
xor
test
lock
stc
out
pop
lret
popf
mov
dec
adc
cmpl
pop
inc
shlb
sub
dec
sub
lods
dec
lahf
iret
or
adc
in
or
inc
ja
jo
mov
jmp
leave
aas
xor
sbb
stos
loopne
dec
stos
daa
jb
dec
dec
push
xlat
jmp
push
pop
enter
es
pop
or
cld
inc
jg
push
in
cmp
cmpsl
call
outsl
jnp
andl
sub
xchg
jnp
faddl
sub
pop
push
and
dec
xchg
cmp
cmp
sbb
test
arpl
loop
add
notb
jl
pextrw
mov
xor
gs
js
clc
jmp
movsb
mov
mov
popa
sub
fs
jmp
push
lahf
adc
leave
xor
loopne
or
or
sub
outsb
out
dec
add
inc
and
out
xor
clc
push
shll
pop
mov
add
mov
dec
fbld
cs
jo
sub
fwait
lods
outsl
xor
and
in
push
sub
mov
out
gs
pop
adc
call
inc
mov
mov
stc
push
xchg
jo
enter
iret
inc
mov
stc
sub
sbbb
push
pop
adc
mov
lcall
jns
lods
jg
xor
jge
iret
mov
icebp
test
pusha
mov
rorl
cs
or
pop
ret
xchg
sub
orb
mov
int3
enter
insl
add
mov
xor
mov
push
into
ret
dec
lods
pop
jmp
dec
iret
pop
or
cmpsl
push
push
cmp
or
xor
por
push
mov
out
sub
orl
push
leave
mov
test
dec
outsl
mov
pop
mulb
flds
xor
cmp
je
xchg
jl
mov
in
out
ret
pop
insl
xor
je
ret
inc
loope
sub
dec
inc
pop
and
sub
or
sbb
out
xchg
scas
sub
jmp
jge
popa
mov
loop
and
insb
shrb
mov
sbb
in
lcall
xchg
cmp
pusha
test
or
xor
jmp
aas
jp
sub
ret
jl
stos
lock
jo
pusha
sub
push
roll
xor
nop
fimuls
pushf
adc
aas
push
loope
outsl
xchg
sub
pop
mov
dec
shlb
es
jecxz
jle
adc
xor
xor
sub
lret
sub
xchg
xor
xor
je
popf
gs
sar
andl
pop
add
outsb
add
shlb
fsub
in
mov
inc
scas
test
clc
sub
rcl
xchg
insl
in
outsl
test
loope
mov
dec
and
dec
les
push
aas
imul
in
icebp
sub
in
or
mov
shrl
push
or
pop
stos
inc
cs
adc
inc
mov
or
add
pop
inc
push
daa
xor
lock
es
jbe
adc
sahf
out
in
out
orl
sbb
addr16
jle
loop
fimull
push
dec
jae
push
adc
movswl
inc
pop
mov
les
scas
dec
sub
dec
into
rclb
clc
inc
call
clts
into
inc
and
jge
test
in
rcll
into
xchg
test
jns
cltd
cmpl
add
and
scas
jo
sbb
adc
insl
inc
xchg
mov
xor
stos
adc
pop
sub
push
outsb
push
adc
push
int
mov
push
push
cs
adc
or
scas
scas
test
jmp
jecxz
hlt
pop
inc
mov
adc
xchg
push
jle
das
popa
jp
dec
test
cwtl
xor
sbb
jecxz
or
adc
ja
mov
stos
cmp
fwait
push
adc
arpl
mov
adc
addr16
loop
outsl
fmuls
lds
push
call
xchg
mov
sub
dec
fstpl
push
filds
xchg
das
sub
xor
lea
jnp
or
lret
das
cmp
push
incb
xchg
inc
cmp
not
or
push
popa
cltd
test
or
lret
call
je
mov
push
out
popa
and
or
mov
ja
adc
add
mov
dec
push
addl
mov
dec
sub
add
nop
fs
sub
mov
rcll
ljmp
sub
dec
push
and
pusha
negl
mov
sbb
add
loopne
out
repz
and
dec
cs
lcall
subl
push
sub
repz
mov
fwait
negl
clc
pop
in
insb
divl
cli
faddl
and
popa
sbb
sbb
push
imul
js
fisttpll
loop
dec
pop
decl
inc
inc
out
outsb
cltd
push
jnp
mov
test
int3
adc
call
sub
jge
or
mov
mov
cmp
and
in
adc
aam
bound
loop
cmpsb
pushf
jg
andb
mov
or
dec
flds
mov
and
nop
add
lods
fucom
popf
sbb
pushf
push
mov
mov
pusha
enter
stos
bound
lods
out
xchg
shrb
into
sub
lret
dec
popa
rcl
loopne
repz
adc
jns
outsl
jge
xorl
outsb
es
mov
cs
iret
imul
pop
fisubl
sbbb
or
lods
and
xchg
das
fbstp
fwait
jo
in
add
cmc
jg
decl
xchg
enter
ja
addr16
push
enter
xor
into
xor
push
adc
mov
fwait
bound
push
insb
int3
jle
or
int
or
inc
lea
jb
out
mov
inc
mov
xchg
fdivrl
pushf
daa
scas
cmc
sahf
adc
mov
push
sahf
repz
inc
jae
dec
in
out
ljmp
and
xchg
movsb
sub
mov
inc
imul
out
sub
repnz
insb
and
dec
outsl
inc
fstl
push
and
jg
test
fnsave
mov
mov
scas
imul
ja
in
pop
test
and
inc
add
cmp
cwtl
enter
adc
mov
addl
out
out
mov
jg
sub
cmc
push
repz
in
outsl
mov
inc
andb
lods
test
mov
xchg
lock
or
adc
jg
clc
insl
testl
jg
aam
shlb
scas
jnp
out
sbb
ljmp
and
imul
fwait
jns
cwtl
movsl
jecxz
jp
or
jnp
pop
scas
je
dec
adc
push
clc
pusha
imull
pusha
cli
pop
push
add
pop
std
into
xor
push
jo
jg
dec
xchg
xchg
cld
sub
add
dec
push
adc
and
jno
mov
add
sbb
ffreep
jge
sbb
xchg
mov
or
pop
out
and
std
sub
ret
xchg
pxor
push
outsb
adc
mov
jmp
icebp
je
js
in
sub
out
stos
adc
shll
out
adc
cmpl
sub
aaa
jno
mov
popa
or
mov
pop
outsb
pushf
data16
loope
dec
inc
repz
mov
inc
out
push
sub
pusha
and
cmpsl
mov
xchg
and
test
dec
mov
setae
push
mov
jo
test
or
sub
sub
mov
js
cmp
stos
js
push
xor
xor
loop
orb
mov
mov
xor
sub
cmc
dec
es
leave
and
in
xchg
and
dec
jnp
xchg
dec
jne
test
add
das
stc
xor
dec
int
test
pop
xor
out
shr
out
notb
sbb
xchg
xor
or
daa
xchg
pop
mov
inc
imul
mov
icebp
push
xor
add
xor
mov
push
dec
dec
push
jbe
arpl
mov
popf
shl
repz
loopne
imul
lods
dec
fs
lret
mov
jne
dec
es
xor
sub
jge
loope
xchg
pop
push
shr
ficoms
insl
mov
xchg
jo
int3
cmpsb
std
jae
je
lds
test
mov
pusha
lcall
lcall
or
jbe
repnz
sbb
jb
out
pop
int
dec
mov
sbb
inc
cmpsl
xor
clc
push
nop
mov
or
push
js
imul
icebp
sub
and
jge
push
xchg
enter
loopne
ljmp
pop
or
loop
push
sub
outsl
add
js
push
in
gs
sti
dec
pop
dec
arpl
push
or
ret
lds
fsubrl
add
and
jle
fsubrl
xlat
dec
jl
sarb
ret
mov
loopne
dec
push
xchg
loope
mov
xor
inc
jno
je
inc
push
fucomip
mov
mov
clc
stos
punpckhwd
jmp
and
jb
aaa
xor
clc
in
and
push
xor
int3
movsl
jnp
aas
int3
push
sub
cmpsl
into
dec
jge
sub
out
je
push
xchg
aaa
ljmp
push
xchg
fwait
lret
rcr
dec
xor
jg
je
or
adc
call
std
outsl
adc
sub
scas
pop
loop
jecxz
icebp
stc
jge
add
sbb
mov
aad
inc
cmpl
inc
les
in
ljmp
dec
push
int3
dec
int
pushf
outsl
hlt
cmpsl
in
pop
loopne
jmp
sub
mov
shrb
push
call
dec
scas
dec
or
dec
fbstp
sub
hlt
pusha
scas
enter
and
push
and
jns
bound
xor
xchg
sub
das
sub
les
pusha
stc
adc
pusha
and
xchg
out
jae
jo
jne
mov
xorb
in
lock
inc
ljmp
rorl
lods
xchg
push
inc
push
cmp
dec
ljmp
jae
xor
mov
push
adc
inc
shr
fwait
xor
adc
mov
push
insl
dec
mov
sarb
dec
mov
and
add
mull
stos
and
imul
sub
xchg
bound
or
mov
aas
sahf
push
cmp
mov
sub
jb
negl
adc
sub
bound
xchg
aam
xrelease
pop
jg
dec
mov
xlat
mov
jae
cmc
xchg
lcall
out
test
imul
int3
lret
test
lret
dec
xchg
dec
popa
sbb
outsb
loop
inc
push
dec
pop
mov
bnd
xchg
adc
and
fisubs
adc
out
jnp
cmp
loopne
shll
pop
dec
sbb
adc
xor
orl
xchg
pop
movsl
lret
das
sub
mov
mov
pusha
push
inc
inc
pop
lret
adc
jle
push
mov
lods
and
shrb
cmp
push
xchg
test
dec
std
cmp
cmp
out
loopne
test
pop
mov
js
addr16
aam
push
or
ss
add
mov
mov
lea
test
fs
lret
inc
mov
xchg
sti
std
sub
daa
roll
pop
lock
and
inc
scas
and
shrl
std
inc
add
int
cmp
or
push
into
lret
or
add
jnp
cltd
in
lock
rcrb
push
jle
sbb
pop
and
and
dec
sarl
xchg
js
xchg
dec
dec
ret
mov
loope
int3
add
cli
or
stos
jmp
pushf
push
loope
stos
add
jmp
ds
push
dec
mov
aam
repz
push
mov
mov
subb
enter
cmpsb
std
mulb
in
andb
and
mov
out
add
cmpsb
jp
cli
in
andb
lret
int3
xchg
xor
in
cld
cmp
push
inc
or
pmullw
pop
lea
xor
dec
xor
pop
lods
sub
jmp
mov
or
scas
loopne
dec
out
sub
cmp
mov
gs
mov
jp
add
cmc
mov
clc
lds
pop
pop
inc
jbe
insl
fmul
ljmp
sbb
adc
in
dec
pusha
cmp
fidivs
jmp
out
jno
nop
pop
mov
and
insb
sub
xor
aad
loope
out
mov
dec
push
bound
sbb
int3
sbb
outsl
outsl
mov
addr16
mov
xlat
out
out
and
out
cmp
nop
ret
into
inc
fsts
shrb
aam
mov
adc
push
xor
rcr
mov
or
jmp
mov
or
incl
push
dec
into
call
andl
add
dec
out
data16
sub
cmp
subl
scas
into
addr16
stos
mov
in
incb
pushl
ds
out
dec
inc
or
inc
in
xchg
dec
cmc
outsl
sbb
repnz
jns
js
dec
sahf
dec
mov
cmp
push
pop
xchg
icebp
adc
out
loop
int3
and
fdivrl
fs
jge
sti
and
sub
lret
movsl
into
adc
scas
outsl
sub
js
in
and
arpl
rolb
rcll
scas
in
adc
scas
and
ljmp
ja
stc
adc
mov
insl
or
xor
insb
scas
pop
in
pop
int
sub
mov
sub
pop
in
pusha
mov
mov
cmp
and
xchg
push
into
test
pop
daa
mov
or
daa
addr16
gs
ljmp
aam
mov
sub
mov
mov
outsl
jo
jg
into
push
or
lds
push
out
in
mov
pop
sbb
sub
pop
nop
jle
and
mov
outsl
add
mov
repnz
out
inc
add
call
lock
daa
jo
pusha
loop
adc
imul
pop
aas
sub
and
mov
xchg
bound
lret
imul
das
je
insl
mov
insl
shrl
cli
cmpsl
mov
and
pop
jns
cmpsl
imul
jo
sbb
aam
in
stc
dec
in
jl
les
dec
sbb
jp
or
pushf
xor
das
or
cmp
call
jecxz
fs
mov
fsubp
push
push
and
sub
je
inc
scas
int3
jb
mov
dec
xchg
mov
jecxz
fnsave
push
add
movsl
cmpsl
enter
repnz
or
sub
outsb
test
das
cmc
sub
imul
pop
sbb
mov
test
pop
and
adc
cs
scas
popa
roll
ret
adc
mov
push
xor
adc
std
loopne
call
jle
pop
lods
cmp
int3
pushl
inc
dec
std
sbb
cmp
mov
jl
sar
sub
and
and
mov
jne
push
lds
dec
popf
shll
je
xor
xor
adc
ljmp
push
out
test
clc
js
aam
pop
clc
in
sub
sub
js
repz
jl
mov
loopne
repz
and
div
and
cmp
push
adcb
and
push
mov
stc
mov
fiaddl
pop
mov
mov
xor
outsl
xor
nop
cmp
dec
clc
ljmp
sub
push
push
dec
iret
dec
push
out
cmp
stos
cltd
sahf
or
pop
pusha
arpl
stc
je
xor
out
cs
cmp
inc
js
loop
pop
loop
icebp
call
dec
loop
pop
inc
cmp
mov
dec
imulb
roll
mov
aad
sub
or
dec
sti
cltd
jl
repnz
cli
insb
sub
imul
movl
push
sub
adc
dec
cmpsb
clc
cmp
decb
out
hlt
inc
in
dec
in
sub
shl
inc
sub
jo
cld
pop
rcrb
out
or
xchg
push
enter
push
in
out
sti
insb
shll
sbb
sub
out
jmp
cmp
push
or
jo
pop
cmp
fistps
jnp
dec
loopne
xor
cmp
iret
pop
xchg
xor
xchg
popl
pop
mov
test
test
and
pop
sub
inc
loope
jmp
jne
leave
sub
les
rclb
sbb
or
xor
mov
mov
test
jb
mov
pop
mov
jge
dec
outsb
or
aas
sti
or
xor
inc
jg
mov
inc
out
out
mov
pop
push
add
or
lock
jle
sti
and
loop
or
sub
shlb
or
dec
fists
adc
outsl
repz
jle
sub
cmp
daa
addr16
mov
xchg
pop
lahf
je
xchg
inc
cmp
iret
xor
push
insb
and
inc
scas
cmpsb
cmp
push
lods
cmp
jbe
outsl
rolb
xchg
ljmp
cmpsb
xchg
outsb
adc
in
outsl
xor
mov
pusha
test
xlat
pop
adcl
dec
test
jmp
popa
xchg
jns
mov
in
loope
inc
push
data16
lods
and
sbb
add
dec
mov
add
mov
ret
sahf
xor
stc
test
adc
and
int3
adc
add
and
push
test
popa
adc
or
mov
js
bswap
stc
sahf
sbb
out
test
imul
hlt
sub
sbb
into
adc
and
or
lock
bound
mov
cmp
push
jl
std
in
sahf
in
dec
inc
push
fldt
daa
xchg
out
mov
jle
mov
test
xchg
push
xchg
xor
repz
test
int3
aad
mov
stos
shlb
fnstsw
sahf
or
mov
xchg
xor
out
outsb
je
or
pop
lret
or
pop
dec
xchg
inc
test
ja
sbb
cwtl
jo,pn
out
in
lock
sahf
sbb
add
xchg
int3
pop
inc
imul
dec
loope
mov
dec
dec
lret
iret
sub
loopne
into
lret
pop
cmpsl
jecxz
in
xchg
jg
leave
dec
arpl
dec
xchg
pop
dec
jo
ficomps
mov
loop
dec
jnp
push
add
scas
inc
or
push
dec
mov
addr16
cs
ljmp
inc
push
rolb
in
cmp
mov
clc
sub
mov
pop
adc
enter
fists
test
jno
popa
test
mov
fisttps
fnstsw
mov
jecxz
push
psrad
sbb
xor
lds
cwtl
popa
out
fs
je
inc
loopne
dec
mov
jle
ja
push
out
add
cli
mov
jmp
push
xlat
cmp
mov
bound
loop
pushl
in
js
out
pop
xchg
test
jns
sahf
jae
and
rcl
or
dec
or
fistl
outsb
shlb
imul
shr
out
scas
jp
and
or
or
push
mov
rcl
inc
enter
sahf
lods
xorb
xchg
aas
imul
mov
cmpb
test
ja
inc
dec
aas
pop
cmpsb
sub
cmc
xor
adc
pop
fwait
xor
or
lods
and
mov
outsb
or
in
push
mov
in
mov
dec
out
je
sub
int3
mov
cwtl
in
fwait
arpl
imul
push
jbe
inc
jge
loope
out
mov
or
ljmp
push
imul
daa
or
pop
adc
nopl
cmpsb
dec
mov
fwait
mov
dec
into
push
repz
leave
push
mov
call
leave
sahf
movsl
imul
movsl
mov
insl
pop
jnp
dec
lea
jne
xor
stos
push
mov
shlb
icebp
imul
out
sub
mov
xchg
push
cmc
ret
push
stos
je
je
mov
outsl
in
dec
cmp
imul
sub
in
hlt
in
int
enter
js
jno
in
and
sti
jo
in
inc
jns
dec
out
jge
int
mov
popa
lds
aad
aas
cs
xor
popa
mov
xchg
dec
mov
mov
loopne
adcl
fxch
enter
jecxz
pop
cmp
push
cs
pop
test
adc
clc
hlt
ja
fdivp
adc
jbe
sbbb
mov
imul
sbb
dec
in
andps
fbstp
xchg
inc
pop
int3
sub
fs
sahf
inc
ja
pusha
scas
jns
cli
inc
pop
cs
cmpsl
loopne
imul
xchg
jl
stc
jmp
scas
xchg
or
je
push
add
adc
or
push
loop
in
pop
int3
xchg
cld
fbld
xor
ret
and
data16
or
xor
fsts
mov
pusha
mov
adc
scas
rclb
testl
mov
inc
mov
fiaddl
bound
std
fs
repnz
sub
jmp
dec
lods
sarl
fcoml
add
bnd
jmp
push
mul
mov
mov
adc
loopne
push
lahf
fisubrl
jb
cli
cmp
out
les
xchg
js
int3
jne
outsb
cmp
inc
dec
adc
fwait
test
jmp
cli
clc
dec
call
aas
push
lods
call
fisttpll
bound
jmp
jmp
incb
lock
jb
lea
movd
fiadds
daa
dec
test
iret
imul
shll
fisubs
cmpsb
xchg
je
movsl
out
xchg
xchg
ljmp
mov
dec
cmp
mov
ljmp
and
xor
data16
sub
xchg
lahf
outsb
sub
out
std
push
lret
in
or
pop
xchg
imul
sub
adc
xchg
jb
jmp
and
repnz
and
out
testb
js
call
xchg
pop
adc
dec
jnp
xchg
mov
push
mov
push
outsl
mov
pop
or
fs
das
cmp
stc
lret
adc
dec
sub
pushf
jmp
adc
test
mov
and
pop
jle
aas
push
sub
xor
xchg
fwait
dec
insl
iret
std
inc
or
inc
adc
mov
faddl
xor
enter
and
lds
orl
push
rcl
mov
mov
iret
dec
inc
push
divb
xchg
in
into
pusha
adc
sub
daa
imul
sarb
dec
call
xor
insb
dec
sub
repz
out
sahf
int3
cmp
dec
cli
cmp
pushf
loope
push
movsb
enter
sarb
in
fidivrs
sub
aam
cmp
out
add
in
movb
mov
mov
push
call
jmp
in
scas
cmp
push
cmpl
sbb
and
rcrb
sub
adc
test
dec
lcall
xchg
cmp
and
xor
push
dec
icebp
xchg
les
das
aam
and
jb
movsl
and
stos
fwait
jmp
jae
sub
and
jecxz
daa
dec
dec
mov
or
cmpsb
xchg
push
xchg
sbb
insb
imul
out
mov
and
cwtl
dec
dec
inc
es
aad
xchg
sub
mov
adc
sub
sub
sbb
inc
mov
pop
jp
rcr
leave
add
scas
popf
fmull
pusha
adc
cwtl
adc
dec
mov
push
xchg
add
lcall
orb
leave
dec
bound
push
pop
dec
dec
in
mov
arpl
fs
pushf
mov
test
dec
ljmp
lods
dec
lods
outsb
sbb
test
jl
jo
in
cmp
add
jns
push
mov
enter
cli
dec
sarb
jo
ds
outsl
pop
out
jae
cmp
adc
into
outsl
jmp
xor
xor
cmpb
divb
and
dec
cmpsl
xor
or
add
inc
outsb
outsl
into
popa
push
inc
mov
rcll
stc
pop
pop
mov
dec
ja
mov
fwait
xchg
repnz
jb
fistl
mov
adc
mov
in
dec
lock
scas
push
mov
inc
shl
test
cmc
adc
xchg
lea
mov
lahf
add
sub
leave
fsubrl
outsl
insl
cmp
insl
fcoms
orl
xor
lods
dec
pop
into
cmp
or
or
dec
mov
pop
in
dec
call
pusha
aam
cwtl
aad
les
and
pushf
dec
jmp
hlt
xchg
sarb
arpl
sub
and
push
scas
fadd
pop
es
cmp
mov
mov
or
into
sub
gs
outsl
sti
or
mov
mov
into
mov
lret
lcall
shrl
sahf
mov
pop
adc
add
cs
jmp
mov
push
inc
pop
jl
jne
and
loop
in
add
stc
add
fwait
mov
pop
fidivs
jecxz
decl
sub
aas
outsl
loope
aaa
or
test
adcl
adc
push
xorl
pop
outsl
fisubrs
int3
xchg
lahf
stos
shrb
testl
in
or
cli
adc
dec
add
test
or
pop
dec
aas
dec
sti
mov
test
imul
inc
xchg
icebp
dec
xchg
push
push
pop
into
xchg
iret
push
out
sub
dec
and
mov
xrelease
adc
dec
in
frstor
push
out
lock
lods
imul
and
fistl
stos
push
test
test
or
enter
in
mov
test
outsl
sbb
add
lods
bound
mov
push
out
jbe
pop
push
in
cmc
and
pop
inc
pop
data16
pop
jmp
fmull
ljmp
sub
in
sub
call
lock
fwait
jge
xchg
jo
cwtl
rcrl
dec
mov
rol
fwait
cmp
dec
js
lcall
push
cmp
hlt
das
dec
sbb
cmp
into
repnz
jg
or
je
adc
adc
adc
jbe
jo
jne
pop
jmp
addr16
std
adc
testl
push
xor
call
ret
lock
dec
outsb
xchg
dec
dec
nop
pusha
int
and
test
roll
cmpsb
inc
push
jp
cmp
pop
push
les
push
inc
icebp
bound
pusha
aas
loop
xor
mul
outsl
bound
pop
push
jmp
push
arpl
adc
adc
or
jo
lret
xchg
jp
imul
adc
adc
mov
dec
inc
cwtl
push
and
inc
ret
in
and
dec
test
adc
fdiv
inc
or
in
je
or
jg
daa
push
push
push
mov
fnstsw
js
inc
pop
pop
lods
jecxz
mov
and
and
decb
scas
js
fsub
xor
or
aaa
sbb
testl
dec
jb
movsl
outsb
in
dec
insb
lock
mov
sub
lock
dec
lods
and
lods
ljmp
xchg
shrl
add
jo
and
mov
mov
stc
inc
mov
jb
loope
clc
sbb
fists
movsl
xchg
aam
or
pushf
repz
pusha
enter
in
mov
jb
shlb
jb
push
call
sar
popa
dec
or
repnz
in
adc
insl
incb
testl
lea
in
mov
cmp
xchg
push
sub
mov
sub
cltd
dec
ss
dec
and
into
mov
cmc
jp
imul
ret
rcll
fnsave
out
fisubrs
shl
mov
mov
outsl
and
ret
cmpsb
jb,pt
mov
dec
mov
mov
adc
jg
sbb
mov
dec
xor
add
daa
int
lret
je
ret
test
in
negb
sbb
inc
test
sbb
adc
loopne
enter
addr16
mov
sbb
fs
or
and
cmpsb
stos
xchg
cmpsb
in
aas
sbb
xor
test
xor
sub
rclb
fsubrp
test
mov
test
sub
arpl
push
pop
es
cltd
cs
push
cmp
je
dec
dec
je
jb
movsl
icebp
mov
mov
jecxz
addr16
add
fistpl
mov
or
fs
cltd
mov
pop
sub
test
or
mov
test
js
adc
xchg
sar
sub
outsl
hlt
in
pop
pop
lret
or
xchg
movsb
cmpsb
out
fmull
je
stos
jl
xor
or
lods
inc
orl
scas
pop
scas
fdivl
in
in
or
mov
push
imul
loope
inc
jle
push
decb
movsl
mov
and
mov
repz
jo
xchg
je
adc
xor
int3
aam
xchg
pusha
fwait
jbe
in
icebp
rorb
clc
std
fucom
jle
jae
jnp
push
push
loop
xchg
mov
xor
sahf
or
addb
lock
inc
cmp
xor
mov
test
jae
inc
push
outsb
or
push
dec
insl
rcr
call
push
loopne
repnz
dec
or
movsl
sub
sbb
arpl
les
insb
or
arpl
dec
je
gs
add
decl
push
sar
imul
jno
ljmp
flds
in
pushf
int3
call
arpl
fmull
jo
testl
lea
fidivl
push
mov
or
inc
outsl
sub
mov
sub
iret
or
adc
mov
push
dec
test
xor
stos
push
mov
push
mov
out
out
mov
lea
push
outsl
dec
dec
xor
punpcklbw
inc
mov
das
jns
push
push
dec
pop
test
setp
mov
fadds
stc
daa
adc
or
push
lock
dec
cmp
inc
enterw
icebp
dec
in
aas
adc
xor
and
rolb
adc
ja
scas
bound
mov
les
sbb
jo
test
iret
outsb
out
out
push
in
addr16
outsl
mov
enter
push
mov
test
repz
ret
loop
out
xacquire
sub
out
daa
xchg
daa
pop
out
arpl
adc
in
lret
mov
pop
mov
test
fisttpl
jnp
repz
pop
ret
popf
filds
push
aaa
sti
and
dec
add
push
iret
jg
dec
push
outsl
mov
popa
stos
mov
cmp
imul
xor
int3
movl
jbe
andl
pusha
out
mov
dec
loop
ret
mov
out
mov
mov
popf
ds
jbe
adc
sbb
test
leave
ljmp
enter
repz
mov
push
lods
xchg
cltd
sub
lds
scas
jle,pn
lahf
inc
mov
sbb
pop
rcrb
mov
sbb
pop
inc
add
ud1
test
addr16
arpl
shrl
dec
into
outsb
push
add
dec
dec
jb
dec
adc
and
sub
adc
push
dec
add
scas
xchg
inc
out
cmp
or
leave
lods
call
or
movntq
out
dec
inc
jmp
bound
loope
cmp
iret
outsb
cld
shll
jle
jmp
and
lret
jne
dec
inc
cmpsl
jmp
add
pop
call
sub
mov
loop
push
push
outsl
jo
sub
jns
cmp
cmp
addr16
lock
in
out
ret
js
repz
dec
dec
xchg
xor
pop
push
arpl
xchg
push
aaa
aaa
rclb
xor
out
out
push
nop
sti
push
ljmp
jne
mov
and
jl
mov
shlb
inc
jge
in
gs
call
out
jg
lds
pop
push
pushl
inc
mov
enter
push
jne
aad
rep
loopne
sahf
ret
and
aas
xchg
xchg
aam
mov
lock
xchg
mov
xor
loope
inc
push
hlt
jo
push
jge
jge
dec
orb
int
movsl
in
insl
dec
gs
mov
xchg
clc
jns
jg
test
in
into
in
jp
negl
fwait
in
jg
jp
dec
das
inc
jl
test
hlt
scas
bound
insl
gs
xor
sahf
jg
dec
lahf
cld
mov
scas
inc
das
jl
ljmp
dec
lock
push
sub
in
push
adc
mov
sbb
aam
jmp
jmp
clc
dec
out
xor
adc
dec
mov
lods
clc
or
insl
call
jo
das
ljmp
dec
outsb
out
iret
outsb
repz
add
nop
daa
dec
cwtl
pop
jns
push
jne
outsl
pop
inc
pop
push
imul
aaa
sub
or
jge
orb
test
mov
test
fimuls
ss
xchg
xchg
das
add
cmpsl
loop
fisttpl
ljmp
leave
je
lahf
adc
or
mov
mov
jo
test
and
and
and
clc
or
or
and
repnz
testl
xlat
aas
loop
andb
xor
cmpsb
outsl
into
add
daa
dec
sub
in
adc
jge
arpl
inc
vpermt2ps
aas
xor
call
push
push
in
ljmp
inc
and
stos
fmulp
cli
and
push
sub
in
js
bound
mov
addr16
and
xor
xchg
cmpsb
insb
aaa
in
dec
pop
addr16
push
loop
fs
sahf
dec
outsb
andl
inc
sub
cli
idivl
shr
movsl
sbb
loopne
in
push
push
hlt
jg
jp
pop
cmc
xor
test
imul
js
push
js
or
jmp
hlt
data16
lahf
pop
xor
test
jb
mov
gs
push
js
or
jmp
push
in
or
clc
lahf
pop
je
lock
loope
lahf
pop
xor
mov
js
jb
inc
lahf
dec
imul
xor
mov
hlt
jb
and
test
push
jge
or
icebp
lahf
pusha
outsb
add
lea
jnp
pop
divb
jb
pusha
insl
loop
push
loope
lahf
pop
hlt
xchg
out
jmp
pop
addr16
test
push
ja
or
push
insb
lea
pusha
lahf
pop
cld
xor
test
jb
sbbb
mov
jle
mov
stc
js
adc
jmp
out
in
or
js
pop
je
out
bound
call
lea
jne
int3
inc
call
jae
test
addb
leave
sahf
sub
in
lods
jo
int3
mov
and
add
insb
out
mov
or
lcall
inc
and
cmc
inc
jecxz
cmpsb
or
mov
or
loop
subb
sub
addl
add
insl
outsb
insl
dec
in
cmp
in
push
sahf
pop
xor
lock
les
leave
add
daa
mov
pop
inc
leave
sub
js
mov
out
jnp
cmpb
mov
call
mov
push
in
movsb
mov
mov
in
jo
dec
cmpsb
and
dec
mov
dec
cmp
loop
or
outsl
pop
pop
mov
subb
mov
mov
je
ss
insl
das
std
loope
into
xor
lods
inc
lods
in
sub
ds
fimull
inc
scas
inc
insb
xor
jl
fnstsw
push
push
xor
js
enter
dec
pusha
mov
call
jecxz
or
dec
mov
decb
inc
insl
test
stc
mov
not
adc
das
pop
fs
faddl
and
sti
cmp
insl
fisubs
inc
movb
jge
push
push
das
in
jmp
dec
imul
out
sbb
jmp
or
ret
mov
cld
pop
imul
dec
push
fimuls
sub
and
jge
cs
push
sar
clc
inc
and
sub
lret
loop
in
int
out
out
inc
repz
sub
push
repnz
dec
hlt
inc
jg
call
and
and
sub
sub
idiv
mov
pop
jmp
sub
idivl
cmpsb
push
add
loopne
loop
fidivrl
adc
jge
push
sub
clc
cli
dec
mov
mov
sahf
add
addr16
inc
sbb
out
in
cmp
notl
sub
shlb
xchg
addr16
movsb
jbe
out
jge
pop
dec
or
enter
test
pushf
jge
stc
icebp
push
jmp
jne
popf
pop
enter
int3
aad
dec
fildll
aas
lock
mov
xchg
sub
imul
shlb
cmc
aaa
sub
mov
call
dec
sti
push
inc
add
aad
sub
dec
pop
dec
dec
shrb
clc
scas
dec
aas
lret
idivb
pop
jb
lock
pop
scas
in
js
adc
or
mov
int
aaa
xor
insb
pusha
in
hlt
addr16
add
adc
pop
jle
in
addr16
jo
cmpsl
push
in
repz
jle
sub
add
insb
hlt
and
or
pop
les
push
daa
dec
rolb
sub
leave
enter
stos
jg
out
sub
or
cld
jbe,pt
jmp
or
cmpsl
adc
cli
push
dec
enter
sbb
lcall
or
xchg
ret
js
enter
addr16
cmpsl
cmpsl
or
xor
push
cmp
stc
in
insl
insl
test
ljmp
pop
dec
cmpsb
jg
das
mov
pushf
lds
jmp
mov
ljmp
int
loop
outsb
cmpsl
loop
insb
insl
into
pop
loope
lods
aaa
test
pushf
ljmp
outsb
push
je
insl
mov
jmp
and
les
lea
cs
inc
xchg
daa
test
ja
lock
or
lea
cli
into
out
xor
std
fdivrl
push
loope
add
or
push
mov
sbbb
cmpsb
or
xchg
cmp
and
out
lods
cli
and
sub
dec
pop
out
jg
daa
imul
cmp
inc
sbb
or
aaa
dec
out
push
imul
test
data16
iret
cmpsl
mov
lock
adc
mov
inc
mov
icebp
inc
mov
cmc
mov
and
and
addb
cmp
fists
insl
adc
aas
jbe
rcll
jo
and
dec
jbe
dec
lcall
aas
notl
lea
subb
cmp
mov
ljmp
fnstsw
or
ds
scas
xchg
outsb
dec
outsb
imul
iret
je
js
decl
jae
mov
xchg
cmp
sub
jne
orl
rcrb
in
lds
jmp
and
mov
push
add
lret
sub
call
and
decl
xchg
jo
xchg
bound
jg
fistpl
test
cmpl
pop
xchg
cmpsl
lret
mov
sub
jns
cmp
mov
jl
or
loopne
mov
and
lret
clc
shl
outsb
sub
mov
jbe
push
sbb
scas
divb
xor
loope
call
and
mov
xchg
dec
mov
dec
sbb
enter
bound
ds
add
mov
add
ja
aad
xlat
and
bound
jb
fidivl
addr16
sub
xor
mov
sub
dec
popa
jae
cmpsl
mov
sub
push
stos
mov
push
subb
pop
ds
sub
sub
rcrl
jns
inc
loop
inc
lahf
out
loopne
sub
fcomps
orl
push
push
cmpsb
mov
and
pop
mov
das
mov
xor
jo
cmpb
sti
call
sub
jg
jmp
mov
cmp
pusha
call
lcall
stos
cmpsl
cwtl
sahf
out
add
push
outsl
sub
pop
cmp
pushf
adc
or
outsl
jg
sub
cld
enter
inc
mov
mulb
cmp
ffreep
and
cmp
int3
je
negb
fwait
mov
out
repnz
inc
iret
jb
xchg
pop
mov
jo
enter
popa
jecxz
mov
adc
decb
jle
xchg
cmp
mov
stos
in
nop
xchg
out
les
inc
test
sub
jae
sub
pop
in
out
push
adc
sub
jmp
out
nop
or
enter
insb
outsl
lret
ljmp
mov
pushl
inc
je
pop
aas
pusha
mov
mov
repz
popf
sbb
aad
repz
sub
scas
mov
pop
je
js
mov
aas
sub
stos
sub
adc
loopne
push
push
call
cltd
jecxz
movsb
dec
lea
sbb
or
imul
mov
xchg
hlt
add
mov
mov
nop
dec
out
xchg
cld
stos
add
jg
pop
jne
cwtl
scas
mov
jnp
icebp
shlb
imul
sub
mov
dec
lcall
xor
jg
cmp
dec
add
cmp
dec
lds
cmp
dec
mov
pushf
jle
push
out
das
in
insb
adc
pop
sub
dec
fs
or
mov
pop
out
shrb
loope
cmc
sub
out
or
dec
insb
call
or
test
pusha
jp
adc
xor
jg
pushf
jle
mov
jg
adc
mov
jo
jns
jle
mov
adc
std
shr
dec
xchg
jg
pushf
jle
sbb
pop
sbb
jns
mov
jae
nop
mov
mov
test
adcb
lods
adc
lret
fsubl
loopne
test
jg
push
adc
and
jbe
or
jb
jo
je
les
and
call
scas
je
cli
sub
sub
or
pop
imul
inc
in
sub
ds
lock
out
adc
arpl
shrb
pop
xchg
repnz
rol
dec
cmp
sub
or
adc
stc
fs
pop
call
and
fs
movsb
aas
inc
je
out
mov
repz
or
cmp
test
pop
sub
dec
in
mov
outsb
cmp
and
xchg
insl
jmp
pusha
jne
repz
and
std
ret
jg
jnp
jge
cwtl
imul
pop
add
in
mov
insl
out
cmp
je
xlat
mov
jp
xchg
add
int3
push
outsb
push
adc
lds
andl
inc
or
stos
jnp
insb
hlt
ror
test
sti
std
sub
orl
add
xchg
data16
lock
fidivs
xor
and
dec
insl
mov
cmp
sti
sbb
sub
jo
out
push
and
jae
mov
leave
test
in
mov
or
test
sub
xor
and
mov
jb
xchg
out
out
xchg
or
push
ret
stos
mov
mov
jno
sub
mov
sub
stos
and
xchg
aam
fwait
ja
in
mov
jo
int3
aad
rep
mull
dec
cmp
mov
push
loop
lods
or
adc
jp
mov
dec
imul
mov
test
xor
scas
adc
mov
xchg
xchg
test
fildll
sub
popa
jne
jbe
push
xchg
fwait
testb
adcl
loop
jo
bnd
in
lea
sub
cld
and
and
jp
bswap
push
xor
loopne
mov
pop
ljmp
jnp
rcrb
and
test
into
sub
mov
xchg
aas
or
iret
or
push
ror
xor
cld
sbb
xor
push
jns
fisttps
sar
sub
gs
inc
xchg
sahf
jbe
shrb
xor
loopne
negb
jge
cmp
cmc
iret
call
aam
lds
inc
lock
push
adc
mov
xor
call
aam
push
sub
cwtl
push
out
in
mov
jg
xchg
jl
in
jno
add
add
jmp
pusha
inc
test
sub
in
lods
pusha
scas
insl
or
in
jp
push
out
out
out
data16
jne
pop
mov
clc
rcll
dec
call
aas
jne
addr16
dec
hlt
xchg
dec
push
std
cmp
stos
in
sarb
xlat
cmpsb
mov
outsb
pop
pop
jns
sub
ja
insl
cmp
mov
fucom
in
js
sarb
cwtl
and
add
mov
dec
cld
dec
xorb
nop
sarl
push
pusha
insl
outsl
stc
gs
jns
push
aad
je
ror
out
cmc
into
xchg
xor
add
mov
adc
std
das
pop
adc
fisubrs
sti
adc
insb
sub
loop
shlb
ret
rorl
pop
ficoml
adc
xchg
shl
lock
loope
pop
std
or
sub
call
mov
das
call
call
in
in
lock
sbb
aas
aad
mov
jo
and
ja
cld
push
push
cwtl
adc
pusha
or
adc
out
xchg
jg
inc
stos
push
ja
test
arpl
mov
ret
push
lret
cld
mov
outsl
push
mov
inc
andl
je
or
mov
repnz
test
test
and
addl
dec
adc
hlt
dec
cmp
pop
fisubl
shlb
xchg
leave
cmc
insb
jecxz
adc
or
insb
or
pop
and
std
pushf
push
pop
inc
xor
scas
mov
push
push
push
orl
decl
lods
jp
sbb
loopne
cwtl
daa
mov
in
xor
adc
lcall
pop
dec
das
jmp
insl
test
push
popf
ret
dec
jge
insb
pop
adcb
repnz
jbe
and
rcll
lock
mov
rol
adc
shrl
or
rcr
cmpsb
lock
xor
out
pop
lahf
jle
pop
and
nop
sahf
mov
push
aaa
js
sub
fwait
mov
test
sub
xor
out
div
insb
mov
lcall
mov
je
jmp
jbe
call
pop
cli
data16
xchg
repz
lods
adc
jne
jmp
xchg
fbstp
outsl
je
fdivrs
mov
sbb
dec
jnp
mov
out
loopne
pop
xor
and
loopne
pop
inc
jge
xor
mov
mulb
cs
adc
jo
lahf
clc
or
xor
in
mov
test
jbe
mov
dec
rep
and
push
jmp
lock
loop
scas
sub
mov
scas
add
dec
mov
xchg
and
in
repz
mov
adc
mov
dec
cmp
xchg
hlt
in
push
outsb
inc
out
or
fsub
decb
or
pusha
mov
imul
outsb
int
call
fmull
jo
pushf
cld
inc
cltd
pushf
jp
enter
jnp
dec
push
jae
stc
clc
cmp
sub
jmp
clc
subb
scas
xor
mov
jp
mov
out
pushf
lahf
loopne
cmpb
sbb
mov
sbb
push
mov
jmp
inc
loop
arpl
pop
inc
pusha
dec
into
fisttpl
pop
mov
jbe
and
out
mov
cmpsl
xor
sarl
fs
sbb
xorb
push
negb
testb
in
sbb
sub
dec
pushw
push
pop
out
ljmp
outsl
bound
xor
loop
stos
pop
into
jo
cmp
pop
shlb
inc
cltd
adc
push
loop
lock
dec
imul
insb
loop
dec
test
outsl
xchg
adc
pop
data16
les
mov
mov
loope
or
out
push
jo
cld
scas
or
stc
cmp
testl
pusha
jns
jmp
repnz
pop
in
imul
rcrb
insb
mov
mov
jmp
fsubr
insb
or
mov
mov
or
push
sbb
push
push
lret
jo
lea
out
mov
sahf
icebp
hlt
cmpl
popa
xchg
push
adcl
add
imul
rclb
or
adc
mov
fisubs
in
lea
push
dec
test
cmc
cmpb
pop
imul
pop
nopl
hlt
decb
lock
dec
aam
out
cmp
in
and
insl
push
mov
dec
jge
outsb
jg
xor
adc
rolb
fcoms
fiadds
fnstenv
inc
in
add
jge
inc
loop
jge
cmp
mov
dec
jns
loopne
jle
gs
dec
fistpl
jle
outsl
stos
jge
push
scas
sub
adc
negb
sub
inc
paddsw
inc
repz
ret
push
pop
shlb
and
mov
jmp
lcall
int
mov
fmull
jg
xor
loope
mov
lds
outsl
popf
decb
out
sti
ja
mov
scas
jmp
cmp
repz
mov
jg
push
cli
popf
dec
stos
sub
icebp
mov
in
call
pop
mov
pop
jle
loope
adc
in
cmp
or
jmp
mov
shr
stos
dec
pop
fs
mov
mov
stos
pop
int
adc
push
sti
mov
leave
fisttpll
pop
imul
je
jp
mov
lahf
in
sbb
cmc
enter
mov
push
addl
inc
jge
inc
sbbb
jp
stos
sub
sbb
js
pop
xchg
push
das
pop
dec
cmpsb
add
movsb
xor
sub
lea
jae
test
je
into
pop
test
insb
mov
or
add
jbe
jb
mov
aaa
dec
outsl
mov
jns
lock
insb
push
cmp
imul
or
out
loop
int
pop
scas
add
rorb
jns
mov
xor
sub
sbb
pop
fsubrp
mov
imul
cmc
dec
sub
xor
xchg
js
clc
scas
dec
test
loope
cmpsb
je
js
lcall
dec
mov
hlt
pop
pop
mov
sub
js
enter
xchg
pop
mov
dec
xchg
imul
adc
loopne
fimull
fldt
outsl
mov
cld
xchg
lock
std
sub
pushf
push
outsb
fs
mov
sbb
in
fisttpll
or
mov
jecxz
inc
add
outsb
jp
xlat
sub
outsl
hlt
popf
pop
cli
sahf
xor
fdiv
cmpsb
lret
sbb
stc
add
lods
mov
lods
aaa
pshufw
jns
push
pop
daa
repnz
jle,pt
mov
in
mov
adc
insl
clc
jecxz
out
or
mov
popf
outsl
jne
subb
inc
xchg
inc
je
out
jg
pop
cmpsb
sub
in
ds
dec
inc
stc
je
in
jl
outsb
inc
iret
int
sti
or
in
mov
dec
stc
mov
in
cli
pop
test
mov
adcb
jo
sahf
jmp
int3
int3
push
cmc
insb
into
in
call
xchg
out
aas
cmp
cmp
dec
pop
out
mov
in
sub
dec
jne,pn
and
pop
call
cltd
jle
sarl
gs
xor
loop
outsl
cwtl
pusha
sbb
lods
mov
ljmp
fs
ret
sub
in
jge
adc
jmp
mov
pop
dec
bound
jns
les
inc
mov
or
or
test
sub
out
outsb
negb
ret
outsb
stos
cltd
dec
popa
or
jbe
dec
and
clc
and
imul
mov
push
out
cmp
sbb
inc
jb
out
les
mov
jb
fwait
movsb
das
aad
jle
dec
mov
jecxz
repz
sub
cmp
mov
ljmp
jb
mov
popa
xor
or
inc
cmp
mov
mov
neg
adc
push
add
mov
mov
fcomip
popa
jl
aaa
fisubrl
jne
fsubrs
test
rol
vpaddusb
xchg
dec
cmp
sbb
cltd
jle
adc
sub
mov
adc
gs
push
out
repnz
gs
imul
push
dec
in
pop
es
mov
mov
push
mov
inc
push
cmp
ja
sti
jns
cltd
cld
int3
out
adc
sub
sahf
pop
pop
imul
clc
sti
mov
mov
xchg
nop
xchg
fistpll
adc
out
es
popa
insl
test
jb
mov
mov
dec
push
jbe
out
inc
loop
hlt
cmp
imul
mov
movsb
lcall
jl
shrl
jb
rol
mov
lret
adc
jb
cmp
xchg
imul
pop
cmp
sbb
pop
dec
outsb
out
jp
fwait
cmp
fsubr
adc
sbb
mov
cwtl
in
lret
and
dec
bound
or
push
push
es
sahf
lret
mov
sub
data16
arpl
lods
repnz
xor
fistpll
out
out
cli
into
adc
or
mov
dec
jb
aam
sub
add
dec
fnstcw
sbbl
ficomps
push
add
mov
loopne
imul
clc
mov
jo
push
and
clc
cwtl
dec
jle
mov
ja
pop
jg
ljmp
pop
and
ljmp
or
std
loopne
fsubrl
mov
je
jae
jae
out
ret
xchg
insl
call
push
ret
jge
movl
xchg
sub
xor
cltd
push
fmull
pushf
cmp
pop
int3
orb
jmp
sub
ljmp
push
cltd
or
fs
cwtl
je
shl
lods
or
fs
sub
mov
sub
pop
je
mov
jb
cwtl
out
lods
fisttpl
sahf
cmp
fwait
add
ret
aam
enter
and
adc
rcl
ret
sbb
and
popf
adc
or
out
outsl
add
sbb
aas
or
lcall
push
xchg
ss
ret
mov
and
stc
xchg
adc
imul
xchg
movsb
out
jo
xchg
dec
xchg
inc
jns
xor
mov
in
pop
push
out
inc
mov
lods
push
imul
stc
dec
shlb
push
insl
dec
and
sbbb
pusha
jae
lret
movsb
sbb
popf
or
in
arpl
adc
rcll
sahf
adc
xchg
into
sub
mov
rcll
cwtl
fldl
mov
push
lock
insl
imul
jp
push
xor
sub
stos
adc
clc
sub
cmp
imul
das
xorl
dec
jo
jns
into
jns
jo
out
jne
jl
cli
dec
inc
or
jae
imul
cmpsl
fwait
sub
sub
jmp
jo
mov
cs
cmp
xchg
int3
add
fwait
out
loope
and
mov
lds
sub
inc
mov
jge
aaa
add
decb
in
and
dec
cmp
sbb
sub
mov
je
jl
sub
loop
inc
test
inc
testl
dec
loope
daa
adc
shlb
loopne
dec
negl
mov
out
push
push
xchg
pop
sub
popf
ja
xor
mov
iret
xchg
mov
imul
lock
xchg
mov
push
cld
sub
push
stos
cmp
cli
andb
mov
or
scas
js
lock
out
jbe
lods
pop
out
imul
addl
mov
mov
sbb
cmp
test
jo
xchg
hlt
imul
out
loop
mov
outsb
cli
sub
shrb
inc
je
cmc
xchg
bound
ffreep
repz
movsb
faddl
in
pop
mov
arpl
fucomp
jno
popf
sbb
repz
xor
fcompl
xor
xor
cmpsb
in
sar
sub
scas
jmp
rol
jb
leave
xchg
fsubl
and
jp
imul
aaa
scas
mov
addr16
sbb
repz
inc
adc
ret
data16
xor
mov
xor
cwtl
push
and
push
xor
mov
inc
lds
xlat
repnz
cli
sub
push
cmp
cli
sti
add
gs
push
push
push
adc
leave
push
out
mov
or
insb
jecxz
int3
or
sub
das
and
std
dec
lods
shl
jb
test
cmp
jl
movsb
cwtl
jae
inc
addr16
imul
sbb
jo
outsl
je
fldt
aad
fcompl
dec
add
or
ss
sub
pushf
pop
pusha
mov
fists
inc
dec
cmp
cmp
mov
sub
and
sub
in
push
mov
aad
or
bnd
cltd
outsl
dec
jb
bnd
testl
sub
je
testl
cmpb
outsl
lods
sbb
ja
jmp
add
je
cmp
jo
pushf
xor
stc
fucomi
sahf
jg
cs
leave
addr16
dec
mov
cs
imul
pushf
ds
cmp
sub
jmp
adc
xor
test
imul
enter
jo
in
pcmpeqb
dec
jmp
push
cmp
fwait
out
sbb
std
inc
mov
or
pop
pop
xchg
push
xor
pop
push
lcall
xchg
sub
add
push
or
xor
mov
add
or
inc
test
das
test
pusha
in
and
sbb
jnp
jo
xchg
cltd
or
add
push
pusha
scas
xlat
fidivl
mov
in
fwait
sub
mov
xor
cmp
stc
hlt
hlt
jp
sbb
das
call
subb
sub
mov
jnp
pop
jecxz
dec
call
adc
ficompl
or
dec
inc
xchg
in
outsb
fs
cmp
insb
push
adc
cmc
push
dec
jecxz
das
dec
pop
outsl
scas
pusha
popa
call
iret
sub
sbb
js
cld
pop
cmp
or
sub
cli
sub
fs
jo
clc
call
das
pusha
jbe
lock
repz
shrb
sub
mov
loopne
outsl
dec
outsb
dec
nop
dec
in
outsl
into
pusha
imul
sub
aam
jo
scas
pusha
mov
jg
pusha
in
push
push
loop
xor
ja
push
pop
mov
sub
mov
enter
cmpsl
mov
push
add
adcl
insl
sub
aam
mov
fwait
sub
int3
push
jge
out
xor
iret
cmp
jbe
sbb
out
jp
mov
aaa
ficoml
scas
cmpsl
rclb
test
arpl
or
rep
fxtract
push
adc
jns
sub
clc
xchg
icebp
mov
pop
aas
mov
jne
icebp
das
jno
inc
lock
cmp
mov
xor
and
popf
jns
pop
xchg
sbb
ja
addr16
dec
hlt
pop
test
pop
inc
rcrl
jp
sbb
ret
adc
loopne
cmc
cmp
push
test
jle
xchg
popf
repnz
icebp
aaa
lcall
add
stc
mov
jp
sub
imull
cmc
xor
jecxz
inc
nop
dec
test
or
mov
mov
cmc
inc
add
out
js
inc
iret
fsts
je
outsb
push
out
pop
sub
inc
mov
outsb
or
add
or
in
js
loope
je
lret
in
sbb
cmpsl
cmpl
rol
daa
pop
jl
cld
in
outsl
stc
fidivrl
xchg
test
loope
mov
pop
jmpw
push
mov
pop
insb
je
sbb
dec
pop
jmp
aaa
push
cli
into
aad
pop
je
add
jmp
repz
pusha
adc
mov
out
iret
dec
mov
repnz
pusha
push
ficomps
mov
cmc
and
stos
jbe
mov
pop
xlat
add
ljmp
and
mov
mov
xchg
fadd
cmc
add
mov
jne
dec
hlt
inc
push
jmp
imul
jne
out
xor
hlt
inc
outsl
shlb
pop
xor
fldenv
cli
imul
pop
repz
sbb
mov
fcoml
mov
movb
out
mov
inc
cli
sbb
fiaddl
aas
sbb
cs
lds
dec
jmp
test
or
inc
cmp
inc
je
test
ret
dec
mov
out
loop
pop
sub
int
aad
xor
mov
push
cli
cmp
fsubp
mov
ja
shl
push
jb
int3
movsl
insb
adc
sub
outsl
jb
or
xor
mov
sbb
mov
sub
add
adc
or
mov
pop
fistl
sti
cltd
inc
sahf
je
and
jo
pop
pop
mov
negb
or
jne
and
out
js
outsl
loop
sub
je
add
sub
lret
movsl
jp
mul
xchg
mov
ljmp
fisttps
mov
imul
scas
outsl
loop
sahf
pop
les
xchg
and
call
je
xor
pop
mov
sub
mov
sub
pop
sub
dec
test
or
inc
push
jo
sub
test
mov
lret
dec
sub
jp
push
repnz
or
imul
ss
repz
dec
je
dec
jns
cli
mov
push
loope
dec
jne
mov
add
lret
inc
and
cltd
enter
add
mov
jmp
rorl
sub
aaa
les
cmc
jnp
cld
stos
dec
out
sahf
clc
bound
es
mov
cmp
and
sar
dec
sahf
das
inc
mov
or
into
push
cld
cmp
jmp
int3
mov
call
ret
add
test
shll
jp
push
sbb
test
jo
adc
and
inc
lahf
adc
leave
pop
and
cmp
pop
enter
in
mov
ja
lock
stos
inc
mov
sub
std
mov
in
add
push
repnz
pop
cli
es
stos
and
std
aas
call
cmp
jb
call
add
add
mov
or
nop
nop
jnp
outsl
xlat
clc
push
jne
pop
outsl
flds
mov
xchg
mov
fbld
push
pop
in
sbb
ss
out
push
repnz
sub
enter
jmp
in
mov
leave
mov
insl
or
dec
outsl
out
std
fdivrs
or
cli
add
xchg
sbb
ror
push
out
lods
mov
out
mov
pop
sub
call
pusha
fs
mov
repz
mov
jmp
lock
sbb
int3
xchg
sbb
aad
xor
mov
or
testl
jb
mov
jge
jo
outsl
xchg
sbb
imul
sti
aaa
jo
in
insb
and
sub
fs
addr16
mov
clc
in
arpl
outsb
daa
mov
outsl
imul
dec
loope
stc
decl
in
dec
popa
dec
mulb
in
sub
loopne
jg
out
cltd
js
in
sub
jle
test
dec
cmp
pusha
gs
jnp
lea
outsl
in
and
sub
scas
sub
xor
pusha
jp
arpl
call
mov
cmp
das
pop
lret
cmc
outsb
or
cli
stos
fs
insb
data16
fadds
call
out
scas
lcall
lret
shrb
cmp
sub
adc
test
push
dec
das
jbe
je
inc
mov
test
mov
inc
push
pusha
cmp
sub
add
dec
insl
and
push
cmp
mov
nop
in
adc
repnz
and
mov
faddp
loop
out
jno
or
add
data16
icebp
out
jne
in
les
loopne
leave
cli
and
mov
sbb
rolb
in
cmp
fsub
sub
test
cld
jae
cs
out
addr16
cmc
aaa
lds
in
cmp
insb
mov
bound
enter
shrl
sbb
andl
mov
cltd
stos
jmp
icebp
movsl
sub
addr16
cld
outsb
shr
cmp
pop
out
ret
sbb
outsb
daa
lds
out
mov
nop
test
sub
ficoms
je
inc
daa
loope
cmp
pop
pop
out
sbb
scas
rep
jl
pop
pop
pop
loope
loope
in
stos
fimull
out
sub
or
jp
daa
dec
scas
or
cmpsb
enter
in
je
lret
mov
das
inc
add
xchg
cmp
add
rcr
mov
nop
mov
xchg
stos
jl
sahf
sbb
movsb
movsl
jb
leave
mov
jb
nop
inc
out
and
ror
scas
cwtl
imul
in
addr16
mov
jp
fistps
cs
pop
aas
dec
xor
cmpsb
addr16
rep
les
dec
mov
sub
nop
add
dec
adc
dec
xor
call
insl
jl
fwait
or
xor
sub
fsubr
bound
fwait
movsb
dec
in
iret
push
outsl
in
sub
movsl
jecxz
jecxz
mov
arpl
leave
xchg
dec
pusha
insb
inc
jo
mov
into
popa
xorb
cmp
negl
pop
scas
js
pop
mull
xor
and
pop
cmc
cmp
ret
sub
bound
jo
decl
call
rcr
xchg
in
ja
pop
lds
loop
loop
out
popf
cmc
bound
dec
mov
push
fs
jl
pop
push
cmp
mov
jo
jmp
inc
mov
and
repz
imul
pop
mov
fwait
or
stos
jae
frstor
adc
das
out
in
xchg
push
xchg
adc
sub
loope
pop
xchg
push
out
das
icebp
rorl
lds
les
ret
xchg
outsl
es
fs
stc
mov
sub
test
call
cmp
arpl
adc
dec
dec
outsl
or
add
lret
cmp
mov
mov
push
jl
cmp
jb
ljmp
rolb
mov
pop
add
fldenv
iret
pop
jg
push
es
ja
or
inc
fdivl
scas
lds
dec
int3
inc
xor
add
cmp
xchg
js
ret
fmuls
and
ljmp
int3
in
xor
out
ret
mov
cmp
adc
mov
sub
push
ret
jmp
jle
movsb
xlat
lahf
add
adc
mov
mov
in
stc
xor
add
sub
into
loope
repnz
push
jl
inc
inc
into
push
subl
addr16
ja
jo,pt
mov
fsubl
jbe
addr16
das
inc
push
cmp
insl
into
xor
jp
mov
pop
ret
jns
test
js
popf
sbb
or
or
jp
dec
or
imul
jge
adc
pushf
dec
clc
xor
popa
push
jg
into
test
iret
lods
mov
inc
dec
out
mov
ret
jl
pusha
adc
fadd
call
repnz
xor
mov
or
out
sub
inc
dec
pop
call
imul
loopne
mov
inc
les
repz
and
insl
loop
imul
ret
decl
xor
cmp
cmp
hlt
leave
xchg
push
fdivp
fisubs
pop
lods
popa
mov
addr16
int3
pop
mov
test
dec
cmpsb
push
cs
xor
inc
sbbl
lods
fwait
cli
sbb
sahf
in
cmp
jne
push
cmp
jns
lods
fisubrl
ds
outsl
popa
outsl
push
or
popf
xor
adc
inc
cmp
dec
jmp
loop
cltd
idiv
fs
pop
je
inc
sub
sti
or
loopne
test
cmp
ret
lds
xchg
insl
cmp
mov
add
out
je
fcompl
repz
js
cwtl
daa
sbb
lods
adc
scas
data16
cld
jb
mov
loopne
push
mov
mov
outsl
cmpsb
pop
xchg
into
call
aas
sbb
lea
outsl
das
jp
mov
jo
xor
shl
loopne
loop
xchg
in
sar
repz
aaa
js
not
sbb
ret
mov
jge
insl
mov
push
xor
std
stc
pop
ret
outsl
xor
xor
aaa
pop
xor
inc
add
lds
pop
or
inc
inc
enter
out
mov
and
test
in
test
lds
dec
gs
stc
outsb
icebp
add
adc
sbb
mov
movsb
cs
fisubrl
mov
pop
dec
jbe
jnp
call
adc
mov
mov
addr16
gs
clc
dec
jns
push
pop
cmp
jbe
xor
imul
jo
imul
out
and
sub
loopne
xor
repz
lea
aam
stc
inc
nop
ret
sbb
test
cmpsb
daa
inc
lret
sarb
push
or
je
test
popf
repnz
scas
xchg
and
cmpsl
cld
loopne
jmp
adc
xor
les
ljmp
cltd
popa
dec
inc
jmp
push
lret
fsub
mov
insb
inc
push
int3
jecxz
fbstp
mov
jbe
pushf
or
pop
rclb
mov
clc
cld
lcall
lret
sti
leave
mov
mov
xchg
mov
or
jb
pop
cld
dec
xchg
jp
call
jae
out
punpckhbw
imul
jo
push
notl
add
imul
arpl
cltd
out
fcomi
lea
dec
and
or
nop
dec
lods
xchg
xor
shr
inc
movsl
out
std
and
loope
mov
data16
sub
ret
and
lea
in
mov
or
sub
pop
insl
mov
mov
pop
adc
add
mov
gs
addr16
cli
pushf
dec
das
test
imul
int
xchg
call
cwtl
or
sbb
daa
je
ret
xor
jg
jo
in
movsl
in
sub
movsb
addl
rorb
add
in
mov
sbb
xchg
in
call
les
lock
adc
adc
xor
adc
pop
dec
cmpsl
jl
push
add
std
dec
clc
cld
popa
sub
xchg
out
mov
pop
dec
fsts
xchg
xchg
loop
aas
and
lea
lods
mov
push
cmpsl
adc
add
out
xor
jg
mov
jg
mov
push
push
lods
xor
cmp
addr16
int3
rclb
mov
lret
mov
cmp
in
sub
jno
xchg
das
or
pop
into
ret
outsl
pop
fldz
int3
sub
push
cld
xchg
loope
sbb
sti
or
arpl
das
add
mov
push
xor
mov
jo
icebp
jecxz
rcl
int
sub
mov
mov
data16
mov
hlt
push
jmp
test
or
out
xchg
sub
lods
cmpsl
mov
jno
cwtl
jno
xor
xor
xchg
push
or
jmp
and
cmp
loopne
in
mov
std
test
pop
and
inc
stos
lret
or
dec
inc
aad
dec
fisubs
in
mov
mov
lret
mov
xor
insb
push
cmpsb
int3
inc
jecxz
mov
aaa
fisubrs
sbb
mov
mov
pop
mov
decb
mov
outsl
out
dec
in
aaa
das
int
or
fs
jp
sub
sub
pop
cmc
xor
pop
and
inc
jns
imulb
ljmp
mov
loop
test
mov
sbb
notb
iret
jnp
jae
cmpsb
dec
mov
jecxz
jae
xor
xchg
xchg
jg
jge
adc
lea
leave
stc
out
ret
add
jno
jecxz
scas
adc
mov
jecxz
int
out
cmp
scas
fmuls
push
push
fs
sub
gs
shlb
jmp
lea
mov
add
xor
cs
mov
jl
data16
movsl
lcall
cmp
mov
cmc
sbb
mov
sub
in
adc
inc
xor
or
scas
jge
movsb
data16
addb
outsb
inc
ljmp
mov
xchg
jecxz
fists
mov
test
lcall
adc
or
lods
inc
dec
inc
pop
cmp
push
sub
movsl
xor
xchg
sbb
push
inc
mov
loope
outsb
pop
arpl
jbe
mov
sub
imul
cmpsb
pushl
pop
call
divl
cmpl
push
jno
aaa
dec
insl
jmp
test
sub
jo
adc
cmp
stos
enter
fwait
outsl
bnd
pop
push
call
jl
sar
mov
mov
jno
cld
adc
fbstp
imul
jle
out
insl
push
mov
and
ds
in
push
outsl
pop
sub
insl
out
jl
mov
xchg
inc
sti
outsl
dec
cmc
cmp
loopne
pusha
outsb
in
out
imul
insl
hlt
dec
insl
add
insl
inc
xor
adc
repz
insl
cli
sti
testl
dec
aam
or
pop
test
jo
xor
pusha
dec
in
jo
mov
pop
loope
popa
imul
insl
popa
repz
hlt
jne
xor
out
inc
mov
push
sub
add
divb
dec
nop
push
and
insl
jbe
cmp
pop
cmc
insl
inc
and
dec
outsb
out
repnz
popa
adc
gs
decl
add
mov
xchg
jb
enter
and
aas
xor
and
or
arpl
outsl
inc
stc
fldl
fadd
xor
mov
repnz
out
fldenv
movsl
test
xor
ja
in
sub
push
xor
int3
and
dec
and
inc
jo
call
push
ds
call
xor
cmp
pop
mov
call
sbb
jne
mov
pop
fdivl
sbb
jo
sub
xchg
fs
cld
loop
fcompl
aas
scas
bswap
cmp
scas
dec
cli
xchg
jbe
enter
jae
mov
loopne
ja
pop
sub
or
pop
xor
fisubs
das
dec
in
sub
nop
cmpsl
pop
xor
stos
outsl
nop
insb
test
jae
sub
push
cs
jge
sub
std
push
dec
mov
bound
xchg
push
mov
in
inc
mov
sub
insl
and
lods
cld
je
scas
push
pop
lret
adc
lods
out
cld
ljmp
jo
add
jmp
lods
jne
sub
xchg
out
jmp
add
insb
icebp
mov
mov
xchg
andl
insl
jbe,pn
xor
into
hlt
dec
inc
or
sbb
out
int3
or
test
clc
pop
inc
dec
xor
inc
dec
ret
lahf
mov
pusha
outsb
aam
push
aam
sarl
out
dec
test
sbb
in
int3
pop
aam
add
into
cmpsb
pop
push
jmp
adc
movsl
jo
xor
mov
jbe
push
bound
js
jne
mov
iret
int3
test
push
aaa
mov
push
sub
testl
dec
sub
and
int3
and
sub
or
or
jge
jg
aas
add
jmp
ljmp
xchg
lea
jne
add
enter
stos
adc
movb
leave
fldt
sar
jns
insl
add
loope
fisubs
movq
insb
aad
or
test
outsl
bt
popa
xchg
cld
loope
cld
cltd
in
push
or
push
pop
ljmp
mov
xchg
incl
push
dec
fldt
jecxz
jb
xchg
mov
stos
iret
outsl
jnp
sub
mov
dec
cmp
cmp
cmpsb
sub
sahf
cli
inc
in
add
or
mov
add
loope
jne
aaa
cmp
ret
arpl
sub
ljmp
sub
or
sub
pop
popa
mov
jmp
aam
inc
fs
dec
pusha
inc
aaa
mov
mov
inc
icebp
sub
dec
test
dec
mov
mov
mov
fsub
fbld
cli
stc
mov
lret
mov
fsubl
cmp
insb
jp
mov
jmp
bound
ror
aaa
test
loope
jmp
mov
or
and
mov
jns
or
mov
js
jmp
cli
dec
inc
ret
or
jae
xchg
mov
fs
idivb
jbe
mov
out
loopne
out
out
inc
arpl
mov
push
lds
inc
add
and
adc
stos
stos
inc
fmull
in
push
ljmp
pusha
arpl
and
dec
fcmovnb
lcall
lahf
aas
or
pop
sti
movb
shll
ss
out
aas
sbb
jp
jo
cld
loope
pop
fsub
dec
sub
sbb
loop
fucomi
std
cmpsl
outsl
xor
cmp
outsb
stos
pop
adc
arpl
jne
insl
lds
sub
in
fidivs
push
lods
dec
inc
add
mov
pop
imul
std
daa
dec
push
jbe
cmp
out
inc
es
scas
and
divl
or
jb
pusha
aaa
dec
sti
in
or
cli
sbb
or
je
sbb
imul
lret
int
push
mov
movsb
push
dec
pop
mov
mov
int3
frstor
repz
dec
mov
mov
repz
fwait
xchg
aaa
cmp
arpl
add
sub
mov
into
cmp
leave
je,pt
dec
vstmxcsr
int3
or
pop
and
sub
dec
xchg
ret
shlw
filds
fisubrl
data16
pusha
mov
sti
outsl
sub
imul
or
push
icebp
loopne
dec
inc
xchg
ljmp
push
jo
loopne
hlt
inc
lret
cmp
mov
sub
in
mov
hlt
jmp
cld
or
js
push
adc
int
or
pop
out
mov
jnp
jae
cmp
lods
mov
xor
add
or
xor
pusha
jb
inc
push
aas
cmpsl
or
inc
mov
scas
out
fsubs
dec
and
fsts
aaa
cld
fistpll
or
cs
outsl
repz
add
out
cmpb
mov
das
sub
push
popf
pop
fisubl
out
jne
popa
jo
pop
in
pop
inc
jbe
fs
arpl
iret
xchg
push
jg
out
fs
inc
sub
out
pop
hlt
or
add
adc
out
orl
movsb
inc
inc
mov
nop
in
dec
outsl
mov
test
inc
and
outsl
insl
dec
mov
out
shlb
clc
cmp
iret
iret
mov
sub
push
test
add
incl
negb
pop
call
pop
push
add
decb
addr16
mov
scas
jp
add
pop
dec
enter
jg
dec
push
adc
outsl
push
jnp
dec
test
icebp
push
scas
clc
sti
mov
out
push
addr16
outsl
out
cmp
das
sub
cmp
xchg
sbb
in
popa
lock
fsubl
test
dec
out
test
imul
sub
repz
cld
call
sub
dec
nop
push
es
stc
icebp
out
shlb
ljmp
cmc
repnz
stos
dec
in
rclb
jne
cld
test
in
imul
out
rolb
and
or
mov
pusha
in
iret
jb
icebp
ljmp
mov
sub
hlt
ja
add
jle
mov
inc
bnd
out
inc
stc
hlt
push
push
cmp
shlb
pop
push
mov
jb
sbb
and
mov
fcoml
mov
jmp
cmpb
pcmpgtd
xchg
add
pcmpgtd
jb
mov
outsl
and
popa
insb
push
jb
jl
jae
pop
nop
pushw
mov
mov
and
sbb
repz
xor
mov
sub
bound
fprem
jle
int
jb
fs
data16
loopne
xor
add
int3
movsb
mov
inc
hlt
cmp
fldl
add
in
lock
addr16
cmc
xchg
lods
cltd
out
or
jg
js
in
dec
repnz
mov
mov
pcmpeqb
mov
jnp
aam
fnstenv
lds
and
adc
lret
rolb
or
pop
outsl
inc
mov
sub
adc
sub
nop
inc
mov
fwait
pop
std
dec
and
push
xor
xchg
adc
fadds
mov
and
mov
iret
pop
push
cmp
xchg
inc
add
test
repnz
out
test
xor
add
adc
or
xchg
pop
jg
pusha
and
adc
fnstenv
dec
adc
stos
xorl
mov
push
iret
xor
jmp
mov
rorl
adc
std
test
insl
push
dec
and
movsb
or
jae
ret
jnp
xchg
inc
dec
push
ret
cmp
push
test
nop
leave
add
dec
add
mov
inc
shlb
mov
sbb
jle
mov
xchg
sbb
lock
ret
jb
jle
popa
enter
sbb
aad
lods
fbstp
jge
xlat
mov
and
pop
and
lods
ret
jno
add
push
rorb
test
movsl
outsl
sti
or
stos
or
iret
mov
lods
test
aad
bound
mov
movl
or
loopne
ja
mov
arpl
or
mov
add
sti
sub
adc
stos
mov
loopne
sahf
repnz
mov
xchg
inc
mov
push
out
hlt
pop
add
xor
xor
mov
ds
push
ret
aas
and
cmp
jbe
inc
and
lcall
in
dec
pop
test
call
mov
movsl
out
in
mov
or
loop
push
xacquire
push
sbbl
js
cmp
aas
scas
fbstp
hlt
pusha
test
hlt
jae
in
repz
fs
xchg
sbb
xor
sahf
cmp
in
adc
test
sub
pusha
add
sbbl
jge
loop
jg
daa
push
lods
addr16
cmp
jg
lea
imul
ljmp
jmp
mov
pop
pop
bound
imul
das
ljmp
movsl
pop
xchg
shl
dec
nop
xlat
stos
pop
cmp
das
imul
jp
or
es
push
jbe
je
daa
std
sti
push
push
stos
lock
jb
fucom
pop
out
jmp
test
loop
lods
mov
loop
add
xchg
dec
rdtsc
sub
jo
adc
lock
cmpsl
pop
dec
insl
sub
mov
stc
xchg
mov
pop
fs
loope
sub
imul
pusha
xor
dec
insl
xchg
sahf
inc
and
pslld
cmp
inc
cltd
inc
dec
mov
jno
sub
dec
loop
scas
push
pusha
and
mov
rorl
xlat
mov
outsl
sub
xchg
cmp
daa
mov
cmpsl
jae
cmpsl
addr16
out
ret
fildll
jb
lds
mov
inc
sub
insl
sbb
ljmp
add
xchg
mov
push
push
dec
adc
repz
jae
das
nop
or
ljmp
mov
or
xchg
pop
jg
xchg
or
mov
in
in
in
insb
sbb
fs
popa
or
jne
lret
push
arpl
pushf
xor
into
jo
insl
call
sbb
xchg
sbb
mov
arpl
js
call
dec
jo
loopne
js
nop
outsl
loope
divb
pusha
jae
adc
jb
push
jo
loopne
outsl
dec
cltd
outsl
jmp
hlt
fldt
push
loopne
decb
jle
pop
js
call
les
loopne
arpl
outsl
cld
mov
jl
test
jecxz
mov
ret
mov
fadds
mov
stos
in
pop
imul
cmpsb
mov
imul
adc
add
ss
int3
jae
loop
and
outsl
inc
cmpsl
push
bound
push
outsb
xor
roll
cmp
scas
xchg
repnz
push
scas
dec
mov
outsl
sub
test
js
adc
stc
inc
mov
mov
loope
fsubrl
outsl
dec
insl
inc
xchg
lods
je
es
mov
and
sbb
xor
push
adc
inc
pusha
cs
or
js
push
sti
lea
push
adc
loope
cmc
mov
mov
adc
popw
mov
cmp
cld
ljmp
pop
adc
mov
outsl
pop
xor
xchg
adc
clc
movl
std
push
mov
push
add
mov
pop
cli
rorb
mov
dec
outsl
ljmp
outsl
out
mov
dec
ja
pop
adc
pop
mov
inc
cs
push
push
in
dec
xor
cmp
dec
mov
push
cmc
popw
xchg
imul
test
lea
imul
cmp
sub
push
shrb
ret
sbb
jmp
jl
out
repnz
push
jo
push
ja
outsl
jecxz
loop
loopne
pop
imul
lds
aas
in
xchg
shrb
movsb
mov
push
inc
jo
nop
jmp
mov
addr16
inc
jne
cld
adc
pop
js
jge
je
sahf
fcoml
nop
jo
insl
jno
cmpsb
lcall
sbb
cs
outsb
push
dec
fs
arpl
xor
mov
sub
adc
jno
fs
mov
pop
jnp
cmp
je
and
dec
add
jo
dec
loope
clc
adc
jo
mov
shr
sub
lock
imul
shll
imul
pop
xor
or
cmp
fwait
xchg
adc
dec
movsl
adc
loopne
pop
push
xchg
shrb
push
in
call
jo
dec
jg
hlt
iret
lret
aaa
outsl
pop
inc
or
icebp
inc
out
mov
pop
jbe
xor
xor
cli
dec
out
dec
fyl2x
in
jno
fs
outsl
mov
cmp
imul
stc
push
sbb
fs
movsl
lods
data16
sarb
out
fs
mov
clc
imul
mov
addb
xor
inc
scas
sub
inc
mov
jbe
stos
sarb
js
pop
xchg
xor
clc
imul
arpl
jg
lahf
mov
mov
inc
mov
xor
xor
dec
sbb
call
es
adc
adc
shrb
jb
xchg
icebp
and
scas
sub
push
xor
jg
mov
insb
enter
push
lock
xchg
in
movsl
sarb
mov
addb
jmp
inc
outsl
imul
or
ret
add
dec
cmp
jno
fs
push
aam
call
mov
or
xor
jo
dec
xchg
mov
fcoms
leave
mov
mov
or
mov
dec
mov
arpl
cltd
mov
inc
dec
and
dec
pusha
adc
mov
pop
xor
mov
shrb
inc
pop
adc
xor
int
lock
or
imul
sub
js
imul
sub
js
imul
pop
push
cmpsl
imul
sti
clc
xor
push
cli
dec
stc
mov
dec
sub
sub
push
xor
sub
push
push
pop
sbb
fs
or
pop
and
ror
xor
jge
icebp
pop
add
scas
dec
out
sbb
les
adc
xor
imul
lahf
dec
inc
adc
loopne
shl
push
call
jo
inc
or
dec
jmp
orl
dec
xor
jmp
push
jb
addl
mov
or
insb
push
sub
dec
xor
jo
out
int3
jns
lods
ss
mov
mov
sub
push
fnstcw
jo
aaa
xchg
sub
arpl
dec
imul
out
sub
sub
cmp
push
outsl
pushf
jo
andb
jg
dec
jo
and
push
out
add
data16
cwtl
sub
enter
adc
gs
scas
jo
cmc
cmp
out
adc
aas
loop
shr
add
je
push
arpl
mov
scas
sub
lahf
outsl
pop
imul
mov
test
xor
push
cmpsb
outsl
or
test
mov
int
insl
out
sbb
jno
jbe
xchg
subb
nop
call
int3
inc
je
mov
mov
test
fsubrl
ficoml
dec
or
int
or
mov
adcb
sbb
push
ljmp
or
aad
cli
outsb
mulb
repz
xchg
mov
add
add
cmp
psraw
adc
shll
adc
incl
outsl
xor
push
pop
je
xor
arpl
pop
addr16
mov
movzbl
lock
inc
or
pop
push
data16
imul
pop
mov
inc
das
out
xchg
pop
gs
dec
repz
icebp
mov
rorb
push
ja
leave
xor
pop
xor
sub
or
in
xlat
cmpsb
add
dec
js
and
jecxz
mov
loopne
aaa
mov
in
jae
mov
adc
out
je
cmpsl
and
scas
outsl
ffreep
jae
mov
repz
mov
add
pusha
icebp
je
mov
rep
shrb
popa
shrb
push
pop
push
int3
cmp
jp
loop
mov
ret
inc
shr
je
jle
lcall
scas
lock
and
lods
ja
jo
lea
fs
in
dec
outsb
sub
test
ret
bound
mov
jmp
enter
dec
aad
jp
jbe
rcr
outsl
dec
jmp
push
lock
cmp
pop
jecxz
pushl
add
mov
dec
out
outsl
cmc
pop
jo
outsl
jge
outsl
ljmp
jle
gs
insb
mov
outsb
testl
insb
pusha
dec
movsb
ja
jmp
movsb
push
clc
push
movsb
stc
inc
jns
in
dec
out
inc
xor
jg
and
jo
sub
test
mov
icebp
xchg
pop
inc
push
dec
shrb
outsl
pop
shrb
addr16
movl
pusha
mov
test
and
das
mov
out
out
orl
push
in
sub
add
cld
lock
sarl
loop
scas
aad
data16
stos
sti
inc
push
push
insl
call
jne
clc
push
ror
inc
adc
add
iret
inc
je
push
div
mov
call
cmpsl
mov
leave
jo
mov
daa
andl
add
pop
mov
sub
mov
jecxz
xchg
mov
dec
icebp
inc
andl
cmc
pusha
divb
or
xchg
jb
inc
jae
fnstenv
push
add
shrb
jecxz
cld
sub
sbb
pushf
mov
jmp
inc
push
xor
mov
lcall
mov
and
xchg
jl
or
jle
outsb
pusha
mov
scas
leave
jg
sub
inc
lock
shlb
cmp
or
nop
adc
xchg
test
outsl
mov
jl
inc
mov
aam
jl
sub
rorb
or
pop
outsl
pop
test
jle
sub
mov
mov
lds
lock
leave
out
mov
jge
mov
mov
inc
push
sbb
andl
mov
add
sub
imul
jmp
sub
scas
mov
push
cmp
pop
cld
add
mov
dec
cmovg
push
mov
lret
leave
pop
test
roll
xchg
dec
bound
into
cmp
fdivr
fstl
insl
or
inc
push
or
sbb
inc
pop
insl
dec
dec
cmp
into
lret
xor
xchg
pop
sub
pop
movups
je
sar
mov
and
lock
fnstsw
adc
aad
rcr
mov
movsb
pop
dec
mov
or
jo
push
fnsave
out
dec
pop
jbe
push
dec
enter
insl
je
cmp
cwtl
and
loop
inc
xor
and
xor
dec
xchg
outsl
or
imul
test
rcrb
add
out
dec
xchg
mov
pop
xor
inc
adc
xchg
dec
jp
out
dec
push
iret
je
js
or
leave
jo
xchg
ljmp
dec
pusha
xor
outsl
and
hlt
mov
add
addr16
and
dec
rorb
pop
ja
sub
addr16
out
outsl
sti
adc
loopne
cld
jo
sub
inc
inc
jle
or
loopne
out
and
add
lock
xchg
dec
mov
jnp
je
daa
mov
je
das
push
outsl
cmp
cmp
dec
jb
out
or
into
pop
jne
sub
jmp
jo
sub
in
mov
mov
loop
cmp
cs
xchg
sbb
addr16
sub
mov
sbb
and
sbb
das
pop
mov
xchg
pusha
and
insb
outsl
ror
les
data16
mov
cld
call
sahf
and
pusha
pop
xchg
push
sti
mov
mov
jb
pop
xchg
arpl
cmp
fisubl
adc
ja
inc
clc
bound
dec
addr16
pop
insl
call
xchg
enter
or
dec
in
sub
xchg
aaa
fists
sub
xchg
ss
dec
sbb
das
cld
cmp
int
mov
adc
loopne
or
add
daa
out
sub
inc
out
je
adc
das
push
imull
jg
lea
jnp
shlw
fs
out
cmp
lret
pop
fsubl
mov
sbb
in
push
mov
pop
loop
pop
repnz
out
testl
repz
into
call
insb
fisubl
test
mov
jl
pop
dec
stos
and
cmc
inc
enter
stos
mov
xchg
stos
inc
insb
push
lahf
pop
je
mov
jmp
lret
cs
out
pop
jae
jo
shrb
insl
xor
das
enter
test
cltd
outsl
into
dec
pushf
es
outsl
jmp
lds
lret
test
sub
dec
push
call
out
call
in
pop
sbb
jb
rorl
loopne
lahf
push
imul
mov
je,pn
stc
daa
dec
negb
push
mov
add
sub
push
scas
popa
bound
cs
mov
mov
fwait
das
dec
lds
jg
dec
adc
pusha
xchg
in
push
insl
inc
dec
sti
and
cmp
mov
insl
jge
or
push
outsl
mov
sbb
std
stos
xor
sbb
xor
pop
cli
lock
outsl
bound
das
ret
stos
insb
sub
mov
or
cltd
stos
mov
fs
clc
cmp
xchg
mov
adc
push
push
cvttps2pi
loopne
lea
sbb
jb
int3
or
and
fnstcw
cmpsl
push
repz
stc
insl
subb
sbb
xchg
pop
and
sahf
pop
jo
andb
sbbb
in
dec
jnp
or
pop
add
outsl
out
shr
int
pop
test
push
xor
or
repz
mov
cmpsl
nop
add
jmp
out
xlat
lret
or
bnd
or
roll
adc
push
in
cwtl
push
cld
popf
xor
mov
dec
lret
push
jb
jg
xor
push
mov
mov
in
lahf
scas
jmp
das
and
sbbl
add
adc
or
cmp
mov
jmp
dec
or
std
movsb
inc
out
push
push
pop
mov
dec
mov
jns
int3
lcall
xor
imul
xor
das
arpl
lock
add
das
shll
int
sub
mov
mov
jnp
cmpsl
xor
push
adc
imul
inc
shll
dec
dec
xor
or
xchg
jne
add
xor
and
jge
daa
push
and
rclb
jge
mov
test
daa
jnp
lret
inc
mov
dec
xchg
in
adc
jge
push
out
sbb
xchg
xchg
das
scas
ret
lock
mov
xor
stos
cmpsl
stos
iret
jmp
mov
icebp
dec
lock
push
jb
cmp
sub
xchg
inc
and
imul
loopne
shlb
push
int
jne
push
fstps
dec
mov
jge
fs
add
push
stos
outsl
out
mov
into
pusha
sub
sub
mov
insb
dec
jns
out
cwtl
aaa
jns
push
add
inc
out
inc
cld
test
cmp
je
jp
adc
iret
xor
test
sbb
lods
es
sub
out
scas
ja
loopne
aam
lods
push
cmpl
in
push
push
and
mov
loopne
sbb
pop
push
das
add
cmp
fidivrs
pop
adc
iret
ljmp
cmp
or
loopne
mov
xchg
mov
lcall
sbb
int3
push
sub
adc
push
mov
fidivrs
and
enter
pop
out
imul
jl
loop
jnp
je
les
cmpl
sub
xchg
adc
sub
lea
adc
add
inc
sbb
rorl
cmpsb
adc
out
loopne
push
out
bound
cld
push
jle
cmp
ret
cmpsl
inc
lea
fsubs
into
in
out
sub
outsb
fistpl
xchg
rclb
lods
cmp
cmp
cmovge
and
outsb
sub
dec
enter
dec
addr16
sub
hlt
adc
das
mov
add
mov
lret
loopne
into
das
push
jp
test
mov
in
add
clc
cmp
loopne
inc
sbb
mov
jmp
sub
sbb
int3
push
cmp
imul
push
dec
ljmp
mov
jmp
sub
outsl
and
pop
jge
insb
clc
aam
lds
dec
xchg
icebp
add
cmp
subb
pop
push
sbb
push
push
jnp
ret
in
or
filds
int3
mov
adc
mov
jmp
stos
ja
je
test
xchg
repnz
add
call
shll
add
repnz
mov
stc
test
out
cltd
clc
xor
shr
push
add
lods
cmp
dec
out
adc
in
and
xchg
mov
cmp
jmp
mov
sub
pop
addr16
popa
mov
mov
stc
es
es
xchg
data16
in
mov
mov
movsb
sbb
clc
int
orl
jmp
jb
sub
fsub
daa
ret
popa
mov
xchg
mov
sbb
std
jb
daa
mov
pop
pop
or
cmp
insb
ds
jp
add
mov
rolb
dec
mov
es
jns
cld
push
jb
incb
lret
jg
or
pop
in
shlb
and
or
jb
add
cmp
mov
faddl
mov
lock
sahf
add
mov
iret
mov
loopne
xchg
leave
xchg
repz
cld
rcll
mov
xor
and
test
jo
int3
pop
les
xor
xchg
pusha
pusha
adc
sub
mov
outsl
outsl
sub
push
out
loop
testl
out
push
or
or
outsb
push
push
pop
in
mov
or
in
mov
icebp
sub
adc
xchg
sub
cmp
cmpsl
or
push
jo
dec
push
sysret
lock
push
cltd
sub
and
jno
lods
dec
test
mov
pop
addr16
in
sub
incl
xchg
dec
lret
dec
loopne
dec
dec
push
dec
push
fnstenv
push
loop
fwait
test
jno
gs
or
ret
mov
sub
decb
gs
inc
mov
mov
pop
dec
cwtl
xchg
push
mov
loopne
repz
push
inc
repnz
out
outsl
mov
lcall
inc
jns
testb
pop
jle
xor
stos
jbe
test
jae
out
enter
repz
rclb
nop
mov
pop
inc
mov
in
loope,pt
cmpsb
pusha
imul
test
xchg
sub
scas
outsb
enter
andl
jg
js
xlat
in
pop
or
mov
fs
popa
sbb
mov
or
sub
clc
jle
repz
dec
imul
pop
cld
test
or
jmp
push
xor
stos
loope
lods
ljmp
sub
jg
rcrl
fidivrl
cmp
js
xlat
ss
je
lcall
pop
jne
jmp
dec
xorl
outsl
adcl
and
scas
jmp
push
out
dec
add
outsb
dec
aam
cmp
push
pop
cmp
into
in
imul
xor
and
lock
scas
adc
dec
xor
push
xchg
sub
or
or
and
call
lea
jl
and
imul
arpl
add
xadd
scas
je
adc
push
sti
dec
in
imul
mov
out
xor
push
mov
cmpsb
lock
xorl
mov
jecxz
xor
cmp
pop
mov
cmp
adc
das
lock
inc
mov
shlb
fdivrl
stos
dec
cwtl
and
negb
insb
or
in
lods
imul
dec
mov
or
in
jae
mov
jo
jo
xor
out
or
in
sub
dec
lods
dec
in
cmp
push
idiv
sub
or
push
call
out
leave
js
loop
in
addr16
nop
into
pop
mov
inc
inc
mov
pop
sub
dec
mov
lret
scas
loop
sub
loope
lods
repz
stc
popl
mov
cwtl
sub
or
mov
mov
dec
mov
aaa
push
cmp
rolb
in
aam
push
xor
int
repz
shlb
lock
push
cmp
adc
lods
sub
push
mov
rcr
cli
aad
jg
fisttpl
pop
outsl
jo
clc
jnp
cs
pop
dec
scas
sub
mov
sub
mov
xchg
div
icebp
mov
fmul
scas
loope
je
jg
shll
out
mov
inc
mov
ret
popf
scas
inc
pop
mov
pop
dec
push
or
loop
lock
adc
or
cld
push
js
jg
add
inc
add
xchg
ror
and
xor
dec
add
cmp
jns
cs
add
data16
mov
xorl
out
mov
inc
insb
inc
outsb
push
je
repnz
push
mov
or
jb
movsl
mov
enter
jle
cwtl
jp
dec
xchg
imul
cmc
mov
or
ja
xor
loope
xor
or
nop
dec
scas
ljmp
add
dec
or
das
jg
ljmp
jo
roll
jo
popl
fildll
push
jo
push
push
jle
fisubs
out
mov
arpl
jp
cmp
sahf
daa
cmp
jbe
mov
out
adc
pop
je
adc
xor
pop
xor
push
inc
jno
adc
add
cmp
ljmp
and
and
loop
inc
sub
inc
fldt
sti
or
fcmovbe
popa
ret
lods
out
fsts
and
adc
push
enter
xchg
loope
push
add
dec
fiaddl
sub
das
mov
cmp
cmp
inc
lods
pop
dec
xchg
dec
sub
jo
dec
je
mov
scas
and
mov
fisttps
xor
pushl
lock
dec
jno
out
mov
pop
out
bound
fidivrl
out
loope
mov
or
lret
arpl
test
and
inc
fstp
dec
xchg
cmp
cwtl
jp
sti
xchg
ret
orl
jae
mov
js
popa
or
jo
rolb
xrelease
leave
movl
dec
pop
push
xor
or
sti
data16
pushf
movsb
push
jne
enter
scas
mov
ret
jmp
sbbl
clc
pop
enter
popa
sbb
jb
lock
jns
outsl
inc
ss
in
adc
repnz
stos
insl
sub
add
push
or
dec
mov
ljmp
cld
pop
inc
out
addr16
xchg
es
cmp
jno
aad
xor
mov
cld
lods
ss
nop
out
hlt
shll
into
shrb
cli
dec
aam
adc
daa
inc
aam
push
es
in
cltd
fiadds
xchg
and
adc
inc
icebp
pop
popa
push
sub
jo
out
mov
push
adc
scas
insb
pop
cmpsl
call
shl
pop
mov
into
fs
adc
andb
jb
inc
pop
xor
xor
inc
or
call
jb
mov
dec
cld
or
sbb
in
imul
adc
outsl
js
ja
sub
inc
adc
jbe
and
js
push
pop
push
pop
xor
sub
push
xor
lods
jne
mov
cmp
rcll
sub
xor
mov
jnp
orl
fiadds
test
pop
test
out
push
imul
or
and
push
add
pop
imul
scas
loop
adc
pop
mov
test
pop
lret
call
outsb
addr16
loop
aas
pop
in
movsl
test
push
pusha
mov
dec
or
pop
mov
ret
out
aas
es
es
jnp
inc
enter
xor
cmp
xchg
js
out
jo
aaa
mov
orb
or
out
mov
stos
adc
or
mov
or
mov
das
cmp
sbb
repz
xchg
and
jo
mov
mov
sbbl
out
gs
cmp
cwtl
sbb
into
mov
ljmp
stos
adc
movsb
mov
and
xchg
lock
and
sti
pop
addr16
mov
sahf
dec
lds
out
out
jae
mov
xor
xor
lock
test
mov
sub
cmpb
pushf
pop
mov
sub
xor
enter
sub
sar
xor
xchg
pop
clc
dec
je
pop
out
xchg
cmp
jp
popa
mov
scas
jle
fs
xchg
adc
xor
pop
test
in
shll
push
imul
jge
jb
jge
add
sbb
pop
inc
add
jge
out
imul
repnz
mov
mov
cmp
dec
je
cmp
test
in
xorb
jg
stos
push
pop
pop
fs
or
push
fsubr
jb
cmp
adc
cltd
stc
lcall
cmp
scas
adc
js
mov
out
pop
into
ss
es
sbb
pop
dec
aad
or
xor
orl
outsb
insb
test
push
ret
movsl
outsb
aas
push
mov
xor
jno
push
fcom
push
and
call
int3
push
das
call
fnstsw
sub
adc
ja
insb
sbb
subl
cmp
inc
xor
sub
push
cld
mov
jo
or
mov
inc
inc
mov
xchg
scas
mov
or
shll
out
lock
leave
movsl
xchg
xchg
xchg
lea
mov
xchg
ficoms
test
adc
iret
gs
sbb
call
loop
push
mov
les
cmp
in
pop
push
leave
aaa
sub
push
cmc
dec
mov
sub
enter
cwtl
adc
fidivrs
fadds
lock
adc
jo
dec
mov
out
sub
out
dec
or
jns
in
jnp
jo
dec
repnz
in
jmp
sub
daa
imul
push
jmp
sahf
push
shlb
sub
push
aaa
movsl
lock
push
inc
inc
js
xor
aaa
and
cs
pop
mov
dec
dec
jo
dec
int3
dec
fidivrl
shl
sahf
pop
add
xchg
stos
adcl
scas
hlt
inc
cmpsl
dec
fisttps
das
adc
testb
aam
enter
pop
sub
lods
cs
cs
xor
test
out
push
or
adc
sahf
clc
mov
out
adc
inc
mov
adc
push
enter
mov
sbb
loop
adc
imul
cmpsl
cmp
adc
mov
mov
loope
jle
jmp
xorl
mov
xor
fwait
sti
je
cld
push
adc
outsb
insl
pusha
out
je
aas
loope
xchg
je
pop
out
insb
cmp
je
pop
out
jmp
aaa
fdivrl
clc
ret
jg
daa
out
and
or
je
dec
xor
imul
or
push
fnstcw
in
sarb
mov
imul
xchg
adc
dec
movsb
loopne
out
dec
in
js
in
inc
insl
pop
pop
gs
ljmp
jmp
mov
imul
mov
xor
ret
inc
dec
push
fnstsw
push
xchg
out
mov
lea
sbb
lock
shl
sub
cmp
mov
gs
and
add
shlb
cmpsl
lock
mov
inc
mov
js
dec
out
cmp
jecxz
xor
xchg
inc
js
sub
xlat
inc
in
mov
sbb
insl
jo
push
push
push
das
cmp
mov
iret
mov
lods
mov
inc
cli
xor
xor
roll
pop
and
sbb
inc
xchg
lcall
jb
leave
add
fwait
lds
es
flds
lods
fisttpll
int3
outsl
shll
cli
sub
mov
sbb
pop
loopne
out
ljmp
je
mov
mov
lret
pop
mov
js
mov
stos
das
mov
sar
scas
inc
clc
cmpsl
stc
fs
xchg
jmp
cld
in
sti
test
jo
test
sub
xor
add
repz
out
push
into
insl
sbb
and
lods
popf
pushf
jecxz
dec
jb
test
mov
ss
scas
rolb
and
fs
cmpsl
in
hlt
ret
add
repnz
test
call
data16
and
mov
cmp
mov
mov
dec
shll
pop
push
adc
or
sbb
mov
pmaxsw
cmp
mov
jp
das
bound
bnd
pop
inc
in
int
test
inc
or
imul
cld
inc
scas
out
cmc
mov
jecxz
gs
test
scas
flds
and
pop
xor
push
movsl
outsb
mov
ljmp
mov
daa
je
imul
cmp
jns
orb
pop
mov
lea
sahf
int3
bound
jae
sub
imul
push
lahf
xchg
bt
push
leave
push
jo
mov
push
jnp
outsb
mov
or
cwtl
je
sub
jne
jae
int3
lods
dec
sbb
jge
cmp
xor
ret
int3
xor
insb
data16
inc
pop
aas
loop
sar
das
jp
and
aas
cmp
xchg
fmull
lock
dec
mov
jle
dec
jb
ds
int
xchg
jge
fcoml
and
sub
sub
lods
cmpsl
negb
xchg
popf
out
push
js
sbb
cmpsb
call
or
dec
cmpsl
gs
nop
loope
stc
mov
int3
scas
sub
in
mov
adc
mov
cmp
sub
imul
loope
mov
adc
xchg
xor
mov
sbb
clc
push
popf
pop
jecxz
out
loopne
jb
cld
incl
lea
fists
outsl
pop
fldl
xchg
shr
mov
pop
imul
xchg
dec
fwait
call
sbb
and
pop
add
outsl
icebp
jae
testl
cmp
xlat
in
hlt
out
cmp
push
sbb
adc
inc
or
or
repnz
frstor
cld
dec
push
outsl
or
dec
fwait
mov
jg
mov
cld
push
cltd
repnz
scas
xchg
adcb
xchg
out
cmp
cmpsl
jg
loopne
push
jg
mov
xor
mov
fisubrl
sbbl
fwait
mov
adc
enter
jnp
pop
dec
pusha
call
daa
sbb
repnz
dec
jo
out
mov
negl
lret
cwtl
add
dec
repz
jg
mov
sbb
aaa
push
in
sub
cli
sub
shll
push
ds
ja
pusha
adc
fcompl
outsl
sub
inc
pop
pop
testb
ficoml
xchg
cmp
loop
jns
insb
adc
in
out
in
jo
jmp
pusha
mov
icebp
cld
in
pop
ja
cmpsb
sbb
sub
mov
lods
mov
das
into
lods
out
dec
xor
out
pop
cmp
into
or
fldl
in
lock
ret
sub
gs
and
and
pop
scas
loop
test
imul
popa
ljmp
loop
in
aad
in
dec
arpl
insl
je
sub
jbe
std
mov
push
fistps
jmp
mov
or
pop
push
xor
out
adcl
stos
call
xor
lock
scas
scas
in
inc
ret
arpl
fisttpl
jle
push
sub
je
jo
sub
aaa
adc
imul
dec
js
out
hlt
push
mov
in
mov
mov
dec
xchg
mov
mov
push
pop
mov
insl
les
xor
fsubrp
mov
test
iret
cmpl
inc
shr
adc
imul
add
inc
fs
sysexit
les
xor
out
shr
adc
in
add
ds
sbb
test
pop
daa
push
pusha
adc
cmpsl
mov
add
and
mov
dec
fidivl
cmpl
cli
dec
dec
jbe
adc
leave
mov
ljmp
shlb
fistpll
xchg
or
mov
popa
sub
mov
popa
sub
jmp
cmp
addr16
int3
push
lahf
jno
cmp
enter
push
js
sub
insb
sub
bound
or
loop
jne
test
jo
cmpsl
out
je
mov
jo
outsl
cld
adc
push
insb
in
outsb
or
aas
or
mov
outsl
or
rorb
inc
sbb
mov
sub
out
in
xchg
and
xchg
notb
insb
add
jo
and
sub
scas
movsb
in
jecxz
nop
push
jmp
inc
clc
push
testl
das
pop
fs
jge
sub
jg
ret
movsb
fldt
ljmp
int3
js
cld
fs
dec
pop
jecxz
daa
gs
dec
or
mov
dec
push
enter
imul
rolb
add
das
ret
sub
jp
ja
dec
popa
in
push
inc
pop
sub
into
push
and
mov
inc
jo
adc
lds
xchg
pop
or
adc
cmp
out
daa
push
cmp
sub
inc
push
cmpsb
imul
sub
dec
das
loop
xchg
xchg
jo
sub
sub
das
sbb
clc
pop
or
lret
sbb
or
cmp
inc
out
mov
lcall
cmp
insb
ret
mov
fldcw
mov
icebp
xor
outsb
adc
imul
push
fcomp
jns
je
out
pop
stos
cmp
enter
js
aam
addr16
xlat
iret
ss
jp
xchg
out
or
cmp
outsb
dec
cltd
jmp
sbb
cmp
dec
pop
sub
xor
shlb
inc
adc
xor
sub
inc
mov
pop
ret
cmpsb
or
jne
jo
add
lahf
xchg
jle
push
push
int
negl
clc
pop
or
lret
out
sahf
mov
cmpsb
subb
dec
or
lods
or
int3
and
in
mov
and
bound
xchg
out
dec
mov
stos
movsb
cmp
xchg
mov
mov
jmp
imul
cmpsb
and
js,pn
repnz
jne
add
cmpsb
push
movsb
or
cltd
push
loop
movsl
xchg
out
pop
lret
xchg
das
adc
outsl
lea
or
loope
rolb
xor
in
fistl
sub
aaa
pop
scas
sub
js
xor
mov
or
js
push
inc
and
enter
or
or
mov
xchg
orl
push
jne
mov
or
and
inc
xchg
loop
jo
mov
adc
jge
loop
faddl
stc
outsl
inc
dec
jg
add
xchg
fwait
lret
jge
test
fbld
dec
mov
or
int3
inc
jae
adc
leave
add
enter
icebp
and
jb
pop
lret
stc
xchg
test
popf
das
xchg
and
mov
les
enter
mov
dec
lea
in
sub
scas
jp
jnp
inc
nop
hlt
outsl
mov
sub
sub
daa
lret
dec
pop
out
imul
push
xor
fucomip
or
arpl
pop
pop
imul
xor
sub
outsb
inc
jmp
cmpsb
push
mov
cwtl
sbb
jp
out
sti
xchg
sub
pop
pop
lods
insb
push
clc
xor
loope
sbb
imulb
dec
addr16
inc
adc
nop
nop
pop
jb
inc
sub
push
outsb
inc
cmpsl
or
imul
mov
cmc
mov
dec
bound
and
js
xor
jge
shl
mov
fcmovnbe
aas
sti
addr16
mov
ja
mov
std
add
testl
and
fdivs
sbb
push
xchg
sti
fucomip
stos
or
pop
xchg
pop
lret
ljmp
rcr
adcl
insb
pop
sarb
inc
sub
arpl
fdivl
sbb
fmull
inc
mov
push
inc
outsb
insl
add
push
jle
lret
movsl
lods
insl
cmp
or
fsubp
mov
test
iret
ds
ret
rorl
mov
xchg
je
fnsave
pop
hlt
test
jbe
jmp
insb
imul
pop
das
sub
cmpsl
jae
pop
je
xchg
jle,pt
and
cmp
scas
outsb
cmp
mov
or
call
das
or
and
addr16
mov
filds
jmp
sbb
inc
arpl
jns
ret
dec
sbb
xor
mov
dec
pop
mov
jl
data16
push
leave
jg
cltd
mov
cmp
or
frstor
out
inc
adc
aam
add
adc
popfw
cmpsb
ss
sub
inc
sub
cmpsl
pop
lahf
in
inc
movsb
dec
pop
adc
lahf
jo
insl
or
dec
or
lahf
mov
outsb
pop
push
inc
sub
out
outsb
mov
and
imul
rorl
or
clc
mov
shl
add
mov
xor
mov
inc
pop
sbbb
or
ret
pop
xchg
jp
out
int
adc
and
imul
xchg
icebp
pop
cmpsb
in
pop
sub
sub
dec
push
dec
out
or
fbld
lods
push
aam
notl
inc
insl
sbb
clc
sbb
fs
daa
nop
data16
adc
pop
in
cmp
cld
shlb
sub
add
imul
sbb
adc
cmp
pavgw
repnz
pop
mov
in
fisttps
cmp
fmuls
pop
stc
cli
ljmp
push
dec
mov
bswap
mov
cmpsb
pop
iret
jge
in
cmpsl
inc
jb
push
or
bound
xchg
pop
mov
push
xchg
jno
xchg
loop
push
xchg
daa
fcoml
inc
call
aaa
xor
jae
push
inc
xchg
leave
rclb
mov
xchg
mov
or
cmp
inc
mov
xor
cld
imul
int3
mov
repnz
inc
outsb
popa
mov
sub
jnp
add
jp
aaa
cltd
clc
sub
mov
inc
sub
xchg
or
adc
in
and
mov
aas
sub
shlb
fldz
outsl
ficoml
ror
add
loop
mov
imul
xchg
inc
sub
adc
add
outsl
mov
push
push
mov
sub
jo
ljmp
arpl
rorl
lret
xlat
aas
daa
jle
rorl
add
arpl
fistl
test
mov
imul
popf
in
test
mov
jmp
pop
adc
scas
shr
out
lods
shr
outsb
filds
pop
je
dec
push
nop
inc
lds
push
pop
xchg
xchg
cwtl
pop
rcrl
in
lock
dec
sbb
cmp
mov
or
sbb
or
and
inc
dec
dec
sub
inc
xor
add
jle
outsl
sbb
sbb
enter
sbb
and
dec
aad
dec
paddusw
pop
xchg
dec
in
out
pop
or
add
insb
push
call
in
pop
mov
scas
and
cltd
call
ljmp
scas
popa
popa
nop
addr16
push
dec
out
fmull
enter
insb
xlat
pop
lods
xchg
test
fadds
roll
and
mov
out
lods
out
ficomps
xchg
or
lcall
push
mov
dec
cli
nop
rorb
loop
aaa
dec
imul
inc
mov
jle
roll
mov
sub
mov
jmp
sbb
rorb
jne
pop
inc
rcrl
movb
sbb
mov
inc
out
adc
sbb
push
dec
or
or
ja
out
adc
mov
outsl
jns
add
loop
data16
mov
and
fmuls
jp
mov
push
js
mov
dec
push
jecxz
push
testl
and
fistpl
mov
add
imul
pushf
enter
loope
sbbb
cltd
ja
ds
push
inc
data16
sbb
fidivrl
push
clc
adc
cld
or
xor
adc
bound
jo
lock
mov
xor
int
test
add
push
in
insb
and
lock
icebp
shl
jle
mov
sbb
test
pop
lods
fildll
push
pop
shrb
push
scas
pusha
mov
adc
add
inc
inc
jne
adc
pop
in
xchg
pusha
ljmp
outsb
push
adc
sbb
xor
fs
push
lods
out
jns
add
jmp
ljmp
mov
sbb
int
iret
vpaddsw
imul
stc
insl
cwtl
xor
stc
or
adc
push
in
pop
data16
shr
pop
push
mov
ljmp
cld
insb
or
data16
out
mov
fs
mov
push
rcll
jmp
jbe
jbe
ret
ljmp
xor
stc
xor
mov
pop
mov
and
adc
popf
imul
out
xor
je
loop
pop
jle
xor
jg
xor
out
insb
daa
xchg
dec
cmp
add
mov
sti
adc
sub
mov
push
std
cltd
add
sbbl
xchg
js
adc
addr16
push
divl
loope
insb
inc
inc
push
sbb
push
push
bound
imul
dec
pop
addr16
push
shr
cmc
popf
cmpb
xor
adc
or
jns
mov
jbe
cli
loopne
faddl
fsubrl
jae
fnsave
test
aaa
xchg
outsl
imul
loop
push
push
lds
mov
lret
lock
scas
inc
or
push
fucomp
jb
out
mov
cli
jb
popf
outsb
dec
cmp
and
pushf
inc
test
rdtsc
or
movsb
or
jg
mov
pop
mov
pop
adc
cmp
cmp
decl
rep
jne
push
mov
mov
adc
in
inc
xor
inc
mov
jo
lods
repz
dec
imul
mov
out
adc
pop
ret
or
outsl
mov
push
out
mov
pop
lods
ret
mov
adc
cmp
pop
sub
sub
mov
cs
imul
or
xchg
lret
add
orl
push
adc
test
pop
popa
stc
iret
or
fs
loope
sub
or
repz
push
dec
dec
push
popa
push
outsl
and
mov
cmp
jne
pop
or
jo
jge
dec
js
clc
xor
jne
dec
push
add
lock
mov
sbb
call
fcmovu
jmp
pinsrw
xchg
push
aaa
ja
popa
cmp
cwtl
cs
push
out
dec
aas
insb
ja
enter
fwait
push
jbe
push
cmp
cmc
jmp
inc
cs
adc
mov
or
mov
stc
test
das
flds
idivb
ja
ss
pop
xchg
insb
pusha
add
imul
imul
pusha
sub
mov
insl
pop
dec
jbe
leave
ja
je
cmc
pop
lock
popa
push
sar
pop
insl
jne
dec
jnp
enter
lods
test
jl
mov
pop
repz
shrl
mov
jb
mov
jo
pop
or
imul
ja
arpl
jae
xchg
ret
jb
pop
inc
dec
aas
add
aaa
iret
pop
push
iret
in
aad
repnz
out
mov
mov
pop
jp
test
add
sub
jmp
cmpsl
fiaddl
or
xor
test
in
sbb
ja
or
adc
mov
sarb
pop
push
jo
cld
cmp
lods
out
inc
lahf
aas
fidivs
mov
add
push
nop
inc
mov
mov
sbb
sbb
stos
xor
adc
jb
push
jle
inc
dec
outsb
inc
ret
lock
stos
stos
ja
pop
jge
sub
mov
aaa
ret
cmp
out
shll
dec
insl
sbb
mov
mov
enter
sbb
out
mov
sbb
out
loope
and
lock
mov
or
mov
rorb
andl
pop
push
jae
das
adc
addr16
cmp
rorb
sub
add
int
and
mov
outsl
pop
mov
adc
mov
out
repnz
push
mov
xor
out
sbbb
in
cli
stc
mov
xor
fnsave
mov
mov
sub
cmpsl
pop
clc
inc
xchg
jmp
xchg
cs
xor
hlt
jmp
imul
leave
in
sub
adc
and
and
dec
lods
imul
stc
cmpl
pop
adc
xlat
xchg
push
fimuls
std
dec
out
sub
stos
jmp
imul
or
test
dec
push
xor
fs
cli
pusha
lret
inc
outsl
out
ljmp
jae
push
fcoms
lret
in
jo
inc
jg
pop
fnstsw
adc
or
mov
cld
dec
mov
fimull
cmpsl
in
daa
jge
fidivrl
inc
or
loopne
inc
pop
push
cld
add
or
inc
f2xm1
cmp
sbb
jg
inc
dec
lods
das
pop
shlb
cmpsl
cmpsl
lahf
in
dec
fisttps
repnz
das
or
fimuls
cmpsl
add
je
sub
sub
jmp
sub
dec
sub
adc
loopne
xor
mov
or
pop
in
mov
xor
ljmp
jbe
adc
aam
repnz
xchg
insl
xchg
mov
push
push
or
loopne
sub
or
in
into
call
mov
pusha
insl
addr16
xor
or
popf
outsl
push
sbb
loopne
inc
into
dec
xor
iret
or
jecxz
sub
shrb
mov
sub
inc
jmp
push
xchg
fdivrl
fisttps
clc
popa
in
xchg
push
addr16
jns
je
inc
sahf
pop
xchg
cwtl
jns
sub
loopne
pop
push
push
or
js
sub
mov
pop
rcrl
sub
pop
mov
into
mov
bound
cs
pusha
out
movsl
test
ja
clc
or
or
xchg
jge
inc
cmp
stos
inc
pop
jp
add
push
jp
dec
out
mov
dec
out
sub
outsb
cmp
in
push
imul
hlt
sahf
pop
cmp
push
in
arpl
loop
jb
fisubl
aam
push
sub
cwtl
jle
stos
mov
ret
or
push
loope
adc
fistps
xor
mov
in
adc
int3
inc
ja
jmp
jae
int
int3
mov
pop
mov
mov
push
icebp
test
pop
mov
mov
mov
lock
jae
jae
pop
insl
xor
sbb
rclb
mov
pop
xorl
and
push
dec
dec
add
push
sub
das
idivl
lds
jmp
dec
shll
data16
mov
mov
cld
dec
das
cmpsb
mov
and
adc
insb
out
ja
inc
shll
push
insb
movsb
mov
inc
call
adc
in
out
jbe
xchg
sbb
adc
es
push
je
daa
lcall
and
outsb
dec
arpl
push
push
sbb
add
std
pop
mov
push
sbb
das
push
and
inc
outsb
add
stc
ret
sbb
jb
outsb
scas
dec
das
notb
push
sbb
out
jbe
mov
rcrb
add
jmp
fucomip
jo
mov
push
pusha
xor
adc
test
repnz
lahf
dec
sub
adc
andb
fiadds
jno
dec
arpl
push
adc
scas
cld
mov
ja
ret
pop
out
and
cmp
test
movsb
xchg
mov
call
aaa
ret
dec
mov
lods
js
das
in
mov
fidivs
adc
sub
dec
call
mov
cmp
cmc
call
out
and
dec
jp
addr16
jg
daa
arpl
xor
imul
bnd
mov
jge
das
xchg
ja
cmp
mov
rep
ds
ret
in
jo
test
out
mul
sub
hlt
jmp
jmp
sub
repnz
jg
or
inc
jae
push
cs
arpl
pushf
jmp
jne
ss
popa
and
test
cwtl
jecxz
stos
pmaxub
stos
cmc
loopne
add
or
movsl
stos
pop
xor
cmp
sub
test
cs
in
pop
mov
ret
leave
aam
and
and
shl
jmp
lahf
or
push
xchg
xlat
mov
imul
xor
add
mov
fistpl
stc
and
cwtl
adc
xchg
lods
aam
test
push
xor
ret
rol
or
add
pop
imul
int
mov
stc
leave
inc
fs
adc
mov
in
or
mov
je
inc
jae
imulb
dec
jo
out
adc
movsl
or
cmp
dec
out
xchg
js
out
pop
sub
or
das
jp
fldl
arpl
add
sub
mov
or
enter
inc
push
fiaddl
lods
sarl
movsb
movsl
int3
enter
jl
push
mov
jnp
dec
cmp
in
insl
lods
fidivrl
and
add
mov
daa
cmp
gs
cld
insb
lods
jo
push
jbe
insb
sub
into
cwtl
das
cmc
adc
outsl
out
dec
pusha
push
outsl
jne
jmp
cmp
arpl
jo
in
inc
sub
fistl
push
addl
jb
arpl
and
or
mov
jge
cmp
mov
outsl
or
rorl
mov
rorb
adc
shlb
mov
out
imul
repnz
or
loope
dec
lods
xor
dec
inc
pop
and
push
or
cmp
xchg
addr16
mov
je
jp
or
insl
int3
mov
icebp
adc
sahf
jl
in
pusha
aas
push
or
or
icebp
dec
mov
sub
cmp
dec
and
sub
shl
sbb
hlt
xor
cmc
out
jbe
outsl
notb
lds
repz
push
sub
je
clc
mov
out
push
sub
xchg
or
xor
add
sub
push
sub
jne
mov
ss
xor
testb
int3
jno
or
popa
repnz
sbb
jge
or
jle
out
dec
pusha
xor
clc
xor
aaa
outsl
jge
lock
shlb
pop
lahf
sbb
inc
or
shll
adc
inc
jb
gs
cwtl
mov
test
stos
lcall
add
xor
lods
rclb
adc
jne
push
loop
out
sub
mov
mov
leave
push
pop
or
lock
out
into
push
or
test
les
lret
mov
sub
add
xor
mov
cwtl
test
jae
sub
jle
adc
int3
add
pop
inc
cmc
pop
nop
or
push
sbb
loop
imul
push
pop
jmp
test
pop
jle
loopne
enter
insb
sub
add
test
push
daa
fimuls
push
ret
outsl
movsl
lea
lock
push
out
xchg
adc
loop
js
inc
add
xchg
ret
movsw
call
adc
lret
lock
dec
mov
pop
rorl
jle
ret
test
ljmp
or
loope
imul
bound
inc
adc
stc
jmp
or
int3
push
jo
xchg
scas
gs
jae
pop
sub
ds
jo
cld
sbb
fwait
decb
int
mov
or
adc
shrl
push
inc
ret
and
dec
movsb
mov
aas
add
leave
mov
outsb
mov
jns
iret
loope
or
xchg
mov
out
bound
add
pop
inc
and
jnp,pn
push
mov
movsb
mov
pop
inc
cltd
or
ds
xor
scas
jae
sti
ds
outsl
mov
movsb
jnp
inc
mov
and
rep
mov
jnp
pop
pop
hlt
jne
jo
daa
pop
or
xchg
push
or
dec
cmp
push
mov
or
pop
push
rcrb
dec
in
inc
inc
bound
ja
mov
sub
je
es
or
mov
push
inc
dec
out
cltd
scas
xchg
xor
insb
push
adc
scas
jecxz
jnp
adc
cltd
cmpsl
fsubrs
sub
pop
movsl
fwait
repz
mov
int3
mov
bound
sbb
orl
jmp
lock
insl
je
mov
insb
into
in
push
in
je
add
push
lea
cmp
outsb
mov
in
add
pop
cmp
je
inc
sub
jb
ljmp
ja
aaa
or
shrl
jnp
in
adc
jbe
adc
arpl
in
shrb
outsb
xor
sbb
add
jmp
adc
out
sub
outsl
scas
lahf
or
loop
cltd
int3
aam
sbb
loopne
clc
imul
in
jne
cmpsb
cld
jge
pop
addr16
lret
fcomip
dec
addr16
pusha
rorl
cld
and
outsb
adc
sub
dec
rorb
push
adc
insl
pop
outsb
push
negb
in
mov
sub
jo
cmp
pop
xlat
dec
cmp
jp
movsb
and
jecxz
mov
xchg
pop
ficompl
lods
lds
push
and
push
adc
pop
and
xor
shl
cmp
jmp
je
stos
dec
imul
shll
dec
call
int3
dec
jae
adc
push
enter
stos
sbb
ja
pop
test
xchg
ss
adc
test
or
push
dec
jmp
outsl
pop
imul
and
ret
xor
pop
cmpsl
adc
cltd
or
es
or
cmp
notb
scas
outsl
and
push
aam
inc
fcom
or
push
mov
rcll
bound
sbb
jo
push
xchg
jae
xchg
jbe
in
and
cmp
ja
sub
xor
jmp
das
xchg
jbe
sub
xor
shrb
or
xor
testl
sarl
clc
clc
xchg
outsl
dec
jb
and
arpl
dec
xor
sbb
jb
mov
and
negb
adcl
js
js
inc
cmpsl
out
or
mov
loope
xchg
in
mov
lahf
fadds
outsb
cld
and
mov
and
and
jg
jo
bound
adc
out
outsl
sub
inc
rep
xchg
mov
scas
xor
scas
pop
sbb
and
es
ja
in
lea
adc
stos
loope
mov
and
xor
lret
sbb
jne
mov
mov
popf
test
jge
add
call
cmp
jb
jo
popa
dec
repz
jae
hlt
dec
je
dec
out
scas
daa
xor
mov
add
addr16
lret
shrb
cmpsl
rcr
out
jge
mov
stos
repnz
add
jae
sahf
jo
je
out
loope
test
pop
dec
iret
das
pop
jne
int3
mov
and
fbstp
push
jne
cmp
sub
sbb
ljmp
dec
mulb
ret
jbe
insl
outsl
repz
mov
lds
push
ss
adc
movsl
jle
data16
adc
shll
inc
shlb
in
sub
xchg
and
cmpsl
fistpll
repnz
add
jne
pop
xor
loopne
andb
lock
and
loope
pop
cmp
pop
push
mov
pop
ja
imul
in
notl
jg
inc
out
cmp
and
in
ss
out
aaa
nop
lea
ret
lret
in
push
sub
imulb
int
pop
pop
fs
sub
div
cwtl
out
sub
pop
xor
repz
outsb
dec
push
adc
shrb
call
out
jbe
rcll
jo
add
fucomip
adc
or
aaa
dec
test
sti
push
call
aas
sbb
hlt
push
imul
daa
int
pusha
scas
test
dec
xchg
or
aad
fstl
cmc
and
test
js
in
or
mov
mov
sub
pop
inc
cmp
jle
adcb
sub
lock
mov
in
das
inc
or
cli
and
jmp
stc
das
divb
mov
lods
xor
in
dec
jb
outsl
stos
push
scas
add
subl
js
mov
push
loopne
push
adc
enter
add
push
lret
leave
imul
outsl
pop
add
cmc
les
icebp
movsb
fildll
mov
outsl
in
cltd
fsubl
jb
mov
out
dec
add
push
ret
cltd
out
inc
adc
jl
lock
jnp
das
fisubl
dec
push
clc
scas
cmp
loop
mov
mov
out
sub
fs
sub
adc
int3
sbb
xor
js
dec
outsl
pop
ret
jle
idivl
iret
sbbb
dec
mov
movsl
push
pop
test
mov
mov
mov
sti
and
push
cltd
adc
jbe
icebp
jo
out
ja
jnp
jns
dec
inc
pop
test
or
ja
inc
add
and
fnstenv
lds
scas
jae
and
cltd
aam
pop
ss
loope
es
push
dec
movsb
sbb
test
stos
xchg
dec
mov
loopne
push
or
add
nop
scas
lods
dec
mov
pop
cmpsb
push
xor
test
jg
dec
imul
movsb
loopne
lods
call
cmp
movsl
xchg
xchg
add
push
je
xchg
add
cmpsb
insl
pop
push
dec
adc
inc
ljmp
stos
call
xchg
mov
adc
test
adc
sarl
hlt
fcomps
cmp
iret
je
divb
cwtl
mov
mov
cmp
jecxz
in
mov
add
sbb
jne
test
xor
inc
or
inc
xchg
xor
out
xchg
lock
decl
popf
jb
loopne
add
add
cmp
push
pop
scas
mov
cmp
enter
push
mul
repnz
pusha
outsb
and
sahf
push
sub
mov
popl
jb
push
int
and
jbe
xor
divl
mov
push
mov
icebp
inc
add
negb
fs
pop
lret
scas
xor
dec
fldenv
subl
sbb
pop
mov
cmpsl
movsl
je
push
mov
pop
mov
jecxz
fadd
aaa
lea
dec
jg
push
adcl
pop
lods
clc
shl
fwait
jbe
jp
pop
andb
mov
pop
ds
faddl
xchg
push
out
xchg
aas
mov
popf
test
pushf
pop
pop
sahf
addr16
mov
pusha
shlb
cmp
lods
pop
test
pop
add
add
mov
adc
out
orl
inc
dec
fisttpll
outsb
jns
aas
mov
mov
add
in
sub
sti
adc
cmp
xchg
aad
outsb
imul
sub
outsb
add
icebp
pop
sub
fstpl
jmp
mov
mov
sub
in
inc
out
or
dec
orl
jmp
out
sub
out
dec
outsl
mov
gs
cs
scas
inc
push
or
lahf
push
ret
int
shrl
cmpsb
sbb
popf
add
dec
ret
push
loope
dec
ljmp
or
hlt
or
outsl
rcrl
inc
leave
in
inc
adc
out
mov
out
orl
js
push
adc
push
loop
push
out
outsb
push
jmp
add
push
rcrb
or
imul
sub
and
lods
push
orl
cli
into
and
dec
cs
xor
ret
loop
adc
in
sub
sbb
push
adc
out
cmp
aas
jmp
jb
in
jbe
fwait
shr
xor
mov
jnp
cmpsl
pop
popa
or
cmp
aad
movsb
xchg
stc
int3
rorb
push
shll
ja
imul
das
out
lock
fstl
mov
fdivrs
mov
insb
fdivrs
incl
or
mov
jae
fwait
push
mov
xorb
ds
or
mov
fdivrs
pusha
clc
adc
xor
sub
inc
mov
adc
jb
mov
out
insb
faddl
outsb
xchg
aam
rcll
ret
adc
outsl
add
xchg
enter
es
xchg
movsl
add
scas
mov
outsl
in
inc
xor
push
fldenv
xor
xor
repnz
outsl
nop
loop
out
jmp
test
push
pop
ljmp
sub
out
mov
mov
sub
out
and
or
aad
xor
in
sub
ljmp
into
test
xchg
decl
push
or
mov
negl
out
iret
dec
addb
mov
jecxz
insl
mov
ss
pusha
into
dec
out
stos
pop
adcb
es
push
rcrl
in
add
movsl
rorb
outsl
movsb
outsl
orl
jb
push
jne
xor
shlb
or
nop
add
jns
adcl
push
outsl
das
push
pop
mov
adc
push
xchg
sub
in
cli
sub
cmc
lods
adc
lods
xchg
scas
sub
test
pop
dec
inc
dec
dec
add
mov
mov
adc
push
cld
aas
lret
ds
push
add
pop
sub
int
dec
pop
mov
into
rorb
jnp
out
into
dec
mov
lds
ss
cmpsl
sbb
jle
jge
rcl
imulb
jno
pop
and
lea
cmpsb
mul
mov
out
sub
jmp
lods
out
and
je
bound
pop
add
cltd
dec
xchg
push
or
lock
aas
clc
sbb
rol
jmp
mov
fwait
dec
nop
cmc
adc
sub
aaa
pushf
mov
inc
outsb
xchg
outsb
pop
lock
adc
out
and
call
pop
outsb
adc
mov
mov
leave
cli
inc
mov
test
jmp
jne
out
insb
lods
je
cltd
add
xor
cwtl
enter
cmpl
push
and
ljmp
out
insl
push
push
jle
inc
scas
jo
insl
ja
jbe
out
dec
inc
push
mov
xchg
push
push
dec
or
icebp
mov
sub
or
stos
mov
xor
js
pop
adc
fldcw
js
clc
int
data16
cmp
stos
cmp
lea
jb
js
outsb
lock
lods
mov
sti
iret
data16
xchg
in
outsl
push
push
sbb
outsl
test
mov
cmp
jne
aad
dec
push
out
mov
sub
js
out
dec
cmc
adc
mov
scas
je
dec
mov
sbb
jno
subl
mov
outsl
or
test
jb
cltd
mov
lock
lcall
and
jnp
or
mov
sti
testb
and
dec
test
jns
mov
loope
nop
pop
je
repnz
pop
repnz
fildll
dec
test
out
or
fbstp
xchg
ficomps
outsl
insl
shrl
and
sub
aas
pop
scas
mov
test
inc
or
pop
sbb
ficoml
subb
es
cmp
repnz
fists
push
sub
jo,pt
sub
or
jo
call
or
dec
es
js
shlb
xorb
cmp
adc
inc
js
cmpsl
xlat
jnp
xchg
dec
aas
mov
inc
imul
mov
pause
outsl
ret
fwait
jp
push
or
xor
or
pusha
lea
xor
xor
outsl
mov
jne
push
and
mov
sbb
pause
push
mov
jmp
popa
push
jo
add
adc
push
rcr
and
pushl
mov
mov
mov
sbb
fstpt
adc
mov
outsb
jno
pop
shl
xor
sbb
jo
test
sub
scas
mov
pop
xchg
rcrb
mov
pop
leave
test
out
es
int3
sbb
inc
daa
sbb
in
imul
push
sub
movsb
cmp
loop
add
outsl
mov
jb
sahf
cltd
pop
sub
outsl
cmp
in
or
clc
ljmp
and
test
inc
movsl
imul
xor
mov
xor
movsb
cmp
daa
nop
in
cltd
je
ficompl
mov
or
jb
hlt
call
adc
loopne
das
cmp
push
push
jl
aad
cs
fdivs
mov
pop
stos
dec
xchg
or
cwtl
xor
xchg
adc
dec
xor
push
mov
dec
pop
scas
movsb
sbbl
inc
sar
lock
aas
je
mov
mov
neg
fwait
test
pushf
dec
cltd
pop
hlt
lock
fldenv
or
dec
aaa
dec
clc
adc
repz
mov
pop
push
repz
push
sub
sub
insl
daa
cld
scas
inc
dec
int3
mov
cmp
imul
cmpsl
insl
jg
jb
inc
bound
xor
lods
xor
or
mov
mov
pop
mov
das
imul
cmp
mov
roll
es
inc
out
out
test
and
fnstenv
adc
push
addr16
adc
fadd
pand
in
ja
inc
insl
call
sub
sub
cmc
cltd
mov
pop
rorb
ret
and
mov
stos
stc
mov
pop
dec
decl
adc
outsb
out
xor
jo
and
inc
lods
jl
xchg
insl
inc
sbb
add
outsb
mov
mov
out
adc
insb
ljmp
push
out
inc
in
out
aaa
pusha
repz
repnz
imul
jmp
out
sub
pop
out
loopne
adc
dec
repz
dec
lock
lret
push
inc
and
loop
out
into
daa
mov
jle
xor
lds
add
ja
mov
cld
mov
or
cmp
fwait
xchg
leave
cld
jo
sarl
sbb
inc
xlat
jb
jne
iret
xchg
outsl
imul
cmp
je
dec
mov
stos
jle
jmp
test
jbe
jae
jecxz
xchg
cmpsl
inc
mov
hlt
sti
sbb
dec
divb
pusha
jg
stos
jne
scas
sar
imul
xchg
ljmp
sbb
aad
cli
xchg
jns
orb
mov
dec
or
xchg
into
cmp
sub
mov
loopw
jp
roll
push
sub
mov
test
loopne
pop
icebp
nop
inc
decb
arpl
inc
pop
bswap
jl
rorb
sbb
scas
lmsw
mov
xor
insl
aaa
lock
dec
jno
outsl
loope
fucomip
inc
sbb
ror
sub
in
aas
mov
mov
sbb
push
test
or
loope
push
fwait
dec
stc
subl
or
mov
adc
filds
mov
rorl
or
pop
mov
mov
sti
gs
mov
stc
shl
add
test
xor
outsb
cs
stos
push
adc
scas
sub
push
pop
adc
mov
and
ljmp
arpl
mov
push
push
mov
fs
std
sub
sub
lods
dec
in
ficompl
jmp
jne
insl
cltd
add
cwtl
into
fdivl
add
daa
xchg
adc
nop
call
filds
jge
add
inc
dec
mov
pop
lock
ja
outsl
sarb
loopne,pt
push
insl
loope
in
or
and
loop
dec
js
jmp
mov
ret
cwtl
in
mov
punpckhwd
scas
inc
xchg
lock
cmpsb
insb
cmp
sub
push
mov
xchg
jb
or
es
lods
sahf
xchg
or
jle
cmp
sti
inc
inc
lds
aaa
scas
loopne
gs
aas
sub
adc
mov
js
and
ds
xor
mov
xchg
pop
jns
jg
pop
cmp
or
dec
adc
or
out
movb
nop
jge
aaa
imul
xor
jl
mov
and
cmp
leave
or
xchg
pop
cltd
aas
aam
shrl
cli
into
out
adc
add
jae
lret
xchg
js
fisttpll
sub
arpl
sbb
out
movb
ja
sbb
pop
cmp
inc
push
and
mov
rol
dec
pop
insb
or
adc
cmp
loopne
pop
test
mov
loope
sbbl
jl
mov
xlat
stc
or
push
and
sub
mov
push
rcrl
fistpll
xor
adc
shr
sbb
imul
mov
out
pop
loope
sbb
mov
outsl
in
push
xor
into
shll
out
lods
imul
mov
and
inc
or
adc
or
adc
mov
sub
push
flds
leave
cs
jmp
cmp
out
in
cmpsb
lds
cli
dec
outsb
mov
jbe
mov
or
mov
sbb
out
es
mov
adc
rcrb
xchg
inc
push
mov
cmp
ret
cmp
mov
mov
cmp
outsl
mov
sub
or
insl
xchg
push
sub
or
xor
out
ret
pusha
sub
inc
out
out
mov
adc
int3
push
pushf
or
dec
call
cs
cli
mov
icebp
popf
cmp
test
aam
repnz
push
dec
mov
adc
xor
enter
push
cs
cmpsl
test
cmp
or
sbb
dec
scas
fisttps
inc
call
in
mov
scas
pop
scas
and
sub
imul
jmp
cmp
test
pop
xchg
sbb
inc
dec
outsl
iret
dec
jo
jnp
add
jle
lret
and
jmp
test
or
pusha
ret
cmc
jo
rcl
xchg
icebp
xor
sub
xor
out
push
loopne
imul
std
pusha
mov
lret
cmp
jbe
jb
and
loop
add
mov
inc
or
loop
sbb
add
mov
pop
daa
xchg
pop
push
divb
aad
jnp
sub
bound
outsb
or
or
xor
or
loope
in
insb
inc
in
and
add
push
sbb
inc
insb
xchg
push
jnp
dec
call
loop
sub
push
or
mov
jo
incl
jp
pop
jge
adcl
pop
shlb
push
cmp
imul
push
push
jnp
pusha
paddd
mov
outsb
push
mov
fsubl
push
add
icebp
inc
pop
jmp
push
jo
push
dec
cli
out
arpl
and
dec
mul
push
inc
dec
fs
nop
mov
jge
movsb
imul
ljmp
in
xchg
into
ret
insb
or
daa
inc
enter
loopne
sub
ljmp
lcall
add
mov
nop
popa
dec
mov
inc
lock
insl
loopne
clc
mov
int
stos
mov
sub
jp
push
add
pop
fdivrl
shlb
pop
movsl
insl
or
daa
fisttps
enter
add
imul
js
sbb
sub
xor
or
das
or
xor
push
fstpl
jmp
scas
or
test
loope
mov
imul
aam
mov
mov
pop
outsl
dec
imul
pusha
dec
or
scas
xor
dec
test
je
sub
sub
cmc
rorl
out
das
out
outsb
sbb
bound
adc
and
dec
jl
call
dec
jg
cmpsl
addr16
sahf
sbb
cli
mov
out
ljmp
pushl
xchg
dec
push
mov
push
pop
jecxz
cmp
inc
in
push
sbb
aas
pop
je
outsb
xchg
xchg
push
fstpl
out
sahf
add
addb
cmp
in
pushf
repnz
nop
je
dec
ret
or
jbe
hlt
stc
mov
push
int
pop
mov
mov
lret
out
out
mov
push
push
lds
pop
insb
outsb
stos
mov
or
xor
or
dec
sub
lock
cwtl
adc
and
inc
push
cld
inc
push
sahf
add
outsl
add
sbb
xor
cmp
insb
rcl
or
js
mov
push
shrl
dec
pop
xchg
imul
and
cld
inc
mov
xlat
cmp
iret
aas
lcall
cmp
mov
insb
push
sbb
or
xchg
fildll
mov
outsl
repnz
mov
jmp
insb
into
loope
add
sti
stos
jmp
xchg
sbb
mov
or
aas
push
push
in
pop
pop
out
push
in
rcrb
pop
loopne
mov
xchg
sub
mov
fstpl
in
or
mov
outsl
lods
cmp
sub
xor
sbb
lods
mov
in
or
hlt
or
mov
je
pop
insb
sbb
or
ret
repz
ljmp
mov
pushf
mov
test
sbb
out
inc
fistpll
fistl
mov
sahf
add
xchg
and
iret
and
dec
push
jno
sub
xchg
push
fnsave
and
jbe
insl
xchg
es
mov
sbb
jno
out
sbbl
push
ret
fdivr
mov
in
or
jnp
out
fildll
fnstcw
sbb
pop
and
aad
addr16
dec
or
dec
shll
outsb
cltd
xchg
mov
pop
dec
out
add
rcll
imul
iret
inc
outsl
inc
cmp
pop
pop
or
dec
cli
add
and
dec
arpl
sbb
lret
add
mov
push
push
xor
lea
or
lock
sahf
in
push
lcall
in
or
cmp
mov
sti
pusha
mov
jo
adc
cmpsl
push
je
test
jl
jnp
and
lock
pusha
mov
daa
scas
leave
add
cmc
rcrb
or
jg
dec
repz
loope
sub
loopne
out
insb
mov
mov
dec
cmp
pop
or
push
push
mov
loopne
mov
or
sarl
idivb
and
mov
pop
in
push
cmpsb
shlb
lods
movsl
dec
xlat
add
mov
das
xchg
sub
xor
xchg
mov
jecxz
push
call
pop
mov
in
call
or
xor
add
rol
or
xchg
sbb
enter
pop
push
shlb
jno
xorb
sbb
in
and
out
jnp
dec
jne
fildl
pop
push
insb
lock
loope
sbb
pop
sbb
out
inc
or
xchg
jne
xor
cs
das
jmp
lret
jno
repnz
cmpsb
mov
mov
pusha
pushf
out
dec
xlat
aas
aaa
or
in
cs
sbb
sub
clc
mov
aad
and
add
cli
pop
daa
add
stos
adc
outsb
imul
js
out
in
scas
in
push
insl
call
das
lock
dec
ja
out
xor
sarl
pop
pop
loope
and
cmp
enter
mov
cmp
mov
cmpsl
or
clc
jmp
lahf
xor
sahf
mov
and
lods
inc
je
lods
lret
scas
jl
mov
cmp
jle
jg
ret
push
cmp
and
in
in
jg
insb
push
sbb
divl
adc
dec
adc
push
or
lret
inc
js
loopew
pop
mov
repnz
push
xor
mov
outsb
dec
lret
mov
push
pop
mov
stc
jmp
leave
out
lahf
cmp
pop
sti
mov
cmp
int
int
adc
inc
mov
pop
sub
sub
insl
pop
nop
sub
mov
adc
and
out
pop
mov
int3
ret
push
xchg
std
jo
pop
movb
mov
jb
arpl
adc
push
outsl
dec
jge
mov
jg
mov
lock
packuswb
mov
xlat
das
push
or
push
popf
xor
pop
sub
out
outsl
jbe
scas
and
call
mov
inc
push
jg
lret
push
xchg
data16
mov
sbb
xchg
aas
adc
sub
xlat
in
call
dec
in
out
dec
inc
dec
jecxz
pop
das
or
gs
in
cmp
mov
int3
out
cld
xor
mov
push
dec
sahf
or
jbe
cld
outsl
pop
jno
std
insl
addr16
push
sarb
int
into
dec
dec
aas
jmp
inc
push
mov
jmp
shrl
inc
int3
sub
pop
imul
push
out
jo
or
in
dec
sbb
ljmp
bound
loop
sbb
mov
loope
sub
out
call
scas
pusha
mov
jmp
sbb
in
dec
lock
sub
subb
shr
sar
je
cmp
ds
or
and
fmull
loopne
jg
mov
fucomp
in
or
loopne
fiaddl
push
imul
pop
mov
push
rol
push
or
movsl
popa
and
out
pop
sarb
xlat
ret
fistpl
or
sub
or
or
int3
loope
loope
hlt
jne
inc
jecxz
or
pop
mov
loopne
jo
ds
jo
mov
xorb
sub
xchg
jecxz
fs
push
in
push
fadd
outsl
jl
out
dec
pop
in
jp
mov
and
pop
jp
or
cld
fildl
jns
mov
jg
sub
ja
xor
sarb
std
hlt
cmp
fildll
or
jo
inc
loopne
in
fwait
frstor
sbb
dec
mov
pop
sub
outsl
cmp
out
jb
std
push
adc
stos
push
and
cmpsb
push
jns
cmpsb
fucomp
loop
pusha
mov
lds
shrb
fdiv
test
outsb
push
subl
jge
stos
inc
dec
pop
and
mov
arpl
outsb
inc
jbe
jnp
pusha
call
push
scas
xchg
out
inc
cmp
daa
popa
jo
imul
jae
lea
xchg
mov
bound
int
pop
les
jbe
loopne
and
pop
insl
mov
repnz
outsb
inc
add
in
jae
mov
xor
pushf
ljmp
xchg
xchg
jecxz
cwtl
xor
pusha
arpl
loop
inc
pop
lcall
testb
call
loop
jecxz
add
popf
js
test
push
pop
and
pop
mov
ret
dec
out
psubusb
and
inc
pop
sub
addr16
xchg
mov
out
cwtl
or
pop
and
rdtsc
idivb
dec
das
sbb
and
cmp
fbld
test
xchg
push
pop
pop
jne
jae
cli
ja
jbe
shr
cs
cltd
inc
or
mov
gs
insl
pusha
mov
loop
sahf
std
jg
pop
arpl
push
dec
mov
in
or
mov
mov
inc
fs
nop
pop
add
inc
ret
cmp
or
arpl
inc
lret
out
adc
jb
clc
aaa
xor
xchg
pop
or
sarb
cmc
lods
lock
rclb
test
outsb
pop
xor
les
out
mov
outsl
das
inc
jle
data16
out
xchg
in
xor
dec
xor
cmp
aas
scas
out
loop
int
push
fildll
dec
fwait
jnp
test
lods
dec
out
das
xor
push
sub
pop
daa
dec
jecxz
sub
xchg
mov
enter
stc
pop
push
cmc
call
mov
dec
into
lock
sti
outsb
pusha
xchg
aaa
xchg
xlat
mov
out
and
daa
inc
dec
push
scas
jp
stos
ret
inc
decb
dec
out
or
xor
lds
out
xchg
shll
sbb
dec
and
cmpsb
cmpsb
fisubrs
not
or
popf
mov
adc
ja
cld
mov
dec
or
stc
pop
jg
stos
add
fsubrl
push
xor
mov
nop
or
loop
cmp
cmpsb
push
pop
inc
inc
inc
jo
lds
insb
mov
subl
imul
outsb
mov
je
pop
mov
push
jmp
outsl
adc
imul
in
mov
fisubs
jle
das
xchg
mov
push
je
stos
sbb
pop
xchg
in
daa
out
cmp
push
and
fwait
je
pop
int
push
out
es
pop
sti
jle
cmp
dec
xchg
xor
es
jns
pop
push
pop
sarl
pop
push
push
rorl
dec
hlt
repnz
lea
je
rcrb
lock
and
insb
repnz
cmp
aas
jb
pop
or
pop
inc
jmp
imul
jecxz
in
hlt
push
iret
push
adc
cmp
dec
out
push
mov
addr16
jbe
cld
dec
xor
sub
or
pop
cmpsl
fstpt
nop
enter
sub
add
outsb
lea
inc
push
push
adc
and
data16
inc
insb
or
mov
scas
push
sti
sub
cmp
movsb
mov
push
push
jecxz
xchg
stc
add
xchg
in
popl
xchg
mov
pop
mov
cmp
out
lcall
stos
push
stc
xor
pop
push
push
fldenv
pop
loopne
outsl
mov
dec
push
pop
mov
sbb
jle
loop
pop
adc
jns
xor
iret
test
loope
xchg
adc
dec
pop
inc
gs
cwtl
call
icebp
xchg
jns
outsb
fucomip
and
in
imul
cmp
out
cltd
jmp
push
add
mov
and
push
push
or
xchg
inc
push
inc
insl
cli
adc
sub
sahf
pop
adc
inc
add
shll
jp
inc
pop
out
mov
push
mov
fwait
sub
push
jo
rcr
jmp
push
pop
movsl
sahf
pop
sub
fists
push
sub
faddl
out
and
and
adc
cmpsb
insl
out
imul
pusha
pop
sub
in
dec
out
xor
jp
dec
xor
in
mov
sar
out
hlt
mov
dec
divl
hlt
lcall
dec
mov
dec
shlb
inc
adc
sub
out
or
mov
nop
fwait
push
mov
sahf
xchg
mov
stos
mov
dec
xchg
pop
adc
cmp
xor
or
pop
repz
gs
insb
add
adc
dec
fdivl
icebp
sahf
mov
jecxz
cs
outsl
mov
fistpll
js
lcall
or
test
or
xlat
sarb
xor
test
lcall
fistl
imul
dec
or
cmc
std
inc
je
sub
jo
mov
mov
loop
cli
outsb
jg
ret
scas
loopne
mov
sub
fucomip
inc
call
mov
movsb
int3
lock
and
sbb
imul
in
mov
sub
clc
lret
xorb
test
in
imul
inc
mov
je,pn
sub
rcrb
push
mov
push
and
cmc
fldenv
sbbl
repnz
inc
sahf
sbb
sub
shll
jne
pop
inc
jb
dec
pushl
or
iret
pusha
pusha
xor
sub
sub
fnstcw
iret
fbld
cmpl
stc
pusha
or
jo
or
dec
jno
and
inc
pop
inc
ds
xor
adc
add
sbb
and
scas
push
or
repz
ret
nop
cs
mov
jge
dec
and
pop
push
js
sub
dec
dec
jae
lret
and
jo
andl
jae
cmp
xor
das
fldenv
pop
and
mov
lods
adc
les
loopne
mov
insb
cltd
xchg
mov
cmpsl
push
leave
daa
xchg
mov
adc
or
sub
dec
or
xorb
sbb
cmpsl
mov
inc
xchg
dec
stos
jne
test
adc
bound
mov
arpl
dec
pop
outsl
das
notb
ljmp
es
fcoml
testl
mov
xor
adc
arpl
adc
lret
das
cltd
movsl
xor
jl
fildll
jmp
pop
fcoml
aad
mov
dec
adc
mov
push
pop
addr16
cltd
or
jb
push
push
mov
adc
scas
push
les
and
shl
mov
cmp
add
iret
mull
rcll
adc
dec
insl
mov
sti
push
loope
mov
jg
cltd
in
jne
and
ljmp
hlt
and
pushl
hlt
xchg
cmp
push
addr16
push
or
pop
negb
mov
or
mov
ret
jmp
imul
cmc
mov
sub
xor
lock
push
xor
xor
sbb
imul
test
mov
sub
inc
mov
arpl
lcall
xchg
push
sbb
cmpsl
fcomip
push
mov
inc
in
and
add
mov
jecxz
mov
cmp
mov
sub
out
xor
les
movsl
sbbl
ja
popf
leave
int3
add
push
outsb
dec
or
gs
insb
jmp
inc
repnz
icebp
pop
cmp
adc
icebp
push
and
or
aas
int3
cmp
adc
test
jge
push
aas
pop
dec
sub
add
rol
and
push
mov
dec
pusha
dec
in
call
out
fstl
daa
mov
dec
fiadds
sahf
shll
imul
outsl
cltd
int
fs
pusha
xor
dec
xor
aas
pop
ret
scas
loop
xchg
sub
push
arpl
dec
lret
sbb
test
cmpsl
outsb
insl
mov
mov
notb
and
cltd
inc
jo
mov
fucomp
rcr
jg
enter
hlt
daa
es
ret
or
pop
add
insl
addr16
movsl
das
lock
push
addr16
cmpsb
clc
pop
jbe
enter
adc
cli
cmp
shlb
or
jg
js
xchg
movsb
call
jns
jne
pop
adcl
jge
ds
icebp
pop
imul
jb
mov
mov
outsb
repnz
xor
jae
adc
das
sub
sub
insl
in
jae
ja
les
jae
out
mov
or
imul
cmc
in
psllw
mov
pop
inc
push
les
insl
jo
dec
imul
xor
mov
jge
hlt
outsb
arpl
jne
ret
movsb
xchg
insl
bound
push
les
adc
insl
in
jne
clc
push
les
nop
imul
stc
sbb
jmp
or
insl
js
jns
outsl
or
push
shr
push
negl
js
cmp
cmp
neg
mov
sbb
imul
shr
stos
push
lock
push
mov
out
insl
fists
into
repnz
push
imul
sbb
and
in
lock
gs
pusha
sbb
test
or
xchg
psubusw
pop
sub
stos
or
insl
or
ret
pop
cs
adc
jmp
and
syscall
adc
mov
syscall
push
in
pop
sub
add
sub
lret
lock
int3
adc
xchg
lock
scas
jle
je
pop
lods
push
cmpsl
nop
lods
add
je
lea
inc
xor
loop
mov
std
out
lea
cmp
rolb
je
cmpsl
lea
imul
cld
lea
mov
rclb
pop
lods
enter
sub
int
or
in
adc
fimull
testb
jne
leave
stos
mov
mov
cmp
or
xlat
pushf
jb
std
sbb
out
neg
shrb
cmp
popf
repz
loop
mov
imul
jo
jg
sub
lcall
arpl
adc
hlt
mov
js
imul
jns
enter
fsubrl
push
movb
or
jae
outsb
mov
iret
orl
xlat
repz
push
fldt
test
dec
jns
hlt
pop
cmp
push
mov
repz
aam
or
pop
lea
roll
xchg
pop
iret
mov
adc
in
mov
cmpsb
jae
lds
inc
fucomip
scas
repz
repz
inc
or
or
jne
int
mov
fs
sub
jge
in
imul
cmc
mov
xor
adc
rcl
popf
and
jnp
ja
jmp
outsl
insb
imul
addr16
add
pop
adc
xor
jge
xor
sbb
das
adc
xchg
add
in
mov
xchg
xlat
stos
popf
nop
mov
dec
push
push
cmc
jmp
dec
or
jle
mov
mov
insw
dec
or
jle
cmp
xor
lods
imul
stc
hlt
sub
jne
cmpb
jl
mov
clc
add
jge
lahf
scas
aas
push
sti
xchg
popf
pop
add
out
xchg
mov
mov
adc
jo
jge
out
dec
jbe
mov
in
int3
push
out
out
insl
jmp
in
rorb
ss
rolb
ds
cmp
cmp
pusha
and
sub
push
mov
lock
outsl
shrb
inc
nop
xor
arpl
lret
jo
movsb
ficoms
stos
mov
outsb
xorb
rcrl
mov
push
add
insb
push
sbb
out
adcb
in
or
mov
xchg
insl
pop
dec
js
fs
outsl
adc
cs
or
es
nop
mov
mov
push
ljmp
imul
das
xor
stos
out
dec
dec
or
hlt
pop
aaa
daa
loop
inc
movsb
sub
or
cmpl
fidivs
movsl
cmp
fsubrs
dec
repz
xchg
jnp
std
add
dec
jne
sub
shl
scas
lea
cmc
and
lock
xchg
add
mov
insl
call
das
addr16
gs
or
enter
jle
or
cmovo
mov
insl
mov
imul
in
outsl
jno
inc
outsb
jg
cmpsl
in
das
mov
gs
jmp
adc
rep
push
pop
push
aas
jge
xor
add
mov
adc
jb
mov
mov
ljmp
xor
test
dec
aam
fsubrs
pop
xor
and
pop
fistps
xchg
pop
or
jae
imul
test
insl
insl
sub
cmp
push
mov
xor
sar
inc
rcr
ret
inc
and
mov
inc
cmp
lods
les
gs
pop
jl
mov
mov
xchg
mov
mov
ret
repz
mov
outsb
ljmp
sub
insl
jo
outsl
or
icebp
sahf
push
adc
inc
jo
jnp
out
inc
imul
sbb
pop
jb
test
push
popa
push
push
imul
hlt
adc
dec
clc
test
mov
insl
jbe
mov
push
jo
adc
out
mov
or
lret
imul
jg,pt
sub
out
dec
dec
pusha
scas
dec
cmpsb
push
mov
xor
clc
hlt
sub
test
hlt
daa
cmp
sub
add
mov
in
pop
scas
adc
fidivs
sub
sub
add
call
mov
out
push
out
and
incl
cmpsl
cmp
call
outsb
pop
inc
push
sti
call
and
fs
sahf
jo
adc
loopne
push
jb
arpl
jle
movq
and
xor
xor
push
pushf
and
int3
movswl
cmpsl
push
ljmp
in
in
out
xor
fdiv
call
jmp
movsb
mov
sti
pop
out
repnz
mov
mov
pop
ds
push
lock
sub
lock
ffreep
or
imul
addr16
int
arpl
scas
cmp
dec
and
lods
jmp
inc
outsb
inc
and
or
jmp
lcall
arpl
rorl
mov
fistpll
popf
jge
push
push
mov
int3
inc
adc
jmp
push
test
lods
test
xchg
outsb
inc
outsl
das
insl
daa
sahf
dec
adc
xor
cmp
mov
and
popf
and
dec
in
jbe
jg
imulb
xchg
cmpsl
clc
and
inc
ret
and
push
testl
cs
and
outsl
inc
xchg
inc
or
inc
lds
mov
rolb
ljmp
data16
cld
pop
mov
daa
in
push
dec
mov
mov
lock
pop
push
and
out
mov
dec
dec
cs
stos
in
mov
jbe
and
adc
cmp
loope
cmpsl
jnp
shl
das
cltd
dec
push
push
cmp
inc
add
sub
shll
mov
inc
jmp
movsl
in
jp
sub
movsb
aaa
jmp
cmp
aam
leave
pop
jae
add
imul
sub
mov
cli
mov
or
insb
js
pop
inc
jmp
test
iret
dec
mov
xor
nop
call
cwtl
xor
insl
push
or
jge
cmp
filds
sub
sub
lock
insb
ja
sub
pusha
out
mov
loopne
or
aad
in
xchg
lcall
cmc
rcrl
sub
loop
sbb
clc
lods
adc
xchg
imul
mov
jo
and
lret
sub
into
sub
push
fnsave
js
mov
mov
push
pop
sub
test
and
insl
fimuls
and
stc
push
ja
test
jmp
dec
adc
scas
clc
aad
or
enter
pop
popw
jge
dec
out
scas
or
fwait
dec
call
jg
in
lods
out
gs
cmp
add
mov
insl
shlb
pop
mov
in
pop
orl
sub
push
sbb
inc
add
das
adc
pushf
mov
nop
test
std
add
fnsave
xor
and
push
div
aad
sub
enter
push
add
xchg
outsl
rcl
ja
jae
pop
xchg
mov
mov
enter
std
jmp
and
daa
dec
outsl
gs
outsl
vpshuflw
out
loopne
mov
mov
mov
js
fsub
in
divb
lea
fucom
mov
mov
and
xlat
mov
imul
je
clc
outsl
lds
mov
dec
jp
test
scas
and
jo
xor
inc
sub
inc
mov
lret
loope
xchg
and
rclb
mov
mov
test
push
packuswb
jg
bound
adc
addr16
jae
scas
cmp
xchg
stos
jl
aas
mov
or
mov
mov
aaa
roll
mov
movb
js
clc
enter
dec
clc
daa
scas
cmp
mov
fidivrl
lea
mov
xchg
out
rcrb
or
xchg
out
push
add
pop
aas
and
xchg
mov
in
test
xor
test
cmpsl
out
lods
dec
insb
aas
dec
inc
sub
fdivl
fucomip
push
xchg
icebp
mov
decl
xchg
jo
loop
mov
movsl
add
xchg
pop
adc
dec
mov
push
xor
test
loopne
jp
jle
aam
fldcw
and
sub
pusha
jo
jecxz
in
jnp
and
adc
lods
and
dec
dec
loopne
dec
mov
movsl
cmp
inc
xor
loope
aas
mov
stc
insl
arpl
shlb
xchg
pop
fdiv
das
xchg
lahf
mov
cmpsl
fwait
mov
dec
cltd
mov
rorl
mov
push
sbb
xor
mov
inc
and
in
addr16
mov
imul
jo
jo
cmp
add
push
inc
outsl
js
pop
or
js
in
xor
pop
xchg
ret
pop
cmp
mov
cmp
fstp
mov
out
subl
call
dec
push
sub
in
das
in
jo
in
outsl
in
pusha
lods
outsl
out
js
outsl
outsb
js
out
in
fdivrs
ds
cmp
inc
dec
in
sub
jl
int3
xor
call
enter
out
subl
and
daa
mov
daa
mov
or
xchg
sbb
jo
push
push
lea
into
out
and
shlb
or
xchg
dec
sub
mov
xorb
push
outsl
loop
add
popl
adc
jns
adc
inc
adc
fmull
cli
data16
stos
repz
and
cmp
lods
je,pt
stc
pop
pop
out
xor
mov
pop
xor
fists
push
inc
je
push
adc
popa
jl
dec
daa
je
mov
test
push
lahf
push
or
test
and
sub
cmpsl
orb
call
jmp
mov
loop
je
enter
sub
test
insb
xor
xchg
jae
pop
in
dec
inc
jmp
pop
fbstp
cmpsb
test
dec
jo
jne
rol
jae
into
outsl
push
lea
les
xor
inc
push
shlb
mov
std
leave
in
add
mov
hlt
fdivr
add
or
mov
insl
je
bswap
loopne
dec
cmp
mov
xor
ljmp
pushf
push
dec
xor
cmpsb
ltr
les
clc
push
push
mov
test
or
lds
test
out
xor
xorl
or
inc
sub
testl
push
fs
ret
mov
insb
push
into
jle
scas
lcall
cmp
pop
scas
pop
mov
mov
add
outsl
in
insl
xor
out
out
inc
outsb
das
scas
cmp
cmpl
jl
enter
in
dec
pop
or
in
imul
mov
je
lret
sub
push
out
bound
mov
fwait
dec
fs
rorb
lock
jp
cmpsl
mov
out
mov
fimull
mov
sub
add
out
adc
add
or
fimuls
or
add
lods
mov
fsub
push
inc
sub
pusha
fmuls
sahf
movsl
stc
daa
addb
cmpsl
shll
scas
dec
and
or
push
add
xor
or
dec
dec
iret
inc
and
out
mov
mov
and
shlb
in
call
mov
mov
or
or
jo
sub
xchg
or
xchg
inc
imul
push
jg
js
mov
test
push
loop
add
orb
call
lea
dec
and
xor
or
dec
loop
mov
out
and
outsl
mov
add
push
and
andl
fs
cld
sbb
pop
gs
inc
xchg
xor
xchg
popf
jno
imul
adc
inc
data16
outsb
sub
sub
mov
and
cmp
cmp
arpl
and
sahf
push
iret
xor
ds
and
xor
outsl
loop
mov
test
das
inc
xor
stos
adc
add
jecxz
dec
adc
cs
dec
mov
cmp
inc
jecxz
fwait
pop
imul
arpl
fsubr
dec
cli
xchg
mov
add
inc
xchg
pop
jo
imul
in
mov
dec
dec
lods
adc
lock
nop
sbb
shrb
sub
pop
insb
enter
sub
jb
push
xor
push
or
jno
sub
jle
icebp
loopne
jb
repnz
arpl
adc
out
cwtl
lods
add
fnstenv
pusha
xor
jae
adc
cmc
dec
cmpsl
cmpsl
rolb
mov
mov
aam
ds
lea
pop
push
ss
loop
cli
xchg
xor
inc
scas
aaa
rclb
mov
mov
shlb
out
adc
pushf
pop
cmp
int3
cvtps2pd
or
test
imul
sti
push
int
and
leave
or
gs
fisubs
ja
xor
or
ljmp
inc
inc
xor
add
scas
enter
shr
inc
fistpll
aaa
je
sbbb
sub
addr16
lret
jg
aas
mov
xchg
cmp
push
out
mov
mov
iret
add
mov
movsb
outsl
std
clc
insl
jecxz
fldenv
lcall
mov
out
push
cmp
dec
call
sub
testl
or
pop
sub
jb
or
sub
imul
push
push
outsl
or
inc
shr
xor
push
test
stc
xchg
and
and
mov
int
repz
gs
sub
iret
loopne
ret
fwait
es
xlat
orl
xor
out
dec
inc
movl
adc
sbb
sbb
and
punpcklbw
mov
jnp
push
mov
fildl
rolb
and
add
insl
inc
jg
add
sarl
insl
add
cmp
add
shll
lods
sub
jp
push
jle
mov
inc
outsl
sub
xchg
fstpt
in
lret
or
and
lahf
cmp
or
lret
into
sub
push
jb
push
aas
jecxz
pop
hlt
or
mov
shl
xor
jl
mov
sub
outsl
imul
sub
adc
lds
cmpsb
sbb
jb
sarb
outsl
sti
cli
icebp
or
xchg
cmp
cld
pop
pop
xor
push
shr
pop
jmp
outsl
out
sbb
jle
divl
test
outsb
dec
daa
scas
and
xchg
and
push
adc
ja
ficoml
ds
cs
test
xchg
xor
arpl
jae
jbe
adc
add
or
scas
out
add
inc
cld
mov
jg
pusha
inc
and
mov
pop
inc
mov
push
sbb
lret
push
or
xchg
enter
sub
cmpsl
es
call
in
aam
popa
mov
jp
fmuls
push
js
out
inc
dec
lea
push
fisttpl
push
mov
aas
lods
mov
add
xor
push
test
inc
mov
xor
mov
cmp
inc
int3
inc
outsb
cld
adc
or
xchg
fldl
jl
movl
lds
or
add
xchg
fdivrl
jg
and
ljmp
pop
movsb
test
dec
add
adc
ficomps
scas
loop
pushl
lret
fiadds
inc
sub
cli
hlt
daa
imul
mov
std
inc
std
data16
push
or
clc
leave
cmp
call
into
jecxz
dec
insl
or
dec
lods
xor
dec
roll
dec
cmp
pop
or
outsb
scas
inc
xor
cmp
fiadds
xor
mov
jae
insb
push
ret
out
icebp
sbb
imul
into
push
jmp
or
nop
popl
in
fidivs
xlat
lock
mov
dec
push
out
push
inc
push
dec
mov
outsl
out
sarb
in
jo
cmp
imul
or
mov
push
pushf
pop
inc
in
call
pushf
call
shll
out
sbb
push
mov
mov
lods
in
mov
pop
pop
sub
inc
jmp
imul
ret
adc
push
jecxz
inc
pop
dec
mov
leave
push
outsb
dec
cmp
ja
and
push
std
xchg
and
xor
movsb
inc
cmpsb
or
popf
pop
jo
jo
cmp
sub
and
pop
shl
adc
add
adc
jp
or
insl
jae
fiadds
inc
jmp
pop
test
push
in
cli
and
je
pop
faddl
ljmp
cmpsl
mov
in
mov
insb
push
jbe
loopne
ret
call
inc
jp
cs
xor
lds
repnz
lahf
lret
adc
pop
cmp
sub
dec
or
sub
or
fs
sub
insl
and
daa
addr16
call
stos
xchg
in
add
xor
push
xchg
pusha
sahf
mov
test
mov
mov
xchg
inc
mov
push
out
inc
adc
shrl
xor
ja
loope
outsl
xchg
inc
mov
inc
push
add
jne
sarb
mov
inc
xchg
and
ret
or
xchg
jmp
or
js
aaa
aas
stos
inc
jp
in
int3
cmp
enter
loop
mov
mov
jmp
clc
mov
das
je
push
dec
shrl
push
push
cltd
fistl
and
andb
jo
jg
adc
cmp
out
lds
outsl
inc
addl
std
daa
inc
jmp
sti
or
out
add
pop
pusha
pop
cwtl
xor
jmp
lock
jo
mov
outsl
in
out
pop
movsb
ds
push
cmp
push
call
outsl
loope
repz
call
cmp
enter
ljmp
add
shll
mov
pop
loop
mov
pusha
jne
ret
scas
mov
nop
pop
pusha
cmp
lods
push
out
add
aaa
outsl
cs
loop
dec
dec
sarb
mov
push
inc
add
mov
pop
dec
sub
rolb
inc
test
stos
xchg
movsl
jl
pusha
call
sbb
fninit
cli
in
mov
clc
jmp
dec
pop
shrb
push
dec
jbe
call
push
mov
lea
or
adc
icebp
fs
xor
sahf
mov
fdivl
jno
arpl
daa
outsl
mov
push
repnz
shl
rclb
sti
push
lret
scas
icebp
dec
fdivl
je
or
sub
sarb
nop
jo
inc
xlat
stc
shll
xchg
aam
lret
and
mov
ss
push
or
das
push
adcl
mov
shlb
in
pop
js
add
jo
mov
mov
jle
pop
loopne
aas
lods
dec
scas
jg
inc
popa
mov
fistps
repz
outsl
enter
mov
add
xchg
or
dec
dec
push
out
push
xor
jnp
out
add
lock
sub
leave
cmpsl
mov
cmp
outsb
sbb
cmp
test
outsl
movsl
or
mov
cmpsb
sub
imul
pop
shlb
mov
mov
fldt
insl
femms
fmuls
int
cmp
sarb
dec
in
cmpsl
cmp
pop
xchg
push
cmpl
lcall
outsl
insl
pop
xor
out
test
call
dec
mov
or
xchg
mov
arpl
lock
sbb
clc
sub
pop
push
push
cmpsl
sub
mov
cmp
xchg
ret
gs
sub
sub
insl
add
adc
sarl
nop
fnsave
loope
das
insl
inc
scas
shrl
jne
imul
adc
test
jg
mov
aaa
outsl
lock
adc
imul
in
je
ja
jmp
xchg
scas
xorl
loop
xor
imul
mov
movsl
pop
gs
adc
mov
icebp
pop
cltd
repnz
jp
mov
int3
cmp
add
mov
loopne
imul
je
shrl
and
dec
sub
jo
jp
mov
push
rcll
loop
scas
mov
fcmovbe
or
mov
cltd
testl
test
inc
sub
sub
loopne
xchg
and
nop
pop
fisubs
jae
rclb
sbb
xchg
out
dec
mov
outsl
cmp
in
push
mov
xchg
int3
mov
outsl
mov
xchg
imul
js
outsl
scas
cmpsl
jp
das
ljmp
lods
and
mov
pop
cmp
mov
and
dec
mov
mov
mull
out
outsb
cli
add
stc
mov
out
push
and
out
add
push
aaa
into
clc
and
add
mov
xor
pop
nop
aaa
out
cmp
xchg
imulb
cmp
mov
ret
mov
xor
rolb
mov
sub
inc
dec
pop
push
in
sub
je
adc
inc
es
pop
push
call
sub
mov
xor
fdivrs
xor
mov
add
jmp
lret
fdivp
ljmp
imul
loopne
ss
dec
and
xor
adc
cld
int
xor
inc
jmp
out
push
jo
nop
out
loopne
notb
enter
pushl
sub
loop
adc
cmp
adc
gs
out
out
or
sarb
cmp
mov
js
call
fisubrs
xor
leave
popf
pushf
bnd
or
mov
insb
jl
fstpt
mov
xchg
fisttpl
das
rol
enter
insb
dec
pop
inc
cmpsb
in
shl
pop
hlt
or
pop
pop
sub
fmul
push
xchg
dec
lock
add
pop
push
mov
inc
imul
pusha
push
jns
adc
fcomip
aas
sbb
xor
ja
outsl
mov
shrb
or
mov
rorb
or
lock
or
aam
mov
das
insl
adc
outsb
ret
or
pop
mov
dec
fs
out
push
or
bswap
test
aad
cmp
test
cmp
popf
imul
rolb
movsl
lods
icebp
pop
into
adcl
lahf
imul
inc
int
sbb
inc
in
popf
push
jb
jne
inc
add
push
add
inc
cmpsb
out
mov
adc
out
push
cwtl
lock
jg
adc
mov
popa
mov
pop
fidivs
adcb
jns
mov
mov
clc
mov
clc
mov
in
ror
and
in
out
sbb
aas
sbb
sub
das
out
pop
sbb
cwtl
or
add
jl
scas
mov
pop
xchg
ja
and
aad
and
test
cmc
repz
xor
data16
sarb
inc
arpl
ljmp
dec
xchg
clc
test
cmp
call
out
sub
pop
jmp
xor
adc
shrb
jp
adc
jg
pop
dec
scas
sbb
test
scas
fadd
sub
lahf
jg
xchg
cmp
xor
scas
test
xchg
mov
popa
mov
shlb
paddq
or
lock
cmp
movsl
mov
cmp
aad
movsb
push
jo
mov
clc
cltd
xor
js
int
inc
xor
rcll
je
icebp
cmc
push
cmp
and
adc
sbb
push
cmc
push
cmp
mov
mov
out
mov
insl
or
out
fwait
inc
inc
add
xchg
fistps
pop
cmpsb
mov
cmp
jge
jnp
movsb
ja
sbb
mov
into
ss
cli
sbb
je
pop
mov
adc
mov
out
push
daa
adcb
cmc
push
mov
out
loop
xorl
mov
cmp
and
push
sub
test
imul
cmp
dec
pop
aaa
push
jecxz
inc
xchg
outsl
jae
scas
sub
jg
call
dec
jo
ja
loope
callw
call
hlt
mov
fidivs
pusha
in
mov
add
push
lret
out
les
iret
stos
stos
mov
leave
mov
add
bound
das
movsb
ret
popf
or
insl
fisubl
push
jo
inc
pop
out
test
add
xor
in
dec
xchg
mov
or
jb
adc
and
pop
push
flds
xor
xor
shrb
fxch
add
jle
data16
out
std
pop
outsl
pusha
shll
leave
addr16
push
sub
xor
ret
ror
cs
xor
pop
push
xchg
stos
fwait
int3
pop
jp
stos
adc
jmp
scas
test
dec
add
call
repz
inc
ja
rclb
scas
inc
aam
xor
jle
arpl
mov
dec
outsb
jl
sbb
jle
jle
dec
lea
lods
out
daa
mov
cmp
ret
dec
jns
cmp
jle
js
dec
outsl
pop
stos
mov
cmp
imul
push
outsb
cmp
or
pusha
push
add
add
call
or
push
sbb
ja
aaa
push
push
lods
jge
lods
test
repz
push
jae
loopne
mov
hlt
outsb
ret
jmp
cmp
movsb
add
ficoml
mov
or
jge
pop
xor
xor
lods
pop
incb
fcompl
loope
mov
mov
mov
jmp
inc
clc
jmp
jne
movsb
inc
push
mov
or
add
imul
cmp
pop
popf
inc
je
cmp
into
pop
mov
push
inc
js
xor
adc
icebp
into
fwait
cmp
test
arpl
into
fs
mov
hlt
lock
scas
cmp
jo
pop
ja
scas
pop
cwtl
xlat
cmp
lock
xchg
add
jp
mov
jne
iret
cld
je
loope
in
scas
outsl
jg
loopne
fs
shl
sub
add
cltd
push
ja
dec
inc
dec
clc
jmp
push
or
rcrl
mov
jo
or
outsl
out
xor
sub
ffreep
vmread
inc
fwait
in
repnz
dec
inc
inc
out
add
int3
in
lret
or
mov
mov
or
iret
and
jne
lcall
adcl
lret
mov
jecxz
cmp
jbe
push
xchg
test
lock
pusha
sar
mov
cmp
leave
jle
mov
push
jl
inc
js
inc
add
adcl
xchg
scas
mull
shrb
sub
int3
and
cmpsb
xchg
cld
jmp
pop
outsb
add
mov
pop
dec
outsb
cmpsl
xor
bound
outsl
data16
mov
sysenter
pusha
shrb
test
jne
pop
outsb
scas
mov
push
aas
xor
adc
cmpsl
xorl
adc
add
cmpl
test
cmp
sbb
ret
lods
aad
imul
mov
rcrb
ja
jne
push
ja
pushf
jecxz
enter
or
int
pushf
xchg
push
mov
sub
adc
jmp
or
add
mov
arpl
or
negl
jne
mov
pop
out
lds
ljmp
push
or
pop
dec
pusha
push
push
sub
pop
sahf
fwait
mov
fmuls
scas
adc
pushf
and
addr16
mov
push
and
jnp
rep
pop
cmp
xor
jo
ljmp
or
cmp
sub
jmp
int
cmp
fsubs
push
xchg
push
adc
pop
jb
mov
pop
in
dec
imul
lcall
sbb
adc
notl
xor
jbe
mov
or
mov
outsb
xchg
inc
fbld
cmp
xchg
dec
pusha
cmp
or
lods
cmpsl
in
cs
not
aad
jbe
and
jo
outsl
hlt
push
xchg
popf
mov
inc
dec
repz
stos
pop
ljmp
mov
pop
fs
mov
cmpsb
adc
push
out
adc
fsts
test
xlat
subl
jo
clc
push
xor
outsb
rcl
out
ja
adc
fnsave
cmp
dec
outsl
dec
icebp
unpcklps
dec
push
pop
stos
cmp
test
fistpll
jns
jae
mov
aam
sub
mov
push
push
cmc
test
sub
xchg
ljmp
test
jmp
dec
and
inc
test
mov
cmpsb
out
add
add
test
ljmp
or
lea
sub
js
mov
cmp
cmp
push
lds
sahf
sub
aas
clc
ljmp
das
stos
test
pop
cs
jbe
xchg
mov
sub
test
mov
fsubl
subl
jl
loopne
out
adc
mov
push
lret
clc
es
sbb
or
ja
add
mov
push
dec
pushaw
jne
and
jo
outsb
out
jp
xor
outsl
clc
fsubr
jge
or
int3
lock
stc
out
mov
mov
out
push
mov
ret
insl
sub
mov
sbb
add
in
sbb
into
aam
lea
roll
xchg
aaa
add
mov
xchg
mov
dec
mov
loope
sub
sbb
dec
xchg
xorb
scas
dec
js
dec
xorl
inc
mov
std
hlt
push
add
mov
fldt
scas
nop
popa
stos
je
mov
sbb
nop
dec
sub
inc
out
jmp
and
mov
inc
cmp
mov
mov
add
fsin
loope
js
inc
clc
lods
jp
inc
fistpll
push
push
mov
aad
cmp
mov
and
out
xchg
sar
xchg
cld
test
mov
stos
cwtl
mov
in
push
dec
push
cwtl
adc
shl
lea
push
ret
adc
adc
mov
sub
cmp
insl
adc
ret
fmuls
lret
dec
and
and
jb
push
mov
subb
ret
mov
aad
enter
fisttpl
mov
sbb
arpl
and
nop
rclb
sarb
out
xchg
mov
aaa
mov
test
sbbl
loope
sub
out
cmpb
and
sub
jne
loopne
es
push
outsl
outsl
sub
shrl
adc
rolb
add
out
shll
subl
mov
jnp
jle
enter
loop
cmpsl
in
mov
jo
loop
loope
sub
out
enter
mov
sub
cmp
shll
jl
push
loop
push
arpl
pop
roll
fcomip
in
jmp
and
xor
std
icebp
or
ffreep
inc
aam
es
mov
adc
imul
inc
in
scas
push
jg
adc
jle
das
loopne
mov
leave
xor
xchg
in
inc
push
and
std
insl
call
movsb
sub
pop
jo
js
and
sub
gs
mov
xor
in
je
sub
mov
sub
in
or
repnz
daa
cmp
lret
sbb
sub
aad
fwait
jmp
insl
lds
enter
inc
dec
sub
cmc
push
xchg
xchg
xor
sbb
mov
cli
scas
ret
fwait
pusha
xchg
insb
sbb
leave
mov
fiaddl
fwait
loope
lea
das
sub
push
add
icebp
mov
dec
imul
xchg
xor
add
test
jbe
loope
add
out
push
mov
mov
push
inc
daa
cmp
dec
loopne
mov
push
lock
loop
fistps
xor
and
cmp
sbb
sahf
ds
adc
mov
out
and
add
jae
inc
add
out
mov
test
std
lock
and
adc
inc
out
adc
cwtl
jae
outsl
repz
cmp
add
xchg
fwait
sub
mov
add
test
fwait
test
add
jne
insb
imul
push
out
iret
ss
outsl
adc
mov
outsb
xchg
sbb
inc
leave
daa
cli
out
loope
jp
dec
leave
stos
in
es
pop
pop
sbb
or
int3
das
mov
or
push
push
sub
dec
roll
lret
scas
sub
jg
and
gs
sub
xor
scas
in
push
pop
cli
lods
inc
into
pusha
fs
adc
inc
mov
fs
out
out
mov
loop
mov
add
daa
push
mov
cwtl
bound
mov
clc
int3
sbb
loop
mov
push
loope
mov
fildll
out
aaa
mov
xchg
aad
sub
mov
inc
dec
jmp
or
xchg
clc
js
out
shll
adc
jo
dec
out
sub
xor
int3
outsb
mov
in
jg
mov
sub
xchg
or
leave
hlt
mov
out
pushf
inc
dec
add
in
jae
mov
sub
xchg
loop
call
dec
cwtl
or
mov
xchg
or
in
push
loop
int3
push
scas
leave
pop
mov
xchg
std
jle
xor
outsb
pop
inc
in
jo
mov
outsl
push
and
loop
dec
nop
jo
out
cltd
cld
sub
xchg
jbe
adc
insl
mov
and
inc
loopne
mov
pop
divl
lods
cli
mov
insb
ficoms
dec
adc
jnp
sar
xchg
pop
mov
stos
sub
iret
add
ljmp
cmc
divl
jp
aaa
inc
movsl
ret
pop
es
jo
shr
dec
outsl
inc
cmp
xor
add
mov
rorb
fwait
stos
jge
dec
adc
inc
sti
aad
jo
scas
mov
out
addr16
jp
adc
inc
and
push
lea
mov
and
push
ret
sub
mov
jb
jo
idivl
addr16
sub
xor
adc
or
je
ficoml
push
cmp
fmull
or
add
mov
cmp
lret
xchg
test
sub
pop
adc
push
scas
fbld
in
or
test
stc
addr16
xor
pop
mov
pop
cmp
shlb
insl
mov
out
cmpsl
insl
cmp
sti
imul
je
jmp
push
stos
scas
xchg
xor
dec
pop
and
loope
adc
xchg
je
push
pop
out
jno
loope
xchg
xor
jae
sti
sarb
punpckldq
or
ljmp
mov
xor
es
jecxz
mov
cmpsl
xchg
arpl
mov
jp
popf
push
or
ret
jmp
push
xor
or
dec
test
inc
aam
mov
inc
test
or
xchg
fistpll
mov
daa
jge
cltd
add
je
xchg
js
lock
or
inc
bound
ret
in
cmp
cli
js
call
inc
sub
add
and
xor
loop
mov
jns
les
and
sbb
repz
int3
cmp
pop
sbb
or
jns
xchg
sbb
aaa
ja
add
lock
adc
push
pushf
sub
mov
adc
cld
adc
cld
out
add
jmp
and
shr
icebp
lcall
jle
mov
daa
jg
xchg
out
xor
repnz
popl
fwait
aaa
or
dec
mov
push
dec
popf
rorl
mov
inc
repnz
cmp
jnp
ficoml
and
or
pop
imul
xchg
sub
add
adc
push
shlb
cmc
xchg
xchg
mov
daa
mov
add
jge
mov
das
je
xchg
inc
mov
pop
cld
pop
int3
mov
hlt
sub
dec
sbb
push
mov
or
mov
inc
push
xor
pop
pop
and
insl
stc
lret
ror
xor
aam
repz
or
outsl
test
in
ss
jmp
mov
jae
inc
push
pcmpeqw
cmpsb
aas
movsl
outsl
and
dec
or
dec
jnp
fcoml
jbe
sub
in
out
or
xchg
pop
rolb
rolb
sbb
ds
and
test
cmc
sbb
jg
inc
ja
repz
jle
and
cmp
pop
xchg
dec
or
fs
out
inc
lods
inc
call
out
out
mov
aas
jo
push
cmp
cmc
push
push
push
inc
sbbl
xchg
cmp
stos
or
push
mov
cli
xor
ficoml
ret
sub
test
pop
cmp
jg
and
mov
inc
js
sahf
adc
xchg
dec
mov
jle
jecxz
imul
xchg
aam
fidivl
mov
push
int3
inc
gs
sbb
sub
outsl
pushf
adc
in
inc
les
outsl
and
addr16
sbb
and
lahf
dec
mov
call
mov
orl
icebp
push
and
and
mov
jecxz
jae
call
and
dec
jg
mov
sub
imul
dec
xchg
ljmp
push
jns
jp
lods
pop
adc
rorb
out
out
lods
inc
repz
enter
pop
xlat
repnz
mov
les
sbb
sti
fwait
sub
frstor
dec
scas
xchg
shll
jae
loop
dec
mov
adc
and
jle
sbb
dec
fwait
mov
dec
push
es
popa
dec
imul
lods
loopne
xor
aam
sbb
mov
in
inc
jnp
mov
pop
mov
fcompl
xchg
mov
dec
jle
out
sub
xchg
sub
popl
call
repnz
jo
in
push
insb
push
dec
jmp
jae
pop
loopne
mov
xchg
imul
inc
adc
insb
nop
cmp
push
mov
loopne
and
call
inc
scas
push
cmp
jmp
int
cltd
push
xchg
lods
pop
cli
or
ljmp
adc
xor
insl
sub
push
out
adc
out
dec
sbb
or
xor
sbb
aaa
lcall
sub
test
dec
inc
xor
and
mov
mov
xor
shrb
mov
cmovns
sub
js
pop
and
outsb
mov
dec
mov
push
out
xchg
in
inc
xchg
add
js
lds
je
pop
imul
ret
and
popa
fbld
pusha
fs
pop
inc
das
inc
insl
inc
cmpsb
add
test
rorl
mov
int3
stc
mov
sub
and
jo
mov
lret
add
in
mov
ljmp
add
in
mov
push
jmp
dec
inc
adc
dec
imul
sbb
loope
ljmp
movsl
sub
pop
sub
dec
xchg
movsb
mov
adc
jmp
ret
enter
lret
loopne
scas
cs
insl
nop
flds
xchg
and
pop
sub
mov
cs
and
xor
adc
mov
mov
rorl
xchg
int3
mov
xchg
clc
imul
jg
push
insl
cltd
cmp
int3
xor
stos
pop
mov
pop
jns
daa
and
cmp
in
test
xor
jo
mov
test
mov
das
mov
je
ja
in
jo
jge
or
push
sub
out
mov
shll
frstor
add
adcb
dec
rorb
push
loop
aad
adc
adc
aad
xchg
sub
das
mov
cmp
or
imul
icebp
inc
icebp
pcmpeqb
xchg
lret
push
out
mov
outsl
or
orl
scas
cld
in
jbe
call
sub
add
outsl
jns
fdivrs
inc
addr16
and
and
nop
imul
addl
je
or
int3
push
add
sub
repnz
mov
mov
cwtl
insl
xor
les
stc
jae
cmp
outsb
outsl
lahf
pop
out
jb
push
cmp
inc
outsb
push
sbb
jo
and
dec
rcr
les
dec
jmp
addb
cwtl
sahf
sub
aaa
jb
in
push
daa
xchg
aam
dec
jb
fs
push
mov
adc
cld
shll
pop
pop
ds
cmp
and
inc
lret
mov
cmp
inc
pop
or
sbb
and
es
out
cmpsl
cmpsb
loope
push
test
pop
test
andl
push
int
xor
mov
inc
es
cli
sbb
movsb
inc
and
scas
sbb
push
xchg
inc
jno
sbb
push
das
pop
inc
cmp
dec
test
push
outsl
test
das
pusha
sub
int
stc
test
xlat
inc
idivb
dec
out
loopne
sbb
outsl
loope
push
pop
push
daa
push
andl
fisubrs
sub
out
imul
inc
xor
push
fbld
cwtl
insb
int3
xchg
sub
sbb
mov
repz
pop
xchg
pushf
mov
lea
cmp
xor
es
dec
sub
push
out
outsb
push
jle
shrl
or
pop
jae
andnps
cli
mov
pop
repz
repz
and
xor
test
outsb
test
add
xlat
fs
mov
mov
pop
adc
lea
mov
out
dec
hlt
pusha
decb
lea
cmp
inc
xor
jo
sub
imul
mov
sub
and
mov
or
repnz
je
movsl
sub
or
je
imul
xor
stc
sub
jae
outsb
pop
mov
fdivl
fldcw
and
xchg
je
or
into
inc
and
out
inc
fnstsw
ja
repz
mov
and
sbb
out
jbe
dec
repz
stos
roll
repz
cltd
jg
and
daa
cmp
inc
or
out
mov
push
icebp
sbb
je
xor
aad
lds
mov
inc
aas
xchg
cmc
xor
pause
jp
cmc
in
xchg
cmp
addr16
daa
rorb
mov
ja
jb
in
xchg
pop
out
jo
icebp
push
pop
insl
scas
sub
dec
pop
out
mov
mov
imul
xor
popf
inc
mov
pusha
mov
pushw
jle
outsb
xor
cltd
cmp
cltd
sahf
jge
lock
lret
aaa
cmp
cmpsb
push
mov
icebp
mov
repnz
cmp
sbb
loop
mov
inc
out
sbb
loope
mov
sbb
push
arpl
je
push
cmp
in
push
push
mov
icebp
in
mov
and
icebp
in
out
fisttps
xor
jp
jo
pop
dec
jnp
xchg
pminsw
addr16
ficoml
mov
call
xor
outsl
pop
jo
rorb
adc
jp
mov
pop
pop
js
jge
or
loopne
icebp
adc
lock
loopne
jg
rorb
out
xchg
jge
jo
push
pop
in
loop
shll
dec
or
addr16
jb
ficompl
add
gs
js
mov
popf
pop
icebp
mov
ret
jno
shlb
cld
out
outsl
imul
loope
adc
xorl
mov
inc
sbb
out
cmp
push
pushf
lds
adc
jmp
dec
mov
sarl
dec
scas
gs
or
fstps
loope
shll
mov
push
shll
mov
ds
out
out
aas
stc
push
jmp
notl
test
sub
in
notb
hlt
lret
cltd
shlb
mov
imul
and
dec
mov
mov
mov
dec
and
enter
addr16
add
and
je
mov
sub
out
enter
notl
scas
cmp
testl
add
lods
aad
mov
je
mov
adc
and
cmpsb
mov
jbe
pusha
shr
mov
imul
or
adc
addr16
rorl
pusha
push
adc
mov
fwait
std
es
mulb
mov
repnz
cmpsl
div
sbb
lahf
bound
cwtl
jecxz
arpl
push
and
stc
mov
cmp
pop
loope
out
je
cmp
in
xchg
icebp
push
xchg
stos
adc
cmp
pusha
es
ja
sbb
jp
add
sub
push
push
sbbb
push
rorl
decb
jl
cli
clc
das
outsl
mov
push
and
add
mov
push
test
dec
jae
xchg
je
mov
push
adc
sub
into
loopne
and
data16
movsl
cmp
je
jg
add
push
repz
lock
pop
stc
inc
cmpsl
mov
xor
hlt
daa
lock
inc
dec
test
add
les
sub
or
cmp
sbb
shll
repnz
dec
dec
and
sbb
mov
jbe
inc
push
jnp
fildll
in
push
fstps
mov
aas
fsts
cmpsl
add
xlat
push
imul
bound
scas
fucomip
aas
sbb
hlt
mov
xor
add
jb
popf
aas
jo
inc
jbe
movsb
inc
xor
pop
and
imul
mov
pop
mov
add
hlt
outsl
push
jg
push
fs
out
je
insl
inc
addr16
pop
pop
shlb
push
shlb
nop
out
sbb
push
fs
pop
jns
push
mov
mov
outsl
test
cld
scas
in
mov
ljmp
push
jne
add
psllq
subb
cmc
ljmp
lahf
pop
shlb
cli
fsubl
nop
fistps
inc
xchg
mov
mov
jl
add
push
jl,pn
jo
imul
sub
daa
xchg
shll
shlb
push
mov
inc
xchg
push
test
mov
and
scas
ja
das
in
push
cmp
xor
ja
and
inc
cmp
loopne
divb
jbe
jmp
int3
cmp
das
movsb
lahf
xchg
push
lahf
repnz
xchg
lock
sub
cmpb
mov
sub
lock
out
push
mov
mov
imul
int
scas
pushf
lock
inc
and
or
es
insl
lods
repz
push
insb
xor
insl
or
or
adc
push
out
push
ss
mov
in
push
sbbl
sarl
mov
or
mov
sti
push
sbb
cmp
sub
out
sub
fldenv
cmpb
out
or
or
xchg
ret
loop
out
jb
popf
and
cmp
sub
cmpsl
pop
pop
inc
aad
cwtl
fwait
test
negb
dec
ljmp
mov
lock
adc
add
jl
jp
int
ja
or
ljmp
insb
push
xor
or
add
jbe
mov
sub
outsb
into
cwtl
adc
in
push
lcall
add
std
mov
adc
js
inc
scas
stos
stos
add
and
adc
pushf
lods
dec
imul
aaa
insb
or
inc
outsl
das
dec
in
sbb
sti
leave
dec
jle
fidivrl
add
js
int
out
add
dec
mov
cs
jo
into
sbb
dec
icebp
ret
cs
pop
out
or
jnp
cld
imul
movsl
xchg
loope
sub
das
mov
inc
icebp
mov
push
push
shll
outsl
cmp
int3
scas
mov
hlt
ljmp
dec
out
scas
call
sub
jns
dec
loop
jo
test
je
push
inc
out
adc
test
mov
add
insb
ds
int3
lea
mov
mov
hlt
cmp
outsl
cltd
sub
lcall
lock
mov
pushf
adc
sarb
mov
test
mov
loope
push
cli
cmp
insl
lods
pusha
insl
js
ljmp
outsb
lret
cld
lcall
jnp
xor
inc
mov
add
lock
xor
xchg
push
fcmovu
sahf
outsl
in
in
pop
inc
xor
stc
scas
dec
jge
leave
jns
iret
push
dec
test
mov
push
loope
mov
and
sahf
insl
cmp
cmp
xorb
mov
or
fdivs
loop
or
in
fildll
mov
or
lods
cwtl
jnp
ss
loopne
aam
repnz
test
divl
inc
fimuls
push
jge
adc
out
or
fmul
out
push
popa
inc
es
negb
mov
pop
ffreep
andb
inc
jae
dec
xlat
mov
inc
imul
std
stc
push
test
adc
push
xchg
popa
cld
cwtl
push
jb
pcmpeqd
adc
into
push
mov
movsl
pop
and
jb
shll
or
sbb
adc
in
mov
jo
shll
bnd
hlt
js
out
in
inc
insl
js,pn
inc
je
adc
test
ficoml
out
push
push
fcoms
int3
into
inc
bts
imul
jbe
shr
test
test
add
testl
sbb
cmpsb
cli
data16
sub
sub
out
pop
mov
outsb
mov
adc
aad
movsb
popf
inc
sar
dec
gs
mov
das
jns
fists
jecxz
jg
hlt
xor
shrl
aaa
lahf
pop
fnstcw
fsubl
jl
cmp
mov
adc
into
mov
add
rclb
mov
adc
jae
insl
clc
scas
cmp
adc
push
outsb
cmp
in
fwait
mov
mov
rcll
sub
sbb
fisubl
push
popa
aas
pop
decl
sub
push
mov
add
jg
in
cltd
push
ror
xchg
dec
scas
xchg
adc
dec
loop
xchg
test
push
sub
jo
inc
dec
sub
cli
insl
sub
icebp
add
out
jns
pop
je
faddp
fcoms
or
mov
or
jp
shll
pop
sarl
lahf
repnz
repz
movb
push
mov
outsl
mov
inc
dec
scas
ds
jnp
out
adc
xor
sub
ljmp
nop
aad
imul
loope
sub
addr16
sahf
push
cmp
dec
call
out
mov
je
mov
pop
jae
out
out
add
push
je
or
or
cltd
adc
lret
lahf
testl
dec
xchg
push
jmp
outsb
in
das
add
jb
das
or
shll
cwtl
into
sbb
iret
lcall
pop
sub
rorl
jp
sub
xor
imul
mov
adc
jae
xlat
jb
adc
add
dec
add
xchg
or
je
lods
cwtl
pusha
stc
push
or
rolb
pop
pop
inc
rorl
pop
in
push
xor
pop
mov
add
sbb
rcrl
jb
cld
mov
pop
nop
orl
xor
outsb
adc
aad
jp
sub
movsl
popa
inc
in
lock
pusha
mov
push
in
and
or
lds
push
jb
fdivs
add
xchg
mov
je
cwtl
cwtl
je
cmc
add
in
adcb
push
test
notb
test
jb
adc
scas
mov
sbb
xlat
arpl
popa
data16
mov
jb
cld
mov
push
push
pop
outsb
cmp
in
imul
stc
xchg
push
std
rep
lahf
and
lret
xor
or
sahf
push
pushl
mov
mov
ja
dec
inc
dec
xor
insl
mov
cmp
mov
xchg
push
fwait
out
insl
outsb
or
lret
aaa
xchg
dec
or
adc
ss
mov
adc
xchg
fisubs
rcr
cmpsb
inc
je
clc
lea
xchg
push
cmpsb
push
cltd
imul
subb
pop
scas
pop
int3
fs
inc
fnstenv
das
inc
fdivr
sahf
and
cld
scas
jo
pop
mov
push
out
jne
call
push
in
jge
rcl
xchg
jbe
insb
or
clc
scas
loop
and
add
adc
mov
mov
inc
cmp
sbb
xchg
rorl
push
mov
test
dec
fiaddl
inc
aas
daa
lock
out
or
in
jo
cmc
test
xor
ss
ja
mov
adc
mov
xchg
movsb
adcb
pushf
cmc
jb
xchg
adc
jle
movsl
xchg
push
test
fidivrs
fmuls
sub
xchg
and
adc
dec
inc
mov
daa
outsl
add
insb
mov
xor
es
daa
pop
dec
ret
push
cmc
stos
enter
mov
testl
push
pop
in
dec
out
in
jmp
mov
ret
mov
shrl
xchg
leave
or
sti
cwtl
pop
ja
ret
xor
adc
adc
pop
mov
shl
lock
mov
lods
imulb
icebp
dec
mov
pop
mov
jns
enter
shll
mov
in
icebp
enter
sbb
adc
je
add
mov
push
outsb
lock
enter
leave
push
mov
push
out
push
add
cmp
and
push
adc
das
fsubrs
push
jmp
add
add
and
stc
in
sbb
in
ds
xor
mov
or
movsl
sub
ret
mov
subl
out
lds
stos
pop
xor
and
addr16
mov
faddp
sub
lds
cltd
adc
lret
outsl
xchg
sbb
dec
mov
or
fisttpll
sub
xor
mov
xchg
xchg
addr16
ljmp
out
sbb
mov
cmp
stos
loope
pop
ljmp
shll
pop
push
inc
xor
and
dec
jge
mov
sbb
and
jmp
dec
mov
pop
xor
insl
sbb
div
push
mov
push
cld
jmp
clc
xor
jmp
xchg
outsl
popa
or
int
jecxz
adc
add
ja
pop
jecxz
sub
mov
pop
popa
xor
cmp
xchg
iret
inc
xchg
sbb
sbb
add
inc
push
pop
pop
sbb
sbb
jle
mov
lods
adc
in
lock
jae
outsl
dec
jmp
xchg
mov
or
push
add
mov
das
cmp
jle
and
jno
jg
popf
and
xchg
cmpsl
dec
mov
aas
jg
jg
pop
shl
scas
loopne
in
call
jmp
push
dec
and
xor
mov
fwait
xchg
push
jae
xor
xchg
jne
pop
xchg
mov
gs
fadds
enter
jmp
divl
outsb
stos
std
mov
shll
adc
iret
in
mov
and
orb
push
nop
out
in
jbe
pop
sahf
fistl
jecxz
push
shrl
in
jecxz
or
xor
add
jecxz
js
lock
ja
cwtl
out
in
or
ds
inc
outsb
xor
outsl
ret
xchg
push
mov
testb
ljmp
cltd
push
sub
xor
mov
adc
sbb
xchg
setl
iret
lds
jecxz
into
push
insb
mov
or
xor
inc
mov
push
movaps
and
daa
mov
jmp
add
insb
mov
cmp
pop
cmp
pop
xor
dec
sub
push
in
loop
movsl
mov
dec
mov
movsb
lcall
cld
inc
shll
mov
xchg
sahf
mov
sub
ficoms
add
push
in
cmp
lock
sub
xchg
push
mov
pop
sbb
mov
mov
ror
mov
xor
divl
jp
inc
arpl
dec
addr16
and
aaa
ja
sub
in
xchg
sub
insl
fwait
cmp
lcall
lods
lret
sbb
addr16
add
mov
and
addr16
sub
or
add
adc
imul
sbb
inc
imul
mov
gs
sub
push
das
jp
outsb
and
into
cmp
jae
jecxz
out
cli
cmpsb
ja
mov
scas
xor
in
stc
pop
in
dec
and
adc
mov
outsb
into
call
jo
out
mov
xor
popf
jge
out
insb
outsl
lds
and
dec
adc
insl
outsl
in
jmp
lods
mov
enter
out
in
insb
lods
insl
dec
cmp
pop
in
outsl
mov
jmp
iret
popa
sub
mov
jmp
es
adc
loopne
outsb
outsl
cmp
out
jecxz
dec
dec
pop
outsb
inc
bound
dec
in
inc
mov
pop
dec
iret
loopne
int
out
shlb
jbe
out
adc
ljmp
ret
shll
mov
mov
in
sub
push
dec
into
popa
es
adc
dec
out
sarl
into
lock
lret
imul
pop
loopne
jg
addb
fcompl
cmp
rcrb
jns
iret
lock
cmp
pop
ljmp
js
dec
gs
int
lahf
jp
cmp
lcall
pop
mov
ds
jle
gs
sub
ds
ret
mov
sbb
fs
adc
xchg
dec
test
ret
pushf
sahf
pop
jecxz
out
fstpt
outsl
mov
lods
loope
stc
xchg
loopne
stos
push
dec
jo
sub
out
sub
jp
pop
sbb
cmpsb
test
mov
jb
sub
xor
push
mov
test
sbb
shr
mov
ljmp
addr16
ss
jmp
pop
in
dec
in
xor
sub
pushf
lret
inc
je
push
jl
adc
fistpll
lcall
xchg
es
push
lret
jmp
out
je
xor
xchg
push
sbb
xchg
adc
mov
aam
sahf
dec
inc
out
mov
or
insb
xor
sbb
ja
cmp
ja
lcall
outsl
push
and
pop
out
pop
popa
movb
cmp
aam
adc
or
loop
cmpsb
mov
cmp
pusha
xor
lock
xchg
pop
and
fnstsw
int
nop
fdivl
xchg
or
adc
mov
push
mov
xchg
xor
mov
pusha
cmp
mov
jecxz
adc
test
fnsave
push
sub
sbb
out
dec
lret
loop
int
addl
mov
je
popa
stc
inc
push
ret
negl
push
jae
pop
and
jge
xor
nop
jp
mov
enter
add
jbe
fisubs
shrb
outsl
xor
inc
dec
shl
rorl
hlt
or
imul
mov
or
cmp
jbe
and
pusha
loopne
sub
mov
cmc
adc
lds
fnclex
fstp
scas
or
mov
cmpsl
add
sub
scas
pop
mov
das
cpuid
lds
adc
in
lock
inc
pop
sbb
mov
pop
and
clflush
and
sbb
jns
fiaddl
push
push
arpl
lds
pushf
test
and
insl
aaa
stc
jno
pop
adc
sub
mov
add
mov
loopne
or
cs
push
mov
scas
sahf
ja
xchg
imul
lock
decl
repz
scas
je
mov
cmc
and
xchg
adc
lret
xchg
cmp
inc
cwtl
sbbl
push
das
cmp
ljmp
cmp
mov
xchg
push
mov
jae
imul
mov
inc
inc
jnp
or
outsl
inc
lds
or
int3
cltd
mov
inc
mov
push
cwtl
lock
cwtl
and
add
ret
das
je
shr
mov
adc
jp
jne
bound
add
imul
or
insb
stos
rcrb
inc
arpl
scas
mov
dec
or
outsl
or
shr
inc
adc
xchg
pop
inc
jo
or
outsl
scas
xchg
adc
push
push
insb
push
push
int3
and
shll
cmpsb
aaa
jmp
fstl
xor
fsubl
add
lea
cmpsb
pop
loopne
insb
fistps
or
data16
cmp
sub
push
fbld
adc
inc
and
sub
xor
push
inc
fsubrp
inc
mov
jmp
insl
ficomps
mov
xor
lcall
movsl
adc
clc
scas
or
cmp
inc
jecxz
mov
jo
fisubrl
sub
loopne
mov
in
jo
rorl
adc
les
nop
and
scas
jmp
push
outsb
lods
cmc
push
sbb
aaa
das
pop
xlat
mov
ds
je
popa
loopne
xor
xchg
push
fistpll
sahf
dec
lock
leave
xchg
cltd
xor
rol
fistps
mov
jbe
mov
data16
dec
mov
and
sahf
js
and
and
mov
pusha
lock
or
mov
scas
xchg
adcb
test
mov
out
xor
sub
ja
ret
mov
loope
pop
xor
mov
xchg
pusha
out
je
repz
xchg
lret
dec
xchg
faddl
insl
das
jo
out
inc
aaa
test
or
movsb
std
xor
inc
fucomip
inc
fwait
test
mov
xor
shrb
or
adc
mov
ficoml
dec
pop
test
add
or
fcoms
test
ja
insl
xor
outsb
lret
fucomip
loopne
mov
cld
xchg
jne
xchg
and
sbb
mov
shlb
mov
out
sti
repz
xchg
xchg
daa
je
scas
out
inc
scas
shl
shr
std
dec
cwtl
mov
in
add
jg
loope
cld
fldt
and
lock
stos
cmp
imul
sub
sbb
mov
popa
cmp
xorb
dec
lcall
bound
add
addr16
inc
lods
imul
out
pop
push
jle
loopne
test
loopne
imul
pop
jo
test
hlt
rcll
jmp
lods
ja
jo
cmpsl
sub
imul
push
add
lods
jmp
inc
and
out
out
mov
and
scas
mov
out
mov
add
ja
insl
leave
xor
jmp
mov
lea
mov
int3
lock
out
lock
popa
sub
xchg
push
pop
push
mov
dec
xchg
mov
lods
lock
xor
out
adc
xor
out
popa
push
outsl
adcl
push
sub
sarl
out
rep
mov
das
je
xchg
in
adc
andb
cmpsl
lock
sub
jns
pusha
mov
test
pop
insb
rcrl
adc
lcall
inc
loopne
push
dec
add
out
neg
and
call
push
adc
and
cmp
test
movsl
push
dec
bound
call
sbb
ficoml
add
mov
dec
push
jno
cmp
cwtl
call
loope
in
call
mov
push
clc
cmp
sub
cmpsl
daa
pop
dec
mov
dec
fisubrl
or
ljmp
cmp
hlt
dec
fidivrs
mov
shr
mov
lds
inc
sub
xchg
out
es
loop
sbb
dec
mov
aad
sar
scas
loopne
push
stos
adc
sub
enter
add
xchg
enter
xchg
push
push
jnp
rclb
and
daa
ss
or
sbb
lods
mov
jo
push
repnz
out
push
cs
aaa
mov
lock
jae
out
dec
fdivl
test
sahf
xchg
aaa
sub
sbb
iret
je
fldl
je
mov
je
ret
int
cs
jae
add
hlt
jge
sub
add
je
in
mov
mov
or
adc
rorb
add
cmp
insl
or
push
fwait
sub
fwait
std
sbb
pop
das
inc
adc
add
in
push
adc
ljmp
out
mov
xchg
push
js
es
adc
icebp
jle
mov
arpl
iret
jnp
sub
mov
daa
stos
dec
and
outsb
add
fwait
bound
adc
popa
jmp
jmp
shlb
rcrb
fistpll
inc
or
adc
pop
mov
rcrb
repz
jae
or
dec
jb
outsl
icebp
call
in
subl
jp
or
push
popa
js
lock
fs
xor
je
js
lods
xchg
popa
in
jmp
pushf
push
lods
cmp
dec
fcomps
push
popa
mov
push
idivl
mov
cmp
and
outsb
pushf
jp
cld
inc
jb
add
ja
push
sub
push
inc
and
dec
addr16
out
arpl
fiadds
test
push
and
out
out
push
stos
test
repnz
sbb
push
xor
icebp
stos
fs
dec
pop
mov
je
fucomi
sub
sub
and
jg
pusha
imul
jo
fildll
je
lahf
pusha
xchg
dec
cmpsl
push
xor
inc
jge
mov
out
repz
sub
push
xor
imul
je
mov
sub
sub
jb
imull
cld
pop
cmp
test
testl
test
orb
dec
or
test
push
shrb
mov
or
ret
jae
mov
in
insl
sub
bound
ret
call
sbb
outsl
push
ret
and
mov
sub
mov
xor
out
into
in
push
sahf
push
test
adc
sahf
push
imul
out
cs
imul
jnp
leave
jecxz
pusha
ljmp
out
movq
cmc
fwait
out
divb
js
jb
xor
push
insl
jb
mov
cld
ds
mov
loopne
adc
out
add
loop
fs
push
jmp
inc
inc
mov
pop
imul
shl
in
cmp
mov
sub
jne
cmc
or
icebp
xchg
xor
stos
xor
test
insl
adc
cmp
imul
roll
xor
adc
xchg
lock
jo
rcr
cmc
into
inc
xchg
rolb
js
cmc
in
lret
jbe
adc
les
jbe
imulb
icebp
dec
xchg
mul
call
dec
dec
ja
testl
or
mov
daa
outsb
jge
out
dec
pop
xorl
insl
cmp
pop
jecxz
jmp
cmp
mov
jne
dec
arpl
cmp
pop
ret
mov
lahf
pop
xchg
inc
mov
ss
push
xor
fs
out
sub
jo
arpl
fxam
mov
scas
jp
das
sub
flds
sbb
decb
or
xor
adc
or
sbb
push
leave
je
mov
cmp
push
sbb
inc
fs
sub
fnstenv
and
ljmp
cwtl
rcll
xchg
lahf
jae
shlb
repnz
inc
jae
das
outsl
xor
scas
in
mov
sbb
sub
test
dec
ja
jge
push
insb
sti
sub
stos
insb
addr16
loopne
jnp
mov
jns
and
ds
pop
es
xchg
enter
popf
mov
das
xor
adc
push
lret
scas
scas
or
cmp
mov
leave
mov
std
pop
pop
out
in
stos
xchg
and
add
loope
and
mov
jno
dec
daa
out
repz
ja
push
push
jmp
ljmp
dec
jo
and
pusha
sbb
pop
enter
dec
xor
repnz
jne
in
dec
sub
and
mov
and
add
roll
jl
mov
inc
cli
add
loope
imul
aad
jmp
jnp
push
test
icebp
xchg
outsl
jb
int
xor
bnd
or
xchg
jo
out
insl
inc
xor
insl
outsl
data16
pop
inc
in
mov
jmp
mov
aad
jmp
fwait
xchg
jmp
push
popa
call
cmp
idivb
outsb
pusha
xor
dec
ljmp
sub
imul
cmp
sub
gs
and
fisubrs
nop
arpl
inc
inc
je
mov
xlat
int
ljmp
jle
xor
sub
shl
andl
sub
mov
ret
inc
hlt
inc
andl
jno
mov
add
loop
icebp
dec
test
dec
rclb
mov
ljmp
push
adc
loop
nop
mov
and
stc
das
test
es
shrb
mov
ret
popf
test
push
xor
pop
lods
outsb
inc
adc
pop
into
dec
lret
mov
add
les
leave
out
inc
mov
mov
mov
mov
xor
idiv
or
xor
push
jo
insl
push
insb
repz
inc
lea
sub
in
nop
ljmp
imul
mov
scas
jns
icebp
pop
dec
cmp
dec
ret
inc
aaa
cld
adc
cmp
shr
jnp
je
test
data16
dec
xor
mov
xchg
loopne
rorl
outsl
adc
sub
fsubrp
js
pop
popa
stos
mov
sbb
adc
rorb
imul
inc
cmp
push
jo
das
into
add
insb
pop
movsl
loop
loop
out
mov
in
jg
pusha
out
arpl
imul
outsl
inc
sbb
iret
es
je
cmp
and
repnz
sub
cmpsb
das
loopne
pop
sub
popa
arpl
rcrb
jnp
mov
sub
out
daa
gs
je
int3
movsb
push
out
lock
add
incb
adc
lods
sub
stos
dec
iret
icebp
fwait
lahf
push
pusha
mov
sbb
and
dec
hlt
out
adc
sbb
iret
cltd
push
retw
fcomp
outsl
jo
loop
jl
adc
arpl
jp
push
cmp
cmc
jne,pn
lds
in
aam
test
js
jmp
je
adc
fimull
lahf
jae
xor
rep
xor
fmuls
and
inc
mov
in
sub
das
out
sub
aaa
ljmp
pop
and
xchg
icebp
and
les
push
fwait
or
and
xchg
in
dec
scas
in
addr16
mov
arpl
mov
dec
ljmp
mov
outsl
rcrb
pop
adc
or
call
add
xor
je
je
sub
rcrl
scas
fdivrp
inc
xchg
mov
insl
mov
sarl
jbe
cmc
sarb
cmc
daa
in
subb
loop
push
addr16
int
popa
pop
push
mov
shl
dec
fs
not
shll
fldt
pop
sbb
testb
iret
mov
out
sub
push
ret
outsl
mov
sub
outsl
sub
or
lret
xor
lahf
cld
jnp
scas
rorb
inc
clc
hlt
iret
or
mov
inc
lret
data16
and
jb
nop
sub
arpl
dec
lret
dec
out
imul
add
xor
mov
cs
mov
stos
jle
jecxz
xor
das
fbld
fs
cwtl
cmp
rorb
cmp
ret
xor
sub
arpl
inc
mov
xor
mov
add
sub
push
cmp
enter
xchg
rep
mov
jl
popf
xchg
mov
inc
jl
test
out
inc
out
xor
ljmp
aaa
mov
cmp
int
in
mov
cmp
dec
add
jae
inc
out
insl
repz
jecxz
fldt
repnz
outsl
repnz
jle
out
jbe
add
xchg
pusha
mov
adc
aas
jae
jp
mov
jne
jb
out
add
dec
mov
idivb
fisubrs
dec
cwtl
stc
dec
push
lods
insb
add
mov
sbb
adc
out
push
dec
insl
mov
imul
adc
rorl
inc
sub
pop
sti
jbe
add
push
in
loopne
cmp
inc
xor
or
enter
mov
out
mov
fildl
lods
ljmp
inc
dec
loope
cmp
push
inc
addr16
repnz
lret
int3
outsl
adc
jae
inc
fnstenv
ja
sub
imulb
pusha
jbe
std
inc
mov
ficomps
adc
add
or
mov
and
push
ret
out
sub
inc
adc
push
test
scas
mov
dec
pusha
sub
out
in
scas
jecxz
iret
lret
loopne
jnp
rorl
and
jbe
movsb
cmp
scas
call
pop
mov
inc
push
jp
dec
push
mov
cmp
loop
add
fcoms
add
sub
rorb
mov
jp
enter
cltd
pop
rcll
lock
mov
add
bnd
pop
psubb
clc
and
add
dec
movsb
mov
jp
push
test
jp
in
lret
lds
ljmp
sarb
inc
idivb
mov
addr16
test
sarl
jns
and
mov
js
xor
mov
push
mov
xor
jo
cmp
pop
lahf
inc
cmpsl
rolb
push
pop
cmc
ljmp
inc
shll
xchg
lock
mov
xor
dec
lea
das
fisubs
das
add
push
enter
and
in
hlt
sahf
aad
mov
dec
int3
push
add
outsl
scas
sub
lcall
popf
xor
fdivr
mov
out
sarb
js
loop
mov
pop
cmp
or
xor
xchg
sub
mov
fimuls
decb
cmp
pop
and
ss
insb
sub
movsl
iret
stos
push
dec
pop
in
subl
lods
inc
scas
jle
loopne
es
jge
jle
pushf
pusha
in
pop
in
sub
outsl
cmp
sbb
outsl
ret
cli
pop
xchg
out
popa
ret
cmpl
inc
shr
loope
clc
jge
loopne
pusha
cmp
call
lret
dec
pushl
sub
or
xchg
shlb
leave
lahf
dec
ret
arpl
fimuls
orl
loop
mov
bound
ljmp
hlt
loopne
lds
in
mov
sub
inc
fstps
dec
in
out
js
cwtl
cltd
jbe
jnp
imul
pop
mov
ss
mov
dec
xor
or
out
aaa
dec
leave
sbb
or
dec
jmp
imul
repnz
ja
aaa
nop
jo
mov
ret
push
or
outsb
lea
inc
test
jp
dec
out
adc
inc
in
adc
jg
js
push
out
in
loopne
sbb
ret
dec
cmpsb
mov
or
or
push
jo
inc
shll
mov
ret
outsl
loopne
stos
outsl
repnz
xchg
push
jnp
mov
clc
mov
dec
jae
lods
clc
jb
insb
add
or
in
rorb
jb
clc
jnp
or
inc
jo
jne
je
sub
je
dec
nop
sbb
dec
rep
aas
mov
jg
js
clc
adc
std
mov
jae
dec
ja
jbe
pusha
call
insl
iret
mov
mov
loopne
clc
outsl
pop
jnp
inc
xor
jns
inc
mov
jp
js
jg
js
in
dec
mov
loop
cli
decl
shll
jnp
jb
shlb
call
jmp
xor
cld
dec
in
dec
ds
jge
jl
jg
js
in
dec
cmp
push
mov
jg
loopne
decb
mov
out
dec
push
xchg
jecxz
jle
dec
pop
adc
js
call
in
sub
dec
xchg
mov
repz
fisubs
mov
stc
xchg
icebp
sub
inc
and
js
sub
or
cmc
inc
cmp
jo
decl
or
sub
arpl
jns
push
je
mov
ret
and
aam
loopne
bound
outsl
arpl
gs
push
jbe
jnp
shl
xor
dec
leave
aaa
je
clc
lods
sub
cmp
jg
js
call
cmp
dec
outsb
ret
jo
pop
out
loopne
cmpsb
sub
out
nop
pop
and
out
data16
aas
sub
cwtl
bound
mov
jae
dec
push
pusha
imul
dec
call
xor
push
ret
and
dec
nop
ja
lret
fwait
dec
loopne
xor
insb
pop
outsl
and
popf
inc
jg
xor
pusha
jmp
xchg
jo
jmp
imul
loopne
mov
dec
mov
mov
shll
sub
cmp
dec
in
out
insl
loopne
into
add
jo
mov
inc
add
lock
clc
out
jmp
mov
jo
imul
mov
mov
ljmp
icebp
adc
insl
scas
jecxz
pusha
mov
mov
jl
psllq
hlt
out
xorb
and
cmp
dec
repz
jae
dec
fmuls
jl
jbe
stos
push
repz
in
or
adc
mov
cmc
in
sub
dec
dec
js
clc
adc
push
hlt
push
sub
or
dec
cmpsb
jg
js
sub
pmaddwd
jl
aam
rclb
push
sub
or
enter
rcll
inc
loop
fistps
pop
inc
sahf
add
into
stos
stc
loopne
data16
ja
mov
fimuls
addr16
mov
fldcw
fistpl
and
fiadds
jmp
push
out
sbb
jnp
cmp
or
or
jl
sbb
dec
sub
out
sti
mov
pusha
jg
pusha
jne
repnz
jo
pop
jno
dec
mov
leave
sub
loopne
xor
fimuls
jp
outsl
out
pop
or
jge
jae
int3
or
or
mov
cmpsl
clc
arpl
xor
or
std
int
je
test
outsl
imul
call
xlat
pushf
push
mov
pusha
scas
outsl
bound
pusha
icebp
sub
int
sub
jl
jmp
mov
dec
fwait
and
shlb
ljmp
popa
sarb
loopne
jmp
sub
dec
cmpsl
mov
xchg
in
jne
arpl
daa
and
loop
cmp
or
mov
in
or
insb
out
data16
hlt
clc
gs
sub
dec
gs
and
fstps
lahf
pop
jnp
inc
jg
push
mov
clc
addr16
mov
jo
sub
sub
mov
push
dec
call
shlb
call
loop
mov
repz
dec
aam
psllq
insb
in
dec
aaa
dec
insb
push
xor
jg
pusha
xor
sub
mov
out
scas
ret
out
xor
dec
in
jg
loopne
dec
mov
fsubrp
inc
imulb
mov
shll
sub
pop
jg
jo
mov
fsts
mov
and
sarb
repnz
outsl
icebp
xor
test
and
push
dec
js
mov
jnp
hlt
inc
nop
out
hlt
subb
jne
je
jmp
mov
mov
cmp
jae
into
lret
loope
xchg
outsb
adc
pop
or
xchg
ja
cmp
dec
ja
mov
jbe
imul
jbe
cmc
jo
sub
or
inc
jg
xor
pusha
js
mov
dec
imull
mov
jg
js
cwtl
cmp
jnp
jnp
pushf
sub
mov
jp
or
dec
jp
stc
loopne
stos
mov
fnstsw
cld
outsb
push
subb
jge
sub
shrb
les
test
test
or
loopne
dec
sub
js
in
sub
adc
loopne
jo
addr16
dec
mov
ja
test
scas
sub
mov
imul
pop
aam
jo
mov
fsts
pusha
arpl
loopne
jecxz
je
insb
inc
aad
jecxz
loop
dec
inc
jg
js
call
cmp
mov
in
loopne
push
repz
scas
or
loopne
ljmp
addr16
adc
jae
mov
hlt
push
out
outsl
ficoms
pusha
out
sub
and
mov
sub
loopne
out
push
outsl
mov
imul
outsl
mov
fisubs
dec
inc
pop
ret
in
mov
outsl
push
js
icebp
rcll
outsl
mov
ljmp
cli
std
sub
loopne
out
outsb
xorb
call
loopne
mov
loope
insl
scas
or
dec
insl
jg
loopne
sub
dec
stos
iret
mov
lock
dec
push
fdivp
mov
out
shlb
call
or
dec
repnz
out
stc
adc
repz
sub
sub
pop
jb
xor
fidivs
sub
dec
and
sbb
and
sub
jne
mov
repz
in
or
dec
dec
pop
jp
imul
cmpl
call
mov
repz
dec
int
stos
std
xor
subb
repnz
mov
imul
enter
in
sti
mov
push
outsl
rolb
sub
jg
sarb
push
jg
scas
push
mov
imulb
arpl
or
jbe
call
adc
jne
xchg
jb
xchg
into
cmpsb
cli
and
mov
jp
bound
mov
sahf
std
subb
ja
mov
mov
shr
xchg
clc
inc
js
cmp
dec
cs
push
jmp
pusha
outsb
outsl
leave
pushf
lret
add
inc
enter
jle
hlt
push
mov
dec
jbe
push
mov
jge
push
sub
xorb
inc
cld
jo
mov
sub
popf
icebp
pusha
jl
clc
icebp
decl
xchg
outsl
jg
lret
in
sub
jmp
stos
mov
test
pop
mov
loope
mov
adc
sub
clc
pop
mov
loopne
pusha
jo
sub
dec
pop
out
inc
pusha
fs
shlb
in
push
in
icebp
dec
gs
sub
aam
aas
jmp
jmp
jne
shl
out
or
je
push
fsubrs
mov
sarl
loopne
out
loopne
xor
adc
bound
cmpsl
scas
scas
jae
out
scas
out
fsubp
fcoml
dec
nop
cmp
out
data16
jp
clc
je
cltd
lods
in
dec
js
in
mov
add
outsl
addr16
and
cmpsl
in
dec
data16
das
sub
std
inc
dec
xlat
pop
cwtl
repz
mov
xor
pop
mov
repnz
mov
mov
push
je
fildll
adc
fs
or
pop
sub
aad
dec
sub
ljmp
add
cmp
or
mov
dec
or
push
arpl
inc
mov
dec
out
dec
push
pop
sbb
in
dec
cmpsl
imul
adc
or
les
imul
mov
jecxz
int
outsl
pop
scas
popf
jae
insl
scas
jg
shr
std
dec
out
loopne
adc
in
out
dec
fisubrs
push
arpl
jle
and
in
sub
call
sahf
jg
cmp
inc
into
scas
call
lock
call
dec
push
xor
jo
out
data16
daa
out
sahf
ss
sub
lds
sti
repnz
loopne
scas
shrl
or
fcmovu
push
xchg
mov
jne
hlt
and
test
jae
sub
add
les
jmp
push
decb
jmp
jp
dec
sahf
sub
sub
xchg
push
fdiv
sub
outsl
mov
adc
push
mov
cmp
in
pop
mov
in
jbe
mov
fstpl
cli
fisubrs
not
arpl
leave
cmp
lods
dec
data16
shl
lcall
dec
aas
loopne
cmc
stc
push
les
ja
jns
pop
decb
repnz
sar
je
int
dec
aad
test
scas
stos
push
scas
dec
test
js
fstpl
pmaddwd
xchg
scas
dec
divl
mov
dec
pop
jno
jo
fsubrl
sti
aam
mov
mov
ret
mov
test
dec
sti
cmp
jmp
xchg
jo
loopne
fdivrp
cmp
cmpsb
scas
dec
stos
mov
sub
dec
mov
pop
popf
pop
jg
loopne
in
mov
xor
jo
loopne
call
jge
sbb
push
xor
test
sub
xchg
xor
shrb
jl
or
in
mov
jl
in
subb
cmpsb
dec
test
or
jp
loopne
dec
popa
jo
push
xchg
mov
call
pusha
sub
jg
std
out
mov
jl
cmp
inc
inc
lea
mov
dec
aas
lea
stos
dec
addr16
mov
xor
mov
data16
in
je
mov
or
in
dec
pop
and
dec
ja
clc
inc
lds
cmpl
js
sub
push
lret
pop
adc
fisubs
stos
decb
loop
repnz
xor
sub
out
dec
out
repnz
bound
fwait
and
mov
mov
xlat
fdivs
sub
ljmp
cmpsl
pop
insb
sub
mov
lock
xor
int3
dec
jmp
clc
in
sub
adc
xchg
jl
jg
arpl
mov
arpl
scas
out
fsubrp
sub
xchg
push
fsubrs
pop
add
pop
xor
push
and
popa
outsb
push
push
dec
ds
and
sarb
pop
leave
insl
push
cmp
cwtl
inc
add
xorl
or
sarb
push
je
mov
xor
jl
xchg
mov
in
dec
fdivp
stos
aas
outsl
lcall
stos
push
add
addr16
dec
jb
xorl
ljmp
mov
out
sub
fwait
les
sub
dec
outsb
les
out
in
sub
push
fwait
or
insl
sub
in
les
in
sub
mov
outsl
inc
hlt
pop
mov
push
es
jo
lret
sahf
out
pop
jne
jno
fidivrs
pop
mov
or
jbe
js
pop
imul
xor
sub
cmp
sub
push
pop
in
lret
and
xchg
shlb
sub
setbe
dec
leave
adc
pusha
and
push
orl
mov
loopne
icebp
push
sub
pushf
mov
je
push
xchg
ret
and
subb
pop
sti
xor
mov
pop
pushf
dec
loop
stos
hlt
push
sub
jp
enter
insb
nop
mov
stos
dec
dec
jg
js
test
sub
jno
push
outsl
idivb
in
mov
mov
mov
xor
or
jns
mov
arpl
inc
shll
sub
inc
je
call
dec
jl
outsl
mov
jg
das
imul
out
jnp
sub
sub
test
sub
fidivrs
sub
js
add
or
lahf
mov
sub
ljmp
cmc
cld
scas
xor
jg
xchg
mov
pushf
dec
and
out
jle
mov
loopne
scas
outsl
push
pushl
pmaddwd
jge
dec
jle
outsl
jge
sbb
sbb
xor
push
cmpb
push
pop
pushf
and
jp
and
sub
lahf
enter
pop
das
jle
xchg
push
xchg
outsl
loope
pop
scas
out
jl
or
mov
daa
push
adc
push
loop
push
fnstenv
imul
enter
ja
idivl
loopne
test
enter
xor
inc
rcll
neg
xor
jge
jo
xchg
mov
or
xchg
dec
dec
jecxz
mov
clc
jb
dec
arpl
fwait
les
sub
dec
loop
out
out
in
sub
push
xor
and
fsubp
lock
mov
popa
adc
adc
popa
arpl
and
jo
add
in
add
scas
dec
mov
cld
push
dec
mov
repz
ss
call
xor
aas
jmp
dec
fmulp
sub
push
testb
out
adc
dec
dec
aad
push
orb
push
or
sub
cmc
sub
dec
scas
jo
sub
sbb
jns
fsubrl
subb
adc
push
ljmp
ljmp
dec
push
dec
xchg
out
pop
scas
das
fisubrs
outsb
push
push
push
repnz
in
pop
daa
cmc
jo
mov
mov
pusha
in
sub
outsl
test
push
jg
pop
ficoml
xorb
ja
inc
loopne
outsb
and
jg
xchg
in
inc
sub
rcll
pusha
lock
ja
xchg
sbb
sub
dec
jo
out
lahf
mov
mov
outsl
loopne
pusha
leave
sbb
test
call
and
pusha
mov
mov
pop
sbb
adc
arpl
and
xor
shrb
ljmp
in
das
push
addr16
cmp
sub
loop
mov
adc
jbe
adc
rcl
fs
movl
bnd
push
push
pop
das
ljmp
fidivs
push
pop
or
fs
rcrb
out
enter
mov
lods
and
mov
pcmpgtb
lods
out
mov
xor
idivb
shlb
sbb
adc
jle
lods
out
cli
dec
fmulp
jae
push
shlb
loopne
scas
mov
lahf
pop
fcoms
and
sbb
daa
int3
pop
cmp
jle
repz
ja
pop
loopne
repz
dec
inc
mov
iret
or
inc
in
loop
push
jne
daa
pop
clc
mov
sbb
pushf
mov
scas
and
scas
clc
movsl
daa
mov
mov
xor
pop
repz
fcomps
xor
pop
xor
inc
leave
setns
iret
ja
dec
or
pop
es
sti
insl
xor
or
loop
dec
mov
add
std
inc
add
mov
and
rolb
insb
or
add
inc
lods
pop
mov
lds
or
insl
addr16
insb
push
xchg
push
shrd
sub
rcll
pop
in
dec
xchg
imul
pop
imulb
and
mov
push
loopne
fisubs
add
sub
add
dec
lock
dec
mul
jae
mov
jmp
or
mov
out
jb
inc
mov
sub
xchg
inc
mulb
outsb
inc
mov
sub
xor
xchg
mov
xadd
outsl
fidivrl
jg
stos
stos
jmp
aaa
push
aad
jg
jp
into
int
cmp
jge
pop
js
hlt
fs
dec
mov
push
pop
cli
divl
xchg
dec
xlat
cmovs
scas
outsl
daa
call
inc
push
xchg
iret
push
dec
cli
mov
dec
jnp
dec
sbbb
sbb
jo
inc
lahf
pusha
pop
xor
das
ds
mov
cli
add
inc
sub
shl
cmp
and
pop
or
insb
shll
adc
repz
lods
sub
push
sub
leave
imul
outsl
pusha
add
cwtl
cld
adc
inc
js
push
outsl
pop
jl
jle
adc
sub
jns
testl
push
dec
fsubl
jb
mov
enter
fnstcw
adc
addr16
out
js
pop
outsl
loope
mov
aaa
sub
adc
dec
out
pusha
fucomp
cmp
or
add
lock
adc
sti
cmp
push
push
push
dec
jnp
stos
rcrl
mov
mov
adc
stos
aam
push
sub
dec
cwtl
jg
pusha
jle
hlt
movsl
adc
adc
mov
lock
dec
test
add
outsl
in
dec
pusha
jo
mov
outsl
pop
ljmp
inc
enter
cmp
sub
outsl
xchg
dec
int3
jg
loopne
ja
fs
inc
xor
push
loope
push
out
popa
loopne
scas
sub
outsl
xchg
test
xchg
ja
jbe
jnp
cmc
sub
sub
jg,pt
pusha
lahf
xorl
fnstcw
xor
out
or
outsb
outsl
inc
js
push
insb
push
outsl
test
out
push
or
mov
call
or
dec
in
rcll
dec
push
out
loope
out
push
popa
mov
incl
ss
cld
outsl
jge
std
adc
stos
jg
aad
outsl
inc
cmp
push
hlt
fisubrs
jns
movsb
out
clc
sarb
ja
or
negb
test
hlt
loopne
imul
outsl
into
js
inc
dec
out
lock
leave
jo
pusha
scas
out
jo
xchg
in
in
sub
adc
insb
add
clc
adc
mov
push
ss
fcoml
jmp
push
out
cmp
dec
in
dec
sbb
outsl
js
in
movsl
push
in
sub
lret
out
jmp
sub
dec
dec
jg
pusha
das
in
jmp
mov
xlat
pusha
jbe
adc
hlt
loopne
cmc
push
mov
nop
jo
jl
lock
js
pop
test
stos
fcom
push
mov
mov
add
cmp
mov
jmp
push
addr16
into
mul
in
outsl
arpl
clc
cmc
sub
loop
hlt
dec
sub
and
adc
test
dec
stos
jg
mov
inc
pxor
out
push
cli
rcr
outsl
sub
adc
in
aad
sub
mov
cmp
jae
pop
adc
out
daa
shll
sahf
outsl
jp
shll
lock
push
loope
out
loopne
mov
xchg
enter
insb
fnstcw
adc
jmp
clc
sub
outsl
enter
daa
adc
pop
stos
or
out
dec
icebp
sbb
pusha
push
call
push
daa
push
popa
pop
stos
shlb
outsl
jg
and
adc
jecxz
outsl
aas
jp
insb
nop
cmp
mov
push
lock
divl
cmp
sbb
cmp
sahf
add
cmp
add
pusha
outsl
pusha
cwtl
adc
cmp
js
cmp
lcall
stos
sti
cld
cmp
test
js
cmp
gs
outsl
mov
jl
cmp
out
in
f2xm1
imul
out
inc
ret
sub
inc
cwtl
inc
outsb
inc
and
inc
inc
add
sub
in
in
and
dec
xchg
loope
xor
cs
lock
push
add
out
dec
sub
cmp
inc
sub
and
adc
dec
jmp
cmp
mov
repz
in
jno
or
dec
ljmp
test
adc
stos
cwtl
dec
lret
xchg
adcb
pusha
fsub
xor
lret
stos
add
test
mov
push
lret
ljmp
nop
orb
fidivs
push
mov
insb
icebp
add
and
lcall
xor
cmp
dec
add
mov
mov
inc
sbb
or
idivb
ja
aaa
cmp
sbb
lock
jae
cltd
xor
add
cs
cmp
imul
sti
dec
mov
rorb
adc
mov
push
jecxz
or
int3
cmp
insb
xlat
repnz
mov
nop
loopne
pop
jg
jg
aam
lods
rorl
scas
push
shll
mov
lea
ja
test
mov
sub
xchg
push
sbb
cmp
and
gs
jns
adc
testl
fidivl
fmull
js
bswap
xor
sarl
insb
hlt
insb
pop
dec
cld
daa
loopne
call
mov
icebp
imul
out
cltd
enter
jne
mov
push
mov
cli
mov
das
adc
jo
xor
je
es
rol
inc
ret
out
stos
cmp
push
or
mov
dec
cmpsb
pop
std
dec
cltd
clc
push
daa
loopne
push
int3
repz
dec
fmuls
inc
sub
mov
xchg
push
xor
push
repz
test
clc
popf
pop
jecxz
or
clc
add
cmp
mov
xor
push
mov
mov
pushf
xor
cmp
jnp
cld
mov
jno
iret
in
add
stc
dec
push
mov
pop
in
inc
lret
in
adc
xor
jg
inc
pop
cs
push
repnz
icebp
sbb
mov
sub
jo
push
bound
fimuls
out
mov
sbb
loop
xor
scas
mov
cmpsb
and
stos
lock
jmp
loopne
mov
lods
cmpsl
xchg
dec
daa
push
xor
rcrl
jne
outsl
daa
loopne
xor
sub
outsb
jmp
dec
stos
fbld
push
sub
iret
negl
push
aas
pusha
hlt
fwait
and
add
clc
add
call
ret
bound
rcll
mov
mov
jb
sub
and
sub
sub
pop
and
jb
psubb
or
aad
dec
cs
hlt
cmp
stos
repnz
test
inc
push
shlb
je
pusha
jecxz
jge
or
loope
out
jmp
insb
ficoml
ffreep
jo
cwtl
call
push
insl
jne
sbb
out
jne
sub
sub
out
push
jo
rcll
into
jg
js
call
sub
add
nop
and
xor
addr16
imul
add
cli
aam
into
lahf
enter
cli
movsl
jne
aad
jbe
jnp
push
cmpsl
call
lret
lds
insl
clc
aad
jae
cmc
or
das
je
mov
mov
or
addr16
jp
stc
nop
bound
outsl
imulb
jge
xchg
out
push
or
pusha
jp
mov
push
pop
jp
testb
and
mov
outsl
push
xor
test
sub
and
dec
das
cmp
enter
jo
mov
inc
push
out
insb
mov
test
inc
push
and
mov
cmc
out
popa
xchg
jne
subb
popa
lret
int3
jb
jp
jp
cmpsl
cmc
push
dec
cld
xchg
call
jo
pop
je
or
add
pop
daa
insb
jl
sti
int
call
ror
push
loopne
popf
add
jbe
dec
dec
or
pop
pop
call
loopne
lcall
imul
fs
adc
jl
pop
inc
jne
out
fsubl
jae
adc
cmp
sbb
dec
lea
add
aas
or
dec
cld
in
ret
ficoml
fs
loope
addr16
xchg
inc
mov
outsl
sub
or
insb
aam
cmp
and
push
je
insb
mov
aad
in
push
jbe
flds
inc
mov
push
or
adc
jmp
or
push
loop
es
add
adc
out
shrl
mov
mov
lcall
lock
mov
sbb
xorl
push
cmp
push
push
lds
in
xchg
aas
daa
adc
cmp
test
mov
out
stos
bound
mov
lret
jns
sub
and
loope
insl
test
sub
sub
add
iret
xor
pusha
jns
data16
sub
dec
data16
or
mov
out
push
insl
ficoml
sbb
fisubrs
xchg
xor
aad
adc
fs
sahf
push
ds
or
cmp
ljmp
lret
adc
das
int
cltd
idivl
push
lods
scas
loopne
or
and
ficoml
lods
clc
xor
lret
sub
jp
sub
cld
call
mov
sub
clc
cmpsl
cmp
andb
push
popa
cli
push
je
jp
sar
push
adc
rcl
ret
jp
lock
push
iret
hlt
push
loop
cmpsb
or
out
shrb
add
scas
mov
js
sub
orl
or
sbb
jmp
repz
int
cmpsb
cmc
and
out
sub
mov
sub
rol
fistpll
xchg
cmp
in
mov
cmp
xor
in
mov
jo
jns
inc
clc
cmc
ret
and
dec
test
cmpb
mov
jo
nop
inc
shll
or
je
insb
and
call
mov
mov
mov
mov
sub
jbe
mov
pusha
fdivr
lahf
enter
das
adc
loopne
fisubrl
das
push
in
mull
jle
outsb
and
test
ret
insl
test
jecxz
mov
xchg
push
mov
adc
outsb
insb
fndisi(8087
repnz
mov
test
lahf
loop
aam
aam
add
in
adc
cmp
outsl
push
sub
out
pusha
insl
popa
stc
repz
adc
sbb
pop
mov
jle
ja
push
jp
sbb
xchg
xor
stc
faddl
shll
dec
cli
mov
cmp
clc
das
imul
jno
clc
xor
pop
cltd
pop
aaa
daa
imulb
test
out
stc
daa
hlt
gs
fnstenv
jb
mov
div
fiadds
outsb
test
mov
add
je
xchg
bnd
rol
lock
push
ror
or
clc
insb
xchg
or
icebp
sub
movsl
mov
xor
mov
push
pop
sub
mull
ljmp
std
nop
daa
test
outsl
jae
inc
xchg
xchg
and
cmp
dec
lret
sub
cmpsb
popf
in
int
adc
mov
fldenv
and
add
pop
xchg
xchg
xor
push
fcompl
mov
loope
push
xor
adc
repnz
add
stc
negl
mov
mov
jo
std
daa
ret
loopne
enter
jns
mov
or
cs
enter
mov
in
or
jo
decb
sbbl
jnp
push
hlt
dec
mov
cmp
subb
aaa
pop
movsl
outsb
icebp
pop
out
pop
mov
cld
leave
xor
pusha
jmp
inc
ret
insl
out
xor
jg
repz
xor
fcmovnb
scas
scas
lods
imul
je
push
xor
inc
push
lds
pusha
adc
cmc
sub
jne
cmc
inc
mov
ds
pop
jae
out
xor
ja
ds
fwait
js
xchg
fldt
mov
decl
ds
jbe
fisttpll
in
pushf
jbe
je
imul
mov
xor
test
daa
and
or
insl
out
ja
pop
ja
jno
add
test
dec
dec
js
pop
lea
mov
clc
test
leave
push
xchg
ja
mov
push
push
push
or
je
es
sub
clc
cmp
jecxz
stc
adc
or
insl
enter
pop
jns
clc
push
bound
mov
outsb
add
pushf
mov
scas
enter
scas
dec
pushf
jmp
lret
stc
test
sub
bnd
iret
mov
outsl
stc
arpl
and
arpl
jmp
jg
xchg
clc
lea
test
fisttpll
in
xchg
dec
sub
sub
enter
adc
add
into
push
cmp
mov
rorb
in
in
call
jno
add
outsb
mov
adc
stc
cmpsb
les
lcall
pushf
fnstenv
and
mov
pop
push
ds
xchg
aas
mov
repz
mov
mov
adc
mov
clc
dec
outsb
fldt
jne
pop
stos
jo
mov
cmp
mov
leave
or
push
adcl
jns
mov
loopne
int
js
punpcklbw
call
cmp
in
imulb
adc
sub
dec
push
outsl
jne
xchg
call
cli
sub
pop
dec
jb
fwait
mov
cltd
lock
sti
sub
xor
sbb
call
lcall
jmp
sub
stos
add
das
mov
or
xchg
insl
mov
imul
ds
in
sub
ss
out
push
pop
pop
outsb
dec
loopne
outsl
in
pusha
mov
out
fs
loopne
outsb
ret
xchg
jo
loopne
jmp
push
xchg
dec
insl
dec
call
sub
insb
loopne
jecxz
sbb
pusha
loope
pop
sub
sahf
loopne
ljmp
call
jmp
dec
imul
pusha
hlt
hlt
or
out
jb
dec
loopne
jo
test
dec
nop
outsl
out
imul
shlb
dec
adc
js
jns
pop
add
dec
repz
cmc
xor
mov
in
add
outsl
repz
jecxz
into
mov
loop
out
sub
rorb
out
fs
out
enter
jmp
or
dec
mov
sbb
movsl
stc
ja
enter
inc
add
push
test
jp
es
jg
mov
inc
jecxz
and
cmp
test
xchg
sbb
popa
fs
arpl
sti
xchg
call
ficoml
sub
mov
sub
out
xchg
dec
scas
int
add
add
sub
sbb
inc
mov
adc
je
icebp
xchg
sub
xchg
jns
xchg
sub
adc
adc
mov
imul
pop
imul
aam
js
sub
mov
je
inc
int3
or
jp
mov
std
mov
scas
repz
mov
clc
outsl
fisubrs
call
pop
mov
pop
fldcw
inc
fwait
das
sar
mov
test
xor
or
call
gs
xor
add
cli
mov
loopne
dec
scas
jp
je
xchg
xchg
cli
outsb
loopne
mov
js
fs
call
mov
jp
mov
incl
jg
ja
pusha
jl
je
or
cmp
dec
movb
orl
xor
jne
mov
call
or
mov
mov
jge
xchg
mov
pushf
enter
iret
test
mov
hlt
lret
inc
fstpt
in
sahf
cs
dec
das
inc
sti
mov
jl
inc
aaa
xor
shl
dec
inc
push
scas
fidivrs
push
sbb
dec
std
lea
push
cmc
leave
sbb
jo
push
inc
adc
cmp
xchg
jp
jnp
scas
dec
out
je
stos
call
pop
xchg
stc
mov
pop
pusha
pop
pusha
push
fstps
dec
imul
mov
js
pop
sub
pop
and
lea
sub
push
mov
cmp
cmp
cli
popa
das
mov
les
lds
mov
or
loope
cmp
stos
sub
dec
popa
in
xchg
data16
mov
outsl
addr16
je
ja
and
inc
sti
mov
pop
inc
mov
arpl
shr
and
push
out
xlat
cld
out
adc
push
mov
sub
enter
add
mov
jecxz
or
js
ret
or
sub
cmp
stos
es
loope
arpl
loop
push
inc
adc
adc
outsb
pmaxsw
and
outsl
enter
pop
mov
cmpsb
inc
in
bound
outsl
or
cmpb
out
adc
adc
mov
inc
ficoms
jecxz
enter
ljmp
mov
adc
movl
lods
out
mov
out
insb
into
add
jo
daa
in
push
cmp
lret
add
or
cmpsb
and
add
in
inc
or
mov
cmpsb
ja
inc
mov
xchg
repz
test
jge
sub
add
andl
das
subl
push
das
pop
iret
int
test
jmp
cmp
es
mov
mov
mov
xchg
scas
jecxz
loop
outsb
movsb
stos
arpl
pop
arpl
jno
xchg
push
loope
fistpl
dec
mov
je
faddl
out
fdivr
cwtl
push
cltd
repz
xchg
jne
xor
push
and
jns
cmc
dec
jle
mov
mov
faddl
jns
ja
shl
jno
fs
ret
inc
loop
sub
xor
test
enter
imul
inc
adc
loopne
test
pop
dec
repnz
push
ffreep
mov
mov
adc
scas
or
loop
icebp
pop
push
cmp
loope
xchg
jo
repnz
icebp
or
das
push
jle
int3
mov
sbb
pop
in
push
out
and
fs
jp
mov
pop
in
xor
loopne
dec
pop
mov
xchg
adc
mov
je
ds
dec
jo
std
jmp
sub
sbb
mov
pop
lock
pop
push
pop
add
inc
jl
call
sbb
dec
adc
cmp
adc
dec
pop
pop
add
nop
mov
das
pushf
stos
inc
lret
inc
mov
sub
aam
add
mov
adc
sbb
pcmpeqw
sub
call
jbe
sbb
xchg
push
pop
shlb
or
repz
jge
cli
ds
cltd
inc
daa
xor
mov
fwait
add
ja
lods
loopne
mov
sti
xor
mov
leave
fadds
cli
lock
std
dec
outsl
loopne
sbb
in
loopne
jle
add
push
or
movsl
pop
mov
cld
lock
xor
fistpl
sub
push
addr16
dec
fucom
inc
sub
mov
ja
sub
sbb
dec
mov
or
sbb
fmuls
or
ja
in
lock
js
jl
xchg
jns
loopne
popf
test
mov
clc
jp
out
js
in
mov
stc
push
sub
dec
js
jmp
roll
lcall
dec
imul
out
rcrb
jmp
push
in
push
jbe
cltd
clc
stos
sub
xchg
inc
aaa
aas
jl
out
bswap
fs
sbb
incl
mov
push
dec
imul
and
pop
into
enter
nop
jl
loop
cli
decl
clc
sub
adc
inc
mov
mov
xchg
pop
pusha
jns
push
ret
xchg
add
push
push
je
sbb
js
fsubs
outsl
clc
jns
loopne
ret
dec
adc
mov
lret
ret
orb
xchg
or
mov
std
fstpt
clc
imul
ror
aad
xor
cmp
rolb
mull
and
sub
fdivrs
ljmp
sarb
addr16
pop
cmc
lods
cmpsl
and
jmp
cmp
xor
mov
inc
xchg
and
je
pop
and
lods
arpl
or
jo
je
add
imul
lcall
adcb
unpcklps
adc
xchg
add
or
out
xor
aad
xor
popa
jo
shl
adc
add
mov
push
sbb
repnz
call
mov
adc
or
ljmp
dec
mov
jle
jge
adc
bound
push
call
lock
dec
xchg
daa
enter
xorl
shrl
cmp
jl
cmp
out
rcrb
jae
jmp
sub
loope
ss
or
mov
lock
popa
or
adc
insl
or
jl
js
inc
enter
mov
lock
outsl
adc
out
inc
outsb
bswap
mov
icebp
popa
loop
sub
inc
xchg
jbe
jne
gs
out
adc
mov
ja
stos
lds
test
and
sbbl
jge
pop
mov
cmp
out
mov
adc
test
cmpsb
xchg
pop
pop
insb
xchg
ficoml
pop
enter
jl
test
nop
sbb
imul
adc
je
fisttps
icebp
lock
stc
cmp
js
inc
enter
or
push
shld
inc
outsl
or
loope
adc
sub
test
subb
cwtl
int
pop
inc
inc
sub
leave
jae
out
jge
cs
je
jnp
sub
dec
pop
imul
dec
sub
in
scas
loopne
push
inc
dec
out
push
loopne
iret
push
mov
out
mov
push
mov
test
sbb
xorl
jp
pop
mov
lret
dec
push
mov
lcall
lret
or
mov
adc
inc
mov
inc
inc
imull
in
inc
outsb
xor
enter
pop
imul
inc
jnp
dec
int
lcall
dec
in
push
xchg
scas
outsl
fcom
cmp
cltd
mov
xor
pushf
scas
or
insl
mov
je
adc
mov
dec
pop
cmp
enter
insb
lea
add
pop
jmp
mull
daa
dec
pop
sti
inc
fs
addl
dec
out
arpl
jl
outsl
rclb
jp
subb
movl
out
imul
sub
imul
loopne
pushf
loope
clc
jmp
inc
aad
jno
xor
sbb
push
push
fsubr
dec
insl
push
and
push
sbb
lods
xchg
or
sub
out
in
out
xor
in
orl
add
insb
int3
out
pop
imul
insb
sub
xchg
push
clc
loopne
out
je
shll
push
rolb
jmp
fcompl
sub
cmp
shll
inc
inc
scas
out
sbb
repz
fsubrl
push
call
or
xchg
sub
jg
push
or
dec
imul
ja
insb
jge
pop
outsl
jne
xchg
jbe
dec
movsb
jmp
dec
out
jo
fadds
jo
loop
mov
in
in
insb
mov
jo
repnz
idivb
adc
in
jbe
jns
sahf
sbb
mov
sub
shl
xor
jb
adc
inc
cmp
xchg
ret
cs
inc
outsl
jo
cmp
hlt
inc
pop
icebp
xchg
movsl
je
jge
cmp
fistps
inc
dec
adc
icebp
adc
and
call
cwtl
scas
repz
imull
outsl
xor
insl
test
pushf
inc
dec
fisubrs
outsl
mov
mov
dec
inc
repz
xchg
jo
subl
scas
add
mov
std
mov
jecxz
addr16
xor
add
jmp
lahf
popf
adc
in
clc
icebp
hlt
clc
mov
sub
mov
sub
dec
mov
mov
loope
xchg
xchg
jmp
lret
ja
mov
sub
dec
sar
xor
je
bound
xchg
into
cld
jno
add
push
pop
and
inc
stos
jp
mov
clc
push
jl
mov
pop
push
mov
and
inc
jo
mov
fisttpll
adc
out
sub
outsl
ja
int3
cmp
icebp
imul
jl
sbb
ret
mov
inc
dec
and
enter
das
es
das
aas
ds
ret
aam
xchg
pop
mov
ficomps
cli
leave
mov
and
fsts
cltd
movsl
add
dec
adc
loop
xor
outsl
jae
pusha
insl
sub
jne
cmc
push
or
mov
cmc
push
sub
pushf
adc
pop
in
clc
jb
int
das
aad
test
das
jmp
push
sbb
cmc
inc
fdivr
mov
adc
cmp
daa
xor
and
scas
daa
emms
sub
loope
mov
in
inc
scas
pop
and
cs
subl
aas
inc
daa
ljmp
sub
xor
pusha
aaa
mov
xchg
push
mov
dec
mov
lret
test
mov
dec
mov
mov
outsl
push
or
in
inc
jge
movsb
or
jmp
out
stc
jp
sub
lret
inc
jecxz
scas
push
shll
addr16
loopne
icebp
adc
pop
mov
inc
outsb
divb
call
inc
enter
add
in
imul
sbb
enter
das
sub
ficoms
mov
popf
je
sub
dec
negl
dec
add
addl
and
pusha
jle
mov
insl
and
and
loope
pop
pusha
xor
mov
push
lods
daa
das
sub
xor
adc
and
adc
aad
inc
int
push
sub
out
jae
in
or
lods
xor
push
stos
xor
test
mov
add
cltd
lcall
sbb
xor
loopne
dec
mov
cld
dec
jae
mov
push
adc
add
arpl
xor
out
idivb
sub
pmaddwd
lods
sub
outsl
test
mov
scas
or
pop
sbb
js
out
dec
loopne
imul
outsb
sub
jne
jge
je
std
cmp
fsubl
pop
aas
inc
dec
mov
sub
push
xchg
mov
call
out
sbb
bound
jp
pusha
int
jo
and
push
daa
addr16
lock
mov
pusha
js
sbb
pmaddwd
or
imull
dec
sub
cmc
push
sub
aad
pusha
pop
cmp
fisubrl
int
xchg
mov
outsb
stc
sub
sarl
jne
pop
and
aas
fidivrs
mov
xchg
mov
ret
dec
call
xor
jo
sub
add
outsl
ret
xchg
scas
outsl
cmc
inc
cmp
outsb
cltd
pop
pop
xor
sub
lods
sub
dec
stc
jg
loopne
test
sahf
sub
mov
dec
daa
mov
loop
leave
and
jmp
packssdw
inc
pop
out
or
inc
scas
cld
lods
or
loopne
ljmp
xor
rorb
icebp
arpl
sub
pmaddwd
or
imul
arpl
and
mov
shrb
repz
aas
xchg
push
jmp
mov
dec
jmp
mov
cmp
pop
lret
xor
pusha
mov
cs
out
xor
insb
testb
shll
scas
jp
testb
js
sub
mov
cmc
push
sub
popf
call
andb
call
jo
mov
jmp
jbe
fldl
arpl
pop
add
jecxz
call
dec
or
sub
clc
xchg
loop
test
out
dec
call
addr16
push
cmp
outsl
aaa
pop
fldln2
push
mov
and
mov
aad
int3
push
mov
and
mov
hlt
aam
out
cltd
ret
cld
scas
add
lret
jbe
sahf
sub
lahf
xchg
je
sub
mov
loopne
loop
and
xchg
insb
jp
inc
and
mov
mov
clc
dec
hlt
lahf
movb
test
insb
shrl
mov
int
inc
mov
adc
ret
sub
jno
add
xor
push
loope
in
loopne
idivb
cmp
mov
inc
mov
add
loopne
mov
inc
sbb
inc
pop
jae
aaa
mov
rcrl
pusha
imul
fsubrl
pop
add
lods
rcrl
mov
orl
jmp
mov
add
ret
shr
divb
dec
pop
jp
out
stos
jecxz
lods
sub
mov
fstl
lock
push
fwait
sub
inc
dec
in
mov
sub
ret
lret
jecxz
mov
outsl
loopne
or
stc
push
jge
dec
sbb
jecxz
jns
cli
std
mov
leave
jo
mov
sti
cmp
clc
sub
testb
cmp
sub
cli
jo
std
xchg
sub
inc
rep
or
jecxz
cld
jo
std
xchg
jl
dec
sub
mov
mov
in
sub
or
add
bound
mov
pop
sub
subl
sub
popa
aas
push
loopne
xor
fbstp
fbld
test
mov
outsl
in
jg
not
lods
sub
xor
decb
push
inc
decl
and
mov
ds
mov
adc
inc
aas
jmp
mov
or
fs
and
fiadds
pop
jg
dec
sbb
sahf
repz
into
stc
enter
stos
mov
and
popa
jo
xchg
pop
pushl
adcb
add
dec
scas
iret
mov
imul
arpl
dec
out
outsl
push
xchg
or
hlt
pop
push
add
enter
out
pusha
out
gs
jae
mov
mov
mov
jne
je
or
ret
jns
sub
out
xor
cmp
fs
cmpsl
in
test
jp
jg
in
fisubrs
cmpsl
stc
testb
into
call
loope
fs
cmp
lretw
cmp
xchg
int
sub
sahf
dec
dec
scas
orb
push
popa
dec
mov
push
call
push
jno
cmpsl
xchg
daa
pop
out
cmpsb
xchg
es
push
out
in
out
sub
mov
cmp
dec
mov
cmp
and
stc
cmp
xlat
xor
or
packuswb
insl
xor
scas
jae
mov
inc
lods
or
ss
popf
movsl
cwtl
pop
push
cmc
mov
xchg
xchg
ljmp
in
call
imul
out
pop
ficompl
out
pop
pop
adc
inc
subl
jmp
or
mov
js
lock
mul
repz
in
mov
out
mov
aad
ficompl
sub
pop
fsub
push
pop
rcll
xor
jae
addr16
es
xchg
pop
cmp
aam
cld
std
stos
adc
das
imul
ljmp
inc
incl
js
dec
mov
mov
adc
loope
movsb
push
lea
jb
lock
ret
jo
dec
lret
dec
out
das
jbe
inc
je
daa
addr16
push
mov
sbb
lcall
adc
xor
scas
outsl
mov
push
push
outsl
popa
shlb
popa
cmp
xchg
push
fsubrs
xor
mov
repnz
xchg
sub
mov
dec
cmp
and
xchg
movsb
mov
cmp
xchg
jge
out
je
repz
pop
sub
lods
call
pop
jmp
xor
dec
lret
and
ffree
hlt
sub
clc
mov
mov
pop
sub
adc
pop
cmpsl
stos
repnz
fidivl
loopne
push
cwtl
cmp
scas
jbe
scas
sbb
inc
popf
test
test
notb
sub
nop
loope
mov
pop
xor
jecxz
sub
fstl
lcall
outsl
cmpsl
or
fadds
adc
mov
sbb
push
das
jne
insl
cmp
pop
jmp
sbb
dec
out
jae
pop
lock
je
shll
insl
clc
pop
imul
mov
iret
outsb
adc
xor
ret
pop
inc
in
and
cltd
cmc
sti
or
add
ret
mov
dec
jae
push
mov
dec
in
mov
push
cmc
in
ficoms
jmp
idiv
mov
and
jb
xchg
mov
lods
sub
push
in
mov
pusha
inc
add
out
in
push
out
lods
test
xchg
repz
jmp
pusha
push
push
iret
int
pop
es
out
sub
xlat
lahf
pusha
not
push
mov
push
jne
xor
jo
insb
add
add
fcompl
inc
push
fidivs
lods
push
jg
stos
xor
push
sub
mov
lret
mov
subb
les
dec
nop
mov
push
out
hlt
out
mov
inc
ret
shll
sub
insl
rcrl
xor
dec
mov
add
push
mov
popf
addr16
das
ret
xchg
je
dec
inc
mov
in
fdivs
inc
sbb
add
push
push
push
cmc
dec
repz
insl
jnp
push
js
push
push
push
mov
outsl
cltd
clc
xor
sub
ljmp
fnstcw
ljmp
or
int3
xor
les
cmp
inc
in
arpl
clc
jae
mov
loop
popa
add
pop
clc
addb
aam
shlb
inc
mov
pop
sub
js
jcxz
inc
jae
dec
outsl
call
pop
in
stos
call
fs
jl
das
ss
das
pop
inc
add
push
ret
loope
out
jecxz
mov
test
inc
xor
dec
jo
push
les
lock
fcompl
imul
add
loope
mov
popa
pop
mov
in
xor
mov
xchg
xchg
add
push
out
int3
aad
dec
into
dec
ss
stos
push
inc
hlt
pop
add
cs
out
daa
xor
lcall
cmp
xchg
push
dec
jbe
fwait
push
or
cwtl
or
cmp
lock
adc
jmp
cld
xchg
mov
nop
out
popa
ss
jo
popa
jp
popa
js
sahf
loope
dec
call
or
ja
in
inc
dec
arpl
push
dec
dec
shlb
out
push
add
push
push
rcr
out
mov
outsl
sarl
push
andb
sbb
sub
adc
and
push
mov
dec
add
loop
inc
add
out
daa
fnstsw
in
inc
ja
cmp
jle
jns
dec
outsl
mov
inc
popa
je
fs
aam
imul
pop
jb
mov
xor
dec
je
cmp
data16
hlt
adc
or
jmp
xor
shl
ret
jnp
push
mov
jb
outsb
pop
in
addr16
hlt
repnz
ror
mov
xchg
dec
cld
mov
inc
iret
add
inc
shl
mov
pop
in
mov
lcall
rcrb
xor
ret
popa
jl
bound
ret
test
jo
jb
ffreep
hlt
fwait
aas
cmp
pushl
sarb
hlt
mov
mov
nop
jp
aas
imul
or
xchg
daa
jmp
movsl
pushf
das
inc
outsl
push
insb
js
and
add
or
cmp
imul
js
inc
bswap
lret
lcall
daa
sbb
loopne
mov
leave
stos
push
ret
or
clc
jno
scas
je
pop
jecxz
int
jnp
daa
daa
mov
arpl
outsb
lret
loop
mov
ljmp
fnstsw
mov
inc
stc
sub
jp
data16
cmpsb
sbb
outsb
dec
pop
xor
cmp
repz
inc
adc
scas
inc
dec
cwtl
in
cmp
std
mov
push
pushf
push
xchg
dec
test
fucomi
enter
ja
scas
mov
outsl
iret
push
cmp
gs
popf
pop
xor
mov
push
cmpsb
orl
es
lods
ss
sub
test
daa
or
enter
jmp
icebp
call
xchg
sub
cmpl
add
pop
jecxz
int
call
cwtl
xlat
lds
fstl
inc
jne
rcl
mov
movsb
push
dec
xchg
push
movsb
rorb
push
call
cmp
je
shr
movsb
call
push
sub
sbb
das
jnp
fnstenv
inc
jns
fwait
loopne
out
mul
enter
pop
lds
or
add
xchg
pop
arpl
fldenv
in
push
mov
fwait
push
fcomp
mul
jbe
test
jo
xlat
jb
xchg
in
sub
shr
lret
daa
xchg
insb
in
ja
push
clc
xor
cmpl
aaa
pop
out
mov
jno
jp
pop
push
push
inc
adcb
sub
sbb
or
addr16
es
sbb
cltd
cmp
push
ds
outsb
cmc
dec
insl
bound
insl
ret
repz
jnp
loopne
dec
adc
dec
hlt
mov
xchg
jl
add
scas
ljmp
leave
insl
imul
push
enter
xchg
insl
ss
insb
dec
cmp
test
ret
mov
imul
adc
popa
adc
pop
test
mov
sub
lock
loopne
jne
jg
mov
dec
dec
shr
das
adc
add
sub
test
jmp
clc
xor
xor
in
xor
ficoml
div
jmp
push
jbe
mov
ret
or
outsl
lods
xchg
sub
int3
jae
mov
pop
or
push
push
outsb
cli
incl
pop
jmp
sub
addr16
cmpsb
ret
fldcw
dec
or
mov
lcall
ret
xor
stc
jmp
js
dec
out
repnz
bound
jne
mov
int
orb
lcall
push
loop
test
dec
xchg
xchg
jecxz
push
and
lea
mov
js
dec
mov
mov
sbb
in
ja
loop
sub
div
pop
in
popf
fwait
orl
rep
int3
and
pop
movsl
jle
and
cmp
jmp
clc
pop
shlb
rcr
pusha
and
pusha
clc
xchg
cmp
sub
jp
sti
xchg
bound
pop
enter
loopne
loop
insl
mulb
jle
out
sbbb
xchg
fchs
push
mov
daa
imul
jl
adc
or
cmpsl
add
outsl
and
adc
push
movntps
dec
mov
mov
pop
cmp
lock
or
and
xor
mov
dec
mov
xchg
out
push
loopne
out
add
daa
xor
int3
mov
int
in
cmc
outsb
addb
stos
repnz
punpcklwd
lock
andb
ror
xchg
or
aam
inc
fsts
or
insl
pop
je
sub
dec
leave
jo
mov
fld1
adc
add
cmpsl
iret
jb
clc
ret
add
add
mov
jp
popf
jnp
and
pop
fnsave
jne
mov
and
inc
jbe
xchg
out
sub
push
es
add
aad
and
cmp
sbb
js
xorl
dec
fisttpll
outsl
inc
lcall
jle
mov
das
test
pop
insl
or
fidivrs
sbb
test
iret
xor
jo
pop
add
jo
rcrb
push
lret
cmp
add
jl
sub
dec
mov
inc
xor
push
xor
jo
sub
dec
cmc
jo
cltd
inc
jbe
fcomps
bnd
loopne
fnsave
clc
cmpsb
dec
stc
adc
bound
adc
fadd
inc
mov
xor
arpl
out
pusha
cwtl
rolb
outsl
imul
pcmpeqb
inc
fisttpl
ret
scas
and
testb
xchg
ficoml
ja
out
loop
pushf
and
scas
fs
les
outsl
add
mov
jo
out
push
js
dec
push
repnz
clc
dec
lods
shl
xor
dec
divl
dec
push
xchg
jle
outsl
out
movsb
xor
xor
cmp
jae
dec
aad
or
mov
push
jg
push
bound
insl
adc
jg
aaa
fdivrp
and
add
adc
loop
mov
shll
jo
clc
jecxz
pop
les
shl
cmp
pusha
mov
jne
je,pt
dec
cs
xor
fdivrs
cmc
dec
outsl
jp
dec
pop
xchg
bnd
outsb
or
pop
stc
iret
je
in
or
adc
ljmp
pop
dec
xchg
pshufw
cli
push
imul
push
in
movsb
jl
outsl
sarb
shlb
je
addl
dec
sbb
sarb
cld
fisubrl
mov
pusha
outsl
and
in
decb
dec
iret
je
and
dec
xchg
js
call
jg
repz
dec
jae
jo
cmp
das
xor
loopne
ret
sub
sbb
std
call
pop
mov
or
dec
popf
out
popa
loopne
jo
popa
call
fidivrl
loope
jl
inc
in
sub
dec
sti
outsl
stos
js
call
sub
movq
iret
push
arpl
loopne
jae
sub
or
outsb
call
icebp
jecxz
loopne
stc
dec
cmp
in
outsl
push
in
jns
or
cmp
clc
jo
mov
in
sub
data16
vmread
imull
out
fistpll
pusha
ja
adc
addr16
fistpll
pusha
imul
jbe
out
scas
push
dec
out
jbe
push
push
js
call
adc
add
sub
imul
fsubr
pushf
mov
std
add
jmp
setne
imul
inc
jmp
mov
fsubrs
sarl
dec
imul
and
ljmp
jnp
jns
imul
or
daa
popf
int
cmp
in
fisttps
insb
fistpl
loope
pop
add
je
add
inc
pop
test
int
fcoml
outsb
or
adc
jo
int3
in
sub
push
or
push
cli
sub
loopne
out
or
repz
stc
out
outsl
loopne
dec
js
call
loop
outsl
jmp
loope
roll
mov
das
jo
sbb
fisubrs
lods
out
repz
dec
cmp
aaa
shlb
or
xor
mov
lock
xchg
jge
in
inc
icebp
push
pop
dec
in
lret
je
cmc
inc
dec
lret
jo
inc
fisubrs
dec
fwait
jecxz
insl
outsb
add
out
jb
mov
mov
int3
xor
inc
jne
mov
cmp
jo
enter
add
and
testl
sub
insb
pop
into
adc
data16
sar
or
mov
or
push
enter
arpl
orb
in
pusha
adc
sbb
sub
jg
clc
xchg
lds
add
jg
adc
and
outsl
pop
repnz
dec
xor
or
jmp
or
loop
outsb
sti
cmp
out
dec
jae
sub
sub
outsl
jne
push
sub
dec
sbb
add
outsl
imul
cltd
jb
add
pop
lds
int3
push
shlb
adc
sub
sbb
add
mov
jne
jecxz
insl
fnstcw
out
push
pusha
inc
jp
add
movsb
dec
and
in
pop
into
push
subb
call
insl
std
and
stos
js
notb
iret
das
into
popa
loopne
ret
jl
push
jo
scas
cld
push
mov
gs
lds
pushl
out
mov
in
add
mov
ret
scas
sub
sub
xor
jmp
andl
lods
sub
sahf
fnstcw
xchg
addr16
stc
mov
xchg
sub
outsl
leave
adc
subb
andl
dec
cli
out
movsl
leave
push
clc
mov
int
sahf
mov
aam
cmp
jnp
clc
dec
arpl
push
push
out
cmp
pop
stos
jo
ljmp
xor
push
xor
sub
and
out
xchg
adc
jle
mov
shr
aaa
jp
fs
cmp
out
or
xchg
les
inc
insl
in
mov
jo
into
push
leave
mov
out
cmp
adc
jmp
cmpsb
push
fildl
mov
cltd
test
scas
outsl
mov
aad
loopne
scas
dec
jge
and
leave
fidivrs
shrb
shrl
adc
test
je
sub
aas
sub
dec
rcrb
movsl
rorl
add
in
hlt
xchg
das
xchg
insb
outsl
and
in
cltd
aam
stos
dec
test
inc
mov
inc
hlt
or
add
fisttps
jmp
iret
xchg
pop
jg
pusha
jp
fisubrs
lcall
frstor
dec
loopne
out
popa
loopne
mov
lods
and
es
loop
sahf
popa
out
pop
jae
xchg
xorl
add
mov
enter
insl
push
ret
sub
mov
dec
in
mov
sub
js
and
dec
in
jnp
xor
and
and
add
inc
rorb
into
jecxz
sub
out
into
outsl
pop
js
call
outsb
data16
push
das
sub
or
stos
mov
in
fdivs
jle
outsl
repz
and
bound
addr16
or
subl
ljmp
push
mov
adc
push
cmp
negl
sub
dec
addr16
es
je
bound
dec
out
and
out
insl
sti
das
and
xchg
cmpsb
mov
int3
in
in
cmp
sub
lock
mov
xchg
mov
in
dec
rolb
mov
dec
test
call
cli
jmp
scas
cmp
mov
cmovbe
dec
lahf
pop
shr
dec
and
dec
add
xchg
mov
mov
mov
loopne
insl
addr16
adc
call
rcll
ret
inc
push
sub
insb
ret
mov
loopne
insb
stc
cmp
cmpsb
adc
sub
jb
mov
pop
icebp
or
dec
jbe
adc
and
loope
pusha
out
sarl
dec
loope
dec
mov
ds
cltd
std
pop
subl
dec
jecxz
mov
sbb
jno
sarb
enter
pusha
cs
movsl
sbb
fbstp
and
jg
loopne
movsl
sub
movsb
loopne
jle
pop
je
push
sbb
xchg
dec
cmp
sub
xchg
cmpsb
jae
fisubrl
loopne
movsl
repz
fdivrl
sti
xchg
outsl
or
into
jo
mov
push
adcl
rcrb
sahf
outsl
jge
lock
dec
imul
push
andl
into
xchg
les
push
cwtl
xchg
mov
cmp
fcmovu
sbb
jno
cltd
mov
stc
mov
cmp
dec
int
insl
and
cwtl
adc
sbb
int
fdivs
xlat
sti
aaa
sbb
ja
out
cmpsb
enter
aaa
push
mov
mov
adc
lods
jbe
cwtl
jo
scas
cmp
aaa
cmp
and
nop
jmp
outsb
fmuls
inc
jmp
movsl
mov
xor
ficompl
ja
xchg
mov
sahf
inc
repnz
repnz
aam
mov
sbb
or
mov
ljmp
xchg
pop
mov
sarb
call
cmp
test
mov
fdivs
pushf
add
imul
and
mov
shrb
jl
outsl
jl
push
push
loopne
jp
mov
insb
loop
mov
jae
jo
and
xchg
test
addr16
dec
mov
fnsave
pop
mov
push
adc
push
loop
inc
out
push
jecxz
movb
adc
xor
imul
dec
xor
push
movsb
jae
outsl
inc
pop
fdivs
sub
or
fs
or
cmp
insb
jp
inc
insb
dec
inc
dec
daa
mov
sub
dec
adc
subl
dec
popa
jo
mov
dec
mov
outsl
or
call
cli
dec
sti
dec
clc
dec
push
cmp
dec
pusha
lds
daa
push
lock
out
outsl
ret
cmp
out
sub
jb
cmpsl
out
daa
lock
insl
test
dec
pop
stos
pop
jmp
lea
js
mov
sub
shr
push
repnz
outsl
mov
aas
iret
or
dec
gs
imul
pop
mov
jo
jno
outsl
cmp
stc
cmp
inc
and
add
push
and
mov
push
ret
and
push
insl
inc
loope
rcrb
loop
test
int
xchg
mov
test
sbb
mov
ja
mov
std
push
gs
pushf
test
movsb
xorl
xchg
cmc
adc
ficoml
mov
xor
xchg
dec
lret
in
jnp
mov
xor
cltd
pop
out
testb
outsl
dec
popa
pop
jne
bnd
push
adc
insl
push
fdivrl
setno
das
pop
repnz
inc
jmp
je
in
loope
imul
into
std
loopne
test
add
mov
addr16
push
pusha
ljmp
into
clc
mov
dec
outsb
dec
andl
mov
in
adc
mov
hlt
adc
mov
mov
addr16
mov
mov
adc
push
dec
or
or
out
jb
out
dec
loopne
mov
lea
adcl
sti
repnz
andl
mov
sub
jl
aam
push
push
stos
das
jae
fdivp
xchg
call
sub
das
into
xor
out
loop
iret
pop
or
into
mov
lcall
adc
mov
das
cs
jnp
and
inc
ret
cwtl
cmp
jnp
shll
pop
mul
sub
jae
idiv
lods
pusha
xchg
pop
js
xor
enter
mov
mov
das
pop
imulb
jo
rorb
test
fbld
push
push
insl
and
lret
mov
push
sar
in
loope
jp
test
out
lods
inc
dec
out
adc
jbe
ficomps
into
fistl
inc
and
lret
jbe
in
mov
mov
adc
dec
jb
sub
dec
stos
add
and
and
mov
js
mov
stos
xchg
sub
into
shrl
pusha
js
inc
pushl
mov
sbb
loop
sub
js
inc
ret
cld
popf
adc
imul
sti
arpl
jae
decl
sahf
xchg
outsb
lds
shlb
dec
popf
sub
les
fs
sahf
int
loopne
lret
enter
mov
nop
add
lahf
cmc
ret
ja
stc
loopne
fs
lret
jne
pop
add
sbb
cmp
bound
shll
cld
adc
cmp
jns
jb
dec
or
repnz
mov
cmp
xchg
outsl
xor
jns
nop
mov
pop
lods
xor
or
andl
scas
out
data16
mov
sbb
inc
inc
add
jmp
pop
scas
je
lods
mov
dec
add
jge,pn
and
fsubr
pop
push
movsb
addr16
xchg
pop
insl
and
xor
pusha
std
gs
push
js
jge
cmc
imul
hlt
add
sbb
ret
add
push
push
or
pop
imul
test
insl
inc
cmp
pop
xor
push
mov
nop
cli
jnp
ss
stos
out
push
add
js
repz
idiv
mov
mov
lods
mov
fdivrs
push
incb
in
lcall
inc
mov
rcl
orl
mov
dec
lret
pop
lret
jnp
adc
lret
jb
pop
imul
sub
test
cmp
pusha
lock
andb
sti
cmovge
repz
popa
movsl
xchg
cmpsb
cmp
pop
mov
fs
inc
cmpsb
gs
orb
ja
xor
out
or
out
lds
pusha
sub
imul
lcall
sbb
cmp
jle
jmp
mov
pop
daa
add
lahf
push
lea
out
dec
frstor
inc
outsl
mov
jae
xor
mov
xor
imul
and
icebp
pushf
aam
or
and
lds
sub
jae
int3
outsl
pop
xchg
adc
jle
pop
sub
add
xchg
mov
loope
jle
and
shlb
inc
inc
mov
sarb
inc
out
sub
out
in
shl
mov
jecxz
lahf
aaa
mov
pop
pop
inc
and
cmp
jg
adc
pusha
test
call
in
dec
mov
ss
insb
and
outsl
xor
pop
jo
outsl
lret
mov
dec
sbb
in
dec
int
jo
lock
or
imul
push
pop
aam
outsl
lods
add
jp
adc
lock
incb
inc
or
test
dec
cltd
inc
loopne
cmpsl
add
clc
dec
fldcw
pop
loopne,pn
rorb
mul
dec
je
out
daa
mov
add
outsl
aas
push
cmp
xchg
push
push
outsb
cs
or
fcomps
sub
iret
call
xor
dec
out
cmp
das
mov
push
jbe
fs
imul
dec
jb
or
hlt
adcl
insb
mov
repnz
xchg
sub
jbe
push
and
and
cltd
mov
gs
xlat
orb
int
or
and
lods
ljmp
adcl
mov
mov
cld
lret
mov
cltd
xlat
xchg
cmp
inc
std
and
and
xchg
xor
jge
dec
into
mov
sti
popf
dec
add
inc
push
mov
inc
xor
mov
cmp
jo
out
jl
adc
xchg
push
mov
enter
addr16
xor
ds
cmp
sub
xchg
insb
fnsave
js
jnp
add
sub
out
aaa
jmp
call
push
sarb
stc
scas
sub
in
sub
leave
out
jp
inc
loope
movsb
add
cli
adcb
ds
aam
jecxz
loope
adc
fnsave
lret
pop
jge
sub
xor
sub
sub
lcall
je
or
xchg
fdivrs
jl
or
mov
pop
shll
cmp
inc
das
inc
adc
scas
popa
icebp
insl
sahf
aaa
lahf
push
xor
inc
dec
xchg
pop
and
movsb
leave
out
insl
out
mov
cltd
xor
lahf
cmpsb
jp
jl
pop
movsl
cmpsl
shrb
outsl
and
fwait
rclb
loope
jo
sti
sti
xor
jne
xchg
clc
or
jo
add
sub
dec
mov
inc
aaa
je
jle
test
jo
int3
cmp
daa
shl
pusha
int3
aam
and
jb
lock
aas
loope
in
mov
imul
test
popf
pop
es
hlt
mov
add
sub
xor
in
imul
shll
sub
test
dec
lahf
mov
push
xchg
adc
or
push
jnp
pop
xchg
dec
call
rorl
setno
enter
cmpsl
cmp
ds
pop
mov
loop
dec
mov
pop
sbb
shlb
mov
clc
push
cmc
sbb
ss
xor
sbb
xor
ja
aaa
pop
sbb
scas
js
ret
mov
js
ja
and
xor
xor
push
mov
xchg
mov
pop
mov
sbb
sti
cmp
notb
jmp
insb
jnp
jns
shll
popa
mov
cld
mov
loop
addr16
fdivr
pop
rcrb
addr16
nop
xor
lret
dec
icebp
jo
testl
divl
imull
mov
loopne
test
movsl
cmp
pop
lahf
adc
cmpsl
fstpl
cmp
scas
out
pop
orl
mov
clc
jg
das
sbb
aad
das
jne
dec
loope
mov
ret
fiaddl
pop
loope
inc
je
hlt
cmp
jle
fwait
test
shl
outsb
xchg
insb
outsb
fs
aaa
and
add
and
dec
fcomps
hlt
xchg
rcrl
bound
mov
inc
shl
repnz
mov
jae
sub
or
or
dec
cmc
and
mov
scas
sub
int3
sub
jg
das
xchg
shrl
jae
mov
mov
lcall
xchg
ret
jo
pusha
fimuls
fs
pop
or
data16
incl
cmp
sub
out
dec
xchg
jmp
stos
sahf
add
lods
imull
das
in
pop
lods
dec
sub
das
cmp
cmp
test
inc
xchg
out
cwtl
or
rcl
bound
lods
test
das
les
fcoms
test
dec
mov
je
sub
xchg
fs
dec
adc
mov
or
dec
scas
lahf
jae
rcl
lahf
lock
rcl
bound
mov
clc
mov
sub
pop
or
out
ret
inc
mov
or
jnp
sub
sti
dec
or
in
insb
sbb
sub
in
inc
out
push
xchg
jmp
out
lret
mov
lods
addr16
or
jl
subl
jbe
int3
fldl
cmpsl
mov
shrl
adc
in
test
das
les
rcrb
jp
test
dec
daa
aas
je
sub
rep
cmp
mov
pop
int3
call
sub
xchg
dec
dec
jae
adc
lahf
lock
adc
bound
pop
sub
pop
movsl
push
out
ret
or
xor
mov
call
mov
mov
mov
jae
lcall
inc
call
out
iret
call
aam
xor
lods
insb
subl
mov
jmp
into
jmp
jp
pop
scas
decl
jae
xor
loope
mov
imulb
cmp
rcrb
imul
lahf
mov
nop
ss
sub
subl
add
push
rcrl
out
daa
shrb
inc
xchg
cmpsl
out
fistpl
or
sub
fs
pop
dec
mov
mov
outsl
pop
lods
pop
xor
dec
or
adc
lcall
call
out
insb
call
aam
int
frstor
xor
ds
fisubrl
call
aam
cmpsl
dec
jp
pop
dec
and
jae
jae
shl
lods
dec
loope
mov
das
cmp
jmp
decl
dec
sbb
sub
mov
inc
dec
sub
and
test
dec
mov
xchg
rcrl
mov
push
rsqrtps
std
jle
lea
clc
es
push
sub
imul
jmp
call
or
lods
icebp
lcall
fwait
call
sub
mov
push
fstp
xor
fisubrl
loope
sub
sub
pop
jl
je
pop
pop
pop
clc
in
and
shlb
push
mov
int3
cltd
fmul
jmp
and
shr
cmp
fdivs
lock
shrl
int3
rcrb
jle
or
jp
and
jp
xor
mov
adc
or
popf
out
imul
mov
loop
dec
das
cmc
mov
into
adc
je
push
pusha
subl
lret
decl
adc
in
mov
imul
mov
fcomp
in
arpl
fcmovne
es
pop
pusha
xchg
adc
inc
iret
mov
sar
adc
or
inc
fldt
dec
add
pop
dec
outsb
lods
xor
pop
stos
out
pop
cli
xchg
hlt
and
int3
inc
pop
jp
into
scas
daa
jns
ficoml
outsb
jmp
cmpsl
loopne
out
je
cmp
pop
or
arpl
aad
ret
dec
gs
cld
mov
jno
xchg
outsl
push
addl
es
sbb
fsubp
lock
mov
jmp
lcall
pop
dec
push
cwtl
out
insb
xorl
call
test
outsb
pusha
test
fbstp
mov
jle
jbe
mov
xorb
jae
imul
adcb
add
push
lret
pop
gs
nop
mov
lret
out
testb
push
andl
call
ret
in
push
outsb
pop
xor
ret
inc
lods
or
orb
sub
jg
add
push
andb
loopne
sub
mov
or
out
cmp
inc
jo
shlb
shlb
inc
cs
lods
sub
stos
pop
js
mov
out
arpl
and
push
adc
adc
lcall
jo
xchg
lcall
mov
add
pushf
out
adc
cs
xchg
dec
jecxz
fucomi
adc
cs
out
xchg
dec
sub
out
adc
nop
out
xchg
imul
rolb
out
shll
jbe
xchg
mov
sar
out
mov
out
shll
fistps
mov
out
shrl
fucomi
mov
out
shrl
jle
lahf
mov
push
cmc
ffreep
out
mov
out
push
cmp
inc
inc
leave
hlt
call
xor
pusha
repz
dec
push
mov
mov
loopne
lret
outsl
or
dec
outsl
dec
dec
jmp
out
pusha
iret
call
insl
jo
call
xchg
dec
imul
ljmp
jo
loopne
cwtl
dec
imul
sub
sbb
dec
imul
push
jle
inc
out
mov
xor
std
or
insb
int3
push
mov
outsb
into
loopne
imul
adc
push
outsb
ljmp
and
jo
mov
cmp
or
movaps
sub
dec
sti
outsl
jb
test
dec
cli
dec
outsl
push
scas
or
and
mov
or
imul
push
or
dec
in
xor
clc
or
arpl
dec
in
push
pop
testl
dec
divl
outsl
push
jb
clc
pop
in
int
in
dec
imul
mov
daa
imull
jl
cld
test
clc
out
mov
gs
dec
pusha
iret
out
mov
dec
imul
inc
pop
dec
insl
insb
inc
adc
sub
dec
negb
call
cmp
out
lock
into
dec
repz
jl
clc
dec
jmp
push
clc
dec
jb
push
pusha
ljmp
outsl
jge
dec
pop
bound
mov
adc
pusha
sub
je
or
in
push
scas
dec
jle
rep
aaa
dec
jb
in
push
xchg
jle
fbld
fs
adc
add
push
movsl
adc
les
in
mov
mov
mov
inc
jb
inc
inc
ja
lcall
in
lahf
pop
daa
cmp
movsl
cld
mov
cld
jnp
sbb
mov
lcall
cmpsl
push
sub
jnp
mov
fnstcw
adc
xchg
xchg
jns
mulb
outsl
icebp
xlat
xor
mov
js
xchg
aad
xor
or
xchg
jle
adc
jbe
pop
mov
mov
aas
jmp
ror
cmc
cmp
sub
test
mov
mov
cmc
add
mov
cmp
clc
cmp
test
movb
pusha
jmp
nop
adc
dec
jns
jmp
ret
sub
lock
mov
sub
xor
or
fisubs
stos
dec
insb
xchg
mov
test
in
sarl
jl
lea
mov
lea
jne
pushf
movw
call
pusha
jmp
cmp
cmp
call
shr
sets
bswap
call
lcall
inc
ljmp
fnstsw
add
repz
ret
sti
pushf
cmpsb
mov
dec
jnp
mov
mov
mov
repnz
outsl
xchg
xchg
pop
sub
mov
mov
mov
pop
aam
jns
movl
cmp
dec
cmp
and
cmp
mov
cmpsl
push
cmp
adc
popf
sub
jb
aaa
aad
pusha
aas
in
sub
and
js
filds
push
mov
mov
je
stos
filds
mov
imul
mov
cltd
mov
sub
pop
int
mov
sahf
mov
daa
test
aad
or
adc
and
xor
jno
add
ss
fisubrl
movl
pushf
jmp
test
pusha
pusha
shr
cmp
stc
movb
jmp
jmp
jb
das
dec
adc
jns
mov
push
mov
hlt
xlat
aaa
cltd
ds
test
lret
dec
ss
pop
into
and
add
push
pop
sub
cli
lahf
sub
adcl
in
orb
int
dec
mov
ja
adc
add
and
pop
inc
cwtl
adc
frstor
mov
and
or
movsl
and
xchg
mov
jmp
lfs
mov
shr
in
xchg
popa
lods
xchg
jl
fcomip
cmp
out
ljmp
loopne
out
lcall
in
sub
push
mov
fidivs
adc
adc
cmp
and
mov
mulb
adc
jmp
mov
sub
sub
jno
cld
fwait
jmp
out
cwtl
pushf
cld
and
clc
sbb
xchg
cld
leave
mov
test
cmp
stos
sub
sub
push
mov
repnz
stos
call
loope
out
dec
adc
and
fnstcw
add
cs
hlt
pop
rclb
ss
inc
dec
xor
leave
sbb
mov
ror
push
popa
adc
leave
enter
xchg
push
lock
pop
mov
push
xlat
test
push
cmc
inc
adc
popf
mov
pop
pop
sbb
push
dec
inc
and
sbb
pusha
and
jae
dec
adc
arpl
mov
sbb
xor
push
stc
movsl
xchg
inc
jg
and
mov
gs
clc
cmc
stc
cmp
pushf
movw
lea
ja
mov
setb
jmp
aas
inc
mov
icebp
sarl
jns
inc
gs
or
sarb
out
test
mov
add
push
mov
xchg
fstpt
mov
dec
add
sbb
lahf
lea
mov
pusha
pop
push
repz
sbbl
add
lea
adc
jp
xchg
jp
add
sti
bound
insl
jns
mov
push
adc
cmc
mov
adc
push
aas
and
sub
sub
repnz
sahf
add
or
lret
loopne
hlt
sbb
cmpsl
mov
sub
inc
dec
jecxz
ja
les
es
mov
cmpsb
cmp
sbb
std
lret
aaa
divb
sub
cmpb
sbb
pop
popf
mov
dec
mov
insb
xor
out
push
sub
lods
sahf
inc
sbb
or
pop
les
imul
sbb
repnz
add
les
sti
loopne
out
imul
sbb
push
or
mov
fsubl
add
mov
and
sbb
and
xor
jb
pop
cmp
adc
rorl
in
or
cmpsb
jb
dec
fwait
xchg
jle
jbe
adc
std
mov
adc
shrb
insl
rcl
in
insb
dec
and
lret
jg
adc
lock
gs
cltd
push
adc
pop
imul
pop
and
lret
jg
xchg
pusha
and
push
repnz
fldl
xchg
mov
inc
call
or
movsl
ss
push
lods
repz
dec
adc
sbb
out
insl
push
lock
add
das
sub
inc
mov
pop
push
push
insb
or
test
repnz
loope
mov
pop
xor
ret
imul
jno
mov
cwtl
adc
shll
cs
movb
and
fucomp
push
les
insb
fsin
in
test
push
cmp
les
cld
faddp
popf
jecxz
adcl
movb
lahf
loop
scas
fucomp
or
adc
xor
mov
loope
sub
jp
jno
iret
sahf
leave
mov
xchg
fs
xlat
aas
test
xor
jmp
int3
inc
dec
adc
inc
shll
stc
mov
mov
out
stos
mov
jmp
lock
mov
js
mov
sbb
mov
push
pop
mov
insl
roll
push
mov
iret
pop
mov
inc
shll
xchg
and
or
pusha
push
ds
test
jo
int
pop
std
sub
negb
insl
xchg
jnp
fsubl
scas
call
cmp
lea
jne
mov
mov
test
pushf
test
push
add
jmp
test
arpl
les
pushf
jle
jo
jnp
push
mov
call
arpl
adc
loope
fwait
cmp
shrb
ss
add
les
loop
repnz
pop
push
in
arpl
les
sub
dec
xor
cmc
push
mov
mov
cs
popa
pop
aam
repnz
call
sub
jae
xchg
jo
test
loopne
push
jne
cmc
inc
jmp
mov
pop
cmpsb
xchg
xor
push
and
xchg
dec
xor
out
mov
push
stc
lds
mov
cmpsl
or
pop
aas
mov
addb
je
stos
pop
mov
push
and
loope
aam
ret
ret
js
nop
mov
jbe
and
gs
inc
call
dec
iret
test
fldl
stc
test
mov
xchg
jl
lods
jg
in
fnstsw
sub
addr16
adc
push
lods
das
in
sti
dec
pop
cmp
pop
jl
aam
std
dec
and
xor
xorb
stos
push
stc
mov
cli
in
push
pop
ret
popf
push
mov
adc
cltd
mov
std
jecxz
lahf
mov
scas
pop
out
mov
out
cli
ds
mov
jmp
aas
pop
adc
add
imul
dec
add
push
addr16
or
call
sbb
lock
out
lds
inc
push
mov
lock
nop
aas
arpl
push
cmp
je
cmp
mov
sarb
sbb
cpuid
nop
pushf
pusha
movl
push
jmp
gs
test
push
add
test
inc
push
xor
push
out
sub
lock
call
xchg
sbb
pop
add
mov
mov
mov
xchg
and
and
jle
lea
out
aaa
and
into
jbe
mov
outsl
add
js
push
fstpt
mov
or
adc
inc
test
xchg
sub
cmp
push
mov
mov
sub
or
jl
sbb
ficompl
add
add
rcrb
fs
call
cmc
cmp
push
pushf
push
jmp
call
clc
cmp
add
push
push
push
pushf
lea
jmp
movzwl
shrd
dec
ror
mov
pusha
push
add
clc
pushf
mov
clc
test
call
movl
mov
pushf
movw
pushl
ret
stc
or
push
pushf
movb
pusha
lea
je
call
jmp
shrd
test
and
call
mov
bswap
cmp
call
jmp
mov
popl
les
shlb
shll
ljmp
addb
adc
and
and
sbb
into
xor
jb
pop
mov
gs
dec
or
adc
fstpt
dec
jb
sbb
and
fldenv
sub
call
call
ljmp
jle
inc
adc
mov
adc
lcall
mov
pushf
add
push
fs
in
loop
mov
inc
xchg
and
and
lcall
jb
popa
lea
into
cmpl
mov
inc
mov
and
pop
fsub
insb
or
shrl
enter
outsb
mov
mov
inc
mov
ret
lea
and
pop
test
jge
add
rol
mov
dec
icebp
into
mov
jp
scas
push
sbb
and
fldcw
push
mov
inc
ret
mov
mov
aam
push
movsl
hlt
mov
sbb
je
cmp
out
adc
popa
jno
test
sbb
cmpsl
mov
adc
loopne
js
enter
fistl
ljmp
sub
shrl
mov
shr
inc
rclb
lods
fsubl
pop
ret
push
addr16
mov
sub
push
inc
jmp
jne
inc
addr16
jns
mov
das
enter
xchg
mov
movsb
inc
adc
popa
adc
push
mov
push
fldt
sub
test
call
mov
in
push
xchg
loope
mov
jno
add
imul
or
pop
fsubl
in
sti
pop
sbb
mov
rcrb
les
add
adc
inc
fldcw
fistl
sub
add
push
push
imul
popa
insl
pop
clc
jecxz
fs
xorb
ds
inc
adc
pusha
adc
xchg
sti
pop
cmp
mov
or
xchg
std
inc
jbe
enter
xchg
and
xor
sub
xchg
push
loope
push
inc
dec
add
popa
or
clc
sub
mov
jno
shrb
pop
cmp
push
mov
inc
test
or
adc
mov
inc
adc
mov
mov
jns
mov
jmp
inc
cmpsb
test
or
jne
pop
or
stc
ret
inc
pop
xor
cmp
cs
add
xchg
inc
mov
pop
or
push
pop
mov
pop
repz
subl
jle
fs
fwait
sub
dec
les
xlat
push
popa
dec
mov
push
sti
xchg
mov
pop
out
adc
cmp
iret
inc
add
dec
jns
aaa
sbb
jb
mov
lods
cmp
or
aas
ret
out
mov
inc
xchg
cmp
cmp
cmpsl
sbb
roll
cli
inc
xchg
jecxz
lods
xchg
jl
add
subl
hlt
xchg
test
and
xchg
or
bswap
pop
pusha
push
pushf
movzbw
mov
push
xchg
movzbw
mov
lea
jbe
setns
not
seto
pop
pusha
mov
mov
movsbl
bswap
pop
pushf
movb
pushl
pushf
pushl
ret
shll
mov
loopne
test
pop
fldl
pop
and
inc
popl
in
cmp
sub
sbb
dec
cmp
lcall
sarl
xor
mov
xchg
jecxz
lea
jo
scas
cmpsb
andb
pop
test
icebp
jae
andl
pop
jecxz
sub
inc
cmp
mov
xchg
insl
adc
jae
add
roll
and
mov
movsl
fnstenv
test
and
int3
adc
mov
xchg
cld
and
cmp
mov
das
pop
test
idiv
scas
lea
sbb
mov
test
fdivr
jg
or
mov
shl
in
leave
push
xchg
fimull
push
xor
out
fstp
cmpsl
stos
fcomps
mov
iret
scas
cmpsl
mov
test
outsl
lods
cmp
jmp
or
call
jl
inc
loop
outsb
pusha
mov
cld
and
lods
adc
or
xlat
mov
stos
inc
adc
hlt
pop
jge
jg
mov
xchg
jbe
popa
and
subb
dec
movsl
daa
lods
sub
dec
xchg
push
outsl
xchg
ljmp
sbb
stos
cltd
test
ret
lods
dec
loopne
sub
popf
daa
dec
push
jp
ljmp
cltd
mov
les
jmp
aad
mov
lret
pop
fldt
scas
fwait
cltd
dec
or
inc
gs
shl
cmpl
xor
sbbb
popa
imul
repz
aas
stos
into
mov
test
lea
test
xlat
subl
mov
mov
mov
neg
mov
std
or
xchg
ret
inc
push
mov
xchg
adc
call
pop
fstl
push
xchg
xchg
int
mov
cli
cmp
xor
jge
adc
dec
fnsave
xchg
pushf
int3
pop
and
pop
insb
mov
push
aam
stos
fimull
inc
dec
mov
in
pop
ret
lahf
popf
out
dec
and
adc
sub
and
addr16
call
in
jae
les
call
aad
xorl
jp
mov
cmp
pusha
call
pusha
mov
call
pop
pushf
mov
pushf
pusha
pushf
jmp
into
int
inc
adc
sarb
pop
jmp
add
shll
stos
push
and
xor
jmp
mov
test
dec
movsl
cmp
hlt
fimull
sub
and
icebp
mov
movsb
in
call
mov
jle
dec
fdivs
jecxz
movl
fwait
testl
inc
stos
adc
dec
xor
push
pop
xchg
insb
aaa
mov
into
lret
pop
out
aas
adc
loop
outsb
xchg
jae
jne
fadd
mov
and
adc
sbb
pop
add
fwait
jns
popf
sub
or
leave
cmpl
xchg
shlb
outsb
xchg
mov
mov
jns
and
cmp
enter
mov
cmpsb
push
cmp
cmp
popa
or
cmp
pushf
lea
jae
cmc
cmp
pushf
jmp
inc
cmpb
adc
test
xchg
jb
mov
fs
mov
and
ss
jmp
push
push
xchg
push
pushw
call
loopne
adc
mov
sub
enter
int
data16
insl
and
push
fists
push
clc
dec
stc
adc
adc
aad
into
add
addr16
mov
loope
dec
sub
or
cmp
jp
addl
xor
jmp
push
mov
aam
and
loopne
jo
es
dec
xchg
push
dec
add
lea
jae
clc
bts
cmc
mov
movsbw
rcl
rcr
pusha
mov
stc
adc
mov
bt
sub
cmc
cmp
pushf
repnz
pushf
push
lea
jne
push
mov
pushl
pusha
lea
jmp
arpl
arpl
xor
fs
insb
add
stc
mov
mov
mov
loop
imul
push
gs
and
dec
pushl
inc
ja
cmp
mov
test
lods
bound
sbb
xor
dec
add
dec
out
mov
cmp
adc
dec
icebp
and
mov
fwait
add
jae
fptan
mov
jnp
pop
jge
std
sbb
inc
add
fwait
imul
fstpt
mov
inc
addr16
cmp
sub
mov
ljmp
and
xor
mov
sub
sbb
fcom
fstl
out
xchg
and
push
mull
pop
push
mov
int
lcall
inc
clc
inc
and
lret
cmpsb
xchg
push
sub
lahf
xchg
jp
mov
subb
bound
mov
cltd
sahf
xor
adc
nop
xor
push
subb
std
mov
cmpsl
xchg
hlt
jnp
xchg
rorl
test
jmp
sbb
pop
add
xchg
cli
test
shrb
mov
lcall
mov
xor
and
cmp
push
es
les
hlt
movsl
pop
sub
xchg
fiadds
xchg
mov
scas
sarb
scas
mov
push
ds
add
or
repnz
jl
leave
or
cmp
int
fidivrs
cmp
bound
cmpsb
mov
outsb
scas
mov
daa
cltd
imulb
xchg
jns
shll
or
dec
lock
icebp
push
ss
sub
xor
mov
jle
cmp
insb
dec
cmp
call
sub
ja
call
in
loope
adc
sub
xchg
stc
sbb
mov
nop
hlt
test
xchg
and
inc
sub
mul
shlb
jae
xchg
jg
dec
scas
xor
xor
jle
aam
imul
push
repz
push
mov
test
xchg
outsl
mov
inc
jecxz
clc
cmp
les
xor
and
loope
rorl
stos
dec
outsl
ds
sbb
sub
jne
pop
pop
mov
inc
in
push
aas
and
in
push
mov
xchg
mov
stc
cmpsb
call
push
loopne
cmp
fildl
mov
shlb
test
mov
fsubl
inc
jbe
lahf
adc
les
dec
lods
push
lret
loope
pop
jmp
push
cmp
hlt
pop
leave
cmp
icebp
xchg
stc
mov
int3
or
pop
sahf
sti
or
cmpl
ret
cmp
jne
push
aam
lret
pop
fwait
mov
pop
sub
cmpsb
pop
jb
mov
leave
das
adc
mov
pop
dec
insl
out
xor
outsb
mov
sbb
cmp
les
jle
inc
addr16
push
xor
repz
popf
ljmp
adc
jp
and
jne
pop
inc
or
cmp
cmp
dec
xor
inc
pushf
adc
lea
push
pusha
jmp
pop
jmp
divl
insl
jge
shlb
cmpsl
mov
xchg
mov
jne
xchg
aam
sub
outsl
scas
mov
ja
in
or
test
scas
imul
lahf
repnz
adc
push
roll
jmp
loope
imull
xchg
xlat
mov
cmp
rcll
jae
mov
dec
lock
aaa
fwait
lahf
js
gs
cmp
call
js
dec
outsl
jns
enter
bound
or
loopne
dec
or
call
outsl
mov
sub
std
and
add
repz
jo
sub
dec
sti
or
popf
fwait
or
jmp
lock
sub
or
shrl
push
data16
loop
lods
aam
push
fwait
int
test
push
aaa
pop
lcall
mov
or
push
push
sbb
add
decb
dec
lret
jle,pn
sub
jns
test
pop
out
pop
leave
xor
movups
push
push
jmp
pushf
pushf
lods
negl
pusha
leave
sub
mov
scas
mov
cmc
outsl
pop
inc
stos
xor
sti
icebp
call
test
stc
mov
movw
test
pusha
lea
je
jmp
push
push
lea
jb
pusha
cmp
jmp
pushf
lea
jb
cmp
pushf
cmpb
pushf
jmp
lods
lock
mov
inc
in
les
add
fcoms
push
lds
and
daa
jnp
divl
cmp
add
mov
jecxz
lods
insl
addl
jo
insb
add
xchg
mov
jecxz
add
stos
das
addl
xor
pop
repz
sub
jl
scas
xchg
xchg
fdivr
fldt
fcompl
xchg
mov
decl
adc
testl
xor
xchg
leave
dec
dec
aad
jae
addr16
xor
ds
mov
loop
repnz
lock
movsl
scas
push
cwtl
pop
icebp
xor
mov
pop
and
dec
insb
addb
xlat
ficomps
int3
ljmp
sbb
jnp
dec
and
negb
test
nop
push
dec
test
daa
push
cmp
xor
out
and
into
xor
xchg
mov
sbb
gs
cs
ficoms
test
inc
sub
bt
add
bswap
shr
movsbl
mov
rcl
rcr
clc
mov
call
movl
mov
call
push
jmp
movsb
mov
cmp
les
filds
push
mov
inc
movsl
sub
sbb
mov
mov
fidivl
loop
ffreep
daa
adc
mov
repnz
inc
idiv
dec
in
pusha
lds
inc
mov
pop
ficompl
pop
es
adc
dec
sub
outsb
repnz
jecxz
xlat
aas
add
cmp
addr16
dec
mov
sub
mov
mov
mov
mull
scas
jl
push
cmp
arpl
scas
push
mov
rcll
dec
lea
jne
lahf
bswap
mov
not
movb
cwtl
pushf
mov
call
or
call
hlt
out
jmp
and
or
mov
xor
adc
mov
cmc
add
stc
call
les
ss
mov
mov
cmp
add
call
push
mov
jp
out
fmulp
adc
cli
xchg
cmpsb
mov
arpl
jo
sbb
in
add
mov
lods
pop
mov
daa
mov
cld
outsl
cmp
sti
movsb
mov
push
mov
pop
pusha
adc
mov
jmp
pop
leave
or
and
pop
mov
mov
cmpsl
or
cmc
cwtl
shlb
push
pop
pop
int3
sbb
adc
out
popf
add
mov
sbb
shrl
jae
loope
ret
into
ds
pop
sbb
fiaddl
mov
pop
nop
scas
and
iret
mov
or
fmuls
cmc
call
sbbb
mov
add
loopne
test
fbstp
xor
cs
pusha
pop
outsb
adc
sbb
cmpsl
xor
pop
ret
cmp
add
clc
cmc
test
mov
sub
je
cmc
bsr
mov
bt
bt
jmp
sbb
xor
les
sbb
mov
xchg
outsl
cmc
out
ljmp
jg
scas
lretw
jns
std
push
mov
sub
cli
mov
xor
mov
fistpl
pop
cmp
mov
out
leave
cmp
int3
mov
mov
or
and
push
aam
inc
and
aam
mov
bound
or
and
xor
aas
mov
jge
imulb
cmp
sbb
fstps
add
pushl
cld
mov
xor
cmp
inc
push
js
xchg
movsb
push
or
jmp
and
mov
cmpsb
adc
adc
test
dec
cwtl
jg
push
add
lret
aaa
pop
adc
dec
jbe
test
xchg
jge
lea
push
jle
mov
test
sbb
daa
cltd
cmpsl
adc
push
jbe
pushf
call
in
loopne
arpl
les
xchg
ret
setae
dec
xchg
sub
int
cmp
out
jp
or
stos
push
adc
int
dec
stos
push
xchg
mov
movb
push
pusha
pushf
pushl
ret
mov
pushf
call
push
pusha
movl
pusha
movl
push
push
mov
lea
jmp
add
pushf
movzwl
lea
shr
mov
push
add
cmc
call
push
fs
les
arpl
in
or
adc
xlat
jne
mov
sub
addr16
dec
in
add
xchg
into
and
mov
xlat
or
xchg
mov
jbe
rcrb
jle
dec
dec
shrl
roll
aas
das
sub
dec
push
mov
pop
sbb
jle
xchg
sub
lds
inc
inc
das
icebp
mov
nop
mov
pusha
aad
inc
hlt
xchg
xchg
movsl
jo
std
in
jne
cmp
cmp
fsubp
and
pop
inc
rolb
jmp
and
cmc
test
add
pushl
lea
jmp
mov
out
xor
jmp
mov
or
nop
mov
mov
stos
arpl
roll
sub
pop
adc
adc
jae
js
imul
adc
inc
or
outsl
mov
hlt
jb
insb
push
xchg
ret
aad
fisubl
cmp
or
mov
clc
in
hlt
repz
fmull
les
out
lock
int
add
hlt
xorl
sbbl
mov
adc
cmp
lods
push
js
add
icebp
inc
adc
xchg
lcall
imul
adc
pop
and
scas
jle
xor
mov
daa
add
shll
lahf
mov
das
push
xor
popf
push
mov
sub
repz
fdivrs
jns
cmc
jle
cltd
xchg
fmul
test
js
adc
fildll
xor
cmp
out
pop
fs
mov
xchg
push
cmp
sahf
fbld
push
les
adc
xchg
sbb
or
adc
pop
negl
mov
cmc
mov
mov
test
jmp
mov
cmc
jge
mov
popl
xor
mov
inc
push
test
mov
pop
cmp
adc
sti
out
jnp
jp
ljmp
jecxz
mov
adc
imul
call
test
lods
xlat
mov
mov
sbb
xor
les
pop
jp
inc
cmpsb
leave
imul
lds
cs
and
jns
ret
mov
dec
and
in
mov
mov
aad
add
fildll
and
push
jg
jno
test
push
xor
stos
xor
les
std
leave
push
pop
fistpll
imul
pop
jae
push
sub
lret
and
sbb
and
dec
mov
rcr
jmp
pop
dec
and
dec
fcmovnu
xor
xchg
mov
arpl
or
jge
outsl
std
mov
cld
inc
xchg
and
repz
add
ror
mov
and
inc
lods
mov
xchg
adc
push
jmp
in
fldenv
pop
and
cmp
and
or
aad
pop
mov
xchg
adc
add
insb
int3
pop
dec
in
jae
out
add
mov
add
cmp
call
lea
je
cmc
jmp
frstor
adc
xor
cli
pop
clc
sbb
lds
and
iret
lods
jbe
in
mov
dec
std
lds
mov
cmp
imulb
xchg
fsubp
inc
popf
xchg
pushf
movsl
push
mov
call
add
test
xor
jne
mov
stos
jns
push
cwtl
or
imul
pusha
xchg
stc
movsb
dec
out
push
cmp
fs
sarl
and
cmpb
add
pushf
pusha
pusha
pushl
ret
dec
sbb
das
adc
adc
bound
inc
imul
adc
xor
pusha
in
pusha
das
mov
pop
in
and
xchg
aam
lcall
mov
sub
adc
cmp
xchg
lcall
sbb
jecxz
mov
icebp
xor
xchg
jge
add
push
stc
mov
lret
mov
adc
inc
test
repnz
adc
stos
xor
addl
xor
setns
call
loopne
mov
mov
mov
cmpsb
pushf
cmp
jae
and
push
mov
pushf
jno
dec
sbb
loopne
mov
faddl
sub
or
decl
out
mov
sub
jnp
push
pusha
shr
pusha
pushf
bt
pushf
cmp
pushl
jmp
loope
fisubrs
adc
fwait
dec
xor
fstpt
fldl
in
addr16
lods
ficompl
cld
dec
xor
aad
cmpb
and
popf
and
jecxz
lods
pop
sti
stc
cmc
or
clc
sbb
pop
pop
dec
out
jg
ret
outsb
xchg
int
mov
mov
pushf
push
rolb
in
fwait
add
ret
xchg
adc
mov
push
lea
jne
call
js
cmp
pusha
fwait
push
pop
sub
into
cmc
filds
outsl
sar
faddp
or
add
inc
push
int
push
cs
push
mov
enter
adc
pop
ss
jo
sti
outsb
lds
or
xchg
repnz
gs
mov
xor
in
pop
xor
out
xor
jecxz
aad
dec
pop
dec
or
jns
push
out
cmp
jns
imul
scas
jp
push
test
aas
repz
xor
lods
daa
ja
cli
mov
les
sbb
add
inc
jle
fwait
in
outsb
push
aas
loopne
icebp
pop
cld
and
je
testl
fisttps
out
mov
out
gs
sarl
sbb
lahf
andb
mov
xor
rcl
addr16
cmp
loop
push
dec
jb
sti
xchg
dec
inc
and
sub
xor
movsl
ja
or
mov
add
lahf
push
mov
out
xchg
lcall
in
push
rcl
cli
les
xchg
pop
jo
bnd
sbb
ja
inc
jmp
jmp
les
jbe
fsubrl
fwait
shrl
call
sub
cmc
cmp
cmp
jmp
mov
mov
or
dec
mov
cmc
pushf
ret
xlat
cmp
cmpsl
cmp
jo
adc
xchg
xchg
aam
pusha
dec
lods
pop
jg
clc
or
loop
ret
dec
repnz
jle
lret
xchg
je
daa
mov
fisttpll
inc
mov
cmp
jecxz
pushf
andb
sub
out
and
mov
test
or
stos
add
movsl
mov
dec
je
inc
jmp
insb
nop
stc
test
jo
inc
movzwl
neg
mov
test
add
pusha
mov
stc
pushf
mov
test
jmp
lea
jne
jle
mov
movsbl
stc
bsr
sub
shl
lea
mov
stc
clc
pushf
sub
clc
call
jne
gs
xor
fs
insb
add
mov
push
mov
stos
or
mov
xchg
jp
ret
out
cli
mov
push
repz
pushf
inc
inc
inc
jg,pt
xchg
pop
mov
xor
inc
mov
adc
mov
shll
ficompl
inc
push
adc
mov
incb
mov
sbb
mov
inc
stos
xchg
mul
inc
sub
inc
adc
sbb
fs
ja
not
jmp
not
pushf
mov
movb
lea
jmp
js
mov
adc
sti
arpl
jmp
aam
cwtl
jl
lds
add
add
mov
dec
jmp
movsl
cmp
gs
dec
mov
cmp
mov
ret
xchg
js
lods
in
or
push
mov
inc
roll
leave
rdpmc
jecxz
or
dec
fsubrl
mov
or
xor
inc
daa
dec
xor
xor
xchg
add
imulb
add
sub
les
adc
push
jp
ret
sub
ss
jb
jecxz
xchg
cmp
dec
jp
mov
aaa
test
test
inc
jg
jno
dec
lea
outsb
das
inc
jecxz
push
rolb
inc
loope
cmp
inc
sub
std
dec
adc
jbe
xchg
pop
mov
popf
or
xorl
clc
insb
mov
lahf
out
dec
and
jg
jne
mov
jae
or
pusha
mov
pop
ds
jae
mov
rcrb
push
popa
gs
ret
jmp
fisubs
sub
les
scas
iret
jb
negl
pop
inc
aam
cmp
dec
sbb
aas
insb
push
and
aam
dec
add
sub
jg
mov
scas
fdivs
sbb
push
add
movsb
out
dec
inc
mov
cmp
mov
xchg
test
cmc
push
mov
dec
es
gs
cmp
arpl
sub
addr16
aaa
ljmp
fstpt
mov
mov
adc
jecxz
sub
sti
popa
inc
jo
mov
inc
gs
jl
mov
cwtl
mov
mov
push
mov
pusha
call
pushl
stc
cmp
mov
lea
ja
rol
clc
stc
add
rol
mov
stc
jmp
stc
bt
or
pushf
push
jmp
pushf
mov
pusha
call
lea
ja
rol
neg
xor
shl
sub
cmp
bsr
add
or
dec
mov
ror
bt
setg
bt
mov
cmp
pushf
mov
cmc
repnz
pusha
jmp
and
les
xor
xor
mov
fs
pop
sub
aas
add
jg
sbb
xchg
cmp
lahf
mov
pusha
sub
fisubs
je
add
push
mov
iret
or
cmp
and
sub
les
fiadds
cltd
test
adc
xor
ljmp
hlt
sbb
xor
cmp
push
bound
push
shl
movsb
xchg
sarl
mov
shlb
mov
inc
add
test
bt
bt
push
test
mov
jmp
lock
mov
mov
cmp
enter
lahf
jp
inc
imulb
or
mov
mov
push
push
out
in
movsb
adc
mov
ds
js
in
sub
adc
dec
je
push
adc
mov
xchg
sbb
gs
push
or
xchg
inc
adc
out
cmp
inc
data16
push
cmp
mov
rcll
xchg
adc
sbb
pop
aas
in
cmc
sbb
and
in
mov
xchg
std
mov
adc
cmp
andb
repnz
pop
insl
mov
data16
dec
aad
push
jbe
cmpsb
cltd
push
mov
jge
lret
xchg
outsl
add
repnz
jns
in
scas
scas
pop
cmp
ret
xor
mov
test
sar
lds
jg
xlat
ret
cmc
rclb
push
out
negb
outsb
adc
inc
jge
out
add
fcmovnbe
es
lea
xchg
stos
push
mov
daa
inc
cmp
imul
cmc
inc
push
mov
lahf
orb
popa
jne
cmp
mov
jl
loop
xchg
jo
ffree
xor
outsl
add
aad
in
and
int3
pusha
mov
cmp
mov
mov
xor
movsl
mov
inc
adc
js
add
xor
add
ljmp
sti
iret
push
aas
sub
pop
cmp
mov
leave
lock
push
sbbb
xor
and
mov
cmp
aad
cmpsb
dec
jle
rcll
adc
das
sbb
mov
iret
jae
clc
sbb
jmp
lret
stc
push
pop
push
ret
sarl
inc
mov
arpl
lods
mov
mov
notb
inc
and
fadd
cmc
into
lret
popf
and
xor
ret
js
movl
push
jbe
xchg
sub
inc
adc
xchg
outsl
pop
shlb
xchg
dec
lock
mov
inc
mov
insl
pop
out
aad
and
es
jae
inc
out
daa
dec
cs
repnz
mov
hlt
push
arpl
jno
inc
imul
popa
shlb
sbb
in
movsl
xor
adc
iret
xor
inc
insl
dec
les
hlt
add
mov
inc
movsb
clc
or
jle
lcall
sub
movups
loopne
addr16
cmp
dec
mov
mov
xor
pop
and
out
jae
pop
addr16
lret
mov
cld
out
xor
inc
ljmp
dec
jo
enter
mov
adc
int3
mov
cld
sbb
and
scas
xchg
sti
loop
cmp
jle
and
test
jecxz
call
std
lret
cmp
cltd
cmp
inc
lahf
xchg
xchg
icebp
into
cmp
sahf
pop
dec
cmpsl
in
mov
aam
or
movsl
dec
mov
xor
push
ret
mov
sahf
sub
push
das
mov
inc
or
mov
inc
and
daa
outsb
mov
lahf
lea
jmp
js
pop
and
shlb
pusha
add
movsb
pop
cltd
and
arpl
icebp
cltd
inc
push
aas
mov
repz
cmp
jbe
adc
insl
push
enter
sub
push
out
in
add
jns
hlt
loop
shlb
shrb
jbe
insb
das
adc
inc
xor
inc
xchg
sti
cmp
pop
xorb
jno
std
add
stc
roll
fisubrs
fidivl
stos
cwtl
jo
mov
fscale
in
xor
lds
jbe
inc
mov
mov
or
pusha
inc
jge
pushf
lea
jne
jmp
call
inc
dec
inc
and
les
inc
out
cmpsl
xchg
int3
repnz
cmp
scas
cli
xor
outsb
xchg
push
jb
mov
sub
jo
or
loope
adc
sbb
clc
cmp
jmp
pop
pop
imul
pusha
fbld
jg
push
pushf
daa
cmp
fs
rcrl
shll
filds
cli
mov
sahf
sbb
cmpsb
or
idivb
neg
mov
stc
cmp
push
test
cmp
movl
pushf
lea
jbe
push
mov
movzbw
jmp
lea
call
jmp
sti
sbb
push
cmp
aas
pop
lds
ljmp
pusha
inc
cmp
sub
jno
jmp
sub
je
sub
inc
mov
movsl
inc
insb
push
xor
fists
popf
xchg
xchg
sbb
and
in
iret
stos
test
insl
push
cmp
in
jo
jp
and
scas
call
push
adc
xlat
and
aam
or
adc
arpl
mov
dec
fldenv
cmp
hlt
les
add
push
push
fcoml
clc
mov
or
inc
pop
scas
insb
addr16
adc
stos
mov
jmp
mov
add
sbb
cmp
ds
clc
push
into
fdecstp
in
addr16
or
push
xchg
jg
adc
scas
xchg
cli
pop
test
sarl
ljmp
jno
lods
cwtl
jle
pusha
add
inc
js
je
jb
arpl
jae
hlt
cmp
fs
test
sbb
dec
jne
dec
popa
sbb
sub
stos
or
les
mov
js,pn
add
sbb
mov
inc
add
addr16
pop
testl
into
dec
xor
scas
ljmp
ss
es
call
jns
insb
out
fsubr
lds
sbb
adc
and
iret
mov
fisubrl
rorl
push
lods
repz
scas
sbb
addb
movsb
mov
cli
imul
cmp
int
adc
call
mov
sbb
cwtl
push
push
jle
cmp
sahf
clc
fs
and
pop
adc
cmp
inc
call
push
ss
sbb
mov
in
inc
and
mov
movl
push
mov
lea
jmp
jge
and
repz
call
adc
pop
mov
ret
inc
ret
stos
mov
inc
xorb
in
push
jg
jnp
dec
mov
dec
jecxz
loopne
test
mov
lea
leave
add
jae
lea
jne
gs
sbb
in
es
iret
hlt
daa
das
aaa
cmp
pop
mov
lods
aaa
lahf
rclb
inc
push
xorb
aad
jo
inc
fwait
sub
filds
xchg
nop
js
sub
ss
popf
mov
jmp
cltd
and
les
insl
mov
popf
jle
out
sbb
dec
fisttpll
add
xor
add
in
and
clc
pop
and
stc
jge
jg
iret
sbb
push
lret
mov
dec
jecxz
jb
pop
arpl
mov
push
xchg
fildl
pop
nop
loopne
mov
inc
je
jb
mov
fs
lock
mov
mov
sti
cmp
pop
pushf
dec
mov
inc
gs
gs
inc
outsb
push
inc
imul
push
push
jmp
mov
les
je
clc
sbb
pushf
std
and
xchg
inc
cld
ja
rcrl
sahf
dec
mov
testl
adc
sahf
add
mov
sbb
xor
cmp
orb
fdivs
mov
sub
jns
test
jbe
jmp
mov
xchg
test
dec
aad
jbe
jnp
scas
inc
rolb
jle
fwait
rep
sub
js
sysexit
faddl
push
mov
mov
sahf
loop
int3
aas
cmp
xor
jb
pop
adc
cmpsb
aad
pop
sti
mov
dec
lods
push
jo
inc
xchg
int3
inc
aad
push
inc
roll
xor
in
xchg
push
sub
js
les
or
jae,pt
cwtl
out
lea
arpl
popf
push
andb
addr16
mov
pop
push
pop
ds
inc
fldenv
sub
jmp
lret
cmp
xchg
shrb
jecxz
les
xor
cmp
cltd
aas
push
rorb
ret
add
pushf
pusha
push
pushf
lea
jmp
mov
bt
pushf
sub
clc
pushl
popl
call
mov
pop
movl
lea
lea
call
cmp
jmp
shll
pop
adc
pop
jmp
xchg
iret
enter
es
jns
stos
mov
xchg
in
ljmp
pop
jnp
mov
dec
mov
xlat
xor
xor
rolb
mov
ret
xor
push
push
inc
leave
pop
sti
cld
ja
outsb
cmp
rclb
sbb
sbb
iret
jns
aam
push
mov
cmp
mov
sbb
push
mov
and
mov
jmp
inc
pop
or
adc
push
xchg
sti
sbb
and
xor
inc
pop
out
pop
jecxz
cmp
scas
iret
adc
dec
inc
inc
mov
pop
pop
test
push
movsl
nop
popl
push
push
rcrb
and
dec
call
mov
pop
mov
xchg
pop
or
fwait
sbb
stc
jae
dec
adc
mov
pop
sahf
xor
cmp
cmp
loop
sub
pusha
fisubs
and
dec
cmc
cmp
shll
aas
pushf
sub
mov
pusha
bt
clc
clc
add
mov
push
pushf
push
lea
jmp
add
push
jns
inc
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
jae
adc
jo
jecxz
mov
jne
jmp
test
dec
int3
sbb
jl
pop
cmp
add
dec
push
or
lea
jno
aas
mov
les
sbb
les
add
sub
mov
jecxz,pt
jp
in
jns
mov
dec
test
dec
outsb
cwtl
and
push
mov
xor
shlb
psadbw
pushf
test
imul
or
sub
or
sti
pop
sbb
sbb
jmp
pop
into
pop
insb
cmp
push
mov
sbb
mov
aas
sbb
or
int
push
pop
push
ficompl
pop
xchg
aam
mov
add
dec
jb
add
or
or
fisubrs
dec
movl
pushl
pushf
mov
lea
jmp
add
sbb
les
push
mov
jbe
mov
dec
cmc
xor
shrb
cmp
insb
dec
cs
hlt
xchg
addr16
dec
mov
orl
xchg
push
or
or
inc
sub
ret
data16
cmc
rol
sbbb
xchg
dec
sub
mov
inc
xchg
xchg
rcl
xchg
xchg
out
cmp
and
iret
sahf
pop
aam
adc
and
jmp
clc
pop
or
mov
call
sbb
jl
mov
adc
add
sub
das
push
clc
cltd
cmp
jge
ret
push
dec
push
xchg
es
jp
jo
pop
inc
or
mov
push
push
xchg
fildl
push
xchg
inc
mov
int
lret
lock
push
scas
or
or
mov
push
sbb
or
jg,pt
push
rorb
arpl
adc
xchg
stc
mov
cmp
mov
fstpt
inc
mov
pop
fistpl
stos
mov
pop
jns
lea
jb
pushf
jmp
fildll
loopne
adc
popf
int3
icebp
adc
cmp
adc
xor
js
dec
xchg
std
xchg
je
outsb
test
loop
inc
inc
pop
inc
mov
mov
push
ljmp
dec
mov
scas
push
mov
mov
sub
cwtl
jecxz
dec
mov
loope
jno
imul
shrb
out
adc
test
cld
dec
push
cli
test
je
add
cmpsl
jmp
or
jg
pusha
dec
xchg
or
adc
jne
jnp
andl
cmpsl
in
inc
test
repnz
or
xor
dec
sbb
xchg
lds
loopne
mov
adcb
jno
jg
lods
jl
push
cmp
xchg
mov
xchg
movsl
dec
adc
push
xlat
xchg
sahf
add
rclb
jp
pop
push
push
jnp
jne
lret
push
jbe
sahf
sub
dec
sbb
out
jg
jg
in
cmp
push
ror
loopne
mov
push
mov
shrl
push
into
xor
sbb
btc
bswap
dec
mov
jmp
fwait
loope
sbb
les
mov
mov
cmp
inc
repnz
sbb
hlt
cmp
sbb
ljmp
mov
imul
pop
xchg
dec
cmp
in
xor
mov
and
imul
das
outsb
and
pusha
push
js
inc
ret
pop
ret
add
pop
or
push
push
inc
sbb
les
push
notb
int3
cmp
mov
cmc
pop
inc
std
sbbl
cmp
pop
mov
lea
jne
pushf
jmp
xchg
dec
mov
stc
pop
cmp
ret
adc
fs
imul
or
out
out
icebp
adc
xchg
jnp
cmp
add
and
fidivrl
je
cltd
or
push
push
lock
inc
arpl
and
add
jecxz
add
sahf
pop
lock
shll
adc
add
adc
jmp
pop
push
aam
or
push
int3
mov
loopne
xor
sbb
jge
subb
addb
cmp
clc
cmc
ficoms
adc
dec
aad
daa
stc
in
xor
xchg
mulb
xchg
mov
lock
fwait
push
iret
rorl
fwait
mov
jl
stos
mov
bswap
aad
lahf
addl
mov
push
or
mov
divl
jle
jmp
in
adcb
pop
inc
aad
pop
fisubs
fldlg2
js
movsl
xchg
xchg
int
in
fwait
or
mov
jns
adc
or
push
cwtl
mov
dec
inc
adc
ljmp
jb
aas
xchg
fs
jo
mov
adc
fwait
out
aaa
fdivrl
ret
clc
mov
push
xlat
out
mov
not
lea
pushf
mov
pushl
push
movl
pusha
mov
push
pushl
ret
movb
push
lea
jne
inc
rcr
ror
mov
ror
or
inc
btr
sub
pushf
or
bt
lea
pusha
pusha
sub
clc
clc
cmp
pushl
pushl
popl
stc
stc
bt
cmp
jmp
sub
sbb
les
adc
rcrb
mov
negl
mov
repz
mov
mov
add
jne
pop
mov
push
cmpsb
fisttpl
adc
dec
aam
mov
and
lcall
rorb
cmp
dec
jmp
sbb
dec
xchg
or
movsl
and
jmp
cmpsb
aaa
add
adc
flds
into
aaa
lcall
lods
or
jp
pushf
pusha
lea
je
pusha
movb
pushf
lea
jmp
pushf
mov
mov
pusha
lea
jmp
cli
or
in
dec
hlt
cltd
negb
inc
sub
pop
dec
fisttpl
sub
dec
xchg
aad
push
into
imul
lock
lret
adc
mov
shr
dec
cmp
mov
or
cmp
dec
push
sub
and
push
push
xchg
fistl
xchg
xlat
dec
fwait
dec
inc
mov
mov
faddl
xchg
ja
subb
lods
sub
stc
clc
test
add
jnp
pusha
lea
je
jmp
jmp
aam
adc
adc
pop
les
scas
push
mov
jns
ret
popa
add
paddusw
sub
inc
outsl
adc
ljmp
mov
mov
mov
cmpsb
pop
and
inc
push
mov
jecxz
xor
sub
call
jle
adc
jns
mov
lods
jns
jecxz
and
filds
xchg
cmp
mov
jp
leave
xor
sbb
cmp
loope
pop
push
adc
test
arpl
les
mov
repz
inc
inc
inc
dec
jg
inc
cmpsb
jae
add
adc
xchg
loop
shll
cmp
pop
shll
daa
cwtl
cmc
dec
jne
rcrb
shrb
ret
jo
cmp
sbb
jle
fcoml
mov
jns
es
dec
cltd
cmp
cmc
faddl
jle
out
mov
lock
int3
popf
call
cmp
bswap
movzbw
call
dec
pop
push
adc
movsl
xchg
lret
repz
jge
shlb
mov
or
mov
popf
lret
fadd
lods
jmp
jns
sub
cld
mov
es
mov
cmp
or
popa
adc
dec
loope
mov
cmp
leave
mov
out
mov
movsb
loope
mov
xor
into
adc
cs
pop
adc
shlb
clc
popf
loop
fwait
loopne
stos
pushf
dec
lock
rorb
dec
sahf
cmpsb
sahf
push
outsb
mov
inc
stos
adc
lcall
add
and
fiaddl
mov
sub
push
js
stc
sahf
cld
movsb
add
mov
jge
sub
dec
loop
adc
push
mov
in
push
roll
or
or
pop
into
stos
xor
and
fcoml
and
shl
sub
outsl
scas
xor
lds
or
lret
lret
mov
fidivrl
xor
lret
bound
inc
or
loope
mov
shr
mov
jno
movsb
and
repnz
int
pop
loope
das
pop
rcrl
xor
sbb
repnz
adc
les
xchg
stc
popf
std
pusha
ret
imul
jle
dec
fbld
int
lret
and
and
mov
in
pop
cli
and
xchg
pop
push
xchg
xchg
les
xchg
stc
sti
push
clc
inc
sub
xorl
adc
orl
movb
sbb
xorl
aas
cmp
or
jge
mov
and
in
adc
rorb
cltd
inc
test
sbb
sbb
and
push
inc
outsb
xchg
stc
pop
test
mov
mov
inc
lea
jmp
cmp
mov
lea
ja
rcl
sub
sub
bts
sar
add
stc
and
mov
shl
adc
mov
clc
repnz
push
lea
jne
mov
call
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
xchg
sti
decl
test
bt
imul
cmc
cmp
stc
add
pusha
push
push
lea
jmp
cmp
or
jmp
pushf
test
bt
repnz
pusha
call
aaa
jp
adc
les
and
das
sarb
mov
les
test
shl
in
jl
iret
ds
jns
jns
cmpsb
and
nop
fwait
sbb
jmp
add
add
mov
xchg
jge
out
pop
clc
cmpsl
cmpsl
add
inc
cwtl
xor
mov
aad
mov
mov
lds
or
mov
mov
xchg
cmpsb
stos
mov
popa
xchg
imul
fstps
loop
pop
cli
add
xchg
jne
jp
cmp
mov
test
mov
xchg
lds
add
pushf
lcall
inc
pop
sbb
sbbb
aas
adc
lret
aam
pop
insl
mov
daa
pop
jmp
adc
adc
jge
dec
cmp
or
js
nop
mov
or
les
mov
arpl
jb
jo
fiaddl
lds
inc
adc
mov
pop
dec
repz
mov
js
pop
lahf
ja
jb
dec
push
adc
repnz
bt
ror
mov
clc
call
repnz
scas
adc
clc
gs
ja
cmp
jg
add
adc
jle
cmp
xchg
pusha
mov
imul
je
aas
and
push
xchg
divl
push
mov
fs
cmp
push
sub
mov
dec
fsubl
fbld
push
ret
jnp
push
test
mov
jg
int
sbb
mov
cmp
sbb
lret
repnz
imul
jge
add
repz
jecxz
push
aaa
out
sub
push
and
and
pop
mov
jg
std
jp
aad
push
pusha
adc
rclb
lret
jns
scas
cmpsb
cwtl
das
daa
in
les
loop
enter
sub
sti
int3
xchg
cmc
rcr
in
xchg
xchg
jbe
mov
mov
or
push
negl
pop
ret
fwait
pop
mov
stc
mov
jle
inc
scas
or
stc
sbb
xor
jno
jbe
imul
sub
xchg
loopne
push
cmp
pop
jl
add
adc
arpl
dec
or
inc
mov
inc
mov
mov
xor
jns
xchg
scas
mov
mov
dec
loop
sbbb
mov
leave
jbe
inc
lods
shlb
pop
sub
push
cmp
adc
les
js
jns
shlb
sub
enter
les
cli
sbb
and
pop
jl
xor
insb
out
lahf
sarb
insb
mov
mov
outsl
jg
in
add
stos
sub
xchg
aad
sub
rol
aam
jno
cmpsb
orb
out
jmp
xor
add
shll
sbb
rolb
inc
pop
in
sarl
pusha
lea
ja
and
sbb
stc
sub
clc
push
lea
add
shr
mov
and
mov
clc
pushf
repnz
mov
call
cmc
stc
cmp
cmp
sub
cmp
cmp
pushf
lea
jae
pusha
pushl
lea
jmp
cmpsl
out
push
adc
ljmp
pop
les
stos
mov
popf
imul
stc
lea
xor
and
loope
insl
stc
in
and
pop
arpl
mov
pop
icebp
rclb
dec
push
xor
mov
or
sub
ljmp
mov
mov
add
fsubs
push
mov
cmp
push
cmp
inc
std
ds
jno
or
push
sbb
inc
cmpsl
int3
nop
cmpsb
stos
jno
jmp
fs
gs
shll
sti
pop
lds
jl
es
shl
pop
dec
pushf
push
movb
lea
jbe
call
data16
pop
jle
add
push
xor
dec
push
dec
and
push
dec
add
cs
shlb
push
push
je
fcomps
imul
sub
int
int3
mov
jp
in
pop
cwtl
call
add
cmp
push
lods
inc
jne
mov
je
ficompl
add
ss
mov
aas
mov
mov
dec
fcoml
mov
les
jns
test
cmp
jmp
bt
cmp
call
mov
pusha
cmp
cmp
cmpb
pusha
movb
pushl
call
xchg
push
pushf
movl
pusha
call
movb
lea
je
call
jg
cli
or
les
je
neg
cmp
mov
js
xchg
imul
adc
inc
or
test
aam
xchg
mov
jns
adc
inc
pushf
add
fwait
mov
inc
repnz
loop
push
xchg
add
stc
imul
iret
test
mov
push
and
and
test
int3
mov
lds
xchg
cmp
xor
jo
xchg
xchg
xchg
jae
inc
pop
sub
call
cmp
mov
jp
cmp
mov
dec
inc
inc
aad
add
cmp
std
mov
je
jmp
and
rorb
add
add
lea
jmp
mov
jne
adc
jb
gs
call
sbb
fmull
jns
push
adc
push
pop
and
mov
andl
sbb
mov
jl
mov
adc
pusha
lds
or
sbb
pushf
push
and
hlt
out
lds
pusha
sub
pop
lods
jp
mov
sti
mov
sub
cli
lods
popf
xor
cltd
movsb
cwtl
cmp
add
nop
jae
andl
adc
inc
mov
cmp
cs
ja
mov
mov
loope
or
push
mov
call
jmp
cmpb
call
push
les
mov
jbe
cmp
insb
dec
lods
int
xlat
push
mov
or
out
pop
add
mov
push
ss
sbb
bound
mov
les
xchg
cmc
cmp
push
pop
int3
pusha
shrb
jne
mov
insb
pop
jmp
push
inc
popa
stc
jmp
mov
out
fbld
test
push
ljmp
aas
sahf
mov
andb
mov
fs
adc
dec
xchg
dec
pop
push
or
les
cmpsl
test
ljmp
pop
push
sub
mov
js
fmull
out
rcrb
ficomps
cmpsb
insb
daa
jge
sub
test
cltd
fwait
sbb
add
adc
ret
mov
inc
mov
popf
jle
add
fildll
pusha
mov
inc
je
roll
bound
pop
movsl
dec
jbe
mov
jae
imul
rorl
pop
aam
adc
push
xchg
nop
jb
xor
cmp
popa
add
int
les
pop
roll
or
leave
mov
sbb
jl
in
sbb
ss
dec
cltd
addr16
popf
insl
fmuls
push
inc
fnstsw
push
xchg
or
mov
inc
xchg
mov
xchg
dec
cltd
jle
popf
scas
sbb
or
xchg
cmp
mov
repz
daa
pop
add
scas
test
call
iret
xchg
or
adc
push
inc
and
mov
dec
repz
js
std
fcomip
adc
dec
xor
mov
shrl
data16
add
and
xchg
pusha
movsb
aad
rorb
and
cli
mov
popf
push
mov
out
cmc
inc
pop
mov
fmull
or
adc
dec
and
mov
stos
fcoml
lret
popa
shll
mov
shrl
inc
lds
adc
in
push
ret
jge
mov
mov
mov
push
jns
xchg
enter
push
adc
cmp
inc
out
xchg
mov
mov
xchg
adc
arpl
popa
lcall
mov
sbb
into
pop
test
jbe
xlat
sti
and
pop
pop
lock
clc
push
pop
pop
mov
inc
scas
sarb
xor
flds
add
and
jp
push
sar
loopne
fistpll
pop
pop
in
ljmp
cmpsb
adc
mov
and
sarl
lahf
int
nop
xor
mov
sub
out
fwait
or
inc
cmpsl
lret
je
ljmp
nop
neg
ret
imul
push
jecxz
out
fadd
sub
nop
or
les
add
mov
fwait
jl
shlb
pop
add
repz
cli
xchg
mov
adc
or
mov
fsts
shll
mov
bound
add
inc
push
test
mov
pop
outsb
sub
add
std
sub
fidivl
icebp
outsl
sbb
aam
aas
in
out
test
aaa
sti
das
sbb
or
in
add
lret
push
jne
lahf
xor
xchg
sub
iret
ret
mov
mov
movsl
mov
pop
pop
sahf
hlt
sub
push
out
xor
pop
adc
cmc
pop
andb
out
hlt
xchg
cmp
jle
or
xchg
pop
aad
leave
inc
jo
js
push
stos
dec
jl,pt
outsb
nop
jp
or
movsl
inc
or
in
nop
hlt
cmp
or
inc
stos
push
lahf
xor
int3
adc
adc
mov
das
inc
out
arpl
jge
or
cs
jp
inc
lods
sarl
adc
xor
insb
int
push
jae
sti
pop
add
xchg
pop
aas
adc
enter
mov
pop
jne
pop
pop
stc
pusha
add
notb
dec
push
insl
mov
sub
shlb
fldl2t
sbb
push
mov
cltd
sbb
pop
pop
ret
xchg
and
xchg
andb
inc
sub
les
fucomp
pop
lret
add
xchg
xor
and
cmp
hlt
lret
enter
aam
scas
or
and
mov
add
push
xor
inc
in
cmc
pop
andb
sarb
mov
jno
lea
jne
movsbw
call
das
das
call
push
mov
and
sub
jmp
aam
stos
lods
inc
or
mov
jbe
add
sbb
jbe
and
insb
subb
push
stos
pop
lods
inc
push
adc
in
mov
and
mov
sbb
jp
sub
test
mov
mov
sbb
daa
push
divb
lea
jnp
inc
pusha
pusha
not
pushf
dec
clc
clc
cmc
push
cmp
lea
cwtl
push
lea
sets
cwtl
mov
lea
jnp
pusha
movb
pushf
lea
ja
push
push
lea
jns
jb
cmp
cmp
call
rcll
lret
les
sahf
add
push
jno
cmp
shll
dec
fiadds
jae
sbb
out
jae
pop
mov
jo
std
lahf
push
inc
popf
sbb
orb
jo
mov
stos
push
xor
call
push
xor
insb
adc
ret
xchg
jae
movsb
out
push
pop
cmp
into
mov
subb
aaa
cltd
cmpsl
out
mov
inc
add
sbb
add
call
xchg
ja
rcrl
cmp
pop
in
sbb
bound
lods
cli
or
cld
in
ja
mov
jl
adc
outsb
cmc
add
in
xchg
adc
and
into
mov
mov
cmp
repz
push
aam
cmp
jno
adc
call
jne
xor
movsl
decl
push
scas
call
inc
icebp
cmp
test
cmc
outsl
sbb
loope
outsb
pop
loopne
xchg
xlat
xor
mov
add
pusha
push
add
push
add
cli
add
add
add
add
add
imul
cmpsb
outsb
arpl
adc
mov
sar
xchg
leave
push
and
add
sbbl
test
dec
sahf
push
pop
in
push
xor
sub
push
xchg
inc
inc
stc
mov
mov
stos
xchg
inc
sub
insl
dec
and
add
hlt
test
repnz
sahf
xchg
jle
push
jp
fldenv
and
mov
push
cmp
inc
jno
andb
or
mov
les
aaa
pop
jl
andb
das
fildl
hlt
pop
test
mov
arpl
cmp
jbe
or
leave
into
test
and
daa
or
push
nop
dec
sahf
or
lea
mov
push
cld
jmp
iret
aam
cwtl
cmp
fwait
lock
fstpl
dec
mov
popa
adc
jle
push
mov
div
jmp
test
lds
sbb
data16
sbb
and
mov
inc
out
sarb
sahf
sbb
movsl
mov
xchg
mov
add
les
lahf
and
sbb
xor
jg
out
in
adc
insl
cmp
xchg
clc
fnstsw
in
dec
pop
push
and
and
popf
loope
cltd
pop
push
aam
pop
cmp
cmp
mov
or
negb
sbb
mov
push
mov
pop
xor
sbb
dec
push
ret
or
rcl
mov
jmp
push
sbb
clc
and
xchg
rorb
js
or
cmp
iretw
xor
lcall
daa
lret
xchg
mov
push
or
sub
push
push
mov
out
or
jmp
stos
adc
adc
mov
lret
mov
stos
ljmp
adc
out
ljmp
dec
test
enter
adc
push
incb
mov
mov
ljmp
mov
adc
or
leave
adc
out
cmp
mov
dec
pop
add
insb
push
adc
aad
xchg
push
mov
mov
jo
out
mov
xor
pop
inc
add
popa
clc
repz
lret
adc
aas
iret
scas
push
pop
xchg
push
ds
arpl
sub
int3
dec
ljmp
ret
xchg
pushf
jmp
push
sti
inc
xchg
popa
scas
adc
mov
mov
and
call
lahf
jecxz
out
in
pusha
call
pop
jmp
push
test
mov
mov
ja
popa
dec
sti
pushf
and
inc
dec
fiaddl
xor
cmp
hlt
stc
sub
rep
inc
scas
test
mov
lahf
std
in
pushf
jbe
dec
sbb
lea
stos
pop
lds
in
sarb
or
adcb
outsl
pop
movsb
xchg
in
rcll
adc
add
fmull
pop
xchg
dec
test
in
jae
sbb
mov
das
xchg
push
xchg
cmp
adc
sti
pop
push
mov
mov
sbb
adc
jge
into
xor
pop
inc
sahf
in
mov
add
test
call
cmpsl
sub
sub
das
adc
in
test
test
push
pop
add
mov
out
push
push
arpl
push
ljmp
call
fisubrs
mov
gs
adc
xchg
mov
sub
and
out
nop
dec
fcmovnu
sbb
mov
mov
xchg
jae
dec
sub
stos
fwait
shrl
or
jmp
push
jo
test
sahf
fisubrs
mov
dec
jnp
push
inc
xorl
shl
mov
jp
jmp
xor
js
test
js
add
add
push
rcpps
pop
stos
sub
lea
jb
push
lea
je
pushf
sub
clc
pushf
pusha
cmp
pushf
call
les
add
les
lcall
out
jnp
inc
loopne
mov
sbb
push
or
js
rcrb
inc
es
lret
scas
shlb
filds
stos
les
movsl
enter
jbe
or
loope
and
stos
aad
lods
add
out
cli
mov
pop
out
inc
cmpsl
subl
mov
jg
xor
or
loopne
mov
ja
call
sub
lea
jbe
rep
lea
pushf
pushf
not
mov
pusha
pushl
movb
movb
lea
jmp
mov
jno
inc
jecxz
out
outsl
into
icebp
push
cli
fiaddl
nop
in
xor
pusha
inc
iret
movsb
or
push
jae
push
sbb
outsl
mov
pop
lret
xchg
xchg
pop
data16
or
mov
or
sarl
sbb
test
or
mov
test
mov
xchg
lock
cmp
mov
mov
lcall
push
adc
stos
pop
shrb
or
mov
adc
imul
pop
jg
movsb
pop
outsb
dec
pop
mov
aas
stc
stos
sahf
sub
scas
jg
int
push
rorl
jb
into
fmull
lret
test
popa
lret
bound
cld
out
cmp
in
js
inc
leave
hlt
das
or
pop
rorb
adc
push
mov
subl
xchg
push
jl
dec
fadds
and
je
cmp
bt
test
sub
bt
stc
jmp
lea
jae
pushf
jmp
add
dec
insl
popa
addr16
imul
add
inc
incl
setnp
pop
not
lea
mov
pusha
push
mov
setns
lea
pushl
jmp
lea
call
pusha
push
mov
lea
jae
test
xor
push
lea
call
pusha
pushf
pusha
pushl
lea
jae
push
pushl
pusha
xor
movb
jmp
jmp
les
lcall
mov
aad
push
mul
lret
dec
xor
mov
fs
loop
shlb
repnz
adc
dec
aas
stos
jp
shlb
or
cmpsl
stos
mov
mov
mov
mov
dec
add
jo
and
imul
out
sbb
pop
xor
ds
test
je
cmp
xchg
icebp
push
xchg
dec
mov
jp
ja
jle
sbb
out
je
add
push
pop
mov
aaa
inc
add
sub
mov
ss
sbb
bound
mov
sbbb
push
into
lds
mov
dec
push
and
cmp
imul
xchg
push
mov
sbb
xor
or
inc
repnz
aam
icebp
push
out
dec
mov
into
sbb
jb
clc
ret
xchg
mov
pop
loop
xor
dec
xor
cmp
jle
or
mov
push
dec
mov
mov
les
es
push
hlt
cwtl
cmp
ret
data16
mov
repz
aad
pop
dec
out
xor
fnstcw
lock
jo
add
cmp
ja
dec
add
and
popa
xchg
xchg
jp
leave
subl
and
pop
fcomp
dec
xor
jl
outsl
jno
dec
mov
xchg
push
sahf
mov
fsubs
ds
mov
inc
fs
je
fstps
inc
xor
jb
pinsrw
negb
fidivrs
inc
jb
out
arpl
jp
imul
push
addl
psubd
sub
xchg
xor
push
shrb
das
rorl
enter
fld
inc
jae
icebp
mov
jmp
test
aam
frstor
je
popa
ljmp
bound
fstl
bound
cltd
es
out
sub
pop
sub
int3
dec
pop
mov
in
mov
dec
sub
and
jl
loopne
mov
dec
jnp
int3
mov
clc
jmp
movl
pusha
call
jbe
ja
pinsrw
insb
or
shll
lds
shrb
mov
out
sbb
mov
add
and
loope
lcall
mov
dec
xor
xchg
sbb
pop
pop
cli
mov
pop
or
sub
das
int
pop
and
jle
mov
nop
rcll
ds
mov
subb
pop
inc
imul
xor
lods
fiaddl
and
mov
setae
not
sets
lods
bt
cmp
pushf
add
jmp
lea
je
stc
pusha
movl
push
cmp
push
movw
pushf
lea
je
pushf
push
pushl
pushl
lea
jmp
jmp
nop
popa
adc
pinsrw
or
leave
lods
xchg
scas
adc
fstpt
ret
enter
xchg
insb
insl
adc
pop
test
mov
icebp
sbb
adc
in
ds
negl
dec
dec
into
test
jle
lret
cmp
mov
ja
pop
or
stos
mov
out
sbb
push
pop
inc
cmpsl
dec
dec
jp
xlat
enter
aaa
rep
inc
jno
in
nop
mov
mov
daa
dec
mov
jecxz
sti
mov
call
adc
pop
pop
outsb
adc
jmp
jecxz
sbb
mov
mov
cmc
jmp
dec
pushl
lea
jne
or
dec
neg
neg
mov
jmp
cmpb
jmp
pusha
add
adc
rcr
shl
shl
shr
rcr
and
xadd
mov
cmp
btc
add
movzbw
lea
push
mov
push
pushf
pushf
pushf
mov
setne
not
call
pushf
pushl
jmp
fisubl
stc
pinsrw
in
shlb
loopne
in
cmpsl
xchg
cld
dec
imul
lods
outsb
push
out
sbb
ja
inc
shlb
pop
push
dec
push
cmp
ljmp
aam
inc
adc
xchg
orb
imul
and
test
sub
or
daa
iret
stos
outsl
xorl
popa
lods
test
addr16
and
fs
xor
fistpll
cs
ret
test
aas
sahf
mov
arpl
xor
jg
leave
jo
jg
mov
mov
bound
fistl
jnp
mov
lds
mov
cmp
push
dec
or
or
cltd
push
lds
mov
test
pusha
pushf
lea
je
jmp
jle
mov
jo
ss
cmp
mov
lret
cmc
fnstsw
rclb
cld
outsl
push
loop
shlb
dec
cmp
push
cld
sti
mov
cmp
lahf
dec
popl
mov
pop
or
out
lods
dec
scas
cmpl
icebp
mov
scas
cmp
lret
xor
cmp
mov
addr16
pop
leave
xchg
jne
out
rcrl
pushw
leave
rcll
xchg
stc
pop
mov
add
jno
std
and
or
ja
pmaddwd
add
pushf
push
call
mov
lea
ja
setb
shl
ror
sub
setg
xor
dec
add
bsr
mov
pusha
sbb
mov
cmp
call
scas
icebp
sub
pinsrw
pushf
mov
call
xor
mov
fwait
push
jmp
dec
fwait
xor
iret
mov
aaa
faddp
scas
testb
jecxz
scas
xor
push
and
inc
stc
shl
int3
pop
andb
cmp
sub
lahf
lock
or
insb
sbb
or
call
lret
leave
xchg
mov
lret
pop
cltd
lea
fisubrs
cmp
popa
std
lods
gs
sub
out
rcll
test
pop
fwait
pop
adc
movsl
incl
stos
adc
das
adc
sbb
loop
xor
mov
mov
outsb
call
fisubrs
notb
sub
stos
sti
jnp
push
popf
sub
lock
cmp
les
pushf
sbb
xor
and
pop
xor
cs
cld
jg
ljmp
xor
inc
and
mov
mov
or
inc
push
or
pop
mov
sbb
pushf
jae
and
je
cld
movsl
mov
jae
stc
sbbl
push
sbb
cmp
or
call
jmp
jno
mov
pinsrw
call
adc
fsubrl
call
pop
lea
push
sbb
add
pop
xchg
bound
mov
sarl
fldl
subb
inc
ret
adc
adc
and
pop
lcall
les
in
xchg
mov
mov
sti
pusha
les
call
scas
imul
repz
cmpsb
lds
pop
outsb
pop
pop
jg
lret
dec
cmp
insb
clc
lret
pop
roll
sbb
xchg
lcall
imul
sbb
and
jns
xchg
hlt
pop
and
jl
lahf
push
pop
push
adc
std
out
xor
add
dec
or
je
add
pusha
mov
lea
ja
clc
pushf
jmp
lea
ja
cmp
bt
inc
shl
sub
pushf
sub
add
lea
shld
mov
rcr
bt
call
dec
xchg
or
pinsrw
js
jnp
jnp
popf
push
adc
xchg
mov
lahf
mov
add
icebp
enter
jb
cmp
push
inc
enter
xor
subb
loopne
sub
mov
imul
mov
or
jg
inc
cmc
pinsrw
notb
ret
fs
fiaddl
lcall
loope
ja
push
imul
jp
push
stos
push
mov
xchg
in
rcl
aad
jg
out
jl
mov
hlt
les
dec
ret
bound
in
movb
cld
shlb
icebp
outsl
adc
daa
enter
and
call
dec
ja
xchg
btr
add
mov
add
mov
btc
mov
push
test
shr
bt
pushf
cmp
jmp
fcomp
push
cmc
pinsrw
daa
pop
call
push
stc
sbb
xor
in
cld
mov
mov
jecxz
out
ficomps
shlb
cmpsl
adc
insb
repnz
je
sub
fs
push
inc
sbb
int
test
pop
fsts
xor
clc
add
int3
clc
sbb
inc
cmpsl
adc
pusha
push
bound
cmc
popf
mov
pinsrw
cli
lahf
cmp
cld
mov
adc
mov
lahf
das
stc
out
pop
stc
or
stos
add
dec
xor
arpl
and
pushf
into
int
adc
dec
push
hlt
repnz
lods
mov
mov
xchg
es
leave
jb
enter
mov
sbb
sbb
or
push
nop
mov
mov
mov
shlw
inc
outsl
or
outsb
add
repnz
negb
rcll
faddl
adc
sbb
adc
sbb
jae
stos
mov
test
cmc
cmp
push
pushf
lea
jb
cmc
bt
cmp
stc
cmp
call
xchg
xchg
push
repz
lret
stc
lcall
dec
hlt
xlat
mov
ret
in
out
lods
lock
stos
cmp
add
addr16
push
cmp
cmp
mov
cld
cmp
test
fs
mov
stos
mov
or
iret
fwait
mov
add
or
jmp
insb
aaa
insl
pop
mov
xor
orb
or
pushf
cmp
cmp
push
pusha
lea
jae
dec
dec
mov
btc
mov
sub
lea
shl
mov
bt
cmp
cmc
sub
test
repnz
push
pushf
movb
call
push
lea
jae
pushf
pusha
call
sub
les
mov
xor
xchg
sahf
outsb
mov
and
mov
push
jg
sbb
popa
sub
aam
cmpsb
fsubs
in
mov
mov
sti
jmp
jle
std
adc
xchg
xlat
loope
arpl
notl
into
push
out
pop
mov
ret
cmp
add
mov
cmp
push
cli
xor
pinsrw
mov
xchg
ja
jl
test
dec
in
pop
or
scas
cmp
jbe
mov
lods
daa
in
icebp
dec
push
or
push
push
insb
mov
cmp
lea
push
xor
jge
xchg
dec
in
fadds
aaa
cmp
icebp
subb
rcll
outsb
pop
pusha
adc
es
popa
lds
cltd
call
and
out
mov
pop
imul
sub
pop
xor
out
shl
add
je
push
push
jb
or
jp
or
sbb
test
cmpsb
int3
mov
rorb
enter
mov
pusha
pusha
movl
jmp
ja
jae
pinsrw
sarb
push
mov
xor
sbb
jno
and
or
out
xchg
mov
mov
adc
or
xchg
cmc
outsb
repnz
mov
jne
mov
and
inc
aaa
xor
cltd
out
inc
sub
pop
jns
cld
dec
cmp
decl
mov
aas
test
push
cmp
inc
fisubrs
xchg
xchg
jae
cmp
sbb
inc
cmpsl
dec
jb
add
pcmpeqb
movsl
and
nop
negl
pinsrw
hlt
fdivrs
insl
aaa
jl
lods
fs
jge
xchg
mov
or
rol
fwait
iret
sub
cwtl
mov
aam
int
xchg
xchg
push
sub
outsl
inc
jae
mov
sub
mov
sbb
lahf
xchg
mov
imul
inc
sub
enter
sub
movsb
add
adc
xchg
xchg
cltd
jae
jmp
ds
mov
dec
pop
and
out
xlat
shlb
push
cmp
sbb
scas
call
pop
inc
inc
out
pinsrw
imul
enter
mov
or
fs
sub
cmp
or
add
lea
adc
cwtl
mov
iret
xorl
add
mov
dec
ljmp
sahf
sub
cwtl
cmpsl
ds
repz
cmpsb
sub
jnp
mov
lea
xchg
and
repnz
rolb
loope
out
leave
lock
fwait
testb
xchg
negl
subl
call
lods
cmp
cmp
mov
push
mov
test
fs
cwtl
stc
jge
mov
loope
pop
fwait
sub
dec
daa
pop
mov
ljmp
pushf
fwait
rcr
fistps
cmpsb
stos
or
int
jmp
testl
dec
fld
test
push
xor
and
je
ret
cmc
sbb
ret
dec
sub
mov
cmc
add
cmc
jmp
clc
cmp
cmc
sub
cmc
stc
cmp
call
pushl
inc
pushf
jmp
cmp
pusha
jmp
stc
cmp
movzwl
adc
shld
dec
mov
cmp
jmp
outsl
insb
xor
cs
insb
add
fmuls
pinsrw
mov
cmc
cltd
stc
pop
cli
dec
xor
adcb
mov
scas
cltd
filds
mov
subl
mov
mov
push
adc
pop
sbb
mov
inc
sbb
jmp
cmp
cmp
adc
inc
inc
and
arpl
testb
pop
cmc
negl
sbb
out
les
lret
dec
sbb
test
adc
pop
ljmp
int
mov
lret
int3
ds
push
mov
fsts
xor
lea
ja
call
sub
les
and
hlt
outsb
cld
pop
xchg
pop
xchg
xlat
push
push
push
sarb
cmpsl
cmc
les
enter
adc
xchg
and
jl
push
lods
mov
into
pop
mov
arpl
push
movsl
hlt
mov
jns
mov
out
and
inc
and
mov
push
lods
xlat
andb
mov
lea
pinsrw
xor
out
sub
shrb
pop
inc
arpl
push
push
scas
mov
dec
adc
mov
jmp
xor
aad
icebp
or
adc
test
js
xorb
in
sbb
out
lcall
dec
add
insl
inc
popa
clc
cmpsl
mov
js
dec
xlat
and
xchg
fbld
adc
stc
inc
push
insb
sar
pop
dec
out
adc
sbb
cmpsb
dec
cmp
cmp
in
pinsrw
test
scas
into
out
sarl
enter
add
jle
das
jb
or
inc
xchg
outsb
xchg
insb
call
repnz
ret
in
fistps
push
inc
xchg
add
mov
jb
jno
jne
pop
fsubrl
xchg
sti
fisubrl
imull
xchg
push
lock
aad
das
sbb
mov
pushf
es
cmp
aas
lcall
popf
or
xlat
movsb
mov
pop
or
add
dec
xor
jl
or
movzbl
mov
mov
or
mov
push
bt
bt
and
bt
test
pushf
test
add
pushf
push
pushf
lea
jmp
call
inc
dec
inc
add
neg
sub
xchg
rol
sbb
mov
rcl
sar
cmp
ror
mov
test
bt
push
neg
dec
ror
mov
jmp
push
jmp
test
ljmp
fs
daa
mov
inc
js
mov
and
mov
push
ds
sub
addb
imull
mov
push
xorb
mull
inc
adc
mov
dec
mov
out
std
xchg
adc
dec
adcb
ss
inc
pop
and
dec
sar
lret
ret
gs
pop
movb
mov
cmp
xchg
add
or
fnstcw
mov
insl
repz
arpl
mul
dec
push
movb
jmp
call
cmp
add
shl
xchg
ja
std
sbb
loopne
xchg
mov
sbb
gs
push
hlt
mov
cltd
aad
cmpsb
test
or
fisttpll
jge
scas
loopne
loop
arpl
push
outsb
aam
inc
xlat
cmp
pop
pop
cltd
pusha
mov
sbb
mov
adc
add
inc
add
jae
clc
dec
cmc
sbb
mov
insl
repz
inc
ret
lods
sbb
aaa
mov
ret
sarw
or
adc
push
ljmp
icebp
fiadds
enter
ljmp
std
popa
and
sub
insl
int
popf
imul
mov
jl
ffree
dec
sbb
xor
popf
pop
sub
adc
insl
in
jo
cmpsb
jbe
add
adc
adc
enter
push
sub
and
xchg
and
ret
ljmp
and
ljmp
inc
cmp
dec
shll
addr16
pop
lods
scas
shll
mov
leave
pop
shlb
xor
test
iret
jne
add
adc
imul
outsl
clc
inc
hlt
fwait
inc
or
out
test
mov
call
xor
ja
and
call
adc
aas
in
sbb
int
or
push
push
aam
mov
lcall
outsb
cli
jae
inc
jb
or
aad
ds
pinsrw
jmp
mov
movsb
sub
decb
cmpb
or
pop
xor
dec
adc
add
test
fwait
jbe
push
sbb
mov
pop
or
xor
shll
mov
inc
test
add
cmpsl
mov
sub
ljmp
pop
mov
jecxz
sub
jns
mov
xor
call
aad
mov
cmp
and
stc
jb
cmp
adc
lea
into
mov
out
out
pop
fists
jno
dec
pop
ret
dec
push
xchg
enter
mov
sub
lods
hlt
adcl
pop
imul
add
adc
faddl
inc
add
aad
sub
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
aam
add
jmp
jle
cmp
pinsrw
pop
cmp
loope
daa
leave
je
bound
sbb
xchg
adc
jge
add
testl
out
cli
out
or
pop
inc
popf
in
push
aam
inc
dec
popa
jle
mov
imulb
cmp
xchg
movsl
mov
dec
fs
es
pop
jne
push
out
dec
jb
push
sar
cmp
xchg
push
adc
mov
cmp
mov
lods
xchg
js
fbld
add
scas
in
mov
and
je
jmp
pusha
pushf
movl
push
push
lea
jmp
pushf
call
cmp
jmp
push
mov
lea
ja
shr
sub
shl
or
shl
shr
add
shr
shr
ror
mov
and
cmp
mov
jmp
cld
push
mov
jae
jnp
add
imul
jg
repz
jnp
pusha
xchg
adcl
and
push
mov
fucomi
push
xchg
pop
push
repz
mov
rorb
clc
xlat
push
mull
xchg
mov
ds
inc
dec
pusha
rcr
adc
data16
mov
std
loope
in
aad
or
scas
sbb
scas
pushf
push
movl
mov
movb
lea
jmp
pusha
pushfw
popw
push
bt
pushf
rcl
mov
pushf
call
into
xchg
or
pinsrw
fiaddl
stc
movsl
xlat
mov
or
shll
adc
inc
mov
xor
scas
xlat
add
cmc
pop
mov
aam
idivb
jmp
add
nop
push
add
adc
xchg
cmp
mov
jmp
jno
out
les
inc
out
lock
pop
adc
push
jmp
cmp
cmp
mov
jae
mov
sti
mov
mov
out
aam
addl
adc
mov
xchg
adc
pop
aam
jae
sbb
dec
negl
ret
inc
jg
repnz
repnz
push
out
xor
cmp
arpl
xor
incb
dec
jae
cs
push
mov
xchg
sti
popf
inc
imul
outsl
push
lahf
out
cmp
adc
fadds
inc
add
adc
lock
inc
ds
rcrb
cmp
xchg
stos
movsb
cmp
call
mov
call
sbb
mov
repnz
dec
cmp
sbb
pop
inc
xor
cvtdq2ps
xchg
add
lret
ss
sub
shrw
rcrb
test
test
cmp
jns
mov
sbb
fiaddl
inc
inc
add
ds
adc
lahf
lock
movsb
mov
push
or
push
je
xor
push
dec
sub
sub
out
mov
lock
int3
int
push
cmp
out
stos
add
imul
sub
lods
popa
xchg
loop
in
lock
call
pop
fbld
imul
jb
test
mov
into
mov
rorb
in
dec
iret
adc
in
repz
in
push
je
sub
je
mov
dec
mov
dec
aaa
std
hlt
jns
repnz
insb
sbb
test
lods
cmp
xor
mov
fs
ret
push
jo
push
jle
out
loopne
cmpsl
xor
sub
dec
inc
lock
adc
push
mov
fists
ja
mov
aaa
sbb
cld
push
push
jae
fsubrs
jbe
rclb
shlb
popa
push
arpl
int
lock
jns
mov
mov
jns
nop
rcr
mov
les
rcrl
sbb
inc
push
enter
lret
dec
pop
push
lahf
js
sbb
and
cltd
int
lods
in
out
mov
pop
jb
mov
mov
inc
inc
out
imul
xchg
jecxz
outsb
shr
push
test
mov
in
pop
dec
addb
je
mov
push
push
movsb
jle
jb
xchg
xor
push
mov
sbb
push
mov
or
adcl
arpl
inc
push
fsubs
mov
imul
shrl
lret
gs
into
loop
dec
insb
lahf
jle
mov
xlat
pop
movntq
xchg
ljmp
rcr
jg
push
dec
sarb
in
addb
cwtl
loopne
jmp
mov
insb
inc
jmp
cmp
fnstsw
lea
dec
lods
mov
sbb
out
out
lock
push
lret
cmp
das
dec
imul
fldl
xchg
inc
mov
inc
in
xor
in
fistpll
insb
out
jmp
mov
fs
outsb
jb
jbe
mov
and
pop
mov
sarb
bswap
push
std
test
outsl
sub
rcll
xor
mov
scas
cmp
repnz
pop
jl
addr16
insb
push
inc
imul
out
movsb
pop
mov
mov
push
cmpsl
add
mov
and
inc
imul
inc
insl
jno
aad
inc
and
mov
movsl
out
or
cld
adc
shrb
xchg
out
call
jg
mov
gs
push
stc
pop
aaa
and
lock
inc
jns
mov
push
notb
ret
js
lock
add
xor
push
add
outsb
aas
adc
jne
mov
sub
mov
dec
jbe
std
adc
sbb
jge
fs
xchg
sbb
sbbb
xor
fidivs
cwtl
nop
fistps
lods
outsb
in
ljmp
clc
int3
je
sbb
pop
cwtl
mov
cs
mov
cmpsl
outsl
iret
out
loopne
sbb
inc
mov
cmp
shl
gs
imul
lods
xchg
js
jns
inc
mov
fcomps
subb
push
sub
dec
push
push
repnz
je
icebp
cmp
cmpb
jl
xlat
jb
inc
pushl
loopne
std
inc
push
je
cltd
rol
inc
adc
imul
std
xchg
inc
ljmp
xor
notl
in
or
cmpsb
add
xchg
mov
sahf
loopne
cwtl
gs
xchg
add
sub
in
xlat
mov
push
out
pop
mov
pusha
aas
adc
xchg
mov
movsl
data16
add
sbb
divl
lods
lea
rolb
mov
lret
in
fists
dec
int
enter
mov
jo
movsl
jmp
insl
inc
imul
inc
outsb
add
pusha
loope
push
imul
test
movsb
stos
push
out
mov
inc
jo
push
and
repz
mov
rorb
xor
xchg
adc
xchg
clc
mov
in
insl
popl
xchg
arpl
lret
insb
out
ljmp
gs
loopne
dec
movsb
jae
popa
inc
mov
push
fdivrl
hlt
data16
jns
inc
push
insb
insb
cmp
xchg
mov
icebp
int3
or
je
xor
das
cmp
les
mov
in
cli
jl
insb
sti
je
aas
lods
pusha
jae
cltd
jmp
pop
fwait
pop
jg
cmpsb
in
lock
jmp
subb
jnp
xor
sbb
inc
adc
std
das
loopne
gs
aaa
jne
xor
xchg
sbb
and
mov
je
clc
mov
shlb
shrb
dec
insl
call
cmp
push
mov
arpl
ljmp
cwtl
xor
pusha
jg
sub
mov
jb
lock
movsb
sub
sbb
outsl
pop
fs
mov
push
das
fistps
gs
leave
das
cld
adc
xor
outsb
jmp
ret
call
push
xor
movsb
dec
xchg
inc
ljmp
mov
std
or
movsb
ror
ds
add
push
je
in
push
mov
out
cmp
jle
js
add
enter
ret
push
nop
add
cmp
std
sub
dec
dec
cli
out
call
mov
dec
cmp
daa
xchg
les
mov
stos
sahf
cmp
dec
adc
inc
outsl
cwtl
sub
pop
fsubs
je
jb
xchg
fucomp
clc
pop
mov
insl
push
sub
cwtl
daa
jb
mov
les
aaa
std
push
scas
push
dec
andb
into
sbb
fs
movsl
out
je
adc
push
shlb
adc
adc
sbb
jo
imul
xadd
xchg
int
dec
jg
pop
add
aad
aas
mov
jg
scas
push
sub
add
mov
cld
jae
icebp
jg
in
rorb
push
idivl
and
icebp
pop
dec
imul
out
out
data16
mov
cmp
jns
lahf
std
in
and
mov
fsubrl
push
jmp
sub
hlt
jns
pop
jns
xor
pop
mov
lahf
test
push
jns
nop
and
jo
push
movl
popa
pop
sbb
xchg
jnp
mov
testl
outsl
fs
jo
fisubrl
popa
jns
mov
sub
jo
js
arpl
inc
out
pop
push
inc
inc
jo
adc
imul
sarb
lock
sbb
sub
out
push
into
jle
insl
push
jb
daa
cli
out
sub
pusha
inc
lock
xor
dec
imul
jo
sub
ljmp
dec
pusha
xor
call
cmc
loopne
loopne
insl
pop
sbb
ljmp
jne
jg
aas
in
out
or
jb
call
cmp
jmp
insl
addl
jl
loope
dec
outsl
jo
daa
jo
jae
cmp
insl
imul
das
jp
out
lods
or
je
mov
sub
jp
and
xor
dec
sarb
insl
sti
ds
std
and
je
loope
cld
stc
cmp
outsb
imul
loop
outsl
out
push
sub
jne
jo
jne
je
call
sub
insl
cmpsb
insb
dec
jbe
arpl
jg
jle
hlt
jp
jb
sub
divb
dec
in
bound
cmp
lock
fs
outsb
sub
push
outsl
loopne
cld
jbe
cli
pop
inc
cld
dec
call
push
push
ljmp
lock
in
clc
jg
sub
test
data16
imul
cmpsl
ljmp
push
std
shr
in
jne
lock
fs
and
out
dec
ljmp
dec
out
jmp
das
ja
arpl
scas
jle
std
pavgb
lock
icebp
in
cld
outsl
arpl
mov
in
in
jne
jmp
inc
lods
out
and
dec
das
insl
shr
push
std
ljmp
popf
clc
fs
add
lods
insl
sbb
scas
ja
shlb
popa
icebp
lret
shrb
jb
or
xchg
push
pop
je
adc
out
mov
mov
dec
andb
arpl
ret
push
lahf
hlt
jmp
inc
inc
xor
and
enter
outsb
push
or
nop
pop
inc
out
jg
mov
outsb
pop
out
mov
shlb
les
mov
push
cmp
fs
jo
adc
dec
outsb
lret
fmuls
jmp
add
stos
push
in
fstps
mov
rcl
dec
fsubs
cmp
std
mov
orb
out
fwait
mov
push
scas
movsb
pop
jne
mov
testb
cmp
cld
xchg
push
pop
inc
adc
dec
in
xchg
stc
adc
xchg
inc
loop
in
xor
gs
dec
js
push
adc
imul
std
icebp
pop
fnsave
insl
scas
xchg
xchg
je
js
fs
movb
mov
fmul
gs
dec
add
pop
sub
paddsw
adc
jne
adc
test
add
aad
adc
enter
bnd
xchg
call
and
mov
out
push
in
jno
jle
pop
shlb
mov
xchg
push
jns
xchg
dec
sub
add
nop
jb
xchg
dec
in
sbb
push
jbe
jge
es
fadds
out
rolb
dec
push
outsl
std
sbb
das
mov
rclb
add
dec
adc
movsl
sarb
fistpll
in
add
push
sbb
lcall
popf
mov
mov
inc
scas
popa
je
mov
adc
or
and
out
fs
mov
std
adc
iret
jo
addb
jmp
aad
push
aaa
popa
xor
aam
fwait
sub
cwtl
ja
and
call
mov
insl
dec
rcl
pop
add
cmpsb
sbb
push
mov
add
sbb
in
out
test
mov
lods
clc
inc
movsl
in
aas
add
outsb
adc
cmp
nop
dec
mov
inc
add
in
fwait
das
xor
pop
cmpsb
out
jno
fs
add
addr16
imul
outsl
add
mov
movsl
movsb
jg
mov
imul
xchg
mov
outsl
jecxz
push
popa
movb
imul
in
adc
les
inc
sub
mov
sbb
imul
pop
push
outsl
mov
dec
fmull
pcmpeqd
adcb
daa
je
push
sub
call
imul
push
insl
cmp
sub
sarl
lea
aas
cmpsl
cmp
adc
xchg
add
loop
push
in
out
movsw
pop
and
mov
jnp
xor
mov
push
std
jge
fs
jb
dec
xchg
pop
out
lret
sbb
xchg
dec
xorb
pop
adc
addr16
into
xorb
data16
xchg
mov
jnp
int3
scas
push
clc
int
jo
lds
adc
outsl
cmp
sbb
add
push
mov
jo
movsl
addr16
stos
jb
lds
push
mov
push
test
push
sbb
push
jns
xor
mov
jb
aaa
je
pop
push
push
bnd
cli
shr
aad
scas
scas
ficompl
dec
scas
int3
movntq
gs
je
data16
outsb
jecxz
pusha
shll
inc
daa
inc
mov
sbb
fsubs
pop
cld
shlb
mov
cmpsb
scas
cmp
call
movsl
nop
pop
jo
movsb
int3
int3
xchg
out
ljmp
mov
mov
dec
mov
call
das
loope
xor
adc
mov
stos
mov
or
inc
mov
jbe
das
sub
dec
insb
movb
outsb
outsl
and
outsl
jg
sub
js
sahf
rolb
xor
in
out
add
clc
cwtl
fs
fisubrs
jl
pop
shrd
cmp
xchg
hlt
cmp
mov
js
mov
je
out
fildll
mov
push
cld
dec
enter
mov
jnp
fucomp
mov
or
outsb
inc
mov
lds
inc
jno
popf
aas
dec
clc
ret
loopne
adc
inc
jne
lock
jno
out
std
fs
addr16
pop
shl
repnz
das
xor
lods
cmpsb
orl
cmc
outsl
mov
lds
inc
je
fwait
cwtl
aad
add
jmp
lret
sbb
je
pop
push
sub
insl
dec
push
stos
inc
pop
les
jne
jle
int
mov
out
mov
shlb
jae
out
cwtl
adc
rcrl
xor
movsl
pop
clc
imul
aaa
in
push
rcl
test
sbb
pop
loopne
testl
pop
sub
lock
int3
pop
pop
jns
pop
push
fldl
sub
popa
rorb
ljmp
dec
sbb
pop
xor
push
push
jg
add
das
rcrb
jae
push
call
push
loop
popa
lock
mov
das
fdiv
pop
icebp
out
or
clc
push
mov
das
xor
outsl
xlat
lahf
push
ds
fmuls
jmp
movsl
jbe
and
pop
push
jae
clc
das
stos
adc
cwtl
outsl
icebp
iret
aaa
jne
sahf
xor
cmpsb
popa
inc
insb
je
iret
jl
clc
movsb
mulps
addr16
cmc
int3
jb
sbb
lods
inc
nop
sub
sbb
pop
push
dec
jno
push
js
and
clc
outsl
mov
repz
sub
push
out
mov
in
jge
out
fisubrs
bound
ficoml
dec
ja
pop
aaa
and
sub
pop
cmp
xchg
pop
push
inc
mov
orl
imul
enter
mov
je
inc
add
repz
mov
pop
enter
cmp
adc
jb
mull
sbb
cmp
inc
jo
in
lods
inc
dec
pop
shrl
les
and
lds
stos
test
pop
jbe
xchg
test
mov
mov
lods
cmp
cmp
and
and
jae
and
jb
aam
jno
inc
bound
stos
in
lcall
pop
jno
and
lcall
mov
push
adc
xor
fstps
sub
push
xor
cmc
daa
ja
jb
push
sbb
je
scas
dec
dec
insb
arpl
int
or
insl
xorb
jl
dec
push
popl
out
scas
sahf
imul
adc
out
push
js
icebp
addr16
mov
jns
ret
lea
mov
jl
mov
das
test
jg
popa
mov
je
je
aaa
push
sub
jb
xor
push
mov
sti
lock
mov
xor
pusha
mov
jno
sub
fcoml
iret
mov
in
mov
shrb
xor
jne
mov
xchg
lock
mov
pusha
fdivp
mov
cmp
xchg
sub
dec
lock
push
ljmp
sarl
pop
dec
ds
out
fs
pop
idivb
out
xor
cmpsb
gs
mov
mov
cmc
dec
and
lahf
arpl
sahf
cmp
jnp
jmp
mov
call
shlb
loopne
std
fcmovnb
mov
mov
popf
and
ja
cmp
lret
jl
je
sahf
pop
dec
imul
sbb
inc
cmp
fldt
clc
lea
hlt
adc
std
sahf
cmp
jecxz
les
or
mov
jmp
jbe
inc
xchg
stos
mov
sbb
xor
cld
cwtl
jmp
outsb
aas
and
mov
pop
pop
inc
jo
pop
imul
outsl
push
xor
mov
imul
gs
jl
jmp
sub
daa
pushf
ja
aaa
mov
jl
inc
nop
sahf
jg
insl
movsl
repnz
aas
pop
insl
inc
loopne
dec
sub
scas
lea
jns
in
clc
int
inc
pop
jecxz
stos
pusha
out
lea
lock
inc
mov
push
loop
jb
je
data16
sub
insl
xchg
mov
dec
cmp
das
test
popa
pushf
aad
mov
idiv
or
dec
call
dec
jbe
mov
pop
mov
or
test
jne
iret
mov
dec
push
popa
push
dec
adc
push
push
pop
cmp
mov
sub
dec
pop
pop
lods
movsl
cli
cld
dec
sbb
mov
enter
cmp
xor
aas
lahf
icebp
ret
cmp
push
popa
jno
std
in
cld
pusha
fs
push
pop
adc
sub
js
sub
cmp
jge
pop
jns
or
fs
push
mov
aam
push
push
out
ds
ror
inc
push
movsl
jg
xchg
and
push
in
lahf
insb
andl
imul
pop
dec
push
dec
adc
incl
je
xor
movb
push
jmp
inc
data16
sbb
lds
cmp
int3
adc
jno
sbb
pop
shlb
gs
mov
in
xlat
notl
fsubr
pop
sbb
dec
ret
xchg
xchg
addr16
push
inc
xchg
jnp
jno
shl
push
push
pop
sbb
jb
lds
or
push
iret
sbb
fsts
mov
popf
std
xor
push
test
xchg
bnd
pop
xchg
pop
jle
lods
shrb
imul
daa
outsl
push
cmp
cmpsl
or
jle
push
mov
push
sub
lea
testb
mov
sbb
xchg
sub
push
xchg
cltd
pop
outsb
xor
mov
cmpsl
call
pop
daa
dec
push
call
icebp
popf
dec
pop
jo
adc
out
mov
call
test
loopne
lds
push
inc
jl
lock
je
mov
mov
pop
mov
pop
int
cmp
sbb
pop
jg
fisubrs
pop
and
rorb
dec
inc
sbb
gs
push
add
mov
std
mov
scas
push
jb
cmp
mov
mov
popf
outsb
adc
lret
shlb
enter
lods
mov
inc
dec
addr16
dec
xor
aas
and
shl
rclb
xchg
jmp
xchg
fldcw
pop
jp
pop
xchg
inc
inc
gs
stc
pop
sahf
addb
jge
daa
rcll
xchg
pop
inc
jmp
iret
dec
mov
daa
daa
mov
fninit
pusha
mov
out
cmp
icebp
push
xor
mov
push
pop
cld
push
movsl
inc
cli
push
mov
ja
lret
int
jo
mov
push
jne
cwtl
add
push
mov
adc
lds
std
fildll
mov
sub
movsl
push
int3
in
inc
outsl
out
sarl
push
push
push
xchg
stc
or
xchg
stos
jns
sti
shll
push
inc
pop
loop
ret
shlb
pop
in
jne,pn
gs
in
inc
loop
sub
daa
jmp
addr16
push
ljmp
push
je
push
dec
push
insb
and
fildll
rep
les
sub
dec
pop
sbb
movsl
negb
xor
cmp
xor
cli
jp
out
lret
sbb
aam
mov
lret
push
jne
xchg
pop
out
cmp
scas
pop
dec
mov
clc
pop
fidivrs
outsl
daa
add
push
dec
push
ss
rcr
adc
pop
lock
lods
push
lods
stos
mov
leave
daa
mov
fs
out
pop
dec
dec
nop
sub
jnp
sbb
cs
call
fsub
je
inc
insb
popa
xchg
inc
xchg
sub
cli
add
sti
leave
aas
out
xchg
in
mov
sti
inc
pop
je
push
mov
outsb
loopne
pop
scas
jmp
push
rcrb
push
dec
dec
outsb
pop
xchg
mov
clc
aaa
xchg
lock
sub
xor
sub
dec
cmpsb
popf
iret
xor
dec
adc
and
fisubl
lods
js
and
adc
jge
add
test
mov
pop
lret
adc
or
loope
aam
ss
cmpsl
cli
sahf
mulb
mov
insl
cmp
outsb
add
cmp
sbb
test
out
pop
xor
das
sbb
mov
jmp
in
cli
xchg
addr16
les
cs
cmp
xchg
aam
out
insl
jo
je
xchg
ljmp
push
dec
fsubs
dec
addr16
icebp
mov
std
dec
sar
xchg
mov
push
lret
dec
and
rcl
loop
shll
stc
imul
inc
jno
mov
inc
mov
fadds
shrb
scas
popa
inc
inc
fs
out
sub
push
jmp
out
insl
push
xor
xor
insb
fisubrs
sbb
mov
loope
xchg
popa
ret
jae
sbb
push
es
ret
mov
mov
jb
or
mov
in
ja
lds
fs
in
mov
jns
sbb
inc
cmp
xorb
popa
mov
fs
sub
mov
sbb
in
iret
inc
stos
push
insb
xchg
and
in
dec
out
mov
sbb
cmp
xor
popa
mov
or
push
lcall
xor
mov
shrl
scas
sub
lds
test
fisttps
and
add
mov
aam
jbe
imul
scas
in
fnstcw
inc
les
push
nop
sub
adc
cmp
push
pop
lods
mov
jmp
je
insb
cmp
insb
jbe
sbb
xchg
out
adc
stc
adc
out
add
in
jmp
push
xor
inc
mov
inc
ja
ljmp
push
iret
popa
ds
insl
sub
add
gs
into
gs
jae
shlb
cmp
mov
int
push
lcall
adc
icebp
pop
lgs
stos
push
inc
adc
xor
or
mov
movsl
fldl
fs
sarl
outsl
in
enter
inc
push
cli
test
sbb
pop
fists
sbb
scas
cmp
test
divl
mov
mov
rcrb
movsl
movsw
lcall
xor
inc
imul
xchg
jmp
or
movsl
or
pusha
cld
out
push
adc
pop
out
hlt
or
leave
popf
jns
mov
lods
xor
cmp
dec
sarb
and
fldt
cmpl
cmc
cmpsb
jle
push
lahf
pop
sbb
lods
scas
xchg
pusha
push
jmp
test
jg
es
xor
push
mov
outsl
inc
aaa
das
cmpsl
mov
xor
lahf
add
int3
inc
sub
mov
inc
push
sbb
incl
mov
xor
mov
ret
xchg
movsl
imul
in
and
arpl
aad
dec
hlt
push
movsb
je
daa
jo
inc
outsb
push
cmp
insb
fildll
cmp
rolb
sub
fwait
int3
js
fmuls
and
inc
aaa
jne
xor
dec
pop
pusha
addl
or
cmp
dec
es
sub
fidivrs
bound
mov
fs
cmc
jb
ljmp
pop
add
imul
inc
dec
xor
out
and
addr16
push
cmp
repnz
mov
in
out
insl
mov
cmovp
movsb
js
sbb
push
daa
mov
aaa
icebp
dec
jns
push
cs
mov
pop
pop
pop
jae
into
mov
push
xchg
in
aaa
or
push
xchg
fmulp
sub
mov
std
insl
les
lock
popf
negb
clc
jmp
roll
xor
popl
or
sbb
mov
inc
pop
mov
push
xchg
adc
je
xor
dec
gs
push
sahf
xor
je
cwtl
fldenv
ret
cmpsl
cmp
push
add
icebp
je
inc
push
or
mov
pop
jle
jmp
int
test
and
pop
mov
push
pop
das
pop
push
or
pop
lret
subb
stos
pop
lea
insb
pusha
out
enter
jo
mov
xchg
pop
jb
adc
ljmp
mov
pop
fsubs
shlb
push
fbstp
push
pusha
call
ss
cmp
mov
adc
inc
sbb
sbb
rclb
mov
xchg
xchg
sbb
les
sbb
imul
inc
lock
jge
sti
lret
gs
mov
test
es
movsb
nop
loopne
pop
jmp
mov
push
icebp
ds
dec
and
sub
mov
sub
hlt
out
lods
xor
xor
stos
ds
lods
push
push
and
push
adc
lock
pushf
add
jno
and
inc
push
pop
sarb
dec
cmp
jge
fs
insb
xchg
xor
sbb
pop
and
sbb
enter
pop
je
aad
stc
fdivrl
adc
add
adc
je
cli
popa
je
ds
adc
push
in
rcll
pop
cmp
js
pusha
fs
cs
fwait
in
or
sahf
insl
out
mov
iret
push
mulb
aam
pop
in
ss
cmp
outsb
je
push
xor
pop
clc
out
sti
mov
push
push
or
and
movsl
jno
adc
into
or
inc
dec
sarl
cmp
and
dec
cmp
jmp
adc
push
or
aas
dec
dec
mov
stos
cwtl
repz
clc
daa
movsb
fldcw
cmp
ror
in
inc
jae
pusha
cmpsl
outsl
dec
sti
push
adc
bound
cmc
sbb
sub
es
mov
push
and
and
mov
int3
pop
jmp
stos
add
adc
mov
pop
in
cli
fbld
adc
fidivrl
mov
clc
adc
popa
xor
or
es
mov
sub
xor
mov
movsl
inc
addr16
fs
sub
call
xor
jnp
pop
pop
sahf
xor
je
sbb
pop
mov
addr16
mov
inc
mov
andl
jno
xor
cmc
out
cmpsb
in
mov
out
inc
mov
push
cmp
xor
jnp
xor
ja
je
push
xchg
fbld
sbb
inc
push
mov
jnp
xchg
or
arpl
movsb
xor
pop
mov
dec
aaa
shrb
fstps
add
add
stos
and
in
scas
cli
int3
je
xor
test
xor
mov
lods
mov
dec
repz
sbb
bnd
inc
push
insb
pop
aas
loopne
jl
add
adc
js
pop
mov
mov
call
test
scas
pop
jne
lret
enter
in
pusha
mov
xchg
inc
adc
xlat
scas
push
push
xor
or
inc
push
mov
int3
mov
sbbl
sti
lahf
incb
fs
xor
leave
adc
jl
adc
pusha
mov
dec
jb
pushf
arpl
jge
rcr
mov
aas
pop
aam
inc
sbb
lret
je
inc
jge
cmp
push
out
clc
pusha
and
fidivrl
imul
jmp
les
cld
es
sub
in
in
sub
mov
jnp
inc
cmp
daa
jno
shr
std
shll
push
mov
xor
out
xor
xor
xchg
insl
ficompl
out
pop
gs
xor
xchg
sahf
jge
mov
dec
adc
div
jnp
adc
sbb
push
out
dec
pusha
mov
cli
sub
and
jl
arpl
jge
jecxz
cmpsl
mov
in
fildl
lods
insl
and
and
inc
sbb
test
mov
jge
pop
movsb
incb
push
dec
hlt
dec
pop
outsl
jg
pop
scas
xor
cmp
in
jno
ja
pusha
xor
aaa
mov
je
das
xchg
sahf
push
jecxz
adc
jl
jns
into
pop
lahf
mov
iret
aas
jns
adc
mov
sub
inc
push
cmc
cmp
inc
stc
inc
loop
xlat
adc
push
popa
dec
je
lret
ljmp
int3
sti
adc
ljmp
push
xchg
xor
rcll
sahf
push
scas
cld
xlat
push
out
cmp
xorl
mov
cmp
rcl
es
idivb
fs
cwtl
popa
lods
shl
sub
push
out
add
push
sbb
jno
inc
adc
std
add
push
out
nop
mov
push
and
pop
jecxz
divb
fistpll
push
fmul
fisubl
adc
pop
push
pop
out
cmp
dec
xor
mov
mov
scas
jecxz
aaa
fs
add
movsl
loopne
inc
mov
pop
nop
pop
ljmp
movsl
sub
in
out
lock
outsl
idivl
add
out
pop
addl
dec
dec
je
cmpsb
insl
jmp
xchg
and
lock
mov
cmp
add
icebp
push
and
push
jmp
out
je
dec
pop
push
popl
jns
icebp
mov
mov
movsl
pusha
and
push
std
popa
mov
sub
dec
or
cmp
push
movsb
pop
mov
cltd
insb
dec
mov
cmp
in
fs
mov
bound
push
inc
lock
mov
push
cmpsb
mov
xchg
xor
in
push
mov
cmpsb
pop
les
dec
adc
cmpsl
adc
inc
xor
mov
or
std
xor
jno
sti
mov
fistps
xor
aaa
fistl
gs
mov
gs
lcall
xchg
sbb
pop
pop
lds
data16
push
mov
sub
pop
fsts
pushf
inc
jns
jb
je
xchg
arpl
fs
lods
or
push
or
xor
shr
pusha
stos
sarl
je
and
sub
outsl
test
push
cmp
dec
pusha
dec
aam
pop
push
xchg
shll
cmpl
or
push
dec
mov
dec
ret
mov
dec
gs
repz
jbe
xor
dec
int3
insl
pop
addr16
dec
jnp
int3
jg
mov
jp
jnp
out
pop
sub
cmpb
addr16
or
mov
cmp
inc
jae
jns
stos
jno
cmp
add
and
dec
mov
hlt
popf
mov
push
inc
mov
lcall
cwtl
cmp
push
pop
pop
push
clc
push
xchg
add
mov
subb
jno
inc
mov
nop
jne
out
aaa
out
cmp
and
or
cltd
outsb
mov
inc
add
jno
insl
fs
ljmp
cmp
icebp
movsl
cmpxchg
jmp
arpl
and
outsb
hlt
mov
insb
lret
fs
fdiv
addb
call
xor
mov
das
shlb
rcr
xor
mov
xor
rolb
xor
stos
jnp
fistpll
int
push
xor
orb
sti
fstpt
std
sti
mov
cmc
push
inc
addr16
insl
jo
jo
mov
scas
je
andl
fldt
testl
mov
pusha
sahf
inc
sub
sub
ret
mov
and
and
nop
out
fsubr
shrl
adc
out
push
leave
aaa
nop
and
lock
mov
dec
insb
inc
popf
mov
inc
jno
jg
lahf
pop
and
cmp
addr16
add
pushf
mov
push
lret
sbb
call
aaa
scas
dec
out
je
aas
xor
xchg
fcoms
jae
mov
adc
gs
sbb
rolb
dec
fcmovne
add
arpl
andl
fs
cmp
std
or
push
pusha
out
orl
xchg
lods
cltd
mov
call
push
cmc
dec
mov
das
dec
dec
repnz
or
popa
sbb
into
push
out
add
add
punpckhdq
inc
incb
push
pop
xchg
pusha
aaa
pushf
sub
je
jne
das
cmp
filds
adc
xor
fwait
add
adc
orb
popa
out
lods
repnz
jns
gs
insl
fucomip
rcl
pop
xorl
jno
lret
fstpl
cmp
aas
in
mov
dec
xchg
jl
imul
jg
xor
mov
mov
mov
and
gs
daa
cltd
inc
xchg
imul
pop
cmp
xor
daa
pop
xchg
das
adcl
rolb
sub
inc
cs
shll
fs
mov
jmp
cmpsl
ja
mov
jg
jne
mov
shll
gs
push
hlt
je
mull
sub
xchg
out
out
jae
ljmp
in
push
xchg
int3
jge
pop
mov
pop
push
fisubrs
sti
scas
clc
out
jle
std
js
jp
sub
xchg
imul
push
sbb
add
les
filds
push
insb
std
ljmp
mov
ljmp
lods
xor
les
jg
pushf
push
and
adcl
xor
pop
inc
jo
inc
std
ret
push
xor
adc
ret
pop
aaa
adc
out
popa
js
lea
pop
sbb
mov
adc
nop
mov
lds
sub
xor
movl
mov
test
sub
mov
enter
imul
sbb
xchg
subb
fnstcw
xor
inc
aam
or
cmp
jge
xchg
push
jg
sbb
movsb
mov
cwtl
in
and
adc
nop
sub
xor
add
out
xchg
mov
jmp
outsb
ret
push
in
sbb
xor
sub
mov
cmp
push
mov
gs
sti
push
adc
cld
shl
sub
std
aad
push
das
cltd
push
mov
cmp
jnp
cs
and
mov
jbe
jge
cmpsl
sbb
lret
xchg
cltd
pshufw
stos
loope
out
mov
ret
cld
je
or
jl
in
in
movsl
je
fdivp
xor
mov
pop
mov
sbb
push
mov
xchg
repnz
les
mov
popa
mov
clc
sbb
pop
popf
jp
xor
xchg
je
mov
and
sti
lret
leave
int3
fdivrl
push
jae
in
imul
fs
inc
cmp
cmp
inc
gs
push
call
cmc
mov
push
loope
scas
out
pop
and
and
cli
inc
cmc
scas
mov
movsl
pusha
ja
push
jecxz
cmp
xlat
jne
jo
lods
jmp
or
imul
dec
fldl
ljmp
adc
push
sbb
xchg
addr16
mov
add
inc
jns
dec
jne
lret
push
out
mov
test
cmp
xorb
push
je
xlat
ljmp
sub
jns
mov
fcompl
jo
popa
rcl
lahf
stos
je
pop
jnp
pop
ljmp
adc
jns
adc
lret
jbe
jb
outsb
lret
dec
fadds
cld
and
jbe
or
xchg
aam
cmp
out
jo
mov
dec
scas
cwtl
in
scas
movsb
in
adc
fs
lcall
dec
xchg
loopne
push
mov
sub
or
push
fs
shll
lret
jns
je
sbbl
push
push
dec
sub
sub
dec
cmpsl
cmp
sbb
imul
sbb
iret
push
js
sub
dec
sbb
scas
fidivl
fimuls
inc
jns
jp
mov
pop
push
addb
rcpps
xor
xor
imul
cmp
or
je
push
aaa
jne
neg
sahf
push
js
push
iret
sbbl
sub
jno
daa
fs
iret
adc
inc
jne
lods
jecxz
hlt
cmp
call
push
lahf
dec
cld
push
rol
adc
arpl
or
enter
ja
push
lret
out
cmpsb
cmp
into
out
or
ret
xor
add
insb
pop
push
int
aam
push
lea
fstpt
cld
add
ficoms
movsl
mov
fs
aas
mov
in
dec
jg
scas
dec
leave
jo
xchg
sbb
pop
addr16
scas
lods
cmpsb
loop
shl
jecxz
mov
xchg
mov
sbb
mov
mov
adc
or
cmp
imul
negl
hlt
sub
mov
int
push
ljmp
testb
jg
icebp
das
inc
push
inc
cmp
pop
sub
dec
imul
xchg
je
adc
popa
cmpsb
sub
fbstp
mov
inc
push
jns
mov
xchg
cltd
lret
outsb
popa
inc
fsubrl
push
rclb
data16
sub
subb
das
fidivl
popa
xor
mov
cmp
push
dec
in
push
std
jg
popa
sbb
push
nop
mov
das
rclb
add
xor
outsl
arpl
mov
mov
loope
inc
jb
imul
or
insb
fistpll
dec
lods
popa
fs
idivl
push
leave
inc
dec
pop
jmp
dec
mov
jno
xchg
mov
into
add
pop
cmpsl
inc
loop
out
out
xchg
adc
in
xchg
lcall
mov
mov
add
mov
orl
add
push
je
jne
push
lret
adcl
jae
xchg
outsl
ret
sarb
out
dec
push
addr16
inc
inc
cwtl
sub
loope
jb
pusha
or
push
lods
pop
les
aam
mov
push
or
ret
inc
es
movsl
rcr
je
inc
push
sbb
jp
mov
cmp
push
xor
add
imul
mov
xor
sub
subl
xor
or
jg
fs
das
pop
cmpsl
push
scas
mov
mov
movsl
aaa
js
stc
dec
push
sub
push
les
jmp
stos
daa
mov
jns
xor
pop
gs
insl
call
out
pop
lods
mov
in
jg
jbe
frstor
fidivs
test
adc
adc
jne
es
push
outsb
and
jmp
xor
or
mov
push
inc
add
jg
xchg
int3
insl
and
popf
out
mov
cli
xchg
cmp
or
xchg
shl
dec
ljmp
iret
and
or
arpl
push
xchg
xchg
je
data16
adc
jae
push
iret
daa
jo
lock
sub
ret
jecxz
pop
ds
lock
push
dec
sbb
fidivrs
jge
push
inc
cmpb
cltd
xchg
inc
xchg
xchg
push
sbb
sub
cmpsb
testl
insl
std
fxtract
mov
das
dec
pextrw
imul
adc
lock
sahf
bound
lahf
push
out
movsl
inc
inc
jno
pop
xlat
call
je
imul
sbb
dec
xor
pop
dec
push
outsb
loopne
test
ret
sub
popa
stos
push
leave
jecxz
inc
je
stc
jge
aas
bound
xor
in
out
and
ljmp
mov
jl
and
stc
out
sub
insl
fistl
fildll
pop
pop
or
xchg
shll
nop
jg
sbb
insb
movsb
dec
out
lock
sbb
popa
jge
push
jl
aas
jae
mov
pop
cmc
xchg
lods
ss
clc
push
pop
xchg
push
imul
xor
fs
mov
out
xchg
lock
push
div
cltd
cmp
add
inc
push
insl
popf
push
mov
fsubrs
and
inc
gs
inc
xor
or
icebp
fwait
pop
push
repnz
inc
cmp
ljmp
add
mov
sbb
mov
std
push
push
leave
shrb
add
in
fwait
cmp
dec
push
inc
das
fs
data16
push
sub
es
lods
pop
outsl
push
in
ljmp
imul
imul
inc
lahf
mov
je
push
shll
std
jmp
add
mov
mov
xchg
je
sub
and
addr16
mov
adc
out
cmpsb
or
dec
adc
push
insb
mov
dec
out
loop
push
lea
inc
push
cmp
imul
pop
in
mov
or
psubsb
fcoms
dec
aas
imul
outsl
inc
xor
pop
mov
das
dec
push
xlat
inc
mov
lds
lock
sarb
or
out
outsl
push
outsb
nop
cmpsl
arpl
pop
lcall
push
test
or
fsubl
addr16
jno
idivl
punpckhwd
rcrl
inc
and
sub
rolb
push
imul
je
loopne
rcr
push
cmp
inc
call
out
mov
pop
dec
scas
je
aaa
aaa
imul
popf
js
inc
test
enter
je
xchg
nop
std
jp
dec
out
pop
dec
repnz
repnz
push
gs
inc
inc
test
popl
enter
scas
or
push
leave
sbb
xchg
sub
mov
mov
cli
lods
jp
jo
xorb
jle
jg
add
dec
pop
ficomps
out
sub
mov
lahf
jne
cwtl
dec
stc
out
xlat
lret
pop
lea
jb
jle
pop
addr16
xor
mov
xlat
lock
and
out
lods
cmp
daa
in
outsb
pop
rorl
fistpll
xor
out
push
jbe
xor
out
test
mov
or
out
sbbl
js
rorb
jo
and
adc
push
sahf
lods
pop
push
movsb
xchg
and
jae
pop
add
mov
push
mov
imul
je
lds
jp
aaa
in
je
ds
fldcw
outsl
into
out
aad
sub
mov
insl
pop
imul
and
je
sub
int3
mov
dec
xor
xchg
push
outsl
cmc
dec
jno
pop
and
push
jns
mov
adc
push
ud1
jge
cmpsl
data16
xor
daa
aam
push
insl
leave
mov
inc
out
cli
push
push
sbb
jmp
mov
nop
pop
movsb
sub
divb
jecxz
leave
insb
and
vmread
in
movsl
incl
outsb
pop
adc
aas
popf
mov
push
pop
imul
push
mov
inc
scas
arpl
fcmovu
and
mov
sub
aaa
dec
dec
xchg
xchg
lock
cld
and
enter
popf
push
js
fnsave
addb
cli
pop
gs
xor
adc
lock
and
sti
push
pop
out
addr16
out
inc
sti
jns
insl
jb
pop
push
push
aad
jo
lcall
push
mov
ja
scas
push
jnp
je
or
pop
sbb
nop
jg
pop
inc
andl
fisubs
test
stc
popf
sbb
mov
rol
push
pop
je
jae
fs
int3
sub
insb
pop
pusha
gs
sub
and
push
cli
insb
pop
lret
mov
js
jp
xchg
lcall
in
addb
push
jo
pop
mov
cmc
shrl
cmp
push
pop
jae
sbb
clc
adc
int
daa
jno
pop
pop
outsl
int3
imul
adc
fmuls
out
fsubrl
or
pushf
jno
fucomip
les
cli
jle
ljmpw
sbb
or
dec
mov
jg
push
cmp
insl
sbb
sub
dec
dec
jo
insb
imulb
sbb
pop
sbb
lret
jle
fists
mov
and
mov
cltd
popf
dec
loop
inc
fcom
je
sbb
cmpl
lock
cli
sub
scas
fsts
mov
test
shlb
in
sub
jp
adc
leave
dec
mov
in
call
lret
inc
sti
add
fdiv
mov
jae
cmp
sbb
rclb
sub
adc
fisubl
xor
mov
cmp
lea
pusha
push
mov
sub
or
cmp
add
rorb
xchg
and
lcall
mov
sub
fldt
nop
sbb
cmpsl
js
ds
pusha
daa
sahf
test
imul
or
das
shlb
out
shlb
mov
xor
daa
cmp
into
or
enter
out
jne
mov
call
das
es
push
insb
mov
adc
pop
popa
insl
inc
pop
and
jle
or
lock
stc
mov
popa
insl
xor
out
idiv
or
nop
mov
push
movsb
ret
xchg
mov
outsl
add
out
mov
jmp
add
cli
xor
int3
cmp
push
mov
push
leave
jno
mov
xchg
dec
dec
cmpsl
or
sbb
fimuls
aas
adc
jns
cltd
pop
pop
popf
and
test
sub
outsl
jae
pop
fucomi
hlt
fnstenv
push
push
das
pusha
jmp
pop
popf
dec
imul
jbe
cmp
lods
xor
mov
adc
lret
in
in
mov
xor
test
mov
rclb
or
dec
rep
std
sbb
xor
jmp
pop
push
jle
fistpll
adc
add
pop
jp
cli
loopne
testb
sbb
aam
test
inc
mov
sub
push
and
dec
sub
rolb
daa
pop
vmptrld
aas
mov
movsb
subl
cmp
jecxz
sarb
adc
jmp
idivl
pop
pop
data16
popf
pusha
dec
add
sbb
and
mov
mov
adc
out
std
adc
pop
xor
cmpsb
mov
mov
rorl
or
shrb
mov
sub
imull
inc
fs
imul
adc
jbe
jnp
das
gs
out
sbb
in
loopne
repz
mov
popa
lods
inc
imul
lods
cs
dec
mov
pusha
call
sti
fistps
sub
cmpsl
adc
or
out
imul
pushf
ljmp
sbb
notl
lret
in
add
std
or
pop
add
stos
inc
push
xchg
add
fst
loope
in
jb
lret
cmp
push
cli
inc
or
pop
mov
dec
fwait
in
fnstcw
out
inc
lock
lods
imul
push
sbb
add
out
mov
jmp
and
push
aas
popa
jne
jmp
arpl
add
int3
xor
sti
jge
push
cltd
das
arpl
jg
mov
stos
mov
in
pop
js
adc
lds
mov
daa
test
fcomps
xor
in
ror
adc
cmp
lock
popa
jl
inc
or
iret
mov
pop
fs
cmp
mov
xchg
push
je
ja
test
sahf
outsb
pop
jmp
sbb
jno
out
je
lret
ljmp
iret
adc
sets
push
test
lods
pushl
scas
pop
add
ljmp
out
push
push
push
test
lea
cs
mov
daa
daa
in
mov
divps
sarl
xchg
aas
sarl
mov
sub
icebp
popa
dec
pop
fisubs
in
fiaddl
and
and
movsl
add
dec
fsubl
test
push
inc
xor
popl
daa
inc
aas
clc
arpl
cmp
jo
inc
lock
push
and
sahf
add
jge
cmp
mov
std
mov
push
inc
xchg
adc
jbe
push
nop
lock
sahf
sbb
jp
or
lods
das
add
jo
popa
sub
mov
int
xchg
fs
clc
out
ds
jno
xlat
popf
faddp
int3
test
add
in
ja
cmp
arpl
scas
icebp
mov
mov
scas
andps
cmpsb
xchg
das
out
lds
adc
arpl
fs
lods
testl
popa
imul
add
out
mov
sub
jmp
jg
cs
test
mov
insb
out
sbbl
test
fimull
mov
outsl
jl
xor
ss
mov
mov
sub
xchg
hlt
fisttpll
sub
add
out
mov
loopne
lret
pop
imul
cmpsb
xor
add
sbbl
hlt
add
sub
mov
mov
std
testl
das
lret
out
pop
mov
lret
mov
jns
sbb
xor
and
xchg
lock
jg
jmp
add
push
sbb
hlt
repz
mov
imul
mov
xchg
cmp
sbb
cmp
push
cwtl
in
push
xchg
fcompl
imul
sbb
sahf
hlt
inc
popf
or
add
mul
daa
ja
insl
pop
mov
mov
fsub
outsl
jo
mov
mov
jae
ja
mov
test
add
mov
mov
lret
std
xchg
push
mov
jno
leave
mov
cmp
cmpsb
imul
stc
adc
int3
loop
pop
lea
mov
stos
inc
arpl
je
enter
loope
cld
stos
lock
leave
int
fprem
adc
movsb
cmp
jg
movsb
hlt
outsl
add
push
or
jns
push
jp
popf
or
jmp
mov
movsl
insl
pusha
mov
and
push
in
cmp
push
jp
pop
mov
lahf
jecxz
dec
xchg
insb
pop
sbb
int
inc
dec
icebp
imul
fbld
push
sub
mov
sub
mov
ret
mov
ja
push
je
out
mov
and
push
movsb
repz
jo
stos
xchg
inc
popa
pop
jp
or
aas
or
test
mov
cmp
cli
sub
inc
mov
popa
aas
fs
mov
test
arpl
imul
jo
push
sub
imul
cmpsb
inc
mov
rcr
outsb
jecxz
sub
mov
mov
stc
in
insb
std
sub
rcll
sub
ret
add
fbstp
aad
mov
mov
sub
cmpl
jno
inc
das
push
insb
cmpsl
inc
mov
jbe
cmp
push
sbb
cmp
push
push
hlt
inc
imul
mov
aaa
dec
xor
loope
je
loop
push
cmpsb
jg
gs
addr16
sahf
sub
adc
outsl
pop
icebp
push
fcmovb
gs
mov
out
xorl
sbb
fxam
aaa
das
mov
add
fwait
push
cmc
inc
outsl
adc
jnp
int3
arpl
mov
iret
inc
sbb
push
xchg
sbb
decb
mov
daa
outsb
xor
shlb
fnstcw
aad
gs
ljmp
sub
xchg
fidivrs
outsl
jmp
clc
mov
mov
sbb
push
mov
cmp
jl
cmpsl
int
daa
jg
test
fidivl
out
popf
jecxz
das
inc
pop
pop
cli
push
jle
jge
js
cmpb
rcrl
pusha
lds
adc
mov
aaa
mov
pop
fildl
jns
pop
and
jl
cli
xchg
pop
cld
scas
adc
dec
mov
lret
out
and
push
loop
insl
lds
out
or
outsl
inc
lock
imul
aad
mov
lcall
or
insl
dec
and
adc
aaa
les
ret
sbbb
mov
mov
fs
inc
outsl
outsl
rcrl
mov
imul
stos
and
sbb
inc
push
mov
mov
out
repz
data16
cmc
add
stos
dec
imul
inc
add
and
push
icebp
pop
mov
test
rol
push
insl
ss
jno
scas
cmpb
mov
add
inc
ror
sub
pop
lds
push
jg
loop
dec
push
in
ja
and
mov
lcall
fidivl
xor
fsubrl
push
mov
push
sbb
mov
je
fimull
jle
jbe
fistpll
in
mov
je
arpl
outsl
xchg
jb
in
xchg
and
jno
jle
aas
fcoms
clc
pop
mov
push
inc
inc
mov
push
scas
ss
in
sub
orb
in
pop
adc
cmp
mov
pusha
fldt
mov
data16
fdiv
sub
dec
push
xchg
mov
jnp
xchg
orl
shll
je
std
adc
nop
and
pusha
nop
push
or
pop
cmp
fistps
mov
inc
fnstenv
push
sub
pop
jns
pop
cltd
call
xor
push
lock
in
mov
jle
push
movsl
fisubrl
test
sahf
pop
stc
int3
insl
jmp
out
insb
push
sbb
inc
push
pop
mov
push
inc
adc
int3
imul
sub
mov
cmc
push
add
sahf
clc
or
mov
pop
adc
mov
xchg
dec
push
and
scas
jmp
sub
push
jecxz
ret
lods
lahf
sbb
je,pn
xor
aas
ret
movsb
inc
push
and
in
out
or
sub
dec
or
cmp
push
cmp
pop
push
fs
push
fnstcw
pop
out
movsl
cmp
sbb
xorl
push
and
rep
add
pop
sti
fistpll
pop
daa
insl
stos
je
xor
push
cmp
inc
cmpsl
js
lret
loopne
mov
fnstcw
jp
orb
push
lret
push
repnz
jns
fucomip
ret
pushf
jge
bound
imul
cmp
or
jno
add
loopne
popa
es
pop
jns
outsl
lods
jnp
dec
gs
xor
fcomps
push
cli
outsb
dec
shll
sti
rorl
nop
ja
fsubrs
cmp
and
hlt
xor
inc
cmp
lcall
imul
out
popf
out
bound
mov
xchg
fwait
insl
fsubl
and
movsl
clc
and
adcb
fsts
stc
dec
and
addb
mov
out
pusha
jl
pop
not
outsb
cmp
vmovsd
mov
ret
mov
loopne
daa
adc
popa
ss
sbb
lds
rolb
push
dec
stos
sbb
mov
je
lock
fbstp
incb
xor
shl
iret
ret
xor
mov
add
outsl
scas
cmp
loopne
stos
es
adc
nop
sbb
push
push
xchg
and
xor
out
jmp
push
sbb
or
mov
aam
dec
push
pop
jo
push
addr16
movsb
xchg
addb
das
out
std
pop
ret
inc
out
lock
push
inc
test
insb
addb
int
test
mov
xorl
pop
dec
ja
cld
bound
sub
loopne
fcoml
jns
aaa
mov
cmp
adc
imul
test
jmp
arpl
aam
add
lret
js
fdiv
fs
sbb
ja
cmc
dec
movsl
mov
cld
stos
push
jns
jnp
mulb
aas
popa
xor
stos
inc
clc
lret
ficoml
jmp
fcmovb
push
insb
stos
ja
adc
mov
lods
das
jp
stos
adc
jl
mov
stos
je
cmp
or
test
test
push
insb
shlb
or
xor
pop
ret
push
gs
filds
push
cmpsl
cmp
lods
stos
lock
daa
ficomps
push
or
fs
jo
inc
and
int3
je
cld
mov
call
cwtl
jmp
fdiv
je
dec
jo
out
jecxz
inc
xor
dec
mov
jg
jmp
imul
push
clc
jne
cmp
int3
test
xor
icebp
jno
decl
adc
loopne
adc
push
sub
jge
jne
mov
sti
xor
bound
add
sti
or
sub
mov
lods
xchg
push
add
mov
cmp
adc
das
mov
cmp
cmp
dec
and
sti
or
lods
fcomip
push
test
or
ja
push
cmp
pop
sub
js
xor
ficomps
insb
aam
imul
mov
jne
sahf
js
push
test
aam
jbe
dec
pop
adc
mov
adc
into
out
loope
in
xor
outsl
jno
fs
aam
aas
mov
xchg
test
sbb
aas
lcall
jg
mov
fdivp
roll
data16
sub
add
push
vpunpckhqdq
inc
xchg
push
dec
iret
inc
stc
cli
adc
xchg
mov
lcall
xorl
or
xor
mov
loopne
xchg
in
stc
mov
int
rcr
insl
fcmovnu
push
mov
xchg
cmp
and
and
pop
test
mov
inc
int3
icebp
sbbb
mov
add
pop
aas
loopne
xor
pop
and
mov
adc
test
les
sub
scas
xchg
jl
add
inc
ret
enter
fsts
dec
lock
out
cmpl
or
push
push
insl
jmp
jl
stos
dec
jns
imul
test
sub
sub
mov
mov
fucomip
les
out
lock
adc
sbb
xchg
pop
test
insl
dec
adc
in
fistpll
inc
adc
mov
imul
and
sbb
jae
out
enter
push
sar
xchg
jg
in
adc
push
shrl
mov
outsb
je
aad
jg
sbb
repz
mov
in
push
pop
sub
gs
out
dec
jno
xor
cltd
xchg
sub
inc
lret
mov
icebp
aaa
shl
inc
push
or
daa
pusha
sub
fnstenv
push
fs
std
xor
mov
repnz
mov
leave
jmp
mov
and
clc
addl
sub
jmp
pop
cmp
fs
mov
dec
mov
push
jno
icebp
insl
in
aaa
das
call
mov
ret
mov
push
dec
fdivr
shl
lods
fs
mov
call
sbb
notb
das
lds
test
cmp
cltd
mov
push
xchg
insb
cs
mov
xchg
jecxz
fldcw
loopne
stos
pop
rcrl
cli
popf
imul
push
lea
cltd
negl
push
mov
syscall
pop
jp
sbb
cmp
insl
mov
lock
test
xor
xchg
pop
addl
push
fstpt
js
and
ljmp
inc
push
gs
lret
push
push
outsl
sbb
push
lds
lret
add
ds
negl
nop
sub
gs
mov
popa
push
fpatan
add
mov
sbb
mov
xor
jg
vphadduwd
jge
cmp
push
jno
hlt
mov
mov
push
nop
std
fldenv
xchg
loopne
jno
push
mov
sahf
outsb
out
ret
test
jl
sub
adc
cmp
out
hlt
loopne
daa
jg
push
adc
scas
out
movsl
insl
xor
xchg
out
xorb
divb
xor
mov
mov
xor
sub
leave
ret
pop
inc
aad
les
sub
rcrl
jecxz
sbb
jl
mov
adc
mov
mov
fistl
rolb
lret
mov
mov
cwtl
insb
fistps
jb
dec
mov
imulb
jp
mov
int3
ss
inc
ror
outsl
xchg
jo
sub
ret
adc
roll
lock
cs
popf
out
daa
jne
fnstenv
testb
int3
aam
rol
nop
cmp
adc
adc
dec
sub
stc
xor
mov
or
cmp
xor
loope
cmpsb
repz
push
push
in
std
inc
inc
jb
mov
mov
mov
into
es
std
mov
adc
fs
jle
out
mov
push
sbb
adc
pop
aas
imul
add
jle
sub
in
lcall
rol
sbb
add
dec
mov
push
shlb
outsb
push
clc
enter
or
inc
imul
add
mov
lods
fs
scas
sti
cmp
xchg
jle
or
pushf
insl
sbb
pop
jnp
fs
in
inc
cmpsb
in
mov
push
and
jge
pop
in
loope
das
out
mov
stos
inc
lock
int3
mov
insb
sub
jmp
lods
push
sub
in
push
adc
icebp
adc
mov
test
mov
push
pop
dec
cld
add
mov
addr16
scas
les
sbb
mov
je
add
popf
jns
xor
cmp
dec
sbb
repz
push
jmp
orl
addr16
dec
push
test
les
scas
aam
pop
ret
or
outsb
sub
sbb
and
mov
push
loopne
xor
jle
popf
ret
jl
pop
adc
push
jnp
imul
outsb
jo
inc
xor
add
adc
push
loop
mov
mov
je
push
mov
add
pop
insb
rorb
add
daa
je
mov
rcll
lcall
inc
fstpl
adc
rorb
mov
jg
xchg
push
lret
pusha
out
addr16
mov
ficomps
push
add
fs
fbstp
rorl
push
or
mov
movsl
shll
cmp
fstpt
push
cmp
stos
mov
xchg
sbb
and
add
pop
ficoms
mov
jns
mov
das
out
mov
je
jne
shr
pushf
fldenv
jg
xor
je
jge
sbbl
mov
gs
aaa
out
xchg
or
pop
jmp
cmp
jo
jo
fucomip
ret
outsb
gs
addl
push
push
mov
jle
sarb
xchg
inc
adcb
push
fbld
inc
lcall
fsubrl
testl
mov
push
popf
sub
push
repnz
xacquire
ficoms
aas
imulb
shl
mov
push
or
pusha
mov
scas
xor
rcr
mov
pushw
gs
lds
divb
imul
dec
mov
jne
sbb
xor
mov
mov
dec
and
sbb
push
fdivl
call
nop
ja
mov
mov
test
sub
lods
push
jbe
movsl
mov
je
insl
jo
imul
or
aaa
rorb
mov
es
mov
pop
aad
flds
lock
bound
call
cmpsl
mov
add
insb
pop
adc
push
or
ss
sahf
jge
fs
pusha
es
cmp
fidivrs
inc
arpl
cli
sahf
pop
pop
incb
mov
jae
xor
and
js
pop
xchg
test
sbb
insl
xor
std
mov
jae
lcall
inc
xabort
nop
std
mov
cmpsl
insb
and
test
das
sub
imulb
mov
xchg
roll
adcb
scas
jg
sub
sub
mov
repnz
fldl
push
int
cmp
repnz
cmp
popf
in
cmp
xchg
sbb
lds
out
paddw
dec
mov
sub
idiv
iret
movaps
out
jae
and
and
gs
pop
cmpsl
push
int3
pop
push
mov
leave
js
mov
movsl
inc
add
mov
push
lahf
sbb
stos
jno
fs
mov
lock
add
roll
cld
pushf
in
jge
xlat
adc
adc
pop
mov
cmp
imul
dec
sbb
loopne
push
insb
cmp
add
out
arpl
test
inc
mov
packsswb
add
xor
outsb
lds
push
lods
cmpsl
mov
mov
sub
jle
inc
scas
lock
enter
filds
shll
cmp
mov
or
cli
test
jnp
imul
repz
push
mov
and
add
lret
add
push
das
imul
mov
imul
push
jecxz
ljmp
jge
pop
add
insl
adc
aad
and
jbe
out
je
rcr
call
ja
icebp
and
xchg
cmp
in
popa
sbb
jns
int3
aaa
stc
sbb
mov
cmp
in
jo
scas
sub
jno
mov
daa
mov
clc
push
inc
into
push
xchg
fdivrl
icebp
mov
mov
sub
lods
jbe
or
gs
lahf
outsl
mov
xchg
xlat
push
shr
loopne
jno
ja
in
dec
jp
aas
pop
and
cmp
mov
cli
js
and
int3
pop
or
fdivrl
in
js
jno
pop
lret
lret
ss
bound
inc
out
cmpsb
fs
stc
imul
imul
popa
inc
xchg
cmp
pop
add
push
mov
mov
dec
fiaddl
loope
cmp
mov
cmp
aaa
in
fcoml
mov
loop
and
adc
push
push
out
int3
add
shrl
jb
popa
jmp
addr16
fnsave
xchg
xor
fimull
jae
dec
inc
mov
outsb
rcr
jmp
test
jl
sbb
movsl
dec
push
inc
les
data16
or
pminsw
push
push
xor
mov
and
xchg
rcrb
stos
sti
shll
int3
imul
adc
mov
push
icebp
pop
out
cmp
push
fs
jp
stos
shrl
lret
stos
std
imul
popf
sahf
sbb
scas
lahf
sbb
lock
pop
movsb
mov
cmp
or
pop
pop
pop
jl
popa
fs
punpcklbw
je
pushf
call
or
cmp
aaa
stos
repnz
jecxz
out
cs
push
mov
add
cmp
out
xchg
popa
imul
mov
lock
push
or
sahf
aam
adc
out
sbb
push
dec
and
inc
jmp
xorb
fldl
inc
loope
xchg
insl
fucomip
fcmovu
cli
int3
insl
js
pop
lock
mov
xor
pop
scas
scas
cli
aaa
cltd
mov
sub
xor
lock
fidivl
fs
push
xor
mov
inc
sub
in
adc
pop
push
rcrb
lds
push
lea
jb
jno
loopne
xchg
fs
stos
jbe
dec
into
popf
push
mov
sahf
sbb
add
les
or
sub
insb
jg
xor
push
js
cmp
das
xchg
adc
mov
std
dec
cs
inc
push
sahf
dec
sub
mov
add
inc
push
jmp
lea
sahf
fwait
scas
insl
mov
stos
imul
push
inc
push
cmpsl
pop
jg
jmp
and
test
out
xchg
movl
enter
loopne
fs
lods
pop
and
cli
fnsave
mov
mov
and
test
push
mov
imul
cmpsb
ds
dec
push
add
popa
fwait
mov
lds
sub
push
mov
gs
mov
cmp
das
je
or
or
pop
loopne
sbb
cmp
jp
pop
hlt
add
mov
je
jle
fs
hlt
mov
loopne
movsl
jg
mov
cmp
js
mov
add
pop
aas
lea
push
popf
push
xchg
dec
dec
cwtl
inc
inc
in
js
push
jle
jae
inc
jmp
mov
jo,pt
push
push
fs
xor
and
sub
aam
jg
pop
mov
and
cltd
insb
mov
mov
imul
aaa
dec
sub
incb
push
loopne
std
cmpsb
cmp
addr16
or
push
fldcw
sub
fistl
outsb
lock
arpl
insl
fucomi
jb
adc
xor
xchg
ja
pop
and
inc
jg
mov
data16
fidivl
mov
insl
cwtl
sbb
out
adc
lret
fdivs
or
xor
imul
sub
pushf
mov
inc
push
push
lahf
lock
pop
aas
je
jle
scas
ret
jb
sub
sahf
je
mov
frstor
out
pop
mov
gs
jp
je
fidivs
fisttpll
push
xor
jl
push
fs
push
je
je
inc
mov
lods
xor
aam
cs
bnd
add
push
dec
mov
xchg
stos
sbb
push
mov
jg
push
pop
pop
outsl
xor
mov
shlb
push
movsl
or
inc
xor
xor
arpl
push
test
mov
cltd
add
push
das
scas
scas
js
inc
sub
push
inc
or
in
scas
cmp
xor
scas
out
sub
xchg
test
push
imul
cmp
loope
and
mov
leave
das
daa
outsb
inc
shrl
xor
sahf
or
mov
enter
lcall
add
dec
mov
ret
repz
and
daa
movsl
xchg
pop
or
lea
int3
loop
pop
pop
push
in
add
mov
nop
pop
sub
xchg
xchg
fcomip
pop
mov
je
fsubr
mov
out
xchg
sub
into
insb
std
cmp
das
and
stos
sub
sub
adc
mov
adc
rorl
or
js
scas
adc
arpl
jle
mov
je
pusha
inc
cmp
insl
fwait
enter
lret
jnp
mov
or
inc
push
ret
scas
fcmove
fstpt
scas
sub
rcrl
mov
fs
lock
std
lcall
imul
cmpsl
call
jns
fiadds
imul
adc
insl
pop
aas
cmp
negl
mov
push
xlat
test
pop
test
cltd
rorb
lret
xchg
xchg
inc
cmp
nop
add
rcrl
mov
jg
out
mov
scas
repnz
gs
inc
jnp
lea
outsb
jo
dec
aas
push
lock
mov
aam
cmp
jg
stos
push
mov
ret
clc
je
cltd
xchg
hlt
lea
jp
pop
sub
pop
jae
stc
imul
mov
xor
xchg
lret
cmp
mov
cmpsl
mov
mov
aas
jecxz
xchg
imul
and
jnp
adc
cmp
std
fsub
pop
in
fsubl
js
js
sbb
mov
cmp
ja
cltd
sub
jns
xchg
mov
push
rorb
nop
cmp
pop
test
xor
lds
rcl
imul
in
sub
pop
push
add
es
pop
out
push
cltd
cmp
cmp
pusha
lock
mov
sbb
dec
inc
sbb
sub
and
seta
testb
pop
push
xor
jo
imul
andps
frstor
addr16
xchg
lcall
jl
pop
push
xor
dec
push
fwait
push
sbb
xor
repz
lret
loopne
pop
or
mov
add
push
jns
push
pop
aas
xchg
imul
lcall
subb
loopne
jge
dec
sub
movsl
push
cmp
xchg
sub
cmp
fisttpl
fistl
xchg
sbb
idivl
jp
es
sub
jmp
dec
mov
enter
push
aas
push
aad
push
pop
dec
addb
adc
cmp
cmp
sbb
imul
cmpsl
nop
shl
movsb
mul
fwait
dec
adc
xor
and
scas
and
shrl
mov
cltd
pop
add
adc
jb
jno
mov
adc
pusha
test
movsb
mov
mov
sub
jnp
jo
xchg
pop
push
push
push
mov
cmp
rorl
das
pusha
movsl
fs
add
or
push
outsl
and
cld
mov
stos
out
cltd
mov
cmp
jb
inc
out
push
in
imul
adc
mov
inc
int3
push
jmp
arpl
push
iret
and
aas
jo
outsl
mov
push
pop
shr
pusha
add
adc
xor
rcll
insb
into
daa
push
push
aas
ljmp
mov
pop
xor
je
or
inc
aas
aas
data16
loope
push
sub
sub
test
mov
push
int3
cld
inc
test
fnsave
mov
pop
aam
jp
sub
mov
jns
fsubrs
push
adc
jecxz
jl
cmp
mov
shlb
scas
inc
clc
ss
push
add
mov
outsb
dec
insb
pusha
popa
lock
pop
lds
inc
loop
cld
mov
jp
int
xchg
into
lret
out
das
outsl
loopne
lea
or
icebp
int3
xor
and
mov
xchg
ds
out
subl
sub
xchg
dec
lods
sub
fs
mov
cltd
int3
gs
add
mov
fs
jl
pop
push
or
pop
sub
dec
jg
pcmpeqb
or
inc
ja
std
fistpll
push
and
dec
pop
cmpsb
in
stos
mov
sahf
je
js
push
pop
movups
hlt
mov
int3
out
pusha
loop
jle
pop
dec
push
or
insb
loop
push
pop
gs
insb
dec
enter
loop
mov
mov
mov
fstpt
dec
gs
pop
stc
jmp
mov
insb
std
inc
pop
pop
psraw
jns
cltd
mov
je
scas
jne
jnp
push
mov
popf
jp
xchg
push
fs
adc
in
outsl
test
je
cmp
dec
and
outsb
cmpsb
subl
sub
in
xchg
psubsw
jp
xchg
cmp
push
and
lock
or
and
outsl
jg
call
and
stos
push
xchg
push
pop
pop
fcmovu
repz
test
or
je,pn
jg
fdivs
rcll
dec
int
xor
fs
push
or
mov
jo
xor
les
ja
mov
das
xchg
fildll
mov
mov
cltd
push
pop
outsb
shrl
int
aas
push
addr16
rorb
pop
cs
cmc
mov
or
ja
cltd
jns
add
jecxz
xchg
lahf
ljmp
pop
das
pusha
adc
out
fimull
xor
pop
inc
pop
cwtl
popa
fldenv
push
das
push
fidivrl
test
inc
add
int
imul
jg
pop
std
mov
pop
adc
gs
or
push
xchg
lds
inc
adc
aad
pushf
cmp
outsb
sti
je
cmp
clc
sub
cltd
jo
test
dec
mov
std
pushf
cmpsb
imul
mov
cli
xchg
mov
popf
pop
mov
clc
sbb
ljmp
add
and
sbb
nop
cmp
in
and
pop
cmp
lock
mov
xchg
cmpsl
cli
cmp
xchg
scas
fsubl
loopne
flds
xor
sub
imul
adc
insl
mov
scas
push
push
xorb
in
push
xor
push
xchg
push
loopne
mov
mov
xchg
jg
mov
outsl
scas
je
int3
and
add
mov
lock
dec
push
jle
mov
add
mov
jle
add
push
cmc
in
sub
shrl
rorl
cmp
cmp
js
hlt
fildl
call
dec
or
stos
xor
lods
pop
xchg
ret
je
mov
cli
scas
mov
pop
push
xchg
cmp
cmpsb
outsl
lahf
inc
cwtl
push
mov
push
xor
dec
jns
test
in
ficoml
imul
cmp
testl
push
mov
jge
pop
adc
ret
jnp
cli
clc
xor
daa
push
cmp
cmp
sub
test
sti
ja
sub
mov
lcall
pusha
insl
adcb
aad
in
xor
jo
mov
sbb
mov
or
pop
and
out
je
dec
sbb
outsb
inc
je
sub
sub
sbb
scas
jns
push
int3
aam
push
iret
pmulhw
sub
sarl
pop
test
sbb
gs
fidivrl
into
sub
sahf
push
adcl
dec
add
mov
inc
sbb
mov
inc
add
sbb
pop
je
sbb
imul
push
aas
add
lahf
mov
push
pop
cltd
insl
push
frstor
arpl
pop
imul
enter
add
mov
sahf
ds
test
scas
xlat
mov
mov
hlt
out
aas
sub
add
js
in
fprem
imul
xchg
fdivp
push
leave
xor
out
mov
mov
mov
lcall
push
lds
subl
je
into
in
push
inc
pusha
out
andl
cwtl
insb
out
jns
xor
xor
or
dec
mov
xchg
jmp
mov
push
pop
adc
dec
shll
popa
xor
lcall
popa
out
insl
sub
jnp
in
pop
or
icebp
ja
pop
push
bound
test
aas
pop
adc
inc
fstpt
jbe
mov
or
out
sarb
sbbl
mov
mov
inc
jns
ss
push
adc
fcomp
daa
mov
sub
aam
pusha
outsl
fabs
jg
out
fmull
data16
pushf
xor
lods
pusha
xor
or
imul
push
lds
loopne
pop
adc
addr16
stos
sbb
xor
mov
clc
mov
stos
popa
iret
outsl
mov
mov
int
mov
out
insl
jge
dec
movsb
push
lret
inc
push
faddl
aaa
jl
adc
inc
mov
inc
pop
and
orb
je
sahf
cld
xchg
stc
shr
mov
je
pop
cmp
jb
mov
mov
je
pop
xlat
aaa
cmp
sub
xchg
pop
adc
jne
fbstp
and
mov
sbb
jecxz
xchg
out
ds
jno
and
subb
jge
into
push
mov
xchg
push
adc
push
add
stc
sahf
bswap
insl
cmpsb
out
add
inc
repz
out
sbb
xchg
dec
sub
int3
mov
daa
clc
xchg
data16
inc
outsl
cmp
mov
nop
idiv
mov
test
inc
xchg
mov
out
adc
and
mov
mov
push
imul
mov
jge
aas
mov
imul
jecxz
push
mov
push
subl
pop
shr
call
mov
bound
add
leave
pop
cmpsb
cld
dec
sbb
lods
je
ret
nop
mov
jb
mov
mov
lahf
sub
mov
jae
fptan
insl
xchg
lcall
pop
insb
orb
cld
xchg
mov
mull
push
mov
aaa
jo
adc
je
jmp
mov
pusha
repz
pop
sub
add
pushf
loope
push
pop
dec
or
fmuls
mov
inc
loopne
sub
lea
outsb
gs
sbb
cmp
je
ljmp
and
mov
fs
inc
jge,pn
lock
int3
gs
mov
loopne
mov
js
dec
ficoms
daa
fiaddl
push
mov
adc
rclb
stc
into
adc
arpl
and
aaa
sub
imul
xchg
pop
jno
shrb
mov
xor
dec
jo
dec
adc
addr16
rcrl
pop
xchg
mov
dec
lock
adc
jmp
leave
dec
out
xor
in
mov
test
push
mov
mov
jge
jle
aad
mov
daa
and
xor
bnd
rol
cmp
push
mov
es
mov
rclb
lock
cmpb
pop
pop
dec
inc
jbe
push
je
inc
push
sahf
mov
pop
scas
out
call
ljmp
inc
out
xor
inc
out
jg
fisttpll
pop
dec
stc
in
push
jge
sub
ficoms
mov
jns
pop
ja
addr16
sbbl
jle
out
lcall
inc
inc
adc
int3
mov
mov
sub
sub
push
lcall
movsl
popa
js
xor
and
es
xor
int3
and
mulb
stos
scas
mov
dec
cmc
nop
pop
ljmp
mov
rcll
icebp
sub
xchg
dec
xor
xlat
lds
inc
pop
sub
sub
push
mov
es
test
lock
loope
cmpsb
or
jb
outsl
in
add
add
cmp
dec
insb
test
xor
xor
daa
jg
push
sub
jl
add
sbb
jle
push
fnsave
mov
mov
inc
xchg
aaa
rcrl
in
call
jo
sarb
mov
jle
push
lahf
xchg
lock
sbb
xor
xchg
fldenv
or
and
mov
xor
and
sarl
push
cmpsb
xchg
add
jae
dec
daa
call
lock
mov
shl
gs
sbb
test
mov
sti
icebp
testb
je
aaa
mov
xchg
and
movsl
pop
outsb
push
and
stc
or
mov
mov
fisubs
es
sarb
mov
dec
sti
icebp
jbe
adc
data16
xchg
icebp
rclb
dec
repz
stos
xor
int
dec
mov
pop
sahf
mov
and
les
dec
sar
dec
call
or
xchg
outsb
je
push
cmpl
fisubl
das
sub
outsb
mov
adc
repnz
mov
outsb
sti
add
lods
lea
cmpsb
pop
pushf
movsb
repz
dec
movsl
dec
aad
dec
cmp
adc
scas
int
sub
test
mov
fucomp
xor
out
sub
cmc
pushf
stc
xor
cwtl
ja
pop
ud1
cmpsb
cltd
mov
out
dec
jo
jnp
xchg
scas
jbe
pop
jmp
add
rolb
and
mov
xor
push
stos
in
dec
fwait
jo
ret
jno
out
mov
sahf
hlt
mov
movsb
sahf
enter
cmp
dec
or
xchg
in
and
jp
push
imul
out
jge
mov
jl
stos
lods
sub
push
in
add
and
fnstcw
test
mov
iret
arpl
aaa
xchg
je
add
scas
jp
sbb
pop
xchg
or
jae
add
push
bound
data16
push
push
js
outsb
pop
gs
adc
jge
sbb
lods
iret
jb
sti
pcmpgtw
push
push
sub
in
pop
int3
add
std
mov
jl
push
inc
jbe
mov
xchg
push
and
call
fs
mov
mov
cmp
mov
das
daa
cltd
fnstenv
sub
ja
add
popa
ja
adc
mov
shlb
adc
jbe
mov
js
out
icebp
inc
pop
int
ja
cwtl
xchg
push
orl
mov
inc
movsb
sub
push
jp
loopne
inc
fmull
arpl
mov
imul
mov
jb
stos
hlt
gs
and
dec
das
pop
adc
jo
push
cmp
test
imul
inc
scas
push
mov
js
ret
cli
dec
test
popl
icebp
mov
inc
fbld
enter
pop
dec
ljmp
jno
inc
pop
inc
dec
sub
jo
jle
dec
fs
jmp
mov
pop
inc
mov
jb
ret
fs
nop
jmp
je
push
xchg
popa
aas
pop
pop
mov
xchg
sbb
int
cwtl
adc
jo
out
shlb
test
xor
outsb
cmp
push
jl
icebp
inc
add
std
popa
and
je
xor
cmp
sbb
and
in
fs
dec
cli
testb
adc
ret
xchg
push
ljmp
cmp
out
jg
ud1
les
call
pop
add
adcb
pop
dec
imul
push
in
pop
jp,pn
mov
movsb
sar
jmp
dec
std
les
sub
and
fcompl
and
push
mov
dec
int
std
fdivrs
js
es
test
jmp
lea
cmpsb
xor
push
sub
add
movntq
inc
lods
adc
rcrb
dec
sbbl
xchg
subl
mov
sbb
in
push
fwait
dec
sbb
adc
out
dec
call
cmp
sbb
lret
out
push
subb
pop
inc
sbb
mov
bound
sbb
mov
mov
mov
push
lcall
dec
movsl
gs
mov
and
jge
test
jle
jns
xchg
icebp
addr16
pop
dec
mov
push
push
jg
nop
xlat
lds
fisubrs
or
push
je
or
faddp
nop
adc
pop
mov
xor
enter
iret
aaa
mov
mov
xor
adc
adc
arpl
mov
xor
mov
mov
cmp
mov
mov
xlat
stc
insl
cmp
cli
add
jo
jnp
sbb
fcmovb
js
out
jbe
pop
dec
xchg
push
scas
xlat
fldt
push
aad
pop
imul
jnp
mov
jb
cmp
mov
imul
jne
add
xor
inc
cmpsb
gs
lock
push
cmc
push
fwait
int3
push
pop
and
sbb
rorl
push
popf
addr16
inc
ja
outsl
imul
push
xchg
pop
loopne
in
orb
out
or
imul
sub
mov
mov
xor
add
pop
int
je
outsl
cmp
rclb
xchg
sbb
mov
sahf
jle
enter
sarb
mov
insl
aaa
subb
lock
push
xchg
pushf
fnstcw
mov
pop
cmp
hlt
ficoml
xor
aad
push
fldcw
adc
mov
mov
lods
cmp
pop
jbe
jmp
addr16
shl
or
ljmp
mov
sub
testb
rcll
push
loopne
jle
bound
jbe
test
pop
dec
aaa
mov
gs
fwait
xchg
pop
mov
push
popa
fs
cmp
pop
mov
shlb
dec
movsb
cld
arpl
icebp
ret
mov
jo
jb
adc
xor
lods
loope
sub
jno
push
xchg
sub
lcall
gs
test
jmp
or
pop
outsl
push
daa
fs
sbb
xchg
idivl
sub
dec
popa
mov
cmp
adc
and
and
dec
mov
sub
dec
inc
cltd
out
mov
xor
pushw
addr16
dec
jle
movsb
mov
push
xchg
mov
dec
lret
mov
sbb
into
add
fidivs
aas
adc
movsl
out
stc
push
dec
cmpsb
testl
inc
sbb
sub
add
jno
push
imul
xchg
mov
out
insl
das
je
cld
pusha
mov
jb
mov
xchg
jmp
inc
cmp
adc
adc
out
push
movsl
cmpsb
lcall
arpl
popf
inc
pop
jle
imul
and
lds
jmp
jge
sbb
or
sub
nop
test
jg
add
fwait
loopne
std
sti
sti
je
lock
push
inc
pop
jns
mov
arpl
push
mov
jp
sti
sarl
jnp
xchg
inc
je,pn
mov
push
cmp
ficoml
push
pop
es
lret
rclb
lea
push
mov
setnp
popf
fnsave
gs
and
fs
fcomip
fcmove
inc
fnstsw
inc
mov
jp
inc
test
inc
sub
mov
push
xor
xor
mulb
fs
in
je
adc
shlb
popa
pusha
jecxz
in
aas
xor
in
test
test
xchg
das
cmp
push
notb
ret
pop
outsb
ss
or
jno
xchg
cmp
xlat
loope
fsubl
or
shufps
sbb
xchg
cmc
les
jg
xchg
dec
ljmp
loope
xchg
sub
push
js
daa
mov
iret
mov
daa
xor
rclb
pop
outsb
sbb
mulb
mov
in
adc
dec
jae
push
rcrl
movsb
jp
shl
jns
sbb
int3
and
lret
je
ja
mov
jg
sub
es
popf
cmp
jmp
lds
sub
movsl
cli
cmp
out
stc
push
mov
es
lret
je
and
xchg
add
push
sbb
mov
sub
mov
gs
push
jmp
insb
in
jns
push
mov
je
insl
push
mov
enter
pop
push
js
std
clc
push
stc
cmpl
dec
sbb
fidivl
rorl
xchg
and
pop
nop
jno
shll
andl
cmp
jg
push
xor
or
add
cmp
jns
mov
cwtl
pop
push
pop
add
jge
adc
cli
rcrl
jle
cmp
test
mov
adc
scas
push
inc
sti
and
testb
and
gs
hlt
repz
cltd
sub
jecxz
shr
repnz
mov
mov
cli
mov
dec
call
lods
jge
loope
imul
incb
fnstcw
push
sub
out
jmp
xchg
jbe
test
cmpsl
out
xchg
inc
mov
repz
push
pop
jg
and
xchg
les
cmp
int
jmp
push
setne
outsb
je
pop
jmp
int
shlb
or
lea
cmp
push
int
shrl
jge
daa
push
shlb
push
sbb
fldln2
add
out
sub
icebp
xor
adc
mov
sbb
mov
cmp
jmp
xor
sub
mov
lret
or
sub
and
push
fistps
xor
mov
xchg
xchg
mov
ljmp
jp
pusha
fwait
jns
fs
cmp
cld
fwait
adc
out
movl
jp
imul
push
orl
out
xor
decb
jno
cmp
inc
push
ljmp
cmp
dec
jmp
xlat
lods
faddl
in
std
xchg
push
int3
xchg
fwait
insl
pop
jns
out
das
je
jae
in
bound
xchg
fwait
push
push
ja
mov
mov
jmp
shll
in
call
sbb
insb
das
push
lret
mov
imulb
ret
or
sbb
arpl
sahf
punpcklbw
loopne
cmp
cmc
dec
push
out
inc
mov
sbb
jno
pop
dec
insb
adc
sub
in
in
insl
call
cmp
adcb
add
inc
popa
fs
fmul
lcall
in
jne
pop
loope
jle
mov
std
mov
out
fs
insl
pushf
sbb
repnz
je
bound
popa
ljmp
jnp
xchg
shlb
cmp
cmpsb
jmp
ss
arpl
call
bound
imul
push
jge
insl
sbb
pusha
adc
jmp
push
out
das
je
ja
mov
adc
ss
enter
push
adc
push
loope
loopne
push
jns
mov
adc
jne
fdivrs
negl
sub
add
dec
add
stos
adc
outsl
call
stc
das
cmpsl
pop
push
push
pop
aaa
nop
inc
cmp
adc
jl
je
cmpsl
clc
adc
cmp
xchg
lret
or
js
fs
sub
sub
cmp
lds
jo
call
outsb
add
iret
pusha
daa
sbb
movsb
fildl
push
xchg
fisubrs
xlat
jns
in
out
pop
je
push
fmuls
jp
push
pop
mov
and
imul
pop
aas
pop
push
movsl
pusha
lods
jo
xchg
xor
sbb
sub
outsb
push
enter
loopne
inc
xchg
jns
jmp
scas
rcl
fs
jecxz
jbe
pop
push
add
test
les
insl
clc
cmp
adc
lods
cmp
ds
js
xor
adc
arpl
fs
cmp
stos
push
in
je
xchg
call
es
clc
sarb
in
push
mov
pusha
fldenv
je
pop
jmp
xor
sbb
push
xchg
insl
into
outsb
cmpsl
ljmp
cmpsb
mov
into
mov
or
fiaddl
dec
je
fdivrs
jge
cmp
push
or
cmpsb
das
inc
in
sbb
fs
jnp
ficoml
hlt
adc
in
jg
mov
std
insl
pop
sub
sub
pop
daa
mov
fidivl
cli
mov
inc
out
int3
in
js
ss
nop
sbb
pop
dec
push
test
xor
test
xor
fists
mov
lcall
xor
bound
rcrb
bnd
and
jo
test
sbb
xchg
jg
xor
das
test
sub
xchg
ja
out
scas
pop
out
mov
std
add
xor
adc
push
cmpsl
sub
cmpsb
inc
rorl
shrl
ja
gs
jp
ljmp
outsl
clc
testl
ret
lcall
xor
push
and
imul
test
push
sbb
jp
dec
add
arpl
adc
sub
cmpsl
jle
fidivs
and
je
pop
push
lret
das
mov
xchg
mov
imulb
jno
icebp
popf
sub
xor
imul
mov
out
mov
mov
movsl
push
and
xchg
or
mov
sub
loopne
std
out
lock
inc
rolb
fldenv
jns
jo
stos
mov
aas
ret
test
mov
push
jae
fisubrs
mov
mov
into
nop
cltd
sub
mov
push
or
pop
inc
inc
es
inc
and
jge
jo
add
pop
inc
inc
pop
add
pop
mov
jbe
pop
dec
rcrb
mov
dec
fs
ds
add
lods
push
rcl
adc
jne
mov
outsl
sbb
adc
inc
jmp
pop
outsb
push
or
cmp
por
mov
je
int3
testl
ret
int3
ja
lea
mov
faddl
cmp
and
cmpsl
scas
hlt
cmp
sub
in
and
mov
mov
jg
and
stos
popf
repnz
dec
dec
das
imul
cwtl
pushf
inc
inc
sbbb
pop
outsb
out
lods
push
shrb
xor
push
std
jg
je
fs
pop
out
and
adc
mov
add
fwait
jmp
mov
pop
in
and
push
and
out
mov
ja
and
out
shrl
dec
push
sbb
jge
adc
jmp
ud1
mov
std
mull
inc
hlt
and
or
dec
sub
imul
inc
xor
or
sahf
push
push
mov
xchg
call
jo
jns
xchg
xor
jno
sub
int
add
sub
stos
daa
fsubp
mov
mov
inc
sub
lock
movsb
inc
push
mov
xor
xchg
jg
fimuls
xor
sub
sahf
and
out
cli
jno
aas
mov
xorl
mov
pop
lret
aad
imul
add
cmp
mov
jns
movsl
ficoml
mov
out
dec
xor
or
sbb
fcomi
mov
int3
push
cmp
xor
cmc
je
or
sub
xlat
lds
jl
pop
insl
js
leave
mov
inc
sub
inc
sbb
mov
mov
jbe
or
sbb
enter
sti
lock
push
adc
push
mov
jp
cs
add
lods
addr16
pop
andb
adc
cmpsb
lods
daa
mov
shlb
dec
sbb
scas
push
popa
cmp
divb
or
out
es
dec
pusha
scas
pushf
or
imul
cld
ja
inc
fnstenv
xchg
ja
jle
andl
xor
xor
push
and
gs
out
add
into
aaa
fildll
mov
mov
aas
rcll
and
aam
andb
rclb
cltd
out
sbb
mov
xor
jae
jg
inc
xor
loope
repz
insl
push
xchg
sub
dec
jp
mov
cli
add
adc
xchg
shll
pop
pop
filds
cmc
inc
push
push
mov
outsl
fidivs
arpl
std
pop
inc
fs
dec
jge
bound
aas
imul
lods
andb
clc
imul
xchg
push
cltd
sbb
sbb
fdivp
jb
push
and
xor
xchg
jge
sbb
loope
enter
roll
movsb
out
lret
imul
dec
add
cwtl
inc
testl
testb
push
mul
out
adc
gs
push
fs
fdivs
cltd
jg
fidivrl
mov
adc
clc
inc
xchg
xchg
and
test
orl
dec
pushf
lret
fwait
inc
inc
add
iret
mov
mov
daa
jmp
jbe
xor
scas
xchg
push
xchg
inc
push
pushf
jnp
cltd
outsb
xlat
int3
jp
push
call
sbb
out
sahf
bound
inc
jge
push
sub
lock
stos
mov
lea
mov
popa
adc
inc
dec
jb
push
mov
ficompl
add
pop
pop
mov
and
mov
out
fldt
outsb
sub
es
test
jp
leave
and
orb
clc
mov
divb
std
movsl
xor
sbb
test
sbb
sbbb
inc
out
pushf
mov
sbb
add
push
subb
pop
clc
lret
dec
inc
sbb
adc
jmp
and
xchg
mov
or
sub
popa
rolb
sar
pushf
lea
sbb
pop
cltd
int3
mov
js
outsl
ss
sbbl
add
shrb
popfw
dec
sarb
push
loope
aam
jecxz
loop
mov
sar
nop
fdivr
je
fidivrl
jg
jle
out
adc
adc
jmp
mov
movsl
je
lret
add
int3
jl
into
outsl
mov
es
scas
int
andb
inc
jle
jne
push
jne
and
lock
repnz
pop
inc
sar
pop
push
jecxz
mov
or
mov
mov
mov
pop
mov
jo
iret
jmp
push
xchg
add
fcomi
call
mov
xchg
ret
inc
fs
subb
sub
test
push
adc
mov
pop
sar
ds
sub
jg
outsl
xchg
aas
shrl
jae
jns
push
fsubl
jmp
xchg
je
shlb
adc
testb
push
in
pop
push
loope
mov
mov
out
in
sub
insl
add
push
pop
addr16
sbb
mov
sbb
ficoml
pusha
xor
lret
loopew
mov
outsb
and
mov
push
sbb
orb
shrb
je
mov
or
mov
out
call
jbe
mov
imul
push
test
jo
xchg
lods
ljmp
fldt
cltd
push
mov
mov
into
cmpsl
xlat
pushf
sub
hlt
in
scas
or
mull
lret
xor
cmovo
adc
xchg
bound
xchg
pop
aam
and
sbbl
dec
enter
cltd
addb
add
jns
imul
cmp
jg
mov
cli
loope
je
mov
std
popf
inc
movsl
ds
adc
lods
out
push
sahf
xor
test
enter
fscale
fnclex
popa
clc
fs
cmp
in
fldl
mov
aam
fsubp
xchg
mov
cmp
cmpsl
aas
xor
push
imul
jg
jp
inc
or
std
jp
aaa
pop
sahf
test
push
cmp
mov
xchg
das
push
rcrl
dec
and
cltd
inc
add
adc
mov
fistl
in
mov
cli
cltd
and
sahf
fwait
add
movsb
jg
rclb
mov
movsl
nop
inc
cmp
jns
push
xchg
cltd
mov
je
mov
adc
test
in
cmpsb
dec
test
sbb
push
cmpsb
mov
les
enter
lret
push
cmpsl
mov
lret
cmp
sub
xchg
push
popf
mov
push
xchg
inc
xchg
jp
shll
popf
add
dec
add
mov
or
in
lds
ss
cltd
js
imul
fs
cli
mov
cs
cmpsl
rcrl
fs
hlt
scas
es
movups
cs
xor
jbe
adc
scas
or
lcall
sbb
loope
lea
push
pop
push
jmp
cmpsl
movsb
je
inc
xchg
xlat
adc
adc
cwtl
mov
push
std
stos
sbb
rorl
lcall
pop
inc
lods
sub
scas
loop
xchg
and
outsl
insb
iret
dec
pop
lds
cmp
push
scas
sbb
push
mov
pop
pop
arpl
mov
sub
push
and
inc
das
sub
push
xor
lock
sub
ljmp
pusha
mov
push
pop
psubq
pop
and
and
fs
pop
addr16
cmpsl
cmp
xor
push
xchg
repz
jnp
jae
push
push
xchg
pop
stos
jp
loopne
jge
pop
int
add
cltd
daa
enter
insb
mov
push
gs
enter
mov
and
adc
jecxz
jl
je
popf
loopne
out
or
hlt
push
push
mov
mov
std
inc
and
cmp
repz
shrl
dec
out
xlat
mov
pop
fadds
sub
arpl
pop
jns
popa
js
dec
xchg
push
jmp
xchg
xor
and
xor
ficoms
out
lret
iret
out
cmp
add
ja
sub
pop
movsl
es
mov
imul
lea
jmp
jo
orb
sub
inc
lock
cmp
call
mov
scas
out
push
fnstsw
mov
clc
and
popa
or
fucomip
aam
cmpsb
and
test
push
xchg
imul
cwtl
adc
and
sub
or
cmp
fldenv
int
xchg
and
adc
and
jle
or
push
ficompl
sbb
mov
je
insb
shl
fsubrp
or
push
mov
mov
out
lds
aad
aam
dec
xor
add
scas
sbb
fistpll
cltd
and
cs
mov
mov
sub
loopne
into
and
sub
int3
inc
or
push
sbb
divb
mov
mov
add
mov
xor
lds
shrl
adc
and
push
int3
jno
fs
jmp
ret
mov
sbb
ficoms
je
cmp
addr16
addr16
add
mov
in
incl
inc
xchg
push
lock
mov
iret
sbb
jns
adc
icebp
popa
push
scas
xor
test
xchg
pop
aas
cmpsl
daa
loope
sub
xchg
out
sbb
xchg
adc
jmp
gs
or
cmpsb
scas
imul
mov
in
sub
popf
add
inc
jb
shrb
adc
mov
xor
dec
shlb
fdivp
ret
or
ljmp
sub
sub
imul
imul
adc
in
pop
nop
popa
lods
sbb
je
mov
nop
movsb
jl
lahf
call
jnp
dec
enter
and
je
jne
stc
in
rorb
pop
sti
adc
call
movsb
icebp
mov
adc
jl
into
scas
push
jecxz
mov
dec
mov
clc
in
jle
cltd
jno
rorb
lahf
inc
pop
cmp
dec
dec
push
imul
jle
imul
clc
push
jp
sbb
sbb
cld
mov
xor
lea
popa
scas
inc
js
les
push
pop
adc
scas
pop
lods
dec
sub
xor
push
sub
inc
pop
xor
mov
outsb
xor
dec
add
scas
sahf
dec
aam
je
adc
je
jns
and
push
mov
test
push
lret
lock
lds
fistl
push
loope
shrl
icebp
push
repnz
cwtl
aas
insl
fcmovnu
xchg
push
inc
sbb
jecxz
and
popa
lahf
cmpsb
push
fistps
push
pop
js,pn
lock
fstcw
add
out
outsl
rclb
sub
or
out
lods
dec
xor
pop
or
inc
push
insb
jl
push
ficompl
jns
adc
gs
sbb
jno
xchg
icebp
pop
lret
std
sbb
int3
pop
or
sti
xor
and
jp
push
and
cmp
mov
pop
push
xchg
sahf
popf
lds
adc
je
cwtl
lock
jne
jnp
ret
imul
int
pop
jge
sti
out
gs
test
sbb
loopne
mov
fdivr
fnstsw
jle
pop
pop
or
or
or
imul
dec
sarb
xor
rcr
add
orl
xchg
mov
outsb
cmpsl
mov
fs
push
stos
xor
or
fs
push
push
mov
in
lds
jo
mov
adc
inc
or
mov
sub
out
inc
iret
fiaddl
aas
out
dec
shr
inc
je
push
fiadds
push
fwait
push
imul
sbb
fsubrs
ljmp
and
test
test
andb
popf
or
xor
pop
rcrl
mov
sub
hlt
cmp
adc
mov
loopne
cmp
jp
mov
in
mov
jnp
sub
fidivl
nop
mov
loope
jbe
mov
inc
sbb
jle
test
push
push
cmp
mov
cmc
loope
and
xor
aas
cmpl
jge
test
lret
ss
adc
loop
add
xchg
add
das
mov
xor
insb
sub
jns
cs
and
in
jnp
fs
scas
cmpsl
subl
cmc
hlt
nop
jge
adc
loopne
mov
adc
mov
lods
xor
mov
push
or
mov
mov
scas
push
mov
inc
cmc
mov
pop
rol
int
scas
pop
repnz
push
outsb
in
dec
and
andl
or
mov
jo
inc
lret
hlt
jecxz
mov
movsl
adc
addps
notrack
scas
loop
hlt
rol
movsb
cmpsb
push
and
fwait
rol
fistpll
sbb
jae
inc
add
inc
fnsave
add
repz
cltd
or
insb
scas
adc
xlat
mov
mov
push
push
push
loope
lret
inc
mov
ja
imul
fstl
call
cmc
mov
jnp
adc
add
movsl
pop
adc
pop
out
outsb
cmp
pusha
ss
jmp
sub
inc
rcrl
dec
int3
push
push
ja
mov
xchg
call
out
xor
sub
je
sbb
mov
mov
mov
idivl
cmpsb
ja
jp
popf
pop
pop
enter
insl
mov
inc
and
das
push
aaa
std
jno
cmp
cmpsb
push
mov
sub
inc
push
pop
outsl
lock
mov
cmp
je
sbb
jge
mov
hlt
loop
mov
jb
lahf
lock
pop
iret
in
add
mov
sbb
out
cmp
aas
dec
and
fs
in
orl
mov
fs
lret
jp
cli
dec
cmp
ja
pop
aam
stc
maxps
inc
js
daa
sub
add
das
mov
sub
add
imul
ja
aas
cmp
mov
add
jg
jle
pop
data16
mov
xchg
and
ljmp
cmp
or
sub
jb
lods
je
mov
imul
out
test
pop
inc
cs
dec
in
stos
enter
fwait
adc
cmp
mov
push
or
mov
sahf
arpl
inc
push
sbb
dec
insb
test
subb
xor
or
sahf
sub
adc
push
adc
in
je
and
xor
sub
or
xor
cmpsl
test
sub
add
imul
mov
andl
xchg
sub
nop
and
out
dec
sub
or
aam
and
inc
dec
das
lock
jl
gs
lds
test
mov
sti
cmp
cmp
fs
push
cmc
adc
imul
mov
addr16
aas
ret
xchg
cs
dec
or
push
enter
int3
push
jmp
sub
sub
loope
movsl
int3
fmuls
out
push
shl
pusha
adcb
push
dec
or
jb
adc
aad
jb
icebp
je
notl
fucomi
cmp
xor
inc
pop
and
cmp
out
movsb
add
or
jo
ja
pop
mov
in
popa
xor
int3
outsl
push
push
jmp
inc
ds
lret
dec
push
jno
fs
jp
or
in
inc
mov
adc
fidivs
xor
filds
sub
fdivrl
stos
or
adc
xchg
cmpb
pushf
shrb
jns
lcall
es
cmpb
dec
jb
jae
fidivl
mov
xlat
jle
mov
xchg
movsl
mov
jne
les
xchg
bswap
cmp
pop
dec
dec
ds
xchg
in
sbb
push
jge
dec
loopne
jp
or
mov
xchg
cltd
out
mov
sahf
negl
testb
das
xchg
outsb
outsb
mov
je
inc
cmp
xchg
push
cmpsb
mov
sub
sub
push
inc
test
enter
daa
je
cmp
cltd
lods
push
test
out
fdivr
adc
push
xchg
sahf
nop
xchg
ljmp
ret
xor
packsswb
pop
mov
inc
imul
push
mov
in
cmovae
mov
addl
in
out
sbb
add
inc
dec
fisubs
mov
push
repnz
nop
lock
aam
cmp
outsl
gs
popf
mov
adcl
xchg
out
sbb
cmpsl
xor
mov
into
fwait
js
push
push
out
push
scas
cmpsb
into
push
sub
xor
rolb
push
lock
mov
sub
xor
mov
in
les
adc
fs
shlb
mov
cmp
out
ljmp
sub
lock
mov
lea
je
cmpsb
jge
insl
dec
sbb
dec
jg
pop
fld
xor
cltd
aas
xor
xor
inc
pop
pop
gs
and
cltd
bound
pop
lahf
call
insb
fidivl
push
adc
inc
xchg
sub
stc
addr16
fimuls
push
pop
and
aam
out
insb
leave
inc
xlat
outsl
stos
aam
cmp
mov
pusha
cld
ds
stc
lea
stc
lret
mov
jl
adc
das
push
mov
adc
scas
cmp
mov
into
outsb
inc
dec
add
outsb
je
jle
popa
xor
out
test
inc
pop
frstor
mov
dec
mov
sti
cli
adc
push
push
mov
push
ja
fs
adc
sub
jne
ret
js
push
icebp
popf
jno
fs
xor
cltd
addb
pop
lret
mov
jae
orb
roll
iret
push
jg
jb
pop
stc
xchg
shrb
jl
sahf
mov
pop
xor
xor
rcrb
fcom
lods
test
cmp
sub
ss
jg
jno
cmp
dec
call
stos
inc
daa
fimuls
xor
sbb
and
mov
cmc
adc
push
pop
jne
and
mov
mov
out
addr16
adc
mov
mov
je
jnp
jl
rcl
xchg
lahf
jle
popf
pusha
sar
loopne
xchg
inc
mov
mov
push
je
int3
bound
mov
scas
mov
push
jbe
pop
jns
dec
out
test
filds
repz
sbb
cmp
lahf
gs
in
out
sbbl
mov
orb
or
jmp
xchg
rorb
push
lea
inc
adc
loop
cmpsb
int3
push
xor
pop
rcrb
mov
scas
jmp
jmp
movsb
or
test
mov
inc
je
test
outsb
jg
sub
adc
fcoms
adc
je
mov
jl
and
and
xchg
sbb
cmpsb
fs
jo
or
aaa
jg
and
rcll
cltd
sub
out
and
hlt
rcll
pop
mov
shrb
mov
pop
fldpi
push
push
lcall
movsb
jne
popa
movsl
and
add
xor
jge
and
dec
loope
and
lcall
clc
fidivrl
test
xchg
lods
xor
es
das
and
sub
cmp
in
repz
and
mov
fcoml
incl
imul
lahf
push
mov
pop
cmp
les
inc
sahf
push
ja
push
js
push
imul
mov
sub
push
sub
fiaddl
cmp
fldl
inc
das
ret
jge
add
and
push
cwtl
popf
outsl
adc
pop
sarb
lock
cmp
adc
flds
xor
push
out
fdivrs
test
sarb
sbb
push
fists
mov
movsl
icebp
les
mov
daa
pop
scas
jle
aas
push
ja
jno
inc
iret
adcb
int
xor
pop
addr16
loopne
cmpsl
jbe
and
and
lods
cmpsl
push
xchg
dec
inc
cmpb
in
frstor
push
xor
mov
pop
xor
xlat
je
test
out
cltd
shl
outsl
dec
mov
or
mov
xor
jmp
fisttpll
mov
inc
pusha
pop
push
or
sub
add
jmp
sub
or
push
mov
aam
mov
cs
fldlg2
lods
xchg
mov
or
mov
daa
push
pop
add
aas
push
orl
lret
lock
inc
fistl
nop
jmp
or
pop
adc
ret
ss
div
pop
dec
push
repz
jge
popl
pop
movsb
xchg
iret
mov
std
xor
mov
sbb
out
lds
cmp
test
movsb
jl
sbbb
cmp
mov
cmp
pop
pop
aaa
dec
push
pusha
adc
cmp
sbbl
imul
cwtl
ja
jne
mov
dec
lock
jp
pop
addr16
mov
pop
push
pop
add
imul
xor
mov
aas
jg
dec
insb
jmp
pop
mov
cmp
es
cltd
ds
insl
xchg
outsl
push
jp
popa
lret
fxch
cwtl
xor
mov
lods
push
addr16
cmp
testb
popf
jp
scas
in
std
fimuls
ret
inc
jg
divb
js
sbb
repnz
jno
mov
test
push
push
sbb
mov
call
stos
cmpsl
ja
and
mov
mov
ljmp
inc
int3
das
ret
push
sbb
loop
movsb
inc
sahf
outsb
push
fsubr
fs
jno
dec
xchg
movsb
cmp
dec
xchg
movsl
jge
aam
mov
jo
sub
icebp
xor
scas
mov
and
shrl
or
out
movsb
fsts
jmp
cwtl
pushl
scas
mov
dec
aas
sti
mov
pop
fistpl
fs
pop
fs
and
adc
fiaddl
push
insb
pop
inc
pop
lret
push
popf
scas
xor
mov
std
jns
popf
pop
stc
scas
xchg
aad
push
mov
cmpsl
adc
in
outsl
pop
inc
dec
add
cmpsb
out
aad
jno
jg
lds
stos
loop
aam
mov
cwtl
pop
fisubrl
jne
je
sti
push
sbb
aas
jns
mov
adc
outsl
inc
int3
in
push
jmp
sbb
add
ss
xchg
enter
flds
stos
daa
ret
inc
out
lods
push
daa
add
out
jne
loope
shrl
inc
scas
adc
and
add
imul
jmp
ret
add
jmp
lret
dec
jno
fs
mov
push
push
xor
scas
inc
std
xor
sar
cmpsb
cltd
ljmp
push
lods
stos
xchg
xchg
xchg
xor
dec
xor
int3
sbb
mov
out
push
pop
fcmovnb
sub
push
push
inc
cli
mov
daa
sti
hlt
or
movsb
mov
fucomi
lret
jo
out
outsb
inc
adc
mov
cmp
scas
inc
mov
dec
cmp
das
ljmp
pop
dec
ret
test
sub
xchg
pop
rep
push
int3
push
cmc
xor
out
aas
insb
mov
mov
dec
add
mov
push
fs
and
inc
idiv
add
mov
mov
or
pop
push
aad
enter
jbe
mov
imul
outsb
xchg
xlat
faddl
push
pop
fldl
je
push
sarl
push
xchg
cmpsb
icebp
into
je
ja
lock
push
shll
sbb
pushf
imul
outsl
es
and
fwait
push
pop
or
cld
add
mov
out
ud2
add
call
push
je
and
cmp
out
fs
add
sub
aaa
lret
push
cmp
mov
test
push
or
inc
adc
pop
aaa
pusha
pusha
mov
out
fdivrs
mov
enter
jl
adc
fs
dec
popa
push
mov
in
xorps
mov
cltd
ds
std
stos
sahf
shlb
movsl
sti
nop
cmp
jno
lcall
fcmovu
leave
sbb
fnstenv
push
push
sub
loopne
cmp
andb
es
loopne
adc
pop
jmp
dec
xor
jl
lcall
es
insl
pushf
and
je
inc
pop
xrelease
and
mov
sbb
lock
aam
daa
cmp
mov
or
je
cmp
fs
cmp
mov
push
and
das
mov
pop
xor
testl
pop
cmp
ljmp
repnz
adc
lret
sub
ret
lret
push
fisubrl
jae
and
push
test
mov
jmp
push
or
mul
popf
xor
xchg
cmpsb
push
ja
ljmp
lock
xor
and
jle
test
jl
adc
loop
jns
pop
int3
jle
pop
and
xchg
xchg
push
hlt
sbb
lods
cmp
das
cs
fsubrl
loope
sahf
mov
or
cli
adc
xlat
mov
std
stc
movsb
sarb
dec
std
cmpsb
sub
inc
jg
aas
xchg
pusha
lret
xor
lcall
add
add
movsl
jg
jnp
or
xor
setg
and
and
push
add
inc
fs
pop
idivb
inc
mov
imul
cmp
stos
sub
jecxz
pusha
outsl
mov
sbb
lret
ret
and
and
js
add
add
daa
out
ret
je
mov
mov
mov
fimull
cmp
fs
hlt
cwtl
ds
repz
fwait
jae
mov
loope
loopne
cmpsb
jge
cmp
inc
jp
sub
andb
dec
data16
imull
dec
mov
jl
jmp
data16
xchg
call
popf
jnp
adc
movsb
data16
sbb
cli
xchg
cwtl
sub
roll
jp
and
sub
imul
or
jb
push
cli
push
push
xchg
cmc
jns
mov
movsl
jnp
push
mov
add
cmp
daa
push
ja
add
cmpsl
repz
jns
or
fsubs
scas
push
cltd
xchg
aad
fdivl
je
mov
fisttpl
jnp
test
pop
push
xor
dec
popa
imul
pop
lahf
push
mov
fs
cmc
pop
pop
decb
mov
mov
lret
ja
push
or
sub
rcr
push
repnz
or
test
das
arpl
mov
insb
call
jp
mov
lret
int
mov
mov
in
mov
outsl
je
test
dec
mov
addb
in
sbb
pop
jb
insb
xor
sub
out
jecxz
popa
xor
and
je
in
ret
jmp
lock
and
je,pn
adc
fldenv
cmp
mov
loop
mov
popa
push
xor
sbb
sub
je
mov
jge
mov
cmpsb
inc
adc
xchg
jb
cmp
lahf
mov
hlt
inc
mov
loop
or
cmp
sbb
enter
xchg
js
out
jg
and
shrb
add
js
cs
jne
arpl
push
add
testb
fwait
bound
lcall
in
mov
jo
jp
sahf
cmp
mov
adc
xor
pop
sub
sbb
xor
insl
dec
fdiv
scas
cmpsl
push
xor
or
loop
call
or
insb
out
dec
ja
pop
fsubrs
fs
sbb
fwait
loope
sub
lock
xchg
jno
aad
shll
push
push
loope
mov
fists
xor
imul
mov
cltd
jae
push
jmp
iret
and
es
xstore-rng
cmpsl
add
jl
mov
sub
xchg
bound
icebp
push
dec
mov
scas
mov
testl
fs
sub
push
cmpsb
clc
xchg
aad
push
inc
je
jne
aas
hlt
jg
xchg
jp
rcl
and
fsts
ljmp
out
movsl
push
xor
or
push
lahf
add
cmpsb
xchg
fmuls
mov
mov
push
je
imul
fstps
aas
loopne
das
pop
aas
sahf
rcll
inc
leave
push
cmp
rolb
inc
xchg
xor
call
dec
les
insl
call
mov
inc
push
jle
lcall
pop
push
sahf
bound
dec
add
adc
int3
pusha
jp
lahf
repz
call
jo
cltd
aas
shrl
out
sbb
dec
or
xchg
fstl
jno
movb
lea
jno
pushf
lea
ja
jmp
daa
jmp
in
pop
sti
pop
xor
or
adc
sti
mov
subb
ret
xor
mov
or
rcl
or
inc
pop
dec
xor
cmc
imul
sahf
mov
and
xchg
in
aaa
or
mov
and
push
cmp
dec
xchg
adc
cmp
aam
jecxz
push
dec
rorl
pinsrw
cmpsb
or
aas
int3
xchg
adc
push
aam
pop
daa
xor
inc
and
daa
dec
rorl
jg
inc
push
out
lahf
daa
loopne
pop
lds
sbb
movhps
pop
add
xor
fisubl
jae
fildll
sahf
stos
lahf
sub
sbb
test
mov
inc
sub
jecxz
test
movzwl
btc
sar
cmc
cmp
mov
mov
pushl
movl
cmc
add
cmc
mov
cmp
bt
test
pusha
call
call
lea
jne
shr
mov
sbb
sub
dec
mov
clc
jmp
jle
call
push
mov
arpl
cmp
inc
ret
scas
or
sti
mov
sub
push
shrl
dec
outsb
jecxz
push
mov
xor
out
or
add
xor
push
aaa
jae
xor
pop
enter
jle
into
xchg
addr16
push
lret
test
dec
add
out
jl
mov
icebp
lcall
ficomps
mov
mov
scas
ja,pn
xchg
pop
stos
subl
movsl
lret
xor
out
xor
aas
jmp
pop
repz
out
out
fcoml
dec
jmp
lcall
push
fsubl
mov
push
mov
or
inc
add
outsl
xchg
add
jecxz
sahf
xchg
adc
pop
daa
add
enter
in
push
sub
pop
aas
mov
fisttpll
sbbb
out
sbb
pop
aad
aas
bswap
pop
ret
cmpl
inc
add
mov
xor
sub
filds
cmp
mov
out
jb
shrd
lea
cmp
gs
jns
cmp
or
push
pusha
lea
ja
call
add
push
push
js
arpl
gs
add
and
rep
bswap
mov
mov
pushf
pushl
pushf
lea
jmp
jp
sti
pop
pinsrw
xlat
ja
mov
scas
or
imul
icebp
xor
add
mov
das
loope
out
js
xor
rolb
lret
sub
mov
clc
sub
dec
lret
xor
or
mov
push
push
xor
insb
jle
mov
ss
cmp
testb
scas
std
dec
sbb
inc
xor
adc
in
movsl
sbb
jae
and
add
add
add
add
add
add
and
add
add
add
add
and
mov
out
cli
sub
pusha
mov
xor
es
pop
jmp
push
lods
loopne
mov
mov
jp
mov
or
push
mov
inc
add
mov
int
adc
and
pushf
dec
push
dec
sub
xchg
sub
js
inc
push
addl
movsb
fadds
enter
mov
add
mov
lcall
cmpsl
or
addr16
inc
pop
xchg
cmpsb
add
and
and
shll
sbbb
push
lret
sub
xlat
test
jg
sbb
mov
pushf
dec
mov
lret
mov
sbb
int
and
add
aas
inc
inc
aad
dec
push
and
pop
pop
fcompl
sahf
and
mov
aam
mov
out
fwait
cmp
cmp
fistps
lcall
cmp
and
or
mov
mov
scas
nop
xchg
xor
nop
negl
xor
mov
adc
in
pop
outsl
es
fsubl
test
and
mov
ds
xchg
jne
jnp
jnp
sbb
mov
mov
mov
mov
pop
ret
adc
bound
rcll
pop
xlat
inc
push
mov
lahf
pushf
cmp
ret
mov
mov
pop
bound
mov
hlt
je
xchg
in
jo
or
jmp
sub
cld
clc
out
jns
stos
jp
jne
push
insl
push
out
mov
outsb
cli
enter
mov
mov
mov
shl
insb
repnz
lcall
dec
in
mov
data16
fwait
decb
sti
subb
jmp
in
xchg
shlb
mov
pop
repz
mov
ljmp
in
mov
dec
sbb
mov
xor
outsb
jae
pop
rcrl
mov
iret
jb
std
sub
outsl
hlt
xchg
daa
rorb
sub
movsl
add
out
xchg
pop
outsl
sub
push
xchg
insl
insb
xor
shrl
and
mov
or
xor
cwtl
xchg
pop
test
out
cmp
jns
cmp
xor
ret
sub
add
scas
and
jnp
fwait
mov
int
stos
out
mov
cwtl
or
adc
ss
dec
shll
lock
jge
add
jnp
or
lods
ja
stos
lret
lods
fdivrl
mov
scas
xchg
and
push
xor
mov
negl
sub
fcoml
adcl
sub
xchg
jmp
mov
sub
test
gs
mov
iret
sub
mov
clc
sarl
cmp
lcall
add
pop
dec
cmc
push
jno
out
ficompl
jb
mov
in
movsl
jg
push
push
insl
mov
sahf
cli
popa
xor
aas
push
mov
or
pusha
sbb
shl
mov
xor
sub
das
pop
rorl
scas
fisubs
outsl
loope
loope
mov
mov
rdpmc
mov
push
mov
adc
xchg
mov
xlat
out
mov
mov
xor
mov
lea
ja
cld
pop
mov
outsl
movsb
pop
dec
push
and
sub
dec
cmc
enter
dec
sub
movsl
xor
and
jne
xchg
mov
jb
pusha
int
or
or
mov
shl
out
out
out
cli
or
cmp
xchg
nop
mov
add
scas
add
adc
test
daa
repz
shlb
pop
jle
inc
pop
fdivrs
pop
mov
sbb
or
sub
fs
or
cmpb
test
and
mov
cwtl
push
push
push
sbb
cmp
mov
ret
gs
popa
push
test
mov
movsl
insb
xor
inc
nop
mov
sub
pop
pop
dec
and
je
rorb
jns
lods
dec
call
sub
inc
es
xchg
adc
imul
jmp
popf
or
xor
sahf
shrb
das
in
cltd
mov
sbb
in
into
xchg
lahf
inc
inc
test
out
add
jne
cmpl
call
push
stos
in
fsubrs
push
cmp
pop
adc
adc
decl
icebp
in
pop
pop
mov
adc
or
in
xor
jecxz
in
cmp
pop
out
mov
sub
lea
mov
addr16
adc
mov
lds
shrl
fists
adc
addb
out
mov
stos
adc
mov
aad
adc
xchg
lds
aas
dec
jmp
outsb
fnstcw
stos
push
dec
and
lods
ss
mov
iret
xor
call
and
pop
mov
jmp
pop
sbb
push
in
cmp
mov
loopne
mov
cmp
mov
icebp
das
sub
in
outsb
jo
inc
dec
add
push
xchg
lahf
pop
xchg
cmp
sahf
jb
test
outsl
and
mov
shrl
jae
dec
test
test
ds
push
repz
mov
pushf
and
mov
push
jp
xor
fisubrs
addr16
outsl
add
rcrl
pop
cmp
inc
loop
mov
xor
mov
fsubp
dec
in
jns
aad
imul
dec
push
and
cmp
push
rorl
lret
jg
or
cmpsl
inc
push
out
pop
cmpsb
push
dec
popa
mov
outsl
xor
push
sub
in
lahf
xchg
bound
ret
xchg
fcompl
stos
inc
in
mov
mov
fmull
je
push
pop
push
clc
in
adc
ja
xor
imul
rcll
dec
fwait
mov
xor
lods
inc
lret
mov
repz
sbb
inc
test
mov
adc
push
ret
cwtl
mov
xlat
mov
cmp
or
fdivr
imul
fs
les
lcall
ds
jns
inc
adc
or
cmp
sbb
mov
or
push
fldt
in
or
xchg
cmp
cltd
xchg
inc
and
inc
xor
fdivrp
out
mov
adc
adc
shrb
lret
fisubs
lods
bound
jecxz
add
lea
nop
test
push
mov
jb
jmp
cmc
icebp
and
loop
xor
fst
adc
jle
aas
jl
enter
adc
xchg
scas
out
sbb
xchg
or
out
rcll
jg
stc
jb
pop
cld
xor
mov
sahf
xor
xchg
jbe,pn
xor
mov
movsb
fwait
mov
cmp
repnz
rcr
push
cmc
leave
pushf
fmull
stos
jmp
push
xor
mov
lea
add
inc
das
idivb
cs
lret
inc
test
sub
lds
inc
sub
mov
ss
xlat
push
mov
mov
iret
push
pop
add
mov
pop
in
clc
icebp
cli
xchg
fnsave
iret
mov
xchg
add
int3
ret
mov
addr16
add
ficoms
sub
cmp
scas
pop
mov
sub
enter
cmpl
std
cltd
fsub
jg
xor
call
mov
jecxz
adc
mov
add
inc
or
push
aas
das
nop
pop
push
cmpsb
pop
gs
and
jnp
out
push
or
sub
pop
dec
fisubl
das
inc
in
cwtl
arpl
push
xchg
sbb
repnz
mov
push
dec
fidivl
lds
stos
in
sahf
notb
jae
inc
sbb
clc
lcall
cmp
dec
mov
lahf
je
out
inc
adc
fdivl
adcb
pop
in
stos
push
cmp
in
and
xchg
call
pop
push
xor
pop
adc
jmp
or
xchg
push
xorb
cmpsl
sub
ljmp
sub
in
adc
jo
rcl
inc
sub
pop
inc
cld
lds
and
loop
sti
jns
xor
mov
pop
mov
gs
bound
pop
fistpl
jno
insb
dec
rclb
inc
or
mov
or
aad
addr16
pop
shl
lods
loope
mov
pop
nop
lods
fbld
or
xor
adc
ja
pop
inc
dec
insl
push
out
cmp
xchg
jb
and
icebp
ds
popa
jbe
xchg
add
arpl
and
inc
jge
pop
call
xchg
push
xchg
popa
add
mov
aaa
push
jno
sub
mov
push
iret
les
or
inc
icebp
mov
mov
pop
pop
mov
out
je
adc
xchg
jb
imul
push
mov
mov
add
xchg
push
or
sbb
inc
lods
sbb
jle
fbld
inc
or
in
cmp
sub
jbe
sbb
or
bound
in
push
test
pop
icebp
mov
fiaddl
lret
lcall
mov
popf
daa
inc
ljmp
xchg
testl
add
std
loopne
leave
mov
scas
sbb
mov
syscall
in
nop
ret
sbb
popl
sti
pop
add
xor
fwait
cwtl
add
jg
sbb
fdivr
lahf
in
pop
loope
mov
cs
dec
cmc
push
movsl
movsb
shlb
pop
mov
mov
push
lcall
sbb
sahf
jo
sbb
int3
fsubs
sub
xor
cmc
fstp
pop
nop
or
xchg
sub
push
sub
and
mov
pop
push
andb
mov
shrb
adc
pop
cmp
mov
outsb
lret
nop
and
xorb
shll
and
fidivl
aad
or
dec
jnp
sbb
mov
dec
sbb
adc
imul
fidivl
mov
push
inc
or
adc
cltd
sbb
int
in
cmp
inc
or
cmp
fmuls
int3
ja
pop
dec
imul
adc
and
repz
cltd
sarb
ja
and
jb
pop
rcrb
pop
dec
aad
roll
mov
imul
call
mov
sti
and
js
in
dec
push
popf
test
push
xchg
lret
push
inc
movb
pop
test
mov
inc
ljmp
mov
push
jne
mov
jo
push
add
or
mov
sub
mov
roll
sbb
adcl
cmovle
jnp
ss
fisttps
push
rclb
sub
add
add
push
mov
push
es
push
mov
jbe
mov
push
xchg
and
inc
sbb
loop
testb
pop
inc
sub
jns
jns
testl
inc
loop
filds
aaa
arpl
mov
out
scas
roll
xchg
push
gs
mov
icebp
lods
add
pusha
push
in
orl
adc
call
je
mov
xchg
lret
aam
xchg
cltd
sti
and
mov
jp
xchg
outsb
mov
aaa
or
test
push
pop
lea
je
sar
sub
setle
das
mov
aam
mov
bt
call
jmp
es
pinsrw
pop
add
push
stos
adc
jae
stc
in
pop
mov
in
inc
dec
aaa
cmp
mov
jne
mov
fmul
xchg
push
xor
mov
jo
fs
movb
cwtl
ja
cmp
mulps
inc
loope
clc
fiaddl
jo
adc
addr16
je
lea
jne
add
and
mov
sar
shld
sub
sbb
mov
stc
sub
clc
pushl
test
pusha
jmp
mov
stc
mov
test
setb
sbb
sub
lea
xchg
xchg
mov
lods
stc
not
mov
ror
pusha
and
test
pushf
sub
jmp
xchg
mov
sahf
pop
test
sub
xor
and
scas
push
ret
cli
add
cmp
dec
xor
add
in
mov
jle
icebp
in
inc
inc
ds
subb
loopne
mov
fcmovnbe
mov
or
sbb
aas
push
jg
dec
icebp
fsubs
cmpsb
in
sbb
and
movl
cmp
cmp
push
push
in
mov
aad
push
test
repz
jl
iret
repnz
adc
sti
jg
cmp
clc
cmpsb
xchg
jne
sti
fdivrl
shll
sbb
pop
cmpsl
mov
je
pushf
ljmp
inc
insb
sbb
sti
mov
mov
stos
mov
imul
mov
cltd
mov
jmp
add
xor
montmul
cmpsb
inc
mov
cmp
adcb
add
push
cld
gs
mov
mov
push
mov
adc
xchg
add
clc
cmp
push
call
jle
mov
pinsrw
pop
push
jo
negl
lds
xor
pop
add
ja
lcall
mov
sub
push
cwtl
sbb
add
gs
cld
adcb
dec
sub
sbb
jne
inc
aaa
mov
xor
and
fwait
dec
xor
push
cs
xor
js
jns
add
jb
test
push
shlb
sbbb
adc
fcmovnb
stos
dec
hlt
flds
dec
repz
in
and
hlt
xlat
out
aaa
jae
les
cltd
dec
pinsrw
outsl
dec
mov
ja
mov
jmp
jge
outsl
jns
movsl
push
aam
insl
aaa
sub
repz
adc
arpl
std
mov
dec
cmp
xor
fldcw
fimuls
xor
enter
lea
addr16
out
test
lahf
sbb
enter
sub
sub
sbb
lahf
xor
push
outsb
or
xchg
pop
std
icebp
popa
xor
scas
jle
pop
mov
andb
ja,pn
lods
adc
lea
je
sbb
and
stc
lea
sub
shrd
setnp
mov
push
aaa
jmp
pusha
call
btr
xadd
rcl
mov
lea
bts
pusha
rcl
mov
pushf
bt
stc
push
sub
pushf
test
repnz
pushf
lea
jne
seta
pushf
movzbw
mov
push
pusha
movb
pushf
lea
jmp
xor
cs
pinsrw
insb
mov
xor
cmp
shll
xchg
sbb
addr16
popa
mov
xor
fwait
imul
mov
sbb
jg
mov
test
nop
xor
or
push
lock
js
ret
mov
mov
cld
inc
ret
push
push
or
pop
into
insb
das
and
dec
push
sahf
mov
sub
push
pop
std
jp
xchg
xor
shlb
sub
dec
repz
dec
push
add
and
stos
pop
dec
pinsrw
jnp
std
filds
fs
jnp
sbb
jno
xlat
sbb
enter
inc
nop
jnp
dec
aas
aaa
ss
outsb
sub
enter
xor
gs
xchg
push
in
fisubl
dec
mov
fldt
and
addb
xchg
add
ret
insb
flds
fcomp
ss
outsl
test
add
mov
mov
mov
cmp
push
push
iret
xchg
sub
dec
sbb
sarb
inc
jo
mov
sarb
hlt
mov
pop
lea
sub
pinsrw
pop
jg
subl
outsb
dec
mov
repnz
ror
sbb
xor
mov
inc
sub
arpl
inc
in
inc
testb
sbb
and
sub
jecxz
or
fs
call
push
fsts
ljmp
aaa
jno
and
sbb
adc
cmpb
test
es
call
inc
jmp
dec
iret
repz
add
push
bound
fs
shlb
insl
lea
ja
sub
fs
in
and
stc
add
pushf
movzwl
sbb
shld
mov
mov
add
call
pusha
cmp
pushl
lea
je
pushf
cmp
pushf
pusha
movw
lea
jne
je
push
push
mov
pusha
lea
jmp
out
call
pop
jle
xchg
xchg
mov
cli
loope
push
sbb
adc
and
xchg
fisttpll
std
leave
fisubl
jecxz
lcall
xchg
data16
jbe
or
cmp
clc
pushl
stc
stos
pushf
in
mov
test
jg
xor
xchg
sub
sub
jo
adc
sbb
stos
and
sub
jb
cmp
mov
std
push
shlb
or
pushl
lea
je
lea
lea
call
lea
je
pushf
push
pushf
lea
jmp
sbb
inc
pinsrw
call
xchg
mov
and
in
stos
jnp
cvtpi2ps
jecxz
lret
das
push
cmp
dec
aad
mov
into
or
jge
xor
add
push
jl
outsl
mov
mov
xchg
out
mov
xchg
inc
sub
add
sahf
insb
or
imul
and
adc
pop
xchg
pop
frstor
rclb
or
sbb
iret
addr16
sbb
std
daa
or
pop
jge
jno
scas
scas
call
adc
mov
mov
pusha
pushl
ret
clc
pushl
popl
jmp
lea
jae
call
fsubs
inc
pinsrw
lret
outsl
push
mov
ss
sbb
adc
sbb
pop
out
sub
jne
and
push
mov
cmp
out
mov
sahf
les
mov
das
lret
fcompl
lea
inc
mov
je
xlat
pusha
int3
cltd
inc
enter
push
inc
sbb
xor
cmp
mov
xchg
lahf
mov
mov
mov
mov
or
xor
sbb
scas
jp
push
cmp
or
into
ja
andl
fisttps
push
jmp
es
inc
pinsrw
fildl
outsb
nop
xor
dec
xor
mov
add
xchg
test
jp
pop
icebp
xorl
push
aam
cmp
sub
mov
adc
in
xor
sbb
data16
cmp
call
sbb
inc
push
push
scas
psadbw
or
aam
pop
dec
jmp
jp
aas
popa
ret
pop
jmp
cli
inc
xor
mov
pinsrw
mov
dec
out
aam
xlat
cmp
loope
pop
jmp
in
decl
js
and
jle
mov
or
mov
pop
nop
cmp
mov
mov
ror
xchg
push
out
pcmpeqd
lods
stc
imul
imul
out
jnp
inc
mov
stos
jle
inc
sbb
lcall
xorl
test
and
fidivrs
xchg
leave
mov
loope
outsb
push
xchg
test
sbb
cmpsb
popl
add
les
mov
cld
pop
pop
inc
out
daa
lea
and
jg
mov
sbbb
xchg
push
add
lahf
jle
push
jge
mov
cld
aas
icebp
mov
out
pop
sub
jo
push
jmp
xchg
popf
mov
mov
lret
push
jno
lret
gs
dec
dec
mov
subl
dec
xor
dec
lret
shlb
mov
fwait
xchg
pinsrw
inc
test
lods
dec
repz
ja
shll
mov
pop
mov
cmp
lahf
xor
out
imul
ljmp
in
pop
mov
pop
pcmpgtd
mov
jmp
outsl
inc
addr16
cmp
je
mov
js
fistpl
xor
loopne
popf
jae
xor
ds
push
in
frstor
xchg
popa
dec
mov
jge
stos
fldcw
jbe
jmp
movsl
int3
out
daa
mov
ljmp
add
sbb
add
pop
std
std
lea
sub
inc
fldz
ror
mov
mov
pop
mov
pop
mov
jge
mov
inc
push
and
aam
pop
les
in
shll
adc
test
insl
lahf
xor
scas
das
add
cld
in
out
xchg
in
xchg
push
scas
add
sahf
stc
cld
sub
fists
jmp
adc
inc
inc
call
lea
push
not
push
mov
mov
pushf
lea
call
pushf
jmp
lea
jb
pushf
cmp
call
xlat
push
iret
inc
pinsrw
and
xchg
ja
cmp
inc
fimuls
mov
dec
cmp
loopne
clc
mov
add
mov
addr16
jge
push
xchg
divl
hlt
jo
xchg
adc
andl
and
xor
pop
mov
scas
add
rorl
sarb
cmp
adc
aaa
jne
lcall
mov
add
xor
add
pusha
lea
je
push
cmp
lea
push
push
push
pushl
ret
mov
movl
push
pushl
lea
jmp
lea
jb
clc
stc
cmp
pusha
jmp
jns
repnz
pinsrw
sub
scas
repz
clc
pop
shl
xor
or
jnp
popa
and
inc
mov
call
xor
mov
xchg
test
sahf
jmp
sbb
arpl
ret
dec
pop
push
push
lahf
cmpsb
mov
jnp
sahf
repz
ds
add
xchg
subl
push
inc
and
sbb
lds
lods
push
bound
inc
lods
adc
push
cmp
aam
leave
inc
dec
adc
push
or
lods
jmp
push
cmpsl
pop
inc
pinsrw
xor
sbb
sbb
in
adc
adc
xor
mov
test
lret
fiaddl
or
in
jne
in
mov
mov
les
add
xchg
adc
gs
cmp
sub
decl
outsl
dec
scas
xchg
inc
cmpsb
int3
icebp
push
cmp
mov
pop
and
imul
sti
clc
bt
cmc
cmp
pushf
pusha
jmp
lea
jb
bt
push
movl
cmp
push
push
jmp
scas
repnz
test
push
hlt
adc
jmp
and
fiadds
notb
stos
cs
push
in
sbb
pop
mov
sub
push
mov
or
ljmp
inc
jns
test
sub
lahf
or
mov
outsl
loope
mov
push
pop
loopne
pop
dec
dec
jns
icebp
inc
xor
cltd
clc
mov
xor
and
mov
rcrl
lock
push
add
test
test
imul
cmpsb
dec
mov
lcall
mov
push
mov
mov
cmp
clc
mov
imul
add
xchg
jl
dec
mov
mov
lods
in
cli
rcrb
push
and
call
xchg
in
dec
jp
movsl
push
pop
push
mov
sbb
cmp
ja
dec
mov
dec
push
lcall
or
inc
stos
loop
pop
inc
daa
mov
gs
adc
loope
fnstcw
lcall
lds
lods
sti
pop
pusha
daa
mov
fists
sub
adc
xchg
and
data16
mov
lods
pop
cld
adc
ja
fists
xchg
dec
sbb
cmp
xor
ret
cld
jg
ja
push
mov
scas
inc
test
dec
pop
inc
enter
shlb
and
and
push
aam
outsl
rcrl
adc
out
cmp
push
add
push
or
sub
sbb
push
lret
cmp
addr16
and
cs
mov
movsb
cltd
add
cltd
dec
mov
jp
xor
shrb
inc
cmc
ffree
notl
pop
aaa
sub
testb
cmpsb
or
jae
push
loopne
push
out
push
push
lahf
insb
jnp
jmp
cmp
repnz
mov
cld
mov
jne
in
xchg
pushf
mov
out
sbb
or
mov
mov
jb
sub
aam
pop
xchg
iret
and
lods
sbb
dec
fcoml
sbb
xchg
popl
lahf
push
mov
mov
mov
jge
addr16
lret
into
sbb
and
adc
cmpsl
jmp
inc
xchg
mov
pop
sub
adc
push
sub
hlt
and
cmp
mov
mov
cs
cmp
ret
testb
shll
imul
out
into
cli
dec
fdiv
mov
loope
push
push
aas
repz
lock
sub
lods
cmp
inc
mov
pop
ja
lcall
leave
dec
dec
les
fisttpll
lret
sub
xor
jge
shlb
subl
jns
pinsrw
mov
shlb
fwait
mov
mov
adc
call
rcpps
aad
dec
mov
xor
and
cmc
dec
and
aaa
and
scas
xchg
popf
lds
sbbb
mov
lock
test
sub
insb
adc
pop
test
nop
jns
add
mov
sbb
bound
cmp
les
and
ljmp
push
subb
fs
mov
jbe
jae
scas
iret
push
mov
or
pop
jne
sbb
jmp
xor
lret
xchg
xchg
dec
mov
clc
stc
addr16
movsl
pop
in
push
js
cli
jo
jne
jne
push
push
int3
dec
push
je
iret
popf
and
mov
sub
repz
bound
xlat
cmp
jg
or
insl
das
aas
in
push
dec
mov
cmp
or
pusha
jmp
inc
roll
push
stc
fidivrl
mov
mov
cmp
jg
enter
push
jo
ret
and
pushf
push
and
popf
enter
hlt
xor
mov
inc
pop
fildl
mov
mov
or
pusha
xchg
jecxz
ret
push
loope
jecxz
out
cmp
jecxz
sbb
daa
mov
lds
fcmovnb
imul
pushf
inc
mov
pop
inc
es
fwait
cmpsl
ud0
and
dec
lea
ja
setge
inc
call
lods
sub
cmp
mov
mov
cmpsl
or
dec
xchg
pushf
daa
fcompl
stos
sarl
sub
ficompl
adc
lock
cmc
xchg
and
arpl
aas
mov
jbe
inc
xchg
lahf
or
aad
mov
mov
loope
cmpl
pop
jns
jae
or
call
fwait
push
fsubs
jmp
mov
ja
xor
movsl
pop
push
movsl
cs
pop
cmpsb
mov
pop
aad
inc
or
adc
xchg
arpl
scas
mov
outsb
xlat
jl
or
mov
jg
inc
xor
ret
out
adc
pushf
lea
ja
rcr
cmp
sub
shld
pushf
shrd
btr
add
add
clc
call
push
cmp
les
ret
cmpsb
inc
jmp
sub
pop
jnp
or
and
ret
dec
mov
ja
cli
xlat
jl
sti
push
push
cwtl
sub
pop
sub
xor
jae
stos
xlat
adc
cmp
xchg
jge
stc
mov
popa
or
dec
inc
fistps
into
sub
ja
inc
jmp
cmp
inc
imul
aas
mov
sarl
pop
pushw
pinsrw
jno
jnp
aas
filds
scas
sbb
je
push
or
aas
nop
jp
mov
mov
enter
int
shrb
pop
push
adc
stc
push
sub
daa
bound
or
aas
rcrl
popf
bound
lods
sbb
pop
adc
jge
pop
sub
popa
hlt
jge
mov
jns
fisubrl
fisubl
out
lretw
rcr
xchg
dec
or
jnp
mov
lret
sbb
sahf
pop
mov
clc
test
clc
mov
pop
push
test
inc
scas
adc
mov
pop
inc
sub
push
into
xchg
jmp
lea
jne
rcl
sub
shl
not
mov
sub
neg
sub
push
cmc
pop
mov
call
call
add
inc
imul
inc
imul
aaa
pinsrw
shlb
lret
outsb
shll
jge
cmp
xor
and
inc
xor
decl
jge
fldcw
outsb
and
xchg
negb
mov
mov
push
jmp
in
sbb
push
jle
jo
or
flds
mov
sub
xor
sub
sti
popa
lds
pop
sub
adc
fwait
xor
cmp
push
jecxz
dec
gs
into
sbb
test
push
pop
in
fidivs
pop
xchg
imul
cmp
lock
pop
enter
adc
shl
movsl
xchg
testb
mov
mov
sbb
adc
jmp
inc
push
and
aad
call
test
enter
enter
stos
lahf
add
xor
insl
cli
sub
pop
test
sbb
dec
popf
push
sbb
dec
stc
loope
add
int3
jmp
push
lahf
call
icebp
xor
insl
aam
jp
mov
dec
setb
fadd
mov
dec
stos
sbb
out
cmc
jbe
dec
or
cltd
mov
dec
mov
je
adc
pop
inc
stos
into
xchg
and
dec
inc
aas
loope
or
mov
ss
xchg
rol
test
mov
jo
dec
pusha
cmp
inc
push
ja
lods
adc
int3
jno
addr16
lea
push
ljmp
into
jae
in
cmc
and
or
inc
mov
loop
jae
jge
adc
std
out
mov
jmp
imulb
shl
lret
pop
call
mov
sbb
rcr
sarl
int
shll
or
jnp
adc
ss
shll
popf
in
adc
test
cmp
mov
out
sub
out
dec
mov
lcall
push
add
shll
lods
aad
test
xlat
push
cld
inc
pop
mov
ds
shll
inc
imul
adc
nop
adc
stos
stc
stos
xor
push
inc
pusha
add
or
jecxz
jg
icebp
arpl
cmp
fldenv
lods
aas
pop
ljmp
sbb
lods
push
js
xchg
imul
xchg
int
repnz
mov
out
xor
mov
mov
mov
sub
lahf
inc
shll
repz
xor
xchg
mov
arpl
scas
lea
jl
jmp
loop
stos
inc
mov
clc
je
push
cmp
in
in
mov
and
adc
jo
insl
push
and
push
and
jne
jb
sbb
fwait
les
cmp
sub
and
fldl
xchg
jle
xchg
int3
je
in
xor
les
sbb
dec
sub
mov
sub
lods
out
pop
incl
iret
cmpsl
test
inc
xchg
cmp
and
out
es
ret
sarb
jp
mov
mov
fs
inc
loopne
mov
jb
ds
inc
mov
dec
inc
ljmp
lods
jae
xchg
cltd
xor
xchg
inc
inc
and
mov
jg
xchg
jb
mov
mov
jecxz
and
lock
and
sub
jmp
jno
push
xorb
imul
jns
dec
dec
lock
sub
out
scas
out
outsl
out
push
jb
pop
insl
outsb
js,pn
in
add
icebp
pop
insb
sti
insb
sub
or
push
in
mov
or
push
fbld
data16
arpl
cwtl
fs
arpl
cwtl
bound
arpl
cwtl
pusha
jo
arpl
cwtl
jle
icebp
arpl
cwtl
jnp
icebp
arpl
cwtl
ja
icebp
arpl
cwtl
jae
mov
push
lahf
les
insl
or
js
mov
xor
pop
jge
jns
hlt
jne
dec
outsl
xor
lahf
hlt
arpl
clc
insl
adc
clc
insl
lock
clc
shlb
mov
cmp
mov
icebp
popa
mov
addr16
loopne
xor
jg
and
scas
jo
jo
lods
dec
cmc
arpl
sbb
js
xchg
xchg
jge
mov
jno
ss
cmp
aad
xchg
in
jne
adc
insb
enter
xchg
jns
jns
daa
ret
inc
ret
les
mov
push
popl
jl
rorl
dec
sub
ljmp
adc
or
enter
adc
mov
nop
in
out
jo
mov
outsb
xor
outsb
inc
imul
adc
push
in
xor
call
aaa
mov
sub
mov
mov
jle
call
in
sbb
out
in
ror
stos
sub
in
pusha
sub
push
jmp
ljmp
call
das
jecxz
loop
loope
loopne
call
das
sti
in
cli
push
imul
div
inc
hlt
das
repz
repnz
dec
out
sub
inc
jmp
ljmp
inc
adc
lock
and
dec
and
xor
out
es
outsl
mov
jns
outsb
lahf
clc
testl
or
js
andl
imul
mov
imul
dec
mov
push
jecxz
hlt
inc
std
sub
xor
outsl
std
iret
dec
dec
das
lods
pmulhuw
jp
call
das
icebp
sub
push
out
in
inc
loopne
in
cld
push
imul
hlt
jb
dec
xor
cmp
outsl
ja
inc
sub
insb
push
test
out
test
int
inc
push
jg
int
call
pop
das
sub
stc
ljmp
enter
jne
movl
mov
inc
movsb
fmul
cmp
adc
popa
stc
data16
outsl
sub
insb
dec
into
pusha
insl
lock
insl
outsl
sti
cmpsb
insl
outsl
call
outsl
dec
clc
into
inc
jne
decb
jae
imul
xor
sbb
outsl
js
push
sbb
cmp
arpl
cmpsl
jge
cld
out
popa
dec
xor
les
inc
jns
out
in
jbe
push
pop
jae
insl
jo
call
das
ljmp
sub
loop
in
dec
pusha
sub
sub
in
imull
pop
jne
scas
call
pop
inc
adc
insl
in
adc
pop
cvtps2pi
outsb
bound
das
in
lock
jnp
int
inc
nop
das
cmc
insb
jae
lea
pusha
ja
sub
outsl
into
in
out
push
shr
imul
je
outsl
negl
push
pop
xor
outsb
sub
popa
inc
call
push
mov
jl
pop
in
clc
push
pop
call
cmpsb
inc
cmp
in
in
imull
pop
mov
out
mov
inc
xchg
das
pusha
or
inc
add
push
sub
cmp
mov
lock
jns
mov
adc
iret
movsb
scas
inc
out
inc
movsb
pop
push
lds
in
push
dec
lock
divb
xor
out
mov
mov
int3
loopne
popa
in
xchg
cmpsb
xlat
mov
push
mov
iret
or
xlat
imul
call
dec
sub
pop
insl
loope
cmp
outsl
shrl
scas
sub
push
out
imul
sub
push
push
insl
testl
or
insl
jecxz
jo
shr
jg
shll
outsl
out
jg
jo
arpl
call
je
xor
inc
repz
outsl
mov
imul
outsl
jae
add
jmp
dec
inc
call
in
shrb
loop
jo
mov
jmp
jo
and
fldt
in
jo
fiaddl
jp
push
push
movsb
pop
pop
insl
js
call
dec
lock
jg
dec
inc
arpl
addr16
adc
popa
jo
arpl
sub
in
ss
dec
jnp
aaa
cli
pushl
mov
icebp
jo
cmpsl
outsl
outsl
jo
sub
inc
ljmp
push
dec
xor
pushl
insb
andl
jle
jo
mov
dec
cmc
out
jmp
sub
jnp
dec
aaa
inc
lods
jbe
dec
repnz
fs
xor
jp
lods
jae
jle
dec
xchg
fdivrl
mov
enter
cmp
jmp
enter
dec
jge
jecxz
jo
xlat
push
mov
popa
js
stc
lahf
fistpll
je
cs
rcrb
idiv
push
dec
sub
dec
fistl
cmpl
outsl
testb
stos
add
fsubl
mov
add
or
or
insb
adc
xlat
sub
jle
loope
icebp
insl
data16
stos
jo
and
jmp
and
and
rorb
add
jge
mov
popa
jb
push
call
sub
mov
jo
jg,pt
cmp
push
push
decb
cmp
jnp
fwait
mov
pop
imull
jne
pop
je
dec
mov
outsl
in
xorb
fisubrs
jge
dec
xor
cmp
dec
or
jle
dec
push
loope
imul
inc
cli
decl
jne
js
jecxz
jl
dec
insb
inc
push
jge
imul
fsubs
jae
jne
inc
push
jge
dec
test
outsl
add
cmp
out
jo
jge
xchg
dec
lods
jnp
jns
push
jbe
pop
imul
scas
mov
pusha
lret
out
imul
add
push
sar
dec
push
in
arpl
jle
dec
and
cmp
arpl
jp
push
push
sub
jae
dec
out
lock
pop
jle
mov
and
pusha
ss
mov
dec
aad
jge
push
dec
jo
insb
push
inc
cli
jo
jo
jns
jnp
dec
jnp
mov
jno
sub
arpl
andb
jnp
pop
push
xor
loop
mov
test
dec
popa
out
and
les
dec
mov
dec
sarb
cmc
mov
or
stos
dec
inc
xor
dec
iret
gs
jb
dec
push
dec
mov
lret
dec
addr16
pop
jl
call
jp
outsw
outsb
stos
xor
inc
jo
adc
add
sub
add
enter
filds
sub
mov
imulb
pop
jae
imul
addr16
jnp
jp
push
jns
js
jbe
inc
je
jae
jb
outsl
or
ja
repnz
stc
cli
push
lock
jne
jo
push
sub
test
out
mov
sarl
sub
push
jg
jge
sti
pop
jns
imul
hlt
repnz
jo
inc
out
das
insl
in
ljmp
call
das
cld
in
cli
push
je
flds
es
dec
jo
int3
jg
in
xchg
cwtl
xor
fs
inc
pop
hlt
imul
jo
lahf
and
dec
int3
gs
lock
lcall
lock
aaa
adc
call
adc
out
pop
insl
mov
aad
dec
roll
das
icebp
in
pusha
push
push
call
das
xchg
in
imulb
pop
je
shr
icebp
repnz
outsl
mov
in
xor
pop
push
sub
inc
xchg
das
arpl
mov
loopne
shrl
inc
adc
jp
xor
div
jne
push
push
jmp
lock
pop
adc
std
aad
out
ljmp
jg
int3
ret
outsl
or
ljmp
jo
adc
mov
xor
xor
loope
mul
jl
jle
push
outsl
sub
jmp
in
inc
out
dec
mov
data16
loopne
or
out
inc
jp
push
xor
cwtl
arpl
nop
out
js
add
xchg
jp
mov
add
das
pusha
in
xor
pop
icebp
sub
sbb
imul
rolb
mov
cmp
adc
in
jecxz
test
js
in
repnz
stc
mov
loope
ljmp
sbb
insb
push
lock
adc
mov
push
popa
and
mov
outsb
pop
insl
sub
imul
data16
addr16
pusha
jnp
sti
outsl
inc
jae
out
call
out
ficoms
cmp
test
hlt
shlb
mov
nop
in
jo
mov
xor
js
pop
iret
sub
inc
dec
das
das
in
punpckhbw
pop
into
sub
xor
push
xor
lods
xor
dec
xor
in
xor
mov
sub
or
jmp
lret
xor
or
in
xor
jmp
fsts
lock
or
icebp
nop
adcb
arpl
push
out
and
lock
loope
jg
jge
cli
clc
inc
imulb
hlt
in
jb
out
sub
fdivl
push
call
das
repnz
icebp
pop
dec
bound
das
out
in
insl
cmpsb
inc
je
repnz
inc
rcll
in
and
lock
into
jo
pop
cs
testl
dec
enter
in
sti
push
sbb
mov
pop
in
stc
push
cli
call
das
cltd
in
mov
movsb
pop
test
inc
add
jecxz
ret
push
arpl
sub
add
dec
pop
dec
push
pop
push
jns
inc
xor
inc
jp
add
xor
jp
in
jne
inc
and
movsb
es
cwtl
fs
mov
std
sub
in
hlt
push
xor
jne
test
jo
lock
lock
insl
sbb
fs
daa
jne
cld
push
sub
push
loopne
mov
inc
jb
jae
jne
jns
popa
sub
mov
imul
jmp
or
xchg
mov
arpl
out
loope
add
sbb
lahf
xchg
outsl
ja
repz
cmc
jno
adc
lea
addr16
jecxz
in
sbb
sbbl
jb
clc
ljmp
nop
cwtl
mov
loopne
cli
loop
add
sbb
orb
outsb
jbe
hlt
out
divb
adc
push
mov
jle
cld
in
out
sbb
push
push
pushf
test
sub
scas
mov
mov
push
pop
dec
push
iret
xlat
leave
shll
sub
and
inc
dec
pop
inc
ffreep
fld
jno
xor
lods
mov
dec
push
dec
push
lret
ror
aad
cmp
mov
inc
pop
inc
fcmovnb
ffree
jno
cmp
xor
push
pop
dec
push
rcr
lret
and
cmp
mov
inc
dec
pop
inc
ror
ret
xor
lods
mov
mov
dec
push
dec
push
int3
aam
jno
and
es
pop
inc
pop
inc
fadd
faddp
sahf
mov
out
popf
pop
sub
outsl
dec
mov
sbb
adc
icebp
add
enter
outsb
jnp
in
dec
ret
out
and
lret
das
mov
out
in
mov
or
insb
or
out
imul
push
outsl
and
insb
mov
in
cltd
das
mov
call
arpl
push
xchg
mov
xchg
inc
push
mov
cmp
bnd
adc
xchg
and
insl
or
in
push
jno
insl
cwtl
add
jmp
sbb
mov
jl
mov
push
push
in
clc
xor
dec
push
outsb
push
or
sub
push
adc
clc
out
push
dec
cmpsl
insb
jle
dec
js
sub
test
lret
scas
dec
loopne
das
or
push
push
dec
das
sub
or
in
pop
int
scas
call
das
int3
in
jmp
or
sub
inc
lods
das
in
mov
pop
lret
call
das
mov
test
outsl
std
outsl
xor
or
out
sub
scas
mov
cmp
jmp
outsl
in
scas
loopne
scas
fucomp
xor
int3
addr16
das
pop
in
int3
out
call
int3
sub
or
inc
in
fs
bound
outsb
cmpsl
fs
inc
mov
out
pop
push
and
shrb
std
das
pop
fs
out
scas
lock
das
repz
sub
insl
cmpsb
pop
outsb
in
dec
push
aam
out
fucomp
pop
lock
pop
fsubrl
insb
and
jno
lock
outsb
xchg
pop
or
xchg
cltd
cmp
mov
lea
dec
dec
mov
jno
inc
nop
sub
jno
pop
jo
sub
into
jno
push
jae
or
scas
mov
cs
lods
mov
push
dec
mov
mov
dec
sub
out
cmpsb
xchg
inc
es
imul
bound
jno
loopne
mov
jno
pop
fidivrs
ds
pushf
jl
pop
cmp
sbb
fidivrl
cmp
sbb
fdivrs
cmp
pop
not
jno
xchg
jbe
ss
xor
mov
je
xor
jno
adc
shlb
xor
dec
pop
nop
cmp
nop
lods
sbb
dec
push
popa
cmp
nop
inc
inc
cvtps2pi
out
sub
or
into
addr16
pop
in
xor
push
int3
push
mov
test
and
sbb
cli
ja
aam
jge
jno
xor
push
dec
es
in
xchg
outsb
das
jp
jne
push
jb
sbb
lea
popf
jno
push
xlat
dec
dec
jp
out
out
and
nop
insl
arpl
addl
mov
and
fwait
testl
ret
adcl
in
jle
scas
sbb
or
jnp
inc
fsub
and
push
pop
out
jmp
imul
inc
or
and
outsb
daa
inc
insb
add
sub
shl
addb
stc
jmp
or
out
out
adcb
push
inc
cmp
rcrb
lret
xchg
and
dec
add
jo
decb
xor
loop
lock
arpl
and
ds
sub
and
pop
arpl
daa
movsl
and
adc
lret
std
in
je
sahf
hlt
push
push
bound
inc
pop
out
repz
pop
jmp
push
gs
and
inc
loop
xor
ja
icebp
pushf
scas
das
rcll
adc
nop
stos
mov
out
adc
adc
jo
insb
mov
arpl
xlat
jo
jo
addr16
in
stc
mov
mov
imul
push
sub
lcall
jecxz
dec
and
shlb
or
push
out
jp
into
repz
xor
outsl
out
out
out
scas
pusha
leave
push
xor
or
daa
je,pn
dec
add
sub
mov
leave
call
push
insl
sahf
add
popa
outsb
int
ljmp
cmp
sarb
jno
mov
loop
data16
sbb
mov
or
mov
xchg
sub
inc
popa
pop
add
mov
inc
std
in
sti
rolb
and
jge
out
daa
add
push
out
sbb
mov
or
jg
insl
cmpsb
je
lret
mov
add
jo
jae
rcl
and
xchg
leave
jae
jae
inc
subb
xchg
sarl
mov
out
pop
push
je
mov
xor
daa
addr16
jg
add
xchg
iret
je
adc
pushf
ljmp
lds
jb
pusha
cmpl
mov
rorb
inc
add
xchg
rcrb
jnp
lods
insl
jne
lea
cwtl
or
pop
cmp
das
sti
jecxz
jno
in
pop
add
std
aas
leave
cmp
xor
fldcw
xor
out
add
in
xchg
push
fs
imul
das
inc
mov
out
mov
clc
outsb
daa
push
sub
add
pop
xchg
in
loope
in
or
aad
out
mov
dec
je
insb
cmpsb
mov
push
sub
insl
or
js
out
pop
sub
nop
or
loop
and
out
jmp
fisubrs
add
mov
jmp
imul
mov
daa
jl
je
sti
adcb
sbb
lds
push
lods
in
cmp
pop
notl
add
pop
test
cwtl
in
xor
jg
lods
xchg
cs
inc
lcall
out
and
loopne
mov
mov
sbb
andb
mov
rorb
jns
test
out
jecxz
cmpsb
mov
jle
and
mov
sub
pop
xor
scas
fmull
pop
loop
inc
daa
in
cmp
jnp
push
jp
push
test
gs
out
push
adc
jno
rclb
dec
je
or
push
cmc
sbb
cmp
cmpsb
push
push
inc
repz
and
or
out
sbb
cwtl
enter
dec
add
lock
or
cwtl
nop
sub
jo
sub
test
mov
icebp
inc
and
outsb
ret
jge
cmc
adc
cmpsb
pop
mov
dec
aam
clc
pop
cmpsl
dec
in
daa
mov
out
out
lock
pusha
in
je
xchg
movdqa
out
loope
adc
das
or
xchg
cld
push
jmp
inc
clc
aas
cmp
rclb
xchg
jae
mov
dec
mov
sub
mov
das
dec
fdivs
outsl
inc
stos
hlt
mov
sbb
or
and
inc
mov
or
movsb
cmp
jecxz
sub
xchg
xor
cmp
push
lock
adc
push
mov
xchg
dec
lock
cwtl
mov
pushf
ja
popa
jne
es
mov
jp
xor
das
je
xchg
xlat
dec
jle
dec
add
and
cmp
ja
test
mov
mov
sub
cltd
dec
enter
lea
adc
push
cmc
mov
mov
ja
cmp
cmpsb
push
push
lock
push
mov
or
js
out
cmp
xchg
pop
pop
mov
add
loope
jo
outsl
out
sub
stc
mov
xor
push
mov
int3
in
mov
enter
js
mov
cwtl
xchg
jo
pcmpeqb
mov
fucomip
mov
in
or
add
ja
sti
jl
mov
imul
test
insl
cmp
icebp
inc
jg
inc
test
clc
aaa
or
jo
push
sub
add
and
packuswb
inc
add
mov
pop
aad
push
lods
insl
dec
mov
and
mov
das
cmpsl
lock
cmpsb
out
pop
dec
in
xor
scas
sbb
sub
stc
push
loopne
sub
js
cmp
jnp
dec
iret
shrl
add
stos
dec
hlt
sub
or
lahf
stos
pop
clc
fldt
lahf
sub
out
or
out
jnp
ja
ja
test
cmp
test
call
sub
js
rcll
fisubrl
adc
mov
mov
sub
jb
aad
insl
xchg
add
mov
call
rorb
lock
orb
inc
xchg
adc
ja
mov
addl
jmp
aaa
and
mov
jo
dec
sti
dec
push
sbb
adc
movsl
leave
mov
inc
xor
xchg
fdivs
add
insb
mov
adc
imul
out
shr
sub
in
or
int3
dec
or
cmpsl
ror
mov
push
and
mov
inc
sub
xchg
and
ss
mov
xchg
adc
je
adc
imul
cmp
and
add
mov
testl
ljmp
or
push
sbb
xor
jb
mov
ljmp
stos
outsl
jmp
jge
ret
cmpsl
pop
nop
addr16
insb
adc
jno
or
loop
je
pop
xchg
int
sbb
out
test
xor
cli
lods
inc
mov
iret
rcrb
pop
movsb
imul
popa
lea
out
call
insb
jl
fs
pop
xacquire
in
aam
fsubrl
push
sub
aam
cmp
aam
mov
clc
and
xlat
test
dec
shrl
imul
loopne
cmpsb
imull
lcall
gs
cmpsb
dec
add
jo
stos
mov
scas
mov
pop
daa
out
push
addr16
pushf
lods
addl
inc
jo
push
push
daa
cli
add
mov
imul
push
hlt
scas
scas
pop
out
fwait
lods
and
leave
xchg
je
daa
xlat
pop
inc
dec
int
mov
scas
sbb
outsb
test
add
movsb
inc
in
cmpsl
cmp
hlt
lock
addr16
lcall
outsb
mov
notb
mov
xchg
or
out
push
arpl
mov
mov
insb
addb
inc
enter
sbb
mov
lock
ljmp
add
and
mov
addr16
cmp
xor
stos
jg
add
and
xchg
jp
jo
lea
dec
cmp
mov
stc
jo
and
sbb
and
push
lahf
push
test
or
pop
or
sub
nop
jl
jb
xchg
out
or
jp
or
leave
and
jl
push
out
and
pop
pop
fstpl
adc
lock
pushf
imul
aam
adc
jbe
mov
ljmp
loopne
push
lahf
std
leave
out
mov
loop
jae
mov
pop
cs
xlat
lahf
fidivl
roll
pop
shlb
fcomps
bound
les
out
sahf
out
add
ret
popf
lods
into
sub
fildll
loop
add
outsb
ds
cmpsb
sub
mov
lods
mov
push
ljmp
cmp
and
push
xchg
test
inc
fidivrs
inc
sbb
xor
sub
cmc
or
test
jb
xor
imul
push
xorb
mov
mov
push
fldlg2
pop
mov
mov
jg
inc
punpcklwd
out
sub
push
or
pop
cmp
aad
push
daa
vpmaxsw
sbb
icebp
jne
jo
jge
out
outsl
push
push
shlb
and
lock
sub
cmp
outsb
or
or
xor
aas
pop
push
and
xchg
and
dec
dec
js
daa
sub
jo
mov
or
or
mov
lret
push
shrl
jmp
test
inc
popa
sub
cmp
jmp
cmovo
add
xor
xchg
pop
add
cwtl
inc
ret
push
insl
mov
pop
hlt
out
or
sub
arpl
inc
je
dec
or
jg
dec
dec
pop
outsb
jmp
add
cmpsl
push
icebp
enter
pop
je
jae
fistps
dec
adc
xor
in
xchg
cmp
push
test
inc
arpl
out
cmp
adc
jne
xchg
das
je
dec
cmc
mov
push
push
cmp
ret
subb
xor
inc
mov
leave
mov
inc
outsl
out
fiadds
gs
push
sbb
inc
xchg
fs
lea
push
lock
xor
sbb
addr16
cmp
push
xchg
xchg
into
call
iret
xor
sub
out
pop
hlt
std
cmp
scas
fs
adc
insl
jns
and
stc
sbb
inc
repz
addr16
loop
mov
dec
fdiv
cmp
popf
jb
outsl
pop
push
sahf
out
in
sahf
or
rcl
std
addr16
out
scas
adc
fisttpll
add
insl
mov
push
adc
sbb
cwtl
inc
out
jge
sub
or
in
mov
in
mov
out
jmp
imul
ljmp
jle
aad
call
inc
push
imul
mov
les
out
mov
jmp
das
aas
out
addr16
mov
gs
scas
pop
fs
in
gs
lds
loop
bound
loopne
pusha
push
dec
cltd
aas
mov
push
xor
jle
pop
std
in
jge
je
mov
sub
or
mov
sti
stos
dec
jnp
or
cld
jmp
jp
stc
outsl
int
mov
lods
stos
outsb
jns
xor
and
fs
sarb
pop
insl
fidivrs
dec
push
je
insb
mov
out
insb
ja
je
lcall
dec
fs
or
dec
insl
imul
sti
jmp
sarb
call
pusha
mov
call
dec
gs
call
loopne
outsl
jnp
cmp
std
and
jp
cmpsb
in
dec
mov
lcall
imul
cmp
clc
shlb
inc
mov
jg
sub
clc
cmpsb
dec
mov
jp
jae
pusha
imul
jne
sub
std
outsl
cmp
jo
inc
outsb
adc
in
sub
jmp
dec
jns
decb
pop
push
xor
jg
std
inc
and
cmpsb
dec
jl
popa
pop
arpl
ja
incl
cmp
or
jb
std
cmp
dec
push
adc
insl
lock
std
push
outsl
ja
ss
push
jne
inc
sbb
arpl
sub
jns
insb
std
mov
mov
out
jns
sub
js
inc
movsl
iret
mov
and
scas
sub
jg
pop
arpl
pusha
outsb
inc
jae
out
or
outsl
in
pop
jge
xor
xor
pusha
call
jecxz
sbb
jnp
call
cld
jg
pusha
addr16
shrb
dec
mov
in
jge
out
or
popa
inc
insb
mov
mov
sub
adc
loop
push
dec
jge
cld
shlb
addr16
loopne
js
jnp
arpl
jae
clc
pop
imul
pop
ja
xor
jg
pusha
jne
push
pusha
ja
inc
inc
sti
dec
icebp
push
fs
sub
inc
insb
jae
jg
add
loop
or
cld
addr16
lock
jnp
out
je
dec
in
ja
adc
sub
pusha
shl
jb
insl
imul
in
push
pop
jo
jo
insb
mov
call
or
pop
dec
arpl
pushl
fsubrp
dec
jle
jecxz
jne
insb
inc
mov
outsl
jae
lds
icebp
sub
shrb
inc
push
or
loope
inc
int3
out
push
test
loop
jg
js
xchg
insl
rclw
push
mov
push
sub
xchg
jp
ja
out
call
insl
xor
in
push
dec
fisubrl
loopne
popa
xchg
ljmp
mov
stos
in
loopne
sbb
cmp
inc
cmc
cltd
pusha
xor
mov
xlat
xchg
rol
dec
testb
add
shlb
leavew
push
or
sbb
popa
mov
in
je
sub
sub
insl
mov
push
push
and
loop
je
push
xchg
and
push
sahf
aaa
cmc
scas
jnp
out
aaa
data16
xor
jo
rorb
shlb
loopne
lea
pop
jne
addr16
mov
imul
xchg
addr16
dec
sar
mov
and
sub
in
add
rclb
je
scas
int
addr16
test
addb
pop
je
in
mov
cmp
bound
or
add
cmp
sub
jge
loopne
loop
dec
push
inc
push
loop
push
mov
sub
xchg
xchg
mov
xor
imul
imul
xchg
in
xlat
or
xor
dec
jnp
jg
xor
enter
jp
cmpsb
addr16
cld
dec
rclb
sub
loopne
push
push
ja
fdivl
aad
push
in
test
mov
out
in
imul
adc
repz
mov
xchg
mov
out
sub
adc
pop
mov
in
jo
data16
dec
fnstenv
lea
cmp
pop
mov
bound
lock
out
js
dec
arpl
call
cmpsl
jle
popa
loopne
mov
clc
jae
jns
xor
outsl
mov
pusha
enter
lcall
dec
ja
out
push
xlat
mov
sarb
mov
dec
shrb
out
push
sub
push
in
sbb
aaa
imul
das
mov
inc
insb
inc
jno
push
jmp
cld
sub
push
insb
mov
in
push
dec
sub
outsl
addr16
imul
cli
sub
jge
addr16
dec
and
adc
data16
imull
push
in
outsb
nop
xor
fs
imull
jecxz
imul
jo
loop
jo
decl
shll
inc
pusha
popa
sub
testl
push
sub
sub
das
call
push
negl
jg
clc
ja
insb
jle
daa
imul
std
pop
jb
inc
inc
je
inc
out
jo
cld
call
dec
sti
pusha
push
cmc
or
dec
cli
pusha
arpl
jp
jns
sbb
adc
and
js
pusha
in
arpl
or
push
sbb
xlat
fwait
cmp
in
pop
gs
out
push
aad
outsl
cmc
js
inc
jne
ljmp
push
cmp
hlt
stos
icebp
dec
or
push
lock
mov
mov
nop
loop
push
add
mov
stos
jo
jecxz
das
add
dec
roll
out
insl
cmp
daa
lods
subl
loope
mov
sbb
adc
dec
pop
jae
jne
xor
dec
mov
loopne
repnz
cmpsb
es
in
sub
repnz
push
lods
mov
arpl
push
mov
out
je
int3
jo
ret
fwait
out
roll
enter
mov
hlt
add
push
adc
das
out
pop
sti
test
add
ret
mov
outsl
lods
pusha
cmp
loop
je
lcall
dec
jg
cmp
popa
add
lcall
aam
pusha
mov
push
push
sub
sbb
outsl
loopne
jnp
call
jns
jg,pt
pusha
lahf
in
sub
inc
mov
pusha
jb
jg
js
call
out
popa
loopne
sub
mov
jmp
cmp
lcall
dec
daa
out
imul
outsb
add
adc
dec
js
mov
jge
push
sub
ja
loopnew
fmuls
outsl
cmp
dec
outsl
fwait
clc
jbe
push
pop
dec
pusha
jo
mov
jg
pusha
in
sub
in
and
out
jle
or
dec
arpl
js
call
or
jb
adc
sub
into
jg
pusha
xor
popa
mov
aad
dec
repnz
imul
push
dec
jo
mov
jne
push
js
jg
fldenv
jg
pusha
pushf
in
sub
inc
pop
out
js
or
js
call
out
insb
loopne
es
or
pop
adc
into
shlb
js
lock
cmp
jns
das
movsb
ja
call
cli
lcall
xchg
lock
lcall
stc
scas
test
jl
dec
push
in
sub
or
andl
jo
aaa
jg
ds
cli
enter
xor
pop
jnp
out
cmp
mov
lret
and
loop
xchg
xchg
adc
call
jge
mov
sbb
push
jge
xchg
call
mov
inc
insb
sub
loope
mov
pop
pop
out
jb
jmp
mov
jo
jge
repnz
in
pop
repnz
and
nop
enter
push
int3
sbb
lods
fs
jae
decl
dec
out
jbe
insb
cmp
pushf
and
sbb
insl
out
outsb
add
jo
out
mov
adc
je
add
or
and
je
and
add
sarb
pop
and
mov
fs
xchg
inc
hlt
daa
add
jmp
push
loope
inc
movsb
packssdw
mov
dec
lcall
lret
stos
clc
mov
enter
dec
call
or
adc
xchg
ret
cmpsb
imul
imul
push
divl
loop
sub
inc
mov
xorb
or
or
xchg
outsb
out
inc
in
daa
jne
jg
mov
fucomip
insb
cmp
call
fisubrl
adc
popf
mov
call
call
shr
jge
xlat
shrb
add
bound
mov
jae
xchg
mov
pop
mov
pusha
inc
negl
sub
pop
ljmp
pop
in
inc
xchg
insb
mov
loopne
mov
adc
call
dec
adc
or
test
inc
ljmp
cwtl
mov
push
push
je
sbb
sarl
jmp
push
aad
xchg
daa
xor
jo
movsb
je
inc
mov
push
shl
add
shl
cmp
lret
cld
ja
repnz
inc
insl
mov
sub
out
cvttps2pi
sahf
enter
sahf
cmp
scas
or
das
lea
or
leave
inc
sub
mov
movsl
popf
outsl
mov
sub
push
inc
in
sahf
in
mov
repz
cmpsb
in
xor
sbb
sbb
jns
mov
in
insl
adc
and
pop
fs
cwtl
adc
xor
inc
scas
add
and
xorb
adc
sahf
mov
mov
fucom
jmp
cwtl
movsl
jle
je
mov
cli
test
ror
icebp
mov
mov
mov
cltd
fisubrl
cmpsl
xor
movsl
mov
or
inc
outsl
mov
dec
in
in
dec
stos
repnz
cmp
subl
push
rorb
out
adc
enter
ss
js
inc
mov
or
int
xchg
fidivrs
test
addr16
mov
jle
icebp
push
lret
cltd
dec
lods
mov
xchg
push
sbb
imul
shr
sub
mov
ss
push
mov
pusha
ret
jae
xor
test
xor
push
mov
xchg
das
out
fs
xor
out
mov
into
fdivl
dec
loop
jp
jb
bound
loope
std
pop
ret
leave
imul
cld
lods
add
int3
fcomps
mov
pusha
or
dec
add
inc
xor
outsb
stos
js
out
out
out
daa
cmp
scas
add
jnp
mov
imul
cmp
leave
pop
jmp
push
fists
mov
addr16
fs
out
outsl
push
out
cwtl
shrb
jno
cld
mov
or
mov
pusha
pushl
dec
cmc
stc
into
aas
ss
cs
xchg
mov
inc
xchg
daa
and
insb
or
in
sbb
and
ror
mov
movsb
dec
xchg
and
out
or
stc
pusha
out
call
scas
clc
mov
jmp
cs
clc
lods
sub
jge
shrl
xor
gs
div
mov
mov
dec
mov
test
jp
jo
sbb
in
repz
sub
gs
and
call
call
cli
out
add
sarl
pop
divl
xchg
addr16
xchg
adc
xor
cmp
sub
out
xchg
pop
sbb
in
popa
lcall
xrelease
leave
cmp
clc
cld
and
dec
ret
and
cli
pop
int3
sub
fs
data16
sbb
in
dec
call
das
out
in
out
pop
lods
mov
js
xor
sub
inc
jns
loop
jbe
fadds
ret
cmp
adc
sub
jo
jmp
dec
cmp
jae
inc
jl
lea
cmpsb
jge
cmp
iret
and
out
or
ss
or
mov
xchg
xor
lret
mov
test
insl
sub
shll
mov
pop
ffreep
adc
das
and
and
jo
cmp
stos
outsb
or
in
outsl
and
inc
cmpsb
dec
jnp
jns
insl
pusha
in
loope
gs
or
mov
out
cltd
ret
mov
and
mov
nop
add
cmpsl
hlt
sbb
push
adc
test
repz
dec
cmovo
outsb
mov
cmpsb
fnsave
mov
xor
dec
sbb
jp
out
push
add
cs
in
xchg
xchg
mov
push
out
sbb
mov
mov
jae
sti
clc
add
add
pusha
in
ja
out
sbb
shrl
pop
iret
lock
sub
jb
fisttpll
outsb
jbe
jo
push
xchg
sub
push
push
mov
sub
mov
pop
xchg
dec
lret
lds
add
xchg
xchg
mov
push
pop
movsb
cwtl
lock
loopne
xor
lea
rorl
mov
inc
add
xor
loopne
or
call
das
dec
inc
mov
sub
mov
mov
popa
gs
pop
aas
sub
xchg
retw
ds
xor
mov
xchg
jmp
mov
lcall
pusha
jmp
in
cmp
cmc
adc
xchg
dec
adcl
lcall
loop
aad
ror
leave
in
outsl
ljmp
lock
ret
mov
addr16
clc
mov
mov
call
imul
je
fdivrs
mov
xchg
int3
lcall
dec
out
pop
lcall
inc
outsl
das
daa
outsb
sub
sub
loopne
mov
ljmp
cwtl
cmp
inc
jnp
jno
mov
call
mov
call
sub
adc
push
imul
lea
ljmp
lock
int3
aam
lock
mov
sbbb
rcrl
unpcklps
cli
cmp
and
in
lret
push
mov
mov
les
aam
dec
fstl
int
in
jecxz
arpl
popf
loop
lret
ja
sub
mov
cmp
fimull
call
cmc
outsb
cld
xchg
sub
sub
aas
imul
shrl
je
scas
movsb
add
dec
ret
mov
jmp
std
mov
adc
pushf
lds
ret
loopne
xchg
imul
fwait
jo
imul
stos
daa
je
jecxz
mov
insb
pop
cmp
insl
fildl
sub
add
and
cmpsl
push
fs
cmpl
and
aam
pop
out
aam
iret
fdivrs
adc
insb
mov
mov
aas
or
repnz
jl
mov
mov
mov
sbb
outsb
push
adc
pop
jo
js
fs
pop
xorl
mov
int
loopne
daa
inc
jge
mov
lret
cmp
adc
jbe
in
jecxz
pushf
add
rorl
push
popa
jb
subb
jnp
xchg
outsb
in
fbld
or
popa
cltd
out
jo
jecxz
out
addr16
daa
cmp
cli
adc
insl
cltd
add
mov
cltd
mov
sub
andl
scas
mov
and
and
or
xor
daa
pusha
mov
movsl
popa
scas
stos
addr16
cmpsb
push
je
cld
sub
jmp
sahf
jmp
repnz
iret
les
int
outsl
cwtl
push
inc
into
xor
lods
cmp
incb
cmp
adc
inc
push
enter
daa
inc
aaa
jg
test
scas
jle
push
ret
sub
sarb
push
xor
movups
jmp
mov
cli
jge
out
shlb
inc
notb
sub
loopne
je
fstps
jo
movsb
clc
aad
or
add
cmp
enter
ret
and
outsb
push
cld
push
cld
dec
mov
sbb
fs
scas
mov
mov
or
pop
push
pop
push
push
sub
cmp
loopne
push
or
jb
cmp
xor
mov
adc
out
jae
popl
pusha
fs
movsb
call
insb
and
std
and
xchg
aas
mov
adc
into
pop
dec
xchg
repz
jo
pop
add
out
outsb
popa
in
or
xchg
push
mov
cld
cltd
lds
push
mov
mov
cmpsb
mov
lret
adc
xor
cmp
sub
and
xchg
inc
inc
push
mov
lahf
sbb
lock
adc
in
hlt
pusha
mov
in
repz
out
cwtl
sbb
call
and
jnp
ret
test
adc
sub
dec
inc
cmpsb
cmp
mov
test
dec
leave
push
cmpsl
outsl
lret
out
push
es
cmp
dec
jno
sbb
mov
es
fs
lahf
addr16
cli
pop
in
sbb
repnz
sbb
cli
cld
mov
or
lret
push
pop
ret
addr16
xchg
imul
es
xor
daa
dec
mull
iret
daa
pop
arpl
or
add
dec
sbb
adc
or
push
xchg
mov
fucomip
stos
ljmp
jnp
rolb
push
push
inc
push
sti
sbb
fisttps
in
cwtl
or
push
leave
jle
xor
xor
pop
mov
jg
pop
outsl
or
in
mov
push
or
mov
push
movaps
sub
ja
packsswb
pop
lock
in
insb
push
jg
lret
lret
movl
mov
insl
push
pop
js
sub
or
loope
iret
test
mov
jmp
sbb
dec
icebp
jbe
iret
add
movsb
jb
je
into
adc
lods
jmp
cld
sbb
push
cwtl
mov
ljmp
mov
data16
push
adc
daa
push
jbe
stc
mov
out
scas
notb
xor
pop
mov
test
xor
mulb
mov
je
mov
xor
les
pop
out
aam
das
pop
inc
jns
lock
push
adc
insl
push
lds
loopne
inc
into
push
int
jne
push
in
jmp
iret
imul
imul
mull
mov
rcr
dec
mov
adc
add
arpl
sub
nop
mov
lret
xchg
or
jp
out
ret
xor
scas
filds
inc
inc
movsl
push
out
or
and
xchg
fsubl
dec
or
mov
xchg
mov
scas
ja
sub
xor
adc
dec
stc
push
addr16
or
fisttps
out
insl
popf
mov
insl
xor
push
outsl
jo
or
sub
or
or
dec
mov
cmpsl
jl
push
pop
adc
mov
sub
nop
idivl
repz
iret
js
sbb
iret
rorb
scas
leave
jge
xorb
mull
out
adc
es
pop
or
insl
cld
inc
mov
js
sahf
sub
or
shrb
loop
pop
roll
xchg
icebp
push
cld
xor
imul
arpl
and
jbe
rcrb
out
adc
pop
aad
push
or
inc
repz
pop
popf
iret
mov
frstor
dec
push
inc
insl
cmpsb
dec
aaa
movsl
fidivrl
ret
or
pushl
jnp
cmp
or
xchg
pushf
or
andb
push
les
add
push
arpl
jg
sbb
aam
xchg
adc
int3
clc
outsb
mov
push
pop
xchg
push
ljmp
aaa
cs
mov
and
ja
push
in
ljmp
rolb
out
xlat
test
outsl
imul
and
xchg
fcoms
clc
call
xchg
cmp
xor
dec
data16
loopne
lods
cmp
rcr
mov
pop
dec
fildl
pop
imul
xchg
cwtl
out
inc
ficompl
adc
mov
ljmp
faddp
nop
pop
pop
jmp
xor
pop
fmull
lret
xor
xchg
jo
je,pn
fwait
adc
cmpsb
daa
cmp
sbb
imul
imul
sub
cli
or
xlat
mov
or
sarb
ret
inc
sub
insb
pop
test
and
aad
push
sub
lods
dec
std
push
and
je
es
xchg
out
inc
insb
jnp
xchg
cmpsl
dec
push
imul
xchg
jmp
cmp
loope
cmp
mov
mov
out
inc
push
pusha
je
cmpsl
ljmp
aam
dec
xchg
icebp
adcb
scas
js
jecxz
cli
dec
mov
mov
insb
push
pop
mov
cmp
out
and
aas
add
cld
ja
xchg
lret
in
repnz
fldt
mov
inc
testl
xor
dec
cmpsb
fstp
add
mov
rolb
les
pop
insb
in
cmp
scas
out
insb
movsl
cmp
pop
jge
mov
adc
lret
cli
push
xor
ss
cwtl
push
pop
mov
dec
out
xchg
hlt
jnp
cmc
jge
dec
xchg
fistpll
ret
mov
andb
mov
pusha
xor
lea
out
nop
cmp
out
pop
push
out
sbb
mov
add
xchg
mov
dec
mov
adc
cmovp
pushf
adc
mov
movsb
mov
ljmp
int
incb
sub
movsl
ss
mov
jmp
sti
fwait
enter
aam
jne
loopne
fdiv
shrb
mov
out
shll
and
dec
pop
jbe
mov
jo,pt
xor
mov
hlt
xchg
test
sub
cmpsb
mov
push
cmp
add
ljmp
dec
aam
std
jg
sti
and
jo
mov
xor
lret
hlt
push
leave
sub
mov
xchg
fdivs
shll
push
jmp
imul
xor
inc
fs
sbb
hlt
inc
stc
mov
mov
rclb
imull
mov
ja
add
scas
jns
mov
imul
sqrtps
mov
stos
add
pusha
js
vmwrite
dec
cmp
mov
in
cltd
ljmp
hlt
dec
out
and
aaa
out
xor
mov
mov
inc
jl
push
rclb
push
mov
fsubrs
sbb
push
dec
xor
and
lods
and
adc
lret
iret
lock
test
ret
adc
dec
push
data16
dec
adc
fs
cmp
cmp
imul
dec
nop
jl
out
pop
push
mov
fisubl
cmp
inc
out
mov
cmp
jl
push
inc
mov
and
mov
or
aam
jno
inc
movsl
add
mov
clc
xchg
enter
pop
cmp
push
inc
adc
xchg
enter
nop
fnstenv
or
outsb
in
inc
in
mov
mov
out
mov
cli
push
push
xchg
xchg
inc
inc
mov
sti
jae
test
jg
data16
int3
pop
inc
nop
daa
std
or
dec
jl
insb
outsb
xor
xor
pop
push
cmpb
jmp
push
cmp
call
add
push
lahf
jo
movsl
jge
or
dec
push
push
xchg
aam
pop
std
mov
and
jge
mov
cmp
pop
push
xor
sti
test
in
into
mov
dec
out
adcb
mov
adc
fadd
aas
test
outsb
outsl
mov
nop
inc
test
fucomip
insb
cmp
adc
jne
popf
clc
in
sarl
sub
call
inc
mov
call
lds
call
insb
add
xor
loope
das
ja
add
adc
sub
js
jae
or
data16
scas
sub
dec
sbb
faddl
shlb
clc
xchg
sub
sahf
outsb
mov
fistl
mov
faddl
jnp
out
imul
xlat
cmp
cmp
mov
dec
inc
mov
ret
insl
cmpsb
and
mov
das
jb
pop
add
xchg
cmp
sbb
insb
lea
es
push
insb
rclb
shlb
cmpsb
adc
in
aaa
outsb
movsl
loop
pop
pop
mov
les
movsb
mov
cmpsb
or
adc
outsb
stos
aaa
outsb
es
mov
outsb
mov
mov
fadd
cmp
pop
and
xchg
jle
jg
je
es
inc
inc
stos
mov
dec
adc
insb
sti
ljmp
popf
insl
shlb
or
inc
scas
daa
out
pop
mov
xor
add
int
and
mov
adc
addb
outsl
mov
or
ret
ljmp
outsb
pop
sub
pop
je
in
push
mov
out
sub
aas
out
outsl
and
out
sti
inc
das
or
xor
adc
jo
push
pop
lea
shlb
mov
pusha
je
clc
pop
push
add
jb
outsb
add
loope
movsb
add
cmp
mov
xchg
jo
in
sub
mov
push
mov
mov
js
ret
out
mov
adc
jp
mov
outsl
mov
push
mov
inc
pushl
nop
popa
and
movsb
ss
in
add
jne
fs
xchg
xchg
jg
inc
js
dec
test
jmp
and
lcall
std
xchg
xor
add
lahf
cmp
xor
lods
dec
movsl
mov
imul
mov
and
out
dec
lcall
insl
inc
in
jle
insb
loop
daa
xchg
andl
cmpl
xor
imulb
in
and
test
das
and
add
shll
in
jae
lods
daa
inc
push
adc
out
xor
in
mov
and
in
inc
push
into
movsl
sub
fimuls
ljmp
iret
jle
call
insl
add
popa
je
add
shr
lds
mov
push
sbb
inc
cli
and
xchg
cmpsb
scas
std
mov
push
mov
movsb
or
imul
and
pop
sbb
jmp
lcall
xchg
outsb
mov
sub
loop
cmp
outsb
dec
sub
inc
cmp
lret
loopne
inc
push
jge
dec
test
mov
push
sarb
inc
cli
subl
outsb
inc
out
into
jp
cmp
add
test
xchg
flds
dec
jge
or
imul
cmc
out
movsl
xchg
pushf
insb
add
or
jo
mov
lock
add
enter
arpl
push
xor
loop
ja
mov
jbe
dec
jecxz
push
xor
push
adc
push
cmp
dec
or
out
mov
adcb
adc
dec
push
pop
jbe
movsb
xchg
jle
lods
mov
inc
clc
xchg
pop
sub
rol
arpl
je
sahf
sahf
pop
push
jecxz
call
sub
je,pn
or
fiadds
pop
das
scas
aaa
xor
mov
cmp
iret
cli
outsb
fildll
jns
jo
jge
cmpsl
lock
xchg
loope
dec
xor
sahf
jnp
mov
sahf
xchg
mov
int3
ret
mov
adc
in
pop
sub
xchg
mov
hlt
fmul
inc
insl
rorl
popa
fs
scas
sbb
inc
iret
loop
or
in
and
outsb
out
add
push
int3
call
or
hlt
sbb
je
mov
pop
inc
xor
ja
cmpsb
lock
popf
pop
incl
mov
and
loopne
out
pop
aam
sbb
in
xchg
mov
ljmp
cld
add
ja
stos
dec
xor
or
fdivp
dec
sub
sub
jl
adc
jae
jle
addr16
push
push
mov
insb
or
pusha
push
xchg
adc
into
clc
mov
sub
out
lods
and
int3
ljmp
sbb
popa
jo
cmpsb
imul
cli
jmp
xor
jne
sarl
aas
ja
mov
enter
and
pop
and
js
pop
lcall
outsb
mov
jns
dec
cmpsb
jp
mov
imulb
adc
sbb
pop
pushf
in
insb
add
outsb
adc
in
sbb
mov
push
pop
pop
mov
xchg
outsb
cmp
mov
call
pop
xchg
xor
enter
aad
mov
aaa
or
std
cmp
divb
inc
dec
pop
adc
test
xchg
loopne
pop
inc
gs
clc
jl
mov
insb
popa
shrb
call
inc
dec
stos
xor
fcomp
repnz
cmp
and
sub
cld
push
gs
out
jns
mov
and
aaa
loopne
das
cmpsb
in
stos
sbb
mov
in
aaa
and
in
pop
pop
pop
test
mov
inc
lcall
call
daa
js
imul
cmp
adc
pop
out
arpl
rorb
dec
int
data16
adc
mov
push
add
ret
jle
clc
sbb
outsl
out
sbb
or
push
fcmove
or
pop
hlt
jg
jecxz
sbb
in
sarb
fdivrp
inc
lret
inc
imul
or
loopne
add
jbe
fiaddl
test
js
and
dec
mov
fs
fidivs
mov
fistl
jg
outsl
fidivl
insb
mov
out
add
das
lahf
jmp
in
xor
xor
sar
ret
pop
fcompl
ja
dec
outsb
inc
lret
ja
push
out
outsl
repz
inc
lahf
xchg
js
xor
data16
lahf
sub
xor
mov
jmp
pop
call
mov
and
xor
aam
mov
mov
xchg
xchg
fmuls
pop
sbb
mov
xchg
sti
ret
in
shrl
mov
dec
mov
rorl
dec
push
repz
int
inc
stos
cmp
gs
cmpsb
into
aas
push
mov
int3
xor
mov
cli
js
loope
in
data16
aad
add
ret
jno,pt
or
xor
xor
jg
nop
lods
call
insl
nop
in
mov
imul
sub
mov
daa
aas
loopne
leave
xchg
pop
test
push
mov
lods
sahf
xor
pop
movsl
aas
out
or
cmpsb
sub
push
ds
xchg
pop
repz
out
popa
movsl
mov
loopne
pop
jmp
clc
xchg
and
bnd
cwtl
mov
push
movsb
mov
inc
sbb
xchg
add
mov
xlat
lea
out
sbb
push
jp
jo
jmp
xlat
rol
and
adc
repnz
div
std
xchg
cltd
daa
push
xchg
dec
mov
lock
insl
xor
and
das
in
dec
sub
insb
push
mov
mov
sub
dec
out
dec
ret
sbb
cs
jo
mov
mov
adc
and
jg
lock
ds
jle
sbb
lahf
jl
cmp
lret
jp
popf
sbb
mov
add
in
adc
fistps
adc
sbbl
loop
arpl
ja
in
cmp
adc
or
mov
inc
add
into
and
repz
mov
push
fisubs
pusha
div
incb
jmp
push
clc
xchg
jmp
sarb
jle
les
push
out
cmp
into
dec
sarl
jmp
lods
mov
out
cltd
ret
aad
outsl
xor
test
jb
test
outsl
jne
sti
push
push
lods
loopne
inc
insb
add
outsb
adc
sbb
push
mov
out
push
je
cs
xchg
sahf
jge
mov
aas
imul
jo
jae,pn
sub
loopne
shll
js
inc
add
adc
loopne
enter
sub
ds
mov
pop
lret
sub
fmull
push
adc
out
mov
das
les
mov
pop
mov
es
sub
cmp
dec
cld
push
pop
imul
outsl
xchg
loop
inc
sbb
cs
mov
adc
pop
mov
ret
mov
xchg
jb
repz
call
sub
rol
pop
and
int3
clc
imul
xchg
movsb
daa
filds
mov
aaa
jne
mov
sti
push
jae
orl
subb
in
mov
aas
push
movlhps
mov
lea
mov
inc
in
cmp
push
dec
push
out
and
mov
popa
stos
lret
mov
mov
dec
bound
aas
shlb
ret
imul
jmp
or
jl
sbb
pop
cmp
outsl
lcall
jl
mov
pusha
rcr
pop
sub
inc
hlt
cmp
push
test
xchg
shrb
mov
sbb
jns
ret
cld
cmp
pop
call
stc
mov
mov
stc
mov
and
adc
insb
enter
dec
push
dec
sub
fs
or
fcmovnu
loopne
sub
leave
pop
cmp
cmp
xchg
mov
push
xchg
orl
push
popf
les
mov
push
popf
lods
mov
sahf
loopne
sub
loopne
addr16
jmp
lods
movb
jg
pusha
out
aaa
push
jns
insl
or
insb
imul
inc
xchg
mov
jl
mov
test
mov
dec
js
imul
xor
and
inc
ret
xor
rcr
sarb
andb
cmp
push
ja
insb
dec
mov
sbbb
loopne
mov
dec
jbe
je
sub
lahf
jnp
loopne
fldenv
sub
push
mov
fisttps
adc
xchg
jp
pop
xchg
push
dec
lahf
or
fwait
or
jmp
cmp
mov
push
inc
clc
jnp
insb
mov
push
pop
filds
dec
imul
in
inc
outsl
repz
mov
out
xchg
dec
sub
in
das
xchg
push
push
and
cmpsl
add
icebp
mov
jo
xchg
loop
sahf
roll
faddl
imul
and
ds
xor
cmpsl
popa
xor
mov
cmc
or
cmp
cli
fwait
mov
in
mov
dec
das
ljmp
sub
je
jo
scas
das
pop
stc
out
cmp
in
push
or
jne
xchg
jae
mov
imul
jg,pn
mov
test
mov
iret
cmpsb
je
or
and
filds
jo
mov
pop
notb
mov
ret
mov
add
and
adc
mov
fisubl
xlat
mov
divl
mov
cli
sub
xchg
add
push
cmc
and
ficoml
repnz
dec
adc
sub
mov
lock
mov
sbb
out
push
hlt
scas
lock
pop
push
adc
and
addr16
std
mov
into
pusha
cmp
mov
ljmp
mov
fidivrs
in
insl
mulb
sbb
montmul
cmpsb
xchg
data16
test
sahf
pushf
sub
or
ret
cltd
cs
insb
and
outsb
jmp
inc
lcall
leave
xchg
sti
cmp
inc
fdivrl
enter
jo
gs
pop
xor
arpl
insb
ret
cmpsl
sbb
ss
push
addr16
inc
je
enter
lock
dec
movsb
out
clc
mov
hlt
xlat
mov
or
je
pop
repz
orl
push
push
mov
imul
call
lret
sbb
xor
jne
cld
fstps
dec
stos
in
hlt
lret
jmp
sbbb
mov
lcall
pop
sub
inc
sub
or
in
aad
dec
pop
pop
scas
in
pop
push
mov
push
jp
cmp
imul
je
sbb
or
les
mov
call
push
in
mov
cltd
adc
ret
test
out
je
stc
mov
and
jns,pt
out
add
push
addr16
mov
pop
popa
xchg
pop
mov
and
adc
pop
inc
test
cwtl
sub
roll
out
cs
or
ret
push
xor
add
dec
je
pop
xor
jp
call
jl
lea
inc
outsb
jo
loop
mov
inc
rolb
add
adc
dec
sbb
addr16
ss
sbb
and
loop
dec
add
les
scas
add
or
hlt
mov
jg
scas
adc
movsb
faddl
scas
icebp
push
loopne
imul
movsb
inc
ljmp
lcall
cmpsb
call
or
addr16
fcoml
call
imul
pushf
sub
ret
cmpsb
ret
jge
imul
imul
js
jl
cwtl
lods
add
es
ds
imul
daa
dec
fsubrp
call
nop
inc
imul
cltd
fmuls
jnp
movsl
inc
xchg
mov
enter
pop
in
sub
js
mov
cmp
pop
mov
jmp
mov
mov
test
xchg
jle
sarb
pop
cmp
fs
fwait
pop
xlat
xor
jbe
mov
imul
pop
cmpl
std
je
add
out
loope
dec
jp
sub
and
pop
filds
inc
pop
sub
pop
loopne
arpl
fimuls
cmc
lods
insl
cli
jg
cmp
lock
leave
iret
lret
lods
ret
pop
hlt
mov
add
into
roll
sbb
insl
sbb
out
stos
test
out
push
mov
cld
stc
in
ljmp
cmpb
adc
shll
je
mov
inc
pop
jo
mov
call
cmpsl
add
jmp
out
cmp
into
enter
pop
aam
out
cs
call
les
int3
cmpsb
xor
frstor
ficoml
sbb
mov
iret
mov
hlt
add
daa
hlt
jb
clc
addb
pop
in
and
add
es
jo
movsl
in
jne
insb
imul
dec
cmpsb
jp
cmp
aaa
insl
mov
stos
ret
imul
jbe
in
sub
and
dec
mov
insb
sti
in
insb
xor
outsl
jmp
mov
mov
xor
cld
adc
push
loope
xchg
xor
add
fwait
and
addl
inc
jp
fldlg2
imull
pop
mov
jae
movb
xchg
ds
test
out
xchg
push
addr16
insl
arpl
push
fldl
lahf
shlb
insl
nop
or
test
mov
hlt
xlat
gs
xor
mov
pop
fcomi
or
or
clc
out
inc
mov
push
into
pop
ljmp
xlat
inc
push
pop
and
nop
mov
bsr
mov
add
push
loope
pop
cmpsl
inc
add
adc
jo
jb
or
jo
adc
or
ret
insl
loop
sub
sbb
movaps
inc
push
pop
xlat
ret
imul
sub
dec
addr16
insb
or
in
and
jo
je
push
nop
jo
or
and
push
in
jg
mov
js
jns
sbbl
xor
andl
popa
cld
push
mov
das
and
push
or
and
das
mov
pop
lret
and
test
jmp
mov
daa
inc
and
dec
mov
inc
fsts
out
insb
and
lahf
or
repz
sub
push
stos
add
je
sbb
xor
test
ljmp
cmp
leave
sub
add
test
lret
rcr
dec
adc
mov
xchg
in
or
mov
sub
mov
xchg
inc
outsb
fwait
inc
xor
jnp
or
jp,pn
andb
lods
dec
dec
jo
pop
inc
mov
or
into
gs
outsl
dec
cmp
in
jl
push
lock
add
sti
adcb
jae
arpl
push
filds
dec
inc
add
cmpsb
jns
outsb
inc
test
adc
mov
stos
pop
popa
out
add
test
inc
and
in
cmp
and
repz
and
jbe
pop
or
jae
lret
imulb
dec
mov
test
inc
arpl
and
dec
out
fadd
lret
inc
in
xorl
adc
mov
push
xchg
movsb
insl
ds
mov
pop
loope
outsb
aaa
imul
inc
test
scas
bnd
out
sahf
xchg
out
int3
jbe
adc
pop
ja
jns
cwtl
mov
and
je
jp
or
and
scas
sub
xor
pop
xchg
hlt
sbb
pop
sbb
call
in
sbb
mov
mov
addr16
aas
sub
inc
mov
xor
and
aas
mov
push
mov
fwait
stos
xlat
es
test
insl
jnp
rorb
mov
call
add
cmp
push
nop
inc
lret
rol
fimuls
mov
pop
fstpt
cmp
push
popf
into
push
sbb
inc
adc
ja
inc
mov
cli
mov
xchg
mov
xor
daa
mov
push
fyl2xp1
add
xchg
xlat
adc
mov
das
xor
cs
shrb
dec
push
jmp
mov
add
mov
sub
inc
or
and
cmp
pop
pop
gs
cmpsb
push
lods
pop
pusha
and
loop
cmp
or
dec
mov
mov
aam
mov
insl
je
das
rolb
mov
in
xlat
in
scas
rorl
hlt
jp
aaa
sbb
bound
sbb
loop
add
inc
movsl
outsl
and
aad
mov
stos
push
loop
shll
inc
test
jbe
je
pop
add
lock
je
cwtl
pop
testl
jle
repnz
lret
lds
jp
addr16
imul
outsl
jo
xchg
inc
das
adc
call
and
or
sub
pusha
jo
inc
jo
je
in
sub
insl
mov
decb
test
iret
mov
pop
in
mov
pop
mov
or
adc
daa
sbb
or
and
dec
sbb
out
add
in
dec
jl
outsb
and
mov
idivb
jne
jg
xchg
mov
push
mov
inc
mov
jmp
xchg
jo
outsl
xchg
dec
and
out
xor
mov
inc
in
adc
jae
in
call
and
inc
loopne
push
adcl
imul
or
xchg
in
ret
lret
enter
push
and
addr16
addr16
sbb
sub
nop
and
sbb
lret
inc
mov
cmp
mov
imul
int3
inc
and
jge
dec
das
sbb
leave
fimull
sub
xchg
mov
clc
sub
out
mov
js
dec
addr16
push
or
push
test
dec
fcomip
and
pop
jno
adc
test
inc
push
jp
shr
cmpl
pushf
test
jg
scas
cmp
test
dec
jge,pt
out
mov
sub
arpl
lock
repnz
lret
pop
mov
xchg
ret
mov
xor
iret
insb
inc
mov
inc
and
mov
int3
popf
in
sbb
or
loope
js
xchg
inc
mov
mov
xlat
das
push
stos
inc
sbb
sarb
movsb
jmp
es
sub
movsl
mov
in
dec
xchg
inc
inc
aam
push
jns
xchg
jae
les
push
jb
pop
pop
adc
je
and
add
mov
invd
sbb
enter
into
int3
add
mov
add
out
ret
ja
push
outsb
pushf
je
loope
sahf
push
outsl
pusha
rorb
sbb
add
lods
orb
gs
insl
call
mov
pop
loop
cltd
out
jns
or
lcall
iret
jnp
or
outsl
imul
adc
movsl
sti
jb
lock
pusha
insl
je
push
inc
mov
mov
jl
call
jecxz
outsb
gs
ss
push
sbb
mov
jecxz
incl
decl
jge
pop
mov
pushf
add
int
in
jnp
and
mov
mov
jb
loope
mov
rorl
sub
sub
mov
mov
fidivrl
dec
out
imul
push
adc
and
je
mov
cmp
repnz
xchg
cmp
mov
ret
fcomip
push
mov
dec
mov
adc
arpl
and
das
mov
lcall
daa
push
test
mov
movsb
es
mov
dec
out
inc
cmp
shll
out
rorl
mov
inc
in
or
xchg
xchg
pop
sub
or
jno
mov
and
sub
sahf
push
out
imul
loopne
das
push
or
dec
lods
ret
ja
loopne
mov
mov
jo
jmp
mov
pop
jl
outsb
imul
push
daa
mov
into
and
push
push
or
cltd
pusha
cmp
sbb
or
push
xchg
push
or
lods
pop
sarl
adc
sub
push
adc
jns
fwait
out
lods
adc
and
insb
or
cmovae
mov
pusha
cmpsb
add
in
fwait
pusha
sbb
imul
loope
mov
in
pop
scas
cmp
jg
mov
iret
jbe
mov
out
push
xchg
push
or
ret
in
insb
inc
adc
mov
fwait
pop
lret
loop
lret
jp
push
xchg
loope
dec
pop
mov
cli
xor
and
and
sbb
sbb
call
insb
push
cmp
fs
into
iret
xchg
stos
decl
xlat
in
pop
jecxz
jmp
sub
shrl
scas
xchg
loopne
inc
inc
mov
mov
outsl
xorl
add
cltd
hlt
test
sbb
inc
mov
and
loopne
shlb
adc
pop
ss
push
sub
ret
pop
int
es
cmpsl
mov
out
mov
clc
lea
sbb
movb
xor
test
in
fwait
jno
pop
adc
xlat
stc
lcall
jae
imul
sub
xchg
and
mov
nop
push
pushl
movsb
push
rcr
pop
addr16
stc
cmp
push
ss
imul
mov
pusha
jae
out
insl
mov
icebp
jnp
int
sbb
push
jmp
test
cmp
addr16
ret
mov
jne
xchg
inc
repz
mov
adc
lret
nop
push
out
mov
pop
popa
cmc
nop
inc
xchg
loopne
adc
add
dec
add
fsubr
or
mov
mov
rorb
je
test
add
adc
clc
jecxz
movsl
and
mov
shll
loop
fs
scas
outsl
jbe
cmpsl
sarl
and
fwait
pop
jp
loope
fwait
call
push
in
xchg
movsb
mov
sub
orl
jle
push
or
mov
adc
xchg
push
mov
xchg
xchg
mov
out
pop
mov
dec
outsl
xor
int
out
addr16
shl
dec
ret
popf
outsl
in
data16
rol
es
jp
xchg
and
fs
sahf
mov
mov
push
addb
insl
jne
es
jp
js
mov
pop
out
rorl
imul
pop
adc
das
cmp
outsb
das
je
jge
shlb
or
les
ja
adc
push
mov
adc
pushf
mov
repnz
ds
add
mov
xchg
mov
sub
and
xor
sbb
adc
jb
push
mov
sti
push
ds
cld
out
xor
mov
xor
popf
les
cmp
sbb
mov
pop
cmp
in
lcall
js
in
pop
xchg
mov
aad
cmpsb
fistpll
pop
std
xor
nop
clc
cmc
and
inc
dec
sub
nop
hlt
dec
je
test
icebp
push
xchg
js
xchg
popf
es
jl
push
dec
scas
sarl
cltd
nop
gs
dec
popf
das
inc
lock
xor
imul
mov
xor
and
pop
das
add
mov
push
xor
call
cmp
cmp
pop
push
imul
add
fiaddl
enter
or
stc
mov
je
repnz
jae
cmpsb
mov
push
out
filds
sbb
mov
mov
mov
jmp
loop
movsl
adc
loopne
loop
clc
lock
imul
outsb
fs
rcrl
in
stc
jle
jmp
mov
add
test
je
lds
int3
jmp
lret
mov
out
les
and
push
jge
mov
jmp
test
push
cmp
nop
enter
fxch
repz
mov
push
ret
xchg
sub
mov
lcall
ja
dec
jae
xchg
pop
in
dec
xchg
and
sub
fiadds
adc
inc
mov
xor
je
mov
insb
xor
inc
push
dec
inc
fucom
lahf
outsl
mov
es
loopne
out
pop
aas
pop
lds
daa
mov
lea
add
rcl
ret
mov
int3
lea
add
cmpsb
ficoms
push
push
call
popf
jbe
ficoms
insb
cmp
loope
inc
fwait
movsb
dec
dec
gs
and
mov
add
sub
push
ret
sbb
enter
or
loop
aad
pop
int
pop
inc
imul
das
addr16
popf
and
inc
mov
xchg
insl
push
push
and
mov
xchg
movsb
scas
scas
push
pusha
out
mov
or
test
mov
out
sbb
cmpl
jns
xchg
sub
bound
out
xchg
xorl
push
ljmp
je
les
jnp
sub
in
jp
adc
out
flds
push
rolb
fnstcw
pop
insl
pavgb
add
loopne
jnp
nop
xor
hlt
fwait
loope
lods
idiv
out
jo
dec
inc
mov
in
or
pop
lods
push
push
daa
jle
ret
outsb
dec
xor
movzbl
jno
jmp
aas
ds
and
sub
inc
push
push
lods
push
jbe
fisttpl
ds
pop
outsl
clc
mov
lods
out
or
add
test
mov
push
cs
nop
jns
clc
pusha
je
dec
add
nop
in
and
add
xorl
mov
std
daa
jp
xor
insl
fucomp
inc
xor
jae
push
lods
dec
rolb
fldcw
shll
sahf
mov
mov
nop
call
loopne
add
cmpsb
cld
movsl
je
into
add
pop
dec
pop
loop
in
imul
stc
rcrl
inc
sbb
in
adc
test
xchg
pcmpeqd
out
push
push
jecxz
std
pop
loop
outsl
je
jle
ret
or
insl
sahf
push
fisubl
pop
scas
in
mov
mov
pop
adc
inc
or
xchg
push
dec
adc
loopne
incb
xchg
cmp
outsl
xchg
jle
sub
or
icebp
xor
pusha
pusha
mov
outsl
push
stos
frstor
jle
testb
push
int
sub
scas
cmp
and
test
jnp
cmp
jg
fisubs
outsb
add
addb
xor
test
adc
in
and
pop
jmp
aam
lock
sahf
jo
inc
test
loopne
sub
mov
mov
cltd
aam
or
cld
xor
ljmp
movsl
xlat
aas
mov
mov
clc
cmpsl
mov
inc
pop
ljmp
shll
fs
xor
cmpsb
sbb
and
call
call
gs
fwait
pop
out
pop
sbb
in
cmpsb
and
push
pop
pop
lret
loope
hlt
std
ljmp
arpl
xchg
inc
mov
shll
adc
call
inc
xchg
xchg
in
adc
inc
push
pop
outsb
lcall
fwait
lods
sub
bound
dec
out
xor
lret
mov
jg
les
jo
lahf
call
fisubs
icebp
fbstp
ljmp
mov
nop
enter
ja
adc
cmpsl
lret
jb
pop
icebp
repnz
xor
cwtl
hlt
ss
xchg
fnstsw
mov
and
std
dec
ljmp
in
ja
faddp
push
aad
into
xor
push
mov
xchg
int3
push
gs
lret
hlt
dec
in
icebp
daa
xor
cmp
xchg
dec
jo
jl
je
or
sub
js
dec
nop
imull
pusha
je
or
fs
jnp
dec
fsubp
pop
ja
jns
in
std
xorb
shlb
clc
xor
and
out
popf
in
ficoml
int3
add
decb
jecxz
shll
cmp
pop
loopne
pop
xchg
out
les
jg
std
aas
dec
insb
xor
das
inc
cmp
das
outsb
xchg
mov
or
out
pop
insl
hlt
adc
dec
adc
push
cmp
xor
add
insl
push
cmp
dec
aas
xor
out
outsl
sbb
mov
jle
pop
test
testl
or
lods
lcall
ss
insb
stos
push
aas
shl
fisttpl
dec
bound
scas
je
sbb
add
inc
push
pop
int
in
enter
jmp
push
mov
cmp
daa
xor
inc
into
pop
fstl
ss
push
pop
fcmovbe
adc
sbb
push
scas
add
push
out
fistpll
cmp
fcomps
ret
jb
jne
loop
cmpsb
dec
inc
out
xor
lahf
pushf
jo
lock
jo
lea
pop
aad
jo
xchg
jg
loopne
jae
or
test
pop
jne
push
mov
in
sub
nop
in
mov
adc
repnz
push
xor
jne
rep
sub
push
icebp
pop
popf
push
add
cmc
sbb
scas
pop
je
mov
out
in
inc
and
xor
sbb
lea
push
fildll
mov
xor
add
addr16
imul
or
or
lret
cmp
imul
sub
pop
adc
and
xchg
outsb
xchg
xor
aaa
xchg
daa
pop
les
dec
in
daa
cmp
pop
xor
mov
push
fwait
outsb
mov
mov
aas
mov
aam
cmpsb
dec
fisttpll
adc
lahf
jmp
inc
mov
js
and
imul
jo
lds
repnz
and
lods
inc
and
fninit
mov
or
sub
inc
cmc
mov
addr16
mov
lcall
mov
out
pop
ret
fcoms
jp
push
popa
jmp
outsb
pushf
push
insb
inc
dec
addl
movsl
ljmp
and
mov
sub
mov
pop
outsl
rorl
pop
aas
stc
xor
lods
inc
add
sub
dec
clc
mull
cld
adc
mov
loopne
inc
pushf
adc
and
loopne
fcomi
inc
or
js
cmp
fimull
ffreep
lcall
lods
js
js
dec
mov
stos
inc
push
pusha
xchg
push
jecxz
outsb
notb
cmpsb
or
enter
into
push
sub
cmp
or
or
pop
out
sub
fbld
or
xor
dec
rcl
nop
sub
push
dec
rol
lahf
fldl
fisubrl
mov
sub
je
clc
xchg
adc
push
inc
and
or
ja
fildll
lret
icebp
shrl
mov
dec
loopne
stc
xor
js
aaa
cld
inc
mov
cmp
testl
test
mov
jl
push
lret
sub
scas
pop
xchg
sbb
mov
pop
mov
iret
imul
fs
test
sub
stos
outsb
bound
clc
subl
test
popf
cld
xor
je
pop
pop
inc
jmp
push
add
scas
rolb
pop
pop
mov
cmpsb
lock
pop
aad
out
lods
jnp
shlw
push
adc
sub
int
inc
scas
mov
cmp
movsb
sbb
pusha
jbe
mov
ds
pop
imul
adc
xchg
push
push
pop
dec
fwait
or
insl
sar
cltd
inc
inc
ja
xchg
jmp
lods
divl
push
xor
je
out
mov
out
xchg
loopw
mov
xchg
mov
mov
inc
test
cmc
cmpsl
mov
in
lret
pop
lock
pop
insl
push
jle
cmp
out
pop
insl
jnp
dec
ljmp
xchg
aam
add
std
movsl
ret
sub
or
out
push
lcall
push
lahf
les
sub
xchg
mov
cwtl
xchg
subb
out
sarl
jno
je
cmp
imul
mov
fsubrs
adc
mov
lock
and
mov
cmpb
mov
daa
jmp
dec
sub
mov
jmp
insl
loop
xor
sub
pop
cld
mov
cmp
inc
loopne
lcall
adc
ss
adc
push
ret
loop
jne
int
ljmp
add
adc
dec
and
xchg
outsl
mov
add
push
fdivrl
mov
xor
pop
xor
in
mov
data16
test
or
shrb
repz
outsb
cmp
aad
clc
cmp
mov
sub
scas
es
outsl
sub
stos
in
out
xor
scas
xchg
mov
push
sub
cwtl
outsb
cmpb
adcb
sar
enter
lcall
dec
push
xchg
mov
hlt
cli
sub
inc
sbb
je
cmp
stos
push
push
mov
mov
call
adc
popa
sub
inc
insb
addr16
leave
push
ret
dec
sub
or
cld
pop
cltd
or
out
jmp
lahf
mov
mov
fcoml
out
add
sahf
std
subb
out
fldcw
pusha
test
xor
mov
and
pushf
loop
fs
jmp
aam
sub
loop
add
and
jecxz
jecxz
ret
call
mov
pop
mov
add
dec
lret
insb
xchg
lret
ret
adc
xor
bound
into
dec
out
dec
pop
test
arpl
jecxz
fidivs
mov
testb
leave
cmp
aam
mov
jbe
jae
mov
aad
fwait
mov
hlt
enter
jb
mov
adc
pop
and
jnp
sub
adc
jmp
pop
incl
fstpl
xor
cmp
ja
shl
sub
sub
bound
or
fs
push
dec
ja
clc
stos
lods
sub
in
inc
lds
xchg
jmp
push
lret
lret
add
sub
pop
rcrl
outsl
into
jg
iret
pop
pop
rorb
das
repz
testl
popf
add
pop
inc
aas
jmp
negl
popf
in
je
mov
jl
mov
cmp
lock
out
iret
fiadds
inc
jg
xor
or
sbb
sub
in
xchg
orb
dec
cs
and
loop
cltd
and
and
add
lret
sbb
sbb
pop
imul
fsubl
and
sbb
inc
xlat
inc
in
cli
hlt
popa
jl
filds
jmp
push
sub
cmpsl
cli
shll
pop
jle
in
int3
int3
push
pop
enter
cmp
les
in
imul
addb
or
push
pusha
call
arpl
mov
mov
inc
insl
push
es
loope
inc
shlb
insl
xchg
mov
movsl
add
or
test
jae
mov
xor
jnp
fcmovb
lock
jp
and
xchg
ret
mov
outsl
fidivrl
aaa
test
jo
or
movsl
jns
mov
outsb
jae
dec
daa
arpl
out
sahf
cmc
xchg
mov
outsb
lock
cmpsb
jno
std
jbe
loop
mov
aas
lock
cmpsb
test
loop
mov
sbb
push
xchg
or
mov
mov
jb
das
dec
ds
xchg
xchg
popa
xchg
ja
add
hlt
and
ja
xor
fstpl
fimull
mov
popa
fnstsw
lcall
int3
lcall
push
inc
or
mov
and
pop
mov
daa
test
js
in
add
lods
fidivrs
test
push
pop
push
addr16
push
addr16
adc
fiaddl
aas
dec
dec
sbbb
mov
add
jmp
xorl
or
in
inc
ja
fsts
sub
push
sub
adc
jge
lds
hlt
add
ds
sbb
jnp
in
flds
add
sbb
ret
cmp
std
fisubrs
std
sti
stos
shrl
jo
les
retw
outsb
jmp
je
xchg
test
adc
and
mov
or
scas
daa
out
sub
loopne
aaa
or
inc
or
adc
xor
pop
test
push
out
jbe
inc
lock
push
cmp
or
xchg
call
sub
outsl
decb
mov
stos
sub
sub
pusha
stos
jp
mov
popf
cli
pop
lods
mov
or
cli
scas
in
mov
mov
outsl
jns
mov
sub
and
out
xchg
clc
cmpsl
jb
std
xchg
adc
mov
rorl
test
mov
fwait
into
and
xchg
imul
mov
imul
clc
lods
addr16
jmp
test
push
subl
dec
mov
rolb
pop
sub
sub
xor
in
in
pusha
call
inc
stos
and
fsubs
jle
dec
mov
dec
jbe
imul
add
addr16
lahf
push
in
scas
out
out
loopne
insl
ja
push
xchg
icebp
mov
inc
out
lds
inc
cmc
lods
imul
out
adc
call
or
jle
inc
into
dec
addl
outsl
xchg
and
in
insb
jo
sti
imul
fsubrs
inc
rep
imul
dec
in
fs
mov
dec
icebp
adc
jmp
into
xchg
ror
mov
ret
call
out
test
outsl
xor
and
dec
lret
push
hlt
ljmp
inc
movsb
dec
push
in
or
sti
jle
inc
dec
xchg
decl
inc
mov
or
pusha
imul
loopne
push
pushf
jle
fisubrs
mov
outsb
cmpsl
repnz
sti
enter
mov
arpl
add
jp
inc
outsb
push
mov
jne
das
test
or
push
js
js
ja
push
dec
ds
test
inc
loopne
insl
in
outsb
iret
inc
jmp
cmp
inc
dec
xchg
sub
clc
inc
test
sub
or
sarb
repz
jl
cld
bound
outsb
stos
pusha
daa
call
jne
je
xor
or
sub
adc
sahf
movsl
adc
ss
jmp
and
stc
add
bound
jnp
dec
and
enter
dec
pop
cltd
imul
mov
adc
inc
xor
mov
add
ljmp
jo
adc
jb
push
inc
movzwl
xor
daa
xor
je
push
xor
jg
int
jbe
xor
pop
pop
xor
pop
push
xor
sub
jg
pop
andb
sub
daa
outsb
mov
jmp
pop
loop
arpl
mov
pop
adc
in
cwtl
push
mov
mov
sub
push
push
mov
mov
aam
sub
in
lods
aas
addr16
push
insb
pop
dec
std
push
push
je
jae
jle
or
ljmp
sub
movsl
lret
jno
dec
inc
test
lahf
dec
jle
xchg
out
in
ljmp
test
loopne
shll
out
lcall
dec
out
insl
xor
je
push
sub
nop
out
cwtl
mov
cmp
sti
lods
xchg
inc
das
mov
mov
nop
je
push
test
lcall
incl
cmp
sbb
cli
dec
ds
push
scas
push
or
push
cmp
push
mov
sub
sub
repz
dec
add
cs
insl
sub
or
loop
je
loop
xor
ljmp
cmpsb
jl
jno
das
xor
push
cli
cmpsl
adc
inc
je
ret
cld
mul
and
cmp
sar
or
js
loop
add
sub
and
or
shl
in
add
xchg
pop
out
mov
into
inc
outsl
push
loop
pop
dec
pusha
xor
cwtl
dec
push
shrb
popa
pop
imul
and
jo
je
loope
scas
lcall
in
jge
filds
clc
outsl
add
pop
jecxz
xor
sbb
mov
outsl
in
imul
inc
ljmp
adc
movsb
aas
add
jg
cmp
imul
dec
imul
and
mov
mov
dec
pop
sbb
jo
lock
fldenv
clc
dec
in
adc
hlt
dec
jno
pop
sbb
jo
shll
arpl
adc
xchg
cmpsl
push
aaa
adc
scas
std
popa
jo
adc
pop
xchg
jl
fistpll
adc
pop
pop
push
mov
push
and
inc
dec
inc
push
sbb
int
pop
adc
lahf
test
xchg
call
mov
loope
fucomp
mov
inc
inc
cli
jo
pop
and
dec
pop
imull
insl
mov
loopne
js
fs
dec
in
jns
sub
dec
add
hlt
xor
xchg
movsl
jp
into
xchg
ljmp
fists
repz
xor
stos
je
sbb
out
mov
dec
clc
enter
gs
inc
inc
daa
imul
gs
push
movsb
xor
inc
shl
pusha
insb
std
and
loope
xchg
fbstp
mov
lods
je
inc
out
orb
pop
and
mov
xor
sub
lea
lds
or
ja
mov
and
subl
mov
dec
jne
in
inc
mov
mov
loope
dec
lahf
or
push
push
sbb
xor
inc
push
push
test
cmpsb
xchg
cmpsl
sub
jle
pop
imul
insb
xor
loopne
xchg
and
adc
inc
push
nop
fnstcw
stc
inc
sub
mov
daa
cltd
inc
adc
clc
stos
loopne
add
xor
sti
push
in
jmp
add
xor
test
jmp
je
sub
jp
fildll
pop
mov
sub
test
pop
dec
enter
sbb
push
mull
or
dec
jecxz
icebp
mov
mov
xchg
or
and
into
aam
out
ss
out
or
mov
push
cmpsl
jle
je
insl
aad
jl
push
xor
aad
xchg
inc
inc
js
movsb
fs
sahf
out
popf
imul
pxor
cmpsb
fsubrl
sub
mov
ljmp
andb
rcl
dec
cmp
movsb
dec
scas
test
or
psubsb
or
and
inc
dec
mov
movsb
xor
outsb
addr16
cmpsb
sti
in
lahf
outsl
xor
popa
push
mov
mov
stos
repz
testl
push
stc
clc
outsl
sub
out
sub
fisttpll
sub
add
mov
addr16
into
mov
mov
lret
jge
jecxz
test
pop
adc
sub
or
imul
sub
inc
outsb
iret
pop
xor
pusha
adc
ret
das
adc
in
jle
call
dec
loope
imul
jecxz
jmp
movsb
outsb
fisubrs
insb
adc
sub
or
imul
sub
jg
js
inc
jg
ret
call
cmpsb
insl
jle
outsw
cmpsb
pushf
insb
pop
cmc
dec
cmc
add
insb
loopne
mov
push
mov
clc
out
dec
mov
fldcw
push
rorl
push
inc
imul
std
cld
fdivr
and
jg
daa
dec
outsl
xchg
sub
dec
jmp
in
loope
shll
out
jo
loope
push
into
xor
inc
out
inc
pop
clc
insb
push
mov
test
or
pusha
ljmp
lret
shll
call
sub
inc
jo
and
jmp
mov
testl
and
pusha
jo
loopne
mov
pusha
test
pop
jmp
sub
sub
jne,pt
jns
pop
add
lret
jg
push
push
in
stc
loopne
shll
dec
mov
sub
int3
xorb
icebp
inc
test
je
test
dec
pop
sub
fildll
adc
inc
pop
push
add
call
icebp
push
js
cmp
paddsb
jle
xor
je
jg
xchg
adc
ljmp
and
sbb
fsub
and
cmc
pop
mull
sub
js
cmp
dec
lods
cmpl
xor
imul
sbb
fmul
fadds
std
cmp
mov
test
outsl
addr16
ljmp
adc
data16
mov
dec
aaa
test
pop
sub
imul
insl
inc
divb
pushw
push
fisttps
pop
jl
out
roll
test
cld
or
loopne
or
and
insb
and
call
adc
loope
mov
punpckhbw
sub
mov
mov
jbe
inc
lahf
jo
sub
cmc
cmp
mov
js
jl
xor
jle
inc
insl
hlt
ja
mov
fldl
jp
mul
dec
xor
or
repnz
out
push
sbb
pop
outsb
ret
push
outsb
inc
jns
mov
movsb
lods
call
xorb
add
jmp
push
or
stc
call
das
push
pop
push
outsb
insb
and
pop
icebp
shll
pop
call
pusha
out
pop
rcl
jg
or
aaa
outsl
test
sbb
mov
in
xor
jne
out
push
iret
test
inc
out
shll
and
xlat
fisttpll
cmp
pusha
fdivs
adc
movsb
pusha
testb
sub
push
loop
je
les
push
imulb
push
test
not
fwait
adc
hlt
sub
arpl
adc
adc
loopne
arpl
push
mov
add
into
dec
stos
pusha
in
aaa
sub
std
loopne
mov
or
adc
stc
test
jecxz
push
dec
iret
je
call
push
fnstcw
je
mov
addr16
movsb
mov
inc
fdivrl
dec
add
loope
clc
pushfw
adc
adc
in
sub
inc
sub
xor
jo
in
dec
or
idivl
sbb
sti
adc
pop
add
mov
out
in
sub
push
fs
dec
and
pmulhuw
adc
test
incb
hlt
clc
arpl
int3
out
jecxz
daa
fucomp
mov
add
arpl
jecxz
iret
js
in
insb
jne
sub
or
add
adc
cld
inc
mov
mov
daa
xchg
sbb
cmp
cmovnp
push
cli
xchg
mov
adc
in
xchg
xchg
inc
pusha
repz
xor
repnz
data16
push
outsl
fadds
xor
aas
out
dec
xchg
daa
xchg
in
and
or
out
jne
inc
mov
outsb
in
insb
jae
sub
xor
push
pusha
js
xor
cmp
dec
inc
into
sbb
sub
dec
jle
cmp
mov
jbe
and
js
movsb
cwtl
mov
fwait
scas
stc
clc
xor
pop
adc
arpl
out
js
cli
call
cmp
gs
mov
xchg
mov
clc
dec
fyl2x
jg
cs
jns
mov
shlb
out
nop
ja
sbb
js
in
imul
repz
cld
push
out
adc
pop
shlb
jmp
pop
subl
push
cmc
addr16
pop
and
xchg
out
js
sub
inc
rorl
mov
mul
fisubs
call
inc
std
cs
dec
clc
or
sti
mov
or
mulb
add
sahf
sub
je
iret
imul
adc
sub
inc
addr16
sub
jo
iret
test
inc
clc
imul
sbb
testl
push
pop
mov
cmp
push
sub
scas
das
je
jmp
std
mov
icebp
inc
out
ja
je
movsb
mov
shll
dec
je
out
add
jne
push
jae
xorl
inc
or
dec
mov
jge
sub
in
mov
cld
push
mov
dec
and
dec
mov
imul
push
cmp
lock
and
dec
out
xchg
mov
popa
movsl
or
adc
push
push
testl
outsl
xchg
out
negb
xor
cs
mov
or
pusha
outsl
jp
lock
jg
into
icebp
adc
imul
iret
clc
inc
jo
add
dec
outsb
mov
out
mov
xor
lret
cli
pmulhuw
in
or
pop
imul
inc
add
test
sub
xchg
push
lock
movsl
add
xchg
vandps
mov
mov
lds
outsb
jo
sti
scas
sub
movsb
aas
sti
cmpsl
out
mov
outsl
insl
mov
pop
pop
push
or
sub
movsb
dec
push
in
inc
imul
mov
cmp
outsl
daa
mov
xor
outsl
dec
pusha
mov
outsb
testl
wrmsr
je
cmc
or
cmp
xor
test
sub
mull
ss
test
mov
ret
sbb
push
das
inc
outsl
push
pop
lock
imul
jge
adc
jge
sub
aam
xchg
out
repz
xchg
jle
in
xlat
xor
outsb
ret
adc
cs
je
push
dec
add
stos
movsl
insb
fsub
and
das
mov
or
jmp
fs
rcll
in
arpl
movsb
test
nop
movsl
test
add
int
fs
or
sub
sbb
mov
xchg
adc
cltd
pop
cltd
scas
push
xchg
or
mov
ret
cli
call
sub
push
por
mov
or
popa
outsl
cmp
imul
into
daa
jg
sarb
xor
aaa
out
addl
jl
insb
popf
jnp
ret
inc
cmp
mov
mov
ds
in
pop
repz
mov
outsb
xchg
popf
stc
js
xor
push
pop
mov
loop
mov
pop
outsl
cs
mov
iret
inc
repnz
sub
popf
bound
mov
mov
sbb
dec
mov
ja
push
mov
xchg
cltd
inc
outsl
cltd
jg
sub
push
repnz
xor
mov
enter
and
xor
imul
pop
jo
sub
call
flds
mov
mov
bound
jns
lret
inc
insl
les
insl
cs
or
lods
imul
popa
leave
cwtl
popa
jo
inc
icebp
pop
inc
out
adc
repnz
out
mov
bound
fsubs
sbb
das
shr
divl
pop
xchg
outsl
mov
sub
call
fsubl
ja
add
push
nop
jp
jo
dec
mov
pop
inc
divb
ljmp
jecxz
xor
in
cwtl
call
pop
push
mov
insl
sub
xchg
push
das
ss
rep
sti
std
popf
mov
mov
ret
xlat
insl
xor
sbb
jne
loopne
push
push
sub
jnp
mov
xchg
lock
xchg
mov
cmp
rorl
xor
repz
sahf
pop
jle
and
inc
jae
jae
pop
outsb
imul
dec
gs
or
adc
jae
xchg
out
cmpb
dec
lods
fucomip
dec
add
pop
ja
push
xor
mov
sub
movsb
std
stos
scas
outsb
or
xor
adc
mov
mov
fisubrl
add
adc
xchg
fnsave
xor
inc
scas
mov
pcmpgtw
aaa
adc
add
leave
add
xchg
into
insb
pop
lods
sbb
sbb
notl
and
push
arpl
test
rorl
cmpsl
out
dec
loopne
push
int
xor
fisubs
jns
xchg
push
xchg
popf
inc
loop
dec
call
shrl
icebp
pop
pop
sbb
fistps
fldt
dec
push
or
inc
lods
sahf
insl
sbb
repz
mov
lahf
inc
sbb
outsb
clc
push
sub
jecxz
inc
ljmp
and
xchg
mov
sbb
ja
in
fidivrl
pusha
outsb
in
loop
addr16
jp
sub
push
push
mov
fnsave
shlb
push
mov
adc
xchg
ret
js
sahf
mov
fs
fnsetpm(287
xor
cltd
mov
out
je
dec
fs
inc
xchg
push
sub
jmp
mov
hlt
clc
jae
xchg
cmp
xchg
jecxz
mov
rcrb
xchg
imul
sub
add
daa
xchg
hlt
dec
pop
inc
mov
imul
xor
and
in
dec
xor
xchg
push
stos
icebp
cmp
push
sbb
mov
fs
sub
sti
imul
int
jl
test
xchg
pop
in
shr
rolb
sti
push
loopne
jbe
fldl
mov
enter
mov
mov
jmp
das
jecxz
mov
cmp
aam
repz
scas
in
or
cmpsb
cmp
mov
ljmp
or
and
xchg
adc
and
subl
jno
cld
add
adc
add
mov
call
mov
aaa
pop
aas
cmp
pop
or
les
ljmp
pop
mov
aad
add
mov
js
outsl
cld
mov
in
nop
and
fldt
jb
mov
or
sbb
pop
insl
out
push
insl
add
cmp
aad
test
fisubrl
out
xchg
sbb
pop
sarb
inc
jbe
loope
add
clc
add
jle
out
out
in
loop
test
adc
je
mov
fcompl
inc
jmp
out
je
xchg
fmuls
jo
cld
popa
jae
inc
mov
out
xchg
mov
out
shrb
xchg
and
loopne
loope
fstl
jg
adc
xchg
adc
les
or
lret
cld
in
inc
das
and
mov
test
loop
adc
fidivl
xchg
and
aam
in
cmpsb
adc
popa
aas
xor
inc
mov
fs
jb
lods
pusha
mov
orb
cmp
xchg
dec
cmp
jae
das
ss
sbb
mov
movsb
ss
add
in
loop
popa
hlt
out
dec
or
nop
stos
mov
sub
pop
sbb
cmp
cwtl
imul
sbb
cltd
mov
inc
xchg
mov
cmpsl
icebp
add
in
and
dec
pusha
jns
cmpsb
int3
jbe
xor
add
mov
mov
dec
cs
and
fstl
in
xchg
dec
stos
dec
and
testb
pushf
dec
movntq
call
dec
loope
pop
das
jmp
inc
xchg
mov
les
testb
jbe
pop
xchg
mov
and
or
loope
in
pop
scas
or
mov
and
xor
cmp
ret
repnz
cmpsl
rcrb
and
out
out
lret
movntq
jo
jne
jnp
pop
inc
and
cmp
xor
shrl
sti
ljmp
add
mov
xchg
cld
add
sahf
inc
mov
adc
sarb
mov
scas
enter
in
mov
ret
inc
pop
cmp
jne
fwait
ljmp
pop
je
clc
add
out
adc
mov
outsl
movsl
mov
movsb
mov
push
xor
jnp
pop
jae
xor
sahf
pop
imul
xchg
cmp
negl
fisttpl
adc
sbb
inc
push
in
push
mov
outsl
dec
call
dec
fists
add
iret
in
inc
enter
cmpsb
movsl
pop
cmp
inc
imul
push
sub
daa
fcmovbe
dec
push
jo
out
pop
test
scas
inc
je
lock
insb
outsb
add
stc
mov
lret
push
out
stos
fs
cmp
mov
cmpsl
mov
loopne,pn
mov
shrl
imul
sti
ja
push
rcll
mov
mov
mov
mov
push
iret
je
push
outsb
push
and
call
adc
in
dec
jo
xor
mov
shl
in
packssdw
in
push
shlb
sbb
pop
gs
call
xchg
xor
lret
lods
xor
push
mov
lret
adc
lods
mov
shrb
cld
adc
cmc
nop
jo
mov
fs
sahf
daa
test
cli
or
popa
scas
mov
fimuls
out
repnz
xchg
sub
scas
pop
push
popf
cs
dec
cmc
clc
and
push
mov
push
out
call
or
arpl
outsl
fwait
mov
data16
push
and
or
xchg
testl
test
adc
ficoml
pushf
xchg
aas
adc
push
mov
push
cmp
in
push
xchg
mov
aam
subl
sbb
add
cmp
iret
insb
in
arpl
pop
mov
imul
sub
outsb
out
dec
and
das
fidivl
cmpl
je
sbb
pop
pop
xor
adc
add
cmp
dec
inc
sbb
dec
out
xchg
cmp
fwait
dec
xor
xor
daa
daa
mov
and
mov
mov
psubsb
outsl
dec
dec
jecxz
in
cmp
add
inc
ja
pop
xchg
lret
add
push
dec
adc
loope
adc
pop
ljmp
and
loope
test
pop
dec
out
mov
gs
popf
out
dec
mov
mov
out
sub
in
into
xor
push
pusha
cmpsb
pop
in
pop
mov
sub
scas
insl
cmp
jnp
xchg
imull
dec
movsl
mov
cli
xor
xor
aas
psubsb
in
or
out
add
pop
mov
shll
push
mov
add
hlt
dec
add
jmp
inc
fmul
ret
jl
enter
imul
mov
push
ljmp
scas
lock
sbb
lock
leave
sbb
movl
jmp
loop
dec
aam
mov
in
xchg
das
pop
aad
mov
jbe
and
sbb
scas
sub
imul
punpckldq
in
jmp
outsl
in
inc
insl
je
mov
cmp
popf
into
xchg
inc
and
mull
lock
xchg
movsl
inc
mov
out
pusha
stc
mov
arpl
cwtl
jmp
orb
scas
loopne
arpl
xor
stos
pop
or
stos
test
jecxz
andb
das
pusha
and
lea
jo
push
fbld
lret
data16
orb
jbe
lret
or
fsub
fisttpl
sbb
ljmp
push
loope
mov
lcall
dec
pop
inc
mov
cmc
cmp
xlat
neg
ret
loop
sub
aam
loopne
adc
xchg
pop
lds
sub
dec
shrl
mov
xor
inc
pop
inc
and
int3
ja,pn
push
dec
adcl
push
mov
addr16
mov
or
mov
in
sub
adc
test
xor
out
jg
mov
je
cmp
cwtl
je
std
faddl
pop
cmp
mov
iret
fwait
pusha
outsb
mov
mov
in
insl
mov
push
iret
insl
or
xor
outsl
mov
xor
lcall
mov
flds
xchg
in
mov
sahf
outsl
cld
imul
je
pop
mov
push
insl
add
clc
sbb
outsl
leave
push
cli
scas
cmp
or
hlt
dec
imul
cmpsb
call
je
outsl
scas
sub
push
dec
mov
cmp
shr
in
sub
jno
inc
shrb
scas
lret
mov
outsb
sbb
dec
out
cmp
pop
enter
imul
outsb
js
in
and
insl
leave
dec
insl
cmp
lds
push
in
test
loope
xchg
cmp
mov
mov
cmovb
sbb
int3
mov
xchg
dec
or
jo
dec
je
cmp
lcall
and
je
sbb
mov
aad
addr16
lods
imul
or
push
push
arpl
gs
xor
daa
cmp
scas
mov
popa
add
repz
mov
or
adc
sub
cmpsb
je
daa
data16
mov
xor
popf
mov
in
lock
mov
lds
ret
das
jmp
insb
pop
and
punpcklwd
pushl
add
call
add
shlb
mov
mov
rorb
cmpb
jb
adc
int3
mulb
idiv
add
inc
cltd
cwtl
lret
lock
repz
dec
nop
inc
cmpl
mov
mov
repnz
cwtl
test
insl
xchg
cmpsb
je
dec
sub
outsb
jae
or
inc
sbb
adc
add
jae
cmp
pop
jge
mov
movsl
mov
data16
lahf
loopne
out
push
xor
push
je
pop
dec
andl
adc
push
inc
mov
dec
jne
addr16
push
insl
lods
xor
inc
sub
adc
pushf
mov
xchg
std
xchg
adc
shrl
shlb
or
mov
xor
pop
in
inc
mov
std
xor
lds
fisubs
mov
movsb
dec
xor
xchg
loop
test
fs
add
outsl
dec
jg
aam
shr
scas
je
test
insl
in
call
and
inc
mov
sub
mov
loope
pop
xor
cmpl
lea
adc
fldlg2
dec
out
shrl
insb
mov
dec
inc
sbbb
pushf
in
imul
cmpsb
jmp
inc
int3
and
orb
or
stos
push
je
leave
out
cmpsl
clc
sub
push
sbb
sub
adc
addr16
and
addr16
in
jge
movsb
int
xor
jge
in
xor
mov
pop
repnz
in
mov
dec
je
leave
sub
jl
jnp
out
daa
cld
push
adc
lret
scas
sub
or
mov
fistpll
xchg
xchg
cmp
mov
icebp
pop
or
pop
movsl
stos
imul
in
sub
add
pop
sbb
clc
dec
push
shr
push
sbb
cli
into
das
xchg
or
fiadds
jbe
push
loopne
xchg
loop
dec
cmpsb
sbb
cmp
jl
cmp
cld
or
sbbb
movntps
and
nop
adc
sbb
cwtl
and
out
push
push
insb
pushf
scas
imul
arpl
fwait
and
cltd
cmp
push
or
lret
add
orb
jo
pop
cli
pop
call
popf
and
sbb
mov
adc
int
clc
lods
push
icebp
jno
stc
add
ret
leave
jne
or
addr16
sub
lock
ret
push
inc
dec
adc
inc
insb
or
push
popf
scas
adc
dec
cs
stc
xor
es
in
sub
pushf
push
or
loopne
sub
add
and
add
ret
push
jnp
lods
int3
xor
sub
jns
enter
pop
cmp
push
jae
das
lahf
and
movsl
jbe
aas
js
mov
inc
add
icebp
sti
insb
xor
ja
jns
mov
movsw
inc
ja
push
add
add
mov
cmp
jge
or
sub
jge
xchg
daa
dec
jge
xor
cmp
lock
fists
adc
outsl
mov
cmp
in
outsb
scas
add
push
dec
in
je
pop
cmc
lods
jg,pt
jae
fnstcw
outsb
cmp
or
cmp
mov
aad
mov
lea
dec
fstpl
push
and
arpl
out
lds
roll
add
jo
je
sub
loopne
outsb
or
shll
out
dec
fisubrl
jb
mov
push
stos
adc
pop
in
push
scas
nop
dec
fidivl
mov
sbb
jns
mov
push
test
btc
pop
out
ret
lods
test
dec
outsb
cmp
addr16
mov
bound
jnp
jl
sub
cmpsl
and
ss
out
add
push
ret
sub
and
add
inc
or
sub
fistpll
lods
cs
ljmp
xor
int3
xchg
ds
cli
lods
ljmp
cmpb
int3
stc
pop
and
add
push
jnp
and
cld
and
and
and
sbb
fldenv
or
fistps
mov
jno
ret
dec
pop
cli
scas
jle
popa
cmp
sub
daa
lahf
add
xchg
cmp
in
cmp
lock
std
gs
imul
ja
sub
xchg
xor
inc
in
mov
xchg
mov
stos
push
dec
mov
lods
jb
cmpsl
jmp
mov
fdivrs
rcrl
sbb
xchg
dec
inc
pusha
filds
enter
scas
addr16
cmp
outsl
sbb
sub
roll
shlb
mov
or
int
insl
bound
ret
out
mov
lret
or
mov
insl
mov
fmull
stos
xor
dec
fsubl
movsl
fidivs
loope
lea
cmpsl
jbe
cmpsb
out
icebp
jae
orl
js
in
lods
or
or
daa
enter
ficoms
mov
mov
mov
sbb
jne
je
add
pop
repz
pusha
data16
fnstsw
in
push
into
or
je
repz
ret
add
lods
mov
pop
aas
cmpsl
cmpsb
shl
decl
arpl
or
arpl
out
mov
movsl
pop
pusha
cld
jne
add
cmp
push
pop
daa
cmpsb
or
mov
mov
dec
lcall
sub
dec
inc
cli
aam
or
out
loop
sbb
outsl
add
xchg
popa
in
cli
data16
and
sar
mov
scas
movsl
jae
scas
pop
loop
and
jmp
sbb
fcmovne
push
push
loopne
jp
addr16
lret
mov
ds
int3
fbld
ljmp
adc
jg
adc
xor
mov
sbb
leave
cmp
filds
add
imul
xchg
or
push
adc
jl
out
pop
or
jecxz
popf
sub
adc
and
fldl
or
sbb
xor
sub
adcl
enter
insb
loopne
inc
xor
mov
and
andl
xchg
out
dec
adc
xor
push
adc
jg
fdivrs
daa
push
loopne
out
pop
mov
loope
stc
int
js
shll
sahf
mov
clc
and
xchg
std
and
flds
roll
loop
pop
movsl
push
dec
mov
jo
dec
jb
movsl
adc
sbb
arpl
ss
gs
fcomps
cmp
add
rcll
rolb
repz
mov
popf
ds
imul
mov
or
dec
ljmp
fsubrs
jle
and
sub
and
cld
pop
popa
rorl
outsb
daa
xchg
jmp
pop
ja
imul
stos
loop
jle
je
jo
mov
nop
filds
jmp
je
aad
aad
leave
xchg
fsts
je
or
inc
dec
jg
lock
adc
dec
inc
out
int
insl
adc
lret
push
mov
loop
dec
and
cmp
mov
jl
pop
pop
test
xor
sti
pop
es
popa
pop
cmp
jae
insl
inc
ret
sarb
fildll
jo
pop
leave
in
imul
pop
mov
aas
in
je
cmp
out
xchg
imul
adc
popa
and
stc
cmp
addr16
xchg
outsl
jnp
jg
dec
cld
in
jmp
sarb
imull
hlt
cmp
scas
dec
loope
enter
icebp
scas
sub
out
repnz
sti
mov
dec
jl
out
cld
sarb
jge
repnz
fisubl
ds
dec
insb
stc
inc
leave
sbb
das
xchg
je
mov
in
mov
or
cmp
cmp
jmp
insl
scas
adc
lret
inc
adc
lods
lret
loope
xor
shrl
or
jo
pop
jne
outsl
je
mov
push
mov
dec
cld
outsb
or
insb
jle
iret
jp
fwait
je
cmp
arpl
dec
out
cmp
std
mov
loop
mov
mul
outsl
lcall
mov
syscall
stos
mov
lcall
sbb
pop
test
lds
loop
out
lret
and
push
xchg
mov
pop
addr16
lcall
cmp
add
in
and
je
arpl
cmp
movb
sub
roll
repz
add
ds
test
rolb
cmc
fnstsw
into
hlt
rcrb
shlb
adc
shl
dec
xchg
push
cs
in
or
sbbl
lret
adc
pmaxsw
movsb
inc
sbb
je
cltd
jmp
push
call
popa
aad
out
int
es
sbb
and
or
sbb
xchg
mov
lea
and
add
insl
or
sub
js
pop
dec
push
ljmp
pop
add
ret
mov
jmp
scas
clc
lods
push
jnp
jo
sub
out
fs
lret
fst
inc
mov
bound
outsl
icebp
pop
pop
imul
dec
loop
loopne
ds
imul
push
leave
cmp
jae
lock
js
fs
mov
sbb
ljmp
loop
cmpsb
and
int3
push
addr16
pop
jnp
pop
scas
pop
dec
lea
out
cld
scas
sub
into
es
stc
adc
outsb
lret
and
add
lods
dec
test
jg
xor
xchg
add
cld
into
ljmp
or
ljmp
cs
sbb
jmp
outsb
std
sub
or
push
adc
fmuls
cmp
pop
and
cmpsb
xchg
mov
mov
lret
rdtsc
jl
xor
mov
pop
cmp
dec
cmp
ja
fidivrs
add
xor
cmp
push
sbb
add
push
sub
fwait
add
xchg
loopne
push
sbb
lret
nop
orb
adc
adc
nop
pop
ljmp
jle
mov
inc
lock
test
test
or
outsl
mov
jne
inc
mov
cmpsl
cwtl
leave
or
cmp
rorb
loop
cmp
jle
pop
popf
cmp
rorb
jg
mov
adc
lret
push
scas
jbe
push
leave
insl
and
pop
and
shlb
pop
std
xchg
pop
dec
or
xor
int
loop
adc
and
mov
jge
std
or
psllw
lock
sub
iret
mov
imul
inc
lods
jp
insl
mov
add
fiadds
call
in
mov
sbb
ds
lock
lahf
fsubl
insl
and
sub
fisubl
addr16
and
in
push
sbb
and
scas
and
pop
lods
repnz
mov
mov
ss
testl
jge
ss
popf
inc
adc
out
sub
iret
je
or
add
sub
jo
in
xchg
dec
push
addr16
xchg
outsb
outsb
lea
loop
mov
int3
scas
jecxz
inc
inc
mov
ror
dec
sub
mov
sub
jb
pop
test
cmc
pop
js
adc
cld
out
sbb
scas
jo
pop
sub
cmpsb
addr16
xor
ljmp
les
int3
imul
adc
aad
subl
jp
inc
mov
fwait
dec
and
or
dec
adc
mov
in
lret
cmpsb
out
sbb
adc
or
and
jge
bound
in
cmp
ja
addr16
js
test
imul
aas
inc
xchg
pop
test
cmp
push
mov
aad
daa
je
xchg
push
js
dec
outsb
je
sub
or
lret
push
aad
sahf
add
xchg
test
scas
cltd
inc
sahf
das
jnp
mov
dec
stos
ljmp
xchg
imul
sub
mov
jo
insb
fwait
icebp
sub
and
or
add
mov
and
dec
in
fistpll
or
and
jbe
lock
or
jg
jmp
daa
xchg
push
or
jmp
stos
cwtl
int
popf
outsl
jo
imul
inc
inc
gs
notl
xchg
in
lock
imul
mov
popa
out
push
repz
or
arpl
dec
inc
repz
sbb
les
sarl
movb
je
arpl
push
out
out
jnp
jo
dec
adc
jge
rorl
mov
jmp
outsl
jo
loop
das
jge
into
mov
adc
cmpsb
lods
pushf
insl
mov
mov
and
stos
jbe
lods
lahf
dec
jg
popa
push
imul
push
dec
daa
xor
push
imul
add
pop
fsub
cli
cltd
mov
inc
js
sub
gs
mov
cmp
dec
adc
stc
stc
sub
pop
fwait
sbb
je
push
add
int3
or
loop
cld
adc
je
ds
sbb
rcr
and
shrd
sbb
push
mov
lock
and
je
dec
jmp
jo
mov
fisttpll
fs
mov
jo
jo
je
jge
lret
mov
in
fldt
cmpsb
outsb
mov
sbbb
and
add
ljmp
sbb
fldt
dec
push
adc
scas
add
aaa
loop
push
xor
sbb
xor
addr16
lods
xchg
jno
je
and
mov
lods
sub
fisubs
inc
jo
sub
sub
outsl
xchg
dec
cmpsb
push
mov
lock
imul
test
or
push
call
cld
or
jo
inc
loope
sub
inc
push
or
pop
jo
or
add
or
in
gs
dec
cld
or
insb
iret
ljmp
out
sub
out
pushf
mov
jmp
push
loopne
rcll
add
pop
mov
cwtl
insl
iret
pop
mov
in
pop
xchg
insb
dec
in
xor
lret
in
jecxz
push
jo
insl
es
pop
jmp
ds
mov
popf
or
xchg
das
ret
shlb
inc
out
clc
data16
push
ds
arpl
xor
dec
pushf
or
mov
dec
jg
fistl
dec
jb
mov
cmp
cs
stos
ja
cmpsb
cmp
xor
daa
fcmovnu
mov
loop
loop
aas
in
push
loop
and
cmp
xchg
and
aad
pop
fidivrl
cmp
stos
outsb
cmpsb
je
mov
pop
lret
dec
loop
push
lock
nop
or
icebp
cmp
dec
imul
fs
outsl
sub
xor
fs
cmp
fwait
cmpsb
mov
cmp
shr
mov
out
adc
in
dec
cmc
test
je
sbb
sub
jge
pop
fidivs
outsb
mov
adc
sub
dec
les
movsl
add
xchg
lds
sahf
icebp
stc
cwtl
push
jl
pop
insl
push
divl
and
mov
out
lret
pop
or
or
lds
inc
push
mov
add
and
jecxz
je
mov
mov
mov
push
dec
imul
add
pop
popa
xchg
cmp
loopne
icebp
movsl
add
jb
movsl
dec
outsl
out
mov
cmp
or
dec
fists
daa
lcall
lcall
ret
pop
popa
pop
dec
imul
mov
call
jg
pop
fldcw
imul
jo
xor
dec
outsl
clc
out
sub
addr16
nop
shl
mov
in
out
mov
mov
clc
mov
rcll
pop
es
out
pusha
cmpl
mov
push
stos
pop
mov
popl
insb
sbb
mov
xchg
out
and
stc
pusha
aad
pop
sub
pop
cmpsl
in
jne
push
out
adc
test
ja
je
popf
sub
in
decl
and
out
jecxz
xchg
push
icebp
mov
idiv
cmpsb
push
out
roll
shll
dec
insb
or
test
scas
mov
ret
mov
inc
movsb
shrb
sbb
xorb
xor
loop
pop
cld
xchg
dec
push
outsb
sub
addl
push
test
rcll
je
pop
out
mov
stos
cmp
or
leave
jge
xchg
inc
test
lock
cmp
jno
pop
cmp
aaa
pop
js
jbe
daa
sub
mov
out
dec
cwtl
test
out
or
addr16
lret
adc
ljmp
push
dec
push
push
xlat
pop
lret
imul
fbld
push
mov
pop
fldenv
mov
push
lcall
push
insb
orl
in
mov
filds
jmp
les
xlat
stos
jo
mov
jbe
jp
cld
sbb
lret
and
fsubp
daa
dec
arpl
jnp
push
aad
in
pop
mov
add
mov
push
or
repz
dec
jg
cmpsl
movsl
adc
cmp
mov
gs
rorl
push
dec
and
outsl
dec
daa
cmp
adc
subb
and
fsubrs
jge
arpl
lods
fsubrp
lret
js
fstpt
push
in
push
into
aaa
jle
pop
lahf
test
or
jg
jmp
dec
mov
pop
stc
or
nop
call
lcall
int3
jmp
sub
push
into
xor
je
lret
push
aam
xchg
int3
cld
mov
iret
iret
rcll
pop
rorl
adc
push
jmp
fldl
push
mov
and
shrl
imulb
movsb
lcall
mov
int3
xor
cmpsb
push
adc
push
push
js
xchg
aas
inc
xor
outsb
loopne
push
test
in
jg
inc
cs
test
pop
push
neg
dec
cwtl
xchg
pushf
and
sbb
sbb
ret
sti
mov
outsb
fisubl
stos
mov
scas
je
mov
jb
pop
mov
ret
mov
int3
sti
outsb
inc
add
or
inc
fwait
pop
arpl
ljmp
pop
cmp
jns
out
mov
in
ljmp
dec
loopne
mov
lahf
insl
insb
out
jp
push
aas
lock
lds
ljmp
imul
cvtpi2ps
pop
lods
fisubrl
mov
imul
xchg
rorb
dec
mov
dec
add
inc
cmp
test
mov
cld
sub
aas
imul
pop
imul
pop
int3
out
adc
cs
pop
push
cmpsb
adc
inc
dec
scas
adc
scas
mov
mov
into
mov
pop
add
inc
addr16
push
jns
ljmp
push
out
sarb
loop
movb
ret
and
repz
loopne
dec
adc
insb
or
cmpsb
test
ja
inc
daa
and
sub
mov
ljmp
mov
int3
ret
adc
pop
xchg
and
and
insl
adc
sub
xchg
cmpsb
mov
fwait
dec
insb
jne
pushf
insb
test
xor
outsl
ljmp
jmp
jg
mov
sub
push
popa
out
dec
addr16
outsl
pusha
out
imul
insl
dec
gs
sub
inc
mov
dec
dec
arpl
adc
popa
xchg
outsb
lods
bound
dec
loope
int3
movsl
mov
lods
cmp
scas
call
jmp
outsl
push
js
pop
jge
stc
arpl
call
jge
pusha
inc
fldenv
inc
cmc
das
xchg
ss
dec
jnp
repz
in
cli
outsb
jp
and
mov
pop
push
insl
lock
cmp
int
pop
test
repz
nop
cmc
insl
mov
pop
mov
ja
dec
adc
jbe
test
andl
aad
arpl
and
clc
hlt
scas
dec
ret
test
fs
xlat
push
je
aad
loop
jl
push
lcall
xchg
push
testb
fs
push
or
lret
jp
fadds
jns
push
test
fsubrs
add
mov
jge
fmull
mov
sub
stos
mov
jbe
arpl
pop
and
xor
jmp
decl
lock
test
jo
jo
test
cmp
bound
mov
std
cmc
call
addr16
or
mov
push
into
inc
xor
stc
mov
mov
inc
dec
stos
das
adc
push
adc
popa
dec
jmp
push
clc
int3
dec
addl
jmp
imul
ljmp
mov
or
dec
mov
sti
popa
shrl
ja
loope
mov
push
scas
test
outsl
xor
js
repnz
cltd
xchg
jg
lahf
sbb
jmp
sub
pusha
andb
mov
loope
lahf
pop
repz
aam
or
cmp
sub
push
out
lods
addr16
jbe
xorb
mov
and
enter
xchg
jp
dec
jle
cwtl
js
mov
sbbb
mov
in
sub
js
inc
out
loopne
mov
addr16
adc
in
test
pusha
loopne
jg
push
ror
and
gs
clc
xor
in
outsl
jmp
leave
arpl
jo
push
and
cld
pop
outsl
out
imul
or
jne
in
js
das
inc
fistpll
push
in
inc
pushl
decl
shlb
push
and
dec
fs
mov
inc
push
or
ljmp
push
arpl
xchg
arpl
or
lahf
out
js
mov
sbb
cwtl
lcall
in
sub
js
fmuls
or
negl
or
add
or
aas
adc
paddusb
mov
mov
mov
jo
jnp
or
clc
inc
sbb
clc
jbe
jmp
push
adc
pop
cwtl
hlt
js
push
andl
icebp
pop
rclb
rorl
xor
sub
pop
stos
add
dec
bound
xchg
inc
ret
out
out
and
outsl
loopne
jo
imul
push
insl
jmp
imul
popa
dec
shll
in
jg
fs
cmc
jge
decl
loopne
and
push
adc
jo
addr16
cmp
adc
clc
jb
push
push
in
adc
xchg
inc
addr16
pusha
jecxz
sbb
loope
dec
sbbl
xor
adc
nop
fldenv
popa
clc
jns
dec
jnp
dec
imul
pop
cmpsl
jo
sub
out
jne
loopne
hlt
and
jae
push
icebp
sub
scas
test
nop
je
or
outsl
sbb
mov
fsubrs
pop
enter
inc
bound
loopne
loopne
outsb
icebp
out
jne
in
call
cld
sub
jp
loope
ficoms
pop
mov
gs
mov
dec
out
dec
adc
add
xchg
enter
xchg
scas
addr16
inc
aaa
jge
into
xchg
xor
jp
and
mov
les
out
jnp
or
js
daa
xchg
xchg
addr16
pop
xor
call
fsubrs
sub
popf
dec
aad
xchg
add
js
cltd
mov
divb
xor
shlb
cmpsb
mov
lds
or
sub
cld
xor
ss
xor
rorl
je
fs
cmc
jnp
xor
dec
dec
leave
jb
loop
test
clc
faddp
mov
jmp
cmp
lock
sub
in
ss
icebp
push
pop
sub
pop
scas
je
lock
nop
pusha
das
jo
push
in
dec
xor
imul
push
je
int
out
popf
das
repnz
lock
ja
loopne
and
mov
dec
in
out
mov
fs
insl
sub
popa
popa
stc
add
jae
shr
lds
daa
cmp
loop
popa
mov
fisubl
xchg
out
mov
push
adc
sarl
out
and
inc
aas
inc
movsb
push
cmp
movb
dec
inc
fstl
aam
shlb
lea
call
or
loop
pop
xchg
scas
imul
and
addr16
lds
js
inc
lret
cltd
dec
xlat
dec
inc
mov
inc
inc
or
ja
loop
push
movsl
dec
in
es
dec
pop
nop
outsl
push
xor
dec
nop
inc
out
xlat
mov
push
clc
outsb
xor
mov
xor
mov
pop
push
mov
fiadds
in
mov
xor
inc
fwait
stc
add
cmp
push
movsl
sbb
add
push
xor
jne
mov
rcl
mov
adc
lock
lock
and
mov
dec
cld
loope
leave
rolb
loope
sbb
xchg
lods
stos
lock
out
adc
pop
xlat
das
outsl
scas
das
lock
cmpsl
jmp
dec
xchg
call
cs
stos
xor
and
or
insl
mov
jge
js
jmp
sub
xchg
movsb
pop
xchg
ds
ret
ljmp
push
cmpsb
out
in
popa
icebp
sub
loopne
imul
inc
or
sbb
push
mov
xorl
aaa
xor
dec
lret
ljmp
fdivrs
dec
shll
fldl
ja
sti
pop
pop
and
dec
push
lds
data16
imul
cmpsb
cmpsl
add
shlb
stos
aas
stos
movsl
and
imul
in
jb
jo
out
nop
sub
and
mov
cmp
add
fnstcw
mov
js
iret
xor
push
cmp
imul
xchg
or
push
iret
pop
je
rclb
es
je
fs
xchg
push
or
add
fsts
or
push
xor
imul
cmp
jae
cld
aas
mov
faddl
and
and
cmp
lock
imul
daa
int
test
jl
adc
pusha
or
fucomip
cmpsl
loop
cli
pusha
lret
xchg
incb
pop
xchg
cmovl
and
call
adc
out
fdivs
cmc
adc
dec
jae
or
bound
lret
pop
mov
or
sbb
or
xor
or
mov
adcl
in
insb
mov
sbb
cmpsb
mov
dec
pop
and
or
dec
inc
push
mov
repnz
js
mov
clc
ficoms
test
out
inc
add
and
scas
push
bound
adc
or
js
push
cwtl
mov
sub
cmpsb
addr16
mov
imul
lea
das
dec
mov
jae
cmp
insb
orl
xchg
in
add
hlt
cwtl
add
mov
das
jne
mov
jmp
mov
inc
inc
fmuls
mov
outsl
xor
push
popa
pop
out
pop
adc
xor
out
push
aas
sub
shlb
push
rolb
sbb
les
bound
pop
jns
xchg
je
ror
xchg
push
dec
inc
loope
je
pop
pop
rcll
insl
or
mov
xor
cmp
pop
adc
dec
loop
movsb
sbb
and
loopne
mov
jl
insl
cltd
pop
nop
inc
jb
xor
daa
jg
fcomip
add
dec
call
dec
dec
out
dec
mov
mov
xor
inc
mov
inc
inc
and
add
dec
aas
and
pop
out
mov
and
ds
jo
scas
cs
out
addr16
cwtl
lock
popa
adc
mov
mov
cmp
xchg
xor
in
out
jo
add
push
push
shr
aas
sub
push
fisttps
lret
mov
ret
sub
push
addb
cwtl
scas
fiadds
shrl
out
adc
lahf
imul
cwtl
adc
idivb
lcall
dec
adc
or
sarl
rcll
subl
push
clc
fsubrs
sub
xchg
rcrl
cmpsb
addr16
xchg
or
xor
fdivs
jb
sahf
stc
mulb
fisubl
aas
in
in
and
xor
jg
enter
add
rcll
add
out
test
cld
ljmp
loopne
loope
xchg
or
out
dec
cmpsb
lock
add
adc
loop
inc
xor
cmp
xor
jg
repnz
lods
int3
jns
jg
mov
rcr
xchg
dec
fiadds
inc
mov
sbb
andb
ret
xchg
les
enter
pop
call
sub
ljmp
ret
sub
pop
ficompl
out
shlb
mov
push
sub
popf
repnz
sarb
inc
mov
add
daa
jns
xor
and
push
rolb
mov
outsl
or
jecxz
push
jl
fists
ds
popa
lods
out
sbb
out
cmpsb
in
mov
loopne
inc
jno
inc
es
popa
bound
fsts
fnsave
mov
aam
mov
lock
mov
jg
pop
or
jmp
cmp
adc
jae
imul
jb
shrb
xchg
mov
fstpl
xchg
in
and
add
xor
and
popa
fwait
xor
mov
pop
ret
cmp
je
addb
inc
pop
jmp
stos
cmp
imul
js
loopne
loope
mov
jne
je
sbb
push
addr16
mov
clc
xor
add
mov
pop
jg
mov
push
jge
dec
mov
sub
cld
and
icebp
xor
arpl
push
pop
jl
rcll
int
bound
in
adc
hlt
sbb
dec
enter
push
push
jo
adc
inc
lods
pop
mov
mov
lods
jne
leave
xlat
mov
lea
call
sarb
mov
inc
adc
xor
mov
xor
nop
flds
test
dec
in
push
pop
push
push
dec
jo
leave
push
dec
je
xor
xchg
loopne
adc
and
adc
lods
aaa
sub
out
shr
dec
cmp
mov
push
xor
pusha
ret
mov
adc
scas
push
add
and
popa
push
mov
jg
mov
cs
iret
lret
leave
out
shrb
addr16
jns
cs
dec
dec
xor
ret
addr16
mov
pusha
adc
outsb
push
std
scas
mov
enter
ljmp
int
pushf
testl
scas
leave
sub
jmp
int
mov
ja
sbb
and
xchg
sub
rcrl
hlt
pusha
push
jnp
cs
pop
shrb
orb
pop
or
mov
shl
in
mov
push
sub
pushf
and
push
pop
xchg
xor
in
out
popa
jns
jmp
popl
pop
icebp
dec
repz
in
lea
push
hlt
adc
or
fistpll
pusha
scas
pop
aam
nop
cmp
icebp
cmp
pop
push
leave
insl
xchg
xlat
out
outsl
fs
imul
ffreep
lock
inc
jne,pt
xor
lea
jnp
rolb
sti
pop
out
loop
out
imul
stos
add
das
sub
scas
enter
mov
jns
daa
add
sub
stos
mov
mov
int3
mov
loopne
add
pop
xor
jmp
or
mov
push
out
jge
push
or
stos
or
int3
lock
out
jmp
loop
cmovge
mov
jmp
mov
inc
and
jae
xchg
pop
adc
add
insb
mov
cmp
add
fwait
push
sahf
lret
inc
sbb
imul
pusha
popa
sahf
or
ja
in
into
mov
dec
fwait
nop
add
imul
ljmp
cmp
outsl
loop
adcb
daa
adcb
xchg
insl
pop
ja
loop
xchg
in
jnp
ljmp
js
inc
pop
add
jns
jecxz
pop
int
je
push
fisttpl
adc
xchg
sub
sbbl
or
cmc
xor
rcll
enter
cmpsl
pusha
and
adcl
jns
cmp
xchg
mov
mov
dec
cwtl
jg
js
fucomip
fs
sbb
or
jmp
xor
mov
mov
aam
fdivr
repz
je
addr16
jb
and
mov
loop
movsb
pop
lods
xlat
or
or
movsl
mov
data16
scas
orb
loopne
push
xor
movsl
repnz
xchg
fbld
test
mov
jg
xchg
jb
or
cmp
sub
mov
xlat
cmpsb
xor
test
test
jne
out
push
into
loopne
adc
dec
rcll
lret
out
cmp
outsl
scas
push
lret
add
sahf
or
push
dec
jns
jmp
cmp
jne
push
xchg
pop
xchg
imul
pop
adc
fidivrs
dec
adc
mov
enter
jno
popa
sub
pop
or
test
pop
aad
roll
pop
ja
scas
fildll
out
xchg
add
mov
stos
cmp
adc
lds
dec
aam
push
push
cmpsl
out
outsl
inc
inc
addr16
xchg
push
lock
xor
in
out
outsb
mov
outsb
int3
xchg
xlat
clc
int3
clc
mov
into
jbe
popa
adc
push
pusha
fmuls
mov
ljmp
ret
addb
enter
or
dec
js
pop
add
push
pop
insl
loope
sub
insl
mov
outsl
into
cmp
mov
sub
popa
sti
push
dec
popa
jl
test
insl
pop
sub
or
add
sub
xchg
shufps
dec
clc
filds
or
outsb
into
adc
sub
lock
outsb
lea
and
mov
je
adc
fisttps
xor
jge
aam
push
imul
lods
in
clc
scas
sbb
ret
dec
std
adc
xchg
jbe
out
jmp
or
and
sub
and
or
out
jne
enter
je
push
fisubrs
mov
mov
outsb
mov
daa
and
cmc
xchg
sub
or
xor
jge
dec
dec
jb
inc
mov
popf
cmp
sub
das
ret
filds
jmp
in
xlat
push
jecxz
push
sbb
jns
or
sahf
inc
lock
fbld
icebp
scas
xchg
add
repnz
adc
add
sub
test
mov
inc
dec
mov
loop
aaa
mov
sti
nop
scas
xor
lea
mov
and
cltd
lock
loop
mov
jo
lock
call
xor
xor
inc
push
enter
andb
mov
daa
add
shlb
mov
lea
nop
dec
outsb
test
fdivrl
jo
lds
dec
scas
inc
popa
shll
stc
jge
out
sbb
scas
sbb
inc
inc
cltd
sub
or
das
scas
into
mov
dec
dec
ret
orl
xchg
pmaddwd
test
dec
xchg
pop
xor
and
lock
inc
inc
test
and
nop
addr16
jecxz
jno
js
ret
aas
mov
dec
cltd
lods
xchg
mov
ja
pusha
adc
cmpsb
lcall
aas
hlt
dec
xchg
insb
int
movsl
xchg
jge
sbb
dec
or
int
cmp
test
iret
or
scas
pop
test
test
and
ljmp
cli
xchg
jns
in
mov
gs
or
jb
mov
jmp
int
jp
mov
aaa
pop
and
imulb
inc
les
je
outsb
fcmovb
scas
ljmp
mov
insb
and
out
out
jmp
out
jmp
nop
fyl2x
xchg
push
mov
and
enter
or
mov
sub
mov
mov
cmp
or
lods
enter
fcmovb
adc
movsl
ljmp
aas
and
lods
inc
fcmovu
sti
in
mov
and
inc
or
aaa
popf
loopne
cwtl
xchg
xchg
sbb
mov
cmpsb
pop
dec
mov
pop
sub
in
mov
ja
or
xor
lock
jo
icebp
jmp
pop
jl
or
shrl
mov
mov
in
xor
jle
or
popf
das
arpl
daa
call
clc
in
icebp
std
pusha
xchg
mov
adc
add
mov
jp
push
ret
je
xor
insl
mov
sub
dec
in
mov
add
loopne
sahf
enter
repnz
xchg
cmpsl
push
mov
xor
inc
jmp
sub
lock
mov
cmp
sub
loopne
cmpsb
push
sub
pop
int3
subb
push
sub
in
mov
lock
or
mov
in
push
mov
in
push
sti
aam
fldt
adc
shll
js
test
gs
pop
je
dec
fnstenv
push
int3
jo
pop
xchg
nop
popa
xor
out
mov
adc
call
mov
ret
nop
inc
in
lock
push
add
outsl
sub
leave
cwtl
imul
stos
bound
fistps
je
imul
xchg
movsl
test
xlat
mov
es
mov
push
lcall
xor
cmp
jno
adc
clc
or
fisttps
test
pop
std
test
jl
lcall
lock
jg
xor
je
mov
mov
cmc
ret
push
jae
inc
mov
cmpsl
add
and
shlb
cwtl
nop
mov
xor
inc
subb
xchg
in
or
je
out
mov
push
cmp
mov
mov
and
out
jb
adcl
das
mov
inc
sbb
pop
mov
mov
addr16
por
fwait
std
test
mov
mov
hlt
sbb
popa
insl
out
ja
cli
xchg
pop
add
and
inc
sub
insl
je
vsqrtpd
xchg
cmpsl
int3
jns
inc
aam
stos
add
call
out
inc
pop
adc
cld
dec
rorl
mov
and
insl
mov
negl
jp
vmaxsd
jne
out
ret
repz
loope
out
int3
loop
jbe
es
cwtl
sub
int3
mov
inc
test
mov
or
ljmp
xchg
outsl
stc
call
cmpsb
dec
test
sbb
push
jno
cmpsb
lcall
insb
call
and
xchg
jbe
subb
mov
in
and
in
inc
ret
lock
mov
or
sub
insl
sbb
fiaddl
xor
dec
jae
scas
sub
jge
jmp
xor
aad
mov
adc
cmpsl
imul
das
daa
addb
xchg
test
out
adc
push
inc
and
incb
push
sbb
in
out
outsb
mov
out
movsl
or
test
in
addr16
add
repnz
call
fbld
sub
jg
je
adc
lret
cmp
sbbb
das
push
addr16
jnp
out
dec
loope
aas
flds
imul
ficomps
incl
scas
mov
repz
push
popa
inc
add
rclb
cmpsb
je
inc
or
daa
cmp
rcll
fidivs
cwtl
or
and
loop
rep
shl
test
jmp
mov
fadd
icebp
insb
shr
sub
aas
adc
in
popa
push
punpcklbw
sub
lods
fcoms
mov
les
sub
ds
pop
mov
sub
daa
mov
jo
push
mov
shrl
popa
inc
sbb
sub
push
cli
push
jle
mov
sbb
sub
mov
jl
pop
in
outsb
and
dec
addr16
insb
jo
adc
inc
and
and
mov
gs
cmc
fsubl
lret
in
jne
mov
or
aaa
ror
addr16
ljmp
inc
inc
jne
mov
xor
push
mov
sbb
sti
cs
jge
mov
jecxz
adc
cmp
and
popa
mov
jnp
icebp
loope
mov
adc
jecxz
in
adc
jge
movsb
dec
add
xor
loop
outsb
mov
mov
mull
adc
icebp
in
sarl
or
loope
jno
test
pop
rcrb
cmpl
in
mov
ljmp
loope
sbb
mov
ret
out
int3
adc
sbb
push
cmc
rclb
das
insl
cmpsb
mov
push
js
add
add
mov
xor
cld
jmp
imul
adc
adc
xchg
or
dec
lcall
xor
inc
and
inc
shlb
mov
nop
push
and
leave
loope
movb
jmp
stos
fucom
push
jg
ficoms
jne
or
inc
push
mov
scas
std
cmp
test
push
stos
sub
out
pop
movaps
fadd
rolb
enter
mov
add
push
enter
test
cmpsb
fs
imul
sbb
je
popf
iret
xchg
jns
icebp
dec
roll
mov
add
sub
lret
jmp
and
or
call
aam
call
mov
arpl
enter
int3
or
cmp
arpl
and
add
inc
xor
jge
rol
gs
loop
jne
inc
je
fisubs
sub
je
jp
sub
jg
mov
icebp
jnp
and
sbb
inc
inc
dec
in
mov
sub
adcb
in
jmp
movsl
imul
data16
adc
dec
les
jbe
ret
inc
pop
shll
cmpsl
mov
jge
add
cmpsb
dec
sbbl
push
fs
jecxz
std
or
lock
sahf
adc
jg
in
mov
rcll
or
sbb
push
aad
xchg
sbb
mov
icebp
ret
or
int3
jp
daa
cmpsb
std
lahf
adc
loopne
cld
jbe
jmp
xor
xchg
mov
lock
add
and
icebp
add
rorb
xor
push
stos
adc
adc
rolb
xchg
xchg
cmpsb
jecxz
dec
mov
cmp
mov
dec
inc
inc
jno
or
or
ficompl
inc
push
mov
mov
mov
ja
insb
jecxz
cltd
arpl
add
ljmp
jmp
lea
enter
shlb
adc
test
jo
std
xchg
pop
inc
in
int
push
repz
xchg
cmc
fptan
jp
or
repz
addr16
pop
lahf
aaa
sub
call
or
iret
mov
in
ficompl
mov
es
xor
mov
jge
lret
roll
lahf
jecxz
movsb
push
jg
pop
jge
out
xor
or
adc
lret
dec
loop
repz
xchg
sbb
mov
sub
popa
mov
cmpsl
or
bound
fcmovnu
int3
cltd
push
adc
and
and
xor
je
ror
jne
fwait
adc
enter
js
jecxz
ret
mov
jo
sbb
cmc
popa
int3
in
cmpsb
mov
push
sub
in
lea
imul
sbb
cli
stos
int3
cmp
daa
and
jae
fwait
cld
or
loope
fbld
inc
fldt
sahf
mov
mov
cli
fwait
hlt
cwtl
cmp
cmp
lcall
sbb
jge
sbb
out
mulb
inc
xor
mov
fnstcw
insl
jg
cld
sbb
stc
xchg
lods
sbb
add
test
je
lock
xchg
jbe
push
repz
fs
js
lret
adc
jmp
imul
imul
mov
cmp
pop
push
sub
pop
in
pop
jle
dec
xchg
pop
addr16
inc
addr16
jno
push
fidivl
nop
pop
cmp
dec
push
aas
into
jbe
in
pop
mov
insl
xor
in
scas
jg
jmp
adc
jns
or
push
mov
stos
lcall
les
lret
sub
mov
add
clc
js
dec
jle
fstl
aad
pushf
sbb
mov
adc
loope
loop
cmp
jbe
add
xor
and
adc
cmp
jo
add
jb
xchg
pop
fsubl
pushf
xchg
push
cmc
jbe
jg
jae
cmp
sarb
inc
fmuls
jle
ret
adc
fbld
dec
xor
add
or
dec
outsl
sarb
aam
pusha
idivl
inc
push
dec
push
push
mov
test
das
fs
pushf
cmc
add
jg
cmp
daa
je
add
hlt
icebp
ljmp
fdivrl
scas
out
fwait
aas
adc
lds
movsb
sbb
mov
cmp
xchg
les
mov
sbb
and
loop
mov
lret
mov
ficoml
and
or
pop
or
mov
adc
out
and
jae
nop
xor
imul
lds
dec
cmp
sbb
movsl
add
sti
popf
xlat
outsl
pushf
ret
dec
fnsave
outsl
pop
mov
inc
inc
loopne
pop
jecxz
incl
sbb
mov
in
mov
jl
and
cmpl
and
cmp
in
gs
push
mov
sbb
or
sbb
xchg
cli
ja
arpl
movsl
stos
call
rol
push
xor
insl
packuswb
xor
int3
jnp
fcomi
out
ret
lret
jno
cmpsb
je
xor
mov
test
mov
jmp
and
pop
loopne
push
imull
dec
insl
push
push
iret
in
dec
mov
insb
out
dec
mov
pop
into
cmpsb
pop
bound
and
aaa
sub
xchg
je
jb
incl
inc
repnz
ss
xchg
out
adc
xorl
hlt
andl
mov
ret
in
push
js
dec
imul
cmp
aaa
jno
or
outsb
fimuls
pop
xor
mov
daa
dec
jne
fs
outsl
jg
insb
fisttps
mov
cmp
movsl
call
xchg
mov
mov
loopne
push
sar
cmp
loop
ret
cmp
inc
xchg
mov
lahf
dec
cld
into
loope
aaa
dec
lcall
and
xchg
mov
xor
cli
shlb
je
and
inc
aaa
sarb
dec
jecxz
adc
mov
sahf
mov
mov
data16
das
insb
test
out
daa
cmp
arpl
loope
in
pop
outsb
or
pusha
dec
imul
add
ds
loop
dec
or
shlb
aaa
mov
in
xchg
cmp
inc
or
sub
aad
clc
testb
das
xchg
mov
dec
push
loop
mov
sub
jmp
inc
pop
mov
daa
cmpsb
adc
je
mov
mov
or
inc
xor
or
mov
std
loopne
cwtl
fucomp
rorb
lahf
pop
lret
dec
mov
jl
popf
xor
call
aaa
rcrl
inc
out
cmp
pop
stc
mov
insl
mov
push
sub
inc
and
mov
mov
mov
mov
jecxz
sti
inc
sbb
cmpsb
out
sbb
dec
xchg
xchg
rcrl
pop
push
loope
mov
imul
jmp
cmp
sub
mov
push
push
stos
push
movsb
xor
fadds
sub
push
xor
xor
test
aas
xor
dec
fiadds
imul
inc
or
inc
insb
cmp
pop
loopne
cmp
cmpl
insb
or
movsb
add
cld
pop
mov
lret
orl
or
and
xchg
imul
je
cmp
xchg
add
dec
fldenv
js
sbb
push
outsb
xchg
mov
loop
push
aas
imul
in
popa
adc
mov
sbb
mov
loop
in
scas
lcall
lret
dec
je
pop
pop
test
cmp
icebp
pop
or
sub
loope
mov
or
daa
pop
lret
and
mov
dec
subl
xchg
daa
and
sub
out
jecxz
mov
lea
dec
js
out
push
cmpsb
lods
sarl
jp
testl
scas
mov
xchg
push
in
mov
lret
inc
adc
stc
mov
jns
lcall
test
and
sub
into
jne
pop
mov
adc
jg
xor
ja
or
xchg
push
sbb
stos
jmp
dec
mov
mov
popa
mov
ja
aad
in
dec
das
in
inc
arpl
je
popf
mov
daa
or
push
repnz
jo
xchg
push
and
jmp
aad
cmp
cmc
sbbb
push
dec
mulb
cltd
jno
fucomip
xor
ja
andb
and
push
icebp
xorb
and
mov
mov
add
fucomip
shrl
test
aaa
or
and
inc
popf
cmc
mov
shlb
stc
insl
sub
jg
push
test
mov
mov
adc
jnp
imul
std
sub
scas
sbb
in
decb
mov
lcall
lret
int
sub
out
sub
fcoml
xor
addr16
inc
outsb
loop
inc
dec
push
pop
mov
xchg
outsb
add
scas
sub
addr16
push
popa
adc
arpl
jmp
popa
sbb
cltd
or
jle
pop
sub
push
jmp
in
dec
mov
push
loop
add
xchg
xor
adc
scas
je
xchg
jg
jle
mov
lods
faddp
out
mov
inc
adc
in
je
ds
arpl
or
in
mov
loope
dec
mov
sub
cld
or
shr
xchg
mov
ret
adc
das
add
push
sarb
stos
fs
or
and
fbld
loop
rcrb
mov
daa
je
push
cmpsb
jo
out
pusha
arpl
aaa
ficomps
sahf
sarb
andl
insb
fbld
addr16
out
xchg
inc
movsb
shrb
jmp
ret
enter
push
add
leave
or
popf
inc
js
cli
xlat
push
movsb
insl
pop
cmpsb
insb
ret
insb
push
dec
pop
addr16
fbld
sarl
mov
es
daa
popf
mov
data16
mov
mov
push
ljmp
dec
test
mov
mov
xchg
jo
add
or
add
inc
jmp
or
pop
call
pop
maxps
inc
mov
push
mov
test
idivb
sarb
aaa
jns
mov
lods
mov
out
jmp
jl
das
loope
mov
ss
cs
jg
jecxz
aaa
lret
push
fbstp
inc
lahf
sub
cmp
cli
test
int
push
cmp
mov
aas
xchg
dec
addl
into
sub
inc
adc
in
push
or
add
cmp
out
cltd
push
sub
xchg
in
scas
jmp
js
shll
mov
shlb
test
push
inc
call
jg
jnp
lret
cmpsl
mov
imul
xor
pop
sbb
lds
push
andl
add
mov
mov
lds
cmp
push
mov
mov
enter
js
cld
inc
cs
adc
test
cmp
cmp
xor
and
cmpsl
cmp
cwtl
sub
daa
inc
loope
pop
subl
std
xor
nop
call
fisubl
aas
jg
push
fcompl
call
lahf
outsl
data16
aas
or
dec
sbb
or
cmp
push
jg
push
sbb
in
pop
pop
out
add
and
adc
inc
jecxz
clc
sbb
movsl
jne
lods
push
and
rcrb
popa
fs
add
out
pop
add
pop
test
inc
mov
into
fwait
sub
movsl
xor
or
insb
cli
inc
pop
add
push
push
fldl
test
push
in
xchg
test
popf
cld
cwtl
jmp
xor
ljmp
rorl
inc
sbb
clc
sbb
fs
mov
popa
sub
subl
push
outsb
sahf
push
mov
jp
in
push
in
insl
cmp
and
inc
jle
adc
jmp
out
outsl
popa
out
cmpsb
fisubrs
imul
push
jge
std
test
xchg
stos
out
scas
in
lret
xchg
push
stos
enter
les
insl
inc
pop
and
ljmp
xor
out
loopne
pcmpgtd
or
in
fwait
xchg
or
mov
inc
in
orl
jns
test
push
push
and
jnp
rcll
and
dec
and
mov
jge
lods
dec
mov
inc
out
adc
xlat
mov
shrl
loope
daa
push
out
out
push
mov
jae
xlat
cmp
xor
sahf
mov
lds
popa
call
aaa
adc
aaa
inc
scas
out
rcrb
icebp
add
mulb
or
dec
mov
mov
ljmp
sbb
popf
popf
icebp
or
arpl
xchg
sahf
cmp
loop
ljmp
add
push
add
in
jle
in
je
mov
mov
adc
mov
inc
lods
cld
sub
add
xchg
ds
sahf
xchg
jmp
out
gs
add
cmp
in
imul
sarb
aam
sar
pop
mov
push
or
js
scas
mov
fnstsw
jmp
mov
inc
andb
inc
fdivl
outsl
and
cltd
movsl
scas
es
andb
cltd
inc
ret
rep
insl
mov
xor
inc
mov
dec
cld
ret
imul
fs
loopne
push
ljmp
insl
mov
and
dec
pop
cmpsl
fmul
imul
mov
aaa
inc
adcb
repz
ljmp
cmp
mov
subl
sub
movsl
das
push
or
lcall
lret
mov
jae
inc
sub
jne
test
lcall
out
std
mov
mov
scas
jmp
das
lahf
mov
sub
xchg
loop
sbb
push
push
jb
cmpsb
das
push
push
gs
add
dec
cmpsb
or
and
xchg
adcl
and
mov
xor
sbb
mov
and
fldl
pusha
pop
in
ljmp
in
call
in
mov
dec
mov
outsb
jns
data16
jg
shlb
cmp
in
bnd
imul
movsl
xor
call
mov
jl
and
popa
inc
jo
ljmp
add
mov
sbb
in
jmp
leave
or
inc
or
loopne
cmp
dec
das
mov
dec
and
addb
xor
paddb
mov
dec
inc
mov
das
pop
mov
fimuls
out
das
mov
cmpsl
cmpsb
fidivrs
pop
dec
or
mov
out
ljmp
push
mov
push
pusha
dec
lahf
test
pushf
out
in
dec
lds
int3
rcrl
cmpsb
sub
pop
addr16
stc
cmp
xor
fs
es
loop
dec
mov
test
adc
pop
rolb
sbb
pop
fwait
sub
icebp
ss
xor
xchg
push
loopne
sub
fwait
nop
in
outsl
pop
imul
sti
scas
and
fmull
add
sti
nop
or
daa
xchg
xchg
xor
and
imul
ja
and
out
inc
out
enter
fs
and
mov
cli
outsl
daa
cs
fs
dec
and
dec
out
dec
lods
outsl
pusha
js
add
sub
dec
xor
mov
add
pop
sbb
fcmovne
jnp
pusha
call
add
xchg
push
dec
mov
cmp
and
popa
lds
cli
enter
pop
pop
mov
faddp
pop
push
or
daa
outsl
aad
fsubrp
xor
shll
adc
rcrl
lock
and
out
addr16
dec
or
int3
inc
sbb
out
push
pop
push
sub
dec
or
add
xorb
jo
out
sub
adc
movsl
repz
mov
sub
js
inc
mov
mov
xchg
mov
stc
bnd
jp,pn
in
jnp
insl
adc
ljmp
aad
scas
sub
jmp
dec
inc
cmpl
outsb
add
imulb
stc
dec
int
cmp
iret
rcll
out
inc
sub
stc
in
xor
mov
cmc
xchg
cmp
outsl
adc
es
icebp
xor
jo
pop
in
or
insb
lea
jl
in
and
scas
loopne
sub
dec
aaa
jg
sub
in
jge
push
cmpsl
pop
xchg
lret
popa
pop
cmpsl
xor
xchg
or
rolb
cmp
sub
mov
mov
add
lret
mov
out
mov
cmp
pop
pop
cld
fisubrs
loopne
test
cmpsl
movsl
loop
bound
cs
xchg
loope
cmpsb
scas
xor
ret
cs
cld
add
inc
jle
mov
fsubrl
push
imulb
ficompl
lret
xor
mov
or
xchg
xor
inc
sbbl
dec
cmp
xor
jbe
movsl
and
loopne
js
cmc
clc
jne
je
mov
pop
arpl
xchg
and
insb
pop
push
adc
and
repz
out
gs
je
je
stc
fisttpll
arpl
cmpsl
cmp
popf
pop
inc
imul
addr16
out
inc
sub
jp
aas
jb
cmp
pop
stos
out
xor
pop
call
xlat
es
mov
sar
mov
test
cmp
insb
mov
out
imul
fs
into
movl
add
xor
iret
fs
ror
divl
jecxz
jp
mov
cmpsl
xchg
ljmp
mov
fiadds
js
and
adc
pop
sbbb
outsb
stc
sub
dec
dec
push
je
ss
sbb
mov
pop
push
mov
test
pop
movsl
inc
mov
js
mov
pop
mov
hlt
xor
push
call
iret
add
xchg
cltd
pushf
sti
lock
ret
dec
out
or
mov
daa
iret
pop
sti
out
nop
jnp
call
pcmpgtw
mov
xchg
cmp
sub
inc
adc
dec
std
jnp
and
and
cmp
in
xchg
sub
movsl
jnp
in
std
in
adc
lret
mov
out
xor
insb
pop
nop
jmp
adc
xchg
ss
mov
fs
mov
insl
dec
rcl
and
dec
and
cli
push
fcmovb
cs
mov
add
iret
addr16
lcall
mov
subb
mov
cmc
fdivrs
das
jmp
jl
popa
sub
mov
dec
imul
cmpsl
push
adc
pop
std
jmp
xor
bound
xchg
push
out
jo
sarb
enter
rcrl
js
dec
shll
adc
loop
lods
xor
stos
or
rorb
out
pop
setle
xor
daa
xor
mov
fidivrs
mov
pushf
adc
sarl
ficomps
mov
clc
daa
out
push
inc
jbe
aaa
dec
loop
movsl
and
movsl
out
or
sbb
jo
mov
outsb
inc
orb
pop
mov
sub
mov
sub
test
dec
shlb
shl
data16
rclb
inc
hlt
ljmp
nop
xor
push
loopne
sub
and
jnp
xor
adc
scas
push
dec
add
cli
or
or
mov
cmp
call
dec
dec
dec
lods
outsb
cwtl
push
jmp
cmp
and
sub
mov
inc
stc
push
pop
mov
xor
pop
ds
call
jmp
adc
jae
fs
mov
icebp
xchg
in
xor
roll
mov
sub
lods
jbe
push
xchg
stos
jp
pop
push
cmpsb
xchg
lret
scas
sub
xor
shll
jae
ljmp
andb
aad
imul
inc
lahf
inc
imul
push
push
push
inc
xlat
icebp
int3
and
jl
jge
lcall
jmp
int3
sbbl
bnd
or
fs
daa
jbe
faddp
jle
cwtl
mov
mov
push
std
pusha
xor
push
sub
out
cld
scas
cmp
clc
push
and
lds
xchg
inc
in
push
or
mov
aam
fldcw
pop
call
lods
popf
mov
mov
imul
inc
out
movsb
sub
xchg
xchg
mov
cld
rorb
scas
fsubrl
aas
xchg
jne
das
aas
or
inc
testb
dec
jbe
scas
cmc
and
popa
jnp
mov
das
call
addr16
xor
xor
dec
mov
cmpb
js
out
pop
data16
filds
xor
clc
js
mov
dec
mull
clc
push
stc
shrb
loopne
icebp
mov
add
pop
pop
movsb
adc
mov
addr16
jp
dec
jp
mov
das
scas
ja
scas
je
hlt
sbb
out
fdivrs
les
das
je
cltd
xor
pop
movb
mov
outsb
mov
je
adc
nop
dec
outsl
imul
jg
stos
jl
ret
orl
shr
icebp
inc
pop
leave
stc
mov
out
ret
mov
push
aas
cmpsb
mov
fimull
xchg
mov
xchg
xchg
aaa
bound
bound
dec
push
divb
scas
je
push
incb
mov
sbb
mov
push
addr16
inc
mov
loopne
ss
faddl
sbb
jmp
push
lahf
mov
icebp
xchg
insl
mov
xchg
inc
sub
or
add
out
mov
xorl
dec
dec
scas
push
mov
fucomip
push
mov
shll
dec
in
push
pop
ret
sarl
push
xchg
mov
mov
loop
fldl
jae
movsl
fdivl
ret
std
cmp
adcl
mov
push
outsb
insb
out
les
lcall
sbb
jno
fildll
outsl
aaa
mov
pop
mov
push
decl
rorb
in
xchg
enter
cli
push
daa
subl
dec
insl
pop
loope
jmp
sar
sbb
adcb
iret
adc
insb
inc
mov
lods
pop
insl
push
daa
rcrl
fwait
jp
mov
js
daa
or
sub
test
or
push
stos
mov
fadds
push
push
xchg
call
lods
insl
xchg
mov
test
sub
or
lret
sbb
nop
out
je
mov
dec
pop
jno
lock
pusha
js
int3
sub
imul
movsl
ja
lods
pop
sub
inc
push
sub
inc
scas
enter
inc
subb
xchg
or
pusha
loop
cmp
rorb
adc
gs
jo
je
clc
xchg
int3
sti
negb
mov
pop
or
loope
dec
and
packsswb
int
sbb
pop
call
adc
and
dec
insb
js
and
cmovs
movsb
insl
fcomps
jl
es
sbb
pop
clc
xchg
inc
ficompl
faddl
testl
mov
inc
sub
aaa
mulb
jb
cld
sub
sub
add
jg
movaps
fsubrp
dec
cwtl
dec
jb
clc
test
ret
add
call
fsubs
aam
icebp
xor
sti
pop
add
and
in
cmp
xor
xor
out
addl
mov
mov
mov
jns
call
gs
push
mov
rolb
jne
xor
call
adc
mov
pop
decb
test
pusha
out
les
lods
fcompl
dec
roll
ja
cmp
push
cmp
sahf
out
push
pusha
mov
cmpsb
bound
mov
fsubrl
jmp
frstor
out
clc
pop
pop
inc
sbb
xchg
dec
aaa
in
inc
insl
fsts
jp
loop
out
dec
out
xor
aas
call
or
push
test
push
out
cmp
mov
inc
stc
out
fwait
std
jns
sahf
icebp
in
jmp
cmp
lret
mov
push
add
stos
inc
push
sbb
sub
pop
jmp
lea
clc
add
fwait
testb
cmp
clc
ja
sarb
and
inc
lods
lock
inc
or
call
shl
pop
ljmp
sub
cld
cmp
push
and
sti
and
sbb
jl
push
flds
imul
fucom
ret
xchg
xor
sub
out
icebp
stos
xchg
inc
mov
pop
icebp
nop
push
pushl
popf
jo
pavgb
je
xor
or
cmp
loop
and
in
in
loopne
lods
cmp
jo
xchg
fs
outsb
shlb
hlt
outsb
and
outsl
push
pop
xor
sub
rolb
icebp
mov
addr16
cld
sub
lret
xor
sub
out
cmp
nop
loope
cltd
add
in
das
loope
pop
nop
outsl
dec
testb
das
xchg
test
jb
xor
jle
or
mov
outsl
fs
js
sbb
or
dec
fs
jecxz
arpl
je
mov
sub
sub
pop
imul
in
nop
add
das
cmc
cltd
push
adc
mov
mov
sbb
pushf
mov
mov
in
in
jbe
loop
lret
xchg
xlat
adc
adc
push
aam
jb
loopne
js
adc
push
fs
fstps
test
push
or
lds
dec
xchg
xchg
shlb
notb
sub
aas
addl
bound
sarb
mov
stos
mov
xchg
xchg
dec
and
addl
divb
add
repnz
and
jmp
les
int
int
mov
pop
sub
paddw
out
sbb
mov
notl
loopne
inc
out
and
addr16
fdivrl
dec
popa
loopne
adc
fmul
ljmp
dec
fsubr
fdivrs
push
in
lea
and
inc
stc
or
addr16
call
xchg
int
adc
enter
aad
stos
adc
fidivl
push
aas
pop
jge
fsts
test
pop
push
inc
push
dec
ljmp
and
ret
insb
stos
xor
or
les
cmp
jecxz
dec
imul
outsl
loopne
stc
cltd
pop
jl
rol
fwait
mov
out
imul
out
or
stos
outsl
sbb
add
xchg
adc
gs
cmp
popa
xchg
jg
and
inc
bound
nop
pusha
sub
sub
dec
aam
sbb
adc
je
loope
ljmp
pop
movsb
rep
pop
dec
jle
std
clc
jge
ljmp
jo
std
in
insb
xchg
mov
xchg
and
in
out
cmp
insb
jl
adc
dec
push
sahf
cmp
cmp
clc
push
pop
xor
mov
data16
fs
ret
jmp
rcr
outsb
shlb
fucomip
outsl
dec
les
jecxz
xor
pop
filds
in
ret
call
pop
outsl
es
push
pusha
sahf
inc
jmp
sub
add
mov
out
xchg
stos
push
sub
les
cmp
outsl
sbb
cmp
movsl
pop
es
lods
and
rclb
call
loop
adc
rclb
lret
xchg
mov
je
push
dec
or
enter
popa
pop
cmp
adcb
data16
pop
sub
imul
push
std
ret
in
push
test
cmp
sbb
pop
mov
shrl
cli
scas
enter
rorb
mov
addr16
cmp
adc
sbb
mov
pushf
xor
jnp
rcrb
mov
shll
ja
inc
cwtl
ljmp
sbb
in
gs
adc
in
es
adc
je
ja
pop
pushf
inc
scas
and
fsubp
les
xor
imul
pop
fiadds
dec
test
repz
adc
les
outsb
sti
mov
lret
shr
arpl
cmpsl
and
mov
mov
inc
cmc
ja
outsb
xchg
adc
test
mov
loope
add
loopne
jb
fstpl
nop
mov
test
je
xchg
mov
cmp
lods
lea
mov
cmp
mov
mov
clc
pop
ds
mov
push
movsl
cwtl
pop
lock
pop
sub
or
in
mov
and
xchg
enter
cs
pop
cmp
inc
inc
and
clc
pushf
jl
mov
xchg
add
iret
or
cmpsl
cmpsb
pusha
cmp
cmp
mov
loop
pop
push
call
ret
repz
in
mov
mov
or
jg
xchg
loopne
ficoms
enter
std
or
mov
loopne
dec
jmp
aaa
sbb
pusha
stos
popa
popf
xchg
out
arpl
pusha
adc
cmc
mov
xor
jnp
push
andl
and
push
std
mov
ljmp
loope
out
push
ljmp
cwtl
rorl
pop
in
xor
loopne
sub
out
fimuls
cld
call
pop
lods
xor
or
fstl
inc
daa
inc
lea
xchg
pop
add
test
inc
das
loope
sub
cmp
jo
pusha
in
je
xlat
mov
loope
and
push
cld
scas
inc
daa
mov
jge
ss
in
outsb
and
shl
lret
loop
ror
xchg
shlb
je
jo
call
xchg
call
mov
arpl
rcll
add
repnz
or
or
adc
or
scas
je
push
sbb
iret
imul
cmp
aad
repz
xchg
cmp
push
loopne,pt
fistpll
inc
push
push
add
jne
mov
rorl
push
cli
jbe
inc
push
faddp
fwait
outsl
not
cmp
mov
inc
mov
clc
outsb
call
cltd
repnz
fdivr
sub
jl
fstpt
pusha
bound
aas
fldl
sbb
divb
pop
mov
sub
xchg
or
call
lods
ret
mov
pop
sti
int3
and
call
and
pop
iret
iret
jl
jecxz
movaps
outsb
daa
xchg
jg
in
xchg
mov
aas
out
das
xor
std
fs
not
das
xchg
sub
into
mov
or
movsb
gs
or
mov
faddp
xor
and
lcall
pushf
popw
jmp
in
shlb
sbb
out
in
les
scas
imul
cmpsb
mov
or
shll
insl
dec
popl
xchg
icebp
aad
or
fwait
lods
imul
xor
mov
xchg
fadd
xchg
daa
in
sub
xchg
call
bswap
popf
mov
aas
dec
mov
pushf
adc
scas
je
lds
cmp
jecxz
pop
push
subl
jb
cmpl
push
xor
mov
outsb
test
fwait
inc
call
sbbl
xor
lret
lret
insb
xchg
clc
insb
inc
out
mov
cmp
sbb
xchg
mov
gs
cmp
loop
lds
fsubr
xor
out
push
add
mov
cmp
cs
push
pop
popl
or
js
hlt
xlat
push
and
ja
fdivr
inc
or
jmp
pop
and
jge
scas
loop
pop
or
inc
push
sbb
pop
xor
mov
mov
jmp
lock
sub
pop
inc
js
mov
lock
ljmp
leave
and
movsl
jns
push
mov
jge
or
iret
js
test
adcl
cli
loope
xchg
out
scas
sbb
dec
arpl
ljmp
out
enter
adc
stc
repnz
cmp
pusha
xchg
and
lret
in
in
adc
call
pop
cltd
and
ss
jne
lods
and
loopne
jo
or
lds
shrl
out
icebp
imul
in
xor
aaa
das
or
mov
pop
scas
ffreep
mov
lods
scas
mov
fwait
add
push
jbe
je
or
mov
outsb
aaa
push
dec
mov
jnp
push
fcomps
cs
aad
mov
push
call
cmpsb
cmp
mov
out
daa
icebp
pop
into
xor
add
je
push
or
jmp
push
xchg
addr16
scas
fsubs
je
lds
mov
divl
sbb
inc
outsl
push
jns
out
loopne
pop
outsl
rcrl
xchg
sub
outsl
add
mov
fildl
pusha
cmp
xor
push
je
rol
push
mov
xchg
scas
fwait
dec
popw
sahf
leave
mov
daa
out
sub
jb
cmc
jge
shrb
sbb
jb
je
inc
mov
sub
push
and
insb
ljmp
fdivrl
filds
testb
insl
fsubrl
jl
clc
add
insb
mov
sbb
sub
fldl
mov
sub
pop
enter
dec
push
das
mov
push
xchg
das
add
addr16
int3
lock
jo
stos
sbb
das
insl
or
xchg
dec
mov
add
inc
imulb
sbb
push
push
inc
ret
jmp
pop
pop
xor
dec
lret
inc
in
loope
pushl
popf
xor
mov
sub
out
xor
lods
int
insl
ret
fs
xor
dec
push
addr16
cmp
pop
addl
into
aas
or
jp
adc
sbb
shlb
adc
jmp
pop
and
stc
aas
mov
push
sub
add
jl
and
in
je
pop
inc
fcompl
sbb
in
addr16
hlt
fmul
jp
pop
push
jg
xor
cmp
inc
inc
sub
subl
nop
out
in
sub
insl
cld
mov
sub
mov
test
push
scas
and
lahf
jmp
ja
inc
fwait
or
jg
adc
mov
jns
xchg
cs
mov
loope
lahf
mov
mov
aam
jb
dec
pop
int
ret
adc
and
mov
clc
mov
sbb
cwtl
outsb
callw
adc
dec
aas
fstl
fwait
mov
fisubrl
cmp
test
jnp
test
pop
daa
pusha
push
pop
aam
xchg
pop
or
sub
or
fwait
decl
in
std
push
out
jle
mov
outsl
mov
clc
rorl
and
imul
pusha
fdivs
xor
aas
out
lcall
mov
adc
jbe
enter
outsl
test
out
je
sub
inc
aad
mov
dec
push
jmp
pusha
push
cmp
push
popf
jo
scas
or
cmpsb
xchg
xchg
lret
loope
push
fimull
data16
push
imul
sub
aas
lods
pop
jmp
in
imul
lea
jl
iret
xor
out
mov
call
test
push
test
icebp
imul
inc
mov
loopne
cmp
push
inc
loope
mov
mov
jb
sbb
xor
lahf
je
xchg
pop
xchg
dec
out
mov
add
mov
insl
sub
sbb
rorb
mov
push
push
es
xchg
cmpsb
sub
jmp
ljmp
sub
xor
cmpsb
inc
dec
pop
pop
dec
jnp
sub
insl
mov
in
or
mov
cmp
pop
insl
mov
jno
in
or
in
sub
js
loop
inc
pop
jmp
and
dec
cmpsb
shr
cmpsb
notl
xlat
sub
outsb
push
push
jg
mov
add
repz
dec
adc
mov
hlt
or
in
shrl
cld
outsl
or
or
sub
cmpsl
jp
push
fildl
cmpsl
mov
in
or
jmp
sub
gs
repz
push
inc
test
mov
fcmovnu
cmp
test
in
pop
popa
sarb
jg
in
mov
pushf
mov
cli
incl
mov
jl
rolb
adc
mov
rorb
cwtl
shlb
xor
sub
test
pop
xchg
mov
shlb
sub
in
sti
xor
jmp
popa
cld
imul
dec
mov
mov
inc
push
sbb
imul
lock
test
xor
icebp
cltd
flds
pop
mov
cli
jne
sub
cld
cmpsb
aam
and
inc
imul
mov
imul
outsl
push
xor
jo
push
xchg
push
scas
jp
mov
fnstcw
ret
iret
jmp
jl
outsl
movsb
dec
pop
outsb
orb
loop
dec
xchg
imul
out
popf
push
push
fldenv
adc
repnz
cld
and
loopne
repnz
pop
mov
fiaddl
push
push
push
cmpsl
ret
mov
stc
mov
out
xor
outsl
push
pop
mov
cli
xchg
cs
fistpl
outsl
std
addr16
adc
pop
imul
ret
iret
jmp
int3
imul
ljmp
stc
xlat
fstpt
mov
andl
or
ror
sbb
or
cltd
int3
out
shrl
loop
sti
clc
xchg
sahf
and
stos
add
inc
fs
mov
int3
xchg
cltd
loopne
cmpsl
cltd
jle
cmpsb
mov
sub
or
xor
jb
add
mov
mov
gs
in
outsb
inc
js
insl
dec
or
js
rcll
push
dec
or
ret
in
gs
stc
jecxz
push
movl
push
sub
fbstp
lds
cmpsb
mov
loopne
iret
pusha
std
add
push
push
mov
lds
sbb
mov
mov
outsl
inc
pop
sbb
lods
in
sarb
mov
cmpsl
rorl
jg
pusha
imul
sbb
cmpsl
int3
imul
hlt
sub
cmp
js
aas
cmpsb
dec
fs
das
or
adc
cmp
or
pop
mov
mov
or
adc
dec
outsb
cmp
je
or
das
out
mov
out
fisttpll
inc
and
popa
pop
sub
fsubrp
dec
gs
imul
mov
dec
das
mov
jmp
movhlps
or
or
insl
lock
scas
dec
push
test
mov
out
je
pop
ret
aad
fwait
sbb
sbb
inc
xchg
daa
mov
cmp
xor
int3
ret
mul
mov
xchg
je
test
or
cmp
fildll
movsb
cmpsl
mov
mov
test
outsb
pop
test
and
dec
push
inc
mov
xor
es
adc
lret
or
add
rorb
xorb
adc
add
mov
popl
xchg
and
jg
outsl
das
jmp
je
jge
subl
push
stos
sub
mov
ljmp
mov
outsl
in
lret
je
push
imul
or
sub
jno
loope
mov
push
sbb
xchg
add
scas
mov
out
xor
dec
shll
in
sbb
daa
xchg
stc
cmp
mov
and
jl
daa
cld
xor
call
jmp
cwtl
loope
jmp
lock
pop
nop
xchg
outsb
pop
loop
sahf
shll
sbb
popl
pop
mov
popf
xchg
movsl
imul
lret
lahf
hlt
imul
or
jae
in
fdivrl
cmp
jmp
sti
jmp
and
and
adc
mov
cltd
ja
imul
aaa
repz
iret
call
loop
push
into
rcrl
mov
mov
out
test
adc
cli
ja
cwtl
mov
mov
add
and
jg
or
in
push
jb
cwtl
xchg
sub
mov
je
cmpsl
xchg
xchg
ret
lods
mov
shrl
mov
mov
lret
inc
xchg
imul
inc
sub
lods
fisttpll
jmp
addr16
mov
rclb
iret
pop
je
inc
lcall
mov
pop
loop
sub
cmp
fucom
ret
push
cmpsb
cli
jmp
jnp
cmpsb
xchg
arpl
sub
nop
mov
lock
adc
jns
push
sbb
shrb
in
fsubp
je
sbb
mov
adc
xor
pop
jg
mov
jae
push
repnz
adc
fsubrl
add
pop
ss
mov
xchg
loope
mov
fidivs
dec
push
dec
jge
std
addr16
jge
fldenv
test
popa
repnz
xor
daa
xchg
pop
aad
xchg
push
push
stc
jnp
addr16
and
and
add
jbe
or
mov
nop
cwtl
test
add
daa
xchg
mov
fstpl
push
in
lcall
cmpsb
lock
int
inc
in
pop
and
outsb
jle
outsb
out
cwtl
xchg
jmp
sub
outsl
leave
test
cmp
xor
sbbl
fs
inc
xor
mov
sbbl
aaa
inc
jle
or
push
or
sub
jecxz
insb
inc
lret
lahf
hlt
imul
mov
xor
xor
insl
adc
loope
shr
daa
jnp
je,pn
pop
mov
insb
fistpl
xchg
dec
jae
aad
lret
add
call
inc
into
xchg
insl
pop
lret
cltd
daa
mov
and
rol
inc
mov
cmp
mov
cmp
dec
sbb
lret
push
cmpsl
jo
dec
mov
push
mov
cs
or
adc
pop
arpl
jno
rcll
in
inc
outsb
sahf
xchg
jns,pn
iret
add
scas
xchg
push
stos
shrb
add
and
push
sbb
in
inc
xchg
hlt
insl
push
sbbb
mov
lcall
ret
aaa
mov
push
cmp
aaa
ja
push
jbe
push
or
dec
ja
cmp
mov
call
sbb
xor
mov
jmp
out
int
lret
ret
jle
dec
add
jg
push
mov
xchg
sub
inc
dec
sbb
into
in
jg
sub
push
sarl
inc
inc
dec
xor
jecxz
sub
mov
jp
pusha
pop
jns
aaa
adc
jns
imul
jge
in
or
dec
dec
insl
sub
and
cmpsb
pop
imul
jae
pop
jl
xor
lock
adc
mov
dec
jne
loop
dec
sbb
adc
dec
ljmp
push
mov
inc
dec
pop
lret
js
push
imulb
in
scas
rcll
imul
outsl
mov
jb
sahf
cs
inc
jbe
lcall
jne
mov
adc
add
lret
xor
push
xlat
mov
cmpsb
or
out
out
iret
cmp
jmp
mov
mov
outsl
push
inc
inc
cmp
xchg
sub
mov
movsb
outsl
mov
in
xchg
outsl
mov
imul
mov
out
pop
outsb
enter
dec
inc
and
loope
shl
jge
jl
cli
adc
mov
andb
jmp
cmpsl
inc
sub
push
pop
inc
xchg
enter
sub
stc
rcrb
push
cmpsl
cmpsb
fwait
xchg
push
aad
cli
and
in
jl
pop
dec
loopne
subb
push
jge
dec
fldlg2
hlt
imul
or
mov
shll
and
and
lock
dec
add
addr16
dec
shufps
mov
fisubrl
xor
popf
lret
ffree
jo
dec
jle
jle
cmpsb
pop
mov
sbb
dec
adc
sub
pop
ss
inc
sub
inc
mov
pop
in
sub
insl
jbe
repnz
xchg
push
sbb
inc
scas
enter
dec
enter
aad
aam
mov
leave
add
mov
insl
adc
rol
sahf
insl
lret
sbb
add
fwait
rcrb
stos
frstor
sub
out
aam
jmp
xchg
bound
movaps
sbb
fs
cmp
fmull
and
xchg
cmp
inc
insb
cmp
lcall
pop
cmp
or
movb
cltd
push
test
ja
push
jno
cmp
cmpsb
mov
loop
fildll
enter
fwait
cmp
xlat
ficompl
mov
ljmp
inc
pop
pop
and
aam
inc
aam
jecxz
cmp
or
aas
adc
mov
sahf
loope
scas
xchg
test
adc
mov
clc
dec
push
mov
xchg
in
inc
mov
add
insb
pushf
pop
addr16
stos
xchg
pop
aad
mov
loop
jbe
push
mov
outsb
mov
movsl
inc
pop
dec
jmp
add
fs
mov
mov
fsts
inc
lret
movsl
ja
fsub
pop
outsb
dec
int
fwait
mov
sub
push
sub
daa
adc
cmpsb
jle
jmp
pusha
mov
xchg
std
test
inc
lock
fcoms
push
pop
dec
sarl
loope
dec
movsb
jo
mov
sahf
ds
ret
std
and
jnp
sub
fmulp
xchg
pop
sub
in
es
cmpsb
aas
outsb
fiaddl
out
loop
es
loop
xor
adc
pop
cmp
adc
in
xor
lock
stos
xor
sub
xor
icebp
ret
int3
cwtl
lea
rcrl
xor
imul
push
and
dec
add
lret
and
ret
dec
and
fwait
in
jmp
pop
sbb
in
icebp
mov
outsl
ficoml
push
sub
jb
add
ficoml
dec
jb
jmp
add
test
add
add
sub
insb
loope
xor
lods
xchg
arpl
stos
sahf
pop
pop
jmp
lahf
mov
mov
out
adc
out
cmc
shll
mov
pop
xchg
inc
cmc
jmp
jmp
scas
fisttpl
out
push
xchg
inc
call
push
jmp
scas
mov
xchg
xchg
enter
cmp
push
pop
mov
push
push
popa
push
inc
mov
loop
loopne
popf
dec
mov
cli
jno
xchg
enter
lods
fmull
insb
xor
xor
sbb
dec
es
mov
roll
mov
fadd
jge
add
aas
jb
xor
shlb
stc
enter
cwtl
sub
cmpl
mov
pop
mov
mov
es
flds
xor
testl
or
fs
bound
lock
cli
in
data16
adcb
ret
sub
dec
rorl
aad
cmp
push
sub
push
sbb
icebp
aaa
dec
fstl
fimull
or
dec
lret
ja
and
stc
or
dec
jnp
and
sbb
outsb
ja
push
loopne
mov
jl
test
adc
mov
addr16
mov
mov
ret
pop
sbbl
pop
or
and
lods
cmpb
mov
addr16
xchg
movsb
inc
mov
das
test
fsubr
inc
sbb
fmuls
shll
data16
mov
push
pusha
aad
lret
stos
jo
ret
pop
fwait
adc
cmpsl
das
in
das
test
fdivs
cmpsl
adc
lcall
imul
dec
dec
insb
hlt
jl
xchg
in
push
jmp
inc
inc
out
and
mov
or
cmp
scas
mov
out
pop
pushf
push
rolb
mov
ja
jae
clc
mov
das
cmp
sub
adc
dec
cmp
addr16
mov
push
sub
fwait
je
sbb
xchg
insb
lods
lret
aas
inc
cs
xor
mov
je
xor
and
adc
and
mov
out
call
mov
sbb
cmp
arpl
loop
and
int3
outsl
mov
out
sub
les
pop
xchg
test
push
push
into
test
add
rorl
xor
jecxz
cmp
sbb
sub
mov
inc
cltd
jo
pop
dec
insl
les
ljmp
adc
out
test
loope
jmp
ds
jg
call
imul
daa
data16
inc
mov
leave
lock
jns
pusha
jno
loop
leave
fucom
stos
popa
cwtl
ljmp
inc
dec
adc
and
push
sub
and
pop
jl
mov
push
imul
out
mov
push
jnp
lea
insb
imul
loopne
add
cli
jg
stc
mov
inc
mov
out
pusha
pushl
lods
push
xor
add
repnz
in
hlt
push
je
and
lcall
inc
or
ljmp
push
add
outsb
addr16
int3
inc
cld
sbbl
ret
loopne
cmpsb
push
fsubrl
mov
pop
cwtl
xor
iret
push
or
pop
or
into
lock
addr16
insl
xor
into
xchg
pop
repnz
push
push
insl
fisubrl
arpl
nop
pusha
enter
jg
rcrb
lock
push
and
insl
adc
in
stos
sahf
and
fidivrs
sub
dec
push
sbb
inc
fsubr
in
cli
daa
out
fsubp
pop
loopw
xlat
pop
repnz
dec
sub
xor
arpl
jne
outsb
loop
sbb
mov
mov
add
jecxz
call
pop
push
clc
sub
popf
add
out
jne
cmp
addr16
ljmp
negl
cld
adc
loope
push
ds
lods
test
push
or
adc
outsl
scas
jo
mov
testb
push
orb
int3
out
pop
jbe
and
pop
outsb
test
popf
jl
inc
enter
out
imul
setne
lds
loopne
cmp
stos
xor
rorb
test
imul
ljmp
addb
inc
imul
imul
add
cmp
xchg
popf
sti
outsl
add
scas
out
sbb
outsb
orl
inc
insl
stos
xor
loop
dec
bound
js
mov
mov
sub
mov
les
fsubl
sub
lcall
xchg
dec
loop
and
iret
dec
pusha
mov
bound
cmp
push
or
jmp
and
or
inc
in
lods
subl
cwtl
inc
xor
in
les
fs
loop
or
pop
rcll
xchg
jge
in
mov
out
arpl
je
dec
in
insb
jne
test
and
mov
ss
fmull
jmp
in
inc
shl
mov
mov
dec
lock
xchg
inc
gs
fsts
push
sub
and
add
mov
es
xchg
bound
out
es
hlt
sbb
das
outsl
bound
sub
or
cmp
sub
movsl
addr16
aaa
loope
js
pop
in
test
inc
out
dec
jo
daa
jb
loope
adc
hlt
out
inc
mov
cmp
out
mov
add
mov
mov
cmp
sarl
and
or
add
out
inc
lcall
addl
popf
dec
daa
or
enter
inc
rol
xor
cmp
out
call
sub
ljmp
xor
pop
divl
dec
adc
fistpll
stc
fists
push
repnz
cwtl
out
out
ja
mov
test
mov
pop
push
inc
aaa
pop
fmul
imul
dec
insl
add
pusha
incl
inc
sub
cwtl
jmp
test
push
mov
cmpsb
push
es
add
fadd
cmc
mov
add
adc
push
dec
mov
test
or
fsubl
outsl
imul
fildll
mov
xor
jl
arpl
cmp
scas
push
or
scas
or
dec
adc
inc
add
and
loop
das
ficoms
das
mov
push
push
or
test
sub
nop
jl
orb
lret
and
insl
sub
rorl
jmp
pop
frstor
incb
dec
cmp
push
mov
fistps
inc
mov
fs
je
int3
ljmp
push
push
scas
in
adc
notl
testb
xchg
dec
mov
dec
add
push
cmp
jne
fimull
jmp
xor
mov
jnp
loope
inc
dec
aas
or
cmp
into
push
outsl
lds
ficoms
jmp
cmpsb
add
enter
jbe
push
icebp
ret
fildll
test
inc
push
jmp
cmpl
add
xchg
shll
pop
sub
or
movsl
add
add
out
pusha
shrb
pushf
es
mov
or
fs
mov
mov
je
inc
pushf
add
xchg
out
outsb
je
wrmsr
add
xchg
ret
lock
push
cmpsl
addr16
pusha
xchg
inc
sti
or
adc
idiv
mov
push
testl
pop
cmp
es
loop
sbb
adc
xor
xor
hlt
sbb
mov
jg
mov
lock
into
cmc
enter
insb
out
into
pushf
mov
insl
pop
jae
mov
xchg
clc
ljmp
push
xor
out
cmpsb
addr16
dec
mov
adc
nop
dec
test
sub
sub
mov
fisubrs
add
add
and
sbb
mov
movsl
and
mov
testb
ljmp
cmc
jno
cmc
jae
xchg
arpl
stos
pop
xchg
cmc
lret
out
sbb
jno
sub
cmp
das
add
or
rcrb
lock
pop
imul
in
xor
bound
call
inc
or
xor
popf
jg
loopne
mov
and
mov
pop
push
fiadds
xchg
inc
mov
cmp
add
or
sub
mov
xchg
jl
sbb
bound
ja
inc
mov
jbe
fdivrs
cs
mov
or
jl
stc
cltd
popf
cmp
arpl
or
int3
pop
insl
out
addl
fld1
jge
mov
shll
test
fnop
std
jle
mov
push
das
xor
inc
xchg
dec
out
loop
outsl
shlb
popa
or
outsl
jg
pop
adc
inc
sti
push
inc
sahf
jae
lds
lahf
outsl
outsb
unpcklps
pop
cli
into
sub
adc
push
or
or
outsl
jne
lods
and
movsb
xchg
jnp
xchg
das
loop
bound
and
xchg
int
cmc
push
insl
mov
insl
pop
mov
add
dec
out
jae
popa
adc
adc
or
dec
sub
dec
xchg
cltd
push
sahf
int
cmp
sub
je
cmp
mov
bound
xchg
sub
xor
sbb
iret
pop
int
cmpsb
lret
add
sarl
add
mov
jne
addr16
int
adc
pop
fucom
push
dec
jae
mov
jecxz
xchg
jg
loop
cltd
push
cmp
mov
das
outsb
loop
push
ret
mov
mov
pop
cltd
out
je
cmpsl
jo
nop
pop
mov
xor
cmc
rcll
rcrb
js
mov
or
push
dec
sahf
push
mov
pop
fs
dec
arpl
pop
movsb
jecxz
loop
and
adc
adc
inc
xor
mov
push
add
dec
dec
inc
mov
stos
jb
pop
hlt
sub
in
cld
inc
scas
test
push
push
imul
mov
jnp
push
ljmp
imul
ljmp
dec
adc
out
inc
sub
lret
jg
insb
push
jle
out
je
aaa
jecxz
cmpl
jge
sbb
mov
adc
leave
dec
sbb
inc
fbstp
hlt
add
sub
inc
insb
ret
and
mov
or
arpl
notl
je
fs
dec
js
adc
mov
cmpsl
pop
test
rcrb
pop
out
cs
in
insl
inc
into
movl
add
adc
in
loop
xchg
pop
pop
shrl
mov
sbb
jl
inc
pop
dec
or
roll
js
cli
sub
je
xor
pmulhuw
pop
adc
sub
mov
cwtl
popa
jmp
adc
dec
popf
mov
in
cmp
xor
xor
shr
push
imul
call
xchg
pop
inc
sbb
push
xor
push
and
repnz
xor
rorl
ljmp
inc
out
out
jg
inc
shr
sub
loope
jnp
incb
shlb
testb
repz
ficoml
addr16
scas
out
and
rolb
push
xchg
loope
mov
sbb
rolb
outsl
leave
movsl
sti
ds
mov
call
stc
xlat
adc
fwait
mov
adc
out
mov
pop
addr16
or
test
adc
xchg
int3
ret
fisttps
sub
mov
jmp
popl
leave
xchg
jecxz
pop
or
aam
out
fldt
daa
sbb
sbb
bound
sbb
inc
std
movsl
aad
and
rcll
daa
rolb
popf
cmp
pop
adc
add
mov
subl
sub
jp
hlt
mov
add
dec
sarb
adc
mov
cmpsl
cmpsl
mov
inc
mov
shrl
xor
imull
xchg
int3
enter
insl
fstps
movsl
xchg
sahf
jne
jp
fcmovb
or
adc
sbb
sub
jb
push
jecxz
push
pop
inc
jmp
test
or
insb
shll
arpl
cmp
cmp
addr16
shr
sub
bswap
divb
xchg
div
mov
adc
sub
xchg
or
add
xchg
sahf
jge
xor
jg
sub
fsubrs
cmp
jg
jmp
les
add
jmp
call
sub
outsl
push
subb
outsb
and
jo
test
push
out
and
sub
stc
xchg
xchg
aas
adc
ds
dec
jno
daa
scas
xchg
loopne
cmp
push
jge
imul
iret
add
jmp
xor
mov
faddl
sub
dec
aam
and
and
push
loop
mov
sub
lods
or
dec
mov
jle
push
mov
stc
xchg
cld
adc
and
push
push
popa
daa
pop
xchg
and
rcrb
mov
fsubl
scas
hlt
insl
je
xchg
je
fs
xor
jb
daa
out
or
lret
push
mov
testb
scas
sub
mov
push
out
int
add
pop
test
out
xchg
repz
mov
ficoms
aaa
pop
cmp
jmp
popf
sbb
mov
je
inc
xlat
mov
lret
mov
mov
cmp
loope
add
xor
enter
cli
clc
add
inc
xor
into
fs
xchg
or
inc
add
aaa
cwtl
enter
scas
fdivl
mov
cmp
xchg
mov
daa
cmc
mov
inc
inc
repnz
dec
or
push
push
mov
popl
pop
arpl
mov
push
lret
jns
mov
ja
gs
mov
adc
push
jle
inc
inc
push
xor
outsl
xor
sub
data16
pop
leave
scas
or
inc
dec
mov
inc
mov
jg
and
icebp
cltd
fisttps
push
cwtl
insb
jne
mov
xchg
xor
orb
jle
daa
lea
mov
cmc
cltd
pushf
lret
and
xchg
push
insb
jmp
clc
inc
scas
cmpsb
daa
cmp
or
mov
imul
dec
insb
inc
lret
sbb
aaa
xor
lods
imul
cmpsl
mov
push
rcrl
out
mov
test
out
std
mov
je
mov
test
std
inc
out
xchg
jmp
or
imul
int3
std
push
adc
xchg
pop
sbb
inc
mov
loop
sub
sbb
push
aaa
xchg
or
jae
or
jmp
rcll
mov
xor
and
leave
test
daa
cli
stos
cmpsl
mov
and
dec
pushf
dec
mov
movsb
in
out
xchg
jno
or
xchg
orb
jns
add
add
push
cmp
jge
dec
jmp
scas
ret
jae
aas
or
push
lds
push
mov
and
rcll
cmc
imul
les
ja
adc
mov
rcl
cmp
jp
aaa
enter
movsb
insb
or
dec
or
jns
xchg
ret
cmp
adc
jmp
insl
sub
insl
imul
xor
push
sbb
pop
imul
mov
enter
pop
test
idivb
or
aad
test
imul
lds
dec
lock
insl
xchg
leave
xchg
xor
pop
xchg
jo
and
je
sbb
pop
jb
push
jmp
cmpsb
filds
stc
je
hlt
push
cwtl
sbb
movsl
outsl
push
clc
ret
jbe
mov
xchg
xchg
mov
xchg
cltd
fwait
xchg
std
jns
sub
inc
mov
xor
stc
xor
aam
popf
xchg
push
std
ret
inc
jmp
or
jle
aam
xchg
jbe
lock
xlat
hlt
and
xor
or
adc
fbld
insl
call
jmp
mov
iret
test
clc
add
test
dec
or
js
xor
xor
sbb
dec
into
jg
cmp
test
hlt
inc
cli
jo
mov
je
decl
mov
xor
jp
adc
mov
insb
jbe
lcall
mov
es
push
xchg
mov
cltd
mov
jg
shrb
cmpsb
jbe
adc
inc
popa
inc
push
das
or
popa
dec
dec
imul
mov
mov
inc
iret
je
mov
insl
daa
jmp
leave
lahf
scas
daa
push
dec
sbb
test
dec
cmp
movsl
pop
test
mov
mov
shl
pop
call
mov
cwtl
sti
std
push
bound
shll
test
les
js
mov
lds
aas
xchg
inc
mov
nop
out
and
out
test
in
mov
push
xchg
int3
xor
stos
sti
adc
imul
daa
or
shlb
scas
ss
mov
cs
imul
add
mov
sub
adc
imul
in
add
pushf
test
xchg
fwait
ror
jns
xchg
addr16
cmpsb
outsl
jg
movsl
mov
xor
add
or
pop
jecxz
out
push
xchg
imul
cmpsl
mov
mov
je
ss
mov
in
rol
rclb
jmp
int3
xchg
fbld
push
add
inc
dec
popa
push
jo
jl
or
sub
dec
inc
pop
xor
xor
pop
mov
push
popa
lret
pop
arpl
movsl
ds
je
shll
mov
lahf
dec
or
sub
movsl
sub
movsl
movsb
jmp
lds
imul
xchg
and
out
loope
sub
and
je
test
mov
cmc
addl
leave
add
push
mov
fldt
xchg
adc
pop
sarl
dec
sbb
insb
mov
cmp
or
adc
out
xchg
data16
sub
add
ret
shrl
jp
pop
and
arpl
dec
stos
push
imul
aaa
cwtl
stos
out
das
or
fbld
push
mov
movsl
mov
leave
push
xor
pusha
or
push
adc
xor
popa
sub
repnz
sub
outsb
push
insb
int3
sahf
xchg
roll
je
movsl
gs
loopne
nop
stos
xchg
xchg
fcom
push
enter
fwait
add
or
je
cmpsb
jmp
loop
sub
mov
mov
outsl
in
imul
aam
addr16
outsb
inc
or
daa
filds
inc
addl
dec
fistpl
test
xor
jmp
jo
push
adc
cltd
xchg
test
ljmp
xchg
out
push
lea
stos
mov
je
das
aad
jbe
test
clc
inc
and
daa
mov
aad
loopne
enter
jp
pop
in
xorb
negb
in
pushf
ret
pop
xor
dec
and
lock
daa
lds
and
test
xor
int
jp
lret
xchg
sub
fwait
cmpb
mov
pop
xor
outsb
inc
and
pusha
push
xchg
xor
and
lds
pop
outsb
xor
mov
inc
rorb
arpl
xchg
and
mov
inc
xchg
sub
dec
mov
subb
divl
adc
scas
sti
loope
lock
jnp
or
mov
out
or
outsl
xor
roll
xor
xchg
outsb
inc
fdivs
push
sub
gs
add
and
jno
push
sti
aad
xchg
test
ret
das
loop
mov
test
xchg
addb
loope
lods
mov
jl
sbb
sub
pop
imul
mov
jmp
aam
mov
out
lea
add
vpcmpeqd
test
movsl
stos
jns
inc
inc
push
add
jne
inc
addr16
scas
insl
sub
jl
mov
insb
daa
scas
rcl
push
jne
cmp
imul
rclb
iret
insl
mov
shll
test
jge
insl
test
inc
cld
xchg
xor
insb
sbbb
cmpsb
jmp
cmp
inc
push
jg
jo
mov
sub
movsl
or
imul
ficoml
and
outsb
ds
xchg
pop
outsl
rorl
jecxz
adc
repnz
jo
fwait
lods
adc
mov
push
xor
fimuls
push
arpl
loopne
pop
or
cld
sbb
outsl
xchg
inc
filds
call
sbb
cmpsl
lods
addr16
cmp
sub
sub
cmpsl
cltd
decl
pandn
insl
dec
sub
daa
push
je
push
add
adc
push
lret
xchg
das
in
mov
mov
test
out
aad
pop
in
fs
jmp
sub
push
inc
in
jge
aaa
mov
enter
and
out
mov
movl
push
enter
sub
rcrl
in
in
mov
sbb
cltd
arpl
add
gs
push
push
jg
adc
sub
imul
mov
mov
insl
ret
pop
mov
xchg
xchg
test
xchg
or
ljmp
or
mov
das
xchg
daa
add
sbb
je
push
shl
or
lret
gs
mov
jae
mov
jmp
fistpll
xchg
mov
cmp
jb
imul
out
or
adc
shlb
xchg
loope
lcall
xchg
out
mov
adc
imul
pop
jmp
movsl
sbb
jns
push
lods
xlat
cmp
xchg
jg
aaa
test
mov
in
push
mov
in
int
data16
or
les
fsub
rol
je
shrl
cmpsl
cs
imul
sbb
mov
xor
push
outsb
vmaxsd
cmp
push
cmpsb
cmp
sahf
je
std
jge
loope
shlb
jo
sbb
loopnew
and
out
cmp
cmp
movsl
ja
loop
nop
cmp
inc
jo
cltd
pop
dec
mov
lock
shll
in
mov
mov
cmp
ret
xor
mov
cmp
out
dec
sub
negl
out
pop
mov
test
or
push
sub
jns
jns
fldenv
int3
test
imulb
or
push
ret
sub
addr16
mov
xor
daa
mov
adc
insl
ja
adc
pop
insb
cmp
hlt
xor
push
jno
pop
xor
push
es
jne
jmp
cmp
lret
push
scas
test
cmp
cli
jb
ja
mov
not
je
xchg
mov
pushf
or
icebp
jno
jo
cmpsl
xchg
fdivrl
inc
scas
or
pop
mov
insb
fwait
xchg
jno
int
or
aad
inc
into
mov
cmp
int
mov
push
mov
insl
fcoms
mov
jge
loopnew
adc
loope
andb
mov
add
loop
add
sbb
and
das
dec
sub
adc
inc
lea
push
faddl
das
outsl
cmp
movsb
fldl
pop
xchg
jno
mov
gs
push
pop
mov
xchg
xor
dec
clc
jg
lock
add
movl
sbb
sub
xchg
scas
push
and
bound
loopne
incl
ljmp
in
pop
inc
cmpsb
xchg
test
iret
lcall
jle
out
in
mov
adc
dec
push
pop
in
repz
test
cs
mull
adcb
das
imul
nop
pop
xchg
pop
repz
imul
inc
in
movsl
lds
mov
into
mov
lods
jne
mov
mov
xor
leave
call
out
aad
mov
test
loop
xor
inc
sub
mov
mov
out
push
imul
mov
pop
jge
inc
mov
es
mov
or
nop
je
adc
out
xor
imul
jae
push
mov
mov
stos
or
mov
movsl
pop
jmp
cld
mov
ljmp
cmpsl
insl
shll
and
mov
lcall
aam
imul
adc
adc
push
js
pusha
jecxz
jb
insb
lahf
mov
insb
pop
push
cld
xor
mov
or
push
pusha
imul
push
out
cmp
push
cmp
mov
rcr
cmp
in
add
out
sub
popa
lods
ret
sub
sbb
xchg
mov
cmp
cs
roll
mov
xorl
dec
cmp
ljmp
aad
scas
outsl
in
mov
xchg
inc
in
add
filds
pop
add
jp
cmp
cs
mov
fmul
call
cmp
jl
jmp
cmp
cltd
sub
mov
insb
inc
pop
iret
push
xor
cmp
cwtl
adc
jmp
mov
fisttpll
aam
into
lcall
lcall
jmp
pop
pusha
push
int3
and
push
arpl
or
dec
sti
cmpl
sbb
push
cmc
jl
rorl
dec
and
cmc
xchg
inc
shrb
shl
test
aam
std
enter
jno
xchg
pop
outsl
in
adc
adc
xchg
loop
dec
scas
and
test
mov
inc
movsb
push
jge
sub
dec
add
aas
jl
ret
in
adc
clc
bound
ss
data16
add
sbb
xlat
add
cltd
jmp
dec
test
inc
xchg
xchg
xor
dec
sub
scas
in
out
fldcw
mov
and
aad
push
fadd
mov
and
loopne
mov
jns
pop
shll
or
cmp
ss
or
addr16
repz
xor
ret
lods
outsl
xchg
push
insl
push
mov
cmpb
xchg
movsl
test
inc
test
xchg
push
or
daa
test
add
push
lods
lret
sar
adc
shl
cmpsb
aaa
pop
test
xlat
loop
mov
fbld
mov
sub
popf
mov
pop
adc
and
fildll
and
fiadds
adc
xchg
mov
push
sbb
lret
push
xchg
cmp
ja,pt
mov
and
mov
testl
out
fsubs
xchg
outsl
aas
sbb
jle
clc
sub
mov
out
cmp
sahf
call
das
je
lea
pop
xor
xchg
dec
addl
out
dec
lock
or
sub
cmp
cmp
dec
adc
cmpsb
outsl
out
in
mov
call
inc
xlat
adc
jb
xor
out
xor
test
jns
cmp
divl
inc
mov
std
lods
mov
dec
out
loope
daa
or
adc
shll
call
outsb
in
movb
or
insl
pop
je
std
or
mov
aaa
loope
ret
pop
test
lock
mov
cmp
in
out
repnz
popf
out
addr16
adc
loop
xor
lea
lcall
mov
mov
es
ret
inc
mov
lods
insb
inc
push
iret
out
cmp
imul
mov
decl
sbb
mov
iret
insl
mov
xchg
mov
adc
dec
sub
popa
jo
ret
xchg
pop
inc
adc
sarl
jmp
mov
jg
aas
lock
fcoms
push
cmp
xadd
dec
in
jecxz
cmpl
insl
xchg
and
int3
lea
mov
dec
push
and
sahf
aad
push
mov
mov
aad
testb
mov
push
dec
es
mov
lcall
loopne
lods
in
sbb
insl
and
add
aaa
sarb
sub
cmp
rcrb
dec
fs
jg
fdivr
test
jnp
fs
xor
jo
cs
add
sbb
jae
dec
or
and
loop
imul
fs
test
or
hlt
add
or
insb
jbe
fcoml
repnz
adc
mov
jle
aam
pusha
jecxz
out
cmp
xchg
dec
sbb
outsl
sub
mov
cmc
or
dec
push
sbb
adc
loopne
repz
je
in
xchg
xchg
testb
mov
inc
out
mov
scas
int3
and
int3
out
cmp
std
push
jnp
cs
imul
cmp
dec
sbb
adc
in
insl
mov
add
jb
xchg
sub
and
add
mov
cmp
addr16
lret
push
decb
xchg
push
mov
lock
xlat
push
add
jo
aaa
adcb
into
int3
aad
xchg
outsb
push
dec
je
pop
adc
mov
xor
je
outsb
in
push
testb
jno
sti
adc
jmp
leave
pop
sbb
dec
or
jmp
xchg
loope
push
push
jae
jo
cmc
or
dec
rorl
sbb
adc
rcrl
dec
jg
cltd
jo
pusha
jb
xlat
cmpsl
daa
das
imul
shl
je,pt
mov
push
mov
dec
jo
je
test
add
dec
insb
inc
je
cmp
packssdw
sub
push
sub
pusha
xor
or
cmp
dec
add
out
iret
leave
cmp
addr16
out
adc
ja
or
cmp
call
dec
lods
fs
sbb
and
or
jp
ret
scas
rolb
shll
dec
pop
add
dec
out
push
out
mov
cmp
push
jae
push
cltd
add
mov
mov
push
push
cmc
pop
repnz
insb
jle
pushf
fldt
xchg
into
pop
arpl
xor
add
dec
movsl
in
add
or
hlt
outsb
xchg
sbb
scas
sub
dec
sub
push
sbb
scas
in
xor
xchg
mov
popf
xchg
das
insl
clc
adc
dec
lds
lods
dec
adc
paddd
and
outsl
test
dec
fimuls
sbb
push
leave
jnp
jp
adc
dec
adc
xor
push
push
mov
mov
lsl
or
dec
pushf
unpcklps
js
lds
mov
dec
jo
shlb
dec
ss
mov
das
xchg
jo
repnz
pop
je
insb
push
xorb
out
jns
sahf
mov
outsb
xor
stos
cmc
jmp
jl
adc
loopne
outsl
jmp
add
dec
mov
not
inc
mov
dec
add
shr
clc
mov
sub
lock
ret
pop
cmp
mov
cmc
shll
adc
mov
push
adc
imul
xor
inc
jge
mov
sub
jge
arpl
inc
insl
repz
mov
xor
push
shlb
pushf
shrb
jp
xor
mov
mov
sbb
cmc
jmp
xchg
cs
adc
test
inc
or
out
shlb
jo
mov
sbb
and
push
jbe
dec
push
out
scas
rclb
jge
fwait
or
jge
xor
adc
sbb
and
sbb
lods
dec
jo,pn
xor
mov
add
movsl
xchg
jge
push
call
or
sbb
imul
int3
out
into
movb
pop
lahf
xor
out
inc
mov
aad
add
xor
lret
adc
add
int3
mov
inc
mull
rorl
xor
push
jl
pusha
mov
push
repz
rcll
loope
dec
pushf
shr
mov
cmp
jne
sbb
mov
push
adc
jne
jg
mov
push
sub
hlt
scas
jmp
inc
imul
out
inc
mov
xchg
push
mov
mov
push
inc
ljmp
rclb
shll
inc
cltd
pop
icebp
call
adc
popa
xlat
loopne
xor
push
mov
cmp
imul
pop
pop
cmp
lock
push
xchg
cmp
icebp
sub
pop
loope
or
dec
fcmovu
or
xor
or
adc
in
sub
call
das
ljmp
call
jge
repz
cmpsb
shlb
daa
adcb
xor
mov
dec
out
or
lods
add
push
out
xor
hlt
and
out
jmp
xorb
sbb
sub
jo
jo
cwtl
into
sub
cmpsl
int3
cmpsb
xchg
and
imul
outsl
out
sub
inc
mov
dec
push
sahf
mov
mov
popa
insl
test
repz
pop
fidivl
adc
dec
insl
popa
or
iret
loopne
sub
or
push
inc
inc
out
popa
xchg
sub
push
data16
je
push
mov
cmp
repz
mov
push
test
std
int3
mov
sub
mov
sahf
pcmpgtw
jg
push
fs
sbb
dec
icebp
ficoml
dec
fs
cs
push
push
sahf
dec
push
push
cmp
cwtl
ljmp
out
js
out
sub
jecxz
dec
sub
shll
and
gs
shlb
nop
into
jg
clc
stos
nop
mov
add
aad
into
or
push
add
in
mov
sub
push
in
popa
aas
cwtl
rol
in
popa
jl
js
jl
sti
pop
loopne
pusha
fbstp
adc
mov
rorl
push
in
xor
loopne
mov
imul
cmc
scas
les
and
outsb
jle
insl
ds
dec
fs
das
jge
jmp
sar
dec
test
or
inc
call
sti
das
xor
outsb
cli
ljmp
jp
push
push
mov
outsl
xchg
mov
dec
les
nop
repnz
mov
rcrb
add
pop
int
repz
dec
cmp
mov
out
cltd
rcrb
jmp
pop
or
je
insb
xchg
cmp
lret
mov
shlb
call
fs
and
fnsave
test
daa
shr
lds
jge
pusha
mov
push
sub
jno
mov
push
xor
pushf
shll
cmpsl
out
mov
xor
loop
shr
add
pop
mov
jge
xchg
movb
add
push
inc
or
dec
add
flds
xor
call
int
fcomip
lods
call
ret
int3
addr16
xor
into
and
fdivp
in
bound
xchg
jl
jne
dec
sbb
mov
ret
imul
xchg
out
adc
rclb
or
mov
fdivs
push
adc
cli
lds
add
in
xor
jmp
sbb
cli
cmpsb
sub
insb
fildll
push
mov
fwait
xor
aaa
and
rcll
jmp
sub
sub
out
lahf
out
addr16
inc
lret
divl
test
xor
jl
jl
enter
push
cmpsl
sub
xchg
sti
in
shlb
cmp
scas
insl
lret
cli
shll
jae
and
out
pop
fwait
and
or
cmp
xor
sti
ret
dec
cltd
jg
loop
fs
adcb
sub
test
sbb
fwait
negl
adc
lods
fs
cmp
inc
lock
fs
cmp
push
outsb
jno
or
jg
sub
mov
jge
sub
xor
jl
call
gs
loop
xor
jl
fs
fwait
addr16
mov
in
pop
push
push
cmp
mov
loopne
inc
cmp
push
insb
sbb
loope
enter
mov
xchg
out
jge
imul
xchg
pop
push
rcl
sub
enter
das
out
rcll
test
or
adc
enter
dec
adc
dec
loopne
sub
mov
je
aas
call
inc
je
cmp
test
xor
or
rorl
xor
loop
sbb
ja
pop
daa
je
pop
das
lcall
jae
jo
lock
je
xchg
mov
fildll
aam
xchg
mov
dec
ljmp
test
jne
inc
cmpsb
and
jge
jbe
inc
adc
sub
push
loope
test
cmpsl
cmp
insl
call
stc
xor
pop
ss
cwtl
test
rclb
jns
pop
sub
scas
xchg
xor
inc
add
je
cltd
push
js
ja
js
sub
mov
sarl
push
cwtl
dec
pushf
andl
in
dec
inc
xchg
es
sub
jb
add
lock
fsubs
or
inc
cs
je
loopne
cmpb
jnp
cwtl
or
pop
jle
fcompl
cmpsl
leave
int3
loop
sub
lock
jb
jae
ljmp
pop
outsb
xchg
hlt
add
jmp
arpl
mov
sbb
mov
or
fabs
dec
insl
jecxz
xchg
ljmp
popa
int3
dec
adc
cmpsl
rorl
mov
pop
aad
outsl
icebp
testb
rol
scas
dec
xor
stc
mov
shll
dec
jmp
dec
ficoml
xor
rclb
xchg
mov
cmpsb
mov
push
cld
push
imulb
test
inc
call
inc
dec
iret
mov
sbb
mov
insb
xchg
std
stc
insb
je
cs
stc
jo
scas
mov
push
inc
dec
outsb
jbe
int
test
add
fstps
add
popa
fimuls
std
cmp
mov
aaa
enter
insb
jle
stc
push
add
sub
push
aad
scas
mov
stc
or
rcrb
das
shll
jp
sbb
fcomps
shrb
scas
xor
jg
dec
insl
or
int
jb
pop
sbb
sahf
daa
sarl
fucomip
out
loopne
sub
cli
inc
mov
imul
mov
jle
pusha
mov
fidivs
xchg
pop
jbe
movsb
pop
add
out
movsl
mov
ret
movsb
dec
add
repz
data16
inc
push
int3
lds
andb
or
jno
or
push
push
fisttps
lret
or
das
int3
mov
push
jle
cmp
jne
in
xchg
out
test
cmpsb
sbb
int3
test
mov
xchg
xor
mov
jecxz
adc
hlt
test
loop
cmc
adc
icebp
add
cwtl
sub
fists
fcoml
push
push
pop
sbb
push
lods
inc
outsl
push
sbb
and
jo
push
fcmovnbe
sub
adc
and
sub
cmp
pusha
push
es
push
mov
repz
inc
lahf
adc
sbb
into
insl
fcoml
cwtl
sahf
xchg
jmp
xchg
cmpsl
push
jge
iret
dec
shlb
and
push
or
mov
jl
mov
gs
or
loop
mov
xor
xchg
out
adc
cmp
shr
push
lret
inc
push
rcrl
sbb
ljmp
jne
insb
xchg
sub
fisttps
jp
push
cs
sbb
int3
sbb
mov
xchg
add
adc
mov
inc
cwtl
or
add
push
sar
pop
xchg
mov
outsl
mov
pop
test
cmp
lret
movsl
xchg
push
push
pushf
test
and
je
int3
out
add
add
inc
push
shrl
lods
ljmp
mov
cmp
and
xchg
jp
aad
fsubrs
mov
mov
movsl
adc
out
add
xchg
test
jo
mov
cs
popa
pop
xchg
adcl
mov
out
push
push
in
test
sbb
fwait
pop
adc
cmp
mov
mov
movsl
xchg
icebp
movsl
sbb
shll
int3
xchg
cltd
ljmp
inc
xorb
lret
add
or
cld
cmp
je
pop
pop
or
loope
pop
cmp
scas
adc
cmp
repnz
adc
outsb
push
lcall
imul
dec
mov
aas
xor
pop
ret
xchg
fildll
inc
mov
nop
mov
inc
cmc
fsubl
mov
dec
jl
aam
or
cld
shll
jp
xchg
aad
add
shll
adc
add
call
inc
lret
int3
outsb
arpl
cmpsb
and
imul
enter
es
sub
shr
jne
bound
fucom
sub
mov
or
jecxz
in
jns
xor
fsubrl
lods
scas
popf
int3
fs
jge
cmp
xchg
ficompl
sbb
insb
out
enter
cmp
cmp
sub
test
inc
out
addr16
xchg
sbb
fwait
addr16
jp
repz
and
xchg
in
call
sub
inc
xchg
call
inc
insb
xchg
pop
test
mov
fadds
popf
cld
jmp
ror
pop
out
loope
inc
xchg
inc
cli
cmp
and
inc
sub
lret
push
ret
repnz
aas
dec
in
jb
dec
sbb
dec
outsl
loope
xor
ss
aaa
orb
mov
sub
push
inc
mov
bound
jl
jb,pt
mov
push
fwait
mov
ja
repnz
mov
in
xchg
pop
sub
xchg
or
sub
mov
iret
sbb
push
and
xchg
mov
inc
pop
call
or
xor
call
aas
cmpsb
dec
mov
or
sub
insl
arpl
adc
or
pop
push
cmpsl
into
decl
test
mov
cld
outsb
pop
xchg
fwait
cmc
aas
inc
or
ds
cs
mov
outsb
call
lahf
data16
dec
loopne
mov
test
add
inc
daa
xchg
push
je
movsl
mov
sub
into
add
and
push
inc
scas
jne
and
xchg
cmp
push
int
fs
mov
in
mov
or
xchg
int3
inc
gs
stc
mov
push
sti
orb
loop
mov
aaa
cmp
cmpb
rcrl
xchg
xor
es
xlat
pop
add
add
int3
xorl
cmp
fsubrs
push
push
lock
xor
sbb
lret
sub
outsl
icebp
xchg
pop
mov
pusha
fistl
das
sbb
rclb
mov
cmp
jo
inc
push
repz
pop
or
es
pop
pop
lret
sbb
sub
cmp
xchg
and
mov
ds
addr16
out
aad
mov
std
fisubrs
fucomip
push
or
jg
push
cltd
fistps
ljmp
lods
mov
or
testl
push
and
in
shll
cltd
mov
incl
sahf
jbe
fnstenv
push
addr16
jbe
addr16
out
movsl
pop
jo
dec
sarl
rclb
cmp
jecxz
out
cmpsl
popa
cmp
dec
xchg
test
test
mov
pop
push
lret
inc
daa
in
cmpsl
popa
dec
rolb
std
dec
addr16
dec
inc
cld
cmp
out
push
sahf
jns
xchg
push
loopne
pop
in
mov
mov
push
call
push
inc
add
lds
fldl
cmp
sbb
sbb
add
pop
push
mov
loope
sbb
je
mov
sbb
decl
mov
mov
jbe
loopne
xor
cmp
dec
pusha
or
testb
or
adc
and
sub
adc
xchg
inc
jnp
int3
xchg
push
cmp
jp
mov
and
inc
and
jno
nop
je
xchg
add
adc
mov
push
adc
sarb
push
jp
scas
popf
movsl
pusha
cmp
sti
inc
in
lds
mov
out
int
push
lock
sarl
mov
xchg
dec
or
xchg
pop
mov
sbb
clc
in
gs
outsb
adc
movsl
push
sahf
loopne
in
out
push
inc
pop
lea
pop
test
inc
or
stos
and
rorl
mov
mov
into
leave
dec
out
jecxz
push
mov
sub
in
insb
ds
rcl
movsl
push
pop
pop
cltd
push
mov
in
std
dec
test
xchg
xor
jo
in
fwait
repnz
or
nop
dec
jns
clc
loopne
or
frstor
push
jg
dec
rcrl
mov
push
shll
jmp
fs
sbb
or
jecxz
arpl
mul
movsl
je
and
mov
outsl
mov
shlb
in
insb
adc
loop
and
push
repz
push
bound
sti
pop
mov
in
insb
sbb
cltd
or
je
lds
das
outsl
jge
shrb
std
mov
mov
pusha
mov
shlb
in
push
xchg
sub
lea
je
xor
inc
lcall
mov
sarb
je
dec
fsubrs
xchg
cmp
or
jo
pop
sbb
rcrl
adc
jb
cmpb
bound
cltd
ficomps
daa
loope
xor
popa
clc
add
xchg
dec
ja
ficompl
daa
mov
ds
data16
xchg
xchg
in
push
das
inc
or
sbbl
test
subb
mov
dec
xchg
add
xchg
push
out
addr16
mov
inc
cld
adc
lds
stc
test
lds
sub
clc
out
jmp
sbb
mov
pop
pop
daa
mov
aaa
movsb
fdivl
push
hlt
dec
adc
dec
xor
shr
add
xchg
pop
dec
arpl
loopne
hlt
enter
dec
mov
test
xlat
pop
lcall
scas
es
insb
mov
dec
repz
jae
pop
jne
mov
sub
cmp
pushf
add
into
stos
imul
jmp
adc
push
test
imul
inc
or
push
insb
in
xchg
sets
pop
lcall
inc
in
jp
mov
mov
insl
test
sarl
adc
std
cmp
out
ja
ficoml
mov
das
jne
xchg
add
push
in
xchg
call
cmp
js
xor
jl
imul
dec
cmp
out
imul
inc
or
jl
lods
sti
fisttpl
jl
jae
dec
sbb
pop
dec
daa
pop
or
pop
dec
push
lods
mov
shll
mov
hlt
dec
or
xchg
xorl
lret
jae
lcall
jmp
cli
ljmp
jmp
jnp
in
push
jnp
add
jne
xor
pusha
pop
mov
sub
xadd
mov
js
pusha
aaa
xor
arpl
loopne
push
jne
loopne
jb
inc
icebp
jle
cmp
je
adcl
dec
xor
pop
sub
scas
push
dec
fidivrs
std
or
iret
cwtl
fsubrl
filds
xlat
test
clc
cs
outsl
mov
xchg
repnz
incb
ret
sbb
sub
adc
cmpsl
test
bound
shll
cmp
nop
lods
repz
adcb
cli
jno
jmp
imul
pushf
fdivs
ss
stos
movups
sti
inc
hlt
clc
or
shll
out
aam
mov
stc
add
xchg
enter
aaa
inc
hlt
jl
push
clc
imul
ds
and
dec
xor
xchg
pop
add
dec
in
add
test
insl
adcl
jo
xor
stos
loopne
fnstsw
xlat
mov
or
test
or
push
repz
into
mov
pop
sub
push
or
insb
push
adc
xor
into
cmp
sub
ficoml
ret
scas
and
aam
imul
outsb
fcoms
pop
push
inc
jmp
cmp
jmp
outsl
jl
scas
mov
mov
jle
or
sbb
dec
adc
mov
cld
outsl
cmp
sti
cmp
push
adc
imul
sbbl
clc
xchg
cmp
pop
in
dec
add
cmp
cltd
push
lret
movsl
fwait
movsb
ds
inc
xlat
js
outsl
sub
jl
pop
fs
sub
and
out
leave
jmp
xor
cmpsl
and
cld
sahf
out
pop
das
jge
xor
shlb
hlt
jbe
jnp
fimuls
inc
int3
stos
loope
add
loop
cmp
mov
daa
clc
dec
sti
or
loopne
cmc
and
mov
insl
es
ljmp
pop
outsl
loopne
jns
dec
jne
or
dec
cmpsb
sub
sbb
fidivs
or
add
inc
sub
push
aas
imul
loop
mov
scas
xchg
pop
sub
pushf
aad
jg
xor
out
clc
cltd
add
inc
scas
add
lods
pushl
ret
lea
rcll
fldenv
sbb
mov
iret
mov
sbb
inc
je
mov
outsb
out
push
xchg
mov
mov
adc
daa
fs
sbb
test
dec
cs
in
sbb
dec
and
fucomip
enter
mov
loope
out
inc
and
jo
or
loopne
jge
mov
das
jl
daa
jge
xchg
repz
ss
enter
in
setns
pop
gs
adc
outsl
aam
mov
push
add
xchg
aas
pop
lds
ret
mov
roll
push
push
inc
lods
adc
cmp
incl
pop
ljmp
xor
or
sub
in
sub
loopne
xchg
ljmp
push
sub
aam
imul
add
mov
cld
leave
jle
fsubs
inc
icebp
xlat
cwtl
push
out
lds
inc
outsl
mov
out
cwtl
test
xchg
xor
and
inc
rclb
mov
int3
jecxz
leave
lock
mov
fwait
add
outsl
pop
jl
jmp
fidivl
js
pusha
dec
mov
sbb
data16
mov
mov
in
pushf
xlat
push
sbb
imul
addb
pop
call
mov
sbb
mov
sub
and
enter
inc
andb
pop
jecxz
fisubrl
insl
movsb
xor
adc
sbb
sub
out
cmc
and
pushf
sbb
jge
pop
cmpsb
pop
push
add
movsb
mov
cmp
sub
sahf
stos
xchg
mov
ljmp
cmp
sub
das
add
dec
push
mov
std
aaa
push
sub
xchg
fcmovu
push
mov
and
or
outsl
data16
adc
stos
sbb
sub
lock
sub
jbe
mov
push
mov
test
push
insb
insb
fcompl
mov
or
arpl
push
lret
aad
mov
push
subb
push
out
in
out
imulb
inc
int3
jmp
push
and
add
mov
cld
sub
xor
insb
gs
pop
mov
ljmp
sbb
hlt
mov
inc
in
fldenv
out
cmpsl
ljmp
dec
es
das
clc
ljmp
fistl
dec
icebp
mov
pusha
popf
aas
mov
mov
scas
mov
shl
xor
movsb
xor
dec
outsb
loopne
cli
inc
mov
test
cltd
mov
rcll
andb
pusha
out
push
inc
out
in
xor
fbld
push
and
loopne
and
out
push
loopne
test
dec
mov
xor
mov
in
hlt
cmpsb
shr
adc
jns
or
popa
notb
icebp
fxch
sahf
adc
clts
or
loopne
ret
inc
sti
add
test
dec
andb
insl
je
inc
daa
adc
fs
insl
orb
cltd
adc
push
jbe
dec
jnp
sub
and
pop
jg
imul
enter
jmp
je
xor
shlb
push
addr16
test
enter
sub
aaa
je
add
sub
or
add
lock
jne
cmp
push
pop
sbb
and
sbb
cltd
sbb
lods
in
inc
push
shl
sbb
and
dec
sbb
fstps
mov
subb
push
fnstsw
ss
outsb
insb
out
es
mov
dec
cmp
jo
gs
adc
mov
jne
mov
mov
cmpsb
jmp
int
xchg
mov
cmc
mov
dec
pushf
adc
xchg
fwait
mov
enter
faddl
and
mov
aam
aaa
xor
lret
ja
pop
adc
mov
pop
es
xor
addr16
pop
in
inc
pop
jl
pop
divb
mov
sub
test
xor
test
jecxz
and
ret
add
cmc
push
adc
je
and
add
adc
dec
or
insb
add
popa
ret
mov
mov
jmp
xchg
xchg
xor
jle
mov
mov
vmwrite
cltd
je
mov
aas
roll
mov
add
mov
jg
mov
and
pop
and
and
popl
loopne
outsb
ljmp
mov
ljmp
lahf
rclb
xlat
push
jb
mov
push
ror
int3
loope
dec
sub
das
xchg
push
fs
jnp
push
dec
subl
negl
adcb
out
add
fsubl
sub
out
pop
jle
inc
dec
mov
in
adc
jg
mov
sub
mov
incb
mov
in
ljmp
pusha
inc
sbb
mov
jecxz
arpl
pop
push
push
xor
hlt
out
mov
jne
mov
loop
inc
in
lahf
sub
repnz
push
mov
pop
and
outsb
decl
imul
das
popa
test
ret
cmp
das
push
inc
outsb
adc
popa
std
dec
aam
cli
xchg
loop
ret
rclb
insl
mov
in
or
loopne
call
pusha
jbe
inc
ljmp
cmp
decb
fchs
dec
xchg
adc
adc
nop
dec
cmpb
sti
negl
stc
notl
jae
jle
adc
adc
in
cmp
push
add
jecxz
popa
or
adc
adc
hlt
or
aaa
cmpsb
ret
es
lret
ja
outsb
dec
inc
loope
loop
lcall
shlb
jecxz
jb
pop
out
daa
mov
jecxz
xchg
push
ja
cmpsb
push
ss
pop
outsb
adc
ljmp
sub
dec
cmp
lret
cld
sbb
imul
xor
add
xchg
jnp
sub
push
add
jmp
cmpsb
push
fldenv
imul
sub
xchg
popa
jg
je
pop
sub
arpl
cmpsl
out
xchg
ljmp
pop
ss
mov
out
mov
mov
mov
jmp
jno
xor
push
inc
push
lock
pop
stc
sbb
sub
push
icebp
jb
icebp
aaa
push
ret
dec
jne
cmp
lock
jge
cli
xor
or
push
lock
push
call
in
mov
xchg
mov
je
cli
call
inc
aaa
outsb
fs
or
gs
inc
ljmp
xor
jle
mul
or
out
xchg
imul
cmp
dec
push
sub
pusha
loop
clc
jge
ret
adc
fnstcw
aaa
pop
mov
aaa
js
clc
jge
cld
in
sub
mov
enter
and
inc
mov
test
add
pop
into
int3
mov
js
mov
mov
xchg
sbb
cmc
adc
popf
pop
push
nop
xor
into
push
xor
push
mov
aam
mov
mov
push
mov
jmp
aas
xchg
fsubs
mov
jecxz
inc
or
popf
test
testb
stos
das
int3
imul
in
daa
hlt
hlt
or
ljmp
insb
int3
dec
aad
dec
ret
dec
push
loopne
jle
jmp
insl
ja
clc
mul
repz
push
leave
jg
add
push
cmp
mov
pusha
cwtl
ja
xchg
mov
push
das
push
push
dec
cmc
pop
testb
pop
addr16
incl
mov
mov
lahf
dec
rcrb
xor
decl
and
jne
lcall
das
xlat
inc
stos
stc
adc
imul
fldcw
pusha
in
mov
movsl
adc
lods
int3
fnstenv
popf
sub
and
cmc
cmc
dec
xor
add
js
les
or
push
insl
call
in
sub
fs
push
test
jmp
fxch
mov
mov
sbb
mov
into
test
xchg
in
or
push
andb
add
jns
std
push
inc
les
inc
mov
clc
inc
sti
inc
push
cmp
fistpll
mov
js
sub
jg
push
fistps
mov
and
addr16
cs
jmp
stc
or
dec
clc
ds
cmp
incl
push
int
lcall
test
mov
jg
pusha
lds
pop
orb
stc
ds
decl
jp
sbb
sbbb
aas
xor
out
cmp
ficoms
pop
movsl
in
xchg
mov
pop
adc
test
mov
mov
mov
cmp
jo
outsl
scas
je
xchg
insl
inc
out
mov
test
fwait
dec
push
in
mov
idivb
pushf
pushf
sub
test
insl
cmp
jmp
loopne
add
or
mov
add
scas
and
hlt
sub
dec
and
pop
lock
ret
sub
cs
xor
ret
lock
xchg
mov
lret
xchg
sub
fs
cmpsl
mov
push
jmp
jecxz
aad
mov
jmp
int3
out
xor
in
jmp
pop
dec
push
push
jae
sahf
fidivrs
pop
test
outsl
jmp
js
cmp
push
cmp
jmp
cmp
or
push
cmp
xor
pop
arpl
hlt
mov
mov
lahf
jo
sbb
push
jecxz
hlt
popf
ljmp
xor
rolb
fisubs
lahf
loopne
sbb
mov
imul
fwait
and
sahf
jge
repnz
pusha
clc
jbe
sbb
test
inc
add
mov
jmp
sub
outsb
mov
pop
xor
test
inc
cmp
dec
gs
inc
mov
cmpsl
sub
push
cmp
sub
fimull
ret
cld
dec
mov
jp
aas
scas
loop
or
notl
lds
repz
fmulp
les
imulb
in
adc
jmp
cmpsb
pop
adc
xchg
and
xlat
in
lods
sub
out
ret
dec
out
pop
xor
stos
imulb
mov
sub
gs
popf
les
and
xchg
in
lret
test
cmp
sub
sub
jo
in
jl
jge
call
mov
pusha
outsb
push
ljmp
push
jbe
int
das
xchg
sub
bound
cmp
dec
mov
fdivs
shr
xor
ss
daa
gs
fstpt
push
push
mov
jge
mov
pop
add
dec
dec
mov
mov
cmpsb
jge
ret
test
jg
loopne
pop
dec
jo
dec
rolb
lods
les
into
outsb
das
push
incb
pop
pextrw
cmpb
shlb
cmp
outsl
add
cmp
adc
insb
ror
mov
pop
out
inc
jl
cwtl
insl
int3
test
int3
insl
push
mov
in
push
popf
into
in
faddl
mov
out
mov
sbb
clc
outsl
xchg
jns
sub
add
movsl
or
or
mov
adc
out
test
lods
cs
push
insb
jecxz
pop
in
pushf
mov
ror
or
sti
insl
mov
jnp
jecxz
jne
loope
push
leave
xchg
bound
add
in
cmpsl
icebp
adc
imul
insl
sarb
in
gs
fdivs
in
int3
mov
stc
sarl
add
filds
add
lock
cmp
sbb
adc
push
lret
push
and
scas
push
adc
mov
ret
shl
mov
push
push
jp
xchg
mov
daa
xchg
adc
mov
push
xchg
mov
mov
push
xchg
xchg
outsb
js
fwait
stc
outsl
mov
and
loopne
pop
leave
sbb
mov
insl
mov
dec
addr16
jb
in
push
out
and
lret
icebp
add
mov
cmpsl
out
xchg
mov
cwtl
movsl
lods
jge
mov
loop
mov
push
or
scas
outsl
insb
sub
fcoms
push
int3
rclb
arpl
push
jns
or
push
aaa
pusha
mov
outsl
or
lods
fistpll
je
pop
push
fcoms
mov
mov
dec
insb
lods
sub
es
xchg
outsb
dec
js
test
xchg
lret
mov
popa
mov
das
jb
outsl
push
pop
pop
popa
jo
push
insb
jae
iret
inc
jae
ja
cld
lock
les
loopne
iret
into
imul
xchg
cmpsb
daa
push
fimuls
scas
sbb
stc
nop
frstor
jb
fadds
mov
shrb
mov
xor
out
jb
mov
insl
xchg
ret
je
cmp
cs
inc
jns
or
add
mov
inc
imul
inc
sub
outsl
jo
cmpsb
sub
dec
insl
jo
push
pop
sti
lret
add
inc
mov
cmp
fldenv
stc
cltd
aaa
aam
loopne
frstor
mov
mov
dec
dec
les
mov
imul
scas
dec
xlat
addb
xchg
mov
xchg
cwtl
jne
cs
mov
or
outsl
sub
mov
push
and
cmpsb
and
dec
ret
mov
adc
jmp
sbb
ret
push
pop
jmp
adc
cmp
cmpsb
int3
or
aaa
fcomip
and
sbb
mov
mov
push
jne
pop
push
aas
push
dec
xchg
jns
sub
push
mov
push
ret
lock
stos
inc
je
fsubrl
or
enter
fcoms
loopne
cltd
repz
adc
fsub
mov
aaa
push
lock
les
xor
outsb
sbb
pop
dec
enter
push
enter
mov
adcl
in
adc
cmpsb
or
lods
push
xlat
adc
fstps
cmpb
jns
out
and
lret
bound
xchg
enter
sbb
iret
cmp
jns
aad
shlb
sbb
scas
push
jns
add
pop
nop
out
ja,pn
js
je
lcall
pusha
std
and
sti
imul
sub
aas
xchg
aas
data16
mov
inc
leave
dec
and
out
push
mov
pop
ficompl
pop
pop
add
inc
scas
inc
pop
sbb
sub
pop
adc
ds
mov
pop
push
sub
inc
xchg
stos
or
cltd
cmp
mov
mov
add
jecxz
sub
test
call
outsb
pop
or
ds
mov
inc
insb
outsb
loopne
loop
fcmovnb
mov
pop
scas
fs
out
dec
andl
dec
arpl
sbbb
loopne
ret
cmp
jo
outsl
dec
lock
popa
in
int3
sbb
dec
cli
dec
mov
aas
dec
daa
dec
pop
pusha
call
xor
in
je
push
cmpsb
outsb
cmp
pop
sub
js
in
loope
push
fdivl
rolb
push
insl
std
sbb
cld
adc
or
dec
insl
jo
lods
inc
outsb
iret
add
push
stos
push
lods
aas
mov
cmp
and
ret
push
inc
outsb
cmp
push
jne
inc
lahf
jge
icebp
lcall
jns
fistl
or
mov
enter
mov
sar
imul
inc
movsb
pop
pop
mov
aam
and
jge
push
push
cmp
arpl
push
adc
lret
popa
or
sub
dec
cs
cmpsl
hlt
xchg
xchg
sarb
mov
jmp
pop
scas
xchg
shlb
or
shlb
cmp
push
ret
out
xor
inc
cmp
test
cmpsl
insl
shlb
mov
dec
aaa
cmpsb
push
push
add
pop
lds
pop
cmc
scas
pop
test
jl
lock
das
adc
les
pop
loop
dec
and
xchg
fistpll
fwait
cmpsb
adc
shrb
add
out
popf
xchg
sbb
outsb
popl
sahf
sahf
outsl
retw
mov
test
cltd
loop
inc
insb
adcl
enter
out
jl
movsl
scas
daa
push
mov
imul
test
inc
mov
out
adc
pop
and
cltd
enter
xor
pop
inc
xor
mov
mov
lret
insl
jl
jmp
and
add
test
fcomip
and
out
imul
xchg
push
pop
mov
inc
int3
cmovl
and
stos
sbbb
notb
cld
inc
int
sub
jne
int
xlat
push
insl
sahf
xor
movsb
shl
mov
adc
mov
aas
scas
mull
cmp
lds
test
lds
xchg
lcall
stos
adc
insb
stos
daa
iret
dec
dec
fs
pop
les
sub
inc
sub
pop
std
sbb
mov
xchg
jg
mov
lods
cmp
cmp
popf
inc
inc
lret
jns
jge
sti
dec
xlat
aaa
adc
outsl
jl
aaa
pop
int
mov
or
rcrl
cld
inc
out
xor
aad
xchg
divb
arpl
pop
mov
popa
inc
hlt
outsb
je
enter
cmp
test
mov
fisttpll
imul
xchg
mov
xchg
mov
sub
fldl
mov
push
loop
in
jnp
mov
cmpsb
pop
enter
dec
shlb
mov
mov
mov
popf
cmp
mov
mov
mov
dec
outsl
jne
xchg
or
push
repz
fsts
sti
clc
inc
call
aas
sar
dec
loope
aaa
js
dec
fistpl
pop
jae
je
or
fbld
lods
or
aaa
xchg
mov
jae
rclb
into
ljmp
dec
sub
mov
addr16
or
push
int3
mov
icebp
icebp
push
ljmp
shlb
lcall
arpl
bound
movsb
cwtl
adc
lea
hlt
addr16
pop
and
subb
inc
ljmp
cmp
mov
cli
testl
push
push
dec
daa
mov
cmp
test
shrb
enter
cltd
lahf
lahf
loop
or
jge
inc
stos
mov
lds
xchg
jg
out
adc
cmp
data16
or
or
movsl
js
or
insl
sbbl
movsb
pushf
insl
icebp
push
fnsave
ljmp
jg
push
out
dec
push
pop
pop
lock
ljmp
stos
outsl
jmp
das
pop
loopne
mov
sahf
call
inc
push
sub
pop
mov
sub
adc
data16
in
push
je
lahf
rcr
shr
sub
dec
sti
pop
cmp
adc
add
mov
mov
sbb
xchg
adc
mov
pop
pusha
int3
or
or
js
mov
mov
clc
int3
xchg
inc
loop
mov
mov
dec
dec
popa
testl
mov
pop
fbld
movsb
mov
mov
rcll
dec
mov
sub
ficoms
jo
fcmove
xchg
push
mov
es
add
je
icebp
out
movsb
fstps
push
ja
mov
aas
aad
ljmp
or
cltd
sbb
sbb
mov
inc
fistpll
sub
mov
pop
push
ror
cmp
xchg
and
mov
sahf
int3
jle
loop
pop
sbb
add
jmp
cmp
push
nop
insl
cmp
cli
mov
icebp
cld
aas
and
lock
rclb
in
imul
adc
shl
leave
cld
aad
push
sbb
js
xor
lods
jns
mov
inc
gs
outsl
pop
dec
jle
je
sub
cwtl
push
jge
sti
stos
push
ljmp
outsb
aam
cld
mov
and
outsl
xor
test
stos
xor
adc
adc
adc
ret
adc
ljmp
jo
cmp
shrl
pop
jmp
jl
iret
xor
mov
or
or
imul
xchg
push
lods
cltd
add
xor
outsb
jnp
aas
pop
pop
inc
stos
sub
adc
repnz
pop
je
mov
sub
fsubrp
in
jg
mov
push
mov
dec
xchg
hlt
data16
popa
and
sbb
push
popa
imul
stc
xchg
inc
pop
inc
and
xchg
fldt
pusha
out
int3
or
icebp
dec
inc
insb
add
lods
pop
mov
jg
mov
out
mov
lcall
mov
bound
call
jge
jl
cs
dec
ret
lods
je
pop
mov
and
sbb
insb
sbb
insb
jmp
push
out
inc
inc
pop
dec
pop
arpl
pop
or
mov
xchg
push
mov
sbb
push
into
arpl
inc
xchg
les
loop
or
je
sahf
sarl
aad
int
mov
das
dec
test
fidivrs
xchg
xor
es
cmc
test
and
loope
imul
test
in
sbb
cli
pop
inc
imul
ljmp
xchg
pop
sbb
jmp
xlat
fstl
jg
cmpsl
popf
sub
cltd
bound
jecxz
mov
push
loope
out
and
loop
popf
loopne
pop
bnd
fmul
inc
push
mov
xchg
fmuls
dec
mov
clc
mov
sbb
mov
rol
fidivs
ret
rolb
pop
adc
or
shl
cmpsb
mov
mov
call
add
out
scas
lods
in
int3
xchg
rcrl
fisubs
jno
mov
inc
lods
sub
mov
or
xchg
arpl
dec
out
mov
fsubrl
insb
loopne
xor
insl
mov
mov
xor
fisubrs
push
rcll
lea
mov
jecxz
jmp
mov
loop
arpl
popa
jecxz
clc
mov
sbb
mov
imul
repnz
jecxz
testb
fwait
divb
fnstenv
inc
cmpsl
adc
xchg
push
mov
xchg
cmp
push
decl
pop
incl
pop
ficoms
pop
dec
aam
add
out
jl
jb
mov
rorb
adc
ljmp
movsb
in
fsubrs
ret
inc
xchg
aam
jbe
jo
addr16
loopne
inc
daa
pop
sahf
insb
int
or
cmpb
inc
in
push
adc
fwait
push
mov
call
dec
dec
out
xor
out
mov
unpcklps
imul
into
in
mov
xor
leave
aam
mov
cwtl
mov
movsl
dec
out
and
iret
pop
xchg
push
outsb
fnstcw
in
jno
dec
inc
jo
and
lock
cmp
jl
pop
dec
and
insl
mov
mov
mov
xchg
ljmp
loop
into
and
jbe
push
push
clc
adc
loop
mov
add
sub
stos
icebp
testb
sub
jns
popl
in
fnstsw
cs
jnp
loop
test
sbb
dec
sbb
mov
sbb
aas
inc
or
dec
and
jo
cld
fsubl
xchg
int3
mov
mov
cmp
adc
cmp
insl
mov
push
je
lcall
jae
test
sbb
insb
add
imul
or
cmp
sbb
mov
or
je
les
push
mulb
out
jns
shufps
cmpsb
fidivrl
jg
out
mov
test
inc
dec
xor
scas
jmp
outsl
xchg
pop
stos
into
ljmp
xor
mov
add
movsb
jmp
and
addr16
sbb
push
xor
pop
outsb
sub
rorb
jns
rcrb
cmp
jne
lods
push
iret
xor
cmpsl
and
sub
dec
in
push
outsl
cmp
dec
and
ret
mov
movb
mov
inc
sbb
daa
fwait
inc
pop
insb
xchg
add
outsl
cld
inc
lods
jg
stc
pop
enter
sbb
outsb
loop
pmaxsw
call
lods
sub
aaa
mov
scas
pop
mov
add
shlb
pop
push
pop
ljmp
imul
dec
inc
outsl
das
or
call
loop
js
outsb
out
in
into
dec
jmp
es
aas
ja
icebp
movsl
xorl
das
xchg
xor
sbb
jmp
or
or
inc
std
movb
mov
mov
sti
inc
shrl
or
das
mov
lret
scas
adc
dec
out
out
sub
add
idivl
ffree
sbb
push
mov
pop
dec
xchg
mov
inc
pop
out
nop
fs
mov
xor
aam
es
xor
je
adc
push
push
jge
call
outsl
dec
add
les
incb
insb
jge
mov
push
fstl
fiadds
hlt
jae
loope
inc
mov
dec
movsl
mov
outsb
lahf
jo
stos
out
add
xchg
adc
xor
fsubrl
sbb
loopne
sbbl
std
dec
lock
in
js
shlb
add
cmp
sub
rorl
mov
lret
pop
sub
pop
dec
pushf
xchg
fwait
pop
jl
lods
xchg
mov
addr16
ret
mov
std
jo
sbb
ljmp
inc
fwait
sub
aaa
stos
inc
xor
mov
cmc
xor
mov
test
mov
dec
in
pusha
inc
arpl
add
addl
cmp
mov
call
jne
pop
rcrl
das
jmp
jmp
test
adc
or
sub
adc
nop
sub
outsl
aad
push
lahf
insl
adc
xchg
pop
pop
push
cmp
out
arpl
pusha
cmp
outsl
stos
add
or
stos
mov
movsb
lahf
fdivl
inc
adc
push
popa
lock
sbb
pop
out
mov
testl
int3
lret
divl
test
or
test
push
push
adc
das
jge
out
cmc
jmp
lahf
outsl
outsb
xor
and
or
shr
inc
sbb
mov
lret
dec
imulb
add
inc
sti
decb
or
cmpsb
xlat
cmp
imul
andps
mov
xor
cmp
std
mul
call
outsl
push
push
sti
inc
add
mov
sub
stos
stos
fdivs
sub
cs
daa
and
ret
aaa
movsl
pop
and
mov
leave
mov
lods
imul
push
imul
int3
mov
dec
movsb
push
pusha
outsb
sahf
pusha
xor
add
pusha
in
push
sub
test
jo
in
call
cmpb
das
jmp
dec
aaa
sub
imul
mov
idiv
test
lods
in
fiaddl
xchg
mov
in
insb
mov
mov
dec
jne
insl
call
aas
mov
sub
jge
dec
jne
out
mov
inc
add
add
ss
dec
adc
es
mov
pusha
add
subb
scas
push
bound
scas
cmpsb
and
loopne
call
push
pop
inc
push
test
addr16
mov
and
dec
call
push
stc
sub
outsb
bound
dec
xchg
add
add
xchg
pusha
roll
jle
cmp
mov
lcall
add
and
xor
xor
gs
inc
iret
in
push
aas
jb
repnz
ret
adc
addr16
imul
ret
icebp
ss
cmc
push
adc
adc
mov
pop
push
xchg
dec
push
xchg
jno
out
dec
xchg
in
aaa
xchg
pop
push
lret
push
je
cmpsl
scas
repz
cmp
popa
mov
outsb
and
addr16
adc
cmp
outsl
pop
mov
adc
mov
insl
je
mov
fcmovnb
int3
mov
mov
or
or
in
xchg
cld
mov
xchg
mov
xlat
outsl
pushf
in
fisttpll
shrb
movl
jp
imul
cwtl
sub
or
mov
dec
lods
dec
shlb
fsts
push
hlt
mov
inc
pushf
mov
inc
mov
adc
sub
mov
and
es
jecxz
sbb
sub
aad
addr16
loope
loop
jecxz
jg
pop
mov
mov
push
subb
xor
bound
adc
adc
pop
test
cmc
test
or
mov
jno
arpl
insb
jmp
cmp
das
loop
mov
in
xchg
cmp
xchg
add
out
loope
add
adc
jmp
mull
sub
adc
outsl
add
insb
lret
or
rclb
or
sbb
ds
je
outsl
out
and
lock
lods
outsb
jo
in
xchg
sbb
stos
mov
push
popf
jbe
int3
out
ret
xchg
add
sbb
or
rol
into
mov
cmpsl
add
jge
dec
je
ja,pt
add
je
test
pop
adc
js
jg
jl
fildll
or
aaa
mov
sarb
aaa
addr16
imul
mov
cmp
arpl
jnp
fisubl
pop
sub
addr16
pop
sahf
xor
mov
loope
add
ss
enter
adc
push
leave
out
mov
inc
jmp
sbb
sub
int
push
jl
insl
out
lret
or
dec
addr16
xchg
hlt
out
xor
movsl
daa
pop
inc
shlb
mov
push
adc
lds
icebp
mov
adc
sbb
bnd
lea
cmpsl
mov
aaa
movsl
cmp
sub
jle
sahf
xor
test
sarb
inc
loope
adc
out
clc
sbb
sahf
cwtl
jbe
xchg
add
dec
imul
add
das
mov
loopne
jle
xchg
leave
inc
test
xchg
inc
or
outsb
or
mov
in
int
hlt
inc
in
orb
out
inc
or
inc
dec
addr16
inc
inc
into
gs
out
pusha
je
pop
jle
pop
xchg
jbe
jo
cmp
or
notl
js
enter
mov
xor
xorb
pushf
mov
push
je
inc
add
pop
nop
lret
dec
add
xor
jp
or
shlb
push
imul
lcall
andl
push
xor
outsb
hlt
sub
cmc
and
dec
andb
ja
fcoms
out
adc
loop
into
or
int
mov
cmp
insl
ljmp
int3
xchg
add
inc
jae
sub
cmp
inc
jmp
fdivp
stc
or
aaa
insl
adc
mov
fbstp
aaa
push
push
aas
mov
push
or
clc
lock
data16
mov
lea
cltd
int3
pop
pop
aad
and
inc
xchg
test
out
es
fldl
call
ret
hlt
sub
stc
out
popf
ror
sbb
sbb
xor
push
adc
pop
or
jge
fidivrs
sarl
xchg
repnz
pop
jne
push
je,pn
imul
xor
stos
adc
cmp
shlb
sbb
pushf
btc
push
mov
xor
leave
inc
push
je
push
in
jg
daa
fwait
dec
xor
and
sub
insb
insb
dec
cld
iret
imul
add
ret
mov
push
ja
jmp
aam
sub
out
pop
popf
xchg
rcrb
imul
rclb
xchg
pop
stos
cmpl
mov
movsl
out
popaw
mov
xor
lcall
test
pop
pop
pusha
bound
repz
fldl
cmp
xchg
int
push
xor
pop
pop
fsub
or
xchg
data16
das
cs
mov
xchg
cltd
movb
mov
xchg
addr16
insl
fiadds
test
fsts
loop
out
fwait
in
sub
dec
sbb
mov
push
cltd
pop
mov
push
stos
fimuls
mov
loope
test
insb
inc
or
sub
adc
out
decl
dec
daa
mov
push
ss
das
sbb
cld
sub
test
dec
bound
mov
inc
jmp
movsl
loope
pusha
pop
jo
jmp
jbe
pop
or
dec
out
das
lret
xchg
in
addl
clc
pop
test
call
not
jge
add
jp
jb
pop
out
or
movb
call
repnz
mov
inc
sub
sti
inc
loop
int3
xor
in
jl
fwait
jl
jge
aaa
jae
aaa
fimuls
xchg
insl
ljmp
inc
cmpsb
mov
cmp
fldenv
call
daa
mov
lds
sub
fldz
repz
mov
bound
and
mov
mov
cmp
cmp
lret
and
les
enter
adc
mov
xor
outsl
add
pop
lea
addb
imull
dec
out
mov
dec
addb
scas
das
sbb
sbb
pop
mov
jae
test
xor
in
mov
gs
xor
cltd
sbb
out
cltd
xor
stc
pop
test
xchg
addb
out
add
popa
xor
dec
jnp
lea
arpl
mov
movsl
mov
push
lds
les
out
inc
xor
mov
jp
fwait
add
icebp
jg
subl
out
pusha
clc
xor
fwait
call
add
or
fsubl
jne
mov
addr16
jmp
es
mov
frstor
sbb
or
out
jo
jle
movsl
dec
pusha
mov
or
clc
fisttpl
in
xchg
cmc
mov
sti
int
out
fiadds
hlt
push
pusha
mov
inc
stos
dec
bound
pop
sahf
bound
mov
movsl
mov
loopne
mov
ret
cmp
push
mov
xchg
gs
xchg
fstpl
loope
lods
lret
pop
filds
scas
js
rolb
ret
cmp
out
pop
push
mov
in
popf
test
out
mov
mov
fistpll
clc
jg
fs
fsubl
xchg
test
mov
jle
add
mov
mov
lahf
push
sub
jae
fwait
lea
lcall
sbb
push
mov
cmp
sub
mov
gs
aam
jmp
out
add
xor
mov
pop
xor
inc
xor
movsb
inc
pop
xor
jl
mov
fdivrl
pop
xor
test
call
insl
pop
fisttpl
scas
push
push
or
cmp
xor
cld
negb
xchg
fwait
sbb
jmp
xchg
cli
std
mov
test
rcrl
add
mov
push
test
les
mov
dec
cmpsl
cmpsb
mov
inc
cmpsb
mov
ljmp
pop
or
call
xor
orl
popf
inc
add
sbb
je
fldcw
sbb
xchg
mov
push
lret
pop
cmc
xchg
pop
rolb
mov
pop
mov
loop
out
push
inc
addr16
stc
sti
jge
mov
into
je
push
sbb
sbb
pop
sub
add
jp
shrb
or
sbb
imul
cmpl
popa
arpl
pop
jge
dec
enter
jle
inc
ret
jo
or
movsb
ficoms
add
adc
jo
jbe
insl
xchg
jnp
pusha
push
sub
lret
push
xchg
fildl
out
dec
loop
das
in
imul
popa
xchg
and
cmp
or
or
rolb
inc
test
mov
lcall
test
test
out
adc
jo
outsl
add
adc
cmp
lds
and
pop
pushl
mov
mov
or
lock
xor
lods
jmp
sub
arpl
mov
insb
adc
mov
xchg
adc
imulb
out
add
mov
cmpsb
jne
daa
sub
jp
mov
jl
sbb
pop
xchg
pusha
test
xchg
jmp
push
add
or
inc
out
inc
cli
loop
inc
inc
jo
pusha
hlt
imul
push
into
xchg
dec
jmp
and
daa
fs
inc
imul
rcll
sub
push
mov
mov
mov
and
lods
mov
push
adc
dec
inc
ficoms
cs
jb
fmull
scas
aad
and
mov
pop
aas
loop
xchg
mov
fwait
add
xor
out
pop
psadbw
das
jg
mov
inc
lret
pushf
push
dec
xchg
mulb
les
and
aaa
jge
sar
jne
cmpsl
lock
xchg
adc
jmp
or
je
mov
sub
adcl
repnz
dec
out
mov
out
pop
mov
adc
xor
jns
inc
dec
cmp
sbb
jns
xchg
sub
inc
nop
iret
mov
das
inc
dec
or
jg
pop
xchg
or
shll
je
mov
or
in
or
fldcw
nop
jl
mov
inc
les
mov
jne
leave
into
outsl
dec
js
pop
aad
hlt
pop
and
inc
inc
or
insl
push
push
je
dec
shlb
inc
int
mov
jl
fiadds
inc
dec
iret
insl
insl
cli
sub
fldenv
into
push
lods
cmp
popa
andb
movsl
in
inc
sbb
lahf
and
das
rcll
push
xor
ret
clc
fists
test
dec
mov
jge
stos
rcrb
dec
cmpsb
add
pop
in
mov
xchg
movsl
cmpsl
mov
add
xlat
jns
bound
les
imul
call
bound
shlb
aas
ret
push
xchg
xchg
dec
movsl
xchg
shrl
std
icebp
shlb
sub
add
mov
sahf
outsb
je
inc
or
push
hlt
out
shll
mov
inc
or
dec
jns
jecxz
xchg
push
jae
jb
rcll
adc
add
sarl
sbb
dec
cmp
or
mov
cmpsb
sub
inc
shl
dec
pop
sbb
movsl
adc
fisubrl
add
inc
js
push
movsl
div
out
ss
adc
dec
pop
shll
arpl
ljmp
or
mov
add
pop
xchg
lahf
imulb
ret
in
xchg
repz
into
mov
cmp
push
mov
rorl
out
fsubrs
sbb
bound
aas
lret
bound
ljmp
xor
pop
lock
inc
hlt
je
and
mov
popa
repz
jb
or
sti
push
jne
jnp
jne
pusha
push
xor
cmp
dec
sub
xchg
cmp
imul
mov
fisubl
dec
mov
xlat
dec
sub
pop
pop
lock
out
loop
push
int
push
and
push
pushf
mov
or
and
adc
jg
repz
inc
fs
cmpl
pop
dec
sub
rol
push
loope
cmp
inc
push
negb
fs
inc
and
mov
insb
xor
test
popa
jnp
sub
cmp
bound
iret
leave
decl
mov
xor
aas
xor
sbb
pop
ljmp
cmp
adc
sub
pop
ret
pop
adc
cmp
lret
mov
imul
or
fs
scas
jnp
outsb
mov
sub
adc
mov
jb
icebp
into
mov
popf
call
ljmp
fsubrl
mov
ljmp
loope
push
sub
mov
or
pop
mov
push
xchg
icebp
jnp
lahf
jp
adc
jecxz
lds
loopne
cwtl
inc
repnz
fldenv
jb
pop
xor
bound
or
mov
outsl
dec
aam
fisttpll
fidivs
mov
push
dec
arpl
fdivrs
mov
or
lret
mov
xchg
jle
mov
std
dec
push
sub
fdivl
int
cmp
pop
push
shlb
mov
test
xorb
push
add
or
cwtl
or
pop
push
jb
arpl
sbbl
lock
je
cltd
packuswb
push
sub
test
sti
dec
testb
xorl
sbb
mov
out
mov
jne
add
dec
xchg
mov
mov
mov
hlt
in
mov
or
sub
sub
daa
lds
sub
push
push
mov
jnp
lock
fstl
mov
add
adc
add
hlt
popa
mov
out
push
cvttps2pi
mov
adc
roll
cmp
inc
sti
in
xchg
popf
loop
add
and
lock
adc
cmpsb
in
xorl
in
outsl
sub
or
add
mov
adc
lea
dec
mov
imul
mov
out
pop
enter
mov
sbb
jb
scas
adc
pop
adc
rcr
and
out
inc
pop
decb
push
mov
pop
xchg
test
jb
jae
lock
sub
cmpsb
je
cltd
xor
or
mov
lret
incl
ret
insl
pushf
lods
jge
jg
das
loopne
adc
jns
cmp
xchg
pop
xchg
cmp
rolb
adc
sub
lock
sub
stos
push
xchg
sub
cmpsb
lods
adc
rolb
imul
test
and
xor
movsb
insb
inc
push
inc
dec
jae
ja
jmp
rcrb
cmp
jle
adc
loop
pop
arpl
and
cmc
out
sub
xchg
scas
add
outsb
hlt
das
xchg
fcomip
addr16
ret
fnstsw
sbb
mov
sub
and
jae
adc
inc
adc
dec
cmp
cmpsb
sub
lods
dec
out
push
push
mull
push
push
adc
xchg
adc
test
or
adc
push
push
fs
popa
inc
push
dec
ret
cmp
inc
mov
dec
test
and
fisttpll
xchg
dec
adc
aaa
fidivrl
dec
push
lock
mov
inc
addr16
aam
cmpl
out
pop
cmpsl
addr16
sub
test
das
add
cmp
outsl
cmpsb
or
jb
scas
cld
xchg
xor
ror
cmp
xor
andb
sub
mov
cmpsl
notb
cmp
or
push
mov
daa
inc
outsl
cmc
add
addr16
and
mov
mov
out
aad
push
imul
xchg
ljmp
popa
sti
outsb
mov
dec
dec
mov
lds
repnz
lahf
addr16
popf
int3
shrl
jp
adc
jne
aaa
or
aaa
add
out
or
cmp
xchg
jne
addr16
inc
mov
mov
lea
out
and
pop
cwtl
insb
mov
add
ljmp
jl
or
cld
lahf
std
cmp
mov
inc
outsl
push
inc
movsl
loope
out
sub
xchg
pusha
mov
jae
jne
cmpb
nop
icebp
inc
inc
ret
and
insb
and
sbb
cmc
adc
add
test
or
xor
jo
xor
inc
data16
push
dec
sbb
mov
lods
cmpsl
icebp
sbb
mov
sub
jg
je
aas
sub
gs
in
pop
out
movsl
cmp
movb
sti
sahf
mov
mov
in
dec
add
lods
faddp
ljmp
and
sub
call
cmpsl
xchg
or
dec
lea
enter
wrmsr
insb
jnp
mov
adc
lds
dec
push
jo
mov
jb
lods
adc
nop
jle
fiadds
out
inc
sub
jo
ds
push
sbb
dec
mov
mov
inc
jg
adc
rcrl
rorl
jp
or
push
jg
cld
hlt
jle
mov
pop
pop
movsb
mov
mov
push
loopne
ja
ss
in
lock
push
adc
adc
jbe
dec
cmp
xor
adc
aaa
add
dec
cs
dec
mov
ja
cmpsb
xor
push
dec
test
mov
dec
data16
mov
inc
cltd
sarb
xchg
inc
sbb
push
fwait
sub
out
rcrb
stos
lds
jo
jns
adc
jne
dec
sbb
mov
testl
popa
inc
filds
or
pop
add
pop
xchg
fwait
add
gs
cmpsb
push
push
je
loop
xchg
mov
cmpsl
into
cmp
jge
inc
es
mov
int3
insb
vminps
ret
call
out
addr16
daa
push
cli
xchg
jb
test
cmp
or
jne
lock
push
sti
leave
xor
popf
mov
pushf
xchg
cmp
sahf
aas
sbb
inc
bound
bound
jo
push
ljmp
pop
inc
hlt
push
ja
ret
in
xchg
gs
adc
imul
xchg
sub
xor
mov
imul
adc
js
daa
pop
jcxz
or
pop
test
dec
dec
and
and
dec
jo
xlat
dec
cmpsb
in
mov
cmp
push
sbb
or
es
rorb
mov
shl
test
vpcmpeqw
pushf
sbb
ja
out
mov
add
inc
mov
loopne
pushw
cmp
jmp
outsl
aad
mov
jge
inc
insb
out
es
jg
outsb
arpl
insb
mov
cltd
into
cmovns
mov
cli
ret
xchg
addr16
jp
pusha
push
or
fbld
out
xchg
or
push
cmp
je
enter
jp
mov
stos
shlb
addr16
mov
sub
test
fnstsw
xchg
shrl
sub
ret
ds
adc
cmpsb
sahf
jne
test
dec
add
xchg
lahf
outsb
outsb
pop
out
out
shll
cmp
inc
adc
outsl
jns
cmp
add
test
xor
adc
inc
insb
inc
pop
or
sub
pop
sbb
or
je
or
or
arpl
roll
outsb
push
push
imul
cmp
inc
les
js
mov
cmp
scas
idiv
mov
dec
pop
fs
mov
int
cmp
jb
les
jg
ror
pop
mov
movsb
loope
mov
rorb
popa
outsl
in
aad
sub
rcrl
push
sbb
or
out
push
nop/reserved
pop
mov
mov
add
xor
xlat
adc
ja
out
ds
in
mov
mov
imul
xor
in
es
jae
imul
sbb
insl
test
gs
loop
sub
lods
sub
inc
add
pop
incl
add
push
psubsb
xor
repz
out
daa
ret
mov
add
mov
xchg
push
lods
push
int3
sub
add
outsl
push
xor
jp
jne
popf
inc
cltd
test
nop
das
cmp
pop
xchg
pop
insl
inc
insl
iret
ss
inc
add
xchg
inc
cmpsl
mov
xchg
xor
insl
call
adc
insl
in
mov
mov
je
cmpsl
shll
aas
xchg
dec
jno
inc
lea
mov
in
std
insl
xchg
outsl
mov
jb
lods
les
cmp
and
popf
je
and
jbe
int
faddl
sbb
out
outsl
add
psadbw
inc
fs
push
fs
loope
das
ret
outsl
ficoml
shll
add
out
in
mov
inc
add
pop
jecxz
adc
rcll
jge
arpl
outsb
add
dec
fs
pop
sub
mov
pop
mov
jl
hlt
pop
jmp
in
push
pusha
shlw
jb
mov
mov
sbb
outsl
pop
rorl
cmc
or
pop
dec
in
or
cmc
jp
bound
xor
xchg
adc
icebp
mov
xchg
int
xor
xor
insl
pop
ret
xchg
cmp
std
out
jmp
loopew
fimuls
adc
pusha
insl
jg
dec
or
insl
fsubrp
jbe
insb
scas
mov
jns
dec
pop
arpl
testb
mov
adc
or
pop
ja
loopne
mov
or
jp
pop
pushf
pop
inc
xchg
cmp
cmp
mov
sub
jae
mov
aam
sbb
cmp
inc
je
and
in
test
mov
in
add
xchg
xchg
or
sub
and
pop
xchg
or
or
addb
and
hlt
mov
hlt
dec
mov
xor
ja
push
xchg
xor
push
push
pshufw
out
imul
jae
push
adc
repz
xor
ret
mov
push
movsb
adc
xor
fst
ds
ret
fisttps
out
call
int3
dec
fiadds
ror
je
movsb
xor
jne
mov
aam
loopne
inc
scas
out
js
outsb
aas
in
cltd
pop
sub
push
orb
sbb
ficoml
mov
int3
sub
adc
out
in
addl
lds
pop
les
sub
inc
loopne
les
add
icebp
mov
sbb
xor
addl
lds
popa
daa
push
ljmp
fwait
dec
push
or
or
xchg
mov
mov
arpl
pop
xchg
clc
imul
cmp
sbb
outsb
subb
xor
ret
inc
mov
ljmp
outsl
enter
mov
and
dec
jnp
push
jo
mov
pop
and
jnp
pop
push
scas
loope
ds
lds
mov
mov
das
je
lret
cmp
out
sbb
call
outsl
pop
aad
aam
xchg
icebp
jns
aas
pop
cmpsb
push
stc
inc
ret
insl
loop
dec
out
addr16
out
add
das
lahf
dec
int3
call
jnp
jnp
xor
xor
xor
xchg
aas
les
sti
add
pop
add
cli
js
jl
xchg
cmp
pusha
sbb
cmpsb
das
jle
sti
push
push
lods
movsb
push
call
das
mov
pop
cmp
js
jbe
mov
mov
mov
xor
call
das
and
pop
ljmp
inc
ja
cmc
in
mov
lock
inc
js
in
pop
stos
sub
inc
and
mov
pop
js
mov
xor
dec
icebp
push
xor
cs
imul
out
gs
das
cmp
cmp
pop
rep
lock
sub
inc
sub
in
and
loopne
mov
testl
cmp
push
and
mov
clc
in
jbe
hlt
pop
repnz
scas
sbb
mov
mov
inc
cmp
dec
xchg
aas
loopne
xlat
shll
push
push
push
dec
outsl
dec
cs
push
xor
jmp
sti
in
cld
inc
out
pop
push
xor
ds
jmp
stc
jmp
or
jo
pop
ret
dec
jb
lock
push
insl
les
nop
test
jecxz
out
lahf
popa
imul
out
in
sub
mov
fcmovnbe
lcall
les
mov
sub
inc
outsl
adc
in
mov
dec
xor
sub
stos
jg
ja
lret
sub
jmp
sub
dec
test
arpl
dec
cmpsl
cmpsb
dec
ret
call
jae
xchg
fisttpll
jl
movsb
lret
push
fnsave
jle
or
sub
dec
std
imul
cmpsb
sub
xchg
mov
aad
fildll
add
popf
xlat
dec
cmc
jno
mov
dec
or
stos
fistl
clc
push
xor
loop
adc
mov
int
sahf
int
add
and
inc
fwait
sub
push
loop
push
outsb
daa
stos
in
pop
outsb
call
inc
pop
popa
in
dec
mov
mov
inc
mov
outsb
sub
rclb
icebp
inc
add
int
jle
scas
or
andb
add
imul
test
addb
outsl
sbb
cmp
mov
ret
add
and
inc
test
sub
mov
fcomi
cwtl
call
sub
outsb
out
add
decl
adc
std
add
movsb
or
out
push
es
out
ljmp
into
enter
and
je
fs
ljmp
leave
scas
out
sub
mov
jbe
fs
into
mov
loopne
out
pop
enter
fs
repnz
dec
imul
loop
jmp
outsl
dec
iret
ljmp
insl
add
int3
insb
outsl
pop
or
mov
punpckhwd
dec
push
push
idiv
fiaddl
icebp
bound
or
mov
inc
mov
mov
scas
iret
in
cmpsl
inc
call
inc
cmpl
test
jecxz
dec
loopne
out
and
out
out
pop
in
mov
lods
jl
fsin
in
jns
jg
in
test
push
in
inc
mov
outsb
ljmp
mov
sub
bound
out
jb
loopne
mov
push
dec
arpl
call
ret
cld
imul
dec
out
and
popf
sar
xor
sub
lret
push
insl
insl
cmp
out
aam
pop
mov
outsl
out
jmp
dec
or
push
add
pop
das
out
jp
sub
jcxz
mov
int3
mov
mov
dec
in
dec
jecxz
loopne
fs
xor
inc
or
outsb
movsb
sub
lret
dec
ljmp
sub
movl
push
insl
add
addr16
sub
mov
add
dec
pop
jnp
push
lods
das
ss
iret
sub
mov
outsl
xor
gs
and
jns,pn
add
xorl
sub
add
add
imul
add
lret
add
mov
out
es
mov
lock
shr
into
and
pop
cmp
in
insl
insb
insb
mov
and
dec
and
add
divl
sbb
ja
cmc
rcl
xchg
mov
pusha
fcmovne
stos
cmpsl
dec
or
hlt
or
repnz
mov
ret
movsb
int
inc
jb
stos
faddl
or
call
jne
pop
jo
sbb
ss
jg
pop
insl
leave
pop
loopne
inc
in
sub
push
and
and
subl
ja
pop
cmp
dec
pusha
pop
call
mov
inc
cmpsl
and
mov
and
xchg
mov
pushf
jb
std
cmc
jnp
push
add
jo
popf
in
and
call
sbb
div
ret
mov
jnp
mov
dec
mov
lret
es
jge
std
movsl
mov
push
fcoml
xor
ret
mov
shlb
sarl
dec
or
push
outsb
pop
jmp
icebp
inc
test
scas
sbb
sub
xchg
cmpsb
subb
test
imul
mov
jmp
add
push
sahf
jo
inc
es
mov
xor
adc
xor
sub
lret
test
ret
les
xor
repz
push
stos
push
push
sub
add
in
mov
iret
mov
clc
mov
xor
fs
dec
arpl
aam
sub
in
add
addr16
outsl
pop
and
ds
mov
in
es
clc
push
adc
ret
int3
add
sub
fcomip
sti
add
in
and
in
test
mov
lret
out
dec
test
mov
push
dec
jne
test
lret
push
int
dec
jecxz
outsl
push
push
out
dec
push
lret
mov
push
lds
dec
stos
sub
or
call
ljmp
or
mov
aad
push
test
push
jbe
imul
mov
add
testl
push
xor
data16
dec
xor
stc
out
jb
bound
sahf
ret
sub
push
call
insb
pop
jne
int3
lods
sbb
add
sarb
lret
ljmp
insb
movsb
out
ret
dec
xchg
das
sub
fnstsw
mov
mov
ret
mov
mov
dec
cmpsl
jmp
test
ljmp
cli
mov
jmp
dec
jmp
xorl
into
mov
repz
cmp
in
push
and
jmp
ljmp
test
imul
and
adc
lea
fucom
aaa
daa
pavgb
cmp
clc
arpl
sbb
cmc
jl
mov
add
sub
mov
insb
inc
dec
out
les
and
push
add
lret
leave
movsl
sub
sub
test
cli
inc
in
xor
test
add
jmp
jno
sbb
inc
in
dec
pop
jecxz
mov
out
lods
fldcw
pop
call
loop
arpl
jae
push
addr16
mov
xchg
push
andb
je
arpl
loop
int
mov
xor
outsl
lea
fabs
fisttps
dec
mov
xor
push
push
push
add
mov
outsb
out
arpl
les
aaa
inc
movsl
fadd
pop
int3
test
cmpsl
inc
ret
int3
and
addl
xor
int
scas
in
lock
shrl
dec
andl
les
popa
dec
add
ljmp
das
jmp
mov
pop
and
cmp
mov
mov
mov
and
lods
loop
pop
out
ffree
test
or
xor
enter
lea
sbb
outsb
xlat
lods
jb
xchg
loope
dec
mov
sub
in
push
xchg
mov
testl
in
int
cmp
stos
addr16
sub
in
cmc
mov
fsubrl
popf
xchg
xchg
insl
pop
lcall
sub
into
cmpsl
push
push
mov
xchg
mov
enter
jp
xor
std
mov
or
sub
aam
insl
add
push
pop
loop
out
loopne
cmpsb
lods
cmp
cmp
popa
sub
test
loopne
xchg
leave
insb
aas
arpl
fwait
insb
sub
test
jae
decl
js
adc
xchg
out
jnp
hlt
int3
mov
or
ror
std
sub
jg
rorl
data16
jg
sbb
iret
out
sahf
adc
aad
mov
pop
out
je
lods
jmp
inc
or
xchg
addr16
mov
in
or
cmpsb
aas
sub
shlb
dec
addr16
ret
shrb
fs
daa
lods
or
daa
out
fwait
dec
dec
clc
and
xchg
out
push
pushf
insb
cli
jmp
pusha
loop
mov
addr16
push
xchg
das
ljmp
aaa
push
dec
lods
push
mov
or
imul
rol
or
fs
cmp
roll
pop
out
pop
or
inc
or
pushf
inc
push
out
cmpsl
dec
test
data16
daa
mov
jmp
mov
div
shrl
scas
lock
imul
movsb
or
popa
mov
es
inc
jmp
jae
addr16
js
inc
push
adc
sbb
in
cld
mov
cld
fisubrs
pop
inc
mov
popa
cs
andl
mov
insl
je
or
sti
aas
int3
sub
pop
mov
in
adc
mov
fs
imulb
in
and
loop
or
addr16
adc
push
out
pop
ja
pop
sub
in
pop
fs
in
arpl
pop
imul
inc
imul
in
les
cltd
ss
shlb
sarb
lods
jo
xchg
pop
in
and
xor
movsl
pop
in
ret
inc
add
mov
insl
hlt
inc
pop
call
gs
fs
and
jno
dec
aas
xchg
mov
lods
inc
popf
in
jmp
ljmp
call
push
adc
addr16
xchg
out
stos
in
imul
cld
hlt
mov
push
hlt
ret
dec
iret
mov
adc
adc
pop
lret
jno
stos
insl
std
xchg
repnz
sbb
xor
fldt
daa
lods
in
mov
enter
cld
aas
shlb
test
cmpsl
dec
stos
jmp
data16
sti
xchg
adc
xchg
in
jae
push
sti
add
hlt
repz
addr16
aas
lret
push
iret
in
dec
rorb
and
insb
movsbl
in
cmp
mov
or
sub
lds
jmp
stos
outsb
inc
xor
sbb
cs
cmp
jecxz
loopne
xchg
mov
mov
gs
test
es
jmp
insl
ret
sub
pop
pop
sub
loope
mov
insl
movsl
cmp
and
popf
in
int3
sub
gs
in
push
aaa
mov
sub
repnz
in
scas
imulb
data16
pop
jge
mov
daa
call
mov
movl
dec
cmpsl
enter
and
icebp
xlat
orb
jae
daa
jns
test
out
out
shrb
outsl
inc
frstor
outsl
cld
jne
daa
shrl
pop
scas
in
dec
cmp
insb
test
jne
pushf
jne
popf
pop
mov
icebp
xchg
pop
pop
gs
mov
daa
sbb
mov
dec
cmpsb
fsubrs
mov
dec
leave
repz
mov
es
pushf
out
in
or
popf
rorb
daa
ss
in
cmpsb
clc
cmp
fs
sbb
xchg
push
mov
out
ret
add
cli
xor
mov
jb
mov
xchg
fmuls
cli
add
mov
cmpsl
cld
inc
push
in
scas
in
jg
in
dec
test
stc
adc
nop
xor
jo
int
pop
dec
in
repz
sub
test
cmp
hlt
lea
ds
pop
std
js
call
cld
imul
and
daa
enter
xchg
add
mov
jge
dec
jne
lret
cmp
add
lods
mov
sub
or
jnp
inc
outsb
mov
lods
loopne
shl
insl
ds
aad
roll
fbld
clc
mov
mov
push
lods
ds
or
int3
sbb
out
sub
ja
push
cmp
je
imul
imul
lods
pop
pop
daa
in
mov
pop
loop
ret
sbb
fs
movsl
lret
icebp
ret
push
dec
inc
push
fs
inc
insb
mov
daa
insb
fcmovnbe
cli
sub
imul
mov
jg
pop
rclb
test
mov
xor
and
fdivrl
addr16
push
out
out
andb
hlt
xchg
and
dec
cmp
mov
xor
rcrl
icebp
clc
out
mov
stos
ljmp
js
sub
test
sub
out
ret
popa
xor
std
ljmp
aaa
scas
xor
mov
stc
sub
ret
jmp
enter
and
cltd
cld
in
inc
sub
mov
add
mov
inc
push
out
mov
repz
and
test
insb
inc
dec
lret
ret
or
pop
sub
add
adc
jb
jle
sub
xchg
dec
and
leave
jecxz
int3
insb
fstpt
in
in
aam
or
xor
dec
js
push
shl
cld
mov
clc
in
in
ficomps
jnp
dec
pop
imul
mov
rcll
mov
push
adc
pop
push
cli
inc
inc
into
ljmp
test
mov
cmpl
ljmp
in
inc
mov
xlat
sub
out
lret
cmp
repz
popa
pop
mov
sbb
in
ja
pop
out
in
or
cmp
addr16
arpl
dec
sbb
adc
xchg
sub
cwtl
outsl
push
in
ljmp
fimull
imul
loopne
ror
iret
cs
pop
arpl
sub
xchg
imul
lahf
jg
add
xchg
and
outsb
enter
out
repz
aaa
adc
fstpl
inc
test
add
daa
cli
ja
push
ret
fcom
ljmp
pop
pushf
inc
add
mov
cmp
out
push
test
xor
adc
ja
bound
xchg
popa
sahf
movl
cli
ljmp
or
dec
jo
xchg
sbb
lret
xor
cmp
pop
xor
test
ss
jg
imul
dec
add
lret
jmp
push
test
aaa
sbb
std
fidivrs
xchg
mov
pop
test
inc
stos
outsl
mov
inc
fldt
or
mov
xor
mov
lret
or
insl
jbe
dec
cld
pop
mov
int3
fistps
dec
mov
insl
mov
test
aam
jp
xor
pushf
fs
fs
popf
xor
aas
inc
stc
lret
mov
pop
stos
in
sub
xchg
insl
fadds
imul
or
repnz
lret
imul
cltd
or
sbb
insb
sbb
ljmp
jmp
lret
fcmovb
jmp
in
lret
movsl
push
test
in
int3
sub
ljmp
data16
sarb
leave
rorl
adcl
dec
xor
loopne
lods
std
add
insl
ss
cli
test
loopne
cmp
inc
sti
out
inc
imul
add
xor
xchg
sti
adc
mov
pushf
dec
fsubrs
jnp
mov
rcr
xor
addr16
sub
sbb
imul
fs
adc
sub
fwait
inc
sub
gs
cmp
pop
arpl
lods
repnz
dec
jg
cmp
dec
icebp
pop
inc
out
arpl
or
push
pop
mov
aaa
rcr
movl
leave
xor
jno
repz
or
dec
dec
push
in
cmpsb
mov
ret
adc
mov
jg
adc
outsl
aam
cmp
mov
pushf
in
add
cmp
push
xchg
pop
das
inc
sub
add
inc
sarb
sub
in
jle
daa
cli
jbe
inc
xor
enter
aam
jl
inc
cmp
out
mov
add
shlb
jmp
data16
mov
mov
add
test
hlt
loop
xchg
scas
or
jae
push
mov
xchg
test
push
mov
cmp
ja
call
movsbl
dec
insb
loop
push
cmp
outsb
in
bound
mov
lcall
in
lods
int3
ret
mov
jge
icebp
loop
jmp
ja
jg
data16
and
jnp
push
pusha
or
inc
add
pusha
or
mov
dec
lods
out
in
push
mov
cltd
sarl
push
movsl
xor
in
xchg
cmp
add
in
pop
das
xchg
push
xlat
stos
popa
aas
lcall
int3
imul
or
push
clc
jge
stc
mov
and
push
and
sub
sub
jg
pop
jmp
dec
repz
jnp
pop
jg
movsl
ret
data16
mov
push
shrb
ret
cmpsl
daa
pop
sbb
outsl
cli
jl
sub
addr16
loope
aas
inc
dec
dec
sub
movsl
xor
enter
add
loopne
push
cs
mov
stc
cmpb
aam
or
ret
fwait
sti
cld
dec
cmpsl
sbb
arpl
insb
ror
imull
jge
cmp
cli
pop
out
mov
inc
scas
call
cli
pusha
ss
cmp
in
xor
add
ja
or
sbb
inc
rcll
aam
out
test
je
sahf
sar
stos
mov
mov
int3
fwait
cs
in
int3
inc
inc
mov
hlt
cmpsb
fildll
in
adc
sbb
leave
imul
mov
call
sbbb
jno
xchg
stos
lret
push
mov
mov
inc
cmpsl
inc
in
test
sub
idivb
cld
std
jb
test
fcomip
mov
aaa
cmp
inc
out
lret
inc
enter
cltd
insl
fcoml
aaa
lahf
subl
lock
or
and
imul
xchg
int3
mov
ljmp
mov
int3
pop
or
jg
ret
or
popa
cld
cmp
cmp
sahf
dec
in
loopne
repz
or
insb
outsb
fildl
dec
ja
mov
add
inc
xlat
cld
push
mov
xchg
iret
lock
outsl
mov
pop
mov
shl
iret
push
insb
jno
xchg
aaa
push
call
mov
outsb
mov
test
push
dec
in
ja
mov
pushf
fdivp
dec
repz
push
fisubrs
mov
mov
enter
jmp
xchg
add
xor
sub
in
jg
pushf
xchg
addr16
inc
mov
loop
add
aaa
sub
mov
fadd
jbe
test
imulb
push
call
sub
in
dec
mov
or
sahf
or
jmp
insl
sub
xchg
lea
lret
cmc
xchg
repnz
xchg
aas
adc
jbe
ret
mov
movsl
movsl
daa
jae
popf
cli
jbe
xor
mov
lock
lods
in
cmp
test
fisubs
js
pop
cmp
sbb
aas
je
cld
or
xchg
je
ljmp
std
cld
xchg
imul
adc
pop
dec
and
mov
shr
xor
into
rorb
inc
daa
decb
push
xchg
in
xlat
cs
mov
inc
and
out
fwait
inc
lock
movsb
sbb
addr16
jg
adc
loop
daa
ss
mov
add
lahf
incb
or
pop
aas
into
and
out
and
dec
aaa
cmp
mov
out
out
lods
out
pusha
xlat
adc
mov
lcall
incb
call
adc
sub
fdivrl
fsub
xchg
mov
mov
inc
std
divb
ret
mov
adc
push
out
cmc
cltd
ds
adc
les
push
jecxz
clc
mov
mov
dec
jb
call
push
in
mov
mov
dec
xchg
jmp
and
mov
rorb
dec
jge
loope
and
test
ss
jge
jbe
cmp
ret
jne
inc
sahf
fistpll
push
insb
shrl
jmp
push
loop
xor
inc
jmp
and
cmc
xor
arpl
pop
es
push
into
ficoms
mov
cld
mov
cli
dec
insl
leave
repz
in
test
cmp
ljmp
xor
adcl
or
push
push
cmp
jno
inc
pop
mov
ja
pusha
push
mov
outsb
call
push
add
insl
hlt
fdivr
lock
cmp
push
in
or
cmp
adc
xchg
xor
and
add
sub
jb
cld
pop
push
bound
test
test
xchg
mov
jnp
lds
jmp
adc
ret
ljmp
filds
jmp
test
lahf
push
test
inc
pop
cmc
lock
jp
fcmovne
xchg
leave
sti
cld
lcall
jae
pop
pushf
add
imul
push
cmpsb
insb
adc
pop
pop
dec
notb
push
xchg
xchg
loopne
pop
xchg
test
mov
sahf
les
es
and
lahf
out
enter
xchg
rol
or
addr16
in
lds
sbb
push
and
and
pop
out
in
out
sub
arpl
jns
ror
push
push
pushf
mov
les
std
or
push
mov
gs
icebp
mov
fsubrp
je
or
xchg
insl
scas
ror
data16
pop
mov
outsl
int3
mov
push
sub
in
std
cmp
xor
or
lret
xchg
cld
subl
insb
daa
sub
outsb
rol
and
addr16
aam
jp
add
clc
mov
or
addr16
sbb
mov
xchg
pushf
imul
xchg
and
outsb
and
addl
pushf
inc
test
sub
insl
cld
pop
dec
xchg
adc
push
sarb
or
lcall
dec
out
stc
sub
stos
repz
mov
jbe
pop
nop
scas
cld
and
insb
sbb
mov
push
clc
xor
xor
fisttpll
stos
lea
pushf
cwtl
out
js
enter
sub
add
adc
popf
cli
jne
push
pop
loopne
ret
in
or
or
in
aas
fistl
mov
push
in
or
xor
or
fdivl
mov
das
outsl
icebp
loope
push
mov
inc
add
stos
movsl
jmp
loope
call
leave
jmp
sahf
popf
in
test
std
ret
jle
imul
xlat
fucomp
stos
dec
jg
clc
nop
cmp
in
loope
pop
mov
out
add
aam
lcall
xchg
xchg
stc
inc
dec
fsubr
sub
in
xchg
lret
cltd
fs
push
dec
ss
jge
push
mov
addl
push
add
add
pop
in
fsubl
jo
scas
or
xchg
cmp
loop
mov
fisubrs
mov
sub
lock
pop
add
pop
add
imul
xchg
cli
cmp
jnp
loope
movsl
enter
pop
cmpsl
push
loopne
loope
add
push
es
ss
mov
fmul
pop
gs
and
loope
dec
dec
dec
sbb
cli
cli
test
sub
inc
in
mov
sbb
push
test
in
push
fcoml
xchg
mov
sbb
cmpsl
lahf
jae
test
out
test
pop
push
outsb
fs
cli
inc
outsb
add
mov
xchg
xchg
das
mov
mov
fisubrl
jb
hlt
push
push
inc
aaa
cmpsb
jmp
push
ja
addr16
popf
das
jnp
inc
imul
xchg
test
mov
in
xor
test
push
sar
and
aaa
xchg
aas
shll
mov
std
xchg
xlat
jne
dec
stos
fucomp
mov
aam
jmp
es
leave
add
sub
les
ja
jp
loope
xor
arpl
cmp
push
jno
mov
add
cs
aas
mov
out
js
enter
fcoml
les
xchg
push
loope
daa
xchg
push
cli
jle
clc
loop
mov
xor
andb
hlt
pop
outsb
sbb
rcll
int3
dec
sbb
or
jle
stos
inc
outsb
xchg
dec
insb
daa
or
inc
inc
test
xchg
ja
adcb
cmp
repnz
scas
cmp
into
insb
dec
in
dec
mov
outsb
xor
icebp
sti
js
fucomp
pop
pop
and
subb
cmc
jecxz
jo
in
loop
mov
int3
out
lret
insb
mov
mov
mov
lods
insl
test
sub
push
ja
in
in
mov
xchg
stc
stc
loopne
aaa
dec
lret
js
in
rorl
lds
data16
xor
inc
jns
out
mov
cmp
push
test
xchg
xchg
mov
insb
mov
aaa
jl
sahf
stc
jl
stos
arpl
test
insb
cld
push
lds
dec
mov
and
das
cwtl
jbe
pop
outsb
or
cltd
mov
std
mov
xchg
push
mov
ss
es
fsubr
cli
mov
orl
xchg
mov
mov
xor
cmpsb
pusha
loop
incl
pop
lds
stc
mulb
pop
ljmp
mov
stos
in
enter
sahf
cmp
xchg
sub
or
sub
push
incl
cmp
fcomip
stos
orl
or
test
adc
jbe
inc
fldcw
lcall
data16
adc
adc
mov
push
sahf
jmp
cmp
insl
pop
sahf
lea
in
fldcw
ret
mov
ss
int3
inc
repz
mov
xor
push
cmp
lret
push
adc
aam
mov
ljmp
sub
loop
mov
mov
daa
cmp
sahf
mov
xor
in
int3
sarl
scas
mov
dec
push
adc
les
cmp
loopne
cltd
ljmp
lods
ljmp
adc
rcr
sub
and
scas
orb
mov
into
data16
add
mov
cmpsb
loopne
mov
aas
dec
sahf
shll
inc
lret
fwait
mov
dec
lods
addl
jle
mov
daa
cmc
xchg
aaa
in
and
lret
hlt
dec
cmp
inc
repz
movzwl
mov
jmp
mov
xor
stos
or
mov
jp
insl
ss
inc
mull
xchg
mov
jl
fldl
out
xor
imul
lock
std
stos
mov
xor
or
loop
sar
rclb
cli
xchg
popa
mov
int3
cwtl
push
sub
ljmp
cmpsb
popa
loop
xchg
pusha
fsubs
pop
jbe
jb
mov
xchg
pushf
out
mov
fildl
xor
sub
and
int3
out
mov
es
enter
repnz
lods
insl
dec
dec
bound
push
stos
or
and
sbb
addr16
outsl
lcall
repnz
pop
outsb
cld
xchg
leave
dec
outsb
ret
adc
out
push
adc
cld
push
jg
xchg
sti
enter
push
pop
shr
fbstp
int
loop
mov
scas
insl
xchg
daa
scas
fisttps
data16
inc
jmp
loop
in
sar
sub
pop
jle
dec
mov
negb
and
push
jl
dec
pop
push
les
sbb
jo
cmp
xchg
xor
ficompl
push
jo
addr16
sub
jmp
ds
popf
out
lcall
cmp
inc
pushf
push
ja
test
idivl
mov
cltd
and
test
and
ja
cli
mov
xchg
xchg
rcl
addr16
jb
popf
les
faddl
repnz
mov
and
push
repnz
inc
jbe
in
fiadds
xorl
pop
add
fidivrs
aam
psubsb
loop
xchg
scas
push
xor
call
sub
push
and
ja
mov
pushf
cmc
pop
jp
fldcw
in
push
or
sub
lret
mov
xchg
imul
dec
in
aaa
test
mov
inc
movsl
leave
jecxz
mov
pop
in
paddb
cmp
loope
mov
push
push
insl
shrb
mov
add
xor
fbstp
stos
or
cmpsl
mov
inc
stos
sub
pop
ret
outsb
aaa
jp
ficompl
mov
inc
daa
orb
data16
loopne
sahf
push
or
loop
push
sbb
in
or
mov
inc
sub
push
mov
out
cld
or
pop
movsl
out
mov
aam
push
mov
dec
jecxz
std
dec
insl
pop
xlat
jl
pop
lock
insb
loope
sub
sti
popa
aam
in
out
jp
adc
pushl
shll
scas
sub
fmull
icebp
aas
sti
jg
jp
push
rcrb
xor
cld
push
fxch
jmp
inc
ds
ja
mov
push
mov
push
xchg
repz
adc
push
outsb
fcoml
ljmp
jb
repnz
out
shl
repnz
leave
insb
and
push
pushf
dec
clc
shr
mov
stos
jecxz
ss
cmp
cld
mov
inc
inc
jmp
push
sbb
test
adc
cmp
cmpsl
fdivrs
sbb
cmpsb
mov
push
aad
in
dec
sti
mov
es
pop
push
in
push
lea
fisubrs
or
mov
mov
pusha
lds
sarl
arpl
inc
dec
mov
notl
dec
xor
and
gs
loop
cmp
xchg
cmpsb
addr16
inc
jnp
pop
in
lret
stos
std
std
jae
out
int3
xbegin
into
pop
or
imul
xor
adc
ljmp
and
ljmp
or
push
jae
sbb
push
mov
iret
fcmovb
outsb
dec
cld
and
ja
cmpsb
cld
loop
out
sti
movb
push
xchg
pop
jle
daa
or
testl
out
dec
aas
loop
xor
stc
jle
push
roll
cmp
jle
insl
mov
insl
mov
loopne
dec
xchg
or
mov
or
pop
outsl
pop
scas
insl
test
repnz
hlt
and
out
daa
jp
fildl
jmp
and
lcall
out
bound
or
inc
out
stos
add
or
movsl
jle
cmpsb
ror
idiv
xor
sub
jmp
mov
mov
scas
or
ss
into
call
xchg
adc
insb
cmp
lcall
inc
sbb
sbb
and
loopne
movsl
mov
sub
adc
xchg
jnp
dec
cmpsl
imul
fstpt
daa
inc
push
je
mov
mov
cmpsl
stos
arpl
pushf
inc
push
mov
cmpsb
arpl
stc
pop
aaa
add
push
xchg
out
ja
out
cli
js
sub
xor
insl
fimuls
das
push
loop
pusha
sub
int3
daa
pusha
xor
ss
adc
ss
cwtl
ss
lds
shll
loop
xchg
loop
sarl
push
push
cmp
adc
mov
sub
mov
dec
mov
mov
xchg
popa
fildl
je
js
xor
jnp
scas
push
repnz
fnstsw
jbe
insb
enter
mov
pop
jge
cmp
lcall
in
ja
hlt
sbb
aad
sub
jg
pop
lds
fldt
cmp
rcrb
push
xor
lds
add
jno
cwtl
jae
inc
popf
push
pushl
mov
mulb
lea
mov
in
mov
jp
fwait
pop
xchg
adc
shl
ficompl
mov
pop
lahf
xchg
push
pop
cwtl
mov
inc
cld
call
inc
adc
or
push
sub
mull
jg
sub
dec
jecxz
mov
cmp
out
adc
repnz
je
cltd
enter
adc
inc
les
clc
sbbl
xchg
add
pop
mov
pop
fldcw
mov
mov
xor
push
sub
cmpsl
fisttpl
pop
movsl
jle
cmp
dec
leave
out
inc
shrb
in
aad
push
movl
dec
int3
test
loope
cmpsb
pop
icebp
or
mov
adc
aad
shr
cmp
mov
mov
mov
jl
out
aas
adc
cmpsl
push
jns
xchg
or
mov
or
fldcw
out
shrb
inc
jo
cmp
ljmp
or
lahf
push
xchg
in
mov
popa
fldt
popa
xor
lcall
inc
out
dec
stos
out
jle
loopne
sub
invd
xchg
stc
jo
push
pushl
out
add
scas
push
push
and
insb
mov
fwait
mov
shll
push
ret
lcall
cld
pop
cmpsl
xchg
imul
or
in
shlb
ja
les
lea
sarl
test
neg
xchg
mov
enter
bound
das
cmp
adc
inc
dec
xor
mov
test
aaa
push
insl
repnz
mov
xchg
xchg
ljmp
pop
fimull
gs
cli
pop
cwtl
inc
dec
mov
push
subb
aaa
mov
pop
sub
jbe
idivb
cmp
sub
fs
repnz
mov
xor
mov
imul
or
mulb
cmovs
aaa
cmp
outsl
test
in
hlt
movsb
fisubrl
push
mov
mov
repnz
outsb
xchg
push
hlt
fdivl
lret
icebp
mov
out
in
push
pop
imul
jmp
cmp
loop
sarl
scas
and
pop
test
or
out
in
bnd
sahf
jp
lcall
mov
out
int3
fwait
stc
ficoml
pusha
out
les
jno
xor
pop
push
insl
aam
or
sub
pop
sbb
cwtl
mov
stos
adc
adc
test
fxch
jno
mov
jns
fldz
lahf
xchg
xor
movsl
flds
loope
jecxz
addr16
addr16
fstl
fs
lcall
jae
ja
outsb
pop
out
cmp
in
decb
popf
stc
sub
ss
xchg
leave
jnp
xlat
or
es
gs
jecxz
out
orb
and
aas
jbe
lcall
movsl
mov
out
pop
enter
sub
jb
mov
and
mov
adc
and
adc
add
sahf
fs
sahf
jg
sti
call
pushf
jg
insl
fisubrl
mov
ljmp
imul
and
mov
sub
sti
aad
jl
fnstenv
aaa
outsb
sahf
ss
pop
in
or
mov
popf
test
dec
repz
mov
clc
and
cmpsl
je
fsts
jecxz
push
loope
icebp
rcl
jo
jg
and
sub
xchg
dec
in
sbb
sub
in
mov
push
imul
mov
mov
out
pop
icebp
inc
mov
call
add
mov
adc
push
mov
xchg
mov
outsl
aas
cwtl
lds
sahf
dec
jl
ret
xchg
adcb
ja
mov
mov
and
and
outsl
aas
xchg
in
jb
out
out
outsl
cli
adc
push
and
cmpsb
inc
push
xchg
loope
and
mov
out
int3
mov
push
icebp
rolb
dec
pushf
sahf
inc
bound
out
dec
mov
es
out
outsl
pop
inc
jo
xchg
stos
ljmp
mov
mov
xor
add
fisubl
cmc
repnz
out
xchg
dec
leave
push
out
dec
pop
push
push
ret
dec
adc
out
pop
push
loopne
out
aad
adc
movsl
sbb
in
test
out
bound
inc
repz
push
xchg
cmp
outsl
jmp
mov
daa
lds
pop
push
and
fnsave
mov
sahf
movsb
mov
cmp
in
sub
out
in
nop
fyl2x
lcall
js
mov
out
aad
fwait
sub
pusha
pop
mov
in
lods
in
sub
scas
mov
or
mov
je
mov
loopne
push
pop
mov
sbb
outsl
fs
add
call
lods
sti
daa
in
out
pop
int3
push
mov
cli
dec
test
rorb
fisttps
iret
dec
sbb
js
aas
subl
outsl
js
daa
test
outsb
or
sarb
stc
mov
inc
shll
notb
jmp
into
dec
out
fdivl
mov
loopne
incl
and
repnz
or
jmp
push
sub
mov
in
int3
xchg
or
stos
sub
int
mov
or
subl
add
mov
push
jne
lds
outsl
fprem1
jbe
jp
lock
jl
shrb
pop
mov
loope
nop
in
jo
call
pop
xor
imul
iret
in
clc
push
inc
loope
dec
mov
das
call
das
out
sub
push
imul
mov
inc
outsb
das
std
in
dec
push
callw
inc
sub
call
pop
jne
lods
enter
imul
xor
in
inc
inc
inc
lock
in
in
shrb
pop
mov
je
sub
inc
sti
das
push
in
jg
xor
sub
inc
imul
in
outsb
push
dec
sub
in
dec
push
pusha
call
das
out
into
push
insl
call
dec
jae
xor
cmc
push
push
call
das
int
loope
lods
pop
in
call
das
dec
in
jo
sub
or
jl
int3
das
in
lods
push
out
insb
imul
jbe
sub
icebp
sub
inc
stc
das
push
xor
in
xor
in
lock
imul
das
out
in
xor
repnz
addr16
cmc
xor
mov
ljmp
lods
arpl
jge
push
addr16
clc
mov
outsb
outsl
mov
icebp
pop
orl
dec
stc
jmp
das
mov
loop
ret
jge
test
add
fildll
jmp
push
bound
push
push
push
ja
push
sbb
mov
xor
in
push
mov
in
dec
stc
jmp
inc
pusha
imul
js
push
pop
outsl
cld
and
das
lock
out
rcr
imul
in
cmp
sti
insb
outsl
je
addr16
testl
std
mov
jp
mov
subb
in
outsl
mov
jo
stc
outsl
xrelease
inc
push
iret
push
jge
push
adc
clc
mov
in
mov
imul
jge
mov
cmpsl
push
sbb
xlat
jp
jp
cs
jge
mov
loope
ret
jg
test
mov
in
arpl
jg
fbld
hlt
mov
push
jnp
push
sbb
stos
jg
or
stos
arpl
or
mov
arpl
out
jp
push
or
je
dec
jmp
cli
call
das
loope
mov
pop
imul
sub
lock
or
je
jo
pop
js
lret
mov
das
push
jecxz
dec
pop
addr16
add
push
dec
leave
sub
inc
mov
stc
in
imul
call
das
out
call
sub
imul
in
clc
movsl
xor
pusha
das
or
fs
call
das
xchg
push
inc
daa
das
jl
pop
push
loop
in
cmpsb
das
call
pop
sub
inc
jae
mov
inc
jbe
push
in
jp
in
jle
movsl
inc
gs
test
imul
sub
push
clc
call
das
jle
test
pop
fs
inc
and
push
add
in
pop
jecxz
inc
ret
dec
je
xor
pop
jnp
arpl
incb
loope
and
in
add
sub
inc
outsb
das
mov
subb
bound
inc
and
in
add
pop
loope
fs
das
ljmp
sub
imul
add
cli
push
shr
mov
in
push
sub
sub
push
jnp
fistpll
mov
push
push
pop
insl
inc
aas
das
lock
pop
call
pop
imull
inc
das
sahf
in
loop
jle
gs
inc
insl
das
push
in
lock
dec
inc
popf
das
in
jge
bound
sub
inc
sbb
push
hlt
mov
inc
sti
das
jl
push
cmp
out
inc
ljmp
pusha
icebp
test
call
das
cli
in
pop
push
pusha
call
das
out
fisubrl
pop
mov
lock
jp
hlt
leave
xor
js
cmp
sub
inc
bound
fldlg2
gs
cltd
enter
out
push
dec
cmp
inc
clc
das
jle
fsubrs
pop
mov
out
js
ljmp
outsl
jb
sub
inc
js
xlat
in
jnp
mov
sub
inc
gs
push
in
call
sub
sub
push
clc
call
das
jg
push
push
in
push
imul
push
repz
sub
inc
stc
das
push
in
std
push
adc
imul
mov
out
sub
call
das
cli
in
xor
pop
adc
loop
repz
rorl
in
enter
jae
hlt
mov
pop
js
xor
sti
adc
das
repnz
loop
rcrb
sub
inc
insl
das
jb
lock
dec
xor
inc
icebp
das
jg
shrl
pop
mov
gs
push
lock
lds
jae
stc
jl
out
jo
lock
jp
shr
jle
mov
popa
sub
inc
addr16
push
in
ljmp
mov
sbb
clc
mov
sub
jl
jp
dec
clc
jecxz
dec
das
out
das
push
inc
out
dec
repnz
fs
scas
push
jge
outsb
pusha
inc
dec
das
jecxz
cs
jmp
in
mov
int
repnz
pop
imulb
inc
jge
dec
in
pusha
push
or
jmp
sub
sub
push
clc
call
das
pusha
in
jmp
fs
lret
sub
inc
mov
out
mov
repnz
mov
jbe
sub
sub
inc
bound
lret
push
mov
push
dec
sub
inc
jmp
push
popa
call
das
addr16
dec
push
insl
call
dec
je
xor
in
ja
test
jnp
mov
std
push
in
fs
or
ljmp
dec
sub
call
das
sti
in
inc
push
call
das
out
push
outsb
enter
callw
jo
pop
imull
inc
jg
in
loop
lds
sub
mov
gs
jae
call
das
jp
add
sub
in
movsb
push
insb
call
dec
repz
and
imull
pop
jnp
jecxz
jle
inc
loopne
mov
pop
imul
sub
push
cli
call
das
in
add
pop
loope
gs
das
ljmp
jb
insb
inc
inc
jbe
and
cli
push
loopne
rolb
mov
pop
in
sub
pusha
icebp
mov
das
jne
add
pop
ljmp
inc
mov
push
jmp
pop
out
inc
aas
dec
jae
xor
in
jbe
pop
stc
sub
inc
loope
sahf
in
in
jle
imul
jne
inc
push
das
stc
in
std
push
enter
fs
shr
insb
mov
out
das
nop
sub
push
sti
call
das
loop
out
push
jmp
clc
je
or
das
in
sti
push
out
call
das
scas
in
imul
out
sub
call
das
jnp
push
push
loop
int
inc
lods
das
jmp
pop
insl
sub
adc
jp
clc
sub
inc
popa
das
int3
in
jecxz
lods
pop
out
mov
jmp
dec
in
out
push
dec
or
jbe
jmp
in
lret
push
call
das
gs
dec
push
jmp
or
ljmp
ja
stos
pop
cli
sub
inc
loop
dec
in
out
sub
sub
add
push
dec
test
cli
inc
imul
popa
pop
sub
inc
call
push
repnz
mov
imulb
cli
das
dec
in
jle
addr16
bound
inc
jmp
push
insl
repz
call
das
jp
pushw
inc
sub
inc
push
das
out
in
imul
out
call
gs
jbe
inc
in
cli
push
add
out
in
jmp
sub
pusha
hlt
cs
inc
das
clc
in
and
jl
add
pusha
call
das
addr16
mov
sub
imul
in
imull
pop
cli
sub
inc
bound
sub
test
out
das
popa
sub
push
jnp
add
inc
loopne
loop
shrb
mov
mov
pusha
xor
mov
inc
push
pop
dec
add
jl
ljmp
pop
fildll
inc
lahf
das
addr16
jg
jmp
call
dec
repz
xor
xor
lods
fimuls
stc
mov
sahf
sub
inc
pop
das
addr16
ds
out
call
fldl
das
mov
pop
sub
inc
data16
cmp
mov
out
inc
fsubrl
cmc
in
mov
sub
in
pop
push
out
sbb
inc
sti
das
outsb
in
frstpm(287
sub
setnp
imull
pop
cld
sub
inc
in
sbb
jmp
sub
sub
push
jl
pop
incb
das
loop
cmp
pop
sbb
inc
fmuls
dec
xor
pop
clc
sub
inc
ljmp
cmp
loop
sbb
sub
inc
outsb
das
mov
jb
dec
xchg
sub
inc
push
das
jg
aaa
push
callw
inc
das
jo
mov
cmc
jo
pop
cli
sub
inc
in
ss
jmp
push
pusha
jb
dec
cmc
sub
inc
mov
jge
xchg
push
in
push
call
in
adc
outsl
icebp
iret
sub
inc
sti
das
xchg
in
popa
push
push
call
das
adc
pop
sub
call
das
jl
xchg
push
call
das
imul
repnz
dec
repz
mov
js
xchg
pop
sti
sub
inc
loope
xor
in
adc
sub
inc
jo
mov
repz
xchg
push
pop
dec
push
das
in
xor
cltd
clc
out
lock
push
shrb
pop
mov
repnz
sub
inc
jp
jp
std
sub
inc
in
insl
in
out
dec
pop
insb
sub
add
push
dec
daa
sub
inc
out
jle
push
in
xchg
inc
data16
out
in
inc
call
pop
cmc
sub
inc
jl
push
test
inc
inc
jmp
and
pusha
jbe
dec
in
jnp
incb
das
loop
test
dec
in
fs
sub
in
out
push
pusha
jne
inc
jecxz
js
ret
push
pusha
call
push
imul
imul
insl
je
call
das
jl
shrb
mov
addr16
pusha
das
ljmp
mov
add
das
in
stc
push
mov
lock
jle
lock
jle
dec
xor
out
movsl
xor
jno
testb
cli
in
mov
jge
nop
sub
inc
push
das
push
pop
adc
out
dec
jne
xor
mov
scas
call
mov
fs
inc
insb
das
paddsb
cmp
das
imul
scas
push
call
das
gs
insl
push
in
inc
jbe
dec
outsl
dec
aam
jbe
call
das
lock
in
shrb
pop
mov
bound
nop
sub
imul
sub
imul
scas
pop
arpl
in
jmp
sub
call
das
jp
scas
push
loop
outsb
inc
sub
lds
mov
icebp
xor
push
or
pusha
stos
inc
arpl
mov
pushw
jmp
sub
das
or
push
call
lock
push
mov
sub
call
pop
adc
inc
shrb
jecxz
mov
out
nop
sub
in
push
mov
push
lahf
jo
pop
imull
inc
ljmp
iret
xor
lods
scas
dec
call
in
stc
clc
icebp
imul
in
cld
push
loopne
mov
imul
lock
dec
cmc
xchg
dec
jle
outsl
stc
sub
inc
loop
push
in
out
xor
sub
pusha
je
cld
jle
outsl
js
scas
sub
add
push
call
repnz
shlb
dec
imull
pop
jl
mov
jg
test
mov
jle
fdivs
or
sub
jg
dec
push
popa
out
jge
insl
imul
jge
jne
jo
ja,pn
jae
jb
xchg
dec
push
inc
jo
scas
push
outsb
in
push
dec
ret
jno
andl
in
movsb
int3
ret
push
lods
shlb
sub
sub
xchg
xor
nop
call
nop
inc
mov
dec
fisubl
out
cmp
mov
mov
jne
jne
rcrb
in
inc
arpl
int3
pop
cmpsl
int3
or
and
pop
inc
add
cmpl
mov
push
arpl
les
add
jecxz
sbb
shr
mov
sahf
mov
pushf
mov
cltd
add
call
fisubrs
cmpsl
lds
std
in
addr16
sub
sub
out
add
jne
ja
in
sti
or
dec
pop
movsb
pop
in
xchg
cmp
int3
mov
mov
jns
pushf
sub
dec
loop
outsl
out
xlat
mov
pop
outsl
sahf
cmc
push
xor
cltd
inc
ret
test
scas
sub
out
cld
add
adc
sldt
in
test
bound
mov
rcrb
jmp
shl
adc
adc
ljmp
aaa
adc
xor
sbb
fsubs
mov
jg
fldcw
sti
and
cld
add
mov
jl
xor
in
jnp
jo
sub
call
das
jnp
jne
cmpl
rorb
inc
rcrb
clc
push
addr16
jo
pusha
imul
push
arpl
push
push
xor
push
out
jo
mov
stos
arpl
xchg
inc
sbb
xchg
js
popa
dec
add
test
lcall
test
dec
in
sbb
outsb
jle
dec
jne
cld
adc
xor
mov
testl
mov
imul
gs
das
jns
jge
or
dec
int3
sub
inc
mov
sti
andl
insb
dec
pop
push
in
pop
mov
pop
adc
imul
dec
add
pushf
cmp
fs
mov
sub
leave
sbbb
and
jecxz
dec
in
ds
fucom
xor
mul
out
pop
cmp
lds
in
and
xor
jns
insl
ffreep
inc
pop
push
fsubrp
inc
lods
les
stos
mov
cmpsl
push
dec
in
xchg
jo
int3
out
sub
pop
clc
call
sub
sub
ljmp
sub
sub
push
orl
pop
ljmp
in
frstor
inc
xlat
stos
fsubp
ret
in
ret
sub
and
lcall
sub
in
fiaddl
sub
sub
test
xchg
pop
test
sub
cld
leave
or
scas
pusha
in
inc
mov
push
testb
stos
jb
aaa
mov
decl
adc
std
cltd
mov
stc
aas
and
or
insb
ret
insl
jl
scas
xor
jmp
sti
repnz
cltd
mov
sub
or
jae
add
inc
das
add
mov
outsb
movsb
pushf
aas
ret
inc
out
adcl
and
inc
sub
mov
pop
mov
mov
repnz
les
sbb
movsl
repnz
adc
pop
clc
push
roll
sub
jl
pop
mov
dec
inc
in
js
mov
sbb
dec
ss
jbe
in
into
fsubrs
movb
lods
test
fldt
fldenv
lret
dec
jns
hlt
pop
xor
inc
fildll
les
sub
movb
xor
or
pop
in
repz
shlb
out
and
dec
enter
imul
xchg
sub
sub
xchg
sbb
ljmp
call
cmpsb
je
imulb
enter
call
dec
in
in
inc
lds
xor
imul
mov
sub
in
ss
daa
test
orl
xchg
cmpsb
out
lret
test
push
mov
dec
mov
loopne
push
sbb
fsubrs
cmp
cmpsl
mov
cmp
adc
into
cmpsb
in
sub
call
cwtl
dec
pop
sub
out
jg
cmp
or
and
std
or
je
cmc
mov
inc
in
add
cmp
incb
fisubrs
inc
test
adc
mov
in
aaa
cmp
ret
pop
jecxz
mov
jno
out
ljmp
hlt
push
imul
dec
in
and
fs
mov
inc
incl
fdivl
mov
mov
xchg
hlt
mov
cld
cmp
call
hlt
sub
adc
pop
cmp
xor
pop
sbb
push
wrmsr
xchg
inc
ds
add
out
inc
mov
out
insl
mov
inc
xor
rolb
bound
andl
cld
movsl
outsl
push
inc
add
sub
fs
jmp
sbb
xlat
jmp
sbb
aam
xor
jnp
sub
hlt
daa
daa
clc
lahf
adc
repnz
pop
gs
xchg
cld
hlt
test
aaa
fdivrl
jge
ret
imul
inc
dec
fs
xchg
je
lds
aad
loope
imul
sbb
jmp
sub
das
dec
dec
push
test
data16
jns
adc
divl
imul
stc
jge
call
cltd
mov
dec
insl
imul
dec
pop
push
jge
insl
pop
dec
lock
fbld
dec
xor
imul
xlat
jo
fistpll
dec
jle
jns
jnp
aad
sub
jnp
or
jge
imul
push
jg
sti
jae
shlb
gs
arpl
popa
in
jg
jne
jae
imul
popf
mov
addr16
jne
dec
out
std
sub
sub
daa
std
insb
js
jp
andb
dec
testl
rclb
xchg
cwtl
sbb
jecxz
xchg
add
loopne
lods
xor
jecxz
mov
cmp
bound
pushf
lods
or
xchg
inc
loop
pushf
int
cmp
push
fcoms
cld
lcall
adc
jle
outsw
dec
aam
pop
insl
xchg
loopne
fdivr
cmp
in
push
cmp
das
dec
push
dec
add
and
jb
xchg
mov
popa
jge
cmpsb
dec
mov
and
jbe
je
andl
fsubl
iret
outsl
pop
add
popa
dec
into
sbb
cs
pslld
pop
xlat
scas
ret
lods
adc
cwtl
loopne
arpl
imull
fsubl
insb
mov
lods
jne
popf
mov
adc
xchg
out
in
jae
fnstcw
add
lock
out
jg
push
mov
out
ja
js
and
mov
inc
and
mov
mov
fisubrl
shll
mov
xchg
insl
test
or
ja
mov
mov
pop
mov
shrb
ljmp
and
mov
push
insl
cmpsb
fwait
inc
in
fidivl
xchg
fsubs
out
cld
in
or
mov
pop
adc
mov
xchg
out
in
es
inc
insl
test
movsb
fsubrl
mov
pop
mov
gs
add
mov
sbb
in
jp
fs
inc
xchg
movsb
js
movsl
icebp
fldcw
lret
loop
out
pop
mov
fstpt
mov
inc
data16
pop
in
sub
push
mov
aaa
subb
sbb
cli
loop
fidivrl
aaa
and
outsl
daa
cld
fsubrs
and
cmc
cmp
cmpsl
xor
pop
inc
and
ret
imul
xor
stos
sub
test
sbb
imul
lret
adc
inc
jge
mov
sbb
fildll
cmp
cmp
jmp
sub
push
sub
push
daa
and
cmp
dec
das
xor
arpl
int3
jno
and
adc
scas
frstor
frstor
adc
das
cmp
test
sbb
dec
push
push
mov
jecxz
das
xchg
xchg
ljmp
inc
rorb
mov
jle
cmpsl
xchg
adc
cmpsb
and
daa
sub
adc
cmp
movb
daa
enter
leave
pop
int3
add
inc
jg
xchg
imul
in
cmp
int
inc
cmp
mov
dec
std
mov
inc
bound
mov
mov
xor
shrl
dec
xor
dec
sub
enter
jl
outsb
out
js
faddl
daa
adc
ds
aas
into
dec
mov
cmp
sarl
sahf
fdivr
mov
sbb
out
jg
or
cmpsb
daa
sahf
dec
lcall
cmp
call
sbb
scas
cmpsl
cmpsl
xor
rcr
mov
out
repz
mov
movsb
lds
in
movsl
inc
inc
test
std
andl
fld
test
scas
sbb
jns
inc
fs
arpl
scas
and
or
outsl
cmp
xchg
inc
out
push
sbb
sub
mov
roll
outsb
push
out
bound
out
clc
xchg
mov
aas
in
sub
stos
mov
call
incb
pop
inc
aaa
sbb
add
insl
das
cmp
fsubr
dec
jne
ret
xchg
and
sub
mov
cs
movsb
or
movsb
mov
ljmp
ret
or
cmp
push
mov
jae
jmp
fists
jp
mull
es
sbb
jle
out
dec
fdivl
mov
ljmp
dec
outsl
imul
bound
jnp
out
arpl
outsl
push
rorl
lock
jns
push
dec
dec
outsl
push
jg
or
gs
inc
jae
js
cs
addr16
sbb
or
mov
stos
imul
push
jae
push
inc
dec
gs
push
arpl
inc
dec
inc
jae
cmp
imul
pop
dec
jge
jne
push
popa
inc
adc
jg
movsb
jns
addr16
inc
jnp
pop
dec
imul
jne
mov
dec
push
push
dec
pusha
adc
push
jp
push
imull
push
rorb
jl
stos
in
push
push
aaa
call
or
das
fucomip
cmp
pusha
sarb
insl
sub
inc
jg
mov
pop
mov
push
sbb
or
test
inc
jl
ja
xchg
call
pop
or
inc
js
push
sub
out
adcl
pop
cmovbe
dec
inc
push
jge
cwtl
push
dec
ljmp
aaa
das
jb
das
fwait
in
push
dec
push
and
cmp
inc
jne
lock
push
cmc
cmp
push
mov
cld
nop
scas
rorb
popa
pcmpeqb
scas
out
mov
dec
imul
lock
sbbb
sahf
sub
in
int3
in
lods
jl
lock
or
ljmp
mov
mov
jl
sub
or
subb
push
dec
shrb
pop
jmp
test
out
scas
sub
cmp
mov
sbb
repnz
out
es
aam
inc
jmp
cmp
mov
jo
dec
push
loop
sbb
in
and
aam
aas
mov
mov
dec
xchg
test
std
xchg
cld
mov
and
xchg
cmp
adc
lods
es
fisttpl
into
dec
fwait
dec
js
aaa
xchg
inc
or
out
mov
lret
pop
lods
es
xor
cmpsl
repnz
mov
pop
ret
or
and
mov
and
pop
pop
dec
pop
ret
xor
xrelease
pop
shrb
cmpsl
sbb
fstps
xchg
sub
pop
pop
mov
inc
cmc
xor
int
xchg
inc
test
das
test
jo
adc
cld
into
popf
mov
dec
and
cmc
mov
out
pop
dec
sbb
dec
adc
and
data16
insb
clc
daa
icebp
dec
jg
pop
lock
data16
sti
dec
cs
inc
testb
dec
out
and
in
ss
fsubs
lahf
lea
outsb
and
notl
sub
pop
div
pop
push
lods
xor
xchg
cltd
in
push
sub
imul
jnp
mov
into
insl
pushf
push
es
mov
pop
stos
mov
cli
inc
lea
nop
cld
inc
sub
inc
lods
xor
movsl
or
jg
cld
sub
mov
movsl
pop
inc
dec
mov
clc
in
cmp
xchg
enter
and
imul
cmpsb
jl
cmp
jecxz
mov
add
filds
clc
sub
scas
jecxz
xor
cmc
sub
test
pop
mov
or
mov
mulb
and
test
stos
scas
add
add
lea
call
inc
mov
add
loope
in
inc
pop
jo
in
and
fidivl
in
or
rol
and
pop
cmp
jmp
popf
push
sbb
adc
shl
lcall
sub
xor
jge
cltd
adc
dec
or
mov
inc
inc
push
adc
mov
shlb
push
jnp
pusha
shll
lods
mov
aas
sbb
popf
push
adc
xlat
notl
hlt
jae
ja
imul
adc
clc
orb
lods
das
jns
test
adc
lock
out
xor
cmp
outsl
xchg
add
ss
repnz
mov
clc
xor
and
js
repz
arpl
cmp
cmpsb
scas
lods
hlt
sub
scas
mov
adc
daa
cli
mov
enter
lahf
inc
test
vsqrtss
add
add
test
push
call
iret
mov
adc
xor
dec
outsl
sarb
adc
mov
add
stos
ja
inc
icebp
outsb
add
pop
insb
jbe
in
popa
push
and
mov
mov
jnp
pop
pop
sbb
jb
sbb
pop
jns
cltd
addr16
clc
outsl
fsubrs
adc
xchg
scas
das
cwtl
mov
out
imul
stos
cli
mov
xor
shl
out
jb
stos
jae
xor
in
fdivrl
jp
insb
mov
jns
xchg
sti
mov
fs
mov
in
xchg
mov
jne
hlt
jp
mov
jle
js
push
fcoml
sub
pop
test
mov
xor
jg
push
mov
mov
inc
and
jg
daa
mov
and
shr
mov
push
mov
cmp
xor
push
pop
xor
xchg
pop
dec
dec
xchg
popf
pop
mov
cmc
mov
daa
xor
mov
daa
sub
mov
xchg
push
or
out
imull
dec
mov
push
in
xchg
xchg
in
gs
push
out
in
mov
test
push
push
adc
fnsave
xlat
push
sub
inc
push
sub
das
sub
test
scas
push
into
test
es
or
mov
xor
sahf
imul
cli
push
xlat
dec
dec
jp
out
out
ja
arpl
andl
ror
pop
lret
sarl
and
es
call
ret
ja
push
iret
xor
call
jbe
into
push
push
add
add
lea
cld
jo
and
fs
addr16
aam
mov
out
jne
in
insb
adc
push
jo
fmul
jge
pop
insl
xor
decb
push
outsl
lods
push
mov
outsl
call
and
int3
inc
imul
testl
add
push
pop
and
fcoms
or
add
stos
and
inc
loop
xor
out
cmp
clc
jle
mov
pop
adc
sbb
bound
addr16
insb
hlt
sub
push
in
in
jmp
mov
dec
insl
pop
mov
cmp
ljmp
dec
mov
loop
sub
sbb
sub
lods
call
das
sbb
xchg
call
pop
lds
inc
adc
outsb
int3
xor
pop
inc
sub
pusha
iret
lods
inc
lods
das
mov
out
jecxz
jg
push
push
imul
pop
pushf
sub
imul
ja
shll
dec
dec
imul
clc
das
adc
into
sub
jmp
sub
inc
jb
outsl
or
lods
in
dec
push
sahf
push
sub
mov
ja
out
ret
add
sub
xchg
out
xchg
inc
xchg
in
and
sahf
xchg
xchg
lds
test
jecxz
int
and
fistps
mov
ret
mov
scas
outsl
adc
hlt
xchg
mov
xchg
xchg
xor
jo
icebp
xchg
cmc
fcmove
jno
jbe
outsl
cmp
pop
inc
xchg
lock
fdivl
clc
aad
out
push
cmp
or
popf
or
js
hlt
dec
lret
dec
imul
rolb
adc
push
outsl
pusha
jne
cld
xor
cmp
imulb
add
out
pop
jno
outsb
aam
cltd
adc
data16
sub
cld
outsl
bound
data16
int3
enter
outsb
adc
jl
xchg
lea
fdivs
pop
js
xchg
in
fdivrl
xchg
push
enter
fucomi
outsb
loopne
jne
daa
int3
aad
sub
imul
test
jge
es
jo,pn
fimull
jnp
cmpsl
movsl
add
pusha
out
sub
push
xchg
lds
repz
cmpsb
xchg
shlb
or
mov
xacquire
repnz
adc
mov
test
rorl
jmp
dec
add
jo
call
std
or
push
mov
jle
int
ljmp
int3
cmp
jno
outsl
ret
loop
data16
adc
dec
adc
iret
loop
or
sub
add
daa
mov
fdivrp
in
sar
push
mov
sub
js
out
sub
xchg
and
push
fcompl
arpl
sarl
adc
je
shll
mov
sub
jo
jae
rcl
and
xchg
jae
xchg
jns
loop
xchg
pmullw
sarl
and
cmp
into
jb
jmp
insl
daa
addr16
cld
enter
or
out
paddsw
je
leave
mov
iret
xor
lds
add
mov
outsb
std
mov
push
or
inc
add
xchg
loop
cmp
mov
lods
fwait
out
and
sarl
jecxz
fstl
cli
int3
leave
call
xor
and
xor
out
nop
xchg
test
xchg
pop
sahf
xchg
and
fs
int
lods
ret
pusha
movb
je
inc
or
mov
daa
adc
adc
je
call
imul
loop
je
inc
sub
xchg
pop
jge
push
outsb
insl
or
xchg
or
icebp
pusha
out
or
push
sub
inc
fisubrs
loopne
mov
cli
dec
imul
fwait
mov
adc
xchg
dec
pop
out
inc
ret
xorl
add
aas
lods
in
mov
mov
add
sbb
roll
or
out
sub
inc
or
jge
pop
cmpsl
fs
push
movsb
test
test
outsb
dec
outsl
int3
shl
sub
sbb
inc
popa
jb
je
push
rorb
jns
inc
sbb
push
jg
push
cmpsb
push
andb
cld
mov
imul
pop
fsub
out
sahf
pop
sub
push
in
sti
push
mov
push
xor
out
mov
test
mov
insb
int3
sub
nop
sahf
mov
out
fwait
mov
dec
outsb
mov
mov
shl
mov
or
je
mov
xchg
int
or
pop
shl
in
jp
sub
mov
xchg
insl
push
sbb
dec
ja
js
out
cld
test
pcmpeqb
xchg
dec
inc
fwait
rcl
xor
sbb
scas
cmp
jge
push
or
mov
jl
out
mov
jns
adc
dec
cmpsb
jl
insl
pusha
out
push
cld
lock
sub
je
pop
jl
xor
cmovnp
or
ljmp
dec
sub
fildl
cmc
or
je
mov
ljmp
nop
xchg
das
call
mov
xor
ja
cmpsb
scas
negb
into
xlat
dec
sub
lock
out
sar
inc
fsubr
mov
out
test
mov
mov
loope
js
outsl
ds
cmp
mov
xchg
xor
dec
test
add
mov
ret
addl
fstl
bound
pop
cwtl
mov
dec
pcmpeqb
mov
fucomip
mov
fs
xchg
adc
inc
push
pop
jmp
cmp
imul
and
dec
shrb
fbld
int3
clc
imull
ja
out
mov
ljmp
add
jns
in
aaa
mov
add
pop
add
pusha
bound
dec
repz
divb
cmpsb
out
xor
xor
call
cmc
gs
mov
jae
mov
push
incb
jg
pusha
ljmp
adc
sub
inc
iret
outsb
dec
and
sub
dec
dec
aad
sahf
arpl
xor
movb
add
cmpsl
leave
aaa
push
shl
or
and
test
or
test
jle
pushf
pop
scas
popa
xor
or
das
xor
ss
jmp
ss
mov
add
mov
mov
push
or
js
mov
mov
fnstenv
push
jg
out
sub
orb
push
ja
dec
cltd
or
insb
jbe
sub
jg
ja
ja
or
ret
js
imull
jg
add
sub
dec
js
js
mov
fs
nop
mov
mov
cmp
out
ficomps
outsb
cltd
loope
daa
jg
pop
sbbb
mov
js
dec
sub
lock
pushf
dec
pop
dec
adc
ja
mov
mov
fs
dec
mov
jo
sahf
dec
das
pop
push
fwait
pop
mov
xor
shlb
notl
dec
mov
mov
xor
arpl
aaa
sub
je
in
or
dec
cmpsl
rcrl
sbb
lods
pop
iret
loopne
mov
dec
scas
mov
jne
cmpsb
xchg
inc
push
pop
ss
insb
mov
jge
loopne
cmpsl
jae
sub
popf
cld
push
sub
std
cmp
and
add
add
xor
and
xor
and
cli
lea
pop
xor
idivb
stc
sahf
pop
imul
addl
ret
sub
pop
imul
in
push
or
loop
in
je
xchg
mov
icebp
pxor
shlb
insl
je
sbb
hlt
test
mov
and
sbb
int3
jg
jnp
inc
mov
out
call
sub
pop
inc
idivb
pop
insl
out
sbb
push
mov
mov
andl
ja
jg
pop
dec
and
outsb
xor
stc
sti
gs
xchg
lea
pop
ret
inc
out
int3
mov
roll
call
sub
xchg
xor
pop
and
lods
dec
jae
std
data16
cld
adc
das
addr16
stos
add
pop
ja
mov
push
and
inc
out
mov
lcall
inc
ja
out
pop
pop
jo
xor
xor
ljmp
pop
cli
sbb
sti
lret
ljmp
jmp
sub
jbe
aam
out
dec
lock
stos
jg
jbe
and
stos
mov
test
sbb
loope
scas
xchg
loope
daa
and
sbb
aaa
pop
lcall
je
sub
aaa
lock
inc
sbb
sti
jmp
int3
jg
and
dec
scas
jp
adc
leave
pop
push
mov
add
cli
push
pop
mov
insb
notb
lock
insl
pushf
inc
mov
stos
ret
or
mov
and
push
or
loopne
jecxz
std
out
mov
cld
jnp
jae
mov
call
xlat
jp
sub
lds
sub
outsl
fadd
mov
and
fs
pmaxsw
les
inc
lods
pusha
aas
sbb
outsb
imul
insl
push
cmpsb
xor
jae
out
loopne
xor
push
insb
subb
xorb
clc
mov
fildll
icebp
cmpsl
cmpsl
out
sbb
adc
insb
fwait
mov
fwait
mov
out
and
std
es
lea
vhsubpd
or
loope
push
mov
fmuls
inc
pop
and
mov
mov
jg
inc
punpcklwd
out
dec
push
fbld
dec
dec
dec
stos
std
and
jle
addr16
xor
notl
add
pop
loop
or
jne
adc
insl
or
cmp
xchg
stos
cmp
jns
scas
lods
pushf
ret
sub
xchg
test
std
in
pop
push
push
jmp
daa
aas
mov
add
xchg
outsb
inc
push
pop
xchg
addl
ret
xlat
in
mov
or
subb
inc
je
push
movsb
mov
adc
adc
int3
pop
outsb
xor
leave
pop
lret
addb
pusha
inc
je
addr16
rcrl
call
sti
ffree
mov
sti
mov
test
push
outsl
mov
push
popa
cmp
scas
fs
adc
cmc
imul
pop
imul
xchg
cmp
je
loop
pop
outsl
adc
jno
out
jg
jg
xor
in
loope
adc
and
push
lea
or
jae
jp
test
movsb
xlat
jo
and
jae
pop
pop
pop
sub
lret
fcomip
xor
push
jbe
mov
in
outsb
cmp
addb
add
mov
out
xor
shll
mov
or
and
jo
push
mov
inc
insl
and
and
popa
jae
jmp
std
ds
and
stc
push
testb
enter
inc
mov
xor
insb
js
xchg
and
enter
push
test
mov
mov
pushf
adc
iret
aas
ja
in
into
mov
xchg
loop
lds
xchg
in
je
or
dec
loopne
sub
dec
loopne
nop
aaa
scas
jmp
mov
mov
add
inc
push
test
cwtl
imul
jb
outsb
jo
je
dec
int3
js
jecxz
inc
push
sub
jnp
xor
sbb
daa
jge
ret
mov
cmp
imul
hlt
enter
ljmp
xor
dec
jmp
loopne
ja
push
ret
out
imulb
outsb
sbb
sub
push
hlt
lods
sbb
or
mov
jle
jmp
daa
sbbb
add
pop
dec
es
pop
insb
adc
subl
ljmp
jg
movsb
call
fisubs
or
mov
scas
les
out
mov
jmp
das
aas
out
addr16
out
dec
mov
fs
gs
jo
push
outsl
lds
loop
bound
loopne
and
fisubl
dec
lcall
in
cltd
xchg
insl
pop
stos
sub
jle
outsb
std
inc
gs
je
mov
fsubl
or
out
jmp
sub
daa
stos
jnp
mov
stos
js
in
sub
dec
fs
xor
fnsave
fidivrs
sub
test
push
into
jp
out
je
ja
lea
adc
gs
xchg
repz
out
jb
dec
cmc
and
xor
lea
mov
jnp
xor
jg
pusha
jb
cmp
out
or
dec
arpl
hlt
pop
icebp
jmp
mov
in
jmp
mov
and
int3
and
call
insl
gs
outsl
push
xchg
shr
mov
sub
dec
push
in
dec
ja
call
jecxz
outsl
imul
rcrb
jnp
jle
outsl
jg
cmp
jl
pusha
gs
xchg
pop
adc
jns
sub
imul
sub
add
dec
sub
jae
outsl
gs
pop
xor
loopne
aam
leave
dec
inc
call
insb
adc
in
sub
ljmp
dec
jae
call
mov
push
mov
imul
outsl
xchg
call
xor
jg
pusha
arpl
mov
jg
loopne
arpl
and
push
sub
arpl
bound
in
sub
pusha
stc
and
jmp
sarb
imul
jmp
sub
pusha
mov
scas
jne
shrb
popa
call
mov
sub
js
andl
push
cmp
out
xchg
out
jb
or
mov
jg
pushf
cmpsl
loopnew
mov
in
hlt
jne
clc
mov
and
fmull
outsl
jmp
inc
mov
and
test
outsl
pop
ja
xor
sbb
dec
jecxz
jge
out
or
nop
loope
pusha
imul
xor
push
enter
imul
loopne
xchg
adc
gs
out
in
outsl
insb
or
lcall
arpl
je
xchg
mov
dec
push
push
in
je
mov
jp
sub
and
jae
js
imul
outsl
movsb
clc
outsb
jo
ja
jo
popf
hlt
sub
dec
repnz
popa
inc
stos
out
fs
mov
and
cmc
out
in
jg
test
outsl
popa
mov
mov
jo
loopne
in
dec
jg
sub
imul
jo
push
mov
jg
js
call
xor
jg
pusha
jg
jo
inc
and
popa
loopne
cld
outsl
ja
cmp
jp
dec
jne
call
insb
hlt
rcll
fisubl
shr
xchg
jo
lods
ljmp
mov
in
jmp
push
aad
aad
sahf
popl
sub
shlb
rorl
cwtl
loop
adc
inc
fld
pusha
test
pop
stos
call
ljmp
int3
xchg
add
das
test
push
icebp
xor
insb
je
mov
mov
sub
je
or
outsl
ret
lds
mov
iret
je
inc
call
xor
jb
xor
fdivrl
xor
aaa
test
bswap
cld
aam
icebp
jge
xlat
cwtl
outsb
cld
xlat
pop
xadd
jmp
ss
mov
addr16
scas
mov
jb
or
test
sub
outsl
inc
add
jmp
inc
xor
jmp
aaa
inc
sbb
loopne
outsb
je
sub
lea
adc
pusha
outsl
ja
imul
push
cld
enter
icebp
dec
je
pop
in
adc
sub
or
pusha
into
mov
and
xor
and
scas
sub
test
std
clc
outsl
xor
or
push
js
mov
js
clc
sti
dec
xor
dec
jnp
xor
scas
sub
mov
pusha
jnp
stc
test
cmp
scas
sub
mov
jo
addr16
push
inc
and
insb
or
outsl
out
push
aad
mov
clc
adc
loopne
sub
arpl
adc
shl
je
push
test
outsb
int3
jo
bound
adc
je
xor
sub
in
jae
mov
in
mov
into
shrb
push
or
mov
outsl
out
push
loopne
lock
outsb
call
out
mov
ljmp
bnd
jg
jp
out
push
mov
into
nop
inc
lcall
les
out
hlt
sub
rol
outsl
mulb
mov
clc
jge
data16
dec
cld
jo
enter
jbe
stc
inc
mov
out
jl
rcll
dec
sti
jo
in
sub
sub
dec
mov
mov
js
xchg
outsl
clc
insl
mov
repz
movsl
dec
jp
push
sub
jae
adc
in
jmp
loopne
xor
insl
in
jns
imul
mov
mov
push
loopne
outsl
nop
sub
push
sub
jo
in
push
sbb
call
loope
xchg
int
dec
icebp
cmp
jo
push
or
dec
out
mov
in
jno
es
jge
push
mov
or
fs
dec
out
divb
nop
inc
arpl
jo
in
mov
loop
sub
pop
sub
inc
imul
sub
pop
enter
jo
jo
je
in
test
or
daa
push
addb
imul
pop
push
and
je
scas
pop
data16
shlb
inc
outsb
outsb
inc
popa
adc
imul
push
out
dec
ljmp
inc
pop
mov
arpl
ffree
mov
jns
arpl
movsl
jo
imul
fldt
das
add
and
imul
out
cmp
jl
inc
hlt
leave
sub
dec
mov
call
lea
dec
pop
inc
in
lds
insl
stc
mov
pusha
mov
clc
sub
scas
or
xchg
subb
mov
pop
stos
dec
inc
lds
insl
xchg
shl
fcompl
inc
nop
jo
incb
data16
xor
sub
imul
insl
xlat
leave
inc
arpl
push
daa
nop
jmp
fildll
je
int
push
std
sub
pop
insl
push
test
lock
mov
adc
sub
repnz
out
in
sub
and
cmp
and
pop
daa
je
mov
fs
add
and
mov
jecxz
add
push
pop
arpl
xor
dec
stos
and
lret
mov
into
daa
mov
aam
or
jle
fisttps
pop
shlb
mov
jbe
imul
adc
nop
sub
xor
lea
mov
rolb
inc
jmp
lds
out
stos
sar
insb
jecxz
insb
or
pop
movsl
push
dec
imul
out
rorb
leave
add
ret
add
pop
adc
mov
loop
mov
popf
sbb
das
jge
jo
cli
xor
fidivs
out
rcrl
push
je
sub
out
cli
int
in
lea
dec
notl
xor
addr16
jl
sahf
inc
test
lret
adc
pop
push
cmp
mov
add
loopne
mov
inc
or
rorl
dec
out
xor
mov
push
cltd
insl
push
roll
cmp
cmp
cmpsl
mov
mov
and
xor
std
stc
repnz
sarb
inc
pop
fs
adcl
insl
cltd
lock
loop
in
hlt
cmp
mov
fucomip
mov
inc
cmpsb
adc
push
data16
loop
cld
in
nop
test
sub
mov
loopne
call
and
repnz
into
test
fs
fimuls
in
or
insl
mov
push
fdivrl
out
xlat
and
xor
popa
call
xchg
and
repnz
into
loopnew
lret
mov
sti
xchg
out
ljmp
gs
fs
dec
jg
ja
dec
dec
out
out
addr16
and
or
mov
and
cmc
mov
ficomps
mov
outsb
pusha
add
loop
sahf
push
insl
inc
push
bound
insb
dec
jmp
jle
or
sub
dec
jecxz
ret
inc
popa
das
inc
lock
xchg
data16
xchg
lods
pop
add
adc
mov
mov
in
push
add
jo
xor
imul
push
in
ret
add
hlt
or
xor
pop
jae
jle
out
subb
cmpsl
mov
mov
sarb
aad
loopne
out
es
cmp
cmp
inc
mov
jl
adcl
adc
sub
imul
inc
lahf
pop
call
add
push
ret
je
jle
adc
mov
sbb
mov
int3
push
push
push
dec
jo
lods
mov
shll
stos
inc
inc
js
insb
gs
dec
sub
test
lock
fildl
add
mov
xor
xchg
xor
test
les
xor
aad
fwait
or
rcr
sub
push
add
sub
lcall
insb
inc
int3
adc
stos
mov
dec
scas
scas
ret
std
out
xchg
add
in
and
hlt
inc
jecxz
cmc
pop
aas
daa
ret
subl
fs
pop
out
xchg
ret
push
lock
pop
sub
pusha
les
je
jmp
mov
sbb
fwait
ljmp
aad
pop
stc
jl
popf
movsb
xor
adc
jl
scas
xchg
sti
mov
mov
jno
cmp
in
mov
ret
add
sbb
or
pop
loope
add
cmpsl
repnz
je
sub
push
inc
xchg
mov
mov
mulb
add
leave
std
mov
loopne
aas
bound
rolb
push
xchg
add
add
in
sub
cmpsb
dec
mov
insl
jae
xchg
and
fsubrl
out
push
jge
push
sub
push
addr16
scas
dec
daa
xchg
jnp
lock
adc
push
dec
add
cmp
ja
mov
and
ja
das
hlt
ret
insl
in
push
shrl
test
std
sahf
outsb
inc
jecxz
and
mov
push
sti
add
aam
dec
lods
movsl
out
cltd
out
cltd
insb
ret
inc
popl
fisttpll
jo
adc
daa
cmp
in
pop
aam
xor
push
test
mov
jp
mov
cmpsb
ja
arpl
ret
jge
cmpsl
sub
jl
and
or
test
mov
jp
cmp
adc
stos
jo
loopne
pop
fs
dec
sub
cmpsl
stos
xor
adc
push
sbbl
movsl
out
pop
pop
outsb
pushf
mov
movsl
out
arpl
repz
jo
xlat
fwait
inc
notl
cmpsb
push
xlat
enter
lsl
or
xor
xchg
sub
xlat
push
shll
and
enter
andb
xor
je
divl
js
incl
iret
mov
enter
sti
scas
fistps
fisttpll
cmp
adc
dec
mov
imul
jo
ja
jne
in
fsubrs
jp
cmp
jg
or
js
call
mov
add
jg
pusha
ret
in
sub
cmpsb
push
mov
dec
sub
mov
in
movsl
mov
sub
adc
mov
dec
sub
icebp
sub
adc
loopne
arpl
jg
pusha
aam
insl
sub
inc
xchg
out
ja
or
dec
jl
pop
js
call
sbb
jle
jo
sbb
lock
and
pusha
and
sub
inc
mov
jg
pusha
or
sub
lret
loopne
sub
bound
js
call
push
iret
cmp
pop
loopne
jbe
or
dec
jnp
or
outsl
aad
gs
cwtl
out
outsl
loopne
stc
sub
pop
mov
jg
pusha
push
in
sub
shlb
jb
or
js
jl
insb
js
mov
sub
push
cli
imul
mov
shrl
out
or
stc
js
jl
dec
dec
jne
mov
dec
sti
jg
js
inc
cltd
iret
mov
std
out
jge
imul
pop
into
mov
dec
pusha
sub
das
adc
sub
jle
cld
mov
rcrb
hlt
mov
xchg
addr16
jo
and
mov
mov
dec
inc
popf
call
mov
mov
fsubr
jo
repz
pop
out
rcll
test
call
jo
insb
and
pushf
xchg
jne
inc
repz
pop
aad
jae
push
inc
fs
jg
jmp
out
lock
jnp
push
mov
dec
nop
jae
adc
or
cmp
iret
fs
arpl
jbe
mov
jmp
or
cltd
add
or
or
pop
pop
movsl
mov
jecxz
stos
hlt
xor
outsb
lods
imul
pushf
xor
jecxz
jnp
das
rolb
iret
gs
dec
mov
mov
lock
xchg
ss
sbb
add
xor
and
adc
push
call
clc
jbe
call
sub
out
mov
ja
push
jo
jmp
imul
push
push
addr16
inc
out
or
fs
gs
push
dec
in
outsb
fs
dec
jecxz
and
dec
outsb
loop
decl
jbe
inc
dec
shrb
lea
and
pusha
jne
mov
xor
jg
popa
adc
push
scas
call
call
jge
pop
scas
cld
mov
jl
jns
sti
push
jne
cli
push
imul
stc
in
jae
jns
addr16
dec
js
gs
imull
insl
dec
ja
arpl
das
ljmp
das
in
jne
ja
hlt
das
decb
dec
insl
into
out
repz
stc
outsb
jae
jne
jmp
inc
hlt
outsb
jb
ja
mov
repz
pop
scas
cld
inc
call
arpl
enter
icebp
push
std
clc
outsb
in
js
pop
cli
pusha
insl
pusha
imul
insb
outsl
jae
js
fnstcw
mov
shrl
pop
jmp
outsl
addr16
js
pop
gs
push
sub
addr16
jns
mov
jl
pusha
pushaw
gs
in
ja
gs
adc
in
mov
mov
arpl
dec
loop
jmp
add
jmp
adc
sub
inc
jg
in
mov
call
jns
clc
gs
scas
enter
push
sub
inc
cli
outsb
jle
or
sub
jge
insl
sub
pop
jl
imul
jmp
jnp
imul
or
loop
jns
jae
clc
or
or
sub
imulb
imul
dec
hlt
or
jns
repz
or
sub
call
push
push
dec
scas
dec
lock
push
outsb
out
inc
icebp
dec
mov
popa
and
dec
outsb
das
arpl
dec
in
mov
scas
insl
int3
jg
jmp
pop
jecxz
insb
ja
pusha
jmp
jmp
pusha
jg
in
push
jne
call
imul
call
add
shrl
lock
xor
mov
shll
insl
lods
fucomip
add
ljmp
adc
movsl
push
imul
pop
cmp
cmpsb
in
nop
sub
outsb
add
sub
mov
int3
out
push
into
leave
mov
cmp
lcall
addl
ret
dec
rorb
ljmp
insb
addr16
mov
or
or
outsb
inc
inc
into
and
sbb
dec
dec
mov
call
sub
dec
sub
cltd
int3
lock
jp
pusha
push
repnz
xor
inc
les
mov
imul
outsl
xor
in
divb
inc
fldl
adc
insl
loopne
orb
stc
push
lcall
cmp
cmpsb
fstpl
pop
pop
notb
and
daa
mov
mov
xor
bound
jecxz
sahf
call
jb
xor
lcall
cmp
ja
je
xchg
xchg
pop
test
enter
mov
popf
cwtl
jge
in
test
mov
push
dec
jbe
arpl
addr16
or
sub
ret
outsb
jns
xor
in
xor
xchg
jae
cmp
outsb
add
jo
outsl
adc
out
je
test
daa
fimull
sub
movsl
out
sub
push
loopne
loopne
sahf
mov
sub
lcall
jmp
dec
and
xchg
test
push
mov
rorb
ret
mov
dec
mov
adc
call
mov
dec
push
dec
dec
out
sub
dec
or
push
ret
scas
imul
mov
aam
mov
ds
push
sub
lock
ja
aaa
cwtl
dec
out
or
int3
lock
mov
jb
daa
outsb
out
cmp
jne
addr16
mov
into
mov
jb
sub
sub
adc
std
mov
push
cmp
movsl
jo
out
insl
dec
inc
in
je
sbb
shl
int
test
mov
dec
xor
xchg
mov
add
leave
push
add
push
mov
add
call
daa
jg
or
popf
ret
mov
fwait
call
dec
xchg
adc
mov
and
mov
cwtl
and
daa
cmpsl
lods
je
aad
push
jmp
subl
shrb
jge
aas
movsb
das
je
movsl
hlt
imul
scas
js
jl
jl,pn
lret
sbb
imul
loope
enter
clc
push
xor
in
cld
lock
mov
lods
push
lahf
arpl
test
sbbb
mov
imul
cmp
xchg
jl
in
outsl
inc
outsb
mov
mov
cmpsl
or
or
fwait
test
stos
rclb
jge
fstl
jnp
jo
sub
cmp
outsl
fucomip
out
scas
dec
add
scas
popf
stos
aaa
xchg
or
cmp
push
pop
cmpsl
adc
je
xchg
jnp
jmp
lods
mov
jp
lahf
pusha
pop
out
imul
mov
adc
lock
cmpsb
cli
pop
daa
mov
sbb
push
lods
scas
ljmp
call
insl
in
dec
or
inc
adc
xorb
inc
int
xchg
into
jb
cltd
xchg
int
into
das
mov
imul
stos
mov
pop
push
fwait
inc
shr
sbb
outsl
push
sti
cmpsl
addr16
dec
jae
fdivp
fwait
popa
sbb
sub
gs
and
and
or
pusha
inc
outsl
mov
clc
ret
xchg
jmp
shr
test
shr
dec
rorb
sub
int
mov
xor
xchg
push
rorl
icebp
push
std
stos
pop
leave
jle
daa
lods
movsl
ljmp
incb
sbb
rcrl
cmp
outsb
in
mov
out
out
les
insl
out
dec
scas
jo
xchg
jnp
or
ds
enter
arpl
add
dec
out
ret
fistps
imul
jle
cwtl
sarb
xor
mov
outsb
clc
xor
std
or
movsl
sub
fcmovnb
cmp
mov
add
pop
xchg
imul
loop
mov
adc
or
adc
arpl
js
fsubr
xchg
add
repz
or
sbb
sub
dec
popa
pusha
lods
mov
sub
into
fisubs
pusha
lods
in
sub
sarb
jle
mov
andl
adc
adc
test
xlat
sti
jmp
in
push
inc
outsb
xor
fmull
dec
pusha
xor
fs
shrb
insb
call
adc
xchg
out
or
xchg
fstpl
xor
or
in
xor
enter
popa
pop
xchg
sub
adc
popa
dec
or
xor
xor
jge
cld
and
dec
jg
decb
outsb
cli
pop
int3
sub
cmp
into
jmp
por
in
dec
insl
das
in
in
outsb
push
mov
push
lcall
jae
and
jns
sbbl
dec
mov
ret
cmp
test
out
dec
jo
call
xor
cmpsl
sbb
daa
cmpsb
pop
jge
lock
rcrb
and
add
fcmovnb
mov
sti
inc
sub
insl
sbb
push
cmpsl
lret
nop
loop
ffreep
repz
mov
sbb
or
insb
and
jbe
xor
push
in
dec
outsl
dec
pop
hlt
adc
insl
pusha
in
loope
gs
or
out
and
xor
mov
nop
add
cmpsl
aam
jle
das
gs
push
je
sub
mov
aas
repz
push
xchg
outsb
aam
sub
daa
sub
daa
dec
or
dec
dec
leave
lret
popf
cli
xor
out
push
test
in
pop
xchg
loopne
stos
fidivs
cltd
mov
sti
repnz
scas
inc
mov
pop
imul
inc
shl
sbb
cmp
shrl
pop
iret
lock
and
and
call
or
cmc
xlat
int
add
jo
xchg
in
sub
into
push
sbb
or
subb
dec
and
push
mov
and
lds
jbe
add
xchg
xchg
ret
movsb
cwtl
lock
ljmp
and
bound
fwait
inc
add
test
and
and
dec
inc
lock
int
mov
mov
popa
gs
lret
xchg
inc
mov
pusha
inc
data16
xchg
jmp
popa
dec
pop
fmulp
loopne
cli
xchg
dec
imul
pusha
jmp
in
jo
mov
or
inc
adc
insb
cmp
enter
xor
dec
sub
leave
in
mov
cs
xor
popa
push
ret
mov
addr16
mov
sbb
insb
scas
cli
push
cmpsl
pop
loopne
xor
inc
pop
and
je
dec
mov
mov
daa
push
in
xchg
or
ficoms
stos
out
lcall
jmp
loopne
push
pushf
call
and
jg
pop
xor
in
lcall
push
fsubrs
push
dec
call
fdivs
pop
inc
pop
push
enter
xor
imul
jb
shr
sbb
fsubrp
pop
pcmpeqb
dec
outsl
xchg
fdivrs
sub
unpcklps
fndisi(8087
je
mov
in
push
mov
mul
push
aam
mov
xor
popf
dec
psrad
das
gs
repz
pop
push
and
pop
icebp
ds
outsb
sub
mov
iret
sub
adc
sbb
je
scas
ds
jnp
push
lods
ret
int
aam
cmp
sahf
pop
xor
mov
xlat
push
sbb
xchg
test
mov
jmp
insl
out
inc
stos
dec
je
jecxz
mov
ficoms
lods
notl
gs
pop
mov
dec
gs
adc
push
test
mov
aas
push
pop
and
out
inc
inc
scas
and
or
test
outsb
jmp
sahf
mov
mov
repnz
jl
mov
mov
mov
sbb
outsb
push
or
pop
jo
js
fs
std
pop
xorl
mov
int
loopne
daa
inc
jge
fwait
ds
cmp
jo
and
sbb
stc
xor
mov
sub
subb
jb
mov
in
fbstp
iret
or
cltd
out
icebp
and
scas
out
addr16
daa
cmp
cli
adc
insl
mov
jb
jg
enter
dec
aam
testl
jns
adc
pop
or
xor
and
outsl
adc
jge
stos
addr16
pop
cmpsb
je
jb
mov
mov
sar
sbb
jmp
repnz
iret
les
in
je
sub
outsb
stc
lods
jmp
fdivl
cmp
adc
enter
das
jg
data16
insb
inc
jo
shlb
out
out
rclb
push
xor
push
in
mov
fdiv
enter
sub
js
inc
insl
das
outsl
in
int3
mov
ret
pusha
stos
shrl
les
lods
xlat
cmp
test
dec
xor
out
or
sub
sub
dec
daa
xor
in
inc
insb
addb
rolb
popf
or
das
lcall
outsl
dec
push
pop
jecxz
pop
mov
xor
jo
inc
je
pop
pop
inc
mov
sub
lods
shrd
loop
test
testb
adc
push
std
and
xchg
pop
mov
cmp
mov
xchg
ja
nop
sahf
pop
add
pop
outsb
jo
pop
roll
sub
outsb
jno
or
cmp
clc
xor
mov
mov
vpshufd
cs
mov
adc
adc
inc
aas
sub
and
xchg
pop
in
mov
lahf
bswap
inc
cs
xchg
push
in
pop
pusha
mov
nop
js
jo
out
cwtl
and
inc
lock
and
fsubrl
mov
out
cwtl
test
popa
dec
je
push
mov
test
loopne
insl
sub
outsl
out
ficoms
dec
cmp
dec
jno
sbb
mov
es
ss
addr16
push
pop
jg
sub
mov
inc
int3
or
lret
push
pop
ret
addr16
xchg
imul
es
xor
daa
mov
mov
push
cmp
leave
stos
pop
imul
out
jle
or
push
je
jns
mov
fucomip
stos
mov
push
push
scas
push
inc
push
mov
mov
in
inc
cwtl
or
dec
jle
je
mov
es
adc
push
xor
imulb
lods
ljmp
mov
push
movaps
sub
jg
add
loopne
lock
push
mulb
ljmp
pop
daa
push
xor
fs
inc
jb
cmc
add
or
inc
fwait
ljmp
sub
iret
add
rclb
ja
adc
lods
jmp
xor
aad
push
das
cwtl
xchg
lods
xor
fs
jno
cmp
data16
daa
push
adc
fcoml
stc
ljmp
sahf
sub
cli
xor
xchg
inc
pop
cmpsb
sub
in
push
adc
divb
outsb
je
aad
push
in
shrb
movsl
roll
pop
cmpsl
jge
out
lock
adc
insl
in
cmc
stos
adc
jecxz,pt
push
mov
mov
push
jno
adc
imul
mov
or
jle
mov
aas
cmc
dec
adc
jnp
mov
out
das
adc
gs
cmpsl
pop
cmp
clc
dec
inc
out
lret
mov
ja
xchg
inc
dec
mov
out
ret
xor
scas
filds
movsl
gs
or
and
xor
fwait
loopne
insl
dec
or
mov
inc
mov
in
adc
int3
cltd
xor
subb
sub
mov
push
sbb
int3
loopne
and
cltd
rcrl
icebp
mov
cwtl
repz
imul
jo
dec
and
push
adc
jo
adc
shrb
sbb
imul
rol
stc
dec
cmp
iret
sub
inc
scas
leave
jge
or
mov
aam
ret
pop
sahf
stc
pop
test
sbb
int
push
enter
outsl
and
out
lret
loopnew
jecxz
cld
pop
push
loop
jb
add
arpl
dec
sbb
js
rcrb
out
fsubr
movsl
js
mov
scas
out
addl
hlt
popf
lret
fnstsw
loop
dec
xchg
xchg
push
js
adc
shr
jle
jmp
aas
or
in
and
dec
push
les
add
sbb
arpl
push
aam
xchg
adc
int3
clc
outsb
mov
push
pop
xchg
push
ljmp
aas
mov
adc
ja
push
imul
jg
inc
shl
imul
outsb
addr16
insb
aaa
in
jmp
and
xor
lods
imul
pop
cmp
ss
cmpsb
and
loop
and
fcoms
dec
adc
int3
imul
add
fs
outsl
shrb
and
fmulp
nop
pop
mov
add
adc
or
imul
outsl
add
xor
dec
or
sub
or
pmaxsw
sti
sub
insb
dec
adc
loop
fsubrs
dec
out
inc
test
int3
repnz
shlb
cltd
in
jge
fstp
or
dec
ds
out
push
sarb
je
ds
cltd
inc
out
dec
push
cmp
shr
push
or
mov
clc
jmp
sti
sarb
pop
stc
pop
std
loope
out
jmp
shr
mov
imulb
arpl
xchg
das
out
xor
adc
in
inc
cmp
push
iret
cmp
dec
mov
mov
mov
push
icebp
dec
mov
mov
jb
push
mov
cmp
out
cmp
or
cld
ja
xchg
shrb
mov
repnz
pushf
push
xchg
mov
dec
divl
cvttps2pi
sbb
or
insb
push
notl
mov
repnz
out
cmp
or
rcrb
sbb
inc
jb
cmc
ret
rcrb
pop
xchg
loope
arpl
mov
mov
shlb
xchg
test
push
vandnps
clc
mov
inc
arpl
pop
mov
jo
sahf
inc
out
xchg
pop
scas
clc
bound
cmp
lods
xchg
dec
out
xchg
ljmp
out
loopne
sbb
fs
sbb
ljmp
rorb
adc
test
daa
popf
cli
adc
mov
movsb
stos
mov
pop
or
ljmp
int
loop
add
incb
fcomps
das
lock
insl
jmp
icebp
fstpl
arpl
ljmp
jae
sarl
dec
mov
xlat
in
or
sub
jl
push
or
push
lock
addr16
int3
xlat
pop
xchg
rorb
jle
or
mov
push
lock
dec
mul
out
rorb
cmp
pop
repz
ljmp
mov
jb
neg
out
ret
ljmp
arpl
jns
rcll
cmp
out
mov
and
inc
popa
push
sbb
hlt
dec
stc
mov
mov
rclb
test
daa
ja
add
scas
jns
mov
dec
pop
push
mov
lock
xchg
jns
dec
jle
pop
cltd
pop
mov
mov
or
sub
aaa
mov
dec
rcr
add
fnstsw
pop
jl
imul
cmp
stos
mov
mov
mov
dec
adc
imul
inc
push
mov
inc
xchg
mov
test
shlb
aad
xchg
xorb
jne
scas
pushf
bound
adc
in
stc
or
in
push
cmp
fnstsw
sub
in
dec
dec
xor
out
hlt
pop
mov
out
and
hlt
sbb
mov
or
cmp
xor
dec
or
jge
scas
neg
jo
hlt
fneni(8087
stos
mov
je
sub
mov
mov
daa
xchg
mov
pusha
cli
add
stos
jp
call
push
int3
xchg
enter
nop
xchg
cmp
inc
outsb
in
inc
in
mov
mov
out
and
rcr
pop
xchg
xchg
das
inc
lahf
enter
in
insl
aas
pop
mov
or
inc
nop
cmp
pop
clc
jl
insb
mov
push
lcall
and
jmp
je
sub
outsb
inc
ja
xchg
mov
pop
xor
or
jo
sub
mov
aaa
pop
or
push
xor
movsb
les
in
mov
and
mov
push
mov
pop
fcomps
test
push
outsb
mov
imul
or
add
test
mov
addr16
mov
mov
call
lds
js
pop
call
push
dec
lock
loopne
out
les
adc
xchg
and
add
adc
je
and
mov
ret
xchg
je
xor
push
or
xor
inc
pop
out
fisubrs
jns
ljmp
mov
ds
mov
loop
jnp
out
imul
jns
insl
pop
test
dec
pop
inc
mov
dec
mov
ret
call
cmp
jb
pop
lret
gs
es
cs
sub
or
daa
imul
mov
mov
call
pop
sbb
add
cmp
movsb
fisttpl
xor
mov
and
pusha
cmpsl
jb
mov
jmp
aam
lret
pop
dec
ljmp
cmpsl
js
je
mov
mov
loope
ljmp
insl
adc
sub
jmp
scas
daa
out
pop
mov
add
add
mov
cmp
andb
xchg
mov
out
mov
dec
ret
ljmp
outsb
pop
sub
pop
jl
in
push
mov
out
sub
aas
out
outsl
and
out
sti
dec
das
or
xor
sbb
jo
push
pop
lea
rorb
subb
loope
loop
add
js
mov
xor
shrd
mov
outsl
xchg
jo
clc
mov
call
js
ret
out
js
jo
out
jp
ljmp
mov
es
imul
popa
inc
lock
push
fwait
jle
popl
leave
pop
jne
arpl
sub
js
loopne
and
cmp
lock
xor
add
xchg
sbb
insb
inc
and
lods
pop
movsl
nop
push
sub
mov
push
push
hlt
lods
pop
sub
add
mov
mov
div
icebp
outsb
sbb
call
das
and
lret
lret
sub
inc
mov
sbb
or
adc
imul
push
jg
pop
shll
arpl
das
jl
les
out
inc
xchg
mov
aad
pop
dec
loopne
inc
movsl
sub
mull
jne
roll
add
sbb
push
inc
mov
add
inc
xchg
xchg
leave
stos
cmpsb
xsave
je
movsl
lds
testl
insb
repz
xchg
pop
faddp
in
xchg
lcall
lcall
je
mov
leave
pop
aas
out
sub
dec
push
and
cmp
ljmp
gs
je
inc
push
sarb
inc
sti
subl
outsb
inc
out
into
jp
cmp
inc
jo
mov
mov
psadbw
outsl
jge,pt
adc
repz
fnstenv
hlt
imul
sub
sbb
sarb
jo
out
jg
icebp
ds
push
inc
daa
stc
imul
mov
psadbw
or
stos
mov
in
mov
loope
cmpsb
loope
cmpb
je
arpl
in
dec
movsl
js
mov
sub
dec
sub
js
movsb
mov
mov
lods
mov
sbb
inc
cwtl
rol
arpl
je
pusha
sahf
pop
xor
fs
mov
daa
mov
fs
js
or
fdivp
mov
test
mov
cmp
cwtl
out
loopne
jae
outsb
aaa
fbstp
pop
adc
imul
loope
je
aad
jmp
add
lock
mov
subb
mov
lock
or
in
push
sub
mov
gs
cli
test
dec
enter
sub
es
or
pop
ljmp
xor
call
outsb
pusha
push
or
push
in
fs
or
hlt
mov
mov
roll
inc
xor
cltd
xor
pop
popf
pop
out
add
mov
and
das
xchg
out
sub
shrl
or
jne
ljmp
aaa
dec
shll
mov
fdivr
repnz
into
lcall
push
pop
mov
lahf
mulb
adc
daa
outsb
into
and
addr16
push
outsl
cmc
in
movsb
mov
dec
fcoms
into
pusha
stos
fsubs
sub
cmp
out
inc
ljmp
sbb
adc
sub
pop
sbb
cmpsl
ss
xchg
dec
fwait
cltd
jne
lret
pushf
pop
int3
ja
sbb
das
mov
andl
out
sbb
lods
repz
enter
fnstsw
movsl
stos
pop
add
outsb
sbb
ss
mov
sbb
mov
and
fchs
inc
sbb
or
mov
sbb
push
pop
push
mov
dec
int
pop
xor
testb
clc
dec
pop
add
xchg
in
shlb
nop
dec
lret
xor
lahf
insb
ljmp
imul
out
xchg
jl
test
outsl
arpl
adc
xor
jnp
dec
push
das
lock
mov
scas
push
fcomi
add
hlt
pop
sbb
dec
lods
gs
out
jg
fidivrl
cld
loopne
inc
in
sbb
cld
inc
outsb
adc
lcall
jge
xchg
push
push
and
dec
mov
inc
add
dec
out
daa
and
outsl
push
arpl
aad
outsl
and
pop
cld
sbb
fistps
testb
push
sbb
ret
mull
ret
pop
pushaw
out
or
xor
insl
pop
fcmove
or
repnz
cmp
scas
fwait
inc
and
insb
inc
es
movsb
add
jmp
mov
or
outsb
mov
mov
mov
jmp
test
cmp
scas
dec
sub
int3
jns
jg
clc
xor
out
lds
insl
cmp
in
push
push
jbe
mov
daa
insl
ret
loopne
popa
lahf
add
cltd
stc
outsb
mov
adc
aas
xchg
push
popa
loopne
mov
xchg
or
insl
dec
arpl
movsb
jl
mov
sub
fucomi
lret
pop
jle
dec
scas
inc
sbb
mov
jmp
stc
ftst
pop
pop
xchg
sahf
in
mov
xchg
push
addr16
pop
dec
pop
iret
int
sti
and
rol
insl
mov
add
dec
or
in
and
xchg
decb
sub
fmulp
aas
pop
xlat
stos
mov
jmp
jg
andl
mov
inc
mov
dec
mov
movsb
xorl
hlt
lcall
cmpsb
pop
lock
pop
cmpsl
ret
lret
or
hlt
cmpsb
mov
sti
inc
js
cltd
mov
push
js
mov
push
scas
sub
inc
lods
lea
daa
int3
jo
xchg
inc
addr16
shr
outsl
out
push
xchg
das
je
jge
int
out
sti
mov
mov
test
pushf
push
jns
out
popa
stc
out
lahf
jo
popf
add
jecxz
mov
loop
inc
movsl
mov
pop
push
test
adc
adc
mov
dec
mov
sti
sbb
out
je
shll
jl
mov
loopne
shr
sub
cmp
cmpsl
inc
push
inc
adc
and
call
movl
insl
push
inc
pop
mov
in
sub
rorb
mov
sub
dec
jnp
ret
or
dec
cs
jo
mov
mov
adc
and
jg
lock
ds
jl
sbb
sbb
dec
adc
mov
sub
mov
mov
or
sti
gs
mov
adc
pop
ss
ja
xchg
cmp
pusha
sbb
mov
or
lahf
ja
scas
sbb
imul
inc
xchg
add
imul
in
icebp
sub
gs
xchg
inc
sbb
push
in
xchg
cmp
mov
gs
add
pushf
shll
add
repnz
out
scas
out
adc
repz
outsl
xor
mov
pop
outsl
jae
sti
sbb
xor
sbb
cld
rclb
outsl
pusha
outsl
hlt
out
daa
scas
mov
sbb
pop
out
lea
int3
mov
imul
jo
cs
jae
in
pop
mov
jp
hlt
jb
dec
push
inc
je
sub
sbb
or
adc
lcall
lock
mov
xor
dec
movsl
cs
adc
xchg
lock
ret
xchg
loope
pop
mov
cmc
mov
das
fwait
and
divps
xchg
loop
or
cmp
pop
mov
adc
sub
call
cmp
mov
mov
dec
in
pusha
out
in
lds
rol
pop
mulb
sbb
pusha
imul
mov
mov
js
enter
sti
arpl
lcall
bound
pusha
cmc
jnp
mov
mov
mov
lea
pop
inc
in
aad
lock
out
fsts
sub
sahf
mov
das
adc
pushf
bound
jmp
rolb
cmpsl
daa
push
ret
imul
loopne
inc
or
mov
add
divps
mov
subb
pop
fcmovb
jle
xor
jmp
push
seta
mov
sti
xchg
or
ds
pop
mov
fwait
ret
aaa
scas
cmp
mov
mov
test
jge
daa
stc
hlt
mov
mov
adc
insb
enter
dec
push
dec
sub
fs
sbb
fistl
das
loopne
and
sub
ja
mov
pop
dec
push
ret
push
out
into
lret
fnstsw
scas
popf
daa
addr16
ljmp
popf
gs
ret
fstps
loopne
addr16
jmp
lods
movb
js
call
insl
dec
outsb
adc
idivb
je
sub
pop
sbb
out
push
into
popf
jb
fisubs
fwait
insl
xor
cwtl
lahf
cmp
dec
int3
mov
addr16
cmp
cmpsb
ja
testl
shrl
imul
xor
add
sti
cmpsl
sti
pop
xchg
addr16
adc
divl
or
jp
sbbb
lahf
fstpl
dec
xchg
cmc
dec
or
pop
jo
push
cmpsb
or
and
and
fldenvs
andb
cmc
or
sbb
fs
lahf
pop
out
mov
enter
mov
or
outsl
jo
xchg
jno
add
shrl
add
sub
jl
xor
pushf
inc
jmp
pop
cwtl
jmp
or
inc
jnp
dec
test
jp
test
dec
cmp
in
nop
mov
xchg
and
outsl
cmp
xchg
dec
aad
je
jo
add
stc
out
push
adc
push
into
stc
jne
xchg
jbe
daa
push
xor
sub
out
dec
push
hlt
mov
lock
cmpsb
je
mov
dec
stos
jg
daa
filds
test
aad
and
lcall
xor
pop
ja
out
add
cmp
adc
mov
xchg
mov
cld
sub
lods
sbb
outsb
outsl
pop
iret
dec
jo
fnstcw
adc
push
push
sbb
mov
xchg
leave
ficompl
stos
xor
mov
cmp
lock
pop
pop
jb
mov
push
outsl
call
lock
mov
lcall
push
mov
std
icebp
scas
and
ja
fwait
adc
mov
adc
jns
in
test
cmp
cmpsb
xchg
dec
cwtl
test
fldcw
dec
inc
aas
or
mov
jmp
cmp
test
sub
sub
mov
mov
cmpsb
ret
fcmovnb
and
je
pop
mov
inc
arpl
and
sbb
ss
xlat
addr16
xor
je
dec
inc
lds
dec
out
adc
adc
cmpsb
or
je
add
outsb
orl
push
push
mov
and
xor
jl
call
ljmp
sub
stos
in
sub
cmp
lods
cmp
enter
sti
loopne
out
add
ja
outsl
pop
and
ds
repnz
ja
pop
or
push
pop
aam
push
aam
mov
sub
and
je
and
xchg
push
ljmp
dec
push
inc
int
mov
and
test
jl
dec
rcrb
and
ljmp
cmpsb
mov
rorb
ljmp
stos
sahf
clc
arpl
pop
mov
shl
subb
inc
dec
sub
out
or
ret
pop
aaa
mov
aad
je
pop
xor
jp
call
jl
lea
push
std
pop
xchg
jmp
loopne
jns
rolb
add
adc
aas
sbb
daa
fbstp
mov
inc
rcrb
lea
pop
hlt
and
xchg
mov
hlt
adc
ret
pop
scas
hlt
push
or
add
or
push
addr16
int3
call
sub
dec
add
inc
lods
outsl
dec
call
int
lods
adc
iret
jmp
sub
add
aas
ret
cmc
and
jnp
adc
hlt
lds
dec
fisubrl
pop
or
pop
push
inc
sub
out
outsl
ja
ret
inc
imul
mov
scas
dec
push
jnp
movsl
inc
fldl
adc
scas
or
jg
push
mov
mov
pop
aas
pop
dec
std
push
push
lret
jmp
jle
in
mov
mov
inc
ret
xchg
and
pop
jge
dec
cmp
adc
jne
mov
xor
mov
icebp
lods
add
shlb
out
jp
loope
inc
xchg
mov
addr16
and
push
jl
cli
cmpsl
dec
sub
cmp
xchg
ds
sub
ljmp
or
add
push
pop
jg
cld
xchg
pusha
mov
es
adc
jmp
inc
test
shr
sub
stc
test
lea
out
ss
cmp
sarl
sbbb
inc
mov
imul
dec
fwait
loop
pop
or
icebp
clc
stc
jl
mov
cs
into
enter
pop
aam
out
cs
loopne
in
ret
les
int3
cmpsb
cmp
popf
arpl
push
jae
fdivs
loopne
and
or
icebp
pop
dec
loope
sub
push
pop
jbe
hlt
adc
je
jno
add
cmpsb
hlt
lods
cmp
shll
stos
insl
xor
loope,pt
jbe
in
je
and
dec
fucomp
insb
inc
in
insb
xor
dec
je
outsl
iret
insb
imul
push
loope
lcall
push
sub
xchg
rorb
mov
push
push
outsb
in
int
jmp
dec
sub
movb
xchg
ljmp
repz
xchg
mov
cmpsl
lock
pop
mov
xor
cmpsl
je
and
xchg
imul
sub
mov
call
add
adc
dec
jo
or
out
inc
mov
push
into
pop
lret
mov
inc
push
out
aam
add
mov
popl
adc
aas
imul
sub
jo
mov
jo
inc
addl
sbb
cmp
enter
mov
cmpsl
xchg
jns
jo
enter
sub
or
ret
mov
xchg
dec
dec
enter
insb
je
stos
sub
push
hlt
mov
imul
nop
and
je
stos
pusha
inc
push
dec
push
adcb
jns
cltd
push
outsl
in
xor
xchg
pusha
mov
mov
jbe
sbb
sub
and
dec
je
mov
cmpsb
add
imul
les
inc
and
cmp
negb
shrb
in
pop
jo
out
movsl
popf
repz
out
pop
mov
sbb
jo
cmp
push
sbb
jns
adc
cmpsb
fmull
scas
out
fndisi(8087
xor
sti
mov
gs
xor
jbe
adc
in
gs
ret
and
adc
or
filds
pushf
dec
add
cmpsb
insb
mov
xchg
stos
xor
addl
fisubl
fdivp
sbb
or
push
fbld
push
loop
lret
dec
rol
or
in
push
arpl
xchg
fcompl
out
dec
ret
dec
xchg
jecxz
mov
adc
mov
push
dec
arpl
pop
je
dec
aaa
imul
cmp
in
sub
mov
jbe
adc
scas
ja
test
xor
imul
pop
je
push
inc
test
fsts
sbb
daa
ret
call
sub
mov
addr16
aas
pop
push
test
jp
loop
push
popf
mov
mov
andb
addr16
jge
sub
fildl
test
insl
dec
repz
sbb
aas
mov
xor
push
mov
addr16
inc
and
mov
arpl
cmpsl
adc
imul
jbe
les
hlt
loopne
int3
and
and
data16
dec
mov
cmp
sbb
cld
loope
or
add
cmp
xor
cltd
inc
cmpsl
push
xchg
adc
popa
out
pop
out
inc
xor
xchg
out
icebp
push
jmp
push
jmp
dec
add
test
or
xchg
pusha
push
loope
cmovns
pop
js
repz
lods
and
test
sahf
adc
into
int3
mov
inc
fnstsw
cmp
push
and
xor
std
leave
movsb
lea
imul
sub
pop
loope
js
jno
sbb
loop
add
inc
movsl
jnp
cmpsl
adc
add
stos
push
loop
and
test
jbe
or
add
lock
fwait
lcall
stos
daa
jle
repnz
inc
mov
cmc
sub
je
test
call
popf
pusha
lock
adc
leave
imul
jg
je
test
cmp
inc
sub
je
dec
insl
jo
andb
pop
or
mov
dec
xchg
js
ds
mov
jmp
mov
pop
in
in
imul
in
in
orb
fsub
push
insl
jmp
pushf
insb
pop
stos
enter
sarl
jl
outsb
nop
lock
push
jns
cltd
in
pop
cs
inc
add
inc
or
inc
cmpsb
in
mov
sti
cltd
enter
inc
popf
addr16
xchg
sbb
push
aaa
mov
scas
inc
adc
jae
adc
out
fsubp
lods
arpl
push
addr16
lret
push
adcl
imul
mov
mov
pop
push
addr16
loopne
or
jmp
cmp
call
mov
stos
loopne
shll
cmpl
mov
and
and
sbb
test
xchg
inc
xchg
aad
stos
in
mov
fbld
incb
dec
fs
push
dec
in
mov
icebp
jecxz
movsb
addr16
pop
fs
adc
test
push
jp
dec
dec
les
pusha
call
jle
pushf
addr16
pop
xlat
jge
mov
mov
ljmp
leave
xor
dec
dec
outsb
test
insl
jo
sub
fwait
sub
dec
sbb
sti
or
jge
aas
ds
or
enter
cmp
test
test
loopne
pushf
test
inc
dec
push
mov
std
jnp
es
and
popf
addr16
fisubs
push
cmp
adc
push
mov
dec
loope
cwtl
je
add
mov
faddl
pusha
pop
movsl
sub
into
add
sbb
aam
das
mov
sub
mov
pop
gs
push
into
inc
loop
sub
in
add
dec
dec
cmp
dec
cltd
xchg
je
or
popf
jbe
adc
push
stos
imul
outsl
imul
mov
jmp
and
je
and
dec
test
int
or
inc
mov
ja
imul
inc
mov
in
jo
fs
decl
jle
jnp
mov
mov
xchg
gs
jp
ficompl
loop
adc
mov
loope
xchg
test
jge
ret
fdivrl
lods
cs
pop
and
stos
fimull
push
outsb
push
lret
and
pcmpeqb
push
iret
or
or
cli
out
mov
aaa
inc
sbb
adc
pop
int3
xchg
in
rolb
cmp
lock
in
sub
inc
cmpsl
pmulhuw
xor
mov
push
fildll
je
sbb
mov
pop
sti
sub
ljmp
inc
mov
aam
jl
in
push
xor
jle
repz
out
pop
xchg
popf
inc
lahf
dec
cld
or
jge
and
cmp
out
or
lret
mov
sbb
add
jg
ss
mov
pop
int3
jmp
repnz
insl
mov
insb
mov
in
cld
stos
int3
and
adc
mov
cmp
push
pop
nop
add
cs
or
ljmp
or
jbe
icebp
xor
pop
jns
xchg
insb
lods
adc
hlt
shl
dec
sub
insb
push
test
lods
call
repz
rclb
shlb
xchg
adc
adc
mov
test
loope
xchg
jg
mov
mulb
xor
outsb
jo
flds
add
push
or
flds
lock
adc
or
lret
sti
sub
mov
pop
mov
cli
mov
sub
fsubrl
lea
xor
cld
pop
jle
int
cmp
jo
into
js
stos
stos
or
jmp
in
pop
aam
adc
xorl
inc
movsb
mov
and
mov
ja
orl
pushf
rolb
je
pop
test
dec
inc
mov
and
push
loopw
jmp
pop
aaa
xor
aas
les
pop
mov
cmc
je
pop
cltd
mov
mov
fstpl
clc
stos
lock
push
fisubs
jecxz
jg
cmp
sub
or
pop
jns
xlat
sub
hlt
fnsave
icebp
fldt
loop
inc
hlt
lret
xchg
and
mov
nop
push
pushl
es
fstps
xor
push
ss
dec
lods
push
and
adc
aam
iret
jb
arpl
rcrl
loopne
lds
shll
push
ja
lods
xchg
pusha
inc
addr16
ret
aaa
mov
lock
scas
movsb
imul
adc
xor
inc
outsb
mov
mulb
nop
add
jp
dec
xchg
pop
lock
add
fsubr
or
lea
or
adc
mov
pushf
jbe
pop
inc
clc
and
testb
and
or
shlb
mov
or
cmp
sub
aaa
xchg
repnz
push
pusha
xchg
pop
popf
stc
dec
jge
dec
outsb
xchg
inc
enter
sub
jnp
je
enter
inc
dec
or
outsl
movsb
add
adc
xchg
cli
adcl
cmpsb
mov
mov
in
outsl
jo
lret
pushf
push
jb
jns
mov
fcomp
pop
cltd
shll
data16
pop
adc
and
mov
cwtl
in
inc
pusha
jo
ret
sbb
and
jb
scas
and
xor
cmpsb
lock
in
out
mov
mov
je
es
push
or
fnsave
popa
xor
je
pop
enter
cmp
inc
push
add
outsl
adc
push
mov
stc
and
cmp
inc
mov
mov
lods
nop
xchg
pop
nop
and
dec
lahf
lret
add
push
xchg
jae
std
jg
pop
pop
and
aad
mov
iret
imul
adc
cld
aaa
cltd
xor
cmc
data16
push
int
imul
test
jp
sti
cmp
xchg
data16
es
fldl
or
pop
int3
lcall
or
lahf
movsb
or
aad
inc
loope
pop
jne
inc
std
nop
pusha
hlt
clc
je
xor
es
nop
in
and
je
fs
fwait
push
xchg
inc
imul
mov
out
int3
repnz
sbb
jbe
inc
sub
fcomip
or
addr16
mov
pop
or
aaa
xor
addr16
fstl
scas
ret
das
add
cmpsl
out
pop
push
xor
call
cmp
cmp
mov
add
insb
call
or
sbb
jno
cmpsb
sbb
inc
fisubrs
out
push
sti
lahf
popf
sti
iret
and
cs
inc
mov
push
ficoms
xchg
push
loop
out
adc
adc
push
ljmp
add
lock
cmpsb
cltd
lret
push
xor
ja
adc
or
cmp
jmp
movsl
fistps
or
les
imul
scas
fs
jmp
jg
inc
fsubs
out
loope
nop
pop
popa
jle
fptan
pop
shrb
push
add
loop
pop
xor
mov
stos
sti
push
test
cmp
outsl
mov
loop
pop
insl
pop
dec
xchg
mov
out
pop
sbb
dec
cmp
sbb
dec
and
add
jge
fwait
push
insb
push
cmpsl
cli
sub
fstpl
xor
cmp
xor
out
pop
dec
or
pushf
xor
and
sahf
push
or
rcl
ret
aaa
push
addr16
fisttpl
sbb
push
call
int3
jo
in
repz
and
movsb
dec
dec
int
mov
mov
sbb
sub
ret
sbb
enter
or
loop
aad
pop
int
pop
inc
imul
das
addr16
popf
xor
inc
mov
sbb
insl
mov
and
out
imul
out
mov
in
test
stos
je
es
lcall
out
daa
std
add
cmp
shll
xchg
xchg
jecxz
pop
push
jo
push
fs
in
and
cmpsb
movsb
jp
je
cmpsb
and
scas
cwtl
addr16
dec
aad
fnstcw
pop
insl
psubd
add
loopne
lcall
inc
incb
negb
jo
and
shr
loope
or
push
xlat
loop
dec
jg
cmp
outsb
aas
lock
sti
shrb
imul
loop
aas
push
insl
adc
pop
addr16
aaa
arpl
out
xor
aad
fdivp
mov
push
ret
das
mov
imull
jp
movsl
daa
out
test
loopne
push
ljmp
je
out
inc
dec
clc
jg
js
clc
imull
je
out
inc
jg
clc
jne
sub
pop
lods
sub
jmp
sub
dec
lods
jg
das
inc
xor
mov
push
dec
ror
inc
mov
mov
shrl
xor
imul
nop
pusha
push
je
popf
fwait
notb
cmpsb
cld
movsl
je
int3
out
insl
mov
push
push
je
cmp
das
aas
out
xor
fsubrs
mov
in
fs
jmp
dec
push
aas
push
jecxz
std
dec
loop
out
je
and
ret
add
insl
loop
pop
daa
scas
in
mov
sbb
popf
lods
add
fiadds
pop
xchg
pop
pop
and
xchg
push
loopne
adc
mov
pushf
loopne
inc
add
addr16
mov
or
repnz
icebp
aaa
pop
pusha
pusha
mov
cld
pop
xor
cmp
jle
testb
cmpsb
xor
das
lds
call
idiv
loope
loop
xor
push
enter
add
out
inc
mov
test
imul
into
adc
mov
pop
insb
aam
mov
jo
in
test
jl
js
mov
mov
cltd
decb
sti
ret
pop
jl
popf
inc
ljmp
es
sub
xor
das
cmpsl
inc
pop
xchg
ss
pop
push
insl
jecxz
jg
lcall
dec
xchg
and
stc
mov
push
inc
out
pop
adc
cltd
xchg
cmp
mov
push
cld
pop
or
or
jno
jnp
mov
adc
inc
adc
loope
rorb
iret
and
and
pusha
insl
push
push
imul
dec
xchg
popf
mov
loopne
dec
dec
jmp
in
lds
pusha
outsl
insl
push
loopne
inc
das
cmp
push
lods
pusha
incb
inc
mov
push
dec
xor
ss
int3
mov
nop
call
fs
and
fwait
lock
xchg
icebp
cld
xchg
mov
aaa
loope
cli
mov
xchg
mov
pop
pop
sbb
je
std
test
jno
push
xchg
xchg
adc
subb
orb
mov
sub
pop
in
icebp
add
xchg
int3
imul
sti
sub
cmpsl
sub
ja
dec
nop
imulb
pusha
je
or
dec
shrb
pop
jae
in
cld
xorb
out
push
adc
divl
shlb
decl
mov
ret
jl
inc
lret
dec
popf
cmp
cmpsb
popa
pop
dec
loopne
pop
out
repz
pusha
sbb
in
insb
notl
insb
inc
in
push
ljmp
cwtl
dec
std
mov
cmp
inc
fldlg2
or
roll
ret
sub
insl
xor
ss
mov
mov
inc
out
push
cmp
push
push
insb
pop
fists
loopne
sbb
mov
sub
aas
or
scas
mov
insb
movsl
rolb
dec
bound
or
jle
lds
fistl
dec
xor
out
add
push
stc
cs
ja
daa
pop
add
test
inc
in
fstl
ss
bound
xor
add
add
sbb
inc
xchg
jnp
pop
in
scas
ljmp
fwait
imul
insl
push
loop
inc
dec
in
insb
or
push
fs
call
js
sub
or
xor
jo
sub
test
and
and
mov
in
les
jecxz
mov
jge
dec
sahf
mov
hlt
sbb
leave
push
xor
cmp
std
push
adc
pusha
push
insl
mov
push
scas
pop
je
xchg
pop
cmpsb
outsl
push
out
fldcw
aas
lock
hlt
rsqrtps
xor
pushf
xor
cli
inc
cltd
stos
mov
and
pop
lods
insb
xor
lret
cmp
jb
imul
sub
andb
pop
es
jae
std
xor
inc
sub
out
jnp
add
cmp
addr16
sahf
xor
mov
sub
sub
gs
sbb
fidivs
imul
cmp
pop
ljmp
cmp
jb
add
xor
sub
lret
sub
pop
jae
mov
sti
shr
xchg
sub
nop
ljmp
popl
fdivp
loopne
or
mov
in
mov
fwait
jb
dec
and
pop
imul
hlt
mov
xor
xchg
pushf
xchg
mov
ja
pop
xchg
add
cmpsb
out
lods
and
jmp
dec
xor
jbe
test
repnz
jg
mov
adc
js
jmp
push
int3
inc
stos
lret
fwait
sti
fwait
pop
pandn
pop
in
cmp
inc
pop
into
lock
or
mov
stos
dec
loope
les
dec
insl
dec
movsl
enter
fbld
mov
sub
jl
into
adc
or
cli
mov
xor
xchg
add
into
add
mov
jb
fstl
stos
cmc
shrb
add
or
or
cmp
cli
pop
setl
jg
ficompl
js
out
lret
mov
stc
stos
sbb
stos
insl
jecxz
sub
mov
mov
dec
aas
jo
jno
addr16
fs
das
rolb
test
or
popf
call
repz
xchg
outsl
test
or
ljmp
mov
mov
pop
mov
pop
jge
xor
imul
pop
push
icebp
jne
fisubrl
enter
pop
out
in
push
jnp
roll
and
mov
or
ja
lods
mov
test
pop
mov
dec
bnd
je
sar
inc
pop
xor
lock
xchg
ss
aaa
xchg
sub
iret
in
adc
nop
add
jbe
rorb
shrl
rclb
je
push
testb
out
das
push
stc
xor
push
cmc
shl
or
ljmp
mov
rolb
xchg
cmp
lret
fyl2x
xchg
add
pop
dec
or
lret
out
daa
insl
jnp
lods
ljmp
aam
pop
daa
cmpsl
inc
stos
dec
sub
shll
ficoml
cmpsl
mov
cmc
inc
push
lahf
les
sub
xchg
adcl
je
repz
shrl
sbb
sbb
ret
idivb
cmpsb
jo
mov
div
scas
sbb
adc
test
pop
insb
mov
sub
lds
mov
and
call
icebp
push
loopne
nop
dec
jmp
clc
int3
push
and
sub
inc
subb
mov
push
loop
in
mov
fidivrs
lret
cmc
repz
xchg
adc
daa
adc
jo
ret
sub
sub
in
xor
std
mov
andb
std
pop
test
insl
dec
in
pop
jge
js
call
mov
pop
imul
fisubl
cmc
into
sti
int3
out
pop
icebp
sahf
ljmp
xchg
loop
in
int3
jmp
inc
push
ljmp
cmp
mov
test
call
aam
mov
test
jo
mov
insb
pop
mov
aaa
pop
insl
outsb
adc
mov
pusha
or
out
or
pop
dec
out
out
icebp
pop
test
dec
mov
add
je
dec
or
mov
sub
xor
in
add
aas
testl
push
dec
sub
pop
out
les
mov
adc
das
mov
jg
push
in
je
xchg
sbb
dec
leave
out
cmp
xchg
das
daa
mov
mov
insb
adc
decl
out
test
adc
pushf
cld
xchg
sub
push
sub
loopne
mov
push
cmpsb
sbbb
xchg
test
fidivs
in
or
pop
out
dec
in
clc
and
into
and
inc
push
getsec
rorl
sarb
ficoml
stc
cmp
xchg
roll
xor
ret
inc
pushf
stos
and
xchg
fs
cmp
jae
xchg
iret
xchg
cmc
lret
mov
loope
int3
bound
popf
mov
pop
pop
lods
mov
test
ljmp
je
add
jno
or
adc
mov
mov
xchg
stos
push
cmp
dec
fucomip
pop
jg
or
mov
add
insl
inc
jg
lret
push
addr16
push
dec
cmpsl
add
loop
das
in
adc
popa
mov
mov
xor
das
pop
and
fs
fimuls
sti
test
gs
push
mov
loope
fbld
pop
add
pop
sub
sub
adc
cmp
aaa
testl
and
popf
jno
sub
ja
js
or
fsubp
sbb
add
inc
aaa
mov
js
subl
shrl
dec
inc
sbb
fcmovnu
mov
test
dec
push
sub
mov
stos
out
adc
aam
js
inc
xor
fidivrs
je
popf
hlt
lds
inc
ljmp
imul
mov
loop
adc
xor
push
iret
in
addr16
push
dec
pop
in
mov
je
rcl
sbbl
shlb
lea
xchg
ret
sahf
xor
pusha
jb
xchg
add
les
outsl
rcrl
xchg
mov
and
aas
out
cmp
bound
or
lds
adc
mov
xchg
loop
mov
js
int3
and
clc
stc
dec
je
mov
cmc
cmp
push
andb
dec
pop
inc
or
or
iret
movsb
rolb
add
xchg
sub
xlat
ret
mov
sahf
cmpsb
bound
int
push
bound
inc
jae
pop
mov
out
adc
movsb
daa
clc
sbb
push
inc
insb
mov
mov
push
pop
sub
add
mov
rcr
inc
loope
cmpsb
ret
ds
fcoml
scas
in
or
mov
mov
push
add
lock
addr16
or
and
imul
mov
and
das
ret
test
push
loope
jno
shrb
js
adc
add
add
xchg
and
pusha
frstor
enter
jg
jp
in
out
aaa
xchg
inc
repnz
aas
xchg
pushf
fldcw
jmp
movsb
lods
into
daa
ret
jl
out
push
pushl
sahf
arpl
mov
in
nop
and
fisttpl
pushw
frstor
loope
repnz
mov
xchg
xor
shrl
sbb
in
xchg
sbb
cli
out
xchg
xor
shlb
push
sbb
pop
add
xbegin
loopne
out
loop
pusha
imulb
cmp
shrb
pop
lock
outsl
filds
xchg
lock
popa
pop
jae
cmc
dec
bound
sbb
out
mov
dec
in
or
loope
popf
subl
int3
mov
insl
xor
lahf
das
push
sub
dec
aaa
aad
test
or
stos
subl
icebp
mov
into
sti
adc
jbe
ret
inc
test
popf
aaa
cmpsb
dec
adc
or
cmp
in
cmp
ja
xor
lock
pop
cmp
wrmsr
dec
fbld
dec
mov
outsb
in
int
lock
sbb
insl
jmp
mov
fimull
cwtl
pop
into
insl
pusha
scas
mov
push
aaa
lock
ret
add
and
js
pop
das
mov
int
out
out
outsb
rolb
sub
call
into
jg
pop
xchg
cmp
pusha
outsb
pop
js
sub
shrb
shll
mov
mov
mov
inc
fdivs
sub
mov
xor
rcrb
xor
data16
dec
scas
mov
mov
mov
ja
fdivp
jmp
xchg
xor
jg
cmp
adc
or
ret
daa
push
mov
or
and
lea
test
jp
xor
sub
insb
insl
jmp
daa
out
add
xchg
adc
mov
inc
push
xor
shlb
out
js
ret
sbb
imul
es
test
push
or
dec
mov
sub
sub
sub
das
in
xor
in
cmp
sbb
push
xchg
pop
movsb
sbb
xchg
adc
and
pop
movsb
adc
mov
imul
and
insl
pop
imull
xchg
dec
add
stc
mov
ja
fdiv
jmp
xchg
xor
insb
les
add
push
xor
xor
fbstp
arpl
mov
add
ret
sbb
imul
js
cld
popa
pusha
adc
mov
test
inc
int3
mov
dec
cmp
imulb
jmp
addl
xor
and
aad
inc
inc
arpl
mov
fisttps
jp
cltd
jp
dec
inc
ret
sbb
addr16
xor
insl
xor
or
stc
mov
ja
shl
cs
xor
jo
stos
cmp
das
psubq
sub
aas
jmp
ljmp
sub
cmpsl
test
lea
test
jp
cmp
mov
adc
movsl
addr16
daa
xor
cmp
aas
idiv
adc
dec
push
mov
mov
xchg
arpl
sub
xor
jmp
sub
test
pop
sub
gs
or
test
lahf
popa
ja
ret
xor
stos
cmp
and
cmp
imul
pop
xchg
arpl
cmp
push
xor
push
testl
int3
push
clc
mov
adc
fdivrl
xchg
sub
insb
sub
dec
push
sub
mov
adc
mov
inc
lret
dec
cmp
imulb
out
bound
push
mov
into
xor
enter
xor
sub
mov
xchg
fsubs
es
sub
push
jne
xor
cmpb
xor
addr16
insl
xchg
push
dec
stc
mov
ja
fwait
arpl
out
loopne
out
cmp
das
bound
sti
in
sub
cld
add
fisubrl
xor
add
subb
call
push
dec
jnp
cmp
inc
cvtdq2ps
sub
idiv
int3
or
inc
insb
decl
dec
lock
cwtl
int3
or
jmp
lret
inc
push
or
jl
push
out
scas
mov
out
adc
scas
daa
mov
addr16
ds
or
daa
nop
imul
add
mov
rcll
cld
cmp
jne
or
xchg
outsl
jecxz
or
shll
cmpsl
mov
jno
sbb
cmp
mov
push
pop
fisubs
pop
lret
jecxz
cmp
jae
lock
pop
out
lock
jb
dec
cmp
xchg
lcall
mov
addl
pop
jns
add
je
daa
call
icebp
aad
in
dec
aas
inc
je
add
dec
int
cwtl
fcoml
pop
insl
xor
push
out
outsb
movsb
imul
jmp
ljmp
testb
lods
das
push
mov
dec
sub
loope
xor
subb
movsl
jge
arpl
push
loopne
je
mov
sub
dec
sub
pop
out
fwait
inc
out
in
cld
sti
adc
cmpsb
pop
adc
push
cli
add
js
mov
push
std
add
ret
add
inc
shll
mov
insl
imull
push
xor
call
adc
popa
mov
call
xchg
das
lret
ljmp
fildll
std
dec
aaa
outsl
xchg
icebp
xor
jmp
sub
pusha
push
sub
in
cmp
repnz
sbb
imul
jg
add
fs
loopne
jne
test
and
mov
dec
jge
das
imul
push
pop
xchg
das
dec
ljmp
xor
das
push
adc
jo
call
outsl
out
loopne
hlt
push
fldt
insb
je
xlat
bnd
imul
dec
or
loop
in
push
inc
adc
nop
outsl
sbb
insl
int3
out
in
arpl
je
int3
mov
pop
dec
jg
add
je
fmull
dec
pop
pop
mov
dec
sub
mov
je
enter
push
imul
pop
xchg
push
lret
sbb
adc
inc
dec
das
mov
fidivrs
dec
in
daa
push
imul
cltd
mov
into
dec
cmp
in
mov
addr16
out
ljmp
adc
stc
cmpsl
loopne
jecxz
push
inc
pop
dec
xchg
mov
test
or
rcrl
lret
pusha
mov
es
jl
clc
xor
push
test
cs
mov
jnp
pop
jle
xchg
insl
movsl
cmc
clc
push
out
lock
adc
xor
jbe
jns
rorb
adc
lret
pop
mov
hlt
cmp
pop
bsr
repz
xchg
mov
mov
mov
add
movsl
xchg
mov
aas
dec
outsl
shufps
int3
pop
xor
mov
rol
sbb
sbb
and
jmp
and
andb
pop
movb
out
inc
sbb
xor
fs
aam
adcl
shrb
pop
outsl
mov
jmp
dec
jb
cmpsl
decl
shll
popl
loope
out
xor
les
pop
fwait
iret
mov
xchg
inc
jecxz
mov
fs
movl
call
loop
ds
inc
aam
inc
das
jmp
or
jne
loope
int3
ret
mov
fwait
insl
lds
adc
out
and
or
scas
or
scas
push
enter
mov
and
gs
jl
mov
shlb
mov
insb
lcall
mov
cld
jo
jne
or
mov
mov
outsl
jmp
popa
std
sti
ljmp
add
sub
ss
lock
roll
jns
fmull
scas
or
inc
repnz
into
sbb
cld
lock
or
int3
inc
pop
cld
cmp
cltd
push
insl
jbe
mov
rolb
je
stc
fstl
outsb
addr16
or
leave
sbb
xor
cmp
pop
push
pop
xor
mov
out
cmp
ja
enter
popa
jmp
pop
cmp
adc
cwtl
mov
inc
or
imul
outsl
push
stos
cmpsl
cmp
out
push
add
in
shlb
jg
insl
pop
push
fucom
cld
add
notl
sub
pop
mov
outsb
sbb
xor
hlt
xlat
and
dec
or
and
insb
pop
imul
popf
sub
neg
push
out
das
push
cmp
andb
mov
sub
lods
icebp
ret
lea
bound
xor
jb
dec
cmp
shll
insl
jo
cmpsb
mov
xchg
aas
pushl
sarl
ja
sub
sahf
je
into
sbb
es
leave
sub
enter
mov
out
pop
leave
pop
rcrl
cwtl
in
jmp
mov
dec
pop
mull
test
pop
jo
sbb
jg
movsl
adc
les
div
cwtl
pop
insl
mov
push
xor
xchg
dec
test
das
into
cmp
sbb
popf
jnp
and
xchg
out
jnp
insl
dec
out
adc
push
add
inc
int3
lret
subl
pminub
xor
inc
outsb
push
outsl
sub
hlt
cmp
jmp
or
cmp
mov
dec
out
dec
sub
cmp
or
daa
mov
sti
jns
mov
mov
movsl
frstor
movsl
in
dec
outsb
push
mov
adc
mov
mov
adc
dec
sbb
lcall
pop
cmpsb
ficoml
jo
fnstenv
cmp
push
add
rorb
pusha
call
mov
movsb
inc
dec
adcb
scas
lcall
inc
dec
jp
sub
pop
fs
shlb
enter
jmp
out
mov
data16
xchg
lods
clc
out
std
sub
mov
cmpsw
jl
dec
dec
and
pop
sub
clc
and
vprotw
xorb
ljmp
ljmp
sub
daa
sub
es
outsl
push
or
cmp
out
push
aad
cmp
pushf
sbb
aaa
repz
in
or
mov
test
or
mov
mov
gs
je
pop
cmp
push
ss
add
sti
inc
cmp
lock
mov
ja
jb
push
mov
lods
mov
ret
into
fs
sti
push
cmpsl
jp
jae
adc
mov
mov
popf
in
push
or
mov
imul
sahf
push
add
add
aas
sub
add
adc
lods
mov
lcall
mov
sbb
add
lock
mov
out
bswap
lcall
fsubs
cmp
and
stc
inc
mov
fldenv
adc
je
mov
inc
mov
je
xor
rcrl
sub
addr16
in
cmpsb
mov
jmp
sub
cli
add
pop
push
mov
insl
add
mov
int3
mov
mov
int
mov
mov
je
inc
ljmp
popa
and
dec
pop
and
andl
add
outsl
daa
sbb
mov
addr16
movsb
fucomip
push
xor
std
pop
dec
dec
stos
movsb
in
fs
pop
or
xchg
sbb
adc
iret
loope
adc
ljmp
mov
fwait
addr16
pop
gs
pop
enter
or
pcmpgtw
rcrb
sahf
add
loop
dec
out
int3
into
xchg
jmp
inc
xor
mov
push
cmp
xor
ds
lods
pop
inc
pop
ljmp
repnz
hlt
in
lret
push
push
xlat
xchg
out
imul
cltd
in
pop
adc
ret
xor
adc
push
dec
mov
add
push
or
mov
insb
push
pop
jo
loopne
push
fcomi
ds
lcall
aas
ja
in
call
out
jmp
loopne
lods
or
test
dec
imul
leave
lcall
addr16
mov
pop
repnz
outsb
push
inc
pop
and
xchg
jbe,pt
and
jnp
sbb
loop
inc
jo
ret
out
fldl
pop
lods
insl
lods
mov
in
out
xor
push
je
mov
pop
mov
in
into
xchg
xor
cmp
cmpl
sub
stos
dec
and
xor
jg
aam
mov
push
mov
dec
cmp
sub
mov
push
dec
pusha
int3
push
mov
clc
stos
sub
outsl
or
add
out
in
dec
mov
adcb
dec
scas
lock
outsb
lahf
ja
mov
jae
cmp
scas
outsl
mov
or
xchg
mov
push
pop
fs
sub
push
pusha
sub
mov
cmpsl
fisubrs
mov
cli
loop
mov
pop
cli
inc
cmp
or
xor
sub
testl
pusha
mov
mov
xchg
out
jne
insl
and
aas
and
xor
xchg
jb
mov
jl
adc
pop
loop
xor
dec
cwtl
std
popa
push
ret
jmp
or
jmp
xor
inc
xchg
mov
add
test
mov
jl
xchg
inc
add
inc
xchg
sti
cmc
mov
inc
icebp
jne
xchg
push
mov
mov
mov
cwtl
test
insl
jbe
je
sub
inc
outsb
gs
fs
inc
loopew
sub
add
popa
aam
sti
pusha
or
or
out
aas
movsl
je
outsb
mov
push
jo
fistps
xor
jbe
xor
cmpsl
xchg
fidivrs
bound
push
inc
mov
lret
imull
inc
insl
push
xor
inc
sub
adc
pushf
mov
xchg
mov
dec
sbb
sbb
rcl
aaa
or
cltd
loopne
inc
mov
mov
stc
sarb
mov
cmp
rcr
loopne
mov
pusha
idivl
jg
aam
fucomip
scas
je
or
movsb
daa
adc
dec
fbld
mull
das
jnp
arpl
pop
or
cmp
dec
loope
xor
stos
jl
test
push
adc
fnstcw
dec
out
push
roll
mov
mov
ljmp
inc
test
out
jmp
aad
jmp
mov
addb
or
stos
je
jmp
out
push
dec
dec
cmp
scas
int3
addr16
loope
addr16
mov
out
jge
movsb
dec
xor
sub
pop
mov
or
xchg
imul
pop
insl
imul
mov
movsl
jno
scas
cmp
aas
cmpsb
xchg
ucomiss
je
fadd
ret
inc
push
sbb
jns
outsb
imul
jmp
cmp
dec
add
es
lds
xor
push
inc
imul
or
mov
call
fimull
and
arpl
out
xchg
or
faddl
les
ret
cmpb
out
subb
cwtl
je
sub
pop
or
loop
add
and
out
dec
push
pop
and
xor
jne
popa
cmpsb
loop
int
adc
push
icebp
pop
jg
lock
jne
or
add
jle
imul
jmp
fldenv
xor
add
jecxz
scas
adc
iret
dec
cs
aam
aam
xchg
test
in
sub
je
fwait
cmp
mov
arpl
lret
add
adc
nop
and
cli
mov
jg
push
jb
push
lret
push
lods
push
mov
and
je
dec
push
mov
rorb
adc
loop
cmp
push
jae
das
lea
xchg
sub
les
mov
sti
jle
xor
xor
add
sbb
dec
ret
movsl
or
add
xchg
incb
mov
and
repz
mov
test
cmp
mov
aad
sub
sub
jne
or
pop
outsl
leave
cmp
es
dec
jo
sbb
outsl
add
dec
pop
movsl
lods
gs
outsb
sub
mov
je
push
mov
and
push
aaa
dec
out
pusha
outsl
cmp
out
iret
sub
iret
fisttps
mov
mov
sbb
cwtl
loopne
mov
or
mov
ret
sub
and
pushf
mov
dec
xor
dec
imul
rcl
stos
dec
jnp
jmp
outsb
lods
lret
sub
xor
mov
lds
insb
mov
dec
adc
dec
xchg
loop
jmp
hlt
cld
nop
dec
cmp
lds
inc
mov
inc
xchg
jg
or
imul
sub
into
dec
scas
or
nop
adc
bound
dec
ret
out
pop
aam
das
or
fbld
imul
xor
fsubs
clc
sub
stos
pop
rcll
gs
imul
jo
inc
push
je
stos
cs
jge
or
xchg
stos
or
mov
cmp
cld
lea
mov
scas
mov
mov
insl
pop
int3
lea
rcll
arpl
push
movsl
mov
cmpsl
add
xor
ret
cmpsb
addr16
out
int3
loope
jo
push
loopne
pop
or
mov
dec
stc
popa
fdecstp
shrl
mov
lock
add
push
mov
ljmp
dec
mov
das
mov
fldt
shl
mov
mov
movsl
dec
and
dec
xchg
ret
out
lret
jmp
movsl
xor
fwait
jge
add
inc
popf
rorb
popa
push
jne
jo
inc
loope
loop
mov
mov
ja
fildll
test
pop
das
fcomi
daa
push
sahf
cmc
test
sti
pop
mov
fisubrs
fbld
inc
pop
out
inc
call
jecxz
or
mov
mov
fistl
add
mov
inc
rolb
push
jp
add
cmc
mov
adc
xchg
cmp
inc
inc
imul
adc
and
pop
lcall
jge
mov
push
subb
leave
cld
enter
loopne
fdivs
jp
in
imul
jbe
inc
pop
xchg
les
push
sti
sub
nop
outsb
adc
xor
mov
jg
fsub
loopne
loopne
testb
jae
bound
loopne
or
repnz
repz
fmull
add
iret
lahf
and
mov
jbe
dec
add
xchg
jl
adc
push
outsb
addr16
or
xchg
out
repnz
add
mov
outsb
daa
jmp
out
ja
test
push
jae
sbb
je
or
add
dec
aad
add
jbe
adc
lds
loope
test
imul
out
leave
insl
ljmp
mov
xchg
add
push
pop
cmp
inc
imul
add
loopne
leave
pop
mov
dec
push
lock
push
aaa
dec
insb
scas
mov
cmpsb
jp
xor
sbb
push
loope
jecxz
mov
adc
and
adc
fs
hlt
imul
lcall
and
jle
out
data16
xchg
ror
jmp
jmp
rcr
insb
mov
les
out
dec
shr
pusha
sti
inc
out
adc
xchg
jmp
mov
clc
leave
sbb
jge
jle
lret
imul
cld
or
cmp
sbb
popa
scas
movsb
inc
int3
lock
roll
aad
bound
loope
inc
inc
imul
sarl
add
xor
imul
inc
push
mov
dec
loop
mov
iret
jns
fwait
xor
push
mov
mov
mov
push
leave
aad
lret
sbb
outsl
xchg
cld
int3
and
sbb
xchg
movsl
adc
cmpb
loop
push
into
push
shrl
out
dec
ret
inc
sub
sbb
pop
rorl
push
cmp
outsl
dec
add
outsb
mov
je
cld
enter
and
push
jmp
sbb
sub
sti
les
ds
mov
or
sbb
shl
inc
popa
xor
or
outsl
pusha
jmp
sbb
stos
das
or
insl
les
loop
jg
pop
fwait
mov
cmp
loopw,pt
lods
test
sub
pusha
mov
jge
push
test
push
insb
or
sub
push
test
loope
js
in
ret
insl
loop
lcall
inc
cmpsb
push
mov
jecxz
lret
pop
cmp
out
sbb
das
lods
leave
xlat
push
out
fs
mov
js
jb
xchg
mov
sbbb
mov
cmpsb
and
enter
push
inc
push
jb
mov
icebp
inc
dec
cmc
addr16
jnp
sub
xchg
stos
jo
pop
adc
add
jmp
xor
xor
xchg
add
stc
push
cltd
filds
or
call
xor
out
int
jmp
sub
push
xchg
or
fnsave
pop
dec
mov
sub
push
fs
push
jae
lret
sbb
jp
fidivs
dec
xchg
and
inc
adc
dec
dec
push
xor
jns
push
jecxz
and
aaa
jge
fidivrs
add
sbb
add
pop
jne
mov
jo
sbb
pop
imul
hlt
dec
sbb
call
fnstsw
xor
pop
das
outsb
xchg
inc
movsb
add
loop
inc
xor
fidivrl
pop
xchg
lret
mov
dec
jge
sbb
das
inc
pop
std
pop
or
sar
cmp
xor
mov
lret
pop
dec
out
mov
mov
call
jnp
inc
inc
lret
adc
dec
nop
xor
push
leave
insb
sub
and
adc
push
adcb
jns
in
shl
adc
xor
cmc
cld
or
jecxz
popf
push
ror
out
aam
sub
push
xchg
jb
pusha
in
lcall
cld
pop
imul
mov
pop
jp
das
call
lahf
stc
cmpsl
call
imul
movsl
xchg
lret
and
mov
jo
aam
outsl
or
mov
test
jb
inc
or
mov
mov
fsubl
pusha
fnsave
sub
lret
inc
mov
pop
fidivs
sti
jno
push
out
bound
loop
mov
scas
cmp
imul
leave
jge
adc
cld
sub
pop
push
aas
test
mov
sti
add
bound
mov
ja
jo
movsl
inc
and
jne
test
fisttpll
push
dec
add
push
out
daa
int3
ljmp
push
mov
fwait
sbb
sub
sub
daa
xchg
add
dec
ret
loopne
in
das
mov
lret
inc
dec
cmp
sub
imul
or
or
js
cmp
mov
and
sahf
fsubrs
adc
push
insb
xchg
es
pop
dec
subb
je
mov
or
out
sub
mov
lret
lods
scas
and
xor
jnp
fwait
bound
or
push
mov
jne
or
outsb
icebp
int3
cmc
outsl
sub
data16
repnz
test
push
mov
cltd
cmp
aas
lret
inc
test
nop
xchg
mov
aaa
jp
lock
and
test
mov
fdivs
or
xchg
out
sbb
out
inc
inc
testl
mov
lock
xchg
fst
maskmovq
notl
xchg
mov
mov
xchg
pop
sub
test
dec
je
subl
dec
insl
repz
popf
inc
testb
push
sbb
and
outsl
aaa
xchg
jle
xchg
imul
dec
jg
cld
inc
sub
lods
call
loopne
dec
jge
into
mov
jmp
adc
mov
clc
cli
sub
pop
imul
mov
shl
jecxz
mov
cmp
pop
fdiv
sub
push
push
push
pop
add
out
das
pop
cli
xchg
sub
dec
js
sub
or
cs
lret
hlt
jmp
adc
movsl
xlat
lods
xor
pop
or
imul
or
test
dec
pop
adc
and
ror
sub
adc
add
cmp
sahf
inc
or
out
pop
icebp
xor
int3
sub
dec
jo
add
xor
ljmp
add
fistl
mov
sub
fldt
cmpsb
dec
mov
sbb
dec
out
scas
fs
ljmp
pop
aas
fwait
repnz
shll
call
add
or
loop
push
cmp
mov
xor
leave
addr16
nop
lock
leave
adc
repnz
mov
aam
inc
sbb
mov
mov
jo
outsl
aam
mov
test
cmpsb
ljmp
fwait
div
jp
nop
int3
mov
call
push
adc
clc
jmp
inc
addr16
out
push
adc
sub
bound
add
jmp
push
in
gs
pop
cld
or
insb
iret
decl
ljmp
sti
mov
out
pushf
out
stc
out
pushl
fidivs
fsubp
lahf
push
insb
sar
filds
fcompl
push
dec
or
xchg
xor
or
idivl
pop
sbb
in
in
js
in
xor
lret
in
call
push
jo
insl
xorl
or
imul
pop
sbb
arpl
cli
lahf
adc
or
jge
mov
clc
xchg
xchg
lret
sub
imul
nopl
call
cmpsb
sub
in
jb
leave
data16
add
jne
mull
iret
in
pop
fsubr
mov
dec
xor
stos
sbb
xchg
adc
lcall
imul
xor
and
mov
jmp
sub
out
repz
sub
mov
sti
adc
cmpsb
std
adc
outsb
pop
pop
call
or
out
pop
dec
sbb
roll
ds
and
xor
ss
call
cld
sub
int3
test
push
in
ret
cmp
pop
fdivs
dec
or
sbb
aad
xchg
dec
or
adc
lds
inc
imul
pop
adc
repz
out
iret
out
cmp
mov
jp
aad
mov
popa
fimuls
push
xchg
cltd
sub
pop
cmc
shl
or
push
ret
pop
xor
addl
out
cmp
xchg
hlt
sbb
inc
push
fcompl
jnp
stos
mov
ja
xchg
cld
inc
cld
es
pop
outsb
fiaddl
xchg
adc
add
daa
inc
push
dec
in
lods
pop
cmp
int3
out
mov
or
jl
in
ficomps
jae
js
je
sbb
and
jae
stc
out
es
test
addr16
fldcw
mov
in
and
repnz
inc
call
shl
test
lds
sahf
dec
sbb
xchg
add
movsl
mov
mov
mov
jg
or
or
test
add
mov
xor
in
jns
je
adc
mov
push
ds
pop
ret
adc
and
inc
pop
imulb
or
or
jns
dec
in
adc
daa
xchg
lods
out
iret
cli
push
imul
xchg
ja
pop
je
add
sub
out
aam
jp
fistl
xor
mov
push
xor
lcall
outsl
or
mov
jne
nop
xchg
cmp
xorb
pop
cmp
inc
outsb
mov
mov
out
pusha
adc
arpl
inc
inc
jmp
xchg
sub
inc
daa
repnz
xchg
dec
roll
jae
mov
aad
pop
es
pop
cmpsb
es
imul
xor
inc
xchg
push
fsts
test
inc
fs
bound
and
cmpsb
icebp
pusha
jo
lock
fstl
and
xchg
lret
cmpsb
pop
add
insl
enter
fs
mov
rcrl
jg
insl
jnp
fimull
inc
lret
adc
insb
xchg
mov
ljmp
jl
movsb
dec
outsb
xchg
push
dec
in
stos
cwtl
lods
es
loop
pop
cld
xchg
movsb
xchg
adc
test
pop
pop
and
push
sti
jns
js
mov
mov
fisubrs
jge
aaa
pop
leave
jge
xchg
inc
test
lock
cmp
insl
jg
cmp
inc
adc
jo
daa
xchg
nop
jbe
fnsave
test
jae
jo
cmpsb
jge
mov
inc
in
int3
clc
adc
inc
in
test
stc
ja
fisttpl
stos
jnp
rorl
push
lea
dec
pop
mov
inc
add
dec
add
inc
sub
inc
mov
add
faddl
push
iret
popa
push
sbb
mov
pop
cwtl
pop
mov
jecxz
mov
push
test
loop
push
push
jb
imul
pop
pop
xor
xor
xchg
mov
sti
mov
sti
les
mov
lret
sub
dec
xor
flds
mov
pop
outsl
lcall
inc
jge
dec
loop
aas
fsubrp
fucomi
into
inc
daa
jle
push
hlt
and
pushf
jle
jl
fimuls
js
por
push
xor
pop
decl
inc
call
movsb
test
jmp
std
cld
mov
loope
jp
cs
jg
and
sub
je
es
or
mov
test
loop
daa
neg
ss
adc
pop
in
cli
imul
stos
mov
xlat
sub
mov
movsb
pop
lcall
mov
push
mov
xor
jns
and
fisubrs
push
and
fwait
mov
jmp
xchg
jg
mov
stc
inc
mov
pushf
mov
jb
lahf
push
sbb
xlat
push
outsb
sbb
decl
loop
loope
stos
xchg
lea
or
test
loopne
cld
ret
dec
xor
mov
xor
gs
inc
pop
sarb
adc
int3
in
cmp
pop
inc
cmp
lahf
outsl
insb
test
fimuls
push
aas
sarb
lds
and
xchg
pop
and
xor
mov
lods
dec
fisubl
out
pusha
cmpsb
pop
and
dec
rclb
imul
xor
loope
imul
sub
add
sub
and
addl
jne
mov
mov
frstor
mov
adc
inc
mov
mov
imul
test
enter
mov
ljmp
or
mov
pop
shlb
je
data16
data16
cmp
adc
loopne
mov
mov
in
test
cmpsb
mov
jne
sub
push
dec
mov
mov
imul
mov
cmp
sbb
repnz
in
nop
mov
jo
and
insl
adc
inc
adc
sbb
inc
push
aas
push
insl
fwait
insb
jg
aaa
insb
xchg
pusha
in
pop
cltd
jle
pusha
ljmp
jmp
cli
test
loopne
jns
out
pop
popa
dec
imull
out
imul
insl
dec
rep
in
jo
icebp
dec
inc
inc
jecxz
dec
arpl
dec
in
loop
and
dec
bound
outsl
loope
jo
mov
xor
imul
dec
jg
addr16
decb
pop
fs
std
pop
lock
jge
bound
ljmp
adc
std
in
or
jnp
out
pop
imul
insl
je
or
int3
xor
inc
jmp
add
cmc
subl
mov
mov
jns
pop
test
andl
shrl
and
clc
hlt
scas
dec
ret
test
fs
push
je
daa
cmc
loop
js
aaa
adc
mov
pop
fdivrs
cmp
or
in
fs
aas
adc
cmp
in
inc
mov
and
clc
aam
dec
cli
fwait
sbbl
xchg
mov
aam
orps
sbb
pop
add
stos
and
mul
loop
cmc
ds
mov
inc
jo
arpl
and
insl
outsl
pop
outsb
and
loopne
and
pop
xor
dec
ljmp
pusha
call
mov
in
loope
mov
pop
gs
inc
xchg
pop
inc
stc
xor
lea
pop
add
dec
insl
inc
mov
or
lahf
or
insl
popa
jmp
outsl
push
dec
les
in
insb
dec
out
pop
jmp
imul
outsl
ljmp
jl
or
or
and
in
cmp
or
pop
push
mov
orb
inc
jmp
dec
call
cltd
push
js
mov
js
jmp
dec
call
aam
mov
push
js
hlt
push
and
jmp
and
in
push
out
loopne
mulb
sti
loopne
xchg
push
push
in
mov
pop
dec
dec
sub
cmc
or
jle
adc
mov
or
and
in
sub
js
inc
out
loopne
ja
addr16
adc
in
test
pusha
loopne
jg
push
lret
imul
mov
pop
xor
out
add
cli
lock
or
xchg
push
cmp
outsl
cmpsl
roll
in
imul
or
jnp
jecxz
js
jnp
or
xor
add
push
ss
jne
sarb
and
imul
or
cwtl
out
xor
dec
arpl
std
in
xchg
xor
data16
out
in
scas
lahf
xor
xchg
mov
out
clc
loopne
std
incl
mov
imul
xlat
lcall
test
loopne
or
gs
push
addr16
aam
jmp
xchg
out
clc
jo
gs
fsub
jecxz
ds
call
adc
orb
mov
sbb
loope
mov
jo
sbb
mov
in
insb
bound
jge
int3
sti
jecxz
out
stc
jecxz
ja
imull
jmp
test
inc
out
outsb
addr16
dec
out
lahf
data16
and
insb
inc
in
cmp
mov
test
dec
out
js
cmp
ret
orl
ja
adc
push
push
mov
rol
jb
in
loope
mov
mov
addr16
mov
rcrb
jge
lahf
sub
add
fisubs
ficoms
out
arpl
ret
push
adc
loope
addr16
loopne
pusha
ret
cmpsl
jo
sub
ret
out
push
xor
das
sti
sub
outsl
xchg
and
adc
mov
push
push
adc
mov
test
mov
outsl
cltd
cwtl
adc
pop
mov
cmp
ftst
loopne
in
loopne
xor
loop
jne
inc
insb
iret
mov
popa
add
pop
loope
lods
ficoms
mov
lock
jns
dec
sbb
xchg
enter
xchg
scas
notb
into
xchg
jno
jp
and
dec
mov
cmp
je
xor
xchg
mov
ret
insl
hlt
call
and
call
aas
adc
mov
jg
aaa
bound
nop
arpl
adc
xor
in
push
js
pop
rolb
push
daa
xchg
movsb
xor
mov
iret
fs
mov
push
jo
leave
testb
loop
fs
lret
je
mov
mov
mov
sub
cli
rcll
adc
out
arpl
cmp
je
dec
ret
sub
dec
sahf
push
imul
repz
push
je
cmpsl
in
cmp
loop
enter
jl
fdivl
ja
xchg
loope
mov
dec
cmp
dec
mov
test
loope
inc
jo
imul
add
enter
jo
in
or
cmpsb
ljmp
gs
xor
es
or
mov
add
loope
mov
test
or
sbb
popa
shrb
iret
movsb
sub
in
sub
push
lret
addb
mov
or
loop
pop
lcall
gs
and
stos
cltd
rcll
mov
lret
loopne
add
push
mov
xchg
decl
inc
and
cli
popf
out
push
in
sub
loopne
cmp
push
out
nop
pusha
push
xor
sub
test
mov
pusha
outsb
xor
and
sarl
inc
cmpsl
jg
imul
jbe
push
roll
and
int3
movb
adc
out
pop
mov
cmp
xor
jne
data16
sar
mov
icebp
inc
cmc
sub
push
and
push
or
and
or
leave
xor
outsl
jb
shl
imul
cmp
movsb
lock
jo
adc
daa
xlat
in
outsl
das
jmp
push
cmpsl
jmp
dec
mov
cmpsb
jp
mov
pop
repz
leave
pop
outsb
or
insl
mov
lret
jge
in
movsb
jmp
jo
cld
stos
mov
add
pop
ds
and
jge
cmpsb
out
xor
repnz
test
and
or
loopne
cmp
adc
xchg
mov
mov
adc
test
xor
push
jne
cmp
out
sub
aas
mov
int
pop
inc
push
cs
test
pop
and
cmc
notb
jp
push
sbb
je
ret
mov
or
insl
cmpsl
mov
jns
lds
push
gs
dec
and
out
nop
sub
and
subb
pop
xor
pop
add
xchg
js,pn
iret
xchg
stc
pop
fiadds
in
push
mov
push
mov
je
shl
ror
in
ljmp
xchg
hlt
push
dec
loopne
pop
pop
je
je
or
in
or
mov
sbb
les
das
imul
out
xchg
pop
dec
fs
movsl
fldenv
enter
mov
repz
shr
das
in
pusha
nop
or
jmp
loop
fistl
xchg
pop
jl
xor
daa
and
daa
jg
je
fcoms
enter
mov
ret
mov
cmpsl
ja
cmp
jae
push
or
cmp
pop
aas
cmp
aam
xor
and
sub
add
cmpsl
jnp
push
fnsave
push
in
lahf
insb
inc
add
lds
jnp
cmpsb
fdivp
add
mov
lds
mov
into
push
repnz
mov
inc
fsubrp
test
sahf
lds
push
adc
lea
int
lock
pop
int3
pusha
lahf
adc
xor
push
xor
xor
mov
les
stc
xchg
roll
xchg
imul
cwtl
lret
adc
das
jne
mov
cld
dec
mov
inc
inc
fmuls
mov
outsl
xor
push
popa
pop
out
pop
adc
and
bswap
push
aas
movsl
fnstenv
mov
int3
adc
scas
movb
rolb
xlat
pop
gs
push
addr16
shrl
xchg
dec
ljmp
rcll
insl
or
mov
shl
cmp
inc
adc
cld
loop
movsb
pusha
lahf
out
cltd
outsl
cmp
insl
inc
into
dec
fldt
or
shlb
daa
insl
mov
lock
loop
into
outsl
add
out
sub
lret
jns
sub
inc
mov
inc
inc
lock
mov
aas
sub
pop
out
cmpsl
scas
and
pop
xor
mov
ds
jo
lret
cs
insb
mov
arpl
imul
dec
mov
mov
insb
cmpl
in
inc
out
xor
aad
mov
jl
cmp
sub
in
in
fsubrl
adc
test
mov
pop
loopne
std
cltd
mov
nop
loop
inc
arpl
add
jl
push
mov
out
mov
or
movsl
jne
cwtl
daa
adc
cmp
push
add
mov
sub
adc
mov
sbb
add
sbb
xchg
cmp
mov
jge
lahf
push
cld
clc
pop
cmova
pop
pop
movsb
cmpsl
xchg
fs
cmpsb
xor
xorb
in
jae
jl
mov
lret
mov
mov
cltd
sub
lock
cld
xlat
pop
in
in
mov
filds
insl
jmp
add
test
lds
jle
out
test
pop
push
push
rcll
fnstenv
aam
cltd
sbb
lock
add
adc
loop
inc
clc
xor
mov
dec
mov
jns
jg
or
adc
fwait
loop
mov
test
cmp
sahf
push
jbe
out
fdivrl
movsb
add
stos
cmc
rclb
dec
call
pop
adc
rdpmc
int3
xor
ret
sub
int
fstpt
lds
shlb
inc
mov
push
sub
xchg
lcall
and
lock
daa
lock
rorl
in
inc
lods
popa
add
dec
outsl
outsb
mov
jae
add
test
mov
mov
lods
cmpsb
std
dec
fidivs
aas
jae
inc
or
xchg
inc
mov
jmp
mov
and
cmpb
dec
shll
inc
mov
nop
test
cmc
or
fldcw
in
stos
adc
jmp
jecxz
adc
in
xchg
inc
add
lock
cmp
arpl
arpl
and
xor
mov
jb
stc
inc
stc
je
icebp
scas
and
jns
jl
shll
push
fsts
bound
xchg
lock
push
test
lret
ret
push
jbe
inc
pop
std
jne
add
dec
nop
inc
insb
dec
push
cmpsb
mov
mov
lods
mov
leave
xlat
int
orb
popa
outsb
test
and
es
lods
xor
adc
xor
lods
add
dec
jge
add
enter
enter
dec
daa
adc
jo
and
je
xor
sub
rcrl
xchg
push
lods
pop
sub
sahf
add
lods
repnz
out
push
ss
push
mov
repz
scas
xor
out
outsl
ret
in
nop
xor
push
scas
adc
push
shr
dec
mov
push
mov
ret
mov
imul
pop
cs
fldenv
addr16
mov
sub
cs
in
jmp
rolb
scas
mov
jne
jp
inc
lds
sub
pop
insl
inc
jecxz
xchg
and
scas
sub
pop
pusha
sub
mov
mov
mov
scas
daa
aaa
and
je
lock
and
pusha
jnp
sbb
scas
xor
cld
popa
imul
adc
push
cmp
xor
fldpi
shlb
push
and
and
movsl
pop
xchg
das
xor
out
popa
lods
jmp
dec
add
dec
mov
pop
cs
dec
loopne
mov
adc
or
cmp
cmp
fbstp
scas
aam
push
insb
subb
xorl
out
outsl
jbe
imul
fists
lock
inc
fdivl
aaa
mov
sbbb
dec
stos
jnp
inc
adcl
adc
sub
out
imul
adc
sub
enter
inc
jne
cmp
mov
pop
out
dec
jo
faddp
int3
lock
ja
mov
push
pop
xor
sbb
xor
aad
or
idiv
push
stos
push
insb
out
stos
jmp
or
int3
outsb
lock
jmp
loop
dec
push
dec
sub
sub
out
push
mov
mov
ljmp
jge
es
lds
leave
das
xchg
icebp
sbbb
inc
pop
aas
ljmp
arpl
fs
xor
das
into
dec
mov
nop
loopne
mov
fsubrl
jo
das
loopne
dec
push
imul
lea
add
rorb
call
pop
ja
loop
sti
rorb
outsb
insb
sbb
js
adc
sub
ficoms
jne
mov
pop
je
push
call
mov
cmp
sbbl
aaa
test
decl
jecxz
je
std
or
adc
int3
fisttpl
push
dec
ljmp
adc
rorl
bound
lods
mov
cmp
xchg
jb
les
push
test
test
int3
out
mov
xlat
aam
sub
lcall
shlb
loopne
cwtl
xchg
dec
shll
add
fdivrs
shrl
scas
fwait
outsb
and
add
sahf
or
je
loop
cmp
push
cmp
jne
push
xchg
pop
jnp
out
pop
adc
sbb
insl
fidivrs
mov
sub
pop
movsl
aaa
das
enter
arpl
adc
aas
lock
loope
sbb
leave
cld
rcll
xchg
jns
ja
scas
fildll
out
orl
mov
pusha
mov
sbb
test
shr
adc
lds
stos
push
iret
call
dec
push
insb
cmpsl
out
inc
popa
inc
or
push
inc
scas
jecxz
mov
inc
jo
in
mov
mov
das
pusha
adc
lcall
loop
adc
push
sub
or
and
repnz
in
aad
orb
enter
stc
dec
mov
fadds
push
loope
insb
insl
cmpsb
mov
into
shrb
xchg
daa
lret
aam
popa
or
inc
push
ljmp
xchg
loopne
dec
xor
jo
sub
push
mov
cmp
test
lock
das
fisttpl
into
pusha
adc
cmpsb
lock
adc
mov
pop
cmp
and
push
dec
inc
fisttps
dec
dec
jge
push
pop
imul
cmc
pop
mov
lret
in
lods
inc
js,pt
push
pop
das
push
outsl
std
vprotd
rorl
or
ret
negl
sti
sub
out
jne
push
popl
jge
ds
push
push
out
mov
addb
dec
outsb
mov
daa
popf
loopne
xchg
push
sub
dec
and
lods
and
cmp
jo
into
cmp
scas
mov
cmp
in
mov
or
out
movsb
pop
and
and
push
sbb
jns
or
sahf
inc
cld
fbld
jb
xchg
add
repnz
adc
add
sub
test
mov
inc
dec
mov
loop
aaa
cmc
push
sbb
xchg
push
inc
stos
aaa
xchg
movsl
and
cltd
lock
mul
pop
fildl
jg
jl
dec
lock
push
sub
xchg
outsb
and
push
enter
or
test
mov
pop
add
xor
mov
lea
out
subl
lock
jo
xchg
adc
mov
adc
stc
push
cmp
dec
sbb
add
cltd
dec
mov
into
jno
dec
dec
ret
dec
xorl
adc
or
js
add
mov
insl
adc
mov
ror
cli
lea
dec
popl
jecxz
sub
in
pop
mov
out
cltd
lods
xchg
pop
or
and
lds
iret
dec
adc
gs
cmpsl
repz
dec
xchg
insb
int
movsl
xchg
jge
sbb
dec
or
int
cmp
test
iret
or
scas
pop
test
test
and
ljmp
cli
xchg
imul
mov
gs
or
jb
mov
jmp
int
jp
mov
aaa
pop
and
imulb
inc
les
je
outsb
fcmovb
scas
ljmp
mov
insb
and
out
out
jmp
out
jmp
nop
lcall
cmpxchg
enter
out
mov
sub
mov
mov
cmp
or
lods
enter
fcmovb
adc
movsl
ljmp
aas
and
lods
inc
ficompl
in
mov
and
inc
or
aaa
popf
loopne
cwtl
xchg
xchg
sbb
mov
cmpsb
pop
dec
mov
pop
sub
in
mov
jg
clc
repnz
and
in
movsl
out
out
pop
icebp
inc
mov
jl
ljmp
lock
dec
je
xchg
andb
sub
int3
cmpsb
push
insb
sub
inc
xor
or
repnz
cmp
idiv
lret
sub
fmull
xchg
in
scas
push
mov
pop
and
test
or
gs
sahf
daa
xor
gs
test
gs
dec
je
dec
lret
xor
int3
jo
pop
xchg
nop
popa
xor
out
mov
adc
shll
xor
stos
out
push
cmpsb
das
nop
faddp
pop
xlat
sbb
cmp
outsl
sub
fstpt
add
popf
out
cmpsb
insl
push
out
push
test
icebp
lds
popf
loop
cmpsl
jne
mov
pop
mov
repnz
xlat
fstl
shrl
adc
jmp
cs
xor
imul
xor
push
in
je
push
aaa
ja
inc
ljmp
push
push
jmp
je
cmp
mov
cmp
adc
out
fbstp
daa
movsb
lods
fimull
cmpsl
daa
add
icebp
cmp
sbb
cmpsb
dec
cwtl
nop
pop
jg
push
scas
out
daa
lret
adcb
and
mov
in
sahf
mov
dec
xor
mov
lret
repz
daa
mov
and
filds
cmp
jbe
pop
adc
orl
mov
pop
test
je
mov
xor
inc
out
popa
dec
mov
xchg
stc
and
xchg
inc
cld
subb
shlb
push
pop
mov
xchg
xchg
xor
sub
lock
xchg
std
stos
fisttps
cmpsb
sbb
pop
add
mov
jmp
icebp
adc
je
cmp
and
int3
xchg
shl
outsb
sahf
sarb
inc
mov
or
xchg
out
mov
dec
repnz
in
das
cmp
mov
xchg
xor
test
xchg
pop
fdivs
dec
aam
or
lock
mov
push
and
inc
pop
push
adc
sbb
mov
jae
lret
lcall
cli
jl
lret
sbb
dec
aas
stos
dec
icebp
int
das
jbe
cli
mov
in
inc
sub
lock
mov
or
arpl
lock
push
push
popf
inc
jmp
cmp
loop
outsl
loope
push
pop
loope
dec
ja
or
cmp
jns
daa
push
mov
jnp
popa
xchg
cmpsl
ljmp
or
xchg
inc
sub
faddl
daa
mov
inc
adc
adc
mov
mov
test
dec
cltd
cmp
jecxz
out
dec
test
push
arpl
out
fcompl
inc
push
push
add
imul
imul
push
mov
jb
movsl
ds
scas
das
and
lret
jmp
push
fsubrs
scas
iret
mov
std
mov
cmp
inc
mov
imul
in
dec
fnsave
jnp
inc
insl
or
test
clc
inc
repnz
fdivrl
adc
jg
pop
mov
cwtl
and
dec
sbb
jne
cmpsl
mov
sub
jbe
or
lret
mov
sub
xchg
ss
inc
pop
cld
insb
jmp
pop
pop
out
insb
mov
sub
mov
mov
cmp
lods
or
xlat
jmp
inc
mov
and
sahf
aaa
jne
inc
xor
jo
mov
outsb
loop
sub
insb
pop
jne
cmpsl
bound
ret
mov
lret
jbe
or
add
inc
test
cmpsb
fs
addr16
fisttps
je
inc
fcoml
sti
or
in
xor
lea
and
test
mov
lods
and
test
cwtl
xor
and
jo
imul
out
xchg
dec
push
and
jns
jnp
andb
pusha
dec
inc
out
jnp
test
pop
inc
call
dec
popf
je
sbb
imul
inc
cld
add
pop
push
inc
inc
xchg
xchg
and
ret
icebp
pop
sahf
sarl
clc
mov
std
inc
popf
mov
das
mov
das
and
add
mov
in
or
loope
out
ret
xor
jmp
fnstenv
stos
inc
call
add
cmp
cwtl
pop
fimuls
arpl
add
scas
jnp
inc
scas
in
leave
or
ret
or
ljmp
fsts
dec
fsub
out
xor
shlb
imul
jo
xchg
pop
mov
outsb
xorl
cmp
es
push
jae
adc
aaa
xor
int3
movsl
xchg
sbbb
nop
push
push
cmp
lret
mov
add
or
sub
out
loope
xchg
cmpsl
repz
or
es
mov
scas
rcl
mov
imul
xchg
push
cmp
sbb
pop
xchg
insl
lds
inc
cmp
dec
outsl
cltd
movsb
add
mov
mov
pop
adc
outsb
xor
cwtl
adc
nop
sub
dec
test
fsubrl
lods
add
fucomip
sub
pop
add
push
fnstsw
in
orb
or
fs
xor
jecxz
loopne
outsl
les
loope
add
dec
xor
je
cmp
adc
ret
add
push
popa
sub
sub
icebp
popl
sbb
jbe
lea
js
mov
jmp
pop
jle
xor
mov
scas
add
test
add
daa
movb
in
dec
jmp
stos
in
call
cmp
mov
arpl
shll
pop
mov
sti
cli
fwait
adc
and
addb
push
loop
fsubp
jnp
shlb
adc
add
jo
mov
in
or
jnp
and
mov
xor
mov
clc
pushf
mov
mov
insb
pop
leave
addr16
sti
cmpsb
inc
fwait
jae
or
enter
pusha
xor
or
out
mov
mov
xor
xchg
lea
jne
cmp
add
xchg
cmp
push
jo
gs
scas
xor
xor
xor
or
outsl
adc
pop
lret
psrad
or
push
mov
cmpsl
out
or
bound
aaa
cltd
xchg
fs
je
mov
or
jbe
popf
repnz
hlt
ficoml
xor
leave
push
lahf
in
stos
jle
cmpsb
aaa
dec
xchg
je
mov
mov
push
mov
out
roll
in
popa
lea
lock
outsl
clc
jge
sbb
xchg
inc
sbb
and
loope
int3
fbld
shl
mov
je
aad
lahf
sets
out
adc
pop
inc
call
jle
add
sbb
mov
jae
bound
testb
add
pop
movsl
mov
jno
subl
scas
orb
test
je
data16
xchg
jbe
push
sahf
inc
aaa
iret
fiaddl
dec
jmp
jecxz
stos
bound
inc
imul
lock
test
gs
imul
pop
push
movsl
sub
add
jle
loop
xchg
pop
jo
dec
fwait
test
lods
rclb
or
jns
cmp
add
and
into
and
mov
out
dec
out
imul
adc
jns
sub
push
mov
and
aam
loop
cmp
push
insl
push
sub
lods
dec
test
cmp
ret
xor
mov
cmp
std
clc
loop
sbb
jb
xchg
inc
push
stos
xchg
das
rclb
xchg
clc
lahf
and
scas
inc
xor
jo
lods
pop
mov
lret
pop
sub
cmp
outsl
aam
jbe
orb
push
and
decb
or
inc
cmp
cmp
pop
jno
adc
adc
fbld
push
xchg
add
icebp
adc
dec
sarb
add
outsl
cld
or
div
dec
cmpsl
cmc
mov
add
outsb
test
jg
push
fcoml
ljmp
int3
data16
imul
inc
sbb
sti
jle
mov
lcall
mov
cmp
inc
cmp
mov
lret
add
addr16
cs
adc
mov
push
das
out
ljmp
xchg
arpl
push
sub
push
adc
stc
stc
lods
xchg
sbb
jl
fcompl
out
inc
call
je
pop
ja
in
out
jmp
and
mov
out
in
mov
call
stos
add
sbb
xchg
out
adc
dec
push
cmpsb
je
adc
mov
cltd
ja
imul
jmp
dec
cmp
in
loopne
push
jno
imul
push
iret
ljmp
mov
movsb
pop
jmp
addr16
sbb
mov
xchg
dec
cmp
rorb
jg
inc
lock
xor
mov
sbbl
andl
dec
cltd
ret
cltd
sbb
imul
push
daa
cli
dec
push
and
jno
pop
dec
outsb
ficomps
push
push
fwait
in
aas
loopne
adc
rcll
rorl
jne
jnp
das
je
push
addr16
adc
lock
lods
call
xchg
mov
mov
loopne
push
rcr
and
add
ffree
pop
cwtl
aas
add
fiadds
adcl
fmul
js
cmp
lcall
and
mov
jbe
lock
movsb
leave
in
cli
rcr
aas
ljmp
cmp
pop
mov
dec
shrl
sti
out
out
inc
sub
pop
lcall
adc
in
outsl
push
mov
sub
dec
dec
fs
add
int
xor
loop
dec
or
rolb
xor
xor
in
inc
adc
jbe
ffreep
das
mov
add
jbe
push
sarl
fdivl
adc
je
mov
cmp
inc
rcrb
clc
repz
inc
ret
clc
shrb
aad
movsb
popa
sahf
pop
jmp
into
xor
rorb
jg
out
aas
mov
pop
lahf
imul
dec
aaa
sarl
add
out
cmp
les
loope
add
push
pop
sub
xor
cmpsb
xor
cld
popf
mov
mov
ror
push
pop
inc
add
cmp
cmpsb
jmp
sbb
dec
xchg
and
shll
jle
call
fiaddl
or
cmp
insb
pop
push
daa
cmpl
dec
mov
mov
fs
stos
push
mov
in
lret
lahf
xchg
mov
adc
push
cmpsb
cmpsb
iret
test
pop
out
jae
dec
sub
ljmp
packssdw
int
lods
ljmp
cmpsb
scas
adc
xchg
lock
insb
fiadds
jnp
inc
mov
lret
repz
push
jnp
mov
jle
scas
je
jle
dec
push
fists
sbb
dec
inc
jb
push
outsb
xor
das
imul
loop
sahf
dec
imul
inc
in
xchg
popa
push
jmp
sbb
xchg
adc
lcall
pop
lret
iret
je
sbb
pop
and
cs
xor
rorl
loope
mov
sbb
daa
inc
lds
mov
subl
xchg
daa
and
and
cmpsl
sahf
fcomi
pusha
xchg
frstor
push
data16
cmpsl
sti
fcmovnb
fnstsw
testl
scas
bnd
jp
out
push
in
iret
mov
dec
fmul
inc
adc
stc
loopne
lock
jl
imul
outsb
pop
pop
pop
sti
outsl
sti
pop
es
cmp
or
jae
jno
xor
imul
mov
insb
ds
xor
int3
xchg
call
inc
imul
lock
aaa
mov
mov
cld
mov
repz
sbb
out
insl
mov
pop
xor
sub
in
mov
and
imul
fucom
mov
cmpb
cmpxchg
jmp
or
and
xchg
and
daa
aad
xchg
in
popf
pop
xlat
in
pusha
cmp
mov
sbb
cld
test
shl
xor
mov
inc
fnsave
outsb
stc
insl
inc
repnz
cmpsl
jg
mov
mov
imul
and
and
dec
ljmp
scas
arpl
inc
insb
and
sub
and
scas
jge
stos
xor
jae
inc
outsb
loop
jg
inc
aaa
sahf
pop
outsb
cmp
and
test
mov
scas
pushf
addr16
lret
mov
jmp
js
inc
loop
aas
cltd
push
and
sub
dec
jmp
jg
xchg
imul
mov
pop
jo
jg
mov
xor
je
mov
mov
sbb
cmovbe
inc
je
ds
lods
loop
mov
call
mov
scas
push
cwtl
xor
aaa
add
mov
fbstp
dec
not
xchg
or
fisubl
or
xor
andps
mov
stos
test
push
push
fbld
out
or
dec
inc
mov
push
daa
je
push
out
dec
test
je
or
lahf
fimuls
push
jl
scas
push
push
mov
in
cmpsb
cmp
fbld
popf
push
subb
mov
dec
insb
mov
ret
imul
fs
mov
cmp
push
or
xchg
outsl
data16
mov
insb
in
sub
add
dec
addr16
mov
bound
mov
mov
mov
popf
insb
mov
inc
mov
and
push
pop
ljmp
pusha
outsl
mov
jae
and
pop
scas
or
mov
lock
scas
or
add
inc
scas
dec
push
add
call
pop
punpckhbw
inc
xchg
mov
mov
pushf
pop
shlb
fistl
sbb
loopne
jns
mov
mov
push
push
adc
jg
pop
add
scas
test
mov
stc
aaa
addr16
cmpsl
cli
sahf
inc
push
cmp
fisttpll
fs
cld
sbb
xchg
add
iret
sub
push
adc
daa
test
mov
mov
call
mov
adc
test
and
shll
sub
add
jecxz
enter
cmpsl
lds
xlat
dec
add
gs
das
cmpsl
push
push
in
loope
inc
adc
dec
pcmpgtb
pop
adc
mov
push
or
in
mov
int
adc
add
xchg
loop
lret
add
mov
mov
fisttpl
jl
pushf
add
fs
pop
lret
das
test
in
mov
out
push
cmpsl
push
movsb
pop
aad
lods
sahf
inc
jle
dec
test
xorl
es
std
ret
nop
ljmp
js
jl
dec
jg
jecxz
aaa
stos
cmp
in
pusha
pushw
into
shlb
mov
push
push
push
sub
das
inc
xlat
lret
and
idivb
fists
addr16
jle
sbb
add
dec
lods
push
and
andb
pushf
popa
fisttpl
xorb
or
add
incb
dec
pop
xlat
frstor
mov
es
adc
mov
pop
pusha
push
lahf
stc
xchg
jl
sbb
mov
cld
jmp
fstl
xchg
out
in
add
icebp
xchg
mull
jmp
xor
pop
mov
daa
or
inc
in
sbb
out
pop
bound
push
loop
addr16
popa
fiadds
or
test
outsb
push
mov
ljmp
mov
in
cmp
sub
inc
clc
jle
push
imul
add
mov
outsl
out
test
xchg
mov
inc
sbb
dec
daa
dec
test
xchg
jecxz
scas
in
xchg
jmp
movsb
add
popaw
sbb
insl
das
pop
hlt
add
mull
mov
inc
imul
loopne
data16
dec
mov
push
in
xchg
mov
lods
mov
xor
push
adc
add
add
sub
push
cmpsl
js
xor
lret
dec
mov
outsl
mov
fmull
mov
outsl
jbe
adc
inc
xlat
sub
push
orl
xchg
out
ficomps
mov
lods
pushf
mov
test
push
push
xor
fisubs
jmp
xchg
mov
inc
scas
out
rcrb
icebp
add
lds
adc
add
push
pop
xchg
wbinvd
xchg
aad
sub
cmc
pop
xor
push
int
stos
loop
sub
je
inc
mov
adc
xor
imul
dec
sti
scas
pusha
adc
out
inc
lods
push
sub
xchg
xor
ds
fcoms
sbbl
je
cmp
jo
imul
outsl
add
ljmp
cltd
enter
dec
scas
mov
mov
in
stc
lret
mov
pushf
sub
pop
mov
push
insl
lock
sub
lret
sbb
lahf
test
pushf
pop
movsl
je
jb
lret
rep
ds
adc
into
aaa
test
dec
je
jmp
add
dec
mov
xchg
xor
cld
xchg
mov
popf
inc
cmc
aas
jmp
dec
jae
fnstenv
imul
cmpsl
xor
dec
dec
repz
ds
hlt
lcall
movsb
movsb
or
imul
flds
push
or
lcall
lret
mov
jae
inc
sub
push
and
divl
scas
and
pusha
std
rcl
insb
mov
scas
push
je
aas
test
dec
ja
dec
mov
fistl
sub
lock
dec
je
inc
or
test
or
jo
popf
push
and
xor
xor
out
cmpsl
inc
add
xchg
pop
mov
push
loop
mov
dec
pop
inc
ljmp
xchg
lcall
fiadds
das
jl
or
jle
popl
shr
mov
xchg
jecxz
repnz
adc
push
jo
cmp
pop
cld
or
scas
sti
pushf
ret
push
popa
in
mov
pusha
sub
push
in
mov
int3
add
std
jo
cltd
leave
sub
push
mov
faddl
dec
mov
nop
or
dec
adc
std
mov
sub
cmp
data16
dec
xor
je
outsl
sub
clc
xchg
xor
pushf
and
inc
repnz
cmpsl
daa
cmpsb
ds
push
mov
mov
ljmp
xor
cs
and
outsl
lret
mov
cmpsb
pop
xchg
mov
inc
dec
test
inc
pusha
mov
cltd
pusha
jae
inc
jle
loope
lock
int
cli
test
add
push
mov
popf
inc
sub
cltd
pop
es
in
and
in
pushf
xchg
loopne
daa
xor
aad
mov
mov
test
nop
pop
popa
sub
sti
scas
popf
rclb
mov
or
nop
je
enter
fbstp
pop
mov
dec
dec
enter
push
and
dec
call
negb
insl
outsl
mov
int3
and
push
jo
sub
dec
jecxz
lods
sub
mov
imul
sub
jecxz
fbstp
into
ret
lock
xchg
into
inc
mov
jae
popa
sub
adc
daa
andl
inc
mov
lea
and
xchg
push
add
or
xor
lcall
xor
rcrl
pop
pop
mov
ja
dec
and
mov
sub
dec
addr16
call
xchg
pop
push
out
push
dec
sbb
cmp
rorb
xchg
call
std
xchg
or
into
jg
dec
out
push
loopne
int3
dec
fildll
into
jg
and
popf
clc
mov
xor
sbb
sbb
push
repnz
jp
mov
xor
int
pusha
cmp
mov
sbb
adc
or
or
gs
push
xchg
out
and
lahf
pusha
test
scas
test
dec
stc
fstp
repz
push
and
movsl
out
fstl
and
nop
popf
jecxz
mov
in
dec
popa
lock
add
and
subl
outsl
xchg
and
push
fisttpl
loopne
sub
test
dec
jmp
cld
movl
add
daa
pusha
jae
popa
sub
mov
out
mov
jo
sub
mov
mov
test
pop
ficomps
mov
jo
xor
inc
je
test
push
test
cmpsl
pop
movsl
loop
bound
xor
addr16
jge
loope
test
sub
repnz
inc
pusha
sbb
mov
sub
insl
rcr
cld
cwtl
cmc
and
lret
sub
clc
out
test
subb
mov
imul
shlb
xor
std
cld
adc
cmc
clc
jne
je
pop
call
arpl
or
push
loopne
pop
push
adc
and
jecxz
imul
loope
imul
cmpsl
adc
inc
imulb
addr16
out
inc
pop
sub
inc
sbb
push
jae
imul
in
stos
out
xor
jmp
jbe
mov
sarb
inc
imul
imul
fs
into
movl
outsl
and
push
or
sub
fs
ror
divl
jmp
setnp
ret
cmc
insb
fisubrs
xor
in
out
loopne
xchg
or
loop
sbb
adc
out
cltd
stc
mov
xor
divb
and
sbb
imul
aad
jo,pn
loope
add
pop
repz
push
imul
das
jle
adc
dec
mov
roll
addr16
imul
cli
ja
insb
ret
enter
imul
nop
jnp
cli
outsl
je
sbbb
ret
xchg
fwait
mov
pop
lret
or
stc
jbe
jnp
jne
adc
xchg
inc
and
rorb
out
das
repz
push
and
pushf
jecxz
insb
xor
insb
sub
dec
jae
sti
enter
or
andb
popf
idiv
jg
and
pop
popf
enter
jb
add
cs
add
mov
inc
in
loop
push
movsl
adc
iret
ljmp
xlat
jle
jg
das
sub
outsl
jl
outsl
sub
cli
pop
imul
or
pop
jmp
std
or
aas
xchg
sub
push
test
inc
testb
rcrl
xchg
loopne
add
xor
scas
pop
xor
ljmp
out
and
movlps
xor
and
cmpsb
xor
xor
test
cwtl
mov
in
loopne
dec
pop
inc
mov
das
daa
cmpsl
out
fstl
push
mov
loop
and
movsl
out
xor
or
loop
lea
jo
dec
subl
outsb
ja
outsb
aaa
cmp
xor
sti
lahf
pop
stc
xor
mov
push
out
adc
aaa
loopne
sar
sahf
dec
cmp
push
ret
push
loopne
scas
loopne
lock
and
jnp,pt
adcl
lahf
push
push
or
jmp
add
test
jle
insb
or
pop
xorb
inc
pop
dec
pop
bound
dec
lods
outsb
cwtl
or
mov
and
fcompl
stc
adc
adc
in
mov
cmp
lret
sarl
xchg
call
jmp
adc
jae
fs
mov
icebp
xchg
in
xor
faddl
cmp
imul
and
sub
push
adc
xorl
jmp
in
insl
add
imul
xchg
sub
pop
adcl
imul
lods
push
inc
imul
push
popf
in
inc
aaa
icebp
cmpsb
and
cmp
sbb
pop
out
and
inc
hlt
outsl
dec
inc
pop
ret
in
bound
sahf
icebp
ja
mov
sahf
cmp
ljmp
ret
bound
inc
vmovdqu
cld
js
and
dec
test
insl
lock
in
cli
jmp
mov
push
mov
pushf
cmp
call
adc
inc
dec
shrl
sar
pop
out
movsb
sub
xchg
aad
xor
mov
fidivrs
mov
lods
add
mov
clc
ja
out
ja
cmp
das
cld
or
dec
mov
notb
jbe
enter
in
or
sub
pop
in
out
pop
imul
call
cmp
js
out
cmpsb
pop
sbb
cmp
js
dec
mov
mull
stc
test
pop
data16
shlb
jle
sti
add
pop
pop
movsb
mov
aam
pop
jnp
lock
adc
jp
mov
mov
dec
cwtl
je
push
hlt
jmp
out
or
les
lcall
jnp
pop
mov
jle
insl
or
outsb
in
mov
je
adc
nop
dec
outsl
imul
jg
stos
jl
ret
orl
shr
icebp
inc
pop
leave
stc
mov
out
ret
mov
jne
cmpsb
mov
sbb
sahf
push
lcall
popf
das
xchg
outsl
jl
jl
clc
pop
mov
pop
push
xor
divb
pusha
je
lcall
out
lea
stc
or
mov
insl
inc
xchg
mov
loopne
pop
pushf
fsub
ja
push
push
cli
and
jmp
adc
test
sub
pop
icebp
xchg
insl
mov
mov
lret
arpl
test
lcall
cld
lock
ja
jecxz
pop
adc
shll
call
sbb
sbb
shrl
fnstenv
push
xchg
sub
in
icebp
sub
push
push
cmpsl
pop
aaa
xchg
adc
mov
push
mov
push
cmp
xor
push
cmc
mov
outsl
outsl
outsb
aas
inc
out
push
stos
stc
sbb
sbb
jno
mulb
lods
ss
fiaddl
push
mov
movsl
jg
rorl
push
out
push
cli
pop
dec
loope
cli
aad
icebp
je
movsl
inc
jl
sbb
inc
and
mov
pop
pusha
push
int3
mov
movsb
enter
xchg
loopne
cmp
and
neg
inc
xor
pop
inc
leave
push
stos
mov
add
adc
mov
fisubs
xor
adc
lods
jg
mov
push
popf
outsl
push
pop
xchg
xchg
sub
inc
lret
test
xchg
ljmp
fcomip
dec
dec
mov
imul
push
and
aas
ja
pop
and
inc
scas
pusha
pop
mov
lods
insb
mov
repz
pop
outsl
mov
loope
push
lock
je
dec
mov
sti
sahf
daa
lcall
lods
into
dec
imul
push
and
fisttps
in
dec
repz
insb
lret
faddp
js
in
and
dec
lret
stos
movb
mov
incb
sub
dec
fisubrl
aas
das
rorb
dec
incb
and
fs
jg
loope
jle
addr16
sbbl
bound
adc
lods
pop
fisubrs
xor
sub
mov
mov
int3
adc
fsubr
adc
icebp
clc
mov
sti
fdivs
mov
jne
imul
repnz
repnz
popl
sbb
mov
mov
cmpb
aas
gs
scas
in
mov
ja
notb
shlb
ret
push
pushl
call
mov
pop
and
fnstenv
pusha
xor
je
cld
fcoml
leave
inc
sbb
or
or
push
clc
mov
loopne
cmpsw
sbb
cmpsl
cmp
nop
push
pushf
sub
in
pop
dec
clc
sbb
inc
outsl
movsl
sbb
sbb
loop
dec
cmp
inc
mov
fmuls
call
pop
jle
dec
inc
adc
enter
xchg
lcall
xchg
imul
xchg
mov
ficoms
sbb
pop
xor
loop
cmp
ret
mov
nop
sub
dec
insl
add
divb
and
add
mov
jecxz
push
fdivrp
lods
lock
or
mov
dec
shlb
fsubr
xlat
stos
ds
aas
pop
push
das
and
cmp
sbb
call
lds
loop
ljmp
mov
out
icebp
int3
stos
cmpsb
pop
fwait
and
push
xor
icebp
nop
std
mov
out
pcmpeqb
pusha
pop
mov
push
int3
popa
pop
out
or
js
hlt
in
dec
movsl
clc
das
jo
inc
cmp
mov
adc
js
clc
in
and
sti
clc
popa
dec
ja
dec
decw
mov
data16
jbe
out
jo
pusha
pusha
js
loopne
and
loope
add
inc
loope
push
xor
sbb
push
arpl
mov
in
cmpb
pusha
aad
jbe
arpl
loop
push
xchg
mov
sub
fsubrl
xor
sbb
in
das
imul
xchg
sti
xchg
lcall
mov
pop
cmpsb
sbb
stos
dec
sbb
iret
out
sarb
inc
in
loop
mov
adc
mov
and
jb
cmp
in
jmp
push
xor
xor
jb
daa
mov
loop
scas
lret
shlb
sub
outsb
lret
lods
insl
mov
test
mov
movsl
leave
mov
lods
lds
mov
and
divb
sub
data16
outsl
adcb
out
dec
and
and
push
aad
dec
xchg
js
call
or
out
mov
and
push
js
xor
sbb
inc
pop
mov
dec
popa
loopne
adc
pop
into
ljmp
dec
push
dec
fsubr
pop
test
push
dec
lea
xchg
fidivrs
xchg
call
xchg
adc
lods
movsl
fstpt
mov
shlb
fucomi
jge
adc
xor
insb
dec
int3
ljmp
pusha
jmp
sbb
cmp
lret
out
stos
icebp
or
xor
sub
jl
daa
and
test
sub
loopne
pushf
and
dec
outsl
outsb
out
stos
pushw
pushf
subb
ja,pt
jg
into
sbb
push
and
xchg
js
les
pop
enter
pop
nop
pusha
insb
sub
push
out
jo
adc
sub
dec
fstps
mov
and
std
outsb
jge
cmp
outsb
ljmp
popf
imul
pop
nop
arpl
bound
lret
test
sahf
mov
push
clc
sysret
xor
mov
data16
push
enter
or
outsb
jge
insb
fistpll
gs
jge
or
jmp
pop
filds
in
pop
inc
insl
insl
int3
inc
out
rorl
fildl
pusha
sbb
cmpb
sub
add
mov
out
xchg
sahf
lret
sub
les
xor
insl
adc
lds
loop
xor
ret
aad
jl
loop
insb
adc
nop
lret
lock
je
adcb
enter
aas
lahf
cmp
es
subb
push
push
jmp
pop
clc
je
mov
xchg
test
push
jmp
ja
fprem1
stc
mov
scas
stc
aas
nop
xor
mov
adc
addr16
push
mov
mov
lcall
pop
ss
test
push
jnp
shrb
mov
jo
xor
cwtl
pop
ljmp
sbb
in
inc
addr16
adc
in
dec
xchg
ds
addr16
loop
adc
scas
daa
mov
cwtl
lcall
pop
out
sahf
pop
xor
repnz
mov
rcll
adc
les
outsb
sti
mov
lret
shr
arpl
cmpsl
and
mov
mov
inc
cmc
ja
outsb
xchg
adc
test
mov
loope
add
loopne
jb
fstpl
nop
mov
movsl
gs
flds
xchg
mov
adcb
sub
mov
repz
mov
push
fs
lcall
std
mov
or
movsl
push
je
daa
xchg
pushf
or
adc
ljmp
xchg
cmp
add
iret
or
mov
insb
lret
push
lods
sti
and
ret
jbe
insb
mov
out
cmpsl
les
xor
ljmp
jae
pop
loopne
or
leave
add
std
and
hlt
insb
or
add
sub
stos
popa
mov
push
pusha
pop
ja
mov
add
xor
jnp
push
andl
and
push
jge
xchg
mov
dec
xor
sub
inc
jae
push
sub
rorl
xchg
add
in
loopne
scas
in
fiadds
int
mov
das
jg
pop
loop
mov
or
fstl
inc
daa
inc
lea
xchg
pop
add
test
inc
das
loope
sub
jns
imul
je
fs
mov
popf
stos
jge
xchg
addl
rclb
mov
sub
push
fs
loop
xor
mov
test
sbb
jle
insl
je
bsf
int3
js
push
mov
pop
imul
and
stc
mov
es
mov
cld
mov
cld
int3
dec
movsb
in
pop
int3
insb
loopne
aaa
frstor
xchg
in
cltd
adc
je
xor
ss
out
pop
and
push
cmp
push
iret
or
add
push
cmp
pop
mov
rcrl
add
sbb
fwait
push
imull
sbb
mov
dec
outsb
outsl
inc
stc
ss
xchg
add
cld
nop
call
dec
bound
push
pop
or
xchg
jl
xor
ret
mov
insb
sub
xchg
or
mov
ret
mov
pop
cld
xchg
in
in
mov
iret
xlat
iret
lea
jecxz
fimuls
outsb
daa
xchg
inc
inc
mov
mov
sub
jg
fsubp
jl
adc
das
aad
jne
sbb
and
mov
aas
cmovg
or
cmp
or
and
popf
out
pop
sti
test
movsb
loop
mov
bnd
sbb
imul
add
mov
fsubl
cld
popl
or
mov
push
xor
jmp
je
fadd
sub
xor
dec
jb
xchg
xchg
movsl
out
aas
mov
pop
adc
je
lds
push
cltd
jmp
adc
cmpsl
mov
pusha
push
xor
pop
lret
les
aad
dec
sbb
and
ljmp
adc
ljmp
int3
lret
lds
and
out
sbbb
sbb
mov
int
shrb
xor
data16
loop
ret
xorb
cli
sub
pushw
push
int3
mov
push
pop
aaa
push
aaa
cli
and
jecxz
xlat
clc
jecxz
dec
cmp
in
and
clc
sbb
cltd
adc
loop
xchg
add
loop
pop
int3
or
xlat
sbb
in
jl
out
sbb
pop
pop
loop
jp
pop
add
pusha
push
rcpps
push
sub
add
add
ljmp
cmpsb
idivl
movsl
jns
push
mov
jnp
or
iret
js
test
adcl
cli
loope
xchg
out
scas
sbb
dec
arpl
ljmp
out
enter
adc
in
xchg
cmp
and
adc
adc
cld
sbb
inc
loopne
mov
aas
es
clc
jnp
jo
addb
sbb
lret
xchg
shll
dec
insl
cmpsb
lahf
insb
insl
loopne
cmpsl
in
mov
push
outsb
mov
adc
scas
scas
ffreep
lcall
add
sub
jmp
insl
lret
insl
xor
dec
mov
scas
psubusb
dec
cs
xchg
lret
xchg
push
cmp
cmpsb
aaa
in
dec
int
dec
or
and
sbb
out
icebp
mov
xor
and
xor
lods
jmp
mov
addr16
mov
and
pop
movb
xchg
add
and
lods
outsl
jb
inc
and
fiaddl
mul
in
rorb
sub
mov
aas
fwait
sbb
mov
jecxz
push
xor
pop
lock
je
sarl
repz
push
sahf
rcr
test
pop
jg
in
mov
stos
sar
cmp
lret
shll
cmp
push
ror
out
pop
insb
enter
cld
in
inc
gs
and
daa
scas
pop
push
lock
cmpsl
xor
das
sbb
sub
lret
mov
sub
enter
jle
inc
mov
loopne
inc
or
push
int3
sub
jo
stos
sbb
scas
insl
or
inc
add
rcll
xchg
loopne
xchg
dec
lret
jp
movsl
pop
test
and
inc
ret
jmp
dec
out
and
cmpsb
push
push
psraw
ret
in
vmread
cmpsb
out
or
in
stos
out
xor
in
clc
sub
inc
xor
mov
lods
out
and
jae
push
into
mov
fdivrs
or
dec
jp
inc
sbb
push
and
mov
mov
pop
add
sbb
aas
mov
xchg
sub
jne
loope
add
imul
inc
pop
in
je
inc
pop
inc
insl
hlt
lret
sbb
jl
je
cwtl
clc
jp
scas
packsswb
rcr
out
inc
cld
insl
cld
cmpl
push
sub
insl
mov
rorb
out
adc
imul
and
lahf
dec
out
adc
or
inc
sarw
mov
mov
jbe
xchg
into
sti
jmp
push
lahf
mov
mov
push
aam
fadds
dec
mov
or
mov
das
mov
out
sbb
sbb
mov
adc
dec
lds
inc
mov
sub
xor
inc
cmp
mov
jbe
jo
jle
push
pop
mov
or
and
pop
test
dec
ret
jl
lret
pushl
out
std
dec
aas
jle
xlat
cs
jb
cmpb
inc
in
out
imul
js
pop
push
fdivs
jle
test
das
das
inc
pop
out
test
repnz
xchg
mov
outsl
xchg
out
je
sub
faddl
les
xchg
popf
jae
push
jmp
xor
sti
icebp
mov
int3
scas
aas
repz
mov
cmp
xchg
adc
pop
mov
jo
aaa
jmp
outsl
mov
mov
out
in
dec
sbb
in
imul
lea
out
sahf
iret
icebp
inc
add
push
xchg
pop
call
pop
test
daa
mov
pop
movsb
enter
jmp
je
es
jo
cmpsb
int3
in
das
mov
mov
jb
mov
daa
arpl
test
std
pop
xchg
dec
out
mov
add
mov
insl
sub
or
mov
xchg
fnstcw
sbb
pop
es
xchg
cmpsb
sub
jmp
jmp
ljmp
pop
int3
cmpb
sbb
or
out
fimull
jb
jle
lahf
pushw
insl
enter
or
push
fisubrs
outsl
push
out
jg
je
push
adc
and
fstpt
lahf
pop
outsb
sbb
dec
jmp
mov
insl
pop
mov
loop
and
dec
adc
mov
hlt
or
in
shrl
cld
outsl
or
or
sub
cmpsl
sti
fdivl
mov
faddl
jb
cmp
cwtd
js
loop
xchg
pop
cld
mov
in
repz
loop
fsubrs
cltd
and
lahf
test
dec
je
stos
shll
cld
pop
in
mov
pushf
sbb
sbb
sbb
xor
gs
mov
lock
das
aas
fcoms
lcall
cmpsl
mov
in
test
lock
movsl
mov
es
push
cmp
xor
push
pop
int
dec
popa
push
clc
out
push
stos
cmpsb
jle
ljmp
mov
or
xor
stc
out
pop
xor
jno
pushl
in
xchg
mov
and
aam
in
cmp
jo
cli
stc
gs
outsl
fsubrs
imul
push
loope
fildll
jmp
rdpmc
push
fdivrs
mov
ret
sub
lea
dec
pop
outsb
aas
xorb
and
jecxz
out
xorb
sub
addl
rorb
pusha
pop
test
mov
sbb
add
sbb
pop
stc
xchg
dec
out
push
insb
mov
mov
cmp
mov
popa
aas
push
popa
clc
out
sub
les
jmp
dec
iret
sub
dec
imul
loop
push
ljmp
inc
or
mov
pop
or
ror
jmp
mov
mov
mov
push
fwait
ja
fldt
cmp
in
sti
xchg
aas
xchg
enter
xlat
inc
lock
int3
aaa
xchg
lock
lock
mov
sub
pop
mov
and
loopne
xchg
jb
inc
leave
cmpl
in
outsb
inc
js
insl
dec
or
js
rcll
push
dec
or
lods
aad
or
stc
jecxz
pop
mov
mov
mov
push
or
xchg
fdiv
mov
cmpsb
and
je
push
imul
inc
xchg
aaa
pushf
adc
pop
mov
mov
mov
push
fadds
push
or
ljmp
dec
ljmp
adc
push
ds
jp
cli
sbb
mul
jg
sbb
lret
inc
flds
das
cmpsb
dec
fs
cmp
je
and
adc
cld
fstps
dec
ja
loopne
xor
cmp
cmp
dec
adc
outsb
fs
andb
je
push
mov
inc
fstl
out
cmp
fwait
addr16
lods
fildll
mov
call
je
dec
int3
mov
movsb
adc
sub
pop
iret
push
insl
mov
cvtps2pi
mov
out
je
pop
ret
aad
fwait
sbb
sbb
inc
xchg
daa
mov
cmp
xor
int3
ret
testl
stos
sti
xchg
scas
je
sbb
cmpsb
call
cmp
mov
inc
loop
jmp
or
dec
das
cltd
sub
sbb
xor
add
mov
sahf
xchg
adc
or
pop
and
push
jo
syscall
inc
jbe
add
test
jl
push
push
test
das
jo
je
pop
fiaddl
insb
mov
fistpl
mov
lret
repz
insl
xchg
insb
xor
outsl
das
lret
je
or
inc
jmp
movsl
sbb
dec
jmp
lods
bound
adc
test
les
xchg
scas
add
scas
mov
out
push
jmp
rcl
aas
sbb
fiadds
dec
cmp
sub
adc
cld
push
mov
push
jmp
xchg
test
lock
nop
xchg
call
or
mov
loop
mov
pop
mov
popf
xchg
movsl
imul
lret
lahf
hlt
imul
or
jae
in
fdivrl
cmp
jmp
sti
jmp
and
and
adc
mov
cltd
ja
imul
fs
call
loop
push
fadd
popf
push
loope
mov
mov
xchg
push
jb
lods
push
cli
ja
cwtl
mov
mov
cwtl
out
mov
sbb
int3
imul
loop
hlt
cwtl
mov
pop
test
arpl
imul
cmpsb
rcrb
rorl
cld
lret
jecxz
imul
pusha
out
arpl
mov
repnz
mov
push
mov
sar
jb
adc
pop
sub
mov
pop
loop
pop
dec
das
xorb
ret
test
pop
jmp
jnp
cmpsb
xchg
arpl
sub
nop
outsb
jecxz
sbb
setb
cmp
test
mov
sub
gs
je
sbbl
loop
inc
cmp
jg
and
cmp
hlt
addr16
mov
fnstenv
cmp
out
cmp
xor
adc
sub
loope
cmp
mov
push
rcll
dec
sbb
std
push
cmp
repnz
int
mov
daa
xchg
pop
mov
mov
xchg
mov
add
add
jbe
or
mov
nop
cwtl
test
add
daa
xchg
mov
ret
mov
test
scas
imul
int
mov
and
in
outsb
movsl
add
shr
jae
push
outsl
test
mov
pop
out
dec
cmc
jnp
loope
loop
cmc
lods
adcl
shll
pop
mov
mov
stos
pop
jle
sbb
fwait
stos
sub
push
and
das
lret
lea
out
jp
dec
jns
jns
fadds
cltd
test
pop
loope
shr
daa
gs
or
test
addr16
pshufw
cmp
inc
out
jmp
fwait
dec
insl
pop
lret
cltd
fdivrl
aas
repnz
aas
xor
jmp
xor
gs
push
into
loopne
and
std
lret
dec
dec
loope
je
xchg
inc
mov
cs
adc
adc
lahf
hlt
lods
xor
mov
xor
iret
add
scas
xchg
push
stos
shrb
add
and
push
sbb
in
inc
xchg
hlt
insl
push
sbbb
mov
lcall
ret
aaa
mov
push
cmp
aaa
ja
push
jbe
push
or
dec
ja
cmp
mov
call
sbb
xor
mov
push
js
jmp
out
int
lret
ret
jb
mov
inc
add
xchg
push
je
pop
das
xchg
enter
enter
in
lods
sub
add
call
pop
leave
mov
fdivrs
dec
sbb
pushf
mov
pop
and
xchg
imul
mov
or
and
out
dec
int3
insl
rcr
xchg
dec
sub
sub
mov
das
cli
lret
imul
adc
push
cmc
mov
rolb
enter
ljmp
sub
and
sbb
pop
lret
dec
insb
adc
mov
sub
scas
rcrl
fidivs
sahf
dec
jns
mov
push
sahf
cs
inc
jbe
lcall
jne
mov
adc
add
lret
xor
push
xlat
int3
jmp
out
xor
sti
iret
in
daa
incb
inc
push
jo
cs
mov
outsb
xchg
cmp
repz
mov
push
inc
enter
nop
bound
sub
inc
mov
enter
jmp
mov
addr16
mov
fldenv
repnz
jmp
mov
test
jbe
outsl
fistpll
jge
movsl
ljmp
pop
cltd
push
icebp
xchg
inc
mov
xor
aaa
cmpsl
inc
inc
addr16
das
pop
inc
xchg
sub
fbstp
stc
xchg
pushf
jmp
dec
jg
push
fldenv
pop
aad
cli
or
inc
mov
mov
dec
imul
loop
out
lock
dec
jb
cmp
movsl
dec
in
loopne
inc
mov
ds
push
in
xor
movb
mov
aam
sub
inc
addb
mov
jl
dec
jle
jle
cmpsb
pop
mov
sbb
dec
adc
sub
aaa
jl
stc
inc
sub
lods
mov
pop
inc
sub
jbe
inc
push
and
push
adc
jg
inc
scas
add
pop
push
ret
imul
cmp
repz
fucom
fucomi
add
sub
ret
lret
shrl
mov
fwait
cmp
sbbl
jae
ret
outsl
je
or
mov
outsl
lds
push
repnz
mov
sub
inc
mov
sbb
inc
add
sub
and
cmp
repnz
mov
or
cs
adc
add
test
pop
cltd
push
test
aas
push
mov
js
fildl
loop
mov
or
outsl
pop
xlat
cmpsl
mov
xor
cltd
and
jnp
xor
lret
inc
out
or
dec
adc
rcr
jg
cwtl
out
subl
out
jae
ljmp
rep
or
mov
ret
ds
enter
mov
stos
stos
dec
bnd
xor
outsb
mov
mov
pop
dec
jmp
add
fs
mov
mov
clc
in
fsts
push
add
ja
jmp
outsb
inc
int
xor
xchg
cmpsl
addb
adc
cmpsb
jle
jmp
and
mov
rclb
sbb
lock
fdivs
push
pop
dec
sarl
loope
movsb
dec
mov
inc
mov
loop
mov
jnp
daa
mov
fisubs
xchg
dec
inc
in
pop
dec
stos
mov
pushf
jge
pop
loopne
loop
lret
xor
enter
iret
adc
pop
stos
das
xchg
call
xor
pop
pusha
lock
loop
mov
dec
andl
in
imull
aad
mull
leave
inc
leave
cmp
pop
xchg
or
jecxz
imul
fimull
dec
xor
and
xchg
dec
fwait
pop
cmp
cmp
and
fdivrs
sti
sub
push
push
adc
out
jb
jmp
test
cmc
xor
sbb
mov
andb
adc
outsb
adc
lods
xchg
arpl
push
xchg
push
cmp
sub
cmp
adc
or
add
mov
cmc
adc
daa
xchg
dec
jmp
es
xchg
in
lcall
repz
fsubrs
add
loope
js
jecxz
push
push
lcall
cmp
loop
out
push
xorl
add
xchg
sbb
insb
mov
aaa
xor
je
sub
push
dec
scas
out
pop
hlt
fnstenv
shll
pop
jge
jp
test
inc
and
addr16
inc
pop
sub
xchg
shl
pushf
pop
loopne
repz
int
sub
pop
and
xlat
jae
in
jb
pop
insb
sarl
cmp
and
add
xor
add
dec
xchg
xor
repz
push
jmp
sarl
arpl
out
imul
rolb
pop
and
sbb
jp
das
jecxz
mov
ja
cwtl
out
mov
loope
cli
and
sub
xchg
imul
cmp
jmp
jl
or
shrb
and
jmp
jp
dec
mov
ret
out
testl
je
add
mov
lods
mov
and
imul
movsb
sbb
call
or
out
fldt
mov
push
pusha
aad
mov
pop
push
mov
push
in
sub
stc
mov
xor
xchg
pusha
push
insb
pop
lret
mov
dec
xchg
lods
sub
xchg
adc
or
inc
out
in
sarl
pop
push
push
dec
enter
mov
mov
imul
ja
jae
inc
mov
or
cmp
fists
or
mov
mov
call
adc
mov
pushf
lret
inc
mov
push
popf
push
cmpsb
lods
lret
lret
xchg
or
mov
pop
mov
out
fsubrl
outsb
push
pop
and
and
inc
fs
mov
inc
sbb
outsl
mov
out
in
nop
outsl
mov
mov
std
fcoms
cmp
xchg
ret
popf
xor
or
and
movsb
add
sbb
pop
outsl
pop
xchg
or
cltd
or
pop
pop
jae
jo
jae
pop
dec
xchg
inc
jle
data16
mov
jmp
pusha
jg,pt
loopne
outsl
imul
in
xor
push
inc
jp
leave
lock
push
loop
leave
jbe
out
ljmp
inc
or
mov
cmp
pop
and
cmpps
imul
out
sar
addr16
push
imul
push
fdivr
stc
fiaddl
daa
into
inc
sub
pop
out
jle
jmp
or
xchg
pop
lea
xchg
movsl
add
repnz
and
lods
mov
push
push
loop
fiadds
into
enter
sbb
sub
pop
das
adc
arpl
mov
jle
loop
pop
push
int3
xor
xchg
sub
ret
lods
cmpsb
mov
rclb
clc
adc
jno
cwtl
xor
mov
sub
call
aaa
xor
cmp
into
xchg
pop
repnz
push
push
insl
fisubrl
arpl
nop
pusha
into
test
sub
rcrb
lock
push
and
insl
adc
mov
addr16
stos
test
cmp
int3
push
movsb
scas
daa
out
sub
pop
loop
xor
sub
push
les
hlt
cwtl
loop
fiadds
inc
divl
outsb
push
nop
mov
stc
clc
xchg
jg
jl
inc
jecxz
int3
sub
cmp
clc
sub
out
jg
call
insl
movsb
and
dec
js
neg
pop
jp
decb
loope,pt
psubd
jmp
mov
xor
scas
or
inc
mul
inc
add
mov
mov
sub
jbe
in
cmp
mov
adc
enter
stos
das
imul
imul
int3
je
inc
cwtl
xchg
mov
add
imul
ljmp
sbb
jb
adc
inc
imul
mov
add
jg
sub
cltd
mov
outsl
mov
add
movsb
pop
loop
or
in
push
adc
stos
lock
push
push
je
aas
jae
js
pop
in
cld
sub
inc
imulb
add
bound
stos
or
pop
loope
fisubrl
pop
je
jmp
ror
int3
mov
daa
dec
and
iret
decb
in
mov
bound
cmp
push
or
icebp
add
pop
or
inc
in
lods
subl
cwtl
inc
xor
in
les
fs
loop
or
pop
rcll
xchg
jge
in
mov
out
arpl
or
mov
add
dec
lahf
test
xchg
roll
push
mov
and
jo
push
in
lods
shl
adc
mov
dec
lock
xchg
jns
fucomip
fsts
add
dec
dec
jmp
add
fucomi
xchg
bound
arpl
cmp
cmp
mov
das
sub
loope
in
jg
aas
cmpb
movsl
loopew
rolb
add
test
inc
out
dec
jo
daa
jb
loope
adc
hlt
out
inc
mov
cmp
out
mov
add
cmp
arpl
insl
cmpb
dec
xorb
push
rorb
out
inc
lcall
mov
mov
cmp
sub
fimull
xchg
sbb
push
faddl
aaa
out
pusha
out
push
sbb
sbb
lea
imul
adc
dec
adc
fistpll
stc
fists
push
repnz
cwtl
fnsave
test
mov
mov
fcmovne
faddp
push
mov
mov
add
inc
inc
inc
dec
cwtl
xor
int3
and
mov
mov
push
inc
lds
jle
int3
inc
cmc
mov
lds
dec
push
inc
adc
push
pop
xchg
dec
dec
mov
mov
and
test
inc
popf
sub
int
and
push
pop
popa
dec
fistpll
mov
addl
cmp
gs
pop
xor
dec
imul
inc
inc
and
add
es
int
fidivrs
arpl
leave
repnz
lret
fiadds
outsb
rorb
jo
test
rcll
jge
dec
or
cmp
and
xchg
or
xchg
lcall
clc
pop
xor
cmp
mov
outsl
out
pop
dec
mov
ss
jge
arpl
mov
lahf
loopne
mov
mov
and
cmp
stc
dec
das
mov
aaa
testb
xchg
dec
mov
pop
or
pop
jp
fsubp
jae
jmp
cmp
stos
adc
cld
ss
pop
push
cmovp
or
ret
aam
dec
lds
sub
xchg
jmp
cmpsb
xchg
test
movsl
pop
enter
pop
nop
sbb
es
xor
xchg
inc
cmp
xchg
inc
ret
aas
mov
sub
jp
loopne
lret
out
add
pop
out
outsl
shl
andb
int3
fs
inc
lock
xchg
mov
je
lods
ds
sub
mov
imul
iret
ret
cli
test
cmp
or
or
idiv
mov
push
testl
out
dec
adc
ficoml
cmp
push
test
xor
cli
push
stos
mov
loop
sarb
mov
lock
mov
enter
mov
jno
mov
int3
outsl
xor
mov
mov
mov
inc
fldenv
xor
out
cmpsb
addr16
dec
mov
adc
nop
dec
test
sub
sub
lcall
cs
fwait
xlat
out
jmp
icebp
sbbb
ss
jg
loopne
xor
das
or
outsb
mov
cmc
jno
jp
repz
mov
xchg
jp
sbb
sub
pop
adc
jns
das
push
jnp
or
dec
and
lcall
pop
imul
xor
stc
sbb
inc
sti
or
jns
xor
xchg
sub
mov
out
ljmp
jg
cld
sbb
andl
or
inc
push
subl
out
rcr
test
movsl
mov
sahf
xchg
jl
inc
adc
lds
sbb
loopne
popa
sbb
jl
xlat
jbe
sub
mov
cmp
pop
adc
cs
not
movsl
xchg
aas
mov
xlat
test
jo
mov
xor
outsl
pop
call
fnstcw
shll
sbbl
subb
push
xor
adc
sbb
out
loop
outsl
rolb
dec
inc
fsubrl
icebp
pop
inc
adc
mov
ljmp
jp
pop
adc
shrl
in
aaa
add
adc
pop
or
or
cmp
push
sti
xchg
rcll
xor
addr16
xchg
int
add
push
lea
shll
test
push
jno
cmpsb
fnstsw
popf
outsb
xchg
push
arpl
jmp
lcall
je
xchg
test
mov
sub
xchg
aaa
mov
lods
jae
sub
fisttpl
pop
sub
andb
out
addr16
sbb
dec
stc
cmpsb
inc
pop
clc
push
out
jae
mov
jecxz
inc
test
loop
rcrl
mov
inc
outsb
loop
cld
pop
cmpsb
movsl
stos
ret
pop
movsb
enterw
mov
lcall
outsb
cmpsb
cmpsl
jp
nop
pop
mov
cmp
or
xchg
dec
fdivrl
or
pop
dec
mov
scas
pop
and
das
mov
jecxz
movsb
loop
bound
insl
cli
hlt
cli
cmc
jle
inc
fistps
es
add
push
lahf
ja
mov
jbe
addr16
inc
cld
or
lods
and
imul
mov
jnp
push
ljmp
imul
ljmp
dec
adc
out
inc
sub
lret
sub
int3
test
push
shll
ljmp
push
cmp
insl
mov
mov
call
and
mov
je
sub
pusha
lock
push
sub
insb
insb
ret
fbld
dec
mov
fisubrs
and
je
mov
int
js
mov
jmp
je
mov
adc
shrb
dec
ljmp
cltd
inc
add
mov
jmp
in
out
popf
pop
pop
push
sub
call
stos
sbb
ljmp
dec
xchg
lea
push
sub
js
cli
je
and
out
and
ret
sub
mov
cwtl
popa
jmp
adc
dec
popf
mov
in
cmp
xor
xor
shr
push
imul
call
xchg
pop
inc
sbb
push
xor
push
and
xchg
imul
mov
inc
push
sub
adc
inc
rorl
out
jg
inc
aaa
sti
mov
iret
adc
jmp
xchg
dec
mov
repz
jecxz
mov
das
xorb
inc
loope
xchg
scas
mov
lret
push
cltd
mov
and
inc
ds
lds
inc
and
loop
pushf
gs
inc
insl
cmp
jo
outsb
sti
cmp
enter
in
into
xchg
addr16
into
subl
int
cwtl
adc
ret
mov
mov
bound
push
addr16
and
ret
lods
xchg
stos
pop
or
inc
aam
out
push
pop
sbb
bound
test
adc
insb
std
fwait
mov
shll
cmp
je
subl
push
addl
xlat
dec
add
and
out
in
and
mov
aas
cmpsb
xchg
pop
jno
jge
mov
inc
adc
inc
loope
ret
xchg
and
enter
in
xchg
fstl
ds
lcall
movsl
xor
scas
jp
sti
or
ret
insl
subl
aam
push
inc
jmp
test
das
inc
or
insb
mov
pop
arpl
or
addr16
shr
sub
inc
push
ret
aaa
and
arpl
inc
int3
or
lret
cmpsb
out
dec
rorl
hlt
movsl
add
aam
jge
xor
jg
cwtl
sub
fwait
pop
fdivl
pop
jg
mov
xchg
out
jp
mov
ljmp
fst
ds
outsl
push
subb
xor
inc
mov
jo
test
jmp
xlat
sbb
xchg
push
mov
mov
in
push
xor
cmp
adc
pop
mov
std
ret
jae
cmpsl
popf
inc
leave
int3
push
fcompl
imul
aam
call
stc
fstps
aad
mov
decb
sbb
idivb
adc
in
daa
xchg
jecxz
lods
inc
and
pop
pusha
daa
xor
xchg
mov
mov
sub
fwait
push
xchg
std
scas
insl
and
jo
dec
and
xor
jb
and
or
rol
sub
mov
call
int
push
mov
cmpsb
pop
push
add
insb
int
mov
or
cmp
out
xchg
add
sbb
push
movsl
jb
xchg
lret
pop
sbb
jmp
adcl
lcall
frstor
fsubs
call
gs
cmpsb
pop
sbb
or
insl
das
je
sub
lea
daa
mov
leave
das
xchg
stos
jle
enter
sti
or
pop
es
cmp
sbb
mov
subl
mov
pop
pcmpgtb
call
or
pop
or
nop
rorb
jl
cwtl
mov
testl
cmc
mov
jbe
and
xor
adc
push
jle
inc
inc
push
xor
outsl
xor
movsl
dec
jae
test
pop
leave
scas
or
inc
dec
je,pn
out
outsb
adc
or
mov
pop
sub
test
sahf
xor
mov
sarl
icebp
push
fistl
int3
xchg
jle
or
cmpsb
mov
jbe
lret
clc
mov
cmp
clc
inc
mov
cs
sub
cld
dec
addr16
lret
sbb
aaa
scas
imul
cmpsb
add
adc
ja
icebp
sub
mov
std
movsl
push
je
and
std
push
xor
in
aas
xlat
sbb
data16
andl
sub
jmp
dec
aad
insl
cmp
repz
sub
jns
sbb
aaa
das
xchg
or
lcall
jmp
adc
cmp
roll
fs
fucom
outsl
mov
dec
xchg
mov
out
xchg
push
jmp
dec
mov
cmp
js
xchg
xor
jge
popa
jmp
insl
ret
jae
aas
or
lds
push
jb
shl
loop
xor
adc
dec
jg
xchg
cmpsl
xchg
mov
pop
and
loop
mov
mov
imull
repz
dec
sahf
adc
inc
push
xchg
ret
out
nop
push
jmp
imul
lret
insl
dec
imul
mov
cmp
sub
mov
je
das
ret
sbb
mov
jmp
xchg
imul
imul
xchg
and
insl
das
dec
lock
push
mov
and
sub
xchg
subb
je
push
outsl
notl
lock
cmpsb
filds
je
and
mov
push
clc
cmpps
jbe
arpl
mov
js
loopne
xor
ror
mov
adc
cs
jge
sub
mov
cmc
pop
add
adc
jp
cltd
out
mov
xor
inc
sbb
cmp
jnp
shrl
xchg
push
xchg
ret
movsl
or
in
test
sbb
je
cmp
pusha
aam
cmpsl
clc
test
sbb
jp
hlt
divb
lea
hlt
fstl
fbld
nop
call
dec
sbb
mov
clc
mov
cli
or
test
fmuls
lahf
fwait
xchg
jl
cltd
into
xor
mov
dec
jg
sbb
push
pop
jg
sarb
mov
sub
mov
mov
stc
nop
pop
insb
int3
lds
pushf
sub
ds
fisubs
std
fsubp
xchg
pop
mov
adc
in
or
cmpsl
mov
enter
loop
sbb
jbe
adc
popa
jp
inc
or
je
pop
test
jbe
js
xchg
int3
loop
sbb
in
jg
movsl
jmp
leave
scas
daa
xor
push
sbb
pusha
sub
movsl
test
fwait
sbb
mov
push
das
jo
mov
pop
cwtl
mov
push
jmp
push
sti
push
pop
stos
insb
es
out
cli
test
iret
cmpsb
fwait
dec
into
sub
outsl
in
rclb
add
lods
in
out
and
out
test
in
mov
push
xchg
int3
xor
stos
sti
adc
call
cmp
push
push
xor
jae
scas
xchg
sub
hlt
dec
out
popa
pop
sahf
call
xor
fdivl
mov
sub
adc
dec
cmp
push
aad
sahf
ret
aas
lea
rcll
xchg
ficomps
outsl
rcrb
mov
xor
movsl
inc
add
cmp
pop
scas
out
jp
mov
jg
insb
or
rcll
out
sub
pop
jg
popa
cmpsb
and
je
sub
in
in
insl
movb
xchg
lock
test
mov
xchg
adc
mov
inc
add
imul
sahf
dec
dec
push
pop
fmull
in
sub
cmp
scas
je
push
pop
js
cmp
fisubl
enter
inc
shrl
xchg
ret
movsl
clts
movsl
sub
lds
into
leave
sub
or
neg
add
mov
jge
sub
adc
xor
adc
mov
mov
xchg
ja
mov
mov
out
adcb
rcll
xchg
int3
adc
test
add
loope
inc
imul
or
sbb
loop
xchg
insl
insb
mov
int3
loop
dec
sub
andb
int3
fbld
or
in
mov
dec
push
xor
jno
sbb
push
xor
mov
in
adc
sub
inc
xchg
xchg
mov
cmp
repnz
adc
mov
ss
cmpb
jp
int3
mov
mov
xor
or
stos
icebp
mov
mov
imul
mov
out
or
outsb
sbb
add
push
popf
push
jle
push
cmp
imul
out
push
sbb
mov
test
xor
push
pop
or
iret
cmp
jp
push
xchg
pop
cs
jmp
pusha
xchg
lahf
das
inc
jp
aad
dec
or
or
pop
sbb
lock
outsb
cld
cmpsl
aad
loopne
enter
inc
ds
xchg
or
in
xchg
push
call
sbb
lea
sub
and
xor
scas
sbb
mov
fucomip
leave
and
int
jp
mov
mov
aaa
xchg
daa
mov
lods
mov
je
mov
cmpsb
jge
int3
and
aad
stc
outsb
lods
insl
addr16
push
xchg
pop
arpl
out
addl
ja
ljmp
bound
test
sub
frstor
shrl
loop
sbb
push
or
lods
mov
pxor
push
outsl
adc
xchg
mov
in
ljmp
pop
cmp
push
addr16
and
stc
jmp
ds
lods
mov
push
js
adc
outsl
sbb
clc
test
add
in
pop
mov
lds
out
xchg
jp
xor
hlt
outsl
int3
or
mov
insb
mov
js
and
popl
cld
jmp
popa
mov
and
add
mov
jp
ret
jnp
cmp
push
dec
sub
dec
out
ret
movsl
or
inc
loop
add
js
cmp
xchg
push
fnstsw
adc
in
jp
imul
push
rclb
das
lahf
cmp
cs
pusha
outsl
cmpsb
mov
daa
scas
sub
xchg
repz
cmp
dec
imul
ret
xor
sahf
xchg
ds
insl
shll
test
jge
insl
cltd
jns
inc
push
arpl
jmp
jge
imul
push
dec
pshufw
lods
xchg
jecxz
dec
fsubp
mov
rolb
push
inc
lock
mov
in
mov
insb
xchg
popa
xor
adc
or
sbb
pop
loopne
push
sub
or
add
outsl
lahf
int3
pop
and
and
adc
in
inc
xchg
out
jge
sbb
out
dec
outsb
les
mulb
insl
out
loopne
cmc
sub
mov
sub
mov
mov
daa
push
push
shlb
add
test
outsl
sub
mov
sbbb
jg
push
out
sub
jge
or
sub
cltd
lcall
pop
jge
dec
mov
enter
testb
out
sahf
sbb
insb
bnd
mov
push
loopne
enter
data16
test
or
in
in
fs
fimull
lcall
push
xor
adc
cmp
loop
out
lds
jmp
rorb
scas
jecxz
mov
fisubs
xchg
loopne,pn
mov
inc
jge
sbb
jg
xchg
daa
push
add
push
jecxz
and
or
sub
movsb
jne
lock
imul
jmp
iret
lds
sub
dec
shr
fldenv
loop
push
and
sub
and
dec
jmp
add
insl
jne
das
hlt
fnstsw
int
pushf
cli
jmp
pop
mov
divl
out
jae
ljmp
sbb
mov
inc
push
pushf
jns
std
mov
cmp
inc
push
adc
test
les
inc
scas
sbb
mov
clc
repnz
push
lods
sahf
cs
mov
shll
cmp
int3
inc
mov
cli
fstl
std
out
or
push
out
fldt
rcrl
aad
dec
sahf
je
cmpsl
jge
loope
nop
xchg
push
loope
repnz
cmp
xor
jl
test
cltd
add
xor
fadd
lods
cltd
cmp
movsl
jne
mov
or
mov
and
int3
adc
out
outsl
add
pushf
repnz
mulb
fisttpll
push
push
test
push
ljmp
out
mov
and
xchg
mov
dec
jnp
inc
add
xchg
xchg
out
call
push
xor
mov
mov
or
jecxz
or
addr16
fstpl
sbb
sub
xlat
jno
mov
out
imul
loopne
outsb
push
insb
jl,pn
pushf
jne
push
loopne
shl
push
out
ljmp
icebp
push
or
icebp
inc
insl
je,pn
dec
adc
xlat
out
mov
cmc
jae
pop
xor
mov
and
xchg
cwtl
icebp
fldenv
cmpsl
xor
inc
imul
pop
mov
jl
adc
popa
pop
inc
aaa
stc
lds
pop
into
bound
aaa
xor
push
cmpsl
cltd
loope
or
mov
dec
adc
nop
nop
loop
xchg
and
imul
cli
and
push
das
shl
pop
mov
adc
inc
lea
cmp
dec
and
xchg
push
std
in
jno
out
cmp
inc
xchg
pop
or
loope
mov
dec
push
xlat
ljmp
mov
pop
insl
xchg
popf
in
dec
sbb
or
xchg
mov
sbb
inc
ljmp
in
pop
pusha
cmpsb
popf
loop
and
xchg
lods
aad
mov
mov
xchg
out
stos
fldcw
xchg
stc
xchg
test
cs
push
out
xchg
fdivrs
mov
jnp
sbb
xchg
adc
movsl
lds
xchg
fidivs
add
int
mov
and
push
add
das
dec
dec
mov
sub
lds
test
in
loop
xor
sub
stc
mov
and
inc
outsb
jno
mov
and
fmuls
addr16
xchg
fs
mov
aaa
jge
je
jbe
xchg
les
pop
imul
mov
push
in
pusha
lods
out
jo
mov
out
mov
xchg
lock
mov
addr16
out
and
fisttpl
dec
lds
dec
in
jae
out
jb
mov
jbe
rol
pop
jo
jecxz
push
sbb
icebp
insb
or
push
dec
imulb
mov
ja
dec
imul
pop
xor
push
test
call
push
enter
cmp
aaa
xor
jp
adc
jle
enter
arpl
or
sub
scas
ficoms
adcl
pop
addr16
mov
repnz
mov
gs
pushf
dec
xchg
into
xor
je
cmpsb
cmc
sahf
imul
mov
xchg
inc
aas
add
test
fnstenv
fucom
mov
mov
add
mov
iret
cld
jns
ljmp
cld
dec
lret
stos
pushf
and
xor
ja
cltd
and
or
hlt
cmp
cwtl
adc
or
cmc
out
test
inc
push
aam
cmp
xchg
out
mov
out
jmp
movsl
or
aad
jae
push
push
or
inc
sti
test
mov
je
sub
insl
loope
pop
sti
jl
rorl
dec
test
das
roll
xorb
icebp
lret
fimuls
dec
daa
adc
clc
jne
in
shrl
out
loop
and
sbb
es
fs
imul
es
xor
shrl
push
bound
loopne
scas
test
pop
jae
add
mov
aaa
sub
sub
dec
xor
lahf
dec
into
xchg
dec
xor
xchg
popf
cmp
cmp
test
scas
faddp
in
negb
pushf
scas
es
test
addr16
imul
fisubrs
enter
dec
fs
and
int3
fs
sahf
addr16
jbe
out
dec
out
outsb
ret
jmp
dec
imul
cmpb
outsl
jbe
push
cmp
popa
xor
mov
clc
daa
xchg
popa
inc
add
pop
fistpll
lods
scas
jmp
bound
int3
aad
push
mov
add
lahf
out
jl
fisttps
shrl
mov
and
test
adc
adc
filds
cltd
fbstp
cmpsl
out
mov
popf
pop
int3
xchg
into
inc
xchg
push
push
into
jbe
lods
inc
xchg
loopne
ljmp
das
push
xor
lea
pusha
lods
test
in
imul
mov
leave
jne
cmp
adc
push
cmpsb
cmp
das
xchg
mov
ret
dec
ljmp
je
vmovdqu
or
pop
rolb
xchg
inc
rorl
inc
testl
or
movb
dec
push
in
sbb
int3
pop
xchg
pop
paddsw
xchg
cltd
dec
out
sbb
jo
or
imul
cmp
notl
ror
shr
jle
dec
pusha
out
loope
leave
or
jge
out
enter
je
loop
outsb
adc
dec
out
jae
cltd
loop
hlt
push
call
or
out
ds
ss
pop
jp
pop
or
push
shll
pop
jae
in
cmpsb
mov
dec
and
out
stos
add
repnz
inc
mov
out
or
clc
cmc
mov
pop
or
jbe
xor
dec
jne
or
sbb
and
pop
jg
pop
ret
fwait
gs
je
sub
into
iret
iret
test
cmpsb
mov
xor
fiadds
adc
sbb
fisttpll
dec
iret
xchg
insl
cmpl
incl
xchg
pop
sbbl
dec
in
jg
mov
pop
xchg
cltd
ret
jp
aam
sub
insl
aas
adc
mov
into
jo
dec
inc
add
outsl
dec
cmp
mov
cld
iret
add
outsb
and
pusha
mov
xchg
push
cwtl
cli
pop
mov
out
scas
outsl
cmpsb
jo
adc
sbb
push
ja
dec
out
and
push
scas
jo
push
push
out
jle
sbb
aaa
pop
sub
jp
in
outsl
and
push
icebp
dec
aaa
xchg
inc
ja
jo
sub
fadds
adc
orb
mov
jns
jbe
cmp
mov
add
push
or
or
popa
and
mov
shll
arpl
and
add
jae
addr16
insb
push
fcoml
repnz
je
xor
jns
cmc
insl
out
ss
dec
data16
mov
and
insb
hlt
cmp
push
cmp
mov
fnstenv
pop
sub
in
xchg
pop
fwait
lods
push
push
psubq
push
fisubrs
lret
out
div
mov
hlt
imul
add
cmp
pop
insl
outsl
test
inc
jnp
movb
ljmp
and
roll
shll
dec
xor
xchg
clc
stos
push
dec
xlat
rclb
pop
jo
or
push
and
loope
in
mov
fdivs
mov
iret
pop
outsl
dec
data16
mov
shrb
sbb
jg
pop
xor
fdivp
adcl
push
jnp
std
sbb
scas
shlb
shll
lock
divl
data16
or
daa
das
pop
and
test
or
mov
dec
jo
je
nop
mov
mov
inc
dec
insb
rcll
sbb
dec
cmpsb
loopne
push
scas
pusha
push
cmc
or
xor
adc
dec
out
xor
outsl
add
out
pop
push
subl
ja
sbb
sbb
push
xchg
fadds
sub
subl
iret
loopne
cs
nop
push
sbb
or
mov
push
int3
pusha
aad
xchg
xchg
mov
cmp
int
in
mov
bound
test
pop
pop
pop
mov
dec
cld
aam
in
pop
int3
loope
ja
adc
dec
fdiv
out
iret
push
pop
je
add
adc
dec
movsl
in
sub
push
xchg
outsb
mov
xchg
xchg
mov
mov
in
inc
cld
dec
mov
hlt
scas
pop
dec
sub
cltd
add
mov
clc
insl
xor
out
push
adc
outsb
aam
push
push
mov
ret
sub
jge
leave
jnp
jo
xchg
bound
add
inc
pop
ds
in
fcompl
out
mov
adc
jbe
mov
in
jo
jae
outsb
mov
scas
out
pop
inc
ss
into
loope
or
inc
pop
jge
mov
or
addr16
inc
pop
sub
sbb
outsb
into
jo
xchg
bound
hlt
addr16
into
sarb
out
lods
sarl
or
xchg
jae
int3
fldl
je
shrb
and
pusha
inc
lock
push
fimull
adc
test
imul
out
test
mov
iret
cld
jmp
mov
aas
or
rclb
sbb
push
cwtl
test
movsl
sub
or
pop
insl
cmp
outsl
mov
add
adc
cmpsb
xchg
sub
das
xor
lahf
jge
cmc
pusha
clc
out
add
mov
mov
fcompl
ja
xchg
pop
and
imul
sub
or
and
push
test
mov
mov
sbb
mov
sbb
push
nop
jo
pushf
shrb
mov
inc
or
jge
jo
mov
add
mov
push
push
push
push
jo
sub
popa
cmc
and
lods
dec
xor
popl
cmpsl
sbb
imul
push
jo,pn
daa
scas
rclb
xchg
lods
stc
sbb
lods
scas
scas
pop
push
sbb
outsl
and
pushf
pop
xchg
pop
and
out
inc
out
dec
pop
aas
aad
add
out
cltd
lret
adc
mov
inc
repz
rorl
dec
jl
fs
cmpsb
cwtl
inc
xchg
roll
inc
clc
loope
pop
dec
mov
lcall
les
jbe
imul
filds
arpl
pop
jno
in
jmp
mov
int3
xchg
pop
mov
negl
je
ja
or
inc
ljmp
iret
loopne
sbb
inc
pushf
std
int3
call
pop
inc
test
adc
loopne
test
imul
push
aaa
sbb
stos
pop
sahf
aad
mov
sub
xchg
push
adc
das
xchg
imul
outsb
test
lret
adc
push
cmc
lcall
outsb
add
in
sub
test
ljmp
stos
iret
mov
cmp
test
popf
inc
mov
pop
jo
or
adc
shlb
xchg
or
jmp
mov
sub
out
inc
cwtl
dec
sub
and
int3
inc
mov
cmpsb
lret
outsl
outsl
xlat
sub
sub
dec
cmp
pop
mov
js
in
push
insl
test
add
inc
xrelease
lds
std
in
ja
cmp
negb
lahf
pop
jnp
addr16
push
ljmp
faddl
dec
popa
test
cmp
push
dec
jg
out
jmp
xchg
out
cmpl
pop
int
pusha
sub
cmpl
mov
or
push
sbb
sahf
gs
pop
sub
push
fs
fdivrs
sti
fstp
out
rclb
lret
lcall
jo
daa
popf
push
sub
jg
jo
fiadds
popf
repz
outsl
out
jmp
jecxz
clc
push
fistpl
sbb
imul
cmp
dec
scas
dec
mov
add
and
loope
or
lret
adc
adc
or
sar
mov
xor
sti
cmp
ja
aaa
movsl
jmp
mov
adc
jg
fldt
or
sub
mov
mov
adc
jg
pusha
jle
es
xor
dec
aas
jge
jmp
sar
dec
test
or
dec
call
sti
das
xor
outsb
cli
ljmp
jp
jb
test
mov
outsl
push
hlt
pop
outsb
popf
inc
jg
orl
inc
lds
loope
sub
roll
mov
pop
shlb
out
mov
je
jo
pop
mov
stos
mov
add
or
mov
add
lret
and
add
jb
js
and
fnsave
test
sub
call
jge
push
xchg
test
mov
cs
xchg
daa
enter
jl
cmpsl
mov
mov
sbb
rcl
adc
xlat
pop
lcall
adc
sub
dec
add
lret
das
push
inc
pushf
mov
fidivrl
jle
push
das
inc
xor
cld
or
scas
nop
mov
fcomip
dec
cli
call
adc
cmpsb
movsb
xor
ja
lret
rcll
mov
cmc
call
insb
addr16
dec
sbb
mov
lds
rcll
out
out
adc
rclb
or
mov
fcoms
push
pusha
ljmp
aas
pop
xchg
mov
and
arpl
adc
das
test
outsl
insb
fildll
push
mov
xchg
in
rorb
and
test
fldl
sub
out
lahf
dec
and
mov
and
jns
cltd
adc
jle
stos
shlb
sar
mov
cmp
xchg
mov
pusha
lret
insb
mov
adc
shlb
push
and
in
enter
pop
mov
fnstcw
jb
xchg
and
inc
sar
imul
lock
shl
mov
xchg
loopne
inc
xlat
inc
test
xchg
add
lods
fs
jmp
cld
jo
in
fs
outsl
or
call
imul
dec
insb
lock
cltd
mov
ja
dec
shlb
insl
fs
cld
xchg
xor
je
xlat
jl
fs
fwait
addr16
mov
in
aaa
cltd
mov
fistpll
cmp
sub
insb
sbb
xor
and
add
cltd
pop
add
repnz
shrl
bound
sub
insl
enter
out
popf
loop
inc
xchg
repz
mov
enter
mov
js
dec
dec
fs
lcall
dec
xchg
imull
mov
mov
fsts
shll
test
pop
cs
fadds
mov
daa
je
and
out
sti
jno
test
cltd
jo
xor
or
adc
xchg
cmpsb
fcmovnb
in
jmp
xchg
shl
cmpsb
aas
int
rcll
inc
cmc
shl
cwtl
inc
repnz
adc
stos
sub
xor
das
test
adc
clc
call
stc
jo
xor
jbe
cwtl
sbb
adc
addr16
les
cmp
pop
sub
je
clc
mov
cmp
sub
mov
sub
ret
push
mov
andl
in
dec
inc
xchg
es
sub
jb
add
lock
pusha
call
push
aaa
insb
cs
repnz
or
adc
dec
xchg
push
mov
out
add
sarb
das
loop
jle
je
sbb
pop
jae
hlt
cmp
xchg
add
mov
insl
pop
push
jmp
cmp
test
addr16
jecxz
adc
lods
mov
adc
cmpsl
rorl
test
pop
aad
jno
cli
pop
rol
dec
add
fwait
cmp
dec
cmp
rcll
out
shll
pop
xchg
dec
insl
aam
dec
xchg
mov
pop
mov
xor
sub
pop
mov
cltd
xchg
and
adc
cmpsb
jae
dec
cld
push
mov
ja
call
pushf
in
iret
in
xchg
nop
adcl
leave
pop
add
add
insb
fwait
push
je
or
adc
into
dec
dec
test
outsb
jo
cmp
loop
cs
add
popa
repz
cs
in
movsb
push
sahf
orb
cmp
push
pop
mov
arpl
test
dec
repz
mov
mov
or
shlb
pop
shrl
lea
add
and
lds
call
pop
sub
mov
pop
and
cli
mov
sub
jnp
data16
fucomip
sub
jo
xchg
mov
mov
jl
mov
out
mov
push
fsts
movsl
das
jecxz
in
jle
ror
lcall
cmp
repz
jge
dec
insb
mov
cmp
push
push
sub
addr16
push
pop
or
js
xchg
jno
sbb
fisttps
or
mov
dec
jne
das
add
into
dec
sub
push
mov
sahf
dec
xchg
mov
lea
rorb
dec
dec
test
leave
mov
icebp
fdivrp
sbb
mov
pop
xchg
filds
mov
loop
cmc
adc
icebp
add
cwtl
sub
fildll
push
pop
aad
push
fs
jae
mov
xor
outsl
daa
jnp
mov
xor
addr16
xchg
shll
add
call
or
pop
stc
mov
mov
test
push
lcall
ja
pop
mov
sub
stc
test
xor
jnp
jmp
mov
aam
cmpl
fwait
out
sub
xchg
push
adc
or
adc
sbb
insb
rclb
stos
adc
aaa
cli
cltd
push
shrb
movsl
pop
cmp
mov
adc
cwtl
or
repz
popa
call
xchg
lret
repnz
loop
xchg
mov
cltd
negb
jne
push
xchg
cmpsb
movsb
imul
add
std
aaa
iret
cmp
cmpsl
stos
call
inc
decb
popa
fwait
mov
sub
lods
mov
xor
xchg
addr16
jmp
mov
pop
lret
pop
incl
push
sub
pusha
int3
pop
cmp
outsb
movsb
rcll
fwait
mov
xchg
pop
or
scas
pop
inc
xchg
dec
in
sbb
imul
sub
mov
xchg
sub
or
cwtl
pop
dec
xor
lret
mov
out
push
sub
and
movsb
clts
in
mov
cmpsl
iret
popf
dec
lods
or
adc
add
shrb
lods
repnz
push
add
jmp
stos
aaa
iret
xchg
cmp
mov
jle
sahf
dec
sarl
mov
mov
fnsave
test
xor
push
mov
stos
cmp
and
jmp
dec
mov
out
imul
mov
push
xlat
ret
rorb
jp
cmp
fisttps
fisubs
or
in
inc
mov
xchg
sub
cmpsl
enter
out
cmp
mov
pop
xchg
jmp
outsl
fstpl
imul
sbb
push
jnp
shlb
popf
fsubrl
scas
and
jg
imul
sub
in
push
xlat
cmp
dec
xchg
mov
push
xor
pop
xor
sub
mov
and
popa
insl
ljmp
dec
xchg
add
outsb
imul
jl
daa
movsl
inc
stc
icebp
decb
adc
sarb
inc
xchg
adc
or
push
subb
in
imul
sahf
sbb
dec
cmp
dec
sbb
or
jg,pn
scas
push
ret
xor
in
loope
out
sbb
dec
outsl
mov
ss
aaa
sub
inc
adc
or
daa
xchg
jo
ret
pop
insb
test
mov
clc
pop
pop
mov
mov
and
jb
addb
sub
mov
cmp
in
push
outsl
add
fucom
push
pop
incl
mov
xchg
xchg
test
jmp
ja
dec
mov
xor
out
int3
fldz
aas
dec
mov
xchg
inc
arpl
pop
inc
adc
or
outsb
cmp
mov
sub
add
pop
stc
ret
or
jmp
data16
outsl
xchg
in
jmp
pusha
xor
pop
stc
insl
add
inc
daa
xchg
push
je
movsl
mov
sub
into
pop
xchg
cli
out
and
push
in
ret
add
divb
loope
out
scas
mov
ror
fs
mov
mov
sub
adc
sbbb
and
pusha
jnp
call
and
leave
std
inc
adcb
in
loop
jle
mov
cltd
idivb
movsb
push
mov
mov
xor
ljmp
xlat
sahf
out
andl
cmp
imul
or
mov
lahf
and
cltd
sbb
leave
sub
pop
sbb
cmpsl
push
xchg
loop
loop
das
ja
mov
into
pop
or
cmp
inc
lret
push
mov
sbb
cmp
xchg
and
movsl
lahf
les
addr16
out
aad
mov
std
fisubrs
fucomip
push
or
popa
andps
lret
imul
je
rorb
lods
mov
or
testl
push
and
xchg
sarl
cltd
clc
ljmp
mov
jns
lahf
mov
aas
jmp
mov
rclb
int3
jecxz
dec
out
popa
mov
arpl
push
into
popf
push
jmp
mov
adc
mov
imul
mov
dec
daa
inc
cmp
repnz
out
icebp
jns
outsb
sahf
dec
jno
inc
push
insb
in
mov
mov
call
sub
ror
inc
loop
sbb
sbb
repz
loop
mov
or
lea
pop
in
sbb
push
push
test
inc
add
addb
or
test
sub
loope
clc
loopne
or
jb
and
cmp
sti
inc
mov
addr16
or
adc
ds
incb
mov
inc
gs
or
loop
cmp
repz
cli
cmp
inc
sub
xor
xchg
jl
loop
sbb
stos
xlat
push
mov
sbb
xorb
andb
push
sbb
mov
repz
cmp
sub
mov
popw
divl
pop
or
xchg
in
rorl
cld
xor
push
sub
insb
mov
test
je
daa
cltd
inc
int
decb
push
push
cmp
adc
out
push
and
adc
jp
inc
rorl
dec
sub
adc
push
shlb
jp
cmp
and
fwait
loop
pop
xchg
mov
mov
out
das
std
imul
xor
xor
pop
loop
into
mov
enter
and
outsl
je
pop
pop
arpl
xchg
push
dec
push
pop
mov
mov
stc
imul
pop
mov
popa
pop
cmp
push
addl
jle
je
push
hlt
ja
rorb
adc
cmp
sub
dec
testl
fcomps
sbb
jle
pop
or
push
or
je
cmpsl
lds
outsl
ficoms
shrb
mov
mov
jmp
or
jmp
and
lea
jmp
out
push
add
push
push
or
xor
repnz
dec
adc
jp
enter
pop
xor
mov
jnp
mov
dec
sbb
aaa
jae
sbb
jnp
adc
sub
push
daa
push
sub
lds
clc
add
cwtl
pop
pop
jmp
test
sub
fldl
xchg
xchg
push
dec
mov
xor
xchg
pop
out
jb
mov
mov
movb
mov
jg
mov
or
sarl
inc
cld
xchg
hlt
leave
es
cmp
sub
leave
jge
call
cwtl
jmp
and
insb
mov
pop
dec
sub
fsub
mov
loopnew
fwait
out
jmp
call
jns
out
pop
sahf
and
test
rcrl
jnp
sbb
lock
mov
in
int3
rep
int3
das
stos
jne
call
jno
or
ljmp
imul
cwtl
dec
xchg
pop
and
push
sub
dec
or
jecxz
je
scas
mov
sbb
andl
std
bound
adc
xor
insl
orb
sub
jp
mov
lcall
mov
out
sbb
out
xor
outsl
sub
es
add
in
loop
mov
bound
mov
loopne
fadds
hlt
negl
adc
icebp
jp
fisttpl
arpl
dec
pop
mov
jmp
out
and
cmp
dec
mov
mov
hlt
ret
mov
push
loopne
xor
mov
sbb
stos
lcall
jmp
cli
dec
outsw
fcompl
xor
scas
dec
mov
pop
pop
cmp
or
jge
in
mov
dec
dec
pusha
out
int
data16
mov
mov
cmp
mov
dec
cmc
out
inc
hlt
and
push
cmp
je
cmpl
xor
lock
pop
out
in
push
fldcw
xchg
cmp
adc
dec
sbbb
fisttps
cmp
push
cmpsl
sbb
test
mov
incb
les
mov
shrb
loop
std
mov
cmp
push
pop
cmp
nop
cmc
or
arpl
stos
movzbl
jno
sub
sub
mov
mov
jp
pop
and
out
inc
or
subl
fisubs
dec
icebp
dec
mov
jecxz
in
xchg
cmp
imul
and
fiaddl
xor
and
and
dec
xor
pop
sbb
ljmp
pusha
in
fisubl
popf
in
jmp
jge
imul
cmp
outsl
xor
mov
mov
mov
cli
sub
jg
aaa
int3
jl
mov
lods
add
in
and
dec
pop
push
jmp
in
push
dec
jne
out
loop
xor
mov
lret
sbb
std
fisubrl
aaa
dec
imul
dec
push
push
pop
or
leave
outsl
pusha
jl
data16
adc
cld
loopne
sub
jl
nop
sti
cli
outsl
pop
xchg
pusha
in
mov
imul
daa
adc
lret
pop
gs
mov
clc
stc
lahf
or
xchg
or
idivl
lcall
daa
fmulp
mov
or
fcomi
jo
sub
jnp
cli
mov
fs
mov
and
fnsave
pop
jmp
mov
pop
inc
cmpsl
stos
repz
sahf
inc
and
adc
xchg
pop
or
outsb
loopne
cmp
inc
stos
loope
add
cmpsb
mov
daa
scas
dec
push
mov
rcll
pushf
dec
popf
cmp
push
fs
mov
pushf
faddl
push
in
in
cmp
add
mov
popa
rorb
ds
insb
add
inc
pop
inc
lret
push
imul
jmp
mov
jbe
xor
pop
pushf
lret
xchg
sbb
sbb
xchg
out
clc
xorl
pop
jg
mov
js
je
mov
rcrl
rcrb
push
fisttpl
fildl
mov
or
rorl
jecxz
test
mov
daa
fs
mov
mov
dec
dec
cs
in
sbb
dec
fs
adc
jg
inc
out
je
stc
mov
loope
out
inc
shlb
in
dec
inc
mov
outsl
into
mov
cmp
mov
shlb
push
push
jg
cmpsl
rcr
mov
cmpsl
ja
lahf
mov
pop
pop
outsl
sahf
ljmp
or
in
adc
int
scas
clc
xor
pop
sbb
lods
adc
icebp
or
iret
mov
daa
push
mov
xchg
sub
jne
in
sub
mov
add
filds
movsl
and
scas
loope
es
mov
mov
rcrl
insb
adc
aad
mov
inc
popf
jle
push
mov
out
pop
cld
clc
inc
outsl
fst
inc
dec
cwtl
push
xorl
loopne
inc
dec
rclb
mov
xor
sub
add
outsl
out
mov
pop
ret
imul
push
jmp
fwait
cwtl
std
fdivr
mov
jmp
cmc
dec
bound
inc
in
das
fwait
push
pop
mov
into
mov
dec
shrl
aaa
sbb
gs
ret
add
or
pusha
iret
clc
jp
pop
or
clc
cltd
sub
sub
test
mov
out
inc
add
cmc
scas
pop
pop
xchg
fdivrl
mov
xor
and
sbb
out
arpl
mov
and
fadds
fistl
lea
decb
inc
sub
gs
fldt
addr16
outsb
outsl
jle
hlt
cmp
sbb
sub
cmp
aas
dec
aad
rcrl
cmp
jo
test
mov
push
mov
hlt
aaa
imul
cld
outsl
lods
je
adc
sbb
repz
bound
cmpsl
insl
gs
jbe
into
inc
ror
add
push
and
int3
mov
or
pusha
jo
and
inc
xchg
push
lods
in
rcll
arpl
push
pop
out
sbb
shrl
pop
stos
clc
jcxz
or
int
in
lods
outsl
in
pusha
sub
sub
sub
cmp
addr16
sub
and
xlat
push
add
ljmp
push
mov
pop
call
mov
and
sub
fstl
scas
dec
dec
les
xlat
cld
pop
movsl
pusha
mov
mov
scas
pop
xor
mov
enter
and
cmp
test
cltd
popa
out
cwtl
mov
cld
pusha
jns
push
inc
lock
cs
jge
or
jns
cmp
and
scas
and
dec
out
push
push
adc
leave
out
mov
sbb
xor
dec
xchg
sbb
incl
xchg
out
in
xor
dec
cld
jns
fnsave
cmpsb
inc
cmp
mov
sbb
std
mov
sbb
cwtl
idivb
sub
fnstenv
outsb
andb
loop
call
fs
or
stc
loopne
outsb
adc
ljmp
dec
js
jns
je
xchg
sub
lock
call
and
je
push
shlb
je
and
fiaddl
mov
adc
add
mov
jnp
je
or
jmp
push
addr16
or
and
pop
inc
fwait
jge
sub
les
repnz
sub
sub
pop
clc
shl
repz
gs
out
jecxz
mov
sub
jo
mov
lret
xrelease
ljmp
mov
mov
cmpsb
in
aad
mov
mov
cmc
mov
push
pushf
adc
xchg
fwait
mov
rcr
and
and
fwait
daa
enter
lock
ja
dec
adc
cmpsb
je
es
xor
imul
pop
jl
pop
hlt
mov
cmp
jmp
push
test
cmp
mov
ss
jecxz
jne
ret
add
xchg
stc
inc
xchg
xchg
jo
xchg
je
je
insb
bound
repnz
fsubrl
ret
mov
mov
jp
sub
test
fisttps
mov
inc
jns
cltd
cmp
pop
into
shrb
int3
push
out
mov
add
mov
jg
xor
push
daa
inc
dec
ret
test
adc
lods
or
mov
imul
inc
push
cli
mov
push
dec
pop
jne
xlat
push
inc
jb
and
frndint
leave
loope
inc
pop
sub
xchg
in
dec
mov
push
cmp
stos
shrl
test
pop
sarl
out
add
mov
daa
xchg
popf
inc
out
or
rolb
loop
mov
sbb
idiv
clc
jl
movsl
aaa
push
jle
or
mov
cmp
cltd
push
repz
outsl
out
ljmp
enter
dec
fstpl
xlat
stc
ds
insl
pop
cmp
xor
xor
mov
mov
sub
repnz
mov
and
addr16
iret
insl
fisttps
shl
and
arpl
ficoms
popa
or
sub
das
ljmp
mov
mov
jl
rclb
jg
clc
loopne
adc
pusha
or
loopne
aaa
dec
jne
dec
pusha
xor
jo
push
and
jo
ds
jnp
push
aaa
fucom
adc
das
push
mov
add
arpl
inc
xor
je
movl
dec
mul
cmp
ret
rclb
inc
inc
push
rep
or
sbb
repnz
jae
dec
cmpsb
push
mov
add
arpl
enter
loop
aad
das
add
sub
shlb
jecxz
xor
pop
aad
sahf
xchg
mov
pop
push
push
imul
shr
push
fwait
roll
fwait
and
push
int3
in
cmp
negb
aas
mov
xor
ja
into
repz
pusha
cmp
add
jmp
cmpsb
push
rorb
mov
lock
adcl
arpl
je
xchg
mov
test
jl
arpl
pop
repnz
movsl
jo
pop
ss
mov
int3
dec
mov
gs
mov
mov
shrl
push
pop
sahf
pop
sbb
jo
test
jb
movsl
mov
ret
jne
xchg
hlt
hlt
adc
xchg
adc
mov
inc
sbb
push
popa
or
fisttpll
ret
jb
pop
ljmp
daa
add
or
mov
fs
sahf
test
cltd
add
xor
mov
dec
jae
enter
mulb
jb
sahf
subl
xchg
sbb
inc
clc
jge
xlat
shll
sahf
mov
mov
std
clc
jge
cld
in
sub
mov
enter
and
inc
lods
push
adc
loope
sbb
push
insl
mov
aaa
aas
sub
into
pop
add
mov
mov
cmc
push
xor
icebp
push
xchg
nop
pop
jl
jl
mov
lcall
stc
jo
pop
adc
cmc
daa
les
xor
clc
xchg
fcoms
fs
je
aad
or
call
xchg
popf
xor
loop
das
das
imul
in
daa
xor
int3
jo
ds
lds
pop
fcmovnb
shlb
cmp
dec
in
push
jecxz
mov
inc
inc
aam
cmp
out
test
cmpsl
xchg
lret
psrlq
jl
sbb
push
repz
out
arpl
mov
mov
push
ds
negb
pop
addr16
stos
imul
ret
test
or
xor
add
sahf
jne
lcall
das
int3
xlat
push
in
sub
mov
scas
into
divb
add
push
in
dec
in
add
out
and
cmp
push
mov
in
scas
adc
add
aam
sahf
mov
testl
jecxz
aas
or
push
fnsave
cli
clc
ret
incb
adc
cmpsl
imull
imul
push
push
enter
addr16
pop
xorb
mov
arpl
sahf
in
xchg
daa
adc
jge
pushf
push
out
les
es
lods
sti
mov
fbld
sub
pop
stc
test
adc
sbb
subl
mov
pop
jg
sbb
pushf
jle
push
lcall
mov
int
ljmp
fs
je
inc
sbb
jo
fistpll
push
adc
out
out
andb
in
sub
orb
aas
cmc
call
jle
mov
aaa
xor
insl
movsl
mov
xchg
je
adc
test
rclb
jo
mov
iret
out
mov
test
lret
dec
adc
out
jae
testb
cli
pop
jo
pushf
hlt
out
sub
fildll
je
sub
add
jo
out
push
xchg
das
adc
fsubs
int3
sub
test
ret
movsb
cmc
sub
jl
jge
push
mov
les
push
jle
notl
or
lret
add
cmp
sub
in
out
cmp
mov
int3
loop
or
push
das
je
jle
mov
jmp
cmc
push
dec
ljmp
jg
int3
mov
incb
and
sysexit
pop
cmp
negl
les
lock
mov
insb
mov
xchg
sub
in
cmp
xchg
ljmp
xor
sahf
xor
enter
lahf
jo
xchg
adc
cmpsl
outsl
fidivs
or
int3
cld
js
clc
or
sbb
fcoms
sub
jmp
pop
int3
outsb
into
mov
jns
jnp
xor
aas
jecxz
test
dec
mov
outsl
sub
pop
mov
push
push
push
jo
sub
jl
cmc
dec
cld
cmp
jg
mov
xchg
lock
mov
lea
insb
ja
mov
loop
jmp
cmpsb
mov
stos
popf
inc
in
lods
cmpsb
out
ret
iret
out
pop
pop
xor
stos
cld
scas
fdivp
clc
push
jmp
jo
push
movsb
pop
xchg
jmp
enter
roll
cld
jg
es
adc
sarl
lcall
cmp
push
mov
std
dec
or
jg
pusha
push
inc
inc
out
das
int3
mov
pusha
int
push
mov
js
mov
insb
movsb
push
inc
mov
les
out
inc
xor
cli
fildl
aas
xchg
mulb
pop
cltd
dec
push
push
and
xchg
xchg
dec
cmpsb
insb
mov
mov
pop
mov
jnp
and
sti
jge
ret
loope
fisttpll
decb
jo
fadds
xorb
insl
inc
into
loop
outsl
jle
iret
fildll
push
jg
out
sarb
fcoml
xor
sub
cmp
mov
dec
out
inc
loopne
sbb
int3
lock
push
in
push
push
in
xchg
das
hlt
rcll
clc
loopne
lahf
mov
or
arpl
sahf
cwtl
adc
jp
mov
out
lods
sarl
and
mov
cmp
xor
mov
cs
sbb
pop
cli
xor
jnp
fisubrl
push
leave
inc
dec
je
or
test
add
cmp
mov
rcrl
jb
outsl
sarb
jo
lock
mov
pop
dec
mov
mov
pushf
enter
fwait
lcall
adc
stc
inc
outsl
popa
loope
adc
push
scas
push
pop
mov
push
adc
fsub
into
mov
mov
fcomi
jp
je
loopne
popa
fcompl
movsl
xchg
sbb
shll
push
xchg
mov
mov
push
xchg
lcall
jae
insl
inc
add
push
xchg
pop
dec
loopne
push
leave
sbb
mov
insl
mov
dec
addr16
jb
in
cbtw
mov
enter
mov
lret
icebp
add
jg
ret
cmpsl
out
xchg
mov
cwtl
push
lods
jae
mov
loop
mov
push
or
scas
outsl
insb
sub
fcoms
push
int3
rclb
arpl
push
jns
or
push
aaa
pusha
mov
outsl
or
mov
mov
je
pop
push
fcoms
mov
mov
dec
push
push
xchg
dec
dec
fsubrs
fs
lcall
clc
add
push
je
pop
in
popa
or
dec
iret
mov
sub
std
lock
cmpsl
loopne
iret
imul
enter
mov
scas
fwait
sub
cmp
ret
jb
inc
adc
add
add
daa
out
jb
mov
and
cmp
ret
push
test
cmp
xor
push
or
xchg
xor
inc
sub
fucom
je
outsl
dec
loop
data16
insl
loopne
ret
jnp
jl
popa
inc
in
inc
ljmp
xor
xchg
scas
std
xchg
dec
aam
loopne
ret
scas
pop
inc
push
inc
enter
fadd
nop
les
push
je
fsubs
scas
dec
xlat
addb
xchg
mov
rclb
mov
cmpsb
sub
xchg
dec
mov
push
and
cmpsb
and
dec
ret
mov
adc
jmp
sbb
ret
push
pop
jmp
adc
mov
dec
shrl
fcomip
and
sbb
sbb
push
sahf
mov
push
imul
xchg
jns
sub
push
mov
push
ret
int3
out
stos
jae
cmp
leave
xchg
adc
push
mov
lcall
std
inc
rcll
sub
pop
inc
push
xor
lret
inc
jae
outsb
inc
aam
outsl
enter
repz
jle
pop
mov
adcl
sub
icebp
cmp
add
imul
movsl
scas
sbb
sbb
xchg
jns
and
sub
aam
sbb
cmc
clc
int
rcl
and
out
pop
clc
ret
jecxz
pop
pop
add
icebp
fbstp
js
mov
pop
je
lcall
pusha
fnstcw
adcl
sbb
pop
push
out
in
stos
cmp
and
pop
push
and
pop
mov
sub
inc
inc
push
sbbl
pop
or
push
xlat
btl
pop
dec
push
adc
or
lods
into
cmp
inc
ret
adc
cltd
jecxz
xor
or
ds
jecxz
pushf
adc
sub
pusha
outsb
or
test
cmc
sub
scas
mov
dec
data16
je
sub
pop
jmp
enter
imul
adc
testb
dec
sub
call
xor
je
arpl
inc
outsb
inc
cmp
adc
loope
push
sahf
push
les
insl
addr16
out
and
mov
pop
adc
imul
insl
loopne
ret
outsb
lret
push
push
sub
stos
popa
jnp
outsl
and
loopne
push
and
cmp
cwtl
je
int
in
lcall
lret
loop
in
repnz
jg
mov
mov
mov
sahf
mov
mov
mov
les
push
jmp
ret
mov
add
dec
andps
cmpsb
call
inc
fldenv
and
shl
gs
or
rorb
jmp
xchg
rcl
fldenv
mov
and
das
aad
test
jo
sub
mov
fwait
and
cmpsb
scas
adc
pop
sub
stos
insl
arpl
mov
aaa
jo
push
scas
add
cmp
test
fisubs
fprem1
ljmp
push
sbb
mov
add
pop
and
filds
cmpsb
cs
popa
imul
xchg
roll
fisubs
outsb
popl
sahf
jp
rol
inc
mov
lret
cld
or
ljmp
inc
test
js
jl
movsl
daa
push
cmp
imul
dec
test
scas
and
adc
pop
enter
addr16
dec
xor
mov
test
das
imul
inc
push
xchg
or
add
dec
ljmp
out
jle
cld
xchg
push
pop
mov
in
call
sbb
stos
repnz
sub
outsl
jecxz
fwait
loop
or
or
fldcw
insl
roll
in
pop
mov
mov
cmp
out
or
sbb
or
data16
inc
aaa
stos
mov
lcall
rcr
sub
cli
fnsave
adcl
daa
enter
cmp
cmpb
inc
sub
and
fimull
push
call
add
sti
loopne
jmp
or
fldcw
shr
mov
fldenv
mov
mov
adc
loop
les
divps
arpl
test
sub
cli
or
lcall
cld
sahf
add
sub
add
in
loop
jge
stc
mov
cmpsb
and
shrb
ficoml
fadds
jecxz
inc
je
dec
mov
pop
popa
popf
out
outsl
xchg
sbb
out
clc
cmpsl
stc
cmpl
dec
jne
mov
lods
inc
sahf
push
icebp
inc
jne
mov
sbb
pusha
inc
pusha
out
xor
xor
and
lahf
fcompl
dec
es
sub
imul
inc
adc
rcl
xchg
sub
adc
or
into
ljmp
aam
outsl
dec
push
ja
lss
push
int3
mov
icebp
icebp
push
ljmp
shlb
sbb
in
enter
xor
movsb
cwtl
adc
lea
hlt
addr16
pop
and
subb
inc
ljmp
cmp
mov
add
inc
dec
imulb
mov
sub
mov
scas
fdivr
enter
js
enter
ss
push
fwait
icebp
lea
sbb
stos
xchg
dec
leave
mov
xor
adc
out
fcompl
push
and
sbb
sub
sbb
push
aad
pop
add
dec
lret
jg
ljmp
inc
pop
stc
pop
lock
push
jo
addr16
movsl
and
imul
enter
sub
pop
adc
pushw
les
stc
pop
cli
js
je
mov
and
push
loope
pop
sti
pop
les
adc
xchg
and
mov
mov
mov
inc
imul
or
adc
jns
je
test
int3
jb
loop
xor
jg
stc
mov
dec
stc
fisubl
aas
sqrtps
int3
daa
inc
rorb
pop
ljmp
arpl
cli
xchg
push
jg
inc
mov
sub
fwait
js
mov
push
xchg
insb
add
fistl
mov
je
icebp
sbb
mov
lret
sahf
add
push
pmaxub
jo
aad
ds
data16
inc
int3
repnz
fwait
lcall
fsubl
jns
inc
fistpll
sub
mov
pop
pop
popa
into
lods
cmp
xchg
and
mov
fsub
lret
pop
sbb
add
jmp
cmp
push
nop
insl
cmp
push
nop
or
xor
adc
xchg
in
cld
std
bound
jnp
push
push
call
je
lahf
imul
or
loop
aad
pop
lcall
jp
sbb
xor
fs
ret
pop
outsl
sub
push
pushf
loopne
mov
sbb
ret
inc
cwtl
and
fdiv
ljmp
mov
mov
xchg
cmp
imul
pusha
arpl
adc
adc
ret
adc
ljmp
jo
cmp
shrl
pop
jmp
jl
iret
xor
mov
or
stos
sahf
sub
outsb
sahf
imul
push
out
lods
xchg
fcoms
inc
or
dec
frstor
sbbb
push
pop
repnz
pop
loop
jae
data16
cmpsl
shrb
sub
mov
push
sbb
xor
dec
jle
and
ret
inc
sub
lock
jle
push
or
push
cmc
sti
pop
jp
dec
xchg
mov
je
adc
das
xor
dec
mov
dec
insb
mov
xchg
sub
and
sub
push
mov
cltd
or
sub
in
jmp
or
cmp
lods
je
or
les
jl
ja
inc
mov
sbb
inc
scas
jmp
adc
push
hlt
jle
addr16
out
or
sbb
push
outsb
fsubrs
sbb
arpl
push
movsl
cli
xchg
cmp
cmp
sti
inc
nop
je
cli
das
rcll
cltd
jbe
clc
movsl
or
xchg
aaa
cmp
xchg
pop
add
repnz
add
and
adc
inc
imul
out
push
into
pop
fistpll
add
imul
inc
cmpsb
fiadds
outsb
pushf
cmp
scas
mov
xlat
jb
js
mov
mov
fstpt
mov
jl
xchg
sarb
adc
bnd
add
xor
adc
xchg
xchg
in
cmp
dec
addr16
add
inc
jae
cli
cmp
lret
jnp
push
cmp
inc
stos
jmp
sub
jae
int3
enter
pop
push
adcl
imul
push
mov
call
add
daa
cmpsb
sbb
adcb
mov
shll
mov
xchg
fidivs
ret
aam
pop
mov
xchg
or
xor
loopne
inc
xchg
repnz
outsl
fsubrs
xor
insl
ds
jg
sub
scas
mov
scas
sbbl
xchg
cmpsb
sub
mov
and
shl
daa
je
mov
inc
lods
xor
loopne
andl
mov
movb
fwait
cmpl
shll
inc
cmpsb
fmull
push
loopne
fsub
xchg
lcall
add
xchg
push
shrl
scas
rcll
clc
push
and
in
xchg
pop
stc
bound
jecxz
sub
mov
mov
inc
fcoms
out
jae
loopne
loope
pusha
dec
and
pop
das
out
adc
ret
inc
xchg
aam
jbe
jo
addr16
loopne
inc
daa
pop
sahf
insb
int
or
cmpb
inc
in
push
adc
fwait
push
mov
call
dec
dec
out
xor
out
mov
unpcklps
imul
into
in
mov
xor
leave
aam
mov
cwtl
mov
movsl
dec
out
and
iret
pop
enter
sub
mov
out
push
jno
fadds
das
arpl
aam
insb
sub
jl
pop
push
sub
mov
mov
mov
xchg
pushl
sbb
mov
andl
clc
adc
loop
mov
add
sub
stos
icebp
testb
sub
jns
popl
in
fucom
pop
sahf
sarb
loop
sahf
clc
sbb
xlat
xor
dec
sbb
mov
popf
dec
sub
and
mov
adcl
sub
insb
popf
icebp
sarb
xchg
mov
push
aam
loopne
imul
shll
jg
insb
add
fiadds
test
cld
adc
fcoml
mov
loopne
mov
dec
xor
mulb
repnz
cmp
cli
lret
inc
aam
repnz
sub
mov
sub
dec
lcall
outsl
sub
je
loopne
mov
and
out
fsubs
xor
incb
cltd
push
adc
fisubl
gs
jns
sarb
pop
jne
in
push
int3
iret
xor
and
jo
or
push
pusha
jmp
outsl
ja
clc
push
bound
enter
lods
cmp
xor
add
daa
mov
insb
sub
xchg
les
inc
sbb
sub
das
inc
lods
mov
popa
jo
sub
loop
setns
fadd
jne
test
dec
jecxz
imul
fnstsw
es
xchg
xchg
or
cld
xchg
inc
inc
mov
mov
enter
and
xor
or
loop
mov
shr
jo
jmp
mov
cltd
push
movsl
repnz
sbb
mov
enter
std
cmpsb
add
icebp
jno
sbb
xchg
aad
stos
sbb
inc
sub
or
lock
ror
sbb
mov
call
jnp
outsl
xchg
adc
push
mov
sub
ret
pusha
xchg
cmp
sahf
sahf
addr16
dec
push
mov
jle
fisttpll
ds
cld
nop
jp
cmp
imul
negb
jg
clc
inc
mov
sahf
push
or
jbe
pop
lock
adc
jmp
inc
cmc
hlt
jae
loope
inc
mov
dec
movsl
mov
outsb
lahf
jo
stos
out
add
xchg
adc
es
mulb
cmpsl
sbb
loopne
mov
pusha
dec
sbb
cmc
or
loopne
and
in
js
xor
or
insl
xor
pop
std
sub
sub
out
adc
lret
pop
je
jl
mov
loop
adc
sbb
out
clc
xchg
repz
mov
std
mov
dec
movb
lahf
fnop
push
aaa
inc
xor
mov
mov
rcrb
bound
mov
outsl
ljmp
cltd
inc
outsb
jbe
xorb
and
dec
jae
ret
lods
and
pop
nop
addr16
jbe
scas
and
pop
xor
jmp
push
pop
dec
test
setg
rol
sbb
xchg
push
mov
inc
jge
in
aad
mov
sbbb
push
jo
test
daa
pop
dec
insb
mov
mov
mov
mov
jle
outsl
cmpsb
pop
pop
arpl
xor
test
inc
cwtl
enter
add
sbb
pop
cs
adc
or
or
in
mov
iret
add
mov
or
cmpsb
inc
out
out
mov
jge
out
lcall
stc
loopne
inc
mov
ret
inc
cmpsl
out
mov
daa
mov
pusha
imul
out
out
sti
inc
push
cmp
out
cmpsb
adc
stos
or
inc
xchg
and
push
sbb
sbb
xor
insb
jb
dec
push
popf
sbb
dec
pop
outsl
addl
add
xchg
enterw
stos
fdivs
sub
cs
es
mov
imul
aaa
movsl
pop
and
mov
leave
mov
lods
imul
push
imul
lret
sub
dec
js
cmp
and
sahf
movsb
pusha
in
push
call
mov
in
jmp
pusha
push
jmp
dec
aas
pop
stos
cmp
shrl
jmp
test
out
lods
in
cmp
fstpt
cmp
in
lock
cmp
loopne
jns
dec
mov
in
test
aas
mov
addr16
cld
rorb
cmp
fsubrl
pop
add
test
xor
mov
jne
sub
aaa
mov
mov
aas
sub
bound
aam
cs
add
call
sub
scas
pop
inc
push
ret
aad
movsb
subb
out
dec
sub
stc
loopne
ds
pusha
insb
cmp
mov
in
inc
inc
repnz
sub
push
mov
xchg
push
sar
jbe
xchg
dec
mov
incb
pusha
jo
fidivs
pop
jo
lahf
mov
jne
and
jb
repnz
adc
in
subl
ret
es
push
rcr
movsl
xchg
cmp
pusha
or
xchg
jno
out
jg
cli
leave
xchg
push
mov
xor
mov
or
imul
mov
scas
adc
dec
sbb
jno
mov
adc
mov
insl
jne
cmp
sarb
out
insl
clc
lock
and
mov
repnz
mov
add
jae
repz
pop
jl
int3
rclb
into
push
ret
xor
adcl
imul
rcrb
and
xchg
mov
mov
dec
jo
add
lcall
mov
mov
ret
data16
imul
outsl
mov
sbb
lcall
jp
mov
repz
adc
in
insb
shlb
xor
sbb
lods
xchg
data16
popf
cmp
xor
inc
cltd
cmpsb
jne
push
je
inc
or
jmp
movsl
xchg
sti
mov
das
sub
dec
loop
mov
aad
ljmp
movsl
xchg
adc
jmp
testl
outsl
mov
outsb
push
lret
or
jno
xchg
mov
mov
xchg
xchg
imul
lock
jo
arpl
flds
fs
ljmp
or
push
and
cwtl
addr16
or
into
push
bound
orb
daa
aad
add
sub
jp
adc
das
sub
into
dec
sub
xor
loope
cmpsb
je,pn
in
mov
jno
adc
dec
lret
out
arpl
sbb
mov
addr16
je
fstl
xor
xchg
xchg
outsb
je
sub
add
mov
jl
fadd
mov
in
mov
inc
mov
std
in
movsl
push
or
insl
out
arpl
cltd
fs
dec
add
icebp
out
pop
lret
pop
xor
movsl
daa
pop
inc
test
mov
adc
or
xor
push
out
loop
cmpsb
inc
adc
ret
and
pop
sbb
loopne
movsl
loop
sub
test
aas
xchg
ja
xor
adc
inc
out
jb
loopne
iret
pop
push
ja
outsb
jbe
xchg
pop
mov
shrl
decb
mov
pop
xor
xor
dec
or
outsl
adc
mul
lock
jmp
sbb
dec
push
mov
pop
inc
into
sbb
xchg
out
cmpsb
xor
repnz
adc
jo
out
insb
inc
inc
repz
dec
jg
jo
cmp
js
mov
pop
xor
sahf
je
dec
in
inc
imul
insb
test
lcall
in
jge
shrl
push
popf
push
imull
bound
jg
push
add
outsb
sub
cmc
int
jbe
mov
insb
int
mov
out
xchg
sti
lcall
into
sub
lret
jecxz
dec
mov
clc
ljmp
xchg
cs
out
jmp
faddp
das
sti
cmc
aaa
pusha
nop
and
fbstp
push
sbb
push
pusha
out
push
pop
test
clc
lock
data16
mov
lea
xchg
int3
pop
pop
aad
and
inc
xchg
test
out
es
fldl
call
shll
popf
ror
sbb
sbb
xor
push
adc
pop
or
mov
shlb
dec
mov
jae
iret
push
je
dec
or
pop
push
adc
ja
push
mov
push
mov
in
push
es
inc
nop
insl
xor
adc
pop
cmpl
icebp
dec
xchg
xor
test
sub
out
jo
dec
iret
insl
outsb
adcl
xchg
and
jnp
in
or
mov
xchg
das
lock
xchg
xchg
cmp
lahf
imul
fsubrl
scas
cltd
xlat
xlat
or
jmp
cmp
xlat
imul
dec
clc
cmp
push
or
cmp
js
scas
paddw
push
lea
aas
ljmp
adc
sahf
xchg
adc
in
xchg
data16
das
scas
cs
push
and
inc
xchg
cmp
in
mov
xor
pushf
mov
pop
std
pop
dec
push
es
cmova
repz
ja
pop
dec
cmpb
repnz
sub
inc
cmp
hlt
sub
dec
fiadds
in
cltd
jmp
mov
dec
scas
movsl
adc
jp
rcrl
outsb
pop
stc
inc
or
sub
adc
out
decl
dec
daa
mov
push
ss
das
sbb
cld
sub
test
dec
bound
mov
inc
jmp
movsl
loope
pusha
pop
jo
lret
inc
jbe
inc
or
lock
xchg
out
addl
clc
push
and
loopne
in
not
jge
add
stc
data16
jb
pop
out
or
movb
call
clc
movsl
mov
lahf
dec
imul
in
call
or
pop
aaa
or
jge
dec
ljmp
cmpsb
adc
std
cmp
and
test
cmp
daa
jo
mov
cmp
dec
fldz
push
sub
adc
out
in
push
adc
imulb
cmpsb
ret
in
mov
lock
cmp
add
mov
hlt
hlt
dec
push
fisubrs
lea
nop
add
in
daa
jl
cmp
jnp
sub
mov
dec
scas
adc
add
pop
popf
icebp
ja
test
xor
js
xor
gs
xor
sbb
cmp
bound
xchg
push
scas
out
adcl
cmp
out
cmc
jne
es
jnp
test
clc
outsl
push
sub
ja
mov
rcr
hlt
jo
push
fidivs
mov
test
ja
mov
fdivrs
or
hlt
arpl
pop
mov
xor
dec
add
call
movl
je
out
testl
shll
flds
les
fstpl
in
lock
scas
sbb
cmp
loop
xor
out
sub
xorl
sub
pop
hlt
loopne
aas
cmp
mov
jp
pusha
bound
packuswb
jbe
fstl
stos
aas
das
rcrb
loopne
lret
ss
push
pop
iret
cmc
jae
cmpl
out
cmpsl
pop
loope
scas
lods
pop
fistpll
js
rolb
mov
sahf
cmp
sub
sub
loop
ljmp
add
mov
daa
sub
pop
dec
mov
dec
arpl
xor
arpl
inc
mov
mov
negb
outsl
inc
jmp
xchg
push
popf
ljmp
mov
pop
push
sbb
adc
pop
shrl
sbb
mov
fildll
xchg
lahf
sti
aad
clc
mov
xor
movsb
inc
pushf
hlt
sub
jl
sbb
sti
pop
mov
adc
adc
adc
es
push
push
jmp
ret
hlt
data16
repz
mov
imul
dec
cmp
test
adc
lcall
add
dec
cmpsl
aad
pop
add
lods
mov
ljmp
pop
or
call
xor
orl
popf
inc
add
sbb
je
mov
add
or
push
rolb
je
lret
pop
xchg
or
lds
hlt
and
inc
out
test
mov
stc
jge
mov
into
je
lahf
push
push
jp
fstps
pop
add
sbb
mov
cli
and
mov
vcvtsd2si
pop
push
mov
stos
jne
jmp
enter
jle
push
jo
js
movsb
aas
cmp
shlb
jbe
add
fucomip
pusha
sub
testl
addl
loop
push
inc
scas
out
rcl
xchg
and
pop
outsl
or
rol
or
xchg
or
pop
test
mov
insl
cmp
cmpsl
jo
mov
in
imul
rcl
push
mov
pop
xor
cltd
stos
pop
test
iret
mov
mov
cmp
rcr
push
and
lods
fisttps
shl
jne
lods
mov
stos
insl
mov
rolb
adc
mov
inc
loopne
and
and
sahf
mov
push
sub
jmp
sahf
adc
cmpl
pushl
les
pop
xchg
adc
fwait
xchg
insb
popa
das
add
mov
hlt
adc
or
cli
loop
cmp
mov
ljmp
dec
xchg
xor
insl
outsl
daa
cli
aas
call
inc
push
add
outsl
mov
push
mov
mov
cltd
dec
adc
adc
leave
dec
inc
adc
push
jb
fmull
scas
aad
cmp
mov
pop
aas
loop
xchg
mov
push
xor
sbb
shll
shrl
out
push
sysenter
push
bnd
mov
jge
pop
push
jg
cld
and
sub
sub
mov
int3
bnd
cmpsl
lock
adcl
in
sahf
inc
jo
mov
dec
jo
into
push
cwtl
ljmp
out
push
rcr
jb
sar
xchg
popf
mov
and
inc
dec
mov
mov
mov
icebp
cltd
jl
mov
xor
in
inc
loope
xor
mov
xchg
mov
adc
pop
fdivp
cmp
repnz
mov
or
insb
fsts
ret
mov
mov
inc
ret
rorb
xchg
loop
push
xor
cmp
dec
push
pusha
mov
out
pop
inc
fstl
out
add
inc
inc
cmpl
je
sbb
sarb
push
xchg
and
inc
jno
into
popa
outsl
dec
aaa
xor
lds
pop
into
mov
mov
jge
movsl
inc
push
int3
hlt
das
aas
xor
mov
add
hlt
in
push
add
orb
xor
out
sub
and
das
cmpsb
add
pop
push
mov
and
fdivl
or
jno
aaa
fsubrl
push
xchg
loope
push
insl
cs
bnd
or
je
sub
imul
addl
shll
pop
inc
imul
xchg
pop
call
mov
arpl
inc
or
lock
lock
or
aas
jne
cmp
outsl
xor
out
in
js
stc
test
loope
push
insl
je
mov
push
dec
inc
push
xchg
mov
std
shll
scas
loope
pop
mov
andb
ss
fcoms
inc
hlt
sbb
and
icebp
jecxz
jecxz
iret
divl
mov
into
inc
hlt
or
pop
adc
fbld
inc
aam
bound
dec
loope
cmp
inc
mov
lods
add
ret
dec
shll
bound
das
pop
out
ret
movsl
mov
push
imul
fsubr
mov
loope
test
and
repnz
pop
call
negb
pop
and
fistpl
mov
xor
mov
mov
rorl
out
rcl
ja
jge
sahf
cmpsb
dec
and
xlat
bound
mov
jp
ja
sbbl
repz
je
add
popa
outsb
or
jb
sbb
push
jp
lock
test
and
push
jnp
les
jns,pt
sti
pop
movsl
out
out
jae
je
ja
dec
aad
aas
sub
or
cmp
pop
pop
pop
lock
mov
and
pop
mov
iret
sahf
enter
call
and
pop
dec
shll
lret
inc
fs
jecxz
jmp
imul
add
sarb
add
jbe
mov
testb
filds
jbe
mov
dec
hlt
jns
xchg
push
cmp
stc
or
leave
cld
mov
loopne
push
ret
fnstcw
fisttps
stos
nop
lahf
sti
sub
rorl
ret
mov
mov
mov
in
mov
inc
outsb
sub
or
out
pop
or
cwtl
je
test
jb
cli
cltd
and
adc
push
sarb
mov
mov
ljmp
mov
sub
xchg
lcall
or
jns
cmp
test
push
imul
xchg
jecxz
int
cwtl
push
fs
fwait
outsb
fsubrs
mov
and
ljmp
fnstsw
inc
dec
dec
lds
in
test
call
mov
push
rorl
or
pop
jmp
outsb
mov
add
aaa
out
inc
bound
sbb
cmpsb
xchg
xchg
ret
shr
insl
push
cltd
push
sti
cmp
out
test
and
mov
inc
ret
bnd
cwtl
xor
push
jb
push
cmpsb
xor
fwait
repnz
sbb
data16
push
iret
decb
dec
pop
push
or
xchg
jnp
ret
pushf
int
jmp
outsb
push
lods
ljmp
lods
out
mov
mov
mov
or
mov
shl
fiadds
pop
pop
adc
call
test
mov
sbb
aaa
inc
imul
in
fnsave
inc
bound
adc
mov
popf
fwait
in
mov
cmp
dec
inc
jbe
shll
or
sti
sbb
cld
xchg
leave
loop
add
nop
mov
pop
dec
mov
xorl
jl
loopne
nop
or
outsb
adc
out
adc
jo
test
dec
mov
push
sub
sub
pop
enter
mov
scas
adc
js
lcall
out
inc
pushf
insb
pop
dec
push
out
enter
add
mull
mov
xchg
push
cmpsb
je
mov
clc
mov
enter
lret
add
ret
insl
mov
aas
loopne
pop
jp
cmp
pusha
push
addl
leave
cwtl
xchg
insb
and
xchg
in
stc
mov
jb
jbe
lock
into
adc
fwait
insl
cmpsb
lods
adc
fnstenv
imul
popl
mov
sbb
xchg
xchg
lods
jbe
in
fadd
ret
shll
jle
adc
popa
loop
add
popf
push
call
push
out
je
xchg
jmp
scas
ror
hlt
cwtl
das
xchg
lock
pop
xor
mov
dec
stc
jge
inc
out
or
xor
sbb
mov
cmp
jo
dec
add
test
inc
testl
les
push
rcll
rolb
sahf
filds
jo
mov
or
stos
sub
test
dec
adc
aaa
ss
dec
add
ucomiss
out
movlps
shrb
add
movsl
sub
and
out
cmpsl
subl
mov
bound
daa
or
insl
cmpsb
mov
insl
imul
cwtl
xor
jo
je
xchg
xor
xchg
int
xchg
addr16
sbb
mov
ret
cmp
pop
or
push
inc
dec
testb
jmp
and
out
mov
fimuls
es
ljmp
xchg
addr16
daa
mov
aam
jnp
sub
sbb
movsl
ss
insl
outsl
outsb
aad
hlt
dec
lret
lock
incb
cmp
pminub
cltd
lcall
enter
jg
aaa
or
xor
popa
push
out
xchg
popf
out
movl
adc
mov
xchg
enter
lea
pop
and
pop
cwtl
mov
or
dec
in
in
nop
out
sahf
mov
push
and
dec
mov
dec
mov
inc
push
inc
dec
movsl
push
out
xchg
ljmp
out
and
imul
or
testb
and
aas
cld
cltd
pop
push
cld
cmc
or
push
inc
data16
scas
jmp
push
lds
mov
je
lods
icebp
xchg
stos
aad
sub
in
xor
push
xor
sub
push
stc
aas
out
je
jmp
aaa
add
outsl
sti
sahf
rep
shl
cmpsw
in
cmp
sbb
pop
lods
or
ljmp
into
push
inc
ljmp
leave
test
fnstcw
lods
xor
in
movl
cmp
add
jo
mov
jb
lods
adc
nop
jle
or
lock
jle
inc
push
jo
lret
mov
enter
cmpsl
out
jg
adc
rcrl
xor
sahf
arpl
xchg
js
je
xchg
sub
sub
loopne
ja
lods
jmp
lock
xchg
mov
int3
adc
pop
pop
dec
call
cmp
scas
mov
aaa
mov
sub
jo
xor
push
and
sub
dec
sub
cmp
cmp
inc
inc
sahf
ljmp
pushf
and
mov
cs
mov
jbe
and
aaa
jns
mov
push
out
pop
dec
mov
test
sahf
xor
inc
lock
add
mov
gs
test
je
int3
bound
pop
sub
fisubs
pop
icebp
fisubl
inc
adc
xor
addb
in
in
outsb
pusha
cmp
daa
sbb
cmp
es
out
data16
lock
xchg
pop
hlt
loope
jo
shll
es
int
pop
in
or
cmp
stc
add
bound
jb
xor
lahf
ljmp
dec
inc
xor
ret
jne
shl
imul
enter
or
in
dec
xchg
sub
in
ret
xchg
and
cmp
push
mov
dec
orb
gs
or
fsubs
dec
and
mov
out
mov
dec
jo
lret
out
mov
adc
cmp
dec
xor
jmp
xchg
xchg
fildll
mov
rcl
test
lds
movsl
mov
ja
out
loope
mov
cmp
push
cmpsl
xor
or
inc
outsl
mov
popa
inc
insb
lret
out
lea
outsb
rcl
pop
adc
jb
bswap
dec
mov
setl
cltd
imul
leave
ja
stc
out
addb
lret
pop
lret
out
repz
subb
loopne
enter
ljmp
daa
and
jnp
mov
push
xor
int
mov
sub
xchg
inc
adc
fwait
jl
bsr
lcall
movsb
mov
incb
out
out
mov
outsl
cmp
out
das
sub
shl
test
mov
add
pop
xlat
fmul
out
inc
dec
or
xchg
or
ljmp
cmp
je
in
mov
cmp
push
or
imul
and
jmp
lods
mov
jp
cmc
push
movsl
mov
ficomps
out
push
sub
pop
sbb
dec
mov
pusha
inc
inc
mov
dec
pushf
xor
ret
daa
cmpsb
push
scas
push
in
rolb
in
sbb
insl
pop
adc
ss
cmpsb
mov
stos
pop
movsl
es
push
sbb
xlat
hlt
or
lahf
in
andb
repnz
xlat
xchg
sub
jns
jb
sbb
cmp
das
adc
in
movq
sbb
and
arpl
rep
movsl
sbb
inc
cmpsb
gs
sub
or
les
loope
dec
cmp
ret
outsl
mov
das
cmp
mov
stos
out
xchg
or
mov
adc
mov
xor
push
jl
scas
in
movsl
xor
jg
inc
shll
sub
nop
das
not
popf
xchg
sbb
insl
mov
mov
cmp
or
adc
in
ljmp
shll
popa
je
rcr
mov
inc
pop
outsl
int3
xor
mov
pop
jnp
mov
xchg
mov
push
inc
bound
insl
in
mov
loope
and
sub
pusha
ss
push
out
sub
push
dec
out
jo
mov
lock
adc
call
inc
fs
mov
xchg
add
dec
ss
xor
push
mov
cmp
inc
shrl
in
jecxz
in
or
rcll
jo
arpl
popa
jp
lock
pop
pop
jl
push
push
or
test
pop
xor
jg
add
scas
test
pop
es
pop
fisttpl
sbb
jae
rcl
aad
notl
scas
clc
push
jmp
or
cli
rorl
and
xor
xchg
adc
mov
insl
xchg
int
xor
xor
insl
pop
ret
xchg
cmp
sti
out
jmp
addr16
fimuls
adc
pusha
insl
jg
dec
or
insl
fsubrp
js
insb
scas
mov
jns
dec
pop
arpl
testb
or
pop
ja
loopne
mov
or
jp
pop
pushf
pop
inc
xchg
cmp
cmp
mov
sub
jae
mov
aam
sbb
verw
je
shll
mov
add
add
xchg
xchg
adc
stos
sub
and
xchg
stc
jmp
fbld
inc
jg
mov
cmpsl
pop
repnz
xor
xchg
sub
add
std
pop
sbbl
and
inc
cmp
mov
inc
adc
sbb
add
lock
bound
or
js
bound
xchg
das
imul
pop
xchg
xlat
mov
push
cmp
and
inc
and
cltd
adc
into
fisttps
sub
gs
insl
dec
int3
dec
bound
fisubs
scas
data16
into
je
inc
cltd
xorl
popa
loope
sub
std
sbb
inc
scas
out
push
call
es
je
mov
sub
push
xchg
fidivrl
sub
cmp
fldt
xchg
shrb
jb
aas
repz
pop
adcb
push
dec
mov
sub
xchg
add
faddl
imul
in
add
popa
daa
ljmp
aad
lock
push
or
mov
ret
jns
xchg
pop
pop
mov
test
pop
lock
imul
cmp
std
pop
sbb
push
aad
or
ja
movsl
pop
xchg
inc
neg
movsb
cmp
outsl
bnd
out
mov
and
insb
scas
imul
push
icebp
in
loope
xchg
xor
xchg
leave
arpl
mov
leave
push
lods
sub
xor
push
dec
push
jnp
das
orb
out
sbb
call
outsl
inc
ret
sub
enter
pop
aas
pop
cmpsb
push
testl
rorb
addr16
sub
popa
sub
jg
fwait
push
lods
pop
aas
shl
add
aam
sbb
or
pop
ds
inc
mov
outsl
jbe
arpl
mov
call
das
icebp
mov
push
mov
pushf
outsl
xor
scas
call
das
out
movsb
push
and
aas
cmp
in
mov
xor
stos
xor
call
das
in
mov
sub
inc
mov
repz
mov
scas
cmp
sub
call
das
mov
pop
jge
cmp
cmp
mov
jns
outsl
dec
xor
in
push
insb
in
sub
pop
and
std
inc
mov
push
jo
sub
inc
data16
arpl
and
pop
jge
cmp
jns
inc
mov
icebp
sub
push
jecxz
and
jl
cli
in
cmp
pop
xor
mov
jmp
mov
jg
inc
in
je
mull
sub
out
out
popa
jo
push
imul
xor
mov
bound
and
movsl
std
js
imul
enter
inc
mov
lret
pop
pop
add
sbb
xor
push
insl
les
nop
test
jecxz
out
lahf
popa
imul
out
in
sub
mov
fcmovnbe
push
cmp
leave
or
les
mov
stos
in
and
or
in
mov
mov
sub
arpl
add
stos
mov
int
lret
or
sub
push
push
int3
arpl
dec
cmpsl
cmpsb
dec
out
call
fwait
or
push
rorl
outsb
lret
stos
push
movb
mov
popa
icebp
aaa
dec
std
imul
test
xor
aad
fildll
add
popf
jno
dec
cmc
mov
jno
stos
fildl
clc
push
xor
pushf
out
xor
daa
enter
icebp
inc
repz
fs
inc
in
inc
popf
mov
push
lods
loop
int
add
out
dec
out
int
pop
loop
mov
iret
inc
mov
pushf
push
test
mov
inc
jecxz
push
xor
movsb
imul
ja
jg,pn
lods
xchg
push
sbb
sub
test
xlat
outsl
scas
insb
imul
dec
mov
loope
shll
mov
mov
jmp
loope
dec
int
push
scas
pop
imul
add
imul
inc
arpl
movsb
lret
je
outsl
inc
push
ret
test
jecxz
insl
les
fs
or
call
mov
push
push
hlt
lahf
call
adc
outsb
out
add
jae
lcall
rorb
scas
std
add
movsb
or
out
push
es
out
ljmp
into
enter
and
je
fs
ljmp
leave
scas
out
sub
mov
jbe
fs
out
sub
test
fmul
bound
pop
repnz
mov
in
loop
jmp
outsl
in
ljmp
aas
insl
add
outsl
jge
inc
mov
js
dec
push
cmpsb
push
daa
clc
test
push
bound
xorl
push
add
jnp
add
pop
iret
and
scas
or
dec
test
dec
dec
out
and
inc
out
pop
test
push
cmp
jl
push
in
jns
adcl
inc
add
sbb
out
xlat
xorl
in
mov
sub
sbb
cmp
bound
call
idiv
addr16
or
out
or
add
movsl
or
es
xor
mov
sbb
iret
and
jl
repnz
fs
in
ret
push
mov
out
dec
and
shl
cmpsl
push
xor
ds
add
dec
in
imul
iret
mov
or
stos
jge
sub
and
xlat
into
ljmp
dec
xlat
in
dec
into
pop
sub
enter
push
test
dec
push
sarl
loop
std
ret
out
arpl
cmp
and
or
add
lret
arpl
rolb
lds
mov
sub
in
dec
arpl
pop
call
pusha
mov
out
cmpsb
das
mov
inc
in
lods
test
in
aas
es
call
cmp
lret
mov
lahf
sbb
jmp
or
retw
test
cld
sahf
mov
in
dec
xchg
sub
xchg
int3
nop
mov
enter
mov
pop
or
sub
xor
cmp
sbb
icebp
mov
sub
dec
in
mov
shrl
fsubp
ret
mov
ljmp
test
loope
int3
mov
adc
push
pop
inc
inc
xchg
ret
dec
xchg
xchg
rorb
mov
sar
jge
mov
in
mov
lret
imul
gs
int
dec
jmp
pop
xchg
lods
addr16
sub
loop
rcr
fadds
aad
movsl
jecxz
in
dec
iret
and
sub
inc
hlt
or
fs
or
push
in
sub
out
movsb
sbb
sub
sub
inc
int3
testb
mov
and
in
pavgw
mov
adc
ret
add
xchg
filds
int
sub
hlt
dec
sub
mov
jno
cmp
xorl
push
loope
scas
cs
js
cmc
imul
test
jg
cmp
insb
outsl
mov
rdpmc
mov
js
mov
pop
pop
cmp
or
ds
popa
cmp
lods
mov
mov
insl
data16
rcll
pop
sub
leave
mov
mov
insb
push
xchg
gs
xchg
ljmp
test
arpl
movl
push
ja
ja
loope
and
int3
test
mov
insl
fs
imul
xor
pop
imul
xchg
jl
out
out
pop
mov
cmpl
dec
ja
movsb
call
lret
mov
or
ljmp
dec
lret
ss
and
sub
imul
insb
mov
cld
lret
mov
jmp
pop
and
or
and
or
push
out
addb
dec
dec
out
rcrl
xor
jbe
push
daa
outsl
sub
int3
push
in
out
adc
inc
dec
in
add
fdivrs
mov
xor
imul
inc
outsb
movsb
sub
push
mov
sub
lock
movl
jmp
add
andb
outsb
call
xchg
mov
lods
mov
inc
xor
outsl
dec
xor
cmpsb
aaa
es
and
call
xorl
sub
add
pop
imul
xor
insb
or
adc
in
push
mov
lock
shr
mov
pop
mov
mov
insl
insb
mov
mov
in
jbe
fidivrs
cmc
test
and
js
mov
fisubl
stos
pop
dec
fmuls
jmp
iret
je
idivb
int
in
or
sbbb
test
add
jmp
cli
ss
js
or
je
sub
int
int3
fsubs
stos
and
and
subl
fnsave
lret
dec
in
imul
mov
add
pop
mov
mov
divl
pop
xchg
inc
mov
mov
loope
aas
add
pop
dec
adc
out
in
daa
shrl
repnz
hlt
or
and
repnz
mov
push
jbe
dec
insb
sbb
and
push
sti
in
add
pop
outsb
pop
sub
cmc
into
ret
sub
xor
cmp
jmp
xchg
pop
outsb
inc
jmp
pop
xor
lret
mov
add
xchg
sub
cmpsl
fnstsw
or
pop
pop
adc
jmp
sub
xor
jo
sbb
sub
and
fs
cli
cmp
test
ret
repz
iret
cmpsl
xor
ret
inc
mov
pop
inc
push
mov
and
in
mov
iret
stc
and
jnp
or
insb
cs
loop
les
jmp
pop
call
addr16
adc
stos
dec
test
rorb
in
dec
in
jmp
data16
add
ret
xchg
ljmp
dec
pop
adc
dec
mul
dec
in
mov
aaa
ss
hlt
wbinvd
cmp
cmpsl
dec
repnz
sub
mov
pop
call
push
mov
stos
fisttpll
pop
addr16
sub
nop
ljmp
or
cltd
pop
dec
or
popf
dec
in
xorl
mov
fnstenv
movsb
test
test
sub
push
xchg
mov
enter
in
jmp
ret
outsl
lcall
add
lret
add
pop
insb
fs
das
out
clc
in
and
arpl
arpl
sbb
arpl
xchg
xor
insb
inc
push
es
das
ja
pop
push
mov
and
sub
test
cwtl
ret
cli
xchg
cmp
andl
pop
mov
push
inc
ficomps
in
adc
lret
les
outsb
dec
pusha
xor
pop
inc
orl
and
inc
adc
pop
daa
ret
mov
inc
addr16
subb
sub
das
sub
xor
test
jnp
jmp
ret
mov
cli
xchg
ljmp
fs
jmp
andl
sub
and
incb
adc
jne
dec
jmp
repnz
inc
dec
pop
pop
pusha
aas
mov
test
repnz
jbe
xor
call
outsl
insl
arpl
jns
push
sub
addr16
in
rcrl
ds
daa
mov
je
ja
lahf
notb
mov
pop
jo
and
movsb
add
cld
outsb
shufps
jb
cs
dec
and
dec
pop
arpl
les
cld
sbb
push
cmp
insl
xor
and
jl
mov
nop
fidivrl
cld
mov
sub
mov
jno
andl
or
dec
add
ljmp
inc
lods
stc
addl
mov
sub
sti
jmp
and
pop
testb
enter
xchg
push
cmpsl
cmp
stc
outsb
xchg
lods
mov
outsl
xchg
xchg
cwtl
dec
aad
hlt
dec
out
in
mov
adc
dec
adc
loope
xchg
or
dec
in
inc
call
dec
fs
in
xchg
and
outsb
cmpsb
loopne
mov
and
les
pop
shrl
add
insb
sub
xchg
in
mov
pop
lret
adc
pop
insl
std
adc
test
out
insl
movsl
xchg
xchg
jo
cmpsb
lods
cmp
enter
and
push
les
and
call
fsub
cmc
sub
dec
jae
dec
mov
insl
xchg
addb
mov
data16
dec
clc
xor
lcall
sahf
mov
dec
cmp
fstpl
push
or
mov
jge
out
in
or
cmpsb
in
sub
xor
mov
mov
enter
test
ja
cld
leave
or
daa
out
movsl
dec
sub
repnz
pop
aaa
xchg
and
insb
ja
pusha
shll
fldcw
addr16
push
xchg
das
ja
fisttpll
pop
in
cmp
push
jmp
xor
xchg
and
or
gs
cmpsb
les
shrl
and
enter
ret
dec
cmpsl
inc
jg
repz
repnz
insb
dec
test
pop
outsw
daa
xorl
repz
aad
push
dec
pop
lock
jg
cli
aaa
jmp
lock
cltd
imul
test
xlat
or
popa
mov
cli
dec
aaa
inc
lds
scas
jae
addr16
pop
js
inc
adc
out
rorb
in
push
fldt
jp
inc
out
repnz
jmp
push
andl
mov
insl
ja
mov
in
cmp
aad
adc
adc
out
push
sub
loop
mov
daa
call
add
pop
pop
jmp
fidivs
in
and
je
ja
call
imul
imul
sub
xchg
cmp
sub
enter
push
and
xor
enter
xchg
sub
repnz
fmuls
in
ret
adc
rorl
pop
sbb
mov
addr16
ja
hlt
inc
jno
dec
in
xchg
sub
cld
ja
out
pop
mov
fimull
ss
in
dec
dec
cmpsb
fstps
and
in
cmp
hlt
ss
push
mov
xchg
xor
repnz
add
daa
jno
ret
insl
push
inc
mov
mov
insb
cli
cwtl
xor
push
insb
divb
lods
sub
and
push
push
out
mov
xchg
imul
xchg
inc
xchg
in
push
call
push
hlt
push
test
addr16
fs
es
and
and
inc
bswap
sahf
mov
xchg
in
in
mov
je
and
inc
sbb
jmp
jecxz
adc
enter
fstpt
in
call
cltd
mov
roll
mov
mov
insl
mov
sub
or
xchg
movsl
sbb
insl
imul
test
gs
sub
inc
push
cld
stos
jmp
jmp
daa
in
in
test
cli
movsb
push
jnp
sub
daa
call
mov
movl
movsl
cmpsb
js
cmpsl
pop
enter
aam
lods
sub
icebp
orb
jne
fdivrl
test
out
out
xor
and
mov
ljmp
dec
pop
inc
daa
xor
daa
lret
in
dec
call
insb
test
jne
xchg
mov
shll
lret
gs
or
jb
push
stos
daa
mov
rcrb
cmpsb
add
jecxz
jmp
and
sti
mov
fcmove
das
sbb
pop
pop
stos
popf
je
adc
daa
cli
std
pop
cmpsb
inc
cmp
ja
xchg
insb
sbb
mov
xchg
out
pop
add
or
rorb
dec
adc
mov
xor
insl
cmpsl
sbb
inc
cmp
int
insl
orb
stc
mov
jmp
xor
jo
or
sub
repz
dec
cmp
jnp
hlt
test
nopl
call
cli
cld
imul
cld
and
push
xchg
xchg
insb
jmp
out
es
sub
add
xchg
fiadds
add
pop
lods
int
mov
stc
push
mov
outsb
aaa
iret
lods
push
push
xor
lret
stos
xor
orl
faddl
xchg
fnstenv
sahf
in
loop
and
or
enter
pop
out
xchg
dec
xor
subl
loope
pop
lods
daa
jge
xlat
call
xor
stc
sti
inc
pusha
and
stc
icebp
es
and
pop
ja
inc
addr16
fsubrl
fs
imul
mov
jg
mov
sbb
push
movsb
pop
lcall
mov
push
enter
daa
addr16
addr16
ja
out
lods
pop
or
mov
pop
dec
aam
or
jecxz
dec
inc
sub
and
stos
cmpsb
ljmp
ss
test
faddl
out
ret
popa
shr
std
ljmp
inc
scas
cmpsl
lret
mov
stos
iret
movsl
dec
sub
jg
dec
adc
cltd
aaa
jmp
sub
mov
add
inc
out
sub
out
test
push
in
out
push
mov
add
insl
fdivrp
inc
insl
lret
sub
pop
out
mov
outsl
pop
and
inc
pop
jb
jmp
sub
adc
and
jg
mov
das
incl
pushf
in
data16
stos
jecxz
das
in
and
js
push
mov
mov
scas
in
sub
jnp
dec
dec
idivb
mov
roll
in
shlw
loopne
inc
sti
into
ds
push
test
push
popf
mov
addl
push
or
stos
sub
ljmp
in
mov
call
pop
out
mov
sub
repz
mov
pop
mov
sbb
in
je
in
in
invd
call
inc
lea
inc
stos
arpl
jg
pop
adc
mov
pop
adc
ljmp
ficompl
lret
rorl
iret
out
dec
arpl
sub
or
imul
lahf
push
cmpsl
sub
cli
and
and
enter
out
mov
aaa
frstor
cli
mull
enter
fs
xor
pop
cli
out
pop
pop
inc
pop
pop
jnp
ffreep
fdivrl
aam
lret
xchg
addr16
in
clc
inc
test
cs
ja
bound
sbb
fnstcw
shrb
cli
ds
cld
or
std
jo
xchg
push
test
and
sbb
inc
push
sbb
loopne
push
lea
shl
insl
jg
imul
aaa
scas
jmp
push
test
push
sbb
mov
addr16
inc
push
outsl
bound
mov
mov
pop
lock
rorb
inc
lret
fisttpll
jg
or
dec
adc
aas
fbstp
jg
xchg
es
add
test
xor
jp
xor
pushf
cli
adc
xor
call
mov
pop
mov
int3
scas
xchg
jg
and
mov
xor
aaa
mov
lret
mov
or
test
popf
bound
add
sbb
aam
pop
lods
das
lea
push
lretw
test
sub
cli
in
in
lret
arpl
push
sub
ljmp
data16
popf
pop
in
xor
push
popa
pop
mov
adc
subl
ds
push
sub
loopne
lahf
std
lret
rorl
es
or
loopne
lret
inc
mov
out
imul
add
xor
xchg
cmp
clc
cmp
rolb
call
push
fsubrs
jmp
and
push
jg
insb
int
or
push
fstpl
imul
shrb
sub
sub
mov
int3
ret
gs
inc
and
shrl
jg
cmp
std
icebp
push
cli
out
arpl
sti
jne
pop
xchg
xor
addr16
in
xor
xbegin
imulb
mov
daa
fidivs
fucomi
dec
fucomip
sbb
int3
mov
push
repz
pop
outsl
and
in
ficompl
add
rclb
into
fs
rclb
btc
pop
jg
lret
mov
daa
sub
sub
mov
popf
stc
cmp
out
adc
add
rclb
cmc
sub
leave
jmp
loop
mov
pop
sahf
popf
xchg
out
outsb
fsts
adcl
test
and
or
insb
push
ret
xchg
mov
cmc
pop
push
mov
push
xchg
test
mov
mov
ja
or
in
loop
hlt
push
cmpsl
add
fdivs
outsb
es
bound
add
fstp
adc
pop
stos
int3
mov
jge
sub
sub
ja,pt
jg
data16
sub
sarl
fidivs
add
pusha
or
out
scas
cld
lahf
out
in
lock
xchg
mov
push
mov
fs
in
or
test
push
scas
add
in
dec
inc
xchg
xlat
push
popa
dec
push
inc
sti
xchg
inc
arpl
lahf
in
fdivrl
mov
mov
lds
dec
pop
insb
push
and
pop
in
adc
ss
imul
mov
std
repz
jnp,pt
pop
push
fiadds
add
push
sub
rol
mov
in
mov
int3
addr16
or
test
dec
fdivr
mov
enter
fcmovu
loopne
push
fucomip
or
jb
lods
movsl
add
and
ffreep
sub
sti
aaa
dec
cmpsl
std
arpl
mov
pop
jge
les
cli
mul
ds
loope
scas
cmp
ss
ret
jg
sub
jae
in
lret
xor
ja
std
push
aaa
sti
push
insl
cli
jl
cmp
test
loop
or
lret
scas
loop
xchg
fbstp
inc
pop
popf
hlt
test
pop
or
test
xchg
cmp
mov
lods
imul
lods
outsb
fisubrs
sbb
jno
xchg
stos
mov
fdiv
mov
inc
pushf
jmp
call
bound
fbstp
add
inc
mov
xchg
ss
enter
xchg
cmp
icebp
call
cld
arpl
and
xchg
xchg
push
jg
enter
out
les
hlt
pushf
push
add
sbb
test
cli
mov
jg
ret
or
sbb
je
fisubrl
es
sahf
mov
int3
in
push
push
ljmp
ja
mov
fnstenv
inc
xlat
daa
loope
sbb
aaa
iret
and
outsl
adc
data16
adc
data16
xchg
inc
loop
xor
in
sub
outsb
popf
push
push
aas
cmp
movsl
in
mov
cmp
jg
aas
fcmovnu
fsubrp
add
test
sub
flds
inc
inc
push
in
js
pop
adc
repz
fbstp
daa
mov
loop
mov
insl
int3
adc
aaa
mov
and
mov
insl
or
push
cmp
into
in
sub
movsl
lea
jmp
insl
int3
daa
xchg
fisttps
xor
xchg
pop
inc
and
in
jbe
int3
ret
outsb
repnz
dec
movsl
bound
ss
inc
fs
sahf
adc
lock
lahf
in
push
scas
scas
pushl
ds
inc
in
ffree
hlt
pop
loop
daa
into
in
pushf
xor
mov
std
aaa
add
in
es
or
adc
or
mov
jo
in
hlt
push
pop
dec
cmpsb
jmp
sub
cmp
push
pop
cs
mov
inc
fwait
out
lock
negl
pop
lcall
jle
out
out
out
lods
pop
in
jo
loop
push
jae
and
stos
arpl
mov
daa
or
fs
ret
pop
aaa
addr16
pop
test
popf
sub
mov
out
out
cld
out
pusha
fistl
pushl
push
cmc
push
call
sbb
je
repnz
xchg
repnz
cmpsl
mov
sub
mov
pop
inc
mulb
adc
adc
or
adc
les
popa
cld
mov
mov
sub
mov
sub
pop
movsb
out
push
or
xor
aad
stos
dec
adc
jmp
mov
inc
jge
inc
mov
pushf
jl
or
out
mov
call
add
jge
jbe
sub
cmc
pop
ret
jne
aas
inc
push
mov
orl
mov
mov
jg
push
js
mov
lea
mov
aam
arpl
push
pop
mov
aaa
xor
sbb
subl
rep
insl
fs
loop
mov
subb
repz
pushf
pop
orl
aas
cmp
xchg
and
mov
rcrl
ds
outsb
add
cmp
jno
pop
stos
outsb
mov
xchg
ja
pusha
add
xchg
into
std
or
rcr
add
jge
sahf
push
in
int3
add
int3
ss
mov
mov
repnz
out
mov
stos
jmp
popf
out
lahf
fsubrp
push
bound
test
je
pop
add
sub
fs
ffreep
int
push
jmp
loop
ret
in
lret
push
cmpsl
pushf
dec
test
jg
pop
bound
pop
inc
cli
sub
or
inc
sbb
insl
cltd
sahf
into
jl
xchg
pushf
cli
sti
mov
sbb
jae
pop
ljmp
lcall
insb
fs
pop
pushf
sub
mov
jae
xchg
mov
mov
xor
fsts
je
xchg
mov
lock
icebp
cmpsb
push
out
enter
xchg
cmpl
sbb
aam
push
sub
sahf
cmc
dec
in
ds
lret
or
jns
roll
enter
pushf
xchg
repz
inc
dec
mov
fisttpl
je
or
push
in
lods
scas
fdivr
data16
outsl
xchg
mov
sbb
std
push
xor
cmpsb
in
mov
jg
sub
enter
out
sahf
std
cltd
mov
jbe
sahf
stc
je
or
addr16
sbb
sbb
push
adc
inc
xchg
call
pop
je
out
xchg
testb
xor
test
sub
insl
out
dec
or
loope
inc
mov
imul
incl
inc
fs
push
sahf
outsb
sub
xor
mov
lret
cld
xlat
test
mov
repnz
push
mov
xor
insb
mov
scas
in
add
push
jo
or
stc
dec
xchg
shr
stos
popf
jne
push
daa
arpl
fucomip
faddl
dec
loope
aaa
das
in
sbb
mov
mov
sbb
fs
and
push
ja
ljmp
aaa
mulb
sbb
cmp
mov
mov
mov
adc
pusha
aam
fdivrp
sbb
andb
in
rep
out
test
jle
xchg
mov
pushf
inc
stos
sub
nop
sahf
in
loope
xchg
mov
add
cld
cmp
mov
xchg
inc
stc
adc
dec
call
lfs
cmp
into
fs
dec
or
xor
rcll
insl
add
lods
push
push
outsb
fs
in
out
jo
scas
fs
and
cmpsl
out
mov
jns
fdivr
or
pop
cmpsl
add
loopne
sub
and
filds
pushf
mov
mov
cld
mov
addl
or
test
pop
addl
es
outsb
movsl
dec
mov
fmul
or
xchg
fildl
mov
shl
or
jl
cli
cmpsb
ds
ficomps
repz
inc
out
push
stc
in
push
jmp
adc
mov
outsb
xor
inc
push
jae
adc
out
in
add
scas
fildll
add
xor
incl
enter
leave
hlt
test
jmp
fs
std
popf
sub
imul
adc
sub
clc
mov
xor
or
in
fidivrl
and
daa
xchg
test
sbb
insb
fildl
adc
dec
pop
stos
in
cld
xor
aam
jmp
es
pushf
mov
sti
jl
inc
ja
add
popf
shll
cli
cmpsl
mov
es
jno
xlat
jb
sbb
xor
dec
pop
jbe
les
bound
mov
outsb
sub
clc
cmpsl
loopne
repz
push
lods
out
or
aam
xor
aam
hlt
pop
push
movl
movsb
jle
stos
fildll
push
insb
insb
daa
jae
pop
inc
mov
arpl
in
xor
xorb
sarb
cmp
bnd
cmp
insb
cld
in
in
dec
mov
outsb
daa
icebp
fiaddl
js
cld
pop
and
rorb
clc
scas
in
mov
out
fsubrl
outsl
stos
mov
xor
in
xor
fs
aaa
pop
in
xchg
cmp
add
jg
ds
enter
rol
insl
add
and
jo
data16
popf
enter
jns
out
lret
mov
mov
test
xchg
rcll
das
lea
sbb
push
dec
lds
mov
movsl
adc
lcall
outsb
add
adc
nop
mov
mov
sub
cld
or
fsubrl
push
imul
adc
js
rol
adcl
pusha
jg
fildll
mov
or
ljmp
out
mov
in
js
pop
insl
daa
mov
daa
mov
sub
mov
push
pop
mov
stos
fcomip
lret
ljmp
out
loopne
inc
jbe
mov
lcall
data16
pop
in
or
inc
das
cmpsl
pop
lock
insl
sahf
das
mov
cld
mov
or
das
pop
adc
sahf
sbb
in
cld
fwait
or
push
dec
or
fdivl
movsl
leave
in
xchg
lret
sub
adc
insb
cld
adc
pop
outsb
movsl
sub
xchg
insl
pop
xor
fidivrl
xchg
loop
push
shll
jg
cmp
inc
in
sub
adc
mov
test
in
mov
lret
sahf
mov
sahf
inc
push
mov
dec
mov
mov
mov
data16
cmpsl
xor
out
sub
fs
sub
push
loopne
aaa
or
cld
sbb
lret
aam
mov
into
outsb
in
lods
lret
repz
sbbl
jle
fwait
aad
mov
xchg
or
lret
push
mov
xchg
repz
xchg
jmp
mov
add
jnp
jmp
fildl
insl
adc
aam
mov
ds
inc
addr16
cmp
loope
mov
imul
jo
and
adc
fdiv
ljmp
add
dec
test
lcall
test
jo
and
hlt
xor
ljmp
in
pop
fcompl
popa
aas
stc
pusha
shlb
fidivl
ret
jbe
jb
dec
xchg
repnz
je
sarb
testb
jl
mov
lock
call
lods
enter
mov
andb
fmuls
in
or
jmp
in
orl
mov
mov
push
repnz
ljmp
rcll
in
loope
out
pusha
std
jg
push
sti
je
pop
pop
pushf
mov
in
pop
mov
bound
int
push
cwtl
decb
push
daa
xor
in
data16
jmp
loop
negl
loopne
xchg
addr16
sbb
fmull
idiv
lcall
pop
inc
cmp
push
ret
pop
leave
push
dec
mov
mov
popf
enter
cmp
cmp
push
lret
jo
mov
in
fcoml
lcall
pop
iret
push
clc
mov
cld
dec
enter
adc
stos
test
cmp
dec
cltd
fsubs
in
fwait
inc
ljmp
mov
stc
addr16
test
btr
ljmp
jl
mov
sub
pop
repnz
jbe
cli
aas
fstpt
cltd
lret
js
test
cld
stc
inc
cmp
stos
loop
xor
ljmp
call
inc
push
push
fildl
ja
mov
out
xor
or
jl
outsb
dec
fdivs
insl
cmp
sti
ljmp
mov
mov
or
insl
in
sub
movsl
ffree
loope
pushf
push
push
push
mov
inc
shrb
push
in
inc
movsl
movsb
sbb
inc
mov
icebp
inc
mov
sbb
in
cli
ret
outsb
and
fs
lock
or
and
dec
aas
adc
or
loop
sbb
in
in
shrl
ljmp
sub
mov
push
xchg
push
out
inc
cld
and
mov
add
popa
call
loopne
enter
push
shrb
jg
insb
xchg
lods
inc
fdivrp
popa
fsub
inc
out
sahf
rol
in
fisubrs
fcmovnb
scas
int3
inc
fmull
std
jg
lea
lcall
adc
push
adc
or
sahf
cmp
ds
ja
push
in
xlat
mov
repz
test
inc
insl
es
push
test
fisubrs
lods
cli
and
test
insb
sbb
pushf
in
clc
leave
fsubr
aam
js
sbb
jecxz
push
jmp
out
out
out
sbb
jnp
cmpsl
dec
pop
inc
jmp
pushf
pusha
xchg
push
push
sbb
inc
stc
and
dec
jbe
lcall
push
mov
ljmp
out
add
leave
pop
jmp
fcoml
stos
adc
aaa
mov
enter
outsl
mov
pop
lcall
vcvtss2sd
jge
arpl
mov
sub
push
mov
outsb
and
gs
fiadds
and
aaa
idivb
cmp
cmp
sub
aam
mov
sub
or
pop
xor
jo
imul
out
sub
gs
xor
adc
inc
mov
enter
mov
or
lds
daa
loop
push
cmpsb
mov
mov
outsb
cld
mov
sub
and
cld
pop
out
sti
sub
pmaxsw
icebp
sub
xchg
aaa
jmp
daa
aam
neg
jmp
jg
enter
loopne
outsb
stos
lcall
push
push
pop
jle
and
jno
subb
out
adc
loopne
les
adc
cwtl
jbe
inc
lret
insl
js
mov
push
je
inc
hlt
lret
mov
cmp
cmp
jmp
jle
mov
adc
hlt
and
out
fwait
in
sbb
pusha
lret
hlt
mov
testl
std
or
shr
dec
jmp
mov
int3
repnz
mov
loope
sub
fisubl
cwtl
adc
std
shll
jg
aaa
jl
fiaddl
and
je
fisttpl
pop
loopne
pop
mov
sub
les
xor
dec
imul
cld
fidivrs
js
inc
push
je
cmpsl
jge
mov
fsubs
nop
ljmp
sbb
ds
xchg
in
mov
dec
ja
push
out
js
inc
sub
mov
pusha
je
or
push
call
mov
adc
cmpsl
call
sbb
hlt
cmp
arpl
add
dec
mov
jp
push
mov
inc
movsl
fcompl
incb
mov
sub
add
leave
loop
out
lods
loop
jnp
cmp
test
jbe
insb
je
cmp
mov
sub
outsb
repnz
sahf
mov
add
ss
imul
add
hlt
push
lock
pop
fisubs
out
push
test
sarb
leave
out
ret
movsl
xor
mov
movb
xchg
push
sub
pop
xor
iret
mov
popf
or
aas
mov
loope
in
add
addr16
leave
inc
fnstsw
fstl
cmpsb
lahf
stos
xchg
rorl
in
bound
aaa
addr16
mov
mov
icebp
loop
sub
in
jg
insb
xchg
or
aas
mov
mov
ret
fsubs
in
mov
cmp
test
or
sbbw
mov
das
add
stc
dec
cmp
cmpb
push
xlat
xor
icebp
ljmp
jns
dec
fisttpl
pop
or
jle
or
add
out
sti
ror
cmp
xchg
adc
mov
add
loopne
test
fwait
and
aaa
dec
icebp
jecxz
push
leave
jecxz
and
ja
pop
dec
ljmp
jbe
mov
ja
aas
inc
adc
test
rolb
hlt
shr
decb
cli
pop
sarb
mov
ljmp
push
adc
inc
inc
lahf
add
in
xor
ljmp
daa
mov
mov
ret
out
lods
dec
out
pop
jle
loopne
cmp
movsl
or
ljmp
lahf
jae
cmp
jae
popf
mov
loope,pt
fwait
xchg
xchg
sbb
push
sbb
sbbl
push
imul
aaa
inc
mov
cmpsb
in
movsl
cltd
clc
outsb
cltd
ds
out
adc
add
fnstcw
lahf
test
fstpl
fidivl
out
xchg
loopne
pop
inc
dec
shl
cmpsb
mov
sahf
cs
test
pushf
cli
xchg
ljmp
sub
fs
mov
or
xchg
dec
cmpsb
scas
insl
cmpsb
aam
outsb
hlt
ds
cmpsb
out
icebp
std
push
insb
rorl
xor
cmp
or
push
jmp
mov
adc
repnz
test
mov
and
pushf
mov
negb
rolb
mov
push
or
mov
adc
movsb
mov
mov
outsl
cld
adc
bnd
inc
call
cmp
xor
das
push
pop
push
in
jg
aaa
stos
imul
jp
cmpsl
add
cmp
test
aad
add
int
mov
xchg
scas
push
push
mov
loop
int3
stc
mov
sbb
fiadds
daa
icebp
lods
es
lcall
in
pop
outsb
ss
jle
mov
inc
pop
adc
mov
mov
cmp
sbb
sbb
cli
jns
pop
out
xchg
cmp
jnp
pop
jo
test
xchg
fisttps
sub
addr16
jl
popf
ret
scas
sti
xor
js
sub
sub
dec
push
movsl
ss
jbe
fiadds
es
movsb
gs
ret
addr16
cld
sbb
daa
push
cmp
xor
push
xor
sbb
mov
out
insb
loop
fistl
or
mov
mov
fcoms
fstpt
mov
inc
andb
sahf
fistl
sub
test
bnd
scas
insl
mov
ljmp
mov
or
cmp
loope
jnp
sub
mov
cltd
es
outsb
adc
xchg
in
in
inc
outsb
fs
popf
pop
rep
ror
repz
jb
adc
sahf
xlat
jl
push
clc
stos
xor
mov
flds
loope
pop
sarl
and
int
out
aam
in
subb
in
mov
fwait
push
ja
push
push
mov
push
ds
out
cmp
cmp
fbstp
ljmp
mov
outsl
xor
js
daa
lds
push
in
outsl
aaa
aam
stos
push
ret
mov
insl
je
daa
movsl
xor
jo
ja
mov
dec
je
push
test
outsl
daa
test
fstpl
mov
enter
cmpsb
rorl
loope
movsl
cmpsl
push
je
mov
out
cld
sbb
shrb
fdivrs
negb
insb
xlat
dec
sub
push
jmp
cmpsb
repz
in
lea
mov
roll
outsl
ss
sub
xchg
aas
xor
add
cmc
loopne
popf
aam
dec
out
in
pop
dec
push
lret
sbb
movsl
dec
and
out
shrl
or
fwait
popf
ret
mov
sbb
sub
iret
out
outsl
lods
outsb
fsts
inc
repz
push
movsl
mov
or
ljmp
lret
sbb
dec
or
sbb
sbb
in
push
mov
repz
out
in
cld
inc
sbb
sahf
nop
cltd
mov
in
push
mov
cmp
sub
push
and
push
stos
inc
sub
pusha
and
js
mov
in
sub
outsb
fiaddl
aad
rclb
es
push
or
and
outsl
iret
out
call
hlt
cmp
or
aas
dec
int3
dec
out
dec
imulb
pop
addr16
outsl
insl
dec
cld
filds
dec
ret
subl
dec
outsl
xor
out
ja
hlt
in
inc
out
test
cli
cmp
push
mov
int
and
jmp
push
add
ja
pop
pop
jg
movsl
inc
scas
shr
push
sub
enter
inc
in
sub
hlt
outsl
loop
or
stos
sub
or
jmp
push
push
add
jo
xor
push
arpl
push
bound
cwtl
jl
dec
lock
data16
shr
call
sub
pusha
repnz
das
cmc
in
xor
pop
adc
inc
iret
das
loop
scas
push
inc
dec
das
out
in
das
call
pop
imull
inc
jg
scas
in
loope
mov
sub
inc
in
das
insl
in
jo
dec
pusha
jne
dec
sub
jl
in
das
jg
lods
push
imul
xor
out
xor
jae
lock
jp
mov
inc
nop
das
in
jo
in
push
inc
inc
xor
in
in
adc
sub
add
scas
in
cld
push
inc
arpl
dec
in
out
das
pop
push
psubsb
inc
lock
into
sub
push
stc
call
das
in
cs
in
in
call
in
lods
push
icebp
inc
sub
inc
jp
sub
pop
loop
in
call
das
lods
in
in
push
dec
insb
sub
inc
sub
sti
in
or
jg
lret
sub
call
mov
sub
pusha
jae
pop
gs
jmp
stc
pop
addr16
jmp
jmp
push
xor
jmp
pusha
ret
jge
test
jae
or
jae
push
iret
push
sti
xor
mov
in
push
jge
fildll
in
xor
push
push
lcall
pop
push
bound
xor
mov
xor
in
push
mov
cli
outsl
push
jg
dec
imul
bound
pop
outsl
out
inc
jmp
lock
pop
sub
add
clc
mov
jle
mov
loope
stc
jmp
out
jae
push
or
in
mov
and
sbb
clc
mov
std
outsl
mov
loopne
stc
jmp
addr16
push
iret
push
insb
xor
mov
jae
push
bound
fs
push
or
mov
jp
bound
jge
fbld
jmp
push
bound
arpl
jg
test
jae
push
iret
stc
jg
arpl
jmp
bound
stc
jmp
das
stos
arpl
or
fbld
jne
cs
push
mov
sti
inc
jp,pt
push
ljmp
in
lret
push
jmp
mov
inc
imul
xor
ja
sub
sub
inc
bound
lret
push
push
in
dec
add
push
dec
or
jmp
push
popa
call
das
out
dec
push
outsb
call
call
in
clc
push
mov
ljmp
loop
dec
in
pushw
push
or
outsb
out
jb
inc
das
jbe
cmpsl
push
jge
incl
das
arpl
daa
push
inc
out
in
in
push
repnz
sub
inc
stc
das
inc
in
jge
es
pusha
sub
inc
push
push
pusha
jae
inc
gs
imul
inc
push
std
call
das
loop
les
pop
movsb
sub
inc
fs
out
in
inc
in
call
add
imull
jecxz
jnp
ret
pop
jle
mov
gs
arpl
call
sub
add
push
dec
ret
call
das
in
bound
pop
inc
sub
inc
add
insb
in
loope
outsb
pop
shrl
sub
inc
ja
popa
in
jp
inc
pop
std
sub
inc
in
loopne
push
sub
pusha
jb
inc
pusha
das
jne
inc
movsl
and
add
popa
in
ljmp
pop
fildll
inc
lahf
das
jo
jg
je
jo
pop
ja
aas
call
das
in
loope
ficomps
sub
inc
in
das
jle
pop
sub
call
das
cli
in
std
push
loope
mov
call
pop
pop
sub
imul
cld
in
cli
push
mov
in
jl
call
sub
pusha
hlt
dec
inc
sti
das
js
fildl
inc
fwait
das
popa
in
jnp
in
pop
sub
inc
sbb
insl
in
cli
push
jae
sub
inc
cli
das
jp
push
cmp
in
inc
call
push
pusha
jb
inc
cltd
das
hlt
mov
clc
call
das
pusha
in
sbb
pop
clc
sub
inc
mov
call
pop
hlt
sub
in
jl
sbb
sub
inc
gs
mov
call
sub
sub
push
inc
imulb
jl
push
loop
xchg
out
jbe
imul
ss
imul
aad
jp
mov
std
sub
inc
jecxz
push
in
out
xor
adc
hlt
sub
push
stc
call
das
popa
in
push
push
call
repz
lock
shr
je
jo
pop
imull
inc
das
push
in
bound
pop
in
adc
imul
in
jo
mov
repz
dec
xchg
sub
inc
push
das
jle
xor
pop
adc
inc
shrl
insb
in
mov
and
imul
sub
add
push
fs
das
imul
push
inc
push
dec
hlt
mov
aas
dec
addr16
adc
jl
out
push
arpl
scas
out
das
push
dec
sub
movsl
test
dec
enter
out
push
popa
call
das
addr16
outsb
push
in
call
push
inc
cmc
das
in
mov
int
cld
lods
inc
loopne
in
in
insl
pop
addr16
inc
outsb
das
or
pusha
repz
enter
mov
pop
insb
sub
inc
sub
out
or
push
jmp
outsb
enter
stos
call
pop
clc
sub
inc
pusha
das
sub
fs
ljmp
stos
pusha
icebp
sub
sub
inc
dec
das
jl
inc
sub
inc
jmp
push
imul
in
inc
imul
call
das
call
pop
popa
sub
inc
out
push
pop
outsb
sub
call
das
imul
push
jle
xchg
inc
addr16
in
inc
push
insb
enter
out
icebp
mov
pop
jne
cmpsb
call
das
data16
push
es
das
in
in
push
pusha
cmc
stos
inc
test
jge
inc
loopne
and
push
ljmp
repnz
in
jbe
fs
stc
sub
inc
loope
add
gs
ret
call
das
and
push
cli
call
das
in
subb
call
jmp
pop
loope
inc
rorl
xor
stc
clc
popa
inc
jl
inc
in
pusha
push
add
call
rorb
sub
xor
pusha
das
stc
in
inc
push
jg
add
inc
ljmp
out
fildll
pop
mov
repnz
xor
cmc
push
aas
call
das
in
jecxz
ficomps
sub
inc
out
das
jle
jne
lock
push
jg
push
jecxz
std
das
mov
outsb
dec
ljmp
jb
lock
pop
mov
stc
call
das
in
push
push
jmp
out
das
lock
iret
call
pop
imulb
in
jle
dec
pop
bound
inc
jmp
push
dec
scas
sub
inc
outsb
das
jge
dec
push
gs
das
in
in
int
out
pop
lods
outsl
repz
call
das
dec
in
push
or
imul
in
in
push
mov
or
insb
ja
dec
das
stc
in
sub
jge
clc
pusha
inc
jmp
arpl
lret
push
call
imul
sub
sub
cmc
or
das
ljmp
sub
inc
push
push
sub
dec
call
das
jnp
leave
push
loope
mov
inc
imul
imul
inc
or
insb
xor
in
hlt
push
test
cld
mov
das
push
mov
push
daa
insl
repz
pop
testb
jp
push
popa
call
das
out
inc
push
out
call
in
jne
movsl
in
clc
push
gs
das
and
pop
insl
sub
pusha
repz
inc
movsb
das
imul
test
pop
fs
inc
and
data16
add
push
jecxz
outsb
enter
mov
sbbl
arpl
jl
inc
ljmp
and
loope
add
sub
inc
insb
das
sub
push
dec
inc
sub
inc
inc
das
loope
and
pop
add
inc
shrb
in
mov
sbbb
pusha
sub
jg
and
pop
dec
add
inc
fildll
in
in
mov
arpl
dec
repz
xor
ja
aas
pop
cli
sub
popa
imul
sub
push
outsb
enter
ds
pop
clc
sub
inc
loopne
mov
pop
call
pop
inc
jo
cmp
sbb
std
inc
fsubrl
in
mov
sub
inc
pop
das
insl
in
cmp
lock
sbb
hlt
lods
sub
inc
jnp
mov
pop
arpl
inc
imul
in
out
push
dec
cli
sub
inc
mov
push
callw
inc
pop
das
in
in
cmp
pop
sbb
in
sub
inc
cld
das
mov
pop
loop
js
pop
inc
jmp
push
imull
push
call
das
jl
xchg
push
in
push
imul
push
je
sub
inc
ljmp
xchg
in
in
jbe
push
push
call
dec
inc
push
das
jl
pop
sub
inc
mov
addr16
xchg
push
out
call
xor
in
clc
push
aam
loopne
inc
in
xchg
in
imul
clc
push
pusha
repz
das
jbe
adc
and
shrl
loope
mov
pop
xchg
sub
inc
push
mov
xor
scas
sub
inc
jnp
shr
std
push
xchg
call
das
push
in
jmp
xor
sub
call
das
jp
mov
std
pop
xchg
sub
pop
dec
push
push
insl
xchg
das
lock
pop
outsl
je
sub
inc
cld
das
nop
in
pusha
push
push
call
das
adc
icebp
psubsb
inc
sub
push
call
das
in
out
push
call
dec
repz
xor
clc
push
es
das
in
pushw
imul
sub
push
pusha
call
das
call
jg
arpl
out
fs
popa
shll
inc
cvtps2pi
call
das
jecxz
bound
pop
sub
push
inc
out
das
arpl
icebp
adc
dec
jne
inc
mov
and
jle
inc
loope
loopne
pushw
push
mov
loopne
pusha
pusha
hlt
scas
dec
inc
sub
inc
add
ljmp
inc
mov
lock
cmpsl
jle
outsl
repnz
push
in
out
jle
dec
xor
stc
movsl
cmp
loopne
shr
in
mov
addr16
add
push
dec
xor
add
push
arpl
scas
addr16
das
ljmp
jb
adc
inc
jbe
paddsb
cmp
loope
scas
in
gs
outsb
call
push
dec
dec
sub
mov
jg
imulb
jg
dec
imul
js
insb
push
nop
dec
repz
jbe
outsl
ja
repnz
jg
out
fs
iret
das
imul
arpl
test
outsl
call
das
out
in
pusha
push
scas
call
das
outsb
mov
sub
in
testb
cli
in
mov
pop
insb
sub
inc
or
push
stos
push
jo
imul
mov
inc
ja
sub
cli
push
ljmp
stos
int3
in
outsl
lock
scas
outsl
outsl
insl
je
call
addr16
dec
js
xor
pusha
mov
gs
push
icebp
lock
jo
jp
push
in
std
push
adc
out
inc
jmp
out
lods
scas
dec
xor
testl
das
out
punpckhbw
je
ja
dec
xor
jae
aas
je
jae
lock
jnp
shr
ljmp
pop
jecxz
nop
call
das
push
sub
sub
cli
inc
out
das
jle
iret
push
callw
add
push
repnz
jle
inc
dec
xor
jge
inc
loope
scas
in
pushw
imul
ja
jecxz
dec
push
imul
addr16
cs
out
xor
arpl
mov
dec
insl
jnp
add
adc
or
push
push
jae
push
push
ja
dec
ret
icebp
andl
xorl
scas
inc
out
test
jb
inc
push
in
call
pop
inc
pop
add
jmp
lock
out
pop
jo
mov
push
push
dec
or
out
in
mov
pop
or
xchg
pushf
std
sub
dec
push
arpl
les
add
jecxz
sbb
shr
mov
sahf
mov
xchg
lcall
and
mov
cld
fisubrs
cmpsl
lds
std
in
addr16
sub
sub
out
add
jne
ja
in
sti
or
dec
pop
movsb
pop
in
xchg
cmp
int3
mov
mov
jns
pushf
sub
dec
loop
outsl
out
xlat
mov
inc
outsl
sahf
cmc
inc
xor
cltd
inc
ret
test
scas
sub
out
cld
add
adc
sldt
in
test
bound
mov
rcrb
jmp
shl
adc
adc
ljmp
aaa
adc
and
sbb
fsubs
mov
jg
stc
and
cld
add
mov
jl
xor
in
mov
addr16
arpl
pop
jns
jae
xchg
inc
imul
in
jg
jnp
jae
popa
dec
lods
arpl
sub
adc
sub
shr
jnp
jecxz
dec
push
mov
jo
mov
dec
mov
push
push
ja
outsl
popa
scas
call
outsb
jne
popa
dec
and
cli
add
sub
dec
adc
outsb
test
addr16
push
jge
ja
popa
pop
lea
mov
call
das
arpl
jg
jge
jns
ja
insl
inc
jae
dec
fadds
push
inc
sub
or
mov
mov
dec
pop
push
in
dec
stos
mov
pop
pop
inc
bound
xlat
dec
xor
in
add
cmc
and
inc
ret
pop
fs
mov
xorl
and
test
push
dec
in
xlat
xor
cmp
out
dec
movb
stos
divb
ljmp
test
fs
subb
inc
idiv
push
cmp
inc
lods
cmp
push
mov
jecxz
dec
in
xchg
das
out
pop
dec
push
idiv
insl
into
addr16
ds
jmp
int
sub
dec
push
sub
stos
cmp
sub
push
in
les
out
stos
push
in
daa
in
add
mov
push
loope
pop
data16
sub
in
sub
data16
sub
out
push
icebp
push
test
jecxz
test
lds
pushaw
inc
inc
jp
sbb
adc
in
clc
jbe
adc
jmp
repz
lods
test
xor
and
fisubl
wbinvd
mov
mov
or
mov
sahf
icebp
jns
push
mov
outsl
add
inc
push
cs
out
aas
ret
cmp
jmp
ja
pop
mov
mov
xchg
leave
sub
push
jmp
mov
xchg
aam
repnz
or
out
add
mov
xchg
push
std
xchg
sbb
out
inc
sub
jl
pop
mov
mov
adc
js
test
xchg
mov
or
jb
hlt
mov
xor
and
xorl
or
pushf
dec
jns
pop
fidivs
ljmp
test
push
add
pop
leave
movsb
sub
lods
sub
arpl
add
pop
add
fnstsw
orl
addr16
jmp
ljmp
xchg
repnz
in
adc
mov
xchg
dec
fdivl
inc
dec
xchg
sbb
adc
pushw
test
call
and
xchg
sub
jmp
jge
je
pop
inc
adc
in
in
add
mov
mov
in
or
push
clc
ror
fsts
neg
in
call
mov
pop
sbb
mov
ret
xor
cmpsl
addb
jmp
lret
vrsqrtps
bound
es
dec
xchg
mov
xchg
xor
popa
movsl
and
mov
call
jle
push
lods
in
jg
cmp
hlt
mov
inc
std
lds
push
imul
jmp
inc
push
add
lret
gs
lahf
add
sbb
inc
test
shll
adc
xchg
sbb
mov
jecxz
ret
mov
xchg
sub
pusha
add
sbb
enter
imul
in
in
and
sbbl
notl
inc
test
pop
cs
pop
mov
xor
push
mov
repz
adc
popa
aas
addr16
call
and
fistps
and
adc
mov
sub
sti
xchg
pop
out
in
outsl
mov
mov
jb
add
push
lret
cmp
and
or
or
inc
add
sub
cmpsb
subb
ljmp
fsubr
mov
loope
xor
jg
mov
sub
cmp
inc
clc
adc
mov
mov
and
icebp
subb
jge
out
sbb
pop
jge
mov
in
rolb
or
sti
fcom
lods
addr16
or
in
pop
lea
mov
sub
sbb
sub
scas
fildll
dec
or
test
movsl
fstp
gs
movsb
insl
dec
popa
outsl
ja
testl
das
ja
jae
insl
clc
jo
pusha
jne
jo
fmul
arpl
cwtl
call
pop
push
dec
push
jae
loopne
push
rcll
dec
inc
imul
xlat
dec
pop
xor
or
daa
mov
dec
cltd
cmp
jge
ljmp
insl
push
imul
std
xor
jno
jne
push
out
inc
push
fsubl
jbe
addr16
leave
out
in
pushf
out
cmp
shl
jmp
scas
jecxz
dec
inc
ljmp
inc
jo
cmp
addr16
pop
and
out
mov
nop
and
cld
lods
xor
xorl
enter
sti
jmp
dec
pushf
lods
or
xchg
inc
loop
cwtl
int
cmp
push
fcoms
clc
lcall
adc
addb
outsl
xchg
adc
cmp
out
mov
mov
loopne
lods
push
add
insl
out
loope
mov
ret
nop
xchg
jge
shll
in
daa
xor
decb
mov
scas
into
lods
insb
test
pop
out
in
pop
xlat
scas
ret
lods
adc
cwtl
loopne
arpl
imull
fsubl
arpl
adc
cmc
pushf
cmpb
xor
push
sbb
out
scas
jmp
sub
inc
add
out
push
scas
jnp
call
cs
inc
jae
add
jecxz
and
das
call
std
out
shl
negb
cmpsl
xchg
push
xor
inc
dec
jns
push
popf
cmpsb
gs
inc
add
and
subb
out
cmpsl
inc
icebp
daa
xor
std
das
jns
mov
add
mov
cmp
addl
fs
inc
pop
dec
and
jno
movsl
roll
sub
fiadds
pop
cmp
arpl
jmp
ss
das
cmp
xor
fistpl
js
pop
cmpsl
paddusb
ss
cmp
loopne
sbb
ss
xchg
mov
add
ret
cmovae
das
inc
dec
repz
insl
aaa
int3
jecxz
ret
hlt
in
push
out
lock
sub
les
mov
ja
popf
inc
std
pop
or
xchg
test
adc
sub
dec
rcrb
js
push
scas
push
fisttpl
lahf
xor
adc
mov
adc
hlt
mov
inc
push
gs
xchg
inc
inc
cmp
jp
imul
movsl
push
stc
stos
mov
rorb
icebp
pop
subb
fnsetpm(287
sub
ds
mov
insb
add
dec
push
sub
jl
movsb
sub
mov
orl
sbb
loopne
cmp
xchg
sbb
test
xlat
fs
jg
stos
insb
cmp
mov
add
or
incb
jmp
ds
dec
jmp
insl
scas
cmpb
icebp
scas
das
ljmp
fidivl
inc
adc
and
out
imul
push
mov
insb
lock
es
ds
cs
scas
cmp
test
jne
jne
cld
jnp
or
pop
pop
imul
popf
push
or
in
xchg
int
inc
sub
jmp
sbbl
sub
adc
out
shrl
mov
pop
xchg
fld
sub
data16
cmp
inc
cmpsb
lods
pop
dec
test
scas
dec
mov
adc
iret
lret
nop
in
adc
adc
and
xchg
inc
in
pop
cmp
pop
into
cmp
into
inc
cmp
les
jg
aad
cmpsw
shrb
out
in
daa
cmpsl
mov
cmp
xchg
stos
xor
movsb
dec
cmp
mov
mov
andl
jbe
and
sub
sbb
sub
lret
mov
lret
orb
insb
out
outsl
mov
inc
xchg
out
or
sub
inc
push
add
outsb
jb
jg
out
stc
pop
and
in
out
ja
rcrl
adc
test
xchg
jecxz
pop
dec
dec
call
sbb
mov
pop
insl
das
les
and
add
ret
xchg
and
das
ja
and
and
sub
xchg
outsb
fsubr
push
and
ret
or
and
adc
stos
pop
xchg
mov
push
es
clc
scas
push
lret
cmp
dec
jnp
mov
inc
cld
out
or
pop
je
bnd
pop
or
push
ljmp
adc
out
sub
dec
insl
insl
into
and
xor
shlb
lock
jo
lods
das
ja
jae
sub
dec
in
mov
dec
or
dec
dec
movsl
dec
hlt
clc
mov
add
mov
js
jg
insl
sub
ja
push
push
clc
popa
loope
loopne
scas
dec
movsb
jge
imul
dec
lea
push
dec
mov
outsl
inc
push
stc
dec
mov
dec
in
push
addr16
pop
out
std
jnp
push
sub
add
push
loope
fbstp
pop
jnp
push
sub
out
jo
push
pop
inc
subl
in
pop
push
dec
imul
cmp
adc
outsb
enter
mov
mov
mov
out
mov
push
pop
call
lcall
push
not
pusha
lods
jp
xchg
subb
xor
nop
std
or
mov
int3
pop
call
das
stc
in
adc
imul
arpl
sbbb
je
jo
jo
pop
test
xor
jo
push
bound
adc
out
add
and
scas
dec
jmp
testb
scas
pop
mov
test
push
nop
in
lock
add
lea
mov
out
in
and
pop
mov
int3
dec
jae
arpl
jmp
out
in
mov
mov
outsl
sub
fisubl
mov
push
dec
paddsb
popa
push
mov
dec
imull
add
lods
push
mov
mov
push
ret
mov
push
mov
cmp
mov
mov
xor
popf
push
add
push
roll
jbe
xor
dec
es
aam
xchg
out
mov
push
aaa
roll
push
roll
mov
add
lcall
sbb
mov
mov
mov
sub
mov
xor
sub
fwait
lcall
sbb
ret
push
inc
pushf
fdivrl
pop
sub
es
mov
push
cmp
and
pop
pop
add
aad
es
dec
es
jmp
xchg
mov
mov
xchg
cmp
mov
mov
sbb
mov
aaa
mov
add
fidivrl
cmp
xor
xchg
stos
imul
add
cmp
sbb
movsb
push
mov
add
es
inc
es
sub
mov
daa
lods
js
outsl
int
adc
add
adc
movsl
ss
lods
inc
add
in
cli
test
scas
add
imulb
lea
call
pushf
mov
add
loope
es
inc
inc
jo
in
and
lahf
xor
in
and
in
es
std
test
push
inc
xchg
inc
jp
outsb
imul
push
scas
lea
test
dec
jp
push
out
out
insl
dec
arpl
addl
or
xchg
ret
addr16
pop
hlt
ret
repz
stos
iret
sub
in
call
jbe
adc
add
pop
jmp
inc
push
xor
jo
dec
add
inc
fs
xor
loopne
enter
push
mov
data16
jne
xor
dec
adc
das
mov
push
fs
outsl
lock
fs
sub
push
fsub
inc
dec
iret
push
cli
pop
inc
dec
jo
mov
pop
cmpsb
stos
inc
fimuls
out
sub
enter
stos
cmp
fisttpll
cmpsb
xor
xor
gs
scas
and
inc
loop
dec
mov
sbb
fs
mov
imul
idivl
outsb
sub
jg
dec
jo
sub
sub
mov
scas
scas
xchg
in
out
arpl
ja
jns
imul
sbb
lock
inc
mov
mov
jl
mov
push
out
lock
push
addr16
cmp
pop
int3
ret
ud1
xchg
push
insl
in
fnstsw
inc
jno
ljmp
adc
inc
arpl
lods
fstpt
fimuls
jge
dec
imul
xor
scas
sbb
cmp
test
sahf
cmp
popf
mov
sbb
cmp
leave
sbb
mov
popf
sub
out
int3
nop
cltd
adc
loop
xor
xor
rcrl
gs
lea
pusha
rcll
pusha
inc
hlt
mov
aas
sbb
popf
dec
push
adc
cmp
stc
imul
stc
jae,pt
adc
imul
sub
sbb
sbb
adc
out
cmpb
adc
stos
outsl
xchg
adc
mov
pop
lds
mov
std
clc
movsl
mov
repz
cmp
xorl
sbb
bound
sub
scas
mov
adc
daa
cli
mov
enter
lahf
inc
test
vsqrtss
inc
repnz
leave
fstl
sbb
adc
xor
xor
xchg
outsl
shrb
cmp
scas
push
leave
push
aaa
aaa
movsb
outsl
adc
cmp
popa
push
and
mov
mov
jnp
pop
pop
sbb
jb
sbb
cltd
and
imul
adc
xchg
scas
das
mov
sub
mov
xchg
nop
cmp
out
sbb
insb
cwtl
jb
xchg
stos
jae
jle
fdivrl
jp
jo
call
inc
sti
add
call
inc
mov
push
hlt
aad
cwtl
lcall
fcoml
sub
adc
dec
stos
cmp
out
jg
push
push
or
mov
xchg
vmovsd
push
and
jg
daa
cltd
clc
andb
test
out
arpl
fwait
mov
mov
in
push
pusha
xor
mov
icebp
mov
shll
xor
lods
aas
jae
sub
pop
push
sub
mov
mov
push
out
mov
imul
out
js
xchg
pop
cmp
lahf
xchg
in
gs
jae
movsb
mov
test
leave
push
push
data16
xor
xchg
push
pop
scas
add
ds
pop
or
scas
dec
mov
ss
rcr
xor
insb
test
sub
xlat
out
fmul
insb
inc
imul
adc
int3
xor
mov
insb
xchg
in
push
push
shlb
mov
int
int3
out
xchg
call
pop
sub
out
push
cmp
int3
mov
or
dec
push
dec
insl
addr16
push
mov
pusha
sub
out
ret
dec
dec
outsl
lock
sub
lods
das
sub
test
pop
sbb
xchg
insl
adc
call
das
fucomp
mov
int3
dec
stos
sub
inc
pop
das
pop
in
xchg
call
pop
mov
inc
fisubrl
push
sub
push
jecxz
pusha
pushf
inc
js
push
sub
push
ja
shrl
dec
imul
mov
pop
adc
into
sub
jmp
fwait
das
pop
in
jne
jb
outsl
or
lods
sub
inc
sahf
mov
ljmp
pusha
aad
out
ret
mov
inc
aas
repz
adc
push
scas
xchg
aaa
jb
adc
add
and
jecxz
pusha
and
fistps
xor
mov
fwait
adc
mov
inc
mov
test
or
addl
inc
outsb
cmp
imul
into
gs
push
jecxz
fisubs
sub
cmpsb
nop
pop
mov
iret
fisubl
sbb
dec
xchg
test
dec
out
test
outsb
insb
fldz
lock
mov
fbstp
jl
cli
jo
mov
push
fstpt
lock
xchg
sbb
xchg
sbb
es
jl
xlat
dec
int
push
cmp
cli
mov
and
je
out
and
lods
or
ret
test
sub
repz
adc
jge
mov
add
movsl
insl
cmp
and
jecxz
inc
out
stos
pop
iret
daa
enter
xor
mov
call
out
arpl
ret
jp
subl
fiadds
lret
push
inc
lods
in
movsb
mov
arpl
xchg
dec
or
and
inc
xchg
pop
negl
dec
arpl
ret
cmp
mov
ret
and
outsb
mov
and
out
aaa
rclb
sub
dec
cld
mov
stos
in
xchg
push
dec
push
and
hlt
sbb
and
inc
sub
lret
sub
sub
in
fs
repz
and
or
psrlq
movsl
or
test
add
scas
aas
test
xor
in
out
in
fcomip
adc
add
mov
pop
in
push
addr16
pop
add
sub
hlt
insl
notl
jmp
outsl
add
jbe
daa
cmp
shll
icebp
and
sti
movsl
xor
out
ret
fsubrl
sbb
jb
xchg
cmp
cmp
dec
cmp
out
pop
cltd
xor
out
or
in
sbb
in
pop
in
pop
sub
sub
dec
jb
add
mov
insb
ret
scas
loop
jge
push
movsb
push
push
jmp
into
mov
cmc
mul
call
sub
cmpsl
divl
in
pop
and
lods
mov
push
movsb
cmc
jbe
jnp
push
scas
mov
sub
push
sti
scas
das
imul
sub
or
cmp
inc
dec
fs
sbbl
xchg
xchg
lahf
mov
insb
sub
xchg
decb
scas
or
pop
dec
sbb
rcll
jne
ljmp
pop
jae
repnz
pop
scas
xor
push
xchg
push
xor
sub
add
inc
fstpl
nop
das
dec
inc
mov
mov
test
inc
push
sub
sbb
xor
xor
or
nop
or
test
push
popf
test
jnp
int3
mov
test
adc
movsl
jle
pushl
sub
loope
add
jae
repnz
xor
in
or
jmp
and
jo
pusha
mov
mov
jmp
lcall
mov
rolb
cmp
push
stos
push
or
push
daa
push
and
push
mov
push
fstl
push
sti
push
stc
push
mov
push
aam
xor
xor
stos
and
dec
mov
push
sub
inc
mov
popa
mov
popf
mov
mov
mov
xor
dec
fisttpll
int
mov
mov
movsl
popf
mov
popf
fistps
sti
popf
mov
popf
popf
ss
xor
repnz
push
adcb
mov
insb
addb
popf
cmpsb
popf
movsb
popf
arpl
lahf
popf
aas
cld
xchg
sbb
aaa
xchg
xor
sbb
adc
outsl
sbb
mov
mov
movsl
adc
adc
adc
adc
fcoml
sti
adc
xlat
adc
adc
push
adc
shlb
sub
hlt
dec
je
rep
jae
repnz
jb
icebp
dec
icebp
inc
icebp
gs
icebp
ret
icebp
inc
icebp
pop
icebp
jle
fcomi
cli
icebp
pop
icebp
pop
icebp
ja
icebp
aam
repz
push
icebp
push
dec
or
iret
or
jmp
dec
mov
enter
cmpsb
dec
or
enter
inc
sub
pop
sbbb
ja
adc
push
jo
outsl
pop
in
push
mov
push
pop
push
fsts
push
xor
ljmp
bound
loope
mov
ja
mov
cmpsl
push
imul
push
in
stos
mov
push
xchg
gs
jecxz
inc
icebp
sarl
mov
push
mov
test
sbb
mov
sbbb
jne
in
dec
push
push
ficoms
push
jp
mov
pop
ljmp
pop
or
jmp
cmc
mov
outsl
or
cmp
imul
test
pop
mov
xor
push
cmpsl
sub
mov
xlat
imul
ror
mov
mov
in
dec
sub
adc
jecxz
xchg
es
and
pushf
and
xchg
and
xchg
cmp
cmp
jmp
adc
push
adc
nop
sub
hlt
int
gs
dec
jb
icebp
test
and
ret
icebp
add
mov
icebp
lcall
aas
stos
mov
lock
mov
test
inc
popf
in
test
xchg
pop
xchg
mov
xchg
cltd
xchg
cmp
daa
mov
push
sub
mov
push
or
in
and
xchg
mov
pop
xor
adc
adc
adc
lea
push
addr16
or
icebp
inc
icebp
jecxz
xor
ds
jle
sbb
mov
ss
adc
mov
stos
dec
push
sub
leave
test
movsl
mov
sub
jge
sbb
mov
mov
mov
das
pop
lods
lods
cmp
pop
or
push
pop
insl
sbb
fiadds
adcb
xchg
cli
xchg
sbb
mov
push
cmp
or
pop
xchg
push
xchg
push
push
lock
pop
xchg
out
pop
jae
repnz
or
bound
loope
in
nop
jmp
and
lods
leave
loop
fmuls
test
outsl
mov
loop,pn
mov
clc
fidivs
cli
dec
std
cltd
scas
into
imul
fs
inc
aas
std
push
mov
add
shr
pop
fs
outsb
mov
pop
inc
sbb
adc
xor
popa
fst
int
mov
in
outsl
mov
in
or
mov
push
xor
mov
pop
jae
cmp
dec
leave
and
bound
xchg
in
imul
insl
mov
inc
cmpb
notb
xchg
hlt
xchg
je
repz
jae
bnd
gs
std
mov
imul
adc
mov
add
shl
data16
nop
iret
sub
mov
cwtl
jmp
inc
mov
pop
fsts
push
icebp
xor
hlt
aaa
dec
pusha
arpl
ja
mov
xchg
adc
mov
sub
enter
sbbb
push
rclb
and
jbe
jmp
sub
sub
ret
jmp
cmpsl
cmpsb
inc
lahf
add
inc
pop
rcrb
arpl
jle
pop
std
scas
imul
mov
jae
bnd
repnz
jb
icebp
pop
std
lock
dec
push
enter
out
sub
push
loop
mov
and
subb
mov
sbbl
sbb
cmp
jmp
and
jl
jl
scas
mov
sub
mov
add
and
je
dec
and
loop
mov
and
in
into
sub
cmp
jle
sbb
jmp
cltd
push
push
jne
leave
and
std
and
sbb
jns
je
mov
pop
cmp
movsl
imul
or
mov
add
cwtl
cmp
push
sub
std
add
add
stos
loopne
jl
and
push
arpl
lahf
push
pop
push
xchg
push
and
push
scas
gs
sbb
mov
std
dec
fisttpll
int
mov
pop
scas
push
and
and
mov
dec
cmpsl
jge
xchg
xchg
stc
cld
sub
jge
push
and
frstor
int
stc
test
mov
enter
mov
lods
int
cld
in
sbb
das
cmp
icebp
movq
or
dec
out
mov
aas
xor
outsl
cmp
or
lret
leave
jle
pop
int3
adc
mov
test
push
aam
cli
lds
cmpl
stc
cmp
decb
pop
in
push
lret
dec
mov
repnz
xchg
icebp
push
mov
test
aaa
adc
push
pop
inc
sbb
adc
mov
mov
scas
sbb
pop
pushf
je
nop
loop
insl
xor
loop
mov
pop
out
cld
pusha
jge
js
test
out
popa
int
mov
clc
push
sbb
shlb
sti
in
mov
mov
sub
mov
xchg
lock
xchg
jp
and
loop
mov
test
cmp
push
mov
mov
scas
jmp
pop
dec
pop
inc
hlt
stos
insb
cli
sub
and
cld
or
mov
pop
pop
push
aam
dec
jmp
mov
es
mov
aaa
mov
adc
push
jge
xor
outsl
jnp
rcll
mov
in
test
jae
xor
int3
xchg
or
dec
sub
js
jnp
cmc
and
imul
inc
fnstsw
add
cmp
xor
and
sub
fdivrs
arpl
and
loop
sub
jo
aas
pop
pushf
test
and
bound
pop
xor
popf
jnp
mov
out
loop
mov
aas
and
sub
jb
icebp
sub
or
dec
andb
xchg
adcl
int3
and
fdivr
daa
lea
popf
icebp
xorb
sub
pop
out
mov
mov
mov
mov
lock
cmpsl
jmp
sbb
leave
and
cmp
and
jbe
outsb
mov
imul
bound
push
out
sbb
call
push
aaa
push
xor
or
sbb
std
loop
mov
mov
das
push
cld
and
test
cld
shrl
jne
pop
pop
jge
jb
arpl
pop
jp
push
sahf
in
pop
jae
mov
jp
push
cmc
scas
pop
xorps
push
pop
push
fwait
push
pop
push
xlat
push
out
jmp
mov
jbe
div
dec
push
sub
stos
dec
xchg
stos
aaa
scas
or
mov
std
xor
inc
movsb
adc
dec
out
xor
repz
jae
bnd
jp
and
bound
and
loope
sub
push
cli
jns
js
loopne
pop
mov
jae
xor
test
loopne
jg
mov
sub
pop
jmp
cld
xor
jl
mov
imul
and
mov
mov
fnstsw
cmp
mov
ljmp
adc
out
lods
jbe
bound
daa
insl
aas
movsb
xor
mov
stos
cmpsl
and
mov
mov
cmp
sbb
push
xor
dec
out
sbb
mov
imul
int
aas
loop
cmp
inc
orl
push
sbb
cmp
xor
in
bswap
in
test
pop
cmp
lahf
data16
xchg
hlt
xchg
ja
mov
sub
movsb
lods
hlt
pop
addl
aas
sbb
mov
out
xchg
hlt
jae
xor
or
jno
jmp
pop
repz
ds
sbb
mov
shrl
mov
mov
mov
repnz
mov
mov
and
bound
jbe
cmp
cmp
pop
daa
or
pushf
push
jbe
cmc
push
jne
mov
iret
dec
jmp
fucomip
js
jl
jg
loop
mov
xor
scas
push
mov
inc
dec
inc
fsubl
sub
clc
aam
adc
jecxz
jae
dec
dec
imul
push
cli
cmpsl
jge
fidivs
mov
aas
xchg
sbb
out
or
lret
cmp
out
in
scas
jp
mov
in
ret
in
or
ffree
int
fidivrs
pushf
cli
pop
arpl
push
inc
push
notl
in
mov
imul
sti
imul
outsb
sub
fdivl
popa
test
data16
or
mov
imul
mov
mov
mov
jnp
lcall
aaa
in
mov
ljmp
scas
mov
data16
nop
push
add
xchg
bound
jl
adc
mov
sub
xor
sub
push
xor
xchg
in
mov
adc
mov
and
mov
cmpsl
pop
mov
test
jecxz
mov
push
and
hlt
icebp
mov
mov
stc
popf
mov
pop
adc
hlt
insb
lds
jae
notl
in
push
mov
dec
loop
gs
cmp
mov
jmp
in
popf
lcall
popf
push
popf
xor
xchg
popf
repnz
xor
mov
das
mov
lret
mov
xchg
call
add
push
add
aas
in
sbb
popf
sbb
add
jne
aam
xchg
adc
dec
dec
cmc
in
in
and
ret
out
push
jg
addr16
icebp
mov
std
daa
in
scas
pop
dec
js
enter
in
gs
arpl
mov
pop
push
lcall
push
push
jmp
mov
outsl
push
mov
push
pop
out
push
cs
insl
push
lods
push
les
push
push
jb
dec
and
loop
mov
xchg
add
pop
sub
sub
push
das
push
je
or
adc
push
testb
sbb
inc
aas
cmp
call
movsl
dec
jo
xchg
pop
mov
mov
loopne
loop
insl
into
dec
sub
aaa
aaa
in
les
out
xor
mov
ja
cmp
test
push
cmp
js
xor
dec
imul
cmp
jmp
je
insl
insl
call
inc
sub
or
pop
subb
clc
adc
cmp
scas
mov
jns
xor
ud2
lret
sbb
inc
std
es
pop
and
mov
pop
mov
mov
scas
xor
dec
addr16
ret
icebp
pop
pop
sbb
and
fs
cli
sub
in
pop
movsl
jmp
pop
jecxz
loope
jmp
fwait
mov
push
imul
lods
push
popf
mov
ljmp
jmp
insl
or
xchg
cli
mov
jb
jo
jne
mov
popf
ja
das
leave
dec
mov
sti
pushf
stc
cwtl
notl
push
out
test
leave
push
out
test
xor
icebp
aad
icebp
in
stc
inc
repz
jae
repnz
pop
mov
sub
jb
out
sub
jmp
jmp
cld
jecxz
sub
mov
lret
dec
gs
mov
in
jge
stos
hlt
out
in
jecxz
loope
stc
in
sti
mov
addr16
leave
or
cmp
pop
mov
stos
jge
in
jecxz
pusha
decl
insl
xor
cli
call
lods
sbb
jne
scas
xchg
pop
loopne
insb
fs
mov
xorb
mov
pop
xor
data16
and
add
cmpsl
orb
insl
inc
das
push
adc
jb
jmp
push
icebp
imul
icebp
xor
icebp
sub
inc
sub
jg
sahf
jb
stc
and
icebp
and
loop
push
mov
imul
add
shlb
dec
shl
je
repz
repnz
push
loope
pop
push
data16
sub
scas
ljmp
dec
in
xorb
pop
ja
imul
mov
jle
jge
dec
cmp
js
jns
push
cli
out
dec
push
dec
imul
xchg
repnz
dec
sub
sub
leave
jne
xchg
scas
jmp
mov
cmp
bound
xor
inc
jge
lcall
aas
out
mov
in
mov
and
xor
icebp
ficoms
jnp
lahf
sub
cmp
xchg
sbb
dec
scas
incb
jmp
lret
ja
mov
mov
scas
sub
and
add
movsb
mov
testb
jmp
pop
lods
inc
push
cmp
jno
repnz
fstl
mov
pop
loop
jns
push
adc
pusha
js
imul
loop
mov
cmp
sbb
cmp
ss
mov
pop
sub
ljmp
std
or
mov
mov
test
mov
notb
out
mov
and
sti
jg
loop
jmp
in
stos
cmc
sahf
xchg
jns
int
ljmp
ja
loope
lds
ror
sarb
lods
and
int3
arpl
imul
test
cmp
jmp
xor
push
xchg
pop
int3
mov
xchg
push
das
mov
stos
mov
call
push
mov
cmpsb
push
jecxz
scas
in
cmpsl
je
cli
and
pop
jnp
push
icebp
adc
dec
iret
dec
jnp
fs
inc
scas
fsubr
clc
dec
mov
imul
sub
test
rcr
inc
sbb
mov
in
ret
mov
mov
js
adc
cwtl
mov
sub
push
ljmp
das
xor
lods
int
int
adcb
movsl
mov
push
cld
stc
dec
jg
int3
lret
sub
lea
hlt
sub
ret
pop
cmc
and
daa
cmp
jns
xor
mov
dec
ss
movsl
dec
roll
outsl
push
sub
or
add
cmp
fdivrs
and
push
loope
jns
dec
test
pop
inc
ja
dec
and
dec
std
xor
push
cmc
or
inc
adc
arpl
rorl
aaa
cmp
and
loop
cmpsl
sbb
and
sub
pop
cmp
jbe
sub
lds
loop
and
stc
mov
jp
fmul
cmpsl
jnp
pop
je
repz
dec
dec
fwait
mov
xlat
jbe
or
mov
sub
mov
lcall
mov
xor
push
jnp
cld
loope
cs
jge
leave
jnp
and
sahf
xor
sub
in
and
cmp
clc
movsl
jle
mov
loop
push
in
xchg
ret
out
push
loope
das
into
jae
clc
popf
nop
call
imull
add
std
and
add
data16
setns
in
mov
mov
dec
int
jl
in
fwait
idivl
jns
nop
imul
mov
inc
in
jne
jl
out
adc
or
ljmp
in
lret
call
jne
aaa
xchg
js
pop
divl
jo
loopne
or
xor
test
sub
pop
popa
jge
or
inc
and
dec
ljmp
jae
repnz
je
xrelease
mov
jg
dec
mov
ja
out
imul
je
dec
dec
sahf
stos
pop
es
pushl
int3
cmp
lret
lock
imul
and
or
xor
push
cmp
ja
ja
leave
and
loop
in
insl
mov
fnstsw
jge
mov
and
cmp
xchg
jg
push
das
mov
jge
jae
aad
rorl
mov
daa
xchg
cld
hlt
outsl
icebp
cmp
bound
stos
mov
jecxz
or
scas
test
or
nop
mov
outsb
inc
hlt
in
inc
push
push
fs
mov
scas
push
jmp
mov
subb
int3
roll
mov
imul
movsb
int3
sub
loopne
fdivs
ss
mov
sub
and
data16
fs
inc
xor
lock
outsl
push
xor
dec
cmpsb
aas
and
jo
icebp
push
or
pop
mov
das
lods
cmp
call
in
int3
jnp
xorb
xor
sub
es
scas
or
inc
mov
xor
mov
sbb
adc
dec
mov
ja
push
in
push
stos
push
and
push
jo
push
shlb
and
sti
stos
or
fnstsw
mov
leave
jmp
ds
incb
xor
jmp
loop
jo
mov
mov
sti
out
adc
ljmp
lret
pop
cmpb
lods
mov
pop
lds
aas
and
ret
jle
cmp
dec
or
insb
das
scas
jne
out
push
push
mov
and
jmp
sarb
leave
mov
test
shlb
scas
jmp
je
or
dec
decl
aaa
xor
mov
bound
ljmp
divb
int3
or
sti
sub
jl
ljmp
cmp
repnz
cmpsl
lret
mov
sub
inc
mov
push
stos
out
and
clc
loope
mov
mov
sub
int3
out
subb
test
cmp
cvtpi2ps
jp
cmp
or
in
das
loop
je
xor
enter
insl
leave
dec
aas
sub
cmpsl
lcall
jecxz
imul
std
das
in
mulb
dec
jmp
mov
push
out
rcll
or
addr16
cmp
pushf
lods
pop
mov
icebp
imul
in
push
pop
push
sahf
push
fstl
push
int3
lcall
lcall
jb
icebp
jge
mov
pop
rorb
dec
and
aaa
push
mov
loope
stos
xchg
scas
cld
mov
pop
cmpsb
sbb
je
aam
cltd
xor
in
mov
js
bound
loope
sarl
xor
testl
mov
add
jnp
xor
xchg
icebp
outsl
lret
ljmp
mov
pop
ja
sub
adc
mov
pop
aas
call
test
test
insb
xor
jl
xor
push
or
in
mov
popa
lods
leave
sarl
stos
test
shl
aaa
loopne
arpl
push
dec
decb
in
imul
lods
in
nop
dec
cs
mov
jns
nop
sub
pop
mov
das
lret
dec
mov
jp
sahf
add
das
lret
out
lods
mov
xor
cmc
int3
shll
and
sub
cmp
cmc
clc
clflush
xchg
mov
mov
mov
cmp
push
rolb
pop
sbb
xchg
push
push
jmp
bound
fiadds
test
pop
mov
in
pusha
pop
imul
pop
jnp
xchg
je
adc
xchg
ljmp
push
inc
add
jno
jmp
pop
pop
push
jnp
push
outsb
notl
mov
jmp
js
lods
nop
aaa
addr16
mov
cli
mov
mulb
or
sbb
jg
push
mov
dec
outsb
add
sub
mov
in
das
mov
push
push
cwtl
imul
jae
popf
inc
sub
dec
dec
mov
mov
ds
je
lret
or
mov
mov
lods
pop
nop
insl
or
mov
pop
stos
push
adcl
sub
adc
popf
int3
aaa
jl,pt
pop
sbb
jns
int3
mov
xlat
cmp
push
stos
or
outsb
aad
mov
mov
and
aad
sub
push
dec
or
addl
inc
das
jmp
hlt
pop
clc
mov
dec
sub
mov
bound
test
aaa
rolb
mov
and
imul
jg
and
loop
xchg
adc
or
aas
bound
sbb
jl
inc
insl
and
int
pop
js
icebp
jae
cmpsl
mov
push
popa
and
andb
shlb
stc
icebp
push
mov
push
cmp
mov
negl
shr
test
xor
jge
xor
cld
cmp
jl
in
cs
pop
rorb
pop
mov
mov
cmp
test
lock
jne
repz
sahf
hlt
sbb
ljmp
fidivrs
repz
add
mov
push
mov
iret
sub
jae
outsl
hlt
int
mov
lret
sub
cmp
push
push
mov
jae
dec
pop
test
and
imul
jge
movsl
sahf
loopne
and
pop
stc
in
fstpl
lcall
mov
inc
or
js
aam
mov
sub
inc
and
imul
or
jmp
aaa
es
push
out
in
jnp
loopne
sbb
push
mov
pop
jns
in
ljmp
shlb
push
mov
in
movsl
inc
sbb
jg
sbb
movsl
jns
mov
sbb
sbb
xor
js
pop
in
into
jnp
test
jecxz
clc
pop
stos
mov
cmp
sub
jns
out
sub
cli
out
xchg
out
les
jns
inc
sbb
jns
xor
int
int
jp
adc
out
repnz
sub
jbe
cmpsl
jmp
out
cmpsl
mov
xchg
loop
loope
mov
dec
nop
lods
cld
xchg
sti
xchg
cli
xchg
stc
xchg
clc
aam
jae
cmc
icebp
hlt
cmp
push
bnd
lock
hlt
out
cmp
in
and
loope
mov
es
icebp
in
jecxz
aas
loope
lock
mov
loopne
sti
aaa
stc
mov
scas
divl
cmc
and
scas
jmp
out
pusha
sub
cmpsb
jecxz
in
sbb
aaa
ljmp
out
lock
jl
int3
loop
cmc
loopne
fs
nop
mov
and
testl
icebp
mov
mov
jmp
ljmp
mov
jecxz
jno
loope
loopne
sub
stc
std
xor
cmpsb
scas
cli
popf
stc
popf
clc
popf
idivl
divb
hlt
icebp
repz
repnz
stc
lock
out
in
jmp
ljmp
out
test
or
sub
jmpw
push
jno
addr16
cld
push
stos
cli
inc
ss
or
test
dec
mov
cmp
pop
out
push
in
cmc
leave
jmp
ljmp
mov
inc
mul
jmp
loope
cmp
std
mov
nop
out
cli
hlt
stc
jne
neg
inc
out
and
aas
repz
bnd
lock
sbb
jmp
xor
aas
out
das
in
mov
loopne
ds
andb
sti
aam
repz
clc
mov
mov
lret
cmc
loopne
repz
icebp
icebp
lock
out
inc
repnz
sub
mov
pop
sti
jmp
push
in
in
in
xor
xchg
loope
loopne
lcall
push
xor
push
sti
fs
stc
sarb
cmc
repnz
pslld
pusha
lock
out
mov
jne
in
jae
jnp
ficoms
jl
mov
mov
subb
hlt
push
movsl
int3
std
xor
cmp
mov
notl
repz
lock
mov
mov
in
jl
int3
ljmp
popf
shrb
in
aaa
loop
cli
mov
mov
mov
int3
sti
push
cmpsl
stc
push
mov
push
jge
push
mov
int3
bnd
lock
out
and
mulb
mov
jne
jmp
hlt
out
jp
sahf
loopne
loop
jecxz
loopne
mov
cld
xchg
sti
sbb
in
stos
clc
cmp
out
mulb
or
data16
pop
and
in
push
mov
insb
lods
mov
mov
mov
mov
stos
in
sahf
jecxz
jle
sbb
pop
mov
push
mov
jl
push
imull
jmp
lock
jb
lret
icebp
push
push
mov
and
jmp
shr
in
movsb
lret
jecxz
jmp
push
loopne
push
mov
bound
cld
push
sti
mov
sbb
pop
clc
notb
jmp
repnz
popa
lock
pop
out
push
in
sub
push
pop
ljmp
bound
jecxz
cmp
call
push
std
push
cld
xor
bound
stc
and
mull
cmp
icebp
repnz
icebp
lcall
repz
jae
fdivrp
movsl
xor
icebp
out
out
in
sub
hlt
loop
out
loopne
jecxz
mov
mov
mov
int3
stc
and
push
cmc
insb
mov
repz
mov
mov
fsubl
jnp
ljmp
jge
in
shl
jecxz
test
loope
loopne
ljmp
std
aas
cld
fisubrl
adc
clc
push
loop
bound
repnz
popa
inc
sti
mov
aaa
xor
imul
push
outsl
lds
stos
push
scas
data16
aaa
cs
in
arpl
lods
bound
insl
lds
stos
pusha
in
sahf
jg
lods
jns
movsl
js
gs
and
cmp
and
jb
mov
mov
outsb
and
int3
mov
pop
and
loope
cmp
and
int3
mov
pop
and
jmp
mov
jle
mov
int3
mov
pop
jns,pt
std
js
mov
adc
push
adc
int3
jo
jnp
pop
cmp
cli
jns
adc
dec
push
ljmp
push
dec
jg
jo
aaa
outsl
ds
mov
insl
jbe
insb
dec
ss
push
mov
inc
jne
ljmp
mov
gs
fs
xor
cld
repz
scas
mov
lods
jge
pop
jl
xor
icebp
jp
mov
pop
jno
in
ja
cmp
push
xchg
fsubl
jo
addl
iret
ljmp
xorb
int
scas
fs
loope
mov
loopne
adc
pop
scas
and
stos
add
inc
pushf
xor
adc
shlb
cltd
cli
subl
or
cmp
push
mov
mov
jb
sub
ja
loop
or
jl
pusha
bound
jl
xchg
jb
call
cmp
mov
or
mov
pusha
mov
jnp
push
pop
icebp
pop
icebp
sbb
jnp
jns
cmp
xchg
cltd
pop
gs
and
xor
stos
add
sbb
or
and
cmc
mov
mov
mov
mov
int3
cltd
ja
mov
adc
jae
das
sahf
push
sub
or
addr16
es
test
push
inc
and
xor
xor
lock
cltd
push
outsb
mov
bound
xor
xor
out
sub
dec
lret
or
loope
movsl
daa
jae
test
inc
aas
outsl
mov
xor
fiaddl
cli
mov
xor
xchg
nop
mov
hlt
xor
dec
xchg
or
imul
xchg
test
inc
movsl
mov
popf
fistpll
sti
jae
movsl
mov
inc
and
xor
push
mov
sub
sub
xchg
xchg
inc
sbb
icebp
jecxz
cmp
mov
jno
lcall
scas
dec
xchg
jae
sub
dec
cltd
push
ss
and
aad
mov
mov
fwait
sub
mov
je
lret
xlat
ja
aas
into
arpl
hlt
jno
sbb
push
jb
icebp
push
jae
fldenv
mov
sarb
ja
mov
sbb
sub
sub
xor
arpl
dec
cmpsb
lahf
mov
mov
sbb
xchg
adc
inc
test
xchg
scas
popa
dec
cmpsl
or
leave
mov
aas
out
mov
inc
jae
sahf
push
in
mov
cmpsl
pop
xor
aaa
dec
test
js
cmp
adc
mov
mov
int
nop
mov
push
sub
ret
sti
orb
aaa
outsl
ret
and
insl
or
jg
and
mov
hlt
add
and
cmp
cmpsb
shl
jle
xor
addr16
inc
loopne
out
xchg
cmp
iret
cwtl
and
pop
fwait
js
jae
call
fidivs
mov
or
xchg
pop
jb
and
das
inc
sbb
nop
in
mov
xor
mov
call
mov
stos
cmpsl
data16
fstl
ficoms
push
pushf
mov
cmp
pop
adc
adc
dec
jmp
mov
roll
or
addr16
inc
jge
pop
jae
cmp
lds
std
jae
shrb
loopne
aad
push
cmp
pop
sbb
shr
pop
push
inc
stos
nop
mov
sub
push
push
push
adc
int3
sbbl
lods
inc
mov
mov
lock
or
scas
jmp
xchg
mov
mov
int3
pop
enter
xchg
shl
sub
es
jg
push
aas
jle
decb
jge
mov
int3
popa
jb
sub
shl
jg
add
imul
jne
xor
fstpl
xor
inc
sub
jnp
or
fstpl
ja
xchg
and
jne
aas
stos
pop
stos
pop
push
sub
je
repz
cmp
aaa
in
mov
dec
mov
sub
jbe
daa
push
jb
ret
je
repz
loopw,pn
mov
mov
dec
or
jae
inc
cltd
dec
repnz
add
gs
and
jb
leave
and
mov
out
push
ret
cmp
in
mov
xchg
in
fistl
sub
xchg
xchg
adc
fsubrp
jl
sbb
or
call
jmp
movsb
in
push
jnp
mov
push
push
jae
mov
mov
xor
pop
outsl
stos
sub
mov
rcll
xchg
xchg
push
in
add
movsl
js
inc
lock
in
mov
imul
in
dec
pop
stc
loop
sub
test
mov
mov
mov
aas
movsl
and
lds
in
push
and
in
int
int
aas
and
xchg
sbb
jmp
aas
inc
je
fldl
push
add
jge
in
ja,pn
push
xorb
jg
inc
mov
add
cmp
pushf
imul
jge
lcall
adc
test
push
sahf
push
pop
xor
aas
mov
cmp
push
mov
mov
mov
bound
jns
insb
mov
ss
das
mov
rcll
adc
add
stos
sbb
aaa
aam
cmp
pusha
inc
rorb
int3
pop
xchg
lea
mov
daa
or
loope
lods
cmp
xor
js
adc
cmpsl
mov
mov
xor
imul
popf
jne
or
nop
daa
mov
or
pushf
jb
icebp
cli
xor
arpl
lods
inc
popf
pop
mov
lock
cmc
cs
dec
or
jbe
pop
bound
cmp
add
and
ret
ja
rorb
fidivl
enter
jge
cmp
lcall
ja
and
roll
jecxz
lods
arpl
mov
test
xchg
test
loopne
mov
jp
mov
shrb
and
sahf
in
cmpsb
out
adc
push
mulb
xchg
loopne
sub
fsubrs
or
hlt
popa
sub
mov
mov
in
adc
mov
xor
adc
mov
mov
jb
adc
arpl
jbe
ljmp
lods
loop
xchg
cmp
sbb
data16
jmp
fs
jge
fwait
repnz
jb
icebp
fdiv
xchg
icebp
xor
push
push
mov
xchg
push
adc
mov
paddusw
and
addr16
jmp
sub
xor
push
jnp
loop
cmp
push
out
sub
cmp
adc
sub
mov
scas
mov
test
mov
mov
in
std
jnp
cmpsl
push
dec
scas
cld
cmpsl
aaa
mov
mov
sahf
sub
sub
or
xor
fsub
jmp
or
inc
std
push
insb
das
dec
mov
mov
cmpsb
nop
ds
in
movsl
mov
imul
and
jmp
mov
mov
cld
jno
lods
sub
imul
mov
jno
imul
sub
jae
sbb
ja
jg
inc
mov
cmpsl
popf
inc
in
push
or
mov
cld
and
ss
sub
cs
scas
push
lods
mov
call
mov
mov
imul
icebp
loop
testb
or
mov
addr16
cli
mov
xchg
xor
hlt
dec
lock
pop
xor
jl
mov
idivb
mov
loop
movl
mov
scas
std
mov
xor
push
jge
cld
xor
popf
push
clc
cli
push
pop
and
sub
adc
adc
or
jmp
fsts
add
mov
outsl
dec
ljmp
popa
fnsave
sub
or
jmp
sarl
rolb
outsb
push
push
or
in
jg
mov
push
mov
mov
xor
mov
pop
lret
jnp
or
loop
jp
and
jae
repnz
aaa
das
push
cmpsl
les
or
ffree
mov
cmpsb
icebp
std
jae
push
out
pop
and
sbbl
gs
inc
je
push
adc
and
jbe
loop
lds
push
push
push
clc
sbb
jmp
lock
fwait
mov
mov
movsb
lds
or
sub
loop
in
sahf
fidivs
and
adc
js
imul
addr16
fcoml
loopne
iret
or
movsl
scas
ljmp
fcomps
xchg
stos
cmp
into
or
lret
ljmp
mov
mov
icebp
loopne
push
push
cld
adc
xchg
cmp
inc
mov
or
imul
jae
icebp
movsb
icebp
add
dec
sub
push
adcl
jle
lods
dec
pushf
insb
data16
sbb
xchg
mov
call
cmp
mov
data16
mov
aas
stos
jb
jp
icebp
sub
mov
push
mov
inc
icebp
jne
jle
sarl
inc
sub
lret
and
and
loope
mov
das
nop
cmp
loop
mov
mov
add
popa
fprem
in
pushf
mov
cmp
sbb
push
int3
shl
pusha
dec
push
leave
mov
sbb
sbb
xor
dec
das
int3
cmpsb
sub
hlt
and
ds
jge
mov
icebp
pop
mov
scas
jo
or
mov
sub
xchg
inc
hlt
fidivs
jae
inc
je
insb
mov
mov
mov
mov
inc
ja
dec
lahf
in
jns
aas
repz
jb
lahf
adcl
cld
popf
cmp
jnp
mov
loopne
mov
fidivs
cmp
jb
icebp
push
icebp
adc
dec
cli
jnp
cmp
xor
adc
dec
repz
pop
repnz
jb
icebp
fidivrl
stos
pop
stos
inc
sbb
mov
sub
jge
mov
jle
ja
and
sub
jb
inc
and
hlt
inc
or
jmp
push
outsl
jmp
fidivrl
movsb
xor
adc
xor
stos
dec
jo
loop
sbb
outsl
mov
push
push
xor
in
dec
std
insb
lods
cmp
push
nop
mov
dec
int3
dec
jge
dec
pop
testb
jne
stc
lock
nop
add
stc
int
sub
loope
aad
sbb
mov
stos
scas
dec
add
jns
mov
mov
scas
pop
lods
cmp
test
in
jp
and
xor
ja
xchg
xchg
sbb
data16
in
mov
aam
in
xor
mov
es
jne
stc
std
insb
cmc
pop
repz
lret
cmp
xor
push
aad
jae
daa
mov
cld
repz
repz
out
mov
cltd
inc
mov
in
push
punpckldq
sub
jl
jp
movsb
imul
int3
not
mov
xor
push
in
sti
in
loope
aas
std
xchg
stc
xchg
xchg
sbb
in
cmp
mov
sub
inc
in
test
cmp
stc
mov
push
cli
out
mov
lret
in
cmp
js
inc
repz
lret
dec
ja
push
mov
cmc
mov
out
je
lret
jmp
std
push
out
jle
stc
and
loop
das
mov
icebp
out
dec
or
int3
jg
mov
jg
pop
ljmp
je
dec
int3
addr16
xchg
loope
jmp
mov
xchg
xchg
mov
add
jbe
test
mov
cmpsb
je
push
cmpsl
es
xchg
cmp
lcall
incl
rclb
sub
pop
stos
das
xchg
add
test
arpl
mov
jge
pushf
push
or
inc
dec
lahf
jo
jnp
jns
cwtl
jae
mov
xor
mov
jmp
ds
ret
push
dec
mov
fistl
daa
xor
xchg
jle
out
jo
mov
push
cmp
je
add
inc
lds
jo
push
inc
push
aam
jnp
mov
test
fcmovb
mov
loop
push
xlat
adc
add
cmc
in
fwait
add
adc
loop
or
gs
cltd
cmp
ret
inc
push
ds
jge
fwait
in
lods
mov
cmpb
test
out
ljmp
jae
ficoms
lock
pop
pop
jmp
sbb
sbb
xor
stc
and
test
adc
pop
pop
mov
leave
mov
addb
or
push
jecxz
ds
lock
mov
aas
insl
loope
mov
xor
mov
dec
mov
test
cmp
stos
std
xchg
scas
out
dec
pop
in
imul
jbe
jb
cltd
pop
sub
loopne
jns
mov
dec
mov
int3
hlt
loope
enter
fwait
jb
push
in
cmp
cmc
insl
cmc
rcrb
push
mov
shlb
inc
xchg
nop
loop
call
bnd
pop
mov
jb
ljmp
sbb
and
repz
mov
stc
aas
mov
hlt
dec
test
sbb
cmp
out
or
sbb
pop
push
xor
pop
push
push
int
cli
sub
or
xchg
clc
mov
or
jmp
dec
bound
lock
jl
int3
lock
por
jmp
rclb
jmp
xor
jge
push
aas
stos
dec
add
ret
jmp
aad
lods
cmpsl
mov
mov
popa
jo,pn
sbb
xor
hlt
mov
into
mov
jne
dec
call
loope
cmp
xor
std
mov
jne
es
mov
cli
sub
dec
jmp
mov
test
das
in
ret
lods
int
fsub
std
push
nop
imul
loope
push
push
mov
mov
jecxz
sub
shrb
js
pushf
ljmp
loope
loopne
fisubs
scas
movsl
or
rol
mov
out
sub
or
test
sbb
push
inc
push
cmpl
mov
test
hlt
inc
je
cmp
mov
cmp
bound
es
andb
aad
ja
fwait
cmc
bound
leave
jl
sub
sbb
pop
push
ss
sub
mov
adc
dec
fstl
jecxz
out
lret
jp
es
xchg
rclb
repz
mov
mov
test
mov
nop
repz
lcall
sahf
pop
jbe
insl
std
pop
jecxz
push
stos
dec
sub
repnz
sub
negb
aaa
xchg
fdivr
add
stos
cmp
clc
test
mov
scas
ljmp
cmpsl
out
push
cmpsl
popl
dec
ljmp
dec
push
test
xchg
in
cmp
jns
ficoms
jmp
in
int3
div
sub
mov
repnz
cmp
ficoms
cld
mov
std
fwait
negl
jae
jp
repz
jae
dec
or
inc
imul
addr16
mov
lock
lods
jne
push
repz
push
js
cmpsb
les
sub
aas
movb
xlat
xchg
cmp
addb
jmp
dec
push
mov
loopne
dec
jp
loop
cmp
sub
in
jb
dec
xchg
mov
movsl
pop
arpl
sub
push
and
sub
stos
push
jge
mov
repz
in
imul
sub
pop
hlt
xor
jns
imul
loope
scas
xchg
clc
imul
or
dec
sub
test
movsb
loopne
jb
mov
jmp
and
push
das
mov
cmp
ds
sarl
out
out
int
into
xchg
xor
bound
mov
jns
push
fisubs
and
test
ss
push
out
push
je
dec
push
inc
test
rcrl
inc
sub
push
mov
cli
jae
sbb
in
shll
loopne
ljmp
repz
dec
call
mov
ffree
das
lds
add
jecxz
sub
int3
mov
cld
fdivrs
nop
imul
add
bound
aam
mov
arpl
std
popa
gs
dec
jg,pt
stc
in
jne
mov
lret
int3
mov
pop
sub
aaa
dec
push
jne
addr16
data16
aas
bound
out
out
xchg
xor
and
pop
stos
fsubl
pop
test
mov
aaa
push
push
sub
pop
ljmp
aas
daa
xchg
scas
jge
mov
scas
inc
push
cmp
lods
pop
or
cmc
popa
clc
repnz
gs
cs
pop
addr16
push
push
push
sub
cmp
and
xchg
mov
jp
pop
stos
lret
jmp
cmp
push
lret
adc
jnp
iret
mov
adc
mov
push
push
call
lret
jbe
mov
jmp
sahf
lock
sbb
push
loope
jmp
or
in
sahf
outsb
call
insb
test
aas
shll
sbb
clc
data16
add
cld
cld
stos
les
pusha
idivl
loopne
dec
aas
jmp
pushw
xor
dec
jae
out
xor
stos
dec
out
mov
dec
sub
push
mov
pop
pusha
clc
or
repz
mov
sti
mov
stos
jbe
inc
jecxz
loop
mov
cmp
clc
test
nop
push
ss
cmp
pushf
lock
jb
jae
dec
in
mov
dec
mov
push
daa
mov
divb
sbb
out
cmp
loop
jne
sti
fisubs
lds
xchg
clc
clc
scas
jl
or
pop
pushf
cwtl
cwtl
xlat
push
xor
and
pop
pushf
repnz
dec
sbb
jnp
cmp
int3
xchg
push
push
or
dec
cmpsl
sub
into
or
and
xor
jmp
jae
push
sbb
cmp
dec
in
test
cmp
inc
int3
shl
std
addr16
imul
xchg
stc
icebp
mov
ljmp
pop
jge
jecxz
ljmp
mov
or
cmp
in
sbb
jne
mov
pop
push
sbb
sub
inc
loope
jmp
fldenv
loop
out
mov
loop
cmpsl
sbb
faddl
stos
pusha
pop
ja
into
test
test
es
das
sbb
in
packuswb
cmpsb
imul
xor
out
lea
cltd
inc
jne
push
jmp
jp
test
mov
push
mov
int
int
mov
ljmp
mov
mov
ficoms
jl
lods
pop
and
jmp
cmpsl
nop
bound
loopne
ja
in
jmp
ficomps
scas
cwtl
je
std
lods
xchg
pop
dec
loopne
cmp
fdivl
lds
aas
mov
les
pushf
dec
imul
popf
bound
cvtps2pd
xchg
popa
es
mov
add
pop
loope
test
mov
sahf
push
cmp
mov
addr16
sbb
sub
data16
jbe
push
sbb
das
sub
in
jl
and
loopne
inc
jp
test
mov
aas
insl
cmp
in
xor
mov
push
mov
sub
xchg
adc
jbe
and
loop
xchg
sbb
adc
cmp
mov
or
loope
das
jge,pn
enter
push
popf
inc
mov
test
jmp
lahf
int3
xchg
loope
js
mov
mov
aam
mov
push
stos
jl
daa
shr
repnz
decl
in
add
rcrl
push
das
ret
sub
aad
scas
jmp
and
popf
and
and
jo
loope
lret
lock
idiv
movsl
loopne
imul
mov
cmp
stc
cmp
in
lret
pop
testl
pop
or
jo,pn
and
sbb
push
adc
push
ljmp
cmp
sbb
inc
cmc
ja
jnp
and
imul
mov
cmp
mov
sbb
adc
add
sub
ja
rolb
jbe
inc
test
pop
sub
stos
push
cmc
mov
cmpsl
cmp
jae
inc
jle
jecxz
adc
rcr
out
lcall
stos
fidivs
outsb
loop
mov
adc
cs
or
int3
lret
gs
leave
sub
cmpsl
sbbb
xchg
inc
aaa
cld
cmpsl
push
loopne
aas
xor
call
mov
je
jmp
frstor
nopl
xor
nop
xor
cmp
push
mov
jns
in
in
bound
mov
cld
scas
pop
jge
or
cmp
insb
test
pop
loop
verw
jns
mov
jecxz
inc
imul
jl
lock
punpckhdq
push
cmp
fcomi
sub
lds
pop
jns
mov
sahf
shlb
jae
add
pop
dec
icebp
xor
or
addr16
xor
and
inc
in
setl
jns
mov
mov
jae
dec
pop
xchg
out
jmp
daa
scas
mov
sub
ljmp
in
repz
sar
sbb
or
neg
ss
mov
add
mov
mov
leave
sahf
arpl
xor
out
popa
aaa
scas
pusha
push
outsl
jg
das
jle
out
lds
stos
jl
sahf
jnp
jp,pn
in
jns
lods
js
insl
ja
sub
jne
sub
or
jbe
out
jmp
mov
je
aas
jae
jb
mov
jo
outsl
pop
std
outsb
in
insl
cmp
insb
cmp
push
mov
aas
cmp
pop
sti
data16
cmp
cmp
daa
data16
cld
push
imull
das
mov
mov
cld
ja
aaa
aaa
gs
punpckldq
popa
cld
cmc
pusha
aaa
mov
inc
jne
ljmp
mov
jnp
pop
jp
xor
cld
repz
mov
inc
jae
ljmp
mov
jae
pop
jb
xor
adc
xor
xchg
jbe
loop
in
lcall
add
mov
and
cwtl
daa
loop
es
adcl
rcrl
repnz
mov
pop
cmp
push
hlt
add
dec
pop
enter
cmc
cmpsb
mov
dec
cwtl
push
inc
rcl
dec
or
insb
pushf
popf
push
inc
test
es
ret
popf
lock
mov
xchg
push
and
add
and
inc
fiaddl
pushf
cltd
lahf
mov
mov
push
mov
mov
mov
pop
xor
and
jo
movsb
subb
pusha
arpl
xchg
dec
jo
test
std
cmp
mov
clc
push
jmp
jno
sub
jne
stos
jns
push
outsb
jge
push
jo
hlt
packuswb
dec
imul
addr16
dec
lock
jo
dec
dec
testb
dec
ja
pop
imul
jmp
jo
push
loop
in
pop
jb
outsl
outsb
testl
gs
pusha
movsb
fs
loopne
in
push
ja
js
sti
xlat
dec
jl
sbb
inc
pusha
dec
testl
or
dec
push
push
scas
jo
insb
dec
popa
data16
jle
cli
push
jl
inc
jecxz
add
and
mov
icebp
push
in
dec
movsb
out
in
pop
call
cli
pop
jle
dec
je
jae
dec
dec
loopne
pop
dec
je
movsb
jmp
jns
jbe
in
stc
dec
call
addr16
cmc
movsb
xor
dec
add
dec
outsb
jp
sub
rcrl
cld
dec
bound
jmp
push
jae
mov
dec
and
sti
stc
dec
lock
cmp
icebp
testl
insb
lods
out
inc
push
xchg
out
dec
imul
or
pop
testb
int3
out
out
jb
lock
jns
gs
jle
outsl
dec
insb
aas
outsl
jo
jg
push
stc
jns
stc
les
js
pusha
testb
jp
push
in
lods
jle
dec
jo
sub
notb
jp
out
enter
push
jecxz
decb
push
jns
mov
inc
incl
push
hlt
dec
xchg
in
dec
icebp
lock
addr16
jp
pop
jne
fsts
hlt
pusha
testl
sub
movsb
jns
jbe
movsb
addr16
cld
pop
movsb
incl
push
movsb
sti
dec
je
out
jns
testl
sub
mov
data16
pop
ja
pop
dec
jne
punpckldq
pop
je
outsb
outsl
inc
jmp
sub
arpl
ja
jecxz
outsl
ljmp
outsl
movsb
in
inc
in
call
sti
push
hlt
testl
clc
inc
std
xlat
dec
jecxz
sbb
jmp
sbbb
dec
mov
je
call
loopne
jae
repz
inc
repz
push
jge
inc
test
outsb
push
push
gs
out
sti
popa
testl
jae
jbe
cmc
jg
pop
insl
inc
ljmp
jle
or
push
jbe
dec
outsl
cmc
pop
push
cld
pop
dec
fs
cmc
pop
inc
insl
pop
jp
rorl
jg
inc
movsb
ja
jg
dec
jbe
or
inc
hlt
or
inc
jbe
dec
pop
jnp
pop
push
outsb
sub
out
jo
pop
loop
mov
jnp
in
pop
inc
push
lods
js
call
icebp
jl
arpl
inc
outsb
ljmp
out
insl
jnp
fs
or
jmp
repnz
dec
jge
dec
jg
push
arpl
jae
jnp
push
call
movsb
jae
push
movsb
jl
jmp
lds
sub
loopne
bnd
pop
imul
jle
inc
stc
dec
clc
pop
dec
repnz
popa
pop
dec
arpl
std
inc
push
jns
mov
push
fs
insb
lods
testl
out
jbe
dec
sub
mov
insl
inc
jnp
daa
in
je
inc
imul
sti
jnp
dec
ljmp
jnp
dec
lock
shrb
jne
stc
pop
insb
inc
jbe
dec
repz
loope
dec
hlt
pop
outsb
pop
loopne
mov
push
inc
int3
jmp
testb
lods
outsl
imul
inc
call
jo
mov
jo
jle
clc
movb
cmp
pushf
mov
pushl
lea
jb
clc
jmp
sub
les
shll
mov
mov
test
aad
std
jbe
loope
xchg
pop
jmp
and
es
mov
xor
shlb
and
push
and
cmp
dec
aas
cmp
lahf
xor
cmp
dec
aas
cmpb
xchg
mov
add
mov
mov
add
lea
mov
adc
jle
mov
pop
inc
inc
test
sub
pop
mov
pop
sbb
lock
les
popa
shll
scas
int3
scas
sar
in
test
cmp
or
mov
sub
pop
shl
jne
int3
insb
push
mov
mov
aad
imulb
lret
sub
mov
sub
in
loope
fiaddl
push
ret
rcrb
add
jmp
mov
scas
in
mov
int3
popf
gs
sahf
dec
push
jg
idiv
pop
sub
movsb
cmp
mov
sbb
ljmp
xor
shlb
psubd
int3
xchg
les
cmp
fadd
addr16
xor
js
adc
xchg
lods
loopne
or
cmp
cmc
ret
pop
or
pusha
lahf
pop
imul
jno
sbb
sbb
add
test
lods
fstpl
sbb
lret
test
mov
frstor
sbb
pusha
repnz
xor
subb
mov
aaa
frstor
push
push
mov
outsb
sbb
jl
popa
push
lea
push
jmp
ja
cmp
or
ss
out
aam
cwtl
js
add
les
and
xchg
or
insl
xchg
addl
cli
fwait
icebp
pusha
addr16
das
in
xlat
pcmpeqb
sarl
or
nop
adc
add
movsb
cmpl
jl
dec
cmp
push
lahf
sub
add
mov
xchg
popf
mov
lock
and
imul
fimuls
or
mov
add
push
sets
ror
bts
movl
bt
mov
push
push
mov
clc
cmp
call
call
dec
push
test
or
iret
mov
arpl
in
or
push
hlt
inc
sub
flds
xchg
mov
inc
dec
test
pop
jnp
outsl
xchg
ret
cmp
int
mov
pop
cwtl
and
maxps
cld
mov
aam
xor
jae
test
pop
cmp
bound
inc
push
out
jo
mov
jae
lods
fnstcw
je
shrl
jae
aad
xor
sub
sar
mov
clc
shl
shr
mov
movb
call
xor
fwait
jp
sbb
gs
mov
pop
out
push
sahf
aam
in
dec
pop
pop
cmpsl
sub
sub
push
xor
mov
inc
inc
inc
push
adc
arpl
cli
aam
jnp
xor
pop
stos
and
sbb
inc
mull
ficompl
cld
sbb
stos
std
dec
pop
fistl
mov
add
jmp
hlt
outsl
pop
in
and
rcrb
mov
mov
jp
xchg
mov
cmp
std
out
aam
dec
jp
pop
xchg
xlat
fimull
aam
or
into
xor
hlt
adc
pop
mov
xchg
mov
scas
fnstsw
lods
or
xor
cltd
aas
sub
xchg
sub
push
cmpsb
push
stos
xor
je
movsl
and
imul
pop
lea
jge
xlat
mov
and
iret
lcall
leave
scas
pop
mov
jmp
call
mov
or
lods
adc
push
stc
dec
adc
aas
mov
jb
jmp
movsb
xchg
ret
or
test
mov
mov
mov
imul
shrl
xor
ds
add
hlt
cmp
mov
lahf
es
xor
dec
lret
ss
jns
dec
xor
and
in
imulb
mov
inc
mov
loop
cli
imul
mov
test
std
mov
out
int
test
cmp
dec
push
addr16
mov
add
out
outsl
lret
das
out
je
addr16
subl
xor
orb
jmp
subb
ja
mov
out
adc
and
cld
nop
imul
cwtl
scas
mov
mov
mov
add
sub
in
into
fisttpll
cld
mov
xor
es
inc
xor
mov
xorl
mov
sub
sbb
cmp
cmp
test
imul
lret
cli
mov
pop
mov
xor
fcoms
faddl
sbb
or
outsl
mov
dec
jnp
mov
mov
dec
push
idiv
push
pop
sub
test
jae
pop
push
jmp
jae
aam
in
cli
arpl
inc
cmpl
nop
push
cmp
rorb
mov
add
push
rol
mov
fs
out
mov
mov
mov
mov
pop
pushl
pushf
pushl
popl
mov
pushl
ret
jmp
xlat
adc
sbb
pop
aas
notl
push
xchg
xchg
xchg
pusha
lahf
xchg
jb
sub
pop
fnstenv
rcll
lods
int3
out
inc
lret
push
jbe
xchg
xchg
push
dec
add
dec
sbb
mov
ret
addb
iret
inc
inc
jmp
mov
push
sub
xchg
xor
jno
bound
add
adc
movl
jns
idivl
pop
cmpsl
mov
push
mov
mov
or
and
in
lock
add
ss
pusha
mov
jbe
not
mov
rcl
call
lea
je
seta
pushf
pop
jmp
addb
imul
adc
dec
xlat
fxam
pop
cld
sbb
int3
sbb
adcl
jno
rcrb
fnstsw
xor
jl
inc
ret
gs
stos
test
jge
inc
cmp
cld
or
mov
sbb
pusha
mov
sarl
fcmovbe
je
loope
fildll
test
sti
in
xlat
cmpsb
hlt
sub
lea
inc
xor
dec
pop
cli
jecxz
xor
add
jae
shlb
movsl
call
int3
adc
jecxz
push
call
orb
fidivrl
cmpsb
int3
icebp
pshufw
inc
mov
cltd
nop
xchg
dec
fadd
push
loopne
dec
insl
pusha
popf
imul
pop
mov
outsb
jo
aas
sbb
sti
lods
xchg
push
movsb
out
pop
aam
push
dec
and
pop
fsubrl
mov
jle
cmovg
adc
pushf
loope
loopne
and
xchg
sub
hlt
test
mov
std
rclb
xor
ret
in
dec
enter
leave
xchg
cmp
adc
insl
push
mov
mull
lods
in
xor
outsb
sub
push
cwtl
mov
lea
jne
jmp
repnz
call
mov
les
leave
cs
xor
push
jne
js
jg
or
mov
arpl
push
rorl
cwtl
arpl
fsubrs
jbe
js
xchg
dec
and
xchg
inc
clc
shll
add
or
scas
or
enter
imul
imul
mov
sub
mov
cmp
jb
push
test
cmp
push
hlt
fiaddl
subb
fldl2e
int3
popa
or
sbb
fcom
or
aad
add
scas
shl
pushf
jg
mov
fdivrs
stc
loope
or
es
adc
iret
mov
push
and
mov
out
mov
adc
sub
out
je
jb
pop
lahf
mov
movsl
dec
sub
rcrl
mov
iret
xchg
leave
jne
mov
scas
dec
pop
and
pop
cmpsb
nop
ja
les
mov
mov
and
xor
lea
jne
push
pusha
mov
jmp
ror
pushl
push
sub
push
call
testb
aam
les
dec
outsb
int
adc
jp
std
mov
mov
lret
insb
jns
stos
dec
xchg
adc
or
pusha
or
pop
or
mov
add
mov
xor
adc
nop
test
std
rcrb
sbb
add
ss
jne
sahf
push
dec
adc
xor
push
frstor
in
push
or
loop
inc
fucomp
adc
sbb
loope
mov
rorl
fldcw
lret
push
xor
in
lret
cmp
push
iret
loopne
mov
mov
lock
jl
or
popf
subl
sub
push
jle
loope
or
and
add
add
pop
sub
add
add
add
add
pop
and
add
fbld
add
add
jnp
and
add
add
ja
add
add
add
add
add
add
add
add
js
add
add
add
test
add
add
add
and
add
add
cwtl
sub
jo
xor
paddusw
add
add
add
pushl
test
jmp
inc
shl
shl
mov
bt
pusha
push
pushf
cmpb
pushl
lea
jne
aam
daa
cmp
sar
sub
cwtl
mov
shl
bt
sar
clc
add
pushf
sar
mov
pushf
cmp
clc
test
mov
lea
je
pusha
bt
cmp
sub
stc
pushf
cmp
pushl
lea
ja
push
lea
jmp
inc
inc
cli
rorb
les
das
xchg
mov
jp
ret
stos
leave
neg
lods
cmc
add
daa
jae
xchg
pop
lds
pop
mov
adc
je
push
aas
mov
cs
scas
cltd
cs
lds
jmp
lea
std
sub
mov
jl
mov
mov
and
repnz
xor
insl
adc
pop
mov
shl
mov
jl
inc
data16
dec
jo
add
dec
mov
add
inc
outsl
and
out
fadds
push
bswap
mov
not
mov
rcl
pop
add
movzbw
rcr
shr
ror
lea
movzbl
pushf
mov
shrd
btc
movzbl
add
movsbw
mov
call
ljmp
fstpt
or
mov
adc
dec
icebp
std
fisttps
lret
sahf
paddsw
adc
jp
inc
mov
lods
in
scas
mov
mov
or
pop
adc
es
add
sbbl
sbb
add
or
mull
cwtl
les
mov
call
mov
jns
addr16
xor
push
negb
andl
inc
ljmp
lea
je
pushf
cmp
pushf
pushl
pushl
ret
lea
jne
setge
lahf
bswap
movb
jmp
pushf
pusha
mov
movl
pushl
pushf
lea
jmp
repnz
pushl
call
seta
lods
movw
call
push
call
jmp
out
pop
jge
test
xchg
adc
sub
enter
xchg
sub
pop
lods
cwtl
fld
les
mov
add
sarl
jecxz
fmull
stos
pop
inc
mov
mov
fs
dec
fstpl
pop
lds
jl
pushw
out
xor
std
mov
xchg
mov
sub
add
or
fs
hlt
jns
xchg
xor
inc
pshufw
push
hlt
lcall
pusha
bound
fstpt
mov
ret
stos
pop
rorl
les
adc
add
sub
cmp
jae
xor
dec
cli
test
addl
add
jp
bound
cmp
aam
mov
insb
out
push
ljmp
out
pop
mov
add
mov
out
lcall
hlt
lret
pop
movl
mov
gs
loop
push
or
pop
hlt
xchg
ret
mov
jp
inc
lods
adc
mov
fldl
imul
cmp
cmp
or
clc
sub
push
ja
cmp
jle
ret
jb
jnp
imul
stos
ja
cwtl
movsb
xchg
pop
dec
lcall
negb
xchg
and
adc
pop
xor
test
clc
sub
cmpsl
nop
cld
call
cmp
stc
push
sub
and
push
fists
movsb
aam
repz
les
pop
or
cmpb
nop
pop
jae
sub
cmp
dec
popf
sti
push
ds
pop
fmull
xor
lods
pop
cmp
jnp
xchg
cwtl
faddl
shlb
icebp
xchg
sbb
rorb
sub
xchg
mov
cltd
sahf
fwait
mov
mov
pop
jo
jne
mov
inc
in
inc
ret
fstpt
or
pop
xchg
in
lds
mov
fidivrs
addb
ss
xchg
and
dec
xchg
sbb
sub
jo
xchg
cmp
and
jns
push
pop
pusha
xchg
fldenv
iret
pop
cmp
mov
mov
ret
clc
fildl
jne
inc
mov
add
push
inc
mov
or
cltd
sub
sub
jb
js
jns
jp
leave
repnz
xchg
mov
out
cltd
adc
pop
daa
mov
cli
icebp
sbb
push
popa
in
inc
jbe
pop
adc
outsl
dec
in
adc
jo
sub
fnsave
out
dec
push
call
inc
sarb
jecxz
sbb
jae
mov
or
repz
xchg
dec
push
scas
test
mov
stos
repz
jne
into
gs
aad
pop
adc
mov
xchg
out
fcompl
insb
mov
ret
cmp
popf
push
sub
pop
popf
fiadds
divb
or
add
or
add
xor
inc
insl
push
cwtl
push
fidivs
xorl
loope
mov
outsb
dec
xor
pop
mov
dec
jne
adc
outsb
pop
and
les
sub
lea
in
pusha
mov
xchg
sub
and
int3
lods
xchg
xor
xchg
add
mov
pop
les
pop
sti
and
repz
push
lcall
fcoms
or
adc
sub
jp,pn
mov
sub
iret
adc
pop
mov
cmp
or
mov
out
aaa
or
ss
mov
cltd
xchg
mov
lds
sarb
rolb
jmp
pop
pop
lods
inc
aad
pop
bound
leave
lods
js
and
das
ja
sahf
mov
cmp
adc
sbb
test
imul
sbb
mov
mov
dec
movb
int
in
cld
xchg
dec
push
jg
fs
and
xchg
loop
push
les
imul
movsb
movsb
xchg
outsl
xchg
cld
mov
jecxz
jae
aas
sbb
loope
decl
inc
sub
and
mov
bts
mov
neg
not
test
cmc
sub
movzbw
rol
push
clc
movsbw
cwtl
btr
push
push
cwtl
mov
cmc
or
sub
xor
mov
jmp
pushf
movl
jmp
jmp
mov
pushf
pushf
pushl
ret
lods
lods
data16
les
arpl
mov
mov
mov
in
push
xchg
mov
jge
xchg
pusha
leave
aad
inc
in
xor
std
and
sbb
aaa
mov
dec
jbe
mov
mov
loopne
mov
and
xor
inc
call
jnp
outsl
adc
push
dec
pop
xor
mov
or
dec
pop
lcall
in
test
rclb
scas
js
arpl
fcmovu
dec
inc
ficoms
int3
xchg
pusha
xor
jge
or
int
fcmovnb
and
sub
push
pop
or
mov
gs
xchg
and
jne
cmpl
cmpsl
mov
push
gs
enter
xchg
jbe
mov
fwait
jb
je
rcrb
sbb
jno
add
cmpb
into
mov
xchg
jge
push
jecxz
push
addr16
dec
cs
cli
xchg
aam
scas
or
mov
mov
or
iret
jo
mov
pusha
test
mov
aas
loop
xor
sbb
pushf
cmpsb
call
sbb
inc
dec
or
mov
mov
cmp
jnp
andl
xchg
pop
jbe
mov
ja
fnstenv
daa
sarb
or
inc
add
cmpsl
test
inc
lea
mov
bound
rol
or
insb
jp
mov
inc
mov
ud0
popf
int
sbb
jb
in
push
add
aam
or
xchg
test
idiv
shlb
mov
mov
cmp
sbb
or
sbb
and
and
dec
mov
ror
or
sbb
aam
sbb
sbb
sahf
xor
bound
shr
dec
pusha
mov
das
pslld
inc
out
aad
js
test
mov
sbb
xor
test
pop
sahf
pop
ret
roll
xchg
jb
pusha
int3
xor
add
dec
jns
inc
lods
adc
sbb
inc
lods
push
mov
or
rcrb
cmpsb
mov
dec
bt
stc
cmp
call
call
ret
leave
or
jns
adc
std
mov
movb
out
fsubrp
stos
jmp
inc
inc
stos
mov
adc
fcomip
jo
sbb
fcompl
xchg
enter
aad
xor
inc
and
xchg
addl
enter
gs
repz
cmp
stc
cs
out
mov
push
movl
push
pushf
lea
jmp
dec
or
leave
or
or
jle
push
lods
hlt
xor
xorl
mov
in
add
mov
mov
xor
loop
jb
popf
ja
into
neg
movsb
dec
lret
insl
mov
mov
inc
sub
mov
mov
test
mov
sbb
fldenv
push
fldt
mov
jle
xchg
lret
pop
and
pop
mov
in
shl
loope
out
xchg
mov
pop
popf
pop
xchg
call
push
dec
pop
or
or
jns
mov
lods
or
lea
cltd
mov
pop
push
fadds
adc
inc
adc
inc
xchg
add
rcrb
and
jg
cs
inc
out
in
mov
fisttpl
sbb
jecxz
xor
mov
adcl
or
pop
int
xchg
add
pop
daa
cmc
cld
mov
cmp
mov
cmc
pop
leave
xor
iret
cmp
sub
jnp
cmp
cwtl
mov
les
insl
aad
sbb
popf
inc
mov
pop
cltd
adc
stc
loop
pop
insl
and
cmpb
fwait
sbb
jb
mov
or
jbe
adc
jecxz
bound
dec
fadds
add
insb
jnp
rcrb
in
sub
inc
or
mov
push
and
out
das
pop
jecxz
mov
xchg
aad
shl
cs
les
enter
sub
insl
adc
push
neg
jns
inc
fs
jb
shrl
mov
pop
inc
sarb
add
pop
shll
adc
fs
xlat
mov
mov
movq
mov
mov
aam
bound
dec
in
inc
clc
sub
fdivr
jb
mov
or
adc
inc
in
dec
lret
push
clc
sbbl
enter
or
push
scas
adc
test
sub
push
ret
xchg
push
fbstp
xor
js
inc
movsb
ret
popl
ljmp
or
cmp
or
pop
int
xchg
pop
jp
push
cmc
and
out
pop
add
jne
shrl
sub
testl
sub
movl
movb
mov
pusha
jmp
mov
pushf
movb
pusha
pushf
pushl
ret
sub
daa
or
in
jb
ja
daa
mov
xchg
cmp
mov
movsb
movsl
jmp
ljmp
add
inc
es
jo
in
xchg
push
mov
mov
inc
mov
cmp
lods
pushf
movsb
std
shll
popa
mov
call
lods
aam
add
insl
sub
or
jp
into
or
and
jmp
out
jle
cmpb
std
rorb
xchg
pusha
push
push
jmp
das
adc
lret
jno
stc
cmp
jno
inc
test
jnp
adc
shlb
es
lods
mov
push
xor
fsubs
out
fisubl
pmuludq
push
fs
test
out
jp
sub
add
dec
movsl
dec
jnp
adc
shll
loop
bound
mov
push
in
mov
lds
mov
lds
ja
lds
stc
and
sub
dec
sahf
mov
push
nop
movzbl
movsbw
ror
btr
push
rol
ja
and
mov
sar
pushf
sbb
push
mov
not
xchg
not
cmp
movzbl
xor
push
inc
not
movsbw
sub
push
xadd
bswap
neg
push
shl
mov
movsbl
add
movsbw
shld
mov
movzbw
mov
call
lea
je
cmc
bt
cmp
pushf
jmp
nop
lcall
mov
xchg
mov
clc
pop
ret
pop
cmp
loope
or
inc
xorl
bound
xchg
jns
scas
imul
pop
jo
imul
sbb
push
and
add
sub
or
les
mov
push
inc
cmpsb
sysenter
pop
inc
sub
mov
das
scas
add
fiadds
mov
hlt
pushf
push
lea
jmp
sub
jmp
je
push
movl
call
insl
xor
cmp
cli
mov
int
nop
mov
rolb
clc
lods
cmp
sbb
movsb
outsl
and
pop
les
leave
mov
jge
loop,pt
enter
cmc
push
lcall
leave
shll
jns
add
hlt
mov
dec
test
int
adc
pop
push
scas
jno
scas
inc
lahf
mov
jns
imul
sbb
pop
xchg
lock
pop
lret
cmp
fs
mov
ja
hlt
sub
mov
mov
pushf
add
ucomiss
jle
shlb
sbbb
xchg
ljmp
test
xlat
jae
inc
inc
dec
clc
ljmp
jb
adc
lahf
shll
mov
ss
fnstenv
sbb
sbb
inc
xor
jmp
clc
pushf
inc
push
jae
sub
dec
mov
push
imul
push
inc
pusha
not
jmp
jae
shl
ror
xchg
cmp
mov
movzbw
mov
movsbw
sar
mov
test
jmp
and
les
les
xor
ja
jl
add
les
or
jge
lahf
mov
sti
movsl
loop
mov
sarl
dec
loop
stos
outsl
jle
rorb
jno
dec
mov
sub
dec
cmc
mov
imul
nop
add
ja
out
and
jno
mov
or
lea
cmp
add
in
dec
loope
fs
sbb
pop
out
jns
sbb
into
jbe
adc
pop
jle
and
jo
mov
shlb
sub
dec
mov
ret
or
inc
hlt
sarb
ds
cmpsl
dec
jmp
xor
out
push
orl
mov
push
sub
lahf
pop
sbbl
adc
mov
cmp
addl
and
fdivs
leave
shrl
cmp
mov
inc
lret
pop
daa
aaa
push
pop
aam
subb
adc
mov
movsl
icebp
cmc
aas
cmp
int
and
jnp
ljmp
mov
inc
andnps
loope
inc
mov
rorl
push
or
test
imul
hlt
ds
adc
pushl
push
lea
jne
aad
bsf
xor
movsbw
xor
bt
lea
mov
pusha
rol
add
bt
mov
cmp
bt
pusha
test
movb
movl
jmp
repz
call
push
pusha
lea
jae
cmp
shr
mov
neg
push
mov
bsr
or
sar
test
mov
jmp
lea
je
pusha
clc
mov
add
pushf
cmp
movb
lea
jb
cmc
bt
cmp
jmp
sbb
fadd
or
and
jp
mov
stos
sar
mov
lret
mov
in
sbb
inc
lds
fwait
aas
lods
xchg
scas
lock
rcrb
daa
clc
loop
mov
aad
dec
outsb
mov
pop
scas
mov
adc
out
xchg
addr16
mov
lds
push
jbe
subl
in
xchg
mov
sub
push
xchg
out
rorl
loope
jmp
mov
jnp
shll
mov
dec
test
cmp
test
pop
push
out
pop
and
mov
cmp
mov
daa
and
jge
call
aas
sti
dec
xor
divl
mov
ljmp
mov
dec
xchg
xor
mov
in
inc
fldt
stos
out
mov
and
outsb
push
ja
enter
and
data16
cmp
cmp
or
iret
mov
and
test
pop
sbb
sbb
xor
pop
sub
push
ja
push
pop
adc
sub
aad
pop
mov
sub
xor
ljmp
add
stc
clc
clc
sub
call
xor
das
rorb
in
fwait
std
popa
inc
arpl
xor
xor
pop
pop
int3
sbb
jne
fisttpl
in
mov
dec
mov
adc
or
inc
test
push
cmp
xor
imul
fbstp
cli
jp
adc
adc
push
mov
jle
mov
push
fcoml
jb
xchg
mov
hlt
mov
xchg
jno
xor
cmc
fdivrs
insl
mov
and
mov
cs
adc
add
sub
outsb
lock
cmp
adc
loopne
stos
jb
pop
adc
cmc
push
and
push
mov
adc
imul
mov
and
ja
pop
sub
push
adc
lahf
inc
in
push
mov
cld
mov
xchg
or
in
clc
jle
fs
ja
pushf
push
pusha
lea
jb
test
cmp
pushf
clc
cmpb
movb
lea
jne
rol
xor
bswap
test
mov
jle
pusha
add
cmp
movzwl
cmp
btc
add
mov
bt
add
clc
mov
mov
test
cmp
test
push
lea
je
pushf
add
pushf
call
and
mov
je
cld
popa
inc
in
stos
mov
int3
mov
lds
movsl
fs
mov
repnz
pop
loop
mov
sarl
aam
cld
js
xchg
jl
cmp
popa
sub
jl,pn
dec
fnsave
sbbl
rcrb
enter
aad
outsl
rcrl
arpl
pop
dec
mov
mov
inc
jne
fldenv
add
loop
xor
lret
mov
ja
mov
add
sub
repz
jg
movsb
pop
or
test
cmpsb
dec
hlt
pop
xchg
sbb
out
inc
lock
or
repnz
movsb
enter
adc
fdivrs
inc
cmpsb
mov
popf
test
adc
add
stc
cmp
pop
mov
lds
repnz
push
or
sbb
pop
mov
fisttpll
mov
push
xchg
lea
and
fdivrs
insl
sbb
or
mov
sbb
testb
dec
int
lea
call
pusha
adc
pusha
pushf
call
jno
mov
or
outsb
pushf
cmp
outsl
lea
adc
mov
cmpsl
call
frstor
fcoms
test
fs
jnp
or
nop
cmp
and
ja
nop
pop
mov
rorb
ss
push
sbb
pop
sub
push
das
sub
xor
das
fidivrs
test
push
hlt
popf
addl
rorl
mov
add
mov
movzbl
inc
shl
sub
btr
sar
push
or
lea
pusha
sub
bt
jmp
jmp
cmc
shr
adc
mov
push
shl
shrd
sbb
add
and
sbb
pusha
sete
add
sub
call
pushf
cmp
pusha
movb
lea
ja
push
imul
push
pushf
pushf
lea
jmp
pusha
cmc
pushf
cmp
pushl
call
jmp
pusha
bt
add
movb
lea
jmp
mov
stos
mov
cmp
inc
addr16
ljmp
es
repz
fstps
xor
mov
mov
jnp
and
sbb
mov
xor
addl
cmp
rcl
ljmp
ds
pusha
push
or
inc
clc
cmp
pushf
pop
pop
lret
cmpb
xor
xchg
mov
push
sub
mov
pop
fldln2
loopne
lcall
repnz
or
out
push
jno
cli
pop
mov
clc
cmpsl
jbe
insl
mov
xchg
mov
xor
and
clc
lcall
repnz
or
xorb
fnstenv
mov
add
jmp
imul
cwtl
pop
adc
pop
dec
push
pop
repnz
cs
or
inc
out
neg
jmp
mov
leave
pop
sub
and
add
xchg
imul
push
pusha
lea
je
dec
cmc
test
add
cmp
call
addb
or
ja
mov
push
jp
inc
loop
sub
out
bound
les
je
sub
test
mov
mov
movsb
in
aam
nop
ret
mov
vmwrite
insb
mov
cwtl
jb
ret
mov
imul
sub
arpl
in
pusha
or
daa
push
cmp
nop
push
lea
sahf
and
push
je
mov
stos
cmp
test
jecxz
jne
inc
rcl
ret
sub
push
add
popf
imul
mov
dec
cmp
xor
push
inc
fnsave
xor
lods
pop
xor
and
shl
sub
push
inc
lods
push
cli
and
lods
pop
sti
inc
lds
push
jl
mov
les
lods
dec
scas
xchg
xor
jp
cmp
mov
aas
or
ds
je
in
or
test
jns
lret
xchg
enter
sbb
insl
mov
sub
xor
out
sbb
pop
fwait
xor
jp
xchg
cwtl
mov
dec
dec
jecxz
jae
repnz
dec
xor
inc
in
xor
jl
jbe
mov
pushf
das
lcall
sti
lcall
les
mov
and
leave
repz
mov
outsb
jo
mov
hlt
cmpsl
xchg
xlat
inc
out
mov
outsl
ret
mov
mov
loop
mov
in
mov
aaa
or
jae
jp
es
roll
xor
lahf
add
push
inc
push
adc
fisttpl
into
add
pop
jg
stos
mul
adc
in
sub
lret
push
je
cld
movsl
das
adc
cli
ds
xor
mov
add
cmp
adc
int
in
ljmp
pop
mov
mov
mov
ss
cmp
shl
sarb
pushf
aaa
ret
inc
mov
lods
fidivs
fcomps
enter
cld
mov
sbb
les
insl
sub
mov
lret
std
in
lea
adc
sbb
setl
in
std
int
out
and
aad
add
push
mov
mov
xchg
xlat
adc
outsb
cwtl
jg
adc
inc
lock
push
rcl
shr
btc
push
movsbw
push
call
pushf
rol
push
mov
bt
xchg
shl
mov
sar
sar
and
shl
mov
clc
xor
call
seta
bswap
movzbw
or
mov
cmc
cmc
pusha
cmpb
pusha
mov
mov
lea
jne
shld
sub
sub
bsf
mov
call
fbld
mov
fldl2e
mov
mov
js
andb
pusha
stos
outsl
mov
cmp
mov
jecxz
adc
mov
fildl
sub
xchg
dec
mov
cmpb
jb
test
mov
add
or
mov
aam
inc
or
cmpl
and
push
jge
xchg
pop
cmp
sub
push
cltd
out
pop
cwtl
pop
jmp
fldl2t
or
mov
rolb
jno
daa
push
orl
jae
lahf
add
jge
pop
fldl2e
xor
pop
mov
sub
fmuls
lret
or
push
pop
mov
popf
nop
loop
les
in
xorb
mov
ljmp
out
shrd
mov
inc
cwtl
popa
test
xchg
dec
scas
push
cmp
push
orl
faddl
das
add
aaa
loop
sub
js
push
inc
subb
jns
pop
movb
pop
push
push
bswap
movsbw
lea
pusha
call
neg
adc
btr
mov
movzbw
test
push
rol
bt
btc
ror
push
neg
sbb
test
push
mov
test
push
xor
push
movzbw
mov
shrd
push
call
jbe
scas
mov
clc
loope
in
outsl
dec
mov
mov
js
jp
mov
aas
mov
aaa
pop
mov
jmp
addr16
ljmp
sahf
and
mov
pop
iret
push
pop
sub
xchg
cmpsb
push
pop
stos
jae
pop
ficoms
fnstenv
mov
pop
movsb
and
imul
es
jle
sbb
mov
jo
ret
jmp
push
and
fld
and
dec
lret
das
pusha
mov
ret
mov
pusha
bt
stc
pushl
cmpb
jmp
arpl
addr16
mov
mov
aad
insl
jne,pt
pusha
lahf
xchg
filds
fyl2x
mov
sti
sbb
aad
and
insb
cmp
sbb
push
sub
adc
ficomps
push
fistpll
add
xor
or
movsl
mov
or
or
cmp
dec
ret
mov
subl
stos
call
mov
or
test
loopne
rol
push
and
xor
movsbw
shl
lea
mov
test
add
pushf
pusha
pushf
push
lea
jmp
pushf
push
stos
mov
pushf
pusha
pushf
lea
jmp
push
or
mov
or
jne
stc
pop
or
scas
push
sarl
mov
xor
out
adc
dec
add
xor
mov
icebp
rcll
xor
cld
in
adc
out
jno
cmp
enter
sar
inc
fisubrs
shll
das
push
cli
and
imul
cmp
imul
repz
movsb
and
insb
push
cli
add
int3
inc
mov
les
scas
push
mov
mov
sub
outsb
pop
xor
aas
test
jae
xor
pop
mov
jmp
out
dec
jl
jmp
icebp
inc
mov
leave
cli
jne
stc
cmp
cltd
hlt
cs
cmp
or
or
mov
mov
repz
push
dec
in
popa
xor
mov
jecxz
test
dec
mov
dec
scas
imul
cmpsb
mov
shll
negb
push
sbb
leave
mov
popa
lock
mov
push
xchg
mov
add
scas
adcl
xchg
andl
inc
and
mov
pop
inc
ret
js
mov
xor
nopl
xchg
or
xor
inc
xchg
into
sarb
cld
and
call
and
fldl
push
stc
pop
push
scas
aam
push
or
mov
pusha
cwtl
movb
pusha
call
pushf
pusha
movl
pushf
call
movl
pushf
jmp
pop
add
test
rcl
movl
ror
mov
pushf
cmp
jmp
push
movl
jmp
xchg
popw
mov
les
das
adc
cltd
jg
push
add
aad
lods
mov
int
cmp
mov
out
sbb
sbb
in
outsl
jmp
pushf
stos
xchg
stc
in
pop
bound
rol
adc
xchg
movsl
push
sub
pusha
test
jae
movsb
jbe
daa
push
cmp
adc
into
cmp
pop
push
mov
inc
cld
nop
inc
out
add
bswap
paddusb
mov
sub
roll
sbb
enter
push
adc
adc
jns
mov
inc
pop
sahf
add
iret
test
ret
mov
lcall
pop
inc
sub
aaa
sbb
sub
int3
push
xor
sub
jae
add
outsl
jae
inc
insb
imul
add
lret
push
mov
and
iret
xor
cmpsb
mul
lods
jmp
push
out
mov
or
jecxz
movsb
and
in
jns
in
stos
push
xchg
mov
xchg
mov
push
aas
bnd
sahf
pop
pop
dec
cwtl
jno
roll
icebp
pop
mov
mov
imull
jb
mov
add
mov
inc
jmp
stos
push
xor
and
jbe
xlat
pop
lcall
loope
in
stos
dec
in
adc
lods
jnp
mov
jle
decl
ret
arpl
lods
pop
inc
das
aam
mov
repnz
mov
pop
lods
out
leave
mov
fs
movsl
push
dec
fstps
fs
mov
dec
cmp
rorl
sbb
pop
addb
and
movsb
stos
adc
leave
dec
loopne
mov
push
cmpsb
outsb
iret
cmp
cmp
dec
xor
jp
pop
loope
sbb
push
ss
aam
mov
les
cld
loope
mov
mov
sbbl
mov
dec
sbb
jb
jp
sahf
inc
es
call
mov
sbb
pop
jno
mov
cli
in
sub
sub
xor
je
adcl
push
icebp
stc
jae
out
stc
les
loope
xchg
xchg
add
or
jno
iret
dec
in
jmp
cmp
fadd
imul
push
mov
iret
rorl
or
xchg
stc
popf
ret
in
in
xchg
outsb
les
mov
jmp
dec
sbb
ljmp
or
repz
push
lea
jmp
xor
xchg
jmp
ret
sbb
mov
or
add
insl
ret
stos
or
andb
inc
mov
dec
in
and
dec
fldt
xchg
inc
stos
lgs
addr16
mov
call
fsubrs
xchg
ja
pop
shll
je
add
push
insb
bound
inc
fstl
jb
scas
or
out
fdivrs
arpl
daa
mov
aad
jmp
or
jge
cmp
cld
push
imul
test
call
pop
fisubl
ljmp
inc
repnz
jmp
push
mov
mov
jb
call
test
or
cwtl
out
xor
int
or
lcall
fnstcw
inc
inc
xchg
xchg
jne
loopne
cltd
std
test
jo
add
test
mov
fdivrs
sub
xchg
mull
test
cmpl
or
cmp
pop
test
or
cltd
sbb
push
pop
call
dec
nop
mov
mov
in
mov
enter
test
inc
cltd
add
stc
mov
xchg
imul
movsb
sbb
jne
fdivrs
andb
mov
test
jle
mov
pushf
pushf
pushl
ret
mov
les
inc
data16
xor
je
negl
ljmp
push
mov
pop
cwtl
pop
enter
lods
push
mov
dec
inc
add
pop
arpl
sub
jne
sbb
xchg
scas
out
jecxz
ja
mov
lds
pop
fimuls
addl
mov
cmp
insb
fwait
clc
sbb
mov
push
call
jmp
das
sbb
or
fwait
and
add
inc
or
add
test
sti
jmp
enter
add
enter
push
call
imul
gs
xor
cs
insb
add
inc
and
outsl
pop
imul
add
mov
or
add
hlt
push
jge
inc
and
or
sbb
push
sbb
lods
mov
adc
push
lods
nop
lahf
jg
lock
xchg
cmpsb
push
add
add
stc
cmc
pop
daa
cld
add
movsl
mov
cltd
cli
lcall
rcl
insb
aaa
call
mov
fst
and
xor
xchg
push
ss
adc
clc
mov
and
pop
xchg
subl
pop
cmp
inc
in
xchg
fildll
leave
cmp
ljmp
or
mov
and
xchg
ret
addr16
lahf
lahf
nop
jp
xchg
lds
mov
out
jb
push
outsl
add
xchg
xor
mov
ret
stos
mov
out
mov
cmpsl
rcr
add
lret
adc
inc
leave
inc
mov
insl
dec
in
outsb
lea
ss
sub
mov
cltd
mov
jmp
popf
lds
jo
cmpb
lret
or
std
pop
cmp
enter
pop
inc
jmp
cmp
lret
dec
and
or
inc
mov
inc
movb
pushf
movb
lea
jmp
pushl
mov
lea
je
push
jmp
dec
lea
xor
call
mov
jp
in
cmpl
inc
sbb
inc
push
adc
outsb
pop
mov
gs
or
shll
leave
mov
mov
mov
lcall
cs
fwait
inc
out
sbb
enter
xchg
mov
inc
xor
and
decb
inc
pop
mov
subl
inc
imul
mov
add
inc
lods
or
mov
mov
repz
push
in
orl
cmpsl
mov
adc
inc
out
insl
lret
xor
aaa
fwait
mov
dec
dec
fsubl
das
xor
aad
daa
push
mov
mov
aad
popa
push
test
sub
cld
popa
mov
or
sbb
repz
mov
imul
insb
add
lret
cmp
bt
mov
sub
pushf
jmp
lret
lods
or
add
push
js
stc
pop
std
and
mov
out
daa
mov
rorl
mov
mov
ficoml
or
mov
jae
xchg
mov
pop
inc
das
adc
test
lds
jae
ret
or
xchg
ja
insb
clc
xor
sbb
and
cmpsb
iret
les
ja
mov
cmpsl
in
push
xchg
push
pop
xlat
jns
xor
mov
fwait
ds
inc
fbld
test
js
xlat
cld
std
pusha
xor
xchg
cld
mov
push
xchg
or
pop
or
xor
mov
pop
sub
mov
gs
fcmovu
jne
sbb
mov
ja
cmp
and
xor
lods
cmp
pop
je
xchg
cltd
add
es
xlat
jne
cmpsl
clc
jns
pop
cmp
or
lock
add
or
les
sub
push
je
mov
shl
cltd
mov
outsb
cmp
stos
xor
cmp
out
fdivrs
into
sbb
mov
scas
or
pop
jbe
sbb
fwait
int3
mov
xchg
adc
mov
pop
roll
mov
pushf
into
mov
std
fwait
adc
leave
lods
mov
push
cmc
mov
pop
jne
lcall
fnstsw
scas
push
jp
test
xchg
cli
popa
scas
outsb
cmp
jl
adc
jbe
add
pop
lea
call
pushf
mov
movb
lea
jae
bt
push
call
cmp
cmp
push
pushf
lea
jb
pushf
cmp
call
xlat
test
in
dec
xor
ret
bound
xchg
mov
imul
adc
push
or
aaa
mov
mov
sub
gs
push
loope
stos
or
cmc
into
and
movsl
ss
pop
aam
push
test
lods
cltd
out
pop
lret
xchg
cmpsl
xchg
imul
outsb
xor
or
in
pushf
inc
lds
test
hlt
adc
pop
and
or
and
push
pop
das
fdivl
mov
sub
xchg
fadd
push
mov
subl
or
ret
rclb
and
je
call
sbb
bsf
push
mov
js
cmp
outsb
imul
cmp
inc
jne
dec
pop
gs
std
mov
cld
mov
test
xor
pusha
mov
lods
frstor
mov
dec
sub
adc
int
push
test
ret
add
push
push
sbb
mov
mov
mov
jo
jmp
movsb
mov
test
jae
mov
fisubs
gs
lahf
dec
and
xchg
xor
jge
jl
xor
lock
ror
cmpsl
scas
ficoms
pop
out
xor
jns
lods
jp
shll
outsb
cmp
jo
push
loop
or
dec
cld
andb
imull
add
shll
aam
fimuls
push
dec
enter
cmpsl
xchg
xchg
dec
adc
outsl
mov
mov
mov
leave
sub
and
arpl
mov
movsb
pop
mov
inc
popaw
or
sarl
sub
xor
or
xor
cmp
pop
les
jle
fs
lods
hlt
add
mov
std
les
out
mov
lcall
adc
inc
jle
pop
clc
testb
das
sarl
mov
push
push
bound
gs
arpl
repnz
iret
lcall
out
jae
mov
rcr
lea
lea
or
shll
pop
andb
and
jle
idivl
jne
sbb
or
ds
pop
dec
mov
or
cmp
jl
jbe
into
xor
mov
ds
lods
dec
in
xchg
pop
inc
or
xchg
int
adc
movsb
mov
and
xchg
lock
sub
das
sbb
fs
jle
in
cltd
sbb
xchg
inc
inc
call
push
call
or
lea
inc
filds
cmpsl
mov
adc
enter
pop
inc
mov
in
cmp
or
sbb
sbb
add
stc
add
imull
add
lock
add
movb
adc
into
add
pop
push
pusha
sahf
dec
xor
mov
repz
or
cmp
pop
cmp
add
subl
push
cmpsb
dec
repz
shll
arpl
or
orl
not
mov
jmp
pushf
pusha
movb
lea
jne
call
iret
adc
mov
and
jge
movb
lahf
inc
pop
sahf
xchg
stos
pop
fabs
into
movsl
ja
inc
in
nop
mov
mov
dec
adc
mov
sub
mov
adcb
sbb
stos
jae
pop
mov
cmp
ja
mov
and
loope
inc
shrd
sarb
xchg
inc
movsb
nop
or
mov
dec
jno
std
lea
pop
insb
mov
andb
je
fisttps
or
add
int3
or
popa
mov
imul
fs
jb
stc
bt
clc
clc
cmpb
pushf
call
and
cmpsb
or
push
and
lea
arpl
out
inc
dec
das
push
scas
js
out
inc
inc
orb
mov
push
cmp
std
mov
mov
lods
daa
inc
out
jb
lods
mov
aad
inc
insb
jne
xor
sbb
fcoms
and
sbb
outsb
inc
jns
mov
jo
mov
mov
les
sub
and
sub
in
mov
in
cmpsl
les
mov
mov
ret
adc
adc
mov
repz
cmpsb
xor
inc
mov
xlat
mov
orb
jo
insl
lds
and
jae
cmp
call
iret
cmp
movb
mov
xchg
movsl
dec
push
xchg
stc
sbb
sbb
imul
add
xor
jbe
push
jg
sub
sbb
mov
mov
push
hlt
daa
into
add
adc
daa
jbe
adc
iret
sbb
lods
push
pop
pop
shll
popa
adc
or
daa
sub
jb
loope
add
pop
in
ja
adc
jle
inc
or
xchg
ret
nop
daa
loopne
sarb
pop
add
or
popf
test
dec
jne
add
mov
dec
jnp
pusha
mov
adc
pusha
lea
jae
jmp
lods
data16
or
and
xchg
jbe
jle
inc
imul
movsb
mov
js
call
ret
shl
lock
cmp
sub
xchg
test
xchg
adc
fstl
leave
insl
dec
xchg
es
aas
mov
inc
cmp
dec
inc
inc
cmp
or
sub
andb
ss
repz
push
xlat
das
pushf
pop
repnz
es
inc
push
sbb
push
jbe
inc
xchg
mov
jmp
rorl
sbb
and
pop
movsb
or
pop
jmp
imul
gs
movsl
push
jae
test
stos
push
movsl
sbb
pusha
outsl
push
mov
add
lret
or
cmp
adc
lock
stc
sti
push
int
cmp
lahf
push
sahf
mov
mov
pop
aam
leave
push
push
cmp
rorl
clc
mov
dec
and
iretw
mov
xor
xchg
in
std
fs
clc
jo
inc
and
lea
jne
bswap
movb
push
movsbw
pushf
mov
seta
lea
lea
lea
push
pusha
pushf
movl
pushf
jmp
pusha
pusha
call
pop
lahf
push
mov
icebp
nop
xor
ret
in
push
dec
mov
outsb
push
and
fiaddl
ds
inc
adc
iret
call
cmp
mov
and
push
sbb
stos
shr
jecxz
in
enter
dec
imulw
aaa
mov
dec
cmp
insl
lret
jnp
ds
pushf
test
mov
dec
mov
fisubl
push
jo
and
cmp
xor
addr16
xchg
jle
or
xor
cmc
jae
fcmovnu
out
filds
call
cmc
call
mov
jo
or
mov
jo
out
adc
jnp
mov
shll
int3
fildl
sti
xor
jecxz
jge,pn
pop
push
ficoms
adc
mov
jl
cmpsl
jnp
push
mov
shll
addl
add
cmp
mov
jecxz
xlat
mov
and
pop
inc
jecxz
je
je
bound
fcmovnb
xor
adc
inc
and
pushf
mov
push
movb
pushl
ret
movsb
test
push
mov
cmp
cmp
imul
outsl
mov
mov
ja
sub
xor
add
cmp
cmp
mov
and
daa
cltd
lahf
scas
cs
test
pushf
add
sub
mov
fdivp
das
in
push
pusha
push
mov
cmp
inc
adc
mov
adc
fmul
fstps
lods
lods
or
and
mov
call
stos
shl
idivl
mov
cld
loop
ja
pushf
shl
cmc
and
mov
cmp
clc
pushf
shl
movb
push
lea
je
push
pushf
pushf
mov
pushf
jmp
jns
mov
or
jo
ret
out
jmp
insb
adc
cwtl
jnp
jge
in
shll
sub
js
in
js
adc
xchg
lods
mov
or
cld
cmp
cmc
pop
add
push
fstpt
adc
iret
cmpsl
push
ljmp
dec
fildll
test
jl
call
inc
in
fwait
repz
fistpl
hlt
scas
stos
mov
xor
lea
add
push
jnp
xchg
adc
outsb
cmp
test
cmp
std
mov
fsub
ljmp
mov
out
add
pushf
lock
cmp
jmp
les
mov
mov
add
out
je
dec
xor
fbld
lods
jle
mov
iret
lock
mov
inc
shl
sbb
mov
mov
rorl
adcl
dec
ret
jmp
movsl
testl
mov
int3
adc
int
pusha
shrb
js
add
xchg
cmp
push
xchg
cmp
xor
mov
es
mov
test
fdivrs
sub
shll
ret
fs
pop
pop
call
adc
adc
push
cwtl
and
mov
sub
repz
sti
dec
out
fstpl
sbb
in
inc
js
mov
movaps
pop
pop
in
jns
push
push
aaa
dec
cwtl
add
jnp
insb
je
sub
and
aaa
fiadds
pop
out
xchg
pop
sbb
aad
out
mov
push
mov
dec
rol
sahf
or
test
mov
or
push
shll
pop
and
xchg
js
rorl
inc
lds
into
fs
and
mov
lret
daa
setae
js
jmp
xor
mov
sub
mov
and
jae
lock
xor
ret
xor
sub
mov
shr
jb
fbld
mov
negb
xchg
lret
int
lahf
or
inc
push
negb
cmp
mov
bnd
jae
sahf
sub
leave
add
mov
hlt
inc
jb
lds
repnz
xchg
push
push
lahf
std
dec
mov
sub
push
outsl
cmp
pop
mov
leave
push
call
mov
fisubl
mov
mov
sub
sarb
push
mov
dec
push
in
xchg
jle
cmp
pop
mov
lods
addr16
add
dec
lock
sub
arpl
outsb
xchg
fmuls
jo
push
lea
outsl
adc
je
loopne
jg
popf
mov
push
pusha
call
lea
jmp
std
add
or
je
push
cs
scas
push
mov
jecxz
pop
xchg
lds
add
loopne
out
andl
clc
pop
mov
dec
in
movsb
push
aam
jp
mov
mov
mov
sub
cmc
ret
jecxz
arpl
inc
add
mov
pushf
aaa
jge
ja
loopne
fiadds
lods
jp
test
push
ret
fidivl
rcrb
pop
ret
gs
mov
jmp
jbe
test
ds
or
jb
inc
in
sub
xor
mov
mov
cmp
mov
daa
inc
je
add
pushf
mov
and
mov
jo
vrcpss
out
jle
push
xchg
dec
std
or
out
jmp
aas
push
int3
mov
in
cmp
inc
fisubrs
bound
in
sarl
cli
rcll
and
fisubrl
hlt
sarl
leave
mov
jle
dec
mov
inc
test
insb
add
loopne
sbb
mov
jmp
popf
or
mov
negl
shll
sbb
xlat
or
xor
fbstp
push
mov
ja
jge
xchg
jns
push
mov
xor
ss
imul
cmpsb
push
mov
enter
test
jo
mov
mov
fnstcw
adc
add
cmp
cmc
adc
fstpt
ret
sub
filds
sbb
adc
in
jb
fsubrl
jne
add
scas
dec
callw
rolb
js
push
sbb
daa
push
mov
add
push
mov
lds
adc
xlat
pop
or
add
xchg
mov
les
mov
sbb
mov
mov
jecxz
in
mov
ret
sbb
sub
divl
add
repz
jmp
xchg
xor
aam
xchg
dec
cmp
pop
divb
repz
push
adc
pushf
dec
stos
jnp
lret
xadd
adc
lahf
sub
inc
xor
rorl
or
mov
lret
mov
iret
data16
mov
out
test
sub
jge
push
shlb
outsl
adc
dec
mov
mov
aas
loop
lods
cwtl
sub
loope
sti
out
mov
jae
jne
sti
fildl
inc
mov
inc
xchg
cwtl
test
lods
out
pop
test
and
repz
push
sub
std
xchg
pop
outsb
fimull
fsts
push
mov
push
adc
dec
jnp
out
cmp
pop
lea
cld
mov
pop
dec
cmpb
mov
outsl
jmp
movsl
lcall
lret
shrb
rclb
or
lret
mov
ja
repz
inc
imul
sub
pop
and
es
or
jo
std
pop
inc
jecxz
test
push
xor
push
int
xor
inc
xchg
fimuls
ret
jo
add
mov
std
push
pop
mov
cmpsb
je
sub
icebp
sub
mov
cmp
xchg
fisttpll
scas
push
pop
sub
xor
rclb
jne
adc
ret
mov
mov
jl
jl
xor
jne
mov
in
xchg
nop
out
xchg
ret
lea
add
filds
shrl
cmp
mov
mov
add
push
jl
dec
lods
adc
insl
xchg
push
push
leave
cltd
or
fdivr
pop
inc
gs
mov
xchg
hlt
popf
add
sbb
scas
xchg
xchg
add
arpl
inc
jle
movsb
mov
xchg
cmpsl
xchg
adc
or
lea
outsl
int3
xchg
dec
ds
loopne
xrelease
push
lret
test
mov
rclb
cmp
push
mov
push
cmp
lods
push
cmp
mov
add
insb
movw
call
lret
lcall
fwait
inc
fnstsw
mov
sub
test
mov
pushf
cmc
fwait
sahf
jmp
enter
sti
jns
mov
je
sub
jl
lret
pushf
ficoml
std
mov
push
les
add
fs
negb
sub
xor
mov
sub
mov
test
pushf
cmc
mov
bt
test
push
pushf
pushf
lea
je
push
call
pushl
stc
cmp
cmp
push
jmp
stos
repnz
or
movsb
push
cmp
jle
add
in
psllw
add
xchg
les
int3
pop
dec
adc
add
insb
aam
pop
dec
add
mov
subl
push
xor
insl
sub
aas
sti
mov
pusha
scas
xchg
xor
jp
xchg
mov
cmp
pop
mov
aam
arpl
call
fimuls
sbb
pushf
add
test
mov
pop
stc
push
sahf
mov
loopne
in
insb
cld
pop
and
jb
lea
sahf
imul
adc
mov
and
sub
jbe
fisubs
rolb
loope
int
je
cwtl
or
ljmp
sub
fidivrl
lret
adcb
and
or
jnp
dec
mov
mov
lock
xor
sub
call
data16
fimull
mov
in
enter
imul
add
ss
jne
xchg
std
jae
dec
adc
lock
cld
mov
pop
test
or
cs
aas
out
jmp
pushl
lea
ja
shl
add
sub
inc
add
bsf
sub
test
and
mov
not
pusha
or
cmp
mov
bt
test
stc
call
mov
cwtl
cwtl
or
xchg
movsb
out
icebp
nop
notl
jbe
mov
mov
sub
mov
push
sbb
or
jmp
scas
pop
frndint
jmp
jp
lahf
scas
jp
xchg
push
jns
les
aam
pop
dec
jmp
push
mov
pop
ffreep
mov
fisubs
pop
xchg
or
sbb
sub
pop
ds
inc
in
repz
mov
adc
adc
adc
add
cmpsb
jp
aaa
cmp
in
nop
jg
jbe
js
pop
xlat
or
jbe
sbb
lds
dec
ret
sbb
inc
enter
sbb
inc
add
loope
cmpsl
jbe
inc
mov
pop
cmpsl
repnz
adc
pop
test
je
addr16
xor
jmp
ds
cli
in
shlb
fsts
mov
xlat
cli
pop
add
inc
int
lret
popf
cltd
pop
jg
shlb
in
stc
in
rcll
fisttps
insl
imul
mov
clc
mov
scas
aad
jbe
push
adc
int
sub
pusha
nop
subl
sub
xor
inc
xchg
jns
loop
or
mov
inc
fwait
subl
mov
ljmp
push
jmp
inc
adc
xchg
and
push
jp
push
xor
mov
jle
push
shlb
mov
mov
les
ja
cmp
stos
aaa
cmp
inc
nop
mov
sbb
dec
decl
pusha
xor
aaa
fnstcw
jle
enter
xchg
cmp
push
pusha
outsl
bound
cltd
xor
xchg
sbb
popa
loop
cld
int3
xor
outsb
push
push
cmp
sub
gs
loopne
icebp
cmc
aad
dec
mov
push
stc
rorl
mov
es
and
mov
dec
jb
lcall
ljmp
mov
lret
mov
outsb
xor
outsl
in
repz
dec
mov
cmpsb
mov
mov
scas
mov
mov
aaa
aas
mov
jecxz
movsl
lcall
ds
pop
stos
mov
pusha
sbb
xlat
push
cmp
mov
fldcw
push
push
cwtl
xor
mov
je
inc
mov
sahf
out
dec
sub
cmp
add
xchg
mov
mov
loopne
cmp
or
ss
jmp
int3
das
xchg
not
jp
into
call
cmp
xlat
xchg
jp
dec
popf
xchg
das
loopne
and
andb
jb
cmp
rcll
imul
and
test
xor
jp
cmpsl
mov
rcrb
xorl
dec
jne
out
xchg
adc
push
jo
inc
jo
cwtl
cmpsb
ja
jge
das
icebp
int3
jmp
jnp
or
pushf
subb
mov
cltd
frstor
and
test
xlat
call
pop
sti
pop
jle
andl
icebp
xchg
bswap
lods
lock
popa
mov
add
xchg
inc
sbb
rclb
repnz
cwtl
in
cmp
xor
movsb
in
jge
adc
imull
push
xor
sarb
sahf
sub
ret
jne
adc
pop
scas
popf
pop
push
cld
jle
push
repnz
xchg
sub
jmp
out
inc
js
mov
mov
xchg
or
stos
adc
jle
xchg
iret
mov
jb
in
enter
cmp
lret
fiadds
test
xor
or
pop
imul
push
clts
push
push
xchg
movsb
jp
cmpsb
xchg
ljmp
xor
or
sti
sub
push
push
xor
push
push
push
jp
dec
xchg
add
pop
or
scas
sar
cmpsb
or
cmpsb
dec
jo
inc
es
rcr
imulb
fisttpll
test
push
add
out
iret
mov
mov
repz
not
call
clc
cmp
xchg
or
cmp
mov
into
mov
ss
jl
shlb
xor
sub
xor
sub
xor
mulb
dec
xor
xlat
xchg
and
jne
add
push
dec
pop
stos
adc
pop
test
jno
stos
cmc
dec
scas
sbb
and
sub
call
lcall
and
fimuls
sbb
pop
ljmp
in
dec
push
test
pop
es
into
je
test
adc
mov
mov
inc
stos
insb
cld
in
enter
xchg
or
in
xor
clc
sbb
mov
xchg
push
mov
ffree
or
lds
adc
cmpl
inc
cmpsl
imul
adc
adc
insl
mov
insl
popa
inc
jo
and
mov
xchg
jae
data16
lret
sub
add
xchg
call
gs
repz
addr16
jae
mov
push
fmull
jne
sar
jmp
fisubrs
fists
xor
mov
jl
inc
call
popa
leave
sbb
aaa
leave
push
pop
xchg
mov
bound
xor
jno
mov
mov
fdivs
es
ret
mov
imul
std
fsubs
or
fildll
fsubrs
jg
ret
rcrl
lret
xor
and
test
xorb
sbb
cmp
dec
lret
and
jnp
and
jno
sbb
and
and
sbb
adc
imul
idivb
fwait
jecxz
pop
ret
jge
mov
in
mov
add
cmpsl
dec
cmc
pop
cltd
fucomp
and
mov
lret
aam
sbb
fmulp
sub
jo
xor
std
pushf
std
and
jg
jo
mov
mov
cmp
push
xor
jne
mov
movsl
xor
lret
mov
inc
lahf
jbe
xchg
sbb
dec
sub
and
mov
decl
pop
es
cmpsb
push
icebp
sbb
sbb
cmp
push
loope
dec
sbb
mov
les
daa
mov
fisttps
sub
lods
mov
pusha
enter
cmpsl
or
or
sahf
inc
jle
stc
incl
add
fs
jno
pushf
lea
jbe
not
bts
mov
rcr
add
shld
bts
xor
cmp
mov
shr
add
bts
clc
not
movl
sub
bsr
seta
test
mov
bt
cmc
cmp
jmp
pusha
lea
jb
pushf
lea
jb
push
cmpb
mov
pusha
lea
jne
movzbl
mov
pusha
add
cmc
clc
stc
movzwl
shl
mov
clc
bt
stc
add
movw
bt
mov
call
call
xchg
push
into
or
sbb
inc
sub
repnz
mov
adc
aam
xchg
xchg
dec
mov
xchg
fsubrs
xchg
sbb
imul
dec
pop
jle
dec
push
enter
and
out
and
pop
sub
fwait
dec
add
mov
xlat
aaa
popf
pop
adc
sub
sub
sti
and
cltd
in
loopne
pop
xchg
mov
leave
pop
ljmp
sub
fdivrl
push
dec
test
jns
test
push
movsb
xchg
jmp
jl
inc
in
adc
pushf
inc
int3
dec
icebp
xchg
mov
and
mov
jle
lret
in
or
je
fldcw
xchg
xchg
fmuls
and
push
push
stc
sahf
add
push
mov
pop
bound
mov
mov
clc
sbb
ret
cltd
clc
sub
pop
lret
mov
mov
mov
push
push
insl
daa
jne
call
fs
sub
sbb
adc
leave
push
add
popf
inc
arpl
sahf
push
scas
in
popf
mov
lods
ja
negb
gs
and
push
clc
popa
inc
scas
xchg
xchg
or
adc
mov
sbb
stos
dec
ljmp
fildl
cmc
sbbl
add
sbb
hlt
and
stos
pusha
sub
insl
stos
lods
mov
mov
aas
enter
dec
jbe
iret
pop
fsubl
in
dec
jle
sahf
adc
adc
out
mov
loopne
xor
dec
dec
jno
mov
and
push
dec
push
cmc
stc
fadd
insb
nop
cmp
pop
add
dec
enter
mov
lret
mov
pop
pop
rorb
ret
movsl
mov
push
negl
mov
inc
icebp
jecxz
xor
push
loop
sar
in
cltd
std
add
and
mov
imul
jae
mov
push
adc
es
insb
add
mov
mov
movl
jb
lods
aam
repz
jae
insl
sarb
push
sbb
mov
mov
lds
add
stos
pushl
movw
lea
jmp
mov
les
insb
adc
xchg
cmc
pushf
std
sbb
adc
push
popa
inc
into
adc
add
std
dec
mov
in
mov
inc
outsl
jnp
mov
jmp
jle
mov
xchg
aaa
in
xor
lcall
and
inc
pop
comiss
cmp
push
rcr
sbb
sub
cmp
clc
mov
imull
or
daa
test
xor
push
mov
sbb
cmp
mov
in
xor
mov
mov
cmp
cmpsl
in
mov
les
outsb
push
lock
cmp
mov
mov
shrl
cltd
cmp
or
mov
mov
mov
jns
push
mov
dec
sbb
mov
or
fstps
xorl
lahf
test
sub
pop
sarb
sbb
mov
adc
lahf
daa
push
sbb
test
fsubs
mov
mov
ret
negl
cs
jns
push
rclb
xor
ja
or
test
std
mov
mov
cld
fstpt
add
sub
push
fsubr
jle
dec
sarl
dec
adc
inc
add
ffree
lods
imul
inc
js
leave
pop
popa
adc
add
bswap
sti
outsl
dec
mov
outsl
sub
pop
lea
xor
mov
xchg
jle
sub
ret
jo
roll
xchg
dec
sbb
dec
cwtl
push
adc
and
pop
mov
cld
lahf
or
add
out
sbb
pop
dec
hlt
pop
mov
push
ja
movb
cwtl
jmp
bt
cmc
cmc
add
jmp
popa
and
mov
les
shlb
xchg
mov
test
mov
cmp
jge
ljmp
mov
popf
push
pop
jb
pop
jle
inc
test
inc
dec
fcoms
cli
and
js
ds
mov
out
jl
inc
sub
cli
pop
pop
mov
jne
or
leave
scas
xor
mov
inc
in
jmp
cmp
std
jnp
adc
add
pop
hlt
sbb
xor
add
adc
pop
test
push
cltd
mov
and
push
jmp
fs
jae
not
dec
pusha
mov
call
movb
inc
push
not
call
xchg
gs
mov
les
imul
pop
aas
in
and
sub
pop
mov
push
and
mov
xor
mov
push
pop
mov
or
icebp
and
sub
sbb
shlb
gs
imul
and
and
fsubs
mov
add
out
mov
orb
and
inc
and
pushf
and
or
into
out
xchg
xor
ror
inc
pusha
lahf
test
jge
inc
movsb
andl
jnp
sbb
ja
pushf
call
pusha
fs
mov
test
and
insl
out
jmp
cmp
aaa
dec
test
test
adc
jp
pop
movsb
push
enter
sbb
and
or
jmp
cmp
xchg
cs
das
or
lea
andl
sbb
outsb
ret
test
inc
mov
mov
stc
test
cmpb
pusha
call
repz
pop
mov
les
dec
xor
mov
adc
or
xor
iret
insl
outsb
xchg
adc
loop
daa
push
mov
mov
div
mov
jns
push
mov
add
dec
cmp
add
shrl
adc
push
fadds
test
fstl
lock
add
inc
cltd
pop
mov
jl
je
xchg
push
mov
lret
cli
sbb
sbb
or
mov
mov
in
ss
cmc
sbb
insl
nop
jno
jl
xchg
pop
xchg
je
pop
adc
das
xor
incl
stc
std
fiadds
cli
sarl
faddl
enter
test
daa
mov
popa
mov
jl
dec
outsl
sarb
and
cmp
adc
pop
or
cwtl
pop
daa
fmuls
dec
sub
lods
repz
repz
test
repnz
mov
mov
lea
xor
cmp
jl
sub
dec
das
xor
pop
out
imul
mov
loop
into
aad
pop
pushf
sbb
aam
repnz
sub
add
negb
jge
and
adc
push
push
enter
into
dec
fcomps
daa
pop
je
inc
cmpsb
or
mov
aaa
idivl
repz
jp
pushf
jmp
movzwl
pushf
lea
movsbw
mov
pushf
call
pop
loope
mov
les
addr16
xchg
jne
rcl
and
cltd
mov
cmp
xor
cltd
push
sub
in
cmc
inc
in
dec
in
stos
nop
mov
xchg
ror
fdivs
shlb
orb
sarb
mov
popf
gs
rorl
cmp
out
xchg
cld
out
cmp
sbb
mov
ret
test
jb
cmpsb
and
js
in
cmc
and
mov
fs
fxch
lcall
mov
sbb
dec
repz
fdivl
test
and
pop
clc
es
dec
loope
das
repz
mov
pop
mov
pop
jmp
mov
fsts
test
lret
or
mov
shr
jne
fisubs
aam
in
lret
jecxz
inc
and
popf
xchg
aas
mov
push
pushf
pushf
lea
jmp
dec
rorb
or
inc
aad
sbb
pusha
inc
in
stos
lea
outsl
sbb
xor
xor
and
add
cld
mov
jnp
or
int
sub
faddl
mov
push
inc
xor
test
test
ficomps
sbb
mov
lret
out
fsts
mov
push
cmp
inc
pushf
subb
jbe
add
out
imul
imul
and
jae
je
pusha
cmp
call
lock
les
lahf
inc
cmpsb
mov
lret
je
xchg
out
sub
sub
rorl
repnz
xchg
jnp
mov
int
fwait
adc
pushf
sub
repz
iret
xor
fstps
dec
ja
loopne
pusha
xlat
test
les
lea
test
shrl
in
andl
lahf
scas
jp
sbbb
or
lock
hlt
inc
and
mov
outsb
sbbl
sbb
pop
adc
cwtl
mov
pop
cmpsb
loop
cmp
jp
and
mov
adc
mov
cmpsl
sub
mov
inc
test
in
xor
call
xchg
fsubr
pushf
test
les
mov
mov
adc
jo
fwait
addb
and
bnd
sahf
in
mov
aam
adc
dec
mov
inc
push
xchg
dec
add
test
cli
lds
das
rcrb
inc
gs
ds
stc
mov
push
data16
stos
mov
into
dec
outsb
fwait
inc
cmpsl
repz
jg
mov
fcmovu
sbb
xor
add
pop
outsl
and
mov
and
ljmp
mov
js
insl
adc
xchg
and
cs
scas
xor
pop
or
xchg
jae
test
jmp
bound
jo
rorb
je
std
sub
lahf
stos
push
les
sbb
flds
addb
xor
push
outsl
inc
adc
lret
in
and
or
hlt
fscale
mov
lds
jns
int3
bnd
inc
cmc
xchg
test
mov
ror
mov
pushf
mov
bswap
shrd
movzbw
mov
stc
test
jmp
mov
outsl
test
les
stos
int
push
mov
jl
inc
lea
test
loopne
cmp
sub
stos
push
push
xor
jmp
test
fimull
adc
or
push
js
jle
push
push
cmp
aas
int
sbb
sub
rcr
xchg
pop
cmc
xchg
push
fisttps
xchg
mov
aas
xchg
add
nop
push
popl
jno
iret
repnz
mov
out
xor
imull
arpl
out
outsb
pop
cmc
test
sub
je
dec
and
xor
xchg
divps
adc
xchg
cmp
je
xor
xchg
sbb
pop
dec
into
jmp
repnz
out
ljmp
fs
or
lock
mov
repz
inc
lods
dec
imul
outsb
push
outsl
sub
std
mov
insl
loopne
repnz
in
into
cmp
xchg
jp
nop
loop
jp
in
and
je
dec
inc
mov
jecxz
lcall
cltd
adc
sub
es
inc
sbb
inc
sbb
lods
lods
adc
lds
mov
xor
imul
dec
fs
imul
aam
inc
dec
inc
mov
dec
je
dec
shrb
mov
loope
repnz
adc
into
popa
jo
clc
jo
inc
into
loopne
insb
sbb
dec
xor
into
icebp
fistpl
loope
lock
in
dec
in
out
jo
or
imul
and
xor
cmpsb
cwtl
inc
repz
sub
sub
and
clc
stc
dec
inc
je
mov
fwait
in
sub
incb
pop
and
push
add
aaa
push
loop
add
jp
dec
inc
jbe
addr16
stc
orb
inc
push
and
clc
lret
dec
or
add
xor
addr16
pop
pusha
sub
mov
xor
cmp
cmovl
jo
push
or
gs
repnz
sub
nop
cmc
add
or
out
out
iret
push
add
inc
fs
cmpl
aad
sub
std
movsb
pop
imul
es
hlt
insb
insl
stos
sbb
outsl
js
call
sub
sub
xchg
call
cmp
and
leave
out
dec
xchg
loopne
std
enter
mov
pop
imul
sub
cmpsb
dec
cld
mov
arpl
in
and
out
loopne
adc
push
xlat
jecxz
lock
popa
int3
movsl
insl
push
jo
jmp
loope
and
getsec
inc
jg
outsl
dec
and
iret
in
sub
or
jg
pusha
dec
hlt
in
mov
insb
sub
xor
jge
adc
cld
jbe
jl
adc
sub
sbbl
imul
or
outsl
fs
cmp
sbb
scas
inc
add
les
loop
jl
or
cmc
fadds
in
popa
sub
aaa
pop
outsl
cmp
lds
arpl
lods
repnz
leave
imulb
dec
fs
int3
dec
outsl
movsb
sbb
jmp
outsl
dec
in
inc
lcall
inc
insl
addr16
insb
loop
pusha
mov
ret
push
mov
mov
out
sti
and
jl
outsb
in
out
jmp
push
add
out
sahf
push
jnp
mov
xchg
repz
dec
outsl
sub
jo
mov
addr16
bound
sbb
xchg
or
aas
sub
or
repz
int
shlb
ljmp
fsubs
pop
movsl
je
test
int3
sub
popa
movsb
add
pop
imul
dec
je
in
push
popf
out
mov
in
outsl
imul
jge
sbb
mov
or
dec
cmp
andl
pop
in
sub
insl
ja
add
dec
or
inc
in
daa
inc
push
js
inc
cmc
out
mov
jp
cld
test
stc
cmp
xor
lods
xorb
jo
lods
pusha
movb
or
and
movsb
andl
and
pop
in
aaa
stos
in
jo
inc
or
mov
js
mov
pop
sti
jge
cwtl
jne
inc
mov
dec
outsb
jmp
iret
mov
popa
push
ret
call
sbb
in
and
loope
in
dec
outsb
pop
jecxz
in
or
or
stc
pusha
mov
mov
pusha
ja
arpl
pop
dec
sub
mov
xor
dec
sub
cwtl
adc
mov
xchg
mov
mov
sub
or
imul
mov
jp
scas
lret
mov
jecxz
out
inc
fnstsw
add
sub
dec
popa
add
jp
sub
lods
loopne
hlt
fsubs
jo
dec
jge
je
or
mov
outsl
jp
push
lock
jo
int3
pop
loopne
fcomps
lock
aaa
dec
sti
subb
jns
lods
fidivs
lret
mov
lds
test
xchg
xor
push
mov
outsb
dec
and
inc
pop
nop
insl
idivl
inc
sbb
imul
js
loop
add
scas
jmp
add
out
call
push
loopne
pop
test
mov
push
outsl
jle
xchg
jo
subb
callw
int3
loopne
in
in
ret
and
sub
outsb
mov
pop
add
sub
jp
add
xchg
pop
add
xchg
mov
bound
and
or
inc
mov
ret
roll
xorb
fs
xlat
scas
test
loop
data16
bound
sub
sti
sub
jnp
out
lock
dec
in
out
dec
popa
add
xor
inc
loop
imul
jb
push
sub
dec
cmp
in
out
sbb
and
je
popf
jl
sub
test
and
cld
sbb
jge
push
sub
dec
ljmp
outsl
aad
repz
jae
pop
jp
push
int3
mov
popa
les
push
adc
ds
mov
mov
cmpsb
dec
iret
repz
call
pop
or
imul
mov
pusha
mov
ret
dec
hlt
sti
outsb
addr16
sbb
and
hlt
jp
jcxz
inc
inc
or
xor
insb
jle
les
xor
lea
xlat
sub
add
xchg
xor
in
outsb
rclb
insb
or
aad
stc
sbb
mov
or
add
sbb
or
out
aas
and
scas
sar
loop
movsl
xchg
and
insb
outsl
shl
sbb
sub
in
gs
push
sahf
loop
js
push
dec
lock
aad
jge
les
addr16
mov
filds
idivb
mov
or
iret
hlt
cwtl
negl
cld
pop
movsl
push
fcoms
fs
add
fstpt
ds
cwtl
and
das
pop
lods
fistl
inc
cmp
lds
leave
ljmp
inc
jbe
jle
xchg
pop
jl
cmp
les
jns
cmp
in
jmp
adc
out
sarl
mov
sti
aas
out
lcall
not
call
je
cmp
add
ror
bt
mov
call
and
push
jge
les
sub
adc
mov
or
into
sti
scas
xor
pop
insw
out
arpl
cmpb
pop
sbb
lcall
stos
sub
popa
adc
cmp
push
in
roll
out
jecxz
movsb
int
or
cltd
andl
notl
cmp
add
pop
adc
sahf
data16
hlt
pop
inc
sub
cmp
lds
push
ret
icebp
flds
out
test
loope
or
sahf
dec
sub
popf
rcr
arpl
cmpsl
push
mov
out
mov
ljmp
test
mov
icebp
fisttpll
jns
push
mov
arpl
rcr
mov
xlat
or
or
xor
in
lods
xor
mov
icebp
adc
dec
scas
sbb
stos
push
cmp
daa
adc
pop
mov
int3
xchg
out
jo
aaa
pushf
mov
outsl
push
jge
mov
das
push
stc
jecxz
adc
jmp
test
xchg
loop
sbb
inc
push
adc
rolb
jl
xor
mov
shll
mov
insb
sbb
mov
hlt
call
add
add
jnp
movsl
shll
xor
lret
cld
sti
jmp
inc
mov
stos
sub
cmp
test
imul
mov
popa
dec
mov
xchg
fwait
jmp
in
lock
icebp
pop
cmp
sbb
loop
out
cli
xchg
out
ret
jge
sub
jecxz
jae
sbb
sub
pushf
push
fs
push
mov
inc
adc
into
sub
or
ret
xor
jbe
jp
jae
mov
call
fiaddl
sbb
leave
push
popf
add
sub
or
fstpt
std
in
icebp
ja
aaa
idivl
xchg
mov
sbb
or
sbb
push
ja
jne
jp
mov
xchg
call
pop
insb
xor
pop
and
arpl
loope
cmp
inc
leave
fstps
pushf
scas
mov
push
lret
inc
xor
pop
xchg
pop
cli
cmp
sbbb
fdivr
mov
xchg
mov
insb
dec
cmc
fadd
cmpsl
adc
faddl
add
imul
jecxz
sub
sti
lcall
les
test
jb
cli
fnstsw
call
rcll
sbb
arpl
jle
popf
jl
push
mov
push
insl
daa
dec
pop
xchg
dec
mov
test
js
loope
mov
xor
loopne
adc
aaa
dec
hlt
test
cmp
cmp
lds
xchg
clc
mov
mov
ds
sub
jp
out
mov
add
add
out
pop
jg
aam
push
add
inc
data16
outsb
push
mov
jns
mov
ds
sub
sbb
push
xor
outsb
xchg
mov
cmp
jg
adc
pop
mov
sbb
test
insl
adc
inc
xchg
jle
mov
jns
shl
aaa
ret
lods
push
sbb
jg
sub
leave
in
lock
adc
notl
fwait
mov
push
js
dec
push
push
add
pop
jecxz
xor
jo
inc
adc
xchg
out
sarl
lahf
pop
es
les
cmpsl
mov
adc
jg
and
jmp
pusha
test
aad
dec
lods
sub
negl
pop
popa
pop
xor
cmp
mov
dec
jp
dec
mov
cmpsb
pop
shl
mov
cltd
in
notb
mov
insb
pusha
clc
mov
add
stc
cmp
test
cmp
mov
lea
jb
clc
jmp
movl
pushf
lea
jmp
test
js
scas
push
xor
and
lret
jns
scas
jmp
jmp
push
orl
dec
adc
outsb
mov
fadd
sbbb
out
fistpl
insb
addr16
adc
hlt
repz
fdivrs
xor
and
out
xor
push
outsb
cmpsb
and
les
in
cmp
mov
iret
lock
outsb
jo
inc
scas
adc
xchg
xchg
xchg
addl
mov
js
dec
imul
pop
xchg
jg
stos
insb
inc
push
pop
ret
xchg
loop
js
les
inc
data16
insb
push
mov
mov
jnp
subb
mov
sub
lods
fnstsw
mov
loop
scas
jmp
outsb
add
rclb
imul
mov
mov
loopne
cmpsb
adc
mov
xchg
cli
not
test
rcll
aas
arpl
mov
pusha
insb
mov
inc
push
clc
and
bound
mov
in
ja
les
scas
dec
lock
repnz
pop
jmp
cmpsb
in
mov
mov
dec
ljmp
push
ficompl
aaa
push
out
jnp
dec
and
and
mov
push
notl
loop
push
pop
sub
adc
insl
add
jl
xchg
aaa
cmp
loope
outsl
push
jp
add
aam
pop
dec
scas
outsb
mov
and
sbb
jnp
ja
jmp
loope
cmpsb
lret
icebp
pslld
pop
lods
dec
jmp
je
push
popa
xchg
xor
popf
outsl
cmpsl
mov
inc
fidivrl
lcall
push
jb
cmp
enter
mov
jl
lock
push
mov
jmp
mov
cld
les
jge
cwtl
mov
push
and
dec
cmp
sub
filds
jg
ds
cltd
lods
shl
mov
jno
jne
les
sbb
sbb
dec
out
nop
repz
jge
mov
in
mov
es
je
sbb
movsb
pop
in
cld
fdivrs
sbb
fisttpll
dec
xchg
mov
pusha
xchg
lea
jno
pop
cmc
sub
in
leave
in
push
enter
inc
ficoms
xchg
mov
push
jmp
cli
bound
sub
add
sbb
mov
cmp
add
sub
add
xor
test
xor
pop
sub
add
xor
jp
and
pusha
sub
add
xor
das
push
sub
push
cmp
add
sub
add
xor
and
sub
add
xor
mov
and
add
xor
int3
shll
sub
add
add
add
cmp
add
sub
add
add
and
mov
cmp
add
push
sub
test
sub
add
jne
je
les
and
jbe
int3
cld
inc
add
fcmovu
xchg
jp
fstps
outsl
rorb
adc
xlat
mov
or
sbb
fwait
add
jl
lret
lock
ss
push
mov
mov
jb
aam
daa
shll
std
loope
stos
push
cmpsl
xchg
fwait
nop
je
fiaddl
mov
jbe
mov
mov
mov
pop
lock
mov
pop
xchg
daa
leave
push
ret
inc
popa
les
iret
rcr
repnz
outsb
out
jb
data16
xor
xchg
pusha
int3
cltd
lret
or
dec
sbb
xor
ficompl
fmuls
cmp
nop
mov
cmp
sahf
sub
xor
adcl
push
dec
pop
cmp
insb
inc
xchg
xor
xchg
mov
dec
das
xchg
cmp
cld
inc
add
lcall
push
cmp
nop
push
pusha
push
movl
pusha
pushf
pushl
movb
lea
jmp
mov
lea
je
bt
clc
test
stc
add
btc
mov
sub
cmc
bts
rcl
shr
pushf
rcr
cmp
movzbl
mov
stc
shr
jmp
cmc
jmp
call
bt
xor
push
cmp
jmp
stc
sar
push
lahf
xadd
mov
clc
sub
or
cwtl
shr
push
pusha
mov
lahf
lea
aam
btr
mov
cwtl
mov
stc
mov
test
test
pushf
pusha
jmp
movb
cmc
cmc
repnz
jmp
sub
mov
cmp
rolb
sub
pusha
lahf
daa
negb
js
fldcw
adcl
dec
mov
mov
test
ret
sub
pop
mov
xchg
mov
notb
into
inc
jns
arpl
std
clc
and
cs
bound
and
xchg
dec
pop
adc
xchg
nop
inc
es
mov
enter
pop
jmp
and
xchg
xchg
sub
inc
insb
push
jg
or
je
aad
pop
mov
add
aad
xor
or
sbb
inc
push
xchg
push
push
in
out
cmp
cmp
lock
xchg
leave
xor
push
sti
fdivrs
and
arpl
mov
pusha
mov
pop
in
cmpsb
out
frstor
pushf
in
in
jle
pop
icebp
enter
sub
push
push
xor
sub
enter
xor
mov
pop
out
jnp
jg
xchg
mov
or
jb
xor
jne
cwtl
dec
and
hlt
sbb
cmp
hlt
xor
dec
nop
sahf
dec
icebp
in
movb
pusha
lea
jae
shrd
bsf
cmc
xadd
mov
pusha
shl
pusha
call
lret
jno
les
shl
xchg
mov
cmpsl
js
pusha
sbb
lds
mov
mov
pop
jg
mov
outsb
movsl
sbbb
nop
lea
cmpsl
add
mov
inc
clc
imul
mov
std
xchg
stc
push
loope
and
adc
add
and
adc
ljmp
pop
ds
scas
dec
jne
dec
enter
add
dec
xor
out
orl
mov
sub
xor
cmpl
adc
and
sahf
jo
call
and
call
sbb
sub
iret
gs
andb
fcoms
shrb
sub
lcall
mov
fcmovu
jle
pop
dec
in
stc
add
cmc
repnz
nop
out
mov
push
loopne
int
clc
and
and
call
cmp
jnp
out
ja
movl
jmp
lea
pusha
pusha
call
jmp
adc
jo
les
imul
pop
cli
popf
jg
push
xor
outsb
hlt
push
push
dec
inc
rorb
jb
inc
pand
adc
mov
inc
fcomps
xchg
xchg
xlat
loop
mov
mov
inc
imul
cmp
in
push
rep
xor
mov
insl
lret
add
sub
shll
inc
mov
and
out
aad
movsb
dec
xor
inc
mov
fldl
mov
adcl
or
add
mov
daa
int3
cs
cmpsb
pop
icebp
pop
jo
bound
fwait
add
xchg
incb
add
insb
adcb
cmp
xchg
loope
jle
stos
in
test
fisubl
shll
add
mov
cmp
xchg
mov
xor
loopne
or
lds
and
add
sahf
imul
xor
cmpsb
cmc
testl
insl
lcall
sub
cmp
sub
jge
mull
add
rolb
jae
movl
call
pusha
lea
je
push
pusha
cmp
push
lea
jne
push
inc
pusha
pushf
pushf
pushl
inc
pushl
movw
lea
jmp
pusha
lea
ja
stc
push
bt
bt
add
lea
cmc
or
call
outsb
mov
sub
ret
pusha
pop
jmp
aam
push
mov
lret
mov
mov
outsl
add
pop
cmp
push
loope
test
dec
jge
ja
pop
jbe
ffree
notb
rclb
sub
inc
xchg
jg
mov
fs
sbb
jae
inc
addr16
movsl
add
xchg
mov
mov
lods
push
cmp
popa
mov
aas
dec
mov
enter
mov
fiadds
add
xor
bt
cmp
pusha
call
pop
loopne
outsb
or
mov
push
jbe
aas
jmp
cmpsb
lahf
fs
fidivrs
mov
jl
movsl
jbe
or
mov
mov
cltd
rorb
pushw
ret
add
cmp
mov
sarl
jbe
push
lock
jo
add
cli
out
mov
lcall
testl
push
sub
jbe
add
mov
xor
pop
test
pusha
mov
movsb
xchg
cmc
sbb
cld
data16
out
outsb
repz
xlat
lods
sub
push
fisttps
outsl
insb
shlb
loope
mov
dec
mov
xchg
cmp
daa
stos
repnz
lock
cmp
pusha
and
mov
je
mov
loopne
jb
jl
int
sub
in
xchg
mov
lea
pusha
jmp
jbe
jb
imul
add
jne
sti
decl
test
in
btr
pusha
sub
pop
mov
add
rol
rol
add
pushf
ror
sbb
mov
cmc
pushf
test
jmp
lods
insl
es
or
jo
mov
addr16
lret
insb
aam
mov
inc
mov
cli
sarl
inc
xor
test
add
nop
add
mov
int
sahf
mov
xor
data16
out
addl
and
iret
cld
and
insl
lds
mov
sbb
mov
xor
icebp
add
xor
jecxz
adc
and
or
in
out
sbb
mov
lcall
add
add
sub
das
call
mov
pop
xchg
pop
jmp
jge
mov
jo
mov
sti
fstpt
pusha
shlb
pop
push
notl
loopne
add
adcb
push
addl
cltd
int
ss
push
cltd
or
sub
mov
and
add
in
js
dec
cld
jge
in
mov
pop
out
les
shl
orl
ret
xor
out
movsl
rcrb
fnstcw
push
mov
cld
movsb
mov
je
xchg
inc
int3
iret
ljmp
data16
or
and
cmp
jge
add
dec
push
scas
pxor
dec
clc
loopne
nop
into
mov
pop
add
xchg
sti
cmp
jbe
into
push
das
faddl
bound
dec
cld
test
xchg
in
inc
iret
xor
lods
sub
aam
jl
fs
cmp
dec
in
fs
xor
into
fmull
push
dec
movsb
adc
pop
sub
ljmp
aas
loope
cmp
mov
lret
les
xchg
stc
and
xchg
jmp
dec
scas
sarb
jmp
push
sbb
pop
mov
imul
popa
repnz
jmp
loop
pop
sbb
lds
pusha
dec
jno
cmp
popf
dec
or
in
pop
pop
push
xchg
inc
add
cmp
iret
jnp
insl
mov
mov
insb
out
xchg
xor
xchg
mov
test
sarl
adc
and
inc
xor
rorb
add
add
add
push
lea
jmp
lea
jae
xor
neg
mov
call
lea
je
bt
pushf
clc
add
bt
cmp
jmp
lea
jae
shr
bsf
pushf
mov
rcl
rcr
clc
mov
pusha
seta
mov
stc
movb
cmp
call
fsts
push
les
mov
xor
std
pushf
add
mov
push
jp
scas
incb
jne
cmpsl
mov
xor
incb
scas
mov
lcall
cmpb
cmp
fadds
sub
shlb
mov
lret
mov
adc
inc
dec
lcall
push
ret
shrl
mov
and
mul
xchg
jge
test
sahf
es
add
lods
inc
push
imul
ds
shll
in
or
aad
xchg
test
mov
push
pop
push
xchg
jp
mov
scas
sub
adc
ja
pop
ret
stos
clc
jecxz
bound
jbe
push
sbb
outsb
cmp
lret
add
push
push
mov
lcall
and
in
sarb
negl
ss
push
lcall
sbb
movsb
enter
cmp
add
and
pushf
test
jmp
sub
push
mov
mov
sbb
cld
add
loop
mov
test
mov
mov
and
add
xchg
jge
jo
into
adc
bnd
outsl
mov
shll
jo
xchg
scas
imul
cmp
xlat
cmp
push
push
paddsb
sbb
scas
sub
jmp
and
xor
cli
lret
push
mov
std
dec
xor
adc
nop
call
jle
mov
mov
push
push
mov
mov
mov
rcr
inc
loopne
jmp
mov
jge
pop
jns
rcrb
out
xchg
inc
out
and
inc
enter
cmpsl
loop
mov
ss
and
cld
push
jno
add
rcrl
fldenv
push
lods
cs
push
lock
adc
fs
pop
xchg
mov
or
and
adc
xor
lea
or
dec
jne
aas
in
xor
addr16
mov
and
jne
mov
das
sub
push
call
jb
sub
or
sub
pop
jge
sub
sub
jo
icebp
push
mov
cltd
inc
mov
and
dec
pop
fsubs
rorl
cmp
push
adc
nop
mov
xchg
xchg
shr
test
mov
cs
xor
xchg
lods
adc
lods
inc
sarl
mov
enter
xchg
mov
mov
xor
push
mov
add
popa
insb
inc
jb
gs
stos
and
fimuls
adc
pop
ss
test
addr16
test
insb
pop
fldenv
mov
movsb
or
fdivr
es
jae
inc
daa
lret
je
shrb
repnz
ljmp
xor
pushl
pushf
pushf
lea
jmp
mov
lea
call
push
pushf
mov
pusha
mov
pusha
pushf
pushf
pushf
lea
jmp
mov
push
call
fistps
addr16
int3
jo
xor
cmp
mov
sub
mov
mov
fldenv
jns
popa
bound
jnp
inc
imul
inc
out
ljmp
add
enter
cwtl
dec
jl
mov
mov
mov
pop
test
and
jae
imul
inc
push
pop
push
in
adc
fld1
inc
jge
jge
pop
loopne
shll
xlat
and
js
sub
jns
inc
lock
mov
in
sub
jmp
push
add
or
xbegin
out
sub
test
inc
std
aas
es
or
push
and
jb
mov
mov
sbb
cmpsl
mov
lea
jb
fcoml
xchg
call
push
sbb
add
mov
mov
add
ret
inc
fs
mov
add
xchg
iret
testl
cmc
pop
lods
push
nop
pushf
lea
mov
pusha
pushf
push
movl
mov
bswap
pop
pushf
mov
pusha
pushl
pushl
ret
mov
les
sbb
shlb
xor
fisubrl
xchg
xchg
sarb
icebp
cli
addr16
adc
xlat
andps
stos
mov
sbb
xchg
inc
fsubrp
xchg
scas
adc
lret
adc
mov
adc
lock
inc
addl
inc
mov
out
in
mov
pop
jle
xorb
cmp
hlt
mov
adc
fcomp
outsb
in
push
sbb
rcl
pop
jno
pop
shr
jp
xlat
add
jge
es
aad
mov
es
and
mov
xlat
es
mov
inc
or
cwtl
fcompl
mov
popf
push
scas
pop
push
pusha
lea
jne
call
movl
lea
je
bt
clc
cmp
pushf
lea
je
cmp
cmp
call
cmp
fwait
add
mov
out
xchg
cmc
pop
pop
ret
gs
xchg
push
push
lea
xchg
pop
out
jbe
mov
inc
sbb
jno
sbb
cmpsb
js
cltd
mov
mov
mov
imul
loope
jne
mov
inc
xchg
pop
arpl
sbb
mov
jmp
mov
xor
std
jae
pop
mull
inc
not
popa
mov
inc
out
jno
loopne
push
rorb
out
iret
cmp
inc
addr16
pop
inc
mov
dec
jno
fbstp
popf
enter
push
lea
je
movzbl
movsbl
lea
mov
cwtl
lahf
push
movzbl
setg
pushf
setbe
lea
pushf
movl
push
pushl
popl
pushl
movl
pusha
pushl
ret
cmp
mov
dec
mov
sbb
push
adc
stos
xchg
loopne
xchg
mov
xor
add
adc
mov
mov
pop
mov
jl
inc
mov
adc
data16
gs
xchg
jmp
push
out
lret
lock
jge
jmp
movb
jmp
lret
arpl
shl
ja
cmp
inc
arpl
push
arpl
dec
xor
pop
in
mov
mov
jecxz
aam
outsl
lds
imulb
mov
fwait
je
aam
shl
add
xor
loope
shrb
fcompl
and
out
cmc
cwtl
andl
insb
xchg
ljmp
and
pop
and
movb
mov
jmp
jg
or
leave
mov
faddl
and
xor
and
jl
or
jne
sub
mov
and
and
scas
push
xlat
xor
test
lock
adc
clc
mov
or
divl
mov
xchg
fsubrl
pop
lock
outsb
fnstsw
xor
and
lds
mov
cmp
push
push
sar
pop
shll
rorb
fwait
or
dec
cwtl
fs
ret
xor
pop
sub
pushf
out
cmpsb
add
cwtl
inc
in
icebp
push
jg
dec
jne
pushl
shlb
dec
bound
les
inc
insb
or
repz
cmp
lret
cmp
lea
mov
lock
pop
jmp
sub
enter
lret
mov
xor
pushf
xor
addr16
ficoms
mov
das
mov
cmp
outsl
mov
dec
js
inc
xchg
jno
mov
enter
ret
insb
mov
jmp
pop
jge
mov
push
addr16
out
xchg
pop
cmp
scas
fld
es
pop
jg
iret
rclb
add
test
push
call
pushl
lea
jne
bswap
rcr
sbb
btr
mov
clc
add
pushf
call
cmc
stc
pushf
pusha
imul
clc
pushf
cmp
cmp
add
mov
pushf
movl
lea
jmp
mov
jmp
test
jge
or
xor
mov
lds
sub
jmp
hlt
jge
xor
lds
jo
mov
xchg
xorb
aaa
fucom
mov
addr16
addr16
call
rcll
ljmp
or
xorb
mov
cmp
addl
dec
mov
testl
inc
jmp
jb
add
or
pushf
inc
jge
mov
fisubs
or
add
out
iret
jne
cli
pop
inc
arpl
js
cmp
push
fisubrl
or
lahf
or
xchg
fdivs
and
dec
push
adc
pop
shl
add
jle
mov
push
cld
loope
lock
daa
sbb
decl
jmp
add
sub
mov
in
lds
jle
cmp
popa
or
jae
inc
mov
mov
sub
js
inc
outsb
nop
ja
push
scas
xchg
cmp
inc
lahf
ja
sub
push
and
pop
xlat
pop
sub
pop
or
and
insl
push
jbe
cli
pop
sti
and
lods
adc
add
sbb
std
mov
jns
xor
addr16
push
hlt
popf
ret
nop
test
push
sub
arpl
dec
sub
add
fiaddl
ss
push
xchg
mov
or
xor
out
mov
jle
loop
or
popa
xchg
push
or
aas
cli
jecxz
dec
lea
int3
rorb
je
or
clc
gs
pop
mov
and
mov
fwait
add
iret
mov
subl
xor
hlt
lea
sub
pop
or
clc
test
das
mov
add
jae
fldl
imul
adc
or
jg,pt
adc
ljmp
andl
jmp
testb
cli
enter
pop
pop
jbe
sbb
mov
icebp
scas
in
stos
in
push
fisubs
mov
fldl2t
into
fistpl
mov
mov
shr
aaa
cmc
pop
les
dec
and
int
sahf
in
push
or
data16
lret
negl
sbb
icebp
pop
mov
cmp
es
ljmp
ja
leave
push
dec
xchg
xor
jge
adc
imul
add
push
dec
inc
mov
scas
xchg
cmp
outsl
arpl
and
and
icebp
repz
aaa
dec
pop
inc
arpl
hlt
xorl
inc
stos
xchg
and
xchg
cs
and
ljmp
add
or
fisttpll
inc
and
stc
cmpsl
mov
pop
and
mov
hlt
lds
pusha
dec
scas
sbb
add
push
enter
cmp
dec
flds
mov
test
mov
in
pop
xchg
jbe
xchg
cmp
mov
loope
or
cmp
ss
es
dec
or
sub
ret
aaa
inc
sbb
pop
adc
mov
loop
aaa
mov
dec
stos
mov
mov
jb
sbb
mov
sarb
out
hlt
sbb
and
loope
stos
lods
push
push
lods
pop
cmp
or
pop
loope
cmp
aad
push
adc
int
ret
shll
push
sbb
jns
add
mov
push
xlat
jmp
popa
push
shlb
fcmovu
jo
cmp
pop
cmp
adc
in
or
mov
jbe
stos
pop
push
ret
pushf
cmp
push
rcrb
mov
adc
sbb
mov
scas
cwtl
cmpsl
xor
cmpsb
leave
repz
iret
and
out
push
adc
int3
ds
xor
into
dec
cld
and
mov
das
pop
jmp
jecxz
mov
jb
data16
mov
xor
lods
fcmovu
push
adc
sbb
adc
mov
ja
mov
into
xor
xor
cmc
addb
sahf
mov
add
sub
pop
adcl
sbb
imul
jo
push
ja
iret
adc
mov
icebp
push
ret
sub
inc
test
push
fwait
mov
cmp
xchg
lcall
cs
add
ret
cwtl
jne
sbb
or
outsl
xor
ret
in
push
adc
xlat
xchg
nop
and
xchg
std
lret
mov
fs
mov
or
or
fsubr
neg
add
and
out
pop
inc
lods
xchg
xchg
dec
testl
xchg
in
scas
rcll
push
iret
shlb
fisubrl
cmp
add
out
pop
adc
xor
sub
jno
out
out
sbb
jmp
pop
push
ja
ret
in
push
lcall
push
mov
insb
or
push
mov
cmp
ds
xlat
inc
arpl
jmp
jmp
pop
mov
mov
lock
popa
bound
sbb
lret
fs
aad
icebp
clc
inc
push
pop
daa
testb
daa
pop
test
jg
decb
lea
push
inc
sbb
nop
loope
xchg
adc
mov
andb
mov
push
mov
loope
jo
addb
push
adc
cmp
jmp
ss
push
dec
fdivr
cld
mov
pushf
mov
je
popl
push
aaa
addb
ret
les
sub
mov
push
inc
xor
stc
lods
sub
call
fwait
pop
shrb
or
into
lret
jecxz
dec
jnp
aas
xchg
shll
movsl
daa
js
adc
lahf
pop
add
jnp
and
mov
jecxz
cmc
pusha
dec
ret
mov
push
fdivs
jmp
ja
sbb
add
dec
cmp
inc
push
cmp
fsub
jne
and
pop
mov
out
cmpsl
cmc
das
lret
sub
imul
dec
aam
xor
in
jbe
xor
jno
add
xchg
jge
es
inc
dec
faddl
inc
add
sub
shlb
popf
xchg
add
fcomps
clc
mov
test
lret
mov
jge
leave
mov
xchg
faddl
pop
rol
pop
stos
fidivs
xchg
push
lods
ret
outsb
push
jg
xchg
jae
dec
mov
imul
xlat
inc
sub
sarl
push
inc
sub
stos
mov
insl
fs
sbb
mov
and
mov
cmpsb
lret
xchg
sub
or
adc
mov
rcll
std
hlt
adcl
xor
fwait
push
pop
jbe
cli
lods
push
daa
into
cltd
sub
and
xchg
push
lods
data16
xchg
inc
movsb
push
fcmovne
mov
jns
adc
iret
call
sbbl
ja
inc
cmpb
jo
sub
outsl
dec
pop
mov
dec
dec
faddp
add
clc
test
mov
pop
push
jle
imul
xor
push
xchg
pushf
sub
imul
in
dec
xchg
outsl
sub
iret
and
in
mov
xlat
cmc
nop
pop
mov
lods
fimuls
push
clc
stc
arpl
cli
sbb
inc
cmp
push
xchg
repz
out
pop
pop
push
in
push
mov
out
cmp
sub
dec
xchg
sbb
sub
jmp
mov
out
fstl
ret
loope
in
dec
pop
inc
inc
scas
jnp
out
fidivs
mov
insb
jns
xchg
jp
push
cmp
inc
dec
mov
jo
sti
lods
push
clc
push
rorb
pusha
jb
xchg
jge
sbb
sarl
xchg
cmc
jp
mov
dec
and
dec
inc
std
push
insl
push
xchg
dec
jns
xor
inc
xchg
in
outsb
and
stos
in
aas
and
dec
mov
sbb
addl
dec
scas
adc
jnp
xchg
push
pop
cmp
cld
ja
push
jae
add
inc
push
and
sbb
jmp
stc
loopne
pop
pop
xor
arpl
arpl
mov
lods
xchg
repnz
std
cmpsl
dec
fcmove
cmp
sarl
enter
inc
scas
cmpsl
rclb
sub
sahf
xchg
inc
adc
fisubrs
dec
sbb
pop
add
sti
dec
jmp
jle
js
cld
lret
inc
push
cltd
mov
cmc
movsb
bound
push
xchg
cmpsb
mov
pop
inc
into
ret
mov
mov
fs
insb
cld
xchg
icebp
push
aam
in
nop
dec
xchg
icebp
jbe
jbe
dec
pop
cmp
xor
xchg
std
aad
adc
leave
push
dec
sahf
mov
loope
dec
test
push
mov
cmp
movsb
into
int
gs
mov
mov
fwait
dec
insb
jno
xchg
nop
xchg
arpl
dec
mov
shrb
push
xchg
jae
cmp
add
xor
inc
lods
xchg
and
in
pop
addr16
mov
mov
cli
cmp
arpl
dec
mov
push
adc
mov
ret
lods
into
shll
movsb
repz
sti
and
fxch
es
xlat
inc
mov
jecxz
icebp
sbb
je
xlat
push
mov
inc
fnstcw
repz
movsb
mov
xchg
ds
xchg
std
fsub
shll
mov
jl
and
and
data16
rcr
cmp
std
mov
push
adc
push
shrb
xor
sub
lea
sub
xor
es
fstp
xchg
cmpsb
cmpl
mov
or
cs
sbb
mov
scas
ret
aam
mull
xor
sbb
popw
js
lret
lret
lcall
inc
movsl
mov
pop
adc
popf
push
mov
test
popa
lea
fsubrs
push
test
or
dec
mov
sbb
shlb
jbe
leave
push
dec
ret
jns
xchg
mov
pop
test
std
push
and
aaa
ljmp
mov
aaa
xor
je
adc
push
dec
aam
and
inc
adcl
push
js
jae
or
fidivrl
mov
xlat
pop
lods
in
out
lret
inc
call
push
jne
movsl
daa
and
or
ret
dec
xchg
pop
add
mov
sbb
mov
into
mov
sub
or
fcomps
sahf
jl
aaa
pop
enter
in
mov
xchg
jl
pop
cmpsl
ljmp
out
testl
adc
sub
dec
stc
out
shlb
add
mov
daa
mov
xchg
sbb
daa
icebp
lock
enter
rcl
bound
je
movl
mov
pop
sbb
cmp
lds
or
es
movsl
cmp
mov
daa
jbe
je
and
jmp
mov
pop
push
andb
lahf
inc
push
mov
imul
and
in
fdivr
js
push
pop
shll
xchg
fcoms
and
je
or
mov
scas
aaa
les
xor
fcoml
outsb
fwait
dec
mov
mov
fsubs
rorl
mov
sub
jno
les
fldt
xchg
mov
mov
loop
insl
xchg
mov
loope
push
arpl
xchg
data16
cwtl
cmp
lds
dec
mov
mov
stc
bound
std
arpl
push
enter
insl
out
mov
icebp
ljmp
fwait
push
inc
js
lahf
xchg
sarb
ljmp
lods
lock
and
orl
lods
filds
and
inc
or
sub
stos
clc
insb
mov
imul
jmp
and
cmp
scas
mov
dec
addb
pop
pop
scas
das
int
jns
in
push
mov
popa
jp
adcb
push
cli
test
js
cwtl
gs
xor
aam
mov
mov
mov
xchg
add
call
add
rcll
fildl
sbb
xchg
clc
fs
lret
popa
faddp
inc
dec
xchg
mov
mov
jae
imul
add
popf
mov
fistpl
jmp
mov
imul
leave
push
dec
xor
loop
ljmp
pop
call
movsb
dec
mov
mov
add
and
das
sbb
iret
mov
leave
das
fwait
pop
aas
sti
cmp
xchg
test
mov
lahf
and
xchg
jl
push
mov
and
cwtl
int
rolb
call
int
js
addr16
loope
push
sahf
cmpsb
addr16
pop
adc
rol
jbe
ds
xor
dec
pop
adc
test
pop
ljmp
pop
aaa
pop
enter
jns
jo
pop
test
pop
aas
dec
xor
cld
lret
fs
roll
mov
xor
xor
and
or
repz
xor
mov
dec
xor
pop
jno
jbe
pop
mov
imul
cmpsl
bound
int3
mov
xlat
inc
sub
ss
je
push
je
lds
outsb
jo
or
or
popf
pushf
add
pop
out
xor
pop
sub
imul
jmp
stos
adc
cmc
jno
mov
sti
add
xor
jge
call
sub
and
not
subl
jnp,pt
dec
dec
int
jae
addr16
addl
int3
xor
shrd
dec
or
push
pusha
push
movsl
es
out
das
faddp
imul
movsl
data16
jl
add
inc
mov
sbb
addr16
xor
test
add
enter
lock
lcall
in
push
xor
xchg
xchg
push
or
or
mov
lret
pop
fdivrl
jle
rorb
test
push
xchg
pop
cmp
fstl
mov
int
mov
xchg
dec
jns
jecxz
lea
out
shrb
aaa
ret
or
cmp
xchg
jnp
repz
sub
mov
je
mov
sub
adc
jae
xchg
shll
and
push
gs
jg
dec
mov
icebp
jle
cmpsl
out
cmp
mov
imul
pushf
or
inc
daa
dec
dec
mov
adc
mov
arpl
add
lret
inc
xchg
push
imull
rclb
sub
inc
and
xchg
dec
mov
cmpb
jl
sub
test
faddl
cmp
in
inc
cmpsb
icebp
pop
dec
and
xchg
daa
pop
jmp
jb
cmp
bound
adc
icebp
test
pop
inc
fucom
cmp
ficoms
and
cld
pop
ret
add
outsl
xor
xor
bound
and
sbb
out
xchg
fwait
add
dec
fnstcw
sarl
mov
ret
sub
mov
fisttps
cmp
inc
cmp
aaa
popa
pusha
sbb
int
mov
inc
push
xchg
cmpsb
xor
pop
sarb
bound
ljmp
fisttpll
and
jb
sub
mov
in
mov
push
sbb
cmp
adc
inc
scas
jns
cmp
ret
sub
adc
inc
stos
fwait
mov
adc
mov
nop
in
jg
inc
xor
stc
in
ret
push
arpl
xchg
idiv
push
lods
aam
pop
mov
test
mov
mov
repnz
adc
push
mov
cmp
int
popf
pop
dec
add
xor
dec
xor
aaa
clc
or
insb
push
push
xchg
pop
imul
xor
add
adc
jge
sbb
aaa
sbb
push
xchg
aam
popa
inc
leave
sub
pop
fisttpl
popa
rolb
cmp
push
fidivrs
cs
xchg
sbb
xchg
inc
and
cmpsl
cmpsb
pusha
inc
mov
int3
pop
fnstsw
xor
lea
xchg
mov
mov
cwtl
cmc
sbb
xchg
test
inc
inc
cld
inc
mov
lret
popa
outsl
arpl
repz
pop
stos
sub
cwtl
mov
cmpsb
psllw
cmp
outsl
jge
jae
test
mov
pop
bound
mov
cmp
clc
push
sbb
clc
sub
je
cmpsl
fwait
lret
aad
push
pop
pop
jle
add
push
out
push
pushf
enter
into
and
lods
and
pop
bound
movsb
push
mov
push
or
sarb
and
aad
cmpb
jecxz
stos
sbb
add
push
bnd
push
xchg
add
dec
mov
sbb
clc
gs
inc
mov
sbb
xchg
adc
cmp
mov
cli
arpl
push
scas
add
movsl
xchg
add
sub
adc
or
hlt
xchg
xchg
inc
and
lock
call
stc
add
cwtl
sub
pop
xor
sbb
jb
inc
sub
in
fs
cmpsl
adc
repz
test
and
mov
sbb
inc
inc
lods
xor
inc
daa
xor
cmp
pop
int3
push
neg
adc
jecxz
push
das
push
mov
or
bound
xor
xchg
pop
jp
xor
movsl
and
pop
mov
sub
test
in
xor
mov
mov
mov
inc
adc
inc
repnz
mov
popf
or
mov
cmc
aam
int3
fcmovb
rcr
outsl
mov
test
mov
lret
ret
jmp
mov
push
pushf
xor
and
addl
cli
mov
arpl
fstpt
stos
scas
imul
sub
mov
pop
dec
mov
movsb
push
fcmovne
jb
mov
iret
pop
shlb
inc
mov
jmp
mov
lods
aad
mov
mov
lea
inc
dec
cltd
inc
stos
pop
push
lds
dec
out
rcr
das
sbb
rcl
mov
dec
lods
clc
in
cld
mov
cmp
repz
inc
ljmp
je
inc
scas
out
mov
mov
inc
mov
xor
lcall
push
lcall
rcr
ljmp
insl
push
mov
pop
sbbl
jge
popf
dec
pop
ljmp
push
shlb
pop
pusha
dec
mov
inc
icebp
adc
jnp
mov
ret
movzwl
cmp
cld
add
aad
andl
xor
sub
pop
pop
ret
jb
stos
idiv
sbb
pop
mov
pop
fsub
push
das
sub
cmp
xor
test
xchg
dec
lea
or
xor
shlb
orl
adc
adc
and
pop
jo
cli
movsb
dec
dec
add
addr16
ror
add
mov
sahf
mov
jl
sarb
xchg
xor
ds
sub
push
xor
jns
repnz
adc
leave
enter
fisttps
push
mul
inc
inc
dec
ss
fildl
push
xchg
and
hlt
fsubl
cmp
adc
out
test
jb
inc
enter
loopne
pop
mull
mov
test
mov
jns
dec
test
mov
mov
js
rclb
inc
fcomip
add
sti
mov
xor
lods
xchg
jae
mov
pandn
rol
insl
out
mov
mov
jge
or
push
xor
inc
inc
fnstcw
outsl
jge
jne
inc
nop
mov
sub
push
dec
ret
inc
pop
mov
mov
stc
fists
pop
dec
and
jmp
ds
jmp
movsl
divb
in
xchg
fs
push
lods
sbb
add
movsl
mov
xchg
cwtl
pop
enter
pop
sbb
aaa
mov
std
stc
pop
jle
clc
pop
repz
pusha
test
mov
shll
mov
arpl
mov
xor
jle
sub
scas
adcb
cltd
es
pusha
lea
xchg
addl
icebp
dec
xchg
xchg
dec
mov
pop
mov
je
push
inc
lds
insb
add
xor
in
shl
jbe
mov
inc
push
push
xchg
dec
imul
jns
fstpt
arpl
ljmp
aas
cli
imulb
mov
xchg
loop
loop
andl
add
mov
outsl
pop
shl
pop
mov
push
and
xor
pop
std
shlb
cltd
ds
adc
dec
add
xchg
movsb
lods
xor
sti
outsl
add
dec
mov
push
jb
mov
or
and
dec
fisubl
js
add
jae
inc
idiv
push
xchg
pop
fisttps
shrb
movsl
lea
sarb
adc
cltd
mov
xchg
jl
sbb
sub
and
fwait
stos
xchg
mov
lods
xchg
push
pop
jno
pusha
hlt
outsl
inc
and
ljmp
iret
lcall
lahf
jecxz
and
das
hlt
fidivrl
cwtl
aam
push
iret
dec
in
inc
pusha
mov
rol
push
pop
inc
jbe
outsl
aad
call
adc
stc
push
mov
fnstenv
sarl
or
inc
or
and
cmpsb
xor
daa
rcrl
jle
loop
and
inc
xchg
js
in
pusha
addr16
out
lock
dec
insb
jmp
sbb
dec
mov
sub
stc
sbb
ja
xchg
sub
sbb
ss
insl
aaa
in
les
add
lods
push
jp
and
pop
or
mov
jo
fs
mov
frstor
iret
js
mov
cwtl
push
xadd
or
adc
hlt
push
push
rorb
mov
loopne
and
movsl
sti
mov
sbb
dec
dec
loop
lods
in
cmpsl
mov
das
out
fildl
psadbw
nop
mov
mov
add
sub
jne
orl
add
and
iret
adc
jnp
loope
imul
subb
sahf
mov
add
pusha
rolb
inc
cmpsl
enter
lcall
xchg
pop
bound
addr16
pop
sub
cmpsb
add
push
loopne
sbb
lock
xor
cld
mov
push
jp
and
hlt
rep
repnz
inc
cmpsl
ss
fdivl
mov
dec
rcrl
pop
push
mov
sub
in
lahf
movsb
push
rcll
ljmp
push
int3
out
inc
sub
push
cmp
hlt
push
push
aas
or
xchg
push
add
jo
cmp
sub
aam
outsb
inc
shrb
adc
jne
mov
or
ficoml
cwtl
fdivs
andb
push
cmp
in
xor
stc
in
js
sbb
or
and
inc
dec
mov
sbb
inc
and
jle
inc
hlt
push
roll
call
push
sbb
push
adc
sbb
icebp
sbb
popf
jg
inc
ret
jb
inc
std
stc
add
xor
jmp
xor
jp
jge
iret
mov
mov
sub
popa
adc
int
hlt
fiaddl
mov
pop
adc
mov
in
push
sahf
sbb
mov
push
push
xchg
inc
bnd
fmull
cs
mov
mov
in
jle
push
arpl
in
xchg
stc
cmp
xchg
jmp
fcmovnb
mull
and
xchg
add
sarl
jle
cmp
jo
bound
imul
je
daa
js
ret
cs
out
cmp
add
xlat
stc
enter
mov
loop
jno
sbb
fiadds
cld
or
jne
fstl
push
push
lret
inc
xchg
xchg
jmp
xchg
stc
loope
push
mov
and
inc
rorl
scas
inc
pop
out
cwtl
inc
mov
jnp
mov
mov
mov
scas
mov
dec
xor
out
repz
mov
pop
lret
mov
push
imul
sub
sub
test
outsl
popf
mov
mov
ja
ret
xor
jp
xchg
mov
ret
pop
mov
dec
inc
or
xchg
and
shl
pop
cmp
and
stc
sbb
test
jmp
cmp
arpl
mov
mov
test
mull
pop
sub
aaa
imul
jno
adc
cmc
mov
bnd
clc
cmp
dec
xchg
pop
and
fwait
push
orb
ss
std
popw
pushf
sbb
push
cmp
pop
lock
aas
mov
imul
in
push
not
lea
jl
pushf
not
inc
pusha
setle
stos
not
not
jmp
fs
inc
or
cltd
sub
shlb
xchg
jnp
jge
dec
test
fwait
dec
pop
mov
test
jbe
and
imul
ja
mov
insb
push
xor
ficomps
or
adc
dec
inc
lods
shlb
adcl
stos
xchg
test
xchg
jns
or
or
cld
loop
mov
lods
cs
pop
pop
and
cmp
or
or
jnp
adcl
cmp
and
xlat
movsl
push
repz
jecxz,pt
hlt
pushf
les
sub
mov
cmpl
call
ret
rolb
mov
sarl
les
out
hlt
popa
sbb
lods
adc
gs
shll
mov
push
mov
inc
adc
jmp
cli
mov
aas
sub
mov
repz
int3
loope
and
and
adc
into
and
js
jl
aas
in
pop
jnp
sahf
ljmp
in
push
ljmp
xchg
fsubs
cmp
loopne
sti
pop
leave
movsb
int
mov
hlt
dec
sahf
nop
ficoml
sbb
push
sbb
call
out
stc
popa
add
addl
insl
adc
not
call
jp
mov
or
std
addr16
imul
pop
inc
loopne
mov
push
adcb
divl
fadds
es
aas
jo
clc
neg
sbb
add
jo
cmp
cmc
jge
xchg
mov
mov
pop
cli
mov
jnp
out
in
shlb
adc
inc
pop
pop
xchg
movsb
mov
ret
push
pusha
xlat
jg
std
outsl
ss
test
mov
sbb
pop
xchg
dec
hlt
xor
leave
pop
int3
adc
cld
dec
or
dec
jle
je
insl
in
push
in
inc
gs
jp
xor
cmp
test
fiadds
xchg
pushf
int
xchg
push
int3
mov
inc
or
les
sbb
xchg
lods
adc
add
popf
and
loope
sub
mov
inc
ja
cmpb
add
lea
imul
xchg
outsb
addb
jle
dec
je
adc
xor
mov
out
jno
xchg
mov
pop
dec
xadd
jnp
dec
fmuls
xlat
cltd
mov
inc
cmc
jg
mov
and
or
jl
inc
xor
mull
pop
lods
cltd
andb
jmp
lods
sub
inc
or
loop
push
jbe
stc
pop
rcr
sub
adc
test
ja
cmp
mov
cmp
subb
sub
jnp
into
cmp
push
outsb
xchg
adc
push
push
int
cmp
cmp
lock
cmp
and
into
movsb
xor
or
push
lret
push
jmp
dec
shl
rcrl
or
fdivrl
stc
jl
outsb
mov
and
sbb
or
filds
pop
sub
in
jge
adc
or
les
dec
sbb
bound
xor
or
mov
je
cmpsl
icebp
sub
mov
sbb
dec
pop
iret
lock
test
mov
dec
inc
xchg
xlat
es
sarb
jl
pop
sbb
inc
out
push
sbb
mov
je
add
cmc
roll
mov
jmp
mov
add
ss
les
lahf
mov
orl
or
cmp
sbb
test
mov
jb
add
and
pop
push
pop
sahf
add
mov
add
sbb
ret
pop
jnp
aas
jae
out
and
push
push
adc
fmull
cmp
push
hlt
cli
mov
int
mov
or
ljmp
push
sub
pop
ljmp
or
ret
push
lock
fmull
dec
hlt
sbb
jecxz
xor
jnp
jae
cmp
iret
repz
jp
je
or
mov
aaa
xlat
negb
popa
test
imul
xchg
loopne
jecxz
xchg
jge
and
push
arpl
dec
cmp
or
aam
adc
add
je
jecxz
insl
xchg
fisubl
mov
inc
xor
arpl
pop
andb
int3
je
std
shl
cmpsb
dec
inc
jae
sbb
xchg
stc
gs
mov
pop
loopne
mov
mov
and
jne
pushf
movzbw
sub
rcl
mov
stc
add
and
ror
mov
stc
call
add
add
frstor
popa
dec
stos
iret
repz
cmp
mov
pop
inc
and
fisubrl
pop
jg
ss
push
push
ret
mov
pop
push
leave
call
sbb
xor
dec
jle
dec
ss
dec
aad
and
rcl
xchg
mov
dec
fbld
andb
adc
call
sbb
dec
lcall
or
aam
jecxz
xor
mov
cmp
jb
lock
push
adc
les
imul
jg
lea
decl
jo
sbb
arpl
aaa
xchg
cmp
stc
sbb
mov
mov
cmc
pop
lret
popa
cmp
jbe
mov
pop
inc
dec
sbb
orl
notl
sbb
sahf
xchg
mov
mov
mov
push
inc
lods
call
popa
in
aas
or
movsl
mov
push
ss
sbb
loopne
call
adc
rcrl
cmpsl
adc
mov
mov
test
xor
sbb
mov
iret
jo
mov
pop
inc
xchg
mov
data16
xchg
mov
xor
mov
and
pop
xorl
or
pop
lods
push
shrl
sub
mov
insb
aad
pusha
test
sarb
mov
in
dec
push
push
adc
or
adc
lds
push
jnp
lcall
sub
into
mov
pop
call
je
adc
inc
cld
jp
andl
jne
rcr
js
mov
das
jbe
cmpsb
lcall
aam
mull
cmp
xchg
mov
iret
push
in
leave
fcompl
or
jb
inc
movsb
push
mov
test
adc
aaa
xor
das
pushf
sub
pusha
call
sub
call
movb
movl
push
push
pushf
pushf
mov
mov
movb
movw
mov
pushl
ret
sbb
xchg
ds
xchg
and
imul
repz
fdivr
mov
adcb
fucomp
jne
sub
pop
dec
rolb
js
push
rcrb
add
mov
outsl
std
mov
adcl
add
mov
rolb
and
sti
imul
aam
add
clc
bound
xlat
mov
mov
sub
mov
loope
adc
sbb
decl
loopne
and
pop
dec
xor
iret
int3
xchg
scas
inc
out
inc
mov
sub
xor
subb
xchg
jns
inc
add
popa
rcrb
cmc
faddl
add
loop
sti
decl
dec
and
push
pushf
pushl
ret
jmp
xor
shl
mov
cmc
push
cmpb
pushf
lea
jne
jmp
call
mov
ss
mov
push
cs
jp
or
rorb
es
lahf
mov
cmp
out
mov
pop
sub
push
in
jbe
stos
test
mov
push
sbb
mov
xchg
popf
xchg
dec
gs
cli
xchg
xchg
jns
int
xchg
and
jmp
push
mov
lds
add
icebp
mov
sbb
dec
arpl
scas
js
mov
lahf
push
fildll
out
pop
jecxz
pop
xchg
mov
mov
pop
out
ja
inc
shrl
arpl
aad
aas
stos
dec
mov
xor
hlt
adc
add
and
das
jmp
or
imull
dec
out
shll
mov
gs
mov
jns
shlb
xchg
mov
stos
xchg
sarb
lods
in
sbb
push
shlb
pop
sbb
mov
fstpt
cmp
nop
cmp
call
popa
adc
cld
inc
jmp
xchg
hlt
fiadds
push
ljmp
jmp
cmp
xor
cmpl
xchg
mov
add
mov
cmp
les
cld
mov
push
xor
mov
mov
xor
leave
add
mov
pop
push
cmpsb
jns
adc
push
cmp
ja
scas
or
enter
test
cltd
push
ljmp
jbe
shll
and
sbb
add
xchg
xchg
js
lret
mov
add
add
adc
dec
les
or
push
js
jp
les
or
iret
lock
mov
cltd
jle
mov
fisubrl
pop
arpl
lcall
sub
pop
fsubs
jmp
ljmp
sbb
movsl
mov
dec
xchg
inc
loope
rclb
mov
inc
sbb
sbb
pushf
test
cli
pop
mov
sarb
sbb
cmp
les
in
into
mov
xor
jbe
jns
xchg
pop
and
add
inc
and
cmp
ljmp
pop
cmp
mov
lea
es
icebp
push
pop
shll
int3
jp
add
loopne
lcall
fs
cs
scas
das
xorb
repnz
iret
cwtl
stos
repz
mov
decb
sbb
xchg
sub
jno
shl
sbb
int
adc
sub
das
imul
adc
push
test
stos
and
loopne
stos
lock
mov
fisubs
dec
shll
es
jecxz
insl
lock
push
int3
lret
inc
mov
mov
push
xchg
inc
pop
lods
dec
cmc
pusha
pop
sub
mov
shrb
xor
int3
adc
fnsave
pop
out
push
or
dec
xchg
popa
out
inc
mov
mov
icebp
imul
out
mov
imul
shlb
adc
ljmp
xor
dec
mov
inc
repnz
das
xchg
imul
fnstcw
rclb
imul
xor
sbb
loopne
loopne
mov
cmc
mov
push
sub
xor
sti
jl
std
mov
scas
cmp
or
lret
gs
stos
inc
cmp
outsb
sub
imul
les
and
dec
xchg
shl
out
or
jl
inc
call
cmc
mov
in
fst
pop
cmp
push
sbb
cmp
in
enter
jb
addr16
imul
jmp
pusha
push
jno
dec
dec
test
fwait
popa
sarl
shlb
imul
xor
subb
pop
pusha
loopne
cmp
or
and
imul
add
pop
mov
sti
insl
roll
jne
dec
loop
jl
and
pop
cs
hlt
addr16
movsl
cltd
fwait
leave
or
sbb
push
gs
push
inc
xor
xor
xchg
outsb
daa
sbb
test
mulb
sarl
clc
mov
sbb
jo
jge
and
xor
lds
shrl
in
push
mov
sub
push
mov
and
repnz
jl
xchg
inc
or
push
cmp
add
clc
inc
jo
and
sub
cmc
inc
lcall
add
and
xchg
push
movsl
in
cmp
mov
decl
xor
aas
mov
xchg
outsl
sub
pusha
cmp
jmp
in
rclb
cmc
ljmp
scas
jp
xchg
pop
in
jno
out
jbe
and
mov
stos
out
imul
sub
sbb
std
jmp
add
jle
test
leave
outsb
pop
icebp
jp
or
ljmp
jno
add
in
repz
imul
into
xlat
stc
add
popl
adc
cmp
jle
sti
fdivl
sbb
jp
scas
mov
iret
jecxz
mov
inc
push
push
out
pusha
xor
popa
mov
shrl
jno
dec
adc
cld
mov
or
std
inc
inc
xor
adc
js
movsb
cmp
sub
out
gs
fstpl
jns
xchg
repnz
jno
xlat
popa
and
mov
test
test
jmp
lods
shlb
jno
mov
inc
cld
jne
xchg
loopne
pop
xor
and
scas
in
out
out
cli
jns
lret
cwtl
sub
dec
push
les
divb
outsl
loop
roll
sbb
punpckldq
or
stos
negl
dec
movsb
xor
dec
sahf
adc
out
jle
out
or
mov
push
add
inc
add
xchg
mov
nop
sbb
mull
clc
fmul
bound
insb
outsb
jno
hlt
bound
mov
loopne
or
enter
sub
test
lock
and
jno
lods
imull
mov
aaa
push
jno
sbb
addr16
and
data16
sub
enter
sub
leave
sub
nop
ja
adcl
jmp
dec
std
shrl
adc
mov
into
sub
scas
out
and
inc
pop
jne
sbbb
inc
xorl
adc
lods
mov
or
pop
and
sub
shl
cmpsb
push
jo
cmpsl
in
pop
jne
outsb
add
insb
sub
jno
cmpsl
pop
push
stc
sub
xchg
sub
cli
addr16
add
loopne
or
pop
push
dec
clc
movsb
jbe
ds
outsl
and
imul
arpl
in
pop
fldcw
in
pop
les
cli
jne
loopne
push
imul
std
call
int
outsb
imul
push
into
jmp
dec
sti
ret
shrb
lock
mov
data16
jo
mov
cli
ds
hlt
pop
inc
pushl
stos
bnd
push
xchg
sub
fptan
call
adc
mov
jnp
je
movl
lock
jle
jl
das
mov
testb
out
cmp
inc
outsl
out
mov
jno
clc
jmp
and
xchg
jo
sarb
sti
shlb
shlb
jbe
mov
adc
popa
test
jb
fs
cld
in
xor
mov
out
mov
insl
js
pop
cmp
test
xchg
cltd
jle
sub
rcll
jae
in
notl
incb
shl
pop
push
popa
outsb
les
insl
arpl
lock
insl
outsl
out
sub
sti
dec
xchg
icebp
icebp
sub
dec
aas
out
cmp
out
mov
sbb
mov
mov
lds
push
or
push
lret
insl
xlat
shrb
movsb
loopne
and
dec
xchg
jne
hlt
aam
popa
repnz
bound
outsb
push
jmp
je
and
stc
fstps
and
mov
mov
jge
hlt
andl
sub
jae
inc
mov
mov
cmp
jbe
pop
insb
in
lea
push
leave
aaa
enter
sub
lock
mov
addr16
mov
cld
cli
push
roll
in
gs
and
imul
jecxz
mov
mov
jmp
or
stos
add
or
test
pop
jnp
stc
sbb
mov
shlb
sub
jecxz
mov
sub
int3
stc
lds
inc
out
cs
arpl
inc
inc
jbe
hlt
mov
lds
out
xchg
loopne
out
inc
shlb
xchg
js
fldt
cld
adc
lea
sub
out
xor
and
mov
adc
mov
xor
lcall
adc
pushf
xchg
imul
dec
cld
pop
hlt
popa
or
lods
ds
repnz
out
out
or
pop
ljmp
jbe
sar
mov
push
stc
cmp
or
xlat
mov
repz
popa
sub
pop
test
hlt
cmp
mov
dec
or
loope
push
bnd
jg
fldl
inc
scas
push
jo
mov
push
push
and
cli
shl
jle
movsb
out
xor
mov
jl
push
nop
rolb
scas
sti
arpl
cmpsl
aas
lock
jle
jae
add
push
dec
and
imul
sbb
and
repz
sar
mull
jle
mov
popa
fcomi
push
lret
int3
cld
outsb
pusha
or
lock
mov
add
call
pushf
and
adc
popa
mov
sub
push
mov
arpl
adc
push
outsl
xor
test
adc
inc
or
xlat
mov
shll
xor
dec
push
icebp
lock
sub
rdmsr
loopne
sub
orl
xor
test
jp
adc
daa
data16
jo
jae
imul
cli
jne
out
jl
addr16
fldl
mov
jo
ljmp
repnz
mov
out
in
mov
adc
mulb
jo
rcrb
call
lcall
enter
fs
enter
xor
jbe
icebp
push
jmp
lods
out
lock
aas
xor
sbb
idivl
adc
mov
fs
inc
jmp
shrl
mov
mov
xor
pop
adc
mov
lock
cmp
push
lods
xor
dec
sub
bound
jecxz
loope
jg
mov
xor
adc
jle
xor
inc
scas
cmpl
dec
jbe
jle
xorps
add
jo
push
inc
out
jbe
jecxz
xor
jae
loopne
add
jbe
inc
clc
jo
lods
movsl
pop
int
ja
outsb
out
loope
shl
mov
jns
jne
or
outsl
mov
roll
cld
jmp
and
sbb
pop
push
icebp
fs
jo
xor
fildll
movsb
int3
adc
lock
imul
adc
sub
orl
lea
push
in
xor
sarb
mov
loopne,pt
in
sti
mov
out
jno
repz
add
jne
icebp
pop
bound
insb
imul
jno
bound
xchg
loopne
or
into
cmp
mov
push
incb
insb
inc
push
jo
scas
jg
outsl
in
shlb
lock
pop
cs
mov
ss
loop
repz
imul
inc
bnd
mov
out
jmp
sarb
push
gs
lret
jns
in
mov
sbb
mov
jno
xchg
filds
xor
fsub
scas
add
fdivr
xor
popa
cmpsl
add
push
in
dec
sub
popa
or
jnp
sub
test
pusha
xor
jb
in
int3
outsb
shrl
jmp
aam
enter
jge
call
repz
xor
cmpl
popa
push
jbe
xchg
loopne
test
xor
jmp
lock
sti
scas
imul
cmc
pop
imul
enter
push
push
push
lock
mov
stc
pop
mov
xchg
push
and
fsubrp
out
lock
es
pop
out
or
jbe
cmpsb
cmp
ds
xor
das
outsl
ja
lahf
mov
cmp
adc
jg
lock
aad
lods
fs
out
inc
loope
negb
push
sub
fcoms
repz
pop
out
push
lods
mov
fdivs
bound
jo
push
add
sbb
mov
adc
imul
xchg
and
test
sub
dec
scas
leave
cli
mov
mov
sbb
jl
mov
insb
cld
push
icebp
outsl
add
imul
jle
call
enter
inc
push
dec
xchg
sbb
jns
rorb
out
lock
in
cmp
cmc
stos
add
lock
push
jmp
sbb
sub
imulb
mov
xor
adc
mov
ljmp
rcl
out
mov
hlt
mov
mov
pop
mov
out
jno
repnz
mov
xchg
xchg
nop
sbb
xor
icebp
jb
jo
pop
and
aas
adc
clc
pusha
push
xchg
xchg
out
inc
xor
pushl
cmpsb
cld
repz
fidivrl
mov
in
es
cld
adc
add
popf
sbb
jmp
sub
xor
inc
xor
cmp
dec
stos
arpl
add
outsl
in
or
add
pop
ffree
cmp
ret
xor
lods
jbe
outsl
call
divb
adc
shrb
adc
bound
stos
sub
jl
out
add
adc
sub
jno
cmp
jl
mov
jp
gs
pop
sti
sub
in
mov
sbb
sub
adcb
out
hlt
ret
test
pop
inc
leave
pop
xor
outsb
loopne
push
jbe
popf
cmc
cld
jae
movb
into
push
sub
jmp
and
insl
out
daa
xor
arpl
cmp
or
mov
pop
jecxz
rorb
test
lds
xor
or
push
ds
jae
test
push
push
pop
lods
sub
jno
jns
stc
push
loop
sbb
push
inc
add
cmp
push
mov
pop
xor
push
mov
jmp
lahf
xor
in
sub
js
popa
in
jecxz
lock
fs
lcall
outsl
cmpsb
xorl
fistl
outsl
gs
sub
insb
fs
loopne
cmp
shlb
sbb
cld
notb
imul
insb
clc
xlat
jo
movsb
jl
imul
xchg
cmp
call
mov
sahf
in
jp
and
nop
sub
insl
mov
fs
fimuls
cld
jae
push
clc
loopne
mov
movsb
loope
call
fcoml
test
movsl
gs
dec
xor
gs
mov
push
sub
mov
adc
scas
jecxz
adc
cmp
xchg
outsl
push
mov
pop
js
popf
loopne
lret
dec
daa
jo
inc
in
sub
mov
add
lock
sub
outsb
test
inc
fs
into
out
call
fcoml
sub
stos
clc
pop
mov
out
xor
xlat
stc
dec
jle
pop
outsb
shrb
imul
cmpsb
xor
shrb
inc
jb
movntq
out
in
jle
adc
xor
popa
adcl
cmp
jbe
out
and
aas
movb
cli
jecxz
xor
push
dec
mov
pop
jecxz
loopne
xor
insl
daa
mov
lock
test
insl
mov
rorb
mov
gs
movsl
rcrl
ljmp
lds
shlb
ficomps
and
out
or
outsb
sub
sub
sti
or
in
data16
jbe
and
mov
jbe
dec
orl
sub
jp
jmp
adc
jmp
jns
insl
inc
lds
lahf
call
mov
rcll
sub
lcall
test
insb
xor
outsb
push
pop
aaa
je
push
mov
cmp
mov
sbb
push
xor
cmc
inc
outsb
repz
rcrb
outsb
mov
jecxz
mov
xor
and
ljmp
pandn
lock
repnz
out
fildll
jmp
lock
dec
lcall
jg
jp
in
push
mov
sbb
xchg
daa
cmp
mov
adc
jmp
popa
inc
iret
imul
insb
sub
pop
je
push
clc
incb
xor
mov
push
out
push
jecxz
loopne
jge
dec
bnd
scas
mov
push
xchg
das
lcall
call
icebp
imul
popa
ja
jo
push
jp
out
lods
pop
dec
jae,pn
jno
or
sbb
cmpsb
xchg
adc
test
mov
jo
aaa
jge
mov
imul
mov
daa
inc
jp
lcall
gs
mulb
mov
lock
repnz
xor
jo
jno
in
ss
addr16
in
imul
repz
leave
bound
cmc
lock
push
cmc
icebp
dec
inc
into
in
sahf
out
sub
pop
sub
push
into
lods
xor
mov
xor
cmpb
stc
xor
push
outsl
inc
call
insb
mov
or
loop
imull
loop
mov
cmp
mov
jb
jnp
mov
dec
mov
loopne
out
ror
lock
loopne
out
dec
xchg
in
ja
cli
cmpsb
xor
push
pop
in
out
and
cmpsl
jbe
mov
xchg
test
pop
into
out
and
scas
call
in
jge
les
jle
or
lock
sub
mov
mov
aas
push
dec
lret
movsb
jecxz
lcall
gs
pop
xchg
leave
jo
mov
fs
sbb
jmp
fnsave
dec
and
push
es
scas
sub
outsl
cmp
push
ljmp
outsl
data16
icebp
popa
push
add
mov
adc
sbb
je
dec
jl
add
xchg
cs
dec
repz
movsb
xchg
xchg
insb
cmpsb
fsubrl
imul
add
imul
add
test
xchg
jl
out
shlb
mov
push
mov
jbe
ss
pcmpgtw
cmc
sti
xchg
data16
mov
sub
es
loop
imulb
jbe
dec
jo
mov
xor
ds
inc
hlt
jno
out
stc
sub
mov
mov
inc
push
aaa
or
clc
dec
into
iret
cmp
jmp
es
cmp
jl
mov
add
sub
adc
sub
out
scas
inc
pop
inc
int3
mov
lods
sbb
bound
pop
jb
popf
movsb
push
repnz
xor
outsb
jno
push
adc
mov
dec
jl
add
xor
notb
jp
pop
mov
jb
rep
pop
rcl
idivl
aad
test
adc
cld
and
jl
cmp
fnsave
xor
outsb
jno
call
push
sub
and
mov
mov
cmc
xchg
cmpb
loope
arpl
jns
jecxz
push
jo
jae
xor
fwait
jno
cmp
xor
out
push
push
xlat
lods
dec
data16
adc
xchg
mov
call
nop
inc
pusha
xor
jle
xor
push
cmp
and
notl
imul
mov
std
cli
mull
jo
das
mov
push
push
mov
ret
jo
cmp
pop
insb
lcall
testb
and
mov
push
test
sti
out
xchg
jg
loope
jns
mov
mull
jbe
xor
scas
pop
mov
loop
out
insb
inc
push
popa
and
into
cmc
xchg
adc
popa
adc
xchg
imul
es
pop
arpl
adc
dec
mov
mov
add
shlb
sti
in
add
push
not
int3
jmp
cs
mov
call
or
gs
xor
cmc
in
popa
in
mov
pop
movsb
call
rcl
jne
mov
test
xor
leave
test
fsubp
lret
xchg
imul
sbb
loope
mov
bound
rcr
imul
jae
test
xor
out
popa
fiadds
dec
mov
jno
pop
adc
ljmp
add
movsl
stc
test
lock
testb
xor
mov
in
or
bound
pop
das
mov
and
or
jno
xchg
sub
push
push
je
shrl
imul
push
test
pop
jmp
aas
jg
mov
push
stos
xor
rep
inc
inc
xor
lock
ficoml
outsl
ret
imul
add
outsl
inc
mov
clc
xorb
icebp
jmp
sbb
in
loopne
ss
dec
jae
andl
not
jbe
mov
xchg
mov
pusha
in
stc
in
push
xchg
outsl
inc
cmp
or
xor
out
stos
cmc
inc
gs
int
cld
or
pop
in
scas
loop
outsb
xchg
insl
adc
je
pusha
xchg
data16
cli
jo
fcoml
imul
push
fsubl
or
inc
outsl
popa
fnstsw
pop
or
nop
xchg
lret
push
arpl
or
sbb
in
sub
int3
jg
adc
inc
rclb
aas
sti
jae
push
mov
shlb
and
jo
insl
sbb
push
jb
insl
scas
add
dec
cmp
cli
hlt
jns
jecxz
and
jb
in
cli
sbb
jp
push
mov
jb
fs
cwtl
xlat
xor
test
push
mov
test
cli
shll
inc
jbe
mov
mov
and
mov
out
or
pop
jbe
lods
mov
or
cmp
out
cmpsl
movsb
fcoms
mov
lock
inc
push
jne
mov
mov
lock
jmp
xor
shrl
jecxz
jmp
loope
shrl
push
movsb
popf
scas
inc
jecxz
imul
outsl
nop
int3
xlat
sub
in
in
dec
test
pop
insl
add
insb
in
divl
dec
sub
dec
jbe
push
nop
imul
inc
xor
jno
mov
mov
jb
xor
popf
and
sub
cmc
in
jle
sub
pushf
outsl
xor
pop
and
sub
loop
hlt
pop
xor
dec
clc
outsl
pusha
mov
cltd
gs
mov
pop
mov
mov
psubd
mul
enter
xlat
push
jle
std
cmpsb
ds
into
insb
and
pop
xchg
sbb
ret
rcrb
jo
xor
call
fxtract
jecxz
cli
imul
adc
das
mov
mov
fs
mul
jbe
jle
mov
test
xor
add
mulb
jl
icebp
addr16
pusha
dec
push
ds
pop
je
mov
jo
rorb
pop
imul
test
int
jcxz
test
mov
jnp
xchg
loopne
dec
jbe
dec
xchg
mov
cs
lock
cmpsl
je
outsb
scas
mov
mov
hlt
dec
loop
gs
addr16
push
std
push
insl
push
and
xor
mov
call
insb
push
dec
xor
jne
jb
data16
fnsave
std
push
jno
subb
pop
lods
jge
mov
cld
in
clc
js
int
xlat
pop
in
mov
es
out
cmpsb
mov
divl
jmp
sub
pop
in
mov
shrb
repnz
jns
jbe
call
and
push
aas
out
xchg
aaa
insb
or
xlat
arpl
ljmp
mov
mov
sbb
rcrb
mov
jns
out
pop
xchg
sub
cltd
imul
inc
mov
mov
cmp
jl
jnp
xor
xorl
jmp
jecxz
leave
out
fstpl
jns
sti
or
das
inc
push
jmp
lea
inc
call
test
mov
and
xchg
jp
adc
leave
sub
push
fxtract
sbb
add
insl
icebp
cmpsl
sub
cli
sbb
fmulp
mov
jae
push
jecxz
push
outsl
in
mov
lods
push
out
nop
fmull
pop
mov
sbb
xchg
mov
or
mov
lcall
insl
jnp
int
mov
cltd
cmp
outsb
push
fs
xor
jg
xor
or
movsl
or
xor
imul
loopne
add
sbb
pushf
in
push
out
jecxz
lds
mov
push
addr16
jb
les
int3
mov
add
xor
call
in
pushf
dec
int3
jbe
inc
imul
jge
jne
push
inc
mov
jo
scas
jns
add
cmpsb
sub
sbb
insl
nop
movsl
mov
jle
and
xchg
jo
push
and
jo
xor
mov
div
sub
shrl
mov
or
cmp
gs
dec
repnz
push
mov
and
jno
mov
insb
sub
jg
loopne
dec
sub
add
in
mov
and
mov
cmpsb
and
div
lahf
xor
jo
jno
and
insb
lahf
js
loop
sub
sti
rcrl
hlt
std
sub
bnd
xchg
mov
and
stos
sub
loop
jle
sub
mov
outsb
jns
dec
push
clc
je
mov
jmp
outsl
mov
push
popa
pop
fst
stos
push
int3
jle
outsb
repnz
mov
outsl
popa
fwait
adc
push
jo
and
mov
pop
icebp
imul
mov
jmp
dec
sbb
pop
mov
jmp
adc
andl
out
add
out
scas
jnp
mov
cmp
adc
or
sarb
mov
gs
sub
scas
adc
push
xor
mov
test
stc
xor
jecxz
sub
jno
movsl
xor
loopne
ja
jo
nop
popa
push
insl
ret
mov
in
xor
imul
jnp
pop
sub
xor
adc
sti
in
lcall
dec
sahf
cmpsl
outsl
imul
lock
repz
pusha
data16
push
xlat
adc
out
repz
push
adc
cmp
popf
xchg
fs
enter
arpl
in
ja
icebp
es
jns
mov
jmp
push
outsl
cmpsl
fbld
push
jns
test
inc
cld
sub
insb
imul
mov
jge
imul
cmpsl
bound
jle
adc
icebp
lcall
scas
stos
in
idiv
or
mov
test
fs
out
xor
loop
xor
or
jge
test
addr16
into
adc
jmp
jbe
xor
notb
repnz
push
pushl
mov
inc
jp
shl
fisubs
call
sub
jle
jle
lock
dec
and
divl
sub
mov
push
push
mov
xor
rcrb
mov
dec
xlat
mov
insl
xor
push
outsl
enter
adc
jns
jle
mov
rcrl
test
sub
hlt
mov
orb
mov
xchg
nop
imul
ss
and
hlt
inc
int3
cs
clc
jae
adc
lcall
jbe
xor
push
jnp
cs
jle
into
sub
cltd
cmp
fdivr
scas
or
jl
jle
outsl
sti
in
add
mov
jle
dec
fsts
mov
or
jno
pop
loopne
test
xor
jne
addr16
or
test
lock
sbb
xorl
je
insb
lock
shll
sub
adc
test
jo
mov
push
shl
sbb
pop
imul
das
cli
data16
cmp
loope
jne
out
pop
pop
out
popa
leave
or
popa
jnp
or
mov
shrl
jae
sub
push
repnz
cmp
xor
xchg
fs
pop
loope
xor
jg
rorb
xor
outsl
iret
push
ljmp
mov
out
movsb
push
gs
testb
std
jb
popf
jg
jae
shr
and
or
enter
pop
sub
imul
in
mov
cmc
insl
mov
sub
mov
cmp
push
mov
addr16
xor
jne
mov
adc
push
in
add
jbe
fimuls
mov
xor
cmp
mov
inc
xor
cld
loop
jbe
mov
add
push
xor
cmp
mov
out
push
data16
mov
arpl
jmp
mov
outsb
out
cmpl
clc
jae
gs
jmp
imul
jp
stos
or
outsb
adc
mov
mov
rorb
mov
add
imul
cmp
pop
xor
lret
test
xor
out
out
push
mov
jb
inc
out
jae
xchg
or
bound
jg
push
seta
jnp
or
ret
in
outsl
push
test
sti
das
cli
das
push
je
pop
jnp
addr16
adc
popa
inc
outsb
mov
ljmp
push
jbe
mov
inc
cmc
mov
call
mov
push
push
jo
push
sub
jp
js
repz
adc
xchg
push
sbb
std
sti
insl
test
pop
jo
dec
jecxz
gs
cs
add
pop
cmpsl
adc
or
shl
push
jnp
adc
xor
push
push
pop
mov
aam
push
cmp
cmp
cmc
insl
lds
mov
out
popa
jge
scas
popa
xchg
repnz
test
ret
and
xor
mov
out
imul
jbe
push
movsb
out
adc
insl
test
mov
loope
jl
push
hlt
insl
jae
mov
rcl
clc
in
mov
lds
std
jae
and
sub
pop
jl
out
addr16
sbb
push
cmp
jns
push
inc
pop
xchg
sub
mov
inc
mov
mov
xchg
rcrl
pop
dec
lock
ja
xchg
jo
push
push
icebp
inc
mov
lods
add
pop
push
popa
in
mov
push
push
mov
mulb
mov
jno
scas
adc
xchg
mov
jge
dec
xor
shrb
aaa
jne
lods
mov
push
pusha
pushf
mov
xor
dec
jle
mov
stos
fidivs
add
push
push
daa
jbe
popa
cmpsl
xchg
dec
jmp
loopne
movsb
pop
daa
lds
sahf
aam
xor
loope
icebp
outsb
es
js
mov
lock
adc
or
mov
push
sub
sti
or
movsb
jno
inc
or
stos
iret
icebp
loopne
int3
rclb
jae
insb
or
clc
outsl
cmpsb
mov
sahf
das
jns
push
jle
xor
dec
outsl
ret
mov
adc
mov
sub
jle
jo
std
shlb
dec
push
xacquire
imul
je
shll
push
leave
cmp
mov
push
mov
inc
dec
mov
xor
push
adc
loopne
movsl
ds
mov
hlt
jle
scas
mov
idivl
loop
cs
hlt
inc
jl
movsl
xor
xchg
icebp
cmp
mov
insb
lret
jmp
xchg
inc
rolb
repz
pop
mov
dec
idivb
repz
xchg
insb
in
into
fstl
add
mov
out
mov
jp
outsb
inc
cli
or
mov
push
out
cltd
pop
test
test
sub
add
roll
adc
dec
hlt
xchg
dec
mov
popa
filds
and
test
fdivp
xor
fmulp
sti
loopne
or
insl
movsb
inc
scas
jo
pop
cmp
fisubrl
ljmp
aad
in
cmp
bnd
imulb
push
mov
xor
adc
jno
sub
add
inc
leave
or
jnp
cmp
sbb
and
xor
sub
imul
shr
push
imul
jbe
jge
jne
das
insl
mov
sbb
sub
lcall
insl
sub
jl
lea
es
insl
cmpsb
sti
outsb
push
sbb
lock
inc
xor
mov
out
js
adc
push
or
lret
jmp
mov
enter
rolb
lret
add
fstps
nop
dec
fisubrs
dec
inc
mov
sub
sti
xchg
dec
jge
push
xor
out
sub
lods
addr16
push
mov
push
inc
xchg
or
ljmp
lods
and
daa
jp
jge
cmc
cmp
leave
imul
lret
pop
xor
mov
popa
mov
in
iret
jmp
addr16
lret
mov
pop
pop
pushf
adc
ret
mov
sub
sub
sahf
les
mov
push
loop
js
mov
jno
xchg
rol
shll
pop
xor
sbb
adc
arpl
sub
mov
jl
xor
clc
fnstcw
rcr
insl
xchg
imul
cmp
lock
fbstp
lock
or
mov
jp
lods
and
loopne
arpl
pop
jnp
pop
lahf
call
mov
jno
dec
fisubs
xor
dec
leave
je
les
out
out
rolb
mov
js
xor
adc
jnp
xorl
jno
stc
das
xchg
cmp
repnz
popa
lock
rep
shrb
cmp
jmp
std
sarb
cmc
xchg
or
or
imul
icebp
jmp
sbb
sub
mov
idivb
lock
test
jle
insl
add
sub
xchg
in
jno
mov
leave
sarl
jl
inc
pushf
xor
mov
outsl
ljmp
jmp
xor
mull
push
sub
mov
inc
jg
jno
dec
fs
in
push
loopne
mov
mov
jecxz
dec
ss
in
out
addr16
and
inc
cli
inc
adc
sbb
dec
scas
neg
pusha
jmp
test
fs
sub
pop
add
push
sub
mov
int
and
rcll
push
mov
pop
adc
mov
fwait
and
xor
push
jle
call
or
mov
rcrl
mov
mov
xor
shr
push
xchg
popa
out
rcl
sbb
xor
xchg
push
or
mov
mov
lahf
cmp
jecxz
push
lcall
insb
pop
ret
and
in
cwtl
push
mov
mov
jo
nop
xchg
clc
sbb
int3
jmp
repz
es
add
jle
in
into
xchg
jb
and
popf
testb
mov
mov
push
xor
fidivl
lock
loop
insl
push
in
jp
repz
daa
xchg
mov
cmc
dec
xchg
jmp
scas
cli
out
gs
mov
out
or
js
ss
or
jno
movsl
test
jno
pop
dec
fnstcw
nop
in
aas
int3
das
jnp
repz
add
and
push
jns
xchg
xor
lahf
mov
push
sub
push
ljmp
es
jbe
cwtl
clc
jo
sub
mov
leave
cmp
push
mov
outsb
cs
in
lret
out
gs
push
pop
mov
push
jo
xor
ret
dec
loop
pop
xor
xchg
xor
out
popa
cmp
sub
adc
or
test
daa
insb
jns
test
outsl
movsb
sbb
dec
scas
pusha
xchg
jb
gs
cs
sub
inc
adc
icebp
sub
push
push
fadds
adc
loopne
arpl
rcl
mov
jns
leave
shl
inc
je
sub
popa
mov
push
jmp
pop
ret
jbe
mov
outsl
icebp
js
mov
cmc
inc
jmp
push
cld
jns
jo
mov
ret
cmpsl
test
in
js
test
push
jb
cmp
xor
aas
sahf
pop
scas
mov
xchg
pop
sbb
push
inc
int3
call
gs
dec
icebp
sbb
push
cmp
push
in
or
sub
ljmp
loopne
mov
adc
lods
cmp
sub
add
xchg
fdiv
out
out
xor
or
outsb
inc
fmuls
arpl
dec
sahf
shll
loope
mov
jl
pop
scas
mulb
ljmp
pop
icebp
data16
cmp
mov
das
scas
xor
idivl
rcrb
push
cmp
sti
mov
repnz
jno
fcompl
mov
cmp
mov
mov
xor
sbb
lock
jmp
mov
jl
xchg
jns
lret
or
push
mov
inc
pop
cmpsl
pop
mov
or
outsl
nop
fsubs
loop
push
into
outsl
cmp
mov
movsb
sahf
inc
insl
daa
dec
out
inc
xor
push
js,pn
ja
in
xor
out
ret
xor
mov
jne
push
imul
mov
addr16
bt
mov
xor
aaa
fs
jmp
add
sub
push
icebp
cli
inc
bound
arpl
add
out
push
add
cmp
push
cli
into
insl
sti
stc
jmp
adc
popa
cmp
cmp
mov
mov
cmc
jge
jecxz
inc
push
shll
movsl
outsl
jns
outsb
imul
or
bound
dec
push
sub
decl
pop
xor
mov
outsl
mov
inc
loopne
mov
out
cmovae
mov
movsb
lret
xor
in
imul
xor
cwtl
es
nop
lock
cmc
outsb
jno
push
pop
sahf
or
shl
andb
adc
adc
jae
sub
and
mov
push
imulb
xchg
xchg
inc
out
cmpsl
pushl
divl
xchg
sub
mov
imulb
ds
lret
bound
jecxz
add
mov
or
enter
in
or
lods
outsl
lock
xchg
jns
push
and
jmp
adc
data16
or
inc
xor
mov
pop
outsb
std
idiv
hlt
push
mov
inc
aad
add
jnp
int
jno
mov
mov
sub
test
push
dec
outsl
jge
mov
or
cmp
imul
mov
mov
fwait
xchg
loopne
imul
sub
test
popf
mov
and
cld
nop
ret
xor
rol
sub
and
xor
cmpb
pop
adc
pop
je
jp
mov
mov
in
fs
lock
and
add
jne
scas
test
lock
dec
and
test
movsb
sub
jp
pop
mov
xchg
xor
mov
shl
push
push
mov
data16
loope
out
jecxz
ljmp
sbb
daa
divb
loop
or
mov
xor
jle
lds
out
outsb
push
xor
imul
push
jb
clc
jp
cmp
sub
push
jg
ds
ror
ror
aaa
imul
outsb
push
std
mov
jno
sub
xor
enter
fdivs
sbb
imul
std
mov
jl
and
bnd
in
xor
jne
dec
push
pop
loop
xchg
loopne
data16
pop
loopne
jbe
je
int
cmp
xchg
push
outsl
les
xor
loope
dec
mov
idivl
inc
xor
daa
sbb
adc
orl
lahf
mov
enter
and
mov
mov
xor
ss
inc
add
loope
outsb
imul
orb
sbb
out
pop
bound
mov
inc
lcall
outsb
pop
shlb
cwtl
inc
dec
mov
outsb
out
cmpsl
out
or
mov
jno
ss
subl
loopne
sub
push
popa
pop
jle
jno
mov
test
xor
jb
push
xor
mov
mov
jp
push
lods
repz
mov
push
cmp
cld
xor
sub
add
scas
in
loope
les
insb
lea
enter
lock
out
pop
jg
inc
mov
mov
inc
repnz
adc
in
add
jmp
push
jno
mov
dec
pushf
loopne
mov
jg
stc
sub
push
loopne
out
mov
sub
xchg
mov
jge
repnz
dec
mov
xor
inc
in
dec
sub
xor
dec
mov
and
shl
andl
sarb
sub
push
and
aaa
cmp
stc
scas
cmpsl
jp
jle
stos
push
in
fcomp
or
andb
adc
cli
jae
jb
sbb
mov
sbb
mov
mov
xchg
ret
shl
data16
arpl
sub
cmpsl
adc
dec
mov
add
sahf
jnp
scas
push
jl
mov
lret
add
inc
out
sti
dec
mov
cmpl
xor
inc
mov
xor
jg
aad
je
outsb
cmpsl
fbstp
pop
push
or
add
scas
insl
in
lods
call
in
jl
jle
mov
cmp
imul
push
arpl
sahf
popf
in
mov
jmp
jg
add
cli
outsl
jecxz
jns
dec
cli
push
jo
ss
bound
shl
ja
icebp
bnd
mov
add
adc
jno
jae
inc
cmpsl
lods
stos
pop
xor
mov
mov
lcall
std
stc
push
dec
jne
sub
out
jge
nop
adc
mov
jecxz
gs
pcmpgtb
mov
xor
dec
pop
cmc
lock
push
cli
inc
movsb
pop
shll
jg
push
or
and
lcall
jecxz
imul
and
insb
insb
pop
movsb
mov
iret
lock
shll
lock
pop
lods
imul
mov
cmp
repnz
push
bound
std
test
push
adc
fs
jle
and
pop
ficompl
and
gs
sub
aaa
fldenv
daa
and
pusha
fwait
cmp
jno
sub
or
push
inc
dec
jne
and
mov
cmp
daa
xchg
xor
inc
sbb
ja
jl
push
jnp
in
lods
xor
clc
jns
pop
jle
dec
xchg
sub
sub
fxch
loopne
push
in
inc
jnp
adc
daa
push
mov
mov
jo
or
xor
jns
jmp
outsl
loop
jbe
loopne
sub
pop
xor
lock
int3
cmp
cmpsl
js
cli
or
idiv
test
std
test
xor
addb
fldcw
mov
aaa
out
add
shrl
imul
mov
push
test
bound
js
jo
in
popa
adc
sbb
pop
vsqrtpd
push
insb
jmp
jb
add
jo
or
arpl
movsb
jae
idivl
rep
push
sub
shlb
lock
mov
js
imul
add
fabs
and
xor
out
out
mov
repnz
push
outsl
jl
push
std
xchg
inc
jns
sti
arpl
sub
scas
lods
faddp
mov
outsl
mul
adc
or
jo
mov
lock
lea
inc
xor
icebp
jo
xor
mov
sub
push
aas
ljmp
or
and
gs
jg
in
leave
xor
mov
xchg
jo
xor
loopne
or
mov
call
bound
fdivs
int3
dec
incb
jp
mov
jnp
aaa
mov
scas
mov
add
sbb
negl
shll
push
repnz
or
stos
xor
imul
mov
mov
insb
jl
pop
sbb
divb
jmp
imul
sub
push
xor
cmc
addr16
jl
push
pushf
mov
adc
data16
scas
loopne
jmp
repnz
mov
dec
cmp
repz
xor
pop
lods
test
xlat
repnz
sub
sbb
scas
xchg
imul
or
pcmpgtb
push
imul
mov
data16
mov
mov
fstpl
mov
jmp
mov
adc
shll
sub
sbb
cli
push
out
inc
sbb
out
or
insb
or
lret
pop
jb
mov
push
arpl
aas
push
lret
cld
mov
aaa
ja
jo
xor
sbb
test
add
adc
js
jno
xor
mov
hlt
push
cmp
lret
gs
xlat
loope
test
sub
out
xor
adc
cwtl
aaa
pop
push
std
mov
xor
jmp
and
outsl
call
sbb
enter
adc
hlt
mov
outsl
sahf
mulb
push
xchg
or
push
in
push
cltd
inc
fldcw
cmc
ret
icebp
inc
jmp
xor
in
push
dec
inc
jb
fnstcw
inc
iret
add
out
and
mov
gs
insl
imul
and
sub
pop
out
push
mov
int3
and
cli
sbbl
cli
xchg
je
rol
divl
add
js
lcall
jp
jecxz
jns
mov
imul
and
ror
xor
inc
into
stos
or
jae
test
shl
mov
xor
loope
mov
clc
repz
pop
push
jg
shr
orb
jns
test
sub
shrb
imul
sub
je
xor
pop
and
jmp
sub
mulb
test
lea
loope
jns
and
loop
stc
loopne
cmpsb
fisttpll
insl
outsl
jle
movsl
xor
sbb
gs
mov
dec
inc
push
jno
lods
dec
xchg
and
int
sti
lock
xchg
add
push
jns
lods
repz
loope
sub
ret
push
pushf
sbb
dec
push
fisttpll
arpl
test
loopne
ret
test
mov
js
push
outsl
movsl
icebp
pop
popa
sub
clc
movq
adc
mulb
stc
fsts
popa
sub
mov
add
jb
loopne
test
cmp
mov
mov
inc
test
sahf
jo
loop
repnz
imul
outsb
push
ror
daa
jns
push
cmc
and
ficoms
mov
jnp
or
clc
mov
outsb
testb
push
or
insl
mov
or
neg
mov
mov
in
das
cmp
bound
cmp
rclb
sahf
cli
inc
imul
ds
inc
push
ss
jae
pusha
inc
mov
or
out
mov
addr16
adc
icebp
das
push
jle
dec
pop
fidivrl
in
xchg
xchg
jo
adcl
repz
popa
hlt
xchg
xor
js
or
imul
xorl
jo
jmp
fsubrs
fwait
mov
sar
dec
cmp
cmpsl
aad
jmp
dec
xchg
push
jno
mov
fldenv
arpl
inc
aas
int
aam
scas
lahf
xor
cmp
mov
push
adc
pusha
mov
add
cmp
pop
movsb
cli
jbe
pop
inc
cmpsl
or
jp
xor
jecxz
icebp
faddl
loopne
mov
testb
sub
loopne
outsb
loope
shll
mov
scas
mov
aaa
sti
fs
adc
jne
hlt
cmp
bnd
nop
xor
pop
cwtl
outsb
xor
lds
jge
int3
mov
test
push
cmpsl
test
add
gs
and
test
fdivrs
shrl
loopne
and
xor
lock
imul
lods
jnp
push
sbb
push
inc
out
call
or
sbb
stc
dec
jmp
sbb
in
repnz
or
stos
pop
fdiv
in
jnp
insb
jle
jae
jl
test
xor
fndisi(8087
rep
push
pop
leave
jo
lods
ds
arpl
es
push
in
sub
sub
aas
push
mov
add
adc
in
cmc
inc
enter
fidivrs
shl
repnz
sub
enter
lock
xor
xchg
jo
xor
xchg
jle
in
xor
jecxz
jle
adc
fdivs
jo
fs
pop
outsl
mov
shll
popa
inc
fildll
xor
mov
sub
hlt
test
gs
imul
sarb
in
loop
js
cmp
std
push
inc
out
hlt
push
pop
lods
inc
jle
dec
mov
out
outsb
daa
push
sbb
inc
push
aaa
cmpsl
push
xchg
jnp
sub
jno
rolb
cmpsb
std
in
xchg
sbb
xor
repz
jle
lock
mov
sbb
mov
inc
cli
popa
sub
int
inc
push
mov
and
or
push
add
in
xchg
loope
push
xchg
js
outsb
rcrb
jbe
test
out
jmp
scas
insb
ds
loopne
bound
es
and
mov
xor
add
jae
outsl
xor
push
jb
jg
and
jge
xor
loopne
sti
inc
and
int3
push
sbb
fdivrp
cmp
mov
jmp
inc
jns
lock
shrb
nop
xor
pop
insb
bnd
aas
sarl
lret
push
test
xor
xor
jo
scas
pusha
repz
movsl
xchg
xchg
imul
imul
enter
imul
dec
push
ja
mov
int3
add
sar
rcll
add
adc
mov
out
adcb
sub
jae
out
shrl
cmp
loopne
in
loop
gs
push
clc
lahf
jo
insl
sbb
dec
jge
or
jo
mov
push
out
dec
mov
push
out
cmpsb
arpl
rcl
movsb
mov
in
add
jmp
push
outsb
jmp
pop
mov
loopne
mov
repnz
out
push
jl
jle
in
imul
jmp
jle
add
jl
xchg
es
and
aad
outsl
jecxz
xchg
lea
push
jno
mov
aaa
mulb
adc
adc
ljmp
mov
stos
sarl
pop
jnp
or
in
clc
cmp
outsb
dec
jl
xchg
dec
movsl
scas
imul
sbb
das
xor
das
out
xor
xor
sbb
in
pushf
loopne
jnp
sub
mov
rcll
rorb
je
xor
std
repz
cli
mov
jmp
xchg
scas
lea
outsb
or
xor
enter
cmp
insl
test
popa
insl
out
fsubl
lock
push
insl
test
adc
mov
mov
in
jb
jl
fisubrs
cli
lea
es
lret
mov
cwtl
cli
imul
push
pop
cli
push
test
inc
xchg
xor
fsts
sub
out
inc
cld
popa
mov
and
popa
outsb
divb
inc
adc
loopne
sbb
push
jmp
cmp
insb
jns
mov
jl
push
mov
rolb
push
repz
popa
sub
insl
loop
mov
sub
jl
add
push
gs
and
scas
addr16
xchg
shrb
cltd
hlt
std
mov
jecxz
imul
push
jmp
sub
mov
push
sti
mov
push
cmpsl
jne
jge
lcall
mov
sub
inc
push
dec
fmulp
gs
cmp
divl
into
rcrb
lcall
jo
out
arpl
outsl
fyl2x
popa
test
daa
ret
sub
jecxz
or
pop
loopne
pusha
cli
xorb
sbb
clc
leave
and
neg
pusha
xlat
pop
mull
jb
pop
jo
and
jmp
clc
call
sbb
rcl
push
pusha
iret
cmc
xchg
push
jne
push
jmp
jns
jp
imul
or
stc
loop
addr16
fwait
divb
push
popa
test
pshufw
fdiv
jno
add
cmp
popf
xchg
jge
mov
sub
push
jo
out
xchg
cmpsl
jne
sarb
push
jno
push
xchg
jle
cmpsb
dec
out
in
push
xchg
lock
and
in
lock
sbb
out
jns
leave
mov
ljmp
cmp
popa
bound
int
outsb
pop
jmp
inc
arpl
jmp
imul
loopne
rsqrtps
addr16
call
cmpsl
in
in
dec
mov
add
in
mov
gs
xchg
std
js
add
mov
xor
mov
jmp
jo
aas
cmp
gs
test
stc
gs
mov
cmp
imul
imul
adc
xor
call
negb
sbb
jb
outsb
cmp
xlat
lret
clc
sbb
pop
jnp
ret
jno
pop
cld
push
and
mov
cmpsb
and
jb
jp
imul
test
nop
sub
jmp
repnz
xor
gs
outsl
jp
jo
data16
imul
inc
cmpsl
sbb
sti
fcomip
cmpsb
mulb
xor
cs
fcomps
jl
mov
imul
lds
sub
loope
repnz
imul
outsl
cli
into
jne
pop
jbe,pn
inc
adc
loope
xlat
xor
cwtl
cli
imul
mov
maskmovq
imull
cld
int3
loope
clc
imul
xchg
and
outsb
push
jb
data16
hlt
mov
mov
sahf
cli
cmp
push
mov
into
data16
outsb
popa
dec
mov
mov
jmp
pop
dec
arpl
ja
into
mov
sar
out
fisubl
xchg
jle
mov
xor
xchg
and
cmp
in
addr16
mov
lcall
popw
jl
mov
push
mov
xchg
imul
movsl
bound
adc
popa
add
outsl
jne
xor
sub
popa
les
push
mov
inc
insl
lret
addr16
sti
jb
xor
sbb
in
cltd
popa
test
repnz
loop
mov
add
test
xchg
stc
stc
and
call
rcl
jo
mov
outsb
xor
ds
jno
or
mov
lds
std
popa
incl
stc
cmpsl
outsl
add
into
xor
adc
push
shll
lock
repz
loopne
imul
push
adc
push
mov
cmp
icebp
xor
cli
and
gs
push
inc
cmp
loope
jb
out
rorl
nop
cmpsl
in
mov
lock
push
or
jo
push
or
adc
jge
shll
xor
dec
loope
mov
ljmp
out
cmpsb
mov
loope
mov
outsb
insb
out
xor
xchg
rol
idivb
out
push
lea
jno
mov
test
imul
lds
sub
xor
jb
out
fs
inc
out
lods
dec
cli
loop
jo
cmp
add
in
jmp
ja
jnp
fprem
insl
xor
push
andb
push
scas
sub
adc
lret
jno
ret
sbb
or
sarl
xor
xchg
mov
add
jecxz
sbb
imul
stc
je
or
clc
sub
or
jb
cmpsb
mov
ss
push
fwait
dec
add
outsb
test
ret
es
clc
repz
imul
sbb
sub
cmp
icebp
enter
cltd
jmp
jns
lcall
shll
adc
adc
repz
rcr
imul
hlt
xchg
out
inc
leave
aam
push
in
xor
and
lock
jmp
imul
inc
mov
pop
mulb
mov
dec
sbb
jo
sub
and
and
out
popa
jecxz
fs
gs
in
fnop
fcomps
loopne
sarb
dec
outsb
xchg
sahf
or
hlt
sub
scas
sub
shll
xor
shlb
mull
imul
hlt
jns
test
cmc
mov
sub
xor
gs
lods
add
cmp
jge
and
xchg
jo
jns
push
dec
add
loop
push
pushl
in
xchg
push
ret
stos
divb
lods
fdivs
in
popa
lahf
xchg
pop
ss
clc
mov
jg
mov
mov
imul
jns
imul
pop
mov
xchg
push
std
and
data16
sub
data16
stos
xor
sub
adc
pop
push
add
cmp
cmp
jns
jns
cmp
movsl
dec
add
into
hlt
or
lock
adcb
adc
pop
xor
out
cmpsl
data16
das
lock
cli
jno
push
push
mov
leave
neg
jae
dec
imul
jo
loopne
inc
push
icebp
and
lock
aas
in
push
sbb
mov
and
jle
sub
push
int
js
inc
out
sbb
fs
insl
mov
scas
jmp
mov
sub
inc
push
push
lock
test
shrl
and
sbb
shrl
xchg
lock
ja
test
cmp
cli
popa
xchg
push
nop
jmp
xor
test
out
add
sti
mov
or
jge
mov
outsb
gs
jl
or
jg
je
test
lea
jnp
jbe
outsb
push
dec
push
imul
mov
cwtl
lock
cld
push
in
mov
loope
and
insl
enter
mov
popa
push
test
loope
arpl
sub
lock
movsb
repz
xchg
addr16
sbb
xor
ret
xor
cmp
notb
adc
push
das
loop
mov
in
xor
clc
popa
in
ret
xchg
stos
out
imul
cltd
shlb
push
jle
add
xor
dec
jle
xor
out
cmc
into
mov
inc
js
ss
adc
xchg
rorb
imul
out
fbld
not
jns
xchg
inc
lahf
stos
mov
jmp
mov
mov
je
inc
aaa
and
dec
inc
jb
jbe
cwtl
addr16
mov
out
push
ret
fcomip
iret
mov
inc
in
faddl
outsl
fwait
sub
jns
jp
dec
pop
sub
push
gs
dec
stos
cmpl
shrb
cltd
jmp
loop
ljmp
popa
cmp
jge
xorl
push
add
js
mov
std
push
jmp
repnz
and
mov
mov
dec
pusha
je
push
clc
xchg
push
cli
repz
jo
scas
outsb
pop
mov
test
jmp
mov
fs
jo
sub
ja
xor
cmp
add
outsb
out
inc
xor
loope
mov
imul
decl
adc
scas
sbb
jl
lea
jmp
push
outsl
sbb
loope
xor
shll
add
jge
mov
mov
insb
ja
adc
out
jle
fwait
mov
hlt
int3
icebp
jle
in
rorb
xchg
pop
adc
arpl
imul
andb
popa
popf
push
ljmp
dec
test
fnstenv
mov
mov
popl
mov
dec
aam
repnz
in
dec
cmc
lret
jo
data16
clc
imul
inc
lock
gs
sbb
push
sub
jno
mov
xchg
sbb
sub
dec
lods
in
jl
fs
xor
mov
addr16
nop
push
pop
ja
xorb
jns
test
repz
adc
ljmp
data16
pop
mov
addr16
cmpsb
push
rorb
mov
pop
nop
fwait
mov
jg
sub
push
xor
das
mov
cmpb
imul
jno
mov
fstpt
xchg
jmp
andb
add
jg
cmc
sbb
inc
call
imulb
push
in
inc
stc
mov
add
pusha
test
std
lret
lock
cmp
aam
arpl
cli
mov
out
ljmp
rdmsr
and
xor
repz
cmp
repnz
pop
inc
shr
call
pusha
mov
in
and
pop
lods
shrl
lods
sarb
imul
push
and
in
pusha
into
dec
subl
jno
xor
xor
cmc
inc
push
subb
or
sub
outsb
sahf
arpl
scas
mov
sub
notl
insl
mov
jne
cmpsl
shrb
inc
lds
jle
xor
mov
push
das
push
movsb
mov
das
lds
mov
adc
cmc
inc
loope
xchg
jp
push
mulb
dec
jmp
jo
popa
stos
push
imul
dec
cmpsb
icebp
sarb
fildl
imul
outsl
jmp
xchg
mov
cmc
ja
call
cmp
jns
je
in
mov
jle
pop
xor
fdivrs
imul
jne
lock
das
mov
xchg
insl
sbb
cli
je
fsubrs
and
cmp
xor
cli
popa
test
adc
stc
addr16
outsb
xor
jl
xlat
imul
jbe
push
sar
mov
mov
lock
jae
repz
mov
loopne
or
jns
and
out
xchg
outsl
pop
push
adc
dec
sahf
mov
pop
clc
fwait
lea
pushf
adc
movsl
sub
movsb
mov
stos
clc
push
push
cmp
divb
cld
daa
push
stos
mov
xor
push
std
mov
inc
pop
fsubl
pushf
rcrl
mov
mov
jne
gs
sub
or
aam
jmp
xor
scas
imul
cmp
jl
sub
loopne
xor
pop
xor
inc
jge
or
xchg
pop
and
jb
repnz
repz
mov
push
jns
sbb
mov
daa
addr16
jle
bound
sbb
dec
adc
out
jns
and
jl
out
add
mov
imul
pop
lock
mov
sahf
lahf
lock
imull
incl
lock
repz
sub
outsl
repz
imul
fdivrl
daa
jb
clc
mov
xor
inc
stc
out
outsl
xchg
outsl
dec
ljmp
repz
mov
loope
sahf
cld
int3
loope
enter
push
clc
popa
in
xchg
jle
add
jnp
call
inc
mov
sbb
dec
pop
addr16
js
loopne
aam
mov
insl
and
jne
outsl
cmp
push
pusha
xor
addr16
mov
div
dec
jmp
aas
adc
imul
xchg
push
in
cmpl
psraw
icebp
cmp
out
add
test
xor
sti
cmp
cmpsb
imulb
and
lret
jne
outsb
divl
outsl
shl
xor
pusha
jmp
rorl
mov
cli
pop
mov
xor
xor
ja
mov
push
jge
pusha
mov
mov
xchg
imul
inc
out
sbb
mov
xchg
jg
or
je
cmpsb
cmpsl
jle
loopne
ds
xchg
insl
cmp
stos
das
pop
clc
arpl
shlb
lret
data16
mov
cmp
fcmovb
testb
cli
subb
call
mov
loopne
cmpsl
add
hlt
clc
mov
loopne
cmc
loop
xor
pusha
dec
jae
popa
mov
push
ljmp
and
jb
gs
pop
imul
test
nop
and
push
imul
scas
xchg
mov
popa
je
imul
pop
outsl
ja
mov
jge
aad
imul
jae
scas
test
popa
dec
lods
sbb
lcall
jbe
imulb
daa
fldcw
adc
call
repz
mov
shlb
and
rcrl
cwtl
or
jb
dec
xor
push
jp
popa
mov
jno
sbb
mov
add
sub
int3
aas
imul
fimull
jnp
gs
push
inc
outsl
jo
shll
call
pop
mov
jne
xor
popa
call
sub
ds
xor
loop
push
pop
jp
xchg
and
loopne
shl
js
xor
push
pop
test
dec
enter
stos
fsubrs
jge
hlt
add
imul
cmp
jns
js
pop
mov
mov
test
add
jp
jns
sti
mov
push
rep
jle
or
nop
mov
cmp
mov
into
std
inc
imul
lcall
or
out
adc
push
int
mov
imul
jno
pop
or
mov
mov
jne
repnz
outsb
mov
mov
jg
ret
jne
std
pop
adc
ds
outsl
repnz
add
sub
and
add
std
test
test
push
dec
sbb
mov
outsl
add
rolb
add
subb
sbb
cltd
jle
test
imull
gs
sub
enter
push
repnz
rcrb
push
call
xor
push
xchg
imul
cmp
jnp
xor
mov
call
xor
scas
mov
rol
or
dec
fsubrs
mov
and
adc
sti
sub
std
icebp
and
xchg
movsl
cs
jl
push
std
jp
add
push
in
mov
sbb
and
inc
aaa
cli
popa
mov
and
dec
icebp
sbb
addr16
adc
out
imul
iret
dec
scas
xor
or
jns
insb
and
sub
imul
push
mov
and
sub
inc
fisttpll
dec
and
hlt
shlb
sub
int3
cmp
jge
mov
into
sub
cmc
js
jle
sub
or
jno
outsb
sti
jo
call
cmp
jbe
mov
data16
sarb
stos
incl
push
cmp
lret
add
je
jge
cmpsl
ret
jo
mov
and
adc
mov
dec
push
mov
push
cmc
jmp
mov
icebp
adc
xchg
aad
imul
pop
push
push
cmpsl
pushf
push
sar
arpl
jl
hlt
ret
fndisi(8087
cmp
out
xchg
jmp
test
aas
dec
jl
push
fimull
cltd
and
jo
rorb
dec
jae
imul
mov
sub
jecxz
nop
sbb
imulb
sbb
mov
nop
push
or
shll
out
shrl
inc
in
and
insl
mov
stos
mov
xor
imul
mov
mov
xchg
dec
in
cmp
mov
loopne
inc
jns
das
pop
jge
call
jb
dec
std
jns
clc
cld
popa
push
outsl
sub
popa
les
aaa
movsl
out
rcrl
outsl
andl
and
push
icebp
test
and
jg
add
and
ret
loopne
mov
out
xor
jns
pop
movsl
mov
adc
mov
cli
into
xor
icebp
lock
insl
pop
pushf
or
inc
fldcw
testl
inc
jo
loop
je
call
das
cmc
mov
jl
pop
sub
push
push
or
mov
into
xor
lods
cld
bound
enter
repnz
push
out
leave
mov
gs
outsb
fucomi
std
imul
cltd
cmpsl
bound
adc
and
hlt
xchg
cmc
insl
addr16
in
mov
xor
push
insb
daa
gs
gs
js
das
adc
addr16
mov
dec
bound
xor
mov
movsl
shr
int3
jge
test
push
call
hlt
jo
jbe
sarb
lcall
sti
hlt
pop
xor
cs
jo
cmp
es
cmpsb
ret
mov
in
mov
mov
insb
clc
xorb
std
pop
jno
push
test
jns
out
outsb
push
data16
in
adc
push
push
jo
divl
inc
jge
test
lret
sub
lcall
imul
movb
loopne
inc
nop
push
repz
scas
je
inc
cld
sub
sarl
and
jns
outsl
enter
call
inc
mov
stc
es
sbb
jno
enter
cld
mov
inc
out
dec
jb
jmp
mov
jb
pop
jl
or
sub
stos
out
push
dec
mov
push
imul
ja
and
lock
adc
push
xor
lds
movsb
mov
fnstsw
xor
jno
notl
pop
addr16
jae
sbb
dec
outsb
and
jae
mov
jns
gs
cwtl
cmp
dec
out
movsl
nop
jae
cli
push
aas
ljmp
xchg
shlb
push
mov
jnp
add
mov
mov
rclb
push
mov
enter
out
jno
inc
jle
jl
or
loopne
inc
lea
mov
jmp
lea
sbb
pop
sub
jle
xor
push
jle
cmp
out
stc
incl
aam
mov
xchg
subb
lock
pop
pop
adc
mov
outsb
loopne
pop
xor
push
outsl
mov
ds
out
jp
mov
addl
cmpsb
loopne
xchg
jbe
pop
mov
and
lret
or
dec
dec
xchg
repnz
inc
mov
jnp
dec
movsb
in
pop
pop
mov
mov
fdivp
mov
in
push
es
adc
leave
mov
loope
gs
jno
daa
loopne
pop
xor
je
jno
push
mov
ss
jecxz
loopne
pop
mov
cwtl
xor
cmp
outsl
push
jg
inc
fisubrl
push
jns
ret
ja
push
ja
leave
cmp
dec
ljmp
cs
lcall
inc
sub
imul
mov
cli
fstpl
sti
in
or
and
jbe
xchg
push
lock
dec
mov
movsb
sbb
xlat
in
jne
arpl
popa
fchs
ja
popa
or
xor
dec
sub
lcall
push
adc
mov
jmp
cltd
gs
sub
cli
push
jl
sub
popa
pop
rcll
xchg
aas
popf
jle
enter
dec
sub
mov
into
rcrb
into
pop
in
movsb
mov
stc
std
jo
popa
jbe
push
in
mov
enter
jno
cmpl
push
pop
jle
pusha
push
cmp
cli
jbe
adc
push
vmovntps
dec
popa
clc
icebp
push
mov
xchg
jmp
push
jl
pusha
add
and
daa
jbe,pt
lock
cmp
cmpsb
inc
out
stos
or
outsl
jge
outsb
fsub
nop
and
rorb
fadd
imul
and
jo
pop
scas
aad
pop
cli
fsubs
jle
shr
repz
scas
clc
xchg
jb
jge
jbe,pn
sbb
in
data16
mull
jge
mov
mov
jns
ja
xor
mov
jb
arpl
mov
adc
cmc
push
sub
dec
cmpsb
ss
scas
outsb
pop
sub
sbb
daa
xor
push
push
gs
repnz
dec
xor
outsb
jmp
lret
cmc
xor
aam
gs
adc
idiv
icebp
icebp
hlt
or
cmp
pop
jae
jns
loope
fstl
jge
xchg
jne
pop
xor
loope
imul
jge
mov
out
jns
mov
jae
insb
jno
add
jns
jne
cmp
pop
lahf
cmp
pop
imul
and
xor
int3
std
test
and
xor
jle
daa
mov
dec
sub
xchg
xor
fldcw
lods
pop
cld
in
lock
insl
cwtl
shll
dec
lea
xchg
in
in
lock
cld
adc
sub
push
push
enter
mov
inc
jb
cli
adc
jmp
test
jo
nop
dec
std
iret
jne
idiv
dec
movsl
push
insl
push
jmp
outsb
data16
jnp
adc
sub
cltd
loopne
mul
and
cmp
enter
dec
test
mov
pop
rclb
cli
xchg
xor
imul
mov
jmp
mov
sar
in
and
imul
inc
mov
xor
and
in
push
mov
sub
outsb
out
and
jo
xor
jo
imul
push
fcoml
out
sub
js
jmp
mov
and
imul
and
fdivs
es
popa
push
aad
outsb
test
push
pop
jo
xor
push
cmpsl
scas
xchg
jo
xor
adc
mov
sbb
lods
add
dec
sahf
les
jae
in
xchg
xchg
hlt
mov
in
daa
out
outsb
test
xchg
inc
xor
lcall
jo
mov
into
mov
andb
cmc
ret
cmp
adc
push
jae
pop
pop
or
in
adc
fsub
push
daa
ss
jecxz
sub
inc
out
jp
out
outsl
mov
clc
popa
test
sbb
inc
imul
mov
gs
adc
lcall
xchg
outsl
mov
je
int3
sub
lds
out
jecxz
scas
mov
fsub
popa
rcl
add
loope
jle
jge
xor
adc
rcll
push
jne
out
ror
shld
in
mov
fldt
sbb
adc
ss
fs
xor
xlat
popa
cmp
mov
push
xor
mov
add
into
push
in
sub
icebp
in
or
roll
rolb
mov
xchg
cwtl
aaa
leave
ljmp
imul
xor
movl
xchg
scas
xor
popa
xchg
aaa
push
mov
daa
pop
out
pop
and
je
jmp
mov
sbb
mov
js
or
loope
push
adc
fsubr
or
jb
in
adc
repz
addr16
push
adc
fdivl
mov
sub
mov
fiadds
jle
inc
sub
and
dec
addr16
outsl
clc
repnz
cli
jo
scas
fsubrs
jns
pop
jo
mov
in
test
in
cld
popa
dec
push
mov
xor
es
repz
jnp
mov
loopne
out
bnd
push
popa
std
push
and
pusha
or
fldl2e
mov
arpl
js
enter
mov
cmc
push
mull
jmp
mov
push
lock
bound
inc
out
push
fistpll
insl
sar
imul
xor
or
notl
mov
mov
cld
and
div
inc
xor
jge
scas
jb
jmp
cmc
inc
fisttpl
test
sub
imul
shl
mov
dec
jl
sub
sbb
aaa
xchg
push
jmp
or
mov
jl
jmp
jns
out
pusha
imul
dec
popf
adc
cmp
test
push
xchg
fsub
cli
shrb
sub
mov
push
mov
xchg
scas
testb
inc
je
jge
fiaddl
push
or
xor
mov
mov
xchg
aam
inc
add
lock
adc
and
fdivs
push
mov
jnp
dec
test
pushf
jl
mov
aam
loopne
shl
insl
les
xor
xor
or
pop
mov
icebp
scas
xor
hlt
add
gs
push
and
cmp
call
inc
sub
stos
jle
jl
cli
frstor
or
and
stc
test
lock
mov
insl
decb
test
insl
xchg
sub
or
mov
repz
insb
psubsw
push
dec
mov
popa
add
sbb
iret
dec
aaa
mov
popa
and
repnz
adc
nop
add
sub
pop
test
pop
repnz
jmp
pop
loop
or
movsb
nop
loopne
mov
mov
and
and
fmull
push
bound
pop
mov
rcl
out
or
pop
xor
in
lahf
sub
xor
and
push
add
xchg
clc
lds
daa
stos
jg
shl
sub
repz
cmp
mov
loopne
mov
jne
add
outsl
pop
gs
jns
fwait
insl
sub
cmpsl
jp
ja
jmp
daa
imul
xor
ljmp
jecxz
add
sti
cmc
or
in
jo
in
imul
jmp
in
jle
inc
cmc
add
sahf
sti
scas
sub
push
dec
inc
pop
test
js
repz
push
jecxz
out
mov
cmp
icebp
std
pushf
lock
outsl
jmp
mov
and
pop
inc
or
mov
lcall
nop
test
pusha
scas
enter
add
jne
jle
loope
sti
es
jne
ds
jns
popa
sbb
js
dec
push
rcrb
inc
les
xchg
or
test
cmp
in
pop
fstps
push
dec
mov
rcrb
aas
addr16
adc
mov
jl
roll
mov
jno
jns
adc
sub
xchg
jo
lea
xor
lcall
adc
sbb
jno
imul
and
pop
daa
cli
out
inc
imul
pop
repz
adc
in
mov
jb
pop
outsl
xorb
push
jle
ret
leave
mov
fisubs
bound
addr16
outsl
imul
cmp
inc
adc
fisubs
jo
aaa
pushl
xor
push
imul
xchg
imul
push
stos
sbb
arpl
dec
sub
push
add
test
mov
imul
adc
icebp
jo
les
imul
jle
shr
lds
mov
pop
divb
fdivrp
xchg
cli
mov
push
or
lds
sub
xchg
out
jmp
cmc
jl
push
cmp
icebp
push
imul
imul
arpl
push
outsb
imull
scas
xor
fs
push
dec
xchg
mov
mov
addr16
or
imul
jge
movsb
pop
sti
cli
lock
push
imul
xchg
mov
sbb
outsl
andb
int
mov
mov
push
jg
idivl
push
dec
xchg
lock
imul
sub
fsubrl
shl
jns
jp
es
jae
jnp
fidivl
mov
jge
repnz
out
adc
outsl
mov
adc
xor
out
popa
inc
sti
fdivr
dec
sub
ja
adc
movsb
fadds
divl
fs
icebp
outsl
add
rorb
push
outsl
loope
imul
push
or
stc
jns
ror
in
dec
das
push
push
pop
cltd
cmp
icebp
mov
xor
and
sub
sarl
lock
push
sbb
out
ret
cld
aad
mov
push
sub
ffreep
or
push
mov
shll
cli
imul
imul
popa
mov
jns
aas
js
adc
xchg
aaa
pushf
imul
jecxz
xchg
out
ja
mov
mov
jno
das
sbb
jmp
sbb
out
inc
push
mov
into
xor
sysenter
mov
jae
sbb
xor
loopne
dec
mov
out
sti
sbb
or
mov
bound
rorl
mov
jb
in
imul
jo
icebp
xor
loope
cmp
jg
mov
aaa
icebp
test
mov
sub
mov
mov
push
stc
mov
xor
or
imul
out
add
cmp
xchg
jo
xor
add
stos
push
jge
out
mov
daa
imul
adc
jo
rcrb
scas
lods
xchg
jmp
test
lahf
fdivrp
sti
push
out
mov
jb
mov
out
jnp
hlt
sahf
mov
in
test
int
jecxz
daa
xor
add
and
cmp
enter
into
cli
lret
imull
jnp
pop
clc
loopne
inc
dec
xchg
enter
imull
scas
fnstsw
lock
shrl
daa
lret
push
in
inc
in
popa
cmp
js
icebp
imul
jge
push
cmpsl
push
pop
cltd
stc
loop
les
sub
jne
mov
push
cmpsb
sti
push
rcrl
mov
jle
aaa
dec
and
out
ja
icebp
cwtl
adc
push
jbe
jae
or
xor
scas
push
jle
xchg
jle
es
ja
push
or
push
or
mov
jne
xor
in
pop
fbstp
push
mov
xchg
ret
out
jecxz
adc
loopne
push
or
jb
lds
pushf
jp
je
outsl
xchg
cmc
adc
mov
adc
dec
xchg
push
and
gs
in
arpl
out
nop
bound
xlat
mov
jp
jns
mov
dec
xor
inc
add
imul
jns
jle
mov
in
inc
inc
stos
and
and
and
add
jb
nop
pop
jecxz
lods
jo
jp
pop
cmp
cltd
xchg
loopne
mov
xor
in
adc
out
jo
jne
dec
sbb
cwtl
push
lock
out
jp
ds
and
xor
pop
aad
jns
je
jno
lahf
mov
imul
mov
and
jmp
cmp
data16
jl
orl
adc
not
xchg
push
push
loop
imul
push
jne
fsts
and
dec
scas
sarb
imul
outsl
mov
lea
xor
hlt
lret
out
push
movsl
dec
data16
jmp
add
divb
cmp
enter
pop
outsb
inc
loope
adc
xor
daa
pop
into
stos
xchg
int3
icebp
in
hlt
or
xor
and
jg
std
les
popf
cmp
mov
shl
pop
cld
lock
or
pop
jns
push
sub
sahf
repz
push
mov
cli
mov
loope
imul
out
ds
mov
xor
cmp
shrl
or
aaa
movsb
std
test
jmp
jns
cmp
cmp
sub
jae
push
inc
mov
mov
push
and
jbe
mov
popa
dec
mov
repz
int
and
mov
loopne
shrl
aas
out
jmp
add
sub
idivl
lods
lock
in
ror
jmp
cmp
jle
push
sub
in
lcall
shlb
xorb
cltd
jmp
loop
jp
jno
mov
in
arpl
add
lcall
outsb
popa
cmpsb
lock
std
aaa
mov
push
jp
jecxz
adc
shrb
imul
outsl
mov
mulb
inc
mov
repz
out
outsl
lods
sbb
andb
stos
mov
ljmp
loop
in
mov
std
loop
rorl
in
repz
test
mov
jp
pop
cmp
addr16
xchg
outsb
stc
mov
iret
xor
xor
cmp
xor
xor
xchg
outsl
addr16
mov
je
jnp
xor
or
pushf
push
jns
imul
push
inc
cs
imul
leave
adc
fcmovnu
test
sar
sbb
jns
popa
arpl
fidivrl
dec
add
inc
aad
sbb
sub
jle
ret
cmc
adc
ja
xchg
pusha
aam
decl
clc
adc
push
lea
dec
xchg
stos
ret
addr16
cwtl
std
cmp
inc
pusha
movsl
fists
jecxz
jns
cmpsl
out
jnp
jae
iret
and
js
dec
push
jno
jnp
mov
shrb
repnz
jb
outsb
arpl
enter
cmc
int
sub
and
xorb
xor
notb
gs
cmp
scas
mov
and
jbe
jae
inc
cmp
mov
cmp
cltd
loopne
in
jbe
push
cmc
insb
or
mov
dec
testl
ja
mul
lods
std
jmp
fcomps
loop
in
popa
mov
xchg
add
sub
repz
push
adc
lods
cld
lock
negb
into
cs
sub
mov
cmp
inc
pop
adc
loop
scas
icebp
xchg
jp
adc
sub
pop
in
aam
shrb
sbb
je
xchg
imul
sub
shrl
adc
cmc
jbe
or
je
fidivl
pop
adc
aas
xchg
xor
lock
mov
popa
pushf
scas
rorb
lods
lock
test
adc
fsubrs
fsubl
push
scas
xor
clc
xchg
js
push
js
fs
pop
insb
jmp
add
cli
dec
add
jno
dec
pop
lret
push
dec
nop
push
int
imul
cmp
ja
and
jl
imul
or
jp
pop
xchg
sbb
addr16
adc
sub
jae
mov
sbb
div
xor
mov
xor
repz
jnp
popa
gs
iret
into
mulb
xor
shrl
cmp
sub
jae
cmpsb
cmp
mov
sahf
inc
fs
test
mov
push
dec
sub
xor
sub
cmp
xchg
lods
xorb
sub
lret
lods
ja
jo
push
jmp
add
imul
add
mov
push
sbb
jp
xchg
popa
sub
adc
lea
push
pop
popa
subl
repnz
mov
and
loop
jae
lock
cmp
sbb
movsb
push
or
out
add
fwait
jno
fnstsw
push
push
imul
xchg
push
adc
sahf
les
mov
and
jmp
call
data16
ficoms
in
xorb
hlt
icebp
insl
cmpsl
lods
shlb
lahf
xor
fcoms
mov
jmp
rcrb
xchg
imul
stos
imul
mov
mov
xor
pop
push
mov
jl
insl
dec
sbb
push
pop
imul
insl
enter
xacquire
int3
and
loop
ss
jle
jo
xor
mov
adc
bound
ja
iret
clc
icebp
push
jl
push
xor
fcoml
or
pop
sub
jno
jo
pop
aad
mov
pop
outsl
arpl
jb
pop
lds
insl
popa
in
sahf
les
ss
jbe
pushf
aad
push
mov
imul
insl
mov
loope
mov
inc
ja
lds
sub
out
bound
push
ficomps
jo
xor
stos
jle
push
sbb
das
scas
stc
xchg
xor
jle
std
out
movsl
push
es
fisubl
push
jb
jmp
cmp
hlt
xchg
pop
push
in
repz
fsts
and
jno
or
hlt
popf
repz
mov
xor
push
and
lds
or
loopne
sub
mov
outsb
imul
es
push
gs
in
scas
movsl
xchg
hlt
in
or
jp
gs
loopne
repz
mov
ljmp
flds
pop
sti
and
fldt
lcall
cld
es
jg
push
dec
xor
or
xchg
loopne
loop
fcmovne
into
divl
xchg
sbb
cmc
loopne
popa
out
daa
adc
jb
les
jae
mov
and
or
xchg
je
std
jno
dec
test
push
out
sahf
ret
mov
loope
mov
xor
mov
jge
mov
hlt
jo
xor
imulb
add
loope
xchg
sbb
mov
mov
test
sub
push
outsb
in
fdivs
insl
test
add
pop
sti
push
sub
jp
out
out
inc
push
xor
bnd
adc
sbb
movsb
out
aad
jecxz
adcl
enter
and
adc
shr
out
imul
mov
xor
lret
fistl
in
jb
inc
adc
mov
xchg
imul
daa
sub
notb
sarl
push
xlat
lods
lret
cmpsl
xor
std
push
aaa
scas
divl
and
mull
mov
aas
inc
push
xchg
movntps
neg
inc
js
jb
mov
insl
cmp
lods
adc
das
rolb
ss
imul
mov
repz
xchg
repnz
out
adc
adc
icebp
enter
jl
lock
imul
mov
clc
stos
mov
inc
scas
or
jne
lods
mov
aam
test
jns
jbe
xor
mov
sbb
data16
filds
insl
add
cwtl
paddq
push
jne
or
gs
mov
or
repnz
mov
imul
insb
mov
arpl
add
cmp
mov
push
popa
jns
adc
das
mov
pop
xor
add
aaa
jb
push
je
mov
gs
adc
icebp
inc
mov
ss
jbe
enter
cmp
ljmp
adc
hlt
imul
jno
mov
or
jmp
insl
or
rorb
pop
int
icebp
sti
jne
pop
pop
loopne
and
call
mov
xor
scas
adc
clc
gs
add
jae
mov
gs
xchg
repz
add
jns
jo
jg
xchg
imul
cmpsl
pop
ljmp
call
incb
mov
mov
push
jl
push
cmc
xor
jge
jecxz
pop
popa
loopne
call
divl
outsb
cld
pop
lret
sub
fs
push
lcall
insl
daa
mov
xor
andl
loope
gs
enter
stc
addr16
insb
popa
rcll
popa
push
out
data16
mov
pop
fistps
fsubl
cmp
imull
xor
je
pop
jge
fs
pop
inc
scas
cmp
pop
cltd
arpl
sub
xor
and
je
arpl
pop
inc
cld
sbb
push
or
call
call
jl
les
xchg
and
add
mov
sarl
mov
cld
mul
inc
push
movsl
mov
pop
sub
leave
popa
dec
jae
es
test
sub
xchg
insb
fdivrs
imul
xchg
shl
data16
icebp
dec
rep
aas
cmpsb
jne
int3
adc
in
ds
loope
adc
pusha
and
cmp
xor
jg
mov
ret
das
dec
push
sub
ljmp
inc
out
push
mov
jbe
add
dec
cmp
jg
mov
ljmp
jmp
in
adc
and
mov
jecxz
mov
imul
sub
mov
lock
and
shl
outsb
mov
ljmp
repz
lock
mov
insb
outsl
push
lock
jno
enter
cmc
or
jmp
loop
xchg
popa
sahf
sub
cmp
sub
and
fildll
adc
je
lahf
mov
imul
jge
hlt
lods
lock
out
mov
je
xor
jle
stc
daa
int
inc
cmpsl
add
mov
data16
sub
nop
dec
icebp
jb
lock
insl
loop
stos
adc
std
adc
ljmp
xor
fmuls
and
sub
xor
shrl
and
insl
sbb
jg
repnz
call
cli
push
in
inc
stos
int3
stc
jnp
out
in
dec
adc
mov
in
cmc
insl
cmpsb
rorl
pushf
cltd
and
stc
loopne
mov
test
cli
pop
push
ss
xchg
out
inc
repz
imul
jl
stc
jle
out
xor
ret
or
loope
out
push
xor
cmpsb
ja
test
divl
or
in
mov
mov
jl
cmpsb
out
xor
fs
dec
je
jae
iret
aad
and
movsb
add
in
or
shll
push
jo
ljmp
xchg
ja
sub
cmp
movsb
rclb
js
pop
in
sub
add
push
movsb
stos
jle
push
addr16
xchg
in
imulb
mov
sub
mov
enter
mov
enter
repnz
outsb
xor
in
pop
aaa
fidivl
in
fs
repz
loopne
jp
ret
outsb
insl
adc
std
mov
out
dec
rclb
mov
repnz
inc
scas
hlt
xor
push
jg
gs
jne
cmova
and
movsl
outsl
addr16
daa
outsl
xor
lcall
int3
jle
jle
stos
add
cmc
hlt
scas
repz
mov
popa
test
mov
ss
jmp
dec
push
testb
jns
mov
in
mov
in
shlb
loop
push
dec
loopne
repnz
sub
and
push
arpl
lock
mov
jae
xchg
lock
out
roll
insl
lret
mov
cmp
dec
xor
mov
jecxz
icebp
andb
out
hlt
adc
push
adc
mov
mov
scas
hlt
jns
aad
ret
stc
outsl
out
push
icebp
pop
push
sub
imul
mov
and
mov
movsl
ja
ja
aaa
xchg
dec
outsb
rorb
push
or
int3
sub
in
movsb
out
xchg
mov
push
sub
movl
test
aad
jns
loopne
jg
das
insb
jnp
and
insb
mov
addr16
xor
mov
test
mov
push
mov
ss
push
pop
hlt
sbb
mov
nop
into
fidivrl
loope
xor
adc
xor
inc
lahf
mov
mov
sub
push
inc
inc
repnz
into
sub
push
jle
cmpl
lret
icebp
popa
cmp
dec
scas
jge
mov
push
push
jecxz
stos
jbe
or
outsb
loop
jns
call
imul
test
insb
hlt
divl
mov
jb
nop
divb
xor
push
cs
lcall
aad
xor
jg
push
shll
mov
imulb
jb
xchg
xchg
sti
ja
imul
pushf
arpl
xlat
loop
ret
push
gs
push
and
addb
outsb
popa
imul
inc
jl
addb
loope
addr16
xchg
pop
jo
jle
gs
xor
orps
jge
sar
jnp
movsl
repz
sub
mov
imul
inc
xor
mov
inc
jl
and
in
popa
movsb
jle
push
pop
clc
sub
icebp
rclb
loop
div
fs
fistpl
mov
mov
loop
mov
push
lods
add
arpl
or
lahf
repnz
jl
mov
jo
jb
test
xor
lods
mov
cmpsl
jnp
into
sbb
gs
adc
cmpsl
mov
inc
inc
icebp
jl
sbb
subl
aas
cmpsb
sub
nop
push
cmc
mov
gs
or
xchg
clc
imul
xor
or
in
in
sub
cmp
fsub
jno
ljmp
jge
adc
push
and
push
in
movsl
lock
clc
lcall
xor
push
aaa
sbb
addr16
pop
jbe
enter
dec
into
dec
cmp
movsl
mov
leave
popa
imul
pop
test
test
xor
rcl
insb
or
notb
aaa
xor
popa
dec
lock
jge
ja
push
in
mov
pop
push
scas
push
arpl
cmc
aad
idivl
pop
movsb
jp
and
jne
popa
shll
test
mov
push
jnp
inc
dec
mov
gs
push
lret
sbb
das
adc
in
shlb
out
mov
out
push
sub
fs
dec
out
repnz
sub
mov
test
repnz
addr16
movsb
pop
repz
jl
pop
pop
mov
mov
test
lcall
jle
mov
xlat
dec
and
lahf
call
js
cmpsl
adc
mov
cmp
out
jae
test
cld
mov
repz
nop
test
jg
mov
into
mov
mov
push
sub
mov
add
xor
daa
sbb
jae
and
test
sub
gs
mov
mov
dec
loope
jmp
addr16
cmpsl
sbb
sub
bound
xor
scas
jp
add
mov
nop
test
adc
repnz
jb
jecxz
or
test
gs
dec
or
or
fsubr
and
jge
imul
sbb
push
out
fiadds
cli
lock
bound
jmp
sub
das
icebp
dec
cmp
in
cmpsl
cli
clc
loopne
add
jle
inc
mov
ret
sti
xchg
movsb
xor
repz
cmp
push
or
insb
ljmp
dec
mov
xor
or
scas
cmp
xchg
sub
jne
popa
mov
stc
xor
popa
push
sarb
es
out
les
push
test
scas
or
jge
adc
repz
add
sub
in
cli
xor
pusha
dec
jbe
cli
popa
jge
into
sbb
out
rcll
push
sbb
add
lods
fwait
addr16
sbb
pop
scas
ljmp
pcmpeqd
rcll
insb
test
mov
out
imul
imul
mov
in
incl
cmp
out
mov
push
mov
aam
mov
sar
rcl
clc
data16
dec
inc
loopne
cmp
or
push
xor
mov
mov
and
cmc
ret
in
jle
out
int
push
aaa
aas
xchg
cltd
and
mov
cmc
int3
mov
push
lahf
jle
clc
dec
mov
loopne
js
push
cmp
xor
loopne
lea
cmp
jno
adc
xchg
loopne
push
mov
repz
and
add
push
daa
push
aad
lods
mov
out
xchg
push
mov
imull
push
xchg
push
es
push
popa
call
test
sbb
mov
cmp
divb
dec
mov
jl
lds
ljmp
push
sub
adc
pop
pop
or
push
xchg
push
jo
xor
insl
popa
push
mov
test
jo
mov
adc
daa
xchg
jl
pavgb
or
push
sub
push
out
icebp
into
dec
sub
test
lock
insl
sti
sub
sbb
jbe
popa
dec
test
ja
popa
in
inc
mov
jae
and
call
out
cltd
mov
cmp
xor
lea
and
std
gs
outsl
inc
scas
rcl
cltd
dec
jp
adc
sub
sbb
mov
jnp
out
add
xchg
push
jge
sub
xor
mov
imul
xor
cmp
jmp
das
or
jb
jnp
xchg
mov
jg
leave
sub
stc
mov
imul
insb
jmp
cmpsb
sbb
push
xchg
jae
or
cmc
clc
in
cmpsb
jl
cmp
lock
mov
test
lea
mov
or
xchg
jle
inc
popa
jns
pop
cmp
cmpsl
outsb
sub
ja
or
adc
js
sbb
repnz
out
fnsave
xor
xchg
jno
loop
push
mov
pop
add
in
test
ljmp
cli
int3
je
arpl
aad
adc
xor
xor
lods
xor
clc
stos
out
mov
out
out
sbb
mov
xchg
movsl
sarb
fsub
arpl
enter
jl
out
data16
sahf
repz
jg
jmp
mov
mov
shrl
movsb
shlb
dec
stos
jnp
jmp
arpl
mov
imul
pop
fwait
and
insl
mov
sub
cld
xchg
int
subb
stos
dec
pop
shll
cld
insl
lds
jmp
adc
pop
mov
popa
sar
cmpsl
hlt
nop
imul
mov
xchg
test
push
jmp
and
add
enter
ss
mov
imul
push
mov
pushf
push
jbe
and
xchg
mov
cmpsl
in
in
push
call
adc
inc
cmp
bnd
cmp
movsl
xchg
and
mov
push
addr16
daa
out
imul
pushf
inc
pop
mov
enter
lock
out
test
and
xchg
incb
std
jno
out
cmp
das
js
jg
add
xor
je
adc
mov
sti
xor
jns
ds
clc
rclb
gs
out
inc
ss
jns
jecxz
push
jbe
bound
call
adc
mov
or
lret
xchg
insb
jns
out
jbe
loopne
andb
rorl
fisttpll
insb
or
sub
pop
loope
adc
gs
and
sbb
xor
xor
lock
jb
pop
into
test
jl
inc
pop
xor
cmp
mov
cmp
and
cmc
inc
icebp
insl
jnp
bound
pop
popa
xchg
xchg
jle
shrw
insl
pop
jb
add
and
das
out
loop
gs
inc
imul
jl
js
aaa
data16
or
jne
hlt
push
sbb
inc
sub
fcoml
and
hlt
sbb
outsl
lcall
or
outsl
imul
jl
and
cmpsl
and
sub
in
cmpsl
loope
push
out
cmpsb
mov
cmpsb
xor
adc
xchg
jo
nop
mov
addr16
mov
bound
or
ret
push
mov
cld
cmp
push
adc
sub
push
imul
sub
out
in
sbb
stos
mov
jle
cltd
bound
jb
push
popa
or
mov
stos
gs
push
ret
jge
movsl
shll
loopne
rolb
in
adc
repnz
lock
cmc
shl
jg
mov
bound
inc
outsl
lods
in
sbb
das
icebp
mov
jp
or
sti
jo
out
shrl
sub
imul
lcall
in
daa
popa
in
out
jno
and
clc
lds
mov
dec
dec
push
jno
loopne
ljmp
dec
je
mov
test
and
push
mov
push
imul
data16
cld
sub
call
add
repz
das
dec
dec
loopne
movsb
repnz
das
add
imul
push
xchg
in
push
imul
imul
jns
int
popa
pop
int3
cmp
in
jne
inc
sub
cmpsl
testl
je
jp
xchg
mov
jns
sbb
mov
scas
jp
cld
cltd
sbb
mov
mov
push
add
lock
stc
and
insl
je
jl
inc
push
push
test
loop
xor
sahf
mov
cli
lock
repz
icebp
je
imul
mov
xchg
popf
jno
call
push
jo
int
mov
loopne
imulb
dec
gs
pop
fsubrp
jae
xchg
fcmovbe
push
xchg
lock
stos
imul
lds
jmp
ret
jle
mov
insb
sbb
jo
xor
daa
mov
push
jnp
scas
and
mov
cmp
outsl
adc
mov
and
loopne
outsl
sub
xchg
in
xor
pushfw
and
in
jns
ret
cmpsl
jp
lock
add
mov
stc
jl
inc
in
mov
push
adc
js
sti
out
mov
in
push
outsl
pop
cmp
in
adc
lret
mov
repz
in
xor
or
out
mov
xor
popa
mov
add
jg
mov
xchg
in
xor
cltd
mov
nop
pushf
cmp
sub
mov
hlt
dec
jnp
lods
or
js
rorb
xchg
inc
mov
and
cmp
in
bound
or
dec
daa
mov
adc
mov
lds
es
adc
push
mov
mov
daa
or
push
fwait
cmpsb
jl
and
mov
outsl
and
cli
add
dec
call
sbb
push
inc
jmp
mov
cs
push
imul
push
xchg
sahf
push
mov
sub
or
cmc
les
push
scas
popf
push
loopne
lds
mov
std
add
xchg
das
imul
lock
mov
sub
insl
ret
lock
push
ljmp
inc
enter
jnp
sbb
xchg
and
repnz
push
sub
push
repz
clc
mov
aad
cmpsl
mov
sub
and
inc
xor
sti
inc
addr16
outsb
subl
push
push
loop
mov
mov
mov
xchg
or
insb
push
loope
and
xor
icebp
mov
sub
xchg
jl
fisubrs
push
imul
addr16
lods
xchg
add
lcall
fists
mov
and
push
call
shlb
adc
or
sbb
jo
clc
shrb
lret
into
push
in
jecxz
popa
pop
pop
scas
pop
jns
and
jno
adc
or
adc
inc
rol
mov
adc
packssdw
enter
out
repnz
iret
mov
insb
ja
out
imul
iret
jp
mov
fcoml
mov
sbb
les
ds
jbe
lds
shl
fs
outsl
inc
mov
xor
pop
rep
imul
cli
data16
pop
popa
mov
lcall
test
adc
jmp
lea
jno
sbb
outsb
and
les
mov
adc
push
mov
scas
jl
or
jbe
xor
outsb
std
jb
jnp
stc
push
mov
cmc
inc
mov
imul
outsb
xchg
dec
popa
pop
arpl
jecxz
cmpsl
loopne
pop
push
mov
fs
mov
js
push
hlt
dec
das
push
mov
jae
jl
mov
call
in
sbb
lock
push
or
ja
mov
outsl
je
dec
rorl
out
in
insl
and
lret
push
in
mov
les
pop
and
in
loopne
loopne
inc
jecxz
rclb
imul
outsl
jl
mov
add
push
add
outsl
mov
mulb
add
jl
popa
mov
sub
sub
lds
nop
pop
bound
daa
jecxz
mov
pop
push
or
out
push
push
cmp
jb
jns
or
sbb
mov
dec
inc
inc
push
testb
ja
and
outsl
jnp
int
scas
xchg
out
sub
adc
jl
push
sahf
xor
into
jbe
jo
outsl
loop
je
adc
cmp
sub
jno
mov
gs
jecxz
loopne
leave
rcrb
imul
or
mov
dec
and
test
je
movsb
ret
shlb
cmp
jl
test
insl
out
cltd
orl
jp
insb
mul
mov
add
push
aam
stc
outsl
push
clc
popa
inc
mov
movsl
arpl
mov
test
lock
inc
xlat
shrb
imul
sub
aas
jecxz
clc
jbe
xor
inc
sarl
in
push
inc
sub
popa
lds
lods
scas
std
bnd
subl
sub
iret
daa
repnz
cmp
inc
insb
push
dec
sbb
std
aad
outsl
inc
cmc
sub
pop
fiaddl
in
and
push
mov
mov
shll
push
sub
xor
in
push
jo
xor
push
stc
inc
mov
out
imul
push
jb
gs
pusha
mov
fwait
loopne
sbb
jmp
lcall
mov
and
out
aas
jbe
sar
dec
cs
xor
jg
pop
shrl
movsb
adc
cmpsl
fdivr
mov
popf
test
lea
xchg
in
xchg
ljmp
lock
test
insl
xchg
sub
xor
loopne
adc
pop
outsb
xor
dec
movsl
js
jb
push
jle
loop
sub
js
in
or
jo
jecxz
mov
outsl
dec
jmp
jae
out
jmp
sub
imul
and
pusha
addr16
or
push
jp
sbb
out
out
out
xchg
adcb
jp
lds
bound
xchg
mov
sub
js
mov
mov
int3
mov
in
mov
arpl
jle
daa
icebp
gs
xor
and
jl
sbb
sti
mov
shrb
psrad
jo
push
popa
jns
mov
add
lods
pop
jo
fsubrs
adcb
jne
cmc
adc
loopne
push
arpl
loop
adcb
cmpsl
lds
scas
js
xchg
addr16
cmp
out
push
mov
adc
data16
and
arpl
int
jnp
push
mov
pop
and
mov
push
fldl2t
lock
loope
xchg
imul
fnsave
fidivs
and
loop
mov
xor
jge
enter
into
cmp
pop
out
jno
sub
cmp
rcrb
jbe
cs
and
dec
mov
arpl
cmc
dec
jg
jno
xor
bound
test
adc
ja
idiv
dec
xor
sbb
sub
into
sub
xlat
aas
imull
shrb
repz
test
lods
jl
incb
loope
ljmp
cmp
clc
jno
xor
sub
out
jecxz
push
mov
jo
push
iret
pop
pop
dec
and
jo
xor
cld
or
inc
jge
push
jo
int
insl
f2xm1
imul
fcomps
loop
xor
xor
xor
mov
jge
lock
xor
jb
dec
fs
push
int3
notl
sub
popa
mov
pop
js
jno
fadd
push
rcll
push
jmp
outsl
mov
outsl
dec
cli
adc
inc
scas
shr
outsb
in
incb
gs
test
push
xor
push
and
andl
xorl
insl
jl
inc
and
xlat
fbstp
call
insl
jo
jo
imul
adc
sub
js
xor
cmpsl
out
in
or
pop
jo
in
mov
mov
xchg
push
xor
ljmp
lock
popf
adc
out
outsb
cmp
cltd
in
inc
jb
movsl
xor
dec
ret
mov
push
bound
ljmp
loopne
and
mul
adc
xor
call
jle
addl
outsb
test
inc
imul
movsb
sub
cltd
and
and
imul
movsb
pop
mov
mov
or
enter
test
icebp
jno
out
loope
jmp
sub
mov
pusha
jl
xchg
out
push
lock
fnstcw
and
arpl
pop
stc
push
xor
sub
mov
mov
xor
mov
ljmp
addr16
leave
test
xchg
in
shrl
aad
sbbb
inc
das
push
adc
rep
test
mov
jg
and
pop
mov
je
es
les
mov
repz
and
mul
scas
push
jae
fdiv
ss
cld
loopne
jne
jnp
jns
fcmovbe
inc
ret
int
icebp
cmp
test
popa
mov
icebp
cmpsl
mov
cmpb
and
popf
jne
jl
lahf
pop
xchg
mov
push
outsl
rcll
xor
inc
lock
inc
adcl
inc
add
fs
or
loop
loope
cmp
repz
scas
inc
arpl
sbb
test
test
mov
popa
cld
pushf
adc
idiv
insb
ljmp
jo
loopne
xchg
mov
clc
dec
pop
mov
and
cld
gs
push
data16
in
outsl
pushl
xor
xor
cmc
divl
cmp
cmpsl
lock
outsl
fldcw
lea
jo
pop
imul
es
in
jae
es
stos
popf
test
jno
lock
xor
xor
lret
or
idiv
lods
jge
ds
shlb
daa
xor
jne,pn
imul
xchg
jo
xor
mov
aas
out
fdivrs
cmc
push
jns
jecxz
or
jo
outsb
push
dec
inc
movsb
mov
pushf
out
test
mov
rclb
in
jo
loop
push
inc
call
clc
jl
adcb
jg
jae
popa
aam
loopne
std
xchg
jmp
cmc
mov
loope
sub
jae
in
aad
cmp
out
in
xorl
repnz
add
ss
je
cs
imul
pop
push
inc
push
jnp
adc
xor
sahf
test
pcmpeqw
rorb
ds
lods
scas
fcomp
out
cmpsb
xor
mov
les
loopne
rclb
aaa
mov
cmp
mov
test
xor
jg
jle
lock
push
insl
in
inc
shl
push
cmpsb
pop
xchg
sbb
cld
es
imul
es
xor
cmp
enter
inc
mov
push
std
popa
mov
xlat
sbb
gs
xchg
stc
incb
push
hlt
sbb
cmp
mov
and
sti
mov
das
stos
sbb
divb
jo
sub
mov
out
pop
dec
push
std
lret
jnp
scas
rorl
movsl
dec
mov
out
jae
repnz
adc
jb
incb
mov
jmp
and
hlt
adc
or
leave
out
jne
imul
mov
outsl
and
cmpl
test
imul
out
xor
cs
push
in
inc
jo
das
cmp
push
dec
cmc
in
jge
jle
std
in
call
and
xor
dec
loope
mov
lock
cmpsl
push
mov
fdivr
enter
add
xor
pop
xchg
out
jp
pop
jg
in
xchg
xor
outsb
sbb
out
xchg
clc
sub
mov
jns
sbb
inc
jl
test
xor
cltd
cs
in
jno
fs
mul
push
sbbl
xchg
jecxz
mov
dec
pushf
jae
add
inc
inc
pusha
das
dec
aaa
xor
sarl
ljmp
scas
jg
xchg
pusha
test
jns
cmpsl
inc
mov
lods
add
aaa
lret
lock
cmp
cmp
pop
insl
popa
pusha
push
adc
mov
jno
stos
lahf
push
pushf
jp
sub
jno
test
xchg
je
and
enter
and
push
pop
dec
es
das
mov
xor
adc
xlat
adc
hlt
mov
das
push
and
out
xchg
fsubr
mov
es
dec
bound
out
aas
mov
jge,pt
lcall
push
orb
movsl
ljmp
imul
jmp
lods
jnp
pop
imul
out
movnti
jge
loopne
pop
in
pushl
mov
add
je
outsl
into
sbb
sti
imul
pop
mov
and
outsl
xchg
jl
bnd
insb
push
mov
xchg
hlt
mov
push
loop
data16
push
cmp
sbb
jae
jmp
xor
jbe
ljmp
stc
jo
sub
imul
adcl
jae
in
xchg
adc
push
rcrl
bnd
mov
mov
cli
push
lds
in
mov
adc
mov
outsl
nop
fcompl
mulb
inc
lret
rsqrtps
jbe
mov
jmp
movsl
or
push
mov
push
xor
repz
bound
stc
jb
jg
jmp
cmc
out
lcall
pop
fs
xor
rolb
popa
loop
imul
xchg
mov
imul
mov
mov
sub
and
imul
popa
mov
and
sbb
outsl
in
mov
cld
jecxz
es
jl
lock
int
jmp
mov
scas
inc
popa
and
rolb
jle
pop
mov
mov
xchg
repnz
xor
dec
call
or
dec
imul
jns
xlat
movsl
jp
lock
cli
mulb
mov
out
jmp
movsl
out
std
icebp
adc
and
repnz
loope
pop
sub
inc
out
addr16
lret
cld
mov
leave
push
mov
xor
and
inc
jl
inc
and
push
mov
inc
imulb
test
xor
mov
lret
mov
shld
outsl
mov
es
jno
mov
add
mov
movsb
popa
xchg
loopne
test
adc
jo
inc
push
mov
mov
adc
xchg
lret
icebp
in
stos
fwait
adc
xchg
jmp
or
rcr
jg
xor
enter
popf
and
mov
inc
sub
jmp
adc
sub
adc
push
movsb
lea
nop
addr16
fldt
out
movsl
pop
jo
push
pop
and
cld
lds
in
inc
daa
enter
xchg
out
inc
or
stc
jg
imul
stos
repnz
gs
mov
gs
jge
iret
test
in
add
scas
jle
imull
xor
bnd
xchg
js
mov
loopne
xchg
dec
mov
outsl
mov
adc
pop
mov
and
pop
and
add
inc
insl
or
out
pop
mov
mov
repz
rep
lahf
rol
adc
aaa
xchg
push
push
sub
jo
cs
push
jo
xor
in
xorb
lahf
adc
clc
mov
cmp
repnz
and
lock
xchg
insl
push
inc
les
daa
ret
shrb
pop
rorl
outsl
dec
push
pusha
dec
xor
xor
mov
or
in
sahf
popa
sub
movsl
push
lcall
popa
enter
jbe
dec
or
jno
clc
aad
addr16
cmc
mull
sub
ret
cwtl
jo
pushl
popa
or
lcall
popf
adc
push
fdivrl
in
sub
xchg
sub
les
or
outsl
pop
jge
inc
jp
xchg
int3
mov
daa
sbb
cmp
jmp
cmp
les
xor
popf
std
lock
xlat
and
mov
out
imul
mov
les
out
cmp
aad
jb
xor
cmpsl
cmc
data16
xchg
loopne
out
mov
cmp
cmc
insl
enter
pusha
movsbl
dec
mov
loopne
push
je
sub
mov
pop
outsl
sub
cmpsb
in
sub
jo
nop
lret
test
push
andb
jp
add
and
sbb
push
clc
xor
outsb
mov
in
outsb
jecxz
jl
into
mov
sub
imul
rcrb
imul
outsl
jmp
adc
dec
pop
cmp
cmp
pop
pop
mov
jo
mul
xor
inc
and
cli
xchg
popa
lock
insl
les
push
popa
aaa
clc
stos
std
arpl
and
push
xor
jo
test
into
mov
mov
adc
xor
push
bound
jb,pn
inc
cmpsl
or
dec
fsubl
mov
jecxz
scas
dec
bnd
shrl
sub
out
in
dec
push
es
lock
cli
or
insl
push
sbb
cmp
imulb
sub
in
lea
jp
push
pop
cmp
std
jo
icebp
mov
aas
in
jg
cmp
adc
jnp
mov
je
xor
arpl
mov
mov
shlb
xor
fs
jbe
arpl
sahf
clc
jno
xchg
xchg
adc
arpl
fcmove
jp
sub
cmp
jnp
sbb
xor
outsl
dec
push
push
les
push
imul
push
jge
dec
js
sub
cmc
adc
repz
dec
mov
push
jo
push
lock
or
in
sbb
jbe
jmp
jecxz
jns
outsb
and
jno
fimuls
int3
out
lock
fmulp
imul
mov
mov
retw
adc
test
xchg
icebp
mov
mov
shl
add
xor
adc
in
inc
js
pop
mov
mov
and
dec
fidivl
jmp
popa
jae
shlb
mov
pusha
popa
lods
cmp
outsb
decb
dec
rcl
imul
movsb
sbb
inc
out
dec
dec
push
jno
aad
xor
out
sub
lock
int
in
insl
mov
loope
inc
out
popa
cs
mov
jno
ficoms
sahf
fdivs
sub
jne
ss
inc
movsb
cli
test
or
jp
outsb
fsub
in
jns
or
jp
lock
scas
push
or
data16
cltd
leave
mov
out
xor
xchg
jo
lock
sbb
jo
dec
shl
push
xchg
insl
jne
push
mov
cmp
int3
mov
dec
push
adc
push
rcll
outsb
enter
lock
lock
xor
xchg
insl
add
push
sub
jmp
cld
imul
push
pushl
stos
imul
jns
into
adc
mov
mov
bound
aas
dec
push
xor
out
pusha
repnz
in
jnp
xor
dec
jmp
jmp
popa
adc
lcall
popa
shl
iret
sub
jo
dec
mov
or
xor
inc
out
call
jle
jp
popa
and
pop
push
ljmp
dec
mov
inc
sbb
add
add
imul
mov
pop
in
hlt
xchg
pop
loope
insl
sbb
out
je
mov
popa
xor
sbb
mov
pop
jl
test
cmc
xchg
and
aas
jl
movb
outsl
mov
jno
sbb
stos
sub
out
xor
push
ss
cmpsb
xor
mov
cmpsl
mov
insb
jge
out
imul
xor
js
lea
jo
jns
inc
movsl
push
push
popf
lock
pop
cld
push
or
imull
inc
lahf
fbstp
and
outsb
out
jg
or
ret
and
adc
cmpl
jbe
and
loop
into
push
mov
mov
xor
xor
idiv
sub
in
sbb
lods
faddl
enter
lret
das
and
inc
vpaddq
mov
xor
inc
call
adc
je
lock
push
incl
sub
push
cmp
hlt
sbb
sbb
dec
jmp
cli
popa
inc
mov
in
push
xchg
or
sbb
fld
imul
jns,pn
jecxz
lock
xor
jns
aaa
mov
test
adc
xchg
jnp
mov
push
lds
out
push
jmp
call
ljmp
cmp
in
int3
int
div
or
push
mov
cwtl
cmp
icebp
out
cwtl
aaa
cmc
cmp
call
cmc
jmp
in
scas
cmpsb
imul
fisubrl
out
dec
dec
jmp
into
subb
in
stos
adc
push
inc
and
jge
daa
movl
outsb
in
xchg
out
ret
jecxz
jbe
out
sahf
pop
cmp
ret
xchg
jno
mov
inc
pop
js
popa
scas
pusha
xchg
push
jne
sti
sbb
out
fidivrs
repnz
mov
pop
loop
in
lock
push
cmp
mov
addr16
lea
popa
inc
dec
rcr
fmuls
imul
outsl
out
xor
imulb
into
jmp
leave
jp
lea
jg
lods
push
fdivl
mov
outsb
jb
test
mov
and
div
les
sbb
or
das
mov
dec
push
jnp
lahf
push
mov
test
pop
mov
push
sbb
mov
aad
sub
jo
jle
imull
jno
movl
mov
gs
loop
mov
fwait
daa
lcall
int3
cwtl
enter
das
cmp
jge
daa
xchg
out
mov
clc
mov
nop
out
inc
xor
movsl
push
jae
push
jo
ds
cwtl
lret
push
mov
fnsave
dec
imul
xor
add
and
divl
movzbl
mov
sub
and
jno
loop
mov
gs
push
xchg
int3
clc
jo
out
and
xor
jb
imul
inc
push
jae
pusha
or
mov
in
jb
lock
cmp
nop
cmp
jnp
insl
mov
pusha
data16
pop
gs
or
pop
push
mov
push
dec
ss
adc
das
addr16
test
imul
mov
scas
lret
dec
adc
jle
jmpw
jge
je
imul
push
adc
sti
cmc
out
xchg
scas
mov
out
xor
inc
or
push
xor
repz
bnd
lret
fwait
stos
std
callw
adc
pop
sub
push
sub
iret
jge
pusha
test
lods
in
imul
adc
inc
sahf
sub
shlb
jle
bound
popf
mov
enter
jcxz
cmpsl
out
pop
cmp
and
ss
mov
mov
lret
push
jmp
clc
popa
pop
shl
pop
clc
loopne
or
sub
imul
mov
mov
push
jge
or
shrb
xor
xor
push
jg
mov
inc
pop
lock
cmpsb
inc
shrb
sarl
test
mov
arpl
shrl
push
xchg
in
push
xor
dec
icebp
test
popf
mov
imul
adc
gs
add
cmp
pusha
call
imul
lods
push
jle
stos
cmp
repnz
cmpsl
repz
add
sub
pop
pop
xor
and
jle
xor
inc
ljmp
push
mov
andb
popa
and
jecxz
scas
cmp
gs
inc
push
icebp
push
dec
ljmp
inc
lret
aaa
mov
sub
xchg
mov
xchg
cmp
dec
sbbb
pop
popf
dec
stc
cmp
cmp
cmpsb
das
jmp
repz
inc
mov
in
fsub
mov
shll
xchg
movl
in
stc
xor
xlat
pop
and
lock
and
or
aam
sub
or
jno
xchg
pop
ss
xor
scas
inc
fldt
js
jbe
int3
in
icebp
jecxz
rclb
fs
push
cmp
in
xlat
je
push
fistps
xor
jbe
repz
int3
cmc
loope
jne
or
mov
xor
cmp
jp
orb
fs
jl
pop
adc
xor
sbb
fsubrl
push
lea
orl
mov
pop
std
xchg
js
pushf
push
mov
push
inc
lock
xor
shr
mov
rclb
outsl
pop
out
mov
jns
sbb
test
jns
push
xor
dec
jl
repz
cmc
rorb
xor
sub
jno
lret
push
movsl
or
bound
add
lods
sub
rcrl
in
les
hlt
jp
mov
dec
insb
xorl
cmp
or
mov
sub
lcall
and
xor
outsb
adc
pop
dec
adc
push
push
repnz
mov
imul
sbb
adc
sub
scas
push
pop
fs
in
test
push
xlat
in
sbb
push
imul
push
and
add
mov
mov
jg
xor
sub
push
sub
dec
shrl
adc
xor
loop
adc
cmp
jle
mov
xchg
loop
mov
call
or
jne
loopne
movsl
adc
outsb
gs
rcl
int
std
shrb
aaa
xlat
outsl
push
mov
sub
loopne
mov
mov
lret
lock
sub
and
add
cmc
mov
gs
sbb
and
mov
in
sub
lods
movb
or
sub
xor
stos
aas
add
out
in
or
adc
je
jmp
cld
popa
out
lret
xor
clc
sub
orl
xor
sti
mov
addr16
aas
stos
aam
into
and
mov
fists
loop
lock
outsb
push
mov
fldcw
jb
loope
adc
gs
addr16
out
shlb
lahf
pop
repz
add
scas
icebp
jo
and
xor
in
loopne
add
scas
popf
pop
imul
mov
add
je
ret
jne
lods
rcll
popa
inc
xor
push
repz
arpl
jge
jecxz
and
pop
xchg
gs
fldpi
aam
ja
jg
or
xor
test
out
data16
and
mov
xchg
lods
mov
movsl
jmp
shr
jbe
rorb
rcl
jb
hlt
imul
mov
aaa
popa
gs
mov
cmp
cmpsb
bound
dec
in
adc
xorb
inc
adc
add
test
loope
addr16
jl
mov
mov
xchg
gs
sbbb
jno
push
je
das
jle
bound
imul
test
jns
xchg
jb
mov
idivl
pop
in
mov
outsl
jno
out
push
shrb
loop
repnz
sub
dec
xchg
push
insl
jmp
loope
xchg
push
test
mov
jo
push
mov
andb
lea
adc
outsl
outsl
inc
shlb
icebp
data16
ret
xchg
popf
scas
jmp
pop
sub
jns
mov
cmp
jp
out
decl
div
jmp
jl
mov
adc
in
loopne
jno
scas
jbe
lds
mov
push
stos
movsl
clc
in
js
fs
mov
xchg
add
sub
popf
addps
push
cli
cmp
dec
daa
and
adc
xor
cli
inc
addr16
jl
sub
jle
movsb
adc
adc
je
mov
mov
fisubrl
or
das
out
jbe
arpl
push
testb
adcb
insl
mov
bound
cmp
scas
jno
in
lods
mov
xor
icebp
jo
nop
xchg
inc
mov
es
gs
pushf
outsb
push
xor
inc
add
jo
jmp
push
inc
les
push
sub
jbe
push
push
sbb
xor
jbe
lahf
lock
dec
cmpsb
push
js
stc
arpl
mov
out
imul
mov
in
lahf
stos
aas
push
cmc
pop
ds
jge
lods
rcr
clc
push
mov
std
mov
adc
push
in
enter
adc
pop
mov
daa
imul
repnz
fidivrs
cmc
leave
insb
xchg
push
popa
adc
push
mov
push
mov
jnp
mov
loope
lret
call
rcl
je
in
scas
popa
sub
xor
push
das
mov
dec
loop
jne
scas
mov
xor
pop
sarl
in
xor
aaa
mov
imul
pushf
stos
adc
and
leave
mov
adc
rol
jb
sub
sub
mov
int
and
mov
lods
push
jg
jns
popa
jns
sbb
mov
push
cmp
cmp
add
xchg
loope
mov
daa
lds
icebp
lea
outsl
clc
popa
fcoml
jge
mov
add
mov
in
shlb
into
jo
gs
sub
or
incl
mov
xor
clc
call
mov
arpl
shlb
cmpsl
bound
xchg
xchg
cmp
neg
outsl
jo
inc
rcrb
icebp
idivl
ss
and
into
jg
enter
ror
pushf
mov
shlb
fidivrl
adc
cld
mov
in
jno
pusha
dec
jmp
addr16
jae
sbb
das
outsl
push
mov
fistl
jno
xor
dec
scas
ds
test
xor
outsb
shl
fldcw
fsub
push
or
repnz
out
cwtl
shrb
xor
sbb
popf
scas
push
xor
clc
popa
sub
jge
fmuls
in
fildll
cmp
outsb
cwtl
insb
dec
dec
jle
cmp
xor
pusha
xor
cli
outsb
popf
pushf
pop
addr16
sti
cs
sub
rolb
xor
std
fimuls
adc
out
or
icebp
cwtl
sbb
pop
xor
outsl
mov
jl
pop
clc
rcrl
push
gs
mov
popa
push
inc
ja
push
xor
xor
cmp
cwtl
out
clc
jmp
fldl
in
cmc
clc
or
clc
outsl
cmpsl
in
test
inc
push
popa
imul
add
dec
jno
and
xchg
mov
add
push
sub
nop
out
inc
sub
jp
std
sbbb
js
inc
mov
push
jnp
cmp
loopne
andb
or
out
loop
cmpsl
sti
adc
insl
jg
push
push
xor
dec
mov
lds
imul
jae
mov
inc
outsb
dec
lock
shlb
fwait
stos
jg
rcrb
jg
jne
in
sub
xor
mov
gs
cmp
out
notl
test
pop
stc
out
imul
ret
inc
lds
repnz
pop
lahf
dec
mov
cmc
lddqu
cmp
push
aam
in
or
add
mov
shl
scas
imul
into
sub
mul
mov
pop
repnz
jle
push
outsb
test
shrb
rolb
lock
mov
or
loopne
cwtl
subl
icebp
popa
out
jno
xor
or
inc
xor
push
cmp
push
outsb
sbb
addr16
xor
test
icebp
inc
stc
mov
popa
inc
pop
pop
jne
cld
subl
out
in
xchg
clc
aam
out
cmp
clc
outsl
sar
daa
in
aam
cli
arpl
push
pop
fsubs
aad
in
roll
push
adc
cmpsl
mov
out
xor
loopne
jns
ljmp
imul
hlt
mov
das
imulb
jmp
jmp
mov
imul
rcrb
or
inc
jne
fcoms
in
sbb
scas
mov
lcall
mov
push
xchg
sub
inc
jnp
es
std
cmpsl
loop
ljmp
dec
sbb
dec
mov
jno
repnz
jno
rorl
fucomp
pusha
outsl
jecxz
jb
test
push
sbb
das
movsl
scas
xchg
shl
clc
add
push
xorl
push
jo
mov
cmp
sbb
push
jno
je
push
mov
popl
cmp
xchg
pop
repz
jg
xchg
jno
sarl
stos
shll
push
stos
out
jbe
pop
xor
mov
cwtl
in
xor
ljmp
nop
pop
dec
and
fdivrl
jmp
movsb
sub
int
call
cmp
pop
push
dec
mov
mov
jmp
cli
decl
cs
jae
es
dec
in
data16
out
sub
shlb
bound
jae
in
outsl
test
addr16
mov
add
mov
fmulp
loope
or
dec
xchg
jne
imul
mov
outsl
push
popa
cmpsl
gs
pushl
push
loope
popa
int3
mov
jg
icebp
popa
loop
mov
out
mul
data16
xchg
or
push
hlt
out
gs
push
jne
mov
out
jns
mov
jno
psubd
arpl
repz
shrl
out
test
push
cmp
insl
jmp
jne
push
push
pop
mulb
jno
jb
cmp
jne
out
add
adc
adc
xor
insl
jge
test
movsb
daa
jmp
xor
hlt
adc
notb
jecxz
nop
int3
inc
or
jg
inc
out
push
ljmp
fstpl
out
xor
xchg
gs
dec
ljmp
outsb
push
xor
std
jns
popa
ds
adc
in
push
mov
xor
mov
dec
push
flds
jbe
scas
imul
jno
cli
pushf
shlb
out
outsb
inc
lock
jbe
enter
inc
outsl
cli
xchg
popa
fwait
imul
cmp
jecxz
in
ret
in
test
and
std
jne
push
fs
mov
call
jmp
jecxz
aam
push
add
sbb
mov
negl
dec
sbb
jmp
stos
je
inc
movsb
jge
jb
clc
loopne
mov
call
popa
cmpsl
jmp
popf
out
inc
cmpsl
mov
loopne
push
adc
out
iret
jle
push
xor
stc
jmp
jnp
mov
scas
gs
divl
popf
fdivrs
insb
cwtl
je
daa
movsl
jmp
shl
adcl
nop
or
mov
pop
cmpsl
arpl
loope
push
xchg
jbe
incb
in
pop
lods
out
ja
movsl
jp
push
pop
sub
xchg
lret
mov
jns
test
push
lcall
sub
add
mov
loop
imul
sub
addb
or
imul
ljmp
stc
xor
mov
xchg
imull
rclb
bound
int3
loopne
scas
in
and
int3
test
jecxz
sbb
jg
dec
out
rcll
push
add
push
jo
push
xchg
test
in
jno
inc
inc
add
loopne
mov
add
xchg
dec
dec
lret
hlt
sub
jle
sub
in
inc
js
mov
in
cld
jnp
sbb
aas
outsb
loopne
mov
movsl
imul
in
jns
xor
mov
int3
jecxz
mov
lock
mov
aam
popa
jnp
or
out
addr16
nop
arpl
xor
insb
imul
fbld
shll
insb
xchg
outsb
in
stos
shlb
imul
outsl
jmp
pushf
add
outsb
push
out
ret
mov
mov
jb
in
dec
pushf
xchg
cmp
jno
add
sub
jne
inc
mov
push
daa
jae
insb
popa
insl
das
icebp
icebp
adc
sbb
sub
notb
fidivl
in
repz
sub
out
mov
fdivr
jp
popa
xor
mov
scas
test
test
repz
mov
add
roll
loope
hlt
ret
mov
push
sti
sub
cld
test
sub
lock
push
daa
inc
pop
repz
or
inc
adc
outsb
insl
jl
daa
xlat
lock
and
mov
ljmp
push
cmp
xchg
out
jb
jo
out
fimuls
insb
data16
xchg
push
stc
js
push
mov
mov
dec
stos
or
icebp
mov
ljmp
mov
arpl
in
les
clc
jno
jne
addl
jg
in
mov
add
imulb
ljmp
gs
bound
jle
out
lds
lret
mov
mov
sarb
or
jg
and
dec
adc
xor
sub
stc
pushf
xchg
scas
ja
xor
push
je
or
sbb
loopne
and
out
jno
int3
test
or
insb
dec
es
jno
rcrb
dec
mov
repnz
in
shll
roll
pushf
jge
xchg
call
es
cmp
sahf
fadd
mov
je
out
out
aaa
jo
testl
idivb
inc
out
push
xor
fdivrl
insb
jge,pn
jg
jge
sti
mov
jns
jns
mov
es
insb
in
sub
push
fdivl
sub
inc
inc
push
outsl
push
sti
ret
ljmp
push
inc
add
inc
test
xor
mov
gs
arpl
xor
xor
mov
mov
lds
decb
inc
test
jbe
jbe
lret
popa
rorb
add
rorl
add
loopne
or
cld
push
cwtl
into
cmpsb
out
add
sbb
lock
jmp
and
repnz
jecxz
movsb
sti
repz
in
jge
lds
js
xor
cs
inc
xlat
mov
jg
mov
adc
sub
push
outsl
fimull
ja
sbb
jae
in
clc
scas
cmc
das
imul
aas
repnz
scas
imul
inc
push
cmp
cmpsb
out
mov
xor
out
out
push
test
add
decb
add
push
dec
jnp
jns
lock
std
inc
rep
mov
xchg
loope
insl
jns
push
dec
xor
dec
ss
enter
xchg
into
lods
pop
out
cmpsb
pusha
mov
fildll
in
jne
hlt
push
test
xchg
and
je
pop
push
pop
dec
and
jbe
or
test
dec
arpl
sub
mull
rclb
pop
lods
inc
imul
cmpsb
or
stc
jl
push
and
sbb
sub
jb
pusha
and
call
hlt
jns
jecxz
fs
imul
out
sbb
test
xor
push
pop
ljmp
lahf
and
loop
dec
icebp
jae
push
sarb
sbb
shl
jge
out
out
add
mov
in
bound
jo
xchg
loopne
or
rcl
pop
arpl
out
call
shrb
or
mov
imul
jecxz
cmc
imul
push
pop
lcall
loopne
mov
sub
adc
xor
icebp
test
cmp
mov
mov
loopne
sbb
cmpsl
dec
jb
or
fcoms
gs
jle
aaa
outsl
jbe
push
popa
inc
dec
pop
jae
mov
gs
gs
and
mov
insb
pusha
lcall
ds
call
xchg
push
aaa
push
pop
mov
mov
sbb
add
pusha
insl
out
cmpsl
jecxz
jg
mov
cmpsl
xor
out
adc
inc
fisubrs
jo
nop
inc
inc
lds
call
jmp
pop
jle
jbe
imul
mov
jnp
fcompl
clc
jo
mov
or
icebp
xor
das
cwtl
xor
sub
ss
jo
jns
jecxz
fldenv
inc
jb
cli
jp
scas
sti
outsl
data16
xchg
popa
daa
mov
das
push
ljmp
in
pop
fisubs
push
jl
stos
jo
insl
or
test
aam
add
jmp
xchg
shll
fdivrs
xchg
imul
sub
call
lahf
xor
int3
sarb
push
jmp
mov
push
jge
out
nop
lea
pop
aaa
push
sub
jne
loopne
pop
xor
rep
xchg
call
adc
addr16
int3
and
loopne
pop
lock
fwait
hlt
xchg
push
insl
inc
dec
pop
icebp
or
test
js
adc
mov
loopne
or
pushf
sub
test
lock
add
mov
mov
cli
jge
sub
jp
jno
imul
loopne
in
je
repz
xor
mov
imul
std
adc
test
or
fmuls
fnstenv
mov
push
xlat
xor
push
adc
nop
daa
cmp
cmp
int3
scas
std
jne
andl
pop
imul
push
xchg
jns
lock
icebp
testl
shl
jne
add
sti
int3
sub
movsl
dec
std
lods
clc
out
pop
sub
repz
fisubrl
nop
add
push
test
loop
cmp
fstps
clc
popa
jl
push
xor
push
cmp
aaa
cli
test
nop
pop
adc
shl
xchg
sbb
push
and
pop
inc
out
nop
mov
lcall
jecxz
sbb
lds
sarl
clc
adc
jg
inc
scas
bnd
imul
jno
dec
lods
aas
xor
dec
rclb
xor
outsl
pop
daa
jns
in
push
and
sbbl
scas
in
jne
mov
push
enter
in
insl
and
xor
mov
pop
scas
push
std
call
or
jg
popa
shlb
inc
lock
mov
adc
addr16
jns
movsb
push
jl
and
les
push
out
push
cmpsl
and
pop
outsb
jle
jl
inc
cld
xor
loopne
cmp
xor
push
test
jbe
imul
ss
xchg
pusha
repz
jp
imul
inc
add
ds
pop
div
or
cmp
and
outsl
mov
mov
dec
mov
lock
sub
mov
clc
les
jns
cmp
out
xchg
adc
mov
lock
rcrb
bound
lock
leave
mov
lods
or
arpl
mov
nopl
or
add
and
mov
pusha
ficoms
shlb
fsubr
mov
bound
test
inc
ja
fidivl
cmp
test
sahf
jo
jae
repnz
imul
out
jno
mov
cmp
clc
xor
aaa
je
jns
pop
pop
fs
lret
mov
outsb
fidivrs
in
push
loop
cmp
arpl
push
stos
ja
xor
lret
test
inc
testl
inc
test
and
add
sub
cli
sbb
out
lret
clc
mov
ja
imul
rclb
das
jmp
mov
imul
mov
jmp
add
jo
fnstenv
mov
mov
in
scas
dec
mov
xor
int3
cld
imul
sahf
cmp
jns
es
xchg
jae
xchg
push
repz
add
test
gs
je
jae
dec
cmp
pushf
hlt
cli
lret
jg
jle
dec
jne
stos
mov
jmp
push
and
les
stc
nop
push
movsl
adc
outsb
repz
add
xor
or
mov
push
jae
ret
lret
rcrb
loopne
xor
inc
popa
popa
lods
lds
je
mov
cmc
jle
lock
jl
xor
dec
mov
jmp
hlt
in
lds
push
jo
xor
sbb
test
sti
rsqrtps
adc
pop
mov
cwtl
jo
test
push
clc
insl
mov
dec
scas
jge
subl
push
enter
push
out
sub
xor
jmp
outsb
jb
test
mov
stos
mov
mov
pusha
nop
push
cmc
imul
ds
jle
mov
xor
mov
std
shl
arpl
add
xor
jmp
dec
cli
xchg
popa
dec
jae
nop
and
cltd
jle
enter
loopne
cmp
std
push
dec
lret
mov
mov
addb
xor
mov
imul
inc
outsl
and
popa
add
lret
je
push
in
jno
jo
test
stos
or
sub
and
rcl
mulb
ljmp
push
mov
push
dec
pusha
inc
push
lods
cs
out
sbb
sti
pushf
in
and
gs
mov
mov
adc
xor
gs
mov
sbb
imul
push
jmp
test
popa
fwait
std
stc
rorb
js
mov
push
out
or
loopne
bound
dec
and
jno
cmp
addr16
adcl
aam
scas
mov
jns
dec
enter
cli
jno
arpl
jl
fsubl
shrb
mov
lds
arpl
cmp
and
and
daa
and
imul
push
push
adc
loopne
cmp
sarb
dec
jl
aas
repnz
je
jb
mov
mov
stos
cmpsl
cmp
out
into
add
shll
bound
test
add
lock
pop
cli
adc
js
ss
es
insl
in
jae
mov
cmpsb
in
popa
cmpsl
sbb
clc
out
push
loopne
mov
xchg
push
div
mov
push
imul
mov
lock
jnp,pn
mov
loopne
mov
out
xchg
ret
mov
dec
jb
enter
scas
mov
push
movsb
and
cmpsb
xor
es
ss
ja
pusha
sbb
jno
fs
inc
mul
mov
in
cmp
in
sub
hlt
cmpsb
sbb
cmc
imul
xor
xor
loop
divl
fs
orb
jne
outsb
sub
cli
push
mov
call
out
int3
xor
lock
mov
xorl
push
fsubl
cmpsl
insl
outsb
jno
push
imul
cmpsl
jns
imul
test
dec
fnsave
dec
or
sub
xorb
or
jno
xchg
add
sti
and
mov
lods
test
sub
gs
cli
icebp
and
imul
stc
push
in
icebp
dec
mov
cmp
outsl
test
push
leave
dec
pop
sub
je
outsb
out
outsb
lock
cli
cmp
imul
aas
mulb
xor
arpl
stos
repz
outsl
sbb
mov
jbe
das
xor
cmpsl
push
sub
clc
fdivrs
sbb
xor
lea
out
xchg
sub
and
icebp
jno
xchg
xor
pushf
mov
sahf
in
xor
scas
imull
sti
shl
mov
jno
shrl
inc
rcl
jp
sub
mov
mov
mov
idiv
gs
dec
ja
dec
rcrb
rcll
sub
adc
shlb
sbb
jns
sbb
mov
movsl
cld
mov
lods
clc
add
push
pop
movsb
mov
or
jmp
jl
jmp
jb
lock
push
insl
push
xor
adc
imul
in
mov
fisubrl
adc
lock
lret
imulb
mov
imul
jns
faddl
or
lods
popf
xorl
mov
jno
ljmp
loopne
jge
jg
cmp
xor
loopne
pushaw
inc
mov
stos
mov
std
icebp
pop
cmc
jmp
in
arpl
or
sbb
push
mov
jg
popa
push
jb
in
and
mov
lcall
push
push
jno
jl
mov
scas
push
push
mov
mov
ljmp
dec
dec
std
lods
call
loop
hlt
add
outsb
cmpsl
pop
jne
outsl
idivl
sub
add
sbb
in
push
pop
jnp
fsubrs
jne
fisubl
fwait
inc
cmp
jmp
scas
cltd
cmp
mov
pop
jl
push
scas
imul
loopne
sti
xor
xlat
mov
les
push
ljmp
addr16
sar
pushf
in
insl
pop
psubq
mov
insb
imul
and
popa
sub
cltd
mov
mov
cwtl
jae
repnz
enter
sub
push
sti
movsl
pop
incl
jb
imul
stos
lods
stos
dec
pusha
cmp
lret
cld
bound
xor
insb
int3
in
test
push
push
sub
out
shrb
xchg
sbb
mov
push
xor
jb
cmpsl
cmp
les
jp
mov
mov
lods
jae
cmp
mov
or
jl
stos
subb
int
sub
jg
xorl
stc
jno
fs
loopne
add
mul
jno
jb
adc
in
sub
xor
es
insl
mov
icebp
mov
push
xchg
fldl2e
clc
cmp
cmp
js
addr16
mov
inc
xchg
popa
out
in
and
pop
pop
fmull
fidivrs
mov
jle
push
in
bound
loop
mov
aaa
jno
negl
push
and
ja
pop
outsb
scas
sahf
mov
push
pop
sbb
fdiv
mov
jg
cmc
inc
xor
repnz
popa
out
cmpsb
inc
sar
jo
push
xchg
imul
add
movsb
cmp
add
jle
mov
adc
out
mov
jl
test
jno
jns
mov
loopne
push
fs
and
pop
ljmp
sbb
icebp
cmc
mov
push
inc
lock
ss
xorl
mov
outsb
inc
mov
int3
fdivr
icebp
std
hlt
add
jge
shrb
xchg
dec
pop
inc
mov
outsb
out
stos
push
idivl
jb
jae
daa
out
jmp
mov
jecxz
xchg
xor
cmpsb
mov
imul
adc
and
subb
xor
icebp
outsl
jp
lock
push
mov
imul
cmp
mov
das
jae
mov
pop
and
outsb
mov
lea
loop
cltd
and
test
adc
popf
xor
jne
cmp
inc
loop
ss
in
cmp
mov
fdivs
ljmp
jns
jae
scas
arpl
popf
outsb
jne
or
movsl
sub
in
mov
jl,pn
loopne
xor
jne
sbb
xchg
xor
mov
ret
mov
imul
mov
in
ljmp
js
cli
sbb
mov
sub
jno
sahf
push
rorl
gs
jl
jbe
lock
xor
mov
repnz
imull
xchg
enter
shr
jns
xor
add
lret
inc
movsl
jae
jecxz
push
iret
add
sbb
lock
jmp
push
in
lds
cmc
jmp
xor
jbe
int
jb
jns
jae
mov
loope
bswap
xchg
jb
mov
popa
add
xchg
push
jo
repnz
mov
inc
in
and
popa
iret
leave
adc
and
jmpw
imul
mov
gs
and
add
out
scas
mov
mov
pop
jnp
mov
push
clc
jno
pop
mov
sbb
popl
in
mov
repz
mov
inc
push
mov
or
xor
ret
pcmpgtd
imulb
adc
add
jp
sbb
out
adcl
or
jo
push
dec
rcrb
jo
xor
ss
inc
mov
xor
push
cmp
fstl
push
loop
lahf
jmp
jns
outsb
xor
loopne
loope
outsl
jle
xor
outsl
cwtl
or
shlb
push
lock
add
subl
xchg
push
stos
seta
xchg
push
lea
out
xor
cmp
test
push
jle
repnz
movsb
ljmp
std
jns
in
rep
outsl
cmc
sbb
inc
popa
icebp
pop
enter
loop
sbb
fnstenv
dec
xor
mov
popa
arpl
cmc
sub
push
test
sbb
push
je
mov
out
insw
idivl
xchg
or
js
mov
cs
mov
pop
cld
xor
test
ds
lea
sti
or
jns
arpl
dec
jnp
stc
cmc
pop
mov
dec
int
aas
fldcw
rcr
mov
push
shr
xor
sub
jnp
frstor
lcall
test
outsb
inc
sar
cmp
jmp
jp
and
lods
mov
cmpsl
pop
test
mov
cli
popa
sub
data16
outsl
loopne
adc
pop
fisubrs
movsl
xlat
sub
push
jp
mov
mov
adc
test
sbb
mov
xchg
scas
cli
fnstenv
sub
dec
xchg
orl
xchg
fs
insl
insb
loope
bound
lret
rorb
movsl
mov
mov
push
enter
stc
ja
call
lds
das
hlt
movsl
cltd
and
adc
popa
push
enter
js
add
cmp
jl
cld
mov
jae
mov
and
cmc
icebp
hlt
mov
mov
subb
jo
adc
mov
xor
lret
negl
or
push
mov
mov
out
push
push
test
lea
push
aam
sbb
mov
shll
scas
pop
adc
popa
dec
out
xchg
push
ds
loopne
sbb
nop
fsts
dec
insb
imul
aam
imulb
push
clc
lods
dec
leave
test
shll
jne
lea
repz
lock
xchg
loopne
test
in
sbb
loope
jl
fistpl
test
sub
sahf
testb
dec
loopne
test
daa
dec
in
jl
inc
push
lea
lret
movsb
jecxz
loop
sub
enter
lds
fisttpll
push
and
jae
fidivrl
lcall
push
xor
scas
aaa
fdivl
out
shlb
cmp
mov
in
mov
call
and
push
nop
sub
push
xchg
sti
push
je
cmp
subl
jno
add
inc
push
movsb
daa
fiadds
addr16
xor
mov
es
xor
pop
aaa
scas
push
mov
addr16
sub
push
and
pop
xor
stc
pop
ror
out
push
bound
mov
dec
jo
por
sti
out
mov
dec
fisubrl
jmp
clc
jnp
imul
jp
data16
je
jne
cli
xor
sub
jg
cs
fildl
call
push
jmp
dec
outsb
jle
cmp
sbb
mov
sub
xor
mov
fisubrl
mov
dec
jmp
cmp
xor
icebp
clc
sahf
jle
add
mov
shlb
rol
cmc
sbb
mov
jnp
in
xchg
loopne
imul
and
rorb
es
sub
ja
sarb
int
das
imul
adc
jmp
xor
movsb
pop
mov
jb
out
in
lds
push
push
xor
xchg
popa
test
pop
lods
mov
push
pusha
imul
push
pop
jno
addr16
fldenv
popa
dec
adc
inc
jecxz
push
ljmp
jns
ljmp
jb
push
xchg
scas
fisubrl
clc
es
jmp
pusha
cli
sub
out
jp
cmp
xchg
stos
out
jg
es
ret
inc
jge
addr16
cmp
jg
popa
ds
sub
outsl
sub
jns
dec
pusha
test
icebp
in
cmp
sbb
push
jl
test
sti
jg
testb
movsb
leave
mov
cmc
rol
adc
repz
push
mov
imul
push
cmp
mov
xor
cmpsb
or
push
out
flds
xor
int
popa
bound
dec
push
shlb
mov
out
out
sub
jnp
xchg
insl
addr16
lods
push
gs
adc
rolb
pusha
outsl
and
fnstsw
cmp
mov
lcall
add
popa
push
xchg
idivb
jno
or
flds
and
in
cwtl
sub
sub
imul
out
cltd
movsb
addr16
mov
mov
add
imul
insb
test
push
fldcw
jb
jae
bound
pop
popa
jg
mov
jecxz
inc
xor
or
mov
xchg
outsl
cmpsb
iret
push
pop
dec
bound
aad
adc
or
ss
bnd
leave
sbb
scas
gs
fnclex
popa
rclb
jae
inc
dec
xor
xchg
xorw
sub
mov
xor
xchg
push
clc
outsl
xchg
pop
cltd
data16
je
in
gs
loopne
add
lds
outsb
push
or
jne
repz
test
inc
lock
lock
cmp
or
cmp
mov
mov
fs
data16
sub
jne
jmp
mov
xchg
rcrl
loop
fnsave
imul
adc
outsl
div
js
mov
loope
lea
popa
fs
scas
rcl
popa
inc
xor
fnstcw
sub
jbe
jno
lods
lods
in
pusha
jmp
loopne
sub
mov
mov
lods
inc
cs
push
jle
and
pop
movlhps
lcall
add
sbb
inc
ljmp
in
in
js
je
cmpsl
icebp
data16
mov
loop
sbb
push
or
pop
daa
sub
jno
ss
jl
dec
ret
xor
fdiv
repnz
jae
mov
xor
popa
and
hlt
lock
xchg
mov
je
pushf
ljmp
movsb
lcall
out
jnp
bnd
jb
push
xor
xor
sub
push
lods
lret
rclb
js
cld
addr16
jno
dec
mov
data16
sti
xchg
movsl
mov
mov
push
out
popa
sahf
sbb
das
and
sbb
dec
fstl
add
stc
inc
jecxz
push
xchg
icebp
jmp
cli
add
pop
jnp
and
mov
mov
popa
push
out
adc
cmp
xor
push
in
sub
jae
jmp
fs
outsl
cmpsl
clc
scas
cmc
xor
je
imul
or
inc
dec
pushf
jmp
aaa
or
lock
je
imul
push
inc
test
outsl
lock
pop
jo
sub
lret
pop
dec
leave
clc
pusha
sub
mov
imul
addr16
outsl
out
xor
cmpb
je
sub
aam
inc
jo
mov
shlb
stc
inc
xor
loopne
xor
ljmp
mov
push
cmpsl
jbe
shr
jp
jo
jle
push
and
mov
test
jns
aad
out
jle
inc
mov
popa
lea
cmp
mov
cmpsb
rcll
xchg
loope
lods
popa
jno
int
jo
push
jl
vmovups
xchg
cmp
mov
mov
insl
jns
pop
into
ret
xor
outsb
and
dec
scas
push
sub
enter
bnd
outsl
addr16
cmc
mov
sarl
or
xchg
icebp
sub
push
outsb
out
lahf
and
call
clc
cmp
mov
lds
xor
dec
mov
sub
pop
add
loopne
dec
mov
dec
mov
nop
mov
ror
data16
jecxz
jg
fcoml
jmp
mov
scas
lcallw
jle
es
cltd
jp
sub
mov
lea
cld
into
sbb
das
cli
mov
outsb
stc
stos
adc
loopne
cmpsl
arpl
mov
xor
xor
test
xor
jecxz
mov
ljmp
jb
jnp
cmc
mov
push
sub
xchg
cltd
jge
mov
push
test
pop
inc
add
xor
idivl
popa
or
mov
shl
pop
dec
bound
arpl
sub
jl
push
in
inc
sub
cmp
inc
clc
outsl
push
shlb
xchg
mov
sbb
leave
dec
lock
outsl
mov
aaa
jo
es
addr16
arpl
sub
insb
in
jo
test
icebp
dec
cli
add
je
scas
pop
jnp
sub
call
bound
es
jge
xor
xor
call
aam
cmc
bound
mov
pusha
into
mov
adc
aas
popf
jge
sub
scas
cwtl
outsl
jne
fsubrs
add
outsb
fdivp
in
jns
mov
jnp
in
mov
push
out
fwait
jmp
jns
mov
xor
ss
mov
jne
bound
mov
fwait
dec
fdivr
ret
bound
pop
jbe
data16
cwtl
push
pop
pop
cmpsb
ja
imul
int
hlt
in
popa
arpl
xor
cmp
rcrb
imul
cli
in
pop
dec
scas
ret
push
cmc
inc
stc
out
jo
inc
cmp
arpl
push
jae
inc
jl
rolb
cmp
hlt
xchg
jecxz
jno
xor
lods
jp
repnz
dec
xor
dec
sub
jp
insb
loopne
in
nop
mov
lock
sahf
stos
or
and
jns
fidivl
xor
addr16
push
mov
add
pusha
shll
and
dec
idivb
xchg
dec
les
in
shlb
push
popa
push
push
or
jle
push
jo
lock
dec
js
sbb
je
adc
jecxz
int
mov
std
sub
jp
mov
jl
mov
xchg
lods
aam
jle
mov
callw
cld
xor
jle
add
sti
or
mov
adc
cli
jae
sbb
repnz
jae
cmp
jg
repz
jb
addr16
mov
mov
aaa
cmp
out
sub
xor
aad
jmp
jo
jge
icebp
imul
gs
inc
lock
aas
in
clc
insl
vmulss
stos
ds
sbb
les
mov
daa
repnz
cmp
out
xor
rclb
cmc
cmp
mov
pop
jnp
adc
mov
in
cmp
jae
jge
ljmp
mov
mov
jp
gs
and
push
jb
test
push
lock
bound
inc
jge
mov
sti
insb
mov
push
rcl
adc
js
ret
daa
lds
sub
bound
aam
sbb
movsl
lahf
mov
sbb
xor
xor
adc
jmp
push
insl
faddl
lock
mov
not
and
test
fldcw
xor
lock
jmp
jl
push
ret
xor
cmp
shlb
or
addl
cmp
cld
jp
push
jo
sub
loopne
jb
xor
int
clc
jecxz
mov
or
fdivr
add
scas
hlt
jns
jb
cmp
aaa
addr16
imul
push
imul
outsb
xor
mov
mov
sbb
jno
rol
stos
jle
dec
icebp
insl
pop
cmp
addr16
sub
sub
xchg
cmpsl
std
pop
js
or
insl
cmp
cli
sub
pop
jle
push
jne
clc
jl
dec
pop
in
mov
scas
cmp
push
js
adc
jecxz
shll
jge
mull
dec
or
popa
pop
int3
mov
out
jmp
out
test
sti
lock
imulb
sarb
cmp
movsl
pop
sub
scas
lds
mov
push
jno
rep
push
loope
test
icebp
data16
xchg
mov
sub
dec
xor
test
in
and
push
icebp
loopne
and
popa
jns
ficomps
enter
inc
jp
adc
data16
cmp
stos
cmpsb
cmp
hlt
jo
pusha
cmp
mov
mov
mov
jle
pop
adc
das
pop
sub
sub
sete
loop
xchg
scas
jl
jb
aam
and
add
adc
dec
std
jae
and
loope
xor
sbb
outsb
add
mov
bnd
pop
sub
outsl
sub
xor
xchg
xor
in
rol
fdivrs
test
divl
jle
sbb
je
test
es
jae
insb
inc
jg
xor
mov
das
adc
xchg
inc
int3
mov
and
lods
cltd
ja
bound
xor
pushf
movsb
mov
sbb
mov
push
sti
add
stc
repnz
sti
call
push
mov
or
jae
xor
xor
mov
or
xchg
inc
out
jo
mov
push
int3
and
imul
popa
jne
out
lret
jl
add
adc
jp
sub
mov
roll
mov
xchg
shlb
mov
or
and
jo
mov
in
jnp
mov
and
mov
jb
bound
cmp
test
ror
insb
push
adc
mov
in
les
dec
mov
lds
and
pop
push
lahf
cmp
shrl
sub
inc
shl
cmp
out
stos
outsb
mov
xchg
out
lahf
hlt
xchg
jg
pushf
push
jo
push
xchg
lock
cmp
push
jo
xor
mov
jnp
jnp
xor
testb
nop
and
or
mov
xor
sbb
icebp
mov
mov
inc
imul
and
or
and
movsb
loope
xchg
and
imul
dec
cmp
jae
mov
lcall
sbb
jle
dec
push
mov
leave
punpckhwd
jns
aas
cli
jae
xor
and
mov
loop
gs
imul
shl
gs
clc
or
jns
imul
jmp
rorl
inc
sbb
ret
test
stc
jecxz
adc
xchg
cmpsl
sbb
gs
push
inc
jge
cltd
push
clc
and
or
fnstenv
cld
gs
lcall
imul
xchg
outsl
imul
push
fldcw
jo
mov
aam
dec
pop
cld
or
and
dec
pusha
out
jle,pn
imul
in
gs
and
jo
stos
push
icebp
imul
call
imul
dec
repnz
out
or
imul
xor
sbb
jns
inc
orb
sbb
stc
lock
mov
dec
mov
mov
std
repz
push
sub
jno
dec
xor
loope
or
jle
jno
xchg
mov
stos
pop
ds
loope
out
adc
mov
ja
adc
add
out
jnp
jle
sbb
hlt
xor
inc
test
xor
xor
add
jle
mov
data16
imulb
inc
fs
cmpsb
in
repz
inc
lods
xor
or
test
fs
fcomps
cmp
lahf
pop
jmp
popa
cmp
testb
test
jnp
inc
xchg
loopne
and
outsb
jne
cli
jl
enter
jle
fidivl
not
mov
xor
addr16
cmp
sti
sarb
fcoms
in
leave
inc
dec
es
xor
jge
out
xor
out
stos
jae
idivl
gs
mov
sbb
outsl
daa
add
andb
xchg
mov
inc
popf
movsl
pop
lahf
lret
in
fdivr
and
mov
cld
pop
push
mov
out
shlb
sarl
xchg
subb
pusha
adc
movsl
pop
cmpsl
xchg
outsl
jp
adc
and
inc
mov
inc
scas
or
cmp
clc
outsl
add
rclb
sbb
mov
and
test
xchg
xor
stc
inc
out
inc
std
and
adc
xor
add
lods
out
repnz
mov
jo
in
add
dec
and
mov
push
ja
addr16
dec
dec
loope
lods
movsb
int3
je
cltd
or
and
xchg
scas
testl
ljmp
cli
divb
dec
iret
push
push
xor
imul
int3
ja
mov
xchg
jno
cs
jb
dec
fs
inc
das
loop
jns
xor
loopne
jo
xchg
aas
sub
jge
lock
pushf
loope
jmp
nop
inc
mov
adc
ja
add
outsl
insb
std
mov
addr16
rclb
int3
call
scas
pop
jbe
or
repz
push
cmpsl
pop
shr
jo
mov
mov
inc
mov
xor
lcall
loop
fwait
sub
mov
dec
push
outsb
and
xor
imul
hlt
xor
jp
imul
arpl
loopne
mov
jl
arpl
loop
dec
lock
xchg
dec
jle
mov
sbb
movsl
xor
ret
shrb
inc
std
push
test
xchg
fldcw
jo
int3
jbe
push
fs
stos
mov
ds
out
xor
mov
aad
gs
sarl
pop
and
addr16
in
sbb
loop
scas
daa
cmp
insl
and
imul
push
ds
xchg
dec
scas
je
imul
cltd
imul
in
mov
outsb
push
dec
sub
xchg
insl
mov
jmp
inc
jbe
xchg
std
ja
mov
pop
cld
lea
fs
jmp
shlb
shrb
test
dec
das
and
mov
cmp
scas
js
jmp
or
dec
add
into
xchg
and
loope
xchg
jecxz
add
js
jl
out
jno
out
add
jge
pop
lock
jb
js
test
jns
dec
jmp
cmp
jbe
mov
gs
insb
test
xchg
scas
push
les
and
xlat
adc
mov
cmp
push
dec
repz
rcl
test
in
test
pusha
sbb
addr16
imul
loopne
push
lods
push
and
and
dec
les
nop
jns
flds
and
jle
flds
xchg
lock
sub
mov
push
xchg
xchg
outsl
int3
rcl
imul
out
gs
mov
cmc
out
sub
inc
cli
pop
enter
xchg
push
pop
shll
adc
popf
mov
pusha
jmp
sti
out
sub
push
mov
pop
lock
pusha
lods
xor
stc
jo
pop
je
and
mov
scas
pop
sub
gs
lock
fs
add
aad
addr16
bound
pop
add
shr
push
aaa
jo
adc
xor
test
jge
in
mov
mov
jno
sub
sub
call
inc
jnp
adc
push
sbb
mov
xchg
repnz
xor
daa
jl
imul
in
push
loop
fsubrs
jae
and
mov
adc
xor
cmc
mov
push
xlat
dec
or
hlt
mov
jp
repnz
es
gs
add
and
test
icebp
jg
adc
gs
jae
cmp
adc
jae
inc
cmp
out
add
hlt
imul
and
scas
cltd
cmp
popf
inc
mov
push
hlt
and
jae
adc
lock
cld
data16
scas
fcmovnb
addr16
push
les
xor
jmp
les
xchg
mov
fwait
jno
cmpb
push
ja
adc
xor
das
jmp
sbb
jl
jg
lea
xchg
cld
push
stos
sbb
addr16
js
test
push
jb
testb
pop
mov
popa
pop
dec
sub
outsb
lock
dec
fisubrl
xor
icebp
inc
bound
jb
mov
push
or
outsl
and
sbb
push
jnp
jne
jecxz
xor
push
outsl
andb
in
insl
cmc
cli
hlt
jns
fstl
jae
sub
das
out
jg
aaa
xor
jno
mov
xor
inc
lods
sahf
pop
out
call
out
xchg
fidivrl
fmuls
sub
jns
xchg
push
sub
in
pop
rorb
test
push
lret
adc
push
das
fs
test
pusha
dec
call
imul
aaa
xor
xor
add
std
jo
pushl
jmp
mov
push
imul
mov
icebp
test
push
jbe
cli
jp
lods
mov
jg
xor
addr16
push
stc
stos
mov
xor
outsb
mov
fcmovu
in
shlb
repnz
pusha
into
movsb
ja
xor
dec
pop
ljmp
loopne
inc
repnz
add
mov
sbb
dec
bswap
testb
enter
jb
rcr
push
jae
loopne
jg
addr16
and
mov
repnz
xor
aam
insb
shl
jle
xchg
outsb
ror
lock
jns
sbb
addr16
sbb
in
dec
scas
jmp
int
jns
test
pop
jns
sbb
fsts
stos
pop
jge
adc
jnp
push
mov
adc
ja
sub
imul
pusha
iret
sub
arpl
mov
lock
daa
sub
imul
xor
xor
mov
xchg
bound
lret
ss
outsb
inc
sahf
popfw
int
sbb
push
and
and
xor
movlps
into
div
jge
inc
int3
xor
cmp
je
lahf
sbb
cld
xchg
push
mov
lods
in
popf
addr16
xchg
mov
test
in
and
dec
lret
pop
mov
jne
clc
mul
xchg
outsb
aam
into
ljmp
lock
aad
or
cmp
lock
psubw
xchg
stc
in
testl
popf
inc
insl
mov
xor
cmp
int3
les
out
jne
dec
adc
jl
loopne
add
ss
dec
mov
fwait
loope
vcvtpd2psx
icebp
jmp
jbe
sub
movsb
cli
push
gs
rcl
cwtl
mov
popa
push
out
jp
shl
jns
mov
test
jg
xor
xchg
fistl
aam
jnp
in
fucom
sbb
loopne
outsb
lea
cmpsb
sarb
xchg
imul
imul
xor
xchg
int
es
in
sti
psubq
jns
loopne
fcomip
jl
clc
jno
in
bound
cmp
push
loope
xchg
push
pop
ret
test
push
mov
mov
fiaddl
pop
adc
popf
or
ljmp
xor
xor
repnz
lds
sub
and
scas
cltd
cmp
jne
cmp
cwtl
jle
ja
sub
iret
subb
je
int
ficomps
lock
stc
jns
jecxz
out
dec
shr
sbb
scas
sbb
add
lock
dec
data16
fucom
jmp
xor
push
cmp
arpl
icebp
std
outsl
cltd
popa
mov
sub
jno
xchg
leave
and
mov
shll
xor
andb
jecxz
mov
and
pop
push
stc
movsl
jae
ja
es
cs
mul
sub
xlat
hlt
cmpsb
sub
cmc
pop
jno
imul
jl
je
ret
out
dec
data16
popa
loop
call
pop
repnz
ja
sub
imul
adc
mov
or
jno
sbb
or
dec
push
jae
cmpsb
xchg
jecxz
int
dec
jnp
je
imul
test
hlt
outsl
push
xor
sbb
push
in
add
ja
adc
insl
jns
xlat
or
out
ja
cmpsb
jns
loop
scas
sub
packssdw
mov
insb
out
popf
push
repnz
imul
call
imul
std
sbb
popf
scas
jne
aas
sbb
arpl
sbb
or
insl
jns
sarl
sub
inc
out
push
adc
xor
stos
jl
jmp
and
int
push
cvtpi2ps
pop
push
xor
and
jno
popf
lods
stos
adc
xchg
add
mov
les
insl
inc
adc
imulb
addr16
inc
or
cmp
mov
popa
sbb
jo
divb
addl
cli
aas
mov
push
dec
sbb
and
bound
xor
xor
and
jle
xchg
rolb
sbb
and
imul
gs
mov
hlt
inc
aad
lods
ds
and
jle
mov
mov
push
cmp
push
addr16
int3
into
mov
pop
jne
test
out
lds
shlb
push
jo
insb
fucomi
fs
xor
mov
jge
int3
ljmp
test
jno
je
ja
in
rcr
enter
insl
adc
sbb
loopne
sarb
lahf
jmp
lock
push
lods
imul
daa
cmc
clc
pushaw
scas
sti
gs
mov
out
lret
outsl
jb
push
int3
add
mov
mov
stos
xchg
test
scas
test
add
xchg
lcall
xchg
xor
xor
leave
loope
mov
xor
jo
sub
sub
in
loop
dec
outsl
out
push
mov
cmc
xchg
jo
lock
repz
test
inc
add
sub
push
sbbl
lcall
sbb
or
std
fcomip
insl
add
lea
xchg
xchg
cmpsl
jo
inc
xor
sbb
ds
test
ljmp
pop
insb
andl
popa
xor
loope
fdivr
inc
cmpsl
jnp
stc
outsl
mov
shrb
cmp
xorl
jne
jmp
push
andb
es
xor
movsb
lds
jae
cwtl
dec
sub
cmp
pop
out
jno
movsl
insb
push
push
or
das
gs
test
xor
push
jnp
mov
arpl
jno
mov
fwait
subl
sub
stos
jle
sbb
cmp
jns
fwait
jmp
inc
cmpsl
out
std
ljmp
xchg
mov
mov
xchg
inc
cmp
jnp
popa
imul
mov
insl
inc
xchg
jg
roll
adc
mov
xor
jecxz
dec
pop
or
ja
jae
jge
mov
lock
stos
std
repnz
jle
pop
shlb
push
loop
imull
lock
xlat
aas
push
mov
hlt
cld
imul
cli
das
cmp
jle
xchg
xor
mov
imul
pop
ret
fimuls
incb
adc
imul
cmp
dec
repnz
leave
xor
xor
or
xchg
in
jno
sub
insl
push
repnz
pop
lock
mov
sub
add
out
roll
sahf
dec
jbe
mov
xor
pxor
or
mov
movsl
outsb
addr16
jl
enter
loopne
incb
jmp
out
testl
std
cmp
mov
and
mull
mov
cwtl
jo
imul
loopne
into
imul
push
in
dec
dec
pop
mov
outsb
enter
lahf
lret
imulb
dec
rorb
sarl
adc
cld
mov
push
pop
movsb
push
xor
das
push
adc
data16
jl
pop
cwtl
or
das
jecxz
imul
pusha
in
ret
lret
mov
mov
push
cmp
in
xabort
adc
add
jmp
dec
hlt
movsb
add
inc
ljmp
pop
shll
imul
movsb
jo
scas
push
ret
lret
sub
fs
pusha
imul
sti
jecxz
jno
enter
cmp
jle
fs
lret
pushf
or
sbb
jbe
test
mov
add
loopne
pop
dec
sub
cli
xchg
mov
push
dec
ljmp
outsl
and
xor
aad
arpl
push
outsl
test
add
mov
negb
and
nop
add
pop
cmpsb
push
stos
cmp
jmp
cwtl
inc
or
xor
xor
hlt
and
jge
enter
scas
stc
je
xor
pop
ja
test
jle
sub
fucomp
ds
clc
sub
jecxz
push
dec
xor
outsb
inc
lock
and
clc
insl
shrl
adc
stos
sti
scas
std
dec
idiv
hlt
popa
xchg
js
mov
ss
mov
or
xor
push
mov
sarl
add
shlb
fwait
and
stos
lcall
jg
jp
jae
dec
or
sbb
push
xor
xor
jo
scas
test
inc
inc
pop
into
test
rcrb
aam
and
imul
and
lock
sub
sub
insl
daa
push
std
cltd
jb
mov
lcall
mov
js
lret
pop
fsubs
fdivl
addr16
out
scas
jne
test
jae
int3
mov
push
push
rorb
xor
out
jmp
add
jmp
je
inc
jo
pop
mov
xchg
mov
call
fsubs
outsb
lret
js
repnz
push
jg
jne
lock
sbb
ret
mov
out
push
xchg
jmp
jle
test
push
push
mov
out
and
int3
inc
adc
cltd
cmp
imul
push
outsl
std
push
sbb
mov
gs
je
push
jo
insb
lcall
sub
andl
add
mov
jp
jge
mov
jns
and
imull
rclb
mov
sub
ret
pop
es
jg
sub
enter
js
outsl
mov
push
pop
push
mov
faddl
bound
cmp
and
jo
shrb
imul
dec
lock
cltd
jae
test
in
ret
int3
or
pop
cli
or
jne
scas
in
mov
sbb
cmp
loop
adc
sub
or
dec
das
out
or
xchg
add
jno
loopne
call
jbe
sti
jnp
into
jae
jecxz
mov
xor
push
dec
aas
push
xor
rcll
icebp
pop
idivb
mov
hlt
es
sub
jb
xor
sub
mov
ret
and
popa
inc
jmp
or
adc
call
inc
mov
or
add
mulb
lds
inc
pop
je
xor
jl
mov
cld
lret
adc
lods
xor
repnz
xor
out
ja
xchg
push
clc
mov
icebp
in
xor
dec
jcxz
jp
push
push
jae
testl
pushf
movl
in
inc
lret
push
sbb
adc
cmp
je
dec
outsl
pop
inc
jno
rcrl
in
push
test
faddl
in
inc
xor
sbb
adc
outsl
push
jge
scas
sub
movsb
rorb
dec
loopne
xor
outsl
outsl
cmc
je
out
xor
stos
imul
jae
lock
xor
adc
aas
mov
gs
call
shll
mov
and
xchg
jno
into
jp
cmc
mov
sub
rorb
shll
in
shr
xchg
gs
mov
repnz
lret
add
add
fs
call
xlat
out
xor
add
stc
mov
ljmp
sub
mov
fcoms
xor
mov
icebp
in
js
add
or
test
sub
clc
dec
test
jno
ret
sub
stc
int3
mov
push
mov
jmp
jo
lock
outsl
test
in
adc
call
test
jnp
sbb
inc
out
dec
fldt
xor
push
daa
cmp
in
cmp
icebp
add
dec
ret
pusha
les
and
mov
adc
jnp
dec
jl
push
mov
cld
arpl
lods
jl
inc
imul
pusha
test
pop
adc
sub
jmp
cmp
jb
adcl
mov
and
sbb
repz
dec
into
cmp
push
loopne
dec
inc
jle
enter
fs
pop
jne
mov
icebp
mov
les
insb
loope
or
or
out
outsb
mov
fdiv
test
jnp
add
adc
clc
push
mov
loopne
mov
mov
mov
sub
test
mov
icebp
xorb
int
imul
sbb
sbb
jbe
push
rol
fldl
insl
mov
scas
push
data16
dec
push
and
fisubrl
adc
stc
pop
cmp
mov
dec
in
xchg
mov
sbb
mulb
xor
in
es
jge
sub
out
in
xchg
int
lock
sbb
add
icebp
xor
dec
ss
mulb
dec
scas
or
insl
push
and
inc
sahf
and
adc
add
out
nop
adc
loop
movsb
and
std
inc
lock
mov
out
pop
and
add
inc
jle
das
leave
xchg
push
xchg
testl
jns,pn
icebp
cltd
xchg
mov
scas
out
shlb
cmp
cmp
or
adc
outsb
gs
movsl
add
gs
push
dec
stos
mov
dec
rclb
cmp
jns
js
fadds
hlt
push
icebp
popa
stos
setg
mov
subl
mov
lds
addr16
jl
and
jb
xor
add
shll
icebp
popa
inc
push
rcll
push
popf
outsb
popa
and
xor
addb
repnz
popa
cmp
sbb
cmp
adc
xchg
test
gs
jns
xor
es
and
cmp
popa
adc
sub
ljmp
jmp
mov
shrb
rcrb
imul
outsl
mov
mulb
hlt
cmp
outsl
repz
popa
jge
inc
xor
cmpsl
arpl
jl
mov
xor
mov
pop
ds
cmp
out
ficoms
mov
mov
mov
inc
outsb
push
call
out
jg
bound
xchg
cmp
insl
jns
bound
sbb
popa
fsubrs
sub
jmp
mov
popl
insl
mov
sub
enter
mov
stc
mov
scas
roll
les
add
ss
orb
jo,pt
jge
add
cli
jle
int3
je
push
popa
and
jmp
gs
out
inc
and
pop
cmc
test
jp
xor
bound
and
push
lods
adc
xchg
mov
mov
push
mov
sahf
fstpt
jne
jae
push
xchg
add
je
jae
pusha
arpl
loope
outsl
enter
push
js
bnd
popf
push
mov
popa
cmpsb
scas
outsb
xor
xor
out
xor
jmp
outsb
call
cld
push
sub
jb
je
incb
addr16
fs
mov
push
jae
fisttpl
lock
cli
jmp
in
jbe
popa
add
jg
pop
test
xor
sub
cli
gs
cs
push
and
jno
in
ret
sahf
test
xor
fwait
push
call
jo
adc
daa
pop
sub
mull
dec
sar
jno
cmp
add
lock
cltd
and
sbb
outsl
js
popf
shlb
mov
mov
cmp
jbe
mov
jo
sar
push
imul
nop
out
sub
sub
lds
jb
out
idivl
xchg
jns
stos
sub
xor
push
lret
and
stc
arpl
and
jae
dec
lods
out
add
sub
cli
mov
iret
pop
push
and
pop
gs
inc
adc
stc
rolb
test
cmpsb
je
imul
jle
rcl
push
adc
xchg
hlt
out
sub
and
mov
push
rcrb
imul
icebp
xor
jl
arpl
cs
fsubrs
jo
or
jae
fucomi
xlat
sub
loop
jo
stos
add
or
pop
hlt
testb
pop
out
and
outsl
and
cltd
pusha
jmp
push
sub
xchg
push
cmp
cmp
push
push
push
pop
loopne
repnz
out
js
fnsave
loop
addl
in
inc
pop
lock
imull
xor
data16
push
scas
enter
fldl
adc
jb
mov
cli
js
psraw
loop
fldcw
cmp
mov
push
icebp
jno
jmp
in
cmpsl
xor
insl
xor
jae
mov
mov
std
cwtl
xor
xchg
sub
xchg
shl
xor
stc
push
adc
jp
outsb
push
cmpsl
shlb
addr16
cmp
push
mov
mov
xor
insl
add
int
sub
or
dec
sub
push
imul
mov
push
repnz
or
insb
out
insl
dec
xor
popa
mov
add
in
sub
mulb
test
dec
or
jns
xchg
pop
jl
fldt
jnp
jno
cmp
lret
mov
fimuls
push
sbbl
in
push
neg
jecxz
in
repz
into
imul
xor
jge
or
mov
outsb
incb
sub
paddsw
fsubrs
repnz
push
loopne
inc
idiv
es
js
sbb
pusha
cmc
mov
cli
psubsb
je
fnstsw
jb
adc
fists
cli
scas
xor
in
mov
jmp
ljmp
lods
mov
andb
test
cmc
mov
jae
inc
mov
inc
mov
or
jnp
das
adc
lds
imul
and
mov
add
sti
cmc
scas
pop
xor
jge
dec
out
xor
sub
js
in
sti
aas
or
jmp
jg
ror
pop
in
in
loopne
out
aad
push
cmc
mov
ret
hlt
shrl
add
repnz
das
xor
mov
div
imul
cmpsl
or
pop
jo
out
xor
fldenv
or
jnp
pop
je
inc
imul
jecxz
nop
and
scas
outsb
jmp
xchg
insb
adc
push
sti
dec
loope
mov
adc
jno
xchg
and
cmp
push
dec
pop
mov
gs
jge
pusha
dec
addr16
xor
cmp
lock
rol
loope
jle
dec
rorb
inc
je
imul
push
or
sub
dec
in
jo
fwait
bound
pop
adc
bound
mov
pop
jnp
loopne
mov
gs
fsubs
testl
mov
adc
adc
mov
test
mov
int3
mov
dec
imulb
mov
outsl
push
jnp
xchg
dec
test
mov
outsb
jp
into
xor
lods
test
xchg
sub
in
cltd
mov
test
lock
and
adc
inc
cltd
out
pop
jo
mov
repnz
popa
dec
xchg
xchg
dec
jg
icebp
jae
fsts
addb
jg
mov
repz
in
setb
fdecstp
js
lock
xchg
dec
out
jne
adc
leave
jmp
and
dec
int3
lea
cmp
inc
gs
and
loop
adc
es
and
jo
push
inc
aaa
push
add
xor
dec
jge
pop
fiadds
push
imul
dec
out
dec
push
mov
fdivrp
jns
or
in
sub
imul
out
into
push
push
clc
bound
xor
inc
sub
sub
cmp
xchg
data16
jge
push
jecxz
dec
jo
cmp
xchg
mov
clc
push
aad
in
je
addr16
mov
in
pop
loopne
fistpll
sub
imul
push
mov
shll
loopne
outsl
add
rclb
fucomp
sub
clc
imul
out
lock
icebp
or
lds
sub
dec
jae
out
call
dec
and
adc
fldcw
ljmp
sbb
in
jmp
in
lea
outsb
dec
stc
or
pop
cmpsl
cmpsb
xchg
or
stos
notb
lock
or
fsubr
mov
js
mov
cmp
je
test
mov
jge
cwtl
clc
loopne
xchg
lds
jbe
inc
js
sub
movsl
adc
xor
add
dec
out
xor
jecxz
mov
scas
push
dec
movsl
repz
subl
xchg
dec
divb
mov
gs
outsl
sub
cmpsl
xchg
and
in
popa
dec
ljmp
sbb
in
insl
or
pusha
out
sub
fcomi
add
pop
adc
jge
lea
popa
sub
jae
loopne
xchg
sbbl
gs
cmp
jp
or
or
jmp
ss
jb
jle
mov
jno
jbe
shll
jge
inc
test
mov
inc
push
scas
jb
dec
jl
pop
arpl
inc
out
cmp
sbb
repnz
xchg
push
jge
psubusb
in
jg
imul
es
xor
cld
movsb
loopne
pop
aas
shlb
jl
cmpsl
xor
dec
fs
xor
mov
addr16
mov
jmp
sub
nop
mov
mov
mov
mov
insl
pop
les
xchg
mov
inc
daa
lods
pushl
inc
mov
popf
test
xor
jbe
push
and
fs
jb
sbb
addr16
mov
mov
bnd
out
jmp
mov
jb
idiv
dec
repnz
cmp
jp
insl
sub
jo
dec
mov
in
out
jl
dec
jns
add
dec
jnp
jbe
mov
cli
dec
sbb
push
add
or
cmp
idivb
pushl
xor
stos
jle
clc
subb
imul
scas
movsb
sbb
outsl
or
outsb
shr
xor
mov
in
loopne
xchg
xor
sbb
inc
jge
sahf
and
mov
test
mov
xor
gs
fsubl
jae
inc
sub
repnz
ret
outsl
negb
clc
popa
inc
adc
pop
sub
jno
pop
jne
push
xor
sarb
das
insb
std
popf
sti
push
dec
imul
mov
mov
xor
pop
adc
push
jge
push
jp
inc
es
jns
data16
int3
jnp
in
addr16
sbb
fidivrs
lods
stos
mov
jbe
mov
pop
imul
mov
fldcw
dec
mov
lds
mov
rcll
jge
mov
xor
repz
jne
je
cmp
jno
cmp
jmp
mov
pop
test
push
shrb
inc
adc
mov
outsb
cli
xor
mov
push
std
popa
sub
or
jno
xchg
arpl
sbb
adc
and
xor
adc
lret
outsl
gs
imul
sub
inc
jns
imul
in
addr16
mov
push
std
sbb
test
in
notb
inc
jb
jae
rcll
xor
cmpsb
aaa
repz
push
rclb
jmp
xchg
jo
lock
cld
hlt
enter
gs
fimull
jb
lods
push
jo
lods
inc
mov
enter
sbb
rorb
sub
mov
cmp
mov
ljmp
jg
int3
cwtl
negb
sbb
jmp
std
fs
insl
adc
stc
push
add
or
gs
insl
xor
xor
mov
mull
mov
xor
add
cmpsb
lea
dec
push
push
push
outsb
in
cmpsb
fucomp
jns
sub
icebp
popa
cld
ljmp
loope
mull
push
loopne
or
in
xchg
jg
mov
lock
jge
loopne
cmp
xchg
jmp
ljmp
xor
mov
lret
icebp
jecxz
out
lods
fwait
lcall
imul
popa
jl
jecxz
repz
cmp
arpl
xchg
insl
push
icebp
in
xor
and
and
test
push
mov
cmpsl
loop
jb
inc
sub
xor
out
lds
adc
jne
jle
clc
cmc
cld
imul
in
popa
pop
mov
ljmp
imul
std
addr16
mov
movl
ja
stc
jo
and
mov
push
imul
jne
out
loopne
repnz
jo
xor
out
push
push
jge
pusha
pop
xchg
lock
jo
hlt
divb
jecxz
xor
scas
push
sbbb
imul
popa
dec
imul
adc
adc
xor
lcall
dec
xor
lods
out
gs
push
or
mov
aaa
push
aas
int
fsubl
mov
push
xor
andl
mov
pop
lret
dec
movsl
lock
stos
pop
inc
ja
sbb
mov
mov
inc
cmc
push
push
hlt
jae
lea
push
lret
stos
outsl
pop
xor
daa
outsl
sbb
idiv
outsb
inc
cld
shll
shlb
mov
and
and
push
adc
jle
jns
xchg
jmp
add
pusha
testb
mov
xchg
adc
idivb
iret
imul
neg
mov
mov
xchg
push
jbe
jmp
xchg
jo
mov
lock
push
cmp
idivb
xchg
xor
cpuid
jl
shll
add
sbb
movsl
mov
insb
adc
test
movsl
into
js
lds
jne
test
cmpsl
lock
jle
dec
in
cmpsb
mov
xor
mov
mov
cmpsb
neg
mov
jno
mov
jnp
dec
shll
pop
mov
shl
out
imul
sub
test
lea
fwait
out
mov
out
outsb
pop
mov
imul
jg
scas
adc
cli
sbb
mov
test
jno
mov
jp
jae
les
lock
mov
in
sub
cld
gs
fsubs
jo
and
pop
imul
and
cmp
mov
fdivrl
gs
nop
jcxz
incl
movq
mov
xlat
imul
inc
stos
adc
repnz
imul
das
sti
jg
push
loopne
rorb
jmp
xchg
loopne
test
lods
mov
cli
aad
jp
pop
rcrb
clc
cmp
das
jo
imul
mov
mov
imul
or
xor
push
loopne
out
loope
lock
xchg
or
data16
jno
or
les
mov
dec
jmp
data16
in
js
xor
jns
mov
jb
std
stos
mov
xor
sahf
xor
movsb
insb
push
rorl
addr16
out
sub
mul
loop
test
mov
pop
imul
aam
stos
push
repz
dec
loope
frstor
adc
adc
push
mov
mov
gs
sbb
mov
jno
rorb
jno
cmp
loop
inc
xor
test
push
xor
cwtl
shlb
outsl
repz
pop
in
cmp
cmp
and
out
sub
push
out
cmc
push
nop
dec
cli
pop
push
shlb
xor
xchg
sbb
adcl
int3
push
test
shll
leave
jnp
insb
outsl
jns
lret
loope
mov
push
cmp
sub
jmp
lret
imul
int3
repz
cmp
jg
je
outsl
out
clc
addb
rol
loope
sbb
mov
mov
in
push
rclb
dec
repz
scas
fs
hlt
xchg
imul
fnstcw
xchg
je
sbb
add
mov
inc
outsl
ss
jae
out
inc
mov
outsl
xor
scas
scas
push
xchg
in
divl
sar
in
mov
pop
cmc
mov
inc
shlb
cs
jle
imul
cli
mov
mov
jg
push
daa
pop
bound
paddw
repnz
add
xor
mov
jge
lods
or
imulb
scas
jnp
push
outsb
fcoml
inc
imul
loope
lock
popa
jmp
xchg
jl
jge
icebp
xor
jmp
subb
lcall
jg
repz
xchg
jo
scas
inc
dec
in
mov
jmp
sub
push
inc
push
lea
repz
js
sub
fdiv
dec
imul
icebp
cmc
repnz
jo
repz
insb
mov
in
jno
pop
iret
push
pushf
cmpsb
test
xor
sub
cmp
jo
shl
orb
call
dec
sub
es
jl
inc
repz
xor
imul
dec
xchg
jle
pop
addr16
out
mov
xor
insl
pop
inc
sub
subb
mov
and
push
sub
push
cld
and
nop
mov
push
imull
sbb
imul
dec
mov
addr16
mov
std
shrb
push
outsb
icebp
dec
cld
test
ss
cmpsb
fwait
in
pop
cmpb
cli
das
popf
adc
inc
pusha
sub
outsl
jns
pop
cs
inc
mov
mov
out
add
loope
ljmp
sub
insb
jp
mov
arpl
push
shll
jle
inc
outsl
and
data16
mov
std
clc
imul
js
cmpsl
inc
xor
pop
cmc
adc
adc
in
movsl
sbb
f2xm1
ja
sub
push
repnz
dec
notl
jo
lea
mov
in
push
out
popa
addr16
pop
xchg
std
call
lods
movsl
insl
cltd
insl
jl
je
int3
push
call
cmp
popa
call
bound
rcll
sub
xchg
jns
push
icebp
shl
push
mov
lahf
aad
out
inc
fucomp
jecxz
out
les
or
idivl
rorb
cltd
imul
pop
in
dec
mov
xchg
ret
pusha
mov
imul
in
inc
ss
adc
push
inc
inc
mov
push
divb
xor
stc
stos
call
xchg
orps
or
and
mov
mov
mov
cmpsb
repz
xor
or
lock
aam
xor
iret
out
mov
lock
and
jns
and
mov
pop
imul
push
repz
cmp
xor
popf
negb
je
je
insl
jns
hlt
int
roll
es
outsl
mov
push
push
shl
jns
mov
outsb
xor
in
popa
add
negb
cli
lret
jae
out
jbe
in
icebp
pop
out
sbb
js
cmp
push
xor
cmp
sbb
add
icebp
lock
sbb
out
cltd
xor
popf
mov
in
lds
and
nop
push
test
cmp
rcrb
shrb
xor
rep
pop
xchg
shlb
test
and
dec
ja
push
pop
jl
ljmp
xor
sub
imul
imul
push
call
js
movsb
bound
sahf
jmp
addr16
addr16
in
stc
xor
xor
lods
jae
jo
inc
push
imul
and
andb
ss
xchg
jp
mov
imul
xor
pushf
loope
jae,pt
pop
sbb
push
sbb
mov
mov
mov
cmp
xchg
mov
push
into
cmp
in
jno
fwait
mov
and
rcl
pop
pop
jae
add
xor
sub
adc
pop
ret
cmp
into
out
and
ret
and
xor
mov
jp
push
mov
sub
xor
jns
adc
scas
inc
decl
dec
aaa
push
out
dec
xor
in
fdiv
mov
in
and
fidivl
gs
adc
out
insb
inc
mull
mov
mov
negl
stc
clc
jns
and
cmp
movsb
mov
out
jno
dec
aas
push
fucomp
cld
push
mov
jmp
adc
rorb
adcl
das
xor
test
js
push
insl
movl
out
mul
push
ret
push
bound
addr16
jg
data16
cmp
rep
xchg
in
std
out
add
mov
xchg
enter
out
pop
and
nop/reserved
pop
jnp
cmpl
mulb
subb
jbe
leave
jns
mov
ja
out
adc
outsb
xchg
ret
shrb
lret
mov
push
push
sbb
adc
out
lret
int3
in
enter
adc
pop
aad
data16
stos
aas
sub
push
les
push
pusha
jp
in
popa
std
pslld
cmpsl
ret
adc
call
repz
xchg
adc
test
test
das
adc
repz
cmp
rep
inc
jp
mov
icebp
outsl
push
jae
xchg
lret
insb
cltd
push
ja
popa
dec
into
stos
in
mov
jb
repz
fs
into
aas
xor
jmp
xor
cli
jge
ficoms
ret
out
gs
push
das
lret
scas
mov
jmp
aad
in
into
add
ret
mov
je
push
sub
push
push
pop
jno
loop
loope
test
repz
jbe
add
je
scas
xor
push
insb
repz
xchg
loopne
jns
sbb
push
popa
les
jae
inc
je
into
lods
insb
lret
jmp
mov
mov
pop
xor
movsl
xchg
sub
jmp
and
fdiv
inc
popa
fdivr
mov
addb
imul
sbb
pop
je
outsb
js
in
xchg
add
sbb
icebp
andb
outsl
dec
pop
popa
jno
push
pop
sub
in
xor
cmp
pop
sbb
insb
aam
mov
hlt
jno
loop
movsl
daa
loope
loopne
decl
add
mov
out
push
sti
fdivrs
mov
adc
je
dec
icebp
fnsave
or
jbe
setle
jl
jnp
pop
pop
loopne
jns
jp
mov
mov
sub
sar
mov
insl
fs
mov
cmp
push
dec
adc
cmp
jmp
sbb
loop
lock
scas
loopne
xchg
jmp
jbe
loope
and
outsb
mov
dec
xorb
jecxz,pt
inc
es
pop
popa
xlat
loop
mov
out
inc
or
arpl
and
dec
out
jb
jl
mov
jle
inc
xorb
stos
jae
push
loopne
push
insl
lds
movsb
inc
xor
inc
push
dec
and
pop
jge
or
jno
add
mov
push
sbb
icebp
mov
adc
or
mov
out
adc
ret
int3
nop
jge
sub
adcl
sti
xor
stc
popa
pop
mov
sahf
lds
xor
clc
mov
adc
daa
outsl
and
shrl
fdivr
mov
idiv
or
dec
das
daa
adc
jae
xor
xor
imul
ss
shrl
je
xchg
jecxz
pop
out
add
in
into
mov
cli
or
sahf
fldln2
loopne
clc
lods
punpckhwd
pop
cmp
jecxz
jns
repnz
lds
pop
popa
add
aas
fnsave
pop
sbb
cmp
xor
into
call
xor
das
adc
inc
lahf
jae
stos
loopne
mov
out
jno
jo
lret
mov
push
scas
mov
nop
mov
and
hlt
inc
pop
and
xchg
mov
jle
inc
das
iret
add
std
jns
adc
dec
out
loope
ljmp
out
and
pop
sub
or
xchg
jmp
cli
es
add
loope
add
enter
sub
inc
adc
scas
lret
push
and
in
mov
xchg
test
cmp
xor
cmp
xchg
js
mov
aam
push
xor
imull
mov
je
sub
and
mov
mov
jge
and
mov
push
gs
sbb
out
stc
push
mov
out
cmpsl
dec
adc
jno
ja
and
lds
shrb
mov
and
data16
outsl
call
fsubs
mov
aas
insb
outsl
mov
push
popa
inc
cmp
dec
push
push
fsubs
inc
mov
or
aad
adc
jae
or
sti
push
lea
mov
add
popa
xchg
mov
jge
add
jno
mov
jp
push
jl
out
les
lock
cmp
lods
inc
push
sub
mov
js
es
insl
out
jb
xor
popa
push
inc
es
fs
loopne
and
mov
icebp
cmc
gs
jle
mov
sbb
xchg
out
jns
push
push
imul
xor
cli
jbe
mov
addr16
cltd
mov
repz
arpl
or
scas
mov
outsb
stc
xor
pop
mov
test
xor
or
rclb
lcall
test
jge
idivl
rol
sub
lock
mov
xor
jl
sub
jg
repnz
xor
mov
fistl
scas
jmp
jge
loope
std
lret
int
jno
push
test
and
outsl
call
xor
jbe
mov
dec
xor
test
jge
jae
dec
sub
stc
jbe
inc
cmp
mov
cmp
imul
sub
cmp
xor
jmp
cli
inc
xor
fiadds
incb
xchg
push
and
aad
push
bound
div
pop
shlb
cmp
dec
jo
jae
fidivrl
mov
mov
bnd
test
push
and
or
push
pusha
mov
orb
and
mov
mov
pushf
fidivl
je
cmc
jmp
and
imul
les
imul
jmp
lods
inc
push
inc
enter
cld
cmpsl
xor
js
dec
idivb
sub
adc
addr16
pop
shlb
imul
notb
lock
call
mov
add
popa
xchg
sbb
push
aam
scas
xor
jg
dec
mov
add
out
sub
aaa
jo
lods
cmpsl
imul
outsl
xor
push
popa
cmpsb
inc
repnz
dec
stos
loopne
fucom
jg
int3
jl
adc
and
pusha
dec
ret
addr16
mov
pop
js
mov
sub
lock
shlb
cltd
jmp
jmp
and
outsl
into
cli
ret
dec
or
sbb
enter
test
out
repz
outsl
lock
icebp
mov
int
mov
call
adc
hlt
sbb
adc
cmp
sub
js
repz
imul
jle
jne
insl
and
andb
xchg
jecxz
or
lret
jg
cmpl
xchg
sbb
cmpl
jnp
cmp
cs
jo
jge
or
jno
out
sbb
stc
outsl
ss
adc
mov
cmc
xchg
push
fs
xor
and
jp
and
inc
movsl
enter
dec
sub
lock
and
mov
bound
mov
jo
lock
mov
lods
mov
push
popa
inc
das
ret
dec
jb
loopne
jp
mov
mov
xor
jl
pop
hlt
push
ljmp
or
pop
jo
cld
fbstp
aas
das
mov
sahf
sti
jno
insb
rorb
nop
xchg
fistpl
idivl
ja
fsubs
push
xor
call
sbb
push
gs
dec
mul
jno
fidivrs
mov
push
lcall
and
mov
sub
dec
xchg
push
mov
sub
idivb
inc
mov
lods
adc
out
sub
std
mov
push
push
xor
push
sub
mov
in
repnz
bound
shl
movsw
adc
loopne
ljmp
scas
pop
xchg
mov
mov
jmp
test
std
inc
cmpsl
push
jo
push
fs
xor
insb
je
xor
pop
xchg
dec
out
cmp
lods
clc
adc
aas
loopne
sbb
repz
xor
movsl
xchg
pop
popa
jns
in
jae
sarl
jecxz
in
inc
and
icebp
adc
call
outsl
sbb
loop
sbb
xor
shlb
test
dec
es
outsl
arpl
dec
adc
pusha
nop
cmpsb
push
test
outsl
fs
in
lret
mov
or
mov
shl
mov
add
movsb
dec
mull
mov
into
cmp
imul
lock
cli
test
enter
test
ds
pop
jne
outsb
cld
jae
mov
xchg
mov
pop
outsl
xchg
mov
clc
outsl
divb
dec
pop
icebp
jno
push
mov
mov
or
ja
push
mov
dec
xor
je
xor
add
mov
mov
dec
adc
sti
mov
icebp
mov
mov
popa
dec
ljmp
push
inc
fldenv
sub
hlt
xchg
std
jecxz
cmc
daa
jmp
int3
shl
inc
out
aaa
xor
out
clc
sub
jle
outsl
shl
fdivrp
sub
cmp
inc
and
mov
sbb
shll
outsl
and
imul
push
xchg
cli
outsb
insb
or
and
add
mov
repz
push
mov
xchg
pop
ljmp
in
dec
loopne
mov
fwait
clc
sub
mov
jbe
pop
imul
jno
sub
jae
and
adc
int
push
pop
in
inc
adc
rcl
js
mov
jne
jmp
aad
stc
sub
mov
mov
aas
sbbl
cmpsl
fwait
xchg
imul
sub
sbb
mov
xchg
outsl
outsl
sub
jge
js
inc
sub
mov
imul
movsl
loopne
fsubr
inc
in
cmp
xchg
divb
xor
cmp
jo
js
repz
bound
sbb
cmp
ret
dec
adc
push
ljmp
insl
or
out
rol
adc
inc
jno
jb
inc
jp
hlt
inc
lock
jl
add
xor
aas
pusha
cli
xchg
push
decl
out
sub
popa
icebp
jns
in
mov
ret
sbb
lods
imul
add
pop
fnsave
push
pop
jne
repz
push
mov
push
loop
or
not
push
push
xchg
hlt
lock
testb
adc
dec
xor
loop
push
data16
dec
je
lock
daa
outsb
push
imul
movsb
clc
xor
loope
sarb
out
inc
jae
in
addr16
bound
test
in
fcomip
xchg
push
xor
jne
mov
mov
gs
out
add
test
sarl
mov
gs
xor
pop
imul
jo
push
pop
shlb
push
xor
fs
ret
dec
popa
call
js
lods
add
sti
fldenv
sbb
icebp
lock
sbb
outsb
adc
pop
sub
sbb
in
sahf
mov
xchg
cmp
insl
sbb
jmp
and
in
push
out
imul
sub
mov
mov
jbe
loopne
jnp
jae
sbb
xchg
dec
and
addr16
lock
lods
inc
jecxz
mov
pusha
repnz
in
mov
xchg
imul
imul
push
imulb
stos
xlat
push
lock
pushf
out
and
outsl
push
or
pop
cmp
sbb
outsl
mov
xchg
jnp
icebp
dec
push
out
mov
lret
dec
pop
stos
pushl
shrb
push
js
jge
call
outsb
cmpsb
dec
pop
xor
cld
in
mov
push
sarl
jl
jns
orb
dec
mov
outsb
sub
sub
xchg
popa
call
lret
jecxz
mov
data16
out
outsl
pop
clc
aam
jl
jge
movsb
push
pop
jb
xor
jbe
pop
notb
xor
mov
fcmovb
repz
jecxz
es
sub
mov
sub
mov
fstl
loope
adc
rcrl
inc
mov
push
int3
pop
dec
mov
shlb
push
xor
outsb
popa
pop
pop
mov
cmp
cmpsl
add
and
cmpsb
icebp
jle
lcall
test
xorl
in
mov
addr16
inc
mov
cmp
je
loop
mov
shll
mov
push
and
arpl
in
int3
inc
aam
sub
arpl
xor
popf
sbb
aam
xor
dec
lock
and
add
push
cmp
mov
shl
sub
lea
jl
into
sub
shrl
pusha
push
jnp
hlt
imul
pop
mov
shrl
aam
cmpsb
inc
out
xchg
mov
push
mov
scas
icebp
push
fs
push
lock
and
xchg
xor
cwtl
cmp
outsl
subl
in
jecxz
pop
outsb
popa
clc
inc
pop
insl
mov
jp
lock
dec
mov
popf
dec
stc
jle
fiadds
push
add
mov
jae
nop
fadd
outsb
das
cltd
mov
dec
xchg
jmp
loope
sbb
lret
out
mov
icebp
xor
xor
lds
cmp
jae
jmp
inc
or
sahf
cltd
mov
js
enter
mov
jmp
jge
mov
outsl
adc
stos
dec
mov
push
es
in
pushf
xchg
lock
push
outsl
and
lcall
mov
out
or
xchg
jo
stos
cmp
orl
int3
icebp
data16
inc
call
outsl
test
rolb
or
jecxz
sbb
jns
outsb
mov
int
push
xor
push
adc
test
negl
rclb
mov
xlat
imul
into
das
jo
loopne
loope
es
cmp
push
test
mov
adc
mov
adc
stc
push
xchg
outsb
push
aad
popa
mov
aas
aas
cltd
jmp
mov
jne
mov
stc
insl
xor
and
aas
stc
jb
out
repz
mov
pop
jg
into
arpl
mul
pop
mov
xor
insl
sub
hlt
andl
ret
mov
mov
sub
cwtl
push
icebp
pop
addr16
cld
je
outsl
shrb
lock
lock
adc
jg
sub
es
mov
ret
mov
test
test
inc
out
dec
mov
scas
xchg
mov
xchg
mov
xor
pop
jmp
ljmp
test
mov
inc
insb
sbbl
subl
xor
lea
lahf
sub
adc
push
mov
repz
sub
outsl
mov
test
jl
mov
movsb
jl
xchg
cmp
xor
jb
in
cli
jmp
ja
sbb
repz
insl
lock
mov
sub
test
imul
sub
mov
fnstenv
imul
lock
je
mull
mov
shlb
gs
adc
outsl
jno
cmp
push
icebp
sub
jg
inc
pop
outsl
stc
gs
pop
or
shll
hlt
je
jnp
mov
loopne
clc
xor
push
test
bound
daa
into
jae
icebp
jle
inc
inc
add
dec
pop
repz
cmp
jecxz
inc
fldenv
push
into
pusha
mov
ja
dec
mov
jle
pop
imul
into
or
sbb
fstpt
xor
bound
stos
mov
addb
push
ljmp
dec
arpl
popa
cs
insl
inc
loope
push
je
out
data16
and
pop
in
aaa
outsl
and
icebp
inc
orl
lea
mov
jo
repz
mov
sub
mov
repz
xor
mov
std
inc
xor
imulb
pop
lea
aam
jo
xchg
mov
jae
call
popa
scas
dec
xor
sti
and
outsl
out
push
mov
pop
jle
mov
imul
cmc
sub
mov
or
mov
repz
test
cmpl
mov
in
push
ror
adc
dec
out
xor
jle
popa
das
test
imul
nop
adc
out
jno
rcl
mov
sub
xor
into
js
icebp
outsl
mov
aaa
sub
jno
subl
loopne
mov
fidivs
dec
xchg
stc
pop
xor
jo
into
lods
add
push
stos
and
mov
shll
sbb
fucomi
cmc
rcl
sub
imul
adc
cmp
jne
cmpsl
mov
movsb
out
call
out
in
xor
pop
jle
sub
jle
jne
adc
lods
jmp
jle
ja
incl
and
jle
in
shrb
and
dec
stc
jg
adc
and
pop
ret
pop
dec
dec
std
aad
out
and
adc
push
push
xchg
loopne
imul
scas
out
into
xchg
jmp
mov
imul
cmp
and
xor
lret
outsb
popa
stc
push
cmp
cmc
add
inc
imul
into
push
xor
outsl
fimull
cmpsl
repnz
xchg
imul
mov
data16
jge
xchg
imul
or
sub
xor
rcrb
xchg
cmc
ljmp
divl
lahf
dec
lret
sub
mov
lds
push
insl
push
repz
pop
add
pop
or
bound
aam
pop
sub
sub
in
mov
push
inc
jmp
xor
jecxz
push
xor
mov
shrl
xor
lret
pushf
push
gs
adc
mov
scas
jmp
imul
je
mov
mov
adc
xor
icebp
ja
adc
jno
and
pop
jl
jecxz
sub
test
sub
aas
push
jl
pop
xchg
imul
mov
cmp
inc
mov
xor
repnz
dec
addr16
pop
outsb
lock
in
shlb
rolb
mov
js
js
jl
or
inc
je
enter
loopne
jbe
imul
inc
int3
jo
test
mov
int
mov
adc
shl
push
mov
ljmp
adc
fs
out
jo
xor
test
pusha
jnp
push
out
and
mov
jmp
enter
scas
jb
and
ljmp
jp
or
jle
ret
jae,pn
jge
jns
mov
je
dec
in
mov
push
mov
sarl
cmp
fdivl
and
push
loopne
mov
mulb
loopne
dec
inc
mov
in
jp
popa
sbb
push
aas
mov
outsb
call
andnps
cmc
jle
pushl
mov
inc
das
jge
xchg
push
and
adc
cmp
xchg
xchg
push
gs
xchg
mov
mov
loopew
mov
loopne
xbegin
inc
jbe
pop
lahf
mov
or
xchg
add
jns
jl
cmp
jmp
xchg
outsl
ret
rclb
cmc
loopnew
in
popa
xchg
xchg
cwtl
pusha
gs
sahf
jae
popa
cmp
xchg
clc
push
add
stos
xor
lret
out
sub
scas
xor
cmp
xchg
ja
popa
sbb
sub
and
jno
aam
sub
je
sbb
jb
cmp
clc
popa
xorl
in
jns
add
and
mov
xchg
mov
shll
sub
inc
addr16
jecxz
xchg
jmp
jmp
pushf
loop
sub
sbb
xor
sub
push
lods
insb
loop
mov
shlb
jmp
imul
add
gs
add
and
cmpsb
adc
sahf
es
hlt
movsb
xchg
jle
sbb
lock
fnstenv
cmp
xchg
sub
or
sbb
inc
lock
test
sbb
out
lcall
je
enter
dec
dec
std
add
sbb
std
jo
sbb
jne
sub
sub
mov
jno
es
clc
sub
jp
cmp
xor
ss
jns
scas
ret
setbe
dec
loopne
sub
jecxz
aas
int
push
cs
pushl
dec
push
je
jnp
push
cmp
cmp
jb
enter
loopne
js
shrb
ss
inc
jo
insb
popf
jae
gs
hlt
ds
stos
daa
int
jb
xor
xor
call
dec
add
mov
pushf
xchg
in
fisubs
lcall
movsl
adc
shrl
imulb
subl
push
imul
repz
mov
xchg
pop
outsl
cmpsl
sub
jns
aam
clc
aas
dec
in
jae
and
sbb
clc
mov
iret
fdivrp
inc
in
int
daa
sub
and
mov
inc
pushl
mov
popa
jns
push
cli
push
das
xor
data16
movsl
outsl
cmp
call
ret
enter
imul
or
jns
movsl
sub
std
push
outsb
out
cwtl
iret
scas
icebp
shll
jno
loop
inc
paddsw
mov
out
lds
sub
shll
movsl
icebp
add
loop
repz
imul
pop
js
mov
daa
xor
mov
scas
imulb
push
lock
xor
adc
push
adc
jmp
std
mov
xor
jle
ret
lds
imul
arpl
push
cli
dec
cmpsb
mov
shrb
adc
es
jnp
jg
popa
inc
outsl
lock
lret
mov
cmp
push
mov
xchg
push
jb
in
push
cld
and
cmpsl
jge
into
inc
out
movsl
addr16
negb
sbb
addr16
in
lock
insl
or
dec
lock
fisubl
inc
jae
repz
lock
add
je,pt
and
xorl
or
movsb
bound
jnp
testb
add
jb
jl
das
pop
mov
jbe
daa
mov
loope
pop
clc
mov
adc
arpl
sub
mov
lods
push
in
aaa
in
shrb
and
adcb
adc
loope
dec
jbe
jo
jne
sub
jno
add
pop
jmp
sub
repnz
in
jl
js
and
les
push
jae
mov
inc
int
and
imul
fcomip
inc
mov
pop
icebp
jne
fstpt
mov
sub
cmp
fisubrl
lea
jb
das
sub
je
pop
mov
cld
dec
xchg
adc
mov
incl
mov
jo
in
lock
ret
pop
jp
movsl
and
ror
inc
jns
jo
insb
inc
push
mov
lret
sub
jae
dec
stos
xchg
jno
cmp
lea
inc
lret
xchg
mov
jmp
pop
dec
scas
sub
lock
insb
push
clc
js
imul
pop
jnp
out
jmp
pop
testl
adc
cmp
in
imul
jnp
adc
imul
repz
inc
jae
pmullw
insl
out
xor
addr16
xchg
mov
imul
scas
shlb
icebp
jne
les
jmp
push
mov
test
xor
sub
dec
imul
push
ret
imul
xor
jp
sub
jno
cmp
insl
repz
push
sub
push
or
sbb
mov
fwait
cli
jl
popf
cmp
gs
xchg
sub
stos
dec
cmc
push
shrl
repnz
cmp
sahf
sbb
jb
and
aas
mov
rcl
pop
imulb
jbe
fisubrs
outsl
repz
push
inc
out
les
icebp
push
enter
jns
test
fisubl
popf
int
adc
push
xor
mov
ret
arpl
cld
adc
imul
outsb
lock
and
gs
xor
out
enter
mov
add
loopne
jb
dec
adc
addl
xchg
lahf
test
popa
cmpsl
jne
mov
icebp
in
arpl
loope
loopne
dec
jg
mov
sub
hlt
jns
inc
divl
leave
and
addr16
fldenv
lret
mov
lret
aas
test
out
loope
stc
enter
inc
mov
xchg
xchg
push
adc
push
sub
or
bound
addl
jo
sub
imul
les
icebp
mull
sbb
xor
push
mov
andl
push
shrb
je
enter
frndint
pusha
lds
addr16
fdivs
test
pop
imul
xchg
mov
test
jnp
or
scas
sahf
inc
idivl
jns
push
jae
dec
fdivrl
push
adc
xor
outsb
call
mov
loope
inc
es
arpl
sbb
imul
pop
xchg
mov
std
dec
sub
mov
gs
jg
stc
push
xchg
loopne
adc
imul
jae
push
xchg
scas
jbe
and
aam
jge
cmp
shl
push
inc
dec
loopne
sbb
or
jmp
enter
jmp
jmp
jo
ja
mov
movsl
mov
popf
mov
jecxz
xor
and
cmp
jge
gs
fdivrs
repnz
mov
add
pusha
out
loope
xchg
adc
cmpsl
imul
mul
push
jge
or
clc
push
xchg
mov
sub
je
out
subb
jno
call
add
dec
mov
cld
add
outsl
or
add
jae
std
out
outsl
out
pop
or
sti
pop
stc
popa
pop
xor
mov
jno
inc
inc
push
cltd
test
jecxz
push
cmc
dec
popf
and
jg
jmp
push
inc
mov
lock
into
call
pop
inc
xchg
sub
and
jge
or
in
loopne
adc
out
jne
dec
shll
neg
outsb
xchg
or
lds
clc
popa
out
xor
fcmove
jbe
popa
mov
pop
inc
xor
or
addr16
sahf
mov
xchg
in
push
jns
jg
cmp
sbb
push
xor
mov
push
and
xchg
xchg
imul
ss
push
inc
and
in
test
jecxz
divb
and
aad
and
xor
fisubrl
mov
inc
test
ja
cld
pop
mov
sub
cmp
enter
pop
imulb
cwtl
mov
les
cmp
push
out
fucomi
bnd
sbb
cmc
imul
push
pop
data16
in
mov
and
jnp
cli
xor
jl
aas
lods
frstor
shlb
fsubs
jne
mov
clc
shll
xchg
outsb
call
cmp
out
jecxz
xor
lahf
jge
sub
sbb
das
out
mov
rolb
push
arpl
icebp
int
xor
inc
cmp
clc
mov
sbb
ret
jle
xchg
xchg
push
push
sub
xchg
push
adc
dec
out
std
out
or
ljmp
xor
mov
mov
fcmovnbe
cmpsb
je
mov
fdivrs
ret
hlt
imul
mov
loope
cmpsl
sub
insb
jbe
in
push
popf
cltd
xor
insl
rorl
jns
and
cmpsl
mov
stc
gs
add
xor
repz
add
cli
movsb
jg
call
sub
dec
stos
push
sub
dec
loopne
jno
cmp
js
lcall
bound
cmp
push
shlb
je
lcall
bound
mov
and
jno
jl
lock
jecxz
adc
stos
push
mov
jo
movsl
imull
and
insl
cmp
and
cmp
xchg
adc
std
imul
xlat
pop
sbb
test
cmp
jmp
sbb
out
test
adc
popf
push
sbb
fbstp
sti
cld
lahf
jecxz
push
andl
jl
fs
fdivrs
and
push
in
push
jnp
in
inc
jle
enter
scas
push
cmp
sub
add
into
sbb
cmp
or
popa
lock
out
hlt
or
xor
add
and
adc
jb
jecxz
inc
in
pop
sbb
lock
std
mov
out
sarl
and
and
lock
cmp
dec
dec
cmp
out
cmpsb
push
inc
adc
and
popa
sub
sub
dec
out
orb
aas
bound
xchg
jmp
xor
jl
mov
and
xor
bound
bound
into
bndldx
mov
sbb
mov
out
mov
leave
mov
divl
or
xor
and
jge
cmpl
aas
xor
jno
push
cld
or
std
xor
movsb
loope
or
pop
xor
stc
bts
and
push
mov
mov
xor
loope
dec
rep
bound
xor
mov
jecxz
xor
push
aad
out
data16
out
in
add
lock
mov
insl
adc
call
outsl
out
fbstp
popa
xchg
xchg
mov
xchg
popa
rcl
lret
ret
dec
js
in
jno
hlt
nop
jl
out
cmp
and
mov
imul
int3
scas
notb
xchg
push
mov
cmp
mov
xchg
push
in
inc
sahf
pop
fwait
loopne
repnz
xor
clc
outsl
shrl
cmp
in
mov
mov
mov
push
out
pop
pushf
repnz
fnstsw
add
jp
pop
push
fnstenv
out
std
sbb
ret
and
pushf
push
sub
dec
jg
scas
mov
cmp
lahf
sar
movsb
fnstsw
imul
sub
es
testl
out
push
mov
jg
sbb
add
insl
imul
nop
xor
out
jmp
pushf
das
cmp
pusha
or
xor
jo
loop
aaa
mov
push
and
jle
mov
jb
mov
xor
push
cs
sub
cmpsb
jae
xchg
push
sbb
push
insb
jle
test
icebp
jecxz
xor
outsb
orl
inc
jb
mov
pop
mov
sub
jle
insb
divb
xchg
loop
insl
repnz
outsb
shlb
ds
xor
lods
and
jmp
mov
movsb
ljmp
enter
jge
adc
loopne
out
cmp
cmp
test
and
in
jae
popa
popa
push
shr
inc
push
mov
shrb
sbb
sbb
jo
js
idiv
out
jge
icebp
jns
mov
movsb
push
mov
mov
jp
mov
ljmp
sub
jo
push
lea
arpl
xor
cmovs
adc
out
adc
sub
test
inc
or
js
mov
lock
fadd
movsb
mov
add
in
ljmp
shlb
or
lock
clc
insl
subb
insl
adc
int3
jle
fisubrs
pop
outsb
push
inc
xor
sub
mov
je
pop
push
mov
cmpsl
cld
jl
push
outsb
in
hlt
add
mov
out
push
enter
cmpsl
lret
movsl
xor
fs
push
lods
cli
push
ljmp
and
imul
scas
xchg
jg
mov
pop
push
xlat
in
test
repnz
xor
mov
inc
repnz
movl
mov
out
mov
mull
test
ds
mov
xchg
movsl
mov
push
outsl
popa
test
mov
lds
jnp
imul
fsts
popa
cmpsb
cmp
and
js
mov
popa
lods
pushf
or
sub
xor
popa
loope
popa
adcb
pop
ljmp
xor
pop
mov
arpl
push
and
cmc
loope
xchg
dec
push
push
icebp
mov
mov
cmp
add
jno
movsl
jmp
outsb
popa
sbb
push
lock
jecxz
xor
sub
sbb
and
loope
insl
test
jb
dec
in
lea
gs
imul
out
jge
xchg
insl
pop
in
pusha
jb
out
outsl
jge
mov
out
push
lods
je
out
js
icebp
or
jle
mov
movsb
xchg
lret
add
repz
and
scas
int
ljmp
pop
loope
jne
sbb
xor
scas
in
popa
aas
pop
inc
or
push
hlt
repz
in
lret
stos
cmp
pusha
mov
dec
mov
xor
jb
cmp
adc
outsb
push
sar
aaa
xchg
stos
insb
cli
and
xchg
mov
addl
jne
pop
loopne
imul
xor
mov
test
imul
in
int
jmp
cmpb
fdivs
fsubrs
lds
fwait
push
dec
je
cli
popa
ret
inc
std
and
rolb
cltd
pop
fdivrl
xchg
and
arpl
xchg
jl
lcall
lret
jl
jb
mov
jg
pusha
cmp
xchg
imul
pop
bnd
lahf
adc
push
lcall
popa
xorl
fnstsw
cmpsb
jg
test
hlt
jne
push
mov
bnd
dec
daa
mov
cmc
pop
push
loopne
xchg
scas
or
sahf
sub
pop
imul
in
push
les
notb
testb
sbb
bound
xchg
xor
jg
mov
sti
cwtl
mov
imul
mov
movsb
ss
addr16
bound
or
insl
xchg
jno
rcll
pop
push
data16
lret
mov
aas
loopne
outsb
shl
push
push
repnz
jbe
int3
dec
outsb
repnz
lahf
xor
mov
xchg
icebp
arpl
and
repz
mov
push
popf
mov
cmp
divb
push
pop
or
jne
mov
cmc
enter
cmp
loope
jb
loope
cld
mov
jns
inc
sti
fwait
sub
push
loopne
aas
xor
mov
add
sbb
xor
imul
sub
add
adc
dec
or
pop
stc
cld
jb
pop
scas
push
shr
fdivrs
mov
mov
sahf
js
das
dec
sub
icebp
data16
or
inc
insl
jl
cmp
lock
repnz
pop
ss
lock
and
insl
jecxz
fisttpll
in
cmp
dec
mov
imul
pop
jge
hlt
insb
int
in
xchg
cltd
cmpsl
xor
sub
mov
popa
mov
sub
out
data16
popf
or
jb
cmp
outsl
sbb
fists
aaa
and
adc
pop
pushf
je
fnclex
pusha
mov
jp
mov
xchg
arpl
sbb
in
daa
push
jne
sbb
das
jbe
stos
dec
sub
call
loop
popa
push
inc
in
popa
fidivrs
sub
jno
mull
mov
ds
shrb
adc
add
mov
rcrb
adc
aaa
pop
test
and
pop
xor
lods
or
mov
inc
arpl
enter
mov
das
and
mov
rolb
sti
inc
in
gs
fdivl
mov
inc
shrb
push
mov
or
mov
push
dec
dec
mov
jbe
jmp
add
jge
fwait
clc
leave
cmp
rol
mov
repnz
pop
outsl
in
adc
jae
addr16
outsl
lock
popa
xchg
ljmp
add
daa
lds
adc
fsubr
dec
pop
push
jno
jg
xorl
cmp
or
outsl
enter
mov
es
cmp
mov
test
push
sub
je
stos
stos
push
fs
out
mov
loop
imul
dec
and
test
xor
xor
mov
cmp
xchg
scas
clc
cmpsl
jmp
and
in
mov
cli
sbb
fistpll
mov
test
mov
jne
shrb
scas
fs
imul
pusha
into
mov
lods
out
movsl
jp
loopne
clc
mull
in
add
leave
jnp
js
jnp
sub
inc
gs
add
cmc
popl
jae
push
mov
gs
scas
push
xchg
mov
aas
xchg
out
cvttps2pi
sub
daa
imul
mov
iret
push
insl
lds
cmp
ja
and
fdivr
sahf
lods
sbb
push
das
xchg
ss
arpl
xlat
dec
jge
jg
ret
out
jmp
fnstenv
push
add
inc
mov
jno
shrb
roll
jae
aaa
loopne
pop
aam
mov
push
ret
cmp
in
out
inc
addb
pusha
jae
lahf
sahf
test
push
xchg
out
mov
es
pop
and
or
or
decb
sbb
imul
movsl
jg
jl
movb
mov
push
mov
gs
loope
les
loope
lcall
aam
xor
clc
cmc
push
fwait
sbb
out
repz
outsb
and
jno
jmp
gs
loopne
data16
gs
push
in
sbb
std
ja
popa
out
or
xchg
popa
fsubp
leave
pop
gs
jecxz
push
push
aaa
movsb
sub
icebp
popa
mov
dec
push
mov
je
hlt
notl
xchg
cmp
imul
jno
pusha
pop
arpl
add
inc
call
jecxz
jnp
mov
pop
inc
mov
and
dec
lret
mov
test
inc
cmp
out
addr16
stos
scas
mov
or
xchg
bound
out
jns
cmpsl
mov
in
push
daa
lcall
out
or
push
fists
jno
mov
dec
mov
jp
hlt
nop
sub
scas
add
xor
mov
jg
insl
call
in
and
outsb
insl
and
leave
repz
cmpsb
pop
in
jno
jecxz
adc
xor
fiaddl
sub
insb
lock
inc
imul
sub
loopne
push
xchg
out
addr16
scas
in
in
cmp
or
push
sub
das
int
sub
add
jecxz
pop
fs
jno
jmp
rcrb
xchg
loopne
xor
and
in
movsb
lock
call
out
push
stos
js
fidivl
rorb
cld
imul
jne
inc
insb
inc
fdivl
xor
sub
addr16
fidivl
sbb
push
push
clc
adc
cmp
stc
ficomps
push
out
and
pop
xor
cltd
movsb
fs
sbb
jb
cld
jg
xchg
cmpsb
lahf
call
movsl
sub
jo
daa
pop
addr16
push
and
push
insl
cmc
ja
lock
sub
fsubs
scas
jmp
call
lea
sahf
inc
in
loopne
adc
loope
adc
jmp
hlt
pusha
push
stc
in
imul
mov
xchg
lock
ss
mov
xor
gs
dec
push
and
int3
adc
jmp
in
repz
jae
sub
xor
pop
clc
jnp
add
in
pop
adc
mov
lret
in
popf
xchg
sub
je
loopne
sub
gs
popa
jo
mov
xor
gs
dec
cld
mov
cmp
jo
xor
mov
jmp
loop
rcr
icebp
pop
inc
jns
data16
inc
cltd
mov
bnd
scas
stos
sbb
jbe
and
popa
addr16
imul
outsb
and
imul
and
cmp
mov
sbb
scas
loope
jns
push
push
das
int
push
sub
bound
xor
loop
adc
sbb
insb
das
mov
bound
mov
popa
sub
adc
aad
cmc
outsl
loop
repnz
addr16
ffree
outsb
outsl
js
clc
popa
pusha
push
and
mov
adc
gs
adc
jp
jns
sahf
sub
xchg
in
scas
test
inc
cmp
and
outsb
popa
orb
loopne
push
addr16
mov
test
nop
cmp
push
stos
loopne
cmp
addr16
mov
adc
and
sub
xchg
std
das
mov
dec
icebp
jno
int3
mov
jg
out
outsb
jl
adc
stos
in
test
mov
shrl
push
sbb
roll
xchg
rclb
mov
das
pushw
xor
call
rolb
mov
jge
pop
fabs
jb
sub
inc
filds
pop
ljmp
insl
sub
scas
jecxz
mov
in
adc
pop
cmc
pop
in
xor
push
out
dec
icebp
and
popa
in
jge
xor
jb
pop
push
and
out
int3
dec
add
dec
icebp
arpl
in
les
push
cli
loopne
repz
addr16
mov
push
call
decb
in
inc
adc
mov
mov
jns
lret
outsl
js
adc
xor
iret
sub
xchg
jecxz
push
mov
cmp
sub
inc
and
pop
or
lret
in
jns
daa
mov
jmp
jb
push
rcl
mov
imul
lock
fs
gs
jmp
std
nop
cli
in
addr16
insl
cmp
fwait
cs
sub
jns
in
cltd
add
jp
adc
outsl
popa
inc
mov
test
sbb
test
cwtl
call
and
je
mov
aaa
mov
jo
pop
hlt
imul
je
push
xchg
mov
idiv
andl
jno
push
sarb
sahf
jle
call
fildll
imul
outsl
loope
xchg
jns
mov
insl
out
in
out
xor
jae
jo
mov
push
bnd
packuswb
loope
in
mov
mov
jmp
jnp
loopne
scas
test
jle
out
rcrb
or
inc
pop
inc
add
shlb
jg
adc
outsb
inc
addr16
and
mov
jge
into
dec
jp
xchg
adc
push
mov
ror
enter
insl
je
push
or
sub
and
out
jmp
cwtl
bound
adc
inc
or
test
pop
fwait
fdivs
jg
std
push
clc
mov
idivb
sub
pop
xor
repz
fwait
movsl
scas
aaa
notl
insb
icebp
mov
xchg
mov
repz
insl
outsb
jbe
arpl
sub
repz
popf
shll
idiv
jl
call
dec
cmc
inc
jecxz
add
test
jmp
aad
mov
mov
andl
mov
sbb
enter
data16
dec
iret
mov
out
rcrb
adc
ja
xor
xor
jge
jp
push
fisttps
bound
cmp
shlb
push
clc
mov
inc
dec
into
loopne
jmp
push
jns
dec
repnz
inc
add
arpl
sub
inc
jo
jbe
jb
sbb
das
mov
sub
imul
jo
xor
lcall
outsb
mov
nop
jbe
stc
sbb
jnp
sti
push
sub
lock
mov
aas
xor
xor
andl
les
movsl
jmp
outsb
jle
loopne
mov
outsl
daa
insb
adc
xchg
adc
in
mov
scas
fildll
arpl
jmp
pop
mov
push
outsl
out
int
cmp
andl
int3
mov
hlt
rolb
dec
mov
les
in
cmpsl
sbb
mov
scas
pop
call
push
cmpsl
das
out
out
pop
mov
lock
or
pop
imulb
push
cli
lock
sub
repnz
push
std
mov
lock
inc
ss
jbe
sbb
scas
xchg
or
insl
push
xchg
jo
push
sbb
adc
ret
bnd
loope
lock
pushl
mov
jge
out
push
jae
rcl
rcrb
enter
aam
xor
popa
mov
outsl
cmpsl
sbb
popa
call
je
push
stos
loopne
loop
outsb
hlt
dec
hlt
shrb
ja
mov
imul
add
cmp
pushf
insb
push
ljmp
imul
add
outsl
jp
push
mov
and
lds
clc
xor
jns
mov
jle
sub
dec
mov
into
pop
cmpb
inc
je
dec
cmpsb
movsl
pop
jns
or
out
cmc
test
fdivrs
out
sarb
shrb
adc
outsb
mov
pop
aaa
mov
inc
call
hlt
add
and
rcl
imul
out
in
cmpsb
test
in
mov
jp
je
sub
testb
jg
xor
popl
and
mov
dec
sti
xor
stc
pop
mov
cmp
inc
lock
jle
repz
jb
sbb
xchg
insb
outsl
mov
lds
aas
fldenv
nop
xlat
popa
mov
aad
xor
repz
je
inc
mov
cld
fcompl
insl
divb
cmp
mov
xchg
jecxz
pop
fisubs
mov
mov
loopne
ret
shl
jp
jne
jle
sub
ja
sub
out
popa
xor
in
bound
imul
sti
pop
call
ljmp
jmpw
cld
xchg
and
jmp
push
xchg
jns
add
jno
out
insl
mov
jg
jl
inc
jae
outsl
xor
pusha
pusha
shl
or
cmpsb
js
push
test
std
loopne
popa
jp
sub
scas
lds
test
jmp
aad
in
add
jle
imul
incl
imul
push
mov
mov
jge
mov
shl
imul
push
jo
push
xchg
fnsave
rol
jl
xlat
mul
je
xor
cmp
adc
jp
mull
sti
xor
sub
sahf
std
subb
gs
rclb
call
mov
or
loop
dec
out
andb
jo
adc
incb
imul
gs
ja
pop
xchg
push
jmp
aam
loopne
movsb
jb
mov
pushl
mov
inc
mov
mov
lock
jbe
mov
jno
mov
sbb
stos
pop
jmp
out
orb
cmpsb
and
call
push
add
xchg
jae
mov
cwtl
adc
shl
cmp
icebp
pop
into
ret
out
out
les
insb
push
jl
mov
mov
imul
cmp
inc
sti
je
repz
cwtl
cmpsb
xchg
push
sarb
loope
popa
movsl
xchg
push
imul
adc
hlt
or
push
je
jno
in
dec
xor
loopne
jnp
push
shlb
imul
and
mov
push
inc
in
adc
lret
or
imulb
lcall
imul
cmp
bound
jbe
movsl
mov
popa
mov
push
daa
shlb
mov
repnz
jecxz
out
mov
jmp
out
movsb
xor
xor
mov
roll
and
jg
and
xchg
adc
and
insb
and
add
mov
xor
outsl
inc
ret
lods
push
pop
mov
leave
mov
ss
sub
imul
iret
push
or
sar
sub
mov
cmp
or
jb
mov
mov
jmp
scas
bound
inc
and
repz
adc
push
movsb
sbb
push
fwait
ret
xchg
outsl
sub
xor
or
and
xor
inc
xor
pop
outsl
push
mov
das
aaa
jne
in
imul
xor
ds
jb
lea
push
jno
leave
fidivrl
cmc
sub
mov
dec
and
mov
ss
ljmp
dec
cmp
jae
pop
mov
xchg
cmp
jp
push
pop
gs
sub
mov
stos
sub
pop
pushl
scas
addr16
ja
lcall
testl
jle
cmp
push
mov
add
xchg
call
loop
xor
cmp
sbb
dec
sub
jno
cs
adc
imul
repz
cld
mov
hlt
pop
adc
jle
insl
pop
mov
adc
ret
das
lods
mov
xor
fdivrl
sbb
mov
div
int3
or
cmc
jbe
jb
mov
pop
nop
pop
dec
adc
or
in
and
or
mov
pop
cmp
or
jo
add
jecxz
and
cmp
dec
xchg
loopne
cmp
xor
das
imul
outsl
sub
std
imul
out
cmp
xchg
std
inc
adc
fimull
imul
mov
loopne
lock
mov
mov
jns
push
xor
test
xor
dec
inc
mov
loopne
cmp
div
push
idivl
in
daa
xchg
pop
sub
outsl
cmp
repnz
jle
std
sti
lret
or
shlb
sbb
jo
dec
shrb
sub
sbb
icebp
pop
inc
jne
jl
or
dec
dec
jg
fs
lock
cmpsl
push
fwait
insb
loop
out
cmpsl
push
hlt
outsb
and
cmp
jo
push
dec
xor
jo
xor
in
pop
mov
js
in
and
mov
in
jle
mov
clc
rclb
std
popa
popa
push
fildll
loope
shlb
fs
loopne
push
stc
ljmp
call
xchg
jmp
sub
fsubp
out
inc
rolb
outsb
sub
and
push
mov
enter
sub
std
sub
loopne
xorl
sbb
push
xchg
jnp
sub
loopne
jbe
data16
ljmp
jbe
lret
pushf
pop
out
xor
add
dec
movsb
sub
cmp
in
jno
xor
std
clc
jno
outsl
xor
mov
and
movsl
arpl
push
repnz
insl
push
stc
lods
fsubrl
and
mov
icebp
jnp
negl
loopne
adc
xor
lret
in
mov
popf
mov
mov
push
in
imul
into
addr16
in
cmp
insb
add
in
addr16
pop
shll
ljmp
ret
popa
lea
outsl
sahf
mov
outsb
outsb
test
lock
sub
in
xchg
adc
jo
sub
push
cld
mov
push
jae
inc
sarl
jns
lret
and
in
mov
outsb
arpl
jne
push
popa
mov
mov
push
icebp
std
data16
pop
xor
mov
daa
push
push
cmp
push
in
inc
push
dec
scas
imul
or
jle
add
jno
pop
push
add
mov
cld
jno
cmp
sub
cmc
sbb
mov
outsb
out
or
movsl
ja
aad
repnz
pop
jmp
sub
imul
jae
int
testb
cmp
mov
push
insb
sub
movsb
jecxz
cmpsl
mov
add
xor
sub
xor
pop
or
ja
push
shl
arpl
jae
jne
rorl
lcall
mov
cmc
cmc
out
or
jb
xor
popf
mov
lock
icebp
insl
cmpsl
push
jae
mov
mov
sub
icebp
jecxz
push
loopne
mov
jl
push
xchg
imul
jns
movsb
imul
mov
outsl
xor
jb
or
orl
push
outsl
cmpsb
lret
sub
cmp
je
mov
mov
push
imul
xorl
loopne
in
add
jecxz
gs
and
cmp
adc
jae
loope
mov
in
xor
inc
ja
ljmp
or
push
push
dec
mov
scas
loop
mov
xchg
dec
or
je
jns
xchg
loop
dec
into
jecxz
xor
popa
add
test
pop
push
insb
rcrb
xor
sub
xlat
bnd
xchg
jge
lahf
imul
cmp
insb
jp
cmc
repnz
loopne
movsl
or
in
in
dec
push
insl
inc
int3
js
lea
stc
push
gs
aaa
xlat
jl
dec
scas
icebp
cli
jp
fs
push
xchg
fsubrs
or
adc
imul
jle
les
mov
addsubpd
xchg
addr16
inc
xor
adc
orl
loop
sbbl
lahf
sbb
xchg
cmpsl
repnz
aas
ljmp
jp
jl
test
inc
jl
fs
push
jnp
out
sbb
scas
clc
dec
xchg
sbb
jl
sti
cmp
sti
cmp
adc
in
out
mov
or
int3
outsb
aas
xchg
out
jne
movsb
cli
push
mov
xor
xor
fistpl
push
jne
repz
adc
push
fisubs
cmc
insl
lret
dec
adc
or
pop
stc
ret
jne
cmp
mov
pop
popa
and
mov
adc
leave
ja
shl
inc
comiss
mov
cmp
js
xor
mov
popa
addl
dec
jmp
into
jae
or
shll
mov
lret
out
outsb
cmpsl
adc
mov
jae
cmc
cltd
std
push
std
shll
adc
inc
stc
clc
das
push
shr
adc
mov
mov
jecxz
push
xrelease
jge
xchg
jl
xchg
outsb
gs
cli
ljmp
push
mov
lret
jne
mov
jo
scas
sahf
call
je
jecxz
repnz
push
outsl
xor
repnz
out
movsb
ds
mov
lock
jnp
jl
mov
jo
aam
or
pop
call
gs
fs
mov
xor
xchg
push
dec
arpl
jmp
js
fcomp
imul
dec
lock
icebp
leave
adc
cmpsl
dec
mov
adc
inc
pop
icebp
movsl
sbb
out
mov
sbb
orl
sub
jg
insb
push
push
adc
dec
mov
jno
out
pop
gs
mov
pop
mov
cmp
pop
imul
xchg
repz
std
push
jcxz
into
lock
fnstcw
out
sti
outsb
ljmp
fidivrs
gs
and
movsl
in
ficoms
sbb
imul
repz
pop
add
push
hlt
into
mov
xchg
aam
cmpsb
push
push
and
rcrl
bound
clc
jo
lds
mov
repz
pop
arpl
xor
push
mov
outsb
inc
xchg
push
mov
and
sbb
int3
xlat
adc
in
popf
fwait
mov
mov
push
test
loop
pop
and
jno
xor
js
jbe
mov
cmp
sub
dec
cmc
push
clc
adc
jmp
outsl
jmp
jg
out
imul
pop
outsl
or
inc
test
arpl
int3
mov
add
fidivl
std
loope
adc
outsl
lods
jle
les
hlt
dec
outsb
popa
xchg
ds
jg
cli
gs
pop
xor
jae
mov
and
cmp
aad
hlt
add
pop
sbb
gs
jb
cld
out
in
notb
xor
add
mov
out
imul
out
xor
or
int3
sbb
add
out
dec
inc
xchg
scas
rclb
hlt
push
push
iret
xor
mov
mov
fidivrl
and
out
adc
decl
outsl
mov
pop
cmp
out
data16
rclb
loope
imul
mulb
add
add
push
mov
test
subl
jge
cmc
fiadds
cmp
bound
addl
xor
jb
arpl
aas
outsl
filds
loopne
test
sbb
cli
lret
mov
pusha
gs
sbb
jns
jbe
pusha
jecxz
dec
pop
test
fs
fdivrs
stc
fdivrs
repnz
das
xor
int
ja
mov
push
mov
gs
dec
stos
jnp
or
mov
dec
sub
or
in
push
sarb
dec
movsl
das
lcall
jno
ss
push
mov
cmpsl
subb
repnz
cmp
lock
xor
imul
dec
jp
and
mov
lret
jmp
cmp
fnstenv
jb
in
sahf
push
jg
out
jl
push
jp
sub
adc
mov
cs
test
xchg
pop
push
incl
cli
scas
repnz
int3
test
and
lock
lock
xchg
popf
adc
sub
jns
pop
cmp
sbb
jp
push
mov
je
cmp
jl
xchg
jnp
into
mov
xor
and
mov
gs
clc
in
mov
push
inc
mov
mov
aam
and
push
push
outsl
push
sub
mov
addr16
add
mov
addr16
cs
pop
dec
jnp
ja
mov
jno
mov
inc
repz
pushl
xor
mov
int
sbb
jb
push
jl
push
xor
sub
jo
data16
out
fdivr
pop
sub
out
fisubrs
mov
out
mov
aad
push
outsb
cld
shll
lock
loopne
out
stc
jl
testb
jl
sbb
cmp
in
into
out
loopne
sbb
insl
call
das
loope
gs
daa
dec
jbe
mulb
out
cmpsb
xor
sub
repnz
in
repz
cmpsl
icebp
insb
divb
rorb
imul
cmp
outsl
sar
adc
jmp
hlt
in
jmp
xor
shll
clc
and
out
imul
push
jl
out
daa
repz
jns
popf
add
std
outsl
sub
rcl
in
insb
mov
repnz
popa
xor
mov
repnz
arpl
pop
dec
xor
jae
xchg
jo
xor
int
sarl
jle
enter
add
out
fmul
into
and
inc
out
ds
aad
jns
repnz
loope
out
inc
jne
je
imul
loope
das
ret
fwait
push
jmp
movsl
xchg
add
insl
fwait
push
push
mull
sub
addr16
clc
lock
insb
mov
mov
fwait
push
ja
jge
jno
push
add
stc
push
sub
cmp
outsl
in
push
popa
pop
inc
jp
cli
dec
jmp
xchg
jmp
mov
jae
inc
in
test
psubq
scas
adc
pusha
sbb
popa
sub
sbb
mov
jno
and
jge
clc
loopne
stc
dec
push
dec
les
mov
jmp
and
insl
mov
aam
aas
in
xchg
jle
sub
stc
sar
scas
js
sbb
rcrb
lods
mov
aas
gs
jg
je
in
sahf
mov
out
ret
push
outsl
jecxz
sarb
cmp
mov
mov
jo
cltd
mov
orb
nopl
call
call
int3
out
push
jecxz
inc
mov
push
aas
push
das
popa
repz
adc
jmp
arpl
popa
xlat
cmp
jbe
ret
shrb
cmc
leave
and
adc
push
cmp
and
jae
pop
int3
push
or
push
outsl
pop
fadds
jmp
add
repnz
push
mov
or
jmp
mov
add
fsubrs
shrl
mov
mov
add
sbb
hlt
sbb
hlt
jne
adc
movsb
push
jle
jl
pop
cmp
imul
adc
pop
and
push
into
in
icebp
or
inc
push
fs
data16
ljmp
bound
inc
mov
das
sti
std
ljmp
arpl
test
lea
cmp
je
outsl
mov
push
sub
in
andl
mov
or
or
mov
es
fwait
jmp
adc
dec
aad
jno
popa
mov
js
lods
divb
sub
push
mov
call
sbb
sti
comiss
je
fstl
cmp
mov
loope
out
daa
ret
shrl
xchg
aad
idivb
hlt
and
imul
sahf
lock
pop
imul
fsubrs
cmc
faddp
mov
mov
test
sub
daa
sub
jmp
in
jne
mov
xchg
or
dec
cmp
sub
rorb
lock
or
scas
mov
jo
jp
push
pop
int
xchg
decl
push
aaa
outsb
js
jmp
test
push
outsl
mov
push
in
imul
outsl
call
clc
popa
mov
sub
in
bound
sarb
or
outsb
cmpsb
xor
pop
mov
enter
ja
hlt
loope
mov
cs
inc
xor
loope
dec
jg
jge
call
into
lock
notl
imul
scas
in
shlb
test
sti
mov
mov
data16
mov
ret
outsw
fs
xor
jns
sbb
outsl
jecxz
repz
add
cmp
aam
push
repnz
push
and
xor
push
mov
imul
dec
adc
rep
ds
imul
and
push
jno
and
mov
in
imul
shll
jae
jg
or
lcall
fwait
sub
loopne
std
jle
test
jle
mov
lret
gs
push
popa
adc
mov
fcmove
lret
out
jge
push
lea
aad
js
jg
not
jg
mov
je
icebp
jnp
in
and
jo
in
jb
dec
inc
ret
outsl
jle
xchg
out
xor
je
pop
repnz
sti
data16
and
jbe
inc
and
pop
aam
jl
popa
and
lock
add
sahf
test
dec
insl
mov
adc
xor
add
mov
clc
adc
cmc
jge
es
mov
jecxz
dec
jb
lcall
cmpxchg
test
gs
sahf
push
jmp
out
lahf
push
sbb
cli
xor
fmuls
call
gs
or
lock
std
fwait
icebp
insl
cmpsl
and
lock
arpl
cli
xor
fidivs
sbb
outsl
adc
mov
sub
pop
outsb
push
decl
xchg
test
dec
lret
xor
inc
in
retw
mov
jno
adc
sub
push
xorb
jecxz
jns
les
ljmp
lock
loopne,pt
adc
out
cmp
icebp
popl
sub
clc
loopne
cmp
fwait
mov
loopne
enter
inc
jmp
addr16
movb
pop
mov
push
dec
outsl
and
push
lret
cmp
xchg
pop
das
js
notl
push
push
test
xor
movsb
imul
loop
loopne
jl
fbstp
adc
arpl
imul
sub
iret
push
enter
xchg
loopne
inc
lock
inc
dec
sub
add
sub
stos
fcoms
insl
mov
dec
lock
or
sub
arpl
push
je
shll
addr16
sbb
icebp
outsl
test
sbb
bound
adc
scas
lds
and
xchg
jns
mov
out
out
dec
xor
jge
shrb
faddp
dec
mov
mov
sahf
xlat
pop
shr
repnz
mov
sub
or
sbb
inc
repz
imul
pop
adc
sarl
insb
ret
sbb
jo
cmp
rorb
add
movsl
xor
push
push
mov
test
fstpl
or
out
scas
int
adc
in
add
mov
add
fnstsw
xor
mov
scas
jecxz
in
out
push
fistps
insb
ja
std
mov
stos
cwtl
out
jecxz
and
jns
or
pop
ret
jmp
mov
jge
jo
arpl
push
xchg
sbb
js
lret
scas
rcl
jns
popa
dec
imul
lcall
ds
gs
sbb
filds
scas
bound
xorb
aaa
inc
neg
sub
std
stc
or
inc
out
mov
cmp
addr16
mov
insl
jae
push
outsl
popf
xor
inc
insb
nop
int3
ret
loop
aad
out
cmpl
lock
test
imul
lea
mov
jle
loope
int
mov
insb
outsb
in
xchg
lret
mov
dec
jle
mull
out
leave
fmulp
lret
out
mov
cmpsb
mov
outsl
jmp
jo
loope
sbb
xor
xor
arpl
xor
push
jmp
stos
push
insl
sbb
call
dec
sbb
movsb
in
or
std
mov
popa
repz
xlat
xchg
push
push
jge
jl
clc
insl
out
sub
aam
push
mov
outsb
sbb
adc
xchg
aas
mov
mov
mov
dec
mov
jnp
imul
inc
sub
repz
data16
jno
sub
stos
inc
loopne
test
adc
xor
adc
dec
jns
imulb
cmp
jmp
pop
loopne
xlat
lcall
es
cmpsb
fwait
addr16
ljmp
lock
jo
jg
adc
sbb
clc
mov
mov
lods
push
notb
or
sti
inc
push
int
mov
stos
arpl
or
or
imul
pop
cmp
jo
insb
call
xlat
cmc
pop
jae
or
addr16
xchg
repz
popa
mov
sub
push
mov
inc
mov
sbb
insb
sbb
jp
sbb
xor
cmp
imul
aas
imul
gs
in
into
mov
push
loop
out
gs
nop
jae
outsl
imulb
movsb
pushf
shrb
call
cld
call
test
xor
enter
add
mov
jecxz
pop
ljmp
push
enter
or
test
out
jns
pop
mov
fildll
popa
mov
mov
ljmp
mov
push
decl
mov
les
pop
stc
lahf
movsb
bound
outsb
cmp
out
test
mov
imul
mov
imul
mov
jp
insl
dec
into
sbb
test
mov
in
sub
test
shlb
lahf
nop
aaa
scas
out
in
pop
ret
cmp
cmp
jle
add
imul
sub
mov
cmpsb
sahf
jg
inc
bound
sbb
xchg
leave
or
jns
dec
push
in
std
sbb
test
movsb
data16
push
cmp
jbe
push
xor
int
inc
icebp
dec
fs
pusha
lock
mov
std
jns
clc
repnz
fiaddl
add
pop
ds
mov
mov
jmp
cmp
sbb
and
repnz
ja
mov
nop
or
fnstenv
push
les
mov
stos
pusha
push
xchg
cld
inc
xor
sub
dec
repz
ret
fsub
stc
popa
inc
pop
fwait
iret
cli
popf
adc
test
jb
xor
push
aaa
sbb
enter
lret
scas
in
dec
jbe
insb
clc
mov
mov
pop
pop
iret
cmpsb
mov
test
cmp
xor
or
lock
gs
xchg
out
sub
xor
shll
xor
data16
test
cmp
repz
out
jne
jae
push
mov
jmp
shrl
jge
inc
in
cmpsb
mov
and
aaa
mov
imul
sub
xor
jg
sbb
push
popa
inc
sub
popf
mov
addr16
and
div
lahf
jo
std
adc
xor
loope
xor
sbb
loopne
popa
cmp
movsb
lret
add
das
ficompl
scas
push
adc
sbb
jp
out
cmp
js
int3
mov
and
adc
adc
xor
leave
sti
jg
mov
repz
aad
das
lds
inc
pusha
arpl
data16
add
lods
mov
ljmp
jbe
cmp
jno
fisubrs
test
cmc
std
xor
jg
popa
cmp
in
je
jae
sub
cmpsb
and
outsl
xlat
pop
mov
mov
ljmp
jl
mov
push
scas
sti
imul
xchg
jne
into
idiv
xor
fdivs
cld
push
jnp
in
cmp
stc
adc
sti
jg
pop
cwtl
push
xchg
dec
sub
and
cli
sub
repnz
addr16
pop
push
pop
negb
jge
js,pt
int
xchg
clc
cli
movsb
imul
outsl
loope
xchg
popa
test
dec
nop
bound
ja
popa
pop
scas
stos
loopne
xchg
xchg
adc
lret
sub
sub
mulb
sub
mov
dec
divb
incl
xor
xor
in
jnp
cld
clc
jne
repnz
call
sub
xor
jne
mov
jns
sub
adc
mov
sbb
xor
fsubs
sbbl
daa
sahf
push
decl
loopne
mov
out
in
loopne
dec
adc
sub
mov
mov
mov
jmp
ja
jo
push
mov
or
gs
pop
or
push
ljmp
sbb
popa
test
adc
add
or
sbb
out
out
xor
arpl
call
js
xchg
mov
xor
jecxz
or
mov
sub
les
xor
dec
mov
and
test
adc
hlt
loopne
mov
xor
repz
pop
std
int3
add
mov
repnz
cmpsb
sbb
xor
cld
aam
outsb
cli
subl
int3
roll
out
repz
add
int
sub
cmp
stos
cld
fsubp
bnd
or
insb
jl
add
loopne
ret
inc
iret
mov
out
jmp
push
or
adc
jnp
idivl
adc
and
inc
out
xor
clc
outsl
mov
cli
in
clc
lock
mov
xchg
add
add
mov
and
das
sbb
jo
sbb
aam
out
push
jg
cmp
loop,pt
dec
xchg
std
push
lods
fsub
sbb
sbb
sub
xor
lods
lcall
jmp
imul
inc
push
push
jno
hlt
pusha
pop
jle
cltd
inc
loopne
incb
enter
aaa
inc
imul
sbb
inc
pop
and
insl
test
lock
insl
pop
pop
mov
add
ljmp
repz
cmp
adc
das
xor
mov
mov
mov
add
jo
call
dec
lret
pop
in
mov
mov
add
mov
dec
push
sub
in
and
in
lods
push
test
stc
mov
outsl
add
jl
call
shl
mov
into
cmp
jno
loope
xor
pop
sub
push
scas
icebp
movsl
sub
jno
std
pop
mov
in
lret
pop
cmp
sub
arpl
xor
aas
jmp
repz
lods
js
aad
xchg
inc
mov
popa
addb
icebp
cwtl
xor
je
leave
pop
inc
sar
popf
lock
mov
stc
sarb
out
test
in
jmp
adc
pop
iret
repnz
outsl
xor
inc
je
test
pusha
aas
imul
and
stc
test
std
mov
lods
add
mov
mov
sbb
shl
xor
shlb
dec
scas
outsl
jle
sbb
xor
movsb
xor
jb
sub
dec
dec
in
bound
xor
push
icebp
or
and
and
sbb
mov
add
imul
pop
fildl
mov
push
test
testl
mov
cmp
mov
divl
rorb
mov
std
mov
add
int3
movsb
test
idivb
hlt
adc
scas
add
xchg
mov
and
in
or
mov
dec
nop
xor
fs
icebp
xorl
pop
std
das
fnstsw
data16
xor
add
test
sub
jae
mov
cmpsb
sti
arpl
jo
add
sarb
jl
mov
test
imul
pushf
adc
loopne
daa
inc
test
je
mov
push
ss
int3
pop
into
pop
bound
mov
and
sbb
adc
repz
int3
inc
jp
repz
fstl
into
and
cmp
jmp
nop
dec
ret
jmp
jge
pop
std
loopne
sarl
mov
jl
push
sub
sar
push
and
pop
sarb
jge
inc
push
add
and
cmc
nop
outsb
push
mov
inc
mov
jo
scas
cli
xchg
imul
outsl
aam
and
sub
sub
jl
and
adc
scas
insb
jne
sahf
movsl
jmp
push
popa
push
fists
das
mov
inc
loop
cmp
out
test
sub
enter
mov
loope
jns
cli
xchg
repnz
popa
inc
xchg
xor
out
push
or
dec
mov
aas
in
pop
jle
or
hlt
adc
push
jne
testb
lret
es
outsb
lock
mov
mov
push
adc
xchg
pop
cltd
sub
xor
test
jg
mov
imul
gs
loopne
jge
out
mov
inc
arpl
outsl
dec
les
and
mov
xchg
outsl
scas
mov
loopne
dec
sbbl
mov
mov
popa
inc
inc
adc
loope
clc
dec
or
jmp
repz
push
and
loopne
xchg
jb
addb
sub
xor
xchg
repnz
mov
jo
loopne
ss
push
jno
loop
fistl
or
push
lods
adc
bound
cs
cmp
and
loope
subb
jae
nop
and
popa
movsb
dec
xor
xchg
add
dec
mov
jmp
fidivrs
imul
jg
cmp
sarb
mov
jns
mov
and
inc
and
jmp
lock
sub
imul
pop
push
push
mov
mov
std
lock
in
xor
arpl
popa
xchg
inc
repz
sub
mov
stc
add
ja
shrb
imul
in
loopne
shrl
lock
sbb
insl
add
or
add
enter
sub
inc
movsb
pop
inc
jbe
xor
stc
pop
push
jge
out
cltd
add
jns
cld
js
insl
sub
pusha
xor
cmpsl
pop
std
test
std
test
adc
mov
cmpsb
js
cmpsb
call
jmp
pusha
popa
adc
adc
loopne
and
jb
and
push
mov
test
jl
into
dec
mov
push
pop
xorb
push
jae
loope
lahf
or
push
fst
scas
jns
jle
sbb
dec
and
out
xlat
stc
sub
testl
jmp
jmp
icebp
push
inc
jb
pop
popa
mov
cmp
test
xlat
xor
lock
push
mov
cmp
mov
jo
jl
and
clc
loopne
mov
cs
repnz
stos
ljmp
hlt
mov
or
jmp
mov
scas
sub
jecxz
in
fcom
imul
jno
ja
xorl
fnstenv
sub
outsb
in
test
je
test
pop
mov
dec
pop
repz
push
cmp
scas
test
out
push
jae
out
loope
mov
jp
pop
sub
gs
xor
repnz
das
xor
mulb
repz
outsl
loopne
and
shr
ja
je
imul
in
push
out
or
jbe
push
sbb
je
cmpsl
push
adc
icebp
push
jae
and
adc
popa
fisubrs
pop
push
push
lods
pop
popa
mov
mov
sub
xchg
pop
jns
and
sub
inc
dec
add
cmp
push
push
orl
das
iret
sub
cmp
shrb
imul
mov
mov
mov
ret
push
outsb
outsl
mov
shlb
add
jnp
push
jbe
daa
mov
jns
ret
xchg
adc
imul
and
scas
out
std
push
inc
jp
add
popa
pushf
scas
mov
adc
cli
addr16
or
xor
dec
inc
test
mov
and
mov
loopne
cltd
dec
or
xor
sbb
adc
xor
mov
sub
jge
add
push
mov
xchg
imul
cli
or
dec
push
scas
dec
sbb
cmp
movsl
lock
cmp
rorl
repz
gs
mov
cmpsl
mov
aaa
shr
push
xor
pop
xor
es
aad
jae
cld
in
mov
popa
or
loop
out
std
leave
mov
aaa
bound
jge
ljmp
xor
mov
push
or
sbb
jno
movsl
repz
cmp
jl
out
lock
add
and
cmp
cmp
cmp
inc
gs
pop
arpl
lds
adc
call
jne
mul
rol
xchg
push
gs
lret
cli
loopne
xor
or
shrb
pop
lock
pop
cmp
imul
xor
sahf
loop
bound
in
test
and
inc
jle
aaa
je
cwtl
imul
or
idivl
xor
ds
loopne
fcmovb
and
mov
ss
sbb
adc
icebp
pusha
testl
jl
ret
nop
xlat
outsl
loope
adc
mov
movsl
hlt
popa
out
inc
cltd
push
or
out
test
sbb
mov
adc
clc
jno
dec
adc
insb
jp
pop
insb
cmp
dec
jge
pop
adc
mov
adc
daa
es
test
xor
int3
or
arpl
mov
jnp
pusha
imul
mov
cld
xor
insb
in
outsb
jge
xchg
out
mov
aas
cmpsl
lahf
jp
popa
adc
mov
sub
dec
aam
mov
push
lock
sbb
insl
cmp
arpl
mov
shlb
xor
mov
sub
dec
outsb
push
lcall
out
ficoms
push
bt
shl
imul
out
stc
and
in
or
jno
addl
fidivrs
mov
jns
cmc
push
sbb
imul
insl
out
in
push
shll
push
movsb
push
dec
xchg
and
inc
shl
mov
jns
push
enter
mov
je
push
leave
test
and
inc
push
int3
sti
in
dec
std
std
fdiv
sbb
repz
mov
repnz
push
std
fsubs
scas
in
enter
fdiv
add
mov
in
jne
add
mov
inc
out
fdivrs
aam
sbbl
push
jnp
mov
xchg
jg
adc
shlb
cmp
pop
and
rorb
xchg
jbe
mov
enter
mov
imul
pop
into
jecxz
or
cmpsb
sbb
ss
lods
mov
cltd
jle
movsl
inc
mov
mov
in
mov
addb
xchg
repnz
mov
fisubrs
in
sub
aaa
ljmp
fnstenv
mov
cmp
icebp
jl
inc
clc
jno
sbb
mov
cld
out
outsb
and
jnp
insl
iret
hlt
mov
push
mov
sbb
add
loope
cli
imul
pop
push
dec
adc
es
in
push
sub
cmpsb
sub
aad
icebp
inc
lock
and
ljmp
mov
dec
sub
push
mov
mov
or
out
jl
jl
test
fiadds
int3
jne
outsl
loope
and
hlt
push
cmc
inc
cmpsl
lods
and
int
lds
inc
hlt
notb
insl
dec
imul
push
cmpb
cmp
sub
xor
scas
jmp
and
xchg
out
std
push
or
push
lahf
in
loop
ljmp
aas
sbb
mov
pop
pop
ret
jae
pushl
push
mov
push
mov
pop
and
popa
daa
jae
and
dec
repz
enter
jp
sahf
ret
mov
aam
sub
out
adc
faddl
imul
test
jecxz
cli
add
out
mov
lahf
push
xchg
jo
xchg
adc
pop
push
fdivl
lea
xor
dec
arpl
cmpsb
icebp
sbb
jmp
in
les
mov
sbb
in
push
mov
dec
scas
div
xchg
sub
in
scas
mov
ljmp
in
jge
cmpb
dec
hlt
and
dec
jb
adc
jbe
aam
sarb
cld
mov
bound
sub
lahf
jle
iret
xor
mull
dec
sub
cld
jl
mov
xor
xchg
xor
jne
lods
mov
outsl
in
mov
jb
fidivs
jmp
or
je
sbb
jmp
call
dec
in
or
in
and
sbb
xor
sbb
movsb
add
imul
je
test
jns
mov
xor
mulb
jl
and
mov
add
sub
fnsave
mov
pop
aas
sub
push
movsl
ja
fadds
cmp
and
and
jbe
sub
and
mov
cmp
adc
dec
pop
jnp
mov
je
insb
jmp
fiaddl
std
jg
jo
mov
and
jnp
loope
test
aas
repnz
stc
jo
mov
aad
sti
jmp
xchg
popf
std
xchg
xor
imul
jmp
insb
jbe
out
push
jns
bnd
pushf
push
mov
lahf
or
ret
xchg
pushf
je
in
std
push
jo
push
aas
decl
jecxz
mov
add
add
repz
cmc
xor
jecxz
shl
and
push
hlt
pusha
int3
int
pusha
xchg
push
imul
jmp
roll
gs
jle
into
ss
pop
out
jno
mov
cmp
mov
or
sbb
imul
test
cmc
add
inc
jl
in
shl
push
pop
std
mov
out
out
jns
or
xchg
sbb
ljmp
jp
or
lods
push
subb
filds
lret
mov
jno
jo
push
and
or
ss
loopne
xorl
in
mulb
mov
orb
xor
push
adc
sub
jb
cmpsl
out
imulb
xchg
and
mov
inc
push
lds
and
jmp
sbb
jecxz
adc
and
gs
mov
jns
imul
xlat
pop
sbb
push
add
and
ror
das
in
imul
dec
loop
cli
popa
jecxz
cmp
divl
test
push
dec
push
sbb
inc
add
sti
arpl
sbb
mov
or
jne
out
fsubs
imul
leave
or
and
mov
mov
movsb
loopne
sub
push
incl
orb
cmp
outsl
or
out
mov
aaa
jne
xchg
jle
jg
pop
cld
cmp
jge
les
fildll
jno
adc
dec
mov
jge
popa
jnp
xor
dec
jge
or
mov
in
mov
xor
dec
cmp
hlt
and
gs
daa
loope
dec
xorb
mov
or
in
popf
xchg
gs
shll
add
bnd
out
in
mov
pop
data16
fcomi
dec
test
imul
adc
jge
in
je
mov
or
fsub
jno
xor
mov
repnz
cmp
cld
std
insb
sbb
bnd
and
cmp
xchg
fxam
jb
push
inc
rolb
notb
sti
mov
jbe
shlb
jae
cmp
ljmp
jle
cmpsl
leave
or
pop
mov
push
clc
jno
ljmp
push
push
and
jae
inc
lods
imull
pop
dec
test
jae
xchg
cmp
push
cld
popa
out
jbe
ljmp
adc
aad
out
enter
sub
in
jae
int3
movsl
xor
out
sub
ds
push
loopne
mov
cmp
cltd
sub
aas
jae
aad
jno
popa
sahf
adc
sarl
ja
ret
dec
bound
aas
outsb
xchg
or
loopne
gs
sub
pop
lock
icebp
hlt
or
or
repz
sub
mov
je
jnp
je
loopne
loope
dec
fcomps
addr16
std
dec
movsl
out
call
mov
jp
jo
xor
fbld
xchg
loope
out
gs
adc
fcomps
in
outsb
jmp
jb
jge
xor
lea
fadds
jns
push
mov
push
and
jae
imul
lock
add
int
sub
ja
popa
cmpsl
fbld
jg
cmpsb
jo
push
les
out
cmp
outsl
xor
sbb
std
gs
push
add
out
pop
sub
mov
inc
aaa
cmpsl
movsl
fildll
adc
jp
or
imul
in
jno
out
outsb
push
stos
jmp
in
fcomip
pusha
insw
jo
je
enter
adc
in
jl
lcall
dec
jle
outsb
hlt
sub
mov
dec
inc
mov
push
daa
roll
jge
inc
jmp
call
adc
cli
jmp
loopne
or
inc
jg
icebp
add
fists
clc
popa
jmp
into
fsubs
mov
sub
or
and
jmp
sbb
daa
dec
add
jno
test
dec
mov
jno
or
mov
jne
jbe
jns
popf
adc
jo
sub
fs
push
add
enter
jl
or
mov
jb
jno
mov
adc
push
add
insl
cmpl
outsl
mov
shlb
pshufw
dec
std
in
mov
xor
cmp
ret
mov
fs
mov
sub
in
pop
mov
scas
repnz
and
lods
dec
imul
push
mulb
cltd
sub
push
dec
insl
or
mov
push
xor
push
data16
out
call
les
pop
jo
xor
pushf
aad
scas
and
inc
cmp
mov
sbb
sub
xor
notb
adc
xor
xor
cmpsb
push
hlt
jae
lods
jle
adc
out
and
jl
mov
outsl
sti
daa
xchg
popa
and
xchg
test
cmp
sbb
inc
sbbb
repnz
jmp
js
call
outsb
mov
add
stc
das
and
in
gs
push
insl
push
out
pop
jnp
mov
mov
jge
test
sbb
push
push
sub
jl
movsl
leave
xor
xchg
sbb
xor
jl
mov
mov
jecxz
imul
lock
enter
incl
dec
icebp
adc
push
jns
mov
mov
add
sub
out
lods
pop
std
jns
xor
faddl
mov
imul
sub
push
data16
aad
lock
jecxz
inc
ret
popf
outsb
aaa
adc
nop
fcomi
jge
mov
inc
sub
repz
xor
lock
stos
test
mov
testb
rclb
mov
lcall
mov
insl
daa
dec
ja
jbe
pop
sahf
pop
imul
lcall
arpl
ficoms
lea
or
cmp
jecxz
rclb
add
cltd
dec
cld
ja
clc
loopne
out
add
fdivl
imul
outsl
mov
mov
sub
mov
push
mov
in
push
add
scas
and
je
cmp
mov
inc
ljmp
in
arpl
popa
addr16
lcall
jno
inc
jo
cmc
jl
cld
daa
xor
cmp
mov
into
mov
jno
mov
xchg
clc
loopne
sahf
inc
mov
pop
jbe
jno
inc
cltd
enter
jl
movsl
add
das
push
jle
imul
push
into
lock
insl
ret
lock
adc
lock
cmpsb
pusha
into
lock
insl
inc
mov
fsubs
mov
jecxz
xor
cli
not
out
mov
jnp
pusha
jns
shlb
mov
cld
pop
push
popa
out
jae
mov
and
adc
arpl
icebp
mov
in
in
cwtl
out
xor
fsubrp
ja
out
inc
jg
imul
xor
sbb
jg
lret
daa
hlt
in
std
es
mov
mov
out
or
gs
and
lock
jns
push
push
insl
push
or
stos
jl
mov
adc
out
imul
push
insb
outsb
and
add
scas
stc
repnz
addr16
mov
mov
stc
ja
dec
mov
in
mov
sahf
push
sbb
pop
lret
data16
jae
jecxz
xchg
push
std
loopne
imul
push
fpatan
loopne
sub
mov
sbbb
xor
inc
ja
test
fdiv
cld
rolb
push
mov
outsl
gs
mov
or
orl
and
inc
outsb
jle
mov
add
arpl
pop
std
das
dec
jns
jno
sbb
push
neg
jne
iret
dec
repnz
loopne
mulb
cmp
xorl
std
jecxz
xor
ss
inc
test
addr16
sub
or
arpl
icebp
gs
movsb
lret
mov
sbb
insb
addr16
insb
in
jb
jge
cmc
outsl
movsl
lret
pusha
jnp
push
push
daa
jge
xchg
popl
hlt
nop
fnsave
loopne
mov
mov
pop
out
lods
push
xchg
repz
fidivl
arpl
in
xor
popa
lds
out
out
xchg
gs
mov
xlat
out
push
xchg
xor
inc
mov
les
adc
mov
pop
pop
xor
push
fs
fstl
sub
sbb
sub
loopne
jbe
shl
imul
xor
xchg
faddl
out
mov
enter
push
out
add
in
sbb
insl
ja
nop
push
xor
popa
data16
jp
test
push
lods
jg
adc
mov
sub
nop
stc
arpl
clc
icebp
insl
sbb
xor
lahf
std
gs
mov
push
outsb
cld
inc
xchg
lret
loopne
daa
xchg
mov
jl
lahf
adc
jl
sub
push
ljmp
mov
push
std
repnz
cld
aad
jecxz
dec
xor
push
aas
sbb
vpcmpgtd
out
addr16
jns
jg
leave
lret
shrl
jmp
out
rcrb
xchg
jecxz
cmp
jnp,pn
insl
imul
testl
push
mov
test
jo
xor
mov
push
bound
jbe
ljmp
dec
xor
mov
push
or
insb
clc
sub
xor
push
dec
cmp
mov
shrb
movsl
imul
clc
mov
jg
iret
sbb
lods
inc
jp
call
ljmp
arpl
data16
xor
jae
add
out
jmp
mov
dec
mov
test
jle
jmp
dec
jl
out
push
push
sbb
xchg
push
insb
and
cmpsl
icebp
push
imul
out
add
mov
sub
outsl
clc
lahf
and
loop
inc
jmp
addr16
popf
aam
sahf
idiv
std
jns
pop
inc
jmp
sub
inc
cmp
sbb
imul
int3
stos
loope
lock
sbb
jge
xchg
clc
jmp
push
cmpsb
rcl
ljmp
inc
cltd
in
shll
jbe
jne
stc
xor
cmc
lds
outsb
out
scas
cmp
xchg
imull
adc
cmp
jnp
xor
xchg
scas
rep
hlt
fwait
push
lahf
loopne
dec
bound
jno
push
movsl
aam
in
pop
mov
aaa
add
imul
sbb
ret
xor
adc
xor
push
adc
mov
insb
mov
imul
imul
icebp
push
gs
test
hlt
mov
inc
jp
fidivs
xchg
jmp
jb
dec
cs
jno
negl
pop
adc
cmpsl
xchg
je
pushf
loopne
xor
sub
mov
sub
imulb
ds
cvtps2pd
xor
adcb
cmc
lcall
push
mov
stos
je
jo
repnz
imul
lds
pop
jmp
lret
ja
loopne
call
mov
outsl
jno
neg
fiadds
jbe
mov
jno
adc
loopne
enter
stc
and
pushf
call
movsb
scas
pop
imul
push
push
adc
xor
subb
stc
xchg
and
jmp
push
imul
inc
cmp
adc
jno
mov
pop
mov
neg
push
icebp
inc
mov
xor
mov
xor
dec
inc
lock
insl
inc
lret
xor
dec
push
cmp
cmpb
jns
data16
fs
push
inc
lds
clc
sar
repnz
sub
jno
pop
add
jb
cmp
popa
mov
out
pop
mov
xor
cmp
popa
jae
lods
sub
jbe
mov
fdiv
mov
jmp
fiaddl
sub
jo
sub
fldcw
mov
hlt
or
xor
roll
push
jge
out
jmp
xlat
cmp
sbb
notl
push
inc
pop
jmp
sub
in
jns
mov
jmp
out
shrb
jno
ret
repnz
loopne
subb
nop
push
aaa
fsubrs
xchg
subl
dec
sarl
adc
and
fs
jb
jg,pt
hlt
lods
mov
scas
jle
push
scas
pop
es
push
pop
jnp
jb
outsb
push
stos
dec
bound
out
cmovne
pop
ljmp
enter
scas
or
into
mov
jns
add
insl
mov
fsubrs
xor
out
loopne
stos
sti
inc
out
add
sbb
dec
sarl
jae
dec
lret
push
outsl
call
lods
inc
frstor
and
in
loop
jo
dec
mov
out
or
rolb
adc
insl
push
into
fdivr
insl
jecxz
in
sbb
jl
les
add
outsl
gs
fwait
in
in
mov
inc
and
jmp
outsb
mov
div
mov
repnz
cmp
gs
gs
cmp
push
outsb
test
jmp
pop
sti
scas
lahf
imul
inc
jo
out
in
jp
xlat
das
outsl
ja
xor
jne
fnstsw
mov
bound
sbb
les
and
jno
mov
ret
repnz
xor
push
mov
jecxz
jb
jnp
xor
lahf
push
and
sbb
mov
mov
divl
in
gs
push
cmp
in
or
jo
and
out
xchg
mov
mulb
shll
lea
jmp
add
cmp
add
loopne
into
test
hlt
mov
fistps
add
imul
inc
push
outsl
sub
loopne
aad
vmovdqa
dec
gs
ss
xchg
test
jns
leave
or
das
gs
xchg
jne
imul
cltd
mov
negb
push
es
jmp
jbe
les
in
imul
ficoms
inc
inc
mov
lods
stos
lea
imul
outsb
xor
adc
test
mov
int
nop
pop
push
aam
repnz
adc
jo
scas
jp
stos
mov
cmpsl
inc
or
sub
push
mov
xor
and
je
addr16
adc
mov
xchg
xchg
xor
addl
pop
jl
mov
daa
aas
mov
xor
jge
mov
xor
mov
push
out
test
jae
out
test
dec
and
push
adc
jmp
push
rsqrtps
fprem1
les
xor
push
inc
sti
adc
outsl
push
cmc
adc
or
je
out
movsl
push
jbe
xchg
mov
movsb
push
out
popa
inc
adc
mov
jb
data16
inc
sub
jno
xor
inc
arpl
push
stos
mov
loope
dec
xor
cmc
pop
outsb
and
mov
mov
in
roll
negl
ds
xor
in
repnz
jp
add
outsl
das
cmp
inc
je
pop
cmpsl
idivl
jmp
cmpsl
pop
inc
loopne
pushf
rorl
inc
push
pop
aas
neg
aam
and
and
mov
jge
addb
xchg
imul
es
mov
cmpsl
cmc
adc
imul
mov
bound
pop
jno
insl
mov
adc
adc
mov
ja
repz
cmp
sbb
push
mov
cld
xor
cmp
push
je
jge
shlb
icebp
cmp
adc
cmp
xchg
std
jb
xor
out
push
jae
in
loopne
mov
xor
testl
dec
out
xor
mov
mov
dec
pop
and
jo
mov
xor
fisubrl
outsb
popa
inc
mov
push
test
xor
movsb
in
pop
pop
incb
sti
jmp
cmc
repnz
xchg
loopne
pop
or
cwtl
jb
push
addr16
dec
dec
stos
push
mov
inc
addr16
jnp
outsb
push
movsb
clc
jo
rorb
int3
lcall
bound
xor
insl
and
xchg
jae
fsubl
adc
push
mov
push
sub
loopne
jnp
fcomps
push
mov
xlat
out
inc
rol
in
push
mov
je
jne
and
loopne
pop
jecxz
dec
in
insl
inc
push
dec
out
jmp
mov
push
pusha
cmpl
sub
or
push
bnd
mov
or
jecxz
loop
jmp
pusha
ror
lods
stc
jns
jg
and
sub
xor
jno
and
add
xor
or
insl
add
xchg
mov
mov
jle
enter
dec
lret
mov
out
scas
cmpsb
sti
adc
xor
add
sub
mov
jno
jmp
bound
in
lock
xor
ljmp
mov
out
dec
push
xchg
adc
jo
lods
ficomps
xchg
jb
jmp
push
mov
add
adc
add
clc
cmp
popf
hlt
sbb
xor
push
mov
xor
jo
xor
jg
jecxz
repz
pop
movsb
cltd
test
out
xor
inc
jl
inc
sbb
outsb
call
enter
add
loopne
inc
push
sub
fst
out
icebp
xchg
gs
adc
jl
imul
daa
adc
xor
mov
and
xchg
jg
mov
mov
or
mov
ss
std
dec
mov
bound
arpl
xor
dec
jo
sub
outsb
mov
jno
sub
mov
mov
sub
pop
inc
flds
add
imul
jns
inc
cs
movups
dec
movsl
sbb
loope
push
es
repz
rorb
jbe
out
jne
iret
push
mov
fs
imul
xlat
adc
jmp
jbe
mov
mov
outsb
mov
mov
xor
mov
dec
jne
jle
rep
push
ljmp
and
lods
xor
repz
jnp
mov
mov
or
cmp
cmpsb
pop
shrl
dec
lock
cmp
xor
loopne
pusha
jl
jnp
leave
push
loopne
movsl
jge
pop
or
lret
mov
out
mov
push
push
ljmp
notl
jo
jnp
and
gs
pop
push
clc
leave
movsl
out
mov
fldl
je
cmp
sti
inc
xor
popa
scas
es
mov
push
call
int
jb
stc
outsl
fs
push
mov
jo
xor
jmp
and
cmc
inc
jp
ja
fwait
imul
xchg
inc
jb
mov
adc
dec
into
mov
jae
xchg
adc
pop
push
sub
add
outsb
clc
add
xor
inc
test
repz
imul
repz
daa
sbb
ret
js
lock
jge
roll
sbb
shlb
scas
imul
aaa
cmpl
imul
mov
hlt
aaa
xor
jle
jbe
sbb
jb
xor
or
or
sub
insb
lock
call
mov
jnp
je
jecxz
adc
iret
mov
push
push
sbb
out
jl
jg
xor
push
mov
xor
push
lock
xchg
out
outsl
mov
popa
cmpsl
test
mov
out
int
gs
pop
cmpsb
push
notl
movsl
jg
test
push
jne
fsubr
jns
push
insb
jp
jb
xor
jnp
lods
leave
sarl
mov
lock
xchg
pop
in
inc
sbb
jle
sub
jno
inc
iret
outsb
repnz
push
cmp
mov
or
fisubl
jp
sbb
mov
test
mov
aad
jg
test
dec
cmp
sti
lret
push
add
sub
jecxz
lea
arpl
push
mov
pop
xor
sub
lea
imulb
fdivs
lods
xchg
std
ljmp
imul
xchg
mov
aam
sahf
loope
jmp
icebp
fdivs
jbe
dec
xchg
dec
xor
arpl
je
fiadds
jle
mov
cli
inc
xchg
gs
out
add
add
stos
divl
aaa
lahf
push
sarb
adc
jno
mov
mov
es
xor
xor
push
add
mov
jo
mov
std
jo
das
mov
push
mov
pop
test
sti
add
sbb
or
es
out
loopne
pop
imulb
icebp
push
insl
sub
jge
inc
jo
insb
xor
out
clc
push
mov
mov
sub
xor
ficoml
mov
jecxz
movsb
jbe
cltd
inc
push
or
into
mov
lods
outsb
test
mov
sbb
fbld
xchg
jo
in
in
lods
jge
in
popa
out
or
add
mov
insb
scas
sub
ljmp
lock
icebp
jp
dec
mov
fcmovbe
sbb
push
mov
outsl
push
cli
mov
jne
mov
pop
leave
push
pop
sti
outsl
sub
inc
cmp
jmp
xchg
push
sbb
lock
leave
popa
xor
sti
ljmp
rclb
jno
mov
je
dec
sub
hlt
add
xor
in
xchg
mov
cmp
movsl
mov
mov
outsl
jge
dec
push
insl
jns
movsb
mov
clc
cmp
cmc
out
jmp
or
mov
mov
dec
cli
pop
loope
repnz
stc
lock
outsb
push
je
jae
sub
shr
push
movsl
push
add
dec
incl
xor
imul
jmp
mov
cs
inc
test
and
jo
xor
adcb
sub
pop
push
add
jnp
fs
jbe
sbb
mov
xor
loop
in
xlat
and
cmpsb
sbb
jp
lock
jl
sbb
shrl
insl
out
loope
addr16
push
xchg
pusha
in
jne
xor
gs
in
inc
mov
adc
jle
dec
xlat
stc
inc
dec
jbe
repnz
inc
movsb
add
loop
lock
mov
push
js
fnsave
in
out
insl
arpl
movsl
mov
out
scas
inc
movsl
imul
xor
inc
jecxz
aad
loopne
sub
in
xlat
jo
sub
test
push
mov
out
add
in
cli
jmp
add
out
push
mov
test
out
cmpsl
lock
lods
lea
arpl
xor
test
icebp
std
sub
sbb
mov
outsl
ret
sahf
insl
fdiv
scas
cmc
sbb
jmp
js
das
mov
lock
out
cmp
call
sub
repz
jg
or
sti
jns
xchg
loopne
mov
xor
repnz
cli
mov
movsl
jl
jl
add
xor
push
decb
repz
mov
std
mov
mov
inc
ret
outsl
xor
jae
inc
bswap
scas
push
js
pushl
shlb
mov
jno
or
imul
cmc
xor
test
xchg
push
jecxz
xor
lock
imul
dec
mov
mov
adc
dec
mov
or
cmpsl
je
pusha
push
sub
cmc
outsb
adc
pop
jo
mulb
fsubrl
inc
stos
gs
push
outsl
push
xor
xor
add
jecxz
decb
in
outsl
daa
mov
popa
sub
test
mov
lcall
scas
testl
sbb
adc
mov
pusha
ss
mov
mov
les
jnp
cld
adc
sub
rcrl
mov
lods
loopne
xchg
outsb
data16
gs
test
and
or
adc
bound
out
jno
outsb
ljmp
jnp
lret
lds
movsb
push
push
and
push
jecxz
xchg
cmp
shll
out
sub
cmpsb
sahf
xchg
jo
push
mov
adc
mov
xchg
pusha
rol
jbe
data16
push
mov
push
loopne
inc
bound
fucom
in
pop
imul
inc
jg
lods
popa
push
cmp
movsl
mov
les
adc
loope
xor
popa
paddsb
cmp
mov
cmp
imul
sub
sbb
add
jns
sub
loopne
pop
loope
js
test
push
jecxz
sub
add
xor
inc
sti
popa
add
std
mov
xorb
pop
push
cmp
icebp
outsl
mov
xor
or
jne
outsl
dec
push
xor
lret
clc
outsl
dec
mov
fcomps
data16
test
pop
out
ljmp
inc
fdivs
shl
nop
jp
push
dec
ret
jle
scas
ret
mov
in
mov
xor
das
and
mov
test
pusha
or
jle
jnp
stc
or
lret
popa
push
pop
or
sbb
mov
stos
mov
bound
inc
adc
imul
cmc
insl
pop
sbb
das
xchg
xor
sbb
jmp
loop
push
sbb
inc
iret
xor
xor
test
out
scas
icebp
lea
lea
sbb
pop
ret
jecxz
sbb
in
ja
push
les
dec
test
mulb
imul
inc
jle
sub
and
dec
jecxz
call
loope
jmp
jmp
push
outsl
jbe
xor
pop
pop
pop
push
add
dec
jb
lock
cmc
xor
insl
call
movq
xchg
insl
test
sarb
loopne
push
xor
and
jmp
jns
test
stos
loopne
scas
cld
addr16
fisubs
jbe
xchg
inc
jno
es
repnz
push
movsb
mov
shrl
outsl
mov
pop
cld
push
in
mov
xchg
outsb
jmp
mov
jb
les
sub
popa
sub
pop
fcos
dec
fdivp
jno
cli
out
xor
push
mov
call
hlt
pop
mov
insb
jge
roll
jo
fcoml
jno
mov
imul
repz
jbe
out
gs
pop
cmp
insl
mov
xor
xor
shrb
xor
xor
icebp
fdivl
jns
adc
test
stc
loopne
clc
arpl
lock
xchg
loopne
movsl
inc
sti
or
out
popa
divl
dec
cmp
mov
cmp
fisubrs
arpl
pusha
pop
in
add
notb
sbb
cmc
mov
jl
imul
jo,pn
loope
xor
sbb
adc
addr16
in
popa
and
xchg
add
shr
imul
mov
fdivrs
jp
lock
dec
jle
adc
popf
and
mov
enter
ret
lods
lods
stc
push
push
mov
push
and
hlt
xor
push
cmp
jae
leave
scas
les
fsub
jb
gs
xor
into
mov
push
loope
decb
lock
icebp
clc
pop
cli
mov
dec
sbb
imulb
jno
jle
mov
icebp
jno
push
in
shll
add
adc
push
sub
xor
inc
dec
jbe
adc
xchg
lock
jmp
mov
inc
jne
jmp
cmp
xchg
sub
shrl
mulb
dec
cltd
lcall
cld
pop
add
nop
clc
loopne
mov
jns
xor
hlt
jns
mov
in
jno
push
jle
cli
scas
mov
dec
push
test
loopne
sahf
ret
mov
frstor
out
out
mov
movsl
mov
jo
pop
std
and
stos
movsb
jbe
loop
addr16
mov
mov
outsb
dec
daa
mov
jo
and
push
sub
bnd
iret
mov
add
in
jb
jnp
dec
shl
scas
sbb
xchg
cmc
push
push
and
outsl
jns
data16
push
frstor
mov
pusha
push
dec
fdiv
xchg
imul
ret
pushf
mov
mov
fsubs
dec
ss
inc
inc
xchg
dec
clc
cli
inc
jmp
mov
cltd
and
adc
fdiv
mov
jecxz
sahf
les
cmp
ljmp
je
insl
test
xor
sti
clc
fidivrs
jecxz
cltd
push
push
xor
in
outsl
in
dec
clc
popa
mov
subl
cmpsl
jae
in
shl
and
sub
out
loopne
jns
jno
mov
push
mov
fs
stc
inc
mov
pop
xor
xchg
in
mov
in
fmuls
sahf
xchg
insb
sub
flds
push
lcall
add
movsl
movsb
and
jno
in
stos
int
mov
jl
jg
rcl
sub
testb
jl
sub
in
test
push
mov
scas
call
push
add
std
adc
or
test
pop
loopne
rol
xor
jns
jns
push
mov
mov
cmpsb
jl
sets
add
call
mov
ret
adcb
sbb
jae
out
and
jb
xor
xlat
and
cmp
mov
or
aam
push
scas
adc
loope
push
cmp
sub
jnp
adc
pusha
mov
repnz
sbb
push
pop
addl
cmp
into
inc
mov
mov
je
scas
ljmp
lock
pop
out
iret
sub
cmpb
and
je
jb
lret
outsb
push
in
xor
leave
mov
jg
shll
dec
loop
fldcw
push
bound
test
inc
in
cld
aam
arpl
cmp
notl
jo,pn
icebp
jo
push
jl
xchg
std
loope
rcll
jno
cli
lods
xor
jg
in
fwait
xchg
sub
clc
mov
in
daa
push
imul
enter
xor
or
adc
inc
imul
and
pop
add
inc
pusha
dec
xchg
dec
bound
mov
mov
repnz
xor
repz
mov
xchg
repnz
jmp
mov
jae
testb
push
outsb
sti
or
rclb
insb
outsl
scas
roll
jbe
stos
xor
push
mov
mov
imul
icebp
mov
clc
outsl
xchg
lods
and
popa
dec
dec
shll
add
lea
inc
mov
bound
push
adc
push
jo
jae
cld
sbb
loopne
lahf
sti
mov
xor
jg
mov
pop
in
sbb
mov
sahf
and
xchg
addr16
pop
jne
mov
movsb
sbb
leave
lods
sub
jecxz
jge
xor
mov
mov
jno
mov
mov
leave
pop
das
out
fdivrl
jge
push
sahf
jle
push
loopne
movsb
xor
mov
xor
inc
pop
cli
sub
loopne
inc
mov
sbb
in
das
jecxz
dec
loop
enter
sub
or
data16
iret
adc
xchg
out
lds
enter
push
divb
xor
mov
xor
lret
repnz
jmp
leave
jns
push
or
je
sub
insl
inc
push
cld
add
and
cld
loope
sub
js
push
mov
push
mov
out
out
lock
es
dec
add
aam
or
push
jns
pop
push
leave
arpl
fnstenv
mov
out
mov
cmpsl
mov
cmp
adcl
inc
dec
mov
mov
cmp
mov
mov
sbb
and
cmpsl
clc
xor
pop
imul
arpl
lcall
fdivrs
xor
popa
cmp
insb
jns
sub
jmp
loopew
loopne
cmpsl
and
pop
lods
daa
xchg
mov
sub
pop
inc
and
push
stc
xorl
decb
imul
fistpll
lret
xlat
outsb
jno
pop
icebp
dec
movsl
scas
jb
push
push
lea
or
imul
xor
lcall
jno
jp
push
loop
dec
push
jae
ret
xchg
out
xlat
jp
aas
repz
pop
push
or
idivb
adc
jmp
popf
notl
imul
sub
jge
xor
and
and
pop
in
push
out
stos
sbb
lret
push
adc
popf
popa
rol
fwait
mov
loope
inc
pop
es
adc
scas
jle
cmpsl
cmc
out
xor
lods
je
jb
jle
hlt
xor
pushl
inc
out
inc
jge
adc
pop
into
dec
sub
adc
jbe
out
xchg
jo
push
lahf
mov
fsubl
mov
insl
js
lcall
out
sbb
stc
sub
enter
jg
repnz
inc
ljmp
divl
shrb
das
lcall
xor
aad
cmp
pushf
out
push
pop
push
or
cld
test
jae
add
fsubl
sti
jmp
mull
outsl
notl
jl
cmp
xchg
dec
pop
in
adc
jecxz
sbb
int3
call
hlt
lret
xor
cmpsl
jnp
sbb
ja
imul
jmp
or
jg
push
in
dec
loopne
jno
inc
inc
push
and
mov
inc
imulb
mov
outsl
jmp
push
js
cli
cwtl
ficoms
push
ret
mov
xchg
cmc
lock
popa
sub
ljmp
js
sub
xchg
xchg
ja
add
jge
call
jno
iret
cmp
or
cmp
pushf
cltd
xor
aas
sarb
sub
cmp
mov
jno
imul
or
dec
fucomp
stos
lock
jnp
xchg
pop
in
shlb
xor
mov
cmp
jl
iret
xor
adc
sbb
int
lahf
insl
jne
outsl
and
popa
stos
mov
jb
in
mov
mov
sub
mov
aaa
xor
lahf
jns
lds
in
idivl
into
sub
outsb
jno
sbb
fsubrl
pop
jno
mov
mov
loop
loopne
out
loop
cmp
xor
in
repnz
into
xchg
lock
jb
jge
jb
lods
xor
into
incb
out
push
daa
test
or
jmp
xor
repnz
gs
jae
jmp
outsb
xchg
and
arpl
outsb
jmp
lea
mov
cld
jne
imul
jno
mov
mov
divb
push
sbb
fbstp
push
jne
loope
jnp
in
xor
js
jmp
add
popa
pop
repnz
xorl
xchg
outsl
inc
ds
jns
push
das
push
xchg
inc
imul
dec
out
adc
hlt
push
lcall
jge
push
aas
cmpsl
cmp
sbb
sti
push
gs
enter
xchg
inc
data16
lods
sbb
xor
in
ret
fdivs
bound
ljmp
shll
je
outsl
orl
sub
push
sbb
out
adc
call
repz
loope
and
jae
out
dec
ficomps
cmp
scas
or
lock
cmp
out
dec
jg
por
es
insb
in
jae
shlb
pop
push
dec
mov
mov
cmp
je
das
and
int3
mov
popa
xor
sahf
je
leave
xor
cs
or
test
loopne
fs
and
outsl
test
jge
sub
lods
bound
call
aam
loopne
jecxz
fisubrs
cmp
mulb
in
sbb
dec
cmp
repnz
adc
push
fneni(8087
adc
cld
sbb
imul
cmpl
imul
jno
lahf
div
mov
sub
nop
cmpsl
lods
aam
xor
iretw
nop
icebp
ret
inc
xor
xor
push
cltd
loop
push
adc
mov
jno
loope
dec
xchg
jns
jl
movsb
loop
lret
xor
sub
fwait
jnp
dec
out
pop
inc
mov
mov
arpl
icebp
dec
xchg
insl
sahf
mov
mov
mov
pop
test
sub
jmp
adc
ja
adc
dec
scas
outsl
sbb
or
out
jecxz
xor
pop
mov
loope
adc
loope
gs
std
ja
insb
sbb
mov
pop
loopne
dec
fidivl
imul
mov
push
mov
dec
lds
imul
pop
pusha
popa
inc
mov
adc
hlt
sti
std
ficoml
loopne
push
ds
sti
imul
insl
mov
jnp
adc
inc
jge
adc
vpaddb
cli
sub
mov
and
out
fidivs
out
fnstsw
push
xchg
aad
push
inc
stos
mov
js
jae
fildl
jne
push
pop
ljmp
ret
in
in
xchg
andl
pop
movsl
idiv
bound
sbb
sbb
jbe
jae
lock
adc
cmp
imul
inc
push
aam
xor
ljmp
mov
mov
iret
scas
nop
sarb
data16
adc
pushf
jb
jecxz
sub
mov
sub
pop
jno
cmpl
xor
pop
test
mov
icebp
repnz
loop
aas
push
mov
pop
test
xor
dec
mov
pusha
jmp
mov
sbb
mov
in
ds
outsb
loop
dec
inc
adc
xor
mov
in
dec
jne
jb
in
mov
sub
xlat
das
adc
data16
loope
mov
shl
mov
loopne
cmp
clc
ss
adc
test
imul
ficompl
shl
jl
scas
or
lods
and
fadd
insl
jecxz
pop
lahf
mov
sarb
divl
notl
loope
cmpsl
adc
fs
mov
sysenter
in
xor
dec
xchg
repnz
mov
push
push
inc
mov
outsw
xchg
xor
add
dec
aas
xchg
gs
in
jnp
sub
mov
push
sub
out
dec
test
cmp
adc
adc
mov
push
outsl
inc
sti
xor
rclb
jnp
aas
insl
mov
mov
push
cld
pop
jb
je
mov
divl
xchg
or
lret
out
testl
mov
jmp
imul
jnp
cltd
loope
inc
jg
out
test
lea
popa
ficompl
add
pop
inc
enter
int
mov
lods
sub
into
push
jno
insl
jg
call
loopne
xor
inc
jmp
data16
dec
imul
xchg
inc
xor
loop
sbb
aam
pop
jp
in
sub
xor
push
incb
mov
les
sub
out
addr16
iret
inc
jp
and
push
in
jno
fxch
xchg
ja
fsub
lock
cmp
adc
push
push
stc
imulb
gs
sub
sti
or
jge
js
dec
xor
adc
ret
jle
out
xor
pop
aas
inc
je
jg
dec
push
pop
lea
dec
leave
inc
bound
mov
add
repz
or
in
jno
mov
push
jno
adc
fidivl
mov
clc
jmp
imul
cmpsb
xor
cli
xchg
pushl
add
jle
test
jl
dec
and
mov
divl
cmc
push
inc
ret
add
outsb
mov
sbb
fadd
jge
movsb
imul
push
xor
scas
add
dec
jmp
outsl
inc
mov
xchg
and
xchg
cmp
cli
sub
std
jb
add
xchg
les
mov
xchg
jne
jns
call
sub
adc
ds
sub
pop
sbb
mov
push
jmp
insl
hlt
or
sbb
sbb
push
or
jmp
xor
or
pop
outsl
imul
insl
std
nop
sbb
lock
jg
xor
inc
xchg
or
mov
or
or
loop
mov
and
sub
fstps
fwait
and
jbe
fcoml
out
push
ror
lds
sbb
gs
xor
test
stc
imul
jg
test
xorl
pop
call
ljmp
ja
loopne
dec
xchg
adcl
dec
dec
push
jg
mov
mov
cld
xor
jae
in
or
daa
loopne
loopne
pop
sarl
cmc
in
addr16
xor
sti
cs
xchg
xor
ret
inc
ja
fsubl
movsl
daa
push
loope
loop
sub
mov
out
push
jbe
sub
negb
jo
shlb
cmp
daa
icebp
adc
and
mov
sbb
iret
daa
xor
or
scas
xlat
mov
insl
imul
repz
push
and
out
bnd
imul
and
push
js
repz
pop
inc
adc
jnp
and
mov
in
add
cmpsb
bound
inc
imul
mov
mulb
cli
adc
fsubs
cmp
clc
insl
sahf
fwait
test
dec
sub
int
adc
aas
clc
jle
pop
push
sub
out
movsl
pusha
jns
xchg
scas
es
shr
jbe
push
adc
xchg
mov
hlt
and
popf
rcl
std
push
inc
jmp
arpl
in
mov
in
loope
int3
jno
pusha
mov
popa
loopne
mov
or
jecxz
in
and
aas
gs
xchg
or
jl
icebp
xchg
jns
mov
and
lods
push
cli
push
xor
rep
sub
iret
out
push
sub
jl
repz
jp
mov
movsl
jo
ljmp
jmp
or
sahf
repz
enter
cmp
loopne
xor
clc
mov
cmp
cli
fsubr
push
idiv
icebp
xor
in
sti
test
push
push
aam
push
sub
insb
clc
cmpsl
push
cmp
fdivrl
arpl
cmpsl
jb
cmp
loopne
cltd
jle
cmpsl
inc
adc
cltd
mov
lret
and
fdivs
mulb
or
imul
push
mov
das
ret
mov
imul
adc
pushf
aad
out
lods
mov
xor
inc
cmc
pop
out
add
movsl
mov
cld
cmp
movsl
lock
push
mov
and
cli
mov
mov
push
mov
sub
rep
into
jns
popl
test
push
cltd
sbb
push
inc
ret
out
stc
and
idivl
stos
jbe
pop
mov
jmp
ja
jnp
outsl
insb
inc
sub
cmpsl
jae
andl
loope
arpl
int3
hlt
push
push
sti
popa
dec
mov
cli
xchg
mov
jge
cld
hlt
shrl
out
scas
mov
testb
daa
je
in
ja
jo
mov
sti
icebp
shr
repnz
notb
call
stos
lret
jnp
into
xchg
adc
cmc
lahf
imul
adc
hlt
xor
jne
push
in
jo
mov
adc
and
cmp
xor
dec
sar
outsl
sub
shr
fadd
jecxz
mov
out
mov
loop
xor
fistl
ficoms
and
fsubrs
and
loop
cltd
clc
pop
cs
mov
insl
jno
in
insb
mov
sub
cmp
mov
lock
icebp
mov
jecxz
or
aaa
mov
lea
jmp
popa
test
sub
and
gs
fidivs
mov
imul
jno
xor
sbb
hlt
xor
xor
popa
cmp
testl
stc
push
shr
dec
xor
jno
push
or
cltd
mov
gs
outsb
popa
daa
and
add
xchg
add
pop
jmp
jmp
das
lds
jp
scas
test
xor
enter
stc
jne
jbe
loopne
dec
jg
lahf
into
in
out
push
subl
ret
xor
jmp
xchg
lea
std
loopne
push
push
gs
cmp
sub
stos
bound
sbb
movsl
lods
jg
loopne
out
sar
incl
inc
hlt
scas
pop
cltd
enter
cmc
or
and
add
inc
lods
dec
xor
xchg
cmpsl
push
jbe
sti
in
pop
stc
popa
mov
das
sahf
cmpb
xor
xlat
stc
mov
repnz
out
mov
repnz
imull
xor
fdivrl
jae
push
jge
xor
loop
mov
data16
scas
jl
movsl
sub
push
fstps
gs
mov
pop
cmpsl
decb
xchg
arpl
inc
out
or
nop
mov
aas
cmp
insl
imul
xchg
xor
stc
f2xm1
scas
std
outsl
dec
shrb
ja
lock
mov
mov
jns
lods
in
fisubrl
xchg
xor
cmpsb
outsb
arpl
icebp
fcomip
test
jo
xor
imul
std
movsb
mov
adc
xchg
mov
xchg
jp
mov
pop
push
push
jns
mov
push
push
fwait
jno
push
xor
imul
mull
xchg
push
fwait
int3
cltd
cld
mov
push
movsl
and
mov
pop
pop
fcoml
loope
jns
testl
lea
jne
adc
in
scas
rclb
adc
or
push
sbb
scas
rorl
loop
jl
cmp
mov
mov
icebp
int3
aas
jae
loope
fimull
stos
loope
xchg
jbe
andl
shrb
pop
inc
aaa
stos
jb
jne
ficoml
loopne
movsb
setne
sbb
shrb
es
and
js
mov
out
mov
call
mov
rcl
or
jp
mov
repnz
out
xor
js
jmp
jo
imul
inc
mov
outsb
jno
xchg
lret
icebp
in
sub
je
mov
xor
in
xchg
adc
cmp
mov
les
mov
imulb
iret
xorl
push
je
mull
leave
stos
fnsave
pop
sti
popa
popa
ljmp
out
pop
xchg
fisubs
sbb
leave
rcrl
scas
sbb
out
inc
mov
dec
mov
or
les
imul
outsl
je
adc
dec
xlat
cwtl
sbb
div
idivb
clc
gs
imul
ss
and
adc
sub
jns
and
jge
push
addr16
gs
xor
pop
jg
movsb
push
cmp
inc
je
xchg
fdivl
cmp
insl
and
or
add
leave
and
daa
outsb
jno
sub
rcr
out
loop
lock
jne
loope
movsl
es
xor
adc
out
xor
out
dec
icebp
ret
idivl
mov
repz
push
pop
mov
mov
pop
jae
lock
js
rcrl
insb
out
mov
test
mov
mov
push
mov
js
jo
or
rclb
jnp
shrl
adc
jle
rclb
bound
movsb
stos
fwait
imul
loope
jmp
and
outsb
popa
xor
push
mov
xchg
dec
shrl
stos
cli
sbbb
ljmp
scas
push
xor
std
sbb
xor
inc
sarl
cli
popa
or
sti
push
xchg
push
dec
repz
jge
ss
push
xorb
jp
dec
or
xor
cltd
icebp
sbb
cli
and
sub
in
das
mov
jns
dec
pop
mov
faddl
jbe
daa
ret
mov
xor
push
repnz
mov
dec
repz
sub
lea
inc
xor
cmc
scas
jge
dec
fdivrl
jo
stc
push
mov
dec
cmpsb
cmp
mov
push
cmp
lcall
jecxz
inc
pusha
pop
xor
clc
popl
insb
pop
rolb
cmpsl
jmp
inc
cmp
das
shll
std
out
loopne
jns
jl
pusha
cs
inc
aad
out
scas
imul
cli
cmp
test
in
aad
in
stos
jnp
fs
es
into
cmp
andl
je
std
fidivl
imul
adc
jp
cwtl
mov
mov
out
outsl
into
push
cmp
lock
pop
pop
mov
xor
xchg
std
aad
cmp
mov
jle
fadds
fsubr
push
jge
popa
mov
out
inc
jecxz
mov
fsubp
jmp
test
pop
lock
scas
mov
lahf
mov
pop
mov
stc
popa
movsb
out
inc
sarb
sahf
inc
popa
imul
xchg
sbb
xlat
or
les
int3
fstpt
pop
jmp
mov
jl
push
es
loope
outsl
test
mov
add
sbb
jae
stc
sti
mov
pop
hlt
mov
daa
lock
xchg
dec
mov
lret
xor
call
out
mov
imul
outsl
lea
cli
jns
ret
and
decb
ljmp
shlb
xor
orw
std
insb
xor
push
mov
testb
mov
xor
mov
adc
mull
dec
sub
std
popa
loope
push
bound
jge
in
sar
repz
movsb
ret
inc
mov
push
scas
jp
in
dec
insb
popa
lahf
jbe
outsl
xchg
sti
in
jns
dec
cmp
jb
mov
outsl
psubusb
push
repnz
out
rcl
mov
outsl
pop
inc
jo
dec
jbe
das
adc
jmp
cli
xor
pusha
out
jl
negl
jo
add
mov
mov
pop
outsl
out
je
sub
hlt
std
bound
in
inc
push
push
pop
xchg
push
in
rcl
cmp
cmp
js
out
and
loopne
xchg
push
imul
xor
in
fwait
inc
jb
loop
testl
xor
lds
jl
inc
pop
rolb
out
negb
popa
sub
movaps
popf
mov
jle
inc
out
inc
pushf
jl
lcall
push
icebp
outsl
je
xor
adc
jo
sub
outsb
jb
jne
sub
inc
pusha
mov
outsl
clc
jp
cli
mov
push
jne
xor
enter
and
jno
call
or
mov
xchg
jno
pusha
imul
movsl
scas
sahf
clc
jge
outsl
inc
inc
test
scas
clc
or
push
pop
repz
push
sarl
sbb
in
jne
test
cmp
mov
mov
loopne
movsb
pop
xchg
aad
movsl
mov
bound
sti
sbb
in
daa
dec
sbb
decl
test
xor
cmp
scas
jecxz
movsb
ja
push
mov
lock
jns
push
dec
mulb
imul
xor
sbb
mov
xor
movsb
stc
mov
jo
out
bound
adc
jge
insb
mov
and
pop
movsb
mov
icebp
popf
jno
sbb
int3
jae
sub
and
notl
xor
ret
int
mov
sub
lock
mov
adc
idivb
stos
in
jno
pop
adc
sbb
xor
shlb
sbb
pop
jge
stos
ds
jae
push
push
adcb
push
sub
imul
adc
lret
outsl
js
pop
xor
adc
popa
ja
jns
inc
repnz
enter
fsubr
fldl
outsb
int3
mov
mov
lock
cmp
repnz
pop
xor
jae
out
jns
xchg
pop
adc
out
imul
xchg
ds
scas
mov
and
jae
jnp
jmp
xor
mov
adc
loopne
in
ja
mov
rclb
stc
and
jmp
loop
cli
adc
divl
push
addr16
gs
cmp
repnz
cmc
and
mov
mov
or
inc
jmp
xor
cmp
insw
pop
outsl
bound
pop
std
inc
sarb
in
gs
mov
call
bound
insl
out
movq
push
adc
mov
cmp
das
sub
or
push
jns
or
test
or
or
insl
push
inc
push
stc
out
shll
loopne
cmp
fsubrs
outsb
mov
jo
ss
inc
mov
shl
lds
popa
cli
xchg
sbb
adc
bound
imul
xor
jmp
xchg
jo
xor
mov
jbe
jnp
fcoml
scas
pop
mov
lcall
cmc
popa
lds
stos
xor
or
mov
jg
mov
lods
mov
lds
add
jb
dec
jns
fwait
sbb
jge
imul
mulb
data16
jge
mov
xor
xor
outsl
sbb
aas
xor
in
mov
into
mov
nop
movsl
icebp
sub
mov
adc
call
aad
cmc
jge
inc
filds
inc
lret
jbe
sub
cmc
jno
sub
add
shlb
and
subl
orb
mov
jmp
stos
jne
scas
jmp
ljmp
call
xor
loopne
insl
push
js
arpl
jne
xor
dec
out
es
test
mov
repnz
lock
scas
jmp
cld
xor
mov
push
addr16
sub
addr16
add
lods
int
lods
sub
arpl
int3
dec
cmc
cmp
popf
popa
inc
push
jbe
aaa
xchg
loopne
and
jp
mov
inc
in
xchg
bnd
jmp
inc
xor
mov
ds
ss
cld
out
sarb
bound
stos
sti
xor
cmp
repnz
pop
xor
add
add
mov
jg
imul
lock
addr16
cmp
push
jmp
hlt
xchg
sti
jg
enter
imul
pop
jns
imul
or
jns
or
xor
mov
adc
cli
cmp
loope
sbb
mov
dec
lock
shlb
pop
push
out
jle
sub
testb
push
sub
test
mov
add
outsl
subb
mov
jmp
outsl
call
aam
jg
pop
inc
jg
andb
push
jno
pop
lcall
subb
or
scas
xlat
imul
dec
movsl
jecxz
notb
daa
addr16
sbb
call
insl
push
shll
push
add
xor
int3
sub
in
cmp
and
popa
loopne
fmulp
cmp
repnz
in
lahf
adc
cmpsl
jo
pop
cmc
insl
dec
add
xor
gs
rorl
mov
and
hlt
mov
jo
sbb
stos
xor
repnz
stos
in
insl
xorb
out
inc
scas
insl
jnp
mov
out
mov
stos
insl
test
push
fildll
xor
repz
sub
jae
dec
ret
push
inc
pop
mov
jb
push
fdivp
push
or
imulb
add
and
cld
mov
aam
pop
jecxz
xchg
call
addr16
jo
in
jns
mov
imul
test
enter
pushf
in
cmpsl
popa
iret
imul
mov
into
or
imul
mov
popf
inc
insb
and
cld
push
inc
mov
lea
hlt
mov
add
xor
sahf
mov
imulb
xor
ja
xor
and
mov
xor
lock
cmp
jo
mov
push
int
mov
ja
popa
push
mov
push
cld
inc
cmp
in
es
shrb
int3
imul
pop
lock
data16
enter
sub
jle
jp
call
in
cld
pop
push
mov
lahf
add
pop
std
cmpsb
pusha
push
imul
in
ljmp
mov
adc
imul
out
cmpsl
push
xor
shrl
iret
scas
dec
xchg
loope
jl
imul
mov
jle
cmpsl
aam
je
arpl
and
inc
lods
jo
subl
adcl
pushl
xchg
sub
cmc
jns
repnz
cmp
cmpsb
sub
arpl
popa
xchg
dec
pop
mov
repnz
ljmp
sub
jle
sub
arpl
fs
cmp
roll
inc
mov
test
dec
into
mov
xchg
dec
jbe
xor
xchg
cwtl
push
add
imul
push
pop
imul
mov
jo
xor
push
imul
leave
lea
rorb
or
out
push
inc
push
cmpsb
push
out
outsb
call
mov
mov
imul
pop
inc
push
icebp
lret
loop
outsb
jle
ljmp
jbe
ljmp
pop
jo
es
imul
dec
loop
xor
adc
imul
cmp
addr16
es
scas
hlt
or
jp
pop
lret
iret
push
int
lds
xor
cmp
out
mov
adc
call
and
cmp
imul
pop
sbb
stos
out
jmp
and
add
xor
dec
je
mov
push
fs
or
pushf
push
das
bound
jecxz
adcl
push
inc
jbe
jo
xor
mov
xchg
mov
gs
test
inc
xor
pop
xor
out
inc
jge
sti
clc
pop
popa
xor
add
pop
jmp
mov
inc
data16
sub
insl
ljmp
out
in
imull
dec
jecxz
pop
lods
dec
jnp
cmp
loopne
push
hlt
mov
mov
or
cmp
popa
mov
or
repnz
push
jp
insl
mov
shl
push
test
pop
insl
pushl
das
dec
lods
and
in
jns
push
repz
push
insb
test
test
mov
out
dec
sub
mov
icebp
popa
cmpsb
push
sub
fldenv
cmpsl
and
add
jno
push
das
jl
xchg
xchg
loopne
xchg
stos
sbb
out
gs
lret
je
out
fnstcw
jl
mov
push
jno
das
repz
lods
xchg
out
pushf
push
or
add
mov
dec
inc
shlb
test
pop
xor
jno
and
inc
mov
push
mov
pop
jo
xor
outsb
loope
rolb
lret
data16
pop
sar
pusha
xchg
lock
movsl
push
dec
dec
cld
mov
jo
lods
add
cltd
clc
cmp
icebp
insl
push
popf
add
pop
stc
mov
in
mov
in
imulb
mov
call
sub
leave
out
xor
push
push
gs
xchg
mov
cli
jno
ss
sub
sub
adc
sub
inc
mov
and
jo
xor
ljmp
jp
pop
lock
or
mov
ja
or
pop
xchg
pop
loop
cmp
xchg
add
cmc
adc
push
ret
sub
sti
clc
fnsave
incb
jg
rcrb
lock
imul
cmpl
out
cltd
pop
in
pop
das
mov
lods
out
lret
pop
repnz
test
adc
dec
cmp
lock
jp
sbb
out
mov
leave
cli
pop
stos
cli
inc
add
iret
inc
mov
icebp
push
mov
pop
add
xchg
loopne
cltd
xor
add
rcll
ljmp
xchg
sub
lods
xor
add
or
adc
jnp
into
stc
std
cmp
mov
movsb
mov
call
stc
outsl
outsl
sti
scas
sub
dec
gs
cmp
nop
add
loope
push
pop
gs
pop
jne
jne
push
pusha
jbe
xor
shlb
dec
mov
data16
stc
jl
adcl
inc
stos
cmpsb
movsl
jno
sub
out
push
sahf
mov
jno
jns
cmp
jp
repnz
cmpsl
lea
ljmp
xor
or
popa
and
call
lret
push
adc
mov
stos
sti
js
clc
aad
ja
iret
ljmp
mov
jnp
xor
xor
addr16
movlps
rclb
shl
pop
and
bound
mov
adc
xor
jbe
fldcw
popa
pop
sahf
inc
rorl
fnstcw
std
push
rolb
pop
mov
push
icebp
cli
lods
jecxz
mov
imul
inc
movsl
rcrl
pop
and
add
fidivs
adc
xor
icebp
addr16
cli
dec
je
js
fs
clc
dec
test
popa
inc
pusha
mov
dec
mov
adc
mov
ss
in
bound
out
dec
outsl
inc
stos
cli
sbb
jo
cs
and
sar
insl
outsl
and
jmp
dec
outsb
scas
mov
jnp
xchg
mov
cmp
sub
jl
inc
mov
loopne
pop
ljmp
or
or
inc
imul
test
xor
jns
cwtl
and
int3
mov
out
lock
xchg
and
dec
and
popa
call
xor
inc
pusha
cmc
dec
setne
adc
mov
push
xor
test
icebp
outsl
push
aaa
clc
mov
ljmp
aas
xchg
jne
cmc
into
sub
xor
pop
jmp
cmp
imul
mov
pop
jb
aas
jae
enter
push
push
sub
rep
test
mov
pop
mull
jle
and
out
fwait
xor
into
ret
aas
hlt
repz
pop
out
jg
push
insb
sub
in
jo
xorl
outsb
sbb
inc
and
cld
or
addr16
outsb
sub
add
adc
loopne
mov
lods
call
cli
mov
imul
movsb
dec
clc
jno
push
mov
and
jecxz
int
lcall
jp
pop
dec
and
js
ss
inc
lock
mov
adc
xchg
loop
xor
adc
enter
cs
fisttps
add
push
push
push
adc
test
ret
mov
rcl
push
je
out
imul
sarl
adc
jmp
test
ficoms
jo
xor
outsl
jo
mov
dec
add
jmp
shlb
ss
cmp
loop
int3
pop
lock
jae
and
cmp
push
retw
cwtl
jge
fimuls
jbe
repnz
cmp
rorb
hlt
push
push
fsubs
in
jo
xor
lret
imull
call
cmp
icebp
xchg
inc
mov
mov
xchg
adc
inc
scas
rcl
add
imulb
mov
push
pop
lret
mov
add
mov
out
add
inc
pop
shr
in
das
mov
jl
pop
jb
fs
mov
insb
lock
cmp
mov
outsl
mov
push
popa
cmp
xchg
stc
repz
imul
inc
in
pusha
hlt
jns
bound
lds
imul
fsub
jno
mov
or
scas
push
out
js
push
scas
jae
adc
cli
ss
dec
jg
imul
js
adc
mov
xchg
or
shll
int
scas
adc
pop
cwtl
sub
sub
jno
mov
test
data16
jge
imul
in
and
imull
shl
in
sub
inc
inc
jae
ja
inc
mov
insl
test
imul
std
js
jmp
mov
movsb
lock
icebp
xor
jnp
inc
xchg
or
sbb
pop
std
out
imul
cli
loop
cld
adc
mov
push
xchg
jmp
das
ja
sbb
imul
das
pop
jbe
jp
shr
xor
jle
pop
inc
or
jmp
repnz
xchg
jl
sub
xchg
test
cmp
fisttpll
sbb
dec
out
inc
lock
inc
jbe
icebp
lock
and
outsl
stos
mov
adc
rorl
fs
outsb
test
fnstcw
jg
imul
outsb
xor
mov
mov
sub
scas
cmp
sbb
mov
mov
loopne
inc
iret
data16
dec
insb
mov
sub
fsub
jae
push
nop
test
jp
or
pop
add
add
out
cld
stos
mov
loop
mov
scas
or
outsb
popa
cmp
xchg
imul
enter
sbb
data16
jl
aas
adc
jmp
popa
pop
outsl
lret
sub
cmp
pop
mov
jmp
ret
xor
loop
imul
scas
fucom
out
gs
pop
adc
sbb
test
push
stos
ljmp
gs
add
mov
mov
aam
add
popa
imul
fidivrs
fs
fldl
subb
pop
jl
movsl
xor
fcomip
jp
lock
jl
cmp
xchg
dec
fidivs
loope
mov
mov
cmp
arpl
mov
jae
jno
xchg
das
dec
daa
sti
and
fsubrp
push
ss
out
cmc
leave
push
lret
jl
jecxz
pop
mov
shlb
sub
pop
testl
xor
inc
movl
je
jo
clc
xchg
imul
cmp
mov
xor
xchg
adc
outsb
xor
push
outsl
sub
cld
jo
sti
jnp
dec
movsl
mov
fisubl
mov
movsb
jae
insl
pop
fldcw
mov
cld
mov
rclb
fistps
mov
pop
jecxz
pusha
mov
xchg
or
imul
mov
scas
scas
mov
push
mov
add
loopne
test
outsl
mov
mov
and
cmp
loopne
fnstsw
xchg
fdivp
loopne
addr16
or
add
sub
out
imul
jl
inc
and
sbb
adc
imul
add
jecxz
xlat
imul
out
jp
sarl
mov
pop
pop
loopne
jnp
push
sub
ja
into
mov
in
lcall
or
sbb
mov
inc
jle
inc
and
push
pop
movsb
sub
cmp
push
push
cmp
jns
pop
les
pop
outsl
mov
push
negb
jmp
ret
sub
enter
mov
push
jg
lock
stc
addr16
dec
icebp
loopne
sbb
mov
cltd
stos
aam
je
in
loop
popa
mov
imul
sub
cmpsl
xor
sahf
adc
jmp
scas
and
out
push
mov
jb
outsl
sub
xchg
push
xor
scas
inc
mov
fidivrs
and
shrl
adc
jle
call
sbb
adc
iret
and
in
cmpsb
popa
sbb
fdivrl
out
push
mov
xchg
outsl
cld
xchg
lea
mov
mov
jl
xchg
test
sahf
imul
add
or
ljmp
mov
push
shll
out
in
movsl
outsb
push
sub
enter
jp
mov
movsb
mov
je
int3
nop
sti
das
xor
add
xor
fs
and
mov
cwtl
dec
icebp
sbb
cmc
popa
test
loop
mov
mov
cmpsl
cs
outsl
pusha
shrb
mov
push
add
mov
rcrb
loop
and
cmpsl
sub
jns
out
fdivr
lcall
inc
jbe
movsb
adc
mov
lods
cmc
cmp
stc
pop
loope
or
insl
mov
push
xor
push
sub
lcall
mov
bound
adc
in
jae
bound
fwait
mov
cltd
inc
imul
xor
clc
and
mov
bnd
push
cmpsl
xchg
ds
cs
push
repnz
aad
stos
stos
push
mov
or
lret
sbb
fwait
movsb
je
fdivl
pop
ret
mov
and
shl
addr16
insl
lret
cmp
arpl
ljmp
out
fsub
push
cmpsl
pop
repz
subb
roll
cld
cwtl
sub
in
cmp
and
outsb
push
jnp
ja
jo
push
cwtl
sub
lret
jecxz
bnd
ficoms
nop
loop
rcrl
loope
mov
dec
sub
gs
sub
inc
imulb
sub
mov
xor
loopne
xchg
sbb
loop,pt
bound
mov
mov
cmpsb
rorl
or
jmp
imul
push
push
lods
lods
andl
rcrl
into
and
inc
loopne
out
push
je
das
mov
push
ja
jg
incl
shrb
scas
jmp
lds
fists
jno
lea
shl
xchg
xor
imul
mov
jecxz
js
mov
xchg
inc
imul
jo
lock
je
push
sub
xchg
xor
cwtl
cmp
jns
xor
mov
in
mov
std
adcl
dec
outsb
cld
xchg
jo
pop
sub
mov
mov
mov
dec
js
xor
das
mov
insl
cmp
shr
and
sar
xchg
insb
lock
das
xor
sbb
adc
mov
add
daa
pop
in
fs
out
imul
sub
rorl
cmpl
inc
cmpb
loopne
out
pop
fnstcw
jl
jae
push
push
and
fadd
in
xor
or
xor
icebp
das
div
xor
or
insl
es
mov
arpl
jns
das
mov
fstpt
add
adc
sbb
adc
add
js
imul
mov
xor
mov
mov
ja
icebp
outsl
popa
out
push
fbld
out
bound
cltd
cmp
imul
imul
icebp
insl
mov
dec
lods
enter
mov
bound
jb,pn
out
popa
data16
cmp
cmpsl
sbb
sti
adc
xor
popa
or
add
into
mov
cmp
push
mov
and
adc
daa
daa
sbb
clc
jmp
lahf
jl
sub
mov
adc
add
jae
mov
ljmp
jg
jmp
and
sbb
insl
xchg
xor
or
movsl
adc
dec
imul
adc
clc
mov
mov
push
dec
scas
shrl
or
roll
mov
sar
fimuls
outsl
movsb
inc
jb
enter
push
sub
jl
xor
lock
xchg
dec
enter
jl
shlb
jae
and
push
mov
movsl
and
imul
lds
test
jo
jp
pusha
dec
mov
mov
clc
icebp
jno
popa
ljmp
push
lods
stc
mov
push
lods
loope
adc
push
jp
fsts
cmp
mov
out
repnz
pop
notb
cli
jg
out
loop
jbe
sub
fdivrl
sti
es
xchg
cli
insl
pop
insl
xor
xor
jg
jmp
jo
lock
shl
xor
call
int3
xor
add
inc
jg
popa
je
into
imul
add
out
adc
scas
icebp
jns
pop
lret
mov
dec
xchg
in
xor
out
insb
punpckhdq
mov
in
icebp
dec
or
ret
mov
orl
shlb
jne
ja
and
cmc
jmp
div
push
out
mov
jnp
mov
scas
out
dec
adc
mov
xor
bnd
xor
push
sti
jae
sbb
jp
out
out
outsb
push
lea
shrl
cmpsb
or
sbb
hlt
outsl
insb
jnp
or
stc
shrl
sub
sbb
outsl
movsl
sbb
mov
or
int3
cmp
hlt
insl
push
movsl
mov
pop
mov
push
out
enter
rorl
xor
jnp
cwtl
xor
jmp
loope
dec
jg
jno
jle
cmp
mov
aam
cld
pop
in
sub
ficoml
jae
jge
movsb
push
stos
aas
jl
mulb
adc
rolb
ret
punpcklbw
cli
sbb
icebp
testb
jno
mov
jg
mov
leave
clc
in
test
addr16
lahf
pushf
xor
xlat
mov
outsb
popa
out
mov
mov
jno
xchg
rorl
jge
aam
outsl
inc
sbb
inc
into
fsubs
jb
inc
fildll
loop
mov
scas
ljmp
rcrb
out
outsb
outsl
out
lock
fcom
jl
jbe
jb
sbb
lds
jno
or
lcall
mov
or
outsb
push
push
lahf
sub
mov
xor
shlb
mov
mov
cmc
dec
mov
movsl
fnclex
scas
out
jg
je
jns
lret
xchg
mov
test
jecxz
fsts
adc
jle
sub
clc
imulb
lret
lret
dec
movsb
gs
or
mov
std
push
push
sbb
out
cs
test
mov
or
jp
mov
cmc
inc
imul
jbe
call
in
jbe
push
outsl
je
gs
faddp
mov
loopne
test
mov
cmp
pusha
test
xchg
aad
aas
push
adc
scas
sbb
jo
jnp
sub
xchg
and
test
imul
sub
mov
jecxz
lret
jp
jl
push
in
xor
xor
jb
jg
mov
imul
fldenv
pop
jbe
repz
shlb
les
or
add
ret
popa
inc
shl
push
out
aaa
int
icebp
pop
cmc
sub
mov
xor
rcll
xchg
and
sbb
adc
jo
lock
mov
cmpsb
jp
repz
in
into
jmp
or
lock
dec
loopne
rep
and
mov
movsb
fidivrl
cmpsb
lods
test
lods
ja
shrb
xor
test
push
mov
movsl
pop
sub
sub
das
xlat
or
rolb
adc
jmp
stc
jb
psadbw
xchg
pusha
js
or
sub
fists
pop
cmp
les
adc
push
mov
push
jle
lds
addl
jae
std
cmpsb
or
jg
bound
add
dec
push
jno
scas
xor
sub
cmpsb
cs
nop
lcall
call
jb
xchg
cli
es
mov
dec
push
jg
mov
cmpsl
xor
popa
inc
pop
imul
jno
in
lea
adc
rorl
push
loope
jecxz
cmc
inc
inc
addb
mov
push
xor
mov
in
jnp
lcall
outsl
cmp
mulb
cmp
in
inc
clc
push
shrb
push
sub
push
clc
loopne
cmp
loope
addr16
pop
movsb
mov
jmp
xchg
push
into
insl
lcall
popa
jl
xchg
imul
jle
push
repnz
or
stos
sub
jno
sti
inc
rcrl
mov
test
ja
lret
scas
adc
jmp
das
dec
loopne
nop
test
push
jg
jb
push
loopne
call
jg
xchg
popa
out
scas
arpl
ljmp
test
out
and
xor
mov
inc
jae
xor
cmp
mov
out
dec
mov
xor
das
jge
gs
push
pop
outsl
mov
xchg
jns
adc
jns
in
pushl
adc
loopne
pop
push
roll
and
les
jo
stc
push
or
dec
sbb
lret
xchg
std
popa
and
out
push
imul
xor
loope
ds
jle
ja
adc
js
out
gs
into
test
sbb
cli
xor
test
ss
popa
push
xor
push
push
outsb
repnz
adc
jmp
in
insl
popa
aas
mov
xchg
jg
add
clc
jo
shrb
adc
jnp
jge
or
daa
data16
test
mov
js
xor
push
mov
loop
mov
cwtl
test
out
adcl
mov
push
loop
push
sahf
push
jae
and
outsb
mov
dec
sub
lock
mov
sub
cld
cmp
in
repz
sbb
loopne
jne
stc
outsl
mov
insb
push
int3
xchg
cli
mov
repz
imul
dec
and
jno
sub
out
jle
and
push
fs
push
cmp
cmp
sbb
js
mov
movsb
mov
psrad
sti
jge
test
shrl
xchg
push
add
sbb
pusha
sbb
dec
outsb
jmp
ja
popa
sbb
jecxz
jne
ret
pop
divb
out
mov
sbb
cmp
outsl
out
lods
fs
xchg
in
push
imul
sbb
pop
mov
mov
test
xor
add
fdivrl
jge
inc
call
mov
imul
push
sub
pop
in
adc
mov
cmp
inc
arpl
xchg
cld
std
nop
jne
push
or
mov
das
lds
or
jne
shlb
push
mov
dec
cmc
fucomi
push
addr16
fldcw
pop
addr16
mov
in
mov
js
jmp
mov
sbb
ret
mov
mov
out
mov
push
mov
out
mov
out
loopne
notl
sub
pop
xor
push
mov
pop
js
repz
int
hlt
sti
js
jecxz
imul
mov
lods
cmpl
add
jecxz
jp
jp
ret
cli
test
dec
jmp
and
or
ja
ja
out
jmp
mov
scas
mov
mov
adc
sbb
jae
jnp
arpl
scas
add
pop
daa
mov
jecxz
bound
xor
lds
lock
pushf
adc
cmpsl
mov
inc
cli
push
leave
xor
cmp
out
pop
outsb
ljmp
sbb
jns
loope
lret
and
fwait
in
xchg
inc
ss
push
jno
push
cmp
es
cmp
into
es
out
jno
addr16
jecxz
stos
das
cltd
enter
sub
jns
sbb
or
jg
or
int3
mov
adcl
add
inc
jns
out
sbb
dec
sti
push
mov
jbe
cmp
adc
mov
mov
addr16
cld
in
mov
insb
dec
popa
cmpsl
arpl
fs
imul
jg
mov
in
mov
gs
imul
call
repz
gs
fnsave
jns
push
mov
jno
xor
pmulhw
icebp
inc
push
jbe
loopne
or
or
loope
out
out
xor
dec
jmp
cmp
movsl
adc
push
push
hlt
popa
out
rclb
loope
sub
jo
lock
cmp
or
sbb
adc
aas
mov
popf
push
inc
mov
repz
xchg
lret
jae
out
cmpsl
jne
pop
lahf
mov
inc
adc
insb
pop
testb
mov
out
mov
push
in
jp
outsl
sahf
jb
std
jge
xor
loopne
sub
xchg
sub
jmp
or
ja
sti
fwait
in
daa
test
push
sti
out
xchg
repz
push
dec
push
icebp
popa
pop
xor
out
cld
add
test
popa
mov
add
mov
outsb
outsl
lahf
pusha
adc
lret
rcl
loopne
mov
push
mov
xor
dec
jae
addr16
adc
jb
inc
sti
popa
lds
mov
jle
push
stos
add
jle
sbb
xlat
jecxz
mov
lock
sbb
out
pusha
xlat
js
aad
and
sbb
mov
and
popa
push
je
loope
psllw
out
xchg
insl
cwtl
adc
cmp
popa
jle
test
xor
mov
jne
into
insb
jp
jmp
push
adc
sub
push
loop
sbb
pop
bound
sbbl
les
pop
jae
arpl
hlt
xor
push
add
mov
pop
imul
mov
jae
ret
lretw
or
jae
inc
mov
pop
sub
push
test
mov
jo
xor
xor
cmp
out
mov
xor
push
cmp
in
push
and
gs
push
in
push
call
outsb
push
shl
xor
lock
cmpsb
imul
mov
fdivrl
imul
jl
roll
xor
push
push
mov
xchg
scas
xor
cmpb
in
cwtl
jns
aaa
push
seta
cmp
mov
jmp
mov
adc
dec
sbb
cwtd
jns
cmpsl
insl
out
es
hlt
mov
mov
mov
ljmp
jb
daa
mov
mov
test
arpl
out
push
mov
and
lahf
inc
pop
daa
movsl
rcll
sbb
in
popa
call
outsl
loop
xchg
popa
sub
outsb
gs
aaa
fnstcw
imul
mov
adc
clc
jne
add
bound
stos
jg
sbb
jno
inc
and
scas
jnp
je
xor
xor
dec
inc
imul
jns
nop
sub
out
xor
xor
jecxz
ret
repnz
jbe
data16
xchg
jae
and
ljmp
dec
imul
push
jge
jl
sub
push
xchg
aad
jp
addr16
dec
ss
das
push
fstpt
jecxz
sub
xor
pop
mov
fisubrl
lock
and
jcxz
test
bound
out
aaa
inc
xor
shlb
leave
loope
xchg
lret
mov
xchg
das
jnp
imul
jno
call
and
xchg
push
xlat
sarb
push
sub
lret
arpl
daa
mov
xchg
addr16
inc
fldcw
mov
fs
movsb
lock
inc
shrb
imul
jp
xor
push
push
cmpsl
out
jnp
push
or
icebp
adc
jge
movsb
jge
dec
push
push
mov
in
fs
cld
notb
loopne
idiv
cmp
mov
and
sahf
dec
dec
add
jecxz
adc
pop
mov
call
lock
cmpsb
clc
imul
mov
push
pop
pop
or
shlb
mov
loopne
imul
arpl
clflush
test
ljmp
jmp
mov
jge
push
xchg
sub
nop
xlat
push
or
bound
pushf
jns
jns
test
inc
pop
paddsb
push
sbb
fs
imul
cwtl
mov
push
imul
jno
jle
movsl
mov
push
test
jmp
inc
cld
pop
shll
lds
and
dec
inc
fs
fsubrs
add
popa
cmp
sub
push
push
daa
std
pop
dec
ljmp
sbb
push
push
add
jnp
jo
push
pop
jp
xorb
or
popf
jne
pop
jo
xor
mov
cmp
xchg
xor
mov
jecxz
scas
jmp
in
scas
fcoml
decl
cli
mov
cli
cmpsb
test
scas
ret
imul
lds
push
push
xchg
std
jne
popa
xor
std
addr16
out
mov
inc
popf
jle
dec
insl
sets
repz
and
xor
outsb
jae
sbb
cwtl
stos
jmp
aam
repz
xor
out
jno
mov
jne
fsubrl
jae
sub
cmp
lods
inc
frstor
ja
repz
out
psadbw
xchg
loope
jo
pop
cld
jno
sbb
inc
push
jno
or
jno
push
std
out
cmp
out
jmp
xor
cmpsl
and
jle
sub
jno
daa
inc
je
stc
dec
sub
push
and
push
jmp
mov
sub
es
stos
addb
int
pop
xor
out
sub
push
mov
popa
mov
into
cld
rcll
hlt
dec
sub
adc
pop
stos
jle
or
loopne
shl
mov
test
les
push
popa
sub
loopne
dec
outsl
mov
sbb
sub
jo
repnz
div
adc
ret
or
jnp
xor
loopne
roll
sbb
jb
hlt
adc
jno
push
mov
push
adc
or
sub
jae
push
sahf
punpckldq
ss
jae
push
xor
or
push
jge
or
sub
imul
dec
iret
vrcpps
adc
cs
jae
add
imul
hlt
inc
incb
jmp
xor
adc
repz
mov
addl
jmp
pop
jae
sub
sbb
pop
arpl
imul
xor
mov
xchg
shrb
and
xchg
cli
jmp
xor
sti
jo
enter
fdivrp
les
into
mov
je
xchg
adc
out
test
and
daa
mov
push
sub
popf
test
insb
std
jns
icebp
sbb
dec
mov
fwait
sbb
int3
js
movsb
hlt
jg
adc
xchg
sbb
xchg
in
jl
out
std
jns
insl
fstl
insb
push
mov
jno
cmp
stc
adc
insl
pop
stos
stos
add
out
fiaddl
cmpsl
mov
xor
mov
and
jg
repnz
or
dec
pusha
daa
or
popa
cmpsb
add
push
aad
loop
cli
popa
push
cmp
inc
mov
hlt
insb
scas
stos
dec
adc
imul
xchg
jge
xchg
push
mov
xor
push
es
gs
sbb
lret
or
fwait
cmp
adc
mov
jns
enter
imul
adc
cmc
and
out
bound
repnz
loop
test
int
jecxz
cltd
mov
dec
out
lds
jp
popa
mov
xchg
pop
mov
push
fisubl
pusha
loope
xchg
jo
xor
sbb
cmpb
aad
dec
cmp
mov
flds
repz
xor
adc
xor
outsl
jnp
lods
jo
jg
push
imul
decb
popa
and
test
in
jbe
xor
push
xchg
inc
mov
and
mov
inc
rorb
testb
aas
cld
adc
clc
outsl
addr16
xor
cmp
dec
bound
lcall
cmp
push
pop
mov
sub
iret
jge
call
cmp
fdivrs
mov
in
push
clc
pop
cmc
push
loope
aaa
mov
out
xchg
xlat
cmp
mov
jmp
inc
dec
hlt
cmpsb
arpl
mov
mov
arpl
sbb
push
scas
sub
imul
mov
shrb
jno
les
adc
mov
and
addr16
cmp
jbe
pop
popa
in
fwait
jp
lret
fs
loop
adc
jmp
lret
adc
and
scas
jbe
push
ljmp
clc
out
add
je
mov
ljmp
jmp
sub
mov
mov
adc
std
popa
mov
pop
jl
fstpt
add
sbb
in
dec
mov
jo
xor
out
mov
xchg
or
push
cmp
lock
repz
daa
mov
bound
insb
in
jno
into
movsl
inc
jnp
out
imul
out
dec
jbe
jbe
bound
cld
in
jle
outsl
jnp
nop
and
cmp
sbb
jmp
arpl
xchg
jno
gs
stos
sarb
data16
cmp
push
jo
lods
out
pop
dec
call
push
mov
or
scas
call
and
mov
push
imul
xchg
mov
sarl
imul
mov
and
adc
and
jbe
mov
adc
jns
jg
sbb
cltd
jge
mov
in
in
add
sbb
insb
loopne
notl
cmp
sub
jg
sub
mov
push
and
in
popa
inc
clc
icebp
test
push
icebp
sub
sarl
insb
mov
out
clc
lods
jge
jns
js
hlt
xor
repnz
xchg
scas
loopne
dec
mov
popa
inc
cwtl
cmp
inc
in
xchg
insb
lock
bnd
or
xor
dec
imul
jb
scas
arpl
jae
jnp
mov
cmc
sbbl
or
sub
mov
inc
and
jge
cmc
in
add
xchg
icebp
mov
scas
loopne
lock
dec
inc
xor
iret
ret
testb
jg
dec
shr
addl
fildll
xchg
jecxz
mov
jne
je
aad
sub
sub
pop
jle
fdivl
shlb
sahf
stos
adc
imul
jb
inc
push
sbb
int
cmp
movsl
lcall
je
cmp
sbb
outsl
sub
jno
dec
daa
sub
dec
sub
test
dec
inc
jge
aam
jo
lock
and
aam
inc
push
mov
cmc
sub
inc
push
divl
hlt
bound
not
xor
into
or
mov
jmp
push
cwtl
lods
dec
xor
gs
add
fs
ds
mov
sbb
dec
divb
xorb
sub
pop
jno
cmp
xchg
and
xor
test
stos
add
jb
adc
jp
mov
jno
pop
mov
jns
push
jb
popa
sbb
lods
push
cli
pop
sbb
inc
cmc
aad
cld
pop
push
ret
and
loopne
test
cltd
adc
gs
sub
or
cmp
jno
pop
jl
pop
out
out
xor
mov
std
enter
jo
and
xor
cmp
ja
xor
lahf
cmp
add
lea
jg
adc
shlb
bound
mov
ficoml
xor
aas
xor
js
and
shrl
cli
mov
lods
imul
test
das
lea
negb
dec
outsl
movsl
cmp
addb
or
outsl
fs
jg
popa
into
pop
loope
in
xorl
repz
xchg
push
push
repz
cmp
push
lods
mov
jnp
push
mov
push
jo
xor
and
addr16
lds
in
stc
scas
js
inc
xchg
and
das
movsb
mov
aaa
lods
out
lock
add
push
fstl
xor
mov
out
dec
repz
rcrl
popa
jge
dec
xorl
sub
xchg
cmp
repz
pusha
push
inc
cld
dec
jle
mov
je
sub
and
ret
arpl
clc
clc
loop
ljmp
nop
stc
test
in
and
mov
sub
jmp
jno
sub
sub
add
je
sub
cmp
mov
jge
daa
cmp
mov
xchg
xchg
stc
cmpsb
mov
push
aas
push
and
mov
popa
sub
jge
lret
outsb
popa
call
mov
jae
lds
or
add
das
shl
cltd
repz
jae
fcoml
aam
and
imul
push
je
cmp
xor
test
jecxz
popa
jmp
mov
test
mov
stc
sbb
jecxz
jno
push
sub
adc
jno
test
das
mov
mov
outsb
data16
mov
mov
xchg
insb
in
mov
adc
dec
inc
divb
popa
mov
icebp
push
push
and
jle
dec
mov
incb
rol
push
out
sti
shlb
mov
cs
xor
gs
pop
or
outsb
adc
xchg
aaa
fs
das
adc
jecxz
xchg
imul
mov
out
js
outsl
in
mov
lock
aam
xor
xchg
mov
outsl
clc
xor
jge
stos
outsl
imul
fyl2xp1
out
loope
les
gs
adc
dec
divl
cmpsb
popf
inc
rorl
popa
fnstenv
cmp
negb
data16
mov
dec
jl
adc
in
mov
xor
jnp
mov
stos
test
repnz
pmulhw
add
outsl
cli
adc
aam
loope
out
popa
in
pop
rcrb
out
xor
repz
jle
mov
std
ss
cli
cmp
xor
clc
outsl
inc
mov
jle
in
pusha
jns
or
pop
jmp
pop
das
mov
jo
xor
mov
outsb
ret
inc
in
ljmp
punpckhwd
inc
fs
addr16
inc
insb
lods
lock
pushf
repnz
jb
out
fdivs
icebp
cld
jns
loope
das
mov
out
mov
sub
icebp
outsl
cmp
add
mov
out
cmp
sbb
xor
jl
adcl
push
cli
andl
sbb
call
push
pushl
out
xor
iret
and
outsb
sub
sarb
jl
out
movsl
outsb
jno
sub
rcll
lret
cmp
dec
out
ljmp
sub
imul
addr16
shrb
addr16
outsb
imul
and
jp
cmpsl
and
mov
push
or
xchg
bound
divb
insb
scas
push
popa
mov
call
rclb
dec
scas
mov
gs
fnstcw
scas
jecxz
lcall
xor
mov
mov
jo
push
push
or
repz
lods
rcll
pop
mov
jo
pop
repnz
push
daa
lret
add
mov
dec
xor
in
shl
jle
inc
mov
loope
adc
addr16
loop
loop
call
movsl
adc
pop
out
lock
xchg
lret
xor
mov
testl
and
sbb
push
ss
clc
ds
sub
sbb
popa
sbb
and
stos
jl
xor
idivb
xor
xor
imull
bound
scas
popa
dec
stos
call
pop
ds
adc
loop
push
scas
std
outsl
out
and
push
cmc
popa
mov
int3
cmp
mov
cltd
hlt
out
jno
jo
adc
mov
fcoms
loopne
ljmp
int
xchg
scas
in
movsl
imull
xor
stc
jle
pop
mov
mov
mov
shr
cmc
loope
out
out
ret
xor
pop
and
jb
shlb
inc
push
dec
cmp
push
int
push
and
add
loope
xor
leave
jne
cmp
daa
je
push
imul
in
imulb
jmp
test
jno
and
std
das
cmpsb
mov
loopne
pop
mov
jle
arpl
shlb
stos
and
push
adc
xlat
and
into
push
cli
shlb
mov
jbe
mov
rclb
and
sub
inc
jmp
jge
push
mov
vmread
js
aad
mov
jmp
loope
cmp
loopne
dec
sbb
loopne
cmpsb
sbb
cmp
jb
mov
cmpw
push
cmpsl
dec
mov
mov
movsl
icebp
cmp
xor
in
data16
repnz
cs
fwait
out
popa
arpl
pop
lods
jg
sub
jo
push
sbb
mov
mov
test
fsts
imul
imul
dec
mov
and
jns
jle
sub
in
out
ljmp
fdivr
loop
adc
mov
js
imul
es
imul
jmp
dec
pop
aad
jae
sti
std
lds
std
scas
cmp
and
je
in
and
xchg
stos
jbe
or
rcr
add
cmp
icebp
jno
xor
jmp
jns
sub
jno
mov
cs
inc
push
outsb
push
dec
pop
xchg
jb
call
push
les
pop
scas
ljmp
xchg
int
mov
shrl
xor
loopne
mov
call
test
lcall
sbb
mov
inc
outsb
add
adc
xor
out
push
adc
xchg
mov
sti
loop
rdmsr
adc
jl
lret
mov
in
mov
xchg
loop
adc
jp
into
fsub
add
jns
jl
inc
sub
rolb
lods
mov
adc
jno
mov
jb
jno
jmp
ficoms
mov
cmp
jecxz
outsb
aam
xchg
das
out
gs
or
lock
cmp
jle
xor
lret
das
add
jns
imul
xchg
xorl
imul
sub
scas
jns
insb
sub
push
mov
inc
outsb
push
pusha
rclb
fildll
or
xchg
jg
jecxz
jl
pushf
in
sti
pop
jo
pop
shrl
cwtl
daa
mov
mov
add
jns
loopne
xchg
cmp
stos
shlb
stos
push
roll
mov
test
lahf
mov
ds
cmp
outsb
imul
push
int3
loopne
sub
add
mov
scas
loope
iret
mov
jge
out
in
scas
xchg
insl
gs
pop
xor
rdmsr
cmp
repz
addr16
lcall
insl
jecxz
add
mov
insb
div
push
mov
xor
clc
mov
cmp
pusha
sub
sti
push
movsl
aas
mov
push
shlb
aam
call
mov
push
or
repz
and
jns
inc
into
stc
repz
cli
ds
xor
out
movsl
icebp
ret
mov
gs
mov
jp
dec
jmp
je
jae
xor
or
scas
andl
jmp
cmpsb
xchg
div
out
cmp
pop
mov
call
or
int
mov
fildll
ja
adc
dec
test
flds
jno
mov
sahf
test
mov
rcrb
hlt
sub
std
out
dec
scas
pop
or
cltd
add
divl
sub
adc
inc
or
add
movsb
and
pop
imul
cli
cmc
pop
icebp
faddp
jnp,pt
jbe
mov
test
inc
xorb
ficompl
arpl
outsb
cmp
loopne
pop
push
lds
shrl
iret
into
cmp
and
cmpsb
mov
and
push
repnz
shlb
mov
fs
loopne
lret
addr16
fsubrs
add
popa
xchg
jae
js
jg
test
xchg
lret
stos
gs
ret
das
mov
lods
cmp
xchg
adc
add
jl
push
push
mov
hlt
popa
mov
mov
push
sbb
mov
icebp
pop
mov
data16
sarb
lcall
es
add
or
adc
imul
outsb
icebp
mov
popf
sbb
test
daa
clc
xor
dec
loope
in
icebp
outsl
mov
cwtl
hlt
dec
cmpsl
es
add
sbb
adc
icebp
pop
push
pop
mov
xchg
hlt
in
push
push
pushf
pop
push
lock
push
cmp
inc
cmpsl
sub
xchg
jl
les
call
push
push
push
mov
outsb
mov
jecxz
xor
xchg
jbe
and
aam
xor
pop
icebp
lock
loope
cmpsl
stos
sbb
pusha
test
sub
lods
push
jno
out
mov
jno
jo
in
js
stos
sub
les
jns
cmp
jl
mov
andb
mov
xor
jp
lret
xor
imul
push
rorl
insl
mov
sbb
popa
add
pop
jo
inc
je
jae
mov
or
jns
cmp
mov
jnp
sub
push
mov
jb
jns
mov
pushf
xor
push
gs
adc
pop
mov
mov
push
ret
mov
mov
out
xor
mov
pop
mull
loop
push
clc
lea
repnz
jnp
in
mov
in
call
imul
cmp
std
cwtl
sbb
imul
jecxz
mov
mov
or
and
jnp
push
imul
mov
mov
inc
jnp
sti
sub
lret
int
das
mov
call
in
xor
shll
adc
cli
push
outsl
cmpl
and
xor
add
lea
jmp
adc
icebp
mov
cmp
push
pop
das
loopne
in
mov
sbb
lcall
bound
dec
mov
lods
rcll
sub
mov
jne
jb
push
out
rcr
pusha
aas
mov
movl
add
shl
mov
outsl
sub
mov
and
loope
inc
cmpb
fdivs
inc
imul
mov
mov
arpl
dec
and
cmpsb
pusha
imul
cli
icebp
jno
pop
stc
test
es
bound
and
dec
xchg
pop
bound
mov
stos
sub
jns
push
lods
cmpsb
ror
into
inc
gs
movsl
lret
jbe
insb
sbb
sub
sub
repnz
cmp
in
flds
les
push
mov
test
gs
and
popa
addl
xor
repnz
bswap
std
jg
xor
mov
data16
mov
je
sub
cmc
cmc
iret
stc
mov
and
xor
mov
add
jne
cwtl
test
xor
lret
inc
push
push
mov
out
inc
xor
out
inc
fs
push
push
lock
sbb
jl
pop
aas
mov
ljmp
out
jae
dec
cmc
lods
xchg
scas
call
lahf
or
inc
shll
gs
cld
mov
mov
jno
mov
movsl
xor
adc
stc
mov
imul
pop
mov
pushf
mov
mov
inc
in
sub
je
add
xchg
jo
push
push
and
dec
mov
nop
fidivrl
jb
cmc
mov
push
fcoms
xchg
add
sbb
call
mov
jnp
popf
vexpandps
jg
xor
pop
pop
in
stc
mov
dec
cmp
gs
xchg
pop
loope
jae
pop
jmp
fstp
mov
fistpll
inc
dec
jo
dec
out
inc
addr16
out
rclb
ja
mov
out
outsb
lock
js
jae
movb
push
das
out
xchg
pusha
data16
and
cltd
add
data16
mov
mov
lods
xor
jp
mulb
ja
mov
jo
mov
imul
cmpsl
cli
jns
xor
inc
sub
mov
lret
mov
aam
push
sysret
out
push
imul
push
test
repnz
std
loopne
mov
repz
and
popa
or
lock
push
stos
fidivs
xor
jle
xchg
mov
bound
outsl
jns
push
and
cmpsl
ret
insl
mov
cmp
pop
xchg
hlt
jno
jg
loop
negl
out
imul
jge
outsb
gs
push
push
xchg
xchg
outsb
push
jg
sub
aaa
lds
in
popa
inc
fcoms
jmp
sbb
lahf
int3
mov
push
loope
xor
push
clc
jno
lds
cmp
cmpsb
push
xorl
popa
jns
add
jno
push
sahf
arpl
loope
ret
xchg
outsb
in
shl
push
imul
mov
gs
mov
jo
notb
icebp
mov
jae
int
popa
movsl
daa
adc
adc
aas
sbb
mov
int3
xor
pop
xor
ret
mov
fsubr
inc
popa
xor
mov
addr16
aas
scas
fildll
outsl
jno
mov
xor
or
xor
aas
int
into
je
ja
jno
stos
sub
push
push
stc
mov
mov
add
fs
mov
testl
push
pop
mov
and
imul
xchg
imul
jecxz
lds
and
jge
in
xor
fs
fldcw
mov
loope
xchg
push
sub
sbb
jecxz
mov
jp
mov
std
popf
test
and
popa
subl
xchg
fucom
js
test
in
imul
scas
insb
mov
push
addr16
or
cmpsl
pushf
cld
insl
movq
repnz
cmpsb
dec
lret
in
inc
sub
cli
pop
fs
stos
push
insb
jnp
js
mov
pusha
jbe
cmp
inc
imul
shll
out
loopne
mov
repz
in
sbb
inc
mov
adc
inc
out
arpl
jge
xchg
in
push
rclb
sub
and
jbe
cmp
ljmp
nop
dec
loopne
ret
je
jge
rcrb
imul
outsl
lods
outsb
adc
les
dec
push
outsb
cmp
sbb
outsl
cmp
jg
int3
push
lods
mov
push
out
arpl
std
movsl
push
mov
xchg
iret
loop
shll
push
mov
cli
loopne
or
jo
xor
push
xchg
jns
divb
out
out
xor
mov
xor
dec
jl
inc
mov
push
mov
in
push
adc
cmp
jmp
mov
jmp
les
mov
sub
jle
shll
or
rep
xchg
sahf
add
jl
pop
xchg
je
imul
or
lock
and
add
aas
sbb
repz
add
xor
jl
cmpsb
mov
out
std
jns
xchg
mov
out
popa
cmpsb
pop
xor
pop
outsl
and
push
fiaddl
jmp
pop
mov
mov
fldt
or
jge
mov
out
jne
inc
out
sub
adc
aaa
or
jno
mov
das
xchg
xlat
lret
mov
push
sub
das
xor
add
jnp
mov
rolb
imul
fisubl
push
cmpsl
sti
pop
jecxz
jae
or
mov
jns
lahf
jne
mov
sti
pop
mov
mov
and
mov
mov
repnz
mov
out
cmp
imul
in
push
mov
jmp
mul
jb
or
into
mov
pop
shlb
js
pop
fcmovu
repnz
xor
imul
addr16
pop
test
xlat
mov
jg
jns
enter
mov
cmpsb
cltd
rclb
dec
jbe
pop
jne
inc
dec
mov
dec
addr16
repz
mov
bound
test
jo
nop
xchg
mov
jne
out
shrl
jns
lock
or
std
xchg
insl
enter
push
clc
jns
aas
sbb
arpl
and
add
mov
jno
jecxz
mov
testb
loopne
push
repnz
push
out
dec
pop
aas
cmpsl
ljmp
out
gs
sarl
addr16
jle
cmpsb
cmc
mov
pop
ss
cwtl
jp
in
mov
repz
popa
call
int3
mov
fsubrs
lods
repnz
clc
int
add
sahf
jne
adc
call
insl
movsl
shlb
mov
dec
or
icebp
outsl
mov
icebp
int
imul
jl
dec
inc
adc
testb
cmpsl
dec
xchg
gs
fdivs
dec
mov
jg
movsb
test
inc
loopne
jp
dec
cld
sahf
push
jo
mov
jle
addr16
adc
jp
push
outsl
popa
add
or
test
sub
popa
xor
push
pop
mov
ret
cmpsl
xor
popa
mov
lret
outsb
xor
cli
jo
int
and
mov
or
js
mov
jno
cmp
push
inc
scas
loopne
loopne
sub
or
loopne
mov
in
popa
enter
xchg
testl
loopne
sub
mov
out
add
push
std
and
popa
mov
dec
mov
in
ret
push
shlb
jae
lods
stos
add
gs
popa
mov
cmc
mov
testb
jae
push
adc
out
jns
cmpsb
les
cli
loop
xchg
out
sub
sub
xor
lcall
imul
mov
insl
jae
pop
jl
ljmp
jge
outsb
jg
xor
loopne
repz
jo
pop
push
fs
notl
adc
xchg
push
push
aaa
or
jnp
push
jne
push
inc
pop
out
stos
and
out
sbb
jo
mov
test
sarb
xor
mov
and
data16
ljmp
add
rcl
loop
mov
pop
shl
jbe
mov
adc
repz
icebp
push
enter
stc
ljmp
jo
fldenv
jg
clc
xor
sub
or
das
stos
pop
insb
clc
dec
loopne
imul
or
in
push
test
dec
mov
int
clc
clc
test
or
and
inc
push
sbb
adc
pop
mov
stos
std
jmp
je
jbe
sbb
jp
icebp
stc
rorb
xor
sbb
inc
lock
aas
push
xchg
mov
pop
cmpl
in
imul
sub
outsl
lcall
xor
add
jae
push
outsl
out
push
jecxz
mov
jp
inc
insb
jne
movsl
push
cmp
in
cmpsl
fdivp
jns
icebp
cmp
add
out
nop
ret
add
sbb
or
jno
or
jecxz
in
pop
imul
popf
test
push
add
test
repz
mov
sti
jb
mov
push
out
mov
jae
sub
xor
scas
bound
je
icebp
imul
push
in
call
test
pusha
push
test
mov
das
jb
xchg
icebp
jbe
hlt
lock
repnz
or
sbb
aaa
cmp
gs
add
mov
shlb
imul
push
cmc
js
imul
push
sbb
jle
cmp
inc
push
js
add
jno
sbb
add
loopne
mov
add
outsb
or
push
add
enter
lahf
test
jmp
sbb
idiv
jge
test
stc
xorb
enter
je
mov
push
out
adc
addr16
jmp
test
jge
or
jno
daa
mov
sub
jno
sub
mov
fcmovu
in
cmp
imul
xchg
inc
xor
pushl
push
in
dec
and
fs
sti
jmp
stos
imulb
or
std
adc
bound
xor
jae
sub
dec
pop
stc
or
loop
movsl
cld
imul
ja
or
shll
pandn
call
push
sub
insl
mov
inc
xor
or
iret
pop
and
or
imul
nop
xchg
shrb
insb
jmp
je
popa
and
push
cs
xlat
push
popl
inc
add
jmp
fidivrl
mov
fnstenv
outsl
in
xchg
popa
and
fists
jmp
xor
jg
cli
movsb
xchg
hlt
mov
xor
shrb
dec
test
in
fptan
in
js
push
pusha
pop
jecxz
mov
daa
xor
mov
jmp
xchg
push
and
jno
scas
lret
sarl
push
mov
in
adcl
push
jnp
je
adc
jg
cs
xor
adc
mov
add
or
gs
in
push
jge
mov
pop
dec
inc
and
out
addr16
push
jl
imul
jo
je
push
mov
cmpsl
or
jns
xor
fists
push
int3
aas
add
mov
mov
dec
jecxz
in
sub
adc
imul
pushf
fsubrp
mov
xlat
in
mov
inc
ljmp
xchg
mov
mov
xlat
adc
jno
aam
pop
ds
fbstp
imul
push
icebp
cmpsb
jb
data16
push
scas
pusha
cmp
popa
dec
xor
sub
repnz
xchg
arpl
mov
pop
ret
xchg
pop
icebp
popa
inc
add
insb
cmc
mov
enter
push
jg
pop
sbb
sub
push
in
enter
push
out
fldcw
das
gs
lret
xchg
push
mov
std
nop
mov
jo
xor
out
imul
xor
in
mov
repnz
push
sub
jp
jb
push
in
sub
adc
shrl
push
je
pop
test
jmp
jns
push
int3
aaa
mul
sahf
push
xorl
xchg
jl
pop
sub
incl
mov
mov
and
stos
cmp
inc
jmp
jge
mov
out
imul
jg
mov
aad
in
mov
call
or
divl
xor
sbb
mov
outsl
ficoms
jmp
mov
ret
add
inc
es
out
call
xor
jae
movsl
dec
jmp
jg
movsl
mov
in
out
inc
push
ret
loopne
daa
in
adc
bound
sbb
jmp
movsl
push
insb
sti
jecxz
imul
loopne
mov
jns
ds
xor
jbe
loop
lock
mov
xor
mov
inc
push
outsl
and
popa
addr16
xchg
mov
test
andb
sarw
icebp
push
jne
outsb
fs
or
aas
sbb
sahf
subl
sbb
mov
jno
push
or
repnz
loopne
cwtd
jecxz
lret
out
sbb
adc
mov
outsb
push
cld
inc
jge
pop
jo
xor
mov
cmp
mov
out
out
mov
add
shl
adc
jae
in
or
pop
outsb
and
sar
mov
lock
and
xchg
repz
and
mov
js
std
jns
shrl
mul
jg
mov
cwtl
and
or
sub
data16
sub
jecxz
pop
hlt
shlb
cmp
lock
fs
insl
or
sbb
cli
mov
adc
sub
dec
jecxz
lock
movsb
mov
lret
mov
xor
mov
das
pop
int
insb
dec
push
fdivs
sub
jge
test
jne
cs
mov
imul
out
xor
vpsubsb
dec
mov
arpl
insl
sub
jle
mov
jecxz
repz
jne
hlt
fwait
jmp
and
rorb
lds
mov
mov
jmp
lods
mov
call
in
dec
imul
scas
das
lock
cmp
imul
pop
addr16
jmp
imul
push
imul
repnz
push
cmp
sub
xchg
dec
jbe
dec
adc
mov
ds
icebp
out
out
or
aaa
scas
add
add
lock
jg
mov
and
jo
mov
cmp
push
into
pop
test
in
jno
insb
je
jb
lock
mov
push
popa
mov
sub
mov
ljmp
pop
movsl
xor
sub
inc
loopne
fldl
ror
mov
xor
lock
shlb
cmpsl
arpl
sub
xor
push
out
stos
scas
pop
fsts
cmp
imul
mov
lret
sub
into
rolb
shr
imul
mov
out
lods
dec
xor
enter
cmp
xchg
out
mov
mov
jmp
lods
jno
mov
inc
or
shrb
inc
out
pop
push
ret
xchg
cld
rclb
push
mov
mov
imul
push
stc
jl
addr16
out
push
xchg
popa
js
inc
rorb
jl
fsubrl
jbe
fisubl
lock
fdivrs
mov
push
mov
mov
lahf
rclb
addr16
in
mov
and
insl
into
push
fdivr
adc
jg
les
sub
imul
jb
sub
mov
add
mov
sub
pushf
repnz
imul
xchg
loopne
addr16
aad
xor
jecxz
cld
mov
repnz
out
xchg
repnz
mov
jae
lcall
jnp
jno
fdivrl
mov
mov
out
push
mov
out
test
xchg
push
add
mov
jb
das
repz
insw
out
xor
enter
mov
imul
fcmove
add
jle
cmpsl
in
dec
jge
loop
imul
xor
gs
and
push
push
jl
add
and
imul
jl
shl
add
sahf
insl
out
arpl
or
cmp
xchg
mov
and
movsb
push
jns
or
stc
inc
test
dec
xor
mov
dec
hlt
cmc
cli
dec
mov
jecxz
dec
loope
dec
jmp
jno
popf
ljmp
push
mov
int3
inc
and
cmp
sub
jno
mov
imul
xchg
jne
sbb
dec
cli
sbb
stc
gs
mov
mov
jns
or
lret
in
or
icebp
push
xor
inc
fisubs
arpl
hlt
imul
ljmp
outsl
jmp
incb
hlt
push
lret
push
loope
jae
shll
shl
adc
xor
xchg
sbb
into
outsb
bound
push
cmp
xor
jo
lock
xchg
and
pop
cvtps2pd
aad
cmp
jo
fwait
mov
sbb
jb
fnstenv
pop
jno
idivb
cmp
insb
scas
or
in
and
cs
mov
and
jb
out
loopne
daa
xor
fdivrs
jecxz
xchg
and
popa
adc
jnp
mov
xor
fsts
std
int
in
lret
cmpb
xor
rcll
enter
gs
call
mov
xor
dec
daa
divb
test
pop
repnz
out
adc
adc
insl
inc
mov
mov
mov
sub
cmp
loope
or
pop
shrb
aam
sub
jnp
icebp
out
neg
cmp
sahf
int
ss
fwait
jno
sub
dec
sti
jne
mov
nop
ret
sub
push
adc
std
clc
outsl
dec
outsb
adc
dec
jle
xchg
in
repnz
js
je
push
fs
stos
clc
data16
mov
enter
mov
xchg
jo
push
mov
shl
test
sub
push
or
ds
cmp
stc
xor
popa
push
push
jnp
stos
xor
in
jne
jnp
fs
lock
sub
and
insl
inc
outsb
scas
and
jle
jb
cmp
sub
jo
mov
push
jge
mov
jge
int3
xchg
mov
cmp
sub
mov
dec
and
adcl
in
or
cli
adc
std
clc
vmwrite
bnd
aas
jo
test
cmpsl
jne
rcl
fnstcw
and
into
and
mov
push
popf
push
jge
pusha
cmp
hlt
xchg
mov
add
jns
out
clc
arpl
insb
cld
mov
jmp
clc
loopne
mov
fs
mov
xchg
cmp
cmp
clc
std
ljmp
setae
sbb
int3
mov
loop
xor
sti
push
inc
jle
push
repnz
out
out
jge
cmpsl
dec
shlb
int
out
jecxz
pop
rorb
cmp
and
shlb
cltd
lcall
mov
cmc
call
addr16
jl
cli
dec
push
aas
push
xchg
out
jmp
pop
mov
cmc
addb
dec
xor
shrl
pusha
shlb
cmp
ja
cli
pop
add
insl
movsb
popf
sbb
ret
fdiv
dec
gs
mov
cmp
and
mov
cmp
mov
push
add
decb
pop
ja
push
adc
lods
movsl
sbb
or
push
jae
test
push
lock
xchg
jg
adc
pop
in
xor
mull
sub
aaa
shll
add
lods
mov
jns
and
pavgb
gs
dec
sbb
call
sti
push
jmp
mov
mov
push
daa
cwtl
xor
addr16
fs
xchg
xor
test
cmp
insb
popa
or
std
adc
cltd
enter
adc
push
push
jg
mov
adc
jo
xor
add
imul
fcmovbe
not
sub
dec
jmp
arpl
and
jo
aad
push
shll
mov
xchg
pop
xor
cmp
movsl
fs
outsb
ja
gs
imul
cld
jle
jns
mov
and
or
fwait
add
cmp
mov
mov
divb
imul
xchg
xor
notl
data16
int3
icebp
icebp
jl
cld
or
xorl
xor
out
pop
cmp
in
and
jns
hlt
push
mov
xchg
adc
and
out
xchg
xor
jp
sub
fldenv
or
repz
fidivs
fisubl
test
out
add
aas
xchg
call
pop
mov
jo
sahf
mov
mov
cli
xchg
sbb
jno
cmp
xchg
jo
push
hlt
pop
mov
lods
das
xchg
jo
xor
rcll
in
test
inc
adcb
or
test
aad
pop
dec
in
add
and
jne
outsl
adc
or
stos
adc
scas
imul
iret
inc
jg
push
jge
push
jb
pop
xor
hlt
clc
cltd
push
pop
xor
shl
jmp
dec
das
jbe
popa
aas
mov
hlt
mov
loop
icebp
xor
adc
loop
scas
jo
and
jae
add
loope
jle
jns
jns
adc
sbb
popa
pop
sbb
fwait
out
out
loop
bound
sahf
icebp
xchg
shl
test
clc
int
in
in
call
mov
dec
mov
xchg
mov
ds
or
cltd
xchg
popa
dec
les
in
jno
je
cld
dec
cli
adc
dec
loopne
insl
rolb
inc
jmp
push
imul
adc
and
in
inc
insb
popa
sbb
jns
mov
jl
out
xor
sahf
aas
adc
adc
insl
add
mov
mov
das
push
cmp
and
add
out
jl
stc
jns
aam
mov
sbb
jp
into
in
cmp
outsl
in
mov
in
arpl
loope
out
loopne
orl
jge
inc
xchg
data16
xor
jp
ljmp
lock
add
fs
shrl
rolb
imul
es
stc
cmp
out
mov
cmp
mov
mov
pop
clc
sub
push
or
das
call
sti
mull
in
outsl
xchg
cld
jns
js
inc
outsl
lods
mulb
cmp
pop
scas
out
out
shr
mov
cmp
rol
inc
outsl
cld
push
icebp
popa
inc
dec
sti
xchg
or
imul
fwait
pop
push
push
or
addr16
mov
push
mov
out
cmp
sarb
das
inc
mov
stos
jecxz
inc
test
jno
mov
push
mov
popf
adc
sti
movsl
in
add
fwait
xor
mov
adc
pop
lsl
shrb
mov
icebp
sub
jo
cmp
in
out
imul
sahf
push
aad
out
rclb
jbe
repz
andb
mull
add
dec
mov
jno
jo
sbbb
test
xor
in
arpl
adc
shrl
mov
xor
roll
lods
inc
jmp
pushf
ljmp
push
outsb
mov
in
xorb
adc
dec
rcrb
imul
dec
jecxz
mov
xor
mov
xor
and
out
aad
push
insl
inc
movsb
rcl
hlt
mov
cmc
loopne
jb
cltd
mov
mov
shlb
mov
std
jns
xchg
add
lret
out
sarb
sub
jo
add
jbe
insb
adc
outsl
jecxz
int
lahf
cmp
xor
imulb
imul
stc
clc
out
cmp
xor
cwtl
push
mov
and
pop
int3
loop
inc
lock
test
fdivrs
jnp
imul
xor
mov
push
jl
mov
ds
test
loopne
pop
pop
pop
scas
mulb
pop
call
push
imull
andl
das
insl
fisubrs
in
push
jo
or
out
enter
stc
mov
mov
pop
pop
idivl
jne
push
gs
clc
xchg
jne
mov
addr16
or
jae
fisttpl
mov
out
and
jae
in
outsb
in
fsubr
lret
ds
jmp
jno
js
or
sub
jno
fstpl
xlat
scas
xor
add
cmpsl
jno
and
fcomps
jno
xchg
sub
jno
adc
jne
mov
nop
jno
icebp
mov
and
jecxz
add
pop
out
scas
and
daa
popa
stos
popf
outsb
push
adc
adc
mov
inc
or
call
inc
xchg
and
adc
jno
sbb
imul
mov
pop
mov
int3
xchg
gs
jno
rorl
pop
call
insl
lahf
jecxz
and
cmp
mov
in
imul
cld
jb
inc
jmp
fsubrs
nop
jl
jg
insb
fs
mov
les
or
bnd
xchg
inc
push
push
cld
cmp
push
cmp
push
repnz
sar
ds
push
into
adcb
les
sarb
outsl
pop
adc
jbe
testb
stos
and
aaa
js
sbb
sti
push
jg
xor
subl
imul
aad
mov
lods
push
adc
sbb
xor
xchg
push
lcall
lea
pusha
mov
add
jno
fsubs
push
out
cmc
jecxz
stos
inc
cmp
js
test
fidivl
mov
popa
mov
mov
adc
jno
sub
pop
mov
adc
jno
scas
mov
int
aas
adc
mov
adc
dec
clc
jmp
jbe
add
jno
sub
mov
jg
cmp
stos
nop
xchg
adc
imul
subl
dec
sub
cli
jno
cwtl
pushf
xchg
movsb
inc
jno
fildll
push
imul
je
dec
jno
xor
pop
mov
adc
adc
enter
clc
movsl
xchg
mov
push
add
inc
out
mov
inc
inc
cmp
and
xor
xor
shrl
mov
push
pop
cmp
jno
pop
xor
cs
sbb
data16
jp
xor
shlb
icebp
ret
xchg
push
repnz
jne
jg
xchg
mov
ffree
jno
std
push
lods
pop
int3
mov
push
out
popa
mulb
stc
dec
jg
jno
aaa
bound
lea
std
jge
frstor
mov
cmpsl
ljmp
inc
fnsave
xor
mov
jno
jb
jmp
aad
shlb
sbb
icebp
jno
loopne
dec
or
fmull
lods
xchg
std
leave
jne
out
cmp
nop
dec
cltd
in
popf
jns
sbb
or
mov
jno,pn
imul
xchg
cmpsb
inc
jl
fsub
aaa
gs
mov
sbb
cs
jno
push
xchg
scas
dec
sub
add
or
add
shlb
push
aas
lods
arpl
jae
shr
sti
out
jno,pn
dec
mov
cmpsl
sub
call
int
popa
xchg
push
mov
fs
or
xor
jno
or
inc
arpl
pop
xchg
lahf
mov
out
das
add
sbb
push
add
jg
push
xchg
pusha
lret
popa
mov
leave
fwait
xor
test
mov
lret
jno
inc
mov
insl
addl
xor
jno
or
aad
fldt
movsl
inc
xchg
mov
adc
jno
repz
pop
add
xchg
aas
dec
and
cmp
jo
jns
loopne
jp
jno
cld
rcll
jmp
rorb
lods
test
sub
lcall
dec
push
shrl
mov
add
call
in
mov
pop
xlat
inc
popa
or
jecxz
popa
cmpsl
in
in
push
fcmove
xor
jno
test
xor
add
repnz
jmp
pop
out
lret
xor
dec
jno
jns
in
iret
fmuls
scas
xchg
outsb
sarb
enter
jno
addr16
mov
and
mov
adc
pop
popa
lcall
jno
and
sub
jno
sbb
arpl
in
push
scas
xlat
insb
mov
fpatan
jae
jno
push
cmc
inc
jne
int3
sub
in
orb
arpl
jno
cmp
or
loop
nop
test
popa
or
xor
mov
insl
mov
mov
outsb
popa
jno
movsb
sbb
test
popf
pushf
jbe
jle
jp
popl
frstor
mov
lds
lock
mov
repnz
dec
rcrl
push
cmp
jmp
sbb
push
ja
add
jno
mov
pop
xorb
xchg
popf
jno
sub
nop
mov
cmpsb
mov
pop
add
jle
fisttpl
cli
mov
jno
cmp
or
addl
or
sbb
push
call
clc
dec
rcrb
push
jno
cmp
adc
mov
jbe
in
loopne
stc
insl
dec
stos
jno
mov
movsbl
in
test
test
xor
adcl
push
sarb
sub
fsub
push
adc
enter
data16
mov
loopne
jno
lods
mov
pusha
sub
insb
test
movsb
sbb
and
leave
out
pop
jno
inc
pop
xorb
jne
mov
std
sub
xorl
repz
xchg
pop
gs
popf
or
jno
call
mov
mov
mov
divb
clc
mov
or
mov
or
adc
jno
lret
stos
sub
xor
mov
cs
and
jno
pop
fsubl
lods
xor
sar
fildll
js
adc
ret
or
sub
popf
dec
addr16
and
xchg
mov
imul
mov
jp
push
fwait
adc
out
das
mov
xor
xchg
sbb
lcall
jae
ror
pop
sub
jno
xchg
hlt
pop
push
jg
in
inc
inc
jno
pop
pop
test
cmp
mov
push
xor
popa
mov
loop
adc
sbbb
cmp
lahf
mov
test
mov
add
sbb
je
testb
lcall
mov
je
jno
mov
int3
mov
cmp
aam
shrl
sti
hlt
dec
push
test
xor
sahf
jg
jno
jb
into
scas
aad
and
cmpsb
movsb
cmpsl
jo
push
lock
inc
loopne
push
gs
outsb
ss
xor
xor
neg
pusha
push
and
xor
imul
mov
aas
sub
cmp
xorb
icebp
jl
mov
clc
popa
in
inc
fstps
ljmp
jno
sub
jnp
xlat
lea
dec
inc
lods
rsqrtps
push
push
push
pop
cld
out
nop
jnp
jne
stos
insb
sub
std
push
cmpb
push
cmp
into
and
test
in
xor
jno
hlt
adc
jno
and
mov
xor
mov
push
pop
inc
cli
jno
aaa
cmpsb
add
push
xor
mov
add
jp
dec
lret
jnp
or
and
mov
jno
push
cld
dec
sahf
aas
jne
mov
push
stos
jbe
gs
daa
aad
mov
arpl
pop
jno
jecxz
pop
pusha
dec
das
pop
cltd
cmpsl
lea
dec
jp
scas
nop
jae
out
outsl
gs
inc
sbb
setnp
jno
jge
inc
mov
mov
mov
pop
outsl
mov
pop
ja
or
jno
add
pop
in
arpl
mov
push
ss
bound
fs
xchg
iret
jno
imul
shl
add
repnz
jns
pop
add
nop
xor
sub
cltd
cmp
and
scas
out
fdivrs
lods
mov
jo
fs
mov
arpl
testb
mov
cmc
nop
mov
out
mov
addr16
jno
outsb
inc
cmp
jno
mov
pop
inc
sarb
mov
sbb
push
fwait
mov
inc
sbb
lret
pop
scas
jno
sbb
or
cmp
popa
inc
lcall
add
inc
hlt
shll
jge
mov
jno
outsl
outsb
out
mov
pop
adc
test
daa
popa
mov
jno
insl
dec
add
pop
test
cmc
setnp
jno,pn
push
mov
cmpsl
push
lods
mov
jo
ja
jno
mov
jecxz
jno
sbb
sbb
dec
jno
enter
add
sub
dec
in
ja
jne
into
jmp
lcall
into
cmp
pop
pop
inc
ss
jmp
add
mov
insb
imul
xlat
xor
mov
xorl
or
jae
mov
cmp
jno
mov
sarb
or
mov
add
nop
lcall
into
cmp
mov
in
adcl
dec
stos
je
and
paddq
mov
scas
push
xor
jle
mov
cwtl
jno
outsb
lret
stc
xor
jno
pusha
out
adc
jno
push
jne
fistps
push
xor
rclb
push
sbb
mov
jno
imul
jge
lret
cmp
xchg
test
mov
mov
nop
mov
dec
or
repz
test
imul
popf
jp
jno
cmp
je
mov
scas
jp
clc
sub
mov
push
push
fstpt
lock
adc
add
add
mov
adc
jno
sub
dec
ja
sub
es
sub
fsubl
je
jno
icebp
fcomip
popf
sbb
mov
fisubs
jg
cwtl
pop
and
or
mov
sub
imul
lock
lret
mov
or
cmp
jmp
inc
push
jno
and
fnstcw
jle,pn
inc
jae
test
popa
aas
cmp
data16
in
jno
sbb
pop
addr16
cmp
mov
or
sbb
mov
pop
loop
sbb
cmp
movsl
pop
cmp
leave
stos
inc
push
pop
test
push
inc
sbb
fwait
mov
aaa
lods
pop
cmp
jge
call
push
inc
mov
sti
dec
inc
testl
pop
fimull
popa
jb
pop
imul
cmpsb
dec
jl
sbb
jno
loopne
leave
jae
xchg
jno
xor
cld
jmp
xchg
ficoms
les
sbb
inc
pop
in
ja
int
sarb
mov
sahf
jl
push
sbb
stos
lret
lea
and
jnp
jno
push
fcomps
icebp
xchg
in
inc
movsl
xchg
jno
lea
xchg
lods
mov
cmp
shr
imul
jno
incl
rol
sbb
fnstcw
mov
pop
jno
jb
hlt
mov
mov
and
jno
mov
jnp
repz
jg
adc
add
addr16
adc
pop
jb
iret
clc
and
stos
add
lret
or
rorl
add
repnz
pop
ljmp
sbb
xor
shlb
jns
lods
inc
mov
add
cmc
jecxz
push
imul
js
push
jno
mov
std
lcall
scas
mov
xchg
push
call
inc
popa
inc
insl
cmp
in
lods
xchg
inc
cmp
push
or
movsl
jno
and
in
push
jno
std
pop
add
lret
mov
adc
sub
shrl
int
pop
jno
sub
jle
lods
xor
jp
cltd
inc
mov
jns
daa
or
mov
xor
push
mov
cltd
sub
add
cmp
mov
sub
push
jns
fpatan
cmp
jbe
jno
push
cld
inc
or
dec
sti
adc
sub
rcr
test
lret
adc
or
push
mov
inc
mov
mov
pop
mov
push
mov
movb
mov
test
mulb
fnstsw
popf
ret
insl
testl
cmc
test
loopne
mov
push
xlat
outsl
and
mov
push
xchg
xor
adc
fsubrp
mov
jno
or
inc
dec
push
lock
orb
mov
test
arpl
lret
ja
arpl
into
add
jno
mov
dec
inc
mov
fsubrl
inc
jno
ds
int3
les
push
jb
xlat
push
inc
ss
dec
sub
jno
cli
dec
popf
inc
popa
sub
cmp
out
pop
mov
fidivs
cmp
dec
cmp
push
cmp
vmulps
cmp
adc
xchg
mov
shlb
sub
stos
leave
xor
stos
jno
lahf
xchg
pminsw
dec
in
out
out
push
pop
jno
xor
sbb
fisubrl
insb
jno
rolb
lcall
adc
movsb
ret
in
cmp
ds
sbb
sbb
mov
pop
sub
adc
jno
inc
sahf
fwait
das
mov
jne
adcl
ss
jmp
ljmp
or
mov
jno
jmp
shrb
cmp
lods
mov
adc
test
clc
hlt
dec
repz
jno
gs
sub
popa
dec
xchg
push
jno
jg
jp
in
loopne
add
decl
pushf
and
test
repz
jno
cmp
filds
and
mov
adc
data16
jno
test
cmp
mov
mov
out
enter
movsl
ja
test
push
iret
arpl
fcmove
je
inc
test
icebp
in
jmp
rcrl
jnp
jno
push
pop
cmp
pushf
std
xor
pop
nop
sub
cmp
mov
and
jae
lods
jb
fidivl
cmp
sbb
ret
xlat
push
cltd
adc
push
and
dec
popa
push
pushf
jmp
jno
aas
ret
jnp
sub
imul
jno
ret
aaa
push
mov
adc
int3
loopne
popa
cwtl
jmp
pop
sbb
jnp
sti
cmp
addb
xor
jno
repnz
scas
xchg
aam
jl
pop
fcmovbe
jnp
xchg
cmpsb
repz
jno
inc
xor
mov
mov
insl
or
pop
aad
pop
push
fisubrs
test
imul
add
movsl
push
xchg
xchg
imul
inc
dec
jl
or
jno
sub
push
and
jns
std
mov
fs
pop
js
iret
mov
lea
pop
sahf
mov
outsl
lods
add
sub
imul
fld
jno
sarl
push
jno
mov
dec
xchg
jno
pop
lods
fcoms
jnp
push
sbb
aad
cmc
jno
scas
mov
mov
pop
xchg
pop
jmp
jno
std
add
jo
adcb
xor
nop
mov
mov
pop
into
cmpsb
outsb
loope
aas
pop
add
jecxz
sbb
jae
jmp
push
mov
jno
loop
jecxz
popa
adc
cltd
andb
or
pop
xchg
push
out
jp
repz
jle
jno
scas
rcll
add
inc
lods
fs
ljmp
adcb
sub
push
or
xchg
add
dec
jns
mov
aaa
lods
fnstenv
in
cmp
fidivrs
iret
fdivs
add
lods
ret
cwtl
lret
mov
pusha
inc
lea
jns
adc
leave
mov
jno
dec
sti
or
fcompl
jno
idivl
add
jno
xorl
ffreep
test
sti
addl
cmp
cld
nop
cmc
and
dec
add
jno,pt
fwait
call
stc
loope
pop
sub
mov
xor
fisttpll
mov
jmp
jbe
jmp
xchg
jno
rcrl
popf
adc
out
push
js
repz
or
daa
mov
fldcw
test
aam
test
push
or
pop
push
hlt
jne
arpl
inc
mov
bound
push
loop
jo
or
lock
sub
jno
das
push
lahf
je
aam
ja
into
int3
xchg
jne
mov
or
in
push
shlb
inc
icebp
xor
jno
push
mov
xchg
push
insb
out
inc
popa
scas
dec
mov
jno
xchg
or
insl
jno
mov
cmp
in
jno
imul
pop
jno
ja
push
mov
push
push
ja
ljmp
iret
pop
xchg
cmp
gs
shlb
lock
pop
cmpsb
call
add
popa
pushf
shl
add
adc
sbb
in
jg
cmp
test
shrb
or
popa
cmpsl
imul
les
pop
dec
lea
xchg
sbb
pusha
or
fnstenv
shll
jmp
addr16
adc
popa
cmp
xor
sub
arpl
sub
ret
imul
mov
or
mov
mov
push
pop
sub
dec
sub
outsb
ja
int
test
mov
jp
ljmp
adc
or
mov
popaw
jo
xchg
imul
add
dec
xor
dec
stos
add
adc
jno
lahf
std
push
cwtl
pop
dec
mov
mov
pop
push
je
push
adc
mov
sbb
sbb
punpckhwd
dec
ficoml
int
cmp
fisttpl
push
add
pop
movsl
add
fistl
jmp
jge
or
jno
ja
or
sahf
fidivrs
dec
xchg
sub
enter
jo
in
sub
mov
sbb
jno
clc
lock
jmp
nop
mov
gs
icebp
jb
ret
addr16
cmp
jno
loop
or
push
ret
sahf
arpl
pop
sbb
scas
mul
jno
sub
add
clc
test
jp
jge
or
push
int3
add
inc
mov
xor
lock
inc
jae
shll
jl
jne,pn
jb
enter
pop
add
cmpsb
fwait
lcall
or
jno
fldenv
cli
push
outsb
push
andl
jno
add
or
xchg
sbb
inc
popf
nop
in
jnp
push
cmp
popa
fists
adcb
and
icebp
popf
test
mov
xchg
push
mov
sbb
sub
fadds
jno
pop
push
jno
je
aas
out
adc
mov
and
jno
outsl
jge
adc
cmp
jno
cmp
popf
pop
cmp
push
hlt
cld
jno
ljmp
jno
pusha
xchg
adc
xor
jns
sbb
stc
sbb
mov
out
lods
jno
fwait
shlb
push
mov
mov
imul
push
incb
jno
repnz
inc
push
pop
xchg
add
stos
cmp
in
xor
jmp
or
mov
mov
aad
jecxz
ficoms
mov
mov
jmp
fstpl
push
scas
imul
pop
call
add
addr16
cmp
and
outsl
lahf
mov
push
mov
add
mov
lods
sbbb
mov
addr16
add
sbb
cmpsl
test
sub
or
jp
sbb
jno
add
push
stos
hlt
cltd
sahf
jno
into
jns
jbe
fadd
popa
ss
add
neg
aam
push
pop
jno
stos
xor
out
mov
adc
push
fwait
arpl
push
mov
pop
mov
bound
jns
add
cmp
or
and
arpl
popa
mov
out
ja
inc
pop
mov
mov
jmp
mov
pop
mov
xchg
lahf
jmp
shll
jno
mov
enter
out
in
pop
xchg
push
dec
jae
stos
aam
popf
arpl
movsb
inc
fsubrl
push
mov
jbe
jmp
sbb
adcl
xchg
and
rcll
ret
inc
cmc
jno
inc
pop
lds
push
jno
outsl
loopne
or
scas
jle
push
dec
xor
ds
xchg
or
ja
mov
into
push
jno
push
mov
jno
addr16
adc
xchg
jno
out
ds
ret
mov
insb
xchg
std
jns
mov
mov
hlt
xchg
mov
imull
inc
mov
addr16
adc
popa
lds
adc
loop
jns
ds
jmp
and
andb
inc
sbb
xchg
in
sbb
mov
leave
data16
jno
pop
xchg
std
getsec
mov
test
mov
jl
add
or
rorb
mov
in
ficoml
loope
jmp
das
add
sub
test
lods
or
mov
movsb
fwait
inc
loop
adc
jb
fld
jecxz
negl
cld
jno
or
add
jne
into
nop
les
or
inc
test
sbb
cmpsl
arpl
imul
dec
push
das
xor
lods
les
add
test
add
xor
incb
jg
lea
cmp
pop
pop
adc
adc
rorl
mov
jno
inc
mov
jno
xlat
xchg
sub
dec
sbb
jno
nop
lret
cmp
mov
movsl
jae
dec
jmp
popa
and
ret
inc
pushf
test
imul
pop
stc
cmp
add
popa
mov
pop
test
jecxz
cmc
and
sahf
jno
xchg
mov
outsl
jno
inc
out
pop
enter
in
stos
or
sub
popa
stos
cmp
jns
jae
int3
mov
adc
sub
negb
popa
mov
je
mov
cmp
scas
jno
sub
push
jno
mov
mov
jno
out
adc
testb
pushf
xorl
lea
inc
mov
jno
aas
dec
or
sbb
inc
sti
gs
pushf
inc
nop
lods
xchg
push
xor
dec
mov
jno
lods
mov
fbstp
and
lock
test
jp
repnz
dec
jno
mov
inc
jnp
jno
xchg
fdivrp
and
mov
jno
lds
je
in
dec
data16
xor
mov
and
jmp
push
mov
movsb
jno
add
pop
inc
push
sub
sbb
sub
xor
adc
lcall
popf
xor
nop
push
mov
call
fwait
sub
popa
pop
cmp
mov
fstps
cmc
mov
pop
push
xchg
or
mov
nop
inc
adc
imul
outsb
ret
jno
cmpsb
insl
aaa
ret
lock
sbb
loopne
jno
mov
or
lret
and
add
test
hlt
jno
cld
add
lret
jbe
sub
mov
mov
stc
sub
popa
fsubrl
jno
cmp
scas
gs
jns
aam
incb
mov
add
push
adc
jns
int3
dec
shll
sub
into
fiadds
fwait
jno
xor
je
hlt
jno
adc
mov
callw
or
jno
cmp
sub
jno
mov
mov
outsb
jb
cmpb
add
jne
in
outsl
loopne
pop
popa
jno
jb
cmp
lea
add
iret
aad
stos
xor
icebp
jbe
sub
insb
sbb
xor
stos
mov
jns
jno
dec
fdiv
push
xchg
mov
jno
or
mull
xchg
push
push
xorb
jno
fisttps
lds
mov
mov
pop
shrl
cld
xor
jno
push
and
sub
fwait
xor
cmp
jno
mov
jno
je
sbb
pop
and
push
inc
jo
dec
pop
push
mov
jne
jno
cmp
dec
roll
scas
jno
push
jmp
or
cmp
dec
pop
mov
popf
daa
push
fidivs
jno
xchg
insl
fldl
fmul
nop
test
pop
test
push
jmp
jge
push
das
sbb
mov
aam
mov
jno
stc
pop
outsl
lds
lods
xchg
or
or
imul
xchg
cmp
push
and
mov
popa
push
push
mov
mov
or
jno
cmc
mov
jno
inc
xchg
nop
cmp
sub
xlat
mov
sub
push
or
cli
mov
lods
test
push
jno
andl
mov
ret
mov
push
mov
pop
pop
pop
roll
cmp
adc
xchg
push
jbe
jg
in
jno
xchg
inc
ds
repnz
xchg
jno
popa
arpl
ljmp
andl
aam
je
rcrb
jae
jno
lea
dec
jmp
xor
mov
pop
call
movsb
jno
test
adc
fsubr
jno
popf
sub
loope
xchg
das
jmp
dec
xlat
jno
cwtl
xorb
jno
les
lret
jno
adc
popl
repz
movsb
sub
shll
xchg
push
lea
inc
int
jnp
mov
adc
orl
push
fstps
sub
icebp
out
xchg
outsl
and
inc
out
jno
xchg
ret
xor
inc
mov
std
jne
movsl
dec
jmp
jno
es
addb
pop
xor
aaa
je
imul
xor
adc
pop
bnd
dec
sbb
jg
orb
daa
scas
repnz
movsl
pop
push
push
nop
loop,pt
out
jno
inc
adc
mov
dec
push
lret
lcall
fs
jno
mov
cwtl
dec
pop
in
push
mov
push
mov
popa
enter
in
jae
and
fidivrl
mov
adc
outsl
adc
icebp
cmpsl
lods
adc
mov
add
dec
xor
cli
push
les
jno
lods
sbb
sbb
or
imulb
add
aaa
push
xor
and
mov
sbb
gs
adc
inc
lods
je
xor
lea
fistps
jno
sub
aad
jge
cmpsb
mov
mov
pop
ja
ret
nop
or
mov
mov
leave
mull
push
cmp
mov
push
int3
mov
in
mov
mov
adcb
jl
inc
jno
cmp
xchg
mov
sbb
cmc
and
push
pop
inc
popf
sub
pop
nop
out
xchg
xlat
jmp
pushf
shlb
insb
insl
lods
sub
fwait
inc
out
push
cli
rorb
cmp
mov
fisubrs
cmp
dec
stos
mov
daa
pop
mov
mov
push
cmp
mov
jno
mov
cmp
jno
xchg
jl
mov
push
add
mov
subl
test
push
loopne
setns
scas
xchg
push
popl
jns
fwait
rorl
jno
push
cmp
aas
xchg
es
xchg
pop
lods
jb
inc
push
nop
mov
sub
bound
imul
outsb
jecxz
dec
ret
dec
jno
ds
cmp
or
dec
jp
jns
fisttpll
mov
mov
call
inc
push
mov
cmp
repz
outsl
jno
sub
xor
jno
mov
in
cwtl
fidivrl
jno
lea
shll
out
fs
scas
iret
scas
call
sub
mov
jno
cmpsb
ret
pop
mov
sbb
jno
ret
hlt
jecxz
adc
fwait
neg
add
mov
inc
ja
mov
leave
lahf
jns
xor
mov
ljmp
shl
out
mov
pop
jmp
push
mov
pusha
jb
sub
jno
bound
insb
or
lret
and
lea
cli
loope
hlt
mov
push
sub
pop
scas
mov
xchg
js
fldenv
iret
mov
or
xor
rcrl
push
push
popf
push
mov
stos
fsubrl
cmp
or
xor
jno
daa
inc
push
dec
movsl
inc
and
inc
adcl
bound
pushf
popa
lds
and
or
jnp
dec
cwtl
jecxz
push
and
pop
stos
lahf
shlb
loope
into
cmp
gs
or
sar
cmc
dec
inc
adc
push
jno,pt
mov
nop
dec
add
lods
xchg
xlat
shll
mov
mov
mov
sub
in
mov
xorl
xchg
shlb
aas
mov
jno
push
xchg
ljmp
out
sbb
xchg
adc
std
jbe
lret
jbe
mov
mov
packsswb
es
inc
hlt
push
ficoms
jno
orl
imul
fnstenv
xchg
cwtl
jno
adc
lods
pushf
jmp
dec
jns
xor
nop
jl
outsb
lahf
adc
adc
mov
dec
adc
in
out
pop
iret
fldl
pop
imul
pop
mov
jne
xor
jg
push
inc
mov
outsl
mov
repz
sbb
jno
lahf
repnz
sub
mov
dec
xchg
ss
jae
int
sbb
and
and
inc
ret
mov
repnz
cmpsb
sub
jne
shll
jno
xchg
call
stos
push
std
ljmp
in
lods
jno
dec
add
jno
cwtl
insl
push
pusha
je
jmp
add
iret
inc
sub
loop
out
dec
jno
lret
sbb
xchg
mov
sub
enter
movsl
in
aam
push
pop
jl
jb
dec
mov
ds
arpl
jno
lcall
int3
add
mov
mov
dec
nop
in
sbb
iret
cmp
mov
or
fiaddl
push
aam
outsl
inc
ret
jno
or
inc
stc
in
jno
mov
pushf
push
dec
jmp
sbb
adc
out
inc
xor
jl
not
ret
inc
sbb
leave
jno
cmp
shr
jne
adc
adc
jp
jnp
mov
inc
sti
movsb
mov
jno
xorb
lods
sahf
xor
inc
jb
cmp
aad
lods
shll
sbb
xlat
call
lcall
jno
xor
lret
addr16
jno
cmc
fisubrs
push
dec
mov
jno
js
hlt
fdivs
shrl
jns
imul
xor
lret
dec
loop
adc
loopne
sbb
mov
fcoms
imul
stc
xchg
jecxz
jae
jno
rorb
jno
aam
xchg
ret
jno
stc
and
dec
gs
jno
push
xchg
cmpsl
subb
push
jno
lock
pop
fsts
lcall
sahf
test
push
pop
inc
inc
push
jno
ret
push
xchg
jl
sarb
pushf
jge
jns
or
add
pop
int3
stc
in
sbb
int
or
jno
cmp
jno
jl
ds
dec
lret
mov
mov
imul
mov
jp
adc
jecxz
aaa
adc
pop
xchg
je
mov
sahf
subl
add
popa
adc
cmp
xchg
cmp
cmp
jp
inc
sub
stos
mov
scas
sub
call
inc
outsl
loopne
jge
aaa
xchg
popa
insl
aas
mov
addr16
jns
popa
in
and
cmp
xor
imul
sbb
sbb
nop
iret
sbb
lahf
test
stc
movsb
add
repnz
jbe
pop
enter
shll
mov
scas
fdivs
mov
jbe
cmpsb
push
adcb
imul
cmp
sbb
rcrl
jno
add
out
cld
jo
ret
scas
dec
mov
jae
jns
or
ror
jno
lcall
jno
pusha
loope
sahf
sub
jle
jno
lahf
rorb
push
dec
das
js
sbb
mov
or
push
dec
out
scas
adc
pop
notl
daa
pushf
jg
popf
outsl
jno
push
pop
out
inc
fmull
sub
sbb
xchg
in
jp
jmp
xchg
clc
push
imul
test
jmp
sbb
gs
movsb
mov
jno
push
lock
mov
and
in
fs
inc
jl
into
mov
jno
mov
dec
xchg
icebp
ffree
inc
hlt
test
jge
test
adc
outsl
mov
ret
aaa
jno
dec
dec
cli
out
and
icebp
cmp
push
stc
jno
popa
mov
jno
xchg
mov
fbstp
mov
dec
lret
sbb
xchg
mov
cmpsl
xchg
jns
scas
jbe
inc
cmp
rcrl
stos
and
mov
adc
in
xor
subl
imul
jno
shlb
adc
adc
xor
sub
jno
jp
xor
insl
jecxz
scas
mov
popa
pop
cmp
dec
jg
pop
movsb
push
sub
stos
clc
push
hlt
out
lods
xchg
add
pushf
das
jno
test
jge
jno
xor
enter
jno
xchg
ret
adc
sbb
out
pop
mov
aas
jno
xchg
dec
jae
push
sbb
int
stc
pop
mov
mov
jno
clc
loopne
arpl
in
jno
sub
push
inc
xchg
cld
jno
jg
inc
push
subb
rcll
fwait
std
jnp
adc
jno
xor
or
test
jno
sub
xchg
mov
jno
mov
dec
pop
test
leave
xor
call
leave
jns
stos
adc
jno
xchg
sbb
jb
sbb
push
pop
jno
pusha
and
inc
xor
jle
jbe
shll
sub
jnp
sub
jns
pop
ds
jnp
scas
int3
jae
mov
fisubrl
jns
adc
xor
jno
adc
push
add
jno
cmp
pushf
mov
jno
push
or
adc
sbb
movsb
divb
not
dec
push
outsl
adc
lea
test
int3
jno
lds
push
or
sbb
dec
mov
push
pop
xchg
out
xor
cmp
mov
jno
jb
mov
jno
cmpsb
sbb
add
scas
test
pop
jmp
dec
je
jno
push
addr16
adc
push
mov
fs
sbb
pop
es
in
sub
mov
cs
mov
orb
ja
addr16
xchg
mov
sbb
jno
pop
lea
cmp
or
jmp
jnp
shrb
scas
cld
leave
loopne
xchg
repnz
fisubrl
cmc
mov
push
cmc
jns
xor
jno
mov
jno
or
hlt
ja
stc
inc
nop
insb
aad
and
subb
jno
cmpsl
out
cmp
dec
dec
scas
stc
xchg
jne
xor
and
sahf
insl
fwait
jo
xchg
aaa
lret
pop
jecxz
add
dec
je
xor
jno
push
les
jno
xchg
nop
mov
gs
xor
aam
or
mov
add
repnz
jecxz
stos
jno
dec
sub
mov
call
jp
mov
in
jno
cmpsl
jle
out
test
shr
and
xlat
inc
jno
aad
cmp
repz
outsl
adc
sbb
aam
jnp
mov
adc
jne
les
div
bound
sub
fs
sti
add
jno
xchg
xchg
test
cmp
add
pop
jno
jle
imull
xor
inc
cltd
btr
mov
inc
lods
out
mov
and
jg
push
testl
movsb
jecxz
push
subb
inc
inc
mov
jg
rcll
jne
pop
ss
nop
lret
cld
pop
out
in
popa
adc
fwait
popf
aaa
inc
arpl
std
shrl
or
add
test
and
cmp
mov
call
rcll
lods
mov
or
jno
out
sahf
jns
sbb
daa
jno
cmc
dec
popf
mov
insl
dec
mov
xchg
adc
or
dec
jno
push
xchg
and
cmp
mov
jg
lds
in
adc
or
mov
xor
lea
and
popa
lahf
sbb
ja
and
into
int
xchg
jmp
mov
pushf
jmp
inc
or
sbb
jno
ja
nop
lea
adc
jno
xlat
sbb
jno
or
sahf
push
scas
dec
inc
sub
cmp
lret
fadds
popa
pop
sahf
shlb
xor
das
stc
push
lods
jae
xlat
jno
sub
pop
jno
data16
leave
repnz
push
stos
flds
imul
clc
in
jno
fs
adc
or
adc
roll
fimuls
jb
mov
or
inc
inc
icebp
jmp
jno
das
pusha
xor
scas
cwtl
out
test
jno
out
sbb
loop
fadds
hlt
movsl
inc
inc
xchg
das
lahf
mov
or
loop
dec
out
dec
ret
mov
sbb
push
adc
sbb
push
jno
jmp
lods
repnz
push
mov
push
outsb
lret
mov
adc
andl
sub
lock
fs
mov
lahf
stos
and
lods
shld
and
jno
dec
outsb
push
es
cmpsb
sahf
jno
lods
sub
je
push
push
jno
fdiv
icebp
mov
adc
and
jno
jo
sti
and
pushf
jno
adc
adc
add
push
push
mov
popf
adc
outsl
and
jmp
insb
pop
jno
mov
jmp
mov
push
stos
pop
inc
imul
mov
mov
jno
or
xchg
jbe
mov
sbb
adc
std
push
add
dec
pop
pushf
stos
push
xchg
jno
pusha
ret
add
lods
jmp
imul
push
jno
mov
mov
jno
adc
sbb
sbb
mov
mov
lahf
gs
sti
jmp
add
jno
ret
sahf
pusha
mov
jb
jno
and
ds
cmpsb
mov
pop
push
sub
and
sbb
xor
jno
push
adc
addr16
lods
rorb
xor
popf
dec
mov
bound
cmp
pop
in
add
push
movsb
aad
jne
xchg
inc
andb
push
sbb
xchg
jns
mov
cmp
jno
xchg
pop
inc
sub
cmp
xchg
popa
xchg
jno
mov
pop
cmp
out
aas
daa
test
mov
adc
cmpb
data16
lock
mov
fldl
jns
int3
das
adc
movsb
jge
jnp
push
rcrl
xchg
ret
jno
jl
xor
and
popa
scas
pop
push
out
into
adc
mov
scas
add
mov
test
add
jno
sub
cmpsl
popl
push
in
inc
jge
bound
pop
cs
xchg
or
dec
es
mov
jno
cmp
mov
mov
jp
addr16
loopne
in
rcll
stos
popa
sub
inc
mov
sub
outsl
mov
adc
xor
fnstsw
icebp
arpl
cmc
in
ss
mov
jno
push
popa
iret
inc
adc
out
add
mov
addps
jge
push
and
fistps
jns
mov
fdiv
xchg
mov
ret
push
cltd
lock
jmp
sbb
dec
xor
jno
je
push
adc
roll
add
jno
cmp
lods
loope
dec
inc
sub
mov
jno
mov
add
push
es
or
loopne
testl
fstpl
shlb
push
js
dec
xor
mov
jno
fiadds
inc
jecxz
pop
jno
shl
daa
in
popf
jno
call
repnz
int
test
push
sub
ret
hlt
mov
cmp
ja
sahf
das
bound
jg
mov
cmp
or
pop
insb
lock
jno
dec
jecxz
jne
loopne
jno
lahf
sub
mov
jno
mov
jno
push
cmc
daa
lahf
filds
aas
lea
popa
rclb
jno
mov
xlat
sub
pusha
mov
lcall
cli
xor
pop
dec
movsl
cmp
push
xorl
iret
data16
scas
mov
adc
mov
jno
push
ret
pop
push
push
das
cmp
inc
jmp
mov
xchg
in
push
outsl
dec
stos
jne
nop
mov
lds
jbe
adc
cwtl
xor
mov
and
xchg
mov
bnd
mov
adc
jp
nop
jg
outsb
dec
enter
dec
jno
xchg
into
pop
dec
pusha
iret
push
jmp
pop
movsb
test
out
ja
lock
scas
inc
out
push
dec
in
sub
mov
fs
pop
imul
adc
and
outsl
jno
sub
nop
mov
shrl
and
outsb
inc
scas
pop
mov
mov
ds
push
pop
scas
mov
in
xchg
dec
or
into
aam
stos
fadds
bound
mov
dec
pusha
jno
pop
es
xchg
cwtl
xchg
jno
ljmp
scas
mov
iret
jge
loop
daa
jno
or
cmpsb
jno
and
arpl
movsl
test
push
cmpsb
aad
jno
sub
lock
aam
jbe
mov
clc
jno
mov
fsubrl
insb
pop
ja
out
in
xchg
pop
jo
call
mov
mov
jno
mov
mov
jno
or
icebp
xor
adcl
fwait
ljmp
sti
dec
cwtl
ret
push
jno
add
cltd
sub
sbb
test
sub
imul
pop
lea
adc
int3
fisubl
mov
sbb
sbbb
and
mov
jne
inc
insb
jno
enter
pop
jmp
jno
dec
mov
fists
loopne
rcrl
jnp
xor
daa
xchg
andb
mov
ficoms
add
in
sbb
ja
in
outsl
fnsave
pop
jno
rcrl
adc
push
jno
add
mov
mov
pop
out
inc
jno
jo
mov
roll
jno
pop
sbb
and
jno
mov
jp
jno
xor
inc
out
shl
xor
inc
stos
sub
push
test
lretw
fnstenv
pop
push
jno
loopne
sbb
mov
jb
inc
mov
jne
xchg
enter
jnp
nop
outsb
ret
jle
cmpsl
das
or
mov
stc
fsubr
lret
std
cld
lea
or
popa
test
or
jo
jno
mov
push
cmp
mov
sets
add
aaa
decb
mov
xchg
aas
or
mov
aad
insl
aam
jno
or
jae
add
cmp
inc
and
cmp
fidivrl
mov
pop
jp
mov
jno
sbb
jmp
jno
mov
ja
jge
jbe
inc
stos
push
cmp
iret
xchg
nop
dec
rolb
dec
fidivs
mov
fbld
clc
inc
pop
or
lret
ss
inc
mov
mov
xor
sahf
iret
jno
push
mov
jno
push
and
sbb
xor
mov
jno
or
mov
mov
mov
testl
xchg
aad
in
nop
fwait
subb
repnz
mov
jno
sub
dec
jno
add
aad
loope
adc
jmp
push
lret
push
scas
jno
inc
pop
or
out
jmp
jno
lahf
jae
test
int3
sub
xor
lret
js
pop
test
inc
mov
or
jmp
hlt
pop
pop
ret
jecxz
push
pop
cmpb
push
out
test
or
loope
jmp
test
cs
shlb
and
into
in
mov
adc
mov
mov
cmp
lock
push
lods
popa
or
mov
aas
lahf
inc
or
ja
cwtl
jno
into
sbb
repnz
or
jo
cmc
rcr
scas
xor
sbb
ds
push
nop
jno
pop
xchg
pop
ret
jne
enter
in
mov
inc
push
daa
cmp
stos
cwtl
sbbl
sahf
jno
inc
mov
lods
xor
jno,pn
pushl
out
es
jno
pop
add
or
cmpsl
xchg
jno
out
jbe
outsb
or
sub
stos
popa
sbbb
in
sbb
inc
mov
xor
andl
imul
push
insb
rcrb
lret
popf
mov
shrl
xchg
test
jae
fisttpl
sub
xor
in
out
xchg
pop
cli
pusha
jo
repnz
pop
mov
and
sub
imulb
lret
movsb
test
xchg
xorl
cli
loopne
es
mov
int3
xchg
jno
mov
bound
sub
ja
xchg
mov
mov
push
pop
and
mov
adc
jno
sub
fcoml
push
ja
push
ss
pop
jl
push
jno
pop
jg
mov
cld
stos
insb
movsb
loop
lock
sti
std
js
sub
aas
es
push
pop
add
fcomip
xlat
jp
mov
in
imul
insl
in
mov
dec
jns
push
and
dec
jnp
imul
call
dec
ret
fistps
daa
jno
fisubl
jbe
cmc
lcall
fwait
rcrl
jno
mov
lea
jno
xchg
ljmp
cmp
push
inc
jae
and
imul
mov
lock
icebp
int3
jns
push
dec
addr16
hlt
cmp
mov
ljmp
rol
je
xor
movsb
sub
and
lret
ds
scas
inc
shl
sarl
jge
das
imul
call
or
testb
add
push
movsl
mov
imul
je
shlb
push
jno
loopne
int
pop
test
pop
jp
pop
ja
addr16
test
cmpsl
out
sbb
jne
ret
jge
push
in
jnp
push
jg
or
pop
mov
outsl
push
xlat
sbb
sub
jns
push
and
pop
aad
push
bnd
sub
repz
xor
fists
daa
shlb
xchg
lods
inc
xchg
jno
push
dec
push
inc
out
and
dec
stc
cmp
pop
jno
inc
into
data16
sbb
mov
pop
adc
jo
sbb
jno
xchg
in
push
jnp
cld
jno
ret
in
cmpsl
sarb
xor
mov
mov
mov
test
pop
int
mov
and
inc
xor
and
hlt
and
sub
lods
or
mov
push
xor
out
int3
aam
movsb
sbb
add
out
orb
cmpb
inc
insl
mov
fwait
movsb
and
aaa
in
scas
jge
lea
add
adc
inc
jae
mov
mov
xor
outsl
decl
popa
imul
add
or
cs
pop
and
ss
cmp
fs
ljmp
push
sti
jno
add
fmuls
pop
dec
add
insl
cli
jno
cltd
jae
adc
sbb
scas
rcr
xchg
out
sti
js
push
int
cmp
xor
push
cmp
mov
push
outsb
cltd
scas
adc
rcrl
cmp
pop
sti
jbe
ljmp
jno
arpl
sub
lret
aam
mov
and
and
inc
int
rolb
ljmp
sbb
fsub
mov
or
dec
pop
pop
jmp
inc
xor
popf
pushl
xlat
fdivr
inc
mov
js
push
jno
jmp
lret
std
pop
jno
and
call
jno
bound
jno
mov
mov
jno
lock
ret
ss
lret
and
repz
out
popa
into
xor
adc
or
sbb
cmc
jno
ja
inc
imul
icebp
push
nop
std
cmp
insb
scas
jmp
lret
sbb
decl
bound
jno
inc
fwait
mov
cmp
loope
pop
subl
jno
shlb
mov
push
dec
into
pop
call
icebp
mov
adc
stos
push
insb
xchg
jp
mov
xlat
clc
inc
leave
push
sbb
jno
nop
mov
adc
in
mov
ljmp
mov
mov
jno
mov
movsl
insl
jno
movsb
int3
adc
mov
xor
cmc
pop
xor
rsqrtps
adc
fcmovnu
nop
xchg
jge
call
xor
out
sub
insl
push
das
jo
cmpsl
jno
repnz
jno
inc
and
push
adc
add
xor
sub
out
xchg
into
jno
insb
push
js
int
jno
sti
mov
jmp
ss
jnp
xlat
popa
push
pop
sub
lahf
jno
incl
push
jne
jno
sbb
out
jno
adc
jne
dec
stos
add
cmpsb
inc
pop
cwtl
push
jno
or
pop
fbstp
xor
push
mov
or
jb
add
xor
div
and
and
jns
mov
bound
enter
movsl
add
push
cli
jno
mov
jb
adc
jae
jno
sbb
fs
in
pushf
pop
shll
cmp
xor
mov
and
int
dec
jno
xor
std
inc
mov
out
imul
jno
mov
push
jo
lea
cmp
cwtl
xchg
pushf
or
fidivl
pop
cmp
xchg
xchg
mov
lods
fcomps
jmp
jno
cmc
andl
aaa
in
mov
jge
push
int3
sbb
nop
and
and
or
inc
jl
sub
xor
mov
sahf
enter
jb
mov
jno
cwtl
into
mov
jns
fs
loopne
pop
dec
pop
ret
xor
jno
xchg
outsl
mov
mov
out
mov
movsl
jae
sbb
cmpsb
hlt
in
int3
shlb
add
push
cs
push
jle
jl
mov
adc
mov
xchg
mov
mov
jno
fcoms
hlt
popa
sub
xorb
inc
jl
js
divl
sahf
push
lods
out
xor
push
and
aas
pop
in
dec
pop
imul
lea
idivl
loopne
jmp
mov
pop
push
sub
lea
inc
lock
and
xchg
adc
jno
ret
lcall
sarb
jno
pop
movsl
insb
cmp
inc
test
xchg
jae
pop
mov
dec
scas
jno
mov
xor
lods
fwait
mov
icebp
aas
jmp
add
jno
aam
xchg
jge
jg
sbb
cmpsl
or
and
in
mov
mov
int
push
xor
scas
fstl
clc
pop
mov
jecxz
mov
cmp
outsb
cmp
insl
xchg
nop
mov
rcl
cwtl
xchg
add
mov
and
pop
or
push
rcll
ss
loopne
mov
jb
fs
mov
iret
mov
mov
inc
dec
bnd
add
mov
xor
add
cmp
mov
sbb
jno
icebp
adc
jno
xchg
js
rorl
sbb
inc
inc
std
xor
adc
shl
and
xorb
and
ljmp
cld
cltd
xor
dec
aaa
mov
jno
fwait
push
mov
adc
jp
mov
dec
or
movsl
loope
mov
ja
repnz
stos
sub
or
shll
and
adc
fnstenv
out
xor
nop
push
mov
leave
mov
jno
cmp
test
lock
or
mov
mov
push
popa
in
sbb
pusha
jno
mov
adc
jno
lds
cmp
or
lock
sbb
test
adc
rol
bswap
dec
add
sbb
jno
adc
pop
fwait
cltd
inc
sahf
jno
sti
ds
jno
les
popa
xlat
test
out
jne
xchg
bnd
sbb
jge
cmp
adc
lret
rcrb
mov
push
bound
nop
js
pop
ja
imul
xchg
out
push
jbe
jno
leave
jg
xor
loop
sub
in
fs
xor
adcl
mov
repz
rorb
xchg
mov
pop
dec
jno
lret
test
dec
mov
push
test
cmp
jnp
xchg
das
test
xor
jno
std
ficoms
movsb
cwtl
int3
pushl
jno
cmp
into
loopne
inc
leave
push
push
in
push
and
test
or
jno
inc
fs
mov
jno
inc
adc
shrb
popa
dec
inc
inc
sub
ror
xchg
out
call
int
lock
adc
push
scas
pop
clc
sbb
push
test
cmp
movsl
xor
divb
and
jno
stos
loopne
xor
lods
insb
add
filds
je
cwtl
cs
mov
aas
jno
cmpsl
out
enter
sub
sahf
loop
sub
dec
jno
push
out
and
mov
add
jno
enter
movsl
jno
lock
push
adc
sub
mov
and
in
jns
xchg
jmp
jno
sbb
jno
sbb
in
shl
out
pop
adc
or
adc
imul
jno
das
stos
sbb
icebp
in
lret
xchg
dec
jg
mov
dec
popa
push
mov
popa
and
loopne
jne
jno
and
dec
push
mov
cmp
sbb
jbe
mov
int3
mov
scas
ljmp
push
lret
sti
je
jno
inc
cltd
xchg
xor
setno
mov
mov
stos
arpl
and
sbb
mov
call
jno
popl
jno
push
mov
bswap
mov
dec
dec
mov
jb
cs
xor
andb
loope
hlt
cwtl
pop
push
jge
mov
sbb
push
pop
mov
xor
pop
pop
scas
xchg
lods
cmc
jg
sbb
pop
jge
jno
lcall
lods
out
test
pop
pop
sub
sbb
std
mov
jno
adc
cmp
adc
inc
and
inc
sbb
lds
xor
stos
push
movsl
ret
jbe
cmpsl
sbb
add
insl
sub
sbb
in
jae
div
pop
push
test
mov
push
cltd
sbb
lret
arpl
mov
mov
stc
and
or
push
repz
clc
jno
adcb
mov
jno
add
or
jno
sarl
jecxz
jg
push
dec
fsubl
cmp
jp
xchg
or
pop
jge
leave
stos
scas
push
jno
pusha
add
mov
mov
scas
xchg
movsb
outsl
xchg
imul
jno
pusha
mov
es
fldln2
loop
out
pop
push
scas
nop
ss
cmc
inc
fs
into
add
jbe
fwait
psllw
cmp
pop
lea
aaa
das
cltd
stos
or
jno
push
aas
sbb
mov
out
adc
jbe
adc
jae
mov
jno
call
lcall
mov
pop
je
sub
jg
sub
fwait
xor
arpl
lea
lret
xor
out
xchg
gs
push
loope
icebp
popf
jno
sbb
sub
loop
mov
jb
js
rolb
jno
pop
adc
imul
fists
fcomi
daa
popa
add
enter
mov
in
push
test
push
int3
je
lods
jno
clc
push
cmp
mov
fmuls
jno
pop
lds
jle
mov
jno
adc
cmp
lock
in
int3
mov
jno
leave
and
dec
scas
lahf
mov
aaa
xchg
into
popa
in
jno
jbe
xchg
mov
adcb
mov
adc
xchg
push
dec
nop
testb
insb
sub
jbe
mov
adc
mov
repz
movsb
adc
fisttpll
mov
andl
add
add
jno
daa
lcall
data16
push
mov
cmp
push
jno
lss
jnp
mov
jg
popa
pop
idivb
in
fcmovbe
jno
mov
fildl
imul
pop
shrb
repz
cmp
xchg
dec
pop
xchg
addr16
push
in
jno
dec
inc
in
push
push
jno
add
leave
adc
jg
push
out
jne
std
inc
ljmp
js
push
mulb
add
les
mov
and
out
rep
jle
enter
push
push
sub
inc
jne
pop
pop
jno
push
sbb
mov
cmp
xor
lcall
fcmove
imul
ja
inc
dec
sub
jno
adc
mov
jno
dec
hlt
sbb
es
loopne
test
je
out
fistpll
ret
mov
adc
push
xchg
cmpb
adc
and
mov
imul
push
inc
push
push
das
mov
mov
sbb
outsb
mov
jle
aas
mov
sarl
divl
pop
out
jne
in
jno
fstpl
pop
hlt
mov
and
mov
jl
daa
divl
fidivl
nop
push
cld
sbb
jne
push
jno
insb
pop
cmp
jnp
pushf
in
dec
das
sbb
jle
sti
ret
fstl
push
lods
sbb
pop
sbb
jb
divb
pop
je
das
roll
lea
jge
cltd
and
jno
dec
add
sbb
push
adc
pop
cmp
inc
jno
popa
imul
in
sahf
jno
mov
adc
lds
cmpsb
lret
adc
fdivrl
adc
ss
mov
push
sbb
jg
fimuls
push
dec
mov
in
mulb
imul
ucomiss
pop
mov
pop
jl
ficoml
xor
sbb
ljmp
add
push
aam
lds
mov
jno
shlb
in
les
jno
push
cmpsb
dec
push
inc
cmpb
add
stc
dec
icebp
nop
fldenv
mov
adc
jns
jno
hlt
das
push
jae
and
jno
and
pop
rcll
jnp
repnz
ret
jbe
mov
pop
les
sub
call
nop
lret
adc
jg
jno
push
leave
mov
rol
add
mov
dec
sub
jno
sti
push
aas
sahf
inc
addr16
jno
pushf
push
dec
test
into
clc
mov
sti
aaa
jno
jecxz
sar
dec
stc
and
jb
ljmp
jp
movsl
jno
fisttpll
inc
addr16
neg
mov
pop
fs
test
fsubs
sbb
mov
add
movsl
fucomp
jno
pmulhw
daa
inc
ss
ljmp
jno
xchg
jnp
loope
movsl
test
cld
cmp
sbb
mov
mov
jnp
cltd
jno
inc
pop
jns
insb
sbb
jno
or
sub
cmp
sti
divl
sub
dec
mov
and
outsb
jp
push
xadd
adc
mov
jno
add
dec
jno
stos
imul
push
mov
lret
jno
scas
mov
inc
or
jmp
push
dec
sub
bnd
dec
fists
sarl
lods
sbb
pop
lods
out
and
daa
jecxz
mov
insl
outsl
cmpsl
xchg
jno
xchg
shrl
jp
into
jmp
fldt
mov
sub
mov
dec
stos
lds
pop
push
mov
enter
jno
sbb
mov
pop
dec
xorl
dec
lahf
rorl
cmpsb
lods
or
imul
or
mov
cmc
pop
jno
xchg
inc
enter
cmp
dec
lea
insb
fnsave
jo
lret
mov
or
nop
cli
inc
dec
imul
mov
sub
push
rcr
enter
out
mov
cmp
jno
notl
aam
xchg
aaa
add
jno
mov
cmc
stos
xchg
push
dec
pcmpeqb
in
out
mov
mov
jno
mov
lcall
sub
clc
xor
jl
bound
or
insl
jno
xchg
outsl
xchg
cli
pusha
bnd
out
mov
xlat
adc
adc
or
jno
or
sub
inc
arpl
test
es
fwait
jbe
les
jns
adc
int
jle
jno
and
test
xchg
aaa
nop
sbb
jno
mov
push
rcrb
mov
adc
imul
ficomps
insb
sub
inc
jno
ret
jg
mov
jmp
stos
cli
xchg
sbb
scas
mov
mov
jno
subl
outsb
fisubs
rcr
mov
arpl
loop
xchg
sub
arpl
jno
or
inc
mov
cs
lock
mov
movsl
loop
pop
cld
push
dec
ss
out
push
outsb
cmp
cmp
jb
jae
lcall
clc
jno
test
mov
popa
sbb
pop
push
push
in
push
punpckldq
push
mov
mov
pop
hlt
jg
ficoms
ficompl
mov
mov
push
leave
lea
int
repnz
cs
imul
pop
in
ret
loopne
dec
lods
cmpsl
sbb
inc
cmp
leave
in
dec
push
xchg
lea
enter
dec
fmul
jbe
xor
ja
sbb
lahf
mov
inc
sti
jno
test
rcl
pop
xor
sar
sub
jecxz
sbb
loopne
push
cmpsb
outsl
add
int
lret
in
popa
cli
int3
mov
cs
adc
lret
test
addr16
jno
xchg
fisubs
sbb
sbb
aad
popf
add
push
arpl
pop
loope,pn
movsb
andb
stos
jl
inc
xlat
push
fwait
dec
mov
sbb
subl
sbb
sub
mov
jno
in
xor
inc
in
shll
lods
xchg
dec
rcrl
jb
dec
outsb
jno
loope
inc
mov
sub
dec
data16
mov
ja
mov
jno
push
hlt
mov
add
lcall
lods
jnp
push
iret
ret
cmc
lcall
xor
push
jne
pop
adc
sub
push
data16
mov
lret
mov
inc
xor
push
popa
outsl
and
lods
xor
aas
and
rcll
gs
in
aam
cmp
mov
push
ja
in
jecxz
int
test
pushf
push
jae
xchg
in
jp
add
mov
pop
ljmp
call
js
leave
fwait
cmp
es
jge
test
in
jne
popa
mov
add
push
adc
cmp
jno
mov
out
js
sbb
pop
fs
cmpsb
sahf
jno
adc
cmc
sub
jne
jno
push
cmp
iret
push
dec
ret
pop
aaa
cltd
ja
push
lea
push
sbb
roll
xlat
data16
mov
les
imul
sbb
sbb
jno
dec
ljmp
cld
gs
pop
dec
xchg
adcl
fwait
jp
mov
arpl
jae
lret
dec
sub
test
jno
arpl
cmpsl
or
mov
cmp
imul
roll
lods
or
jne
out
jns
loopne
inc
sub
mov
pushf
nop
insl
sbb
and
arpl
popa
test
or
and
jb
iret
and
and
xchg
bound
loop
lds
and
mov
fsts
lock
sub
push
dec
mov
mov
aad
in
xorl
pop
into
push
jae
mov
or
andl
cli
ds
push
ljmp
jne
xlat
std
jo
mov
ret
lock
jno
inc
add
cmp
push
fnstcw
popa
mov
sbb
mov
shrb
jno
incl
bound
add
cmp
jle
xchg
pop
fsubl
jno
mov
leave
shlb
stos
jno
je
jp
add
cmc
push
xor
add
das
jge
hlt
mov
xor
scas
shr
pop
jno
xchg
cmp
xchg
pop
sub
xchg
gs
fildl
lods
movsb
jno
xor
adc
mov
mov
das
out
push
and
arpl
xlat
jne
jbe
les
mov
mov
jmp
mov
movsl
into
mov
xchg
repnz
jno
push
iret
fs
mov
xlat
fstl
ja
push
clc
int
out
lea
les
push
dec
adc
negb
cltd
hlt
jle
fs
mov
xor
std
lea
lcall
lea
imul
fbstp
fldenv
fcoms
jno
outsb
jne
sahf
or
dec
xor
mov
cltd
push
pop
imul
imul
movsl
rorb
jns
out
xlat
jno
inc
push
or
jno
lcall
or
fsubr
mov
loopne
pop
jno
testb
mov
daa
sub
inc
mov
jo
mov
push
jno
xlat
sbb
shlb
dec
in
jno
adc
pushf
jno
call
out
inc
add
std
lods
push
shr
sbb
adc
jo
repnz
popa
loopne
jno
mov
dec
jge
jb
jmp
xchg
lret
loopne
jno
in
les
test
dec
into
lahf
adc
xchg
aaa
aad
add
or
pushf
js
jno
lcall
jno
fs
cltd
push
outsl
pop
scas
inc
pop
mov
jno
inc
decl
jno
addr16
pop
cmp
pop
or
mov
pop
add
insl
in
imul
mov
xchg
stos
xor
jae
jno
jae
mov
jno
xchg
mov
push
jno
cmpsb
aam
add
xchg
in
adc
jno
ficomps
shlb
imul
mov
out
xchg
pop
inc
jno
cmpsl
aam
loop
mov
shlb
ret
or
jno
hlt
insb
clc
out
inc
jne
jno
and
or
adc
int
cmpsl
in
addb
jmp
push
mov
and
and
cli
test
gs
fadd
jno
mov
jp
add
iret
jno
push
shll
aas
jno
adc
xchg
xchg
xchg
ds
popf
fcom
popa
pop
in
mov
add
aas
mov
in
sub
ss
cmp
outsl
jno
xchg
sub
jmp
fwait
subl
call
inc
xchg
mov
jno
xchg
add
jle
jno
loop
mov
jno
mov
in
ret
pop
push
leave
mov
sbb
xchg
addr16
cmp
inc
add
jno
dec
sbb
xor
cltd
mov
jns
sbb
jns
mov
cs
mov
push
jo
cmp
pop
sahf
jno
push
ficompl
xor
push
xor
movsb
repz
jno
in
dec
mov
jno
stc
or
adc
mov
mov
cmp
sahf
push
jno
arpl
add
out
scas
shrl
je
das
aas
cmc
ja
fidivs
sub
cwtl
or
add
shll
aas
mov
es
mov
jle
add
daa
jno
add
popf
mov
inc
insl
jno
dec
aas
fsubl
sarb
or
notl
push
popl
and
imul
inc
popa
cmp
jae
lds
ljmp
xchg
lock
shll
stc
std
lahf
sbb
ja
push
jg
into
repz
push
lret
jno
or
scas
or
sbb
jo,pt
jno
nop
mov
jno
xlat
adc
xchg
mov
popa
push
test
xchg
imul
shll
jno
into
add
bound
push
sbb
push
mov
ljmp
push
pop
xor
fwait
cmp
sub
jbe
loop
mov
jmp
and
sbb
mov
mov
ret
push
call
and
xchg
imul
rol
stos
jno
mov
sub
adc
out
jmp
lods
push
jno
xor
mov
pusha
xor
cmp
push
in
movsb
pop
imul
out
insb
dec
add
mov
and
pop
jno
cld
int
out
jno
loopne
cli
mov
in
dec
adc
mov
pop
jno
push
inc
sub
test
xchg
jno
insl
sbb
outsl
jns
jno
xor
cmpsb
mov
nop
mov
clc
xchg
mov
cs
or
jno
or
jg
imul
push
jge
jno
mov
sub
adc
or
scas
stos
jne
pop
aam
add
mov
mov
xor
test
and
mov
jne
imul
mov
xor
pop
popf
mov
out
repz
popa
icebp
jp
and
lcall
jno
rcr
leave
xchg
pop
jno
cmpsb
in
dec
xor
push
push
and
mov
andb
es
pop
dec
fimull
jg
sbb
in
jno
mov
pop
cmp
aaa
jno
stos
sbb
mov
movsl
lods
mov
cld
jno
jns
shl
fnsave
dec
xchg
mov
aaa
add
jno
lea
insl
popl
mov
jno
scas
xlat
lret
sbb
jno
sti
jb
inc
push
repz
outsl
sbb
sahf
popa
jo
jb
push
add
aaa
repz
mov
sbb
loopne
dec
jno
pop
pusha
leave
cmc
xor
add
adc
addr16
jecxz
mov
mov
or
sbb
adc
in
jbe
push
push
lods
insb
jecxz
xor
cmpsb
mov
xor
jno
sti
fldenv
jno
call
loop
stos
mov
out
cmpsl
xchg
cmp
mov
rolb
or
cmp
or
dec
out
xchg
mul
dec
jno
arpl
test
lds
data16
ja
fldcw
xchg
push
test
fistpl
jno
inc
sahf
add
and
xchg
movsl
xchg
push
jnp
jb
rol
dec
lods
push
cmpsl
mov
inc
add
aaa
stos
jno
pop
pop
add
and
jmp
test
jno
jo
or
fnsave
mov
jno
add
add
mov
push
das
aas
outsl
jno
in
lods
pcmpgtw
adc
fidivl
fildl
mov
lahf
xor
popa
fbstp
xchg
in
jp
and
jno
test
add
shrl
inc
stos
imulb
push
adcb
xchg
xor
jmp
bound
jns
aad
add
addr16
in
insl
popa
outsl
pop
xchg
jno
ss
push
inc
mov
xchg
in
sti
test
jns
add
scas
adcb
pop
sbbl
jno
aad
jns
test
jno
in
jnp
adc
mov
pusha
push
out
mov
ja
imul
shll
mov
pop
mov
or
xchg
mov
fstpl
dec
clc
ror
push
push
inc
scas
jne
test
dec
in
push
popa
loope
in
jecxz
mov
lock
jns
in
js
mov
xchg
cmpsl
mov
or
mul
pop
xor
fdivl
popf
push
test
fildll
out
jb
fnsave
test
fadds
bound
mov
jno
les
leave
ja
clc
add
jno
cmc
jbe
xchg
jo
or
fwait
loop
addr16
in
fidivl
and
xchg
mov
dec
ja
cmpsb
into
std
pusha
popl
or
inc
push
cmc
jno
loop
inc
sub
rcrb
addr16
nop
mov
and
subl
sub
sub
outsb
cmp
popa
jp
stc
mov
jne
out
daa
fs
nop
add
jno
pop
pop
mov
jge
xchg
pop
pusha
jbe
mov
ror
pop
insl
push
stos
outsb
dec
jno
inc
xchg
in
mov
push
and
mov
insb
xorl
nop
fcmovbe
jmp
aam
jp
nop
adc
jno
jmp
sarl
imul
mov
movsb
cmpsb
dec
jno
adc
add
out
out
ret
jge
outsl
lock
das
xor
inc
test
jno
sub
add
mov
sbb
in
repz
mov
mov
add
push
jl
mov
mov
adc
scas
jno
push
inc
jge
sub
jno
xchg
loope
jg
gs
popf
cmp
adc
popa
paddw
mov
lea
es
popa
jnp
fidivrs
je
out
test
adc
adc
jno
jns
dec
mov
and
outsl
lds
jno
sbb
loop
call
repz
mov
xchg
out
sbb
inc
mov
and
out
jno
lcall
jno
shl
ds
mov
sub
push
add
int
jns
dec
cmp
mov
scas
mov
mov
insl
mov
jno
add
jbe
push
nop
das
repz
lods
gs
pushf
lret
mov
inc
xor
dec
filds
nopl
jmp
stc
mov
cmpsl
mov
mov
stos
mov
xor
dec
inc
jno
sbb
mull
sti
xchg
fwait
jno
inc
sub
out
xor
jecxz
data16
cltd
add
jb
shlb
aad
shlb
dec
sbb
test
jno
pop
cltd
movb
push
andl
mov
shlb
dec
push
enter
add
ficomps
adc
popa
jl
or
dec
mov
and
and
gs
push
jno
test
sub
ss
in
dec
data16
push
sub
shlb
mov
pop
push
and
mov
ds
fidivrl
sbb
addb
jno
fldcw
repz
jno
jecxz
hlt
test
cmpsl
pusha
pop
and
ror
fldenv
sarb
ret
jno
cmpsl
sub
push
add
ror
lret
pop
fs
scas
and
in
test
push
jno
jo
add
lret
pop
pop
scas
shll
jge
incb
jno
push
adc
aas
adc
leave
push
jno
aam
dec
or
and
fs
jecxz
mov
sbb
xchg
out
sbb
scas
jno
loope
add
jb
pop
inc
ret
arpl
rclb
inc
pusha
jno
movb
mov
add
mov
sbb
mov
dec
mov
jno
jne
cmp
iret
outsb
push
fwait
add
hlt
and
jno
aaa
dec
rcrl
xchg
inc
jno
lret
xchg
cltd
dec
out
cli
adc
call
pop
mov
jno
jb
movsb
pusha
add
and
xorl
xor
fildll
inc
jg
shrl
adc
mov
pop
jae
lock
cld
push
imul
jno
ret
fwait
movb
arpl
mov
xchg
and
jns
lea
add
xor
out
test
jns
das
mov
push
or
psrlq
clc
pop
jno
jle
dec
or
loopne
dec
pop
inc
leave
add
jp
xchg
popf
std
push
jno
loope
inc
fsubl
jne
test
jnp
sub
lret
push
push
leave
adc
and
jne
mov
sbb
aas
xor
and
jecxz
push
push
and
lea
imul
lahf
inc
mov
pusha
into
adc
cwtl
add
or
jg
jno
or
inc
pop
mov
xchg
xor
jno
inc
inc
push
xlat
push
outsl
shlb
xor
or
cli
lods
or
insl
xor
ss
jmp
popa
xchg
jp
rcrb
xchg
aas
jno
ljmp
stc
hlt
pop
insb
mov
cmp
jbe
jno
test
enter
jno
paddsb
in
jno
repz
dec
out
and
pop
out
lea
inc
push
imul
sbb
add
cwtl
mov
cmovle
dec
div
jno
repz
out
jno
iret
pusha
jne
mov
jno
push
xor
inc
in
es
inc
nop
shlb
xlat
int
mov
and
aas
jno
stc
mov
scas
adcb
in
fwait
repz
jmp
pop
sbb
cmp
aad
jb
int
mov
in
jno
loopne
clc
roll
jno
pusha
sbb
out
xor
bnd
mov
xchg
jno
mov
imul
or
insl
jne
dec
sahf
sbb
mov
or
pop
je
sub
fistps
imul
dec
inc
xor
jge
xchg
bound
dec
mov
lahf
xchg
xchg
mov
jno
imul
jno
push
push
shll
and
push
hlt
xchg
dec
mov
arpl
jno
lcall
jno
rcll
push
jl
adc
jno
in
mov
pop
jno
xlat
enter
cmc
mov
imul
dec
lods
mov
push
mov
sub
mov
shll
mov
inc
sbb
pushf
jmp
jbe
xorl
lods
es
mov
icebp
notb
aam
sub
dec
jmp
lret
pop
xorl
repnz
jnp
in
jno
sbb
pop
lret
or
inc
dec
aas
sub
pop
jno
sahf
mov
mov
enter
insl
adc
cmpsb
in
xor
sbb
loopne
ret
fcompl
mov
nop
xor
sete
fildll
fisubs
rcll
outsb
dec
insb
in
repnz
push
adc
xor
cmp
adc
sub
mov
sbb
sbb
jno
push
sti
aam
sub
inc
nop
xchg
jne
lret
jno
ret
jno
test
lods
inc
sti
sub
nop
pop
xor
out
jns
iret
dec
loop
rcrl
popf
inc
subb
jno
movsl
sub
icebp
xchg
jno
pop
or
push
rorb
and
xchg
in
jno
jnp
test
sub
add
insb
push
mov
and
in
test
or
xchg
lret
jge
xor
cmp
pop
jno
push
xor
xor
xchg
in
or
andb
jno
movsl
mov
rolb
add
je
jecxz
mov
mov
clc
cmp
sbb
xchg
xorb
xor
arpl
mov
leave
push
inc
cld
xor
fstl
popa
cld
cmp
in
inc
jno
jp
lret
mov
add
sub
mov
jno
or
jp
mov
or
fs
sbbl
adc
repnz
fcompl
mov
jno
jp
xlat
cltd
je
jb
jns
leave
lahf
fdivrs
mov
inc
jno
ds
fisubs
jecxz
push
and
mov
ret
jno
aas
rcll
push
cmp
mov
dec
pop
scas
inc
sub
fwait
ljmp
test
dec
xchg
sbb
or
inc
cmp
mov
int
push
imul
jmp
sub
rorl
fnsave
addr16
and
pop
gs
jns
add
popl
fcoml
imul
or
jnp
jno
out
insb
and
outsl
ret
lods
popa
shll
cli
xchg
and
inc
or
popa
and
lea
jno
icebp
and
push
xlat
lahf
jbe
pop
adc
adc
into
sub
rorl
mov
outsl
add
arpl
jno
mov
jb
xor
dec
jno
push
nop
scas
fisubrs
shlb
mov
jno
mov
ja
fcompl
cmp
scas
mov
jno
push
popa
xor
aam
mov
pop
adc
add
popa
pushf
bound
mov
fucomip
and
jno
dec
dec
push
mov
add
pushf
in
jg
push
jne
scas
and
cmp
cvtpi2ps
push
insl
sarb
repnz
mov
push
or
dec
sbb
xchg
jle
mov
xor
lock
dec
pusha
push
jge
sarl
outsb
enter
lock
cmp
pop
sti
das
jge
ja
test
ljmp
les
addr16
jno
xor
repz
sahf
imul
popa
mov
xchg
iret
or
or
mov
jl
pop
cld
pusha
or
or
jno
inc
xchg
test
xor
mov
add
or
das
dec
std
sbb
in
mov
andl
jno
inc
shlb
fbstp
fnstcw
arpl
cld
int3
dec
pop
jl
and
jp
jnp
pop
inc
xchg
enter
push
movsl
sbb
adc
out
push
jge
enter
nop
add
addr16
jle
lock
cmp
gs
dec
cli
pop
jno
sarl
aaa
sub
sti
cmp
xor
jno
jae
and
je
push
sahf
js
sbb
jno
icebp
jl
ljmp
decl
pushf
or
jno
push
nop
mov
js
aad
out
sbb
ret
ljmp
aaa
repnz
mov
jge
lret
int3
adc
scas
ja
roll
xor
sti
ds
jno
push
fdivs
sbb
sahf
jno
mov
jb
dec
mov
lods
cmpsb
xchg
add
loopne
pop
fistps
lret
and
xor
mov
dec
ret
rcrl
jno
call
mov
push
in
ds
push
or
adc
enter
and
jecxz
push
mov
sbb
lods
mov
sub
jo
sub
orl
push
cltd
lods
jmp
mov
jbe
sub
out
adc
push
fnsave
cmp
add
jne
loop
xor
fwait
ja
pop
jno
sbb
testb
mov
icebp
dec
jno
adc
imul
sbb
cmpsl
jae
mov
jno
cs
pop
sbbl
dec
mov
test
add
lret
inc
leave
jno
mov
mov
jno
nop
ret
push
push
jno
aas
inc
mov
jno
gs
dec
aam
xchg
xor
pop
mov
jbe
dec
in
test
cmp
mov
in
fistpl
sbb
fisttpll
js
arpl
and
jno
hlt
into
call
jno
adc
xchg
push
xchg
imul
mov
andb
jno
mov
adc
dec
inc
jno
pop
jne
mov
jno
fs
mov
mov
nop
pop
test
cmp
ja
sub
repnz
imul
jno
cltd
add
jns
sub
xor
repnz
jg
xor
enter
dec
stos
pop
xor
sbb
inc
outsb
daa
lret
mov
arpl
push
cld
rorb
jns
sub
fwait
bswap
pop
arpl
sbb
stos
jae
cmpsl
jno
or
jno
loope
shlb
cmp
lods
outsl
adc
or
xor
js
cmc
add
jne
xchg
mov
or
jge
out
dec
jno
pop
xchg
daa
movsl
sub
jle
cmp
xor
or
or
xor
push
add
ja
sbb
lds
sub
dec
pop
jge
push
stc
popa
xchg
imul
and
inc
adc
xchg
jle
jne
nop
lahf
mov
ja
icebp
push
into
inc
jno
mov
fbld
insl
or
jno
xchg
cmc
sbb
incb
lock
mulb
add
jl
insb
orl
jns
or
cli
push
inc
xor
out
dec
jno
inc
enter
test
rcrb
mov
jae
pop
das
ljmp
int
cmpsb
jno
push
cmp
scas
xchg
out
xor
pop
leave
js
outsl
adc
cmp
in
jno
xchg
xor
addl
imul
cmpsb
rolb
xor
adc
jne
jmp
dec
and
xor
repnz
jno
xor
push
fcomi
out
movsb
xchg
pop
jns
inc
jno
stos
out
ret
and
inc
shlb
loope
add
test
xor
jne
mov
les
push
repz
jno
jle
int
and
outsb
icebp
insl
jmp
jge
mov
adc
inc
inc
push
aam
int
xor
push
adc
ja
clc
jno
loope
push
mov
jp
ret
lret
push
sarl
fnsave
sub
xor
es
std
mov
enter
pop
mov
je
rcrl
mov
cmp
jno
loop
ficoms
std
shlb
and
xor
mov
cli
jb
enter
pop
movsl
test
loope
push
xchg
jno
out
cmp
cmc
mov
fsubrl
mov
roll
mov
pop
gs
jno
mov
in
lds
pop
jno
js
cmp
jno
mov
jae
cmp
fidivl
mov
sbb
insl
pop
fdivp
popa
int3
cwtl
push
sahf
jp
loop
cltd
add
pushf
sub
jno
push
mov
jno
lods
gs
sbb
adc
cmpsl
notb
fcoml
lea
in
xchg
jno
mov
xor
rcr
sbb
sti
imul
pusha
ja
loope
sar
jb
pop
dec
aad
pop
mov
leave
sbb
mov
pop
pop
in
jns
test
xchg
mov
add
popa
mov
sbb
sbb
jno
or
inc
add
cmp
andb
cmpsb
jno
stc
add
xchg
pop
popa
popa
aaa
ljmp
cltd
nop
sub
xchg
sbb
dec
pop
rolb
loop
add
nop
inc
or
inc
add
cmp
pop
cli
push
cmp
test
adc
jno
ret
ljmp
hlt
xchg
js
inc
add
or
ss
pop
jnp
scas
add
jno
call
add
push
sbb
stc
mov
das
fucomip
and
popa
inc
test
mov
jo
jno
scas
lret
push
jno
in
add
aaa
jno
or
jae
in
push
loopne
ds
mov
sbb
pop
call
jp
or
stc
jno
lds
cmp
in
jno
repz
hlt
jp
mov
pop
xor
jle
in
add
mov
dec
inc
push
inc
das
pop
jbe
sbb
imul
jno
jbe
test
sub
add
popf
jns
divl
insl
jecxz
xor
arpl
jno
insb
test
stc
push
jno
sub
repnz
lds
xchg
pop
mov
movsl
ret
nop
jno
lods
jnp
jns
add
jno
out
es
push
pushf
jno
adc
jno
jl
mov
jno
jmp
shrb
dec
mov
pop
aad
pop
cld
jns
jle
sub
xor
and
lcall
push
or
push
roll
jno,pt
inc
cld
fisttpl
and
jno
push
xor
mov
or
adcb
aam
outsl
pop
cmpsl
aad
push
daa
dec
sub
cmp
insl
jno
mov
test
or
sahf
jmp
mov
push
and
div
and
add
ja
mov
nop
lds
inc
arpl
jno
outsb
or
in
shlb
dec
jno
scas
and
jno
mov
push
mov
into
jp
dec
mov
or
loopne
cmc
cmpsb
cwtl
cmp
fidivrs
orb
jno
aas
into
cli
insb
xor
int
inc
es
or
cli
movsb
jnp
inc
lret
jno
pop
lcall
popa
insb
fwait
push
shlb
in
push
lea
call
jno
sbb
shl
fdivrs
sti
lea
xchg
jno
mov
jno
cmp
stos
in
aaa
jo
cmovg
lahf
push
cmpsl
jne
jno
and
loope
sub
jno
ljmp
out
mov
cs
movsl
mov
lock
dec
inc
mov
fisubrl
xor
jp
fistpl
mov
mov
daa
push
xchg
out
push
inc
repz
das
jno
mov
inc
jne
pop
mov
les
cltd
push
adc
cmp
repz
xchg
cmp
sub
adcl
int
aaa
dec
mov
adc
inc
pop
clc
lods
jbe
push
lods
lret
fcoms
xchg
orb
stos
je
data16
push
jno
mov
dec
fstpl
dec
xor
jno
es
stos
cwtl
pop
sub
xchg
je
test
fbld
scas
mov
adc
adc
or
nop
je
pusha
les
mov
sbb
outsb
fldenv
jno
sahf
dec
out
andl
lods
add
cmpsl
jns
imul
xor
cld
icebp
shll
lea
mov
imul
pop
std
jmp
jno
mov
mov
jne
lds
push
mov
inc
jno
pushf
dec
sub
push
ret
popa
inc
lods
adc
add
adc
cmp
mov
aaa
scas
fldenv
cmp
add
push
cmp
mov
xchg
nop
test
sbb
dec
jge
dec
or
xchg
mov
jno
mov
sbb
sbb
push
push
lahf
pop
push
lods
in
and
mov
jno
fiadds
frstor
dec
icebp
cmp
adc
imul
popa
xorb
mov
dec
sub
mov
sbb
lcall
mov
xchg
fsts
pop
mov
das
dec
add
mov
insb
pop
out
shll
nop
dec
ljmp
add
cvtpi2ps
jno
fnstcw
or
out
sbb
imul
popa
inc
sub
ljmp
pop
jmp
jno
ret
mov
mov
or
stc
pop
xor
pop
mov
daa
jno
popf
pop
xor
xchg
inc
lret
mov
cmc
mov
push
pop
add
adc
jno
insb
add
fdivrs
dec
mov
pop
jno
gs
sbb
ret
popa
mov
in
imul
outsl
loop
dec
cmp
idivl
xchg
mov
in
fnsave
jge
scas
mov
adc
add
test
mov
xor
mov
pusha
xchg
outsl
rolb
jno
mov
pop
aad
iret
in
andb
mov
js
fisttpl
jns
fs
cli
jb
test
sub
xor
repnz
jno
pop
cmpsl
les
xor
jno
cltd
fdivs
andb
sub
repz
jno
mov
leave
xor
jmp
cmpsb
shl
jns
mov
in
pop
jmp
sar
lret
es
dec
jb
xor
sub
jns
lret
jle
scas
xchg
orb
pop
shll
push
mov
es
jno
push
test
in
js
daa
xorl
jno
pop
mov
out
scas
jp
pop
enter
lock
add
push
popa
fsubrl
ss
xor
jno
jbe
xchg
mov
in
jmp
jo
jle
fwait
mov
and
popa
push
mov
add
sbb
lds
jae
sbb
or
add
dec
mov
and
ss
sarb
jmp
into
xchg
inc
shlb
sbb
jno
push
mov
inc
roll
dec
jp
jno
xchg
dec
push
mov
adc
test
mov
or
pop
or
inc
notl
or
cmp
mov
push
rcl
ja
mov
cmpsl
in
pushl
loopne
jns
popf
xor
ret
pop
dec
jbe
data16
scas
jno
push
test
mov
gs
inc
in
sub
push
ror
xchg
push
xor
dec
push
std
mov
jno
lret
mov
in
add
xchg
cltd
jno
mov
imul
jp
sub
xchg
jo
jne
imull
jecxz
movsb
aam
repz
fimull
jg
adc
jg
jno
dec
push
popf
jne
add
mov
mov
xor
movsb
dec
repz
mov
loope
mov
shrb
iret
pop
xchg
jno
mov
push
pushf
inc
mov
dec
jno
test
dec
mov
fs
xchg
adc
fidivrl
shrb
mull
outsb
adc
lods
fsubl
shlb
dec
adc
fcoms
outsl
inc
enter
cld
iret
filds
dec
mov
loop
inc
mov
and
ljmp
ficomps
and
sbb
pushl
push
pop
adc
out
jno
inc
xor
cmp
jmp
ss
jne
int3
daa
dec
jno
popf
fdivrs
inc
pop
mov
push
in
add
xor
pop
sbb
jae
cwtl
xchg
ficoml
jno
mov
mov
jno
icebp
dec
cltd
mov
cmp
out
cli
pushf
insb
pop
shrl
add
and
stc
xchg
scas
lods
adc
jae
fisubrs
jno
dec
pop
stos
jo
ret
adc
lea
inc
jge
mov
mov
outsl
mov
jno
sbb
pop
xor
fdivrl
negb
jb
cmpsl
push
out
stc
xchg
in
jle
jno
fdivl
sub
out
mov
push
pop
aaa
and
jno
roll
addr16
dec
mov
cmp
loopne
push
jno
xchg
ja
push
insb
jo
push
cs
fcomps
addr16
hlt
jl
jno
aaa
pop
clc
push
mov
sbb
xchg
jno
push
push
pusha
mov
cmpsl
xchg
in
andb
out
rcrb
jno
into
adcl
jecxz
mov
ja
lret
in
sub
mov
sbb
out
inc
flds
fstpt
xorb
hlt
rorb
inc
push
jno
sbb
xchg
lods
lds
in
adc
adc
cmpsl
pop
adc
jb
shlb
lea
mov
mov
jno
sub
jb
mov
enter
jge
jnp
jne
bound
sarb
xor
stos
xchg
jbe
xor
gs
inc
or
pop
jno
pop
mov
pop
lods
cmp
jno
imul
mov
jns
and
pop
jp
add
stc
scas
pop
sbb
call
popa
xchg
pushl
push
pop
dec
xchg
in
clc
sbb
jp
negb
adc
add
xchg
dec
xor
sub
imul
lahf
jno
fldenv
push
inc
ror
cltd
icebp
imul
pop
fdiv
and
lock
jno
in
mov
push
push
xchg
inc
cld
add
inc
xor
push
mov
add
inc
pop
hlt
stos
adc
mov
jp
outsb
jae
sbb
jno
or
mov
loope
nop
mov
jp
and
fwait
aad
sub
jno
push
in
or
ret
enter
sub
mov
add
cmpl
mov
mov
jmp
loope
jge
or
add
cmp
jmp
xchg
fldt
and
movsb
js
pop
jns
test
or
jno
ficoms
mov
stos
mov
fistpl
xor
ja
or
jno
add
jmp
jno
mov
fstl
xorb
cmp
test
inc
mov
or
mov
inc
jno
out
inc
ds
pop
push
nop
jg
dec
insb
jae
jbe
notb
rcll
stos
add
mov
jmp
les
inc
jno
cmp
movsl
lcall
jno
pop
ja
rcll
stc
pop
popa
jbe
cmp
jle
xchg
lods
inc
adc
popa
pop
shrb
fs
cmp
adc
in
sbb
movsb
xor
xorl
imul
test
mov
xor
jmp
jno
stos
in
xor
es
jae
jno
pusha
cwtl
insl
rcr
inc
mov
out
inc
push
mov
xchg
out
jbe
jmp
adc
fmul
das
repz
test
or
cli
test
mov
xor
adc
jno
repz
mov
mov
push
xchg
jno
test
mov
repnz
clc
ljmp
adc
add
shlb
popa
sarb
icebp
jno
das
es
mov
adc
mov
cmp
subb
sub
pop
cwtl
mov
loop
fbstp
imul
push
push
dec
push
mov
and
ljmp
enter
movsl
jno
mov
push
out
icebp
call
cmc
and
mov
lea
jne
je
jno
and
mov
pop
jno
mov
in
mov
mov
xor
cmp
jge
jp
jne
leave
pop
fisubl
stos
mov
jno
xor
sub
in
pop
push
cmp
ret
mov
arpl
nop
adc
sbb
inc
sbb
mulb
mov
sbb
imul
enter
setno
mov
scas
fistpl
mov
inc
mov
mov
jno
lret
sahf
dec
adc
jb
and
aad
addr16
jno
adc
aam
loop
iret
lods
loopne
lcall
jle
jp
push
stos
push
mulb
fidivs
jecxz
mov
mov
rcll
in
lret
cmpl
or
lret
js
jo
stc
adc
add
fsubr
sub
adc
sub
leave
pop
jne
scas
int3
mov
lods
jp
xorl
jae
out
xchg
loop
dec
test
mov
jg
and
adcw
fldcw
push
dec
mov
mov
imul
jle
push
jno
xor
out
bound
jnp
mov
mov
loope
dec
data16
stc
xchg
jno
pop
and
repz
jno
cwtl
jo
orb
shr
mov
ret
xor
decb
jmp
push
scas
int
aas
popa
dec
pop
xchg
xchg
jnp
jecxz
xchg
sahf
mov
and
dec
jecxz
into
pop
dec
cmp
cmp
inc
xchg
sarl
mov
fst
jno
jge
loope
mov
push
sub
inc
lcall
rcll
outsl
sbb
faddp
push
andl
inc
add
fmull
push
in
xlat
xchg
or
ss
xchg
adc
sti
popf
gs
and
add
adc
sbb
jno
jmp
inc
or
adc
jns
mov
jno
push
scas
dec
mov
out
pusha
loop
bound
push
movsl
pop
push
ret
jae
jno
dec
xchg
pop
mov
add
test
and
jle
sbb
pop
cmp
cld
or
add
movsb
adc
sub
fwait
lahf
jne
arpl
pop
lret
and
int3
and
inc
jo
sti
sub
in
jle
mov
xor
outsb
mov
mov
cmpsl
or
out
call
dec
jno
cmp
ss
lea
push
jno
lods
mov
fdivrl
fucomip
test
mov
scas
test
push
cwtl
imul
mov
das
int
adc
jno
xor
in
adc
lock
outsl
sub
pop
call
mov
jg
fistpll
insb
mov
jno
xchg
iret
jno
jge
fwait
nop
xor
jno
add
test
leave
mov
jno
or
mov
int
cmp
cmp
mov
xor
pop
jno
adc
mov
stos
xchg
push
add
pop
cmp
cmp
adc
push
jno
pop
leave
in
rep
shll
and
jne
mov
jno
cwtl
push
add
xor
adcl
repz
in
mov
jno
loopne
inc
jle
jmp
dec
mov
xor
xchg
mov
cwtl
bound
cmp
out
mov
adc
push
cmc
imul
cltd
call
ret
in
dec
jno
stc
inc
out
enter
adc
push
repz
mov
pop
lret
ds
sub
ja
xchg
jno
sub
sti
int
inc
adc
mov
dec
fwait
sahf
popa
clc
mov
push
aaa
jne,pt
adc
push
add
vmovq
lock
aas
imul
scas
dec
pop
int
es
dec
repz
jno
sub
je
push
daa
fbstp
or
notb
loop
mov
mov
mov
jmp
int
enter
movsl
nop
aaa
lahf
inc
push
mov
out
ret
jno
inc
push
cmpsb
and
data16
jno
das
add
jno
mov
pop
jno
andl
xor
pop
adc
out
rcr
mov
sbb
sub
xchg
jno
adc
cmp
loop
rcrl
mov
jno
and
pop
jecxz
sbb
jge
or
clc
jns
fwait
scas
push
aaa
sysexit
dec
jno
mov
jge
leave
in
int3
lods
cmp
mov
sbb
adc
repz
pop
hlt
inc
xor
jl
inc
sahf
bound
mov
jno
sub
xor
lds
or
loopne
sub
xchg
mov
jno
sbb
adc
fwait
pop
test
imul
jno
scas
enter
and
lret
mov
ds
aas
inc
or
dec
push
rolb
jns
sbb
ljmp
sub
sub
mov
shlb
test
adc
pop
out
sub
dec
jno
decl
sub
jl
jge
sub
jne
lcall
out
int3
aaa
jl
adc
loop
jns
fldenv
xchg
cmpsb
sbb
mov
inc
repz
jno
test
dec
sub
sub
jp
dec
xor
and
stos
adc
jle
lret
hlt
jno
nop
mov
push
add
jno
adc
push
divl
mov
jl
je
scas
jno
xor
cmp
cltd
jne
mov
dec
stos
jecxz
jno
add
pop
inc
je
int3
int
mov
push
sbb
scas
mov
icebp
add
enter
mov
daa
in
cmp
hlt
cmc
outsl
mov
and
jno
imul
adc
fnstenv
out
scas
ss
mov
lret
mov
dec
cmp
add
repnz
int
pop
sbb
lcall
cmp
push
jp
fsubs
mov
or
jno
div
inc
xchg
push
lock
jno
in
pusha
fmull
outsb
push
adc
jns
icebp
xlat
pop
dec
inc
jno
cld
mov
pop
dec
int
jno
sub
mov
push
sbb
jp
pop
scas
push
jb
sbb
sti
xor
stos
jno
inc
xchg
xor
sub
rorl
imul
shll
jne
jno
out
inc
jb
sub
in
push
daa
sarl
test
pop
lods
mov
jnp
add
jns
sbb
leave
sub
mov
popa
and
jae
mov
push
inc
bound
jmp
lods
ja
mov
popl
inc
lock
xchg
dec
cmc
mov
and
negb
std
lock
imul
jno
or
jbe
cmc
xor
sub
inc
jno
test
nop
push
mov
xlat
sub
xor
mov
mov
or
cli
aas
fiaddl
sbb
lea
xorl
mov
mov
push
push
leave
repz
dec
push
movsb
cmp
adc
jbe
adc
leave
jno
add
stos
imul
cli
ret
adc
pop
sbb
mov
mov
ficoms
jno
iret
fs
push
js
je
jno
jmp
fcmovu
jno
xor
xchg
rclb
pusha
fnstenv
fildl
mov
bound
out
in
inc
inc
js
adc
test
pop
jmp
les
ja
mov
lock
jno
pusha
dec
cmp
std
inc
sarl
cmp
xchg
xorb
push
sub
pusha
roll
mov
mov
jno
rcll
sub
sub
mov
jg
adc
inc
and
adc
lods
lret
adc
push
dec
jb
jno
insl
inc
lcall
push
adc
std
inc
jno
mov
shl
push
cmpsb
loop
sub
dec
xchg
jbe
and
popa
push
test
or
enter
jecxz
ret
push
xchg
jno
out
and
or
roll
lcall
pop
rcll
lahf
or
jns
scas
fs
out
js
pop
bound
lcall
movsl
mov
jbe
mov
push
popf
sbb
mov
cmp
sub
cmp
mov
mov
stos
pop
push
inc
cli
lods
jno
and
sbb
cmp
dec
mov
repz
lea
add
xor
inc
ds
sub
or
imul
aas
sahf
jno
fmull
jb
mov
xchg
mov
inc
xor
fs
cmpsl
std
pop
lea
imul
and
or
ficoms
imul
pop
cltd
jp
scas
jbe
sub
cmp
addr16
fsts
mov
jmp
cmp
fnstcw
lock
push
shrl
andb
imul
stos
add
lods
mov
xor
push
xor
or
dec
fimuls
subb
jno
aam
stos
fldenv
push
shlb
jno
jno
je
mov
push
jo
int
xchg
lret
jnp
jmp
cwtl
xchg
nop
test
push
stc
lea
pop
insl
cmp
jb
aas
jno
rolb
jo
sbb
push
mov
xchg
pop
addl
pop
xor
jno
add
adc
filds
jne
and
test
xchg
dec
imul
cmp
jmp
test
in
enter
dec
inc
mov
add
sub
int3
fwait
out
sub
dec
add
pop
dec
or
add
popa
jg
or
jno
sbb
inc
gs
mov
jno
push
fs
jno
jnp
js
incb
repnz
pop
pop
ja
xchg
rcll
jns
nop
leave
mov
mov
addb
negl
jns
xor
xchg
cs
fs
cmp
pop
jno
dec
cld
inc
addr16
xor
jno
fildll
nop
cmp
call
lds
fimuls
adc
test
loope
xor
adc
into
cltd
jno
pop
cmpsl
js
stos
and
in
fwait
mov
or
jno
pop
dec
iret
adc
shll
popf
insl
out
mov
test
xrelease
jmp
scas
add
sbb
out
daa
mov
pop
testl
in
xor
push
lock
push
sbb
inc
xor
adc
push
jp
add
push
into
push
push
mov
or
jns
cmc
inc
jno
pop
and
mov
dec
nop
add
jno
insb
inc
ret
push
sti
add
or
jno
pusha
popa
inc
jl
cmp
and
out
mov
es
push
xlat
shlb
cwtl
mov
jno
dec
xor
pop
scas
jne
xor
jne
fists
jbe
or
stos
nop
add
orl
in
push
push
jno
dec
out
inc
mov
jp
imul
icebp
shlb
cs
mov
aad
adc
add
jmp
jno
subl
nop
js
sub
lahf
pusha
jp
and
test
not
adc
adc
out
mov
inc
nop
cltd
std
push
das
les
test
dec
nop
adc
lods
jmp
mov
add
pause
jnp
ja
push
mov
sub
xchg
jno
xchg
mov
shrl
mov
sub
punpcklwd
sub
imul
das
mov
push
mov
jg
ljmp
jno
sti
iret
adc
movl
xor
mov
xor
loop
cwtl
out
push
fildl
adc
jo
dec
dec
jno
adc
ja
in
fbstp
test
mov
lods
and
cmpsb
add
or
jno
push
ret
out
or
inc
movsb
stos
jne
jo
jno
lcall
jno
rorl
jae
mov
jg
sarl
lret
fistps
mov
inc
cmp
leave
xorb
push
jnp
fcmovbe
stc
jno
mov
cmp
test
and
out
dec
pushf
in
fidivl
xchg
inc
ret
data16
add
cmpsb
add
negb
fiadds
aaa
pop
jno
lock
ret
cmpsl
cwtl
jge
jno
fxch
jmp
mov
sbb
lods
imul
scas
movsb
sbb
and
fnop
adc
imul
data16
or
push
int3
pop
scas
loopne
mov
cli
xor
repz
jno
mov
sahf
fisubs
outsl
inc
leave
sbb
jne
xchg
in
push
push
loopne
leave
subl
out
aam
mov
leave
xor
mov
push
jnp
or
popa
and
push
in
jno
sub
loop
xchg
jbe
arpl
leave
mov
rcr
adc
jno
inc
pop
push
dec
call
dec
jmp
jno
lcall
lods
int
data16
out
and
mov
jno
das
fs
sbb
hlt
loope
mov
hlt
mov
xor
push
call
out
mov
out
jnp
cs
mov
cmp
mov
popa
and
xchg
jne
loopne
cli
jo
mov
lret
cmp
mov
adc
outsl
add
test
pusha
pushf
inc
push
jno
and
aas
cmpsl
movsb
or
gs
out
aam
xlat
cmpsb
and
fucomp
ret
lahf
jecxz
mov
xchg
push
daa
cmp
adc
mov
lods
xchg
lods
scas
psubusb
aad
add
xchg
push
xchg
or
inc
popa
ljmp
jno
into
lods
outsl
jmp
jae
mov
jno
inc
add
lahf
adc
pop
xor
mov
inc
fs
lahf
jno
lcall
jno
jl
bnd
jno
pop
sub
sbb
cltd
jne
mov
fsubs
jns
jl
iret
outsl
into
push
idivl
movlps
icebp
je
xor
xchg
mov
jno
mov
enter
pop
lcall
mov
sub
fwait
jmp
arpl
in
lret
push
scas
mov
and
lods
loope
jno
gs
fbstp
sub
jno
pop
mov
xor
xchg
rorl
loop
mov
or
mov
inc
stos
daa
or
loope
mov
in
jno
jno
add
push
scas
mov
or
ja
and
jno
jle
mov
mov
cli
mov
jno
jg
pop
addb
dec
sub
inc
enter
adc
xor
jno
and
jne
push
or
cs
pushw
testb
or
pop
cwtl
rcll
insb
cmc
popa
adc
arpl
mov
jno
mov
cli
insb
data16
jno
scas
pop
cmp
push
sub
xorl
cld
shlb
mov
mov
jge
fistps
inc
pop
xorb
cmp
jno
cmpsl
jbe
imul
inc
jno
cwtl
stos
mov
jno
push
in
or
jg
jno
hlt
lcall
imul
data16
mov
mov
mov
dec
add
jne
push
xchg
adc
pusha
sbb
fcmovne
adc
sbb
sbb
mov
js
push
cwtl
inc
test
les
push
das
and
jno
test
mov
cld
data16
rcrb
cmpsl
xchg
sub
sbb
jno
rol
xor
in
jno
mov
mov
mov
jno
lret
clc
gs
notb
jno
add
cltd
cmp
hlt
sbb
imul
sbb
rclb
mov
dec
mov
mov
jno
jge
mov
cmp
mov
push
inc
loop,pn
xchg
shll
and
mov
mov
jge
cmp
nop
movsl
sbb
int
mov
popa
out
jne
jno
sarl
xchg
and
fdiv
jno
fimuls
jle
and
ljmp
movsl
jno
sahf
in
sub
test
jno
inc
cmp
jno
out
in
clc
test
int3
mov
dec
loope
icebp
jno
lds
jmp
or
in
popa
int
or
daa
add
sub
aam
ss
loope
dec
cli
and
jns
or
jge
sub
mov
sbb
xchg
psubq
movsb
jno
inc
outsb
repnz
push
test
sahf
lret
jb
push
jno
aad
rol
cmpsb
xchg
push
jno
sbb
jmp
or
jno
pop
aam
fwait
xor
mov
bnd
call
pop
mov
add
bound
fsubs
fistl
insl
out
jno,pn
clc
sbbb
sbb
movsb
mov
mov
sbb
cmpsl
jbe
push
jno
or
sub
and
scas
cmpsw
int
xchg
jns
lods
call
addr16
push
jno
sbb
xor
jne
inc
data16
movsl
and
mov
pop
das
lods
pop
hlt
jb
scas
sbb
and
inc
adc
jnp
adc
mov
jno
cmpsl
jo
cltd
add
fidivs
stc
sbb
dec
pop
mov
in
sub
push
jno
test
xchg
inc
jo
dec
test
push
pop
jecxz
mov
and
pop
jp
in
popa
or
push
aas
jno
lret
add
gs
mov
mov
out
rolb
jecxz
xchg
xlat
dec
mov
jno
cmp
ficompl
fmull
jno
jp
adc
fldl
shrb
loopne
adc
movsb
outsb
or
cmp
mov
xchg
sbb
outsl
mov
rol
mov
fdivrs
jno
xor
lock
inc
jno
pop
inc
pop
xlat
ss
cltd
mov
jle
xor
lods
popf
icebp
test
xor
push
add
jns
negb
xor
iret
cltd
cmpl
lock
repnz
jno
out
pop
ss
jmp
fnstsw
aaa
jno
shlb
mov
jno
sub
jo
mov
pusha
jl
pop
mov
inc
jno
sbbl
dec
sub
and
jno
adc
and
xor
push
lret
add
or
pop
loope
mov
icebp
in
push
jae
mov
jno
jp
xchg
adc
pop
ss
push
and
sbb
adc
mov
arpl
popf
push
xchg
fldcw
lock
fdivrl
in
test
or
pop
int3
jmp
into
pop
lods
push
or
test
pop
push
arpl
lock
mov
scas
jns
jle
fstl
lock
or
and
out
inc
popa
fidivs
pop
mov
adc
rclb
or
lods
push
add
subb
inc
xchg
jo
jecxz,pt
scas
mov
jno
aad
xchg
xlat
xchg
jno
insl
mov
in
or
cli
add
adc
outsb
clc
lret
jb
popa
aam
pop
mov
xchg
fwait
xchg
push
adc
bound
es
scas
mov
das
insl
xchg
call
in
pop
test
jno
mov
push
xor
sub
mov
jno
jne
adc
addl
or
ja
test
sbb
jno
pop
ja
dec
sub
pusha
mov
out
out
mov
xchg
lds
adc
and
popa
dec
inc
shrb
adc
test
jno
mov
les
ror
mov
pop
adc
icebp
mov
aad
std
pop
inc
aaa
push
sub
in
jo
call
xchg
int
pop
adc
inc
mov
adc
mov
mov
jno
das
sub
movsb
scas
sub
gs
es
adc
stos
lods
rcll
adc
push
push
mov
aam
mov
jno
cwtl
xor
cli
je
or
fists
jge
xchg
lea
adc
movsb
xchg
mov
xchg
and
divl
xchg
inc
cmp
dec
mov
mov
daa
out
inc
xor
inc
decb
mov
push
lcall
popa
mov
lds
and
in
jno
pop
frstor
push
loop
adc
mov
repnz
ljmp
jp
jno
icebp
or
cwtl
push
xchg
nop
jge
sub
cmp
mov
lods
ret
bound
jmp
fcomip
xchg
mov
pop
lea
xchg
addr16
int3
sub
jno
mov
dec
in
cmp
jle
add
dec
adc
loop
data16
jge
nop
jb
mov
xor
jno
sbb
jno,pt
pop
in
jl
xor
test
push
fidivs
dec
push
mov
pop
int
inc
mov
jle
push
bound
test
fstpl
sub
jl
jno
xchg
adc
enter
aam
sbb
pop
jno
cmp
sub
adc
xchg
scas
mov
mov
lods
xchg
sub
lcall
jg
and
adc
out
cld
jp
data16
dec
jno
flds
push
jbe
ds
cltd
popa
jno
fisttpl
inc
jno
in
and
jno
shlb
mov
rol
nop
fstpl
pop
add
xchg
stc
mov
sahf
pop
fcoml
sbb
lock
test
pushl
adc
lret
popa
ljmp
add
stos
sub
imul
mov
xor
aam
jmp
cmp
add
imul
pop
lcall
or
jno
hlt
adc
jp
imul
shrb
jmp
jne
inc
jns
inc
cmp
cmp
cmpsb
dec
xchg
outsl
xor
lcall
pop
dec
inc
add
icebp
cmp
adc
stc
negb
or
aas
shll
cmp
loopne
paddusb
iret
rolb
push
std
roll
repnz
shl
xor
into
outsb
jns
pop
call
ja
lock
mov
push
add
stc
mull
jno
push
gs
xchg
je
jno
mov
dec
insb
outsb
aam
jno
rol
int
sbb
or
aas
or
xor
lea
push
imul
ret
mov
mov
lret
jno
scas
loopne
jo
addr16
pop
lods
jne
or
ficomps
mov
sub
xchg
rorl
jno
mov
jmp
leave
repnz
pop
mov
ss
arpl
sbbl
imul
or
fwait
xchg
jmp
aaa
clc
push
and
mov
jno
call
sub
cmpsl
mov
mov
or
aam
dec
jp
push
and
sbb
jno
imul
jae
jno
or
jecxz
cmc
mov
movsl
push
insb
jb,pt
sbb
jno
adc
fs
and
xchg
or
jno
xor
iret
adc
cmp
popa
jnp
shl
jno
mov
sahf
sub
addb
cmp
jno
xchg
adc
xor
jno
fsubr
leave
pushf
inc
jl
repz
jno
cmovo
ror
jno
push
mov
fdivl
subl
je
out
push
xor
popa
jle
mov
test
repz
push
dec
dec
jno
cltd
xor
scas
xchg
push
and
pusha
pop
push
fistl
xlat
jb
movsb
movsl
inc
lock
fldz
jns
lahf
inc
cld
lods
xchg
test
jno
or
int
xchg
notb
rcll
cmp
aad
push
jge
sbb
jg
xchg
add
jno
push
mov
int
in
pop
mov
cmp
pusha
clc
jno
add
mov
sub
xchg
xchg
add
jns
xchg
stos
inc
punpckhwd
pop
ret
inc
cmp
jno
out
sbb
repz
or
inc
mov
je
add
jno
push
jp
daa
pop
mov
loop
sbb
imull
ja
mov
pushf
testl
push
jae
jno
xor
mov
or
or
push
test
adc
sub
shrl
and
mov
enter
sub
das
pop
out
shll
lahf
jns
int
xor
jno
daa
mov
shr
sbb
in
xchg
lods
lods
mov
add
jno
icebp
ret
iret
insb
sub
adc
imulb
and
jne
sub
popa
jno
cmp
jge
dec
cmp
dec
sub
scas
sbb
or
push
pop
inc
test
cmp
sahf
sbb
cs
das
dec
popa
loope
xlat
sbb
cmpsb
rorl
push
loopne
mov
pop
pop
jno
outsl
xor
int
mov
mov
dec
popa
and
pop
mov
adc
jl
shlb
jno
inc
adc
push
inc
adc
sbbb
jl
lret
xchg
jno
and
mov
sbb
hlt
dec
mov
push
pop
std
xchg
sub
jnp
xchg
fisubrl
stos
adc
jg
lods
and
std
push
mov
jno
xchg
dec
push
jae
sub
add
xorb
xor
mov
pop
jnp
cmp
cmp
outsb
jl
out
push
jno
pop
adc
adc
in
mov
sbb
add
push
loopne
pop
loope
inc
shll
mov
test
out
nop
jo
or
mov
shlb
jno
xchg
shrb
xor
aas
jno
push
xchg
pop
pop
loope
push
adc
les
jno
std
fbstp
mov
or
dec
jmp
add
js
xchg
outsl
das
adc
iret
scas
scas
movsb
testb
jno
shr
loope
pop
inc
push
push
std
xor
mov
or
outsl
xlat
stos
lods
fdivrs
mov
add
jne
in
xchg
xlat
push
adc
lcall
arpl
lods
test
iret
repz
divb
xchg
add
cmpsb
jno
cmc
pop
mov
xlat
xor
int3
xchg
cli
jno
xchg
fcoms
stc
xor
daa
inc
mov
push
ds
add
or
push
xchg
or
dec
push
je
mov
adc
jge
mov
jno
scas
test
pop
cld
jo
xchg
gs
pop
push
dec
jnp
push
sub
pop
xlat
loopne
push
add
int
and
jno
negb
loope
sub
jno
das
fwait
mov
scas
mov
js
sti
out
push
jno
and
stc
rcll
xor
jo
ljmp
std
clc
adc
cmpsl
insl
jns
lahf
inc
gs
fildll
or
jmp
in
mov
inc
jbe
and
and
mov
int
bound
push
les
mov
dec
jno
or
adc
dec
xchg
dec
or
lsl
lahf
shll
into
jno
lock
add
rorb
sbb
cmc
inc
adc
push
fidivl
lods
js
sahf
adc
insb
push
add
inc
jl
ret
insl
or
push
lods
nop
add
mov
outsl
mov
shl
xchg
popa
push
cmp
push
iret
dec
lret
mov
repz
cmpsl
or
jno
cmp
nop
jno
jbe
mov
adc
stos
cmpl
mov
push
jl
lock
jmp
imul
fdivl
adc
pusha
pop
jmp
dec
je
inc
mov
pop
ja
jns
sub
pusha
cld
sub
and
and
dec
inc
push
jno
jge
pop
int
test
and
mov
mov
adc
push
pop
pop
lcall
jp
cmp
shrb
jno
cmp
or
mov
adc
mov
inc
jno
xor
aas
mov
jb
and
xchg
push
sbb
jno
ret
xchg
mov
adc
fcmovb
std
in
jno
sbb
addb
cwtl
jo
shlb
push
mov
repnz
jno
loop
adc
mulb
add
ljmp
cmp
enter
movsl
cld
icebp
ss
adc
test
inc
cwtl
popa
inc
cmp
pusha
and
cmpsb
pop
lcall
lahf
adc
fidivl
pop
or
rcll
sbb
pop
jle
and
mov
xchg
jae
ss
sub
mov
pop
fs
adc
sbb
dec
adc
fld
jno
pushf
insl
push
test
repnz
pop
ret
popa
mov
or
adc
enter
insb
jg
inc
scas
push
pop
aaa
shrb
xchg
lea
jge
push
in
cmpsb
leave
mov
sbbl
cmp
mov
jno
es
aaa
sahf
xor
lods
jb
insl
popa
aad
push
cmpsb
imul
add
in
mov
xor
inc
loop
push
icebp
scas
addr16
fs
and
les
out
movsb
in
fisubl
jno
das
push
cs
ss
xorb
cmp
or
jno
cmpl
sbb
sbb
ljmp
sbb
sub
adc
out
push
jns
mov
and
push
int3
mov
lret
cli
jno
push
aad
dec
out
clc
je
sahf
dec
pusha
xor
sub
jno
subb
scas
jne
pop
and
insl
adc
pop
jno
xlat
push
hlt
mov
push
and
ror
and
xchg
cmpsl
pop
mov
adc
stc
jmp
jns
pop
aam
test
test
push
jo
inc
lea
cmpsl
arpl
test
cmpsb
jge
jns
pop
push
mov
ds
add
gs
mov
cmp
dec
dec
add
sbb
jbe
or
lret
xchg
jnp
xchg
adc
jno
out
fnsave
jno
cltd
add
and
adcb
inc
push
pop
cmp
mov
xchg
out
pushf
je
jl
jbe
out
cmp
mov
add
sbbl
cmpsb
gs
jb
gs
js
mulb
movsl
jno
pop
popa
ret
in
inc
add
repnz
cmpl
xor
mov
mov
popa
xchg
xor
fdivrs
lret
mov
push
mov
jno
movsl
mov
mov
mov
mov
push
mov
adc
sbb
xchg
mov
adc
out
outsl
mov
dec
js
int
repz
jl
in
adc
loop
shl
scas
sub
stos
stos
add
adc
push
or
push
sub
cmpsb
imul
rcll
jb
adc
pop
pop
pop
pusha
repnz
fs
jb
mov
scas
adc
test
xchg
jmp
cld
imul
mov
and
jno
out
mov
andb
in
jno
jo
add
or
add
lock
outsb
nop
dec
lods
ja
and
mov
out
aas
popa
nop
mov
outsb
xchg
mov
or
popa
add
inc
out
jno
xchg
shlb
nop
pusha
jne
jno
js
jne
out
xorl
or
cli
out
or
mov
mov
jno
stos
jb
sar
xor
mov
push
push
sar
sub
dec
sbb
aam
cmp
fcoml
jbe
sbb
leave
shlb
stos
cmp
lahf
jl
orb
push
loop
es
or
stos
jns
fcmovu
shrb
sub
cli
out
jmp
dec
cltd
repnz
add
notb
jne
aad
pop
jno
movsb
popa
xor
jno
dec
sub
lods
and
inc
jno
lds
test
inc
push
test
or
adc
lods
jmp
pop
mov
jno
sub
fneni(8087
xchg
push
mov
inc
ror
and
je
pop
scas
stc
adc
popa
clc
fcoml
push
jno
push
imulb
adc
xchg
shll
into
stos
loope
mov
mov
xor
ret
dec
xor
sbb
cwtl
leave
adcb
mov
sbbb
xchg
loop
mov
dec
pop
inc
pop
and
mov
dec
insb
imul
mov
jbe
xchg
sbb
push
dec
fidivs
out
xchg
inc
inc
fbstp
and
in
jno
jle
inc
dec
shll
and
pop
ds
nop
push
in
cmpsb
into
sbb
shll
jno
jmp
mov
sub
dec
pop
jne
in
mov
cwtl
jne
icebp
mov
and
notb
jno
pushf
out
shrl
xchg
jno
ret
push
dec
inc
lods
push
mov
movsl
push
idivb
int
dec
arpl
mov
jo
jno
jge
jg
int3
xchg
nop
cmp
stos
and
pushf
inc
loop
push
xor
out
jno
sahf
dec
rcrl
inc
aad
popa
mov
sbb
xor
nop
xorl
pop
pop
jg
xor
xor
loope
and
fidivs
js
mov
push
fs
or
in
sub
push
jno
cmpsb
popa
test
mov
jl
pop
into
imul
sbb
jno
imul
lcall
mov
jno
mov
cmp
lods
ja
fstps
jmp
fwait
daa
jecxz
lea
sub
mov
jae
fnstenv
jne
add
cmpsl
or
hlt
jbe
jno
inc
addr16
and
jnp
jle
ret
push
aam
imul
pop
sub
jno
and
sub
int
addr16
lret
mov
pop
jno
add
mov
scas
out
ffreep
jge
ret
bound
nop
xchg
inc
andl
adc
mov
xor
jno
jecxz
jo
dec
es
jno
cmp
mov
xchg
lea
mov
and
push
decb
call
gs
andl
cmpsl
jno
xchg
add
add
xor
inc
movsl
mov
jne
push
push
in
int3
ret
daa
popa
or
repnz
mov
mov
test
jno
cmp
test
xor
repnz
pop
popa
adc
inc
cltd
mov
jno
jns
xchg
lret
mov
jle
stc
push
jb
jno
dec
lods
ret
lret
pop
jno
cmpsb
mov
sub
scas
nop
cs
daa
fwait
jae
aam
jno
sub
cld
push
pop
or
adc
addl
in
movsb
arpl
dec
lret
and
scas
lret
enter
iret
ret
jno
jle
jns
fisubrs
and
jno
lea
xchg
js
addr16
jno
mov
push
mov
or
out
xorb
ja
daa
sub
popf
mov
insl
mov
call
jno
lods
or
jno
adc
subl
ret
inc
loop
jno
sbb
mov
mov
jno
or
notb
lock
jo
lds
add
dec
jno
imul
into
fdivrs
mov
or
fsubr
cmc
fwait
icebp
mov
call
inc
nop
jno
pushf
insb
or
pusha
shlb
adc
jmp
cli
popf
xor
hlt
add
in
sub
popa
inc
sub
rorb
jb
mov
in
outsb
sar
ja
out
dec
pop
and
in
int
push
ja
mov
int
in
loope
leave
std
ljmp
cpuid
adc
mov
or
sub
sbb
das
push
adcl
arpl
mov
push
sub
jmp
shll
jno
xor
test
pusha
icebp
das
jne
push
jl
cli
movsb
adc
movsl
mov
push
push
out
jno
test
inc
inc
mov
das
add
test
jne
iret
jo
jno
pop
mov
mov
xchg
addr16
xor
aam
ds
mov
push
imul
test
mov
adc
jno
push
and
xchg
sub
or
push
nop
movsl
mov
scas
jge
jno
inc
inc
std
and
dec
push
inc
insl
xchg
rorb
jno
je
xlat
mov
cmpl
iret
jno
loop
arpl
imul
mov
xchg
imul
jno
movsl
xor
aaa
push
lahf
pop
jno
out
sarb
and
addr16
jle
jne
jno
xchg
sbb
int3
je
mov
fimull
js
jno
and
cmp
mov
je
jae
lods
out
loope
out
dec
icebp
xchg
jl
and
aas
jecxz
or
lods
jno
push
jno
jle
lods
loopne
xchg
sbb
cmp
testb
pop
dec
jno
stos
mov
sbb
fmuls
jge
es
int3
nop
cmpsb
cmp
mov
aad
mov
nop
call
jg
xor
sub
sahf
arpl
dec
jb
in
adc
push
cmpsb
jno
test
sbb
movsl
mov
shll
mov
jb
sub
or
cmp
lods
shlb
neg
fs
mov
and
cmp
in
adc
gs
je
xorb
and
jno
and
mov
adc
fisubrl
push
stos
out
jno
sub
in
arpl
scas
xchg
and
sarb
iret
repnz
jg
dec
mov
xchg
jno
cmpb
xor
xor
mov
mov
mov
add
mov
and
cmpsl
int3
jno
jnp
mov
ret
add
jno
mov
add
cwtl
stc
scas
and
pop
gs
pop
and
jno
test
add
lret
in
jmp
and
inc
loop
ret
cmpsb
and
push
loopne
jno
aas
imul
jno
cmp
jno
mov
pop
aas
repnz
mov
loopne
cmp
popa
das
dec
imul
jge
jmp
add
inc
jno
inc
mov
loope
mov
movsl
es
testl
xchg
ja
nop
rcrb
int
outsl
movsl
loope
mov
mov
arpl
dec
jno
jg
aad
aaa
add
repnz
pop
add
shlb
sub
test
jno
rorb
fdivrs
fnsave
or
adc
mov
jno
ljmp
jno
cli
test
outsb
push
push
push
push
jne
mov
pop
pop
adc
decl
sub
sub
fwait
movsb
xor
arpl
icebp
lret
jb
scas
outsl
addr16
or
je
and
nop
mov
sahf
pop
jae
fldenv
jne
stos
pop
adc
fcmovbe
insl
mov
or
clc
out
xchg
loope
pop
xor
push
xchg
insl
pop
lods
pop
fcoml
jno
jbe
or
fidivl
and
and
push
mov
jno
daa
mov
mov
bound
inc
lds
mov
pop
or
jno
sbb
push
and
jno
mov
xor
sub
mov
lods
into
out
push
scas
mov
sub
mov
unpcklps
fs
mov
jno
repz
ss
mov
das
push
fdivr
xor
addl
lret
jno
es
jecxz
mov
jno
call
mov
decl
jo
and
jno
rclb
xchg
jno
mov
stos
push
fdivs
mov
inc
cmpsb
lret
mov
jno
cmp
std
add
jg
adc
fsubr
jle
shll
ret
pushl
xor
and
jbe
fistpl
push
pop
call
stc
loopne
out
ja
das
scas
inc
popa
adc
mov
sahf
lods
adc
int
popa
mov
repz
and
and
xorb
xchg
subl
jmp
jno
mov
dec
clc
cmp
pop
sbb
sub
sbb
xchg
xor
xlat
jno
or
adc
sti
js
jno
jmp
jnp
sbb
cwtl
shlb
stc
jno
insl
fcomip
sti
test
movsl
jno
pop
adc
aad
cld
out
dec
pushf
outsl
shll
jecxz
aam
mov
jge
seto
enter
movsl
fbld
xchg
jno
mov
sub
xor
sbb
jle
push
and
popa
lea
nop
pop
push
out
in
jecxz
pop
xor
cmp
cmpsb
push
fdivrs
ficoml
jg
mov
jno
ss
push
xor
and
cmp
int
sbb
pop
mov
lods
nop
mov
jno
cmpsl
pop
sahf
dec
movsl
jmp
adc
lea
mov
popf
int3
lds
push
mov
incl
mov
push
xor
lea
and
push
jno
inc
jp
cmpsb
inc
insl
inc
jno
and
loopne
mov
lock
mov
xor
add
sub
arpl
dec
push
ficomps
fdivr
in
sbb
jno
imul
aam
push
inc
xorb
jno
adc
scas
and
cmp
dec
mov
xorl
fsubrl
daa
jnp
dec
sbb
cli
in
shlb
pop
push
and
ljmp
mov
and
gs
test
scas
data16
or
push
and
pop
repz
jnp
mov
xchg
jno
mov
dec
push
jno
lret
or
faddl
cmpsl
es
nop
add
insb
jmp
loope
adc
test
scas
or
jo
mov
jns
stos
mov
lods
add
add
sbb
dec
mov
push
add
fs
mov
mov
les
mov
mov
push
int3
mov
data16
iret
or
incl
sbb
inc
xchg
lods
insl
cmp
scas
cs
adc
movsl
push
jno
call
aad
jno
cmp
mov
xchg
dec
mov
mov
push
add
les
shl
sub
jno
in
pop
push
dec
jb
jno
mov
adc
pop
jmp
pusha
mov
jno
sub
repnz
and
shlb
fidivrs
scas
inc
jns
stos
adc
xor
mov
decb
push
jno
sbb
testl
pushf
call
ja
outsb
dec
gs
fdivl
mov
jne
lods
cld
jno
icebp
daa
dec
jnp
sub
fwait
enter
jno
fsubs
aaa
adc
scas
dec
adc
iret
loope
sbb
cmp
sub
jno
mov
inc
push
js
mov
sub
subl
or
ljmp
adc
je
jle
mov
mov
push
xchg
or
fstpt
icebp
aam
or
rorl
ss
add
pop
jp
bnd
jnp
and
lock
push
dec
jno
xor
mov
jno
jmp
ja
testl
imul
adc
cmc
shlb
adc
jle
test
cmp
xor
lea
dec
pushl
cli
lret
inc
gs
push
ljmp
mul
popa
jno
xor
rorb
push
xchg
jg
push
and
lcall
jle
jno
cmp
and
mov
jns,pt
leave
xor
in
stos
jno
mov
in
cli
js
push
pop
cmp
fstl
add
out
push
or
lcall
dec
call
in
inc
add
jno
xchg
mov
mov
repz
outsb
mov
jno
cli
pop
das
shll
test
sub
add
mov
jge
adc
test
sti
pop
setne
mov
nop
icebp
xchg
mov
mov
int
xchg
outsl
add
sbbl
pop
jno
clc
push
push
jb
jno
sub
or
xchg
jno
jg
sbb
cli
stos
arpl
jno
std
ja
dec
dec
nop
dec
jno
es
jmp
dec
je
aas
adc
or
push
jns
loopne
shl
jno
lret
push
dec
lods
movsb
loope
jno
xrelease
jns
gs
jno
imul
push
ror
dec
jno
into
pop
add
or
ja
jno
mov
mov
sarb
pop
xorb
in
xchg
dec
jae
xchg
push
fs
imul
lea
ljmp
dec
xor
sub
pop
jno
lret
inc
fstl
loopne
dec
cmp
test
push
ret
jg
loopne
and
push
sbb
push
icebp
add
cli
aaa
inc
pop
in
adc
inc
xor
jle
jno
scas
sbb
push
sti
jno,pn
mov
xor
adc
jno
jno
lret
jb
push
jl
jg
shl
cmpsb
out
mov
and
pop
movsb
rolb
inc
lods
and
addr16
in
jno
mov
dec
mov
dec
in
sbb
bound
push
jmp
fdivs
jno
call
stc
stos
in
jb
jmp
sbb
ljmp
roll
cli
movsb
mov
mov
into
xchg
jae
insb
lods
pop
in
stos
pop
push
popa
shll
dec
hlt
jbe
sub
popf
subb
iret
mov
leave
jno
or
or
pop
inc
dec
jne
add
in
and
out
das
fistpll
divl
leave
mov
adc
fwait
in
and
xchg
mov
loope
mov
jno
mov
xor
pop
mov
sub
mov
and
add
jno
call
gs
jno
aam
xchg
add
mov
jg
popf
and
sbb
dec
adc
fnsave
fildll
mov
sbb
mov
xchg
jg
adc
mov
orl
or
lods
aas
jno
pop
cmp
clc
sbb
in
add
rcrb
jno
test
lcall
out
dec
xor
jno
addr16
pop
inc
mov
sbb
jns
adcl
mov
gs
jno
push
lahf
divl
sbb
fnstsw
aad
mov
mov
jmp
jge
mov
pop
mov
cmp
jmp
or
fwait
in
jmp
arpl
jno
in
scas
mov
adc
add
jno
and
sub
pop
inc
mov
xor
mov
mov
jno
ret
out
ljmp
daa
sbb
inc
int
cwtl
push
jns
xchg
aam
test
or
jmp
jg
pushf
rclb
clc
adc
and
jns
mov
mov
jno
jg
fldt
or
mov
or
xor
out
and
and
ja
push
and
mov
jns
pop
cmc
jnp
aas
sbb
jno
lret
mov
jno
in
xlat
jl
shll
or
popa
cmp
inc
rclb
icebp
jno
insl
mov
inc
jno
lret
in
arpl
pop
push
addr16
xor
std
pop
mov
sbb
mov
jno
xchg
shll
movsb
mov
jno
adc
mov
pop
cvtpi2ps
xor
adc
xor
jge
sbb
xchg
shrb
jno
adc
jno
dec
push
cli
jl
xchg
jno
xchg
adc
pusha
add
repz
aad
movsb
ljmp
movsb
jno
xchg
inc
out
daa
dec
cmpsl
inc
sub
std
jno
cmc
mov
pushl
push
pavgw
adc
aad
scas
pop
sub
sbb
shll
lods
cmp
jno
inc
pusha
mov
mov
jno
clc
jp
mov
mov
je
xchg
xrelease
imul
or
stos
pop
fnsave
adc
inc
mov
xor
pop
sbb
lods
cmc
mov
jno
dec
fnsave
outsb
fists
in
aad
pop
dec
jno
loop
push
cmc
dec
fiadds
insb
arpl
imul
mov
fsts
in
mov
or
jno
adc
pop
fbstp
mov
adc
cs
mulb
mov
sub
pop
mov
xchg
jno
mov
adc
jae
ja
stos
cld
mov
movsl
orl
push
imul
cmp
out
jnp
push
jl
push
ret
or
lods
mov
outsl
divb
and
out
mov
leave
in
push
loopne
insl
jge
mov
int3
jno
mov
push
sbb
loop
sti
rorb
sub
adc
xor
sahf
lret
cmp
add
cmpsb
jno
imul
insb
pop
xchg
loopne
push
and
pop
fstp
xor
loope
jno
jb
test
add
loopne
adc
sbb
xchg
loope
in
shlb
pop
sbb
xorb
sub
mov
cmp
jno
adc
mov
mov
fwait
and
imul
pop
lods
popa
sbb
push
js
push
jno
push
sub
dec
add
jns
aad
addr16
or
jo
or
loopne
pop
and
jns
js
jmp
push
shlb
adc
and
push
movsb
adc
scas
jno
shll
lds
dec
push
and
fs
jno
and
test
xchg
mov
xchg
lret
clc
push
push
jno
mov
cmpsb
xor
lcall
aas
pop
adc
push
gs
outsl
in
out
imul
jbe
testl
popa
and
cmp
xchg
cs
jp
int
add
xchg
jae
aaa
pop
add
gs
call
jno
lcall
scas
xchg
stos
mov
movb
jns
add
cld
imul
jbe
pop
push
jge
adcb
xchg
arpl
jns
cmpsb
cmp
inc
jno
add
outsb
jno
dec
pop
ja
cwtl
xor
jno
and
cmpsb
jno
data16
inc
mov
cmp
push
jle
rclb
push
inc
lcall
ret
jno
mov
shll
and
das
cld
cwtl
jno
lcall
leave
rcll
aaa
aad
jno
test
icebp
inc
jno
out
loope
xchg
adc
jno
mov
mov
int
aad
imul
hlt
jno
mov
pop
or
mov
aam
pop
cwtl
bound
dec
jno
outsb
sahf
insl
and
mov
movsl
test
cmp
xor
push
push
jno
clc
and
cmp
lea
bound
xor
sbb
cmp
mov
jmp
sub
dec
in
dec
dec
or
push
push
lahf
mov
mov
jno
fldenv
or
jl
in
cmc
push
xchg
jns
cltd
sub
lock
fcoms
mov
xlat
mov
pop
jno
mov
divl
cmpsl
mov
cmp
sbb
cltd
ret
fnstenv
shlb
lret
mov
jecxz
pushl
dec
pop
mov
jno
lods
xchg
jmp
jno
insl
leave
push
mov
pop
jae
in
jno
mov
xor
inc
push
or
imul
rclb
into
sbb
fidivs
pop
jmp
xor
mov
xchg
mulb
in
call
xchg
jno
inc
adc
int
aas
jne
sub
test
test
scas
mov
cmp
adc
jb
scas
mov
repz
pop
dec
adc
jg
jmp
jno
fmul
lret
mov
adc
jno
int3
push
movsb
pop
fisubrs
and
xchg
adc
in
push
dec
aas
sbb
stos
stos
jno
or
dec
scas
std
lods
jno
push
dec
ficoml
es
jno
inc
cwtl
xor
je
xor
jne
ret
adc
mov
jno
enter
and
imul
shl
jno
mov
cmp
xchg
inc
arpl
and
or
or
cltd
mov
loop
pop
int3
adc
in
iret
dec
test
jno
incb
mov
push
fs
andl
xor
outsl
popa
mov
add
push
nop
mov
cmp
cs
push
ret
movsl
icebp
shrl
repz
imul
jno
out
sbb
jno
mov
mov
sbb
cmp
adc
pop
or
jne
jno
jecxz
pop
jb
fcomps
out
aaa
les
sbb
sub
pop
divb
sbb
lahf
jnp
popl
jno
ja
loopne
fs
mov
lods
fistpl
enter
jno
rclb
cmp
mov
and
subb
sti
jl
jno
enter
lret
mov
add
sub
push
xor
movsl
sub
or
xchg
scas
push
shll
add
adc
sub
lods
jle
jno
xchg
add
out
test
sbb
sub
jno
mulb
cmpsl
ljmp
cmp
pop
push
ret
hlt
lahf
pop
sub
dec
add
cmp
push
jnp
push
adc
rclb
add
xor
jno
lds
and
pop
xchg
test
jno
lock
scas
mov
xor
and
add
gs
mov
mov
stos
and
jno
cmpps
adc
pop
jno
les
jecxz
cmp
jno
sbb
idivb
mov
js
and
add
xor
xor
cmp
jmp
push
lock
cmp
std
mov
loope
data16
movsl
xchg
in
jp
loopne
jno
test
ss
mov
nop
cmp
fs
push
iret
fnstcw
loope
add
repnz
pop
add
mov
jno
cmp
xchg
jns
inc
int
fdivr
sub
sub
dec
scas
divl
jno
push
outsb
xor
popa
or
push
mov
lock
jge
jno
fsubp
cmp
pop
xlat
cli
scas
cld
daa
nop
mov
dec
sub
fwait
xor
pusha
add
mov
push
jno
js
loope,pt
jnp
or
jno
sub
lods
mov
jno
fdivrs
shll
inc
int
pop
mov
cli
clc
clc
out
jno
mov
mov
jno
cmp
cmp
mov
shll
lods
fnstcw
in
mov
inc
jno
cmp
lods
mov
aad
and
cmp
aaa
push
in
dec
aas
lds
xchg
cmc
mov
jg
mov
jno
jecxz
jmp
je
arpl
jmp
mov
jne
push
into
insb
mov
sub
cmc
mov
aas
bound
mov
data16
and
mov
cmp
mov
lahf
mov
jge
or
cmp
enter
mov
jge
movsl
dec
fnsave
jbe
and
mov
ja
hlt
push
sti
loop
lcall
jno
pop
lds
popf
arpl
sbb
or
leave
loopne
lea
push
jno
mov
daa
adc
jno
xchg
sub
push
imul
cld
sarb
mov
sbb
jno
call
add
jno
fisubl
push
jp
sub
scas
data16
sub
lods
and
stos
jno
push
inc
in
nop
mov
mov
add
jno
jno
jg
out
daa
mov
movsb
repz
gs
data16
or
xchg
add
xor
in
dec
mov
sub
xor
mov
xor
mov
repz
jno
jg
rcrl
out
pop
scas
xchg
adc
aam
push
std
push
lcall
es
ficomps
jno
lahf
cmpsb
fbld
pop
mov
adc
jnp
out
dec
add
xchg
push
mov
aam
jns
mov
stos
push
and
in
out
aad
inc
adc
inc
lahf
icebp
lcall
jne
shll
jno
lock
loop
clc
adc
jle
ficompl
jl
cmp
mov
imul
sbb
sub
sbb
push
mov
mov
sub
and
jno
insl
lret
icebp
ret
enter
lods
cmovs
and
cmp
xor
std
lea
das
addr16
mov
popa
mov
rcrb
push
sbb
and
push
repz
mov
jno
sbbl
stos
jb
dec
adc
clc
xchg
cmpsb
jno
mov
loopne
pop
stos
push
pop
adc
shll
jno
ficoms
lods
mov
mov
mov
aaa
int
sbb
jno
in
cmp
push
jno
mov
cs
xchg
and
jl
fs
jno
cwtl
push
mov
jno
xor
ljmp
adc
pop
imul
movsb
sbb
cmpsb
shlb
push
dec
lods
cmp
lods
into
imul
adc
sub
and
insb
fldcw
mov
imul
adc
je
ds
jno
and
pop
cmp
popa
ret
cmpsw
mov
jno
add
jle
stc
inc
iret
jno
pop
ljmp
add
cs
lret
jno
xchg
add
testb
shlb
jno
sbb
ret
jno
sub
gs
jecxz
aam
lods
stc
mov
out
adc
mov
nop
cmp
hlt
in
stos
div
dec
jno
xchg
xor
jp
add
test
xchg
xor
pop
add
jb
call
hlt
lret
cmp
cltd
xor
jns
test
add
cmc
dec
in
push
or
pop
lcall
jmp
movsb
push
mov
jno
popf
xor
mov
popa
repnz
stc
lods
xchg
xor
sbbl
aas
jno
or
mov
add
push
das
loope
negl
sbb
push
fdivs
add
icebp
mov
adc
outsb
call
push
xchg
in
repz
fs
test
fwait
pop
fldenv
pusha
test
lret
repnz
jno
aaa
inc
or
call
rcrb
mov
mov
shll
mov
mov
xor
gs
mov
daa
jno
or
push
aas
mov
jle
cmpsb
fdiv
mov
test
or
leave
jmp
cltd
jno
push
push
push
arpl
lret
jno
mov
xchg
mov
fwait
jno
lds
jecxz
mov
jg
push
mov
loope
icebp
pushf
adc
and
pop
lahf
aam
je
mov
jno
into
cmpl
add
cmp
inc
jno
inc
push
ds
insl
nop
jno
pop
pop
insb
int3
test
xlat
jno
loop
mov
scas
push
pop
cli
inc
jo
inc
jmp
cmpsb
cmpb
jae
je
add
ror
mov
test
mov
aam
cmp
nop
enter
loopne
leave
popa
mov
jl
packuswb
outsl
in
aaa
pop
jno
ret
xor
orl
imul
or
mov
loopne
das
adc
out
ret
inc
dec
jge
shll
je
xor
jno
loope
jg
das
add
jno
into
dec
push
adc
sbb
shll
dec
repnz
jne
xlat
sub
lods
jb
jno
mov
push
adc
ret
adc
enter
icebp
sub
jno
in
xchg
cmp
clc
push
jle
jno
add
mov
adc
pusha
clc
push
scas
mov
divb
jno
jg
push
mov
mov
sub
jno
outsb
stos
icebp
jns
and
enter
pop
decb
push
sub
mov
cwtl
jns
shr
or
jo
mov
adc
out
mov
movsl
and
jno
mov
imul
andb
stc
sarb
push
pop
mov
xchg
jns
lret
imul
lods
push
in
jle
jno
jae
mov
lock
imul
mov
or
adc
fidivs
inc
jne
jae
shll
inc
xor
or
mov
nop
icebp
push
lods
pop
cld
push
jns
hlt
cmp
xchg
shll
outsb
dec
or
jmp
mov
xchg
xor
outsl
dec
dec
mov
jno
frstor
lea
push
adc
lcall
outsb
jno
add
xchg
mov
nop
push
into
mov
test
jb
jno
insl
aad
aaa
mov
data16
je
fimuls
jnp
sub
mov
jg
pop
jno
adc
mov
stos
inc
decb
addb
jno
jle
dec
cs
jno
cmpsl
jl
cmp
dec
out
push
mov
mov
mov
push
scas
jb
sub
out
xchg
out
arpl
inc
xchg
movsl
rclb
inc
lods
test
and
imul
and
aam
xchg
mov
repz
cmpb
aas
jno
inc
inc
lahf
lods
and
xchg
pusha
popa
lds
aas
add
jno
sbbl
jno
push
cmp
or
adc
test
sti
jo
xor
imul
outsb
int
pop
push
lret
push
sub
sub
stos
xor
andb
in
aam
jno
add
dec
and
add
mov
lahf
pop
mov
xorl
pop
jp
inc
sti
scas
mov
out
call
jae
sbb
dec
mov
outsl
popa
xlat
rol
call
fistl
add
lods
cmp
in
aaa
jnp
pop
scas
sbb
jg
or
jno
push
inc
xor
add
dec
add
repnz
inc
mov
loop
xor
jno
dec
cltd
out
les
push
dec
fdivrs
adc
popa
int3
mov
dec
jno
xchg
idivl
jno
ja
movsb
dec
call
jno
or
inc
rcll
xor
pop
add
hlt
lods
cld
cmp
lea
sub
fwait
jge
shll
outsb
push
jno
fisubrl
cmpsb
scas
and
mov
cmc
test
inc
pop
cmp
sub
int
outsl
js
push
dec
jno
sahf
loopne
xchg
xor
aaa
fldt
or
jae
pop
sti
jnp
daa
nop
lods
sbb
insl
or
fcoml
push
lods
mov
or
mov
jno
icebp
clc
sub
push
ret
cmpsl
mov
inc
mov
or
imul
or
jno
inc
lock
push
sbb
mov
jno
and
out
into
mov
mov
adc
rolb
jno
in
and
adc
int
out
popa
jae
insb
jge
aas
sti
lea
xchg
mov
fistpll
jno
mov
lea
inc
jno
pop
and
pop
shlb
std
nop
add
jge
popf
sbb
push
ret
mov
and
pop
add
cmp
sahf
std
xchg
inc
cltd
fnstenv
dec
inc
xchg
leave
lret
cmp
mov
push
imul
mov
js
xorl
xchg
imul
and
jno
out
mov
clc
dec
adc
popf
fsubr
ds
sbbb
xor
xor
xchg
je
pusha
lahf
jge
fistl
call
sub
scas
mov
out
jno
push
outsb
das
mov
dec
adc
jae
repz
int3
lcall
cs
rcll
xchg
jne
mov
dec
inc
mov
push
dec
adc
int
xchg
pop
cmp
jno
clc
hlt
ret
dec
push
adc
jno
sub
arpl
jg
testl
stos
test
repnz
jno
jl
mov
pop
jno
cmp
mov
jno
sbbl
push
leave
fildll
fsubrp
adc
loop
cmp
and
mov
jno
ficoml
add
push
jbe
mov
adc
sub
and
jno
test
sarl
and
sbb
das
jno
es
mov
jno
mov
mov
mov
fisubrl
sbb
mov
lds
icebp
lock
shll
pushl
jno,pt
mov
std
push
fxrstor
lods
xor
xchg
jno,pt
push
imulb
aam
insb
repz
aaa
arpl
lea
xchg
jno
add
cmpb
jno
mov
xchg
xor
imul
jno
xchg
jb
movsb
rcl
jno
pop
cmpsb
push
cltd
mov
in
call
pop
inc
scas
mov
stc
loop
cmc
in
loopnew
jno
inc
xor
mov
jno
mov
push
in
jno
and
popa
popf
cs
jno
pushf
sbbb
pop
adc
bound
out
mov
add
shlb
aaa
xor
push
orl
sub
jbe
xchg
adc
xlat
jne
jno
sub
jg
xchg
lods
je
sbb
loopne
xlat
jne
and
dec
xchg
call
dec
jno
push
ret
jle
lea
into
dec
mov
mov
imul
jo
cli
mov
xchg
test
cwtl
jno
xor
sub
in
sti
push
test
dec
mov
pop
xor
cltd
loop
repz
call
jno
push
std
inc
add
sbb
pusha
jns
enter
shlb
in
xchg
xchg
sub
gs
jno
mov
mov
add
and
jecxz
push
add
das
leave
mov
jno
pop
test
pop
sbb
sti
add
push
jge
call
mov
mov
mov
add
pop
jno
push
push
std
movb
add
mov
arpl
jno
shll
pop
les
out
pop
mov
in
jnp
xor
stc
loop
cmp
add
call
sti
xchg
scas
jne
mov
push
dec
jns
jp
fadds
and
arpl
ror
push
aad
add
inc
nop
movsb
xchg
mov
outsb
mov
cmc
jnp
scas
repnz
mov
cmp
fbstp
adc
dec
dec
mov
add
fwait
xorl
mov
out
or
pop
shll
imul
bound
jo
sub
sbb
push
js
pusha
jbe
mov
arpl
ss
mov
pop
out
jae
jno
sbb
mov
int
insl
mov
rcr
jno
add
mov
test
xchg
popf
gs
jno
xlat
sahf
push
lds
sbb
or
jle
jno
hlt
out
jg
jno
mov
ja
mov
adc
dec
lods
lret
or
scas
repz
nop
outsl
inc
push
imul
iret
inc
xchg
push
fsubrl
int
xlat
sbb
push
mov
in
or
xchg
and
sub
outsb
adc
icebp
lcall
dec
jno
mov
pop
mov
mov
jno
push
jmp
xor
cmp
dec
mov
push
fnstcw
leave
divb
or
int
push
btr
into
popf
in
mov
loope
xor
xchg
xor
imul
or
popa
iret
push
stos
mov
jb
push
adc
test
fdivrs
xor
dec
xchg
mov
imul
dec
push
movsb
jno
sbb
fmull
out
das
dec
mov
in
xchg
das
xchg
inc
outsl
test
mov
les
ss
mov
xchg
lock
loopne
repz
add
sub
dec
int3
lods
xchg
cmc
ja
popa
loope
ret
aad
push
mov
popf
ljmp
push
sub
push
xchg
jno
sbb
ss
mov
cmp
adc
jg
nop
std
aaa
mov
push
fnsave
rcrb
dec
jno
test
faddl
add
cmp
xor
sub
dec
je
call
cmp
ja
stos
ror
pop
mov
push
nop
or
mov
pop
and
es
jle
les
vaddsubpd
pop
inc
jecxz
in
dec
jno
ds
dec
add
cmp
in
sbbl
ficoml
stos
or
bnd
mov
push
add
sbb
frstor
xor
push
sbb
jns
icebp
dec
lea
int
icebp
jno
in
jge
orb
mov
popa
or
ja
std
cmp
inc
jno
mov
xor
rcll
jno
lods
aam
and
out
xor
outsb
fbld
or
push
repnz
daa
inc
pop
jnp
pushf
xor
loope
pop
ret
jno
pop
cmpsb
fidivrs
fs
and
add
in
jle
push
jno
jo
cs
les
jl
dec
mov
jno
ret
mov
pop
push
sbb
ljmp
mov
push
mov
push
pop
jns
sbb
rorb
aas
leave
iret
push
popa
jg
out
xor
mov
insl
xorb
mov
flds
inc
mov
pop
into
nop
test
jno
adc
iret
and
xchg
pop
call
mov
jno
bound
lahf
fistpll
jno
insl
enter
clc
pop
adc
sti
and
test
sub
lret
out
pushl
repz
mov
jmp
dec
mov
gs
mov
mov
push
dec
addr16
jecxz
cli
or
dec
adc
stc
cmp
imul
fucom
dec
cmpsb
scas
jno
bound
add
rorb
inc
movsl
pop
int
jno
leave
out
xchg
cmp
outsl
jno
push
add
mov
mov
add
mov
in
insb
push
addr16
rorb
mov
cmp
xchg
iret
mov
testl
repnz
and
xchg
xorb
imul
cmpl
arpl
mov
sub
push
popf
xor
lea
call
and
outsb
pop
pushf
adc
jno
mov
pop
jno
mov
cli
dec
jno
jbe
sub
adc
push
jnp
or
xchg
add
loopne
data16
xchg
sub
jne
mov
scas
inc
xchg
shrl
mov
jae
inc
out
enter
ds
dec
daa
fstpt
je
insl
inc
pop
icebp
fdivl
lods
sub
jno
push
jmp
or
andl
xchg
or
bound
push
lds
mov
lods
or
add
mov
xchg
and
arpl
lahf
xor
ja
and
into
call
pushf
jnp
loop
jno
cmc
cmp
xchg
inc
and
mov
nop
mov
mov
push
mov
push
and
cli
jno
in
inc
pop
popa
jno
cmp
mov
mov
shlb
mov
push
sbb
incl
cli
mov
jl
repnz
xor
lcall
lea
js
shl
jno
out
push
movsl
outsl
xor
cmpl
or
shl
pop
mov
adc
mov
jae
jno
dec
int3
add
inc
xchg
shrb
ret
jbe
loope
cwtl
icebp
stc
movsb
mov
ljmp
inc
nop
push
mov
cmp
test
sbbl
les
inc
mov
fistl
idivl
repz
jno
pop
cli
pop
ljmp
andb
lcall
jno
shlb
adc
xor
sub
xchg
in
xchg
into
stos
jg
sbb
xlat
jmp
int3
bound
lea
std
shrl
jae
decb
cwtl
jb
or
fucomip
jae
mov
jno
ret
lret
dec
jno
sti
int
lock
mov
and
jns
enter
test
fcompl
in
out
and
inc
mov
adc
nop
call
jno
shl
and
mov
aam
jne
jno
jns
clc
popa
mov
push
mov
cmp
cmpsl
icebp
test
test
dec
fidivrl
js
sbb
inc
jns
es
push
subb
mov
pushf
into
mov
push
dec
ret
jle
mov
lds
lcall
adc
shll
jge
jae
jno
mov
jge
repnz
mov
push
lock
and
nop
daa
and
xchg
jno
xor
andl
lods
aad
pop
sub
cmpsb
jno
outsb
sbb
sub
nop
xor
jnp
dec
nop
out
mov
sub
ficoms
jno
sbb
mov
mov
jno
sbb
lds
addl
test
jno
mov
pop
mov
inc
jne
lds
jno
sub
mov
push
jno
or
mov
stos
mov
xor
push
mov
ret
sub
inc
jno
data16
fnstenv
push
lea
in
cmp
jno
xor
inc
mov
push
or
jnp
repz
jmp
add
pop
stc
shl
pop
pop
jno
xchg
popa
and
inc
jns
scas
ret
jo
and
icebp
mov
xchg
xchg
inc
jno
and
inc
in
mov
aas
sbb
jno
xchg
int3
or
gs
xchg
adc
stos
cmp
mov
jno
push
pop
jecxz
dec
dec
lea
sub
js
jmp
jns
divb
fldl
pop
jno
scas
sub
push
call
fidivs
mov
dec
push
adc
dec
into
mov
dec
mov
mov
lret
dec
jno
pop
pmuludq
ss
push
xor
mov
xchg
mov
jns
insb
iret
add
shrb
ret
call
pop
and
xor
dec
popa
mov
fadds
mov
call
inc
testl
mov
jno
xchg
mov
push
add
sub
out
cld
push
pop
int3
dec
call
leave
xchg
pop
fwait
imul
dec
lret
xor
adc
dec
fsub
jae
icebp
inc
lods
jno
sub
pusha
push
mov
nop
dec
pop
js
lods
jne
notb
mov
xorl
pop
pop
sti
leave
daa
popa
jno
out
popf
lcall
fsubrl
and
or
das
loop
leave
jno
cltd
push
rclb
jno
cwtl
out
shll
ja
jns
xor
jecxz
add
call
cltd
pushf
lahf
inc
subb
into
mov
int3
mov
inc
jno
mov
inc
pop
jno
sarl
scas
nop
shll
imul
xlat
inc
jg
nop
mov
cmp
or
rol
hlt
inc
outsb
xor
jno
cmp
mov
ret
rolb
or
xor
jae
addr16
std
jno
inc
popa
xchg
mov
and
mov
sbb
imul
push
inc
popa
or
jno
fisubs
hlt
rcrb
mov
mov
or
mov
jge
jmp
icebp
sti
dec
lods
xor
divb
repnz
inc
pusha
fs
and
mov
jno
adc
call
rcrb
das
je
dec
jno
fimull
and
pusha
nop
jno
sub
cmp
sbb
jno
mov
repz
sub
lods
mov
xchg
jno
jle
xor
int
jno
dec
mov
leave
lea
clc
add
xchg
push
jnp
and
cmc
lods
add
jg
sub
dec
stos
pusha
xor
jno
hlt
jecxz
std
insb
and
jno
cltd
add
adc
jp
jno
sub
filds
icebp
jmp
jno
icebp
push
leave
loop
mov
jno
mov
and
xchg
lock
imul
je
movsl
push
xchg
push
out
sysenter
outsb
inc
jno
mov
push
adc
mov
out
jno
sbb
sub
scas
pop
xchg
jp
jns
lods
jl
popf
jno
cmp
mov
mov
jno
dec
jae
mov
fcmovb
jno
dec
mov
cmp
mov
push
push
jne
or
jo
out
enter
jno
sub
js
push
lods
cmp
test
das
testb
pop
dec
iret
insl
push
jno
lds
jge
mov
mov
mov
sbb
jno
and
mov
jno
mov
addr16
jno
jne
cmp
js
mov
cmpsb
in
dec
sbb
jmp
imul
pop
jno
mov
fisubrs
jno
ds
cmp
mov
outsl
jno
lods
sub
out
jl
jno
jp
mov
sbb
sbb
jae
sub
inc
mov
loope
rcrl
in
jno
push
adc
push
dec
lcall
dec
std
lret
into
lods
mov
movsl
addr16
push
fld
mov
popa
adc
movsl
jno
push
loopne
inc
lret
xor
mov
push
jnp
lahf
or
subl
fsubr
add
xlat
addr16
test
xchg
and
loop
inc
jo
lods
sbb
lret
sub
pop
jnp
xor
jno
call
adc
xchg
jns
fsubl
adc
inc
aam
mov
adc
jg
add
jno
jbe
xchg
sub
bound
jp
cmpsl
fnstsw
inc
lret
rorb
add
pop
call
negl
lret
xchg
pusha
push
pop
jno
repz
gs
shll
dec
adc
add
mov
jno
mov
jmp
pop
ret
mov
or
mov
push
test
add
jno
loopne
out
int3
sbb
pop
dec
cmp
xor
jno
ja
fdivrl
jo
jno
mov
cmp
push
sarl
or
xchg
jne
push
cmp
sub
mov
mov
lea
xlat
jno
ret
pop
pushf
stos
aaa
adc
jb
dec
adc
sub
fwait
in
pop
and
mov
push
inc
push
cmp
insb
push
or
push
data16
jno
inc
rcl
sub
jno
mov
js
mov
sub
add
scas
jnp
jno
xchg
pop
pusha
push
sub
popf
jecxz
cmp
insl
out
dec
fmull
jns
jno
add
jmp
sub
push
and
and
mov
sub
popa
gs
mov
scas
or
lock
mov
jno
lds
xor
fstpl
ja
je
into
cmc
add
jno
and
xor
cmc
jo
mov
xchg
gs
aas
fistl
nop
loope
dec
insb
pushl
xlat
jne
lcall
jl
add
mov
pushf
cmp
mov
sub
popa
and
shlb
cmp
dec
or
dec
sub
jno
xchg
mov
hlt
ret
jo
lret
std
outsl
leave
pop
jno
dec
stos
mov
push
movhps
inc
in
dec
scas
push
jo
popa
in
xor
loop
aas
jmp
mov
mov
repnz
or
jmpw
jnp
pop
adc
cmpsb
xor
repz
add
fsubp
int
cld
jno
mov
daa
jmp
xchg
xor
das
fs
pusha
test
cwtl
inc
jmp
les
xchg
mov
push
pushf
shl
push
cltd
jno
xor
je,pn
xchg
jno
arpl
jae
int
jno
or
out
jno
sbb
outsl
sub
xchg
jno
subl
or
push
cmp
add
in
sbb
pop
jge
xchg
or
jno
scas
mov
es
cltd
and
add
and
lods
lcall
ret
in
cmp
sbb
mov
cmp
cmp
dec
mov
outsb
aaa
imul
cmp
push
incb
jno
inc
ret
icebp
outsl
and
jno
lcall
inc
shll
popf
cmpsb
mov
xchg
test
jno
fsubs
lea
inc
cmp
out
and
jae
xor
adc
rcll
cli
jae
std
xlat
push
icebp
dec
jno
cmp
mov
pushf
movq
xor
fwait
loop
mov
jp
dec
mov
add
dec
jno
loop
stc
push
nop
and
repz
int3
jno
mov
mov
jno
xor
aad
push
adc
divb
mov
jge
push
xchg
ja
xchg
push
mov
sbb
adc
loopne
and
mov
test
addr16
mov
ret
mov
xor
jno
sub
in
xor
push
or
inc
jno
sbb
jl
out
outsb
cli
mov
sbb
mov
lret
or
adc
popf
dec
jmp
xchg
test
mov
out
loop
mov
lret
out
sbb
dec
or
stc
sub
roll
adc
fldln2
jno
mov
subb
adc
in
dec
inc
idivb
push
cmp
jnp
pop
xor
jno
push
movb
jns
stc
push
jmp
nop
jno
push
divb
jno
push
mov
cmp
jle
pop
inc
movsl
xor
dec
dec
xor
lea
idivl
adc
call
jb
add
jbe
rorb
nop
lret
cmp
stc
mov
mov
jp
push
mov
fstl
sub
hlt
outsb
iret
nop
add
lea
sahf
dec
jne
adc
jno
bound
out
push
outsl
cwtl
jl
mov
stos
add
jno
inc
in
dec
pop
push
pop
pop
jno
loop
adc
fs
jno
test
and
add
repnz
pop
insl
gs
lock
paddd
mov
fdivs
ret
rorl
push
jmp
xor
jno
dec
and
xor
xor
nop
outsb
jno
test
add
pop
mov
idiv
jno
std
test
rolb
jno
daa
adc
arpl
gs
jle
cli
scas
xchg
xor
loope
test
popa
inc
imulb
jno
mov
cwtl
add
and
cmp
jnp
insb
cmp
and
jmp
pusha
and
lods
mov
popf
jno
inc
pop
insl
sub
stos
test
popa
out
addr16
out
jnp
pop
cwtl
sti
and
stos
jno
mov
sbb
cmp
adc
je
jno
xor
cld
fs
jno
clc
pop
and
xor
lahf
jge
jns
into
dec
sti
mov
or
arpl
clc
jno
inc
add
ds
inc
xor
adc
loop
jp
dec
mov
popf
sti
mov
lcall
dec
inc
cmpb
cmp
flds
adc
add
rolb
inc
push
data16
ljmp
sbb
cwtl
sub
inc
inc
push
jno
ljmp
jno
arpl
dec
shlb
sub
push
jno
cltd
mov
push
jno
pop
aaa
imull
pop
mov
jg
pop
xchg
iret
in
jno
inc
adc
jno
cs
push
xchg
xor
dec
fndisi(8087
aas
stc
ja
mov
mov
outsl
inc
int
pop
das
nop
or
pop
test
insl
mov
out
push
out
jno
adc
or
repz
or
sub
sbb
mov
push
or
jge
pop
or
adc
or
clc
push
lret
push
lods
add
xor
cmp
sahf
jns
jg
ss
jno
aam
stos
cmpsl
sbb
std
mov
ret
loopne
es
popa
mov
xor
int
je
jno
fisttps
ja
jno
sarb
jno
decb
jb
and
insl
dec
shrl
pop
jne
adc
xchg
movsl
mov
sbb
out
pusha
xor
fdivrs
nop
lods
jmp
cld
jle
loopne
cmpsl
rcll
nop
sub
jno
in
iret
and
sub
jae
dec
jae
xchg
adc
dec
mov
pusha
jno
sbb
push
cmp
push
cltd
jnp
jno
xorb
test
push
mov
aas
out
jno
in
mov
jno
adc
xor
lahf
fwait
icebp
jno
push
stos
jge
aam
jno
cmp
cli
mov
sbb
sub
push
popf
sub
cld
or
jb
xchg
aad
or
popa
xor
jecxz
andl
loopne
cmp
call
lret
xor
adc
cli
aam
mov
push
and
sbb
inc
into
in
sbb
push
cmp
mov
jno
dec
jl
mov
add
sbb
mov
mov
leave
inc
in
push
cmp
sub
lds
push
hlt
adc
jle
lods
mov
lret
adc
out
mov
cmp
jns
adc
ret
jno
popa
mov
fstps
jno
cwtl
mov
inc
jno
xor
ret
push
adc
xchg
pusha
cmp
or
mov
jmp
xlat
mov
stc
mov
into
xchg
pop
and
jg
push
test
adcl
and
lret
jae
aaa
jp
movsb
inc
add
hlt
ss
cmp
outsb
jno
mov
in
rcrb
xchg
and
es
mov
aam
jno
lods
mov
aad
mov
out
dec
test
xor
jp
cli
sub
jno
add
mov
jno
dec
mov
inc
sub
rorl
std
adc
hlt
shlb
add
mov
sub
jecxz
imulb
inc
cmc
cmp
mov
adc
das
sbb
iret
rclb
push
jno
out
cmp
jno
daa
pop
xchg
ljmp
cltd
scas
xchg
xchg
adc
push
push
dec
or
divl
cli
jno
ja
or
scas
mov
push
jne
mov
rcl
inc
imul
xchg
xor
cmp
pusha
dec
inc
nop
out
sub
ss
dec
jno
rcrb
jno
cli
sub
or
sti
scas
loope
dec
repnz
xchg
sub
inc
adc
data16
out
jno
inc
imul
xor
pop
mov
lods
fstl
insl
dec
adc
lret
mov
andps
stos
jmp
dec
pop
push
cmp
mov
and
fildl
jno
repnz
jno
or
in
or
loopne
adc
jno
imul
lahf
mov
jp
lods
into
gs
add
cmpsb
or
jno
sub
mov
ljmp
and
sbb
mov
push
adc
adc
mov
shll
cmp
cltd
das
jno
cmpsb
mov
mov
loope
je
push
push
xorb
decl
mov
add
cmp
test
adc
ret
pop
in
mov
stc
cmpsl
stos
add
cmovb
mov
sbb
subl
or
jae
shl
call
mov
adc
bound
jmp
inc
xor
jno
cmp
xchg
push
jbe
jno
inc
push
fildl
push
jecxz
arpl
lcall
scas
sub
test
icebp
xchg
jne
std
pop
xchg
mov
jno
out
ljmp
inc
pop
outsl
in
push
sub
xor
mov
int
jno
adc
cmp
mov
adc
cmp
pop
jno
out
dec
adc
scas
stos
pop
dec
adc
jno
jbe
dec
fdiv
mov
jno
mov
in
sbb
cwtl
inc
jno
ret
sbb
push
mov
and
adc
loop
jnp
dec
or
shlb
fcompl
mov
xchg
fidivl
cs
xor
mov
stos
into
lcall
dec
ja
adc
jle
shl
jge
out
mov
js,pt
repz
push
in
jae
fistpl
push
enter
jno
mov
xchg
insb
mov
scas
sahf
and
xor
adc
lcall
mov
jno
and
loope
adc
shll
sbb
mov
push
add
sbb
jno
mov
int3
pop
xor
push
sbb
addr16
or
mov
xor
fistps
insl
mov
jno
pop
or
push
sbb
jno
inc
pop
sbb
repnz
imul
out
ret
jno
adc
mov
mov
cmp
gs
push
nop
push
js
cs
ja
sbbb
cmpsl
jl
cld
popa
jno
daa
push
mov
jno
sub
push
jno
in
sub
mov
fldt
jno
icebp
stos
sarb
shrl
xor
mov
inc
dec
jmp
inc
and
sub
mov
push
addb
jle
inc
jns
daa
mov
jno
dec
aad
and
jmp
icebp
lock
add
pop
jge
jnp
test
push
divb
hlt
sbb
nop
repz
pop
mov
mov
push
scas
push
inc
sbb
xor
jno
mov
jno
add
adc
imul
into
pop
sbb
mov
mov
test
imul
jno
fisttpll
rorl
decb
insl
or
fsubs
xchg
add
xchg
mov
jmp
mov
jns
mov
and
sti
lret
push
and
in
in
xorl
stc
ss
jno
dec
push
repz
in
into
test
sbb
push
repnz
jno
pop
pop
mov
inc
ds
cltd
fcmovnb
jns
popa
xchg
add
pop
mov
jo
push
and
testl
adc
mov
addr16
shl
outsl
jmp
insl
cmc
hlt
in
cld
popa
xchg
cmpsl
dec
insl
lret
adcb
xchg
pop
push
jne
gs
mov
lods
inc
nop
scas
sahf
jno
movsl
or
mov
dec
jno
in
sub
pop
jle
mov
cld
js
dec
jmp
mov
repz
in
or
or
jp
jecxz
pop
ret
repnz
daa
negl
jno
pop
push
and
push
repnz
and
jle
xchg
push
jp,pn
push
pop
dec
sub
inc
push
inc
jno
sbb
bound
jno
lcall
jno
sbb
lahf
icebp
dec
dec
test
leave
and
leave
push
mov
pop
mov
insb
addr16
orl
cmp
push
mov
inc
int3
repnz
jno
xor
mov
insb
shll
xlat
into
jg
mov
jno
out
js
cli
pop
jno
dec
inc
repnz
sahf
cmp
rol
sbb
add
lods
mov
jno
pushfw
pushl
sti
sub
test
jno
cmp
shlb
push
jno
mov
and
vmread
jno
push
les
jno
insl
xor
dec
jno
test
out
rcrb
movsl
or
adc
jae
cwtl
dec
dec
mov
data16
or
xchg
push
mov
pusha
out
and
movsb
lret
sarb
lock
adc
push
loop
jno
cmp
test
std
mov
mov
repz
adc
add
insb
mov
cmpsl
push
cli
jno
mov
adc
sbb
popa
mov
inc
xchg
clc
dec
mov
xor
insb
repz
jno
movb
jno
data16
out
in
nop
adc
testb
jno
dec
push
iret
jmp
es
mov
xchg
adc
repz
dec
shll
and
sti
insb
lahf
jno
cmp
out
mov
mov
jl
gs
cmpsl
movsl
jno
push
dec
jge
out
dec
mov
sbb
jae
push
lcall
adc
mov
xlat
mov
test
or
sti
in
push
lock
ftst
cmp
or
jae
jno
fiaddl
cmp
jno
out
sbb
or
push
ret
mov
gs
push
mov
push
jno
dec
lods
mov
and
mov
fst
mov
sbb
outsb
lea
dec
jge
fsin
xor
jp
push
mov
sbb
lods
sbb
inc
xlat
jp
xor
and
scas
sahf
xor
negl
call
in
aam
jno
add
sbb
mov
test
pop
xor
jno
iret
cmp
addr16
mov
mov
jno
sbb
or
xchg
ja
mov
insb
jge
cmc
shlb
subb
jl
mov
mov
jae
cmc
popf
xor
jno
adc
push
jnp
call
sbb
inc
jne
rorb
xlat
lods
scas
lds
mov
loop
sbbl
mov
subb
mov
push
mov
nop
xchg
and
hlt
rcrl
inc
and
jns
sbb
bnd
out
push
cld
mov
jno
aad
stc
cmc
inc
push
pop
adc
sub
and
fcoms
arpl
xchg
jo
aaa
out
lret
mov
dec
popa
add
arpl
push
mov
jno
aas
cmp
or
aam
sbb
sbb
add
mov
add
dec
sbb
mov
sub
nop
adc
frstor
xlat
jno
add
cltd
call
inc
jl
in
jns
mov
ret
lcall
fsubr
nop
or
mov
cmp
shlb
ss
outsl
pop
mov
jno
fs
int3
iret
sbb
lds
push
repnz
call
cmp
jno
or
cltd
out
scas
jns
sub
loopne
jno
call
or
jno
mov
iret
xor
in
mov
je
shll
mov
inc
std
xchg
pop
jno
and
jns
and
loop
in
std
dec
fwait
jno
mov
xor
inc
shll
scas
and
sub
lods
loope
fildl
inc
dec
jno
sub
mov
or
cmp
xchg
mov
cs
add
daa
popf
push
add
lods
je
adc
adc
fmull
movsb
nop
mov
mov
cmp
stc
push
jbe
hlt
and
clc
jp
mov
or
bound
adc
cwtl
lds
mov
or
lods
out
jns,pt
dec
mov
cmpsb
xchg
lahf
jmp
mov
loope
cmc
mov
jno
or
int
cmc
cli
jbe
dec
inc
stc
loopne
fcmovu
inc
loopne
add
jge
fwait
xlat
jno
rcr
mov
fisubs
jno
cwtl
lret
cmp
inc
jno
test
sub
mov
cld
shl
jno
mov
aam
jno
call
pop
or
sahf
popa
xchg
inc
int
stc
jbe
mov
les
jae
pcmpeqd
in
sbb
pusha
push
hlt
and
xor
xorl
imul
push
mov
daa
mov
add
dec
mov
inc
xor
insl
push
xchg
xchg
push
mov
movsb
dec
jnp
jno
mov
lods
jno
inc
xor
cmp
cli
lahf
jp
jno
imul
les
cltd
sub
jno
mov
cmp
test
out
into
xchg
jno
inc
mov
int
xor
faddl
adc
push
sbb
push
sub
ja
xchg
add
out
jno
inc
clc
stos
cmpb
pop
std
subl
xor
and
fstenv
jmp
je
jno
mov
mov
lock
loop
repnz
jns
xchg
mov
cwtl
mov
in
pop
jns
fbstp
or
xorb
mov
imul
mov
and
jno
aam
fs
stos
shll
adc
push
pop
and
push
pop
sub
icebp
aam
jno
mov
fdivl
loope
xchg
fisubl
sbb
jno
jmp
ss
callw
cmp
jnp
hlt
adc
push
jo
jno
dec
mov
inc
jno
fs
dec
jne
mov
or
jno
data16
int3
cltd
mov
push
xor
lods
ficompl
jecxz
hlt
pop
dec
xor
int
ficomps
nop
jbe
jno
add
pop
cmpsb
or
repnz
sbb
mov
loopne
sbb
dec
jno
pushl
gs
and
addr16
cwtl
ficomps
jno
mov
sbb
arpl
mov
into
rcll
cwtl
cs
and
cmpb
rol
jnp
aas
mov
adc
imul
sub
push
scas
xchg
adc
jbe
sarb
sahf
arpl
icebp
loope
out
test
dec
dec
lahf
nop
subl
push
push
jne
xchg
out
jo
jp
es
mov
test
fnsave
jns
mov
nop
xchg
test
jnp
cmpsl
sti
xchg
pop
fs
jnp
mov
sub
stc
nop
dec
pop
jmp
and
insb
in
xorl
int
fdivl
mov
je
jno
sbbl
push
shl
sbb
fstl
test
sub
mov
add
clc
jecxz
loopne
in
dec
cmp
std
cmp
and
cmc
jp
stos
cld
cmp
scas
clc
push
jno
add
shr
sub
jno
inc
xchg
int
cmp
lahf
jno
xchg
add
jns
pushf
sbb
inc
ja
rcrl
nop
hlt
popf
in
jae
pop
int
jno
ss
dec
jo
mov
jne
iret
sub
jno
test
add
repnz
sub
hlt
xor
mov
inc
fadds
jno
mov
add
push
je
jno
notl
sbb
fidivrs
ffree
mov
arpl
mov
dec
gs
inc
insb
movb
nop
xchg
cld
or
add
in
sub
jns
rcrb
scas
xor
jno
in
lds
or
or
out
jno
xor
inc
imul
lock
iret
pop
mov
adc
popa
shrl
xor
or
je
cmpsl
cwtl
jno
pop
push
jae
daa
and
jno
popf
nop
mov
insl
mov
jno
subb
mov
push
jmp
dec
xchg
xchg
push
cmc
and
je
mov
jmp
bound
ss
sti
jno
or
movsl
pusha
lock
jno
dec
xlat
ret
inc
mov
outsb
lahf
push
xchg
mov
daa
into
lret
mov
jno
ljmp
push
pop
xor
ds
fs
nop
xchg
aam
loopne
adc
in
xlat
adc
sbb
mov
cli
xchg
add
xor
xchg
popa
push
icebp
sbb
push
push
fcoms
sbb
not
and
or
jno
xchg
imul
jbe
jno
adc
out
xchg
lret
ret
insl
mov
pop
push
push
push
xorb
xchg
dec
pop
imul
hlt
ror
jno
push
mov
xchg
cli
adc
cmp
mov
jecxz
xor
aad
xchg
mov
xchg
pusha
sub
popa
adc
int
push
push
inc
push
shlb
push
test
sti
xchg
sub
in
in
or
dec
sub
aam
sti
mov
jno
fidivrs
xchg
imul
out
inc
int
xchg
iret
mov
adc
mov
push
xor
movsb
xchg
out
jg
jge
arpl
mov
adc
adc
insl
scas
std
sub
jno
dec
pop
int3
js
lret
jmp
je
cli
jno
jle
add
push
adc
sub
add
jge
and
in
sbb
jl
ror
xlat
xchg
scas
mov
push
cmp
sbb
inc
gs
and
test
jle
or
aas
in
inc
aam
lock
push
mov
in
pop
adc
inc
pop
push
jle
cmp
mov
jno
fimull
xor
lods
sbb
cltd
icebp
orb
cmp
inc
dec
pushf
jno
sbb
push
and
vmread
sbb
adc
xchg
ret
jg
into
lea
sbb
jge
pop
adc
push
mov
dec
jb,pt
inc
jno
sti
repnz
inc
adc
pop
ret
sahf
gs
jb
popa
push
adc
add
js
sbb
adc
loopne
add
lock
xor
jns
sbb
push
mov
fidivs
arpl
sbb
inc
xchg
in
adc
push
push
sub
jb
stos
bound
cmpxchg8b
jno
adc
ljmp
push
stos
sub
and
and
xchg
jns
sbb
or
mov
sub
adc
popa
cmpb
jno
cmp
xor
pop
fisttps
hlt
push
cmp
xchg
test
jno
inc
ret
mulb
add
jmp
push
pop
inc
in
stos
dec
and
mov
mov
js
je
pushl
adc
loop
incb
in
repnz
int
and
mov
arpl
das
xchg
mov
nop
add
push
jne
test
mov
pop
iret
pushl
xchg
mov
cmp
bound
ja
subl
std
cmp
mov
add
and
pop
xor
inc
jge
jns
xchg
shrl
fsts
scas
bound
xor
dec
mov
mov
xor
popa
ret
or
jno
mov
cmpsb
xor
fwait
mov
iret
pop
add
lret
scas
jno
push
or
out
pop
push
ss
cltd
and
jns
cmp
fsubrs
mov
add
jno
push
mov
repnz
pushf
das
fstl
mov
jno
cmp
outsb
inc
ret
inc
cld
adc
nop
add
pop
adc
pop
dec
dec
mov
sub
fwait
cmpsb
push
std
push
lret
jno
scas
imul
and
inc
nop
mov
sub
inc
xchg
mov
mov
jne
int3
jmp
mov
or
out
stc
clc
pop
in
daa
in
jns
aam
popf
lods
push
in
das
insl
dec
adc
dec
mov
add
xor
jno
jmp
orb
and
pop
mov
bound
jno
lds
dec
jno
or
dec
cmpsl
lock
hlt
dec
xor
jno
and
pop
inc
lahf
xor
adc
in
dec
lcall
clc
sub
or
pop
cmc
inc
xor
jge
push
xchg
adc
adc
dec
jg
sub
jno
mov
lea
cli
ds
movsb
inc
inc
divb
cmp
mov
jno
aas
mov
mov
push
or
adc
jno
leave
in
pop
inc
inc
js
jno
popf
mov
jbe
lahf
divl
sbb
sbb
bound
xor
fimull
mov
push
pop
push
clc
daa
call
mov
int3
mov
mov
cmp
out
outsl
shlb
push
vpunpckhbw
jno
dec
aad
add
dec
xchg
push
xchg
sarl
mov
jbe
push
sti
movsb
mov
fnsave
out
jecxz
pop
inc
jae
das
adc
es
test
mov
les
jae
scas
jnp
pop
adc
jns
repz
or
in
jno
pushf
pop
leave
xchg
andl
jns
lahf
xchg
sub
sarb
mov
dec
clc
shll
movsb
push
dec
cwtl
pushf
sub
jno
xchg
push
jno
lret
pusha
mov
adc
repz
jno
lods
es
push
cwtl
int
negb
jg
call
mov
add
testb
push
xor
sbb
cmp
push
movsl
f2xm1
pushf
jno
mov
jg
jno
xchg
sbb
aad
or
xchg
push
pusha
jle
jmp
push
shr
subl
insb
lahf
dec
xlat
ja
mov
jl
jge
jae
adc
ja
test
and
cvtdq2ps
fidivl
xor
sbb
dec
xor
cmp
and
xor
out
cmp
jno
ljmp
jo
ret
dec
leave
sub
jno
test
sbb
mov
and
inc
xor
stos
insb
sub
mov
xlat
xor
pop
push
lret
jle
loope
cmpsb
sti
test
jbe
inc
das
outsl
cwtl
xor
ss
jno
popf
or
jno
push
and
cmpsb
pop
in
jno
and
loopne
test
jno
popf
std
mov
add
das
xchg
fimuls
sarb
out
push
add
push
lods
sbb
shlb
ss
test
sub
jbe
fwait
jno
fstps
jns
or
sub
pop
xchg
dec
out
jne
jno
shlb
jno
mov
out
lret
push
dec
fnstcw
cmp
addb
cmpsb
shlb
fildll
pop
cmc
popa
repnz
mov
stos
test
and
xchg
int
pop
jnp
jno
jae
push
cmpsl
and
dec
dec
stc
lds
lea
and
adc
test
sbb
xchg
add
add
popa
adc
jno
push
adc
mov
and
cwtl
imul
mov
in
mov
push
jno
adc
or
mov
imul
repnz
add
adc
dec
inc
icebp
push
nop
movsl
popf
hlt
xchg
dec
adc
add
jno
jo
mov
adc
add
or
jnp
sbb
inc
out
mov
repnz
mov
jb
in
test
or
add
sub
mov
fs
push
dec
insl
das
jns
mov
out
scas
fwait
and
test
mov
popa
push
sbb
adc
mov
push
clc
shll
mov
jno
scas
push
cld
inc
mov
jno
or
sub
push
lret
arpl
sub
cmc
sub
nop
or
imul
adc
test
insl
sub
mov
push
mov
fidivs
shr
pop
outsb
mov
or
lock
pusha
pop
dec
loope
daa
outsb
pop
fistps
insl
cmc
pushf
fdivl
ja
test
jno
bound
scas
int
sub
lahf
pop
mov
push
aaa
call
mov
ficomps
jno
sbb
decl
mov
pusha
lret
popa
inc
cmp
xchg
inc
adc
into
sbb
mov
or
mov
xor
inc
jno
jo
mov
notl
insb
push
jle
xlat
pop
rcr
mov
aas
push
or
aam
cwtl
mov
cmp
push
dec
jno
inc
in
push
popa
mov
hlt
jno
pop
pop
enter
loop
push
and
add
cmp
pop
xor
pop
popf
cmp
jns
xchg
mov
sub
popa
leave
and
stos
sbb
sti
add
pushf
push
adc
xor
jno
fsubr
imul
popf
shlb
loope
mov
and
adc
jno
jmp
cli
sbb
xor
loop
xchg
repz
test
pop
sub
or
je
mov
hlt
inc
xchg
adc
scas
mov
jno
stc
test
cli
sbb
jno
cmp
fdivrs
jno
sub
pop
add
sub
cmp
push
cmp
sub
xchg
mov
jmp
fidivrl
ds
push
fs
cld
xchg
arpl
cmpsb
pop
adc
jne
xchg
stos
jno
into
int
in
dec
std
shlb
movsl
dec
cmpb
push
shll
cwtl
repnz
je
push
jno
fistps
sbb
adc
jbe
jns
jno
aad
and
push
outsb
subb
cmpsl
enter
mov
arpl
jle
out
fmuls
jno
jecxz
and
jno
lcall
jno
rcll
mov
add
jbe
jno
pop
cmp
int3
in
sbb
inc
mov
faddl
bound
push
icebp
aad
cmp
inc
mov
test
push
jns
xchg
xor
jno
fstps
mov
jno
adc
fcomp
dec
aaa
inc
push
stos
add
repnz
mov
mov
or
or
inc
dec
ret
xor
jnp
sahf
mov
mov
popa
aad
je
jb
xor
jno
dec
inc
mov
imul
jns
popl
push
jno
rcrl
movsb
mov
loopne
jb
sti
nop
in
push
std
push
gs
subb
shll
or
shrb
mov
sbb
adc
ret
repnz
hlt
xor
adc
fsubrs
rol
jp
cwtl
push
xor
or
inc
popa
adc
insl
orb
adc
lds
subb
push
jl
adc
xchg
or
ja
hlt
dec
insl
dec
inc
aam
lods
jno
add
das
dec
inc
jnp
sub
cmpsl
ret
jno
or
mov
lret
stc
pusha
jno
pop
pop
lea
shll
movsb
jno
sub
jecxz
leave
jo
jno
cs
es
sbbl
cltd
push
xor
jmp
mov
adc
cmp
ret
bnd
lds
xchg
in
jecxz
jno
fimuls
loope
cmp
jno
nop
xchg
scas
cwtl
fnsave
scas
insl
iret
jns
add
jno
xchg
add
jno
mov
rol
daa
xchg
popa
lock
popa
mov
fidivl
inc
mov
add
shrl
mov
pop
jno
repnz
test
inc
popa
bound
adc
add
ror
inc
pop
jno
sub
outsb
inc
cltd
js
aaa
mov
fsubrs
pop
cmp
push
ret
outsb
idivl
pop
push
es
jno
cmp
stos
mov
xchg
imul
int3
mov
fiadds
lea
lods
cld
repz
movsb
sub
fwait
out
xor
arpl
inc
jno
push
insl
push
scas
mov
out
lea
ss
popa
loope
mov
clc
mov
pop
mov
je
aas
ljmp
adc
mov
mov
fwait
pop
sbb
pop
daa
jno
jns
popf
in
leave
insl
jno
add
dec
test
or
mov
jmp
gs
push
jno
ficomps
jg
mov
popa
bound
icebp
jg
leave
aad
popw
jno
push
mov
and
ja
cmp
jp
push
imul
mov
inc
xchg
or
outsl
jno
cmc
add
jbe
adc
ds
jb
nop
jnp
std
insb
xor
cli
sub
outsb
add
or
imul
cmpl
outsl
outsb
jp
daa
xor
jno
insl
mov
and
push
pop
popa
call
pop
popf
jno
sub
lods
orb
jno
xchg
jbe
aaa
cmpsl
leave
push
jno
sbb
pop
jno
lcall
jno
test
and
push
mov
arpl
sarb
lods
insb
mov
cs
adc
mov
dec
mov
xchg
adc
data16
jge
fcmovnbe
jno
sbb
stc
jo
adc
icebp
pop
adc
xor
pop
das
jns
lcall
ror
adc
inc
or
xor
xchg
popa
and
pop
pop
ds
stos
test
xchg
sarl
push
jmp
push
jns
mov
lods
adc
in
sub
and
push
popf
pop
lea
out
add
imul
jg
push
adc
ljmp
or
xchg
std
or
lds
jno
adc
cmpsl
fists
cwtl
add
push
dec
je
xor
ja
jmp
jmp
pop
nop
adc
or
rorb
popf
mov
movl
push
movsl
adc
sbb
out
dec
repnz
jno
mov
int3
dec
xchg
and
jno
xchg
lcall
loope
rorl
daa
mov
pop
jb
mov
sub
lods
pop
scas
jno
loopne
dec
jbe
mov
jno
cmpsb
jae
lret
jecxz
inc
out
xchg
icebp
lahf
sbb
cs
jo
into
mov
bound
repz
pushf
adc
push
ret
xchg
push
test
dec
xchg
divb
lahf
int3
dec
stc
or
aaa
jno
test
scas
xor
clc
insb
popa
int3
push
stos
mov
xchg
dec
jno
sbb
popf
sbb
lret
loope
imul
mov
jno
aad
dec
dec
cmpsb
mov
jno
sbb
popa
loopne
pop
xor
xor
es
jno
icebp
out
js
push
fidivs
pushf
mov
fisubl
lret
arpl
xchg
cs
lret
jnp
sbb
jno
jl
inc
jge
out
push
mov
sbb
data16
xchg
jno
adc
nop
es
test
loopne
jne
das
shrb
hlt
out
jbe
sub
stos
push
jp
and
jp
push
jo
adc
loop
jge
jns
xlat
and
adc
pop
jecxz
mov
and
dec
jno
cli
sahf
popl
in
jno
mov
call
jnp
in
xchg
push
jge
cmpsl
addr16
scas
jo
stc
jno
lods
pop
mov
mov
pop
fldln2
test
push
jo
lret
jne
lret
dec
xor
push
incb
jb
aas
imul
scas
gs
sbb
jo
testl
jecxz
dec
push
xor
imul
sub
dec
enter
movsl
ret
repz
call
dec
and
sarb
outsl
popa
mov
popf
mov
and
sbb
cmp
inc
mov
pop
inc
jno
ss
jle
mov
jno
fs
aas
pop
iret
mov
scas
sbb
adc
sub
js
mov
imul
scas
or
test
mov
fcomp
inc
and
push
cld
movsl
ret
divl
xor
push
push
imul
aas
aaa
dec
outsb
cmp
repz
movsl
jmp
loopne
pop
mov
pusha
in
dec
and
jno
adc
jno
and
sub
push
stos
jmp
dec
mov
jno
inc
dec
fisubrs
mov
adc
jg
shll
stos
fidivrl
into
cmp
jno
mov
daa
mov
add
insl
das
or
fsubl
cltd
and
cmp
mov
push
or
aad
adc
enter
ds
lds
push
xchg
cmc
mov
jle
or
leave
lock
hlt
jns
pop
movsb
inc
and
push
lahf
orb
loopne
inc
jno
shlb
xchg
adc
push
jb
jp
jno
ljmp
jno
xchg
add
sbb
outsl
or
cli
add
inc
mov
jne
out
fwait
mov
imul
loope
mov
mov
pop
stos
notb
push
xchg
jmp
lds
sub
jno
dec
stc
aad
stos
cmp
cmpsl
gs
xor
pop
xor
or
subb
stos
shlb
xchg
mov
mov
jno
jmp
jno
sbb
xchg
nop
xor
xchg
adc
inc
push
je
sub
adc
out
xlat
add
inc
push
mov
pop
add
test
lea
aaa
jno
les
dec
mov
lret
adc
fs
aam
jg
pop
in
cvttps2pi
popf
push
xchg
jmp
jae
imul
pushf
and
adc
xor
jb
push
jno
jecxz
sub
jp
xchg
leave
mov
arpl
jno
stos
movsb
lods
inc
adc
je
or
dec
int3
nop
jno
es
push
push
cwtl
xor
mov
mov
xor
movsb
push
jno
repz
loope
mov
mov
out
in
or
push
shlb
movsl
mov
out
lea
inc
stc
dec
jno
and
sub
jle
and
ret
mov
pusha
jnp
into
insb
jno
in
fstps
fcoms
cmp
pushl
scas
arpl
or
fcoms
icebp
popa
repz
pop
dec
inc
cmp
cmpsl
adc
pop
test
lods
jns
scas
out
sbb
fldcw
test
xchg
dec
sbb
mov
mov
pop
lea
orb
test
and
clc
and
sbb
in
push
add
xchg
xor
xorb
in
iret
jb
push
xor
das
cmpsb
xor
sbb
nop
ret
pop
call
inc
jns
jno
mov
xchg
fidivs
cwtl
jg
lods
fisubrl
sbb
mov
insl
in
jbe
push
data16
sbb
sub
mov
sbb
stos
xchg
loopne
xlat
cmp
ljmp
aad
sub
jg
xchg
mov
push
jno
cmc
lret
adc
mov
mov
pop
jno
mov
dec
and
dec
sub
popa
cmp
mov
adc
out
shl
cmc
pop
pop
jno
je
mov
mov
jno
in
and
cmp
aaa
les
push
aam
enter
or
out
fiaddl
stc
dec
mov
mov
push
es
cld
push
test
sbb
lret
insb
lods
sub
addl
sbb
sub
pop
jno
stc
add
xchg
and
adc
or
mov
and
dec
leave
call
add
xchg
push
or
sbb
stos
jne
xor
mov
outsl
and
pop
push
mov
cmp
jae
jmp
repnz
imul
cmp
push
jae
push
iret
lret
int
test
leave
ja
jno,pn
test
xlat
pop
lcall
push
cltd
mov
call
mov
jmp
sub
mov
fcmovnu
push
pop
js
idivl
sbb
push
pusha
popa
mov
jnp
outsb
xor
sub
dec
rcl
xchg
pop
fsts
cld
xor
jnp
dec
int3
mov
fwait
aaa
sbb
arpl
xlat
ja
sahf
jno
scas
testl
fwait
loope
aaa
iret
jno
add
and
mov
sti
cmp
pop
xchg
mov
cld
xlat
push
jno
enter
stos
std
fdivs
pop
jecxz
popf
cmp
fldt
mov
adc
inc
jno
jmp
lock
and
pop
pusha
jno
loope
data16
div
jnp
lds
push
std
push
xchg
popa
sbb
jmp
lahf
mov
jg
push
jno
arpl
or
sub
in
inc
mov
jno
jo
and
std
insb
es
fcmovnbe
mov
js
cmp
pop
or
mov
lret
cmp
cmp
adc
pusha
push
mov
imul
out
push
xchg
mov
jbe
pop
xlat
sahf
push
xchg
adc
add
popa
add
jno
loopne
sbb
push
insb
inc
jno
rcrb
cmp
sahf
lcall
sub
int3
stos
imul
jno
insb
push
shlb
adc
or
xlat
in
dec
dec
inc
pop
xor
push
aas
xchg
repz
shll
imul
xchg
insl
jno
je
out
jle
pop
jno
idivl
int
test
ret
inc
jne
and
jno
or
mov
hlt
mov
inc
repz
js
jecxz
sub
sbb
aaa
jno
add
jl
testl
scas
jae
clc
mov
repz
jno
fstpt
xchg
cmp
dec
enter
pop
in
loope
dec
clc
jnp
popl
push
dec
imul
jnp
inc
cmp
lcallw
imul
adc
loop
cmp
jno
and
mov
mov
jno
movsl
dec
adc
push
and
je
and
lods
and
inc
lcall
jno
shll
lods
mov
clc
jno
pop
in
xchg
push
loope
push
cmp
mov
mov
fidivl
gs
fnstenv
or
jno
add
movsl
mov
xor
cmp
bound
pushf
add
stc
push
fcmove
jno
lods
or
sbb
jno
imulb
cmp
scas
adc
xor
test
nop
int3
push
xor
lods
mov
gs
adc
jbe
mov
jno
inc
sahf
push
outsb
dec
nop
jb
ret
imul
push
sbb
jno
mov
xor
jno
pop
mov
sub
mov
jl
jno
fcomps
in
into
out
push
pop
sbb
xorb
nop
jl
jne
ja
pop
mov
sbb
repz
dec
push
push
cwtl
imul
xchg
jno
not
xor
loop
aaa
in
push
jae
ljmp
dec
mov
sub
or
mov
fnstcw
iret
pop
cmc
testb
inc
xor
push
jno
in
dec
adc
jnp
push
jne
out
test
stos
jnp
add
or
xchg
jno
insl
inc
pop
cld
fists
js
xchg
mov
pop
dec
jo
fwait
cmp
gs
sub
scas
add
push
ja
cwtl
aaa
imul
jno
jmp
gs
stos
dec
aam
and
dec
add
lock
jg
out
mov
xchg
cmpsl
cmp
jle
icebp
fldl
cmpsb
jb
add
sarb
loopne
jno
inc
dec
inc
lds
stos
imul
xor
enter
or
ret
fbstp
mov
add
push
dec
in
jno
aam
pop
mov
ss
pusha
lods
scas
adc
sub
add
movsl
hlt
insb
sbbb
jo
dec
cmpsb
cltd
fdivl
jp
jno
loopne
fcomps
jae
mov
fisubs
push
cltd
jno
add
repnz
jno
es
mov
sbbb
jno
into
cmp
out
out
ja
push
xor
dec
dec
jbe
adc
fwait
mov
push
add
xchg
lods
or
loope
mov
add
cmp
or
ror
jl
jno
lock
or
sub
outsl
arpl
call
mov
popf
pop
jno
insl
push
jecxz
cltd
test
outsl
adc
jmp
mov
jno
and
loopne
mov
or
bound
dec
adc
mov
jecxz
jno
push
into
lock
loope
dec
mov
rcr
lahf
cwtl
mov
rcr
jno
cmp
mov
jmp
inc
adc
inc
aad
dec
ds
push
cmp
xlat
sbb
mov
mov
lret
or
dec
aad
inc
jno
cs
cmp
shll
lea
push
pop
rcr
bound
push
stos
xor
jmp
in
ficoml
popa
call
jbe
stos
jnp
leave
mov
push
arpl
imul
push
aam
jno
xor
push
lret
adc
imul
pop
mov
xorb
jmp
jno
or
xchg
jno
scas
cmp
cmp
inc
sbb
addb
in
xchg
inc
pop
daa
jno
dec
lret
imul
mov
adcb
in
shll
push
ja
xchg
jle
test
xchg
cmp
clc
push
jno
xor
adc
mov
popa
push
sar
inc
test
cmp
jns
push
xchg
push
sub
cmp
divb
nop
lret
adc
in
std
jp
jno
pop
xchg
popf
es
arpl
je
add
addr16
jnp
and
push
and
or
or
mov
adc
imul
int
movsl
repz
push
pop
push
sub
jno
jle
xor
and
cmp
in
repnz
roll
jae
pop
scas
sbb
in
jge
sbb
add
xchg
cmp
pop
mov
jae
das
xor
ja
jge
adc
jno
sbb
push
jno
aam
cmp
ds
pushf
mov
std
push
jno
rep
mov
xor
decb
ficompl
pop
popa
fcoml
inc
jge
fiadds
int3
jae
jnp
repz
mov
xchg
pop
mov
sub
inc
lods
xor
scas
in
ss
imul
std
clc
jmp
pusha
pop
mov
icebp
out
push
loopne
mov
cmp
bound
aam
lds
addr16
aad
fisubs
je
pushl
cli
daa
jno
in
lods
jb
jo
adc
loop
outsb
cmpb
jl
das
and
mov
sbb
jno
test
add
scas
xchg
jmp
imul
xor
enter
out
mull
sub
into
pop
xorb
aaa
data16
sti
jecxz
dec
cmp
dec
or
test
xor
push
cmp
pop
cmp
and
xchg
bound
jno
ret
add
add
jp
stc
ljmp
jae
sub
add
cmp
mov
mov
ret
mov
mov
aas
mov
fwait
push
nop
lret
and
jp
dec
gs
adc
pop
push
inc
mov
add
or
jecxz
mov
std
lock
push
jno
xchg
mov
sbb
mov
addl
test
sbb
lahf
int
jns
mov
cmp
jno
xchg
icebp
xchg
outsl
imul
cli
xor
jno
lds
pop
jno
data16
jns
fwait
mov
pushf
inc
fsubs
inc
int
jno
shrl
cmp
jno
lods
hlt
pop
fcoml
in
jno
mov
cltd
call
xchg
loopne
sub
jmp
loope
dec
repnz
jns
xor
outsb
adc
jbe
add
push
xor
cld
adc
test
out
sub
fwait
jg
adc
mov
lret
rcrb
scas
aas
add
aam
jno
subl
jae
adc
jo
mov
shll
enter
xor
mov
pop
in
jg
daa
or
pushf
gs
adc
add
or
push
add
sti
sbb
push
bound
outsl
and
lock
cmpl
int
push
mov
adc
lock
jle
mov
jno
ljmp
sub
lods
mov
or
call
mov
scas
movl
xor
stos
xlat
cli
nop
imul
jns
add
dec
ljmp
push
nop
xor
cmp
cmp
lcall
lds
decl
leave
jno
adc
add
xor
add
jbe
div
leave
fnsave
mov
setg
sti
in
jg
push
std
loop
test
xorl
sub
xor
mov
gs
adc
scas
mov
dec
dec
xchg
imul
or
cmp
jb
jl
pusha
mov
fildl
dec
movsb
js
loope
mov
je
stos
mov
add
loopne
das
out
loop
push
push
nop
outsb
fidivs
adc
adc
jmp
xchg
dec
jno
push
pop
mov
push
sub
js
xchg
push
or
js
mov
cld
cwtl
mov
adc
addr16
mov
jno
add
jo
xchg
cmpsb
sbb
xor
jno
xchg
adc
lahf
aam
in
adc
ret
std
jno
dec
dec
sub
lods
jno
mulb
sbbl
jno
cmpsl
clc
and
out
pop
mov
das
loop
mov
nop
and
jno
mov
enter
movsl
lahf
cmp
nop
out
sub
push
and
inc
cmpsl
stos
jle
jno
repz
mov
mov
cmp
jl
cmp
adc
imul
and
jnp
icebp
cli
int
loope
imul
out
push
ret
add
mov
pop
idivb
repnz
jle
pop
jno
jge
cmc
lea
movsl
mov
jno
adc
xchg
test
ss
jno,pt
xchg
sti
push
fbld
inc
std
and
xor
test
dec
sbb
jb
dec
not
sbb
fimull
movsl
out
shll
orb
push
pop
enter
jecxz
in
pop
jno
ljmp
lea
sbb
adc
fistl
mov
je
insb
bnd
fwait
cmp
fistps
popa
jo
pop
clc
mov
add
and
pusha
fisubrs
add
mov
out
in
inc
das
rclb
lods
outsb
mov
cmpsb
push
nop
lcall
sub
mov
dec
dec
xchg
jne
fnstenv
lret
nop
mov
addr16
hlt
jne
pop
mov
and
xchg
xchg
jnp
dec
adc
mov
add
dec
stc
test
test
daa
inc
sub
les
sbb
fdivl
push
lret
aad
xchg
mov
test
in
pop
aam
nop
push
fucompp
scas
aas
jae
stc
xchg
xchg
scas
cli
leave
gs
push
mov
and
xor
adc
cmp
popa
scas
test
fidivs
cmc
inc
out
insb
int
jno
ds
inc
inc
sahf
xchg
sub
in
or
outsl
adc
jp
pop
sarb
add
sbb
negl
adc
inc
add
inc
test
iret
test
or
add
repnz
push
in
xor
add
jns
jno
dec
fcomps
xchg
push
mov
inc
jno
stos
push
adc
inc
jno
ja
inc
lret
xchg
outsb
mov
xor
pop
push
pop
cmp
or
jno
test
sahf
sub
fwait
xor
arpl
repz
stos
scas
ret
jno
sarb
loope
comiss
insl
daa
xchg
mov
sub
shll
xor
roll
pop
nop
pop
punpcklwd
gs
jno
mov
imul
test
mov
mov
stc
push
pushf
loopne
and
mov
gs
and
push
std
lds
jno
mov
jmp
in
jno
shlb
and
push
pop
xor
adc
lods
mov
push
add
nop
inc
add
lods
jno,pt
lea
insb
sbb
push
icebp
shll
sbb
or
cli
pushf
xchg
mov
orl
popa
push
cmc
stos
scas
rcrb
mov
push
decl
jecxz
jmp
push
insl
aas
cmp
cmp
jno
mov
jbe
jno
outsl
leave
call
jno
jmp
mov
movsl
in
jno
inc
push
pop
xchg
cs
sbbl
or
ror
mov
mov
jno
dec
mov
jb
dec
mov
mov
imul
sub
dec
jno
or
adc
xor
testb
int
lea
jae
loopne
or
std
sub
mov
pop
sahf
adcl
jno
adc
lds
adc
push
cmp
jns
mov
adc
push
imul
mov
jp
adc
data16
lods
ret
repz
adc
xchg
and
jle
inc
insb
test
pop
cwtl
mov
sub
jl
jnp
mov
adc
ds
lea
data16
mov
adc
popa
jg
enter
xchg
movsl
sub
add
xchg
js
out
jno
fadds
in
and
jno
push
lcall
gs
and
addr16
lock
inc
jno
add
push
pushf
movsl
pop
pop
jno
mov
outsl
ret
test
jge
fiaddl
movsb
push
xchg
sbb
arpl
in
cmp
push
pop
mov
cmp
or
pop
int3
push
ret
and
jno
idivl
sbb
jbe
testb
jno
lahf
ficoms
aaa
add
push
lea
nop
jnp
int3
mov
jne
mov
enter
out
jns
sbb
cwtl
jno
jo
cmpsl
sahf
data16
pop
lea
push
aad
and
jno
or
add
adc
adc
sbb
addr16
outsl
in
pop
cmp
popf
sub
in
sbb
jmp
mov
je
subb
inc
rol
call
pop
push
sbb
xlat
ja
cmpsb
jno
mov
mov
fists
fdivl
sub
add
sbb
mov
jno
mov
les
test
andb
data16
and
mov
shr
mov
add
add
mov
wrmsr
xchg
leave
stos
and
aaa
movsl
dec
ret
jno
cmpsl
cltd
adc
out
stc
and
cld
pop
dec
fdivl
and
jae
movsb
xchg
adc
lret
jno
repnz
je
add
jno
push
movsl
aam
push
sti
jno
ret
xchg
inc
xchg
mov
mov
gs
test
aam
push
add
mov
dec
sbb
xchg
dec
pop
loopne
jno
sar
xchg
ss
xchg
jno
or
call
adc
cmp
inc
mov
pushl
cmpl
jno
mov
out
sub
sbb
sbb
fldt
pop
jno
add
and
lods
jno
int
mov
jno
ror
pop
scas
or
add
mov
stos
xor
rcl
cltd
and
xor
push
push
add
lahf
push
js
stos
das
imul
push
hlt
jno
xor
mov
scas
mov
stos
gs
or
pop
jno
loopne
les
loope
stos
mov
pcmpeqw
cmpsl
nop
adcl
mov
sbb
enter
sub
loope
adc
mov
popa
cmp
mov
in
js
push
rol
jb
adc
jge
out
jno
pusha
pop
xor
mov
aad
jb
adc
ret
fiaddl
js
sub
jno
sbb
push
jno
pop
andl
bound
lock
jp
insl
lds
sbbl
lock
adc
jno
shll
out
cmp
push
xor
in
popa
inc
push
into
cli
or
mov
and
xchg
fildl
mov
out
inc
nop
mov
shl
test
mov
es
cli
xor
lea
jns
dec
lret
popa
repnz
jno
shrb
std
mov
push
sbb
jno
dec
scas
add
jbe
mov
xchg
xchg
and
jp
cmp
jno
adc
push
stos
jg
loop
bswap
movsl
jp
dec
fidivrl
xor
dec
xor
mov
push
pop
das
shr
movsb
push
mov
test
push
jecxz
jge
mov
jno
dec
xor
mov
aam
fs
jbe
fisttpl
mov
add
in
cmp
pop
clc
lock
jno
inc
das
xor
test
aam
les
js
or
imul
mov
std
shrl
inc
jle
fs
out
mov
movsl
imul
push
push
addr16
movsb
xchg
enter
cmp
les
stos
mov
push
lods
std
lret
dec
cli
lea
and
cwtl
ret
loop
je
call
mov
push
dec
adc
nop
aam
cmovs
fdivrl
mov
mov
sbb
loopne
dec
mov
loope
jmp
arpl
jns
and
daa
jno
lcall
jno
shl
in
mov
dec
adc
jge
mov
and
mov
mov
in
fisubrl
mov
shl
icebp
xor
jns
lods
dec
mov
stc
imul
inc
clc
int3
lods
jno
adc
sbb
in
mov
mov
lds
mov
xchg
int3
cmpsl
shlb
pop
movsl
or
repnz
fs
lods
inc
cmp
add
mov
jb
mov
loop
cmpsb
push
and
xor
pop
pop
xchg
or
and
jno
xchg
sbb
inc
push
in
addr16
push
jae
mov
and
add
scas
mov
mov
xor
inc
jno
adc
outsb
mov
push
je
dec
sub
xchg
dec
push
xor
and
in
scas
jns
lods
movsl
jno
push
push
aaa
loop
out
fbstp
mov
sub
xor
orb
inc
adc
test
jl
pop
out
pop
mov
mov
sub
addr16
into
jno
lods
jnp
jl
ret
gs
cmpsl
cmp
push
out
stc
jge
jns
in
jno
sbb
cmp
jno
push
xor
jno
outsl
mov
jno
dec
dec
loop
sbb
push
aam
xchg
into
mov
jo
mov
jno
call
jecxz
mov
mov
or
xchg
dec
mov
fstl
pmaxub
scas
repz
jae
xchg
inc
or
jb
cmp
scas
aad
dec
xorb
and
jno
daa
aas
mov
data16
add
xchg
pop
jge
out
ss
mov
mov
test
jno
ret
imul
xor
and
pop
xor
fnsave
lds
je
dec
int3
jns
jno
jae
xchg
mov
nop
push
mov
mov
jmp
gs
xor
out
jno
lret
shrl
mov
pop
jno
sub
pop
push
cmp
loop
int
ret
cmpsl
imul
lret
or
or
lcall
sub
lret
jno
rcrb
js
iret
cmpsb
jno
call
cli
out
or
push
cmpsl
pop
push
leave
out
xchg
lods
mov
cli
or
fsubl
and
aad
jno
roll
ja
test
jno
fidivrl
jbe
lcall
jno
int3
mov
add
or
mov
fisttpll
adc
inc
popa
lahf
sbb
mov
into
adc
inc
mov
inc
jno
movsb
cmc
iret
mov
inc
dec
lods
std
ds
push
mov
jno
pop
cld
xor
push
outsb
daa
jno
pop
and
inc
enter
leave
sub
loop
cmp
jno
xor
jno
insl
rclb
mov
push
xor
jnp
xor
rcrb
rolb
outsl
mov
insl
push
adc
aas
scas
cwtl
mov
psraw
cmp
in
fdivs
pop
insb
mov
aaa
add
popf
jno
push
out
jne
adc
imul
jmp
dec
jecxz
mov
shl
jno
shll
inc
fldt
inc
fwait
adc
jno
out
out
lahf
and
xchg
das
fsub
dec
test
jno
int
cmp
les
in
mov
adc
inc
adc
test
icebp
pop
or
imul
jno
pop
push
cld
ljmp
or
xchg
lret
dec
insl
ficoml
dec
push
insl
jno
pop
sub
call
sti
jg
imul
add
push
jno
testb
std
jbe
jmp
aad
or
cwtl
repz
sub
aam
lret
pop
fists
pop
inc
lods
jne
aaa
pop
loop
nop
in
dec
test
and
push
lret
fldcw
jne
enter
aad
bound
add
jb
adc
int
das
inc
test
cmp
outsb
lcall
js
rorl
enter
jp
pop
xchg
and
jno
xchg
lods
mov
daa
jg
cmp
int
stos
adc
icebp
mov
mov
sbb
leave
pop
jae
les
push
inc
jp
jno
or
pushf
lock
adc
lcall
cmpsl
lods
mov
sbb
lds
dec
rcl
jns
rcrb
cmp
jge
imul
jno
scas
jns
sbb
sub
fcmovnbe
xor
mov
test
stos
jg
lcall
jl
ret
sbbl
mov
xor
push
lea
fdivrs
fidivs
push
inc
mov
ficoml
je
jno
in
jnp
push
in
jno
imul
xchg
push
int
mov
pop
sbb
add
call
test
sbb
pop
and
fsubp
adc
lods
push
mov
out
bound
sub
xchg
cmp
subb
cltd
pop
jnp
xchg
mov
sbb
inc
xlat
dec
inc
xchg
and
xchg
repnz
out
jnp
pusha
shlb
insl
lods
push
rcrb
mov
cmpsb
mov
stc
jne
jno
pop
xchg
fisubs
mov
jno
test
or
jo
mov
mov
mov
sbb
inc
xor
inc
bnd
push
ds
fldenv
jne
jno
ljmp
jno
fisttpl
inc
lea
andl
dec
js
movsb
jno
add
cmp
jno
cltd
dec
int3
movsb
mov
shr
sbb
inc
pop
call
xchg
bound
dec
outsl
std
xor
pop
fnstenv
inc
push
jno
add
iret
cmp
stos
xor
aad
sti
pop
mov
insl
fs
or
iret
sahf
add
test
or
out
loop
es
and
inc
inc
imul
cltd
jns
pusha
negl
dec
jno
fsubs
test
push
ror
lods
imull
pop
sub
xor
mov
test
cmp
sahf
adc
cld
call
jae
sub
fwait
out
inc
bound
xchg
jno
lret
cli
scas
lods
xchg
adc
or
sbb
inc
nop
ret
sbb
mov
and
jae
cli
mov
jno
mov
mov
jno
out
out
pop
jb
jno
daa
add
or
popa
outsl
mov
lahf
lods
imul
jmp
dec
popa
push
repz
push
mov
mov
shl
shlb
mov
jns
dec
sub
mov
dec
lahf
jnp
jl
ja
fmul
sub
je
mov
fs
add
lock
inc
jg
add
jecxz
xor
loop
addr16
scas
mov
push
lea
pusha
push
push
pop
inc
xchg
in
cmp
pushf
jno
jo
out
sub
inc
scas
shlb
insl
aaa
jbe
push
dec
data16
jmp
xchg
cmp
les
mov
nop
cmp
leave
dec
pop
mov
sbb
int3
in
sub
push
bound
push
jmp
subl
imul
adc
pusha
adc
mov
jno
dec
or
xor
test
xchg
adc
pcmpeqw
fcmovnbe
sbb
jno
lock
push
out
jno
out
inc
mov
jle
adc
and
jno
les
dec
mov
adc
or
mov
mov
pop
lods
daa
pop
imul
out
jno
push
add
les
icebp
jae
clc
jno
cmp
sub
aam
xchg
jg
push
cmp
adc
stos
jno
xchg
daa
adc
xchg
dec
std
jno
in
dec
mov
mov
pop
cwtl
add
jbe
sub
fwait
insb
mov
adc
add
sbb
jns
and
pushf
and
imul
aas
dec
movsl
push
pop
push
push
jno
das
shl
jo
in
jno
les
lcall
ss
jno
push
jo
mov
test
add
int
inc
cmp
icebp
test
jae
fs
inc
mov
push
sub
icebp
gs
dec
push
data16
cmp
push
ret
repnz
push
ret
lea
mov
jno
fcom
sahf
div
ficoms
cltd
dec
loop
cs
jns
mov
push
jecxz
sub
int3
jl
jo
cmp
sbb
lret
sti
fistps
jge
jb
mov
xor
in
and
sbb
fbld
sbb
dec
loopne
or
pop
fdivrs
push
xor
pop
xor
addr16
test
and
adc
sbb
sbb
jle
jno
sbb
adc
insl
popa
jl
outsb
loopne
jno
mov
popf
ror
ljmp
pusha
sub
xchg
jno
pop
or
jg
jno
lods
cld
fs
push
imul
es
jp
mov
jno
xlat
stc
sbb
push
adc
ret
mov
xor
jno
nop
inc
hlt
out
cmc
sub
out
lock
and
adc
mov
fs
jne
jno
lock
adc
jno
and
popl
pop
mov
dec
mov
into
sbb
add
adc
cltd
cmc
popa
pop
pop
jns
aas
jg
jno
xchg
pop
sarb
or
cli
sti
mov
add
stc
adc
mov
sub
rclb
jp
and
fstl
dec
lods
or
in
adc
call
js
fidivrs
jno
insl
sbb
outsl
jno
mov
leave
mov
add
add
adc
ss
jno
mov
jecxz
jb
jno
iret
mov
and
jmp
movsl
call
mov
jno
test
adc
jne
nop
mov
dec
not
cltd
adcb
sar
xor
inc
popf
mov
out
jno
and
rol
mov
je
inc
pop
mov
add
xchg
loop
dec
sub
jno
push
fwait
adc
aaa
arpl
jno
inc
lret
inc
scas
push
jno
push
or
or
mov
sbb
inc
call
jno
mov
js
jno
shrl
stos
pop
mov
or
add
je
pop
xchg
pushf
shlb
rorb
popf
add
jno
xor
fcmovu
mov
inc
dec
inc
or
and
push
adc
and
jno
sbb
inc
scas
cmc
push
lds
jns
mov
mov
je
lock
int3
insb
dec
inc
jno
and
lahf
adc
ja
mov
js
addr16
nop
adc
add
xchg
jno
ds
jne
adc
mov
lcall
jno
xchg
icebp
mov
cli
pop
testb
push
sbb
bound
sub
enter
xchg
jns
lods
mov
push
scas
in
pop
mov
ret
cmp
mov
cmp
mov
jns
inc
movsl
add
outsb
in
xor
das
notl
xchg
sti
orl
arpl
nop
xchg
out
pop
push
mov
lret
add
rcrl
jmp
dec
cs
jl
sub
lea
scas
sub
fcomi
leave
outsl
subl
mov
or
fisttps
add
and
adc
test
stos
les
jno
dec
movsl
xchg
adc
inc
mov
popa
pop
inc
fimuls
sub
push
and
in
popa
push
xchg
jnp
int
popa
test
sbb
jbe
clc
sarb
mov
jno
cmpsl
xchg
jg
das
sub
jno
mov
lods
mov
std
lds
dec
aad
icebp
es
test
or
neg
pop
jno
aam
adc
xor
mov
ljmp
dec
mov
cld
jno
enter
movsl
mov
sbb
jle
loop
jno
and
addr16
jle
orl
inc
mov
jns
pop
fildll
imul
nop
into
mov
pop
sarl
cmp
mov
push
dec
push
fiaddl
pop
popa
inc
in
mov
bound
inc
mov
mov
jb
lcall
jmp
jno
arpl
mov
jno
lods
jbe
gs
cmp
negb
shlb
aaa
cltd
sti
add
jge
popa
stc
int3
cs
and
sbb
xchg
jb
jno
inc
in
ljmp
out
adc
add
cltd
cmpsb
cs
test
rcrw
jno
repnz
icebp
mov
sub
mov
add
lea
mov
jno
sbb
imull
pop
push
das
or
adc
jl
repnz
pop
mov
sbb
push
dec
nop
loopne
sub
imul
out
cmp
rcrb
mov
push
test
out
jno
mov
sti
sub
loopne
sbb
jns
pop
jg
mov
jno
dec
and
sahf
test
sbb
xchg
cmp
pop
jnp
icebp
mov
dec
mov
jp
mov
fcoms
stos
daa
rcrl
jbe
and
stos
sub
and
cmp
jle
jno
add
mov
and
xor
adc
aas
jns
sub
gs
sbb
sub
jno
push
jmp
adc
stos
dec
loop
jno
cmp
mov
jno
jp
insb
pop
frstor
lea
add
cwtl
in
jge
movsb
sub
and
xchg
in
loopne
outsl
daa
stos
movsb
movsl
jns
push
mov
sub
jno
in
loopne
push
pop
pusha
mov
add
in
fs
cli
xchg
iret
les
test
dec
int
add
hlt
jle
mov
jno
jb
cmpsb
and
outsb
mov
push
loop
or
int3
mov
lea
stos
push
jno
je
mov
jge
nop
xor
outsb
mov
and
ror
mov
pop
lret
stos
jno
jmp
push
sub
jno
lods
insl
cmp
arpl
jae
lret
popf
scas
hlt
jno
xchg
imul
loope
scas
in
inc
push
jge
sub
shll
xor
js
lock
push
jno
fnstcw
jno
pop
out
xlat
dec
pop
mov
sbb
dec
or
popf
jno,pt
push
insl
rclb
sarl
jge
fsubs
stos
jno
dec
push
jb,pn
and
jb
jno
loop
push
cld
mov
xchg
add
adc
dec
jle
mov
and
loop
mov
fs
arpl
imul
dec
xchg
jne
pop
lods
or
xor
inc
test
andl
insb
sub
push
lods
shlb
mov
push
add
or
push
in
jns
shll
test
subl
movsb
jno
test
push
xorb
lcall
cli
sbbb
clc
test
cld
mov
xchg
adc
pop
xorb
stos
std
in
rorb
inc
jno
add
lds
icebp
jno
and
test
adc
push
lcall
xchg
mov
dec
jb
rdmsr
int
ret
push
outsb
js
push
push
out
fistl
sub
sub
outsl
sub
or
in
das
xchg
jns
test
jno
pop
jne
lahf
mov
cltd
jno
data16
fstpt
dec
repz
addr16
xor
adc
jo
jno
mov
int
pop
dec
mov
adc
jg
clc
mov
push
jecxz
enter
mov
jno
jg
push
or
inc
xorl
adc
or
std
push
xchg
or
loope
loop
out
inc
cwtl
inc
movsb
jb
jno
sbb
fildll
push
mov
push
dec
popf
arpl
dec
fimuls
and
push
mov
nop
arpl
enter
push
movsl
inc
jns
push
xor
mov
jno
adc
sbb
jg
adc
mov
xor
outsl
mov
mov
mov
xchg
pop
lds
in
jge
push
pop
cmp
cmp
jno
jae
shll
sub
push
xor
xchg
mov
xchg
push
mov
cmc
cmp
dec
jno
pushf
push
xor
ret
sar
stos
lods
push
fidivl
xchg
adc
mov
dec
jno
adc
aaa
aas
mov
lret
cmp
mov
jno
dec
add
push
mov
jnp
je
add
lods
into
mov
jno
mov
jb
jle
nop
aad
outsl
js
addr16
jne
stos
jno
fucom
pop
cwtl
je
or
xchg
mov
cmpsb
pop
aad
add
mov
pop
mov
in
jno
or
cs
jno
xchg
cmpl
daa
inc
fsubs
sbb
call
repz
push
ret
xchg
ficomps
stos
shrb
xchg
lods
xor
jno
push
mov
ja
out
push
adc
jno
orb
push
dec
popf
jno
fnstenv
out
leave
test
pop
jg
pop
hlt
sub
cmp
aad
pop
xchg
jne
jno
ficomps
ret
sub
jae
sbb
inc
pop
inc
adc
std
popa
inc
sahf
inc
cwtl
test
push
adc
andb
lret
mov
mov
push
stos
into
add
ja
push
xorl
inc
xchg
pop
jno
gs
push
inc
aam
cmp
add
adc
jecxz
dec
hlt
js
cltd
int
cmp
xchg
xchg
jno
jp
inc
cmpsl
fnsave
test
scas
mov
xor
psubsb
pushf
je
inc
push
jno
cmp
jo
xchg
fsubl
mov
add
push
xchg
in
jnp
inc
pop
repz
ss
pop
mov
mov
jle
notl
xchg
add
repnz
cltd
nop
shll
pop
lods
fldl
sarl
fcoms
sbb
repz
jne
notl
inc
jno
push
xchg
movsl
sti
xor
cwtl
test
sub
jno
ja
hlt
cs
dec
mov
loopne
cld
adc
mov
jg
jg
pop
bound
fwait
pop
push
ret
arpl
mov
jb
cwtl
mov
jno
out
movsl
inc
xor
sub
clc
and
fmull
jne
sarb
loopne
out
fs
pop
aad
into
daa
jno
mov
and
push
jno
fdivr
jge
test
or
fucomp
pop
push
jno
push
dec
add
inc
imul
sbb
adc
ljmp
mov
movsl
or
and
or
xchg
jle
and
fisubs
out
ja
xor
jns
out
jno
outsb
mov
lret
cmc
jno
jo
inc
ficoms
scas
sub
jg
jno
xlat
sarb
repz
dec
pop
cld
cli
sahf
jno
inc
in
insl
cmp
andl
sahf
push
testb
jno
rcl
dec
mov
push
mov
jne
sub
div
xchg
sahf
popa
loopne
cmp
scas
mov
int
stos
xchg
jno
es
jno
xchg
push
fldl
jmp
adc
push
icebp
int
jno
dec
das
rorb
pop
adcl
sub
push
push
xor
lods
xchg
jno
cmpsl
pop
pusha
lock
jno
fs
movsb
vucomisd
jno
out
sbb
inc
jno
xchg
push
test
mov
push
les
jnp
mov
jae
adc
setne
sahf
push
add
jno
xorl
nop
mov
insl
mov
adc
clc
push
adcb
icebp
push
sub
repnz
int
inc
jg
xchg
pushf
js
adc
adc
adc
jno
push
test
aas
in
es
xchg
dec
nop
nop
sub
mov
fbstp
cmp
mov
or
loop
or
xchg
jno
and
dec
orl
enter
movsl
jge
dec
push
jno
adc
inc
jno
adc
and
ret
jno
pop
dec
jle
subb
mov
leave
or
or
sub
pop
adc
adc
jno
mov
jae
int3
rcr
push
ljmp
cmpsb
nop
push
pusha
icebp
push
enter
je
cmp
int
pushf
xor
push
notb
jno
lods
mov
stc
sbb
mov
vmptrst
mov
sahf
fisubrs
ljmp
jge
cmpsl
jno
int3
insb
mov
jp
test
jno
inc
leave
sub
xor
inc
adc
jb
test
aad
test
cmpsb
jge
sbb
shll
adc
sbb
jb
roll
int
cmp
xlat
mov
jno,pn
sbb
and
in
add
pop
adc
insb
adc
jl
pop
in
jno
mov
idivl
fs
jno
push
insl
ss
js
test
jae
cmp
rcrb
insl
lods
fistpll
push
jno
mov
lahf
dec
jno
shll
dec
enter
std
lods
jl
repz
jno
pop
push
pop
xchg
mov
hlt
loope
hlt
inc
xor
mov
push
arpl
lods
jnp
sub
pop
cmpsl
dec
sbb
jno
stc
push
cmp
jge
cmc
and
mov
and
jp
jno
pop
js
stos
xchg
subb
jno
lds
aas
xor
ljmp
repnz
mov
jno
pop
shlb
or
cmp
popa
dec
testl
mov
nop
out
jp
movsl
daa
jne
jmp
scas
jno
dec
aaa
add
callw
jmp
push
and
repnz
add
repz
cmpl
jno
inc
in
ss
pop
xchg
adc
jns
fisubs
cmp
or
push
test
fldl
imul
push
cs
lds
mov
icebp
jne
cltd
jmp
mov
xlat
mov
mov
cmpsb
test
mov
dec
adc
fisttpl
outsb
sbb
stc
roll
pop
jno
pop
ja
pop
pop
out
lods
cld
arpl
sub
fwait
pusha
loop
jae
dec
cld
lret
adc
scas
cmp
sub
jl
mov
stc
inc
pop
scas
xchg
sub
jno
cmp
xor
std
nop
push
popf
arpl
sub
jno
out
pop
bound
jno
daa
xchg
mov
popf
jbe
jg
jno
test
fcompl
in
test
or
lock
jno
xchg
bound
mov
lds
mov
push
popf
nop
or
lock
insl
sub
push
lahf
jmp
mov
es
movsl
push
sahf
mov
or
jecxz
cmc
nop
in
inc
repz
nop
push
aam
xor
fs
insb
xor
repz
mov
fmul
mov
insl
mov
jno
cmp
into
and
mov
jl
movsl
adc
add
jne
pop
push
sbb
jbe
push
jno
jbe
and
inc
jno
stos
sub
lods
jno
in
lock
push
out
jno
xor
jne
xor
jno
push
shlb
and
adc
and
mov
popf
xchg
popa
xor
xchg
jo
pusha
xchg
addr16
fistpl
jno
movsb
jne
cld
adc
mov
jmp
loope
test
stos
jne
pop
in
xlat
xchg
mov
mov
repz
pop
negl
inc
lock
push
add
push
int
push
pop
js
popa
daa
ret
das
aas
test
xchg
repz
push
or
sub
mov
cld
dec
loopne
jno
pop
imul
mov
insb
sahf
jno
or
mov
dec
xor
dec
jno
cwtl
test
jno
fbstp
jno
adc
pushf
inc
jno
dec
pop
jns
and
shl
imul
mov
lcall
jno
pop
pop
inc
dec
gs
and
inc
xchg
mov
push
mov
jp
in
js
aaa
adc
and
jge
mov
cmp
mov
mov
add
jae
xor
mov
mov
jno
or
notb
cli
mov
adc
push
ret
sbb
test
sbb
cmp
aad
bound
fcoms
push
sbb
jge
jno
lods
int3
mov
sbb
dec
jno
aad
out
pushl
jno
jl
dec
jb
loop
jno
adc
aam
sbb
fwait
in
xchg
push
cmp
insb
xor
enter
into
insl
out
add
push
cmp
push
scas
xchg
mov
jns
push
or
cltd
inc
aad
sbbb
insl
cli
bound
sbb
ss
lret
sahf
jmp
sub
outsl
dec
xchg
pop
mov
jns
xor
shrb
lods
imul
jno
mov
dec
adc
popa
sbbb
out
pushf
outsb
or
insb
fbstp
mov
stos
int3
scas
xor
movsl
gs
imul
and
xchg
xchg
jno
ret
inc
cmpsl
repnz
nop
imul
lcall
mov
rcll
dec
test
sub
sarl
xor
fsubrs
adc
push
push
nop
ret
loopne
aas
xlat
insl
lea
gs
loope
aam
in
or
sub
jecxz
mov
dec
sub
int3
aad
inc
out
add
dec
xchg
jno
fst
mov
scas
repnz
add
adc
xor
jno
inc
xchg
cmp
ja
rclb
fnsave
or
jo
sbb
jno
and
lods
pop
inc
fbstp
xorb
les
gs
mov
cwtl
test
imul
repnz
push
pop
idivb
nop
or
xchg
jns
sub
adc
push
jbe
fcomi
stos
pop
or
shrb
xor
je
jno
sbb
jmp
pop
jns
xlat
mov
sub
adc
mov
test
fwait
jno
adc
mov
in
push
cmp
or
imul
scas
mov
mov
mov
sarl
pop
lods
pop
or
adc
mov
gs
nop
sbb
cmpsl
popf
lahf
pushf
insl
insl
cmpsb
mov
fdivl
jg
test
repnz
jno
jmp
arpl
xchg
and
or
jno
aad
lds
clc
flds
stos
lock
jno
dec
leave
pop
inc
and
xchg
in
lahf
add
mov
push
jno
into
fcoml
mov
or
sbb
inc
or
inc
jle,pt
pause
xchg
aad
aam
sbb
shlb
jno
arpl
cli
jno
push
inc
inc
daa
sbb
cmp
clc
test
sub
fldenv
jno
push
imul
cmpsl
in
jmp
cli
popa
pop
sub
sub
jbe
pop
jne
loope
ret
les
xchg
mov
rclb
test
xor
cltd
popa
cmp
jno
fiaddl
ja
fmuls
jno
pop
push
push
jmp
dec
mov
inc
xchg
mov
fildl
loope
adc
xor
push
push
lret
lcall
jno
in
inc
imulb
popa
mov
dec
fisttps
repz
test
pop
fmul
mov
in
and
insl
jmp
jno
lock
inc
pop
mov
mov
nop
insl
add
xchg
inc
sbb
sbb
xor
xchg
and
addr16
fidivs
cmpsb
nop
mov
xor
int3
jno
mov
cmpsl
mov
dec
dec
or
es
pop
push
cwtl
mov
mov
ffreep
scas
pop
fdivrl
test
mov
jno
outsl
cmpsl
shlb
inc
nop
jmp
adc
jae
enter
jbe
sub
push
xorl
out
xor
jb
and
jge
lcall
mov
rcl
leave
lret
into
push
gs
or
in
pop
inc
cli
cld
cmp
mov
cmp
fiaddl
jl
stos
sbb
lcall
add
std
jge
mov
cltd
int
pop
cmp
nop
stc
xlat
sbb
imul
add
adc
loopne
adc
lea
sbb
nop
add
mov
fptan
mov
lea
jns
xor
imul
sahf
addr16
xor
aad
jno
cmpsb
lods
mov
push
jno
add
add
jbe
test
xor
mov
pmaxub
arpl
sbb
outsb
mov
aam
data16
mov
jno
out
subb
in
in
jno
cmc
dec
lret
sbb
ljmp
or
popa
xchg
and
jne
jge
rcrb
pop
dec
mov
nop
out
xor
push
dec
jge
int3
sub
popa
xchg
stos
fsts
jno
insl
pop
shll
std
inc
xchg
insl
jb
ret
jge
jno
stos
pop
pop
jnp
push
fidivl
pop
sbb
add
stc
xor
jno
fldenv
imul
test
bound
adc
icebp
adc
mov
jno
add
out
cltd
mov
in
movsl
aas
jge
aam
xchg
mov
leave
gs
or
mov
xchg
add
add
pusha
hlt
jecxz
mov
fdivr
cmp
jns
xchg
in
sarl
fucomp
fdivl
lcall
repz
inc
mov
jno
pusha
xchg
cmp
popa
outsl
mov
and
mov
movsb
add
jmp
imul
jecxz
hlt
test
mov
mov
mov
cmp
test
rcr
jno
mov
or
sahf
pop
mov
add
lea
and
out
adc
sbb
jno
nop
lahf
jl
mov
and
jno
outsl
in
outsb
dec
dec
xor
rcll
mov
inc
fists
cld
mov
ficompl
sub
fwait
test
int3
arpl
xor
aaa
scas
hlt
repz
or
lcall
jno
pop
sub
lret
mov
adc
js
outsl
inc
rcr
jno
inc
mov
lock
jno
sbb
daa
ret
cmp
scas
sbb
push
jno
pop
mov
cwtl
jno
fidivs
jmp
shl
nop
push
mov
cmp
mov
shlb
push
lds
adc
or
jno
dec
lock
and
xor
lahf
imul
jno
idivb
outsl
jno
repnz
cmc
cmp
add
inc
jle
sub
pop
insb
lods
push
add
cmp
addr16
imul
sub
jl
inc
pop
add
cmp
cmp
and
and
cmpsb
mov
or
ret
jno
and
pop
push
cmp
out
xchg
outsb
iret
jno
mov
leave
or
jl
loope
fsubl
jno
inc
inc
cltd
push
cmp
pushf
jno
mov
jno
xchg
shl
stc
xor
push
insb
rol
jmp
dec
jno
push
dec
xor
adcl
cs
movsb
mov
lds
std
mov
or
imul
sub
shll
inc
add
mov
inc
pop
adc
nop
repz
xchg
pop
cmc
fsubs
sub
sbb
jle
mov
adc
jecxz
jle
mov
clc
sbb
insl
push
pop
shrl
jno
inc
mov
jno
pop
mov
stos
jno
push
gs
sbb
std
xor
mov
imul
cwtl
les
je
fidivl
pop
inc
mov
adc
leave
gs
jno
adc
mov
aaa
mov
enter
push
movsl
shll
xchg
dec
out
xchg
lds
test
jno
xor
jle
mov
inc
inc
mov
adc
outsb
jo
in
neg
repz
outsl
or
cmp
stos
pop
jno
jae
mov
daa
mov
sbb
and
pop
cmp
rol
jne
jbe
movsb
ret
nop
inc
bound
sbb
mov
or
fmuls
lods
cs
jge
pop
pop
int3
leave
ja
mov
sbb
pop
or
inc
jno
dec
mov
dec
sahf
jno
sbbb
insl
aaa
aad
dec
int
cmpsb
push
jle
sbb
jno
loopne
cltd
push
pop
vfrczss
mov
loope
addr16
in
ficomps
int3
inc
popa
sbb
out
inc
jb
shlb
fcoms
cmp
int3
pop
jno
sbb
out
push
jno,pt
mov
or
sbb
arpl
jne
rcr
sub
mov
or
es
mov
ret
push
sub
lea
lret
sub
jno
orb
jno
fldenv
ja
std
pop
negl
add
cmpsl
mov
rolb
leave
jns
icebp
adcl
rcrb
jns
gs
cmp
cmp
add
mov
pop
jp
clc
and
movsl
mov
add
or
adc
mov
stc
add
aam
inc
pushf
xor
mov
cmp
fcomp
or
aam
sbb
mov
push
aas
xchg
xor
mov
test
scas
test
xchg
push
jp
aas
xchg
jno
mov
and
add
pop
push
call
jno
mov
cmp
inc
cmp
or
pop
pop
aaa
popa
imull
arpl
add
and
in
push
push
int
pop
or
ss
ljmp
fs
cmp
or
add
jmp
pushf
add
cmp
xchg
xor
mov
nop
dec
sub
jns
addr16
nop
adc
mov
stos
inc
jno
testl
nop
or
in
hlt
outsb
repz
shll
mov
pop
jns
push
cld
dec
mov
pushf
popa
sub
fwait
int3
lret
loope
jg
inc
lret
clc
imulb
push
in
xchg
jb
popa
inc
cmpsl
into
xchg
jno
addr16
pop
mov
data16
js
ror
loope
dec
push
insb
popa
pop
or
dec
dec
cld
pop
stc
jno
push
xor
je
fnstenv
jns
enter
push
dec
or
or
jno
fists
sub
add
push
lds
xchg
mov
daa
shlb
fnsave
add
inc
les
popa
fnstcw
dec
data16
ja
mov
into
or
mov
or
stc
adc
cmc
les
inc
jns
dec
jno,pt
jge
nop
aam
push
insb
jno
jnp
xlat
dec
cli
xchg
mov
push
and
out
je
std
jno
inc
imul
addl
jno
rclb
mov
push
jno
lods
jmp
jbe
pop
push
daa
jno
add
mov
imul
adc
mov
insb
in
add
stos
xlat
xor
add
loope
scas
or
adc
adc
dec
and
xor
test
xchg
jno
cmpsl
int
jae
add
mov
adc
cmp
xchg
imul
fs
movsb
push
test
mov
adc
test
lahf
jge
pause
cltd
imul
sub
push
push
repnz
mov
mov
int
cwtl
adc
push
fcoml
into
clc
jno
loope
push
jbe
shrb
add
jno
xchg
jg
fwait
ret
hlt
mov
dec
out
cmp
jp
push
addr16
xchg
pop
movsl
sbb
cwtl
jno
mov
cmp
jno
loopne
mov
jno
or
loop
mov
out
and
sub
imul
jg
xchg
push
xlat
adc
jno
jae
inc
mov
inc
and
jno
lcall
jno
roll
es
mov
xor
pop
test
in
xchg
scas
mov
cwtl
popf
scas
cmp
into
sub
adc
fidivrl
test
sbb
dec
push
icebp
or
movsb
popa
push
dec
lea
cmp
loop
add
das
push
arpl
ror
sbb
inc
ficomps
xchg
aaa
pop
sbb
enter
jge
std
mov
mov
sbb
and
sti
jno
mov
inc
pop
mov
xor
mov
stos
loopne
xchg
repz
ss
mov
sbb
loopne
jae
scas
pop
test
pop
xor
pop
jle
popl
adc
xchg
jno
fidivs
jns
xchg
sbb
out
in
xor
push
jno
or
mov
jl
or
mov
xor
fisttpl
ljmp
adc
sub
dec
nop
std
xchg
jnp
jno
cs
shlb
jne
lods
dec
or
push
jno
add
sub
sub
stc
insb
xorb
jno
fxch
mov
jno
pop
push
shlb
inc
sbb
je
mov
jnp
jns
ret
int3
mulb
mov
or
pop
lahf
mov
das
test
adc
mov
notb
mov
cmp
cli
add
fists
out
in
push
daa
push
jns
test
mov
xchg
jmp
xchg
hlt
inc
add
mov
jno
into
cmp
add
push
mov
jae
dec
sbb
xchg
sbb
jno
scas
leave
out
fidivl
iret
jno
inc
call
bnd
fistpll
lret
adcb
arpl
adc
pop
add
push
insb
lahf
mov
imul
mov
and
xchg
xor
cmp
mov
or
xchg
dec
cmp
andb
add
repnz
ss
dec
fisttpll
test
jp
pusha
jns
aaa
jno
fdivrs
out
jno
push
les
jno
push
cmp
mov
sbb
outsb
pushf
out
rorl
pop
mov
cmp
orl
jge
lock
arpl
inc
stc
dec
scas
stos
mov
adc
cmp
mov
arpl
add
mov
dec
iret
jno
mov
test
std
or
test
lods
nop
daa
push
mov
popf
push
rorb
cwtl
adc
pusha
adc
int
jnp
jno
cld
lods
loope
jns
push
jno
mov
movsb
bound
loopne
leave
mov
inc
jns
or
out
mov
xor
loope
jno
jl
lret
divl
into
and
xor
or
test
outsl
mov
inc
push
pop
sbb
mov
out
out
adc
pusha
jno
es
inc
xchg
or
cli
jne
xor
jb
nop
cmp
mov
xorl
loope
sarb
mov
pop
jno
icebp
dec
insb
loope
jno
fdivrs
cmpsb
mov
fs
scas
fcmove
sub
jns
stos
stos
jno
xchg
wbinvd
adc
in
jno
popa
push
imul
cmc
adc
mov
mov
xor
mov
jp
jno
cmpsl
scas
inc
dec
adc
popa
pop
xchg
push
outsb
cmp
jno
add
leave
es
movsb
repz
adc
cmp
out
cmp
inc
cmpsl
jno
loope
imul
stc
jno
jns
lret
xchg
ret
les
ja
lods
jmp
test
adc
pop
xor
mov
xchg
aad
int
sbb
push
int
je
mov
adc
popf
in
outsb
jno
adcb
xor
lcall
jg
push
jbe
or
inc
stos
jno
cmp
adc
mov
std
out
jbe
dec
test
insb
jno
cwtl
add
cmp
sub
fsts
lds
pop
aaa
call
and
mov
stc
imul
lds
addr16
ficompl
mov
adc
js
lock
imul
mov
xor
add
mov
movsl
jae
push
push
jno
cmc
int
mov
sbb
pop
icebp
jp
sbb
outsl
mov
cmp
pop
stc
jno
adc
ds
ret
xchg
lods
addr16
sbb
jno
dec
imul
std
mov
add
loopne
testl
int3
or
in
add
sti
aam
movsl
add
xor
jno
inc
sahf
iret
and
jb
add
inc
aad
add
jl
sbb
add
loopne
or
je
jns
push
jbe
cmpsl
lods
bound
int
lret
mov
jno
push
sbb
es
mov
outsb
in
push
add
add
jl
insl
rol
stc
push
fisttps
jne
mov
test
push
add
movsl
scas
xchg
xchg
enter
dec
shl
jno
and
jl
icebp
arpl
sbb
pop
imul
fldenv
adc
jne
sbb
mov
inc
and
pop
hlt
in
rolb
int3
es
lods
xchg
sbb
push
mov
mov
jno
popa
sti
jge
leave
xchg
lahf
jno
add
xchg
dec
adc
pop
jg
test
push
dec
jo
lods
nop
lret
pop
leavew
mov
adcb
mov
or
dec
pusha
mov
aas
dec
scas
mov
push
adc
clc
mov
add
lods
mov
cmp
jp
xchg
das
ret
sbb
dec
jae
inc
nop
fbld
jno
std
add
es
lods
scas
das
insb
inc
or
sub
imul
scas
outsl
xchg
jp
ja
cs
mov
add
cmp
dec
pop
push
jg
ss
adcb
mov
push
hlt
mov
stos
xchg
in
subl
add
repnz
pop
jnp
cmp
jno
xchg
out
mov
into
and
aad
jno
mov
nop
xor
adc
jle
shll
mov
mov
push
lret
arpl
movsl
jecxz
cld
mov
dec
ss
lds
fwait
adc
push
xchg
imul
jno
dec
fldenv
loope
fldl
icebp
push
and
mov
jo
jno
orb
sub
and
mov
shrb
jno
sub
pop
pop
pushf
lcall
insl
add
mov
test
mov
cli
test
cmp
push
mov
inc
cs
inc
mov
orl
lds
repnz
or
shl
les
add
aam
fs
nop
lea
mov
into
pop
cmp
ret
aas
or
mov
out
xor
popf
lret
xor
in
or
lahf
adc
and
lea
in
or
lds
lods
fildl
xchg
pop
sub
popf
pop
mov
jno
jnp
mov
mov
xor
jns
outsl
ljmp
mov
pop
mov
jnp
jno
in
mov
jbe
mov
adc
outsb
cmpsl
stos
inc
popa
mov
jno
sub
movsb
push
xchg
xchg
scas
xor
or
add
push
mov
mov
std
or
jmp
aaa
jno
cmp
xor
andl
repnz
adc
test
push
bound
enter
das
mov
mov
jns
jne
sbb
les
cmc
mov
orb
repz
jno
mov
mov
jno
fists
jae
pop
int
into
and
mov
jno
pushf
dec
clc
or
test
or
cmp
xchg
add
and
jno
ljmp
jno
adc
mov
fsubrp
popa
and
jno
xor
fbld
hlt
mov
ret
jne
lods
add
dec
repz
push
and
pop
add
jge
clc
lret
mov
inc
lods
jno
movsl
mov
adc
or
jno
out
cmpsl
je
jmp
adc
mov
jecxz
jns
add
jno
rcr
pop
nop
xchg
mov
dec
fnsave
rol
and
inc
pop
lret
cmp
mov
cmp
jno
sbb
sbb
mov
sbb
lret
push
jns
mov
jge
cmp
xor
add
test
jns
sbb
mov
xchg
fisttpl
icebp
aaa
jno
sbb
lea
dec
sarl
stc
cmp
daa
sbb
mov
sbb
xor
shll
inc
add
sbb
sahf
out
adc
out
jl
aad
loope
cmpsb
sub
mov
loopne
jecxz
pop
cli
aad
rclb
mov
addr16
inc
sub
int
cmpsl
or
sbb
jno
pop
in
adc
cmp
inc
cs
in
div
jl
xor
jno
je
pop
sbb
ljmp
pop
jno
cmp
adcl
test
jno
lods
test
and
xchg
inc
jno
out
mov
xor
sub
imul
jne
daa
jno
add
pop
mov
pop
push
sbb
hlt
xchg
sub
pop
and
cmp
mov
jno
fisubrl
jp
add
gs
stc
mov
leave
sbb
and
lcall
jo
xor
lret
jle
imul
xor
adc
push
xchg
and
shlb
jno
cs
dec
mov
add
mov
or
and
fdivr
cmp
mov
xchg
imul
jl
mov
leave
jno
add
sub
inc
and
mov
xchg
stos
ror
sub
jno
mov
dec
adc
in
push
mov
fnsave
jno
pop
fisttps
iret
jns
jecxz
dec
shll
add
sbb
jno
pop
mov
xor
mov
test
popa
clc
fdivs
sbb
mov
push
adc
mov
imull
popa
push
jb
jno
xor
lock
lahf
mov
rol
jp
jno
push
pop
fldt
push
dec
pop
gs
jno
mov
cmp
arpl
cvtpi2ps
nop
jbe
scas
jno
popf
or
loope
inc
rolb
sub
ljmp
and
imul
mov
xlat
sub
movsb
sub
out
pop
mov
pop
push
cmc
popf
aas
xorb
mov
psllq
inc
add
push
aaa
and
jecxz
clc
lock
lds
outsb
jns
pop
hlt
int3
push
or
mov
vmwrite
dec
insl
lahf
movsb
mov
daa
std
into
jo
shlb
or
push
out
movsb
jno
jge
mov
jg
mov
ret
nop
and
add
aam
xor
testl
inc
fsubr
rolb
subl
mov
push
push
dec
push
xchg
push
addr16
call
push
mov
jmp
push
cwtl
shll
mov
nop
sbb
stos
cli
movsl
xchg
imul
or
sbb
subl
mov
jno
jle
adc
adc
and
dec
pop
movsb
xorl
xchg
mov
lcall
movsb
xor
std
shr
push
jno
popf
das
mov
insb
test
nop
cmpsl
xorb
ljmp
and
inc
pause
jmp
rorl
sbb
mov
jno
jmp
das
mov
adc
cli
jno
stos
int3
scas
push
rcll
jle
mov
sbb
jg
fs
pop
gs
stos
push
jno
into
adc
sbb
sarl
dec
rep
pop
es
jno
sbbl
fbld
bound
mov
inc
subb
add
outsb
aam
mov
xchg
jle
enter
shll
es
jno
stos
sbb
sbb
lret
push
lcall
xchg
push
jno
xchg
pop
out
in
jb
sbb
daa
cmp
mov
in
divb
hlt
push
add
jno
mov
test
arpl
scas
dec
out
mov
and
jg
push
jno
and
div
ret
int3
shl
in
add
cmpsb
push
xchg
ja
divb
fmul
dec
sbb
pop
lea
cmp
jmp
inc
test
pusha
adc
sti
jl
inc
inc
jno
fistl
in
add
aad
inc
cmpsb
jno
adc
mov
dec
jb
pop
adc
adc
jno
inc
mov
ficoms
cmp
mov
mov
jno
in
popa
imul
xor
cs
fistpl
jl
push
inc
and
xchg
mov
jno
out
ljmp
lahf
adcl
in
xchg
jno
mov
shlb
cmp
lods
xor
add
pop
popa
jbe
inc
jge
cmp
mov
arpl
stos
push
into
jmp
lea
movb
jo
jl
adc
aam
and
xchg
inc
mov
imul
loope
jle
leave
test
flds
mov
pop
out
sbb
nop
and
or
jno
es
lret
sub
xor
lea
rcll
jno
aas
cltd
lahf
and
gs
adc
stos
inc
push
cmpsl
add
jb
jecxz
mov
popf
push
cmp
in
cmc
imul
pop
vpmacsdql
jno
xor
inc
lea
dec
imul
imul
add
ss
dec
cmpb
ficompl
push
leave
or
dec
push
iret
stos
fs
repz
test
jno
jae
dec
leave
mov
adc
xor
sub
cltd
fsubrp
lret
jns
ret
fmuls
fwait
je
push
xor
adc
push
mov
lahf
add
mov
test
outsb
jbe
jae
in
insl
dec
jno
mov
out
jno
leave
in
dec
push
inc
fwait
pop
jne
arpl
jno
mov
mov
xchg
mov
jno
mov
jno
cmp
sub
in
cmpsb
nop
and
dec
or
outsb
jno
and
adc
jns
mov
ficoms
shll
pop
mov
mov
nop
test
jno
cmp
push
hlt
imul
sbb
repz
cltd
popa
mov
mov
shll
cmpsb
push
fnsave
sahf
shrl
and
jno
adc
xor
jno
xchg
pop
or
cmc
dec
scas
xchg
in
cmp
sub
sarb
jno
sarl
pop
adc
pop
pop
lret
inc
in
pop
sub
icebp
dec
fidivs
aad
inc
popa
pop
mov
jno
int3
mov
jno
lods
jl
mov
mov
pop
imulb
jno
imul
scas
jbe
push
mov
stos
repnz
in
in
fwait
push
push
dec
push
xor
cmp
imul
lods
mov
jno
fwait
adc
and
xchg
out
fldcw
dec
mov
jno
xchg
jbe
push
jno
cmc
push
movsb
test
xor
int
notb
sbb
out
punpcklwd
dec
das
pop
cmpsl
pop
test
xchg
les
mov
jno
rcll
or
xor
mov
mov
ds
dec
push
jno
dec
int
mov
mov
adc
inc
jno
jnp
push
cli
jno
add
xchg
xor
nop
jg
mov
jno
bts
jmp
int3
mov
xchg
std
cmc
pusha
iret
jno
or
cmp
push
je
push
data16
xlat
push
outsl
adc
loop
xchg
in
ss
fnsave
add
repz
lret
jp
test
test
movsl
in
int
call
jns
cmp
jno
es
jl
imul
lds
cmp
xchg
jle
fadds
rcll
nop
mov
sbb
add
jp
shll
jno
pop
fcomp
jae
push
jno
dec
adc
sbb
cwtl
jmp
pop
cmp
pushf
jb
sub
push
inc
adc
out
sbb
enter
or
neg
jl
dec
dec
ret
aaa
mov
jno
jge
or
int3
gs
jno
mov
xchg
loopne
ret
daa
fisubrl
shlb
push
sahf
cmp
jb
dec
mov
movsb
cmpsb
jp
sbb
ret
fsubp
in
jbe
pop
arpl
sahf
shrb
and
jno
sub
xor
lods
mov
jno
imul
xchg
push
ja
push
bound
jae,pn
xlat
push
subb
jl
dec
imul
mov
out
call
xchg
cmp
jns
lds
sub
and
xchg
jmp
dec
popa
push
cmp
rclb
lods
fmul
movsb
push
lret
insb
out
loope
popa
push
insl
es
pop
loop
xorb
lea
clc
repz
fstps
mov
jle
iret
jno
xchg
cld
hlt
shr
mov
inc
dec
popa
jo
xchg
push
dec
xchg
fs
add
test
pusha
sbb
and
jb
hlt
rorl
adc
mov
and
jno
cltd
jo
cmpsl
pop
lret
movsb
imul
and
push
jno
adc
bound
rcrb
sbb
mull
adc
jno
movsb
nop
add
dec
fistpl
fstl
cmp
popa
popa
xchg
cs
jp
mov
jno
ret
push
scas
dec
mov
sub
fisubrl
inc
ja
in
cmp
xchg
xchg
repz
outsl
jne
jo
in
leave
sarb
add
std
scas
in
sub
mov
ss
pusha
xchg
mov
jl
dec
jno
ljmp
push
fstps
add
js
hlt
jno
into
sbb
and
ljmp
jno
cmp
mov
push
dec
jle
imull
movsb
add
mov
and
pop
outsb
pop
sbb
popa
mov
jno
fwait
sbb
js
xchg
xchg
jle
hlt
pop
push
jb
push
jno
arpl
cld
jmp
shrb
popa
jno
loope
dec
roll
fbstp
sub
iret
jne
jno
and
rcll
lcall
out
add
pop
incl
mov
ja
jge
pop
add
pop
test
sub
cmp
and
push
jno
mov
xchg
bound
gs
lds
das
mov
neg
or
sbb
ret
nop
sub
jbe
and
dec
jmp
in
dec
stc
ja
mov
pusha
into
mov
shrb
jno
stc
js
inc
cld
lret
shll
int3
insb
jno
in
in
pushf
lods
mov
jae
movsl
or
out
dec
jno
inc
pop
cmp
push
and
jmp
imul
imul
push
jno
pop
add
xchg
cmp
mov
shll
push
leave
iret
xchg
dec
jno
sbb
push
out
adc
xorl
imul
jns
lods
fsubl
adc
adc
xor
push
xor
sarl
xchg
fs
loop
loop
adc
push
inc
movsl
movsb
jb
sub
imul
pop
cmpsl
inc
popa
repnz
das
loope
shlb
push
sub
and
jno
insl
mov
imul
repz
push
popa
adc
dec
sub
push
mov
push
das
or
and
rorb
call
popa
loopne
adc
jmp
jns
mov
jno
cltd
add
adc
lods
pop
jno
xorb
ds
sbb
sub
shr
je
add
fildll
jno
test
fwait
add
loop
je
out
mov
and
jno
imull
sbb
enter
add
jp
jmp
out
dec
dec
inc
push
lods
out
cmp
adc
cmp
mov
mov
andl
in
scas
sbb
cmp
mov
jae
xor
mov
mov
jno
sahf
lcall
jecxz
je
push
jno
xchg
push
hlt
push
ret
adc
and
jno
arpl
pop
and
ja
orb
arpl
int3
test
jno
sbb
in
jno
inc
out
jmp
sahf
push
cmpl
adc
je
cmpsb
add
jno
loopne
out
xchg
fdivs
xor
out
jno
addr16
dec
aas
fimuls
jno
mov
pop
push
sbb
scas
mov
in
rolb
xchg
or
cs
repnz
addr16
fwait
pop
jno
adcl
nop
pop
xor
push
xchg
enter
xchg
sbb
jns
and
jge
push
in
stc
test
mov
std
cld
and
sbbb
mov
gs
mov
addr16
sub
int3
and
adc
mov
xchg
pusha
ret
push
lret
cmc
jno
push
in
addr16
jno
fstp
pop
cmp
les
xchg
mov
addr16
imul
into
jl
or
jno
push
int3
not
aas
les
lahf
xchg
cmpsb
sar
test
aam
shrl
popa
add
jne
jecxz
lcall
dec
xor
pop
push
xchg
hlt
jp
mov
data16
gs
mov
jle
outsb
ds
call
inc
nop
sbb
cmp
cld
xchg
nop
or
or
jg
movb
inc
mov
subl
cmpsb
pop
enter
sbb
lea
jmp
mov
daa
jno
add
mov
pop
push
push
jno
xchg
xlat
cltd
pop
into
aaa
adc
std
push
fmuls
popa
mov
jno
xchg
xor
notl
adc
fcos
xor
pop
call
dec
lcall
and
insl
mov
pop
ds
sar
addr16
sub
test
popa
fxch
in
mov
leave
or
je
loope
xor
adc
mov
sub
fistpll
xchg
and
adc
test
sub
cs
cmpsb
sub
jno
add
adc
xchg
nop
imul
fdivl
and
lret
xor
inc
jno
cwtl
adc
and
scas
push
lret
popf
cmp
lds
add
or
jno
test
fcmovnbe
mov
shlb
andl
add
jb
ja
imul
mov
add
out
ret
inc
adc
aam
xchg
push
jne
add
push
xlat
add
mov
outsb
hlt
or
cli
xchg
mov
jno
mov
orl
dec
mov
imul
loope
pushf
inc
push
or
notb
xchg
outsb
jno
lods
jbe
dec
cmp
cli
jno
stos
rorl
mov
mov
cmpsb
dec
aad
sbb
lds
lcall
jle
shll
lret
cli
cmp
dec
adc
jecxz
int3
icebp
into
jp
jo
jno
mov
mov
push
lret
fstpt
and
add
adc
pop
cmp
dec
dec
iret
mov
mov
jne
mov
and
adc
and
jg
sub
jno
dec
sbb
pop
sarl
lds
push
ret
pop
cmp
arpl
jno
xchg
nop
push
sub
scas
sub
gs
ret
jg
nop
mov
mov
mov
mov
dec
jns
enter
sub
adc
lret
shlb
xor
loop
ljmp
js
jecxz
and
imul
sbb
and
je
jno
xchg
push
jle
pusha
xlat
xor
cmp
imul
xchg
jbe
leave
add
jno
lret
sub
pop
dec
mov
insl
xor
aas
mov
or
cmp
cltd
cmp
jno
mov
sahf
js
lcall
mov
jno
mov
mov
lret
ret
ss
cmpsl
lods
icebp
jns
jno
jo
popa
testb
mov
mov
lea
movsl
jno
add
int3
mov
nop
clc
add
lret
sti
icebp
test
inc
or
repz
sahf
push
cmp
clc
dec
xlat
jge
int
sub
imul
jno
mov
cltd
nop
jmp
arpl
sbb
andl
push
lods
push
stos
jnp
jno,pn
push
jl
jp
jle
cltd
mov
fstpl
ljmp
or
push
mov
inc
xchg
and
aas
jns
xorb
xchg
mov
lods
adc
jno
push
pop
mov
jno
dec
cmpsl
dec
fldt
lahf
pusha
out
rcll
mov
fsts
lods
xor
pop
shlb
out
push
ret
popf
pop
jno
and
lods
jns
jb
and
pushf
ret
mov
xor
lcall
outsl
pop
jno
and
and
push
test
cmpsb
nop
jmp
lret
ljmp
aas
add
and
and
push
in
lcall
xchg
mov
shll
ja
cmp
mov
add
jecxz,pn
mulb
jno
mov
cmp
adc
mov
add
call
xchg
outsl
popf
add
push
inc
test
mov
jno
xor
in
jmp
jno
pop
cmp
in
pusha
lret
add
xor
jno
cmpsb
imul
mov
mov
mov
nop
test
push
add
xchg
jno
mov
xor
xor
insl
inc
jns
xlat
repnz
push
sbb
subl
jbe
out
bound
sti
fimuls
mov
test
outsb
push
xchg
rorl
jno
xchg
pop
push
mov
push
mov
mov
sub
insl
aaa
jno
push
loopne
lret
pop
adc
lahf
inc
into
loope
jno
faddl
pop
push
sub
jno
push
mov
aas
js
adc
xlat
push
add
xchg
or
inc
out
lea
iret
xchg
dec
push
scas
pushl
pop
mov
push
fcoml
mov
or
jno
lret
dec
pop
push
stos
push
les
mov
nop
mov
lds
add
or
icebp
add
push
dec
jmp
mov
lahf
xor
sti
ljmp
out
out
inc
or
jno
xchg
cmc
das
cmp
daa
jno
out
adc
add
insb
mov
lods
xlat
xor
xorb
and
add
inc
xchg
sti
cmp
cmp
lcall
xor
mov
sbb
sbb
jno
pop
test
cmp
and
xchg
mov
bound
push
and
bswap
sbb
push
icebp
rcr
jno
cmpsl
lock
cmpl
cmpsb
dec
jns
das
adc
adc
movsl
jmp
dec
shlb
jae
jmp
sub
fistpl
enter
sbb
mov
jno
cmove
fs
sub
mov
scas
jne
and
jb
notl
data16
insb
repz
xlat
fcompl
jno
dec
sub
cld
push
xchg
xchg
ss
ret
and
jbe
xor
fstl
cmpsl
jno
gs
es
out
inc
and
nop
sub
xchg
data16
in
bound
imul
cmp
std
aad
cmp
jno
mov
jnp
lahf
cwtl
lds
pop
mov
mov
adc
fidivs
inc
dec
mov
cmp
in
and
sub
and
mov
push
scas
ds
lods
inc
lea
xor
mov
push
fnstcw
mov
cmpsl
cmp
pop
jg
leave
in
mov
insl
pop
js
push
cmp
mov
inc
jno
fisubl
cld
inc
sbb
push
in
icebp
cmp
push
cs
sbbb
stc
and
jecxz
repz
pop
popf
jl
orl
dec
mov
mov
repnz
repz
aaa
mov
into
jge
je
int3
ret
mov
sbb
sub
cmpl
xor
sbb
push
sahf
sbbb
jno
aaa
cmp
inc
mov
cmpsb
jno
lcall
jno
arpl
cwtl
dec
iret
xor
cmpsl
out
inc
popl
popa
push
ds
adc
leave
notb
push
inc
pushl
je
xor
shll
push
sbb
jno
jl
cmpsb
fcmovb
lods
jno,pt
mov
inc
jbe
adc
js
xor
pop
mov
push
xchg
mov
lds
mov
mov
pushf
push
movsb
out
leave
andl
cmpsb
orb
mov
mov
inc
and
push
hlt
push
mov
jns
jb
insb
push
mov
shlb
std
ret
jno
cmpsl
aaa
or
add
sbb
pop
arpl
shll
jno
nop
dec
test
sbb
jo
or
jns
mov
add
repnz
mov
aas
adc
pop
xchg
rolb
pop
aam
repnz
jno
jnp
or
and
or
cmp
aaa
xlat
xchg
ljmp
int3
scas
aas
pushf
pop
add
out
fwait
inc
ret
cmp
pop
jno
xchg
push
iret
mov
jno
mov
mov
jno
and
in
or
jno
ss
aas
push
mov
cwtl
jno
fs
xor
jge
push
es
or
add
jnp
lock
pop
and
popa
mov
dec
mov
jns
das
sbb
add
jno
xor
xchg
loopne
push
jno
enter
loop,pt
jno
movsl
inc
outsb
clc
daa
add
jp
cmp
adc
fdivrp
inc
es
in
les
sub
int
jno
arpl
por
xor
jno
scas
add
mov
pop
mov
cmp
repz
sub
shrb
js
shll
sar
mov
jno
or
mov
pop
inc
adc
daa
jne
jno
popf
lret
push
mov
in
jno
fdivl
xor
cmp
jmp
arpl
push
jno
jle
and
dec
sub
jno
icebp
lahf
bound
fisubrs
mov
test
es
jnp
add
xchg
jno
ja
mov
jno
mov
inc
call
jae
inc
pop
inc
jno
ds
popa
jno
insb
inc
stc
sbb
inc
xchg
mov
sub
scas
lods
cmp
roll
inc
jb
and
xor
push
ljmp
sub
pop
mov
in
mov
lret
cmp
lea
xchg
jno
jmp
pushf
leave
nop
xor
test
jecxz
sub
jno
ljmp
add
push
imul
push
xchg
rolb
xchg
test
repz
jmp
cmc
mov
jno
push
xchg
js
or
movsb
mov
jno
sbb
xchg
jno
inc
or
das
rorb
fldl
and
jno
les
rcr
mov
mov
mov
ja
jno
aas
xchg
mov
jb
int
xchg
mov
sbb
mov
add
jmp
jg
add
jmp
pop
dec
add
lret
in
imul
adc
cmp
std
pusha
mov
mov
mov
inc
push
jno
fisubrs
pop
xchg
xchg
imul
pusha
jle
jno
outsl
add
lcall
jecxz
movsb
cmc
or
adc
push
js
mov
jne
mov
jle
xor
mov
call
cmp
sbb
jle
jno
xor
fwait
mov
pop
jno
rorl
movsb
xchg
mov
iret
pop
outsb
jae
sub
out
mov
sbb
hlt
ret
aam
push
push
int3
rclb
nop
mov
pushf
repnz
ds
jl
pusha
lods
scas
xor
out
fdivrl
popa
lret
sar
adc
dec
and
push
jge
push
imul
xorl
sbb
xchg
popa
sti
aaa
and
inc
inc
add
mov
jb
nop
and
jl
arpl
sbb
mov
push
jno
mov
inc
ror
inc
push
jg
addr16
fisubrs
in
jno
jge
imul
push
nop
push
neg
xchg
jno
arpl
sub
je
jl
jno
insl
mov
sbb
jnp
push
cli
xchg
cmp
sti
or
lea
add
sar
ret
lods
dec
outsl
inc
push
push
std
xorb
rclb
sub
jecxz
cmpb
data16
and
movb
cld
test
ret
jno
aaa
inc
iret
inc
or
xchg
daa
mov
push
arpl
test
push
jno
ficompl
add
jg
pop
pop
mov
test
out
gs
mov
scas
lret
xor
out
jns
adc
add
pop
mov
cld
shll
xor
and
jno
xchg
xchg
in
push
test
in
inc
int
popa
insb
popf
mov
add
push
jecxz
mov
dec
mov
mov
xchg
or
jne
mov
cmp
rorb
jno
add
hlt
inc
sti
mov
sbbb
out
jg
imul
lcall
mov
adc
jno
stc
pushf
push
mov
subl
or
cld
add
rorb
xor
scas
mov
jns
and
jns
add
fdivrs
push
pop
push
push
aad
jle
idivl
xchg
sbb
jbe
xor
aas
pop
pop
mov
cmp
test
mov
sahf
xorl
jns
cld
repnz
add
dec
and
stos
fwait
icebp
stos
aas
ret
fisubl
lret
mov
or
jne
loope
and
push
sub
adc
repnz
add
in
xor
push
orl
jl
lcall
dec
daa
sbb
out
jno
out
shrl
mov
push
mov
jno
icebp
jmp
outsl
rcll
jno
mov
pop
bound
imul
mov
or
jno
lock
inc
dec
ds
stos
int
dec
jno
lahf
jge
or
and
out
mov
jno
nop
popf
cmc
adc
inc
adc
sahf
xchg
in
jne
repz
imul
shlb
cli
push
jbe
gs
cmpl
imul
nop
daa
sarb
jge
adc
push
adc
pop
jmp
pop
cwtl
xor
cmp
test
xor
add
stos
popa
outsb
push
nop
lret
xchg
das
jb
je
add
and
in
or
inc
mov
pusha
jno
adc
hlt
dec
jno
roll
sbb
test
jno
dec
movsb
lock
pop
out
xor
inc
mov
imul
cli
jno
out
sar
daa
les
cwtl
jno
test
aad
push
repz
icebp
sub
jno
sub
fcomip
mov
int
loopne
popa
out
nop
adc
nop
stc
clc
arpl
jg
cwtl
mov
scas
sub
mov
push
shrl
sbb
and
popa
aaa
es
notb
cwtl
jno
lret
cmp
in
fcomip
fimull
mov
loop
or
pop
dec
gs
and
shll
mov
ljmp
cltd
test
movsw
or
ret
push
jno
fiaddl
sti
mov
xchg
and
jne
sbb
nop
shrl
loop
mov
add
jno
sub
pop
stos
push
out
add
jg
cld
jae
mov
ficoml
repz
sbb
xor
outsl
sub
push
jno
cli
negb
jno
and
dec
mov
lods
sar
sbb
jne
idiv
jno
sub
in
in
loop
lea
pop
fnstsw
jnp
int3
add
mov
sbb
gs
sti
leave
sub
inc
fs
sysenter
pop
out
jno
shl
add
jno
xor
xchg
aam
xorb
sbb
mov
ficompl
mov
popa
pop
rorl
imul
mov
pop
sbb
das
mov
in
ja
push
or
or
or
jb
scas
jl
mov
call
jns
sbb
movsl
mov
xor
jle
xor
jne
jno
repnz
dec
pop
lods
notb
aaa
push
insl
cmpsb
push
out
dec
xchg
cmc
dec
ja
out
sub
sbb
xor
add
loop
icebp
jl
adc
xor
jno
bound
shlb
mov
sbb
inc
jnp
jno
aaa
ret
jmp
movsl
add
out
stc
sbb
pop
lods
mov
jno
pop
xor
adc
push
or
enter
inc
adc
std
jb
addr16
push
aas
pop
cmc
sti
xchg
or
pop
imul
pop
xlat
mov
add
sbb
jnp
cmp
sbb
xchg
testl
pop
je
scas
outsb
rorb
add
dec
popa
lods
mov
adc
inc
push
jno
cwtl
fdivrs
mov
xor
mov
or
xor
cwtl
aas
xchg
add
addl
mov
stc
cmp
iret
xor
test
push
ret
add
gs
xorl
or
popaw
jns
jbe
scas
fadd
mov
imul
nop
adc
neg
cmpsl
inc
push
dec
lahf
divb
shlb
mov
cli
fisubrs
push
mov
shll
ss
mov
movsl
cld
add
loope
sub
push
nop
sar
arpl
jecxz
lret
and
pop
or
cmp
mov
cli
inc
adc
cmpsl
icebp
mov
enter
sub
and
in
xor
inc
int
shr
loope
sub
push
ret
sub
insl
ds
jne
mov
je
test
fidivrl
jmp
adc
ja
lods
hlt
sbb
daa
mov
sbb
bound
gs
cmp
mov
sub
jno
lock
fmull
dec
push
or
and
in
pusha
lahf
xchg
lds
cwtl
into
push
repnz
mov
or
mov
xor
xchg
imul
lds
lcall
xchg
out
or
cli
add
icebp
gs
icebp
cmp
sbbl
xchg
mov
push
push
leave
jmp
xor
movsl
xor
cmp
xchg
clc
out
notb
ret
jbe
cli
popa
jno
aad
stos
jno
cmp
jmp
jno
adc
fstpl
sti
orl
fldcw
pop
pop
scas
rclb
mov
popa
out
push
adc
cmp
jmp
and
nop
xor
mov
lahf
shlb
pop
dec
cmp
inc
sub
jbe
das
push
mov
test
sbb
imul
insb
xchg
scas
test
adc
jno
shr
out
jno
mov
sub
dec
jge
out
shrb
cmp
xor
sbb
jno
clc
add
jno
sub
mov
jg
mov
stos
mov
cmp
aas
sub
lahf
out
es
dec
push
cwtl
jno
or
je
xor
fbstp
fs
xchg
fsubs
jno
sbbb
push
dec
jmp
vcvtsi2sdl
imul
sub
mov
mov
sbb
out
aam
mov
and
in
in
jle
add
shll
jno
mov
mov
pop
roll
aaa
pop
sarl
cmp
sbb
mov
mov
divb
dec
and
or
push
jno
mov
xchg
mov
mov
add
sub
sbb
push
jmp
test
ljmp
xchg
pop
lods
lea
aas
xchg
xchg
data16
and
clc
mov
sbb
mov
jno
fnstcw
or
sub
sahf
call
mov
xchg
cmpsb
sub
mov
loopne
jno
and
aaa
sbb
xorb
mov
sbb
std
mov
divl
test
outsb
adc
and
cs
mov
xorb
jl
mov
arpl
lods
mov
gs
gs
daa
insb
subb
add
sub
popa
dec
js
xchg
add
mov
pushf
stc
sub
insl
rolb
jge
fstps
sub
or
jge
mov
pusha
xor
cmp
jno
inc
ret
mov
add
fiaddl
in
icebp
cmp
mov
cmpsb
push
pop
rcrb
and
dec
jae
daa
stos
fwait
mov
jno
jnp
ja
shlb
iret
in
sub
inc
push
jb
popf
aas
loopne
mov
xchg
and
daa
stc
jno
or
pop
mov
add
loopne
jecxz
je
dec
les
adc
mov
mov
fnsave
test
scas
push
or
daa
jno
inc
xchg
ret
sarb
es
lods
insb
imul
out
mov
aas
jno
test
lcall
ljmp
ss
inc
loope
fs
jno
ljmp
loop
add
pop
xchg
bnd
or
jno
pop
inc
sub
testb
xor
or
idivl
inc
mov
xor
push
aad
lock
movsb
rcr
push
mov
pop
jno
iret
cld
xor
in
dec
dec
lea
imul
lret
cmpsl
jno
out
cwtl
repz
movsl
outsb
loope
mov
xor
inc
mov
lcall
sarl
cmp
out
push
loopne
mov
pop
cmpsb
or
daa
inc
es
and
insl
lret
repz
cltd
gs
or
mov
mov
adc
and
sub
in
arpl
jno
xor
iret
jno
mov
lock
mov
dec
jo
subl
ret
ja
inc
xlat
into
imul
in
stos
push
shlb
mov
dec
es
ds
cmp
sbb
gs
xlat
mov
xor
pop
or
mov
jp
inc
jno
arpl
adc
jno
stos
daa
or
fisubrl
shlb
testb
clts
and
jno
fcomps
int
nop
cmp
lds
jbe
lods
inc
leavew
imul
adc
inc
insb
jmp
iret
jb
push
cmpsb
jno
cmp
das
scas
aaa
adc
in
jmp
je
repz
sub
jmp
dec
inc
aam
xor
jns
xchg
push
push
pusha
lods
pop
mov
jns
push
add
xor
je
adc
cmp
jno
jg
repnz
lods
ljmp
mov
cltd
push
jne
or
les
loopne
aam
out
pop
es
popf
icebp
pop
jae
push
xor
jno
das
arpl
loop
push
mov
adc
push
jne
mov
lret
sub
cmp
xchg
cwtl
stos
jns
mov
stos
dec
lods
int
push
pop
das
ljmp
pop
jno
es
cmp
inc
mov
xor
pusha
mov
mov
adc
pop
inc
xor
push
pop
add
jnp
lea
imul
pop
sub
push
aaa
dec
mov
inc
add
xor
nop
inc
pop
lcall
push
sti
shll
inc
enter
repnz
imul
dec
mov
jbe
das
add
or
mov
jno
into
mov
movsb
das
jne
jno
movsl
sarl
fsts
mov
data16
ret
lds
jno
lods
add
movsb
sbb
adc
xchg
sub
mov
aaa
and
idivl
xchg
lea
andl
and
or
xor
punpcklwd
mov
adcb
sahf
add
jno
aad
sbb
cmpsb
iret
lods
xchg
inc
insb
sti
pop
jno
es
xor
jae
jno
ljmp
adc
inc
pusha
sbb
jl
and
push
push
add
cs
or
jno
jl
fwait
cmp
jno
sbb
repnz
jno
push
dec
adc
sub
jb
lcall
mov
rclb
mov
push
clc
mov
push
mov
jb
jno
pusha
push
orb
sub
push
sub
fldenv
dec
mov
jno
adc
inc
sub
jmp
xchg
inc
ret
jnp
sbb
cmpsl
ljmp
stc
dec
js
pop
nop
negl
and
add
sub
lret
lcall
sub
sahf
xor
fisttpl
push
xchg
js
aas
push
xchg
gs
push
les
inc
aam
xchg
cmp
add
mov
loope
adc
pop
jno
xchg
add
jno
fstl
and
push
call
jno
stos
dec
cmp
sarb
jno
repz
cmp
das
add
push
es
shll
pop
jno
je
ss
insl
mov
pop
shlb
jp
jno
mov
test
sbb
int
repnz
sbb
pop
jno
mov
xor
pop
cltd
xor
pop
inc
jns
mov
jno
int3
cvtps2pi
ret
testl
mov
xor
iret
mov
dec
jno
outsb
jnp
stos
shl
jno
mov
loop
scas
jbe
fidivrs
dec
jno
cmpsl
sub
fwait
pop
andb
adc
lret
popa
jno
fimull
or
inc
movsb
loope
daa
push
jno
cli
xchg
imul
dec
xor
xor
xchg
arpl
push
xlat
or
outsb
or
loop
lock
daa
jmp
mov
ja
mov
out
push
das
test
bound
jl
dec
pusha
mov
repz
subb
jno
inc
mov
push
lds
dec
aad
mov
mov
sbb
xchg
rcrl
dec
mov
dec
and
fldcw
adc
jno
addb
adc
pop
jno
inc
psubq
xchg
fidivs
ds
jns
insb
lds
push
xlat
shl
scas
mov
arpl
test
dec
std
sbb
inc
not
out
cmpsl
ja
adc
or
push
rol
js
adc
cli
lods
push
mov
int
mov
cmp
aas
add
mov
mov
bsf
jl
xchg
or
jle
mov
icebp
xor
push
pop
jbe
imul
leave
mov
jno
push
adc
push
jmp
dec
push
lock
movsl
jno
ja
cmp
jno
sub
cmp
xchg
jecxz
out
add
and
inc
jno
pop
das
dec
int3
in
dec
dec
jne
jno
sub
stos
inc
jno
pushf
cmp
loop
jno
mov
sub
jno
add
test
push
adc
adc
pop
clc
adc
push
jecxz
shrl
mov
jno
sbb
jg
xlat
scas
movsl
push
jne
loop
cmc
adc
popa
das
movsb
std
ljmp
dec
es
sbb
je
lahf
push
fists
aam
jmp
mov
out
and
aas
cmpsl
mov
mov
scas
cmp
aaa
jne
lret
pop
movsl
ljmp
pushf
out
gs
jno
into
leave
and
lock
jle
adc
rcll
mov
pop
mov
push
jp
push
divl
pop
push
jns
cmp
mov
or
sub
inc
pop
xchg
mov
test
leave
icebp
pop
push
pop
mov
mov
jb
sbb
and
lods
scas
divl
sbb
mov
out
aaa
ficomps
mov
int
mov
mov
call
sbb
mov
push
push
xor
popa
cmp
jno
adc
cmpsb
jno
add
out
jno
jl
pop
mov
dec
test
jno
inc
in
sub
jle
push
jmp
ja
in
pop
or
mov
scas
cs
outsb
sbb
popa
dec
add
and
ljmp
xorb
icebp
lods
xchg
in
add
jne
jno
rcl
popf
xchg
lods
fsts
daa
add
out
div
dec
nop
dec
jbe
subb
cld
ret
jl
mov
data16
aad
fsts
out
mov
xchg
repz
lds
sbb
adc
xchg
mov
cld
jno
or
add
pop
cli
add
or
pop
sbb
jno
rolb
jno
dec
lret
mov
jno
lock
hlt
mov
sub
movsl
xchg
stos
jge
jno
cld
add
dec
mov
push
stc
jno
jecxz
jp
dec
pop
mov
mov
xchg
repz
push
daa
push
xchg
stos
fwait
pop
scas
inc
mov
pop
cmp
jno
sahf
lret
in
inc
pusha
adc
dec
jno
and
jp
xchg
in
mov
add
or
in
and
or
pop
in
mov
jno
dec
ret
sbb
test
cld
jne
sbb
nop
repnz
xlat
call
xor
int
rcrl
xchg
sahf
sub
xor
jb
jno
pop
push
test
rcll
cmc
xor
push
mov
das
add
add
dec
repz
inc
mov
out
sbb
dec
insl
xchg
jno
lcall
jno
bound
dec
arpl
nop
es
xlat
push
xchg
scas
ss
jno
mov
pop
loope
adc
jno
dec
lock
mov
jno
mov
rorl
xchg
mov
lock
pop
call
jns
test
js
imul
push
test
sub
xor
out
fucomi
cmpsb
push
xor
or
xchg
icebp
mov
xor
and
lds
jno
mov
stos
in
or
inc
data16
mov
and
push
shlb
in
out
sbb
mov
adc
or
sbb
cmc
push
push
imul
push
xchg
jbe
jno
xlat
in
jne
jo
jno
or
in
lea
cmp
mov
sbb
test
adc
hlt
divb
mov
fadd
jno
decl
and
sub
cmp
daa
xchg
inc
ja
jbe
inc
mov
leave
enter
icebp
push
adc
setb
add
rcrl
xor
jno
les
imul
sbb
jno
sbb
cmp
dec
inc
jmp
pop
jno
xor
adc
xchg
js
pop
pusha
fwait
test
fisttpl
jno
movsb
outsl
push
out
adc
stos
jge
inc
xor
sbb
adc
xchg
mov
leave
jbe
mov
cmp
adc
inc
icebp
rep
jns
pop
out
push
sub
adc
push
mov
in
int
cmc
addr16
adc
clc
std
xchg
push
jae
mov
xchg
mov
int3
xchg
insb
jno
and
stos
xchg
mov
mov
std
xchg
enter
daa
aas
adc
xor
xchg
add
cmc
mov
mov
icebp
loop
xchg
mov
cltd
mov
movsb
shrl
jno
enter
movsl
jno
pop
repz
imul
pop
inc
pop
pop
cltd
and
test
jle
js
adc
mov
jne
xor
jno
pop
and
add
movsb
cltd
shlb
jns
push
jno
jae
mov
imul
call
mov
inc
icebp
stc
daa
jno
push
in
jb
cmp
jno
pushf
xchg
add
movsb
jno
ret
or
subb
data16
nop
in
dec
jns
bound
jbe
jno
jge
shl
popf
fwait
jno
mov
mov
jno
sti
push
orl
xor
icebp
popa
sahf
push
inc
mov
pop
aad
inc
push
cmpsb
pop
into
jno
sbb
in
aam
and
xchg
mov
adc
addr16
jae
ljmp
xrelease
add
and
cmpsb
nop
cmp
xchg
push
sarb
or
jg
add
push
sbb
out
nop
loop
lods
sub
lret
sbb
outsb
testb
sub
enter
xor
scas
cmpsb
dec
sub
add
jno
push
sbbb
data16
xor
jle
xor
lods
jno
sub
je
mov
push
and
mov
aad
xchg
pop
fadd
sub
cmp
in
adc
add
outsb
fdivr
test
lahf
lret
xchg
adc
jo
mov
mov
or
inc
add
push
and
push
arpl
push
aad
repz
shll
iret
xchg
cltd
xchg
call
push
aam
mov
cmp
stc
xor
jne
mov
jno
sbb
jp
jno
push
ffree
pop
mov
aas
jg
jmp
mov
cltd
loopne
cmp
in
das
pop
xchg
or
outsl
pop
add
sbb
pop
scas
push
add
push
jns
lret
pop
jno
cmc
xorl
jge
mov
jnp
iret
xor
jno
test
add
add
repnz
pop
call
push
push
inc
cltd
sbb
movsl
jns
insl
fdivrs
aad
insb
jl
push
js
push
notl
inc
aaa
push
ret
xor
scas
jge
dec
jno
outsb
lods
lret
stos
rcll
cmpsl
xchg
das
ja
add
sbb
or
sub
xchg
arpl
aad
scas
flds
sub
jno
inc
outsl
ret
cs
mov
xchg
xor
pushf
shrl
sbb
or
push
out
insl
nop
or
jecxz
aaa
xchg
cld
popf
lea
neg
sub
enter
mov
xor
jmp
pushf
sbb
jne
xchg
and
sahf
xor
dec
addr16
inc
lds
dec
push
dec
lock
and
pop
lahf
add
popa
ja
mov
xor
pop
rcrb
cmc
cltd
std
push
inc
sbb
jno
js,pt
out
nop
xchg
jno
insb
pop
dec
xlat
sbb
mov
or
cli
fwait
movsl
ds
lods
icebp
cmp
in
int
xadd
popa
mov
add
aam
dec
jno,pt
push
bnd
ljmp
data16
mov
xchg
outsl
or
jbe
xorl
stos
fiadds
push
arpl
sub
loope
mov
insl
icebp
xor
sbbl
nop
shlb
jne
mov
sbb
je
jmp
inc
mov
and
test
cwtl
xchg
mov
mov
fildl
shrb
popa
dec
cltd
shr
jno
cmpsb
sbb
push
hlt
inc
das
jno
xor
je
jno
sbb
call
sar
cmp
dec
jae
repz
mov
outsb
pop
lret
sub
adc
imul
push
pop
lods
sbb
xchg
stc
scas
clc
jno
sub
push
mov
sub
arpl
into
xchg
mov
scas
inc
mov
movsl
insl
push
std
and
and
nop
fidivrs
cwtl
test
ja
inc
loopne
jno
mov
adc
cmp
jno
fldenv
pop
push
mov
inc
int
jo
xchg
jno
outsl
andb
jno
jle
xchg
inc
imul
rcrl
jle
ss
rol
jno
push
mov
out
pop
pop
lods
push
and
xchg
or
jbe
xor
les
jno
jns
xchg
js
mov
sbb
or
icebp
xchg
popa
enter
mov
cmp
xchg
push
pushf
mov
xchg
jno
dec
fstps
shrb
out
iret
negb
jno
xchg
dec
lcall
inc
lea
nop
mov
sub
insl
sti
out
enter
pop
jno
ja
mov
data16
inc
nop
aad
mov
in
sbb
jno
jg
and
or
push
pop
mov
sbb
arpl
jno
fidivrs
push
sbb
ja
loope
mov
shll
cmp
mov
dec
xchg
rolb
jno
das
adc
ss
and
adc
adc
push
mov
pop
nop
xchg
xchg
pushf
fcmovbe
jno
lcall
push
nop
adc
out
cmp
lods
dec
mov
in
mov
xorb
data16
xchg
jno
repz
pop
ret
add
add
sbb
dec
xor
mov
es
int
xor
aad
nop
dec
popa
popf
jne
ss
jno
inc
dec
pop
inc
push
loop
jno
movsb
testb
cmp
fnsave
call
addr16
jb
jno
aas
ja
xchg
xchg
mov
jno
gs
test
mov
jno
mov
inc
adc
hlt
dec
pop
jns
cmp
nop
jno
xchg
pop
jp
data16
fucom
pushf
jmp
xchg
mov
sub
call
inc
mov
mov
mov
xchg
jno
push
fisubrs
sbb
jno
pop
mov
jno
or
pop
jno
ss
xor
jecxz
mov
iret
leave
inc
imul
fistl
mov
mov
push
pop
xor
out
cltd
and
ljmp
jae
stc
mov
sbb
xchg
xchg
pop
insl
notl
call
jmp
add
outsb
push
sti
clc
jno
dec
dec
mull
pop
inc
aaa
or
stos
adc
icebp
int3
push
shl
sub
push
hlt
jns
push
jno
mov
push
cs
jge
sub
cmc
in
in
shrl
jecxz
outsb
adc
test
ret
adcl
call
addr16
sub
loopne
mov
jl
insl
pop
sbb
test
rcrb
jmp
loop
ja
shrl
or
cmp
gs
sub
pop
jno
lds
jno
or
adc
jno
dec
hlt
cmp
and
or
lahf
ss
ja
lock
adc
jno
sti
js
and
push
inc
jno
lea
nop
and
jns
xlat
sub
mov
jno
xor
xor
xor
mov
jge
cmp
popa
je
popa
loope
cmp
lods
xor
dec
divb
mov
or
lea
mov
cmp
ffree
xchg
xchg
out
jbe
xchg
sbb
scas
stos
js
add
cmc
in
aaa
push
push
push
sub
pop
xor
mov
pusha
dec
insl
shl
fs
mov
adc
adc
jno
jmp
fchs
dec
xor
insl
xchg
xlat
push
xchg
cmp
xchg
jbe
movsb
xsaveopt
bnd
xchg
cmp
testl
lahf
and
jno
data16
pushf
sbb
cmp
mov
lock
scas
ja
push
repz
arpl
test
sub
jle
xchg
xchg
jno
push
mov
int
repnz
cwtl
mov
mov
cmp
push
dec
mov
sub
cmp
xchg
out
hlt
jg
push
cmpsb
push
jno
ljmp
cmp
std
lret
outsb
dec
jno
imul
push
cwtl
jno
jne
je
cmc
jmp
jno
imul
enter
shll
addr16
jno
mov
fs
sub
add
enter
movsl
scas
int
dec
jno
xor
outsb
inc
xchg
mov
fs
cld
out
shr
call
mov
pop
jo
mov
jno
cmpsl
loopne
popa
sbb
mov
loope
fidivrl
pop
push
adc
pop
adc
icebp
adc
dec
or
mov
rcrl
call
mov
xchg
test
mov
aad
movsl
addl
mov
scas
popa
and
jge
mov
stc
int3
fisttpl
mov
sbb
bound
adc
and
or
mov
aad
add
xchg
popa
cmpsb
dec
movsl
sbb
xor
loopne
insl
cmp
sbb
mov
scas
jno
xor
and
mov
int3
mov
mov
das
push
adc
and
push
lret
mov
test
xlat
jl
adc
add
movsl
fsubl
mov
sbb
insl
iret
jno
push
shl
sub
nop
inc
xchg
push
imul
jno
jle
lods
mov
sub
out
fidivs
jno
sub
imul
xchg
adc
xlat
ret
lock
mov
mov
pop
stc
imul
dec
and
sar
jno
jnp
jb
ret
xor
add
test
psubusw
push
ret
and
jbe
test
push
sub
or
pop
cmovle
pop
outsl
inc
decb
mov
mov
xchg
jno
xchg
gs
aam
cmpsl
adc
push
add
jne
cmp
dec
jbe
mov
cmp
out
out
sub
scas
cmp
mov
adc
jp
insb
inc
lret
xchg
cmp
sub
fdivl
dec
outsl
jge
cmpsl
scas
jno
add
inc
adc
add
jg
jno
inc
inc
ss
xchg
xchg
mov
adc
and
iret
jno
push
sahf
add
push
aas
jmp
pop
sub
test
xor
cltd
push
ljmp
fadds
adc
lock
mov
add
outsb
std
jns
rcll
pop
jecxz
jnp
jne
jno
test
hlt
lret
mov
jmp
cmpsb
add
add
or
adc
push
loope
sbb
inc
mov
adc
mov
js
jg
ret
repz
insb
mov
xchg
mov
call
dec
sbb
daa
jge
setge
jno
enter
lret
fsubrl
inc
push
test
ljmp
xchg
push
shrl
jno
ror
mov
add
dec
lods
mov
imul
push
int
mov
jno
xchg
and
dec
mov
ja
mov
mov
nop
or
sbb
ja
and
inc
jno
mov
nop
jno
mov
xlat
pop
jno
enter
xchg
cli
inc
inc
sub
xchg
idivl
jno,pt
std
addl
cltd
and
inc
hlt
sbb
push
daa
or
jno
adc
sarb
pop
fwait
aas
xchg
popa
outsl
push
jbe
in
leave
sub
stos
push
in
scas
pmuludq
jns
cmp
push
push
orl
add
lcall
sbb
or
dec
adc
pop
adc
cs
jno
dec
xchg
divl
push
cwtl
fstpt
sbb
adc
test
sahf
inc
cwtl
and
das
fbld
fsts
jg
les
jno
or
or
add
repz
ja
and
xchg
mov
sub
jno
mov
fidivs
inc
clc
fincstp
mov
sub
mulb
or
popa
sti
adc
xor
stos
push
cmp
mov
imul
jno
xchg
adc
clc
lods
cwtl
divb
adc
sbb
sbb
test
push
push
mov
and
push
jecxz
imul
jns
xor
jno
stos
inc
mov
imul
mov
push
push
jecxz
sbb
jno
mov
mov
push
or
nop
out
or
div
cmp
mov
je
jae
push
cli
cmpsb
fcmovb
arpl
scas
loop
inc
jno
jp
icebp
leave
inc
jge
pop
repz
jne
add
mov
ret
jne
lods
cs
nop
pop
testb
fsubr
inc
aaa
jno
imul
lret
jge
inc
cmpsb
jne
cli
fwait
mov
sbb
arpl
sti
sub
jno
inc
push
pushaw
xor
mov
jno
jb
notb
cmpsb
cmc
xor
sbb
jge
adc
cmp
push
into
in
inc
adc
addr16
enter
jns
mov
jp
scas
sbb
lock
in
adc
xor
ljmp
adc
add
out
inc
jbe
mov
fsubrs
das
jb
sbb
ljmp
jno
sub
scas
inc
xchg
jge
adc
icebp
adc
leave
push
lds
jmp
and
popa
loopne
dec
ljmp
add
and
arpl
push
push
pop
adc
lods
hlt
inc
cmp
jno
mov
sbb
notl
jnp
stos
js
sahf
dec
xchg
int
xlat
jns
add
jno
arpl
loop
and
out
mov
cwtl
lret
sub
mov
cmpsl
add
jno
mov
cmp
aas
mov
in
xor
outsl
jno
and
insl
and
add
cmp
dec
xchg
icebp
ljmp
stos
lret
mov
jno
cmp
push
jno
rcrl
call
inc
in
mov
jno
cmp
in
test
add
jno
idivl
cli
hlt
dec
jno
stos
and
pop
xor
cmpsl
jno
out
fimuls
rclb
mov
test
std
add
repnz
sti
pop
pop
ljmp
cltd
jl
sarb
lock
mov
push
es
lods
pushf
inc
movsl
push
shll
add
mov
xchg
sahf
cmp
jno
rcrl
pop
xchg
cmp
jno
dec
pop
icebp
adc
dec
repnz
xorb
lret
mov
dec
or
ret
pop
jno
dec
inc
ficomps
stc
pusha
mov
push
inc
js
jno
arpl
pop
cmpsb
inc
mov
or
add
pop
insl
xchg
jmp
or
adc
popf
call
scas
and
mov
int
adc
add
push
out
jno
and
jecxz
mov
push
mov
insl
ds
jno
mov
lock
adc
dec
daa
popa
sub
xor
push
popa
ja
cmp
into
xor
mov
js
ja
in
cmc
jns
insl
stc
inc
jp
mov
jge
out
sbb
add
xchg
mov
in
ds
or
jg
pop
inc
mov
jne
xorl
rol
shlb
mov
push
inc
cmp
call
mov
xchg
add
mov
in
lds
pop
pop
jno
push
ds
stos
movsl
loopne,pn
ud2
ja
in
nop
fcoms
push
jge
dec
xor
out
fldenv
test
lods
mov
das
adc
mov
jl
add
fdivs
xchg
sbb
sbb
nop
pusha
push
popf
jo
mov
movsb
in
jno
adc
cmp
and
mov
shlb
sti
stc
dec
jne
jg
loope
inc
call
jno
adc
pop
jno
pop
and
popa
sub
in
jno
xchg
xlat
sub
les
jno
movsl
or
jno
icebp
cld
clc
js
in
push
jno
jp
sub
push
popf
jg
scas
cmp
jno
nop
cmp
add
or
mov
dec
jg
lods
repz
cwtl
pop
pop
icebp
je
dec
jno
fbstp
push
mov
adc
add
sarb
mov
mov
bound
imul
jno
movsl
add
mov
cld
loope
shl
xor
push
or
pop
lea
adc
shll
shll
mov
lret
xchg
movsb
jno
cmp
hlt
clc
jg
jno
push
leave
ss
mov
sbb
in
icebp
jno
sbb
push
popa
push
cmpsl
cmp
cmpsb
addr16
adc
xchg
sub
ret
cwtl
bound
xchg
sbb
add
adc
sub
out
xor
movsb
push
int3
sbb
mov
jne
rorb
dec
inc
insl
jno
xor
jl
sahf
shr
leave
pop
mov
nop
mov
in
sbb
test
sbb
out
pop
pop
rcll
pop
xlat
js
out
insb
jno
push
mov
jno
mov
pop
xor
mov
adc
sub
jno
in
jl
dec
jno
jmp
inc
mov
sbb
mov
adc
lods
aas
xchg
push
std
adc
clc
dec
loop
popf
aad
popf
repz
push
jle
aas
out
dec
add
fisttpll
mov
sub
iret
sbb
jno
or
jno
mov
xorb
out
pop
ds
loope
jno
and
sbb
stos
js
movsb
lods
lret
cli
shll
lret
mov
stc
nop
pop
adc
add
jne
push
cmpsl
push
lret
dec
lcall
adc
out
cwtl
xchg
jae
pop
mov
aas
dec
sbb
jno
gs
mov
add
add
jg
pop
dec
mov
push
add
xchg
jne
jp
and
fstl
adc
imul
cwtl
call
jno
push
sarl
arpl
cli
xchg
jno
push
mov
jae
shrd
sbb
or
jge
nop
in
jno
imul
popa
dec
std
iret
nop
mov
jnp
add
repnz
vzeroupper
jns
xor
mov
ret
jge
dec
add
mov
es
dec
jno
sub
not
mov
in
int
aaa
jno
leave
cmp
outsb
das
cld
adc
shrl
rorb
xchg
dec
cmp
jns
inc
pop
fwait
pop
loop
sbb
xor
repnz
or
dec
clc
adc
jno
andl
mov
inc
mov
jnp
mov
jno
sarl
movups
shrb
out
adc
aaa
pop
mov
xor
insl
and
loop
fidivl
or
xchg
jmp
sbb
pop
popa
or
add
int
and
pop
adc
mov
inc
out
push
sbb
dec
mov
dec
inc
icebp
push
and
int3
ret
je
ja
sbb
jmp
mov
push
jno
cmc
add
mov
adc
nop
pop
sbb
insb
mov
lock
test
call
or
cli
push
pop
jne
mov
imul
popa
xlat
xchg
imul
pushl
push
pop
mov
xchg
add
jbe
push
leave
pusha
and
jno
pop
call
addr16
ss
jns
xchg
orl
imul
rorb
push
pushl
les
xor
xor
pop
mov
jno
mov
cmpsl
mov
popf
cmp
jns
lret
ret
fidivl
or
or
repnz
les
xor
inc
push
int3
adc
lods
jl
repz
pop
mov
adc
js
push
jno
inc
int
jecxz
mov
adc
call
pop
jno
mov
and
jno
addl
jecxz
jns
xor
cmp
cs
lods
add
stos
jno
dec
shrb
cmp
lret
cwtl
aaa
fwait
jno
leave
movsl
movsb
filds
xchg
jno
xchg
dec
adc
loop
mov
dec
in
jmp
mov
loop
ror
pop
stos
lods
jno
mov
inc
push
push
add
jno
adc
ds
std
jecxz
jno
scas
xor
and
jle
inc
shll
loop
inc
pop
add
in
int
adc
fsubrl
mov
jae
lahf
inc
ret
popa
cwtl
mov
sbb
and
pop
push
fistpll
mov
aad
cmpl
out
push
mov
insl
jno
sbb
lahf
sub
ja
pop
hlt
mov
nop
lea
adc
jge
cltd
shlb
mov
sbb
sti
jne
jno
inc
mov
adc
sahf
jmp
imul
jno
add
cmpsb
and
cwtl
jno
loopne
incl
in
lock
xor
xor
addr16
adc
scas
mov
push
jno
sbb
daa
lods
in
stos
jno
push
sub
ljmp
das
hlt
mov
addr16
pop
push
mov
outsb
mov
call
and
es
adc
jno
jge
rorb
scas
loop
or
out
out
cmpsb
ja
dec
jno
call
jge
test
mov
or
mov
jno
jb
hlt
popf
adc
inc
in
dec
jno
push
test
xchg
cmpsl
jno
jnp
repz
int3
push
and
pop
jo
shll
stc
test
and
dec
test
cltd
dec
xchg
ss
testb
add
popa
jno
aas
mov
mov
jno
call
gs
mov
mov
add
cmp
inc
dec
int
sbb
testb
jno
arpl
outsb
push
push
loop
push
dec
mov
xchg
inc
aaa
mov
jns
xchg
lods
sbb
outsl
ss
cltd
adc
add
push
mov
pushl
adc
mov
jmp
mov
outsl
xchg
fs
xchg
jg
clc
xor
jno
inc
add
bnd
mov
xor
mov
insb
jns
jno
fsubr
repz
push
sbb
divl
inc
jno
cmpsl
inc
xor
cld
jno
icebp
cmp
xlat
add
nop
rcl
lock
fnsave
test
dec
push
jno
sub
cmp
push
lret
adc
or
int3
loope
jno
mov
sub
dec
pop
popf
jno
jne
sub
sub
rcrl
xor
loopne
lcall
scas
push
fs
push
mov
dec
lock
jno
fmul
cltd
jb
repnz
jno
or
insb
jmp
xor
push
sub
push
and
xchg
jno
mov
mov
nop
cmp
sub
xor
popa
jns
fwait
stos
jno
lock
or
and
lahf
cmpsb
repz
mov
into
bound
dec
mov
or
jns
gs
xor
jno
jecxz
mov
nop
jno
sar
insb
cmp
mov
mov
clc
and
psubd
das
test
pop
jno
subl
scas
stc
mov
push
xchg
hlt
pusha
lcall
and
sub
cmp
int
js
jno
pop
jbe
mov
leave
jno
lods
out
stos
hlt
xor
aaa
pop
in
inc
push
lea
adcl
adc
movsb
pop
shlb
pop
mov
popa
cmp
jmp
dec
dec
in
xor
jno
fistl
jmp
je
movsb
sub
js
mov
jb
inc
push
inc
sti
fstl
mov
inc
jno
cltd
inc
jno
movzwl
test
jo
adc
scas
rorb
jno
fwait
in
pop
push
inc
lcall
ficomps
mov
xor
fprem
mov
mov
out
iret
pop
roll
mov
dec
stos
pop
lds
popa
cmp
std
push
jno
bound
in
es
jno
xor
jp
mov
fistpll
gs
adc
dec
jecxz
dec
pop
jno
fisubs
push
nop
mov
jg
and
pop
xchg
mov
sub
dec
imul
shll
push
cli
cmpb
lret
jp
xor
call
jl
sbbl
lcall
jae
jno
fidivl
push
push
mov
jno
dec
out
mov
stos
int3
push
cmp
mov
inc
sbb
imul
mov
ficoms
sub
sbb
popa
jge
and
dec
loop
sub
cmp
aas
mov
bound
adc
jno
shlb
outsb
jno
inc
sti
add
mov
cmpsl
mov
ds
add
jb
jmp
in
cmp
int3
clc
fbstp
mov
data16
jno
push
sti
and
sub
mov
jb
fimuls
jno
repz
out
sbb
lods
popf
push
in
xor
push
pop
movsl
push
nop
cs
pop
jns
popa
xchg
jle
xchg
jno
mov
xor
imul
jno
js
out
pop
push
push
nop
cmpsb
jne
leave
sbb
xchg
rcrl
popa
mov
aaa
cmp
jns
fcomi
scas
out
dec
mov
nop
sub
mov
xchg
and
sub
pop
jb
loopne
sub
jae
xor
xchg
xchg
jg
xor
jno
inc
ret
cmpsl
mov
adc
aas
stc
jb
into
jno
loopne
and
test
pushl
xor
lret
xchg
xor
pop
add
cmp
mov
addr16
sbb
push
xchg
inc
imul
jno
mov
hlt
push
pop
jecxz
lods
call
sar
xchg
fdivs
adc
cltd
jp
mov
shll
outsl
repz
cmp
fiadds
ja
jno
mov
inc
mov
fidivl
rcll
mov
mov
in
mov
xchg
pop
nop
push
xorl
mov
loop
lds
push
mov
mov
pop
scas
sbb
xor
inc
cltd
pop
popa
shrb
fdivs
push
cmp
push
jno
call
stc
push
adc
daa
inc
mov
imul
lds
repz
sbb
sar
sbb
jp
cmp
inc
mov
test
dec
mov
jno
scas
pop
push
or
out
out
cs
push
mov
js
lret
dec
mov
mul
sub
jae
jno
out
pop
je
rclb
cmp
pop
js
insl
jl
dec
fstp
out
stos
test
or
mov
pop
jno
add
rorb
and
scas
or
mov
popa
xchg
bound
mov
dec
icebp
mov
mov
dec
xchg
leave
sahf
and
jno
arpl
sbb
jne
lods
jno
mov
jno
fstl
stos
jno
flds
xor
cmp
popa
mov
or
sub
or
inc
mov
push
imul
jno
test
cmp
fidivrs
fimull
scas
jl
push
pop
call
test
scas
mov
nop
jns
mov
cs
repnz
cmp
jae
jnp
scas
fsubr
es
push
fs
imul
jno
mov
mov
adc
jmp
jb
daa
xor
bound
js
decl
jnp
and
inc
test
xchg
inc
out
sbb
mov
arpl
push
inc
jae
jbe
test
leave
mov
or
adc
aaa
adc
push
push
and
sub
test
les
jno
sahf
push
int
imul
cltd
push
iret
adc
add
push
jns
push
jno
mov
faddl
jg
jns
arpl
pop
dec
adc
pop
jmp
nop
dec
sbb
js
cwtl
pop
cmpsl
popa
ja
test
xchg
jno
mov
sub
adc
in
orb
and
and
inc
ret
mov
in
xchg
cld
mov
xor
push
mov
jne
cmp
inc
cmp
ds
sbb
lcall
imul
pop
pop
lods
js
in
or
adc
punpcklwd
mov
jae,pn
movsl
std
nop
ficompl
inc
mov
mov
push
pop
mov
stos
cmp
insl
pop
pushf
je
jae
push
loope
inc
inc
lods
cmpb
ss
jne
mov
jno
inc
ljmp
lea
inc
jge
hlt
push
jno
ja
sarl
cwtl
subl
adc
mov
out
xor
ret
cmp
daa
js
pop
jno
cmpsb
je
aaa
sbb
mov
std
pop
aas
jb
xor
aam
popa
addr16
bound
fisubs
stc
xor
sbb
jnp
in
lret
jno
lds
testb
jno
subl
and
scas
inc
lods
leave
mov
pop
xor
jbe
mov
push
push
cmc
mov
jp
pop
decb
bound
int3
pop
jno
out
jmp
mov
test
push
jno
xorb
data16
or
dec
mov
mov
pop
mov
hlt
inc
jno
dec
arpl
jno
lods
bound
adc
ret
incb
add
and
pop
push
jmp
repz
fidivl
test
mov
popf
lret
mov
inc
mov
fdivrl
mov
insb
add
jno
test
gs
jg
aam
icebp
jns
jno
jbe
add
dec
cmp
jae
jno
dec
or
scas
icebp
xchg
fstpt
out
fnsave
jae
scas
inc
add
jno
push
shr
fdivl
inc
jno
fsubrs
xchg
in
xchg
jg
test
decb
out
leave
loopne
add
push
shlb
in
xor
sbb
jbe
jg
inc
jno
push
bound
jno
adc
mov
dec
pop
shrb
jno
clc
arpl
cltd
in
inc
jbe
jns
jnp
fsubrs
or
addl
push
bound
push
jne
mov
mov
mov
mov
shrb
jno
or
or
xor
push
lods
mov
fdivr
jno
inc
sub
arpl
jp
adc
popa
mov
xchg
push
or
push
clc
ret
inc
push
and
sub
call
imul
sarb
cwtl
jno
push
stos
jae
icebp
cmpsl
sub
sahf
sub
or
or
shll
pop
pushf
std
test
or
pop
dec
push
arpl
push
and
sub
mov
jno
movsb
bound
jno
xorb
jno
lock
push
cmc
cmpsl
and
xchg
ss
into
xor
mov
jb
mov
pushl
rdmsr
popa
out
add
fisttpl
jno
lock
pop
int
xlat
popa
std
mov
mov
and
cli
stc
lds
jno
inc
cmp
xchg
and
lods
mov
inc
cmc
mov
leave
jno
pop
cmpsl
mov
jno
daa
ficoms
jbe
cld
imul
lock
and
add
jae
inc
adc
loope
xorl
imul
sarb
cmp
in
jnp
cmp
out
cwtl
push
or
xor
jle
pusha
orb
add
jns
out
mov
ds
sbb
jns
push
sbb
ret
pop
mov
sub
xor
inc
psllq
jno
int
pop
mov
sbb
inc
mov
call
jno
jge
fwait
clc
repnz
ficoml
push
push
rcll
or
xchg
lods
sub
jmp
lcall
mov
std
mov
repnz
dec
xor
cwtl
xchg
bts
mov
jno
pop
adc
fwait
jno
jns
pop
pop
xor
mov
in
jle
repnz
xchg
gs
lcall
push
mov
add
stc
xchg
xor
mov
jno
inc
mov
jle
and
jno
mov
pop
mov
mov
xor
leave
ss
or
rcll
mov
popa
jae
xor
fs
jno
adc
mov
loop
push
cmc
mov
jno
outsb
orb
adc
jno
lods
cmpsl
mov
mov
adc
xor
inc
fcomi
inc
insl
out
jns
bound
xchg
arpl
test
ja
mov
jno
xchg
subl
cmp
dec
jnp
inc
loope
rcll
sahf
push
daa
xor
jne
aad
adc
jmp
sbb
pushf
js
pop
mov
loopne
rep
pop
pop
je
in
xor
jns
call
push
lcall
pushf
mov
push
sbb
rorb
sub
or
xorb
jl
mov
into
mov
push
sbb
xor
scas
mov
xchg
sbb
jne
xor
mov
cmp
push
out
stc
inc
out
jns
push
dec
mov
adc
testl
cmp
jno
inc
fnstenv
pop
mov
pop
mov
jno
sbb
mov
and
xchg
mov
out
jnp
jno
jae
and
lods
add
stc
cltd
mov
sub
ret
and
push
test
cmpsl
lods
jo
mov
lret
fnstcw
les
adc
push
inc
aas
imul
popa
aam
lret
jae
mov
sub
cmp
jmp
push
sub
cmp
lods
pop
dec
jno
push
mov
fildll
pushf
scas
jmp
jo
mov
xor
movsl
cmp
insl
sub
and
sub
jno
push
ja
mov
popa
test
in
fistpll
in
pop
fiaddl
cli
rorb
popa
outsl
dec
iret
sub
in
test
or
add
repnz
sub
nop
pop
xor
and
jns
adc
mov
pop
jb
jl
ret
push
jno
jp
pop
pop
adc
jno
jb
push
sbb
or
shll
pop
jno
jmp
daa
push
jno
adc
dec
lods
push
sbb
fwait
xchg
add
testl
and
fsubrl
jno
cmp
pop
inc
js
shlb
cmp
jnp
xchg
and
mov
jno
out
cmpsb
xchg
idivb
dec
adc
xchg
jno
adc
add
sbb
jecxz
fsubl
in
jno
or
subb
push
cld
mov
lds
mov
aad
ffreep
lcall
xchg
or
mov
inc
dec
les
inc
jp
add
movsl
inc
into
addr16
arpl
jno
add
cmc
mov
jge
ds
nop
xchg
push
jno
insb
or
dec
xlat
adc
inc
fnstcw
dec
cli
nop
inc
and
nop
and
jno
adc
popa
adc
out
rcrb
adc
push
jecxz
jmp
aam
lea
rcr
xchg
xchg
insl
xchg
jo
cli
jbe
out
xchg
leave
in
pop
imul
in
mov
call
mov
xor
sbbl
xor
lds
aas
lea
dec
repnz
jmp
dec
mov
mov
fstpt
mov
mov
movsb
sbb
and
ret
push
out
inc
imul
inc
pop
jno
mov
test
hlt
cltd
push
vorps
push
cmpsl
imul
jb
xor
rorl
add
jo
hlt
push
dec
push
cmpl
clc
xchg
aas
mov
je
sub
adc
call
add
mov
js
daa
push
xor
mov
xchg
jno
xor
or
es
mov
je
ret
mov
shlb
sarb
jno
xor
xor
dec
push
pop
mov
dec
in
rorb
jne
popa
enter
adc
xchg
jno
cs
insb
imul
xor
jno
mov
rcr
jno
aam
lds
push
xchg
in
dec
pop
adc
repz
mov
inc
icebp
jae
cmp
shrb
cwtl
adc
std
mov
xor
push
sbb
cwtl
cmp
inc
mov
dec
push
sub
jno
lods
jmp
lock
jno
notb
fmull
jno
aaa
pop
nop
dec
lea
or
push
int3
mov
rcrb
mov
roll
fisubs
jno
cmp
xor
add
and
ret
cmp
leave
sbb
jmp
std
pop
jne
in
jg
add
push
sbb
xorl
fidivs
es
test
sbb
lods
test
shrl
nop
push
mov
mov
subb
xor
jno
push
cmp
adc
jns
ljmp
sub
sub
out
xchg
mov
shlb
jne
lods
push
pop
or
jno
inc
ret
negl
outsb
sub
fs
dec
data16
das
fnstenv
mov
popa
mov
gs
hlt
jno
leave
adc
and
xchg
scas
mov
jnp
xorb
dec
lods
mov
lea
sti
add
mov
xor
xchg
pop
adc
mov
test
daa
xor
in
cld
mov
add
jle
add
jno
lods
mov
aas
jno
pop
push
xchg
mov
imul
cmpl
insl
xor
push
jns
jecxz
popa
hlt
dec
addr16
cmp
aam
icebp
xchg
jp
pop
aas
insb
std
scas
nop
xchg
cmc
mov
call
inc
imul
dec
outsl
test
imul
cmpsl
jno
mov
pop
out
jno
test
mov
jno
push
fs
dec
clc
iret
pop
scas
adc
cltd
add
jbe
jno
pop
add
pop
xor
jno
cltd
and
mov
cs
mov
jp
mov
idiv
sti
lods
push
adc
jge
xor
call
jno
outsb
pop
and
roll
sbb
adc
jno
cld
mov
and
sub
stos
adc
arpl
lret
rorl
out
sbb
popa
inc
popf
dec
shrb
movsb
mov
lods
jle
ror
insl
sub
mov
jns
xchg
out
push
adc
aaa
daa
clc
leave
mov
lds
inc
js
fdivl
lea
lods
shll
jno
fwait
mov
pop
and
aaa
mov
jno
bound
add
cmc
mov
cwtl
xchg
or
dec
std
lock
and
in
lahf
jno
dec
popf
ja
sbb
das
out
stos
mov
cwtl
sbb
out
or
xchg
inc
imul
mov
mov
adc
inc
mov
pusha
aas
jae
loope
jno
daa
jo
inc
push
mov
lret
lret
test
popa
out
jno
sub
ds
push
push
inc
incl
push
imul
divl
pop
mov
sbb
mov
iret
jno
adc
pop
mov
jns
mov
push
sub
shr
cltd
mov
jg
cmpsl
adc
orb
popa
out
dec
rol
add
xchg
fdivs
pusha
rcll
arpl
cmc
jno
out
in
mov
jno
das
daa
test
test
push
les
jb
mov
insb
sub
push
in
jnp
lock
sub
popf
add
je
popa
adc
push
dec
push
adc
pushf
xor
xor
pop
push
addr16
fsubrl
jno
or
jg
sbb
mov
stos
leave
fisubl
push
adc
pop
popa
dec
fbld
into
jmp
jne
mov
je
arpl
in
jno
mov
fldenv
fucom
enter
fwait
daa
mov
push
incb
dec
arpl
movsl
nop
outsl
enter
gs
push
jno
jp
aas
int3
aam
jno
pop
pop
and
jae
lcall
cmp
dec
jno
mov
push
push
pop
popa
lea
in
idivb
pop
push
jne
adc
jno
jae
andl
mov
adc
jno
icebp
and
pop
push
and
cmp
ret
scas
mov
popa
dec
mov
lods
fwait
pop
jle
jno
and
idivb
movsb
xor
aaa
mov
scas
shl
jge
inc
pusha
popa
hlt
push
inc
mov
sbb
xlat
lret
mov
add
push
cld
pop
jno
adc
jb
lret
aad
jl
cmpsb
dec
adc
jno
aaa
je
loopne
ja
lods
pop
mov
pop
xor
lret
lds
sub
fimuls
ret
cmp
sbb
add
jb
rorl
mov
jo,pn
sbb
mov
jno
xlat
fcmovb
mov
mov
push
inc
bound
lods
push
jbe
ret
push
jmp
scas
shlb
mov
and
fistl
daa
dec
jbe
sub
nop
xorb
mov
fcompl
in
fsts
decl
mov
ljmp
sti
inc
jns
jb
js
jno
xchg
rclb
sarl
jno
ret
sub
add
and
pop
jno
mov
or
add
adc
lret
add
push
fnstenv
je
decb
inc
xor
push
add
aas
or
xchg
shlb
pushf
gs
in
aam
sbb
mov
add
stos
jecxz
das
ret
jg
ljmp
xchg
mov
jp
sub
popa
sbbb
add
cmpsl
lock
aam
inc
jns
and
push
aas
add
movb
ret
in
add
inc
stc
in
adc
add
movl
fs
in
push
test
pusha
or
enter
scas
xor
push
pop
popa
xor
stc
jno
cltd
push
dec
mov
jo
jno
fcomps
jae
or
mov
pop
jmp
push
mov
cmp
outsb
loop
enter
fistpll
pop
jns
or
jno
sbb
sub
fwait
iret
xor
xchg
xchg
jno
push
imul
jbe
jno
aaa
inc
mov
outsb
cmp
addr16
dec
shll
jno
lret
arpl
testb
xchg
lret
out
loop
pop
jno
and
daa
outsl
and
rcll
out
je
fsubl
test
or
add
loope
jno
push
ficoml
into
inc
push
mov
pop
arpl
lds
push
stos
mov
dec
jae
cmp
lcall
mov
imul
ja
mov
outsb
into
push
imul
movsb
or
pop
and
scas
inc
dec
subb
nop
xlat
jb
insb
dec
testb
mov
push
prefetchwt1
xchg
jne
rol
lea
or
cmp
pusha
pop
orl
jne
rcrb
mov
push
cmp
jnp
and
jge
loop
or
jg
mov
and
xchg
leave
and
inc
stos
jno
mov
shl
jno
mov
push
pop
mov
dec
pop
jp
les
insl
sbb
sbb
add
fs
dec
out
call
clc
mov
inc
xor
pop
stc
adc
jno
cwtl
out
xchg
add
inc
orl
imul
push
les
fsts
jno
xchg
adc
jno
bound
loop
sub
jno
pushf
xchg
mov
jno
xchg
addl
jno
sbb
iret
adcb
fisubs
jne
push
dec
sub
sahf
jno
pop
xchg
xchg
mov
hlt
push
stos
outsb
fdivs
adc
pop
cltd
std
push
cwtl
dec
in
pop
es
push
jb
imull
jno
je
rorl
fistps
fisttpl
jno
idiv
fsubp
loope
jno
dec
lods
pusha
inc
and
jno
imul
jbe
insl
push
lret
adc
shll
and
arpl
jno
cltd
sbb
adc
mov
adc
pushf
jl
jno
outsl
push
pop
xchg
pusha
mov
mov
test
jno
fcmovu
mov
jno
sbb
add
cs
inc
pop
dec
cmp
repnz
add
jno
push
outsb
shlb
lods
sub
push
sbb
inc
js
dec
jb
xchg
jno
lret
scas
idivl
sbb
int3
repz
cmp
sbb
cmp
inc
add
xor
ds
xor
out
mov
adc
jno
bnd
sbb
ret
jno
jb
xor
pop
popf
add
push
mov
inc
addr16
and
mov
ja
inc
sbb
std
popa
in
mov
xor
sbb
sbb
ficompl
jl
mov
jno
pop
outsb
mov
jno
mov
rclb
jno
sub
jo
xchg
jle
arpl
rol
lods
jno
ds
push
push
popl
jle
repz
jne
fcompl
addb
gs
int3
jno
mov
add
jno
hlt
push
movsl
mov
shl
inc
push
push
jge
divb
or
je
cld
ret
mov
add
imul
or
mov
test
push
movsl
lret
and
icebp
mov
jno
mov
out
cs
aas
jg
xchg
out
or
and
aam
outsb
jno
mov
xchg
jecxz
rcr
dec
pushf
xchg
xor
sbb
daa
xchg
dec
movsl
fnsave
push
ja
jmp
ret
call
inc
in
xor
shlb
xchg
stos
lretw
jno
icebp
jno
jnp
dec
mov
add
add
nop
mov
jg
ss
mov
aad
lcall
shll
jno
sti
sub
lret
pop
jno
popa
pop
xor
and
jns
fnsave
lret
in
cmp
xlat
push
mov
push
xor
xor
and
mov
mov
js
shl
stc
pop
scas
add
cld
insl
cmp
dec
or
jno
sub
repz
mov
jno
add
scas
jno
pop
leave
or
inc
pop
loope
or
mov
mov
jno
mov
pop
pop
js
mov
sbb
adc
jno
or
dec
jno
pop
jbe
inc
daa
adc
jmp
sbb
faddl
mov
aaa
test
jp
gs
popa
lods
andl
pop
jle
test
jmp
idivb
or
sbb
lock
xor
add
ds
scas
add
into
sub
pop
jno
or
cmpsb
push
cmc
outsb
test
pushf
inc
arpl
push
ds
bnd
out
jecxz
jno
lret
xlat
imul
mov
jmp
orl
je
in
xchg
sbb
pop
scas
repnz
add
mov
jno
adc
pop
jno
div
cmp
enter
leave
xchg
jnp
dec
jo
mov
sbb
jno
in
adc
xor
call
scas
pushf
inc
sarb
jmp
xchg
into
movsl
jno
test
add
repnz
xchg
sbb
pusha
add
mov
movsb
ljmp
fsubrp
cmp
mov
das
jb
add
test
rorl
xor
negl
mov
push
jb
repz
das
pop
ja
or
shlb
fdivr
pop
jno
leave
sbb
int
pop
out
movsb
jno
push
adc
cmp
clc
insl
jmp
and
sub
jno
adc
inc
lret
pop
adc
stos
add
xchg
je
fcos
jno
adc
test
add
jno
cmp
je
nop
int
fildll
jno
out
scas
mov
adc
jno
mov
inc
jo
and
daa
pop
mov
js
dec
push
enter
sbb
push
in
cmp
jno
fldcw
and
xor
inc
jmp
jno
cmp
out
jno
lods
loop
in
xor
xchg
jno
mov
xchg
sbb
cmc
or
jae
ljmp
mov
push
push
mov
push
icebp
and
xchg
fstpl
int
mov
mov
jno
sbb
mov
mul
fwait
adc
out
daa
aaa
jns
and
jge
outsb
mov
enter
mov
sub
jno
sti
sarl
inc
jbe
jno
xor
or
cwtl
jb
cwtl
rcl
mov
cmpsb
lcall
popa
loopne
shlb
clc
xor
add
jns
push
addr16
xor
fsubrs
mov
or
sub
in
cmp
push
push
mov
jno
addb
es
call
push
insb
mov
sbb
scas
mov
dec
into
sub
mov
jno
pop
shlb
pop
dec
lods
lock
push
jno
push
ret
out
sbb
sub
add
data16
outsb
xlat
imul
sbb
or
pop
aaa
push
test
dec
inc
ljmp
add
or
xchg
add
inc
jbe
add
jno
pop
mov
lods
fldl
aad
repnz
mov
outsb
repnz
add
inc
std
sbb
lea
xchg
adc
sbbb
gs
fisttpll
push
daa
mov
add
je
fmull
push
xor
test
sbb
jp
es
fisttpll
scas
push
call
push
adc
pop
or
cmp
jnp
lcall
ffree
xchg
fcmove
mov
add
inc
das
in
nop
dec
inc
pop
pop
dec
imul
mov
cld
jge
enterw
mov
pop
test
pop
pop
add
jno
test
xor
adc
cltd
mov
jno
fcomp
mov
mov
or
ss
aad
push
inc
outsb
jno
xor
mov
jge
cmp
shll
mov
adc
lods
ja
xor
mov
fwait
sbb
jno
arpl
inc
dec
lret
mov
inc
ss
pop
cwtl
shl
in
cmpsb
inc
mov
sub
adc
pop
jno
xor
mov
jno
rcrb
sub
and
mov
daa
mov
push
mov
insl
sub
in
fdivl
pop
es
jno
shlb
and
sbb
xor
pop
imul
mov
outsb
xorl
inc
lods
jno
dec
dec
lahf
mov
mov
add
ja
dec
lcall
les
int
cmc
sbb
gs
push
aad
ds
and
jno
xchg
mov
mov
fnsave
or
or
js
cmp
jns
addl
cltd
push
enter
push
popa
push
insb
xchg
pop
mov
imul
xchg
lock
jbe
test
stos
stos
pop
mov
cmpps
loopne
sub
rcll
dec
rorb
jns
jmp
imul
rcl
inc
dec
jae
jno
xor
adc
push
xor
push
inc
push
testb
mov
cmp
adc
cmp
fldt
lcall
and
rcrb
inc
ret
pusha
jp
sbb
jno
test
enter
jno,pn
les
mov
xor
adc
out
repz
xor
sub
adc
xchg
jno
setns
mov
aad
mov
jno
das
es
or
and
fsubrl
aas
adc
xchg
in
push
jg
pop
xchg
jno
add
mov
sbb
aas
ret
mov
fsin
imul
test
into
aaa
fistps
jno
mov
xor
jno
loop
and
dec
out
xchg
repnz
dec
lahf
repz
jno
out
sub
push
or
push
pop
in
jb
out
add
jecxz
mov
jno
push
jle
addb
lea
push
pop
ret
loopne
jno
ret
pop
jno
stc
push
rorl
jae
ljmp
mov
add
adc
lret
ficomps
jno
mov
xlat
pushf
xor
iret
push
sub
mov
sbb
lods
push
nop
sbb
loopne
testb
adc
jle
call
aas
ljmp
and
hlt
jno
data16
aas
inc
xchg
mov
nop
xor
pop
mov
jb
int
cs
sti
imul
loopne
int
pop
cmc
push
std
addr16
rorb
jno
out
fsubrp
or
mov
mov
jno
stos
sub
in
or
push
xor
mov
mov
call
inc
jl
mov
icebp
sbb
fldenv
mov
inc
push
mov
jno
and
jmp
mov
xorl
add
lods
pushf
jno
adc
mov
lret
cs
jae
jge
pushf
and
insb
mov
jno
sarl
dec
hlt
cs
xchg
xchg
scas
inc
adc
insb
and
xchg
aas
rorl
jno
fs
xchg
cmpsl
sbb
mov
mov
les
scas
test
jno
jb
repz
iret
lret
imul
dec
mov
xchg
push
fs
cli
jecxz
xor
push
pop
push
lods
cmc
mov
sub
mov
fldl
jno
add
xchg
mov
lock
nop
cmp
in
jno
xchg
add
jp
jno
frstor
pop
scas
adc
jg
sbb
dec
push
jb
cmp
push
das
jns
scas
jno
outsl
cmp
loop
scas
mov
add
sub
hlt
mov
pop
fwait
ss
and
int
and
idivb
sbb
add
jno
test
and
jno
repnz
pop
xchg
xor
jno
cmc
inc
cltd
mov
mov
inc
adc
fsubr
pusha
push
repz
imull
push
push
jno
or
mov
ja
outsb
fcompl
shll
jns
add
xor
jno
mov
arpl
pop
shrb
mov
repnz
loope
leave
lret
and
or
mov
insb
inc
adc
sub
jno
mov
in
mov
mov
or
adc
or
and
popf
jno
cmp
insl
aam
add
jno
cltd
push
test
jno
push
push
jmp
fldt
jge
mov
jo
shlb
test
lds
loop
jne
push
cmpsl
ljmp
gs
dec
bound
xor
jns
repnz
cmpsl
jno
pushf
ja
mov
into
jnp
aam
mov
lods
jl
inc
cmc
in
cmp
cwtl
nop
ds
into
xor
jno
fsubrs
cmpsb
xlat
mov
push
push
mov
incl
mov
mov
jno
mov
or
add
jno
mov
shl
mov
adcb
pop
jns
mov
xchg
sbb
mov
loop
leave
test
pop
stos
icebp
in
out
cmovs
jns
push
mov
cmp
pop
xorl
sub
imull
jne
mov
cmp
popa
mov
sti
jo
dec
push
in
xor
hlt
xchg
pop
jle
jno
inc
mov
fistpl
cwtl
adc
jge
sub
push
xor
jge
mov
scas
pop
test
jge
les
cli
push
lea
lock
repz
movsb
loope
jp
cmp
aam
xchg
or
inc
push
int3
add
hlt
push
roll
repz
adc
mov
push
pop
push
fsubr
pop
sub
sbb
mov
popa
lock
inc
jno
inc
jno
cmp
into
mov
fldenv
sti
out
pusha
cwtl
dec
jno
add
jg
jl
jb
loopne
mov
push
jno
leave
loop
movsl
int3
dec
add
add
shr
mov
test
enter
mov
push
cmp
test
test
ret
sbb
lcall
dec
adc
mov
mov
in
jno
ret
jno
xchg
cmp
jno,pt
jo
cmp
fisubrl
jno
sbb
lret
sbb
scas
lods
push
mov
adc
cmp
imul
push
push
xlat
in
inc
sbb
out
pop
divb
sub
push
imul
sub
int3
push
clc
xorl
jg
scas
int
sbb
imul
in
cmp
sahf
mov
mov
test
cmpsb
leave
and
inc
ret
sbb
mov
mov
mov
mov
pop
iret
mov
push
mov
int
enter
in
push
dec
imul
addb
jno
jl
adc
sub
xchg
ffree
push
jne
inc
cmp
ja
ret
jno
push
inc
rclb
pushf
fisubrl
mov
pop
sub
mov
mov
stc
shll
mov
mov
movsl
pop
arpl
hlt
icebp
mov
roll
adc
nop
inc
adc
push
jno
ret
dec
mov
add
jp
stc
pop
mov
call
and
dec
sbb
xchg
pop
jno
lret
mov
stc
mov
movsb
jno
add
inc
adc
aas
hlt
popa
cltd
xchg
inc
pop
push
cli
gs
stos
cmp
mov
inc
lcall
jno
scas
cmp
push
mov
rclb
jno
fldl
mov
sti
add
jmp
inc
pop
cmp
ret
outsl
jp
shlb
sbb
xchg
in
lahf
jp
jno
cltd
mov
data16
mov
iret
sti
jno
cmpsb
test
sbb
mov
repnz
popa
cli
pop
mov
push
xor
cltd
rcrl
data16
jno
fcomps
mov
jno
ss
movsb
jp
or
inc
jae
push
fdivrl
jno
sbb
inc
outsb
fmuls
sar
andb
jno
jg
enter
arpl
popf
fwait
sub
inc
rolb
lret
nop
scas
mov
cmc
jno
xorl
lods
inc
aaa
push
jno
hlt
xor
mov
stc
cmpsl
js
push
mov
jns
imul
lods
fisttps
add
test
pop
fnstenv
jg
daa
in
sbb
insl
popa
mov
fsub
dec
cmp
mov
outsb
or
leave
jmp
push
fcoms
lods
loopne
divb
rcll
jno
pop
fwait
int3
mov
aas
test
or
mov
dec
popa
lea
das
fstpt
mov
xchg
fisubs
inc
or
xchg
jno
popa
cmc
dec
lods
rolb
shl
ds
ljmp
insb
iret
sub
xlat
les
push
orb
pop
arpl
cmp
push
xchg
popa
push
ja
push
rcl
aad
push
popf
xchg
jle
inc
and
rcrb
mov
cmp
and
xchg
scas
add
mov
cmp
jle
cld
in
jno
rclb
cmp
push
add
push
mov
xchg
nop
xchg
push
xchg
xor
jmp
sbb
add
dec
testb
out
xor
or
in
sti
fstpt
jno
inc
movsb
fxch
imul
jno
pop
out
push
sbb
das
jno
jb
push
xor
mov
jno
xchg
arpl
sbb
jno
pop
xor
sub
jno
clc
xchg
and
nop
push
adc
int
and
mov
dec
jno
pop
clc
dec
dec
jae
cmc
jno
jmp
jp
rolb
jg
cmp
jle
jno
cld
stos
sbb
dec
mov
out
add
inc
jno
test
cwtl
js
mov
fistpll
sbb
dec
adc
stc
jmp
jno
and
in
mov
repz
enter
movsl
in
xchg
nop
push
push
js
out
and
and
jno
int3
lcall
mov
mov
ljmp
jno
or
lahf
icebp
cmp
mov
aas
jae
jno
add
push
lret
loopne
outsb
jno
mov
icebp
dec
jno
push
push
fldenv
inc
pushf
jne
mov
pusha
ret
cli
jb
lods
test
daa
push
push
neg
jno
addr16
dec
out
mov
fdivs
lret
lea
jge
jno
pusha
int3
jo
scas
mov
sbb
lcall
xor
bound
cmp
jno
cmc
mov
push
arpl
jno
jecxz
in
dec
lret
pop
sub
mov
addr16
jle
jno
ds
cwtl
mov
mov
cmp
ja
push
jge
subb
mov
sarb
xlat
mov
mov
sbb
xchg
arpl
push
nop
push
cmp
xchg
out
frndint
jne
push
shlb
shl
in
jno
out
loopne
xchg
dec
push
inc
adc
or
pop
lahf
flds
jno
mov
cltd
pop
jno
hlt
iret
pop
out
inc
inc
mov
and
xchg
rorl
out
aam
adc
add
imul
inc
jno
pop
clts
xchg
and
nop
jl
imul
push
lret
jno
xor
mov
inc
fiaddl
nop
scas
dec
push
popa
lret
xlat
icebp
loopne
es
fsts
out
ljmp
push
jns
add
lcall
dec
adc
cmp
sahf
xlat
xor
jno
test
fnstsw
pop
jmp
add
cmpsb
call
nop
jb
fistpll
dec
gs
idivb
sarb
in
mov
je
xor
sub
mov
ss
jno
mov
mov
jno
iret
shrl
add
inc
jae
pop
jno
mov
xor
or
cltd
nop
in
mov
jns
jne
fsubs
mov
add
inc
in
divl
and
push
cmpsl
notb
jno
mov
jo
push
push
lds
add
out
add
mov
pop
sbb
mov
cld
ja
sub
dec
sti
and
outsl
js
sbb
or
scas
xor
movsl
or
jno
flds
push
sub
jne
stos
js
sub
and
jno
lret
out
jecxz
pop
cli
jge
daa
mov
popf
jp
jae
push
jno
jl
add
cld
or
mov
jno
insb
enter
mov
cmpsb
pop
bound
mov
mov
mov
sub
fdivs
lcall
int
cmp
lahf
out
xor
push
ja
ljmp
pushf
mov
lock
clc
xor
inc
not
push
aam
jne
jnp
fcomp
xlat
mull
mov
mov
xor
gs
je
inc
sbb
sbb
push
xchg
and
mov
cmc
shl
int
mov
fimull
popa
xchg
pop
pop
cmp
jno
xor
dec
xchg
dec
inc
xchg
jno
dec
es
fisubrl
rcll
in
jno
xchg
sbb
cmpl
imul
out
cmpsl
shlb
sar
adc
outsl
jb
xor
xor
xor
cmp
xchg
cltd
dec
pusha
xchg
orl
pop
je
adc
jno
inc
daa
push
insb
das
call
insl
movsb
add
jnp
jmp
mov
or
adc
test
ret
pop
mov
sub
or
sti
push
jno
int
cmp
mov
adc
push
clc
out
jnp
jno
mov
xchg
into
cmp
in
lret
movsl
int
stos
nop
cwtl
addr16
jnp
std
lahf
jne
xchg
dec
cmp
jno
cwtl
mov
nop
aad
imul
adc
loop
or
push
push
fpatan
ja
imul
pop
fwait
movsl
jno
sti
inc
push
insl
dec
and
out
orb
imul
lcall
gs
test
sub
es
jno
in
scas
jb
pop
and
sti
cmp
data16
jae
fstpt
jge
out
mov
fcoml
icebp
jecxz
mov
pop
cmp
les
mov
and
icebp
lods
pop
mov
sbb
jno
mulb
jb
imul
xchg
push
jle
dec
lea
adc
xorb
cmpl
lret
jno
leave
inc
ljmp
add
mov
inc
aad
adc
lcall
inc
pop
jno
mov
daa
pop
inc
and
xor
jae
mov
jcxz
mov
pop
mov
jno
mov
adc
push
in
lcall
cli
test
adcb
jl
sub
mov
mov
sub
lods
cwtl
push
orb
sub
es
sbb
leave
mov
lods
jno
pop
push
neg
jecxz
jno
pop
dec
xchg
lret
repnz
test
js
enter
jo
jno
mov
scas
pop
inc
jno
add
outsl
jmp
and
xchg
mov
idivl
fwait
mov
ret
movsl
cmpsl
out
jno
add
and
mov
hlt
pop
xor
lahf
and
cmp
mov
jo
rorb
mov
fdivrl
push
jno
sbb
stos
xchg
jno
inc
dec
gs
pop
aam
jnp
add
jno
jp
jecxz
sbb
sub
int
inc
cmc
jno
jp
mov
fstp
add
scas
out
push
add
jno
call
mov
in
jno
pop
ja
or
cwtl
outsl
mov
movhps
mov
add
gs
or
cmp
ss
push
xchg
insl
xchg
mov
jno
iret
and
adc
add
insb
sti
push
xor
sbb
jno
cmp
sbb
bnd
mov
sub
pop
notl
mov
es
sub
sbb
jno
pusha
sbb
das
push
jbe
lock
fildl
xor
cld
push
icebp
jno
dec
mov
adc
mov
int3
fwait
mov
xor
push
lock
rol
jmp
lds
loope
sub
popa
cmp
jno
mov
scas
jno
sarl
or
mov
fdivs
cmpsl
imul
lds
ljmp
aas
dec
fwait
test
or
xchg
aad
push
mov
and
cwtl
push
dec
mov
test
lds
mov
jno
lock
ja
push
dec
push
lahf
and
movsb
jno
ret
shrb
xor
jne
cmc
jno
mov
inc
or
jb
popa
nop
cwtl
xlat
or
gs
and
dec
pushf
or
test
lea
and
in
jno
xlat
adcl
jno
arpl
push
pop
daa
mov
push
hlt
add
call
std
cmp
mov
mov
jbe
jge
leave
in
or
packuswb
adc
ljmp
pop
or
aad
jno
rcr
out
mov
inc
hlt
adc
pop
xchg
add
lret
popa
gs
cmpsb
cld
jno
xor
test
icebp
pusha
es
popf
movsb
jno
repz
sarl
out
jno
daa
sbb
das
jno
outsl
insb
test
stc
cli
or
adc
mov
xchg
jno
adc
xor
arpl
ja
sub
and
xchg
gs
in
xor
int
mov
rclb
xchg
xor
push
sub
lods
jno
mov
movb
jnp
in
stos
arpl
add
roll
jno
sub
jo
dec
stos
movntq
pop
jno
cwtl
mov
nop
jecxz
test
mov
adc
loop
adc
dec
jae
dec
push
and
stc
mov
pop
jne
jp
jecxz
enter
movsl
cmp
into
sbb
xchg
mov
xchg
push
mov
inc
jnp
and
and
lcall
add
jno
pop
aas
mov
mov
jno
ret
dec
in
pop
pop
pop
repz
cmpsb
cmp
mov
jae
roll
fiaddl
lock
sbb
sub
jno
sbb
push
add
dec
cmp
sub
sbb
push
jno
ret
and
into
lods
call
arpl
inc
dec
mov
mov
jno
mov
inc
jge
adc
int3
scas
jmp
mov
sbb
cmp
sti
lock
stc
inc
or
into
sahf
jno
jecxz
jb
adc
aad
xor
mov
add
push
loopne
popa
mov
jno
adc
push
sub
push
mov
fisubrs
mov
jb
xor
ret
enter
cmpsl
jno
ja
aaa
adc
jl
out
sbb
test
shlb
cmp
jno
shlb
mov
and
sub
out
movsb
jne
icebp
push
loop
mov
sbb
jno
cmp
push
out
add
sub
adc
cmp
nop
out
and
dec
pop
lds
hlt
or
cwtl
testb
xchg
scas
int
jnp
jno
pop
ret
andb
ja
psubw
jno
or
mov
and
inc
xlat
test
jno
repnz
cmc
ficompl
add
dec
scas
push
rcl
push
call
popa
divb
mov
sbb
mov
and
mov
add
jecxz
sbb
dec
jno
push
cmp
cmpsl
lds
jp
idivl
repz
call
add
lds
imul
aas
jno
fwait
outsl
lods
push
pop
es
int
push
cmc
popa
add
xor
in
jg
aam
pop
clc
cmp
lods
push
mov
mov
fs
shlb
test
jne
add
repnz
daa
aad
or
dec
and
xor
pop
cltd
seta
jns
movsb
lods
gs
sub
push
xchg
in
bnd
pop
push
loope
mov
loop
in
cmp
pop
jno
push
rcrl
mov
pop
inc
mov
mov
dec
push
sub
lods
jno
jne
inc
ret
xor
sbb
mov
or
jno
mul
lret
aaa
roll
subb
mov
jno
mov
lods
rol
lcall
or
out
out
and
pop
cmp
int
pop
popf
popa
test
insl
inc
fistpll
fcompl
sbb
ret
dec
jmp
adc
push
cmpsb
lods
xchg
mov
mov
adc
jae
ja
scas
pop
sub
mov
into
outsl
or
jno
and
test
and
jno
or
ljmp
inc
mov
or
add
xor
mulb
sbb
js
nop
test
das
insb
mov
imul
call
dec
jne
cmp
enter
fwait
jno
jmp
mov
and
lock
nop
call
imul
add
jbe
lahf
sub
adc
sub
xadd
sub
in
sub
pop
cmp
jno
adc
push
lcall
jl
mov
adc
xchg
jmp
dec
lret
and
scas
xchg
fldenv
imul
jno
lret
and
sub
std
popl
mov
inc
test
xchg
add
sbb
sbb
imul
cmpb
jo
sub
xor
jno
popf
xor
nop
mov
mov
and
push
movsb
nop
sub
sbb
jg
add
jno
rcl
stos
xlat
iret
loop
adc
inc
or
jnp
in
arpl
jae
bound
push
cwtl
enter
je
lock
dec
mov
jl
lret
jne
mov
out
dec
test
rorl
imul
in
jno
movsl
movl
jno
out
cmc
mov
and
jle
lcall
jno
sar
stos
sbb
jno
push
fucomip
jmp
arpl
jae
jecxz
lret
sub
scas
stos
and
jmp
pop
push
jno
sbb
mov
jno
push
sub
scas
dec
pushf
aad
dec
push
inc
popa
outsl
lods
cwtl
mov
imulb
scas
sub
test
mov
jge
xor
int3
int
clc
mov
sbb
or
push
adc
cld
gs
inc
pop
sahf
jae
insl
lock
xchg
das
aad
ljmp
sbb
xchg
insl
loopne
inc
mov
clc
xor
xor
out
fiadds
into
cli
sbb
xor
addr16
mov
mov
rorb
adc
jl
inc
movl
mov
inc
jno
cli
out
ja
nop
push
jno
out
sub
scas
xchg
in
push
dec
dec
jno
push
mov
lods
inc
xor
push
sarl
enter
dec
iret
into
mov
jno
lea
aad
rcll
fnstenv
popa
mov
leave
sti
fidivl
mov
dec
lods
inc
and
shrl
mov
popa
ret
mov
add
add
pop
jle
std
and
lock
test
sbb
jo
pop
test
push
mov
testl
imul
jno
push
or
jp
push
pop
mov
das
jb
dec
jno
aam
pop
jb
daa
inc
jno
add
lret
jecxz
jl
pop
dec
push
in
in
adc
stc
shll
fnstsw
jae
repz
scas
mov
lods
xlat
gs
xor
mov
jne
push
jno
outsl
push
in
pop
fdivs
mov
fisubl
mov
or
pushl
push
cmp
mov
add
mov
push
push
or
repnz
jno
cld
and
adc
sbbb
jne
jo
fcoms
push
scas
xchg
push
xchg
ds
push
psadbw
mov
std
ja
gs
mov
pop
jge
jl
popl
ljmp
lret
fwait
rorb
arpl
push
and
ror
sbb
and
mov
nop
outsl
sub
lret
ja
push
js
push
in
shl
repz
cwtl
addr16
out
and
test
popa
jno
addr16
popf
or
mov
fdivrl
jno
test
in
push
test
inc
push
ret
aas
andb
inc
mov
or
fadd
leave
loopne
mov
dec
jno
or
popf
mov
sbb
jae
and
dec
loopne
ja
add
into
jns
jno
or
ss
fsubs
je
push
inc
nop
movsl
lcall
mov
cmpsb
adc
arpl
or
ror
aas
inc
insl
jno
or
cmp
orl
push
jbe
push
jno
in
mov
sub
mov
xor
lret
jno
sbb
icebp
jno
es
cltd
leave
cmp
sbb
stos
or
mov
in
add
push
inc
jno
or
lds
xchg
imul
rcl
or
add
mov
addr16
lock
xor
sbb
xchg
stc
cmpsl
movsb
pusha
addr16
fldt
test
jnp
loope
out
jno
sub
mov
lods
das
jno
int
test
cmp
jne
xor
les
int3
push
mov
add
cmpsb
lret
lea
cmp
fsts
adc
ret
pushf
ds
mov
jle
lea
clc
ret
add
push
jp
jns
lock
pop
xchg
sub
jg
and
test
je
adc
push
js
scas
jg
mov
es
xchg
je
mov
pop
fists
adc
mov
call
je
test
or
shll
mov
imul
jae
gs
jno
pop
xor
cmp
mov
xchg
and
scas
lcall
shrl
fwait
jno
mov
sub
pop
mov
jno
in
lcall
push
cmp
rcr
adc
ficompl
mov
xchg
xor
nop
dec
push
dec
cmp
stos
jns
inc
pushf
cmc
stc
out
add
jmp
mov
sbb
stos
or
mov
mov
int
scas
aad
nop
inc
mov
adc
repz
pop
pop
xor
mov
stos
sahf
mov
js
adc
out
test
dec
jae
mov
pop
lods
add
xor
dec
mov
inc
pop
cltd
jae
aas
sbb
mov
mov
dec
jno
push
push
cmpsl
push
icebp
movl
xor
mov
jno
addl
sbb
push
xchg
jne
push
cmc
xor
loop
inc
scas
xchg
jg
or
aad
rcr
lea
lods
popa
test
push
inc
dec
clc
jno
imul
dec
cld
mov
add
mov
jno
push
dec
xor
mov
adc
data16
lret
and
xchg
mul
cli
jnp
sbb
in
ret
imul
stc
jle
jmp
xor
test
lret
cmp
mov
xor
jno
daa
andl
int3
aas
mov
out
call
repz
fsubrs
mov
add
fs
das
dec
test
xchg
add
jno
sarl
cmp
cmp
add
pop
call
inc
imulb
cmp
inc
push
xchg
lea
outsl
scas
icebp
jno
je
mov
add
jno
gs
mov
add
arpl
loopne
outsl
mov
scas
jno
fidivl
xchg
sbb
jmp
xor
jns
pop
dec
inc
stos
xor
cltd
xlat
jnp
xor
jns
fsubs
dec
pop
addr16
enter
idivl
rcrb
push
cmp
movsl
jno
es
mov
nop
loopne
ror
jno
int
mov
xchg
xor
imul
jb
nop
fwait
hlt
add
dec
jno
inc
sarb
or
popa
loope
movsl
push
inc
shlb
cmpsl
sub
adc
js
rcll
jg
sarb
mov
cmpsb
jno
cltd
xchg
cmp
mov
daa
scas
rcrl
insl
andb
pushf
jno
push
or
jno
shr
outsl
and
push
loopne
dec
fldenv
jno
mov
vmovups
inc
mov
pop
jae
push
aaa
cmpsb
inc
lock
cld
dec
cmp
lea
lahf
jno
loop
xor
mov
into
es
or
jns
shll
cmc
arpl
inc
insb
jno
cmp
dec
es
call
loop
xchg
fs
mov
or
imul
popa
jnp
int
test
sbb
xchg
sub
jbe
inc
leave
lcall
xchg
jns
cmp
jne
jbe
fcom
cmc
inc
ret
stos
mov
fdivl
in
xchg
lds
pusha
lods
jp
mov
xor
pop
scas
sbb
mov
movsl
adc
adc
dec
push
pop
nop
scas
xor
jle
pusha
jno
lea
fcmovne
xchg
push
movsb
jno
push
push
adc
pop
push
ret
xchg
or
jg
jno
test
lods
sahf
jne
sub
les
clc
mov
jnp
jo
popa
mov
repz
pop
add
test
mov
adc
jnp
xor
mov
out
dec
clc
jno
jmp
push
xchg
or
sub
lods
imul
jno
icebp
cmpsl
stos
pop
mov
rcll
std
or
xor
mov
jne
or
in
je
push
fbld
jno
fistl
jno
std
rorl
leave
cmp
jno
loope
mov
imul
mov
movsl
jno
xor
push
cmc
dec
pusha
out
jns
rolb
ret
dec
and
cmp
jle
in
lret
cmove
pop
mov
ja
pop
ret
cmp
mov
cmp
jae
movsb
dec
stc
fiaddl
xchg
sbb
jno
icebp
outsb
mov
push
jae
jno
cmp
inc
jle
push
xchg
hlt
push
ret
mov
jno
sbb
out
or
icebp
dec
popa
sub
jno
in
jge
into
gs
jno
outsb
xchg
mov
adc
jle
jg
jns
inc
xchg
fistps
jno
mov
xorb
cmpsb
xchg
insl
adc
je
call
xchg
pop
lds
test
jmp
push
mov
addr16
pop
fisubrs
movsb
mov
xor
sbb
push
in
imul
dec
js
adc
je
add
cmp
push
std
jno
push
mov
xchg
jno
pushf
ljmp
ret
xor
int
sbb
aam
jno
ljmp
xor
out
push
leave
dec
or
call
lahf
sbb
sti
jno
adc
inc
frndint
jge
jno
mov
cltd
pop
sub
fnsave
clc
dec
mov
repz
push
notb
jnp
xor
mov
sbb
add
rorl
pop
test
pop
and
mov
or
ret
mov
mov
fistps
adc
jno
call
xchg
aas
in
inc
imul
push
cmp
aam
push
mov
add
shrl
adc
mov
xchg
xchg
lret
jp
repz
in
dec
jno
push
call
jno
rol
jge
jns
scas
fwait
cmpsl
mov
mov
mov
add
gs
add
jno,pn
push
data16
xor
jno
outsb
andl
iret
jno
out
test
or
adc
jbe
lret
jg
scas
xor
shll
mov
mov
mov
push
loop
xor
push
ret
push
dec
aad
imul
mov
jno
sarl
int
pop
test
das
or
cmp
sub
sbb
jno
arpl
repnz
xor
inc
inc
in
or
jno
loope
and
out
daa
sub
mov
das
shrl
ffree
or
push
mov
out
jle
pop
xorb
ds
pop
shrb
jno
fdivrl
jno
adc
and
sbb
add
in
jno
pop
mov
mov
dec
jecxz
pop
int3
addr16
add
fdivl
ja
js
push
movsb
mov
jmp
enter
xchg
mov
lods
ja
jne
into
pop
adc
mov
or
pop
sbb
push
sub
jno
subl
jno
sbb
insb
xchg
sub
jno
xchg
adcl
fsubrs
das
cli
add
inc
scas
loope
cmp
and
jno
mov
rorl
xchg
jno
mov
jge
jp
jg
insl
pop
mov
pop
stos
add
das
jbe
lret
jb
mov
sub
and
cmp
and
gs
xor
orl
add
imul
inc
inc
xchg
sahf
cwtd
icebp
jmp
dec
cmp
shlb
sub
xchg
cmp
lahf
fcomi
xlat
and
ss
adc
orl
jno
jne
das
add
sbb
les
loope
jno
or
adc
inc
or
xchg
pop
push
inc
add
icebp
jno
push
jo
int
shlb
jno
or
lahf
jno
push
lods
xchg
arpl
sub
popl
test
adc
adc
fdivs
std
mov
js
ret
je
pop
and
inc
loop
xchg
jno
fistps
fnstsw
adc
mov
ss
and
repz
mov
in
inc
or
dec
xchg
movsl
stos
call
in
cs
imul
lcall
adc
mov
fdivrs
pop
jno
mov
repnz
jno
daa
add
out
sbb
outsl
jae
mov
sub
sbb
loop
push
cwtl
jno
aaa
cmp
jno
dec
push
lods
jno
mov
mov
sbb
jno
inc
testb
in
push
aaa
lcall
jno
orl
leave
mov
inc
fmuls
sti
jnp
xchg
cmp
sbbl
mov
jmp
popa
jb
out
adc
mov
jg
sbb
movsb
popa
into
pop
incb
jno
mov
addr16
clc
jno
call
sbbb
sbb
push
xchg
push
data16
cmp
or
mov
in
icebp
jmp
popa
and
mov
mov
push
ljmp
gs
sub
jns
dec
xchg
mov
stc
jno
xor
rcrb
mov
data16
lcall
pop
dec
aaa
shrl
or
imul
ja
and
pop
pop
lret
push
hlt
xchg
fcoml
inc
sbb
jnp
xchg
and
sbb
fimuls
push
add
outsb
stc
mov
jne
pop
int
insl
and
mov
jno
sub
lret
vmovdqu8
cwtl
jno
arpl
pop
jno
insl
and
xchg
sub
shll
jge
add
jno
jb
sbb
roll
int3
jno
je
sbb
in
dec
fbstp
fnstcw
jns
xchg
into
jno
ret
pop
frstor
mov
mov
call
sub
sbb
sbb
xchg
scas
jno
cmpsb
outsl
and
mov
pushf
into
movsb
add
nop
es
jmp
cmc
cwtl
jno
xor
icebp
mov
push
jno
sbb
ror
shll
test
cmp
xor
jmp
sbb
jno
jne
mov
mov
dec
scas
hlt
push
fdivs
dec
mov
jmp
lret
pop
mov
jmp
imul
outsb
rorl
mov
pop
jle
pop
cld
das
and
dec
inc
xchg
movsl
jno
lods
test
fwait
cmp
sarl
inc
jno
in
stos
or
xorb
sub
sbb
fcomip
dec
das
out
das
mov
push
js
sbb
mov
push
je
das
out
fstl
mov
call
push
scas
insl
fstps
cltd
or
dec
push
jmp
mov
movsb
push
cmp
xchg
orl
lds
leave
pop
mov
in
add
popf
adc
lock
jno
imul
jno
test
pop
ja
lret
xorl
jne
push
jno
mov
stc
mov
inc
mov
repz
arpl
insb
and
xlat
stos
sarl
jno
sub
ret
or
cli
mov
push
inc
shlb
sbb
and
popa
jle
lcall
jg
test
jno
add
pop
int
cld
ds
mov
jbe
nop
xor
leave
popf
bound
out
test
imul
shrb
push
mov
insb
jbe
xor
sub
icebp
and
bound
insl
lret
mov
inc
mov
clc
insb
insl
inc
lock
sub
inc
xorb
jno
pop
xchg
pop
jp
pusha
dec
jno
arpl
adc
shlb
jns
fldz
jl
jmp
inc
in
fistps
test
repz
jno
sbb
ds
mov
popa
jbe
loope
jecxz
gs
pop
add
outsb
inc
gs
inc
xorb
lcall
int
cmpl
adc
jno
xor
mov
jno
adc
leave
repnz
hlt
jg
adc
cmp
inc
mov
int
pop
sub
int3
es
dec
jl,pt
fs
jno
imul
sub
jno
inc
pop
add
pop
addr16
dec
or
fisubs
bound
popa
mov
addr16
aaa
sbb
push
inc
push
sub
pop
out
jle
inc
sbb
dec
notl
sbb
jae
mov
jno
insb
inc
aaa
mov
jns
push
pop
ljmp
pop
testl
jb
jae
jno
inc
fisubrl
scas
out
jno
insb
sbb
jno
push
push
mov
lods
push
cs
popa
pop
fs
ret
rclb
lods
pop
inc
or
or
sub
pop
cmc
aaa
and
ss
jge
lds
int3
dec
out
mov
sbb
call
mov
outsl
lock
mov
out
addr16
jge
adc
fdivs
aas
sbb
inc
pop
scas
pop
sbb
std
xor
jno
popf
addr16
push
sbb
sbb
je
in
jno
ret
ljmp
addb
jl
jno
test
and
out
or
mov
pop
push
dec
push
lods
mov
xchg
ja
repz
repnz
sub
lods
and
adc
out
push
popa
dec
dec
inc
pop
cmpl
push
xor
cbtw
loope
fnstenv
add
mov
je
data16
jno
movsl
inc
es
arpl
xchg
inc
cmp
jnp
push
push
sbb
in
test
add
add
dec
push
dec
pop
repnz
and
adc
jo
pop
in
lret
test
into
mov
jno
add
iret
bound
push
mov
aas
jno
cmp
xchg
inc
sub
nop
pop
pop
scas
aam
jge
mov
jno
mov
jecxz
cmp
sub
add
nop
jp
sub
fnsave
rep
scas
mov
and
bound
gs
and
inc
inc
adc
ret
xchg
push
jno
out
fldcw
xor
lahf
add
jbe
jno
xchg
into
mov
popa
mov
fnsave
aaa
lods
sub
jno
hlt
push
test
or
mov
mov
dec
xor
enter
insl
int3
jns
inc
in
fcoms
jno
mov
aaa
mov
movsl
push
andl
nop
mov
fisubrl
or
mov
cmc
movsl
shlb
into
nop
dec
insb
aad
jno
pop
xchg
xchg
fwait
inc
negl
lret
dec
scas
mov
stc
or
push
xchg
add
sbb
sub
std
testb
jno
shll
push
jno
das
lock
or
nop
add
sub
jg
popf
pop
addl
dec
ja
mov
mov
fs
add
pop
test
and
and
mov
pushf
ret
mov
xchg
mov
jne
jno
mov
mov
push
mov
add
outsb
lahf
fdivl
or
into
mov
mov
fbstp
aas
cmc
inc
or
xchg
ds
test
pop
out
sub
insb
aam
xlat
jno
cmpsl
cmpsb
mov
xchg
jle
dec
jno
inc
icebp
ja
cmp
std
inc
sbb
sbb
rcl
xor
inc
push
mov
sti
pushl
xlat
std
pop
cli
or
cmp
jno
xchg
and
inc
jbe
or
dec
leave
jno
fildll
jno
xchg
push
leave
lret
xor
push
mov
push
lods
cltd
adc
mov
push
mov
shll
xchg
or
jmp
jno
adc
xor
xchg
jno
mov
jno
in
movsb
push
movsl
adc
and
out
add
inc
into
das
adc
aas
cmpsl
jne
movsl
loop
les
mov
jns
or
jmp
sbb
pop
jno
leave
mov
xchg
jno
lds
int
or
pop
mov
jno
stc
cli
clc
pop
inc
add
push
cmp
addr16
xchg
jmp
scas
jne
popf
stos
cmpsb
jno
adc
jns
std
jno
test
xchg
rcrb
icebp
jno
je
cmp
fists
sub
in
repz
int
pop
loop
dec
rorl
push
jcxz
movsb
jno
mov
inc
jge
or
dec
movsl
loope
sahf
push
push
inc
xor
out
inc
mov
jnp
jmp
sub
fisubrs
shll
pop
aam
nop
imul
scas
add
adc
pop
jns
les
mov
add
imul
jno
mov
jno
icebp
pop
imul
push
ret
xchg
cmp
hlt
cmc
pushf
jbe
jno
push
repz
jno
lods
cmpsb
outsb
xor
cmp
jmp
test
push
dec
push
adc
lea
jecxz
fdivrl
pusha
popa
jbe,pt
inc
sbb
es
and
fcoms
cmp
rcrl
jb
popa
add
outsb
repz
mov
sbb
push
loopne
dec
pop
scas
pop
xor
popl
jne
add
jno
jne
aaa
mov
xor
mov
in
lods
dec
push
push
add
lock
cmpb
jl
pop
fidivrl
loop
mov
sbb
mov
lods
adc
jecxz
nop
and
jnp
out
es
jne
push
mov
enter
dec
jno
into
test
out
cmc
and
xlat
inc
sub
andb
mov
in
jecxz
pop
push
jno
jb
mov
mov
pop
jno
fidivrl
dec
leave
add
mov
dec
xchg
push
jmp
push
ret
xchg
inc
lods
jle
and
inc
adc
call
je
and
jno
roll
iret
dec
lret
mov
mov
add
jbe
push
push
scas
in
jge
jno
cli
adcl
aam
repz
add
ljmp
dec
sbb
cmp
mov
xchg
and
mov
mov
jb
pop
xchg
jno
add
call
inc
jnp
sarb
push
clc
pushf
xchg
jno
pop
inc
outsl
imul
mov
mov
gs
in
aas
push
cmc
pop
mov
jno
addl
mov
iret
or
mov
jo
jno
repnz
loop
pop
rclb
rdpmc
popa
int3
cld
cltd
out
sbb
jno
fsubs
adc
xlat
adcl
mull
push
fidivl
lods
jl
mov
out
fldcw
xor
rcrl
pop
aas
pop
or
dec
sbb
insb
into
enter
fwait
scas
sub
gs
data16
ret
scas
sub
repz
inc
inc
fs
fwait
test
ret
xchg
js
push
pop
rcll
mov
push
or
push
mov
pop
pop
jecxz
icebp
daa
cwtl
jno
hlt
popf
jnp
sub
adc
mov
test
or
popf
scas
push
jne
mov
cmp
nop
bound
je
lds
jns
inc
andl
lock
jno
mov
sbb
rcrl
adc
mov
mov
jno
dec
cmc
in
movsl
add
loopne
jge
ds
nop
imul
push
and
lock
sarl
mov
lock
jns
or
lods
push
scas
cmp
mov
jg
jno
rol
lcall
mov
push
lret
cmp
push
inc
adc
xor
gs
and
jl
dec
fwait
out
push
outsl
inc
leave
rcll
stos
xorl
in
sub
popa
fwait
popf
xor
cmpl
imul
sahf
jno
mov
insb
mov
jmp
adc
mov
mov
push
pop
fists
jno
pop
mov
movsb
data16
xor
out
test
xor
pop
das
cmc
push
xlat
fadds
push
lock
aam
mov
jno
ss
rep
xor
jno
test
enter
xorb
adc
push
sub
jno
and
adc
outsl
fdivr
cld
jnp
inc
sbb
add
loope
popa
je
sbb
jno
lea
adc
hlt
jno
std
xchg
lret
outsl
dec
and
dec
es
sub
movsl
sbb
jno
jne
mov
jno
xlat
cltd
loop
in
lods
dec
add
in
lods
aas
jae
and
into
imul
mov
push
movsl
lea
push
jle
shl
jecxz
push
gs
push
xchg
mov
lcall
arpl
mov
lsl
aaa
cltd
jno
in
mov
inc
jno
cmp
cmpsl
sub
fidivl
movsb
mov
sbb
les
sub
cmp
and
cmc
mov
jno
ret
pop
es
push
sub
sbb
divb
scas
mov
je
pop
aaa
imul
pop
inc
jno
xor
mov
mov
sbb
inc
push
inc
repz
iret
negl
jno
repnz
aad
loope
jno
fwait
cmp
in
imul
daa
pop
dec
out
icebp
xor
pusha
bswap
addr16
dec
in
and
jno
repnz
xor
int3
push
jno
mov
cs
and
fnstsw
sti
test
sbb
ljmp
jno
sub
ret
scas
xchg
sbb
push
jns
mov
das
shlb
fldt
push
call
jecxz
stos
dec
sahf
sub
sub
xor
aad
xchg
lret
imul
push
mov
jno
or
inc
js
jecxz
jno
mov
xchg
mov
sarb
subb
ret
push
cmpsl
jecxz
or
xor
stc
jno
cmp
and
adc
test
fcmove
dec
lret
insl
iret
popf
mov
shll
add
andb
sbb
rclb
jno
adc
xchg
jno
sub
gs
cli
test
jno
lds
in
in
les
jno
cmpsb
jle
repz
sub
cmp
lcall
jp
push
dec
cmc
jno
scas
jecxz
mov
mov
cmp
jo
xchg
dec
lea
repz
or
outsl
jno
push
mov
jno
insl
es
leave
shlb
pop
int3
lret
adc
test
in
push
xor
scas
cmp
lock
sbb
pop
repnz
pop
jecxz
xor
mov
xor
rcrb
dec
add
popa
jb
dec
push
jno
mov
popl
imul
testl
inc
dec
hlt
or
push
das
outsb
mov
sub
push
pop
and
popa
dec
mov
xchg
jecxz
fwait
mov
pop
lret
push
cmp
icebp
imul
sbb
inc
push
push
sub
js
mov
test
sarl
xchg
dec
sti
jno
out
sbb
jno
daa
adc
xchg
in
mov
fdivrl
inc
cs
or
ja
mov
lcall
fnstenv
mov
push
fistpll
mov
cmpsl
or
div
lock
xchg
jno
dec
inc
aas
and
jno
lahf
add
pushl
into
fptan
cmp
or
insb
inc
cmc
imul
mov
nop
cltd
pop
dec
insb
popa
jnp
xlat
add
jno
mov
pop
ret
or
cli
lcall
push
cmp
testl
popa
push
dec
pop
rorb
mov
push
in
sahf
push
push
jno
pop
xor
lods
addr16
cmp
mov
leave
sbb
btc
jno
and
xor
sbbl
pop
rcl
push
clc
arpl
dec
popa
sbb
dec
scas
scas
add
popa
inc
xchg
sub
fstpt
inc
movsb
jno
jo
adc
shr
jno
push
test
das
adc
in
lock
ds
xor
jno
push
fidivl
lods
inc
jae
cwtl
pop
jp
imul
int3
sub
in
jecxz
jb
push
push
jmp
test
adc
test
fwait
add
stc
shrb
bnd
xchg
jbe
jg
push
push
cmp
mov
ja
adc
mov
push
cmpsb
dec
jno
push
lds
cwtl
jno
inc
push
je
test
fbstp
add
mov
adc
jae
jl
lods
in
and
popa
mov
mov
ret
ficompl
outsb
push
cwtl
mov
sbb
fs
mulb
das
fisubrs
cmp
out
shll
test
fbld
pop
arpl
in
push
dec
cld
pop
push
icebp
inc
cmp
mov
adc
jno
mov
call
push
sti
icebp
xchg
loop
push
or
add
cmpsb
pushf
mov
lcall
pop
push
repnz
in
xchg
scas
je
push
imulb
dec
dec
xchg
pop
and
adc
mov
push
lds
int3
cmpsl
in
sub
sbb
nop
stos
sti
in
pushf
inc
adc
jno
xor
add
jb
rcll
popa
mov
xchg
sbb
je
loopne
push
rcrl
jne
mov
dec
or
loop
lea
gs
mov
rol
sbb
xlat
jno
in
or
push
mov
jno
cs
adc
jl
insb
add
popf
cwtl
xor
sbb
jno
and
sub
pop
mov
sub
subb
stos
rclb
sbb
push
add
outsb
out
cmp
nop
cmp
inc
xchg
test
gs
add
fsts
cmp
ss
dec
nop
dec
sub
jg
test
xchg
mov
jno
jnp
mov
cmpsl
jno
mov
dec
stc
out
cwtl
xorl
add
test
jnp
jno
out
shlb
add
out
jno
sbb
push
icebp
aas
jno
movsb
ss
mov
and
sub
mov
add
push
jecxz
xchg
dec
push
jo
cmp
xlat
or
jle
push
pop
jp
mov
fucomp
rep
scas
jno
pop
das
add
push
inc
lods
lahf
pop
cmp
dec
mov
and
leave
outsl
jno
test
aas
push
lahf
ja
test
je
jno
loope
sahf
ss
mov
pop
dec
sub
test
xlat
outsl
add
jno
ret
adc
ds
outsl
cltd
daa
cli
cmp
mov
jno
pop
call
jno
out
push
ljmp
jne
je
adc
inc
scas
mov
push
fidivs
fwait
inc
add
pop
pop
sbb
push
dec
mov
inc
fwait
dec
lods
inc
pop
arpl
outsl
imul
je
ficoml
call
adc
out
sub
ret
arpl
mov
sub
jl
or
inc
jno
inc
jb
pop
sub
jno
ret
adc
popf
mov
sbb
dec
xor
fcoml
sub
jnp
mov
roll
lods
lods
push
scas
pusha
add
aaa
in
mov
pop
jno
js
xor
int
xchg
add
cltd
sbb
xchg
addr16
pusha
fsubl
cld
fidivrl
lahf
xchg
dec
into
lock
jno
mov
es
xchg
inc
sub
mov
nop
test
cmpsb
lock
test
sub
xchg
cli
jno
frstor
cmp
or
popa
cwtl
cmp
mov
rorb
add
push
decl
cs
cmp
jno
lcall
jno
or
mov
psrlw
ds
xchg
mov
adc
mov
adc
outsl
and
sar
add
push
mov
jle
adc
arpl
dec
aam
xor
dec
sub
xchg
fisubrl
insb
mov
add
jno
mov
movsb
movsl
stos
adc
lock
jl
das
jno
sbb
cmpsb
or
jne
mov
les
cmp
in
sbb
push
fdivp
out
push
lahf
pop
jno
push
mov
xchg
jno
fs
push
xor
loope
outsl
mov
loopne
clc
cmp
push
sub
popa
sub
roll
add
inc
mov
aam
pop
adc
bound
std
leave
inc
es
insb
push
ret
outsl
push
cld
cwtl
popa
out
je
jle
mov
notl
mov
adc
rcrb
dec
lea
mov
clc
in
jno
mov
jnp
aaa
enter
movsl
les
push
xor
jne
xchg
loope
jns
shrb
lcall
shl
popa
clc
or
adc
pop
arpl
cmp
jle
les
jl
cmp
scas
cli
mov
jae
in
leave
sub
xchg
jno
dec
and
cs
xchg
push
jno
shr
cmp
fdecstp
push
pop
icebp
adc
stos
sbb
movsb
cmp
dec
mov
push
aaa
je
jno
lea
push
jno
int3
loope
mov
sbb
bound
lcall
sbb
gs
and
jmp
add
inc
fisubs
fldln2
add
add
pop
loope
mov
pusha
jmp
push
cs
adc
fistpll
push
push
sbb
jmp
mov
adc
cs
mov
std
mov
sub
ljmp
sub
push
inc
mov
jbe
xchg
lahf
mov
cmp
out
movsb
cwtl
int3
or
push
int
jns
adcb
daa
scas
je
jmp
in
mov
add
out
sti
out
gs
dec
test
dec
aas
sub
jns
arpl
nop
sub
fisubrs
xchg
outsb
ljmp
xlat
outsb
gs
mov
cmp
mov
cld
mov
loope
sbb
inc
out
ficompl
shlb
pusha
out
mov
in
push
inc
inc
dec
xchg
cmpsb
jno
fisubrl
daa
out
adcl
loopne
out
popa
in
pop
cmc
lahf
imul
std
sbb
jecxz
jg
mov
sub
add
xorb
in
adc
lock
popa
pop
pop
lods
mov
jbe
and
mov
cwtl
and
vphaddudq
in
add
inc
inc
xchg
mov
test
daa
pop
sbb
mov
jecxz
das
mov
fucomip
aam
clc
aad
jg
push
add
mov
lods
inc
mov
adc
je
imul
cmp
aas
fucomp
xchg
mov
gs
into
cltd
stc
pop
aas
or
in
adc
das
cmp
and
pusha
in
xchg
or
dec
in
mov
jns
lea
hlt
cs
sarl
ljmp
xchg
popa
inc
xchg
cltd
icebp
sbb
std
in
fdiv
add
in
or
scas
insb
inc
imul
push
mov
mov
sbb
std
pop
mov
and
popa
jl
push
arpl
mov
jo
subb
add
pop
into
in
scas
xor
inc
cmc
mull
loope
inc
inc
or
cmp
std
gs
xor
mov
adc
nop
xor
mov
pop
push
imul
in
insb
pop
imul
adc
out
int3
icebp
outsl
pop
je
psubb
and
push
push
es
mull
in
fs
sub
mov
ljmp
cmp
push
mov
into
stc
cmp
push
lahf
test
jg
and
sbb
es
xor
add
jp
mov
and
das
pcmpeqb
data16
cmp
jp
sub
test
fs
test
adc
push
call
push
push
jg
insb
lods
std
add
add
out
out
jnp
and
push
add
mov
push
mov
xchg
push
push
jg
enter
leave
imul
inc
xchg
jno
push
outsl
add
inc
insl
cmp
mov
je
pop
into
jmp
addr16
inc
cli
jle
mov
mov
lock
fs
cmp
insl
push
pop
xchg
retw
inc
inc
in
or
outsb
in
insb
and
loope
fs
adc
xor
lea
inc
popa
jb
pop
les
out
push
xor
imull
sbb
xchg
imul
fistps
daa
dec
shlb
insl
scas
mov
push
ljmp
sub
mov
jp
ljmp
js
jne
imulb
out
inc
cltd
je
imul
imul
aad
fsubl
addr16
bound
mov
les
dec
imul
jp
mov
dec
dec
popa
leave
xor
push
mov
xlat
popf
pusha
insl
jle
jmp
cmp
nopl
outsl
movsb
push
dec
fs
cltd
add
push
shrb
cmc
cltd
je
push
xor
call
inc
divb
shll
insl
inc
outsb
fisubrs
out
jp
xchg
push
push
cld
ret
sbb
call
mov
and
jp
or
test
xor
in
scas
push
fldl
jp
je
add
pop
hlt
push
inc
and
jno
push
lcall
mov
inc
xor
outsb
call
arpl
enter
je
inc
and
xor
push
mov
jo
neg
shlb
movsl
pop
inc
add
lods
cmp
int3
imul
or
jecxz
imul
inc
xchg
int
je
ror
mov
mov
pop
xor
dec
mov
inc
das
rclb
ja
push
jo
add
outsb
or
imul
sub
add
lds
cmc
leave
mov
xor
mov
addr16
outsl
leave
pop
cmp
add
and
jmp
das
pushl
and
pop
xor
cmpsl
jo
lahf
mov
xchg
shl
sbb
gs
jns
insl
cwtl
sbb
push
ljmp
pop
je
mov
sbb
cmp
dec
pop
inc
cmp
scas
xor
bound
data16
call
mov
jg
pushf
cmp
subb
adc
jbe
in
add
add
push
imul
iret
stos
addr16
push
testb
ds
iret
and
in
mov
and
insb
filds
xor
mov
popa
cmp
imul
mov
mov
out
cmc
out
test
dec
xchg
pop
sub
insb
xor
or
sahf
sub
cmp
dec
call
ds
lahf
mov
out
pop
xchg
or
sub
jmp
dec
xchg
popa
imul
inc
add
std
arpl
imul
jp
cmp
enter
cmp
mov
rolb
sbbb
push
shll
ret
push
inc
or
and
addl
mov
dec
and
loopne
and
je
imul
jo
pop
push
out
sub
jg
adc
cmp
loope
and
mov
subl
jle
movlps
sbb
insb
icebp
out
je
stos
imul
mov
mov
clc
aas
ret
mov
mov
scas
mov
dec
jp
mov
jno
cltd
inc
push
mov
out
add
test
jne
ret
cmc
je
out
das
inc
push
xor
xchg
push
dec
fcmovu
in
fwait
or
add
in
cmp
sbb
jne
dec
xor
adc
je
shlb
fs
ret
adc
push
cltd
inc
outsb
divb
cmc
or
inc
js
cmp
sbb
cmp
mov
shl
in
and
js
inc
and
mov
gs
js
mov
jo
loope
adc
popl
jae
imul
or
int3
ret
jg
je
mov
inc
fs
out
in
getsec
jle
scas
out
sarb
push
mov
add
out
adc
cwtl
sub
dec
push
jmp
jno
sbb
push
outsb
cmp
ljmp
fldt
popa
repz
xor
pusha
push
ljmp
loope
stos
aam
mov
addr16
push
mov
pop
outsb
xchg
shrl
in
std
aaa
jns
je
inc
ds
stos
inc
sub
sbb
in
mov
aad
sarb
popa
xchg
xor
notl
lock
das
pop
jl
adc
push
out
mov
sub
xchg
jge
mov
mov
xor
or
add
and
push
inc
mov
push
jle
pushf
mov
cmp
outsl
fs
cmp
je
insl
lret
mov
imul
inc
cs
cltd
loopne
add
aaa
lret
cmp
sub
fs
xchg
insl
sub
jle
dec
jle
jg
out
ljmp
jp
push
popa
clc
ljmp
jmp
and
push
inc
je
cli
push
push
inc
inc
mov
call
gs
lods
movsb
xchg
pop
lock
push
sub
addr16
in
orb
fstps
push
or
cmp
lock
fs
lods
sub
sbbl
fbstp
xor
inc
mov
jp
dec
out
jno
sbb
xor
mov
xor
sbb
pop
ffree
addr16
fists
xor
mov
dec
jbe
jne
leave
xor
ret
cmp
jge
pop
add
jno
xorb
loop
stos
imul
movsb
shlb
mov
out
lods
add
test
xor
scas
xor
call
mov
sub
push
xor
push
dec
lds
bt
out
cmp
mov
jae
mov
lds
bound
js
sub
inc
add
lret
stc
adc
outsl
fistpll
sub
mov
inc
ss
andl
sarl
mov
int
jg
or
fdivrl
push
add
mov
addb
lods
dec
and
adc
das
add
adc
and
stc
add
addr16
mov
iret
or
test
pop
out
xchg
repz
in
jp
shlb
mov
xor
fs
aam
dec
in
mov
andps
js
jmp
and
fs
sub
je
push
push
dec
in
jecxz
mov
sub
mov
and
cmp
popa
inc
sti
mov
lds
fcomip
fildl
insb
popf
pusha
mov
jmp
xchg
add
je
es
jnp
pop
xchg
enter
xor
or
push
out
stos
add
cmp
jnp
push
data16
jl
and
ud2
test
pop
cmc
fistpl
jae
cld
jnp
nop
je
test
xor
stos
arpl
xchg
ja
aas
outsb
push
xlat
add
mov
std
out
je
pop
mov
dec
sub
insb
pop
nop
mov
lcall
ja
popa
je
jne
aas
add
inc
daa
inc
mov
mov
adc
push
and
push
push
sub
sbb
jle
jl
int
jmp
adc
sti
mov
in
or
std
push
fs
inc
inc
push
or
das
mov
push
push
int3
lea
outsl
test
jbe
in
ds
sub
sbb
mov
insb
orb
push
mov
lcall
sbb
lds
subb
test
pop
add
sahf
pop
arpl
dec
add
scas
push
push
fs
xchg
pop
clc
or
dec
push
dec
inc
out
xchg
movsb
arpl
push
movsl
imul
std
gs
adc
pop
gs
mov
std
cmp
cli
cs
add
xchg
adc
loop
scas
push
sub
xchg
daa
xchg
pop
call
dec
enter
push
nop
xor
push
dec
or
pop
std
cmp
pop
js
or
das
imul
mov
ja
jmp
inc
adc
pop
rorb
xorb
adc
and
sub
jo
shrl
jge
jge
or
outsb
xor
xor
push
je
testb
cmc
jo
andb
cmp
push
pop
fs
cwtl
jl
jns
xchg
shl
ret
js
cmc
jg
arpl
push
sub
mov
addr16
pop
in
je
xchg
or
mov
and
mov
hlt
roll
bound
add
lds
cmp
xchg
aas
and
pop
repnz
cmp
cwtl
sbb
ljmp
adcb
cmp
adc
adc
je
mov
sbb
inc
or
addr16
dec
mov
sub
xor
mov
push
dec
out
cmp
push
mov
inc
lret
push
aas
std
popa
push
lds
push
and
sbb
mov
shrl
outsb
pop
jne
rorl
ret
ja
mov
and
jg
stc
inc
sub
loop
pop
xor
inc
out
inc
jmp
push
fs
out
lds
cmpsl
roll
cmpsb
xchg
mov
sbb
pusha
sub
in
mov
les
pop
enter
into
adc
int
inc
pusha
cmp
es
mov
mov
push
inc
cli
mov
push
push
pcmpeqb
ret
lods
outsl
inc
aas
xchg
in
add
jg
rolb
xor
mov
mov
pop
mov
mov
rorb
aas
nopl
push
adc
xor
popf
insl
cld
adc
jns
jp
add
mov
cld
sub
push
in
in
pcmpeqb
shlb
xchg
loope
lods
mov
movsb
loopne
daa
pop
jge
cmp
sbb
movb
lds
lret
add
xor
xchg
sbb
cld
jg
jnp
ljmp
inc
mov
adc
pop
mov
test
pusha
loope
testl
test
in
jnp
arpl
inc
mov
movsl
cld
sub
fwait
outsl
jecxz
push
adc
xorb
lret
or
mov
dec
cwtl
insl
cmp
movsl
ljmp
outsl
pop
adc
bound
jp
in
and
dec
bound
pop
mov
das
cmpsb
and
je
fstps
mov
sub
loopne
mov
xor
jge
rcrl
mov
daa
fs
add
aas
dec
aam
ret
add
rcll
and
into
xlat
jge
mov
fsubs
adc
dec
mov
and
cmp
lret
je
ret
sti
ss
mov
imul
or
jl
or
jle
cmp
dec
int
cmp
mov
outsb
cmp
je
lea
pop
outsb
call
inc
in
xchg
and
fs
fs
sub
xchg
mov
test
sbb
imul
pop
push
xor
aas
xchg
insl
cmp
aas
mov
add
pop
int
or
popa
iret
in
clc
fsubr
stos
push
add
icebp
je
std
or
pushf
lock
les
out
mov
push
add
fcoml
dec
xchg
mov
push
push
jp
imul
fldcw
xchg
dec
xchg
shll
xchg
std
jbe
jp
pop
push
sub
cmp
loopne
dec
push
and
int3
pop
sub
mov
push
cmp
or
push
scas
or
nop
test
pushf
lods
xorl
jp
add
dec
cltd
loopne
add
icebp
enter
in
ret
imul
inc
xorb
es
lock
ret
cmpl
mov
and
gs
sub
call
add
fldt
mov
pop
and
jmp
loopnew
add
push
test
xor
xchg
scas
ret
in
sub
adc
xor
xchg
out
sahf
jg
dec
xchg
in
fisubrl
xchg
loopne
aaa
int
je
loopne
lret
fidivrs
sub
insl
orb
sbb
xor
stc
cmpsl
mov
mov
cmp
cmpsb
arpl
push
or
cmp
imul
inc
push
dec
pop
jae
mov
push
dec
and
pop
cmp
mov
imul
adc
cwtl
push
cs
aas
jo
in
jne
push
aaa
xor
xchg
ja
pushf
lret
je
mov
sub
or
cmp
dec
jno
xchg
aas
stos
in
popa
daa
std
pop
sahf
sub
arpl
mov
xchg
add
xlat
mov
mov
sbb
insl
xchg
out
pusha
mov
sub
lock
push
pop
test
mov
and
mov
lock
hlt
mov
push
xor
popf
push
mov
pop
psrlw
dec
jno
ljmp
jb
xchg
push
add
pshufw
pop
into
push
dec
xlat
xchg
aaa
jno
mov
jg
imul
or
or
mov
dec
insb
call
push
mov
ljmp
push
or
dec
jmp
rcrl
aas
clc
add
xchg
movsl
arpl
imul
insb
push
int3
mov
sbb
dec
sbb
lods
xchg
aaa
jmp
je
push
fldt
ljmp
in
sub
bound
sahf
and
loopne
inc
adc
cltd
pop
mov
aas
mov
call
cmpsl
pusha
clc
pop
push
xchg
idivb
mov
out
add
stos
xor
sbbl
push
cmpsb
shlb
je
mov
in
inc
and
pop
repnz
xchg
imul
dec
add
dec
outsb
out
xor
jp
and
dec
ret
lock
jns
jnp
stos
sub
std
out
cmpsl
out
js
jmp
std
mov
ror
divb
popa
in
mov
scas
jno
pushf
fsqrt
mov
pop
into
mov
aas
outsl
cmpsl
add
sbb
push
cmp
bound
stos
mov
push
mov
push
pop
cmp
in
insl
std
out
jecxz
dec
and
out
add
outsl
ds
jo
push
loopne
loop
dec
nop
outsb
sarb
dec
lods
dec
mov
outsl
mov
jo
stos
pop
es
ficoml
out
push
or
stos
ss
push
lahf
push
iret
fiadds
test
lret
push
enter
push
adc
fdivrl
sahf
ficoml
repnz
cli
mov
shll
mov
mov
jg
gs
push
dec
rdmsr
loopne
lea
out
jae
in
lds
movl
pop
iret
test
push
and
pop
and
sub
out
add
jg
cmp
enter
and
shlb
pop
push
lcall
js
imul
mov
idiv
cmp
mov
bound
pop
nop
shr
xorb
mov
filds
push
push
imul
jno
out
jl
and
out
push
mov
push
jmp
fs
sbb
pop
jmp
adcb
xlat
aas
jnp
das
push
divl
popa
mov
outsl
stc
mov
je
or
push
sub
ljmp
dec
das
lock
insb
xor
sub
fs
mov
out
dec
inc
cmpsb
je
jbe
add
pusha
sub
hlt
fistpll
mov
in
mov
data16
dec
dec
lret
pop
pop
fwait
je
stos
out
in
xlat
aam
inc
pushf
jg
repnz
xor
fs
data16
mov
or
ljmp
mov
dec
inc
loope
cld
sub
call
mov
shll
test
xchg
or
pusha
pop
mov
test
adc
outsl
sub
nop
fimull
shl
inc
mov
inc
frndint
mov
push
mov
fsub
mov
push
mov
outsl
int3
sub
dec
pushf
sbb
je
adc
sub
idivb
imul
and
movsl
sub
dec
mov
insl
js
fdivs
out
xor
adc
jp
andps
sub
cmc
mov
pop
cmp
movsl
mov
sub
xchg
adc
ss
and
sbb
pusha
leave
and
cwtl
xchg
pop
gs
and
push
idivb
negl
mov
xor
cltd
movsl
inc
into
mov
movsl
jp
push
push
mov
inc
mov
push
cmp
es
test
and
add
cmp
pop
lcall
pop
call
and
push
add
je
jne
cmp
sub
jb
push
daa
adc
pushf
negl
fisttpll
sti
arpl
je
cmpsb
jge
sub
push
xchg
out
inc
mov
sbb
ficompl
test
pop
push
cld
xchg
out
xchg
out
jge
or
pop
pop
aam
scas
cmpsb
sub
fistps
jl
dec
pcmpgtw
mov
adc
movq
inc
std
xor
pop
int
lahf
imul
jae
pop
mov
fists
aam
pop
clc
je
pop
add
mov
mov
out
mov
inc
mov
das
je
or
jg
outsb
jnp
sahf
add
lock
add
cltd
addb
sub
outsl
roll
stos
int3
fimuls
ljmp
push
fsubrl
and
add
lahf
push
insl
stc
cmp
and
push
xchg
inc
lea
mov
outsb
inc
adc
and
or
jne
stos
incb
mov
adc
cld
shrl
and
je
out
fisttpl
cmp
xor
mov
cli
es
or
sub
sarl
mov
mov
pop
jg
jno
jns
loopne
shll
out
push
pop
jnp
xor
ret
add
jb
pusha
mov
stos
popf
mov
sub
push
jmp
mov
in
add
mov
push
mov
cmp
repnz
into
push
iret
sub
fisttpl
scas
and
pop
imul
je
push
or
sbb
das
jno
mov
pop
or
in
aas
std
imul
shlb
fistl
nop
xor
xor
lcall
test
inc
cmp
or
and
push
cltd
pop
stos
out
movsb
imul
inc
lock
je
icebp
pop
inc
repnz
dec
ds
mov
adc
ds
adc
add
dec
std
fcoms
lock
dec
jno
xor
xor
enter
icebp
inc
lock
repz
lods
insb
push
clc
lock
push
jge
dec
adc
push
fs
dec
push
inc
push
mov
pop
mov
fcmovnbe
xor
rcl
in
je
push
fldenv
adc
inc
leave
mov
jno
fistl
fs
jmp
je
or
pusha
jge
jge
mov
or
ja
cltd
inc
mov
mov
dec
sub
testb
lret
mov
andps
sub
pop
out
adc
ljmp
lods
cltd
sub
xor
inc
lret
mov
call
sbb
add
and
jne
aad
sahf
fs
movsb
mov
jne
push
out
inc
movsl
xchg
js
arpl
call
movsl
frstor
out
int
push
ljmp
inc
addb
lock
add
jne
iret
out
jo
adc
mov
das
es
or
jmp
dec
adc
fs
pushw
jp
dec
cmp
dec
xor
loop
push
dec
xor
lods
push
mov
adc
fbld
dec
cmp
jne
jp
mov
jae
dec
or
push
je
outsl
scas
loopne
fdivrl
mov
push
mov
notb
imul
lods
icebp
push
add
cmp
in
jo
outsl
out
outsb
jns
std
mov
push
jmp
popl
pop
xchg
add
sub
mov
lret
imul
sti
gs
add
lock
and
stc
pop
shrl
outsl
fsubr
std
loope
repz
outsl
xchg
test
mov
test
or
insb
aam
push
or
jnp
jg
inc
stc
lea
inc
fisttps
gs
cld
push
call
dec
mov
sub
sub
int3
lahf
or
inc
push
shrl
adc
stos
ds
jmp
xchg
add
xchg
pop
pop
mov
outsl
call
pop
fidivrl
xor
push
dec
in
jo
daa
mov
aas
imul
movsb
dec
in
ljmp
negb
aas
mov
sbb
push
test
je
ljmp
outsl
xchg
daa
add
or
je
stc
addr16
call
outsl
in
push
jo
lock
scas
jmp
pop
cmp
ds
dec
addl
mov
fbstp
repnz
cmp
mov
out
pop
cmpsb
pushf
es
sbb
popa
loope
lds
mov
mov
rclb
adc
inc
mov
mov
jmp
xchg
insl
and
je
movsl
movsb
dec
les
mov
cmp
bound
into
sbb
imul
push
cltd
cmp
out
into
call
test
xchg
gs
nop
pop
rcl
push
je
or
xlat
imul
outsb
js
jmp
scas
add
out
jae
xor
push
jl
dec
add
dec
mov
ss
mov
nop
mov
jne
std
mov
inc
adc
gs
out
mov
outsl
mov
pop
dec
insb
incb
addb
fs
sub
imul
sarl
dec
push
movsl
gs
add
xchg
jb
push
cmp
or
je
je
mov
dec
fistpll
ljmp
aam
and
enter
out
aas
outsl
movmskps
dec
dec
cmp
roll
in
movsl
dec
je
js
add
push
mov
lock
jns
repz
test
add
andb
sahf
jne
sarl
mov
push
cmp
or
dec
adc
shlb
and
push
insl
out
outsb
dec
sub
loope
inc
movsb
add
jmp
xchg
int3
sub
enter
call
je
pop
push
jo
push
pop
mov
je
dec
lods
aas
imul
fistpl
loopne
pop
std
aad
and
out
aas
xor
rcrl
push
cmpsb
into
ljmp
jo
cmpsl
xor
push
scas
popa
insb
ja
hlt
repz
lret
dec
mov
jle
jmp
aaa
mov
jns
fbld
jp
cmpsl
inc
rorb
inc
push
push
sarb
outsl
adc
xor
loop
mov
loope
xor
je
loope
ret
jno
xor
fistl
adc
mov
loopne
insb
jge
push
in
inc
ror
and
lret
mov
test
sbb
es
arpl
call
imul
in
jns
lcall
in
jmp
fcmovbe
cmp
sarb
inc
xor
in
das
add
daa
dec
adc
enter
xchg
pusha
outsl
test
lods
inc
clc
sbb
cmp
jb
loope
push
or
xchg
vmovntps
push
push
clc
daa
push
lret
daa
and
das
adc
pop
xor
scas
push
rcrl
fwait
arpl
inc
sbb
cmp
shlb
mov
pop
incl
sub
ja
repnz
iret
sti
dec
jbe
je
sub
scas
loope
arpl
int
or
inc
imul
cmp
stos
pop
leave
das
jo
sbb
inc
push
inc
ss
jecxz
call
push
lahf
dec
inc
imul
inc
jb
out
pop
lods
and
js
out
pop
jns
aad
clc
push
xchg
nop
ds
daa
pop
mov
cmp
sub
inc
or
lods
inc
es
jp
add
stos
cmp
test
sbb
adc
out
repz
je
arpl
pop
movsl
mov
insb
add
jbe
dec
lea
lea
in
out
push
push
sti
out
movsl
out
push
dec
mov
decb
nop
mov
dec
dec
push
call
cmpsl
daa
jg
cmc
lahf
cld
mov
lock
pusha
scas
lock
in
ucomiss
mov
mov
mov
insl
mulb
popf
mov
hlt
pop
out
jae
js
xor
icebp
repnz
daa
jmp
mov
nop
loope
mov
movsl
jb
lock
fdivrl
mov
out
fbstp
cmpsb
mov
lds
std
js
test
adc
shlb
cltd
jl
push
jae
mov
jno
and
bound
out
daa
push
jne
fs
dec
sub
add
repz
mov
int3
mov
jmp
imul
psraw
shl
aas
or
push
mov
fldt
mov
dec
icebp
mov
adc
je
outsb
add
dec
les
jno
test
jns
push
or
cmp
push
xchg
insb
ret
mov
sub
loope
push
cmc
mov
pop
aam
inc
lret
mov
inc
xorb
sarb
sbb
leave
int3
push
rcl
pop
sub
in
ret
pop
pop
imul
ror
int
add
outsl
pop
dec
sete
cmpsb
je
cmp
push
nop
fs
int
shlb
xchg
cmp
and
scas
mov
je
fs
mov
inc
mov
push
xchg
inc
call
mov
xchg
dec
mov
jne
not
aam
xchg
les
mov
jl
sbb
sbb
jl
and
xchg
mov
shll
fs
or
sub
cmp
fdivl
mov
test
lret
xor
cmp
sub
or
pop
dec
cmc
sub
unpcklps
mov
mov
add
insb
enter
sub
push
cli
push
push
faddl
lods
gs
popa
push
add
pusha
lods
fucomip
cmpsl
push
jp
outsl
dec
lret
imul
dec
les
add
hlt
lret
imul
andl
mov
dec
lock
pop
je
out
inc
xor
or
es
imul
gs
dec
lahf
outsl
mov
jns
push
fucomip
jno
mov
add
sbb
sub
imul
hlt
cmp
xor
xchg
inc
stc
aas
lods
and
pop
jns
int3
sti
je
mov
leave
movb
push
dec
imulb
cmp
mov
jmp
jg
mov
push
cmc
jae
push
je
ret
movsl
popf
pop
shlb
pop
movsl
out
dec
pop
sub
mov
popa
insb
jl
pop
je
int
push
fimuls
mov
push
mov
jmp
jne
adc
mov
xchg
hlt
inc
or
add
cwtl
ja
push
mov
xchg
jb
stc
dec
js
jno
push
cltd
cmp
lahf
or
rolb
inc
insb
jno
jo
orl
mov
and
int
call
aaa
stc
add
cwtl
shll
pop
sub
fldl
pop
faddl
cwtl
inc
test
sub
push
xchg
jns
cmp
xchg
enter
and
lret
dec
arpl
and
xor
sub
sub
push
sub
mov
xor
aam
call
jge
or
jno
jp
imulb
pop
mov
lret
mov
lock
jo
daa
sbb
cmp
sub
test
out
xchg
push
jg
inc
cld
mov
inc
sub
ja
adc
shr
mov
jge
iret
clc
lcall
aas
dec
test
push
les
xor
movsl
cmpsl
dec
sub
jg
sub
popa
es
adc
jns
pop
mov
fnsave
pop
jp
es
adc
inc
push
sub
addr16
lods
dec
adc
inc
je
enter
aad
icebp
out
call
and
pop
and
lock
scas
add
cmp
addr16
ljmp
dec
and
push
aas
std
aad
adc
sahf
xchg
mov
pop
jne
push
add
faddl
imul
fs
and
vpperm
push
shlb
jae
jno
test
fisubl
frstor
xchg
or
sbb
mov
loop
push
rcll
in
cmp
jns
je
jbe
loop
push
push
in
xor
or
je
test
out
xor
fxtract
sub
xchg
fwait
xor
scas
jns
testl
aam
push
mov
into
jae
outsb
fidivrs
mov
adc
dec
insl
cmpsb
lods
repnz
lock
jns
mov
sbb
jb
gs
jecxz
cmp
ror
test
mov
insb
dec
mov
push
pop
xor
hlt
bound
shrl
lods
rolb
mov
lret
push
jmp
cmpl
push
movsl
std
pop
cmpsb
test
loop
xor
push
mov
das
adc
push
sub
adc
pushf
mov
cli
scas
xchg
push
cltd
sub
mov
and
adc
jle
out
test
int3
inc
mov
std
call
mov
jg
jge
test
cmp
push
cmc
add
fldt
insl
enter
ds
ret
imul
in
into
adc
in
mov
insl
push
cli
pop
popf
xchg
lahf
cld
scas
xchg
adc
test
mov
cltd
push
mov
mov
test
divb
outsl
ja
push
imul
in
xchg
cmpb
insb
push
cmpb
mov
jno
out
mov
push
cmp
mov
out
mov
jg
insb
je
shll
lock
and
xor
daa
ret
mov
xor
imul
dec
add
sti
int3
inc
cmp
out
sub
mov
out
or
lods
jns
popf
pop
pop
mov
mov
mov
cmp
and
ljmp
pop
mov
sbb
push
and
dec
gs
movsb
jp
pop
gs
cmpsl
cwtl
pop
mov
lock
out
daa
xor
cmp
call
scas
adc
and
fnstcw
mov
jb
jns
pop
or
jp
jmp
cmpsl
scas
lds
push
mov
inc
or
sbb
pop
arpl
imul
mov
imul
pop
xchg
aaa
push
push
jb
outsl
cmpl
je
pop
stos
popa
adc
sbb
push
xchg
mov
sub
jo
cli
addb
dec
gs
gs
fbld
push
jl
pop
push
and
out
out
das
sbb
inc
jge
mov
out
int3
pusha
lock
imul
mov
stos
push
inc
jl
popa
cld
push
mov
idivl
out
mov
int
xor
inc
jmp
std
inc
and
je
fst
imul
stos
xchg
mov
or
test
push
dec
adc
lret
les
push
fidivl
fistpll
aam
sub
jne
gs
push
cmp
cmc
loope
mov
test
bound
dec
cmpsb
decl
insb
hlt
shrb
push
frstor
jp
add
add
pop
dec
enter
xor
sbb
repz
shrb
or
xor
or
jmp
xchg
push
inc
add
dec
inc
imul
inc
xlat
loop
in
jbe
daa
push
gs
js
mov
and
or
sub
cmp
mov
imul
or
jg
out
adc
imul
int3
pop
dec
dec
les
mov
inc
xchg
popf
sbb
cmp
out
faddl
enter
mov
push
cld
pop
loopne
repz
dec
bound
cmpl
ja
adc
subl
lods
out
stos
divl
push
ret
and
inc
push
insl
push
mov
xchg
dec
dec
lock
mov
jno
xchg
test
arpl
cmpsl
cs
xchg
push
outsl
jno
rclb
mov
mov
push
mov
jne
push
push
sub
xchg
mov
out
push
lods
jg
out
fistpll
out
inc
ss
add
cld
sbb
jl
std
insb
cmpsl
add
shlb
jge
cmp
gs
cltd
pop
pop
lock
push
hlt
je
xor
cli
xor
sub
mov
xor
jle
out
cltd
popf
mov
or
jg
je
loope
cmp
addr16
sahf
popf
fs
and
jmp
add
repnz
dec
jno
gs
add
jns
xchg
push
sbb
faddl
jge
add
sub
aas
cmp
adc
in
adc
daa
add
dec
adc
xchg
dec
call
and
dec
ret
inc
je
or
inc
xor
lods
sbb
pushf
cmpsb
sbb
jbe
pop
add
mov
int
daa
lds
jmp
test
add
add
call
insl
mov
or
xchg
subl
insb
jecxz
and
vpacksswb
lret
sub
mov
gs
push
mov
das
inc
push
je
iret
cwtl
mov
cmp
ror
in
mov
mov
shlb
and
inc
fldt
inc
add
out
out
stc
xchg
pusha
push
sbb
jg
sarl
je
mov
icebp
pop
jle
mov
clc
jg
imul
je
pop
dec
imull
push
in
inc
sbb
lahf
mov
sbb
daa
pop
scas
sub
mov
fs
push
pop
das
xor
push
xchg
jmp
out
in
popa
imulb
mov
mov
push
pushf
cmpsl
call
scas
ss
pop
call
xchg
lock
mov
cmpsl
aas
jbe
and
shlb
ss
jg
pop
sub
dec
sub
mov
add
sbb
push
push
mov
lock
jae
mov
jns
in
inc
je
push
add
inc
loopne
je
jg
mov
push
sub
stc
out
scas
ljmp
adc
jl
mov
std
test
outsb
lods
mov
inc
mov
aas
ljmp
in
mov
popa
std
or
or
pop
je
test
dec
or
insl
mov
mov
fs
push
and
imul
shrb
mov
hlt
popa
pop
xchg
jbe
gs
jmp
and
xor
out
das
mov
stc
dec
mulb
mov
push
popa
pop
mov
mov
das
mov
stos
sub
outsb
int
sbb
fs
jnp
mov
test
pslld
movsl
imul
cmp
je
jbe
rcrb
pop
add
cmpps
xor
insb
push
xor
mov
daa
out
popa
xchg
jae
lcall
mov
mov
push
dec
lahf
push
shll
cmp
dec
mov
in
mov
push
inc
xchg
dec
xchg
jp
pop
cmpsl
or
and
xchg
xchg
xor
mov
cmp
pop
adc
sub
pop
jo
leave
shlb
out
insl
inc
xchg
inc
add
enter
aaa
idivb
pushf
cmpsl
lret
xor
fidivrs
fsubp
ffree
pop
sbb
test
daa
rcl
pusha
jmp
cld
cwtl
ffree
or
xor
cli
idivl
cmpb
mov
int3
test
ret
jbe
lret
xchg
and
lds
pop
dec
add
aad
adc
loop
aas
std
hlt
ret
push
inc
inc
add
popf
dec
fdivrs
out
inc
insb
xlat
mov
je
enter
or
sti
push
jnp
lahf
and
sahf
in
and
xlat
es
imul
mov
mov
pop
or
mov
lret
imul
in
push
and
adc
rol
xchg
daa
dec
sub
jno
imul
std
repnz
or
and
push
xor
inc
icebp
lret
out
sbb
inc
repz
lods
mov
pop
mov
push
and
adc
push
jne
jp
pusha
aaa
or
push
shll
inc
cmp
push
pop
scas
push
pop
push
mov
pusha
leave
adc
fimuls
fs
ja
insl
xchg
pop
pop
mov
pop
jg
inc
insb
clc
fcmove
and
adc
push
in
sub
addl
outsb
push
loopne
pusha
jl
jg
push
gs
mov
xlat
push
push
clc
cmp
dec
jmp
dec
jno
das
sti
iret
xlat
je
mov
jle
pusha
push
fdivl
mov
pop
mov
jecxz
sub
movsb
dec
lea
aam
les
xor
fdivrl
xchg
cmp
lock
push
clc
je
jb
adc
inc
xchg
fs
xchg
jle
mov
repz
imul
mov
push
enter
fdivr
test
inc
pop
push
ljmp
shlb
in
cltd
aas
enter
pop
lock
movsl
and
sbb
lock
das
jae
in
imull
push
sahf
daa
jg
lods
icebp
or
dec
enter
pop
mov
inc
dec
jo
sub
insl
hlt
popf
sub
rorb
in
sub
push
xchg
cltd
dec
out
test
addr16
leave
push
loope
inc
pusha
jg
insb
add
inc
rorb
push
cs
cltd
insl
fucomip
std
fs
xchg
mov
daa
cmpsb
push
pushf
jbe
xor
std
cmpsb
sbb
data16
insl
movsb
or
mov
pop
pop
std
push
xor
lcall
mov
add
lahf
mov
cmpsb
repz
jo
xor
pop
out
ss
adc
pop
int3
push
push
jno
fwait
cmp
ficompl
jae
gs
jae
jo
pop
lcall
bswap
gs
add
cli
fldl
in
in
gs
mov
lret
sahf
lea
je
and
dec
ret
rorl
sub
pop
int
push
jecxz
gs
popf
dec
mov
and
jg
inc
xchg
aad
mov
inc
pop
xor
dec
inc
enter
mov
icebp
outsl
rcr
mov
lahf
sub
sbb
push
int3
out
jle
inc
mov
jno
push
mov
mov
scas
add
mov
fwait
lret
xor
push
js
into
popa
cmp
cli
out
jae
mov
adc
int
dec
aas
or
jbe
cmpsb
fstpl
fstps
das
fcmovnbe
sahf
scas
fsts
shll
pushf
imul
xchg
test
fs
sbb
xor
cmpsb
popa
pop
out
xchg
add
out
subl
adc
bnd
cmp
imul
pop
inc
lock
dec
enter
lods
ret
frstor
repnz
paddsw
cmpsb
into
and
and
rcll
pop
loop
scas
mov
ljmp
push
xchg
sub
in
arpl
cmp
bnd
sbb
sbb
jo
movsb
das
push
das
inc
dec
test
testb
popf
jg
fwait
mov
dec
pop
out
jmp
andl
mov
arpl
mov
dec
mov
mov
cmp
in
pop
mov
add
in
sahf
and
xor
mov
push
fwait
adc
xchg
pop
or
mov
or
std
in
inc
jo
xlat
or
push
and
paddsw
or
push
mov
dec
fidivrs
and
lret
aaa
mov
jge
fistpll
pop
or
testl
pop
lea
and
add
lock
xchg
push
lahf
add
jle
mov
imul
enter
stos
push
push
mov
sub
cs
in
gs
fcoms
push
cltd
mov
incb
int3
or
and
ret
ficoms
fnstsw
dec
jno
mov
dec
mov
fwait
mov
add
push
jno
pop
sub
outsb
or
arpl
rcl
cmp
dec
add
dec
lods
push
dec
or
cmp
arpl
nop
rcrb
cs
dec
stos
push
clc
in
inc
push
adc
std
int
or
mull
addr16
or
jl
pop
iret
jecxz
jae
sub
mov
aam
shll
push
mov
in
sub
daa
subb
adc
lret
push
adc
push
ret
mov
inc
fs
je
daa
push
insb
mov
lcall
sub
fs
push
pop
mov
ja
cmp
add
mov
aas
pushf
popf
cmpsl
repnz
cmp
nop
mov
lret
cmpsb
mov
sbb
jnp
shlb
xor
adc
mov
into
insb
fistps
pop
jl
dec
jg
nop
cmp
aas
push
sti
mov
pushf
jne
lret
mov
pop
jnp
mov
push
sbb
shll
mov
push
mov
ljmp
fbstp
push
test
xor
push
out
out
mov
lds
and
cmp
flds
in
cmp
ja
sbb
sbb
rep
fadd
loop
clc
inc
adc
shlb
stc
push
inc
push
cmc
mov
aas
shrl
fldl
sub
addr16
aam
fimuls
dec
inc
and
and
cmpsl
gs
mov
int3
add
mov
sub
out
leave
add
and
pop
cmpsl
out
pushf
test
or
out
arpl
sbb
add
push
inc
icebp
aaa
mov
idivl
mov
xor
mov
dec
dec
push
jle
add
fsubrs
mov
xchg
cltd
or
sub
pusha
dec
iret
imul
fnstsw
int3
xor
mov
rol
cli
xchg
lahf
insl
sub
mov
repz
or
jmp
adc
mov
inc
push
and
bnd
imul
in
add
int3
sub
cmpsl
cmp
push
push
gs
movb
xor
je
addr16
gs
pop
xor
mov
out
icebp
in
incb
xor
add
pop
inc
pop
lods
sub
cmp
notb
jo
dec
int3
call
or
into
lods
jg
mov
mov
or
push
inc
push
mov
fisubrl
dec
jmp
daa
mov
lock
mov
xor
fs
testl
out
cmpsl
cld
lret
push
pop
jno
adc
or
sarl
adc
data16
xchg
or
andl
inc
fistpll
daa
pop
cmp
test
outsb
into
ss
push
lcall
sbb
and
mov
mov
outsb
adc
out
push
in
imul
int3
xchg
jg
stos
mov
push
mov
shrl
loope
gs
in
ljmp
call
fistl
test
in
call
insb
or
mov
pop
or
dec
popa
out
std
mov
out
cmp
and
push
insl
loopne
test
jg
insb
sti
pop
cli
mov
push
int
cmp
fcoml
jg
in
int3
lahf
in
adc
aas
jnp
in
lock
daa
repz
pop
test
imulb
mov
popa
imul
sub
cmpsl
xchg
push
aad
mov
add
decb
jl
mov
pop
nop
or
std
adc
in
out
push
dec
mov
ljmp
add
jge
outsb
inc
adcb
test
push
out
pop
std
sbb
lds
jge
fldenv
insb
or
mov
cmp
dec
cmpsb
inc
data16
push
in
inc
incb
int3
jno
sbb
xchg
sbb
dec
lcall
push
pop
cmc
ss
fidivl
mov
cld
xor
pop
sar
imul
xor
int
shlb
or
aaa
xor
popa
cmpsb
aad
stos
out
inc
sbb
xor
sub
push
dec
aad
movq
es
js
sub
rcr
out
jmp
mov
cmp
pop
addr16
sbb
sysexit
mov
ror
loopne
je
fwait
push
push
and
cld
fsubrp
fisubrs
and
mov
inc
and
push
je
xchg
int3
dec
push
adc
pop
mov
inc
push
mov
dec
sbb
insl
adc
dec
movsl
mov
negl
loope
push
jg
pop
xchg
lock
cld
dec
out
push
cmpsb
gs
aas
dec
inc
mov
je
push
outsl
mov
sub
cs
mov
dec
mov
jnp
pop
scas
lock
aad
dec
js
and
push
and
out
data16
cltd
test
jg
movnti
imul
out
or
adc
imulb
sbb
cmpsl
rclb
mov
sub
ljmp
fistpll
and
fwait
shll
jns
rorb
xor
cmp
sub
imul
ret
xchg
mov
or
inc
iret
test
adc
xchg
lock
xor
and
inc
popa
add
lods
loopne
mov
into
cwtl
xor
mov
js
nop
in
jo
jbe
insb
sti
int
mov
test
or
xor
or
xchg
out
roll
jnp
test
stos
push
addr16
out
fs
in
pcmpeqb
in
push
jmp
and
insl
or
inc
xchg
adc
int
data16
out
dec
icebp
jle
jnp
jg
push
or
test
out
xchg
mov
pop
mov
push
push
push
or
mov
popl
test
mov
incl
push
int3
pop
je
push
mov
mov
dec
outsb
dec
mov
or
mov
or
mov
jmp
outsb
ret
ret
pop
jbe
je
and
push
rorb
outsl
xor
push
xchg
jns
insl
gs
adc
xchg
mov
push
lahf
insl
sub
addr16
inc
or
cmp
test
leave
repnz
addr16
sbb
pushl
call
sarb
call
xor
adc
sbb
pop
out
imul
int
pushf
ss
daa
sbb
xchg
and
adc
push
mov
outsl
je
push
in
push
jg
lret
jns
and
push
rcrb
sub
push
cmp
notl
out
push
mov
lock
mov
cmp
es
pop
nop
movsl
mov
dec
fs
jle
insb
mov
ja
xrelease
pop
or
xchg
lods
ret
test
jmp
bound
adcb
nop
popa
cltd
sub
shlb
enter
push
and
or
pop
inc
loop
adc
rclb
fldcw
arpl
fcmovbe
fs
mov
push
pop
jns
sbb
out
dec
push
push
xchg
cmp
pop
dec
js
xchg
gs
scas
sbbl
jp
ret
add
mov
pusha
cmp
dec
mov
or
clc
mov
imul
push
xchg
mov
or
mov
stos
jns
fs
dec
push
aas
loop
jo
xor
fisubrl
jo
outsb
push
dec
lods
rcl
arpl
shrb
push
shll
adc
cmp
adc
xor
rep
scas
inc
out
sub
xchg
cwtl
mov
popa
jns
fiadds
je
cli
pushf
push
popf
es
add
sahf
mov
imul
inc
out
clc
out
add
addr16
fimuls
xchg
insb
les
mov
push
fdivrl
mov
mov
pop
cmpsl
pop
das
dec
sarb
arpl
push
out
add
cmpsb
not
je
push
imul
cmp
adc
lcall
inc
mov
inc
or
push
ret
lret
inc
stos
pushf
jae
adc
and
ss
shlb
gs
and
xchg
fdivrs
fnsave
imulb
icebp
xchg
popf
add
jge
push
movl
sbb
add
sbb
mov
add
pop
mov
add
inc
aam
inc
out
inc
test
pop
adc
ljmp
fimull
mov
nop
push
pop
dec
cs
cltd
dec
mov
jecxz
sub
adc
shrl
sub
shrb
ljmp
cmp
sbb
mov
insb
fnop
dec
out
into
dec
inc
mov
ret
or
es
hlt
addr16
add
mov
jecxz
ds
mov
and
xchg
es
shl
lahf
ja
fucomip
pushf
sub
lods
jp
fs
fwait
jmp
xchg
paddsb
add
mov
das
mov
stos
pop
jle
popf
es
in
jg
hlt
cmpsl
sbb
mov
sub
icebp
push
fidivl
lock
mov
imul
arpl
jno
shlb
aas
shll
cltd
mov
push
insl
adcl
xlat
sbb
jo
lds
enter
dec
dec
popa
ds
inc
test
add
xlat
pop
jl
cld
daa
jbe
cmp
jno
adc
pop
popa
pop
push
movb
push
enter
inc
sbb
inc
mov
cmp
pop
sub
push
pop
or
or
xchg
test
sbb
je
shlb
jecxz
pop
mov
sub
mov
std
cwtl
ficomps
sbb
mov
les
adc
call
push
loopne
stc
xor
cmc
out
ret
mov
xchg
mov
mov
shl
inc
dec
das
sub
mov
cmc
bound
fmull
ja
and
mov
sub
pop
cltd
jmp
mov
gs
pusha
out
std
gs
cwtl
lds
push
inc
cmp
jecxz
movsl
jnp
inc
mov
jnp
xor
or
outsl
fisubl
decb
je
dec
jle
sbb
insb
sbb
push
pop
jmp
pop
int3
testb
pop
nop
jns
pop
dec
cld
icebp
mov
into
adc
insl
call
in
mov
push
sbb
push
or
push
clc
cltd
mov
pop
gs
and
insl
and
lret
inc
jno
lds
repz
cmp
insb
jnp
pop
mov
xor
imul
dec
add
pop
popa
jnp
dec
sub
push
outsb
xor
xchg
and
dec
push
lret
fiadds
sar
pusha
gs
imul
lret
fnstcw
leave
jo
test
mov
push
shr
push
es
mov
sub
xor
or
outsb
cmpsb
mov
or
fmull
jecxz
and
inc
pop
insl
bound
js
pop
sar
jecxz
sbb
addr16
jb
sahf
nop
xlat
xchg
and
das
aas
xchg
xor
or
popa
dec
mov
fnstcw
adc
inc
shrl
daa
jmp
jno
out
lahf
aaa
popa
cli
push
pop
jp
mov
imul
insl
dec
scas
aas
lds
mov
aas
into
or
dec
mov
call
xchg
mov
addr16
clc
push
stos
imul
in
push
jge
and
push
cli
icebp
scas
jle
out
jge
das
xchg
or
jg
xchg
lahf
mov
shrl
mov
jae
inc
test
adc
sbb
add
or
inc
loope
loope
add
sbb
cmpsb
js
fs
ds
cmp
nop
cli
lahf
fnstsw
or
outsl
pushf
out
pop
leave
lea
dec
xchg
and
mov
mov
sbb
daa
push
fcoml
lcall
pusha
jge
and
daa
add
and
sub
inc
inc
inc
test
ds
dec
gs
pop
mov
push
lret
je
dec
jle
jmp
int3
std
addr16
mov
insb
scas
pop
sbb
stos
outsb
bnd
loope
add
mov
push
imul
adc
fs
and
lock
je
xor
dec
test
push
xchg
aas
sub
inc
testl
push
int
pop
mov
cmpl
sahf
jbe
xchg
pop
sahf
pop
add
imul
lcall
into
fs
outsl
pusha
cmpsl
mov
bound
sbb
mov
sub
xchg
repz
enter
jg
pushf
xchg
loope
out
adc
mov
mov
movsl
mulb
inc
mov
aas
mov
stc
xchg
xchg
dec
jo
cmp
mov
sub
mov
popf
clc
and
sti
scas
push
push
insl
or
cltd
out
sub
mov
mov
arpl
rcrb
ja
lds
repz
pop
jo
jg
sbb
imul
push
mov
xchg
pop
fidivrs
aam
in
mov
fs
xchg
cmpsl
ljmp
mov
pop
adc
or
jl
pop
ljmp
pop
dec
xchg
sbb
mov
arpl
sbb
mov
mov
jge
fs
rorb
push
push
nop
daa
mov
cld
sti
and
aaa
cmpsl
sarb
mov
lahf
imul
sti
sbb
fnstenv
hlt
test
push
fldt
je
bound
push
clc
mov
xlat
lds
fildl
fdivp
push
xchg
in
sbb
add
push
icebp
xor
sti
das
rcrb
sub
mov
call
cmc
jle
mov
fwait
je
push
mov
jg
aam
sub
jne
frstor
push
ret
or
pop
loopne
shlw
jmp
mov
loope
cmpsb
pushf
sti
nop
push
mov
call
push
pop
jg
outsl
push
filds
scas
lret
mov
je
jae
pop
pop
leave
repnz
das
mov
gs
imul
ss
dec
jp
out
std
xor
icebp
push
leave
inc
ret
das
jg
aas
call
pop
xor
gs
daa
lcall
hlt
and
popf
cs
push
jns
mov
fisubrl
mov
js
push
push
pop
add
outsl
das
sbb
ja
and
loopne
add
popf
je
ljmp
xor
cmp
push
loop
pop
insb
fwait
pop
adc
fs
or
data16
sub
test
push
or
negb
es
pop
mov
lahf
shrb
jle
out
push
jnp
popa
mov
lods
daa
bound
out
cmpsb
call
dec
pop
inc
lds
add
movsb
mov
mov
std
dec
push
cmc
rcr
call
dec
adc
test
jg
jmp
and
rcrl
test
cmc
pop
jmp
fcoml
or
mov
inc
movlps
stos
cmp
jg
test
pop
adc
lds
mov
inc
out
fisubl
jae
mov
push
or
pop
test
cmpsl
dec
popa
into
popl
jne
hlt
into
loopne
cli
xchg
add
fs
sub
mov
gs
mov
adc
fistps
imul
jl
pop
movsl
daa
cli
xor
fs
sbb
ljmp
movups
mov
pop
in
mov
add
movsl
cwtl
out
jo
xchg
je
and
mov
mov
inc
pushf
movsl
cmp
call
push
push
adc
dec
pushf
mov
add
xchg
ljmp
pop
aas
loope
push
loopne
and
shl
std
fstps
test
aam
or
sbb
mov
imul
cltd
cmp
sbb
xchg
jp
insl
mov
fiadds
mov
mov
fs
out
mov
inc
mov
and
jmp
cli
jle
add
fstl
pushf
add
push
lods
inc
and
das
addr16
mov
lods
lahf
sbb
pcmpeqb
jne
adc
scas
jl
inc
outsl
and
data16
mov
lods
out
cmp
insb
lods
adc
dec
sbb
inc
jae
scas
mov
je
xor
jo
fs
push
jg
cli
pop
pop
popa
fs
scas
xchg
or
je
add
dec
push
jae
jb
push
mov
out
adc
daa
pminub
pop
inc
rclb
icebp
mov
jl
loop
dec
lods
popa
into
je
call
lret
out
add
adc
inc
inc
cmp
xor
and
inc
into
das
add
lods
xor
insb
jg
inc
push
stos
orb
outsl
xchg
jle
mov
scas
xchg
jno
jb
pusha
cltd
mov
xchg
mov
aad
pop
enter
xchg
out
pop
jae
push
cmp
adc
scas
push
xchg
cmp
inc
or
jmp
stos
push
sub
jb
das
pop
decb
push
arpl
mov
push
mov
sub
pop
adc
add
add
mov
int3
enter
add
loope
mov
mov
mov
jnp
sbb
xor
call
adcl
fildl
cs
std
outsb
loopne
inc
in
pop
adc
xor
dec
mov
jne
decb
and
xor
mov
enter
mov
mov
call
int
inc
mov
shlb
sbb
sbb
pop
jle
hlt
enter
gs
jbe
mov
mov
notb
movsl
xchg
inc
cmp
out
test
in
out
lret
push
rclb
call
je
mov
in
je
popf
notl
jo
das
je
push
rcl
fldcw
jne
push
ds
in
xchg
xchg
jns
adc
push
mov
pusha
jmp
jle
pop
out
in
pop
mov
and
inc
loop
inc
and
daa
or
stos
fsubrs
sbb
std
nop
jp
sub
jbe
inc
cmp
test
jmp
add
ja
shll
insb
out
pop
je
scas
pusha
dec
xchg
lret
fwait
and
mov
movsl
aaa
cmp
dec
fs
mov
outsl
jae
int
xchg
add
mov
push
pop
test
pusha
cmpsb
jo
hlt
ds
in
mov
pop
gs
addl
int3
xchg
mov
fdecstp
dec
sub
insl
pop
shlb
stos
test
and
iret
je
xchg
cmpl
sub
shl
inc
popa
jmp
pop
xor
push
inc
shll
and
mov
fsts
adcl
mov
dec
pop
and
jp
call
push
sarb
test
test
fnstenv
je
push
cmp
mov
ret
cli
cmp
adc
enter
test
mov
inc
cmpsb
push
stos
test
mov
inc
jns
and
sub
jp
push
push
xchg
xchg
dec
daa
int3
or
jbe
test
pop
sub
cmp
fwait
decb
jo
subb
call
out
aam
mov
loop
clc
and
add
sbb
fnstsw
loopne
push
pop
jo
testl
jle
popf
gs
jo
xor
push
add
loope
sub
add
mov
loope
test
clc
or
mov
nop
test
aas
nop
int3
rcll
xor
scas
adc
mov
inc
jo
test
cmp
dec
push
in
or
je
sub
add
pop
fs
and
pop
and
fdivs
cs
cs
and
mov
pop
mov
outsl
mov
or
test
idiv
je
pushl
fsubs
cmp
push
and
outsl
inc
les
das
and
enter
adc
movsb
fdivl
aad
xchg
xchg
repnz
fs
shll
jg
mov
pxor
out
jge
test
mov
movsl
popa
shlb
in
jmp
addr16
stos
lods
push
imul
dec
jae
push
jmp
sahf
mov
push
rol
fs
mov
shlb
jno
sbb
in
xorl
repnz
cmp
emms
jmp
repz
mov
fucom
insl
movsb
dec
addr16
mov
mov
inc
leave
mov
gs
cmp
ret
lret
nop
fwait
jnp
outsl
lcall
or
aam
fucomp
or
xchg
in
aad
mov
test
lcall
mov
imul
cltd
pop
pop
sbb
scas
sbbb
add
or
push
sti
pop
pop
mov
int
cmc
mov
jg
leave
adc
fs
xor
xchg
dec
imul
cmp
stc
sarb
sbb
jl
mov
sbb
jno
cmp
aaa
shlb
push
test
cld
push
pop
mov
xchg
dec
or
xor
pop
scas
pop
scas
mov
fs
xor
pop
enter
pop
push
xchg
rclb
mov
sarl
adc
enter
jb
inc
jge
cmovnp
cmp
popa
sbb
je
mov
in
dec
xchg
cmp
add
pop
rdpmc
inc
xchg
test
pop
xchg
add
and
cmp
in
pop
xchg
and
sub
cmpsb
sbb
es
push
stos
insl
int3
add
mov
add
mov
dec
clc
jmp
sub
jle
es
scas
cld
pop
mov
add
test
sub
roll
push
sahf
fcomps
xor
je
aaa
mov
int3
enter
test
fldcw
mov
ljmp
rcr
adc
mov
inc
mov
mov
aaa
inc
pop
fldt
mov
out
push
pop
xor
repz
icebp
jbe
and
rorl
lret
gs
test
jmp
xor
inc
xchg
fucomip
lds
movsb
std
xchg
jg
or
mov
jmp
dec
sub
adc
push
cmpsb
gs
lods
and
test
jecxz
sub
and
adc
xchg
outsl
and
push
sbb
jae
stc
repz
mov
pop
in
add
fdivrl
mov
mov
push
cs
shlb
imul
je
mov
xor
and
adc
jle
sbb
and
es
jnp
or
pop
js
cld
cmpsl
xor
fcmovb
fstl
lods
leave
lock
fidivl
adc
daa
mov
fs
sahf
sbb
or
cmp
mov
decb
cmc
out
lods
jbe
out
push
dec
push
jb
movq
mov
mov
jnp
pop
mov
mov
inc
movsl
dec
loope
xor
mov
adc
sub
push
in
or
sbb
lahf
nop
cltd
push
test
rolb
sbb
out
mov
inc
cmpsb
in
jb
rorl
add
ror
push
add
and
lea
out
jo
xlat
xchg
mov
mov
lea
jp
push
push
scas
inc
or
xor
push
loop
jmp
mov
mov
daa
fwait
cmp
cmpsb
ror
aad
ljmp
dec
dec
push
mov
insl
lock
jge
test
jb
push
sub
rcrb
push
push
fwait
push
and
mov
xchg
adc
mov
sahf
mov
jns
push
sub
stc
pop
lea
rcl
sub
pop
jae
notl
je
std
push
std
adc
icebp
in
pop
fstpt
lds
adc
mov
jl
xchg
in
mov
lea
mov
je
sbb
ftst
xor
pop
jb
pop
gs
out
fs
notl
sub
push
inc
inc
mov
int
push
mov
mov
stos
sub
push
xchg
cmp
jl
mov
pusha
jecxz
inc
out
and
cmpsl
test
dec
cwtl
out
jb
xchg
cmp
fisttpll
gs
insl
and
dec
popf
mov
lock
je
clc
repz
and
mov
push
jl
out
scas
xchg
out
cmpsb
stos
mov
push
aaa
je
cmp
cmpsl
js
fs
pop
in
xlat
cmpsb
call
les
push
pusha
mov
dec
data16
std
inc
je
in
inc
fldl
push
fldcw
fsubrl
cld
pushf
push
mov
pusha
cli
and
inc
cltd
jne
jns
shr
and
popl
lock
adc
insl
push
sub
movsb
inc
push
je
push
jne
popa
mov
dec
scas
lret
in
xor
cmp
add
xchg
cmp
push
sbb
jo
fucomp
mov
inc
loop
push
loopne
rcll
push
andl
dec
jno
lds
adc
dec
es
push
out
adc
sbb
mov
cltd
fs
sbb
adc
jne
aam
mov
pop
add
jno
gs
ds
loopne
je
xchg
js
mov
aaa
call
fistpll
push
jl
clc
sahf
je
xchg
push
imul
loop
sub
cmp
subl
sub
jns
shll
aam
cld
ror
sbb
dec
sub
jp
adc
scas
cli
add
rorb
ret
popf
jnp
test
inc
cmpsl
lret
stos
mull
sub
ret
cmp
shrd
outsl
cmpsl
js
jb
int
repz
and
mov
loope
mov
fs
sub
or
or
lea
js
push
gs
lods
mul
lret
scas
mov
jns
addr16
fsubrp
lock
jle,pt
xor
mov
cmp
shll
inc
add
je
out
cltd
xchg
sub
dec
push
jo
stos
mov
xchg
sbb
push
push
or
mov
push
cli
xorb
jno
push
or
scas
test
ja
mov
xchg
imul
jnp
das
cmpsl
push
out
ljmp
xor
outsl
icebp
in
jmp
call
jp
orb
sahf
je
jp
rorb
insl
movsb
shrb
push
xchg
sahf
jae
push
push
sub
das
cmpsb
xor
orb
dec
shrl
rcrb
mov
call
dec
pop
xor
scas
add
xchg
xor
jle
bound
jbe
xlat
icebp
pusha
mov
mov
fstps
lret
pop
sbb
in
jle
out
aas
out
into
and
loope
ror
adc
mov
mov
in
or
push
jp
sbb
mov
xor
push
mov
in
stos
xchg
xor
je,pt
ds
xor
fucom
push
add
imul
sbbb
popf
adc
pop
mov
pop
je
negb
js
leave
insl
mov
jl
push
or
xor
and
adcl
sub
mov
add
adc
ljmp
mov
enter
mov
and
jg
and
pusha
fwait
push
leave
xchg
add
pop
addr16
and
jns
adc
fistl
mov
adc
mov
shrb
test
xor
popa
jle
push
incl
sti
out
leave
xor
add
lret
je
pop
arpl
mov
cmp
cmp
ds
loopne
sbb
and
mov
pop
jmp
aaa
or
loopne
fxch
clc
clc
sahf
and
cmpsb
dec
aaa
mov
bound
inc
shl
sahf
jno
inc
into
stos
sarl
jae
fwait
xor
sub
sahf
dec
jo
dec
fcmove
gs
pusha
xchg
cmpsl
subl
dec
gs
sahf
jecxz
pop
push
lret
and
dec
test
js
int3
xorb
jp
cmp
inc
out
mov
leave
push
push
getsec
je
push
jg
mov
negl
arpl
sub
out
ds
jns
sub
loopne
iret
stc
and
movsl
adc
inc
loope
loop
sarb
adc
sbb
mov
pusha
cmp
rcll
fcoml
jne
imulb
imul
cmp
lods
pushw
jg
mov
inc
cmp
jmp
out
hlt
sub
fnstsw
lock
leave
cli
clc
aas
out
scas
sbb
mov
jno
sbb
rorl
cmp
hlt
adc
push
mov
das
repnz
sbb
outsb
pusha
push
test
jns
out
lds
test
inc
cmpsl
loopne
sti
cld
int
call
xchg
inc
mov
and
push
int3
fisttpll
xor
or
lods
jmp
shlb
aaa
jno
lcall
push
xchg
gs
out
hlt
je
cwtl
mov
cmp
xor
xor
ficoms
in
or
xor
or
mov
test
mov
repz
pop
fbld
pop
push
xor
leave
test
jmp
sub
jl
call
loope
push
xor
adcb
sbb
xchg
jmp
mov
adc
fisubl
dec
mov
daa
stos
sbb
ror
lret
insl
hlt
and
or
fldl
push
jl
ja
and
ja
stos
push
jecxz
cmc
pop
pop
jns
or
add
fs
das
sub
sbb
pop
push
pop
dec
aad
popa
popa
inc
jmp
dec
adc
sbbb
ljmp
pop
mov
test
jp
jp
ss
movsl
sub
imul
sub
push
test
cmp
fistl
outsl
xlat
mov
ljmp
jp
aad
push
int3
enter
pop
aam
jbe
sbb
cmp
fdivl
hlt
addr16
stos
cmc
pop
mov
cltd
jge
movsl
sar
cmp
int
btc
lret
inc
sbb
sbb
push
leave
or
xchg
inc
orb
nop
cmp
out
int
cmp
out
mov
pop
and
or
insb
pusha
pop
inc
pop
adc
std
stos
cmp
popf
cmp
xchg
xchg
cmp
fcomi
outsb
gs
es
fwait
push
mov
in
push
push
cmpsb
or
in
mov
pop
sub
xchg
mov
jg
cltd
mov
fbld
mov
lock
or
cmpsb
fnsave
push
loop
lcall
jnp
ljmp
jns
inc
nop
insb
fistpll
push
pop
cli
and
push
pushf
or
mov
xchg
lret
aaa
jg
js
mov
lcall
or
jno
and
cs
xchg
lock
jnp
fsub
mov
xchg
mov
sub
ficomps
gs
xor
daa
aas
mov
nop
out
cmp
dec
dec
push
je
scas
ds
jg
js
add
out
mov
addr16
sbb
daa
icebp
stos
adc
out
push
pop
dec
dec
inc
or
push
int
xchg
popf
test
mov
cmpsb
cmp
in
ret
jno
fidivl
jno
lods
fwait
scas
dec
fldl2e
andl
mov
lahf
sbb
inc
and
test
lcall
repnz
subb
and
mov
lock
pop
test
inc
lods
push
jnp
push
jmp
cmp
xor
jp
push
fstpt
push
cmp
inc
stc
xor
pop
inc
fdivrl
pop
xor
repnz
rolb
jg
sub
lods
add
dec
sahf
orb
cmp
clc
inc
in
insb
das
mov
push
push
cmp
and
sbb
imul
pop
xor
xchg
das
lock
fidivl
cmc
mov
pop
push
xchg
rcrb
or
push
pop
iret
or
imul
aaa
fwait
cld
mov
out
fs
xor
push
je
cmp
mov
pop
mov
push
push
sbb
xchg
push
push
jno
or
xor
fldcw
negb
movsl
xor
mov
adc
ja
popa
sub
stos
add
repz
stc
into
lret
and
aad
shll
aad
lret
cld
xchg
imul
sbb
mov
mov
out
and
adc
mov
and
mov
dec
shlb
je
call
push
loop
call
and
test
push
sub
mov
sbb
out
adc
fstps
bound
xchg
frstor
push
pop
dec
cmp
rorl
mov
mov
test
fisubl
inc
cmp
syscall
clc
or
push
and
out
pusha
jmp
sarb
push
std
js
int
scas
push
les
leave
push
idivl
lock
jne
mov
fsts
pop
sti
adc
rorb
xchg
cmpsl
pop
scas
push
add
into
xor
push
or
sarb
pop
jp
adc
push
mov
cmpsb
dec
mov
mov
jp
xor
inc
sub
stc
and
mov
and
lds
jns
call
add
sti
xchg
mov
or
movsl
and
push
mov
cmp
je
dec
int3
scas
int3
lock
push
daa
jmp
subl
jl
ss
push
scas
jp
cmp
movsl
sahf
dec
pop
sub
scas
cltd
je
shll
out
sub
xchg
inc
and
jb
adc
mov
popf
movsb
scas
gs
imul
repnz
daa
xor
aas
jns
xor
test
cmp
int3
cs
hlt
cltd
popa
xor
je
xor
push
out
ja
sahf
inc
lds
je
or
dec
push
sub
push
cli
or
adc
mov
and
imul
add
std
gs
inc
pop
je
fcomp
mov
int3
movzwl
inc
and
jge
test
lret
mov
or
rcr
and
pop
rcll
pop
jne
jno
cmc
pop
adc
cltd
mov
push
xlat
push
loope
cmp
add
push
pop
imul
stc
orl
dec
or
sub
dec
iret
enter
pop
pop
mov
popf
jno
imul
out
fst
jmp
cmp
xchg
cmp
mov
mov
jge
leave
bound
pop
ja
sbb
scas
pop
dec
and
xchg
mov
sbb
or
pop
jnp
and
rolb
xor
sub
rclb
lahf
fmuls
shll
adc
clc
pop
xlat
rorl
subl
insb
aad
fcomps
cmp
mov
das
bound
sub
push
push
scas
mov
fisttps
popf
pop
lock
cmpsl
in
xor
sbb
mov
sub
jl
enter
in
imul
insb
int
mov
ret
ret
and
subl
nop
pop
loop
xchg
mov
insb
fs
pop
andb
out
gs
fisttpll
lods
inc
inc
aaa
xchg
jno
lods
sub
sub
inc
jge
jo
fdivl
cmp
lods
adc
xchg
les
mov
pop
sbb
mov
out
push
xor
mov
addr16
das
out
out
cmp
or
mov
jmp
rcll
adc
jge
test
push
shrb
mov
sub
mov
jnp
adc
xchg
cmp
pop
scas
sti
or
pop
in
call
push
fs
xchg
mov
inc
les
pop
and
push
pop
popl
mov
dec
pop
jo
xor
pop
mov
call
mov
adc
fsubl
push
sbb
lret
in
xor
cltd
out
imul
ss
bound
or
cli
inc
or
int
sbb
ja
pop
data16
fisttps
repz
scas
enter
leave
loopne
jo
out
mov
jno
fs
push
lcall
jae
out
imul
lahf
xchg
add
popf
lods
sbb
inc
adc
nop
dec
xor
push
aam
sub
pop
popa
aad
jmp
lods
pop
add
stc
loope
fnstenv
inc
cmp
adc
fdivrs
pop
in
ljmp
je
push
sub
js
push
jecxz
call
ljmp
movsl
push
xchg
stos
and
bound
bound
fs
or
mov
inc
fldcw
test
loopne
adc
push
mov
test
lret
daa
push
rcrb
int3
add
xchg
pop
ds
xor
repz
adc
sbb
inc
push
test
pop
mov
je
out
rorb
lds
int3
cmp
adc
or
sub
in
and
lcall
ret
lock
mov
add
in
ja
je
xchg
lods
inc
pusha
out
addb
andl
xchg
out
pop
scas
and
decl
in
xacquire
and
and
mov
iret
and
xchg
add
cmpsb
int3
out
jge
inc
mov
out
cmp
lods
sbb
cs
dec
push
loop
sbb
or
aam
cmpl
sbb
in
fildl
add
aad
cmp
ss
xor
stos
sub
mov
jmp
mov
sub
hlt
fldenv
cmpsl
scas
pop
dec
scas
je
outsb
stc
mov
cltd
and
jmp
std
js
fs
xchg
adc
push
mov
mov
std
je
lcall
test
addr16
addl
mov
pusha
push
adc
push
out
fildll
out
sbb
std
pop
cmp
cmpsb
stc
adc
out
sbb
add
ret
push
or
cmp
popa
push
lods
pop
xchg
ret
je
dec
insb
stos
and
pusha
jmp
lcall
call
pop
mov
xor
sbb
fwait
movsl
mov
push
adc
mov
sbb
loopne
fisubrs
sahf
shlb
cmp
test
mov
xchg
push
inc
scas
repnz
insl
sub
sti
movsb
xchg
in
lret
push
test
gs
es
adc
sbb
mov
fucomip
ret
test
stos
das
push
jl
insl
add
outsl
adc
and
mov
lea
push
jb
mov
push
jg
xor
push
divl
fcomps
test
fisubs
push
xor
out
jmpw
test
scas
dec
mov
sbb
lcall
mov
sar
mov
loop
inc
nop
mov
push
ja
or
test
lods
or
fidivrs
dec
pop
xchg
push
repz
cmp
jbe
in
xchg
pop
cmovl
insb
adcb
lahf
push
or
rcrb
and
jns
gs
adc
sub
imul
push
jbe
xor
pusha
cmp
arpl
or
dec
push
ja
into
popf
js
adc
je
mov
fs
mov
cwtl
fildll
enter
jp
and
inc
jnp
data16
mov
test
icebp
aas
cld
push
jmp
out
ret
in
data16
cltd
repz
or
pop
xchg
cli
fsts
out
xor
mov
scas
jmp
sub
data16
daa
fs
cmpsl
add
mov
dec
flds
sbb
out
out
fs
test
addr16
ja
inc
lds
push
sub
push
add
pop
es
cli
outsl
popa
stc
test
push
push
jb
gs
leave
add
stos
ljmp
fstps
cmc
jecxz
fs
leave
inc
ds
jns
xor
lock
daa
sbb
sub
fstp
decb
cltd
incb
rcr
into
in
cli
push
add
jp
mov
mov
xchg
out
jp
fwait
test
arpl
mov
outsl
gs
stos
scas
adc
adc
pop
dec
out
mov
or
fildl
pop
pop
dec
mov
in
jne
insl
push
cwtl
adc
je
fs
inc
test
loope
push
sbb
mov
aas
cwtl
jp
pop
pop
leave
push
mov
cmp
pop
cmp
mov
jecxz
mov
dec
lret
dec
sub
mov
je
pop
sahf
int
pusha
mov
jno
jnp
cmpsl
fsub
xor
or
push
ss
into
cltd
pop
xor
pop
nop
dec
sub
mov
and
mov
push
mov
sar
mov
je
jns
cmp
sbb
testb
repz
xlat
jg
aam
out
pop
dec
arpl
or
xlat
pusha
lret
popl
adc
out
arpl
pop
pop
adc
rorb
sbb
mov
pop
aas
push
out
mov
adc
add
sbbb
cmp
sub
adc
mov
pop
out
sub
jns
mov
std
cs
jmp
sbb
xchg
out
fcoms
sub
cli
fists
fadds
sub
addr16
cmp
popa
inc
out
stos
icebp
mov
insb
xor
sub
pop
push
adc
imul
xor
add
roll
jge
pop
pop
int3
test
pop
inc
daa
lods
sbb
push
icebp
addb
popa
push
xchg
dec
aas
movsb
push
testb
insb
xchg
add
int
and
xor
in
imul
dec
sbb
test
movq
movsl
push
jns
cld
or
jo
adc
xchg
jae
daa
cmpsl
xor
adc
popl
cmp
adc
into
or
int3
xor
movsb
pop
out
in
in
push
lods
inc
popa
fistps
cmp
cmp
or
loopne
aam
movsb
das
add
sbb
inc
push
insl
insb
jnp
add
je
clc
test
clc
inc
mov
sub
xchg
mov
cwtl
cmp
pop
lea
add
inc
not
out
fcomi
mov
sbb
imul
jle
js
lea
test
and
imul
jo
xor
jae
xor
hlt
lcall
xor
cmp
fs
jbe
out
das
adc
ds
test
add
xchg
xchg
stc
jbe
aas
andb
popa
and
cs
xor
sub
ss
jnp
bnd
ja
fisubrl
je
or
fdivr
gs
in
dec
push
or
je
pushf
mov
mov
incl
push
flds
pop
movsl
jo
mov
insl
sbb
arpl
decb
pushf
jno
and
xchg
nop
lds
push
sub
popl
cmpsb
sti
popa
push
fadd
dec
xchg
js
stos
imul
push
mov
clc
mov
jg
inc
mov
cwtl
xor
mov
je
andb
or
jbe
je
jbe
popf
mov
mov
mulb
rol
push
sahf
sbbb
xor
jno
fs
push
ret
data16
push
mov
les
icebp
mov
jmp
es
addr16
fs
jp
add
pusha
mov
dec
lret
push
scas
fdivl
and
shll
jo
sbb
es
or
shrb
and
pop
lret
pop
push
lret
test
xorb
jge
scas
mov
add
sbb
jae
inc
stos
es
pop
std
addr16
fbld
push
cmc
dec
cmpsl
rcrl
push
inc
or
int3
fwait
loop
push
test
adc
sbb
push
hlt
imul
lret
mov
fistps
adc
pop
jg
sub
in
xor
or
iret
cmpsl
push
imul
jnp
pop
and
std
push
fistl
sti
subl
fwait
iret
mov
xchg
je
xor
fcompl
jns
fs
pop
jno
das
pusha
xor
pop
in
aas
jmp
cmpsl
xchg
and
jge
cmp
push
mov
jno
ljmp
mov
inc
fwait
cli
inc
movsl
test
lret
pop
mov
add
cmpsl
sarl
fcomi
add
loope
daa
jns,pn
or
xorl
ljmp
fstpl
test
cmpsl
cmp
fists
pop
insb
xchg
or
pop
inc
mov
pop
mov
and
push
inc
dec
cmpsb
ficoms
xor
cmpsb
jl
adc
push
or
mov
jge
and
imul
dec
inc
mov
pushl
gs
js
rcr
push
jnp
fistpll
mov
cltd
lock
std
cmp
into
jo
bound
mov
scas
and
pop
pop
mov
rcr
sub
or
daa
cli
and
mov
push
out
fnstcw
div
mov
and
jle
jge
mov
jnp
fisubrs
imul
push
nop
sbb
sub
cmpsl
xor
iret
add
add
mov
jns
mov
push
scas
pop
cmp
add
push
je
aaa
dec
push
xor
xchg
push
out
xor
or
popa
adc
movsl
pop
stc
sbb
repnz
or
aaa
fdivp
dec
and
mov
lea
andps
mov
push
pushf
xor
cmpb
std
je
mov
insl
pop
pop
push
data16
lcall
mov
mov
pop
int3
pop
inc
fsubr
add
gs
inc
outsl
cmp
push
insl
mov
scas
push
xor
ret
add
mov
jle
push
cmpsb
sti
in
je
cmp
jge
pop
pop
add
popa
cmpsb
mov
push
jp
ret
inc
and
mov
mov
cld
fists
mov
mov
cmpsb
aaa
fdivl
popa
mov
jbe
cmc
int
push
mov
mov
sbb
mov
jbe
lds
nop
add
es
jmp
shrl
xchg
inc
sbb
popf
enter
enter
scas
shl
jp
mov
lods
mov
jne
popa
jno
cmp
pop
fs
sub
or
cmp
imul
sbb
sub
cs
sbb
push
lods
xchg
dec
xor
adc
xorb
les
in
push
adc
pop
out
insl
je,pn
popa
scas
sub
xchg
or
push
push
fs
test
insl
jl
mov
xchg
mov
inc
sbb
sub
jne
xor
cmpsl
lret
in
xlat
iret
sbb
std
sbb
xchg
inc
or
call
mov
cmpsb
popa
jp
sbb
cmp
adc
test
xor
jb
fdivl
ret
movsl
arpl
xchg
mul
cmp
and
movsl
sti
cmc
aaa
adc
ret
jge
testb
mov
sbb
in
push
pushf
sbb
and
mov
insl
mov
shlb
xchg
mov
int
sbb
movsl
repz
je
fisubs
dec
mov
enter
cmp
pop
and
lods
add
jge
es
jecxz
push
mov
hlt
icebp
mov
sub
dec
mov
and
mov
mov
mov
xor
stos
push
sbb
lock
jmp
stos
ja
imul
xchg
fnstenv
xlat
lea
xor
push
mov
sub
inc
sar
sti
push
loop
jno
push
in
mov
jmp
arpl
push
mov
jae
aam
je
fiaddl
mov
int
aaa
int
xor
jmp
or
pop
xor
jp
xor
xchg
push
subb
jp
sub
adc
sbb
jg
insl
hlt
insb
pop
movsb
nop
outsl
ja
jns
clc
fwait
jnp
mov
push
pop
or
dec
sub
inc
push
popf
cmp
ficomps
or
shlb
mov
cmp
ret
sub
sbb
pop
mov
adcl
dec
xor
rclb
sbb
and
daa
jne
es
insb
mov
sub
mov
scas
jo
sahf
inc
pop
adc
out
aaa
push
daa
inc
ret
jl
movsl
fs
fiadds
adc
mov
push
js
jo
scas
jmp
jmp
fldcw
xchg
pop
and
adc
cmp
scas
jg
popf
movsb
test
push
jns
std
mov
jp
stc
lds
sbb
call
fcomip
roll
pop
stos
xor
add
cmp
lcall
mov
jle
xchg
sbb
addr16
pop
xor
xor
jne
push
fsts
and
jmp
mov
mov
fs
mov
outsl
sub
ret
cmpl
adc
lret
mov
jns
scas
pcmpeqb
cmp
jbe
inc
sub
lock
jb
dec
gs
lock
push
jge
bound
fidivs
xor
popl
push
sub
repz
sti
xchg
pop
outsl
clc
ret
pop
cmp
enter
lock
shrb
shr
lret
je
xor
and
sub
adc
jo
test
dec
ds
dec
fucomip
shl
hlt
mov
mov
sub
fisttpl
ljmp
and
mov
lret
jno
fs
and
xor
repnz
dec
or
push
stos
sar
adc
jl
adc
fdivl
jns
jp
push
ss
push
push
repnz
gs
fisubrs
dec
test
pop
add
jne
jg
pusha
inc
push
lret
xor
jg
jmp
sub
jbe
cltd
movsb
mov
in
pop
int3
int
adc
pop
gs
inc
jo
add
loope
outsl
cmpsl
insl
xor
std
iret
fadds
or
stos
jo
lock
cli
int
add
jno
aas
pop
ljmp
push
outsb
pop
addr16
mov
dec
pop
imul
mov
add
pop
pop
jne
and
mov
ficompl
dec
push
clc
push
sar
add
sbb
je
repz
fdivrs
xor
andl
xchg
xchg
rcrl
mov
out
cli
mov
sbb
push
popa
adc
ffreep
nop
and
sub
xor
inc
xor
dec
push
popf
nop
lods
cmp
jno
fmull
cli
shr
movsb
jp
clc
imul
aam
cmp
movsl
lock
push
jl,pn
and
xchg
lock
mov
lds
sbb
xchg
in
sbbl
inc
mov
jle
popa
iret
insl
into
jb
inc
cld
xor
rol
mov
aad
out
lcall
cmp
movsl
repnz
pop
add
repnz
add
gs
push
inc
push
je
and
popa
and
test
push
pop
scas
subl
or
rorl
loopne
popa
sti
js
fimull
aad
jo
push
jnp
pop
jbe
andb
or
pop
ds
cmp
jge
cmp
mov
mov
aas
dec
mov
movsl
sub
add
lret
mov
or
jae
add
sub
sbb
add
icebp
test
sub
pop
dec
xor
jae
popf
call
mov
out
pop
clc
test
icebp
sbb
outsl
jae
xchg
push
addr16
clc
mov
and
jo
es
jo
insl
aas
je
push
cltd
cmp
cmp
lcall
pop
imul
call
mov
sbb
and
mov
sbb
lds
vpmacsdd
loope
cmpsl
or
cmpsb
cmp
dec
xchg
fucomp
mov
mov
outsl
xchg
dec
or
je
sbb
popa
cmpsb
push
out
jp
icebp
enter
or
adc
cmp
push
es
xchg
pop
push
cwtl
sti
aaa
mov
mov
out
push
outsb
cmpl
jo
mov
outsl
icebp
jmp
adc
fs
fnstcw
ret
sahf
push
fcomps
shll
push
add
inc
and
push
rclb
jne
lods
push
pop
scas
in
adc
cmp
stc
imul
popa
imul
nop
adc
insb
popf
pop
loope
in
pop
lds
add
test
mov
rorb
and
mov
push
ss
xor
scas
pop
jge
sbbb
ss
push
push
sub
or
adc
sub
stos
xchg
push
out
inc
lods
cltd
xchg
fs
mov
in
or
lds
fxtract
cmpsl
mov
sar
ret
int3
test
je
dec
xor
inc
int
jg
push
verr
negl
jo
into
out
popf
js
mov
jl
and
gs
cmpsl
daa
push
out
cmp
add
cltd
outsl
sub
xchg
or
ljmp
gs
pop
out
aad
sbb
shlb
hlt
ficoml
outsl
push
sub
or
arpl
aaa
cmp
movsb
dec
sar
adc
push
nop
movsl
pop
out
lret
mov
scas
scas
adcl
je
push
and
inc
pop
jmp
add
cmpsl
gs
dec
sub
imul
outsb
dec
sbb
stc
cwtl
sub
mov
xor
lret
mov
es
or
rcrl
std
sahf
jg
push
mov
pop
idiv
fdivrs
fimuls
pop
jmp
inc
or
jae
mov
xorb
cmp
add
and
mov
cwtl
mov
imul
out
cmp
jae
frstor
stos
arpl
in
sti
mov
pop
lods
loop
and
pop
xchg
push
std
add
pop
or
pop
xchg
imul
add
mov
dec
and
aam
sbb
shlb
push
sub
pop
jp
sbb
sub
xchg
fiaddl
je
pop
movsb
push
dec
popa
in
dec
dec
je
flds
mov
gs
fs
jle
push
cmp
xor
out
imul
lret
int3
popf
xchg
inc
fwait
in
lahf
jg
cmp
mov
pop
lods
add
jne
cltd
out
roll
add
jns
mov
je
imul
mov
xchg
fistpl
adc
and
daa
add
mov
es
icebp
ficoms
jecxz
in
xor
pop
mov
add
inc
or
and
mov
mov
jne
push
pop
inc
xor
in
mov
andb
pop
aas
push
adc
cmp
lret
loope
testb
xchg
inc
mov
das
daa
outsb
mov
lret
xacquire
or
mov
mov
push
call
into
sti
loope
dec
push
sahf
aaa
pushf
jge
test
push
jb
addr16
sub
dec
movsb
push
pop
dec
push
push
mov
pop
sbb
sbb
push
mov
xor
pcmpeqd
int
loopne
fsubrs
sub
test
push
jmp
dec
push
mulb
adc
sbb
or
adc
mov
sbb
rclb
push
int3
jp
outsl
scas
fs
scas
movsl
pop
loopne
maskmovq
divl
js
scas
pop
je
popa
adc
push
xlat
rorl
mov
adc
sub
cwtl
or
cli
lcall
cmp
xchg
clc
cmpsb
loopne
cmp
jno
cmp
test
arpl
lock
scas
jp
jo
or
out
data16
sti
pop
test
lods
ret
in
int3
inc
add
jp
cmpsb
or
push
bnd
mov
add
jo
xor
imul
jg
movsl
lcall
es
fsubrs
cli
push
xorb
inc
lret
int3
xor
cld
int3
je
fidivrl
aad
inc
dec
xor
gs
mov
xor
int
sub
dec
ficomps
jns
js
pop
addr16
scas
xor
ja,pt
scas
adc
lock
stos
stc
lock
or
fsubrl
sbb
pusha
hlt
int3
faddp
mov
jb,pn
icebp
add
sub
out
xchg
and
repnz
addr16
mov
or
divl
lret
sbb
inc
fwait
mov
pop
jmp
fsubr
jl
and
cmp
cmp
nop
mov
inc
jecxz
sub
or
sbb
loopne
push
and
fucomi
hlt
adc
lret
ljmp
add
es
pop
and
js
adc
xor
xchg
pop
js
sub
out
xchg
and
and
pop
fadd
sbb
inc
popf
push
ja
mov
xchg
pop
push
pop
inc
push
dec
out
ss
mov
pop
sbb
jo
fwait
inc
push
fisubs
sub
add
xor
inc
adc
je
loop
push
fsubr
les
loope
imul
inc
cmpsb
adc
xor
mov
je
jns
call
fldenv
cmp
insl
inc
sbb
test
nop
cmp
push
add
fisubs
dec
movsb
out
test
pop
fstl
mov
movsb
repz
push
out
adc
mov
rolb
sahf
pop
add
jno
decb
incb
bound
add
pop
adc
push
sub
aas
push
imul
jno
jo
cmpsb
pop
pop
je
cmpsl
mov
outsb
ret
inc
lahf
xchg
in
popa
mov
dec
adcb
xchg
popa
jbe
xchg
out
rclb
in
fs
cmp
mov
pop
arpl
dec
mov
aam
push
xchg
fs
aas
xor
mov
inc
xor
jle
scas
je
mov
movl
cmpsl
daa
aad
andb
rcr
stc
jo
aam
jnp
fwait
inc
call
mov
and
imull
je
jecxz
stos
pusha
addr16
imul
mov
icebp
out
in
dec
adc
mov
or
icebp
mov
sbb
jo
push
out
lock
adc
popf
pusha
dec
cmp
icebp
mov
or
ficompl
icebp
jae
inc
shll
xchg
aas
cld
cli
xor
jno
jne
push
jno
int
inc
inc
std
cltd
jno
das
cwtl
mov
lret
and
stc
xchg
iret
roll
cmpsl
push
testb
lock
push
pop
jno
into
jb
mov
loopne
jno
leave
pop
pop
dec
mov
and
mov
or
lods
jno
cmp
push
ljmp
jge
js
adc
lods
xchg
cmpsl
imul
cmp
arpl
negl
push
cmc
adc
mov
jo
jno
jmp
in
shll
aam
js
dec
or
test
inc
mov
ss
push
mov
jno
sub
dec
mov
xlat
adc
test
mov
hlt
lret
cmpb
xlat
outsb
popa
sub
dec
push
or
lcall
cmp
bound
rorb
add
mov
mov
test
neg
shl
jno
bound
or
pop
out
xor
ja
push
icebp
int
jg
imul
and
ljmp
dec
adc
outsb
imul
cmc
int
mov
aas
ret
sub
push
or
fdivrs
rorb
and
mov
cmp
aam
outsb
cmpsl
sub
in
pop
test
testl
loopne
adc
push
xor
dec
pusha
clc
test
incl
dec
mov
jno
adc
imull
das
insl
les
in
int
mov
fs
in
scas
jno
outsl
ret
and
or
push
jle
xchg
mov
lock
jmp
shll
push
test
in
inc
mul
dec
andl
pusha
popf
lods
nop
xlat
push
lret
arpl
mov
divl
test
push
lods
pop
loop
jno
and
mov
cmp
lock
pop
test
mov
cmp
loop
call
mov
int3
test
inc
mov
aas
push
mov
mov
shll
dec
aam
jl
dec
push
insl
in
mulb
cmp
lret
lods
into
push
cli
insb
push
cmc
dec
pop
lods
mov
fs
lods
js
sbb
fidivrs
cmp
cmp
std
clc
xchg
popa
popa
cmc
gs
cli
jl
cmp
orb
jns
fwait
jo
stos
les
imul
inc
jge
dec
push
sub
mov
loopne
xchg
jno
mov
iret
push
lret
ds
pop
mov
adc
inc
cld
inc
push
mov
xchg
jno
mov
cmpb
popa
ljmp
mov
inc
and
sub
jno
loop
ds
pop
xlat
xchg
xor
dec
daa
lock
dec
add
jne
lahf
jmp
outsb
roll
je
stos
or
cmpsb
ja
adc
ds
loopne
jno
fcmovnu
dec
pop
mov
inc
jp
mov
mov
and
loopne
jl
and
dec
sti
jae
fcmovnu
enter
ret
or
aam
jmp
fs
adc
leave
jb
sahf
push
jno
in
pop
lods
into
imul
jl
cmp
fisttpll
filds
mov
bound
xor
jno
adc
lahf
push
jno
vmovntps
xor
pop
dec
imull
pop
in
fstpt
push
lods
add
pop
jno
cmp
xor
into
mov
daa
add
sub
dec
add
imul
cmc
jns
jno
cld
mov
filds
cmc
jno
repz
lahf
fwait
jge
es
in
push
jno
push
sub
mov
in
pop
cmc
and
xchg
mov
sbb
sub
dec
test
pushl
or
xor
jl
ror
jg
mov
std
insb
inc
fildl
mov
adc
push
jmp
pop
xlat
popf
movzwl
push
int
ljmp
mov
sub
test
movsb
aaa
test
lcall
xchg
das
imul
repz
cmp
ret
loopne
xor
mov
in
mov
sbb
clc
add
pop
stos
outsl
mov
imul
mov
jno,pn
ljmp
jno
stc
lods
mov
and
popa
jno
adc
fsubl
mulb
mov
mov
in
mov
movsl
insb
fnstenv
mov
dec
mov
dec
inc
jno
cli
sub
imul
push
pop
pop
push
std
ret
cli
loopne
jmp
pop
dec
xchg
push
xchg
mov
jecxz
cmpsb
jp
push
adc
jl
sti
test
das
mov
lock
pop
ja
nop
add
mov
sbb
ljmp
sub
push
cmp
data16
call
je
mov
jae
sbb
jge
fdivs
call
jo
insl
sahf
std
push
or
adc
add
push
out
xor
adc
popf
xlat
jns
adc
andb
out
in
jno
jbe
fs
scas
adc
jno
push
fiadds
scas
cltd
mov
cmp
mov
jno
fildll
or
and
dec
mov
jno
inc
inc
sbb
jno
push
jl
jne
aas
das
test
push
imul
jbe
jno
xchg
cmc
or
jno
pop
cmpsl
rcrl
mov
js
cs
test
das
bound
lods
jge
in
jno
sub
call
xchg
fsubp
dec
jnp
mov
mov
roll
inc
jbe
xor
addr16
cld
test
das
jmp
jno
pop
push
aas
xchg
cmpsl
in
lahf
jno
test
push
js
jno
hlt
test
xchg
jno
pushl
dec
add
call
push
inc
push
aas
in
inc
rcr
jno
mov
adc
je
jo
idivw
hlt
imul
jno
clc
sub
roll
push
das
jo
fs
imul
sub
bound
mov
and
or
adc
xlat
lea
clc
les
inc
jno
stos
ret
and
sub
mov
jno
mov
add
int
push
xorb
mov
jecxz
push
sbb
jo
sbb
push
in
ds
or
pop
es
int
in
pop
fs
push
stos
imulb
jns
cltd
adc
lods
into
xorb
or
movsl
lock
mov
nop
cmpsl
pop
or
and
leave
adc
lods
mov
inc
dec
dec
imul
xor
stos
inc
arpl
push
add
imul
in
cwtl
dec
das
mov
jle
cmp
xchg
mov
or
pushf
xchg
in
fidivs
inc
popa
or
jno
mov
and
adc
add
jno
orb
popf
popa
lret
inc
lods
xchg
pop
in
popa
or
sub
clc
fnsave
cmp
adc
jnp
pop
add
sub
nop
jmp
jbe
lret
push
ret
mov
jmp
fwait
enter
or
pusha
xor
xchg
jno
jne
dec
xor
jbe
jno
sub
rcrl
dec
jno
dec
lods
shrb
and
xor
das
popa
rorl
jecxz
adcb
mov
inc
xor
popa
or
ja
jle
orl
lds
jmp
stos
inc
nop
add
mov
jg
cmp
and
cwtl
jno
rorb
jno
pop
cmpsl
repz
imul
outsl
mov
fsubp
push
das
pushf
jne
jno
push
adc
push
adc
xchg
cmpsb
js
mov
jno
pop
aam
jge
push
mov
pop
cmc
xchg
outsl
imul
cmp
mov
mov
jnp
out
xor
lret
sub
xor
call
fisttpll
and
imul
jb
outsl
aas
loop
lock
pop
adc
add
pop
loopne
aam
jno
lea
sub
xchg
dec
and
inc
add
dec
data16
nop
enter
mov
push
cmp
mov
in
dec
in
mov
pop
adc
int3
scas
popf
push
sub
jne
lea
jno
sti
cs
inc
mov
pop
dec
int
inc
pushf
jl
lock
add
adc
orl
xchg
inc
cmpsb
jae
sub
stc
xor
jp
inc
pop
jno
lret
sbb
push
and
js
sbb
mov
xchg
das
jno
push
dec
jge
mov
sbbl
lods
mov
iret
sub
comiss
push
xchg
repnz
or
push
jge
pushf
adc
insl
push
push
xchg
or
ss
js
pop
xchg
cwtl
addr16
std
jno
xlat
pushl
jmp
adc
bnd
mov
jbe
sub
lds
cli
mov
fs
mov
jo
sbb
or
jo
jge
xchg
in
outsb
sub
cwtl
jno
test
mov
test
loope
mov
xor
dec
inc
test
mov
int3
xor
das
jno
movsl
add
mov
popa
stos
sub
pop
enter
mov
mov
inc
shll
cwtl
jno
lods
icebp
inc
arpl
push
jno
or
ss
jp
aas
das
jno
out
mov
nop
push
sbb
inc
jg
sbb
sub
dec
xchg
inc
test
cli
push
mov
into
mov
mov
inc
lods
repz
or
popf
sbb
insl
das
in
xchg
fsubl
hlt
xor
lahf
pop
out
call
xchg
xor
ja
pop
and
jns
ror
jns
sub
shlb
pop
loope
jno
and
test
jle
adc
adc
push
cmpsl
mov
xchg
das
ret
jno
mov
mov
jno
add
xchg
sahf
popa
pop
dec
lods
add
jo
out
jno
out
es
mov
insb
test
sub
sbb
roll
adc
jno
push
add
hlt
call
lods
fs
stos
sbb
mov
into
xchg
jno
dec
mov
mov
jne
dec
and
shll
xor
dec
lret
adcl
imulb
inc
jecxz
add
pop
jbe
jl
mov
fwait
out
imul
jo
out
jns
ljmp
jle
popa
push
or
clc
fldenv
fwait
lock
shrl
sbb
jp
xor
inc
aas
sbb
stos
lds
jecxz
jno
add
or
inc
and
adc
pop
lea
xor
xor
pop
push
push
movl
inc
push
push
adc
sbb
sub
aas
mov
jb
subb
xchg
jo
sub
nop
stc
mov
test
or
outsl
push
cwtl
aas
mov
imul
jno
int
sub
nop
dec
push
inc
xor
fsubs
bound
fists
pop
outsl
mov
dec
jo
scas
pop
insb
push
jmp
push
popa
push
push
sti
push
stc
push
pop
push
hlt
push
jae
inc
dec
outsl
pop
insl
push
imul
push
push
in
gs
in
fs
loop
inc
push
push
clc
push
pop
jb
sub
dec
loop
mov
push
mov
bound
loopne
pusha
mov
loop
ror
mov
xchg
lea
mov
test
mov
xchg
cwtl
xchg
aaa
xchg
aad
repz
shrb
pop
es
gs
add
outsl
dec
in
and
inc
fnstsw
cs
mov
mov
pushf
fstpl
ja
mov
outsl
pop
insb
push
stos
push
test
movsl
push
pop
push
sbb
leave
and
bound
mov
aas
mov
adc
add
int
mov
and
xor
jae
insl
mov
orb
nop
icebp
dec
loope
sbb
nop
sub
mov
dec
clc
push
rcll
sub
and
loop
mov
add
pop
mov
mov
mov
mov
push
dec
ret
pop
sti
push
push
ss
fsubl
mov
jne
or
adc
dec
jmp
or
inc
insl
test
stos
push
push
or
push
inc
push
inc
push
mov
push
mov
mov
adc
mov
cmpsl
loope
mov
cld
jge
imul
es
adcl
jb
dec
and
decl
and
jle
jb
icebp
cld
icebp
jl
cmp
push
or
jmp
test
xchg
jbe
xchg
sbb
sbb
gs
jnp
lcall
inc
sub
jmp
add
in
subb
mov
push
jecxz
imul
pop
sub
in
adc
scas
sub
mov
sbb
adc
mov
jle
pop
mov
sub
test
addb
fcoms
mov
mov
sub
inc
push
and
push
fsts
hlt
jb
or
and
push
in
jmp
mov
cmc
adc
outsb
aas
or
in
ret
xchg
cmp
pop
insl
push
in
push
dec
push
imul
xchg
dec
xchg
cld
xchg
sti
xchg
jbe
hlt
scas
cld
push
jo
dec
out
jo
das
cmpsl
mov
pop
xchg
test
pop
xchg
mov
xchg
xor
mov
xor
pop
ret
sbb
fstl
cmp
lcall
jmp
or
push
inc
ljmp
cmp
sti
gs
imul
pusha
add
sbbl
sbb
mov
fwait
dec
jmp
jbe
xchg
scas
dec
leave
sub
mov
mov
jl
and
in
popa
arpl
sbb
xchg
pop
sub
cmp
adc
hlt
sahf
je
repz
cmp
pop
jb
icebp
lods
dec
ljmp
loope
mov
popf
cltd
popf
clc
popf
sbb
call
dec
jo
lods
sbb
popa
outsb
pusha
sti
xor
sub
insl
cmp
xrelease
dec
or
sub
repnz
jb
icebp
loopne
aas
icebp
cli
icebp
js
repz
xor
scas
loop
mov
out
in
mov
xchg
sarl
dec
aam
sbb
and
sti
adc
in
jecxz
mov
loope
mov
cld
mov
stc
mov
mulb
repz
lock
fucomp
int
mov
ljmp
out
in
in
jecxz
loop
loope
loopne
call
cld
sbb
mov
clc
hlt
negl
hlt
pop
mov
lock
hlt
out
je
repz
jae
repnz
jle
mov
jecxz
loop
loope
loopne
jmp
cld
mov
mov
mov
data16
lods
cmc
aas
mov
icebp
scas
lock
out
cmpsl
out
mov
jmp
ljmp
out
in
loope
loopne
jg
cld
pop
in
adc
adc
stc
adc
clc
adc
notl
ss
in
fs
in
mov
insb
jmp
imul
popf
fs
jecxz
arpl
loope
popa
popf
loopne
pusha
popf
std
pop
stc
xchg
js
notl
jbe
cmc
pop
jne
aas
jb
dec
or
in
or
leave
imul
mov
mov
bound
loopne
pusha
mov
mov
decb
js
popf
negb
jne
hlt
popf
je
repz
jae
jo
and
ljmp
call
xchg
addr16
gs
popa
xchg
pusha
xchg
call
xchg
std
xchg
jge
cld
xchg
jl
jp
test
adc
adc
adc
repnz
icebp
xchg
adc
push
icebp
leave
imul
lea
jecxz
lcall
std
popf
jge
cld
popf
jl
sti
popf
jnp
cli
popf
clc
popf
hlt
popf
repz
jae
repnz
jb
icebp
jp
test
out
mov
call
popf
addr16
out
popfw
in
xchg
std
xchg
jge
cld
xchg
jl
sti
dec
je
in
aam
pop
mov
adc
adc
icebp
xchg
adc
out
sbb
out
pop
jecxz
ljmp
xchg
in
gs
in
fs
jecxz
popa
xchg
jge
jl
and
cli
xor
jg
push
clc
push
js
cmc
push
icebp
adc
sbb
pushf
lock
push
outsl
push
out
push
outsb
push
in
push
insl
push
in
push
push
push
gs
in
fs
mov
loop
bound
popa
popf
jle
jp
jns
clc
popf
js
negl
jbe
cmc
aas
jne
cmpsb
outsl
dec
outsb
hlt
in
mov
insb
popf
jmp
mov
ljmp
cmpsb
bound
popa
stos
loopne
inc
cld
jmp
mov
mov
testb
hlt
popf
je
repz
cmp
insb
pop
stos
imul
push
jmp
lahf
gs
popa
in
lds
mov
std
mov
cld
mov
mov
mov
mov
mov
repnz
icebp
arpl
lock
push
imul
popf
addr16
out
popfw
in
gs
arpl
std
popf
jge
cld
xchg
bound
ja
aad
aam
repnz
push
ljmp
out
jbe
popa
data16
in
cmp
mov
pusha
mov
mov
imul
jbe
mov
cmpsl
insl
mov
imul
adc
xor
jle
jp
mov
mov
cmc
push
nop
stos
pop
in
push
dec
push
mov
sub
sti
in
sub
mov
aaa
fiadds
dec
cmp
scas
cmp
push
xchg
shr
das
jge
out
gs
in
and
pop
jae
dec
dec
shrb
icebp
adc
pop
mov
adc
mov
mov
leave
je
repz
jb
icebp
icebp
inc
icebp
icebp
icebp
inc
icebp
ret
icebp
inc
std
out
inc
push
jnp
leave
das
shrb
sbb
mov
mov
pop
xor
mov
js
leave
scas
dec
and
lahf
sub
or
pop
adc
hlt
dec
je
cmp
push
sbb
lea
xorl
das
mov
mov
test
inc
ljmp
jae
repnz
icebp
pop
icebp
fyl2x
pop
icebp
fdiv
pop
icebp
xlat
icebp
push
notl
idivl
mov
out
in
sub
ffree
int
mov
scas
sub
pop
adcl
xchg
jne
ljmp
and
dec
out
cmpsb
sub
dec
jmp
popa
mov
mov
fnstcw
dec
nop
cmp
mov
shrb
sub
loop
mov
aaa
and
loop
mov
test
daa
sub
jmp
aas
adcb
into
in
jmp
imul
pop
repnz
std
cmp
test
ret
addr16
je
stos
dec
and
cmpsl
and
xchg
adc
inc
mov
sbb
cmp
mov
cs
or
loop
mov
mov
pop
sub
ss
xor
bswap
mov
and
and
inc
popa
sbb
ja
rorb
lods
rcll
xlat
mov
ret
mov
rcr
xchg
and
sti
push
xchg
adc
fidivrs
and
sar
mov
push
repz
cltd
scas
push
test
neg
push
ss
ja
clc
sub
insb
int
cld
arpl
clc
scas
and
rclb
push
jle
and
mov
nop
push
push
aaa
out
lock
js
mov
adc
clc
int
lods
cmp
inc
push
and
push
mov
mov
mov
mov
mov
out
pop
jle,pt
ficompl
sarl
push
pop
movsb
movsl
push
jmp
pop
xor
sub
or
pop
and
push
hlt
cmp
jae
cwtl
cmp
mov
test
pop
jge
xchg
icebp
xor
dec
sub
sub
leave
mov
mov
mov
rorb
out
pop
sub
mov
xchg
sbb
jb
jmp
cld
dec
mov
fsts
push
enter
jb
jl
push
ja
jno
imul
mov
fwait
push
cli
xor
and
out
mov
lods
fs
sub
or
lock
jne
jnp
out
and
js
das
ja
out
jbe
scas
mov
outsb
je
jae,pn
jne
jb
lods
scas
mov
dec
jo
sub
outsb
lock
insl
jne
insb
std
sub
imul
push
stos
cmpsl
imul
push
mov
stos
gs
fs
sub
arpl
jmp
popa
or
inc
sub
call
test
jbe
jne
push
dec
sub
outsl
push
lahf
insl
dec
insb
clc
cmpsl
pop
xor
addr16
or
xor
out
popa
pop
pusha
pusha
cmpsb
jle
jge
data16
jp
mov
ja
in
push
je
movsl
add
es
and
in
imul
icebp
gs
and
add
popf
fistpl
sbb
push
popf
adc
dec
jne
lods
jnp
aas
mov
push
pop
les
and
mov
lock
jnp
xor
movsl
mov
adc
or
fstps
dec
cmp
test
sub
gs
ret
inc
ja
jmp
scas
dec
test
push
cmp
mov
cmpsb
stos
pop
jo
mov
xchg
in
loope
inc
ja
adc
jmp
out
shrb
pop
into
push
push
jmp
leave
or
dec
lret
stos
nop
xor
xchg
lds
pop
cmp
adc
mov
xor
dec
jae
push
cmp
lock
sbb
xchg
mov
push
xchg
xchg
xchg
icebp
push
nop
dec
iret
pop
das
push
int
out
leave
insb
test
test
inc
mov
and
mov
data16
add
pop
scas
sbb
xchg
or
or
pop
scas
sbb
in
loope
mov
mov
xchg
loope
popa
jge
pusha
icebp
mov
in
lahf
stc
xchg
jns
jbe
jae
lods
jo
es
jge,pn
sbbb
cld
imul
jecxz
lock
icebp
jle
std
icebp
jge
cld
cmp
mov
cli
sub
jb
icebp
in
loop
jp
bound
out
or
sub
jne
pushf
xor
jecxz
mov
icebp
loope
jmp
xchg
js
notl
cmc
icebp
jne
icebp
icebp
in
dec
stos
in
sub
int3
jmp
mov
mov
cmp
popa
aam
aaa
loope
ja
mov
xchg
js
je
cmc
mov
mov
clc
idivl
cmc
pop
jl
repz
jge
pop
cmp
mov
pop
std
pop
jle
loop
push
icebp
xor
push
stos
dec
or
frstor
xchg
or
rclb
sbb
push
jb
or
fsubp
cld
fmuls
addr16
cmc
lds
aas
xchg
mov
imul
loop
mov
dec
test
jp
outsl
jmp
imull
stc
imul
loop
mov
loop
mov
xchg
mov
aas
mov
xchg
dec
lahf
xchg
inc
xchg
xchg
inc
xchg
lds
inc
xchg
ret
xchg
inc
pop
ret
sub
sbb
mov
addr16
cmp
in
sub
mov
ds
pop
mov
adc
adc
jae
or
repz
mov
push
jb
icebp
or
icebp
mov
or
mov
mov
negl
mov
push
sti
mov
inc
mov
cltd
mov
or
cld
or
push
pop
push
xchg
push
ja
imul
insl
or
imul
add
mov
cmp
fsubl
pusha
mov
and
cmp
ds
sti
imul
andb
loope
mov
mov
pop
push
jp
gs
ljmp
adc
scas
lret
sbb
cltd
pop
sbb
xchg
adc
adc
lea
popf
xchg
popf
adc
xchg
adcb
nop
in
insl
ja
xchg
mov
hlt
xchg
je
repz
jae
repnz
jb
icebp
xchg
icebp
adc
xchg
icebp
adc
nop
sub
or
test
or
mov
scas
jbe
icebp
xchg
sub
scas
in
aas
fnstsw
lods
cmp
mov
icebp
cmp
mov
std
and
mov
ss
mov
xor
sub
movsl
push
loop
leavew
vpunpcklqdq
in
fs
xor
loop
bound
popa
icebp
loopne
pusha
stc
outsl
mov
das
mov
test
push
mov
cld
or
popa
dec
imul
xor
loope
hlt
popf
je
repz
repnz
sub
loopne
ljmp
aam
jnp
jns
clc
icebp
js
div
ja
div
jbe
dec
ficoms
xchg
popf
test
sub
cmpsl
icebp
daa
icebp
cmpsb
icebp
ficoms
xchg
and
mov
xchg
and
in
es
stos
cmp
test
test
insb
repz
das
push
mov
inc
jae
outsb
inc
xor
out
push
cmp
xchg
aaa
adc
sub
xor
mov
xor
mov
xor
mov
xor
or
das
leave
scas
lret
enter
enter
mov
frstor
pop
and
push
test
test
push
xor
loop
bound
xchg
pusha
xchg
call
cmpsb
std
loope
mov
std
sub
sub
rcrb
jnp
lahf
repz
lods
pop
xchg
mov
jle
sub
test
test
lds
jne
cs
popf
mov
dec
push
or
xchg
mov
aaa
xchg
ja
mov
daa
xor
mov
xor
mov
xor
mov
inc
dec
and
mov
clc
leave
or
out
sbb
xchg
mov
inc
xchg
rclb
cld
mov
pop
mov
mov
mov
mov
int3
jbe
cli
jne
push
mov
outsl
push
out
mov
xor
incb
mov
sti
jle
jge
dec
sarb
inc
sub
rol
or
mov
shll
add
pop
je
out
call
sbb
sbb
mulb
jmp
arpl
loopne
inc
ja
leave
mov
test
fdivs
pop
daa
test
es
ret
and
mov
or
mulb
jnp
and
cmp
mov
dec
jnp
mov
loop
je
mov
je
jae
sub
call
outsl
jl
jmp
imul
xchg
push
das
fs
cmp
outsb
jnp
out
gs
dec
sub
and
mov
mov
mov
jae
std
in
int
push
ret
lret
scas
mov
dec
jl
test
dec
and
nop
ljmp
imul
inc
pop
rcll
rolb
fists
dec
hlt
int
dec
repz
jae
repnz
jp
stc
jne
test
add
fistpll
sahf
jb
test
out
arpl
outsl
ja
lret
lock
call
mov
rorb
in
es
cli
int3
loope
out
or
sub
jb
int3
dec
test
out
loop
std
cli
pop
scas
enter
cmc
xor
imul
test
fs
pusha
jmp
repz
jb,pn
icebp
xchg
adc
lock
jo
testb
out
xor
sub
repz
repnz
call
loopnew
data16
mov
jl
lock
mov
stc
pop
imul
adc
cwtl
and
sub
outsb
sti
and
insb
in
fs
jmp
rep
mov
imul
mov
mov
jae,pn
push
xor
push
arpl
je
pusha
push
xor
js
jge
mov
cli
repz
aas
hlt
je
mov
repnz
mov
xchg
mov
addr16
gs
arpl
loope
test
cli
jne
cli
cmp
cmp
mov
dec
dec
int3
fisttpll
add
mov
stos
popa
mov
call
mov
jnp
jl
mov
mov
loop
sbb
in
in
lods
in
incl
mov
jge
mov
jl
jg
push
cli
push
jp
push
jg
push
test
in
repnz
or
mov
call
repnz
aaa
clc
loopne
push
std
pop
jge
idivb
jae
mov
stc
mov
ja
push
out
repnz
jb
icebp
adc
lock
jo
out
add
cmc
out
xchg
in
dec
mov
or
jmp
movsb
inc
out
adc
xchg
sti
hlt
cli
rep
mov
mov
clc
inc
in
notl
push
testb
jecxz
push
mov
leave
in
int3
insb
inc
mov
push
ljmp
loop
cs
outsl
hlt
js
jns
andb
notl
lds
insb
int
mov
ja
icebp
imul
pop
jle
loope
jns
clc
xor
ja
ja
negb
jne
and
lret
mov
call
jmp
mov
adc
jmp
punpckhbw
jg
push
or
jne
lods
imul
stos
pop
movsl
iret
mov
xor
sub
xor
xchg
cmpsl
xchg
daa
xchg
cmpsb
pop
es
push
jge
repnz
jo
mov
mov
call
mov
aam
jp
jl
icebp
jnp
imul
sbb
je
jae
repnz
sub
or
add
lahf
lock
out
xchg
push
sub
out
jnp
sub
out
adc
out
pop
insl
sbb
pop
pop
fistl
pop
xor
mov
mov
sub
sbb
jae
insb
mov
sbb
pop
mov
loopne
lds
jns
mov
aam
pop
out
sarb
insl
je
fisttpll
pusha
push
call
jecxz
mov
std
jmp
mov
jae
movsb
mov
test
sahf
nop
movsb
addr16
aaa
cmpsb
in
data16
bound
mov
cmpsb
ja
insb
insb
jmp
cmpsb
mov
in
pop
aaa
insl
scas
jns
sub
out
pop
push
sub
lret
mov
push
popa
adc
jle
arpl
popa
or
or
push
cmp
jb
movsl
adcb
int3
hlt
shlb
rcrl
mov
inc
xor
mov
xchg
pop
loope
xor
loop
sub
add
sub
out
jnp
mov
mov
into
aas
jecxz
dec
in
push
add
pushaw
icebp
jl
cmpsb
inc
insb
sub
jl
mov
stos
sub
xchg
adcb
loop
fsubl
movsl
sub
lods
push
sbb
aaa
mov
int
and
test
adc
data16
lds
mov
jmp
jmpw
mov
lahf
mov
or
test
pushf
popa
out
mov
outsl
jge
loopne
add
ffree
std
sahf
jae
fidivl
mov
pop
arpl
push
jp
push
xor
jbe
in
dec
lret
push
sbb
and
loopne
aas
cmp
movsl
jmp
cmp
mov
out
movsl
xor
inc
rolb
sbb
mov
dec
or
cmpsl
or
sub
mov
movsb
inc
test
pop
push
adc
mov
cmp
outsb
call
mov
jnp
push
cltd
shrb
mov
leave
dec
sub
lock
inc
imul
and
and
mov
addr16
dec
dec
push
and
dec
cmc
and
jmp
mov
and
clc
cmp
jne
aad
pop
mov
ja
loop
repz
popf
in
mov
jnp
ds
ljmp
push
out
xor
icebp
mov
and
xchg
je
sbb
pop
jns
mov
mov
imul
push
mov
mov
dec
xor
stos
repz
idiv
jbe
in
or
aas
in
std
popa
inc
cs
loope
scas
xchg
jmp
ficoms
push
xor
and
jmp
xor
in
out
stc
mov
stos
sti
out
mov
xchg
push
add
push
pop
scas
push
dec
cmpsl
and
jl
mov
fiadds
sbb
das
ret
cmp
push
push
push
mov
dec
scas
xor
cmp
js
xchg
mov
xor
and
ljmp
inc
pop
arpl
sbb
insl
jne
jp
mov
dec
andb
cltd
or
sub
mov
popa
adc
mov
push
leave
lea
or
cmpsb
or
addb
hlt
mov
imul
jb
lea
pop
into
addr16
mov
sub
out
push
or
inc
mov
push
push
sub
data16
jne
test
or
mov
xrelease
lret
xchg
test
push
test
ljmp
cmp
aas
mov
sarb
jo
repz
mov
imul
addr16
inc
scas
loopne
mov
push
sub
int
mov
adc
push
mov
xor
arpl
stos
nop
mov
push
int3
xchg
jl
leave
inc
test
pop
lock
fcomps
xor
int3
mov
and
pop
mov
cwtl
jb
sub
push
loop
mov
cmp
in
pslld
jae
repnz
mov
iret
leave
lds
aas
icebp
js
push
outsl
adc
out
sahf
pop
add
push
adc
xor
and
jne
insb
jle
jl
mov
mov
pop
jecxz
adc
fwait
leave
mov
push
adc
data16
sarb
imul
add
testb
lock
xchg
arpl
push
jnp
loopne
popa
in
int3
insl
push
jmp
cld
and
movb
out
sub
xor
int
mov
popa
lret
inc
inc
mov
loope
sbb
xor
inc
jge
or
mov
jnp
sbb
out
inc
ljmp
std
inc
loopne
jb
das
inc
in
sbb
daa
push
jae
int3
stos
or
xor
sti
fimull
cmp
mov
mov
cld
mov
mov
mov
ss
mov
xor
icebp
mov
xor
xor
movsl
jae
arpl
bound
cli
mov
mov
mov
mov
out
push
aaa
xor
mov
push
adc
and
sahf
and
sub
aas
int
mov
sahf
cmp
ja
xchg
ljmp
and
pushf
incl
xchg
mov
arpl
jg
call
fisubrs
mov
mov
nop
sub
pop
cmpb
inc
jle
push
enter
fstpt
mov
andl
das
scas
mov
lea
pop
push
push
jbe
mov
pop
out
jne
jae
mov
xor
xchg
or
addr16
shlb
int
scas
and
jg
lock
cld
popa
insb
pop
ss
shlb
pop
and
ficompl
mov
int3
mov
cmc
pop
pop
push
test
out
mov
dec
jmp
dec
cltd
jb
add
stos
mov
mov
mov
pop
in
cmpsb
sbb
das
mov
int3
push
add
mov
adc
push
mov
add
stc
or
inc
sub
pop
test
mov
imul
mov
jb
sti
push
cltd
stos
cmp
ja
es
in
push
test
push
sub
test
xor
cmp
cli
call
jnp
jmp
sarb
cmp
jmp
cltd
dec
stc
imul
pop
cli
addr16
mov
mov
stc
mov
loop
scas
js
stos
jne
sub
or
outsl
icebp
cmp
and
imul
gs
cmc
arpl
popa
fimuls
jle
xor
jp
loope
js
stc
jbe
sub
push
and
outsl
push
repnz
in
stc
test
stos
lea
jge
je
jbe
insb
jb
aas
xor
stos
mov
cmp
stos
cmpsl
inc
mov
loope
mov
adc
int
mov
and
bound
negb
lret
sbb
arpl
adc
push
std
repnz
out
jne
add
mov
sub
and
xor
pop
jo
jecxz
push
movsl
lret
lds
jg
jae
test
xchg
xor
scas
adc
loop
sub
sub
mov
test
ds
repz
push
pushl
pusha
imul
scas
in
nop
stc
out
ret
outsl
out
push
das
out
out
sub
mov
sub
mov
in
in
sets
das
xor
lock
mov
das
adc
jmp
loop
lcall
pop
popf
pop
mov
jae
movsl
lock
addr16
mov
push
and
push
aas
push
ficoml
stos
or
cmpsl
loop
or
cwtl
sahf
pop
stos
out
cmp
add
addr16
in
sti
mov
popa
mov
xor
in
jmp
nop
scas
scas
int3
jge,pn
movsb
cltd
nop
hlt
mov
xor
cli
inc
cmp
repz
insl
cmp
call
bound
mov
dec
lods
push
add
aas
lock
and
push
in
inc
and
sub
cld
in
scas
clc
adc
in
push
loope
fdivrp
mov
sahf
lock
jl
mov
mov
enter
add
sub
mov
push
sub
enter
add
push
jecxz
fs
jecxz
mov
push
jnp
in
pop
in
scas
repnz
daa
jns
lock
jo
out
rep
sahf
enter
or
mov
gs
cmp
repz
mov
das
or
or
in
out
data16
imul
in
fs
ds
stos
in
jns
mov
adc
mov
fbld
enter
jge
adc
stos
jmp
add
mov
in
xor
push
addr16
or
dec
sahf
stos
pushf
mov
mov
pop
pushf
mov
push
aas
pop
dec
data16
je
dec
shr
stos
les
out
and
loope
mov
xorl
or
and
sub
jnp
or
out
out
and
sbb
mov
or
jb
std
push
xor
cmp
insl
xor
dec
movsl
lcall
repnz
and
ss
repnz
ja
xchg
aaa
cmp
lret
es
pop
scas
cmpsl
mov
aas
out
int
pop
iret
and
sub
loopne
xchg
sahf
pusha
push
mov
add
fmull
jl
lret
repz
scas
dec
jmp
es
pop
mov
fs
inc
ja
or
imul
int3
test
mov
scas
mov
xor
jo
test
iret
leave
repz
cltd
nop
cmp
and
pop
stc
mov
scas
pop
pusha
fisttps
popa
mov
subb
cmp
push
mov
jne
daa
lret
popa
xor
cmp
lods
pop
in
mov
jae
cltd
fnstsw
pop
or
dec
cmp
int
xor
and
xchg
pop
clc
xor
dec
push
addl
fdivrs
inc
je
ljmp
mov
sub
enter
aam
xor
cmpb
inc
aas
arpl
lcall
sub
mov
stos
leave
cmpsb
mov
adcb
mov
or
hlt
ds
ss
hlt
repz
mov
inc
pop
jge
xor
mov
sub
xor
xchg
int3
mov
stos
rcrl
ja
leave
dec
dec
ljmp
cmpsb
call
push
in
das
mov
ja
jg
das
push
sub
fsts
or
pop
dec
movsl
es
and
sbb
mov
cltd
js
jmp
subb
aaa
jmp
loopne
jge
loope
sub
int3
jo
sub
or
xor
lock
mov
test
popa
push
loopne
negb
fchs
imul
xor
pop
mov
ds
scas
fcomp
cmp
pop
out
cmp
sub
in
dec
or
in
adc
dec
test
sub
jnp
out
call
and
int
cmpsl
pop
jne
jnp
ljmp
addr16
add
jg
push
jge
cs
loope
xchg
sub
mov
lods
leave
lcall
sbb
push
dec
jns
outsb
int3
mov
popa
les
test
pop
mov
test
and
mov
roll
mov
mov
insl
sub
aaa
rorb
leave
cmp
jo
push
scas
sbb
pusha
cwtl
loopne
cmp
cmp
mov
xor
inc
ds
scas
scas
lret
sub
mov
das
stos
int
cmc
add
cmp
xorb
pop
xchg
pop
xchg
pop
aam
stc
arpl
mov
dec
fs
data16
push
repnz
inc
lods
and
jecxz
push
mov
cmp
stc
lret
adcl
or
hlt
jle
lods
fistpl
popf
loopne
lock
jb
icebp
fs
stc
popa
pop
loopne
and
out
mov
insb
mov
mov
or
dec
mov
mov
cs
sbb
sbb
jmp
out
sarb
jae
or
jne
icebp
inc
sahf
in
or
jne
mov
or
aas
adc
je
mov
dec
loop
nop
imul
das
lock
sub
jg
mov
lret
or
mov
test
jo
test
in
lea
sti
icebp
sbb
pop
aas
pop
test
test
aad
and
xor
push
popf
push
cmpsl
nop
subl
in
jmp
add
jo
icebp
mov
mov
mov
mov
int3
xchg
push
daa
push
push
mov
adc
scas
sub
or
dec
cwtl
test
or
je
and
xor
loope
mov
js
lcall
push
ljmp
icebp
out
dec
or
lods
lret
or
sub
scas
movsb
sbb
push
lahf
mov
mov
fcoms
mov
xchg
mov
adc
lods
stos
jmp
mov
or
test
subb
mov
loopne
mov
xor
aas
push
in
int
mov
sub
icebp
into
std
out
out
sub
or
inc
mov
insb
hlt
mov
mov
add
divb
xchg
mov
repz
xchg
je
pop
xor
addr16
aas
push
cmp
jl
mov
fnsave
out
aas
outsl
jb
test
cmp
jmp
jp
mov
jbe
and
cmp
ficomps
into
sub
sub
mov
xchg
push
xor
xchg
jg
pop
xor
ds
mov
and
out
jp
jae
out
sahf
xorb
jb
icebp
add
sbb
jl
aam
sti
cld
pop
shll
aam
push
mov
mov
nop
test
mov
xor
cmp
gs
xor
jae
ficompl
jecxz
xor
es
cmp
mov
cmp
mov
popa
dec
push
divb
mov
mov
mov
hlt
pop
pop
clc
push
xor
js
xor
insb
lods
dec
daa
cmp
loop
out
cmp
xchg
sbb
popa
mov
das
push
jne
inc
mov
movsb
push
cmp
and
jns
sub
mov
inc
mov
xchg
and
cmpsb
cli
movsl
inc
jae
jae
fimull
out
pop
lods
push
sub
jmp
or
push
mov
loopne
sbb
mov
or
sub
pandn
cs
xor
popf
rcrb
push
sti
xor
movsl
insl
out
mov
lds
fstpl
ja
adc
in
int
clc
mov
push
lcall
jbe
xchg
fs
push
mov
dec
cld
addr16
test
and
and
ficompl
mov
jbe
nop
cs
aam
je
lods
add
push
stc
jmp
cmpsl
add
lahf
jae
and
adc
push
fsubl
lcall
cmc
je
mov
jecxz
std
loop
xor
loope
mov
dec
and
push
jle
and
movsl
popa
lea
mov
divb
icebp
jge
dec
hlt
sub
stc
xor
in
negb
jge
idivb
clc
sub
jle
repz
mov
push
outsl
clc
xor
repz
scas
mov
ljmp
call
idivl
loopne
testl
push
dec
sub
sub
test
inc
hlt
xlat
push
push
xor
into
pop
jecxz
das
movsl
jbe
push
and
mov
dec
call
out
or
pop
lods
lds
cmp
cmc
xor
in
call
cmpsb
dec
es
loope
cmp
add
hlt
or
cli
das
movsl
jge
inc
icebp
shl
fimuls
mov
push
aad
mov
push
sub
ret
xchg
aas
push
lcall
lcall
and
loop
cmovs
mov
cmp
int3
and
shll
fs
ja
cmp
push
cmc
push
jne
xor
jae
mov
fcmove
loopne
push
movsb
imul
sbb
aam
xor
cmp
mov
mul
sti
push
jge
lock
or
lea
popf
push
js
pusha
icebp
jg
pop
and
or
outsb
or
jge
inc
fstpl
loopne
sbb
mov
bnd
imul
push
add
xchg
jnp
pop
sahf
loopne
clc
xchg
push
cmc
mov
pusha
imul
loopne
pop
jge
cmp
xor
inc
mov
or
in
ds
pusha
ss
shlb
inc
sub
es
add
nop
clc
adc
in
sbb
mov
scas
test
mov
call
loop,pt
mov
mov
jge
add
pslld
pop
loop
in
cmp
cli
aas
clc
inc
mov
cmp
lock
out
shll
out
mov
test
mov
pusha
push
mov
jp
stos
xor
mov
ja
arpl
lods
mov
inc
aas
sti
mov
mov
push
mov
mov
insl
jbe
test
ret
mov
ret
lahf
jl
int3
ficoml
xchg
in
lea
sub
cmpsl
jmp
in
add
arpl
xchg
aas
push
call
add
jecxz
sahf
shrb
sti
pushl
push
push
rcll
ljmp
and
dec
leave
lret
insl
or
dec
mov
push
and
xlat
clc
neg
inc
stos
out
repnz
push
mov
shll
sbb
lock
inc
icebp
rcr
mov
jge
jns
fldl
lock
out
aas
outsl
jb
pop
sub
mov
cmp
sbb
lods
lret
jns
and
mov
ds
cmc
mov
jnp
popl
ret
cmc
out
pushf
jne
pop
faddp
mov
xor
scas
mov
std
call
adc
xor
adc
loop
mov
mov
fists
jbe
push
icebp
push
fiaddl
int3
push
dec
in
push
popf
add
pop
jnp
xchg
icebp
xor
mov
movsb
icebp
aas
es
sbb
out
mov
xor
mov
jae
add
mov
or
cld
pushf
sub
lods
icebp
sub
lock
jnp
test
lods
inc
lcall
cld
mov
sti
aaa
icebp
xor
inc
jp
jmp
mov
pop
mov
nop
xor
fstl
mov
push
leave
dec
sar
loope
test
lods
inc
icebp
sahf
cli
and
scas
jge
jmp
or
sbb
push
adc
pop
ja
movsl
mov
mov
loopne
pop
push
push
sbb
bound
sbb
cmp
mov
call
orl
add
mov
rorb
repz
push
sub
push
jnp
loop
in
fs
or
mov
fwait
scas
mov
fiaddl
in
mov
lret
sub
inc
mov
or
in
sub
mov
jno
xchg
mov
imul
jge
imul
imul
dec
in
cmc
insl
adcl
and
lret
imull
aam
int
jo
test
add
inc
mov
sbb
icebp
aaa
repz
ds
outsl
adc
jne
lods
leave
sub
jo
rcrl
addr16
das
dec
in
das
pop
push
cmpsl
imul
cmc
sahf
push
cltd
push
test
inc
xor
jle
es
sbb
sbb
stos
cmpb
mov
or
cmc
xor
sub
cmpps
pop
jmp
mov
je
shll
call
pusha
jmp
es
scas
xor
int
cmc
int
mov
inc
adc
jae
sbb
mov
repz
adc
jge
lcall
in
gs
aas
mov
cld
mov
or
iret
sahf
lock
repz
test
test
jge
f2xm1
div
jp
sub
bound
mov
aam
push
add
jo
sub
insb
and
mov
lret
ss
in
jne
jecxz
mov
dec
insl
imul
loop
js
jbe
testb
inc
push
lahf
ret
int3
negl
dec
popa
repz
icebp
xchg
bound
push
inc
mov
xor
cmpsl
pusha
lcall
jle
ds
and
push
push
stos
shrb
sub
leave
test
adcl
mov
mov
xchg
jge
or
in
movsl
ret
mov
icebp
sbb
push
sahf
pop
lods
aad
push
jno
pop
cli
sub
add
enter
xor
arpl
loop
movsl
daa
js
mov
jne
xor
idiv
pusha
mov
lea
in
jb
sbbb
mov
arpl
negb
clc
push
cs
and
cld
push
cmp
repz
lcall
rolb
or
pop
push
shrl
xor
mov
mov
hlt
mov
in
cli
call
cmpsb
icebp
mov
pop
xor
rcrb
push
sub
push
dec
push
enter
add
test
add
mov
mov
mov
iret
je
repz
push
icebp
mov
negl
pop
ficomps
xor
jge
scas
inc
stos
push
sub
mov
repz
mov
cmpsl
aad
mov
jae
dec
push
ds
inc
bound
adc
int3
sub
aas
inc
in
bndldx
push
in
xor
jae
jg
pop
stc
outsl
repnz
ds
je
sbb
hlt
cmp
repz
cs
imul
xchg
mov
clc
mov
mov
call
mov
movsl
jmp
xor
sub
cmp
insl
dec
stc
inc
xor
sub
xor
lea
cwtl
jge
pop
fimuls
mov
scas
fs
daa
jb
movsl
and
pop
fdivrs
xor
in
scas
push
and
dec
test
aas
test
push
fcomi
fcmovu
call
push
insb
out
mov
test
add
lods
lea
mov
icebp
clc
fnop
aas
adc
mov
fdivr
cmpsb
movups
aaa
scas
cmp
xchg
sahf
adc
test
push
mov
loopne
je
shll
mov
outsl
pop
adc
test
sub
mov
jge
jnp
jmp
mov
and
in
stc
stos
int3
stos
push
scas
mov
nop
jbe
push
mov
mov
mov
les
jb
mov
jmp
cmp
jae
popf
mov
inc
imul
icebp
fstp
inc
loop
sub
loopne
outsl
jge
cmp
test
loope
jae
sub
lock
jnp
insl
in
push
cmpsl
das
and
fdivr
lock
mov
xchg
je
sub
pop
call
mov
jnp
jb
sub
jae
push
jb
stc
jmp
jg
stos
jmp
ror
lret
mov
and
or
cli
rorl
jmp
adc
push
pop
mov
jmp
mov
inc
lods
loopne
pop
xor
int3
cmp
aas
jge
cmp
jge
setp
pop
in
lods
fnstenv
repnz
jb
jno
jae
push
pop
jns
cld
insl
push
test
cmc
cmp
jge
lcall
sbb
cld
movaps
cmp
xcrypt-cfb
cmpsl
and
mov
xor
and
dec
mov
stos
and
icebp
or
sub
das
insb
cmp
aas
pop
insl
or
lods
sti
in
sub
or
outsb
data16
and
push
icebp
pushf
sahf
nop
xor
hlt
fdivr
jb
xor
outsl
mov
cmpsb
icebp
mov
xchg
sbb
lods
jne
xchg
pop
aas
sbb
push
mov
push
jmp
out
sub
in
cs
cmp
outsb
jne
mov
mov
cmp
dec
pop
inc
push
and
imul
arpl
push
xor
stc
imul
aas
imul
adc
cmpl
popf
icebp
fcomi
mov
popf
shlb
cmp
addr16
pop
xchg
inc
jae
push
xor
f2xm1
jne
cmp
xor
jmp
int3
push
inc
mov
adc
xchg
das
cmp
icebp
xchg
sti
sub
xchg
pop
insb
adc
in
test
push
lret
and
cmpsb
fisubs
push
insb
add
jnp
push
scas
lods
mov
or
movsb
mov
addr16
test
leave
sub
pop
es
mov
mov
fdivs
and
lea
cmp
cmp
or
scas
xor
test
popa
inc
and
jmp
std
cmp
lcall
mov
jnp
mov
cld
and
icebp
insl
jle
or
out
divb
mov
mov
mov
cld
cmpsb
jecxz
or
inc
and
mov
jae
jle
sub
and
cltd
lock
xchg
xchg
push
pop
das
push
popa
test
sub
icebp
pop
sahf
shlb
push
icebp
jns
adc
mov
xchg
in
iret
or
cld
cli
mov
cwtl
inc
xchg
inc
hlt
mov
in
mov
cltd
or
jmp
call
push
popf
nop
mov
xchg
pop
sarb
jmp
ljmp
mov
xor
int3
push
pop
mov
and
lahf
jge
fwait
xchg
sbb
pop
mov
adc
adc
dec
pop
movsl
es
and
jnp
pushf
add
repz
jae
loop
jecxz
mov
pop
arpl
cmp
movsl
ljmp
in
stos
std
in
mov
aas
popa
add
es
and
ss
xorb
aam
xor
push
mov
push
cli
leave
mov
mov
data16
mov
testb
cld
mov
inc
loope
int
mov
shrb
test
xchg
mov
cmp
sbb
mov
xor
cmpsl
cmpsl
cmp
add
jl
shrb
loopne
push
mov
jns
or
mov
repz
mov
and
or
ss
adc
pop
icebp
sub
dec
cmp
mov
insb
pop
ret
lret
packsswb
loop
pmuludq
jae,pn
pop
sahf
pop
xor
sub
mov
outsl
addr16
lods
and
pop
dec
repz
stc
lods
mov
mov
cmpsl
inc
mov
jno
and
movsl
push
jns
xor
rcrl
outsl
inc
bound
dec
int3
lock
jnp
jmp
cmpb
lock
jg
xchg
add
sub
popa
iret
dec
or
sbb
loope
movsl
add
in
mov
mov
sbb
in
bound
cmp
arpl
data16
mov
sub
mov
ds
clc
jb
lret
or
addr16
inc
cmp
js
leave
cmpl
test
push
cmp
mov
cmp
sub
mov
xor
nop
je
in
stos
sti
cmp
aas
sub
xor
dec
inc
jae
adcl
jnp
clc
in
scas
in
and
mov
and
movsl
jmp
lret
sbb
divl
bound
js
sarl
xor
movsb
cmp
sbb
data16
les
sbb
das
or
pop
mov
add
decb
dec
sti
data16
jns
cltd
jns
aas
stos
and
les
and
mov
jle
imul
or
jmp
dec
jmp
and
jbe
cmpsb
mov
pop
aas
fstpt
jne
int
enter
lahf
loopne
cld
inc
movsl
imulb
outsl
or
call
mov
inc
xor
jb
sub
sti
jp
std
cmp
loope
mov
xchg
fs
std
xor
mov
mov
cwtl
hlt
xchg
je
repz
jae
add
lret
enter
pop
popf
and
lock
in
ljmp
stc
in
jae
cmp
outsb
aas
sub
mov
and
cli
and
loop
mov
jae
xchg
and
mov
out
jae
cmp
mov
repnz
pusha
mov
cltd
enter
jne
movsb
icebp
xor
icebp
mov
icebp
mov
notb
jb
pusha
jg
je
lcall
jno
addr16
inc
mov
notb
lock
lret
repz
and
or
adc
imul
shrb
jge
push
pop
push
frstor
push
ljmp
dec
mov
cmp
data16
fwait
dec
fs
push
pop
push
push
iret
push
out
add
cmp
and
insb
jne
into
je
mov
push
lea
pop
sbb
jle
xor
loopne
mov
cmc
cmp
popa
in
out
xchg
aaa
push
mov
movsb
cld
in
leave
mov
ljmp
cmp
sbb
and
mov
xor
mov
and
movsl
cmp
mov
aas
lods
sti
mov
mov
stos
push
out
mov
lea
cmp
cmpsb
sbbl
mov
mov
and
mov
lock
loop
cmp
mov
loop
mov
mov
lea
pop
xor
repnz
xor
jmp
lods
gs
in
loop
in
xor
sahf
xor
in
fprem
xacquire
and
and
stos
cmp
je
cmp
scas
or
pop
in
inc
push
inc
and
xor
cmc
sub
push
mov
stc
cli
lcall
das
jp
push
pop
sub
mov
fs
inc
jmp
mov
jl,pn
inc
mov
xor
or
jecxz
jne
repz
sub
int3
inc
clc
test
scas
push
in
xor
das
mov
icebp
sub
fldl
cmp
jnp
ss
mov
xor
jmp
push
xor
push
xor
mov
mov
xor
das
ficoml
mov
xor
stos
stos
xor
imul
sub
cmpsl
jg
mov
mov
and
mov
and
mov
mov
mov
mov
cmp
mov
or
in
cmp
fidivrs
or
push
stc
shll
and
es
inc
jno
xchg
jge
imul
popa
push
jg
ss
icebp
loopne
pop
mov
dec
sti
aaa
push
mov
ds
icebp
shll
loope
aad
jnp
out
cmc
mov
fidivl
mov
hlt
jne
jp
int3
outsb
push
inc
fs
lret
stc
imulb
jl
mov
int3
hlt
cwtl
scas
clc
mov
adc
mov
insb
mov
sbb
mov
xor
scas
aaa
cs
jno
sub
push
repz
out
add
pop
cmp
cmp
sub
push
xor
mov
test
push
mov
das
dec
sbb
adc
js
nop
lret
push
out
xor
addr16
out
es
sub
jp
jp
cli
loope
mov
lahf
int3
fcomi
cmp
jb
lret
loopne
scas
pop
lock
inc
std
push
xor
ss
xor
sub
and
ljmp
push
cmpsl
sti
addr16
cmp
jb
ljmp
cmc
jb
loope
cmpsl
adc
loop
cmpsb
stos
int
aas
cmp
lock
jbe
xchg
popf
rcrb
jno
or
push
movsb
loop
mov
std
jg
fidivrl
push
fstl
mov
bound
loope
sti
lea
jnp
mov
mov
jo
ja
xor
inc
cmp
sub
popa
mov
xchg
push
sbb
jecxz
je
stos
mov
ljmp
cmp
mov
adc
push
stos
push
mov
or
xor
and
cmp
jb
inc
aaa
arpl
in
cld
clc
movsl
popf
loopne
add
out
pop
jge
pop
cltd
shlb
aas
test
leave
inc
dec
fsubr
cli
lods
xor
pop
repz
mov
mov
and
cmp
into
mov
inc
icebp
cmpb
jl
out
mov
loopne
push
arpl
js
scas
cmp
mov
fisubrl
je
loopne
popl
cmp
into
sbb
mov
ja
in
imul
mov
repz
inc
or
xor
in
fists
push
testb
add
sub
sarb
aas
insb
lods
movsl
push
jnp
dec
and
stos
mov
sub
sahf
lods
jb
stos
adc
out
jge
call
sahf
inc
data16
std
jge
jae
xor
shlb
ret
loop
mov
mov
je
int3
lret
pop
jecxz
insb
scas
xor
fdivl
sarb
icebp
jnp
mov
sub
sbb
sti
push
icebp
mov
sub
push
lahf
jne
sub
sub
sub
roll
rsqrtps
push
xchg
and
sti
sbb
mov
stos
mov
cmp
cmc
sub
jns
call
pop
arpl
or
jae
or
sub
fdivrl
movsl
lea
lock
cltd
inc
xor
sub
outsb
or
pop
movsl
repz
dec
add
popf
adc
shrl
jne
and
jp
divl
daa
cli
cmp
lcall
test
fs
imul
adc
cmc
cli
mov
mov
xchg
xchg
push
call
push
push
daa
mov
in
scas
pop
repz
xor
and
loop
mov
icebp
cs
test
sbb
cltd
mov
sbb
or
es
jne
sub
mov
jbe
bound
jg
loope
mov
lcall
sbb
push
stos
mov
in
scas
out
lret
push
imul
int3
sbb
orl
loopne
outsl
test
xor
lcall
dec
test
sub
stos
fimull
sbb
jbe
jle
cmpsb
jne
cmp
dec
imul
cmp
test
addr16
jp
dec
cmp
insb
xor
rorb
lock
hlt
stos
je
fcmovbe
xor
mov
adc
andl
push
add
test
mov
cmp
add
repnz
cmc
jl
pop
lfs
insl
icebp
int
mov
icebp
popa
outsl
inc
push
mov
out
cmp
test
pop
daa
xchg
jno
or
or
xor
aaa
out
popa
test
push
or
in
mov
lods
sbb
orl
and
jne
repnz
int
das
in
loope
test
sub
cmp
push
jge
sub
xor
lret
and
imul
hlt
lcall
inc
jl
xchg
leave
out
mov
ljmp
add
jl
cmp
test
mov
out
sub
mov
xchg
sti
shrb
mov
xor
dec
stos
adc
lds
jg
into
ffree
mov
sti
mov
push
shlb
int3
movl
push
gs
or
pop
cmp
out
push
imul
ja
dec
in
push
adc
out
loop
ret
int3
or
jae
test
popa
pop
and
aaa
cmp
ss
cmp
pushf
jl
jmp
and
add
scas
clc
sub
push
in
int
lock
sub
add
mov
popf
inc
mov
adc
ret
add
jle
xchg
je
insb
dec
loopne
ljmp
inc
dec
loop
ljmp
cmp
xor
pop
push
push
int3
push
mov
stos
and
popa
inc
hlt
fimull
inc
push
test
insl
mov
cmp
mov
divl
repz
mov
dec
mov
adc
in
jne
or
repz
lret
enter
aas
jbe
and
inc
loop
insb
ljmp
ljmp
sbb
xchg
cmpsl
mov
loop
data16
sub
aaa
out
repnz
cmp
mov
insl
jne
mov
xchg
mov
nop
decl
dec
jge
test
mov
and
test
and
rcr
nop
mov
cli
int
sub
test
pop
and
and
lahf
or
or
xlat
aas
mov
gs
lea
in
das
mov
mov
xchg
cmp
inc
addr16
or
das
out
pop
stos
jmp
pop
clc
sub
cmp
mov
jne
mov
push
popa
imul
jbe
clc
pop
cmc
orl
je
sahf
pop
mov
inc
std
test
cs
imul
loopne
leave
sub
adc
pusha
sub
mov
sub
and
jmp
in
les
je
fsts
mov
inc
scas
sub
repz
mov
cmpsl
aaa
stc
pop
mov
scas
cmp
lret
mov
push
jecxz
lret
ret
xor
or
loope
cmc
and
lock
jmp
popa
xor
mov
aas
mov
sub
mov
addr16
addr16
xchg
xchg
js
out
jge
outsl
jae
lret
into
shrb
je
out
pop
pop
loope
mov
fsubrs
jnp
mov
popf
adc
outsl
fimuls
sarl
aas
push
mov
sub
mov
mov
scas
orb
loop
icebp
fdiv
ljmp
mov
shrl
cmc
mov
xchg
xor
shrb
mov
push
stos
in
in
mov
pop
out
xchg
cmp
mov
icebp
cli
jo
in
cmp
out
in
es
lock
jne
push
leave
movsl
subl
cmp
sub
jnp
jae
xor
inc
jns
stos
scas
mov
or
and
sub
inc
idivl
ds
mov
xchg
cmp
iret
loope
mov
jl
mov
jnp
fyl2x
jbe
pop
out
jb
adc
repnz
loope
popf
jne
clc
icebp
xchg
mov
mulb
sbb
jmp
bound
mov
pop
mov
mul
dec
in
ss
pop
mov
jae
sub
in
sti
push
int3
lea
jmp
or
stc
stos
fxam
pushf
adcb
push
push
sub
std
cmp
jmp
movsb
lods
jnp
fimull
je
sarl
loop
dec
bound
popf
mov
insb
js
and
in
rclb
xor
test
shrb
rorl
xchg
loopne
movsb
je
int3
mov
cmp
mov
popf
inc
jne
and
cmpsb
cmp
adc
aaa
dec
mov
int3
xor
cmpsb
mov
xor
and
xor
mov
jb
mov
and
pushl
std
xchg
jne
inc
scas
inc
notb
push
adc
jb
or
cmp
out
scas
and
pop
sahf
push
in
lea
popf
pop
sahf
xchg
repz
cmovne
or
test
aam
add
cmp
mov
push
mov
decb
je
xrelease
fstpl
aas
push
ds
mov
stos
iret
xchg
sub
in
jnp
pop
cmp
fisubl
data16
push
sbb
sarb
int
in
lods
dec
lods
test
sub
adc
faddp
call
shrd
mov
or
inc
repnz
icebp
pop
mov
movsl
aad
out
nop
push
dec
in
mov
jecxz
in
xor
icebp
pusha
cmp
fisubrl
pop
and
rclb
add
int3
sbb
mov
or
rorb
xor
xchg
je
push
mov
or
inc
and
js
aaa
pop
jbe
es
call
sub
mov
cmp
cwtl
sahf
shlb
push
cmp
addr16
mov
cli
sbb
loop
repnz
test
jmp
cmp
loope
pop
mov
push
inc
adc
mov
scas
xchg
jb
pop
ja
stc
insb
sub
int
loope
fs
sti
jno
xor
shll
out
rcrb
or
movsl
lea
arpl
in
adc
mov
jecxz
stos
std
scas
pop
inc
and
andb
sti
sub
jp
mov
hlt
movsl
ss
inc
loope
es
cld
mov
jbe
mov
mov
dec
jl
cld
jl
mov
ljmp
mov
inc
sbb
mov
dec
xor
dec
stos
dec
imulb
lret
dec
mov
int3
test
xor
aaa
mov
clc
ljmp
loopne
mov
hlt
lret
lret
jb
xchg
fdivrl
push
out
cld
mov
in
jge
sub
or
or
icebp
pop
ds
setl
enter
nop
lods
or
and
pushf
in
sbbl
out
ficoms
enter
jne
out
packssdw
aam
js
aas
insb
sub
cmpsl
sub
inc
icebp
lret
mov
shrb
jl
scas
iret
mov
dec
int
and
mov
inc
sub
pop
xor
or
ja
movsl
xor
pop
jae
jl
int3
bound
cmpb
dec
pusha
lret
add
mov
lock
mov
loope
insl
rorb
dec
lret
push
push
pop
jae
outsb
mov
push
xchg
adc
dec
lret
mov
push
subl
cmpb
dec
jmp
mov
xor
or
cmp
cmpsl
xor
jb
and
sbb
xor
rclb
or
or
mov
mov
bound
xchg
cmpsl
jp
and
popw
ret
lret
mov
pusha
imul
ds
sahf
add
pop
dec
xor
in
pop
add
cmp
add
outsl
std
and
idivl
stc
push
mov
jne
cmovp
mov
pusha
shr
das
sbb
movsl
shlb
repz
das
test
loop
push
jne
test
out
lods
cmp
mov
mov
aas
jbe
and
xor
jmp
push
mov
out
or
call
in
dec
add
mov
xchg
sbb
sub
pop
dec
cmp
ds
mov
push
std
push
cmpb
arpl
xchg
sub
movsl
mov
lods
pusha
popf
pushf
out
pop
mov
jle
mov
scas
or
mov
cld
aaa
xor
insl
mov
xor
mov
mov
cli
jae
cmpsl
and
dec
pushf
ds
mov
pop
cmp
scas
pop
jnp
fnstcw
sub
loopne
jle
mov
aas
std
and
xchg
cs
test
cmpsl
bound
popf
adc
pop
jb
sub
jmp
sti
push
mov
es
xor
inc
insl
push
out
shlb
xchg
jp
ds
pop
ds
push
xor
test
mov
sub
subl
shll
ucomiss
movsl
xorl
imul
push
bound
sub
mov
pop
aaa
gs
repz
mov
mov
imul
inc
cs
mov
xor
movsl
pop
cmp
and
adc
aad
cld
loope
mov
dec
jne
movsb
je
repz
cmpb
xchg
jp
dec
push
int3
add
sub
pop
and
loope
int
into
hlt
repnz
loope
xor
push
push
dec
jle
jne
popf
push
icebp
scas
xorb
jg
jl
mov
ret
jb
int3
lahf
push
pusha
mov
inc
push
bound
ret
xbegin
addr16
loop
xor
xor
inc
fstp
sti
out
adc
fidivs
cltd
push
cmp
dec
in
sub
mov
mov
arpl
push
loop
stos
aas
icebp
pop
lcall
xor
mov
cmpsw
hlt
jecxz
jae
pop
popa
add
push
out
scas
je
add
es
lock
mov
xor
cld
gs
jp
mov
jecxz
dec
scas
lods
sub
sub
test
inc
or
dec
out
gs
sahf
inc
insb
cwtl
mov
sti
out
repnz
xor
das
push
insl
dec
data16
sub
sbb
xor
outsl
xor
xor
jp
dec
xchg
movsl
pop
movsb
mov
inc
cmp
sbb
test
xor
loope
insb
inc
cld
test
mov
dec
mov
in
sub
push
sti
sub
je
pop
clc
mov
icebp
and
pop
jmp
scas
shrb
and
leave
ja
or
repz
dec
or
mov
das
aad
adc
int3
mov
call
loop
mov
or
cmp
fisttps
xor
cmp
inc
mov
pandn
je
jbe
mov
inc
mov
cmpsb
jmp
inc
cmp
jg
sbb
mov
ja
lahf
scas
cmp
mov
mov
daa
mov
popa
sti
in
dec
imul
xor
cmpsl
mov
mov
jb
test
loopne
or
sub
int3
icebp
add
addr16
icebp
mov
and
jae
inc
xor
pop
xorb
jecxz
sub
and
push
fisubl
in
xor
push
and
cmc
xchg
jne
adc
sub
jbe
ret
scas
and
js
mov
ret
sub
jbe
out
popa
push
popf
ja
cmpsl
mov
sub
sub
popa
jg
xchg
stos
add
out
mov
push
inc
sahf
inc
loope
mov
enter
xchg
mov
scas
jbe
sub
jns
cltd
mov
lock
jno
lret
cmp
mov
das
cmp
jg
jnp
sahf
outsl
das
repz
out
cltd
sahf
in
sub
sub
stc
mov
lret
in
mov
out
int3
dec
lea
pavgb
xor
sub
test
or
mov
mov
xor
shll
repz
fstpl
mov
stos
mov
bound
daa
inc
shlb
inc
jae
es
movsl
pop
sbb
dec
mov
int3
shr
jnp
std
ja
pop
dec
cs
lock
je
data16
mov
outsb
sbb
sub
aas
mov
xchg
scas
push
lret
cmp
inc
mov
cmp
adc
fsubrl
jnp
xchg
icebp
shl
mov
mov
mov
lret
mov
jb
mov
scas
test
je
std
jae
pushf
cmp
cltd
loope
das
jne
jnp
out
loope
test
int3
mov
pop
insl
icebp
adc
dec
aad
jl
orb
jae
pop
ficomps
push
repz
mov
cltd
into
cs
repnz
insb
lcall
add
push
lock
mov
loop
das
fsubs
lods
into
addl
sub
jge
or
mov
cmc
imul
or
call
int3
dec
mov
ljmp
in
aaa
jnp
cmpsl
lea
daa
cmpsb
mov
das
stos
cmpb
xchg
mov
or
mov
jns
arpl
aaa
mov
sahf
xor
fstl
push
addr16
push
adc
jmp
and
mov
mov
push
and
jnp
cmpsl
add
mov
fistps
stos
fstl
cmp
stos
lcall
repz
loopne
aaa
jge
adc
cs
fsubp
movsb
addr16
inc
bound
mov
imul
cltd
call
aaa
cld
mov
mov
pop
inc
mov
test
lret
test
hlt
cmpb
icebp
add
cmpb
xchg
push
sbb
mov
cmp
sbb
sbb
push
pop
push
xchg
dec
clc
push
xchg
push
adc
dec
xchg
jmp
xor
mov
push
fimuls
mov
in
sub
fdivp
loope
jl
mov
mov
lret
test
aam
jge
popf
andb
out
pop
and
mov
std
btc
mov
das
in
lock
dec
and
faddl
movsl
cmc
shlb
test
nop
jb
test
bound
xchg
adc
data16
xor
lock
arpl
mov
dec
jnp
mov
and
jb
cmpsl
rclb
mov
movsl
jne
xor
xorb
fldenv
xor
push
cmp
orl
push
xchg
ja
inc
xor
loopne
inc
inc
fs
adc
divb
scas
iret
mov
bound
lret
leave
lds
test
pop
test
jae
loope
lret
imul
inc
and
bound
adc
bswap
or
push
pop
icebp
fdiv
pop
lcall
jb
cmp
and
jle
ds
cwtl
or
test
int
gs
cmp
imul
jge
call
sahf
cld
jae
push
imul
cmpsb
movsl
mov
das
sbb
jae
loopne
mov
jo
out
nop
jo
dec
mov
xlat
popa
insl
bound
ds
pushf
pop
fwait
xor
test
cmp
ds
mov
das
popf
icebp
mov
add
mov
or
imul
fisubrs
enter
xor
cltd
andb
sub
lock
in
fstl
push
popa
mov
mov
and
das
mov
mov
xchg
adc
jae
mov
inc
test
lret
cwtl
dec
ja
subl
jmp
mov
das
mov
aas
repnz
lea
shlb
int3
sbb
movsl
cwtl
adc
pop
cmp
divb
insb
fisttpll
loopne
mov
mov
jmp
fidivrs
lods
xor
xor
loopne
xchg
jge
jae
inc
pop
dec
lock
push
imul
scas
jo
mov
and
lods
ffree
psrlw
push
ljmp
inc
mov
jecxz
repnz
leave
fsubp
mov
sub
orl
icebp
push
pop
push
cmp
jnp
dec
adc
or
mov
xor
lea
sub
in
mov
rorl
push
ss
push
orl
data16
or
rcr
in
pop
cs
push
sub
addr16
mov
test
push
pop
mov
pop
mov
push
test
test
push
arpl
sub
in
div
push
xor
and
xchg
sub
mov
enter
test
and
add
mov
loop
test
pop
mov
and
push
imul
xor
pop
insb
fcomi
imul
push
inc
inc
hlt
daa
out
xchg
subb
fdivl
mov
mov
mov
nop
or
orb
imul
cmp
bound
sahf
fimull
xchg
mov
and
cmp
mov
jecxz
push
out
fisubs
or
or
mov
or
jge
pop
mov
xor
dec
dec
test
pushw
nop
cmc
bnd
in
ror
lock
les
or
mov
pop
pop
xchg
icebp
in
out
jb
movsl
xchg
loop
cmpsb
xor
das
and
jnp
push
psrad
addr16
sub
arpl
loope
das
mov
push
ficompl
mov
test
ss
xor
adc
mov
fstp
clc
push
ror
nop
inc
arpl
je
dec
dec
adc
lea
and
gs
or
jl
and
jecxz
int3
bound
mov
mov
jae
push
mov
pop
arpl
push
in
in
inc
je
repz
or
jmp
cmpsl
mov
lret
jae
leave
mov
pop
repz
ja
scas
xor
cmpsl
inc
add
js
xor
imul
cmp
cmc
cltd
shr
adc
mov
dec
mov
orl
push
jg
jbe
or
icebp
cs
inc
jbe
insb
decb
sub
sub
hlt
pop
jae
pop
icebp
dec
mov
inc
shlb
jnp
mov
stos
std
addr16
nop/reserved
addr16
jo
test
push
mov
imul
cmp
into
in
gs
ljmp
mov
nop
jb
pop
cmpsl
in
add
ret
dec
sbbb
push
jnp
sub
sub
and
inc
or
push
ljmp
lret
bound
movl
or
cmc
loop
psrld
jp
int3
lds
call
arpl
pop
pop
arpl
ja
or
jmp
adc
sub
inc
cli
ds
mov
mov
imul
in
gs
pop
loopne
ja
sub
sbb
out
stos
sub
adc
scas
mov
loop
xlat
sysexit
jne
in
hlt
mov
cmp
popf
nop
jl
repnz
icebp
mov
jmp
fwait
jnp
adc
sub
sub
outsb
loop
movsl
je
aas
out
and
push
xchg
je
mov
sub
idivb
xrelease
sarb
or
popf
je
test
outsb
xchg
enter
mov
loopne
dec
je
mov
and
pusha
jge
stc
jp
out
bound
push
in
shr
dec
or
scas
or
aas
nop
arpl
lret
test
cmc
mov
test
lock
lods
mov
adc
dec
cmc
jge
outsb
test
loop
das
mov
bound
ds
cmpsl
call
jae
dec
flds
cwtl
sub
cmpsl
xchg
test
stos
pop
cmp
mov
imul
lret
daa
pop
jmp
jmp
mov
scas
push
cmp
push
mov
dec
mov
adc
dec
movsl
jmp
imul
pop
jp
and
push
pop
arpl
or
cmp
cmpsl
mov
movsb
inc
cmp
pop
jne
test
and
mov
inc
ljmp
push
fbstp
test
xor
cmc
and
fistps
insl
inc
dec
inc
cmp
pop
adc
push
hlt
int
xor
inc
lret
inc
pop
data16
push
cmp
mov
sub
mov
out
int
int
sarb
inc
cmp
xor
test
clc
fst
es
ljmp
jmp
dec
pop
ja
stos
insl
jl
dec
cmpsl
popf
jl
mov
lret
lret
popf
mov
sbb
aaa
xor
ret
xchg
call
dec
fdivl
aas
jns
push
push
cmp
cs
mov
enter
jge
add
ja
cmp
mov
out
jge
jp
out
sub
icebp
movsb
mov
mov
xor
stos
xor
mov
jo
cltd
hlt
xor
inc
add
inc
xor
loop
into
dec
cli
and
imul
jge
dec
mov
call
sti
in
enter
sub
push
andnps
or
daa
int3
add
fcomps
in
sub
jp
sbb
sbb
faddp
cmp
jp
jge
lods
jmp
mov
pusha
mov
dec
mov
xor
in
outsl
popa
insb
das
jmp
cmc
loop
and
or
popa
adc
cs
xor
in
xor
adc
push
inc
shrb
nop
stos
xchg
jnp
mov
mov
mov
sub
and
inc
xchg
and
jge
movsl
out
daa
jnp
jecxz
loope
insl
dec
popf
xor
in
sti
jmp
mov
push
lea
jb
test
js
clc
icebp
idivb
out
orb
jne
jg
int3
push
inc
jmp
lret
in
jecxz
sarl
aaa
repnz
hlt
jb
and
iret
mov
in
test
xchg
jl
mov
je
call
outsl
fwait
scas
cmp
scas
or
rorl
mov
icebp
clc
fimuls
push
push
jae
pop
loope
in
mov
jle
mov
adc
arpl
loop
call
aas
mov
outsl
pop
sub
mov
scas
cld
xor
movsl
jno
call
add
popa
xor
mov
enter
test
and
xchg
cmpl
mov
mov
es
mov
fchs
std
out
popf
jo
cmc
rcrb
jo
adc
cli
popf
cmp
jb
ficoms
repz
jmp
cmp
push
jbe
je
lahf
jg
jp
in
jbe
in
and
mov
cmpsl
shrl
int3
push
call
repnz
repz
push
jmp
imul
sahf
jbe
or
cmp
push
imulb
xor
mov
jnp
sti
xchg
sbb
cltd
sub
mov
call
jl
stc
orl
mov
mov
inc
cli
inc
clc
push
js
notl
or
cmc
cmp
data16
ficoml
sub
enter
insb
mov
jmp
orb
xor
add
in
flds
mov
sub
xchg
jmp
repnz
push
imul
push
lods
popf
loopne
pop
jge
cli
lcall
cmc
mov
cmp
xor
call
jp
imul
mov
and
int3
fisttps
clc
mov
test
mov
popa
cld
leave
push
test
cmp
or
lret
jo
out
dec
jl
sub
add
loope
or
mov
cmp
ficoml
cwtl
lret
push
xor
arpl
mov
int3
and
ds
jl
je
int3
sub
push
scas
aaa
push
dec
loope
mov
scas
jbe
out
add
sbb
jns
aas
lock
test
mov
mov
pusha
adc
dec
int3
mov
movsl
les
cmp
pop
inc
cmc
lret
mov
dec
and
imul
and
jne
pop
jb
stc
loopne
mov
imul
out
mov
loopne
adc
cmp
add
sub
pop
mov
cmpsl
push
jnp
push
ljmp
movsl
shrb
sub
cmp
xchg
jmp
bound
cmp
movsl
lock
int3
dec
je
data16
bound
mov
xor
gs
hlt
adc
xor
or
dec
dec
cmpsl
aas
jne
fisttpll
call
inc
imul
or
adc
fsubl
and
xor
mov
fldl
loopne
int
cmp
cmp
xchg
mov
mov
sti
out
fwait
scas
sahf
push
cmp
repz
inc
jae
sub
push
mov
mov
std
scas
dec
sub
cs
dec
das
and
jge
push
mov
mov
mov
push
ret
ss
cmc
adc
jno
xor
pop
push
loopne
pop
ret
hlt
mov
aaa
movsl
or
sub
fsubr
jmp
jae
in
imul
sub
jmp
movsl
mov
hlt
dec
sahf
sarb
mov
fcomi
insl
in
inc
aas
movsb
cltd
push
sub
aaa
jns
jns
mov
dec
jge
adc
sub
ljmp
adc
and
dec
jbe
sub
out
scas
test
mov
imul
mov
pop
xchg
je
jmp
call
add
pop
lds
or
test
popa
fs
fsubrp
stc
jne
in
aas
outsb
jnp
push
cmp
mov
shlb
jo
insl
out
imul
lret
fstps
push
push
lret
add
xor
and
sub
pushf
fnsave
pminub
icebp
test
jp
das
jmp
jge
push
pop
jo
testl
xchg
adc
in
aam
je
jmp
inc
jge
sbb
inc
push
int3
mov
mov
insl
outsl
call
jne
insl
mov
jb
or
sbb
mov
setb
add
jp
insl
das
pop
jnp
xchg
std
nop
mov
stos
pop
mov
cmpsb
adc
pop
rcrl
icebp
or
je
push
sti
cld
inc
mov
or
mov
jnp
push
ds
and
in
shrb
out
mov
jecxz
data16
inc
jb
adc
lret
cmp
punpckhdq
inc
imul
or
mov
mov
stc
out
jmp
pusha
addr16
jae
dec
mov
mov
int
mov
insl
mov
nop
and
call
hlt
fildl
lods
ja
inc
jne
test
push
jecxz
push
insb
out
cmp
ja
mov
jns
xchg
mov
outsl
fs
addr16
fiaddl
je
lret
xor
add
orl
add
mov
rorb
sub
sbb
lcall
aam
cwtl
je
jo
jmp
xor
cld
jmp
repnz
xchg
jb
ljmp
xchg
cli
jge
frstor
pop
xchg
pushf
sub
lods
pop
ljmp
inc
popa
mov
mov
pusha
cld
or
fiadds
mov
out
push
push
scas
or
push
scas
js
xor
and
insb
dec
call
pusha
pop
jnp
push
int3
jbe
jno
jo
outsl
insb
cmp
test
jb
pop
cmp
mov
xchg
int3
bound
jo
hlt
cmpsl
insb
push
jle
pop
jmp
mov
loop
icebp
cmp
cmp
and
insb
xchg
sub
cmpsl
bound
imul
jg
je
bound
ljmp
bound
movsb
jle
test
cmpsl
jbe
pop
loopne
jmp
cmpl
cmp
inc
je
je
jb
outsb
push
jns
data16
jecxz
js
mov
or
lock
std
add
mov
mov
cmp
mov
jmp
loope
jb
test
fimuls
nop
clc
shl
rcrb
lock
sbb
jp
addr16
add
jle
aaa
sbb
rcrb
in
jnp
out
inc
add
xor
and
sti
test
mov
mov
cmc
add
es
scas
and
scas
stos
lds
push
out
lock
sbb
mov
jbe
jmp
or
scas
push
sub
sub
xchg
add
mov
add
cltd
cmp
sbb
push
icebp
xchg
test
rorb
ret
icebp
push
mov
adc
mov
cld
das
das
divb
daa
cmp
mov
scas
aad
adc
sub
mov
jbe
mov
insb
bound
pop
or
pop
sub
fs
push
adc
stos
pop
jb
or
push
cmp
inc
jmp
ss
jmp
stos
in
add
test
repnz
std
and
add
mov
mov
je
pop
pusha
sbb
bnd
mov
ffreep
sbb
lock
imul
jae
fisubrs
mov
xchg
int3
mov
sti
mov
stc
add
test
jge
mov
dec
je
stos
lods
in
sub
inc
mov
or
test
xchg
and
dec
icebp
cmp
adc
pusha
loop
insb
mov
fstps
in
jmp
popa
mov
icebp
jbe
inc
jge
jnp
jl
sbb
aas
lods
push
arpl
push
test
and
jg
nop
dec
dec
hlt
and
shlb
jb
push
dec
ljmp
or
outsb
push
adc
mov
stos
mov
das
push
std
cmp
xchg
lds
int3
pop
add
loop
mov
jne
push
sti
imull
cltd
or
loop
das
inc
jnp
mov
hlt
push
fcoms
sti
test
lea
dec
sub
cmp
test
stos
int3
fnsave
cli
imul
sbb
hlt
repnz
repnz
int
int
mov
jl
hlt
fistps
out
adc
in
cli
shlb
xacquire
and
clc
scas
and
loope
movsl
fldz
bound
int3
push
bound
pop
mov
adc
xchg
int3
jg
jne
mov
test
and
pop
cmpsl
sbb
out
mov
cmp
lds
pushf
cmp
sti
cmp
call
or
icebp
inc
inc
jmp
xchg
jge
mov
cmp
fsubp
aaa
popf
cmc
fsubl
push
push
in
xchg
in
and
stos
fstl
imul
movsl
jb
xchg
popa
add
insb
notb
fwait
and
test
and
sub
ja
jge
sub
jge
out
clc
jae
jns
test
mov
bound
out
mov
cltd
pusha
jno
icebp
sbb
mov
movsl
insb
stos
pusha
cmp
shrb
add
pop
aaa
sahf
jb
fsubp
xor
push
push
popf
jb,pn
mov
jmp
das
scas
into
push
or
pop
sti
ret
push
inc
loop
pop
icebp
xchg
cltd
hlt
and
jecxz
cmp
adc
aaa
hlt
data16
pop
cmp
int3
push
in
cmp
rorb
inc
and
sub
int3
in
in
scas
pop
stc
in
mull
aam
stos
or
xchg
sbb
xor
sbb
jb
test
and
icebp
ficomps
push
mov
gs
push
jge
cs
pop
mov
scas
lahf
cld
pop
ja
addr16
and
dec
jmp
pop
adcl
dec
cmp
add
and
cmp
in
das
and
jns
mov
inc
mov
mov
mov
jbe
call
jns
pop
les
lock
or
cmpsl
fdiv
xlat
jae
aas
mov
add
cmp
jae
cltd
ja
mov
je
fld
cmpsb
lods
sbb
mov
xchg
mov
in
andb
fldcw
and
jecxz
in
adc
jmp
les
ss
ds
loop
mov
cli
aas
icebp
ds
mov
mov
icebp
jne
xchg
sahf
in
arpl
in
lcall
jb
scas
jne
dec
cltd
inc
ljmp
and
addl
push
mov
repz
and
cs
push
mov
mov
mov
lods
mov
sub
fs
mov
adc
add
pop
pushf
jnp
sub
mov
out
out
es
mov
test
cmp
jo
lds
and
daa
pop
out
mov
pop
test
addb
sub
and
lret
mov
mov
lea
stos
cld
out
sahf
sub
push
dec
xchg
mov
push
mov
roll
push
ds
pop
sbb
jbe
push
bound
dec
popf
addr16
sub
cmp
sbb
cs
cwtl
pop
sbb
insl
jg
sub
mov
jne
int
jecxz
or
sub
imul
pushf
popl
mov
pcmpeqb
repz
push
xor
xor
scas
xor
imul
pop
in
or
fstl
mov
dec
daa
addr16
push
inc
jl
and
mov
scas
in
and
sbb
pop
cmp
hlt
jne
xor
es
sub
imul
das
dec
sub
cmp
repnz
sbbb
jmp
arpl
test
repz
insl
mov
dec
scas
pop
imul
mov
xor
aam
jg
cltd
dec
sti
stos
lret
aas
jge
sbb
xor
mov
jnp
cmp
add
out
sti
out
rep
jp
and
imul
sub
aas
popf
icebp
xor
repz
jge
xchg
jge
push
aaa
and
lock
and
cmp
mov
sub
popa
imul
pop
xor
sbb
cmp
stos
test
mov
imul
xor
mov
mov
ja
xor
xchg
push
mov
push
push
mov
jge
cmp
mov
cmpsb
aas
paddd
cmpsb
jl
sub
stc
lea
xchg
xor
icebp
out
mov
ja
push
jne
in
lock
test
stc
das
ret
add
mov
dec
jmp
sub
xor
imul
inc
xor
adc
ljmp
lcall
aaa
lret
or
ja
sub
xor
hlt
push
cltd
nop
repz
rcrb
outsl
sub
jnp
scas
jmp
or
fldl
cmp
int3
cltd
push
ljmp
sub
arpl
es
shlb
fisubl
mov
jmp
roll
ljmp
jmp
int3
loop
icebp
es
sbb
jbe
sti
pusha
sub
lock
xchg
sub
fnsave
or
or
and
popf
jne
sub
movsl
subb
inc
in
mov
jl
inc
hlt
les
test
insb
cmp
je
repz
mov
pop
cmp
daa
and
cmc
sbb
jae
jbe
scas
jbe
push
xchg
or
fidivl
xchg
sub
fld
mov
mov
pushf
push
jmp
mov
cli
es
push
xor
in
lea
push
fisubl
fisubs
mov
inc
call
mov
js
je
popf
bound
cmp
cmpsb
jle
loopne
outsl
adc
call
mov
js
push
and
adc
dec
mov
bound
cmp
fsubrs
sub
jne
mov
pop
jae
xchg
icebp
adc
dec
repnz
sub
js
sarb
shlb
push
icebp
adc
das
inc
clc
and
pop
nop
das
cwtl
cwtl
xlat
mov
mov
push
xchg
pop
add
stos
push
sahf
push
mov
out
mov
test
mov
inc
sbb
shrl
and
movsl
jge
cmpb
dec
insb
xchg
push
aam
or
sub
movsl
xchg
mov
in
dec
out
fisttpll
leave
ds
mov
add
arpl
jp
aam
jne
movsb
stc
lods
das
add
js
shl
mov
sti
and
inc
cld
mov
mov
cmc
cmpsb
ficoml
jl
mov
and
imul
cmp
icebp
decl
mov
popf
xchg
mov
aas
sub
and
jle
xchg
sbb
jne
adc
mov
xchg
ljmp
mov
push
jle
ja
lds
sub
dec
or
add
mov
xorl
popf
push
insl
and
mov
aad
decb
and
jbe
outsb
lret
sub
fwait
push
mov
adc
dec
jl
stos
and
mov
and
add
and
inc
mov
in
pop
push
xchg
test
rclb
xchg
icebp
aam
dec
sub
mov
pop
data16
mov
ljmp
dec
fistpl
cmp
jmp
and
dec
jb
bound
fwait
or
mov
cmpsb
sti
daa
mov
shr
icebp
shlb
aaa
or
cmp
sahf
jo
mov
adc
addr16
jecxz
arpl
push
cld
jge
in
add
push
cmp
and
daa
xor
aaa
mov
sbb
xor
hlt
cld
push
xchg
and
jo
dec
insl
jmp
mov
mov
je
loopne
pop
pop
mov
stos
mov
push
xor
or
and
mov
mull
jge
call
hlt
cltd
in
repz
and
inc
jge
sub
push
jmp
xor
mov
push
je
and
pop
and
push
ja
xchg
scas
mov
dec
dec
mov
or
data16
push
popa
jne
jl
dec
jg
and
call
push
sti
jbe
fldl
je
mov
repnz
das
jecxz
loope
lock
int
mov
test
or
es
addr16
insl
jle
pushf
loop
pop
cmp
cmpsl
jb
push
in
jg
xchg
xchg
sbb
aas
fistl
push
pop
push
push
push
xchg
push
outsl
and
mov
jmp
cmp
aaa
adc
and
and
nop
mov
mov
imul
jbe
movsl
sarb
jnp
xor
lds
cmc
jg
outsl
in
push
scas
shrb
dec
mov
lds
pushaw
stos
cmp
cmp
push
mov
inc
jge
mov
fstl
das
sub
mov
push
push
scas
sahf
push
mov
sub
movsb
cmp
mov
sub
loope
and
lret
xlat
addr16
mov
ljmp
and
cmp
push
push
ljmp
mov
scas
and
xchg
mov
insl
int3
sarb
jnp
call
outsl
in
and
adc
insl
repnz
mov
jmp
movsl
sarl
movsl
cmpsl
and
pusha
jecxz
popa
popf
and
rcll
mov
xor
lods
je
repz
outsl
jle
mov
mov
xor
aam
jne
pop
cmp
sbb
sub
xor
dec
in
repz
push
or
jge
in
int3
adc
in
jb
lahf
test
or
lds
sub
and
inc
shlb
pop
aas
imul
sbb
cmp
sbb
mov
jnp
div
popf
inc
pop
mov
lret
lock
insl
jnp
mov
sub
cltd
lret
cmp
xchg
cli
cli
sahf
jbe
sub
mov
ja
dec
hlt
cmp
mov
jge
shrb
or
pop
cli
mov
stos
push
in
lret
and
pop
fs
push
std
int3
fwait
dec
bound
mov
cli
ror
sub
in
fsub
imul
xchg
insl
jnp
je
aas
stos
sub
sbb
loop
xchg
push
js
fisttpll
dec
stos
gs
sti
movsl
orl
cmpsl
mov
lret
adc
movsl
sub
mov
test
das
loope
mov
mov
xor
cltd
push
fcoms
jmp
out
jae
movsl
stos
xor
jae
add
mov
push
addr16
cmpsl
adc
mov
inc
push
test
push
jmp
in
loope
lock
popa
dec
pop
arpl
xchg
int3
jae
movsl
in
jecxz
cmp
leave
or
test
jns
mov
das
fs
sub
mov
cmpsl
push
ljmp
cmp
sahf
subb
jnp
sub
mov
cmpsb
sub
arpl
sbb
das
adc
cmp
push
sub
cmpsb
movsl
mov
cmpsb
insb
ret
jnp
xor
or
js
cld
aas
inc
jge
pop
icebp
jb
loopne
outsb
mov
cmpsl
cmc
jb
fbstp
jo
hlt
stc
in
scas
in
sub
negl
loop
pop
fsts
fldt
adc
in
sub
loopne
and
js
pop
pop
cmp
ja
rcrb
jo
dec
ljmp
stos
pushf
mov
out
es
jp
xchg
aas
mov
pop
mul
ja
xor
sub
sbb
mov
stos
mov
adc
outsl
cmpsl
mov
cmpsb
mov
ss
jecxz
lock
in
mov
js
repnz
mov
in
into
ffree
xadd
cmpsl
cwtl
pop
xchg
adc
mov
popl
xor
or
jmp
pusha
daa
je
lods
test
aas
adc
pushf
icebp
and
fstl
andnps
and
mov
sub
mov
adc
mov
and
ds
ljmp
movsl
test
jnp
mov
jmp
jge
cld
push
push
je
int3
int3
loopne
lahf
fisubrl
xor
jmp
push
push
mov
jae
and
jge
mov
shlb
push
sub
in
mov
je
repz
jae
aas
mull
adc
adc
xor
cmc
das
addr16
and
push
sahf
shr
sbb
sub
loopne
xchg
fs
mov
dec
addl
je
cmp
jmp
sti
jne
xlat
sub
invlpg
sbb
mov
shlb
jae
xor
cs
cltd
in
loope
mov
call
or
xor
js
outsb
fsubp
sti
dec
sti
cmp
daa
push
ja
push
and
mov
adc
sub
mov
jge
jecxz
inc
sbb
mov
inc
cmp
mov
sub
and
mov
cmp
pop
into
int
mov
and
xor
mov
aam
jnp
xchg
icebp
adc
push
jmp
addr16
cli
paddd
js
addr16
jne
push
icebp
cmpsb
aas
lods
test
icebp
inc
jae
mov
jecxz
addr16
movsb
stos
arpl
pop
jg
fs
and
sbb
cmp
inc
jge
fistpll
jns
pop
popf
xchg
popf
adc
push
jne
jmp
dec
std
xor
add
lods
push
das
test
shl
das
pop
dec
mov
jae
es
jae
inc
jae
ficoms
jae
mov
sub
jle
pop
xor
es
loop
test
shlb
in
fdivp
mov
xchg
cld
sbb
pop
sub
cmpsl
xor
lods
es
jle
jmp
in
pop
pop
jns
lods
test
scas
cmpb
cmp
je
sub
in
xchg
xor
push
sar
jmp
out
leave
or
sahf
sbb
cmp
scas
pop
jnp
enter
je
cmp
cmp
loop
in
inc
mov
adc
in
movsb
insb
jne
mov
cwtl
mov
jl
mov
jmp
popa
mov
movsl
dec
push
mov
int
and
int3
jns
jb
push
fmull
jmp
mov
movsl
sub
test
pusha
in
add
rcrl
das
jg
cld
loop
xchg
push
pop
pop
loop
mov
imul
int3
push
jmp
jae
mov
jp
push
inc
shr
cmp
dec
and
jmp
and
pop
xchg
sub
unpckhps
decl
mov
loopne
loope
jle
icebp
mov
push
xor
dec
push
mov
in
inc
je
fcmovb
xor
jae
jnp
jb
mov
aas
mov
test
jb
dec
lods
xor
mov
clc
xor
in
mov
jmp
dec
std
mov
arpl
mov
out
mov
lock
cmp
out
movsl
xor
mov
es
negl
outsl
xchg
hlt
das
xor
mov
in
mov
pop
push
out
mov
pop
lock
or
popa
push
mov
push
je
jp
imul
mov
push
repnz
push
cmp
inc
jbe
sub
arpl
std
jp
cmp
lods
loop
in
insl
decb
int3
xor
in
cmpsl
lea
push
dec
jecxz
or
out
lret
out
pusha
movsb
hlt
and
arpl
or
and
sbb
icebp
incb
arpl
jne
xchg
mov
pusha
xor
icebp
add
pop
aas
sbb
cmp
xchg
pop
xor
adc
enter
or
mov
les
jmp
jecxz
mov
xor
mov
xorb
test
loopne
sbb
das
cmpsb
inc
loop
add
and
pop
hlt
push
jnp
fdiv
cmp
mov
imul
mov
shrb
stos
mov
int3
pop
shr
mov
in
xor
xor
jae
sub
and
mov
mov
push
cs
mov
je
jbe
jmp
into
hlt
lea
xor
mov
sub
jle
adc
xor
test
stc
jl
lcall
jp
mov
scas
dec
pusha
outsb
or
dec
fiadds
hlt
cmpsb
aaa
std
movsb
inc
in
lahf
mov
icebp
sbb
cmp
hlt
mov
in
inc
xor
sarb
xchg
or
xor
sub
mov
xor
data16
xchg
push
jl
loope
lods
dec
lods
lods
mov
or
push
xor
adc
loop
das
fiaddl
dec
push
sub
mov
jl
ljmp
popf
inc
insb
das
xchg
fwait
or
or
cltd
cmp
pop
sti
push
ja
bound
je
cmpsl
push
inc
mov
mov
cmc
sahf
fsubrs
in
push
jnp
aad
call
or
and
sti
and
testb
pop
cmpsb
repnz
lock
popf
mov
cmc
mov
scas
adc
jecxz
and
push
mov
loope
imul
mul
pop
hlt
je
jmp
loopne
loope
mov
and
cmp
call
stc
incb
jecxz
incl
and
cld
and
cmp
stc
js
negb
ja
icebp
das
cmp
out
lcall
shl
mov
xor
xchg
test
dec
loopne
std
sbb
and
je
std
mov
jmp
xor
xchg
loop
adc
loop
cmpsl
std
adc
cli
bound
clc
xchg
jle
repz
lock
dec
lock
xchg
add
cmp
xchg
pop
in
sub
imul
aas
jnp
movsl
and
jnp
cld
fucom
repz
jae
clc
flds
lods
mov
adc
jo
fsubr
test
push
out
and
loopne
sahf
pop
jle
or
repnz
icebp
addr16
sti
fiaddl
mov
lock
hlt
jmp
out
cmp
jbe
push
ljmp
mov
xchg
sbb
cmc
mov
mov
mov
clc
jnp
neg
mov
mov
push
lock
inc
loop
ljmp
in
imul
inc
cmp
push
mov
ja
sub
hlt
push
cmpl
call
push
gs
imul
xor
aaa
les
shr
flds
mov
fldln2
jbe
pushf
enter
xor
scas
fwait
and
aam
mov
mov
repnz
mov
xor
jnp
pop
gs
loopne
repz
popa
movsl
into
js
sbb
xor
adc
xchg
mov
push
repz
and
push
mov
into
pusha
outsl
sub
imul
lret
movsl
or
push
cli
push
sub
adc
adc
push
mov
mov
in
fidivs
scas
fs
push
pop
popa
sti
dec
dec
sub
ljmp
push
ss
sub
subb
test
mov
outsl
int3
loope
out
aas
stc
shll
or
fstpt
dec
aam
xor
aas
pop
jge
movsl
fucom
stos
aas
ss
bound
int3
push
dec
out
jmp
test
sub
push
jbe
xor
or
mov
sub
xor
fstpl
in
push
jns
mov
enter
in
xor
int3
jae
sub
or
mov
int3
sbb
dec
loop
lcall
jne
fstpl
int
pop
jmp
mov
clc
xchg
jmp
and
cli
pusha
ja
push
jge
ret
fimull
mov
xchg
sbb
jns
or
and
sbb
jp
mov
inc
cmp
mov
lods
ja
push
mov
dec
scas
subl
and
mov
mov
aad
ljmp
imul
cmpsl
pop
cmp
xor
sub
ret
popf
jae
loop
in
or
in
aad
daa
lea
es
jae
mov
cmp
inc
mov
je
pop
push
cmpsb
loopne
sbb
data16
lods
in
adc
test
fdivl
fsubs
sub
loopne
mov
ds
stos
xor
push
or
mov
or
pop
mov
pop
fldt
in
int
scas
sbbl
sbb
fdivrs
in
cmpsw
loop
dec
stos
jl
xor
lods
pushf
dec
inc
outsb
xchg
repnz
push
add
cmp
rclb
dec
push
mov
cwtl
clc
daa
aaa
cmp
std
mov
test
clc
loopne
or
stc
and
icebp
push
jl
jmp
push
jae
rol
jle
cmpsl
incb
sub
mov
roll
mov
push
add
bound
xor
lret
sub
or
or
arpl
xchg
pop
pop
and
xor
insl
xor
std
stos
aas
cmpsb
mov
lods
push
mov
and
ds
or
test
scas
dec
out
add
in
stos
xchg
cmp
stos
push
fimuls
test
lret
cmp
or
lcall
xchg
lods
test
mov
insl
push
jbe
xchg
sti
mov
mov
scas
xor
repnz
dec
jge
icebp
je
fsubp
xor
jnp
call
int
loopne
sub
jb
in
sbb
aas
xchg
xor
push
push
std
popa
int
repnz
adc
mov
outsl
adc
jae
loop
push
bound
lret
pushf
mov
data16
jns
mov
scas
or
jmp
xchg
aas
and
push
scas
out
mov
xlat
enter
outsb
adc
in
mov
or
adc
push
push
mov
and
and
in
sub
mov
mov
and
popa
cmpb
push
sub
mov
jp
pop
inc
leave
ret
insb
mov
loop
test
jne
push
pop
imul
mov
data16
sub
xor
mov
mov
call
lock
repnz
iret
in
jle
mov
sarb
lahf
sahf
adc
test
out
jnp
addr16
dec
ret
sub
jnp
dec
sbbb
pusha
jle
lock
cmp
std
mov
push
imul
mov
jbe
stc
out
sub
loop
pop
mov
jbe
test
jb
and
pop
packssdw
mov
mov
test
scas
mov
movsl
in
dec
sahf
stos
sbb
in
das
push
jb
jmp
test
xchg
je
sbb
pop
mov
hlt
sub
sbb
mov
test
ja
stos
lret
sub
scas
sahf
lock
sbb
ljmp
push
xchg
mov
jp
or
mov
jnp
scas
fisubs
test
jne
inc
test
fs
int
roll
push
es
test
inc
ljmp
dec
xor
jecxz
mov
dec
adc
mov
out
jmp
pusha
mov
push
mov
xor
sbb
aas
loope
pop
jnp
sub
bound
add
jge
lret
stos
jns
sub
push
add
mov
rorl
jo
jmp
pop
sub
mov
orb
clc
js
xor
push
mov
jno
ret
cli
shl
push
bt
or
jmp
and
fisttpll
xor
in
mov
xorl
fcomps
add
pop
sub
test
jb
notb
sti
pop
add
add
pop
inc
ficompl
das
inc
mov
aas
call
jo
cmpsb
lock
pop
sbb
pop
rorl
pop
outsl
fidivrl
dec
adc
pushf
test
lds
shrl
inc
idivb
cld
cmpsb
cs
movsl
stos
push
mov
adc
push
adc
cmp
int
aad
and
adc
and
jo
sbb
clc
push
lcall
leave
mov
jl
mov
adc
sar
dec
inc
mov
sarl
mov
int
movsb
mov
add
cmpsb
sbb
mov
pop
mov
dec
adc
mov
les
xchg
mov
int3
xor
xlat
xorb
fists
push
cmpb
ja
addr16
std
push
rcll
sbb
mov
mov
jle
lret
insl
push
jmp
xor
daa
jno
shrl
lea
je
pushf
lea
jmp
dec
xchg
or
lahf
inc
jecxz
ljmp
and
out
mov
and
dec
fwait
or
inc
jge
sbb
xchg
and
push
mov
idiv
lea
in
jle
arpl
push
mul
or
and
ja
xchg
inc
sti
jb
sub
fsts
push
into
push
ljmp
jo
or
addb
inc
xchg
mov
cs
and
add
sub
push
cmp
imul
call
lea
je
pushf
or
pushf
mov
jmp
repnz
jmp
jne
pusha
pusha
call
add
les
cld
pop
lds
push
dec
pop
pop
lahf
push
sub
lods
lea
repnz
fidivrl
mov
ds
out
mov
loopne
mov
cmpsb
pop
stc
lea
aad
inc
cmp
sub
out
cmpsb
lock
sub
xchg
and
mov
jl
dec
jne
add
insl
fidivrs
into
sbb
aam
std
and
and
sbb
mov
jns
iret
leave
ja
arpl
lods
xchg
mov
cld
mov
adc
sbb
mov
dec
ljmp
sub
mov
dec
sub
mov
stos
ljmp
adc
out
ljmp
dec
test
enter
adc
push
sub
movsl
mov
jle
jle
add
shl
aam
lods
sub
xchg
movl
sbb
xor
dec
xor
outsb
bound
jle
fdivr
xchg
push
test
int3
adc
fmulp
mov
pop
hlt
push
mov
mov
mov
pop
and
out
out
lret
pop
lods
sub
outsl
and
aad
fsub
inc
pop
loopne
outsl
adc
mov
cli
and
fildll
subb
push
test
xlat
cmp
xor
xchg
andb
xchg
cmp
add
lods
mov
mov
imul
add
cmpsl
lods
cwtl
sub
push
jo
xchg
push
popa
jae
fcmovnb
cwtl
sbb
pop
xchg
sbb
pop
lret
mov
lods
pop
mov
push
daa
and
lret
dec
and
into
sub
xlat
ljmp
outsb
xchg
clc
sbb
imul
fwait
pop
mov
cli
sub
jge
pop
xchg
push
les
fstpt
pushf
jge
pop
cmpsb
push
stos
xchg
pusha
cs
test
gs
js
lret
shl
mov
jl
jecxz
sti
nop
std
adc
mov
mov
dec
mov
les
fiadds
cmpsb
adc
xor
icebp
in
push
lds
jmp
fildll
pop
and
sbb
pop
movsb
dec
or
pop
call
shll
inc
in
shlb
popa
xchg
pmaddwd
add
or
inc
dec
inc
cmp
mov
sbb
and
lret
mov
cli
push
aam
lods
dec
pop
mov
and
sub
jp
cs
shrl
and
fcomps
xchg
je
sub
lret
outsb
sbb
or
sbb
jg
push
lret
popf
fadds
pop
cmpsb
je
inc
daa
shll
push
push
clc
lahf
inc
test
cmp
mov
call
xchg
mov
jae
stc
pop
jns
std
and
test
call
pop
dec
sbb
dec
mov
and
out
sbb
adc
cmp
xchg
push
aam
loope
sbb
add
aas
add
jmp
jae
and
jno
popa
mov
dec
out
ss
rcr
sbb
shll
pop
les
and
inc
dec
inc
mov
jbe
pop
push
call
mov
pop
lahf
push
les
mov
movsl
enter
xchg
cli
dec
rol
jmp
fistps
push
pusha
dec
xor
dec
je
add
adcl
xlat
or
lahf
xor
pop
inc
inc
cli
mov
das
mov
pop
xchg
mov
pop
imull
inc
xchg
pop
push
jae
xchg
cmp
pop
add
push
ss
outsl
aad
loope
mov
and
loop
ja
add
sti
fldl
mov
shrl
mov
data16
push
outsl
jo
ret
or
dec
sbb
test
pop
xchg
flds
jp
jge
pop
mov
jg
xchg
mov
insl
mov
sbb
imul
adc
movb
movl
pushl
pusha
lea
jmp
stc
mov
clc
test
pusha
pusha
and
pushf
clc
cmp
add
add
test
clc
stc
add
call
jmp
in
push
les
mov
sub
xchg
inc
das
adc
dec
aam
out
inc
rorl
sub
jo
repnz
pop
sub
cltd
fdivl
pop
pop
xchg
or
sbb
or
dec
push
xchg
dec
mov
adcl
ds
stc
mov
add
dec
or
imul
adc
in
iret
pop
popf
in
push
adc
out
imul
jnp
leave
add
push
js
jp
xlat
mov
dec
std
mov
mov
cmp
je
dec
icebp
fnstcw
sbb
pop
mov
sti
mov
cmp
xchg
xchg
sahf
mov
popa
and
sub
dec
mov
jecxz
jecxz
rcrb
popl
jmp
xchg
jb
fdiv
idivl
jno
das
sub
jbe
rcll
mov
sti
dec
int
mov
fstps
mov
cli
xchg
dec
movsb
sbb
xor
xacquire
je
push
insb
rol
xchg
mov
xchg
xchg
mov
xchg
inc
enter
das
jo
mov
xor
pop
or
push
cmp
ss
mov
hlt
sbb
lret
iret
dec
mul
adc
inc
sbb
mov
out
pop
mov
xchg
sbb
lahf
cmp
imull
mov
popl
pop
and
mov
push
les
add
pop
cmp
mov
xchg
add
dec
xor
inc
stos
out
mov
je
xchg
sbb
movb
pushl
dec
clc
cmc
pushf
jmp
popf
sbb
shl
andb
dec
xor
js
cmp
shrl
pusha
les
cli
inc
mov
mov
adc
cmp
xchg
stos
jmp
bound
jecxz
lods
adc
lock
pop
xchg
sbb
rol
aaa
out
fcmove
add
test
rclb
or
sahf
out
dec
inc
scas
aas
sbb
cmpsl
mov
cltd
hlt
push
inc
addr16
jbe
inc
addr16
repz
in
sub
aaa
scas
jmp
cmp
sub
clc
repnz
jmp
adc
fld
movsb
mov
lea
ffree
popa
mov
mov
out
sbb
movsb
enter
sub
frstor
inc
add
xchg
std
iret
jg
popa
jne
push
cmp
inc
dec
arpl
arpl
popa
inc
ficomps
lock
mov
lcall
loopne
or
hlt
popa
inc
out
push
sti
gs
pop
cmp
jbe
pusha
inc
jb
sarb
sbb
push
flds
mov
cmp
cli
fiadds
cmc
inc
int
pop
xor
sub
cmp
dec
add
fptan
sbbb
dec
xlat
jge
out
cli
push
push
fs
ds
mov
inc
add
mov
ss
lret
lods
pop
mov
jnp
cmp
dec
lea
sbb
shll
scas
aam
push
mov
stos
push
jmp
sbb
pop
bound
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
pushf
lea
call
pushf
pusha
jmp
jge
mov
push
les
out
in
adc
lahf
ret
xor
or
jb
lahf
xchg
cli
into
xchg
insb
ds
add
adc
lods
imul
add
xchg
mov
out
lcall
out
fstpt
nop
inc
lods
cmp
add
jbe
xchg
bound
and
cld
pusha
fildll
adc
xlat
add
lods
outsl
popf
or
jecxz
pop
lods
cld
out
mov
sbbl
fadds
sbb
and
adc
sub
movsb
outsl
cmp
jno
cli
movsl
lea
das
mov
fdivrs
popa
dec
das
test
les
push
cmp
sbbb
lret
xor
std
sbb
js
leave
jnp
inc
insb
cmp
pushf
lds
xchg
pop
call
push
pusha
and
or
insb
es
sub
fnstenv
push
iret
sbb
push
repz
jno
sahf
mov
jmp
mov
mov
mov
flds
imul
xlat
out
lcall
jae
cld
sbb
pop
mov
cmp
add
in
fwait
mov
loop
mov
mov
xor
sarl
cmp
cmc
loop
add
sbb
push
shrb
loopne
jl
mov
add
mov
add
jae
stos
mov
lcall
test
sub
cld
jbe
filds
dec
sub
testb
xor
lods
test
xchg
jae
cs
cmp
cld
mov
cltd
decb
and
push
pusha
not
setle
call
lods
jno
cwtl
push
les
pop
andb
dec
scas
shll
mov
arpl
movsb
fbstp
test
xchg
add
out
add
add
mov
out
adc
jg
mov
xlat
mov
test
insb
inc
in
rcll
jno
mov
inc
ret
enter
loopne
bound
ds
lock
sub
jb
out
inc
out
jnp
call
outsb
in
push
jp
std
sahf
and
scas
shlb
lret
push
sbb
xchg
and
rolb
xchg
sub
sbbb
cs
inc
psubb
jmp
cmc
pop
and
in
inc
out
mov
and
push
inc
inc
adc
rcrb
lahf
adc
xchg
bound
xor
insb
jno
add
adcl
xor
cmpsb
mov
dec
cmp
xor
orl
enter
xchg
pop
sub
lcall
jg
dec
icebp
sbb
add
mov
addr16
dec
adc
and
add
pop
call
inc
bt
cmp
pushw
popfw
movw
push
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pushl
lea
je
pusha
bt
stc
movb
add
stc
stc
cmp
push
lea
jb
cmp
bt
cmp
pusha
jmp
clc
mov
cs
sub
outsl
adc
mov
or
mov
movsb
and
outsl
jbe
xchg
lret
lahf
xchg
mov
addb
cltd
addr16
mov
cmpl
xchg
add
mov
fldt
inc
mov
jbe
lds
sub
xchg
mov
dec
je
ficompl
repnz
sub
pop
mov
dec
hlt
repnz
data16
xor
subl
fsts
sub
fists
aaa
push
cmp
jg
shlb
int3
mov
psrld
ja
mov
in
popa
cmp
push
mov
sub
rolb
icebp
and
jg
mov
pop
push
ret
cmpb
xchg
sub
mov
mov
dec
cmp
rorb
add
mov
and
ss
lcall
xor
ret
nop
mov
fldenv
or
lea
movsl
dec
das
cltd
add
icebp
fldl
jl
xchg
xchg
push
cld
stos
or
jl
andb
out
jbe
int3
pop
in
aam
stc
loop
sub
mov
jo
mul
shrb
ss
cmp
call
mov
add
in
loopne
mov
clc
lock
ret
sbb
outsb
leave
test
mov
mov
repnz
mov
lret
cmp
cmp
clc
inc
dec
insb
test
cmp
lods
aaa
lcall
adc
fstpt
cmp
rcrl
xor
cli
loopne
es
out
adc
fldl
adc
push
fisubrs
mov
cmp
outsb
dec
aaa
clc
mov
inc
sub
and
shrl
outsl
in
add
scas
add
in
in
jg
rcll
stc
lods
test
cld
xchg
mov
sbb
push
hlt
add
pop
sbb
mov
movsb
xchg
test
jno
mov
mov
xchg
movsl
sub
lret
mov
stc
scas
mov
mov
add
into
cmp
push
fbld
sub
mov
push
les
test
xchg
jbe
subl
pusha
in
nop
cmp
sbb
pop
vpshuflw
mov
or
pop
mov
mov
jg
es
jb
sbb
inc
xchg
leave
push
jb
pop
test
fistl
add
push
cmp
xchg
cmp
adc
mov
and
push
orb
pop
inc
lods
inc
lea
orl
and
dec
xor
inc
arpl
scas
adc
sbb
xlat
add
divb
popf
inc
and
adc
xchg
jne
jns
mov
pop
inc
shl
xor
shrl
sbb
shlb
adc
into
and
inc
fbld
shll
sbb
sub
out
mov
mov
loopne
clc
leave
mov
out
lret
mov
mov
lahf
mov
xchg
fbld
pusha
or
mov
aad
mov
add
push
jne
add
lret
jae
ja
scas
sahf
jmp
test
and
add
cmc
push
lea
jmp
iret
fists
inc
loope
imul
pop
mov
jne
test
and
adc
lods
dec
pop
mov
stos
adc
mov
mov
fs
fadds
jmp
enter
movb
mov
test
lret
pushf
rcl
fcompl
test
stc
testb
cmp
cmp
fsub
scas
js
cmc
loope
repnz
shl
outsl
xchg
jl
fisubs
je
dec
xor
sbb
xchg
push
pop
cmp
int
dec
lock
mull
daa
rcll
mov
aad
and
pop
mov
lods
inc
aam
lahf
mov
shll
push
sub
sub
cmp
cmp
mov
pop
ljmp
rcrl
or
add
and
cmp
cmpsb
mov
movsb
xor
outsl
int
mov
mov
sahf
mov
ds
or
cmp
cli
and
nop
push
clc
inc
sub
iret
mov
stc
jo
stc
cmpb
pushf
call
call
movsbw
mov
mov
pushf
push
mov
movsbl
pop
push
movw
pusha
pushl
ret
insl
repnz
mov
int
xchg
and
rcrl
das
pop
aas
mov
sbb
mov
xchg
sub
ret
leavew
sub
sti
push
and
add
and
lahf
add
sbb
add
mov
add
out
xor
jge
fidivl
mov
movsb
lea
jb
pushf
cmp
pusha
pusha
mov
call
in
in
movsl
xchg
push
les
mov
negb
loopne
out
out
dec
repnz
call
leave
dec
lret
pop
inc
sub
movsb
loopne
add
jmp
mov
pop
inc
aad
push
add
mov
shlb
and
in
lcall
xchg
dec
aas
adc
or
negb
mov
adc
mov
push
adc
pusha
shrb
cmp
sub
cmp
outsl
sbb
cmp
lds
push
imul
pop
std
pushf
jle
inc
and
pop
test
push
icebp
push
stos
mov
cmp
push
xor
or
cmpsb
mov
dec
lods
jge
dec
push
and
push
and
pushf
iret
lods
adc
aam
xchg
sbb
push
mov
imul
jle
mov
inc
aas
nop
out
sub
cmpsb
mov
sbb
inc
fsubs
and
repz
jg
or
xchg
fs
mov
fldenv
lods
lock
adc
repz
cmpsl
gs
cmp
rcr
push
push
enter
cmp
mov
bswap
mov
adc
fistpl
inc
push
jbe
insb
add
movsl
je
xchg
mov
fmuls
xchg
add
loop
add
sub
or
cmpsb
xchg
cwtl
sbb
fsubs
sbb
or
sbb
clc
dec
mov
aaa
outsb
xchg
into
inc
dec
aad
jecxz
insl
inc
xor
sub
mov
jecxz
repnz
in
push
js
out
movsl
lods
mov
and
pusha
mov
out
loopne
cmp
fsubl
dec
outsl
orb
fsubrs
in
push
cmp
xchg
xor
jb
arpl
clc
clc
push
test
nop
addr16
pop
popf
das
push
popf
push
aaa
jae
rorl
out
add
xchg
adc
repz
fwait
sarl
xor
xchg
dec
dec
pop
and
dec
es
ficoms
sub
lret
dec
popl
fdivrs
pop
ret
and
adcb
cmpsb
imul
movsl
lods
sbbb
jae
stos
sahf
sbb
js
pop
xor
inc
insl
cmp
lds
ss
cmp
pop
arpl
cwtl
stc
add
mov
in
add
repz
pop
testb
insb
sbb
sbbl
aad
mov
cld
and
push
imul
sarb
out
xchg
mov
xacquire
insb
dec
das
push
negb
in
mull
or
or
mov
mov
movsb
lds
scas
sbb
add
inc
sub
pop
mov
out
jp
add
cmp
mov
xchg
push
ss
fsubs
jb
or
mov
cld
enter
and
das
cltd
inc
sub
xor
repnz
popl
les
pushf
mov
aam
in
inc
and
mov
pusha
fsubs
inc
insb
imul
ss
cmpsl
andl
push
insb
icebp
mov
aad
xchg
inc
jp
push
mov
les
cltd
pop
mov
sub
outsl
push
sbb
aaa
int
shll
jmp
idivl
or
mov
mov
sahf
ret
test
aad
or
push
out
xchg
test
jecxz
shl
imul
sub
push
xchg
and
ret
push
push
xchg
out
js
xor
testl
push
adc
mov
stc
out
fsubrl
cmp
pusha
pusha
insl
out
out
icebp
aam
or
add
fisubrs
into
jp
leave
mov
jmp
lods
pop
jl
mov
sub
pusha
pushf
call
push
daa
fmuls
jb
je
jnp
add
add
or
pop
and
aam
insb
lcall
mov
mov
pop
test
mov
in
inc
mov
outsl
stos
gs
xchg
sbb
loope
jle
hlt
and
stos
cmp
jnp
cmc
repnz
das
pop
xorl
xor
jecxz
pop
test
jge
xchg
cmc
sbb
pusha
sub
std
loope
dec
adc
mov
dec
shr
sti
out
add
mov
movl
pushf
movb
pushl
lea
jmp
pushf
movl
pusha
pushl
movl
pushf
lea
jmp
xchg
pop
rorb
or
mov
jbe
jle
andb
mov
cmp
lods
mov
xor
test
repnz
add
inc
sti
sbb
int
mov
aaa
cld
mov
xlat
insl
test
mov
gs
movsl
xchg
sub
xchg
sub
sarb
jnp
mov
scas
mov
jo
rep
daa
jb
pusha
or
and
mov
sbb
adc
ss
addl
rcpps
and
pop
sarl
add
and
jmp
aas
sti
test
dec
call
mov
pushf
pushf
push
lea
ja
push
pushl
lea
jb
jmp
mov
les
aas
les
or
cmpsb
or
inc
jo
cmp
dec
dec
sub
jno
jbe
cmp
stos
sub
jnp
add
aaa
leave
sar
lods
mov
push
adc
jle
jns
test
sub
add
mov
and
repnz
xchg
sbb
hlt
pop
jnp
mov
test
mov
adc
add
dec
xor
xor
movsb
shll
pop
adc
imul
aam
dec
mov
or
scas
adc
xchg
cmc
sub
loope
push
xor
pop
pop
fsubrl
or
mov
in
and
sbb
pusha
or
ret
mov
stc
testl
sub
js
inc
call
gs
in
inc
push
ja
inc
dec
test
add
mov
movb
lea
jmp
sub
pushf
pushf
rep
movzbw
push
pushf
lea
mov
push
lea
jmp
pushf
clc
repnz
pusha
pushl
call
jg
cmp
mov
repnz
es
sub
sub
jle
loop
sbb
std
add
repz
xor
pop
or
enter
mov
imul
jo
aas
stc
or
addr16
ja
leave
adc
pop
lds
mov
jp
adc
inc
enter
pop
add
jne
sub
ss
insb
lods
lock
fdivl
jnp
mov
repz
cmc
lcall
or
rcl
sub
cwtl
pop
inc
mov
jo
fiadds
and
mov
jb
test
mov
fwait
or
cli
mov
fsubrs
mov
rcpps
test
hlt
stos
fsubs
push
and
in
sarb
lahf
sbbb
icebp
scas
xchg
jmp
mov
xlat
or
fisubrl
pop
fcoml
jg
mov
mov
xor
lahf
inc
push
arpl
mov
les
cltd
cmp
in
or
mov
add
jl
fidivrs
pop
test
pop
cmpsl
jbe
shr
and
das
lock
fidivrl
ds
and
sbb
jo
adc
mov
jbe
in
test
fmuls
mov
cmp
add
sub
int
je
pop
in
adc
mov
jae
cmp
out
sbb
enter
mov
les
xchg
push
jno
cli
fidivrl
rcr
je
stos
out
mov
loopne
pop
push
mulb
mov
call
mov
arpl
je
adc
cmp
outsl
mov
push
or
cmp
sub
jge
subl
inc
jb
scas
sub
mov
repnz
clc
mov
or
shlb
pusha
adc
mov
pminsw
add
negl
push
stos
iret
sbb
bound
mov
push
pop
push
xchg
mov
les
sub
scas
shl
fincstp
pop
mov
fldcw
fs
or
inc
sti
pop
test
push
ficoms
jns
jae
popf
push
leave
imul
mov
add
xor
pusha
adc
lret
cmp
xchg
dec
dec
xor
fldenv
jae
and
pop
sbb
repnz
cmp
push
shll
pop
test
iret
repz
out
fiaddl
mov
ljmp
not
call
pushl
popl
movb
pushl
ret
test
sub
jmp
pushf
lea
jne
stc
call
pusha
lea
call
pushf
pushf
lea
jae
pushf
stc
xor
jmp
push
lea
je
stc
sar
rcl
add
ror
bsf
movsbw
xchg
sub
btr
rcr
bts
bsf
shr
pushf
pushf
and
mov
bsr
inc
stc
bswap
add
rcr
test
clc
add
add
neg
xor
mov
push
clc
shr
pushf
cmc
pushf
cmp
mov
pusha
push
lea
je
bt
cmp
pusha
jmp
add
push
gs
inc
outsb
je
jns
call
pop
insb
sbb
shl
pop
stc
lahf
mov
call
fcmovne
sahf
mov
in
and
add
push
lahf
clc
pop
test
mov
and
pop
cltd
mov
xchg
mov
imul
sbb
fisttps
sti
add
adc
ja
and
jnp
in
cmp
ja
pop
xlat
das
ja
sbb
dec
xor
cmp
add
incb
movb
pushf
movl
call
inc
xchg
inc
xchg
les
lea
loop
scas
xor
sub
sub
mov
cmp
sbb
imul
loopne
ret
and
jl
in
mov
frstor
xor
xchg
xchg
mov
outsb
push
iret
movsb
in
andl
outsb
jno
pop
sbb
in
je
add
pop
dec
xchg
iret
xchg
and
shll
popf
add
cli
and
add
or
mov
leave
mov
orb
add
push
icebp
pop
cmpsl
sarb
mov
mov
out
int3
pop
inc
dec
fsubs
dec
test
sbb
addl
jl
mov
mov
push
mov
cmp
mov
es
jcxz
adc
ror
in
int3
pop
mov
sub
je
mov
imul
adc
mov
jae
outsl
lret
push
jcxz
out
inc
mov
int3
pop
sahf
and
shr
shlb
mov
mov
jle
test
lahf
inc
daa
cmpsb
jne
adc
icebp
cmp
into
out
sbb
or
out
mov
dec
iret
mov
xchg
in
aam
mov
test
xchg
push
pop
je
lcall
sarb
popf
sbb
std
leave
adc
psubsb
dec
dec
push
dec
aad
xchg
stos
push
mov
mov
push
sbb
or
roll
test
les
push
mov
sbb
jecxz,pt
push
insb
loop
lahf
adc
mov
and
mov
mov
sbb
push
mov
es
mov
sti
push
sub
jecxz
xchg
mov
sub
and
sub
lea
test
xor
test
les
negb
in
data16
in
adc
push
jbe
xchg
mov
dec
in
push
es
rorb
lds
and
int3
std
scas
mov
xor
stos
psrlq
test
dec
and
inc
mov
xchg
mov
push
mov
in
pop
cmpsl
ja
inc
xor
stc
rcrb
jl
xchg
adc
fwait
sahf
add
mov
sub
mov
pop
add
adc
in
jg
push
jp
mov
les
adc
and
call
mov
std
jecxz
xor
fildll
jge
js
fcmovb
cmpsl
adc
mov
adc
lahf
sub
shll
push
mov
ds
in
jo
add
push
push
or
dec
loopne
pusha
div
pop
pop
inc
jecxz
push
cmp
popa
or
mov
loopne
push
cmp
or
xor
mov
cmpsl
push
fs
jbe
and
bt
sub
push
or
call
xchg
xchg
or
push
les
lcall
or
fs
xlat
adc
add
minps
jp
or
inc
enter
xchg
jge
sahf
mov
push
mov
pop
popa
out
notl
cmp
jae
addb
xchg
or
out
int
cltd
or
inc
enter
mov
cmp
cltd
sbb
aad
cmpsb
out
cmp
out
ja
add
mov
dec
xor
mov
or
jle
lea
lea
je
btr
add
rcl
setae
mov
push
cmp
cmp
add
pusha
mov
bts
btc
movb
mov
push
test
cmp
pushl
lea
jbe
add
sbb
mov
call
lods
mov
addl
in
jns
add
test
xor
jno
xor
jle
call
xor
in
mov
aas
push
in
clc
lds
test
push
push
aad
std
rclb
jge
push
xchg
test
jp
inc
imull
inc
push
add
fcoml
cmc
data16
mov
sbb
or
mov
xchg
out
sbb
xchg
lock
cli
push
test
jge
mov
push
or
sub
xor
mov
push
es
outsb
push
jb
daa
pop
xorb
lahf
sub
add
aaa
fwait
cwtl
sub
sbb
mov
mov
fs
aaa
imul
and
rcl
fildll
dec
int
stc
mov
dec
cmp
inc
sar
mov
fucomp
mov
inc
ret
cli
and
out
loope
xor
iret
pop
lds
add
pop
push
sub
daa
pcmpeqb
ret
mov
ret
iret
dec
stc
ja
push
mull
or
mov
bound
cs
xor
cmp
loopne
lods
mov
das
inc
repnz
adc
push
sti
das
sar
movsb
fwait
cli
sub
push
jne
xchg
xchg
lret
xchg
cmp
sbb
aad
xor
js
les
in
ljmp
arpl
xchg
xchg
imul
stos
lret
std
adc
jbe
aad
and
test
pop
stos
jnp
sbb
xor
mov
subl
in
nop
push
rclb
insl
subl
mov
test
push
sub
sbb
jnp
adc
ret
inc
aam
mov
rorl
push
aam
cmp
mov
je
fs
nop
mov
add
aam
movsb
insl
daa
xchg
ret
jg
pop
dec
out
shrb
clc
mov
mov
decb
xchg
and
mov
xor
lea
rcrl
iret
sti
jb
xlat
mov
xchg
insl
sbbb
dec
xchg
xchg
cld
popa
aam
mov
jl
bound
add
push
clc
fiadds
test
scas
xchg
cli
xchg
cli
fildll
jae
gs
insb
xor
cs
insb
add
push
jnp
jmp
shll
mov
xor
out
dec
jmp
jne
ss
ljmp
mov
xorb
lods
mov
inc
add
push
cmp
adc
ret
pop
gs
sbbl
in
mov
cmp
sahf
mov
xor
nop
bound
rclb
aas
hlt
es
loop
xchg
jo
stos
imul
popf
stos
adc
in
adc
pop
add
and
sub
and
add
jae
jg
psubw
pop
xor
xchg
adc
or
ja
push
leave
inc
jg
les
jge
jle
push
imul
jnp
and
xchg
pop
lret
mov
test
jnp
pop
cmc
mov
mov
pop
pop
dec
adc
or
xor
mov
pop
sbb
clc
sbb
loope
adc
sbb
sub
jno
lds
call
inc
dec
jo
jmp
in
mov
add
out
aad
mov
lret
hlt
aad
and
mov
aas
popa
jecxz
divb
addb
sahf
add
pushl
jg
les
sub
outsl
push
out
xchg
sti
fnstcw
loopne
jmp
mov
sbb
lret
mov
push
cwtl
add
xchg
lcall
mov
nop
cs
sahf
ret
fmuls
pushf
inc
push
call
mov
jg
clc
and
test
push
mov
icebp
leave
jne
mov
add
loop
mov
inc
call
test
mov
mov
jecxz
jb
add
jmp
repnz
jbe
jle
jmp
and
cmpsb
into
insl
push
and
jecxz
and
ljmp
je
push
loopne
test
ds
mov
out
fcmovnb
inc
popf
in
data16
and
pop
mov
in
nop
rcr
push
imul
pop
inc
aaa
xor
pop
lds
xor
sub
push
daa
scas
imul
push
ja
lea
pop
fidivl
shlb
outsl
mov
cmp
aaa
popf
xchg
call
das
cwtl
cs
test
add
das
add
add
inc
and
sbb
and
add
les
movw
lea
jmp
out
jno
aad
jecxz
push
sahf
orl
and
dec
jno
dec
push
cmp
scas
or
xlat
adc
pusha
rcr
jno
sub
test
call
cmp
aas
jno
inc
or
test
adc
imul
rcrl
mov
addl
pop
xchg
mov
popf
orl
jno
pop
add
dec
cmpsb
lret
pop
dec
xor
int3
movsb
rcll
sub
lods
ja
xor
cmp
inc
popa
add
xor
insb
jno
jnp
repnz
inc
test
add
inc
aas
loopne
fwait
and
scas
jbe
jbe
nop
stos
mov
xchg
push
lret
pop
sbb
mov
sub
mov
inc
xchg
lahf
in
dec
pusha
shlb
stos
adc
pushl
pop
or
mov
sub
dec
lods
cs
sub
mov
push
clc
adc
mov
cmp
mov
je
stc
and
jno
pusha
loop
mov
pushl
ss
cmp
mov
dec
iret
fcompl
xor
js
jl
movsl
push
jo
std
dec
cmp
mov
push
popa
jle
sbbl
movsl
cld
jno
mov
push
mov
xchg
leave
pop
push
jno
out
xchg
in
clc
dec
add
push
mov
cmpsb
pop
in
into
pop
mov
inc
mov
mov
dec
xor
dec
jno
lret
sub
stos
sub
es
cwtl
shll
dec
mov
sub
inc
hlt
das
icebp
sub
push
in
and
das
mov
pop
ss
imul
sub
push
sub
inc
cmp
cmp
mov
ss
repz
call
push
dec
sbb
sub
pop
push
movsl
sub
dec
enter
pop
push
jnp
mov
jb
out
lret
in
stos
push
jecxz
mov
cli
in
clc
push
mov
xor
jmp
push
loope
aas
mov
in
mov
cmc
pop
mov
mov
scas
mov
lods
imul
out
pushw
loopne
jge
cmp
inc
mov
jne
jae
outsl
push
outsl
call
das
data16
movsb
push
call
das
mov
hlt
push
xor
in
call
das
es
movsb
push
jle
cmp
inc
imull
ss
je
lock
mov
push
addr16
movsb
push
jle
jl
inc
imull
jne
mov
icebp
pusha
scas
or
sub
in
daa
push
mov
cmp
mov
jbe
mov
xor
push
pop
push
ljmp
mov
push
aaa
call
mov
leave
jo
pop
in
sub
inc
and
push
cmp
mov
jae
lock
pop
sub
inc
mov
push
cmp
mov
mov
out
mov
cs
sub
movsl
mov
in
std
push
imul
cmc
mov
and
push
cs
jmp
sub
sub
out
sub
decb
js
cli
pop
mov
pop
dec
xor
in
lods
push
cmpsl
call
das
in
std
push
mov
xor
jb
xor
lock
push
jmp
in
movsb
in
and
pop
cmp
mov
mov
outsl
or
sub
pop
cmpsl
sub
inc
cmp
js
jbe
hlt
pop
jb
mov
sub
inc
addr16
gs
jecxz
mov
call
das
hlt
in
jb
lock
jmp
sub
data16
mov
push
je
mov
imul
sub
shlb
arpl
loope
pusha
push
cmp
cmp
mov
push
push
sub
stos
push
movsb
call
das
mov
pop
hlt
sub
inc
push
call
das
fs
mov
sub
inc
jbe
je
mov
out
dec
jo
pop
stos
sub
inc
loope
jg
mov
sub
imul
sub
out
and
call
das
imul
xor
xor
jo
pop
sub
es
jecxz
in
aas
push
mov
je
pusha
scas
out
lods
das
push
test
cmpsb
pop
and
loope
xor
sti
push
stc
push
data16
popa
jae
dec
popa
fsubrs
sub
inc
mov
push
repz
jmp
outsb
cmpsl
dec
iret
inc
add
stos
dec
xchg
sub
and
das
cld
in
cli
imul
dec
hlt
push
icebp
pusha
out
xchg
das
push
daa
push
ds
das
xor
push
in
jecxz
inc
outsl
cmpsb
out
imul
ja
sub
push
hlt
push
jns
xor
xchg
sbb
out
lock
std
jge
daa
fldl2e
inc
cmp
xor
shll
mov
adc
jno
sub
xchg
jmp
jb
pusha
shl
and
mov
jnp
jno
and
add
test
sahf
je
inc
xor
dec
jg
jno
push
lods
xchg
add
jno
add
mov
leave
outsl
popa
jne
inc
pop
loopne
imul
fmulp
pusha
mov
pop
dec
popa
mov
push
push
cmpsb
jno
in
ljmp
stc
jno
mov
imul
dec
pushf
iret
push
xlat
subb
dec
xchg
mov
dec
rcll
jno
cmp
cmp
test
dec
mov
inc
mov
les
pushf
popa
aaa
test
mov
mov
hlt
and
jno
cmp
int
and
jno
dec
inc
cmp
xorl
in
cld
sti
jno
test
or
testb
pop
popa
out
repz
cmpsl
stos
mov
les
sbb
cwtl
lds
add
jno
imull
mov
popa
or
sub
test
and
loop
jno
jp
pop
sbbl
sbb
inc
jno
daa
imul
mov
dec
lret
fs
jp
outsl
xor
push
or
mov
cltd
es
icebp
pop
adc
loopne
clc
lods
aaa
mov
adc
push
or
push
push
sub
jbe
pop
jno
idivb
xor
jno
lea
int
pusha
bound
xchg
in
enter
push
jno
jne
mov
outsb
mov
jno
jecxz
scas
popa
jle
out
jno
jne
push
mov
popf
cmp
popa
aad
add
sbb
mov
dec
cltd
fsubs
push
aam
pop
je
or
jl
mov
adc
pop
shll
mov
enter
gs
push
lcall
clc
mov
sub
sbb
out
jg
adc
leave
dec
push
fcomip
xchg
add
adc
jnp
jo
lcall
sbb
push
scas
adc
xchg
setge
jno
mov
sbb
cmp
jge
xor
jmp
out
jno
jp
sbb
cmp
repz
scas
inc
or
sbb
jno
push
idiv
adc
stos
jno
cli
ss
mov
out
jno
aad
rcr
sbb
pop
pop
mov
xor
mov
sbb
jno
pop
add
jno
sbb
mov
loop
jno
mov
ja
xchg
in
popa
sbb
stc
aad
xchg
sahf
out
in
inc
faddp
sbbb
push
jne
in
or
cmp
mov
rcll
and
shll
les
into
arpl
int
shrl
cmpxchg
inc
fwait
add
inc
into
jno
inc
cltd
cmc
ljmp
inc
jmp
jno
push
sub
nop
mov
in
stos
cmp
push
popf
jne
in
pop
adc
aad
stos
xor
xor
mov
test
lahf
in
jnp
add
xor
mov
cs
jae
and
lea
dec
movsl
add
ss
sub
scas
push
mov
scas
int
sbb
jno
rcrb
lock
icebp
pop
test
adc
popf
mov
mov
inc
jno
imul
mov
xor
cltd
jnp
scas
lret
das
add
jl
pop
into
jno
adc
fs
in
mov
das
push
scas
dec
cmp
cmp
pop
adc
push
jno
gs
movsl
jno
outsl
fs
fidivrl
or
xchg
jns
jmp
imul
jle
jno
negb
and
cmp
mov
in
mov
popa
adc
idivl
cwtl
sti
ljmp
add
js
test
jno
stos
scas
fwait
mov
in
testb
dec
js
lods
jno
rorl
lds
in
pusha
sti
fs
test
or
jmp
jmp
rcr
cld
jno
or
inc
pop
jg
pushf
jge
test
rcr
sbb
shl
repz
adc
leave
addr16
push
fdivr
sub
lea
adc
in
je
cli
jno
dec
mov
dec
lret
jl
xor
in
jb
imul
cmp
decl
enter
jno
jge
mov
cmp
pop
stos
in
push
pop
jno
sbb
leave
cld
xor
jno
out
outsl
popf
or
pop
or
and
stos
nop
mov
inc
addl
mov
stos
sbb
jmp
lods
decb
scas
int
pop
icebp
jne
adc
cmp
cmpsl
jno
xor
lret
aaa
and
jno
pop
mov
es
in
or
jno
mov
sbb
jne
pop
aaa
jno
xchg
jbe
dec
xor
insb
push
movsl
jp
cld
ret
fldenvs
test
push
xor
add
jno
lods
and
push
adc
test
dec
lret
jno
adc
popa
lock
rolb
dec
scas
sub
rcll
xor
jae
ljmp
inc
in
jno
out
bound
cwtl
push
pop
icebp
enter
inc
xchg
andl
sbb
sbb
mov
jno
mov
fwait
shll
pop
pop
iret
imul
push
jb
addl
mov
testb
jge
xchg
int
pop
jno
outsl
pop
adcl
inc
or
je
fildll
fldt
sub
pop
xchg
dec
mov
popl
lcall
sbb
ja
jno
or
inc
push
cmc
rcr
mov
xchg
push
out
sbb
in
movsb
and
insl
jno
std
pop
cmp
in
jno
add
and
jno
xor
iret
ss
or
jno
nop
pushf
shll
sbb
push
les
push
xbegin
jne
xchg
scas
pop
push
push
nop
jns
mov
and
push
push
inc
mov
int
mov
inc
shr
ficoms
xchg
mov
pop
fnsave
loopne
addb
cmp
lods
fcoms
fs
mov
jno
adc
lahf
pop
jno
loop
push
xchg
sub
mov
fcomp
mov
jbe
adc
cmpsl
cmp
sbb
xchg
push
call
pop
mov
cld
dec
jl
imul
data16
fmull
and
subl
out
das
and
push
pushf
lahf
jno
pop
filds
lret
loopne
stos
nop
cli
out
jno
fdiv
pop
jns
sarb
mov
add
mov
add
jno
out
imulb
and
sbb
cmpsb
sub
gs
jno
adc
and
add
sbb
mov
mov
fucomip
aaa
fsubrl
inc
mov
pop
sbb
clc
add
pop
ret
ja
mov
push
cmp
mov
aas
inc
stos
lods
repnz
jno
aam
cld
or
jb
xor
cmpsl
cltd
jae
in
cmp
inc
pop
popa
xor
in
push
jmp
and
jno
sbb
or
mov
pop
outsl
mov
addr16
sub
dec
add
push
jbe
sub
leave
pusha
cmp
ljmp
ss
loope
scas
mov
idivl
adc
mov
insb
in
out
jno
mov
push
nop
dec
mov
push
pusha
jno
ja
xlat
jno
push
cmp
lahf
and
adc
sbb
test
insl
rcr
je
ja
xchg
mov
out
movsl
fistpll
dec
insb
gs
xor
inc
mov
in
hlt
out
fldl
popl
push
jno
xchg
xlat
cmp
xor
shll
pop
sub
jg
cs
jo
jno
lret
mov
inc
dec
iret
push
xchg
sahf
jb
nop
push
es
xchg
scas
lods
and
pop
add
sbbl
pop
cmp
or
jno
aam
lcall
out
addr16
rol
and
fimull
insl
push
mov
pop
loop
mov
aas
scas
jno
inc
cmpsl
inc
popa
mov
xchg
pop
push
loopne
bound
add
push
jno
imul
add
mov
aad
mov
in
gs
cmpsb
in
xchg
jno
rorb
xchg
pop
arpl
bnd
jnp
and
push
pop
mov
lcall
into
popf
mov
sbb
jno
mov
jmp
push
ret
jae
pop
mov
nop
jne
or
jno
mov
pop
xor
pop
mov
mov
movsl
bound
jl
icebp
sbb
insl
mov
lock
jmp
fcmovne
movsl
jecxz
or
add
xchg
rclb
imul
and
push
dec
dec
sbb
xchg
jno
and
frstor
jno
lret
stos
dec
cmp
mov
and
mov
jno
push
lcall
xor
mov
stos
xor
mov
mov
or
scas
push
jno
loope
movsl
push
into
shrl
add
jne
mov
cmp
fs
jo
popa
lea
pop
nop
sub
mov
outsb
test
shll
mov
add
jno
out
mov
cmp
rorb
push
popa
adc
int3
jno
int
loop
jo
lods
mov
fdivrp
pop
divl
push
pop
ljmp
mov
lock
jecxz
lds
xor
test
xchg
jno
push
das
ja
xor
movsl
scas
push
or
cwtl
pop
nop
aam
loope
mov
fsubs
push
and
sub
jno
xchg
test
mov
aad
insl
sub
push
mov
jbe
jno
iret
xchg
pop
test
lahf
arpl
inc
adc
mov
cmp
sbb
mov
pop
jno
aaa
in
subb
aas
in
push
outsl
sbb
and
andb
in
ljmp
test
mov
push
add
mov
cltd
shlb
aam
vhaddps
outsl
cli
scas
arpl
popa
jb
insl
sub
nop
and
stos
inc
jno
adc
push
call
in
arpl
adc
cmpsb
popa
mov
dec
nop
cmpsl
jge
jb
pushf
icebp
jno
testl
sti
pushl
mov
mov
pop
lret
outsb
pop
fidivl
jno
outsl
jg
daa
into
rcr
mov
shlb
rcll
fadd
mov
pop
in
jno
out
mov
jno
sub
jg
sbb
cld
test
shlb
int
dec
mov
pop
gs
jle
push
aaa
pop
mov
data16
dec
call
insb
xor
es
xchg
dec
icebp
lea
clc
ret
insb
jns
mov
sub
aaa
pop
out
pop
ljmp
mov
jne
dec
jns
and
jno
sbb
cwtl
dec
lret
ret
adc
jno
pop
stc
xchg
and
xor
jnp
rcll
mov
dec
xlat
insl
xchg
mov
add
jns
cmc
adc
int
inc
das
jns
lahf
imul
shll
sub
aad
js
fistl
and
popl
in
lea
out
xlat
cmpsb
xchg
adc
push
test
dec
cmpsl
cmp
fistpll
jg
push
aaa
and
inc
jno
pop
repnz
je
mov
jno
test
xchg
shll
sbb
jge
pop
sub
xchg
outsb
jne
icebp
stc
or
in
pop
mov
inc
jno
mov
mov
jne
add
test
shll
mov
jno
jp
or
and
push
lods
cmc
push
movsl
popa
add
jle
shrb
jno
and
scas
in
jno
fcompl
mov
adc
mov
mov
jg
inc
mov
stos
pop
adc
imul
fxch
inc
jne
call
mov
cmp
xor
mov
fbld
popa
mov
mov
mov
test
jg
xchg
jl
lds
jns
dec
push
mov
and
jno
mov
push
add
insl
addr16
in
out
fnstenv
repnz
mov
jno
add
pop
push
inc
fisubs
fbstp
mov
push
pop
push
insl
movsb
cs
add
inc
push
jns
mov
xchg
cmc
adc
mov
cmp
mov
lods
js
push
fs
mov
cmp
push
adc
cltd
ficompl
popa
std
jno
mov
data16
jl
lea
mov
inc
jge
push
add
lock
jns
add
jae
jns
out
inc
mov
pushf
jns
cmpsb
rol
mov
push
push
fcomps
ja
push
dec
jno
push
ss
insb
xor
jno
xlat
sub
cmp
sub
pop
jp
dec
jbe
lahf
std
jne
push
add
arpl
cmpl
push
adc
filds
jne
jno
and
jno
rcl
jle
shl
sub
iret
js
into
xchg
push
pop
jno
mov
std
scas
add
mov
int
ja
and
xlat
icebp
test
jae
sti
jns
je
outsb
jp
jge
jno
mov
push
pop
mov
mov
mov
mov
jno
mov
sbb
add
and
jno
arpl
insb
ljmp
shlb
outsb
push
jl
adcl
fisubrl
jno
jmp
jle
adc
or
in
jp
xor
jno
and
ja
jl
shlb
jmp
popa
addr16
cmpsl
dec
mov
popa
leave
cmp
stos
mov
lcall
push
jbe
sub
push
inc
mov
jns
ret
jno
mov
imul
adc
scas
push
rclb
popa
testl
fwait
inc
add
hlt
call
idivb
popa
or
jno
push
sar
and
push
push
cwtl
inc
xchg
xchg
mov
mov
lods
ljmp
pop
push
xor
arpl
cwtl
aaa
push
jno
cmp
xchg
pop
cmp
push
out
xor
mov
arpl
mov
mov
push
repz
sbb
push
pop
shrb
sbbb
xchg
pop
icebp
jno
adc
nop
stc
int
jno
js
cmc
or
add
fmul
and
lds
test
mov
jg
lods
mov
ss
les
sbb
icebp
xchg
lds
jle
lret
push
adc
jae
jns
scas
orb
jns
mov
insb
push
mov
aas
jb
das
je
lea
nop
and
jno
arpl
test
pop
jo
add
jno
adc
rcl
sbb
ljmp
pop
jns
es
pop
xor
in
pop
lock
push
dec
pop
push
jnp
cmp
push
mov
mov
mov
repz
or
jmp
cmp
lret
cmc
inc
jno
cwtl
sbb
in
push
jb
popa
jl
daa
add
in
mov
mov
jb
data16
int3
push
jno
mov
outsl
jno
pop
add
cmpb
or
push
enter
cwtl
movsl
cld
fdivrs
aam
dec
xor
jnp
sub
pop
pusha
arpl
out
lds
adc
xchg
sarl
xor
cmp
jmp
push
jmp
jno
fwait
leave
xor
in
cmp
add
push
xor
in
sub
lcall
push
xchg
popa
into
in
adcl
push
fstps
jge
jno
aas
xchg
jno
ds
cmp
push
sub
test
xchg
push
arpl
dec
scas
push
xchg
jnp
mov
pop
fcomps
or
in
shl
jnp
jge
sbb
xor
dec
aad
pop
sbb
jno
stos
push
jnp
test
mov
dec
lea
push
fnstsw
dec
jne
jnp
int
mulps
xorl
inc
vprotb
loop
ret
sub
mov
scas
sbb
mov
ljmp
ja
clc
xor
in
loopne
orl
loope
jno
in
cmp
lret
and
push
jb
sti
xchg
cmc
call
mov
jne
in
pop
pop
gs
lret
mov
cmp
xor
dec
and
push
imul
test
sbb
lods
xchg
jnp
jns
stos
cwtl
xchg
dec
inc
jno
sbb
clc
in
pop
or
jno
mov
pop
rorb
js
scas
add
call
dec
mov
inc
inc
fdivl
mov
imul
loop
aas
jno
xor
hlt
lret
andb
jno
inc
xchg
sti
sub
cmp
and
test
shlb
or
jno
push
scas
pop
out
andl
adc
popa
and
fnstenv
jno
ficoml
jno
add
mov
pop
xchg
add
jno
mov
jae
push
fcoml
mov
aas
addr16
bound
jmp
mov
fistl
outsb
imul
and
mov
stos
mov
add
nop
xor
ljmp
mov
xor
dec
lds
jecxz
outsl
or
or
fstl
rolb
dec
jae
xor
xchg
dec
mov
cmp
push
inc
in
aad
sub
je
jno
cld
in
and
mov
nop
outsl
lret
dec
xchg
aam
cmp
pop
fabs
cmpsl
jno
repnz
test
jge
ss
shr
mov
dec
sbb
pop
jo
push
stc
mov
mov
or
xlat
aaa
psubsw
in
stos
jno
mov
inc
or
fistl
fdivs
jg
cltd
and
imul
cmp
push
xchg
arpl
out
loope
adc
rorl
add
xor
inc
in
ljmp
movsb
pusha
mov
mov
xchg
stos
inc
nop
dec
pushf
add
pop
imul
jg
jnp
and
loop
pop
pop
fldz
jno
les
movsb
ljmp
jno
mov
push
sbb
jle
lret
mov
push
push
xorb
jno
cwtl
jp
aad
jne
int
mov
imul
sub
mov
nop
sti
gs
stos
sub
mov
loop
shrb
jg
inc
in
jle
int3
jecxz
jno
xor
sub
jno
push
sbb
inc
adc
stos
ljmp
lds
inc
jno
dec
mov
nop
sub
push
jne
sti
push
int3
xor
cli
cwtl
out
jno
nop
lea
or
in
push
pop
sbb
iret
loope
andb
xor
xorl
pop
jno
push
dec
cwtl
stos
loop
and
xchg
cmp
jnp
jmp
jg
hlt
cli
in
jno
add
dec
lret
jecxz
lods
cmpsl
iret
sub
inc
xchg
dec
pushf
lea
mov
pop
jno
lahf
lret
int
xchg
cli
mov
jge
add
test
mov
mov
mov
stos
mov
nop
outsb
rcrl
xchg
pop
das
adcl
sub
scas
mov
pop
add
test
sbbl
jno
adc
out
jecxz
push
jbe
ret
inc
jno
jo
fimuls
xlat
mov
fbld
or
cmp
fxch
ret
sub
jecxz
std
insb
int3
jno
and
mov
adc
mov
cwtl
pop
popa
mov
in
jno
imul
pop
scas
into
jl
popf
nop
imulb
shll
sbb
sub
ret
pop
jne
addr16
outsl
jno
push
pop
and
mov
push
or
scas
movsl
stos
push
fwait
sub
popa
jo
cmp
mov
rclb
lahf
pusha
push
je
or
loopne
lods
iret
stc
popa
ss
adc
cwtl
jne
dec
and
jno
fwait
cmp
clc
fdivrl
jno
aaa
xchg
pop
rcrl
cmp
jne
imul
jl
pusha
movsl
rorb
lea
fdivs
dec
iret
adc
js
add
adc
call
icebp
out
out
mov
imul
stc
xor
mov
out
mov
dec
jno
mov
fsubrl
insb
or
shrd
or
sbb
jbe
jmp
lahf
mov
xchg
pop
inc
cmc
mov
jno
pop
jae
or
in
push
cmp
test
lods
push
push
add
bound
pop
pop
mov
loop
pop
inc
stos
mov
xor
imull
mov
int
rcrl
jb
int3
jno
mov
add
dec
cld
stos
and
fsub
cwtl
fisubl
sub
add
and
jmp
sahf
push
jno
aad
mov
xlat
dec
inc
jno
xor
adcl
xchg
gs
mov
push
ret
sbb
jno
inc
out
sbb
arpl
loope
js
pop
jle
mov
xor
jno
rcl
dec
mov
sub
stc
adc
dec
loop
stos
sub
mov
shrl
es
cmp
xor
mov
lock
dec
mov
out
push
subl
mov
sti
or
pop
xor
push
adc
shl
daa
jno
and
pop
xor
rclb
mov
jae
or
pusha
xchg
inc
daa
jnp
stos
push
pop
pushl
out
or
fists
rclb
push
pop
aad
xorl
sbb
sbb
adc
pop
into
mov
orb
adc
mov
loopne
add
rcll
mov
nop
sbb
gs
cmc
fdivrs
inc
repnz
xor
je
test
xor
lods
imul
aam
dec
rclb
mov
jbe
and
and
cmpsb
pop
or
sarb
pop
mov
adc
movsb
mov
mov
lods
xchg
push
xor
and
cmp
imul
ja
shr
sub
bound
mov
push
jno
xchg
dec
imul
jbe
mov
mov
arpl
jne
push
pusha
fcomps
roll
sbb
mov
out
push
jg
pop
xchg
iret
imul
fdivs
js
divb
xlat
mov
sbb
or
decl
fildll
ja
les
rolb
dec
mov
add
sbb
or
push
lea
dec
add
nop
jb
jl
sbb
mov
mov
popa
jmp
or
aaa
iret
cmp
mov
mov
out
mov
adc
stc
dec
mov
mov
bnd
cli
dec
int
scas
mov
daa
xchg
notl
xor
or
and
inc
pop
jnp
sub
cmpsb
jle
ret
inc
jp
call
xchg
lock
push
std
mov
or
ret
lret
je
leave
cltd
dec
pop
inc
jno
sbb
jbe
mov
scas
dec
mov
adc
in
scas
adc
mov
mov
icebp
adc
movsb
jb
jo
adc
inc
lock
andb
add
lds
imul
in
mov
int3
push
add
bts
jno
pop
fcompl
cmpsl
notb
shl
or
cld
shrl
jne
lock
in
icebp
scas
testl
test
popa
shrl
aas
nop
mov
push
sbb
imul
nop
ror
push
stos
ja
xorb
or
add
sub
mov
lods
clc
daa
enter
jns
dec
xor
jae
push
mov
push
mov
lock
xchg
fwait
lret
popa
mov
add
out
and
jge
jno
test
int
addr16
jno
hlt
jns
lcall
shlb
lds
jg
nop
movsl
aam
cmpsb
loopne
clc
and
mov
xor
cld
xor
repnz
lods
dec
mov
dec
imul
cmc
hlt
into
lds
mov
outsl
fldt
and
jecxz
out
xchg
jno
adc
test
bound
jno
aam
out
xchg
std
mov
sub
inc
leave
or
fiadds
jmp
push
push
pop
insb
xchg
inc
add
mov
jo
in
hlt
pop
cmc
sbb
adc
popa
adc
push
adc
shll
testl
arpl
ret
jnp
mov
std
xadd
ljmp
sbb
push
scas
or
pop
ret
insl
xchg
pusha
lcall
leave
pop
xchg
popa
push
or
sub
mov
repz
add
xchg
xor
xor
hlt
lea
mov
mov
jno
mull
cmpsb
aaa
and
lcall
js
pop
or
dec
pop
pop
shl
outsb
sub
cmp
call
sub
dec
jmp
in
loopne
loop
out
outsb
sub
or
andl
fwait
imul
dec
add
mov
std
scas
pop
jg
repz
outsb
or
scas
stos
out
push
jno
inc
mov
push
es
dec
sarb
sahf
xchg
sbb
cld
mov
jno
adc
js
call
jno
shr
push
repnz
aaa
add
lahf
mov
adc
lret
lods
popa
bound
movsb
ret
pop
xor
sbb
stos
daa
jb
nop
jle
mov
or
mov
dec
pusha
xor
add
inc
or
push
idivb
sub
ret
fidivl
add
jno
sti
cmp
xchg
cmp
dec
lds
lods
aad
je
ja
inc
push
adc
sarl
jmp
in
icebp
sbb
jno
enter
aam
pop
push
push
xor
shll
xchg
ds
stos
pop
inc
mov
inc
cmp
test
nop
loop
in
xchg
insl
add
mov
push
sbb
test
gs
daa
pop
lahf
jno
jg
push
ret
mov
sahf
popa
ror
jbe
mov
popa
cmp
mov
cmp
lret
adc
popa
jns
xchg
adc
out
movl
loope
mov
add
or
dec
nop
xchg
push
mov
xor
outsb
inc
jne
outsl
iret
jno
sar
aam
stos
and
xchg
push
mov
popa
movsb
jno
push
mov
out
mov
es
hlt
adc
inc
jmp
and
push
jns
std
pop
sub
inc
ja
repz
jae
js
std
fdivrl
xorl
rcll
aam
jno
aad
fiadds
adc
inc
in
sub
mov
lret
lods
fidivs
incl
ljmp
inc
sbb
jmp
push
jbe
pop
jno
cmp
jno
push
iret
jmp
nop
std
in
stc
movlps
push
lahf
jno
repnz
mov
call
jno
ja
pop
xor
mov
pop
jae
repz
jno
fstpt
das
fldpi
fmuls
popa
or
or
jmp
push
mov
stos
vpsrlvd
add
out
or
adc
aas
cltd
or
adc
jo
insl
jl
test
jno
pop
push
icebp
sbb
outsl
push
add
icebp
cmp
je
or
add
push
movsb
xor
stos
gs
jno
insl
mov
jmp
and
jno
int
or
cmp
add
frstor
shr
arpl
jecxz
shll
cmp
iret
or
jno
sahf
adc
add
mov
mov
dec
xchg
fdivrp
sub
lcall
push
or
iret
out
jno
push
flds
mov
jp
xor
dec
mov
leave
lods
inc
sub
inc
or
scas
jo
jg
negl
cmpsl
dec
int
sub
mov
fmuls
sti
xor
mov
fidivrl
mov
and
add
pop
inc
xchg
jno
hlt
bound
xor
leave
and
int3
jno
mov
mov
popa
scas
sub
icebp
lods
nop
cmpxchg
lcall
dec
ret
inc
jg
loop
push
subb
pop
lcall
mov
int
mov
rolb
cmp
gs
rclb
add
popf
xor
stc
sbb
mov
mov
push
addr16
pop
jl
or
jb
rorl
push
jno
popf
movsb
lcall
fmulp
movsl
das
and
arpl
rclb
in
stc
xor
pop
fisttps
push
frstor
and
divb
jno
push
pop
test
push
cmp
ret
mov
lahf
jbe
jno
stos
test
push
mov
movsb
push
cmp
pop
sub
xchg
mov
sub
fsts
mov
mov
movsb
xchg
pushf
in
imul
addr16
jo
into
mov
adc
cmc
xchg
repnz
xor
aaa
sbb
sbb
pop
xor
adc
aad
loope
cmpb
jb
jne
jno
inc
push
xor
or
mov
and
jne
mov
pop
or
and
mov
sbb
sub
nop
xor
jne
push
push
dec
pop
incb
icebp
scas
scas
adc
jno
lock
cmpsl
inc
jno
jge
mov
cmp
dec
xlat
fs
popa
mov
jno
mov
jge
xor
jno
sbb
leave
movsb
int3
push
inc
lods
int
jl
jmp
pop
sub
jno
sahf
xor
repnz
xchg
lret
xchg
mov
inc
pusha
bound
addr16
pusha
adc
or
icebp
jp
jno
shl
rcr
sub
jno
lods
fisubs
loopne
sub
adc
pop
push
sub
popa
ss
or
cmp
lock
mov
cwtl
push
scas
jae
gs
jnp
jno
pop
adc
arpl
jno
xchg
loope
cmp
adc
mov
jbe
jmp
test
mov
jne
adc
mov
out
sbb
adc
cmpsb
stos
sub
out
add
jb
sub
jno
icebp
mov
popa
test
xchg
pushf
lock
cmpsb
scas
jno
lret
push
out
stos
imul
jno
adc
dec
adc
mov
cmp
sbb
adc
jno
push
pop
inc
mov
mov
insb
fwait
jns
stos
jno
pop
cmp
int
jb
mov
daa
in
sub
xchg
adcb
jge
xchg
sti
jno
aad
mov
jnp
mov
cltd
push
xchg
loop
pop
popf
and
nop
inc
push
addr16
jns
cld
jno
hlt
dec
xor
pop
adc
mov
jno
push
movsb
inc
shlb
je
hlt
mov
adc
insb
jno
mov
jo
jno
movsl
sub
lret
scas
clc
and
pop
dec
inc
add
cmp
pop
xchg
cmc
data16
mov
iret
in
sbb
mov
cmc
aaa
test
hlt
notl
sbb
push
data16
clc
sti
rorl
sbb
in
fdivrl
jno
loope
repnz
aas
imul
scas
push
mov
mov
dec
jae
rorl
dec
fisubs
cmp
mov
cmc
dec
sbb
mov
ja
inc
add
out
ss
mov
jbe
jmp
fwait
or
jb
xor
scas
mov
cmpsb
icebp
insl
nopl
gs
push
imul
and
dec
dec
jg
adc
jno
pop
fdiv
movsb
sbb
scas
mov
mov
jae
pushf
push
lods
jg
xchg
mov
cwtl
add
adc
mov
and
jns
inc
jmp
sub
int3
aaa
mov
xor
mov
xorl
jno
cli
cltd
push
jb
jecxz
lods
pop
xor
cmc
jbe
aaa
push
jns
adc
cltd
shlb
repnz
popa
or
fs
cltd
nop
sbb
pop
xor
test
fcmovbe
repnz
leave
js
rcl
xor
les
jno
xor
or
or
incb
arpl
jle
xchg
mov
fs
shrl
clc
mov
jno
dec
insl
jmp
imul
jno
and
xor
add
mov
loop
loopne
outsl
in
cld
pop
mov
jno
lods
int3
jo
push
add
sub
and
cmp
add
sbb
jno
je
cmp
and
jae
stos
jmp
js
roll
mov
mov
shrl
cmc
outsl
mov
ror
xor
cld
mov
fcoml
cmpsb
addr16
std
inc
mov
jge
sub
and
adc
push
icebp
jae
push
inc
out
or
cmp
jle
pushf
push
shrb
rclb
aad
popa
aaa
xlat
lret
jecxz
pop
dec
add
js
sbb
into
mov
sbb
pop
push
shrl
and
jno
mov
cld
arpl
mov
out
xchg
test
jl
add
jno
sarl
in
rcl
mov
cs
jns
sbb
addr16
jg
xchg
bound
jl
cmp
add
adc
outsb
addl
push
pushl
lods
cld
test
fwait
pop
push
cmp
xor
imul
inc
in
lods
fwait
push
rclb
mov
jle
and
mov
push
mov
adc
add
mov
stos
rolb
pop
std
add
scas
jno
cmp
mov
out
pop
mov
data16
sbb
fwait
inc
inc
stos
movsb
iret
jno,pn
ss
pop
dec
aaa
and
and
testb
aas
jmp
inc
push
es
jno
or
lods
adc
ss
add
dec
jno
push
fadds
and
jl
and
xor
icebp
mov
mov
mov
inc
lods
push
mov
mov
and
dec
jno
inc
mov
cwtl
jno
fs
lcall
sbb
add
jo
jno
mov
mov
cmp
pushf
leave
cli
jmp
mov
sti
popf
jg
sub
cld
inc
inc
addr16
in
inc
sbb
jl,pt
cmp
gs
and
pop
push
xor
mov
mov
fisubs
push
xchg
xor
push
jno
sub
mov
out
pop
jno
aaa
adc
pop
jno
outsb
adc
jno
mov
xchg
push
dec
or
cmp
loop
or
pop
jno
scas
jp
add
push
ss
clc
sbb
adc
mov
sbb
imul
xor
in
sbb
data16
sub
inc
sub
push
lds
jbe
mov
or
daa
mov
mov
push
xor
xchg
test
fldenv
adc
pop
adcl
cmp
sub
push
mov
and
mov
in
ret
xor
adc
adc
pusha
cmpb
add
push
xchg
mov
push
nop
je
aas
bound
or
jnp
mov
popa
ja
cmc
loope
adc
ja
or
jno
rcll
lret
dec
scas
lods
into
push
hlt
adc
cmovbe
dec
add
inc
mov
cmpb
int
jno
xor
add
outsb
stos
inc
mov
push
arpl
popa
sub
addr16
rol
fistl
lret
imul
adc
pop
push
push
cmp
imul
dec
loope
and
pop
jne
mov
insb
mov
push
and
push
shr
movsb
dec
jno
cmp
mov
mov
aaa
movsl
outsl
mov
mov
int
adc
hlt
jp
or
stos
sbb
pop
data16
push
jno
push
mulb
hlt
push
dec
sub
call
pop
mov
scas
icebp
stos
cmp
push
sbb
cmc
jmp
popf
jp
xor
jle
js
jno
xchg
lcall
fs
sub
pushf
xchg
jnp
rorl
dec
out
jno
pop
sub
push
or
fcmove
fsubr
sbb
in
dec
les
or
adc
insl
mov
inc
jns
cmp
fsts
dec
adc
lods
movsl
ss
fdivrs
insb
adcl
add
jno
mov
movsl
call
mov
adc
cmpsb
xor
add
mov
mov
jne
push
dec
pop
fnstsw
lods
cmc
sub
ret
xchg
outsb
nop
push
and
mov
jg
insl
sbb
popf
cmp
imul
xchg
jno
adc
lods
jno
sbb
mov
daa
stc
mov
popa
clc
es
mov
pop
jmp
push
test
jne
jbe
lcall
jp
mov
jno
mov
enter
cmp
scas
adc
dec
and
sub
xor
mov
mov
sbb
cmp
in
jno
jl
jae
mul
dec
push
mov
decl
shll
popa
mov
xorb
xchg
add
loop
int
jle
mov
dec
lret
stos
dec
dec
mov
push
adc
pop
xor
xchg
pop
cmpsb
jl
xchg
jno
insb
out
sub
push
push
in
jno
add
clc
leave
xlat
sub
push
arpl
mov
in
jl
jne
icebp
jno
pusha
pop
fstl
pop
xorl
in
pop
aam
adc
das
jge
or
xchg
jno
xor
add
lock
aaa
cld
push
adc
mov
xor
fstpl
push
jno
cmp
scas
xchg
movsb
clc
ja
nop
mov
xor
stc
dec
pusha
sub
test
jb
aam
addr16
push
pop
push
lods
sbb
inc
scas
jl
jecxz
jno
loopne
fnsave
mov
mov
jnp
aaa
bound
mov
push
into
mov
xor
pop
xorb
outsb
jb
jno
sti
mov
adc
xchg
add
sbb
mov
clc
push
mov
add
push
xlat
hlt
out
push
enter
or
arpl
jno
add
mov
sub
mov
in
jge
bound
aad
popa
lret
xor
mov
scas
pusha
loope
out
jecxz
sbb
nop
inc
mov
mov
adc
out
jno
xor
cmpsb
dec
jno
or
jbe
inc
iret
push
scas
or
addr16
shlb
into
xchg
inc
daa
or
xor
push
ja
sbbl
pextrw
xchg
inc
test
test
lret
xlat
popa
dec
xor
dec
fldl
mov
adc
add
dec
push
mov
stos
imull
jno
mov
mov
stos
push
aas
pop
push
push
lret
xchg
lods
mull
or
arpl
in
outsl
fwait
lods
into
jne
jb
and
out
mov
push
mov
fldenv
cmp
push
or
jno
push
or
fnsave
push
shr
popa
and
pop
lods
leave
fwait
cmpsl
repnz
shlb
inc
jno
lea
add
cmp
mov
imul
adc
mov
sbbl
imul
pop
mov
adc
add
cltd
scas
jnp
sbb
push
mov
lahf
add
inc
gs
xor
cmp
mov
mov
insb
jmp
mov
pushf
cs
push
mov
sub
adc
stos
scas
arpl
arpl
or
out
and
adc
in
aaa
sbb
fldl
and
arpl
int
inc
mov
push
mov
mov
rorb
pop
ret
mov
dec
push
les
hlt
push
jbe
andb
iret
push
fiaddl
xchg
mov
icebp
jae
or
cmpb
inc
lods
aam
loope
lcall
int3
mov
sbb
lock
adcb
mov
subl
fld
cmp
dec
loop
mov
pop
cmp
xor
shr
mov
jp
movsb
call
nop
jp
or
add
add
call
pushf
not
pushf
lea
jl
pusha
movb
inc
pushf
mov
jmp
xor
je
ja
cli
pop
add
mov
dec
jae
loopne
insl
std
jecxz
dec
std
adc
xchg
or
aam
shll
les
jmp
or
jno
inc
ret
pop
imul
cmpsb
nop
mov
jae
aad
fld
sahf
imul
or
sarl
pop
pop
lock
mov
dec
jne
or
sbb
test
dec
push
les
out
sti
mov
and
insl
jns,pn
jns
mov
int
movsb
hlt
mov
push
jne
sub
das
xor
jne
inc
imul
dec
das
test
stc
dec
push
les
jo
js
stc
lahf
jmp
add
adc
add
add
stc
imul
test
push
cwtl
shll
cld
push
pop
cmc
mov
addr16
insl
pushl
sbb
rorb
ds
sbb
push
sbb
inc
cmpsb
addl
and
push
jge
or
ret
mov
andb
imul
adc
cltd
or
xchg
jle
add
outsb
or
inc
xchg
inc
scas
sbb
leave
dec
dec
fisttpl
xchg
cmp
mov
pop
stos
aaa
adc
jmp
scas
pop
pop
aad
mov
push
xor
inc
inc
mov
cmp
dec
mov
mov
nop
jmp
adc
out
stc
stos
jp
push
mov
aas
es
push
inc
bound
push
xchg
jo
iret
ss
ret
jmp
jmp
jl
js
push
mov
mov
inc
loop
loop
call
sbb
dec
dec
mov
outsl
aas
sub
or
inc
xchg
test
add
aaa
jbe
out
out
out
sub
pushf
addl
lcall
pushf
fimuls
loop
pop
xchg
mov
cwtl
push
mov
in
insl
outsl
loop
outsb
out
push
xchg
inc
inc
xchg
inc
or
cmp
inc
lret
sbb
fiaddl
xor
popa
push
negl
cltd
test
inc
ja
mov
jmp
sbb
xchg
and
ljmp
adc
xchg
jmp
inc
add
dec
push
les
repnz
mov
ja
mov
imul
sbb
fimuls
pop
push
mov
insl
movsl
pop
lret
int
pop
mov
jbe
je
sub
repnz
fs
mov
movsl
push
fcomps
scas
or
lea
in
lods
loopne,pn
shlb
xchg
addr16
add
adc
mov
cmp
mov
jo
stc
stc
dec
cmpsl
pop
or
push
lods
repz
inc
adc
addr16
mov
add
mov
adc
std
add
daa
push
add
mov
mov
mov
xor
data16
cmc
sbb
fimull
sbb
inc
int3
cmp
iret
jae
xchg
fimull
add
xchg
xchg
loope
fmull
mov
or
inc
divl
dec
loopne
inc
ss
divl
cwtl
cmp
inc
and
xor
loope
std
dec
in
sbb
mov
jg
or
pop
ror
ljmp
aas
add
xchg
bts
mov
call
xchg
sbb
popf
ret
sub
stc
cwtl
mov
jb
jl
jmp
xchg
pop
leave
repnz
cs
mov
das
jb
inc
mov
jp
push
fwait
dec
in
cmpsl
pop
jo
mov
js
xchg
dec
test
movsb
jle
lcall
adc
or
mov
add
scas
dec
into
je
rolb
subb
es
push
cmp
inc
scas
sarb
jo
mov
call
adc
std
cmp
push
les
mov
adc
loop
ljmp
pop
mov
xchg
cld
int3
mov
pop
inc
cmpl
pop
sarl
cmpsl
push
mov
jns
push
push
enter
sub
push
push
in
mov
add
lods
cmp
lret
jle
jbe
and
insl
sahf
xor
and
inc
jne
fidivs
in
fcomps
sub
pop
sub
dec
jp
addr16
dec
cmovb
cmp
nop
js
ljmp
pop
push
jecxz
outsl
xlat
jg
lea
xchg
andb
str
and
add
xchg
repnz
cmp
cmp
add
mov
dec
in
std
mov
orb
hlt
dec
mov
add
xlat
aaa
popa
mov
push
popf
iret
cli
arpl
jmp
jmp
add
dec
ss
sub
push
lret
cltd
rolb
and
mov
and
ss
rol
cmpsb
adc
test
add
inc
testl
fsubrl
sti
mov
inc
inc
bound
lods
jne
inc
daa
adc
push
cli
push
les
mov
jne
and
pop
inc
push
les
cmp
ret
jmp
mov
jne
insl
ljmp
mov
xchg
sarl
mov
or
out
sub
cmp
cmc
or
mov
pop
hlt
ficomps
inc
pop
in
outsb
scas
sbb
mov
pop
sarl
test
inc
mov
nop
pushf
stc
sub
xchg
mov
popl
xchg
inc
and
mov
xor
xchg
mov
out
repz
add
lods
xchg
daa
push
test
idivb
push
dec
cmpsb
xchg
addb
mov
in
jecxz
mov
push
push
stos
xor
data16
jecxz
xchg
jns
push
scas
mov
push
xchg
loopne
data16
testl
jge
jo
dec
loop
add
sbb
arpl
push
jge
imul
pusha
adc
mov
push
add
pop
push
sub
lods
jo
loopne
push
sub
stos
aam
push
adc
in
nop
outsl
xor
movsb
adc
cmp
xchg
adc
xor
ja
push
xchg
jne
in
loop
cld
mov
push
xor
cmpsl
or
shlb
or
mov
pusha
add
push
jne
popa
loope
push
xchg
ror
jg
lock
ret
andl
jno
les
xor
dec
xor
sub
je
jb
jne
testl
out
scas
jp
popa
scas
int
xor
nop
stos
lods
inc
outsl
das
fsubrl
outsb
dec
outsl
hlt
dec
push
jo
mov
xor
pop
push
push
sub
push
push
in
int3
movsb
shlb
call
mov
lret
lock
fs
daa
in
scas
adc
aaa
lock
int
scas
mov
ja
imul
mov
sub
lods
mov
out
nop
jmp
lea
out
in
nop
lcall
imul
out
xchg
pushf
and
repnz
call
call
fucomip
cmp
inc
enter
repnz
jb
lods
cwtl
outsb
inc
push
ljmp
xor
xor
and
popa
xlat
jne
dec
xor
inc
adc
lcall
leave
outsb
loopne
ret
popa
shl
mov
jl
repz
enter
scas
sbb
push
notb
mov
push
popa
test
loop
mov
in
outsb
pop
push
mov
sub
int3
bound
xor
decb
les
stos
or
adc
cltd
dec
xchg
cltd
dec
pop
adc
mov
pop
ret
mov
sub
xchg
lock
jmp
sbb
nop
leave
xchg
adc
lock
inc
dec
in
popa
mul
dec
cld
and
push
fsubrs
cwtl
enter
js
test
pop
in
pusha
mov
dec
icebp
mov
mov
dec
push
loopne
mov
aas
cltd
out
roll
aas
cmc
cli
dec
xor
scas
das
adc
jo
into
outsl
shlb
nop
sub
int3
adc
push
mov
outsl
sub
in
jo
addr16
das
jo
iret
subb
dec
xchg
in
shrb
popa
mov
push
cwtl
repz
push
add
sub
inc
je
or
hlt
dec
and
cpuid
std
xor
xor
pop
shlb
into
or
ljmp
ljmp
sti
mov
out
nop
out
sbb
adc
adc
scas
nop
push
ud0
mov
push
arpl
loope
test
addl
pop
add
pop
xchg
mov
push
inc
imul
mov
shlb
jo
insl
sub
adc
outsl
scas
call
orb
in
subb
add
out
insl
in
dec
dec
test
dec
subb
inc
test
pusha
dec
pop
push
out
jle
push
jns
or
pcmpgtb
dec
scas
mov
ja
xor
sub
jbe
ds
pop
popa
repnz
xor
mov
xor
jb
jp
addr16
and
mov
push
cmc
cwtl
jge
nop
dec
mov
push
lahf
cmp
les
add
jle
out
out
lock
std
sub
hlt
xor
jnp
push
cmc
jle
jmp
sarb
push
inc
jecxz
imul
push
dec
sub
xchg
dec
nop
or
jecxz
or
loopne
push
insl
mov
dec
dec
push
jo
sub
outsl
popa
in
js
dec
addl
push
scas
int
lock
call
imul
out
out
jcxz
push
out
jg
test
push
outsb
jo
inc
insl
cmovns
outsl
cld
addr16
outsl
push
cltd
outsl
mov
outsl
jo
push
mov
out
out
pop
adc
jne
pop
addr16
cmp
test
scas
pop
mov
daa
int
mov
out
jns
and
adc
xor
inc
repz
loop
daa
dec
ja
push
or
pop
jo
aaa
pop
dec
mov
repnz
in
nop
shlb
bound
adc
jge
cmp
loope
icebp
mov
rolb
testb
adc
popa
ja
push
mov
dec
insl
cwtl
gs
call
xorb
scas
sahf
ret
xor
inc
xchg
loopne
mov
push
and
and
test
gs
aas
pop
push
jno
inc
mov
shlb
mov
popf
cmp
in
or
mov
bound
out
push
jno
sub
aas
fwait
daa
pop
xorl
aam
ret
enter
inc
sub
mov
jnp
add
call
mov
in
inc
outsl
testb
inc
out
loopne
and
mov
outsb
andb
mov
mov
insl
jnp
pusha
xchg
mov
cmpsl
pop
mov
bound
and
push
inc
jecxz
cmp
imul
pushf
scas
iret
add
nop
mov
dec
xchg
mov
into
xchg
andl
pop
push
enter
in
add
push
aam
hlt
dec
lds
ret
sub
mov
push
cld
pop
jno
xchg
mov
cmc
sbb
sub
clc
ja
cmc
imul
cwtl
jns
pushf
cmc
in
lea
insl
cwtl
cmp
mov
jo
jg
cld
mov
push
imul
xor
adc
and
jb
jno
dec
scas
out
rep
rol
jno
fs
adc
sub
jno
popf
sbb
repnz
jno
add
imul
mov
mov
push
int
ja
ss
int3
jno
pop
pop
aam
insl
lea
mov
jno
ja
mov
inc
mov
push
xchg
add
jnp
jno
pop
jno
jmp
bound
mov
je
sbb
add
out
add
adc
lods
sub
and
fucomi
xor
mov
in
jno
xor
inc
jge
jno
mov
pop
imul
push
cwtl
xchg
mov
jno
scas
jecxz
jle
out
pop
insb
repz
dec
cltd
nop
or
imulb
out
pusha
mulb
enter
mov
rcll
data16
dec
js
scas
aaa
lret
cmp
inc
push
jmp
add
in
nop
hlt
sub
jo
jg
pop
jmp
nop
adc
jmp
sub
lods
add
jnp
ja
lret
test
push
imul
jno
add
xchg
adc
out
jno
pop
cmpsb
mov
scas
mov
jno
or
add
sub
insl
cmpsl
int3
xor
mov
jno
push
pop
roll
xor
jo
push
jns
jno
je
cmpsl
and
jno
dec
mov
cmp
js
cmpsb
arpl
xchg
lea
sbbl
mov
pop
mov
xchg
jmp
xor
mov
icebp
and
outsb
inc
mov
lea
lret
hlt
and
imul
lret
ja
inc
ljmp
mov
scas
inc
iret
aam
xorl
sbb
out
fwait
push
jnp
mov
jno
iret
jo
testb
adc
dec
cli
sar
or
sbb
std
in
or
loop
jno
pop
notl
ret
fwait
test
fsubl
cmpsl
jno
dec
dec
mov
dec
and
sub
nop
xor
inc
jmp
jg
sbb
or
dec
mov
sahf
or
pop
adc
xor
cs
sbb
pusha
jno
iret
mov
enter
jg
mov
and
scas
dec
pop
ds
push
or
or
jnp
cs
xor
into
lods
fstps
xor
arpl
shll
dec
jno
push
xchg
lea
enter
jns
xchg
lods
ficoms
jno
lret
fcomp
xor
push
adcl
pop
add
adc
fadds
out
mov
and
xor
inc
jle
loop
jno
adc
fmuls
movsb
les
mov
push
sbb
xor
or
adc
push
pusha
and
mov
paddsw
mov
mov
mov
inc
push
ljmp
ja
fidivrl
sahf
xchg
rolb
jbe
sbb
push
jl
shlb
cltd
lret
xor
dec
dec
int3
hlt
adc
jno
jp
inc
mov
pop
out
jno
xor
add
cwtl
ja
in
aas
popa
inc
mov
imul
inc
xor
test
jbe
jl
nop
std
xor
andb
imul
sub
jmp
jns
lock
jne
or
dec
jno
rcr
scas
and
aam
sub
imul
divl
push
pop
mov
imul
xor
repnz
imul
pop
or
xor
add
imul
test
or
icebp
daa
lods
cmpsl
xor
adc
mov
pop
inc
loope
mov
fwait
or
bound
inc
mov
in
mov
inc
mov
notl
lcall
push
cmc
and
jne
clc
mov
fs
jno
insl
ljmp
mov
lock
call
sbb
push
js
fidivs
xor
xchg
loop
xor
jno
cs
test
call
les
adc
push
cmpsl
push
in
push
or
xor
inc
xor
xor
daa
ss
ss
arpl
sub
in
sub
int
mov
hlt
into
gs
adc
mov
popf
push
mov
pusha
aaa
dec
push
subb
loop
ja
or
test
mov
pop
das
inc
pop
inc
cmpsl
inc
jmp
testb
mov
mov
in
pusha
jno
and
outsb
addb
push
jns
cmp
jle
push
cs
pop
pop
stos
mov
sysexit
insl
jp
fwait
sbb
clc
je
sbb
xor
lods
xor
pop
movsl
mov
das
sbb
mov
jmp
adcl
pusha
push
pop
fidivl
jns
push
sub
jno
mov
scas
cmp
jle
lock
jmp
les
cmovb
jno
cmp
mov
andl
out
jo
lea
adc
jno
das
jge
add
sub
cmp
adc
dec
jbe
pop
ja
es
or
loop,pn
adc
call
jno
insb
jmp
push
or
sbb
ret
fs
jnp
jno
cmc
sbb
adc
jno
das
in
add
jle
jno
test
inc
sbb
add
jl
inc
xorb
cli
add
fwait
jno
cltd
lea
jb
jno
popa
cmp
in
les
out
mov
addr16
test
pop
add
and
test
mov
or
inc
iret
je
push
jg
and
jno
fprem1
or
ret
out
adc
movsb
insl
push
inc
call
je
popa
sub
xor
jl
jno
xchg
inc
inc
adc
jno
insl
cmpsl
or
mov
jno
or
andb
jns
jo
mov
cmp
pop
test
cli
jno
std
lods
gs
dec
inc
mov
dec
push
mov
je
or
sbbl
or
ss
jmp
out
popw
dec
das
jp
rcll
jns
outsl
les
in
mov
outsb
sub
mov
fnstenv
hlt
push
add
sub
fisubs
and
lahf
iret
add
jg
arpl
in
jno
add
mov
jno
insl
clc
mov
jge
push
jno
loopne
subb
push
inc
out
inc
mov
test
jno
inc
sub
inc
sbb
inc
pop
push
mov
jl
jnp
cmp
add
push
mov
lds
cmc
jnp
pop
add
mov
popl
out
insb
jno
sbb
push
xor
in
loopne
jno
cmp
scas
mov
pop
mov
mov
fs
push
push
mov
popf
xor
sbb
jno
in
insb
ret
cmpsl
adc
outsb
nop
xor
mov
inc
insl
adc
test
jp
aas
push
inc
or
imul
movsb
jno
xor
jo
push
dec
jmp
jae
inc
add
dec
rclb
xchg
jno
jl
add
repnz
jno
xor
or
push
pop
jno
es
push
clc
aad
rcrb
jmp
fsubrl
js
push
adc
xchg
xor
test
inc
fs
adc
or
sub
jg
sub
push
enter
lods
jecxz
fcmovnbe
test
add
add
jno
sbb
push
cmp
xor
fldt
pop
lret
mov
cmp
push
pop
gs
jno
outsb
add
jp
into
mov
or
std
cmpsb
xor
xor
add
hlt
sub
setg
push
or
mov
das
or
cs
xchg
mov
mov
add
ja
adc
adc
cmp
inc
je
or
mov
out
lret
adc
je
lret
orl
je
dec
inc
je
jle
add
nop
iret
std
xor
cmpsl
aaa
jne
cmpsl
outsb
xorl
mov
inc
das
push
jle
inc
add
aas
dec
in
jae
loope
dec
call
adc
xchg
gs
xor
xchg
repz
loopne
es
outsl
repnz
fwait
xor
popf
jno
jp
mov
clc
lods
jecxz
push
push
adc
loopne
mov
add
push
daa
mull
pop
pop
ss
outsl
mov
jbe
adc
dec
scas
jo
push
sti
into
aaa
lret
cmp
ss
aaa
inc
bt
arpl
inc
cli
pop
and
mov
push
cmp
stos
and
inc
scas
cs
jo
pop
outsb
pusha
jo
pop
imul
xor
shrb
mov
pusha
je
and
into
clc
push
adc
xor
mov
and
clc
xor
into
inc
imul
jmp
loop
insl
scas
or
scas
divb
arpl
pop
into
mov
jp
or
add
push
add
push
xchg
adc
popf
jno
xor
iret
clc
insb
jecxz
fistps
lods
and
outsl
repnz
iret
jo
inc
push
inc
outsl
mov
pop
int3
xor
mov
iret
into
xor
insb
into
out
jns
sub
dec
add
iret
lret
push
push
shrl
in
mov
ja
pop
andb
mov
js
pop
repnz
adc
loopne
mov
out
das
adc
xor
outsl
xor
sub
mov
cltd
xchg
dec
ljmp
xchg
scas
pop
sub
xor
jno
icebp
loop
lcall
mov
iret
das
movsb
add
inc
push
js
ja
dec
in
aam
sub
nop
popa
push
leave
jb
insb
xor
or
jns
adc
sbb
jae
cwtl
sub
cld
add
adc
xor
repz
ret
xorb
cwtl
enter
ret
mov
jno
adc
aad
dec
dec
divb
sbb
jne
repz
outsl
ja
jbe
imul
icebp
out
push
cmp
inc
outsl
xor
xchg
dec
xor
xchg
dec
lret
cmp
test
push
mov
rorb
je
push
jae
out
jl
out
mulb
loope
shl
sbb
loop
jl
adc
cmp
repnz
mov
repnz
pop
cld
push
divl
repz
xor
das
jbe
rolb
jg
ja
jne
imulb
sub
push
sbb
lock
mull
lock
jle
dec
stc
cmp
jbe
lea
std
fidivrl
sub
jge
loope
call
mov
loope
call
popf
call
sti
call
sub
outsb
push
pop
out
cmc
xor
jb
jmp
sub
lock
aam
xchg
ljmp
dec
data16
call
lods
call
stos
lahf
push
lea
jb
xor
mov
sub
mov
pop
repz
inc
mov
add
test
jg
sbb
jno
nop
inc
mov
jb
add
push
loope
mov
icebp
pusha
dec
popf
shrb
pop
int
in
dec
xor
mov
mov
xchg
dec
dec
sub
push
arpl
inc
call
fisubrs
test
scas
cmp
insl
test
inc
outsb
dec
and
push
nop
das
sub
daa
outsb
daa
dec
push
scas
popf
inc
pop
push
test
push
xor
rolb
in
arpl
jnp
outsb
or
mov
or
cltd
loope
mov
jae
mov
popa
loopne
sbb
mull
jg
cmp
les
out
mov
adc
cmp
jg
xchg
xchg
pusha
xor
mov
mov
inc
fldcw
cmp
cmp
outsl
out
shrl
lods
loope
cmp
shrb
out
adc
into
sub
test
xor
jmp
mov
js,pn
lock
out
rolb
inc
mov
insb
das
mov
xchg
jge
std
test
dec
inc
std
cmpsb
popf
dec
testl
loope
enter
mov
fs
mov
cmpsl
push
mov
insl
sbb
lods
mov
cs
dec
loope
enter
mov
dec
iret
cmpsl
jg
insl
outsb
loope
call
xchg
dec
add
xchg
pop
punpckldq
sub
inc
out
mov
loope
in
pop
scas
imul
js
into
test
clc
xor
test
clc
in
push
lods
push
mov
test
clc
lock
jle
adc
popf
push
dec
inc
dec
lret
pop
add
mov
test
stos
push
push
out
das
push
dec
and
sbb
in
outsb
into
aam
int
sub
cmpsl
shrd
xchg
jno
xor
jno
int3
stc
ja
sub
movsb
dec
or
dec
sarb
xor
add
inc
insb
add
scas
scas
xchg
mov
imul
daa
add
imul
inc
or
fisttpll
push
dec
repz
sar
orb
stos
sub
dec
cmpsb
out
lock
stos
insl
xor
jmp
pop
movsb
into
adc
bound
push
nop
sub
and
shlb
scas
inc
jnp
in
nop
add
rolb
sarl
out
scas
sahf
out
dec
out
cmpsb
xchg
xor
aas
rcl
cmc
cmc
inc
scas
or
sub
mov
xor
out
shlb
shll
das
scas
mov
test
jl
out
push
and
loopne
mov
jp
movsb
mov
sub
outsl
jo
sub
cmc
sub
loope
xchg
call
cmpsb
call
jl
mov
add
ret
and
jno
mov
in
mov
pop
jp
stos
jg
mov
sub
arpl
pusha
je
das
xor
daa
dec
and
jge
ret
xchg
call
aas
inc
gs
enter
repnz
stos
ror
call
xlat
mov
add
jb
ja
mov
icebp
mov
mov
inc
popa
cs
hlt
out
cmp
shll
mov
dec
cmc
out
je
and
jo
add
fidivrs
and
ja
pop
iret
push
or
outsb
cmc
in
jae
push
sbb
aas
out
es
dec
mov
jl
fdivp
jo
and
cmp
test
and
js
inc
add
andl
mov
sti
stos
adc
fistpll
pop
pop
cmp
pop
in
inc
loop
addr16
sbb
inc
pop
rcll
loop
add
mov
dec
add
test
sbb
sub
rclb
mov
movsb
shrb
scas
bts
fxch
popa
insl
or
lret
and
leave
call
push
push
pop
fdivp
mov
enter
sub
jbe
mov
mov
hlt
out
stos
cli
andnps
jle
lock
dec
movq
xor
jmp
sub
mov
shll
or
jg
push
dec
jo
dec
outsl
ljmp
shl
add
jo
xor
lods
out
xor
mov
ret
inc
mov
loopne
mov
or
cld
daa
add
mov
sub
pop
or
or
xchg
bound
outsl
into
fimull
sbb
push
jns
into
mov
popf
pusha
pop
orb
inc
inc
cmp
lret
outsb
loopne
call
jne
inc
cli
pop
pushf
pop
fdivrp
dec
mov
inc
stos
into
xor
das
dec
sub
leave
jmp
stos
pop
stc
mov
dec
or
rorb
xchg
jo
adc
imul
testb
cmp
jnp
xor
sbb
jne
dec
outsl
sub
add
addr16
jo
dec
pop
sub
pop
jno
pop
fistl
push
xchg
push
insb
dec
das
ja
add
daa
sub
xchg
and
and
add
jno
sbb
xchg
adc
adc
insl
lock
out
mov
cwtl
loop
call
fmull
fisubrl
fidivs
aam
sar
fcomp
jno
stos
and
xchg
mov
cli
test
push
lcall
jno
xchg
mov
fstl
push
pushf
out
imul
push
pop
rcll
mov
inc
inc
pop
jno
pop
or
shlb
imulb
pop
movsb
mov
fwait
or
das
sub
push
cmc
sbb
inc
push
data16
jno
cs
jecxz
loope
scas
out
in
repz
gs
dec
push
in
mov
xlat
clc
aad
jno
adc
fisttps
sahf
jno
mov
cmpsl
movntq
arpl
xchg
aad
icebp
xchg
push
cltd
sub
lahf
pusha
pop
pop
inc
cmp
adc
out
push
lret
pop
cmpsl
nop
push
adcl
mov
popa
pop
addr16
imul
adc
ss
sbb
pop
adcl
jg
imulb
sub
daa
andb
sbb
jl
inc
jno
mov
iret
jno
xor
out
inc
nop
lock
loop
in
out
call
lcall
xchg
mov
xchg
pop
jno
xor
xchg
mov
cmpsb
out
ret
push
pop
scas
push
mov
testl
call
xor
fs
push
jne
push
jno
rcrl
push
mov
jbe
sbb
mov
movsl
sub
jno
or
sub
push
int
xchg
outsl
inc
scas
insl
or
jbe
outsl
lea
outsl
js
jg
xchg
bound
xchg
jb
into
pop
jae
cld
ja
fst
mov
stc
imul
mov
outsl
inc
stos
pushf
jmp
or
scas
outsl
xchg
aas
lcall
mov
or
cmp
pop
cmpsb
jae
das
lods
out
sub
mov
cld
imul
je
out
imul
sahf
jp
pop
jg
hlt
add
scas
lods
mov
cmpsb
pop
mov
lods
mov
mov
cmpsb
push
icebp
adc
iret
xchg
mov
aas
lock
data16
movsl
fbld
cmp
xor
jbe
stos
xchg
xchg
adc
in
cmpsb
fs
adc
std
ja
in
add
popa
ret
movsb
xchg
stos
xor
rcr
push
call
lret
inc
jb
jne
mov
push
xor
test
sub
dec
pusha
call
lock
adc
mov
inc
and
movsb
outsl
outsl
mov
scas
test
dec
ds
jb
mov
inc
dec
shlb
les
push
shr
dec
xchg
test
pop
cmpsl
xor
out
push
out
imul
subl
daa
cmp
xor
inc
mov
add
sub
xor
rcll
imul
jo
imul
das
jae
mov
mov
xor
adc
testb
sub
outsl
out
mov
enter
and
push
dec
adc
cmpsb
insl
xor
out
lods
cwtl
icebp
loope
std
iret
mov
jo
push
enter
test
xchg
inc
xchg
lds
in
mov
out
insb
popl
pop
outsb
out
out
jo
stos
xlat
jmp
cld
insl
ljmp
or
pop
into
sub
push
inc
jmp
mov
pushf
jno
or
mov
mov
data16
repz
and
addb
insl
cmpsl
sub
inc
mov
repnz
lea
int
jo
pop
pop
ds
in
xor
jg
xor
repnz
outsb
das
pusha
xchg
clc
dec
stc
mov
xor
lea
leave
xor
in
js
fsubr
leave
in
mov
loopne
out
mov
jo
mov
int3
push
xlat
cmp
cs
int
dec
ljmp
outsb
push
mov
jmp
outsb
js
clc
xchg
movsb
or
in
fsubl
mov
lods
clc
fwait
test
inc
adc
push
jp
fdivrp
cmp
mov
test
nop
jb
inc
inc
enter
lods
ja
mov
mov
stos
adc
fmull
xchg
sub
int3
jge
pop
pop
mov
mov
daa
addr16
into
out
mov
xchg
sub
lods
sub
ds
push
out
add
cld
lods
fisubs
mov
nop
dec
sbb
sbb
mov
mov
dec
scas
pop
push
out
ds
loope
imul
out
xchg
repnz
loopne
mov
mov
sahf
mov
outsl
mov
outsl
pusha
mov
pop
lods
out
mov
mov
dec
in
out
mov
or
popa
jmp
bound
das
insb
add
pslld
jecxz
pushl
jne
data16
cmp
out
mov
ret
or
mov
les
movsb
popa
outsb
nop
or
inc
movsl
hlt
mov
adc
shll
mov
daa
push
lods
xor
movsl
das
adcl
pop
out
or
mov
int
add
scas
jo
loop
pop
push
sti
sahf
in
adc
push
mov
push
jns
xchg
jbe
je
cmc
loop
pop
dec
jo
inc
cmpsl
fnstcw
das
adc
push
inc
add
test
mov
pop
addr16
mov
hlt
clc
xchg
fisttpl
xor
out
test
mov
dec
mov
push
cli
mov
mov
out
pop
xchg
pop
mull
das
outsl
jns
scas
in
push
dec
sbb
lock
mov
out
pop
adc
mov
mov
add
mov
int3
inc
loope
in
popa
popf
pushf
dec
mov
xlat
xor
sub
popa
jg
cmp
or
clc
xor
testl
mov
pop
nop
scas
insb
fdivrl
xor
fists
loopne
into
sub
insl
push
push
movsl
push
leave
add
inc
test
jae
imul
daa
popf
clc
movsl
pushf
scas
pop
scas
lds
int3
pop
ss
mov
mov
fidivl
out
nop
mov
lcall
inc
mov
xchg
lret
repnz
push
add
mov
dec
scas
stos
mov
imul
in
lods
push
xor
jbe
pop
in
outsb
push
cs
jbe
xchg
adc
addr16
outsb
cmpsb
ret
or
cmp
cs
stos
imul
das
jno
addr16
scas
je
fcmovnbe
adc
jg
outsl
and
adc
sub
cwtl
mov
movsb
outsl
out
or
or
popa
jg
cs
outsb
or
popa
sbb
into
pop
push
mov
push
adc
push
mov
out
xor
xchg
mov
push
scas
cwtl
mov
push
daa
jge
lea
jo
sbb
xor
add
adc
xor
mov
mov
pop
sub
mov
mov
xor
lock
icebp
nop
mov
scas
divl
lods
icebp
mov
cwtl
cmp
lods
dec
lods
mov
cmpsb
jae
ret
in
xchg
shll
outsl
cli
jp
add
data16
ss
arpl
jge
movsl
mov
fimuls
jo
pushf
push
in
nop
xlat
outsl
xor
into
lock
ljmp
sub
std
or
out
out
dec
jne
push
sub
mov
push
test
sub
mov
in
sbb
fcoms
pop
dec
lret
pop
stc
pop
out
ljmp
out
sub
jb
jne
mov
mov
mov
sub
jle
loope
test
dec
test
push
mov
imul
in
les
cmpsl
out
jmp
rcrl
inc
sub
xor
arpl
add
mov
jbe
xor
sub
shlb
cmpsb
iret
lea
and
jo
iret
sub
out
xor
iret
push
push
or
out
jae
repz
arpl
outsb
out
loope
arpl
loopne
jge
push
mov
or
ficomps
fmull
xor
outsb
push
lock
in
outsb
adc
out
mov
inc
test
xor
iret
popf
xor
push
rclb
in
jge
pop
test
dec
push
sub
dec
push
test
dec
ds
scas
or
jecxz
int
nop
ja
cmp
push
arpl
lds
cmp
in
xor
jmp
sbb
mov
outsl
repz
inc
hlt
xor
dec
push
insl
aaa
fsubrl
subb
jmp
inc
jo
push
addr16
scas
or
mov
fwait
bound
movsl
xchg
out
xchg
outsb
out
dec
outsl
fs
outsl
or
jmp
hlt
cmpsl
and
test
js
jb
push
or
jo
outsl
lea
outsl
daa
xor
nop
test
push
mov
mov
jl
push
dec
daa
mov
rclb
pop
mov
dec
in
push
push
test
dec
push
dec
xchg
push
iret
scas
xor
shrl
jno
mov
cs
dec
inc
jl
nop
inc
divl
and
repnz
scas
outsl
cmpsl
in
mov
int3
ljmp
stc
or
xor
sbb
jno
jo
xor
shr
aas
insl
mov
jmp
xor
mov
imul
stos
bound
mov
xchg
jmp
outsb
pusha
ror
add
push
mov
sbb
dec
shr
or
loope
pushf
ds
js
sbb
in
jp
sti
jo
mov
or
js
jp
pop
cmp
loop
dec
xchg
stos
out
outsb
stos
loopne
push
jns
out
xchg
mov
dec
movsl
test
add
adc
ret
jns
adc
xor
insb
int3
aaa
mov
cmpsb
or
lods
out
xor
enter
lds
insl
add
adc
jns
sub
mov
adc
fcoml
jg
notb
jp
lods
bound
test
xor
bound
je
ljmp
xchg
addr16
cmpsb
xor
sub
sub
test
inc
std
jns
les
jp
clc
mov
sbb
loop
xchg
adc
ds
push
imul
push
call
sbb
sahf
mov
nop
das
cwtl
xchg
mov
imul
pop
and
shr
icebp
sub
sub
jbe
sbb
xchg
jg
test
add
mov
cld
mov
into
dec
and
clc
push
push
adc
je
cmp
adc
push
sub
jne
or
cmp
and
loopne
fsubl
lcall
or
shrl
mov
and
andl
fpatan
in
scas
jmp
pop
or
ds
xchg
mov
inc
loope
add
insb
push
mov
loop
inc
in
lret
sub
sub
mov
xor
jbe
inc
ret
mov
mov
or
sbb
jbe
push
mov
mov
out
cmc
daa
mov
jg
cld
sti
in
and
mov
mov
arpl
inc
test
popf
jno
jo
sub
dec
mov
scas
fstp
call
mov
fidivrs
mov
pop
repz
mov
push
and
fstps
stc
xor
das
cmpl
add
jecxz
loopne
jo
movsl
arpl
das
mov
sub
pop
jmp
popf
test
cmpsl
lock
outsb
pop
sbbl
mov
es
xchg
fisubrs
ljmp
daa
mov
or
and
outsl
scas
fldl
and
jo
lret
shrb
and
jo
jo
fs
mov
dec
cwtl
test
and
sub
movsl
out
std
test
mov
adc
add
inc
cmpsl
jne
mov
sub
mov
sub
aaa
push
push
adc
and
inc
or
push
or
inc
test
leave
shlb
mov
jnp
fs
aaa
or
xor
popa
addr16
int3
lret
cmp
daa
mov
sub
cmp
mov
jae
push
ljmp
pop
mov
in
js
dec
dec
nop
fbld
push
popa
out
leave
push
imul
popl
arpl
insb
xchg
jno
fwait
ret
mov
adc
das
fwait
mov
lock
mov
mov
mov
mulb
dec
mov
adcb
pop
icebp
or
int3
subb
push
or
dec
aas
mov
enter
or
mov
stos
xchg
cld
cmp
out
scas
scas
dec
jmp
jo
xor
xlat
mov
das
jl
je
jae
inc
stos
jns
iret
lods
jl,pt
outsl
mov
gs
pop
les
dec
push
sub
xor
call
packuswb
shlb
jo
cmpsb
outsb
mov
pop
xchg
jno
jae
sub
push
xor
nop
cmp
xchg
jo
rcrb
mov
xorb
sahf
aas
stos
rcl
inc
ror
jmp
xchg
lock
xchg
jmp
jo
call
adc
mov
dec
divl
aaa
shll
adc
mov
rcll
xchg
xor
rclb
pusha
in
xor
mov
lods
and
aam
dec
mov
mov
adc
push
dec
iret
std
sbb
cmpsb
xchg
fcmovbe
inc
jb
pop
mov
out
pop
dec
das
and
repz
stos
xor
jg
popa
sbb
std
in
pop
mov
fdivrs
in
enter
in
cld
ljmp
push
or
repnz
xor
mov
xor
lcall
les
mov
std
or
lock
out
xor
pusha
js
inc
inc
mov
add
xchg
cmpsl
in
push
popf
xchg
je
add
add
push
mov
mov
out
addl
rcrb
inc
add
rclb
scas
scas
mov
fs
loope
add
lds
mov
lods
incb
test
push
xchg
in
out
out
test
xor
popl
jb
push
pop
imul
mov
test
cmp
pop
pop
mov
shl
in
out
insl
fildl
je
ficoms
add
movsl
imul
mov
dec
ja
ret
out
sub
push
jns
minps
popa
imull
arpl
cmp
out
loopne
insb
add
outsb
push
je
mov
ljmp
jb
data16
mov
push
xchg
inc
data16
shlb
cwtl
stos
mov
jb
addr16
adc
int3
js,pt
or
adc
scas
add
push
adc
cld
push
sub
cltd
inc
fildll
out
lock
pop
shrb
shlb
pop
mov
jbe
adc
xor
mov
inc
daa
add
inc
jo
pop
aam
and
loopne
inc
mov
mov
jns
push
loop
fildll
pop
imul
pop
movsl
adc
sbbl
push
mulb
xor
sub
rcrb
int3
sarb
in
fcmovbe
imul
lret
add
les
and
jo
push
loop
cmp
jno
xor
mov
adc
mov
xor
out
lret
lods
adc
jo
test
in
cs
loopne
sbb
and
push
xchg
mov
mov
push
xor
sub
cld
pand
xor
jmp
mov
push
insl
xchg
mov
jmp
xor
popa
xchg
sbb
jae
adc
mov
fcmovbe
inc
addr16
mov
popf
insl
fwait
shr
hlt
nop
popa
into
xchg
dec
fsubrl
decb
imul
dec
es
mov
stc
mov
dec
stos
push
popa
rcll
xor
les
out
xchg
xor
in
mov
or
push
nop
add
in
lock
cs
je
rorl
push
pop
repnz
cwtl
shr
dec
cmovl
gs
int
mov
sti
fdivr
add
test
inc
mov
adc
pop
jecxz
insb
sbb
or
inc
lock
loopne
push
es
cld
pop
fidivl
pop
dec
xor
push
rorb
popf
or
adc
bound
lret
sub
or
dec
lcall
outsb
popa
push
pop
dec
aam
inc
jg
mov
sbb
or
add
push
loop
jmp
adc
shlb
cmp
lock
in
cltd
sub
imul
inc
insl
adcb
push
mov
std
jo
lods
cld
rorl
scas
dec
lock
mov
dec
xor
icebp
xchg
push
sub
mov
jl
push
out
test
xlat
add
daa
imul
ljmp
insb
inc
dec
outsb
mov
jecxz
test
jg
jge
insb
subb
repnz
movsb
pop
mov
xlat
sahf
pop
mov
fdiv
dec
in
ds
in
cmp
cmc
mov
sahf
dec
iret
out
lock
inc
jae
clc
sub
add
lcall
pushf
iret
ret
js
and
push
pop
std
pop
hlt
sub
stc
orb
test
jge,pn
or
mov
stos
dec
or
xor
jmp
test
in
fimuls
sub
hlt
add
sub
pmulhw
loop
shlb
jo
and
adc
imul
nop
rcrl
jp
jno
mov
mov
mov
in
dec
dec
test
inc
out
adc
lahf
outsb
pop
in
xor
insb
mov
cmp
call
in
jb
lret
jo
fisttpll
xor
loope
jbe
movl
push
mov
in
add
mov
ds
or
lea
popa
fimuls
cmp
lock
fmulp
xchg
imul
pop
imul
out
imul
mov
out
inc
stos
cmp
addr16
sti
scas
xorl
stc
pop
dec
mov
arpl
insb
xchg
das
cmp
outsb
or
dec
data16
imul
outsl
sub
daa
in
sub
cmpsb
mov
insb
out
mov
outsl
jno
xor
or
inc
outsb
pop
test
out
pusha
outsb
ds
leave
faddl
test
dec
xchg
mov
stc
lret
in
lock
out
jo
dec
sahf
inc
lret
push
xor
fisttpll
jle
out
outsb
inc
push
ja
pushl
popa
test
dec
out
pop
stos
outsl
and
inc
sti
mov
imul
mov
sub
xor
lahf
inc
insl
es
adc
sub
jno
dec
shrb
loopne
jo
sub
lcall
dec
outsl
fsub
or
mov
cs
inc
test
imul
scas
dec
adc
in
lds
in
and
scas
push
ljmp
xchg
cs
inc
jns
loopne
stos
dec
add
adc
test
xor
hlt
enter
adc
popa
push
xchg
hlt
mov
and
push
mov
les
push
dec
pop
imul
xchg
inc
cmpb
arpl
xlat
sub
or
ljmp
and
pop
add
call
stos
insb
hlt
ja
pop
repnz
inc
popa
sbb
sub
shr
roll
dec
xor
outsl
sbb
xchg
xor
daa
jo
push
inc
xchg
xchg
xor
scas
sub
in
or
enter
push
das
loop
dec
data16
cld
sub
sbb
or
lods
push
jnp
push
jmp
jo
sub
ja
sub
ss
inc
cli
rol
sahf
lock
dec
jg
pop
scas
sbb
cmpsb
add
ret
push
scas
xor
loope
stos
ror
loopne
sbb
mov
ss
ja
pushf
xor
je
xor
negb
jbe
rorl
fbld
or
pop
iret
je
xor
add
xchg
mov
xchg
hlt
nop
add
and
push
jle
push
pop
mov
fisttpl
sbb
adc
stos
sub
stos
daa
das
aad
outsb
dec
lods
fwait
in
mov
jno
mov
pop
mov
sbb
adc
icebp
lahf
jo
xchg
pop
xchg
ljmp
mov
adc
jae
shrb
das
sub
nop
divb
int
out
inc
jo
stc
mov
mov
shrb
aas
dec
aam
in
cmp
in
test
fwait
push
push
xchg
mov
xchg
into
hlt
addr16
nop
xor
fistpl
pop
mov
adc
pop
popa
pop
sub
xchg
das
ljmp
in
sub
pop
mov
push
jno
push
fisttpl
adc
sbb
sub
add
fnsave
daa
popf
enter
icebp
test
lds
icebp
adc
mov
xchg
fsubrl
dec
fmull
or
pop
lock
push
mov
push
adcl
mov
arpl
clc
xchg
push
mov
fidivs
cmp
int
xor
mov
int3
lret
and
cmp
lds
repnz
push
pop
cmpsl
dec
sub
fs
push
and
cld
mov
mov
or
adc
mov
movsl
cmp
sbb
aaa
adc
aas
pop
pop
cmp
xchg
add
lods
dec
pop
test
call
fadds
mov
push
cmpsb
imulb
fldt
es
rcrl
in
and
mov
test
sbb
imul
ds
out
out
push
inc
jno
pop
repnz
push
dec
jno
jo
jo
movsl
mov
jno
dec
mov
mov
int3
cmc
je
int
cmc
mov
lds
sub
sbb
ja
push
icebp
je
or
mov
das
clc
lret
sbb
dec
lods
dec
cltd
jo
arpl
in
push
fdivs
cmpsb
shr
add
xlat
fnstcw
or
jge
xor
xchg
mov
or
mov
dec
mov
icebp
pop
stc
sbb
jbe
out
cs
lock
leave
sub
jle
ss
fsubrl
adc
fstpl
popa
repz
jge
lret
fbstp
dec
xor
icebp
dec
insb
inc
mov
cld
pop
lods
adc
inc
push
out
dec
ss
inc
insl
pop
cmc
test
jns
imul
hlt
pop
je
pop
and
ja
fistpll
cmpsb
je
push
mov
add
inc
add
inc
pop
ljmp
rcr
sarl
sahf
loopne
into
int3
add
inc
sbb
loop
cmovg
in
xchg
out
push
movsb
add
pop
inc
jo
dec
mov
stos
push
out
and
sub
in
aaa
icebp
scas
icebp
push
int3
add
lret
adc
pop
shl
and
mov
or
dec
sub
cmp
in
sarl
out
dec
mov
int3
jge
in
inc
inc
lock
dec
aaa
cwtl
push
out
test
iret
daa
scas
sbb
pop
loop
into
and
lock
je
icebp
push
xchg
sub
xor
add
movsb
jg
adc
mov
lea
adc
fs
or
scas
jb
inc
jp
pop
push
test
lret
cmpsb
cmc
cmp
push
jae
mov
nop
jp
and
dec
or
sahf
shr
push
mov
aas
cmp
popa
xor
or
xor
stos
dec
andb
cmp
out
cmp
das
lret
rcr
ret
and
jb
adcl
lds
rcr
outsl
call
jae
inc
hlt
jns
push
dec
out
je
aas
jp
dec
xor
je
mov
add
push
shll
ret
les
mov
push
outsl
sub
jg
loope
out
add
shr
gs
and
pop
ret
nop
dec
out
push
aam
xlat
dec
leave
insb
mov
shrb
xchg
inc
fsubrs
repnz
xor
rolb
jmp
cli
mov
pop
pop
int
xor
pushf
jno
push
arpl
int
int3
std
push
sbb
mov
and
mov
cmp
dec
inc
pusha
daa
test
xchg
repnz
scas
into
popf
pop
mov
dec
xchg
inc
sub
pop
int3
ds
mov
mov
int3
aam
cmp
xor
add
stc
es
ret
testb
cmp
scas
push
xchg
dec
popf
xchg
enter
add
fucomp
imul
xor
and
popa
mov
mov
cs
lcall
rorl
mov
popf
xchg
sub
cli
lcall
push
adc
xor
rcrb
jno
lock
jno
clc
jo
fbld
sub
jmp
inc
fs
int3
pop
cmp
or
cmpsl
sti
repnz
fwait
mov
fldl
and
in
ljmp
add
stc
mov
outsb
mov
mov
push
test
dec
sti
xor
dec
outsb
xor
mov
test
mulb
outsl
push
out
es
jno
or
addr16
movsb
sldt
lods
dec
xchg
add
mov
mov
sbb
out
mov
mov
pop
xor
lret
cld
int3
sti
push
pop
fwait
lods
cli
test
jno
and
pop
lret
inc
adc
ret
fdiv
xchg
test
in
ret
mov
leave
aas
mov
test
push
lock
pop
out
push
daa
rol
cli
push
adcb
jno
mov
popa
hlt
lret
jno
les
cmp
adc
daa
scas
outsl
fcmovnu
ljmp
aas
xchg
in
xlat
popa
mov
es
pop
push
xchg
xor
xchg
sbb
jmp
repnz
sbb
jecxz
jmp
aad
lds
loop
in
adc
popa
mov
xchg
stos
test
pop
push
cs
out
adc
loop
fnstcw
or
sbb
pop
inc
pop
mov
cmp
xchg
jne
les
push
xor
loope
aaa
stos
pop
cmp
pop
popa
pop
shl
test
pushf
cli
cmpl
xchg
xchg
ss
loope
negb
push
fcomps
xchg
mov
fwait
dec
inc
add
push
hlt
stc
in
lret
sbb
jmp
loop
lock
jno
xchg
jo
push
cli
cli
sub
lahf
insb
pop
cmpsb
xor
pop
mov
dec
jo
xchg
or
or
or
outsb
pop
cwtl
sub
or
fdivp
ljmp
stos
push
lock
sti
push
and
dec
cmpsl
sarl
dec
loop
jo
jp
push
pop
push
cltd
enter
sahf
push
stos
outsb
into
jo
or
fists
pop
mov
mov
dec
test
shrb
xor
xor
cmpsb
jo
mov
imul
cmp
dec
jo
sbb
push
scas
std
aam
jo
dec
cmpsb
and
packsswb
push
loope
xor
sub
out
repnz
push
loope
mov
pop
sub
arpl
pop
add
or
jo
pushf
sti
jecxz
nop
mov
xor
out
das
rolb
scas
dec
push
in
out
cmp
cld
es
jb
addr16
loope
in
shrb
inc
sub
mov
mov
xlat
sub
frstor
xor
sub
call
cmp
push
out
lock
xor
mov
insl
out
sub
fstl
stc
dec
xchg
xchg
pminsw
nop
fucomp
scas
insl
adc
lock
outsb
insl
scas
outsl
mov
enter
jg
xor
imul
daa
push
cmp
dec
adc
jle
push
gs
dec
pop
xor
out
imul
rorb
scas
push
movsb
test
adc
arpl
outsl
imul
push
lods
clc
dec
jle
adc
push
mov
xchg
jno
adc
orl
inc
fsub
inc
outsb
mov
stos
mov
xchg
in
or
mov
push
cld
sbb
test
inc
push
das
insb
lds
or
lea
test
out
cld
lcall
xchg
test
sub
scas
int
leave
fs
cs
rcll
xor
idivl
or
out
arpl
sub
nop
ljmp
or
jmp
and
jle
das
sarb
dec
lret
stos
xor
sbb
repz
jmp
inc
jb
xor
sahf
mov
bound
jle
out
cmpsb
jno
sub
pop
pop
push
pop
in
and
in
mov
pop
lock
scas
push
nop
ret
gs
lock
in
jecxz
lock
negl
push
loope
imul
out
jae
and
dec
insl
push
pop
bound
insl
sub
ja
pop
lods
adc
je
push
jne
movsl
out
jmp
sub
lds
mov
or
and
shrb
int3
mov
cmp
daa
or
int3
xor
outsb
imul
out
lods
pop
dec
sbb
insl
movsb
dec
ljmp
ljmp
out
fisubrs
xor
push
into
fsubl
insl
ljmp
jo
fmulp
arpl
insl
out
xor
movsb
lods
int3
dec
push
pop
int3
loope
sbb
fsub
cld
insl
fstpt
lock
jo
lock
jle
pop
rorb
pushf
out
in
push
sub
test
lock
pop
xor
mov
cmp
dec
dec
or
out
mov
outsb
push
lods
cmp
push
out
das
xchg
lret
je
call
lret
iret
dec
cmp
xor
sub
dec
mov
dec
int3
cs
xor
push
adc
cmpsb
fdivl
les
lock
movsl
movsb
jp
dec
sub
mov
and
jg
stc
xor
adc
insl
adc
sbb
pop
stos
xor
cmpsb
push
test
ja
inc
sub
insl
imul
xor
xor
daa
imul
push
cmp
sbb
inc
scas
out
adc
and
mov
jno
pusha
adc
mov
xchg
pop
into
sub
mov
cli
scas
push
cmc
jp
ret
and
aad
jmp
sub
movsl
stc
test
mov
inc
lock
jp
popa
push
fisubs
adc
xor
lods
push
in
out
mov
lret
in
sub
pushf
xorl
add
stos
sar
sub
mov
insb
or
test
loop
jg
pop
insl
or
data16
movb
pop
jo
jmp
iret
mov
dec
out
mov
mov
ret
call
call
popa
cli
pusha
sarb
inc
repnz
cmp
test
jle
leave
shrl
and
pop
jle
adc
cli
add
out
sahf
dec
push
lock
pop
loope
out
xor
scas
fdivl
out
lret
imul
sbb
and
cli
jp
jp
mov
mov
sbb
in
cwtl
sbb
sbb
cwtl
mov
cmp
je
aaa
movsl
in
in
xchg
enter
insb
inc
test
mov
add
jmp
outsl
das
andl
pop
data16
lcall
jmp
inc
insl
das
push
icebp
loop
xchg
fnstsw
inc
mov
cmpsb
xor
or
cmpsb
into
dec
mov
jo
fstpt
mov
jo
lret
out
jo
jne
push
push
out
into
cmp
jge
push
mov
sub
or
stos
into
adcl
xor
sub
sub
dec
scas
out
and
lock
mov
push
scas
cmpsb
in
outsl
or
js
dec
ja
jp
adc
jp
lods
stos
out
das
in
call
jb
out
jle
sub
cmp
push
mov
pand
scas
insl
out
arpl
and
xor
push
cmp
jl
out
lock
inc
xor
in
movb
xchg
xor
cmp
outsl
jl
inc
adc
insl
jo
icebp
scas
mov
inc
push
mov
imul
jne
inc
outsb
out
fldt
pusha
adc
pop
fsubp
aam
xlat
dec
sub
lods
xor
add
stos
insb
popa
jmp
fucomip
dec
jb
int
or
sbb
dec
loop
adc
out
add
test
jns
mov
pop
cmc
outsl
int3
jb
scas
sub
aaa
mov
aam
out
mov
jo
cwtl
xchg
jae
in
fists
lock
jo
xchg
pop
arpl
sbb
push
rclb
js
xor
add
cwtl
inc
or
mov
add
imul
out
outsl
je
jecxz
cld
outsl
in
icebp
jecxz
pusha
outsb
dec
push
or
jle
movsb
pop
xchg
adcb
cmpb
out
cwtl
into
inc
je
inc
and
stc
dec
movsb
or
jbe
or
push
cld
testb
clc
outsl
or
mov
pop
aam
je
addr16
cmpsb
xor
call
xlat
cli
add
mov
cs
inc
sub
lcall
addr16
clc
lock
adc
xor
in
jno
nop
sbb
and
repz
sub
jmp
neg
aam
mov
inc
insl
data16
jb
loop
icebp
xchg
dec
je
pop
xor
scas
lds
or
jno
add
loop
imul
mov
ret
fcomp
xlat
cwtl
data16
xor
push
ret
jno
orb
adcb
push
addr16
int3
dec
cltd
arpl
ds
inc
adc
enter
jl
dec
jne
inc
push
mov
xchg
xchg
into
lea
outsb
add
mov
jo
adc
jo
subb
or
std
popf
scas
mov
popa
rorb
nop
fldcw
in
jle
popf
ja
cmp
outsl
add
das
xchg
xchg
or
pop
jo
in
mov
jg
aaa
cmp
fs
addr16
scas
js
adc
pop
dec
lods
jge
pop
lock
out
mov
not
lea
push
insl
mov
nop
mov
push
lds
cmp
test
subl
out
in
dec
jne
loop
mov
icebp
out
ljmp
mov
jo
int
jne
mov
test
gs
lock
push
je
jns
mov
push
xor
jae
lds
outsb
enter
and
jns
pusha
pusha
mov
xchg
push
cld
out
lahf
add
jge
xor
add
loope
xor
addr16
push
cmp
scas
daa
jb
test
arpl
xchg
test
xchg
fdivs
mov
cmp
lock
in
and
inc
in
bound
xor
outsl
aam
lock
cld
in
lods
pushf
insl
dec
jo
dec
dec
cmc
push
insl
in
sar
je
xor
hlt
insl
add
sar
jp
xor
xor
imul
push
outsl
outsl
and
push
imul
cmp
std
insl
mov
outsl
or
data16
gs
pop
jae
pusha
adc
imul
dec
imulb
bound
js
push
popa
mov
pusha
adc
gs
jg
jg
popa
aam
jecxz
jle
jno
jge
jge
gs
shll
pusha
adc
jnp
imul
into
push
imul
test
cmp
out
adc
cmp
call
mov
push
mov
jge
popa
lock
leave
loopne
push
push
aaa
mov
fcomip
outsl
icebp
xchg
cmpl
lea
clc
in
icebp
dec
push
mov
push
mov
push
jp
mov
mov
ljmp
ljmp
imul
arpl
ds
mov
xor
shlb
popl
fldt
push
xchg
outsb
popa
ss
popa
mov
inc
mov
push
call
push
jns
push
loopne
nop
lock
lock
lock
dec
pop
insl
outsb
ljmp
push
daa
ljmp
or
int
nop
shl
inc
leave
push
mov
push
sti
rcr
push
stc
aas
mov
or
ret
mov
jns
popa
insb
outsl
ret
mov
int3
and
fs
jns
pop
lock
and
dec
arpl
in
nop
outsl
cmc
push
mov
mov
dec
out
mov
nop
in
mov
pop
jmp
fisttpl
xlat
dec
insl
xlat
leave
jne
out
iret
pushl
ja
insl
ds
imul
rcrb
insb
and
push
jb
jae
xor
mov
lea
lock
icebp
or
lock
in
fs
jb
push
ljmp
adc
js
cmp
sti
xor
xor
pop
jno
jp
push
cmp
ljmp
insl
imul
lods
jecxz
lock
rdtsc
clc
dec
xor
outsl
adc
pop
dec
outsb
ljmp
out
ljmp
insl
jmp
jle
std
lds
jbe
push
fdiv
push
arpl
xchg
std
cld
imulb
fs
lods
adcl
int
mov
jmp
es
or
pop
js
inc
jo
dec
jo
xor
jmp
shll
cli
rorb
adc
add
imul
and
nop
lods
data16
out
jo
loopne
lahf
jns
andb
mov
imul
das
jg
xchg
imul
std
loop
jns
outsl
rclb
mov
push
push
jg
pusha
cmp
dec
add
iret
pusha
adc
out
outsb
cld
outsb
push
push
lahf
lods
sub
movsb
sub
mov
jb
lahf
addr16
or
add
out
pop
pop
inc
jmp
jb
insb
daa
and
out
daa
dec
mov
sbb
movsb
out
pop
push
das
jmp
das
out
insb
pop
addr16
sub
out
cmp
mov
sbb
dec
insl
lahf
xchg
in
dec
inc
por
out
outsl
std
dec
arpl
jmp
dec
dec
cltd
push
addr16
push
into
imul
fdivl
rdpmc
loope
jbe
or
sub
push
push
adc
ljmp
out
sub
in
and
cmpsl
sub
dec
dec
insl
mov
sub
aam
sub
cmpsl
cmp
mov
pop
mov
dec
sub
cmp
pop
test
insb
sub
mov
popf
xchg
sbb
pop
movb
push
dec
insb
sbb
xlat
pop
dec
negl
or
push
pop
xchg
js
or
ror
or
in
cmp
out
andl
cmp
xchg
je
xor
cli
insb
mov
xor
ja
jg
add
xorb
mov
clc
imul
cvttps2pi
addr16
insb
adc
ljmp
pusha
sub
lds
pusha
bound
and
orb
call
xor
cli
in
mov
xor
pop
pop
in
out
xor
jge
ficoms
insb
hlt
xchg
jge
mov
stos
call
sub
test
sbb
add
fcmovnu
add
xchg
adc
in
int
in
movsb
or
adc
pop
out
pop
dec
pop
in
orb
or
dec
mov
add
or
movsb
inc
repz
test
out
pop
outsl
ret
sub
add
out
icebp
mov
int3
adcb
jmp
sub
adc
fdiv
test
mov
ljmp
mov
and
pusha
jg
cld
inc
sub
dec
incl
jp
mov
cld
daa
add
push
inc
cmp
test
insl
push
imul
cmp
and
xchg
push
test
pop
mov
lock
or
or
lds
or
out
mov
cmp
and
out
xor
mov
test
out
in
dec
out
shrb
call
mov
mov
cmp
in
pushl
mov
lods
push
cld
jmp
cld
insb
ljmp
loopne
cmp
outsl
cmp
icebp
movsb
add
xchg
imul
out
mov
xchg
or
pop
xchg
scas
into
xor
push
dec
pop
mov
pop
push
push
pop
or
lcall
push
std
adc
add
out
inc
shrb
mov
mov
out
dec
outsb
mov
pop
pop
insb
rcrl
dec
out
cltd
xchg
out
mov
xchg
movl
mov
mov
push
fsubl
mov
lahf
xchg
jge
fists
in
loope
leave
in
loopne
inc
sub
outsb
negl
add
sub
std
jmp
xchg
xor
xor
ss
push
xchg
out
push
test
cmp
push
cmp
inc
pop
mov
aam
cli
es
lahf
fs
or
jp
or
lahf
adc
or
pop
sub
daa
fidivs
std
adc
sub
ficomps
or
dec
push
stos
ja
sub
inc
iretw
repz
in
sub
stos
cld
pop
fadds
mov
in
ss
cmp
cmp
in
pop
sub
fstpt
dec
jp
adc
mov
les
sbb
jg
ds
jecxz
aaa
inc
mov
cmp
sahf
xor
mov
aam
shll
sub
mov
mul
lahf
push
push
lods
xchg
test
jle
push
cmp
aad
pusha
dec
pusha
jb
xchg
mov
rcrb
std
cmp
mov
xor
push
lods
loop
movsl
pop
notl
mov
popa
popl
addb
mov
bound
dec
xlat
or
cmp
addr16
jns
js
shl
inc
out
nop
inc
jp
adc
sbb
pop
cltd
iret
adc
insb
cwtl
jns
insb
jnp
dec
out
mov
push
sbb
cli
outsl
or
add
adc
fstpl
sbb
jae
mov
cmp
cli
gs
mov
jns
into
jne
pop
pusha
popl
dec
and
outsl
js
cmp
ss
sub
push
call
fsubrl
lea
and
fucomi
and
jns
pushf
cmp
jmp
je
js
les
jo
xor
icebp
into
xchg
push
xor
aas
dec
enter
arpl
push
bound
jge
adc
lahf
int
aam
pop
pop
jne
insb
jge
adc
outsl
cli
stos
int3
sub
jp
mov
outsl
xchg
pop
sub
dec
aam
shll
xor
lret
aaa
mov
scas
pop
push
or
jecxz
sub
leave
pusha
xchg
cmp
and
jo
jmp
sub
das
push
cmp
outsl
clc
jo
loop
arpl
fists
mov
sub
insl
aas
andl
or
pop
gs
and
push
inc
imul
cld
jo
movsb
pusha
loopne
and
jo
inc
dec
outsb
je
js
ret
jl
inc
adc
js
or
imul
bound
outsl
xchg
xchg
sub
xchg
push
sub
jo
jns
repnz
test
jo
jae
mov
push
gs
popa
sub
fisubs
adc
dec
add
test
pop
bound
hlt
test
fsubrs
js
enter
loope
cmc
test
enter
loope
stc
movsl
xor
enter
loope
std
lds
enter
loope
cs
iret
pop
jo
xor
push
popa
call
inc
push
pop
bound
hlt
test
enter
roll
test
clc
gs
movsl
sub
enter
addl
mov
enter
add
icebp
movsl
sub
enter
addb
test
enter
add
stc
movsl
xor
enter
cmpsb
jae
insl
mov
jo
out
sbb
hlt
test
enter
loope
hlt
test
enter
loope
hlt
test
enter
loope
hlt
test
jbe
fdivs
rep
xor
enter
loope
hlt
lds
enter
loope
hlt
in
xchg
mov
fdivs
mov
add
das
mov
jo
mov
jo
out
push
xor
push
mov
mov
loope
imul
icebp
test
dec
loope
hlt
test
fdivs
mov
add
test
fdivs
hlt
test
fdivs
repz
adc
inc
cld
addr16
push
or
jg
and
push
lods
fs
outsl
and
xor
outsl
pop
adc
mov
fs
push
insb
xor
iret
mov
jnp
xchg
test
in
cvtps2pi
call
jo
add
xchg
outsl
pop
lea
sub
imul
jb
clc
insl
ja
cmp
cmc
sub
orl
adc
bound
iret
ja
sub
mov
icebp
xor
ror
cmp
enter
or
mov
pop
jo
insl
mov
adc
popa
cltd
subl
adc
push
addr16
test
inc
outsl
ljmp
imul
inc
xor
jge
xor
outsl
jge
inc
jg
outsl
jo
cmpb
mov
js
je
adcl
aaa
jo
lcall
arpl
insb
cmp
push
popa
sub
mov
pop
popa
pop
not
stos
arpl
addr16
insl
pop
addr16
mov
xchg
cmc
arpl
inc
movsb
cli
js
xabort
loope
cli
jle
lret
pop
pushf
xchg
inc
jp
mov
aaa
lods
arpl
js
je
lds
rorb
push
pusha
dec
lret
xor
mov
imul
leave
js
inc
jbe
sarl
je
pop
or
nop
cld
sti
outsl
push
lret
outsl
fucomi
push
popf
lods
sbb
gs
mov
test
outsl
das
lock
inc
insl
scas
stc
pusha
jecxz
bound
jo
out
movb
mov
movsl
loopne
js
addl
xchg
lret
cmpsb
test
imul
lcall
cmpsl
push
jne
xchg
xchg
xchg
pop
xchg
pusha
outsl
adc
xor
jne
repz
or
adc
mov
nop
lods
imul
fisubrs
push
aas
call
cmp
jmp
scas
push
pop
sti
cmp
jne
jne
pop
xor
adcl
sub
test
jecxz
test
jle
outsl
into
out
dec
jecxz
out
nop
imul
addr16
enter
arpl
ret
rolb
push
push
imul
push
push
add
pop
in
inc
das
dec
sub
test
ror
loope
mov
or
dec
out
pop
lret
dec
push
fs
scas
into
xchg
jns
lds
push
int3
or
dec
loop
fs
test
mov
lret
adc
pop
orl
ret
lcall
lods
and
inc
lret
imul
xor
pop
jmp
dec
mov
dec
and
cmp
cmpsl
in
dec
push
jmp
and
jo
insb
jecxz
sub
je
insl
mov
call
sub
ret
mov
test
mov
scas
inc
mov
ljmp
addr16
jge
bound
push
or
addr16
fsubl
pop
inc
mov
jecxz
mov
jne
enter
cli
pop
loop
mov
mov
ja
sub
jmp
jmp
xchg
in
dec
in
repnz
movsl
and
out
xor
xchg
pushw
lods
out
and
aad
mov
ret
pushl
enter
lods
mov
jne
cmp
out
pop
test
pop
stos
int
iret
out
imul
mov
add
cli
loopnew
fldenv
in
out
in
xchg
loop
adc
cmpsl
push
cs
and
addl
outsl
mov
xor
xor
imul
aas
inc
lods
test
test
adcl
stc
in
and
cli
mov
mov
repz
std
cmp
fdivl
cli
dec
sub
movsb
mov
inc
jmp
fsubrl
pushf
push
movsl
xor
scas
jo
push
pop
dec
out
sahf
fmuls
insl
or
jecxz
dec
lock
outsl
mov
xor
std
wrmsr
arpl
adc
orl
cmpsb
dec
xor
in
or
sub
mov
cmp
xchg
es
cs
push
bound
inc
loopne
mov
ds
fsubs
and
incl
mov
pop
daa
ret
aaa
in
out
stc
push
outsl
in
aaa
xorl
jae
loopne
mov
cld
xchg
and
int3
and
stos
cld
cmp
out
sub
sbb
cld
and
and
aas
enter
js
mov
out
xor
pop
fs
rol
lods
or
lret
push
call
test
push
add
enter
sub
cmp
jecxz
cmp
jnp
or
or
aas
dec
jne
cmpsl
and
ret
jo
cld
bound
test
sub
call
fwait
cmp
bts
mull
rcrb
into
outsl
or
lods
xorw
adc
inc
loop
sub
push
sub
stos
out
jecxz
enter
pop
xor
pop
mov
addr16
dec
arpl
std
call
sti
sub
push
out
mov
popa
xor
jmp
daa
pop
cmp
int3
lock
dec
outsb
cmp
imul
dec
hlt
jecxz
pop
in
movsb
jecxz
sbb
shrb
lods
loop
ds
outsl
xchg
sti
cmp
or
dec
int
sub
jo
out
cs
jle
dec
lods
adc
cmpsl
dec
xor
ss
or
ds
jecxz
sub
push
dec
push
scas
daa
bound
push
sti
int3
pop
loop
sub
pop
cmpsl
mov
les
ret
pop
ds
ret
xorb
imul
aaa
xor
fsubrl
sub
in
cs
addr16
and
and
repz
inc
lock
pop
add
push
jae
insl
mov
jecxz
lret
cld
pop
jbe
inc
lods
and
hlt
cs
dec
or
test
cmpsl
stos
loopne
mov
fisttpl
xor
jnp
mov
sub
dec
das
movsl
lahf
repz
and
dec
clc
jecxz
sub
mov
fs
dec
xor
fidivs
fdivl
mov
rorb
outsl
divb
xor
in
into
aaa
aas
imul
cmp
xor
mov
movsb
hlt
lcall
jmp
std
cmp
mov
pop
insl
lods
repz
dec
sti
push
xor
test
aaa
pop
mov
ljmp
and
mov
inc
push
daa
int3
in
ljmp
pop
insb
orl
icebp
daa
jb
in
cmp
sub
js
or
mov
ja
add
loop
js
clc
and
jge
ror
cs
dec
jnp
icebp
or
aaa
dec
cmp
jne,pt
call
in
inc
test
out
mov
clc
jmp
int
mov
fs
jns
insb
xor
cmp
push
aaa
pop
test
ss
push
mov
cmpsb
mov
mov
jb
push
mov
jge
pop
push
movsb
ret
int
add
arpl
sub
mov
daa
sti
jb
lock
jmp
pand
add
add
outsl
adc
push
jnp
dec
int3
icebp
lret
ljmp
loope
xor
lods
movsl
pop
fsubrs
xor
arpl
sub
or
cmp
out
out
cli
and
jge
pop
jge
out
lds
push
in
jmp
les
cmc
outsl
add
fs
cld
dec
cmpsl
sub
jmp
dec
and
cmp
jae
jbe
push
jnp
out
mov
inc
pop
cmp
lahf
ljmp
in
pop
mov
loop
imul
into
sub
test
cmp
das
jne
bnd
jmp
jmp
fs
lret
push
mov
dec
pop
popa
mov
jg
pop
bound
and
cmp
pop
sub
cmpsb
lods
out
fs
pop
jnp
aam
adc
loop
mov
xchg
movsl
hlt
mov
dec
in
sub
and
btc
jl
push
lods
outsl
inc
jo
dec
pusha
xor
xor
xor
lods
and
mov
jl
sbb
jg
sub
lods
and
out
int
mov
pop
and
shr
cmc
sub
or
movsl
sub
and
clc
cli
push
out
pop
in
cmp
stos
mov
sub
test
ljmp
push
dec
pop
imul
into
ljmp
sub
push
stos
inc
lret
mov
sub
cmpsl
sub
xchg
pop
js
mov
aaa
mov
cmp
jmp
lock
cmc
cld
xor
arpl
cmp
sbb
sbb
and
jle
inc
sbb
add
in
int3
cmp
xor
add
bound
cmp
int3
lahf
sub
lock
pop
das
test
std
jnp
dec
inc
aaa
jmp
jmp
and
loopne
cmp
pop
mov
mov
pop
jge
aaa
pop
outsl
test
sahf
or
js
xchg
mov
loop
jns
leave
out
sub
aas
bound
mov
das
lret
aam
out
xchg
and
add
xor
and
xor
mov
cmpsl
push
es
and
or
sahf
loopne
lahf
out
dec
clc
jl
jne
push
stos
push
add
in
pop
pushf
push
dec
jo
clc
ret
mov
ret
dec
testl
xor
imul
dec
push
or
test
sbb
push
icebp
les
stos
push
cmp
jae
pop
insl
sub
stos
cmp
daa
lret
into
cmp
mov
mov
cli
mov
int
mov
ss
inc
in
jmp
pushf
sbb
mull
sub
sti
fs
fsubr
es
lods
ret
adc
sub
insl
cli
inc
ja
mov
mov
movsb
ret
test
ss
int3
fs
push
jne
rol
test
call
push
out
mov
and
das
mov
and
ja
das
sbb
cwtl
and
lods
call
mov
stos
std
push
in
dec
bt
out
out
adc
inc
adc
jecxz
fdivr
xchg
mov
cld
hlt
sub
mov
adc
dec
dec
std
xor
rcrb
xor
stos
sub
arpl
outsb
movsb
imul
out
jecxz
lock
dec
cmp
mov
and
jg
subl
jle
sub
insb
das
outsl
pop
fildl
inc
imul
loope
out
and
outsb
movsl
shll
add
daa
lcall
les
mov
outsl
mov
outsl
jmp
movsb
dec
mov
cmpsl
scas
inc
jbe
sub
test
push
leave
insb
jb
cld
rep
pop
jecxz
repz
ja
mov
inc
out
js
call
jo
stos
mov
sub
jae
mov
xchg
rcll
das
lret
sub
jmp
cmpsb
jno
scas
and
fdivs
xchg
pop
ljmp
push
adc
stc
gs
in
out
push
int
mov
sub
in
daa
js
shl
xchg
xor
inc
mov
cmp
pop
out
dec
jne
fsubr
xor
mov
add
hlt
lea
movsl
jmp
add
lods
dec
fwait
imul
ljmp
dec
push
stos
aas
lret
push
cs
loop
inc
movsb
push
ss
in
dec
mov
movsl
arpl
pop
xchg
mov
ljmp
clc
outsl
add
xor
imul
out
repz
mov
insl
jmp
in
outsb
mov
sbb
out
gs
sub
fsubrs
aas
xchg
leave
stos
ljmp
in
mov
sub
sub
data16
jl
push
xor
cmp
mov
imul
ret
out
sub
mov
scas
fiadds
inc
inc
sub
mov
xchg
outsl
and
enter
stos
jl
movsb
inc
lret
insl
adc
shrb
dec
dec
and
inc
cs
insb
lock
add
enter
mov
inc
out
dec
jmp
mov
sub
lods
dec
jne
cld
int3
inc
mov
pop
mov
sbb
fdivrl
mov
movsl
pop
jnp
outsb
pop
pop
out
ss
aam
in
cltd
inc
popa
lret
bound
add
je
xor
into
test
inc
test
scas
call
jmp
and
aam
inc
insl
insb
out
les
sub
cmp
imul
jnp
out
pop
mov
imul
scas
or
sti
outsl
pop
je
das
stos
adc
in
stos
movsb
and
sub
ja
jl
sub
stos
out
jmp
mov
mov
fidivl
aas
std
addl
pop
data16
xor
mov
pop
in
imul
sbb
cs
jo
arpl
ja
int3
call
scas
daa
sbb
inc
add
aaa
pop
lods
test
cmp
add
sub
inc
rorb
xchg
push
lret
loopne
jns
push
mov
andl
add
push
arpl
or
inc
jp
cwtl
sbb
jl
cwtl
mov
xchg
sbb
out
push
gs
cwtl
mov
push
mull
cmp
sub
mov
mov
test
jecxz
in
sub
adc
outsl
scas
movsl
or
inc
mov
mov
or
scas
aam
push
pusha
inc
mov
or
rcrl
dec
inc
xchg
insb
loopne
pop
repnz
mov
jecxz
or
dec
ret
leave
leave
push
cmpsb
sbb
mov
dec
push
call
pop
add
call
in
ds
ret
loop
cmpsb
adc
sbbl
imul
ret
dec
arpl
out
out
mov
imul
shlb
and
in
out
daa
ret
adc
jmp
sti
lods
les
push
sbb
lea
or
jecxz
inc
das
xchg
push
in
mov
adc
bound
dec
sbb
and
subl
jecxz
dec
addr16
ljmp
sbb
xor
xlat
dec
mov
out
call
adc
leave
daa
push
les
and
iret
fadd
ret
nop
fs
push
shl
les
in
dec
call
enter
fnstcw
mov
ljmp
cmp
mov
aas
cmp
mov
aas
mov
fmull
xchg
arpl
dec
push
out
lahf
push
pop
sub
lds
insl
loop
out
data16
sahf
pop
pushf
sbb
insb
sub
sub
popf
pop
push
push
out
mov
out
jnp
or
imul
jnp
dec
neg
jg
pop
into
xchg
inc
jnp
shlb
mov
fs
das
outsl
add
xor
pop
out
and
aaa
inc
cs
into
daa
or
and
xchg
ja,pn
cltd
ljmp
inc
sbbb
int3
mov
fwait
out
aad
popa
xchg
aad
mov
test
cld
mov
inc
ja
out
xlat
iret
mov
xlat
pop
dec
dec
bound
aas
xrelease
pop
jb
scas
and
outsl
cmp
xor
inc
xchg
ret
lret
out
push
sub
dec
popl
addl
aaa
and
inc
jo
sub
mov
pop
int
add
xor
mov
inc
add
jecxz
push
sub
ret
pop
jecxz
push
mov
xor
pop
jle
sbb
inc
mov
les
jb
add
pop
adc
addr16
mov
sub
mov
lock
movsb
loop
jg
push
jg
andb
in
nop
or
bound
mov
insl
dec
sub
xchg
sbb
test
fwait
push
adc
outsl
and
shr
pavgw
or
lds
insl
loop
or
mov
push
cmp
push
fs
fiaddl
jne
jno
enter
out
test
or
daa
pop
jmp
sub
out
loopne
les
rclb
jl
jecxz
xor
push
inc
scas
cmpsl
inc
gs
scas
iret
movl
add
rclb
movsb
mov
inc
inc
nop
adc
push
push
dec
add
add
test
fs
int3
arpl
pusha
popa
out
insl
mov
loopne
mov
shlb
lock
cmp
outsb
xchg
cli
outsl
lcall
jo
jle
fs
outsb
lock
sbbb
and
add
push
std
repnz
or
mov
cmp
out
pop
jae
jmp
sub
int
outsb
enter
ret
js
outsl
ret
das
pop
push
xlat
push
popf
movsl
dec
dec
add
lock
push
push
xor
out
pop
jo
pop
xor
mov
xor
lods
insl
push
cli
pop
inc
std
cli
sub
dec
sub
out
pop
std
push
inc
test
push
fdivl
xor
mov
out
or
mov
pop
mov
cmp
dec
push
lock
or
js
test
das
cwtl
outsl
movsl
inc
jo
dec
xorl
xor
xor
mov
add
enter
lahf
in
shl
cmp
cmc
popa
sbb
ret
inc
and
inc
lock
inc
das
rol
fs
mov
pop
popa
pop
lock
dec
outsl
test
div
aas
nop
rcr
xor
into
sub
hlt
cltd
pop
jo
outsb
scas
in
outsl
das
popa
into
lock
scas
jb
add
xor
jb
xor
xrelease
insb
out
out
dec
jge
push
fisttps
jae
dec
adc
insl
adc
lock
outsl
scas
lock
or
enter
fs
arpl
pop
mov
inc
jo
jge
and
aaa
das
jecxz
pusha
sti
xlat
jo
jge
and
aad
sub
adcl
xor
pop
jbe
push
adc
out
pusha
ret
test
and
add
or
sub
ljmp
push
mov
mov
out
push
lock
pusha
or
fs
js
js
repnz
jno
popa
pusha
inc
adc
in
imul
call
push
cmp
scas
imul
xor
xlat
lea
test
test
enter
sub
fdivrs
idivl
aam
mov
inc
sbb
dec
sbb
sbb
test
cwtl
sub
lock
into
pop
addr16
mov
sub
aam
lock
in
xlat
ljmp
ja
repnz
jns
hlt
cmc
jno
xor
xor
icebp
pop
imul
xor
aaa
mov
mov
sbb
push
cmc
nop
cwtl
xchg
mov
xor
lahf
clc
jb
outsl
jbe
dec
cwtl
push
daa
loop
jo
nop
cmp
lock
xor
mov
cwtl
js
mov
xchg
cwtl
stos
xor
aam
repnz
push
jae
clc
aam
jle
xor
outsb
xor
arpl
lock
out
mov
aam
dec
xchg
mov
cmc
ficompl
ljmp
popa
mov
arpl
out
inc
das
ds
jg
dec
xor
test
add
xor
mov
jp
jecxz
out
mov
insb
in
in
das
outsl
cmp
test
lock
xor
in
jecxz
mov
mov
jmp
out
push
sbb
sbb
xorl
js
push
jno
leave
lret
jno
jno
ljmp
stos
push
xor
adc
jne
loope
dec
push
push
js
clc
sbb
cs
push
dec
mov
arpl
jle
scas
in
xor
pop
aad
out
lods
loope
add
fbld
jecxz
insb
loope
test
xor
and
fsubrs
dec
adc
sti
sbb
inc
jno
ret
jno
scas
js
insb
hlt
pop
int3
or
loope
dec
jmp
add
pop
xor
ds
xor
xchg
in
sti
and
mov
addr16
mov
sub
iret
dec
hlt
std
push
pop
lock
loop
mov
les
in
gs
inc
jmp
loop
loopne
jno
jno
sbb
jno
jno
jb
popa
faddl
cmpb
bound
and
arpl
add
dec
cli
jl
test
cmpsl
inc
push
jge
lahf
imul
lock
gs
cmp
push
xor
jle
loopne
mov
jno
pop
outsb
dec
out
shl
jno
sar
inc
out
add
test
out
dec
mov
daa
xor
nop
clc
push
lea
cmp
jle
and
inc
ljmp
andb
xor
pusha
xor
ljmp
jl
xor
pop
test
clc
push
dec
jp
mov
aam
ljmp
jl
cmp
std
loopne
inc
inc
inc
xchg
mov
outsb
and
push
call
or
xchg
mov
dec
jb
mov
jne
jo
cwtl
xor
mov
jb
add
adc
sub
mov
subb
icebp
int
sub
leave
lock
jb
pop
jmp
bound
in
mov
jo
out
cli
push
ljmp
test
push
out
out
stc
daa
call
mov
and
jno
cmp
mov
call
push
xchg
mov
mov
clc
pop
lea
loope
sub
loope
cmpsb
push
sbb
push
jns
pop
std
jne
cld
loop
testb
lock
jo
xchg
loope
js
js
js
pop
cmp
adc
out
add
popa
loopne
das
jecxz
pop
mov
cld
cmp
push
mov
dec
arpl
mov
jle
out
lret
adc
mov
xchg
divb
jbe
cs
mov
jl
stos
xor
outsb
jns
jg
xor
out
dec
testl
repnz
cli
dec
test
clc
push
dec
dec
imul
insl
jg
in
outsb
ficompl
sti
imul
loopne
mov
out
jbe
or
xor
outsb
inc
jecxz
xchg
insb
int3
dec
jo
xchg
das
sub
scas
mov
and
andl
stc
dec
addr16
ljmp
loope
inc
cmc
cld
push
jae
jb
ficoml
mov
inc
out
popa
cld
pushf
jp
in
mov
push
sbb
xchg
shlb
clc
loope
jge
imul
cs
jge
dec
jmp
mov
inc
in
jecxz
jno
and
lods
gs
xor
adc
mov
std
add
xor
out
in
jl
loope
hlt
xor
gs
jne
lock
jno
fs
and
fimuls
push
dec
cmp
cld
aas
cli
dec
xchg
je
stc
ret
data16
testl
iret
hlt
in
and
xor
pop
xor
imul
aad
sbb
xor
cmp
inc
ss
jg
out
or
sub
inc
cld
jb
cmp
out
lock
jo
dec
testl
fsubrl
out
dec
pushf
dec
jo
loopne
mov
inc
std
rclb
insb
xor
jns
out
xchg
in
scas
movsb
in
push
js
jl
mov
test
xor
dec
call
bound
push
arpl
pop
xor
call
push
ljmp
inc
jle
in
aaa
xor
dec
out
pushf
jle,pn
insb
insb
insl
lock
das
jmp
add
popa
jmp
pop
fs
jge
out
std
fnstcw
mov
lock
dec
adc
loope
in
out
mov
stos
jno
adc
sbb
mov
push
daa
jb
adc
pshufw
adc
ja
xchg
xor
cmp
ds
insb
std
call
sahf
lock
inc
in
lock
je
nop
idivl
fbld
repnz
out
in
sbb
sub
outsl
adc
outsl
minps
ds
xor
icebp
ljmp
jo
or
decb
das
push
jno
nop
out
dec
xchg
in
jmp
xor
mov
arpl
outsb
xor
jb
hlt
fwait
dec
div
or
sbb
push
idiv
fisubs
mov
adc
out
xor
in
push
jns
pop
xor
jo
filds
cmpsl
xor
cmc
pop
jae
loope
dec
lret
jo
enter
je
and
and
jo,pt
jns
sbb
jb
and
push
and
out
and
cli
inc
add
mov
cmp
cmp
xor
int3
loope
jae
push
mov
dec
pop
in
jnp
xor
pop
in
outsb
stc
stc
ds
jne,pn
jl
cld
xor
movsb
jecxz
and
in
imul
xor
xor
repnz
clc
xlat
sahf
xor
jo
cmpsl
xor
and
xor
pop
mov
in
js
ja
jbe
neg
or
jle
out
or
loop
sahf
mov
xchg
xor
aas
jg
cmc
insl
pop
xor
pop
out
inc
xor
jno
out
dec
xor
ds
xor
jno
jg
ljmp
sub
lods
xor
lret
jo
loope
dec
in
push
add
insb
cmp
shll
cld
push
fs
insb
or
or
call
xor
xlat
pop
xor
rcrb
mov
xor
dec
icebp
cs
xor
jmp
insl
dec
test
pop
cmpsl
test
or
addr16
jbe
adc
jl
hlt
jp
lock
cld
xor
mov
pop
jne
addr16
jmp
xor
mov
lock
popa
xchg
jg
push
mull
jmp
pop
outsl
cmpsb
outsl
js
bound
xor
mov
pop
out
clc
test
xor
pop
test
negl
popa
mov
je
out
fisttpl
jae
pop
out
inc
jae
enter
cmc
outsb
call
das
stc
pop
loopew
xor
cmc
cmp
in
cmp
insl
mov
fisubrs
insb
es
push
xor
dec
jp
insb
fimull
fs
push
add
insw
jo
nop
rorl
addr16
mov
jmp
out
loope
je
lret
fildll
in
xor
insb
nop
call
or
dec
in
lret
outsb
faddl
insl
lret
fildll
in
testl
dec
inc
jge
insb
xor
dec
jl
jle
test
andb
fbld
repz
popf
lock
xchg
xor
jno
sub
sub
mov
fidivl
out
jmp
imul
clc
push
das
outsl
push
data16
rclb
mov
lock
push
and
js
les
adc
cmp
fdivl
out
inc
pop
in
mov
push
mov
jge
addr16
out
out
in
pop
jge
pcmpgtb
xor
insl
out
jg
out
pusha
xlat
mov
and
push
or
in
dec
push
xor
or
das
inc
imul
jb
adc
adc
push
inc
test
hlt
xchg
insb
sub
imul
insl
out
test
scas
out
dec
add
les
pop
jo
hlt
loopne
jmp
lds
lcall
xor
scas
mov
push
cmc
pusha
ljmp
mov
pop
movsb
out
push
hlt
out
xlat
xchg
xor
cmp
fcomip
in
xor
data16
out
inc
xchg
or
mul
xor
jmp
dec
in
insl
or
mov
scas
loope
cmp
jmp
leave
jmp
pusha
push
lcall
iret
enter
ljmp
jl
ljmp
pusha
mov
mov
cmp
add
xor
outsl
inc
lock
ja
sub
test
popa
push
pop
sbb
pop
arpl
div
in
lret
jo
xor
test
xor
and
pop
cmc
call
jo
jne
and
xor
jae
mov
nop
jo
dec
add
jl
aas
sbb
dec
outsb
negb
in
sbb
xor
cmc
sub
addr16
jnp
insl
fs
xor
movsb
and
dec
insl
pop
gs
pushf
xor
cld
add
xor
jne
clc
lret
jno
lock
negb
xor
add
and
aas
sbb
mov
mov
or
ljmp
dec
lock
ss
fbld
push
jno
push
xor
push
push
jno
jno
cmp
leave
and
xor
add
jle
in
aam
mov
cwtl
dec
push
mov
insl
mov
daa
popa
ljmp
sti
pushf
outsl
out
xchg
pop
imul
inc
xor
cmc
les
push
push
icebp
mov
call
stc
pop
and
mov
imul
fs
mov
push
gs
xor
ljmp
xchg
jmp
xor
ljmp
pop
push
dec
jge
les
jmp
mov
jmp
test
lret
cmp
adc
lock
andl
loop
push
dec
jmp
push
jno
lds
jecxz
das
popa
loopne
mov
jle
aam
test
aaa
dec
ja
popa
cmp
das
fisubl
lock
dec
jmp
imul
out
ljmp
push
cld
and
jecxz
cwtl
pop
jae
jno
ljmp
mov
out
xor
pop
pusha
in
push
repnz
sets
int3
cmp
scas
insl
in
xchg
adc
ja
inc
outsb
cmpsl
scas
js
out
sub
jecxz
fs
setg
push
jle
xlat
xor
in
pop
xor
cmc
decb
scas
loopne
call
ss
xor
je
xor
in
aad
cmc
inc
xchg
ret
repz
mov
loop
in
fisubs
or
and
pop
dec
inc
jbe
mov
loopne
icebp
cmp
inc
xor
jg
pop
xor
push
fs
inc
ja
xor
js
mov
int3
bnd
enter
lods
pop
arpl
add
pop
pop
inc
sti
xor
add
jl
pop
insl
jecxz
and
int3
jle
jle
cli
xor
loopne
jne
fdivrp
pop
loopne
repnz
add
jle
out
sti
xlat
pusha
xor
imul
aas
out
jle
rol
out
daa
jns
jbe
sti
outsl
lret
pop
insl
lock
pusha
mov
js
aas
mov
in
aaa
push
gs
jne
or
jmp
dec
dec
mov
push
jno
jb
ds
paddb
dec
xor
jmp
adc
push
adc
jle
jge
out
pusha
scas
jle
in
cmp
push
pushl
lahf
xor
loopne
jmp
in
mov
cs
cli
scas
lock
andb
xorb
cld
add
inc
repnz
js
jb
movsb
out
lods
and
out
lods
lock
mov
mov
bound
mov
jns
jne
sti
int3
arpl
insl
mov
jmp
or
outsb
int3
popa
pshufw
lock
mov
and
in
insl
fsubrl
jne
loopne
je
in
cmc
pop
jge
mov
add
imul
xor
das
sti
pop
notb
mov
add
imul
cmp
sub
lods
push
xor
lock
rcrl
mov
in
and
push
ret
inc
fs
xor
imul
xchg
test
pop
jmp
out
ljmp
xor
in
pushf
repz
add
fwait
cmc
sbb
lretw
ja
mov
ret
jecxz
in
imul
pop
sti
inc
add
inc
loopne
je
movsb
jbe
arpl
jne
push
ss
jns
aam
aas
sub
dec
inc
cli
push
mov
ret
out
or
lock
outsl
ret
rep
mov
push
pop
daa
jae
arpl
mov
clc
imul
mov
loopne
testb
pop
mov
or
xor
fstps
xor
loop
or
bound
inc
sti
jbe
add
popf
in
gs
insb
cli
loopne
cmc
pop
jbe
add
pop
xor
cld
ljmp
in
cli
sub
inc
bound
jg
jbe
arpl
ja
lret
shlw
jmp
stc
daa
ljmp
sub
testb
icebp
mov
xchg
ljmp
sti
movsb
out
imul
mov
sar
mov
pop
push
inc
xchg
mov
fsubrp
call
jmp
repz
inc
and
loopne
hlt
repz
jge
mov
test
movsl
jp
inc
pop
std
pusha
push
daa
xor
les
mov
test
xor
insl
add
out
outsl
test
in
loop
daa
lret
insb
and
inc
test
test
jo
xor
push
das
repz
jae
shl
or
out
imulb
push
mov
hlt
call
pop
pop
jecxz
dec
xorl
cmc
jecxz
icebp
mov
out
pop
jge
aam
or
add
setle
frstpm(287
mov
jl
sbb
movsl
jb
loop
jnp
std
adc
or
ljmp
push
mov
lock
ljmp
or
std
insl
movsl
inc
popa
aaa
in
mov
ss
mov
out
test
gs
lock
std
lret
enter
inc
aam
ficompl
aam
addr16
int3
call
cmc
test
aas
jle
xor
pop
jns
divl
pusha
call
shlb
lcall
les
pop
xor
dec
mov
pop
fs
bound
cmp
testb
in
lock
inc
lock
in
repnz
out
ljmp
jne,pn
lock
xor
outsl
or
jbe,pn
repz
cmpsl
lock
arpl
xchg
mov
hlt
out
cmp
cmc
je
jno
ja
test
cmp
xor
mov
cmpsl
mov
repnz
jbe
pop
aam
je
push
xor
daa
out
dec
es
inc
dec
bound
mov
and
sub
jns
addr16
call
mov
outsb
sbb
cs
xor
ljmp
xor
popa
push
pop
std
inc
daa
mov
and
mov
inc
xor
dec
cmpsl
dec
jmp
push
icebp
inc
lret
sub
cmp
aad
push
push
icebp
in
imul
xor
inc
cmp
push
addr16
jp
imul
pcmpeqb
arpl
out
mov
int3
outsb
and
bound
jo
sbb
lock
outsl
cmpsl
in
icebp
insl
jns
sti
fistpl
cli
dec
leave
lock
js
jg
lahf
pop
jno
in
daa
and
inc
ljmp
or
lock
out
sub
out
fidivrs
popa
pop
in
leave
or
testb
cld
je
imul
enter
jnp
in
dec
jno
jo
push
std
push
cmp
popa
lret
xor
arpl
and
call
xor
stc
in
jecxz
add
pop
in
and
loope
pop
daa
lock
std
in
cmp
ljmp
cld
xlat
inc
lods
xor
jmp
in
shl
daa
bnd
insl
xchg
xor
mov
and
in
cs
das
pusha
mov
mov
movsl
loope
out
xchg
loopne
gs
jecxz
das
loopne
jmp
imul
fs
clc
or
ljmp
in
inc
push
adc
call
aas
jle
push
push
arpl
les
inc
ss
dec
arpl
jns
jns
insb
cltd
sbb
xlat
push
outsl
iret
negb
or
xor
lcall
in
in
in
and
or
jecxz
stos
out
xor
ljmp
jmp
repnz
stos
jbe
xor
mov
jae
mov
inc
out
lret
clc
push
pop
std
fbstp
out
dec
pop
xor
insb
stos
stos
xor
jecxz
loope
jo
gs
lock
int3
lods
xchg
out
cmc
lret
cli
cmp
jg
ja
in
out
in
outsl
jne
xlat
fdivs
into
lock
jno
ja
std
ja
jo
popa
mov
pushf
and
insl
fs
in
push
in
jge
dec
stos
imul
insl
int3
inc
dec
xor
ljmp
cmpsl
jp
dec
or
js
cli
stc
in
xor
icebp
jne
or
iret
jge
je
sub
mov
out
repnz
std
xchg
jns
fwait
sbb
add
pop
xor
cld
loop
jo
out
std
fdivl
dec
outsl
sbb
mov
fdivs
and
and
lods
loope
xor
jne,pt
dec
stc
jmp
xor
push
ljmp
xor
in
mov
out
call
xor
pop
cli
call
xor
mov
xor
insl
insb
jg
xchg
data16
cwtl
and
pop
pusha
add
xor
push
dec
repnz
dec
in
dec
cld
xor
movsb
mov
pop
hlt
pushf
push
clc
dec
and
repz
fisttpll
push
jmp
xchg
inc
jbe
cmp
jmp
and
in
jbe
lock
jg
push
popa
pop
out
ds
xor
out
jg
in
pop
jle
or
cmp
inc
out
in
jge
jg
dec
sub
sub
loopne
out
loopne
xor
xor
in
negb
mov
movsb
ljmp
push
clc
or
mov
lock
ds
or
addr16
lock
out
push
test
sub
icebp
fs
and
cmc
rorl
jmp
stc
sarb
sti
movsb
gs
or
out
fucomip
dec
jg
inc
jnp
mov
clc
sub
dec
or
mov
jns
repz
jle
xor
icebp
lret
loope
xlat
xor
int
sti
sub
dec
testb
xor
repnz
cld
jo
push
insl
mov
mov
outsl
lock
jl
jo
lock
lret
icebp
stos
in
hlt
ljmp
in
lock
jae
jecxz
lds
inc
gs
jbe
js
pusha
sbb
scas
jno
sub
cld
inc
insb
lock
jae
adc
xor
and
cmp
xor
hlt
push
fdivl
call
popa
sti
sti
pop
jo
int
ljmp
int3
jo
push
add
int
pop
lock
pop
repz
insb
es
loopne
mov
xchg
sbb
cltd
sbb
pop
loop
out
cli
inc
addr16
clc
pop
movsl
cwtl
push
jle
and
arpl
sti
xor
testl
or
insb
arpl
fdiv
je
push
imulb
pop
call
jae
pop
out
outsl
js
lock
xor
in
daa
jmp
stc
dec
mov
cs
jmp
test
lcall
dec
xchg
xchg
aas
or
and
sti
sti
inc
imul
imul
fmull
xchg
scas
jmp
ret
jnp
in
imul
push
xor
jmp
xor
aas
jae
testb
inc
jnp
jp
jbe
lock
jecxz
in
mov
sti
movsl
notb
cs
loope
jge
jnp
ljmp
mov
hlt
das
iret
stos
xor
outsb
data16
lods
lock
pusha
stos
gs
mov
cmp
lock
scas
fldl
in
mov
sub
dec
fs
sub
out
jmp
fsubrl
stos
lret
inc
in
jo
and
mov
add
dec
test
repnz
int3
es
push
jg
cli
addr16
cmc
cwtl
dec
or
ds
pop
loope
sbb
push
cmp
pushl
add
jmp
push
call
mov
push
jo
jecxz
out
mov
out
push
andl
imul
addr16
lock
or
push
mov
adc
loope
dec
dec
stos
sbb
aaa
mov
popf
pop
adc
dec
jge
in
hlt
outsl
scas
xlat
push
leave
xor
jge
xor
push
popa
mov
xor
jo
push
js
xor
out
cmp
ljmp
bound
out
imull
ss
jo
lock
in
xchg
mov
insb
dec
mov
pop
or
lock
push
repz
jmp
xor
add
dec
icebp
mov
mov
xchg
xor
push
jmp
cmpb
or
std
out
hlt
push
in
das
lock
pop
out
outsl
pushf
xor
jb
push
ljmp
std
insl
lods
daa
int3
jp
decl
push
scas
pop
xor
mov
push
mov
in
mov
cmp
jmp
lock
jo
repz
fsubr
insl
sbb
dec
js
ja
jnp
out
sub
jl
jns
push
imul
jl
lock
scas
lock
bnd
aad
jno
mov
dec
push
xor
cld
ss
push
mov
jg
daa
incl
cld
cld
push
fdivp
loope
jne
out
cld
cld
addl
int3
dec
dec
inc
outsl
mov
loope
jle
lods
lock
insb
loop
mov
out
cld
scas
ljmp
ljmp
xor
insl
jecxz
pop
aas
insl
push
ret
movl
je
lods
dec
loopne
scas
aaa
lock
lcall
push
jge
scas
imul
jae
dec
push
adc
xchg
out
popa
xor
mulb
or
sub
in
sub
out
outsb
mov
ja
xchg
sub
orb
ljmp
outsl
cld
ss
repz
pop
cli
loope
ja
in
and
inc
dec
out
loop
xchg
xor
aaa
pop
loope
arpl
lret
jb
repz
sarl
pusha
and
mov
test
push
out
push
add
repz
jo
jge
and
out
addr16
in
mov
fdivrl
repnz
adc
pusha
sub
jae
or
pop
in
sbb
lds
aad
int
mov
clc
movb
jg
call
pop
data16
xor
out
or
add
stc
push
push
das
and
movsl
lcall
lock
cld
mov
in
jno
xchg
imul
jae
repnz
lock
clc
int3
push
pushf
in
mov
lock
fs
out
pop
cli
lock
pop
mov
out
or
jmp
push
out
scas
pushw
lods
xor
repnz
push
fisubrs
in
cmp
insb
in
sub
shl
mov
mov
push
out
in
add
cmpsb
insb
hlt
idivl
jno
bound
jp
dec
add
fs
mov
jge
addr16
loope
or
sbb
mov
xchg
sub
mov
hlt
push
in
je
test
cmp
xchg
into
jle
push
fucom
sub
jnp
int3
aam
out
stos
jle
xchg
inc
rcr
fsubr
ljmp
out
push
add
dec
mov
icebp
dec
and
test
movsl
lahf
xor
stos
hlt
pop
das
push
stc
roll
imulb
xor
or
jecxz
cmp
in
sti
ds
pop
cld
hlt
imul
je
inc
je
push
push
ds
mov
out
stos
xor
hlt
scas
call
fs
repz
jge
push
test
popa
enter
out
test
xor
jno
fbstp
jle
into
aaa
mov
std
stos
outsl
jg
pop
or
dec
xchg
jg
push
lods
call
out
push
and
loopne
xchg
ljmp
jbe,pt
pusha
push
insb
mov
mov
xchg
jle
imul
xchg
lret
stc
hlt
xor
cmpsl
xchg
mov
idiv
div
xor
cwtl
jmp
jne
outsl
stc
pop
out
test
imul
loopne
pushf
sbb
lock
std
das
sarb
int3
xor
xor
lock
xchg
or
lock
and
cltd
dec
mov
insl
ret
xor
repnz
or
inc
aad
iret
xor
push
and
cmc
xor
jo
fidivs
fidivs
dec
lods
nop
arpl
roll
or
sub
cmp
cmp
adc
dec
cmova
shrb
outsl
jo
jo
nop
xor
out
or
daa
cmp
and
into
dec
out
mov
sub
cmp
xor
adc
sub
push
or
add
fwait
push
inc
iret
shlb
jecxz
shll
dec
mov
sub
jb
sub
cld
mov
addr16
mov
or
adc
or
xchg
cmp
int3
dec
loope
daa
dec
mov
pop
cmpsl
out
shll
iret
lock
cmpsb
inc
xor
jecxz
pushf
scas
lock
sbb
rcll
js
jcxz
inc
cmp
orl
test
add
and
add
jecxz
imul
das
adc
push
cmp
mov
dec
sarb
outsl
repnz
and
push
std
iret
adc
pop
leave
or
xor
dec
sub
enter
xchg
fs
lock
xor
in
test
jo
mov
fmuls
scas
int3
nop
out
push
sub
fiadds
loopne
jae
jmp
dec
outsb
or
lock
dec
in
in
les
nop
dec
fdivp
lods
repnz
adc
inc
add
out
dec
jo
sub
fsubrl
jmp
and
ljmp
xor
in
mov
push
popf
sbb
cmp
cmp
sub
ljmp
add
sbb
dec
adc
test
daa
xor
fwait
jbe
adc
mov
inc
ret
ds
inc
push
sub
push
adc
sti
sub
dec
lret
xor
jo
data16
sar
inc
loop
adc
sahf
push
cmpsb
push
das
dec
mov
sub
dec
repnz
sub
out
inc
lea
mov
aas
xor
or
or
arpl
or
insb
and
lret
jecxz
nop
loopne
ret
push
stc
ret
or
sub
aas
scas
daa
outsl
cmp
cmpsb
test
popf
popf
pop
loop
jo
mov
jae
jo
das
mov
push
lods
adc
arpl
jo
mov
scas
iret
add
outsl
pop
xlat
insl
push
aam
add
insl
rcrb
mov
add
das
cmp
daa
xchg
inc
lock
int
jl
test
and
mov
sub
jbe
daa
arpl
out
inc
or
popa
das
test
push
mov
out
out
mulb
fiaddl
mov
leave
aam
xlat
stos
lods
jbe
push
leave
flds
insl
test
imul
mov
and
jmp
dec
in
fnstenv
out
cs
lods
call
in
lods
mov
mov
repz
clc
pop
cs
leave
outsb
inc
outsb
out
dec
in
adc
insb
sub
ja
pop
jl
lock
leave
add
daa
cld
addl
fisubrl
out
sub
cmp
pop
sbb
push
fwait
leave
movsb
pop
sub
xor
dec
out
sub
and
iret
out
in
sub
das
ret
mov
pusha
lods
enter
dec
and
scas
in
jecxz
das
pop
out
in
push
ret
hlt
scas
ss
scas
out
pop
push
bound
imul
add
or
stos
hlt
out
jmp
scas
jl
outsb
loope
test
les
jg
cmp
jl
xchg
es
inc
fs
outsb
push
mov
or
inc
rorl
jg
cmpsb
jmp
mov
js
push
dec
sbb
push
js
inc
scas
xor
jecxz
aam
pop
and
ss
je
cld
xor
into
pop
int3
in
and
insb
ret
imul
adc
cs
das
mov
shr
fadds
mov
in
daa
mov
fs
pop
or
inc
ret
rcr
sbb
and
dec
inc
insb
movsb
inc
cmpsb
and
cmp
xchg
call
inc
cmp
lret
pop
jle
das
out
call
add
pop
ror
push
movsb
cmp
dec
xchg
push
enter
js
mov
enter
dec
xchg
call
dec
call
push
mov
aas
notl
and
cmp
cmp
daa
xchg
addr16
fsubp
aad
enter
popf
inc
mov
out
adcb
xchg
xchg
in
and
dec
mov
hlt
jg
push
inc
cld
jmp
push
lahf
imul
js
adc
mov
sub
pop
add
andl
and
outsl
and
dec
arpl
loop
sub
inc
mov
sub
lea
js
loop
cs
hlt
sub
push
iret
dec
mov
cmp
push
sbb
lea
push
loopne
pop
cmc
inc
jmp
neg
aam
mov
dec
sub
xor
les
push
mov
ja
add
dec
scas
pop
pop
les
stos
ret
cld
ljmp
pop
pop
aaa
les
adc
jge
in
xlat
cltd
js
pop
daa
or
pusha
movntq
xchg
aaa
into
and
mov
dec
cmpsl
scas
push
sbb
cmpsl
ret
mov
addr16
push
xchg
inc
cmc
fisubs
push
scas
lods
xor
cmp
push
sahf
and
mov
push
push
xchg
dec
iret
insb
fdivp
orl
les
cmp
outsl
dec
aad
mov
daa
lods
push
stos
push
scas
sbb
inc
call
lcall
dec
test
cs
leave
test
out
xchg
aaa
out
xor
in
out
loopne
mov
out
jns
push
mov
mov
out
xchg
in
pop
jmp
scas
mov
fimull
sub
test
pushw
es
cmpsl
mov
lock
xor
xor
jae
mov
aaa
push
arpl
adc
pop
mov
xchg
repnz
in
adc
lret
imul
add
arpl
aas
fiaddl
sbb
test
jo
jle
jp
and
imul
inc
ret
xchg
xchg
adc
icebp
sub
jno
test
xlat
lods
mov
xor
cwtl
sbb
add
adc
inc
mov
cmpsb
leave
jl
pop
push
jno
pop
movsl
scas
adc
loop
push
cmp
in
push
push
cmc
push
clc
jnp
sub
stos
sbb
ss
adc
cwtl
add
inc
lods
cli
test
je
leave
in
daa
sbb
mov
adc
lods
mov
icebp
mov
mov
movsb
add
shll
mov
inc
cltd
jno
sbbl
fdivr
test
pop
pushf
xlat
adc
lcall
and
jno
mull
outsl
adc
xor
or
pop
jne
sub
push
hlt
mov
cmp
das
jnp
test
mov
mov
shrb
bound
jle
loopne
insb
rorb
nop
inc
call
std
cmp
jno
fucomip
lcall
addb
jno
or
adc
jno
xchg
fcmovnb
push
shr
jmp
stc
movsl
jle
jo
js
dec
jno
nop
stos
fisubrs
sbb
mov
daa
jns
into
jno
aas
push
push
js
subb
nop
bound
cmp
pop
aad
js
flds
jno
fistps
lock
scas
add
cwtl
scas
ss
inc
jb
mov
iret
cmp
dec
push
out
sub
jne
ljmp
adc
int3
pop
divb
movsb
lea
jno
push
shlb
fs
mov
or
mov
jno
sbb
xchg
loope
int3
pusha
jno
push
sub
adc
andb
pusha
mov
xlat
ss
push
lock
and
sbb
outsb
jp
push
mov
icebp
popa
ficompl
test
push
inc
jno
clc
mov
jg
repz
rorb
and
flds
jbe
negl
ja
jns
push
xchg
push
jno
or
imul
fisubs
or
into
jno
mov
test
jno
jbe
push
jg
out
jno
mov
in
fcomi
jno,pn
rol
add
adc
sbb
add
pop
ret
jnp
nop
sbb
cmp
lret
in
jno
test
sbb
cwtl
jecxz
repnz
jne
jno
loop
in
or
lds
aad
arpl
iret
rcr
mov
popf
pop
jno
mov
jno
hlt
and
stc
sarb
jl
push
jb
mov
xchg
mov
xchg
mov
sub
out
fidivrl
inc
jno
xchg
mov
lret
mov
lea
sub
divb
sbb
pop
bound
scas
push
insb
mov
dec
or
push
mov
int3
lds
popa
dec
xor
daa
imul
scas
push
or
lret
jno
add
and
fwait
in
or
push
lods
in
and
add
je
push
jno
jae
js
and
jno
sbb
repnz
aad
jno
push
push
je
cmp
xchg
jno
pop
xchg
into
jbe
cmc
shlb
idiv
jb
mov
push
jno
lcall
jno
int
xlat
pop
out
popa
sbb
es
outsl
mov
inc
xchg
jns
adc
leave
mov
movsl
cmpl
pop
insb
ds
jno
dec
aaa
arpl
aad
and
and
data16
les
cmc
jno
out
cmp
in
xorb
sbb
xor
and
popa
or
or
inc
les
enter
imul
xchg
icebp
cmpsb
cltd
scas
xchg
or
or
xchg
adc
xchg
lock
stos
cmp
faddp
mov
push
nop
out
xor
jns
fisttpll
xchg
imul
push
roll
and
jbe
lock
and
push
fs
inc
addr16
xchg
js
icebp
mov
test
adc
mov
lret
jno
cmp
sbb
jae
lret
push
arpl
mov
nop
pushf
mulb
sbb
fistpll
add
in
xchg
jno
lahf
sub
repnz
sub
pop
sub
std
insb
in
imul
movsl
sar
jno
or
or
nop
das
push
inc
mov
xchg
cmp
sti
or
mov
sub
lods
xor
xlat
mov
mov
int
nop
sbb
shrb
lret
push
cmc
rol
int
mov
dec
xchg
stos
loope
popa
sub
es
xlat
dec
xchg
dec
jle
mov
xchg
jno
jg
aaa
sub
mov
and
jle
iret
xchg
jns
lret
pop
xchg
jno
mov
add
scas
mov
mov
pop
bsf
cmp
jne
add
xor
sub
movsb
push
dec
sub
cmp
scas
out
jmp
xchg
inc
xchg
jno
fstpt
popa
jno
or
movb
xchg
fwait
lcall
movsl
test
xchg
dec
jno
sti
imul
lock
xchg
fldl
imul
repnz
jns
scas
aas
mov
inc
inc
jg
fwait
inc
lock
mov
out
testl
xor
fwait
mov
jp
popa
mov
mov
jle
jns
and
xchg
arpl
dec
lods
into
jns
push
jecxz
pop
mov
sbb
jp
mov
jno
cltd
and
arpl
popa
jbe
and
lods
mul
sti
stc
jns
arpl
out
pop
xor
xchg
aad
sub
jle
mov
mov
scas
jbe
add
push
loopne
fnsave
push
push
test
xor
mov
sbb
cmp
push
shlb
jns
fstps
pop
mov
lret
adc
push
int
sub
xchg
mov
mov
jno
jne
adc
push
push
push
in
movsl
sbb
hlt
fmuls
and
pop
cli
pushf
jbe
jp
mov
orb
imul
je
int
adc
inc
fldenv
out
in
mull
xchg
cmp
push
cmpsb
jle
out
mov
movl
mov
gs
sub
movsl
sti
sub
mov
imul
rclb
adc
call
xchg
cmp
sti
std
jns
mov
or
mov
jno
mov
push
movsl
jmp
popa
mov
sarl
add
lret
mov
cmp
inc
push
loop
dec
jno
add
lcall
scas
popa
mov
jne
imul
jns
out
jae
cmp
mov
test
pop
int
nop
inc
sub
xor
dec
jp
mov
int
outsb
lea
jmp
pop
add
mov
lock
inc
pop
jg
mov
add
dec
scas
push
push
mov
jno
jne
call
and
ljmp
shrb
jno
out
or
jno
lret
jne
aas
cwtl
xor
shll
inc
in
inc
fdivr
jno
imul
shrb
ret
js
idivb
xchg
pop
mov
cmpsl
clc
out
jns
jno
ljmp
pmulhuw
mov
daa
ljmp
xchg
dec
in
xor
stos
ja
xchg
add
js
mov
push
movsb
and
insl
jne
jp
push
jno
in
retw
imul
aad
insl
xor
lock
outsl
or
lcall
adc
sub
jno
jge
cmp
out
jmp
xor
mov
jno
stc
mov
int
jne
xor
fidivrs
xor
nop
jnp
sti
je
addr16
dec
jmp
jno
jmp
imul
xlat
leave
xchg
divl
in
jnp
mov
or
push
ja
inc
push
gs
test
cwtl
cs
gs
and
adc
jno
divb
jno
rorb
aam
rol
hlt
jno
ret
add
cmp
jae
cmpl
jmp
loope
and
jno
shl
outsb
xchg
aam
or
sbb
jb
stos
xor
jo
mov
and
push
aas
movsl
icebp
jno
bound
mov
mov
sub
cwtl
hlt
inc
push
push
stc
jae
inc
sbb
xor
testb
ds
popa
mov
jno
ret
call
aam
cltd
mov
jno
and
mov
pop
nop
push
jae
outsl
shlb
popf
mov
rcrl
test
xlat
fsts
mov
adc
das
mov
icebp
out
sbb
jnp
inc
mov
jle,pn
fists
mov
lea
fwait
repnz
push
mov
mov
pop
movsl
mov
fs
xchg
jecxz
cs
push
mov
mov
inc
jne
mov
xor
cmc
jbe
adc
pop
ret
push
pop
rclb
jl
stos
popa
mov
mov
into
mov
imul
es
cld
or
sbb
mov
ficompl
ds
gs
stos
mulb
jg
lock
ret
push
sbb
adc
movsl
jno
sbbl
stos
aad
jno
push
les
pop
test
in
scas
pop
subb
rolb
xor
jno
jne
mov
popa
mov
cmc
push
fnsave
lret
ja
xchg
and
or
add
jecxz
divb
ret
stos
ja
mov
mov
hlt
jno
cmpsb
adc
adc
mov
jne
stc
jecxz
mov
push
or
popa
push
mov
sub
or
fwait
push
push
in
ret
mov
jae
imul
rcl
cmp
pushl
iret
imul
ds
bound
mov
int
jae
push
dec
fisubl
pop
arpl
xchg
jno
push
cmp
dec
lcall
and
xchg
int
cmp
fwait
xchg
push
jns
lods
stc
jno
adc
ret
insl
int3
dec
sub
fbstp
jnp
jns
jo
idivb
call
adc
jnp
shrb
mov
inc
popa
out
fisubs
cmpsb
js
stos
jno
adc
shrl
jp
jne
jno
ret
push
test
lods
jno
cld
ljmp
fists
lds
movsl
sub
gs
scas
call
subb
jno
addr16
jmp
loopne
jno
and
pop
inc
adc
in
insl
or
daa
jae
xchg
jno
scas
inc
sbb
push
mov
mov
xor
dec
nop
jno
imul
jno
push
dec
stc
sub
lcall
fldcw
movsb
push
test
outsl
scas
nop
mov
out
push
popa
jno
mov
mov
jne
jno
addr16
sbb
lahf
in
push
fsubp
cmp
jns
mov
lcall
out
mov
jno
cmpsb
dec
push
xchg
push
call
adc
lcall
push
jno
aam
sbb
pop
nop
and
addr16
jns
jns
pop
data16
jno
xchg
cs
pop
cmpsb
in
xor
stc
jno
mov
pop
lcall
rolb
jno
aaa
test
adc
insb
pop
jnp
out
jns
push
inc
xor
imul
mov
jns
pop
pop
lods
adc
loop
je
xchg
or
lock
mov
popa
repnz
pop
adc
imul
adc
sbb
shrb
leave
mov
imul
das
stos
mov
jg
test
cmp
repnz
push
mov
push
push
adc
jbe
push
out
addr16
incb
les
sti
and
scas
cmp
jno
stc
test
mov
sbb
inc
cmp
add
insl
test
sti
jno
addr16
pop
fs
jno
mov
cmp
adc
mov
jmp
mov
jno
fistps
sbb
insb
pusha
mov
xor
and
repz
jno
cmp
and
inc
or
popa
xor
mov
scas
sub
mov
push
sub
scas
mov
add
adc
add
adc
insb
push
inc
sbb
pushf
inc
sahf
pop
jno
imul
push
adc
sub
lods
dec
jge
sbb
push
movsb
mov
arpl
shlb
xor
scas
mov
jns
loopne
mov
orl
sub
inc
lcall
insl
pop
mov
dec
mov
or
inc
xchg
pop
mov
push
push
loope
cmc
jno
push
sub
jno
enter
decl
or
fs
mov
pop
mov
mov
pop
insb
dec
push
push
in
aam
jp
mov
jns
loope
jle
jno
adc
jo
fistpll
shll
jnp
xor
dec
in
and
mov
lahf
daa
fwait
or
jno
loopne
adc
xchg
add
sbbl
jae
dec
sahf
notb
add
or
test
ljmp
fwait
call
nop
enter
mov
mov
adc
ret
jns
fwait
push
in
lea
jg
and
jno
leave
shll
and
loope
lock
push
jg
mov
jno
jmp
bnd
pop
jge
cltd
shll
push
push
jg
dec
dec
scas
andb
insl
and
stos
xchg
push
adc
or
or
and
jnp
nop
cmp
das
fnsave
add
scas
xor
popf
imul
push
jnp
push
and
insl
shlb
add
xchg
mov
jno
into
dec
dec
mov
adc
decl
push
inc
jno
pop
lea
and
mov
jle
movsl
popf
jno
inc
mov
jno
pop
add
cwtl
jno
repz
sbb
jno
les
int
cli
add
xor
pop
in
dec
pop
push
push
rcr
or
popa
sub
repnz
std
insl
jmp
xor
out
shl
xchg
jge
pop
adc
subb
ja
jb
push
call
jo
popf
insb
mov
jae
je
outsb
repz
mov
out
mov
insl
xor
stos
imul
into
push
leave
jns
popa
or
push
lock
mov
jnp
adc
popa
fwait
jecxz
dec
push
stos
nop
movsl
xchg
jne
mov
lock
shl
stos
push
in
movsl
xor
aas
ret
mov
inc
int
repnz
je
adc
lock
shr
std
orb
xchg
shlb
jns
add
int
jno
pop
lods
data16
pusha
fistps
push
stc
lea
call
cwtl
repz
clc
push
sahf
lret
inc
jmp
push
mov
add
nop
popa
adc
add
dec
jge
push
insb
fwait
nop
jns
mov
cmc
shl
push
in
in
fisubrs
adc
mov
imul
jno
adc
mov
sbb
and
xor
jb
mov
pop
pop
es
popa
shl
in
leave
outsb
xchg
xor
mov
scas
out
sub
insb
imul
xor
jno
mov
mov
push
dec
xor
xor
sbb
lea
jmp
jno
pop
sub
jbe
jno
cld
inc
jl
jae
inc
jno
jge
pop
mov
lahf
seto
out
fidivrs
cmp
pop
scas
jl
push
repz
add
jmp
inc
mov
cmp
pop
orb
adc
scas
jb
mov
stos
lahf
repnz
fucomp
arpl
xor
das
sti
movsl
push
jno
adc
lea
out
mov
outsb
popa
shr
clc
push
jno
fsubrl
and
int3
fidivl
clc
sbb
movl
mulb
fisubl
and
popa
movsb
xchg
jno
mov
cld
fstpt
hlt
std
arpl
add
dec
fs
jno
sbb
jno
jns
outsb
adc
jne
jno
push
push
xchg
xchg
jae
push
jle
in
cs
inc
hlt
cld
inc
jno
or
or
mulb
cmp
outsl
shlb
xor
push
cmc
jp
push
fcomps
jns
mov
push
out
repnz
dec
mov
scas
or
push
mov
add
test
mov
pushl
gs
insl
in
sub
adc
jno
test
jno
push
or
push
lods
loope
or
jno
jg
pop
xor
xor
dec
test
dec
popa
clc
sbb
ja
xor
jmp
lret
jmp
xchg
xchg
xor
pop
clc
sbb
push
popf
xor
mov
jno
ja
pop
xor
adc
iret
nop
mov
jb
jns
push
dec
popa
shlb
jne
jne
jp
nop
mov
call
sub
jmp
dec
mov
in
shll
push
das
dec
xchg
rclb
pop
in
repnz
push
insl
popf
loopne
enter
xchg
popa
movsl
xor
xor
pop
test
jnp
orl
in
mov
jb
push
jno
pop
mov
xor
push
pop
clc
popf
sub
pop
pusha
jne
aam
mov
pop
fs
in
push
lock
popf
shll
push
jle
xor
jecxz
inc
aam
jno
xchg
outsl
mov
negl
adc
jle,pn
ds
push
scas
test
mov
xchg
jecxz
mov
daa
adc
out
xor
test
jo
bound
mov
int3
imul
jno
jge
outsl
pop
test
mov
mov
mull
sub
pushl
cld
push
xorl
push
jns
aad
mov
ret
push
push
sbb
ljmp
pop
sbb
lds
xor
xlat
and
push
addr16
mov
lods
xor
xchg
pop
fistps
or
add
movsb
cmpsl
jno
mov
jne
lret
xor
sbb
mov
lods
stos
xorl
lock
jb
mov
jno
push
test
jmp
mov
inc
or
lods
rol
jae
das
push
pusha
adc
adc
mov
jno
popa
inc
aam
jg
push
and
shr
pop
and
data16
mov
js
imul
push
data16
jno
jle
push
out
lret
push
mov
jns
js
shll
push
lea
dec
outsb
push
popa
in
lods
int3
ror
jmp
bound
sub
iret
push
popa
std
imul
repz
inc
push
int
data16
cltd
out
adc
gs
push
adc
xor
clc
sub
imul
pushf
das
sarb
pop
repz
pop
in
imul
mov
data16
rorb
andb
mov
lret
jle
jle
mov
in
push
rcrb
ss
das
scas
pop
sub
shlb
ret
into
mul
xor
in
lret
sub
popf
addr16
ret
add
popa
cs
scas
jns
jmp
mov
ds
loop
sarb
nop
ljmp
iret
sub
adc
addr16
lcall
or
jp
jmp
mov
jecxz
cltd
outsb
nop
je
mov
movsb
adc
hlt
popa
sbb
mov
frstor
xchg
push
int
add
icebp
pop
or
daa
push
xchg
xchg
jno
mov
fmuls
movsb
ret
mov
dec
in
push
gs
mov
scas
outsl
std
out
lea
cs
inc
push
stc
repnz
outsb
jno
fimull
or
adc
dec
jb
jno
push
movsl
jo
push
push
jno
sti
iret
dec
in
dec
pop
cmp
test
outsb
dec
cmp
loope
mov
or
scas
mov
mov
xchg
sahf
lahf
mov
dec
sub
cmp
scas
nop
cmpsl
adc
out
xor
push
jge
dec
and
push
adc
push
insb
dec
adc
inc
jp
dec
sub
jge
adc
push
sbbb
cmp
mov
cld
and
cmp
inc
out
jle
jmp
icebp
in
mov
insb
jb
loope
jno
out
cmpsb
sbb
add
jecxz
mov
jg
mov
lea
push
imul
add
jne
push
inc
das
mov
mov
lret
icebp
add
xchg
nop
jns
nop
mov
xor
test
jle
mov
jge
mov
xchg
cmpl
cltd
outsb
dec
cmp
cmp
in
js
bound
xchg
jnp
gs
cwtl
nop
mov
pop
mov
cmp
outsb
adcl
xor
jnp
imul
mov
sbb
orl
into
imul
bound
inc
gs
popa
imul
adc
xchg
sbb
shrb
or
outsl
xor
sub
iret
sub
inc
jnp
add
sub
or
loope
stos
popf
sbb
pop
loope
adc
sti
loope
jl
jno
jne
and
xchg
fs
nop
and
js
imul
mov
outsb
cmc
imul
stos
mov
loope
or
clc
cmp
shll
sub
add
mov
adc
and
je
push
jle
sbb
ret
cmp
in
inc
mov
adc
or
inc
flds
cmc
into
mov
jno
jns
xchg
mov
jne
xor
xor
sbb
ljmp
xor
in
jg
aaa
adc
push
ja
mov
sbb
mov
mov
dec
arpl
int3
loope
lea
jnp
pop
test
sub
enter
and
mov
mov
push
adc
jae
and
jns
inc
jno
test
and
test
js
cld
jno
sti
or
pop
adc
movsl
mov
push
or
movsb
push
shl
jno
dec
pop
sub
or
push
lret
popa
xor
aad
shll
mov
jno
shlb
scas
xor
data16
adc
adc
push
jp
je
add
lea
rolb
popa
cmp
shll
nop
add
dec
std
arpl
add
cltd
jno
cmp
ss
dec
push
xor
sbb
jnp
and
push
jl
push
outsb
or
jno
imul
sarb
enter
dec
dec
jno
enter
mov
jp
subl
push
jno
rclb
popf
in
xchg
roll
inc
dec
jns
jge
imul
lods
dec
push
popf
push
cmp
or
bound
bnd
xor
dec
je
jns
dec
out
jno
setno
test
push
jno
outsl
mov
ret
jge
xor
xor
imul
inc
xchg
mov
iret
ljmp
jmp
sbb
insb
pcmpeqb
jnp
sti
leave
inc
xchg
addr16
cmpsb
lods
sub
repnz
data16
mov
dec
int
push
push
pop
sbb
sti
imul
jnp
pop
gs
cmp
sbb
push
fwait
mov
scas
data16
lock
jg
das
xor
jo
rclb
repz
push
push
nop
bt
mov
mov
imul
scas
insl
movsl
mov
dec
xor
cli
mov
mov
sub
lret
int
dec
je
bound
lret
pop
shlb
mov
adc
repnz
jno
scas
adc
je
jno
addr16
jb
or
push
sbb
inc
mov
movsl
xchg
mov
dec
pop
jp
xor
gs
jg
inc
fbstp
sub
shr
or
jno
jg
add
loop
addr16
mov
push
out
popa
mov
sahf
xor
inc
mov
cmp
cli
jno
xchg
sub
and
je
jno
jo
das
aas
mov
mov
mov
fnstsw
lock
jo
dec
cli
xor
je
inc
push
jns
lods
mov
fs
aaa
jne
test
jno
mov
mov
adcb
push
popa
sbb
fldl
ret
scas
push
jge
popa
int
aad
out
jno
shl
nop
xor
xor
mov
leave
sbb
movsl
jno
jo
call
jno
push
or
nop
push
jmp
jg
iret
cmp
enter
scas
ficoml
mov
adc
xor
imul
dec
sbb
adcb
push
jns
out
outsb
nop
jmp
jmp
jno
dec
mov
arpl
and
popa
push
icebp
test
decl
add
inc
xor
and
pop
or
push
mov
adc
mov
sub
dec
ljmp
sub
jno
cmp
and
stos
push
jno
push
notb
dec
sub
cmpl
ret
jns
into
xchg
fiaddl
daa
ja
pop
insl
nop
jmp
sbb
mov
push
fsubl
pop
inc
ja
xor
push
cmp
push
call
idiv
ljmp
xchg
movsl
mov
xor
or
sbb
lds
fwait
push
pop
jno
aaa
and
mov
je
jno
xor
fnop
fists
jno
pop
insb
cmp
in
lods
xor
nop
dec
inc
outsb
jno
ss
jno
test
mov
jno
out
cli
std
jnp
pop
loope
cmp
test
outsb
jno
fsubr
call
jno
push
mov
sbb
shlb
adc
jb
xorb
aam
in
xchg
or
loop
fsubrs
and
nop
loope
sbb
repnz
pop
nop
jmp
leave
jno
or
bound
movsb
xchg
repnz
cmp
and
push
lods
jbe
das
shl
addb
fcomi
inc
dec
mov
mov
roll
cltd
jno
push
andb
jne
popa
cli
mull
out
fucomp
lcall
mov
lret
test
cli
jno
lcall
sbb
loop
jno
pop
add
jl
fchs
jno
in
les
fiaddl
stc
adc
stos
sahf
cmp
add
pop
inc
test
mov
cwtl
popa
bound
push
pop
mov
lahf
pop
sub
adc
dec
insl
imul
push
push
fst
rolb
xorb
pop
sbb
adc
jl
stos
jb
mov
jno
cmpb
xlat
adc
mov
negl
test
add
jno
test
insl
mov
sub
andnps
shll
das
lea
pop
addr16
in
rorb
adc
icebp
lods
jno
test
out
lods
imul
test
imul
jno
nop
loop
dec
mov
mov
addr16
lcall
nop
jmp
cmp
mov
test
or
cltd
inc
divl
icebp
outsb
ljmp
rcrb
inc
push
jle
adc
jno
fistpll
adcb
insl
test
and
xchg
mov
push
inc
adc
xor
adcl
bound
ljmp
push
jg
and
fs
xchg
jns
retw
jno
arpl
mov
je
mov
lcall
mov
dec
add
add
pop
fdivs
push
push
jb
push
adc
mov
jno
call
jnp
out
mov
dec
xor
adc
jb
fs
test
scas
hlt
sbb
popa
mov
aas
jns
jno
inc
dec
jae
pusha
sub
scas
xchg
mov
insb
out
xchg
or
in
xor
jnp
scas
xor
push
insl
inc
mov
mull
cmpl
cmp
clc
xor
and
push
pusha
lock
mov
movsb
add
push
cwtl
jp
popa
and
outsb
inc
imul
out
in
int3
mov
push
inc
jns
adc
mov
leave
fldt
fwait
fs
mov
popa
add
jae
lods
sub
out
cwtl
rcrl
xchg
mov
lods
cmp
jno
add
jge
in
pop
jns
jno
jp
push
sbb
push
cmp
into
jno
cmp
mov
test
out
shrl
clc
push
sub
adc
data16
cwtl
add
insb
xchg
push
in
mov
cmp
mov
cld
inc
movsl
popf
jae
loop
jno
fsubrl
push
sbb
mov
outsl
jl
loop
arpl
sahf
inc
push
jmp
out
popa
push
cmpb
xor
movsb
jnp
lret
icebp
cmp
cmp
cmc
roll
jnp
jne
stc
nop
lahf
fwait
loop
jb
mov
mov
mov
adc
xor
jb
xor
jno
jns
pop
jne
iret
jnp
adc
jne
cld
lea
push
cli
mov
icebp
push
lea
mov
mov
cmc
adc
aam
mov
ja
xor
push
in
xchg
ret
addr16
in
cli
shlb
ret
xchg
scas
mov
add
jbe
stos
je
gs
fnstenv
cli
jg
out
or
nop
xchg
xor
or
cli
jno
fcmovnbe
je
jno
xchg
fldcw
jle
mov
ds
data16
pop
psrad
mov
sub
test
andb
jl
lea
add
fxch
xchg
insl
or
pop
lods
mov
add
fimull
inc
mov
jno
in
faddl
xchg
push
outsb
cmpsb
adc
stos
lcall
in
pop
popa
mov
mov
rcrb
cmpsb
aaa
mov
pop
jno
pop
sbb
cltd
fs
and
in
stos
jge
lret
xor
jae
inc
push
and
xor
inc
xchg
subl
push
movb
and
push
cmpsl
push
inc
sub
repz
in
jno
mov
shlb
cli
sbb
cmp
xorl
inc
lcall
inc
jno
mov
mov
int3
jno
add
jb
fstpl
jmp
imul
jno
stc
xchg
loope
sbb
stc
jno
xchg
fstps
lods
es
jle
push
pop
jno
jp
push
cmp
cmp
jno
stos
iret
aaa
sbb
adc
mov
xor
xchg
test
xchg
mov
jno
dec
adc
jg
sti
push
mov
loop
mov
imul
mov
call
js
inc
in
test
lea
icebp
and
jno
add
mov
pop
adc
pushf
inc
in
sub
or
mov
mov
xor
cmpb
sbb
iret
xor
out
mov
lock
cmp
lea
popa
inc
loopne
jl
cli
pop
out
cmp
jno
mov
aam
ret
shlb
lret
inc
adc
jne
jne
cld
sbb
jae
ret
xor
mov
out
imul
mov
adc
adc
sub
imul
jno
inc
push
jecxz
imul
dec
push
jg
lods
inc
ret
int
cwtl
mov
jno
int3
lods
imul
je
xor
adc
dec
jmp
cmc
pop
popa
dec
mov
push
mov
popa
lret
repnz
in
nop
jle
jns
sub
jne
jmp
inc
or
in
int
or
push
rolb
sub
cmc
adc
mov
push
out
call
xchg
movsb
push
lods
ljmp
hlt
lods
xor
xor
jnp
out
popaw
cmpsb
in
imul
xchg
dec
jno
sbb
scas
insl
or
pop
lods
cmp
mov
outsl
into
ss
mov
jns
popa
scas
insl
adc
sbb
jne
mov
data16
rolb
add
lods
pop
iret
ja
jns
mov
jno
mov
push
shl
push
inc
push
lea
stos
in
dec
testb
push
icebp
jno
pop
insl
jo
sbb
lock
popa
neg
inc
sub
push
repnz
mov
mov
cltd
mov
test
pop
das
bound
imulb
and
mov
cmp
scas
xor
lahf
sub
push
arpl
mov
dec
jno
pop
jns
out
xlat
xor
scas
and
jle
test
sbb
cmp
dec
mov
pop
and
shll
cmp
mov
mov
dec
roll
lret
xchg
adc
or
fidivs
sub
int
in
in
jns
pop
cmp
or
mov
mov
popf
mov
psubb
aam
jno
movsl
aaa
add
xchg
mov
mov
jl
mov
lret
mov
ret
pop
pop
push
psraw
mov
jae
lret
sbb
mov
adc
andb
lret
popf
sub
push
stos
loopne
ret
xor
lods
push
add
xor
push
sarl
xor
or
adc
enter
xchg
lock
jae
aad
jno
push
mov
maxps
jne
inc
mov
adc
xchg
sub
push
sub
fsubs
das
push
adc
sub
scas
xchg
ret
imul
dec
xor
pop
add
jl
xchg
mov
ret
jns
sub
imul
cmp
or
lcall
aad
sub
out
aad
and
scas
hlt
lea
jno
mov
lock
and
cmp
mov
out
cwtl
test
jo
sub
mov
add
insl
scas
mov
hlt
imul
insb
stos
pusha
shrl
in
mov
adc
insb
jno
add
push
in
fmuls
ds
dec
jno
mov
lcall
xchg
lock
jno
bound
jmp
out
psllq
mov
jno
jnp
jo
xor
in
pusha
movsl
test
dec
and
mov
into
js
bound
in
push
loop
sbb
popf
fildl
mov
imul
hlt
lcall
movsl
cmc
or
inc
xchg
mov
test
aas
jae
lods
out
ret
pushf
outsb
subb
jno
stc
add
push
imul
xchg
fsubs
jbe
data16
push
sub
push
cwtl
mov
shrl
jno
faddl
gs
sub
sbb
pop
fbld
movb
scas
jl
add
ja
mov
dec
loope
outsl
arpl
fsubrs
nop
fidivl
push
inc
aaa
cli
adc
cmpsl
pushl
mov
shrb
fwait
sub
pop
jbe
mov
mov
subl
cmp
cmpsl
test
cltd
shlb
xor
jp
jno
push
sub
shr
outsl
das
jno
xchg
loope
fidivl
fsubs
push
pop
popa
aad
pop
repnz
pushf
sbb
mov
mov
jno
popa
jl
cli
add
mov
aaa
in
inc
push
mov
jno
push
push
imul
and
pop
arpl
mov
fwait
jno
je
out
add
out
sub
mov
cli
jno
pop
into
cmpsl
hlt
xor
jle
mov
add
adc
inc
jno
mov
cld
cli
lock
inc
pop
std
mov
int
xchg
pop
leave
mov
imul
sub
mov
dec
or
cmc
push
add
fimuls
xor
lahf
roll
jp
xlat
jno
daa
test
jg
sahf
addr16
jmp
and
decb
test
jae
mov
addr16
pop
ljmp
cmp
movups
sbb
add
or
arpl
ss
mov
xor
or
jno
mull
xlat
pop
add
out
js
ret
arpl
in
xor
jmp
ret
or
xor
adc
fcomps
inc
push
clc
insl
mov
dec
cmp
inc
pop
jne
sarl
andl
and
outsl
jae
push
pushl
cmp
cld
jno
mov
mov
leave
pop
jno
dec
fcoms
movsb
fcmovbe
jno
xchg
dec
mov
xorb
xor
aam
insl
ss
mov
les
fnstenv
or
xor
jg
mov
fstpt
jno
imul
push
dec
add
cltd
hlt
xchg
pop
aaa
jecxz
mov
xchg
dec
in
mov
jno
xchg
push
loop
cmp
push
fwait
fs
fisubs
std
movsl
lcall
out
jae
ja
or
adc
outsl
popa
inc
pusha
pop
pop
adc
fwait
xchg
dec
pop
cmp
adc
or
cmp
repz
and
add
pop
jno
inc
mov
mov
jmp
xor
mov
lods
jae
lods
fwait
adc
out
push
lahf
dec
jo
popa
jg
setne
jno
dec
cmpsb
lret
xchg
mov
or
adc
fs
jne
out
les
shr
scas
leave
adc
cwtl
inc
xchg
jl
dec
imul
jecxz
pop
je
test
movsl
add
jno
push
repnz
in
push
aam
jno
pop
les
pop
shll
sbb
xchg
xorb
pop
push
dec
es
ds
clc
xlat
cmpsl
arpl
push
xorb
nop
scas
fnstsw
push
mov
scas
and
in
rol
fidivl
scas
dec
neg
mov
popa
xor
aam
jno
mov
mov
nop
and
ja
cmpsb
jno
and
in
lret
or
xor
outsb
jg
adc
iret
lahf
jno
cmpl
pminub
lods
pop
bound
test
insl
adc
push
fstl
sahf
pusha
jno,pt
xchg
negl
adc
sbb
shrl
test
lods
iret
jno
gs
add
ss
popa
inc
movb
add
push
test
mov
xor
lret
mov
popf
out
mov
dec
popf
jle
jno
mov
dec
fldcw
gs
fwait
mov
lret
mov
loope
and
imul
cmp
enter
aam
jno
es
push
out
xor
adc
scas
sbb
loop
jno
lahf
je
imul
lea
test
jmp
cltd
mov
pop
mov
push
adcb
out
jp
call
xchg
clc
and
pop
jno
adc
add
and
xchg
icebp
add
or
and
dec
push
rcr
fimuls
scas
mov
imul
adc
mov
pusha
or
xor
adc
fnstenv
push
dec
mov
xor
jno
sub
push
aad
je
clc
in
and
and
sarb
into
xor
cld
outsb
inc
sub
or
xor
roll
std
inc
insl
and
lahf
scas
inc
lret
bound
pop
and
adc
clc
add
jno
dec
fdivrs
arpl
imul
jno
sbb
out
jno
push
mov
in
out
clc
or
push
jmp
ret
or
popa
lods
jecxz
in
testl
call
jb
movsl
add
mov
mov
add
xor
jno
mov
jno
lea
and
movsb
stos
scas
scas
dec
lods
xchg
insb
in
lods
pop
les
stos
sub
clc
jge
dec
je
lods
insb
xor
popa
ja
in
or
pop
outsl
sub
lret
push
insb
push
sbb
add
lods
iret
std
jno
mov
das
outsb
arpl
pusha
jmp
out
jno
loop
adc
lea
jb
je
divl
aad
mov
in
inc
add
imul
jecxz
fisubrs
lods
lcall
out
mov
and
fwait
jg
popa
nop
es
sbb
andb
pop
push
sub
hlt
lret
nop
push
mov
xchg
and
jae
add
mov
mov
cmp
fistl
push
daa
int
divb
fidivl
lret
mov
data16
and
stc
fstl
scas
mov
and
test
cmpl
cltd
mov
out
adc
jno
lret
inc
lods
sbb
xchg
jl
mov
pop
in
cmp
jno
mov
adc
add
pop
jmp
jae
lcall
sar
xchg
out
daa
jno
cmp
fdivl
mov
jno
mov
lods
add
shrb
add
jno
xor
cltd
dec
loop
jno
cmp
fsubp
add
adc
mov
or
pusha
mov
mov
xchg
jno
enter
arpl
xchg
jne
add
fidivrl
pop
sub
mov
jno
mov
scas
jb
adc
push
iret
jae
mov
xor
adc
daa
std
pop
pop
mov
mov
jno
inc
mov
sbb
or
mov
push
hlt
repnz
das
jne
les
adc
xchg
int3
shrb
iret
mov
enter
aaa
push
mov
sarb
push
mov
dec
push
cmpsb
pusha
push
jno
inc
scas
mov
jno
mov
stos
lods
repz
je
rorb
leave
jecxz
jns
in
test
rolb
xor
xchg
stc
mov
mov
xor
addl
xor
mov
shlb
push
mov
push
jne
inc
inc
aam
push
and
js
cld
jno
outsl
in
push
shl
jns
scas
xor
xchg
xchg
ret
data16
mov
mov
shrl
push
fadds
aad
cmp
cmp
or
mov
lock
lret
imulb
mov
inc
adcb
or
cmp
pop
jno
fildl
repz
xchg
sti
fs
add
imul
or
adc
push
shll
xor
push
push
shr
push
or
jno
cld
lahf
gs
jae
jb
jno
std
ret
xor
push
jbe
fdivrs
adc
les
scas
jne
pop
push
push
aad
jne
notl
in
mov
scas
lock
push
pop
lret
jb
mov
cmc
insb
push
lods
push
fldenv
rolb
cmp
jmp
xor
dec
jno
push
lret
loop
adc
test
xchg
jae
inc
outsl
movsb
sbb
data16
popa
shll
movsl
cltd
std
cmp
test
xor
stos
aam
sbb
xchg
outsb
lock
imul
movb
cmp
push
xchg
pop
push
cld
out
add
jnp
loop
jns
es
cmp
xchg
mov
mov
popa
in
push
xor
jge
pop
scas
cs
jns
es
xor
test
adc
jno
out
int
inc
clc
cmp
test
rcrb
and
pop
and
xor
lret
mov
shlb
adc
in
popf
add
lea
out
lock
ret
int
mov
and
stc
outsb
jmp
scas
cltd
push
aas
sub
fbld
movsl
jno
mov
test
cmc
xor
subb
xor
add
lds
xchg
jno
cmp
jno
jne
cmc
mov
ds
sbb
orb
test
pusha
rcll
or
xchg
arpl
jno
std
sbb
popa
jp
jne
adc
cmp
mov
std
test
ss
push
dec
xor
add
popa
repz
or
jmp
jnp
push
inc
popa
jg
das
cmp
je
jns,pt
xchg
push
jno
jp
aaa
or
or
sbb
or
jge
mov
leave
or
jno
cmpsl
and
mov
shll
vminps
inc
jno
inc
xor
adc
jle
cmc
shlb
insl
pop
lret
adc
es
mov
xorl
fmuls
outsl
adc
cmp
int3
mov
or
jle
scas
push
fdivl
arpl
push
sbb
lock
enter
aaa
jae
dec
int3
inc
xlat
cvttps2pi
sahf
xlat
pop
adc
sti
jno
dec
out
jns
lock
xchg
mov
data16
mov
push
sbb
pop
push
imul
fcomps
or
push
pop
es
pusha
jno
add
jno
mov
push
and
cltd
repz
scas
lret
mov
jae
or
push
jle
or
cmovbe
inc
imul
or
sahf
inc
mov
push
and
dec
test
sub
cwtl
xor
andl
add
sbb
jno
mov
shlb
cvttps2pi
mov
inc
jecxz
cld
add
push
sub
jle
lock
insl
les
mov
jbe
shlb
push
jle
add
mov
lret
add
data16
insl
jle
nop
mov
adc
xchg
push
std
xchg
push
out
dec
lock
sub
js
stos
sbb
jne
inc
dec
nop
dec
push
adc
fisubs
mov
and
jno
cs
jge
jae
push
jb
xor
loope
lods
je
dec
fs
mov
lret
mov
mov
mov
push
outsl
test
test
aad
jno
andb
lea
in
jno
gs
aaa
mov
sbbb
jge
lods
movsl
aas
xor
cmc
jnp
push
adc
addl
sub
out
pushf
adc
test
pop
sbb
dec
lods
shrb
jge
jb
fidivrs
jno
in
mov
and
popf
nop
mov
fwait
push
or
aas
mov
add
adc
lds
call
xor
jno
out
xchg
test
ja
xor
and
push
std
lret
push
data16
es
push
cwtl
jno
sbb
mov
insl
ffreep
pop
add
int
push
cmp
lcall
lret
add
fbld
rorb
fistl
jg
mov
sub
and
outsb
popa
das
cmpsb
jle
adc
mov
sbb
jo
fs
jno
inc
mov
mov
inc
sbb
xchg
das
sbb
push
jne
inc
jl
js
mov
imul
jae
adc
jno
pop
pop
test
jno
aam
inc
cwtl
in
call
popa
ss
insl
hlt
movsb
pop
nop
jge
push
ret
popa
mov
stos
lds
mov
cmc
jno
loop
mov
in
pop
jno
mov
mov
nop
lret
sbb
std
ror
dec
jno
arpl
adc
jo
addr16
jmp
sub
pop
pop
scas
cltd
push
arpl
add
xchg
push
and
gs
jg
xchg
popa
stos
jo
cmc
jns
sets
subl
call
lock
jne
fcoml
addr16
jecxz
pop
and
mov
pop
shll
rcrb
fwait
xor
xchg
jae
lods
add
lahf
or
popa
jo
fwait
int
mov
and
in
ss
or
adc
pop
xor
adc
mov
inc
ret
andb
and
mov
or
and
xor
jp
in
jns
or
mov
in
mov
data16
mov
pusha
out
out
imul
inc
orl
pop
xorb
pop
adc
jnp
cmp
add
lock
mov
fdivr
inc
rolb
xor
arpl
cmpsl
jne
scas
xor
add
xor
jne
insl
xor
or
stos
push
jns
popa
push
fnstcw
jne
gs
inc
mov
push
mov
movsl
push
das
jb
jno
fmull
inc
lock
inc
push
jno
lret
test
jno
mov
xor
lods
jnp
divl
arpl
pop
xor
pop
loope
adc
adc
xor
sub
scas
sbb
aaa
push
repnz
adc
adc
fldlg2
and
insl
hlt
rol
lock
or
push
lds
mov
insl
mov
jae
xchg
fxch
xor
mov
aaa
stos
push
jg
mov
outsl
dec
rcrb
or
in
pop
stc
jmp
dec
sub
jmp
lea
lods
stc
jns
mov
jno
fstpt
enter
cltd
hlt
push
mov
mov
popa
movsl
int3
sub
jno
jmp
mov
jno
mov
mov
cmpsb
push
add
sbb
adcb
jmp
push
sub
cmovo
jno
or
adc
inc
xchg
ljmp
jge
mov
movsl
xor
push
dec
jecxz
xchg
shlb
xchg
adc
sub
cmp
fisttpl
pop
pop
jl
mov
inc
cmp
mov
jne
stc
adc
push
cmpsl
mov
mov
pushf
into
sti
jne
adc
clc
bound
cli
jp
adc
inc
cs
mov
push
dec
xor
jns
mov
fstps
std
imul
jno
xchg
lret
sbb
push
inc
or
shll
push
dec
jae
imul
and
pop
cmc
outsl
inc
inc
inc
sbb
inc
stos
pop
stos
arpl
xchg
mov
cmpsb
xchg
pop
xchg
jae
xchg
test
inc
xchg
lea
popl
test
sarl
and
bound
sub
jns
mov
cmp
dec
jns
jg
adc
mov
mov
xchg
xor
test
arpl
data16
rcl
fsts
dec
outsl
push
lods
int3
aad
add
jno
mov
int3
aas
daa
jge
cmc
or
push
cmp
cmp
sub
lods
stos
cmp
insb
mov
add
imul
lods
inc
gs
cltd
sbb
dec
sbb
outsl
pop
xchg
cmp
test
mov
mov
sbbb
arpl
rclb
mov
xorl
inc
mov
nop
cltd
mov
out
lods
xorl
mov
shr
andl
leave
xor
pop
mov
add
xchg
ljmp
ja
push
push
lods
aad
xchg
mov
fildl
jne
mov
cmc
cmp
leave
sub
cwtl
xchg
xor
arpl
push
inc
adc
addr16
push
mov
pop
sbb
xchg
push
xor
adc
push
cmp
sbb
std
xor
es
inc
jo
jnp
dec
jl
daa
cs
aaa
cmp
jns
or
xlat
out
mov
push
lods
loope
in
in
jne
les
rcl
xchg
aaa
inc
imul
jge
xorl
scas
sbb
test
xor
ja
cmp
push
inc
les
dec
into
jns
push
sti
push
push
cmpsl
into
scas
cmpsb
lods
loopne
xor
dec
mov
fidivrl
cmp
test
mov
jno
mov
jns
ja
in
adc
imulb
mov
or
mov
mov
popa
jbe
jns
orps
jno
gs
outsb
insl
pop
jle
nop
lahf
jbe
clc
std
lahf
jns
in
inc
cmp
dec
jge
dec
aam
jno
nop
das
sub
jecxz
std
jno
icebp
addb
lock
xor
jno
loop
das
fwait
pop
jno
int3
xlat
push
repnz
push
inc
xchg
push
fnstcw
lcall
inc
cmpsb
das
adc
das
mov
xchg
cmp
repz
xor
lock
roll
in
add
jo
add
data16
das
push
mov
mov
dec
lods
popa
pop
jo
cli
jne
mov
loopne
xor
cmc
mov
popa
inc
incb
xchg
in
dec
mov
xor
ja
cli
fldenv
lea
mov
popa
sbb
flds
mov
xor
xchg
daa
sbb
jnp
xchg
test
and
arpl
xor
in
lods
or
push
jns
dec
nop
push
fimull
mov
inc
lock
push
push
sub
test
mov
xor
jmp
outsl
xor
xchg
jbe
es
xor
lds
cmpsb
dec
xor
inc
ljmp
cmp
call
inc
nop
and
sub
xchg
fisttpl
inc
orb
psubw
lods
adc
mov
fwait
insl
mov
push
xor
jns
and
fwait
sarb
xchg
subl
mov
lea
nop
sbb
dec
xor
lret
popa
data16
or
adc
cld
mov
add
shr
popa
pusha
sbb
jae
ja
popf
add
jmp
dec
cmp
xchg
shl
ljmp
fnsave
nop
sahf
idivl
imul
repnz
pop
imul
xchg
jnp
adc
scas
dec
sub
sub
into
aam
imul
xor
out
lret
jno
insb
dec
lods
adc
xchg
rcl
nop
out
sahf
push
into
imul
dec
mov
mov
lods
outsl
sub
in
cmc
jno
nop
mov
aaa
outsl
sub
xchg
add
cmp
add
jns
mov
mov
push
jne
dec
add
xchg
sub
pop
push
add
imulb
lea
mov
imul
cmp
jns
add
addr16
arpl
loop
sbb
test
bound
push
add
inc
enter
sub
stc
mov
cmp
jg
sub
jno
mov
pop
dec
jno
adc
or
jge
mov
push
inc
stc
dec
ss
mov
outsl
imul
iret
mov
popa
pop
jecxz
or
movsb
adc
fcoms
loope
inc
jno
fiadds
inc
pop
in
lahf
jno
jl
xor
cltd
pop
fdivl
sbb
or
push
lcall
insl
mov
cs
push
adc
push
icebp
jne
sub
aaa
dec
mov
jno
xlat
xchg
xor
in
hlt
lock
push
push
jb
inc
or
jno
mov
ss
push
popf
jno
insl
loope
ja
test
iret
cmp
or
mov
inc
pop
js
aas
pop
and
jno
out
xor
cld
int
imul
mov
mov
mov
sahf
cmc
jge
out
in
cli
scas
cmp
jno
bnd
int3
mov
push
dec
cld
fdivl
aaa
mov
mov
xchg
pop
jge
mov
jl
cli
jno
fcoml
adc
xchg
mov
jns
sbb
inc
jns
xchg
xor
jecxz
jnp
push
cmp
sbbl
push
outsl
mov
cli
test
add
mov
dec
mov
jae
cmp
and
cmpsb
dec
push
call
mov
out
in
adc
in
xor
aam
adc
ret
sbb
xlat
or
jno
adc
rolb
add
pop
lea
inc
jg
xchg
iret
jnp,pn
cli
sub
popa
mov
orl
push
cmp
stos
iret
gs
jno
inc
adc
jno
xor
mov
sub
push
pop
daa
push
ret
sub
lods
outsb
in
lods
jbe
push
xor
sbb
jno
mov
movsb
and
pop
js
data16
jno
hlt
ds
sub
cmp
cmc
fsubr
popa
les
shll
xor
ja
daa
pusha
xchg
repz
adc
mov
aaa
int3
bound
out
ljmp
mov
pushf
xchg
adc
or
cs
mov
mov
addr16
xchg
cwtl
enter
jno
push
js
mov
ja
xor
andl
dec
je
jno
inc
loopne
pusha
scas
cmp
jo
je
jbe
lock
or
out
jecxz
cmp
add
jno
mov
pop
xchg
jno
aad
into
mov
inc
mov
aad
jno
or
cmp
mov
bound
dec
and
loope
mov
xchg
sahf
test
lret
stc
test
jno
mov
aam
push
aas
je
std
popa
mov
sbb
scas
bnd
mov
loope
mov
mov
jb
jbe
pushf
or
jg
or
push
adc
xchg
ja
mov
movl
fstpl
sub
adc
fwait
and
pop
jge
jbe
pop
enter
and
and
mov
jno
pop
std
frstor
orb
mov
mov
xchg
addl
cwtl
mov
ss
jno
add
pushf
cmp
ja
sarl
std
outsb
jno
daa
jle
je
xchg
in
ds
push
mov
inc
vpsadbw
jbe
cmp
repnz
mov
cmp
fcmovu
and
add
add
mov
pushf
jmpw
cld
push
xor
adc
lock
and
add
nop
in
dec
out
mov
pop
sub
cmp
inc
push
pop
sbb
jne
dec
sub
fdivs
pop
aaa
jno
cmc
out
loop
fistpl
movsb
sub
jns
mov
cmp
mov
jno
in
push
mov
adc
mov
jno
jl
push
ficoms
pop
jno
jae
pop
mull
sub
jno
stos
adc
flds
insl
cmc
sub
jno
fsts
and
jnp
scas
imul
xor
jno
dec
mov
and
lret
or
inc
xor
mov
scas
sbb
inc
fwait
insl
es
pop
pushl
dec
das
outsl
and
mov
jbe
lea
sbb
adc
xor
popf
jge
mov
jge
add
out
popf
pop
or
das
xor
imul
jo
das
mov
mov
or
in
out
outsl
pop
fiaddl
ret
push
iret
cmpsl
cmpl
bound
pop
cmpb
inc
xor
jo
nop
daa
outsb
inc
cld
in
cs
xor
jne
mov
stos
cld
popa
and
cmp
mov
inc
mov
pop
mov
xor
daa
nop
jp
sub
dec
or
dec
enter
jecxz
jo
or
loop
into
xchg
cmc
rol
fmulp
mov
jge
push
pop
out
mov
sti
xor
push
cli
and
adc
imull
arpl
add
and
mov
and
push
add
dec
mov
sub
test
repnz
xor
scas
scas
pop
xchg
mulb
mov
sbb
mov
pop
mov
push
or
inc
sbbb
stc
cmp
dec
mov
mov
dec
mov
ret
or
aad
test
js
xchg
cli
cmp
outsb
imull
addr16
mov
jbe
jne
outsl
sub
imul
repz
call
inc
xchg
jge
push
out
andl
push
xchg
push
add
or
push
jl
subb
in
inc
lea
xchg
xchg
popa
decl
push
call
push
xor
xchg
mov
jnp
outsb
fisttps
or
lock
mov
mov
out
push
xor
sub
lock
xchg
insb
push
lret
mov
dec
das
mov
out
dec
sub
sub
jno
in
inc
daa
and
pop
add
stos
dec
inc
ret
out
scas
push
inc
sub
pop
loop
cld
int3
enter
mov
ret
push
pop
test
dec
enter
mov
fsubr
dec
dec
arpl
pop
lcall
cmovno
ss
arpl
jbe
mov
outsl
das
call
cli
loope
jp
jno
jg
fcmovnb
cltd
mov
jno
aaa
ja
neg
push
repnz
fwait
inc
jecxz
mov
dec
mov
popa
mov
lock
and
sub
out
jno
out
or
testl
fs
sbb
int3
or
push
or
push
mov
jnp
mov
jne
push
out
dec
mov
jne
jnp
call
cmp
pop
push
and
icebp
test
movsl
push
es
pop
jae
fcmovu
push
mov
xchg
inc
xor
je
sub
imul
jno
pop
insl
or
lock
and
inc
scas
xor
or
mov
sub
imul
inc
sbb
cmpsb
pop
mov
sbb
lods
or
jno
dec
lcall
or
adc
xchg
in
sbb
ja
add
stos
mov
fistpll
cvtdq2ps
or
nop
es
arpl
rorl
jp
or
fmulp
inc
popaw
and
gs
push
cmp
jno
clc
rorl
into
pop
add
outsl
mov
cltd
lret
xor
dec
into
jno
daa
out
mov
pop
insl
es
repnz
cli
arpl
sbb
pop
push
jno
push
shll
adc
jmp
cwtl
fwait
mov
imul
jno
xlat
jb
push
mov
cmp
or
fmuls
sbb
test
jno
leave
out
stos
aam
sub
fnstsw
inc
aad
test
lods
js
jle
mov
mov
jecxz
sub
adc
enter
jg
cmp
jno
inc
adc
sub
xchg
jno
fildl
fadd
push
insb
jno
add
rorb
lret
pushf
ret
and
popa
loop
and
test
xor
mov
inc
add
stc
in
fstpt
lret
sahf
mov
nop
testb
pop
flds
movsb
jno
xchg
in
in
cmp
scas
jno
lret
js
into
ja
sbb
and
divl
rcll
xor
insl
lods
fxch
fcoms
push
dec
and
stos
ja
push
fidivl
push
fldlg2
sub
mov
xor
or
mov
sti
and
call
jno
lahf
test
in
aas
push
jno
mov
mov
jno
cmc
mov
shll
js
pop
int
xchg
or
fidivrl
sbb
lea
sub
popa
shrl
vrsqrtps
push
add
mov
adc
in
jnp
fcoml
jno
push
pop
ficompl
movsb
int
inc
clc
mov
mov
and
jl
ss
adc
repz
inc
ret
jmp
adc
out
cmp
loop
jbe
add
xchg
out
sbb
mov
and
push
in
jmp
aad
or
sbb
sbb
or
inc
mov
mov
dec
imul
das
fisubl
fistl
cmc
in
stos
mov
arpl
and
xor
loopne
jno
mov
mov
sahf
xchg
adc
hlt
inc
fstp
xchg
push
fldenv
movb
mov
mov
push
mov
cmp
jno
aam
and
outsl
repz
sbb
shll
int
leave
cli
add
jno
mov
mov
dec
jle
sbb
int
mov
fcompl
int3
in
aas
mov
jno
mov
sub
sarl
jno
adc
sbb
inc
cmp
jns
xchg
xlat
mov
mov
psubd
adc
push
xchg
push
fst
cmp
stos
pop
insl
cmc
lret
or
cmp
jno
sbb
fldt
lods
sub
jg
mov
push
stos
mov
jno
pop
out
cmpsl
pop
stc
fcomps
mov
popa
mov
aas
adc
inc
dec
int
and
addr16
insb
adc
mov
add
xor
jg
shlb
fnsave
and
mov
sbb
jns
dec
lds
xchg
jge
push
add
push
mov
mov
call
jo
or
fxch
ss
jno
int
inc
js
loopne
nop
push
mov
call
cld
ret
sbb
dec
imul
dec
loop
push
ret
icebp
sahf
mov
jmp
cmp
pop
js
shlb
inc
push
xor
push
jno
in
stos
lret
mov
aad
sbb
test
or
andl
jne
aam
aad
mov
scas
jne
orl
jno
xlat
js
inc
sub
shr
aas
dec
sub
sub
inc
enter
popf
stos
ss
ja
aam
rolb
mov
mov
lret
pop
into
or
mov
jno
dec
lret
jne
lea
ljmp
cli
push
lods
mov
fs
jb
sub
cmp
loopne
inc
call
scas
sub
add
fcoml
js
out
pop
mov
jno
push
in
fstl
inc
push
mov
popa
cmc
sti
cmp
jg
ss
mov
xor
jne
or
jno
cmp
jb
push
insl
inc
and
imul
test
jp
push
pop
daa
ror
adc
and
add
cmpl
mov
lock
inc
pop
aam
push
int
jno
cmpsl
sti
mov
sahf
insl
test
rol
inc
nop
imul
jno
dec
out
xor
lret
jno
pop
std
pop
jge
pop
insl
mov
mov
xor
scas
jno
jecxz
dec
push
imul
es
jge
jno
out
pop
ljmp
jno
add
and
jno
mov
aaa
dec
mov
lret
pop
aas
mov
mov
xchg
leave
pop
jp
arpl
push
and
pop
mov
ja
cmp
and
cmpsb
in
fwait
in
jno
pop
out
push
sbb
jno
addr16
mov
xchg
stc
aad
mov
jno
sbb
pop
sbb
cmp
movsl
inc
lcall
scas
rep
jno
sti
rcrb
pop
ds
ret
jnp
jno
mov
mov
nop
out
sahf
push
dec
dec
or
or
mov
rcll
popf
mov
dec
movsl
mov
les
je
jno
cmp
in
xchg
and
popa
sub
aad
mov
imul
imul
fdiv
pop
scas
lret
lods
jg
mov
jecxz
notb
lahf
jno
mov
lds
fldl
inc
jge
cmp
pop
sbb
sub
data16
jno
cmpsb
lock
add
adc
stos
orb
mov
xor
jnp
cwtl
lods
loope
mov
push
sbb
sbb
subl
jno
in
arpl
ss
and
sbb
mov
fisttpll
mov
xlat
popf
movsb
mov
popa
pop
push
and
jb
lea
je
sahf
hlt
sbb
jno
bound
dec
lret
adc
shrl
pop
pop
inc
gs
mov
nop
stos
xchg
push
les
out
and
iret
pop
icebp
pop
jmp
add
mov
mov
xor
icebp
nop
pop
or
cmpsb
imul
jno
insl
stos
pusha
jge
sti
cmp
mov
mov
push
popa
sub
aam
fidivl
inc
rol
idivl
sbb
inc
pop
add
jb
jno
ds
fidivrs
fistps
inc
in
pop
push
xor
cmpsl
insb
cmp
mov
loop
ss
jp
mov
mov
mov
stos
cmpsb
popa
push
or
jno
setp
dec
repnz
push
jnp
sti
out
jg
sub
xor
arpl
shr
sahf
stos
sbb
sbbb
cmc
push
sub
out
rcrl
adc
in
movsb
lret
push
imul
jno
add
lods
insb
cld
inc
xor
call
mov
jno
aaa
xor
mov
nop
nop
jb
loopne
mov
push
into
shl
les
dec
ja
mov
cmp
push
xlat
mov
loop
loopne
adc
in
fld
clc
add
jno
pop
out
or
and
jno
test
iret
jno
adc
and
scas
insl
mov
sqrtps
shlb
jge
fistpl
sub
jne
mov
fisubrs
shrb
ja
loop
push
jl
and
popa
push
mov
inc
dec
jno
or
fsubrl
fidivl
adc
outsl
jno
inc
mov
adc
mov
or
or
popa
lahf
sub
jno
not
dec
rol
fsubl
jnp
call
pop
lret
lea
xor
adc
loope
mov
scas
mov
jno
int3
out
xorb
jno
outsl
cmp
nop
inc
cwtl
repnz
mov
adc
and
and
inc
fisubrl
jno
inc
xchg
pop
leave
sub
jno
cli
inc
pop
inc
insb
in
sub
mov
std
jno
scas
fsubl
in
push
icebp
ljmp
inc
jno
ss
je
jbe
push
xchg
jno
add
cmp
dec
cli
cmc
mov
je
mov
pop
arpl
mov
lods
cld
ror
lret
imul
jnp
jns
lock
loop
lcall
dec
nop
lret
jno
jne
xor
call
push
jl
fidivrs
jno
mov
pushf
push
addr16
xchg
mov
xor
pop
std
jns
imul
jno
jns
adc
mov
rolb
mov
fnsave
in
xor
jmp
xchg
gs
out
mov
arpl
adc
sub
mov
mov
cld
xchg
scas
ss
jl
mov
std
sbbb
call
repz
push
mov
jno
adc
lea
xchg
andb
pop
mov
xor
cmp
fsubrl
shrb
repnz
jns
add
aad
fsts
lods
sbb
pop
mov
daa
or
rclb
lea
jno
sbb
sbb
add
xor
test
nop
xchg
adc
mov
sub
stos
clc
and
pop
sarb
or
cmp
gs
jns
loop
push
adc
adc
mov
sbb
in
jno
dec
ret
sub
dec
test
adcl
jb
jge
leave
insb
push
jecxz
push
mov
jnp
push
cmpsb
ljmp
popa
mov
mov
mov
stos
mov
ret
cld
jno
fsubs
mov
cmpsb
pushf
iret
idivb
pop
adc
mov
jno
jmp
inc
insl
es
std
lret
or
jns
cs
pop
popa
shll
xchg
iret
xor
rorl
mov
jg
pop
je
jno
mov
add
mov
aad
fs
jo
std
jno
dec
and
stc
cmpsl
mov
sub
pushf
es
fmuls
mov
jb
bound
scas
add
xor
push
cmpsl
pop
jmp
aad
inc
mov
add
fnstcw
mov
xor
sar
sub
push
scas
out
insb
loope
jno
test
sarl
int
xchg
or
pushl
mov
mov
xchg
jno
cmp
call
mov
push
xlat
lahf
loope
adc
mov
loopne
and
jno
and
pop
jno
xor
loop
jle
dec
push
out
dec
pop
dec
xor
scas
pop
dec
pop
jno
enter
outsb
nop
mov
jge
movsl
xor
pop
aaa
popa
mov
sub
push
fbstp
out
mov
fs
std
jne
jno
scas
jns
dec
imul
jno
sbb
aad
inc
daa
adcl
aam
scas
movsb
aas
jge
sahf
add
dec
shll
mov
jns
xor
aam
jns
mov
jge
and
pop
sub
fucomip
push
clc
imul
lret
test
push
aaa
lcall
shlb
or
outsl
inc
addr16
lods
xor
subl
nop
test
pusha
jle
call
mov
adc
fimull
fldt
xchg
xorl
pop
xchg
add
xor
fdivrl
ss
or
call
jno
stc
mov
pop
insb
je
nop
sub
inc
arpl
lcall
mov
and
fidivrs
sub
sbb
mov
mov
addl
sti
repz
enter
in
adc
fiaddl
jb
dec
and
pop
bnd
popf
lods
xchg
push
pop
mov
aas
out
xchg
dec
jp
leave
sbb
das
jbe
in
gs
neg
sub
pop
aad
mov
iret
xor
jns
ja
nop
fcompp
leave
sbb
pusha
inc
popa
jns
jl
sub
in
enter
push
and
outsl
nop
or
and
jno
xor
inc
jno
xor
pop
lahf
or
jmp
in
jno
aas
out
inc
pop
in
pushf
cmp
adc
out
fyl2xp1
jno
aad
iret
jns
mov
jne
jno
cmp
out
pop
pop
jno
lock
out
aas
outsb
fbstp
jo
jnp
in
lods
push
pusha
sbbb
jmp
clc
shll
inc
jno
ret
addr16
adc
pop
inc
sahf
sub
dec
mov
mov
int3
and
fnstcw
push
mov
add
mov
out
push
test
jno
fcmovu
imul
mov
pop
xchg
cmc
stc
push
adc
jecxz
push
mov
data16
idivl
push
ja
mov
and
je
bound
gs
push
scas
jb
outsb
sbb
lods
jne
jp
push
mulb
clc
sbb
test
mov
subl
sti
push
push
xor
icebp
clc
loop
xor
add
push
rcrl
cmp
mov
out
js
adc
inc
dec
popa
mov
push
mulb
int3
int
sarb
frstor
outsl
mov
imul
xor
sub
pop
scas
jnp
adc
xlat
arpl
jge
inc
jno
pushf
mov
ljmp
les
xor
ret
hlt
in
ljmp
jp
mov
ljmp
ss
jmp
jne
out
sbb
jo
data16
xor
push
jns
int3
adc
xor
pop
lods
ss
stc
jno
dec
jb
in
and
and
inc
adc
ds
stc
cmp
xor
pop
sub
sar
inc
sub
adc
test
fs
mov
in
xorl
xchg
cmpb
xor
fldcw
jl
sub
nop
paddsb
out
imulb
lods
repnz
in
pusha
scas
sub
push
pushf
pop
loopne
dec
adc
jno
movsl
jge
lods
cmpl
xor
jg
push
adc
sbb
mov
call
pop
jno
adc
fsubrl
gs
cmc
jno
das
dec
out
enter
dec
lock
push
arpl
rclb
into
stos
push
jns
push
push
popa
push
adc
addr16
sahf
push
cli
jne
shrb
cmpsl
gs
outsb
jno
and
clc
jno
jge
add
sub
cmp
xorb
shll
stos
push
push
jno
jmp
jno
sub
cmc
sti
fsubrs
jnp
mov
fimuls
lock
les
call
xor
push
mov
add
out
lea
jg
daa
lcall
push
jns
movl
mov
push
loope
push
inc
int3
xor
repnz
leave
mov
icebp
jno
shrb
aas
add
sbb
pushl
jno
js
imul
sbb
outsl
xor
cmpsb
nop
daa
das
cmp
ja
sub
imul
sbb
sub
jno
jle
jecxz
pop
jno
adc
imul
cld
shlb
and
insb
inc
movsl
insl
inc
xor
ss
inc
test
mov
testl
adc
lock
add
push
into
pushf
xlat
mov
popa
adc
xor
mov
xor
ja
lods
push
and
pop
insl
mov
cmc
dec
ja
test
in
push
cli
cmpsl
loopne
push
mov
lods
mov
and
xor
fstpt
arpl
mov
sbb
pusha
cli
bound
lods
cmp
mov
xor
cmpsl
sub
mov
aaa
pop
cwtl
jno
ret
sbb
test
adc
and
push
mov
and
pop
cmc
sub
add
clc
in
fimuls
popa
scas
and
stos
or
mov
or
inc
aaa
insb
xor
inc
pop
lret
sub
push
shr
inc
int
or
arpl
jno
int3
lods
sub
dec
inc
out
jge
sub
jge
data16
pop
xchg
dec
popf
mov
int3
lds
push
adc
and
xchg
pop
jge
sub
jnp
lods
add
and
imul
rclb
xor
cmp
test
shrl
push
ss
out
dec
fimuls
cmp
pop
mov
cld
loopne
ss
jno
inc
jmp
pushf
fimull
dec
hlt
adc
lea
sbb
mov
sbb
insb
mov
aas
jno
fs
imul
nop
sub
ljmp
mov
jno
dec
mov
leave
rcr
xorl
adc
lock
lods
das
cltd
mov
mov
jno
mov
push
inc
jno
in
shrb
ss
or
sub
jecxz
jns
nop
jge
aas
arpl
popf
cmc
in
pop
cmpsl
fwait
jno
pop
push
into
scas
adc
hlt
or
test
imul
in
mov
and
mov
push
in
ss
cmc
cmp
hlt
lcall
push
jno
imul
in
jg
ja
lock
push
in
xchg
xchg
gs
imul
lock
jge
stos
cmp
jl
cmc
jno
cltd
test
add
jb
je
ja
push
lock
mov
lea
repnz
mov
push
xchg
scas
cmp
mov
ljmp
jno
mov
cs
xor
add
pop
cmc
jno
jo
push
shll
mov
cmpsl
jne
jno
jo
sbbb
push
rcrl
push
push
or
adc
jmp
call
jp
roll
cmc
hlt
in
or
stc
xchg
lahf
pop
push
cmp
iret
fcmovne
notb
fsubrs
push
jp
mov
popa
loope
mov
scas
pusha
into
icebp
push
imul
mov
addr16
sarl
and
jno
adc
push
jne
clc
outsl
cld
dec
call
push
sub
addl
stos
int
lea
adc
dec
pushf
push
jecxz
ds
call
hlt
mov
dec
adc
fistps
push
inc
dec
test
jae
arpl
jbe
stos
pushf
jmp
push
and
aas
lret
or
pop
jno
push
cmp
cmp
xor
ljmp
inc
sbb
ret
add
subb
dec
jno
xchg
aaa
aas
nop
lret
nop
push
inc
inc
jp
jge
sbb
cwtl
jno
in
mov
mov
mov
imul
adc
jae
and
cwtl
jmp
cmc
jnp
call
stos
jno
add
adc
lds
shll
xchg
scas
xchg
or
inc
lret
cmp
push
jno
cmpsl
stos
cli
lcall
dec
adc
std
aas
loope
mov
loop
lcall
lahf
nop
addr16
pop
fsubl
adc
push
mov
adc
cli
jg
mov
mov
lcall
adc
push
cmp
shrb
int
popa
stos
adc
mov
bound
or
jb
xchg
jge
aas
ja
and
mov
add
inc
jno
mov
mov
rclb
push
scas
in
repnz
jge
mov
push
mov
outsl
cli
stos
jp
ret
lods
push
stos
popa
ja
and
lods
jmp
mov
sbb
nop
icebp
inc
sbb
seto
out
les
in
jne
sub
inc
jo
out
imul
scas
jbe,pn
jb
jno
and
cmp
and
add
sarl
and
lods
mov
jne
jp
jg
push
add
adc
loopne
xor
out
jno
decb
dec
cmp
pop
or
mov
fs
int3
fsub
mov
cld
popa
imul
mov
bound
xor
jno
jmp
cmp
jns
lods
mov
jno
dec
repz
push
dec
cmp
sbb
xchg
adc
pop
jp
push
std
popa
ja
push
mov
and
push
lods
pop
sbb
jge
push
and
scas
sub
inc
out
jns
mov
inc
mov
sub
mov
movsl
add
pop
lahf
mov
out
pop
push
jp
popa
xchg
inc
loopne
out
jae
fs
shl
push
jo
sub
sub
inc
push
test
pop
mov
jg
sahf
mov
sub
xor
mov
scas
jne
scas
test
cld
jno
dec
push
call
add
cs
imul
mov
push
test
shrl
pusha
int
clc
pop
out
das
jns
scas
gs
jns
push
mov
jne
out
inc
mov
jmp
inc
imul
mov
xor
leave
jo
gs
or
sbb
cmp
sbb
jns
pop
jno
dec
clc
inc
sub
outsb
mov
test
jno
dec
es
mov
inc
push
adc
into
sub
push
inc
fisubrs
jb
pop
fisubs
stos
push
daa
add
aaa
test
sbb
jle
adc
fcmovbe
jns
ds
cmpsb
imul
push
xor
es
sti
jp
gs
sub
in
adc
aas
lods
push
sbb
repnz
in
jno
push
dec
mov
andl
mov
dec
ret
iret
adc
je
out
lcall
xor
imul
scas
jno,pn
dec
mov
jno
inc
mov
notl
mov
movsb
pushf
cmpsb
popf
notb
popa
pop
adc
dec
push
out
clc
mov
pop
shrb
out
cld
lea
aaa
sub
and
aaa
jg
or
cmp
jmp
mov
or
adc
adc
jnp
les
dec
daa
popa
lods
in
test
push
in
push
lock
cli
stos
dec
adcb
sbb
mov
gs
cmc
jg
mov
jp
xor
sub
dec
mov
cltd
dec
sbb
jae
pop
jno
cltd
aad
mov
negb
jno
add
push
call
adc
inc
jno
stc
cmp
jo
pushl
xor
insl
jle
jno
decb
mov
dec
insb
lods
insl
pop
push
popa
imul
lods
jge
jo
andl
lret
and
xor
lods
inc
and
xchg
scas
lret
nop
inc
jg
jmp
xor
leave
jno
inc
cmpb
adc
push
xor
push
int3
dec
push
mov
pusha
xlat
sbb
fadd
jno
in
mov
dec
jo
outsb
in
std
cmp
das
jle
adc
cmp
jo
adc
or
adc
dec
int3
inc
sbb
mov
in
out
insl
test
xor
mov
jns
and
les
or
adc
pusha
jno
dec
mov
xchg
shrb
xchg
sub
or
xchg
adc
jp
jne
adcl
insl
sbb
arpl
inc
inc
xor
mov
jne
add
in
jno
out
test
sarb
dec
pop
insb
adc
in
aad
std
out
jge
dec
cmpb
dec
push
imull
in
jne
sub
ja
or
mov
mov
pop
rcll
pop
sub
xor
push
adc
stc
cmc
adc
dec
push
dec
inc
xor
gs
xchg
int3
nop
outsl
rclb
jne
fsubrs
mov
dec
clc
and
lcall
je
scas
addr16
cmp
call
pop
xor
out
xor
cmp
dec
pop
dec
out
adc
jmp
imul
pmuludq
xor
arpl
push
inc
inc
mov
jecxz
mov
mov
push
pusha
dec
jno
cmpsl
insl
leave
inc
pop
jns
sub
int
shlb
out
decl
das
nop
pop
je
mov
sbb
dec
jno
jmp
mov
push
lock
inc
cmp
jmp
pop
enter
and
das
insl
jno
in
inc
mov
push
inc
adc
adc
cmp
inc
sub
loope
inc
imul
cmpsb
lods
sbb
test
mov
and
mov
sbb
sub
sub
xor
jmp
xor
pop
jno
push
inc
dec
mov
popa
cmp
out
xor
sub
mov
clc
nop
imul
dec
call
fldenv
inc
mov
mov
rclb
push
sub
jno
ss
cmp
pop
dec
cmp
repz
jns
jg
xor
movsb
jge
pop
and
lods
mov
jle
sub
jno
jbe
call
pop
inc
jo
jns
clc
jno
loopne
scas
popa
adc
lods
push
mov
mov
xchg
add
jmp
add
jno
mov
cs
sbb
cltd
sub
push
xchg
shrl
xchg
pop
jge
shll
andl
hlt
idivb
sub
pop
jno
or
lret
adc
and
dec
daa
jno
mov
push
es
mov
sbb
pusha
inc
imul
stc
aaa
and
mov
pop
ss
into
jge
sbb
iret
cmc
jb
loopne
jecxz
lock
in
popa
pop
mov
mov
pop
fisttpl
xchg
jl
xor
cld
sub
push
shlb
rcrb
icebp
push
in
test
js
sub
inc
cmp
pop
adc
adc
mov
add
xlat
int
call
xchg
jge
xchg
mov
popa
add
push
pop
nop
inc
je
mov
push
jne
jae,pn
dec
jno
add
imul
inc
mov
adc
or
lret
xor
ss
les
sbb
test
lock
popa
sub
jno
jle
repnz
xor
or
dec
xor
inc
pop
repz
jecxz
rclb
inc
insb
dec
hlt
cmp
jnp
sahf
pushf
adcb
push
jp
shrb
fsubrl
lods
jno
mov
mov
or
loopne
inc
sub
fmull
mov
jp
sub
adc
adc
mov
adc
lea
imul
push
rcll
in
mov
cli
adc
insl
insb
into
int
dec
or
pop
fdivp
inc
pop
clc
fnsave
mov
ljmp
jno
pop
xor
cwtl
sub
test
dec
shlb
push
sarl
inc
test
adc
adc
jp
stos
jb
jle
xchg
insl
xor
sub
jns
dec
scas
mov
jno
in
xorl
mov
cmpsl
frstor
lret
cmp
loopne
fidivs
cmp
ja
lret
jno
jne
dec
cmp
pop
lea
jmp
mov
jno
arpl
and
enter
cmp
jp
lock
inc
out
dec
repz
cs
nop
iret
insb
push
stc
inc
lock
jle
pop
aas
lret
pushf
jno
jnp
add
push
mov
out
and
ss
mov
mov
inc
int
push
ljmp
jo
movsl
aas
jno
jns
ljmp
inc
jp
push
les
push
jo
shlb
inc
ret
cmp
out
jae
repz
jns
inc
in
fbld
movsb
mov
jmp
dec
lcall
in
or
jno
xchg
fldt
mov
adc
pop
popa
xchg
dec
in
sarb
mov
lea
les
adc
test
rcr
icebp
lahf
inc
jno
cmpsb
add
pop
outsb
movsb
ror
push
fmulp
pop
nop
jge
mov
mov
xor
loope
inc
jno
jne
aam
or
adc
inc
jb
or
jno
add
add
fldl
jle
decl
lods
fadd
fldcw
jg
sub
sub
jb
cmp
inc
lcall
xor
adc
dec
imul
adc
sbb
mov
jno
ss
nop
jno
popa
mov
pop
sub
jno
lea
addr16
jno
test
fs
lods
lds
push
in
mov
sub
push
jbe
in
sub
orl
inc
addr16
das
scas
xor
jno
mov
jno
pop
sti
inc
stos
lret
dec
mov
popa
pop
gs
addr16
enter
push
cmc
push
dec
imul
push
ja
loopne
sub
in
jno
push
jo
pop
ret
nop
movsb
jge
subb
xor
je
sub
xchg
shr
scas
push
mov
inc
mov
lret
dec
mov
ja
test
movsb
popa
dec
sub
xor
lret
cmp
out
call
push
jno
fimuls
mov
test
cmp
mov
jo
sahf
jno
push
call
jno
repz
and
cmp
nop
inc
js
lds
jmp
iret
adc
cmpsl
jno
mov
mov
in
sub
xor
jp
or
jno
ret
jg
xchg
dec
scas
inc
and
and
pop
dec
loopne
cmp
outsb
jg
fdivrs
mov
jno
and
enter
inc
je
inc
mov
mov
fcoms
push
mov
lock
scas
and
aaa
insl
push
pop
mov
mov
jbe
mov
mov
dec
sbb
jnp
bound
sbb
rcrb
nop
shlb
out
cmp
popa
popa
mov
je
iret
mov
in
ret
or
jnp
or
shrb
mov
shr
pop
mov
xchg
in
test
mov
rcll
add
mov
push
imulb
dec
xor
push
push
stos
push
test
mov
inc
jno
dec
insl
pop
fimuls
shrb
dec
in
or
cwtl
std
ja
jno
xchg
jmp
pop
int3
pop
dec
mov
out
imul
gs
decl
pop
enter
scas
aaa
xor
xor
repnz
mov
xor
rcr
pop
and
dec
imul
jno
ss
mov
mov
mov
pusha
push
adcb
je
jno
dec
rorb
jno
repz
test
aam
pop
mov
jne
das
add
ret
dec
ja
dec
scas
fs
sub
jmp
outsl
jns
lods
ret
iret
nop
push
scas
sbb
push
xchg
cwtl
outsl
dec
movsb
scas
sbbb
xlat
fiaddl
mov
lock
dec
add
xchg
arpl
dec
shlb
loopne
in
xor
push
pop
sbb
sbb
inc
mov
pushf
pop
xor
sub
push
mov
xchg
inc
shr
sbbl
adc
lea
lea
sub
fimull
fcomps
out
mov
pushf
int3
cli
mov
jno
xchg
sbb
xor
stos
int
jmp
insl
test
and
sub
outsl
sub
out
pop
divl
in
scas
cs
sti
jbe
lea
cmp
out
xor
nop
cmp
sub
lea
aas
fnstenv
ja
push
mov
insl
sbb
lahf
idiv
pop
scas
icebp
push
jnp
adc
jbe
inc
dec
cmpsb
sahf
jno
dec
add
inc
mov
push
or
data16
pop
ja
sbb
popa
pop
mov
pop
jno
std
xchg
es
fisubrs
mov
pop
jp
inc
mov
inc
mov
sub
jbe
clc
cli
adc
lret
pushl
pop
iret
mov
dec
in
insl
in
lods
push
out
pop
mov
xor
mov
sub
test
pop
xor
cmp
arpl
jne
adc
xor
ljmp
lea
out
jmp
jb
mov
popa
cmpsb
dec
jno
repz
inc
jnp
clc
jae
mov
jmp
dec
pop
addl
cmp
idivl
fldl
xadd
adc
push
push
shl
jno
mov
or
xor
add
inc
loopne
movsb
fwait
dec
daa
jno
fldenv
and
mov
mov
lods
fs
jnp
mov
mov
cmp
sub
pop
dec
out
jno
lods
mov
cmp
add
push
test
insl
rcl
adc
mov
mov
jg
jno
test
dec
or
sub
fisubrl
jmp
sti
das
jle
lock
test
out
js
mov
cs
notb
rclb
push
add
pop
jae
clc
adc
or
mov
and
cmp
movsl
les
or
bound
imul
or
add
pop
int3
lock
adc
mov
lcall
popa
in
adc
test
and
jno
jg
aam
js
fwait
nop
shlb
mov
push
jle
push
pop
in
jns
ja
sbb
add
or
xchg
shl
add
push
jb
or
push
jge
hlt
pop
das
pop
fidivl
sub
cltd
int
out
in
mov
jp
bound
jno
adc
nop
lcall
adc
in
repz
outsl
push
imulb
push
cmp
mov
adc
nop
daa
and
mov
jno
fs
fists
xor
out
jle
cmp
pop
insl
call
or
cmc
add
repz
cmpsl
insl
popf
lret
call
or
in
jae
imul
shlb
inc
adc
pop
push
jg
shlb
das
sbb
push
jge
js
jp
push
jl
in
jbe
jno
and
insl
arpl
enter
arpl
push
dec
mov
and
pop
dec
daa
jg
xor
mov
cmp
inc
mov
jns
xor
push
mov
popf
jns
icebp
lcall
mov
mov
mov
mov
xchg
inc
xor
adc
loop
andb
pop
mov
cmpsl
push
aaa
add
pop
nop
out
idivb
loop
xchg
je
fsts
jb
shr
sub
adc
xchg
push
aas
loope
popa
mov
xor
sbb
cmc
xor
add
inc
lods
mov
mov
popf
jb
jno
dec
aad
pushf
push
mov
push
push
daa
and
push
out
jno
push
adc
pop
push
cmp
inc
scas
cmp
mov
xchg
and
jno
lcall
jg
inc
cmp
cmp
push
mov
fimull
in
ret
mov
jg
in
mov
adc
sbb
arpl
push
mov
nop
jno
inc
xor
mov
sub
adc
shll
adc
xchg
jnp
sbb
cmc
out
stc
mov
mov
loop
xlat
test
xchg
lods
cmp
mov
daa
mov
mov
sub
inc
sub
jne
xor
inc
cwtl
add
xor
or
sbb
cltd
in
mov
xor
fnstsw
outsb
hlt
aad
mov
mov
mov
jno
push
cld
bnd
sbb
xchg
int
stos
aad
pop
xor
idivb
in
seta
cmp
int
mov
push
mov
adcl
cltd
push
incb
xchg
out
xchg
pop
mov
adc
cs
push
addb
pop
outsl
sub
daa
rcll
jmp
pop
popa
iret
lcall
insb
test
push
imul
lcall
leave
xchg
adc
insb
outsl
jns
pop
sahf
jnp
pushf
aas
insb
xor
pop
loope
mov
std
lock
pop
setg
xchg
push
lahf
jnp
push
out
popf
shll
or
jo
xchg
sbb
aaa
cmc
sti
sub
xchg
iret
mov
pusha
fnstcw
adcl
in
aam
enter
jcxz
xchg
push
or
popa
xor
mov
int
inc
sub
adc
push
inc
push
add
push
adc
cltd
mov
dec
jecxz
into
je
push
lods
and
inc
adc
add
ljmp
nop
jnp
jno
pop
icebp
pop
jmp
inc
and
or
mov
ret
sub
push
popf
add
aam
sbb
jecxz
jl
mov
mov
outsb
xchg
scas
or
and
mov
sbb
sub
adc
push
shlb
inc
pop
stos
mov
lret
mov
jno
push
ds
cmp
jno
and
gs
jno
mov
jo
mov
loop
jno
push
dec
or
cmpsb
imul
jns
jle
push
push
scas
cmpl
shll
push
jp
add
xchg
andl
pop
sub
testb
sub
mov
sbb
leave
adc
push
xchg
in
movsb
mov
jns
jno
fldt
jne
jo
popa
xor
add
jno
jg
lret
pop
mov
mov
inc
push
cmpsl
sbb
stos
mov
sub
or
ljmp
mov
sarl
mov
nop
sarb
imul
jno
scas
mov
push
jne
push
repz
push
nop
xchg
jl
das
sub
lock
outsb
cltd
popa
loop
adc
and
pop
hlt
pop
pusha
xchg
inc
call
jb
in
les
and
sbb
inc
add
push
imul
and
xlat
ja
jb
jp
jno
divl
out
sub
out
xlat
jno
pop
adc
mov
cmp
ja
lret
xor
push
in
jne
and
xor
lods
xor
nop
jl
jb
xor
cmp
repz
jno
shlb
mov
ss
sub
out
pop
jmp
push
cmovno
jle
push
cld
sub
adc
icebp
stos
mov
xchg
lcall
pop
cmc
sub
mull
shrb
sbb
dec
daa
dec
test
add
push
shr
inc
mov
lds
mov
jbe
mov
fisubrl
mov
nop
in
outsb
sub
xorb
addr16
xor
repnz
push
pop
push
cmp
xchg
jmp
enter
xor
jnp
pop
shll
jge
mov
push
fisubrl
shlb
daa
faddl
js
pop
dec
dec
jne
mov
aas
adc
adc
push
dec
arpl
mov
pusha
xchg
repnz
fidivrl
pop
sub
inc
push
aaa
popa
or
scas
loope
sbb
sub
xor
rorb
stos
xor
subb
pop
outsl
and
aas
call
imul
dec
cmpsl
jbe
xchg
jns
push
and
pop
daa
leave
popa
inc
fdivl
pop
sbb
shlb
out
push
jo
icebp
ljmp
push
out
cmp
xor
sub
out
hlt
push
gs
loop
push
int3
push
out
sub
lea
xlat
sub
adc
cmp
sub
cwtl
insl
xchg
fs
cltd
push
ret
leave
inc
test
cmp
jne
jb
nop
sub
push
movsb
test
jno
jmp
inc
clc
adc
or
fcoml
push
xlat
jno
call
push
out
inc
test
xor
jno
ss
sbb
push
adc
test
inc
into
jg
jns
fs
pop
push
jmp
popf
cwtl
mov
cmp
les
int
popa
mov
fisubrl
adc
sbb
jp
sbb
jno
mov
lcall
cmp
pop
in
push
repnz
jno
jmp
dec
scas
out
pop
jno
sarl
adc
mov
popa
xchg
dec
arpl
pop
mov
xchg
test
mov
mov
insb
push
jmp
pop
repnz
push
mov
pop
repz
aam
es
andb
xor
andl
jp
insl
cmp
xor
cmpb
cvttps2pi
dec
arpl
push
mov
push
push
enter
nop
cmc
cmp
mov
ljmp
push
imul
jno
sub
mov
dec
gs
xchg
sbb
jbe
dec
or
shll
mov
cs
cmpsl
in
dec
shll
cmp
jecxz
sbb
pop
lods
dec
xorb
out
sbb
pop
xorl
cmp
inc
into
decb
push
adc
jnp
movsl
push
jno
sarl
aam
test
xor
xor
mov
arpl
movsl
or
flds
ja
enter
out
mov
jno
cmp
movsl
jge
cmp
pop
push
jg
imul
pop
xor
scas
fbld
inc
fwait
xor
insb
sub
cmpsl
jae
ljmp
mov
jno
lods
lret
jp
cld
shrb
ljmp
in
call
aaa
sub
dec
and
daa
popa
jp
push
cs
jle
push
add
sub
rcrl
clc
cmpb
cmp
jne
call
loop
and
sub
add
jns
xor
sub
jno
xor
arpl
aas
jno
jb
mov
jno
ret
and
sub
mov
inc
iret
imul
call
ljmp
jno
movsl
leave
add
cwtl
jno
xchg
nop
out
mov
dec
enter
pop
xor
jo
jno
jecxz
cmp
adc
jno
daa
mov
inc
sub
leave
inc
insl
sub
sub
fnsave
aam
push
jg
ret
gs
fdivs
lock
pop
popa
fmulp
xor
adc
out
aas
inc
and
add
scas
stc
enter
cmp
imul
nop
out
add
mov
ret
test
cmp
and
dec
dec
dec
pop
rorb
arpl
std
cmp
js
jns
pop
or
and
std
and
jns
pop
jb
jno
mov
or
addr16
jno
rcrb
push
pop
xor
movsl
jno
outsb
pushf
rcl
inc
xor
dec
and
outsl
fmul
adc
mov
lds
aam
jno
or
scas
push
sbb
xorb
cmpsl
fs
scas
or
pop
in
out
add
dec
clc
jns
inc
loopne
push
cmp
insb
pop
fisttps
dec
jg
loop
insl
lods
add
jb
stos
out
adc
popa
imull
sub
cs
and
push
pop
fdivrs
ret
push
loope
jno
pop
ss
scas
sbb
inc
nop
and
push
cld
sbb
and
gs
xor
mov
lahf
shlb
jno
popf
sub
mov
mov
cmp
cltd
jns
cmc
lret
add
jno
jp
mov
lea
mov
pushf
jno
cmc
jae
push
jno
push
cmp
jno
mov
pop
and
lods
data16
movsl
xchg
cwtl
jge
insl
lret
fisubs
loope
shll
push
pop
repnz
mov
popa
xchg
aam
mov
jae
or
lahf
rclb
test
jae
mov
sahf
shrl
xor
jno
sbb
mov
sarb
pop
aaa
insb
mov
mov
js
repz
xchg
jmp
jne
cmp
jle
mov
pushf
outsb
lcall
fdiv
mov
jmp
ljmp
sub
jns
jno
repnz
icebp
dec
inc
jno
mov
cmc
jno
mov
nop
shll
addl
mov
mov
lcall
dec
stc
popa
or
movsb
or
mov
pop
inc
addb
lcall
push
sub
icebp
into
push
mov
sti
mov
lcall
inc
pop
and
pop
adc
sbb
cmc
pushf
rcrb
jno
xor
sub
fiadds
jnp
or
fmull
sub
dec
and
push
fstps
lds
add
push
test
nop
xor
mov
mov
fstl
stc
xor
push
adc
mov
adc
cltd
int
jns
fcomp
inc
adc
push
mulb
mov
scas
into
shll
push
xlat
xchg
and
icebp
clc
jno
and
nop
inc
in
repz
adc
and
inc
or
mov
jmp
rdtsc
mov
dec
lret
scas
mov
xor
inc
dec
ljmp
out
mov
in
xchg
fisubl
push
lods
or
shrl
into
adc
hlt
nop
xchg
push
xor
sub
ss
push
jecxz
cmp
mov
jno
dec
into
push
test
mov
lea
jno
out
mov
mov
push
jl
jp
push
inc
cmc
out
mov
fincstp
test
jno
fildll
mov
int
arpl
imul
push
sbb
push
mov
pushf
mov
test
sub
xchg
jno
sbb
in
nop
icebp
xor
push
popa
xchg
sub
cltd
sub
fcomps
movsl
push
add
hlt
int
test
int
jno
fimull
cmp
popf
gs
and
loope
push
pop
das
in
jo
insl
jno
stc
add
enter
push
std
addl
mov
or
call
aad
ja
jno
or
cmp
and
aaa
mov
scas
mov
shrb
lret
adc
add
outsl
jb
push
add
test
hlt
xorl
xchg
push
imul
sbb
pop
lock
ret
inc
cmp
ret
fwait
in
pop
or
in
push
push
lahf
dec
jno
aaa
adc
sub
lods
xor
dec
insl
push
mov
adc
sbb
leave
jno
xchg
test
mov
xchg
loop
jno
orb
bound
sbb
shll
repnz
add
add
lahf
stos
hlt
ret
jno
loopne
aad
movd
jge
lea
jbe
cmp
and
pop
mov
les
xchg
push
in
lea
sahf
sub
pop
jno
mov
jle
jno
cmp
sub
sub
aad
xchg
dec
mov
fistpll
nop
fldenv
xlat
sbb
jno
cmpsl
jns
sub
rep
into
ret
cmp
push
add
mov
rcrb
repnz
jle
jno
pop
push
scas
sbb
mov
adc
jg
stos
mul
push
mov
shll
jecxz
mov
jg
jle
jno
inc
sub
movsb
call
jno
mov
inc
xor
push
jno
sbb
xlat
add
hlt
push
jno
negb
or
ficoml
pop
repz
jno
sbbb
jno
in
fucom
in
inc
int
out
mov
repnz
ret
hlt
or
loope
mov
shll
mov
jge
jns
les
sbb
adc
pushf
popf
jno
dec
inc
push
push
iret
mov
and
mov
cmpsl
jl
int
dec
jno
sbb
xchg
orb
xlat
add
fdivs
test
std
fst
scas
push
mov
movsb
jge
mov
lods
xor
push
push
adc
arpl
jge
and
lods
loopne
or
mov
cmpsb
adc
jmp
cmp
fidivrl
jno
xlat
adc
jno
pop
in
fcmovu
sahf
shll
fcom
mov
xor
jp
jecxz
jno
movsl
xchg
cli
inc
jmp
adc
sub
bound
movsl
push
sbb
les
or
mov
cmpsb
and
push
xchg
test
jnp
cli
loope
sti
fs
jecxz
addl
lods
ss
std
scas
scas
data16
jge
push
lret
mov
dec
and
xchg
lcall
fdivrs
int
nop
js
sbb
push
outsl
mov
mov
in
orl
andl
int
lcall
mov
jmp
sub
pop
js
es
push
inc
push
outsl
xor
or
sarb
loop
jno
dec
test
aam
std
pop
inc
jno
jmpw
pop
jle
out
mov
cmpsb
imul
fsubl
es
xchg
nop
aas
loope
das
dec
jb
jge
jnp
outsl
or
push
xor
pop
rcr
aas
add
cmc
sbbl
jb
jle
mov
jno
lret
jecxz
mov
arpl
dec
inc
xchg
push
mov
notb
aam
adc
js
xor
cmp
xorb
adc
std
stc
les
jno
mov
sub
push
in
lds
lret
out
test
mov
mov
scas
jecxz
scas
push
push
imul
lret
mov
pop
push
cmc
stos
jno
fnstcw
shl
mov
push
push
jecxz
adc
sbb
bound
push
jne
adcb
into
lods
pop
add
mov
xchg
ss
mov
mov
andb
and
sbb
push
dec
jno
and
sti
pop
icebp
call
pop
lods
mov
imul
jecxz
rcl
popa
pop
mov
repz
adc
icebp
cmp
pusha
adc
and
cmc
loopne
cmc
jmp
rcrb
sub
popa
gs
jnp
jno
mov
xchg
ljmp
movsb
jae
aad
or
sbb
andb
imul
jno
adcl
jno
xlat
mov
shll
fnstcw
inc
jbe
or
jg
nop
ret
push
aas
arpl
cld
mov
inc
gs
sti
push
cwtl
lcall
fidivrl
or
lods
push
xchg
cmc
sbb
movsl
inc
add
adc
add
rorb
lcall
loop
jle
jno
enter
pop
push
dec
ficompl
insl
repnz
gs
dec
scas
dec
xchg
out
mov
inc
or
fnstenv
hlt
fdivs
mov
push
xchg
or
lret
mov
out
shll
cli
popf
jno
sti
int
cmpl
aad
and
repnz
stos
mov
push
xchg
orb
pushf
or
cmp
int3
ja
sahf
sbb
imul
jno
sub
xor
push
cmpsl
mov
mov
and
sbb
stc
gs
iret
mov
cmp
xor
mov
lds
ffreep
int3
jno
add
adcl
jno
sbb
dec
lahf
sub
adc
lods
adc
cwtl
repz
arpl
js
jno,pn
adc
lcall
nop
jbe
push
fs
sahf
jno
mov
mov
mov
arpl
sbb
negl
dec
mov
adc
jno
xor
mov
nop
push
sbb
jbe
sti
fwait
mov
sub
shll
xor
loope
nop
test
gs
scas
jno
mov
add
jno
cs
xchg
or
xor
fwait
jbe
pop
push
test
jno
dec
lods
aam
pop
adc
scas
cmp
jl
loopne
rcrl
iret
repnz
rolb
ja
jg
mov
je
mov
mov
cwtl
jbe
ret
push
lahf
cmp
popf
inc
jg
mov
jecxz
or
shr
jno
dec
inc
lock
cmp
cmpsl
mov
mov
test
lds
xchg
aaa
mov
lods
mov
jl
divl
jno
xchg
lea
mov
inc
fcomps
inc
inc
push
or
adc
mov
pop
jns
test
jp
or
lods
push
xchg
and
mov
popf
fcompl
shlb
aad
addb
xchg
push
xlat
inc
adc
rcll
fcmovnbe
bound
mov
sbb
nop
mov
inc
pop
in
pop
pop
movsl
jne
sbb
loopne
stos
cmp
push
xlat
fstl
pop
popa
ljmp
sub
incb
and
inc
cmpsl
push
inc
jmp
insl
xor
jno
mov
jno
fwait
jnp
movsl
outsb
adc
pop
scas
sbb
pushf
mov
hlt
mov
in
mov
sar
or
jno
adc
or
out
scas
out
ljmp
cltd
cmpb
xchg
sbb
hlt
mov
mov
std
jp
jno
or
shlb
dec
int3
movsl
push
mov
sub
fistpl
xchg
jge
xor
add
lret
sbb
ror
adcb
repz
add
loop
ret
nop
mov
cmpb
push
xchg
fstpt
outsb
xchg
icebp
mov
mov
jle
fildl
jno
imul
cmp
dec
repz
in
insb
fmulp
sub
stos
or
idivb
mov
fnsave
ret
mov
int3
scas
cmp
cmc
inc
sbb
jno
and
pushf
jno
stc
cmp
pop
or
sub
cmpsl
jo
enter
mov
xchg
mov
xchg
stos
mov
or
fcomps
rcrl
sti
push
mov
jecxz
in
jno
sbbl
jo
cmp
jb
jno
aad
lahf
add
xlat
jno
iret
cltd
mov
jmp
inc
adc
pusha
leave
and
cmp
insl
mov
push
xor
stos
mov
mov
mov
sbb
popf
jno
mov
pop
clc
icebp
and
daa
xchg
fnstsw
mov
mov
shrb
scas
cmpsb
push
fisubs
and
pop
imul
push
and
cmpsl
out
sbb
lahf
out
push
jno
mov
lcall
mov
push
rcl
pop
cmp
push
add
jae
leave
sbb
les
xchg
mov
or
push
dec
and
cmp
push
jno
cmp
fdivs
pop
nop
dec
adc
sbb
popa
mov
outsb
mov
call
pop
out
lret
cmp
and
or
inc
jo
jg
in
xor
and
popa
je
popa
fists
decl
and
loop
insl
inc
rol
notb
cmpsb
fcompl
pop
call
cmp
ds
mov
popf
xor
xchg
pop
imul
push
push
enter
pop
pop
movsl
sub
inc
sub
push
insl
pop
xchg
ficoms
es
pop
nop
loope
xchg
popa
mov
mov
inc
xchg
xor
sahf
in
std
adc
pop
in
push
popa
mov
or
stos
mov
popa
cld
jno
dec
adc
mov
mov
ljmp
aad
pushf
mov
mov
mov
push
ret
or
scas
xchg
lahf
adcb
popa
xor
gs
rcrb
mov
in
mov
and
mov
es
mov
mov
shll
pop
cmpsl
imul
mov
and
ss
mov
jbe
xchg
pop
jg
push
stc
jno
fcompp
ret
xchg
mov
es
and
xor
dec
mov
jno
pop
mov
push
jno
ret
lcall
sbb
xor
push
push
cmp
subb
out
shlb
nop
jp
xchg
or
jg
aaa
popa
and
das
outsl
out
insl
out
shr
packuswb
adc
ljmp
in
in
jno
mov
repnz
xchg
inc
jno
cmp
ret
addr16
aas
add
pop
mov
inc
jbe
pop
cmpsl
xchg
jno
ror
jmp
stos
fcmovbe
pop
jno
add
mov
stc
aad
add
lock
jns
xlat
cwtl
cmp
mov
xchg
in
push
and
xor
sbb
jno
mov
fwait
inc
ret
jno
imul
sti
xchg
jno
jmp
push
mov
lods
test
fstps
leave
nop
fidivs
and
mov
mov
cli
mov
pop
cmp
dec
repz
gs
jae
gs
or
lret
cmpsb
sbb
sbb
int
pop
jno
pop
lds
sbb
lods
fcomps
jg
in
or
mov
xor
sub
test
pop
pop
sbb
add
in
jno
mov
addb
stos
mov
mov
sub
rclb
mov
lret
cmpsl
jno
clc
mov
xor
jg
pop
push
xchg
ficompl
jno
scas
mov
aad
adc
jno
outsl
push
jmp
sbb
repnz
mov
mov
cmp
push
ljmp
or
or
add
punpckldq
jno
mov
in
jmp
jno
mov
push
enter
jno
sbbl
jno
mov
decl
popa
aam
lret
gs
stos
add
add
test
les
popa
jno
imul
jno
sub
repz
jge
and
jno
mov
adc
cmp
xchg
cld
push
and
mov
add
aad
pop
pop
lret
jno
or
push
inc
sahf
loope
jno
stc
sti
les
lcall
je
scas
ficompl
pop
leave
cwtl
into
inc
cmpl
popa
pop
in
push
mov
add
mov
sbb
sub
and
jno
push
adc
out
int3
aad
pop
fimuls
add
lret
dec
out
xor
addr16
insb
testl
mov
or
pushf
arpl
add
pop
pushf
cmpsb
cmc
int3
pop
mov
xchg
lret
sbb
das
mov
jno
lcall
repz
jno
pop
int
jg
imul
pop
js
jo
xchg
test
ss
out
push
jno
and
or
dec
add
insb
js
into
fdivs
inc
jg
sarb
pop
int
xlat
pop
pop
data16
mov
in
pusha
add
inc
aas
mov
push
aad
scas
jno
inc
pop
add
xchg
add
add
jno
out
std
xchg
int3
pusha
mov
or
imul
cmpb
cmp
and
jnp
insb
in
jno
das
jo
nop
rorl
jno
cmp
adc
cmp
push
dec
or
jno
jmp
andl
in
sti
push
in
pinsrw
mov
jp
fldcw
jno
test
and
fcoml
inc
mov
imul
or
jno
xchg
neg
cwtl
stos
hlt
dec
leave
add
mov
int
sbb
push
sub
fdivs
cmp
stos
hlt
jecxz
out
mov
lods
and
mov
movsb
jno
sub
cmpsl
jle
jno
mov
mov
pop
cmp
in
sub
cltd
or
jle
mov
icebp
inc
mov
popf
and
bound
rcrb
clc
pop
dec
xchg
jno
fcomps
in
dec
in
and
sbb
xchg
mov
mov
push
mov
sahf
addb
cmp
jge
lahf
bound
jno
bound
jmp
divb
jno
xchg
in
rcll
lret
pop
outsl
pop
adc
stos
push
out
mov
xorl
stc
xor
lds
cmpsb
jne
cmc
add
mov
pop
imul
call
lret
lock
mov
adc
clc
sarb
movsb
je
sub
push
aas
and
inc
inc
mov
mov
popf
mov
adc
sub
push
roll
out
xor
std
dec
push
pop
testb
add
adc
jno
mov
popf
mov
xor
cs
cwtl
fnstsw
in
cli
and
rcr
inc
lds
add
stos
mov
xor
jno
xchg
mov
push
cmp
xor
popa
cs
sbb
mov
lea
jno
es
mov
lds
mov
push
sbb
sbb
jecxz
jno
add
mov
ljmp
mov
adc
in
jno
and
jno
xor
mov
in
fidivrs
rcll
mov
mov
adcl
or
sbb
xchg
xchg
jno
jbe
int3
popf
outsb
test
mov
ss
dec
or
mov
pop
add
jno
and
js
aaa
add
jno
push
orb
sub
push
sbb
cltd
add
jl
inc
and
nop
out
test
mov
add
shlb
movsb
sarl
xchg
inc
pop
adc
jns
or
pop
fwait
cld
es
jmp
xor
inc
repz
xor
push
test
mov
aam
push
cmc
sbb
xchg
aad
push
xor
shll
cwtl
shll
int3
xorb
jno
xchg
pop
clc
mov
inc
jecxz
sub
add
arpl
jno
jge
das
bound
xchg
jno
jb
xchg
or
divl
ficompl
sbb
mov
mov
stos
push
popf
pushf
adc
jno
out
lcall
cmp
mov
xchg
imul
push
and
xchg
in
aas
imul
cmpsl
and
test
nop
in
sahf
xchg
add
xchg
movsl
mov
dec
jno
mov
enter
addr16
pop
cmp
push
frstor
and
insb
and
dec
stos
in
add
sbb
jb
push
inc
cmp
das
repnz
pushf
sub
outsl
pop
testb
aas
int
mov
inc
imul
icebp
sub
aam
mov
jno
inc
push
fwait
icebp
push
popf
hlt
xor
aam
cmpb
or
jmp
sub
fisttpl
cltd
outsl
aad
xlat
jno
adc
sbb
push
out
mov
std
push
sub
pushf
fldenv
mov
stos
cld
push
add
jno
mov
es
cld
sti
jno,pt
outsb
jp
xchg
and
pop
push
xlat
mov
push
xchg
aaa
inc
cmc
idivb
sub
push
sub
mov
xchg
push
mov
mov
insb
in
test
outsb
sarl
mov
lea
test
rolb
xor
jecxz
xor
ret
icebp
aad
mov
std
je
mov
fadds
test
cmpsl
push
stos
icebp
push
ja
push
push
add
mov
jno
xchg
adc
sbb
ret
inc
roll
add
or
out
mov
movsl
imul
push
or
cmc
sbb
loope
testb
pop
shrl
and
int
xor
inc
xchg
jle
jo
into
loopne
pop
dec
nop
arpl
adc
jb
in
sub
repnz
fdivrl
imul
sbb
cmp
sbb
mov
push
fwait
popa
call
xchg
jbe
fs
push
sbb
add
jl
imul
mov
loope
andl
icebp
scas
mov
fadd
pop
stos
dec
jno
aad
inc
cmp
and
movsl
out
cld
jno
mov
sub
aas
push
arpl
jo
insl
in
cmp
adc
popa
xor
or
cwtl
mov
call
jno
fimuls
lahf
jecxz
add
sti
aas
sbb
lods
in
dec
stos
push
add
adc
insb
ja
sbb
jle
lods
clc
pop
cmp
loop
mov
lods
fldcw
pop
push
dec
cmp
jo
add
jne
repz
lock
in
mov
scas
test
dec
add
xchg
loop
fldl
sbb
or
repnz
mov
xchg
jg
popa
imul
push
aad
cs
jo
or
subb
push
dec
xor
xchg
scas
sub
ret
jecxz
lods
or
loopne
das
jb
lret
fwait
pop
mov
jp
je
scas
ret
jl
dec
sub
push
sahf
and
sbb
or
nop
ret
repnz
push
mov
or
popa
les
pop
fnstsw
les
xor
mov
push
dec
ret
jbe
mov
jno
mov
dec
int
mov
rcrb
jge
js
popa
sub
or
outsl
imul
hlt
add
pop
int
mov
or
sarb
adc
enter
pop
jg
cli
divl
es
cmp
enter
bound
adc
dec
and
push
mov
cmp
sub
setp
imul
mov
js
dec
faddl
cmp
dec
xchg
jecxz
push
jns
adc
and
xchg
adc
pop
mov
adc
into
das
scas
mov
mov
lock
pop
mov
inc
xchg
js
dec
jno
dec
lock
dec
subb
popf
aad
mov
outsl
and
testl
popa
nop
pop
data16
jno
aaa
les
pushf
ret
out
mov
das
jns
fimuls
adc
dec
mov
sub
decb
cmp
push
popa
cmp
lods
inc
push
cmp
out
lock
sub
ficoms
inc
or
push
sub
add
and
into
out
adc
mov
cli
push
scas
decb
fistpl
mov
mov
outsl
cltd
adc
xchg
gs
cmc
pop
aas
xor
add
je
nop
lods
movsb
mov
gs
scas
and
and
cmp
pop
aad
mov
jne
imul
out
dec
popf
icebp
add
movsb
push
push
pop
add
cmp
inc
mov
das
out
cmc
adc
es
popf
in
fdivp
rclb
js
xchg
shlb
push
mov
repz
pop
push
outsb
adc
ljmp
adc
insl
test
stc
jo
out
mov
out
dec
push
and
sbb
aad
in
xchg
xlat
stc
xor
mov
pop
les
fadd
jb
jno
in
adc
sbb
lock
add
and
js
outsb
jno
out
pop
sbb
cmc
adc
add
sbb
mov
pop
insl
nop
mov
test
cmp
stos
add
fsubs
popa
fprem
jns
jecxz
call
daa
pop
sub
and
xchg
jbe
outsl
popa
cmc
stc
scas
mull
mov
inc
mov
ss
jno
popf
mov
mov
das
mov
xchg
xchg
jno
sahf
mov
xchg
add
lods
mov
jno
xchg
outsb
in
jmp
push
sub
push
inc
sbb
xchg
ret
dec
cmpsb
cmc
mov
lahf
mov
lret
ja
push
jno
loope
xchg
add
sub
jno
or
loopne
jno
addb
push
jno
insl
cmp
fcmovnbe
std
in
mov
cli
sub
outsl
push
sbb
add
push
jno
in
push
sub
pop
push
mov
sbb
sbb
rolb
fsub
cmp
pop
hlt
lret
icebp
mov
jno
int3
cmpsb
cmp
movsb
shll
jno
fidivrs
rclb
lds
pop
pusha
ds
adc
popf
int
js
imul
pop
sahf
in
fldenv
notb
jno
jecxz
rclb
ret
sbb
bswap
cmp
lcall
out
lret
xlat
jno
mov
mov
rcrb
fadds
movsl
aam
push
lret
lock
pop
cmp
jns
daa
dec
jno
imul
dec
int3
mov
mov
rcrl
adc
into
ret
cmpl
xchg
cmp
mov
fs
mov
bound
mov
push
sub
sti
mov
negl
xor
push
jl
clc
out
imul
mov
mov
fwait
inc
and
jno
mov
movsb
mov
icebp
dec
stos
lods
iret
jmp
aaa
xor
ljmp
je
jno
cmp
pop
cmpsb
dec
cs
jnp
bound
mov
push
pop
jno
fidivrl
xor
ficoms
jmp
push
sbb
stc
enter
xor
fsubl
pusha
jne
in
jno
mov
mov
cmpsl
sarb
aaa
lock
ret
je
push
jns
dec
sub
gs
test
cmp
sbb
stos
push
push
lods
jno
and
enter
call
jno
dec
mov
incb
lret
push
js
bound
cmp
jmp
inc
xor
jno
push
cmp
dec
xchg
jno
rol
sub
push
pusha
pop
arpl
jge
sub
and
scas
adc
mov
mov
adc
jl
pop
cmp
cmpsl
das
jle
test
or
adc
les
scas
jns
inc
lahf
loop
inc
cmp
mov
push
sub
cli
ret
out
pop
call
data16
push
daa
leave
jo
jno
jmp
ret
mov
push
jp
adc
fisubrl
mov
dec
jno
mov
movsb
notb
pusha
jle
or
xchg
push
iret
shr
nop
fidivrl
pop
pop
rclb
scas
mov
xor
les
add
jl
bound
jle
ds
std
jnp
dec
mov
lcall
jno
pop
inc
jmp
adc
or
cmpsb
dec
sbb
jl
scas
movb
cmp
xor
mov
sub
shrd
jno
jne
aad
jno
pop
push
sti
cmp
aas
jno
sub
sbb
mov
or
pop
mov
and
cmp
sub
nop
jmp
add
cli
int3
inc
stc
push
scas
or
adc
test
insl
shlb
nop
sub
mov
sub
xorb
rep
or
sbb
jno
in
push
mov
push
add
or
into
lock
sti
addr16
pop
subb
jmp
lea
cwtl
push
sbb
fcomp
aaa
ficomps
jno
cltd
ret
arpl
xor
cmp
jno
xor
lock
rorb
inc
jb
dec
mov
jno
imul
cmp
xchg
out
xchg
jl
mov
ret
and
jno
mov
mov
outsb
jp
aam
sub
pop
dec
into
std
lods
aad
inc
popa
pmaxsw
xor
mov
lret
jmp
mov
scas
mov
fmuls
int3
jne
cmp
jl
daa
push
bound
xor
jge
test
cmp
jecxz
mov
cmp
mov
into
stc
add
cs
test
js
out
cmpsl
mov
xchg
mov
addl
mov
lds
int3
dec
stos
fsubrs
jae
je
adc
jae
adcl
adc
mov
jno
sbb
and
xlat
int
popaw
sbb
test
and
mov
into
push
sbb
jno
out
call
js
leave
jno
addr16
rorb
jle
adc
xchg
mov
pop
mov
insl
sbb
idivl
sub
and
cltd
pop
in
mov
decb
pop
mov
xlat
mov
pop
push
insb
pop
jne
pop
dec
mov
int
stos
and
xor
loop
cmc
xor
out
jno
sub
adc
sahf
jno
sub
xor
shlb
dec
push
gs
loop
out
out
les
mov
fidivs
jno
gs
xlat
add
push
sahf
inc
jecxz
pushf
xor
jmp
mov
inc
cmpb
jno
int
cmp
and
jno
out
xchg
sar
jo
cmp
imul
out
jno
pop
int3
daa
gs
and
jle
cmp
jge
fistps
mov
jnp
add
mov
insb
pop
cmp
cmp
jno
stc
sub
adc
jae
dec
addr16
inc
fcom
aaa
mov
into
jno
movsl
std
sub
jnp
movsbl
ja
mov
push
jge
mov
mov
push
pop
insb
daa
shrb
enter
cmp
pop
lret
cmpb
out
fs
lcall
jno
int
out
push
cmp
out
mov
push
in
jno
ljmp
data16
push
and
imul
sub
jl
mov
into
das
test
jns
outsl
mov
xchg
jno
decl
jge
xchg
lea
pop
adc
sbb
sub
push
xchg
push
add
cmpsb
lds
repnz
sub
hlt
popw
scas
neg
stc
adc
mov
shrl
jno
add
aad
ret
jno
mov
sbb
and
decb
daa
gs
lret
out
nop
jecxz
pop
cmpsb
mov
arpl
pop
jle
add
sub
leave
inc
jno
mov
in
jno
mov
dec
jge
sbbl
cs
ss
sbb
into
mov
xor
rol
mov
iret
popa
pop
mov
dec
or
push
mov
sbb
adc
push
lock
push
pop
pop
in
dec
popa
fsubrs
and
inc
aad
push
xchg
lea
pop
pop
adc
or
dec
fistl
nop
gs
pusha
out
xchg
adc
mulw
cmp
jno
mov
mov
jno
and
jmp
aad
cmpb
dec
ljmp
xor
cmp
test
mov
and
jle
je
shrb
lcall
sbb
sbb
adc
mov
pop
jno
sub
and
inc
jno
int
dec
sub
cs
inc
ret
and
fcomps
ret
inc
subb
jg
ret
mov
jnp
shlb
aad
insb
mov
push
jg
mov
xchg
scas
es
jno
sbb
nop
cmp
loopne
hlt
enter
mov
popa
pop
out
pop
or
jno
fcompl
adc
pop
mov
loop
out
fsts
dec
dec
in
mov
mov
int3
pop
call
xchg
std
adc
inc
das
xor
cmp
inc
imul
or
jb
jae
les
jno
push
dec
push
cmpsb
xchg
sbbb
nop
cmpl
jno
sub
mov
adc
scas
push
adc
popa
xlat
xchg
jne
mov
shrl
and
xchg
es
les
dec
add
mov
pop
testl
sbb
popf
mov
mov
inc
and
and
inc
addr16
jns
rcll
movsb
clc
add
jl
and
sub
or
cmp
cmpsb
test
enter
scas
das
popa
mov
mov
not
xchg
shrb
jne
mov
pop
jno
loop
jo
jns
pop
xor
jno
add
out
out
jno
out
xor
push
int3
repz
hlt
push
or
lea
aad
push
fcomp
jns
bound
shlb
sbb
jg
dec
pop
mov
push
les
out
das
lock
insb
xor
adc
mov
sub
or
cmp
mov
out
out
jl
int3
imulb
jno
clc
cmp
jmp
out
fnstsw
sub
insb
xchg
dec
jae
inc
out
pop
in
addr16
push
push
mov
int3
out
inc
clc
push
shrb
psubusw
mov
dec
jns
sub
les
inc
mov
jno
push
adc
ss
and
add
jno
cmp
out
xor
dec
mov
mov
jno
mov
xor
jno
scas
pop
pop
push
add
rcrb
ret
or
push
jge
or
and
dec
popf
jns
pop
shrb
dec
dec
jge
push
jno
imul
or
aas
jno
pop
inc
testb
test
jnp
shlb
xchg
sub
xor
insl
es
lock
mov
and
cmpsb
fmuls
add
popa
pop
out
nop
sub
loop
jns
hlt
das
and
add
pop
jg
aas
jno
popa
aam
loope
shrb
pushw
sub
das
and
insl
out
dec
mov
mov
imul
push
jnp
lods
test
adc
in
jp
jno
jl
dec
pop
addr16
jno
xor
out
imul
push
popa
push
and
or
jp
popa
hlt
pop
xor
mov
aaa
lock
pop
rorl
loop
and
out
sub
xor
jl
cld
pop
adc
push
jle
ja
and
pop
pushf
xor
adc
or
fs
adc
into
dec
and
pop
popa
jno
cld
cmp
ficoms
sub
insb
xor
push
repnz
lock
jnp
in
jns
jno
sbb
pushf
mov
out
pop
imul
in
subb
sub
push
idivb
add
ss
sub
gs
adc
out
jle
lcall
lahf
jg
jno
lret
push
push
jo
scas
lret
and
dec
dec
mov
lea
rcll
jns
sub
push
jbe
jno
rcl
dec
add
cmp
call
dec
adc
mov
mov
daa
jns
xor
mov
shll
scas
sbb
aad
sbb
cmpsl
mov
outsb
or
adc
and
movsb
test
mulb
mov
pop
shlb
xchg
push
mov
insl
stos
subb
pop
out
jg
out
pusha
enter
je
loopne
mov
mov
pushf
xor
sbb
fwait
jmp
lcall
loop
sub
xchg
pop
rcll
jmp
jae
aad
jns
xor
push
ret
jno
sbb
shrb
inc
int3
jno
fucomi
shll
cld
push
rorb
cmpsl
ret
cltd
xchg
insl
cmc
sub
popa
lods
jo
inc
cmp
aas
cmp
inc
mov
cwtl
and
js
jnp
in
push
lock
pop
and
jno
in
fdivrs
cli
inc
or
sbb
jae
push
sub
sbb
and
aam
scas
jno
sub
jno
out
push
out
loopne
fs
jno
mov
negb
int
rcl
int
movsl
hlt
setbe
jno
cs
rol
push
popa
and
pop
jge
add
subb
sbb
sub
pop
mov
cmp
jmp
push
adc
je
adc
gs
mov
arpl
dec
cld
daa
rorb
dec
hlt
cmpsl
insl
sub
nop
daa
movsb
jecxz,pt
jg
push
adc
outsl
fmul
inc
pop
cmpsb
adc
icebp
gs
faddl
in
inc
jno
lcall
lock
push
loopne
mov
mov
or
pop
or
std
clc
iret
inc
arpl
mov
push
sub
insb
fs
lret
nop
daa
rclb
pusha
fnsave
mull
jno
sbb
jns
lods
nop
sub
mov
and
insb
jge
add
sub
nop
imul
add
jbe
mov
adc
mov
pop
pop
xorb
pop
mov
adc
adc
dec
push
insl
inc
jp
test
cld
fsubrs
fisubs
test
jge
xchg
outsl
js
in
inc
cs
mov
pop
xor
xor
dec
jno
and
xor
jp
addr16
rcll
lea
mov
push
jno
test
test
bswap
mov
insl
cld
jns
cmp
push
cmp
xchg
jge
jno
js
dec
pop
cmpsb
repnz
popa
out
nop
gs
imul
rorl
pop
addl
call
xor
jns
ret
lods
jno
mov
shl
jg
bound
sub
mov
fs
push
popa
je
jns
mov
pop
sub
lret
inc
add
mov
fmuls
dec
in
loopne
fwait
ja
repnz
lods
dec
std
dec
jmp
push
int
div
fldl
push
jno
outsb
aas
jle
imul
pop
sub
jno
pop
das
pop
in
mov
and
add
jo
in
lea
hlt
out
push
mov
jae
push
ljmp
in
jns
jg
cld
push
cmpb
orb
xchg
jmp
stc
test
fsubrl
insl
pop
insb
mov
add
outsb
popa
push
sbb
ja
gs
jno
int3
push
cmp
imul
fwait
arpl
sub
dec
push
jp
inc
mov
loopne
and
adc
fsubrs
popa
push
fcompl
sub
icebp
mov
out
call
out
push
stos
mov
inc
repz
cmpsl
leave
jae
adc
jno
push
mov
int3
push
inc
dec
mov
imul
popa
cld
adcl
xchg
mov
add
clc
and
xor
cmp
and
mov
mov
pop
movsl
sbb
je
xchg
cmp
pop
mov
mov
pop
aas
cld
mov
sub
fisubl
pop
in
arpl
adc
push
dec
ret
cmp
gs
push
sub
push
add
adc
cmc
jecxz
inc
je
push
xor
cmp
cwtl
add
dec
adc
inc
mov
jae
add
xor
and
lock
fadd
sbb
jp
sbb
jge
inc
mov
imul
fs
dec
pop
and
inc
sub
cwtl
mov
and
scas
int
dec
cmpsl
adc
xchg
call
loopne
jmp
rclb
or
out
add
jno
jl
mov
mov
popa
mov
popa
dec
jno
or
xchg
out
lret
call
stos
cmp
popa
inc
dec
mov
xor
push
jno
repnz
push
pop
and
mov
inc
pop
in
xchg
fidivs
push
adc
movsl
jb
je
loop
loope
mov
ret
push
push
rcl
mov
sbb
jle
jo
jecxz
insb
scas
scas
pop
cmc
push
hlt
int3
pop
in
adc
cmpsl
mov
scas
fisubrl
and
jge
sbb
xorl
pop
pushf
jle
cmp
xor
popf
aas
sti
mov
aaa
jno
scas
pop
lds
movhlps
sub
dec
and
cmpsb
jno
ret
pop
add
jno
xor
repz
push
and
xchg
lods
cltd
jno
push
arpl
rol
xor
ret
ja
das
mov
pop
repz
push
jmp
scas
fdivs
dec
leave
daa
push
mov
mov
sarl
jno
clc
fwait
sbb
nop
pushf
imul
pop
jmp
aam
aas
sub
jb
iret
cmp
sahf
mov
mov
fldcw
mov
mov
cwtl
cmc
xchg
stos
test
repz
sets
lds
xor
and
mov
stc
xor
dec
aas
into
cld
pop
jbe
jns
js
movsl
aas
cmpsl
or
dec
daa
xor
in
adc
jge
ljmp
das
pop
pop
cmp
fimuls
ret
sbb
pusha
test
jno
mov
lea
mov
adcl
cmp
jnp
pop
jno
jmp
enter
sbb
mov
ds
cmpsl
es
jno
lea
cli
scas
popa
cmp
in
out
cmpb
es
outsl
jno
and
mov
stc
stc
jno
jmp
dec
out
scas
jno
push
loop
shlb
fs
and
out
daa
cmp
insl
mov
arpl
pop
imul
mov
pop
mov
test
sub
inc
mov
imul
cmp
push
jne
push
outsb
out
rcrb
ljmp
int3
push
aas
cmp
xchg
jle
dec
pop
clc
daa
cmpsb
push
aaa
xor
lds
adc
push
cwtl
jb
addr16
inc
inc
fnsave
or
xor
push
orb
xor
dec
xor
push
adc
mov
xchg
aaa
and
in
aam
sub
adc
mov
shl
push
mov
push
aad
dec
and
jno
or
pop
fimuls
lods
je
cwtl
mov
xchg
cli
mov
dec
outsb
mov
ret
scas
sub
shrb
mov
xchg
cmpsl
fdiv
leave
jne
popa
scas
cs
jo
jns
sub
mov
in
inc
inc
dec
jle
insl
sbb
jno
add
push
les
and
in
imul
lock
cmp
jmp
adc
fstpt
popa
xor
loop
shlb
jmp
in
fmuls
shll
cs
dec
xor
pop
xlat
loopne
mov
aaa
and
into
pusha
repnz
mov
idivl
sar
in
lock
loopne
jge
cmpsb
cmc
jle
jmp
aad
push
cmp
test
dec
scas
push
out
inc
aas
sub
mov
xor
jp
addr16
cmpsb
sub
lret
push
flds
nop
push
shrb
in
imul
jno
push
inc
cmp
pop
loop
popa
adc
pop
xor
xchg
scas
push
inc
or
lock
cmc
jo
xor
adc
sub
and
and
cmp
lods
mov
and
popa
aaa
lcall
jno,pt
mov
mov
negl
imul
inc
mov
pop
push
pusha
test
mov
movl
jns
cli
rcrb
jno
les
push
push
inc
or
outsb
pop
or
sub
xor
lock
jo
jns
jns
repz
into
sub
sub
mov
dec
insl
pop
xor
mov
aas
ret
imul
lods
adc
xchg
mov
jno
pop
mov
mov
or
xchg
jb
repz
jbe
adc
push
push
mov
jno
aad
inc
insb
sub
aas
movlps
cld
mov
cs
test
dec
add
push
pusha
sub
lods
push
jle
out
das
divl
lock
mov
mov
cmp
pop
and
and
fidivs
nop
ds
push
and
sub
nop
addr16
xchg
jns
mov
sub
adc
cmp
cmp
add
or
jns
fistl
cmp
jo
out
mov
gs
lock
call
cmpsl
add
cld
ds
into
jmp
and
hlt
push
jno
pushf
dec
addr16
inc
dec
jno
add
popa
xor
movsb
mov
in
xchg
push
jmp
stc
testb
mov
sub
pusha
rcll
adc
inc
and
push
dec
push
test
xor
pop
and
sub
scas
push
pusha
aad
adc
and
push
cmp
sub
push
mov
ja
rclb
dec
cli
mov
jo
jno
sub
xlat
or
fcomi
mov
out
sbb
fwait
jns
pusha
popa
cmp
js
lock
mov
push
cmp
repz
add
pop
hlt
jmp
sub
aad
sub
out
fsubrs
cld
push
jmp
inc
push
sub
sbb
sub
fcompl
stos
rolb
jno
aas
loopne
pop
mov
jg
popa
sbb
pop
xor
sbb
inc
pop
call
loope
and
sub
sub
fsub
bound
fdivrs
sbb
pop
mov
gs
push
imul
out
outsb
gs
mov
lods
sahf
in
push
xor
adc
ficoms
pop
inc
sub
pushl
and
jno
inc
inc
bound
in
sub
adc
daa
jo
jo
sub
sub
aas
movsb
addr16
inc
push
fucomp
int
in
pusha
int3
xor
inc
pop
int3
sub
testb
divb
repz
jmp
lahf
or
push
fistl
int3
sub
sub
imulb
and
ja
fwait
int3
cmp
arpl
nop
push
jge
jns
lods
stos
in
cwtl
jg
nop
ja
out
scas
imul
outsb
jno
mov
jnp
fwait
mov
lds
mov
xchg
out
jno
cmpb
push
xlat
sbb
pop
and
aaa
mov
adc
xchg
lcall
mov
dec
add
push
cmp
adc
imul
shll
mov
adc
mov
adc
and
sahf
pusha
and
scas
sbb
imul
fldl
cmp
adc
ja
sub
push
sbb
mov
mov
test
hlt
or
aas
pop
in
imul
and
jno
bound
fimull
sti
cmpsb
out
and
jno
in
or
push
xchg
scas
scas
lock
addps
scas
out
xchg
dec
sbb
pop
out
incb
gs
mov
popa
or
outsb
dec
jno
dec
lcall
movsb
into
inc
shll
in
mov
je
ror
lcall
push
add
mov
add
sub
jnp
adc
jmp
fwait
ljmp
inc
sbb
loopne
daa
jmp
jne
xor
mull
out
pmaxsw
sbb
pop
pop
xchg
negl
fdivrl
jae
inc
pop
adc
or
scas
sbb
jae
dec
nop
jno
aad
push
push
inc
ljmp
popa
cmp
nop
cmpsb
mov
mov
inc
inc
and
inc
test
lods
xlat
push
int
dec
jge
sbb
call
fcoml
mov
enter
insl
cmpsl
imul
dec
pop
daa
imul
jno
mov
cmpsb
sub
jge
in
imul
or
inc
mov
pop
stos
add
inc
cmpsl
sahf
movsl
lahf
das
adc
or
cld
jne
std
jno
int
stc
pop
mov
outsb
repz
out
xchg
fwait
jg
sbb
into
fisubl
sub
adc
cld
dec
mov
mov
iret
out
inc
add
in
xchg
js
jns
mov
pop
mov
mov
scas
adc
jbe
push
xchg
push
fisubl
cmpsl
fstpt
sbb
xchg
xchg
sahf
cs
mov
test
push
push
adc
jno
popf
and
iret
mov
daa
adc
sbb
into
sahf
inc
into
push
popf
pop
or
add
adcl
clc
mov
aad
in
jb
sub
pushf
shrl
les
jbe
movsb
inc
popa
adc
std
xchg
das
es
and
jno
push
sub
ret
clc
cmp
dec
imul
mov
shlb
out
cmp
jno
nop
add
ljmp
inc
jo
loopne
xlat
jno
insl
stos
mov
inc
push
popa
inc
jns
clc
hlt
lock
stos
cmp
adc
cmpsl
js
mov
xor
pop
mov
dec
push
fcoml
je
daa
cmp
ja
cmp
or
push
inc
jg
push
sub
inc
xlat
jne
rclb
xchg
mov
push
dec
add
loop
in
addr16
sub
in
call
data16
jno
leave
stos
dec
push
lods
gs
loopne
shlb
int3
xchg
jge
push
in
std
int
lock
cltd
imul
sti
js
in
insb
outsl
fdivs
sar
cmp
mov
das
mov
adc
popa
inc
pop
std
mov
sub
clc
adc
sbb
mov
lahf
jno
ret
pop
mov
sti
sub
das
push
mov
cmp
ror
mov
lcall
push
insl
jne
xor
sub
push
jne
pusha
clc
nop
loopne
lret
mov
jge
ja
or
ret
outsl
aad
inc
imul
divl
popa
out
insb
push
loop
jmp
mov
int3
mov
jmp
jmp
adc
add
xorb
int
sub
xor
xchg
push
pop
popa
push
cmpsb
or
mov
outsl
cli
lods
add
ljmp
inc
xor
in
sub
ret
out
insl
jno
orb
jg
into
xor
jge
dec
clc
sub
jmp
lods
out
push
dec
mov
lret
outsl
inc
in
xor
popa
ficomps
enter
mov
inc
and
out
cwtl
cmpsb
in
push
sub
jne
adc
int3
ret
aas
cmp
jno
and
xor
push
adc
push
cwtl
popa
fs
sub
out
pop
pusha
mov
repz
lahf
ljmp
fcmovbe
and
push
pop
aaa
adc
das
fmull
cmpsb
repnz
xchg
nop
nop
mov
xor
insl
jg
jge
mov
cmp
fcomps
in
je
jno
xlat
loopne
mov
jbe
jns
divl
adc
and
add
inc
mov
cmpsb
int3
arpl
xorl
mov
dec
push
popa
mov
popf
pop
jno
adc
mov
add
repnz
add
outsl
in
and
jnp
pop
imul
aad
push
sbb
jp
jno
test
cmp
popa
cld
insl
push
stos
cmpl
nop
fs
xor
pop
insb
iret
daa
adc
jno
cmp
sbb
push
clc
sub
or
xor
mov
in
outsl
es
dec
jno
in
and
push
aaa
sbb
adc
mov
sbb
jge
push
jno
pop
sub
insl
dec
jo
lods
add
fadds
add
outsl
jne
push
pusha
jne
inc
pop
or
mov
call
dec
pop
clc
mov
stos
adcb
jle
shr
jno
bound
inc
dec
outsl
ja
cmp
cli
fnsave
or
les
sbb
dec
pop
arpl
and
mov
or
lock
das
data16
jns
inc
stos
rolb
cmc
ficoms
dec
and
cs
scas
sub
out
cmp
aas
pusha
mov
jmp
jno
andb
cmpsb
psubsw
test
sti
push
lahf
mov
sub
xor
outsl
pop
push
adc
loop
insb
shrb
cltd
insl
inc
jmp
jno
inc
scas
jmp
push
scas
jge
push
jno
mov
jb
outsl
scas
pusha
ror
js
lock
xor
and
xorb
arpl
and
jnp
movsl
and
jne
lock
adc
and
xor
in
push
int
pop
push
dec
adc
cmp
aaa
mov
and
pop
movsb
es
daa
gs
stos
dec
scas
outsb
cmc
xchg
pop
jns
jg
jno
pop
pop
lods
nop
push
jecxz
jmp
pop
mov
push
fsubl
adc
mov
fists
jmp
fwait
imul
push
and
and
inc
pop
mov
mov
into
fadd
cmc
push
fildll
mov
nop
push
mov
bound
sbb
inc
cmp
aaa
push
jo
dec
hlt
mov
outsl
gs
pop
mov
clc
and
add
in
jbe
mov
gs
pcmpgtb
xor
sahf
jb
movsb
gs
cmp
mov
mulb
fucomi
test
push
xor
xor
jle
mov
lea
std
aaa
jno
mov
lahf
shll
fs
mov
mov
aas
ret
negb
test
jno
cmp
addb
dec
jno
dec
int
or
shlb
mov
adc
push
ss
push
dec
imul
ret
xor
inc
mov
sbb
int3
mov
sbb
jl
push
push
loope
jno
mov
es
loop
push
cmp
gs
dec
push
aad
add
call
jno
pop
or
mov
shrb
jp
push
iret
testl
in
jle
jbe
jmp
loopne
mov
in
lods
pop
sti
cwtl
popa
cmp
addl
out
sbb
or
int
scas
xor
call
sbb
mov
insb
out
fcmovbe
cmp
mov
int3
mov
push
movsb
and
jno
sbb
mov
mov
jno
stc
adc
pop
adc
jno
fwait
push
push
xor
xor
sbb
cmp
cmpsb
jno
es
dec
nop
mov
out
inc
sbb
out
and
bnd
mov
cli
or
out
jge
mov
rolb
dec
stc
inc
outsl
mov
mov
fcoml
mov
xor
fistpl
int
fisubs
push
ret
testl
frstor
lock
insb
cmp
cmpsl
nop
cmp
fdivrp
pop
negb
aam
sbb
arpl
or
xchg
adc
jno
orl
shrl
mov
int
dec
dec
daa
and
mov
mov
jno
ljmp
dec
inc
outsb
mov
inc
pminsw
or
arpl
shll
jle
lcall
mov
sub
cmp
mov
pop
sbb
xchg
mov
scas
in
ret
shr
in
fsubrs
xor
pop
adc
fimull
jns
psrlw
leave
mov
icebp
iret
loopne
lret
push
popf
popa
inc
mov
rclb
adc
mov
xor
pop
imul
jno
push
sbb
push
pusha
xor
mov
mov
in
adc
hlt
scas
sub
stc
adc
pop
lock
pop
psubsb
push
jno
jmp
xor
jbe
das
push
sysexit
clc
notl
scas
push
and
jno
cmovno
jne
add
shr
shlb
in
mov
dec
movsb
adc
xor
push
xchg
pushf
mov
aas
push
nop
jns
jnp
mov
push
adcb
aam
into
pop
enter
insl
push
dec
nop
mov
inc
mov
jg
sub
dec
jno
xchg
mov
in
fscale
and
int3
adc
lock
mov
jnp
imul
sub
imul
sub
loope
call
xchg
aas
jno
mov
jno
xchg
mov
pop
iret
fsubrl
fwait
ret
hlt
insl
inc
mov
int3
in
nop
out
inc
adc
and
repnz
mov
jno
push
sar
fstpt
adc
xlat
dec
js
daa
shrd
or
loope
lods
andb
sub
aam
mov
jo
ja
xlat
imul
lods
mov
in
fidivl
in
hlt
push
adc
mov
aaa
dec
xor
mov
daa
adc
mov
out
xor
jno
loope
or
sub
jno
sbb
adc
sbb
sub
jge
es
cmpb
insb
imul
cmp
aam
clc
gs
or
jle
adc
push
iret
push
rorb
xor
jb,pt
jno
inc
fildl
cmp
jb
xlat
addr16
sub
jle
xor
jno
bound
ss
pop
mov
jno
ret
fdivs
dec
push
xlat
xchg
jns
enter
dec
xor
jns
leave
fwait
cltd
jno
cmp
xor
std
imul
aas
out
jne
dec
stc
mov
aas
lret
js
mov
test
mov
inc
mov
outsb
xor
jno
bound
fcmovnbe
shrb
jno
sub
inc
leave
push
mov
adc
aas
pusha
dec
add
popa
xor
daa
xor
outsl
xor
mov
push
jmp
insl
xchg
inc
xor
shll
outsl
popa
jo
pop
loopne
in
adc
popl
inc
mov
gs
push
ret
iret
lods
stc
in
lock
pusha
cli
pop
dec
insl
jno
xor
addr16
rolb
imul
xor
movsl
adc
jne
test
fmul
loope
in
xor
adc
enter
jge
and
syscall
xchg
add
ret
adc
lock
push
pop
push
jg
xor
orb
ljmp
pop
cld
ja
sti
cmp
scas
cmpsl
inc
xor
fsubl
jno
push
xor
addl
add
jno
add
or
jg
out
push
sbb
js
nop
xor
clc
aad
cmpsl
gs
sub
mov
test
adc
stos
jns
rcll
mov
nop
pop
in
neg
jnp
xchg
mov
jo
sub
rol
dec
adc
lahf
jp
fs
jno
int
xchg
push
push
rol
movsb
out
ss
pop
jno
cmp
daa
dec
push
insl
or
loope
sarb
addr16
and
pop
test
inc
loop
add
shrb
sub
pop
jno
xchg
mov
ret
jo
push
sar
idivl
scas
jne
inc
jns
in
cmp
into
dec
scas
lock
dec
mov
cltd
xchg
popa
outsb
cmp
iret
sbb
js
sarb
mov
pop
mov
jno
cmp
jae
icebp
xchg
popa
lock
out
and
popa
jl
bound
mov
int3
ds
in
in
orb
jnp
adc
pop
jne
outsl
xor
jo
lock
arpl
bound
aas
sub
icebp
sub
scas
out
jno
jns
jge
push
xlat
arpl
jno
jae
rcrl
add
mov
popa
or
jno
cltd
adc
call
loope
xor
mov
pop
push
inc
clc
push
jnp
xorl
ljmp
jmp
xor
fs
out
adc
jae
ljmp
push
jo
jb
stos
loop
sbb
int3
xchg
test
mov
sub
push
repz
std
push
mov
data16
fsubr
leave
pop
cmp
popa
push
imul
jl
mov
popa
sahf
fdivl
sbb
jno
xlat
outsb
xchg
lods
loopne
inc
daa
pop
push
sub
inc
push
js
sub
in
mov
in
insl
in
jge
mov
jno
jb
rcll
shlb
data16
mov
fcomp
jno
loopne
lcall
push
imul
lods
push
and
scas
nop
dec
sti
sub
add
fs
inc
insb
xor
mov
les
ror
dec
fdiv
jg
push
inc
xchg
sbb
xor
hlt
mov
repz
cmc
in
test
dec
adc
pop
and
loopne
cltd
jno
cmc
ljmp
and
mov
pop
xor
andl
jne
dec
and
jg
loope
incl
stos
push
bound
jae
jno
cmp
fisubrs
addr16
jno
adc
movsb
mov
cwtl
mov
pop
je
mov
hlt
rcr
sbb
sbb
aaa
push
xor
scas
cmpsb
push
rcr
or
dec
cmp
ljmp
push
out
jmp
jno
dec
push
ds
or
mov
jno
jo
inc
jmp
popa
sub
inc
push
cmp
into
or
js
pop
xor
lods
aas
mov
or
popa
mov
mov
ds
gs
popa
jne
mov
loop
int
lret
fbld
jp
jno
jmp
xorb
in
jae
mov
stos
outsb
jno
or
into
lcall
dec
jo
scas
lods
outsl
xor
xor
stos
popf
jmp
movsl
nop
jno
aas
cmpl
or
mov
xchg
xor
out
lods
fbstp
test
cmpb
cmp
jg
sarb
or
adc
loopne
in
pushf
jge
cwtl
sub
ds
inc
aam
sbb
outsb
daa
sbb
xchg
icebp
pop
cltd
nop
mov
call
jns
cmc
jno
fs
inc
test
push
lods
push
bound
pop
popa
shrb
adc
push
iret
adc
push
outsb
inc
addr16
push
pop
inc
lahf
jae
or
jmp
aas
pusha
lahf
out
mov
pop
xchg
addr16
xor
xor
test
popa
xchg
imul
jle
inc
mov
xor
jg
stos
push
jno
push
imul
pop
push
clc
xchg
jp
jae
jno
lds
sbb
push
scas
pop
xchg
daa
jno
fwait
sbb
lods
ljmp
popa
sub
jge
daa
mov
mov
inc
xor
push
ds
das
imul
gs
adc
movsb
call
jno
xor
and
pushf
rolb
rcll
cvtpi2ps
xchg
arpl
sbb
push
sbb
push
loop
jnp
dec
add
or
repnz
jbe
xchg
imul
pop
adc
fisubrl
lock
jnp
push
ljmp
std
bound
push
repnz
jno
cltd
rcrb
adc
xchg
jno
xchg
add
fwait
pusha
mov
mov
ljmp
sbb
mov
push
pusha
xchg
nop
jb
sahf
xor
push
jno
add
and
in
xor
sub
dec
aam
mov
or
xor
gs
jne
inc
js
popf
jp
xor
add
jno
ljmp
jno
out
mov
dec
test
icebp
mov
imul
or
mov
outsl
hlt
push
ja
loop
dec
add
mov
in
push
jo
dec
sub
xor
mov
pusha
pop
dec
mov
jno
pop
clc
insl
dec
mov
adc
gs
rorb
push
pusha
cmp
xchg
add
test
jno
test
mov
jne
aam
aas
sub
jnp
gs
push
insb
push
push
arpl
das
add
jno
sti
jmp
psraw
jg
jae
insb
lods
lods
ficompl
push
mov
adc
shll
test
jns
jae
cmp
mov
inc
movsb
jmp
out
add
xorb
call
sub
cs
dec
outsl
jle
pop
dec
call
insl
roll
pop
adc
mov
adc
push
or
rcrl
mov
sub
in
push
jno
dec
pop
push
push
xchg
js
in
sbb
cld
das
and
jge
cltd
lods
or
scas
and
lea
sbb
cmc
rolb
nop
int
ja
xor
jno
jl
iret
lock
jno
sub
int
hlt
or
cmp
in
sub
jle
out
sub
pop
jecxz
jo
int3
das
popa
mov
insb
fdivl
call
jno
sbb
gs
xor
jno
test
in
xor
addr16
sarb
popf
pop
cmp
insl
or
imul
das
insl
int3
aam
aaa
std
dec
mov
popa
insb
fistpl
dec
sub
adcl
test
jmp
lods
ljmp
sbb
jmp
and
mov
int
sti
roll
push
add
or
jno
cs
jno
sets
adc
out
rorl
in
js
addb
mov
out
sti
idivl
loope
mov
adc
push
das
call
push
and
jns
mov
push
mov
cmc
les
jo
jae
inc
xchg
push
jl
out
push
push
enter
cltd
cmc
cmpsb
mov
aad
das
imul
addl
push
sub
jno
out
and
loopne
mov
lea
xchg
inc
in
jp
push
adc
imul
in
std
jnp
jno
ljmp
mov
popa
pusha
inc
lods
int
and
aaa
loopne
adc
rolb
int
mov
shrb
xlat
scas
sub
push
jg
jno
pushf
mov
and
dec
nop
out
inc
jmp
mov
jns
push
lock
fsubrs
lock
test
add
jns
or
push
pop
cmp
lods
imul
push
push
mov
jns
bound
inc
dec
inc
mov
je
jmp
push
adc
sbb
xor
mov
ljmp
push
out
inc
test
outsb
out
std
aam
and
jne
in
andl
xor
dec
int3
nop
add
push
jae
jg
popa
xor
mov
cmp
mov
imul
jle
into
test
xchg
test
fsubrs
imul
test
mov
xchg
xor
mov
jno
iret
notl
rorb
jno
inc
sub
mov
push
mov
loopne
mov
dec
dec
repz
lock
jp
dec
addr16
mov
loopne
jae
push
sbb
jne
lock
jle
sub
xor
pop
inc
sub
push
push
push
mov
insb
pop
mov
aam
push
add
mov
popf
push
js
fsubrl
in
nop
xchg
mov
push
imul
arpl
xchg
push
scas
sub
inc
push
adc
fnsave
movsb
subb
push
jg
fs
xor
add
push
inc
jno
pop
loopne
sahf
mov
push
jmp
shrl
and
adc
push
lcall
repz
pop
mov
xchg
pop
ja
movsb
loop
dec
adc
dec
inc
push
inc
es
jb
aam
mov
jl
and
out
xchg
ret
ja
incb
lods
ret
mov
or
lods
ret
xchg
push
push
add
xor
stos
test
int3
jnp
jno
inc
ret
pop
cmp
and
jno
inc
rclb
lcall
je
jno
arpl
and
loopne
xor
mov
adc
pop
sbb
cwtl
popf
or
pusha
jb
xchg
sub
lahf
adc
pop
inc
cmp
pop
dec
cmpsl
ja
divl
push
ja
mov
mov
nop
xor
gs
arpl
fstps
push
and
in
jb
aad
mov
mov
hlt
mov
jae
cwtl
sbb
jns
xchg
push
jmp
push
xlat
inc
sbb
cwtl
les
and
mov
outsl
adc
sbb
jno
aad
cmp
xchg
lods
stc
in
js
push
arpl
lds
stos
jecxz
and
dec
push
pop
inc
xor
clc
jns
sub
pop
mov
shll
cmc
stc
xor
push
mov
out
push
js
sbb
into
xor
jno
in
imul
ja
shlb
out
nop
pop
mov
mov
mov
mov
aam
lds
add
push
cli
mov
jno
iret
mov
ds
cmp
in
or
add
aaa
sbb
adc
fs
int3
sub
lahf
jno
pop
mov
jp
data16
pop
mov
jno
or
jno
pop
or
aas
xchg
bound
push
outsl
out
test
and
inc
xor
jge
jno
mov
xorl
inc
stos
dec
xchg
mov
ficoml
mov
xor
cmp
adc
fistpll
mov
mov
cmc
add
inc
fisubrs
arpl
dec
das
mov
dec
test
rorl
cmpsl
inc
and
repz
adc
mov
pushf
mov
add
mov
sarb
lret
cmp
sub
addr16
je
jmp
fstpt
dec
cmp
nop
ljmp
lock
xchg
popf
lcall
into
popa
int3
fnstenv
sarl
int
adc
jno
or
ret
in
imul
jno
movsb
cld
call
leave
popa
je
pop
lcall
movsl
gs
imul
sub
pop
jno
dec
rorb
sbb
push
out
xchg
and
jns
pop
adc
push
mov
loope
in
rcrb
mov
adc
push
xor
mov
es
lcall
addb
lock
jge
lods
or
js
mov
testl
jne
adc
ret
jnp
dec
bound
lods
push
inc
xchg
pop
dec
sbbl
fistpl
loope
sub
mov
push
scas
or
mov
inc
scas
fdivl
pop
jl
jno
imul
fwait
nop
data16
arpl
pop
jne
cmpsb
sbb
out
aam
mov
ret
aad
bound
dec
enter
into
loop
ficomps
outsl
dec
mov
mov
mov
mov
aam
adc
mov
cmc
inc
add
mov
push
cli
fcomps
push
adc
rcr
push
cld
js
jns
jno
mov
and
cmc
enter
ret
push
mov
aad
xor
in
adc
icebp
pop
repnz
scas
lret
jno
and
out
mov
jl
lea
pop
fcmovnb
loopne
push
outsb
clc
outsl
arpl
inc
adc
jne
int
adc
jg
jno
jae
daa
sbb
ds
test
ss
lahf
repnz
shrl
add
das
popf
decb
dec
dec
lahf
mov
icebp
sbb
xor
nop
jp
pop
pop
sbb
mov
out
loope
adc
lock
jle
popf
xchg
inc
jno
jge
scas
push
dec
jo
insl
jns
cltd
mov
mov
add
jmp
fdivrl
repz
or
pop
mov
jecxz
xchg
nop
test
arpl
jno
sub
aaa
pop
dec
inc
jno
jp
arpl
xor
add
jno
mov
mov
push
add
inc
loope
idivl
jno
test
and
and
movsl
jno
mov
or
mov
cwtl
adc
mov
icebp
add
dec
jmp
jb
push
xchg
loope
jno
sbb
add
push
sbb
je
or
ret
dec
jno
leave
inc
cmp
ljmp
jg
mov
xchg
inc
fidivs
in
icebp
movsl
push
jns
pop
movsb
mov
lods
jp
repz
scas
mov
sbb
sbb
in
or
icebp
divl
jns
imul
adc
jno
mov
pop
jno
and
fwait
sub
repnz
sahf
out
adc
mov
push
mov
scas
lcall
popa
lods
shlb
jle
jno
scas
sub
dec
mov
jno
mov
stos
mov
fidivrs
and
mov
jno
push
movsb
mov
nop
or
mov
jg
mov
pop
nop
lods
pop
jmp
cmpsb
jne
and
mov
push
mov
sti
adc
xchg
cmp
cmpb
lcall
adc
sbb
pop
jne
cmp
lcall
loope
popl
inc
mov
outsl
lds
fsubrp
int3
js
mov
jno
xchg
int
or
inc
jecxz
push
addl
out
sbb
in
jo
push
or
shl
dec
loope
arpl
enter
pop
fldt
dec
je
ret
and
add
pop
jmp
fst
mov
push
mov
mov
jp
mov
lcall
mov
add
call
jno
data16
incb
fnsave
movsb
mov
test
xor
das
loopne
clc
fsubrl
imul
inc
jno
subl
fisubrs
je
mov
pusha
les
aam
addr16
fidivs
pop
cmc
adc
add
sub
and
mov
xlat
dec
icebp
mov
scas
mov
push
inc
fnsave
cltd
push
mov
cmp
aam
jg
popa
test
push
out
lock
sbb
sti
dec
jnp
jnp
nop
clc
cmp
cmp
clc
imul
bound
cmp
adc
fsubrs
out
aad
jns
cwtl
push
lock
das
sbbl
jno
fdivrp
sub
pop
ljmp
xor
out
jge
outsb
or
into
adc
fxch
or
repz
mov
pop
cmp
loop
xor
hlt
push
rcll
cmc
gs
xchg
ret
nop
sub
add
xchg
and
cmp
sbb
pop
movsl
xchg
imul
jno
jmp
or
ret
mov
and
jno
scas
testl
icebp
mov
popa
sub
jmp
negl
repz
mov
jno
cmpsl
pop
fimull
jl
push
lret
gs
jno
fistps
adc
push
add
aad
sub
imulb
aas
mov
ret
pop
jg
insl
movsl
jno
out
lods
inc
test
jmp
jno
call
leave
xor
fidivrl
sti
and
add
cmp
lahf
scas
lock
sarl
aaa
pop
stos
inc
push
and
in
mov
push
push
pushf
sub
sbb
out
jge
inc
icebp
sbb
mov
loopne
jmp
cmp
lea
pop
jb
nop
aad
addr16
sub
stc
adc
cld
jae
enter
hlt
repnz
push
or
jno
psubb
imul
add
dec
adc
push
add
lcall
dec
std
push
mov
push
in
subb
mov
xchg
jbe
popa
lahf
sub
push
insb
pop
jno
push
js
add
test
or
and
mov
xchg
xchg
fsubs
xor
and
roll
test
sbb
adc
jo
adc
jae
cwtl
xor
daa
popa
fldl
pusha
scas
dec
jno
add
test
add
lods
notl
or
fstl
add
or
jne
mov
adc
jno
repz
cmpsb
jp
xorl
int3
loope
pop
sub
jno
add
stc
dec
mov
pop
repz
mov
or
cmpsb
push
mov
jnp
sbb
in
xchg
jno
popf
icebp
insb
out
bound
jecxz
stos
jno
adc
pop
scas
into
mov
mov
frstor
pop
fidivrl
jno
or
dec
jno
mov
test
push
hlt
stos
cmpsb
xor
stos
pusha
imul
aas
mov
jno
push
sbb
inc
dec
das
out
xor
and
ret
test
rcr
fwait
cmovs
inc
ret
adc
jecxz
or
lods
push
push
mov
ss
leave
rcr
adc
push
in
insl
xor
hlt
sbb
jno
jne
and
sbb
imul
jno
inc
ljmp
push
sbb
pop
test
faddl
negl
adc
mov
nop
and
arpl
das
in
aam
jo
sub
push
fcoms
into
sbb
mov
mov
int
dec
pop
jno
push
xchg
sbb
rol
or
fldl2t
cwtl
sbb
xor
adc
mov
nop
mov
mov
imul
mov
aam
scas
imul
call
mov
pop
jecxz
adc
in
sbb
leave
inc
rorb
mov
push
js
cli
bound
adc
mov
sub
jae
gs
cmpsb
and
ret
js
insb
cmp
push
jecxz
mov
xorl
or
inc
and
mov
je
lret
jle
scas
cmpsb
pop
jno
or
jno
mov
and
adc
rcr
ficompl
mov
out
ds
mov
fnstsw
adc
and
fbld
fimull
add
sub
andb
jno
leave
jbe
inc
add
jno
aaa
mov
dec
add
dec
cs
shr
jge
mov
adc
test
adc
out
mov
pop
inc
sub
push
inc
mov
and
adc
repz
call
in
push
cmp
sub
iret
in
jne
add
mov
mov
adc
clc
insl
out
sbb
sub
stc
push
dec
cmp
push
xor
ret
nop
ror
fistps
gs
sbb
jno
add
sub
inc
and
sarl
mov
jne
mov
clc
inc
add
pop
push
jnp
std
adc
ljmp
jns
jno
fcoml
mov
inc
mov
popa
in
out
xor
xor
popa
mov
push
sub
fsubs
mov
mov
cmc
dec
sub
jge
mov
arpl
fildll
jg
jno
fimull
sbb
jno
pop
insl
les
mov
insb
fldenv
xchg
xor
test
insl
cld
ljmp
sbb
add
lds
jno
cltd
inc
mov
sub
jno
aad
and
jp
xchg
scas
pop
int3
jno
sarl
xchg
inc
or
and
add
pusha
out
dec
jge
aas
addr16
jno
icebp
mov
fcmove
jecxz
pop
mov
adc
cmp
mov
jno
popf
imul
push
or
jno
mov
pop
pop
nop
aas
ja
dec
or
sbb
test
fiadds
jno
xchg
cmc
mov
jbe
cmp
mov
push
mov
push
std
add
ret
push
icebp
cmpsl
adc
mov
inc
andb
jno
xchg
stos
mov
pop
and
je
jno
lahf
stos
lock
cmp
and
sub
jg
cs
jg
nop
pop
imul
addb
jno
cmp
xor
jo
add
ds
sub
pop
test
jno
sbb
call
ret
lds
inc
jnp
push
sub
popa
fidivs
and
mov
adc
sbb
out
push
mov
mov
sbb
jp
rcrl
or
jno
call
stc
int3
push
pop
mov
jmp
ret
jno
sbb
in
es
jno
cmpsb
sbb
push
scas
push
inc
sub
mov
je
jno
or
data16
xor
jno
dec
not
jmp
jle
in
mov
jae
jl
push
lret
jmp
bound
sahf
lret
int3
xor
test
jno
mov
mov
or
dec
mov
addb
xorl
inc
xor
gs
fbstp
cmp
inc
dec
outsl
pop
nop
outsb
arpl
lods
imul
rolb
test
fbld
mov
inc
mov
xor
cmp
mov
aaa
jb
jns
testl
adc
clc
and
pop
inc
test
inc
lcall
nop
or
adc
pop
or
das
arpl
cmp
test
add
lret
mov
mov
add
mov
lock
push
iret
popf
sub
test
out
mov
loopne
jo
rcll
rcr
jecxz
out
ret
aad
jno
mov
mov
jno
out
sbb
dec
jns
jno
into
or
repz
push
jmp
pop
and
xor
jno
pop
adc
xchg
mov
ret
cvtps2pd
mov
jno
cld
jmp
adc
aam
jno
push
adc
aaa
jno
leave
pop
das
mov
push
stc
or
popa
mov
clc
test
in
adc
jno
leave
or
cmp
sub
adcl
mov
not
and
andl
pop
ss
jno
inc
inc
dec
decb
dec
jno
jns
sbb
push
push
lds
inc
dec
jns
sbb
jno
sbb
add
and
enter
repnz
dec
dec
push
adc
data16
jge
or
popa
inc
ret
jno
jg
in
xchg
or
inc
lods
push
out
je
ret
clc
nop
scas
inc
cmp
cwtl
cmc
popa
cmp
mov
jno
imul
mov
mov
es
nop
push
jp
push
stos
jno
pop
inc
add
jge
adc
enter
ja
jp
jno
fdivrl
push
std
jns
push
into
jno
imul
xchg
and
push
movsl
mov
sub
sbb
in
xchg
push
ret
ss
fsubs
and
ljmp
dec
aas
xchg
jns
out
ja
nop
jnp
jno
ret
loope
sub
or
jns,pt
lcall
fistpl
mov
pop
jbe
icebp
pop
mov
std
je
scas
cmp
xor
repz
xchg
sub
push
dec
mov
mov
ds
ret
lea
pusha
pop
mov
pushf
and
andb
stos
sub
std
sarb
inc
out
and
scas
mov
in
dec
xor
sub
sub
pop
dec
bound
mov
in
and
dec
insl
ljmp
lods
dec
outsl
mov
jb
je
jno
popa
aaa
jae
imul
push
mov
aam
cmpl
out
mov
pop
pusha
pusha
sbb
cld
inc
cmp
sbb
cwtl
dec
and
movsl
adc
xor
jbe
fildll
pinsrw
insl
and
jno,pn
and
or
arpl
rolb
shll
idiv
enter
popf
inc
adcl
mov
and
gs
mov
xrelease
mov
add
push
mov
dec
jnp
pop
jno
lcall
push
nop
arpl
outsl
jno
clc
jge
jne
out
jno
mov
xor
call
cli
push
imul
test
jno
out
mov
scas
fs
push
stos
loope
jae
je
jge
mov
mov
decb
imul
push
jno
in
adc
mov
or
dec
dec
popf
jno
dec
xchg
cmp
fimull
dec
lds
subb
loope
les
mov
lock
gs
jg,pn
jno
dec
out
mov
adc
jno
xchg
pop
test
mov
push
adc
pop
roll
inc
sbb
mov
scas
cwtl
adc
stc
sbbb
out
mov
shll
popa
push
rcrb
sub
jge
or
or
out
and
sbb
jp
not
jno
rol
fisubl
mov
add
cld
jbe
jno
inc
into
pop
nop
clc
push
sub
xchg
movsb
addb
push
pop
gs
in
sub
aad
mov
mov
stos
nop
cmp
and
ja
popf
push
jno
jp
fcmovnb
sbb
inc
ja
out
js
and
xchg
das
xchg
push
stc
mov
jb
inc
jmp
pop
bound
repz
nop
nop
and
cmpsl
idivb
leave
mov
jnp
ljmp
cmp
enter
mov
jno
push
mov
adc
pop
sub
stc
daa
jb
pop
ret
jno
insb
mov
fs
sbb
pop
in
mov
push
pop
xorb
xchg
adc
lcall
decb
sbb
orb
push
mov
fiaddl
gs
mov
aad
jmp
and
ja
cli
lods
in
jge
out
adc
jno
stos
shlb
xor
inc
mov
cmpsb
cmp
jnp
push
jno
push
nop
xchg
dec
sub
mov
mov
pop
sbb
je
cmp
nop
lds
push
stos
loope
negl
in
jge
jp
adc
popa
add
jecxz
rcrb
je
sbb
adc
aad
testb
jno
cmp
orl
pushf
inc
test
call
rolb
jno
imul
mov
int3
data16
or
inc
xor
pop
dec
fldenv
or
dec
cmc
push
clc
xor
dec
adc
add
stos
xor
int
sbb
sbb
mov
adc
dec
cmp
mov
repnz
xchg
jp
aad
lds
jae
scas
mov
xlat
jle
cmpsl
cmp
push
int
sbb
lods
mov
leave
push
xor
das
rolb
ljmp
dec
jno
es
and
jno
scas
add
rorb
or
clc
push
mov
icebp
jne
ds
and
adc
testb
pop
jb
or
daa
push
mov
mov
in
mov
jns
int3
xor
push
lahf
iret
sarb
push
dec
add
pop
mov
push
push
adc
cmp
iret
jo
mov
mov
int
or
mov
lock
pop
icebp
sub
test
or
inc
add
xlat
pushf
mov
push
shrl
dec
rcrl
jno
icebp
jno
push
sub
jno
mov
adc
movsl
add
add
imul
mov
clc
push
jge
and
lahf
cmpsb
mov
lds
push
fisubrs
add
inc
xor
lods
sbb
das
mov
jno
in
mov
loope
add
inc
jge
dec
jg
mov
loopne
cmpb
popa
js
jno
dec
insl
repnz
fists
es
or
incl
cmpsb
sbbb
jb
and
xor
jmp
popf
orb
cmpsl
and
mov
mov
shll
out
mov
xor
xchg
inc
adc
jle
fidivl
or
fildll
jp
jno
icebp
jmp
cmp
add
retw
mov
lods
xchg
add
dec
pusha
scas
mov
cmp
insl
aad
push
sbb
addb
push
lock
fs
enter
scas
int
or
sbbb
mov
stos
nop
scas
mov
dec
jne
mov
adc
imul
popf
xor
pop
jg
in
xor
push
test
pushf
lahf
jge
push
icebp
mov
jns
cltd
roll
test
mov
pop
cwtl
int3
push
jb
dec
jge
jo
or
inc
scas
or
push
cmp
xorl
jl
test
dec
loopne
inc
insb
fnstenv
int3
aam
insl
or
mov
jb
mov
iret
mov
lea
mov
mov
mov
mov
push
jp
push
adc
popf
adc
notb
xor
scas
arpl
inc
add
call
jnp
mov
pop
jecxz
in
sbb
shrl
jmp
or
xor
ror
push
xchg
mov
imul
jmp
jmp
daa
dec
movsbl
imulb
mov
jnp
mov
insl
out
xor
dec
ret
les
in
jno
hlt
jp
mov
subb
xchg
mov
dec
sbb
xchg
jae
cmp
hlt
dec
sub
iret
out
out
xchg
mov
arpl
mov
cmp
sbb
inc
add
push
aaa
scas
mov
aaa
dec
adc
push
mov
cmp
imul
cmpsb
rolb
push
xor
xchg
or
inc
out
dec
dec
nop
cmp
ds
cmpsl
pushf
dec
addb
lds
mov
dec
inc
adc
xor
test
sbb
jmp
in
inc
incb
mov
inc
inc
xor
in
or
xchg
and
arpl
imul
daa
or
das
push
sarb
icebp
imul
adc
in
inc
inc
lock
push
cmp
xor
sub
xchg
lock
repnz
scas
movsb
out
insb
xchg
push
sbb
cmp
add
sub
pop
outsl
js
inc
pop
mov
mov
jnp
mov
or
int3
cld
pusha
aaa
push
pop
sub
sub
cmpsb
mov
popf
add
dec
fbstp
call
lods
dec
adc
vmwrite
call
insl
mov
in
inc
xor
jg
in
shlb
and
ret
mov
jle
cs
insb
inc
mov
arpl
sub
push
lods
dec
sub
cwtl
mov
in
lret
daa
loop
xor
inc
lds
les
lds
xor
imul
sub
ret
sub
repz
popa
rorb
lahf
mov
outsl
xchg
mov
add
dec
or
test
pop
loopne
fs
push
pop
stos
aaa
xchg
inc
stos
xor
lret
adc
movl
negb
into
bound
cmpsb
xchg
out
dec
sub
icebp
pop
cmc
popf
dec
movsb
add
push
or
and
xchg
lret
clc
dec
sahf
orl
sahf
loope
aaa
inc
xchg
and
lea
ljmp
in
cmp
lods
inc
nop
jl
in
xchg
lods
mov
fs
jo
xorl
xlat
pop
data16
mov
jle
xchg
sub
adc
xchg
dec
fwait
push
fs
cwtl
pop
cltd
outsb
pop
rol
popf
daa
mov
mov
dec
mov
jecxz
scas
jle
scas
insb
xchg
and
xchg
add
stos
xor
daa
fdivrp
mov
int3
push
imul
jo
out
hlt
xor
adc
movsl
sub
push
mov
jno
adc
add
dec
pushf
movb
movb
lea
call
call
mov
pushf
push
push
pushl
ret
movzbw
mov
lahf
lea
pushl
pusha
mov
pusha
pushf
lea
mov
pushl
popl
bswap
jmp
inc
mov
pushl
setnp
call
mov
xor
and
test
mov
imul
add
xchg
loopne
dec
ds
sbb
mov
ss
jns
jmp
and
fwait
cltd
push
movsl
or
inc
push
xchg
lock
dec
mov
xchg
aaa
mov
mov
push
sarl
add
addb
addr16
pop
cmp
mov
cltd
fldl
mov
bound
movb
mov
inc
jmp
cld
xor
add
hlt
add
jno
mov
pop
push
je
shlb
mov
fwait
sbb
cmp
out
jb
mov
mov
popa
jne
xorb
cmc
add
jp
aas
popf
mov
lahf
cli
xchg
cmp
rclb
xchg
mov
xor
or
mov
cmp
inc
pop
cmc
cmp
std
dec
cltd
popa
inc
jo
mov
stc
in
icebp
out
xor
cmpsl
or
subb
jb
xor
add
jge
sub
xchg
cmc
popf
jp
inc
sub
inc
ja
in
fmuls
xor
or
ficompl
pop
pop
test
cltd
xor
mov
lock
xchg
xchg
sti
mov
ss
add
push
lahf
mov
cmp
pop
and
sarb
fstl
scas
pop
jge
pop
ss
mov
push
mov
pop
cmpb
cmpsl
dec
xchg
sbb
rcrb
cmc
lahf
inc
in
xchg
cld
sahf
test
bound
jmp
lret
inc
and
mov
lea
jmp
int3
into
inc
in
add
inc
push
jne
mov
cmpsl
inc
push
mov
les
lret
xor
jge
and
cmp
fs
xchg
push
jecxz
cmp
mov
out
cmc
xor
aam
push
gs
mov
int
xchg
fwait
or
aaa
add
push
pop
out
fiaddl
mov
mov
push
daa
or
lret
pop
xor
sbbl
inc
sti
data16
xor
pop
call
jge
sub
cltd
cmpsl
sbb
movsl
andl
movsl
mov
xor
mov
fs
jne
call
mov
jmp
fnstcw
ret
out
cs
orb
hlt
int
inc
xchg
cld
sub
repz
pop
pop
inc
stos
nop
jne
and
adc
adc
sub
cmp
es
adcb
cli
and
add
push
repnz
ficomps
sbb
push
fwait
in
aam
aam
mov
iret
pop
test
ja
in
insl
cmpsl
js
jns
mulb
adc
inc
shrl
into
popf
pop
fidivrs
shl
sbb
sub
dec
je
sti
jge
jle
ja
sub
mov
cmpb
add
test
mov
push
xor
mov
cmpsb
or
andl
xor
cs
adc
dec
loop
pop
inc
pushf
fmuls
add
mov
lahf
out
adc
mov
mov
adc
cmpsb
data16
jl
push
rcl
outsb
es
xor
popf
xor
scas
bound
sub
xchg
jns
dec
imul
out
decb
mov
dec
jmp
xchg
cld
fnstsw
mov
lss
sar
int3
popa
jp
adc
add
jg
aam
dec
mov
jg
and
mov
stos
mov
lock
mov
cmp
sbb
xor
jle
jge
outsl
cmpsl
mov
and
gs
out
daa
mov
sahf
shll
mov
insl
mov
testl
and
sub
or
sub
ss
jge
int
repz
ja
mov
ror
test
sti
lahf
jmp
or
lea
repz
loope
fwait
xor
arpl
jle
sbb
adc
push
xchg
cltd
stos
dec
stc
lahf
pop
fstps
daa
stos
adc
xchg
aas
es
clc
mov
ret
mov
mov
call
mov
subb
hlt
enter
int
push
mov
stos
lods
pop
xorb
ds
ret
add
stos
push
out
sbb
data16
shlb
sti
dec
sbb
sti
les
sub
mov
es
cmp
dec
call
call
add
rcl
and
and
mov
pushf
cmpb
pushf
call
sub
btc
bsf
sub
add
dec
mov
bt
mov
jmp
clc
mov
or
or
sar
pushf
shr
lea
clc
sbb
neg
mov
test
jmp
pushf
movsbw
cwtl
jmp
call
lea
jae
mov
mov
xor
pushf
lea
movsbw
mov
bsr
adc
mov
cmc
cmp
push
stc
xor
clc
push
mov
repnz
call
stc
mov
pushf
test
movw
lea
je
call
xchg
sub
les
jno
cmp
jns
std
pusha
lds
pusha
and
mov
test
ss
cwtl
data16
shll
test
jne
addr16
mov
xor
out
in
sub
sbb
out
inc
adc
cmpsb
test
jns
add
rcrl
movsl
dec
int
jne,pt
push
stos
jl
sub
and
cmpsl
mov
jno
pop
clc
jmp
jne
cmp
pop
mov
decb
mov
idiv
loope
jbe
gs
pop
inc
adc
xchg
cli
xor
or
and
fdivl
mov
xor
inc
test
mov
sti
jnp
sbb
pop
add
push
or
ss
das
inc
ljmp
sub
add
xor
repz
pop
aam
xor
cmp
push
jo
push
shl
pusha
cmpsl
xor
cli
or
lock
inc
adc
pop
cmpsl
or
popa
inc
inc
repnz
pop
and
stos
or
add
andb
jne
push
xor
mov
push
adc
jns
or
stos
pop
cmpsb
into
mov
dec
leave
aam
fisttpl
rorb
imulb
add
jmp
pop
jg
cmc
rorl
lret
pop
cmp
sahf
inc
out
mov
mov
popa
mov
push
out
fdivs
sti
xchg
scas
mov
ja
xchg
push
std
jecxz
cmpsl
and
movsb
xlat
aam
in
les
test
scas
push
mov
inc
bound
sbb
loope
lret
jb
in
pop
out
pop
cwtl
mov
in
mov
aad
mov
lret
andb
cmp
adc
ret
xor
pop
jb,pt
cmp
xchg
xchg
sti
mov
jno
or
cmp
add
test
lea
xor
ret
xchg
mov
in
cmp
in
ljmp
pop
inc
fs
scas
xchg
mov
test
or
sub
inc
rorb
mov
fnstenv
call
into
xchg
ret
repz
xchg
fisttps
dec
hlt
jmp
dec
xor
adc
int
fbstp
cmp
mov
sub
jo
ds
inc
in
jo
inc
mov
add
cmp
xchg
xchg
cli
loop
sub
insb
inc
push
cmp
insb
ffreep
mov
push
test
cmp
jmp
leave
mov
not
mov
jmp
push
int3
xchg
bound
inc
das
or
cmp
mov
xor
aaa
popf
aas
filds
mov
xor
test
xor
hlt
addl
es
sbb
jle
push
mov
in
and
das
add
arpl
push
lahf
addr16
rcrb
das
das
fsubl
std
mov
jmp
test
cld
rorl
mov
mov
sbb
in
dec
and
lret
icebp
cltd
jg
dec
ja,pn
mov
adc
fdivrs
jnp
adc
pop
lods
clc
lahf
movb
jno
out
and
inc
stc
jecxz
les
adc
and
or
mov
xor
fwait
mov
jecxz
jmp
sub
in
adc
inc
fucom
mov
cmp
and
shll
pop
test
mov
lret
or
mov
jg
call
pop
push
in
lahf
gs
inc
inc
mov
add
xchg
repnz
jae
pushf
aas
or
fstpl
jmp
fstpt
jbe
int
dec
xchg
and
and
xor
and
jne
mov
movsb
hlt
ljmp
int
and
stos
mov
pop
mov
inc
jne
xchg
loop
movl
test
sbb
outsl
dec
scas
mov
idivb
imul
inc
xchg
enter
dec
js
jmp
mov
les
lcall
lea
js
ja
push
bt
stc
lea
jo
imul
jmp
push
lock
std
std
mov
cs
jge
and
leave
lret
sub
pushf
mov
pop
xchg
ss
inc
pop
insb
in
jge
mov
dec
into
and
aam
push
into
add
out
shlb
adc
test
mov
scas
push
add
inc
inc
xchg
inc
sub
push
cmpsb
mov
scas
mov
int
adcb
or
sbb
fisttpl
jmp
add
cld
nop
jno
negb
cmp
xchg
test
int
pop
sub
xlat
mov
stc
les
rorl
jecxz
mov
and
xchg
mov
jns
popa
pusha
sbbl
cmp
adc
and
mov
push
sub
add
sbb
xchg
test
push
std
lret
push
dec
xor
xchg
clc
cs
pop
subl
int3
add
cmp
lret
adcb
and
nop
aam
lret
enter
pusha
xchg
mov
shll
movsb
enter
xchg
pop
sahf
ja
dec
jmp
push
lahf
clc
pop
inc
call
push
mov
inc
in
sub
mov
lahf
orl
xchg
loop
les
sub
cmp
mov
jle
fisubrs
stos
out
inc
arpl
push
push
push
daa
xor
idivb
xlat
outsl
insl
call
jmp
aam
sub
push
sbb
lds
lcall
adc
jmp
pop
out
cmp
icebp
ret
fadds
push
clc
sub
xor
add
movsl
jae
xorl
xor
ljmp
test
call
pushf
mov
call
cmp
cmp
in
xchg
js
mov
and
stc
push
jmp
outsl
jle
push
adc
ret
popf
jg
out
or
insl
cmp
add
jge
push
add
push
movsb
jp
dec
xor
and
cli
stc
mov
add
fdivrp
and
mov
mul
adc
pop
mov
adc
inc
xor
in
mov
jp
repnz
cmp
inc
enter
les
jp
sbbl
addl
gs
aam
mov
jp
lds
lret
mov
rcr
xor
lahf
inc
shlb
sub
dec
jnp
dec
pop
icebp
cld
pop
pop
add
ror
sub
dec
jp
pop
fiadds
lcall
dec
push
mov
popa
xor
hlt
loopne
mov
data16
inc
inc
push
clc
ds
sub
jo
lahf
hlt
xor
and
push
movsl
jmp
mov
ljmp
data16
fcmovnbe
xchg
jg
insb
shlb
inc
out
sti
imull
cmpl
leave
push
sbb
xor
sbb
pop
imul
pop
stc
arpl
xchg
cli
out
push
push
inc
jo
sbb
outsl
fidivrl
or
add
negl
pop
cmp
insl
nop
mov
pop
or
add
push
mov
imul
insb
jns
test
aad
gs
imul
in
push
repz
int
in
inc
xor
adc
repz
mov
pop
fcmovu
cmpb
ss
pop
fsubs
scas
mov
push
fs
and
sbb
pushf
pop
sub
push
pop
repnz
aas
ret
scas
dec
cmp
ret
jl
fdivl
subl
mov
jge
lret
lock
cmp
out
insl
mov
add
nop
movl
pusha
lea
jmp
mov
les
popf
jg
add
or
jnp
outsl
call
pushl
leave
jle
dec
repz
pop
in
adc
std
or
or
call
cmp
xchg
aas
sub
popf
push
and
js
int
adc
pop
and
andl
mov
push
cmp
push
xchg
mov
push
mov
mov
jno
fsubrs
inc
cltd
pop
xchg
filds
dec
andl
ljmp
pop
insl
int3
xorb
es
int
jg
mov
in
imul
xchg
orb
icebp
movsl
mov
das
xchg
xchg
out
or
xorb
cmp
push
push
addl
hlt
mov
loopne
sub
adc
and
push
pop
mov
loop
das
sar
and
cli
pusha
test
imul
dec
iret
sub
inc
das
sub
popa
adc
add
pop
inc
daa
mov
pop
mov
mov
test
adc
ljmp
in
push
jbe
and
nop
fldenv
lret
dec
mov
fimuls
das
cmp
aam
push
xor
xchg
andl
int3
mov
jecxz
rorl
xor
pop
mov
shlb
jno
jne
or
popa
das
push
std
and
aam
arpl
insb
xchg
or
sbb
mov
or
cmp
xor
setne
jmp
incb
inc
mov
adc
jns
mov
mov
daa
or
dec
xor
push
inc
or
aaa
loop
or
das
icebp
push
mov
aaa
cmp
ret
test
rcrb
sub
fs
inc
pop
push
xor
in
fldln2
sub
mov
aaa
in
repz
cmpsl
inc
fimull
je
clc
add
or
jb
dec
dec
jae
sbb
aas
mov
add
mov
mov
sub
stc
pop
stos
xchg
cmp
out
sub
mov
add
xchg
mov
bswap
not
pusha
mov
movb
pushl
ret
call
mov
cmc
mov
mov
pop
xor
cltd
pop
lahf
xchg
fiadds
jge
add
ljmp
pop
pop
and
fidivrl
or
xor
andl
sar
jg
inc
adc
cmp
dec
inc
add
bound
mov
push
fisttpll
dec
sbb
aad
mov
xchg
and
adc
jo
popf
out
test
xor
mov
sub
pop
test
js
push
jl
inc
add
movsb
gs
pop
inc
lret
movsb
test
fldl
fmull
sub
jge
cmp
fldl
jns
inc
or
xor
out
push
push
addl
lds
mov
aad
rolb
jle
and
fadds
aaa
inc
sub
and
lret
cld
into
sub
cld
lretw
cs
mov
test
scas
sarl
xlat
insl
adc
mov
pop
jge
int3
mov
cld
movsl
into
negb
popf
push
lea
xchg
push
call
pusha
lea
jb
clc
bt
cmpb
push
movb
call
pusha
inc
pushl
inc
jmp
loopne
fcmovnu
add
fsubrs
mov
scas
xchg
cmp
sub
sbb
sbb
popa
sub
sbb
push
inc
lahf
das
sti
fildl
arpl
mov
clc
and
and
mov
push
xlat
push
pop
lods
fsubl
dec
jne
aaa
xchg
hlt
fildll
ficomps
mov
jb
inc
fcmovb
imul
cmp
mov
pop
push
cmp
mov
cmp
jp
and
jmp
data16
jp
mov
test
and
sub
inc
add
cmp
mov
sarl
add
subb
adc
mov
jl
test
mov
mov
aad
xorl
test
test
adc
mov
jns
dec
pop
xor
push
add
xor
pop
aad
xor
fneni(8087
ja
daa
xor
pop
in
mov
dec
pop
jge
cmpsl
ds
test
xchg
jne
test
xchg
jl
mov
std
popa
push
shrl
aad
xchg
jg
or
jmp
call
lea
jno
jne
rcr
stc
mov
bt
test
clc
add
call
clc
clc
test
pushf
push
call
push
jmp
std
sarl
add
xor
out
adc
inc
and
inc
jae
arpl
mov
mov
mov
dec
nop
jno
cmc
jae
sti
pop
leave
out
scas
imul
pop
andb
lds
pop
fmul
jecxz
mov
aaa
jno
xor
lcall
in
pop
shrb
or
clc
test
xlat
les
fisubrl
pop
mov
mov
mov
addb
jbe
pop
inc
ljmp
mov
negl
pop
inc
imul
sub
mov
js
lret
addr16
dec
pop
test
adc
loopne
jl
jp
pop
xchg
inc
xor
pop
nop
jnp
mov
jmp
into
xchg
inc
mov
dec
cmpsl
xchg
insb
das
pop
xchg
dec
pop
or
fbld
repnz
rcrl
aam
lcall
aas
fwait
and
insl
adc
pop
xchg
pop
mov
xor
jae
pusha
fs
push
xor
popa
inc
and
out
mov
leave
loope
shl
fwait
sub
sub
jecxz
pusha
aad
cmp
mov
fistl
dec
adc
mov
mov
inc
mov
gs
lret
int
fdivrl
test
and
dec
mov
jge
lret
jp
and
adc
out
mov
out
out
test
add
movsl
mov
cmp
cmpsb
mov
cmc
pop
mov
fcom
sysenter
fimuls
xchg
movsl
xor
jge
mov
xchg
cld
jecxz
fsubrl
fdivrs
addb
sub
pushf
fs
es
loopne
push
in
mov
popf
pop
dec
add
cmp
mov
pop
lcall
inc
lea
add
xchg
xlat
pop
dec
dec
jecxz
jmp
scas
jecxz
fldl
lea
insl
scas
repnz
add
pusha
movl
lea
jbe
pushf
pusha
pushf
movl
mov
mov
mov
lea
jmp
pushf
add
movb
bt
or
call
sbb
popf
add
dec
outsb
shl
xchg
je
mov
les
inc
sub
shrb
popa
or
sub
call
notl
pop
loope
outsb
push
test
or
add
js
mov
cmp
xchg
jns
push
shlb
es
mov
jbe
cmc
jge
fs
ds
into
insb
adc
js
inc
repnz
in
pop
sub
les
cmp
in
subb
jo
inc
xor
xchg
xchg
mov
xor
mov
mov
or
or
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
call
cmc
pushf
pusha
cmpb
pushf
jmp
push
aam
xlat
add
dec
fidivrl
call
xchg
jns
mov
sub
and
or
dec
sbb
mov
cmpsl
das
push
pop
push
lahf
into
dec
cs
and
cwtl
test
dec
mov
inc
stos
adc
mov
idivl
mov
inc
insl
call
add
decl
xor
fidivrl
fstpt
lods
sbb
mov
dec
xlat
pop
xor
push
fs
lcall
movsb
stos
sbb
mov
test
push
inc
popf
xor
scas
nop
fnstenv
mov
mov
dec
fcmovu
fdivl
jns
mov
clc
dec
mov
xchg
xlat
push
decb
jo
pop
jns
and
mov
inc
pop
cli
fldl
add
sub
cmp
andb
ffree
mov
xchg
push
fldcw
mov
or
aad
dec
adc
bound
add
push
pusha
test
or
and
mov
inc
lret
je
mov
ret
adc
addr16
mov
dec
dec
xchg
xchg
sub
jnp
ja
test
pop
mov
push
pop
iret
sub
sbb
imul
sub
idivl
jle
push
jge
scas
js
rcr
scas
mov
lcall
into
test
pop
cmp
sbb
push
test
cmpsb
cmpsb
jg
inc
mov
dec
cs
mov
jp
or
pop
rolb
pop
add
xchg
pushf
pushf
lea
jmp
add
test
call
cmc
call
or
test
add
inc
je
mov
test
lods
int3
outsb
dec
popa
mov
out
inc
rclb
in
jle
roll
pop
repnz
add
cmp
in
mov
stos
inc
mov
mov
mov
adc
repnz
lods
xchg
cmp
mov
jl
ret
icebp
xor
pop
push
fsubr
jl
rcl
mov
adc
mov
sarb
xchg
push
sub
dec
dec
xor
popa
popf
lcall
subl
push
mov
jge
sub
xchg
fcoms
daa
or
shrl
add
lea
fiadds
loope
gs
sbb
les
adc
push
fbld
mov
outsl
adc
mov
sub
pusha
cld
fdivrl
xchg
insb
lret
cwtl
lahf
pusha
push
jle
in
pop
push
daa
cs
mov
adc
and
call
aas
push
mov
add
sbb
jp
into
sti
push
pusha
in
mov
aam
mov
sub
ljmp
cmp
testl
insl
mov
pop
cld
sub
sbb
inc
mov
test
int
aad
scas
adc
jge
dec
out
push
jp
inc
dec
push
fstps
loope
jp
sbb
pushf
ror
jmp
lea
jb
pusha
call
test
sub
add
jbe
xchg
int3
cs
adc
rolb
mov
sti
sub
push
mov
mov
mov
stos
dec
sbb
ret
es
ja
insb
xchg
icebp
jbe
fidivl
les
or
je
insl
cmp
ficoml
push
pop
jp
aas
dec
popa
addr16
fildll
mov
xchg
push
and
jnp
imul
xor
fiaddl
cmpsl
and
mov
int3
sub
lock
in
add
shrb
mov
aaa
pop
std
lock
fisttpll
mov
cmp
mov
dec
pop
sub
imul
mov
inc
dec
frstor
pop
aaa
fadds
test
in
icebp
jbe
jnp
jmp
push
or
nop
pop
xchg
pop
roll
push
sub
xlat
cmpsb
cmc
cltd
inc
call
in
icebp
cltd
cmp
add
push
std
push
add
inc
and
sub
or
movl
pusha
pusha
movb
lea
jmp
inc
xchg
inc
roll
add
popa
inc
gs
dec
push
clc
lds
mov
adc
push
in
jg
stos
jg
push
repz
adc
jns
lret
pop
aas
jb
xchg
cwtl
jo
repz
icebp
add
adc
sbb
lcall
sub
push
ja
dec
and
mov
movsl
ja
xchg
repz
pop
cld
daa
or
ret
jb
andb
cs
leave
inc
lea
jne
setg
lea
cwtl
lahf
mov
push
push
pusha
pushf
lea
jmp
lea
call
pushf
test
cmp
push
pushf
pusha
pushf
lea
jae
cmc
pusha
pusha
cmp
jmp
cmc
cmpb
pusha
pushl
pushf
lea
jne
bts
btc
lea
sub
mov
pusha
test
add
pushf
movzwl
ror
test
not
rol
mov
cmc
cmc
test
call
add
add
movb
mov
or
not
add
movzbw
bsr
xor
movl
pushf
dec
clc
mov
call
jmp
popa
arpl
rolb
and
xor
cmp
mov
call
xchg
iret
pusha
dec
insl
stc
popf
imul
mov
xlat
pop
adc
jno
add
or
fisttpll
adc
rolb
xchg
jmp
inc
xchg
mov
jns
jnp
mov
push
add
xorb
jg
xchg
je
sahf
and
jmp
cmpsl
mov
ja
xor
pushf
into
mov
push
dec
push
in
lahf
xchg
lods
pop
xchg
movsl
jbe
mov
lock
mov
mov
pop
flds
or
xchg
push
pusha
les
xor
jno
or
mov
mov
pop
sub
roll
scas
xchg
jnp
mov
out
shll
shll
arpl
or
outsl
xchg
cs
mov
fs
out
pop
lahf
xlat
fwait
in
xchg
pop
jb
or
ja
cmpsb
mov
sahf
add
mov
aam
pusha
int
add
movsb
dec
sbb
ffreep
dec
mov
jp
outsl
inc
xor
mov
sub
mov
and
cmp
ds
fisttps
vaddss
mov
mov
and
hlt
pop
fisttps
mov
mov
pushf
inc
call
pop
or
xor
js
jge
inc
out
out
lock
stos
xchg
popf
push
lods
dec
fiaddl
xchg
pusha
loope
repnz
lds
adc
cltd
push
test
cmp
or
rcl
addr16
fisttpl
ss
out
mov
insb
ror
sbb
pop
enter
jp
lret
cld
scas
imul
inc
jbe
and
push
or
xlat
sbb
mov
pop
movsl
push
mov
sti
jg
or
fdiv
lds
stc
pushf
mov
push
cmp
jo
jp
inc
leave
or
cmpsl
mov
mov
imul
add
sub
sbb
movsl
add
xor
inc
adc
fldl
leave
dec
inc
scas
rclb
std
fsubl
inc
testb
fmull
cmp
xchg
dec
fsubrs
or
or
cmpsb
push
sti
imul
cmpsl
mov
pushf
mov
iret
into
outsb
loope
jne
push
ja
push
out
push
mov
mov
adc
add
pop
movl
les
ret
sub
scas
iret
je
ret
bound
cmp
mov
ja
pop
add
and
pop
inc
in
fdivr
fistl
fmull
xchg
and
inc
jle
adc
fs
add
in
sarb
jne
in
je
push
insb
mov
jb
popf
mov
mov
jno
sbb
addr16
mov
subl
or
fistps
test
pushf
cmpb
jmp
lea
not
mov
lea
push
movzwl
movzbw
jmp
cmp
add
mov
xor
mov
aas
adc
adc
xor
push
lret
insl
insl
and
or
jmp
int
sbb
cmp
push
inc
mov
push
out
fidivs
imul
mov
cmpl
mov
adc
jge
cmp
out
fldenv
mov
adc
xchg
fildll
pop
mov
sub
stos
or
popa
add
mov
jmp
cmp
fs
jb
call
dec
bt
mov
jmp
jmp
call
lea
jne
test
mov
jmp
imul
push
mov
dec
jo
cli
std
mov
mov
cmp
not
and
shll
sahf
add
push
or
loopne
sub
or
cmpsl
pop
mov
cmp
dec
lods
push
iret
adc
je
into
out
bound
comiss
add
pop
repz
ficomps
mov
loop
iret
cltd
cli
sti
mov
and
outsl
cwtl
cli
loopne
in
aad
pusha
add
call
add
push
sbb
mov
push
out
push
hlt
pop
cli
addr16
stc
xchg
and
xor
xlat
test
push
enter
push
or
lods
addr16
mov
daa
fcmovnu
ss
push
add
jns
jl
sub
cltd
mov
mov
jge
adc
orl
or
sub
mov
xchg
pop
push
mov
lret
xor
sub
arpl
push
aas
movsl
add
inc
pop
out
xor
lods
push
push
in
adc
movsl
in
mov
in
je
shlb
xor
mov
inc
lea
jnp
pusha
pusha
pushf
not
call
sub
in
add
cs
loope
out
lods
dec
in
push
mov
cmp
arpl
adc
jp
pop
movq
sbb
and
adc
push
mov
icebp
stos
roll
mov
ss
mov
popf
cltd
and
add
mov
adc
adc
cld
enter
dec
in
pop
pop
out
cmp
sub
jno
ds
or
ret
fs
dec
out
test
test
out
jo
repnz
mov
mov
mov
add
add
imul
pop
test
outsl
inc
shll
dec
xor
daa
loopne
cltd
sbb
cld
shrb
cmp
push
xchg
dec
fdivl
je
popf
lahf
pop
jecxz
in
fwait
dec
jne
push
mov
cmpsl
push
jae
out
jle
cmp
fnstcw
addr16
push
mov
outsb
int3
addr16
cwtl
loop
int
lods
outsl
sar
pop
dec
cmpsb
pop
mov
andb
int3
jne,pn
sbb
xor
lret
mov
test
mov
repz
jbe
aas
lahf
shr
aam
insl
jl
pusha
or
popf
push
aad
push
mov
lcall
or
cmpsb
or
jo
or
cmpsl
loope
mov
rcll
mov
sti
pop
cmpsb
cmpsl
test
add
push
iret
push
sbb
aad
sbb
sbb
test
push
push
shll
ss
les
push
mov
aas
and
imulb
push
cltd
test
bts
setb
mov
neg
shld
adc
setb
mov
rol
mov
call
sbb
inc
jecxz
in
lea
xor
stc
pusha
mov
push
push
push
and
mov
call
jnp
pop
xor
mov
add
sub
pop
lods
jp
popf
fwait
push
lea
sti
sahf
into
add
out
aad
lea
fwait
cmc
cmp
addb
rol
nop
fstl
stc
bound
or
pushf
sub
test
jle
adc
popw
lret
popa
int
push
mov
cli
popf
and
out
test
ds
mov
lods
fisttpll
jno
mov
mov
cmp
sub
lock
fistpl
bound
dec
sub
push
lahf
icebp
pop
mov
lahf
mov
mov
scas
mov
xlat
cmp
stos
fnsave
pop
gs
lods
mov
inc
out
leave
hlt
movsb
xchg
mov
add
push
xor
subl
pop
sub
add
loop
leave
add
nop
and
mov
ss
jns
jg
imul
lahf
xchg
js
mov
xlat
inc
pushf
xor
and
or
in
std
out
mov
jp
lds
rorb
adc
stos
pop
xor
pandn
test
adc
sub
stos
xchg
mov
movsb
or
lds
adc
adc
push
in
jbe
inc
movsl
call
pop
mov
scas
test
adc
xchg
cmp
lea
jmp
lea
je
pushf
bt
movl
add
movb
call
movb
pusha
pushf
imul
cmp
test
jmp
push
lea
jne
pusha
pushf
stos
pushf
push
mov
lea
jmp
leave
fwait
dec
enter
andb
or
cmp
andl
rorb
icebp
mov
xchg
add
loopne
xchg
mul
sub
push
movsl
push
incl
add
lret
adcb
xlat
stos
cmpsb
out
xchg
mov
cmp
sti
cmp
rclb
xchg
test
ss
mov
jns
xor
test
ljmp
das
xorb
jbe
jg
shlb
negb
test
nop
ss
pushf
daa
adc
test
loopne
mov
mov
call
xchg
mov
mov
dec
pop
add
mov
cld
add
mov
outsb
les
pop
out
add
dec
cld
cli
scas
imul
adc
inc
jne
jnp
xor
sarl
inc
lods
sbb
popf
jmp
jg
cmpb
push
ret
push
data16
xor
or
lcall
movl
mov
pop
jl
subl
nop
or
mov
mov
xor
pop
out
movsb
call
fs
jno
es
xchg
inc
jnp
mov
cmp
rclb
repz
sbb
lahf
popf
push
or
shrl
or
fisubrs
cmp
stos
hlt
and
cmpsb
shrb
push
xor
mov
inc
sub
in
stos
mov
jmp
pop
in
dec
repz
notl
sahf
lahf
fiadds
mov
fnstenv
xchg
ss
js
jecxz,pt
sbb
mov
test
mov
mov
insl
sub
push
in
fsubrp
popf
cwtl
xchg
adc
push
push
xchg
push
lods
push
retw
adc
lock
or
in
lods
cmc
outsl
js
xor
or
std
mov
cmpsb
das
pop
sub
adc
mov
fldl
adc
loope
cld
jbe
jp
hlt
and
int
pusha
add
bt
call
sub
call
push
lea
jb
test
pusha
cmp
call
push
sbb
daa
xchg
mov
jne
cmp
cmp
int3
pop
or
lret
std
push
movsb
sbb
mov
push
sbb
mov
frstor
or
lahf
mov
bound
jbe
movb
cmp
push
lds
gs
mov
and
data16
jno
aam
rcrb
sti
jl
in
outsb
xchg
cmp
movsb
or
das
jae
xchg
insb
dec
dec
popa
mov
jbe
xchg
mov
jmp
and
dec
adc
mov
daa
lret
mov
jo
cmp
test
movmskps
adc
popf
push
sub
sahf
adc
pop
dec
xchg
mov
mov
cmpsb
mov
xorb
xchg
and
mov
sbb
jmp
pop
fldenv
adc
mov
js
mov
ljmp
mov
and
das
jp
pusha
les
adc
adc
xor
sub
int
mov
mov
ds
or
fdivrs
jne
inc
roll
pop
jns
call
mov
in
dec
jmp
jmp
sub
push
enter
jb
push
push
or
and
add
add
pop
sub
add
add
add
add
pop
and
add
fbld
add
add
jnp
and
add
add
ja
add
add
add
add
add
add
add
add
js
add
add
add
test
add
add
add
and
add
add
cwtl
sub
jo
xor
paddusw
add
add
popf
loope
les
push
gs
adc
sahf
ljmp
mov
sbb
movsb
add
xchg
and
out
push
ja
popf
cltd
daa
and
fldt
xchg
jp
dec
xchg
or
adcb
xor
adc
adc
into
sbb
in
and
dec
push
pushl
jecxz
lahf
sbb
sbb
mov
xor
lret
cmove
pushf
shlb
aaa
mov
sub
add
popf
jmp
xor
xor
inc
ljmp
cmpsb
pushf
fstl
mov
fsub
sub
mov
dec
cli
orl
xchg
xlat
or
xchg
in
mov
outsb
fisubl
int
adcl
pusha
adc
dec
cli
or
xchg
stos
fidivl
xchg
sub
jmp
or
or
xlat
or
xor
sub
or
outsl
mov
lea
and
in
pop
test
mov
ljmp
pop
fscale
fisubl
int
test
std
test
lcall
mov
dec
jo
xchg
movsb
inc
out
fcmovb
hlt
in
jns
jno
sub
mov
ljmp
lcall
lea
xchg
inc
xor
dec
ret
mov
test
pop
inc
sbb
stos
icebp
fisubl
dec
cli
cmp
orb
pusha
ds
dec
cli
add
xchg
lcall
sti
addl
ret
fisubl
dec
cli
addl
imul
stos
enter
arpl
inc
sub
jb
or
sbb
in
in
stc
or
add
fisubl
dec
cli
sub
mov
xor
mov
fisubrl
jl
int
jmp
out
in
fidivl
int
xchg
ret
jmp
dec
cli
addl
xchg
fisubl
dec
sti
orl
lea
or
enter
cmpsb
jns
in
pop
xchg
and
xlat
sub
xchg
leave
loopne
or
dec
cli
xorl
das
xlat
cmp
in
repnz
repz
dec
std
add
aad
in
and
repnz
jecxz
xlat
and
and
inc
mov
in
je
sbb
scas
adc
or
xchg
aam
fisubl
dec
cli
subl
jnp
ret
aam
sub
sbb
fidivrl
lods
xchg
test
inc
mov
fisubl
dec
cli
addl
imul
call
cld
mov
pop
push
push
je
fisubl
xchg
and
icebp
imul
mov
lea
jne
setg
not
mov
mov
push
pusha
pushf
pushf
lea
jmp
jbe
scas
rolb
arpl
dec
out
int
xchg
mov
mov
add
sbb
inc
cmp
scas
insl
dec
sbb
lods
push
mov
add
mov
clc
mov
sbb
adc
stos
rolb
push
jnp
jg
add
lods
into
jae
xor
push
popa
mov
lock
popl
loop
iret
lcall
push
jg
dec
leave
pop
or
xor
jnp
inc
sub
dec
mov
jle
mov
mov
fadds
xor
add
fbld
xchg
fldenv
loope
or
push
in
mov
jns
enter
cmp
xchg
pop
pusha
lods
repnz
shl
stos
dec
xor
jnp
xchg
cmp
dec
pop
add
jo
aad
sub
movsb
sub
fsub
imul
xchg
push
xchg
and
cmpsb
xor
jp
in
icebp
mov
cmp
lods
scas
jnp
sbb
lret
pushf
mov
dec
mov
test
iret
push
cld
jb
in
lea
loopne
push
sbb
xchg
in
push
jp
inc
scas
pop
stc
loop
int3
mov
jecxz
out
test
and
inc
or
insb
and
pusha
lea
jmp
mov
xchg
xchg
mov
jmp
cltd
sub
outsb
or
mov
or
std
out
shlb
and
fs
repnz
add
test
cld
jp
lret
jbe
sub
pusha
pushf
lea
jl
pushl
clc
pusha
cmp
clc
cmp
call
cmpsb
in
arpl
cmp
ds
ret
test
arpl
movsb
call
repz
push
test
shrb
lret
mov
in
sbb
scas
insb
es
es
popa
jb
int
aaa
cmp
lea
pop
sti
adc
pop
push
sarl
scas
xchg
inc
das
cmp
dec
inc
xchg
dec
fsts
lea
xchg
pop
mov
stc
pop
mov
lds
and
xor
sti
bound
xor
pop
aas
daa
stos
mov
sbb
jnp
hlt
adc
call
adc
mov
pop
add
dec
out
repnz
jne
mov
dec
movsl
cmp
in
push
and
imul
cmp
lcall
adc
popf
lds
inc
or
inc
jne
divl
pusha
and
nop
push
gs
jne
cmp
xchg
xchg
stc
fs
popf
stos
subb
adc
scas
sarl
jecxz
in
push
mov
adc
shr
fisttpl
sbb
stc
call
test
stc
incl
sub
xor
mov
sahf
add
mov
inc
mov
test
test
inc
or
test
test
mov
push
sti
dec
and
xor
in
adc
shr
dec
scas
ret
push
push
sub
pop
int
out
xor
ja
pop
cmpsb
mov
cmp
jnp
insl
ja
push
mov
dec
add
mov
inc
nop
je
push
cmp
mov
jl
movsb
call
adc
ljmp
pop
aas
pop
add
popa
sub
imul
mov
insl
push
ja
mov
mov
cltd
jge
jp
cmc
cmp
clc
inc
or
and
inc
cwtl
xor
sbb
xchg
xchg
xor
into
xor
or
in
mov
mov
movsl
lds
jp
fs
pop
adc
das
cmp
push
shlb
loopne
rcrb
sbb
test
or
lock
mov
mov
test
mov
mov
imul
pop
jbe
jge
or
popf
push
cltd
adc
insl
insb
xlat
clc
dec
xor
pop
test
pop
push
loop
lds
pop
enter
sub
lret
cli
inc
rcr
or
jp
adc
and
mov
push
divb
jg
pushf
add
xor
fiadds
cmpsl
call
pop
aad
push
pop
pushl
lea
jb
jmp
stc
pusha
cmp
pusha
lea
jae
pusha
add
pushl
pushf
jmp
cwtl
sbb
enter
fidivrl
pop
std
sbb
sarl
fisubl
repnz
ljmp
pop
std
test
ret
pushw
aad
add
dec
push
xchg
dec
mov
inc
and
adc
sub
insl
inc
fadd
inc
imulb
xchg
push
into
mov
adc
xor
lahf
push
imul
pop
pop
jo
pop
testl
movsb
xchg
pop
mov
mov
jle
add
pop
jmp
andl
xor
mov
sbb
sub
or
cltd
shr
mov
fldt
arpl
inc
mov
sub
adc
pop
ret
imul
add
mov
cmp
mov
int
push
and
lods
cmc
rolb
pop
addb
in
and
imul
and
lds
test
dec
fdivrs
mov
push
sub
xchg
je
xchg
dec
out
xor
adc
stos
sahf
hlt
push
shrl
xor
adc
loopne
call
call
mov
mov
ja
cmp
pop
inc
loope
sub
cs
call
test
aam
jl
int
scas
das
rorb
mov
les
aam
test
addb
ret
adc
sbb
jnp
add
insb
sbb
int
pop
in
push
cmp
push
lods
mov
inc
sti
xor
jle
faddp
adc
inc
sub
jg
sub
cmpsb
std
fidivl
mov
xor
or
jo
mov
aas
push
insl
add
out
leave
mov
mov
push
cmp
cmp
das
xchg
repnz
ljmp
sbb
pop
jecxz
xchg
jecxz
lret
push
je
pop
imul
pop
xor
js
and
xor
imul
std
pop
ss
fnstsw
out
in
xor
add
and
xchg
cs
mov
xor
in
jo
mov
sarl
shl
mov
xor
clc
cmc
movb
repnz
jmp
mov
call
cmp
mov
mov
jne
lahf
xchg
lret
cmpl
xor
pop
arpl
mov
out
cli
and
mov
imull
add
mov
push
xor
hlt
push
jp
jg
adc
cli
test
cmp
sub
dec
mov
fnstenv
jg
jo
out
adc
mov
and
in
insb
push
or
push
push
push
dec
movsb
lea
fsubr
int
pop
lds
daa
adc
ret
push
scas
je
inc
push
cwtl
inc
sub
aaa
lahf
ret
test
ja
pop
sub
nop
aam
jnp
or
add
pop
lea
jbe
or
shrd
neg
sub
ror
mov
stc
clc
mov
rcr
add
rol
shr
and
shl
xadd
mov
cmc
add
pusha
mov
movl
mov
pushf
not
pushf
lods
bt
bt
add
push
rol
pushl
inc
movb
call
movl
pusha
pushf
call
pushf
stos
pushf
push
lea
jmp
pusha
mov
setne
not
pop
pusha
mov
pushf
pop
movsbw
mov
pushf
mov
jmp
cmp
call
xor
xor
inc
test
xchg
cmp
mov
outsl
mov
xor
scas
lahf
or
shrl
arpl
in
push
adc
mov
inc
xchg
adc
les
sbb
jnp
pop
mov
mov
pop
jp
xor
and
in
or
mov
mov
ja
mov
pop
inc
lds
adc
xor
sbb
pop
jns
cmp
xchg
xor
dec
and
mov
subl
inc
sub
dec
iret
mov
es
adc
mov
push
mov
test
mov
js
test
lods
js
icebp
adc
push
xorb
push
xchg
movsb
cmp
mov
into
sbb
addr16
jbe
sbb
gs
add
lret
pop
pop
jbe
cmp
adc
ds
lea
stos
hlt
xor
add
pop
ds
movsb
dec
dec
pusha
and
xchg
push
xchg
dec
movnti
mov
idiv
lcall
sahf
test
lcall
or
shrl
cmpsl
dec
ss
push
mov
ret
je
frstor
pushf
jmp
cmc
clc
imul
pusha
movb
test
pusha
add
pushf
lea
jmp
inc
mov
dec
not
inc
mov
dec
inc
mov
jmp
mov
lods
mov
les
jge
add
xchg
jb
cli
dec
sub
adc
mov
jmp
and
les
and
jne
mov
arpl
xor
std
and
testl
sub
jo
ja
sti
pop
andl
mov
lock
fsub
imul
pushf
test
jg
mov
lds
pushf
imul
xchg
or
out
pop
jb
daa
mov
jg
lret
xchg
mov
aam
mov
jmp
mov
pop
faddl
sbb
mov
push
popa
hlt
inc
or
bound
adc
pop
pop
in
push
cld
and
sar
lahf
pop
mov
lret
cli
popa
callw
push
rol
inc
and
insb
pushf
movl
dec
clc
mov
call
rol
mov
stc
sub
adc
and
bound
shl
ljmp
imul
sbb
sarb
dec
dec
call
push
xchg
mov
test
in
lods
stos
pop
fldt
xchg
test
sbb
jle
insl
movsb
cmp
stc
loop
outsl
or
int
jne
in
and
popf
outsb
shl
out
lret
lcall
sarb
pop
shrl
mov
jbe
roll
in
mov
bswap
call
movl
pusha
jmp
cmpsl
out
mov
ljmp
bound
jae
inc
lahf
scas
sbb
xor
cmpsb
ljmp
pusha
cmpsl
pop
sarb
jg
jb
rorl
xor
push
cmc
cmpsb
pop
or
sbb
in
cmpsl
dec
cmp
mov
xchg
in
imul
stos
iret
in
jae
mov
int
inc
inc
jecxz
inc
adc
inc
lods
xchg
arpl
or
mov
xchg
jmp
mov
lea
jae
not
stc
rol
bt
mov
add
mov
shl
sar
lea
rcl
mov
call
out
popa
mov
les
push
lock
cmp
mov
sub
outsl
sbb
xchg
loope
xor
mov
and
ud1
add
loope
inc
std
sti
sbb
and
outsb
cmp
in
lahf
inc
inc
test
mov
inc
out
jno
outsl
mov
fsubrl
dec
in
std
and
hlt
pop
sub
je
subl
xchg
fistl
inc
icebp
pop
ret
jnp
push
mov
movl
call
loop
fwait
mov
in
xor
push
stc
fiadds
mov
xlat
aas
insb
scas
pop
push
inc
movsb
xor
or
cli
add
pop
add
scas
push
mov
popf
and
lods
aas
daa
lcall
testb
jl
inc
cmc
je
jecxz
pop
jecxz
push
mov
lahf
insb
cmp
lock
hlt
cmpsl
or
call
stos
int3
js
mov
pop
mov
mov
pusha
push
sub
mov
pusha
pushf
pushf
rep
pop
bswap
mov
mov
mov
push
mov
lea
jmp
cmp
jno
xchg
mov
adc
cltd
ds
push
pushf
cmp
jno
inc
in
pusha
and
jns
cmp
cmp
call
mov
adc
and
mov
mov
bound
sbb
fldt
iret
mov
jne
add
ja
std
loope
push
andb
add
dec
add
mov
shll
shrb
and
sub
jge
ret
movsb
jae
jnp
dec
xor
lods
mov
inc
xchg
inc
jne
xchg
or
jno
jns
sub
aas
sti
cs
fildll
cmp
sub
lahf
shr
jae
pop
mov
ds
or
and
adc
pop
xchg
or
mov
cli
xchg
add
popf
daa
xor
or
ds
scas
push
mov
outsl
mov
lea
mov
xchg
inc
stc
jmp
popf
jmp
mov
les
ja
mov
cmp
jl
inc
in
adc
movsl
mov
and
inc
jbe
subb
mov
fcoml
xchg
pop
stos
pusha
rorb
push
add
cmp
mov
push
addr16
daa
jbe
pop
adc
insl
add
pop
stos
rorl
jecxz
popa
jo
sbb
sbb
xchg
jp
pop
mov
xchg
js
add
add
sub
or
scas
sub
test
push
shl
out
mov
mov
and
push
pop
add
mov
mov
bt
clc
pushf
test
pusha
lea
jno
jmp
pusha
jmp
not
pushf
shl
bswap
mov
call
shl
mov
call
push
call
cmpsl
clc
test
pop
jl
xchg
dec
das
shlb
xchg
xor
or
mov
in
jle
mov
sbbl
repz
stc
and
lods
adc
or
cmp
or
sub
in
popa
push
dec
shlb
push
ss
push
rcrl
or
or
mov
mov
sti
mov
mov
pushf
and
ds
inc
std
enter
cs
pop
lahf
test
std
jl
mov
fnstenv
or
aam
or
outsb
sahf
int3
mov
aas
mov
cmp
idivl
jecxz
in
sbb
cmp
inc
xor
add
cltd
add
dec
repnz
pop
loopne
mov
pop
mov
or
aam
std
hlt
je
and
lahf
out
mov
cmp
enter
pop
dec
jno
jns
imul
push
sbb
enter
adc
sti
cwtl
mov
jns
scas
mov
push
mov
or
ret
cmp
je
adc
pop
add
sti
out
push
call
or
sub
sbbl
add
shlb
push
push
mov
outsl
in
aam
and
lock
shll
out
xchg
mov
lods
lods
jno
lahf
mov
div
mov
out
scas
mov
cmpsl
or
fiaddl
lds
ljmp
cmc
test
movw
repnz
pushf
movb
push
push
lea
jne
lahf
lea
movb
lea
jmp
pushl
jmp
push
lea
call
pushf
pushf
lea
jmp
bt
bt
repnz
pusha
lea
jne
mov
movb
bswap
lahf
cwtl
movsbw
push
cwtl
lea
movzbw
lea
push
movw
pushl
jmp
jmp
movw
movl
pusha
lea
jmp
mov
scas
scas
add
stc
loop
daa
or
lea
push
ja
jg
mov
mov
jnp,pn
xor
arpl
pop
test
cmpsb
mov
mov
push
push
push
mov
gs
sub
call
inc
loop
push
pop
mov
or
fs
pop
mov
test
int
ja
outsl
addb
jo
push
push
add
shlb
repz
es
loopne
cld
and
add
stos
fdivr
loopne
sub
dec
mov
je
cmp
mov
jo
or
mov
mov
pop
pusha
in
push
mov
ds
mov
in
cmc
outsb
and
cmpb
std
mov
mov
ss
inc
inc
clc
push
xchg
push
add
pusha
nop
dec
push
and
pusha
inc
adc
or
js
addl
call
aam
fiadds
lds
jge
leave
jno
xor
cmpsb
hlt
popa
mov
jbe
movl
pushf
add
mov
clc
test
mov
lea
je
cmp
bt
sub
pushf
call
insb
out
lods
add
arpl
push
je
stc
pop
mov
insl
dec
mov
es
mov
sbb
mov
dec
mov
cmp
mov
and
dec
adcb
jbe
inc
jle
push
loope
pop
push
mov
add
and
adc
mov
nop
pop
enter
mov
stos
xlat
sti
and
xlat
std
loope
scas
xchg
pusha
fisubrs
aaa
xor
jbe
adc
jmp
jbe
jo
xor
cs
insb
add
lods
add
sub
jne
cmp
inc
movsl
xchg
fldl
mov
fildll
mov
push
mov
int
xchg
cmc
sbb
out
gs
mov
sbb
jge
dec
xor
test
inc
mov
ja
push
movsl
mov
mov
lcall
jnp
int
or
leave
jge
sub
lahf
xchg
cmpsb
xchg
repnz
mov
inc
add
addr16
xchg
sub
jnp
push
xchg
mov
shrl
inc
mov
inc
daa
push
ja
ret
sub
out
sub
and
aam
enter
pusha
mov
lahf
pop
cwtl
movw
lea
pushf
movl
pushf
pushf
pushf
push
mov
mov
pushf
pushl
pushl
ret
hlt
xorl
icebp
and
cmpsb
int
je
xor
jnp
add
adc
mov
inc
hlt
js
mov
pop
pop
test
xor
jmp
sub
mov
iret
cmp
lds
adc
ret
pop
mov
adc
mov
push
stc
call
loope
cmc
mov
xor
dec
outsb
sbb
outsb
rclb
mov
les
adc
jbe
add
or
pop
ret
cmpsb
lea
ret
imul
pusha
cmpsl
dec
bt
clc
clc
bt
cmp
movsbw
lea
jae
setle
lea
setg
cwtl
movsbw
pop
pusha
lea
ja
call
lea
jae
push
lea
jmp
setl
lods
test
cmp
add
push
cmc
push
clc
rol
movb
jmp
lea
jne
call
imul
pop
jl
add
add
mov
dec
in
shll
xor
push
call
or
out
jno
fdiv
std
dec
fiaddl
adc
sbb
mov
inc
adc
and
in
mov
mull
xchg
jp
mov
pop
push
mov
daa
push
js
fsubrs
mov
mov
mov
ss
arpl
jg
scas
pop
mov
jl
dec
jae
cmp
out
aam
out
shrl
xor
push
mov
iret
lahf
push
stos
add
lcall
or
mov
mov
fwait
xchg
mov
pusha
or
je
rorb
xor
nop
xor
inc
add
sbb
sbb
pop
dec
sbb
sbb
or
jnp
pop
dec
int
mov
pop
mov
mov
test
imul
mov
jbe
xchg
jl
pop
jno
je
imul
pushf
enter
cmpb
push
pusha
lea
jne
aad
sub
movsbw
mov
inc
test
add
or
mov
push
test
pushf
lea
je
bt
sub
push
test
cmp
call
clc
xor
lea
jl
call
pusha
pushf
lea
jae
push
call
leave
push
test
pop
bound
dec
lods
sar
xchg
cmp
clc
ljmp
mov
sub
aad
sbb
sahf
aas
xchg
insb
sbb
arpl
mov
xor
pop
sub
lret
adc
jo
cmp
adc
sarl
cld
push
bound
out
das
jmp
cmp
add
xchg
jns
rcr
cmp
add
add
mov
in
xchg
sti
mov
lret
or
out
jg
or
in
mov
lock
aam
aam
jl
lds
pop
xchg
add
scas
pushf
fimull
icebp
jnp
push
inc
sahf
pop
es
ljmp
mov
sti
pop
cmp
repnz
sbbb
fldt
negl
neg
test
test
push
xchg
in
mov
adc
cmpsl
add
pushf
sub
stc
cwtl
and
inc
inc
jle
mov
jo
xchg
add
out
int3
or
sub
xchg
ret
mov
cmpb
cmp
push
mov
xchg
adc
xor
ret
add
mov
adc
add
sub
negb
movsb
dec
mov
shl
mov
pushf
loopne
stc
aam
mov
adc
jmp
cmp
call
lea
jae
call
ret
test
les
in
dec
mov
mov
mov
cmpsb
push
jns
mov
mov
mov
or
pop
inc
pushl
adc
jge
aam
bound
ss
fmuls
mov
mov
xchg
pushf
add
pop
sbb
adc
arpl
jle
dec
stos
aad
or
ds
xorb
pop
insb
xchg
mov
mov
mov
lea
jbe
and
sub
btc
bsf
rcr
mov
cmp
push
btr
mov
shl
call
push
push
iret
cmpsb
add
sbb
out
sub
scas
iret
xor
pop
xor
call
ret
push
push
add
push
icebp
sbb
xchg
cld
loope
stc
jp
mov
lcall
aad
mov
pop
mov
leavew
pop
out
sarl
les
add
rcll
sub
arpl
or
jg
ficoms
push
dec
cmp
mov
adc
jecxz
lods
xor
test
pop
and
add
testb
cmovg
test
mov
and
and
xor
shll
jae
mov
xor
sahf
push
test
xchg
mov
mov
into
insb
shlb
pop
out
adc
sub
loopne
push
mov
test
jp
push
lds
pop
jmp
outsl
stos
pusha
push
cmp
push
or
xor
scas
inc
loop
xchg
mov
loopne
es
xor
leave
dec
or
mov
shlb
or
fbstp
aad
cmp
lret
testl
push
jns
add
push
mov
ss
add
popf
popa
adc
and
inc
and
arpl
mov
sub
add
sub
pop
cmp
inc
es
sub
outsb
iret
xor
iret
push
mov
movsb
jo
ret
outsb
pusha
and
leave
xor
add
pop
lds
fmull
ss
sti
xchg
or
fs
cmpsb
mov
fs
xchg
xchg
data16
rorl
inc
dec
rorl
lea
mov
and
enter
outsb
jp
or
clc
in
mov
mov
pop
cmp
mov
sbb
loop
mov
jle
or
test
xchg
mov
cmp
stc
bt
or
jmp
lea
je
call
jmp
pusha
pushl
call
bound
loop
add
sub
repz
pop
inc
mov
dec
repnz
sub
aas
daa
jb
xor
loope
call
scas
imul
insl
push
fistps
cmpsb
sbb
mov
scas
outsb
jns
cmp
movsb
pop
dec
mov
or
adc
fbld
jb
inc
les
int
lods
cmp
sub
adc
cmpl
lret
or
jno
lcall
cltd
addr16
into
sbb
movsb
mov
aas
stos
push
jns
ljmp
dec
cli
imul
movsb
add
jle
or
adc
nop
jne
sti
cltd
shlb
dec
xor
pop
mov
or
mov
movsl
jo
xchg
push
pop
sub
pop
pusha
jmp
add
mov
scas
gs
fstps
out
nop
mov
pop
cmpsb
mul
xchg
out
mov
leave
insl
mov
sti
push
xor
mov
fnstcw
fsts
icebp
fcmove
adc
fistpl
adc
mov
les
cmp
or
ja
or
pop
pop
jmp
sbb
ret
negl
stos
jmp
jne
stos
lock
add
out
xchg
xchg
fidivrs
in
adc
push
not
inc
and
add
in
cmp
std
xchg
jmp
cltd
lea
sbbb
adc
adc
in
ljmp
cmp
notl
icebp
cmp
jae
shlb
movsl
xor
ja
push
test
sbb
mov
out
and
pop
andb
dec
je
add
push
add
pop
subl
add
mov
out
icebp
aam
pop
cmp
sti
and
adc
shl
add
jl
inc
out
cli
inc
xor
pop
jnp
pop
dec
icebp
pop
pushf
push
stos
ss
mov
movsl
fmuls
mov
adc
int
dec
sbb
or
pushf
push
in
xor
popa
stos
mov
sti
cmpsb
sbb
jns
jb
test
mov
xor
sbb
xlat
inc
mov
loop
stos
sub
aaa
popf
pop
in
xchg
mov
ja
xchg
dec
mov
loope
xor
int
cmp
pushf
pushf
lea
jae
sar
and
shr
mov
dec
inc
mov
shrd
btr
bsf
cmc
mov
push
xor
clc
stc
cmp
pushf
repnz
pusha
movb
jmp
test
cmp
call
rorl
add
xchg
andl
repz
cmp
in
lcall
movsl
or
sbb
pop
sbb
xor
popf
xchg
movsb
mov
in
or
xchg
imul
fcmovnu
or
in
mov
mov
daa
or
das
jmp
mov
cmpsb
push
cltd
call
sbb
mov
pop
imul
aaa
xchg
in
adc
pushf
subb
dec
pop
dec
fsubr
mov
push
sbb
lock
xor
negl
leave
lock
mov
and
push
ds
xchg
mov
lods
mov
popf
push
mov
sub
mov
adc
sub
cmp
movl
popf
aad
and
enter
push
outsl
dec
dec
sbb
arpl
cltd
subl
ljmp
aad
imul
jae
dec
pushf
mov
inc
imul
pop
push
push
or
ljmp
mov
cmp
mov
jmp
mov
movl
call
cmp
clc
mov
mov
ds
inc
jecxz
xor
ror
setle
sub
lea
lods
fwait
mov
or
mov
stos
andb
push
mov
sarl
clc
mov
sar
xor
and
add
dec
xor
mov
jnp
xchg
std
push
das
stos
sub
mov
add
test
pushf
mov
mov
movw
cmp
cmp
bt
test
pushf
push
call
lcall
lret
in
push
jo
mov
adc
in
fcomip
clc
push
cmp
dec
popf
or
push
or
mov
or
iret
fcoms
dec
add
mov
jb
xchg
cld
inc
outsl
push
mov
fwait
xchg
shlb
lahf
dec
arpl
or
fwait
dec
xor
testl
fwait
in
add
es
stos
adc
out
xchg
mov
out
jmp
js
add
xchg
mov
mov
inc
push
test
xor
sbb
dec
and
aaa
gs
imul
jmp
pushl
setl
inc
not
call
call
pop
lock
push
negl
add
mov
mov
sub
ret
mov
inc
xchg
xor
in
mov
push
pop
add
pop
adc
and
xchg
jle
add
add
faddp
fidivrl
sbb
xor
jle
cli
jb
inc
mov
and
sbb
jge
enter
and
fiadds
lret
xchg
and
jo
push
pushf
jge
add
lock
mov
jae
adc
xor
mov
shl
jne
mov
test
lds
dec
mov
pop
add
aad
or
pop
mov
out
xor
dec
insl
cmp
inc
mov
movsb
xor
adc
add
mov
sbb
test
ss
add
push
mov
pop
mov
add
mov
movl
push
pusha
jmp
movl
call
not
not
setl
inc
pushf
setbe
stos
not
mov
jmp
xchg
je
pop
pushf
xchg
pushf
seta
mov
pop
xchg
mov
jmp
pushl
lea
je
push
push
jmp
or
ret
hlt
xlat
std
fldl
add
test
lods
cmp
rorb
cmp
ret
sub
fstpt
in
pop
sub
je
or
int3
sub
push
loop
fwait
jecxz
bound
fldcw
and
fs
insb
cmp
rcll
pop
inc
adc
in
dec
cmp
xchg
lods
fnstsw
push
inc
imul
les
faddl
push
sbb
mov
pop
popf
add
push
imul
inc
in
insb
adc
les
sub
jnp
popf
repnz
pop
in
dec
add
push
pop
sbb
xlat
push
pop
inc
repz
in
mov
lea
cmp
testb
bound
inc
add
sbb
lock
in
orl
je
popf
addb
jnp
out
lock
sbb
sub
negb
in
xchg
cmp
inc
imul
pop
ret
pop
aad
push
popf
add
push
aas
loopne
mov
adc
xchg
mov
cwtl
imul
push
leave
lret
sbb
or
xor
pop
out
xchg
int
ja
aas
push
mov
fmulp
stos
mov
filds
inc
jge
outsb
mov
insl
loopne
mov
sub
push
sub
out
test
pop
loop
xchg
loopne
push
push
and
sub
out
adc
jno
pop
hlt
mov
push
jae
test
scas
cmc
sbb
imull
paddusb
stc
inc
push
jns
test
xchg
mov
mov
sbb
mov
jae
or
add
cld
fs
dec
in
xchg
jae
cmp
sbb
xor
push
push
int
push
popa
outsb
faddl
xchg
push
cmp
sub
jne
pushf
push
mov
notl
and
stc
sbb
iret
add
data16
mov
sbb
and
addr16
gs
in
mov
es
je
addr16
mov
cld
pmuludq
iret
mov
jg
cltd
in
scas
sbb
mov
inc
add
xor
xchg
sub
mov
xchg
xor
cmp
cmp
xchg
push
loope
sub
lahf
inc
push
sti
leave
mov
jb
or
mov
repz
pushf
aam
cli
inc
cmp
loope
icebp
or
ljmp
rol
inc
adc
xchg
push
push
daa
mov
dec
dec
pop
mov
imul
xor
mov
hlt
xor
mov
test
enter
imul
xchg
and
inc
mov
push
xchg
dec
mov
push
mov
pushf
inc
sub
loope
xor
test
mov
out
pushf
mov
test
test
pushf
lea
je
pushf
clc
add
jmp
jmp
push
out
pop
js
inc
jecxz
or
or
enter
xor
std
adcb
and
push
in
popf
daa
repnz
mov
bswap
test
in
rcl
mov
push
inc
repz
js
sub
inc
mov
test
mov
addb
ljmp
scas
push
mov
es
add
sbb
clc
jmp
mov
add
pushf
add
shr
shr
bsf
push
xadd
bts
mov
rol
add
mov
pushf
mov
lea
jmp
bt
push
xor
clc
repnz
pushf
pushf
pushf
call
and
popf
cltd
add
pop
or
mov
cmc
xchg
jl
or
dec
pop
dec
sbb
dec
aas
or
push
arpl
sbb
loop
cmpsb
inc
sub
loope
xor
inc
cwtl
cmp
pop
inc
or
das
pop
sub
stos
mov
adc
data16
mov
xchg
in
test
sub
out
xorl
cmp
rorb
repz
jl
test
dec
in
sbb
shr
cmp
add
dec
mov
push
insb
ds
clc
rclb
push
scas
std
fimuls
das
jbe
repnz
jle
dec
arpl
mov
call
add
add
popf
sbb
clc
aam
pop
inc
sub
cmp
outsb
push
cmp
push
cltd
push
cmpsb
pop
inc
das
pop
popf
pusha
lea
jne
movzbw
adc
test
pushf
xor
rcr
and
stc
mov
test
and
add
shl
not
push
mov
test
test
jmp
outsl
insb
gs
jne
xor
cs
insb
add
std
mov
icebp
xchg
cmp
ret
arpl
jl
add
dec
xor
sti
cmp
xor
add
cmp
dec
leave
sarb
mov
adc
test
in
movb
arpl
fdivrs
or
fistpl
loopne
add
xchg
push
push
stos
push
orb
ficomps
enter
add
or
push
cmp
lods
push
mov
lahf
fs
pop
inc
mov
add
leave
xor
mov
cmpsb
mov
mov
or
mov
xchg
inc
daa
daa
xor
cmp
pop
push
jbe
inc
sbb
pop
mov
mov
push
stos
in
repnz
into
jge
or
in
pusha
push
popf
xor
std
cmpsb
xor
pop
mov
test
dec
dec
loope
xchg
out
fs
mov
add
xchg
xor
dec
repz
jmp
and
xlat
aas
test
divl
cmp
sub
xor
pop
cld
sbb
adc
loope
xchg
jns
shl
repz
cwtl
test
pop
add
dec
xor
xor
xchg
jo
test
and
adcb
and
mov
in
cmp
sti
cmp
pop
sub
add
mov
addr16
dec
aam
sbb
push
stc
inc
xchg
mov
mov
mov
sbb
daa
jb
aas
psllw
imul
xchg
cmp
fimuls
xor
push
jecxz
add
loopne
shll
mov
xchg
and
push
xor
sub
cmp
mov
test
loopne
and
scas
outsb
push
jle
push
lods
mov
or
xchg
sti
insb
and
loop
mov
bound
imul
or
xor
push
cmp
stos
sub
jno
popf
scas
pop
jbe
js
add
xor
mov
das
mov
jae
mov
movsl
push
and
movsl
and
xlat
sti
mov
dec
sub
mov
pop
ljmp
mov
mov
js
xchg
add
cmp
andl
clc
ds
gs
rcrl
mov
fisubl
push
pop
daa
pushf
js
jl
subl
outsl
sbb
lret
xor
sbb
pop
repnz
mov
mov
add
iret
and
stos
xchg
add
cmc
fistpll
and
adc
int3
cmpsb
jne
inc
lret
sbb
mov
out
jnp
cli
xor
xor
mov
fstl
sub
and
gs
in
xchg
mov
aas
test
fcmovne
imul
ss
decb
mov
and
out
fists
push
inc
adc
das
mov
jecxz
pop
xchg
popa
and
push
fdivr
push
inc
jg
jbe
mov
popf
stos
jne
ret
daa
hlt
sbb
ljmp
lods
loop
dec
outsb
push
inc
insb
mov
enter
setle
mov
lea
lea
lahf
jmp
xor
mov
add
imul
pop
jp
mov
in
into
outsb
jg
cmc
imul
cmpsb
adc
pop
adc
sub
or
fistps
ljmp
mov
cmp
lea
lahf
adc
pop
outsl
xor
xor
fwait
sub
in
mov
mov
call
jmp
js
xchg
insb
push
jl
inc
or
cmp
loope
sbb
jmp
pushf
movl
pushf
pushf
movl
pushf
pushf
pushf
lea
jmp
jmp
adc
push
cmp
imul
jns
jp
adc
cltd
fwait
dec
xchg
or
ja
lods
or
test
push
jecxz
adc
mov
sub
lcall
jo
jb
push
sbb
xchg
or
mov
dec
jb
fstp
push
lds
xor
andl
mov
jns
stos
sarl
lcall
add
add
mov
cli
fidivrs
mov
lret
sub
aaa
les
insb
jp
pop
in
adc
pop
jg
dec
adc
inc
stc
mov
jmp
lret
pop
cmpsb
mul
test
clc
mov
imul
mov
sub
jno
sub
push
popf
jbe
and
sbb
mov
repnz
sbbl
into
into
je
push
add
addr16
xor
jno
shlb
fadds
sub
add
mov
leave
out
sarl
sub
cltd
gs
fdivrl
and
in
out
mov
test
test
outsb
inc
jne
iret
out
loopne
pop
pop
ds
aaa
add
push
int3
cmpsl
add
ret
push
in
mov
dec
adc
std
push
jg
jl
mov
adc
sarb
xchg
mull
out
aas
int3
cld
enter
daa
outsb
mov
mov
fnstsw
sub
lods
adc
pushf
test
xchg
mov
rol
stos
xchg
jg
jne
movsbl
or
ror
mov
test
clc
cmc
push
add
push
movzwl
bswap
bswap
shld
mov
cmc
add
test
cmc
mov
cmc
test
mov
lea
je
bt
add
stc
pushf
cmp
call
pushf
pop
adc
and
mov
push
xor
negl
and
out
cld
xor
mov
jle
mov
jmp
push
push
sbb
jp
imul
dec
push
or
aas
xchg
jge
sub
les
xchg
fdivs
sbb
bnd
sahf
mov
fistps
imul
stc
inc
enter
shrb
or
arpl
jno
shl
mov
inc
cmpsb
lret
xor
insl
mov
mov
mov
stc
clc
test
call
add
cmp
add
xchg
rdtsc
push
cmp
outsl
into
stc
inc
dec
shl
imul
insl
loopne
and
lods
jb
popa
sub
out
fcmovne
add
or
xchg
pusha
int3
adc
inc
into
and
bnd
xorl
inc
imul
aam
dec
mov
add
call
mov
dec
sub
test
out
push
jbe
ret
ss
jmp
rclb
fldcw
ret
mov
js
add
ret
insb
repnz
clc
sbb
repz
inc
mov
jl
xor
sub
jo
dec
mov
enter
or
dec
mov
and
and
jbe
idivb
cmpb
jle
loop
scas
aam
stc
imul
test
xor
addr16
inc
stc
mov
cmpsl
lret
mov
xor
mov
sbb
loop
call
mov
insl
mov
dec
lods
sarl
cli
pusha
lods
sub
push
jle
jns
or
xchg
add
loopne
xor
cld
filds
push
and
iret
mov
mov
fistps
hlt
mov
faddl
xchg
aad
jo
fwait
jmp
sub
in
xlat
or
rolb
push
movsl
subl
mov
data16
adc
mull
sub
ficoms
popf
call
cmp
jo
push
je
cmp
push
jb
subb
mov
jo
dec
jmp
jmp
rolb
add
inc
scas
shlb
inc
mov
movl
inc
add
in
sub
pop
mov
dec
lret
pop
jno
adc
xlat
inc
pop
mov
or
sbb
aam
in
mov
xchg
cmp
shlb
sarb
mov
add
loopne
sbb
jmp
testl
and
jae
pusha
lea
jne
test
mov
btc
rcr
and
inc
sub
mov
mov
cmc
sub
bt
bt
pushl
clc
test
call
rorb
add
xchg
jle
and
imul
fcmovnu
push
pop
repnz
shll
mov
in
jle
iret
je
bnd
lcall
pop
repnz
ret
sbb
fcoml
insl
addl
pop
aam
push
mov
add
test
sar
stc
mov
add
lret
cmp
dec
and
mov
frstor
hlt
inc
daa
dec
je
and
xor
cltd
fst
dec
cmp
lea
ja
pusha
pusha
pushf
lea
jb
bt
cmpb
push
pusha
pusha
lea
jne
pushf
pusha
mov
test
pushf
pushf
cmp
add
mov
jmp
sub
outsl
pop
mov
xor
sub
mov
mov
sahf
push
cmc
shr
xchg
icebp
mov
jmp
xor
dec
xlat
popf
and
loop
sarb
jmp
in
sar
scas
pushf
lea
jno
mov
jmp
push
push
insl
popl
mov
push
movsl
or
mov
adc
xchg
mov
aad
xchg
and
iret
stc
test
adc
ret
or
je
test
fs
daa
lret
int
scas
cmp
out
jecxz
dec
cmp
dec
test
pushl
inc
pop
sbb
inc
inc
cmc
scas
rorb
xchg
push
add
shr
pop
add
inc
pop
mov
fldln2
and
movsl
out
sbb
pop
xor
cs
sub
and
mov
ret
and
sub
mov
leave
add
sbb
cmpl
mov
js
lods
int3
lock
mov
add
dec
pop
lahf
orb
xchg
add
dec
sbb
jb
mov
leave
das
mov
sti
mov
sub
test
push
pop
push
aad
cmpsb
or
add
push
lea
inc
stos
pcmpeqw
aaa
shll
and
jle
sahf
in
ss
lock
stc
addr16
push
popf
maskmovq
notl
sub
sbb
push
into
out
std
out
dec
pop
lret
lret
and
push
jo
in
lea
mov
or
push
push
cmc
and
and
cmpsl
push
cmp
es
sub
mov
iret
fisubrs
pop
sbb
push
mov
add
test
mov
jo
pop
pop
xchg
gs
sbb
xor
test
nop
mov
cltd
mov
add
lds
cltd
mov
mov
ljmp
sbb
das
sbb
jg
or
cmp
aas
adc
lcall
xchg
push
mov
fs
ret
jge
stos
pop
aad
cmp
outsb
pop
jno
or
addr16
bound
hlt
nop
ror
notl
mov
push
push
stos
psubb
lds
stc
pusha
fbld
wrmsr
inc
xchg
cmpsl
push
clc
hlt
xor
stos
mov
test
fnstsw
sub
push
negl
jb
inc
fld
fs
mov
push
adc
ljmp
fiadds
das
xchg
inc
test
mov
pushf
jge
jl
pop
mov
push
xchg
scas
mov
add
mov
jmp
sbb
or
pop
test
negl
dec
mov
add
mov
and
add
je
push
and
jecxz
mov
test
cmp
add
cli
sbb
cltd
inc
add
cmp
lahf
mov
sbb
push
add
test
out
xchg
cmc
xchg
cmp
mov
iret
loope
shlb
push
faddl
cmp
int3
mov
dec
jmp
xchg
push
inc
push
sbb
sarb
pusha
mov
ss
ds
out
mov
daa
cmp
sub
sbb
out
scas
lods
pop
adc
add
mov
xchg
nop
daa
dec
pop
or
xchg
jl
inc
inc
push
inc
xor
add
das
mov
or
jle
jl
dec
sub
insl
push
jnp
or
and
mov
or
xor
jmp
add
call
pushf
pushf
pushf
adc
pushf
jmp
bswap
pop
pushf
movsbw
mov
jmp
call
add
dec
outsl
popa
fs
imul
add
mov
xor
dec
imul
xchg
fisubs
lods
std
cmpsw
es
push
pop
mov
test
in
cld
lock
sti
in
repz
int
lds
jg
loope
push
push
lock
je
sbb
push
inc
aad
in
xchg
into
gs
sahf
sub
push
cmp
in
testl
jp
or
ljmp
divl
jnp
push
cmp
mov
mov
insb
mov
sub
popf
cmp
out
repz
cli
inc
pop
lahf
sbb
roll
ret
mov
scas
xchg
mov
cmp
add
mov
aas
dec
mov
inc
push
push
mov
mov
jae
dec
xchg
ss
pushf
int3
cwtl
lds
bound
daa
cmp
pop
shll
push
lock
lret
je
and
cmp
cmp
mov
dec
sbb
xchg
or
out
lcall
xchg
add
sahf
mov
push
insl
lea
push
jmp
out
add
iret
jge
scas
jg
sbb
jge
loope
adc
das
test
sub
movl
loope
pop
sbb
shlb
jns
push
xor
andb
faddp
daa
push
push
xchg
inc
sbb
mov
decl
iret
mov
or
lods
pushf
idivl
cltd
ja
in
mov
mov
ret
dec
sub
icebp
dec
push
mov
xchg
sti
cmp
rcll
sar
ret
sub
das
jl
out
sbb
xor
movsb
btr
orb
pop
ds
lret
mov
xor
arpl
push
pop
test
clc
sbb
inc
aad
mov
loope
cld
mov
add
leave
outsl
mov
and
dec
xor
je
outsl
fs
gs
imul
add
les
decl
pushf
dec
mov
xchg
jg
xchg
out
dec
mov
negl
pop
int
mov
mov
xor
push
aaa
push
push
mov
dec
xchg
iret
repz
clc
sbb
sbb
or
lea
mov
scas
sbb
sbb
push
int3
push
add
mov
push
jno
xchg
or
mov
cwtl
fwait
scas
mov
inc
fcmovnu
jg
jno
adc
ljmp
mov
mov
and
sbb
push
pushl
movl
call
pop
jo
mov
imul
mov
stos
mov
push
clc
jecxz
jge
xchg
lea
mov
outsb
jmp
je
loope
popf
jae
mov
arpl
cltd
jg
push
test
scas
inc
xchg
push
ljmp
cs
cmc
jl
xchg
outsl
cmpb
testl
push
inc
xchg
xor
in
ret
dec
cwtl
mov
mov
fisubs
push
lret
xchg
mov
pop
inc
stos
mov
add
nop
aam
fmull
out
xor
inc
lock
push
pushf
lea
jae
push
pushf
lea
jmp
sub
les
movsl
mov
cwtl
ja
lret
fisubl
or
hlt
insl
ss
or
test
mov
jmp
xor
negb
mov
outsl
mov
pop
sbb
push
push
enter
inc
fisubs
dec
lods
pop
lret
pop
imul
lds
adc
push
test
in
adc
stc
and
es
clc
inc
out
cmp
fcomi
scas
pushl
jmp
lea
not
setg
lea
mov
jmp
call
add
les
aaa
sbb
ret
bound
mov
mov
cmp
out
dec
call
ds
sub
fs
mov
jnp
or
aad
fs
push
sahf
ss
push
add
xchg
or
cmp
add
jmp
pushf
lea
ja
pushf
imul
push
movb
push
pushf
lea
jmp
xchg
mov
pushf
add
into
jmp
mov
jne
stc
faddl
out
mov
daa
jecxz
cld
jmp
xchg
lcall
hlt
lock
or
mov
stc
and
pushf
inc
add
incb
fcoml
mov
movsb
pop
sub
sahf
in
jg
fwait
add
and
sahf
push
or
orl
adc
mov
into
push
or
inc
int
adc
xor
icebp
mulb
insb
sbb
outsl
scas
aad
daa
cmc
test
repnz
lods
dec
jp
inc
ljmp
sbb
jns
sbb
mov
and
and
sub
in
out
adc
popf
rcrl
hlt
addl
dec
push
loop
bound
ror
jge
lret
out
and
push
lods
cmp
popf
push
xor
sub
xchg
pushl
xor
sub
dec
fdivl
out
out
das
ret
enter
push
xor
lahf
push
std
xchg
sub
daa
adc
pop
xchg
pop
fcomp
add
push
int
add
cwtl
xchg
lock
gs
leave
sub
mov
subb
cltd
ret
add
mov
add
je
jmp
pusha
clc
test
lea
jnp
push
pushf
lea
je
bt
pusha
sub
pusha
cmc
cmp
push
lea
ja
bt
stc
pushf
pushf
imul
pusha
pushf
pushf
movb
lea
jmp
xor
neg
clc
mov
clc
push
pusha
or
pushl
call
mov
add
jno
cmp
jmp
aaa
or
jo
jo
jge
cli
sub
test
lock
sbb
push
dec
mov
fwait
jne
add
lret
cs
xor
lahf
mov
jae
pushf
and
push
in
xchg
xchg
cld
pop
pop
call
and
mov
push
loope
push
push
mov
orl
mov
aam
sub
xor
inc
dec
fmuls
xlat
cltd
mov
fstpt
movsb
push
dec
add
stos
iret
mov
mov
mov
mov
sub
leave
in
nop
mov
cli
and
aaa
pushf
xabort
in
cmp
vpand
mov
shll
aam
lds
inc
sub
pop
fcomps
pop
out
cltd
inc
iret
ret
xchg
rcrl
sti
push
inc
or
movsb
xor
jo
movsb
outsb
enter
or
clc
inc
xchg
jnp
fcoml
loopne
jo
mov
add
incb
std
mov
sub
mov
pop
gs
fmull
lret
and
stc
test
adc
push
mov
mov
pop
sub
aaa
pusha
leave
xor
cmp
mov
cli
cmp
shrb
adc
lahf
sbb
mov
inc
and
or
add
pushf
pushf
movb
lea
call
leave
adc
addl
mov
stos
mov
jno
mov
inc
pop
xchg
and
mov
add
mov
icebp
jo
pushf
outsl
inc
sub
mov
jno
sbb
cmp
iret
subb
pop
mov
add
inc
out
fidivrs
pop
sub
and
mov
or
call
add
jns
jmp
xchg
jno
cwtl
cltd
dec
inc
add
cmp
std
in
addr16
add
jae
and
pop
lds
jae
dec
pop
les
pop
neg
adc
test
std
mov
and
xor
jge
add
scas
ret
scas
cwtl
mov
pop
or
push
inc
mov
int3
insb
shlb
cmp
call
int3
out
ret
out
test
inc
into
loopne
jo
xchg
dec
fisubl
push
xchg
ret
and
push
sarb
lea
mov
jl
and
lret
fisttps
cltd
sbb
sub
pop
flds
inc
cmpsb
mov
mov
cld
imul
adc
sbb
xchg
addr16
xor
in
xor
out
scas
es
das
jo
subl
sub
dec
jnp
addb
insl
dec
mov
mov
negl
jo
daa
loope
ds
daa
xor
or
vsubsd
test
cwtl
pop
nop
into
call
loopne
outsb
mov
pop
scas
sbb
int
jg
stos
jmp
int
mov
es
es
movsl
mov
push
test
aaa
adc
popf
call
das
jno
popa
cmp
movsb
inc
jno
std
pusha
xchg
jbe
imul
aam
lret
xor
popf
lea
jne
shr
shl
mov
cmp
stc
jmp
pusha
pusha
lea
jb
jmp
lret
addl
loope
test
adc
lcall
pop
fs
out
push
cmp
imul
jecxz
into
popf
push
cmp
mov
and
xchg
sar
mov
frstor
sbb
lret
cmpb
pop
fs
mov
inc
lea
insl
xchg
fwait
inc
dec
xchg
mov
or
push
sbb
xchg
mov
negl
sbb
xchg
clc
jecxz
call
pushf
mov
cwtl
movsbw
bswap
pop
lea
movb
xchg
movzbw
pop
movl
pusha
setg
lea
push
movb
mov
jmp
lock
addb
popf
jmp
mov
fildll
jl
andb
arpl
sub
repz
xor
out
out
or
and
mov
sti
sbb
push
adc
hlt
cmp
or
lret
dec
sbb
ljmp
sti
pop
int
fisttpl
addl
cli
icebp
or
sti
jg
sbb
mov
or
unpcklps
sbb
dec
push
add
fdivrl
les
nop
mov
cmp
repz
addl
push
sti
icebp
or
test
neg
push
es
ret
in
outsl
call
lea
lahf
fldenv
sub
push
jb
arpl
sub
out
fwait
jle
sub
test
dec
out
sahf
test
dec
xchg
sub
hlt
mov
xchg
and
jg
mov
inc
or
insb
and
mov
ret
movsl
adc
std
in
je
push
fwait
pop
jno
pop
inc
xor
dec
jg
les
cmp
mov
mov
and
stos
sub
adc
pop
ds
scas
dec
xor
ja
fsubrs
cltd
or
push
adc
pushf
int3
fistpll
mov
mov
xchg
outsl
mov
call
stc
mov
das
and
push
cmp
stos
and
aaa
push
or
lcall
mov
pop
xor
jmp
aaa
sbb
jno
dec
cmp
add
mov
cmp
push
mov
xor
or
ret
mov
daa
mov
jne
push
iret
cli
mov
push
adc
sbb
adcl
insb
xchg
pop
sub
push
mov
jge
stos
addr16
add
out
lret
mov
int
rolb
js
add
aaa
movsl
mov
add
lcall
sub
cmp
loopne
jno
loopne
popf
shl
xchg
aas
lods
adc
mov
not
bswap
pop
push
pushl
ret
jmp
push
movsl
push
jle
les
push
not
cmp
sub
jg
jnp
sub
out
notl
inc
sub
mov
jbe
cmpsb
push
fsubrp
jl
cli
mov
xchg
stos
inc
xor
fnstsw
hlt
aam
or
sbb
sbb
mov
stos
jbe
in
mov
inc
mov
icebp
pop
andb
fiaddl
sub
jns
test
jge
cs
jl
movsl
sbb
add
sbb
push
fdivrl
and
imul
push
mov
cli
add
xchg
popf
movsl
mov
imul
sub
mov
mov
pop
push
pushf
pop
addr16
or
sub
lods
mov
dec
mov
cli
popa
inc
out
mov
cmp
aas
or
sbb
addb
pop
mov
or
mov
jno
sub
dec
lea
pushl
jmp
popf
rdtsc
nop
pusha
movl
movb
mov
lea
jg
push
movl
push
push
lea
jmp
pop
lods
pop
jge
les
int3
scas
push
repnz
mov
and
lods
push
mov
cmp
test
sub
jecxz
adc
cltd
sbb
push
cltd
dec
lret
lcall
ss
add
movsl
fucom
dec
dec
fstpl
sub
pop
popf
insl
push
lsl
xchg
pop
sbb
lock
dec
scas
or
hlt
xor
push
inc
add
adc
pushf
test
jmp
fnstsw
repnz
popf
lea
movsbw
movzbl
mov
jmp
cmp
add
sub
outsl
adc
stc
cwtl
aas
stos
xor
inc
test
dec
dec
adc
loopne
push
je
test
lds
int3
jmp
sti
pop
sti
push
jne
mov
mov
mov
xor
test
cmpsb
push
xor
and
pop
inc
test
int3
iret
cmp
bound
jmp
insb
xchg
cmp
pop
popf
adc
repnz
dec
xor
sarl
into
fdivrl
test
jmp
imul
inc
test
stos
stos
jnp
pusha
loopne
sub
or
mov
negb
mov
cmpsb
adc
adcl
xchg
ror
out
int3
leave
lret
and
leave
cwtl
call
nop
add
xchg
mov
insb
rcll
subb
mov
mov
mov
cmpsl
push
fwait
mov
inc
jmp
pop
pop
rcrl
adc
add
jl
call
pop
dec
inc
fdivrp
gs
hlt
add
into
cmp
add
mov
sarw
in
cmpsb
pop
fmul
scas
cwtl
add
dec
jb
out
mov
push
lea
je
call
or
cmpb
aas
out
dec
xor
ja
inc
lods
cmp
lret
add
push
sbb
xchg
repnz
mov
mov
and
in
imul
adc
inc
ds
test
dec
adc
cmpsl
sub
adc
outsl
jl
sahf
sbb
popa
dec
mov
aas
arpl
mov
loop
dec
lea
adc
dec
mov
pop
push
lea
je
jmp
call
xchg
sbb
fwait
cmp
mov
nop
je
mov
stos
out
xor
xor
gs
pop
adc
adc
mov
mov
xor
mov
rcrb
jmp
xchg
cwtl
dec
mov
jge
clc
leave
outsb
ret
mov
leave
adc
ret
fcmovne
jae
pusha
cmp
aam
mov
lahf
push
sub
setl
movsbl
sete
movsbw
lea
lahf
pop
push
pushl
mov
pusha
lea
ja
call
pusha
call
pushf
jmp
str
pushf
movl
push
push
movb
jmp
add
dec
gs
popa
addr16
outsl
js
add
add
int3
insl
shl
lcall
push
sbb
sub
cmpsl
out
out
aad
xchg
xchg
add
aaa
pop
leave
dec
jmp
iret
lea
or
outsl
aad
push
sub
idiv
test
push
cmp
xor
mov
insb
in
sub
pop
mov
scas
push
dec
das
mov
xchg
int3
enter
es
lods
cmp
repz
mov
xchg
rclb
fisubl
inc
repz
jmp
js
test
aaa
fsin
cmc
mov
xchg
jns
fldl
pxor
cmc
push
cld
fidivrl
inc
movsb
dec
mov
jmp
out
pop
in
xor
icebp
push
push
leave
or
cmpl
inc
push
jb
cmpsb
mov
push
shl
inc
js
adc
fldl
setg
pop
repnz
push
outsb
xchg
pop
cmpl
add
cmp
push
addl
jbe
movsb
fdivs
cltd
inc
test
repnz
or
fistps
sub
es
leave
inc
not
call
xchg
and
ja
iret
jecxz
jmp
aam
xlat
cmp
pop
in
stos
sbb
sbb
pop
nop
ljmp
jb
inc
dec
leave
jbe
stos
jl
mov
adc
xchg
inc
xchg
stos
repz
mov
sarl
insb
out
mov
int
pop
mov
sbb
xor
mov
out
adc
loope
das
adc
xchg
lea
insb
scas
fisttpll
and
jne
pusha
pusha
call
movb
call
bt
sub
bt
test
mov
test
add
clc
cmp
test
call
call
push
adc
dec
cli
mov
lret
jb
xor
mov
pop
xchg
mov
mov
mov
notl
stos
fs
aam
loope
int3
add
es
dec
dec
movsb
xor
lods
pop
ds
and
xor
fcoml
pop
sub
lahf
mov
push
dec
mov
cmpb
pop
inc
push
fistpll
sti
lret
testl
outsb
cwtl
bound
into
sub
jns
inc
scas
sub
xor
xchg
call
xor
stc
pushl
les
or
sarl
and
icebp
pop
push
jmp
in
push
aam
icebp
les
sbb
adc
inc
in
inc
jns
mov
pop
sbb
imul
in
fwait
cmp
and
aaa
and
int3
enter
jne
fwait
rcll
popf
fcmovnu
scas
enter
inc
inc
stc
mov
sub
ss
mov
mov
in
push
jbe
js
fmull
sub
and
jnp
sbb
mov
jle
dec
repz
and
icebp
sbb
pop
mov
mov
pushl
popl
pushf
pushf
movb
pushl
ret
pushf
test
cmp
pusha
movb
jmp
push
movb
lea
jne
push
pushf
mov
pusha
jmp
xchg
movsbl
call
adc
pusha
lea
jmp
lds
les
les
negb
pop
add
shlb
cmp
cltd
in
mov
insl
clc
outsl
cmp
ja
cmpsl
rol
sti
add
xor
xchg
ljmp
ret
insl
pop
popf
scas
out
das
and
dec
push
into
dec
je
jne
aam
das
notl
pushl
jmp
int
jl
sbb
sub
xor
shrl
push
and
pop
in
cli
out
push
lret
jbe
aad
pop
aas
filds
cmpsb
adc
ds
iret
xor
test
add
aaa
adc
pop
jp
and
sbb
cli
mov
shrb
dec
inc
jl
je
out
daa
mov
xor
push
sahf
nop
negb
mov
lock
rcr
jnp
fwait
push
dec
ret
pop
xor
rorl
pop
inc
aad
lds
addr16
sub
xchg
inc
xchg
loop
cld
mov
test
ljmp
insl
jb
out
xchg
les
jne
ja
and
dec
insl
dec
mov
les
pop
sahf
scas
out
mov
movsl
push
xor
inc
cli
add
subl
mov
mov
xchg
jecxz
cmp
in
lret
push
fadd
mov
lods
out
fisubl
adc
add
cmp
addl
push
gs
cmp
add
cmc
pushf
subb
mov
rorl
mov
lods
cmpsl
stos
and
les
xor
xchg
aaa
push
cld
mov
int
loop
out
mov
scas
in
insb
mov
cmp
xchg
pop
or
loop
repz
jns
aas
repz
hlt
cmp
xchg
es
roll
cmp
lcall
pop
cmp
push
shlb
xor
daa
push
or
int
pop
or
rcr
push
in
cmc
addl
push
hlt
clc
pop
sub
cmp
mov
loop
stos
out
movsl
or
imul
mov
pushf
pushf
push
pushl
lea
jmp
pushf
mov
lea
pushl
pushl
popl
jmp
mov
movb
pushf
pushl
ret
pusha
jmp
call
jmp
shl
call
pushf
popl
pushf
jmp
pop
push
pushf
mov
lea
movsbw
call
neg
or
stc
mov
cmp
stc
stc
clc
xor
stc
push
xor
cmc
pushf
mov
pushl
add
mov
rol
call
call
pushl
popl
pushf
lea
jmp
mov
mov
pushl
popl
pushl
movzbl
pushf
jmp
push
call
mov
movw
lea
pop
mov
lea
pushl
repz
popl
pushf
call
pushf
lea
movl
mov
lea
push
lea
mov
push
pushl
lea
jmp
pushl
mov
movw
pushf
lea
jmp
pushl
mov
pop
movzbw
movzbw
pushf
lea
push
pushf
push
mov
movzbw
lea
jnp
pusha
bswap
mov
not
lea
jns
pusha
mov
pop
bswap
pusha
mov
jmp
cmc
sar
btc
bt
mov
lea
inc
stc
movzbw
mov
push
clc
clc
add
call
repz
popl
bswap
jmp
push
lea
jne
stc
stc
xor
pusha
xchg
pusha
movb
mov
movl
movb
pushf
mov
call
jmp
mov
pushf
lea
jmp
add
jmp
mov
pushf
pushl
push
pushl
lea
jmp
xor
cbtw
pushf
clc
mov
xor
adc
bt
mov
jmp
pushl
mov
not
bswap
jmp
mov
not
repz
bswap
push
call
pusha
lea
pushl
popl
movzbl
call
push
xchg
lea
jmp
mov
movsbl
pusha
pushl
movzbl
pushl
popl
pop
not
bswap
movl
pop
lea
pushl
mov
push
push
pushf
lea
jmp
bsf
cbtw
btc
mov
stc
test
pushf
sub
call
not
pusha
lea
lahf
mov
call
pushl
lea
jne
pusha
push
call
call
call
rcl
mov
pusha
add
stc
shl
sub
lea
movzbw
xor
mov
pushf
bt
pushf
shl
movw
pushl
jmp
repz
popl
movsbw
mov
call
jmp
mov
mov
pushl
popl
movb
movw
movb
lea
jmp
bswap
movl
lea
mov
mov
pushf
push
lea
jmp
mov
xchg
pusha
stc
push
mov
mov
cmp
stc
movb
stc
sub
call
pushf
pusha
stc
rol
stc
add
mov
jmp
cmc
not
cmc
push
not
cmp
and
jmp
clc
cwtl
cmp
test
cmc
test
sub
call
mov
push
pushl
push
lea
jmp
xchg
jmp
je
pushf
mov
mov
bswap
jmp
movzbw
jne
sub
movsbw
mov
call
jmp
add
mov
cmc
cmp
jmp
push
sub
mov
cmc
sar
neg
jmp
pushf
movw
pushl
popl
not
pop
push
bswap
mov
pusha
push
movb
lea
jmp
mov
pusha
pushf
push
repz
popl
bswap
mov
call
sub
setae
btc
mov
mov
adc
mov
call
movzbw
lea
jmp
movsbw
not
movsbw
push
push
lea
push
lea
movzbw
push
bswap
push
movzbw
bswap
movsbw
push
xchg
push
call
pushf
test
call
pushf
popl
pusha
jmp
lea
push
not
mov
call
bswap
movsbw
repz
popl
jmp
xchg
call
pusha
pop
mov
pusha
cmc
pushf
shrd
mov
clc
pushf
bt
add
call
bt
cmp
sub
push
call
mov
movw
lea
push
jg
push
mov
push
mov
jmp
pusha
mov
mov
pushl
popl
movw
pushf
movb
lea
jmp
movzbl
mov
movsbl
lea
movzbw
push
jmp
mov
jmp
movb
push
mov
pusha
push
push
movb
pushf
popl
call
pusha
shr
pushl
lea
jo
pushf
movb
mov
pusha
pushl
pushf
popl
push
pushl
popl
mov
movb
mov
movb
lea
jmp
call
push
pushf
pusha
jmp
add
movw
push
movl
lea
jmp
sub
jnp
cmc
cmc
mov
pusha
pushf
bt
sub
call
dec
mov
neg
call
mov
jmp
not
repz
popl
inc
mov
add
movsbl
push
movzbl
bsf
pushl
bts
jmp
pushf
mov
mov
pusha
pop
lea
push
push
mov
movzbl
lea
mov
pushf
mov
call
pusha
jmp
jmp
pushl
mov
pusha
mov
push
lea
jmp
call
call
movzbw
movzbw
pushl
popl
bswap
jmp
jmp
pusha
jmp
add
push
add
adc
loopne
adc
inc
cmp
push
pusha
ljmp
add
push
mov
cmpsl
push
push
loopne
push
push
mov
push
adc
pusha
std
adc
add
adc
andb
xchg
adc
inc
fs
push
add
adc
pusha
jg
push
loopne
adc
push
add
push
push
mov
nop
adc
loopne
adc
loopne
adc
loopne
adc
and
adc
and
adc
and
adc
and
push
push
mov
mov
push
add
push
mov
jge
push
inc
add
adc
add
push
loopne
adc
inc
jge
push
inc
jo
push
mov
or
push
push
inc
test
adc
inc
fs
push
pusha
mov
push
add
adc
push
inc
std
adc
orb
push
sub
push
add
adc
push
pusha
mov
push
pusha
mov
add
push
push
inc
bound
push
pusha
adc
and
adc
add
adc
pusha
mov
push
push
loopne
adc
push
rorb
push
loopne
push
push
inc
add
pusha
fistl
push
inc
into
adc
sub
push
add
push
inc
out
push
inc
xchg
push
inc
jge
push
inc
jg
push
loopne
adc
addb
mov
nop
adc
loopne
adc
loopne
adc
loopne
adc
and
adc
and
adc
and
adc
and
push
inc
xchg
push
pusha
jge
push
inc
in
push
pusha
in
push
pusha
std
adc
add
push
mov
bound
push
pusha
mov
push
sarb
pusha
jg
push
cmpb
cmpb
push
mov
in
push
pusha
in
push
inc
rclb
push
loopne
adc
push
loopne
adc
push
add
push
push
inc
jg
push
andb
push
inc
into
adc
cmpb
cmpb
pusha
and
push
add
push
and
push
push
inc
test
adc
mov
rclb
push
loopne
adc
add
adc
add
adc
xorb
push
loopne
push
push
inc
jg
push
loopne
push
push
inc
loop
push
pusha
movsb
adc
loopne
adc
pusha
inc
adc
push
xor
push
shr
push
add
adc
push
add
push
mov
nop
adc
loopne
adc
loopne
adc
loopne
adc
and
adc
and
adc
and
adc
and
adc
loopne
adc
add
push
push
mov
jge
push
inc
mov
push
add
push
push
inc
sub
push
mov
jecxz
push
mov
sub
push
mov
ret
adc
inc
test
adc
pusha
mov
push
rclb
push
inc
lock
push
andb
push
inc
xchg
push
rorb
push
mov
xchg
adc
inc
mov
push
push
add
push
push
add
push
mov
sub
push
mov
adc
adc
push
rorb
push
rolb
push
pusha
mov
push
rclb
mov
sub
push
mov
std
adc
adc
push
loopne
push
push
mov
into
adc
andb
push
inc
into
push
push
inc
mov
push
rclb
push
loopne
adc
loopne
adc
loopne
adc
loopne
adc
and
adc
and
adc
and
adc
and
adc
add
adc
pusha
sub
push
mov
bound
push
pusha
mov
push
shlb
push
andb
push
sbb
push
inc
std
adc
add
push
mov
rclb
push
loopne
push
push
mov
mov
push
pusha
into
push
push
inc
xchg
adc
push
pusha
rclb
push
loopne
adc
mov
rclb
push
loopne
adc
inc
xlat
adc
loopne
adc
add
adc
inc
ficoml
push
mov
out
push
inc
call
bswap
cwtl
push
setg
push
mov
pushf
pushf
jmp
aas
dec
bsr
notl
test
rcr
mov
clc
sub
stc
bt
call
mov
mov
pushf
movb
lea
jmp
pusha
call
sub
pushf
push
pusha
cmpl
push
mov
mov
pushf
lea
jbe
pusha
mov
push
call
mov
jmp
pushl
popl
mov
pushf
mov
lea
jmp
mov
push
lea
jmp
movsbw
mov
xor
cmp
shr
movsbw
add
call
mov
push
not
movzbw
jmp
pushl
mov
movzbl
repz
popl
pusha
mov
lea
push
mov
not
pushl
popl
pushl
lea
movl
lea
pushf
lea
mov
push
movb
lea
jmp
lea
cpuid
cmc
bt
jmp
jmp
jmp
call
push
mov
mov
pusha
pushf
lea
jmp
not
bswap
push
push
lea
call
pushf
jmp
cmc
clc
clc
pushf
pushl
popl
test
jmp
pusha
push
pushl
popl
pushf
lea
jmp
shl
mov
cmp
pushf
cmp
add
jmp
movl
jmp
call
lahf
shr
shl
setl
rdtsc
cmc
jmp
mov
mov
pop
jmp
pusha
mov
push
pushl
lea
jmp
bswap
mov
call
call
call
pushf
ror
stc
movzbl
shr
xor
push
dec
pusha
push
shl
and
bts
add
shrd
add
mov
push
jmp
mov
mov
pushf
pushf
mov
lea
jmp
mov
call
shr
stc
or
push
add
jg
push
xor
pusha
inc
pusha
lea
jns
pusha
decl
call
add
pushf
pushf
pushf
call
setge
cltd
call
pushf
mov
pusha
lea
jmp
push
jmp
pushf
mov
pushf
lea
jmp
sub
call
push
pushl
popl
pushl
mov
pushf
mov
lea
jmp
push
jmp
movl
push
bswap
mov
mov
lea
jmp
lea
pusha
mov
movzbw
pushl
popl
movsbw
call
pop
mov
movzbl
mov
repz
movsbw
call
lea
push
not
pusha
pushf
pop
mov
push
movw
mov
bswap
mov
jmp
mov
lea
jbe
pushf
mov
pusha
pushl
popl
call
mov
lea
bswap
jmp
pusha
lea
js
pusha
pushl
popl
pushf
lea
jmp
mov
pusha
pusha
mov
mov
lea
jne
add
movsbl
mov
call
sub
stc
test
push
shr
call
jmp
call
pusha
pushl
popl
mov
push
lea
call
mov
pushf
popl
call
sub
push
bt
mov
shl
movw
call
pushl
mov
mov
pushl
push
pushf
popl
call
mov
clc
mov
mov
test
sub
pushf
lea
jae
pushf
mov
push
lea
jmp
pushl
mov
not
mov
movw
mov
jmp
jmp
lea
je
stc
bt
pushf
pushf
xor
bt
jmp
movl
jmp
add
setns
not
rcl
rol
mov
xor
add
btr
not
movzbw
rol
movzbl
rcr
rcr
mov
call
jmp
adc
daa
ror
mov
std
pop
pushf
aam
mov
rol
mov
lea
bt
cmp
pushl
popf
pop
mov
pusha
lea
pushf
mov
bswap
lahf
mov
movw
not
mov
pop
lea
mov
call
bsr
mov
pusha
sbb
mov
bt
pusha
add
pushf
pushf
call
pushf
call
push
jmp
shr
push
mov
pushf
mov
jmp
push
pushl
popl
mov
pusha
lea
jmp
mov
call
mov
mov
pushl
repz
popl
call
bsf
mov
jbe
sub
pusha
pushl
pushf
stc
add
mov
pushf
popl
push
call
mov
pusha
pushf
lea
pushf
pushf
mov
pushl
pushf
push
pushf
lea
jmp
pop
push
not
mov
mov
jmp
popl
push
pushf
mov
lea
jmp
pushl
popl
pusha
lea
jmp
sar
shl
stc
dec
mov
pushf
jmp
jmp
movb
lea
jne
jb
mov
pushf
pushl
mov
pusha
lea
jmp
jmp
jmp
pushl
mov
pusha
mov
lea
push
movsbw
pushf
not
pusha
mov
mov
bswap
bswap
mov
movsbw
not
mov
mov
bswap
jmp
dec
mov
cmp
pusha
bt
add
movb
pushf
pusha
movw
lea
jmp
mov
pusha
call
mov
push
lea
pushl
push
lea
je
movsbl
push
pushf
not
mov
pushf
lea
jmp
xadd
clc
daa
call
stc
rol
clc
call
movl
bswap
pushf
call
sub
test
test
cmp
cwtl
bt
clc
sub
jmp
ror
mov
or
inc
mov
jmp
call
pushf
movb
mov
call
test
push
pushf
sub
call
pushf
mov
mov
pushf
pushf
lea
jmp
mov
bt
xadd
xchg
mov
clc
mov
cmp
cmp
add
call
stc
test
sub
call
xor
mov
not
mov
jmp
cmp
stc
pushf
add
pushl
mov
jmp
test
push
mov
add
je
sub
jmp
mov
call
call
movw
mov
pushf
popl
call
jmp
pusha
mov
mov
pushf
lea
jmp
push
mov
mov
pushf
movb
lea
jmp
pushf
pusha
mov
movzbw
mov
not
jmp
push
call
shr
mov
sbb
mov
push
test
add
push
mov
push
push
lea
jmp
pushf
bswap
lea
ja
pushf
mov
movl
push
push
mov
jmp
pushl
mov
movw
pop
mov
call
mov
bswap
pop
not
push
pusha
mov
repz
popl
jmp
lea
jne
or
mov
cmc
pusha
cmc
and
clc
test
pushf
pusha
cmp
pushl
jmp
sar
not
xorb
mov
mov
movw
pushf
pusha
lea
jmp
call
push
jmp
pusha
mov
mov
mov
movw
bswap
mov
lea
bswap
call
call
bswap
inc
not
movsbw
pushf
inc
clc
not
sub
sub
btc
sub
mov
call
movzbl
pusha
call
pushf
dec
cmc
add
cmc
jmp
jmp
ror
test
neg
mov
bt
sub
jmp
mov
mov
pushf
mov
pusha
lea
jmp
mov
push
pushf
mov
lea
jmp
stc
shld
seto
mov
pushf
cmc
test
stc
sub
push
push
pusha
call
pushf
mov
mov
lea
jmp
call
jmp
lea
jno
pusha
pushl
pushf
popl
push
call
cmp
test
sub
cmc
mov
pushf
push
sub
lea
jge
mov
push
pusha
push
lea
jmp
test
and
stc
pushf
test
pusha
cmp
push
lea
jne
dec
call
add
jmp
lea
push
lea
push
jmp
add
sub
bswap
bswap
inc
mov
cmc
pushf
movzbw
rol
jmp
movl
stc
rcl
mov
rcl
dec
jmp
clc
pushf
bt
sub
mov
movw
mov
push
mov
lea
jmp
movb
xchg
call
call
mov
movl
push
pop
mov
pushf
lea
jmp
jmp
lea
jne
pusha
pusha
pushf
push
mov
pushf
pushf
movb
mov
lea
jmp
mov
call
mov
call
pusha
xchg
bswap
pushf
mov
pusha
call
push
mov
lea
push
not
movsbw
mov
mov
not
call
add
bsr
lea
test
cmp
push
pushf
mov
lea
ja
pushf
lea
shl
rol
rcl
lea
xor
movb
das
sub
shld
pusha
sub
rcr
lea
bswap
bsf
sbb
pop
and
pusha
test
sub
movsbw
mov
movsbw
lea
pushf
cld
pushf
pusha
cld
xchg
not
call
add
add
pushf
mov
pushl
push
jmp
cmc
sub
mov
cmp
push
mov
pusha
sub
test
cmp
movw
add
call
jmp
jmp
mov
mov
jmp
mov
mov
lea
jmp
pushl
mov
mov
mov
movw
movb
lea
jmp
add
add
mov
pusha
mov
test
ror
cmp
cmc
add
push
pushf
push
jmp
add
stc
popf
pusha
lea
jmp
mov
btc
clc
ror
pushf
movzbw
test
movsbw
xor
inc
pushl
dec
call
lea
push
push
mov
push
jmp
movsbw
mov
push
push
pusha
bswap
pushl
mov
bswap
movzbw
push
mov
bswap
not
movsbw
pop
mov
pusha
movsbl
movsbw
repz
popl
mov
push
lea
lea
mov
bswap
movsbw
pop
pushl
popl
mov
jmp
pusha
call
mov
pop
call
call
mov
mov
not
pushl
not
bswap
mov
push
bswap
push
mov
movb
lea
jmp
call
lea
jl
mov
pushf
pusha
pushf
push
lea
jmp
add
call
call
call
mov
lea
push
movsbw
mov
movsbw
mov
push
movsbw
jmp
btr
adc
neg
bsf
pushf
movsbw
clc
not
xor
rol
bsr
sub
cmc
add
mov
mov
add
mov
pushf
lea
mov
call
rdtsc
cwtl
bswap
cwtl
mov
pusha
mov
pusha
divl
jmp
jmp
movl
mov
lea
jae
pushf
jmp
pusha
movb
pusha
xchg
pushl
mov
mov
bswap
pop
lea
push
movzbw
call
pushf
popl
jmp
movzbw
call
xchg
push
push
jmp
test
stc
bswap
bt
add
bt
stc
call
call
call
mov
call
pushl
popl
pushl
mov
pushf
lea
jmp
jmp
movsbw
movl
bswap
jmp
mov
pushl
popl
movb
mov
pushl
lea
jmp
push
mov
pusha
pusha
pushl
mov
lea
jmp
call
clc
test
call
movb
mov
pushf
pushf
movl
pushf
popl
call
call
cmp
clc
cmc
shrd
pushl
pusha
call
pushl
popl
push
pop
not
movl
mov
mov
pusha
pushf
lea
jmp
pushl
popl
pushf
push
pushf
lea
jmp
test
pushf
mov
call
pushf
movsbw
lea
push
pushf
lea
jb
push
bswap
push
movzbw
bswap
pushf
movsbl
mov
not
call
mov
call
call
shl
mov
mov
or
jle
mov
cmp
clc
pushf
sub
test
cmp
clc
test
shr
pusha
movw
pushf
pushf
mov
jmp
shl
adc
btc
and
rcr
sbb
and
jmp
pusha
not
mov
mov
push
pusha
push
lea
jmp
sub
clc
movw
rol
jmp
not
bsf
mov
test
sub
pusha
add
pusha
pushf
xchg
pushf
dec
test
cmp
xchg
lea
ja
sub
jmp
push
mov
mov
pusha
lea
jmp
mov
mov
call
btc
mov
movzbw
shl
or
mov
and
adc
sar
mov
stc
jmp
pushl
jmp
movzbw
jmp
mov
movb
mov
pushf
push
lea
jmp
adc
cwtl
mov
dec
cmp
and
shl
mov
clc
call
jmp
lea
movsbw
call
not
pushf
lea
pusha
jmp
push
pushl
mov
mov
lea
repz
popl
lea
pop
movsbw
mov
jmp
movsbw
movl
movsbl
movzbw
not
mov
pushf
mov
pushf
lea
jmp
xchg
movb
movl
dec
movb
call
pushl
call
repz
popl
pop
movsbw
lea
lea
mov
movsbw
jmp
mov
movb
push
pusha
mov
mov
lea
jmp
jmp
setae
stc
movzbl
cmc
call
pushf
pusha
movsbw
mov
push
pushf
pushf
lea
jmp
mov
mov
pushl
pushf
movb
lea
jmp
push
pusha
pushf
popl
pushf
pushl
popl
mov
pushf
lea
jmp
clc
pushf
adc
ror
mov
clc
mov
mov
pushf
pusha
add
pushf
mov
mov
pushf
mov
lea
jmp
jmp
pop
push
jmp
pusha
call
lea
push
pusha
call
pushl
popl
push
pushf
pushf
lea
jmp
movsbw
pushf
pushf
lea
push
movzbw
bswap
push
bswap
push
lea
mov
not
push
movzbw
movsbw
not
push
movzbw
repz
call
jmp
movzbw
call
cmp
btr
movzbl
shl
shld
setge
xor
test
btr
test
xor
sub
add
add
adc
add
pushf
pusha
rol
cmc
lea
shr
movsbw
xor
xor
rcr
movzbl
jmp
pushf
pusha
mov
pushf
call
add
movw
shld
push
call
pusha
movw
lea
push
pushf
movsbw
jmp
mov
pushf
push
lea
lea
mov
mov
bswap
mov
movb
std
cld
mov
mov
call
add
jmp
pushf
popl
mov
mov
pushf
jmp
call
bsf
shl
shl
mov
shl
neg
rcl
adc
mov
stc
bt
pusha
cmp
sub
bt
cmp
pushf
cmp
shl
pusha
jmp
call
shr
or
shl
mov
bt
sub
clc
jmp
pushf
mov
pusha
not
movsbw
push
mov
lea
jg
pusha
repz
popl
movw
pushf
mov
mov
pushl
popl
jmp
push
jmp
pushf
pushf
pushl
popl
pushf
pushf
movw
pushl
lea
jmp
btr
mov
bt
sar
mov
clc
add
call
mov
jmp
pusha
pusha
pushl
mov
push
push
pushl
mov
lea
jmp
repz
lea
push
not
jmp
push
mov
push
pusha
movb
mov
lea
jmp
sub
pushf
shr
movb
movb
call
mov
push
lea
js
pushf
mov
call
movsbl
mov
pusha
call
call
jmp
pushf
push
inc
jmp
movl
movw
mov
push
lea
jmp
jmp
rep
std
bt
mov
shl
sar
add
test
mov
stc
cmp
stc
push
pushl
popf
push
pushf
pushf
lea
jmp
pusha
mov
mov
pushf
popl
pushf
call
clc
jmp
pusha
mov
call
movsbw
push
movl
lea
lea
pop
mov
pusha
movl
movb
lea
jmp
pushf
call
inc
jmp
movw
call
mov
bswap
pop
not
movzbw
repz
popl
call
pushl
mov
pushf
mov
lea
jmp
push
pushf
mov
pusha
bswap
mov
pusha
movzbw
movzbw
mov
bswap
lea
repz
popl
jmp
mov
call
jmp
pushl
mov
push
movw
mov
pushf
lea
jmp
jmp
cmc
call
dec
push
lea
mov
sub
jp
add
push
pushl
push
call
mov
pushf
pushf
movl
mov
lea
jmp
call
shl
pusha
mov
mov
push
pushf
popl
call
pusha
mov
push
lea
jmp
push
mov
pushf
popl
call
test
not
bt
clc
not
movb
bt
pusha
stc
sub
pusha
call
pushf
pushl
popl
mov
pushf
pushf
lea
jmp
cmp
mov
btc
bsf
call
push
push
call
mov
pushf
push
mov
push
call
and
call
call
movsbl
pushl
popl
pushf
call
call
call
repz
popl
push
pushf
pop
push
mov
lea
pushl
popl
bswap
push
pusha
not
pushf
mov
pusha
mov
lea
jmp
cmc
add
pusha
jmp
push
mov
call
pop
push
movsbw
lea
lea
pushf
mov
push
movl
mov
movsbw
jmp
call
ror
cmc
movzbl
cmc
cmp
xor
clc
xor
movw
pusha
test
add
call
pushf
movb
xchg
pusha
call
push
cmc
sub
call
pushf
popl
call
pusha
mov
movzbw
add
btr
sub
not
movsbw
dec
dec
call
xor
dec
dec
btc
bt
push
pusha
rol
add
cmc
dec
rol
lea
sar
sub
neg
movsbw
mov
xor
or
ror
mov
ror
bsf
add
btc
jmp
call
mov
lea
jle
pushf
mov
mov
mov
lea
jmp
lea
movl
not
call
movb
not
jmp
ja
inc
sar
mov
stc
sub
jmp
mov
jmp
pusha
mov
pusha
movb
movb
movl
lea
jmp
sub
jmp
pushl
pushl
mov
lea
jne
bswap
btc
mov
pushf
and
bt
cmp
push
lea
jne
setne
xorb
setl
pusha
bswap
pusha
mov
push
pushf
movl
mov
lea
jmp
mov
pushf
movl
push
lea
jmp
pusha
mov
add
jmp
pushf
cmc
pushf
xor
bt
sub
call
movsbw
movzbw
pushl
popl
movzbl
pusha
pop
movl
lea
mov
pusha
mov
lea
jmp
test
sub
jmp
test
bt
cmc
pusha
xor
movl
push
pusha
inc
jmp
call
lahf
clc
ror
cmc
mov
bt
cmc
call
pushf
popl
call
push
mov
mov
pushf
lea
mov
movb
movw
movw
mov
pushl
ret
mov
pushl
pushl
push
pushl
ret
movb
pushl
mov
mov
pusha
movl
lea
jmp
pushf
mov
not
push
bswap
movzbw
pusha
lea
push
bswap
movzbw
mov
push
not
lea
movsbw
lea
push
bswap
bswap
bswap
push
pushf
pusha
push
bswap
mov
pop
mov
call
movzbw
daa
mov
clc
pushf
add
bt
test
xor
pusha
jmp
mov
pushf
pushf
lea
jmp
pushl
mov
pusha
movw
lea
jmp
mov
pusha
movb
pushf
popl
movl
mov
movb
call
add
mov
mov
pusha
movb
mov
lea
jmp
pushf
lea
jne
sbb
shrd
rcr
rcr
xorb
setl
pop
pushf
pusha
pusha
lea
jmp
jmp
mov
movzbw
bswap
lea
push
pushf
pusha
mov
call
jmp
push
not
mov
pushl
stc
cmc
add
jmp
jmp
inc
pushf
pushf
pushf
jmp
movb
jmp
lea
mov
jmp
mov
clc
stc
or
jmp
pushl
popl
mov
pushl
pushf
push
lea
jmp
pusha
mov
mov
lea
call
call
mov
jmp
push
push
mov
movzbl
jmp
push
movzbw
mov
call
push
repz
popl
lea
movzbw
push
mov
movsbw
movsbl
lea
pushl
popl
jmp
mov
movb
lea
jmp
call
movzbl
call
pushl
popl
pushf
pushf
lea
jmp
mov
movb
jmp
call
push
pushf
pushl
popl
pop
lea
not
movsbl
movl
lea
pop
mov
pushl
pusha
movw
push
lea
jmp
movsbl
movl
mov
mov
push
lea
jmp
call
jmp
movb
mov
mov
mov
lea
jmp
jmp
push
call
mov
pushl
popl
pushf
mov
movw
lea
jmp
xchg
jmp
mov
pushf
cmp
sub
jmp
bsr
aaa
mov
push
cmc
sub
jmp
pushf
push
pushf
pusha
pushf
popl
jmp
mov
decl
pushf
call
call
bsf
push
movzbw
pop
mov
bt
test
add
mov
mov
pushf
jmp
pushl
decl
pushf
lea
jo
jne
push
movl
mov
movl
push
mov
pushl
lea
jmp
mov
movsbl
call
sub
pushf
call
movw
jmp
pushf
pushl
popl
mov
movb
lea
jmp
movl
jmp
sbb
add
neg
mov
call
lea
movzbw
setg
mov
jmp
pushl
popl
mov
mov
bswap
lea
movl
call
clc
sub
mov
mov
lea
jmp
not
jne
repz
jmp
call
clc
and
mov
mov
call
push
mov
pusha
push
push
lea
jmp
clc
xor
push
cbtw
cmc
jmp
rol
rcl
mov
neg
clc
mov
jno
push
pushf
sub
pusha
call
