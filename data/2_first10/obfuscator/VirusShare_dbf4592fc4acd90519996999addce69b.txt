sub
add
add
add
add
add
sarl
add
andl
add
jge
or
add
add
inc
add
mov
test
xchg
sub
add
arpl
cmpsb
sarl
push
mov
aas
add
add
into
decb
inc
cmpsl
popf
add
sahf
es
or
sahf
es
or
lea
or
sahf
es
or
es
clc
call
std
mov
jp
es
add
es
add
add
movb
rcl
add
jl
push
mov
loop
cmpsb
add
inc
xchg
add
shlb
das
mov
add
sahf
es
rcrb
das
loope
add
push
es
pushf
dec
dec
rcrb
cmp
push
cmc
cmp
fs
push
dec
lret
rorb
test
mov
xchg
cmpsl
popf
add
push
dec
lock
xor
xchg
cmpsl
popf
add
lock
dec
fsubs
es
insb
es
sub
add
mov
hlt
xchg
cmpsl
popf
add
lock
fwait
es
dec
fdivs
sahf
cmpsb
fcmove
fwait
cmpsb
sub
add
push
fdivrs
xchg
cmpsl
popf
add
sub
mov
lods
push
jl
mov
mov
mov
mov
mov
mov
in
jge
push
mov
mov
add
add
xchg
xor
add
add
in
pop
xorb
fdivrl
loop
xor
rorl
mov
mov
or
cmpsl
popf
add
movb
mov
cmpsl
popf
add
insl
movb
mov
cmpsl
popf
add
insl
mov
push
mov
mov
xchg
add
jge
popf
add
lea
mov
push
mov
add
add
sarl
mov
add
mov
cmpsl
popf
add
dec
int
dec
int
dec
cmpsl
popf
add
dec
mov
mov
inc
cli
push
mov
mov
mov
add
andl
pop
push
mov
sub
mov
movsb
xor
aas
push
fists
sub
pop
push
sub
xor
aas
push
fists
repz
lods
cmc
mov
inc
insl
push
mov
xchg
adc
dec
xor
cld
mov
movsb
xor
aas
divb
fidivrl
movb
mov
mov
dec
je
movb
mov
insl
pop
xor
adc
add
push
push
jl
fdivrl
sub
mov
push
mov
push
mov
out
jge
add
add
push
push
jl
push
jl
inc
addr16
mov
push
.byte
sbb
sbb
in
or
cmp
sti
ljmp
sti
mov
cmp
int3
lods
sub
cmp
and
add
insb
pop
sub
lea
push
popl
cmp
dec
negb
add
mov
inc
pop
mov
in
sbb
sbb
add
mov
lea
ds
sbb
cmp
mov
imul
int
out
je
xor
imull
lea
push
inc
add
dec
negb
pop
int3
scas
aas
lea
inc
pop
cld
out
sbb
fistpl
mov
mov
mov
in
xor
aas
lea
xor
add
jmp
sahf
lea
fs
mov
sbb
xor
out
jl
or
lea
sbb
aam
iret
push
aam
fistpl
aam
add
aad
ds
adc
add
sbb
or
mov
mov
int
jl
or
sbb
rcll
fs
adc
mov
mov
fcmovnu
mov
popa
mov
out
imul
or
ds
pop
cmp
inc
fstpt
in
lea
int
int3
bound
lea
sbb
sbb
mov
lea
rcrb
int
push
mov
mov
adc
int3
add
lea
xchg
pop
fstpl
int
popf
int3
scas
imul
mov
lea
shll
int
lret
int3
fsubrl
lea
ljmp
das
xor
mov
lea
mov
sbb
xor
pusha
imul
mov
lea
in
int
fs
arpl
lea
mov
mov
lea
jl
int
jo
imul
mov
lea
mov
fcmovnu
fstpt
fistl
sbb
addr16
in
cli
add
in
in
fistl
inc
add
dec
mov
fistl
sbb
inc
pop
in
xor
sbb
push
jl
or
pop
sbb
sbb
inc
fcmovne
pop
mov
sahf
inc
mov
inc
fcmovne
pop
sahf
mov
sbb
cmp
cli
int
or
aas
cs
mov
sbb
sub
icebp
xor
int
or
mov
data16
aas
xor
push
sbb
mov
jl
fcmovnu
inc
inc
add
cld
sbb
xor
aas
int3
imul
fildl
add
aas
addr16
jl
in
out
mov
sbb
adc
sbb
fs
sbb
pop
add
add
or
lcall
sbb
push
sbb
mov
fcmovne
mov
int
out
mov
int
jl
push
int3
cmp
xor
fildl
int
out
xlat
add
sbb
das
add
mov
pop
xor
cwtl
fcmovnu
inc
inc
add
js
lea
cmp
xor
ret
pop
int3
test
add
mov
push
push
lea
popa
lea
pop
xor
cwtl
fcmovnu
inc
inc
add
or
lea
in
mov
lea
push
pop
xor
cwtl
fcmovnu
inc
inc
add
fwait
add
push
sbb
aas
cmp
sahf
mov
mov
add
fstpl
push
repnz
out
cmpsb
cmp
sub
fcmovne
out
mov
jae
lea
cmpsl
xacquire
add
sbb
inc
add
lea
mov
fstpt
lea
iret
int3
inc
add
fildll
lea
sub
cmp
fstpt
or
int
mov
sbb
out
icebp
cmp
sub
cmp
sub
inc
add
scas
sbb
iret
aas
sbb
aas
fstpt
mov
out
xor
push
aas
dec
loopne
lea
xor
cwtl
fcmovnu
inc
inc
add
mov
lea
addr16
aas
add
mov
xor
cmp
fildl
add
jle
lea
out
mov
lea
add
lea
inc
add
xchg
lea
sbb
imul
fcmovne
mov
lea
xor
aas
add
iret
int3
inc
add
lea
cmpsb
mov
aas
cmp
sub
xor
ret
pop
int3
mov
fcmovnu
inc
inc
add
push
lea
mov
stos
xor
lea
fstpt
lea
mov
iret
out
cmpsb
pusha
xchg
sbb
pusha
arpl
out
add
mov
mov
imul
fcmovne
mov
aas
mov
sbb
inc
add
ljmp
inc
add
inc
sbb
sbb
fstpt
push
jl
cmp
sbb
out
xor
sbb
rcll
fs
inc
sbb
lea
sbb
iret
cmp
mov
lea
in
mov
sbb
addr16
lea
or
mov
inc
add
mov
sahf
sbb
sbb
xor
xor
int
adc
xchg
sbb
mov
sbb
pop
pop
push
sbb
sahf
fistpl
iret
aas
int
mov
loopne
mov
sbb
addr16
push
jl
loope
arpl
mov
push
sbb
fstpl
mov
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
push
incb
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
sub
lea
inc
sbb
cmpsb
dec
dec
cmpsb
test
addr16
sub
xor
mov
lea
push
ret
fistpl
mov
std
xor
lds
lea
rcrb
jbe
sub
lea
sbb
pop
push
insl
in
sbb
push
dec
in
sbb
cmp
mov
push
xor
fistl
fistpl
mov
addr16
sbb
sti
iret
jl
subl
arpl
mov
sahf
sbb
lea
sahf
lea
or
and
mov
lea
dec
jp
mov
dec
aas
lds
and
sbb
cmpsb
adc
mov
sbb
pop
data16
lea
sbb
addr16
aas
aaa
cmpsl
dec
aaa
sti
iret
aas
stos
popf
xor
inc
mov
mov
arpl
call
push
sbb
sbb
mov
mov
sbb
inc
pop
fistpl
cld
sbb
mov
mov
sbb
inc
pop
fistpl
mov
aas
sbb
inc
pop
fistpl
dec
sbb
rcll
fs
sbb
aas
sbb
sbb
dec
lea
sub
ds
sahf
lea
xchg
lret
lea
mov
mov
inc
add
inc
lea
mov
sbb
inc
add
lea
push
fisttpl
addr16
mov
lea
sahf
lea
aas
int3
mov
fcmovnu
addr16
inc
add
add
xorps
push
jo
mov
sbb
in
xor
xor
aas
out
aas
sbb
xor
sbb
add
sbb
dec
in
xchg
fcmovnu
lea
ds
pop
sbb
fistpl
add
add
imul
sahf
out
mov
addr16
jl
in
sbb
mov
fldl
cmp
out
sahf
mov
sbb
mov
push
sbb
sbb
loop
js
sbb
in
sbb
sbb
sbb
sbb
xor
sbb
sti
sbb
xor
push
push
in
sti
sbb
aas
testb
aas
sbb
aas
sbb
in
pop
aas
fstpt
add
jbe
inc
pop
cld
sbb
add
in
push
lea
lea
or
sbb
xor
xor
pop
sbb
rcll
fs
mov
iret
aas
sbb
xor
pop
sti
iret
ret
iret
sub
xor
pop
pop
mov
sti
sub
mov
insl
lea
jg
insl
int3
lea
ror
inc
int3
cmp
fisttpl
cmpb
insl
lea
mov
lret
insl
lea
add
fs
fistpl
mov
pop
xor
cmp
fistpl
loopne
jl
cld
lea
push
pop
fistl
fistpl
push
inc
add
mov
sahf
xor
push
pop
pop
fistpl
push
inc
add
mov
lea
fistpl
inc
pop
fistpl
mov
push
sbb
lea
lea
rclb
sarb
int
or
push
pop
pop
fistpl
push
mov
lea
mov
fistpl
push
sbb
pop
int
or
mov
inc
pop
sbb
aas
sbb
sbb
sbb
mov
int
inc
int
loopne
dec
fistpl
mov
repnz
in
pop
xor
les
inc
inc
sbb
int3
mov
inc
add
lret
int3
inc
fistpl
insb
inc
inc
sbb
inc
add
repnz
push
xor
mov
xchg
cmp
fldt
inc
fildl
sbb
int3
jb
fcmovnu
inc
inc
sbb
pop
or
cs
sbb
rcrl
pop
inc
sahf
sbb
mov
jle
add
cmp
mov
cmpsb
aaa
out
adc
sahf
lea
fs
sbb
sbb
sbb
jbe
mov
jge
outsb
add
in
idivb
pop
sbb
cld
sbb
inc
mov
xor
mov
inc
out
xor
cmp
fcmovnu
mov
mov
sbb
jge
stos
stos
sbb
mov
cmp
addr16
mov
jge
pusha
sbb
dec
xor
sbb
stos
sbb
or
sbb
push
mov
sbb
or
sub
lds
sbb
xchg
arpl
or
in
or
mov
push
fistpl
and
fcmovnu
mov
lea
fistpl
mov
adc
fcmovnu
mov
lea
push
std
mov
int
fcmovnu
mov
lea
in
fcmovnu
xor
std
mov
mov
sbb
int
push
sbb
std
and
jge
int
sbb
int
aas
int
or
sbb
arpl
fnsetpm(287
inc
sahf
int3
fcmovnu
fildl
int3
mov
sahf
sbb
aas
mov
lods
int3
mov
cmpsb
sahf
mov
std
sbb
in
push
int3
outsb
fcmovnu
fstpt
inc
mov
sbb
push
sbb
mov
aas
in
sti
call
mov
xor
adc
adc
mov
adc
xor
add
fcmovnu
fildl
decl
inc
sbb
sahf
adc
and
pop
int3
fistpl
adc
sarl
inc
add
aas
sbb
or
dec
sub
mov
fcmovnu
fistl
xor
mov
push
in
pop
fisttpl
jbe
out
outsl
pop
xchg
sub
out
add
roll
push
sahf
inc
pop
xorb
mov
out
sbb
push
testl
sbb
jecxz
cmp
xchg
cmp
test
ret
sbb
mov
jp
inc
xchg
inc
xlat
ror
dec
or
mov
scas
outsb
add
nop
aam
push
push
loop
xor
xor
dec
mov
out
stos
mov
jmp
cmp
cmp
mov
jg
subb
and
mov
push
negl
das
loopne
mov
call
dec
popa
pop
iret
cmpsb
stc
pusha
dec
pushf
dec
add
inc
movsl
mov
rolb
es
pop
gs
jbe
aad
sub
ss
inc
sahf
outsl
ds
and
mov
jl
test
shrb
cmp
cld
dec
repz
cmp
push
outsl
inc
xchg
frstor
cmpsb
stos
fists
push
rorb
xchg
pop
sbb
loop
iret
lock
mov
scas
ss
out
sbb
push
or
in
or
and
outsb
mov
in
inc
out
mov
insl
inc
lock
mov
scas
or
popf
push
mov
in
push
stc
push
pop
aam
fcoml
cmpsb
and
push
insl
jnp
mov
stos
mov
test
and
push
dec
movsb
imul
cmp
loopne
push
xor
out
outsb
pushf
and
movsl
jns
cmp
pusha
leave
out
push
mov
test
add
scas
pusha
repnz
sahf
mov
aaa
inc
movsl
mov
fildll
inc
push
sti
jl
inc
sti
sbb
mov
cmp
sbb
and
popa
fs
xor
addr16
xor
mov
rcrl
xorl
adc
jnp
cmpsl
jg
cmp
lods
xlat
out
mov
icebp
test
pop
mov
iret
adc
and
xor
lret
sbb
int
int
mov
dec
xchg
sub
push
adc
mov
cmp
cmp
sub
and
ljmp
cmc
inc
mov
mov
loope
ret
mov
lds
je
xor
push
xchg
nop
sub
cmp
lock
pop
outsl
xorl
rorl
in
xor
int
stos
stc
add
and
jo
adc
xchg
mov
cmp
ljmp
aas
js
sub
mov
add
insb
in
sbbl
jl
in
jns
mov
and
dec
popf
movsl
adc
iret
xchg
push
push
adc
int3
lea
sbb
push
vrsqrtps
scas
mov
sub
inc
or
add
pop
jle
in
movsb
jmp
test
mov
inc
mov
adc
testl
dec
test
int
das
mov
mov
loop
outsl
lret
and
inc
jecxz
int3
mov
push
xor
out
std
pusha
xor
lds
call
icebp
jb
inc
dec
xor
sbb
cmc
pop
scas
adc
mov
pop
lods
pop
dec
cwtl
cmp
rorl
icebp
jne
mov
test
insb
in
push
popf
andb
push
lea
sub
loopne
inc
push
bound
pop
mov
in
in
push
mov
mov
aas
cmpsl
push
dec
push
rcr
out
pushf
lret
push
xor
insl
push
lret
dec
and
test
xchg
sbb
mov
xchg
lods
repnz
data16
pusha
iret
inc
dec
std
arpl
push
test
sub
pop
in
jb
fsubrp
in
ret
and
mov
fmull
mov
inc
or
test
fcompl
arpl
push
fwait
dec
clc
and
outsl
jp
pop
nop
sbb
mov
dec
pushf
and
mov
or
xor
push
push
jecxz
mov
pop
mov
mov
je
lret
movsb
pop
mov
imul
imul
cmp
cli
sub
mov
test
xchg
std
fidivrs
in
sti
addr16
rcrb
dec
das
dec
dec
shl
cmpb
jnp
sbb
imul
scas
roll
mov
xchg
stos
xchg
fdivrp
pop
adc
adc
pusha
jb
mov
adc
adc
xchg
lods
in
inc
cmpsb
sub
mov
add
xor
and
fstp
or
stos
sbb
lds
in
mov
mov
jmp
ret
cmpsl
gs
xchg
cmp
xor
mov
imul
xor
jle
roll
push
push
sub
xchg
decb
mov
mov
sbb
push
inc
rol
mov
xchg
and
cmpsb
mov
dec
sti
out
push
pop
outsb
repnz
movsb
movsb
das
mov
loope
lods
fimuls
dec
add
mov
rorb
push
lahf
mov
hlt
leave
jl
or
out
jp
pop
bound
sahf
out
dec
pop
fdivl
lods
pop
inc
jns
mov
loopne
xor
add
arpl
xlat
pop
adc
mov
into
fnsave
cmp
jae
jg
scas
or
sub
mov
and
stos
adc
push
out
mov
sti
jae
out
or
cwtl
inc
outsb
fwait
xchg
sahf
in
push
pop
xchg
fildl
out
xor
mov
and
pop
leave
roll
cltd
pop
sub
or
imul
jne
stos
les
sbb
daa
inc
in
sub
mov
orl
push
adc
insl
nop
push
dec
push
test
jl
inc
mov
lret
dec
daa
pushf
xchg
sbb
aas
push
bound
in
outsl
jmp
mov
jle
or
or
dec
mov
cld
add
xor
aas
or
pop
inc
pop
aad
jb
mov
mov
je
pop
push
sub
insb
pop
int
dec
and
xor
mov
stos
je
mov
outsb
mov
repnz
stc
cld
push
mov
cmc
and
iret
xor
jmp
lcall
mov
es
or
mov
or
add
xchg
add
add
lret
xchg
dec
add
test
xor
push
add
dec
leave
cli
xchg
in
sbb
stos
lcall
cmp
int3
add
sahf
dec
jnp
xchg
rorl
mov
decb
ljmp
lahf
jns
gs
bound
mov
add
add
push
push
scas
add
test
dec
dec
xor
adcl
adc
inc
js
xor
sahf
fistps
js
jns
testb
add
inc
sbb
icebp
mov
js
mov
out
xlat
icebp
pop
inc
cmp
jae
aaa
mov
cmc
mov
mov
mov
repnz
push
iret
add
sti
dec
xor
push
loope
fdiv
push
push
jmp
arpl
add
jl
xor
fisttpll
test
xchg
sbb
sub
icebp
test
cmp
mov
dec
ljmp
jbe
mov
cmp
loopew
fcoms
xchg
push
inc
mov
cmc
outsb
fst
xchg
les
in
sub
pop
mov
and
push
pop
fisttpl
pop
add
pop
sub
shll
addb
xchg
jnp
bound
pusha
in
push
push
xlat
jbe
mov
cmc
out
cmp
xchg
sti
jmp
mov
in
jb
outsl
sbb
inc
shrb
lcall
mov
cmpsb
cli
mov
jl
sbb
inc
lds
orb
cmpsl
test
jbe
push
and
stc
or
aad
xor
jp
pop
cld
mov
mov
addr16
or
cwtl
cmp
cmp
sbb
popa
adc
divl
shrl
jle
pop
hlt
mov
dec
rclb
cmpsl
arpl
daa
push
dec
imul
lds
repz
jmp
out
aam
push
bound
mov
je
ja
xor
outsb
mov
push
xchg
inc
fistl
add
lods
testb
scas
mov
xor
rcr
arpl
int
jg
jnp
movsb
and
jmp
shlb
std
es
lret
xor
inc
push
mov
or
push
cmc
sub
lods
mov
or
mov
call
jne
push
push
or
pop
inc
std
mov
cli
and
mov
mov
inc
imul
mov
insl
jecxz
add
inc
adc
xchg
jns
test
movsl
sub
fsubl
dec
and
call
scas
int3
pop
enter
mov
pop
popf
fdivl
gs
pop
mov
cmp
push
ret
in
arpl
sbb
pop
mov
ja
xchg
arpl
cmp
add
lcall
mov
add
jecxz
pop
push
fildll
test
mov
fnsave
add
movsl
dec
cwtl
xor
xchg
lods
imul
cmpsb
xchg
dec
popa
cmp
sbbb
pop
loope
icebp
mov
nop
jbe
push
sbb
mulb
cmpsb
xor
sbb
jmp
test
sbb
imul
lret
fiaddl
add
in
in
pop
xor
inc
pop
mov
push
add
out
sbb
push
adc
mov
mov
xchg
xor
into
jmp
sarl
dec
dec
push
ljmp
es
lods
xchg
add
lret
xor
mov
sahf
btc
and
or
cmp
dec
lret
jge
xchg
leave
cmp
sbb
and
call
repz
test
cmp
jle
test
xchg
push
inc
mov
ret
sbb
fildl
sub
pop
pusha
mov
sbbb
in
sahf
sbb
mov
mov
inc
sbb
int3
cwtl
and
fcomps
mov
cmp
add
jmp
mov
jmp
loop
xchg
mov
ds
lods
fldt
inc
or
leave
adc
aad
xchg
bound
cwtl
mov
ss
ds
int3
cmp
push
push
in
xchg
aaa
fwait
jo
ret
movsb
addr16
jnp
pop
lods
dec
sub
aam
ja
pop
mov
jo
mov
or
sti
enter
push
adc
fldt
movsl
out
xchg
xchg
or
xchg
cltd
arpl
jge
jg
mov
jae
dec
in
add
inc
push
aaa
sub
jb
xor
inc
cmp
fimull
jnp
xor
pop
inc
jg
fisttpll
idivl
fwait
aaa
loop
outsl
sub
jo
shll
gs
ljmp
mov
fcoms
pop
xchg
cmp
and
in
fsub
mov
mov
js
jge
sbb
in
aam
test
xchg
hlt
push
rclb
loopne
cmc
mov
push
aad
pop
aad
mov
imul
cwtl
dec
rorb
mov
cs
adc
jno,pn
cmp
mov
xchg
dec
jmp
cmc
or
mov
cwtl
packuswb
fucomip
aad
xor
mov
rolb
mov
adc
jb
in
test
nop
mov
jnp,pn
push
cld
rcr
jbe
outsb
mov
subl
mov
pop
adc
popa
lret
lods
sbb
movsl
xchg
dec
setnp
push
xorl
pop
or
sub
mov
popl
cmp
inc
jp
mov
leave
add
sbb
push
ror
sub
sbb
push
xor
pushf
dec
out
cmpsl
int
push
sbb
out
movsb
mov
add
pmaxub
mov
xorb
out
repz
pop
push
iret
cmp
ret
fisubrs
push
test
enter
insl
in
dec
sbb
push
outsb
fidivrl
test
sarl
scas
mov
flds
push
lods
in
andb
push
or
xchg
lahf
jmp
lahf
ret
push
dec
xor
adc
sarb
daa
into
pop
js
std
adc
ljmp
jbe
cli
shrl
fidivs
inc
adc
lods
xchg
loope
or
cmp
popa
jno
mov
incl
ret
filds
mov
cmpsl
imul
jns
jno
xchg
push
xchg
fsub
arpl
dec
mov
mov
push
je
xchg
or
das
sub
aad
daa
cmp
lods
xchg
adc
out
pop
xchg
les
sub
sbb
imull
lret
gs
pop
jg
adc
dec
fstl
lds
fwait
out
pop
push
xchg
clc
xchg
cmp
repnz
jmp
cmc
adc
xchg
aad
xchg
imul
hlt
decl
xor
push
lahf
add
dec
jne
mov
fbstp
repz
add
lock
daa
inc
out
incl
or
daa
fidivrl
cltd
cli
xchg
cmc
or
sbb
lahf
in
out
xor
mov
stc
repnz
fnstenv
mov
ja
xor
addr16
hlt
jb
push
inc
inc
xchg
push
scas
ja
lret
arpl
mov
pushf
jge
sub
in
mov
fadd
push
andb
aaa
popa
and
insl
dec
sahf
out
fimull
outsb
push
testb
popa
sbbl
or
lds
fwait
mov
sbbb
cmp
add
ficompl
in
ds
inc
or
clc
add
inc
push
sbb
and
jne
push
cltd
shl
and
xchg
xchg
js
test
orb
call
pop
lock
clc
jae
or
dec
jno
scas
test
cmp
paddd
jae
insb
popl
push
sbb
push
pop
outsb
xchg
orl
mov
popf
mov
aas
pop
scas
pop
adc
call
sti
push
rcr
push
shl
xor
popf
loopne
dec
cmp
rol
adc
and
dec
int
xchg
test
adc
test
inc
or
setae
and
sbb
lods
mov
out
sti
incb
push
xchg
outsl
pop
lret
lahf
or
pusha
ret
mov
repnz
mov
dec
xor
and
fmuls
add
inc
mov
gs
in
nop
cmp
das
push
dec
outsb
popa
rolb
and
push
ss
rol
and
jmp
sub
push
mov
push
jae
mov
gs
xchg
jbe
inc
xchg
std
jle
inc
push
fidivrs
movsb
inc
and
jl
jp
mov
rcl
xlat
add
mov
xor
clc
cmpsb
insb
ds
or
add
mov
mov
dec
mov
ds
xchg
xor
dec
sbb
cmp
push
xor
push
jg
cld
pop
shr
xor
xchg
jge
mov
mov
cmpb
int
aam
js
hlt
push
pop
jo
adc
aad
fbld
iret
sarl
bnd
stc
mov
inc
sbb
repz
add
cs
lcall
sub
jmp
pop
mov
inc
sub
adcb
pop
push
cmp
jge
lret
adc
cmpsb
cmpsl
xlat
mov
jge
stos
inc
adc
jne
xor
lahf
dec
sub
inc
fld
dec
popf
push
sbb
js
mov
push
xor
fadds
pop
or
jae
dec
inc
sub
add
push
jno
mov
push
xor
cld
sub
cli
mov
cld
mov
sub
icebp
imull
fwait
or
mov
adc
add
pop
or
movsl
in
scas
xor
mov
js
push
xchg
jmp
lret
push
push
jmp
add
lock
add
push
gs
jg
mov
sub
mov
fs
das
pusha
stos
cmp
adc
test
mov
sarb
mov
leave
cmp
xorb
psubw
inc
aad
or
pop
out
lods
test
adc
jbe
push
xor
mov
clc
adc
loope
imul
mov
xchg
ffree
or
fld
out
adc
sbb
fistpll
xchg
and
and
jno
sub
repz
cmp
mov
mov
loop
insb
outsl
sub
sbb
inc
xchg
cmp
xor
out
or
fdivrl
push
push
mov
mov
mov
xchg
test
popa
fcompl
xchg
mov
jne
dec
jno
adc
inc
sub
icebp
sar
mov
outsb
xchg
xchg
or
mov
sbb
cli
ds
out
mov
mov
insb
nop
out
mov
push
hlt
jne
xchg
add
mov
mov
or
scas
stos
cmp
pop
xor
jmp
imul
stc
adc
mov
mov
stos
adc
int3
or
subl
in
mov
insl
mov
push
dec
int3
and
fsub
data16
dec
divl
lock
mov
dec
sub
cmp
jmp
dec
pusha
ja
xchg
mov
sub
jo
fsubrl
mov
mov
fdivr
mov
out
outsb
fwait
sarl
pusha
mov
jecxz
jecxz
mov
jbe
push
lock
mov
enter
mov
out
sub
cli
sbb
shll
int3
sub
cld
push
mov
aas
and
ljmp
push
insl
add
inc
mov
inc
scas
cmpsb
imul
fs
pop
scas
sbb
lret
pusha
rol
call
lds
add
sub
out
or
dec
jno
cs
test
or
push
add
fs
sub
int
lret
nop
jns
pop
push
test
stos
cs
xor
and
popa
ds
mov
call
fiaddl
leave
es
scas
out
mov
pop
push
cmpsb
add
stos
fs
iret
xchg
mov
repz
lock
ret
dec
dec
sbb
add
push
mov
insb
sub
aas
sbb
add
lock
test
mov
xchg
mov
cltd
and
push
push
pop
addl
in
xchg
jmp
fsubrp
mov
xchg
xchg
push
lea
sub
mov
rorb
push
xchg
nop
pop
insl
pop
jb
cli
nop
mov
cmpsb
out
ljmp
fcmove
mov
inc
xchg
pusha
test
iret
mov
arpl
gs
repnz
sbb
lods
mov
lret
jge
notb
ja
test
dec
push
cwtl
adc
mov
mov
pushf
jp
cs
cli
adc
fdivr
lahf
movsb
adc
dec
jnp
movl
pushf
fwait
inc
push
cli
inc
loop
shll
data16
or
mov
mov
adc
push
xor
or
xchg
pop
xchg
inc
xchg
rcrl
sub
jecxz
push
enter
stos
mov
test
insb
inc
fsts
jp
into
cmp
rcrb
pop
fwait
shll
lock
dec
icebp
sub
inc
jmp
cmc
and
jecxz
pop
loop
insl
scas
xor
fwait
gs
xchg
cmp
in
imul
push
mov
repz
mov
lret
pop
pop
test
cmpsb
sbb
add
xor
add
pop
stos
int3
mov
mov
and
mov
nop
cmp
lock
cmpsl
sbb
hlt
mov
sbb
push
je
call
sub
insb
nop
mov
or
and
int
lret
scas
push
push
xchg
nop
mov
sahf
das
mov
arpl
aam
or
popf
mov
in
test
and
mov
lahf
dec
jmp
jp
lret
repz
xor
out
or
sti
mov
icebp
xchg
push
pop
mov
push
jl
out
aas
ds
repnz
out
std
xchg
ror
sbb
subb
cmp
mov
mov
add
xor
mov
or
jnp
out
ja
fmulp
sbb
inc
cmpsb
icebp
fsubr
fimuls
xor
shlb
je
mov
int
enter
in
into
cwtl
jnp
mov
int3
cs
adc
or
repz
sbb
mov
xor
outsl
xor
js
push
xor
xor
mov
jns
cmp
orl
jge
fucomp
adc
mov
mov
out
push
call
sub
pusha
push
adc
imul
bound
pop
jae
and
xor
sbbl
data16
cmc
dec
insl
xchg
div
push
insb
mov
jns
jbe
sub
insb
mov
sub
sbb
and
jl
push
jno
arpl
repnz
inc
hlt
test
and
mov
xor
mov
ret
pop
out
or
and
mov
fnsave
push
cmp
xor
cli
mov
add
sub
or
add
or
in
pushf
ret
mov
xor
pushf
push
mov
fcomip
not
or
in
mov
lcall
mov
mov
push
fwait
roll
mov
aas
mov
mov
jne
cmp
xchg
add
pop
fsubs
roll
icebp
sub
aam
outsl
div
pop
and
pop
jl
loopne
orb
ljmp
iret
jbe
aaa
shlb
and
int
fwait
add
sti
mov
or
jmp
popf
insb
sbb
adc
push
mov
pushw
jnp
jp
inc
push
fdivs
sbb
push
insl
aaa
icebp
hlt
jne
outsb
divb
mov
js,pt
popf
mov
cmpl
shr
jo
jp
insb
ret
jo
dec
and
push
lret
jecxz
xchg
inc
fsubrs
inc
in
xchg
je
pop
push
je
ljmp
das
jl
add
pop
jbe
sti
xor
xor
ror
push
push
jbe
int
xor
xor
mov
ret
mov
jbe
out
in
lock
add
add
jnp,pn
cmpsl
xchg
rcll
mov
xchg
out
int
cmp
xor
arpl
outsl
or
repz
jnp,pt
mov
into
clc
repnz
inc
ds
daa
mov
and
sbb
cmp
int3
cmpsl
lods
pop
fsts
les
lcall
mov
mov
add
cmpsb
or
mov
stos
inc
or
mov
or
popf
and
mov
or
mov
jge
mov
cld
jmp
ret
jbe
jecxz
mov
rol
mov
repz
sbbb
loop
mov
mov
and
out
pusha
icebp
jp
dec
scas
out
imul
jg
rcll
loope
ffreep
xchg
sub
pushf
aad
sti
add
sbb
enter
fdivr
or
jno
inc
mov
push
xlat
jge
sahf
xor
ja
pop
add
xchg
add
jbe
pop
dec
add
cld
ret
aam
repnz
xchg
lret
in
cmp
rcrl
xchg
xchg
lods
cmp
adc
shlb
mov
arpl
out
xor
cmc
adc
pop
cmp
repz
sbb
aas
shl
repz
adc
pushf
add
inc
adc
jp
mov
xchg
addr16
leave
out
out
orl
loopne
lret
mov
pop
rol
loope
test
mov
pop
sub
aad
mov
fwait
rorb
out
andb
xabort
lods
jle
out
lcall
xchg
fidivrs
rcr
out
lret
mov
outsl
adc
mov
not
cs
mov
xor
hlt
sbb
ljmp
lret
push
xchg
decb
les
xlat
mov
push
sbb
ss
out
or
sahf
cld
push
das
mov
xor
mov
pop
mov
inc
das
mov
jnp
add
sahf
fistps
rcrb
dec
cmp
in
pop
push
dec
int
cmp
adc
pushf
sbb
and
aas
das
pop
jmp
inc
jno
movsb
xor
sub
and
mov
fs
sbb
fcmovne
inc
adc
xchg
rorl
mov
movsl
or
cmp
pusha
pop
repnz
lock
xchg
mov
pop
xor
xchg
and
addr16
pusha
sbb
adc
mov
xchg
mov
inc
fldt
and
int
mov
push
ret
lret
mov
loopne
pop
stos
xchg
or
jle
jg
push
sbb
cwtl
lods
dec
lahf
push
xchg
pusha
xchg
lcall
aad
scas
jmp
test
movb
cwtl
dec
imul
mov
gs
fwait
enter
popa
cmpsb
jmp
pop
xor
dec
mov
test
or
dec
sub
cmp
fnsave
push
xchg
adcl
mov
lahf
call
xchg
insb
jns
fists
dec
pusha
adcb
xchg
pop
mov
mov
jno
jp
mov
sti
add
cltd
ficoms
jmp
sbb
out
jnp
mov
and
nop
add
sbb
mov
pushf
into
jmp
or
mov
and
dec
inc
lock
adc
fcompl
jl
int3
testb
sbb
dec
cmpl
aaa
aad
pop
push
sub
inc
movsb
or
xor
sbb
jp
xor
iret
pushf
xor
or
lcall
stos
push
jnp
pushf
das
shrb
push
push
and
test
js
int3
push
cmpl
mov
dec
push
adc
pop
dec
push
dec
pop
xchg
inc
fwait
call
in
xor
int
cmc
push
jo
lods
or
test
addl
les
mov
aas
mov
mov
addr16
std
mov
rcll
in
sub
jmp
enter
out
sbb
push
or
mov
das
orl
mov
mov
or
fs
movsl
js
pop
push
test
push
fs
mov
pop
cmpsb
mov
pop
pop
pop
and
and
dec
in
add
push
idiv
lahf
rolb
or
xor
mov
xor
mov
cmp
dec
cli
fidivs
cmc
jmp
adc
pop
arpl
pop
dec
jb
jecxz
call
rol
jmp
lret
into
sub
xor
mov
mov
nop
sbb
aas
cwtl
mov
or
movsb
ljmp
ss
popa
les
sub
jae
mov
pop
clc
ret
pusha
ljmp
loopne
jno
sbb
sarb
call
mov
aam
adc
test
cmpsb
jb
nop
fidivrs
shr
mov
ficomps
aad
mov
jo
dec
pop
loope
inc
aam
sbb
jne
sbb
adc
push
add
jle
movsb
jmp
xchg
roll
inc
leave
xor
push
push
cwtl
iret
mov
pop
push
fsub
sti
or
out
test
sti
xor
or
sub
cwtl
jmp
mov
mov
rolb
jb
outsb
cmp
aas
and
cmp
flds
lods
inc
dec
mov
subl
in
subl
dec
xor
out
sub
cmp
push
mov
stc
je
jle
les
xchg
xor
cmp
fmuls
nop
test
cvtps2pd
test
jecxz
mov
inc
aas
xor
testl
sahf
xchg
scas
and
sbb
cmp
sbb
and
movswl
repnz
cmp
in
push
or
push
dec
je
mov
dec
mov
fildll
pop
push
jno
pusha
adcl
vpcomuq
aas
les
push
add
xor
out
sar
cwtl
out
fsts
outsl
mov
loopne
clc
std
inc
loopne
jns
imul
popf
cmp
add
mov
sbb
arpl
inc
lods
call
in
stos
fldcw
mov
adc
jbe
pop
jecxz
rcrl
insl
sar
lods
repz
pop
and
push
sahf
std
mov
dec
cmpsl
and
scas
sbb
jg
inc
cltd
mov
or
stos
xchg
ds
add
jnp
pop
lock
jns
aam
cld
dec
inc
shrb
mov
xor
mov
std
sbb
or
sbb
mov
aam
mov
mov
test
push
xchg
inc
arpl
xchg
mov
jae
in
repz
adc
pop
jb
jg
aam
add
outsb
in
repz
push
in
test
add
cmpsl
jns
cli
inc
stos
fwait
gs
xorb
clc
scas
out
scas
idivb
sti
xor
hlt
lods
push
pop
dec
mov
mov
jne
cmp
mov
test
jb
jge
pop
xchg
bound
dec
fbstp
in
mov
fcoms
loopne
xlat
push
adc
aaa
shr
push
lret
leave
rolb
nop
out
loopne
imul
pop
mov
outsb
inc
sahf
data16
xchg
scas
add
popl
stos
adc
imul
mov
mov
or
add
adc
lods
sahf
cmp
add
insl
push
mov
hlt
aam
rcr
das
aad
push
jp
inc
add
aad
popa
mov
stos
dec
push
push
stc
dec
into
mov
ror
cltd
ret
mov
xor
divl
lea
neg
or
cmpsl
cmp
movsb
or
setno
xchg
mov
mov
rep
and
push
test
xor
jmp
out
aad
pop
push
and
icebp
cld
inc
jno
add
mov
stc
stos
push
scas
lods
psrad
stos
xchg
pop
scas
or
in
or
adcl
push
nop
lds
popa
inc
sub
outsb
fstps
stos
arpl
ljmp
mov
cmpsb
cmp
sub
jne
pop
xchg
cmp
cmp
pop
jge
mov
jns
sbb
mov
or
sbb
sahf
in
push
lahf
in
xchg
ja
mov
sub
xchg
sbb
pop
ja
adc
mov
mov
sti
mov
hlt
ficompl
sbb
pusha
sub
dec
lcall
push
pusha
jne
cmp
sbb
flds
call
stc
push
test
mov
in
and
test
les
cmp
inc
and
cmpsl
push
mov
je
xor
ret
pop
lea
imul
hlt
inc
aas
xor
outsl
out
adc
xchg
push
add
push
lock
fildl
subl
or
movsb
loope
jne
sub
sub
inc
jnp
sbb
sbb
jl
add
jg
mov
fs
cmp
ljmp
jae
jecxz
jecxz
mov
cmp
xchg
cmp
dec
clc
cmp
int
ljmp
cmpsl
sub
cmp
xchg
or
push
rol
add
xor
push
cli
movsl
fwait
push
fisubrs
out
or
dec
fbstp
scas
mov
cmp
dec
hlt
cmp
pop
fldcw
mov
or
pop
cld
dec
sub
sub
inc
pusha
mov
and
sub
or
prefetchnta
inc
mov
mov
mov
cli
nop
lcall
mov
popa
push
or
cwtl
arpl
leave
sub
loop
adc
sbb
aaa
in
movsl
cmp
test
jp
xchg
cli
dec
or
mov
xor
es
or
adc
add
adc
jg
loope
fwait
sbb
movsb
lds
mov
add
and
cmpsb
xchg
loope
jns
push
jge
dec
push
or
inc
mov
ret
dec
test
xchg
outsl
pop
mov
pushf
push
mov
sbb
int
jg
dec
data16
sbb
loopne
sbb
push
fnsave
cmp
dec
repz
pop
test
xchg
push
cmpsb
dec
xchg
mov
aas
or
outsl
sbb
cmp
sahf
mov
imul
das
xor
and
in
dec
cs
mov
inc
pushf
jnp
loopne
adc
xchg
into
daa
jmp
push
test
mov
sub
lret
pop
push
pop
ljmp
pop
int3
mov
sub
jmp
test
movsl
in
aas
call
fsubrp
adc
leave
dec
lcall
adcl
mov
test
push
adc
pop
push
or
into
repnz
test
repz
aas
and
cmc
cld
xchg
or
mov
inc
cld
jns
push
insb
js
inc
pop
cwtl
mov
lods
ja
pop
sbb
leave
jp
out
inc
dec
xchg
sub
cmp
rorl
out
sub
jae
nop
ret
stos
adc
push
push
push
xchg
lahf
sbb
iret
out
rorl
lcall
cmpsl
repnz
mov
inc
xor
hlt
mov
and
jnp
jecxz
dec
jno
push
push
add
mov
add
push
inc
dec
cmp
xchg
divl
std
jmp
fbld
pop
cld
pop
sbb
cvtdq2ps
js
mul
fwait
dec
or
xor
or
cmp
sbb
sbb
lret
add
lret
test
mov
inc
or
jmp
arpl
test
pop
xchg
push
ret
sar
jge
cmpsl
lret
sbb
xchg
mov
scas
pop
cmp
or
leave
cmpsl
lods
lods
insb
push
popa
repz
and
fwait
push
mov
or
clc
in
xchg
dec
mov
cmp
jmp
add
fldcw
out
lds
pop
jae
out
repz
add
clc
jge
lods
inc
dec
cmc
inc
pop
mov
mov
lcall
mov
data16
dec
xchg
add
add
mov
movsl
add
rclb
xor
adc
add
mov
add
mov
repnz
dec
inc
xchg
xchg
xchg
lea
dec
mov
push
mov
mov
mov
xor
mov
mov
clc
ja
out
mov
dec
mov
imul
data16
clc
sub
lcall
sbb
ret
scas
and
cli
sti
push
imul
pop
inc
push
stc
psubd
shl
mov
lahf
adc
lods
cld
mov
mov
insb
scas
test
loop
pop
sub
xchg
outsl
xor
repz
inc
push
clc
and
pop
pop
jl
cmp
daa
inc
and
stos
push
cmp
dec
fistps
fimull
sbb
leave
lret
xchg
lcall
sbb
xor
rcrb
push
xchg
and
push
stos
inc
xor
mov
sbb
dec
adc
scas
lahf
js
mov
imul
dec
out
in
call
fildll
popa
fbstp
fcmovnb
sbb
xor
adc
lret
ret
cld
cmp
mov
jle
inc
mov
stos
cmp
mov
adc
mov
lcall
push
adc
cwtl
pusha
pop
cmp
inc
adc
ljmp
xor
jbe
fs
imul
scas
push
call
xor
dec
cld
mov
and
jg
xor
sbb
dec
xchg
inc
aas
fucomi
sbb
popa
push
mov
mov
add
sub
xchg
pop
out
imul
xchg
push
mov
mov
mov
aam
add
adc
lret
in
push
das
sbb
sub
sbb
decb
fldenv
add
insb
test
push
jne
sarl
adc
test
and
add
test
cmpb
jle
std
add
stc
inc
add
cmp
xchg
and
mov
cmpsl
pushf
lods
loope
es
int
add
jb
cmp
test
fidivl
push
and
cmpsb
mov
lea
nop
push
mov
sub
adc
jl
add
dec
popf
sahf
sub
xchg
sub
or
xchg
cmovg
adc
movsb
arpl
test
ja
scas
inc
jecxz
std
outsl
pop
push
mov
lcall
push
fdivrl
and
pop
xchg
jecxz
push
or
mov
stos
insb
inc
jg
push
sub
sahf
pop
pop
add
sbb
xchg
xchg
cmp
bound
pop
daa
adc
ret
mov
cmp
mov
lahf
lock
fldenv
shll
shlb
testb
dec
sbb
pop
lret
dec
scas
mov
inc
idivl
test
pop
test
mov
push
in
jo
adc
sarb
adc
test
ret
cmp
xor
add
dec
xor
imul
imul
mov
xor
mov
sbb
xchg
mov
and
inc
xchg
fadd
sarl
lds
insb
inc
jno
xchg
sub
sbb
enter
and
incl
cli
test
dec
pop
dec
dec
xchg
loope
test
jbe
sub
xchg
push
dec
rclb
lds
dec
adc
mov
fistps
inc
add
mov
jnp
cmc
les
dec
in
fwait
xorb
mov
dec
sub
cmp
push
cmc
mov
lcall
pop
push
jmp
pop
daa
dec
and
imul
pop
add
xchg
gs
mov
inc
mov
mov
repz
or
rcrl
fnstcw
fdivr
test
lds
cmp
cmp
jl
cmp
push
fs
inc
dec
adc
xchg
add
stc
xor
and
xchg
popa
dec
fcompl
int
mov
ss
mov
or
loopne
xchg
sahf
loope
push
xchg
scas
addr16
adc
je
in
insb
push
pusha
call
les
push
rorb
xor
mov
xchg
xor
push
push
mov
mov
push
sbb
push
imul
std
adc
ljmp
push
pop
arpl
adcb
lock
lods
mov
sub
xchg
jp
mov
add
xchg
mov
mov
push
movsl
insl
call
outsb
ret
pop
jecxz
inc
mov
sbb
enter
inc
add
decb
xor
kmovw
adc
pop
testb
ret
jle
pop
imul
mov
or
pop
or
addr16
les
addr16
adc
mov
icebp
fisttpl
daa
inc
mov
cmp
add
pop
pop
mov
fbstp
xchg
mov
out
test
sarb
cmp
jb
test
arpl
or
repnz
mov
jno
sbb
dec
xor
dec
mov
add
stc
stc
cmp
mov
lods
daa
aaa
scas
leave
in
iret
cmp
jmp
out
pop
popf
das
xor
cwtl
imul
inc
xor
or
sbb
repnz
daa
or
aaa
rolb
xchg
jno
jmp
xchg
mov
scas
xchg
jnp
sbb
jge
leave
popa
inc
mov
aam
inc
mov
xchg
or
and
out
sbb
lea
aaa
aas
push
shl
pop
xchg
dec
adc
sub
sub
gs
imul
je
imul
movsb
inc
xor
shlb
dec
push
sbb
sbb
xchg
movl
lea
stos
or
insl
insl
dec
and
cltd
lods
pop
push
in
cmpsl
sub
adcb
inc
jmp
and
ljmp
leave
push
xor
sbb
pusha
inc
or
pop
call
outsl
cltd
inc
or
fnstenv
out
jne
gs
stc
lret
cli
ljmp
jmp
mov
or
pushf
gs
cmpsl
data16
fcoms
popa
lahf
or
sahf
rolb
shl
and
lods
inc
pop
das
inc
cmpsl
cmp
std
fcoms
fadd
jae
fildll
daa
orl
mov
fs
sbb
ja
rcrb
sbb
arpl
dec
inc
inc
call
sub
sahf
sbb
and
lcall
adc
dec
push
ja
movsl
push
xlat
out
jle
push
adc
in
push
push
adc
pop
sbb
dec
or
mov
xchg
testb
daa
test
xor
enter
pushf
jmp
inc
in
out
popf
pop
push
gs
in
mov
lcall
stos
lahf
lock
les
test
or
cld
test
mov
lods
std
stos
fiaddl
jne
jne
aaa
jp
sbb
fisttps
pop
imul
and
sub
adc
popa
xchg
mov
sub
sbb
mov
inc
add
outsl
movsl
imul
inc
adc
xorb
orl
adc
push
shlb
repnz
loop
lds
mov
mov
les
adc
xor
movsl
add
hlt
inc
pop
or
cmpl
subb
xor
sbb
cli
mov
mov
push
jp
in
bound
lret
out
push
xor
lret
shrb
mov
jle
jae
inc
jmp
jbe
dec
add
lcall
lret
mov
jb
mov
stos
out
xlat
sbb
jns
push
ja
nop
or
sti
mov
popf
inc
add
dec
insb
pop
cmp
mov
xchg
insb
lret
mov
leave
call
and
popf
rcr
adc
fldl
push
mov
pop
push
push
idivl
ret
mov
cmc
fisubrl
int
push
cmp
enter
das
or
inc
cmp
xor
push
mov
mov
push
and
pop
xlat
pop
aas
lds
fldenv
loope
movsl
cli
icebp
push
sub
fdivl
sahf
int
sub
loop
loope
arpl
in
in
push
mov
inc
xor
cmp
xchg
pop
xor
mov
pop
jbe
rorb
dec
dec
in
pop
pop
or
xor
rorl
les
repz
stos
jmp
jno
adc
leave
scas
push
dec
adc
sbb
and
out
inc
push
lea
in
lcall
test
sbb
addr16
mov
sbb
scas
xchg
cmp
dec
cmp
sahf
or
fwait
mov
iret
fidivrl
shlb
cwtl
inc
adc
lret
and
cmpsb
imul
insl
std
gs
fmuls
or
cmp
mov
sbb
xor
mov
cs
mov
call
dec
out
in
dec
daa
inc
imul
std
into
loope
ljmp
dec
xlat
cld
push
lods
icebp
lods
out
inc
mov
leave
jle
mov
mov
outsl
sti
jmp
xor
aad
mov
jne
jne
fisubs
push
into
cs
add
sahf
and
cmpsl
sbb
je
data16
stc
xorb
mov
mov
fsubrs
cmc
add
adc
pop
pushf
insb
es
mov
bound
shl
mov
push
arpl
adc
push
lock
pushl
xor
std
popf
and
and
push
int
sbb
cmp
sub
jl
or
add
and
shlb
imul
stc
pop
cmpsb
inc
sub
subl
push
sbb
cmp
sbb
xchg
adc
cmp
mov
lahf
xor
cmp
fdivrp
movsb
push
fs
fldcw
adc
in
xor
dec
jecxz
popf
dec
or
or
fs
dec
stc
fs
shrb
addr16
push
xchg
adc
xchg
cltd
mov
push
mov
int3
mov
insb
sbb
pop
out
dec
aaa
push
dec
arpl
and
xchg
loopne
mov
movsb
fbld
push
xchg
gs
and
imul
xchg
cmp
jmp
xor
cmp
dec
adc
push
push
ror
aad
stos
icebp
add
popf
or
pop
test
and
mov
xor
sub
mov
sbb
int
jle
nop
jb
aas
stc
jle
inc
push
cwtl
cmc
xlat
fmulp
repz
scas
in
push
mov
push
ret
adc
ret
paddq
xchg
push
pusha
cs
stc
mov
movsb
mov
into
xor
mov
or
clc
jne
mov
push
test
movsb
test
push
ss
or
jae
ss
or
loopne
fbstp
xor
or
dec
lods
or
mov
pop
add
add
insl
scas
dec
insb
mov
fnsave
inc
mov
testl
cmp
inc
and
cmc
popf
andl
rol
sti
mov
fucomp
sahf
negb
jle
pop
mov
fimull
ror
je
push
pop
icebp
aam
push
mov
adc
pop
das
lea
stos
inc
cmpl
out
arpl
mov
scas
in
add
aam
cmc
lret
add
and
aad
aaa
out
out
and
test
push
xor
cmc
mov
popa
scas
and
dec
jmp
mov
xchg
push
fsub
decb
mov
fst
das
mov
pop
and
imul
imul
cld
jae
jle
or
mov
pop
pop
sbb
ret
and
cli
scas
mov
js
pushf
mov
mov
mov
push
shrl
enter
and
mov
sbb
xchg
fisubrs
out
sbb
mov
mov
movsl
mov
loop
mov
or
push
lock
push
lock
mov
fld
popa
testb
mov
mov
lock
mov
loope
mov
stos
mov
fmul
loopne
scas
rcrb
cmp
dec
lock
inc
sub
stc
int3
pop
sbb
jno
stos
sub
movsb
dec
sub
dec
jp
data16
in
mov
jno
mov
std
js
out
xor
in
in
lock
jbe
ss
xor
inc
push
les
cmpl
cltd
in
push
arpl
mov
cltd
mov
outsl
adc
sub
aad
pop
out
mov
mov
loope
loope
rolb
out
outsb
movsl
adc
popf
sub
leave
aas
ja
push
xchg
and
push
mov
rcr
jns
jl
aas
out
and
pop
jnp
pop
xchg
int3
mov
mov
dec
ret
movsl
rcrl
mov
gs
adc
ret
fidivs
lret
stos
out
repnz
test
push
xchg
jns
pop
xchg
push
sbbl
sbb
pop
aaa
mov
daa
xchg
out
lock
dec
push
div
pop
shlb
insb
loop
imul
lret
jns
cli
sbb
xchg
in
inc
rcrl
clc
pop
out
stos
lds
repz
or
iret
scas
xor
inc
arpl
cmp
inc
test
or
sbb
inc
pop
mov
cmp
xor
push
or
push
and
xor
aaa
mov
out
mov
or
cs
fsubr
jbe
imul
xorps
push
lods
test
mov
cltd
clc
or
sub
ljmp
push
dec
fwait
push
inc
loop
mov
loop
ss
sub
mov
and
repz
cmp
pop
lock
mov
or
pop
fidivrs
dec
addr16
xchg
xor
movlps
cmc
ret
sti
int3
pop
aam
xor
pop
inc
mov
frstor
pop
lcall
xchg
mov
popa
and
xor
xchg
cmc
daa
and
xchg
daa
pop
jmp
sub
mov
mov
adc
sub
lret
js
cmp
fdivrp
in
push
loopne
jp
push
or
dec
imul
mov
push
add
or
sti
xor
mov
repnz
clc
daa
xor
adc
jge
push
data16
xor
dec
sbb
sahf
mov
add
pop
or
out
mov
mov
mov
std
mov
pop
and
js
mov
pusha
mov
pop
dec
pop
pop
jbe
dec
dec
jg
mov
push
push
xchg
daa
dec
mov
mov
cmp
and
pop
sub
inc
or
gs
subl
shl
pop
test
push
jle
push
xchg
rcr
sub
or
pushf
les
jb
adc
daa
insl
clc
fs
mov
jns
lret
test
inc
sbb
insl
xchg
mov
fisttpll
pop
adc
into
sarl
fs
sub
dec
add
add
add
or
cld
cltd
jnp
test
ja
pop
cwtl
cs
jo
xchg
vpaddd
adcb
and
or
pop
cmp
push
ds
sbb
sbb
mov
negl
jbe
xlat
adc
shll
jo
lea
xchg
adc
aaa
js
add
push
xor
or
sub
stc
ja
mov
adc
push
adc
filds
jmp
pushf
mov
dec
out
inc
xor
leave
out
mov
jne
in
call
es
xchg
jne
bound
retw
mov
out
lock
leave
dec
xchg
and
inc
jl
or
mov
leave
in
dec
adc
pop
xor
xor
add
shlb
mov
popa
test
popa
mov
into
and
cli
enter
mov
mov
add
and
aam
jo
jl
std
sti
cmp
sbb
adc
lcall
lock
jl
dec
out
ret
nop
insl
push
fcmovu
mov
lods
cld
loope
je
rclb
mov
cwtl
fisubrl
or
and
jne
xor
add
and
mov
jecxz
icebp
dec
rorb
dec
les
and
movsl
cmp
rcl
outsl
std
aam
mov
pop
mov
xor
ss
sub
inc
cmp
adc
cmc
ja
xor
cmc
push
fisttps
outsl
push
xor
lods
insl
pop
cmp
pop
mov
push
je
mov
pop
mull
mov
xchg
xchg
and
cmpsb
adc
inc
add
fwait
les
pop
push
mov
cmpsb
push
or
lcall
daa
lea
into
adc
inc
jp
push
sarl
aad
ljmp
dec
aam
sarw
arpl
ficompl
out
aad
xchg
in
mov
cmp
adc
jo
pop
pop
mov
repnz
cmpps
aam
fistpll
stos
lea
ror
lahf
adc
lahf
movsl
sar
xor
or
push
and
push
pushf
push
les
out
mov
fwait
and
inc
fiaddl
pop
clc
jo
mov
lret
aam
out
or
fwait
xchg
mov
pushf
enter
dec
sub
lock
or
fstpt
test
daa
cmpsb
in
cmc
cmp
xor
add
insb
stos
lods
sti
mov
or
mov
xchg
imul
jns
push
outsb
mov
nop
divb
inc
pop
cmc
aam
js
fstp
cwtl
push
pop
inc
addr16
mov
push
int3
mov
dec
hlt
outsl
out
inc
or
jge
mov
mov
xor
xchg
push
sub
mov
mov
sarl
jmp
inc
fstl
lret
mov
inc
frstor
inc
xor
and
out
dec
or
addr16
in
mov
and
lcall
cld
adc
mov
scas
or
sub
add
and
andb
les
stos
ds
std
les
pop
in
aam
test
pop
pop
std
les
push
rolb
bound
out
jecxz
mov
sarb
mov
sub
hlt
popa
push
xchg
jae
mov
jle
pop
lcall
mov
sti
add
mov
into
mov
and
jne
cld
fisubl
rorl
fdiv
dec
ljmp
xchg
imul
sub
xchg
shrl
push
lret
xlat
fildll
roll
jecxz
cli
inc
rcrl
hlt
in
push
adc
sbb
test
xor
iret
outsb
xchg
sbb
mov
pop
movsb
mov
fwait
hlt
int
push
imul
test
repnz
lods
scas
leave
adc
hlt
xchg
or
jl
jo
jge
testl
lea
inc
cmp
mov
xor
fsts
out
in
popf
pop
cmp
imul
shl
sub
jno
in
shll
mov
mov
jno
and
out
jp
pop
test
pop
and
data16
addb
test
in
pop
sti
roll
mov
and
pop
xor
mov
inc
and
xchg
sbb
fucomip
inc
mov
imul
movsb
dec
out
test
or
cmc
cmp
aam
mov
in
rolb
outsl
movsl
xchg
fwait
jnp
adc
loopne
stos
mov
pop
mov
mov
cwtl
loope
insb
out
pop
sub
xor
out
aad
xor
cs
push
mov
popa
sub
fstpt
lahf
lds
clc
lods
push
popa
fstpt
pop
or
les
or
adc
mov
ljmp
iret
push
jns
jle
cmp
add
adc
iret
push
out
ljmp
mov
test
fwait
or
pop
sub
loopne
ljmp
or
stos
sub
fnsave
outsb
fnstsw
add
les
or
sti
mov
and
cmp
orb
mov
mov
ficomps
repz
cld
stos
add
and
add
stos
dec
jo
out
arpl
jmp
push
pop
sub
ja
addr16
mov
iret
ljmp
or
and
sahf
mov
scas
fs
sub
mov
pushf
lret
nop
jl
mov
pop
push
inc
xchg
xchg
lock
pop
sub
leave
out
test
nop
mov
imul
and
pop
cld
movl
adc
movsb
outsb
test
and
mov
push
outsl
test
push
jmp
loope
mov
jne
or
repz
xor
lea
jne
or
lcall
movl
stos
rcrl
jns,pt
push
aad
add
in
jl
mov
push
adc
test
xchg
or
mov
sahf
mov
push
sti
push
mov
call
cmc
mov
dec
fldt
jbe
and
pop
sub
or
jle
daa
notb
rclb
adc
sbb
aaa
movsl
xor
dec
lock
xchg
cmpsb
rorb
jl
loopne
les
outsb
enter
inc
jle
jnp
aam
cld
rcll
and
les
daa
lcall
in
mov
push
insb
ja
mov
repz
xchg
fcompl
lea
loope
xchg
dec
mov
push
push
xor
stos
xlat
test
cmp
mov
int
imul
es
jmp
sub
hlt
adc
je
sub
mov
or
mov
mov
insl
imul
rol
mov
mov
mov
xchg
xchg
cmp
sarb
pop
pop
pop
adc
xor
cmp
inc
and
les
sub
stos
pop
xchg
xchg
jnp
cwtl
mov
pop
movsb
dec
xchg
jle
inc
les
rol
xor
adc
sbb
jmp
mov
push
enter
pusha
movsb
sub
test
mov
rol
fmull
cwtl
pushf
sub
inc
aad
mov
cltd
div
fs
scas
mov
addr16
pop
cltd
jb
and
daa
push
popa
xchg
mov
cmc
adc
lret
push
roll
add
ret
pop
ret
cmp
add
mov
out
movsl
setb
dec
adc
lahf
icebp
fisttpll
xor
repnz
sub
jle
ljmp
jnp
jmp
in
ret
add
flds
xchg
inc
lods
ja
dec
cmp
nop
stos
pop
sbb
mov
loopne
jmp
nop
or
or
mov
or
add
into
outsl
icebp
lret
sbb
add
cmp
jl
idiv
cmp
xor
xchg
adc
aaa
adc
jg
cld
outsb
jo
or
fadds
jmp
xchg
push
mov
or
sti
das
in
cmc
in
add
jmp
ficomps
inc
iret
and
addr16
orl
and
mov
clc
lods
repnz
push
add
xchg
xchg
xor
and
test
daa
ret
xchg
cmpsb
ss
aas
shll
sbb
int
or
xchg
loopne
push
or
pusha
aam
xchg
mov
fisttpll
xchg
iret
sub
xor
or
pop
cmp
and
cmpsl
xchg
into
shl
jle
aaa
pop
jge
add
sub
push
adc
sub
jnp
in
pop
sahf
outsl
test
or
pop
leave
adcb
and
enter
push
xor
gs
insl
lods
daa
ss
test
fisubl
mov
mov
xchg
insl
xchg
inc
xchg
lcall
rcl
push
popl
test
or
pushf
cmpsb
in
insl
repnz
out
cltd
outsl
mov
stos
pop
lret
sarl
sub
ds
ljmp
fsubr
cmpsb
sti
or
mov
cpuid
ja
cli
sbb
push
and
in
pop
insb
mov
push
mov
inc
jecxz
andl
adcb
pop
xor
loop
lods
mov
mov
adc
fldt
and
xchg
dec
arpl
fs
dec
mov
loop
mov
ss
gs
aaa
sub
add
xor
push
push
push
clc
cmpsl
inc
stos
imul
push
orl
mov
lods
dec
jge
stos
inc
ret
pop
cwtl
adc
scas
xchg
scas
xor
fimuls
fiaddl
test
lea
or
fstpt
fwait
lcall
xor
jnp
pusha
int3
sub
sbb
mov
std
pusha
nop
lods
or
pop
cmp
jp
push
adc
cmpsb
push
or
pushf
jae
lock
mov
imul
xor
aam
jo
cli
inc
xor
push
frstor
or
lcall
fidivs
test
pop
push
cmp
lret
push
mov
pusha
aaa
sub
dec
sub
out
rolb
fadds
adc
lods
test
cmp
sub
jnp
cs
pop
hlt
pusha
gs
mov
cmp
stos
shlb
sub
cmp
fcmovu
mov
pop
xor
outsb
jl
faddl
incb
lret
out
jl
jno
repz
xchg
aad
push
ljmp
lahf
add
jnp
adcb
jns
sbb
ss
push
add
sub
cmp
sbb
in
mov
call
and
jl
pushl
push
jmp
sbb
sbb
adc
rclb
lahf
nop
add
mov
and
pop
test
in
or
sbb
cs
pop
ret
insb
stos
xchg
or
inc
in
negb
out
fstpt
push
aad
pop
aad
pop
or
mov
adc
inc
dec
mov
jle
icebp
iret
outsb
addl
or
cmpsb
add
scas
xchg
iret
mov
inc
jmp
xor
sti
andl
mov
mov
cmp
sub
push
nop
adc
cmpsb
and
in
inc
xchg
pusha
dec
popf
push
add
mov
jnp
inc
jns
leave
clc
cwtl
mov
xchg
enter
jmp
sub
out
rorb
shlb
cmpsb
adc
repnz
push
push
push
push
jo
push
cmp
outsl
jge
pmullw
jmp
xor
mov
cmpsb
shll
lret
or
in
adc
stos
sbbl
push
add
inc
sarb
in
int3
pop
push
mov
add
arpl
xchg
clc
sub
and
or
sarb
es
pop
out
push
lret
daa
popa
sub
jl
cltd
push
fdivr
jecxz
mov
push
jo
in
cld
mov
repnz
loop
jae
add
lods
es
rorl
add
sbb
fwait
xchg
mov
loop
mov
movsl
mov
and
fcom
jb
ret
pop
xchg
sti
aam
ja
es
inc
mov
lret
out
fisttps
cmp
add
jnp
and
es
dec
and
mov
mov
sbb
scas
neg
ja
mov
dec
sub
lds
in
xor
pusha
cmpsl
cmp
mov
xor
sbb
fdivrp
jl
sub
outsl
push
jge
pusha
inc
jecxz
push
test
aad
iret
js
sub
pop
shll
ja
pop
out
imul
movsb
stos
in
sbb
inc
cld
inc
mov
pop
sahf
cmp
mov
and
shlb
push
cmp
jno
out
fsubrl
pop
ds
xchg
jb
imul
push
nop
xchg
mov
xor
mov
or
daa
mov
sub
mov
xchg
sub
sbb
dec
fadd
add
popa
mov
and
lock
outsb
outsl
xchg
xchg
pushw
lods
cmp
adc
popf
sti
add
dec
popa
sub
in
jo
mov
popf
push
insb
daa
or
xchg
jge
cmpsb
jb
pop
js
or
adcb
xlat
nop
fsqrt
cld
cmpsb
stos
push
test
jge
out
iret
aaa
cltd
dec
es
inc
mov
notb
cmc
push
dec
pop
or
out
movsb
cmp
insb
mov
test
dec
and
jb
dec
scas
loope
jg
subb
mov
shl
pop
aas
fs
xchg
lods
push
xchg
add
dec
mov
adc
add
push
js
pop
or
mov
fistps
ljmp
cs
xchg
mov
jp
adc
sti
cmc
xchg
fsub
pop
push
cwtl
xchg
xchg
xchg
xchg
cmp
mov
pop
scas
clc
cs
xorl
pop
adc
nop
movsl
jae
iret
push
jl
ficoml
out
call
push
push
std
sub
test
inc
xor
jle
pop
cli
cmp
cmpl
xor
sub
int
mov
ljmp
ja
pop
or
xchg
add
jge
fidivs
cmp
js
in
es
pusha
dec
cld
loope
outsb
cli
xchg
mov
and
mov
stos
fs
push
inc
pop
mov
xchg
roll
push
ret
and
out
pusha
mov
int3
outsb
nop
outsl
add
jg
testl
adc
mov
sbb
cmp
inc
cltd
or
push
cli
std
int3
lcall
int
repnz
add
push
jge
cmp
scas
pop
jecxz
fisubs
cmc
cmpsl
movsb
sahf
pusha
insb
and
sbb
ljmp
xchg
push
call
mov
in
lock
dec
pop
add
jae
imul
jl
pop
outsb
adc
out
dec
sub
mov
js,pn
fnstenv
scas
outsb
dec
xor
lds
cli
cmp
mov
aam
lds
subl
ja
in
ret
or
jo
xor
aaa
movsb
fsubs
call
mov
push
in
jo
jle
mov
imulb
sub
sub
add
outsl
dec
mov
mov
ja
loop
adc
cmp
je
adc
out
mov
aad
jg
jns
dec
inc
out
or
cli
jb
push
push
jo
cmc
pop
out
cli
sub
dec
data16
imul
cmp
mov
das
or
xor
push
pusha
xchg
addr16
test
ljmp
xchg
imulb
fsubrl
and
cwtl
lea
mov
mov
jb
mov
push
fbstp
movsl
mov
in
lods
xchg
add
aam
fwait
repz
or
int
in
rcrl
aad
arpl
popa
add
sub
mov
mov
sbb
push
stos
jns
outsb
ret
popf
lahf
aaa
pop
push
push
pop
ss
add
sahf
call
push
fistl
sub
jge
in
test
dec
xor
cltd
xchg
andb
adc
sbb
push
les
stc
sub
ljmp
shll
sub
repz
shlb
gs
xorb
or
aaa
insb
fdivrp
sub
pop
arpl
pushf
sbb
mov
jg
mov
adc
fwait
pop
mov
mov
push
scas
enter
cli
fnstsw
lret
push
inc
cld
and
outsb
inc
sti
or
jg
lret
pop
mov
or
scas
int3
sub
mov
into
fs
mov
push
fidivrl
outsb
loop
jo
in
test
xchg
add
stc
xor
lock
cld
int
shlb
int
mov
int
push
cmp
insl
jns
push
leave
in
sub
add
insw
xor
add
stos
pop
add
xchg
push
dec
xor
mov
aas
or
push
pusha
push
es
cmp
js
popl
mov
cmpsb
call
mov
mov
jns
dec
fiadds
rorl
mov
and
imul
jecxz,pn
add
enter
mov
inc
mov
and
add
jmp
cmp
push
es
xor
test
rcrb
push
mov
mov
mov
xor
inc
aam
xchg
xchg
pop
mov
leave
test
stos
jp
mov
cld
xchg
or
jno
xchg
mov
je
lock
sahf
and
fstpl
xchg
movsl
or
jp
fsubrs
jecxz
lcall
or
adc
and
pushl
loope
mov
push
cli
xor
jle
xchg
shll
shrl
push
out
arpl
xchg
or
or
movsb
dec
nop
rcr
push
ja
xchg
stos
iret
inc
jp
int3
ret
and
fildll
pop
or
jns
mov
addl
sub
test
inc
dec
jp
fcmove
imul
jns
xor
push
add
pop
cli
pop
fistpl
movsl
sbb
push
mov
xor
rorl
xor
pop
jne
sbb
sub
mov
rol
inc
cltd
in
mov
jno
test
pop
aam
jns
ficompl
imul
adc
pop
mov
mov
rcrb
jne
out
push
repz
pop
jnp
dec
sarb
scas
push
shl
fstpl
ja
ret
enter
adc
mov
test
mov
push
loopne
movsl
orl
loope
ljmp
add
scas
ja
daa
std
dec
add
push
push
jge
daa
enter
sahf
aam
adc
icebp
loopne
or
daa
and
loope
js
and
insl
out
pop
xchg
lock
or
pop
jb
xchg
sub
mov
mov
xchg
cmp
pop
stos
lret
andl
aaa
jge
out
adc
inc
jecxz
int
add
stos
pop
lea
dec
imul
inc
mov
jecxz
sbbl
aaa
cmp
das
jbe
xor
cmpsl
jno
xchg
cmp
sti
adc
xchg
lret
xchg
mov
jp
test
jne
and
out
mov
jp
mov
push
not
push
shl
cmp
or
xor
bound
push
jo
pop
call
add
rcr
jl
adc
lcall
int3
inc
jl
mov
xchg
sub
inc
mov
rolb
inc
mov
push
inc
imulb
lcall
iret
dec
andb
sbb
xchg
jecxz
or
ja
popf
add
or
inc
roll
push
jae
int
cmpsb
mov
shrb
cmc
pop
flds
xchg
rorl
fs
push
aas
call
mov
test
aas
mov
movsb
cmc
mov
icebp
xchg
push
add
adc
dec
xchg
or
adc
mov
mov
enter
aaa
cmpsl
xchg
ss
mov
sub
ret
and
push
fsubrp
and
mov
jl
adc
cli
cs
fnstcw
mov
xorb
push
dec
xlat
mov
mov
dec
je
pop
cld
cmp
lea
fwait
scas
ret
and
inc
push
dec
lock
pop
repz
cmpsb
xchg
ja
pop
fs
sub
xchg
pop
push
xorl
roll
inc
xchg
sbb
mov
jmp
leave
outsl
fwait
pop
push
sub
into
lds
push
inc
mov
add
mov
jmp
lret
shll
lods
scas
lods
dec
bsf
into
or
or
mov
add
fwait
mov
mov
stos
insl
fbld
insb
inc
xchg
sub
xchg
daa
xor
pop
popf
andl
shlb
fnstenv
add
mov
add
ljmp
jge
std
cmpb
push
repz
pop
stos
les
in
add
fistps
inc
jnp
push
pusha
dec
mov
rclb
push
push
dec
mov
cmpsb
and
loop
xlat
cs
pop
jg,pt
push
sti
pop
repnz
or
out
mov
mov
jo
xlat
lcall
cwtl
jb
push
add
add
mov
jmp
dec
mov
add
idivl
clc
pop
loope
std
repz
iret
pop
dec
cli
pushf
add
rcr
mov
out
adc
aad
lock
and
ljmp
xor
dec
in
lods
cmp
xor
or
mov
subb
les
jp
loopne
dec
push
or
mov
adc
outsb
scas
mov
or
push
adc
push
mov
cmp
cmp
je
in
jb
mov
add
cmp
movsb
mov
sub
lret
xchg
out
popf
push
lock
or
or
shll
mov
clc
inc
add
dec
mov
dec
lds
push
pushf
js
fstl
sub
cmpsl
mov
maxps
dec
mov
testl
xchg
add
mov
push
xor
pop
adc
pop
fisttpll
je
int
inc
bnd
out
outsl
sub
lcall
mov
test
cld
int3
gs
or
jle
or
pop
inc
les
test
and
faddl
into
or
pop
xorl
mov
or
imul
inc
test
rclb
jecxz
and
push
rcl
xor
jnp
jb
jnp
mov
jo
xchg
adc
cmp
movsb
in
and
lock
jb
shrb
or
jp
imul
or
sub
popa
cmp
outsb
add
idivl
lea
push
mov
and
mov
inc
push
ret
aas
sub
int
inc
shlb
push
enter
jb
and
test
push
cwtl
mov
cwtl
sarl
cmp
xchg
and
in
fcompl
jg
fistl
fs
insb
sbb
push
pop
inc
clc
imul
sub
mov
cmpsb
adc
sbb
jp
adc
push
xchg
jns
and
and
add
add
leave
fs
sti
fdivrl
and
fdivrl
clc
es
stc
sub
cmp
cld
out
data16
push
lret
xchg
lods
addr16
mov
adc
pop
adc
push
ret
xchg
sbb
mov
dec
xchg
stos
inc
jo
mov
rolb
loope
rdtsc
mov
std
push
frstor
adc
or
dec
add
xor
addr16
repz
into
or
jae
mov
mov
mov
add
push
or
in
xor
or
add
cmp
loope
je
std
adc
out
cmpsb
ret
test
in
sub
dec
dec
and
scas
push
xor
loop
inc
daa
pop
push
int
stos
pusha
pop
xor
mov
xchg
ljmp
fstpl
adc
add
std
mov
cmp
pop
cltd
inc
adc
sbb
stos
push
push
lds
scas
xor
insb
clc
ds
add
cmpb
clc
sti
inc
enter
scas
sub
mov
jb
or
push
je
es
addr16
and
in
add
and
mov
arpl
xor
pushf
xchg
aad
push
or
jp
cmp
aas
movsb
push
mov
lahf
cmp
xor
sub
loop
push
dec
or
jo
loop
js
sub
dec
data16
sub
movsl
push
fcoms
lods
sbb
fnstenv
lea
loope
lcall
push
jne
adc
jne
push
lret
xor
mov
or
test
inc
jge
aam
push
inc
push
insb
and
sbb
or
cld
aad
test
das
pop
add
lahf
inc
mov
fnstsw
sub
dec
sbb
jp
inc
dec
outsb
sbb
andb
scas
lods
sub
or
and
cld
mov
jbe
jmp
dec
pop
cmp
sbb
pop
jb
mov
dec
mov
imul
pushf
bound
pop
add
push
fidivrl
xchg
cltd
xor
mov
inc
fsubr
cld
std
aas
cli
push
adc
in
sub
or
movsl
ficoms
out
jno
push
mov
pop
ljmp
fisttpl
and
ja
mov
lods
sub
mov
in
outsl
idiv
add
xor
dec
test
je
fiaddl
inc
xor
sub
inc
testb
jnp
pop
xchg
push
lea
loop
and
sbb
mov
jae
aad
jge
inc
aaa
push
mov
fistpl
push
paddsw
dec
fsubr
xor
push
xchg
dec
jb
in
clc
jae
pop
bound
push
and
idivb
shll
sub
leave
insb
out
adc
inc
fstpl
loopne
insl
bound
dec
jle
mov
xor
mov
dec
pop
mov
jo
int
xor
mov
jnp
out
rorb
rcrb
insb
cmpl
push
cmp
adc
jb
mov
jo
and
insl
xor
push
test
jnp
xor
inc
pushf
jno
outsb
je
les
lcall
imul
sbb
dec
imul
icebp
pop
push
adc
mov
imul
jp
mov
or
movsl
frstor
je
xor
mov
jno
lret
movb
cmpsb
stos
rclb
dec
adc
pop
dec
movsb
test
sahf
mov
movsb
fs
out
imul
cmpsb
mov
clc
mov
cmpsb
push
into
xchg
cmp
mov
jl
pop
dec
filds
aad
je
bswap
test
mov
push
pop
aam
jns
cmp
ss
xchg
ret
stos
adc
push
sbb
subb
pop
fcmove
lahf
aad
push
cmp
data16
push
xor
pop
out
ret
or
xchg
dec
cmp
mov
adc
xchg
dec
push
jne
xchg
dec
jns
mov
ret
ret
data16
shl
ffreep
pop
fs
and
in
jg
mov
ss
insb
jmp
gs
add
xorl
pop
insl
pop
mov
mov
js
push
hlt
xor
shrl
ja
cmpsl
mov
rorl
xchg
stos
mov
je
push
jle
pushf
inc
mov
or
cmpsb
aam
push
dec
jbe
add
push
arpl
or
out
push
mov
shll
mov
or
loope
sub
sub
movsb
int3
imul
loop
cld
push
es
movsl
or
loopne
jns
shr
out
icebp
in
je
push
cmp
jmp
out
int
mov
mov
popa
dec
flds
cli
lods
mov
sarb
adc
mov
xor
sarl
mov
xchg
inc
sar
pop
inc
in
mov
xchg
and
outsl
popa
push
inc
cmpsb
sar
aam
and
fwait
sahf
mov
mov
xor
or
push
roll
xchg
mov
gs
add
or
push
mov
test
add
lds
cmc
cmp
leave
fcmovnu
aaa
push
fiadds
push
pop
lds
push
push
enter
test
outsl
push
push
mov
mov
xchg
iret
movb
nop
xchg
xchg
icebp
pop
in
push
mov
mov
stos
cmc
ljmp
or
jle
lret
dec
push
sbb
sub
lds
dec
mov
mov
dec
sub
nop
mov
sbb
xlat
adc
cmp
and
fldl
mov
mov
xchg
popa
lea
adc
push
mov
jmp
jl
mov
push
or
shlb
in
mov
mov
call
mov
mov
inc
pop
cld
cwtl
rcrb
jae
gs
or
das
mov
les
pop
and
out
ss
roll
jp
lcall
xlat
jg
cltd
adc
insl
lcall
outsl
out
cli
jl
test
xor
jb
push
repz
pop
ja
adc
cmp
repz
cmp
sbb
ret
mov
ret
mov
in
loope
sbb
cmp
or
and
and
jns
loop
outsb
xorb
fildl
pop
testl
testb
outsl
cld
lds
inc
and
into
mov
lods
and
repnz
push
xchg
jbe
jle
xchg
outsb
jg
sub
jmp
popa
cmp
cmpb
add
lods
cmpsb
in
jnp
int
xchg
cmc
cld
pop
inc
sbb
popa
mov
int
xchg
fstl
sub
pusha
fiaddl
rcrl
push
pop
inc
lret
gs
cmpb
movsl
cmp
mov
jl
pop
ret
shlb
dec
push
mov
mov
pop
scas
or
mov
xor
push
push
lahf
lods
test
push
or
xchg
xor
ss
imul
in
dec
std
push
lahf
pop
call
aaa
mov
push
sti
mov
lock
sub
aad
mov
mov
pop
roll
movsb
sub
cld
push
sbb
fwait
inc
movsb
xchg
inc
in
pop
in
mov
hlt
das
mov
sbb
cwtl
add
lcall
pop
add
jecxz
js
mov
loopne
sbb
sub
push
ljmp
stos
or
lea
and
mov
scas
mov
dec
ret
movsb
xor
out
std
into
js
loope
imul
pop
addr16
lea
mov
in
and
or
xchg
and
insb
cs
add
popf
jnp
test
and
cmpb
jbe
inc
popa
lods
xchg
and
adc
sbb
loope
xorb
jo
out
mov
dec
pushf
sbb
popf
aaa
jg
or
aaa
add
xlat
cmp
pop
clc
adc
jecxz
stos
outsl
jno
roll
aad
adc
mov
xchg
jg
jnp
sbb
mov
inc
adc
or
jecxz
sbb
out
sub
jb
loopne
les
xor
adc
aad
packsswb
mov
inc
out
je
adc
cmp
ret
in
push
lods
inc
jecxz
jns
push
icebp
pop
mov
push
or
fucomip
xor
outsl
aaa
and
ja
dec
inc
mov
imul
pop
mov
popa
push
in
and
mov
sti
lahf
repz
arpl
inc
out
lods
push
adc
cmp
adc
add
cmp
lahf
xchg
in
inc
out
aas
push
xor
adc
dec
adc
jae
nop
or
outsb
mov
in
das
cmc
gs
fisubrs
mov
pop
mov
xchg
in
roll
mov
fnstsw
cmp
or
mov
inc
ljmp
shlb
loop
mov
cltd
add
lret
mov
sti
jmp
lods
push
and
or
push
or
and
outsl
pop
repz
out
insl
or
mov
pop
add
mov
sbb
jmp
subl
mov
xor
fisubs
pop
int
sbb
sbb
call
mov
mov
call
cltd
aaa
shlb
pop
mov
jl
inc
inc
cwtl
outsl
rclb
dec
cmc
in
jb
insb
rcr
and
out
mov
arpl
rcr
xor
rcrl
movsl
pop
sbb
xor
mov
add
inc
and
insl
pop
jno
jb
sahf
es
out
leave
sub
mov
or
sbb
push
cmpsl
mov
xchg
cli
popa
and
cmp
push
fwait
add
dec
sahf
insl
adc
pop
fsub
loop
xchg
lcall
dec
lea
adc
imul
inc
addb
push
dec
xor
mov
stos
pop
cmpsb
test
xchg
mov
mov
jns
push
fisttpl
outsb
and
and
or
cwtl
shlb
xchg
mov
fdivrp
cmp
xor
bound
cmp
cld
sbbb
int
or
add
xchg
xor
addr16
bound
js
data16
sub
sbb
addr16
xchg
add
push
jb
mov
into
in
arpl
push
sub
add
ja
loope
imul
push
or
or
mov
jl
fistpl
push
cmp
je
sahf
cmpb
inc
mov
push
xchg
clc
push
pop
cwtl
aad
outsl
lds
dec
sbb
test
imul
out
sbb
jae
mov
pop
xor
fsubrl
mov
pop
lret
inc
test
imul
loopne
adcl
pop
test
mov
popf
fldcw
mov
jns
pop
loopne
jno
scas
das
loop
mov
sub
xor
xor
cwtl
inc
sbb
xchg
lcall
orb
jmp
mov
lret
fs
pop
jbe
les
stos
jbe
or
lret
jp
pop
nop
adc
or
sub
mov
dec
inc
sahf
and
shlb
test
lahf
xchg
sahf
push
mov
cmc
outsl
lock
orb
adc
pop
testl
in
inc
and
add
or
pusha
or
into
ds
dec
jnp
leave
cli
cmpsl
les
loop
sbb
xor
or
and
dec
fcmovnb
jo
sub
jmp
pop
mov
push
dec
xorb
imul
in
popa
xor
aad
jmp
dec
inc
out
insl
out
jmp
insl
xchg
add
sub
jge
mov
iret
movsl
mov
pop
leave
mov
int
mov
cmc
mov
idivl
pop
sar
sbb
insl
lods
in
pop
mov
or
xchg
xchg
clc
xchg
xor
jg
and
subl
pop
xchg
loop
inc
push
xchg
enter
inc
lea
aad
iret
push
xchg
in
shll
sub
rcrl
xchg
out
inc
lahf
xchg
mov
addr16
mull
mov
xor
adc
fwait
rcll
clc
insb
xorb
ss
aam
lds
int3
push
and
xor
cmp
xor
out
sub
jnp
mov
sbb
mov
push
cltd
push
add
lcall
out
or
sbb
mov
cli
stos
rcll
fsubp
fstpt
dec
stc
enter
jnp
mov
es
jns
push
and
pusha
cmp
jae
xor
xlat
dec
cmp
mov
add
std
dec
pusha
xorl
fstpl
mov
mov
lods
jno
aas
in
sub
jle
pop
int3
jb
stc
inc
xchg
jb
adc
mov
mov
dec
xchg
shrl
sbb
xchg
mov
push
jnp
out
jmp
insl
or
push
sbb
and
cli
test
movsb
daa
aam
jle
orb
cmp
cs
cmp
push
sar
add
dec
cltd
test
dec
imul
je
dec
sub
out
aad
jae
jbe
lods
stos
lret
mov
adcb
adc
push
push
fincstp
cld
add
jo
inc
jmp
enter
xlat
mov
dec
sub
rclb
sbb
and
pop
jl
jns
or
idivb
inc
imul
jb
push
lret
xor
fwait
sbb
jmp
and
testl
xchg
xor
lcall
pop
adc
cmp
jbe
add
lret
inc
mov
mov
fld
push
out
mov
mov
cmpl
sbb
sub
iret
repnz
fsubl
adc
add
cmp
aas
mov
sbb
lahf
mov
int3
jne
sub
test
add
and
shll
movsl
loop
notl
int3
mov
xor
stos
lcall
insl
xor
sub
jmp
pop
xor
mov
dec
icebp
xchg
popa
cwtl
inc
arpl
lret
int3
xchg
jae
cmpl
loope
lock
jnp
outsl
dec
xor
mov
jbe
dec
inc
in
cmpl
push
cwtl
fldt
test
and
clc
pop
cltd
les
test
push
ficoml
jae
stos
mov
call
daa
dec
call
lods
mov
xor
mov
out
pushf
pop
or
push
cmc
sahf
out
push
mov
xor
fistpl
jle
mov
and
cli
rol
inc
dec
pop
daa
xor
lret
in
pop
cmp
aad
movsb
or
cwtl
pop
arpl
aaa
xchg
mov
push
push
mov
xchg
or
test
pop
bound
int3
or
divl
xor
mov
jg
test
sbb
or
and
push
jo
xchg
ds
into
or
inc
out
ret
jle
sar
cmp
adc
and
mov
repz
out
xor
mov
xor
hlt
movsb
fcmovu
dec
mov
rcll
push
pop
add
jne
sub
pusha
mov
jns
inc
fwait
ret
vhaddps
jb
leave
ljmp
stos
add
rorl
popf
adc
imul
popa
mov
xchg
cmp
int
data16
inc
cmc
mov
push
das
pop
jle
cltd
test
pop
inc
scas
xchg
pushf
and
rcll
mov
mov
adc
dec
popa
mov
xor
mov
mov
add
pminub
mov
mov
jno
mov
leave
xor
popf
dec
jae
push
shrl
sbb
adc
js
loope
cmp
jp
adc
and
ja
push
push
outsb
repnz
cmpsb
push
psubb
enter
movsl
outsb
dec
add
xabort
call
ffree
jbe
mulb
add
mov
es
fcompl
xor
pop
xchg
in
mov
orl
adc
mov
push
fidivrs
into
cmp
fucom
test
mov
sbb
nop
jne
js
arpl
adc
mov
and
and
sbb
pop
sbb
movsb
cmp
aaa
fwait
aaa
xor
or
xchg
sbb
pop
mov
mov
addr16
jmp
jmp
lods
jne
test
push
inc
xlat
outsl
pop
test
repz
ds
test
cmc
add
mov
cmp
mov
push
fdivrl
sbb
gs
movsl
nop
nop
pop
movsb
xchg
sahf
adc
mov
movsl
stos
mov
xor
hlt
sbb
mov
xor
shll
je
add
decb
mov
jbe
shll
loope
mov
addr16
std
push
fwait
lret
push
test
mov
mov
stos
and
xchg
sub
mov
std
mov
push
add
jecxz
or
andl
xchg
pop
es
sub
xchg
pop
or
mov
mov
xor
pop
mov
test
sbb
stos
jp
push
data16
dec
xor
mov
cmp
jo
jmp
mov
add
imul
lock
out
or
jbe
in
push
bound
lods
mov
fidivrl
inc
mov
push
mov
or
mov
sbb
sbb
stos
fs
mov
js
add
push
ret
ret
ja
jp
jo
pop
and
fisubrs
cmp
orl
adc
iret
jmp
pop
xor
push
jno
sub
jmp
std
jge
ret
and
pop
fnstenv
inc
push
lods
repnz
icebp
mov
jae
push
xchg
adc
into
hlt
mov
mov
or
adc
leave
repz
xor
and
fsincos
add
cli
jp
push
out
inc
imull
hlt
pushf
shll
shlb
fs
cltd
nop
test
mov
xor
sub
mov
mov
xchg
stos
add
mov
mov
lret
mov
cli
push
mov
int3
cli
and
dec
xor
adc
pop
push
out
inc
jb
loope
jg
push
jb
jmp
pop
dec
adc
adc
lret
rcll
mov
add
stos
fcompl
notl
cmp
adc
or
adc
push
test
pop
adc
sahf
add
aaa
outsl
jnp
push
outsb
mov
sbb
cmc
pushf
ljmp
pusha
stc
dec
cmp
mov
push
xor
out
repz
fistpl
xchg
inc
scas
dec
sarl
mov
mov
and
ds
repz
aaa
je
sub
sub
push
iret
mov
out
push
mov
sti
testl
fwait
push
or
sub
jne
in
shr
and
inc
or
push
push
fimull
adc
sub
pop
pop
jmp
adc
stos
dec
loop
fucomp
movl
cli
bsr
sahf
or
push
in
xchg
push
sbb
xchg
and
movsl
pop
push
sbb
sahf
xlat
mov
push
inc
fstpl
jg
test
das
pusha
lcall
js
push
add
repz
or
sub
lea
or
pop
cltd
cmp
sbb
sbb
mov
mov
call
inc
push
iret
pop
lahf
xchg
jp
cltd
pop
cmp
lcall
mov
test
inc
cmp
fnstenv
stos
mov
lret
jae
inc
loop
mov
ja
cmc
fidivrs
ret
pop
and
inc
sbb
mov
hlt
stos
mov
js
and
mov
leave
jle
and
jmp
adc
pop
push
adc
xchg
cmc
test
jmp
movsb
ljmp
mov
mov
lcall
mov
movsb
jg
cli
sub
inc
xchg
sbb
pop
shrb
adc
xchg
out
dec
cmp
daa
dec
jl
inc
and
scas
jg
xchg
or
inc
es
ljmp
fnstcw
popa
mov
sarb
ficoms
scas
pop
in
out
icebp
pop
sbb
cmp
dec
subb
mov
mov
sbb
push
pusha
pop
cltd
inc
ss
rcr
andb
xchg
fsub
popf
sahf
adc
lods
pop
cmp
lahf
adc
bound
pop
lret
mov
int3
jnp
sar
or
lahf
sbbb
ljmp
out
fbld
mov
jno
je
adc
xor
shl
and
mov
add
or
in
ljmp
xchg
or
xchg
cwtl
mov
rorb
jl
les
int
cmc
scas
cwtl
pop
mov
lahf
xchg
std
dec
cmc
dec
push
negb
push
mov
inc
fstl
or
xor
sub
or
test
fwait
testl
mov
pusha
ficoml
mov
pop
sub
jae
out
pop
loop
sbb
leave
call
shlb
xor
push
or
je
decb
mov
in
cld
sub
mov
test
ss
je
loope
jle
mov
adc
btc
flds
mov
inc
or
in
sub
out
mov
adc
jp
aaa
out
push
sbb
imul
sbb
lock
scas
enter
aaa
daa
push
cmp
loope
sahf
mov
sbb
xor
dec
fldt
inc
push
and
cld
aad
out
lock
rcll
loope
movsb
lret
subl
mov
mov
cmpsl
mov
loope
mov
divl
and
decb
jecxz
leave
scas
daa
sbb
xlat
lds
dec
or
iret
pop
int3
add
cld
adc
jne
into
cmc
adc
clc
push
mov
xchg
jp
aas
xor
lret
or
fnstcw
test
jb
mov
mov
jge
jle
pop
jns
xor
pop
ss
cmp
add
push
and
dec
mov
lds
mov
lret
in
xchg
cld
cmc
test
fisubl
mov
fnsave
pop
jns
lret
movsl
cmp
cld
data16
loope
jns
imul
shrl
jno
xchg
repnz
lret
inc
and
inc
in
xchg
fs
imul
aaa
imul
xchg
imul
leave
mov
inc
scas
mov
and
jle
push
xor
xchg
add
fisubrs
aaa
dec
jge
push
sub
mov
jnp
in
mov
sbb
out
push
cmp
sbb
lea
lock
adc
push
out
movsb
out
fdivr
inc
sbb
inc
ss
icebp
mov
pop
clc
sbb
jp
in
jb
add
pop
rcll
xor
enter
inc
imul
inc
outsl
imul
imul
test
or
imull
addr16
sar
jge
lret
xlat
insb
lret
sbb
popa
aas
push
sub
pop
sbb
aad
push
sbb
inc
addr16
test
into
and
lods
xor
adc
scas
adcl
jbe
subl
pop
insl
xor
cwtl
xchg
inc
add
xlat
lods
loopne
adc
cld
mov
adc
mov
xor
sub
cltd
aas
stos
cli
jecxz
or
in
imul
jp
push
pop
loop
sarl
cmovns
mov
and
cmpsl
shlb
arpl
xchg
pop
pop
inc
rcll
outsl
or
repz
or
sub
out
in
mov
xor
icebp
and
rclb
and
jl
xchg
push
fnstcw
ljmp
sub
test
dec
cmp
cltd
dec
hlt
scas
push
aas
mov
test
rclb
into
std
insl
jmp
inc
cmp
lds
daa
dec
cmpsl
mov
add
imul
mov
mov
push
xor
xchg
dec
mov
sbb
mov
jmp
push
dec
mov
imul
inc
enter
lea
pop
ljmp
stc
repnz
iret
push
outsb
push
jg
addr16
pop
inc
repz
in
iret
mov
std
lea
mov
rcll
pop
xchg
push
cmp
dec
popa
arpl
xchg
cwtl
inc
inc
filds
push
sbb
pop
or
insb
test
stos
sub
es
mov
and
lahf
aaa
add
sbb
xor
mov
mov
rcr
gs
imul
imul
ljmp
cmp
js
dec
mov
xor
pop
cmp
mov
mov
movsb
xor
jp
test
dec
popa
mov
inc
lahf
jmp
add
push
lods
xlat
or
adc
inc
pop
cmp
test
mov
jmp
sub
ret
sbb
jl
test
shll
insl
push
cmp
inc
jno
cmp
jle
push
lret
xchg
cmc
in
add
jp
fs
in
sub
outsl
rcl
data16
sbb
sub
mov
inc
push
adc
sbbl
jle
rorl
icebp
mov
icebp
sub
cs
xchg
pop
adc
fnsave
add
jle
and
dec
xchg
cmp
inc
addr16
inc
daa
stc
cli
clc
inc
mov
xchg
mov
iret
in
cltd
in
cmc
adc
sbb
inc
into
sbbl
mov
ret
dec
mov
lahf
jle
int3
mov
test
mov
push
and
jg
cli
in
data16
xor
scas
bound
lcall
sarb
xorb
out
cltd
adc
pop
cmp
inc
cmpsb
ds
cwtl
aad
int3
xorl
sahf
adc
jmp
out
jns
pop
push
insb
ret
notb
xchg
jle
push
sti
pop
pop
inc
jb
cli
inc
popf
sbb
mov
movsl
sub
add
inc
mov
mov
add
sub
test
fiadds
inc
addr16
fs
imul
repz
push
jecxz
xchg
sub
push
sub
fidivrl
xlat
dec
xor
jl
add
pusha
repnz
shl
lock
shlb
lods
test
gs
out
push
or
inc
mov
or
ret
inc
mov
sahf
inc
inc
imul
imul
and
mov
adcb
fs
int3
out
loope
loopne
outsb
rcrb
mov
adc
icebp
daa
dec
test
push
pusha
or
in
jb
xchg
arpl
jno
std
xchg
push
out
cmp
out
sti
stos
pop
lods
mov
pop
pand
fs
mov
sahf
add
push
and
pusha
and
cmp
loop
and
shlb
or
inc
arpl
cwtl
movb
lea
pop
out
or
mov
sbb
adcl
mov
stos
push
nop
xchg
or
cmp
pop
adc
and
push
or
leave
jno
jge
ds
jo
repnz
popa
mov
test
in
inc
icebp
pop
pop
out
mov
mull
fdivl
rcll
out
add
sub
cmpsb
adcb
pop
adc
cmpsl
in
das
ja
stos
mov
ja
lods
mov
pop
sbb
and
pop
or
and
inc
test
mov
sahf
movsl
xchg
adc
out
jp
imul
xor
shll
inc
dec
bound
push
or
push
jmp
pop
jnp
negb
fistps
sub
sbb
pushf
mov
sbb
xlat
adc
push
sbb
and
xchg
loope
scas
in
pop
push
jno
pop
inc
adc
je
fs
pop
and
lods
test
shll
jbe
imul
or
test
sbbb
cwtl
mov
into
jle
add
mov
cmpsb
test
and
ljmp
dec
push
jmp
jns
stos
mov
inc
dec
adc
int3
lcall
mov
cmp
inc
imul
out
mov
fcmovnb
or
mov
loop
adc
outsl
jne
mov
adc
sub
pop
dec
mov
stos
inc
push
cmp
push
out
mov
subb
sub
jl
jns,pt
push
dec
data16
jg
jno
inc
pop
sti
je
push
imul
push
pop
add
sbb
mov
mov
jne
das
cmp
mov
xor
adc
pop
mov
inc
ret
lock
outsl
mov
pop
jnp
pusha
out
je
subl
and
xchg
cmp
mov
je
xchg
insb
lock
mov
cmpsl
pop
push
loopne
xchg
roll
ljmp
sub
xchg
imul
loopne
push
rcll
pop
xlat
rcll
sub
stc
inc
cmp
int3
lret
mov
mov
mov
xchg
push
xchg
cmp
sub
jns
add
sub
in
and
ja
ret
cmpb
add
repz
push
or
xlat
push
xchg
data16
dec
xor
push
inc
repz
lcall
jecxz
jg
inc
mov
xor
inc
sti
push
roll
out
call
fstpl
movsl
hlt
in
push
fsubrs
jbe
inc
mov
and
dec
in
adc
pushf
sbb
or
pop
cmc
aas
cmpsb
shrb
popa
xchg
int
mov
jp
aaa
adc
inc
shrl
stos
xor
test
push
out
loope
ror
fiaddl
adc
pop
dec
ret
mov
lds
add
js
pop
fidivrs
cmp
cmp
mov
jo
add
xor
jnp,pn
out
lea
out
sub
shrb
mov
les
jno
fisttps
leave
loop
stos
int
stos
cmp
loop
adc
pop
mov
jne
loopne
sub
ret
adc
mov
or
cmpsl
cwtl
stos
lea
inc
jl
push
jo
sbb
ds
mov
cli
sub
lahf
adc
lock
or
pop
and
pop
std
mov
xor
shl
mov
inc
jge
repz
mov
jmp
cmc
mov
insb
dec
sub
push
clc
fs
add
addr16
dec
jbe
add
pop
xorps
sahf
fdivs
xchg
cmc
mov
cmp
sahf
inc
fcompl
insb
mov
adc
push
push
mov
cmpsl
int
dec
cltd
ss
push
int3
push
sub
or
sbbb
inc
push
addr16
jo
mov
xchg
daa
xor
xor
outsl
xchg
mov
sbb
shrb
xchg
cmpsl
scas
lock
das
stos
push
hlt
inc
in
mov
std
outsl
and
bound
add
cmc
push
jmp
inc
pop
sbbl
mov
je
or
pop
push
rcrl
nop
in
push
inc
cwtl
lock
or
movsb
dec
mov
xchg
dec
fs
ss
daa
ss
sub
xchg
jns
std
sbb
jo
fidivs
cmp
aaa
fildl
mov
insl
fsub
adc
repz
dec
xchg
xor
sbb
adc
jbe
push
outsb
pusha
cmpl
sbb
rclb
iret
add
insl
imul
rorb
arpl
or
or
and
mov
divb
lahf
sub
push
fidivrl
rol
imul
push
loope
jmp
adc
test
out
aam
add
data16
faddl
or
ljmp
jnp
mov
pop
cmpsl
or
fcmovnbe
stos
ret
outsl
adc
or
outsb
mov
cmp
dec
ret
insb
sub
and
adc
pushf
lods
jecxz
and
outsb
jmp
mov
mov
mov
repnz
stc
or
in
xchg
out
jecxz
enter
test
adc
mov
hlt
xchg
cmc
lret
or
sarb
and
or
cs
mov
js
dec
mov
sti
add
push
mov
orl
push
ss
xchg
dec
insb
sbb
vpsubd
movl
ret
or
imul
stc
in
push
arpl
call
xor
iret
push
cld
sbb
mov
lods
push
lock
mov
loopne
cmp
xchg
dec
jbe
mulb
jb
sub
inc
jnp
cmpsl
and
nop
cmp
push
or
mov
and
decb
jbe
and
cmp
outsb
pop
xchg
push
out
xor
mov
xchg
rorb
sub
cmp
fcomps
je
or
add
pop
je
das
jmp
or
mov
pop
cli
popa
or
repz
mov
in
subl
lahf
or
push
push
jge
sahf
and
and
es
xchg
xchg
push
rclb
jle
ret
setnp
fisubrl
lods
mov
lahf
sub
out
push
push
scas
sbb
xor
sub
mov
dec
jecxz
fsubrs
push
pop
rcr
xchg
in
scas
pop
and
out
bswap
adc
lahf
xor
popf
ss
adc
mov
pushf
lcall
out
jecxz
lahf
mov
jecxz
and
sub
mov
mov
jae
add
mov
cli
dec
mov
lcall
xchg
sub
push
mov
int
xchg
add
xor
adcb
adc
or
fldl
mov
push
mov
add
sbb
and
cmp
pop
rorb
lods
aam
add
sbb
repz
aad
adc
xchg
scas
inc
and
gs
testb
mov
fs
popf
jecxz
shll
fsubrs
out
fidivrs
and
aam
jle
scas
xor
mov
pop
icebp
xor
push
ljmp
mov
jnp
or
orb
push
sbbl
fsubs
push
sub
ja
dec
inc
fs
add
dec
outsl
je
dec
into
mov
mov
orb
inc
sub
test
and
add
sahf
ljmp
fdivs
test
andl
in
in
and
jge
out
jp
nop
stos
push
inc
xlat
xor
daa
pop
repnz
jno
sbb
mov
ds
pop
xor
repz
or
sbb
cmp
ss
sub
mov
sbb
lcall
clc
ret
or
sbb
sub
lret
out
and
ds
fs
lds
xchg
cmp
dec
or
xchg
dec
xor
xchg
cwtl
and
jge
mov
xlat
lahf
jg
arpl
pop
jnp
jl
ret
js
pusha
inc
xor
mov
cmc
mov
push
shlb
push
pop
test
sbb
repnz
pushf
mov
and
pop
dec
push
mov
sbb
mov
sahf
mov
mov
push
das
sbb
cmpsl
adc
add
popf
sahf
add
push
repz
or
cli
jecxz
mov
dec
fstpl
inc
xor
sar
outsb
or
and
std
and
xchg
push
sub
test
pop
add
ja
cmp
movhps
cmp
fistps
push
or
cmp
and
jno
push
aaa
dec
push
dec
inc
mov
loopne
xchg
xor
mov
hlt
sub
pop
pop
jo
mov
stos
jnp
test
push
daa
or
lret
xor
jg
xchg
add
xchg
or
mov
mov
in
xor
fldt
and
inc
fildl
mov
add
pop
cmp
popa
and
or
adc
pop
rcll
cmp
ja
testl
mov
int
mov
cmpsl
sub
call
mov
mov
or
mov
stos
mov
inc
test
rclb
adc
gs
scas
mov
add
fs
inc
imul
add
loope
loope
les
and
cli
or
ss
add
inc
cmpsl
jl
in
dec
inc
adc
mov
mov
and
fadd
xor
negb
add
mov
xor
das
stc
sbb
sub
ret
imul
pop
fcmovnb
dec
fsubr
out
fnsave
inc
inc
sbb
pop
lea
jecxz
mov
enter
pop
cli
xchg
mov
in
rorb
jne
lret
rcr
add
out
xor
xchg
cmc
int3
xchg
and
popf
sub
inc
in
adc
gs
push
jns
stos
pop
lods
andl
inc
data16
adc
sbb
in
ljmp
mov
icebp
mov
shll
subb
and
inc
pop
call
and
push
mov
push
jnp
fstps
pop
adc
loop
cmp
insb
xor
mul
inc
add
push
in
or
dec
mov
sahf
pop
mov
jp
lods
pop
imul
adc
xor
imul
jae
fdivrl
dec
hlt
push
ret
lods
mov
imul
lret
clc
push
or
sti
cwtl
mov
aaa
dec
inc
rolb
insl
cmpsl
je
push
ret
aam
notl
in
xor
xchg
rcrb
repnz
dec
test
push
dec
je
push
fs
jge
xor
in
pop
xor
xor
outsl
push
mov
call
out
repnz
xchg
sub
divb
lds
popa
out
gs
cmpsl
inc
scas
loope
call
out
lods
pop
inc
into
movlps
sub
or
add
adc
mov
into
mov
sti
cmp
fwait
mov
lret
insl
iret
xchg
cwtl
jmp
in
dec
sub
push
js
lea
loop
lds
lcall
test
add
mov
in
fwait
ret
call
push
mov
je
jno
out
inc
dec
mov
in
lea
dec
ljmp
sbb
scas
jbe
mov
cmp
push
test
and
dec
fwait
lahf
xor
cmp
inc
cmp
xor
popf
xchg
and
sub
push
in
and
cmpl
pop
dec
in
pop
scas
mov
xchg
addl
push
add
mov
loopne
push
lea
pop
inc
adc
movsl
loop
push
aad
push
pop
mov
out
ret
lds
hlt
mov
pusha
mov
ret
movsb
ret
jb
test
mov
fwait
iret
pop
pop
jnp
xor
sahf
insl
cmp
fidivl
adc
nop
mov
mov
insl
cmp
test
movsl
mov
add
push
mov
mov
hlt
sbb
adc
cmc
dec
sub
pop
cltd
jo
subb
stos
dec
lock
jmp
mov
xchg
push
xor
imul
inc
mov
mov
mov
mov
jb
lds
imul
fcmovbe
xor
shll
push
cwtl
les
lds
xchg
push
inc
and
push
es
lea
mov
cmpsb
test
cwtl
out
pop
loopne
add
stos
inc
push
jmp
sti
ret
mov
imul
addl
loopne
aaa
add
mov
adc
ret
outsl
sahf
xchg
rclb
shll
scas
push
sti
cmp
push
clc
mov
push
out
mov
ret
pop
aas
ret
dec
sub
movsb
clc
mov
rcrb
dec
fsubrs
je
sti
dec
fbstp
arpl
add
aam
out
pop
mov
fildl
andl
fidivl
cmp
cmp
push
push
xor
aas
xchg
pop
add
inc
adc
lods
data16
jae
or
or
fistpll
ss
aaa
je
sbb
hlt
mov
cmpsb
cld
fistpll
pop
daa
std
inc
dec
xchg
mov
repz
ds
sti
mov
push
inc
or
and
fists
sbb
adc
inc
jp
inc
bound
ret
inc
ljmp
out
mov
out
repz
add
mov
lock
push
sbb
xchg
sub
das
xlat
mov
fimuls
int3
xchg
xchg
pop
out
sbb
sub
sbb
push
adc
mov
jb
imul
push
mov
aam
push
hlt
and
push
and
sub
icebp
mov
fimull
test
and
push
cmp
mov
ficoml
div
insb
jmp
xchg
mov
mov
push
inc
movsb
xor
movsl
fdecstp
adc
jge
cmp
pop
data16
mov
inc
aaa
mov
or
outsb
adc
testb
daa
xchg
movsb
or
fwait
sub
adc
rcl
call
adc
fnsave
xor
cmp
push
mov
roll
push
push
mov
cmp
xor
out
xor
incl
jge
daa
mov
les
hlt
mov
shll
mov
test
mov
xchg
int
gs
add
push
les
mov
adc
orb
out
push
insl
test
mov
ja
loope
push
sbb
xlat
cld
cmc
push
std
ret
popa
sub
scas
xchg
sub
daa
mov
mov
adc
jae
gs
test
and
push
inc
adc
lea
scas
call
fcomps
push
das
inc
xor
or
xor
jbe
mov
orb
xchg
cmp
cli
into
repz
scas
mov
pop
cs
xor
imul
pop
xchg
nop
or
sbb
fwait
dec
mov
or
lahf
mov
pop
adc
sub
and
subl
xor
push
mov
cmp
jmp
fsubrl
into
pop
es
movsb
mov
cmpsb
test
mov
je
jae
mov
fs
xchg
push
xchg
xchg
notl
push
xchg
xor
psraw
iret
out
mov
sbb
jne
jns
adc
outsb
push
jns
sarl
ds
mov
inc
cs
pusha
push
push
push
stos
jle
addr16
inc
cmpsb
outsb
lret
mov
loop
add
pop
flds
dec
popa
sub
cltd
xchg
mov
and
xlat
cmp
pop
xlat
addr16
jmp
out
jl
in
sbb
lds
in
das
pop
and
cmp
sub
mov
mov
mov
jecxz
push
and
xchg
fwait
daa
mov
push
lods
out
jmp
clc
add
fucom
jp
jl
push
pop
mov
and
outsb
js
xchg
mov
es
jg
idivl
mov
repz
idivb
xchg
sbb
loop
dec
push
out
mov
adc
cmpsb
shll
pop
add
push
mov
mov
sub
in
and
popf
push
loope
out
or
aaa
sahf
inc
mov
repz
das
out
dec
cmpsb
add
pusha
pop
adc
lods
xchg
xor
or
lds
leave
ret
rcl
into
push
aam
xor
jo
jb
lods
sbb
push
dec
rcll
mov
cs
or
fimull
repnz
fisubl
push
push
mov
jno
mov
pop
cld
stos
cmpsl
xchg
ljmp
jge
sbb
push
aad
mov
in
in
loop
in
inc
lahf
ss
jno
or
push
les
rcr
sbb
add
sahf
neg
scas
idivb
sub
mov
loopne
cmp
in
movsl
xor
pusha
psubsb
test
cmc
push
lcall
add
fimuls
jnp
sbb
scas
movsl
pop
test
push
and
daa
lahf
dec
mov
aas
les
ret
lock
cli
ds
stos
fmul
xchg
scas
ffreep
les
sbb
push
push
mov
dec
out
outsb
sub
aad
loope
pop
scas
dec
sbb
mov
shl
adc
and
push
into
shll
adc
mov
jne
aaa
cwtl
mov
sbb
jne
lret
fildl
jle
sbb
xor
or
orb
lcall
and
insb
out
scas
sarl
push
in
call
adc
lods
shrl
push
fcoms
aad
mov
aaa
scas
or
push
out
push
test
xlat
inc
out
or
out
pop
pop
int
aas
testb
aam
in
mov
data16
scas
pop
loop
cli
xchg
stos
add
adc
sub
shrb
jno
mov
jae
cwtl
xchg
movq
aaa
imul
test
out
mov
movsl
ret
outsb
fwait
data16
insb
adc
jge
jae
sub
fs
dec
push
xchg
pop
adc
in
xchg
js
add
adc
loope
mov
stos
cmp
iret
pop
xor
outsb
inc
push
push
sub
mov
jb
pop
ficoml
int3
loopew
repz
jb
stos
and
js
mov
cs
cmp
jo
pusha
and
cltd
addr16
mov
je
imul
xlat
jne
jmp
add
into
add
jns
movsl
inc
aad
sbb
aad
outsb
fiadds
lret
nop
jle
mov
dec
out
test
dec
and
mov
lret
mov
cwtl
cmp
rolb
andl
aad
in
xchg
decb
out
das
cmpb
cs
aaa
adc
sbb
mov
loope
cltd
push
sub
push
mov
sbb
mov
loope
ficomps
cmovp
sub
sub
mov
pushl
push
mov
outsl
insl
mov
add
xor
push
stos
add
push
outsl
dec
in
jecxz
into
mov
xchg
push
int3
out
cmc
fnstcw
jle
jmp
and
xor
mov
testl
and
push
adc
pop
call
lretw
stos
out
push
mov
imul
jmp
enterw
pop
and
data16
mov
movsl
pop
dec
mov
lcall
fisttpl
cld
je
out
pop
push
test
das
adc
aad
cmp
pop
jne
xorl
add
iret
jl
cmp
jp
jb
mov
outsb
mov
mov
inc
mov
out
inc
aam
mov
arpl
cmp
lock
cmpsl
dec
cmp
in
pop
in
pop
notl
mov
mov
and
nop
add
mov
mov
and
cwtl
inc
arpl
or
push
pop
ljmp
pop
lret
jmp
dec
jl
arpl
ja
mov
leave
add
pushf
mov
fidivl
js
aad
dec
xchg
mov
inc
sbb
cli
sbb
enter
enter
fcoml
popa
inc
lods
mov
cwtl
loopne,pn
loope
sbb
mov
dec
xor
repnz
push
jl
pushf
int3
pop
mov
add
gs
sar
repz
cmp
fldl
dec
rclb
in
je,pn
push
mov
mov
jge
push
or
enter
fs
sbb
adc
add
lea
mov
lods
mov
pop
and
nop
lcall
out
ja
daa
out
cs
mov
test
xchg
mov
call
test
mov
dec
pop
add
clc
dec
jle
cwtl
and
cmp
rorl
ss
pop
adc
pop
sub
testb
sahf
jl
movsb
pushf
push
cmp
fcmovu
or
shl
in
mov
push
push
loope
push
push
push
and
cmpsb
cli
jo
mov
and
shrl
rolb
or
push
push
push
fmull
jns
test
dec
loope
imul
or
mov
adc
cmp
mov
clc
adc
pusha
pop
ss
int3
sub
sub
daa
outsl
xchg
call
pop
sub
pop
xchg
mov
aam
and
and
push
fwait
out
jge
jmp
scas
addl
jecxz
das
dec
xchg
xchg
mov
arpl
lock
and
arpl
xchg
aad
ljmp
pop
pushw
adc
shrb
mov
and
out
mov
clc
xor
mov
push
nop
data16
xor
fs
xchg
mov
pop
mov
jmp
rcl
repnz
ret
push
xchg
in
mov
test
jle
insl
or
pop
push
lods
dec
sub
ret
sub
mov
and
fwait
xchg
xchg
mov
dec
mov
lock
adc
xlat
scas
sub
dec
dec
fdivrl
ret
ss
mov
dec
outsb
outsl
movsb
xor
or
adc
mov
test
adc
adc
popf
and
jne
gs
pop
jne
lods
lods
fisttpll
lcall
iret
mov
enter
mov
data16
repz
outsb
cltd
clc
dec
mov
add
lret
lret
adc
jl
ja
sbb
fstpl
sbb
rcll
sbb
add
jle
stos
mov
sub
imul
ret
in
das
mov
cmp
push
and
sub
sub
xchg
pushl
imul
bound
add
xor
mov
jl
mov
adc
sub
cld
jecxz
notl
xchg
mov
push
adc
das
add
and
stc
popa
out
ret
push
pop
sub
ja
pop
push
inc
aam
or
ds
adc
and
xchg
jbe
pop
mov
loopne
sub
xchg
dec
dec
gs
mov
inc
dec
cmp
psllw
out
dec
cmp
dec
test
hlt
dec
xchg
loop
pop
test
popf
xchg
xor
test
gs
in
jbe
aas
out
jnp
sbb
jbe
or
push
adc
rol
push
jns
cmp
imulb
sti
lods
mov
insb
out
or
mov
jmp
jns
dec
testl
ret
nop
decb
dec
mov
cmc
and
jmp
imul
rcr
or
movsl
dec
push
cs
das
loopne
pop
xorl
lock
leave
int3
aad
pop
mov
push
pop
add
dec
jle
cmp
adc
xchg
test
sbb
nop
test
dec
sub
jmp
lods
pop
push
rcrb
loopne
xchg
sbb
mov
clc
add
push
insb
addr16
lds
jl
mov
adc
andb
call
into
pop
jnp
ficoms
shlb
inc
pop
out
xor
fstpl
push
push
cmp
push
inc
xchg
aaa
arpl
out
inc
xorb
lret
mov
sti
pushf
xor
or
push
cmp
xchg
ljmp
xchg
out
das
out
mov
popa
push
les
imul
cmp
dec
or
mov
jmp
add
jb
rolb
imul
xlat
test
cltd
xor
cmp
cltd
iret
dec
push
in
xlat
adc
test
and
mov
jnp
bound
mov
sbb
into
push
jnp
das
out
test
xor
jg,pn
cwtl
mov
ret
add
repnz
mov
js
mov
fsts
stos
push
faddl
pop
lahf
sbb
xor
push
cmc
ret
lock
mov
jno
gs
je
mov
add
ljmp
outsl
push
and
fdivr
lock
cld
test
aaa
push
dec
cwtl
and
dec
pushf
lods
push
xchg
les
arpl
shrb
clc
out
xchg
movsb
aas
rorb
mov
cmpl
mov
lods
xchg
mov
scas
int
sbb
mov
pop
cld
adc
repnz
push
fadd
dec
mov
ficomps
ds
push
mov
sub
push
cmp
xor
ja
sbb
clc
adc
stos
dec
push
jmp
push
mov
add
mov
movsb
mov
pop
sub
or
fisubs
stos
xchg
shll
or
and
sub
jmp
lea
cmp
cli
fwait
aad
push
mov
cmp
dec
cmp
cmc
jp
xor
or
jle
lahf
mov
out
cmp
inc
push
leave
ret
stos
inc
cmp
cmpsb
sbbb
loope
push
pop
out
arpl
pop
fucomip
in
scas
or
push
or
sub
push
hlt
jecxz
sub
js
xchg
xor
es
incl
dec
es
adc
out
repz
ret
xchg
int
inc
enter
movsl
data16
or
pushf
into
adc
mov
inc
inc
and
push
sbb
xchg
dec
xchg
into
mov
xchg
lret
push
jne
dec
jo
enter
lods
nop
xor
fbstp
dec
cmpsl
mov
loop
push
dec
cmp
aaa
arpl
or
scas
mov
or
shll
repnz
jo
or
leave
sub
enter
mov
mov
or
dec
enter
pop
and
pop
push
lock
push
pop
and
gs
pop
addr16
mov
jmp
add
stos
jns
inc
pop
scas
cmpl
sarb
int3
out
fs
fisubrs
xchg
ret
test
out
outsl
or
xchg
xchg
mov
inc
test
and
pop
and
fsubrl
push
test
out
and
jecxz
push
fs
mov
sarl
std
mov
insb
push
int
out
int
xchg
ss
test
pop
pop
and
mov
mov
sbb
cld
sub
imul
popf
out
sti
xor
popa
leave
in
int
dec
and
xchg
pop
and
insb
push
mov
lcall
mov
mov
xchg
mov
push
jb
or
cmp
scas
test
daa
fisubrs
mov
jns
div
add
movsb
mov
sub
xor
cmp
jg
push
sbb
inc
and
mov
xchg
mov
pop
clc
fsubr
push
ret
adc
test
jp
jo
adc
ja
loopne
mov
xchg
in
out
out
pop
lods
inc
add
lcall
and
mov
push
jbe
jno
ret
mov
inc
addb
ret
pop
ss
sbb
pop
sub
les
xor
push
mov
hlt
adc
adc
cmpsl
bound
movsb
jle
test
mov
mov
insl
push
shrl
dec
inc
inc
jg
popf
stc
mov
outsl
lahf
loop
lea
push
inc
scas
dec
cltd
xchg
sub
xorl
iret
mov
ja
test
xchg
test
adcb
xchg
les
xor
dec
and
inc
int3
push
xchg
repz
repnz
into
negl
fildll
dec
jns
outsl
jnp
jns
adc
cld
push
scas
imull
in
mov
stos
sub
mov
pop
ja
xor
sbb
test
xor
pushl
push
iret
movsl
subl
arpl
movsl
shll
hlt
add
pop
aaa
xor
mov
mov
add
jecxz
in
pop
ficompl
lret
adc
sti
inc
xor
fwait
mov
bound
jae
and
fwait
idiv
xchg
cmp
pop
add
sub
pop
jg
jnp
outsl
jg
loop
sti
fs
hlt
xor
pop
or
rcll
xor
dec
hlt
enter
sbb
std
imul
pop
pop
ret
loopne
push
adc
mov
mov
popf
xchg
stos
les
jno
mov
sbb
push
push
movsb
aad
sub
jns
mov
lds
test
xchg
leave
jmp
xchg
imul
mov
sub
sub
and
xor
es
sbb
fnstsw
stc
or
dec
sbb
cmpsl
call
imul
add
cmp
sbb
movsb
pop
xor
jl
lods
scas
lods
add
inc
pop
cmp
add
clc
xchg
jno
lods
outsl
xchg
fimull
jp
add
xchg
stos
add
dec
aaa
jmp
xchg
cmp
mov
in
dec
dec
jne
fcmovnb
adc
loope
inc
leave
cmp
xor
js
addb
sbb
and
aad
jnp
push
std
add
mov
mov
loopne
or
xchg
loop
lds
mov
pop
rcl
test
movsl
movsb
pop
mov
mov
mov
xchg
inc
insb
sbbl
xchg
xor
xchg
ss
jno
mov
mov
pop
movl
lahf
jp
daa
insl
pop
xchg
adc
inc
iret
cld
rolb
outsb
shlb
pop
xchg
inc
jp
add
xchg
ret
dec
ds
xor
mov
xor
pop
fldenv
and
xchg
mov
sub
fcompl
fs
ds
orb
daa
xchg
neg
pop
repz
adc
js
in
xor
mov
es
daa
mov
insb
in
cmp
mov
pop
xchg
lahf
fs
cld
lea
popa
inc
inc
push
xchg
mov
test
out
cmpsl
popa
sbb
fs
ret
loopne
and
jge
jecxz
push
fidivrl
lock
xchg
pusha
cli
in
xchg
outsb
aaa
xor
inc
pop
jle
out
or
add
ret
sarb
xor
sub
fcmovu
sub
inc
mov
inc
movsb
xchg
iret
in
or
or
aas
mov
mov
lea
insb
insb
add
cmp
push
repnz
push
push
out
filds
xor
jb
aam
ret
scas
sub
iret
push
ret
shll
sbb
dec
jp
inc
adc
cwtl
sub
aad
out
movsl
xor
push
adc
mov
jo
fstpl
or
adc
ret
xchg
add
adc
lds
inc
arpl
test
jp
aaa
sbb
mov
cld
or
fisttpll
sahf
pop
cmpsb
push
ss
xchg
bound
push
pop
loope
addr16
jmp
mov
leave
pop
mull
pop
addr16
loopne
cmp
or
mov
mov
les
dec
aam
jae
xor
xlat
mov
add
ror
mov
mov
jae
push
push
fidivl
dec
arpl
ffree
sub
dec
xchg
fsubl
dec
ja
adc
ret
mov
pop
sub
jl
pushl
inc
sub
jg
lods
out
pusha
test
loop
adc
aam
add
xorl
mov
add
dec
and
push
jns
jl
adc
out
in
pop
and
clc
out
mov
es
xchg
xor
dec
xchg
mov
sti
mov
inc
dec
lods
out
hlt
jbe
pusha
divl
push
dec
inc
in
mov
xor
incl
int3
push
dec
add
in
sub
jmp
add
and
sti
mov
jecxz
and
daa
clc
and
test
mov
xor
sub
bound
push
int
sbb
pop
xchg
cli
inc
lods
mov
mov
xor
mov
aam
adc
lock
vlddqu
xor
add
repz
imul
movsl
lods
pushf
and
mov
sub
mov
jecxz
popf
mov
jo
fistpl
mov
js
bound
mov
clc
and
xchg
xor
push
lods
add
lcall
cli
mov
or
push
mov
mov
in
es
imul
add
xor
sbb
xchg
jmp
or
pop
cmpsl
mov
mov
cmpsl
out
pop
cmp
dec
andl
xchg
adc
in
jno
out
push
lret
xchg
xor
movl
daa
mov
cli
nop
add
dec
js
out
xchg
imul
dec
mov
mov
packuswb
mov
jl
test
or
pop
test
cmp
out
xor
cld
adcl
icebp
or
test
sbb
pop
cltd
or
mov
mov
lds
imul
addr16
out
mov
cmp
lock
lds
hlt
jle
fiaddl
xchg
int
in
xlat
lcall
cmp
sbb
xchg
outsl
loopne
push
xlat
inc
sti
inc
push
cmp
xchg
rcll
mov
and
xchg
xor
rorb
mov
movsl
cmp
push
or
sahf
loop
xchg
jns
sti
adc
and
sub
xchg
mov
negb
insl
cmp
cs
xchg
repnz
jae
add
outsb
mov
adc
push
push
daa
movsb
dec
dec
add
fstpl
loop
mov
stos
cmp
bound
cmp
rcl
out
or
loop
inc
xor
jne
std
xchg
sbb
xchg
test
in
mov
stos
fisubs
cmp
testb
das
clc
ret
lock
adc
xor
push
mov
pop
dec
push
mov
std
adc
add
ds
xlat
or
mov
adc
test
popa
dec
lret
pushf
adc
int3
xlat
xor
imul
in
sub
push
add
mov
sbb
sbb
and
cli
and
outsl
push
dec
or
cld
dec
jg
cltd
jl
fadd
xchg
aam
add
loop
cmp
jne
popa
out
int3
scas
sub
dec
mov
jae
js
mov
arpl
repz
jl
ss
xor
popf
mov
or
orl
lea
imul
add
int
sahf
das
mov
add
data16
les
and
mov
mov
mov
adc
jno
dec
lahf
cmp
pop
cmpb
fwait
xor
shrl
xor
mov
mov
xchg
dec
mov
bound
jno
jecxz
in
add
loope
ds
sar
adc
xchg
in
cmp
push
jb
mov
push
call
aam
aad
inc
push
sub
lock
xor
das
jns
fadds
sbb
ret
shrl
mov
daa
les
test
jae
mov
jbe
rcll
cld
fcoml
gs
outsb
clc
pop
sar
xchg
jae
xchg
lds
pop
sbb
mov
jge
cmpsb
mov
add
stos
mov
movsl
and
xchg
and
hlt
adc
in
inc
xor
ss
rcr
sub
popf
push
or
mov
enter
out
xchg
ds
daa
xor
dec
lods
and
enter
lea
ljmp
add
out
scas
push
sti
jmp
sbb
add
xchg
push
ja
xchg
dec
mov
paddsw
roll
arpl
pop
jae
adc
stos
jo
lret
cmp
inc
or
mov
cmp
xchg
mov
sbb
jp
mov
or
je
test
sub
ljmp
xor
jmp
push
xchg
pop
jmp
sub
inc
mov
xchg
jg
mov
cwtl
cltd
mov
sub
icebp
jg
sub
sahf
notb
out
mov
fptan
xor
lods
adc
dec
sbb
shlb
aam
jae
pop
xchg
add
pop
dec
popa
jmp
inc
imul
adc
dec
xchg
clc
pop
pop
fidivrs
lods
dec
mov
mov
loop
jb
aaa
push
jnp
xor
cmp
cltd
mov
sub
dec
mov
cld
add
mov
dec
ss
push
jno
std
xchg
loopne
aas
enter
cmp
jecxz
or
repz
cwtl
dec
and
push
xchg
bound
adc
mov
int3
and
fisubrl
or
lock
mov
loopne
sbbb
mov
mov
jge
xchg
push
mov
add
xchg
in
idivb
test
or
and
sub
mov
mov
xor
and
mov
lds
xchg
icebp
and
nop
rolb
movsb
push
cmp
nop
shlb
data16
pop
pop
shlb
mov
dec
test
sbb
lds
or
gs
or
jecxz
loopne
inc
fwait
sbb
pushf
out
mov
inc
loope
mov
into
or
mov
repz
inc
rcl
add
jne
pop
jp
addr16
mov
jo
xor
dec
mov
lds
push
cmc
jnp
pop
dec
mull
iret
mov
ljmp
mov
icebp
cmp
push
or
pop
sbb
cmp
adc
push
add
pop
pop
mov
imul
ss
xchg
jae
fdivrs
lcall
divl
loop
in
jbe
pushf
insl
les
lret
lcall
mov
cmp
pop
into
add
xlat
push
rcr
sub
enter
arpl
sub
cmp
out
jne
mov
in
jns
push
push
shl
je
outsl
out
cmp
nop
adc
les
jns
jb
bnd
call
sahf
sarl
xacquire
xchg
adc
fs
or
leave
sti
and
dec
inc
ret
xchg
cmp
mov
ja
or
insb
out
mov
dec
push
out
sbb
jo
les
jae
in
xchg
sub
enter
xchg
cltd
imul
mov
xor
xor
push
mov
fisubrs
repz
loop
mov
cmp
movsl
pop
repz
lock
scas
jmp
fwait
mov
test
xlat
ror
xchg
into
xor
mov
je
mov
adc
js
and
insb
gs
addr16
dec
xchg
dec
shlb
and
push
clc
adc
sub
sbb
xor
jge
imul
add
xor
outsl
mov
lret
xlat
dec
pop
inc
push
inc
ss
and
mov
test
scas
add
loopne
scas
lret
push
repz
and
dec
fmull
add
int
rep
adc
jl
aam
jmp
mov
out
cwtl
cmp
add
jp
jnp
push
es
pop
xor
mov
mov
mov
sub
dec
push
mov
push
les
mov
mov
cmove
lret
jmp
inc
mov
cmp
loopne
sub
mov
outsb
aaa
icebp
outsl
iret
jl
repz
jae
dec
sbb
xorl
mov
in
push
movsl
add
addb
je
cmc
xchg
push
mov
inc
dec
push
adc
fists
pushf
mov
xor
shrl
cltd
mov
stos
cs
mov
xchg
dec
scas
orl
xor
adc
fstpl
ret
aas
imul
mov
shrb
aaa
inc
hlt
cli
fmuls
xor
in
jne
xor
cli
xlat
inc
insb
mov
pop
cmp
hlt
push
mov
inc
incl
sbbb
ret
in
fwait
lahf
jmp
cmc
push
sub
add
xor
negb
out
xor
outsl
push
inc
or
mov
xorb
imul
mov
pop
sti
daa
sub
out
fbld
test
sbbb
sbb
cmpsl
cmc
push
repnz
push
in
push
addr16
ss
jp
mov
test
arpl
mov
mov
sahf
rcrb
inc
addr16
outsl
mov
pop
ret
loop,pn
push
add
fistpll
iret
cmc
aas
pushf
leave
mov
and
dec
jp
pop
in
push
cli
xchg
fdivl
popa
ss
adc
and
loopne
scas
mov
fcmovu
mov
inc
stos
int
negb
rorb
mov
lock
comiss
das
jl
jle
cmc
ljmp
movsl
mov
popa
in
out
int
sti
decb
jae
dec
mov
jecxz
push
enter
in
xor
mov
dec
jo
mov
outsb
add
data16
push
cld
xchg
or
and
xchg
pushf
xchg
inc
sbb
gs
dec
lods
lods
jmp
lods
fwait
imul
lahf
jl
lods
fs
test
in
mov
sti
inc
in
loop
push
jo
xchg
enter
out
mov
loop
inc
cmp
sbb
push
xchg
sub
movsb
mov
mov
sbb
sub
xor
and
sahf
jns
mov
inc
mov
outsb
les
shll
inc
xchg
push
add
scas
stos
adc
jg
push
xorb
mov
xor
iret
mov
fcoml
jbe
fstpl
mov
inc
add
dec
and
mov
pop
push
cmpsl
dec
bound
addr16
fs
push
sahf
dec
arpl
iret
jnp
push
mov
fisubrs
insb
lret
negb
mov
jge
jbe
daa
ds
xor
std
fstl
shrl
xor
lods
jp
scas
repnz
aad
subb
enter
fstps
lcall
and
pop
sbb
push
movsb
ret
push
cmp
shll
pop
jmp
cmpsl
mov
dec
aas
push
cmpsl
ljmp
out
jg
adc
or
adcl
cmpl
mov
mov
mov
faddl
mov
sub
arpl
fldt
orl
push
stos
stos
int3
mov
xchg
inc
imul
sbb
stos
xor
ljmp
mov
pop
shll
dec
cmp
loopne
xchg
sar
push
out
aad
icebp
inc
cwtl
mov
pusha
add
mov
pop
sarb
push
xor
pop
imul
ret
repnz
popa
cmp
data16
add
xchg
adc
shrb
jbe
xchg
cmp
mov
inc
dec
les
cmp
pop
cs
fnstcw
popa
scas
mov
jno
adc
mov
lret
sti
jb
sbb
es
jl
imul
mov
cmp
inc
mov
cwtl
lcall
mov
pop
pushf
scas
cmc
test
jp
mov
sbb
push
mov
xor
or
fiadds
mov
or
leave
dec
cmc
cli
sub
sub
aas
or
out
insl
lea
cmp
imul
shrb
jno
sub
enter
lahf
inc
mov
lret
bound
sub
adc
cli
add
xor
sub
fdivs
push
aam
sbb
adc
xchg
movsl
mov
xchg
lcall
andb
cmp
cltd
adc
or
sub
mov
mov
and
lods
out
rol
jbe
test
cli
dec
and
fistps
xchg
shlb
inc
add
mov
dec
mov
repnz
pop
jae
outsl
lahf
scas
xchg
scas
mov
clc
jne
or
lds
push
push
testl
xchg
sub
push
mov
stc
dec
orb
test
jle
add
cli
aad
push
lea
ljmp
xchg
fadds
test
ret
outsb
dec
enter
mov
mov
jecxz
sti
sbb
sub
pop
jl
xor
jb
fs
dec
int
sbb
xchg
icebp
and
lcall
inc
fs
cmpsb
lea
dec
mov
or
xchg
xor
ds
sti
push
push
div
mov
lods
icebp
jbe
mov
mov
stc
sahf
test
jge
jae
or
lahf
lcall
pop
btrl
jge
outsb
or
mov
sub
jl
mov
arpl
outsl
jge
leave
test
out
call
mov
jle
fcmovu
add
or
or
and
push
sarb
addb
jno
int3
mov
mov
fstpl
xchg
es
test
add
inc
push
ljmp
xlat
mov
incb
das
or
sub
cs
js
shl
scas
sub
imul
jbe
xchg
iret
jne
push
dec
ret
daa
shlb
repnz
out
fwait
shl
mov
mov
lds
jmp
sbb
out
xor
aas
sbb
mov
jne
sbb
jae
mov
push
enter
daa
lahf
mov
enter
dec
fisubs
jnp
xor
add
cmp
cmp
mov
iret
inc
test
cmp
push
sbb
repz
imul
mov
ret
sbb
int
push
in
sub
ss
dec
insl
mov
popf
adc
shrl
dec
jmp
lret
cmp
sbb
xchg
mov
shll
cmp
adc
mov
push
lock
les
scas
mov
dec
ljmp
pusha
xor
in
cld
inc
stos
movsb
jns
mov
movl
mov
in
jns
cmp
punpckhdq
mov
dec
lock
cwtl
jae,pt
sti
add
jae
pushf
inc
inc
inc
inc
fsubs
fidivs
inc
jge
in
and
or
test
loop
movsb
bnd
cmc
ss
push
jg
movsb
sbb
sbb
add
aaa
test
dec
inc
fiaddl
inc
shlb
sbb
xchg
xchg
aas
js
popa
loope
xor
out
outsl
lods
mov
cs
dec
push
xchg
adc
xchg
mov
mov
mov
mov
adc
in
fldenv
repz
andb
or
inc
mov
mov
mov
mov
fidivrs
xchg
xor
stos
stc
or
push
mov
push
cmp
and
shll
add
xchg
inc
popa
out
or
loop
push
hlt
jo
add
pop
fwait
pusha
stos
cmp
dec
jp
shll
pop
loope
pushf
mov
in
outsl
jno
sbb
sub
clc
xor
pusha
jmp
fimuls
int
bound
dec
mov
ds
test
loop
cli
xchg
lret
and
push
jmp
xor
out
dec
cld
mov
sbbb
adc
pop
inc
dec
mov
repnz
int
mov
sarl
or
fisttpl
add
pop
push
cmpsb
add
cmp
hlt
aam
pop
mov
add
pop
daa
push
mov
cmp
jno
lds
push
add
int3
mov
in
cmpsl
mov
xor
sahf
mov
or
loopne
mov
cmp
mov
loopne
clc
xor
mov
mov
les
xchg
loop
push
lods
or
jl
bound
loopne
sbb
xchg
mov
out
hlt
fnstsw
sbb
adc
test
arpl
mov
add
ss
sub
mov
mov
sarl
in
addb
icebp
lret
clc
inc
fsubr
and
jle
out
js
jle
cmp
mov
sbb
push
push
jg
pop
rsm
sub
loop
xor
push
aas
popf
pushf
xchg
icebp
fs
or
pop
xchg
sbb
outsb
cs
push
lods
dec
mov
jae
sub
and
fwait
outsl
mov
dec
push
daa
fwait
out
mov
sbb
sahf
lret
clc
fstps
sti
mov
jle
mov
jmp
out
stos
sub
lahf
cld
out
rcrl
mov
mov
nop
sbb
xor
mov
xor
pop
xchg
inc
in
add
and
arpl
rolb
std
fistl
movsl
fwait
in
pop
mov
jmp
jecxz
pop
sti
lcall
imul
push
test
imul
add
shll
popa
out
addb
sbb
cwtl
fidivrs
popf
xor
push
leave
sbb
in
jl
mov
dec
lods
sbb
lods
cmpsb
decb
push
pop
ljmp
inc
sbb
cmp
repz
cmp
push
or
xor
popf
sti
lahf
test
fwait
cmp
aas
out
mov
mov
adcl
add
scas
pop
int
es
or
test
pusha
xor
cmp
nop
loopne
jbe
pop
fisubrs
popf
ljmp
repnz
rolb
xor
clc
sub
roll
mov
push
pop
call
stos
dec
cmp
lock
xchg
imul
int3
mov
fimuls
imul
or
cmp
sub
cmp
cmp
fcomps
xlat
movsl
sarl
addr16
dec
add
loopne
mov
aas
nop
lret
sbb
xchg
aad
push
ljmp
scas
push
pop
mov
lods
pop
xchg
or
add
or
jne
sub
mov
mov
jle
imul
iret
xchg
cmpsb
mov
std
adc
cli
outsl
stos
cmc
jno
push
lret
sub
repnz
fcomip
inc
out
cmp
subb
out
push
cmpsl
push
jnp
xchg
mov
push
bnd
data16
sete
xchg
xchg
jbe
clc
xchg
loopne
cmp
pop
sub
imul
in
leave
mov
int
or
cmp
movsl
jle
push
insl
adc
aam
sarb
add
test
lret
iret
psrld
jmp
dec
es
jne
call
pop
adc
jmp
or
lahf
cmp
sarl
lret
jmp
mov
loopne
mov
mov
mov
aad
hlt
stc
add
stos
rep
sbb
add
rcrl
jb
xor
cltd
pop
or
repz
push
sbb
and
shll
popf
roll
rclb
out
sbb
andb
xchg
cwtl
insl
sbb
lret
ret
into
dec
xor
enter
push
pop
ljmp
cmp
xchg
inc
add
sbb
testb
pop
test
dec
scas
dec
or
xchg
scas
les
inc
clc
inc
cmp
movsl
orl
addr16
mov
scas
pop
test
push
push
add
xchg
jae
ja
xchg
stc
pop
jnp
das
cmp
je
jno
sbb
stos
xor
movsb
sub
outsb
fs
jo
pop
lcall
rolb
jbe
mov
adc
cmp
mov
ret
pop
add
je
test
sbb
das
xchg
in
lahf
lods
jbe
dec
fldenv
movsl
cmpsb
sbb
imul
sbb
xor
and
sub
dec
pop
dec
xor
and
aas
mov
iret
adc
insb
in
stos
into
mov
loope
mov
and
adc
pop
loop
arpl
mov
inc
sub
push
xor
imul
lods
or
cmpsl
sbbb
enter
pop
rolb
xchg
mov
cmp
and
loop
mov
ret
adc
repz
inc
add
lods
pop
aad
scas
sbb
jns
mov
lret
cmp
dec
ljmp
inc
loopne
fld
dec
mov
pop
jo
cmpsb
cld
pop
mov
movsb
mov
lahf
stos
inc
dec
in
or
or
xor
mov
and
pop
cld
sub
dec
lret
inc
lret
sub
sbb
test
shl
lret
push
xor
test
flds
xor
sti
cmp
adc
out
in
int3
mov
or
ret
test
fnstcw
leave
push
xchg
cmp
test
jle
add
std
jo
scas
xchg
push
mov
pop
push
stc
data16
je
xlat
sbb
aad
sub
scas
test
stos
mov
rorb
inc
sub
adc
xor
sbb
cld
fld
add
jae
aam
jbe
leave
push
dec
pusha
cli
filds
ljmp
mov
out
pop
lahf
mov
cmpsb
cmp
loop
fimull
and
lods
xchg
call
clc
add
shrb
xor
sahf
std
subb
mov
lret
daa
loop
cwtl
cmpsb
jl
arpl
add
fbld
outsl
sub
lods
adc
jb
arpl
adc
dec
xchg
lret
push
daa
cwtl
inc
lcall
pop
push
mov
pop
js
dec
lret
sbb
lds
mov
mov
mov
inc
js
push
clc
sub
sub
xchg
inc
out
xchg
stos
cmpsl
jp
mov
mov
xchg
call
mov
mov
sbb
ja
testb
test
cmp
dec
shrl
jge
mov
lock
fcomp
lds
sar
loop
sub
call
xchg
add
enter
pop
xor
jmp
pop
jo
add
cmp
subb
sbb
out
cmp
jns
inc
lahf
dec
xchg
out
add
add
lcall
push
mov
inc
mov
ret
dec
sti
mov
mov
adc
mov
xor
xchg
inc
popa
pop
mov
mov
hlt
inc
dec
push
es
es
rcll
cmp
jno
xchg
mov
push
inc
movsb
mov
mov
loope
mov
inc
xchg
dec
mov
iret
ja
push
les
mov
in
mov
lret
push
mov
lcall
cmp
pop
xlat
fimull
lret
add
or
push
rorb
push
cmp
cmp
xlat
jg
push
cmp
mov
mov
pop
vpshufb
es
fdivrs
adc
orb
jbe
push
out
into
out
pop
das
xchg
loop
js
lcall
sbb
push
idivb
ja
add
aaa
xchg
movsb
rcrb
insl
outsb
cmp
cmpl
mov
loope
pop
fimull
imul
ss
sub
or
xchg
sbb
andb
movsl
jae
push
xor
or
xchg
dec
push
pushf
repz
add
jbe,pn
dec
cmp
mov
sarb
pushf
pop
xchg
repnz
xchg
push
dec
out
int3
adc
dec
imul
mov
adc
add
rcll
adc
and
pop
sti
xor
rcrl
pop
leave
cmp
mov
call
add
mov
sbb
inc
cmc
pop
adc
es
lahf
loop
aad
aam
pop
repnz
cmp
xchg
call
push
shll
movsb
jle
aas
add
xor
enter
sub
xchg
mov
cmp
outsl
inc
scas
in
or
push
out
sub
xor
sub
cmp
rorb
jno
sahf
jecxz
cmp
cmp
jno
mov
cmpsl
fstpl
push
inc
dec
neg
rorb
pop
push
sub
iret
popa
test
mov
dec
das
pop
mov
inc
nop
hlt
orb
out
out
mov
push
jne
jb
rorb
sbb
aad
aad
mov
mov
sub
xchg
or
adc
fnstenv
scas
jmp
out
xchg
and
stc
test
repnz
ljmp
clc
mov
or
mov
xor
sbb
xchg
pop
adc
push
lods
push
mov
push
sub
jecxz
iret
cmp
outsb
and
push
mov
int3
es
je
nop
jno
sub
or
pop
jno
popa
negl
out
mov
outsl
stos
push
add
add
test
pop
pop
testl
jnp
sbb
out
dec
mov
repnz
arpl
out
filds
test
dec
mov
jmp
scas
xor
dec
sarl
test
jmp
dec
mov
lret
cmpsl
push
pop
mov
fistps
push
lcall
aam
inc
jbe
sub
xchg
bound
pop
ljmp
mov
sub
ret
mov
fnstcw
fistl
in
imul
cltd
xchg
or
jg
repz
pop
jo
inc
push
push
paddw
jo
addl
mov
movl
out
testb
fwait
iret
lods
jb
mov
fs
bound
add
test
sbb
imul
and
xchg
xorl
fisttpl
mov
mov
push
in
loop
lcall
inc
in
mov
push
stos
scas
sbb
cwtl
push
xor
mov
and
jmp
cli
fimull
mov
adc
sbb
sub
inc
jp
adc
fdivs
popf
xchg
jg
test
add
fisubrl
insl
int3
mov
jae
lahf
repnz
scas
sbbl
sarl
inc
roll
sahf
jmp
scas
aad
movl
ss
repnz
out
int3
sub
ds
out
cmp
sbb
sbb
aaa
xchg
push
and
jp
sbb
dec
lods
pusha
fs
ret
xor
idivb
es
inc
mov
stos
sahf
jne
and
mov
ficoml
jb
jae
in
push
and
add
imul
cmpsb
aas
mov
out
dec
fmuls
add
mov
lahf
mov
arpl
mov
call
cmp
or
mov
ret
sub
fs
adc
pop
lds
dec
adc
mov
and
or
jns
hlt
int3
inc
or
jno
jmp
inc
andb
xor
push
enter
je
or
xlat
inc
loopne
mov
add
in
jae
insl
mov
xor
cmpsb
imul
inc
lahf
push
push
imul
sub
cmp
inc
push
les
jo
testl
mov
sub
lret
mov
cli
cmp
insb
and
lds
js
addr16
adc
adc
cwtl
outsl
lret
pop
inc
jb
pop
cmc
push
push
sub
ljmp
test
mov
xchg
aaa
jecxz
incl
pop
imul
push
pop
stc
cmp
shl
scas
lcall
rcll
push
xor
cltd
pop
inc
movsl
lods
je
data16
adc
adc
pushf
fstps
cmp
and
push
mov
mov
lods
or
sbb
popf
outsb
adc
iret
adc
mov
pusha
pop
gs
cli
daa
in
stos
adcl
mov
pop
inc
ljmp
pop
adc
iret
inc
popf
es
mov
js,pt
out
mov
cmpsl
or
xchg
adc
xchg
push
je
pop
out
addr16
jo
ja
cmp
std
mov
jnp
outsb
pushf
je
adc
dec
enter
xor
es
outsl
pop
lea
pop
xchg
pushf
sbb
pop
xor
push
mov
test
cs
xor
mov
rcl
cmp
mov
aad
xor
sbb
roll
imul
popa
aam
int
mov
roll
add
stos
pop
fbld
imul
subl
push
mov
cmpsb
adc
addr16
or
sarl
adc
xor
add
iret
into
mov
fs
arpl
dec
lods
sub
pop
repnz
test
mov
inc
xor
adc
push
dec
cld
in
stos
out
cwtl
movsl
dec
sahf
cmp
stos
aas
pusha
outsb
jns
or
or
mov
stc
or
popa
sahf
sti
mov
mov
jle
stc
inc
pop
outsl
pushf
aam
mov
std
lds
js
xchg
mov
leave
pop
insl
into
daa
arpl
test
or
rcrl
mov
inc
subb
or
xchg
cmp
cmp
pop
outsl
outsl
in
stos
outsl
cmc
imul
jae
jbe
push
push
mov
xor
xor
or
clc
pop
pop
xlat
sarb
jle
and
cmp
int
or
repz
enter
das
test
pop
lds
and
les
sbb
lock
shlb
and
clc
xchg
adc
or
sub
decl
xchg
sub
and
xchg
jl
cmp
pop
fsubrp
xchg
and
and
push
fwait
fs
sbb
xchg
dec
outsl
dec
push
gs
mov
enter
cmpl
test
lds
cs
cmp
or
cmp
cwtl
aad
idiv
stc
outsl
fwait
push
push
scas
ret
xor
les
pushf
xchg
pop
mov
push
pop
mov
mov
sbb
dec
pop
push
sbb
or
popf
scas
adc
sbb
mov
or
xchg
clc
idivb
or
mov
lock
and
pop
or
cmpsl
icebp
cmp
fsub
mov
shll
cmp
and
dec
dec
jle
mov
pop
pop
pusha
pop
push
xchg
or
mov
lods
mov
mov
mov
pushw
lahf
popf
sbb
insl
inc
and
lea
es
jecxz
add
orb
sar
jecxz
xor
cltd
or
testl
jp
push
mov
push
shll
jecxz
xor
jb
stc
repnz
iret
push
cmp
mov
or
popa
mov
mov
push
out
inc
sub
adc
push
and
jne
lds
dec
xchg
mov
lea
fwait
aas
or
mov
xchg
xchg
pop
mov
lds
dec
mov
arpl
mov
lcall
dec
jmp
mov
jmp
dec
loop
sub
add
cmp
pop
popf
fiaddl
scas
cmp
push
adc
pop
inc
sbb
or
mov
data16
clc
mov
stos
mov
lods
mov
inc
pop
lea
sub
pop
xchg
shll
outsb
push
aam
inc
loop
dec
xchg
xchg
test
pop
cmpsl
jb
pop
pop
dec
pushf
cltd
sub
jo
ror
test
inc
int
push
sbb
and
bound
ja
into
lds
iret
cmpsl
xor
jl
bound
jb
adc
xlat
push
fwait
sbb
add
cld
pop
dec
inc
sub
scas
test
dec
mov
adc
add
xchg
sub
imul
pop
js
addb
xor
pop
iret
xchg
ds
xchg
cli
xchg
xchg
sbb
rorb
mov
addl
xchg
dec
idivl
mov
xchg
pusha
stc
jecxz
mov
ret
jle
jl
lods
and
std
inc
aad
nop
pop
inc
xor
xor
out
mov
cltd
dec
test
jl
adc
int
pop
clc
cmp
in
push
jbe
xor
jmp
call
gs
jge
push
jns
pop
je
mov
xor
push
and
std
adc
inc
outsl
cltd
or
popf
repz
add
hlt
xor
rcl
push
pusha
lods
mov
in
stos
out
sub
mov
push
dec
and
jl
or
loop
call
push
in
xchg
sbbl
dec
test
ja
xchg
jbe
push
jo
testl
mov
adc
dec
ljmp
outsl
js
xor
mov
or
out
ret
call
js
mov
fidivrs
inc
cmc
test
pop
jae
lcall
iret
mov
mov
jmp
leave
push
dec
stos
xlat
jle
fmul
cmp
cltd
pop
sub
jg
cmp
test
mov
mov
mov
std
leave
addr16
push
outsb
dec
lods
enter
sub
xor
fnstcw
sbb
xchg
sbb
aam
mov
cld
sub
pusha
mov
scas
out
inc
int
aam
adc
lcall
addr16
pop
push
xchg
push
fmull
jne
lods
cld
and
mov
nop
sub
sar
xor
jg
xor
fdivs
movsb
and
mov
add
add
mov
xor
fcmovne
in
mov
xchg
out
mov
sahf
shll
pop
mov
loope
imul
fistps
dec
lds
cld
jne
fsubr
testb
dec
mov
xor
and
pop
sbb
or
fisubl
add
and
ljmp
pop
or
out
sbbb
cmpsl
lods
pop
mov
pusha
or
or
pop
jo
mov
mov
loop
adc
cmp
rclb
mov
inc
loop
jg
loopne
pop
test
mov
mov
adc
test
in
cmp
cs
jbe
loop
into
ja
movsl
loopew
mov
outsl
or
loope
jg
pop
mov
cmpsl
jle
mov
sub
test
push
sahf
jle
mov
and
pop
xchg
sub
adc
adc
xchg
xor
pop
lret
inc
xor
adc
jae
sti
ds
jae
dec
cmp
sti
push
sub
mov
orb
data16
or
daa
imul
and
icebp
sub
jp,pn
add
push
jb
xor
imul
or
and
movb
jns
mov
xor
orl
ror
push
push
pop
mov
dec
cmp
xchg
mov
or
jb
lcall
jle
and
sbb
cmp
jle
mov
xor
in
push
and
xorb
clc
lahf
clc
ret
adc
test
inc
add
xor
cmp
sbb
fsubs
addr16
adcl
cmp
mov
xor
add
adc
in
xor
pop
mov
add
insl
adc
sti
mov
enter
mov
imul
sbb
sbbl
rclb
adc
pop
stos
rol
mov
xchg
cld
mov
sbb
cmp
jb
in
inc
mov
sub
add
jne
stos
aam
ljmp
leave
add
ret
xor
ljmp
fwait
cmp
in
imul
ja
dec
mov
mov
arpl
jo
adcl
mov
pop
mov
lea
scas
jl
xchg
adc
sbb
xchg
stc
pop
movsl
xor
gs
or
cli
sbb
xor
ljmp
test
leave
mov
xor
rcrb
pop
fistps
push
pop
pop
and
mov
addr16
ret
jae
mov
add
mov
into
dec
das
adc
xor
ds
insb
jnp
daa
aam
mov
cmp
jb
int
fists
shlb
pop
and
inc
push
jmp
mov
bnd
inc
mov
sub
ja
mov
dec
rolb
sbb
pop
and
or
fs
cmp
pushf
adcl
test
push
clc
imul
cli
add
xchg
cs
sbb
sub
aas
xlat
imul
jb
aam
js
adcl
push
mov
xor
or
sahf
pop
xchg
sub
icebp
popf
mov
test
std
dec
or
dec
sub
push
sahf
imul
into
lret
out
dec
inc
jb
or
jp
mov
cli
lret
push
dec
jnp
popa
or
insb
pop
ror
test
xor
add
pop
pop
add
sbb
mov
into
sub
sub
push
sbb
mov
sub
mov
mov
and
popa
outsl
arpl
push
das
mov
aam
push
pop
ss
add
outsb
cmp
inc
mov
mov
cmp
shlb
adc
sub
sahf
inc
mov
mov
aad
les
cmp
adcb
push
xchg
mov
das
aad
fstpt
pushf
sub
xchg
lods
xor
testb
incb
mov
xchg
fwait
cli
push
in
popa
shl
mov
dec
out
or
pop
imulb
hlt
mov
inc
push
enter
cmp
mov
fimull
xchg
mov
xchg
adc
stc
push
leave
cmpsl
push
xor
sbb
sbb
test
adc
mov
add
stc
mov
xor
insb
cmpsb
pushf
repz
aas
loop
mov
inc
pop
or
or
cmp
pusha
bound
sbb
pop
mov
lret
cld
pop
imul
dec
lret
xlat
lods
popaw
mov
aaa
add
pop
mov
mov
mov
les
stc
sbb
lds
jne
loope
fdivrs
adc
cwtl
inc
mov
xchg
iret
and
push
xor
enter
outsl
dec
push
add
pop
push
rcrb
lock
inc
imul
sahf
lcall
rcrb
jle
cmovg
adc
push
push
std
jb
sbb
sub
xor
jae
shlb
add
pop
mov
lock
sub
sub
or
jecxz
mov
pop
fisubrl
mov
sbb
push
mov
addb
gs
test
push
adc
outsb
fbstp
in
lea
call
mov
mov
dec
jecxz
mov
ficoms
xchg
les
fbld
aam
push
sub
xchg
jb,pt
jnp
xor
ljmp
leave
jl
popf
cmp
cmp
pop
add
in
subb
sbb
icebp
sub
cli
xor
mov
mov
adc
add
adc
inc
xchg
mov
gs
fs
xorb
incb
jmp
ror
or
pop
sub
dec
shl
cld
lcall
cmp
cs
gs
adc
andb
dec
dec
push
xchg
fdivl
push
int
inc
out
int3
aaa
xchg
inc
jmp
jbe
mov
or
popf
leave
pop
les
push
out
jle
push
fwait
push
in
test
lret
mov
ret
xchg
mov
enter
lock
push
jnp
jne
push
outsl
ret
stos
nop
sbb
add
cmp
cmpsb
cmpsl
cmp
mov
push
fnstenv
aad
jg
push
inc
pop
ljmp
sahf
sub
cs
cltd
sub
cmp
cmp
lods
repnz
into
jae
into
flds
jge
add
fs
mov
fistpll
jnp
addr16
inc
jl
mov
lret
insb
dec
adc
jns
cmp
pusha
fstpt
mov
les
and
or
or
mov
dec
int
cs
pop
sub
adcl
negl
fildll
insl
test
mov
jge
out
sti
sbbb
adc
shrb
out
cmp
sbb
or
push
in
sbb
iret
imul
notb
lock
mov
dec
dec
cmp
sub
sub
les
mov
jb
xor
jnp
bound
pop
push
lock
and
mov
mov
jbe
mov
out
das
push
add
xchg
push
popa
sbb
push
cmp
lahf
pop
fmul
pop
roll
mov
cmpsb
fistpll
pop
clc
fsubrp
adc
out
leave
mov
mov
pushl
mov
xchg
dec
push
cmp
loop
aam
mov
je
sub
xorb
dec
mov
outsl
flds
sub
stc
add
ficoml
mov
jle
in
xchg
dec
aaa
dec
insl
loopne
xchg
aas
orb
cltd
mov
aas
dec
mov
bound
addl
in
pusha
mov
fistpl
insb
fsts
jmp
xchg
out
vprotq
call
lret
dec
cmp
push
jo
fcom
sbb
pop
xor
js
faddl
xor
push
mov
movsl
cmpsl
cmc
add
test
jmp
inc
loopne
cli
dec
fcoms
test
adc
shrb
movsb
sarb
fwait
ljmp
push
lods
lahf
popf
mov
fsubrp
or
call
and
dec
sar
push
fwait
mov
enter
imul
and
mov
mov
movsb
arpl
pop
icebp
or
dec
fsts
dec
mov
nop
mov
and
mov
push
jle
xchg
add
fcoms
xchg
or
adc
clc
negl
stc
scas
fimuls
mov
dec
mov
bound
outsb
fcomp
mov
cmpsl
cmp
outsb
call
fisttps
xor
xchg
hlt
sbb
cld
outsl
dec
xchg
push
jae
xor
dec
add
ret
testl
adc
movsb
das
out
aam
jnp
push
dec
jo
scas
mov
repnz
xchg
inc
imul
push
jmp
or
mov
push
jmp
mov
xor
int3
mov
push
adc
pop
jge
adc
std
pop
sub
aaa
or
jne
movsb
push
push
push
in
loope
pop
xchg
add
cmpsl
mov
cmp
fldlg2
adc
sub
xor
repz
test
xor
xchg
push
push
add
inc
cmp
jl
scas
add
imul
adc
mov
ja
pop
and
std
lcall
adc
cmp
jle
lea
mov
xchg
imul
or
and
sub
clc
dec
push
sub
sarb
in
icebp
sbb
ljmp
inc
push
dec
testl
data16
mov
adc
cltd
invd
pop
lock
movsl
sub
or
mov
aam
mov
push
lret
popf
icebp
sbb
aad
cmpsl
xor
cli
add
dec
jg
in
stos
lea
gs
hlt
mov
pop
cmp
mov
fsubrs
fcmovnbe
fsubs
mov
insb
popa
ds
in
or
arpl
push
pop
lcall
mov
int3
leave
fcom
xorl
incb
in
sub
notl
mov
mov
push
aad
lea
sub
adc
sub
jl
stos
xchg
out
inc
mov
push
mov
dec
pop
sti
jg
icebp
out
fidivrl
adc
inc
lcall
aaa
subb
lea
mov
adc
stos
cwtl
ret
cmpsb
jmp
mov
sub
cmc
mov
mov
in
stc
aad
icebp
aaa
mov
cmp
in
cmp
inc
test
jne
daa
lret
and
push
adc
mov
cmp
sub
loope
pop
loope
lret
mov
stos
xor
add
imul
notb
out
cmp
add
addr16
and
aas
pop
loope
subb
addb
mov
cmp
mov
pusha
push
lods
insl
rsqrtps
cld
repnz
ds
into
xchg
fmulp
cmp
mov
in
sbb
dec
xor
inc
sub
xor
mov
sbb
push
outsl
ret
or
xchg
sti
push
add
repz
lea
sub
adc
cmp
mov
xor
mov
sti
lcall
jle
jg
fisubs
cmp
pop
jmp
xor
jmp
in
jnp
mov
jo
jne
call
stc
popf
jbe
ja
and
push
out
fwait
and
sarb
lret
pop
push
clc
mov
out
cmp
test
cmp
mov
push
in
jl
mov
call
mov
into
inc
loopne
adc
mov
pusha
jnp
xchg
mul
loop
xor
out
mov
fists
dec
xchg
cmpsb
pop
je
imul
mov
les
add
int
repnz
cwtl
add
add
xor
pop
loopne
fwait
push
mov
or
lock
ljmp
push
out
mov
mov
mov
inc
jae
push
or
idivl
add
in
cmp
adc
sub
mov
and
sbbb
sub
imul
xor
jae
pop
jmp
and
xchg
or
adc
rcll
addl
aad
inc
ret
adc
pop
bound
jmp
inc
insl
je
test
int3
cmp
in
pop
jg
push
les
push
rcrb
xor
sbb
test
mov
or
pop
les
cmpsl
mov
das
mov
cwtl
mov
shll
cmp
mov
jl
adc
ds
jge
xchg
add
repz
adc
xchg
lret
outsl
cmp
mulb
or
out
mov
jle
jmp
jno
and
add
sbb
sbb
mov
xabort
stos
mov
xchg
xor
jp
jmp
insl
loope
ret
sbb
cmp
mov
cmp
daa
push
dec
mov
leave
mov
ja
xor
gs
jge
ret
xchg
or
adc
je
call
sbb
cmpsb
lahf
cwtl
xchg
pushf
loop
aas
mov
in
repnz
adc
push
fbld
inc
pop
imul
dec
jmp
sbb
ja
int3
inc
mov
and
int3
shll
push
scas
or
dec
ds
mov
inc
push
fcompl
cli
dec
lods
xor
push
ficompl
jns
rolb
push
in
sbb
mov
lods
or
sbb
and
rolb
mov
loopne
divb
repz
xchg
push
push
lock
pop
lret
mov
mov
aad
into
ds
inc
pop
insb
repnz
jno
pop
adc
gs
xor
insl
xor
aad
inc
cli
dec
incl
mov
and
adc
std
or
jecxz
in
push
lcall
mov
cmc
aam
sahf
mov
cmpsb
jle
sbb
push
dec
xor
dec
ret
les
and
jnp
addr16
testb
mov
je
inc
pop
movsl
add
mov
aas
sbb
nop
outsl
adc
ja
sbb
leave
lret
and
ret
mov
push
or
fwait
xchg
lcall
orl
add
xchg
das
adc
jno
repz
sbb
jae
cmp
imul
push
sbb
xchg
lock
mov
imul
ds
pop
mov
enter
sbb
adc
icebp
xchg
rolb
sbb
and
subl
loope
aam
or
push
test
jbe
lahf
ret
push
dec
xchg
outsl
mov
imul
push
mov
mov
mull
popf
mov
pop
push
sbb
sub
gs
lret
pop
imul
repz
adc
cs
std
enter
loope
jne
xor
fs
adc
scas
dec
js
sti
loope
rorb
dec
rsm
test
lcall
in
dec
lods
push
mov
dec
test
sub
inc
mov
enter
das
xor
cmp
inc
imul
or
pop
or
jp
mov
cmc
or
clc
lock
mov
mov
xor
lret
jbe
dec
in
scas
mov
mov
das
add
in
js
std
and
pop
sbb
mov
pusha
push
inc
mov
cltd
cmp
andb
shlb
push
sbb
aam
sti
sahf
js
out
bound
cli
js
push
inc
addl
call
mov
mov
rorl
dec
mov
sub
mov
mov
popf
push
lahf
sub
cmp
adc
out
movsl
xchg
xchg
xchg
mov
test
aam
inc
insb
jne
aaa
shlb
xor
push
lds
ja
adc
push
xor
inc
stos
popf
bound
and
cmp
imul
mov
loopne
pop
add
test
xchg
jns
jbe
lds
les
in
add
rorb
fcmovbe
mov
enter
push
pshufw
aas
sub
clc
sbb
ret
ret
xchg
into
and
mov
outsl
into
or
cmp
lods
xchg
and
enter
cmpsl
mov
sbb
cmp
je
sbb
stos
dec
xor
lret
jae
sti
cmc
std
std
iret
sub
flds
xor
cmp
dec
mov
jno
scas
fcoms
std
test
sub
loop
jo
inc
test
xchg
aaa
lret
mov
lods
cmpsb
mov
stos
mov
inc
dec
mov
xor
jge,pt
and
scas
hlt
xchg
ja
shrb
adc
add
push
in
mul
jl
jne
pop
pushf
jg
inc
sub
pop
lcall
jl
or
movsb
out
pusha
mov
int3
outsb
mov
addr16
out
push
cld
jp
dec
iret
es
mov
xchg
aaa
jno
std
add
xchg
lahf
out
arpl
mov
jmp
daa
aad
fisubs
aam
subl
loop
out
jmp
rcl
or
iret
popf
xchg
nop
sbb
mov
test
addr16
scas
sub
mov
inc
mov
loope
inc
adc
mov
push
testl
pop
cmpb
dec
cmc
mov
cltd
jge
mov
xor
xchg
lds
mov
jbe
roll
jno
and
dec
je
iret
test
pop
scas
in
lcall
loopne
and
mov
scas
xchg
jo
xchg
sub
lret
pop
rol
outsl
and
sti
cmp
xor
jg
dec
test
dec
outsb
pusha
xchg
mov
rcl
jle
xchg
jae
in
aad
lcall
fildl
out
fwait
leave
push
ds
movsl
shrl
jmp
push
and
xor
clc
pop
insb
into
pop
nop
dec
cli
pop
xchg
inc
imul
lock
pop
inc
test
or
out
jae
mov
mov
inc
xchg
cltd
mov
out
adc
jp
inc
bnd
push
xor
loopne
mov
cmp
jecxz
pop
out
dec
mov
ja
xchg
in
les
mov
adc
in
jns
jle
mov
data16
cmp
lods
push
adc
gs
mov
or
jo
pop
lods
lods
xchg
lods
mov
aad
mov
fs
test
fucomp
hlt
out
aaa
mov
mov
int3
mov
out
insb
dec
or
inc
cmp
lods
mov
sti
bound
xor
inc
jg
cmp
fwait
popa
mov
inc
mov
xchg
xor
xchg
dec
dec
xchg
sahf
lods
icebp
pop
pop
gs
mov
xchg
insl
cmp
leave
push
dec
cs
iret
hlt
shll
inc
mov
inc
in
lds
fistpl
push
xchg
sbb
mov
push
in
pop
sbb
jns
xchg
jne
fisubl
inc
fstl
ljmp
adc
dec
mov
lea
lods
addr16
mov
rcrl
xchg
sbb
popa
test
or
out
pop
add
push
sub
xchg
mov
add
movsl
je
pop
loope
pop
cmp
add
vmread
dec
jecxz
xchg
out
mov
push
iret
mov
mov
fs
jmp
mov
iret
pop
daa
sahf
pop
aam
scas
dec
or
lods
cltd
mov
xlat
repnz
cmpsb
mov
mov
push
push
in
das
mov
out
lods
mov
cmpsl
push
out
es
lock
cmp
outsl
mov
or
insb
mov
adc
and
inc
loope
stc
gs
dec
ret
cld
adc
out
xchg
cmp
cmpl
jnp
shll
mov
out
pop
adc
inc
decl
lods
mov
pop
movsl
mov
sub
xchg
mov
lret
ret
cmc
bound
adc
js
push
out
outsb
cld
scas
aaa
mov
xchg
les
data16
fwait
push
pop
mov
outsb
outsl
push
inc
pop
add
pop
daa
inc
and
xor
mov
dec
sbb
pop
mov
scas
or
fildl
lods
test
adc
sahf
outsb
inc
sar
xchg
mov
rcl
add
mov
mov
inc
or
mov
cltd
ror
and
pop
sbb
adc
fdivrl
icebp
cmp
imul
mov
insb
mov
out
movsb
ss
sahf
mov
icebp
test
or
xchg
push
xor
loope
dec
push
jg
test
mov
aam
imul
lret
stos
jl
fcmovu
lods
js
insl
lahf
mov
mov
roll
pop
lret
jns
inc
rcr
std
scas
dec
scas
test
das
inc
jg
xchg
loope
jg
sbb
decb
inc
cli
in
popa
jne
shll
jo
rdpmc
xor
xor
insb
adc
or
adc
testb
xchg
xor
cltd
int3
loope
insb
aas
mov
lods
scas
test
or
test
xor
lea
push
clc
fstpl
adc
adc
lods
or
xchg
cmp
or
push
idiv
shll
mov
out
pop
push
xchg
mov
rcll
cmp
sub
add
movsl
push
movsb
mov
cwtl
xchg
jno
repnz
out
mov
rolb
pusha
out
and
scas
nop
leave
mov
add
mov
fnstenv
negl
jnp
push
mov
jl
cmp
scas
fwait
mov
test
lcall
jne
in
stos
outsb
testl
loop
pop
movsb
jnp
sbb
data16
inc
xchg
dec
pop
mov
push
rolb
inc
popa
aaa
mov
push
iret
mov
dec
pop
lods
cmp
pop
adc
push
push
sub
std
xchg
pop
sub
sbb
sub
das
or
insl
dec
pop
mov
xor
add
stos
mov
dec
nop
pushf
jno
outsb
or
push
or
pop
test
mov
mov
pop
arpl
jnp
ficomps
cmp
ljmp
lods
cwtl
out
jmp
xchg
xchg
mov
jle
in
cmp
stos
jge
mov
in
inc
in
mov
scas
into
jmp
push
arpl
push
stos
fldl
cmp
sub
outsl
cwtl
push
mov
popf
xor
scas
add
pop
test
gs
outsb
lret
shlb
insl
and
rcll
mov
fwait
jno
xor
adc
rcr
in
mov
add
cmp
jo
outsb
jecxz
ss
mov
inc
scas
lcall
mov
movsl
and
outsb
test
jl
popa
jge
in
int3
inc
and
sarb
sbb
cmp
xor
movsl
pushl
stc
jne
ja
mov
not
mov
jb
idivl
xchg
and
in
or
mov
xchg
inc
push
mov
filds
push
test
mov
xchg
in
js
push
mov
icebp
cmp
cmpsb
imul
pop
imulb
stos
push
xchg
cwtl
add
sarl
adc
mov
jne
iret
pushf
mov
mov
mov
or
push
sbbl
sbb
mov
in
and
repnz
push
aas
icebp
mov
adc
insb
sub
cmp
xor
sub
push
and
adc
shlb
les
adc
lock
sub
pop
push
add
mov
add
cmp
jmp
xchg
add
jmp
push
pop
mov
test
push
pop
lea
sub
mov
mov
mov
add
mov
not
add
push
pop
dec
and
add
and
and
jo
xor
jne
mov
mov
push
pop
mov
cmp
lea
add
jne
xor
xor
mov
push
mov
add
sub
mov
pop
sub
pop
cmp
cmp
mov
push
pop
push
pop
pop
mov
push
pop
cmp
sub
mov
sub
mov
mov
add
jge
jmp
mov
mov
cmp
push
pop
mov
sub
jnp
push
pop
jbe
mov
mov
test
add
mov
sub
jbe
sub
cmp
sub
mov
pop
xor
cmp
push
pop
sub
mov
sub
mov
mov
add
push
pop
not
xor
not
jbe
sub
mov
mov
add
dec
lea
jns
cmp
xor
mov
and
xor
not
and
sub
inc
jne
not
sub
not
xor
inc
xor
push
pop
sub
push
pop
not
xor
cmp
not
push
pop
mov
push
pop
mov
push
pop
mov
jne
push
pop
mov
push
pop
mov
jne
jo
lea
inc
xor
and
push
pop
push
pop
push
pop
cmp
xor
mov
sub
push
pop
and
push
mov
add
mov
xor
lea
add
mov
sub
push
pop
jb
cmp
cmp
mov
cmp
jmp
push
mov
add
mov
call
jae
push
pop
mov
dec
cmp
cmp
cmp
mov
pop
mov
lea
sub
xor
cmp
cmp
mov
mov
xor
xor
not
mov
add
push
pop
add
cmp
cmp
mov
jp
push
pop
mov
push
pop
js
mov
push
pop
push
pop
mov
jne
mov
push
pop
xor
test
add
push
pop
lea
xor
cmp
push
pop
push
pop
mov
push
pop
push
pop
mov
jmp
mov
inc
test
lea
add
ror
mov
sub
mov
mov
add
xor
push
pop
sub
mov
mov
add
cmp
mov
xor
cmp
push
pop
push
pop
cmp
push
pop
mov
jnp
push
pop
push
pop
mov
mov
mov
mov
mov
not
jne
jmp
mov
push
push
pop
push
pop
dec
jbe
mov
mov
mov
mov
sub
mov
mov
add
test
test
jmp
push
pop
jmp
mov
mov
push
pop
xor
cmp
mov
je
sub
cmp
inc
je
cmp
jmp
xor
add
xor
add
lea
and
mov
jo
jg
push
pop
je
mov
mov
test
jmp
add
not
dec
push
pop
xor
cmp
jmp
jmp
xor
add
cmp
ja
cmp
cmp
not
push
mov
add
jae
mov
inc
cmp
cmp
push
pop
not
jmp
add
push
pop
add
xor
push
jmp
ret
outsl
jb
cmc
ds
stos
mov
adc
add
add
dec
jecxz
add
add
mov
adc
adc
jg
inc
dec
mov
test
add
es
push
inc
mov
xchg
jmp
add
jge
add
xor
inc
in
lcall
andl
jge
decl
mov
add
mov
dec
or
in
xor
adc
jg
fsubl
add
add
cltd
pushf
incl
add
and
add
out
inc
add
add
lods
and
add
add
add
add
sub
pop
xchg
roll
add
add
jmp
movsl
jb
loopne
cmp
decl
mov
daa
cltd
xlat
adc
cmpsb
repnz
lret
xor
adc
fcoms
pop
xchg
sub
jmp
mov
sbb
push
inc
cld
cmp
outsb
mov
sti
mov
test
mov
pop
arpl
xchg
mov
push
hlt
mov
xchg
or
xchg
mov
cltd
lds
cmp
jp
les
scas
dec
add
mov
inc
loope
push
and
outsb
stc
icebp
sbb
aas
inc
xor
sarl
mov
loop
or
mov
and
push
pop
inc
pop
cmp
dec
push
mov
mov
insb
gs
add
mov
mov
xchg
push
mov
xchg
shrl
add
xor
jb
mov
movsl
call
add
test
adcl
xor
add
add
incl
add
pop
cs
fwait
fs
repnz
and
add
add
add
add
xor
mov
push
jge
add
mov
call
sbb
es
add
sti
aam
add
adc
jp
inc
xchg
sbb
xor
andb
pop
add
add
jmp
xor
pop
incl
add
jmp
add
sub
push
sbbl
sub
add
sub
and
add
scas
and
mov
in
test
sub
stos
dec
push
test
loopne
sub
shl
aas
test
xchg
stos
repz
mov
jmp
dec
cmpsb
dec
test
faddl
xor
cld
lds
test
shll
jnp
scas
adc
test
adc
mov
jnp
mov
adc
test
sub
scas
adc
mov
mov
push
addl
test
adc
mov
jnp
mov
adc
test
sub
scas
adc
mov
cli
std
xor
scas
adc
test
adc
mov
jnp
mov
adc
test
sub
mov
adc
mov
add
in
test
scas
adc
test
adc
mov
jnp
mov
adc
test
sub
mov
adc
mov
lods
inc
mov
test
scas
adc
test
adc
mov
jnp
mov
adc
test
sub
mov
adc
mov
inc
pop
ja
add
xor
mov
nop
mov
lcall
fwait
push
data16
movsb
fs
movsb
add
aam
sar
add
push
adc
scas
adc
xchg
push
ljmp
adc
mov
push
mov
xchg
scas
adc
jne
sbb
cmp
scas
adc
subb
mov
push
sub
push
adc
mov
cmpsb
mov
xchg
scas
adc
jge
or
sub
xchg
and
stos
jmp
add
test
test
push
test
test
add
add
add
add
scas
dec
cmp
dec
adc
mov
pop
aad
scas
adc
mov
lods
sti
inc
cld
add
xor
add
imul
adc
xchg
pop
aad
scas
adc
add
add
and
sub
add
mov
or
add
add
jge
cld
and
add
add
pop
xchg
add
add
test
add
jo
add
jle
mov
add
add
sbb
add
add
add
jno
cwtl
cs
adc
and
sub
addl
test
scas
adc
in
mov
test
xor
adc
mov
mov
iret
sub
or
in
mov
mov
test
int
jge
add
mov
dec
mov
xchg
mov
test
mov
mov
xorl
add
dec
jnp
add
inc
sbb
or
adc
test
jnp
scas
adc
push
sbb
aad
clc
test
aad
adcl
scas
adc
sub
cmp
scas
adc
inc
add
add
scas
adc
cld
add
add
and
mov
mov
imul
mov
mov
dec
scas
imul
adc
jne
mov
cmpl
jne
mov
cmpl
inc
incl
add
sub
test
std
jge
mov
aad
cwtl
scas
adc
cs
aad
sub
add
mov
add
add
test
mov
std
addl
adc
scas
mov
cmc
leave
mov
cmpsl
mov
add
adcl
scas
adc
sub
mov
test
jnp
scas
adc
test
cld
jge
or
testl
lcall
sar
stos
xor
sbb
scas
add
add
push
sbb
xor
cmpl
bound
add
adcl
sub
mov
sbb
xor
jge
mov
mov
add
addl
adc
mov
jae
mov
adc
jmp
dec
fwait
movsb
xorl
mov
test
mov
std
xorl
aad
lea
mov
mov
cmc
leave
mov
movsl
cmp
js
adc
add
mov
add
sbb
xor
sbb
aaa
jmp
mov
adc
jmp
dec
fwait
clc
xor
scas
adc
leave
xchg
cmp
pop
sub
add
inc
inc
adcl
add
mov
mov
fistl
aad
adcl
scas
adc
sub
test
add
mov
adc
mov
cld
add
add
mov
add
imul
test
lret
fs
mov
scas
aaa
dec
jmp
push
push
push
test
jnp
mov
test
dec
inc
test
dec
jnp
mov
std
iret
std
test
aas
cmp
mov
inc
fwait
sbb
mov
cwtl
mov
test
loopne
push
loopne
xor
sbb
push
std
cmp
push
scas
aad
sub
aad
dec
gs
or
pusha
cmp
add
test
add
add
xchg
pop
scas
adc
std
sub
add
lods
fs
xorl
jnp
js
scas
adc
cmp
jae
mov
adc
push
test
test
lcall
xor
adc
scas
mov
mov
dec
mov
jge
lods
add
std
test
std
xor
add
std
test
std
xor
scas
adc
jge
cld
aad
in
cmpl
sub
pushl
add
mov
add
xlat
add
dec
add
fildll
add
add
add
push
add
or
add
sub
jmp
das
add
mov
add
popa
fs
jo
xor
cs
insb
add
sub
add
or
add
das
add
aas
add
dec
add
pop
add
imul
add
add
test
add
mov
add
add
sub
add
or
add
das
add
aas
add
dec
add
pop
add
imul
add
add
test
add
mov
add
add
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
push
add
push
gs
outsb
jne
dec
gs
js
add
inc
outsb
jne
dec
gs
add
add
addr16
outsb
jne
push
popa
insb
jne
push
add
add
addr16
insb
jne
push
or
push
gs
outsl
je
data16
push
dec
gs
popa
insb
jne
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
push
gs
gs
popa
insb
jne
inc
js
add
gs
xor
fs
insb
add
add
add
add
out
add
add
add
or
jb
outsb
je
inc
add
jb
gs
xor
cs
insb
add
das
add
add
add
adc
add
add
add
push
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
fs
insb
cs
insb
add
das
add
in
das
add
imull
add
adc
add
and
add
aas
xor
add
add
jno
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
pop
xor
add
add
add
das
add
in
das
add
imull
add
adc
add
and
add
aas
xor
add
add
jno
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
pop
xor
add
add
add
add
outsl
imul
addr16
jb
outsb
je
adc
dec
je
insb
insb
outsl
arpl
gs
imul
gs
outsl
jb
add
add
inc
jb
popa
je
push
jb
imul
dec
je
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
jb
arpl
jae
adc
dec
je
jne
jb
push
jns
je
insl
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jne
jb
push
imul
gs
outsl
jb
add
add
push
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
jb
arpl
jae
pop
add
push
gs
outsb
je
jb
popa
insb
push
jb
imul
dec
je
je
jb
push
jb
imul
dec
je
je
jo
jb
imul
dec
je
jb
je
inc
imul
insb
inc
fs
jae
push
jb
jbe
insb
gs
add
insb
dec
jne
je
inc
jns
gs
outsl
push
outsb
imul
sbb
dec
je
je
je
jae
outsl
inc
outsl
jae
jb
outsl
jb
push
add
insb
push
outsb
imul
dec
gs
dec
add
add
insb
push
outsb
ja
outsb
add
add
jb
outsb
je
add
add
jae
push
ja
jae
outsb
add
add
push
add
pop
jae
jb
arpl
