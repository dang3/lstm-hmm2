mov
add
mov
sbb
roll
mov
cld
mov
lods
stos
aam
insb
loope
imul
inc
jle
jae
loope
aas
dec
jecxz
adc
xchg
clc
popa
fcompl
sbb
repnz
arpl
xchg
adc
sbb
pop
mov
in
dec
ficompl
out
lods
loop
xchg
les
aad
leave
dec
sarl
fsubl
pop
pop
nop
xlat
stos
or
xchg
sbb
xchg
mov
inc
aad
das
shlb
mov
inc
add
in
out
mov
cmp
sahf
mov
pop
xchg
push
call
cmp
push
shll
cmp
ret
add
xchg
paddd
dec
push
jne
int
or
mov
xor
pop
jb
or
mov
mov
dec
shll
and
call
clc
mov
lea
dec
btc
push
and
clc
push
and
or
bts
sets
xor
push
cwtl
movsbw
setbe
lea
pushf
mov
mov
mov
call
pushl
lea
call
pusha
jmp
jmp
call
add
dec
outsl
arpl
inc
jb
add
fs
je
pusha
lea
jmp
sub
mov
mov
adc
nop
push
fs
sbb
in
add
ss
push
push
icebp
mov
movsb
cmp
jp
cmp
rolb
push
inc
push
iret
push
adc
mov
jno
orl
inc
xchg
xchg
push
and
ja
mov
dec
lods
jns
cwtl
xlat
enter
ret
loope
add
movsl
popa
dec
pop
sub
sub
or
mov
lahf
add
or
cmpsb
pop
mov
scas
fdiv
mov
mov
ljmp
lds
sbb
push
in
adc
ret
lds
scas
pop
xchg
and
and
out
push
sti
jne
mov
aam
mov
cli
je
dec
or
fisttpl
adc
add
mov
loope
int
int
push
dec
mov
xchg
pop
pop
pop
ret
pop
jg
repz
aaa
inc
lret
mov
push
cmp
fdivrs
pop
xchg
jecxz
test
inc
or
and
movsl
mov
loopne
ds
push
jp
push
jae
or
cmp
add
lahf
cltd
pop
jmp
or
insb
hlt
inc
adc
pusha
jl
dec
mov
add
std
lds
lds
andl
in
outsl
out
push
rclb
jl
shrl
mov
push
xchg
mov
jbe
into
and
mov
fmuls
xor
add
subb
and
cmc
cmp
cmp
cmp
pushf
pusha
push
lea
jae
cmp
mov
pusha
jmp
mov
sbb
mov
cmp
cmp
test
clc
sub
pusha
cmc
cmc
cmc
repnz
push
call
setbe
seto
pushf
mov
lea
push
pushf
lea
call
call
or
mov
jmp
mov
lea
jne
sub
mov
mov
sub
bsr
bsf
push
lea
cmc
push
pusha
sub
cmc
pushl
popl
clc
stc
pusha
cmp
mov
jmp
bt
pusha
or
pushl
jmp
push
inc
or
dec
bnd
dec
faddl
in
xor
call
mov
cld
jl
jbe
mov
mov
into
add
mov
call
out
pop
cli
add
xchg
fwait
xchg
cld
mov
mov
dec
push
xchg
inc
sahf
scas
lock
movsl
jnp
push
movsl
movsb
imul
and
insb
cmp
movsb
pop
push
outsl
das
xchg
dec
xor
repz
ud2
neg
std
push
xor
sub
cmp
test
addr16
stos
das
mov
cmp
xor
xchg
enter
es
push
pop
stc
fnstenv
popa
popf
mov
push
pop
outsb
xchg
or
xlat
inc
push
jg
inc
aad
xchg
mov
pop
push
push
pop
pop
or
sbb
xchg
or
addl
jb
mov
adcb
adc
pop
sarl
mov
dec
push
sub
lret
cli
push
xchg
outsl
mov
sub
outsb
test
imulb
es
xor
icebp
mull
dec
mov
pop
lret
repnz
or
inc
mov
and
and
insb
sahf
nop
and
jne
addb
imul
hlt
push
xchg
sub
add
pop
add
mov
lea
and
imulb
daa
daa
aas
iret
sbb
or
stos
or
mov
icebp
shlb
pushf
shrl
stos
jnp
xor
mov
aad
cwtl
je
das
sub
imul
es
pop
repnz
int
sbbb
xchg
std
pop
cmp
popf
sub
int3
imul
sahf
mov
mov
inc
inc
mov
inc
daa
cltd
add
call
pusha
enter
test
add
ds
push
lods
rcl
shrl
inc
jno
push
xor
dec
push
dec
mov
mov
je
add
cld
pop
loopne
mov
aaa
clc
repz
mov
repz
rcr
cmpsl
fwait
popf
gs
pop
xor
mov
imul
je
bswap
movzbw
add
xor
mov
cmc
add
jmp
mov
mov
movsbl
mov
call
in
sbb
insb
add
arpl
mov
push
dec
mov
repz
mov
inc
incl
xlat
xchg
and
cmp
push
out
push
or
movsb
jae
pop
mov
rolb
add
test
sbb
lods
push
stos
sti
mov
pop
popa
xchg
jae
xor
jb
or
xchg
addb
xlat
pushf
in
push
aam
xchg
push
fmull
insl
loop
inc
inc
sbb
ljmp
inc
and
inc
pushf
movl
pusha
movl
mov
pushf
lea
jmp
sub
test
test
pusha
neg
bt
cmp
call
jmp
mov
adc
jecxz
jbe
push
and
test
pushf
lods
into
addr16
gs
inc
lds
push
push
les
aam
call
inc
les
sub
pop
mov
cwtl
push
fsubrs
dec
leave
lds
push
sbb
pop
icebp
mov
cmp
ss
pop
jl
fldenv
sub
add
cmpb
test
push
sub
mov
mov
push
mov
push
cltd
push
movsb
nop
arpl
mov
movsb
ljmp
inc
fisubs
cwtl
iret
and
dec
aaa
sub
mov
mov
inc
lcall
test
leave
mov
icebp
cmc
and
dec
bt
add
lea
js
test
cmc
test
push
movb
call
movl
call
inc
pushf
call
lea
je
cmc
cmp
add
clc
cmc
test
cmp
pushf
movw
lea
jb
call
call
rol
mov
pusha
pushf
inc
pushf
stc
test
xor
call
fisttpl
push
daa
pop
stc
sbb
or
stc
push
daa
push
adc
pop
sbb
adc
daa
or
adc
daa
adc
push
daa
adc
or
sti
push
or
adc
daa
or
adc
daa
adc
adc
or
or
add
dec
cld
xchg
test
and
add
bswap
mov
mov
and
and
xor
sub
add
pushf
and
lea
pushf
push
sub
clc
test
mov
clc
pushl
popl
pusha
test
bt
cmp
pushf
lea
ja
inc
ror
xor
sub
push
and
test
bswap
lea
add
bswap
xor
mov
clc
bt
sbb
and
mov
cmc
test
test
repnz
push
pushf
pusha
lea
jne
movzbw
mov
not
movb
lea
lahf
mov
push
lahf
lahf
lea
call
mov
inc
jae
outsl
ret
mov
xlat
out
arpl
cmp
scas
jp
mov
inc
mov
cmp
aam
adc
ret
jmp
test
popf
push
cmp
sbb
cmp
inc
inc
cmp
or
sbb
mov
insb
pop
and
insb
pusha
xor
pcmpeqb
dec
out
into
ret
ficoml
loop
mov
add
mov
xor
xchg
push
pop
out
inc
and
insb
jmp
push
lock
std
std
mov
and
add
js
and
lea
add
cltd
adc
pop
jp
xor
ret
jl
jge
mov
mov
dec
inc
push
and
aam
push
ret
in
shll
adc
test
push
popf
add
mov
inc
push
mov
mov
movsb
add
or
ror
jmp
sbb
inc
lea
je
push
lea
jmp
cmp
mov
cmp
dec
adc
dec
jnp
inc
xor
xchg
cmp
imul
push
fimull
ret
insb
mov
xor
sub
in
loop
insb
and
outsl
push
movsb
mov
mulb
pop
mov
sbb
jo
popa
jno
inc
fcmove
outsb
scas
xor
shll
into
cmpsb
pushf
inc
movsb
mov
clc
adc
pop
gs
xor
push
pop
imul
jno
out
mov
add
inc
jae
je
mov
fs
dec
mov
daa
mov
pop
pop
mov
jmp
data16
pop
iret
push
mov
lahf
sub
mov
icebp
lods
cmpl
xor
sub
mov
and
cli
jg
jno
je
cmpsl
sbb
and
adc
sub
sbb
cwtl
or
test
incb
jae
mov
shlb
mov
adc
sti
jae
jne
cmp
cwtl
loopne
mov
lret
cwtl
sahf
dec
sbb
in
jae
cmp
pop
inc
icebp
push
and
in
add
das
orl
mov
mov
hlt
in
lock
push
outsb
sbb
push
jecxz
outsb
mov
rcll
jae
sub
jnp
test
sbb
ss
popa
test
mov
push
sub
xor
or
out
cmp
ss
add
call
push
pushf
movl
mov
movl
push
lea
jmp
pusha
call
pop
mov
pushf
pushf
pusha
pushl
ret
pushf
movw
pusha
pushl
movl
pushf
lea
jmp
pushl
cmc
xor
test
repnz
pushf
lea
jne
pushf
pushl
push
mov
lea
jmp
mov
or
aam
jg
outsl
fwait
scas
fisttps
cmp
mov
or
es
lahf
cwtl
and
int3
idiv
or
xlat
mov
pop
mov
mov
aad
call
not
mov
mov
dec
and
pushf
sti
mov
and
inc
iret
jae
lahf
or
sub
mov
or
inc
stos
movsb
in
testl
push
out
cmpsb
mov
fiadds
and
decb
xchg
shll
mov
scas
cmpsl
fiaddl
sbb
inc
xor
mov
xchg
hlt
std
xorl
mov
lds
sarl
arpl
repz
bound
aaa
xor
pop
pop
idiv
cltd
jmp
xor
mov
cmp
sti
fidivs
lods
pop
sbb
pushl
ficompl
jecxz
pop
popa
lahf
rcr
popa
out
jbe
xor
or
sub
fdivl
test
stos
divl
pop
imul
mov
fcoms
pop
xchg
and
push
add
call
xor
xchg
daa
lret
test
jmp
les
rcrl
mov
test
lds
add
lret
jne
fs
ljmp
pusha
jbe
sbb
xor
mov
xchg
and
scas
push
mov
mov
mov
ja
mov
cli
mov
pop
iret
fsubs
lret
sub
cld
dec
in
and
ljmp
out
sub
sbb
push
adc
imul
pop
sbb
push
adc
adc
pop
fistpll
imul
lretw
xchg
adc
mov
adc
mov
mov
fbld
mov
rcr
stos
test
gs
fmuls
jmp
mov
subb
jae
movsl
in
mov
out
jno
xchg
addr16
fisttpl
xchg
xchg
sti
add
sub
dec
dec
sub
enter
out
rolb
mov
enter
mov
leave
ret
mov
or
dec
sub
mov
dec
push
lcall
mov
cmp
loopne
inc
cmc
repz
lcall
pop
mov
xor
pushf
push
and
push
orb
lahf
stc
add
adc
inc
lock
dec
push
xchg
xlat
mov
ds
insb
int3
jno
mov
rorl
pop
adc
call
add
inc
adc
sub
pusha
push
mov
adcl
and
shr
repnz
cmp
xchg
lahf
push
adc
int
frstor
xlat
sub
xor
out
leave
cmp
push
cmpsb
jle
push
mov
pop
call
adc
dec
sbb
lods
add
pop
fsubrl
add
scas
mov
outsb
test
addb
int
aaa
xlat
mov
mov
stos
jbe
hlt
dec
out
test
addb
aam
xor
xchg
inc
sbb
mov
ljmp
inc
mov
das
lds
mov
pop
xor
mov
pop
int3
or
das
push
pop
std
int
lods
ret
rcl
push
out
ljmp
rorb
fstpl
cltd
stc
ud0
ret
adc
add
xor
jae
xor
jle
mov
sbb
dec
pop
testb
js
push
call
dec
add
inc
sub
sub
aad
enter
add
adc
call
loope
popa
dec
in
enter
push
sahf
push
addr16
lods
mov
adc
jb
inc
mov
imul
icebp
push
pop
mov
popf
xor
xchg
dec
mov
insl
lahf
push
mov
pop
mov
sbb
icebp
hlt
sahf
fisubs
mov
lods
fisubl
mov
adc
movsb
sti
or
icebp
popf
mov
lahf
idiv
xchg
jb
icebp
std
daa
orl
hlt
cmpsb
aas
cmp
leave
adc
fists
mov
int3
cmp
lods
je
jp
mov
scas
ljmp
arpl
xlat
fwait
lods
cmp
jge
jbe
fwait
xchg
js
pop
jns
fcoml
fdivrl
mov
inc
or
mov
into
mov
movsl
xchg
add
mov
insl
pop
fcomi
mov
sub
add
cmc
xor
js
inc
adc
push
sbb
pop
mov
out
call
imulb
or
push
fldenv
or
mov
push
mov
xorl
xorb
addb
sbb
dec
push
xchg
mov
add
sbb
in
and
sbbb
push
test
idivl
jle
mov
and
inc
lock
int
push
xor
je
aaa
push
std
mov
imul
jno
sbb
push
mov
jg
cmp
and
sub
lods
mov
inc
scas
sub
enter
in
and
out
sbb
adc
and
push
out
add
push
cmp
iret
and
push
xor
loopne
pop
insl
xchg
cmp
sub
dec
add
bound
mov
ds
pop
inc
cmp
fstps
inc
add
jo
gs
push
inc
adc
mov
leave
imul
inc
test
mov
out
popf
sub
out
add
cmpsl
sub
and
xchg
mov
popf
in
mov
sub
sbb
push
inc
and
in
and
adc
loopne
mov
xchg
mov
jle
adcb
stos
mov
stos
and
ret
and
pop
mov
hlt
pop
jae
imul
fwait
xchg
adc
sub
lea
mov
mov
mov
in
mov
cltd
add
jecxz
fwait
xchg
jge
inc
xchg
and
gs
push
das
fnstenv
imul
jg
jne
dec
jnp
xchg
pop
ds
mov
mov
notl
sbbl
sbb
pop
arpl
cmp
mov
and
jne
pushf
stos
pusha
movl
lea
jmp
test
stc
movb
cmpb
call
bswap
movzbw
mov
jmp
cmp
pushf
pusha
lea
jbe
rol
inc
bswap
bt
sub
not
mov
movsbl
neg
sar
lea
mov
movsbl
xor
bsr
sar
add
shld
shr
sub
dec
cmc
test
mov
test
ror
test
stc
add
jmp
mov
movl
pushl
ret
nop
cmp
sub
xor
sar
test
mov
mov
cmpsb
jne
jne
jle
adc
xchg
das
jnp
sbb
inc
mov
in
subb
cmp
push
jp
dec
and
imul
push
sub
xor
je
mov
jg
or
fnstsw
arpl
sub
and
add
jmp
pop
pop
mov
sub
enter
lods
or
popa
leave
pop
pop
xor
std
jne
lea
jb
push
pusha
pushf
pushl
ret
int3
std
lds
mov
rcrl
rorb
cmpsb
ljmp
out
pop
lahf
sbb
mov
stc
mov
mov
sarl
mov
popf
add
and
or
loop
add
mov
adc
add
add
add
add
add
add
mov
adc
xchg
aad
add
add
add
add
fnstcw
xchg
inc
pop
hlt
mov
sahf
inc
ret
rolb
ds
das
xor
inc
xor
pop
add
loop
cmp
fldt
pop
or
and
and
ret
jle
daa
cmp
cli
aas
sub
sbb
sbb
leave
sbb
mov
dec
popf
rcrl
mov
inc
and
data16
orl
mov
iret
dec
pop
jno
jno
mov
repz
or
std
ret
fs
jns
xor
sbb
push
dec
adc
jle
jecxz
negb
sbb
data16
push
sbb
std
fs
xor
stos
es
ret
lret
das
xrelease
not
xchg
addr16
inc
mov
cmp
aaa
jno
loopne
test
push
ret
inc
inc
add
add
push
inc
sbb
shrb
es
in
lret
xchg
mov
xor
jo
loop
repnz
jbe
rcrb
push
loope
dec
lock
call
jb
sarb
dec
mov
loopne
gs
pop
mov
ja
dec
push
leave
cmc
sbb
sti
cld
dec
sbb
subb
out
xchg
es
shlb
mov
xchg
fwait
sub
imul
inc
inc
sti
push
cmp
cli
push
repz
out
call
jae
lods
rcll
sub
and
orl
rcr
xchg
mov
das
daa
fdivr
push
xchg
inc
hlt
push
push
sbb
ss
fiadds
idivl
out
jecxz
push
in
lods
pop
fld
loopne
mov
mov
xor
add
jmp
mov
or
sbb
push
lcall
add
xor
sbb
sub
fists
sub
lcall
decl
dec
ss
or
rcrb
mov
push
mov
lret
mull
out
push
lods
rclb
mov
std
xor
jns
gs
cli
out
fldcw
stos
mov
xchg
jmp
data16
pop
sbb
adc
stos
and
inc
pop
xor
mov
popa
and
rorb
adc
lcall
or
sbb
shlb
lock
dec
scas
les
out
call
loop
jb
jns
mov
sub
outsb
pop
xchg
inc
aad
push
mov
ds
hlt
imul
adc
lret
jae
aaa
dec
push
clc
shl
pop
arpl
cmpsl
sub
fnstenv
adc
mov
fwait
inc
repnz
mov
loop
sbb
adc
xchg
inc
mov
push
sbb
xchg
or
mov
pop
inc
int
and
sahf
mov
lret
inc
lea
and
fimull
mov
mov
rcl
stos
sub
sbb
jecxz
mov
mov
out
jnp
jno
jmp
ret
outsl
movsl
lds
fdivl
cmp
and
jo
add
scas
adc
out
cs
clc
mov
fs
and
cmpsb
ss
das
les
mov
addr16
inc
fsubrs
xchg
aam
fnstenv
adc
xor
jge
push
xchg
ja
mov
dec
mov
ret
loop
xchg
mov
lahf
or
leave
inc
gs
jl
fbld
in
xchg
inc
adc
imull
outsl
sahf
xchg
cld
repz
sahf
fsubr
and
push
adcb
lcall
in
into
cmc
lea
es
mov
add
sub
add
insb
dec
push
fcomps
or
xor
dec
ss
add
inc
dec
mov
or
sub
pop
push
jl
jp
ficompl
pop
jg
test
test
adc
ds
push
fists
pop
adc
dec
or
jno
faddl
std
iret
mov
fwait
test
outsb
or
fnstcw
or
popf
mov
iret
jg
sbb
rolb
lret
mov
pop
push
lret
mov
imul
out
push
xor
pop
pusha
push
cmc
or
cmp
inc
mov
js
clc
sbb
push
jb
cwtl
mov
mov
adc
jle
xchg
jmp
and
mov
dec
push
lods
jg
test
rorb
ret
mov
push
mov
mov
sbbl
std
push
mov
cmp
rclb
mov
mov
out
cmp
inc
fwait
jp
push
std
adcb
imul
cmp
mov
insl
icebp
pop
ss
inc
add
divl
and
in
or
mov
xchg
pop
and
push
or
pop
ret
and
aad
or
mov
rcr
imul
mov
adc
mull
daa
loope
sbb
xchg
ficomps
cltd
repz
and
mov
cltd
xchg
sub
xchg
pop
out
sbb
adc
dec
add
jne
xor
mov
jae
dec
dec
dec
pop
inc
sub
fwait
or
mov
ss
test
test
dec
dec
call
and
xchg
in
mov
pop
sahf
lret
push
pop
pushf
mov
les
mov
fists
roll
in
push
mov
pop
adc
mov
movb
add
std
xchg
inc
pop
dec
cmp
icebp
add
sbb
pop
jno
cmpsl
cmp
xchg
je
ja
dec
cs
aad
pushf
or
dec
sub
inc
jb
test
mov
sbb
cmp
cmpsb
push
insb
mov
push
into
adc
sub
movsb
dec
ja
xor
dec
in
sbb
js
cli
frstor
fdivrl
add
jne
fcoms
pop
xchg
nop
adc
xorl
xchg
inc
mov
loop
xchg
mov
mov
sbb
xor
mov
rorb
push
cwtl
push
pop
addr16
jne
xchg
lods
jo
addr16
jg
out
mov
rorb
mulb
in
ljmp
dec
loopne
cltd
or
push
pop
fstpl
scas
jbe
sub
data16
sbb
cwtl
rolb
bound
lcall
add
push
dec
inc
dec
or
mov
insb
mov
adc
push
rcll
push
jno
sub
or
out
jle
xchg
mov
cld
dec
scas
fnstcw
imul
mov
repnz
push
cwtl
add
pusha
cmp
pop
test
xchg
dec
xchg
mov
in
iret
pop
xor
cmc
cmc
cmp
in
ret
and
negb
rorl
xchg
testl
rorl
mov
incl
fstps
fucomip
psubd
mov
popf
mov
mov
das
outsb
daa
lret
sbb
outsl
xor
lods
add
lds
jbe
push
sub
cmp
cmp
dec
mov
and
cmp
lahf
dec
and
mov
das
cltd
rcrl
gs
push
dec
lea
scas
dec
rol
aaa
fbstp
and
dec
lret
pusha
fwait
inc
outsl
lret
sti
aas
jns
mov
jo
test
sub
mov
repz
jnp
test
xchg
inc
xor
pop
add
mov
cmc
jnp
mov
and
xor
pop
pushf
cltd
and
and
mov
jle
push
cmpsb
pop
mov
aas
ficoml
cmc
and
xorl
lock
sub
push
push
shll
cmp
mov
mov
adc
lock
add
or
arpl
shlb
shrl
mov
je
pop
adc
imul
mov
sub
iret
inc
xor
or
frstor
jl
mov
addl
out
or
cmp
ffreep
sbb
inc
inc
sahf
loope
jp
xchg
jl
jp
mov
mov
lret
cld
sar
sub
iret
test
stos
mov
and
mov
fsts
clc
dec
xor
xchg
pop
call
in
mov
add
aad
in
aaa
cmp
or
cmp
int
lods
lret
mov
jmp
lods
fbld
cmpl
lcall
aas
jnp
mov
mov
push
scas
sbb
lret
pop
xlat
and
inc
into
daa
cmp
hlt
fdivrs
xlat
or
out
and
daa
loop
daa
imul
pop
leave
mov
mov
push
push
sub
sbb
sbb
jno
repz
stc
add
inc
mov
clc
jmp
icebp
es
pcmpeqb
leave
ja
jle
loop
and
xor
push
sbbl
lods
lods
das
mov
data16
adc
sbb
inc
mov
cwtl
sbb
jne
cmp
mov
inc
je
movsb
inc
add
movsl
inc
jmp
mov
push
lods
adc
jae
repnz
ljmp
stos
emms
mov
cld
setbe
and
adc
arpl
pop
in
xchg
shll
pushl
imul
dec
mov
push
lods
sbb
mov
push
icebp
lret
arpl
fdivrp
xlat
push
lret
lods
xor
lods
add
shl
adc
mov
test
xchg
imul
mov
mov
pop
test
mov
ljmp
pop
jge
mov
mov
push
jb
xlat
jae
arpl
adc
insb
or
add
lahf
dec
fisubrs
stc
lock
sbb
std
stc
add
fstpl
out
andl
mov
pop
gs
sub
rolb
xor
cmp
sub
in
sub
mov
daa
cmp
mov
push
pop
mull
jecxz
push
out
leave
cld
sbb
lahf
pop
popf
call
push
cli
ret
lock
repnz
sbb
dec
pop
add
das
dec
leave
mov
jge
mov
xchg
pop
pop
mov
mov
orl
or
push
jp
dec
dec
mov
sbbb
loopne
dec
ds
dec
jge
cmp
pop
dec
cmc
push
lea
lahf
je
push
dec
jnp
pop
add
cwtl
jg
inc
cmp
add
fs
aas
lods
inc
movsl
movsb
mov
jg
pop
sbb
lea
pop
in
mov
or
jge
mov
pop
inc
or
pop
jg
lcall
outsb
sub
sub
mov
pop
inc
pop
popa
lods
fldcw
dec
lods
inc
xor
push
fs
mov
or
flds
adc
sub
mov
nop
mov
xchg
leave
daa
test
insb
das
pop
rcl
inc
rcll
cmpsl
into
add
arpl
mov
stc
add
push
pushf
bt
pushf
mov
pushl
call
jmp
cmpb
pushf
pushf
pusha
lea
jne
rol
shr
mov
call
pusha
pushl
push
pushl
popl
pushf
mov
pushl
ret
lret
rcll
aad
adcb
testl
out
jae
add
cmp
or
repnz
inc
in
outsl
clc
cmp
inc
int3
mov
ljmp
std
jns
pop
cmp
aad
aad
int
in
add
fldl
and
add
add
add
pushf
mov
pusha
jmp
add
push
pushl
push
push
lea
jne
pushf
setbe
movb
mov
pushfw
popw
pushf
not
sar
or
mov
cmc
clc
test
xor
jmp
dec
add
shrb
mov
mov
lods
je
js
ljmp
gs
xor
xchg
dec
lret
in
negb
adc
sub
xchg
adc
jmp
xor
and
test
mov
cmpsb
stos
addr16
jnp
imul
ret
sti
pop
adc
movsl
lahf
pop
movsl
xchg
sti
sub
xor
jle
push
js
mov
push
cmovno
xchg
xor
jmp
xchg
xor
aad
xchg
push
enter
cmpsb
mov
test
add
std
mov
pop
ja
int3
cmp
xchg
mov
sub
mull
jno
movsb
in
pop
xorb
lods
adc
cwtl
pushf
js
aam
cmp
xchg
add
cld
sub
sbb
cmp
repz
mov
int
sbb
stos
out
clc
adc
mov
sbb
push
pop
pop
dec
mov
popf
das
push
jmp
lods
lret
and
sub
inc
cmpsl
and
arpl
test
adc
add
cmp
jmp
lea
je
call
jmp
test
cmp
call
lea
jne
call
lea
mov
pushf
call
xchg
mov
xchg
pop
add
test
mov
sbb
add
xor
and
int3
dec
push
rcrb
dec
jno
stc
pop
inc
mov
sbb
or
mov
movsb
push
mov
fdivs
lea
ror
xchg
aam
rorb
jecxz
sti
push
addr16
mov
divl
dec
lret
cmp
leave
push
imul
xlat
mov
xchg
jae
mov
imulb
push
mov
imul
gs
xor
cs
insb
add
fisttps
aaa
pushf
pusha
movl
pushf
pushl
mov
movb
lea
jmp
xor
pusha
jmp
int3
popf
push
mov
jmp
movl
push
pusha
movl
pusha
lea
jmp
jne
push
and
sub
cmpsb
into
pop
cmp
lret
dec
out
push
in
pop
in
gs
gs
les
sbb
mov
cmc
js
and
xor
mov
mov
and
or
cmp
cmpsb
and
adc
mov
lea
jne
lea
clc
ror
pusha
mov
push
push
test
add
clc
mov
cmc
movzwl
rcr
xor
movsbw
mov
bt
mov
clc
add
call
pop
or
int3
cmp
and
clc
cmp
rcr
adc
add
fs
push
daa
lahf
adc
imul
cs
out
stc
xchg
fisubrs
mov
cwtl
adc
sbb
sub
mov
adc
jnp
incb
fsts
xor
or
and
sub
adc
mov
pushf
fs
cmp
and
add
nop
or
add
cmp
dec
out
lea
jne
push
pusha
pusha
mov
lea
jmp
hlt
xor
dec
pop
daa
cmp
rcll
cmp
xor
mov
minps
xchg
pop
add
jbe
outsl
jmp
mov
hlt
sbb
out
ljmp
xchg
pushf
or
scas
xchg
xchg
or
jae
stos
mov
cmp
jl
sti
sub
jns
push
push
ja
jg
fwait
xor
gs
clc
mov
fdivl
cwtl
jns
dec
adc
clc
or
mov
rorl
push
and
fstl
add
iret
mov
aad
sbb
dec
test
mov
push
adc
push
push
cmp
shr
sbb
je
popw
in
mov
push
out
out
xchg
mov
push
std
inc
pop
jecxz
add
or
mov
cmpl
add
adcl
push
pop
pusha
jbe
adc
mov
rol
add
or
loop
sbb
mov
sbb
lret
add
lea
fiadds
je
push
cmp
stc
xchg
pop
mov
sbb
pop
jae
add
dec
fadd
test
sbb
and
insl
bt
bt
cmc
cmc
sub
jbe
cmp
pusha
movl
lea
jae
push
lea
jmp
sub
btc
mov
test
pushf
test
movw
add
call
jmp
xlat
xchg
dec
adc
rcrl
jmp
xor
fwait
cmp
xchg
arpl
pop
fcmovbe
addb
dec
pop
test
pop
mov
dec
xor
ja
jbe
stc
or
jno
shlb
pop
dec
inc
dec
nop
pop
add
xchg
cmp
nop
push
mov
fdiv
adc
sub
lcall
test
gs
jne
or
mov
fnstsw
and
aam
loopne
testb
push
pop
nop
xchg
inc
fisttps
mov
mov
push
stos
fs
xchg
mov
dec
inc
push
ljmp
inc
pop
mov
push
aam
jbe
or
sbb
mov
xorb
fdivrl
xor
add
in
pop
jle
insl
movsb
enter
outsb
cmpsb
xchg
dec
push
add
inc
jns
gs
pop
and
add
inc
jne
not
call
jmp
cmp
rcr
rol
mov
cmc
push
shr
pushf
stc
pushf
pushf
cmp
pushf
pushl
lea
je
cmc
test
cmc
cmp
jmp
pushf
call
jo
sub
cmp
jno
push
adc
outsb
mov
xchg
out
add
cs
notb
mov
jecxz
mov
adc
out
out
out
repnz
sbb
rol
fsub
imull
adc
insb
pop
fcmovnu
xor
inc
pop
data16
int3
mov
adc
cld
imul
mov
js
insl
cld
xor
lret
aad
jo
adc
xor
out
adc
lods
sub
test
mov
xlat
pop
push
lret
ret
rcll
lahf
sub
or
test
jo
inc
mov
test
arpl
test
lret
dec
aas
push
out
mov
xor
andb
movl
movb
push
lea
jmp
cmp
xchg
rorl
aad
lret
in
shr
dec
push
or
add
push
mov
cmp
ja
push
xor
or
cmc
mov
lcall
je
mov
push
aam
pop
sbb
loopne
pushf
and
cwtl
cld
push
cmc
push
inc
aaa
aam
ret
jbe
sub
mov
das
pop
add
pop
and
lock
je
bswap
bswap
mov
pusha
mov
cwtl
jmp
imull
in
aam
and
and
cwtl
push
dec
fs
rolb
mov
pop
fwait
and
lea
popl
cvtpi2ps
jmp
push
insb
test
add
add
lahf
enter
call
and
arpl
aad
mov
add
cmpsb
push
dec
enter
roll
outsb
xor
cmc
mov
add
xor
imul
pop
dec
jne
add
in
incb
daa
imul
mov
cli
xor
cmp
in
mov
adc
leave
stos
out
inc
jmp
dec
cmp
rcl
and
mov
jl
add
mov
call
call
cmc
movzwl
add
btr
rol
btc
mov
jmp
dec
lea
jge
clc
stc
rol
call
or
inc
ljmp
fldl
mov
sbb
mov
gs
pop
sbb
cmpb
ficoml
lret
jg
outsb
movsb
in
cmp
mov
dec
test
dec
dec
cltd
mov
gs
inc
and
jno
add
add
fs
jne
bt
shl
mov
stc
jmp
sbb
dec
xlat
in
sbb
and
cwtl
fmull
sbb
popw
add
mov
stc
pop
mov
in
or
loopne
fistpl
in
push
pop
or
lahf
inc
popa
das
or
dec
rorl
lcall
inc
in
and
ds
ret
and
mov
inc
ficoml
push
mov
add
mov
aaa
shr
mov
lods
sub
popl
aaa
and
arpl
cmp
shlb
mov
seto
pop
lea
bswap
movsbl
pop
push
pushf
mov
jmp
xor
jmp
mov
inc
ljmp
insb
sbb
js
nop
mov
push
pop
fwait
gs
lret
cmp
lcall
push
fists
ret
movsb
jecxz
ss
cmp
iret
lods
sub
push
hlt
call
rcrb
and
cmp
add
push
mov
pushl
ret
pop
ficompl
movl
mov
scas
inc
adc
inc
mov
dec
lret
in
sarb
aas
adc
flds
jb
cmp
int3
cmp
pop
push
ret
dec
out
ret
aam
push
push
call
stos
pop
into
sar
push
rcll
cmp
in
xor
mov
inc
fisubrl
aaa
fnstenv
data16
mov
pop
xchg
mov
cwtl
loop
cmp
add
pop
sub
inc
shl
adc
inc
pop
sbb
lret
je
dec
shr
xchg
xor
das
aaa
lea
jg
push
out
lret
add
jno
or
movb
xchg
mov
popf
jae
movl
mov
pop
xchg
xor
test
pop
sbb
shlb
mov
mov
and
pop
into
in
repz
jmp
add
dec
inc
mov
pop
inc
dec
aaa
sub
in
daa
pop
pop
pop
nop
jb
pusha
sub
cmpl
mov
insl
jnp
call
cmc
pop
and
in
outsl
cwtl
es
mov
dec
sbb
jl
cmp
jp
or
in
in
iret
adc
popa
test
rolb
rcrb
xchg
add
out
sbb
mov
and
dec
shrl
push
cmp
sahf
into
fdivr
inc
pop
lcall
fs
mov
xor
and
out
push
imul
divl
pusha
aad
sub
jle
lret
aas
cmc
aad
mov
add
clc
inc
aaa
iret
mov
nop
pop
cmp
iret
mov
testl
and
icebp
push
add
add
add
add
in
sbb
out
sbb
ret
test
add
adc
lcall
add
add
add
adc
adc
add
sti
adc
adc
sbb
daa
dec
push
xchg
cmc
stc
cmc
neg
clc
clc
test
add
clc
jmp
test
cmp
pusha
lea
ja
stc
pusha
pushf
imul
pusha
pushf
add
pushf
lea
jmp
lods
jmp
cmc
mov
bt
pushf
pusha
test
call
call
lea
jae
shrd
shl
mov
push
shl
mov
jmp
movb
mov
lea
ja
pusha
call
es
xlat
in
lock
sbb
in
sub
and
sbb
xlat
in
push
add
sarl
jb
mov
mov
lret
adc
xlat
ja
ret
xor
in
popf
push
cwtl
mov
inc
dec
insl
xor
push
inc
add
hlt
cmpsl
repz
inc
mov
insl
ret
pop
xor
fidivl
mov
mov
les
push
shrb
outsb
es
pusha
out
pop
aaa
mov
push
xor
add
pop
push
lret
loope
mov
cmpsb
test
pop
sbb
clc
mov
pop
pop
xorb
aaa
mov
jg
insl
and
loop
fisubl
mov
pop
mov
xchg
mov
sar
push
mov
not
lahf
xchg
mov
and
jo
cmp
fs
call
andb
jnp
cmpsb
cmpsl
push
mov
adc
mov
aaa
push
jmp
jnp
cmc
jle
cmpsb
xchg
inc
out
cmp
inc
mov
adc
sub
cmpsl
bswap
and
in
pop
and
ljmp
lret
and
repnz
mul
fisubl
mov
and
mov
movl
mov
pushl
movl
pusha
movb
movb
lea
jmp
dec
mov
out
inc
inc
loopne
int3
jbe
mov
mov
scas
and
pop
adc
mov
lahf
fwait
jl
or
add
or
daa
shrl
pushf
out
inc
mov
shrl
mov
lods
mov
test
sub
or
add
push
lea
ja
rcr
rcl
or
clc
sub
neg
cmc
ror
add
bsr
setno
btr
mov
shr
inc
bt
test
mov
stc
push
cmp
repnz
mov
lea
jo
jne
lahf
movb
mov
movzbl
setge
bswap
push
pusha
lea
pushf
pushf
movl
pushl
mov
pushf
push
pushf
push
pushl
ret
jmp
cmc
neg
call
rcl
mov
stc
clc
pushf
cmpb
pushf
lea
jne
push
bts
btr
sub
xor
movsbw
rcl
bt
call
gs
mov
faddl
loope
mov
pop
mov
mov
mov
jg
mov
cltd
jmp
aas
jg
les
dec
mov
test
cmc
mov
leave
movsb
in
push
into
or
inc
mov
sub
add
in
jns
inc
sub
add
cmp
push
adc
rcrb
int3
cmp
aaa
pop
mov
push
lret
add
mov
std
decl
dec
imul
inc
mov
xor
dec
testl
jl
or
xchg
dec
subl
or
jne
dec
mov
xchg
push
shll
lea
jne
jmp
pushf
movl
jmp
lea
je
pushf
pushf
call
movl
call
cmp
cmp
push
pushl
movb
lea
jae
push
cmp
movl
pusha
pusha
pushf
lea
jae
pushf
cmp
jmp
rep
push
mov
into
jmp
jecxz
fiaddl
add
js
rolb
cs
test
mov
rcr
lret
fcmove
dec
mov
mov
and
mov
out
cwtl
into
sbb
inc
pop
jmp
xchg
iret
xchg
flds
dec
jg
fldl
xor
xor
mov
mov
dec
fnsave
repnz
pop
cmp
fldl
ret
cmp
jge
imul
inc
mov
or
movsb
sbb
fsubp
pop
mov
mov
and
mov
sarl
mov
out
inc
inc
lret
adc
add
insb
scas
fildl
cmpsl
and
mov
mov
add
ja
or
add
lock
popf
adc
outsl
inc
iret
push
dec
pop
or
or
ret
ss
jbe
sbb
or
rolb
loop
and
push
sub
xor
ja
mov
cmp
pshufw
movsl
or
setb
or
sub
setp
add
cmp
bswap
ror
mov
mov
sbb
setnp
mov
jmp
cmc
movzwl
add
mov
call
mov
jnp
not
pop
pusha
movw
pusha
pushf
pushl
ret
lea
jb
push
cmp
call
jmp
and
cli
sahf
or
fstp
loope
mov
outsl
fwait
mov
sti
das
fcmovnbe
cmp
mov
fdivl
inc
xchg
into
fcompl
mov
adc
dec
ffree
xor
sub
lea
call
clc
bt
cmp
test
pushf
call
call
call
jmp
pusha
pusha
jmp
add
inc
js
je
jb
arpl
jae
jne
gs
xor
fs
insb
add
xor
call
call
pusha
jmp
pushf
pusha
movl
pushf
call
movw
lea
jae
cmp
jmp
test
cmc
jmp
pushf
pushf
and
pushf
push
add
pushl
pusha
lea
jmp
mov
jmp
movb
jmp
add
stc
cmp
cmc
mov
stc
pushf
clc
jmp
push
push
call
rol
mov
call
test
pushf
push
call
inc
subb
cmp
scas
push
sub
cmpsb
into
ljmp
lock
mov
pop
repnz
stos
int
lret
les
mov
cmp
ljmp
and
push
lds
mov
enter
es
pop
lret
and
cli
out
bound
stc
arpl
inc
adc
dec
aas
add
adc
and
movsb
jecxz
pushf
cmpsb
loopne
enter
and
iret
sub
jp
lods
mov
xor
into
insl
fwait
xlat
dec
sti
jne
dec
outsb
mov
mov
lea
inc
cmp
addl
dec
inc
and
pushf
call
xchg
xchg
pushf
mov
movzbw
mov
pushf
not
mov
pop
call
add
add
test
adc
add
add
out
in
sbb
out
sbb
ret
test
add
adc
lcall
add
add
add
add
lock
lahf
push
dec
imul
fwait
ret
dec
fwait
jecxz
and
jnp
pusha
sarb
shlb
adc
insb
jbe
jg
and
mov
cmp
loopne
inc
sbb
stos
push
dec
call
aas
push
lahf
ret
or
mov
js
mov
push
push
lcall
cmp
inc
hlt
outsb
mov
cli
inc
shrb
mov
loop
cmp
xchg
push
loop
cmp
mov
xchg
into
mov
jp
push
leave
mov
pushf
and
or
in
mov
je
lahf
or
cld
hlt
daa
mov
sti
jns
je
mov
push
push
cwtl
dec
mov
jo
sub
and
push
and
sti
and
jl
push
xor
push
aad
loop
mov
push
lods
icebp
adc
into
mov
or
fcmove
cli
cmpsb
addb
mov
cmp
cmpsb
dec
clc
cmp
lea
jns
jae
pushf
movw
push
pusha
lea
jmp
lea
jne
call
stc
cmc
cmp
pusha
call
not
mov
pushl
pushf
jmp
lea
jb
clc
stc
bt
cmp
call
add
mov
test
push
repnz
jmp
mov
inc
ljmp
jno
sub
add
mov
xchg
lret
les
or
cmc
jbe
daa
movsb
in
jnp
lods
inc
fadds
aaa
inc
xchg
icebp
inc
pop
and
out
mov
cmp
add
int3
outsl
cmp
bt
test
push
lea
je
clc
sub
jmp
push
or
mov
sahf
xor
popa
add
mov
xor
lds
les
dec
mov
test
sbb
pop
aad
pop
aas
mov
and
xor
add
xor
rol
push
lea
movsbl
mov
movsbw
push
movzbw
inc
neg
call
popf
cpuid
nop
call
pushf
push
movl
call
pop
mov
leave
and
xlat
add
jno
mov
add
call
mov
xchg
push
mov
rol
loop
pop
cmpsb
cmp
mov
out
aaa
fdivrl
or
jo
jno
mov
xchg
adc
sub
inc
sub
lcall
in
dec
loopne
push
cli
and
cwtl
sahf
mov
es
notb
aas
mov
icebp
xor
xor
xor
mov
into
scas
lods
imul
pop
loope
push
cmp
mov
popf
pop
arpl
lret
pop
lea
out
add
inc
jecxz
imul
fs
mov
ror
jl
cmpsl
sbb
pushf
and
cmp
in
les
cmp
jg
mov
mov
xchg
mov
pushf
add
mov
pusha
add
ss
mov
mov
mov
xor
test
test
out
cmp
sub
cli
or
sub
push
mov
jecxz
outsb
loopne
mov
jg
lcall
lods
cltd
pop
jbe
lret
jnp
roll
or
fsts
inc
xor
add
ja
movsl
xchg
fistpll
repnz
loope
adc
push
cmp
adc
jecxz
jae
inc
in
cld
push
mov
stc
icebp
pop
nop
ror
jp
idivl
sti
push
mov
cmp
lret
cmp
int3
or
scas
dec
or
xchg
sub
jo
and
jg
cmc
sub
test
or
jmp
call
lea
jne
dec
sbb
jmp
lea
jne
cmp
bswap
xor
test
mov
bt
pusha
bt
add
cmp
call
movl
pushf
movl
pushf
movb
pusha
push
lea
jmp
str
jmp
ss
pop
imul
mov
pushf
movsb
enter
or
ficompl
dec
cmp
stos
int
dec
push
lock
dec
pop
and
pushf
push
aas
dec
loop
outsl
jns
lea
mov
pop
mov
subl
pop
pop
sahf
lods
loopne
mov
dec
inc
in
jp
movsb
jecxz
std
daa
xor
push
ret
adc
lods
lret
mov
jne
cmp
mov
push
mov
cmp
icebp
inc
sub
ret
and
xchg
mov
jl
inc
xor
add
aam
and
pop
pop
sbb
pop
pop
dec
add
es
cmp
mov
icebp
inc
inc
mov
fcompl
xor
leave
addl
and
pushf
mov
into
addr16
xor
xor
pop
clc
pop
adc
xchg
dec
movsb
lods
roll
cmpsl
lods
das
mov
js
insb
js
leave
push
inc
cmpsl
outsl
arpl
xchg
adc
cmp
xor
mov
sarl
aad
aad
mov
and
pop
fildll
data16
cltd
aam
popf
scas
cmp
test
jmp
adc
jg
inc
mov
cmp
push
mov
cmp
dec
push
inc
and
jno
sti
not
int3
loope
testb
clc
xchg
push
or
stc
sbb
cld
pop
sbb
stos
or
sbb
dec
sbbb
jae
out
shrl
rolb
add
mov
iret
addl
jae
cmc
and
repz
jae
mov
adc
ljmp
mov
into
inc
rcrb
aam
lods
popa
jbe
inc
js
aam
into
or
xchg
scas
iret
movsl
dec
aaa
mov
mov
fstpt
push
lods
lahf
rcr
hlt
or
mov
jbe,pt
jle
test
loope
inc
js
adc
pusha
adc
mov
xchg
cltd
out
enter
es
fsubrl
xor
scas
aaa
mov
shll
push
push
shll
or
pop
aam
inc
mov
cmp
test
lea
jae
sbb
bswap
mov
and
btc
mov
btr
neg
shld
bsf
mov
test
sub
cmp
repnz
jmp
jmp
pusha
mov
push
pushf
lea
jmp
seta
mov
pusha
mov
lea
jmp
cmc
cmp
pusha
call
stc
test
pushl
call
or
mov
pusha
lea
je
sbb
push
shr
inc
add
stc
sub
and
sub
mov
shr
clc
rcr
xadd
xchg
mov
bts
shl
add
movb
add
bsf
clc
shld
cmc
add
lea
jmp
xadd
shl
mov
or
shrd
mov
dec
bts
sbb
shl
mov
xor
adc
sar
shl
mov
and
shl
sub
pushf
pusha
not
lods
pushl
neg
xor
setbe
inc
dec
bt
rol
not
push
not
setle
inc
inc
shl
xor
movb
stos
jmp
push
pushl
lea
jne
xor
bts
clc
mov
pushf
stc
pusha
pushf
or
push
pushf
pushf
jmp
jmp
xchg
pushf
jmp
std
cmp
pushf
int3
cmp
out
add
adc
rclb
test
adc
mov
in
sbb
dec
cs
mov
cli
out
sahf
xor
mul
mov
cli
inc
sahf
xacquire
outsb
int3
and
push
jg
lds
popa
movsl
shl
and
cltd
sbbl
mov
pop
push
lcall
and
pusha
rcr
rcpps
mov
ja
icebp
scas
mov
jno
mov
jle
mov
inc
xor
push
scas
dec
mov
mov
xor
movsl
outsl
iret
arpl
divl
jnp
imul
gs
adc
or
or
pusha
jmp
push
lea
jb
test
cmc
stc
cmpb
push
pusha
call
sub
mov
pushf
and
cmp
pusha
pusha
add
sub
cmc
pusha
add
mov
pushl
pusha
dec
mov
lea
jne
sub
btc
mov
clc
cmp
pushf
movw
push
lea
ja
jmp
pushf
xchg
pushf
jmp
lods
lock
outsl
fisubs
jae
je
adc
inc
fcom
push
ror
movsl
in
lahf
imul
pusha
test
lods
sbb
popf
insb
xchg
xchg
push
sub
insb
push
jmp
ja
xchg
mov
jecxz
add
dec
call
add
xchg
adc
shl
mov
inc
mov
dec
mov
flds
mov
mov
xchg
mov
scas
xor
in
dec
arpl
inc
adc
sub
loope
xlat
stc
jmp
jle
pop
cwtl
repz
push
stos
cmp
inc
shll
pusha
mov
aas
mov
cmp
shll
dec
insl
cmpb
push
mov
pop
push
cmp
lods
mov
mov
inc
inc
hlt
mov
mov
nop
cmpsl
inc
cmp
iret
mov
stos
sbb
out
and
adc
mov
dec
or
pop
adc
dec
std
aaa
sub
scas
daa
jmp
ficoms
sub
pusha
push
mov
lea
jnp
pushf
mov
movsbw
bswap
movsbw
pop
pusha
pushl
ret
push
pushl
call
jmp
stc
stos
out
push
inc
scas
dec
sbb
mov
lods
jne
cmp
cmp
mov
stos
jle
aad
cld
iret
repnz
push
jb
cmp
xchg
pop
iret
aas
jecxz
iret
inc
pop
shr
pop
pop
ret
aam
outsl
in
lret
enter
mov
mov
vpsrlq
cmp
arpl
sar
insb
adc
call
and
add
test
mov
repz
dec
and
inc
mov
js
test
loope
pop
cld
pop
mov
xchg
in
jmp
cmp
sahf
jg
sbb
outsl
or
fldt
lret
jecxz
xor
cmp
jae
or
jbe
imul
shll
fcomp
sahf
call
fwait
fwait
dec
es
in
and
jo
mov
jbe
jp
sub
cli
in
xchg
push
pop
jae
mov
neg
push
pop
fiadds
cmp
push
jle
imull
lods
push
inc
sbb
lods
mov
push
and
adc
sub
cltd
lahf
pop
mov
inc
leave
cmp
xchg
jge
imull
das
repz
pop
push
and
aas
outsl
mov
mov
xchg
pop
dec
test
ljmp
cmpsl
andl
xchg
psllq
loop
leave
cmp
imull
xchg
rorl
dec
mov
xchg
or
cmp
movzbl
pop
pushf
lea
lahf
mov
jmp
cwtl
push
mov
movb
bswap
pushl
mov
pusha
lea
pushf
movl
pushf
push
push
call
stc
pusha
call
pushf
movw
cmp
add
pusha
call
not
inc
rol
push
xchg
add
stc
not
test
mov
rcl
pushf
mov
sub
test
push
dec
shld
sar
mov
bt
jmp
call
pusha
call
jnp
fdivr
sbb
scas
lret
in
in
pop
test
dec
fs
sub
add
mov
sbb
push
sub
mov
insb
bound
in
pop
in
pop
and
sub
movsb
cmp
cmovp
pushl
cmc
gs
lret
mov
pop
dec
sahf
stos
jo
movsb
hlt
mov
sub
add
clc
aam
pop
loopne
shlb
jns
jae
pop
mov
stos
addr16
flds
ja
leave
sbb
imul
inc
scas
mov
sbb
mov
and
pop
mov
pop
cmp
mov
dec
dec
and
sbb
inc
jmp
xchg
jecxz
xor
mov
and
stos
jp
mov
icebp
jmp
jbe
adc
lods
leave
adcb
leave
insl
jne
add
add
xchg
jle
adcb
pop
loope
cmp
push
mov
out
fcoml
in
aam
sbb
adc
js
pop
xchg
mov
inc
inc
push
xchg
add
mov
jbe
repnz
pop
dec
les
mov
rorb
ud0
xor
lea
jae
push
movw
lea
jne
pusha
call
mov
add
shl
clc
sbb
add
not
mov
push
push
test
mov
call
jmp
jmp
call
insb
push
xor
mov
inc
gs
lods
push
mov
movsl
aas
inc
pop
jns
inc
dec
or
mov
push
out
rolb
or
jle
movsb
scas
mov
movsw
inc
fildl
enter
mov
xor
in
add
xor
js
lret
dec
hlt
lods
and
scas
movsb
dec
xchg
scas
xor
cmp
cmpsb
inc
mov
fs
test
mov
enter
aam
dec
mov
mov
jge
shll
cmp
decl
gs
mov
lcall
mov
lods
insb
mov
insb
mov
in
pusha
lret
pusha
in
andb
dec
push
arpl
mov
ret
hlt
push
push
jmp
and
mov
add
push
fs
jg
inc
lcall
and
das
sti
imul
xor
mov
xor
fldcw
jno
gs
fsts
and
andl
iret
inc
ljmp
xor
adc
lods
gs
sub
pop
lcall
sub
cmc
imul
in
dec
push
mov
cmpl
scas
repz
and
sbb
dec
loopne
push
in
mov
inc
movsl
sbb
add
ljmp
inc
pop
sbb
or
xchg
repnz
mov
daa
out
les
ret
std
cmc
ja
movsl
movsb
in
mov
cmp
adc
mov
mov
add
push
loopne
mov
and
and
gs
xlat
repz
cli
mov
mov
jb
data16
into
cli
sbb
outsb
cmpsb
xor
xor
mov
xchg
stc
gs
xchg
xlat
xchg
xor
xor
jl
xlat
movsb
int
imull
mov
fsubrs
xchg
pop
mov
mov
add
xor
sub
xchg
jno
sub
and
jecxz
mov
pop
pop
jbe
popf
cmp
xor
lock
je
pop
dec
mov
cmp
in
shlb
cmp
xor
neg
clc
mov
call
pushf
lea
jb
test
cmpb
pushf
jmp
call
pushf
call
xor
push
jmp
add
pop
bt
cmpsl
inc
pop
inc
or
xor
test
scas
push
mov
add
lds
fmull
fs
sarl
pop
out
addl
and
push
jmp
pushf
pushl
lea
call
test
cmc
clc
pushf
cmp
push
call
fdivrl
push
mov
in
sub
adc
insb
adc
sbb
test
in
push
xor
pusha
popa
dec
shll
mov
fcom
movsl
test
rcrl
push
fcmovnu
movsb
out
lods
or
xor
jl
add
test
les
out
and
icebp
xorb
sbb
aaa
lock
xor
pop
or
lock
mov
loopne
lods
xchg
insb
rclb
sti
push
cmp
xchg
xlat
pop
data16
adc
lahf
push
xchg
pop
outsb
push
out
push
in
pop
js
ret
xor
sub
jbe
push
push
mov
adc
fcmovne
sub
rorl
lea
stos
push
scas
mov
xchg
test
out
cli
ljmp
xor
fmul
sbb
push
dec
movsb
mov
test
xor
int3
and
push
popa
push
daa
xor
mov
test
jae
sub
add
jno
and
cs
scas
data16
fcomps
out
fisubrs
popf
cmp
je
jns
aaa
ljmp
and
rolb
xor
push
out
push
mov
pop
xchg
adc
js
gs
lods
test
jmp
fistpll
cmc
lds
cmpl
and
out
xchg
or
dec
jbe
rcr
addr16
fldenv
inc
addr16
mov
mov
mov
add
aam
jecxz
lds
adc
and
rcr
jmp
sub
xchg
sahf
into
jbe
mov
cltd
into
loop
push
cmpsb
outsb
push
dec
and
cmp
fcompl
jle
jae
roll
jno
int3
fiaddl
mov
inc
fimull
add
aaa
lret
lea
jae
cmp
bt
stc
cmp
pushf
lea
ja
call
test
push
jmp
loope
dec
and
ret
shll
jne
incb
stc
fs
jo
pop
out
nop
sbb
and
add
dec
push
test
es
js
mov
lcall
sbb
mov
xor
aaa
cmp
pop
jno
dec
cltd
sub
sbb
push
and
or
mov
push
aaa
jmp
jmp
mov
movl
pusha
pushf
pushl
popl
pushf
pushl
pushl
ret
nop
int
dec
inc
xchg
adc
jmp
cmpb
push
push
and
or
jae
data16
xor
xor
push
adc
push
gs
lcall
pop
jge
insb
shlb
insb
add
mov
rol
repz
adc
pop
out
je
lods
or
imul
and
inc
out
mov
aad
movsl
adc
dec
mov
or
xchg
in
sbb
outsl
filds
cmp
mov
in
push
and
cmpl
and
jg
mov
pushl
jmp
mov
dec
movsb
pop
xchg
mov
jns
std
cmp
cmp
cltd
ret
fnstenv
lods
fs
sbb
mov
dec
cmp
ja
je
mov
inc
aaa
lds
mov
ss
rclb
mov
rclb
xor
and
popf
mov
jmp
fbstp
jo
inc
adc
jo
mov
repnz
gs
inc
dec
in
dec
lcall
dec
cmp
cmp
movsb
jecxz
arpl
dec
jns
mov
mov
sub
test
lea
dec
xchg
and
lods
push
mov
movl
pusha
pusha
pushl
pushf
lea
jmp
movsbw
pushf
sbb
push
mov
pusha
call
call
fiaddl
cmp
dec
push
inc
loopne
pop
push
xchg
mov
dec
das
xchg
pop
mov
pop
fidivl
mov
ffreep
nop
push
pop
out
push
and
movsb
ljmp
pop
adc
enter
xor
pushf
xor
fdivrl
xor
sbb
mov
rol
mov
bt
cmp
cmp
pusha
push
jmp
add
dec
gs
popa
addr16
outsl
js
add
sub
outsl
add
or
and
in
clc
mov
mov
push
xchg
push
ja
mov
outsl
mov
mov
dec
fwait
das
xchg
lea
mov
mov
push
nop
ds
in
into
sbb
arpl
pop
out
sub
inc
or
daa
cmp
cmp
cmp
movb
jmp
movw
pushf
lea
jae
call
xor
push
adcl
sbb
daa
xchg
jno
or
insl
mov
jbe
xchg
push
aaa
or
stos
in
movsb
cmp
adcb
mov
add
xlat
xlat
push
dec
fldt
cmp
sar
pop
mov
mov
add
mov
pop
adcb
movsb
in
cld
in
jecxz
out
mov
inc
sbb
jbe
pop
rol
mov
es
cmpsb
movsb
stos
pop
enter
inc
lret
test
es
scas
mov
xchg
and
xchg
xor
cmp
dec
lret
int
stc
dec
mov
xchg
ds
push
out
loope
cmp
std
nop
mov
inc
add
sub
cmp
in
shr
loopne
pop
or
jne
popa
aam
jo
cmp
xlat
out
pop
cmp
sar
jno
and
push
push
lods
pop
mov
pop
and
cld
aas
jb
and
mov
mov
push
xchg
push
out
pop
pop
inc
es
mov
andl
icebp
pop
in
shll
daa
push
call
jmp
xor
pushf
push
push
dec
call
inc
mov
pushf
setle
inc
not
pushf
mov
pushf
jmp
mov
jmp
cmp
jo
ljmp
xor
push
jne
cmp
gs
push
push
mov
and
ret
fptan
lcall
push
movsb
jecxz
jp
aam
sub
or
sti
mov
out
jb
pop
cmp
push
cli
ljmp
xor
inc
and
adc
movl
pusha
pushf
movb
mov
lea
jmp
pusha
pushf
lea
jae
cmp
mov
inc
or
mov
bsf
mov
pushf
test
xor
push
pushf
cmp
cmp
repnz
pusha
jmp
dec
pusha
jmp
inc
mov
test
test
pusha
xor
pushf
movb
movb
lea
call
jmp
call
push
pusha
movl
pushf
movl
push
movb
push
lea
jmp
push
lock
std
std
mov
pop
ret
jno
lock
leave
leave
aas
mov
mov
pop
add
xor
xor
jl
jge
sbb
adc
push
aam
push
into
add
out
fsubrl
adc
test
addr16
xchg
loope
fdivrp
add
inc
push
and
xchg
push
push
scas
xor
xchg
xchg
mov
js
and
lock
aad
pushl
pushf
pushf
movl
push
push
push
lea
jmp
lea
je
pusha
mov
lea
jmp
pushf
lea
jae
stc
xor
call
call
pushf
sub
pusha
pusha
jmp
hlt
movsl
int
out
inc
ljmp
jge
jno
cmpl
orb
ret
and
push
sarl
pop
andl
cmc
jo
outsl
movsb
in
jl
bound
rol
sbb
xor
rol
ss
loop
jb
push
fsubs
test
pop
add
rcl
mov
rol
sub
test
bsf
test
rcr
push
cmp
push
shrd
push
neg
setnp
push
pushf
pusha
mov
cmc
test
test
pushf
mov
mov
lea
je
jmp
stc
bound
mov
sbb
inc
cmpl
pop
lods
xchg
negb
inc
ja
sbb
clc
add
stc
cltd
adc
hlt
jp
mov
outsl
mov
sbb
lods
cltd
mov
pop
jbe
out
inc
push
imul
jb
pop
mov
jecxz
push
sub
mul
cs
scas
stos
and
outsb
into
in
cmp
mov
rorb
rep
movzbw
movsbw
movzbw
mov
pushl
lea
jmp
sbb
adc
jbe
or
fwait
scas
fisttps
mov
jge
or
out
popa
inc
popa
out
mov
mov
jno
pop
xchg
mov
jle
or
aam
out
jb
nop
pop
pop
mov
lahf
enter
xchg
stc
pushf
mov
daa
xchg
notl
or
pop
fwait
ret
pop
and
pop
cmp
jmp
in
aaa
xchg
sbb
fsubp
out
inc
cli
ljmp
mov
stos
xchg
xor
add
nop
cmp
repnz
xchg
aaa
sbb
out
inc
inc
and
pop
push
pushf
lea
je
clc
call
push
lea
jb
cmc
pusha
cmpb
movb
jmp
push
lea
jg
je
pushf
pusha
movb
add
pushf
push
lea
jmp
cmp
call
mov
lea
je
cmc
cmc
add
bt
cmc
call
scas
pusha
mov
popf
xchg
mov
xchg
xor
mov
adc
mov
inc
outsl
xchg
adc
mov
xchg
cmp
xchg
adc
in
cltd
int3
push
sub
inc
push
aad
outsl
mov
aad
fst
jne
test
mov
cmp
outsb
and
stos
mov
imull
cs
xchg
pop
sbb
test
dec
test
fwait
xor
mov
pop
jb
int
cmp
jecxz
lcall
pop
int3
rcrl
mov
sub
xor
clc
lea
sarl
xor
shl
bound
jnp
add
inc
divb
xchg
bound
push
lret
insl
mov
push
jg
shll
fwait
ja
xor
mov
mov
lea
lea
pusha
jmp
lea
ja
jmp
pushf
repnz
jmp
mov
scas
das
ja
test
fucomp
imul
ja
push
lods
wrmsr
das
pop
or
pop
xchg
mov
sbb
or
mov
sahf
add
add
inc
add
add
sub
arpl
aas
std
pushl
add
adc
sbb
adc
or
sti
negl
out
out
rcrl
sbb
jnp
add
pop
sub
xor
cmp
sbb
fcmovne
lds
mov
lret
jge
stc
adc
xor
push
les
adc
mov
lret
in
or
and
pop
bound
push
jp
or
sarl
test
add
outsb
push
rcr
aaa
sub
pop
xor
jbe
fs
cmp
sbb
in
inc
aaa
mov
loope
test
push
fs
mov
dec
cmp
add
leave
and
fwait
into
add
pop
in
in
int3
dec
cmp
and
stc
ret
test
loope
add
cmp
mov
ss
sbb
cmp
in
leave
int
lret
cmp
out
cmp
add
and
mov
or
cli
add
loope
or
std
cld
inc
and
in
adc
mov
std
repz
idivl
push
add
adc
pop
sub
loope
shll
dec
and
xor
mov
xchg
or
lret
inc
out
es
inc
cmp
mov
cld
pop
pusha
or
mov
enter
mov
filds
outsb
jbe
sub
or
mov
testl
xor
inc
pop
mov
loopne
pop
pop
sub
xor
sbb
test
and
pop
sub
push
mov
repz
mov
mov
test
or
xor
les
rolb
mov
movsl
jmp
hlt
mov
int3
pop
push
or
push
sub
sub
jo,pt
add
std
pushf
std
icebp
cmpsb
call
sub
add
cld
dec
int
push
sub
int3
dec
push
add
or
and
sub
scas
ret
sahf
add
shld
repnz
pusha
pop
pop
inc
ss
cwtl
mov
popf
pop
dec
mov
pop
sbb
pop
fmuls
and
adc
dec
shr
jmp
pop
dec
dec
inc
sub
add
fcmovne
mov
adc
dec
jp
xor
rorl
sub
or
aaa
push
jnp
or
jno
testl
andl
stc
jmp
test
leave
aaa
or
push
test
sub
bswap
mov
inc
outsb
xchg
xor
inc
push
pop
mov
inc
sub
xor
pop
pop
bound
aas
sahf
movsl
add
pushf
mov
xchg
pop
xor
aas
pop
pusha
push
mov
movsb
mov
pop
adc
pop
dec
mov
sub
push
inc
pop
out
inc
mov
sub
sub
jb
sub
mov
push
push
sub
inc
sub
addr16
loopne
sub
add
test
sub
adc
cmc
in
test
push
or
sub
sub
stos
pop
pop
test
add
add
inc
push
ds
pop
lods
andb
sahf
cwtl
inc
pop
push
sahf
inc
dec
xchg
pop
pop
pop
outsb
push
sub
das
mov
pop
int
dec
popl
and
jecxz
adc
sub
and
test
in
add
lret
dec
sub
mov
loope
mov
cmp
push
pop
fldt
sub
or
jmp
in
sub
xchg
and
push
dec
pop
xlat
add
fldl
shr
je
xchg
stc
or
cmpsl
sub
je
jbe
xchg
xor
add
ss
filds
lods
push
fisttpll
out
movsb
dec
dec
fs
mov
pop
test
repnz
arpl
sub
jns
push
getsec
bound
push
lds
in
adc
fs
gs
movsl
insb
dec
push
adc
adc
ljmp
repz
shlb
sub
or
inc
fsub
frstor
push
sub
pop
sub
int
frstor
sub
cli
pop
add
int
lret
cmpb
mov
or
fstpl
sbbl
jns
outsb
push
das
mov
add
and
adc
pop
and
xor
inc
mov
dec
das
inc
std
out
iret
inc
add
dec
xor
pop
fnsave
mov
mov
fldl
shrb
into
fstl
pop
pop
into
in
inc
dec
addr16
leave
pop
aad
addr16
inc
xchg
gs
rcrl
enter
cmpl
mov
xor
xchg
mov
repnz
mov
lods
and
cmp
pop
push
xor
sbb
add
and
lea
push
fsubr
frstor
roll
ja
js
int3
jne
cmp
je
sub
add
sub
mov
movsb
rcr
and
mov
test
push
mov
jne
add
cmp
xchg
test
lret
es
adc
shrb
movsl
das
xchg
pop
add
mov
dec
jg
into
add
sub
pop
inc
or
mov
aas
add
sti
or
add
dec
das
add
stc
mov
movsl
push
dec
sub
leave
and
dec
js
fstl
push
psrlq
loope
xorb
add
pop
jmp
sahf
push
add
sahf
mov
and
outsl
mov
xchg
out
sub
xchg
aas
add
dec
pop
es
and
int
push
js
xor
fstl
es
and
sahf
add
push
add
pusha
pop
std
and
push
sub
or
jbe
adc
inc
cmc
jmp
addb
adc
or
pop
mov
add
test
push
mov
dec
pop
das
or
add
inc
iret
out
push
js
push
add
sbb
in
and
or
les
sub
sbb
leave
ss
cmc
sub
jmp
movsl
add
sbb
cmpsb
mov
out
add
outsl
pop
ss
add
mov
mov
adc
push
mov
pop
xor
repz
mov
sbb
lock
imull
and
cmpsb
xor
push
inc
add
int3
js
jne
pop
inc
lds
add
cmp
add
add
sub
pop
and
pop
sub
pop
cltd
jne
xchg
sub
out
lret
bound
inc
in
leave
jmp
add
sbb
negl
and
adc
adc
cmp
and
mov
aaa
popl
fwait
iret
int
inc
pop
sub
add
add
pop
xor
push
outsb
add
xchg
pop
dec
mov
mov
movsl
add
add
or
sub
push
subl
push
mov
in
pop
dec
arpl
xchg
pop
mov
pop
push
sbb
ss
negl
xchg
push
add
fucomp
sub
jecxz
sahf
mov
push
mov
flds
pop
shll
sbb
dec
xor
add
fnsave
mov
pop
pop
sbb
and
pushf
xor
jg
out
adc
mov
movsl
cmp
or
cmc
sbb
add
jl
cmp
add
push
and
add
or
sub
outsb
inc
mov
aad
add
mov
and
lds
std
and
bound
pop
inc
fildll
push
xchg
das
js
in
add
rcr
push
fisttpll
push
adc
or
int3
sbb
rcll
loope
sti
push
or
scas
test
sub
out
fistps
dec
adc
dec
in
pop
test
rcll
ffree
out
pop
jg
push
ret
cmpsl
ret
and
test
push
je
test
add
cs
push
pop
xchg
or
fstp
or
and
and
dec
mov
add
frstor
inc
sub
sti
lods
test
pop
mov
test
rcll
push
cmc
cld
inc
sub
fldl
xor
sub
xchg
lds
mov
dec
push
ret
inc
or
mov
movsl
fisttpll
lea
sub
pop
add
adc
pop
inc
or
test
test
mov
add
and
cmp
filds
adc
mov
or
jne
sbb
xchg
in
or
imul
add
adc
push
rorb
outsl
adc
or
push
addr16
sti
push
ret
imul
add
push
or
adc
add
add
icebp
xor
xlat
xor
mov
add
sbb
insb
ret
and
or
mov
ret
mov
add
jmp
add
add
ret
xor
arpl
outsl
mov
scas
lcall
jno
and
pusha
mov
xor
ds
push
divb
mov
pop
out
push
wrmsr
adc
inc
add
enter
cmp
pusha
adc
add
aad
loope
out
fxch
ss
fisttpl
int
loop
stos
int3
aad
cmp
fxch
int
sbb
popl
dec
mov
push
mov
jnp
cmpsl
push
mov
incl
inc
xor
mov
pop
sub
push
add
mov
call
or
daa
xchg
push
dec
cmpsl
xchg
or
shrl
cmp
inc
adc
adc
add
outsl
pop
dec
adc
lds
push
cmpsl
adc
arpl
or
push
mov
add
jns
xor
orl
inc
jg
pop
push
pusha
fmull
popa
daa
adc
dec
daa
aas
out
mov
cmc
xor
dec
and
aas
out
int
les
sbb
pop
out
push
pop
jecxz
add
icebp
inc
je
es
das
mov
rcrl
fwait
or
test
ss
test
rolb
ja
add
push
fsts
mov
add
push
and
adc
rclb
xchg
fldl
xchg
daa
popa
adcb
add
or
sub
xor
call
mov
and
mov
pop
push
mov
pusha
std
pop
rcrl
enter
mov
outsl
push
inc
pop
add
cmpsb
cld
mov
jbe
pop
popa
xchg
sar
movsl
push
add
lret
push
lahf
test
enter
iret
jge
adc
xchg
and
push
xlat
pop
or
cmp
in
inc
jmp
push
or
xor
das
sub
cmp
mov
std
pop
rorl
inc
adc
test
pop
inc
dec
xlat
into
bound
pop
xchg
das
pop
and
mov
imul
push
das
mov
fsubrl
imul
popa
nop
enter
xor
test
jnp
and
add
cli
or
jge
mov
push
insl
inc
clc
add
pop
mov
fisubrl
outsl
pandn
jp
das
push
aaa
inc
adc
adc
ud2
rcrb
jmp
push
jne
add
out
out
daa
xchg
popa
cmp
or
xchg
xchg
jmp
fcomps
cmp
jne
notb
pop
in
mov
fisttpll
or
add
call
xchg
mov
or
fcomp
cmpsb
jmp
mov
js
movsl
imul
test
and
sbb
xor
inc
jecxz
or
jp
cli
lods
dec
imul
daa
mov
dec
jmp
mov
sub
cmpsl
xor
mov
cwtl
mov
push
inc
pop
inc
dec
pop
mov
stos
shrl
xor
rcrb
xchg
lods
adc
xchg
adc
add
aad
std
cmp
in
mov
loopne
enter
sbb
sbb
xor
mov
xor
lock
add
stos
movsl
icebp
push
sbb
xor
aam
hlt
xorl
enter
test
movsb
loopne
xchg
stos
mov
pop
cs
mov
jbe
test
dec
repz
sub
clc
in
mov
notb
xlat
mov
call
add
or
or
xchg
es
mov
or
adc
xor
loopne
mov
mov
sub
pop
cltd
mov
sub
xchg
push
mov
andb
adc
bnd
sub
pop
in
out
sbbl
ds
add
and
add
pushf
rcrl
push
jne
dec
mov
loop
les
xor
or
cmpb
dec
adc
pop
cmp
cmp
int
ds
dec
jb
or
inc
mov
aas
sub
outsl
and
outsl
cmp
mov
test
mov
sub
call
jbe
push
jbe
fisubrs
dec
or
inc
scas
int
gs
scas
or
and
lds
sbb
movsl
fdivrs
push
shll
jbe
and
mov
mov
mov
pop
push
imul
aas
enter
mov
mov
cmp
push
sbb
sub
or
mov
inc
and
mov
push
adc
jnp
sbb
in
add
fsubl
sub
cmp
add
outsb
and
arpl
sahf
push
dec
push
scas
subb
sbb
inc
and
dec
insb
push
sub
xchg
cmp
adc
adc
lods
fsub
adc
dec
es
mov
mov
cmpsl
or
xchg
sbb
adc
adc
jl
lock
out
popf
xlat
dec
sub
cwtl
jg
aaa
xchg
add
mov
cwtl
gs
add
add
rolb
rclb
ss
push
test
lahf
andps
in
adc
fiaddl
pop
inc
and
aaa
out
xchg
push
test
in
pop
test
loop
cmp
cmp
jnp
mov
out
in
and
inc
pop
in
les
insl
pop
clc
call
or
scas
scas
test
out
sbb
lock
enter
sbb
add
xor
and
pushf
outsl
xor
and
adc
dec
jno
inc
scas
mov
daa
or
push
cs
push
dec
sbb
adc
push
mov
push
pavgb
xchg
jns
xchg
push
mov
andl
mov
jo
mov
or
xchg
lahf
push
aaa
push
adc
mov
or
jbe
sar
outsl
adc
cmp
mov
push
daa
add
js
mov
xlat
xor
leave
out
jb
es
lahf
cld
dec
xor
pop
inc
push
xchg
test
out
xor
or
mov
neg
mov
adc
and
sub
bound
sarb
jecxz
pusha
xchg
xchg
data16
mov
push
inc
adc
sub
jbe
fs
daa
push
clc
enter
cwtl
pop
iret
mov
cmp
sub
sub
aaa
push
mov
adc
mov
mov
lods
in
call
dec
sbb
mov
add
popf
mov
mov
enter
pop
inc
and
pop
flds
inc
mov
push
pop
and
nop
xor
fisubl
inc
cmp
dec
popa
push
and
lret
mov
jmp
adc
stos
popa
in
pushf
xchg
in
scas
adc
in
xchg
push
dec
iret
adc
andl
test
cmp
std
mov
xlat
jmp
mull
add
dec
inc
dec
xchg
fistps
add
jne
mov
cli
sub
inc
pushf
flds
clc
out
aad
adc
mov
stos
push
gs
inc
sub
pop
sub
jnp
cmp
std
xor
inc
imul
and
inc
or
pop
sti
and
mov
and
scas
lret
pcmpeqb
aad
sub
inc
jmp
insb
xchg
aas
and
mov
dec
cmp
call
cwtl
dec
or
sbb
test
xchg
dec
push
pop
add
int3
decb
nop
in
das
fcomps
mov
fcoms
mov
or
movsl
ret
lock
divl
aaa
or
xchg
addr16
in
jo
mov
xor
xchg
test
insb
std
xchg
xor
movsl
call
dec
inc
xlat
push
xor
push
dec
imul
xchg
daa
pop
cmp
sti
and
mov
imull
jbe
stc
aaa
or
add
push
xchg
push
stos
pop
enter
test
loop
xorl
ret
inc
clc
orl
sub
pop
xchg
push
fimuls
aaa
lret
pop
testb
repnz
jnp
das
mov
sbb
enter
mov
push
in
dec
shlb
jnp
jne
arpl
daa
add
mov
push
lea
imull
xchg
xor
pop
lods
push
sub
push
push
scas
cmpsl
adc
and
insl
and
adc
es
out
pop
xchg
dec
push
ss
fcoms
out
rorl
add
or
cltd
jo
mov
pop
inc
jp
in
daa
ds
mov
out
mov
sti
dec
fldenv
cmp
cld
push
aaa
jb
sub
cli
stos
cmc
and
rorb
fsubrs
push
aas
add
sub
mov
in
pop
and
jge
push
jmp
lret
mov
xlat
push
jecxz
lods
pop
adc
push
sbb
push
pop
stos
xor
hlt
dec
out
out
cmp
mov
loopne
fidivs
popf
shll
jb
pop
out
and
aad
ficoms
daa
test
lret
nop
imul
popf
call
pop
insl
xchg
xor
dec
jle
adc
nop
pop
pop
add
xor
enter
mov
loopne
jnp
outsl
inc
insl
pushf
test
in
add
loop
jae
dec
cli
inc
push
jmp
in
jne
std
das
adc
and
scas
and
out
or
fcompl
fdivrl
pop
adc
push
push
cwtl
test
cmp
cmp
scas
jno
fmul
mov
dec
mov
adc
stos
sbb
cli
cld
inc
sbb
aas
inc
pop
xchg
mov
in
sub
dec
sub
and
popf
repz
rclb
push
shrb
pop
mov
sarl
or
mov
inc
mov
mov
out
iret
call
pop
xlat
daa
imul
mov
push
mov
lcall
sub
enter
mov
sub
jne
add
mov
push
push
jno
movsl
push
out
lods
adc
ja
adc
dec
cmpsl
sahf
pop
mov
es
aaa
rclb
in
inc
enter
sar
inc
sbbb
pop
lret
enter
outsb
pop
sar
inc
push
jo
dec
enter
daa
rorb
rclb
push
push
enter
idivl
mov
pop
repz
mov
sub
jno
in
inc
repz
test
or
repz
dec
xor
cmp
push
or
out
rsqrtps
mov
and
sbbl
adc
pop
rol
jae
daa
cmpsb
push
popf
jl
jl
xor
and
aas
pop
pop
loop
mov
sub
xor
jecxz
add
xchg
sub
in
xchg
aad
mov
jb
xchg
call
adc
push
xchg
and
inc
idivl
xchg
inc
out
push
inc
mov
enter
sbbb
push
mov
pop
out
mov
push
mov
sbb
in
sbbl
inc
addr16
push
add
cli
xor
sub
sbb
xchg
or
cmp
xchg
or
rorb
add
test
in
push
add
inc
das
sbb
clc
mov
gs
cmp
or
xor
sbb
popf
rol
dec
dec
inc
call
cwtl
push
mov
cmpsl
stos
dec
xlat
push
inc
aam
es
int3
xchg
aas
fmuls
mov
jne
test
in
xor
cmp
outsl
xchg
inc
sti
enter
and
out
mov
popa
inc
or
adc
clc
jge
jns
jmp
push
rclb
cmpb
mov
and
roll
dec
nop
pop
mov
xchg
lods
and
ret
or
aas
pop
daa
dec
out
inc
fldenv
mov
sti
xchg
push
pop
add
sahf
or
pop
adc
pop
loopne
cmpsl
imul
test
cmp
sti
popa
aas
cmp
cmpsl
or
stos
or
mov
shlb
mov
ret
adc
arpl
or
adc
andl
and
add
mov
push
xchg
or
adc
scas
pop
add
inc
ret
xlat
adc
adc
rcrl
lock
push
push
mov
sbb
test
imul
es
fucomip
pop
addr16
sub
add
fcomps
mov
add
sbb
pop
daa
jg
icebp
insl
rcl
cwtl
inc
cmpl
es
dec
sbb
cmp
xadd
std
cmp
mov
inc
daa
lcall
adc
pop
jge
mov
and
dec
inc
mov
xchg
in
fisubs
jne
aaa
jnp
push
dec
sbb
lret
sub
test
jnp
mov
cmp
icebp
xor
mov
shrb
aam
das
rcl
push
adc
inc
xlat
repz
pusha
pop
jl
fidivs
adc
sbb
imul
cmp
insl
xchg
dec
enter
mov
fadds
pusha
in
pop
fmuls
add
aaa
or
cwtl
add
hlt
cld
mulb
push
add
js
mov
mov
insl
dec
push
shll
out
pusha
adc
in
shll
push
push
in
add
jne
and
loopne
mov
add
lock
sbb
test
cld
push
inc
pop
inc
push
testl
mov
lret
cmpsl
sub
dec
enter
subl
incl
dec
dec
outsl
cwtl
push
cmpsl
mov
dec
pop
movsb
and
or
inc
mov
dec
or
inc
test
push
out
and
movsb
mov
cmp
pop
xchg
adc
add
dec
inc
add
je
lds
xchg
adcl
rclb
lret
jae
push
cltd
push
add
inc
iret
adc
pop
sub
and
pop
or
adc
ja
inc
sbb
ret
or
aaa
pop
lock
xor
sbb
pop
dec
push
pop
shufps
xchg
pop
test
daa
push
clc
stos
dec
or
xchg
xor
cmp
aaa
and
das
aas
cmp
xchg
mov
inc
adc
push
inc
xlat
xchg
dec
xorl
mov
test
sub
out
hlt
and
inc
mov
cmpsl
pop
and
xchg
xchg
stos
and
cltd
out
in
sub
dec
xchg
cmp
push
stc
lahf
test
imul
pop
push
popa
aaa
cwtl
pusha
bound
stc
pop
inc
sub
mov
push
cs
or
mov
jle
nop
test
push
rcrb
orl
jo
or
xchg
push
popf
int3
mov
jno
xchg
enter
adc
mov
inc
pop
push
mov
rorb
sub
dec
jbe
cmpsl
pop
and
sti
inc
or
addl
test
sub
mov
xchg
sub
add
adc
xlat
dec
mov
setle
test
negb
out
xchg
fisubs
and
sbb
pop
pop
and
sbb
pop
mov
mov
cwtl
pop
dec
enter
movsb
add
push
mov
dec
mov
out
adc
les
add
push
cmp
mov
jo
cwtl
pop
push
inc
fwait
sbb
push
or
outsl
or
or
std
push
lea
xor
push
ror
imul
stc
loopne
es
cmp
lds
add
xor
mov
andb
jbe
sti
shlb
pop
add
xchg
test
mov
cld
mov
test
or
jle
sbb
add
cmp
mov
cmp
jne
dec
pop
push
fimuls
popa
push
gs
andl
mov
out
pop
pop
cmp
and
fdivrl
insl
mov
fs
push
cmpsb
xlat
aad
dec
xor
mov
push
cld
test
jmp
push
xchg
imul
push
fwait
pop
and
leave
rclb
add
mov
xor
xchg
sub
lds
xchg
cwtl
insb
mov
arpl
cmpsl
popa
inc
arpl
out
roll
add
push
pop
cli
stc
sub
xchg
xchg
adc
cmpl
daa
xchg
popf
aaa
mov
das
pop
std
and
dec
mov
sub
call
popa
mov
pop
pop
pop
lret
mov
sbb
rolb
out
hlt
sbb
jg
pushf
jne
jecxz
pop
sbb
test
enter
mov
dec
cwtl
or
mov
inc
out
int
in
and
rol
inc
andl
dec
inc
lcall
mov
sbb
mov
jp
xlat
stos
jno
mov
jb
jl
sbb
or
inc
pop
sahf
dec
adc
lock
pop
add
loope
iret
mov
aaa
or
adc
adc
push
inc
imul
pop
popf
xchg
pop
or
mov
adc
adc
and
inc
jbe
inc
fwait
sbb
inc
cmp
add
clc
cld
mov
inc
aaa
lock
adc
or
arpl
jmp
shl
push
push
scas
out
mov
lea
push
gs
sub
or
dec
push
ljmp
mov
lcall
dec
jp
xchg
or
dec
jnp
lock
and
popf
nop
xor
cmpsl
das
and
add
push
test
jns
jnp
xchg
xchg
cli
dec
add
aas
xor
cmc
and
roll
stos
xlat
push
out
and
mov
int3
cmp
push
adc
out
pop
or
or
pop
in
dec
scas
movsl
or
dec
test
adcb
xor
pop
add
inc
rorl
xlat
fdivs
cli
xchg
push
daa
sub
and
cmpsb
xor
inc
repnz
cmp
dec
xlat
cmp
sbb
ret
sub
xchg
push
cmpsb
pop
xor
inc
out
movsl
jge
cli
or
mov
test
pmulhuw
nop
adc
or
movsb
inc
rcrb
jno
shll
xlat
pop
mov
mov
push
add
cld
jns
les
in
pop
clc
jno
lds
push
lcall
and
adc
add
dec
add
xchg
push
out
faddl
and
sbb
shl
jnp
or
imul
dec
sbb
push
dec
daa
adc
shr
add
xor
mov
es
test
int3
add
xchg
jp
sbb
sbb
add
insl
push
aad
xlat
xchg
scas
cmp
in
and
sbb
aas
xor
xor
repz
lcall
and
push
leave
imul
ud2
xor
cmp
aas
add
mov
cmp
icebp
pusha
lods
sbb
jnp
call
push
test
inc
dec
mov
push
push
clc
enter
inc
cmp
mov
in
call
ret
sub
fidivrl
sbb
inc
push
scas
ret
popf
das
push
sbb
sub
movsl
subb
fbld
outsb
mov
pop
popa
insl
mov
shll
icebp
daa
xchg
pop
sbb
add
mov
xor
daa
mov
jecxz
lahf
lret
mov
sub
in
pop
lods
enter
lock
cld
mov
repnz
enter
pop
or
pop
sbb
or
xor
rcrb
or
stc
mov
scas
test
in
pushf
cmp
js
out
dec
inc
es
inc
rcr
daa
stos
xchg
mov
pop
loopne
fs
jbe
and
xchg
cmp
push
jne
and
addr16
clc
stc
sub
adc
xlat
pop
cmp
sarb
iret
syscall
out
sbb
lods
xlat
pop
mov
xor
dec
fsubs
pop
enter
shll
out
and
and
aas
mov
dec
sub
dec
and
cmp
xchg
pop
push
mov
inc
and
pop
sbb
test
imul
push
jo
xchg
out
std
push
and
lods
sti
xchg
ja
xlat
lock
sub
rsm
dec
mov
cwtl
enter
mov
out
out
or
jno
cmc
outsl
leave
hlt
and
js
jmp
push
ljmp
adc
add
adc
add
enter
outsl
jbe
inc
sbb
iret
sbb
outsb
xchg
cwtl
sbbb
test
or
popa
pop
test
cli
outsl
jae
jmp
mov
or
pop
das
enter
mov
push
add
roll
push
cli
in
ret
lds
sub
cmp
aam
cmpsl
xchg
cmp
cwtl
cmpsb
mov
es
xchg
out
xchg
sbb
xchg
and
xchg
iret
test
lock
movsb
enter
popa
adc
push
enter
fbld
mov
adc
mov
cltd
adcb
push
sub
or
dec
cmpsl
mov
ljmp
clc
in
cltd
jo
sbb
enter
xchg
add
mov
push
xchg
in
fwait
mov
push
dec
add
jl
and
cmp
inc
mov
xor
or
xor
cmp
roll
shlb
pop
aaa
push
or
rorb
xor
stc
jnp
mov
or
and
jge
rcl
sbb
dec
out
dec
pop
les
pop
rorb
push
lret
adc
jmp
or
dec
fwait
mov
push
lds
push
addb
sub
popa
sbb
xlat
mov
pop
jp
jno
sub
test
out
add
or
aaa
or
sub
add
inc
jbe
pop
pop
xchg
out
in
das
add
rclb
outsl
adc
outsb
cmpb
push
movsb
add
cmc
js
dec
cli
xchg
lsl
adc
and
sbb
cltd
pop
and
pop
arpl
mov
out
ljmp
mov
dec
bound
sbb
and
adc
test
lret
and
adc
cmpsl
std
nop
stc
mov
mov
mov
arpl
stc
mov
add
xlat
add
bound
lcall
jmp
or
loopne
mov
jns
iret
sub
scas
sub
adc
and
in
cmp
xor
adc
testb
mov
sub
sbb
mov
iret
fsubs
xor
cld
adc
outsl
xchg
loopne
bound
add
subb
jle
dec
mov
push
andb
out
divb
test
pop
aaa
in
mov
add
mov
dec
and
addl
dec
outsb
cwtl
add
xchg
cmp
cmpsb
inc
testb
test
inc
sbb
leave
mov
xchg
jno
mov
add
sub
scas
and
mov
cltd
or
or
fimull
cmp
mov
or
sbb
adc
add
mov
and
or
pop
mov
in
push
rorb
fs
lds
sbb
rorl
into
call
and
jno
sbb
mov
sub
cmp
cmp
push
es
mov
mov
and
scas
sbb
mov
jmp
fldenv
xchg
adc
push
imul
inc
dec
xchg
sbb
sub
pusha
jns
add
pop
jns
jnp
inc
popa
addl
dec
xor
cmp
add
jl
xchg
enter
lock
sub
sbb
push
notb
mov
pop
lret
es
push
sarl
push
pop
fdivs
sbb
outsb
enter
test
enter
inc
xchg
stos
sub
jl
cmpsb
mov
or
out
lods
adc
xlat
xchg
jmp
xchg
fsub
out
and
in
sub
push
pop
push
jne
leave
daa
mov
pop
inc
les
cmp
imul
sbb
icebp
add
leave
jno
mov
or
jg
push
inc
arpl
dec
add
inc
inc
pop
mov
scas
pop
pop
aad
sahf
or
daa
mov
in
daa
jle
mull
outsb
or
and
push
push
mov
sbb
enter
jo
adc
and
xchg
out
inc
push
sbb
push
outsb
test
enter
add
es
inc
pop
jo
cmc
add
popf
or
push
das
call
cmpsb
js
cmc
int
testl
test
daa
xor
iret
mov
pop
das
lahf
daa
and
or
test
ss
adc
inc
inc
cld
xchg
push
test
sub
mov
inc
push
mov
enter
mov
xchg
dec
mov
push
pop
sbb
loope
dec
cwtl
pop
xor
out
dec
cmp
in
adc
movsl
adc
sub
testb
or
imul
daa
adc
xchg
daa
decl
push
xchg
adc
push
cmpsl
or
push
adc
stc
xchg
rclb
lods
mov
daa
shl
push
xchg
loopne
fdivs
push
out
xchg
cwtl
sbb
lock
cmpsl
xlat
enter
loopne
and
push
movsl
outsb
addr16
rorl
adc
lods
or
push
clc
fdivs
sub
insl
mov
mov
mov
cli
cltd
xchg
inc
shrl
call
test
pop
rorl
push
jl
ds
sbb
push
bound
sub
sub
dec
sbb
inc
mov
xor
out
repnz
stos
int
dec
jo
cmp
xchg
sbb
movsl
adc
aad
in
in
fildl
jb
scas
in
stc
cmp
pop
out
xchg
lds
add
shrb
inc
mov
hlt
xor
imul
and
pop
and
mov
dec
jle
or
adc
iret
cmp
push
mov
push
xchg
adc
in
and
int
cltd
push
mov
sti
mov
xor
mov
adc
jns
outsb
and
mov
cmp
and
push
dec
push
push
dec
jns
js
sbb
jns
xchg
in
and
pop
orl
mov
andb
adc
lret
and
xchg
and
int
outsl
pop
xchg
mov
arpl
mov
xchg
or
es
adc
test
imul
out
inc
lret
insl
das
in
aaa
mov
add
mov
aas
sub
or
and
into
or
add
and
jae
push
daa
loope
insb
lock
fwait
mov
dec
add
loopne
daa
and
aad
scas
adc
lret
mov
fsubrs
add
cld
adc
or
xchg
inc
mov
xor
cld
lds
aaa
dec
xor
sub
rorb
cmpb
xor
sub
add
dec
js
jno
and
sub
pop
lock
and
movsb
in
mov
sbb
es
add
rolb
std
pop
popa
sbb
pop
ljmp
mov
sub
inc
popa
outsb
push
xchg
loop
cltd
jle
lods
movsb
or
cmp
pop
shl
lds
mov
repnz
lea
test
loopne
add
add
sbb
loop
push
mov
adcb
xor
inc
jb
cmp
jne
mov
outsb
or
mov
xchg
leave
lret
or
mov
push
outsl
push
xchg
negl
push
rorb
xchg
cmp
daa
nop
pop
inc
out
inc
aad
pop
cmpl
inc
or
dec
jg
mov
pop
shlb
dec
hlt
sbb
stos
add
fdivs
ja
sbb
xchg
clc
or
fcoms
sub
push
pop
xor
jp
mov
cmp
xchg
pop
scas
cmp
or
jge
mov
lcall
test
enter
xchg
add
pop
out
lret
out
inc
xchg
outsb
ja
push
or
cmpsl
shll
leave
loopne
iret
sub
mov
inc
enter
lret
add
push
jne
sub
mov
enter
push
jle
sub
in
outsb
sarb
sub
jl
xchg
and
arpl
call
out
and
loopne
jo
out
and
push
add
das
mov
ja
add
add
in
and
xor
aas
inc
mov
adc
sbb
xchg
pop
and
test
pop
jns
popl
xchg
pushf
or
ja
dec
inc
rol
ss
scas
xlat
addr16
sub
jo
fwait
and
lock
xor
subl
xchg
jns
cmp
jno
lds
xchg
imul
lock
pop
push
or
add
cwtl
mov
cli
sbb
inc
out
lcall
ja
outsl
jae
mov
push
push
xchg
add
xchg
pushf
or
or
mov
push
jne
pmulhuw
icebp
adc
jl
add
incl
adc
sbb
xor
enter
fbstp
stos
out
jne
pop
mov
or
pop
and
push
aam
popa
dec
cmp
ds
and
inc
ja
and
pop
test
movsb
cli
test
jge
lcall
shlb
adc
add
clc
sub
adc
not
leave
mov
cld
scas
movsl
add
mov
test
jo
cmp
rorl
loope
mov
pop
loope
enter
movzbl
cmpsl
enter
jle
ficoml
ljmp
sbb
adc
test
loopne
jne
movups
jecxz
and
jle
dec
or
add
adcb
mov
dec
pusha
lahf
adc
mov
sbb
push
jns
pop
xor
push
jnp
dec
mov
repnz
pop
dec
xor
inc
adc
pusha
insb
add
or
scas
mov
adc
leave
sub
lea
pop
xchg
idivb
dec
sub
adc
dec
das
stos
test
push
add
or
sbb
cs
jns
data16
push
mov
xchg
mov
mov
cli
imul
push
xchg
dec
mov
lea
dec
jl
dec
int
dec
testl
and
or
adc
test
test
in
push
test
cmpsb
call
jne
cmp
xchg
mov
enter
popf
or
cmpsb
mov
or
cltd
lahf
out
mov
cld
cmpsl
outsb
inc
jmp
enter
lret
or
movsl
sub
cmp
movsb
xlat
cmpsb
dec
and
or
fucomi
and
in
xor
fcomi
fsubl
mov
or
cmp
mov
clc
mov
push
jae
ret
jno
pop
ret
ds
aaa
lret
test
or
clc
std
push
shr
dec
fnstenv
rcll
test
lds
test
mov
mov
and
xchg
jge
test
lock
dec
pop
cmpb
mov
aas
ja
adc
jge
mov
popf
repnz
mov
cwtl
and
mov
sarb
in
test
or
out
mov
sahf
lds
enter
std
sidtl
mov
sub
inc
movsb
add
lret
cmp
adcb
subl
cld
add
subb
lret
mov
push
or
orl
ficoms
dec
xor
les
add
inc
dec
mov
cmpsb
lcall
mov
stos
add
shll
call
inc
or
and
loopne
jp
adc
inc
gs
aaa
jns
mov
imul
adc
sub
pop
in
insb
loop
dec
mov
cmp
xlat
mov
cmpsl
add
push
cltd
and
sub
repnz
sbb
push
and
push
out
repz
xor
bound
xchg
shlb
lahf
in
sti
cld
movsl
fst
cmp
push
push
add
in
cmp
lcall
sub
adc
adcl
ss
das
adc
aam
adc
arpl
adc
ret
dec
iret
arpl
mov
jnp
flds
push
xchg
mov
in
xor
sbb
enter
push
adc
scas
sbb
cld
inc
pop
xor
sub
sbb
jmp
adc
push
sbb
and
jle
push
or
sbb
sub
jmp
aaa
cli
mov
cmc
push
and
scas
imul
sub
call
mov
or
sarb
sub
inc
addb
lahf
mov
out
mov
in
roll
popf
int
adc
push
pop
enter
mov
fbstp
enter
inc
push
mov
and
mov
push
add
out
imulb
jb
das
arpl
jge
enter
in
test
notl
sbb
pop
or
dec
mov
hlt
subb
cmp
sbb
insl
cs
sub
inc
outsl
or
or
prefetch
iret
imul
or
mov
ficompl
push
pop
or
int
imul
mov
je
adc
jp
cmpsb
mov
or
or
xor
or
addr16
add
push
mov
aaa
xchg
inc
addl
imul
xchg
or
es
ljmp
adc
insb
push
and
gs
ror
sbb
add
aaa
sub
cli
rorb
add
xchg
jle
adc
adc
mov
inc
inc
ret
mov
push
adc
add
loope
push
push
pusha
andb
jecxz
cwtl
addr16
sbb
cwtl
push
scas
aaa
or
mov
movsb
clc
dec
add
lods
or
inc
adcb
inc
sub
fwait
mov
xor
mov
xor
daa
adc
movsl
adc
pop
cld
lea
inc
aas
fnstcw
dec
cmpsl
or
mov
inc
sahf
call
inc
xchg
mov
in
sub
sbb
int
imul
mov
negl
and
add
and
and
lea
mov
sbb
pop
movsl
mov
les
and
int
notl
pop
inc
daa
push
shlb
in
fsubl
and
orl
fsts
cmp
insb
mov
xchg
ljmp
inc
adc
inc
notb
mov
pop
test
adc
daa
lahf
enter
call
mov
xchg
mov
test
cmp
push
das
sub
out
sub
sbb
inc
in
sbb
mov
mov
add
loop
jns
test
adc
xchg
andb
in
scas
adc
push
cltd
shrd
adc
ror
and
sti
or
and
loop
push
in
aam
aam
scas
daa
adc
lock
cld
das
ss
cmpsl
jle
and
fcom
adc
push
cs
test
lods
adc
in
sub
in
hlt
aaa
adc
sbb
or
insl
sub
imul
imul
test
or
dec
inc
lret
xchg
imul
movhps
adc
dec
lea
leave
mov
leave
sbbb
xchg
sti
jmp
add
lcall
push
inc
bound
adc
movsl
mov
xchg
mov
jge
adc
pop
test
or
inc
pop
jmp
movsb
dec
push
jb
pop
test
daa
or
mov
in
sub
fadds
push
ds
add
xlat
test
xchg
and
push
mov
in
aaa
adc
push
lods
aas
push
ret
mov
push
add
push
test
mov
subl
xchg
mov
aam
mov
push
adc
cmp
pop
sbb
mov
mov
xchg
lds
sub
xchg
pop
mov
or
push
inc
push
add
jmp
adc
call
pop
adc
and
addl
pop
xor
inc
push
xchg
es
sbb
mov
add
push
jbe
js
ja
sbb
push
stos
add
inc
cmpsb
or
rcrl
aaa
aad
in
popf
cwtl
cmc
and
xor
add
xchg
cmpl
rcrl
dec
mov
nop
cld
test
shl
mov
movl
add
aaa
arpl
arpl
adc
stc
int
inc
mov
mov
jns
sub
aam
test
inc
xchg
inc
cmp
mov
add
idivl
lahf
pop
cmpsb
outsl
mov
es
push
mov
jae
push
and
push
mov
mov
scas
cltd
sub
test
push
inc
dec
enter
cmp
scas
sbb
pop
pop
jno
or
lods
add
addb
or
cmpsl
sub
mov
sbb
add
std
test
and
xor
out
adc
pop
sbb
sbb
js
push
xchg
bound
mov
push
std
dec
and
leave
adc
lods
loope
test
pop
hlt
fs
mov
imul
inc
mov
fldln2
pop
shll
sbb
stos
inc
pop
push
js
das
sbb
inc
xchg
xor
scas
push
and
or
rcr
out
movsl
adc
in
fs
and
inc
inc
cs
loope
or
cmc
mov
mov
sbb
pop
jecxz
xchg
fs
add
divb
add
adc
lcall
jge
fcom
sbb
pop
xchg
adc
add
adc
xor
add
cmpsb
adc
movb
mov
or
push
jae
jg
cmp
sub
arpl
sub
enter
idivb
lds
dec
enter
aaa
inc
gs
cmp
sub
mov
inc
jns
and
inc
push
daa
push
ficompl
out
or
movsl
ds
add
dec
aaa
xlat
js
jge
pushf
pop
mov
sub
inc
mov
xchg
and
subl
orl
push
mov
lret
shrb
ret
lds
fldln2
adc
cmp
pop
pop
test
push
xchg
es
lret
adc
dec
xchg
mov
dec
inc
jne
jno
lret
xchg
icebp
xor
push
xchg
arpl
or
negl
push
in
mov
hlt
push
rcl
int
dec
mov
adc
and
xchg
add
js
push
fcoml
nop
sub
mov
lods
xchg
out
adc
out
out
cwtl
stc
aaa
mov
dec
xchg
icebp
xor
mov
pop
sub
out
repz
pop
shlb
cmc
unpcklps
add
adc
ja
popa
divl
add
mov
xor
out
xchg
sub
arpl
jg
nop
aaa
xor
int3
mov
repnz
fmull
lock
mov
xchg
cmpsl
adc
adc
stos
femms
fadds
mov
insl
in
rcrb
sbb
inc
add
lcall
rorl
enter
jb
int
shrl
mov
test
xchg
pushf
repz
ret
jbe
cmp
imul
sub
subb
leave
cmp
nop
lds
enter
mov
sub
jecxz
sbbl
lret
test
repnz
outsb
mov
in
imul
mov
adc
lock
pop
out
sub
loopne
cmp
mov
imul
sbb
adc
outsl
xchg
push
fcomps
hlt
pusha
lock
mov
cwtl
movd
mov
pop
test
mov
push
jns
mov
add
inc
or
xchg
mov
mov
cmpsb
int
sbb
je
or
pop
test
inc
enter
mov
lods
rolb
sahf
fwait
inc
fildl
or
fs
cmp
sbb
gs
int3
xchg
jp
sub
fwait
call
in
push
dec
dec
sbb
setb
push
xor
aas
rcrl
fnstcw
jp
movsl
sub
cmp
cltd
mov
out
out
cmp
fdivs
cli
int
jg
xchg
bswap
pop
ljmp
push
pop
loope
paddsb
cmp
add
or
add
xchg
insb
insl
out
jne
cmp
call
lcall
outsb
hlt
scas
inc
insb
mov
and
and
mov
repz
mov
pop
inc
call
leave
lret
nopl
mov
fisubl
insl
orb
pop
and
push
sahf
inc
ja
or
ds
push
xchg
das
add
subb
test
xor
shrl
xlat
daa
imul
popa
xchg
dec
or
sub
cmpsb
add
pop
ja
mov
stos
dec
mov
cmpsb
adc
popa
movsb
andl
lods
lock
xchg
pop
in
xchg
jnp
jne
or
and
inc
dec
jg
xchg
or
xor
lcall
sbb
clc
lds
mov
add
and
call
int
adc
pop
and
cwtl
out
add
mov
test
scas
jo
jle
lea
add
and
mov
inc
out
in
cmovne
jp
dec
sub
out
push
je
cmp
rcrb
push
adc
sub
test
or
xorb
lahf
inc
imul
into
shr
or
fyl2x
or
sti
and
mul
mov
jle
not
dec
testl
dec
cmpsl
lret
cmp
int
mov
adc
and
jl
add
popl
sbb
call
cwtl
or
pop
inc
pop
ja
or
or
bound
or
js
mov
mov
inc
push
dec
and
cli
mov
inc
int3
js
cmpsl
shlb
adc
stos
out
int
add
sbbl
adc
pop
lods
add
and
and
xlat
int3
cmp
icebp
outsl
enter
sub
in
mov
inc
mov
cld
enter
out
jecxz
or
pop
andb
and
imul
inc
stos
dec
enter
es
fsubs
fwait
ljmp
push
out
jae
frstor
push
cs
shlb
aaa
rcrl
insl
mov
shl
and
pop
xor
mov
daa
ds
xor
stc
mov
and
imul
xor
dec
repz
mov
or
lcall
mov
pop
adc
dec
or
sub
xchg
aaa
adc
call
test
and
shl
xor
dec
sti
xlat
push
inc
xor
sbb
cli
inc
lds
xchg
out
stc
and
daa
arpl
scas
fadds
inc
mov
jno
in
add
mov
loope
jns
in
adc
movsl
inc
xchg
sbb
push
add
push
sbb
sbb
cld
pop
adc
and
out
xchg
loopne
adc
dec
sub
and
arpl
and
imul
pop
mull
or
cmp
stos
mov
sbb
jno
loopne
mov
sbb
and
test
pop
inc
lahf
lret
cmc
add
xchg
sbb
scas
xor
addb
adc
inc
and
insl
das
jge
out
sbb
shufps
lods
adc
cmpsl
or
roll
lahf
jg
jne
rolb
lods
nop
pop
pop
ret
jb
enter
sub
jns
dec
mov
add
push
push
enter
scas
inc
cmpsl
daa
push
mov
inc
add
sbb
int
ja
mov
lcall
xchg
push
lahf
adc
adc
test
hlt
das
xorl
cmc
repnz
sti
bsr
or
mov
bound
and
div
and
pop
jne
mov
inc
inc
aas
dec
push
or
adc
jno
sub
mov
xchg
sbb
mov
mov
movsl
mov
lahf
dec
sbbb
xchg
pop
int3
xchg
mov
sbbl
pop
out
xchg
fwait
xchg
scas
jne
pop
dec
daa
aam
jle
test
cwtl
xor
lahf
xchg
push
push
mov
fsubp
aam
pop
jmp
push
xchg
test
lds
lret
push
xchg
fisubs
rorb
push
xlat
aam
lcall
pop
mov
or
cltd
mov
cmp
gs
rorl
pop
push
xor
and
adc
out
sar
or
add
mov
pextrw
jno
jecxz
mov
mov
ficomps
nop
xchg
xchg
cmpsb
or
pop
jecxz
inc
xchg
outsl
pop
xor
testl
repz
xor
stos
inc
popf
bound
ss
xchg
in
adc
aad
dec
inc
xchg
adc
insl
mov
cmovg
pop
call
push
xlat
adc
mov
je
mov
sub
sarl
aaa
test
enter
add
mov
dec
fsubs
jne
pop
lret
cld
fmul
push
mov
xor
inc
or
sub
arpl
add
push
ljmp
push
xchg
arpl
push
shlb
push
in
mov
aam
clc
add
xor
enter
jne
out
ficoms
xor
arpl
sbb
pop
cmpsl
sub
sub
in
or
out
sbb
sub
rolb
sarb
xlat
testl
enter
xlat
cmp
adc
add
incb
push
push
xor
inc
call
xor
pop
lock
sti
out
mov
mov
adc
push
sti
push
pop
out
ret
enter
mov
sub
daa
push
mov
push
popf
sub
xor
sub
and
inc
or
lods
and
xor
lea
dec
inc
xchg
xchg
lds
add
push
movsl
adc
push
sbb
out
stos
jg
aaa
movsb
scas
js
jg
out
add
dec
add
adc
add
cmp
sub
and
dec
sbbl
enter
orl
rolb
test
jle
addl
movsb
dec
repz
out
fwait
stos
clc
clc
pop
xchg
test
fisttpl
mov
outsl
add
jecxz
sub
cmpsl
pop
enter
dec
inc
adc
dec
push
mov
std
dec
es
mov
and
outsl
lahf
inc
cmp
dec
test
add
rorb
pop
xor
sbb
ja
xchg
out
adc
inc
daa
insl
and
enter
inc
in
shll
cwtl
cmc
bound
and
cli
inc
push
movsb
inc
dec
add
adc
dec
cmp
popa
test
es
dec
inc
ja
pop
or
add
add
adc
push
cmp
inc
or
adc
adc
mov
lea
fstpt
out
bsf
mov
loop
xor
dec
xor
push
inc
lea
outsl
jle
lods
add
out
notb
xchg
jmp
push
mov
inc
mov
mov
andb
xchg
std
sub
stc
push
in
out
push
sub
dec
inc
scas
pop
add
xchg
jl
push
xorb
into
sbb
mov
fadds
pop
inc
add
dec
stos
xchg
movsb
stc
sti
mov
dec
arpl
sbb
fsubs
mov
xchg
xorb
xchg
lock
into
pop
cld
xchg
mov
adc
dec
cld
test
xchg
cmp
pop
push
inc
push
pusha
arpl
insl
insl
cmp
jb
or
add
repnz
in
dec
or
cmpsl
mov
enter
fbld
jns
xchg
addl
in
sbb
cmpl
xchg
add
dec
nopl
sub
sbb
out
mov
cld
test
push
xchg
das
inc
iret
lret
jecxz
xlat
push
idivl
jb
inc
js
add
add
mov
loop
pop
mov
mov
xchg
leave
adc
inc
aaa
ret
add
add
add
or
out
push
adc
in
movsb
jno
sarb
xchg
dec
loopne
lret
pop
jne
or
xchg
sbb
testb
in
lea
or
inc
push
mov
xchg
cmpsl
test
loopne
adc
sub
ljmp
ja
in
mov
ljmp
fiadds
mov
or
sub
sarb
inc
dec
xchg
subl
sbb
ja
cmp
dec
xchg
and
or
enter
cmp
pop
xor
and
mov
lcall
xor
sbb
push
inc
or
loope
rorb
sub
orb
cmpsl
dec
pop
add
cmp
add
cmp
dec
add
inc
fwait
inc
push
leave
iret
sub
xchg
jmp
pusha
das
mov
paddusw
xor
popa
and
mov
cmp
js
arpl
lock
push
imul
das
xorl
out
arpl
mov
cmp
push
xorb
enter
enter
in
aas
stos
mov
and
ret
mov
xchg
loope
add
mov
xchg
jecxz
ret
and
outsl
cmpsb
xchg
push
mov
ljmpw
dec
mov
iret
repnz
add
xor
jmp
aam
ss
fwait
mov
insb
and
faddp
pop
std
xchg
cmpsl
js
hlt
rolb
add
std
dec
rcll
cld
iret
fnsave
arpl
cmp
mov
inc
mov
iret
jge
adc
test
push
movsb
jae
sarb
push
inc
fwait
jge
push
daa
add
jge
das
orl
pop
jge
movsl
add
cmp
sbb
and
sbb
lret
scas
mov
rorb
into
xor
inc
mov
or
mov
xchg
sbb
or
repnz
push
pop
lret
cmp
add
int3
xchg
fwait
mov
mov
fadds
mov
mov
inc
push
popa
decb
test
ss
aaa
sbb
add
std
cli
xor
ljmp
rclb
push
loop
sub
int
daa
sbb
jge
ljmp
mov
clc
std
xchg
mov
mov
mov
lods
adc
rcll
jecxz
add
mov
insl
add
hlt
or
jecxz
ljmp
push
cmpsb
mov
sbb
call
jnp
cmp
add
or
or
add
pop
mov
xchg
pop
or
push
bound
inc
push
adc
cmpb
mov
cld
adc
cs
add
scas
repnz
mov
jno
incl
iret
fsubr
push
push
and
pop
add
cmp
out
rclb
push
push
add
lcall
test
mov
pop
hlt
xor
sbb
pop
cli
push
xor
dec
sarb
dec
push
faddl
fsubl
adc
xchg
cmp
popf
iret
adc
pcmpgtw
sub
inc
cli
cmpsl
cwtl
stos
aaa
and
int
jle
or
mov
cld
dec
jmp
out
scas
push
cmpsb
sub
mov
stos
jl
mov
cmp
sti
add
adcb
loopne
mov
xchg
cmp
mov
push
paddsw
cmpsl
daa
inc
inc
int3
les
mov
pop
pop
cmp
popa
mov
sbb
rcr
inc
xchg
mov
pop
pop
aas
xchg
sbb
cmp
mov
sbb
jne
in
lock
ret
jne
std
cmp
mov
fcmovnbe
mov
xchg
mov
fcompl
movsl
sarl
adc
mov
push
nop
in
xchg
pop
sbb
pop
jle
adc
aaa
inc
push
movsb
lret
in
imul
xor
imul
push
jmp
jecxz
ss
push
jnp
les
mov
adc
add
and
pop
jnp
and
imul
data16
lret
cwtl
js
in
and
mov
int3
cld
xchg
mov
or
adc
ret
imul
jnp
add
mov
int
inc
add
and
push
mov
and
or
adc
cmp
loopne
aaa
push
xorb
xchg
cmp
mov
dec
enter
call
aaa
add
sbb
test
push
cwtl
mov
in
cld
lods
add
xchg
out
xchg
out
push
fmull
xchg
add
outsw
repnz
das
cmp
imul
js
enter
inc
jne
cmc
mov
iret
push
add
leave
iret
sub
test
mov
bound
inc
test
xchg
pxor
out
ja
jge
and
sub
rcrb
add
jge
je
jmp
jno
ret
in
add
inc
loopne
ss
sbb
pop
cmpsb
inc
popf
aaa
add
push
pop
divl
test
ljmp
push
add
sbb
push
jp
stos
add
adc
addr16
pop
ror
das
or
dec
dec
test
add
pop
scas
pop
mov
hlt
inc
cs
lahf
xor
fisubrs
xlat
mov
sbb
adc
ss
jge
int
loopne
imul
rcl
dec
fmuls
sbb
lcall
push
mov
inc
int3
mov
and
mov
dec
push
jg
add
int
dec
mov
xor
xor
outsl
adc
sub
cmp
fstpt
or
or
rcrb
les
mov
popl
loop
addr16
push
fcompl
push
jns
pop
rcll
pop
imul
arpl
stos
push
dec
fdivr
lahf
cli
hlt
xchg
das
subl
mov
or
adc
jp
xchg
adc
lahf
add
inc
xacquire
add
jmp
loope
iret
xchg
sbb
pop
sahf
adc
cld
ljmp
addr16
in
loopne
xor
sti
rep
iret
cmp
jmp
xor
ja
or
popf
xchg
jge
adc
xchg
lock
jl
jl
cmpsl
dec
sub
ror
dec
adc
cmp
cli
inc
hlt
mov
repz
popf
loopne
xchg
andb
inc
bound
cli
push
cwtl
jp
adc
jbe
add
cmpsl
popf
rcrl
clc
inc
sub
or
not
sub
jg
cmp
or
sbb
add
inc
jge
cmp
shrb
data16
add
pop
ss
jns
ljmp
add
adc
dec
xor
jne
mov
and
push
shll
sti
add
addl
dec
push
jmp
pushf
adc
dec
cwtl
xor
lret
jl
xor
dec
xor
push
mov
clc
cld
sbb
xor
xor
fistps
daa
adc
sbb
call
lret
add
enter
fwait
push
jne
xor
xchg
add
adc
add
mov
xchg
dec
ja
add
outsl
mov
cmpsl
mov
cmp
addl
pop
or
bound
pop
repnz
mov
sub
mov
dec
outsb
daa
and
cwtl
sub
xor
iret
add
aas
fbld
scas
outsb
sub
loopne
add
leave
mov
cmp
push
push
dec
cmpsl
fs
jge
adcb
ja
lcall
stc
mov
into
jp
mov
mov
lret
cmp
pop
arpl
stc
cwtl
das
inc
testb
cli
out
mov
cmp
stc
adc
in
inc
in
sbb
xor
cs
pusha
in
jg
addr16
pop
inc
adc
bound
mov
sub
stos
adc
lret
test
bound
pop
jno
inc
xlat
hlt
xchg
dec
add
or
add
mov
mov
xor
subb
roll
xlat
enter
inc
outsl
jno
mov
std
aaa
jno
xor
push
xchg
bound
add
push
ja
xor
out
jmp
mov
lods
jae
aas
mov
adc
dec
stc
loopne
pop
test
stc
xchg
test
adc
movsl
cmp
out
enter
adc
push
pop
sbb
lods
pop
and
push
adc
pop
push
shr
adc
and
fwait
or
scas
shr
push
fsubrl
enter
and
or
in
enter
out
in
cmp
mov
pop
add
lds
pop
and
loopne
out
orb
jp
lret
inc
add
pop
in
dec
mov
fst
mov
xchg
loopne
arpl
push
pop
and
std
fs
fbstp
or
push
push
stos
leave
mov
add
lcall
rclb
lret
sbb
adc
in
xchg
aaa
cmpsb
in
popl
dec
cmp
aad
sahf
fstpt
dec
cmpsl
inc
add
adc
popf
lret
push
adc
lods
daa
lods
pop
adc
and
in
or
xchg
lahf
cmp
nop
lahf
out
sbb
pop
or
add
xor
aaa
aaa
jmp
dec
mov
call
in
test
push
push
push
xlat
pop
rolb
adc
jl
lods
inc
push
mov
out
xchg
dec
repnz
sub
xchg
out
mov
mov
xchg
xor
pusha
imul
cmc
lock
loop
out
adc
push
fst
in
in
xor
stos
adc
xchg
xor
ror
jns
aam
lock
insb
mov
imul
fisubrs
sbb
enter
test
dec
jne
jae
push
mov
pop
call
pop
push
enter
xchg
pop
sbb
lock
call
jnp
iret
leave
daa
ljmp
push
lea
scas
mov
vpmacsswd
das
out
test
push
popa
xchg
and
jmp
std
out
jmp
xchg
shlb
dec
push
inc
mov
icebp
sbb
add
inc
mov
sub
and
xor
aaa
or
test
pop
aaa
test
xchg
out
and
rclb
xchg
adc
pushf
shlb
and
sub
xlat
divb
adc
outsb
sub
decl
mov
sub
mov
aam
add
cmp
and
push
push
std
clc
daa
pushf
mov
mov
rolb
test
sbbb
mov
mov
mov
test
xchg
ja
rorb
lahf
orl
jl
cwtl
mov
push
xchg
iret
xchg
push
das
mov
pop
xlat
in
addr16
pop
aaa
push
in
jmp
je
mov
jecxz
fcoms
jg
adc
lods
test
stc
nop
xor
cld
xlat
push
scas
hlt
jl
loopne
sub
mov
xchg
shrb
test
xlat
jo
push
inc
aaa
mov
sub
das
cmpsl
xor
jno
xchg
fldcw
incl
add
aas
jecxz
lret
insl
ds
add
sub
roll
jmp
xor
ja
aam
dec
out
mov
and
lock
addl
mov
das
inc
andl
mov
lods
cmpsl
es
xchg
pop
lret
or
mov
xchg
popf
push
push
jmp
pop
adc
out
in
jae
inc
pop
sbb
jno
por
cmp
adc
bound
xchg
adc
aam
xor
and
xchg
mov
shrb
inc
fisubrs
mov
xchg
pop
adc
adc
push
push
cmc
cmovge
rclb
dec
movsl
aas
mov
das
or
xchg
jb
jle
adc
xchg
pop
ds
rorl
mov
mov
cli
fcom
cmp
cld
mov
mov
and
mov
enter
hlt
movsl
adc
popf
xor
jno,pn
sbb
dec
push
xchg
jge
cmc
pop
dec
mov
pop
xchg
push
add
cmp
ret
int
mov
and
sbb
and
push
jnp
aas
add
call
movsl
sti
mov
or
adc
push
fcoml
add
aam
ret
mov
pushf
jp
sbb
mov
in
and
push
or
mov
das
pop
pop
fwait
cltd
mov
push
sarb
or
mov
mov
jl
subb
xchg
lods
inc
jns
cmpsl
push
jg
dec
or
mov
pop
loopne
push
fsubrl
inc
mov
fidivl
cmp
sub
xchg
inc
rcrl
rorb
stos
mov
test
dec
mov
jo
fdiv
enter
mov
mov
sub
shll
sbb
mov
dec
xchg
xchg
dec
push
iret
dec
or
movsl
leave
flds
jnp
sbb
lahf
or
or
aam
xchg
and
mov
sub
out
sar
jl
stos
mov
push
shlb
data16
xchg
push
pop
adc
or
cmp
fcomps
inc
add
xor
sbb
sahf
cmpsb
mov
add
sti
inc
add
and
push
or
test
lcall
inc
and
ja
adc
lahf
sahf
mov
call
cmp
ja
fucomip
adc
jnp
inc
enter
cli
adc
sbb
inc
inc
push
jno
sub
mov
imul
addb
stos
enter
inc
add
adc
in
push
mov
cwtl
xchg
sub
jp
ret
lret
in
add
cmp
jbe
xchg
mov
or
nop
and
cmp
inc
jg
mov
and
pop
test
jae
cmp
rolb
sub
inc
stc
andl
dec
fldcw
pop
mov
push
add
or
mov
sarl
xor
push
jnp
push
es
cmpb
jge
sub
push
lret
test
xor
lods
inc
aaa
es
xchg
imul
xchg
pop
push
xchg
arpl
dec
push
dec
aaa
inc
and
popa
lahf
dec
test
cmpl
aam
movsb
xchg
andl
xchg
sbb
pusha
sarl
popa
std
fmull
add
sbb
sub
mov
ja
dec
mov
pusha
and
test
rcll
push
data16
xor
rclb
mov
sarl
sbb
test
adc
jo
jno
jno
cmc
ds
aam
int
mov
xchg
xchg
cmpsb
push
push
xchg
sahf
std
mov
add
jecxz
adc
pop
mov
int
leave
add
pop
jne
daa
ljmp
gs
test
cwtl
enter
cs
stos
mov
push
inc
bound
adc
sti
shll
cmpl
in
or
out
enter
dec
arpl
loope
pop
shlb
dec
jne
dec
rolb
mov
add
inc
xor
inc
or
cmp
and
mov
mov
cmp
mov
mov
lcall
test
inc
in
adc
mov
push
mov
outsb
iret
pop
jmp
add
inc
fwait
mov
mov
sub
clc
pop
popa
push
lock
ret
in
shr
xlat
mov
stos
repz
jge
xchg
adc
mov
leave
sub
sub
add
aam
or
xor
aam
mov
push
clc
daa
pop
sbb
or
pop
lea
adc
pushf
or
lahf
cmp
mulps
jge
add
lahf
aaa
aas
or
xor
aaa
jecxz
ret
ja
mov
int3
cli
fs
push
and
xchg
adc
sbb
cmp
pushfw
popl
inc
cwtl
inc
pop
pop
dec
andb
add
inc
push
repnz
adc
mov
rclb
lret
and
jnp
enter
and
sar
enter
addr16
inc
loopne
inc
push
cmp
and
pop
fnstcw
mov
addr16
shr
mov
ret
sub
fcmovnu
mov
jge
loop
mov
andl
jnp
push
fbstp
add
adc
jle
loope
adc
andb
dec
inc
or
fmuls
cmp
pushf
enter
pop
arpl
mov
xor
add
pushf
sub
aaa
push
jl
mov
mov
das
adc
sub
loope
fwait
fadds
out
push
sti
cmpsl
test
pop
aad
add
stc
call
and
push
adc
in
cwtl
mov
or
addl
xchg
stos
mov
jns
add
insl
loope
mov
shll
dec
popf
cmpsl
pop
sbb
testl
mov
aaa
adc
add
icebp
lock
mov
adc
or
add
pop
or
inc
or
push
fnstsw
or
sub
pushf
push
dec
loop
sbb
adc
push
test
xchg
sub
in
xor
sbb
mov
out
sub
cmp
insl
fwait
mov
cmp
lds
add
aas
enter
cli
jbe
in
mov
arpl
pop
add
int3
ja
mov
adc
shrb
imul
xchg
sbb
ss
push
cmpsl
out
das
inc
jb
cmc
call
dec
add
sub
and
adc
mov
popa
pop
xchg
add
testl
cmc
pop
js
sub
jmp
or
adc
push
sbb
adc
add
push
ret
in
pop
enter
lahf
ret
cmpsl
out
sbb
idivb
mov
repnz
rcl
inc
sub
inc
mov
inc
test
dec
int3
jnp
push
xchg
add
push
call
mov
test
dec
fbld
xor
inc
das
mov
jbe
divb
jns
and
and
jl
xor
jns
inc
out
das
hlt
out
adc
rol
dec
dec
ficoms
cmp
sbb
fldenv
orl
std
arpl
adc
outsb
jno
in
or
lock
mov
and
push
jl
and
push
push
jecxz
data16
push
adc
mov
popa
or
sub
xor
inc
cltd
filds
es
in
jge
add
sub
movsb
adc
push
push
inc
dec
or
adc
or
add
add
push
popa
adc
mov
out
enter
jae
arpl
sbb
repz
sbb
sahf
push
test
or
push
mov
adc
dec
and
es
pop
xchg
dec
stc
pop
xchg
pop
das
inc
jmp
lods
shrb
lea
iret
sbb
daa
icebp
add
cli
jecxz
test
stc
jmp
test
cmpl
repz
outsb
test
out
jne
mov
sbb
xor
fxch
xor
add
and
adc
dec
pusha
or
push
pop
add
push
xor
adc
ds
mov
sub
frstor
jmp
shrl
dec
rclb
inc
jge
or
fnsave
jno
sahf
jae
dec
dec
cmp
movsl
mov
aad
das
and
psubw
pop
shl
jne
inc
cmpb
add
shlb
call
mov
imull
mov
clc
pop
aad
in
cmc
sub
enter
outsb
jae
xor
jne
pop
dec
aam
mov
push
mov
pop
or
test
mov
sbb
pusha
sub
pop
push
jbe
pop
adc
and
into
daa
xor
out
test
sub
xorb
mov
pop
pop
add
mov
dec
sbb
aam
test
xchg
in
loopne
ljmp
cmp
int3
mov
movsl
jmp
mov
jmp
fwait
push
popa
xor
sub
mov
lds
xchg
mov
mov
add
fwait
rcrb
add
cld
jmp
js
sbb
inc
fwait
pop
divb
sbb
je
sub
int3
add
mov
mov
lret
ljmp
dec
cmp
testb
pop
push
loop
cli
dec
rcrb
adc
mov
add
pavgw
je
mov
push
fistpl
push
loopne
arpl
adc
mov
inc
cmpsb
jno
cmp
sbb
aam
lret
add
and
mov
add
out
pop
mov
sub
dec
fsubrs
jmp
mov
mov
mov
inc
addr16
sub
push
sbb
ss
shr
push
sbb
xchg
es
push
call
out
jne
movswl
call
inc
out
lock
adc
rorl
xchg
inc
sbb
mov
andl
lods
sbb
pop
push
gs
gs
jne
fwait
push
orl
lock
sbbl
mov
rcrl
inc
mulb
pop
add
popa
and
xchg
mov
sbb
fsubl
fidivl
inc
dec
xchg
push
in
jl
cmp
jbe
push
mov
xor
fdivl
dec
bound
jmp
movsl
fistpll
jg
dec
lahf
xchg
scas
es
mov
and
das
out
push
daa
sub
pop
sub
xor
es
pop
js
adc
cmp
adc
jo
or
push
jo
jnp
dec
dec
inc
daa
xor
push
sti
and
jmp
sub
fdivrl
mov
xchg
cmpl
and
aad
outsb
stos
add
adc
mov
stos
sub
ret
cs
jae
stc
mov
sub
xlat
addl
fs
or
add
mov
cmpsb
pop
orl
cmpsb
movsl
jge
repnz
push
test
dec
push
jecxz
xlat
xor
mov
aaa
ficompl
cld
or
ret
mov
subb
shll
dec
lock
and
cltd
cli
fwait
maskmovq
idivl
cmp
rolb
nop
in
mov
dec
lcall
and
imul
mov
hlt
cltd
lock
fdivs
ja
addl
scas
jg
sbb
jle
push
clc
push
inc
inc
pop
fs
mov
dec
cwtl
lock
cmpsb
xor
outsl
cwtl
out
xchg
aaa
in
xor
sbb
adc
xchg
cld
in
clc
rclb
mov
enter
xchg
or
push
dec
jp
enter
mov
xchg
rorb
negl
pop
jp
or
cli
mov
xchg
jno
rcll
test
push
xorb
push
and
mov
inc
dec
xchg
or
xlat
fistpll
adc
mov
push
lcall
mov
cmp
into
pop
scas
mov
mov
push
cmp
adcb
xchg
dec
jnp
pop
stos
mov
ss
out
pop
movsb
adc
lods
and
out
or
sub
sub
mov
lods
mov
push
add
sbb
ret
jno
aaa
stc
mov
sub
push
mov
lret
cmc
pop
xchg
adc
sbb
xor
add
mov
test
arpl
mov
sbb
aaa
sub
sub
cwtl
push
sti
out
xor
xor
xor
mov
daa
lret
push
movsl
aaa
lods
and
addr16
ds
fst
jp
das
cmp
push
test
loopne
ror
push
inc
fwait
loope
push
mov
inc
inc
loop
pop
dec
mov
pop
cmpsb
popf
ror
pop
or
inc
cltd
sub
int
packsswb
and
rcl
and
sub
arpl
out
lret
xchg
mov
push
pop
cmp
bound
movhps
movsl
push
adc
jmp
ja
sub
pop
arpl
adc
cmpsl
push
mov
and
dec
xlat
js
add
mov
fsts
pop
or
je
pop
lods
rcrb
ljmp
insl
mov
sbb
pop
ljmp
repnz
sub
in
xor
push
pop
addl
fildll
fs
cmp
mov
jmp
mov
or
or
pushf
and
adc
lock
or
add
int
mov
mov
push
xor
mov
mov
enter
xchg
jo
shl
arpl
into
lea
push
inc
or
scas
push
or
cmp
das
or
in
inc
sub
cmp
adc
mov
sbb
int
pop
mov
adc
jae
ds
cmpsb
cwtl
mov
mov
cmpsl
sbb
push
hlt
sub
sbb
push
and
mov
faddp
push
and
insl
lods
stos
add
mov
js
fs
pop
and
push
mov
push
pop
pushl
in
dec
popa
movsb
xchg
sub
adc
or
js
daa
addl
jno
mov
rolb
lea
add
popf
and
add
sub
loopne
push
enter
daa
adc
inc
cld
sbb
add
jo
mov
mov
mov
ds
sub
xchg
inc
xchg
pop
dec
std
and
dec
pop
sbb
bnd
and
adc
sti
cltd
mov
jne
jge
std
stc
jmp
cmpsl
scas
dec
add
jmp
xor
pop
pop
xchg
outsl
cmp
mov
dec
mov
stos
push
mov
jo
mov
cwtl
mov
std
mov
jecxz
call
mov
pushf
mov
aad
mov
add
negb
mov
in
lret
out
mov
scas
out
scas
sub
ja
cld
and
jp
popf
je
mov
dec
repnz
mov
cmp
or
outsl
sbb
dec
rclb
inc
pop
push
in
rcrl
out
std
in
sahf
or
mov
add
mov
aam
incb
stos
rcll
js
insb
es
popa
pavgw
mov
cmp
inc
int
loope
aaa
mov
enter
add
jne
cmpsb
mov
outsl
test
sub
iret
cmpsl
mov
xor
fildl
dec
shlb
cwtl
daa
mov
mov
sbb
inc
pminsw
mov
inc
add
test
stos
mov
aaa
inc
nop
adc
xchg
mov
lret
push
cmpsl
pop
cltd
push
aaa
mov
adc
shlb
shlb
jb
fwait
dec
leave
data16
push
cmc
fstps
lret
lock
xchg
xchg
add
enter
mov
mov
sbb
sbbb
or
lods
push
dec
stos
lock
call
sub
test
imul
hlt
setae
add
jns
add
add
sub
in
xorl
loope
xor
push
lahf
add
push
cld
adc
xchg
xor
clc
push
pop
mov
mov
fldcw
dec
xor
jg
mov
and
pop
xor
pop
sub
cmpsb
jmp
mov
add
sbb
es
in
call
packssdw
add
mov
pop
call
lods
je
jmp
mov
mov
pusha
lret
jl
repnz
sub
xchg
mov
inc
out
test
add
in
int3
pop
cs
xor
xchg
clc
aaa
cs
pop
xor
gs
daa
mov
xchg
and
fwait
pop
cmp
cli
or
cld
rolb
rorb
stc
pusha
clc
ficoms
and
imul
mov
jno
dec
in
adc
sub
cld
xchg
and
repnz
cmp
xchg
push
test
adc
xchg
aaa
push
push
dec
xchg
daa
test
inc
inc
je
aam
add
adc
or
cwtl
pusha
movsb
addr16
mov
inc
rcl
mov
and
stos
movsl
int
jb
xchg
xlat
loopne
cmp
pop
cmpsb
addr16
mov
inc
cmpsl
popa
mov
push
sbb
or
test
inc
or
mov
pop
cld
xchg
addl
ljmp
cld
push
and
mov
cmpsb
insb
and
das
jecxz
fisttpll
dec
lret
arpl
and
add
shlb
clc
sbb
jp
aam
inc
push
jno
add
cmp
pop
das
cmp
mov
add
push
jge
inc
mov
lods
sub
and
xchg
outsl
sbb
cmpsl
push
push
mov
push
jno
jge
testl
mov
std
in
add
cwtl
xlat
addb
subb
out
dec
rorl
stos
ss
insb
dec
ss
push
sub
dec
and
shlb
add
pop
sti
mov
or
shrb
jmp
mov
fbstp
test
mov
or
mov
iret
dec
mov
div
adc
rorl
sbb
or
pop
or
mov
loopne
adc
xchg
and
push
lods
pop
inc
mov
push
ds
subl
out
mov
jmp
push
lcall
adc
outsb
or
mov
lock
daa
and
xchg
movq
enter
or
xchg
adc
jge
dec
cltd
fmuls
rolb
subl
iret
cmp
std
jbe
divl
cwtl
or
subl
dec
cmp
or
testl
aam
dec
movsb
inc
leave
inc
ret
cmc
pop
jmp
xchg
stos
push
cmp
sub
mov
pop
cltd
lock
sbb
mov
sbb
lret
and
mov
idivl
jbe
lds
add
aas
inc
clc
mov
sub
inc
xlat
call
movb
dec
add
add
pop
jb
lret
ds
inc
adc
xlat
cmc
cmp
or
add
or
dec
mov
cltd
xchg
bswap
cltd
adc
cwtl
out
fiaddl
stc
loopne
aas
repnz
daa
lods
mov
insb
and
cmp
xchg
jbe
jno
nop
sbb
test
and
push
cli
add
sbb
or
pusha
dec
out
lods
aas
adc
add
pop
das
fs
xchg
inc
lock
arpl
test
sbb
push
call
sarl
mov
scas
jmp
outsb
fwait
xchg
cmp
push
or
jnp
inc
add
adc
add
aam
arpl
int
daa
cld
or
xchg
sbb
fwait
or
or
ficoms
out
jmp
pop
je
push
adc
jo
enter
xchg
pop
jmp
xchg
cmc
xchg
xor
xchg
int
xchg
test
setne
aas
lahf
ds
pushf
jp
ficoml
jne
test
add
sub
fwait
cmp
test
popf
pop
jl
add
add
nop
xor
sbb
xchg
cmp
mov
test
cli
jnp
fcompl
sbb
call
dec
bnd
mov
dec
gs
adc
xchg
das
push
add
jno
jecxz
sti
pop
das
stc
adc
mov
cmp
mov
or
sbb
jecxz
cmp
lea
js
popf
scas
test
icebp
sub
adc
jae
fiadds
orl
into
movsb
cmp
lods
push
sbb
sbb
inc
decl
test
and
mov
cli
mov
add
xor
lahf
pop
addr16
inc
pushf
in
and
inc
mov
push
pushf
pop
mov
cltd
push
adc
aad
sti
arpl
mov
adc
mov
std
addr16
mov
push
and
sub
out
cmp
rolb
mov
cld
sbb
fldenv
loop
testb
mov
jnp
dec
das
adc
jle
pop
xchg
data16
xchg
test
push
xor
cmpsb
dec
dec
repz
dec
imul
testb
cmp
push
inc
es
xchg
xor
pop
test
adcb
mov
inc
mov
xor
and
adc
lock
js
rclb
inc
sbb
or
push
jo
pop
cmpl
cmpsl
mov
pop
out
and
sbb
cmpsb
data16
dec
arpl
cmc
aas
fnstcw
ret
xor
jecxz
push
fyl2x
sub
xchg
add
push
test
punpcklwd
sub
pop
test
push
pop
outsl
test
movsb
push
jg
loop
pop
sbb
sub
in
aam
insl
sarb
shll
cmp
enter
fldz
pop
shlb
mov
arpl
out
adc
in
and
sub
ljmp
sub
add
cs
and
push
sub
pop
andb
das
pushl
mov
adc
mov
sub
test
mov
sbb
shr
mov
pop
adc
in
cmp
inc
or
jns
add
or
dec
rol
daa
lock
xchg
or
punpckhdq
or
push
mov
fidivs
aaa
enter
jo
sahf
pop
pusha
movsl
fsub
test
loope
xchg
dec
sbb
mov
enter
or
push
cmc
mov
outsb
mov
addl
dec
jbe
dec
pop
lret
push
pop
sub
bnd
cmc
cli
adc
imul
shrb
mov
xor
rcl
mov
loop
in
add
rol
in
push
xor
push
jne
dec
out
cmp
enter
ja
nop
ret
cmp
sahf
dec
push
adc
stos
mov
insl
neg
push
jno
push
ja
cmp
rsqrtps
paddd
jbe
enter
loope
or
add
sub
lock
push
sub
push
adc
sub
test
push
and
mov
sub
dec
pop
xchg
mov
jne
push
sbb
adc
das
aas
mov
pop
adc
adc
sbb
or
cwtl
mov
sub
mov
inc
lods
jnp
xor
les
addb
push
int3
mov
fs
xchg
or
clc
das
or
rolb
push
mov
aad
lock
out
jle
mov
xchg
and
shl
mov
pop
mov
rcl
mov
xchg
dec
pop
push
lcall
mov
enter
test
or
or
sub
popf
xor
sub
pushf
stos
rclb
rorb
jne
cmp
pop
adc
dec
mov
dec
enter
xchg
ds
sti
dec
test
cmp
sub
test
mov
decb
imul
add
mov
fdiv
jl
inc
or
dec
cmp
scas
stos
pushf
pop
cwtl
add
ljmp
pop
dec
sub
mov
orl
jecxz
fldenv
dec
sub
adc
andl
in
jnp
xor
pop
fwait
bound
dec
and
add
out
fldenv
inc
push
inc
cmpsl
cmp
sbb
rorb
ffree
lds
in
mov
lea
adc
outsl
pop
scas
test
daa
jg
faddl
mov
or
pop
xor
cmp
xchg
clc
sarl
dec
es
sti
push
adc
in
addr16
notb
mov
leave
sbb
add
fprem
outsb
sub
pusha
push
popf
mov
jle
test
xchg
sbb
enter
sub
jae
movsl
push
out
xbegin
adc
dec
add
mov
lock
and
shlb
sub
xchg
inc
rcrb
and
popf
imul
dec
cmc
outsb
cmpsl
int3
add
inc
lods
sub
mov
fmull
adc
dec
scas
mov
mov
push
cltd
adc
bound
jne
jg
pop
ja
cwtl
adc
adc
out
dec
scas
js
or
cltd
mov
fadds
jne
push
add
add
and
mov
mov
inc
sbb
popa
mov
cld
and
ja
sub
testl
stc
mov
mov
push
push
xlat
xlat
push
lods
add
rcrl
inc
enter
mov
movsl
pop
sbb
add
jne
out
add
iret
cmp
dec
test
sbb
inc
dec
pop
or
jmp
hlt
fidivrs
dec
add
mov
ret
or
push
mov
jecxz
xchg
daa
xchg
mov
leave
rorb
xor
add
roll
lret
aas
inc
mov
loope
adc
jg
and
or
test
pop
hlt
adc
sbb
daa
dec
adc
lret
and
jb
xchg
mov
inc
sub
pop
das
mov
sbb
xorl
inc
add
sub
in
push
dec
xchg
mov
das
aaa
add
jbe
inc
mov
xor
mov
inc
mov
test
daa
scas
in
push
stos
sub
jle
inc
xchg
out
stc
stc
dec
or
push
and
xchg
clc
outsb
or
ret
mov
mov
cmp
cmpl
add
adc
testb
es
jg
and
adc
sbb
lock
inc
test
or
inc
xlat
lods
sbb
sarb
mov
push
xchg
out
mov
mov
jbe
test
mov
fcmovb
adc
add
jge
xchg
inc
push
sbb
stc
xchg
shrb
add
aad
insl
cmpsb
xchg
cmovae
imul
movsl
push
mov
outsb
inc
call
dec
popf
cmpsl
sub
dec
frstor
ja
in
fbld
or
pop
push
inc
in
das
enter
push
mov
clc
jl
stos
cmp
pop
sbb
lahf
adc
push
or
xchg
and
adc
push
push
popa
lea
out
daa
lcall
pusha
dec
mov
and
out
cmc
aaa
jb
xor
out
cmc
or
and
pop
xor
in
push
push
fs
call
outsb
sub
cwtl
jb
mov
push
in
mov
les
outsl
arpl
pop
dec
mov
dec
mov
and
lret
mov
jno
pop
xor
mov
mov
negl
jg
sbb
or
mov
or
mov
gs
adc
loopne
fdivrs
jnp
cmpsl
xchg
sbb
pop
pop
xor
push
jne
push
mov
inc
and
in
out
lahf
pop
inc
xlat
cwtl
and
sti
add
jno
fadds
inc
stc
mov
int3
icebp
stos
mov
pop
loope
pop
push
cmc
push
inc
cmpsl
xchg
test
mov
sbb
xchg
ja
dec
jge
mov
dec
jo
jnp
js
call
inc
mov
pop
inc
aad
fdivrp
adc
in
out
iret
pop
fwait
add
mov
int3
std
mov
lret
sub
add
dec
rorl
lock
in
pop
pushf
mov
mov
add
adc
dec
es
icebp
inc
insb
pop
pop
jmp
or
jle
sub
cmp
mov
ret
cmpsl
jne
lock
pop
xlat
insb
lcall
mov
cld
pop
add
jmp
outsl
dec
insb
daa
int
test
scas
mov
pop
push
fwait
mov
in
mov
dec
std
xor
js
push
mov
jns
imull
iret
jb
mov
fdivrl
cmpl
and
mov
jp
sub
stos
dec
mov
xchg
jge
movsb
push
outsl
daa
je
mov
jmp
cmp
adcb
cwtl
push
or
je
subb
sbb
dec
cmp
xchg
cwtl
lds
out
mov
pop
sbb
dec
inc
inc
aad
imul
dec
or
and
out
lock
dec
lret
adc
mov
in
loop
iret
lods
into
lahf
out
inc
cmp
cmp
jne
xchg
jae
subl
aad
lret
xorl
cli
sub
cmp
xor
testl
push
xor
or
or
cmp
push
mov
loopne
cmpsl
add
or
stos
test
scas
lds
clc
pop
or
popf
das
inc
sub
pop
pop
fcom
pop
lahf
gs
loopne
lods
dec
sarl
jns
xor
ds
or
push
jb
insl
js
mov
and
lcall
sbb
movsb
jp
out
jae
add
shll
cmp
testb
mov
andb
push
shlb
int3
ret
pop
in
stos
dec
shrb
xor
sbb
jmp
inc
ret
add
xor
sbb
add
sbb
add
jmp
les
sbb
mov
jmp
lds
arpl
loope
enter
and
loope
adcl
adc
out
xor
adc
sub
push
or
push
fcompl
jmp
jno
loope
pop
push
loop
push
add
lret
daa
movsb
sbb
cs
movsl
arpl
and
and
aas
sub
aaa
adc
xor
jecxz
adc
xor
mov
add
enter
xchg
in
test
outsl
xchg
and
fwait
sbb
xor
push
repnz
ret
xor
jb
das
add
mov
dec
in
adc
stos
mov
in
stos
mov
vxorpd
or
out
pop
aaa
mov
je
pop
repnz
ret
sub
in
xor
xchg
mov
das
jno
mov
jbe
filds
jo
adc
rcrb
sub
and
pop
xchg
adc
push
inc
inc
cmp
rol
xchg
jo
sub
repnz
in
cwtl
xlat
daa
inc
jb
cli
pop
mov
pop
pop
shrb
arpl
loopne
and
test
out
cmp
bnd
cmp
clc
stc
sbb
cmpsl
dec
push
and
xchg
jp
mov
insl
push
psrlw
sub
out
iret
sub
sub
mov
push
sub
daa
loope
push
cltd
cld
pop
repz
sbb
adc
dec
test
inc
dec
jmp
lock
jmp
add
mov
imul
mov
xchg
cmp
push
adcb
adc
sbb
in
add
ds
pop
xchg
xchg
xchg
mov
inc
dec
inc
dec
push
or
mov
ljmp
and
pop
mov
mov
pop
outsl
and
and
dec
jp
sahf
inc
inc
popa
jo
subl
fcomps
shll
xchg
mov
mov
xchg
add
cmc
test
mov
push
data16
cld
ja
shrb
jmp
push
dec
lods
lods
jmp
lods
jns
dec
mov
push
lods
pop
xlat
addr16
dec
inc
mov
xchg
mov
fcom
or
insb
scas
mov
scas
jns
sbb
mov
fnstcw
mov
cmc
dec
stos
outsl
mov
je
dec
iret
or
cmp
repnz
push
add
add
jno
xchg
sbb
popf
hlt
mov
or
fistl
inc
dec
fadds
mov
repnz
stc
lahf
or
xchg
inc
pop
iret
cmp
dec
enter
lods
imul
lea
or
mov
mov
pop
add
shlb
sbb
jg
loop
push
xchg
fildl
ljmp
pop
jl
cmp
in
loopne
cmp
jnp
adc
sti
lahf
xlat
jp
cmp
mov
or
lret
jne
dec
in
or
push
orps
repz
rolb
repnz
notb
test
paddsw
adc
xor
mov
iret
sbb
mov
and
sahf
mov
push
mov
cmpb
xchg
jne
std
std
xor
or
and
shlb
xchg
or
loopne
mov
or
lods
or
rcl
outsb
adc
imul
and
push
aas
ss
inc
lods
adc
or
fmuls
iret
addr16
aas
sub
dec
and
shlb
sbb
add
sbb
add
cmp
jo
sbb
and
movlps
scas
mov
fsubl
pop
test
pop
jmp
fmul
les
and
push
pushf
cwtl
adc
jmp
or
or
hlt
mov
dec
cltd
imul
jecxz
mov
pop
shl
push
rolb
adc
adc
pop
pop
loopne
lods
das
add
and
andb
pusha
and
daa
jb
pop
dec
pop
rcrl
push
mov
jnp
aad
std
data16
pop
inc
push
sub
jne
mov
mov
pop
aas
stc
dec
in
add
xchg
andl
mov
xchg
cs
test
int
cld
sbb
jo
test
outsl
pop
jg
enter
dec
stc
sbb
push
jno
mov
push
sub
das
loope
sahf
pop
lds
mull
test
int3
idivl
loop
cmp
pop
ljmp
pop
sbb
bound
js
adc
or
lahf
pop
xchg
sbb
jo
jmp
xchg
mov
cmp
test
clc
xchg
mov
mov
cs
test
mov
mov
loopne
loopne
pop
mov
mov
inc
addr16
add
movsl
orb
enter
call
jl
aad
mov
movsb
mov
sbb
mov
rolb
push
dec
inc
mov
adc
xchg
add
das
daa
test
lret
lcall
std
dec
mov
fistpll
xchg
rcrb
lock
rolb
sub
xchg
mov
adc
sub
fwait
lcall
mov
dec
sub
out
pop
daa
jae
mul
ds
and
cld
aas
mulb
and
rol
rcll
mov
push
iret
daa
xchg
rcrl
aaa
mov
xchg
cmpsl
shll
aad
jmp
xor
xchg
shlb
int3
xor
aas
loope
adcl
jmp
clc
shlb
enter
fimuls
mov
dec
out
adc
inc
pop
add
add
mov
insb
dec
xor
mov
or
push
imul
enter
mov
popf
and
cmp
add
idivb
shrb
xchg
imul
or
scas
push
sbb
xor
sbb
mov
loop
les
mov
inc
or
lock
push
enter
aas
xchg
pop
leave
sub
adc
ss
xor
jecxz
insb
xlat
add
adc
dec
jecxz
out
cmc
test
jg
movsb
pop
sub
fstpt
sti
pop
testl
jmp
arpl
rol
xchg
add
cmp
or
imul
daa
add
jge
adc
fwait
jbe
movsb
cwtl
inc
loopne
jle
int3
aaa
stc
in
rcll
decb
jp
cmpb
rcrb
sbb
xchg
ss
dec
push
mov
leave
mov
rolb
xlat
jo
mov
or
inc
adc
rclb
and
fxch
js
xchg
dec
shll
mov
stos
daa
jno
push
cmpsl
insb
aas
je
lods
or
cld
mov
incb
mov
gs
and
rclb
cmovns
icebp
leave
fwait
aaa
fadd
ljmp
lret
cmpsb
lds
ljmp
xchg
movd
das
enter
xor
rcl
push
hlt
in
pop
lea
je
pop
push
cltd
mov
or
mov
adc
dec
clc
mov
mov
aas
notl
sbb
sub
xchg
ljmp
les
arpl
push
push
dec
pop
xor
xchg
lret
pop
sbb
fs
outsl
mov
popf
ljmp
stos
les
loopne
adc
lret
xchg
out
stc
adc
mov
cld
enter
xor
adc
sbb
out
inc
lock
sub
add
out
and
cmp
pop
leave
or
arpl
data16
mov
pop
adc
les
push
addl
cld
add
mov
adc
dec
xchg
push
dec
xor
mov
and
jl
inc
enter
cmpsl
sti
cltd
push
sub
arpl
icebp
add
jno
xchg
imul
rorb
adc
add
in
in
or
lahf
std
int3
add
add
sub
xlat
loopne
jne
push
xchg
pop
push
mov
inc
inc
repnz
adcb
int
push
xchg
fstps
xor
fistpl
je
fisttpll
add
pop
gs
sbb
pop
push
test
loopne
cmp
je
adc
jo
enter
jo
stos
mov
addb
std
push
add
jns
inc
sarl
cli
pop
xor
cmove
faddl
or
ds
mov
jo
mov
dec
cld
sahf
mov
sub
push
lds
add
lods
aaa
xor
sti
gs
xchg
inc
mov
cmpsl
or
push
push
rclb
les
xchg
adc
adc
and
orl
call
repnz
xchg
mov
jbe
mov
test
push
insb
push
and
push
inc
iret
cli
out
shl
test
sbb
test
xchg
add
xchg
fstl
lahf
dec
adc
add
sbb
mov
mov
test
add
cli
fistps
aad
push
inc
call
shrl
push
fwait
pop
int
mov
in
mov
or
popf
shlb
shlb
sbb
les
lds
movb
pop
stc
sub
popa
xchg
sbb
mov
cwtl
dec
rorb
add
sub
push
leave
arpl
scas
not
xor
ljmp
xchg
dec
cltd
pusha
int3
adc
xchg
clc
and
push
push
xchg
add
shll
mov
iret
add
mov
roll
pop
lods
inc
push
and
adc
sbb
in
and
dec
pop
adc
mov
arpl
inc
pop
lahf
push
jnp
cld
adc
xor
aaa
incb
or
aaa
mov
pop
orl
adc
lods
dec
stos
sub
lods
std
and
xor
popa
adc
xor
xor
movsl
inc
faddl
aad
xchg
push
xchg
mov
and
rcl
lea
mov
jae
lret
rol
aaa
fsub
xor
paddsb
jg
pop
cwtl
fmull
push
sub
mov
shlb
repz
jne
out
jp
stos
dec
push
pop
add
xchg
test
out
inc
fwait
xorl
mov
add
ja
pop
daa
sti
mul
dec
lds
push
pop
xchg
outsb
sub
mov
les
lods
mov
add
mov
js
mov
dec
in
or
popf
test
pusha
pop
xchg
mov
in
mov
enter
ret
jmp
mov
enter
das
add
pop
cwtl
adc
sub
sub
data16
and
cmpsb
call
jg
mov
xchg
cmp
push
mov
mov
adc
add
sbb
push
cld
xchg
push
dec
sub
add
lahf
cmp
sub
cmp
dec
dec
inc
orb
sbbl
push
dec
dec
orl
inc
or
pop
jle
pop
mov
lcall
push
fbstp
aam
in
fisubrs
adc
lods
add
sbb
add
aad
bound
ja
mov
lret
pushf
mov
ss
daa
ja
xchg
movsl
jl
push
mov
stos
inc
jns
dec
mov
into
adc
andl
jmp
loopne
into
jno
int3
cmp
push
cmp
test
lcall
ss
je
ja
pop
out
sbb
sbb
sbb
or
inc
sbb
sub
jle
lret
mov
cltd
gs
mov
out
mov
dec
std
daa
outsb
mov
cmc
cmp
insb
cld
ds
cmc
movsl
shl
sbb
mov
xchg
dec
test
and
icebp
lock
cmpsl
or
adc
mov
add
or
popf
adc
xor
imul
lock
push
daa
or
and
jb
jecxz,pn
sarb
out
xchg
arpl
es
arpl
lock
cmp
push
fstpt
sar
push
das
push
jae
push
xchg
adc
jbe
push
das
push
movsl
add
adc
int
dec
jg
and
enter
mov
push
mov
cmp
pop
mov
int
sarb
fstps
out
cmp
in
ja
xchg
notb
jecxz
mov
mov
add
shrb
mov
sbb
das
sti
inc
pop
out
xchg
lock
ja
aaa
mov
jno
in
sub
add
cmp
inc
jge
sbb
push
andb
mov
and
xor
inc
xchg
jp
pushf
xchg
repz
sbb
or
dec
xchg
jo
call
pop
jecxz
dec
jle
inc
in
xor
sti
orl
pop
jge
push
enter
adc
cmp
mov
inc
inc
mov
push
dec
pop
mov
xchg
clc
loopne
dec
rorb
adc
xchg
mov
dec
sub
xchg
cmpsl
ret
inc
das
add
and
adcl
mov
test
lea
add
out
push
inc
sub
shll
popf
sub
sbb
xor
or
dec
jae
and
sub
sti
in
add
mov
loopne
sbb
mov
inc
jp
add
shlb
add
je
sub
test
test
and
and
unpcklps
rorb
push
mov
mov
inc
lret
aas
std
xor
mov
or
dec
out
cmp
inc
xor
shll
xchg
cltd
data16
or
push
test
iret
cs
xchg
ss
xor
jno
add
mov
enter
xlat
int3
sub
inc
add
mov
inc
push
shrl
jge
push
clc
jmp
ret
sub
push
mov
jb
daa
inc
les
push
cli
mov
outsb
xor
mov
push
mov
unpckhps
dec
push
cmp
cmpsl
xchg
or
xor
dec
insb
ljmp
enter
mov
pop
mov
inc
cmpsb
outsl
and
sub
and
jne
aaa
and
es
mov
int
cmp
mov
xchg
loop
les
pop
sub
push
pop
dec
sbb
fisttpl
enter
fadds
scas
mov
lcall
mulb
jle
stos
stos
push
shlb
daa
insl
adc
outsl
jmp
fbstp
mov
mov
loope
add
aaa
dec
or
loope
dec
dec
iret
pop
ja
push
aas
push
inc
jns
push
dec
sbb
outsl
xor
daa
pop
xor
cmp
push
mov
jns
cs
and
add
xchg
test
sub
lds
pop
pop
mov
jno
xor
test
in
mov
sub
aam
xchg
push
in
add
pop
es
mov
mov
ss
and
enter
adc
adc
push
insb
sub
dec
jg
test
and
and
sub
xchg
push
les
and
subb
inc
aas
cmp
inc
push
add
enter
daa
adc
pop
fs
dec
pop
daa
add
popa
das
test
xor
mov
add
imul
cli
push
rclb
dec
mov
push
sbb
mov
cmp
daa
andb
ja
bound
inc
push
push
inc
xchg
repnz
js
sbb
push
pop
xchg
pop
pop
lahf
sbb
or
stos
cmp
xor
mov
into
pop
iret
sbb
cmpsl
jg
inc
xchg
cmp
daa
xchg
testl
inc
jne
insb
aad
movsl
pop
or
outsb
add
adc
iret
or
xor
add
pop
daa
fmull
sub
sbbl
arpl
push
sub
and
mov
insl
ud2
jno
cmpsl
mov
lea
pop
rclb
pop
jmp
lods
mov
inc
pop
int
add
lea
xlat
pop
movswl
xorl
das
and
aaa
pop
xlat
rcrb
repnz
pop
inc
push
out
or
add
sbb
in
push
sbb
mov
mov
cld
aas
inc
fisubrl
jg
inc
aaa
sbb
ja
out
mov
pop
fcoml
or
push
stc
xchg
jne
adc
scas
xchg
stc
inc
outsb
xor
cmpsl
dec
add
clc
lahf
add
push
sub
test
add
dec
shl
mov
xchg
sarb
mov
adc
jae
or
and
add
popf
and
sbb
cmpsb
mov
sbb
sbb
jno
cmp
scas
xchg
push
int
mov
mov
cmp
adc
push
pop
xchg
shlb
out
and
add
fisubl
adc
iret
test
or
cmpsl
or
imull
push
xor
and
nop
add
hlt
lahf
cmp
test
in
push
mov
cs
into
jg
popa
lds
dec
sahf
pop
add
xchg
daa
movb
and
dec
push
cmp
out
rorl
pusha
pop
xor
add
out
aaa
pop
xchg
dec
sbb
gs
mov
cwtl
add
inc
lret
adc
and
mov
lahf
add
or
mov
pop
cmpsl
out
dec
mov
adc
in
mov
pop
in
bswap
jnp
mov
popf
jle
andl
shlb
xlat
das
imul
inc
xor
das
xchg
push
add
enter
xor
lahf
das
cs
and
stos
outsb
repnz
mov
adc
adcb
mov
jns
movsl
out
test
lret
pop
add
jo
adc
call
mov
std
mov
add
pop
iret
sub
push
dec
sti
jns
jg
jo
sub
adc
xor
in
adc
lods
or
rorb
xchg
or
add
das
test
adc
adcl
outsw
in
push
and
cwtl
mov
lahf
adc
outsl
adc
dec
jg
inc
jae
mov
adcl
inc
and
and
imul
mov
inc
sbb
pop
adc
js
pop
fwait
lahf
in
dec
xchg
xor
jl
add
cwtl
shlb
aam
fadd
cmp
gs
cmp
gs
push
hlt
xchg
jno
je
scas
xor
xchg
cwtl
jecxz
dec
jno
jmp
inc
cmp
jp
test
repz
sbb
call
mov
faddl
mov
fsubs
repnz
adc
jp
test
jge
das
add
mov
cmp
xor
sbb
jne
xchg
jmp
cmpsl
pop
in
inc
add
out
test
cli
rcrb
dec
dec
test
add
adc
ljmp
shrb
mov
out
lea
test
push
dec
jne
iret
mov
sbb
mov
mov
pop
jb
iret
sub
mov
sub
or
xor
fnstenv
adc
decb
cltd
dec
fldcw
jmp
idiv
out
popa
leave
push
pop
push
shl
push
sub
xchg
loop
ss
call
push
loopne
or
xchg
addr16
mov
sbb
push
addl
sbb
or
mov
push
cmpsb
mov
xor
adc
sbb
out
and
pop
push
pop
dec
into
and
pop
aam
pop
jmp
add
aaa
jmp
sbb
out
jb
roll
mov
ljmp
rorb
xor
inc
sbb
pop
cld
dec
jne
or
lahf
in
shlb
inc
imul
jnp
dec
mov
xchg
dec
xor
ret
daa
subl
sbbl
aam
jmp
cmp
mov
ja
mov
xchg
cmpsl
out
lret
adc
andb
xchg
push
jbe
jne
sbb
adc
stc
aaa
add
or
lods
push
mov
pop
push
and
das
add
out
and
mov
sarb
fdivl
movsl
loopne
stos
mov
mov
ljmp
repz
popf
jo
inc
rcrl
rclb
sub
clc
movsl
sbb
inc
adcb
out
push
out
xor
pop
adc
mov
add
sbb
push
add
xchg
adc
pop
mov
cs
sub
lods
adc
in
sub
in
cltd
or
lret
jl
es
sbbl
lret
xor
or
jg
adc
lods
pop
out
into
sti
aaa
push
es
in
sub
out
sbb
je
sti
mov
bound
push
mov
cld
movsb
push
clc
out
jno
pusha
adc
je
mov
stc
jecxz
jmp
push
adc
mov
mov
jle
pop
dec
je
out
cmp
inc
xchg
pop
popa
imul
lods
xchg
in
adcl
and
in
fstps
cmc
arpl
sub
pop
iret
jne
repnz
pusha
and
cs
mov
into
push
dec
adcb
jl
loope
sub
sbb
js
stc
or
int
ret
push
mov
dec
rol
in
jae
test
jns
cs
pop
das
sbb
bound
imul
sub
inc
jle
sub
pop
lret
movsl
xchg
add
xor
mov
mov
pop
mov
aas
rcrb
scas
push
lret
iret
pop
fsub
xor
and
iret
sbb
imull
or
xchg
lock
cs
pop
cmpsb
jg
into
push
sub
mov
scas
repnz
int3
fisubs
xchg
mov
inc
cli
pop
pop
ljmp
or
aaa
aaa
das
les
stc
sub
push
adc
xchg
inc
inc
pinsrw
pinsrw
nop
repnz
enter
es
fmuls
das
fcoml
pop
out
aas
mov
fiadds
cmpb
cmpsl
ljmp
ret
imul
js
aam
js
push
cmpl
fucomip
push
jmp
add
mov
rorl
sbb
mov
jb
inc
inc
enter
dec
add
or
iret
mov
mov
push
inc
sbb
gs
out
fldenv
pop
mov
divb
xor
rorl
jge
and
mov
add
loopne
pop
hlt
mov
xchg
or
sbb
outsl
inc
pop
adc
xor
stos
out
loopne
scas
inc
jl
das
mov
pop
mov
faddp
jb
adc
mov
fadds
adc
cmp
jecxz
add
and
or
pop
jecxz
arpl
ret
stos
inc
mov
sub
test
sub
jo
mov
ja
in
ret
nop
scas
mov
sub
test
adc
mov
das
pxor
adc
lock
stos
rcrl
mov
dec
outsb
xlat
mov
add
xchg
enter
andb
shlw
push
jge
pop
cmp
enter
lret
les
add
sbb
inc
xlat
pop
popa
adc
sbb
push
push
push
push
dec
andb
rep
das
pop
push
or
push
xchg
mov
push
out
aaa
movsl
inc
mov
push
mov
shr
or
popl
es
jns
jns
xchg
sbb
das
xlat
pop
and
inc
push
inc
or
jne
mov
mov
js
fiaddl
sbb
jle
xor
out
pop
sbb
push
push
divb
call
rclb
or
stos
dec
dec
or
hlt
inc
sub
adc
inc
or
mov
push
js
fstl
xor
js
and
addr16
sbb
lock
es
jae
mov
mov
call
lock
cmp
add
sti
rcrl
adc
sbb
inc
rol
sti
shrb
sbb
popf
or
xchg
cmp
mov
mov
inc
lods
xchg
jmp
cmp
sub
xchg
stos
push
sbb
enter
sahf
push
out
sub
outsb
xchg
xchg
rcrl
push
fs
mov
adc
add
xchg
test
scas
mov
nop
jae
push
sub
or
xchg
aad
sub
scas
jecxz
cmp
nop
fcompl
jnp
or
jae
lahf
xchg
and
in
mov
adc
scas
pop
outsl
loopne
inc
aaa
mov
rcrb
mov
scas
mov
fldt
push
nop
and
inc
mov
iret
jmp
or
sub
rolb
inc
push
push
incb
cld
inc
sub
ficompl
inc
rcll
adc
js
cli
popf
dec
xor
in
dec
inc
mov
insb
lea
mov
adc
jnp
xorb
and
xchg
jp
jmp
les
cld
adc
in
add
adc
pop
std
pop
push
bound
loopne
adc
js
out
dec
add
mov
jecxz
or
ret
mov
sbbb
cli
dec
shlb
jbe
pop
add
add
mov
xchg
sbb
pslld
dec
pop
push
add
enter
test
lea
push
xchg
mov
imul
push
loop
fadd
pop
popf
lds
lock
fdivs
stos
pop
mov
in
mov
std
iret
clc
or
pop
mov
mov
cmp
mov
xchg
mov
and
inc
and
scas
mov
cld
cwtl
ret
sbb
mov
sti
mov
cld
cmpsb
cmp
mov
enter
mov
mov
pop
test
jmp
repz
lcall
orb
mov
lock
add
out
test
packssdw
in
test
pop
push
arpl
stos
xor
lahf
stc
loop
nop
out
cmpsl
cmp
inc
icebp
loop
push
pop
mov
clc
fcomps
movsl
cmp
and
and
out
dec
cwtl
pop
out
jg
cmpb
dec
xchg
push
fsts
push
mov
rolb
shrl
fisubl
and
or
add
lock
xchg
push
int
jle
jnp
adc
xchg
pshufw
add
mov
push
jl
inc
sub
inc
and
repz
adc
mov
aad
and
stos
cs
push
inc
jne
dec
andb
stos
xor
pop
dec
mov
stos
mov
sbb
sbbl
in
jb
and
adc
add
mov
mov
bound
outsb
dec
add
aaa
movsl
ror
mov
xchg
and
jp
rcll
popa
xchg
cmp
pop
jp
sbb
pop
push
jmp
dec
cmpsl
dec
or
andl
push
idivl
mov
sub
mov
out
jge
add
mov
mov
out
lret
dec
sub
mov
pusha
push
or
cli
dec
cmpsl
ljmp
dec
cli
pop
mov
ficompl
sub
pusha
push
loope
push
mov
iret
mov
sbbb
adc
nop
daa
lret
repz
sub
loope
xchg
adc
dec
loopne
rorb
push
add
mov
les
outsb
sahf
push
icebp
clc
pop
mov
in
jl
cmpsl
push
bound
adc
mov
orl
out
cmp
lcall
jo
inc
adc
or
mov
xor
adc
popf
pop
xchg
ret
loope
inc
dec
je
adc
outsb
sub
and
or
xchg
fcmovnu
xchg
jecxz
imul
int
adc
fdivr
xchg
jns
cwtl
jo
push
sbb
pop
mov
mov
in
add
orl
inc
in
pop
mov
mov
mov
clc
in
sub
ret
cs
pop
sub
fwait
xor
adc
fnstenv
inc
shlb
adc
xor
xor
std
xor
out
movsl
push
fdivl
outsl
sbb
repz
fmul
arpl
xor
xchg
sub
xchg
cmp
int
scas
push
jecxz
and
sub
jae
test
ja,pn
jmp
je
outsb
cld
cmc
mov
cld
mov
xor
call
inc
add
pop
sti
or
sbb
dec
lret
jae
je
aaa
cmp
adc
das
stc
sarb
mov
xchg
add
pop
push
test
call
enter
add
das
add
enter
jno
add
push
loope
mov
in
loop
cmp
pop
xlat
movsb
jne
pushf
aam
stos
jl
adc
aaa
das
and
add
add
ljmp
stos
add
push
mov
shrb
mov
addl
add
add
mov
add
adc
call
seta
or
pop
mov
pop
iret
call
shrl
cld
cli
lock
out
sub
jg
add
add
sbb
xor
xor
movsl
enter
jecxz
dec
pop
cmp
mov
push
shrb
pop
xchg
imul
dec
rorb
mov
cwtl
enter
punpckhdq
lock
aad
push
ljmp
fsin
adc
fcoml
jae
dec
mov
xchg
mov
sub
pop
rcr
and
cmpsl
inc
adc
cmp
mov
in
in
mov
cmp
xchg
xor
mov
pop
cmpsb
sub
mov
and
repnz
or
xchg
cmp
popa
loopne
cwtl
insb
shlb
mov
mov
push
or
repz
dec
in
pop
lea
mov
and
rcrb
std
fimuls
dec
cmp
mov
aas
stc
popf
fldenv
or
rcr
cmp
nop
push
movsb
jmp
je
decb
ret
mov
pop
or
push
pop
repnz
mov
fs
add
adc
cld
lcall
xchg
aas
fcoml
xchg
fwait
and
cltd
xchg
call
push
repz
jno
movsb
testl
xchg
into
and
int
mov
setg
inc
dec
mov
insl
lahf
js
inc
dec
xor
xchg
aas
cmp
clc
repnz
out
adc
insl
std
xchg
dec
cmp
cltd
adc
inc
fwait
aad
cmp
sub
ja
sbb
mov
xchg
fldl
jns
loopne
push
pusha
sbb
sub
or
sbb
pop
push
gs
lret
repz
mov
rcrb
add
dec
adc
xchg
jae
jmp
or
jge
pop
loopne
xchg
cmc
out
xchg
jl
pop
es
adc
mov
out
loopne
les
enter
lret
or
stos
pop
movsl
jne
add
cmpb
sti
bts
cmp
push
mov
or
jp
lret
jnp
aas
push
mov
xchg
xchg
pop
inc
sbb
daa
and
lock
popf
out
or
cmp
inc
icebp
das
inc
sub
jae
movl
xchg
xor
mov
xchg
jno
data16
icebp
push
cmp
and
inc
adc
outsl
inc
mov
push
sbb
inc
dec
dec
ss
cmovno
mov
sub
xor
mov
xchg
adc
sub
dec
and
adc
dec
cmc
jmp
dec
jbe
mov
xchg
xchg
adc
push
std
negb
sbb
cmp
push
movsb
cmp
or
sub
jne
mov
dec
dec
pop
cmp
jecxz
pop
cmpsb
inc
pop
shl
testb
das
jle
jae
movsb
js
std
test
loope
dec
testb
fwait
enter
mov
cmp
shrb
xchg
loopne
shrl
test
test
lret
sahf
outsl
daa
cmp
jno
inc
shlb
jecxz
jecxz
sub
mov
test
push
inc
adc
dec
and
loope
jmp
jmp
stc
sbb
sub
dec
rcrb
and
or
pop
xchg
in
les
sub
lods
push
loopne
mov
adc
adc
shll
test
jmp
mov
mov
ret
push
mov
xor
fildl
add
andb
xchg
mov
adcl
sahf
scas
jecxz
push
fstl
mov
and
jb
fsub
adc
mov
addr16
dec
jb
ja
dec
arpl
sahf
xchg
push
clc
xchg
mov
or
jg
dec
testb
xchg
push
mov
mov
ja
push
cmp
mov
daa
jne
sbb
xchg
lcall
xchg
pop
push
mov
or
or
fsubrs
inc
add
or
inc
jge
mov
aaa
enter
fistpll
adcl
mov
jo
out
xchg
sti
lock
dec
aaa
sub
fxch
mov
cmp
adc
rol
outsb
inc
rcrb
negb
jo
xchg
call
jno
outsl
or
fs
sbb
out
movsb
adc
out
in
test
aaa
test
pop
iret
mov
xchg
insl
sbb
call
loope
jns
in
loop
popf
or
aaa
cld
call
aad
inc
or
xlat
dec
adc
idivb
jo
stc
pop
sub
adc
fidivs
loopne
out
lret
in
pop
addr16
sar
cmp
mov
mov
mov
lret
test
lea
sub
push
and
mov
ss
fildl
dec
aaa
in
loope
shlb
mov
adc
in
inc
repnz
sbb
roll
mov
pop
pop
xchg
add
sarb
sbb
inc
dec
cmp
adc
outsl
cmp
out
idivl
adc
dec
fists
outsb
mulb
xor
mov
cmp
dec
std
pop
repnz
mov
call
daa
ds
jmp
mov
cmp
pop
test
xchg
sbb
dec
pop
idivb
xchg
sti
xor
xchg
add
cmpsl
jl
mov
adc
sti
push
test
push
aaa
lcall
and
jns
pop
sbb
or
out
ljmp
or
sub
shrb
push
inc
shlb
push
jge
lds
orl
mov
push
dec
aam
xor
lcall
and
push
dec
rolb
lock
pop
push
xchg
jg
pop
rclb
iret
stc
sbb
cmpsb
cltd
in
and
rclb
mov
add
xor
sub
mov
popf
jbe
jns
les
pop
pushf
jmp
inc
call
add
mov
ljmp
aaa
lods
out
movb
inc
jbe
jp
dec
mov
jg
das
jle
fwait
add
fsubr
sar
fwait
jbe
cmpsb
pop
popa
sub
movsb
and
or
lock
adc
sub
jg
mov
push
xorl
lahf
xor
sbb
int3
stc
xchg
call
sbb
pop
jg
dec
sbbb
inc
inc
and
pop
js
lods
popa
cli
xchg
fdivp
loop
paddw
or
jecxz
jae
add
repnz
inc
aas
pushl
mov
ja
adc
shlb
pop
daa
push
es
mov
inc
scas
add
inc
mov
mov
out
aas
iret
aaa
pop
das
sbb
daa
inc
aaa
cmpl
popf
cmc
or
in
das
xchg
repz
testb
cwtl
pop
pop
and
mov
dec
jns
cmp
enter
fsubrl
cltd
pop
ljmp
fdiv
sbb
gs
adc
popa
and
inc
jl
dec
mov
push
and
int
jno
and
adc
adcl
rcr
in
mov
adc
mov
push
jle
push
popf
sbb
or
clc
push
add
and
ret
leave
ror
jns
cmp
daa
test
inc
enter
and
push
in
dec
cli
xchg
jne
push
clc
enter
clc
push
jmp
cmpb
dec
fimull
jae
aas
std
clc
push
fwait
roll
add
add
pop
adc
pop
cwtl
mov
enter
fwait
dec
stos
repz
add
push
das
scas
dec
cli
xchg
xchg
add
xchg
clc
sbbl
aaa
insb
sarl
xor
mov
or
cli
mov
push
scas
mov
mov
mov
lcall
fldt
das
push
int3
mov
inc
fwait
add
push
addb
xorl
push
lahf
xlat
adc
add
push
out
sbb
lods
enter
insl
push
dec
fwait
cmp
jno
in
mov
inc
loope
in
cmc
rclb
xchg
adc
das
cmc
cmpsb
repz
and
push
adc
rcll
add
push
mov
or
shlb
inc
cld
jno
push
xchg
dec
jbe
mov
sbb
int
push
push
jmp
and
dec
leave
cmp
push
cmp
xor
lods
aad
adc
lret
inc
mov
jecxz
stos
mov
or
cs
cmpsb
add
push
dec
adc
cld
pop
int3
call
test
test
xchg
fiadds
jno
fdivr
adc
push
out
or
cmpsb
adc
jns
push
pop
shl
dec
dec
push
mov
mov
pop
and
lret
jge
clc
fdivs
sub
sub
pop
jecxz
inc
hlt
and
jne
out
fsubl
push
xchg
mov
sub
mov
adc
adc
inc
addb
jns
push
rol
mov
out
icebp
in
xchg
sub
add
mov
sbb
adc
pop
mov
and
inc
dec
loopne
push
aas
aam
and
xor
int
jnp
inc
add
and
les
lcall
push
adc
fimull
adc
pop
cvtps2pi
xchg
mov
mov
pop
cltd
sbb
ljmp
es
push
mov
mov
mov
xor
adc
sbb
or
xchg
lods
add
mov
mov
dec
inc
in
or
pop
pop
cli
fwait
pop
cmpsb
lock
out
push
add
pop
lock
scas
xchg
dec
sbbb
jg
pop
add
cmp
enter
mov
mov
jecxz
call
mov
pop
fs
test
adc
fwait
sub
pusha
mov
dec
daa
inc
inc
js
xor
and
push
stos
cli
addl
roll
fwait
or
add
inc
out
pop
cmpsb
adc
sbbb
in
add
shlb
cwtl
pop
cmp
mov
lods
push
out
xchg
adc
cmp
gs
pop
jmp
sarb
adc
add
mov
mov
cmp
enter
xchg
mov
mov
xchg
pop
orl
sbb
mov
xchg
push
mull
pop
jg
sub
pop
pop
dec
xchg
jbe
sbbl
or
aaa
sbbl
and
push
xchg
adc
cmc
mov
outsl
or
cmp
scas
mov
cmp
daa
lret
js
push
xlat
das
stc
add
shlb
jg
stc
movsb
xchg
pusha
xor
jno
push
orb
push
sub
mov
sarb
push
xor
inc
test
popf
jae
out
in
adc
outsb
scas
or
adc
cmp
std
rcl
outsb
inc
leave
das
add
outsl
fistl
add
cmp
cmp
xor
push
pop
out
or
adc
mov
jno
popa
pop
add
add
mov
xchg
sbb
js
adc
bswap
push
lods
rclb
pop
movsl
jle
cwtl
aaa
out
mov
cli
mov
lds
sub
out
add
add
imull
jne
jmp
mov
incl
cld
repnz
cltd
aas
xor
dec
and
or
mov
rcll
push
xor
ja
fisubrs
cli
inc
pop
mov
rol
and
sbb
fadds
mulb
adc
mov
mov
sbb
adc
sahf
lods
mov
pop
xor
cs
pusha
cmpsb
lea
jns
dec
loopne
and
cli
inc
mov
pop
cmp
xor
mov
add
test
cmpsl
das
js
test
aaa
xchg
sbb
movsl
jge
cs
inc
cmp
dec
rolb
pop
sub
daa
push
lahf
push
js
push
jno
test
or
jbe
lds
push
insl
mov
pop
xchg
sub
mov
clc
aam
jne
std
add
mov
push
add
orb
adc
icebp
jne
jecxz
pop
loop
jns
daa
test
jo
or
push
adc
popa
adc
mov
je
pop
popa
jl
fildl
push
int3
jae
pop
inc
dec
push
das
or
pop
lret
pop
movsb
lret
cmpsl
stos
imul
jle
xchg
into
sbbl
lds
cmp
lods
jmp
add
pop
int
mov
xchg
nop
mov
pop
mov
daa
adc
adc
aaa
in
inc
xchg
adcl
loope
fsubl
pop
popa
pop
sbb
nop
mov
mov
mov
addr16
dec
or
or
pop
push
xchg
add
mov
jno
inc
rorb
js
adc
popf
xchg
outsb
xor
sub
add
push
outsl
add
sbbl
pusha
dec
dec
jmp
push
decl
pushf
repz
fnstsw
mov
loope
sub
ja
mov
mov
jns
es
test
mov
sti
imul
in
test
fsubs
enter
add
jg
sbb
mov
mov
es
in
inc
mov
int
pushf
push
or
cmp
adcl
ret
pop
sbb
lods
in
add
mov
mov
and
cmpsb
ffree
xchg
jmp
xor
adc
jb
arpl
enter
mov
lock
testb
sub
or
sub
xchg
aaa
jmp
rcrb
int3
ret
cmp
in
outsl
or
cld
lods
or
rol
ss
aas
or
adc
mov
addr16
inc
out
jmp
int
adc
fsubl
or
in
xchg
mov
test
jg
mov
popf
xchg
pop
cmp
jno
lds
ret
adc
dec
orl
xchg
pushf
sarb
dec
test
fucomi
out
mov
mov
or
and
pop
adc
ljmp
in
ljmp
rcrb
sub
lea
and
in
sbb
pop
add
aad
repz
adc
or
xchg
cmp
adc
cmp
daa
pop
std
mov
xchg
cmpsb
adc
dec
cmp
mov
inc
gs
addr16
push
scas
das
dec
call
fdivrs
stos
adc
add
sbb
roll
add
inc
mov
les
xchg
mov
cmpsb
dec
movsb
xchg
mov
lods
stos
push
test
mov
mov
add
int3
sbbl
mov
addl
mov
notb
aad
pop
push
adc
jg
mov
pop
mov
fsubl
fisttps
cmpsl
stos
add
add
mov
jns
in
push
addb
mov
cmp
aaa
nop
pop
out
sbb
mov
xchg
insl
dec
movsl
add
and
cld
mov
dec
mov
cmpsb
jno
xchg
cwtl
cmp
ja
push
mov
sub
adc
int
jo
mov
daa
push
or
cwtl
pop
subl
nop
in
ds
or
sub
shlb
or
popf
bound
sbb
fidivs
rolb
adc
jp
js
popf
clc
and
ljmp
xlat
aam
mov
cmp
cmpsl
into
shrb
fcomps
dec
enter
inc
incb
sub
and
push
leave
adc
fidivrs
jo
movsl
dec
adc
jecxz
mov
add
adcb
mov
push
mov
int
cld
cmpsl
aam
xchg
inc
loopne
in
ret
in
out
cmp
push
adc
inc
pushf
shrb
mulb
pushf
rolb
push
and
lods
pop
inc
es
cld
daa
cs
daa
fcoms
rolb
mov
pushf
pop
mov
enter
clc
aas
aam
pop
or
in
and
adc
pop
inc
cwtl
out
pusha
inc
out
gs
push
add
mov
dec
dec
jge
add
addr16
loopne
and
xor
int
or
pop
int3
pop
cmpsl
stos
jp
arpl
inc
call
dec
jno
xchg
pushf
sbb
pop
or
xor
repnz
dec
inc
inc
mov
mov
inc
cli
sti
jno
ds
or
in
pop
xchg
mov
int
inc
fadds
mov
fstl
dec
jg
aam
std
inc
mov
ss
inc
xchg
orl
dec
icebp
add
sub
dec
lea
and
arpl
cmp
inc
xor
imul
das
repz
pop
xchg
xchg
adc
mov
notb
mov
push
pop
hlt
mov
daa
in
or
shr
scas
aas
push
inc
jb
daa
push
in
mov
icebp
xchg
rorb
pop
jg
je
jns
mov
inc
or
lahf
push
pusha
addr16
sbb
mov
in
xchg
mov
mov
ss
fbstp
std
inc
lahf
ss
andl
sbb
loopne
adc
rorb
mov
adc
jmp
in
std
push
cs
xchg
call
std
or
outsl
xor
xchg
sub
add
enter
adc
inc
stc
in
cmp
and
dec
xor
adc
inc
mov
fdivs
aaa
lea
xlat
adc
add
inc
inc
xchg
xor
std
push
daa
popf
xchg
pop
jbe
sbb
push
fcomps
les
and
bound
cmp
sub
mov
mov
jo
mov
xchg
ret
subl
push
mov
or
sbb
xor
sub
mov
ljmp
inc
std
cmp
std
das
andl
mov
sbb
inc
inc
fstl
aad
pop
add
in
aam
iretw
mov
sarb
enter
add
imull
mov
sub
and
imul
fnstcw
pusha
int
lea
orl
and
or
add
cwtl
pop
push
and
mov
sub
mov
fsubl
push
pushf
ljmp
lahf
pop
sub
shl
outsl
cmpsb
aam
cmpsl
add
adc
push
pusha
push
mov
adc
test
cmp
mov
aad
push
mov
cmc
frstor
and
imul
imul
test
mov
inc
mov
mov
das
cwtl
fwait
mov
adc
sti
dec
and
xchg
fsubs
lods
test
push
adc
and
mov
in
cmpsb
adc
push
jg
push
sbb
mov
ds
call
cmp
sub
xchg
mov
gs
mov
add
mov
push
jns
out
sbbl
jno
cmp
ljmp
cmpl
pop
rorb
jae
sub
jg
std
mov
test
cmp
add
xchg
cmpsl
mov
int
movsb
js
pop
jno
add
lahf
cmp
push
cmpsl
cmp
mov
mov
adc
aaa
inc
mov
adc
or
in
jae
sbb
inc
lcallw
test
sbb
cmpsb
daa
cmpsl
xor
sbb
shlb
in
andb
stc
xchg
pop
pop
add
jbe
test
push
add
daa
push
add
pushf
xor
das
adc
les
inc
xchg
stos
jl
xchg
imul
mov
adc
xchg
push
scas
jae
jmp
add
sbb
fucomip
pop
mov
in
or
mov
add
mov
popf
daa
jnp
sbb
add
push
jb
dec
pop
xor
sbb
sbbl
lea
add
cld
xor
mov
adc
cmp
inc
ss
mov
xchg
add
mov
hlt
sub
pop
pop
add
cmpsb
and
sbb
loopne
cltd
mov
cmp
mov
loope
fisttps
shll
mov
jae
pop
in
and
lea
movb
inc
pop
adc
push
out
inc
lds
jnp
stos
jl
dec
das
inc
mov
push
out
dec
pop
dec
inc
jmp
mov
adc
add
inc
inc
xchg
daa
testb
add
dec
or
std
pop
add
out
xchg
fadds
pop
jno
dec
jbe
rorb
sbb
push
lock
in
mov
add
stos
push
jo
xor
cmpsl
lods
mov
rclb
andb
adc
movsb
int3
outsb
or
fbld
sar
pop
cltd
mov
rorl
push
add
add
adc
jnp
jge
out
daa
jge
out
test
adc
inc
xor
inc
popa
aas
push
and
inc
pushf
jo
testl
inc
mov
enter
pop
mov
xor
pop
and
adc
in
movsb
jg
adc
and
pop
xchg
cmp
jb
scas
pushf
inc
pushf
in
xchg
add
ljmp
movsb
loopne
in
mov
mov
orl
lea
sbb
addb
cs
jbe
adc
sub
mov
push
stos
mov
add
sbb
mov
push
sbb
ss
add
in
cmp
mov
cmp
js
test
fwait
cli
push
cwtl
es
sub
pop
push
stos
dec
or
dec
outsb
daa
inc
mov
in
lret
push
xchg
jecxz
jns
and
das
xor
cmpsb
mov
mov
pushf
sarb
mov
dec
dec
inc
fists
loopne
and
pop
cmpsw
ror
mov
daa
repnz
xchg
std
add
shr
xor
lds
push
push
out
and
test
pushf
mov
aas
and
icebp
mov
xorl
xchg
xor
lahf
add
out
stos
pop
push
jg
repz
mov
test
mov
addl
mov
outsl
and
in
adc
inc
test
add
cltd
mov
lcall
inc
adc
stos
inc
and
clc
sbb
shrb
or
dec
cmp
cmpsb
aam
push
mov
jge
movsl
lock
lcall
sbb
adc
dec
adc
mov
add
sbb
or
lar
inc
test
sub
stos
pusha
call
out
sub
xchg
adc
cmp
sub
pop
fmul
sbb
ss
adc
inc
cmp
pop
jae
test
daa
repz
stos
movsl
in
inc
inc
push
xchg
cmpb
ret
mov
pop
test
pop
shr
shl
dec
adc
psrld
addr16
subb
push
outsl
mov
mov
xchg
xor
addr16
mov
jge
mov
dec
js
jl
movsb
inc
aam
add
sbb
cwtl
sub
cmpsl
inc
xlat
testl
dec
push
inc
clc
aam
xchg
push
push
and
fwait
xchg
xlat
cmp
pusha
test
fsubs
mov
xchg
push
imul
shr
push
cmp
and
dec
xchg
pusha
addb
fcoml
cld
and
dec
outsl
xchg
mov
stos
inc
xlat
out
add
and
dec
dec
push
inc
sbb
adcl
ret
adc
popf
push
inc
xchg
mov
mov
cmp
pop
test
ret
jp
lds
jmp
push
inc
and
pop
lds
add
iret
cli
negl
aas
loope
lods
scas
mov
inc
push
pop
adc
lahf
lea
add
ja
push
ja
ja
arpl
or
cli
mov
xor
sub
push
add
hlt
add
bswap
lea
or
pusha
and
mov
push
jo
call
inc
sub
xlat
xchg
roll
mul
sub
cli
push
imul
pop
fcmovnb
fnstcw
aad
out
ss
xchg
push
arpl
arpl
pop
add
loopne
pop
pop
or
jle
pop
mov
cld
in
push
pop
mov
push
test
jmp
not
out
cmpsl
insb
cmp
loope
inc
fstpl
mov
mov
lahf
inc
adc
pop
iret
cmp
jg
push
pop
aas
sbb
pop
sbb
pop
cmp
and
add
or
pop
adc
pop
sbb
pop
and
das
sub
pop
xor
aas
cmp
pop
inc
inc
dec
dec
dec
dec
push
push
pop
push
push
pop
pop
pop
pop
cwtl
gs
arpl
insl
imul
pop
jae
jg
jnp
xchg
pop
mov
pop
lahf
popf
fwait
cltd
cmpsl
movsl
mov
stos
test
fwait
mov
pop
jns
leave
xlat
aad
pop
rcr
fstp
in
and
out
in
jl
repz
icebp
repnz
sbb
push
xchg
add
sub
add
cmpsl
xchg
or
dec
pop
shrb
jg
test
sbb
fisttpll
jbe
add
mov
or
jecxz
outsb
add
inc
sub
sbb
push
fstpl
lahf
cltd
mov
sbb
xchg
fwait
mov
push
sbb
and
out
pop
test
inc
lds
jno
ror
fnstenv
std
xlat
out
loope
fldl
leave
push
gs
cmp
cmp
fstps
mov
daa
xlat
cmp
push
jmp
ret
mov
shl
mov
popf
out
fistpll
fiadds
push
xchg
push
dec
das
arpl
dec
mov
xor
cmp
mov
lret
push
jle
pop
ljmp
pop
pop
es
das
pop
inc
test
ret
jbe
mov
lahf
addb
xchg
popa
fisttpll
arpl
ret
mov
iret
in
jecxz
sub
test
jmp
and
inc
movsb
xor
das
adc
inc
and
in
xor
in
leave
inc
xchg
cmc
flds
push
mov
xchg
int3
fsubrs
rcl
int
jo
js
add
lret
jo
loop
and
mov
dec
xchg
aad
cmpsl
push
push
icebp
pop
fsub
movsl
push
cmp
xor
cmc
mov
pusha
or
xor
pop
inc
sub
call
int
adc
dec
xlat
imul
cmp
push
fdivl
gs
sub
xchg
int
add
xor
jmp
pop
inc
daa
jbe
xor
add
js,pn
lds
inc
arpl
add
ret
cmp
dec
add
sbb
push
adc
imul
push
xor
mov
pop
out
in
cld
jmp
aad
mull
xchg
mov
loop
cmc
stos
je
xlat
pop
or
add
sbb
push
gs
xchg
sbb
ficoml
and
ja
xlat
sbb
add
dec
iret
xor
pusha
push
push
dec
imul
rcl
or
sarl
imul
jecxz
loop
out
sub
popf
movsb
lret
jae
pop
xchg
dec
inc
aad
out
mov
dec
fidivl
push
inc
test
jmp
add
push
fldl
insb
stos
add
xlat
nop
mov
ret
in
adc
mov
arpl
mov
ret
dec
out
loopne
mov
subl
popf
push
je
subl
aas
adcl
out
xchg
sahf
mov
pop
push
rcr
dec
adcl
popa
push
lea
cmpsl
dec
or
adc
add
pushf
xchg
pop
daa
in
addl
xlat
inc
push
dec
add
jp
xchg
add
jg
int
jmp
add
in
add
add
add
add
das
jne
in
mov
cwtl
push
add
in
cmpsb
cmp
lret
movsl
dec
stos
iret
mov
or
or
adc
adc
pop
sbb
pop
es
and
pop
sub
sub
xor
xor
pop
cmp
js
inc
inc
inc
dec
pop
dec
dec
dec
push
push
push
push
pop
pop
pop
pop
bound
pop
insb
push
jbe
jb
jle
jl
mov
mov
mov
nop
sahf
pop
pushf
lcall
pop
lods
stos
test
mov
mov
pop
mov
ret
pop
int3
lret
aam
rcr
pop
sbb
in
loopne
pop
in
ljmp
pop
cld
cli
cs
mov
push
out
dec
pop
lods
push
cmp
inc
mov
xchg
fwait
jae
jg
xchg
mov
iret
and
inc
adc
aaa
pop
aas
lcall
adc
sbb
xor
pop
cltd
call
out
addr16
sub
lcall
daa
fcmovne
pop
test
out
aad
sbb
orl
sub
movl
xchg
inc
xchg
in
popl
add
sbb
mov
iret
sahf
popf
mov
scas
xlat
and
das
mov
sbb
adc
mov
movq
ja
test
dec
aas
inc
cmp
test
mov
aaa
lods
loope
fcompl
sub
fcomps
aas
lahf
cmp
cmpsl
addr16
jecxz
push
das
and
and
leave
loop
mov
pop
iret
lods
mov
pop
ja
lahf
mov
inc
push
adc
push
sub
inc
inc
loop
hlt
push
add
sub
push
push
push
arpl
mov
dec
sbb
cli
movlps
lret
hlt
sub
icebp
shll
fwait
aaa
dec
push
xor
subl
xchg
leave
mov
fldl
pop
ss
dec
xchg
dec
bound
loope
inc
push
sbb
orl
outsl
or
xchg
xorl
cwtl
hlt
das
and
movsl
imul
cmp
ret
cwtl
mov
mov
fstpt
loope
sbbl
add
add
fwait
sahf
lea
aad
mov
inc
rdtsc
int
cwtl
add
pop
mov
inc
inc
cmp
mov
mov
ljmp
inc
aas
fildl
fwait
dec
xor
insl
gs
jmp
xchg
ja
mov
mov
and
out
popa
sbb
add
pop
into
add
mov
adc
jle
shll
pop
dec
mov
inc
inc
add
sbb
int
test
enter
xor
push
inc
fucom
xlat
out
inc
jo
cmp
and
mov
out
ret
and
xchg
clc
add
xchg
add
mov
mov
dec
inc
adc
inc
mov
loopne
sbb
dec
push
adcb
jae
xor
test
cwtl
sbb
adc
addl
sub
push
mov
int3
mov
sub
fs
mov
pop
test
push
or
mov
push
mov
jo
jp
adc
fucomp
lock
lahf
fldcw
movl
mov
jp
loopne
cmp
push
xchg
push
push
inc
fsubrs
dec
sbb
inc
push
fcomps
push
fbld
xlat
pop
popf
fs
pusha
mov
sti
and
fisttpl
arpl
jne
insb
inc
stos
mov
rol
xor
movsb
cltd
dec
test
xchg
pop
notl
xchg
std
into
pop
clc
test
mov
enter
xchg
mov
xchg
das
icebp
xchg
out
inc
jle
enter
add
lds
sbb
stc
aaa
fstl
add
in
out
mov
repz
aad
mov
scas
fstps
cmc
mov
lds
jno
jno
push
bts
mul
clc
sub
pushl
into
ffree
mov
cwtl
lret
add
scas
aad
jns
orl
mov
les
pop
iret
repnz
mov
inc
mov
xchg
xchg
insb
in
mov
lods
fcmovnbe
cmp
xchg
and
notl
sub
addl
adc
int
out
dec
dec
je
dec
jecxz
sbb
and
push
sub
into
jns
sub
movsl
cmp
mov
mov
jnp
str
push
jl
sub
out
jg
dec
shl
xor
inc
cmp
cmpsb
add
loope
pop
ret
outsl
sbb
pop
or
and
cmp
outsb
and
adc
fiaddl
lahf
sub
jmp
aaa
and
mov
jmp
mov
jno
out
mov
inc
stos
add
scas
cmc
out
jne
cmp
and
xchg
jl
imul
leave
push
int3
add
es
pop
inc
add
loop
mov
xchg
or
cmpsl
notb
icebp
fcos
in
dec
and
pop
inc
add
mov
outsl
xchg
outsl
xchg
mov
aas
call
aaa
sbb
insl
popa
aas
divb
aaa
lahf
xchg
rcrl
mov
cmpsb
mov
xor
jo
in
int3
sub
add
dec
into
dec
sbb
mov
rorl
aas
and
cwtl
push
xor
pusha
adc
xchg
push
sbb
inc
jg
andl
fld
inc
test
lds
add
mov
out
stos
and
jae
sub
data16
popa
fdiv
test
gs
sub
clc
out
out
and
dec
jo
dec
call
test
loopne
inc
push
lahf
jns
mov
cmpsl
xor
mov
fs
and
adc
mov
test
dec
sbb
add
test
test
ds
push
ret
rorb
inc
dec
aas
mov
add
xor
xchg
mov
adc
arpl
sub
outsb
mov
mov
imul
or
add
test
inc
pop
xchg
andps
sahf
inc
and
leave
push
pop
fdivs
ss
xlat
das
pop
cmp
mov
popf
push
push
cmpsb
xchg
inc
ret
test
ficompl
mov
ret
xchg
enter
call
or
pushf
inc
mov
in
dec
out
add
mov
dec
inc
jg
mov
mov
popl
sub
jne
in
sub
cmpsl
adc
nop
inc
mov
in
rorl
cmp
loope
lea
xor
mov
jp
addr16
sub
mov
add
inc
setno
inc
xchg
out
sbb
adc
pop
pop
inc
adc
adc
sub
ss
lahf
das
and
add
inc
jne
lahf
daa
test
adcl
xchg
mov
mov
fistps
and
dec
aas
xchg
jecxz
into
or
cmp
push
lahf
pop
add
inc
mov
push
add
mov
pop
and
mov
push
js
ss
stos
aas
aaa
and
xchg
pop
outsl
in
test
jle
jge
pop
adc
pop
xchg
dec
add
inc
add
push
mov
adc
adc
mov
mov
ja
or
mov
aaa
xlat
inc
decl
cwtl
in
inc
inc
add
and
insl
inc
sbb
add
icebp
rcrl
pop
mov
andps
adc
lods
mov
inc
inc
add
movl
inc
dec
aaa
push
daa
cmp
lock
sti
cmp
inc
mov
insl
sahf
pop
push
cld
mov
cwtl
iret
test
insb
inc
lcall
mov
mov
fcomps
inc
adc
or
jno
mov
out
test
mov
sti
jae
lock
add
inc
nop
cld
mov
daa
lea
jb
push
push
mull
call
pop
inc
gs
inc
pop
mov
inc
pop
inc
shlb
stos
mov
xor
push
movsb
iret
iret
outsl
and
adc
test
dec
xchg
and
inc
sbb
and
dec
xor
inc
pop
xor
xchg
push
nop
and
dec
push
xchg
cmp
xchg
inc
inc
repnz
aaa
dec
cmovae
xlat
cmc
push
mov
repz
xchg
xchg
lock
lea
cltd
push
and
mov
add
push
xchg
mov
aaa
lea
in
dec
pop
mov
sar
push
test
nop
dec
mov
jo
push
push
dec
dec
xchg
inc
es
xor
and
ss
out
xlat
dec
xchg
scas
es
inc
xchg
and
pop
mov
mov
pop
and
fisttps
lods
das
stc
add
enter
mov
inc
test
out
push
sbb
push
inc
cmpsl
mov
sub
pop
mov
sub
punpckldq
cmpsb
pop
or
je
iret
dec
mov
xchg
adc
sub
mov
lahf
mov
adc
ret
outsl
jae
mov
jmp
mov
pop
dec
popf
xchg
fists
in
sub
loope
jae
es
lock
insl
inc
adc
cmp
xchg
and
pusha
mov
js
xchg
orb
mov
cmpsl
addb
das
pop
cmp
sub
xor
xor
add
inc
ficoms
fwait
clc
inc
sbb
outsb
out
dec
pop
mov
aad
fadds
mov
sbb
xor
in
stos
sbbl
pop
cmp
idivb
fidivrs
push
and
lcall
dec
lcall
mov
pop
cmp
test
jo
shrl
sbb
clc
incl
idivb
pop
repnz
push
movsl
addl
in
pop
add
mov
sub
dec
ret
push
or
dec
mov
xchg
repz
lcall
dec
add
inc
mov
in
push
or
jmp
xchg
popf
mov
pop
rorb
jno
push
hlt
sbb
mov
adc
mov
enter
inc
inc
mov
lds
cmpsb
adc
push
testb
leave
push
cs
inc
mov
mov
xor
pop
inc
adc
mov
inc
repnz
sahf
nop
cmova
jge
stos
inc
out
or
jno
cltd
add
sub
and
out
clc
andb
mov
push
out
fmuls
sbb
mov
inc
push
mov
call
aad
pop
or
rolb
popa
jge
xor
scas
sbb
jp
lret
daa
pushf
lds
and
sarb
lahf
mov
popf
add
xchg
ret
mov
sahf
das
sbb
cmp
lea
lcallw
mov
jo
jno
lds
repz
lods
mov
sti
mov
mov
push
or
jl
push
sub
aas
dec
jne
dec
aam
dec
push
sbb
push
pop
inc
shlb
mov
mov
icebp
or
add
es
jge
hlt
jae
pop
repz
mov
push
cmpsb
ja
mov
push
jno
or
enter
add
pop
or
imul
cmp
xchg
pop
pop
mov
dec
or
mov
dec
add
inc
outsb
arpl
xlat
fs
mov
clc
rorl
rcrb
cltd
mov
pop
sbb
test
pop
repnz
lret
pop
test
add
or
cmp
pop
or
cwtl
std
and
add
stos
fld
cmp
jecxz
mov
inc
aaa
add
dec
sub
daa
adc
add
jle
cmovae
mov
adc
xor
sub
jge
in
jmp
jmp
push
arpl
pop
outsb
fcmovne
push
insb
jae
inc
add
gs
inc
adc
aad
testl
gs
cwtl
fdivrs
ja
inc
pop
jg
fs
loope
mov
fwait
shlb
ja
in
push
cwtl
shll
lods
dec
push
cwtl
jmp
pop
leave
inc
xor
divl
bnd
filds
push
or
js
or
fldenv
in
aad
in
add
sbb
fmul
jg
fwait
jge
std
inc
pop
outsb
sti
outsl
ja
push
inc
cmp
fldl
aas
cmpsl
cltd
dec
cmpsl
test
in
jle
mov
jge
xchg
in
cmp
or
cwtl
cmp
lea
cltd
ret
andb
jl
nop
mov
and
sbb
loopne
call
sub
je
jne,pt
pusha
jae
jno
sbb
push
fwait
push
sbb
lcall
mov
add
rclb
inc
loopne
call
jae
jno
jg
jge
jnp
jns
sbb
xchg
fwait
std
sbb
lcall
mov
and
xor
or
enter
sbb
loopne
idivb
enter
sbb
loopne
call
dec
lock
lock
lock
lock
lock
jg
xchg
lock
lock
lock
lock
lock
shrl
lock
lock
lock
xor
inc
lock
ret
lock
sbb
sbb
jge
cmp
inc
call
shl
nop
ror
out
out
nop
mov
imul
shl
adc
fnsave
sbb
into
arpl
popa
xlat
sub
adc
sarb
sub
cmp
jno
jg
jge
jnp
jns
jns
sbb
sbb
lcall
repnz
ja
fwait
daa
sbb
lcall
outsl
lcall
mov
mov
lcall
and
pop
lcall
clc
lcall
mov
in
mov
mov
sbb
ficoml
push
hlt
cmp
mov
lcall
add
and
inc
jns
fildl
in
shrb
outsb
sarb
fnsave
clc
out
hlt
sbbb
subl
sub
in
add
arpl
aas
ss
repnz
mov
or
or
test
imul
xchg
jmp
lods
adc
sbb
outsl
xor
jg
in
test
lahf
out
imulb
mulb
sub
arpl
inc
out
shr
imull
repz
fidivrl
cmp
add
xchg
cmp
add
in
mov
xorb
sbb
sbb
lcall
push
and
sbbb
mov
or
stos
cmp
inc
popf
and
icebp
xchg
test
imulb
negb
pusha
testb
loop
imul
or
xor
jge
cmp
ret
mov
fdivr
sti
adc
xor
inc
sti
pop
sti
cmpsb
sti
int3
aas
pop
jge
and
cmp
cmp
insb
cmp
jnp
mov
addb
jns
xchg
dec
cmpsb
gs
mov
popf
dec
ja
lock
lock
ds
lock
lock
jle
xor
lock
lock
mov
lock
push
inc
pop
xchg
adc
lcall
dec
lcall
mov
int
rcrl
or
dec
lcall
cmp
inc
aad
jecxz
sti
mov
fwait
adc
cmpsb
xorl
add
inc
lock
lock
lock
stc
popa
rorb
int
fdecstp
out
push
xor
sti
js
push
sti
mov
cmpsb
sti
mov
sti
cld
aas
jnp
xchg
ds
cmp
adc
dec
jnp
insl
test
xchg
cmp
xor
aam
out
cmp
or
imul
pushf
imul
iret
mov
cmp
dec
inc
out
jb
test
testb
jne
dec
push
mov
add
clc
sbb
jae
rorb
and
repz
sti
mov
sti
std
sti
push
sti
sbb
cs
xor
jle
imul
lods
jno
jno
jo
in
in
leave
hlt
frndint
jmp
lock
lock
clc
pop
jmp
mov
and
icebp
inc
std
data16
ret
jns
sbb
jnp
fwait
pop
sbb
lcall
adc
dec
lret
lds
ret
filds
mov
cmp
sub
out
jmp
divl
sti
xchg
aas
push
insl
pushf
or
imul
mov
dec
push
mov
out
xchg
add
jecxz
out
stc
jmp
mull
push
pop
mov
movsb
xchg
push
outsl
loopne
shl
mov
rcrb
mov
leave
dec
xor
loop
loop
sbb
arpl
shl
sbb
jne
mov
aas
outsl
sarl
std
cmp
cmp
cmp
or
insl
sbb
mov
leave
inc
or
mov
add
and
insb
rorb
xchg
dec
dec
sbb
mov
lds
mov
scas
test
jg
cwtl
out
jecxz
out
enter
ljmp
out
pop
jmp
mul
scas
testl
pop
sti
pop
sti
and
mov
sti
sarb
dec
add
or
adc
pop
call
stc
movsb
mov
cwtl
das
xchg
aaa
cmpsb
aas
outsl
mov
loopne
call
cmpsl
cmp
cmp
cmp
cmp
or
jne
mov
rolb
xor
mov
jecxz
aas
pop
outsl
mov
inc
add
cmpsb
inc
push
jmp
cmpsl
imul
lret
ja
mov
out
fdivrs
and
ds
cmp
mov
sarl
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
sbb
adc
jl
sarl
test
das
popf
dec
sti
sti
shll
lock
lock
xlat
daa
js
xlat
aas
push
arpl
rorb
and
test
insl
fistl
push
jo
sbb
imul
out
mov
leave
lahf
jle
repz
adc
cltd
ja
sbb
ja
and
cmpsl
call
loop
mov
jmp
jae
pop
movsb
aas
xchg
sbb
adc
jns
xchg
ljmp
jo
fistpll
shlb
dec
enter
jecxz
out
mov
fcomip
jo
test
les
popa
outsl
cmp
shlb
add
jg
bound
insl
ffree
jl
shlb
mov
enter
sub
adc
cs
test
xchg
sti
movsb
xchg
and
push
xor
jns
jns
sbb
jne
fwait
sub
lcall
push
or
adc
jg
jge
pop
dec
pop
cmp
cmp
push
adc
test
add
and
sub
inc
inc
inc
push
xchg
adc
jnp
xlat
adc
mov
cmp
cwtl
iret
mov
gs
out
repnz
add
ds
add
dec
test
mov
dec
inc
jl
xchg
rolb
imul
jo
push
bound
pop
and
jae
ror
jno
jge
fwait
sbb
lcall
sbb
out
push
outsb
xchg
push
or
sbb
push
loopne
jno
test
dec
stos
shrb
push
or
arpl
dec
dec
movsb
mov
and
xchg
sbb
xchg
mov
dec
and
push
dec
fiaddl
inc
clc
inc
pop
add
fidivrl
sbb
sub
dec
cmp
cmp
cmp
cmp
inc
cmp
push
cltd
pusha
xchg
cld
dec
cmp
sbb
daa
fs
push
pushl
aad
mov
push
lcall
ja
jg
xchg
lahf
mov
jl
lock
lock
je
aas
pop
outsl
das
ds
cmp
mov
cmp
cmp
cmp
cs
and
sbb
sbb
mov
sahf
lcall
sbb
fwait
sub
jno
xchg
subb
sbb
enter
sbb
loopne
jne
popf
adc
jne
dec
mov
push
divl
shlb
or
aad
icebp
inc
jge
out
cmp
shr
sbb
loopne
call
sbb
and
sub
pop
push
cmp
jb
jp
test
dec
sbb
clc
inc
sbb
cwtl
mov
and
dec
imul
xchg
arpl
jg
jge
xor
mov
insb
sbb
jecxz
sub
rcrl
sub
xchg
xchg
cwtl
testl
and
imul
ror
cmc
andb
pop
mov
cmpb
ret
xchg
loop
loop
loop
loop
and
add
cwtl
jbe
int3
dec
and
push
sub
divl
jge
sbb
xor
and
sbb
lcall
push
jl
gs
outsl
rclb
pop
push
add
xlat
and
add
mov
enter
push
shrb
sub
call
clc
mov
cmp
push
adcl
mov
pop
jne
xchg
xchg
cmpsb
xlat
mov
dec
and
test
jecxz
out
push
xchg
xchg
sbb
or
cmpsl
clc
enter
cmp
enter
jne
jl
js
ja
or
mov
jmp
or
pop
fdivrs
cltd
sub
dec
inc
lcall
fs
testb
mov
jns
jns
jns
adc
test
mov
pop
lds
jns
jns
dec
scas
mov
out
bnd
add
add
adc
sub
bound
xorb
js
inc
in
aam
xchg
imulb
jo
je
lock
nop
lock
mov
adc
shl
sbb
loopne
call
adc
push
insb
sbb
aaa
sbb
lcall
pop
lcall
mov
mov
mov
mov
out
out
push
pop
sbb
add
xchg
lea
jecxz
jae
sbbl
jnp
shll
mov
loop
add
jb
fiaddl
arpl
jno
ret
fsincos
sub
cmc
jge
pop
mov
das
imul
arpl
cmp
imul
xor
pusha
xchg
pushf
and
enter
addr16
dec
push
cld
sahf
call
inc
push
mov
mov
int
fildl
fisubrs
or
movl
or
jp
outsb
jle
repz
xchg
mov
nop
rcrb
pop
mov
jb
data16
jo
lcall
ds
xchg
mov
jnp
xor
aad
fcompl
mul
jge
aaa
cmp
mov
sbbb
sbbl
mov
xorl
jb
dec
stc
mov
imul
sbb
ret
xchg
loope
jo
xchg
call
shl
in
nop
pop
pop
out
movsb
aas
jp
mov
adc
xchg
filds
jno
fsubs
loope
pusha
sti
adc
aad
inc
rcll
cmp
jmp
jge
dec
dec
ret
xchg
leave
push
cltd
out
js
test
int
or
pop
movsl
stos
iret
popa
test
inc
das
out
inc
jmp
lret
leave
sbb
sbbl
inc
mov
push
mov
cmc
cmpsl
inc
popa
pop
outsb
or
aad
or
xor
pop
aas
xlat
lahf
mov
loopne
xchg
mov
dec
ds
inc
mov
jbe
pop
out
dec
push
dec
lock
fmuls
test
jne
jl
xchg
cltd
mov
decl
cmpsb
fistpll
mov
lea
pop
in
movsb
js
mov
and
xchg
adc
jp
xchg
lods
mov
lea
add
xchg
cmp
test
fisttpll
push
andl
add
inc
mov
je
cmpsl
and
mov
icebp
ret
shlb
xchg
fmull
fists
iret
dec
in
and
stos
popf
pop
lahf
push
jno
xchg
cmc
jmp
dec
jg
sbb
jg
and
push
outsb
mov
mov
jo
sbb
stc
addr16
dec
inc
arpl
sub
loopne
lret
and
dec
jb
ja
inc
ja
xchg
negl
mov
push
packsswb
cwtl
jne
xor
mov
leave
cli
out
and
sbb
dec
jg
divl
jae
imul
jp
pop
xlat
mov
in
into
xlat
daa
mov
mov
jne
das
imul
inc
lcall
adc
push
xor
cmpsb
mov
push
dec
gs
pop
pop
pusha
arpl
enter
fadds
scas
clc
lret
dec
popa
jnp
addl
jnp
loop
pop
mov
scas
test
out
insl
jl
pusha
mov
push
inc
sbb
mov
das
inc
or
outsb
aam
or
gs
adc
ss
insl
xor
push
arpl
das
and
rol
aam
dec
push
repz
jmp
cmc
outsl
out
add
mov
inc
lcall
das
cmp
push
push
outsl
inc
outsl
adc
fisttps
xlat
pop
pop
cmp
test
push
loop
std
imul
ja
loope
pop
dec
pop
jne
fdivrs
cmp
aad
and
popf
lock
cmp
xchg
jmp
inc
inc
das
cmpsl
pop
out
cmc
movsb
mov
xor
pop
push
xor
inc
mov
push
iret
stos
out
push
stos
and
dec
jnp
pop
ja
sbbb
cmpsl
lods
xorl
cmpsb
popf
and
jmp
ffreep
cmc
xchg
inc
add
andl
jmp
inc
sti
cwtl
inc
and
hlt
rcrl
mov
movsl
in
cmp
dec
enter
jmp
inc
mov
js
mov
adc
lret
mov
mull
add
lock
popf
mov
mov
jns
aad
test
outsl
adc
fsubrs
test
xchg
push
adc
mov
mov
xchg
jecxz
notl
outsl
push
pushf
add
ret
and
cld
aam
xchg
pop
in
mov
lods
push
lahf
pop
das
xor
dec
out
dec
or
push
rcll
sub
rcll
arpl
arpl
rcl
fcmovne
xlat
inc
or
jb
inc
dec
xor
movsl
leave
ja
out
and
push
addl
iret
sar
stos
dec
lret
mov
lock
dec
scas
or
test
mov
int
sbb
push
xor
xchg
aas
xor
and
fildll
inc
das
and
dec
rcrl
sbb
mov
inc
mov
in
cmp
xchg
push
fstpt
int
xchg
mov
or
xlat
sbb
mov
aad
mov
lods
push
mov
lret
aad
xchg
inc
dec
popf
mov
inc
jo
xor
pop
and
push
xor
inc
dec
mov
push
mov
and
mov
jno
fwait
jne
adc
push
aad
push
jge
dec
mov
cmp
adc
lret
pop
pop
mov
adc
test
inc
jl
jp
hlt
jno
pop
test
pop
gs
inc
dec
dec
imul
add
dec
enter
jp
dec
imul
gs
popa
outsl
aaa
sub
cs
cmp
push
in
movsb
cmpsl
lods
ja
out
push
jmp
fldpi
repz
jge
inc
inc
leave
ficoms
call
insl
lcall
cmc
rcr
repnz
cld
and
push
inc
mov
push
jp
ficoml
out
pop
int
xor
repnz
pop
mov
sbb
test
fdivp
and
outsl
aaa
adc
sbb
inc
outsl
sbb
xor
repnz
cwtl
cmc
rorl
pop
ret
sbb
imul
mov
outsb
les
dec
shrl
xchg
jae
cltd
stos
rorb
das
shlb
cld
loop
add
sbb
test
push
ret
mov
je
cmp
jae
gs
inc
repz
inc
pop
test
adc
jp
inc
pop
scas
das
stos
jle
mov
xchg
jmp
shll
mov
push
mov
sub
int
mov
add
cli
stc
add
pop
mov
jl
pusha
inc
cmpsl
mov
loopne
dec
fistpl
aam
dec
popf
mov
gs
mov
mov
js
inc
ja
outsl
xor
daa
cmp
xchg
imul
or
sbb
inc
or
gs
outsl
xchg
insl
stos
loopne
sti
out
jne
imul
adc
xchg
push
pop
inc
dec
xchg
ja
xchg
adc
insl
pop
lea
fwait
mov
orb
mov
push
cmc
fisttps
xchg
test
stos
xchg
jb
sbb
inc
movups
jnp
push
ret
mov
aaa
and
and
mov
xor
imul
imul
cwtl
xorb
cli
jns
mov
xor
gs
and
xor
cmp
xor
pop
mov
sbb
ret
sahf
rcrl
or
in
inc
mov
dec
add
fdiv
pop
sbb
popa
int
iret
push
and
xor
pop
cli
fldcw
insb
pop
ss
arpl
imul
pop
mov
pop
mov
dec
subb
bound
jae
imul
lods
push
gs
ja
loop
cmp
popa
xchg
sbbl
and
ret
mov
ror
cmp
mov
mov
jp
aaa
sub
jp
mov
xchg
movsl
push
push
pop
lahf
inc
insb
inc
outsl
fidivrs
sub
jb
enter
call
jmp
pop
and
add
mov
je
mov
clc
leave
in
or
ds
mov
in
cmp
mov
xchg
pop
mov
mov
dec
pop
mov
std
fwait
push
outsl
dec
cmp
mov
arpl
xor
mov
inc
aaa
out
sbb
cmpsl
popf
into
push
dec
stos
pop
xor
inc
rcll
sub
sub
cltd
subl
iret
jnp
data16
jg
mov
mov
and
out
jg
pusha
hlt
mov
push
mov
dec
mov
int3
cmp
outsl
xor
lret
mov
pop
sti
or
mov
push
cmp
and
and
xchg
push
stos
dec
dec
xlat
lods
inc
inc
lcall
mov
imul
cli
mov
gs
movsb
subb
daa
mov
jno
pop
ja
xor
cltd
mov
int3
data16
jae
dec
inc
inc
cltd
inc
sub
adc
mov
add
out
jge
insl
mov
cs
sub
xchg
std
inc
loopne
xchg
outsl
pop
or
fpatan
out
divl
sbb
dec
push
pop
imull
push
adc
xchg
xor
gs
jne
or
rcl
in
iret
jo
popf
iret
push
pusha
out
rcll
insb
pushf
xchg
dec
inc
das
jge
shr
ds
jl
inc
in
or
inc
lret
mov
ss
jb
adc
in
dec
inc
out
sbb
mov
push
and
xor
call
jns
cwtl
push
gs
jl
cmp
insl
outsl
outsb
inc
movsb
cmp
jo
es
push
inc
push
inc
push
out
xor
imul
ja
fucomi
lahf
je
gs
mov
xchg
sahf
test
jno
test
in
rorl
insb
ja
iret
aad
add
push
jb
pop
rcr
scas
sarl
and
adc
inc
jecxz
into
insl
stc
and
mov
jmp
popf
adc
mov
out
mov
mov
pop
push
lahf
das
loopne
inc
popf
cmp
jl
arpl
cmp
mov
mov
mov
cmp
shlb
or
insl
out
int
add
inc
shll
outsb
sub
gs
pop
nop
int3
xchg
call
pop
xchg
mov
xchg
movsl
decb
dec
shlb
mov
es
or
xor
xor
push
in
lret
shl
push
rcr
push
add
sbb
imul
dec
pop
cwtl
jne
ja
fidivl
popa
and
cltd
mov
pushf
dec
popa
and
ja
pop
push
mov
inc
mov
adc
sbb
data16
pop
insl
loope
lea
inc
sbb
mov
std
jb
pop
and
cwtl
ret
fldt
lcall
subl
push
fmuls
es
fsubrs
mov
xor
jl
notb
adc
adc
mov
ljmp
push
dec
dec
repz
sahf
bound
inc
shrl
xchg
iret
inc
les
pop
dec
in
xchg
jecxz
into
imul
xchg
mov
arpl
push
jecxz
push
subb
ss
icebp
push
mov
dec
stos
jge
jbe
jge
or
push
cs
std
sbb
out
mov
in
popa
lret
xor
jmp
icebp
push
inc
sbb
lods
daa
cmpsl
mov
daa
addr16
lods
ja
cs
cwtl
cmp
jecxz
mov
fimull
out
and
decl
mov
fnstcw
outsb
popa
jge
inc
imul
xchg
jno
lods
mov
jmp
push
mov
test
jne
xlat
test
sub
cli
imul
in
outsl
mov
ds
and
push
push
repnz
testb
scas
repnz
lahf
cmpsl
jmp
jne
cmp
mov
ret
sub
pop
das
add
hlt
pop
sub
fs
and
mov
sti
jo
pop
pusha
xchg
lret
sub
cli
shlb
dec
pop
lea
jg
fs
pusha
popa
lods
pop
xor
fmull
add
arpl
testb
arpl
mov
imul
les
jne
aad
dec
sbb
mov
inc
and
ret
imul
ds
and
mov
push
xchg
mov
add
lods
repz
xchg
lahf
xor
aas
push
and
scas
pushf
and
xchg
pushl
push
fwait
or
inc
or
adc
jne
jne
ss
cwtl
pop
xchg
push
lret
dec
out
jno
push
jo
loope
out
test
jge
pop
jae,pt
mov
dec
imul
scas
aam
push
mov
push
fstl
sti
pop
stos
jmp
push
dec
dec
mov
push
or
idiv
and
call
stos
xorl
out
mov
ja
int3
out
mov
shrb
cmp
lcall
fldl
xor
jg
out
outsb
jp
rcrl
pop
dec
fiaddl
jne
repnz
cli
xchg
nop
in
loopne
push
xchg
mov
movsb
mov
xchg
int3
sub
push
outsl
mov
mov
sbb
mov
mov
loop
xchg
mov
sub
mov
scas
cmpsl
outsl
jo
cmp
dec
stos
adc
mov
pop
shl
mov
and
or
or
insl
lahf
push
pushf
imul
jns
mov
pusha
rcl
aad
out
jle
xchg
inc
mov
test
push
lahf
jno
int3
ds
out
popf
test
imul
inc
gs
jne
jne
xlat
mov
icebp
fstps
mov
sub
mov
pop
loope
pop
shr
sar
push
fwait
inc
fs
aad
jmp
dec
in
xchg
mov
jno
std
sti
dec
mov
pop
jae
push
arpl
pop
cmp
imul
mov
jae
inc
test
icebp
dec
outsb
jo
pop
lds
aad
je
imul
out
jl
out
sub
fisubrs
out
add
mov
imul
or
aas
movsl
std
mov
ja
mov
add
mov
test
xchg
insl
add
mov
popa
xlat
mov
adc
arpl
push
subb
mov
imul
loop
inc
int3
lock
in
dec
lods
mov
cmp
aad
add
imul
xchg
jmp
loop
daa
add
in
sbbl
hlt
lock
mov
and
jg
sahf
cwtl
nop
in
insl
lods
dec
xor
rorl
mov
pop
sbb
and
cmpsl
imul
xchg
insl
add
mov
mov
call
out
mov
dec
jne
orl
mov
incl
arpl
mov
jne
jecxz
xchg
repnz
lods
aad
pushf
sti
and
xchg
lcall
sub
call
and
mov
push
inc
xor
mov
mov
and
mov
dec
sub
xchg
jae
mov
loop
jmp
inc
lcall
push
inc
hlt
movsb
rol
pop
push
icebp
push
outsb
out
adc
out
cld
lahf
stc
gs
out
sub
xchg
jle
loopne
pusha
pop
push
fs
mov
jo
or
fldenv
mov
imul
ficoms
icebp
xchg
daa
inc
rcrl
xchg
das
pushf
jo
inc
pop
cmc
dec
daa
ljmp
push
pop
lcall
inc
leave
notb
and
outsl
pusha
push
sti
imul
xlat
push
scas
movsb
or
inc
out
lret
cmp
std
sub
lods
push
hlt
repz
xchg
scas
loope
addb
lret
popa
jbe
enter
test
xchg
sti
aad
mov
lret
sub
xlat
push
xchg
xchg
insl
lret
cwtl
rcrl
mov
sub
push
jge
cltd
add
pushl
cmp
shl
sbb
jb
dec
and
cmc
mov
ret
popf
dec
outsl
loope
jge
imul
cltd
insl
or
lods
mov
jecxz
mov
aam
ja
inc
call
loopne
pop
ds
inc
pusha
xchg
aam
mov
out
dec
xchg
and
ds
xchg
lret
pusha
repnz
movsb
mov
fsubr
or
and
mov
xchg
insl
outsb
xchg
fwait
in
outsl
das
and
jb
push
fs
ja
sbbl
and
out
jne
aad
mov
loop
jecxz
and
adc
mov
jle
aaa
jmp
iret
aad
sarl
int
outsl
cmc
and
scas
rorb
jmp
pop
mov
mov
ljmp
mov
push
ret
or
jb
xchg
std
sysret
stos
sbbl
lock
test
fwait
mov
notb
sub
jge
andl
push
mov
mov
mov
loope
shll
cmp
push
lea
out
xor
movsl
pop
test
in
jge
fwait
loop
fistps
push
lds
loope
xchg
repz
jne
mov
outsl
lahf
cmpsl
aad
push
into
jmp
ja
sub
mov
mov
add
push
test
jne
shr
lret
fldl
shl
imul
fists
ret
mov
xor
arpl
popf
popl
jne
cwtl
hlt
ret
or
jnp
lret
cmp
in
fldcw
xchg
shl
popl
jmp
xchg
cmp
or
lea
xchg
rcr
insl
out
mov
bound
sbbl
push
jne
imul
mov
cmp
mov
xchg
insl
das
repz
mov
lods
stos
jmp
cmpsl
sub
leave
aaa
rcll
movsl
push
xchg
test
addl
mov
rol
imul
popf
xchg
sub
fucomip
aas
or
testl
dec
push
pop
cmc
lods
mov
adc
popa
popf
iret
ljmp
cmp
leave
gs
fisttps
movsl
loope
dec
fwait
jne
jns
adcl
enter
fstl
aad
cltd
popf
out
in
xlat
jecxz
lahf
outsl
jnp
lods
xchg
xchg
cwtl
or
int
arpl
shl
test
orl
popa
hlt
insl
and
test
scas
loope
xchg
orl
das
xchg
repz
sbb
fisttpll
jno
lods
jnp
cmp
mov
fistl
gs
dec
add
stos
xlat
repnz
test
repz
scas
xchg
cmp
lods
out
fldt
imul
sbb
stos
xor
cld
mov
sbb
fbstp
shll
jmp
mov
adc
add
insl
cltd
sarb
sub
cli
mov
xchg
gs
ror
hlt
inc
inc
sbb
mov
mov
repnz
or
test
xchg
stos
dec
loope
xchg
aam
lds
mov
cmc
test
cmp
mov
out
mov
rorl
cmp
mov
pop
xchg
addl
pop
imull
popf
pop
dec
push
ret
les
adc
xor
outsl
mov
rcll
lahf
test
scas
and
lds
sbb
leave
xlat
out
mull
cmc
cmpsl
arpl
lea
ljmp
repz
shrl
subl
lahf
cmc
jmp
mov
lea
insl
mov
mov
flds
xchg
push
xchg
stos
popf
sbb
push
repz
sub
rcll
xchg
fnsave
fwait
in
cmc
mov
xlat
push
fildll
shlb
scas
pop
sahf
fmuls
xlat
pop
jl
mov
in
push
xchg
jne
dec
movsl
pushf
or
fucomp
sub
cmpsl
dec
ja
lds
jmp
outsl
lea
jp
push
mov
frstor
pop
push
cmpb
outsl
adcb
jmp
aam
repz
lods
lahf
ja
lahf
or
fldl
cmp
ror
dec
fldenv
xchg
test
popa
cmpsl
sbb
repz
mov
aam
jp
pusha
lret
gs
daa
popf
movsl
push
das
aam
cld
mov
add
add
xchg
mov
xlat
leave
mov
out
rorl
jne
cltd
flds
sub
lds
xchg
fwait
or
popf
inc
push
cmc
sub
sub
inc
or
cmc
andl
ja
xor
outsl
fists
scas
mov
negb
scas
jmp
inc
in
stos
test
lahf
gs
lock
sbb
testl
iret
xchg
xlat
lds
xchg
xchg
cmpl
jne
jbe
fsubrs
in
mov
divl
xchg
jae
jmp
ret
add
xor
push
int
jp
mov
pop
popa
repz
outsl
mov
inc
add
scas
ret
mov
rorb
pop
andl
or
shl
in
insl
jl
adc
filds
les
xchg
jmp
cld
mov
pop
in
jbe
fistpl
cld
fbld
fiadds
inc
stos
mov
rcrl
out
dec
popf
dec
mov
cmc
cmp
hlt
dec
in
mov
add
scas
xchg
out
fwait
mov
push
push
in
jg
mov
push
testl
and
mov
push
js
xchg
ffreep
fwait
xor
xlat
push
xrelease
out
in
test
orl
lods
movsb
xchg
aam
ret
shrl
fmuls
xor
cmc
sbb
mov
scas
xchg
mul
repnz
inc
in
pop
mov
jne
xor
xchg
stos
int
iret
and
xor
or
lea
lahf
jae
jns
dec
aad
or
dec
pusha
cmc
lahf
lahf
jne
add
imul
xchg
arpl
imul
sbb
arpl
lds
lret
adc
shrl
sti
xchg
lods
shll
negl
xchg
cltd
in
lds
pop
and
mov
sbb
clc
xchg
leave
loope
push
fildll
test
arpl
fld
jmp
xchg
imul
fildl
jne
cltd
out
in
out
aas
xlat
andl
push
mov
js
stos
mov
cli
cmp
mov
cmc
shrl
and
add
loop
mov
xchg
ret
mov
xchg
and
pop
xor
shl
jecxz
xchg
ljmp
inc
cmp
dec
loope
xor
add
cmc
insl
jbe
push
add
add
out
ffreep
xor
cmp
mov
xorl
adc
insl
out
mov
push
js
mov
dec
arpl
add
hlt
inc
repz
shrl
xlat
repz
push
xchg
lods
test
mov
aam
inc
fsubl
test
ja
lods
test
push
xchg
int
mov
lret
popa
ja
arpl
cltd
fnstenv
lods
insl
mov
aad
mov
mov
mull
test
sub
fstpt
test
in
in
clc
andb
xchg
adc
pop
outsl
adc
mov
outsl
xchg
gs
lds
mov
movsl
ja
ret
lahf
cmp
sbb
cwtl
fnstcw
ja
movsl
and
mov
leave
cmc
aam
sub
jno
iret
nop
fs
sbb
jne
in
push
push
pop
lds
ret
sti
fwait
jecxz
mov
sbb
nop
imul
repz
cmc
movsl
fldl
cmp
jne
sti
cltd
pop
pop
add
xchg
movsb
shrl
sbb
xchg
mov
jecxz
xchg
ret
shr
mov
out
cmp
fwait
out
test
cmc
mov
push
mov
ror
mov
fsubrl
cmc
mov
fst
sub
fucompp
scas
out
sarl
iret
in
sub
movsl
fistl
cwtl
iret
clc
jb
pop
jl
dec
scas
or
lea
daa
movl
in
data16
rol
lahf
add
xchg
out
insl
push
xchg
popf
fistl
movsl
out
mov
push
lods
mov
xlat
xchg
push
and
clc
in
pop
cmpsl
int
dec
dec
adc
arpl
jmp
addr16
insb
or
jne
push
test
jp
sbbl
xchg
inc
mov
repnz
sbb
call
cmp
mov
lret
sti
jae
pop
iret
fildl
out
ret
jo
popa
ret
push
cmp
pop
mov
add
notl
lock
mov
ja
repz
cmpsl
stos
leave
js
out
lahf
insl
mov
addr16
sbb
pop
in
pop
xor
add
jge
lret
nop
pop
xchg
sbb
insl
arpl
xor
xchg
mov
push
gs
psrlw
out
add
ffreep
xrelease
gs
outsl
cmc
addr16
pop
test
cwtl
test
iret
js
cmpsl
arpl
ret
and
jp
add
pop
lret
sbb
andl
add
lret
xor
xchg
pop
push
cmpsb
jne
pop
sub
imul
sbb
mov
nop
jmp
das
cltd
leave
cmp
lods
mov
mov
cwtl
aad
movsb
xlat
mov
test
lods
shl
pop
aad
gs
cmp
shll
sahf
das
jne
mov
push
test
rcll
push
je
in
std
popa
stos
popf
mov
cld
ret
repz
and
mov
in
andl
mov
xchg
sub
cmp
dec
and
adc
or
insb
add
xchg
jne
xlat
mull
jg
fildll
imul
cmpsl
jb
cmpsb
xchg
mov
loop
push
mov
mov
pop
sbb
outsl
test
inc
imul
cwtl
decb
push
int3
leave
movsl
xchg
scas
xchg
xor
lahf
lret
fidivs
mov
scas
arpl
jmp
lds
cmpsb
push
fwait
aad
data16
xchg
addr16
fwait
jne
and
mov
mov
mov
iret
imul
pop
stc
sub
roll
mov
lret
in
push
adc
fwait
gs
xor
scas
notl
inc
out
mov
pusha
mov
sbb
iret
cltd
in
add
fldl2t
rcll
jmp
xorl
and
add
push
mov
movsl
ja
cwtl
add
cmp
pop
add
mov
mov
mov
pop
xchg
pop
mov
jbe
jp
leave
pop
sbb
aad
ja
cmpsb
mov
jecxz
andl
push
and
stos
iret
mov
in
and
fstl
pop
fwait
add
jmp
or
int
adc
add
sub
adc
cltd
pop
and
cwtl
cwtl
outsl
lret
fsubs
insl
mov
xchg
addl
lods
mov
cmc
fldl
push
mov
inc
xchg
cltd
clc
pushf
mov
cmc
shr
ljmp
dec
repz
aas
idiv
jb
cmp
stos
push
cltd
push
jecxz
and
xor
xchg
lret
lds
xorb
cmp
cwtl
lods
xor
cmc
fistpl
arpl
popf
fstp
inc
xor
mov
outsl
mov
insb
add
lea
lods
gs
xor
outsl
mov
ret
movsb
out
icebp
out
std
push
gs
es
cmc
scas
sbb
pop
shrb
pop
ja
cmc
lret
jmp
popa
or
int
push
fwait
cmp
leave
mov
cwtl
out
sahf
jmp
arpl
sbb
cmpsl
sbb
arpl
pop
pop
pusha
test
addr16
lea
push
lods
xor
iret
push
aad
repz
out
inc
fwait
test
test
ret
mov
or
fistpl
cmp
aad
sbb
shr
out
pop
lcall
vmovd
iret
fwait
movsb
add
cmpsl
movsl
mov
int
lock
lret
iret
rclb
imul
cmp
cli
adc
pop
push
test
les
mov
es
in
fistps
mov
xchg
xchg
fstl
push
insl
in
movsl
ret
cmpsl
fildl
rcr
lds
xor
cwtl
mov
push
sti
sbb
lock
mov
lcall
sbb
arpl
lods
pop
pop
jecxz
cltd
adc
popf
xchg
insl
cwtl
pop
fbld
pusha
imul
mov
cmpsw
es
aam
pop
out
dec
fildl
stos
test
in
movl
repz
jecxz
insl
fwait
jbe
xchg
sbb
imul
xchg
xchg
test
sti
mov
loope
movsl
push
mov
xchg
sub
sub
fimull
or
je
stos
cwtl
xorl
ret
mov
sbb
in
js
xchg
shll
xorl
leave
mov
movsl
ret
add
jmp
test
mov
in
lahf
addr16
or
lea
xchg
jmp
popa
cmc
jmp
or
or
into
mov
xlat
xchg
pop
xchg
xchg
xor
adc
cltd
aaa
mov
mov
loopne
out
imul
mov
fwait
xchg
add
int
add
mov
adc
add
push
imul
popf
xchg
in
popa
out
mov
mov
insl
push
push
and
movsl
ror
scas
sub
inc
loopne
mov
dec
mov
pop
iret
loope
in
mul
xchg
lret
popf
ret
mov
clc
lahf
gs
loope
lds
and
fwait
es
jmp
push
jmp
pusha
mov
pop
shrl
ss
cmp
xor
dec
ret
test
cmc
push
mov
xor
xchg
push
push
pop
data16
lods
shr
sahf
test
cld
xchg
mov
xchg
cmp
stos
jecxz
jg
rorl
inc
imul
popa
adc
mov
mov
cmp
cmp
shrl
dec
inc
push
xchg
push
fldl
popf
jae
mov
push
mov
lea
xor
jno
jne
push
in
imul
out
mov
push
mov
add
xchg
add
pop
fidivrl
mov
xchg
popa
gs
outsl
dec
imul
xchg
and
scas
or
xchg
addr16
outsl
ror
enter
pop
or
jmp
xchg
iret
lret
orb
sti
sarl
sub
sub
push
addl
in
cwtl
mov
sub
imul
popf
mov
fwait
test
inc
imul
mov
lahf
inc
mov
dec
iret
jge
mov
jge
jne
or
out
cltd
ret
adc
bswap
jmp
push
mov
sbb
popf
int
sub
je
out
mov
imul
vpsrld
sar
ss
push
in
mov
adc
push
or
ret
in
insb
jne
pop
arpl
jae
mov
xchg
lret
imul
or
sahf
xlat
sahf
movsl
pushf
sbbl
fisubrl
jmp
aam
jne
dec
in
dec
and
daa
test
pop
pop
scas
inc
adc
ffreep
cwtl
imul
push
pop
sti
push
mov
ret
aad
aam
and
add
xchg
xchg
jmp
mul
cmpsl
mov
repz
mov
fs
int
xchg
ja
repz
mov
add
jmp
test
rorl
aad
outsl
stos
adc
test
cmp
arpl
fwait
test
lds
int
pop
lods
xor
and
push
pop
arpl
lret
jecxz
and
out
andb
mov
dec
pushf
iret
repnz
xorl
mov
jge
jmp
mov
cmc
out
add
mov
dec
imul
mov
fbstp
inc
lods
out
movsl
dec
shll
pop
in
jne
popf
jmp
or
cmc
imul
xlat
cltd
pop
xchg
rcll
mov
pop
push
sub
and
stos
insl
pop
cli
neg
xchg
mov
call
inc
jl
cmc
outsl
out
fistpl
in
fldcw
jmp
out
mov
cmp
xchg
out
movsl
pop
not
sbb
sbb
imul
gs
dec
fldenv
ret
test
and
leave
mov
pushf
xor
call
xchg
xchg
sub
js
jmp
aad
xchg
pop
lahf
mov
ss
fsts
mov
bound
insl
mov
add
loope
fldt
fstpl
lods
popa
dec
dec
movl
out
adc
sub
inc
mov
lahf
mov
popa
mov
or
shll
aad
fucomi
cmc
lods
out
imul
in
int3
cwtl
add
movsl
cmpsl
fucomi
repz
nop
fnstenv
sub
fwait
cmc
adcl
cmp
add
loope
xchg
cmpsl
subb
adc
or
mov
aad
lcall
sub
leave
out
arpl
roll
popa
iret
lea
pop
xchg
popf
cmp
jecxz
in
adc
lock
pusha
testl
jo
and
jmp
clc
cmpsl
add
xlat
leave
fwait
in
gs
enter
jo
addr16
mov
cltd
out
iret
sbb
dec
ljmp
ja
adc
enter
lahf
int3
pop
adcb
ja
inc
mov
outsl
mov
aas
mov
pop
ja
fwait
lods
push
loope
fcomi
cwtl
out
push
add
mov
ja
mov
jmp
pushf
and
add
loope
xchg
xor
andl
pop
lret
imul
fbstp
jg
xchg
ss
fwait
out
out
in
cmpsb
vcvttpd2dqy
test
scas
ret
popf
mov
add
test
jne
jmp
addr16
lds
add
in
xchg
lret
adc
add
test
cmp
stos
xchg
gs
pop
cmpsl
adc
sbb
test
fcomip
inc
aas
loopne
scas
pop
es
frstor
jne
jne
js
cltd
xorl
inc
negb
cmp
mov
popa
loope
je
mov
pop
and
mov
xchg
jae
and
inc
into
dec
filds
and
push
adc
sbb
shl
sub
push
adc
mov
xchg
mov
jmp
pop
loopne
cltd
mov
in
jne
inc
in
in
pop
pop
fwait
arpl
in
outsl
mov
negl
pop
gs
xlat
fnsave
sub
iret
mov
imul
cmc
sbb
sbb
gs
xchg
fbstp
arpl
mov
les
push
and
shrl
mov
test
or
sub
mov
mov
dec
inc
sbb
outsl
fwait
aam
mov
fisttpll
popf
daa
movsl
dec
add
cmc
xor
sbb
repnz
imul
xlat
mov
jp
rclb
movsb
sbb
in
mov
insl
dec
inc
iret
lret
ja
repz
mov
add
sub
pop
aaa
leave
push
xchg
ja
xchg
ret
push
loope
xchg
mov
emms
std
jmp
xchg
loopne
test
imul
or
jmp
movsl
cwtl
fwait
lret
mov
pop
fsubr
mov
lods
repnz
addr16
jne
mov
fcoml
mov
mov
xor
addl
lods
loope
fidivrs
mov
push
and
mov
xchg
out
rol
test
test
shll
lahf
popa
sub
sbb
fstpl
jecxz
and
ja,pt
rclb
mov
mov
xor
push
test
mov
mov
insl
sub
enter
or
push
cltd
lods
scas
fistpl
jnp
pop
ss
push
iret
je
shrl
jbe
xlat
lds
inc
fisttpll
in
fcomps
aad
lret
jmp
xchg
add
hlt
mov
out
outsl
pop
mov
pop
fwait
lahf
shll
adc
mov
lret
xchg
xchg
cs
sbb
jp
leave
mov
push
fldcw
shll
test
out
jnp
sbb
sub
xchg
and
aas
sti
stos
test
lcall
xchg
shll
inc
out
inc
cmp
lock
cltd
std
div
xchg
arpl
fcmovnb
outsl
test
loope
sbb
pusha
cltd
test
and
add
sub
jecxz
cmpb
cmc
outsl
lods
dec
arpl
or
fnsave
pop
pop
test
out
mov
cmp
imul
mov
out
and
xchg
mov
sbb
test
fcmovnbe
stos
rcrb
ret
leave
test
cmp
or
mov
repz
jl
cmp
insl
stos
push
imul
xchg
cmc
jo
repz
mov
in
cwtl
xor
add
in
cmpl
jmp
loope
push
jne
notb
xchg
sub
push
pop
imul
xchg
cwtl
pop
xlat
lahf
push
push
cmp
filds
push
ret
or
roll
lods
in
dec
xchg
in
subb
mov
and
lahf
shll
negl
xor
sub
mov
stc
les
in
cmpsl
fstpt
aas
loope
pop
jne
int
rorl
add
mov
fisttpll
aad
sub
addr16
out
loope
sbb
inc
sbb
outsl
rcrb
aas
movsl
int
jo
and
movsb
subb
popa
repnz
jecxz
shll
mov
daa
outsl
jle
fiadds
fbld
dec
fbld
mov
push
and
aam
jg
in
lahf
test
sbbb
or
outsl
cmc
mov
xchg
test
imul
dec
jmp
xor
lds
mov
push
pop
lds
mov
out
cltd
addl
xor
mov
xchg
scas
int3
add
xlat
jmp
iret
ja
mov
into
cwtl
mov
adc
fstp
shrl
mov
inc
xchg
jns
mov
ffree
loop
lea
xchg
addr16
js
aad
sub
lret
inc
pop
pop
xor
and
mov
cmp
iret
cltd
adc
movsb
pop
jo
in
imul
push
pop
cmp
sbbb
cmp
cmc
sub
dec
repz
or
xchg
cmp
inc
add
mov
into
rcrl
in
gs
scas
call
js
add
enter
addr16
addr16
dec
iret
rol
outsl
in
lock
pop
jmp
scas
sub
gs
and
adc
lods
in
xchg
mov
leave
sbb
xchg
lea
adc
repz
pop
push
movsw
dec
fxch
cwtl
and
pop
jae
repz
lret
test
js
popf
xchg
orl
iret
mov
dec
loope
sarb
jmp
ja
ljmp
iret
out
fisttpl
dec
fs
sbb
xchg
leave
stos
mov
out
lret
adc
xlat
repz
stos
insb
sub
in
shll
mov
imul
cmp
cmc
int
xor
mov
or
in
loope
ja
mov
fbstp
shrl
idiv
insl
in
xlat
js
andl
jmp
xchg
or
mov
xchg
adc
sbb
repnz
mov
lods
testl
ret
add
mov
cmpsl
rcr
out
mov
add
cltd
cmp
lds
inc
add
jge
or
sbb
add
mov
idiv
xchg
inc
fcoms
push
mov
fmull
scas
lahf
imul
imul
mov
inc
mov
push
mov
in
and
mov
lds
cltd
repz
aaa
ret
call
and
mov
out
out
addr16
fwait
scas
dec
mov
inc
sub
pop
jne
xchg
call
xor
imul
adc
or
fildl
popa
sub
scas
pop
cmc
iret
mov
mov
andl
lahf
scas
xchg
cmpsb
lea
test
mov
pop
jno
iret
int
imul
lret
adc
daa
jae
jg
add
adc
mov
outsb
cmp
jmp
cmpsl
ljmp
imull
mov
mov
push
lcall
xchg
test
push
add
adc
mov
stos
popf
orl
in
jmp
inc
test
shr
sub
sub
test
jecxz
xor
arpl
int
adc
sub
cli
cwtl
jg
and
shll
pop
sti
ret
dec
add
mov
xor
lds
cwtl
add
pop
jecxz
arpl
pop
in
xchg
mov
ljmp
imul
adc
test
add
out
ret
jnp
repz
popf
pop
leave
test
xchg
lods
mov
lahf
popa
test
xlat
shll
sbb
sti
or
sbb
mov
inc
and
mov
test
xlat
je
addl
mov
lahf
jecxz
mov
mov
jns
fistl
jge
imul
adc
pushl
push
fwait
sbb
loop
inc
cmp
std
mov
pop
in
xor
test
xchg
inc
xchg
movsl
lds
fcmovnb
jae
incb
xchg
mov
in
jg
lods
pop
outsl
adc
push
out
pop
mov
push
mov
shrl
xchg
mov
gs
dec
jnp
cmc
pop
mov
mov
adc
push
jns
add
enter
es
mov
sub
outsl
fildl
js
push
in
rol
pop
loope
cmc
out
out
xchg
gs
fimull
or
pop
pop
shrb
jecxz
loopne
scas
imul
mov
test
ret
fnstsw
pop
in
mov
movsl
roll
xchg
ja
popf
test
fwait
xchg
adc
pop
dec
xor
dec
test
and
aas
lock
push
dec
cmpl
loope
ret
jecxz
xchg
cwtl
mov
sub
and
dec
add
xchg
mov
stc
lahf
xlat
int
addr16
jmp
jecxz
pop
mov
mov
ja
xchg
nop
int3
movsl
dec
nop
out
mov
aad
scas
dec
fists
mov
insl
mov
fwait
pop
daa
mov
fstpl
in
push
cmp
out
movsl
lret
mov
call
lods
std
test
push
cli
cmp
out
call
jg
nop
cmpsl
lods
mov
loope
adc
arpl
aad
aas
jmp
adc
negl
rorl
fsub
fldt
jne
pushf
in
in
jmp
fisttpl
enter
lahf
cmc
sub
into
pop
pop
push
mov
mov
pusha
jb
xchg
cmp
scas
shll
pop
sub
adc
sbb
popa
ret
mov
pop
mov
stc
sub
jae
outsl
xchg
imul
pop
lea
aad
lods
in
test
push
lods
push
js
add
mov
push
faddl
lret
aam
lods
inc
das
cmpsl
push
jne
fistl
or
lahf
rcrl
insl
loope
lods
jae
test
mov
xlat
add
sbb
in
pop
scas
mov
in
jmp
sbb
fwait
gs
dec
aad
xchg
mov
ja
test
add
iret
andb
adc
ds
and
add
ja
pop
scas
mov
std
cld
jle
pop
mov
movl
xchg
mov
pop
cmp
int
jmp
js
lahf
sbbl
or
cmpsb
and
add
addl
xchg
arpl
aad
in
inc
stc
repz
push
cwtl
fistpll
fld
das
int
add
jecxz
shll
mov
sti
dec
jb
sub
mov
mov
clc
sub
sub
sbb
insl
iret
shlb
ja
xchg
jle
adc
aad
out
xchg
adc
or
arpl
lods
test
movsb
shll
outsl
add
test
call
sub
cwtl
dec
xchg
lcall
mov
addr16
out
leave
add
shl
cmp
jmp
dec
insl
cmp
lret
or
push
xchg
fdivs
test
dec
and
push
lahf
fstpt
fwait
test
popf
cmp
lds
xchg
or
adc
xor
cmc
add
and
adc
int
movsl
push
inc
add
cmc
outsl
sub
cltd
pop
jecxz
mov
imul
negl
cmp
xchg
lahf
clc
sbb
jmp
pop
dec
loope
mov
leave
mov
dec
cwtl
and
jne
imul
push
adc
push
lds
ja
movsb
dec
and
ud0
ret
mov
adcb
and
cmp
push
arpl
ljmp
lahf
lds
subb
xchg
ja
loope
mov
lret
cmc
pop
cltd
and
leave
sarl
mov
aad
jmp
in
in
shrl
lods
xchg
cwtl
loope
movsl
or
sbb
out
repz
divl
lret
sbb
out
mov
imul
cli
popa
xor
xchg
inc
test
lret
jmp
pop
imul
mov
xchg
xor
fwait
stos
or
out
and
scas
pop
in
int
sbb
loope
lahf
out
add
test
jge
insl
mov
sti
out
and
popf
or
jmp
cmc
out
mov
call
push
arpl
loope
shll
outsl
push
addl
in
insl
lahf
inc
jne
inc
cmc
out
sbb
jl
adcl
ja
add
add
jb
addr16
test
daa
xchg
cld
nop
add
sbb
adc
adc
sbb
pushf
iret
mov
dec
addps
xchg
xchg
pushf
add
movsl
scas
int
popf
or
shr
mov
shrl
xchg
jne
pop
jbe
iret
in
out
adcl
dec
cmp
rolb
lcall
bound
popa
int
sbb
sbb
hlt
fildll
imul
stos
xchg
cmpsl
arpl
pxor
loope
push
lods
mov
dec
ja
pop
popf
ret
ja
movsl
rol
inc
jle
sbb
into
in
les
fisttpl
jecxz
pop
mov
rcl
xchg
gs
sti
ja
jp
adc
shrl
cwtl
ret
jno
or
gs
pop
mov
das
or
lds
movsl
and
dec
xlat
jne
mov
dec
and
xchg
outsl
ret
xchg
sub
add
push
fistpll
mov
ret
insl
adc
mov
adc
sub
pop
cltd
gs
roll
lea
call
jecxz
jne
ffree
pop
mov
jae
xchg
pop
lds
dec
pop
fwait
loope
ret
pop
repz
fistps
pop
adc
mov
scas
call
dec
movsl
adc
fists
jns
notb
aam
mov
repz
cli
stc
or
push
imull
into
cmpsl
dec
jno
call
jmp
in
push
cwtl
mov
inc
push
in
dec
fwait
mov
leave
cwtl
mov
xor
mov
repz
repnz
adc
inc
sbb
mov
dec
dec
mov
ja
mov
sbb
imul
shll
int
jecxz
popf
scas
repz
outsl
fbld
fwait
out
and
fstpt
icebp
pop
lods
cmp
xor
rcrl
addr16
outsl
xlat
out
enter
in
xchg
fiadds
xchg
sbb
mov
jns
jo
xchg
pop
imul
lods
insl
int
rcr
jmp
lret
lea
jb
sbb
fnstenv
add
pop
aas
test
cmp
scas
cmc
lods
add
gs
and
sbbb
iret
outsl
leave
cwtl
cmp
lds
mov
dec
and
and
xchg
push
shl
aad
jne
fcmovnu
cltd
and
dec
in
mov
or
test
xor
inc
iret
adc
rcrl
or
gs
loopne
fsubrl
cltd
scas
rorl
test
out
dec
or
mov
aam
int3
adc
add
cld
cmp
push
cmc
popf
xlat
mov
rorl
shll
or
cmp
repz
addr16
jle
cmp
pop
out
mov
in
test
clc
lds
imul
mov
fldenv
or
cmp
scas
popf
aad
cmp
subl
jg
movsl
mov
lcall
aad
in
xlat
movsl
adc
popl
cwtl
addr16
mov
mov
jecxz
cs
push
or
cwtl
lret
jnp
mov
xchg
sbb
cltd
loope
add
cmpsb
xchg
jg
adc
ja
out
repnz
leave
cmpsb
xchg
out
fcmovne
cwtl
fldt
jl
loope
inc
fwait
and
pop
or
imul
cmc
sub
add
jmp
ret
jecxz
into
out
nop
lods
in
or
push
imul
outsl
pop
cmp
cmc
xor
rorl
mov
repz
ss
lea
cltd
andl
inc
psrlq
fnsave
nop
jmp
xchg
push
add
jns
and
stos
mov
sub
orb
xlat
adc
inc
out
aas
repz
xor
int
cmpsl
outsl
sbb
jge
leave
lahf
xchg
call
test
ret
fnstcw
pop
mov
jb
cmpsl
xchg
pusha
ret
pop
cmp
sbb
mov
pop
orl
les
cmc
pop
jecxz
mov
inc
xor
xor
adc
fstpl
sarl
pop
xchg
gs
outsl
and
jmp
or
repz
mov
in
divb
ret
lret
cld
xchg
dec
xchg
test
stos
mov
cmp
mov
push
decl
pop
cmp
or
pop
out
pop
cmp
in
push
movsl
dec
cmpsl
imul
add
pop
gs
sahf
fsubrs
stc
inc
or
pop
or
cltd
xlat
rcrb
add
mov
pop
ja
nop
movsl
dec
andl
pop
mov
neg
cld
ret
mov
adc
jge
jmp
arpl
pop
pop
mov
aas
jge
and
lds
mov
scas
fldt
or
mov
dec
gs
and
out
neg
clc
imul
popf
cmc
or
xor
arpl
and
adc
add
movsl
fwait
je
or
addl
roll
mov
int
mov
mov
addl
mov
insl
mov
in
sub
popf
add
test
test
scas
pop
lahf
xor
dec
xchg
jmp
lahf
sbb
jmp
lods
mov
loope
or
int
shrb
xor
vpsrlw
cmp
cld
mov
in
scas
in
call
mov
sbb
mov
lea
sub
adc
sub
cmpsl
sub
adcl
pop
loopne
das
mov
pop
lahf
mov
stos
xor
testl
cmp
movsl
xchg
adc
sub
pop
mov
pop
subl
xchg
mov
pushl
jnp
pop
cmc
and
rolb
and
lret
sahf
cmc
xor
xor
out
dec
dec
cwtl
or
divl
lret
cs
in
cli
adc
aas
stos
mov
ja
test
mov
leave
mov
popa
lahf
aaa
adc
mov
shl
aad
mov
xchg
sbb
cs
cmpsl
add
imul
or
jne
jmp
movsl
adcl
push
ljmp
xchg
or
int
cwtl
stos
sbb
cmpsl
pop
mov
lret
ret
enter
push
fiaddl
xor
imul
popf
frstpm(287
movsl
shrl
adc
or
mov
out
mov
adc
pop
out
dec
add
sub
out
cmp
test
icebp
pop
fisttpll
xor
insl
hlt
repz
xchg
and
add
mov
jle
adc
out
adc
movsl
mov
ds
dec
in
arpl
sbb
push
ret
fiaddl
xlat
scas
arpl
xchg
iret
pop
or
sub
loope
ljmp
sub
filds
rcrl
mov
loop
mov
gs
icebp
cmp
dec
mov
mov
add
mov
jne
cmp
xchg
ret
iret
out
fldcw
pop
mov
jge
lahf
sbb
xchg
xor
inc
lea
add
sub
loope
lds
xchg
lea
and
jne
and
lods
arpl
loope
rorl
mov
je
cmpsl
test
inc
lods
jne
loope
lock
ret
lods
fnsave
clc
pop
outsl
xlat
test
mov
movsl
int3
cli
into
cmp
andl
jo
inc
push
pop
aas
xorb
jg
mov
filds
popf
and
mov
pop
sti
add
xchg
test
lret
sbb
lahf
cmp
iret
fdivl
and
pop
loope
jne
ret
pop
rcl
xor
mov
out
inc
xorl
add
in
mov
sbb
repz
in
imul
test
into
ret
decl
test
iret
push
shrl
in
ja
ja
leave
lods
sub
out
mov
rcrl
dec
fcomp
fnstsw
jmp
stc
lds
sub
ja
cwtl
iret
adcl
or
in
scas
pop
sarl
popf
out
out
inc
and
jg
mov
int3
mov
jecxz
xchg
mov
imul
addr16
lea
fstpt
out
int
jmp
stos
sbb
and
add
outsl
pushf
add
ror
test
xchg
lods
push
inc
jmp
jmp
jne
sub
xchg
mov
shrl
sahf
lds
test
lret
cwtl
add
push
mov
pop
out
or
in
orl
sub
lods
fistpl
iret
inc
cmp
loope
mov
daa
pop
jne
mov
xchg
stos
xor
loope
and
xchg
mov
pop
out
std
adc
push
sbb
mov
jecxz
push
cwtl
cmpsl
idiv
adcl
dec
fsts
inc
iret
cmp
xchg
sbb
lods
int
sbb
dec
scas
xchg
pop
push
dec
popl
add
jne
mov
and
loopne
loop
xchg
data16
sbbl
lock
and
or
cmc
xchg
add
insl
mov
mov
ret
mov
roll
add
repz
push
xor
sbb
dec
int
rorb
shll
pop
iret
xchg
cmpsl
lret
xchg
scas
gs
test
cmp
adcl
adcl
push
clc
cmp
ret
jmp
outsl
ljmp
andb
stos
clc
arpl
jecxz
lods
lahf
aam
lock
xor
lret
mov
dec
int3
add
xchg
add
iret
lahf
jne
test
enter
pop
push
addl
sti
cmp
mov
add
test
out
or
or
shll
in
pop
insl
jmp
lahf
addr16
pop
xchg
js
movsl
inc
adc
insb
push
int
push
or
neg
xchg
fldz
mov
jnp
mov
in
popf
in
andl
add
mov
mov
lods
xchg
mov
ret
cmp
fsts
gs
jcxz
aad
les
clc
jle
ja
cltd
ret
lahf
icebp
sbb
jecxz
bound
icebp
insb
andl
insl
inc
repz
cs
stos
push
mov
lret
ja
cltd
leave
mov
mov
jmp
and
popf
mov
xor
out
mov
stos
les
ret
xchg
leave
dec
movsl
sbb
call
in
test
xor
xchg
popa
fucom
lea
jecxz
mov
push
in
dec
loope
and
out
leave
cmp
xchg
popf
iret
ret
gs
bnd
loopne
and
adc
insl
movsb
out
mov
sbb
jg
cmc
xchg
out
imull
cs
mov
cld
fwait
addl
idivb
jne
repnz
in
xchg
clc
mov
rcll
arpl
pop
jecxz
jmp
fnstsw
sar
repz
repz
pop
imul
xchg
cmc
mov
sbb
movsl
pop
adc
xlat
mov
les
cmovno
in
orb
pop
iret
fwait
je
decl
aas
fcomi
mul
jmp
jle
push
mov
sbb
into
mov
inc
mov
sub
xchg
gs
mov
imul
add
and
lock
mov
xor
add
jecxz
xlat
ret
push
pop
adc
out
xchg
imul
jae
mov
xchg
scas
fdivrs
push
sbb
in
push
popf
cmp
shrl
out
shll
jecxz
neg
scas
lds
enter
jle
cld
sti
and
push
inc
jae
mov
sbb
jne
aam
lea
loope
cltd
flds
aas
jmp
cmp
sahf
addps
xlat
push
test
mov
lds
fildl
int
not
jns
mov
notb
fdivrs
test
movsl
push
xchg
ror
xor
mov
lods
negl
jg
aad
pop
cmpsl
out
jmp
data16
int
cmp
cmp
lea
xchg
iret
leave
sarb
inc
mov
lcall
sbb
popa
inc
out
jecxz
lds
adc
xchg
mov
iret
bnd
add
scas
test
in
push
repz
popf
inc
outsl
inc
das
cltd
xchg
add
ja
cwtl
in
fcoml
mov
fwait
inc
negb
mov
push
push
adc
xchg
add
adc
inc
cmp
dec
mov
jnp
aam
int
sub
ret
mov
or
mov
leave
out
or
jg
xchg
push
lahf
frstor
lods
lds
xor
ret
and
and
test
aad
xchg
repz
sbbl
popf
cltd
lods
in
nop
jecxz
cltd
in
cmp
filds
movlps
cmp
mov
xchg
leave
jge
sub
adc
cltd
or
inc
dec
out
add
jmp
stos
or
popf
bswap
lahf
fwait
or
dec
mov
sbb
leave
fimuls
test
add
add
orl
mov
push
cmp
iret
movsl
repz
ja
dec
aad
xor
mov
shll
mov
call
cmc
mov
xchg
loope
das
imul
inc
push
xchg
repz
jne
or
dec
into
mov
cwtl
pop
jecxz
stos
in
mov
push
jo
mov
je
ficomps
pop
std
lahf
loope
jne
mov
cltd
sub
inc
jbe
mov
int
ja
fsts
sbb
mov
scas
push
mov
imul
xor
lds
mov
xchg
in
out
pop
popa
shrb
in
pop
sti
xchg
iret
fadds
inc
adc
sarb
insl
jno
xchg
push
mov
mov
and
dec
add
inc
vmovaps
or
fstl
loope
jmp
negl
pop
repz
pop
mov
ljmp
loopne
loopne
sbb
out
xchg
js
test
emms
ret
cmpsl
dec
ds
iret
jl
fucomip
cs
pop
cld
sbb
jecxz
and
rcrl
repz
cmp
lds
xchg
push
adc
test
arpl
add
in
mov
gs
pusha
or
arpl
test
fwait
sbb
cs
pushf
fdivs
xor
jne
xorl
enter
jo
sub
cmpsl
or
shll
xchg
mov
sbb
das
repz
lahf
out
mov
andl
test
imul
xchg
xchg
xchg
scas
test
fwait
cld
rcrb
btr
leave
subb
push
mov
sahf
cltd
inc
add
addb
stos
rolb
gs
faddl
jae
adc
sbbl
cmp
lods
mov
mov
ds
in
add
scas
xchg
gs
sub
mov
lret
mov
push
scas
fwait
dec
outsl
nop
cmp
or
cltd
push
jns
pop
stos
add
imull
call
enter
scas
cwtl
sub
push
imul
mov
mov
mov
cli
mov
popf
cmpsl
xchg
test
inc
fsubrp
mov
and
in
imul
mov
stos
add
push
cld
faddl
test
cmp
xchg
cmpsl
add
outsb
jmp
add
out
outsl
inc
push
test
stos
aas
cltd
loope
add
sub
mov
or
xchg
xchg
mov
ljmp
adc
ret
imul
sub
iret
sub
xor
cwtl
add
ss
imul
cld
fistpll
mov
xchg
cwtl
mov
xor
cmpsl
push
lock
js
fwait
jne
rorl
scas
inc
or
mull
mov
cltd
mov
inc
out
test
pop
outsl
mov
xlat
gs
decb
push
fcompl
sbbl
loope
jae
sti
iret
inc
aam
das
lahf
inc
pop
fwait
push
xchg
rcrl
in
and
xchg
jg
xchg
sbb
sti
sub
out
ljmp
scas
hlt
aad
outsl
or
roll
test
xchg
fisubs
adc
popa
jmp
int3
jae
cmpsl
fnstenv
push
test
inc
and
in
insl
notl
push
ja
test
jge
jne
imul
sub
pop
mov
xchg
jmp
dec
scas
test
push
push
push
add
lods
mov
push
rol
iret
lds
xchg
fildll
jns
out
inc
rcll
inc
data16
mov
sbb
shlb
in
popf
push
jne
loopne
jg
xchg
jp
and
test
aad
or
dec
repz
fdivrs
cwtl
xchg
mov
push
dec
sub
outsl
out
and
pop
fnstenv
gs
xor
leave
xchg
arpl
lods
stos
fildll
mov
fstpl
sbb
je
cld
out
rcll
insl
imull
repnz
test
cmc
fcompl
xchg
jbe
mov
xchg
call
mov
sbb
mov
and
pop
push
pop
daa
lock
ret
out
mov
ret
or
or
xchg
sbb
pop
lret
inc
movsl
out
fwait
ret
xchg
adc
mov
xchg
push
in
lea
loope
cmc
push
cld
xchg
sub
in
popa
aas
in
jecxz
mov
lods
push
mov
or
mov
xchg
call
mov
cmpsl
jecxz
mov
xchg
fildl
cwtl
xchg
imul
fcmovnu
lret
mov
sub
idiv
mov
inc
lcall
lahf
sub
enter
outsl
jmp
add
sub
hlt
add
add
cmc
lret
xchg
loope
enter
mov
movsl
rcr
pop
jns
andl
jo
push
sahf
das
inc
and
insl
popf
lret
int
loopne
jae
out
cmp
mov
repz
cmp
lahf
cmc
jb
insl
andl
xchg
jne
scas
addr16
push
mov
imul
ja
xlat
insb
xchg
xor
sbb
jnp
int
mov
mov
in
test
jle
pop
or
push
xchg
ffree
xchg
outsl
push
packsswb
cwtl
movsb
gs
jecxz
dec
adc
cwtl
fstps
pop
pushf
mov
cltd
ds
inc
gs
lahf
adc
imul
test
and
mov
adc
repz
mov
cmp
lds
mov
mov
popf
ret
pop
cld
fdiv
hlt
out
dec
xor
shrl
push
out
pop
outsl
dec
je
jmp
push
mov
cwtl
mov
push
add
test
cmp
jo
aaa
fs
outsl
movsl
test
adc
mov
mul
dec
in
adc
adc
or
cli
cmp
fldenv
lods
inc
mov
out
mov
inc
dec
in
and
mov
aas
fwait
cwtl
enter
loope
shll
jmp
push
in
arpl
into
mov
jp
inc
jmp
lds
adc
ret
pop
leave
xchg
lahf
mov
mov
mov
pop
or
test
int
inc
std
jmp
xchg
jno
or
in
ret
gs
mov
add
mov
imul
lods
mov
sub
dec
in
push
rcr
mov
xchg
iret
xlat
out
test
lcall
je
andb
outsl
push
lea
pop
push
nop
fsubrs
ja
fwait
repz
xchg
xchg
dec
ds
pop
aad
in
jb
nop
sbb
mov
adc
xchg
xchg
outsl
cwtl
in
lahf
mov
std
addr16
add
sbb
lcall
scas
lock
andb
jbe
and
jnp
cmc
testl
gs
xchg
cwtl
mov
shll
and
daa
push
jbe
gs
stc
insb
sbb
scas
or
cmc
jne
add
pop
das
or
test
stos
mov
test
test
ljmp
add
push
test
aas
lret
lods
outsl
aaa
ret
lret
sub
test
loop
in
outsl
push
fstps
shr
push
or
and
xchg
lea
cmc
test
lods
jl
ret
imul
xlat
std
int
std
cld
scas
cmp
xor
adc
jge
add
jecxz
adc
push
in
mov
imul
in
or
arpl
addr16
xchg
scas
inc
rol
stc
aad
inc
cs
mov
out
inc
mov
push
xchg
jae
push
add
cmp
xorl
sbb
cmp
xchg
cmpsl
xchg
andl
addr16
shrl
add
lea
lret
xchg
lahf
imul
jg
and
imul
pop
cmpsl
stos
dec
add
sub
test
jnp
jmp
pop
ret
lahf
lods
je
lods
loope
stos
inc
sub
cmp
sub
jne
xchg
pop
imul
add
add
addr16
push
addl
lahf
imul
jecxz
push
loope
out
inc
movl
into
jae
imul
hlt
add
push
mov
xchg
mov
bound
les
jp
sbb
jmp
in
pop
xchg
mov
out
cmp
loope
jo
sbb
ja
pmulhuw
adc
cmpsl
xor
rcrl
push
das
out
xchg
push
fmuls
ja
cltd
pushf
sbb
insl
mov
pop
jmp
test
adc
dec
popf
or
scas
mov
add
leave
xchg
cmpl
fwait
mov
xchg
mov
xchg
call
aad
ret
imul
jecxz
gs
in
pop
xor
xlat
push
addr16
loope
cmp
jne
and
lahf
xchg
movsl
fucomi
cwtl
insl
xlat
xor
fs
int
xchg
popa
xchg
jne
fistpll
out
xchg
loope
scas
pop
or
test
push
add
in
sub
pop
sub
fsub
mov
out
xchg
fabs
dec
in
mov
push
jns
xchg
adc
out
and
cmpsl
scas
ljmp
leave
outsl
imul
sbb
and
or
fwait
adc
jb
mov
popa
sbb
popf
cmpsb
xor
addr16
stc
sbb
sub
imul
testl
arpl
lahf
out
mov
mov
mov
adc
stos
jg
fstps
fsubl
or
ret
xor
mov
jecxz
push
leave
test
ja
movsl
insb
fisttpl
or
jl
fwait
popa
jmp
push
aad
cmpsl
imul
sbb
ljmp
jmp
gs
cmc
mov
in
xor
xchg
mov
aad
ret
test
in
loop
out
shr
dec
in
cmp
in
or
lock
mov
scas
imul
fld
jnp
jae
cli
pop
fwait
mov
outsl
popa
ja
xlat
lahf
arpl
aad
test
cmpsl
pop
sbb
inc
jo
repz
mull
shll
pop
js
cmpsl
xchg
out
jmp
clc
dec
sbb
push
jne
test
lods
sub
sbb
pop
aas
jae
pop
insl
repz
loope
sbbl
and
in
idivl
xor
adc
mov
add
fucom
fcmovnu
sub
jo
pop
test
sbb
arpl
loope
cmpsl
jmp
fchs
jmp
popa
int3
ja
rcll
and
or
xchg
cmp
cmp
test
push
push
ret
cmp
out
cmpsl
sub
js
lret
in
push
adc
fucomi
repz
arpl
dec
clc
test
leave
cmpsl
inc
xchg
or
xchg
push
test
pop
and
stos
pop
dec
sub
jne
rcr
xchg
sub
in
test
cmpsl
lret
xchg
fiadds
dec
out
fucom
int3
in
arpl
dec
test
push
push
loopne
xchg
imul
sub
and
addr16
fwait
pop
lcall
adc
cmpsl
push
or
testl
lahf
imul
push
test
loop
testl
xchg
push
popa
sbb
sbb
cmp
xchg
lret
push
lahf
in
into
fdiv
lahf
jecxz
jno
cmp
mov
mov
imul
adc
jbe
ret
xchg
mov
xchg
add
lea
xchg
dec
iret
scas
repz
mov
jmp
shlb
or
pop
jmp
imul
mov
pop
aad
dec
shll
daa
jns
lret
add
popf
jne
xchg
mov
dec
jne
outsb
jno
dec
outsl
adc
loopne
popf
leave
movsl
cmc
in
pop
mov
add
xchg
scas
ret
or
mov
lods
lret
xchg
shl
rep
dec
loope
jae
andl
xchg
stc
stos
ljmp
mov
push
add
aad
ret
in
xchg
and
mov
cwtl
pop
jmp
push
out
test
in
mov
fcmovnb
loope
cwtl
mov
inc
inc
lahf
adc
pop
fbld
ret
sbb
out
iret
rorl
push
ret
cwtl
cs
aam
dec
xchg
mov
aas
enter
cltd
jl
adc
jne
or
pushf
ret
add
shll
mov
mov
inc
lahf
int
lahf
xchg
setg
cltd
xchg
in
cmc
jno
sbb
fmull
sarb
sbb
xchg
add
imul
iret
mov
adc
cwtl
pop
flds
fistpl
xchg
pop
cmpsb
fistl
jmp
jmp
mov
jne
fstl
push
push
jmp
aad
gs
cltd
sub
sbb
add
test
jne
aam
pop
mov
adc
into
cltd
mov
out
ret
xchg
mov
imul
rcrl
sub
pop
xor
cmc
mov
lret
jmp
mov
lahf
movsb
push
ret
sub
cwtl
lods
ror
popa
and
lret
cmp
xlat
dec
and
adc
xor
adcl
out
sbb
mov
lea
lds
scas
jp
or
dec
mov
dec
fnsave
adc
xchg
cmp
push
push
xlat
out
pop
inc
inc
int
mov
out
ret
cwtl
mov
pop
inc
adc
sbb
rcr
mov
mov
fndisi(8087
xchg
popf
lahf
and
int
stc
jbe
xchg
movd
cmc
cmpsl
mov
lcall
mov
lret
cmpsl
dec
xlat
sub
cmpsl
push
imul
out
aaa
push
xor
mov
roll
mov
jae
mov
daa
inc
mov
int
fisttps
lea
mov
jne
jno
mov
or
fildll
push
filds
loopne
roll
pusha
repz
mov
pop
int
lds
out
push
fistps
and
gs
pop
movsl
xchg
add
in
dec
or
xorl
ljmp
jns
mov
outsb
mov
cmpsl
cmp
ja
loope
lea
cwtl
in
or
mov
iret
push
imul
push
push
aas
fistpll
popa
xchg
or
jl
pushl
push
pop
in
cli
mov
cmpl
das
xchg
call
in
mov
cmp
nop
iret
fldt
or
jmp
pop
mov
out
xchg
enter
fst
incl
sub
mov
xor
jmp
data16
adc
xchg
sub
rorl
stos
arpl
push
cmpsl
mov
cmp
test
insl
sbb
aad
call
in
lahf
mov
test
imul
xchg
outsl
stos
cmp
iret
fsts
lds
lahf
imul
cld
mov
and
je
cmp
cltd
fbld
bound
and
rcrl
inc
cmpsb
jns
lea
pusha
inc
mov
cmc
cwtl
xchg
mov
push
inc
or
xlat
pop
aaa
out
out
movsl
cltd
xchg
add
adc
mov
adc
test
in
in
jmp
sub
cmp
cmc
cmc
adc
rorl
aad
inc
das
rcrl
xlat
mov
shrb
fisttpl
or
sub
fwait
in
mov
mov
roll
orl
scas
hlt
xchg
lea
sbb
mov
popa
xor
mov
rolb
xlat
lret
adcl
dec
lahf
sti
ret
push
sub
shll
inc
aaa
popf
mov
xchg
divl
imul
sti
mov
movsl
in
insl
roll
jmp
fwait
lea
ds
lds
inc
add
lahf
popf
lds
outsl
movsl
lahf
xchg
xorb
sbb
fldl
jmp
into
out
call
dec
arpl
mov
leave
in
mov
aad
inc
and
xlat
shll
jl
push
imul
arpl
xchg
rcll
ret
push
mov
data16
out
ja
sub
add
mov
shrl
movsl
lds
leave
jmp
cmpsl
cwtl
mov
dec
ljmp
adc
mov
loope
fcomi
pop
popa
lret
add
popf
mov
addr16
jnp
jmp
xchg
pop
adc
xchg
lea
test
repz
jns
rcrb
rorl
add
stos
ja
movsl
sbb
or
mov
movsl
loope
sbbb
add
mov
mov
fcomip
daa
jne
stos
repz
xor
fidivs
xlat
dec
adc
jb
cmc
xchg
pop
push
fisttps
push
test
mul
in
inc
xchg
xlat
and
loope
dec
jecxz
rcrl
mov
mov
ja
adc
sub
push
fildll
leave
repz
lds
test
push
mov
adc
push
jbe
mov
and
xlat
test
int
test
fildll
popf
out
scas
pop
xlat
xchg
in
dec
outsl
pop
mov
gs
iret
leave
cwtl
pxor
orl
int
add
cmp
test
ficompl
cmp
movsl
imul
pop
xchg
ret
mov
jge
int3
fldl
out
lods
lcall
mov
fwait
pop
mov
imul
cltd
daa
push
dec
mov
aas
in
sub
sub
inc
pop
popf
rclb
jg
push
jnp
dec
dec
movsl
aad
rolb
fbld
addr16
mov
mov
mov
cmp
mov
adcl
cmovl
cmpsl
rorb
outsl
xchg
mov
sbb
jns
ret
xchg
jecxz
cmpsb
cltd
mov
es
gs
mov
fwait
or
aas
negl
sub
in
in
mov
bnd
aas
mov
imul
sbb
pop
mov
jne
fnsave
lea
stos
pop
in
cwtl
jno
out
stos
mov
pop
test
xlat
push
ds
mov
mov
int
outsl
inc
mov
repz
jg
testl
aad
cmp
subl
pop
iret
test
cld
and
clc
xchg
test
jae
adc
add
push
addr16
sbbl
jae
nop
mov
fwait
aad
mov
xchg
movsl
sbb
lret
out
insl
ja
xor
sub
arpl
mov
std
andl
jmp
pusha
pop
out
lods
outsl
fstps
xchg
mov
int
sub
cmovb
jl
add
das
fwait
xchg
cmp
stos
insl
shr
xor
or
rcll
gs
test
in
test
inc
movsl
push
sub
mov
push
ret
imul
push
loope
daa
inc
cmp
xchg
mov
out
jae
cmp
dec
sbb
cmpsl
jecxz
in
lret
add
xchg
shrl
jmp
cs
cltd
in
into
ds
xchg
lea
sti
in
xchg
subl
cltd
jp
push
mov
mov
mov
jmp
sbb
jecxz
dec
mov
jne
mov
ja
scas
mov
int
insl
rcll
rcrl
xchg
dec
les
pop
out
xchg
ret
stos
add
test
sub
or
fsubrl
sbb
out
push
cmp
jmp
popa
xchg
icebp
cltd
adc
pop
leave
in
rolb
rol
jg
xchg
ja
int
movsl
xchg
in
stc
mov
iret
arpl
fwait
popf
imull
jne
out
inc
movsl
lods
jnp
fildll
adc
and
shrl
push
mov
sbb
out
in
push
out
mov
pop
pop
imul
mov
push
push
sub
shrl
sbb
add
mov
xchg
inc
adc
add
xor
and
pop
mov
gs
adcl
lret
flds
lds
lods
or
roll
xor
vpcomw
or
cltd
and
lea
sbb
call
push
pop
xlat
mov
call
cmpsl
cwtl
movsl
int
pop
mov
gs
outsl
mull
sub
dec
mov
push
movsb
pop
rcrl
loope
aad
lahf
bnd
outsl
cld
leave
mov
sbb
mov
fwait
xchg
popl
adc
adc
xchg
fxch
or
lds
insl
iret
in
test
iret
test
gs
outsb
cmp
iret
popa
mov
scas
addr16
jmp
out
repz
xchg
int
sub
stos
pop
add
jne
ja
fs
xchg
movsl
mov
pusha
jmp
pop
cmp
xlat
lods
jne
xchg
lret
jb
jmp
andl
and
test
add
repz
movsl
insl
add
xchg
fwait
inc
inc
lock
data16
xchg
imul
call
sbb
cltd
in
cmp
popa
scas
push
imul
xchg
pop
in
xchg
shr
movsl
cmc
lret
fsubrl
push
sbb
xchg
sbb
mov
fwait
or
mov
xor
test
inc
or
mov
xchg
repz
xor
pop
out
fcomps
xlat
mov
sub
in
mov
dec
fsubrs
inc
hlt
lds
pop
rorl
sbb
xchg
cmp
in
inc
orb
mov
adcb
pop
lahf
mov
mov
xchg
cmp
lods
mov
xchg
adc
push
push
test
call
jne
jp
cmpsl
test
ret
int
iret
cmp
dec
imull
pop
test
call
js
outsl
iret
jae
xchg
jge
xchg
pop
movsw
sbb
icebp
and
lret
mov
sbb
push
inc
fildl
mov
imul
fxch
shr
stos
adc
das
fldt
mov
lods
xchg
in
in
jae
loope
test
cmc
jne
mov
mov
fwait
fwait
adc
or
movsl
jne
fisttpl
scas
sub
xor
cltd
mov
imul
xlat
dec
mov
std
lock
and
cmp
iret
or
shll
bswap
fisttpl
je
or
cmp
sbb
rorl
aaa
popa
repz
push
sti
pop
loopne
int3
ljmp
cmp
mov
arpl
stos
loop
lods
sub
fstpl
subl
cltd
mov
add
fsts
mov
sub
ja
cmpsl
stos
and
cwtl
das
sub
fucomp
aas
imul
test
int
rcrb
xchg
push
sar
js
mov
push
adc
imul
roll
test
movzwl
mov
cmpsl
inc
xchg
push
and
das
leave
xchg
mov
xchg
cmp
mov
shll
cltd
iret
sbb
insl
lock
inc
aad
mov
push
xchg
in
jnp
and
gs
aas
cs
add
enter
dec
repz
mov
sub
mov
fstps
mov
cmp
ffreep
push
andl
jmp
push
fwait
lret
jns
rcll
insb
sbb
mov
adc
xchg
add
mov
sbb
movsl
dec
jmp
mov
lahf
test
dec
or
call
popf
cmp
enter
xlat
insl
mov
add
int
fisubl
xor
or
mov
xchg
test
cmc
arpl
and
lds
push
jmp
xchg
and
in
add
xchg
fwait
ret
mov
adc
pop
out
mov
in
repnz
rorb
inc
aad
xchg
out
int
test
addr16
repz
jecxz
scas
int
pusha
fidivl
pop
jmp
jge
in
popf
imull
add
mov
ja
iret
lds
xchg
addr16
rcrl
decb
add
in
popa
gs
sub
lds
sbb
fistl
inc
jae
jne
lds
jb
mov
lahf
in
add
push
mov
insl
stos
test
sub
js
cmc
leave
jecxz
jle
rcrb
xchg
and
out
fdivrs
arpl
lods
adc
push
inc
sbb
inc
cmp
notl
adc
push
xor
mov
repz
movsl
arpl
movzwl
out
mov
mov
scas
sbb
aas
pusha
outsb
cmp
or
in
popa
xlat
xorl
subl
xchg
scas
test
imul
imul
or
jb
mov
popa
mov
imul
popa
cbtw
movsl
ja
dec
rcrl
test
rorl
rclb
aam
fstl
push
in
cmpsl
subl
test
mov
inc
lds
add
lahf
push
jnp
cld
aaa
imul
aad
inc
cmpsl
pop
loope
xlat
lret
fstl
pop
jmp
pop
jae
ja
cmp
xchg
insl
pop
mov
shll
in
imull
fsubl
and
xchg
mov
jl
mov
insb
adc
mov
imul
js
pop
test
push
add
scas
pop
aam
mov
popa
cs
xchg
fwait
arpl
ret
pop
mov
cwtl
ljmp
imul
inc
int
fildl
roll
xchg
mov
dec
sub
addr16
mov
jg
pop
lea
cmc
test
repz
out
mov
call
sbb
ja
jecxz
fwait
cld
test
in
dec
xchg
mov
sub
cmc
stos
ja
cltd
hlt
int
jecxz
or
pop
scas
cmp
rcr
pop
in
popf
iret
add
sarl
loop
es
shll
cli
xchg
inc
xor
fists
or
rol
inc
popa
inc
ss
xchg
fwait
lods
lcall
mov
cmp
cld
pop
shrl
int
lds
mov
ret
add
test
mov
mov
andl
sub
notb
add
in
outsl
clc
pushf
jmp
mov
out
lret
negb
sub
shlb
lret
daa
test
sbb
push
test
pop
or
mov
rolb
xor
mov
lds
lahf
xchg
xlat
les
sbb
out
divl
imul
popa
inc
hlt
stos
jno
insl
pop
cltd
mov
aaa
jne
lods
mov
sub
in
mov
pop
xor
rclb
mov
mov
xchg
icebp
sti
lret
ja
pop
imul
outsl
xchg
sbb
shrl
les
pop
cmc
imul
loop
ret
mov
cltd
add
cmpsl
loopne
in
pop
in
xchg
push
mov
orb
inc
push
cltd
in
jge
sbb
xchg
jne
aas
loope
hlt
add
shll
cwtl
mov
enter
sub
bound
outsl
fisttpll
ja
in
orb
subl
and
shll
xor
mov
in
movsl
stos
loop
mov
nop
cmp
sti
dec
aaa
mov
sub
mov
fwait
mov
inc
mov
jg
in
imul
dec
inc
loop
lds
mov
fistpl
imul
test
or
cmp
je
fld1
mov
in
stos
dec
ja
jle
fidivl
daa
insb
push
mov
add
shrl
popf
dec
test
add
xchg
jmp
cmp
and
test
ffree
sti
popa
jne
xchg
repz
gs
xchg
add
fwait
mov
xchg
ror
cmpsl
enter
out
loope
popf
mov
fwait
jmp
cli
cmp
sbb
out
lahf
mov
pop
mov
insl
iret
leave
mov
fldl
dec
xchg
jge
aad
shlb
shlb
lret
test
popa
mov
mov
and
lahf
lahf
push
movsl
movsl
movups
in
adcl
imull
rcrl
sub
sub
orb
cmpsl
mov
or
fsubl
mov
sti
push
imul
scas
mov
in
or
neg
lret
fwait
outsl
jne
xlat
add
das
jp
repz
into
pop
cwtl
jp
inc
movsb
push
pop
inc
bound
in
push
das
leave
cmpxchg
mov
ret
pop
cmp
ficoml
adc
addb
fwait
lea
fnstcw
or
arpl
mov
shll
test
scas
mov
cmc
mov
lods
xchg
ja
jne
cmp
adc
fildl
aam
fisttpll
mov
cmp
shll
dec
repz
popa
iret
mov
in
adc
cltd
xchg
jmp
out
cmp
xchg
mov
ljmp
aad
sbb
sbb
scas
lea
pop
xchg
mov
or
vpaddsw
ds
add
lret
out
ret
push
add
scas
lds
sub
test
popf
cwtl
pop
fcomip
push
das
ret
jecxz
dec
dec
mov
xor
lock
and
in
test
sbb
xor
popf
in
pop
orl
stos
xchg
adc
jae
enter
sub
pop
pop
jne
popl
repz
mov
shl
fisttps
ret
pop
lea
testl
mul
and
scas
ret
das
sbb
pop
test
pop
push
mov
dec
in
xchg
in
xchg
aad
jecxz
cmp
mov
out
mov
rorl
jne
shll
sbb
outsl
mov
icebp
jmp
mov
insl
setae
pusha
mov
dec
xlat
iret
dec
stos
pop
or
push
repnz
call
and
cmp
imul
fistpll
nop
test
dec
cmc
lahf
loopne
xchg
sub
lods
sbb
jmp
cltd
cmp
adc
sbb
xor
xor
js
cwtl
push
sarl
sub
add
fstl
cmpsl
lods
aas
jmp
pop
popa
in
inc
mov
adc
in
shrl
ffreep
std
cmp
xchg
lock
or
gs
test
out
ret
lea
out
imul
mov
hlt
push
js
pop
scas
stos
in
call
mov
enter
mov
xchg
cmc
xchg
push
jecxz
lret
sarl
fcoml
arpl
loope
gs
popf
xor
ja
inc
call
test
enter
xchg
aas
lea
in
adc
sub
enter
pop
cltd
and
sbb
fcmove
or
movsl
xor
and
push
popf
jns
and
jmp
movsb
cmp
scas
add
jl
jno
test
in
mov
inc
mov
sub
cmp
call
enter
cmc
sbbl
pop
lcall
xor
xchg
jns
xchg
mov
cmpsl
mov
jb
and
xchg
aad
test
and
jb
les
adc
repz
fld
popa
aad
ds
sbb
aaa
mov
or
stos
mov
test
jg
stc
mov
imul
sbb
push
testb
sbbb
outsl
inc
pop
cmc
dec
cmpsl
mov
mov
in
movswl
dec
and
imul
push
ja
mov
shll
arpl
pop
insb
call
adc
insl
jmp
cli
lds
jmp
lds
inc
repz
and
enter
gs
cmp
setns
jne
lds
xchg
lods
cmpsb
mov
or
ret
and
and
mov
add
xlat
jmp
xorl
aad
xchg
ficompl
into
mov
cmc
mov
shll
cwtl
jne
outsl
xchg
enter
dec
aas
shll
cmp
mov
mov
push
leave
shr
mov
jnp
imul
mull
jg
dec
sarl
inc
push
repz
dec
scas
loope
dec
jne
fstps
lret
popa
mov
popf
test
gs
into
andl
xchg
jmp
scas
jecxz
sub
xor
push
xchg
sbb
inc
popa
cmc
lods
loope
repnz
xchg
jne
adc
fstenv
call
cmpsl
dec
sbb
mov
loope
rcrb
pop
int
rcrb
ffree
dec
cwtl
movsl
fmull
cmp
imulb
call
inc
mov
mov
mov
mov
add
ljmp
or
jae
lods
xlat
shll
pop
adc
daa
xchg
jnp
fists
pop
mov
pop
test
jecxz
in
loope
sub
imul
lds
insb
adc
xchg
ret
jmp
hlt
push
repnz
test
jo
aad
out
negb
jmp
test
sub
xchg
ja
cwtl
ljmp
lahf
test
and
and
dec
add
shll
rolb
out
jno
imul
cmp
lods
decl
add
sti
sbb
leave
loope
mov
gs
arpl
outsb
xor
ljmp
mov
cwtl
orl
imul
cmpb
mov
inc
in
sbb
add
adc
popf
das
push
dec
mov
cwtl
xchg
add
roll
push
jne
push
mov
shrl
cmp
jne
imul
dec
jmp
jno
iret
push
imul
ja
sbb
pusha
push
frstor
jg
xchg
mov
out
mov
pop
in
mov
sbb
rcl
inc
push
mov
subl
sub
imul
shlb
xor
inc
adc
dec
imull
imul
mov
push
or
add
fincstp
cmp
jmp
fstpt
push
xchg
in
stos
mov
dec
lahf
cmc
cmp
addr16
iret
xchg
fists
out
rclb
mov
fstp
sahf
add
scas
adc
lods
std
shrl
shll
mov
popf
jno
mov
adc
push
pushf
mov
out
xchg
lahf
bound
lahf
idivl
mov
das
in
inc
xchg
mov
pop
pop
sbb
mov
pop
sbb
xor
in
js
xchg
ret
jecxz
jmp
pop
mov
hlt
outsl
or
xchg
xor
push
jns
xchg
cmpsb
test
orl
out
jecxz
lods
mov
cld
shrl
stc
repz
insl
int
add
test
test
xchg
out
addr16
xor
fwait
in
inc
fs
mov
test
ljmp
testl
jae
aas
dec
mov
jnp
cwtl
inc
scas
lods
shll
push
sbb
dec
cwtl
jge
out
test
aas
cwtl
mov
int
arpl
or
imull
xchg
pop
rcr
scas
sarl
xchg
cwtl
inc
rolb
iret
popl
push
rcll
sbb
lret
jne
mov
out
ret
jmp
mov
iret
gs
mov
clc
mov
mov
arpl
pop
sti
int
jmp
js
xchg
enter
subb
aad
xchg
cmc
addl
nop
test
repz
xchg
fstpl
jne
xchg
fcomi
jecxz
cmp
and
sbb
in
icebp
xchg
ja
jg
insl
sbb
and
data16
push
in
cmpsl
insl
push
out
icebp
repz
cwtl
stc
xchg
lahf
lahf
mov
clc
loopne
imul
push
fistl
jbe
movsb
fisttpll
ja
mov
push
imul
lret
pop
lahf
popf
push
xchg
and
sub
in
idiv
test
gs
pop
out
addr16
mov
xor
fdivrs
pop
rcr
rcrb
jne
sti
xchg
mov
aaa
mov
rcrl
or
shll
scas
out
lds
aam
jl
jb
int
jns
mov
mov
mov
push
xor
push
stos
push
dec
fs
jle
cmc
inc
mov
mov
iret
ja
test
insl
xchg
repz
movsl
repz
pop
or
out
aas
cmpsl
xchg
mov
arpl
scas
mov
jmp
addr16
lods
in
test
pop
sbb
aad
push
mov
aaa
lahf
addr16
arpl
loope
push
scas
mov
mov
in
mov
mov
rep
push
jl
xchg
pop
out
and
loope
outsl
mov
adc
sbbb
jne
fildl
cwtl
jg
adcl
add
mov
sbb
sbb
adc
jecxz
repz
dec
test
adc
pop
ret
jecxz
mov
and
jbe
hlt
sar
lahf
movsb
das
iret
stos
popf
mov
jne
repz
mov
pop
in
ds
xlat
adc
dec
out
out
test
lods
lahf
fcmovnu
imul
cmpsl
les
sbb
andl
icebp
or
lret
test
aam
shll
or
add
fwait
xlat
shl
ret
or
lds
jne
fstl
ret
repz
xchg
mov
clc
cwtl
and
hlt
popa
push
sti
roll
dec
xchg
cmp
cltd
xchg
mov
lea
lahf
stos
adc
insl
adc
or
adc
jnp
xor
cmp
push
test
lods
enter
gs
jmp
xlat
cld
pop
add
enter
lahf
ret
jbe
or
xchg
nop
or
fdivrp
imul
std
xor
sub
sbb
add
test
cwtl
lahf
adc
cmc
in
lea
outsl
pop
xchg
repz
aad
out
or
or
push
pop
cltd
iret
cmp
not
je
cmp
adc
and
or
cmpsb
cwtl
fldl
stos
sub
mov
mov
sub
add
jmp
xchg
lds
cmp
cmp
push
popf
jmp
adc
loop
mov
ja
add
fldt
in
dec
mov
sub
cmp
jmp
xchg
sar
inc
xchg
int
jne
mov
aaa
leave
jmp
imul
xchg
roll
add
xlat
movsl
loope
cltd
xchg
mov
pop
jmp
push
dec
test
mov
sub
out
mov
mov
cwtl
mov
pop
jecxz
outsl
push
or
jp
dec
xchg
sarl
mov
rolb
dec
mov
movsl
rep
loop
xchg
jmp
lcall
cld
fildll
cmpsl
lds
int
mov
adc
xlat
cld
sbb
mov
sub
mov
cmc
mov
xorl
outsl
pop
sub
jl
cmpsl
mov
movntq
testl
mov
lahf
dec
ja
in
push
inc
out
out
add
imul
xchg
loopne
pop
jo
ror
ljmp
jb
repz
and
stos
out
sbb
lods
sub
push
sar
mov
xor
loop
addr16
jl
dec
in
dec
popa
iret
mov
test
aad
fstps
clc
dec
lea
xor
adc
mov
add
cmp
adc
mov
imul
mov
xor
xor
mov
xchg
popl
imul
sbb
lds
in
frstor
inc
sahf
test
jae
lahf
icebp
dec
test
sub
mov
cmpsl
jnp
outsl
cltd
xchg
insl
test
sbb
or
shll
fwait
jmp
or
test
jns
cwtl
jg
aas
jmp
test
out
fucomp
xchg
enter
mov
or
xchg
cwtl
fwait
cmp
mov
shl
lods
fpatan
loopne
ret
push
jmp
cmp
xlat
fiadds
mov
frstor
pop
gs
pop
mov
js
xchg
mov
inc
or
cmp
push
sub
popf
jmpw
cwtl
popf
xchg
inc
mov
lahf
stos
pop
and
jb
cmp
push
iret
pop
leave
xor
mov
outsl
lret
rorl
xlat
lods
sti
icebp
jne
clc
and
addr16
xor
xor
test
mov
push
add
in
out
lds
cmpsl
dec
shlb
rorb
jl
xchg
cmc
sbb
popf
imul
pop
mull
jno
fcmove
imul
loope
xchg
fwait
mov
mov
test
cwtl
xchg
iret
cli
xchg
mov
test
mov
sub
in
mov
in
movsl
mov
outsl
imul
test
inc
xchg
adc
push
sbb
repz
cld
push
and
cmpsl
sub
int
ljmp
mov
inc
imul
dec
call
popf
lahf
sbb
xchg
lahf
xchg
push
lahf
repnz
pop
rorl
adc
maskmovq
fwait
jb
call
in
jne
scas
je
scas
aam
mulb
lds
in
ja
xor
add
mov
mov
test
lahf
insl
mov
mov
and
add
sbb
mov
repz
popf
insb
repz
movsl
int
jmp
movsl
adc
adc
fldt
add
add
out
in
mov
out
imul
jge
je
cwtl
dec
popf
ds
pop
jmp
into
jmp
cmp
xlat
adc
out
mov
xchg
mov
aam
xorl
fmull
lcall
cmp
lahf
stos
adc
cld
push
sbb
je
add
and
jmp
shll
iret
cltd
ret
fstpl
push
sahf
repz
xchg
jl
and
push
outsb
divl
in
sbbl
fwait
xchg
in
mov
incb
mov
clc
dec
fcomi
cmp
mov
iret
fbld
leave
jo
xor
cwtl
and
or
out
lret
fst
push
or
loope
imul
pop
iret
test
lods
insl
loope
xchg
mov
or
dec
shll
fistpll
test
repz
mov
push
loop
lea
adc
xor
cwtl
cmp
jne
out
jmp
fwait
jb
test
scas
ret
and
int3
popa
test
cmpsl
xlat
mov
clc
mov
add
lods
mov
enter
mull
paddusb
mov
je
mov
addr16
mov
xor
test
aas
xor
stos
ret
leave
xchg
sub
add
mov
insl
xchg
into
stc
mov
pop
rcr
pop
sbbl
jmp
test
jecxz
pop
outsl
mov
adc
arpl
addl
pusha
jge
pop
loope
or
push
fstpt
mov
or
mov
idivl
and
xchg
xlat
enter
sbbl
cmp
roll
scas
int
ja
negl
lahf
mov
sub
mov
jl
push
mov
sub
add
mov
movsl
cmpsl
lahf
xchg
aad
dec
xor
psrlw
stos
push
test
roll
jo
mov
nop
movsl
shl
mov
insl
lea
gs
cmc
int
xchg
dec
scas
ret
dec
fcmove
dec
out
adc
cmp
mov
mov
cmpl
xchg
lds
jne
in
and
mov
pop
cmc
push
gs
push
xchg
fxtract
xchg
fistps
iret
outsl
popf
imul
sub
out
icebp
adc
popa
cmp
jne
mov
lds
lea
add
imul
ret
sbb
dec
mov
add
popf
in
in
es
aam
int
mov
arpl
fsub
push
pop
mov
test
shrl
icebp
ret
and
dec
ficoml
jnp
arpl
adc
cld
jno
test
flds
mov
loope
iret
xor
jne
mov
addl
sbbl
leave
ja
sub
cltd
and
aam
iret
push
xchg
xchg
sub
lods
sbb
add
rclb
xlat
rclb
lahf
vpunpckhbw
and
mov
cmp
ficomps
pop
shll
fucom
gs
or
shrl
ret
dec
test
fwait
int
or
mov
iret
mov
or
xchg
lahf
adc
fdiv
loop
cltd
stos
push
sub
add
push
jmp
ret
int3
push
in
call
mov
leave
cmpsl
andl
pop
popa
lods
or
test
mov
jne
loop
add
dec
xlat
out
or
lret
push
inc
in
cmpsl
stos
mov
imul
mov
adc
outsl
ja
mov
out
ss
and
subl
xorl
dec
test
xor
cmp
loope
mov
jecxz
out
imul
insb
movl
mov
leave
outsl
orl
pop
cmp
cmp
addl
leave
int
cli
cmpsl
jg
shll
mov
pop
lahf
popa
ret
mov
push
xchg
les
lret
mov
imul
mov
das
pop
and
xlat
push
jl
inc
inc
loope
andl
lea
out
movsl
cmp
sbbl
cld
jle
outsl
mov
cmp
repz
test
sbb
cmp
pop
por
test
mov
shl
gs
movsl
scas
fldcw
mov
lahf
aaa
aaa
aad
sub
cmpsl
mov
adc
sbb
mov
lea
loope
out
aad
mov
xor
orb
test
adc
cmp
lahf
imul
and
test
shll
sbb
dec
cmc
loopne
dec
pop
adc
lea
jmp
int
loope
aas
inc
xchg
imul
jl
jmp
shrl
repz
popf
push
xchg
xor
stos
inc
cwtl
sub
or
mov
in
popf
fcmovne
xlat
lahf
lret
test
jnp
lea
lahf
mov
cmpsl
popa
jmp
xchg
sub
xlat
roll
lds
arpl
leave
jmp
rep
push
or
xchg
ja
scas
aad
mov
mov
cmpsl
shll
xchg
das
xchg
bound
mov
ret
jecxz
jns
ja
fwait
add
cld
sbb
dec
out
or
and
xor
outsl
and
fldcw
mov
loope
imul
movsb
pop
sbb
leave
push
stos
lahf
push
jmp
pushf
clc
push
jne
mov
inc
adc
mov
lret
hlt
scas
lret
roll
addps
and
in
pop
jns
dec
clc
mov
sub
cmp
xchg
mov
scas
jne
mull
in
sub
xchg
xlat
pop
add
out
test
xchg
inc
push
test
jmp
add
sbb
jmp
stc
cltd
lahf
clc
jle
lock
rcl
cmp
mov
push
stc
sub
sbb
lret
lds
shll
fcmovu
jge
insl
fcmovnb
sqrtps
mov
int3
mov
dec
lds
mov
out
nop
das
jg
mov
dec
sub
pop
lret
ror
ja
roll
popf
adc
lcall
cmpsb
lds
cwtl
and
jne
xchg
stos
scas
ljmp
insl
pop
push
jae
mov
push
cmpsl
mov
das
setns
xor
xchg
imul
js
neg
mov
movsb
mov
rcr
xchg
leave
push
jnp
cwtl
lahf
out
cmpsl
xchg
mov
cmpsl
xchg
xchg
inc
mov
push
jmp
imul
test
sbb
out
ret
cmpsl
dec
cmp
imul
jmp
jg
pop
cmp
jmp
and
lahf
add
push
out
fwait
insl
inc
aad
cmp
mov
dec
outsl
sbb
cwtl
iret
repz
lahf
lea
stc
lock
cwtl
lds
sbb
inc
fcmovnbe
stos
sbb
lea
jge
addr16
xchg
call
jne
jmp
stos
call
sbb
outsl
sub
and
inc
add
xchg
inc
xlat
mov
cwtl
mov
fcomi
imul
jl
mov
jne
loopne
jae
ret
cmp
imul
xchg
cld
arpl
in
adc
adc
flds
mov
xchg
rorl
xchg
arpl
xlat
test
dec
mov
mov
add
lahf
pop
sub
jmp
loope
je
scas
lods
inc
or
pop
cmpsl
lahf
jne
push
lret
xor
mov
in
cmp
shrl
cld
adc
jmp
xor
in
into
mov
jge
popa
mov
inc
xchg
movsl
jl
fistpll
adc
arpl
push
sub
and
aad
js
sbbb
mov
or
ror
ret
jns
outsl
adc
repz
sub
iret
mov
pop
mov
sbb
nop
dec
test
mov
push
add
cmpb
popf
out
push
jns
lds
mov
xchg
shr
push
arpl
sbb
fwait
idiv
xor
pop
out
mov
call
jmp
adc
jg
mov
leave
arpl
cltd
pop
ja
pop
sbb
mov
cmovg
jecxz
aad
dec
mov
lahf
inc
cwtl
lret
mov
jmp
xchg
iret
sub
mov
mov
aad
and
sbb
cmc
popf
cltd
leave
call
test
push
pop
mov
xchg
mov
push
lahf
imul
lret
xchg
xchg
xor
push
sti
orb
inc
push
jb
jg
cmpsb
in
int3
and
sub
mov
sbb
scas
and
jmp
in
aad
jne
rorl
setnp
add
test
rol
in
popa
pop
movsl
pcmpeqw
ja
ret
or
adc
std
xor
sub
jle
mov
cmp
lcall
add
jle
push
dec
or
popa
xchg
lahf
flds
shll
aad
cmpl
mov
mov
in
cwtl
mov
dec
xchg
into
adc
dec
or
add
cltd
les
mov
fprem1
sbb
rep
test
lret
sbb
rcrb
add
and
jle
mov
jne
clc
out
std
jecxz
shll
lahf
fs
mov
mov
repz
pop
lahf
cmc
lahf
out
pusha
xchg
sub
fsubl
dec
imul
mov
push
orl
imul
xlat
divl
fcomps
rcrb
fstpl
repnz
jne
cmpsl
das
popl
sub
rol
lock
movsl
mov
add
lahf
push
mov
dec
inc
add
aad
iret
dec
aam
jo
mov
decb
imul
push
gs
loope
lahf
push
jae
adc
adcl
sarl
mov
cltd
rcrb
push
in
xchg
pusha
add
popf
lret
fnsave
xor
add
jo
adc
add
outsl
orb
rolb
inc
in
xchg
lret
xrelease
lds
pop
sub
or
fsubl
inc
vphaddwq
in
dec
cwtl
ja
and
mov
fldt
cwtl
mov
mov
mov
fildll
in
pop
xchg
mov
sub
adc
mov
xchg
leave
xchg
mov
and
and
outsb
test
mov
repz
xchg
pop
adc
xchg
mov
mov
or
out
xchg
cmc
test
repnz
mov
mov
cmp
sbb
mov
insl
mov
jae
sub
mov
push
cmp
xchg
arpl
jmp
inc
pop
fnstcw
lret
cmpsl
adc
test
in
cmc
sti
arpl
jns
nop
shll
xor
and
das
loop
add
sbb
stos
out
shll
xchg
test
fistl
out
mov
push
subl
lahf
test
xchg
movl
adc
in
fnstsw
test
aad
sbb
xlat
insl
sub
loope
pop
jo
sub
imul
movsb
pop
jmp
out
out
mov
les
cmp
jns
setne
fwait
mov
xchg
jmp
inc
dec
frstor
push
dec
add
popa
fistl
scas
lret
mov
stos
fidivrs
xchg
test
movsb
adc
int
dec
or
push
dec
addl
xchg
mov
loope
aad
rcll
testl
cwtl
jo
mov
inc
mov
or
ret
filds
insl
and
mov
ljmp
int3
mov
inc
add
add
add
sub
ljmp
out
shl
outsb
call
dec
popf
inc
sub
cmc
lret
js
xchg
cwtl
lahf
jne
dec
test
jp
push
aad
fists
mov
inc
pushf
mov
jo
lea
pop
inc
inc
sub
and
add
sbb
rorb
push
and
add
iret
fwait
scas
loop
xchg
sarl
cmpsl
cmpsl
out
in
outsl
loope
in
lods
loop
test
adc
icebp
in
pop
loop
out
decb
mov
ret
mov
leave
mov
ret
lds
and
cmc
cltd
popa
xlat
lods
inc
fistpl
adc
fwait
and
rcll
sbb
mov
gs
sbb
cmpsl
jnp
popa
mov
scas
mov
lahf
loope
cmp
fld
bound
inc
fwait
mov
fistps
aam
adc
scas
mov
or
dec
frstpm(287
push
loope
jecxz
clc
pop
mov
cwtl
rcrb
repz
rcrl
jecxz
ror
mov
adc
fwait
sub
lahf
iret
roll
dec
scas
adc
js
jmp
add
cmc
pop
cmpsl
cmpsb
mov
add
lea
sbb
aam
dec
mov
popf
repz
xchg
mov
into
in
sbb
jbe
outsl
movl
sub
adc
cmpsl
std
push
nop
or
mov
std
lods
mov
leave
stos
mov
adc
add
xchg
lds
ja
fists
dec
aas
cmpsl
xchg
pop
neg
jecxz
jp
pusha
mov
xchg
lahf
scas
shr
mov
clc
shr
fwait
jne
loope
xchg
lahf
sub
pop
jmp
shlb
add
fwait
popa
cmpsl
pusha
xchg
mov
inc
loopne
rcl
inc
shr
mov
lods
test
sub
into
mov
rclb
in
push
mov
jmp
pop
out
push
ja
lds
cltd
mov
or
imul
ds
mov
fisttps
ret
out
repz
sbb
inc
out
testl
xchg
cltd
ja
cmc
adc
popf
add
lds
adc
rcrb
jmp
cmp
adc
dec
rorl
mov
cmp
jmp
rcr
jo
push
sub
sbb
xor
inc
shr
mov
ficompl
mov
lea
jne
neg
ds
sub
pop
mov
xor
dec
shll
mov
xor
xorl
cmpsl
lea
mov
lcall
mov
xchg
adc
iret
loopne
xor
sti
arpl
bswap
imull
fwait
lds
lahf
xchg
ret
aad
aam
push
sbb
rcl
repz
add
mov
repz
leave
icebp
outsl
ror
sarb
fstpl
and
nop
addr16
and
adc
scas
out
sbb
dec
pop
xlat
dec
aaa
and
add
cltd
roll
cmpl
push
dec
mov
cwtl
stc
jno
adc
dec
mov
inc
adc
movsl
gs
xchg
adc
cltd
aam
inc
outsl
xchg
movsl
mov
leave
iret
fildl
fwait
mov
xchg
jmp
rorl
jg
ss
adc
xchg
sar
sbbb
mov
cmpsb
mov
and
movmskps
mov
repz
xchg
in
inc
out
xlat
mov
pop
hlt
call
mov
cmpsl
jbe
out
roll
outsl
inc
jmp
adc
jg
leave
lea
popa
roll
ret
fdiv
fists
add
add
movsl
subl
jne
jne
shrl
mov
and
js
shll
sub
cmpsl
mov
and
out
movl
add
push
orb
pusha
aaa
push
insb
outsl
or
negl
push
enter
shrl
jp
push
gs
pop
add
loop
out
ret
stos
xchg
cmp
leave
loope
pop
mov
scas
push
dec
addr16
stos
in
lret
mov
adc
cwtl
insl
jmp
outsl
xchg
xlat
fwait
in
cmpl
fildll
sub
cmpsb
popa
xchg
sbb
in
pop
outsl
inc
push
cmp
in
and
sbb
repz
out
gs
xchg
int
adc
mov
mov
popf
ret
xchg
mov
push
mov
out
filds
xchg
in
lods
mov
outsb
call
xchg
mov
pop
fstp
sub
or
iret
xchg
mov
arpl
sub
lock
jne
jo
mov
sub
ds
nop
adc
scas
mov
ds
xchg
pop
mov
scas
cmpsl
adc
scas
cmp
test
adc
iret
jmp
sub
out
xchg
jne
scas
lret
mov
jecxz
mov
pop
popf
sub
test
lods
lock
lods
test
inc
jle
popf
popa
ds
xchg
lods
sti
sbb
sbbl
arpl
test
cmp
inc
imul
popa
cmc
subb
fwait
mov
aas
jne
mov
gs
out
cmpsl
mov
mov
repz
test
in
mov
mov
xlat
in
enter
testl
add
fbstp
in
mov
pop
out
push
xor
addr16
and
div
icebp
pop
test
fmuls
add
jne
add
inc
and
in
add
aad
push
pop
hlt
int
shl
test
or
xchg
lea
lds
lods
out
jecxz
frstor
jge
popa
jp
pop
cltd
lds
iret
and
int
inc
pop
cmpsb
sbbl
dec
cmovno
or
test
xchg
cmp
sub
popa
cmp
jg
xchg
faddl
into
outsl
ret
pop
push
lret
imul
addr16
jno
insl
adc
jne
jbe
dec
mov
lods
addr16
aas
mov
cmpsb
iret
rcr
ja
dec
adc
ja
sbb
cmc
bound
push
arpl
and
test
xchg
jmp
popa
cmp
push
rcl
jecxz
pop
stos
sbbl
cmpsl
mov
fbstp
mov
leave
test
mov
mov
push
mov
sti
sub
ds
xchg
filds
fucomp
imul
cmp
out
outsl
cwtl
enter
xchg
lret
iret
mov
jp
mov
xchg
push
fists
pushf
rcll
xchg
sbb
fnstsw
outsl
in
das
imul
mov
add
xchg
cmp
fwait
mov
cli
add
andb
mov
mov
ss
out
add
xchg
or
lods
lret
sarl
out
sbb
mull
imul
rorl
mov
mov
loopne
add
outsl
out
test
and
jno
out
add
shrl
pop
xchg
divl
pop
out
scas
push
add
cwtl
mov
int
in
add
adcl
out
out
sbb
xchg
cmp
shr
cmpsb
int
cwtl
add
iret
outsl
cmc
xchg
movsl
xor
dec
popa
jnp
insl
popa
pop
loope
imul
cmc
outsl
repz
add
mov
cmp
wrmsr
cwtl
push
sub
insl
mov
xor
insb
cmpsb
pop
mov
mov
adc
aad
mov
lods
sbb
rorl
out
sub
popa
scas
dec
jnp
lds
shlb
jmp
ret
fsubrl
pop
pop
mov
stos
xchg
push
push
popa
mov
mov
test
push
out
inc
in
call
shrl
mov
aad
cmpsl
call
lods
cmpl
scas
cmc
push
in
pop
rol
out
test
mov
xor
inc
popf
into
aam
aad
pop
mov
scas
outsl
test
or
adc
cmc
fucom
xlat
into
lock
shrb
xchg
pop
or
iret
ftst
shl
lock
lea
dec
adc
scas
ja
mov
sub
mov
push
sbb
xor
hlt
fldt
das
in
popf
jmp
hlt
or
test
jge
imul
inc
repnz
lds
add
xchg
arpl
push
mov
jmp
pop
ret
repz
loop
cmc
arpl
xchg
xor
mov
dec
mov
cmp
add
xlat
cmp
and
iret
orl
rclb
imul
jnp
dec
xchg
iret
adc
mov
nop
or
cmp
xorb
test
ljmp
cmp
lds
mov
xchg
pop
stos
dec
adc
test
mov
test
xchg
mov
icebp
lock
sti
xchg
js
cwtl
ja
xchg
xlat
mov
mov
addr16
in
fidivs
sub
lods
addr16
mov
test
mov
sbb
iret
mov
je
fstp
ja
in
cmp
mov
xchg
cltd
out
cmp
iret
adc
fldenv
adc
sti
fldln2
push
xchg
adc
mov
xor
xchg
test
lds
xor
mov
xchg
add
cwtl
fisubl
sub
lahf
inc
shll
sbb
sbb
mov
xchg
aad
arpl
and
pop
lds
sbb
imul
lea
and
lds
or
fstpl
lahf
in
mov
jmp
fistpl
pop
icebp
adc
ds
je
xlat
jmp
mov
jbe
jo
jecxz
popa
push
add
cmpsl
jbe
insb
lahf
aad
adc
jecxz
push
mov
and
pop
out
xchg
test
fwait
xlat
sbb
cltd
mov
into
icebp
inc
inc
sbb
cmc
in
inc
mov
mov
out
inc
xchg
in
mov
arpl
negl
lahf
shll
xor
out
popf
dec
mov
mov
popl
faddp
xchg
cwtl
test
orl
push
shrl
scas
dec
jno
jne
jmp
call
add
add
jne
aaa
fwait
imul
fistpl
movsl
in
lods
push
je
jle
add
cmpsl
mov
jno
push
aas
xchg
jecxz
ja
test
mov
jle
adc
jecxz
push
xlat
ljmp
mov
in
rol
xchg
xchg
lods
inc
nop
sahf
insl
xchg
dec
ja
mov
xor
repz
fs
out
xchg
pop
sahf
inc
pop
into
dec
das
lahf
loop
imul
lock
mov
push
xchg
aad
imul
sbb
mov
shrl
jbe
popf
sub
xchg
lahf
scas
pop
cmp
jne
in
sub
and
aam
sbb
jnp
iret
sub
pop
mov
cwtl
stos
addr16
out
and
divl
sub
lret
arpl
rorb
fistpl
rcr
mov
pop
pop
aas
arpl
cmp
shrl
int3
push
jnp
imul
jns
scas
lods
jmp
fwait
ja
cltd
idivb
int
aad
iret
mov
and
pop
testl
mov
lret
mov
in
cltd
outsl
mov
jnp
test
push
movsl
lahf
int
mov
pop
xchg
mov
idivl
fsub
mov
loope
iret
test
jmp
pop
loopne
pop
xchg
sbbl
jecxz
imul
and
stc
popa
push
andl
sbb
lods
clc
and
and
repz
pop
imul
add
out
cld
test
push
mov
sbb
in
shr
test
or
lret
mov
jno
cmpl
loope
sbbb
sub
mov
xchg
add
cltd
push
fildl
shl
popa
outsl
pop
xchg
jle
xor
pop
lods
xchg
lahf
xchg
in
test
cmpsl
roll
cmc
rcll
and
add
cwtl
xchg
adc
popf
push
pop
fwait
out
xchg
pop
cmp
mov
arpl
cmc
fldcw
in
pop
scas
sub
in
lahf
lret
popf
ja
mov
iret
jecxz
fistl
loope
int
add
mov
stos
jecxz
jns
repz
leave
dec
scas
lock
lahf
push
cmp
jle
mov
fucomp
nop
adc
stos
test
mov
sarb
xchg
clc
inc
ja
xchg
jecxz
mov
push
pop
xchg
fldt
cwtl
jno
repz
or
out
mov
pop
imul
mov
cmpl
and
rcl
cld
repz
lods
pop
call
add
cmpsl
xor
dec
and
cmp
add
lds
adc
inc
push
ja
repz
dec
rcrl
jnp
add
sub
pop
cwtl
cmc
test
mov
fbld
stos
adc
cmpsl
ds
xchg
das
loope
bound
jmp
mov
in
pop
fnstcw
adc
and
lahf
stos
ret
sbb
out
and
xor
outsl
flds
jo
cmp
xlat
divl
lds
in
inc
mov
mov
jo
or
mov
in
inc
jnp
cmpsl
roll
cmpl
cmc
rcrb
outsl
sub
not
fildl
mov
sbb
daa
ss
jnp
jo
cmc
mov
test
iret
aam
adc
stos
xchg
mov
cmp
aad
or
jmp
adcl
xchg
mov
popa
not
push
or
push
inc
mov
out
fwait
pop
stos
sub
mov
xor
mov
repnz
mov
cmc
cmp
push
adc
loope
mov
gs
cmpsl
test
pop
xchg
scas
cmc
and
out
jecxz
rolb
mov
mov
outsl
aam
xlat
inc
or
and
and
and
xorl
mov
push
jno
in
mov
push
repz
jmp
test
iret
mov
lret
jp
inc
in
sbb
stos
or
orb
add
mov
out
aad
fwait
add
fisttpll
fildl
test
je
stos
mov
jmp
sub
xlat
cli
mov
mov
lret
popf
out
add
lret
negl
mov
xor
vpextrw
lds
inc
xlat
hlt
ja
pop
xchg
adc
test
mov
outsl
mov
jns
xor
cwtl
lea
vpavgw
movsl
adc
mov
sbb
lea
mov
mov
lahf
lds
or
cwtl
mov
pop
iret
not
mov
cmc
pop
rorl
cmpl
fldl
fwait
lods
cld
mov
push
leave
movsl
out
mov
mov
fcmovb
push
iret
cwtl
imul
fisubl
aam
out
popf
pop
mov
insb
adc
mov
mov
mov
popl
fisttpl
add
mov
jecxz
mov
enter
cmp
dec
cmpsl
inc
ljmp
leave
cmpsl
mov
sti
sub
mov
ffree
arpl
push
jge
out
mov
and
jp
pusha
push
arpl
jne
add
cmc
jecxz
loop
movsl
xchg
add
daa
xor
sub
mov
popf
jne
sti
aad
jns
xchg
outsl
lods
cmp
andl
sbb
mov
test
add
test
shrl
addb
push
or
inc
cwtl
mov
cld
mov
inc
aam
push
frstor
test
mov
xlat
mov
scas
pop
jmp
dec
xchg
insl
mov
push
arpl
ret
pop
lods
roll
lret
filds
sub
add
rcrl
ret
push
add
movsl
imull
inc
sbb
dec
repz
mull
sbb
aaa
sahf
mov
gs
movl
mov
and
outsb
xor
movsl
int
stos
pop
cltd
cs
xor
mov
sbb
pop
int
cs
cltd
cmpsb
xlat
inc
xchg
jmp
in
push
scas
mov
fwait
cmc
inc
loop
push
xchg
icebp
mov
push
jg
or
sub
adc
xchg
mov
jl
imul
shl
sbb
insl
lahf
inc
mov
jecxz
push
fsubs
imul
test
cmp
xchg
in
call
das
lret
mov
arpl
loope
mov
pop
subb
outsl
jl
pop
sub
or
sbb
pop
inc
mov
out
xor
fwait
inc
sbb
ret
test
fstl
sub
mov
pop
lahf
mov
pop
addl
mov
pop
cmpsl
fldenv
jmp
jg
dec
out
sub
cmpsl
fistpl
pop
mov
mov
mov
sahf
outsl
mov
pop
jecxz
cmp
xchg
xchg
mov
std
daa
pop
test
and
iret
mov
xor
int3
in
sbb
int
mov
cwtl
cltd
lods
lods
mov
ss
inc
test
stos
imul
iret
out
insb
and
fmul
xchg
lods
test
movsl
jle
cmpsl
leave
aad
mov
cmp
call
roll
or
aad
push
out
arpl
jnp
das
pop
jb
jmp
sbb
inc
lahf
and
rcrb
js
jne
xor
arpl
fists
pop
xchg
pop
jne
std
fildll
jle
xchg
lahf
xchg
fndisi(8087
cltd
sub
jb
xchg
das
movsl
and
outsb
push
call
shll
mov
lods
sbb
repz
lret
shlb
xchg
xchg
add
pop
in
hlt
out
insl
loop
fwait
mov
mov
call
add
aaa
pop
or
jne
fildl
mov
movsb
and
push
flds
cmpsb
xchg
out
scas
loop
jb
ficoml
mov
jmp
jnp
fdivs
dec
icebp
test
lds
push
movsl
rcll
fcmovnbe
add
notl
push
mov
lahf
and
ret
jmp
adc
xchg
subl
ret
int
test
js
popf
add
gs
cs
lret
lahf
sbb
lea
pop
add
or
pop
dec
arpl
dec
ds
fs
cltd
xchg
ja
fcoms
lcall
outsl
leave
shr
out
movsl
sub
negl
mov
loope
xor
sbb
sub
and
push
jg
mov
sbb
inc
mov
cmp
cmpsl
gs
ret
arpl
ja
push
push
adc
push
adc
addb
fisubl
cmpsl
or
popf
lods
repnz
push
fists
jne
rorl
outsl
push
or
add
push
add
xchg
in
sub
shll
mov
lcall
outsl
sub
imul
and
sarl
push
popf
addr16
xor
fwait
push
ja
in
je
nop
sbb
icebp
ret
sub
popf
insl
push
lea
cwtl
aad
xchg
rcll
repz
int
sbb
out
out
sub
lock
fcmovnu
fimull
aad
insl
stos
fld
cli
repz
inc
jmp
sub
xchg
fildll
orl
sbb
in
in
in
mov
fnstenv
jmp
cmpb
jl
or
cs
nop
iret
fwait
cltd
arpl
sub
and
jmp
mov
cmpsl
rorl
fisttpl
out
test
js
mov
mov
pop
xlat
xchg
repz
xchg
xchg
cltd
ss
or
out
pop
js
fisttpl
in
xchg
popa
mov
mov
inc
pop
add
movsl
in
movl
jnp
stc
sub
lock
aad
mov
movsb
and
mov
push
or
fistl
cmpb
in
in
sbb
and
xchg
outsl
cmc
dec
mov
test
rol
add
fld
adc
pop
sub
imul
and
cwtl
outsl
cmpsl
ljmp
loope
movsl
outsl
cmp
dec
add
xlat
xlat
or
imul
push
es
cmc
cltd
testl
mov
jno
or
je
or
iret
cmp
arpl
addl
cltd
loopne
dec
out
jmp
adc
adc
imul
stos
aad
push
pop
cltd
aad
leave
imul
popl
push
mov
jecxz
das
add
cmp
pop
jo
popf
hlt
movsl
mov
lahf
fldcw
cs
or
test
frstor
sbb
sub
fistpl
fisttps
leave
enter
test
cmc
cld
out
jno
cmc
in
xchg
insl
inc
leave
xor
leave
mov
sbbl
push
imul
syscall
ret
cmpsl
mov
mov
stos
sbb
sub
stos
dec
adc
scas
add
cmp
ror
mov
mov
dec
imul
sbb
cmpsl
mov
enter
add
test
orb
out
mov
jl
xchg
sbb
pusha
or
imul
cmp
testl
pop
imul
xchg
out
test
push
xor
sub
jae
imul
mov
pop
out
sub
pushf
jnp
dec
call
movsb
jno
repz
in
arpl
mov
int3
gs
cmp
movsb
movsl
xchg
scas
xor
iret
jmp
loop
mov
subl
clc
in
enter
fiaddl
cmc
out
iret
arpl
add
cltd
fsts
jmp
pop
sbb
addr16
xchg
lock
adc
imul
mov
or
testl
add
repz
rorl
inc
mov
imull
addr16
shll
or
imul
add
push
test
and
push
cmpb
jae
cli
mov
and
pop
cld
repz
out
jae
mov
out
mov
or
or
or
push
mov
aad
inc
inc
test
int
fwait
add
repz
xor
in
lock
ret
icebp
sbb
sbb
adc
add
cmc
test
pop
pop
ret
xchg
or
stos
test
xchg
movsl
outsl
dec
mov
xchg
adcb
imul
movsb
in
fsts
mov
push
filds
fucompp
in
xor
or
mov
dec
cwtl
mov
cmp
outsl
mov
push
test
ret
imul
ror
sub
sti
gs
icebp
jne
cmpsl
mov
out
test
sti
arpl
shll
pop
pop
daa
in
xor
xchg
orl
ljmp
xchg
iret
add
test
mov
inc
jno
pop
lret
add
mov
notl
addr16
adc
fst
adc
hlt
add
jmp
mov
test
imul
push
jns
in
rcll
scas
fcmovne
out
inc
fwait
push
dec
pop
in
xlat
fadds
jne
out
jle
inc
out
ficompl
popa
repz
aad
mov
fwait
mov
enter
mov
jmp
ret
out
ja
dec
xchg
fistps
and
pop
in
imul
aas
xchg
mov
jmp
faddp
pop
cmpsb
mov
and
ds
adc
fisubl
ja
xor
das
push
inc
mov
jge
sub
addr16
hlt
scas
insb
push
add
fucomi
add
mov
rclb
push
xor
push
xchg
push
xchg
cwtl
xor
out
inc
int
jne
xlat
loope
mov
sub
jmp
cmp
xor
adc
lahf
insl
in
je
movsl
xchg
or
shlb
cltd
ljmp
pop
sbb
rcrl
push
rcl
mov
shrl
shrl
in
fcomip
lods
pop
dec
add
aad
negl
push
sub
pop
jecxz
sbb
fwait
loop
cmp
test
aad
ret
adc
jle
push
mov
xchg
cmpsl
pop
mov
mov
mov
xchg
sbb
ret
js
outsl
xor
outsb
mov
test
subl
xor
shl
test
shll
push
pop
xlat
fcompl
or
outsl
push
adc
lods
pop
jne
push
jmp
xchg
adc
jecxz
in
mov
jle
ja
test
xchg
scas
cld
xchg
cld
xchg
test
movsl
jne
xchg
inc
jecxz
xchg
dec
scas
dec
sbb
lock
jne
mov
popa
jmp
fldl
test
push
jmp
cwtl
test
jmp
dec
push
lods
icebp
push
stc
xor
iret
dec
out
in
inc
test
scas
cmp
jno
lahf
mov
pop
push
sbb
popf
out
jno
fcompl
fildl
imul
faddl
jmp
add
inc
xchg
out
iret
adc
xchg
lcall
sbb
push
test
test
pop
lret
cwtl
in
mov
mov
add
gs
jne
rorl
add
cmc
dec
loope
dec
cmc
and
cmp
lds
xchg
arpl
test
cmp
popa
std
xor
adc
jno
push
movntps
das
or
cmpsb
lahf
and
jle
xchg
mov
leave
jne
and
sbb
imul
jmp
sub
shr
adc
fsub
dec
fnstenv
dec
xchg
adc
aad
int
jmp
add
scas
xchg
jmp
aam
cmpsl
ret
lods
loope
cmc
aad
cltd
out
add
jp
mov
inc
inc
or
mov
out
cld
test
xchg
in
mov
lret
into
in
inc
fcompl
loope
into
repnz
iret
fxtract
lock
xor
pop
test
sub
pop
push
pop
hlt
xchg
ja
pop
repnz
inc
sbb
movsl
push
lds
shrb
mull
in
popl
jle
test
and
lods
xor
sbb
out
scas
push
test
push
fnstsw
sbb
orl
push
ja
inc
add
leave
addr16
pop
mov
test
xchg
in
adc
mov
add
movsl
xlat
out
push
jbe
or
aad
mov
fmul
arpl
outsl
jo
lds
popa
fdivs
fwait
mov
adc
lds
iret
scas
js
fucomip
and
test
test
dec
cmp
mov
insl
or
xchg
lds
dec
mov
ret
jmp
mov
pop
subl
mov
xchg
xchg
mov
arpl
int
test
pop
or
iret
xchg
sbb
int3
mov
cmp
xchg
push
sub
lods
jmp
inc
mov
fwait
movsl
inc
mov
das
leave
jmp
jne
and
div
push
lds
mov
aam
andb
jmp
out
in
mov
pop
push
movsl
push
jns
movb
rcrb
push
das
loope
mov
imul
aad
jae
xchg
lea
scas
stos
pop
daa
loope
test
pop
js
shll
mov
push
cltd
cmpsb
lds
out
push
xchg
xchg
mov
dec
pop
imul
push
aad
arpl
pop
popa
sub
imul
push
test
dec
in
cmp
cmc
cmp
pop
outsl
xchg
in
out
sahf
push
out
aaa
jb
xchg
popa
insl
cmpsl
xchg
lahf
xchg
pop
loop
addr16
jp
scas
and
aas
xchg
jecxz
pop
jle
out
push
int
inc
imul
lds
andb
dec
mov
test
mov
sarl
jecxz
aam
popa
sbbl
push
xchg
cmp
push
ja
xor
pushf
into
popf
cmp
and
sbb
add
js
xchg
cmp
mov
popf
out
les
outsl
movsl
mov
pop
imul
gs
jl
jno
jae
daa
or
add
add
push
rep
dec
xchg
lea
clc
leave
popf
das
sbbl
ja
lret
jecxz
arpl
jmp
ljmp
addr16
push
mov
pop
push
sub
fldt
ret
fildl
pop
xchg
mov
fnstcw
js
out
mov
stos
inc
pop
imul
sub
rcr
or
mov
outsl
fnsave
fcompl
stc
aad
dec
or
xchg
xor
stos
or
cmpsl
jne
jge
fsubs
or
push
lods
jmp
rcrb
cs
jmp
insl
dec
mov
xchg
loope
in
cmpsl
or
cmc
sbb
jne
roll
xchg
inc
jmp
sub
fwait
cmp
add
imul
add
push
int
in
fisubs
ret
adc
jecxz
in
scas
push
mov
mov
cmp
in
loope
lods
mov
push
xor
or
sub
mov
ficoml
test
fildl
pop
lret
sbb
stc
arpl
pop
js
xchg
sub
repz
pop
in
fwait
popa
mov
shr
out
out
lods
loopne
imulb
nop
jle
leave
xor
pop
lahf
test
lahf
cmp
insl
xchg
mov
test
cwtl
aad
les
adcb
xor
addr16
test
ja
test
mov
lds
push
out
test
repz
ljmp
in
aas
ficoml
pop
scas
shr
subl
mov
cmpsl
mov
push
pop
subb
sub
sbb
subl
pop
xchg
jmp
out
in
cmp
call
repz
jecxz
pop
adc
arpl
test
ret
mov
jecxz
mov
pop
loop
xchg
jne
lret
mov
lret
sub
rcll
ds
out
dec
fbstp
cmpsb
int
jnp
xorb
adc
aam
fildll
ja
jp
pop
into
push
outsb
sub
negb
fincstp
repz
jecxz
out
out
flds
pop
mov
leave
fs
lea
hlt
movsl
ret
daa
xchg
fsts
call
lahf
mov
hlt
movsl
rcrb
stos
mov
mov
out
out
fstpl
jns
jmp
or
hlt
ljmp
rorl
outsl
push
xchg
mov
popf
ja
pop
jne
inc
jmp
mov
cs
xchg
adc
cmp
cmpsb
xor
es
jo
jb
jbe
sbb
nop
mov
push
push
mov
ja
mov
fcoml
int3
roll
adc
xor
inc
out
mov
jmp
xlat
mov
fwait
jns
jle
enter
sbb
lods
mov
subb
iret
xchg
mov
xor
or
mov
popf
arpl
add
xlat
xchg
mov
jle
not
or
or
aam
and
or
pop
ror
add
out
ret
cmp
xlat
mov
test
stos
adc
add
mov
in
lds
mov
add
cwtl
mov
push
adc
cmpsl
lods
sub
ss
add
fucom
or
dec
jb
imul
add
arpl
test
int3
stos
xchg
sbb
push
sbb
gs
sbb
and
call
and
filds
lret
push
jnp
cmpsl
cwtl
stos
add
popa
push
jb
lock
inc
aam
pop
push
dec
sbb
inc
cmpsb
lea
pop
rorl
push
pop
imull
or
fnsave
test
xchg
loop
out
orl
ret
sbb
cmpb
or
test
out
and
rcrl
inc
pop
dec
fnsave
mov
shrl
insl
cltd
outsl
lea
xor
xchg
cmc
xor
iret
xchg
mov
push
out
icebp
mov
or
and
enter
fistps
lds
xchg
cwtl
sub
jmp
fs
mov
in
shll
cltd
loope
out
pop
out
push
push
or
in
lahf
cmp
mov
es
imul
iret
call
xchg
sbb
cmpsl
xor
push
int3
pop
xchg
mov
inc
push
pusha
lods
arpl
mov
lods
arpl
mov
pop
stos
or
cmpsl
jecxz
pop
ja
jmp
out
xor
xor
imul
ret
mov
roll
xchg
pop
stos
jmp
mov
negl
les
scas
mov
repz
lock
addr16
mov
jmp
ja
and
test
divl
and
outsl
jmp
mov
out
arpl
not
repz
inc
jb
rorl
inc
cmpl
fldcw
cwtl
push
cltd
pop
mov
mov
imul
stos
out
in
mov
mov
std
loopne
cltd
popf
in
sarl
xchg
mov
aam
ds
mov
repz
pop
in
notb
xchg
xchg
in
rolb
das
test
push
push
push
clc
fbld
jne
stos
int
jns
cmp
hlt
js
mov
lahf
cmc
ds
mov
imul
jmp
push
and
popf
lahf
das
inc
inc
and
mov
adc
data16
in
push
mov
int
and
mov
int
adc
or
mov
adc
xlat
xor
jmp
lds
mov
incb
daa
or
mov
and
fsubr
xchg
gs
addr16
out
popf
mov
push
mov
pusha
daa
dec
mov
ret
lods
test
aad
adc
adc
xchg
repz
push
mov
test
add
push
dec
shll
xor
insl
adc
cld
pusha
pop
push
in
mov
ror
pop
sub
lahf
iret
fldenv
mov
mov
into
jp
dec
mov
shlb
loope
aas
cmpsb
loop
inc
loope
in
test
xchg
shl
push
lret
pop
cmp
mov
add
xor
add
imul
mov
sbb
lahf
inc
pop
incb
iret
push
push
mov
adc
xor
jb
inc
xchg
inc
mov
xor
lahf
pushf
mov
xorb
int
sbb
fisttps
rol
xor
sbb
dec
cmpsl
adc
arpl
mov
scas
idivl
dec
roll
popa
lds
popf
mov
insl
cmc
les
cmp
push
js
int
subb
idivl
mov
dec
daa
loop
xor
in
mov
jbe
jmp
xor
lahf
stc
sub
mov
in
adc
lcall
jns
xor
sub
mov
add
dec
mov
in
es
xchg
outsl
imul
je
push
icebp
in
inc
pop
and
mov
and
fwait
and
xor
xor
fsubr
pop
inc
sub
insl
mov
aas
jmp
cmpsl
je
fstpl
insl
mov
cmc
mov
pusha
and
and
inc
sbb
adc
pop
sbb
xchg
push
pop
rorb
hlt
mov
pushf
add
add
lea
xor
icebp
js
es
test
fucom
cmp
mov
int3
xchg
sar
xor
test
int3
mov
ret
mov
ljmp
cltd
shlb
pop
xchg
push
jne
in
xlat
xor
jmp
sbb
notl
scas
lret
cmc
fwait
ret
popf
mov
sti
and
loope
ret
test
add
in
lds
pop
xlat
lea
fs
pop
add
repz
stos
movsl
shll
cmpsl
mov
pop
out
xchg
jne
repz
shl
scas
mov
cwtl
fwait
mov
test
cltd
push
mov
gs
aad
cmpsl
out
xchg
popf
les
or
mov
cld
fimull
adcl
je
aad
inc
cmp
xor
out
ret
lea
orl
popa
pop
iret
mov
pop
dec
repnz
je
or
insl
ror
push
cmp
out
arpl
sbb
sbb
mov
das
aad
cmp
test
sbb
sub
cmp
ja
sub
lahf
xchg
div
or
mov
mov
insl
mov
mov
lahf
fldt
mov
cltd
cwtl
dec
repz
gs
adc
jne
sbb
shll
mov
subl
adcl
cmp
fnstcw
enter
inc
xchg
dec
or
test
in
ret
fwait
cmc
jnp
push
fdiv
lahf
lods
fdivl
rclb
std
outsl
inc
mov
adc
xlat
cmpl
shrl
in
repz
outsl
ret
popl
test
mov
xchg
jae
imul
mov
ja
leave
jmp
mov
scas
insl
imul
and
xlat
or
ret
mov
imul
cld
test
cmp
je
ss
mov
lods
and
xor
sbb
shl
mov
ljmp
mov
adc
mov
testb
mov
in
mov
sbbl
xchg
xlat
mov
xor
imul
and
int
shr
add
cmp
insl
das
lds
popa
ret
push
mov
add
in
jmp
or
pop
ret
xchg
pop
push
cmc
xchg
rorl
xchg
shll
fstps
jp
and
movsb
ret
roll
cmp
sbb
add
lahf
jmp
vpsubd
mov
xchg
dec
out
lahf
ret
sub
or
int
test
dec
outsl
rcll
jmp
mov
fistl
xchg
dec
scas
paddd
push
jb
int
mov
xchg
pop
imull
jmp
int3
insl
movsb
insb
daa
test
stos
adc
repz
cmpl
dec
clc
in
push
adc
insl
lret
stos
lcall
xchg
xchg
jne
sti
xchg
xlat
ja
psubq
mov
arpl
fsubs
sub
push
or
and
lods
mov
leave
cwtl
in
inc
sbb
xchg
dec
cmc
repz
jmp
jns
aam
sub
mov
stc
push
inc
or
fildl
lds
setae
dec
mov
jb
cli
jb
ja
push
fwait
shrb
fwait
popl
scas
ja
dec
add
cwtl
cmp
shrl
in
xchg
out
loopne
sbb
mov
insb
repz
jne
ror
stos
dec
jnp
bound
loopne
jne
clc
push
mov
imul
cwtl
lahf
or
out
insl
xchg
jo
xlat
imul
clc
push
repz
xchg
fxch
xor
mov
cwtl
movsl
outsl
popf
int
mov
cmp
in
and
pusha
imul
jmp
push
jnp
mov
pop
shrl
mov
ret
xlat
cli
sarl
outsl
mov
js
andl
mov
mov
xchg
ja
ljmp
out
mov
sub
mov
adc
iret
jne
aaa
imul
xchg
sbb
in
inc
insl
sbb
stos
and
lea
imul
cmpsl
cmc
adcb
adcb
outsb
in
pop
dec
jecxz
and
jns
scas
movl
int
test
push
dec
in
aam
movsl
ss
jno
in
jl
aad
sbb
andl
imul
push
mov
call
mov
test
loope
mov
andl
insl
testl
mov
imul
aas
shl
push
cmc
pop
mov
stos
cmpsl
lds
fwait
in
pop
inc
cmp
sub
push
in
jl
fnstenv
xchg
add
repz
das
lds
mov
lods
xchg
mov
adc
push
test
or
popl
xor
cltd
out
cs
insl
iret
jecxz
xchg
scas
pop
aas
lret
outsb
xor
insb
xchg
lods
imul
outsl
or
scas
scas
aas
mov
xchg
stos
repz
insl
mov
iret
xchg
popa
lahf
lds
and
adc
jbe
cmp
cmc
mov
mov
fs
sub
mov
sarl
lahf
jmp
push
cmc
sahf
inc
cmpsb
jp
fneni(8087
adcl
popa
sub
sbb
cmc
and
jne
scas
mov
test
add
rorl
xchg
adc
or
test
flds
int
cwtl
cmpsl
mov
ret
bnd
ret
adc
mov
pusha
in
lods
pop
xchg
mov
call
sbb
fwait
repnz
mov
inc
movsl
inc
xchg
inc
jo
pop
in
mov
sbb
lahf
inc
xchg
pop
xchg
addl
shrd
int
shrl
popa
in
pop
inc
les
mov
lahf
inc
bound
cmp
or
stos
aad
aaa
adc
addr16
push
cs
mov
adc
mov
push
cmp
and
enter
fists
pop
sub
sbb
test
ja
ficomps
bound
insl
jg
int
sarl
mov
cmpsl
add
pusha
xchg
test
add
lods
pop
andl
xchg
pop
popa
cwtl
jne
out
fstcw
mov
push
ja
stos
stc
push
pop
lcall
repz
loope
pop
inc
mov
mov
cmpsl
dec
outsl
jno
xchg
nop
daa
sub
xchg
popf
in
lret
dec
imul
adc
test
sbb
push
repz
mov
cwtl
lahf
imul
pushf
push
lds
sar
ss
lea
in
repz
movsb
lret
sbb
inc
xor
fsubp
int3
clc
loopne
negl
cmpsl
out
cli
sahf
xchg
lea
adc
es
stos
mov
sbb
and
jo
dec
sbb
aad
inc
orb
mov
mov
push
inc
mov
test
mov
ljmp
in
loope
psubusw
popa
push
loop
hlt
loopne
enter
out
xchg
xchg
sbb
fcmovu
or
mov
push
jb
rcll
rcll
iret
fistpll
ret
push
outsl
int
mov
dec
mov
inc
jg
pop
and
popa
mov
push
pop
mov
fwait
aad
ret
aas
frstor
cmpsl
subl
popa
ret
addl
fbld
pop
out
pop
test
roll
test
mov
xchg
lods
shl
mov
out
fwait
jmp
mov
lahf
in
arpl
inc
stos
ret
mov
pop
xor
aas
inc
enter
cltd
cmp
xor
in
or
xchg
lds
inc
cmp
xor
aad
call
mov
and
jo
popf
sti
cmp
adc
lret
or
int
dec
mov
adc
shll
sbb
loope
push
stos
cld
call
jae
xchg
pop
or
cmpsl
mov
sub
addr16
cwtl
inc
mov
add
es
mov
mov
add
ja
push
loope
aad
gs
aad
cmpsl
insb
mov
test
and
and
adc
mov
push
adc
pop
lds
inc
xchg
lods
xchg
xchg
addr16
jmp
shll
dec
lahf
cmpsl
mov
push
sahf
loope
mov
ss
test
jmp
fnstcw
orb
test
cmc
rcrb
lods
mov
lods
shrl
cmp
loope
in
lds
test
jmp
test
and
cmp
mov
mov
xorl
in
cmp
xor
mov
lods
in
lret
xchg
sbb
imul
clc
sub
pop
leave
lock
ret
mov
xchg
shr
lds
xor
lods
popa
or
add
sbb
fwait
cltd
adc
test
sbb
xchg
sti
in
mov
out
call
push
adc
cmc
popf
xchg
rorl
jecxz
jmp
das
in
gs
push
in
mov
xchg
insl
jno
cmpsl
or
add
cmc
pop
mov
cld
shl
xor
cmpl
negl
adc
clc
test
mov
mov
call
in
jl
rorl
jmp
mov
mov
sbb
int3
lds
shl
inc
jne
xchg
aaa
stos
dec
jl
out
mov
pusha
sbb
mov
push
dec
dec
jne
iret
sbb
xchg
mov
xchg
xchg
popf
test
shrl
add
xchg
xchg
clc
in
stos
push
ret
rol
hlt
jmp
lret
aam
neg
ret
lahf
loope
sub
test
pop
xchg
or
daa
lret
mov
out
jmp
cltd
popf
cwtl
rol
imul
das
jg
leave
xchg
jns
mov
mov
test
in
lods
mov
mov
fbld
xchg
cmpsl
movsl
cmp
loope
jmp
cmpsl
lods
out
loop
out
mov
pop
popa
outsl
pop
lret
inc
adc
sbb
jecxz
shrl
push
frstors
call
call
popa
jmp
fistl
js
daa
xchg
icebp
fwait
cmp
xor
test
mov
push
outsl
mov
aad
xchg
gs
push
fcomp
lea
dec
imul
mull
add
enter
fs
dec
sub
cltd
jne
mov
mov
and
mov
jecxz
stos
movsl
xlat
cmc
test
scas
in
cmp
ja
jne
lahf
or
lds
addl
push
dec
sarl
lcall
cmc
add
in
hlt
lahf
fsubrs
jge
fbstp
jns
sbb
jecxz
add
sarl
bound
or
sti
and
mov
add
scas
fwait
xchg
cmp
rep
ja
jmp
mov
lcall
sahf
add
addl
mov
test
push
in
xor
xlat
xor
adc
fildl
roll
mov
flds
mov
inc
lcall
xlat
mov
cmpsl
js
dec
jecxz
ja
scas
push
xchg
fildl
adc
call
jae
cli
mov
popa
fadds
loope
test
jmp
adc
jmp
pushf
mov
mov
cltd
stos
xchg
mov
cmpsl
jns
cwtl
idivb
push
ror
jne
imul
or
fistpll
and
insl
pushf
cmc
cmc
mov
ja
rorl
jl
lods
push
mov
mov
jne
jmp
jg
hlt
mov
add
cwtl
enter
xor
test
and
xorl
int
loope
mov
mov
mov
inc
adc
and
jo
btr
scas
enter
xchg
popa
movsb
mov
jb
jne
push
stos
clc
push
pusha
push
in
push
das
outsl
aad
popa
fstpl
or
sbbl
adc
aad
scas
imul
in
sub
sbb
and
repz
test
shl
pop
fbstp
fldenv
iret
jecxz
movsb
test
test
mov
lds
mov
push
in
jle
jne
sub
test
xor
call
push
in
sbb
xchg
stos
mov
les
cmp
mov
aam
lods
adc
outsl
lods
ja
fsts
inc
rcrl
mov
mov
and
add
cmpsl
movsl
dec
aam
cwtl
notb
push
nop
xchg
out
clc
addr16
dec
rcrl
fists
fidivrl
push
dec
test
scas
adc
sub
mov
xchg
rclb
push
mov
fsts
fcomip
xor
lds
lret
leave
jmp
sub
jmp
lock
xchg
pop
lock
test
repz
push
fldt
mov
fmull
jp
fistl
lret
aad
loope
ja
or
mov
and
test
fwait
mov
inc
roll
iret
scas
shll
out
jnp
out
mov
fwait
vpackssdw
loope
dec
cmp
lods
repz
push
xchg
out
arpl
in
dec
in
jge
outsl
add
divl
mov
and
sbb
sti
out
jne
pop
mov
push
pushf
pop
jmp
pcmpgtb
ret
insl
iret
mov
mov
lds
test
addr16
aad
inc
shll
xor
add
jmp
les
mov
lahf
inc
lock
mov
dec
cmpsl
push
inc
mov
jg
cld
cmc
lds
leave
jo
add
sarl
out
adc
psllw
pop
test
sbb
shl
lret
daa
imul
and
fistps
repnz
fldt
pop
idivl
mov
add
xchg
jne
xchg
pusha
adc
repz
rcl
fldenv
xor
cmp
negl
pop
scas
cmp
push
mov
jl
subb
adc
mov
or
pop
imul
mov
jl
popf
and
iret
lret
inc
jne
xchg
mov
scas
xor
cmpsb
ja
popa
outsl
add
cltd
and
jecxz
movsb
lock
adc
cmpsl
shll
and
push
ret
or
in
and
cmp
rcr
test
imul
pop
loope
or
ds
pop
popa
xchg
add
lahf
mov
push
jecxz
js
subl
leave
repz
inc
aam
jno
mov
fwait
xchg
int
or
mov
inc
cmp
xlat
leave
sbb
push
pop
and
mov
mov
arpl
stos
mov
flds
fwait
in
iret
xchg
xchg
mov
dec
mov
stos
adc
scas
icebp
or
scas
pop
andb
out
inc
adcl
pop
shlb
ret
dec
rcrl
stos
lahf
int
adcb
cmpl
xor
movsl
jo
adc
mov
mov
ds
sub
lea
mov
xor
mull
test
push
and
test
cmpsl
mov
out
lods
mov
cmp
repnz
and
repz
negl
mov
xor
add
roll
imull
fucomip
mov
jne
sub
ret
stos
imul
pop
sahf
sub
xchg
cwtl
pusha
add
jne
outsl
adc
cltd
stos
adc
in
ret
outsl
in
xorb
jne
in
out
out
and
int
or
mov
or
cmpsl
pusha
and
push
cwtl
les
and
arpl
pop
sub
jmp
gs
jmp
ret
push
mov
push
pop
and
mov
mov
add
loope
andl
sub
in
lds
scas
dec
imul
imul
mov
lds
adc
mov
push
out
inc
push
outsl
cmp
and
data16
rcrl
imul
xchg
inc
fimuls
xor
xor
push
shl
rcrb
fdiv
lds
les
std
adc
int
leave
je
outsl
leave
arpl
mov
test
mov
cmp
mov
call
js
xchg
ja
inc
mov
insl
imul
pop
xchg
fwait
mov
xchg
sarb
or
push
xor
shrl
adc
push
in
jmp
inc
testl
test
and
cmp
pusha
fnstcw
pushf
in
adc
adc
imul
adc
lds
cmp
xchg
insl
shlb
push
cmp
addb
aas
xor
pushf
dec
and
outsl
jmp
mov
mov
mov
mov
mov
aad
leave
repz
ja
mov
push
jmp
movsl
mov
lods
sarl
std
rol
movsl
outsb
dec
ljmp
into
cmp
imul
stc
mov
fists
add
jl
roll
mov
pusha
addl
into
mov
ja
push
movsl
jno
test
xchg
dec
mov
inc
mov
pop
in
std
jge
xchg
rcll
int
in
push
test
mov
adc
subl
mov
pushf
push
mov
dec
stos
arpl
mov
jne
pop
lret
jmp
push
insl
lahf
mov
xchg
mul
xchg
pop
mov
int
dec
mov
fbstp
fnsave
mov
xlat
in
jne
loope
or
test
xchg
not
push
js
cmpl
cmc
loopne
xchg
in
and
data16
je
xlat
or
or
lock
pop
aas
add
repz
je
lods
ret
push
addr16
lea
pop
out
cltd
imulb
xor
adc
lea
movsl
ret
std
and
jmp
jne
lods
add
bt
cmpsb
xor
scas
scas
hlt
xorl
cmpl
xor
xor
adc
outsl
sbb
push
pop
lahf
fwait
arpl
fisubl
mov
xor
jne
push
ja
ret
imul
adc
xchg
mov
xchg
sub
dec
loopnew
xlat
cmp
xlat
jae
stos
ljmp
insl
adc
fwait
stos
out
frstor
or
pop
inc
xlat
jmp
fnsave
in
xlat
in
pushf
jecxz
call
cmc
inc
mov
fldenv
inc
fs
es
xlat
mov
sbb
test
lahf
in
mov
and
jbe
lahf
xlat
les
lds
xchg
lds
and
cltd
sbb
out
push
scas
or
in
lahf
rorl
pop
or
iret
ja
xchg
jle
and
sbb
pop
cmp
xchg
jp
xor
cli
movsl
push
mov
mov
xchg
mov
adc
xchg
andl
and
scas
sub
mov
sbb
mov
or
in
jmp
pop
mov
outsb
enter
inc
jbe
jb
jg
dec
repz
in
mov
sbb
testl
adc
inc
jns
xrelease
mov
cmpsb
gs
stos
add
iret
test
cmp
sub
lods
or
push
jne
ja
mov
dec
test
ljmp
popf
mul
test
mov
cwtl
push
xchg
xchg
popf
lock
bnd
sti
cmpl
pop
or
adc
xchg
jno
add
aad
roll
lds
xchg
mov
imul
subl
arpl
lods
sbbl
sbb
aas
rcrl
or
loope
mov
enter
idiv
mov
xchg
xchg
iret
adc
fmul
xchg
out
mov
insl
xchg
push
lret
orl
movsl
sub
jb
popf
rcr
push
fstp
mov
dec
ret
popf
das
imul
cmpsl
jmp
and
mov
enter
fadds
fmul
out
mov
sbb
shl
ret
add
mov
sbb
stos
movsb
and
dec
pop
jnp
jle
cmp
lret
movb
popa
mov
xchg
inc
jnp
mov
test
mov
test
mov
mov
pop
cmpsl
xchg
loope
mov
and
loope
neg
or
or
ja
xlat
aad
cmc
in
mov
leave
cwtl
ror
xchg
movsl
clc
repz
repz
or
inc
dec
cld
cmp
mov
out
ljmp
aam
in
lret
lock
lahf
ret
test
or
repz
popa
jae
cli
in
cmc
cmc
inc
movsb
pop
lods
flds
cmp
mov
test
mulb
mov
andl
sub
gs
inc
xchg
scas
ret
cmpsb
aad
pop
shll
mov
lret
sahf
test
test
dec
out
mov
xrelease
in
fwait
out
lahf
sub
jno
xorl
mov
xorb
loope
cmpsl
out
xorl
push
imul
scas
dec
mov
scas
frstor
pop
out
gs
lcall
add
loope
and
bswap
xor
jecxz
cmp
add
cwtl
andb
scas
in
pop
imul
gs
xchg
mov
loope
insb
lods
add
sbb
pop
popf
sbb
in
aad
lds
xor
mov
in
mov
jno
icebp
and
xchg
out
and
pop
cmc
add
in
mov
aad
jecxz
adc
addl
rol
imul
xchg
mov
push
test
testl
adc
fistps
pop
cltd
mov
arpl
jmp
jp
lahf
outsl
rcl
or
cwtl
cltd
sub
movsl
mov
aas
adc
push
roll
outsl
fistpl
dec
cmc
cmpsl
ja
imul
pop
cwtl
shll
and
cmpsl
push
popf
lea
xchg
adc
mov
mov
imul
ret
add
sbb
arpl
cltd
in
test
lahf
mov
mov
stc
pushf
loope
mov
stc
dec
mov
insl
xchg
cmp
jb
adc
mov
or
int
sarl
in
popf
aas
dec
or
movl
insl
ja
popa
xchg
dec
mov
sbb
jmp
data16
xchg
insl
ret
in
adc
scas
mov
mov
arpl
loop
xchg
lds
sub
fidivl
shrl
or
mov
lods
das
lds
jmp
dec
test
aam
jl
or
add
scas
xchg
push
test
ret
sub
lahf
outsl
pop
test
gs
scas
inc
loopne
cmp
rcll
mov
add
inc
ljmp
mov
mov
ja
pop
cmc
mov
imul
scas
div
pop
inc
add
movsl
mov
rcrl
imull
jmp
xchg
xchg
add
and
cmpsl
push
jmp
jmp
je
repz
aad
repz
aam
inc
or
movsl
out
lahf
popa
ret
pop
loope
inc
insb
aaa
fnsave
std
out
cwtl
ja
pop
fildll
call
pop
imul
or
mov
mov
fldl
fs
mov
fmuls
loope
pop
int3
or
cmc
adc
pop
jmp
pop
enter
test
inc
xchg
push
pop
fwait
loope
inc
dec
inc
jp
sub
pop
inc
fadd
adc
adc
inc
adc
jne
or
lret
ret
jo
stos
out
shrl
int3
fistpll
cmp
jge
sub
mov
dec
cld
jae
dec
outsl
stos
xor
test
aam
pop
and
andl
jp
arpl
cltd
adc
in
out
xchg
lods
ret
dec
mov
push
sti
jecxz
loope
jae
cltd
mov
scas
sub
fsubl
sti
sub
and
addr16
loope
decb
mov
mov
jb
jmp
ret
xchg
movsb
insl
imul
jmp
lret
xchg
aad
call
pop
subb
xor
negl
xlat
mov
icebp
ret
cmc
dec
popl
iret
movsl
fwait
jmp
addr16
repz
shll
pop
pop
ja
push
repz
pop
insl
arpl
jg
mov
stos
mov
out
dec
scas
imul
hlt
fcoms
subps
inc
pushf
xchg
lds
dec
or
dec
loopne
jae
jmp
scas
add
loope
mov
sub
jne
lea
scas
add
push
sar
pop
test
cmp
and
out
aas
popf
aad
mov
testb
fisubl
fwait
das
mov
inc
js
out
rorl
adc
int
arpl
out
nop
fstp
int
aaa
mov
daa
and
xor
jecxz
test
push
loope,pt
out
std
outsl
imul
loopne
push
in
sbbb
dec
in
cmp
movl
iret
mov
add
jne
data16
mov
out
pop
mov
push
adc
jo
lret
jbe
adc
out
cmpl
movsl
fisttps
mov
xchg
outsb
sbb
add
in
adcl
fisubs
adc
movsl
iret
lret
xlat
loopne
jnp
ret
jecxz
xchg
out
xchg
mov
adc
int
jnp
jno
cmp
mov
sub
fisttpl
ret
sbb
call
mov
imul
out
and
outsl
add
mov
xchg
ja
lds
test
aam
vminsd
fmul
inc
inc
jle
jmp
iret
mov
pop
mov
gs
mov
push
sub
jge
test
or
mov
rorl
or
scas
push
mov
leave
outsl
jecxz
xor
arpl
inc
mov
test
add
insl
push
jo
mov
js
jae
out
test
popf
xchg
stos
or
xchg
or
addb
pop
xchg
cwtl
lcall
or
sbb
mov
lods
dec
mov
adc
fldenv
cmc
test
out
sub
stos
andl
mov
mov
add
rol
shr
cwtl
inc
in
enter
mov
imul
shll
fildll
ret
xor
insl
inc
fucomp
ret
sub
sbb
xchg
das
shll
mov
sub
and
cmp
enter
movsb
sub
shrl
dec
jmp
jmp
pop
fwait
pusha
adc
rorb
popa
daa
lea
xor
mov
popa
xor
fistl
jmp
jecxz
mov
insl
shl
lahf
sub
or
or
mov
mov
push
adc
lea
repnz
push
fldcw
pusha
std
xor
adcl
stos
lahf
push
addr16
cltd
lods
loopne
dec
push
add
xchg
pop
popf
xor
lods
insl
leave
jecxz
jg
xchg
pop
pop
lods
repnz
hlt
inc
or
mov
test
orb
lahf
loop
mov
push
jmp
mov
mov
mov
pop
or
add
jmp
insb
and
pop
mov
lock
popa
adc
jl
sbb
and
repnz
and
or
inc
inc
jg
lahf
repnz
test
mov
rorb
mov
clc
movsl
pop
fwait
push
push
ret
loope
imul
xor
arpl
in
dec
sub
test
jecxz
fimull
imul
roll
ja
sbb
fbld
imul
sbb
cmp
dec
insl
or
repz
mov
or
cmc
aas
sub
lret
jecxz
fstl
sub
push
negl
outsb
test
ret
adc
cmp
fcmovne
popf
loope
shll
out
fucomip
fsts
pop
rcl
adc
pop
into
push
loopne
test
xchg
mov
cmc
sbb
fisttpl
lods
popa
add
cmp
jmp
push
dec
adc
sub
aas
movsl
mov
divl
fldl
xchg
cmc
adc
adc
stos
add
mov
mov
adc
das
sub
sbb
rorb
add
cltd
mov
push
flds
dec
test
inc
mov
push
add
in
pop
sbb
mov
ja
rorb
push
test
fldt
xor
cltd
jmp
test
lods
push
imul
shl
aad
inc
mov
sarl
xor
mov
int
insb
ret
adc
adc
dec
and
ja
iret
rcrl
je
or
sbb
insl
popf
inc
cmc
pop
popa
sbb
loopne
adc
jmp
in
ljmp
fsubrs
push
xlat
and
popa
dec
lds
or
imul
in
jns
mov
add
sbb
fisttpl
xor
dec
cmp
xlat
stos
mov
push
or
fstl
mov
popf
xor
ret
xchg
imul
cmc
jmp
cmp
and
or
and
outsl
repz
and
pop
cmpb
cmp
leave
cmpsl
iret
mov
lret
repz
test
xchg
aad
xor
sbbb
sbb
scas
adc
pop
popa
and
xor
incl
mov
int3
adc
jecxz
scas
fiaddl
mov
leave
mov
xor
mov
pusha
notl
cmp
lahf
push
adc
and
int
inc
rol
jne
lret
arpl
pop
pop
cwtl
mov
addr16
mov
pop
mov
cmpsl
cs
pop
sbb
ret
fstpt
jecxz
cmp
imul
lods
cmp
repz
popf
lea
ljmp
gs
fidivl
xor
fists
add
mov
shl
arpl
movsl
out
cli
adc
test
adc
lahf
cmpsl
xchg
xchg
jmp
mov
adc
mov
xor
outsl
lahf
xchg
repz
cmpsb
shll
xor
sub
insl
into
ret
movsl
xlat
mov
jbe
xlat
mov
fs
fwait
mov
cmpb
dec
push
dec
xchg
and
jmp
lahf
push
sbb
in
mov
leave
xlat
fsub
mov
or
inc
xchg
cmpsl
push
adc
xor
jne
addr16
xlat
test
gs
add
ret
push
xchg
rcrl
inc
mov
fwait
into
in
inc
das
add
xchg
outsl
push
push
test
scas
imul
insl
rol
ljmp
push
cmc
pop
ds
pushf
sub
ja
jo
std
push
cmp
lds
into
repnz
scas
lods
xchg
mov
shll
lcall
testl
ja
pop
sar
outsl
out
cmc
loopne
xchg
pop
mov
out
mov
pop
jb
cwtl
sub
jne
psrld
jbe
popf
sti
in
cmp
dec
imul
push
fucom
cmc
cmpsl
js
iret
les
int
mov
lahf
test
xchg
lods
cwtl
mov
lret
sbb
fnsave
lock
mov
aad
cmpb
or
loope
inc
mov
mov
add
ja
cmpsb
test
cwtl
loope,pt
popa
popf
sbb
sub
mov
add
loope
fld
rorl
ljmp
test
leave
out
add
scas
push
fsubr
int
cwtl
repnz
xchg
fstps
cltd
jmp
mov
fisubl
cwtl
es
xlat
iret
mov
jmp
sti
sub
cmpsl
sbb
add
pop
ss
out
inc
enter
popa
inc
in
cmpsb
cmpl
pop
jge
inc
pop
inc
mov
jmp
jne
fwait
roll
gs
cwtl
jg
lret
mov
cmp
add
cmp
outsb
jne
dec
outsl
dec
lahf
popf
das
pop
movsb
pop
adc
cltd
pop
iret
mov
cmpsl
dec
push
stc
push
fs
mov
scas
inc
jg
fistps
js
jecxz
mov
mov
movsb
add
fldcw
mov
sbb
jecxz
negl
xlat
andb
lea
inc
xor
mov
sub
adc
jno
lret
and
fldt
xchg
scas
push
leave
mov
jbe
xchg
into
insl
cwtl
xor
test
imul
cmpb
dec
jne
test
fwait
lods
scas
js
movsl
shrl
jne
add
ja
and
mov
cmp
sub
cli
fwait
mov
or
outsl
xchg
jo
sub
cld
cmp
stos
loope
jae
xor
mov
inc
shll
mov
outsl
mov
cmp
mov
test
jo
clc
mov
push
jmp
pop
dec
push
xor
mov
pusha
xchg
mov
pop
xchg
leave
outsl
mov
popa
outsb
iret
add
rcrl
lds
leave
pop
fcmovnbe
mov
adc
fistpll
xchg
sub
sub
jmp
repz
inc
lock
pop
adc
and
inc
mov
aam
xchg
dec
test
sahf
dec
test
shll
sbb
and
mov
inc
imul
ficoml
popa
addr16
mov
fldl
pop
xchg
lahf
add
fistps
or
cmpsl
popf
imul
xchg
rcrl
stos
call
ja
in
cltd
fwait
das
xchg
fldenv
test
orl
mov
dec
jecxz
push
sub
adc
xlat
cmp
cmpsl
stos
cltd
mov
popa
mov
stos
and
lea
arpl
in
cmp
mov
mov
pop
push
mov
out
push
test
sbb
popf
cmc
mov
xor
fiadds
ret
jno
xchg
jl
loope
mov
cltd
jmp
push
adc
cmp
lds
dec
aad
daa
test
sub
xchg
pop
jecxz
inc
inc
out
xlat
int
xchg
in
jae
mov
ljmp
sbb
pop
jmp
je
xchg
mov
xlat
jo
stos
imull
hlt
mov
sbb
mov
mov
aam
test
mov
pop
xchg
mov
out
xor
sub
xor
sub
inc
std
pop
xchg
jecxz
sbb
mov
push
mov
int
dec
fwait
mov
pop
cmc
call
popa
mov
testl
jmp
cmp
mov
xchg
sbb
lahf
mov
dec
xchg
dec
jne
movsl
cs
out
cmpl
mov
pop
mov
clc
mov
gs
cs
sbb
jae
shrb
popf
iret
mov
inc
mov
ret
pusha
nop
inc
adc
repnz
dec
xchg
jmp
xor
orb
or
insl
dec
pop
ja
nop
mov
fwait
cltd
jle
outsl
xchg
dec
scas
add
in
sub
in
test
movsl
stos
ficoml
add
ret
rcr
rolb
sbb
in
xchg
mov
and
jne
dec
in
imul
lea
repz
sub
pop
test
arpl
xchg
int
sbb
or
mov
cmc
xchg
sbb
or
loope
out
mov
popa
cltd
xchg
sbb
jb
ret
out
mov
in
rol
sbb
lahf
xor
int
lods
xchg
add
xchg
ret
mov
icebp
cwtl
shl
aaa
arpl
aam
mov
push
sbb
or
sarl
cwtl
mov
sub
cli
jno
imul
xchg
orl
test
int
clc
pushf
jmp
pusha
lds
add
jmp
or
pop
mov
call
cmp
ret
fmull
in
inc
das
shl
addr16
dec
arpl
cmpsl
add
aad
call
sub
shrl
sbb
sbb
movsb
test
insl
jo
push
lea
movsb
fnsave
lret
inc
cs
xchg
stos
jmp
imul
add
scas
xchg
push
stos
or
cwtl
xlat
mov
lea
leave
fidivrs
hlt
mov
mov
xchg
dec
repz
adc
ret
xlat
mov
cmp
shl
xchg
mov
cmpsl
jmp
mov
xchg
loopne
es
sbb
shlb
fsubrl
das
insl
fsubs
leave
xchg
xchg
jg
cmp
jecxz
popf
jne
imul
fwait
xchg
out
mov
out
in
dec
mov
pop
pop
lahf
popf
add
push
or
push
cmp
int3
imul
xor
add
outsl
out
mov
and
out
mov
in
cwtl
out
lret
pop
mov
imul
fbstp
aad
xchg
xchg
leave
sbb
fldenv
push
jne
jae
push
push
xor
cs
pop
stos
call
gs
test
and
ja
jmp
xorl
sarl
andl
push
int
ljmp
aad
andb
sahf
mov
daa
leave
popf
mov
pop
sbb
mov
insl
jle
inc
lds
cwtl
mov
fnsave
gs
mov
xlat
dec
movsl
shr
jo
sbb
mov
out
jno
ja
push
mov
xor
ss
mov
add
mov
subl
sub
in
cmpsl
adc
cmc
and
push
fsubrl
sbb
mov
test
addr16
cli
sbb
push
sub
pop
dec
in
adc
mov
xlat
pop
or
leave
aad
or
fmuls
adc
adc
cwtl
or
lahf
js
out
shr
faddl
jl
rcl
rorl
xchg
xchg
scas
push
mov
inc
lahf
rcll
cltd
fwait
xchg
clc
movsl
jmp
jecxz
aad
dec
push
lahf
out
xor
fucom
jl
xorl
sbb
mov
rcrl
sub
jecxz
push
test
aaa
xchg
cmpsl
aam
dec
stos
pop
jns
cmc
lahf
mov
mov
iret
cld
pop
rol
xchg
cmp
dec
cmp
shr
sub
call
popf
or
mov
xchg
mov
addr16
xchg
or
out
cwtl
sbb
sub
movsl
dec
shll
rcrb
cld
or
ss
mov
dec
mov
push
xchg
leave
nop
dec
cmp
xor
loope
ljmp
js
mov
xchg
insb
push
mov
push
xchg
add
cmc
loope
push
cmpsl
mov
push
xor
xchg
fsubr
xlat
push
inc
cli
lods
pop
add
and
xchg
pop
jmp
xchg
add
stos
cltd
push
sbb
out
orl
xchg
gs
fbld
mov
adc
iret
and
das
lret
insl
fistpl
imul
in
cld
sar
xchg
cmp
gs
mov
xlat
jae
xlat
mov
rorb
rcr
inc
cli
aad
and
leave
cmpsb
sub
mov
addr16
andl
cwtl
mov
mov
mov
pop
sti
imull
loop
push
push
adc
insl
aad
testb
mov
fs
out
stc
and
jne
xor
ja
scas
in
add
imul
cmpsb
adc
outsl
shll
popa
rcrb
dec
lods
lret
push
std
fdivs
jo
fucom
mov
push
pop
sti
inc
adc
jnp
rorl
mov
jae
sbb
scas
test
div
add
popa
mov
jo
das
adc
mul
cmc
xchg
cwtl
not
mov
fcmovne
jg
fwait
push
arpl
jmp
mov
cmp
mov
jmp
xchg
or
jne
ret
rcrl
stos
push
cwtl
lods
mov
ret
xlat
xrelease
faddl
xchg
xchg
stc
clc
and
gs
flds
aaa
in
sbb
fisttpl
test
out
out
popf
stc
mov
mov
xchg
imul
jp
fistpll
mov
cmc
jnp
imul
cwtl
ret
outsb
rolb
mov
cltd
popf
shrl
test
stos
mov
popl
test
cmp
or
insl
cltd
mov
push
jae
ds
lods
call
fwait
pop
cmp
test
cmpsl
movsl
pusha
xchg
pop
imul
ret
in
mov
rorl
mov
fisubrl
lret
mov
sbbb
imul
fs
test
stos
hlt
in
stos
js
lea
mov
psrlq
test
mov
cmp
lahf
fistpll
aad
in
outsl
pop
fcoms
lret
cmpsl
jecxz
pop
rolb
in
and
bswap
out
fdivs
cmpsl
loope
mov
ret
fbstp
cmp
popa
dec
jmp
scas
cld
cltd
push
sub
mov
xchg
cwtl
iret
lret
jecxz
dec
dec
fisttpll
push
fld
add
push
cmpsl
mov
popf
imul
lret
gs
cmpsl
cmp
and
fstps
sti
or
popa
xchg
inc
mov
out
or
cwtl
popf
sub
and
sbb
imull
mov
cmp
inc
inc
clc
test
ffree
rcl
lock
fstps
adc
xchg
push
xchg
pop
jo
mov
data16
outsb
pop
xchg
jo
in
xor
outsl
mov
in
pop
jne
lahf
imul
push
jne
iret
mov
push
gs
pusha
adc
aad
mov
push
lret
movsl
daa
push
lret
lds
cmc
sbb
mov
imul
test
cld
imulb
fidivrs
pop
idivl
fsubl
rcr
icebp
mov
pop
stc
mov
push
mov
fiaddl
shll
or
xchg
add
cld
ljmp
and
adc
in
pop
scas
pop
arpl
shlb
or
dec
in
push
out
aas
lahf
scas
int3
or
mov
cmp
dec
test
iret
adc
gs
inc
shlb
imul
imul
setnp
andb
hlt
lds
mov
mov
or
push
cmc
jmp
iret
dec
xchg
jns
imul
mov
add
jmp
cmp
outsl
popa
cwtl
and
and
aas
push
mov
fldt
cmc
sbb
leave
incb
sbb
iret
cltd
adc
add
gs
test
fldl
ja
in
mov
mov
sub
gs
les
cmp
xchg
loope
fidivrl
pop
pop
out
fildll
pushf
mov
xchg
addr16
mov
xchg
xchg
mov
call
rcr
mov
add
mov
test
xor
sets
lahf
mov
cmp
lret
repz
adcb
mov
stos
cltd
jle
add
lds
rcr
mov
insl
in
leave
loop
andb
clc
in
out
fwait
shll
pop
dec
dec
dec
testl
add
movsl
leave
adcb
test
das
jnp
xor
inc
addb
int
add
fists
andl
aam
les
mov
shrw
lods
popa
ljmp
shll
adc
imul
scas
ja
jno
xchg
movsl
hlt
xlat
lahf
lahf
outsl
xor
in
iret
push
fisttpll
mov
jmp
push
movsl
test
cmpsl
xor
js
and
fwait
sbb
mov
cltd
test
lods
out
sub
sub
xor
in
pop
cmpsl
lret
fwait
jno
sbb
mov
and
mov
call
cwtl
xor
mov
fstpl
push
pop
push
pop
popf
jmp
out
pop
fwait
stos
jns
sub
daa
inc
push
adc
sub
in
adc
mov
scas
xchg
test
cld
adc
xchg
movsb
or
cmc
out
push
popa
fwait
or
lds
push
in
jecxz
mov
outsl
jp
loop
hlt
icebp
sub
imul
in
mov
mov
xor
adc
adc
jecxz
pop
loope
fdivr
hlt
rcrl
cmpsb
popf
lds
xchg
je
jmp
addr16
mov
xchg
out
xchg
mov
out
push
mov
sub
or
mov
iret
shll
in
ficompl
cltd
and
clc
ljmp
mov
aad
addb
lods
out
cwtl
inc
in
pop
ljmp
ljmp
lret
leave
jo
neg
or
adc
pop
sbb
pop
insl
rorl
aad
loope
push
mov
add
imul
stos
sub
lods
lahf
int
leave
aad
in
int3
subl
scas
sbb
sub
ja
roll
xlat
lds
outsl
js
pop
lods
jle
lea
roll
jo
movsl
pop
adcl
ret
xchg
iret
mov
test
shrl
fstpt
out
mov
add
push
push
popf
lahf
loope
aaa
mov
adc
outsl
sub
xchg
movsl
cmc
mov
clc
xchg
in
push
mov
mov
sahf
dec
out
addr16
in
aad
pop
or
pop
cmc
insl
xchg
addr16
int
push
imul
repz
cmp
js
cmp
mov
pop
inc
xchg
not
sub
lcall
sahf
mov
sub
sub
push
lret
jmp
daa
sahf
push
xchg
xchg
jae
sub
pusha
xor
aaa
push
ret
lahf
pop
jnp
insl
push
mov
out
xchg
lret
in
fldt
aas
arpl
testl
jl
xor
popa
mov
push
div
outsl
imul
inc
pop
fcoms
xchg
sbb
mov
xchg
adc
into
mov
inc
sbb
mov
mov
popa
fld
aas
fnsave
ffree
iret
lahf
lds
jne
push
and
mov
sbb
xchg
push
mov
gs
inc
scas
out
in
or
popf
out
add
insl
or
or
adc
cmp
test
cmpsl
test
out
repz
mov
int
cmp
imul
ret
rcrl
roll
lahf
ror
arpl
mov
sub
add
jecxz
arpl
hlt
push
loope
andb
mov
pop
push
dec
adc
loope
xchg
mov
rcr
sti
adc
iret
imul
jecxz
aam
cmpb
add
out
adc
cmc
cltd
mov
jne
xor
ret
or
xchg
int
xlat
lret
add
mov
xchg
mov
js
stos
stos
cmp
out
jae
dec
in
negl
test
fwait
or
jge
stos
orl
imul
rcll
fucomi
xor
into
and
add
rorl
xchg
rcpps
cmp
sbb
test
loope
popa
fwait
mov
mov
jecxz
mov
insl
and
pop
xlat
add
mov
scas
or
mov
rorb
in
testl
mov
out
lods
jmp
shrb
mov
lods
addr16
jae
into
mov
cwtl
neg
out
add
arpl
lcall
cwtl
xor
in
lods
mov
scas
fwait
iret
cwtl
cld
out
sub
mov
fsubr
sub
mov
lcall
xlat
adc
cmpsl
mov
and
jmp
iret
xchg
repz
insb
stos
fs
xchg
sbb
loopne
jae
ret
ja
push
add
rcrb
stos
fbld
dec
push
jne
outsl
push
jg
mov
iret
cmp
lret
shr
xchg
sub
ja
call
insl
jne
int
test
adc
loope
mov
xor
xor
jne
adc
test
fistps
mov
fadds
fisttpl
mov
lods
xchg
test
sub
pushf
jecxz
jecxz
dec
fmull
cmc
mov
mov
add
sub
cmp
arpl
popf
les
xlat
in
mov
sub
dec
imul
sub
imul
push
jns
jbe
outsb
imul
lcall
push
ja
inc
pop
pop
dec
into
lds
insl
pop
lds
inc
cwtl
outsl
pop
lds
sbb
iret
cmc
jmp
adc
rorl
in
imul
push
sbb
int
outsl
ja
inc
sbb
fwait
lods
sub
or
jg
sub
int
call
rol
in
leave
shrb
sub
jge
dec
out
mov
push
sub
lahf
fsubr
jp
lock
fistpl
cmp
mov
pop
stos
jo
and
gs
mov
pop
mov
xor
nop
adc
leave
mov
mov
or
add
cwtl
out
mov
out
in
xchg
pop
stos
add
jmp
fsubr
fistpl
outsb
cmpsl
sbb
fucom
push
addr16
cmpsl
sbb
repz
or
fnstsw
and
push
stos
adc
sar
and
or
xor
inc
lret
test
xlat
clc
xchg
inc
xor
fs
movsl
cltd
std
pop
or
push
in
push
fldcw
adc
inc
cmp
push
xchg
rcr
subb
lea
xchg
xchg
aam
lods
dec
insb
imul
mov
mov
outsl
mov
les
subl
add
leave
testl
imul
out
orl
outsl
leave
sbb
xlat
mov
lods
test
into
scas
orb
cmp
iret
mov
outsl
push
in
mov
adc
js
scas
fldt
in
outsb
jne
mov
xlat
repz
insl
jno
cmpsb
jecxz
push
gs
add
ror
jle
xchg
xchg
aam
adc
jae
enter
stc
push
rclb
out
jmp
mov
sbb
sub
data16
xchg
lock
imull
aam
imul
in
iret
mov
pop
out
rcrl
sarl
pop
lret
cltd
xchg
pop
movsl
xorl
cmpsl
test
xor
mov
cmc
mov
push
out
test
lea
idivb
jmp
mov
notl
sbb
loop
out
lret
jecxz
repz
addr16
movl
frstor
inc
mov
loopne
dec
lock
dec
adc
aad
or
lds
imul
aaa
xchg
sub
push
fnstsw
sub
fsubrs
gs
mov
out
das
or
xchg
sub
inc
bound
pushf
in
jmp
jmp
out
or
fwait
scas
stos
xchg
test
jns
jne
xchg
out
insl
push
jne
ljmp
xor
sbb
and
jne
mov
jo
mov
and
daa
or
loope
sbb
cmp
and
mov
jne
push
fwait
iret
das
dec
stc
ja
std
mov
and
iret
mov
xchg
mov
popf
xor
lret
in
cwtl
cmpsl
mov
add
push
imul
push
adc
mull
jp
lods
fildl
xchg
ljmp
cmp
push
jmp
lea
mov
lea
push
adcl
leave
mov
dec
xchg
mov
add
stos
fists
sbb
cmp
leave
rorl
rorb
adc
in
gs
jae
mov
jle
jmp
icebp
mov
ret
push
jmp
out
scas
fcomi
orl
cmpsb
mov
mov
cwtl
sub
cmpl
mov
push
xchg
in
sub
adc
int3
fwait
lods
or
js
sbb
or
movsl
stc
mov
outsl
hlt
test
or
inc
je
cmp
ja
mov
mov
adc
test
aas
inc
iret
roll
addl
mov
jl
dec
shl
jg
lds
cmc
imul
je
inc
int
outsl
cmc
outsl
or
ret
xchg
ja
out
aad
mov
jle
lcall
or
popf
cltd
xor
inc
jge
fwait
dec
cwtl
iret
pop
jmp
cmp
jecxz
imul
cli
pandn
mov
mov
dec
mov
lods
inc
adc
add
xchg
out
shl
gs
lods
std
aam
xorl
dec
ret
mov
lret
lea
rcrl
insl
mov
out
xchg
outsl
mov
and
adc
daa
lea
adc
sub
xchg
mov
fadd
sbb
repz
test
fucomip
lahf
cmpsl
adcl
popa
test
pop
jae
and
jecxz
fidivs
jno
lahf
in
aad
aaa
sti
mov
fst
xchg
inc
inc
popf
scas
xlat
hlt
cmp
mov
sub
or
loopne
out
aad
cmpsl
add
jmp
neg
addr16
jns
and
iret
cmpsl
dec
fnstenv
mov
jle
insl
out
fwait
ja
pop
cwtl
sarl
imul
call
dec
repz
pop
rol
sub
and
and
sub
fmuls
xor
ret
add
addl
rorl
pop
bound
js
ja
cmp
out
mov
cli
jge
ret
adc
lret
mov
addr16
in
shrb
lret
aad
add
movsl
xchg
testb
mov
outsb
sarl
leave
pusha
pop
and
jo
dec
jmp
lret
test
mov
cmc
std
mov
fwait
sub
sub
xchg
cmpb
push
gs
jmp
int
aam
outsl
or
and
dec
dec
ja
test
adc
and
lahf
jo
je
or
repz
push
sub
outsb
ret
lods
lds
sub
and
gs
imul
jmp
rcrl
xlat
out
imul
int
jmp
fistl
mov
negl
lahf
lret
or
mov
jmp
inc
sbb
cwtl
mov
inc
adc
movb
sbbl
aad
int
ret
repz
mov
mov
lds
sub
je
popa
hlt
fbld
sub
lret
fwait
add
insl
xchg
roll
push
sbb
in
cmp
adc
pop
cmpsb
jecxz
loope
mov
inc
stc
fwait
xchg
das
cmpsl
push
dec
jmp
mov
sub
repz
frstor
xchg
pop
sbb
cmp
fbstp
fdivl
add
cmp
adc
lret
popf
fmul
ja
mov
shll
out
xor
cmp
lret
cld
push
lret
lds
jnp
lahf
les
xchg
cltd
mov
sbbl
fwait
sub
cmp
rcl
jle
sub
pop
aam
imul
add
fwait
inc
out
cmp
popa
mov
and
adcl
stos
jo
cmpb
xlat
push
ss
xor
adcl
ja
in
or
testb
xchg
or
leave
mov
out
inc
mov
add
das
pop
add
inc
mov
lods
inc
push
out
xorl
sti
out
cwtl
xor
cmp
shl
sub
push
movsl
shr
or
mov
fsubs
jne
fldenv
push
outsl
in
mov
clc
jae
pop
rorl
inc
and
xor
jmp
mov
movzbl
cwtl
in
cli
stc
adc
jecxz
in
mov
std
lahf
cmpsl
nop
adc
mov
adc
mov
and
add
fstl
imul
lret
and
sub
lahf
adc
sbb
hlt
pop
jnp
loope
orl
shrl
fcmovbe
inc
xchg
jp
stc
mov
inc
aad
add
popf
leave
subl
jle
insl
push
scas
jmp
sti
add
repz
xchg
insl
cwtl
mov
inc
out
shl
cltd
mov
or
fcmovu
fistpl
ss
subl
negl
pop
lock
push
fsubs
xlat
xchg
jne
pop
and
fwait
out
insl
adc
ds
pop
pop
or
aad
mov
in
sbb
jl
push
mov
lods
leave
jmp
shr
movsl
stos
mov
call
ret
out
stos
sub
xlat
fwait
sub
cmp
xchg
fsubrl
stos
scas
lea
imul
repz
lods
adc
add
neg
int3
or
lahf
fstcw
xor
cmc
fistpl
je
loop
outsb
cwtl
add
xchg
fisubrs
jl
and
cmp
std
mov
and
test
pop
shlb
ljmp
xchg
test
enter
outsl
in
cltd
mov
popa
mov
xor
in
out
test
test
lahf
int3
incl
jmp
jmp
and
push
ror
popf
insl
jmp
sti
test
lds
mov
gs
push
cwtl
mov
stos
xchg
jne
cmp
xor
pop
and
test
mov
cld
lahf
jle
jle
fldt
mov
push
xchg
ror
testb
sbb
mov
mov
lahf
lret
cmp
cmpsb
adc
add
popa
cwtl
out
push
fcmovnb
and
mov
sbb
lcall
cmc
mov
xchg
call
mov
stos
addl
cmp
test
mov
jl
fisttpl
sti
scas
movsl
add
pop
mov
pop
mov
and
mov
sub
fildl
pushf
dec
in
mov
imul
movsl
int
call
mov
xchg
sarl
cmpsb
push
push
mov
and
mov
cltd
xchg
outsl
in
jae
pop
mov
ja
idivl
cltd
lock
test
movsl
xor
imul
divl
add
fildl
lds
scas
mov
fstpl
arpl
sti
lret
push
lahf
and
pop
cmpsl
mov
mov
int
push
cmp
mov
sbb
aad
lret
addr16
pop
pop
ljmp
imul
sub
dec
add
popa
ret
dec
scas
jns
aaa
jecxz
test
gs
js
lahf
cltd
mov
xor
out
ret
pop
lcall
dec
jecxz
aad
dec
mov
or
mov
mov
dec
in
psraw
mov
and
dec
add
jg
iret
test
cmpsl
or
dec
scas
fwait
or
push
lret
aas
ret
cmpsl
subl
test
stos
ja
nop
dec
xchg
ja
fistl
xchg
jge
lcall
lahf
xlat
fnsave
daa
int
ja
sarl
push
lds
mov
addr16
dec
cltd
int
int3
mov
fcomi
mull
lds
arpl
in
nop
xchg
mov
mov
test
cmp
sarl
rcrb
lds
jp
ret
in
mov
adc
iret
subl
mov
js
cwtl
arpl
lods
xchg
lahf
sbb
loope
das
mov
mov
cltd
add
lea
gs
nop
xchg
insl
mov
out
cwtl
sbb
in
xchg
jmp
loope
xlat
cwtl
jmp
imul
jne
pop
add
scas
fnstsw
xor
lods
sahf
adcl
in
repz
fwait
out
fisttps
clc
cmp
loopne
cltd
mov
jne
xchg
outsl
jns
cmp
sub
test
out
movl
addr16
cmpsl
popf
outsl
daa
sbb
add
mul
out
aad
leave
ficoml
test
movsl
sbb
cmp
mov
sbb
push
jae
inc
pop
xchg
lahf
pop
imul
mov
mov
shlb
scas
movsl
mov
lds
and
sub
lahf
sub
or
fldl
stos
mov
xor
adc
scas
in
aaa
add
lea
cltd
aad
movsl
je
pop
push
mov
add
testl
dec
stos
fiaddl
andl
jmp
popl
adc
jecxz
stc
mov
jg
mov
cwtl
xchg
jne
sti
add
arpl
cmpsb
adcl
leave
mov
ds
lods
add
imul
mov
stos
cld
pop
popf
push
xorb
or
loope
or
ja
xchg
in
cltd
cmpsl
sti
out
xchg
scas
out
pop
sbb
test
sti
mov
addr16
outsb
mov
sub
cwtl
mov
out
das
mov
xchg
clc
jno
cmc
mov
push
rol
test
test
ja
popf
test
xchg
lods
repz
xchg
fildl
popa
lods
xlat
or
mov
xchg
out
pop
imulb
in
mov
ret
pop
jmp
adc
andl
loopne
in
push
sub
popa
mov
movsl
repz
push
mov
xchg
cmc
cwtl
shlb
jmp
ret
js
movsb
sub
and
mov
pop
lds
cmpsb
xor
imull
lahf
jle
sbb
push
flds
rolb
jns
sbb
xor
js
cmp
pop
xlat
ret
cli
lds
sbb
imul
xchg
ja
popa
add
jmp
scas
mov
in
enter
xchg
fwait
outsl
mov
dec
adc
icebp
fbld
jmp
mov
push
sub
pop
mov
repz
mov
xchg
pop
stos
cltd
inc
out
in
in
popa
popf
lods
movl
shl
in
fwait
cmc
rorl
imul
fld1
imul
das
cmc
jne
sarb
ja
jmp
inc
mov
rorl
jbe
fildl
sarl
arpl
rolb
aam
jae
mov
aaa
jecxz
fistpl
je
dec
mov
add
insl
popa
fwait
xchg
clc
xchg
test
or
push
or
out
enter
add
in
jmp
out
jno
or
xor
loope
and
test
leave
xchg
stos
int
and
and
sub
adc
mov
sbb
add
outsl
out
xchg
xor
adc
lods
fldenv
gs
fwait
mov
inc
fstpt
iret
arpl
pop
lahf
mov
mov
sbb
in
arpl
loope
push
mov
inc
cltd
iret
mov
inc
xchg
mov
pop
push
ljmp
ja
aas
pop
sub
cmp
lahf
add
lods
mov
in
cmc
lods
ret
and
out
push
fldenv
jge
xchg
ljmp
dec
adc
movsl
add
iret
cwtl
int3
outsl
xchg
add
lods
jmp
out
lds
cltd
and
stos
pop
xor
repz
mov
insl
mov
jb
inc
sub
pop
mov
cwtl
imul
insl
stos
out
jne
xchg
jmp
repnz
pop
xchg
popf
fbld
pop
int
loopne
fwait
in
cmpsl
xchg
add
inc
pop
loop
jno
lahf
out
push
rcl
test
cwtl
add
out
test
jno
pop
mov
orl
mov
sarl
mov
jle
mov
jle
rcrl
test
loope
test
adc
adc
arpl
insl
lock
pusha
in
aad
popa
ja
out
scas
out
lret
jp
sub
mov
push
in
enter
xor
xchg
sub
push
adc
fwait
out
sbb
fisubrl
push
stc
pop
sahf
pop
fistpl
push
sbb
test
in
in
scas
inc
ret
inc
dec
cwtl
add
mov
out
mov
movsb
repz
testl
cmc
scas
fwait
js
loope
sbb
insb
cmp
imul
xchg
out
ffree
mov
mov
xchg
scas
lds
enter
stos
popf
mov
mov
xor
adc
push
scas
shl
fwait
leave
jne
cwtl
add
sti
mov
sbb
lahf
subl
into
out
mov
mov
or
movsl
sbb
stc
loopne
or
sar
cmp
lea
mov
pusha
mov
jns
imul
pop
cmp
xor
mov
sbb
movsl
popf
rorb
mov
jnp
in
mov
ret
push
cli
sbb
das
dec
out
cmp
add
int3
dec
sbb
repz
int
pop
aad
test
xlat
mov
ljmp
addl
repnz
popa
cmpsb
pop
lods
xchg
adc
dec
jnp
add
cltd
fildl
lea
sbb
daa
fisubrl
xchg
adc
aad
out
sarl
ljmp
scas
test
or
ret
cltd
mov
mov
je
outsl
mov
iret
out
dec
add
enter
mov
add
pop
jmp
mov
insl
repz
mov
ret
mov
mov
lds
add
ja
pop
idivl
mov
hlt
mov
inc
js
fldpi
cs
mov
pop
jne
leave
mov
lods
push
scas
or
mov
lds
dec
mov
pop
push
push
mov
scas
xchg
movsl
xchg
fldcw
fwait
mov
into
ret
dec
pop
jae
dec
fsubp
dec
aam
test
add
arpl
cmp
xchg
mov
ret
jo
mov
in
popa
cmpsl
adc
pusha
mov
push
pop
mov
in
imul
leave
lds
fbld
adc
stos
stc
cmp
fwait
jmp
xchg
arpl
mov
cmp
lahf
in
pop
fiaddl
popf
stos
cmpsl
mov
jp
cmp
mov
cmpsb
outsb
add
rol
lock
aad
sub
sub
filds
adc
icebp
in
push
aaa
fwait
dec
jns,pn
xchg
xchg
mov
jno
cmp
scas
les
shll
sub
push
sub
sub
scas
cmp
outsb
int
cwtl
andb
lds
andl
loope
inc
push
repz
pop
mov
les
add
cmove
mov
cmc
enter
xor
leave
rol
in
or
imul
imul
adc
jne
add
scas
mov
fisubrl
imul
sbb
xlat
mov
fucomp
flds
fwait
cltd
add
sar
dec
sub
sbb
cmpsb
out
ret
cmp
test
imul
xlat
enter
in
mov
sub
test
jmp
rcll
cli
adc
push
lds
lea
popa
cltd
push
xchg
push
fs
test
mov
mov
dec
jmp
dec
cmp
popa
pop
add
adc
hlt
fldcw
push
sub
fcmovnbe
or
mov
mov
push
jno
mov
cmpl
or
popa
adc
mov
sbb
movsl
fistl
in
arpl
fs
insl
mov
xor
imul
adc
stos
xor
pop
repz
ja
cli
int3
mov
and
adc
push
addr16
jne
scas
fnstenv
xor
roll
mov
mov
cmc
testl
jmp
out
cmp
cwtl
jg
dec
pop
ror
pop
mov
xchg
adc
scas
xor
mov
push
popf
push
xchg
addr16
in
fxch
xchg
in
dec
push
aam
out
lahf
push
cwtl
cwtl
ret
in
xchg
int
adc
subl
pextrw
push
ja
arpl
ljmp
iret
jne
fwait
shll
imul
cmpsl
ja
out
jne
pop
jecxz
jae
daa
xor
mov
std
and
adc
sarl
cwtl
in
sub
mov
push
or
incb
sbb
sbb
insl
inc
in
fstl
xchg
xchg
cmp
pop
mov
cltd
scas
fisubrl
inc
roll
mov
repz
xchg
xorl
ljmp
fisttpll
fmulp
jecxz
lahf
shrl
jmp
in
pop
imul
add
sti
add
orl
mov
mov
xor
outsl
dec
adc
pushf
insl
push
jne,pn
aas
imul
lahf
scas
mov
mov
inc
sub
lret
cmpb
push
lds
fwait
aam
mov
out
pop
push
mov
adc
inc
in
jmp
fwait
out
xchg
flds
ffreep
mov
fsubs
call
scas
and
sub
adc
push
popf
fistpll
aad
roll
jg
lahf
repz
imul
orl
cltd
lds
arpl
dec
in
jle
shl
fwait
mul
shlb
ffree
fldt
rolb
mov
scas
and
cwtl
mov
addr16
jge
out
jg
sub
sbb
arpl
or
movsl
fstl
add
rcr
mov
stos
mov
rcrl
inc
jmp
stos
add
ret
cmc
lea
rorl
scas
xchg
orl
push
shr
iret
orl
cld
cmc
fsubs
call
negl
gs
aad
cmp
out
mov
mov
stos
test
adc
prefetcht1
movsl
mov
push
and
insl
fiaddl
aam
jns
xchg
jmp
in
fwait
outsb
clc
mov
mov
addr16
jecxz
jmp
adc
cld
outsl
xor
xor
push
bswap
cmpsl
push
cmp
mov
out
pusha
xor
sub
lret
lods
lods
ss
fsts
and
mov
in
inc
dec
cwtl
fildll
mov
xor
sub
iret
cli
pop
fdivl
mov
jmp
pop
andl
fsubrl
addr16
pop
cvtpi2ps
shl
lds
xchg
aad
push
mov
adc
insl
imul
outsb
xchg
aaa
into
lcall
jg
rcll
mov
stc
sbb
mov
sbb
jns
cwtl
mov
xor
lock
int
mov
dec
outsl
arpl
push
jbe
popa
push
outsl
out
stos
jp
mov
jecxz
pop
pop
sbb
jecxz
aad
ret
adc
mov
lds
int
aaa
test
mov
sti
ja
leave
lock
insl
pusha
mov
xor
pop
fistpl
jecxz
enter
sbb
lea
jns
adc
fldt
lahf
xchg
cmpsl
mov
popf
dec
mov
cmp
adc
or
outsl
jo
lds
mov
lret
popf
mov
lock
andl
jmp
arpl
xchg
adc
shll
mov
iret
in
push
mov
adc
inc
fmul
add
mov
inc
out
and
jae
pop
test
ror
loope
mov
xchg
ret
jo
int3
add
int3
fistps
gs
pop
xlat
lock
sub
lret
scas
xchg
clc
leave
out
push
lahf
movsl
dec
lock
scas
fbld
xchg
outsl
mov
cmpsl
sbb
cmc
in
orl
js
xor
test
mov
shll
pop
jg
loope
fldl
cltd
stos
repz
sti
aas
and
or
xchg
pop
sbb
std
popa
pushf
aaa
lahf
push
mov
sbb
in
mov
lods
jmp
adc
out
adc
pop
std
insl
inc
test
sub
test
clc
fs
xor
sub
lret
mov
pop
stc
fcomp
movl
fnstenv
fiaddl
iret
xchg
jecxz
xchg
mov
add
jmp
scas
sbb
stos
js
sar
mov
fsubp
out
push
add
gs
pop
mov
xchg
lds
mov
xor
rcrl
cmpsl
jne
mov
inc
mov
aam
cli
sbb
shll
fucomi
insl
stos
push
jae
out
cmp
cmc
shl
cltd
addr16
in
push
ljmp
lds
rcrl
arpl
adc
roll
mov
sbb
mov
outsl
lods
xchg
lock
stos
ds
jne
daa
mov
jne
cmp
pop
stos
insb
jnp
fbld
mov
mov
sahf
cld
cmp
pushl
mov
xchg
fincstp
leave
jecxz
sbbl
adc
mov
cmpsb
cwtl
fdivrs
sub
jmp
lds
jns
xor
mov
lea
rcll
fisubl
pusha
aas
mov
xor
int3
js
pop
lret
loope
iret
ret
popa
ja
jnp
pop
adc
fnstcw
jg
out
xchg
adc
push
movsb
lods
add
lahf
shrb
cmp
in
pop
cmc
out
repnz
ret
mov
pop
out
mov
gs
jmp
mov
inc
cmpsl
pusha
sbb
add
jmp
sbb
repnz
stos
mov
imulb
in
xchg
iret
in
out
push
adc
gs
lcall
lock
lahf
push
das
cwtl
xchg
adc
or
fbld
stos
addr16
xchg
and
ret
imul
or
mov
dec
rcl
daa
dec
out
in
jno
jge
movsl
shll
push
gs
mov
xchg
ja
out
pop
cli
dec
jle
sarl
in
dec
pop
push
das
aas
lds
mov
lea
notl
adc
ja
imull
mov
int
xchg
adc
xor
xchg
jecxz
adc
loope
jg
addr16
inc
fcmovnbe
mov
pop
in
xchg
fistl
das
lea
jne
and
lahf
push
add
pop
sbb
jecxz
aas
repz
xchg
aam
js
popa
lea
cmpsb
mov
inc
mov
negl
inc
xor
jmp
mov
lods
mov
cmp
int
es
mov
or
mov
outsl
imul
arpl
flds
out
lret
lods
rorl
iret
movsl
push
or
scas
out
mov
xchg
popf
idivl
xchg
loop
arpl
jbe
bswap
cmpsl
add
cwtl
lock
mov
cmpl
sub
out
fcomip
into
stos
negl
dec
leave
sbb
popf
cmpsl
std
adc
inc
xchg
fxam
mov
inc
insb
cmovge
loop
int
cs
gs
adcb
pop
xor
xchg
mov
inc
sub
dec
sub
xor
ficoml
repz
scas
lods
frstor
or
jne
mov
call
les
xchg
imul
push
lahf
inc
dec
mov
pop
lods
addl
arpl
mov
aas
popf
mov
cltd
lret
out
ja
xchg
fldenv
mov
lods
aas
das
mov
imul
iret
sub
jbe
xor
mov
movsl
pushl
shll
insl
arpl
mov
dec
pusha
out
aaa
push
xchg
mov
dec
sar
outsl
cwtl
scas
cmp
test
dec
iret
ljmp
xor
inc
inc
imull
pop
shrb
addr16
sub
xorb
rolb
push
dec
inc
jge
fisubrs
push
lods
add
fs
sbb
test
jle
xor
leave
fadds
adc
lahf
lea
sbb
sbb
ret
and
cwtl
mov
mov
call
jae
andl
push
dec
inc
inc
add
jae
ret
pushf
sub
js
or
data16
in
repz
pop
cmpsb
pusha
movsb
insb
xor
sbb
ljmp
add
outsl
stos
xchg
ljmp
cwtl
repz
xor
cltd
dec
dec
xor
mov
xchg
dec
dec
jnp
xor
cs
xchg
dec
std
insl
xor
and
xor
push
dec
loopne
xor
fwait
xchg
xchg
mov
pop
in
repz
jmp
push
inc
scas
cmpsl
jmp
ds
mov
mov
dec
lea
subl
sbb
jp
mov
mov
cltd
fcompl
add
adc
mov
out
sub
popa
test
pop
jne
icebp
jnp
cltd
insl
jb
add
xchg
xor
adc
and
xchg
lods
scas
inc
xchg
jmp
in
jge
cmp
jmp
loope
mov
gs
popa
mov
jle
cld
out
jno
mov
jmp
cmp
push
xchg
push
imul
mov
ror
ret
cmp
mov
jp
ljmp
lea
xchg
push
push
mov
ret
test
cltd
xchg
push
ljmp
js
lods
mov
iret
dec
shl
test
ljmp
enter
movnti
xchg
cwtl
or
gs
loopne
fisubs
outsl
arpl
adc
mov
xchg
xchg
sub
enter
aas
shl
filds
xlat
inc
xor
mov
in
cltd
outsl
jl
sbbl
roll
orl
or
cmp
xor
adc
movsb
popaw
fstps
mov
ret
addl
pmullw
jo
in
jno
lods
fwait
dec
dec
add
loope
cmpsl
ljmp
sbb
fldl
iret
dec
repz
lahf
push
dec
cld
pop
mov
test
cmp
mov
cmp
pop
subb
iret
pop
ljmp
outsb
xchg
out
jecxz
scas
adcl
test
outsl
dec
lea
roll
mov
ja
xlat
test
mov
and
outsl
das
cltd
jecxz
aam
iret
pop
fmuls
insl
mov
jmp
addl
jmp
ret
push
notl
xor
dec
mov
xchg
push
cmpl
faddp
sbb
sahf
addb
xchg
mov
popa
fcmovnu
repz
shlb
cmpsb
frstor
jb
arpl
js
subl
in
aam
mov
xor
inc
push
xchg
xchg
jecxz
mov
adc
or
sbb
pop
popf
aad
mov
sub
nop
mov
jno
xlat
xchg
push
adc
jno
scas
mov
out
arpl
repz
fstp
dec
cmc
movsl
pop
jae
outsl
mov
jmp
xchg
idivl
iret
and
xchg
adc
jecxz
insl
sub
gs
or
imul
mull
arpl
push
push
mov
loope
adcl
cmp
imul
or
faddl
mov
lods
ja
outsl
xlat
xchg
pop
rcrl
cwtl
jmp
push
lret
gs
cmpsl
sar
jnp
ja
or
mov
inc
pop
jmp
filds
add
divl
cmc
cmpsl
std
mov
lods
arpl
shrl
jmp
subb
cmp
popf
lcall
lock
add
jecxz
fcomip
shll
aam
js
rcrl
jge
mov
testl
testl
les
fisttps
subl
add
cmc
imul
movl
aas
cltd
insl
aad
fildll
lds
sub
cld
xchg
cltd
stos
mov
dec
popa
sbbl
fwait
outsl
and
orb
pop
jnp
cltd
pop
jg
xchg
cltd
xchg
in
fxam
jmp
xlat
push
dec
loope
sbb
jnp
cmpsl
sbb
pop
cltd
icebp
xor
cmp
pop
mov
jne
loope
mov
xchg
test
imul
mov
sub
loopne
inc
mov
jmp
push
adc
sbb
vmovdqa
sbb
sbb
movsl
arpl
or
in
lods
pop
movsl
fwait
mov
sar
push
jmp
mov
mov
rorl
aas
leave
in
ret
fists
arpl
test
scas
mov
arpl
jge
dec
test
sbb
lds
lahf
popf
fnstenv
ja
hlt
mov
iret
fucomi
xlat
roll
stos
jb
add
adcl
stos
or
sub
jae
andb
loope
xchg
into
sarl
xchg
dec
enter
mov
mov
pop
imul
jmp
movsl
loope
xchg
dec
lcall
scas
or
push
int
sbb
test
dec
subl
andl
add
lret
addb
lds
shrb
mov
sbb
movsl
adcl
in
test
arpl
test
mov
repz
cltd
imul
lea
movsl
mov
mov
cmp
shr
cmpsl
xor
cwtl
ja
ffree
jle
jns
and
loope
mov
arpl
cwtl
xor
movsl
test
lahf
outsb
pop
sub
lds
add
imul
jmp
jnp
ja
subl
dec
mov
aas
ret
push
outsb
cmp
cmp
xchg
rcr
test
shll
mov
mov
xchg
jecxz
sub
je
loope
fistpl
ljmp
shr
mov
stc
cmp
mov
in
sub
mov
insl
mov
cmc
arpl
pop
outsl
lret
rcl
aaa
mov
fucomp
pop
xor
lcall
xlat
decl
in
jae
sub
push
stos
jecxz
mov
mov
jle
dec
adcl
decl
dec
xchg
xchg
sbb
fs
dec
xchg
das
xor
xor
dec
dec
mov
adc
leave
xlat
cmpsl
or
in
sub
iret
in
pop
rcrl
xor
adc
jne
imul
push
and
mov
sub
lea
iret
push
sbb
fnsave
lds
sub
test
in
rep
fwait
cwtl
repz
lret
andb
xchg
or
fwait
out
jne
in
pop
int
mov
es
xchg
enter
adc
or
mov
mov
pop
lea
mov
iret
sbbl
or
out
insl
add
out
vmulss
mov
jo
nop
rcll
xchg
adc
xchg
arpl
loop
aam
sbb
ja
push
insl
roll
sub
dec
xor
mov
push
loopne
add
add
test
fidivrs
or
xchg
movsl
outsl
pop
sbb
pop
mov
popa
xor
shll
jmp
gs
pusha
imul
dec
cld
jae
in
dec
jmp
sbb
pop
shrb
scas
jmp
xor
arpl
lret
cltd
jnp
pop
leave
jecxz
scas
jns
sbb
mov
insl
sbb
out
pop
jecxz
cmpsl
out
sti
mov
cmc
xchg
gs
shl
lock
lahf
leave
loope
insl
cmpsl
pop
ja
popf
shll
fcmovnu
aad
divl
xchg
ljmp
lea
ja
les
repz
fadds
insl
xorl
jmp
cwtl
xchg
mov
mov
popa
shrb
clc
lahf
mov
int
xor
add
fildll
test
xchg
add
and
lea
or
int
fildl
cwtl
test
clc
bnd
cmp
mov
fldt
iret
xchg
dec
pop
rcll
in
cmpsl
inc
xchg
push
mov
clc
ss
mov
aad
cmp
outsl
enter
sub
cltd
pop
and
lahf
xchg
xorl
cmpsl
or
mov
gs
popf
sub
sub
or
ret
mov
iret
mov
fs
or
pop
out
in
movsl
insl
pop
fists
push
sub
lcall
sub
sahf
pushf
iret
daa
mov
gs
add
push
fwait
xchg
out
fildll
shl
fwait
outsl
jo
adc
test
fwait
test
imul
imul
popf
arpl
or
imul
jae
outsl
add
out
loope
xchg
rcll
js
cltd
popa
pop
mov
scas
xor
jae
sbb
push
arpl
adc
je
cmpsb
adc
sbb
popl
call
mov
int
xchg
rcll
stos
mov
mov
das
aad
pop
xchg
push
cwtl
pop
mov
popa
jle
push
lret
fcmovnb
rorl
dec
int
call
or
ljmp
and
xchg
and
or
cmp
movsl
sub
jne
fmul
cmp
dec
shll
cwtl
mov
sti
or
vaddsd
xchg
mov
pop
aad
ret
jo
loop
gs
mov
insl
cmc
stos
sbb
mov
xlat
in
icebp
pop
pop
movsl
lret
in
jecxz
mov
ja
inc
jecxz
add
popa
movsl
out
mov
jg
testb
and
aas
out
adcl
ja
pop
cli
popa
inc
mov
ret
cmp
push
shrb
gs
mov
xor
xchg
cwtl
movsl
fiaddl
test
fwait
test
cmp
push
popf
lahf
scas
mov
aaa
mov
gs
xchg
add
shl
test
stc
sbb
lret
push
pop
xor
leave
fbld
mov
inc
aad
sbbl
mov
jg
iret
mov
add
shrl
sbb
rcr
cmpsl
xchg
mov
xchg
ret
push
jne
sub
out
popa
addr16
ficoml
mov
into
test
lret
test
xorl
jecxz
jle
adc
lds
pop
cltd
xchg
test
jmp
imul
jnp
mov
shl
in
movl
sub
fsts
mov
dec
sbb
pushf
movsl
xchg
dec
scas
xchg
imul
mov
dec
scas
pop
pop
popa
fistpll
ja
test
inc
mov
mov
popa
mov
fwait
xchg
mov
in
pop
test
imul
push
rorb
repz
rcl
xchg
rcr
aad
rcll
testb
stos
xor
fwait
lds
fsubr
jmp
outsl
xchg
icebp
sbb
fcmovne
mov
orl
and
mov
pop
fldt
rcll
sbb
popf
xchg
scas
gs
inc
jmp
cmp
sbb
mov
loope
dec
and
popa
mov
lds
aam
or
cltd
push
jmp
ds
xchg
xchg
clc
and
stc
xor
mov
pop
mov
out
cmp
fprem1
pop
sbb
sbb
shr
adc
imul
fcomi
aas
mov
call
inc
lods
dec
aam
mov
jp
scas
outsl
cwtl
push
insl
jns
aad
or
in
or
jns
xchg
ret
cltd
sarl
push
test
out
popf
adc
fcmovnbe
arpl
test
clc
mov
cmp
lahf
cli
gs
shl
in
clc
add
lahf
fstps
ds
xor
xlat
sub
and
lods
int
fs
mov
sbb
out
outsl
stc
lahf
sub
pop
dec
andl
pop
imul
lret
sbb
and
out
loope
sub
and
xchg
xchg
and
adc
pushf
arpl
scas
sti
addr16
fcmovne
aas
leave
sar
and
insl
enter
and
in
fld
stc
daa
data16
sbb
xchg
ret
fsubrs
mov
cmp
inc
or
add
into
jg
pop
mov
subl
neg
cmp
fistl
rclb
fstp
fsubr
xchg
pop
lods
inc
and
pop
sbbb
rol
pop
popf
cmp
mov
stos
addr16
out
js
insl
mov
jecxz
pusha
pop
punpcklwd
ret
pop
aad
jmp
add
xchg
add
negl
mov
lret
pop
mov
push
lods
sbb
ror
addb
enter
aad
adc
cltd
cmc
xchg
mov
pop
jle
xchg
addr16
lret
shrl
sub
push
jb
pop
movsb
inc
xchg
imul
sub
js
and
push
mov
imull
out
push
ret
jae
adc
dec
loope
add
ret
out
cmpl
pop
in
and
push
subl
shll
call
inc
lcall
outsb
inc
xor
sub
out
cwtl
in
mov
lcall
xlat
rcl
mov
push
xchg
arpl
jns
cltd
inc
int
insl
mov
cmp
cmp
lods
xchg
mov
cmpsl
orl
sti
xor
jle
lds
movsl
pop
movsb
xchg
repz
xchg
push
sbb
cwtl
testl
enter
fwait
ds
pop
sub
mov
iret
sbb
jb
stc
cmpsl
pop
dec
sti
sarl
imul
inc
sbb
rolb
lds
fstpt
cwtl
scas
out
jnp
leave
into
dec
mov
jmp
xchg
pop
add
mov
lahf
xchg
mov
mov
shll
stos
ffree
xlat
xchg
xchg
lahf
popf
adc
adc
shll
xchg
fistpll
je
jle
pop
sub
sti
or
and
stos
test
mov
adc
ja
in
inc
sbb
ud2
ret
lds
andl
sub
lods
mov
loopne
add
loope
xchg
mov
filds
leave
out
push
pop
imul
jmp
test
adc
pop
xlat
fnstsw
popa
shl
cmp
rcll
loope
xchg
aad
mov
ja
imull
fistpl
call
xchg
insl
mov
pop
cltd
int
dec
adc
aas
arpl
pop
sbbb
push
xchg
repz
cld
cmpsl
int
insl
sub
mov
pop
xchg
test
shrb
dec
xchg
mov
dec
movsl
jp
xor
jecxz
in
jnp
testb
xchg
insl
push
test
imul
aad
or
outsl
mov
int
test
dec
cwtl
ret
imul
sub
xlat
mov
push
jg
scas
mov
xchg
add
xor
outsb
aad
test
xchg
ret
inc
fiaddl
add
xlat
lea
loopne
and
lds
dec
dec
jns
popf
xchg
lret
mov
loope
mov
mov
dec
int
cmp
ret
cwtl
neg
clc
xchg
scas
mov
or
sub
fists
and
mov
in
add
arpl
lock
push
pop
mulb
aaa
mov
leave
push
aaa
fcmovnu
mov
inc
xlat
xchg
mov
mov
sbbb
dec
in
pop
sar
outsl
shll
gs
fsub
ret
rcl
add
outsl
xorl
inc
lahf
lret
xor
mov
iret
inc
in
shrb
lahf
in
push
jge
mov
pop
cltd
and
pop
cmp
push
cwtl
lods
sbb
or
sub
xor
fwait
dec
lcall
movsb
dec
mov
and
je
xor
popa
pop
and
cli
mov
shrl
sbb
outsl
lahf
mov
rcrl
xchg
int
filds
xchg
ret
jmp
xor
hlt
imul
negb
jmp
pop
cmpsl
mov
lea
popf
mov
mov
xchg
xorb
test
imul
cmp
ja
scas
sbb
ret
arpl
cmpsb
fists
enter
lahf
xchg
das
out
push
inc
inc
jl
lea
dec
fwait
aam
mov
addl
outsl
mov
mov
push
sub
adc
pop
fninit
ds
and
mov
mov
scas
fs
xor
inc
cld
sub
inc
sbbl
imul
pop
fidivrs
fstpl
stc
adc
sub
jle
mov
adc
ds
add
fisttpll
mov
sbb
repz
pop
stos
cmp
leave
scas
rcll
arpl
inc
inc
shrl
test
test
add
xor
adc
jae
sub
xor
push
mov
xchg
movsl
mov
mov
movsb
fs
ficompl
jne
imul
fucomp
scas
mov
xchg
push
aas
cmpsl
lahf
into
mov
adc
xchg
insl
lods
lcall
mov
fs
mov
mov
pop
aas
sbb
cmpsl
jmp
dec
mov
jmp
sub
scas
cmc
lahf
push
add
sub
adc
inc
stos
xchg
mov
mov
cmp
fcmovnbe
pop
cmpsl
push
stos
xchg
mov
lret
xchg
lea
subl
dec
lahf
rcrl
insb
push
aas
aad
das
mov
int
out
outsb
mov
loope
lahf
je
shll
dec
xor
movl
push
cmpl
xor
shll
rep
xchg
mov
push
cmpl
xor
push
pop
mov
scas
or
inc
jne
dec
xor
xor
je
mov
movsb
popa
mov
es
out
adc
inc
lret
mov
js
stos
xor
loopne
mov
add
fdivrs
hlt
sbb
jp
push
add
std
or
cmp
sbb
hlt
fldt
in
roll
pop
lea
arpl
xchg
lds
outsb
cmpsb
shrl
mov
mov
fldt
fidivrl
ret
jp
or
cld
out
gs
xchg
ljmp
mov
lods
fstps
xchg
cmpsl
imul
arpl
bound
js
fists
lret
mul
ljmp
in
scas
mov
sub
and
pop
stos
gs
jg
lods
sub
imul
mov
mov
sbb
mov
fdivs
xchg
adc
jns
outsl
adc
fdivrs
stos
pop
jmp
cltd
mov
xlat
ja
fimuls
sbb
fcoml
aas
gs
mov
or
cmp
lea
mov
arpl
scas
ret
std
adc
push
jg
mov
out
jecxz
mul
add
cwtl
mov
test
fistpll
push
insl
ds
jno
imul
mov
push
add
in
mov
ret
or
push
repnz
pop
jecxz
xchg
cwtl
jne
sbbb
iret
cltd
xchg
repz
cmp
lret
cmc
add
inc
xchg
out
enter
xchg
leave
jne
mov
insl
lods
mov
xchg
lahf
out
repz
jnp
dec
lahf
add
roll
fildll
mov
cmpl
cmpsb
shll
js
xchg
outsb
out
cmp
jo
in
fistpll
mov
in
pushf
mull
cmc
popf
mov
stc
gs
rorl
lods
inc
bound
insl
leave
jns
jecxz
int
out
clc
lret
test
loope
mov
adc
shrl
cwtl
fs
insl
scas
cld
ret
pop
fidivl
or
les
add
xor
mov
test
jmp
pop
out
gs
test
lods
fmul
outsb
cmp
fucomp
insl
lea
loop
inc
mov
inc
cmp
adc
add
sti
adc
js
xchg
xchg
iret
xlat
pop
xchg
popf
lahf
aaa
mov
out
popa
in
ja
out
je
mov
and
mov
add
test
mov
sbb
add
jmp
push
scas
imul
shll
std
out
outsb
pop
mov
xchg
test
mov
pop
lds
scas
aad
cmp
mov
cmp
xor
test
outsl
xchg
popa
add
int
xorl
lahf
out
jmp
orl
mov
mov
shl
gs
std
add
popf
xchg
xchg
loop
fldcw
jnp
fwait
dec
mov
push
popa
aad
jg
roll
repz
jne
or
loope
or
shll
pop
pop
arpl
aad
cwtl
jecxz
int3
negl
mov
mov
or
dec
mov
sahf
add
test
mov
lahf
xchg
movsl
repz
sbb
imul
mov
cwtl
fsts
jo
mov
and
xchg
lods
add
sbb
outsl
popa
inc
cmpsb
inc
push
ret
out
movsl
in
popf
dec
mov
and
add
add
lds
add
cmpsl
shrl
out
clc
imul
imul
aad
imul
mov
add
repz
cmp
lret
xor
dec
sbb
je
sub
popl
fwait
push
bound
lds
out
addr16
pop
xchg
xor
ja
out
sub
call
iret
movsl
xchg
jecxz
cltd
jmp
jge
stos
imul
push
mov
jle
mov
loope
popa
movsb
iret
adc
flds
xor
test
fldl
scas
inc
daa
lahf
xor
lahf
out
dec
shll
lret
adc
fcomi
cwtl
jns
adc
arpl
popa
leave
test
mov
xchg
pop
dec
sub
push
xchg
sub
leave
int
push
out
lret
int3
test
sub
sub
xchg
imul
test
jmp
andl
adc
xchg
or
out
repz
leave
iret
jp
arpl
aas
push
dec
cmpsl
xchg
sbb
sbb
mov
lret
jne
ds
in
xchg
in
cmpsl
jnp
addr16
xchg
fldt
pop
push
out
pushf
adc
mov
inc
sub
sbbl
iret
ja
ret
ljmp
sub
clc
pop
test
shll
iret
jge
in
xchg
adc
arpl
sbb
adc
sub
clc
enter
popa
rcr
jmp
sub
mov
negl
data16
imul
cwtl
cmpsl
inc
cmp
mov
sbb
notl
add
sub
pop
pop
movsl
mov
insl
in
inc
fcoml
shlb
dec
je
pop
test
push
lahf
gs
in
insl
pop
fstpt
test
ret
setnp
outsl
int
shrb
sbb
mov
call
lods
hlt
add
lds
loope
mov
jmp
aad
stos
fstpl
dec
pusha
adc
leave
scas
or
roll
pushf
int3
jnp
mov
cmp
xchg
cmp
pop
out
jmp
imul
xchg
inc
cmp
sti
mov
ret
jg
cmpsl
push
int
shll
shrl
das
cwtl
fbstp
mov
daa
imul
cltd
and
push
out
xchg
imul
out
imul
xchg
repz
xchg
popa
cmp
and
and
adcl
stos
inc
cmpsb
test
in
shlb
mov
rcl
dec
jne
and
pop
dec
mov
adc
xlat
add
rcr
xchg
sbbb
lods
mov
jecxz
push
sbb
js
mov
push
pop
lods
insl
pop
sbb
add
insl
andb
stos
iret
and
mov
popl
xchg
test
pop
add
imul
push
cmc
pop
mov
add
jmp
xor
test
mov
dec
fistpl
xor
gs
hlt
movsl
jecxz
xchg
mov
push
cmc
ljmp
lods
jmp
xchg
pop
int
mov
dec
test
popf
les
xchg
xorl
loope
movsl
out
lock
adc
orl
andl
inc
iret
mov
push
mov
out
jmp
rcll
and
or
cmc
pop
lea
jne
mov
sahf
mov
cmp
xchg
test
testl
stos
jnp
gs
pop
in
aad
out
and
cmc
imul
scas
lret
push
pop
int3
lahf
popf
mov
das
add
xchg
mov
fildl
repz
lahf
stos
popa
sub
mov
cmp
in
adc
ljmp
xlat
push
sbb
inc
clc
lods
insl
ret
jmp
es
cmp
xchg
dec
out
cmp
ss
adc
pop
out
gs
cmpsl
jmp
imul
xchg
stc
xchg
out
dec
ftst
jnp
push
jae
xchg
push
add
sbb
popf
in
in
lock
loope
cltd
pop
mov
sbb
and
pop
jb
rcll
xchg
cmpl
lret
mov
sar
test
jnp
jmp
jmp
mov
jnp
out
iret
adc
adc
xor
xchg
fstpt
xchg
xchg
test
inc
in
sub
in
call
mov
jle
ljmp
mov
jp
add
add
adc
mov
adc
mov
xchg
sar
push
add
lods
jmp
sub
ret
out
mov
ja
mov
je
sub
jecxz
jo
jnp
mov
dec
orl
and
arpl
push
int
mov
imul
pop
jge
adc
scas
pop
repnz
out
aaa
cltd
arpl
xchg
ja
mov
in
mov
adc
lret
xor
insl
ret
lods
lcall
jecxz
jecxz
lret
lret
fcomps
pop
mov
pop
scas
fistpl
xchg
ret
mov
out
in
dec
negl
gs
scas
imul
jno
ror
sub
push
lret
push
int3
xlat
pop
xchg
stos
shl
in
loope
sti
sbb
imul
ret
inc
lods
ret
clc
ret
jle
or
ret
stos
mov
jmp
arpl
fs
repz
xchg
loope
sub
movsb
mov
push
popf
in
insl
fnstcw
pop
stos
mov
lds
movsl
test
xchg
rcr
outsb
cmpsl
test
scas
mov
adc
pop
aam
leave
and
rcl
mov
mov
xlat
cwtl
out
jne
pop
icebp
lds
lahf
imul
fsubl
mov
addr16
pop
repnz
jge
test
or
add
xchg
xor
mov
lahf
sbb
fistps
das
or
adc
int
mov
and
roll
cwtl
push
test
pop
sub
fwait
or
lret
loope
dec
adc
subl
mov
lock
lcall
xlat
xchg
mov
mov
mov
jmp
je,pn
add
lods
arpl
or
in
jmp
fiaddl
or
imul
adc
inc
fwait
sar
pop
aad
pop
out
ret
adc
fstps
fwait
cmpsl
adc
mov
je
adc
out
xlat
ret
add
inc
mov
loope
call
outsl
mov
sbb
cmpsb
outsl
int3
test
out
mov
mov
cld
fldt
in
inc
mov
repnz
xchg
dec
sti
pop
scas
xchg
lods
dec
add
iret
out
xchg
jmp
popf
adc
shlb
sbb
out
rcr
movsl
inc
les
add
loope
mov
imul
stc
rol
cmpsl
and
flds
enter
xchg
orl
xlat
gs
jecxz
sub
pop
out
add
movsl
jne
lcall
cmc
mov
mov
mov
loope
and
inc
out
cmpl
dec
push
adc
mov
xlat
sbb
lds
mov
aas
ffreep
jg
dec
fnsave
out
push
jmp
dec
pop
sub
ror
push
push
movsl
inc
inc
pop
jle
jnp
aad
lcall
scas
sbbl
gs
in
cmpsl
fisttpll
xchg
pop
lahf
sbb
repz
icebp
shl
in
out
test
cmc
fnsave
pop
mov
lret
das
pop
ficoms
or
cmpsl
cmp
frstor
lea
loope
jmp
add
cmpsl
aad
out
cmp
ret
pop
xor
divl
cmp
sbb
test
or
and
mov
pop
jnp
mov
outsl
daa
jle
cmp
cld
loop
out
loope
imul
imul
insl
mov
out
cmc
ret
xor
push
cld
mov
and
negl
fbld
enter
pop
insl
sbb
lods
clc
lcall
ja
repz
cmpsl
imul
lahf
cmp
das
mov
gs
aad
jl
std
ja
fldt
std
xlat
jno
lea
imul
arpl
ret
adc
mov
cmp
xchg
fisttpl
xor
dec
jmp
fdivrs
in
test
aam
ret
flds
scas
pop
mov
icebp
sbb
push
and
fwait
addr16
int
xrelease
mov
mov
adc
sarl
sub
cltd
or
pop
test
test
mov
jp
or
dec
xchg
fwait
out
adc
test
popf
ja
fidivrs
mov
and
push
pop
aad
xchg
sub
dec
andl
enter
add
lahf
test
jb
das
jg
gs
fwait
or
dec
xchg
icebp
clc
std
out
leave
in
push
ja
scas
push
dec
push
sub
imul
mov
in
pop
xor
out
rorb
fstpt
xlat
imul
jmp
jne
or
addl
pop
dec
cld
ds
scas
movsl
imul
ret
mov
sub
dec
mov
or
mov
pusha
xor
push
inc
rclb
addb
loope
mull
int3
xchg
gs
ja
jne
jmp
movsb
dec
imul
aas
test
mov
arpl
dec
cmc
lret
pop
clc
pop
fildll
repz
cmc
movsl
inc
lds
mov
movb
test
pop
out
cmp
insl
xchg
mov
mov
mov
sub
jbe
mov
hlt
movsl
lret
insb
out
xchg
scas
lahf
jae
fnstsw
mov
in
push
outsl
add
xlat
imul
in
loopne
ja
out
fldenv
inc
and
pop
in
inc
leave
cmp
mov
in
mov
cmc
cltd
imul
mov
jp
dec
or
test
xchg
lds
sub
leave
outsl
mov
iret
dec
arpl
add
mov
xchg
stos
test
iret
loopne
pop
cmp
xor
and
jmp
roll
in
mov
inc
push
push
xchg
jle
aad
jne
cltd
and
sub
sub
pop
rcl
add
popf
ja
test
add
jecxz
add
out
xor
test
aad
mov
or
jecxz
das
in
sbb
imul
ljmp
in
xchg
mov
testl
loopne
mov
out
xchg
xchg
aaa
pop
lods
out
cltd
mov
jne
cli
mov
mov
loope
adc
xor
and
sub
stos
cmp
shrl
mov
pop
add
arpl
daa
dec
sub
xchg
xchg
repnz
int
sub
adc
add
ret
lds
js
mov
pop
xlat
fsincos
shlb
mov
cld
and
scas
scas
xchg
mulb
test
ret
notl
mov
jmp
fbstp
push
test
cmpsl
shrl
push
add
out
popf
in
movsb
mov
sbb
inc
push
mov
mov
aaa
negl
cwtl
mov
outsl
mov
cmpsl
sar
test
shr
popa
mov
leave
int
rcr
or
sbb
sar
push
orl
in
sub
ja
cmpl
mov
popf
push
cmp
jmp
mov
out
xor
add
aad
pushf
ret
ja
dec
add
rol
adc
sub
pop
hlt
add
sarl
inc
add
popa
addl
inc
sarl
fsubl
scas
fildll
aam
rep
sbb
mov
mov
mov
fsts
iret
mov
pop
cmpsl
cmp
sub
js
xchg
ja
mov
sub
jp
push
std
xchg
cmp
and
mov
shrb
ret
pop
stos
sub
clc
xchg
aad
les
mov
inc
push
inc
stos
lods
addr16
addr16
ret
out
gs
repnz
add
frstor
xor
push
movsl
xor
scas
test
push
and
lahf
jmp
movsl
fwait
inc
sub
cmc
push
xchg
popa
sarl
xor
shrb
or
xchg
mov
mov
push
pop
and
sub
outsl
repz
dec
add
sbbb
mov
in
repnz
jnp
sub
jecxz
call
aad
fwait
xchg
jmp
pop
cmc
cmpsl
jnp
aaa
pop
int3
mov
push
fstps
aas
scas
stos
mov
jns
mov
ja
int
push
mov
xchg
in
push
leave
testl
dec
add
subl
dec
rcll
mov
add
enter
mov
addl
jne
gs
rcrl
repz
sub
mov
sub
ret
add
lret
aam
ljmp
add
and
in
cltd
adc
shr
jne
pop
outsb
testb
shl
addr16
iret
mov
pop
pop
cmpsl
mov
into
in
out
lds
lahf
jecxz
shll
cmpsl
adc
stos
or
lods
fstl
mov
ret
ja
xchg
pop
cltd
mov
imul
in
in
mov
das
popf
sbb
mov
cmpl
out
loopne
leave
aam
jmp
pushf
mov
mov
xchg
subl
mov
pop
xlat
jecxz
fldcw
xchg
insl
iret
pop
xchg
imul
xlat
push
fists
add
cwtl
into
mov
cltd
ret
shll
mov
or
leave
or
andl
pop
lods
lds
pop
insl
pop
and
cmp
push
cmp
sbb
add
filds
stc
inc
inc
inc
mov
xchg
mov
shl
cltd
jne
lea
movl
lret
orb
test
fwait
idivl
loope
lahf
xchg
out
aad
sar
or
mov
mov
pushf
push
mov
stos
jno
shr
jns
out
lahf
cmpl
cmp
sbb
cmpsl
jge
fbld
xor
idivl
fucomi
xchg
xchg
dec
mov
sub
xor
repz
or
xchg
hlt
xchg
movsl
adc
dec
fcomi
fistl
push
js
icebp
inc
xlat
nop
or
push
fldt
xorb
add
stos
movsb
arpl
sbb
repz
push
popa
sbb
in
mov
fincstp
arpl
xchg
lds
and
hlt
adc
or
cmc
mov
ja
mov
daa
lahf
arpl
jne
xor
int
out
into
out
mov
jmp
lea
dec
xlat
subl
sbb
sbbl
sbb
in
stos
movl
mov
jp
mov
xchg
mov
imul
jmp
xor
add
test
addr16
gs
xor
out
cwtl
jne
popa
xchg
stc
jno
or
adc
sbb
mov
frstor
sbb
or
subb
in
push
add
sub
mov
fistpl
ret
mov
cmp
inc
std
mov
fildll
cmp
test
outsl
jecxz
inc
lahf
stos
or
ja
jb
and
pop
sub
cli
and
out
cld
mov
clc
insl
outsl
ja
movsl
sub
test
in
lea
and
or
arpl
sbb
loope
addr16
fsubs
fnstsw
std
add
lahf
cmp
xor
shlb
pop
pop
shr
fwait
mov
xchg
xchg
jecxz
cmp
leave
cmc
mov
lahf
clc
mov
pop
lods
sbb
les
mov
xchg
add
and
lea
out
adc
divl
dec
repz
mov
sub
sub
and
mov
fisttpll
shr
fwait
outsl
test
adc
lahf
leave
mov
lret
push
cli
in
orl
dec
mov
xchg
jecxz
pusha
jne
rcrl
mov
cmc
fldt
aad
mov
in
fsts
scas
test
testb
cmp
loopne
aad
pushf
scas
negl
in
rcll
adc
imul
fwait
jecxz
mov
mov
loop
sbb
mov
cmc
lahf
mov
ficompl
and
out
jecxz
push
add
add
mov
dec
fnsave
jns
popa
and
or
xor
test
stos
or
inc
pop
and
inc
push
in
sub
mov
mov
orl
push
stos
scas
aad
cmc
jge
mov
clc
sub
enter
imul
cltd
push
ljmp
rorl
testl
lret
ret
pop
lds
mov
jecxz
test
xchg
or
jle
imul
xchg
test
vpackssdw
mov
pop
out
shll
mov
iret
outsl
push
add
shrl
cmc
add
call
int
adc
sbb
dec
mov
aad
lret
xchg
leave
mov
cmp
inc
mov
jns
idivl
mov
out
mov
ret
in
jb
scas
insl
fstp
and
add
inc
mov
cmp
add
cmc
imul
push
mov
or
mov
fwait
mull
loop
data16
mov
inc
stos
clc
push
ret
loope
lahf
lods
sar
repz
jmp
sub
cli
adc
adcl
xchg
sahf
cmp
pusha
outsl
xchg
xorl
xor
ffreep
push
stc
test
js
test
cmpsl
cltd
mov
outsb
or
fxch
arpl
cwtl
sarl
add
test
fsubrp
mov
addr16
loope
scas
and
out
or
outsl
xchg
insl
mov
sub
popf
lret
in
xorl
add
insl
mov
mov
sub
jl
mov
xchg
ja
test
and
cwtl
imul
xchg
mov
and
dec
in
mov
cmc
xor
or
negl
cmp
cltd
gs
xchg
jecxz
popf
insl
js
push
movsl
mov
out
jns
inc
sbb
in
pop
mov
imul
jae
fnstsw
js
xlat
pop
inc
jbe
lods
fldt
lahf
call
and
outsl
test
mov
cltd
clc
fcmovnb
push
jmp
popa
in
aam
lock
cmp
jmp
mov
and
enter
shr
gs
xlat
sti
adc
and
fwait
not
jge
test
mov
adc
aam
fidivrs
ret
cltd
jne
fistps
in
bound
gs
push
cmpsb
sub
andl
jnp
insl
adc
int
popa
adc
aam
or
mov
repz
pop
fldl
lds
outsl
mov
jl
mov
cmp
insl
dec
cli
jne
rcrl
scas
rorb
lds
or
stos
arpl
sub
stos
jns
mov
xchg
jbe
out
or
xor
mov
sub
out
cmp
int
hlt
fstps
fistpll
mov
xchg
xlat
je
movsl
rcll
rcll
and
mov
and
stos
out
push
imul
lea
int
mov
cmpsl
add
sub
or
jmp
adc
imul
ret
leave
or
pop
xchg
pop
negl
leave
mov
test
scas
sarb
adc
inc
loope
lds
push
test
shlb
test
cwtl
xlat
fstpt
inc
add
imul
sbbb
scas
clc
out
insl
xchg
and
hlt
cmp
fwait
ja
inc
neg
mov
out
int3
cmc
rep
xchg
xchg
fwait
add
cmpsl
inc
hlt
sbbl
push
std
push
out
adc
pop
fisttpl
push
mov
sti
jmp
scas
adc
or
lret
les
or
lahf
pop
and
jmp
cmpsl
mov
cmp
sub
iret
in
lods
movsl
lcall
cmp
jne
and
or
add
movsl
inc
mov
push
imull
adc
push
mov
jne
orl
pop
and
loope
jo
xchg
push
sbb
ja
jecxz
mov
xor
loope
outsl
xchg
adc
iret
add
push
test
stos
shl
jge
leave
xchg
mov
inc
add
mull
mov
stos
mov
out
mov
addl
inc
sbb
ret
cs
push
cmpsl
sub
btc
or
pop
lahf
lea
out
gs
repz
fbld
jne
cli
movsl
pop
mov
or
sbb
jmp
push
imul
aad
push
loope
mov
push
mov
shll
jle
dec
xchg
sti
scas
out
aam
cld
ja
adcl
dec
test
jne
popl
sub
lds
cmp
xchg
ret
dec
adc
sbb
shl
lret
jae
add
insl
mov
jmp
decb
scas
fstps
cltd
push
pextrw
lods
jecxz
jb
jg
adc
lret
outsb
or
pop
cmp
repz
fiaddl
scas
je
or
sbb
push
mov
xor
or
cwtl
adc
cmpb
push
jp
in
fcmovnbe
outsl
or
stos
dec
imul
repnz
sbb
roll
ret
mov
ja
pop
mov
cmp
mov
xchg
sub
cmp
sbb
cmpl
cmpsl
rcrl
cmpsl
dec
fstps
jmp
sbb
sub
ljmp
ja
push
adc
adc
mov
pop
popa
dec
sbb
pop
fwait
ljmp
adc
mov
push
dec
jmp
ror
push
rcl
popa
sti
xorb
add
icebp
mov
xchg
in
addr16
nop
stos
xchg
addr16
leave
fwait
aam
fstpt
lods
scas
out
negb
inc
rcll
or
or
into
cmc
mov
test
xorl
xor
mov
sahf
es
leave
or
or
sar
xchg
push
arpl
push
pop
adc
mov
lds
scas
mov
fldl
add
xchg
lds
xchg
icebp
lock
mov
cltd
rcl
xor
xor
in
popa
lahf
pop
jmp
outsl
dec
movsl
shl
sbb
test
add
cwtl
adc
sti
loope
cltd
inc
in
push
lods
cmpsl
repz
xor
jne
dec
or
mov
dec
insb
jge
pop
pop
jnp
arpl
sub
xchg
xchg
loope
mov
sbb
imul
stc
cmp
std
dec
cmp
out
xchg
xchg
adcb
cltd
mov
jne
iret
popa
jp
sub
fcmovne
test
pop
fildll
sub
xor
dec
and
leave
adc
pop
pop
call
push
ja
xchg
or
mov
hlt
repz
int
or
mov
mov
adc
fucomp
shlb
lahf
aas
dec
cmpl
add
psadbw
mov
sbb
jne
stc
sbb
imul
mov
es
xrelease
insl
mov
and
adc
cltd
fistpll
es
sbb
rol
outsl
gs
shll
mov
dec
popa
jecxz
fstl
outsl
cltd
jmp
insl
ficoms
jb
add
pop
cmpsl
lret
fdiv
jmp
shr
iret
push
in
test
mov
cmpsl
arpl
jmp
xchg
mulb
iret
test
out
scas
test
mov
or
mov
movsl
push
inc
adc
inc
sti
and
lds
sub
test
add
ja
pop
repnz
shlb
out
xchg
shll
sbb
jnp
fistpl
in
mov
movsl
orb
aad
rcl
jo
andl
pop
fs
mov
inc
sar
mov
repz
popf
iret
psubsw
lahf
imul
lret
fstp
sub
cmp
xchg
shl
cwtl
fst
push
cmpsl
ljmp
loope
xchg
loope
jno
enter
ret
cmc
out
rclb
ficompl
cwtl
insl
mov
loop
call
arpl
int
jle
call
lcall
sbb
lea
leave
repz
pop
les
adc
ret
lods
aas
fwait
lea
add
addb
sbb
inc
fucomp
adc
pop
xchg
push
xchg
loope
pop
xchg
adc
mov
sbb
gs
ret
popa
sub
fucomi
inc
stos
cmc
aas
imul
fld
call
xchg
test
xchg
sub
outsl
test
mov
cld
popf
push
out
push
lods
xlat
fldcw
sub
pop
or
push
jl
stos
sub
cmp
cwtl
cmpsl
and
icebp
repz
mov
mov
push
mov
add
mov
bound
pop
push
fwait
arpl
rcrb
test
scas
cwtl
inc
int
test
sbb
popf
andl
xchg
fwait
cmp
imul
rorl
pop
pop
daa
sbb
xchg
cltd
adc
mov
setnp
mov
xchg
pusha
clc
fnstcw
loopne
mov
ljmp
add
jne
shl
xchg
fsts
lahf
mov
jg
cmp
pop
xchg
aas
jmp
xchg
inc
xchg
xchg
xchg
push
cwtl
fwait
pop
cmp
fstp
iret
xor
jns
ja
or
mov
out
imul
xlat
mov
mov
adc
xchg
andl
cwtl
out
popa
pusha
inc
sub
xchg
adc
lret
shll
lahf
std
xchg
pop
xor
add
xor
jecxz
mov
divb
xchg
ljmp
jns
xchg
pop
int
movsb
ja
div
out
mov
cltd
sahf
add
les
rcl
inc
test
out
out
shrl
or
mull
pop
jecxz
gs
pushf
inc
inc
mov
in
popf
out
fldenv
shll
add
ja
xchg
ret
mov
popa
sahf
sbb
imul
outsb
cmpsl
mov
fildll
lods
ljmp
mov
lock
mov
sub
lds
sub
mov
in
lds
pop
rcr
adc
rcll
sub
repz
arpl
rcl
popf
fdivl
andl
jle
xchg
ja
ja
stos
loope
mov
dec
jae
mov
inc
fbstp
xor
jne
mov
incb
xchg
xor
out
insl
or
jecxz
lds
divl
cld
lea
out
cltd
orl
mov
sbb
cmp
jge
das
popf
mov
mov
rorl
in
jnp
pop
or
fbstp
sbb
aad
lods
add
scas
cmp
loope
mov
xlat
sbbl
cmp
fdiv
das
in
imul
jmp
mov
add
in
sbbl
shll
loop
mov
jmp
fisttps
mov
and
imul
sbb
fldenv
and
or
lods
dec
imul
mov
frstor
xchg
repz
andb
sbbl
outsl
gs
ret
popf
repz
lds
loope
mov
test
gs
xor
adcl
imull
cmp
add
cltd
popa
lea
shll
pop
sar
push
cmc
dec
cld
les
jge
scas
in
xorb
js
mov
repz
out
int
imul
add
gs
sbb
or
push
lahf
sbb
js
out
ret
addl
xlat
push
iret
xchg
loope
in
fwait
mov
fcompl
fs
arpl
in
pop
loope
lea
int
jmp
cltd
notl
add
arpl
insl
xchg
cmpsl
pop
cmpsl
mov
leave
mov
test
shlb
add
stos
and
pop
push
imul
fsubs
lahf
cmc
push
lahf
stos
dec
roll
pop
les
ret
repnz
ret
mov
ja
aad
in
pushf
in
imul
cltd
or
mov
lea
nop
outsl
movsl
or
cwtl
mov
cltd
popf
add
insl
cmc
ja
leave
loope
sbb
in
cmp
scas
js
test
fwait
dec
mov
jecxz
inc
popf
inc
lock
pop
fisttpll
cmp
sbb
sub
lahf
fstps
aas
lahf
mov
ret
xchg
lods
push
mov
mov
xchg
pop
rcrl
adc
outsl
movsb
push
pusha
xchg
xchg
mov
orl
outsl
cmp
in
je
mov
cmp
ret
mov
test
in
cltd
test
dec
dec
sbb
dec
fnstcw
jmp
mov
xlat
out
out
xchg
ljmp
shll
lds
cwtl
fcmovu
lret
add
fsubl
das
adc
sub
aas
push
dec
fmull
jecxz
jmp
fbld
xchg
dec
test
inc
or
les
loopne
jmp
fsubrl
mov
gs
ss
fucomp
jge
jecxz
push
repz
mov
das
mov
movsl
sbb
pop
dec
add
arpl
imul
in
push
mov
bound
ja
xchg
pop
pop
cmc
out
mov
popl
pop
mov
add
imul
fidivl
push
in
jle
cs
popa
ss
mov
ja
movsl
dec
xchg
xchg
jne
xor
mov
fnstcw
div
shl
pop
leave
mov
cmc
mov
mov
out
and
fwait
or
pop
arpl
xchg
pop
int
in
mov
aam
ret
in
hlt
xchg
mov
test
xchg
adc
pop
fistl
pop
enter
mov
aaa
add
cmpsl
mov
mov
and
je
jg
mov
adc
lret
data16
cwtl
shr
stc
xorl
insl
lock
out
scas
out
movl
cmp
subl
stc
mov
and
ljmp
cltd
lods
outsl
dec
int
popa
adc
pop
icebp
mov
addr16
out
fistl
xchg
out
imul
outsl
mov
adc
jmp
lods
inc
in
shll
iret
lahf
popa
mov
xlat
leave
imul
out
adc
lret
test
inc
dec
ret
xor
jb
not
pop
insl
test
or
adc
mov
push
jmp
add
out
push
lea
jmp
dec
mov
stos
in
test
test
repnz
xor
xor
popf
cmc
push
adc
cld
mov
xchg
ja
or
int
rcr
scas
shll
fwait
ret
sub
out
cmp
imul
lods
loope
mov
pop
or
dec
cmpsl
add
ja
addr16
xor
test
out
lea
movsl
xorl
lret
adc
lods
lock
cmpsl
lea
rcrl
cmp
aad
mov
pop
and
fldt
mov
dec
out
inc
dec
pop
dec
mov
cltd
pop
clc
loop
sti
ftst
jne
cli
nop
push
or
xchg
insl
xor
sub
fnstsw
xlat
scas
in
test
shl
cltd
cwtl
jecxz
mull
addr16
ret
and
arpl
in
repz
loope
lret
push
aad
jmp
nop
roll
pop
fldcw
lds
xchg
cltd
xor
jne
jne
insl
movsl
sbb
mov
xchg
dec
stos
icebp
jg
inc
pxor
push
or
std
fdivl
loopne
mov
outsl
vpcomuw
xchg
adc
repnz
fadd
jg
stos
mov
das
popl
shrl
and
lds
popf
fdivp
xchg
xchg
gs
xchg
out
jge
mov
das
cmpsb
cmc
in
in
ror
jg
fxtract
addr16
cmc
roll
lods
iret
test
ret
shl
cltd
mov
aam
jge
xorl
es
scas
roll
cld
cmp
rcl
or
push
add
mov
mov
js
sbb
popa
adc
scas
out
mull
push
xchg
add
imul
lds
xchg
outsl
or
shll
cmc
imul
fiaddl
mov
popf
insl
sub
and
or
cmc
xchg
enter
mov
xorl
jecxz
xchg
mov
fildl
lock
inc
and
adc
push
mov
fldcw
pop
push
cmpsl
cmpsl
enter
iret
sarl
cmc
out
pop
pop
movsl
insl
je
push
scas
lahf
shl
std
in
test
adc
pushf
loope
pop
push
in
lea
in
xchg
xchg
loopne
pop
push
xchg
out
push
or
lahf
lahf
sub
xchg
cwtl
push
ror
mov
xor
xchg
mov
sarl
les
jmp
jge
je
cmpsb
mov
push
or
xchg
popf
fistpll
mov
mov
fcmovu
sbbl
add
vmovdqu
pusha
repnz
aam
fsts
fcompl
das
fcomi
test
repz
dec
xchg
ret
cmpsl
rorl
leave
xorl
or
aad
movsl
test
cmpsl
leave
dec
mov
cmp
negl
inc
mov
loope
mov
lock
fwait
and
iret
out
xchg
loope
adc
out
cmc
pop
xchg
popa
or
fwait
testl
add
jne
ja
outsl
dec
ffree
push
pop
movsl
xchg
mov
inc
mov
mov
out
adc
mov
jecxz
sbb
arpl
xchg
lds
pop
scas
lods
ret
mov
movsb
in
push
cwtl
push
fcomip
stos
gs
push
stc
mov
movsb
inc
out
pop
int
pop
push
int
push
testl
mov
mov
roll
lret
mov
inc
or
or
cld
jno
movsl
fwait
jnp
das
push
int
xchg
rcrl
test
add
pop
cmp
leave
fwait
rcll
rol
lret
jecxz
imul
pop
lahf
dec
fucomp
or
jmp
cmpsb
fildll
test
sahf
xlat
lret
dec
jno
push
sti
fbld
cmc
and
add
xor
maskmovq
out
cmp
jmp
and
mov
ja
jne
popf
sarl
lods
enter
pop
sar
int
in
in
cmpl
mov
ret
out
mov
sub
test
xchg
push
lcall
test
push
cwtl
fisubrs
fnstcw
pop
cld
scas
xor
add
addr16
test
xchg
jecxz
xchg
cwtl
pop
lahf
out
mov
lret
adcl
cmp
cltd
jmp
movsl
repnz
fsubs
test
repz
inc
inc
pushf
pop
stos
iret
es
rolb
test
out
xchg
mov
fwait
aam
jge
mov
xchg
add
out
add
xchg
test
arpl
int
adc
and
rorl
xchg
sub
mov
js
out
pusha
loop
sbb
inc
iret
int
fcomps
xchg
popf
fcmovnu
xor
cltd
out
in
push
movsl
add
jne
ret
dec
test
pop
cmpl
jb
adcl
xchg
mov
je
loopne
lods
jne
jge
imul
iret
adc
pop
adc
in
test
andb
jns
or
inc
popf
ret
adc
xchg
mov
lods
xor
adc
sub
jne
inc
mov
addl
mov
fistl
xlat
mov
dec
in
cs
push
xchg
test
sti
int
pop
frstpm(287
les
mov
add
jg
in
dec
int
jmp
movsl
scas
imul
sti
clc
push
popa
addr16
or
loope
mov
scas
iret
mov
cmp
dec
mov
xchg
aad
sbb
mov
fwait
xchg
out
subl
movsl
out
mov
sbb
jno
shr
adc
out
jmp
mov
scas
jne
rcrb
movsl
mov
stos
lret
jb
inc
popa
repz
sbbl
test
mov
lods
adc
sub
jbe
mov
jmp
call
mov
push
loop
fsts
repz
mov
int
cmp
sti
inc
cmpsl
in
in
sbb
sub
loop
lds
mov
into
jmp
sub
fnsave
add
out
fistpl
lds
jb
mov
pusha
sbb
flds
mov
jecxz
sbb
imul
mov
sbb
fistpll
fwait
popf
subl
cmp
test
gs
inc
lret
aad
fistps
lahf
xchg
xchg
cmpsl
mov
xor
fldenv
push
lret
loope
sub
add
cmc
mov
jecxz
cmp
mul
add
out
lahf
insl
mov
repz
cld
add
dec
add
mov
sub
cmp
sub
add
popa
xchg
mov
sbbl
setns
aam
cmpsb
testl
mov
addr16
mov
movsl
xorl
mov
jmp
push
cwtl
loop
push
outsl
insl
cltd
ja
stos
lds
subl
aas
jmp
sbb
lods
popa
sbb
jecxz
mov
rcrl
adc
or
enter
popa
imul
xchg
call
pop
les
aad
push
xchg
sub
mov
push
jmp
dec
cwtl
xlat
pop
movsb
or
mov
lahf
arpl
xchg
lret
inc
jecxz
insl
pop
push
arpl
inc
cs
ret
in
pop
sbb
xchg
in
ja
imul
sbb
and
pop
fstl
mov
fmul
repz
mov
push
lret
push
pop
jmp
jg
scas
adc
repz
pop
enter
call
mov
test
cwtl
lahf
lods
int3
jae
and
adc
scas
popf
xchg
fiaddl
jge
lods
not
aam
leave
and
lea
xlat
add
popf
inc
ljmp
mov
add
lds
das
in
mov
lahf
cwtl
xchg
in
xchg
mov
orl
dec
jns
sbb
and
fnstcw
xchg
xor
mov
int
daa
adcl
add
mov
in
in
stos
aas
push
pop
fsts
cmp
jns
out
std
xchg
cwtl
or
mov
add
shl
push
inc
fldt
fsubs
xchg
outsl
and
int
gs
cli
xor
out
popf
insl
dec
adc
fistpl
int
xor
pop
cwtl
divl
mov
rclb
iret
add
subb
jmp
and
dec
popa
lahf
ret
or
outsb
add
iret
lahf
xor
rep
xor
mov
xor
std
outsl
mov
insl
scas
rclb
xchg
popf
data16
test
andb
stos
aam
jecxz
pop
rcrb
outsl
ret
testl
mov
jno
fwait
xchg
repz
ljmp
addb
mov
and
mov
jb
fwait
shll
ret
dec
cmpsl
aas
stos
add
xchg
inc
dec
imulb
mov
test
fsubrs
pusha
mov
in
hlt
lods
dec
xchg
adc
lret
div
out
movsl
jmp
imul
enter
scas
push
cmpsb
shlb
hlt
cmp
mov
into
roll
or
mov
in
cmp
push
xchg
dec
gs
sbb
mov
test
xchg
movsl
fwait
push
mov
add
roll
mov
inc
ljmp
out
mov
pop
repz
push
push
mov
push
xchg
xchg
mov
or
mov
roll
pop
fwait
mov
mov
push
jmp
lods
clc
and
jmp
xchg
dec
or
adc
shlb
ret
mov
jnp
fstpl
adc
aam
leave
test
shrl
into
cld
mov
test
test
jne
xlat
insl
fnstenv
mov
popf
test
lcall
lahf
std
or
mov
stos
pop
scas
test
jp
in
sar
sub
outsl
imul
xlat
lock
cwtl
xchg
or
mov
insb
pushf
jge
popa
mov
jecxz
mov
pop
cmp
ja
mov
xchg
addb
lds
xchg
fldcw
pop
mov
xorl
loope
inc
sub
sbb
lea
aaa
shr
ficompl
cmp
sub
or
movsl
frstor
rorb
jp
xchg
or
cmp
mov
sbb
insl
xlat
mov
inc
pop
outsl
iret
push
dec
mov
inc
addr16
fldl
adcl
and
sub
sbb
rcrb
mov
frstor
ja
shr
sbbl
ret
and
out
ret
sbbb
lahf
int3
sbb
lds
fcom
addr16
jg
insl
pushf
test
leave
out
mov
mov
cmpb
outsl
push
das
and
leave
xor
lret
jl
xchg
mov
or
mov
test
sub
lds
cmp
arpl
nop
jae
shlb
out
jg
cltd
adc
pusha
jne
loope
ja
outsb
xorl
xor
cmp
call
lret
int
loope
push
add
push
sub
rep
das
inc
shll
sub
jecxz
sub
and
mov
jnp
pop
jne
jle
mov
scas
cmp
imul
out
sub
lea
orb
jmp
lock
mov
rcll
sub
mov
lods
push
aad
fsubr
leave
frstor
pop
fwait
mov
sbb
stos
loopne
push
inc
test
jl
stos
mov
ja
scas
mov
in
cwtl
push
mov
test
cwtl
fdivl
cmpsl
jge
jge
scas
stos
and
sbb
jo
in
mov
ljmp
dec
jecxz
mov
in
cmp
mov
scas
aam
cmp
scas
in
outsl
cmc
movsb
popa
xchg
iret
and
in
xchg
sbb
lcall
aas
lods
ret
rcrl
test
outsl
ja
fisttps
js
jg
addl
outsl
adc
test
imul
aad
cwtl
add
lods
imul
pop
inc
jge
aam
inc
into
imul
in
mov
mov
nop
fwait
rorl
jne
stos
int3
lret
adc
pop
and
mov
or
repz
mov
add
xchg
lea
dec
icebp
inc
cli
cltd
xchg
and
popf
jg
mov
outsb
or
push
xor
lret
lods
test
pop
push
outsl
push
mov
incb
cs
out
fstpl
mov
jae
lahf
cld
int
ja
flds
enter
cmp
xor
rclb
adc
adc
mov
xor
and
or
and
scas
push
frstor
test
dec
xchg
pop
mov
xchg
imul
sub
pop
lock
movsl
gs
fs
cld
inc
dec
cmpsl
add
push
mov
hlt
mov
jmp
mov
jmp
stos
pop
cmc
xor
lock
iret
ja
mov
adc
or
outsl
insl
mov
ljmp
cltd
mov
in
add
test
and
jne
or
xchg
scas
mov
jmp
sub
vpcmpgtw
rol
out
xchg
xchg
dec
mov
cmp
xchg
mov
sbb
or
mov
adc
shrl
cmpb
sub
add
sbb
mov
fldt
loop
ret
add
or
ja
orl
outsb
mov
cltd
sarl
pop
xchg
movsl
jp
lahf
mov
adc
inc
inc
lds
je
mov
shll
testl
inc
pop
in
xchg
and
push
in
mov
call
test
notl
fmull
stos
mov
cld
jge
into
xlat
inc
out
push
sbbl
add
in
ret
sub
gs
jns
ret
mov
push
fisttpll
enter
fldcw
jl
pop
jl
xchg
or
cmc
aas
sub
lahf
or
xchg
aad
leave
fs
cli
call
cmpsl
jecxz
in
roll
test
inc
das
loope
lahf
insl
sub
add
xchg
lods
popa
push
jecxz
in
mov
pop
aam
cwtl
int
pop
cltd
inc
mov
call
out
and
mov
aad
jmp
add
cmp
mov
push
inc
or
pop
shrb
and
fsubp
pop
pop
mov
mov
sbb
sbb
sti
jl
mov
add
ret
xchg
repz
cmp
mov
cwtl
loop
out
aam
popf
shr
push
xchg
les
idivl
push
pop
imull
inc
jmp
xchg
call
imul
cmp
insl
xor
paddusb
mov
xchg
fstl
gs
out
adc
dec
movsl
out
cmp
mov
adc
mov
xchg
gs
aad
lods
out
rcll
fistps
mov
adc
sbb
sbb
jmp
enter
ror
test
in
fldenv
int3
cltd
xchg
int
adc
cmp
xchg
xorl
dec
outsl
shl
or
subl
ret
movsl
js
cwtl
mov
pop
insl
pop
loope
fstl
or
and
fwait
das
push
je
xlat
sbbl
notl
mov
cmp
adc
cmp
test
imul
pop
loope
cmc
andl
and
ret
ja
cltd
mov
jnp
xchg
pop
int
push
adc
lea
push
leave
and
push
and
xchg
out
adc
xlat
sub
xchg
fstps
fnclex
mov
dec
mov
ret
in
popa
ret
mov
adcl
xchg
pushf
popf
fs
or
xadd
rolb
pop
cltd
xchg
sub
aaa
xlat
test
ret
rol
push
inc
mov
icebp
out
bound
sbb
aas
add
mov
sbbl
and
hlt
or
sbb
les
int3
popf
jb
and
daa
cmpsl
aad
jb
in
in
mov
in
pop
or
ja
and
sub
add
mov
inc
dec
adc
aad
push
out
xchg
lahf
mov
mov
imul
test
sbb
cmp
xchg
repz
cltd
ret
or
dec
arpl
push
repz
std
cmp
lret
xchg
fbld
fcompl
jne
mov
popa
iret
jns
nop
ja
repnz
out
ret
sti
mov
and
pop
out
cmc
into
or
loope
rorl
jg
mov
push
lds
imul
in
test
lret
gs
jne
sbbl
divb
sub
cltd
cmpsl
pop
imul
adc
cmp
mov
pop
scas
or
movnti
repz
stos
cwtl
insl
movb
test
ds
push
xchg
movsl
in
dec
call
cmp
mov
ret
into
imul
jo
jmp
out
ja
rcr
out
xchg
arpl
mov
lods
test
mov
daa
iret
ret
inc
insl
lahf
xor
aas
add
mov
and
xor
repnz
inc
iret
jg
push
repnz
imul
pop
imul
and
pop
notl
int
add
lods
xchg
xor
pop
xchg
xchg
repnz
mov
bound
stc
or
pop
mov
adc
jmp
aaa
fnstcw
arpl
xlat
sub
mov
rcrb
jmp
mov
lock
or
jecxz
lret
push
jno
jecxz
iret
cld
int
jns
test
in
popf
test
notl
jge
outsb
cwtl
loopne
into
jmp
push
jno
loope
gs
jne
pop
sub
sti
mov
shl
inc
push
cltd
pop
in
xchg
lahf
jmp
popf
leave
mov
or
sub
cwtl
lods
ja
or
lahf
lret
mov
cmc
xchg
in
out
lods
jae
lahf
push
repnz
sbb
in
cmpsb
iret
stos
jns
mov
jmp
mov
jl
jns
xor
cld
jmp
repz
cmp
cmpsb
mov
iret
ficoms
out
sbb
popa
out
int3
imulb
icebp
and
pop
popf
jmp
addl
bound
fldt
fwait
iret
and
jmp
inc
test
mov
cld
xchg
repnz
into
movsl
inc
dec
jo
adc
fstl
jecxz
mov
sbbl
rcrl
pop
aad
inc
mov
arpl
imul
cmc
mov
es
push
aad
fwait
divl
andl
loope
jecxz
int
push
inc
sbb
push
cmp
sub
cmp
fidivrl
faddp
jne
ja
popf
mov
add
fisttpl
or
out
lret
pop
sub
xchg
lea
in
repz
popa
in
cld
pop
or
cwtl
mov
cmpsl
add
mov
mov
movsl
test
or
jmp
ror
out
gs
idivl
out
shll
stos
dec
shll
aam
aaa
lods
add
ret
iret
cmc
fnstenv
and
aaa
dec
xchg
ret
arpl
add
sub
jae
gs
lds
adc
push
adc
aad
cli
dec
test
push
lods
fisttps
or
xchg
inc
insl
cmpsl
imul
mov
pop
pop
dec
xchg
dec
dec
inc
xchg
popa
dec
and
cli
das
rcrb
ss
test
fwait
sub
mov
mov
shrb
adc
leave
xchg
loope
in
lea
fwait
xorl
repz
rcrb
inc
lret
inc
cmp
cltd
stos
push
pushf
repz
jne
shr
jecxz
pop
insl
mov
xlat
test
popf
filds
push
xor
repz
shlb
popa
ffreep
xchg
mov
fs
and
out
ret
inc
orb
sub
lods
jne
loop
pop
sub
push
adc
adc
pop
popf
add
out
test
mov
lods
pop
test
xchg
imul
loope
add
xchg
jo
or
pop
cld
and
pop
xchg
fcomi
cmpsl
xchg
mov
repz
popa
or
ds
adc
add
xchg
ret
ror
lods
loopne
dec
icebp
adc
sbb
ucomiss
das
and
lds
push
mov
adc
jmp
sub
xchg
arpl
popf
xchg
ss
out
das
cmpsl
pop
mov
in
jmp
mov
repz
mov
xor
cwtl
in
xchg
mov
enter
jnp
jecxz
fbstp
stos
rolb
xor
insl
roll
neg
roll
imul
mov
mov
mov
jl
hlt
inc
cltd
add
mov
mov
xchg
jl
stos
fnstsw
sub
or
mov
fcomp
mov
in
mov
leave
adc
dec
int3
xchg
push
push
into
mull
fadd
inc
xchg
mov
aad
jl
xor
arpl
out
aaa
or
mov
shrl
mov
push
adc
dec
mov
xor
iret
aad
push
or
jne
cld
lds
mov
lods
xor
popa
outsl
leave
hlt
addl
gs
loope
out
xchg
test
mov
mov
and
das
adc
and
adc
in
jge
lret
mov
and
or
mov
gs
mov
call
dec
test
xchg
xor
mov
int
lea
loope
das
jns
inc
push
imul
addr16
mov
or
sbb
imul
lahf
xchg
push
xchg
pop
mov
pop
dec
jmp
shrb
aas
leave
mov
adc
lea
jno
push
in
mov
ja
cmp
roll
cmpsl
lock
mov
add
xlat
fisttps
or
xorl
pop
xchg
xchg
mov
rcll
jmp
ja
arpl
adcl
movsl
pusha
adc
or
imul
movsb
fucom
orl
ficoml
loope
fimull
stos
and
aas
sbb
lret
in
out
fildl
dec
lds
mov
jp
xor
lock
test
adc
incb
popa
shl
pop
cmp
ret
mov
xchg
pop
iret
push
insb
mov
lret
in
mov
pop
divl
movsb
jnp
xor
mov
xchg
outsl
and
cltd
mov
push
in
jg
cmpsl
pop
fisttps
lahf
loope
jge
push
xchg
dec
pop
out
jne
lahf
ljmp
mov
fcmovnb
and
lock
insl
imul
ret
je
ljmp
push
insl
testl
add
lds
mov
imul
pop
or
mull
ja
movsl
gs
adc
mov
push
pop
adc
push
je
loope
cmp
xchg
imul
mov
in
loope
pop
mov
call
jb
test
lcall
jmp
ja
cltd
mov
inc
mov
xlat
cmc
sbb
pop
notl
inc
iret
mov
pop
xchg
shll
xchg
add
sbb
cltd
push
inc
and
divl
pop
add
mov
mov
gs
cli
add
mov
cmc
pop
movsl
leave
lea
lock
jno
test
insl
xchg
repz
jmp
and
jo
sub
cwtl
je
test
in
add
test
dec
mov
or
mov
jmp
popf
sbb
in
xchg
push
out
lahf
sbb
push
jne
xlat
fld
pop
inc
out
sbb
dec
dec
test
push
test
std
lods
xor
sub
fisttpl
inc
and
add
xchg
addl
shr
mov
clc
movsl
outsl
orl
sub
mov
dec
jne
js
roll
fldcw
mov
cld
sti
sbb
cltd
stos
popa
ds
jo
clc
cmp
repz
gs
jmp
gs
arpl
aad
fistl
xchg
sub
adcl
shrl
outsl
aaa
cmp
dec
test
or
scas
dec
in
lock
jge
xchg
cmpsl
lods
lea
mov
jecxz
dec
xchg
loope
repz
add
or
fwait
xchg
jmp
aad
fimull
adc
gs
stos
ret
xchg
pop
push
lret
mov
repz
mov
cltd
xchg
jne
gs
dec
in
shll
nop
fistpl
and
shlb
dec
push
fistl
mov
xchg
dec
push
ss
outsl
xor
pop
shrd
ret
xchg
mov
dec
xchg
and
pop
push
jne
lea
int
lds
push
lret
pop
sub
xchg
iret
cmp
jne
test
fwait
lret
lds
jecxz
sbb
insl
push
stos
aas
int
lds
test
cmp
shr
xor
dec
mov
sbb
aad
mov
mov
cli
dec
loope
xchg
inc
sub
jge
dec
and
jp
out
test
xchg
ret
xorb
insl
aad
fnsave
xchg
sbb
pushf
dec
xchg
outsl
addr16
adcl
sarb
mov
rol
cwtl
cmc
mov
vpsubq
jle
lahf
inc
call
jmp
dec
out
cmpl
adc
or
xchg
mov
aad
sub
shll
mov
fcoml
notl
ret
inc
jbe
jmp
sbb
jecxz
adc
mov
mov
cmpsl
cmp
leave
mov
roll
cmp
int
ret
cmc
jmp
jge
shl
in
sbb
jp
pop
popf
fbld
xchg
pop
lods
jne
test
in
sub
lret
mov
out
mov
or
or
mov
lret
outsl
inc
inc
pop
test
stc
xchg
jbe
mov
mov
lock
jmp
mull
loopnew
gs
loope
lods
or
mov
jecxz
jle
gs
stos
sti
xlat
repnz
out
sbbb
popl
lods
je
mov
movsb
rcll
leave
or
mov
inc
and
adc
ss
adc
mov
push
insl
andl
inc
lock
iret
push
in
sub
cmp
mov
mov
xchg
aad
test
jecxz
lret
fwait
shrl
nop
sbb
add
xlat
push
mov
out
xchg
xor
mov
jmp
out
repz
les
xor
sub
lods
or
int
jp
sub
js
or
leave
test
movsl
dec
jecxz
mov
sub
in
ret
add
mov
xchg
xor
ljmp
cmpsl
xor
loope
dec
das
lret
or
cwtl
mov
gs
xchg
cmpsl
in
nop
or
pop
xchg
push
arpl
addb
mov
into
mov
mov
push
adc
cmp
arpl
jecxz
rep
xlat
xor
ja
mov
shlb
rolb
mov
sub
xchg
cmc
xchg
dec
lret
das
test
jno
ja
rcll
dec
push
sub
adc
cmp
out
dec
loope
jmp
repz
sub
pusha
mov
loope
push
fidivrs
aas
push
out
mov
xchg
insl
addr16
xor
rcll
inc
xchg
repz
popf
inc
jns
xor
call
sbb
fwait
cmp
cld
sub
pushf
cltd
inc
mov
mov
sub
xchg
int
mov
test
lds
and
fsts
out
push
cmpsb
ret
inc
out
pop
movsl
lods
imul
mov
jge
cmpsl
cltd
imul
mov
shl
lcall
xchg
jmp
cwtl
test
cmc
test
fcomps
sub
loope
mov
mov
aad
repz
cmp
fwait
ror
in
gs
dec
out
sbb
popa
push
scas
bnd
xlat
mov
jnp
xlat
rolb
in
roll
sbb
push
jnp
pop
ja
mov
mov
sub
scas
sbb
xchg
sbbl
scas
xlat
sbb
out
in
ja
add
mov
xchg
stos
push
or
or
loope
mov
fwait
mov
or
cwtl
in
xchg
shlb
sahf
sub
add
movsl
cltd
xchg
xor
pop
pop
imul
xor
cmc
and
mov
lcall
insl
out
adc
or
lcall
push
gs
test
jae
test
cmpsl
mov
sub
shrl
sbb
popa
mov
testl
sub
hlt
das
iret
and
push
iret
shrl
or
sbb
insl
popa
adc
pop
jmp
mov
jecxz
lods
rcrb
pop
mov
jns
or
popf
in
faddl
imull
sbb
pop
fildll
cltd
in
in
aad
jecxz
outsl
sub
jmp
lds
add
xchg
out
cmpsl
and
out
call
jecxz
mov
neg
pop
test
cmc
aam
cwtl
lahf
push
jae
popa
addl
sbb
mov
gs
lods
shlb
mov
sti
push
and
andb
cmc
mov
mov
pop
imull
push
adc
loope
outsl
loope
aaa
insl
xor
jnp
push
lret
insl
push
ror
xchg
mov
adc
aaa
and
add
xchg
or
imul
dec
and
sbb
loope
mov
in
arpl
imul
cmp
test
fwait
inc
add
movsl
outsl
out
and
fistl
in
insl
pop
inc
mov
rolb
xchg
mov
xlat
adc
ret
dec
test
movsl
fwait
cmc
mov
mov
shl
test
push
mov
stos
popf
leave
cmpsl
dec
xchg
dec
lret
mov
xor
mov
sub
arpl
adc
jb
xlat
and
in
xorb
popa
and
sbb
lahf
leave
or
cli
lds
gs
cmpsl
inc
cmc
shrl
aaa
jecxz
pop
int
mov
mov
out
stos
jg
imul
push
adc
and
idivb
or
add
testl
push
mov
push
pop
mov
iret
repz
aad
pop
hlt
cmc
outsb
test
jmp
pop
call
cmpl
rclb
lea
in
in
imul
mov
pop
sbb
fstps
out
lahf
inc
sbb
jle
xor
test
test
rcr
sub
cmc
adc
test
cmc
stos
pop
mov
inc
push
pop
inc
push
mov
jmp
mul
xlat
lret
mov
gs
sbb
mov
mov
mov
xchg
add
or
lods
add
dec
mov
jecxz
pop
fnstsw
xchg
inc
add
rol
pop
inc
fstps
dec
ds
pop
xchg
add
pop
or
leave
adc
popa
mov
push
outsl
call
aad
mov
cmp
frstor
xlat
xchg
in
shrl
test
popa
repnz
add
loope
sub
dec
movsl
scas
sbb
lret
and
ret
inc
mov
cmp
adc
imul
data16
out
ret
out
add
test
mov
movsl
pop
je
arpl
jge
mov
jmp
leave
lahf
xor
dec
ljmp
xlat
loop
fldenv
test
jne
das
imul
inc
xor
sahf
cmp
imul
out
or
xlat
in
jmp
jmp
cwtl
add
adc
pusha
cltd
push
in
fbstp
sbb
push
scas
add
add
arpl
decb
adc
mov
nop
popf
mov
adc
sbb
movsb
js
fwait
imul
rol
cwtl
js
outsl
pop
sbbb
dec
push
inc
mov
add
fbstp
cmp
cltd
jmp
aad
cwtl
jmp
decb
in
shlb
jmp
jecxz
mov
dec
iret
ja
fadds
sub
imul
insl
js
out
jecxz
scas
lret
xchg
mov
push
fwait
or
inc
loope
call
cmpsl
pop
xchg
inc
dec
subl
xchg
gs
ja
xchg
out
adc
popf
not
cld
pop
mov
aad
mov
lahf
sub
iret
in
cltd
inc
inc
inc
mov
mov
sbbl
in
adc
adc
mov
popa
pop
cmp
mov
cmpsl
jae
out
enter
loopne
and
add
loope
xlat
inc
pop
popf
xchg
mov
jne
pushf
lock
pop
mov
ret
jecxz
mov
jmp
aad
cltd
xlat
repz
test
movsb
js
stos
iret
orl
push
mov
idivl
mov
insl
fwait
out
sbb
ret
or
pop
cmp
dec
shrl
fsincos
push
jbe
outsl
pop
add
out
inc
push
mov
fincstp
fbstp
push
lea
sub
xchg
imul
add
mov
flds
iret
addl
cmp
adc
enter
jmp
xchg
cmp
dec
pusha
adc
lods
sub
cmpsl
cmc
outsl
xchg
cltd
lret
gs
fs
cwtl
and
adc
shlb
arpl
lds
xchg
lahf
imul
or
and
rclb
dec
imul
outsl
test
in
out
scas
repz
pusha
or
xor
push
xchg
adcl
mov
dec
xchg
mov
sub
fldt
jle
pop
mov
xchg
out
clc
hlt
loope
out
lret
rolb
mov
jecxz
cmc
push
rcll
popa
cmc
scas
xor
and
outsl
sarl
adc
lods
iret
sub
pop
xchg
mov
call
addr16
popa
jne
test
mov
cmp
xchg
insl
in
mov
ja
popa
mov
xchg
fucomi
sbb
inc
xlat
xchg
mov
movl
xchg
jecxz
xchg
mov
add
push
gs
test
xchg
out
pop
and
adc
cmpsl
xchg
popl
push
fildl
aad
mov
push
rcll
sub
iret
stos
outsb
imul
mov
mov
fwait
cld
jecxz
movsl
mov
test
pop
and
jae
lahf
sti
dec
testl
sub
inc
in
xor
rorl
sti
xchg
jne
imul
mov
mov
sti
fwait
xor
int
xchg
cmpsb
movsl
sbbl
cmpsl
in
jne
mov
mov
sbb
cmp
or
jbe
test
sbb
movsb
aam
mov
arpl
shl
outsl
fwait
lret
push
call
adc
jae
in
popa
imul
imul
ret
sub
jno
loope
int
popa
insl
andl
pop
rorl
sarl
test
cli
outsb
mov
jnp
jne
inc
mov
fs
fisubl
adc
xchg
mov
stos
sub
movsl
cmp
jne
xchg
repnz
hlt
arpl
imul
jecxz
arpl
out
mov
mov
aas
pop
and
push
xchg
lea
jle
roll
popf
lahf
jne
iret
sub
test
loop
pop
mov
xlat
in
lds
push
mov
jg
out
xchg
out
jno
loop
lea
shll
cmp
hlt
xchg
test
jo
inc
inc
int
dec
scas
xor
dec
sub
in
aad
xlat
loope
mov
xor
dec
imul
xor
add
lods
int3
push
xchg
out
adc
aad
mov
sub
cmp
mov
lods
fs
xlat
add
jmp
inc
nop
in
mov
hlt
repz
jno
push
out
adc
icebp
addr16
cltd
mov
mov
fisttpl
notb
ror
in
sbb
arpl
mov
fsts
cltd
adc
push
pop
imul
in
ja
jecxz
stos
orb
fnstenv
repnz
mov
mov
scas
popa
pop
lret
test
jmp
int3
sti
dec
push
xchg
push
adc
xchg
orl
add
mov
adc
add
mov
and
push
int3
pop
addb
rcrl
mov
xchg
jge
scas
cld
jp
insl
sub
and
sbb
push
les
stos
mov
jp
mov
ret
jno
mov
popa
shr
pop
add
into
fldl
inc
test
or
mov
xchg
lahf
aam
repnz
or
and
repz
adc
test
andl
jmp
jecxz
les
in
gs
popa
adc
ret
les
leave
mov
mov
lahf
icebp
sbb
popf
lea
repz
cltd
xchg
and
cmpsl
xchg
xchg
pop
add
call
sbb
out
fldt
negl
shll
sbb
add
popa
mov
in
fwait
ljmp
jmp
ret
adc
out
fsts
jbe
mov
out
out
jne
mov
mov
fisttpll
jp
ja
fcompl
sub
mov
rcrb
popa
fnsave
pop
aad
cmc
out
sbbl
jecxz
leave
add
mov
xchg
shll
loope
adc
movsb
adc
shll
fwait
xchg
aad
or
push
mov
xchg
mov
sub
jl
xor
aas
test
add
lds
cmc
popa
icebp
mov
lds
cmp
inc
mov
and
cmp
add
gs
inc
jo
lahf
inc
mov
mov
xchg
lcall
lahf
aad
insl
fnstsw
stos
and
add
iret
mov
orl
repz
push
clc
fsubl
xor
adc
popa
mov
out
cwtl
orb
notl
repz
mov
fwait
jo
int
stos
adc
push
mov
movlhps
sbb
loope
out
fldl
mov
outsl
jae
rcrl
add
vmovaps
cwtl
mov
subl
popa
lods
pop
push
or
fistl
adc
imul
outsb
arpl
lahf
fwait
and
push
push
dec
xor
pop
cli
cmp
fisttps
mov
adc
stos
test
inc
mov
add
mov
cmpsb
movsl
mov
out
mov
sub
lds
out
mov
ret
mov
lea
test
mov
outsl
push
or
add
pop
aam
xchg
rcrl
imul
dec
shlb
gs
int
js
cmp
cmpsl
lock
rclb
in
sub
lcall
lahf
dec
lahf
push
sbb
stos
inc
ret
ja
orl
jecxz
mov
xchg
movsb
and
out
add
in
imul
addr16
aad
stos
cmp
repz
stos
sub
out
fildl
dec
pop
out
aaa
ja
ret
xchg
fwait
cwtl
shll
mov
in
dec
mov
popf
xchg
mov
outsl
pop
sbb
cltd
sub
shl
add
ffreep
xchg
add
jae
pop
and
pop
add
cmp
xchg
jecxz
push
dec
popa
mov
pop
mov
scas
ljmp
imul
jnp
stos
dec
ret
mov
pop
cmc
jecxz
xchg
sahf
push
add
out
movsl
loope
notl
inc
fdivs
mov
andb
in
xchg
xchg
cmc
scas
scas
mov
mov
sub
cmpsl
mov
test
fbld
call
loopne
mov
lret
sub
sub
cmp
repz
jnp
fnstenv
lahf
pop
mov
push
pop
imul
repz
adcl
add
pushf
fistps
pushf
stos
ror
nop
cmp
arpl
xchg
push
mov
int
repz
xor
fmull
jmp
jns
outsl
xor
call
push
ret
add
adc
jb
xchg
inc
xor
fwait
test
outsb
xchg
mov
in
cltd
fdivr
push
xchg
jecxz
mov
ror
int
nop
adc
outsl
test
mov
lahf
jne
jns
jle
cmp
mov
div
sub
jecxz
lret
jmp
add
mov
inc
imul
lahf
cmp
jge
dec
movsl
test
sarl
jmp
mul
addr16
fsubl
lock
xor
jmp
and
jo
xchg
xchg
fnstsw
imul
fucomip
sub
jecxz
sbb
push
cwtl
add
arpl
inc
xlat
push
shl
sbb
pop
inc
outsb
clc
jg
iret
jg
mov
shlb
xchg
dec
shrl
cmc
cld
cmp
cwtl
imul
jmp
imul
cmp
rorl
es
push
mov
cmpsl
inc
mov
imul
inc
lds
mov
in
stos
mov
stos
out
mov
imul
scas
xchg
mov
mov
add
jno
in
dec
dec
outsl
aad
movsl
jne
lods
push
push
add
and
sbb
gs
push
hlt
jmp
fwait
sbb
clc
cmp
sub
mov
subl
jmp
into
iret
faddp
out
popf
mov
clc
loope
fld
mov
ss
push
icebp
and
filds
stos
lds
push
xor
and
popa
pop
adc
in
or
leave
mov
jmp
rcrl
pop
sti
fwait
dec
jno
popf
call
dec
idivl
xchg
mov
jp
mov
fistpl
pop
xchg
popa
outsl
ror
out
fcompl
rcll
cwtl
jae
popa
xchg
js
int
mov
mov
xchg
subl
cltd
add
out
dec
xor
imul
adc
jecxz
daa
outsl
xor
subl
mov
and
shrl
jo
stos
fs
xchg
cltd
and
mov
out
inc
or
andb
mov
push
testl
cmpsl
outsl
insl
mov
sub
inc
mov
lds
inc
mov
cmp
mov
ret
scas
test
inc
cmc
scas
jne
pushf
cwtl
sub
leave
out
imul
int
movsl
arpl
add
ja
jmp
test
ret
arpl
rcr
jno
jmp
lods
xor
aad
adc
add
push
loope
adc
out
repz
int
mov
roll
jmp
jmp
imul
or
mov
cmc
imul
clc
mov
mov
inc
sahf
mov
ds
xlat
shlb
sbb
xchg
fcom
cltd
outsl
dec
in
and
xchg
ss
rcl
dec
adc
out
in
lret
ret
jns
leave
jne
fdivs
cmpsl
scas
jg
lds
gs
int
jmp
pop
xor
xlat
dec
cmp
lahf
xchg
dec
sar
xchg
cwtl
pop
add
arpl
aas
pop
xchg
push
pusha
xor
in
idivb
sbb
inc
scas
xchg
test
xorl
sub
lahf
imul
ret
cmp
ret
fstl
out
pop
lods
iret
jnp,pt
xor
xorl
ja
out
fwait
lock
imul
shlb
dec
mov
fisttps
mov
sub
cwtl
shll
jne
sub
fs
adc
in
aad
ds
test
lods
in
insb
mov
std
mov
aas
in
mov
int3
xchg
hlt
lahf
mov
push
lret
ljmp
repnz
xchg
mov
push
dec
out
mov
xchg
test
inc
dec
jl
add
or
xor
jmp
lea
test
stos
add
out
mov
ds
cmp
ret
imul
pop
pop
fisubl
jecxz
shlb
insl
and
jmp
cmc
push
gs
xchg
jl
cld
lahf
push
shll
xchg
popa
and
push
daa
sub
mov
adc
lea
cwtl
daa
add
aas
xchg
imul
cmp
cmpsl
movsl
fucomp
cmc
test
in
shl
push
inc
sbbl
sbb
cmp
arpl
mov
and
add
lds
cmc
test
sbb
stc
outsb
mov
mov
fcomip
xor
pop
lahf
mov
sub
imul
or
cltd
add
mov
iret
out
fadds
test
gs
into
aas
in
add
dec
fs
ret
out
add
testl
out
aad
xchg
add
lret
movsl
sub
ret
test
rorl
fs
xchg
test
pop
aam
push
nop
testl
loope
in
addr16
push
cmpsl
leave
stos
cmpsl
add
outsl
cltd
rcr
mov
fsts
mov
xchg
sbb
ja
lret
xchg
in
repz
jecxz
fwait
push
xchg
cli
mov
loopne
sub
pop
test
xor
loope
lock
rcl
int
imul
inc
lahf
cmp
clc
sbb
sbb
ret
call
pop
fs
test
pand
in
mov
inc
pusha
cwtl
out
aad
loope
xlat
shrl
call
mov
out
stos
cmp
xchg
xchg
int3
mov
xrelease
jo
out
and
jecxz
xchg
xchg
push
mov
jo
or
xchg
fwait
scas
loope
aam
mov
xchg
mov
loop
mov
or
push
out
mov
cld
mov
xlat
xchg
test
popf
fld
xchg
popa
in
add
scas
stos
jo
jmp
dec
stos
movb
xchg
out
xchg
jnp
mov
roll
loope
cmc
cltd
rcrl
test
leave
jecxz
fldl
jmp
cwtl
test
mov
adc
lods
pop
add
jne
mov
add
and
in
sub
imul
mov
push
repz
test
movsl
shl
in
or
popf
pop
in
cmpsl
dec
movsl
jmp
or
fucomp
mov
jecxz
and
shll
mov
jp
xchg
xchg
popa
out
divl
arpl
mov
out
lret
cmp
mov
and
shll
mov
adc
push
aaa
insl
mov
cmpsl
inc
cmc
lahf
add
nop
inc
cmp
push
xchg
aam
sarl
stos
fs
jmp
jmp
lret
jne
xlat
cld
sub
setle
adcb
push
cmpsl
mov
xorl
sub
clc
mov
cmp
flds
cwtl
push
pop
jae
out
imul
lods
sub
out
shr
sub
and
outsl
fists
test
mov
das
and
shlb
push
ljmp
mov
test
mov
xchg
jne
lods
frstor
xor
js
scas
pop
mov
test
mov
popf
cmpl
int
inc
sub
add
imull
sub
fcomps
call
jg
and
ret
mov
cli
mov
imul
pusha
aam
movsb
outsl
or
stos
pushf
aam
and
xchg
mov
popf
call
lahf
sub
cmc
cmpsl
int3
dec
cmp
leave
sbb
rolb
jb
xlat
lods
xor
out
out
sub
cmpb
ja
imul
mov
in
aad
mov
out
or
xchg
rcrl
fcomi
push
ds
repnz
je
les
clc
jmp
in
cmpsl
jecxz
adc
cmpsl
mov
repz
test
cmc
pop
mov
mov
out
pop
lea
jbe
jg
imul
sbb
push
mov
mov
inc
xchg
les
sbb
mov
nop
add
cmpb
stos
jo
maskmovq
notl
outsl
jne
in
xchg
cwtl
insl
dec
xorl
xchg
cmp
cmp
add
out
cli
ret
test
push
jo
pop
push
lods
cmpsb
das
arpl
mov
out
jmp
lahf
and
scas
xchg
sbb
int3
jne
leave
addr16
inc
enter
shrl
repz
testb
movsl
fwait
mov
fisttpll
or
popa
stos
xchg
fucomi
cmpsl
test
sbb
test
mov
mov
add
stos
mov
hlt
mov
mov
pop
in
inc
out
ds
fdiv
mov
or
push
aaa
push
push
mov
mov
sbb
adc
outsl
int3
pop
inc
insl
lahf
and
cmp
rcrl
mov
mov
addr16
lahf
lea
loope
rorl
xchg
gs
dec
xor
in
jecxz
push
imul
movsl
lahf
and
or
popf
scas
aad
cmpsb
dec
fildl
in
push
imul
mov
fcmovnb
scas
cmpsl
push
repnz
outsb
call
cmc
pop
stc
mov
add
iret
lret
add
mov
orl
add
shl
ror
jmp
adc
les
pop
fcmovnb
lds
mov
aam
pop
jp
cmpsl
arpl
imul
mov
jecxz
out
in
out
mov
jmp
xlat
adc
add
dec
sbb
addr16
mov
movsb
aad
in
mov
inc
pop
xchg
sbb
mov
orl
jo
hlt
mov
iret
adc
out
lret
les
cmp
mov
ja
in
and
mov
ret
negl
jae
ja
leave
cld
jle
sub
lea
out
adc
int
lods
insl
xchg
mov
push
jno
sbb
outsl
ret
mov
xchg
xorb
lret
cmc
xchg
cltd
idivl
orb
jmp
jae
repnz
or
mov
arpl
sbb
adc
fbld
inc
aad
pop
add
mov
push
xchg
enter
rcl
mov
jne
imul
sub
xchg
aad
mov
jo
popa
stos
movsl
ja
stos
cmp
mov
int
adc
add
out
and
test
icebp
jmp
int
insl
lahf
imul
ljmp
cmc
iret
cmp
pop
andl
sbb
add
jl
pop
stos
xor
roll
cli
ret
pushl
mov
ja
aas
and
js
test
imul
gs
adc
cwtl
bound
mov
mov
cmp
xchg
notb
jns
pop
data16
xor
push
sbb
mov
xchg
mov
fnstcw
lcall
push
popa
fwait
test
int
xchg
test
jmp
fsubl
ljmp
aad
xlat
outsl
xlat
cltd
xchg
enter
push
lds
into
test
xor
int
into
ds
push
jmp
fnstenv
out
mov
pop
sarb
sti
sub
mov
in
xchg
ja
mov
cltd
add
or
dec
mov
dec
sbbl
scas
fucomip
pop
mov
xor
and
fdivrl
fiadds
add
jmp
popa
inc
adc
sbb
int
mov
sbb
mov
mov
jmp
lods
gs
mov
mov
xor
in
aad
or
mov
in
pop
int
test
scas
movsl
repnz
aam
push
adc
xor
andl
jo
jno
sbb
mov
mov
jne
push
sub
sahf
ja
inc
cmp
lret
or
fwait
xchg
xchg
xlat
imul
pop
sbb
std
inc
and
addb
aas
out
cmc
cmp
sysenter
mov
cld
dec
arpl
inc
repz
outsl
sbb
pop
inc
pop
shl
subl
pop
out
fwait
scas
scas
pop
lret
mov
xchg
loope
fsts
and
inc
xchg
sub
iret
popl
sub
in
repz
lahf
pop
insl
leave
cmpsb
sub
mov
and
int3
mov
jge
mov
mov
lods
inc
jb
push
mov
push
xchg
adc
push
addr16
iret
ja
mov
cmpsl
and
pop
iret
pop
sub
aad
pop
mov
mov
and
jno
cltd
dec
fildl
ret
lds
add
mov
lods
shll
iret
mov
add
push
ret
mov
fldt
sbb
clc
jne
fldl
xchg
mov
in
shlb
sbb
scas
add
pop
cltd
mov
shl
mov
ret
sarl
in
xchg
sbb
dec
cwtl
mov
lahf
int
repz
loope
addr16
cmpsl
dec
movsl
test
pop
aad
cmpl
sti
xchg
lahf
repnz
mov
outsb
pop
mov
dec
jecxz
rorl
pop
adc
iret
push
mov
pop
cmp
pop
push
addr16
push
sub
jb
jp
mov
xchg
mov
arpl
cmpsl
cs
cmp
push
xchg
div
add
adc
popa
jmp
sub
fistpl
out
outsl
fwait
mov
xor
imul
jl
xor
lahf
mov
hlt
and
and
mov
jne
push
sbb
jb
ja
repz
sti
cmpsl
xchg
mov
push
ret
clc
ficoml
in
lahf
movsl
in
sti
inc
pop
push
test
rol
adc
sbb
mov
and
mov
out
jecxz
int
and
xchg
lahf
rol
addr16
into
inc
xchg
mov
push
xor
ret
in
test
int
add
or
xor
sub
mov
aad
imul
mov
loop
shl
fwait
add
cltd
test
repz
lds
out
insl
adc
xor
lcall
push
mov
orl
mov
repz
xor
mov
mov
mov
add
cltd
fucomip
jp
push
fldcw
imul
xor
adc
jecxz
insl
rcl
mov
incb
movsl
jp
mov
pushf
or
add
mov
jge
fucomip
cmp
fnstenv
sbb
cmc
dec
ja
cmp
mov
xchg
push
popf
mov
xchg
jmp
ja
fstpl
int3
lds
lea
fistps
cmpsl
mov
or
jg
cld
sbb
fbstp
push
icebp
and
cmpsl
mov
into
out
or
jl
adc
adc
test
gs
pop
lahf
add
mov
in
std
xorl
pop
notl
dec
in
into
adc
arpl
jge
in
xchg
lds
adc
adc
in
push
jl
cmc
mov
xor
lret
fldenv
mov
roll
test
scas
mov
dec
imul
test
int
adc
notl
xchg
add
daa
push
out
arpl
loopne
lret
mov
inc
mov
imul
mov
cmp
cmp
in
lods
mov
add
pop
int
jbe
xchg
ds
lea
out
iret
rcrl
or
mov
sbbb
mov
jecxz
out
aaa
xorl
stc
shl
das
mov
fnstcw
cmpsl
xor
mov
xchg
mov
inc
or
xor
add
sbb
jnp
xor
cwtl
mov
pop
jno
aad
stos
inc
xchg
xchg
scas
xchg
xchg
inc
xor
adc
cmp
cwtl
mov
mov
mov
addr16
jg
roll
lea
in
int3
adc
pop
outsl
add
cmpl
shll
aaa
inc
inc
in
xchg
or
test
sbb
icebp
sti
call
aaa
jae
insl
push
xchg
add
add
arpl
cmp
test
call
xchg
imul
test
jp
jg
iret
mov
div
lods
mov
xchg
fmul
cmp
das
jp
dec
sub
js
dec
gs
aas
stos
add
mov
dec
jb
addb
sarb
dec
stos
cwtl
js
ret
xchg
inc
xlat
xchg
leave
insb
rcrl
mov
sub
dec
mov
jle
popa
loope
out
loop
scas
iret
sub
mov
adc
test
and
shr
mov
fwait
in
repz
aam
cmc
leave
test
shl
mov
sbb
ja
mov
cmp
sub
addr16
in
pop
mov
js
sub
mov
push
mov
scas
out
sub
fwait
call
mov
icebp
int
out
lea
push
cli
lds
shrb
out
xchg
push
xor
and
sar
sti
test
xchg
push
idiv
dec
sbb
push
xor
inc
ret
aad
repz
loopne
mov
and
mov
mov
lcall
inc
repnz
pop
and
outsl
roll
popa
test
or
jmp
fmuls
movsl
mov
ret
inc
push
sbb
mov
cmp
arpl
and
adc
popa
test
sbb
inc
fstl
cmpsl
cmp
aad
sarl
fsubp
xchg
xchg
sub
aad
cmp
xchg
int
mov
test
xchg
xlat
add
addr16
out
push
imul
mov
jae
cmpsl
pop
jne
inc
and
mov
mov
cmpsl
adc
xor
cld
repz
in
lea
pop
cmp
outsl
adcl
ret
ja
xchg
in
fwait
fst
push
jns
sti
shll
andb
cmc
cmp
shl
mov
mov
shlb
ret
fildl
rep
mov
jmp
xlat
jmp
dec
sbb
fldenv
gs
sub
mov
iret
mov
xor
push
xlat
and
jns
xchg
add
or
cltd
add
ja
pop
mov
movsl
dec
repz
sub
push
jmp
fwait
shll
mov
imul
repz
mov
adc
iret
mov
arpl
mov
cmpsl
loope
mov
es
add
adc
lds
pop
dec
adc
mov
sbb
shll
mov
and
iret
lds
imul
xchg
ja
pop
sub
mov
and
jno
lds
imul
test
mov
jbe
push
mov
jecxz
push
popf
ljmp
dec
icebp
in
cmp
mov
sbb
push
xchg
iret
in
push
or
cmc
cmpsl
in
mov
add
gs
xor
push
imul
loope
mov
inc
dec
xchg
fmuls
repnz
fwait
push
test
sbb
gs
xor
ss
gs
xchg
fsubs
outsl
xchg
fisttpl
test
xchg
mov
cmpsl
jmp
and
add
lret
xchg
mov
lret
inc
cmp
out
fistpll
push
ja
shll
or
jo
orb
cmpsb
adc
xchg
add
aaa
mov
xchg
test
loopne
ret
jae
out
into
stos
nop
iret
arpl
xlat
in
jecxz
jne
outsb
mov
mov
xchg
inc
add
mov
mov
sub
in
int
lcall
frndint
orl
popa
lock
testl
roll
mov
sub
jmp
sub
cmpsl
lds
or
sahf
stos
sti
dec
mov
sti
js
mov
pusha
lret
push
jne
popf
movsl
pushf
test
stos
je
and
fists
out
fmul
inc
test
orb
adc
xchg
jae
adc
adc
mov
ret
repz
scas
pop
dec
jno
loop
imul
or
aas
cs
mov
mov
adc
mov
sbb
pop
mov
in
mov
or
push
adc
in
fnstcw
xchg
sbb
inc
addb
orb
clc
sub
push
ss
lret
xchg
repnz
stos
ret
cmp
and
add
fwait
mov
in
mov
adc
cmc
mov
or
arpl
lahf
ret
pop
push
fiadds
sub
mov
dec
cltd
int
imul
cli
lcall
out
jg
mov
mov
out
add
or
pop
out
push
sub
inc
in
lea
test
paddusw
jmp
pop
xchg
pop
push
jg
mov
aas
stos
outsl
fistpl
or
ret
and
cltd
sub
addr16
or
xor
rcll
cmpsl
movsl
lock
popf
iret
xchg
add
sub
inc
iret
mov
imul
stos
cmc
imul
cmp
leave
ds
leave
xchg
or
fisubl
sub
shr
outsb
adc
or
xor
sub
ftst
or
fcmovnb
or
imul
popa
in
aas
test
leave
jecxz
adc
or
in
out
cmp
popf
jne
out
lods
lahf
push
shll
scas
sarb
xchg
fucomp
xchg
lods
mov
fisubrs
out
adc
mov
and
adc
lds
mov
call
mov
push
add
mov
cs
adc
pop
imul
mov
lret
jb
loopne
popf
mov
push
mov
sbbl
dec
push
jmp
enter
and
mov
add
idivl
jmp
xchg
js
mov
insl
pop
mov
negb
int
out
or
fdivs
arpl
int
push
cmpsl
jmp
lcall
adc
cli
add
ret
lret
mov
sub
mov
mov
fucomi
fxch
xlat
mov
ds
jg
mov
push
dec
or
js
dec
leave
cmp
sbbl
arpl
test
xlat
into
mov
cltd
imul
rolb
std
stc
outsl
xor
or
cmp
int
mov
imul
out
fldcw
test
xchg
imul
xchg
addr16
sbb
jmp
fwait
repz
xorl
nop
jl
sbb
fildl
fucompp
gs
sub
cmpsl
cmpl
out
in
imul
or
sbb
xchg
sub
shll
mov
out
mov
arpl
lock
ret
mov
movsl
mov
dec
test
fldcw
std
jb
mov
jb
jmp
push
push
jnp
hlt
ljmp
aam
push
ljmp
xchg
mov
pop
loope
out
popf
pop
rcr
jne
leave
in
shr
into
fwait
add
int
jp
cmp
cltd
gs
lods
in
xchg
jecxz
jno
shl
imull
adc
scas
rorl
popa
aas
pop
lock
ljmp
arpl
cld
xor
pop
popf
push
mov
pop
daa
rcl
mov
into
mov
insl
out
hlt
xchg
std
lea
or
rep
fildll
cld
insl
dec
gs
push
lret
mov
popf
popa
test
mov
daa
test
addl
cmp
xchg
popf
imul
or
stos
and
andl
rcl
xlat
or
clc
arpl
lea
mov
mov
pop
mov
arpl
sub
loop
lds
fcmovnbe
sarb
imul
pop
popa
iret
leave
repz
pop
add
int
in
xchg
push
adc
mov
ja
cld
mov
adc
jae
cld
les
add
mov
pop
cltd
int
jnp
scas
jnp
and
and
rorb
imul
dec
aaa
sub
aam
loope
xor
cltd
movsl
cmpsl
xchg
fadd
repnz
lea
cmpsl
jecxz
mull
call
cld
inc
int3
mov
adc
test
and
mov
xor
lods
xchg
jecxz
mov
aam
lahf
gs
addl
outsl
lock
push
cmpsl
jmp
fstpl
lahf
jecxz
cmpsl
outsb
jne
jmp
shlb
daa
fildll
in
test
iret
inc
sub
lock
aad
subb
sbb
pop
test
cmc
mov
out
sbb
cmpl
cmp
xchg
ficomps
aas
pop
xchg
shlb
mov
loop
popa
xlat
int3
out
popf
push
jmp
mov
loopne
les
frstor
int3
jmp
mov
jne
ja
cmc
ret
mov
sbb
adc
shl
addr16
int
mov
cmp
sbb
ret
push
ja
sbb
in
into
cmp
mov
inc
movl
cltd
mov
out
les
mov
jecxz
cmpsl
cltd
xchg
stc
xchg
dec
andl
mov
and
xchg
mov
xchg
test
add
fisttpll
mov
out
mov
ret
ds
rorl
jne
in
jmp
daa
out
divl
insl
pop
rcrl
mov
jne
cwtl
mov
ljmp
xchg
inc
mov
and
sbb
jb
test
dec
push
imul
cmp
jle
aas
out
add
outsl
leave
jp
shll
fwait
mov
lea
popf
fldcw
pop
sbb
push
movl
loopne
dec
sbbl
sbb
mov
adc
iret
mov
mov
xchg
test
je
push
fldenv
aad
subl
xchg
imul
add
pop
xor
stos
repz
cmpsl
lret
jecxz
movsb
je
lods
sbb
or
mov
ja
pop
arpl
adc
xchg
loope
sub
aad
ss
int
lds
mov
mov
sub
movsl
jmp
scas
dec
and
inc
shll
aaa
data16
lods
cmp
inc
test
repz
mov
mov
mov
cwtl
push
mov
icebp
adc
lea
mov
jbe
jo
loopne
sub
je
sbb
mov
push
lret
cmp
dec
mov
daa
popa
rolb
lcall
fwait
out
sti
mov
int
inc
fildll
inc
ret
popa
mov
push
imulb
mov
in
notl
adc
bound
cmp
sahf
xor
mov
test
repz
jne
cmp
and
sub
enter
rep
arpl
shl
lods
or
jmp
outsb
mov
sbb
adc
jnp
mov
xor
push
fistpl
push
mov
insl
lahf
into
cltd
and
sbb
int3
cmp
pop
andl
cld
xor
les
inc
mov
les
xchg
imul
repz
sbb
in
subl
push
jb
loop
loop
les
push
mov
data16
mov
imul
pop
in
pop
xor
sbb
jmp
push
push
push
sahf
xor
mov
pop
mov
movsl
xchg
ja
insb
imul
lock
mov
lea
pop
lahf
push
imul
out
in
cs
loop
cmp
fidivs
xchg
ret
and
ds
aaa
dec
mov
sub
mov
fnstcw
arpl
cmpsl
jne
cld
jp
xor
adc
call
inc
das
aam
jle
xchg
f2xm1
lods
push
mov
cmp
xchg
push
inc
pop
sbbl
push
shrl
das
and
push
imul
push
pop
mov
sbb
int
jg
imul
sub
push
movsl
insl
jnp
fldt
leave
filds
and
inc
xor
xchg
jle
les
xchg
mov
xor
dec
cmpb
mov
inc
and
notl
jnp
in
int3
xor
ja
mov
lahf
insl
test
inc
adc
fwait
cmp
iret
ret
mov
and
or
sahf
xor
sub
fs
push
add
mov
and
sub
xchg
push
and
addb
subl
jle
fmuls
jbe
fwait
inc
add
and
adc
mov
pop
and
jle
inc
das
ja
jmp
inc
sub
mov
aad
sub
cmp
jno
pop
jne
xor
negl
in
jb,pn
sti
inc
popf
insl
xor
jle
push
mov
and
jge
movsb
scas
dec
dec
int3
xor
repz
pop
inc
in
mov
sbb
xor
rcll
in
fmull
dec
jb
push
imul
add
outsb
mov
push
pop
nop
jmp
xor
in
out
aad
dec
xor
sarb
movsb
xor
jns
ljmp
out
cmp
iret
or
aad
mov
mov
rcrb
rcrl
sbb
lea
and
sbb
mov
insl
cmc
or
xchg
and
call
mov
jecxz
xchg
fsts
scas
or
mov
mov
imul
es
je
imul
fsts
fsubl
fists
lods
dec
out
pop
inc
xchg
insl
xchg
xchg
lea
addl
fstl
jecxz
repz
sub
cmc
addl
add
stos
repnz
fcoms
dec
loope
repz
shll
mov
insl
inc
cmpsb
insl
push
call
outsl
lahf
jne
repnz
jbe
stos
mov
jecxz
fcom
lahf
adc
iret
fbld
cld
aad
sbb
sbb
shrl
sub
loope
lds
jmp
jns
test
pop
mov
imul
jne
push
popf
ret
leave
jge
enter
mov
ja
sbbl
push
sbb
ret
rcr
popa
aad
clc
or
xchg
sbb
pop
add
test
in
jmp
enter
clc
scas
insl
repz
out
outsb
push
mov
fcmovu
push
rcrl
mov
pop
and
rorl
movsl
xchg
pop
dec
sub
push
add
mov
xchg
sub
adc
mov
mov
shl
fisttpl
cwtl
daa
in
cltd
iret
lock
lods
shr
mov
lds
push
cmpsl
in
adc
insl
mov
xor
pop
cmp
sub
adc
stos
jne
addb
mov
in
jmp
xchg
enter
in
jge
movsl
jge
and
out
mov
xor
mov
leave
out
aaa
shl
test
movsl
jmp
and
sbb
jecxz
cmp
pop
pop
test
mov
scas
incl
aad
loope
push
in
cmpsl
mov
pusha
dec
popa
mov
ja
xchg
outsl
sub
sub
mov
mov
fistps
ja
mov
shlb
dec
in
int
fsubr
xchg
cmpsl
push
pop
rorl
loopne
jne
dec
mov
sbbl
imul
dec
add
mov
xchg
popf
test
xorb
clc
inc
stos
xchg
inc
pop
mov
sub
xor
mov
enter
lret
movsl
xchg
test
out
iret
cwtl
in
pop
mov
adc
add
popa
lea
imul
fstpt
popf
shlb
lea
xchg
fprem1
push
cltd
push
lret
pop
ret
int
test
mov
dec
out
lret
mov
pop
jmp
test
add
xchg
inc
sub
repz
jns
ljmp
sub
xchg
popa
iret
js
xchg
out
add
mov
fcmovnbe
and
jns
lds
jae
push
stos
popa
xlat
neg
add
fpatan
xlat
xor
imul
daa
insl
leave
stos
jmp
outsl
cmpsl
fisubrl
gs
flds
stos
mov
ret
inc
inc
cmpsl
or
shll
jmp
clc
es
loope
jecxz
leave
test
clc
icebp
cwtl
xchg
fidivrs
add
inc
fimuls
mov
repz
addl
mov
mov
out
out
aad
out
and
je
ret
stos
roll
xor
sbb
cmp
sbbl
lret
rcrl
or
enter
in
sub
adcb
iret
or
push
sbb
lock
scas
pop
jne
mov
ja
xchg
fwait
out
mov
adc
xchg
lahf
xchg
leave
leave
and
flds
popa
and
cmpsl
sbb
ljmp
js
popa
in
test
xchg
das
test
push
aad
cmp
das
rcrl
jmp
popa
orb
call
or
pop
mov
cmpl
inc
sbb
shll
movsb
and
jae
scas
repz
add
mov
in
sbb
cwtl
jmp
pusha
cwtl
movsl
pop
and
inc
sub
or
xchg
jecxz
mov
pmulhuw
push
mov
lea
jae
std
inc
loop
mov
out
jecxz
repz
jne
push
adc
pop
xchg
xchg
dec
popa
fcmovne
sbb
sbb
ret
mov
fcoml
cmc
inc
fs
iret
mov
xchg
test
std
test
popa
xor
cmp
flds
scas
adc
add
aam
stos
adc
push
in
add
mov
xchg
jmp
jl
enter
or
mov
cmc
lret
pop
addb
xor
outsl
movsl
xchg
aad
or
and
jmp
mov
add
mov
arpl
and
in
ror
cmp
mov
pop
and
or
lret
sub
jp
or
pop
lds
pop
jne
mov
popa
aad
cltd
out
outsl
cmc
ja
push
cmp
adc
xlat
js
fnsave
insl
outsl
and
pop
popa
cli
sub
ds
mov
xor
xchg
das
jmp
and
xchg
popf
roll
cmc
cmp
lcall
inc
jbe
int3
aam
mov
test
call
mov
rcl
shl
sub
cmp
addl
dec
pop
sahf
and
mov
out
test
loop
mov
xchg
loope
mov
jg
lcall
jecxz
mov
repz
stos
push
rcll
mov
dec
sub
cmpsl
enter
call
jae
inc
gs
out
ljmp
outsl
cltd
in
mov
and
or
jb
negl
mov
lock
jnp
fstpl
mov
aad
cmp
xchg
imul
mov
jmp
pop
pop
fst
fwait
xlat
negl
out
iret
cwtl
roll
mov
mov
jns
sub
mov
jae
iret
dec
xlat
je
ja
pop
dec
test
add
test
test
mov
xor
sub
lret
sub
sub
out
pop
jge
es
cmc
int
and
iret
imul
in
icebp
popa
jmp
addr16
in
and
lea
movsl
lahf
push
stc
jae
ja
out
mov
xlat
in
loope
xchg
pop
lods
or
sub
les
mov
aas
aas
outsl
lock
inc
dec
fwait
sarl
hlt
or
rcll
add
sub
push
push
mov
cwtl
inc
mov
mov
and
iret
mov
push
mov
xchg
push
sub
out
lcall
test
lds
or
lret
fs
fwait
loope
adcb
mov
sub
pop
lods
cmp
mov
int3
ficomps
out
push
fstl
cmc
jmp
adc
dec
dec
das
test
ret
lahf
lea
fwait
out
lds
loopne
out
sub
fwait
mov
roll
sbb
cmpsl
mov
push
sub
add
lcall
fstpt
add
pop
cltd
outsl
sbb
rcll
popf
test
pop
jns
iret
fwait
lods
fsts
pop
adc
adcl
fsubl
int
imul
or
fwait
jmp
test
mov
test
push
fldt
mov
push
xchg
out
lea
aad
insl
leave
fsts
aad
sbb
xlat
lds
mov
inc
out
mov
sbbb
rolb
inc
dec
cld
ret
vpaddd
loope
jecxz
jmp
dec
xchg
mov
mov
out
jo
and
leave
lahf
add
jl
pop
cmp
xlat
add
mov
mov
jnp
cmpsl
push
lret
or
popf
jge
push
xchg
lahf
repz
jno
mov
and
shll
outsl
push
inc
ja
test
fdivrp
sbb
push
mov
push
pop
jne
in
aad
jns
fwait
pop
arpl
mov
popa
xchg
xchg
push
xchg
push
iret
pushf
lods
xchg
lahf
and
xor
cs
mov
popf
dec
ret
adc
xorl
add
xchg
xchg
ja
dec
fucomip
pop
cltd
loope
pmaddwd
test
leave
and
mov
fidivl
cltd
cltd
xor
test
in
ret
or
test
cli
mov
leave
jae
xchg
sub
test
subl
push
adc
mov
cmc
test
in
jmp
sub
adc
xchg
mov
fildl
les
dec
add
lea
cwtl
xchg
cmc
sub
cli
dec
jmp
xlat
outsl
in
mov
sbb
js
sub
movsl
gs
xor
pop
leave
jecxz
cli
sarl
arpl
lret
lea
ret
mov
loope
popa
lds
fsts
mov
dec
clc
mov
lea
imul
pop
cmc
arpl
mov
adc
adc
and
enter
rcrl
lcall
xchg
cwtl
xchg
jmp
adc
cmpl
jno
pusha
adc
cmpsl
and
sub
shll
sub
add
and
leave
out
jb
movsl
adcb
iret
popl
and
imul
cmpsl
ret
mov
xor
xor
stc
addr16
jb
fdivrl
fstps
adc
shl
xchg
mov
ret
addr16
mov
mov
in
aad
fstl
cmpsl
out
ret
js
pop
aaa
iret
pop
adc
loope
dec
jmp
gs
adc
push
das
ja
jmp
popa
mov
mov
sub
shrl
cmp
out
xchg
cwtl
push
rolb
push
mov
testb
dec
push
cmpsl
leave
mov
in
insl
xchg
add
je
mov
fwait
mov
xchg
cmp
lret
cmp
xor
jnp
mov
stc
imul
stos
xor
sub
fiaddl
pop
in
test
and
shll
ret
lahf
loope
negl
fistpll
lret
test
add
aad
fdivrs
sbb
imul
lret
stos
pop
arpl
lret
mov
xlat
aad
out
loope
in
xchg
lahf
in
hlt
mov
sarl
lret
inc
mov
leave
rep
fisttpll
mov
jo
pop
pop
bound
xlat
fstps
movl
pop
lods
je
xor
xor
cwtl
test
sbb
jmp
loope
lds
ja
or
sbb
mov
popa
lds
add
jmp
mov
jecxz
push
sbb
enter
stos
mov
aas
sub
shlb
lock
lods
aaa
dec
push
in
ja
ret
dec
mov
dec
xchg
je
adc
sbb
iret
imul
mov
roll
jne
cmc
sbb
shl
mov
and
stos
ffree
mov
imul
shrl
sbb
fldenv
mov
insl
mov
push
gs
out
lds
jmp
mov
adcb
lods
cwtl
xchg
cmpsb
imul
call
lahf
in
sub
cltd
imul
ficoml
in
xorb
ret
cmp
pop
fstp
ja
in
xchg
cmp
rcrl
vpandn
les
xchg
out
xchg
stos
push
shlb
rorl
fcmovnu
xchg
shrl
scas
adc
dec
fisubrl
cmpl
xchg
add
lahf
jmp
pushl
push
inc
jl
push
subl
add
mov
xchg
adc
lahf
cmp
jne
pop
dec
cmc
iret
pop
imul
pop
lock
shll
or
add
xor
jle
mov
inc
or
jae
shll
imul
out
cmc
xchg
iret
mov
mov
ficomps
xchg
fisttpll
loope
adc
push
xor
lds
fldenv
enter
stos
push
pop
mov
in
fs
repz
sub
popa
arpl
les
notl
rcr
andl
arpl
shl
push
dec
cmp
and
lock
dec
in
push
sqrtps
enter
ja
popf
mov
lcall
out
scas
mov
repz
mov
icebp
jne
mov
mov
ja
loop
pop
dec
fwait
mov
inc
lods
inc
sub
dec
mov
push
sub
cmp
dec
ja
leave
and
or
negl
gs
inc
mov
gs
pop
addr16
mull
and
pop
cmpsl
mov
loope
data16
mov
xchg
in
dec
ret
lock
add
stos
roll
enter
ficoms
jmp
cmp
cmp
jne
rorl
lret
add
cmpsl
lods
in
adcl
inc
loope
arpl
cmpsb
sub
test
leave
lds
sub
jp
repz
mov
cmp
outsl
das
out
cmp
and
lock
cmpsl
hlt
jecxz
movsl
arpl
cmp
std
in
test
loopne
test
ret
test
xlat
push
roll
xorl
mov
or
sbb
xchg
mov
jnp
test
and
fwait
or
test
or
mov
push
add
xchg
ja
xchg
scas
test
push
push
out
mov
lret
and
clc
jge
lret
adc
sti
mov
cmc
xchg
jecxz
sub
sub
popa
pop
test
ret
ret
dec
scas
out
xor
xchg
mov
rcl
insl
lret
mov
gs
cltd
outsl
scas
inc
or
xchg
pop
jmp
sub
or
imul
dec
stos
push
sub
test
roll
popf
push
je
cli
push
push
addr16
adc
or
fistpll
jmp
cmp
out
test
adc
out
pop
jg
cwtl
repz
mov
mov
xor
movsl
xorl
in
call
aad
jbe
aam
sbb
shll
cmp
out
outsl
mov
addl
aaa
fcomip
add
jmp
mov
aam
mov
in
xchg
lock
movsl
rolb
repnz
cmc
mov
enter
and
flds
fimuls
popl
out
out
enter
inc
fistl
jge
push
pop
mov
cld
cmc
pop
out
nop
cmp
mov
sbb
notl
aad
mov
mov
cltd
leave
test
fwait
lods
cmp
out
mov
mov
xchg
mov
adc
xchg
decb
or
lahf
xchg
and
scas
pop
mov
sbb
iret
std
push
mov
movsb
imul
sbb
ret
mov
lds
lea
adc
shrl
push
cmp
mov
pop
jle
arpl
test
mov
fimull
sub
je
out
xor
scas
lds
mov
inc
cmp
lret
mov
mov
cwtl
pop
movsl
cmpsl
adc
xchg
insl
xchg
pop
out
jecxz
bswap
popf
lahf
or
fs
cli
sbb
push
lds
adc
imul
out
xor
sub
sub
mov
imul
loope
repnz
adc
mov
pop
testl
sbb
outsl
xlat
in
jle
test
lcall
outsl
insb
or
shll
lahf
cmpsl
mov
jmp
cmp
leave
sub
adc
dec
ret
cwtl
mov
xor
jmp
mov
aam
mov
iret
fwait
sub
pop
cmp
jmp
outsl
dec
jae,pn
test
xchg
dec
popf
repz
imul
in
cmc
imul
xchg
jle
xchg
inc
test
sbb
lods
aas
mov
and
xchg
jne
rorl
lret
repz
in
outsl
lds
or
movsl
iret
pop
jae
cltd
jbe
xchg
pop
cwtl
je
out
xor
cmp
sbbl
loope
cmp
jns
in
xor
adc
xchg
addl
pop
lds
pop
imul
mov
cmp
adc
sbb
lcall
fxch
sub
sub
lds
imul
std
imul
repz
repz
mov
add
fists
push
shrl
inc
sti
sub
mov
mov
add
mov
imull
cmp
mov
loope
or
xchg
ljmp
mov
fldt
cltd
fwait
ja
fiadds
jns
jne
out
addb
xchg
ffree
xchg
int
pusha
jl
adc
push
in
dec
adc
shl
sub
or
iret
mov
loope
push
dec
push
pop
jge
loope
add
xchg
sbb
subl
cmpsl
push
out
jecxz
insl
push
add
testl
test
les
fisubrs
ja
test
xchg
adc
lret
out
in
and
int
or
mul
jecxz
pop
add
jne
mov
xchg
sti
add
cmpsb
cmp
mov
fwait
cmc
scas
mov
loope
cwtl
jecxz
mov
lret
or
pop
dec
cmp
add
out
cmpsl
mov
popl
push
sub
sbb
jp
jge
jmp
out
xor
out
aas
pop
hlt
add
test
stos
push
sbb
and
insl
movaps
cmp
sub
test
pushf
rcr
jmp
xlat
mov
sub
or
arpl
mov
xor
ror
mov
pop
int
dec
dec
inc
fdiv
idiv
push
leave
dec
adc
stos
mov
push
inc
popa
mov
nop
in
push
shll
xchg
xor
xlat
cmpsb
call
ret
sub
ficoml
leave
arpl
or
out
mov
push
add
fndisi(8087
idiv
adc
test
ret
dec
xchg
and
aad
arpl
lret
imul
mull
mov
into
adc
arpl
stos
push
cmp
and
sbb
cltd
mov
lods
sub
cmpsl
xchg
popa
pop
cltd
rolb
test
nop
insl
mov
loop
xchg
mov
cmpsl
test
mov
push
popf
daa
or
xchg
lret
leave
mov
lea
mov
jmp
btr
xchg
push
push
fldl
xlat
insl
and
popa
aas
adc
mov
pop
test
xchg
and
aas
div
adc
pop
lret
cmc
pop
addr16
ror
icebp
push
mov
pop
and
mov
gs
leave
xchg
test
fwait
rorl
scas
jnp
xlat
mov
dec
imul
jmp
gs
xor
das
shrb
mov
push
aas
mov
outsl
sub
pop
dec
mov
sub
or
jns
pop
lret
jmp
icebp
fwait
ja
sarl
cld
loope
sub
arpl
cld
pop
das
mov
mov
fisubl
xor
lahf
stc
fcmovnbe
inc
dec
lds
negl
stc
push
mov
jmp
aad
nop
push
push
push
adc
lods
cltd
test
or
inc
leave
push
orl
cmpsl
inc
in
mov
pop
fldl
fldcw
add
clc
jmp
mov
mov
outsl
adc
repz
xor
shr
out
in
cwtl
cmp
xchg
mov
cmc
sarl
pop
sahf
mov
repz
sbb
frstpm(287
pop
test
dec
cwtl
insl
sbb
adc
addl
bound
repz
lret
pop
adc
pop
push
xor
in
bound
mov
gs
xchg
roll
nop
jecxz
add
outsb
mov
cmpsl
andl
or
dec
es
imul
cwtl
cltd
push
xchg
int
ja
jp
into
movsl
je
push
mov
push
pop
push
or
leave
lock
stos
push
rcll
mov
xchg
pop
jecxz
mov
xor
sbb
add
cmpsl
jge
mov
shl
popf
leave
pushf
cwtl
ret
pop
mov
loope
fnsave
mov
movsl
add
pop
mov
xchg
inc
repnz
leave
jmp
icebp
sbbb
shlb
ljmp
push
mov
sbb
arpl
jnp
inc
pop
or
mov
call
push
test
fwait
mov
lds
jecxz
ret
push
cmpsl
scas
lods
inc
leave
cmpsb
test
inc
push
aad
push
sbb
sbb
movsl
mov
mov
jecxz
lds
push
fimull
sti
negb
xor
jae
negl
pop
test
push
pop
pop
push
ljmp
andl
ret
nop
adc
popa
mov
rcrb
mov
out
sbb
cmp
lahf
test
sbb
mov
adc
stos
or
out
mov
cwtl
cmpsl
jmp
scas
int3
in
dec
cmc
arpl
aad
mov
adc
xchg
xchg
andl
xchg
shrl
jle
or
mov
adcl
sbb
imull
adc
popa
xor
adc
lea
xchg
cmp
call
pop
jmp
sub
faddp
int3
test
les
out
gs
sarb
jmp
imul
fildl
xchg
shlb
ljmp
xchg
insl
jo
je
idivl
adcl
addr16
jmp
jne
or
mov
lods
inc
incb
outsl
ror
xchg
stc
mull
lds
jecxz
xor
sarl
clc
mov
inc
push
add
imul
jmp
xchg
and
adc
stc
jecxz
jo
aaa
hlt
adcl
test
xchg
in
fdivl
pop
xor
testl
iret
sbbl
arpl
shll
pop
fstl
repz
lds
scas
outsb
or
popa
xchg
cltd
pop
imul
pop
outsl
cmpsl
pushf
sub
jl
in
dec
cwtl
lea
add
subl
fcmovnb
inc
shlb
jmp
xchg
ret
aad
test
dec
xchg
xchg
dec
clc
pop
in
fldln2
stos
push
xchg
lret
scas
jno
xchg
push
xchg
add
or
mov
loopne
les
arpl
stos
jno
les
xchg
adc
scas
add
mov
clc
mov
in
pop
add
and
xlat
cwtl
xchg
mov
enter
lret
addl
mov
push
aam
lods
mov
lds
js
and
movl
das
xlat
out
xchg
hlt
mov
xchg
xor
popa
repnz
sbb
popf
push
dec
mov
xorl
push
and
rolb
cmc
xchg
add
cltd
xchg
mov
iret
pop
stos
in
es
add
test
or
xchg
ja
int
and
mov
rcrl
cmc
rorb
add
lods
mov
stc
hlt
aad
repz
pop
cmp
mov
out
loope
sub
jge
xchg
xchg
andl
scas
ds
f2xm1
sbb
dec
wbinvd
leave
mov
dec
or
cwtl
jne
out
adc
dec
sbb
imul
aad
sbb
inc
xchg
jecxz
cmpl
add
cmc
mov
mov
popa
dec
popa
xchg
rolb
cwtl
fucomp
mov
jmp
jl
inc
adc
xlat
lea
test
xchg
call
arpl
out
xchg
sbb
fstps
inc
lret
sub
out
inc
or
or
daa
loope
leave
xlat
cs
outsl
test
pop
mov
daa
pusha
or
dec
xchg
imul
sbb
movsb
cmp
jmp
cli
gs
stos
negl
shll
or
adc
xchg
or
add
movsl
test
repz
xor
imul
push
xlat
mov
test
inc
push
pop
pop
scas
add
jne
lret
jmp
jmp
repz
insl
pop
gs
subl
cmp
maxps
add
or
push
mov
fdivrl
sub
jbe
mov
popf
cltd
mov
imul
jnp
outsl
lahf
cltd
add
xchg
jecxz
xchg
ret
movsl
ret
mov
leave
cld
or
fsub
xchg
cmpsl
mov
movsl
in
ja
loop
in
lret
aad
popf
xchg
in
je
lea
aad
jmp
movsl
pusha
jecxz
shr
xchg
in
out
jae
cmpsl
jae
mov
or
insl
scas
test
movsl
sub
mov
mov
mov
addr16
mov
pop
cmp
imul
and
loop
xchg
test
test
sbb
sbbb
lret
xchg
jecxz
cmc
cwtl
repz
mov
push
push
sahf
mov
sub
popa
arpl
jmp
imul
adc
lcall
ret
dec
test
add
sub
insb
cmp
xchg
testl
xchg
fbstp
aaa
cwtl
rolb
lods
dec
xchg
js
sbb
pop
dec
pop
xchg
ret
mov
gs
fcomip
or
imul
add
rorl
movw
mov
fcomi
adc
adc
add
cmpsl
insl
clc
xor
cwtl
sub
mov
jo
jns
push
movsl
mov
nop
loope
jmp
jge
outsl
aas
in
imul
xchg
lock
pop
lods
leave
ret
or
ja
add
sbbb
lahf
inc
hlt
inc
icebp
add
das
jle
xlat
lea
xchg
jmp
loop
lds
push
out
aad
jae
movsl
jle
test
jne
push
imul
cltd
arpl
sbb
xchg
mov
aaa
fstp
xor
std
cmpl
jne
xor
xchg
mov
test
andl
rcrl
jne
int
sub
js
in
lret
gs
add
lahf
mov
inc
int
sti
pop
jmp
fnstcw
push
shll
and
jo
popa
out
hlt
sub
xchg
mov
mov
imul
leave
jne
loopne
add
mov
cmpsl
jne
jecxz
jb
repz
pop
xchg
aam
cmp
mov
test
sub
and
cmp
lahf
je
push
xchg
fwait
icebp
xchg
popf
imul
arpl
adc
dec
loope
pop
inc
outsl
ja
lock
ds
and
js
shl
and
fwait
aaa
popa
lock
cwtl
mov
push
jb
aas
sbb
mov
ja
adc
lods
jns
mov
shrl
sbb
in
data16
fcmovnu
mov
int
iret
inc
xlat
mov
push
in
cmpl
fsubr
xchg
mov
dec
roll
stos
jmp
mov
mov
pop
out
stc
add
lret
ja
mov
inc
xchg
iret
dec
cmc
mov
sbb
pop
or
jbe
and
cmpsl
mov
popf
mov
scas
jb
ja
loopne
cmp
rcrl
and
push
mov
je
iret
imul
stc
andl
add
outsl
sub
xchg
das
and
or
mov
adc
mov
and
sub
sub
cmpb
in
stos
addr16
jle
aad
lcall
repnz
inc
fs
mov
fnstenv
cmp
in
xchg
lds
cltd
daa
out
push
int
ret
in
repz
fs
push
shrl
push
mov
aas
stos
and
das
mov
mov
leave
mov
jg
add
add
jp
stos
mov
dec
in
jl
stos
and
and
adc
dec
dec
imul
iret
mov
jo
pop
test
mov
leave
stos
das
mov
cs
popa
lret
mov
ret
push
out
lahf
es
leave
addl
sbb
sub
or
sub
out
mov
out
lea
dec
int3
adc
sbb
rcr
les
cmc
repz
or
fisttpl
add
jle
and
cmpsl
das
inc
xchg
and
stc
shrb
inc
adc
repnz
mov
sbb
cltd
xlat
test
cmpsl
add
mov
loope
loop
mov
leave
dec
gs
fildll
fcmovnu
xorb
cmpsl
fdiv
jmp
jl
and
sub
lahf
cli
xchg
pop
loope
test
cli
adc
popf
or
pop
shl
sub
outsl
popa
into
orl
sbb
xchg
stos
ljmp
int
rolb
in
inc
jb
dec
xor
int
cld
cwtl
cmpb
fstl
addb
test
es
bnd
in
lahf
stos
pop
mov
dec
sbb
xlat
adc
ja
test
out
into
pushf
testl
and
cmp
push
sbb
or
xchg
or
in
out
inc
xor
push
mov
lds
xor
cmc
lahf
imul
or
xchg
cmc
mov
adc
pop
outsb
push
pop
and
sub
xor
outsl
imul
sub
div
addb
push
xchg
inc
mov
mov
mov
ret
sbbl
sbb
or
fstpl
cltd
stc
xlat
mov
test
or
loope
in
mov
adc
stc
stos
shll
jnp
test
jmp
mov
imul
int
out
out
shr
mov
stc
and
mov
cwtl
cmpsl
push
jge
mov
gs
inc
dec
fldt
or
loope
cmc
xchg
int
xchg
gs
sub
fwait
adc
pop
lods
gs
inc
in
in
push
not
es
xlat
loope
scas
mov
mov
test
xchg
mov
pop
pop
popa
ror
xorl
out
adc
sbb
mov
mov
popa
addr16
vpor
test
cmpsb
cwtl
loope
iret
push
mov
in
icebp
and
imul
xchg
in
lds
subl
in
fldenv
jno
out
mov
mov
cltd
fwait
int
mov
lds
fbstp
jno
mov
xchg
stos
jp
jne
ds
jge
mov
lds
xchg
das
adc
pop
mov
push
out
aas
out
cmc
mov
aas
jecxz
ja
mov
lahf
pop
ja
sbb
lods
jmp
sub
jecxz
rorl
xchg
cmpsl
rcll
sub
scas
fmull
adc
or
add
cli
mov
lods
addr16
pop
movsl
fcomip
xchg
and
aas
cmc
movsb
mov
and
dec
int
mov
sbb
mov
jmp
negb
shl
cld
sbb
popf
dec
lea
ffreep
mov
mov
aad
loopne
adc
sub
aas
leave
icebp
in
push
mov
out
adc
ljmp
ret
and
or
jecxz
sub
jnp
adc
mov
cmpsb
movsb
adc
lret
add
pop
push
sub
loope
jno
xchg
mov
xchg
mov
inc
sub
inc
fildl
push
nop
scas
leave
insl
add
mov
inc
inc
mov
loopne
in
lahf
ja
jmp
popf
test
outsl
xchg
outsl
and
mov
and
adc
test
je
inc
cmpsl
push
ss
call
pop
sub
mov
test
shl
dec
fucom
repz
push
lret
jmp
xor
ss
inc
stos
sub
subl
push
fisttpll
loope
fldenv
fildl
cmpsl
push
shr
les
xchg
ret
mov
mov
pop
pop
fdivrl
out
int
mov
jmp
and
and
shl
inc
xchg
movsl
sub
mov
arpl
xchg
addr16
adc
push
mov
mov
fstps
loope
aam
sub
stos
jp
nop
adc
adc
or
enter
add
sti
xchg
in
lret
mov
or
jmp
aad
inc
pop
in
loope
fldt
popf
mov
cmp
xor
cld
xchg
emms
iret
arpl
xchg
push
cmp
out
xor
lea
movsl
adc
jp
add
add
movsl
xchg
cmpl
cwtl
rcl
das
fstps
fcmovnu
out
arpl
test
cmc
cmpl
mov
subl
mov
pop
lea
stos
and
lea
jmp
test
test
incb
sub
pop
hlt
jb
mov
cld
xchg
iret
imul
cmpb
mov
lock
addr16
jnp
shll
mov
int
arpl
cmp
mov
das
ja
aad
in
rcrb
pop
jg
cmc
sub
in
pop
jmp
dec
in
dec
fisttpl
gs
arpl
repz
dec
adc
test
in
xchg
aam
addr16
cwtl
cltd
not
mov
and
rol
shl
mov
inc
outsb
add
ja
test
add
mov
mov
lods
arpl
out
test
mov
pop
cwtl
ja
ret
aad
xor
movsl
lds
cmc
and
loope
mov
push
mov
and
adc
or
dec
sbb
lods
lahf
das
cmp
sub
call
or
fistl
lahf
fisttps
test
roll
mov
pop
or
jmp
xlat
mov
fcmovnbe
add
rclb
adc
pop
rorl
jecxz
or
rcrl
sbb
stos
sbb
lcall
cltd
imul
or
add
roll
mov
out
leave
int
mov
jno
outsl
test
in
dec
mov
test
cs
mov
jb
or
clc
lds
add
inc
loopne
subb
xchg
gs
aam
dec
lea
jno
sbb
arpl
js
int
cmc
mov
lock
popa
xchg
lahf
test
arpl
rcrl
lahf
iret
ds
mov
lods
outsb
mov
scas
mov
stc
push
sub
xlat
in
ljmp
repz
xchg
jecxz
sti
fs
popa
mov
mov
mov
fistps
mov
test
jecxz
call
out
lret
push
imulb
jecxz
repz
lock
add
xlat
imull
insl
call
loope
fwait
cmpsl
scas
fcoml
xchg
out
loope
lock
sub
jmp
lds
lret
insl
and
adc
enter
jne
sti
aad
and
mov
jg
mov
popf
push
lahf
loop
pop
insl
daa
cmp
stos
mov
pushf
mov
mov
dec
scas
jne
cmpsl
mov
arpl
mov
ja
jmp
pop
jmp
xchg
mov
lahf
xlat
xor
popf
notl
in
shrl
mov
mov
scas
fucom
out
lods
lahf
jmp
add
flds
arpl
test
popa
lahf
loope
arpl
xor
mov
xchg
lret
in
cmp
add
cwtl
add
mov
andl
out
adc
sub
cmc
popf
in
lahf
lahf
iret
jno
add
outsl
sub
xlat
ret
lret
pop
xlat
gs
xor
xchg
andl
insl
mov
out
sbb
push
stos
sbb
outsl
outsl
test
mov
xlat
out
sbb
push
push
leave
add
jne
adc
cmpsl
mov
fistps
repz
jg
cltd
pop
xchg
cmpsl
pop
andl
out
cmp
pop
mov
push
pop
outsl
dec
jne
xchg
outsl
scas
add
add
lods
roll
test
outsl
mov
inc
div
and
lahf
int
mul
cwtl
jg
mov
aam
icebp
out
addr16
cmc
into
lock
stos
cs
rorl
cmp
fildl
and
and
sub
jecxz
jle
outsb
fmull
xor
test
xlat
inc
rcrl
rol
push
gs
call
push
push
aam
mov
fists
fistl
pushl
lret
xchg
rcrl
packssdw
in
xchg
xchg
inc
inc
gs
xlat
test
stos
cltd
push
popa
sub
jmp
xchg
bound
lds
fldenv
cmp
aas
mov
sub
jecxz
mov
aas
insb
and
or
addr16
aad
nop
add
gs
mov
jno
ja
loope
in
mov
push
sub
cwtl
mov
imul
loopew
or
jecxz,pt
push
mov
cmpsl
xlat
pop
cli
fstps
xor
andl
insl
xorb
imul
inc
jne
ss
mov
arpl
lods
scas
in
ja
outsl
xchg
jmp
jnp
sahf
mov
int
sub
fbstp
and
sarb
ret
and
lahf
xchg
sub
dec
aaa
stos
fmul
xchg
pop
arpl
cmp
dec
inc
lods
test
jg
ret
lahf
fcmovnu
std
and
pop
subb
mov
inc
pop
pop
in
cmp
mul
cmp
lret
arpl
clc
lock
dec
es
ja
jp
xchg
or
movsl
sub
gs
repz
jle
in
lret
inc
or
scas
cld
test
sarl
int
ret
adc
add
scas
xbegin
jo
ja
sub
jmp
mov
add
insl
sub
xor
in
xchg
gs
sbb
mov
adc
lods
mov
mov
movsl
and
ffree
inc
fistps
test
jmp
sub
or
stos
in
mov
jbe
rcr
out
nop
mov
andl
fwait
imul
cwtl
mov
xchg
xchg
rorb
mov
jnp
adc
cmp
daa
cld
negb
outsb
or
xchg
notl
addr16
test
cmp
nopl
xchg
mov
fnstsw
fistl
or
fcomip
int3
ja
add
xchg
imul
stos
cmpsb
fisttps
test
in
shr
sbb
shll
sahf
and
test
aad
imul
movsl
stos
mov
imul
sbb
pushf
icebp
mov
jecxz
leave
jmp
iret
mov
ffree
leave
je
into
call
adc
xchg
int
sbb
in
mov
xchg
cmpsl
out
out
jno
mov
push
bt
int
daa
pushl
xchg
jg
imul
cld
mov
cwtl
test
jno
push
mov
sbb
test
mov
outsl
ss
stos
repnz
cld
xor
cmpsl
fwait
fwait
mov
ds
or
idiv
sbb
push
out
lea
dec
pop
lods
fcom
sub
jle
push
xchg
int
cmp
dec
mov
cmpsl
xchg
inc
mov
cwtl
xchg
xchg
shl
jmp
xchg
aam
cmovl
mov
int
xlat
gs
add
sub
push
rcrl
mov
adc
popa
mov
fs
in
imul
mov
mov
rcrl
jnp
aam
stos
cmpsl
add
xchg
test
rcrl
xchg
cmpsb
mov
fucomip
or
mov
iret
add
mov
xchg
fldl
fists
xor
inc
push
cltd
pusha
sbb
mov
add
std
pop
mov
jne
cld
out
cltd
xchg
and
fld
sbb
dec
std
and
and
pop
clc
outsl
xchg
imul
movsl
ja
or
jae
test
aad
cmp
mov
out
sar
pop
repz
iret
roll
mov
stos
sbb
add
xchg
in
cmpsl
gs
in
std
scas
push
test
sbb
popf
and
adc
or
rolb
cmpsb
xchg
movsl
lahf
inc
mov
xor
xchg
add
jne
andb
lds
ret
rclb
mov
arpl
xorl
inc
mov
push
iret
mov
repz
out
mov
pusha
adc
cmpsl
shlb
iret
popf
popa
lock
jmp
in
in
les
push
xchg
jmp
sbb
arpl
shrb
test
int
seta
cli
out
cmpl
fldcw
loop
mov
xchg
push
cmp
mov
jmp
sbb
or
out
subb
push
sti
pop
adc
cwtl
mov
add
ffree
jp
xchg
jne
jge
jl
jecxz
lds
lods
cmp
imul
iret
mov
push
push
xchg
ja
cwtl
xchg
popf
repz
jnp
and
faddl
add
outsl
test
jmp
push
idiv
push
mov
vmovaps
in
jg
mov
shl
xchg
stc
adc
cwtl
cli
cmpsl
loopew
insl
lds
outsl
xchg
in
ss
cmpl
repz
ljmp
scas
mov
cmpl
mov
in
iret
sub
shr
aad
es
out
inc
push
fwait
or
jmp
outsl
rol
movsl
iret
jbe
test
jae
pop
int
iret
adc
fstenv
iret
or
dec
dec
or
sbb
insl
inc
loope
jmp
sub
jne
inc
aad
inc
sbb
or
mov
push
sub
pop
mov
test
jmp
adc
pop
in
scas
xchg
scas
lds
xchg
nop
push
lahf
insl
cwtl
aaa
imul
pop
rcr
icebp
dec
ret
adcb
fiadds
mov
movsl
cmpl
adc
pop
or
das
dec
arpl
sub
sbb
jne
gs
lea
xchg
mov
cmpsl
sbbl
fiadds
xor
xor
ret
add
lods
stos
mov
xchg
sahf
or
xor
cmpsb
leave
vpcmpgtw
outsl
insl
fldenv
sbbl
test
mov
inc
mov
xlat
push
push
in
fwait
mov
shll
xor
sub
inc
test
cwtl
loopne
jge
in
xchg
or
outsl
movsl
mov
in
xchg
mov
fwait
shll
inc
ret
int
out
mov
add
idivl
mov
xchg
xchg
les
adc
inc
mov
outsl
sub
psubsb
mov
jnp
push
in
test
mov
andl
xchg
out
in
mov
leave
int
arpl
pop
loopne
cmpsl
xchg
inc
jmp
test
fcomps
pop
out
lahf
std
cwtl
repz
jmp
add
out
orb
fmull
xor
mov
fldcw
sbb
lock
movsl
sbb
dec
outsl
in
fwait
lret
clc
pop
fistpl
cmp
lods
fstps
subb
cwtl
out
fbstp
test
loope
cmp
ljmp
mov
mov
in
das
mov
add
rclb
or
rcrl
inc
pop
out
dec
les
test
lock
cltd
push
xchg
adc
pop
fnstsw
cmpsl
fldenv
insl
ret
jmp
les
mov
das
repz
sbb
test
push
mov
ja
hlt
js
pop
frstpm(287
loope
cltd
mov
and
or
xchg
in
mull
shl
mov
xor
sbb
ret
mov
push
cld
mov
cmp
imul
dec
in
pop
aad
lds
mov
mov
loope
push
popf
mov
push
xlat
dec
int
add
add
fdivrl
adcb
popf
adc
fldt
xchg
scas
jmp
ss
mov
clc
add
mov
in
xlat
push
add
fstpl
in
movsl
jg
ja
and
les
popf
loop
out
pop
jecxz
dec
dec
mov
imul
xlat
loopne
adc
add
lahf
popf
xorl
popl
addb
pop
test
inc
outsl
push
dec
dec
paddusw
cltd
jb
mov
arpl
push
notb
sbb
js
jnp
imul
jle
loopne
jge
xchg
dec
mov
shll
aam
adc
jmp
ljmp
xchg
cmpsl
in
roll
sub
jae
cmp
sbb
ret
imul
and
cmp
jp
adc
pushf
fnstenv
cmp
push
testl
and
jo
jmp
xor
adc
pop
xlat
fildll
icebp
xchg
push
push
cmp
adc
lret
mov
xor
pop
push
in
push
fildll
outsl
pop
sbb
notl
mov
or
aad
in
inc
test
push
test
xchg
push
cmpsb
fisttps
out
sbb
jno
fwait
dec
popa
insl
or
jecxz
dec
arpl
test
test
push
hlt
call
cmp
repz
lds
mov
loope
xchg
arpl
push
mov
mov
aas
mov
aad
sbbl
cwtl
mov
rolb
int
test
xchg
scas
adc
gs
cltd
xor
push
push
test
imul
repz
test
testl
call
imul
and
mov
insb
or
cmp
stos
fwait
outsb
les
pop
push
jne
pop
test
push
push
pmulhuw
add
mov
jnp
mov
adc
cmc
mov
add
dec
mov
push
movsb
add
movsl
lret
lds
pop
bndldx
rol
outsl
cmpsl
xchg
fbld
jne
mov
in
jp
fdiv
fisttpl
hlt
popa
cmc
lahf
inc
sub
cwtl
addr16
adc
fwait
xlat
adc
adc
aad
push
pop
or
jecxz
arpl
adc
cmp
add
imul
pop
aas
mov
in
mov
decb
dec
lea
cmc
imul
fcoml
lahf
add
fldl
sub
cmp
mov
movsl
or
pop
xlat
push
mov
iret
xchg
scas
xchg
movsl
cmc
jns
inc
clc
jmp
inc
addr16
aaa
xchg
movsl
clc
test
stos
cmp
jg
pop
scas
and
filds
es
jmp
imull
sub
stos
lahf
outsl
sub
cltd
and
adc
out
cmp
fildll
ds
lds
add
jno
and
repnz
divl
mov
mov
or
outsb
mov
das
iret
inc
loope
add
in
repnz
movsl
cli
inc
xchg
cmc
dec
mov
inc
xchg
mov
addps
xchg
mov
lds
lret
loop
fiaddl
pusha
jne
loope
mov
out
in
ret
xchg
dec
mov
insl
xchg
stos
scas
cmc
rclb
aas
xchg
fwait
mov
inc
xchg
cmc
les
cmpsl
adc
lret
or
xchg
xchg
xchg
aad
jmp
sbb
mov
movsl
rcrl
imul
push
xor
shll
adc
ffreep
aaa
or
mov
xchg
notl
orb
xchg
and
push
cwtl
xor
lds
sbb
xchg
cmp
add
popf
imul
cltd
sub
or
and
lret
sub
xchg
xchg
test
fnstenv
push
jnp
daa
cmc
mov
jge
test
pop
push
inc
adc
in
test
xchg
jecxz
inc
xchg
jmp
dec
push
xchg
mull
pop
xchg
push
pop
xchg
mov
mov
inc
push
mov
mov
sub
sub
cmc
mov
inc
jne
sub
adc
mov
das
sbb
pop
mov
add
rcrl
push
pop
push
and
lahf
and
iret
add
in
xchg
jmp
sbb
lcall
adc
mov
cmpsl
call
mov
mov
dec
mov
gs
out
lds
jmp
push
rorl
fistpl
negl
lahf
cwtl
xor
test
cmp
nop
dec
dec
lea
fxam
iret
mov
mov
call
repz
dec
lret
pop
fimuls
xchg
mov
cmp
popf
popa
push
test
add
push
mov
jno
mov
lahf
out
pop
lds
cmp
mov
mov
outsl
cwtl
lods
jmp
pop
xchg
fildll
mov
xor
adc
dec
fdivrl
mov
cltd
arpl
notl
shrb
ja
push
ja
shr
scas
mov
xchg
add
in
lock
movl
in
jo
shll
lods
sbb
out
cmpb
sarb
cld
fidivrl
rorl
inc
popa
push
sbb
movsl
loopne
jne
cmp
loopne
mov
cmpsl
sti
mov
cmp
jmp
sbb
loope
outsb
movaps
fcomps
ficomps
stos
cmp
jmp
out
pop
jl
in
jg
cltd
icebp
sub
rcrl
mov
mov
or
out
outsb
aad
push
cmp
imul
adc
mov
adc
imul
ljmp
js
mov
xor
push
xor
in
fbstp
pop
mov
sub
loop
and
mov
test
fsubr
fisubl
sbbl
mov
mov
popf
movsb
sub
fwait
dec
ret
sahf
jae
dec
negb
adc
stos
mov
or
shr
fbld
lahf
cltd
cmp
rol
movl
add
notl
sbb
or
test
orl
pop
pop
vfrczps
and
out
and
xchg
lock
sti
shlb
sub
lahf
sub
test
add
pop
push
adc
rclb
mov
mov
push
xchg
js
mov
fldt
in
xchg
insb
or
aad
scas
imul
rep
lea
gs
popf
fstl
es
pop
or
xchg
sub
outsl
arpl
js
out
cwtl
mov
and
mov
lods
repz
insl
and
add
imul
mov
and
xchg
js
jecxz
mov
dec
out
sub
mov
xorl
cwtl
ret
mov
loope
mov
dec
test
ror
stos
scas
ror
sub
popf
fadds
ret
inc
shr
inc
mov
inc
push
into
stos
jg
sub
adc
jle
jmp
adc
repz
lds
jno
cmp
inc
add
mov
loope
ja
jecxz
repz
daa
rcrl
iret
xlat
mov
int3
leave
lahf
xor
sub
stos
outsl
mov
test
sti
sbb
push
or
int3
imul
ja
or
lahf
dec
fildll
jle
jmp
test
scas
hlt
adc
scas
pop
inc
popf
jmp
out
jl
fldt
adc
setae
in
popf
dec
pop
aas
rcr
inc
in
adc
inc
push
add
adc
jae
cld
pop
and
xchg
add
dec
cmpb
fld1
shl
push
push
in
mov
sbb
es
mov
xchg
les
lods
fwait
mov
loop
pop
in
fbstp
fsts
mov
add
cmpsl
ror
lds
dec
popa
mov
sbb
pop
in
mov
in
test
ret
hlt
in
lahf
mov
test
sbb
out
cs
insl
cmc
scas
push
add
in
shll
pop
mov
pop
fildll
aam
lods
in
add
lahf
xchg
mov
or
scas
das
and
lahf
or
cmpsb
aad
jecxz
cmc
xor
nop
movsl
movsl
inc
add
cld
call
fmulp
movsb
add
hlt
stos
ret
scas
scas
sbb
xchg
cmpsl
fldt
mov
sbb
popl
aad
call
fisttps
ucomiss
sti
lea
sarb
leave
rcll
rcl
add
addl
fists
notl
scas
popf
insl
inc
clc
mov
mull
mov
lock
push
sub
mov
aad
push
and
fprem
jae
fbld
lds
ror
jb
xchg
sbbl
test
xchg
push
incl
mov
sub
int3
sar
sub
add
lret
in
inc
loope
icebp
cmc
pop
mov
mov
cltd
rcrb
rorb
ret
jecxz
gs
adc
mov
adc
test
adc
dec
das
loope
xor
insl
cmpsl
lock
xchg
mov
int
cwtl
test
dec
ret
lods
jecxz
xchg
movsl
jb
loop
subl
ljmp
out
cmp
loope
cld
push
shl
stos
out
adc
movsl
movups
jbe
fcmovne
sub
pop
jmp
xor
cltd
jecxz
test
aas
aad
je
shll
mov
adc
out
lahf
lret
mov
aas
mov
test
test
pop
jmp
or
scas
add
pushf
ret
xchg
or
mov
repz
flds
sti
xchg
jne
test
mov
and
sub
jae
packssdw
mov
mov
lds
cmp
sub
outsl
cmpsl
dec
aam
adc
adc
stos
int
imul
pop
iret
out
push
dec
and
ret
or
add
xor
gs
hlt
pop
cmp
imul
stos
adc
push
sub
fcmovne
mov
mov
mov
lret
popf
fwait
pop
add
and
data16
test
mov
mov
xor
ja
scas
dec
lea
pop
scas
iret
xchg
sbb
cltd
mov
rolb
add
mov
jne
xchg
mov
mov
rcr
popa
repz
aad
pop
mov
in
cmpsl
jecxz
fisttpll
xchg
test
add
xchg
insl
addb
fld
stc
ss
icebp
out
push
xor
inc
xchg
mov
pop
shll
out
cwtl
mov
jle
jecxz
xchg
xlat
addl
jp
lock
push
mov
bswap
mov
jb
xchg
ret
rorl
cmp
xchg
fstl
cltd
jmp
lock
scas
adc
imul
imul
testl
iret
cmp
push
jns
cltd
popa
sbb
out
test
lahf
testb
cwtl
jmp
cmpsl
movsl
out
sbb
sub
jmp
call
call
popf
idivl
and
jns
data16
xchg
mov
imul
and
sub
mov
adc
sbb
push
fwait
cmp
ljmp
out
mov
fwait
pop
mov
and
aas
and
lahf
mov
in
into
cwtl
out
mov
push
out
sar
pop
sub
and
xlat
xchg
fsubrl
js
outsl
loope
mov
adc
mov
mov
sub
mov
pextrw
mov
adc
xor
xchg
insb
pop
enter
lea
out
pop
lahf
jns
das
sbb
jmp
inc
mov
addl
sub
add
cwtl
push
xchg
scas
and
xchg
xlat
and
test
repz
xor
fninit
subl
test
push
cmc
rcrb
mov
xchg
push
xchg
push
sahf
popf
xchg
lds
ret
jp
arpl
sbbl
push
ret
lret
ret
cmpsl
dec
testl
cmc
lahf
shrl
addr16
daa
pop
pop
pop
pop
mov
sub
and
sbbl
sub
faddl
movsb
in
adc
sbb
mov
lahf
int
jne
sub
aad
sbb
and
daa
aas
enter
add
loope
lods
fldt
adc
fwait
xlat
hlt
lds
push
fstp
mov
add
popa
cltd
dec
pop
out
inc
pop
and
xchg
add
lds
shll
pushf
jmp
fwait
sub
popf
in
jmp
inc
shlb
mov
or
mov
dec
dec
imul
rcrl
fadd
fldenv
unpcklps
das
or
fnstcw
cmpsl
jae
test
push
inc
cmc
enter
mov
cltd
leave
aad
mov
in
sub
jnp
mov
xchg
add
mov
jbe
dec
jmp
fisubl
push
sbb
insb
lahf
das
adc
fs
stc
sbb
mov
or
jecxz
cmc
outsl
or
mov
in
mov
pop
scas
lahf
cmc
out
add
imull
xor
jmp
rcr
cld
in
fstpt
lea
adc
fdivrs
mov
hlt
pop
lret
in
repnz
popf
adc
ret
enter
out
cmpsl
in
mov
test
mov
adc
mull
ret
xchg
out
mov
lret
arpl
xchg
xchg
js
lds
jb
leave
push
popf
loope
xchg
int
mov
xchg
mov
jle
lds
leave
cmpsl
cmp
pop
stos
leave
jne
push
lahf
xchg
xor
scas
gs
xchg
imul
popf
jmp
sbb
lahf
push
daa
pop
push
dec
pop
clc
cmp
and
stos
cmpsb
mov
pop
fwait
mov
dec
ret
and
mov
out
adc
adc
cmpsl
sub
sti
inc
pop
ret
pop
xchg
lahf
xchg
cld
jmp
adc
sbb
add
subl
fidivs
arpl
lret
pop
cltd
mov
cltd
fistpl
pop
fwait
stos
sub
loopnew
lods
push
sub
jle
out
jmp
clc
movsb
test
ret
mov
shlb
cmpsl
mov
push
adc
cmpsb
push
cmpsb
lods
inc
xchg
test
xorl
xchg
decb
imul
in
movsb
cmp
inc
aam
sub
inc
push
and
push
test
adc
and
push
jmp
lds
sbb
sub
and
packssdw
out
addb
js
sbb
roll
ja
ret
ja
out
test
test
lods
sbb
outsl
fists
subb
repz
cwtl
push
pop
xchg
rorl
pop
dec
in
cwtl
pushf
cmpsl
jmp
xor
lock
xchg
adc
addb
cmp
push
rcll
adc
jecxz
repz
sbb
fwait
outsl
cmpsl
rolb
addr16
shr
js
popa
nop
mov
mov
pop
ja
aas
cmp
loope
add
and
test
in
xchg
cwtl
jo
xchg
arpl
jo
dec
and
pop
aaa
arpl
cwtl
aad
inc
pop
stos
jl
and
cwtl
jmp
addr16
mov
adcb
mov
inc
int
fstpl
out
xor
add
jne
cmp
insl
fisttps
in
lret
iret
addr16
in
in
mov
sbb
cwtl
mov
mov
insl
mov
stos
test
addr16
push
mov
adc
ret
loope
fisubs
dec
test
enter
mov
cmp
out
adc
xchg
shr
xor
xchg
arpl
js
push
orb
pop
arpl
pop
pop
push
mov
shll
jns
movsl
out
lods
dec
scas
push
jbe
test
lods
dec
cmpsl
mov
ja
rcrl
aad
mov
cmpsl
or
xchg
ret
add
xchg
cwtl
fst
addr16
xchg
cltd
aam
mov
in
insl
mov
xor
cld
pop
out
jecxz
imul
jmp
cmpsl
scas
lds
roll
or
lcall
xor
stos
sbbb
lahf
add
test
push
popa
fildll
sub
das
cmp
rorl
mov
xchg
sub
rcrb
divl
push
adc
xchg
cwtl
pop
mov
insl
ljmp
clc
shrl
or
aad
sbb
sbb
jmp
cld
push
sub
negl
inc
outsb
scas
fs
ss
movsl
dec
xchg
insl
into
jns
loope
fbstp
xor
xchg
aam
ret
mov
int
out
mov
fbld
mov
and
adc
lahf
fimull
sbb
cmpl
add
xchg
xlat
out
repz
inc
fisubl
push
pop
sbb
xchg
inc
test
jae
jne
or
cwtl
jb
enter
popa
mov
xor
or
js
movsl
lds
mov
inc
xor
mov
push
daa
or
out
outsb
xchg
divl
adc
jmp
add
xchg
ljmp
cmp
push
insb
mov
adc
lret
in
sbb
scas
xchg
ja
sub
repz
imul
dec
dec
jg
mov
pop
shrl
sub
outsl
fmull
out
in
rcrl
test
lahf
mov
sbb
orl
cmp
fsub
jnp
lods
hlt
fcoml
fcmovnbe
push
jge
fbstp
in
jecxz
cwtl
pop
and
popf
xor
jae
scas
cmp
mov
imul
jae
cmpsl
add
popa
fldt
jecxz
insb
ljmp
rorb
mov
arpl
jge
outsb
xchg
lock
jmp
dec
mov
arpl
mov
adc
xchg
test
fldt
aaa
mov
jmp
or
xor
call
dec
cmpsl
dec
imul
insl
leave
ret
push
push
jmp
and
into
cmp
test
arpl
pushf
cmp
ret
mov
mov
inc
sub
sbb
lahf
fstl
cmp
jns
repz
adc
scas
jmp
lods
call
loopne
add
int
ret
test
xchg
jmp
cmp
cwtl
dec
mov
movb
and
lahf
jp
cmc
cmp
out
loopnew
shr
sbb
imul
fidivs
mov
adc
into
add
mull
out
jne
xchg
in
dec
jmp
mov
popf
mov
adcl
stc
ret
pop
add
repz
pop
das
aad
xchg
jp
mov
cwtl
cmp
xchg
fwait
int
je
cmp
ja
leave
cmp
xlat
mov
lahf
rclb
xchg
out
push
out
mov
jo
addr16
pop
in
imul
iret
iret
or
sub
xor
xor
in
popf
out
cwtl
mov
clc
enter
sbbl
push
cmpsl
dec
in
mov
cld
jp
popf
and
neg
loope
imull
push
cltd
lds
push
test
cs
ja
arpl
int
push
ror
ret
pushf
mov
mov
rcll
jnp
or
xchg
vprotq
cmp
cmpsb
ja
cmp
lea
jo
outsl
aas
jns
out
test
stos
leave
aas
cwtl
push
in
cmp
sbb
pop
dec
inc
or
xchg
cmc
movsl
orb
data16
lock
or
das
push
scas
adc
lea
out
jne
mov
xor
lret
stos
pop
pop
js
lea
sbb
jp
dec
jae
xchg
neg
gs
dec
popf
cltd
mov
lret
movsb
cmc
adc
in
lds
push
or
sbb
ror
adc
mov
orl
cwtl
mov
pop
popf
roll
jg
xchg
imul
xchg
lods
xor
adc
jno
xchg
mov
ja
mov
cwtl
aad
sti
cmp
ja
mov
or
in
out
mov
mov
mov
test
pop
lds
ret
xchg
xchg
and
xor
loope
lahf
ja
cmc
cmc
arpl
repnz
sbb
subl
shrl
repnz
cmpsl
xlat
scas
lret
je
push
adc
sbb
jno
popa
lods
dec
xchg
popl
cmp
lahf
stc
add
xchg
addl
enter
jno
dec
mov
or
and
cli
ret
lock
xchg
xchg
sbb
fildl
lahf
mov
stc
out
les
fldcw
fisttpll
cmc
inc
inc
or
sbb
popf
or
mov
pop
jmp
xchg
in
out
xchg
addr16
test
mov
in
xor
mov
fs
ds
xchg
icebp
push
fldl2t
mov
mov
mov
in
addl
jecxz
mov
mov
push
fcomip
jmp
cmp
xlat
xchg
lock
addr16
rorl
lahf
ret
xchg
adc
jne
and
cmp
lds
cltd
lret
push
aam
lahf
out
stos
fisttps
mov
lret
inc
lds
dec
xorl
or
scas
lods
fyl2xp1
pop
je
mov
push
mov
mov
adc
mov
call
jne
sbb
add
mov
call
mov
jmp
test
in
adc
ss
mov
pop
clc
out
sub
xchg
scas
mov
arpl
sbb
or
mov
pop
jmp
mov
push
lods
and
xchg
repz
jns
cltd
call
test
leave
xchg
sub
jno
jae
jecxz
aad
pop
cwtl
lds
pop
outsl
adcb
lret
cwtl
jle
jae
rcrl
jge
jp
cmp
mov
dec
imull
lret
pop
cmp
das
fwait
sub
daa
ljmp
test
and
mov
jae
fmull
shl
shrl
andl
xchg
mov
xchg
repz
jecxz
insb
call
mov
push
mov
adcb
mov
or
test
mov
iret
cmp
jle
call
adc
xchg
sti
push
in
in
mov
sbb
shll
dec
push
mov
out
rcr
into
xchg
cmp
arpl
ret
push
xchg
shrb
pop
cmp
fisttpll
jno
repz
arpl
or
xchg
mov
notl
cltd
cmp
adc
mov
into
fistl
cmp
loope
mov
call
lret
in
repnz
mov
les
addl
dec
lds
or
loop
adcb
ret
shl
clc
out
mov
jmp
jg
hlt
jecxz
jmp
mov
fstpl
xor
leave
out
out
fmul
fildl
jae
movsl
mov
jne
sbb
cmp
out
inc
pop
cwtl
call
cmpsl
popa
popf
sbb
pusha
repz
dec
sub
sub
xchg
hlt
mov
mov
popl
stc
sbb
fldcw
movsl
ret
lahf
into
call
aas
movsb
mov
div
adcl
out
mov
inc
fldenv
lahf
pop
mov
subl
imul
push
les
popa
call
mov
jae
jbe
lock
clc
in
test
mov
add
jne
aad
xlat
inc
ret
popf
fistpl
aas
lret
iret
imul
lea
sbb
shl
push
sbbl
lahf
outsl
sub
mov
test
les
add
cwtl
lcall
mov
out
inc
cltd
lds
arpl
in
pop
push
mov
movsl
das
imul
in
clc
iret
int
jmp
arpl
movsb
xchg
jno
cmpsl
mov
lahf
cs
ljmp
pop
xchg
in
movsb
mov
xchg
mov
shrb
shrl
xor
adc
add
stos
mov
mov
mov
mov
ret
gs
pop
and
mov
inc
je
daa
gs
jecxz
mov
sbb
lahf
mov
jecxz
in
out
shrl
into
fadd
scas
xchg
pop
arpl
fwait
out
subl
subb
xchg
lea
jb
sarl
lret
aad
neg
aam
and
pop
aam
scas
shr
rcr
out
cmp
popa
mov
push
stos
loope
mov
mov
mov
das
sbb
in
notl
aad
add
mov
call
popa
cmp
adc
lds
addr16
movsl
insl
scas
sbb
jl
mov
iret
xor
push
fyl2x
xlat
adc
out
cmc
rcr
scas
mov
lds
inc
in
or
jnp
fwait
dec
repz
aas
lahf
fcomps
xor
xor
cmpsl
or
cmc
fstps
jmp
and
cmp
cmp
sbb
jnp
in
mov
call
add
imull
xchg
mov
mov
int
cmpsl
fsubl
lea
cltd
lret
arpl
movsb
fsubs
dec
out
xchg
ljmp
mov
pop
sbb
imul
lret
mov
clc
test
mov
incl
loope
jmp
xchg
or
out
cmp
js
jo
xchg
push
in
stc
leave
pop
mov
push
inc
adc
shrl
mov
cmp
cltd
gs
outsl
aam
mov
dec
mov
jmp
add
inc
int
cwtl
insl
sub
test
loop
mov
jge
mov
scas
dec
lea
gs
mov
loope
jne
or
mov
fstpl
int
lock
sub
hlt
bswap
popf
addl
shl
cwtl
sbb
arpl
addr16
lahf
imul
and
pop
lret
cmp
lea
xchg
cltd
loope
into
into
ret
inc
lret
imul
or
mov
push
and
sbb
fldt
lds
popa
mov
sti
xchg
inc
jo
popf
add
inc
js
pop
fldl
sbb
call
fwait
xchg
mov
xchg
xchg
cmp
jne
cmpsl
cltd
xchg
pusha
pop
ret
js
cwtl
out
push
loop
cltd
fisttpll
and
mov
inc
jo
jecxz
outsl
jmp
mov
xchg
fsts
test
sbb
sahf
aad
pop
ror
fstpl
inc
sub
mov
rcrl
pop
inc
jae
leave
sub
out
add
pop
cmp
cltd
shr
lds
test
add
mov
cmpsl
pop
mov
jne
jecxz
or
dec
mov
fisttpl
mov
push
cmp
arpl
mov
lret
xchg
not
or
add
jbe
mov
cmp
pop
iret
rcll
lock
dec
cmpsl
or
roll
repz
les
mov
mov
insl
fistps
lret
xorl
sbb
mov
outsl
mov
mov
aad
negl
push
dec
ret
or
push
push
add
aaa
jmp
stos
in
loopne
sub
movsl
addr16
iret
push
andb
ja
stos
iret
imul
inc
in
into
cmp
dec
hlt
daa
outsb
scas
adcb
inc
push
mov
js
cwtl
xchg
lea
arpl
xor
out
pop
mov
inc
fstps
loope
mov
inc
lds
into
adcl
pop
outsl
pop
mov
in
xor
xchg
outsl
out
adc
adc
pop
dec
cmpsl
imull
loope
xor
inc
push
sbb
sar
imul
in
cmp
cmpsl
movsl
mov
rcrl
cmp
div
sub
addr16
sbb
ds
fwait
xchg
fiadds
adc
popf
out
mov
in
cmp
xchg
inc
fs
call
loope
cmc
test
jne
aad
xchg
out
stos
xor
incb
sahf
insl
add
iret
mov
int3
roll
mov
je
dec
int3
dec
in
push
test
xchg
outsl
or
adc
aam
lea
divl
outsl
mov
test
mov
jne
xchg
or
rcll
add
das
out
ret
sub
mov
sub
jmp
into
mov
test
and
add
imul
xchg
xchg
cwtl
shl
jg
popf
mov
xchg
dec
push
movsl
mov
shll
roll
add
mov
lea
fwait
int
jnp
push
stos
mov
repz
repz
jno
fistpll
orl
xchg
je
cmp
loopne
pop
lds
lahf
mov
movsl
xlat
addr16
fnstsw
fwait
shll
mov
fcomi
or
lret
negl
int
rolb
das
add
ja
in
mov
dec
xchg
pop
mov
mov
inc
sbb
lds
jecxz
movsl
leave
mov
popa
pop
outsl
popf
fisttpll
test
mov
xchg
addl
repz
xchg
insl
add
fmull
lahf
ja
icebp
subl
mov
jecxz
leave
fwait
pop
orb
arpl
mov
inc
lahf
mov
jmp
aad
lds
xchg
inc
pop
xchg
addr16
cld
imul
aas
inc
mov
jge
dec
movsl
sub
mov
lea
mov
vaddsd
sbb
shrl
sub
cltd
sbb
add
mov
mov
pop
or
mov
fisttpll
stos
pushf
inc
pop
sub
lea
sub
or
cs
jnp
cmp
sbb
mov
xchg
jmp
lahf
popa
pop
pop
mov
out
mov
push
imul
jnp
pop
movsl
xchg
fildl
aam
dec
fucom
inc
xchg
ror
xlat
idivb
xchg
leave
adc
jne
cmpsl
rorl
mov
inc
rcr
or
mov
mov
out
and
mov
fwait
aad
add
mov
iret
pop
fistpl
bswap
out
pop
aad
adc
adc
fistps
pop
outsb
ret
andb
pushaw
inc
push
rcll
leave
pop
sbb
adc
xchg
or
mov
mov
call
fwait
lahf
xlat
int3
adc
shll
dec
push
pop
jl
or
mov
rorl
sub
leave
mov
xlat
icebp
mov
add
test
jne
jp
vhaddpd
pop
cmc
or
addr16
popa
repz
popf
add
fwait
jb
dec
arpl
and
das
or
in
shr
icebp
inc
dec
fidivl
adc
or
dec
lods
in
sbb
gs
or
fwait
push
push
in
or
dec
xchg
xor
test
xchg
shll
lahf
mov
add
arpl
fnstcw
fistpl
push
add
test
addb
fstpl
lods
stos
jmp
pop
mov
mov
jnp
test
inc
shl
aad
pop
adc
lock
leave
fists
pop
cltd
repz
xchg
push
lahf
lds
call
fstps
cmpsb
movsl
sbb
js
iret
sbbl
xchg
fists
ja
mov
test
shll
add
outsl
and
add
fstpl
outsl
ret
stos
out
out
scas
cmp
jae
frstor
cld
mov
sbb
movsb
jecxz
jbe
loopne
loop
jnp
dec
fucomi
test
int
iret
pop
pop
subb
push
push
xchg
repz
into
loope
imul
mov
scas
inc
fxch
adc
in
sub
sub
cmp
cmc
jmp
out
cmp
ja
fwait
repz
adc
mov
insl
mov
aad
es
shll
loope
arpl
xchg
mov
push
mov
popa
mov
jns
mov
mov
mov
call
lea
lahf
jp
imul
in
and
push
or
iret
mov
lods
test
scas
orb
and
lea
insb
pop
add
mov
test
inc
mov
mov
adc
pop
enter
fisttpll
or
dec
lds
repz
cmpb
inc
add
roll
movl
mov
or
out
sub
ficoml
pop
mov
shll
jmp
mov
sahf
fistpl
mov
cltd
imul
xchg
xchg
clc
cmp
test
xchg
test
jmp
shrl
xor
mov
imul
pop
mov
dec
je
jno
jo
push
push
fucomi
sub
idivl
mov
ja
shll
lret
loope
shrl
popf
sub
lock
jg
cwtl
pop
mov
jnp
mov
das
adc
lods
sbb
mov
sub
flds
fwait
icebp
lods
out
stc
or
fs
lcall
mov
mov
les
cmp
ret
int
imul
in
and
push
mov
imul
jecxz
out
cltd
movsl
lock
filds
inc
push
sub
aad
add
jecxz
cltd
pusha
push
sbb
cwtl
adc
mov
mov
sti
jmp
hlt
adc
add
enter
int
sbb
gs
sub
sbb
dec
lods
mov
push
call
int
test
leave
ret
mov
ljmp
outsl
cmc
push
xor
movsb
outsl
and
test
sahf
popa
lds
dec
lcall
aad
xchg
in
popf
movsb
xchg
dec
jmp
repnz
dec
scas
mov
xchg
in
push
mov
mov
xor
fwait
push
and
fistpll
insl
xchg
in
outsl
imul
adc
adcl
addb
and
push
mov
dec
int
jnp
je
xchg
xlat
lds
bound
iret
xchg
orb
rclb
daa
jne
mov
loope
cmc
rcl
scas
addr16
sub
and
jecxz
rcl
fwait
loope
mov
jno
out
test
cmpsl
out
jecxz
std
cwtl
iret
imul
add
roll
fadds
mull
lret
push
or
gs
mov
lock
mov
lods
dec
lods
and
and
mov
lahf
mov
cltd
scas
xchg
jo
sbb
cmp
push
in
insl
rolb
test
das
outsl
fwait
jbe
add
gs
in
mov
stos
orb
loopne
mov
jg
cmpsl
pop
xchg
repz
lods
iret
mov
add
mov
lds
pop
jmp
fistl
mov
popl
pop
pop
movsl
or
iret
inc
ja
lea
sub
out
mov
push
mov
shll
pop
pop
cltd
notb
sub
arpl
pop
push
stc
lcall
jecxz
xchg
add
push
sub
cmp
add
ja
outsl
cmpsl
cmp
lock
add
shr
mov
mov
gs
ljmp
mov
or
push
mov
jl
test
lret
inc
aad
cmpsl
aas
xor
das
les
fistps
cmpl
cmpsl
jp
pop
xchg
mov
or
and
mov
pop
and
push
sti
scas
cmpsl
rorb
sub
ljmp
out
xor
aaa
cmpsl
xchg
sbb
fwait
jle
test
arpl
push
aam
adcb
pop
adc
cld
or
xchg
scas
jecxz
mov
test
iret
add
mov
xchg
out
inc
repz
jmp
lahf
lock
gs
mov
clc
outsl
test
xchg
mov
mov
mov
push
dec
hlt
scas
stc
jmp
cmp
jno
push
rcll
lahf
popa
inc
shlb
dec
pop
fwait
dec
cwtl
mov
jle
mov
mov
xchg
insl
mov
push
xor
pop
sub
test
add
jne
ja
xchg
mov
in
ss
jmp
push
addr16
out
fucomp
lahf
mov
dec
call
jmp
dec
movl
das
pop
out
int3
xchg
xchg
insl
and
int
mov
test
arpl
sbb
dec
mov
sarb
mov
imull
mov
das
dec
in
pop
aaa
fbstp
mov
jmp
arpl
mov
aad
imul
cwtl
outsl
shll
aam
shlb
movsl
add
cmp
cltd
imull
push
in
out
xchg
mov
jo
jnp
sbb
mulb
fwait
lahf
xchg
stc
jne
add
dec
or
pop
outsl
lods
sbb
test
pop
shll
loopne
adc
cwtl
mov
ja
mov
mov
scas
sub
in
fiaddl
xchg
mov
mov
lock
inc
or
xchg
in
movsb
push
cmp
sub
pop
cltd
stos
test
popa
aad
xchg
xchg
arpl
lods
fwait
lds
add
in
ret
add
push
test
pop
outsl
sub
push
rcr
lds
mov
stc
lods
fsubr
jle
enter
subl
lds
sti
movb
pop
fistl
push
pop
mov
sub
lea
jnp
aad
out
sbb
subl
pop
cmc
fwait
dec
iret
in
out
scas
xor
loope
fstl
clc
repz
pop
cmp
mov
andl
jmp
xor
fsts
xchg
mov
dec
jecxz
and
mov
gs
jmp
push
mov
mov
add
mov
mov
shld
arpl
xchg
push
fsubr
popa
in
pusha
loopne
pop
xchg
ret
mov
jne
and
rcll
fimuls
xchg
lahf
and
xor
add
rcr
stos
xor
mov
pop
in
les
xchg
fldln2
sbb
mov
or
sub
push
jo
and
mov
movsl
jo
cld
mov
adc
cli
repz
dec
fldl2t
movl
adc
pop
push
shrb
fisubrs
jne
or
jecxz
lea
or
fldcw
and
imul
cmpsl
int
shl
xor
in
inc
mov
cmp
inc
outsl
sbb
xlat
std
imul
ret
xchg
arpl
in
js
xchg
shr
gs
inc
and
mov
das
jbe
mov
sub
inc
ja
frstor
test
jmp
test
mov
cwtl
insl
mov
pop
test
test
pop
popa
popf
bnd
nop
addr16
fnstcw
insl
rcrl
divb
iret
ror
fldenv
adc
clc
xchg
xchg
xchg
mov
imul
aaa
lret
mov
outsl
movsl
ficomps
push
or
js
mov
loop
mov
and
mov
cmp
sub
xchg
icebp
repz
subl
rorb
scas
xor
or
sub
imul
pushf
xchg
leave
xchg
sub
inc
pop
mov
out
clc
aas
mov
and
iret
and
orl
fwait
clc
clc
ret
push
outsb
push
pop
leave
gs
fistpll
push
or
jge
iret
xor
call
sbbl
jp
cmp
rcl
lret
ja
outsl
in
push
lret
inc
out
and
fwait
cltd
xchg
push
movsb
or
mov
divl
mov
in
and
lahf
mov
cmc
in
sub
jno
xchg
loopne
ja
in
add
xchg
arpl
fistps
aad
loope
leave
add
sbb
lret
add
xchg
out
mov
adc
xchg
mov
jb
ja
shll
int
es
shl
add
icebp
pop
lds
out
cmpsl
mov
push
sbb
lds
test
ja
and
jno
cmp
mov
leave
fadd
test
push
shll
mov
jmp
xchg
inc
mov
cmp
gs
cltd
xchg
fyl2x
or
cmc
ret
push
incb
ss
fbld
clc
xchg
in
ret
fwait
jecxz
outsb
pushl
push
je
repz
loop
lods
push
mov
mov
mov
jo
rorl
xor
mov
jnp
push
mov
repz
push
sub
mov
adcl
pusha
lahf
das
xlat
inc
xchg
pop
pop
lret
jmp
pop
jl
shll
leave
je
mov
clc
pop
lds
jne
pop
add
repz
pop
fcomip
jp
push
cmpsl
test
xchg
repz
movsl
addr16
add
fcomip
mov
jmp
push
and
imul
movsb
movsl
pusha
cwtl
adc
rcrl
insl
pop
cltd
pop
jmp
jns
cmp
lahf
xlat
fbld
test
rcl
mov
inc
mov
int3
test
mov
dec
std
sub
lret
xor
cltd
jmp
adcb
fstpt
mov
push
outsl
adc
lahf
gs
imul
ljmp
arpl
shrl
outsb
xor
clc
popa
aad
rol
mov
lods
ret
test
xor
movsb
adc
outsb
and
or
aad
cwtl
sub
notb
hlt
mov
cmc
jne
cltd
repz
and
incb
out
sar
pop
fbld
jg
pop
cli
and
popf
fwait
addr16
jmp
not
out
lret
mov
fucomi
out
push
popf
rcll
cld
xchg
cmp
dec
por
xchg
jb
sbb
in
cmp
jns
pop
xchg
cmp
test
lods
and
andl
repz
fcmovnu
push
mov
rcr
iret
add
iret
lret
mov
nop
dec
sar
jno
in
shll
into
mov
fildll
sbb
xchg
mov
leave
stos
test
cmp
cmpsl
xchg
insl
jne
movsb
mov
xor
and
mov
add
add
xchg
adc
lds
aad
out
lahf
loope
movsl
cld
inc
mov
xchg
jecxz
fwait
aad
repz
cmp
add
test
testl
in
cwtl
pop
ja
fmuls
stos
sub
hlt
pop
cmp
lcall
push
mov
sbbl
psrlw
xchg
lods
hlt
jno
and
pop
iret
jl
add
jmp
push
sub
frstor
std
dec
call
xor
jl
pop
or
gs
int
mov
adc
addb
ror
jmp
dec
mov
cli
inc
dec
lea
inc
scas
jmp
cwtl
outsl
movsl
je
call
mov
mov
loope
test
ja
mov
lods
imul
lahf
popf
xlat
mov
jle
add
mov
loope
sbb
sti
inc
aad
addr16
in
or
adc
dec
inc
sub
xchg
cltd
xchg
mov
cmpsl
pop
mov
or
lea
lock
and
in
push
pop
or
add
mov
add
xchg
ret
sub
cmp
rcr
test
test
enter
cmc
ret
mov
adc
mov
xorl
cld
stos
and
cmp
add
aad
xchg
hlt
add
push
cmpsl
mov
mov
negl
and
mov
mov
popa
scas
adc
and
movsl
sbb
inc
popf
leave
cwtl
xchg
pop
imul
xchg
mov
sti
mov
iret
and
popa
sub
cmpl
xor
xchg
sub
lcall
sub
loop
pop
call
and
repz
sub
gs
shl
test
pop
movl
cltd
setne
dec
fucom
cmpsl
or
adc
adc
shl
dec
shl
or
aas
push
mov
or
mov
add
icebp
add
stos
xchg
or
test
loope
insb
cltd
cwtl
std
xchg
pop
fldl
lock
lret
cwtl
sahf
pop
inc
andl
sbb
cmpsl
push
pop
push
lds
jae
sbb
clc
scas
pop
test
dec
andl
cmp
xchg
aad
cmp
jge
subl
imulb
loope
imul
repnz
je
popa
arpl
sbb
lret
lds
fnsave
out
out
inc
lock
mov
dec
lods
cmp
inc
xor
xor
test
jns
xchg
jae
mov
iret
iret
adc
or
adc
fadd
out
mov
add
lea
inc
xchg
mov
pop
sub
leave
popa
cmp
sub
and
std
test
leave
pop
pop
addr16
push
faddp
xchg
loopne
gs
ds
xchg
xchg
ror
sub
add
loope
orl
pop
negl
call
sub
jbe
std
push
shll
sbb
outsb
add
add
shrl
pop
lahf
mov
lds
in
fsubrp
dec
mov
push
and
jo
add
add
rorl
mov
cmp
xchg
mov
push
cmpsl
pop
sbb
shr
sbb
xor
daa
loop
int3
xor
ja
ret
cmp
imul
push
popf
iret
add
lret
jp
jl
in
lock
scas
enter
in
aas
test
add
ror
jmp
xchg
mov
mov
jle
push
mov
fnstsw
fld
repz
test
xor
mov
out
repz
xor
inc
incb
je
std
adc
clc
sbb
xchg
insl
sub
out
in
movsb
cmp
frstor
cltd
xchg
lea
jnp
push
out
add
imul
push
stos
jb
fisttpll
push
lds
jnp
fwait
gs
mov
jae
lock
aad
dec
test
iret
test
push
popf
mov
or
lret
xor
inc
nop
mov
mov
xchg
mull
outsb
push
mov
jns
adc
add
xlat
popa
jmp
jecxz
lock
mov
out
addr16
sbb
xchg
shl
xchg
cmc
shll
lods
adc
outsl
sbbl
sbb
imul
add
leave
loopne
in
and
jno
fldt
xchg
fsts
cmp
jne
cltd
pop
mov
or
xchg
or
popf
and
sub
mov
popa
or
jnp
int3
adc
stos
mov
xchg
ret
and
not
push
add
out
xchg
movsl
cltd
pop
sbb
jns
in
jne
shr
addr16
inc
jp
and
xchg
xchg
and
cmp
cmc
in
movsb
xchg
jne
push
rol
dec
xchg
xor
add
cwtl
pop
mov
mov
cmpsl
icebp
out
cwtl
sti
xor
loopne
push
test
stos
leave
jmp
popf
int
push
sahf
loope
add
xchg
testl
and
les
cltd
jae
fdivrs
xchg
xlat
jl
lahf
add
popa
outsl
insl
shlb
out
mov
push
add
push
inc
push
movsl
xchg
fistps
cmpsl
icebp
mov
sbb
movsl
arpl
jge
sbb
adc
insl
push
add
and
cmpsl
lahf
cmp
xchg
out
roll
nop
mov
jo
lahf
push
cmc
sub
adc
imul
cmp
jg
sub
mov
push
scas
mov
int3
mov
sarb
cmp
popa
enter
decb
pop
in
shrl
mov
mov
js
mov
pop
and
dec
push
pop
adc
or
gs
push
mov
lods
lods
jg
test
mov
imul
test
scas
or
cmpsl
mov
lret
test
aaa
test
mov
lcall
mov
ja
out
xchg
jne
mov
int
or
cmp
push
mov
enter
test
xor
imul
or
loope
or
shl
jmp
mov
das
dec
lcall
negl
jecxz
cmpsl
fwait
fistps
adc
xlat
lahf
repnz
popa
xor
outsl
test
mov
cwtl
fucom
jne
mov
jle
sbb
popf
push
sbb
inc
jne
mov
leave
add
fcmovu
ljmp
stos
sbb
int
push
xor
addr16
ret
js
cmp
scas
mov
mov
jp
out
mov
inc
and
das
and
mov
adc
jmp
cwtl
xor
loope
mov
push
test
xor
loopnew
frstor
sbb
ja
mov
mov
mov
mov
pop
jle
int3
lds
push
lods
not
lds
xchg
scas
leave
cwtl
sub
lahf
int
lea
jl
ja
scas
xchg
rol
pop
popf
mov
lahf
test
lret
js
popf
repz
lret
mov
call
xchg
sarb
push
test
repz
addl
sbb
mov
ret
pop
pusha
in
mov
mov
cld
mov
pop
mov
jmp
and
lcall
stos
loope
or
addr16
mov
jb
cmpb
lea
mov
cs
icebp
add
mov
mov
out
out
gs
lds
test
popf
out
jecxz
cltd
adcb
dec
lock
test
pop
shrl
cmpsl
jmp
or
sub
sbb
aad
int
aas
mov
inc
lods
adc
xor
arpl
xorl
or
ret
lods
ffree
mov
lret
lret
addl
insb
add
mov
lods
andl
fwait
inc
test
cmpsl
push
int
adc
inc
adc
leave
or
iret
xor
mov
inc
sub
enter
lods
mov
iret
movsb
push
sub
in
imul
jns
out
lahf
xchg
xchg
add
test
fwait
push
out
test
mov
sub
das
mov
and
das
inc
mov
and
mov
and
add
out
addr16
aaa
ja
jmp
fwait
sbb
jnp
lds
ljmp
pop
xor
pop
sub
inc
sub
gs
jne
mov
out
sub
stos
movsl
or
cwtl
adc
js
ja
mov
xchg
add
push
mov
jns
xlat
stos
push
mov
popf
cmp
lea
mov
mov
enter
sahf
aad
cmp
mov
arpl
cmp
fidivs
dec
sub
jmp
xchg
popa
frstor
cmc
stos
jae
xchg
pop
xlat
add
idivl
repnz
mov
adc
mov
fldenv
gs
out
xchg
in
insl
pop
int
pop
pop
or
fistl
jp
pcmpgtw
add
mov
enter
cmp
test
scas
cwtl
and
addr16
cmpsl
stos
decl
jnp
ret
incb
fistl
dec
xchg
push
outsl
in
and
or
mov
popa
rcrl
cmp
cmc
pop
vunpckhps
cltd
call
movsl
cmp
insl
xor
movsb
or
mov
jne
mov
mov
loopne
dec
jno
imul
sar
inc
ss
std
nop
stos
pop
xor
imull
test
cmpsl
sub
cmc
insl
mov
ret
pop
in
adc
or
xorl
jmp
mov
jnp
test
or
dec
fucomi
insl
sub
repz
cmp
cwtl
clc
jecxz
mov
enter
mov
out
jmp
or
mov
inc
pop
adc
mov
push
fsubs
ja
jmp
push
sbb
adcl
in
dec
mov
es
ret
cwtl
psrld
mov
lret
repz
sbb
cltd
lods
sub
loope
lea
sub
cmp
mov
push
dec
pop
je
mov
sarl
mov
mov
jne
sbb
in
das
loopne
jg
pop
mov
cmp
ffreep
mov
insl
test
sti
push
pop
dec
inc
mov
dec
fwait
jge
ja
ret
sub
fabs
xchg
mov
out
lahf
fildll
cltd
jp
inc
or
insl
mov
arpl
xchg
cmp
xchg
push
jae
iret
push
push
fprem1
mov
gs
ja
out
sub
mov
aas
ror
fwait
jecxz
bound
push
out
pop
jg
xchg
cmpsl
jp
stos
arpl
ljmp
mov
mov
sub
test
mov
jb
pusha
mov
notb
adc
or
add
test
cmp
data16
cmp
pop
lcall
aas
fstl
xchg
fldln2
popa
mov
mov
cld
jb
in
scas
or
jns
mov
jmp
push
add
arpl
add
xlat
out
int
test
xchg
cmp
popa
insl
jmp
or
cld
adc
sbb
sub
jmp
sub
xchg
shll
fmull
mov
pop
rolb
rep
xchg
cwtl
jp
stos
fbld
mov
leave
xchg
adc
mov
fxch
repz
cltd
mov
xlat
imul
jo
iret
in
repz
adc
outsl
cmp
imul
roll
jne
xor
gs
lds
pop
push
test
test
jmp
lahf
pushf
adc
test
push
or
mov
fidivl
adc
dec
adc
jg
cmp
jecxz
mov
stc
aas
out
xchg
dec
ja
insl
push
adc
aad
pop
add
icebp
lods
cli
in
rorl
xorb
lahf
ja
xchg
jmp
fwait
cmp
add
mov
sbb
jne
push
in
jp
adc
dec
sti
loopne
cs
xchg
mov
and
or
popa
ror
or
roll
out
mov
fdivrs
popf
add
jb
cmp
in
les
mov
cs
push
lahf
vmwrite
scas
dec
adc
out
ret
mov
repnz
arpl
dec
add
push
adc
js
inc
je
test
mov
mov
movsl
scas
xor
lcall
std
mov
insl
imul
jmp
ja
fsub
out
mov
ds
adc
mov
bnd
cmp
stos
loope
movsl
test
fstps
jg
pop
push
ficoml
frstpm(287
in
dec
cwtl
and
push
xlat
mov
xlat
out
or
fildll
sbb
jle
outsl
fisubs
mov
jns
add
stos
push
mov
adc
and
xchg
shll
and
jne
dec
imul
in
sbb
popf
xchg
arpl
push
rcr
outsl
mov
jo
xor
jne
mov
test
loop
orl
out
inc
cmp
ds
sarl
mov
cmc
jmp
and
daa
xchg
cmc
pop
push
fcomps
mov
pop
test
jmp
leave
push
xchg
add
int
cmp
jecxz
popf
mov
movsl
in
pop
inc
bnd
cmpsl
xchg
aad
out
mov
js
lods
ja
outsb
adc
or
test
int
js,pt
lea
jmp
cs
cltd
jecxz
scas
aas
jle
xlat
movsl
out
or
push
notl
dec
fistpll
cmc
xchg
xchg
adc
sbb
adc
push
in
imul
lock
repz
cmp
pop
dec
outsl
pop
mov
fbstp
sbb
xor
rcr
daa
jne
dec
xchg
lds
outsl
test
movsl
subl
mov
popa
cltd
pop
loope
inc
push
stos
adcl
cmp
add
xchg
in
cli
test
ffreep
sbb
ret
repz
dec
dec
lea
dec
js
sub
ud1
mov
imul
in
enter
mov
loope
mov
cmp
jb
sub
jmp
mull
add
leave
in
sbb
inc
repz
mov
pop
test
mov
add
mov
mov
shll
out
outsl
mov
imul
in
jne
in
lahf
push
mov
sbb
pop
imulb
aas
leave
cmc
lret
hlt
loope
xchg
shrl
rolb
jge
icebp
inc
sub
shlb
lock
gs
add
aad
mov
outsl
cwtl
jecxz
jnp
add
in
inc
iret
jno
test
je
xchg
lret
movsl
outsl
imul
cltd
xchg
fsubrs
pushf
push
or
pop
sbb
push
lret
jo
in
mov
in
loop
out
jecxz
loop
stos
test
xlat
gs
fwait
arpl
mov
scas
mov
push
jle
lods
stc
gs
roll
rclb
addb
xchg
mov
jmp
cmp
stos
repz
loope
mov
sub
cltd
push
mov
neg
out
add
cmp
rcr
int
xchg
push
pop
movb
in
fdivp
aaa
mov
jmp
shll
dec
cmpsb
and
ret
out
fildll
fnsave
jp
push
in
cmp
lock
lahf
pop
scas
fxch
sub
adc
iret
xchg
aaa
ja
ret
insl
arpl
xchg
push
and
adc
int3
jmp
out
xchg
xor
imul
cmp
lea
inc
es
push
out
inc
cmp
adcl
arpl
cmpsl
iret
inc
filds
cwtl
jne
movsl
nop
dec
lahf
jge
cld
fwait
inc
sti
mov
repnz
shrb
inc
push
xlat
jecxz
sbb
mov
es
mov
cmpsl
add
aad
mov
fwait
outsb
push
pop
rclb
and
sbb
shrb
fsubp
cwtl
shlb
movsl
xlat
push
gs
push
jmp
div
inc
cli
lods
inc
sub
mov
ret
push
mov
inc
fnsave
scas
sbb
cwtl
xchg
mov
xchg
mov
not
jmp
hlt
imul
mov
stos
gs
jnp
sub
shrl
mov
popa
dec
sbb
mov
jmp
or
lret
adc
sbb
mov
mov
movsb
imul
jmp
xchg
outsl
int
jnp
jge
jbe
cli
psraw
adc
arpl
fistl
scas
push
jg
andl
insb
dec
xchg
stos
mov
imul
ret
sub
pop
lock
cmpsl
pop
mov
sarl
shll
dec
shl
out
mov
test
mov
jb
jnp
jmp
cmpsl
out
xchg
popf
addr16
movsl
mov
out
mov
in
orl
cmpsl
push
mov
lds
insb
adc
adc
cld
imul
in
sub
dec
fwait
lds
inc
xchg
fnstsw
mov
push
inc
mov
cmc
inc
test
ljmp
in
nop
pusha
ja
mov
dec
ror
sbb
pop
out
scas
sbb
ret
loope
push
nop
roll
mov
rcr
fwait
mov
jmp
lods
aam
mov
call
aam
xlat
pop
push
pusha
mov
rcll
lds
out
fwait
xor
mov
aad
jge
arpl
sub
mov
out
into
in
adc
cwtl
pop
ret
repz
fistpl
insl
cmp
in
lods
adcl
subl
loope
out
mov
pop
xchg
testl
int
inc
lds
imul
or
pop
xor
shrl
xor
pop
ja
push
call
test
outsl
dec
imul
cmc
push
popa
lods
mov
sub
sub
outsl
adc
dec
adc
mov
movsl
cmp
xorl
imul
xlat
test
jmp
rcrb
and
aad
fists
stos
mov
outsl
sarl
out
fisttpll
cwtl
repz
loop
insl
rcr
outsl
popl
or
clc
jne
mov
aas
leave
outsl
rolb
dec
sbb
push
scas
cwtl
ror
or
stos
ret
testl
test
loope
adc
fstpt
fstl
or
mul
out
sbbl
out
outsl
leave
mov
shl
fwait
in
mov
arpl
sbb
out
imul
mov
fnstsw
sbb
enter
dec
insl
jne
mov
adc
dec
mov
dec
fisttpll
cwtl
pop
in
stos
dec
mov
loope
mov
fistps
cmp
xchg
fucom
stos
hlt
out
out
jo
std
std
fnstcw
nop
jnp
in
add
jmp
xchg
fbstp
int3
pop
mov
mov
addr16
pop
in
fildl
lret
xchg
inc
jge
test
popa
lahf
imul
aad
mov
xchg
arpl
ja
mov
jmp
mov
xlat
ja
mov
fwait
mov
lods
fstp
mov
enter
rorl
fucomi
lea
lock
inc
pop
lds
out
pop
pusha
in
sub
das
hlt
sbb
iret
aad
xor
mov
out
cwtl
outsb
lea
ja
fstpt
loope
in
push
jmp
data16
ret
mov
jo
xor
xchg
test
cmp
lahf
imul
xor
in
jnp
js
mov
xchg
cmp
pop
test
and
cmc
pop
loop
pop
mov
cmp
out
movsl
jno
ret
push
mov
sub
cmp
fisttpl
jge
dec
add
mov
jecxz
sub
cmp
stc
shll
int
jno
mov
push
mov
cli
mov
aad
daa
sbb
mov
push
xchg
add
shll
cwtl
add
mov
sbb
lahf
jne
mov
ja
pop
pop
dec
dec
call
gs
cwtl
mov
xchg
rcrb
mov
insl
loope
addr16
xchg
sarb
or
mov
mov
loope
lea
nop
jne
iret
cmc
in
mov
push
outsb
jne
mov
dec
push
add
insl
fcomi
lock
sub
shl
mov
into
iret
je
js
fwait
outsl
div
jmp
stos
xor
repz
addr16
cmp
movsb
or
xchg
test
leave
jle
cmp
rcll
fwait
sbb
mov
cwtl
sub
mov
int
cltd
sub
clc
jb
hlt
in
decl
movsb
stc
or
adc
test
inc
push
cwtl
lods
outsl
insl
arpl
and
cld
syscall
xlat
leave
inc
jo
ror
fwait
pop
out
adc
cmc
in
xlat
xchg
leave
mov
out
mov
inc
lock
mov
cwtl
stos
xchg
fldlg2
mov
cmp
mov
cmp
mov
jmp
sbb
movsl
in
out
pop
es
testl
call
cmc
xor
in
pushf
inc
rorl
xchg
push
div
add
enter
mov
and
or
mov
movsb
ja
xlat
movsl
sbb
ja
repz
gs
pop
fldpi
lahf
lea
daa
push
dec
xlat
rcll
push
enter
fsubrl
gs
loopne
mov
mov
loope
push
test
sar
mov
pop
push
sub
cmpsl
lods
fs
cmpsl
lea
arpl
sarl
cltd
fndisi(8087
fwait
leave
cmp
repz
sub
mov
cmp
jcxz
roll
lret
fistpl
test
scas
jg
lret
push
ret
mov
repz
aas
js
xchg
iret
movsl
and
sbbb
cltd
leave
mov
cwtl
gs
pop
outsl
popa
aaa
jne
mov
popf
pop
stos
pop
shll
hlt
mov
xchg
mov
popa
jmp
aaa
xor
fcmovnbe
sbb
pop
test
pop
mov
lahf
rcrl
add
jmp
mov
push
sbb
add
mull
or
leave
rcrl
fimull
shll
mov
push
out
push
adc
mov
lahf
push
cmpsb
mov
sarl
xchg
jne
cwtl
fisttps
ja
adc
imul
and
lea
lret
xlat
lods
loopne
add
jne
mov
gs
jmp
stos
rcr
pop
pop
test
push
cmp
popa
and
pop
out
pop
mov
in
jle
fsubrl
jnp
daa
cltd
and
fsts
pop
aad
cltd
sbb
popf
and
jmp
push
ljmp
xchg
lahf
pop
jecxz
in
shll
push
push
pop
neg
leave
mov
arpl
jae
pushf
scas
cltd
mov
popa
cwtl
fsubs
lock
push
loop
fsubs
dec
xchg
stos
xor
movsl
div
xchg
sbbl
push
ss
mov
iret
ljmp
lea
fistps
ret
sbb
aad
sbb
iret
xchg
subb
mov
pop
lock
xchg
psrlw
int3
cmp
popf
mov
push
xchg
xor
int
sbb
rcr
sub
scas
mov
aaa
adc
push
sbb
jmp
mov
flds
jl
pop
inc
incb
ret
pop
add
cltd
loope
xchg
xlat
rcrl
push
inc
into
sar
and
or
jne
cld
das
cwtl
scas
movsl
mov
pop
lahf
add
jmp
bt
lret
rorl
test
mov
or
cld
cli
cltd
mov
outsl
add
out
jmp
push
cltd
mov
ja
cltd
ret
pushf
xchg
movsl
and
mov
mov
mov
clc
inc
cmc
pop
mov
lahf
test
fstpl
out
lock
jnp
popf
out
mov
mov
insb
ljmp
xchg
stos
sbb
fsubrl
cmp
movsl
into
mov
idivl
jmp
scas
xchg
mov
leave
jecxz
adc
ja
dec
push
mov
arpl
stos
call
std
movsl
or
dec
flds
mov
cmp
sub
xlat
adc
sub
mov
das
xchg
sbb
push
xlat
mov
divl
scas
subl
movsl
lret
out
arpl
xor
cmp
ret
mov
or
dec
jno
les
cwtl
imul
cmc
jns
lahf
nop
add
fcmovne
loope
insb
popf
ror
test
push
mov
cmc
mov
mull
push
bound
cli
sbb
mov
mov
imul
popf
rcl
xchg
ficomps
fistl
pop
sahf
sub
decl
dec
ja
mov
jecxz
lahf
popl
lods
or
sar
jmp
cmc
cmpsl
insb
jge
stos
decl
jmp
pop
add
mov
push
lret
sbbl
dec
fcoms
mov
pop
cmp
lahf
call
scas
into
jnp
adc
pop
cmp
mov
inc
inc
cs
pop
stc
jg
pusha
add
ja
cmc
addr16
shrl
mov
test
addr16
imul
out
adc
repz
test
shll
mov
orl
mov
cmp
dec
cmp
or
and
adc
shr
adcb
lods
inc
sub
dec
add
shrl
andb
pop
popa
xchg
aad
mov
jecxz
shlb
mov
fildl
jo
repnz
jmp
pop
or
fbstp
arpl
sub
ja
and
andl
fisttps
xchg
jae
mov
xlat
mov
adc
fstp
mull
cli
mov
dec
cld
aaa
rcrl
icebp
in
push
jmp
or
outsl
aam
icebp
jmp
fistl
sub
int
or
xorl
mov
jns
out
inc
sar
xchg
stos
negl
mov
out
jne
jae
mov
outsl
out
mov
push
jge
mov
ds
popa
repz
push
test
frstor
pop
add
lret
jns
dec
mov
add
xlat
out
xorb
xor
sbb
cmpsl
mov
imulb
outsl
repz
adc
jbe
out
and
lds
jo
sub
adc
pop
stc
add
jmp
xor
test
lock
das
xchg
call
mov
jns
lea
out
ret
lods
stc
popa
and
mov
or
mov
push
add
push
fidivs
sbb
jnp
xchg
aad
outsb
out
imul
cwtl
and
push
mov
outsl
lock
and
adc
dec
push
cmp
test
xchg
adc
stos
lds
xlat
and
test
mov
or
jl
icebp
push
lahf
xlat
push
xchg
ss
cmpsl
enter
int
mov
mov
fistpl
cwtl
aaa
and
sub
movsl
and
or
in
pop
push
cwtl
adc
pusha
adc
adc
leave
and
imul
jne
mov
mov
jmp
mov
in
call
leave
fcomps
push
imul
addr16
xchg
lahf
imul
mov
mov
add
stos
aad
aam
outsl
mov
mov
lds
mull
test
add
or
in
fldcw
xlat
mov
dec
xorb
outsl
gs
fmulp
mov
jmp
lods
cmpsl
inc
fs
popa
lods
or
cmp
leave
xchg
mov
or
int
jle
in
clc
inc
hlt
sbb
iret
lea
pop
cmp
and
xchg
mov
outsl
pusha
jne
lret
xchg
pmulhuw
in
dec
jl
pushf
stc
aam
sbb
jmp
jecxz
mov
cwtl
shl
jo
int
pop
and
movsl
mov
loope
push
gs
outsl
or
jne
lahf
jecxz
mov
arpl
push
imul
iret
xchg
inc
xchg
mov
outsl
cmp
xchg
aad
pop
aas
enter
addl
jmp
cld
cmovl
aas
lds
leave
fmull
arpl
or
jg
popf
das
jmp
aad
sub
push
out
test
fildl
xchg
dec
iret
mov
pop
mov
inc
xchg
lods
jb
xor
add
adcl
stc
pop
popa
lret
cmp
dec
out
inc
mov
dec
xor
sub
mov
sbb
and
pusha
out
test
sbb
jecxz
jb
mov
cmp
scas
pop
rol
cmpsl
adc
adc
pop
mov
jecxz
fdiv
jne
ret
push
movsl
lret
shrl
outsl
addr16
sbb
int
ret
jmp
addl
push
push
test
aam
cli
dec
pusha
dec
cmp
jns
leave
clc
mov
inc
lock
mov
rcrl
push
outsb
call
imul
lret
push
addr16
xchg
in
or
mov
mov
call
arpl
aam
pop
add
push
data16
fstpt
adc
xchg
scas
xchg
push
mov
jge
sub
jae
stos
and
and
adc
push
mov
add
gs
ja
imulb
rol
pop
sbbl
fldcw
dec
xchg
outsl
call
mov
js
out
ljmp
pop
xlat
movsb
andb
mov
rorl
cltd
cs
ret
in
push
inc
push
inc
data16
cmp
mov
int
pop
sbbl
ret
repz
mov
addr16
lds
lret
lods
int3
dec
in
ss
ja
and
lahf
in
fsubrs
shrl
or
pop
mov
and
aas
mov
rep
ret
imul
in
test
roll
aad
movsl
imul
pop
jp
mov
repz
pushf
test
stos
call
fnsave
outsl
stos
hlt
aaa
repz
jmp
out
mov
jl
incl
out
push
jmp
cmp
lds
andl
or
push
test
mov
mov
push
imul
jl
mov
pusha
repz
jge
lea
jmp
lcall
sbb
pop
and
lods
sbb
lahf
lea
jmp
mov
xchg
imul
pop
es
pop
sbb
fstpt
test
movsl
insl
shrl
and
mov
loope
test
lods
out
aad
testb
test
xchg
mov
test
xlat
imul
push
lods
sub
xchg
cltd
push
pop
cmp
mov
lods
add
push
loope
out
rorb
es
ljmp
xchg
fisubrl
mov
out
add
cmpsl
les
adc
loope
ja
fucomi
bound
neg
cmc
add
aad
shl
xchg
push
mov
lcall
pusha
pop
or
rol
sub
pop
jno
leave
stos
in
shll
nop
jmp
xchg
mov
push
xchg
fwait
add
jecxz
inc
in
xchg
jne
xchg
insl
mov
ret
test
sti
xchg
jmp
push
setae
xchg
testl
call
pop
sub
ja
mov
mov
int
jp
cltd
pop
sbb
pop
cmc
or
imul
pop
push
repz
mov
arpl
les
rcrl
ret
jns
mov
pop
les
lahf
negl
add
xchg
add
push
xchg
and
xchg
pop
cmpsl
adc
out
outsb
dec
jmp
insl
pusha
sbb
aad
mov
int
imul
ds
testl
pop
mov
aad
fisubs
scas
adc
adc
pop
dec
mov
add
dec
insl
sub
movsb
lock
mov
ja
dec
and
lds
jge
stos
jecxz
cmp
xchg
sbb
mov
ret
shl
sti
and
pop
adc
imul
lahf
out
movsl
jmp
nop
sbb
in
adc
out
ffree
out
mull
fs
mov
cmpsl
cmp
aad
ret
sbb
rcl
lds
mov
or
mov
xor
mov
fildll
repz
jmp
cwtl
xchg
idivl
test
lahf
js
mov
aad
divb
mov
ret
imul
lret
test
cmpsl
int
mov
add
jnp
lahf
arpl
and
insl
cwtl
xor
xchg
outsl
ret
lret
gs
test
lds
fsts
mov
les
xchg
lahf
shll
pop
lret
mov
dec
jmp
jg
int
adc
mov
outsl
add
out
popf
inc
push
pushf
stos
arpl
imul
push
add
cli
ret
in
jne
out
cwtl
xlat
call
sarb
jmp
mull
adc
mov
in
push
xchg
cltd
xchg
aad
clc
or
mov
imul
mov
push
cmpsb
mov
in
jae
pop
aad
imul
and
cltd
mov
fwait
mov
sub
ds
jecxz
sub
cmpl
add
jmp
push
or
mov
lahf
repz
test
lock
not
rorb
mov
mov
ret
aad
push
int
cmp
icebp
cmpsl
inc
stc
dec
mov
mov
mov
fisttpl
adc
out
cmp
cmpsl
stos
fwait
cwtl
xchg
out
enter
movsb
rcr
add
das
or
divl
jmp
imul
xchg
mov
ljmp
push
out
rcrl
push
pop
jo
pop
popf
cwtl
mov
insl
adc
test
mov
fsubl
jno
in
lahf
xlat
pushl
outsl
pop
push
mov
in
push
add
lahf
orl
inc
lds
jmp
loope
cwtl
mov
ja
cltd
adc
ffree
outsl
pop
mov
ret
jl
jmp
enter
ljmp
lds
call
iret
jmp
cltd
cwtl
lahf
mov
sti
shrl
jmp
int
xor
or
sarb
addr16
ror
mov
mov
ja
test
inc
out
leave
jne
jmp
rcll
mov
and
scas
in
jmp
lcall
out
xchg
imul
rol
adc
cmc
repz
and
out
mov
or
sbb
add
iret
test
mul
xchg
cltd
sub
movsl
mov
mov
imul
and
fildl
lea
clc
and
xor
roll
hlt
lds
cmpsb
arpl
jne
push
fisubs
xchg
sub
jnp
cmp
pop
sbb
addr16
loop
add
adcl
cmc
or
roll
xchg
out
inc
jbe
popa
mov
jl
cmp
test
xchg
xchg
adcl
push
push
sbb
cmp
jns
test
fwait
jb
xchg
push
mov
shlb
andl
in
jo
aas
iret
mov
and
es
in
out
stos
mov
fbstp
mov
cmpsl
lret
push
clc
aas
mov
movsl
adc
adcb
mov
iret
xorl
test
mov
loopne
mov
stc
test
xchg
xrelease
int
leave
xchg
push
cmc
cmp
inc
push
movsb
xchg
loope
jnp
repz
arpl
jp
in
scas
lea
jne
push
inc
lcall
xchg
jmp
sub
addr16
cmpl
daa
enter
xlat
cmp
push
stos
gs
jno
scas
mov
test
sbbb
dec
mov
jl
sub
jecxz
repz
loopne
gs
jge
add
shl
mov
or
xchg
stc
xor
in
mov
in
mov
in
mov
pop
outsl
push
imul
rcrl
add
sub
pop
pusha
insl
push
or
aas
pop
repz
adc
call
sbb
outsl
ret
in
aam
add
out
add
adc
adc
aas
add
pop
stos
mov
fsts
push
mov
inc
mov
out
rcrl
mov
lret
sbb
cltd
stc
fisttps
mov
pop
lock
inc
addr16
push
fistps
xor
sahf
fwait
mov
scas
cmpl
fsubl
xchg
mov
fidivrl
hlt
pop
in
lds
mov
and
sbbl
repz
frndint
leave
dec
rcr
mov
xchg
fucomi
cs
or
repz
push
outsb
pop
scas
pusha
sub
or
cmp
hlt
fwait
int
outsb
add
lods
pop
clc
adc
adc
mov
sarl
xor
lods
fimull
adc
inc
nop
sbb
jb
in
sub
sarl
outsl
rorb
cmc
in
cmp
loopne
lods
out
xchg
adc
idivb
test
fwait
xchg
sub
add
aad
aam
idivb
gs
xlat
jle
in
lea
mov
mov
icebp
sbb
lret
dec
xor
dec
or
jge
imul
jecxz
and
shl
movsl
incb
jo
pop
in
dec
or
and
adc
mov
xchg
sahf
cmp
sub
sub
push
movsb
imul
inc
iret
xchg
push
sbb
mov
test
jae
jne
out
in
pop
loopne
fiadds
movsb
test
andl
outsl
popa
scas
and
shll
mov
fs
test
sbb
cwtl
in
sti
popa
les
sbb
jl
repz
test
jmp
xorl
fs
mov
flds
mov
sbb
lods
shll
leave
cmc
adc
sub
adc
test
jl
idiv
cwtl
and
xor
add
out
add
push
mov
pop
gs
cwtl
outsb
notl
fs
mov
pop
mov
rcll
scas
adc
cmp
cli
test
xlat
ffree
mov
imul
leave
fstpt
mov
popa
insl
sbb
dec
xlat
ja
dec
repz
iretw
or
insl
cwtl
xchg
std
in
scas
rclb
out
lret
sub
in
push
sub
mov
aad
add
mov
out
mov
lea
movsl
arpl
in
out
aaa
dec
xchg
out
jns
mov
jecxz
cmp
testb
pop
flds
fwait
enter
mov
iret
xlat
and
mov
pop
lock
mov
shll
out
scas
ficoms
xor
pop
rcrb
push
test
pop
lahf
mov
shld
testl
and
cmp
scas
and
shrl
and
fistps
insl
arpl
cmp
daa
inc
in
mov
sbb
or
sub
in
push
inc
out
movsl
pop
rep
and
dec
sbb
imul
fndisi(8087
fiadds
iret
out
push
jp
xchg
scas
mov
lds
fwait
jp
adcl
ljmp
cli
movsl
pop
test
jmp
test
xor
xor
sub
jg
add
test
in
out
cmc
js
xlat
xchg
push
sub
out
lock
sbb
adc
or
fildl
jns
scas
notl
mov
pop
fildll
dec
mov
mov
sbb
not
dec
rcl
cwtl
aaa
cwtl
fldl
dec
mov
cmc
lahf
sbb
lahf
cltd
stos
jmp
jmp
mov
xor
insl
xchg
in
cli
movsb
test
lea
ret
cli
and
jns
mov
addl
add
jecxz
aaa
mov
lods
lret
dec
mov
xchg
imul
outsl
mov
roll
add
jmp
mov
lea
mov
out
adc
mov
mov
fucomi
push
mov
pop
mov
push
call
add
sbb
scas
in
add
out
inc
sbb
mov
add
lods
gs
imul
test
ja
shrb
aad
add
popa
mov
sub
int
add
xchg
xchg
pop
inc
and
xchg
leave
xchg
movsl
pop
xchg
mov
and
popa
gs
cmpsl
nop
push
adc
bound
iret
ds
insb
lea
cmc
pop
sub
mov
inc
out
jne
sub
pop
push
mov
vandnps
insl
imul
jmp
lahf
xlat
negl
lahf
sbb
pop
jnp
mov
in
in
lock
lahf
xorl
insl
push
and
jne
imul
roll
sbb
nop
sbb
cmp
shld
cmpsl
or
mov
pop
inc
les
out
mov
jmp
jg
pop
lea
cmc
xchg
test
arpl
ficoml
xchg
insb
cmpsl
mov
filds
notl
xor
xchg
lock
test
xchg
roll
cmpsl
cli
sub
leave
out
or
mov
gs
jne
mov
lock
inc
popf
scas
inc
cmpsl
popa
ja
dec
mov
iret
add
dec
add
and
ficomps
jmp
int
adc
jns
xchg
nop
push
add
in
loope
popa
shl
dec
iret
sub
jne
fldcw
pop
add
pop
flds
aad
repz
std
das
popa
dec
in
lahf
cld
mov
pop
insb
jle
jo
jmp
aad
xchg
add
loopne
sbb
icebp
jecxz
mov
pop
push
xchg
ja
ret
pop
popa
xlat
jne
imul
fiadds
out
mov
xchg
test
imul
jecxz
cmpsl
jmp
pop
add
outsl
mov
insl
hlt
mov
mov
xchg
loope
cmp
mov
cmpsl
repnz
in
mov
ds
or
vpavgw
stos
adcl
cwtl
imul
xchg
rcr
shll
enter
orl
repz
pop
cmp
test
xor
iret
jo
push
test
and
popa
mul
popf
xchg
sbbl
xchg
mov
loope
push
cmp
fiaddl
mov
xorl
mov
jno
and
or
add
in
cmp
mov
fstpt
imul
sub
gs
xchg
outsl
jmp
push
cmp
div
stos
mov
cmp
adc
ret
sbb
movsl
adc
out
jno
fdivr
outsl
cmp
fwait
xchg
jmp
fisttpl
and
in
cmc
cli
push
rolb
mov
jnp
out
mov
pop
lds
in
popf
xchg
lods
in
add
je
cmp
leave
mov
jmp
mov
dec
mov
vpand
test
mov
js
out
mov
stc
pop
fwait
xchg
xchg
inc
test
dec
loope
mov
in
popf
hlt
push
into
pop
xchg
or
movsl
loope
leave
mov
fwait
in
mov
xor
mov
roll
inc
fimull
pop
lahf
jge
mov
mov
and
test
in
movsb
xchg
leave
cmpsl
insl
lods
mov
mov
in
inc
pop
sar
mov
iret
cs
dec
jne
mov
jmp
push
pop
int
cmpl
cmp
jns
scas
pop
or
shrl
add
in
xorl
add
and
and
ret
sub
cltd
fldl
sub
inc
lds
mov
cltd
mov
scas
push
adc
adc
dec
gs
push
ficoml
fildl
dec
adcl
pop
das
out
jecxz
push
dec
or
mov
lahf
insl
xchg
xchg
fstps
mul
sub
xchg
lahf
rorb
lea
sub
cwtl
arpl
cwtl
orl
xchg
xchg
leave
pop
mov
push
sbb
mov
mov
jae
frstor
js
rcrl
test
xchg
jo
add
xorl
fldcw
cwtl
mov
loop
add
push
jmp
aad
lds
scas
fxch
inc
jae
in
xlat
lret
loope
cltd
and
xchg
imul
jp
cwtl
pop
insl
mov
outsl
adc
mov
jp
fdivl
mov
inc
out
mov
or
aam
sbb
gs
mov
rcrl
sbb
out
repz
jecxz
cmp
adc
add
mov
jl
xchg
lahf
mov
dec
stos
lock
repz
lcall
jnp
jmp
cli
cwtl
inc
lods
sub
adc
sbb
mov
testl
sbb
cmp
jmp
negl
dec
xchg
xlat
sub
ret
jge
jne
mov
testl
dec
cwtl
movsl
ja
ffreep
and
or
mov
test
popa
fistl
popf
mov
idivl
out
in
ret
xchg
mov
lods
xchg
filds
xchg
popa
push
pop
cltd
or
mul
gs
fildll
mov
iret
out
xchg
adc
lods
sub
xchg
jne
mov
dec
cmp
dec
mov
mov
in
js
mov
jge
repz
int
lds
pop
cmp
cmpsl
add
sti
jecxz
push
or
nop
push
addr16
sub
mov
add
mov
add
stos
cld
mov
xchg
dec
mov
leave
std
and
push
in
and
dec
adc
pop
add
in
iret
mov
mov
imulb
test
popa
adc
sbb
rcrl
hlt
push
test
aad
cmpsl
pop
xor
imul
movsl
add
mov
push
pusha
pushf
lcall
mov
loopne
stos
add
popf
ja
cmp
jmp
outsb
mov
xchg
xchg
out
add
out
xchg
add
mov
push
stos
jmp
cmpxchg
test
shrl
or
idivl
fbld
fistps
insl
xchg
test
cmc
popa
sub
jp
aad
ror
ss
or
xor
push
pop
adc
rorb
mov
in
dec
shrl
push
fnsave
sahf
outsl
pop
mov
jecxz
in
stc
mov
push
lods
test
push
je
cwtl
ja
je
xchg
rcrl
das
push
and
cmpsl
jp
mov
add
mov
inc
in
fcompl
lret
cmpsl
divl
xchg
das
ss
xchg
mov
sbb
mov
cltd
or
pop
insb
sbb
stc
sbb
rolb
mov
or
fimull
fwait
gs
fisubl
sbb
decb
pusha
inc
sbb
ja
clc
fwait
lahf
lea
addb
outsl
leave
movsb
sub
jne
lods
cmpsl
mov
bswap
fwait
repnz
aad
popa
sbb
mov
lahf
lods
popa
ret
popf
xor
push
mov
imul
rdpmc
test
pusha
imul
push
outsb
sbb
sahf
mov
sub
xor
cmp
clc
repz
lds
rcrl
aam
xchg
lahf
in
cli
xchg
aam
divl
sbb
outsl
xlat
imul
pop
inc
orl
addr16
fwait
cmp
popa
insl
fcomip
in
push
ds
pop
adc
pop
rcl
lods
mov
div
stc
cmp
arpl
xchg
leave
sbb
stos
fwait
inc
mov
repz
cmc
lahf
arpl
fists
jnp
push
dec
cmp
cmpsl
ret
imul
xchg
stos
jecxz
ja
das
inc
pop
jmp
iret
repnz
xchg
mov
test
loope
lods
andb
rol
outsl
mov
mov
clc
por
lahf
pop
mov
sbb
mov
arpl
ret
cmpsl
jmp
or
test
scas
and
sbb
push
xchg
mov
sbb
arpl
jb
dec
xor
clc
mov
jle
test
daa
fildl
gs
mov
loope
in
cwtl
cmc
jmp
popf
sti
aas
int
lock
popa
stc
movsl
pop
aas
sub
fcmovnb
cld
pop
imul
out
xor
imul
sahf
xchg
adc
testl
test
mov
aaa
or
test
in
arpl
cmp
aam
jnp
popa
in
xchg
dec
pop
test
push
dec
mov
leave
rorb
mov
sbb
jns
lods
jmp
pop
mov
jmp
cmp
lds
pop
imul
jo
jmp
pop
fisubrl
sahf
push
in
addr16
fwait
ds
movsb
jns
scas
loope
in
fldenv
shr
dec
aaa
jmp
rcr
fld
and
mov
out
dec
add
xchg
shl
mov
or
lret
imul
mov
pop
imul
add
out
out
inc
pop
mov
out
sub
sbb
or
ret
or
outsb
iret
jp
sarb
add
rcrl
addr16
popf
jne
movsl
mov
mov
inc
mov
push
xchg
or
repz
in
fildl
idivl
stos
ret
cmpsl
pop
and
inc
jle
add
mov
lods
mov
xchg
fstps
bnd
jns
rol
int
xorl
or
stos
into
fisttpl
mov
add
sbbl
cwtl
les
jmp
mov
xchg
fcomp
leave
push
call
aaa
scas
insl
in
pop
cwtl
test
rorl
imul
stos
in
fmull
loopne
es
insl
inc
mov
fs
fsts
testl
adcl
mov
xchg
adc
mov
imul
mov
or
cli
adc
pop
push
popa
mov
call
cmp
xchg
xchg
iret
fwait
inc
movsl
insl
imul
jge
fistpl
out
sti
ja
cwtl
push
popf
inc
cli
int
push
fldt
xor
roll
cld
call
jge
jmp
and
lahf
negl
ret
repz
arpl
rorl
fwait
jnp
ja
add
xchg
xchg
mov
jmp
pop
imul
jge
lds
sar
adc
sub
mov
lea
in
mov
hlt
or
push
shll
fwait
jne
idiv
pop
fisttps
mov
jo
sbb
push
jae
mov
fldcw
bound
jecxz
xor
fcomi
call
lahf
ror
pop
cmp
out
incb
xchg
xchg
jb
iret
xchg
pop
testl
inc
pop
sti
adc
xlat
jg
adc
adc
clc
xchg
xchg
lahf
cltd
in
pusha
pop
cmc
movsb
sub
int3
mov
xchg
sbb
cltd
outsl
imul
das
fsts
mov
and
or
jmp
pop
loope
lret
sub
mov
in
push
iret
mov
arpl
pop
in
xchg
pop
out
mov
add
jmp
roll
call
mov
cld
jne
test
jecxz
loopne
pop
out
ret
cmpsb
fildl
iret
dec
cwtl
xor
in
lods
jae
ja
dec
mov
aas
mov
ret
and
lahf
mov
mov
xlat
in
out
shll
inc
add
mov
adc
ja
ljmp
mov
cli
popf
movsb
je
arpl
loope
sub
test
push
push
test
sbb
rcrl
ret
sar
or
jmp
pop
fwait
mov
pop
xchg
mov
insl
dec
outsl
adc
dec
imul
xchg
arpl
test
mov
shlb
and
jne
add
iret
in
shrl
push
iret
lahf
lcall
aaa
cwtl
insb
jne
divl
xchg
mov
in
jmp
aas
popa
push
add
imul
cli
adc
jmp
gs
arpl
sahf
mov
lods
imul
pushf
or
cmpsl
mov
push
or
imul
int3
mov
adc
add
gs
xchg
mov
sarl
jmp
je
out
insl
in
mov
dec
mov
out
jl
sbb
fcomp
pop
arpl
xchg
or
test
jne
jmp
adc
mov
mov
add
ret
inc
fcmovb
in
cmpsl
enter
sbb
lahf
out
push
cmp
cwtl
stos
add
clc
jle
ja
mov
dec
fistpl
movsb
das
leave
enter
frstor
repz
push
incl
cld
es
lret
cmpsl
jae
imul
sub
add
and
xchg
mov
adc
jne
cmp
aad
mov
ja
shr
xlat
fldl2t
movsl
jp
or
inc
xor
insl
das
int
xchg
jp
ds
pop
scas
add
xchg
test
sbb
dec
jmp
sbb
or
mov
rcr
cmp
arpl
fistpl
orl
cwtd
imul
stc
inc
xor
and
lahf
sub
out
push
scas
cmpsl
dec
shrl
xor
and
addr16
dec
jecxz
push
and
adc
movsl
aad
xlat
dec
icebp
cmp
and
adc
jo
aad
jno
mov
jne
pop
shll
pop
fst
fwait
aad
lea
cmp
xchg
jp
mul
cmpsl
xchg
jecxz
xchg
dec
adc
inc
add
les
cmp
in
xor
pusha
shll
jmp
arpl
les
push
aam
push
aas
dec
push
repnz
xchg
jmp
cwtl
sbbb
cmc
jp
jge
ds
fcoms
sti
scas
xlat
movsl
sub
sbb
repnz
mov
mov
or
aad
fldenv
cmp
gs
imul
mov
lds
icebp
out
repz
imul
out
rcrl
pop
inc
in
rclb
jp
pop
test
xchg
jecxz
lods
dec
adc
out
xlat
lret
out
mov
roll
add
orb
ss
adc
sbb
out
hlt
xchg
adc
pop
cmp
jl
adc
xor
xchg
mov
arpl
or
add
imul
lretw
fsubr
mov
imul
pop
dec
add
mov
inc
jae
jp
ja
mov
and
jmp
cmpsl
loope
movsl
pop
mov
sahf
cli
jle
adc
leave
dec
movsl
push
scas
jbe
and
pop
outsl
jecxz
jp
mov
push
jo
mov
cmpsl
xchg
popa
out
pop
inc
pop
imul
iret
lock
clc
outsl
stos
repz
mov
fisttps
in
push
arpl
jmp
xor
mov
loope
jmp
in
repz
mov
imul
orl
out
loope
push
and
sub
aas
mov
imul
movsl
or
lret
out
xchg
inc
fisttpll
add
adc
xchg
mov
imul
add
test
lods
clc
pop
cmpsl
ret
pop
or
cmc
out
popa
gs
sbb
or
test
mov
fsubl
out
mov
add
out
int3
lea
addr16
add
add
xchg
cmc
in
and
test
jne
out
mov
jg
mov
cltd
popa
mov
iret
adc
fistl
add
imul
adcl
adc
fsts
adc
xchg
scas
hlt
iret
inc
xor
das
in
je
push
cmp
test
mov
dec
xchg
push
fdivrs
shrb
loopne
test
mov
addl
mov
leave
ret
int
sbb
shrl
adc
shlb
mov
ret
dec
xlat
xchg
jns
jle
sub
adcl
xorl
arpl
out
leave
push
add
or
shlb
and
std
idiv
int
fsubrs
or
mov
add
gs
in
jae
lcall
out
mov
imul
movsl
inc
hlt
cmp
testl
fwait
popa
cmc
inc
cmp
pop
in
cwtl
out
mov
adc
mov
fwait
rorl
xchg
ret
repnz
jns
test
leave
lock
scas
or
sbb
cltd
mov
add
jecxz
mov
test
cltd
in
mov
jo
add
in
leave
fwait
test
cwtl
lods
lds
pop
adc
jmp
addr16
dec
pop
cmp
lds
dec
test
dec
imul
addr16
andl
mov
push
scas
fwait
sbb
inc
imul
addr16
xchg
mulb
roll
mov
fsubrl
jecxz
cmc
or
cwtl
test
mov
mov
sbb
imul
push
add
mov
pusha
mov
addr16
mov
cld
or
xchg
push
cmp
fcom
loopne
cmpsl
push
push
sti
icebp
and
adc
jp
shll
div
out
lahf
iret
ss
dec
jne
idivl
pop
seta
popf
add
add
stos
dec
int
shlb
test
mov
cmp
rcrb
leave
in
inc
jo
int3
lds
inc
lcall
jl
mov
cmc
mov
sub
dec
lds
iret
frstpm(287
int
mov
mov
mov
cltd
jmp
mov
inc
jmp
xchg
les
adc
call
icebp
scas
cwtl
sbb
dec
jne
test
mov
mov
xor
and
xchg
loope
pop
test
popf
ja
ret
fbld
rorl
mul
and
lea
outsb
ja
jecxz
frstor
add
lea
in
sub
sub
push
call
gs
cwtl
jmp
movsb
arpl
arpl
aad
js
inc
xor
mov
ja
mov
not
and
popf
mov
sub
jmp
enter
je
in
push
xor
out
or
gs
or
dec
out
movsl
pop
adc
cmpsb
out
add
out
and
int
cli
cmp
iret
pop
and
pop
cmp
shr
movsl
jns
sarl
dec
test
out
dec
inc
gs
gs
lcall
movsl
aad
lds
outsl
cmpsb
ficompl
mov
shll
out
testl
fwait
push
push
stos
xlat
mov
loop
lret
cmpsl
test
xor
push
adc
shll
stc
add
rcl
xor
xchg
push
stos
pushf
jecxz
mov
insl
decb
cmpsb
jl
jae
xchg
cwtl
sbbb
cmp
out
push
enter
outsl
pushf
or
mov
lahf
notl
xchg
in
xor
add
mov
fisttpl
xchg
cmp
repz
add
pop
sbb
jmp
or
imul
call
lea
out
imull
xchg
xchg
stos
cmc
add
xchg
bnd
cmpl
mov
rcrl
cmpsl
add
popf
arpl
mov
aaa
jp
imul
insl
pop
xchg
xchg
js
xchg
mov
mov
adc
loope
push
pop
cld
sub
push
or
push
mov
and
flds
out
and
cli
inc
push
out
outsl
pop
in
shl
dec
sub
mov
aam
sbb
stc
pop
out
push
out
cmp
ja
jmp
pop
fcmovnu
clc
movsb
shll
imul
xchg
adc
xor
xchg
leave
jle
sub
insl
popf
xlat
lret
ljmp
arpl
ja
cmp
mov
add
xchg
iret
aad
loopne
xchg
lds
mov
xchg
test
shr
subl
mov
push
lods
int
inc
daa
sbb
cmpsl
insl
and
out
xchg
stos
das
pop
test
cwtl
in
repz
jne
add
int
lds
or
add
ror
cwtl
mov
and
mov
or
jne
data16
gs
xchg
push
dec
xchg
insl
mov
jno
cmc
out
pop
rorl
pop
in
clc
movsl
mull
jnp
xchg
or
sbb
xchg
mov
cmp
fistl
imul
xchg
jo
xlat
rcr
fwait
scas
jmp
pop
clc
mov
jmp
jle
xchg
fisttpl
imul
out
mov
rol
popa
sbbb
das
mov
sub
popa
mov
ja
sub
add
vmwrite
add
fwait
cli
cmp
sarl
pushl
sahf
ret
sbbl
xchg
mov
push
and
push
adc
pop
cmp
scas
pop
push
test
cs
jg
pop
mov
andl
scas
data16
movsl
in
test
pop
dec
xorl
mov
jnp
outsl
imul
mov
leave
lds
pop
loope
test
lahf
rorb
lds
test
and
ja
aas
daa
xchg
pop
lds
add
outsl
rorl
mov
push
mov
xchg
adc
ret
jmp
inc
add
scas
test
xor
test
in
loope
test
arpl
filds
imul
popf
sub
cld
cmp
cmpsb
fcmovnb
aad
clc
mov
imul
cmpsl
jae
xchg
test
push
loope
mov
push
int
rcrl
adcl
rolb
test
loope
mov
xchg
cmp
cmpsb
push
mov
adc
xorl
hlt
jb
xor
je
mov
pop
add
cltd
mov
pop
fsts
scas
ja
mov
adc
orb
shll
cmp
fwait
iret
scas
xor
or
icebp
push
ja
imul
scas
sbb
mull
fwait
pop
repnz
jecxz
ret
hlt
xchg
push
inc
mov
jecxz
add
scas
xchg
in
xor
in
rclb
jecxz
jge
call
inc
push
test
sub
add
fwait
lret
adc
cmp
cmp
cli
add
or
scas
cmp
cmp
lods
subb
adc
cmp
mov
lods
test
sbb
adc
scas
adc
lods
or
leave
pop
roll
test
popf
test
leave
and
in
repz
pop
scas
sbb
jl
mov
pop
lds
gs
xor
mov
movsb
xchg
shll
add
push
loope
leave
jle
icebp
pop
ja
lahf
lods
popa
stos
mov
ja
fisttpl
cmc
jnp
outsl
dec
cmpsl
sub
cwtl
mov
les
mov
les
add
pop
popa
lods
mov
push
xchg
mov
and
dec
jp
jg
cli
add
movsl
flds
inc
mov
jmp
lods
stos
in
lcall
sti
cli
repnz
adc
cmp
xchg
mov
xor
outsl
lcall
mov
jne
and
ffreep
jns
clc
scas
mov
cwtl
cltd
jmp
outsl
addl
ret
mov
adc
push
in
int3
mov
shll
movsw
xchg
nop
rcr
push
cmpsl
andl
scas
mov
rcll
mov
xchg
js
fxch
cmc
pop
jmp
cmp
into
sub
scas
dec
sbb
adc
adc
mov
xchg
xcrypt-ofb
cmpsl
jmp
xorl
push
repz
mov
stos
aad
xchg
cmp
adc
repz
mov
lahf
in
negl
sbb
aad
in
push
push
ret
xchg
cmpsl
push
sub
fldl
xchg
popa
lahf
cld
in
lods
ja
and
and
xlat
and
subl
xor
mov
repnz
dec
in
pop
out
jae
ret
cwtl
push
pusha
push
jnp
pop
loopne
test
insl
in
addr16
roll
mov
jl
adc
jecxz
pop
dec
sbb
xchg
mov
in
mov
fsubp
sti
pop
scas
sub
fmul
in
cmpl
leave
xchg
or
cltd
sub
cltd
cmpsl
dec
or
lods
inc
dec
loope
push
test
sbb
movsl
xchg
jecxz
mov
andl
popa
in
movsl
xchg
mov
fwait
jle
jno
arpl
xchg
test
push
dec
rcrl
mov
mov
cmpsl
pop
jecxz
lds
xchg
cmp
cmpsb
inc
gs
aad
cwtl
push
leave
adc
roll
sub
repz
mov
rorl
fwait
add
popa
lds
xchg
test
xchg
fstps
lahf
shlb
sbb
loope
repz
popl
and
sbb
or
lods
sbb
xlat
int
mov
aad
arpl
outsl
cmpsl
negb
xchg
xor
enter
push
js
xchg
out
roll
jmp
mov
cmc
int3
test
setnp
outsl
and
scas
adc
sbb
mov
movsl
mull
stc
test
repz
sub
xchg
lds
int
call
sub
jecxz
and
loope
imul
out
xlat
xorl
fwait
pushf
insl
jmp
js
stos
cltd
popa
xorb
adc
imul
sbb
fwait
int
ljmp
cli
ljmp
add
mov
test
mov
imul
mov
mov
mov
xchg
sub
push
in
outsb
test
mov
lds
rclb
jne
adc
sar
shll
js
loope
int
popa
mov
lret
in
or
dec
rcrl
lock
jp
test
movsl
and
jle
rcrb
test
mov
cs
fadds
movsl
push
pop
mov
sub
lret
inc
mov
frstor
mov
inc
dec
mov
mov
fs
push
nop
fdivrl
enter
in
mov
dec
pop
enter
pop
andl
fidivl
aas
sub
bswap
in
movsl
pop
and
cmp
cltd
stos
out
xor
adc
adc
iret
fnstsw
call
xchg
lods
inc
pop
inc
xor
pop
jl
mov
scas
vpmaddwd
int
xchg
fabs
sarb
mov
stos
xchg
cmp
dec
bswap
jmp
stos
in
gs
leave
mov
inc
mov
sbb
mov
cmp
aam
out
stos
out
pushf
fldenv
pop
popf
jle
xchg
je
test
cmpsl
mov
in
xorl
xchg
fstps
aas
xchg
in
xchg
fcoml
shrl
lds
movsl
popa
push
imul
mull
xlat
and
pop
mov
and
daa
lea
sub
stos
and
cld
pop
push
mov
out
push
jae
mov
xchg
or
jb
adc
cmpsl
mov
into
or
cltd
sub
jmp
and
push
leave
stos
mov
jecxz
jne
sub
ret
bound
jae
mov
xchg
push
sbb
pop
or
jecxz
out
mov
sbb
loopne
roll
mov
mov
xchg
repnz
xor
ret
leave
jne
leave
xchg
cltd
mov
scas
xchg
in
andl
pop
pop
lahf
fstps
repz
dec
arpl
mov
arpl
js
fldcw
in
rol
out
fstpt
mov
popf
insl
out
js
fwait
xchg
mov
xchg
es
xor
mov
nop
popa
push
jne
jp
xlat
cmpsl
js
xchg
lods
jge
imul
xchg
mov
lahf
outsl
cmc
loope
out
leave
xchg
in
push
pop
mov
test
scas
push
inc
aam
or
lret
cli
push
movsb
mov
in
sbb
jmp
adc
add
iret
fwait
clc
inc
or
jo
dec
mov
and
rorl
mov
ret
or
mov
xchg
mov
negl
lods
and
sbbb
push
fwait
clc
arpl
xor
in
add
xchg
sbb
xchg
push
repz
jne
xchg
xchg
pop
int
repnz
pop
rorb
mov
aam
dec
loope
arpl
insl
mulb
cmc
cwtl
aas
xlat
cmp
ja
lods
lret
aas
ficoms
push
lods
lgs
movsl
out
cmc
ja
pop
push
mov
test
int
add
outsl
push
scas
imul
int3
dec
push
push
arpl
mov
fs
sbb
and
popa
xchg
fxam
psadbw
test
addb
inc
pop
shr
test
lret
fcmovb
pop
ret
adc
jmp
test
lods
mov
mov
adc
ljmp
inc
lret
test
out
mov
les
xor
xchg
adc
adc
in
or
push
stc
fwait
cwtl
pop
jmp
test
xor
jne
add
shr
push
sub
subb
mov
sti
mov
insl
pop
push
loope
int
add
pop
popf
loop
jbe
neg
sub
mov
mov
das
movsl
mov
stc
inc
aas
cwtl
mov
insb
out
cmc
push
std
xlat
xchg
andl
insl
dec
xchg
mov
push
dec
pop
scas
sub
mov
and
call
dec
adc
sbb
mov
daa
push
stc
cmp
xchg
fcoml
ret
outsl
gs
pop
jne
dec
test
inc
or
test
mov
in
mov
outsb
add
ss
push
lods
test
popf
xlat
xchg
sbb
xchg
fucomi
movsl
aad
pop
shrl
and
adc
or
mov
insl
cwtl
mov
sbb
mov
jecxz
ret
jo
xchg
test
add
popa
mov
stc
jne
or
stos
cld
daa
and
divl
arpl
lds
lahf
add
fs
roll
pop
out
fbstp
pop
ret
jo
pop
shll
fsts
sbb
int3
jecxz
int
in
das
lds
jg
lret
xchg
jmp
arpl
push
cmpb
fnstenv
rolb
in
inc
movsl
jmp
add
mov
lds
lahf
int
push
aam
pusha
test
out
or
mov
sbb
test
test
xor
sbb
xchg
and
aam
or
fistpll
leave
jle
push
cmpsl
inc
sbb
iret
cmc
imul
out
jo
xlat
mov
sbb
ja
mov
adc
out
or
scas
sbbl
mov
sub
fabs
daa
xchg
lock
dec
inc
jp
or
fldl
out
test
aad
mov
das
xchg
arpl
test
push
sbb
xlat
and
xchg
mov
fldcw
popf
sub
aam
jne
ret
aas
out
jmp
xlat
push
mov
mov
iret
pop
wbinvd
in
adc
adc
imul
mov
shr
jp
jae
add
call
sbb
xchg
out
in
adc
push
sbb
fstp
js
mov
mov
xchg
cmc
imul
popf
mov
xchg
adcl
inc
lods
mov
mov
pusha
push
mov
pop
fcoml
lcall
shll
fcompl
mov
xchg
cmc
xchg
lods
je
out
gs
imul
ja
cmc
fstps
jp
or
mov
mov
insl
cwtl
jno
popa
in
inc
fwait
xor
mov
leave
test
mov
and
shr
arpl
push
dec
or
shrb
lahf
mov
push
in
adc
dec
sahf
cmp
int
xchg
bound
dec
out
inc
or
out
imul
in
xchg
popa
and
and
psubusw
adc
sbb
into
lds
cld
mov
shll
xchg
xlat
pop
or
shrl
es
shrl
xor
test
add
out
jecxz
jmp
mov
aas
imul
xlat
mov
aaa
and
in
lods
jmp
testb
xchg
in
sub
sub
sti
xor
jp
pop
ror
cmp
cmp
test
iret
xchg
xchg
leave
push
in
xor
sbb
and
jge
push
pop
enter
fwait
add
in
shrl
test
mov
jmp
lods
aad
sub
scas
mov
out
test
aad
inc
cmp
jmp
in
gs
movsb
sbb
leave
mov
fucomip
in
jne
mov
imul
mov
and
jmp
movsl
fstl
push
clc
xor
lahf
pop
test
shll
cwtl
xor
out
stos
into
sti
addr16
out
arpl
ja
shr
in
aas
xchg
in
js
xchg
addr16
add
xchg
imul
inc
sbb
cmp
add
or
mov
outsl
in
mov
shll
mov
cmpsl
imul
rcrl
lods
mov
loope
out
in
and
sbb
jp
fldenv
inc
por
or
int
jecxz
insl
jnp
faddp
sbb
roll
in
in
push
ja
sub
rorl
movsl
lret
or
ja
lods
xor
adc
pop
mov
ret
insl
sbbb
filds
cwtl
jmp
out
mov
push
iret
test
lahf
jmp
in
xchg
mov
das
mov
nop
in
stc
mov
xlat
gs
iret
jp
mov
lods
mov
clc
pmullw
cmp
rcll
movsl
loope
test
xchg
dec
arpl
cmc
negl
xchg
add
lret
roll
sub
loope
testl
push
andb
in
jecxz
mov
int
xlat
cmp
arpl
adc
ret
inc
inc
movsb
fnstenv
arpl
fs
inc
cltd
repz
add
mov
test
sub
pop
repz
or
mov
aas
lods
mov
pop
arpl
or
sbbl
and
add
inc
mov
sbbl
popa
lret
push
cmp
imul
pop
push
addr16
push
jmp
rcrl
int
addr16
fwait
xchg
lods
pop
lahf
lock
jecxz
pop
nop
imul
lahf
fld
pop
mov
push
shll
in
lea
jge
lods
pop
cmpsl
test
sbb
outsl
rcll
rcll
xor
in
push
mov
jbe
xlat
cmpsb
xchg
inc
mov
mov
imul
lahf
push
lock
jmp
lea
pop
sbbb
jecxz
sub
sub
add
stos
add
insl
lds
mov
push
lret
adc
cmpsl
fbld
mov
cmpsl
outsl
jo
js
cwtl
out
aas
insl
mov
das
add
xchg
pushf
dec
dec
cmp
pop
xchg
and
divl
pop
out
ret
imul
call
mov
in
dec
fnstenv
sub
out
cwtl
fsubrl
cwtl
movnti
lahf
xchg
mov
imul
sti
call
int
push
scas
fwait
cwtl
mov
xchg
mov
sar
jmp
lahf
push
xchg
roll
outsl
adc
add
cwtl
jb
sub
xchg
ret
and
and
rclb
cmp
dec
test
xchg
pop
and
out
ret
fbld
lahf
mov
aam
mov
lods
jmp
jecxz
pop
mov
aam
xchg
mov
sbb
jb
cltd
push
sub
jo
push
movsl
int3
pop
fdivp
fisttps
stos
mov
addl
xchg
stos
loopne
jnp
repz
push
pop
mov
pop
fcompl
iret
cmp
jmp
stos
mov
rolb
in
popf
sub
xchg
xchg
pop
cmp
cmp
imul
stos
int
jge
cwtl
push
fs
ret
sub
mov
cmp
push
lcall
ja
popf
ret
pop
xchg
push
aaa
inc
xor
xchg
dec
add
mov
sub
test
jecxz
aaa
pusha
xor
xchg
popa
mov
mov
mov
out
mov
jns
fstpl
cwtl
mov
adc
fldt
iret
jecxz
push
aas
mov
or
test
ret
xlat
jmp
outsb
out
xor
jb
pop
xchg
ret
iret
adc
std
lock
mov
popf
cmc
orb
andl
or
mov
andl
test
mov
out
in
iret
xchg
cli
aam
pop
xchg
pop
adc
mov
jnp
out
sbb
stos
pusha
hlt
or
push
pop
in
xchg
xor
pop
insl
mov
popf
insl
lock
lea
ds
push
leave
sbb
jae
lds
fcmovnu
js
jne
in
ret
fwait
cwtl
lea
addb
jae
lds
cmp
mov
dec
mov
ret
pop
mov
pop
out
lret
in
ret
in
arpl
test
mov
movsb
jle
mov
xchg
mov
jge
add
cwtl
flds
int
lds
pusha
gs
mov
shl
fstps
in
imul
mov
pop
imul
or
mov
jmp
jecxz
lahf
push
in
insl
dec
dec
outsb
xor
data16
xlat
cmpsl
pushf
adc
in
dec
dec
popf
or
call
jne
mov
dec
xchg
cmc
mov
xor
dec
xlat
dec
lods
sub
movsl
xlat
mov
mov
pusha
xor
inc
lahf
aam
fwait
xchg
push
xchg
or
pop
test
daa
sub
scas
adc
and
inc
scas
dec
out
add
xchg
jecxz
xor
aam
mov
mov
mov
ret
lods
pop
rorb
shll
subb
aam
mov
sub
inc
jmp
enter
and
shr
sub
xor
xchg
sub
insl
xor
sub
fs
ja
repz
xor
leave
pop
cmp
push
inc
sahf
xor
cmp
mov
aam
outsb
loop
dec
sub
add
fisubs
mov
into
mov
mov
cmc
fistl
xor
mov
movsl
adc
inc
stos
add
cmp
inc
out
fucom
inc
adc
xor
push
add
sbbb
cwtl
ss
push
jno
inc
ss
loop
insl
xor
aam
inc
push
dec
ss
out
int
xchg
ss
cwtl
adc
dec
inc
xor
test
dec
popa
fsubrp
adc
jns
cmc
add
dec
mov
in
add
fcmovne
xor
mov
outsb
xor
xor
jge
fistpll
xor
mov
inc
jbe
mov
js
xor
fimuls
movsb
sub
xchg
lret
pop
jl
inc
aam
movsb
xor
sbb
xchg
loop
adc
xor
xor
lods
push
int3
insl
xor
shll
cmp
push
out
mov
jp
xor
pusha
xor
out
jnp
xor
xchg
dec
push
mov
xor
inc
pop
sbb
insl
aam
orb
repnz
out
ret
test
fsubp
fwait
jno
cmc
or
adc
sbb
xchg
lods
push
dec
mov
lahf
movsl
shl
xchg
xchg
cwtl
test
mov
mov
xor
out
popf
clc
loopne
mov
arpl
sbb
mov
cmp
jg
sti
loope
fildl
aad
leave
insl
shll
fprem
pushf
loope
dec
sbbl
loopne
shl
gs
ffreep
imul
shrb
ja
ror
adc
iret
jmp
inc
mov
popl
popf
jg
fstpl
lahf
jmp
mov
mov
pop
or
rorl
mov
pop
mov
imul
fstpl
and
rorl
jmp
fsubl
lret
adc
sbb
jecxz
xor
and
and
out
jmp
sbb
inc
movsl
popf
sub
shl
mov
jecxz
pop
sub
repz
int
lret
fsubs
jecxz
sbb
ja
aad
arpl
adc
fisttps
mov
insl
cltd
outsl
jnp
xchg
push
mov
scas
sub
dec
mov
fbstp
xchg
pop
popa
imul
sub
mov
xor
mov
jmp
aaa
cmp
cmpsl
lahf
in
fwait
pop
xor
in
scas
fistpl
lahf
flds
dec
outsl
dec
je
and
mov
add
in
jmp
int
or
pushf
insb
mov
adc
push
mov
mov
push
cmp
shl
jecxz
xchg
outsl
lcall
cltd
fcmovne
xor
push
out
lahf
sbb
jle
sbb
or
xchg
mov
in
gs
dec
xchg
ljmp
mov
pop
cmpsb
pusha
pop
sahf
insl
dec
sbb
mov
inc
notl
sbb
lds
xor
push
pop
cmc
adc
mov
jmp
sbb
fwait
inc
add
or
pop
dec
stos
dec
cli
outsl
pop
or
cmp
adc
frstor
xchg
pusha
call
scas
pop
jg
mov
cmc
inc
mov
mov
jne
lds
push
sub
xlat
insb
lods
push
scas
popa
insb
xorl
dec
push
mov
dec
xchg
mov
int
mov
inc
mov
xor
push
cmpsl
cmpsl
sbb
fldenv
insb
andb
cltd
aas
and
xchg
out
sub
mov
in
cld
gs
iret
dec
xor
push
push
inc
pop
mov
mov
mov
mov
jge
xor
mov
iret
sub
pop
dec
jne
fsubrs
mov
sub
mov
adc
push
fdivs
pop
inc
xor
es
dec
jae
mov
outsb
xor
ds
rcrl
leave
movsl
jo
xchg
cmp
lds
rcll
mov
jne
mov
add
xchg
testl
mov
push
cmc
gs
insl
cmc
ret
int3
repz
test
popa
pop
sbb
cmc
fsts
movsl
je
add
mov
out
mov
jo
mov
popa
rorl
sbb
scas
lea
mov
ret
mov
addr16
cmc
popa
call
fnstcw
lock
jmp
jecxz
aas
orb
addr16
mov
out
notl
add
lret
mov
setge
mov
vsqrtsd
outsl
lahf
lea
lds
sti
int
mov
ret
pop
roll
mov
test
xchg
out
fisttps
cmc
inc
dec
test
adc
xchg
loope
leave
mov
mov
lret
addr16
jmp
fwait
sbb
xchg
fbld
aad
sbb
xor
aas
lret
arpl
adc
jbe
aad
mov
ja
outsl
out
not
pop
outsl
xchg
clc
mov
pop
lds
sub
lea
scas
aaa
ffreep
adcl
xor
xchg
mov
int
movsb
mov
adc
and
and
xchg
repz
mov
pop
push
xchg
gs
dec
cmp
imull
popf
xor
ret
dec
dec
add
xlat
leave
lea
mov
loopne
cwtl
sbb
jmp
cmp
in
pop
out
cmp
cmp
scas
pushf
xor
sbb
fstp
orl
xchg
xchg
push
ret
xor
lret
test
mov
add
insl
iret
ret
shl
movsb
mov
cmp
stos
pop
jg
xchg
and
imul
out
repz
jle
lock
ja
jmp
lea
cmp
aad
lds
sbb
xchg
mov
ret
lret
jmp
addr16
imul
repz
xchg
xchg
shr
adc
mov
sbb
outsl
imul
jmp
and
fldl
sbb
xor
ds
pop
mov
sar
mov
repnz
jmp
jecxz
out
mov
ja
popf
add
xchg
gs
ret
iret
add
movsl
mov
mov
or
int
jnp
fsubp
js
jl
in
ret
mov
hlt
or
sbb
dec
lahf
in
jnp
cmp
fstl
test
inc
cmp
packsswb
imul
xor
pop
pop
sub
test
sarl
scas
insl
jnp
cmc
loopne
mov
insl
dec
sbb
stos
sub
xor
add
test
stos
out
call
pop
in
and
pop
xlat
adc
xchg
pop
rcrl
aas
cmpsl
shl
lods
adc
cmp
aad
mov
mov
fists
lahf
stos
cmpsb
test
cwtl
cmp
cld
repz
int
mov
das
push
mov
lods
xchg
cwtl
pop
aad
mov
mov
jp
insl
out
adcl
ja
int
mov
inc
mov
addl
xchg
nop
popf
pop
in
mov
leave
add
jae
shlb
mov
scas
orb
sbbb
call
in
fwait
rcll
shll
dec
fmuls
xlat
xor
push
sub
loope
mull
arpl
pusha
in
add
gs
lret
in
les
adc
imul
arpl
lea
addl
out
sahf
cltd
icebp
mov
cmpsl
repnz
pop
push
adc
jne
sbb
insl
faddp
icebp
outsl
add
loope
mul
cli
or
push
jmp
sbb
addr16
sti
xchg
adc
aad
shll
pop
pop
xchg
ljmp
js
push
repz
sbb
in
mov
lods
cltd
cli
adc
cld
lods
adc
fldt
incl
imul
outsl
test
ret
jmp
lret
cwtl
xor
aad
mov
xchg
fnstcw
stos
ja
xchg
fildll
shll
pop
jb
aam
add
in
pop
lahf
xor
cwtl
xor
xchg
lock
fwait
inc
ja
in
in
mov
mov
fists
imul
stos
in
mov
sbb
mov
arpl
lret
pop
jecxz
mov
jo
not
subl
xchg
shl
jg
lods
repz
lahf
ffreep
xor
imul
mov
stos
imul
rep
adc
cmpsl
cmc
cvtps2pd
mov
xor
in
loopne
sub
ror
imul
mov
arpl
test
adc
call
es
movl
mov
adc
ret
rorb
jns
jmp
dec
leave
int
pop
out
std
subl
and
push
test
test
inc
js
pop
pop
out
mov
pop
lahf
int
pop
mov
insl
subl
add
out
mov
scas
test
xchg
rorl
inc
and
cwtl
adc
in
rcll
fcompl
out
push
jge
andb
in
lock
scas
aad
mov
cwtl
arpl
mov
popf
mov
in
push
pop
leave
in
inc
xchg
clc
or
out
arpl
addb
xchg
cli
scas
mov
xor
inc
mov
sarl
push
fnsave
push
jmp
push
cld
add
fsqrt
pop
cld
push
popa
ja
enter
lea
dec
bound
mov
sbb
xchg
pop
fisubl
lea
add
out
mov
test
movsl
xor
sbb
insl
cmp
andl
fwait
loope
add
repnz
cmp
filds
add
shrl
test
or
mov
out
sti
fsubr
popa
outsl
sbb
in
mov
popf
fldl2t
xorl
pusha
mov
outsl
mov
jmp
xchg
pop
lret
fadds
in
mov
xlat
fldenv
fwait
aad
pop
push
sub
xchg
subl
cltd
xorl
loopne
dec
mov
in
sub
xchg
imul
popa
xchg
jmp
cmpsl
lods
insl
sub
imul
mov
scas
push
andl
sub
mov
fincstp
addb
scas
out
sbb
std
outsl
dec
gs
pop
lahf
jmp
imul
incb
inc
cmp
cmp
and
cltd
add
movsl
jecxz
xchg
stos
fldl
fistps
out
sub
pop
lahf
mov
lea
arpl
pop
and
dec
or
jns
in
cmp
mov
sti
out
sti
jg
arpl
jecxz
lahf
inc
xchg
mov
popa
insl
int
xor
or
test
sti
imul
adc
fwait
lahf
out
inc
jecxz
in
mov
xor
insl
and
fldcw
xchg
lea
jge
rcrl
ja
cmp
and
cmpsl
aad
or
scas
orl
cwtl
xlat
stos
outsl
js
dec
xchg
mov
mov
sub
jl
cmp
repz
subl
call
mov
mov
xorl
stc
leave
cmpsb
aaa
aam
jmp
lret
arpl
cmpsl
insl
jb
add
mov
jle
jae
xchg
pop
stc
pushf
iret
aad
fisttpll
sub
imul
sub
push
sub
xchg
imul
dec
xor
mov
rol
lods
fsubrs
ror
iret
mov
adcl
xchg
lds
sbb
lds
sbb
aam
mov
xchg
iret
notl
sbb
insl
or
shrb
xchg
cmpsl
jo
jne
dec
imul
mov
ret
mov
mov
cld
push
lods
test
aas
loop
negl
sbb
cmp
lcall
jbe
out
sub
mov
or
sarl
in
fistpll
test
mov
filds
xchg
test
out
gs
xchg
adcl
push
in
fwait
pop
lds
popa
mov
mov
cld
jb
mov
jbe
ret
fisttps
adc
xor
sub
lret
dec
ss
fwait
mov
subl
movsb
jne
in
xor
pop
or
cltd
inc
mov
push
into
out
and
add
imul
insl
movsl
mov
aad
shr
sbbl
cmpb
mov
dec
in
inc
lods
ret
mov
in
sbb
and
jns
roll
pop
push
pop
push
js
ljmp
push
cld
sbb
fwait
int
or
hlt
in
xor
imul
loope
mov
sbb
or
insl
mov
outsl
out
pop
mov
and
add
cwtl
int3
cmp
inc
cmpsl
mov
nop
sub
push
loopne
leave
ret
gs
cmp
sub
pop
add
out
xchg
hlt
in
pop
xchg
mov
sbb
xchg
ficoms
mov
push
adc
inc
fmulp
ds
test
out
adcl
imul
les
push
pop
scas
dec
cwtl
xchg
enter
scas
xchg
mov
out
push
fisttpl
lds
out
test
ror
jp
loopne
xchg
fnstcw
popa
or
jecxz
adc
lods
ja
lods
jnp
dec
stos
jne
fwait
or
fcmovnbe
lock
mov
das
mov
test
int
repz
cmpb
cmp
addr16
imul
test
out
popf
push
ljmp
xchg
jmp
push
imul
jmp
sbbl
dec
out
loopne
jecxz
cmpsl
lds
mulb
cmp
sbb
movsb
repz
lret
fwait
aaa
pop
mov
in
imul
lret
xor
fistl
xor
push
jmp
ret
and
lret
ss
gs
cmp
and
pop
xchg
mov
stc
inc
lret
xchg
test
cwtl
pusha
insl
push
cltd
pop
jg,pt
gs
mov
sbb
arpl
int
mov
popa
xor
push
add
jp
push
mov
xchg
and
xor
ret
test
dec
lret
outsb
adc
sbb
or
lea
test
movsb
std
les
push
push
out
pop
mov
ret
imul
lea
or
mov
mov
lea
fst
jmp
and
iret
cmp
sub
push
pop
aad
outsb
push
rcrb
jmp
sbb
test
arpl
add
cwtl
mov
aad
xor
pushl
push
or
dec
shrl
and
sub
jo
cwtl
fwait
push
mov
pop
imull
xchg
jmp
cmpsl
rorb
lods
in
pop
cmc
or
cmpsl
lahf
mov
roll
mov
jb
sub
aas
in
fstpt
shr
mov
lock
aam
xchg
test
cmc
das
test
dec
data16
add
adc
fwait
jmp
cmc
xchg
imul
jmp
stc
xchg
addr16
movsl
loope
js
sbb
or
ja
or
lea
inc
cmp
cmp
add
out
pop
cld
push
mov
sbb
mov
jns
xchg
int3
pop
mov
dec
mov
jmp
pushf
stos
mull
sbb
or
in
xchg
popf
sbb
sarl
jle
adc
pop
test
xlat
ja
lahf
lods
imul
aad
test
repz
stc
cmpsl
pop
sub
sbb
cmp
or
mov
test
xor
mov
out
fsts
sbb
in
jecxz
pop
xchg
aad
cltd
popf
jecxz
add
adcl
lret
adc
mov
in
sbb
cmp
jge
add
arpl
divl
popa
je
xchg
arpl
fistpll
and
out
xchg
repz
mov
shr
sbb
jne
or
loope
cmpsl
sub
pop
fidivrl
clc
shr
out
dec
ds
jnp
fldl
in
loope
out
pop
mov
sbb
lods
imul
lret
jg
sub
pusha
push
mov
int
std
pop
mov
aad
test
cmp
fistl
or
jmp
push
or
arpl
cmpsl
push
inc
out
xchg
dec
test
push
lret
add
test
andl
popf
ret
lret
cmp
sub
sbb
leave
sbbl
jecxz
rcll
out
mov
mov
sti
mov
out
add
testl
ret
and
fmull
mov
ret
cmc
stc
fldenv
sub
xor
mov
call
outsl
mov
cwtl
daa
cwtl
lds
repz
sub
mov
adc
jl
add
ljmp
fimuls
push
ret
outsl
aad
cmp
adc
or
sub
sarl
xlat
fisttpll
dec
bound
gs
insl
aaa
sbb
rorl
fdivr
push
daa
aaa
andl
fldl
int
les
sti
pop
or
gs
jmp
sub
cwtl
adc
ds
lds
mov
je
cld
push
inc
adc
inc
in
jne
add
stos
inc
scas
mov
and
pop
sub
push
ret
add
mov
das
sub
int
in
ja
stos
fwait
mov
dec
fwait
or
enter
xchg
fs
es
outsl
stos
jns
jne
lea
lcall
sahf
cwtl
les
test
test
lods
push
xlat
jmp
dec
stos
or
fbld
push
loopne
negl
ja
jo
inc
addr16
lahf
sbb
xor
inc
pop
xchg
mov
in
push
lods
and
cmpsl
adc
inc
fucomi
push
ja
cmp
or
jmp
push
cltd
daa
push
pop
in
call
scas
movsl
cli
sbb
arpl
fidivl
scas
xchg
mov
gs
shll
sbb
cmpsl
sbb
push
xor
mov
pop
clc
adc
xchg
call
aas
int
addr16
into
cmp
js
das
jne
xchg
rolb
loope
mov
mov
outsl
jmp
in
stc
stos
lcall
mov
popf
loope
cmp
les
aas
xor
out
fsubr
ret
sbbb
divl
xlat
cwtl
sbb
cmp
mov
jle
xor
aad
inc
lret
icebp
inc
cvtdq2ps
mov
lahf
roll
mov
sar
xor
ffreep
adc
fnsave
jmp
and
jmp
fcomi
seta
cmp
das
jmp
popa
outsl
mov
sub
insl
cld
jg
cmpsl
iret
mov
lock
arpl
and
hlt
mov
out
lock
mov
fldcw
mov
lea
fbstp
xchg
xor
jns
cld
add
fwait
iret
rorb
sbb
pop
jmp
sbb
js
mov
call
jne
int
mov
inc
jb
inc
aad
lahf
leave
and
mov
cltd
xchg
popa
gs
test
movsl
mov
mov
inc
sti
rorl
jne
in
iret
push
jecxz
or
iret
xchg
gs
mov
and
xchg
cmp
cmpsl
test
aad
ds
call
jecxz
iret
out
enter
lret
mov
shl
scas
mov
mov
fwait
int
arpl
jne
shll
addl
repnz
mov
and
clc
repz
icebp
jne
scas
ss
cwtl
or
rol
mov
je
out
dec
int
mov
jne
loope
test
push
jae
jp
in
outsl
test
lahf
aad
mov
insl
ja
mov
js
cli
xor
xchg
test
sbb
jnp
mov
cmp
arpl
ja
inc
fwait
gs
jg
xlat
int
pop
and
loope
int
fdivl
out
jo
xor
mov
repnz
pop
lahf
aam
iret
in
cs
rcl
cwtl
ret
data16
cltd
stc
iret
mov
and
addr16
lods
into
xor
les
cld
or
xor
jnp
loope
or
gs
hlt
data16
mul
notl
repz
inc
xchg
add
jecxz
cmp
imull
loope
mov
dec
mov
out
repz
mov
push
in
jne
cltd
popf
rorl
pusha
js
xchg
out
in
xor
cmp
js
fdiv
jne
in
push
push
in
xchg
popa
pusha
cmpl
xlat
gs
push
das
scas
iret
or
call
hlt
mov
cmp
rorb
in
jmp
dec
fwait
popa
scas
adc
cltd
sbb
rcr
adc
cmc
aad
out
rcrb
imul
addr16
lahf
mov
loope
lods
rcrb
aas
push
pop
mov
neg
rorl
fidivl
popa
sub
shr
mov
inc
les
cmc
arpl
xchg
dec
cltd
sti
cwtl
pop
jp
int3
push
leave
push
dec
ja
gs
xchg
scas
xchg
dec
iret
arpl
lahf
jl
xchg
popl
inc
mov
pop
addr16
sub
stos
lcall
fcmovne
orl
test
mov
or
popf
push
cltd
hlt
push
add
mov
xchg
insl
stc
add
iret
jmp
gs
jge
xchg
push
ficoms
imul
jle
and
push
add
bound
cmc
mov
sbb
loop
xor
rorb
lcall
mov
lahf
jle
imul
fstpl
mov
or
arpl
xchg
test
mov
fildll
xchg
hlt
sub
aaa
push
imull
push
cmpsw
xchg
fistpll
xchg
mov
fisttps
lahf
add
dec
sbb
popa
or
dec
lds
cmp
int
ja
xchg
push
shrl
and
and
adc
adc
sub
push
mov
incl
movsb
lods
push
sbb
addr16
ds
jae
mov
stos
fldenv
ja
push
cmp
ret
scas
out
sub
lret
stos
jg
aad
cli
sbb
jecxz
jecxz
imul
dec
xchg
xchg
adc
pop
popf
iret
popf
jmp
pop
rcll
repnz
fsubrl
shll
fwait
xor
lods
mov
lea
fcmovne
das
cwtl
and
inc
test
mov
jp
inc
jne
jecxz
in
popa
jge
scas
scas
fsubs
fwait
shll
sti
xchg
cmpsb
insl
decl
subl
shll
imul
xchg
or
scas
clc
xchg
xlat
shl
fmul
jmp
cltd
pop
jo
xchg
cli
clc
cwtl
fwait
inc
mov
call
mov
icebp
clc
mov
outsl
xchg
ja
dec
popf
jo
out
cmp
xorl
dec
loope
mov
xchg
notl
insb
test
mov
repnz
adc
jp
add
cmpsl
pusha
test
scas
lahf
popf
sbb
mov
pop
mov
xchg
shrl
out
xlat
fsubr
sbbl
mov
into
and
or
divb
lods
cli
cmc
pop
and
cmp
in
push
inc
jno
mov
out
fsubrp
and
sti
lea
and
imul
movsb
mov
push
jbe
pop
xlat
xor
xchg
lods
movsl
pop
popl
xchg
push
mov
adc
cmc
jmp
xchg
es
jae
gs
cmc
cs
dec
mov
jle
dec
add
adc
inc
mov
test
xchg
xchg
fsts
lret
popa
adc
xchg
into
mov
add
cmc
mov
pop
cmpsl
repnz
sub
in
cwtl
push
or
addr16
jne
fwait
cmpsl
aaa
imul
xchg
pop
mov
repnz
xchg
movsb
rcll
test
xchg
test
mov
mov
adc
sbb
pop
movsb
xor
mov
dec
cltd
and
setb
imull
fwait
push
add
cltd
ja
test
fiadds
sbb
jns
and
pop
popa
in
shrl
jecxz
lahf
lds
leave
mov
mov
fbstp
arpl
fwait
aad
out
out
insl
out
or
imull
stos
add
out
outsb
imul
xchg
popf
ficoml
sub
rcrl
pop
aad
out
outsl
xchg
lret
push
mov
push
inc
and
cmc
lahf
mov
dec
cmc
popf
out
stos
faddl
adc
add
fildl
jmp
loope
xlat
lds
gs
in
aas
mov
ret
inc
and
mov
in
pop
test
cli
arpl
inc
test
lret
outsl
mov
cmpsb
movsl
gs
sub
mov
or
mov
jne
iret
lret
ret
lahf
sahf
rep
inc
popf
jp
frstor
adc
xchg
aad
sub
lds
mulb
jmp
mov
mov
insb
call
test
xlat
cs
popa
enter
mov
cwtl
inc
sub
stos
sub
mov
test
addb
in
push
mov
idivl
xchg
gs
jno
mov
mov
in
icebp
arpl
stos
mov
lea
repz
xor
aad
mov
ds
int3
mov
repz
cmp
xor
jnp
sbb
xorb
popf
jmp
pop
xchg
xor
xchg
pop
addl
pop
jmp
test
jo
xlat
sbb
ret
mov
push
stos
fimull
fdivl
arpl
sbb
cmp
lods
in
push
mov
dec
mov
jne
inc
aam
fxtract
sub
sub
jmp
cmp
push
repz
ljmp
sbb
loopne
xchg
jne
pop
scas
lret
shll
mov
cmpsl
loope
in
or
push
rcrl
inc
push
test
inc
and
push
cmc
jne
mov
jmp
add
mov
imul
out
pop
dec
cmp
adc
xor
cmp
inc
cmc
lret
outsl
aam
movsl
inc
sbb
push
push
or
pusha
push
in
lahf
jecxz
inc
xor
cmp
xchg
sbb
xchg
mov
out
scas
ret
into
xor
xchg
div
outsl
incb
xchg
pusha
out
add
imul
and
punpckldq
popa
cmp
lea
iret
add
test
xchg
aad
mov
jne
iret
xor
test
ficoml
cmc
or
imul
push
cltd
fistl
inc
nop
xor
xchg
pusha
mov
inc
and
loope
push
mov
adc
test
xchg
jmp
and
rorl
enter
and
iret
test
lods
jmp
sub
mov
dec
insl
lret
pusha
xchg
scas
call
repz
popa
cmpsl
sub
out
ret
mov
jne
lea
stc
or
sar
clc
xor
add
push
and
insl
cmpsl
push
mov
mov
and
out
adc
das
hlt
xchg
and
or
sar
lods
jne
jae
js
in
ret
stc
rclb
pusha
adc
xor
cltd
mov
push
mov
icebp
outsb
xor
lahf
and
arpl
inc
iret
mov
inc
xchg
adc
push
in
jo
xor
xchg
cwtl
inc
cmp
xor
lods
mov
jg
popf
repz
and
mov
in
xchg
subb
out
mov
nop
pop
push
sbb
sahf
xlat
lods
cwtl
lret
imul
stos
pop
mov
xlat
xchg
ret
rolb
mov
fwait
arpl
xchg
jmp
ja
mov
sub
jecxz
and
mov
aas
lea
fistl
cmpsb
stos
aad
lods
push
xor
popf
lock
ds
sbb
xchg
mov
sahf
or
popaw
insl
fistl
incb
cmc
ret
and
subl
jle
dec
popf
lods
or
xchg
inc
mov
cwtl
in
movsl
outsl
dec
nop
stos
jne
mov
and
insl
jno
js
fdivs
fsubrs
in
add
test
fs
mov
xchg
mov
das
insl
mov
pop
aad
scas
mov
int
mov
lret
jne
icebp
add
xchg
push
stc
push
jne
mov
fnsave
imul
mov
pop
jecxz
cli
repz
sbb
repz
xor
mov
ss
int
mov
inc
jmp
fdivs
imul
inc
xor
push
js
xor
imul
inc
fstp
xor
lods
inc
jae
xlat
xor
neg
sbb
cmpsb
xor
mov
jmp
scas
je
mov
popf
or
mov
and
dec
and
shll
mov
cmp
js
shrl
lock
mov
xor
push
add
in
fcompl
mov
jmp
sub
pop
adcl
pop
ja
lea
jle
js
xor
pop
loopne
outsl
outsl
xor
xor
test
cmp
sub
jb
mov
jecxz
pop
jmp
shll
mov
rorl
push
xchg
leave
loopne
scas
lock
mov
push
mov
insl
test
imul
stos
getsec
jmp
std
movsl
test
mov
aaa
jno
xchg
mov
call
outsl
cmp
mov
sti
mov
stos
orb
nop
pop
xchg
inc
scas
inc
mov
loop
shr
dec
loop
out
and
mov
xor
adc
shld
mov
shrl
das
arpl
out
test
jne
loope
cmp
lahf
push
and
clc
xchg
test
movsl
repz
lahf
lahf
ret
jnp
cwtl
mov
test
rcr
daa
xchg
pushl
xchg
or
jecxz
jl
enter
shr
xchg
ret
test
ret
xor
sub
xchg
cmc
lds
dec
adc
jmp
dec
xchg
lret
fcom
lds
dec
enter
mov
loope
cwtl
jge
xchg
cmp
shrl
xchg
cltd
stc
leave
iret
out
jmp
lret
lds
lret
jecxz
cmp
xorl
popa
out
test
out
dec
inc
scas
nop
xchg
gs
cmp
sub
movaps
mov
jge,pt
test
cmc
rorl
mov
call
and
inc
and
mov
mov
out
cltd
xorl
int
push
mov
divl
mov
popa
test
arpl
push
or
outsl
aad
or
gs
add
pop
jo
or
ja
out
aad
push
sbb
out
or
cmpsl
adcl
dec
inc
mov
mov
ja
mov
out
aad
sbb
out
jb
dec
in
mov
ljmp
sarb
lea
cwtl
mov
iret
sub
sbb
aad
dec
mov
mov
out
cs
test
ret
jne
daa
mov
movsl
cltd
jle
outsb
mov
cli
dec
cmc
cmpl
jecxz
loope
pop
mov
mov
shll
rcll
rolb
cmpl
addr16
xchg
fwait
add
insl
jecxz
xchg
jo
in
sbb
iret
lods
and
stos
neg
sbbb
repz
imul
inc
aad
pop
dec
adc
mov
inc
and
stos
xchg
cli
inc
andb
movsb
movsb
mov
repz
lods
dec
dec
mov
inc
into
lret
ljmp
push
rcrb
cltd
int
in
ret
sbb
xchg
lret
leave
mull
gs
sbb
shr
cmp
out
fwait
sub
hlt
mov
dec
xor
lcall
pop
out
aas
repz
in
mov
jmp
in
ret
and
adcl
cmp
out
sub
pop
cmc
jno
arpl
xor
ret
xchg
ja
in
add
mov
movsl
pop
or
mov
fwait
imul
les
mov
mov
fucomp
ret
mov
jo
ficompl
rorl
push
repz
sub
sub
pop
cwtl
mov
int
popf
add
not
addr16
add
shl
repnz
aaa
mov
xor
mov
movsb
and
jne
sub
add
fwait
inc
xlat
xchg
lahf
xchg
adc
fildl
jmp
mov
sbb
repnz
repz
cmc
mov
jl
cld
mov
xlat
ds
xchg
jmp
mov
pop
lahf
rol
or
stos
xor
pop
sub
xchg
pop
cmc
jecxz
arpl
in
sub
fcomps
or
aad
aam
fwait
jecxz
cmpsl
jl
mov
loope
mov
lret
scas
lea
add
jmp
adc
pop
icebp
and
cmp
movsl
outsl
imul
stos
adcl
and
jmp
jo
adc
mov
in
fldenv
or
outsl
xchg
mov
in
fnstenv
clc
imul
sbb
and
mov
pop
mov
xchg
aad
in
in
inc
sbb
orl
cmpsl
cli
pop
mov
cwtl
out
loope
ret
fwait
dec
pop
xchg
cmp
leave
mov
inc
lea
sbb
cwtl
scas
imull
filds
mov
add
lahf
rol
leave
xor
out
mov
test
loope
loope
push
cltd
jne
or
mov
mov
or
out
arpl
push
sbb
movsl
vsubpd
ret
mov
dec
mov
sbb
fcmovnb
cmp
ja
shl
test
push
out
xchg
mov
mov
mov
push
out
adc
fst
outsb
and
mov
add
rol
mov
test
aas
xchg
out
fldcw
xchg
cmc
aam
out
lcall
lods
movsl
addl
ds
jns
daa
mov
mov
pop
outsl
in
xchg
ja
mov
jecxz
int3
faddl
sub
shr
push
in
arpl
movl
aam
and
mov
aad
push
adc
out
add
vpand
mov
call
jmp
push
and
cmp
fwait
popf
test
outsl
mov
dec
sbb
cmpsb
push
sbb
cwtl
inc
cmpsl
in
mov
lods
add
out
cmpl
fisubl
leave
add
test
mov
fbstp
stos
fwait
cltd
aad
fidivl
in
repz
mov
mov
jg
sarl
sub
or
push
ret
xchg
xchg
ss
call
fcomps
inc
idiv
jb
cltd
adc
in
ret
mov
xchg
mov
ds
fmul
push
jne
fs
jecxz
test
outsl
out
inc
andl
mov
mov
lea
or
jne
inc
jl
lds
mov
cmpsl
notl
inc
mov
iret
mov
mov
dec
mov
xor
test
mov
mov
push
popa
xchg
pop
sub
movsl
lahf
mov
popf
iret
xchg
mov
jecxz
xor
sub
aad
adc
int
out
in
jae
xchg
or
cmp
mov
ror
cmc
test
cwtl
dec
int
pop
mov
jne
ja
test
fwait
pop
add
daa
adc
jne
roll
dec
sub
inc
lret
aad
repz
pop
pop
adc
arpl
leave
ret
and
out
stos
jnp
and
int
lods
add
in
pop
jns
out
lds
aas
pop
inc
cli
js
scas
jmp
mov
movsl
pop
loopne
xchg
cmpl
xchg
fildll
xor
insl
mov
dec
add
jecxz
stos
mov
maskmovq
imull
adc
ja
imul
addr16
mov
xchg
iret
decl
dec
inc
push
mov
adc
mov
aam
movsb
lret
test
ret
adc
bound
cltd
xchg
ret
outsl
cmc
xchg
jecxz
test
jbe
jecxz
cmp
outsl
jne
push
add
leave
ret
outsb
pop
negl
xor
jmp
xchg
out
out
mov
sub
jge
cmp
and
cmpsl
jne
insl
xlat
insl
lods
ja
sbb
xchg
call
iret
addr16
stos
mov
push
push
or
cs
js
rep
clc
add
mov
bound
pushf
enter
out
or
fwait
insl
or
lea
les
jl
fdiv
into
jne
in
xchg
cmpsl
mov
or
mov
lods
leave
pop
sbb
and
jmp
jl
out
mov
imul
lods
add
lea
clc
and
mov
aad
in
outsl
aaa
leave
xchg
ds
mov
jmp
pop
ljmp
and
rclb
out
aaa
adc
adc
cmc
and
nop
xchg
lea
cmp
in
jmp
cmp
pop
cmpsl
outsl
xlat
push
iret
int
xchg
pop
jne
add
mov
add
fnstcw
sub
cmp
mov
enter
jl
cltd
or
ljmp
dec
mov
sbbb
out
call
jge
popf
das
jne
inc
or
sub
cmc
rorb
inc
fwait
lret
in
shll
testb
pop
cmp
iret
inc
adc
out
mov
lods
sbb
add
add
rcl
scas
xlat
sub
mov
lea
or
orl
lea
fsubr
outsb
sbb
pop
cmc
ja
sub
sub
jmp
popf
fwait
ret
push
mov
xchg
imul
or
rcrl
add
in
dec
jne
xlat
xchg
popa
push
dec
aad
xchg
daa
shrl
sub
jmp
popf
lock
adc
lds
fwait
lcall
outsl
jno
dec
int
clc
mov
xchg
dec
test
arpl
ss
fwait
mov
adc
dec
pop
mov
xchg
push
cmpsl
aad
jne
loopne
lods
or
lret
mov
lds
mov
insb
lea
popa
mov
xchg
cwtl
roll
in
or
shl
aam
xorl
sbb
pop
sub
fstl
pop
gs
lds
add
xchg
pop
mov
inc
pop
xchg
pop
cwtl
movsl
repz
daa
int3
stos
cmpsl
leave
mov
fwait
rcll
mov
xchg
push
movzwl
cmp
aad
decb
xchg
repz
jmp
loope
inc
pop
inc
mov
cmp
test
jno
jl
gs
gs
ret
sub
sub
sbb
test
mov
in
cmpsb
dec
out
dec
repz
cmc
in
rcl
or
jecxz
rcl
idivl
cmc
jno
and
in
push
inc
or
xchg
mov
leave
xchg
adc
gs
jno
mov
into
arpl
test
shr
fnstenv
lret
dec
sub
adc
xchg
in
stc
pop
cli
push
jmp
jle
xor
fcmovnb
outsl
pop
sbb
std
roll
fwait
add
cmp
test
jne
cmc
adc
fisttpl
cmpsl
jbe
sbb
xchg
notl
aaa
sub
cwtl
cmpsl
inc
inc
cmp
movsl
popa
mov
add
in
aad
shl
mov
lods
push
and
or
sbb
push
inc
sub
das
xchg
push
lahf
sbb
jle
imul
cmpsl
out
lahf
xchg
jecxz
xchg
cli
inc
js
stos
iret
xorb
fucomi
int
mov
mov
aad
rol
dec
test
test
adc
ret
lahf
fildl
xchg
jecxz
dec
test
jmp
imul
inc
mov
xchg
mov
stos
imul
in
jmp
call
test
stos
popa
jmp
imul
jmp
fadds
xchg
imul
dec
jl
xor
sub
dec
cltd
pop
adc
and
pop
and
call
imul
cwtl
and
jmp
fcompp
hlt
mov
insl
loope
push
mov
cmp
sbb
ret
or
loop
gs
pop
insl
push
psubsb
lea
or
jne
rcll
cs
lods
inc
movsb
cmp
stos
aad
loopne
pop
mov
mov
jno
out
jecxz
sbb
enter
js
popf
in
out
and
mov
sub
sub
in
sbb
test
sarl
gs
cmpsl
les
add
push
push
aad
xchg
rorl
cmpsl
xor
shlb
push
fsubrp
sti
lahf
adc
scas
popf
dec
cmp
sub
fwait
aad
aas
rclb
cmp
add
sub
mov
int
inc
popa
pop
mov
dec
aad
cwtl
std
rcrl
and
rorl
repz
fistl
push
out
xor
mov
negl
ret
dec
sub
jp
and
subl
lock
sbbl
lock
imul
cs
dec
clc
dec
imul
divl
repnz
jo
adc
out
cltd
adc
sbb
sti
dec
subl
lds
cmpsl
adc
in
movsl
adc
repz
cmpsl
sub
jns
fistl
cmp
push
repnz
dec
or
and
xor
fiaddl
stos
adc
mov
sbb
fst
xor
cwtl
add
lds
adc
xor
test
or
testl
and
sub
hlt
ret
sub
in
imul
inc
mull
mov
mov
adc
xor
jmp
clc
mov
xlat
jne
mov
adc
lea
push
and
cli
push
sbb
mov
out
addb
cwtl
fsts
mov
jp
std
sub
jmp
call
outsl
shrl
filds
sti
lahf
inc
cli
and
jl
stos
or
mov
add
lret
lods
loope
jo
lds
sahf
cmpsl
mov
notl
or
test
imul
mov
xlat
imul
sub
cltd
sub
dec
mov
rcrb
adc
mov
xchg
cmc
lds
xchg
addr16
lds
outsl
pop
negl
loopne
imul
pop
out
stc
repnz
mov
fmuls
xlat
imul
stos
arpl
mov
cmp
aaa
push
xor
inc
xchg
jge
mov
cwtl
fisubrs
mov
pop
lea
xor
push
jge
cmp
ret
scas
add
lahf
addr16
insl
xchg
jmp
out
xchg
je
xchg
jnp
dec
movsl
jp
dec
popa
mov
jbe
lcall
mov
xchg
int3
std
mov
xchg
call
popa
out
xchg
imul
mov
xchg
mov
pop
sub
test
ss
aas
popa
inc
ret
rcrl
movsb
inc
mov
mov
fisubrs
lret
sub
mov
popf
arpl
out
cwtl
cltd
push
xchg
xchg
ja
bound
add
lods
loop
mov
mov
mov
mov
jne
cmc
push
lods
shr
and
push
cltd
shll
fldenv
movsl
sets
gs
bound
mov
test
pop
popf
insl
arpl
out
cmpl
daa
fstpl
dec
shll
lahf
out
adc
out
call
pop
pop
test
rolb
push
jmp
mov
sti
out
loope
xchg
mov
and
aam
mov
sarl
jg
jo
sbb
xor
jecxz
popa
repz
add
test
xor
mov
loopne
xor
cmp
cwtl
cmpsl
pop
xchg
and
pushf
xchg
mov
lods
jecxz
jmp
pop
movsl
dec
add
in
sbbb
xchg
les
xor
mov
ljmp
push
lahf
scas
or
adcl
sub
stos
cmp
icebp
and
mov
repnz
sub
int
mov
inc
xchg
int
mov
jb
ret
repz
push
popl
out
repz
cld
inc
roll
sbb
cmpsl
mov
repz
js
mov
sub
dec
xor
cmp
in
lods
mov
test
add
shl
xchg
vpsubusb
adc
in
mov
fidivrl
addr16
cmc
or
jp
incl
jge
out
add
popf
mov
jle
test
mov
div
jmp
cmp
mov
mov
adc
xchg
xchg
or
add
jne
dec
in
push
mov
notl
subl
jge
cmc
aas
shl
in
in
jne
cmc
mov
sub
xor
mov
fldcw
scas
or
sub
ja
mov
mov
jns
stos
dec
outsb
psraw
ja
cmp
dec
mov
rcll
mov
stos
test
dec
imul
lcall
mov
pop
scas
jecxz
adc
in
popa
in
dec
mov
fstpt
mov
mov
push
ja
jb
sbb
xchg
imul
mov
hlt
fbstp
push
cmp
pop
pop
xchg
xlat
jecxz
mov
fisubrs
fucomi
add
lds
ret
or
or
addb
xchg
cmpsl
dec
add
scas
out
jecxz
inc
fcoms
jl
gs
data16
repz
adc
sahf
add
out
inc
mov
movsl
lahf
xor
loope
arpl
imul
inc
movsl
fisttps
fwait
xchg
repz
insl
cmp
xchg
jecxz
mov
icebp
mov
cwtl
inc
sbb
lfs
xchg
cmpsl
rolb
mov
push
scas
add
lods
pop
mov
addr16
jmp
out
xchg
popa
jne
iret
mov
cmp
frstor
jno
mov
lods
jg
out
iret
cmc
xor
aas
cmp
pop
mov
fcomp
in
xchg
and
sahf
lods
cli
lds
sub
in
sub
setbe
adc
test
incb
pop
lea
call
xor
push
push
and
push
inc
xor
xorb
arpl
test
dec
out
sahf
xlat
fcmovnbe
hlt
pop
mov
pop
dec
out
in
sub
lret
mov
xchg
mov
in
loop
insl
xor
inc
pop
test
andl
fistpll
in
outsl
jge
push
mov
adc
out
ljmp
dec
xchg
imul
pop
loopne
iret
enter
ja
stos
jns
mov
dec
mov
mov
cwtl
scas
push
arpl
in
popa
jmp
xlat
frndint
clc
test
popa
lds
jnp
sub
pusha
loopne
out
jae
fisttpll
lds
repz
aam
insl
jns
testl
rorl
fwait
ja
or
addr16
lds
insl
sarl
xor
js
int
ret
arpl
mov
cmpsl
mov
in
mov
add
cwtl
fst
movl
sbb
testl
lds
mov
xchg
xchg
out
xlat
xchg
lea
cwtl
dec
roll
or
fnsave
mov
mov
xchg
mov
dec
je
dec
int
hlt
stos
mov
test
fildl
or
loope
mov
movsb
xchg
out
xorb
fwait
jp
mov
jmp
xchg
iret
xchg
int
add
stos
adc
outsl
popa
mov
out
mov
test
cmc
idiv
in
pop
mov
stos
and
mov
pop
cmp
lret
mov
outsl
sbbb
sub
mov
out
addr16
test
cmpl
add
jecxz
lret
aad
movsl
jno
mov
or
mov
cwtl
sbb
adc
add
popa
ret
lods
adc
imul
and
ret
ljmp
cmp
pop
rorb
idivl
fisubl
mov
test
outsl
mov
imul
subl
in
into
xor
cmp
aaa
gs
stos
fldenv
int
or
cmpsl
fbld
outsl
jecxz
fdivl
lret
aad
bndstx
inc
incl
mov
sbb
xchg
lods
iret
mov
xchg
in
loope
div
aam
xchg
mov
lret
push
jno
loope
push
lcall
in
lods
cltd
cmpsl
divb
shll
push
jmp
xchg
lahf
mov
imul
mov
or
add
mov
sbb
jmp
fldt
pop
cmp
jne
repnz
outsl
xor
mov
mov
cmp
mov
fistl
push
outsb
xor
cwtl
xchg
popa
push
cmp
sbb
imul
imul
push
or
add
in
jae
repz
insl
jecxz
mov
jl
cmp
xchg
mov
push
xchg
scas
xchg
fucomp
mov
aam
or
and
in
in
lahf
jae
jne
in
mov
push
mov
mov
movsl
std
mov
cmp
in
cltd
repz
pop
cmpsl
cs
and
cltd
or
push
jno
testl
dec
pop
mov
sub
cmc
imul
popa
cmp
xchg
sub
add
hlt
push
dec
jecxz
jecxz
test
stc
cwtl
push
leave
fwait
lds
cmp
push
outsl
ret
arpl
xchg
xchg
das
mov
and
jge
lret
fs
or
lods
pop
mov
and
setl
fadd
faddl
cmp
mov
movsl
mov
cmp
aad
and
dec
imul
fucom
ja
jmp
push
shlb
sti
xchg
rcll
jns
xor
out
aam
test
std
movsl
jp
adc
fldl2t
in
je
push
pop
mov
and
xchg
aad
add
popa
ja
xchg
ja
cmp
sbb
je
adc
inc
out
inc
sbb
jg
lret
cltd
xchg
xchg
xchg
test
in
mov
sahf
fnsave
scas
xchg
outsl
fists
add
lds
sbb
stos
cltd
rorl
pop
mov
rorl
mov
subl
mull
aad
shrl
ja
fwait
out
mov
lret
leave
sub
arpl
jle
sub
shrb
das
xlat
cwtl
aad
sti
xchg
leave
std
jg
dec
rcrl
lret
lods
jnp
rcrl
cltd
mov
cmp
jns
sub
ja
or
test
inc
popa
jmp
sbb
ret
pop
cltd
jmp
xor
test
fwait
cmc
dec
fwait
mov
jnp
lretw
aaa
fldt
pop
mov
das
inc
sbb
cld
add
outsl
out
fwait
jne
loope
jmp
test
add
fldl
mov
ror
test
mov
iret
in
cld
imulb
loope
mov
outsl
lea
sti
icebp
nop
xor
add
dec
mov
aaa
adc
and
push
pushf
aam
call
je
ficoms
or
xchg
sbb
sbb
out
int
ja
pusha
jmp
push
shl
and
imul
fxch
xchg
jne
push
dec
push
gs
inc
pop
sub
testw
mov
clc
lret
add
xlat
mov
out
xor
imul
lods
mov
xchg
and
imul
lret
loope
or
imul
imul
xchg
lret
dec
out
cmp
idivb
dec
mov
mov
xchg
pop
xchg
xchg
lods
stos
push
scas
gs
fiadds
lret
jmp
lahf
iret
dec
cmp
addl
mov
sbbb
add
cwtl
xchg
repz
ret
mov
pop
test
mov
fisttps
push
mov
ret
mov
cmp
scas
insl
xor
lret
push
lock
jmp
movsl
loope
cwtl
out
addr16
leave
xor
jp
inc
lods
in
jnp
mov
mov
lds
scas
rcr
out
cwtl
inc
or
inc
jg
xchg
jecxz
xor
lock
adc
mov
fwait
lahf
xchg
sti
and
mov
jge
cmc
shl
xlat
in
lret
mov
jmp
rclb
shrb
int
xchg
push
std
mov
les
sub
adc
jecxz
pop
xor
out
mov
ds
incb
imul
mov
jbe
sub
ja
mov
add
pop
sbb
in
xchg
mov
jmp
popf
adc
imul
loope
xchg
pop
inc
xor
pop
jle
test
dec
sti
imul
jne
adcl
push
pop
adc
lds
xor
xchg
aaa
push
stos
aad
rcrl
xor
addr16
scas
outsl
sub
jns
vmovaps
xchg
xchg
int
dec
leave
loope
movsb
sbbl
lea
in
outsl
adcl
cmp
mov
mov
sbb
xchg
out
add
imul
cmpsl
ffree
jne
mov
loope
mov
fistpl
ficomps
popf
gs
and
xchg
cmp
and
aaa
ds
cmpsl
fwait
pop
out
jne
cmp
imul
icebp
xlat
rcll
pop
cmpsl
negl
mov
scas
lret
xchg
pop
inc
popf
cmp
pop
cs
ret
dec
mov
mov
scas
cmp
mov
add
fs
jl
push
sahf
outsl
inc
das
cld
jge
in
jecxz
arpl
jmp
push
in
or
lea
mov
cli
lahf
jp
add
shl
jmp
iret
movsl
sbb
test
inc
fwait
shll
mov
cmc
xchg
jmp
frstor
test
loopne
push
orl
cmp
or
outsb
add
mov
fsubr
insl
cmp
xchg
fnstcw
lods
xchg
in
inc
iret
into
push
pop
ja
adc
sti
add
test
xlat
lods
push
popf
and
addr16
aas
mov
fisttpll
cltd
movsl
iret
push
outsl
add
ret
mov
xchg
dec
fucomip
cmp
leave
cmp
jmp
sbb
mov
adc
cmp
jne
lret
pop
xchg
roll
loope
xor
in
nop
inc
aad
scas
ds
push
cmpsl
jge
int
or
jne
xchg
imul
fst
jecxz
bswap
popa
sarb
outsl
mov
mov
ja
movsl
cmp
popf
imul
mull
andl
push
xor
push
stos
mov
sbb
dec
mov
xchg
inc
inc
arpl
inc
data16
subl
jne
arpl
int
mov
popf
jns
ret
mov
frstor
push
pop
movsl
lds
inc
adc
orb
popa
adc
sbb
fldln2
fidivrl
pop
add
cld
push
jmp
je
flds
pop
fcoms
enter
sar
sbb
cmpsl
xchg
rorb
cwtl
mov
push
jbe
sub
jne
out
fisubs
test
test
add
mov
xchg
pop
scas
imul
xchg
xchg
popf
xor
mov
shlb
js
arpl
cwtl
in
out
jne
lret
sub
adc
inc
lods
adc
adc
add
cmp
adc
lods
repz
mov
popa
jg
loope
mov
negl
in
out
sbb
int
lea
imul
or
test
add
fld
stos
ds
lahf
jecxz
sbb
cltd
fstpt
stos
rorl
decl
scas
rcrb
jns
scas
dec
sarl
in
imul
and
arpl
outsl
jmp
aad
mov
leave
xchg
xor
or
push
gs
popa
negl
mov
leave
dec
jmp
add
xlat
cwtl
pop
in
jno
gs
mov
loope
out
negl
jecxz
dec
addl
test
out
add
push
inc
mov
mov
lods
stos
insl
cmc
pop
adcl
add
sti
mov
xlat
jecxz
cmpsl
lods
or
test
adc
push
push
push
xchg
out
xchg
call
sub
aad
in
adc
adc
add
add
stos
scas
popa
adc
jae
lock
jp
dec
cmpsl
sbb
xchg
insl
ja
ret
shrb
test
xchg
out
xchg
popa
ja
xlat
mov
aaa
jg
cwtl
pop
push
jmp
cmp
ja
push
lahf
jo
cltd
fidivs
xor
jmp
push
jb
cmp
pusha
lods
mov
mov
fnstsw
iret
sub
fildll
xchg
pop
push
xchg
cmp
mov
shl
jb
fsub
lret
aad
fisubrs
mov
jno
rcr
cmp
jle
jg
add
mov
and
imul
pushf
xchg
jnp
lods
fildll
xrelease
icebp
imul
inc
or
sbb
pop
inc
push
fs
sub
in
mov
pop
and
testl
lea
jns
xchg
xchg
add
mov
imul
shll
out
xorb
frstor
sti
push
loope
and
das
cmc
loop
cmp
sti
sahf
jns
mov
xor
inc
add
add
or
scas
cmpsl
test
orb
pop
lods
movzwl
mov
nop
and
dec
test
add
mov
fldl
fprem1
push
jmp
popa
nop
mov
lahf
int
xor
lods
sub
and
and
xor
mov
jmp
mov
repz
lods
out
mov
insl
scas
roll
aad
cmpsl
out
add
popl
ds
and
adc
gs
jmp
adc
or
orb
xchg
pop
mov
imul
sub
cmpsl
sbb
in
std
test
pop
lahf
xchg
ficompl
cmpb
push
sub
cwtl
xchg
movsb
jne
and
and
test
cltd
loope
mov
jmp
cmp
xchg
in
mov
das
cmp
movl
sti
cli
adc
rcll
fs
cmp
xor
pop
test
cmp
mov
cs
mov
aam
xchg
xor
sbb
inc
pop
scas
add
mov
or
lea
leave
xlat
lret
adcb
divl
xchg
test
int
jle
jg
popl
in
arpl
hlt
jne
mov
imul
repz
sbbl
je
jecxz
outsl
leave
test
cltd
jmp
pop
test
jno
cmpsl
rorl
mov
mov
icebp
outsl
in
pop
push
in
ja
fildl
daa
lock
lret
test
vmwrite
xchg
test
test
scas
mov
mov
popf
movsl
out
inc
xor
aad
ret
rol
cmp
loopne
cmp
lods
push
dec
adc
out
lret
cmp
bnd
cmp
fsubs
fcoml
addr16
and
outsl
mov
loope
enter
mov
out
xchg
movsb
int
jle
xor
cmpsl
push
xchg
ja
fwait
orl
push
mov
test
or
mov
mov
xchg
lcall
lahf
xchg
push
insl
repz
out
loope
xchg
fbld
cmp
xchg
dec
add
xlat
int
aaa
mov
out
aam
mov
cwtl
or
arpl
loopne
push
arpl
mov
scas
lea
shl
imul
loop
js
scas
call
xchg
pusha
jecxz
iret
add
dec
mov
cmp
out
nop
xchg
fcomp
mov
push
adc
imul
lea
add
xchg
aam
roll
cmpl
shll
sub
cmp
dec
lret
test
std
pop
test
mov
sbb
mov
aad
inc
xchg
cltd
outsl
ljmp
lahf
addr16
imul
fcmovne
fs
rorl
lds
dec
cmp
xlat
insl
adc
sbb
iret
cmc
stos
lods
xor
xchg
xchg
cmp
and
push
push
add
rorl
in
call
cmp
iret
outsl
mov
xlat
fbld
xchg
insl
aad
movsl
out
lods
scas
add
mov
xchg
in
fisttpl
in
xchg
test
stos
or
xor
stos
xchg
int
cmp
or
mov
test
insl
int
or
mov
int3
mov
cltd
xchg
rorl
lret
xlat
inc
cmc
cmpsl
pop
xchg
ds
mov
xchg
add
adcb
xor
mov
jmp
add
popf
pop
int3
mov
sub
cld
btc
push
and
add
xchg
test
lods
inc
push
shll
call
loope
scas
jae
add
jp
dec
out
dec
and
popa
aad
add
shrl
fst
pop
pop
sub
xlat
iret
scas
fistpl
cmp
lods
mov
push
imul
xchg
lea
repnz
xchg
dec
xchg
imull
jae
je
add
mov
add
mov
adc
sub
popa
cmp
xchg
repz
adc
test
test
adc
sub
sub
sub
lret
adc
mov
xchg
sub
xchg
add
pop
sbb
fnsave
mov
lds
and
addr16
fcmovb
ds
shlb
mov
xchg
les
cmp
inc
mov
inc
orl
pop
out
inc
sub
xchg
push
cwtl
arpl
push
mov
ds
stc
xor
cwtl
int3
shrl
fadds
dec
mov
fsts
movsl
cs
fimull
push
add
cltd
imul
and
shl
cs
cmp
add
add
fwait
out
clc
jmp
test
shll
lods
sti
fwait
aam
mov
mov
mov
mov
loope
fmuls
jmp
cwtl
mov
adc
jle
and
andl
xlat
add
lock
imul
sbb
fldcw
or
call
in
rcll
insl
mov
and
xchg
inc
xorb
xlat
mov
cwtl
inc
lods
gs
addr16
call
xchg
call
cwtl
add
xor
imul
arpl
andl
lahf
xchg
mull
fwait
cmc
enter
mov
cmp
mov
fsts
stc
or
fbld
arpl
push
or
mov
mov
cmpsl
test
or
js
pop
pop
fstpl
lea
inc
fdivr
and
xchg
popf
repnz
jmp
inc
enter
mov
sbb
pop
movsb
rcl
lahf
in
enter
xchg
loope
xchg
mov
aad
cld
filds
mov
mov
and
addl
inc
jmp
loope
js
xchg
fldenv
or
jmp
add
jecxz
ffree
mov
mov
addr16
lea
jl
sub
push
push
fbld
and
adc
xchg
repz
push
dec
xchg
sbb
pop
sub
shl
idivl
jae
jo
inc
les
add
popa
rcl
sbb
mov
lea
jle
sbb
leave
add
movsl
stos
in
and
xchg
or
rcl
or
cmpsl
pop
xlat
cli
int
mov
mov
adc
or
jb
mov
out
aad
test
fldl
mov
mov
push
popa
jecxz
loopne
fbld
leave
stos
xchg
cmp
hlt
daa
fsubrs
lock
and
add
jne
outsl
cmpsl
cmc
xchg
jg
xchg
rcrl
outsl
out
mov
jl
xor
inc
repnz
mov
cmc
imul
lahf
and
iret
das
rcll
popf
jl
das
or
xor
outsl
xor
xchg
cmpsl
mov
inc
pop
add
sbb
mov
mov
xlat
test
out
test
roll
out
nop
lahf
xchg
jmp
sub
sbb
mov
push
repz
ss
sub
insb
jmp
add
cmc
mov
movsl
or
or
test
popf
lds
cwtl
lock
cld
mov
testl
rcrl
add
int
xchg
pusha
mov
sub
in
cmpsl
push
ja
shr
and
push
outsl
sub
jmp
dec
test
cmpsl
cmp
dec
mov
out
jge
add
xchg
addl
and
leave
adc
lret
test
xchg
jne
or
xchg
lahf
shlb
fwait
outsl
lds
sub
ror
lahf
jmp
cmpsl
roll
push
aad
pop
mov
add
shrl
lahf
outsl
adc
fistpl
imul
popa
out
mov
lret
fildll
sub
gs
or
mov
adc
xchg
int
in
stos
ss
jo
and
repz
test
in
and
pushf
in
add
fistps
int
xchg
xor
lods
sub
fwait
mov
mov
fld
mov
push
js
xchg
sub
pop
xor
ret
push
add
insb
sub
sub
fnsave
jp
mov
mov
push
out
jnp
xchg
cmpsb
push
cli
cmpl
pop
cmpsl
lret
ljmp
in
les
mov
clc
sub
jmp
sbb
insl
clc
mov
push
xchg
out
adc
adc
mov
cmpsl
mov
cwtl
in
imull
add
fmul
mov
jae
cmp
lea
fdivrl
cltd
push
mov
xchg
in
lds
out
dec
loope
rorb
adc
jp
data16
lahf
push
popa
subl
and
xchg
add
jne
fcmovnu
andl
les
sub
dec
adcl
repz
ja
lock
cmc
push
mov
negb
testb
shlb
aas
xchg
iret
jo
enter
lahf
mov
psllq
fisttpl
orl
in
cmp
ja
mov
pop
xchg
test
aas
add
jge
lret
stos
fisubs
mov
and
xchg
xchg
sbb
sub
vaddsd
xchg
outsl
sbb
pop
imul
mov
xchg
mov
xchg
jbe
out
loopne
ud0
out
loope
cwtl
shlb
xchg
lahf
mov
and
das
push
pop
lahf
in
test
movsb
add
mov
adc
in
loope
pop
sbb
adc
mov
mov
xchg
cmp
mov
icebp
ja
mov
test
subl
jmp
repz
push
out
mov
push
and
js
fildll
add
push
int
jae
jne
dec
pop
divl
popf
add
jl
lds
xor
mov
adc
int
sbb
push
pushf
insl
cmc
frstor
xorl
lcall
jne
iret
arpl
cmp
mov
popf
lock
mov
leave
xchg
dec
xchg
out
inc
inc
xchg
fwait
dec
sarb
or
subl
imul
cltd
and
out
pop
sbbb
js
lret
xchg
xchg
jp
test
hlt
ja
ret
movsl
adc
mov
jg
stos
mov
mov
sub
clc
addr16
vpandn
int
mov
mov
sub
subb
orb
fstps
lahf
dec
mov
pop
ja
pop
sti
inc
fstps
adc
xchg
lret
ja
and
adc
adc
jp
mov
lahf
lds
mov
mov
adc
push
xchg
inc
psubsw
push
push
iret
inc
in
arpl
mov
insl
stos
cmpsb
lret
xchg
xchg
jno
xchg
das
addr16
repnz
fdivrl
not
cwtl
cmp
sub
popf
into
xchg
in
cmp
mov
js
aad
lahf
loope
imul
sub
push
push
aas
mov
data16
outsl
stc
fstpt
cltd
sub
clc
rcrl
das
std
lods
sbb
inc
add
mov
push
and
in
mov
mov
dec
and
mov
test
mov
addl
sbb
stos
das
mov
cmp
movsb
jmp
adc
sbb
imul
dec
popf
mov
cmc
add
xchg
cmp
xlat
test
lea
cwtl
sti
cltd
mov
test
push
push
lock
and
dec
sub
xor
jecxz
or
adc
in
leave
xor
or
daa
jl
aas
imul
xchg
push
and
cmp
or
in
ss
xchg
lahf
jb
adc
ja
adc
lods
lods
roll
mov
mov
fisttps
add
xchg
cwtl
loopne
mov
es
sub
mov
int
mov
rcl
les
add
xchg
pop
cld
dec
adc
mov
jne
xchg
sbb
jmp
lea
mov
rol
add
rcrl
aaa
in
iret
lods
ljmp
ds
mov
outsl
insl
aas
outsb
lods
cmp
dec
lods
test
jns
aaa
bswap
popf
jecxz
fisubrs
jmp
sbb
xchg
ljmp
orl
imul
andb
mov
arpl
in
pop
sbb
rcrl
xchg
cmpsl
xlat
repz
popf
jne
pop
scas
scas
lea
scas
mov
movsl
push
xchg
push
and
out
dec
xor
or
dec
lds
rorl
popa
mov
mov
movsl
jmp
xor
popa
aad
mov
push
jmp
lds
iret
faddl
outsl
cli
pop
adc
cmc
mov
aaa
adc
insl
or
xlat
jbe
stos
dec
or
or
xchg
ljmp
in
rcl
ja
arpl
add
imul
inc
add
or
pop
clc
xchg
iret
fldln2
fcompl
das
and
imul
call
and
cltd
arpl
shl
cld
cmp
cmp
jge
xchg
mov
divl
push
mov
imul
in
sbb
and
lock
hlt
or
lods
out
sar
or
mov
jbe
ret
xchg
inc
out
call
and
push
xor
inc
cmpsl
cltd
int3
scas
xchg
xchg
adc
pop
rol
mov
lahf
int
xchg
cs
idivl
push
pop
cmp
idivb
iret
cld
iret
xchg
movsl
or
outsl
in
add
mov
mov
xchg
stos
push
data16
test
scas
int3
add
mov
lock
bound
loopne
or
imul
mov
sub
jne
idivl
shll
jp
sbbl
lahf
sbbl
arpl
out
lds
and
jb
je
js
adc
loope
test
or
push
lret
addl
iret
jecxz
test
ret
or
jo
pop
ret
jno
xchg
out
dec
lret
mov
dec
out
cmp
in
insl
adc
inc
dec
pop
cmp
or
div
arpl
jne
jb
sbbl
jns
sbb
fisttps
sub
xchg
and
test
mov
out
xchg
stos
movsl
and
push
scas
test
loope
in
add
lret
cmp
mov
xor
ret
xchg
fxam
push
pop
test
push
or
fldl
mov
xor
dec
inc
inc
sub
jecxz
lcall
imul
addr16
ja
mov
adc
shll
pusha
repz
pop
or
mov
sti
mov
cmp
lea
out
lret
pop
leave
cmpsl
xchg
ja
scas
movsl
imul
or
mov
fnstsw
icebp
jl
lds
out
enter
ss
adc
add
adc
shl
or
add
or
sub
lret
pop
push
adc
inc
test
jb
scas
mov
ljmp
or
test
sbb
scas
push
out
daa
in
xchg
sbb
repz
scas
jne
push
pop
loop
xchg
jno
outsb
push
cmp
xlat
gs
rcll
test
out
mov
in
or
mov
sub
repnz
roll
imul
in
mov
insl
inc
sub
fwait
movsb
xchg
add
outsb
jb
cmp
ret
vpackssdw
mov
mov
out
in
shll
shl
push
ljmp
jns
cmp
pop
mov
ret
ljmp
add
cmpsl
loope
jg
scas
iret
mov
push
ret
mov
cltd
pop
cmc
call
mov
jecxz
cli
aas
sbb
dec
gs
jae
outsl
or
push
xlat
jl
and
jns
push
insl
cmp
sub
mov
push
out
repz
and
out
and
cmp
mov
outsl
xchg
mov
addr16
xchg
mov
mov
pop
xchg
fldt
roll
cmp
jmp
lods
mov
out
mov
cmp
fwait
scas
cli
pop
cwtl
mov
repz
test
sub
cltd
jp
loope
xchg
gs
cwtl
add
filds
lds
add
xchg
fwait
popa
xchg
rcrl
mov
sbb
addl
add
gs
arpl
push
icebp
xchg
pop
mov
out
cmp
mov
in
xchg
ret
xchg
bswap
mov
or
push
lods
add
jne
ss
rorl
aaa
test
mov
jno
popf
sbb
ja
in
inc
mov
cmc
fdivr
and
daa
lds
int
push
xchg
loope
lahf
in
ds
jmp
ljmp
popa
jmp
add
or
mov
sub
sub
cmpsb
int
add
outsl
outsb
sbb
rcll
mov
ds
int
popf
fwait
mov
adc
inc
dec
inc
adc
pop
movsl
in
jmp
rorl
pop
mov
fstps
mov
sbbl
rorb
xor
xchg
popf
sub
sub
xchg
or
jne
loope
cmc
test
loopne
imul
pop
sbb
xchg
dec
sub
add
mull
push
pop
or
sbb
popf
inc
mov
outsb
add
idivb
int3
mov
mov
aas
adc
sub
repz
cmp
int
aad
cwtl
flds
je
test
in
mov
jmp
jo
fldcw
sbb
fcom
pop
out
testl
or
or
push
xchg
xor
insl
int
mov
adc
mov
insl
in
repnz
jbe
cmp
cltd
mov
add
lds
xlat
cwtl
out
push
lock
and
ret
arpl
outsb
stos
pop
setne
fildll
or
imul
sbb
arpl
test
test
lahf
scas
dec
popa
cmpsl
add
shll
lods
gs
scas
sbb
into
jmp
loope
int
mov
and
imul
rcrl
jmp
shl
lds
out
or
add
mov
dec
lahf
dec
mov
xchg
sub
andl
adc
call
xchg
adc
jecxz
idiv
dec
dec
hlt
jae
xchg
repz
inc
jecxz
jne
lahf
mov
mov
outsl
addr16
add
mov
mov
mov
add
shlb
jmp
lret
push
gs
or
arpl
xchg
mov
mov
dec
jns
mov
cwtl
lret
stos
imul
out
mov
jnp
fidivs
int
mov
sub
imul
test
inc
out
ljmp
lods
movsl
sbb
std
mov
or
mov
mov
cmpsl
adc
add
push
pop
arpl
push
stos
fcomps
xchg
movsb
mov
jne
ja
arpl
or
and
popa
rolb
mov
cltd
fldt
cmc
and
mov
xor
imulb
push
pusha
cmp
mov
ret
int
loopne
pushf
jmp
mov
aad
xchg
cmpsl
popa
xchg
mov
mov
mov
mov
add
xchg
adc
ja
xlat
xchg
adc
adc
rorl
addr16
js
imul
pop
dec
scas
and
mov
sbb
ja
addr16
inc
xchg
stos
xchg
fnsave
and
int
sub
imul
fisubl
xchg
mov
jp
test
pop
xor
aam
insl
push
mov
or
in
mov
test
out
movsl
sbb
push
aad
jmp
lret
jecxz
mov
mov
fwait
xchg
iret
neg
push
cmpsl
ja
push
jnp
mov
fdivrp
iret
mov
fwait
jg
adc
mov
push
fwait
lret
mov
push
rcll
das
popa
in
adc
hlt
mov
sbb
orl
shrl
es
idivl
mov
lahf
adc
sbb
ja
popf
out
fistpll
fwait
lods
ret
rorb
shll
cmp
mov
jecxz
pop
mov
sbbb
cwtl
xchg
ret
xchg
mulps
jmp
cpuid
insl
add
sarl
insb
jno
mov
out
inc
dec
mov
fbstp
add
dec
je
decl
jg
pop
pusha
add
lock
pop
sub
bound
sbb
dec
out
pop
leave
inc
jecxz
adc
call
gs
push
xor
or
shr
scas
xor
xchg
imul
test
lods
pop
push
aad
stc
pop
push
in
mov
jle
mov
mov
adc
popa
test
lds
rol
and
add
xchg
repz
add
xchg
xchg
outsb
test
cmpsb
dec
add
mov
lds
into
out
sbb
jecxz
fists
test
leave
gs
cltd
mov
imul
cmp
pop
sub
stos
clc
ja
in
imul
inc
rorb
shl
repz
cmp
aas
addl
xchg
lods
dec
das
sub
jecxz
into
enter
jo
and
xchg
lds
jecxz
inc
xchg
movb
out
push
sub
mov
out
imul
mov
lahf
cmp
aaa
xlat
cmp
in
xor
inc
add
imul
imul
cmp
push
xlat
jmp
inc
dec
leave
icebp
popf
pop
sbb
divl
push
loopne
inc
mov
lds
inc
dec
adc
fstl
rcrl
pop
push
mov
sbb
pop
and
jmp
rorl
dec
mov
dec
test
cltd
ja
ja
out
mov
movsl
xor
xor
pop
stos
and
pop
imul
das
sbb
es
shll
addr16
insl
gs
xchg
iret
mov
cmp
cmpsl
outsl
push
leave
loope
xor
jge
mov
gs
dec
loope
adc
add
mov
subl
xchg
ret
test
sub
and
and
xchg
loope
dec
aam
orb
out
divl
cmp
fwait
push
movsl
jns
cltd
mov
xor
jbe
xlat
lds
shrl
lcall
cmp
stos
xchg
and
cmpsl
xorl
mov
loope
mov
cmp
push
gs
popf
cmc
nop
insl
mov
adc
imul
adc
sub
xlat
xor
out
aas
repnz
cli
mov
imul
sub
fdivrl
sbb
rcrl
and
inc
xchg
add
int3
nop
or
incl
lahf
out
out
iret
adc
outsl
loope
stos
cmpsl
sub
mov
dec
lods
jmp
subl
pop
xchg
imull
push
add
jecxz
sbb
cmp
jns
sub
mov
jg
aam
cli
out
adc
push
pop
outsl
lds
mov
shl
fadd
mov
sti
gs
dec
cmp
dec
sub
xlat
imul
stos
mov
dec
xor
jmp
popf
loope
lahf
popa
or
pop
in
shll
mov
fwait
mov
inc
xchg
xor
cmp
jne
or
push
iret
out
addr16
xchg
xchg
mov
lret
test
xchg
xor
in
inc
nop
mov
das
ret
gs
out
orl
imul
lods
in
movsl
pop
cmc
cmp
dec
sbb
iret
jne
add
add
cwtl
hlt
ret
pop
push
pop
mov
loope
in
testl
dec
cwtl
jae
sub
jp
mov
test
ret
lds
iret
popa
cwtl
inc
pop
or
cltd
vpacksswb
fucom
jnp
jle
arpl
ljmp
shrl
int
shl
gs
cmpsl
inc
push
sahf
loope
iret
mov
data16
adc
pop
or
fwait
xchg
stos
jb
adc
in
mov
adc
cmp
add
in
sarl
ja
orl
pop
mov
jne
lcall
dec
adc
ret
xchg
outsb
or
push
scas
mov
stos
movsl
rorb
outsl
fwait
xor
push
fiaddl
adc
jmp
sub
js
mull
jg
xchg
subb
add
xchg
leave
in
shrl
mov
movsl
into
jnp
dec
mov
punpcklwd
outsl
cwtl
imul
int
push
dec
inc
mov
xlat
enter
shrl
sbb
pop
test
and
fistpl
call
les
fnstsw
mov
jle
adc
paddb
jecxz
int3
mov
cmc
popf
xchg
inc
adc
shr
lds
fstpt
insl
in
pop
fisubs
scas
push
jl
pop
movsl
out
lds
mov
mov
sti
dec
mov
xchg
jl
imul
pop
neg
inc
jecxz
xchg
xchg
pop
sarl
andb
movsl
xor
test
mov
cmp
jne
cmpsl
nop
movsl
in
mov
rcr
call
subb
mov
ja
adc
jge
pop
fwait
gs
pop
ror
lret
in
neg
div
addr16
iret
sub
std
cmp
out
cwtl
insl
movsl
fwait
mov
push
cltd
imul
and
inc
sub
clc
xor
pop
jmp
sub
xor
jge
cmpsl
aad
xchg
clc
stc
cwtl
out
mov
loopne
inc
sbb
mov
mov
lahf
cmpb
jb
xchg
mov
popa
mov
push
push
pop
sti
lds
popa
into
out
pop
popf
outsl
movsl
repz
xchg
push
fildl
mov
popa
das
scas
or
sbb
inc
movsl
out
cmp
js
aad
inc
int3
in
sub
fwait
mov
cmpsl
adcl
jmp
cwtl
andl
pop
test
mov
cmpsl
idivl
mov
pop
pushl
frstor
pop
jb
scas
mov
iret
cltd
nop
repnz
aad
mov
xchg
faddp
movsb
sar
int
pop
scas
mov
in
lock
push
arpl
mul
xchg
in
jmp
mov
xchg
mov
fldl
mov
inc
out
testl
addr16
xchg
in
xor
out
mov
jne
jecxz
push
orb
xlat
mov
ret
push
ds
and
rcll
mov
cmp
jle
sbb
or
imul
ret
pop
mov
pushf
hlt
xchg
andl
out
push
popf
jmp
lods
pop
into
and
int
dec
mov
mov
shr
cmp
mov
adc
aam
int
sbb
shlb
jo
xchg
subl
aam
jecxz
adcb
lret
loopne
xlat
dec
jmp
dec
and
test
sbbl
shr
jb
cltd
out
adc
push
fucom
pop
sub
movsl
subl
in
popa
test
dec
stos
cld
pop
sbb
jno
ret
adc
sbb
mov
cwtl
add
push
idivl
movsb
add
ret
xchg
jecxz
rol
cmp
out
push
mov
aad
icebp
inc
sub
cs
mov
jne
lret
pop
sub
xlat
jmp
pop
jge
mov
and
sub
fwait
cmp
mov
mov
popf
xchg
rcll
ror
push
filds
mov
popa
sub
dec
lea
inc
mov
lret
xchg
push
add
and
or
mov
mov
cmc
out
xchg
jmp
lcall
shll
xor
ret
dec
rcll
cs
mov
repz
pop
lret
lds
lahf
push
repnz
test
mov
int
sti
cmp
adc
adc
xchg
lds
movsb
xchg
loope
xor
xchg
scas
ret
push
cmpsb
sub
push
test
in
sub
clc
sbb
pop
adc
call
push
nop
shrl
fistpl
xrelease
mov
call
mov
inc
sbb
or
fidivrl
dec
xchg
insl
lds
out
mov
sbb
jle
sbb
cmp
in
enter
out
mov
arpl
mov
jecxz
and
xorb
or
insl
inc
scas
mov
jmp
and
iret
jns
jne
adc
add
dec
sbb
push
mov
rclb
divps
push
testl
outsl
inc
ret
push
jnp
cltd
divl
aad
pop
mov
clc
mov
fsub
sub
mov
lock
sub
dec
lret
rcr
pop
cwtl
cwtl
add
jmp
flds
imul
enter
pop
jl
push
sbb
jb
jnp
shlb
push
stos
mov
imul
or
mov
test
arpl
out
add
cltd
lahf
test
shl
and
or
mov
mov
movsb
pop
xchg
leave
mov
loope
xorl
addr16
loope
shll
jo
or
push
stos
into
jns
in
popa
lods
imul
ja
popa
repnz
sub
cwtl
fwait
xlat
xchg
sbb
cmp
adc
test
rolb
sbb
and
scas
sbbb
push
js
movsl
inc
and
lock
mov
pop
jecxz
sub
popw
pop
js
popf
pushl
jne
xchg
mov
cmpsl
rcrl
lea
xchg
jge
xlat
popf
add
mov
faddl
xchg
cmp
fadds
or
imull
lods
das
fldl
loop
push
mov
fistps
hlt
cli
add
fsts
sub
xlat
and
fmull
jge
push
cmpl
call
popa
mov
mov
popf
push
inc
rolb
out
int
push
sub
cld
mov
popf
push
outsl
in
test
imull
dec
cmp
pop
loope
mov
ret
dec
imul
cmp
mov
cltd
jecxz
ficompl
jp
das
dec
or
cltd
push
mov
or
out
out
aad
mov
xchg
fld
xchg
loope
gs
mov
popa
enter
shl
repz
add
mov
jecxz
cli
inc
loop
pushf
push
test
lret
lahf
sub
out
push
xor
ja
test
hlt
jecxz
xor
or
mov
dec
cmp
xchg
in
outsb
fwait
bound
nop
cmc
in
add
mull
jno
xor
sub
cs
std
push
xchg
imul
scas
xchg
rcl
aam
dec
adc
mov
mov
aad
int3
xchg
or
and
push
hlt
subl
cld
sti
mov
flds
out
gs
jae
mov
cmp
in
scas
push
cmc
fcmovb
inc
and
je
aam
test
fldcw
dec
loope
add
add
lahf
sbb
sbb
cmp
inc
cmpsb
adc
lret
cmp
push
sub
out
insl
into
ret
push
sbb
add
xchg
aam
enter
jmp
ds
xorl
scas
mov
popa
cld
push
sbb
ret
pop
sti
or
or
jg
adc
stos
hlt
cmp
xchg
shll
sub
test
hlt
add
add
repz
pop
pop
movsl
int
popl
orb
or
movsl
xor
jae
mov
mov
filds
jns
pop
movsb
adc
dec
jmp
sub
adc
adc
pop
test
mov
dec
adc
cmp
leave
test
addr16
fwait
shll
out
mov
add
xchg
popl
jl
out
mov
fnsave
adc
sbb
lret
imul
cmc
addr16
sub
pop
test
push
and
outsl
test
ja
sbb
push
enter
in
mov
bswap
stos
jge
dec
subl
rcrl
xor
in
sti
test
call
lds
mov
push
xchg
cli
adc
call
xchg
pop
out
gs
dec
sbb
jecxz
sub
cmp
push
mov
hlt
out
sbb
arpl
cli
movsb
psraw
jmp
xor
or
imul
stc
push
add
or
and
or
fucom
test
and
ret
xlat
sbb
outsl
add
cmc
push
jp
jl
frstor
push
mov
dec
add
mov
fsts
fistpl
aad
lahf
mov
inc
inc
mov
xchg
nop
shll
in
cmp
jp
mov
jne
push
pushf
add
lods
ds
and
cwtl
rcrl
and
filds
insl
subl
mov
jmp
mov
adc
sub
jecxz
ljmp
lret
push
popa
push
adc
sub
add
call
outsl
into
mov
sete
loopne
xlat
inc
mov
out
int
mov
pop
cmpsl
xchg
mov
lahf
mov
adcl
push
pop
pop
insl
lea
arpl
movsl
out
add
out
out
xchg
loope
cmp
es
leave
and
into
xchg
out
int
mov
lret
je
xchg
sub
iret
pop
xchg
cli
in
gs
decb
test
and
sysenter
lods
gs
and
and
or
mov
popl
ret
fldl
gs
test
mov
pop
shlb
lret
leave
dec
mov
insl
mov
jmp
jns
mov
jmp
mov
sti
mov
pop
ret
and
inc
fstpt
add
imul
mov
imul
push
repz
dec
sarl
fisttpl
in
or
and
cltd
mov
mov
mov
ja
movsb
test
cmc
fst
push
mov
pop
insl
lret
jne
add
lods
mov
or
ret
xor
fldenv
test
popf
pop
mov
aas
mov
xorl
popa
mov
out
imul
std
mov
imul
in
leave
fdivl
scas
mov
imul
lahf
imul
shll
jne
into
adc
nop
xchg
pop
daa
jno
xchg
xchg
jp
xor
ret
out
mov
popa
jne
repz
sti
push
mov
mov
test
and
rclb
fcmovnb
mov
xorl
xorl
xlat
xor
xor
insb
es
shll
daa
mov
xor
push
mov
movsb
jg
movsb
xor
inc
pop
fwait
inc
cmp
dec
cmp
lods
mov
int3
loope
sub
stos
add
jmp
pop
push
fucom
or
leave
jae
jmp
cli
pop
mov
xlat
mov
shrl
stos
idivl
push
lods
push
sbb
mov
imul
out
sbb
ja
fwait
or
jmp
scas
iret
ljmp
sbb
shll
push
mov
add
fwait
jne
mov
ror
scas
shrl
jecxz
sub
jne
fsubrl
lret
popl
lahf
xlat
imul
fs
shrl
jae
out
jmp
aad
neg
lret
iret
imul
cwtl
mov
mov
ja
push
stos
push
movsl
mov
in
mov
mov
push
inc
push
daa
inc
xor
aad
inc
out
popl
add
xchg
orb
cmc
xchg
add
lds
sbb
push
arpl
mov
cmp
pop
add
test
pop
loop
xor
repz
xchg
jne
cwtl
cltd
cld
mov
ja
cld
jns
scas
into
or
das
sbb
mov
stos
add
cmpsl
scas
xchg
clc
test
ror
in
lret
add
imul
leave
roll
add
adc
mov
sub
popa
jo
xor
xlat
or
cwtl
xchg
int
push
mov
rcr
jp
fbld
cmpsl
lds
or
daa
push
adc
inc
inc
cli
loop
or
lds
jge
scas
fucomp
fistps
sbb
xlat
xorl
xchg
xlat
cmp
xchg
test
mov
xchg
lods
int3
jno
movsl
out
out
sti
fwait
cmp
sub
push
sub
cmc
mov
push
int
cmpsl
leave
xchg
mov
clc
ret
das
clc
fcompl
cmp
outsl
jo
movsl
std
lret
xchg
imul
iret
ja
and
xchg
stos
lret
mov
cmc
fsub
inc
adc
inc
popf
mov
stos
fcmovne
popa
ja
inc
out
in
repnz
les
aad
insl
or
ret
cmp
mov
or
fcomi
xchg
or
out
in
xor
adc
lods
aam
lea
or
es
ja
es
sbb
jnp
lret
dec
xchg
jg
out
adc
sub
arpl
mov
sub
iret
test
lds
gs
cmp
in
xchg
daa
push
insl
and
lea
add
pop
push
test
xor
push
lods
loopne
mov
repz
mov
rcrl
int3
loopne
sbb
inc
jns
int
scas
add
mov
movsl
xor
stos
jmp
lods
mov
jb
jmp
xor
leave
cltd
mov
and
cmc
addr16
imul
leave
fxch
gs
lahf
fwait
stos
cmp
repz
vpunpckhwd
leave
popf
clc
mov
or
shlb
inc
shrl
aad
test
sub
lods
ja
xlat
jp
sub
arpl
int
jbe
roll
scas
insl
lds
movl
int
cwtd
push
and
push
insl
out
test
push
add
lock
lds
out
push
iret
and
sub
mov
xchg
clc
sbb
mov
inc
iret
loope
clc
xchg
push
inc
repnz
repz
cmp
cs
flds
stos
add
xchg
out
test
xor
mov
xlat
fmull
and
jmp
popa
fwait
pop
add
xchg
iret
mov
dec
adc
cmpxchg
inc
xchg
add
cwtl
movsl
jns
in
stos
aad
push
push
ret
xor
cmpsl
dec
sti
xchg
rclb
pandn
popa
mov
or
mov
pop
sub
nop
xlat
iret
pop
cmc
test
test
xchg
mov
call
int
rcrl
cmp
xchg
add
stos
testb
fs
cld
sub
adc
ljmp
push
lahf
jecxz
pop
xlat
xchg
cmpl
add
xchg
hlt
arpl
shll
orl
hlt
lahf
dec
icebp
add
arpl
call
cmp
aad
sub
mov
rcrl
out
mov
rolb
cmp
gs
hlt
and
add
in
in
or
mov
jno
test
mov
out
in
test
xchg
jae
imul
dec
mov
jp
int3
mov
lret
mov
xchg
sbb
ja
std
cmp
fwait
xchg
jnp
cmc
dec
roll
popf
frstor
and
stos
cmpsl
push
jnp
dec
add
pop
stc
xchg
fwait
lods
repnz
dec
ficompl
int
xchg
sarl
jnp
rcr
jns
loope
lods
xor
push
in
mov
sti
mov
aad
dec
add
sub
movsl
fcompl
mov
sbb
push
frstor
pop
sub
aas
outsb
xor
cmc
cltd
shr
mov
sbb
jne
cli
and
adc
wrmsr
lds
rcl
fbstp
mov
adc
enter
call
xchg
sub
sbb
cmpsb
xchg
cmpsl
cwtl
jbe
das
ja
xchg
jo
or
and
clc
ret
mov
loope
jge
filds
xor
xor
leave
fs
aas
xchg
xlat
in
in
push
js
imul
xchg
psllq
mov
shrl
xchg
outsb
aaa
mov
jecxz
dec
adc
inc
fists
add
int3
cmpl
rorl
mov
scas
dec
dec
lds
int
mov
adc
push
sub
mov
xor
lea
mov
mov
mov
roll
aad
lcall
call
xchg
mov
sbb
xchg
in
repnz
push
push
imul
and
mov
mov
mov
mov
outsb
sti
movsl
jae
in
shl
cmc
pop
pop
dec
cltd
mov
call
cmpsb
repz
insl
lea
fcomip
xchg
mov
adc
out
subl
iret
lret
out
inc
ret
xlat
mov
nop
loope
cmp
push
pop
pop
mov
scas
outsl
enter
call
cmp
mov
mov
insb
imul
dec
imul
adc
xor
push
push
lahf
xlat
psllq
mov
mov
loope
xor
inc
imul
add
pop
shl
ret
adcl
leave
lock
js
lret
iret
mov
shll
jmp
in
movsl
pop
cmc
insl
stos
pop
fcomps
xchg
rorl
aaa
stos
rcll
cltd
push
fcomip
shlb
lock
repz
adc
lods
push
and
stos
inc
sbb
sbb
stc
adc
xchg
mov
notl
xor
lods
imul
mov
fisubs
pop
rol
into
fcmovnb
in
insl
push
stos
mov
and
ja
jge
movsl
jne
out
xlat
lds
test
in
and
addl
stos
ret
icebp
add
lds
xchg
adc
xor
repz
jle
cmpsl
stos
and
cmp
inc
or
fs
ret
outsl
xchg
aad
lahf
lahf
inc
rorl
ja
das
pop
fmulp
xor
inc
subb
popf
in
ljmp
or
push
gs
or
imul
fdivr
xchg
adc
adc
jecxz
push
lods
cmp
outsl
xchg
out
ret
xlat
xor
negb
mov
push
xchg
jmp
cwtl
int
xlat
lahf
jne
pop
call
jne
sbb
out
gs
cwtl
scas
adc
mov
mov
xlat
lds
mov
fcmovne
in
and
imul
in
popa
stos
push
fistpll
in
xchg
jbe
gs
enter
cmp
pop
mov
popa
xchg
push
push
imul
cmp
addr16
and
sub
ret
or
dec
adc
aas
test
stos
les
lds
sbb
lods
xchg
popf
xchg
mov
fcoml
in
aad
push
pop
mov
addl
xlat
popf
arpl
rol
pop
cmc
jo
and
fwait
pop
addr16
aad
mov
pop
fwait
imul
fwait
mov
fidivrl
push
out
jecxz
inc
lock
xchg
movsl
push
sarb
jecxz
fbld
mov
or
test
addl
imul
loope
out
jae
in
cmp
and
xor
dec
lahf
push
cmc
rolb
mov
mov
int
mov
and
je
mov
aaa
and
mov
xchg
test
aam
adc
or
das
lahf
arpl
lret
test
cmp
mov
mov
rcr
fwait
popa
aad
addl
xchg
in
xchg
or
lahf
jne
ret
xchg
testl
jae
scas
lahf
imul
int3
jae
test
or
jl
cmpb
popa
adc
fcomi
mulb
inc
xor
imul
mov
lds
mov
out
nop
insl
sti
or
xchg
lahf
ret
xchg
inc
cmp
leave
cltd
mov
js
mov
xor
push
in
xchg
lret
jns
dec
rcrl
cld
mov
imul
aas
jmp
ret
rcll
aad
popf
jo
lret
mov
sub
orl
jns
aaa
fwait
push
enter
call
into
jmp
int
inc
xchg
sbbl
inc
movsl
imul
lea
dec
fwait
cmp
lods
cltd
rorb
mov
lret
pop
xlat
xor
sarl
and
lods
mov
xor
fwait
outsl
sbb
in
cwtl
xor
mov
or
test
fcoms
pop
jmp
mov
outsl
cmpsl
pop
icebp
pusha
pop
data16
dec
xchg
cmc
out
gs
jne
sbbl
dec
add
mov
sarb
std
outsl
mov
push
out
sub
imul
rorl
sbbl
enter
mov
loopne
add
push
adc
xchg
jecxz
xchg
stos
and
movsl
fisttps
pop
hlt
push
pop
mov
movsb
adc
dec
rcr
xor
lods
js
outsl
cltd
repnz
rcrl
mov
jmp
xchg
sub
idivl
ja
push
lret
fistl
pop
push
jl
in
outsl
fldenv
xor
xor
mov
loope
call
cld
out
cmp
adc
les
pop
mov
mov
mov
arpl
cmpsl
mov
shrb
xchg
test
lcall
and
xchg
mov
fadds
mov
mov
xchg
out
popa
stos
rolb
cmp
inc
and
movsl
push
leave
test
cmc
fldcw
imull
xor
ret
or
pop
cmp
inc
xchg
jae
pushf
mov
inc
out
jne
dec
xlat
rclb
cmpsl
popf
hlt
fwait
and
pop
hlt
inc
xor
dec
fidivrl
fwait
fwait
jne
sub
fdiv
cmc
jmp
xchg
mov
rorb
leave
testl
and
lret
out
ret
scas
vcvttps2dq
jge
dec
adc
xchg
in
cmpb
mov
aas
gs
fucomip
sbb
cld
sti
dec
test
pusha
lret
mov
and
imul
mov
pmaddwd
test
jg
mov
ror
and
iret
jg
cmp
xchg
push
enter
outsl
inc
adc
mov
aam
jecxz
jmp
ret
aad
in
arpl
mov
fld
xor
scas
pop
add
jecxz
mov
in
xchg
cmp
stos
in
dec
int
mov
insl
lds
add
stos
ds
push
pop
dec
gs
das
dec
ret
mov
mov
mov
stc
in
cwtl
fisubl
lcall
sub
xlat
sbb
dec
movsl
jl
push
imul
rcrb
mov
xor
test
out
in
lods
mov
and
mov
pop
lahf
rcrl
test
out
in
inc
imul
adc
shr
lds
jmp
cmp
leave
push
xchg
aas
js
jbe
rorl
arpl
jmp
popf
xchg
arpl
push
sub
repnz
mov
jecxz
jp
mov
out
and
ret
in
test
rcrb
pop
arpl
out
dec
mov
sbb
je
add
cmc
lahf
fwait
sub
and
aam
mov
cmpsl
test
push
pusha
pop
dec
rcr
xchg
int
lret
ret
push
push
xchg
loope
arpl
stc
cld
sub
inc
cltd
scas
outsl
leave
outsl
mov
pop
pop
cmp
xlat
cmc
out
and
adc
imul
call
imul
lret
cmc
rcll
aas
test
mov
dec
iret
xchg
mov
dec
jmp
jmp
dec
fnstcw
lea
cmp
popa
cwtl
out
shl
shrl
xchg
scas
lea
mov
fmull
and
mov
xchg
popf
popa
jp
or
mov
or
push
js
pushf
adc
sbb
dec
lret
mov
fwait
lahf
addr16
jns
loope
or
push
or
int
outsb
lds
gs
xchg
rcr
jno
lea
mov
mov
inc
clc
in
mov
xchg
aam
sbb
pop
jne
je
js
ja
out
jg
hlt
stos
add
cwtl
xchg
mov
flds
lods
xlat
lret
sub
scas
and
fisttpll
inc
cld
mov
add
imul
mov
int
imul
test
insb
rorb
jae
idivl
pop
push
add
shll
clc
or
dec
fldenv
mov
jl
or
xchg
aas
call
cltd
out
aad
shlb
stos
jae
xorl
jmp
fistpll
ffree
out
hlt
cmp
iret
push
mov
jmp
repnz
pop
push
sbb
mov
pop
xlat
scas
fwait
add
int
shll
sahf
in
popa
lock
popf
cwtl
out
in
in
out
addr16
js
arpl
not
mov
pop
or
cmp
jmp
shrd
scas
pop
cmpb
test
nop
loope
sub
fsubrs
jmp
xchg
cwtl
jne
xor
out
loope
mov
test
pusha
and
lahf
xor
fildll
imul
mov
cmp
scas
mov
shl
pop
loope
xchg
mov
test
ffree
xchg
mov
push
xchg
mull
lea
movsw
insl
mov
lahf
in
xorl
loope
iret
lds
xchg
aas
jmp
insl
roll
mov
mov
lds
out
loop
push
clc
add
cmpsl
shll
sbb
xchg
xchg
lret
sbb
stc
stos
cwtl
sbb
add
stos
cli
add
imul
sub
adc
or
repnz
jne
out
cwtl
mov
xchg
imul
mov
clc
loope
aam
enter
dec
sub
jmp
lahf
adc
mov
int
xchg
xor
push
lds
movsl
je
mov
cmpl
lods
xchg
fbstp
pop
cltd
imul
mov
add
inc
in
cmpl
push
push
sbb
mov
fistps
mov
rcr
and
sub
movsl
dec
mov
pop
ja
int
in
cmc
mov
jo
add
xchg
out
mov
jecxz
mov
imul
roll
mov
imull
ret
cwtl
cmpsl
mov
sub
mov
or
jmp
out
adc
fbstp
jl
xchg
repz
fcmovnu
fldenv
cmc
loop
jns
lods
sbb
jmp
mov
js
movsl
adc
aaa
pmullw
mov
xchg
xchg
rcrl
xchg
inc
idiv
xchg
jae
mov
repz
arpl
xchg
in
lods
sub
mov
leave
xchg
add
xchg
loop
pusha
add
xor
pop
shll
addr16
jmp
adc
in
xchg
lret
push
iret
nop
out
int3
popf
roll
or
xchg
lds
out
pop
fbld
call
sbb
add
jecxz
push
arpl
shll
sbb
stos
or
fldt
push
leave
jns
push
aad
sbb
adc
cmc
stos
repnz
cmpsb
mov
outsb
test
push
faddp
pop
xchg
mov
out
loope
push
jnp
testl
push
movsl
mov
sbb
fs
imul
jb
mov
cmp
mov
fwait
push
test
mov
cli
pop
mov
movsb
xchg
pop
mov
bound
popf
clc
pop
shrl
lds
mov
sbbb
test
stos
dec
or
aaa
in
cld
fsts
fwait
mov
test
in
cmpb
insl
sbb
inc
ret
imul
das
xchg
mov
add
lret
xchg
aad
movsb
sar
cmc
dec
and
cmp
cwtl
adc
scas
xchg
push
out
fnsave
std
jp
mov
push
ret
addl
scas
orl
shll
iret
mov
into
lret
lds
incl
ja
loope
fsts
add
mov
sarl
das
cltd
lahf
mov
aaa
in
imul
xchg
out
mov
fcomps
in
sbb
add
inc
sub
or
daa
or
lret
ret
sbb
cmp
imul
or
pop
rclb
lods
testb
jne
scas
sti
jb
adc
out
rolb
xchg
out
repz
jae
in
scas
icebp
in
jno
pop
or
loop
xchg
fcmovnu
adc
shll
cltd
popf
int3
loope
addr16
jo
fcomi
in
fcompl
not
cwtl
std
arpl
cmpsl
cmp
scas
mov
ja
push
add
imul
pop
xor
iret
lret
jg
and
xchg
stos
jb
add
xchg
leave
scas
lahf
jmp
jmp
xchg
cmp
cltd
pop
jecxz
fwait
rolb
or
in
sub
and
jp
or
cltd
repz
mov
pop
xchg
sub
or
lods
add
lahf
dec
outsl
fildll
ja
je
add
xchg
dec
fcoml
int
xchg
and
push
nop
gs
js
js
mov
out
mov
repz
mov
subb
fwait
cli
xchg
cmp
add
lods
push
rcll
xchg
xor
cmp
xchg
add
int
stos
out
test
out
mov
cmp
js
jo
std
adc
cltd
fbstp
mov
adc
out
dec
fwait
push
push
mov
aam
test
xlat
fs
scas
sub
jg
inc
mov
xchg
sbb
mov
in
sti
lock
out
pop
f2xm1
xlat
lret
push
mov
add
iret
ret
fildl
and
loopne
mov
loope
sahf
ror
mov
testb
adc
mov
sbb
test
adc
cmp
rep
iret
and
adc
dec
xchg
test
vpavgw
lahf
test
pop
repz
jno
roll
test
sbb
xchg
add
lcall
pop
cli
sbb
ja
xor
addr16
inc
pop
fnstsw
mov
test
stos
shll
leave
cltd
out
stc
dec
call
mov
sbb
pop
and
and
cwtl
xchg
adc
xlat
cltd
jne
inc
mov
pop
insl
mov
js
leave
pop
call
fistps
in
jmp
out
jae
add
push
test
sub
outsl
repnz
dec
roll
jg
mov
add
mov
push
jp
jne
mov
daa
pusha
fwait
stos
push
aas
out
cltd
popf
mov
xchg
lret
cmpsl
mov
loopne
lock
aad
xchg
test
mull
lea
test
mov
mov
jmp
push
arpl
xchg
mov
lock
iret
imul
mov
sti
xchg
cmpl
test
cli
inc
mov
test
sub
mov
lods
fisttps
aaa
mov
filds
mov
orl
popa
fidivs
in
loop
cmpsl
jno
jnp
cmp
xchg
mov
loope
ja
ret
sub
pop
lea
popa
lret
xchg
aam
lret
stos
jno
rcl
mov
rcrl
mov
pusha
cmpsl
push
aad
cltd
and
imul
cmp
push
insl
mov
mov
test
lds
into
cltd
mov
out
push
sub
jno
ja
mov
stos
mov
fisttpl
in
cmpb
cmpsl
add
xchg
pop
xorl
pop
loope
out
lret
jl
lea
ja
call
pop
jge
cmc
push
outsl
add
popf
imul
clc
sbb
xchg
or
popa
pop
cmpsl
jecxz
out
imul
push
jns
mov
shrl
jecxz
xchg
mov
pop
arpl
test
xor
adc
int3
adc
pop
lcall
fsubr
mov
arpl
into
mov
stc
mov
insl
outsl
lock
jmp
lahf
xchg
imul
push
mov
movsl
in
outsb
lahf
out
lea
sbb
cmpsl
aaa
fsubrl
loopne
cmc
xchg
arpl
inc
xor
popa
fnstcw
mov
jnp
arpl
jecxz
in
loope
pop
cmpsl
lea
popf
jne
xchg
adc
sar
iret
lahf
movsl
jmp
test
mov
mov
arpl
test
js
outsl
xchg
push
lcall
leave
insl
aad
mov
rolb
add
fisttps
xchg
shrb
mov
je
or
arpl
jne
aad
xchg
adc
add
leave
jmp
inc
ret
cwtl
dec
andl
test
cmp
xor
cmpsl
inc
fbld
iret
in
sbb
mov
in
mov
cltd
dec
sub
mov
movsl
das
enter
fs
push
cli
adc
mov
test
repz
add
lahf
addr16
mov
fldcw
mov
inc
pop
push
mov
test
in
lods
stos
aas
mov
lcall
add
imul
jne
lods
or
push
loope
pop
popa
cwtl
add
shrl
shrl
jbe
fnstcw
or
cmp
movsb
stos
and
cmpsl
out
jns
and
dec
pop
sub
cld
jecxz
testl
cwtl
adc
push
lahf
xor
mov
rcrl
mov
add
int
xor
fisttps
jmp
sbb
fsubr
gs
ja
fldpi
int
mov
jbe
jecxz
lock
lods
test
mov
mov
jae
sub
gs
movsl
jnp
mov
insl
push
cld
push
and
mov
xchg
cmpsl
stos
inc
icebp
sbb
xchg
popf
or
test
jb
cmc
je
sub
lahf
fstps
mov
xlat
pop
adc
or
imul
gs
jle
adcl
lret
pop
jl
imul
push
mov
push
pop
push
adc
mov
arpl
jns
pop
lahf
scas
xchg
ja
cwtl
sbb
or
out
cmp
and
add
jmp
je
mov
fwait
imul
push
outsl
ret
sbb
subl
or
out
xchg
imul
or
mov
push
rcrl
negb
jnp
mov
pop
lods
and
dec
rol
sbb
cmp
lds
cwtl
push
jmp
cwtl
sbb
popf
out
aam
fnstenv
xchg
sbb
rcr
imul
or
addr16
cltd
filds
mov
loope
jb
leave
les
repnz
scas
pushf
push
test
cmpsl
popf
adcb
in
jno
test
xchg
mov
pop
fildll
xchg
leave
jmp
push
aas
test
in
jmp
subb
mov
sub
roll
dec
jg
dec
mov
mov
icebp
ret
int
enter
add
outsl
dec
inc
jg
push
mov
push
pop
lods
xor
gs
jne
imull
call
stos
lahf
ret
roll
add
out
loope
fwait
cltd
add
fcmovnb
xchg
mov
sti
xchg
out
addr16
xchg
adc
and
and
sbb
out
inc
jne
cmp
iret
jmp
push
mov
out
sub
cmc
stos
adcl
nop
cmp
call
ret
faddl
rcrl
frstpm(287
adc
popa
xchg
les
mov
jecxz
outsl
gs
or
add
ja
jnp
mov
xchg
ja
leave
sub
int3
outsl
out
push
push
mov
je
fcoms
pushf
xchg
add
fwait
mov
movsl
mov
mov
imul
aad
test
mov
jp
repz
jno
movsl
dec
xchg
arpl
adc
fs
fucomi
cmpsl
dec
test
in
imul
clc
pop
mov
mov
mov
xchg
fistpll
in
aad
das
push
sar
push
loop
pop
stos
stc
sub
add
and
adc
fdivr
push
mov
movsl
xlat
and
xchg
stos
inc
insl
rolb
mov
fcoml
insl
jne
mov
xchg
push
subb
repz
cmc
mov
jbe
dec
in
jns
insl
scas
xchg
ret
push
jno
repz
lcall
imul
pop
mov
sub
mov
add
xchg
outsb
imul
inc
mov
addr16
fildl
cmp
test
ja
pop
mov
pop
jg
movsl
popa
fists
lret
and
jmp
rorl
add
test
dec
hlt
xor
rcll
push
repz
test
xchg
imul
xor
outsl
iret
mov
xor
out
cwtl
popf
cltd
xchg
xlat
push
fildll
xchg
ret
adc
call
mov
sti
xchg
sub
add
gs
test
fnstenv
movsl
mov
clc
loope
jle
call
push
icebp
cmp
jmp
cmp
mov
iret
out
jne
test
cmp
sti
arpl
xor
scas
iret
mov
fcomps
in
rcll
jmp
mov
jmp
lock
int
fstl
sbb
inc
cwtl
arpl
mov
lahf
insl
xrelease
lds
sub
cltd
sub
inc
xchg
xor
push
xlat
call
leave
imul
mov
mov
mov
adc
psubusw
leave
cmc
imul
imul
out
fldl
xchg
shl
cwtl
dec
int
xlat
loope
jbe
cli
sbb
adc
mov
push
and
cmp
sbb
xchg
aad
in
fcomps
dec
outsl
in
or
out
xchg
adc
movsl
shll
and
in
ss
lahf
mov
xchg
cmc
push
or
neg
push
sbb
clc
adc
out
lds
psubd
or
in
repz
das
mov
negl
push
lods
and
or
cmp
in
repz
cmpsb
filds
dec
decb
or
push
mov
push
cmpsl
imul
data16
lahf
jno
out
ffree
push
mov
mov
ja
add
mov
mov
adc
sarl
fwait
mov
lock
cwtl
lods
lret
and
imul
shll
xchg
fcmovnbe
pop
sbb
pop
lods
outsb
lds
dec
imul
fldl
add
cmc
inc
mov
loope
push
ror
push
xchg
repz
lret
pop
cmpsb
fcmovu
adc
cmp
jae
mov
aad
imul
push
in
lock
push
cmp
test
subl
inc
test
mov
sub
mov
xchg
or
fwait
pop
sub
in
adc
scas
jo
aas
xchg
movsl
repz
sbb
xlat
cmp
stc
add
sub
jecxz
loope
adc
mov
in
or
lods
fsts
or
popf
ss
shrl
mov
jp
test
test
ret
add
lock
outsl
mov
xchg
aad
cmp
loope
shll
aad
jmp
and
shr
push
cltd
dec
or
push
in
subb
imul
fwait
roll
aad
out
ret
pusha
sub
insl
js
mov
push
in
add
movsb
lea
in
divl
lahf
in
jecxz
int
loope
cwtl
jmp
sbb
xlat
arpl
xchg
cmpsl
adc
xchg
test
push
mov
lds
cmp
repz
sub
andl
stc
pushf
roll
ret
mov
mov
pop
jecxz
add
sbb
bound
mov
or
movl
shl
lock
ror
imul
mov
add
lea
xlat
or
out
push
lahf
add
jne
stos
lds
imul
xchg
adc
int
dec
test
dec
insl
fnstsw
xor
inc
jp
push
out
adc
push
xlat
ficomps
jecxz
iret
and
pop
sub
outsl
ja
xchg
mov
and
mov
inc
dec
xchg
sub
or
sub
out
jmp
ret
xchg
out
movsb
add
add
mov
jg
fwait
cmp
repnz
shll
addr16
std
inc
imull
sti
repnz
push
cltd
adcb
cmp
ret
loope
out
int
ret
outsl
jl
arpl
testl
lahf
jmp
int
out
imull
lcall
shr
roll
scas
add
stos
loopne
jge
js
test
hlt
adc
jecxz
cmp
lods
xlat
sbb
sahf
fsts
cmpsl
and
jnp
leave
mov
mov
mov
lahf
jne
lahf
mov
inc
arpl
or
adc
aad
xchg
or
fists
nop
lea
test
cld
mov
mov
mov
xchg
pop
push
pop
mov
jge
stc
add
iret
fwait
int
loope
sub
popl
test
shll
in
daa
ja
int3
adc
lret
mov
data16
sub
xchg
int
mov
fiadds
mov
shr
imul
mov
sub
iret
add
adc
jecxz
pop
fdivrl
xchg
jecxz
fnstsw
imul
movsl
mov
mov
push
sub
push
dec
cmp
fnsave
in
out
sbb
jl
xchg
filds
inc
mov
test
insl
cwtl
popa
outsl
mov
mov
movsl
push
cld
dec
pop
sub
dec
dec
dec
gs
or
data16
sbb
mov
mov
adc
je
xchg
in
lock
ret
gs
xchg
iret
or
xchg
cltd
cmp
out
lret
repz
ret
dec
stos
insl
popa
cmp
das
pop
xlat
fsts
std
add
sbb
imul
inc
addr16
or
fbld
iret
ficoml
mov
fisttpl
imul
ja
cltd
pop
push
sti
inc
adc
add
xchg
call
dec
or
add
iret
in
xchg
fstps
cmc
cmpsl
adc
out
or
lds
rcll
in
subb
cmp
xor
loopne
insl
test
mov
fisubs
ret
push
mov
iret
pop
test
lods
movl
leave
lahf
cmc
sub
js
arpl
in
outsb
mov
popf
ret
sbb
mov
push
mov
xchg
xchg
aam
adc
and
test
enter
mov
outsl
lea
sbbl
or
or
f2xm1
add
cltd
arpl
insl
lods
repz
sub
rorb
sbb
addl
enter
add
lahf
lods
insl
mov
jo
das
popf
fwait
inc
jne
pushf
xorb
push
iret
stos
aam
ret
add
mov
into
call
jne
pop
test
push
hlt
stc
arpl
jp
fcmovne
lock
jae
xchg
xchg
mov
cmp
cmpsl
test
int
repz
mov
test
pop
mov
dec
sarl
aam
and
mov
or
out
daa
loopne
popa
roll
aas
hlt
mov
in
aad
vsqrtsd
outsl
adc
imul
adc
in
hlt
imul
xchg
dec
lds
xor
arpl
jns
mov
push
add
movsl
loope
iret
xchg
in
subb
ja
clc
dec
xor
enter
fmull
jae
xchg
mov
jmp
dec
in
and
out
jecxz
sub
adc
int
clc
ja
mov
test
sbbl
sub
lahf
or
test
imul
notl
pop
and
xor
lea
adc
adc
mov
dec
mov
xchg
outsl
imul
mov
add
movsl
cltd
xchg
mov
xchg
insb
loope
xchg
pavgw
shll
out
enter
divl
aad
cmpsl
adc
mov
jne
cmp
fistl
and
adc
mov
arpl
jno
lea
in
in
pop
jns
jecxz
xchg
test
inc
inc
cmc
dec
jmp
orl
clc
mov
repz
jg
xor
or
and
adc
xchg
int
insl
sub
mulb
subl
cmc
mov
cmpsl
ror
mov
xor
cmpsl
xchg
aam
add
lods
loope
lahf
ret
dec
cli
test
movsl
mov
push
jecxz
out
cwtl
ss
cltd
sbb
subl
cmp
push
push
jae
cltd
jmp
pop
xor
lahf
fcomip
outsl
mov
loope
sub
push
add
int3
mov
lret
in
pop
bnd
lea
outsl
insl
cmpsl
cmp
jmp
scas
add
out
push
addb
xchg
lds
cmpl
fisttpl
jmp
jae
mov
xorb
push
lds
mov
mov
shl
lods
jg
jecxz
scas
xor
jg
dec
xchg
clc
fmull
lds
adc
loopne
adcl
jg
and
add
insl
mov
inc
or
or
mov
lcall
lret
lods
loope
jae
lds
in
mov
jae
shlb
iret
jecxz
pop
imul
mov
xchg
mov
adc
lds
in
mov
imul
outsl
popf
mov
mov
notl
dec
in
jmp
gs
dec
leave
lock
xchg
test
xchg
push
iret
add
xchg
int
in
pop
mov
sbb
cmp
scas
xchg
cmp
lret
lahf
lea
orb
test
jmp
push
gs
mov
fcmovnu
movsl
out
nop
fdivrl
cmc
dec
lods
negl
loope
sbb
in
xchg
lret
cmp
ja
lea
cwtl
es
add
lds
out
std
scas
inc
sahf
test
gs
push
cwtl
mov
xchg
mov
push
add
xorl
and
xchg
jg
scas
pop
outsl
scas
inc
jae
call
aaa
fildll
adc
add
xchg
shrl
inc
adc
leave
xchg
insl
ja
cmpsl
xor
iret
jne
js
scas
xchg
fcoml
movsl
fsub
mov
mov
jmp
bswap
sub
pop
and
cmp
xlat
inc
adc
fstp
scas
or
sti
sbb
imul
xchg
and
test
sti
mov
int
add
jecxz
lods
and
scas
clc
sbb
imul
inc
popa
lahf
push
pop
gs
xchg
mov
jnp
aad
sbb
cmc
fwait
mov
or
jno
movsl
test
xchg
fwait
aad
stc
adc
ss
inc
fwait
clc
fs
and
ja
jmp
rclb
sbb
bound
pop
push
mov
lret
jne
xchg
jle
cmp
outsl
xlat
adc
jmp
xchg
adc
push
jae
mull
or
cmp
aaa
test
lea
dec
jmp
out
test
add
shl
lea
out
jae
inc
imul
adc
sub
neg
sub
and
out
test
sbb
popa
pop
in
repz
mov
pop
int
fwait
adc
ja
adc
mov
fldcw
xchg
stos
and
mov
lock
lds
movb
fwait
mov
out
add
cmpsl
cmc
cwtl
es
sbbl
push
and
popa
test
adc
or
ja
in
scas
aas
pop
imul
xor
shrl
mov
ja
pop
dec
add
imul
popa
jl
add
leave
out
cwtl
cmp
jge
int
cmp
jne
test
call
aad
or
mov
push
dec
repz
sbb
loop
js
imull
decl
in
into
cwtl
dec
fistpll
pop
xlat
lahf
arpl
stos
insl
lds
mov
iret
pop
mov
mov
rorl
outsl
jno
jmp
jmp
cwtl
push
jns
sub
leave
scas
out
cltd
push
lods
inc
dec
scas
push
adc
add
jae
mov
lahf
jno
arpl
mov
shrb
add
lahf
js
ljmp
inc
ja
inc
inc
jae
xchg
outsl
clc
repz
int
cmpl
mov
jmp
mov
lea
rol
imul
movsb
out
xchg
cmpsl
add
mov
cwtl
mov
push
out
in
iret
mov
mov
xchg
jmp
jmp
in
ja
shll
sbb
xchg
fcoms
jne
sarb
pop
jmp
xchg
in
jae
cmpsl
xchg
dec
lock
jecxz
stos
insl
adc
add
mov
les
sti
and
pop
jmp
adc
mov
je
test
rcr
pop
jmp
out
sub
cmc
repnz
jmp
lods
push
inc
pop
aad
inc
pop
rorb
ret
and
cmc
insb
add
scas
mov
mov
imul
ret
xor
into
ja
mov
mov
test
into
fmuls
cltd
in
xchg
or
pop
daa
sub
sbb
int
sbb
xchg
xchg
inc
xchg
popa
xchg
lods
fldt
add
push
cmp
xor
xchg
cmc
inc
pop
arpl
push
mov
lds
in
xlat
les
leave
xchg
addr16
add
mov
rcll
pop
or
fcmovnb
out
xchg
ja
call
leave
loop
pop
shll
in
fwait
inc
repz
cld
ret
mov
add
popf
jno
push
addl
mov
scas
xchg
rcll
dec
outsl
fstpl
stc
fwait
popa
xchg
leave
out
std
jmp
or
mov
testl
mov
mov
pop
rcll
mov
out
lea
andb
sub
cmc
addr16
jmp
push
push
jnp
shll
lock
pop
lahf
xchg
mov
repz
mov
or
outsl
pop
dec
iret
movsl
popf
xchg
mov
divl
xchg
dec
mov
int
rorl
fisubl
cmpl
sahf
xchg
push
sbb
add
int
test
mov
or
adc
or
sbb
leave
outsl
cltd
mov
test
pop
pop
addb
lods
push
adc
adc
sub
cmpsl
test
sbb
xchg
popa
cmc
loopne
sti
pop
sub
inc
mov
pop
out
jno
outsl
pop
and
push
hlt
popf
ret
ficompl
popa
stos
aad
aam
mov
lret
pop
xor
xchg
dec
mov
arpl
cli
sub
shrl
mov
pop
dec
fstp
out
sub
push
fwait
push
add
xchg
fstpt
ret
pop
test
negl
mov
subb
sarl
jno
mov
loop
mov
fwait
ret
outsl
loope
icebp
or
cmp
ja
jecxz
fldenv
scas
cmp
push
add
pop
mov
ret
popl
js
jmp
aaa
stos
pop
insl
xor
mov
pushl
sbb
pop
lret
jecxz
test
jne
xchg
mov
es
cltd
out
jns
lahf
push
push
mov
pushl
sbb
adc
mov
jecxz
fstpl
loopne
sub
adc
mov
push
add
int
aam
or
mov
xchg
aad
subl
mulb
popf
out
test
test
jnp
pop
repz
ror
addr16
push
jecxz
lret
in
jecxz
push
lock
mov
cwtl
scas
test
aad
jne
adcb
gs
stos
call
pop
inc
fsubs
lods
das
shl
movsl
push
call
and
push
pop
fisttpll
adc
add
out
push
data16
cwtl
xchg
int
cli
out
sbb
cmc
xchg
fwait
mov
rcr
lods
xor
test
pop
loop
in
lahf
das
mov
pop
or
cmp
dec
imul
push
mov
xchg
sub
nop
cltd
popf
lahf
insb
xchg
inc
xor
xorl
xchg
jae
jecxz
mov
or
insl
ret
cmpsl
dec
sbb
lea
mov
sbb
in
or
out
les
cwtl
test
rorl
aad
out
in
adc
adcl
and
test
mov
xchg
loope
add
jmp
lock
pop
hlt
js
out
mov
inc
lahf
js
lea
jne
fiadds
iret
arpl
dec
lret
push
pop
push
in
imul
lods
jae
cmpsb
movsl
pop
stos
outsb
out
fs
lahf
test
stos
mov
in
mov
and
jl
xchg
sub
test
sbb
lea
repz
cld
inc
dec
add
out
mov
jmp
pop
fwait
iret
lock
inc
xchg
in
add
mov
and
add
rolb
popf
fisubrl
add
test
insl
leave
lret
dec
aad
jmp
xchg
jne
dec
xchg
jmp
sub
mov
pop
scas
imul
cltd
sbbb
inc
sbb
aad
pop
imul
lea
xchg
jmp
clc
in
xchg
dec
stos
leave
js
loop
arpl
repz
and
aam
clc
lods
fstps
mov
mov
sbb
aad
cmp
xor
push
daa
adc
iret
xchg
jecxz
rolb
adc
jmp
movsl
popl
ret
loope
int
ret
xor
add
or
loopne
out
ljmp
fwait
out
test
imull
loopw
sbb
out
sub
test
xchg
lahf
cmpsl
pop
rep
mov
cltd
add
and
and
add
or
std
clc
lds
fildl
mov
in
mov
pushf
call
out
pop
mov
inc
jl
xchg
and
push
popa
jecxz
xlat
lahf
ror
mov
lds
push
out
out
mov
outsl
jae
mov
mov
mov
push
xlat
lock
imul
lods
lret
fstps
movsb
ja
mov
and
xlat
ret
jb
dec
fildl
aas
cli
int
inc
pushf
cwtl
sub
imul
xor
pop
ffreep
cmpl
inc
inc
scas
test
xor
pop
cs
pop
lret
xor
jge
jecxz
out
call
cwtl
mov
rcrl
pusha
out
rorb
xchg
ret
add
popa
scas
mov
add
imul
push
cmpxchg
lock
xchg
lds
mov
xchg
repz
int3
inc
data16
ret
enter
movl
stos
lods
inc
mov
jmp
push
adc
stc
adc
lods
mov
arpl
mov
mov
mov
dec
sbb
clc
lahf
ror
repz
in
xchg
push
fistpl
lea
pop
mov
jecxz
shr
test
mov
xchg
repz
push
out
int
cmp
adc
xchg
fwait
mov
mov
mul
rclb
or
cltd
xchg
xchg
mov
sub
pop
mov
in
out
outsl
push
test
cmpsl
add
xchg
cmc
loope
jae
sbb
jne
mov
gs
add
inc
or
xchg
andl
js
jmp
fmul
adc
pop
lea
bound
mov
ffree
mov
shrb
sbb
xor
add
gs
fwait
out
test
xchg
dec
mov
jne
mov
fwait
loope
movsl
out
mov
scas
movsl
les
push
popa
xlat
mov
dec
cwtl
shll
popa
fcmovnu
out
in
imul
icebp
jmp
imul
out
rcrb
jecxz
push
imul
les
cwtl
and
testl
adc
rcrb
loope
test
pop
xlat
int
cmc
fs
jmp
mov
or
in
or
jecxz
push
mov
cmc
xor
sarl
lods
fstpt
adc
add
xchg
inc
push
pop
clc
mov
mov
cmp
outsl
int
jmp
fisubl
loop
mov
loope
mov
out
xchg
sub
arpl
mov
sti
iret
in
outsb
push
xchg
inc
lea
fsub
xchg
push
xchg
icebp
mov
cwtl
ds
sbb
cli
jns
xlat
mov
add
pop
lods
int
stc
pop
adc
loopne
gs
nop
jmp
lds
xchg
xlat
jns
loope
int3
push
repnz
dec
fsts
mov
arpl
in
repnz
sub
mov
pushf
jmp
stc
sti
dec
cltd
push
jae
movsl
lret
fcmovbe
push
adc
dec
or
dec
mov
or
xor
repz
test
dec
add
lds
addr16
iret
push
jmp
imul
jae
rcll
mov
mov
mov
jg
jecxz
xchg
jno
cmpsl
mov
outsl
out
mov
sbb
adc
test
add
gs
jg
scas
aad
movl
or
add
xlat
rcll
loopne
stos
xchg
sub
test
jmp
dec
cmp
shll
lahf
outsl
int
xchg
out
mov
outsb
or
sahf
mov
cmp
int
popf
add
mov
mov
movsb
or
js
mov
xlat
mov
mov
iret
xchg
mov
lods
push
jmp
cltd
xchg
jecxz
clc
dec
rcrl
in
lret
dec
lahf
mov
xchg
lcall
mov
mov
push
cltd
mov
ret
out
in
cmc
xchg
ljmp
lods
imul
push
pop
roll
xchg
lea
lds
in
les
xlat
push
mov
rcll
xchg
movsl
mov
gs
push
sbb
xor
inc
imul
repz
repnz
xchg
cmp
movsl
jae
cmpsl
sbb
jns
sbb
adc
sbb
iret
test
mov
adc
ja
loope
popf
sub
jb
add
cmp
cwtl
rcll
cmp
test
pop
stos
icebp
sbb
push
testl
popa
rcrl
mov
push
add
and
xchg
addr16
lahf
leave
or
xor
in
jmp
popa
lahf
cmpl
xchg
cmc
leave
lds
sub
adc
gs
call
add
xchg
push
aam
sbb
xchg
lret
aad
adc
pop
aas
jmp
pop
add
cmpsl
fwait
lret
outsb
inc
jae
mov
add
bndstx
stc
mov
das
outsl
adcl
out
or
and
enter
pop
mov
mov
fstpl
xchg
test
xchg
sbb
ja
out
divb
mov
scas
rcrb
cmp
test
out
int
sub
leave
mov
sbb
lahf
popf
les
sub
repnz
andl
mov
gs
ret
stc
inc
into
inc
cwtl
in
hlt
outsl
cmp
inc
ja
shll
xor
in
fwait
dec
xchg
sbb
loop
mov
push
popa
adc
sbbl
test
jne
mov
in
nop
sub
push
into
add
mov
adc
or
lds
push
in
cltd
ds
insl
mov
mov
jecxz
ja
cld
leave
idivl
in
ret
fxam
xchg
pop
subl
jns
loope
xchg
ret
mov
fistpl
jns
lret
popf
jecxz
push
imul
ret
push
cmp
dec
mov
jns
scas
out
sarl
gs
inc
push
jne
shlb
jae
xchg
mov
loope
mov
inc
sub
sbb
push
popf
adc
test
jge
mov
jmp
xchg
jmp
cmpsl
dec
inc
push
shll
cmc
test
xchg
ret
test
adc
or
cltd
scas
cmp
outsl
test
mov
js
popa
imul
push
inc
jmp
out
dec
mov
lret
scas
testl
imul
sub
cmp
rcll
cmp
movsl
sbb
fdivrl
pop
pop
add
add
inc
dec
int
loope
lret
sub
pop
xchg
sbb
iret
leave
jne
data16
xlat
mov
push
mov
shll
mov
loope
ret
mov
jno
gs
mov
xchg
jecxz
pop
arpl
imull
int3
adc
pop
mov
outsl
cmpsl
rcr
push
out
mov
jns
call
mov
and
movsl
test
pop
mov
mov
xchg
dec
jo
mov
xchg
lods
arpl
push
lds
pop
sub
pop
out
xchg
lahf
das
sbbl
mov
xchg
lds
call
cmp
sbb
lahf
xchg
sbb
mov
lods
sbb
mov
test
lods
in
pop
push
lahf
mov
sbb
imul
inc
ss
out
cmc
neg
cmpsl
loopne
imul
or
pop
or
lods
out
lds
cmp
mov
insl
inc
or
lret
aad
fucomip
subl
ret
rol
lret
stos
shrl
and
add
out
loop
mov
jne
pop
jno
iret
mov
and
out
test
lahf
cmpsl
and
cmp
xchg
fcomi
imul
rcr
cwtl
lds
cmpl
mov
cmp
addr16
add
setl
in
movsb
fbstp
dec
jecxz
out
aam
add
mov
jne
add
imul
dec
imul
lea
jmp
mov
adcl
adc
jle
xchg
lods
dec
mov
jnp
aad
ja
inc
je
cli
adc
jmp
or
xchg
dec
das
fnstsw
cmpsl
dec
gs
jne
or
lahf
add
push
gs
insl
cltd
cmp
imul
cli
add
mov
scas
outsb
inc
xor
and
imul
in
vpunpcklwd
aaa
mov
mov
cwtl
ret
mov
pop
outsb
or
int
cmp
call
imul
and
xchg
lret
out
sarl
mov
dec
ja
or
outsl
fistl
popa
mov
cli
add
xlat
faddl
jae
mov
aad
add
push
push
sbb
xchg
xlat
in
jo
movsl
lahf
sbb
or
jge
orb
push
lret
testl
xor
xor
ds
cmpsl
in
outsb
fdivrs
fbld
or
test
or
or
xchg
out
roll
cmp
jb
sub
mov
xlat
in
out
fldt
imul
out
stc
xchg
xchg
sub
ret
test
scas
mov
jmp
and
stos
repz
mov
dec
mov
cmp
leave
hlt
popa
sub
push
xlat
lea
push
pmaxsw
aad
sub
in
shl
push
inc
jmp
pop
jl
xchg
arpl
mov
insl
gs
lock
cmpsl
les
pop
or
out
insb
in
pop
mov
jmp
int
or
lock
xlat
inc
push
mov
pushf
add
jecxz
xor
xlat
pop
xchg
rolb
dec
fistpl
stos
cwtl
into
xchg
jecxz
shrl
adc
adc
or
aaa
sub
dec
test
bound
or
fwait
add
mov
pop
shll
adc
inc
mov
or
lods
popf
xor
mov
rclb
aas
imul
xchg
adc
out
or
lret
iret
test
insl
aad
xchg
ret
mov
sub
rcll
test
mov
mov
lds
rcrl
out
or
imul
fimull
std
loopne
sub
pop
jecxz
outsl
fnsave
and
movsl
push
test
call
xchg
jecxz
mov
sbb
hlt
cmp
jne
mov
loopne
outsl
pop
hlt
dec
test
aad
mov
xor
mov
jecxz
popf
mov
movsb
lods
jb
mov
xchg
gs
add
iret
sub
add
mov
fld
inc
scas
xchg
sbb
out
push
lahf
adc
xor
xchg
shll
or
mov
pusha
test
in
repz
mov
int
or
cs
jg
jecxz
mov
dec
in
outsb
mov
xchg
jmp
and
outsb
inc
fldl
insl
adc
sbb
sub
imul
pop
inc
das
cltd
scas
mov
cwtl
loopnew
jmp
lret
inc
jno
stc
ljmp
fnstcw
mov
outsl
inc
xchg
push
xor
shrl
rorl
add
testb
fadd
jne
push
repz
subl
js
cmc
xchg
gs
jmp
ljmp
fwait
repz
sub
inc
push
cld
xchg
movsl
adc
inc
pop
sti
xchg
jns
cltd
mov
scas
shll
push
mov
sub
sub
sub
lahf
push
movsl
orl
jae
leave
lds
aad
in
or
cmc
ds
rcll
add
mov
lods
cld
jmp
and
cli
xorl
ret
sub
rcr
cmpsl
sarb
int
and
adc
mov
adc
js
mov
pop
mov
nop
pop
mov
ret
test
cmp
mov
lret
xchg
xor
mov
add
fstp
jbe
xchg
repz
sub
out
scas
fisttpl
cld
jle
pop
xchg
xchg
dec
js
repz
lret
push
adc
or
push
js
ret
pop
in
xchg
test
subl
lahf
jbe
push
inc
xor
mov
inc
sub
sti
popl
xchg
ja
int3
ret
cmpsl
sbb
xchg
subl
mov
pop
shrl
xchg
in
cld
xor
xchg
dec
push
pop
out
out
pop
int
xor
inc
cmc
xlat
xchg
in
mov
in
fists
mov
adc
insl
mov
shll
test
movsb
test
roll
lods
adc
scas
fists
push
mov
pop
mov
mov
push
aam
movsb
addl
jg
aad
testl
push
enter
cli
in
cld
lds
mov
in
add
pop
mov
or
in
ret
cmc
cwtl
stc
shrl
loop
notl
shrb
sbb
daa
jne
dec
jmp
shll
test
mov
push
sbb
ret
test
leave
mov
pushf
sub
andb
in
gs
jg
and
mov
lahf
jecxz
and
movsl
test
or
push
in
push
adc
outsl
push
test
rcrl
xor
sub
cmp
test
ret
and
mov
ja
xchg
lds
sar
xor
arpl
jno
sub
mov
cmp
adc
push
adc
adc
popf
stos
jne
rclb
xchg
in
or
push
xor
xor
scas
das
xlat
in
test
jecxz
iret
cmpsl
inc
xchg
sub
dec
repz
and
pop
out
jmp
aad
xchg
lret
out
and
loopne
jecxz
in
jmp
sub
call
sti
sub
dec
fnstsw
repz
xchg
ret
imull
mov
jnp
loope
pop
lahf
lea
popf
aad
scas
lahf
mov
cmp
pop
insb
inc
test
sbb
or
xlat
addl
in
and
test
jo
mov
lret
js
fldt
add
outsl
stc
imull
shrl
pop
addr16
sub
pop
mov
cmp
test
or
in
lcall
sbb
stos
pop
nop
movsl
and
jmp
leave
aad
shr
adc
jnp,pt
popa
or
orl
add
arpl
fwait
loope
in
add
rorl
shrl
mov
xor
cmc
mov
stos
movsl
lea
xor
fildll
inc
int3
in
add
lods
imul
ja
out
xorb
arpl
jae
out
dec
xchg
ljmp
das
aam
push
add
xchg
pop
stos
loop
dec
movsb
imul
shrl
sqrtps
cli
idivb
xchg
roll
int
and
jnp
or
aam
dec
xchg
jae
iret
fsubrs
sbb
arpl
push
pop
xchg
lds
shlb
dec
xor
add
mov
in
arpl
lods
push
xchg
test
shll
iret
xor
mov
xchg
clc
in
mov
push
sub
mov
inc
jb
fadd
data16
adcl
adcb
notl
imul
hlt
popf
jecxz
pop
sbb
imul
aad
add
mov
mov
mov
xorb
xchg
add
fwait
movsl
loope
inc
andl
insl
add
lret
test
add
mov
out
in
in
xor
fwait
lods
inc
in
ja
push
sbb
jae
add
xchg
cmpl
testl
sbb
ror
arpl
outsl
add
mov
add
ret
stc
unpckhps
cmp
jmp
roll
cwtl
fidivrl
outsl
imul
in
xchg
addr16
movsb
add
push
jbe
mov
ffree
leave
xchg
outsl
out
testb
cld
sub
sub
adc
into
jae
insb
or
shll
outsl
imul
sbb
jecxz
das
adc
adc
mov
lea
ja
insl
xor
shrl
out
movsl
into
gs
outsb
mov
jmp
mov
pop
sti
mov
jge
fstl
pop
adc
imul
and
call
je
mov
lret
out
push
xor
fmuls
les
cmp
aam
dec
xchg
roll
mov
jge
scas
jp
jle
sbb
cmpsl
iret
mov
out
cmp
xchg
mov
lea
mov
fs
out
mov
inc
mov
iret
in
sti
gs
lahf
test
arpl
inc
rcrb
mov
or
fwait
xchg
xor
rcrl
and
int
adc
ja
xlat
stc
add
jmp
xchg
aad
shrl
sub
lahf
scas
fs
xchg
outsl
lahf
out
jo
std
adc
lods
iret
divl
pop
scas
scas
add
lahf
test
pop
movsb
iret
ret
aas
mov
jecxz
cmpsl
push
test
sbb
orl
call
rcll
leave
imul
push
sub
dec
shll
mov
xor
inc
repnz
mov
add
jns
jg
orl
scas
popf
jecxz
stc
stos
hlt
lea
roll
sub
shll
jne
ret
fs
pop
lds
adc
shll
pop
mov
test
movsb
out
test
jmp
or
mov
jge
loope
inc
or
in
lahf
mov
xchg
js
pop
cmp
jae
push
dec
pop
popa
adc
sub
call
js
lods
mov
pop
adc
fwait
push
das
iret
xlat
xor
out
mov
ret
add
scas
cmc
test
test
mov
movsl
and
scas
in
add
xchg
xchg
movsl
pushf
xchg
popa
ljmp
xlat
fistpl
fadd
cmpsl
mov
out
cmpsl
jecxz
in
fwait
xchg
fistps
jp
shll
popa
loopne
dec
jo
pop
lods
jo
outsl
lahf
or
xlat
sbb
add
clc
jecxz
cmp
xchg
pop
lret
lahf
ret
es
fmul
addr16
test
mov
loopne
cmpsb
or
leave
mov
loope
push
mov
xchg
xchg
inc
das
inc
je
push
aad
cmpsl
add
insl
inc
add
sbb
testl
repz
out
and
ret
addl
ss
inc
insl
pushf
test
test
sbb
fld
xlat
dec
loopne
mov
imul
xlat
pop
inc
dec
xchg
lahf
sbb
popa
es
shrl
xchg
mov
loopne
arpl
mov
xchg
sub
inc
lret
hlt
and
sub
adcl
inc
ja
scas
sbb
xor
ficoml
ret
fsubr
push
sub
inc
jmp
or
jnp
dec
adc
or
imul
adc
lds
xlat
inc
mov
shll
repz
or
ds
and
cwtl
ja
sub
push
sub
sahf
cltd
sti
sti
pop
mov
test
jno
dec
int
and
rolb
insl
scas
pop
push
rol
repz
aas
xor
test
cwtl
ret
lds
rcrl
ljmp
pop
mov
sub
mov
es
shr
xchg
pop
dec
or
outsl
je
fs
fbstp
adc
inc
cmpsl
sbb
cltd
jecxz
push
sub
mov
inc
popf
ja
cmp
nop
arpl
mull
test
cmc
mov
sbb
pop
adc
popa
or
in
pop
mov
adc
cmp
imul
sbb
xchg
xchg
jecxz
pop
cmp
enter
ret
and
iret
aas
int
xchg
cmp
stos
jecxz
lret
pop
pop
pop
sbbl
inc
cli
mov
xchg
cmp
lret
loope
push
sub
mul
imul
inc
stc
lret
mov
cmpsl
sub
call
in
gs
scas
push
test
dec
aad
pop
popa
xor
call
inc
xor
push
lret
and
clc
push
xchg
leave
ja
mov
add
cmc
fisubs
pop
pushf
ficomps
movsl
repz
arpl
lds
xor
mov
out
loope
pop
loopne
dec
lahf
cwtl
subl
xchg
movsl
andb
pop
mov
xlat
fisttpll
jmp
lahf
lcall
hlt
adc
or
mov
insl
int
mov
and
sub
shl
jmp
mov
mov
pop
xchg
stos
mov
xchg
inc
dec
call
ja
mov
out
lea
xchg
nop
push
lds
mov
repz
test
das
fnstsw
jmp
xchg
andl
dec
imul
fs
jne
mov
mul
xchg
out
fdivs
jl
fdivl
and
add
flds
pop
fsubrs
inc
lcall
mov
adc
sub
outsl
sarl
movsl
fldcw
fdiv
mov
out
jecxz
cwtl
add
test
out
push
sbb
out
insl
jmp
dec
fucomi
cmp
jne
outsl
xor
jnp
loopne
cmp
aas
orl
rorl
daa
dec
iret
int
stc
out
shll
lds
ds
scas
pop
sahf
iret
imul
inc
mov
cmpsl
iret
cmp
popa
jne
or
in
arpl
leave
fistpl
push
out
cwtl
xchg
ret
dec
in
stos
jecxz
mov
movsb
mov
fcmove
mov
enter
jmp
push
add
lret
aad
mov
add
mov
adc
add
mov
sbb
xor
jo
mov
testl
loop
xchg
mov
xchg
fwait
in
sbb
sbb
mov
xchg
leave
lds
sub
push
cmp
ja
fwait
adc
lds
dec
imul
sub
es
sbb
mov
notl
adc
popa
mov
idivl
out
dec
cwtl
les
das
adc
int
adc
xlat
or
aam
jne
mov
cmc
sbb
lea
sbbb
popa
inc
cli
or
adc
or
push
add
mov
shl
xchg
push
cmp
push
scas
xchg
test
adc
stos
mov
mov
push
ja
movsl
sbb
mov
xor
out
popa
adc
or
xchg
dec
lea
and
add
out
xchg
dec
adc
add
mov
cwtl
cmp
adc
sbb
cmp
and
jo
lahf
xchg
outsl
xor
and
movsl
add
call
xchg
and
adc
leave
lret
arpl
push
sub
fisubl
mov
sub
std
movsl
inc
roll
and
decl
movsl
xor
es
or
int
mov
pop
andl
push
dec
sub
jecxz
rcrl
xchg
test
lds
sbb
inc
cli
lods
ret
mov
movntq
out
add
xchg
mov
pop
pop
and
leave
cmc
sbb
xor
stos
adc
lea
or
sti
popa
xor
rol
adc
xchg
mov
repz
aaa
and
ds
ror
add
ret
mov
lcall
dec
add
jne
push
inc
cmp
outsl
addb
mov
cli
in
push
xor
imul
push
mov
scas
inc
sub
outsb
jnp
dec
addl
push
sbb
push
mov
add
xchg
mov
outsl
daa
rcrb
add
mov
jae
mov
jne
gs
outsl
mov
add
cmc
cli
lds
test
cwtl
test
jbe
sbb
add
dec
popf
jg
lret
cli
js
fwait
pop
jle
mov
xlat
lret
and
mov
xchg
pop
mov
aad
inc
adc
icebp
pop
pushf
push
sti
movsb
dec
inc
cmp
sti
mov
out
lret
adc
div
mov
clc
in
jmp
lret
jmp
aam
addr16
cmp
shll
pop
mov
sbb
leave
fisttpl
outsl
cltd
loope
data16
jmp
sbbb
iret
lods
xor
test
mov
sbb
lods
cmp
mov
lock
push
push
xchg
jecxz
adc
out
push
push
enter
cmpsl
nop
cmc
int
lods
enter
mov
or
mov
shl
or
cwtl
test
inc
mov
mov
jp
xchg
adc
push
outsl
lret
leave
repz
push
xchg
jecxz
xchg
jmp
iret
inc
jns
scas
loope
fstl
xchg
addr16
xchg
andl
sub
aas
loope
mov
leave
mov
and
adc
enter
cmp
test
jb
cwtl
pop
jmp
mov
imul
jmp
pop
mov
pusha
jge
popf
pop
test
adc
and
xor
hlt
jae
fwait
sbb
movsl
loope
inc
or
ds
xor
lods
cld
ja
insl
sbb
arpl
dec
xadd
cld
sbb
int
xchg
scas
out
cwtl
iret
testb
test
out
cmpl
dec
cwtl
lret
rcrl
xchg
scas
xor
mov
rcrl
fistpl
adc
ja
mov
mov
movsl
out
jmp
sar
push
clc
int
in
and
fdivr
or
repz
mov
xchg
lods
icebp
push
fcmovb
outsl
cwtl
cmc
sbbl
cwtl
mov
inc
mov
xchg
pop
leave
add
xchg
ljmp
popf
add
ret
cltd
jecxz
xlat
sbb
outsl
imul
test
cmp
xchg
adcl
mov
ja
cmp
lods
imull
mov
dec
ret
jne
cwtl
push
jl
cltd
dec
out
xchg
in
pop
xchg
xchg
push
dec
fmuls
jl
ljmp
adc
frstor
cltd
or
repz
iret
xchg
scas
jno
aad
add
stos
jb
loopne
inc
out
xor
mov
insl
aad
repz
cltd
pusha
dec
mov
fwait
cmp
dec
pop
add
mov
cli
aam
seta
mov
mov
cmpsl
pop
aad
fldln2
ret
jp
outsl
sub
push
inc
lds
pop
insl
fists
loopne
dec
sbb
shrl
dec
xchg
fwait
dec
rcl
fmuls
iret
push
insl
lds
mov
xor
adcl
fisttpll
mov
in
int3
or
ja
fs
ret
push
push
inc
xchg
xchg
gs
mov
gs
cs
pop
pop
in
icebp
add
fiaddl
adc
ja
mov
ret
or
jmp
pop
fistl
adc
cmp
jnp
jg
orl
lds
lea
jmp
in
ja
in
mov
orl
jne
inc
jae
dec
push
pop
add
clc
sbbl
mov
sbb
repz
aam
and
stos
push
push
test
push
les
jle
imul
fst
hlt
pop
dec
andl
push
mov
fsts
xlat
ret
lret
imul
jno
fxam
pop
push
fisttps
mov
insl
and
lret
sbb
mov
arpl
xchg
subl
aam
xchg
rcrb
xchg
add
int3
adc
orb
aad
lahf
imul
pop
sub
cltd
aad
jns
not
stos
push
popa
lahf
out
xlat
mov
scas
pop
andl
add
mov
out
sarl
mov
in
les
shr
mov
pop
jne
dec
mov
inc
enter
adc
imul
pop
leave
cmp
out
mov
shlb
mov
jnp
stos
fcompl
cmp
popa
iret
cmp
movsl
roll
ja
loope
xchg
jg
repz
jmp
sub
lods
hlt
jnp
scas
mov
test
loope
jns
sarl
xchg
add
test
ja
shlb
push
ret
or
lods
loopne
bswap
xchg
iret
stos
cltd
cmp
test
fisttps
dec
inc
sbb
sbb
cmc
jecxz
add
ffree
ret
cli
mov
add
cld
and
cmp
mov
idivb
mov
xchg
idivb
fildl
insl
out
cmc
mov
xchg
testl
divl
call
out
push
cmc
fisttpll
pop
xor
xchg
ja
mov
lock
stc
stos
js
xchg
gs
mov
cmp
xchg
jmp
fstps
shll
iret
outsb
test
push
sti
xchg
inc
andb
arpl
push
fnsave
xlat
je
movsl
cmc
outsl
test
test
enter
sbb
addr16
sub
sub
arpl
testb
scas
mov
outsl
orb
cmp
cmpsl
adcl
lock
in
xchg
cmp
in
cmc
push
in
mov
cli
pusha
sbbb
mov
dec
nop
test
fldt
pop
rcrl
cmpsl
jmp
push
xchg
js
xchg
mov
out
cwtl
out
xchg
js
popa
ja
imul
arpl
lahf
dec
xchg
mov
xchg
vprotw
mov
iret
cmp
xlat
enter
dec
xchg
repz
loopne
dec
sub
out
sarl
ja
mov
lahf
cmpsl
jno
in
xchg
and
loope
and
push
gs
mov
mov
lea
and
popa
sarl
cmp
mov
gs
inc
leave
frstor
xchg
jmp
jns
mov
jne
cwtl
ret
adc
roll
adc
pop
inc
cmp
mov
cmp
loope
push
lahf
ja
pop
not
loop
cmp
rol
cmpsl
xchg
test
out
cmp
imul
aad
js
jecxz
fistps
xchg
fnstenv
xlat
aad
and
inc
gs
jmp
nop
in
sub
mov
scas
popl
lahf
test
ret
xchg
popf
or
mov
shr
fs
fld
dec
adc
hlt
notl
xchg
mov
sbb
mov
mov
rcll
std
mov
in
dec
jns
dec
int
leave
xchg
push
lock
movsl
cmpsl
imul
add
xorb
andb
roll
push
xor
pop
or
cwtl
lods
xchg
popf
jecxz
rclb
hlt
rorl
dec
insl
push
test
xchg
iret
gs
mov
rorl
push
jmp
pop
mov
cmpsb
push
imul
xchg
scas
cmc
lods
fidivl
rcl
lds
and
and
pop
mov
insl
or
sub
popf
lock
outsl
loope
and
sub
add
pop
test
pop
arpl
imul
xlat
push
outsl
add
mov
mov
imul
outsl
cmp
sbb
gs
test
pushf
roll
jmp
sbb
imul
pop
mov
fmulp
les
rorl
std
cld
jmp
out
push
xchg
pop
pop
in
out
mov
fwait
mov
cmp
sub
cld
ja
cwtl
pop
popf
cmp
mov
test
adc
push
popf
mov
aad
mull
xor
bound
imul
jae
pop
or
mov
mov
outsl
add
lods
fcmovnb
cwtl
imul
mov
jne
mov
lret
and
add
ret
cmp
out
sub
repz
lret
addr16
insl
loop
les
add
clc
mov
popa
mov
or
mov
popa
fwait
xchg
aad
fwait
adc
jmp
jae
cwtl
inc
aad
fcom
outsl
jg
jecxz
loope
iret
xchg
test
lahf
test
fs
aas
mov
cld
jne
js
jmp
pop
inc
cltd
mov
jb
xchg
xor
scas
pop
sub
js
lret
ret
repz
sub
out
test
push
lahf
push
cld
ja
jbe
jg
cmpsb
cmp
add
dec
ja
push
jnp
popf
in
adc
fucomi
fwait
rcll
aad
repz
pop
test
bound
rol
cmp
jnp
mov
adc
gs
adc
or
xchg
mov
or
mov
add
pop
fdivrs
es
mov
jl
cmp
pop
xlat
mov
dec
outsl
subl
repnz
cmc
ret
imull
sub
cld
scas
cld
aad
addl
jmp
pop
shll
jno
aas
movsl
cmp
ret
loope
sbb
scas
leave
lret
ud1
mov
addr16
in
inc
into
push
xor
shrl
imul
movl
negl
fdivrp
andl
ficoms
or
loope
iret
jno
shr
shlb
outsb
dec
repz
and
jp
ret
add
imul
adc
add
fcmovnb
mov
adc
aaa
jle
inc
addr16
xchg
popa
out
sbb
arpl
mov
shrb
fistps
out
inc
lds
fistps
iret
mov
lea
inc
mov
out
filds
cmpsl
mov
sbb
lds
out
xchg
push
iret
jg
ja
lock
imul
out
in
mov
sbb
mov
leave
xor
popa
pushf
ret
js
mov
push
imul
iret
cwtl
dec
xor
dec
lahf
or
imul
inc
ss
fld
adc
test
arpl
add
in
rcrb
xchg
mov
pop
xchg
inc
push
mov
cltd
mov
addr16
adc
xor
arpl
subl
test
add
lods
fcomps
popa
inc
mov
xor
aad
andl
pop
in
push
paddb
sub
cmp
adc
mov
xchg
insl
push
fcomps
pushf
jg
mov
mov
cmpsl
or
add
fildll
sbb
in
rcr
push
or
gs
jmp
push
andl
mov
push
loope
pusha
ret
add
push
dec
mov
lds
xchg
test
mov
out
test
clc
mov
arpl
xor
fcompl
int
mov
gs
int
rcrb
xchg
loopne
shll
add
jne
lds
out
stc
inc
lea
cwtl
mov
dec
pushf
iret
sbb
inc
test
movsl
cwtl
lcall
lds
fistpl
mov
xchg
rcl
scas
xor
lret
out
mov
fwait
cmpsl
lds
xchg
insl
mov
xchg
push
mov
orl
rcll
stos
mov
lahf
fwait
fs
arpl
mov
mov
cmc
fsubl
pushf
adc
in
sub
mov
mov
mov
scas
out
adc
das
ja
mov
fildl
xchg
mov
push
fidivrl
xchg
mov
out
xor
jp
cmpsl
rorl
cmp
imul
xchg
sub
movsl
clc
push
fwait
fwait
mov
cmpsl
div
roll
xchg
stos
insl
lds
mov
jl
cmp
cmp
dec
bound
add
shll
adc
das
jae
enter
out
cwtl
sub
addr16
mov
movsl
mov
add
repz
xor
ret
xorl
out
mov
gs
cmc
add
fldl
xchg
fstps
jge
adc
jmp
mov
mov
cmp
incl
insl
adc
mov
mov
and
sbbb
sarl
enter
iret
test
mov
pop
xlat
xchg
cmp
shll
popf
ds
mov
comiss
subl
mov
push
shll
inc
dec
xchg
imul
cwtl
and
fildll
sub
or
out
mov
lods
mov
and
outsl
leave
add
jne
js
int
arpl
cmp
ja
push
loope
jne
movsl
pop
lods
gs
cwtl
dec
in
stc
test
lods
repnz
jno
movsb
xchg
clc
flds
pop
mov
cltd
inc
dec
mov
andl
pop
scas
mov
in
cwtl
pop
mov
jmpw
test
repnz
jmp
sub
cmp
divb
xchg
jmp
adc
rorl
adc
sarb
dec
push
dec
test
test
in
shll
add
leave
insl
lds
rcll
in
movsl
xchg
pop
jmp
repz
scas
jne
fstps
pop
push
or
xor
add
add
mov
push
add
in
push
lds
mov
vaddss
cltd
imul
cli
sbb
dec
sbb
cmpsl
mov
cmc
scas
jae
leave
jecxz
sbb
jns
scas
jg
jmp
pop
repz
dec
stc
gs
sub
repz
cmpb
bnd
outsl
loope
xchg
ror
mov
cmp
dec
fisubs
add
in
or
cld
aam
addr16
or
stos
imul
lahf
xor
ret
mov
ret
cmpsl
lahf
stos
daa
jae
outsb
cwtl
xor
gs
loope
imul
mov
jecxz
fisttps
loope
scas
mov
mov
sub
test
lret
dec
or
test
int
or
cmpsl
add
adc
insl
cmpsl
out
lcall
lret
xchg
xchg
aad
cmp
push
push
out
sub
in
scas
add
cmpsl
loope
mov
movl
or
outsb
lock
mov
ret
dec
lea
inc
add
test
mov
or
cwtl
ss
fnstenv
mov
fcompl
mov
jge
rcll
xchg
test
insl
xchg
lret
cwtl
leave
push
cmp
fwait
gs
pop
xlat
cmpsl
xor
loopne
bound
cltd
in
pop
mov
mov
sbb
xor
out
cwtl
popf
stc
arpl
mov
insl
test
pop
xchg
out
mov
jmp
fildll
fldenv
movsl
mov
sbb
clc
adc
lret
jmp
mov
gs
xorl
pop
fdivr
add
addr16
cmc
sti
ret
out
outsl
addr16
jno
out
jnp
cmp
jno
lret
cmp
jns
loope
xchg
cmc
stos
mov
mov
int3
gs
inc
push
cmp
das
cmc
xchg
ljmp
add
jmp
xchg
repz
in
lods
fwait
inc
xchg
sub
jecxz
int
xchg
lock
mov
fucomi
mov
shrl
inc
sub
adc
xchg
pop
test
mov
inc
sti
punpckhwd
jne
add
mov
outsl
mov
cmpsl
or
cmp
leave
lods
popa
aad
lock
and
cmp
rcrl
push
leave
and
jo
and
clc
shrl
mov
jno
ds
popf
and
cmc
adcl
pusha
idivl
jae
xchg
imul
xchg
xchg
push
sbbl
inc
cwtl
jne
xchg
pop
lahf
ret
aaa
jecxz
das
icebp
jmp
shr
xchg
add
shrl
movsb
gs
pop
sub
adc
sbb
push
mov
faddl
or
shr
mov
mov
mov
test
insl
lods
cltd
cmc
cwtl
test
loope
lahf
enter
xchg
cwtl
xlat
mov
push
and
add
mov
out
les
orb
in
addb
xchg
sub
repnz
inc
in
lds
xor
dec
arpl
imull
adc
pop
test
mov
push
cmp
lods
imul
sbb
xchg
ret
daa
fisttps
lahf
cld
sbbl
sbb
push
adc
data16
shr
movsb
xor
mov
xor
lds
add
xlat
popf
pusha
enter
ret
xchg
ror
pop
insl
addr16
cmpsl
ja
xchg
add
aad
in
lea
sub
popl
and
enter
push
orl
scas
jmp
or
cltd
xchg
mov
lahf
pop
hlt
in
sub
jecxz
scas
cwtl
push
mov
cmp
test
cmc
imul
ds
divl
lds
stos
ret
jmp
mov
or
inc
and
loope
lds
and
xor
ljmp
mov
pushf
rcl
mov
inc
shl
movsb
or
les
add
fwait
push
fwait
sbb
pop
iret
out
cwtl
jmp
fwait
int
int
mov
jne
lds
sti
insl
dec
push
xor
ret
movl
pop
enter
xchg
xchg
jl
mov
stc
mov
jo
jns
adc
jmp
xchg
gs
mov
mov
jmp
movsl
lahf
pop
xchg
cld
in
or
xchg
imull
lahf
mov
aad
js
negl
fwait
arpl
cmp
adc
cs
mov
test
mov
mov
push
jo
out
pop
pop
out
adc
push
rorl
mov
xchg
in
stos
mov
fldcw
movsl
pop
cmpsl
hlt
or
ja
ss
pop
xor
cwtl
mov
xchg
in
rol
gs
add
xchg
out
insl
gs
push
mov
lds
sti
adc
call
adc
imul
insb
xor
ret
mov
inc
cld
movsl
repz
push
in
jmp
out
add
iret
lret
ret
addl
or
loope
add
shll
mov
stos
or
dec
arpl
adc
test
sub
cmp
fdivrs
scas
lahf
lahf
imul
int3
xchg
into
xchg
jns
or
neg
adc
negb
cld
js
lahf
cltd
addl
sub
lea
les
scas
sbb
mov
hlt
sbb
push
xorl
add
cld
subl
sub
addr16
roll
inc
leave
adc
fistps
mov
cmp
jmp
mov
xorb
je
push
fstl
mov
test
inc
mov
out
add
cmp
shll
repz
stos
pusha
dec
mov
sbb
pop
or
jmp
leave
orl
scas
ret
adcb
ret
divl
int3
fcompl
or
push
cmp
popf
xor
lds
jge
xchg
dec
lahf
cmpsl
pop
sub
dec
outsl
jge
lret
mov
adc
cmpsl
jmp
pop
int
pop
dec
test
pop
xorl
jne
ficompl
jbe
in
and
cwtl
movsl
iret
iret
cmp
xchg
scas
fabs
sub
push
jecxz
rcll
aam
sub
jp
lcall
ret
in
pop
sbb
frstor
in
sti
dec
xchg
cmc
dec
or
vmulsd
jmp
int
lds
sub
addr16
leave
test
dec
gs
fimuls
sub
lea
sbb
jmp
dec
push
lods
xchg
aad
rclb
in
dec
lahf
ja
push
sbb
shll
pop
mov
sbb
dec
dec
outsl
mov
mov
stos
xchg
mov
mov
scas
les
sar
shl
repnz
jmp
or
neg
js
in
pop
nop
js
shrl
mov
test
shlb
sub
mov
aas
dec
ret
add
xchg
xchg
cmc
imul
mov
aam
xchg
iret
mov
popa
pusha
stos
cmp
push
fnsave
fldt
pushf
dec
imul
xchg
inc
add
sti
sbb
loopne
mov
xchg
lcall
pop
movsl
frstor
mov
arpl
dec
ja
test
dec
cwtl
fwait
or
test
roll
push
popa
mov
inc
fwait
stos
pop
cli
sub
sbb
mov
clc
lret
xchg
push
push
rcrl
mov
sarl
lea
push
lret
sub
xchg
hlt
lds
cmp
or
lcall
jne
insb
mov
lds
ror
lahf
xchg
in
andl
dec
add
gs
cmp
arpl
test
in
in
aas
xlat
popa
fnstsw
lahf
scas
insl
cmc
gs
popf
lahf
loope
add
xchg
test
mov
or
cmpsl
je
pcmpgtw
cmp
jmp
popf
or
mov
repnz
xlat
lock
sub
adc
pushf
in
jecxz
push
mov
fcomps
xchg
pop
push
fcmovu
mov
imul
sub
xor
roll
es
adcb
push
pop
mov
sbb
mov
pop
nop
mov
mov
test
loopne
imul
arpl
cmp
shrl
scas
cmpsl
mov
cmc
adc
lahf
popa
inc
rol
movsl
xchg
adc
js
jmp
jae
out
in
lret
test
inc
int
sarl
or
je
dec
test
lahf
add
lret
shl
loopne
pop
stc
or
and
sbb
imul
pop
pop
jo
subl
dec
ret
aaa
imul
mov
leave
jmp
outsb
in
lds
repnz
imul
pop
adc
push
xchg
arpl
js
sbb
jmp
or
andl
mov
mov
imul
leave
mov
ja
mov
sahf
mov
jno
imul
insl
xchg
xor
mov
dec
lahf
outsb
adc
push
ud0
mov
fwait
enter
fisttpll
int
fwait
push
int3
adc
imul
mov
sbb
rorl
fildl
arpl
ret
popa
cmp
mov
push
shll
cmc
xchg
cltd
fstps
mov
mov
push
sub
lods
loope
add
xor
sbb
stos
aad
adc
loope
mov
adc
mov
xchg
xor
mov
cmp
xchg
jne
mov
xor
arpl
cwtl
ret
insl
mov
push
mov
sbb
jecxz
movsl
xchg
jo
lret
pop
ret
leave
andl
stos
test
and
mov
in
mov
cltd
iret
test
lods
out
addr16
fsubrl
cmpsl
rorl
jecxz
jne
mov
sub
mov
ret
ffree
xchg
cwtl
loopne
rorb
dec
test
push
adcb
loop
jo
out
xor
inc
hlt
fwait
sbb
popl
psllq
or
out
xchg
or
stos
stos
jmp
test
cmp
cmpsl
andl
jbe
add
sub
mov
insl
lret
add
in
movsl
jmp
sbb
imul
pop
fsubrs
test
xlat
cwtl
flds
xchg
xor
or
rep
mov
jmp
xchg
inc
lret
mov
xchg
jb
xchg
ror
stc
jns
movsl
sub
cmpsb
xchg
sti
xchg
xlat
or
ds
pop
cwtl
std
jecxz
leave
jmp
or
jmp
jne
jmp
test
fucomi
xchg
jge
mov
xlat
pop
xchg
fsubrp
lahf
notl
test
mov
xchg
ljmp
notl
scas
cwtl
jns
pop
mov
lock
int
cmpsl
mov
subl
cmpl
xlat
repz
xchg
fstl
in
sbb
jp
fbld
out
in
push
adc
shl
mov
jl
push
pop
popf
ja
sbb
xlat
imul
mov
loop
inc
cmp
test
test
fistpl
mov
lds
imul
out
gs
ljmp
outsl
shll
pop
xor
loopne
imul
xchg
lock
xchg
repz
dec
imul
dec
mov
popf
adc
int
leave
sub
mov
add
ret
xchg
mov
movsb
xchg
push
mov
das
mov
sbb
mov
and
mov
lret
cltd
mov
cmpsw
call
mov
sbb
mov
xchg
mov
jecxz
mov
adc
jns
or
test
ret
fwait
add
push
fstl
out
in
and
unpckhps
lahf
adc
push
fsubl
cwtl
xchg
lea
dec
cmp
test
dec
cmp
xchg
lods
out
cmpb
pop
popa
ret
shl
fs
add
mov
mov
cli
pop
xor
sbb
mov
xchg
icebp
out
jno
test
add
lea
arpl
pop
fnstsw
jecxz
test
xchg
jle
cltd
sub
lock
outsb
clc
mov
xlat
sub
lahf
sub
daa
imul
mov
shrl
xchg
fldt
testb
cmc
dec
arpl
test
adc
pop
fwait
dec
fucomi
movsl
inc
subb
pop
adcl
lret
jecxz
pop
sti
lahf
jno
mov
sub
ret
dec
lea
scas
ja
jmp
out
addr16
sub
mov
push
ret
mov
iret
ret
xlat
jne
ret
mov
insb
test
add
dec
leave
loope
iret
lea
add
test
jmp
lahf
out
outsl
popf
rolb
scas
cmpb
cwtl
lea
lret
aas
xchg
adc
aam
or
clc
std
jmp
cld
cmpsl
hlt
out
les
rcrl
popf
push
in
mov
mov
mov
xchg
mov
xor
sbb
jmp
add
sbb
in
sub
sbb
push
jecxz
sub
cltd
icebp
jmp
jne
in
add
adc
adc
push
in
sbb
and
pop
push
adc
add
lds
cli
sbb
mov
xchg
scas
mov
negl
subb
filds
pop
out
sbb
sub
jecxz
flds
pop
negl
push
rcr
insb
xor
pminsw
mov
jno
mov
xchg
dec
pop
sarl
imul
in
mov
rorl
cltd
stos
scas
pop
xor
lods
or
lahf
mov
xchg
addr16
cltd
in
popa
push
jmp
or
fisubrl
push
clc
and
jge
nop
and
lock
xlat
rcl
adc
cmp
arpl
dec
fbstp
in
test
enter
aad
adc
into
lahf
jne
les
push
ljmp
add
pop
cmc
addl
xchg
lret
popa
pop
leave
outsl
or
int
cmpsl
ret
add
fistpl
add
rcrl
xor
scas
pop
fs
imul
fstpt
sbb
lahf
mov
pop
filds
shld
out
mov
add
push
or
ljmp
dec
lds
out
adc
xchg
in
cltd
mov
pushf
shlb
int
push
push
inc
mov
inc
push
xchg
lahf
imul
jmp
iret
pop
lahf
andb
mov
leave
jae
out
cmpsl
pop
dec
jl
test
cmpsb
mov
pop
loope
cmc
mov
adc
dec
pushf
cmpsl
add
lret
imul
fildl
xchg
xchg
cmpsl
cld
in
aad
push
lahf
jmp
xlat
lret
fst
lock
mov
int3
int
xchg
daa
repz
cmp
jecxz
fwait
je
push
ja
cmp
cmc
xchg
leave
jns
shrl
out
jl
jns
fsts
out
mov
adc
mov
jmp
ret
jb
popf
lock
out
inc
sbb
jmp
push
cld
mov
add
ret
loope
gs
rep
scas
ds
outsb
shr
adc
or
aad
mov
cmc
mov
lahf
sarl
and
loope
jecxz
xchg
jo
movsl
inc
gs
inc
adc
pop
jmp
mov
in
aam
arpl
sbb
imul
xor
xor
roll
ficomps
adc
outsl
test
add
lds
fwait
mov
jp
dec
mov
and
mov
jmp
enter
addr16
out
xchg
pop
dec
lahf
gs
iret
aad
jmp
lahf
dec
inc
add
lds
call
out
jl
push
and
bound
xchg
pop
lahf
add
push
xchg
mov
add
mov
pop
lea
adc
sarl
inc
fdivrs
sbb
test
in
addr16
pop
cmpsb
pop
data16
cmpsl
mov
in
xlat
cwtl
daa
ret
dec
or
pop
and
aaa
mov
ret
or
int
mov
movsl
cld
xchg
iret
ja
cmc
add
lret
test
out
mov
cmp
mov
lods
scas
xor
mov
cwtl
imul
popf
mov
rorl
mov
lds
mov
dec
neg
jl
mov
ja
and
adc
rol
int
out
popa
and
mov
das
jmp
fbld
arpl
and
andl
add
call
daa
sub
fcoml
mov
adc
push
insl
xchg
dec
iret
fsubl
cmp
xchg
jmp
and
adc
or
outsl
inc
mov
lea
scas
out
fcomip
shrb
sbbb
test
and
and
clc
add
insl
aam
fistl
popa
fdiv
xchg
ret
cmp
sub
add
fldl
lea
mov
test
in
leave
js
mull
aad
rcrl
out
insl
jne
dec
lods
xlat
jmp
and
andb
dec
outsl
xchg
popf
xor
cld
lret
outsl
in
xchg
loope
jae
push
pop
repz
dec
jns
pop
subl
out
cli
lcall
lds
roll
xchg
xchg
rcr
mull
or
test
outsl
mov
stos
pop
pop
jg
mov
gs
mov
hlt
popf
xchg
rep
mov
add
ret
iret
mov
inc
shl
cmc
in
rcrl
xchg
jmp
nop
addr16
sbb
pop
fbstp
add
jae
popf
adc
pop
les
xchg
loope
in
sub
or
mov
stos
xchg
imul
subl
and
push
loopne
mov
push
test
imul
or
lds
dec
mov
fisubl
add
add
mov
xchg
push
and
push
outsl
addr16
xor
call
scas
cmpsl
je
xchg
jmp
imul
aam
mov
jne
or
pop
stos
out
popf
mov
or
jne
rcr
sub
cmp
push
aad
xor
gs
jb
pop
add
stos
lret
xlat
out
jecxz
dec
cmp
add
aad
mov
popf
imul
out
cwtl
out
stos
lahf
popa
pop
dec
arpl
movsb
fdivr
pop
mov
mov
scas
lods
ja
xchg
fwait
loope
ret
cltd
test
jne
lahf
pop
lods
repz
inc
filds
cld
jmp
shll
roll
pop
fsubrs
lahf
ret
sbb
mull
add
jmp
cmpsl
push
stos
in
lods
test
movsb
lret
mov
mov
mov
mov
cmc
pop
sub
xchg
dec
add
repz
lahf
and
pop
sub
call
fwait
mov
push
jne
jle
sub
sub
mov
test
out
mov
mov
jecxz
lods
idiv
cmc
movsl
ljmp
cwtl
mov
notl
test
mov
xchg
pop
popf
xor
adcl
push
fildl
loop
dec
sub
jle
and
mov
adc
rolb
xchg
arpl
cmp
fstpl
mov
xorl
cmp
loopne
out
xorl
dec
out
mov
jmp
insl
cmc
jne
or
add
mov
mov
jmp
popf
clc
xchg
scas
pop
daa
mov
js
test
loope
fisttpll
or
jnp
jmp
xlat
mov
mov
sbb
push
xor
andb
pop
adc
outsb
xchg
imul
ja
push
or
scas
scas
mov
cmpsl
jmp
lahf
fwait
sbb
xchg
lea
fwait
clc
bound
mov
fcmovne
adc
cmpsl
dec
ret
lcall
or
sbb
ret
cli
mov
pusha
leave
sbb
cmp
dec
in
addr16
pushf
aam
rcrb
jne
jmp
or
pop
lods
sub
adcb
lods
or
xorl
cmp
out
push
sbb
mull
lods
adc
test
fwait
xchg
xchg
inc
cmova
negl
fldcw
scas
in
repz
fwait
mov
xchg
pushf
xor
rcrb
jno
leave
mov
xlat
pop
addr16
mov
and
int
cli
mov
arpl
fnstcw
push
adc
mov
or
dec
sub
cmp
pop
lea
lret
jne
aas
and
mov
movsb
aam
imul
arpl
fsubs
mov
mov
xchg
test
outsb
or
out
rorl
cmp
lea
gs
push
testl
out
in
lds
repnz
imul
dec
in
add
insl
shrb
int
imul
inc
in
lahf
ret
fidivs
in
outsl
call
and
mov
push
push
fisttpl
lods
jbe
xchg
mov
arpl
cltd
movsl
dec
scas
adc
lea
test
lods
adc
arpl
scas
pop
push
adc
aad
adc
or
add
kmovw
movntq
out
mov
mov
xchg
mull
mov
shl
cmpsl
adc
jb
add
cmp
loope
imul
loope
scas
mov
cli
icebp
ja
shll
aam
ljmp
cmp
popf
or
repz
push
lods
popa
lahf
xchg
mov
jne
test
mov
aad
jmp
bound
jno
iret
insb
push
movb
adc
cmp
mov
in
mov
nop
add
mov
xchg
pop
jmp
inc
add
xchg
out
loope
out
dec
sub
dec
cwtl
xchg
out
in
cltd
fs
addr16
scas
incb
into
arpl
shl
pop
iret
in
push
sub
popa
push
mov
cwtl
xor
icebp
fstps
mov
mov
adc
icebp
inc
lds
and
pop
fistpll
arpl
mov
inc
addr16
test
insb
add
ret
cmp
fildll
pop
jmp
lahf
sub
adc
adc
lea
out
mov
push
repz
call
or
jmp
arpl
fucom
sub
daa
aam
imul
pop
scas
ja
xchg
cmpsl
cwtl
lret
iret
xchg
dec
arpl
and
fldt
xchg
sub
out
popf
mov
fwait
jnp
xchg
push
pop
sarl
shrl
sub
imul
imul
adc
lahf
sbb
lret
mov
pop
imull
daa
fstpl
xlat
dec
jns
imul
inc
gs
jb
cmpb
cmc
fucomp
lret
add
arpl
out
ljmp
add
push
dec
push
push
fsubl
dec
jecxz
and
jbe
test
mov
fwait
das
shll
push
jmp
movl
shl
mov
rolb
xor
mov
sbb
insl
test
add
pop
cmp
pop
in
push
outsl
jnp
fldt
pcmpeqd
aad
mov
popa
and
xchg
in
inc
fildl
out
inc
jge
pop
stos
lds
add
frstor
push
mov
xchg
xor
scas
push
arpl
mov
push
push
stos
ror
mull
mov
insl
cmp
dec
add
ja
aad
enter
addr16
dec
jmp
out
jne
cwtl
dec
popf
xchg
fucomip
lds
adc
shll
cwtl
in
test
fmul
fsub
testl
std
push
sbbl
sbbb
mov
push
pop
popf
xchg
roll
in
in
movsl
xlat
lret
enter
ficomps
lds
pop
mov
imul
fucomp
mov
lcall
push
pop
frstpm(287
sti
andb
cmp
jo
dec
xchg
dec
adc
mov
cmp
lds
orl
or
movsb
fld
lds
enter
xchg
out
add
cmc
out
jmp
jo
in
pop
repz
cmpsb
js
popa
lods
cmpsl
popf
cmp
notl
sbb
js
out
cmc
mov
scas
adc
lds
sarl
fsubrs
addr16
dec
mov
inc
mov
mov
adc
rcr
add
lds
cmpsw
pop
popf
iret
add
pop
movsl
fwait
aaa
inc
mov
outsl
push
add
fnstenv
hlt
lods
xor
push
cmpsl
test
rol
pop
xchg
pop
xlat
adc
xlat
leave
stos
stc
flds
add
ret
pop
xchg
gs
push
or
int
cltd
rcll
cwtl
push
movsl
mov
jmp
mov
lds
popf
push
mov
xlat
xchg
int
mov
out
loope
push
jge
nop
insb
movsl
sub
clc
jo
andl
loopne
mov
mov
xor
xchg
fdivl
addr16
pop
addr16
jne
scas
lods
aad
leave
jne
pop
or
xchg
lds
cmpsl
in
movsl
jns
enter
mov
or
jmp
add
xchg
sub
xchg
lcall
mov
cwtl
lahf
or
dec
mov
outsl
insl
mov
scas
cmpsl
mov
vprotq
xlat
mov
daa
loope
in
out
dec
mov
movsl
mov
idivb
sbb
xchg
loop
bound
cwtl
aad
xor
fildll
daa
scas
stos
add
imul
mov
mov
cmc
insl
fisttpll
jmp
add
in
rolb
in
sub
clc
mov
lahf
lahf
aas
add
arpl
xlat
fsubr
popa
xchg
pop
lods
ljmp
push
mov
std
or
cltd
xor
jmp
xchg
push
fldcw
test
adc
in
rcll
mov
mov
jle
sbb
repz
clc
cmp
insl
lahf
adc
lock
dec
or
xorb
mov
add
add
gs
pop
cltd
stos
gs
dec
popa
rclb
jmp
sub
loope
fadds
jl
mov
xchg
jle
mov
loope
repz
sbb
sbb
dec
xor
mov
mov
in
shrl
scas
xchg
fwait
mov
aam
in
test
fadd
fs
in
add
cli
mov
cmp
sub
xchg
inc
out
jae
lea
arpl
stos
divl
movsb
add
movsl
ret
sbbl
aad
clc
enter
lret
fldenv
or
lock
ja
pop
mov
scas
rcrl
arpl
pop
movsl
fisttpl
out
aad
mov
jmp
out
ja
repz
mov
xor
aas
imul
jp
mov
adc
outsl
imul
imul
out
jno
ficoms
adc
mov
cmpsl
xchg
addr16
sbb
call
repnz
mov
lea
fisttps
jnp
gs
outsl
ret
jmp
in
fstps
movsb
xchg
out
ja
mov
lds
fbld
xchg
inc
mov
aaa
mov
scas
leave
mov
xorl
xchg
lea
cwtl
pop
aad
scas
mov
cmp
test
call
imul
sub
ljmp
test
iret
pop
mov
mov
jecxz
dec
mov
push
enter
gs
in
cmpb
js
mov
cmpsl
jnp
and
adc
ja
sti
mov
push
lret
inc
jns
icebp
cmpsl
push
lahf
mov
fnstenv
lods
out
pop
in
ret
xlat
push
push
xchg
cmc
fucomip
push
fwait
pop
jns,pn
scas
or
imul
inc
cmp
mov
mov
xchg
add
push
xlat
in
gs
andl
mov
fisttps
adc
int
insl
shrl
dec
sub
shl
daa
repnz
in
jg
jg
push
cmp
cmc
outsl
scas
mov
idivl
std
lea
cmp
mov
mov
clc
insl
cwtl
xor
mov
dec
cmc
cli
push
mov
into
out
jmp
xchg
jecxz
xor
out
rorl
popa
movsl
add
jmp
pusha
pop
loop
mov
or
gs
scas
jge
test
jnp
sub
rcll
sub
outsl
mov
enter
ja
rcrl
or
add
movsb
orl
insb
sub
mov
mov
xchg
lods
stos
jo
xchg
mov
imul
pop
dec
loope
fcmove
shll
fs
popf
dec
xchg
arpl
jne
xchg
fldcw
mov
aaa
sbb
rcrl
sbbl
imul
jne
clc
cmp
lea
sbb
mov
add
mov
jbe
cwtl
imulb
gs
xor
lret
lock
mov
mov
test
cwtl
inc
cld
hlt
test
test
shll
scas
mov
sbb
ret
push
mov
mov
jg
lahf
jmp
adc
or
outsl
mov
jl
lock
imul
cld
and
leave
sbb
daa
inc
iret
out
fsubrl
icebp
sbb
lods
adc
add
cltd
lds
jnp
inc
cs
pop
mov
fs
lcall
negl
mov
fwait
iret
sar
cmpsl
ret
adc
sub
mov
pop
cli
pop
leave
aad
stos
jmp
ficomps
cmp
out
pop
cmpsl
jne
pop
cmp
cmp
mov
roll
test
dec
iret
int
cmp
inc
lret
add
lods
scas
mov
mov
gs
sub
cli
call
xchg
push
and
popf
pop
mov
not
fwait
inc
mov
addr16
adc
lahf
sub
jg
leave
ret
sbb
sub
push
or
mov
xchg
xchg
lock
in
mov
sbb
rcl
popa
lcall
orl
shll
lahf
cmp
adc
cld
das
mov
dec
cwtl
sbb
inc
push
add
mov
mov
mov
mov
jl
mov
insl
out
pextrw
test
imul
rcrl
xchg
cwtl
xor
lds
jne
in
imul
lcall
mov
js
stos
imul
cmp
mov
xchg
rolb
fstpl
rcr
out
add
fistpl
aam
lods
xchg
xchg
and
mov
adc
repz
adc
and
lock
loopne
les
jmp
mov
in
mov
inc
cmpsl
stos
pop
mov
xchg
repz
out
add
jmp
xorl
lea
inc
jecxz
arpl
out
xchg
inc
dec
pop
push
rcr
popa
adc
or
imul
add
adc
ds
and
xchg
inc
add
test
test
icebp
add
ja
lahf
fwait
cld
xchg
or
cmpsl
addr16
aad
push
xchg
aas
leave
test
test
lea
addr16
in
lret
cli
bound
cltd
push
cmpsl
in
fstpl
xor
ja
icebp
mov
enter
ja
xchg
ffree
addl
xchg
xchg
outsl
xlat
mov
pop
iret
mov
sar
and
mov
push
pop
les
insl
repz
jae
cmp
lods
shll
out
mov
xor
inc
es
xchg
ja
fxtract
mov
iret
pop
scas
test
lods
out
jecxz
xchg
dec
daa
and
aad
repz
push
lods
lahf
lahf
shr
mov
xchg
and
lgs
sub
fwait
test
roll
mov
adc
clc
fstp
cmpsl
lahf
in
lahf
dec
loope
fldcw
mov
mov
insl
ja
add
sarl
cli
cwtl
jecxz
or
dec
shl
pop
lret
iret
mov
in
lea
xor
mov
fwait
xor
aad
cmp
popf
out
add
iret
cmp
pop
xor
lahf
subb
and
int
cmp
shl
pop
shr
dec
inc
aas
pop
stos
outsl
or
imul
dec
dec
fldenv
outsb
pop
cmp
adcl
mov
sti
ret
add
outsl
stos
or
lahf
pop
and
aas
adc
adc
xchg
mov
pop
xchg
lds
popf
lcall
add
test
push
cmp
mov
mov
mov
out
inc
out
lret
cwtl
popf
gs
push
mov
leave
jg
out
rolb
push
pop
dec
popf
int
popa
out
out
jno
mov
jp
mov
in
cmc
adc
dec
xchg
mov
cli
xchg
adc
mov
xchg
mov
dec
add
add
imul
push
pop
loopne
hlt
adc
movsb
or
and
xchg
popa
call
test
fnsave
pop
jmp
push
std
lahf
out
aad
movsl
mov
ret
pushf
jmp
adc
jmp
repz
bound
das
insl
cltd
xchg
and
mov
jne
cwtl
xor
aad
xchg
mov
sub
addr16
cs
jo
ja
dec
add
xor
fcmovnu
pop
xchg
in
cli
inc
sahf
mov
int
ret
or
fldt
cmp
mov
sub
cmpsl
mov
sbb
lods
adc
ret
xorl
insb
xchg
int
lds
mov
gs
negl
dec
ja
cmp
mov
cmp
in
cwtl
or
mov
fucomi
mov
outsb
jno
rcrl
flds
push
mov
mov
fwait
out
adc
mov
aad
adc
jmp
in
dec
popl
adc
inc
iret
sub
lds
dec
out
cmp
and
rclb
shrb
jmp
adc
jne
inc
and
push
mov
jmp
outsb
push
stos
and
orl
popf
loop
scas
movsb
imul
les
rcr
ret
outsl
fwait
sbb
lods
xchg
sub
sub
or
xchg
scas
push
pop
fists
mov
arpl
les
cltd
in
inc
mov
sbb
mov
xlat
lahf
mov
jmp
fidivs
jne
adc
lods
add
cmp
mov
iret
pop
lods
rcrl
dec
sub
outsb
cmp
cltd
aad
imul
lods
scas
cmp
ret
mul
jge
lea
add
pop
inc
sub
and
out
xchg
jle
mov
add
popa
addr16
pop
arpl
mov
ret
cmp
imull
bound
das
rorb
popa
das
insl
dec
cwtl
jnp
out
sub
cltd
fstpl
cmp
sub
sbb
roll
lret
popa
push
repz
push
sbb
lods
mov
cmp
cmp
xchg
sbb
lahf
mov
rorb
outsl
insl
add
popf
mov
lret
test
xlat
shll
sbb
mov
mov
clc
imul
outsl
xchg
int3
fistps
push
pop
xchg
cmp
jmp
sub
mull
mov
test
out
sub
inc
pop
icebp
ja
cltd
push
xchg
add
mov
leave
add
or
sub
frstor
mov
cmpsl
out
cmp
mov
and
jmp
mov
adc
out
rol
popa
sbb
out
test
add
pop
dec
gs
popa
notl
repz
mov
test
add
je
dec
mov
add
outsl
jbe
sarl
ret
push
ret
iret
loope
test
test
xchg
loope
xchg
sub
mov
js
movsl
and
cmpsl
sbb
in
imul
js
mov
jecxz
and
out
sbb
and
fucomip
sbb
pushf
scas
ljmp
sahf
lahf
roll
lret
xchg
lods
push
call
or
adc
mov
push
xchg
mov
mull
imul
insl
cmp
faddp
neg
push
cmpsb
sti
jp
push
pop
testb
popa
sbb
outsl
arpl
xchg
sbb
xor
mov
sub
imull
lret
daa
ret
cmpsb
mov
popa
movsl
push
stos
fsubrs
fnstsw
cltd
mov
sbb
cwtl
in
pop
out
inc
iret
mov
out
f2xm1
aad
arpl
mov
loope
push
xor
iret
pop
sub
in
adc
fndisi(8087
lahf
inc
js
sbb
mov
int
arpl
xchg
add
xchg
sahf
mov
push
pop
pop
shll
add
mov
test
test
jne
outsb
sarl
lea
add
push
shrl
call
cltd
xchg
outsl
sbb
popa
sbb
arpl
jmp
testl
sbb
xchg
and
xchg
cld
jne
popa
insb
call
mov
lds
or
adcl
mov
mov
out
fnstenv
fstps
je
sub
cmp
enter
iret
scas
sbbb
or
imul
lahf
add
xchg
repz
pop
in
filds
mov
inc
out
ret
push
int
push
cmp
xor
lret
cmpsb
popa
jno
jecxz
push
mov
fbstp
sub
cmovno
fnop
aad
cmc
fwait
jmp
jae
fnstsw
add
out
cmp
rorl
lahf
test
xchg
jl
outsl
popa
movq
jmp
jmp
in
fstl
pop
fadds
xor
addr16
jbe
jns
mov
out
mov
iret
push
sbb
fisubl
gs
lahf
and
sub
sbb
xorb
ret
stos
lods
cltd
test
fldl
rcrl
xchg
mov
test
inc
lret
cwtl
mov
cs
mov
cli
out
mov
out
stos
shrl
inc
and
xchg
lds
push
mull
dec
mov
cmp
mov
das
sti
mov
push
sub
shrl
mov
clc
ljmp
mov
sar
ret
adc
outsl
repz
jnp
outsl
mov
inc
lea
cwtl
jg
mov
leave
insl
mov
mov
mov
ss
adc
adc
shlb
addr16
test
subl
add
jecxz
jmp
adc
pop
mov
xor
and
lahf
in
outsl
pop
out
and
jecxz
adc
scas
iret
popa
cmp
add
mov
push
daa
cmp
push
addb
je
cltd
pop
and
imul
std
out
testl
and
arpl
out
add
shrl
fst
hlt
cmc
push
or
loope
in
add
cmpsl
pop
or
loop
imul
mov
mov
pop
call
sbb
in
push
stos
lret
mov
xchg
ja
add
idivl
popa
adc
push
add
hlt
or
mov
xlat
xor
adc
jnp
lds
mov
fcmovnbe
sub
stos
jp
iret
add
xchg
loope
xlat
sub
pop
cmp
cmpsb
out
clc
mov
push
icebp
js
test
mov
stos
out
sti
enter
fwait
mov
enter
repz
adc
cwtl
push
loope
fmul
popa
test
dec
pop
pop
jae
gs
push
adc
sub
int
notl
mov
xchg
mov
nop
sbb
test
in
fnstenv
cmpsl
rorl
mov
mov
out
int
clc
rcl
or
imul
cmc
mov
adcl
xchg
insl
sub
sub
das
pop
add
mov
lds
sub
jmp
cmp
insl
in
shrb
add
fldenv
dec
addb
push
xor
cld
xor
nop
in
or
sbb
cwtl
inc
inc
imul
movsl
movsl
and
lea
adc
adc
std
add
mov
mov
add
jecxz
push
jno
sub
mov
lds
stos
loop
or
mov
mov
repz
mov
and
call
je
rorb
and
xchg
fnstenv
add
jmp
movsl
pop
or
add
or
ret
nop
cli
sbb
mov
test
and
adc
jg
xlat
sbb
mov
pop
movsb
popa
lods
jo
fstpl
pop
cli
imul
rcrl
lahf
and
arpl
jge
dec
popa
testl
mov
cmp
add
push
adc
ror
out
mov
std
int3
sbb
adc
pop
fucomi
cmpsl
scas
in
lods
gs
push
cmp
jecxz
mov
mov
adc
arpl
push
mov
movsl
test
insl
rol
pushf
daa
and
fldt
dec
aas
jne
add
out
xlat
gs
fldl
inc
or
cmp
fnstsw
out
leave
fsubr
clc
dec
jne
shlb
rol
xchg
lret
mov
xchg
add
int
xor
fidivrl
lock
push
out
xor
xor
stos
sub
pop
cld
adc
sbb
movsb
pop
test
ja
jmp
mov
mov
int
add
fldcw
lds
sarb
sti
cli
inc
adc
xchg
insl
xchg
stos
dec
je
mov
pop
inc
jo
cwtl
jmp
xorl
jb
clc
jp
push
cmpb
mov
cmp
int
icebp
lock
in
outsl
dec
test
movsb
ret
shlb
pop
repz
leave
sub
iret
clc
jne
hlt
out
test
cltd
in
cmp
mov
testl
in
bextr
iret
fcoml
scas
and
dec
and
jo
and
insl
push
sbb
jmp
out
add
push
popf
and
and
lahf
cmc
gs
in
in
scas
popl
mov
jle
loope
mov
aad
xchg
mov
out
arpl
xchg
int
in
push
lahf
frstor
or
mov
mov
inc
or
mov
adc
add
mov
mov
in
inc
outsl
faddl
test
lock
mov
lods
aas
mov
mov
andl
push
rcll
jl
cltd
fldcw
cmp
ret
lret
mov
jle
inc
adc
repnz
push
test
fistps
sbb
xchg
into
lds
push
or
lock
iret
imul
cwtl
pop
lock
dec
or
xor
cld
or
pmulhw
jno
xchg
ror
cmp
add
stos
mov
pop
xor
stos
add
push
popf
cwtl
mov
cmp
fnstenv
test
dec
xchg
in
in
jne
sbb
lds
jmp
jmp
mov
in
js
insl
shl
cmp
lret
shrl
bound
push
xor
fcmovnbe
ja
push
popa
inc
ret
dec
imul
loop
jl
cmp
loop
lea
mov
clc
mov
test
imul
insb
jecxz
add
hlt
cmp
xor
cmp
lock
mov
out
and
dec
or
inc
fcmovnbe
out
popf
addr16
cmp
adc
or
push
pop
push
stc
mov
pop
aad
pop
add
inc
cli
lock
sbb
cltd
gs
mov
xchg
aad
in
ret
push
inc
stos
adc
cmp
mov
pusha
or
mov
xchg
cmc
stos
add
xchg
push
pop
xchg
jne
scas
stc
out
call
mov
sbb
cmp
out
xchg
dec
push
pop
lahf
pop
sbb
repz
js
scas
outsl
push
xchg
repz
mov
scas
adc
in
mov
test
xchg
sbb
ja
cmpsb
int3
jmp
gs
subb
int3
lea
cmpsl
decb
push
cwtl
sbb
ret
fwait
leave
ja
test
popa
and
push
es
frndint
mov
cwtl
enter
insl
mov
lods
cmpsl
add
jmp
dec
inc
sarb
push
aad
je
xchg
je
lods
fs
popf
lock
shrl
popf
in
sbb
sbb
sbb
xchg
in
popl
into
push
xor
mov
mov
jne
sbb
mov
ror
mov
ja
lea
int3
sbb
jmp
xor
inc
mull
fidivl
mov
adc
mov
fadds
or
mov
mov
mov
mov
jo
add
in
subb
loope
jmp
jg
xor
lahf
testb
mov
outsl
add
shll
or
fcomps
push
and
mov
testl
ret
fstpl
imul
aad
adc
inc
push
rcrl
sbb
test
jmp
stos
sbb
outsb
cld
push
mov
and
cmp
stc
lahf
hlt
ja
aad
and
rorl
loop
arpl
loope
dec
rcll
es
pop
mov
adc
xchg
sbb
adc
sbb
ja
cmp
dec
or
aam
js
mov
mov
gs
mov
xor
sub
lahf
movaps
cmc
pop
pop
popa
fisttpll
or
fwait
vpackuswb
movb
push
outsb
lds
gs
inc
cmp
xlat
xor
lea
insl
in
or
xlat
bound
sbb
cwtl
in
jns
mov
xchg
scas
xchg
xor
fcmovb
push
outsl
imull
arpl
mov
push
jle
stos
iret
push
sbb
sbb
mov
dec
movsl
xchg
iret
fcomps
inc
test
out
mov
cwtl
shr
mov
pop
ficomps
push
xchg
sbb
mov
movsb
js
xlat
xor
lods
pop
mov
scas
sbb
mov
add
adc
xchg
pop
shll
loope
xorb
xor
lahf
cmc
push
fldt
das
cltd
sarb
mov
repz
fisttpll
stc
jmp
jne
ret
leave
or
cmpsl
cs
inc
add
sub
loop
sbb
adc
repz
or
mov
sbb
xchg
leave
arpl
fwait
inc
fs
cs
inc
pop
or
cmp
sub
jae
sub
mov
lea
bound
push
dec
fcmovnbe
mov
sbb
insl
or
inc
test
mov
insl
xor
cmp
jg
fstp
pop
cmpsl
test
addr16
call
add
push
jmp
jne
loop
in
inc
push
add
push
xchg
insl
inc
arpl
repnz
mov
lret
mov
xchg
in
outsb
fstpl
fdivl
xor
data16
iret
cmp
cmpsl
andl
mov
adc
ret
mov
int3
popa
repz
mulb
test
sbb
out
imul
cmp
ja
aas
fwait
orl
aas
mov
jmp
lock
int3
gs
test
mov
sub
add
lock
mov
imul
fistpl
cmpsb
outsl
rorl
or
push
mov
adc
arpl
out
rcll
jne
lds
fsubl
lds
cs
jge
scas
movsl
mov
lret
jle
lds
popf
cmp
scas
jne
mov
aas
fcmovnb
xchg
movsl
jecxz
pop
adc
fwait
mov
lahf
in
xlat
mov
pop
xchg
add
je
adc
int
inc
jbe
jno
jl
push
addl
cli
in
inc
jns
in
sub
cld
dec
push
sub
lahf
repz
scas
cwtl
cli
mov
add
and
mov
jg
pop
push
and
fwait
out
int
sarl
sbb
adc
in
jl
ja
lea
in
jecxz
sub
lock
in
dec
test
and
out
out
pop
jecxz
mov
xchg
xor
stos
shlb
sub
mov
insl
mov
nop
fcomp
lahf
fstps
test
arpl
add
test
add
jge
movsl
add
test
add
jno
mov
mov
mov
lret
xor
push
jne
popf
dec
lea
mov
pop
insl
cmp
sbb
mov
mov
inc
stc
in
ret
int3
sahf
imul
icebp
mov
mov
arpl
out
movsl
insl
fmul
pop
and
mov
clc
cmp
aad
repz
shrb
les
xchg
faddl
lea
sub
pop
add
lret
push
and
xlat
int
cwtl
std
jo
rorl
jle
mov
inc
sub
mov
int
dec
dec
in
cmp
gs
in
dec
lret
mov
push
test
arpl
xchg
fwait
imul
xchg
and
jns
call
lcall
jo
add
iret
in
test
xchg
ja
cwtl
mov
leave
push
mov
out
mov
dec
pop
leave
xchg
imul
test
pop
mov
adc
sbb
pushf
int
movsl
mov
sbb
push
out
mov
xchg
sub
aas
push
ljmp
test
int
je
adc
pop
add
repz
cmp
in
clc
xchg
notl
mov
mov
ret
sbb
jle
inc
loop
aad
mov
add
out
mov
cwtl
mov
ret
stos
and
cmp
mov
fstpl
mov
fwait
mov
gs
mul
popf
outsb
es
in
push
and
add
leave
rolb
mov
jl
mov
std
or
movsl
pop
lahf
mov
mov
cmp
or
mov
mov
xchg
outsl
aaa
movsl
pop
roll
mov
frstor
cmp
repz
fildll
fucomi
outsl
add
leave
popa
mov
add
sbbl
fcomps
mov
xchg
xchg
mov
jno
jle
add
inc
ljmp
lock
test
xadd
out
inc
int3
cmpsl
mov
repnz
mov
jl
ja
xchg
jecxz
insl
loop
mov
jne
push
xor
fs
push
pop
iret
imul
int
sub
mov
call
xchg
push
fnsave
mov
or
adc
testl
aad
movl
mov
pop
fcmovnbe
cmc
popa
xchg
repz
pop
push
ret
scas
lahf
lea
xlat
mov
xlat
test
lock
mov
xchg
std
jae
or
ret
in
stos
pop
pop
jae
arpl
xchg
fdivs
aas
neg
scas
and
mov
arpl
mov
cmc
cmp
imul
xlat
inc
lcall
jecxz
mov
gs
lea
add
xor
call
in
sar
mov
ja
aad
adc
in
test
notl
adcl
xor
lret
fucom
mov
mov
divb
xchg
sarl
and
cmc
idivl
xchg
fwait
sbb
jle
sub
push
xchg
sub
gs
imul
mov
daa
push
mov
cmp
cltd
xchg
in
sbb
inc
pop
adc
xor
sarl
cmp
gs
movsl
xchg
out
mov
divl
clc
pushf
fildll
mov
mov
and
stos
popf
adc
fwait
mov
sahf
add
xchg
loopne
adc
xor
mov
cltd
loope
fildll
cltd
insl
sbb
fs
je
mov
adc
fwait
cwtl
jmp
xlat
cmpsl
xchg
inc
cltd
lahf
jecxz
cmpsl
jle
dec
xchg
insl
cmpsl
pop
cmc
mov
fnsave
cltd
jne
js
popf
jp
movsb
mov
sbb
repz
adc
mov
adc
popf
add
mov
addr16
add
loopne
fstps
push
nop
xchg
into
ret
loopne
in
mov
ja
sbb
cmp
subl
ljmp
imul
xor
mov
lods
mov
pop
sub
xlat
in
neg
jno
jge
sti
insl
cmp
sbbl
xorl
in
jecxz
insb
fs
rorl
outsl
xor
cltd
cmp
stc
add
movsl
fwait
negl
repnz
fwait
cmpsl
jecxz
jbe
mov
pushf
pop
push
mov
fimull
dec
jb
sub
add
out
dec
fiaddl
xchg
flds
stos
test
push
push
outsl
xchg
cwtl
xchg
leave
lret
pop
ret
cmp
push
lret
movsl
mov
mov
xor
and
add
jne
push
add
in
mov
xchg
insl
mov
add
les
mov
xchg
pop
loopne
cmp
lcall
stos
fwait
jmp
lds
fcomip
lea
jns
push
dec
mov
rorb
inc
add
xorl
ja
test
xchg
fistl
imul
lahf
test
roll
iret
shll
insl
sbbb
test
mul
in
sub
cmp
gs
cltd
jne
pop
inc
out
testl
rolb
out
dec
stos
movsl
mov
or
repz
pop
add
insl
mov
stos
sub
loope
aam
mov
imul
arpl
and
jmp
adc
push
out
insl
fisttps
jmp
cmp
decb
add
mov
xchg
aad
pop
lahf
imul
pushf
xchg
insl
mov
xlat
scas
popf
lcall
xchg
xorl
cmc
mov
inc
add
cwtl
and
push
movsb
pop
rorl
jne
sbbb
xchg
cltd
sbb
outsl
imul
push
iret
mov
lock
in
rcrl
cmp
jg
leave
jnp
push
aad
pop
mov
xchg
imul
xchg
out
dec
ja
popa
add
pop
das
test
lods
jecxz
test
rol
mov
loopne
jnp
cmc
dec
dec
sub
in
in
xlat
loop
cmpsl
lahf
movsl
push
stos
mov
add
lods
mov
xchg
xchg
mov
int3
cmpsl
adc
mov
sti
sub
stc
jl
shl
mov
xchg
mov
push
fildll
mov
or
mulb
mov
jmp
xchg
fs
les
push
jno
cmc
out
mov
dec
push
enter
roll
mov
sarl
fucomip
jg
loope
lahf
cltd
and
das
aaa
pop
jmp
imul
js
int
dec
jns,pt
rcr
out
scas
mov
mov
aad
test
cmp
dec
sub
repz
popa
push
std
popf
in
dec
lea
shrl
mov
xchg
loop
out
adc
in
imul
rcr
mov
inc
push
dec
subl
scas
add
mov
loope
hlt
cmc
fcmovu
xchg
ret
dec
xor
jl
jne
lea
rcrb
pop
int
dec
push
pop
leave
adc
in
icebp
fstpl
mov
test
aad
fisttpl
cmp
mov
xchg
loope
cmp
xorl
jp
or
aad
inc
ja
jae
fs
test
jne
in
mov
cmp
in
push
outsl
add
loope
xchg
arpl
jmp
xor
adc
xlat
or
jmp
js
vpsubusw
sbb
aam
mov
dec
cltd
repnz
fbstp
sub
pop
das
pop
pop
push
lret
aam
pop
dec
lahf
ret
loope
out
lds
fimull
add
in
and
addl
das
movsl
mov
dec
lret
cmp
mov
jmp
js
cwtl
xchg
jo
aam
stos
insl
jl
push
pop
sub
sub
jo
pop
filds
adc
leave
xorl
xchg
sar
lcall
adc
test
jle
xchg
add
sub
rclb
and
jmp
pop
push
js
pop
rcrb
fcmovnu
lds
push
jg
stos
adc
in
jge
in
add
jbe
cmp
jbe
cwtl
int3
pop
mov
movsl
mov
gs
movsl
movsl
in
lds
out
repz
fstps
loope
inc
push
cwtl
adc
fs
or
sub
add
sar
jmp
cltd
xchg
xor
jge
mov
arpl
sub
roll
or
neg
out
mov
sub
stos
rol
in
pop
xor
in
xchg
xor
jb
xchg
sub
add
ret
test
lret
sbb
inc
xchg
imul
inc
mov
xchg
xchg
inc
xchg
loope
fldt
or
shld
aad
lea
cmpsl
mov
test
jne
inc
aam
in
add
pop
add
mov
adc
outsl
mov
cmp
mov
rorb
pop
loopne
xor
add
or
test
imul
jne
fldcw
mov
jne
mov
xchg
lods
mov
insl
out
or
roll
ret
inc
add
fucomip
inc
ficoms
ja
push
movsl
or
mov
mov
rcll
ret
popa
mov
mov
out
mov
test
mov
push
sbb
mov
fwait
shlb
mov
and
sbb
fwait
in
xor
cmpsl
rolb
xlat
imul
repnz
call
xor
jno
mov
jno
gs
xchg
adc
jmp
push
mov
in
pop
mov
xor
push
insl
sbb
arpl
fiadds
xlat
outsl
stc
int
paddb
jecxz
xor
mov
add
lea
jecxz
xchg
scas
xchg
stc
cmp
mov
imul
stos
popa
mov
or
sbb
mov
fs
popf
cwtl
out
test
lods
fwait
sbbl
mov
sbb
push
sbb
adc
ss
jb
enter
cwtl
aad
fs
xchg
push
cmpsl
sbb
rcl
addr16
imul
movsl
mov
pop
loope
icebp
pop
pop
dec
out
sbb
cmc
subl
mov
arpl
in
sbbl
repnz
inc
fsts
lea
cmp
popf
fsts
ret
inc
je
xlat
cli
or
xorl
ja
cltd
fwait
insl
fucomi
xchg
sar
movl
sbb
call
sbbl
insl
add
xchg
and
int
pop
in
jno
fdivl
repz
insl
jnp
xor
outsb
dec
test
gs
jecxz
das
jns
fwait
scas
movl
xor
notl
push
jae
nop
js
iret
cmpsl
es
notl
mov
mov
insb
popa
gs
cmpsl
cmp
cmp
push
xchg
in
in
sub
lahf
outsl
jne
inc
arpl
mov
xchg
filds
mov
adc
add
outsl
xchg
lods
cmp
and
arpl
xchg
dec
pop
jge
ja
outsb
xchg
adc
xchg
pop
imul
imul
test
push
pop
xlat
sub
jmp
out
out
push
je
outsl
sub
cli
xchg
mov
cmp
in
loope
dec
push
leave
lods
xchg
sbb
pop
mov
stos
cmp
inc
xchg
fstpl
int
jns
out
mov
mov
movsl
push
cwtl
dec
sbb
lds
pop
imul
je
ret
divb
lods
push
lret
or
jae
loop
out
sbb
ret
jg
ds
mov
xchg
pushf
popf
cmp
les
push
push
mov
out
fcmovne
xor
push
jne
cmp
lret
int
lods
and
insb
imul
cld
mov
dec
mov
lahf
out
iret
cmovne
xorb
jmp
es
xchg
dec
fs
enter
fwait
ljmp
sarl
xor
push
into
fistpl
lods
ret
cmpsl
xchg
notb
mov
lea
arpl
xor
fwait
rcll
pop
add
popa
lods
fldt
mov
jne
imul
popf
scas
adcb
dec
out
shlb
in
cmpb
add
fucomip
mov
mov
inc
sub
lds
xchg
in
gs
loop
jne
mov
jne
lods
inc
jno
in
mov
data16
and
andl
rcrb
fwait
out
in
cwtl
div
cmc
jg
subl
imul
jne
mov
aam
xorl
ja
push
mov
mov
stos
fwait
in
data16
cmp
les
das
jmp
andl
lea
out
mov
adc
out
mov
shrb
fldt
loopne
and
and
fldt
sbb
pusha
das
pop
repz
roll
scas
je
jo
mov
out
sub
mov
gs
aad
daa
inc
out
jmp
or
gs
lds
popf
xorl
fndisi(8087
orl
ja
cld
mov
imul
mov
xchg
sub
shrb
and
rcrl
stos
mov
push
pop
out
lock
and
lock
mov
cmc
jp
insl
outsl
adc
popf
lds
ret
icebp
fisubrs
mov
ret
sbb
ja
pop
xchg
cltd
fildl
imulb
pop
ret
mull
jne
andl
mov
fnstcw
stc
addr16
adc
push
mov
fwait
and
movsl
add
ror
xor
clc
out
imul
fwait
or
sbb
fxch
jecxz
movsl
scas
aad
pop
xchg
stos
mov
icebp
xchg
aas
mov
mov
nop
in
shll
sahf
in
xlat
pop
fwait
push
movsl
out
into
cmp
cmc
loopne
mov
sub
fistpl
cld
and
adc
test
repz
clc
outsl
lea
xchg
add
xlat
fwait
mov
mov
xor
jne
arpl
loope
loopew
push
rcr
lret
int3
jmp
push
lret
fisttpl
lahf
cwtl
pop
test
xchg
sbb
shll
jae
lahf
mov
kortestb
pop
fcmovnbe
mov
sbb
in
imul
enter
outsl
lahf
test
or
adc
test
movsl
mov
jmp
mov
mov
jecxz
push
in
fidivrl
aad
outsl
test
mov
jne
mov
mov
sbb
enter
cwtl
ja
pop
mov
mov
jne
jne
sbb
neg
lahf
pop
insl
jmp
and
sar
push
xchg
push
mov
cli
mov
imul
mov
rcl
std
loop
test
fadds
cltd
xchg
in
jecxz
pop
jo
repz
sti
jne
in
mov
movsl
lahf
pop
lods
insl
xchg
xor
push
pop
cmpsl
push
mov
repz
gs
imul
vpsllq
cltd
arpl
xchg
imul
ja
call
xor
and
mov
test
xlat
movl
scas
push
out
sbb
sub
inc
arpl
or
jecxz
icebp
leave
ds
and
mov
arpl
popa
repz
out
sub
scas
test
ds
cmpsl
and
insl
cmp
jmp
lahf
gs
mov
test
int
or
jmp
lods
mov
imul
vpunpcklqdq
lret
addr16
call
dec
mov
cmpsl
cmp
jmp
mov
cmpsl
xchg
and
or
add
mov
xchg
add
movl
subb
shll
cmpl
incb
mov
cltd
pushf
icebp
mov
in
xchg
mov
in
jmp
iret
out
push
fcoml
dec
dec
jae
jmp
sbb
addr16
cltd
xchg
sub
ret
and
stos
out
jg
scas
mov
jecxz
shll
mov
xchg
mov
stos
dec
arpl
jmp
lods
stc
cmp
cmp
int3
cltd
jne
cmpsl
out
sbb
pop
rcr
addb
pop
mov
mov
repz
inc
or
das
adc
in
mov
sbb
lods
in
imul
xor
add
outsl
rcll
out
push
ret
mov
pmullw
lahf
lahf
sbb
cltd
fpatan
cmp
movsl
das
xor
jmp
popf
fs
mov
mov
xor
out
out
lahf
dec
sub
cmc
and
and
add
imul
or
cmc
mov
pop
cmp
bswap
jne
add
ret
mov
das
inc
out
mov
inc
popa
cltd
test
mov
cmp
jecxz
xlat
add
jmp
roll
dec
popl
dec
orb
imul
cs
call
push
mov
mov
push
add
cmpsl
popf
clc
push
jmp
repz
mov
in
mov
das
shll
stc
cmc
adc
add
mov
subl
lret
mov
lret
insb
jmp
loope
sub
pop
icebp
repz
scas
fsubrl
lahf
rol
imul
cmpl
lahf
dec
jge
popa
ret
cmp
jmp
and
cmp
test
xchg
xchg
pop
out
lods
iret
xchg
dec
fwait
les
mov
imul
sub
aad
cwtl
jecxz
jg
gs
fld
adc
outsl
imull
sub
cmpsb
add
mov
ret
in
stos
mov
jecxz
add
or
bnd
adcb
cmp
imul
or
pushf
cmp
lea
dec
pop
cmp
cmp
xchg
lahf
adc
setbe
push
xor
and
pop
pop
popa
sub
data16
xlat
scas
testl
cltd
mov
pop
shr
adc
xchg
lea
sbbl
xchg
mov
stos
ljmp
mov
fnstsw
test
out
fbstp
mov
xchg
out
rcrl
int
pop
insl
mov
cltd
jmp
scas
jne
mov
add
ds
mov
rol
ds
stc
stc
aas
out
scas
xlat
sbb
sbb
popf
ret
cli
adc
lea
addr16
pop
mov
stos
sbb
out
in
leave
xchg
or
cltd
lcall
mov
push
pop
jne
shll
mul
cwtl
jo
gs
pop
cltd
xlat
shrl
popa
lret
imul
int
adc
xchg
cltd
mov
cltd
lahf
mov
mov
sub
jecxz
rorb
mov
imul
decl
test
repz
jmp
cmpsl
mulb
cmpsl
iret
push
sub
scas
sbb
lahf
movsb
call
xor
xchg
xlat
pop
jge
jb
dec
lods
mov
cmpsl
inc
xchg
xchg
push
jge
nop
pop
add
ljmp
test
or
ret
outsl
cltd
dec
fnsave
daa
lret
add
mov
ret
xchg
stos
ja
iret
mov
in
cld
les
mov
xorl
jmp
pushf
or
leave
scas
popl
lea
pop
xchg
imul
loope
pop
int
inc
cmp
pop
ror
stos
fucom
sbb
inc
loop
lahf
xor
inc
fcomip
mov
repz
jmp
aad
popa
js
movsb
sbb
mov
movsb
arpl
shl
addr16
lret
adc
fcomp
pop
leave
movsl
lds
push
xor
dec
jno,pn
icebp
mov
lret
xchg
ja
fldenv
mov
cmp
rol
mov
sub
int
jmp
insl
and
in
or
mov
mov
adc
adc
mov
shl
mull
and
adc
jne
shrb
mov
aaa
lods
sub
jge
loope
lods
repz
mov
test
jmp
subl
xchg
or
popa
jmp
xchg
iret
fsubr
mov
ss
popa
sbb
lret
cmp
mov
inc
mov
pop
shll
fists
lret
xchg
test
in
fistpl
arpl
vphadduwq
cwtl
aad
insl
mov
lea
adc
and
mov
cmp
pop
lods
int
test
shll
out
ds
test
pop
test
gs
lea
rorl
pop
rorb
jge
out
mov
fabs
imul
cmp
cmc
adc
and
xchg
mov
bound
test
lods
lahf
mov
xor
shrl
lds
sub
inc
js
jnp
imul
mov
mov
lahf
jo
add
ret
or
dec
test
adc
imul
lcall
out
mov
clc
push
push
sub
dec
cmpsl
out
psraw
sbb
shll
sbbb
fnsave
and
divl
mov
sbb
and
ja
or
rorl
and
push
mov
cmpsb
out
or
cmpsl
xchg
mov
negb
or
pop
lcall
dec
mov
ficompl
jmp
xor
mov
xor
jl
jmp
inc
xor
jmp
inc
mov
push
inc
repnz
xchg
in
out
cwtl
pop
inc
int3
outsl
pop
ret
cltd
mov
jnp
iret
xor
aad
out
insl
dec
jp
jns
xchg
fadd
xchg
mov
mov
jmp
mov
pop
xchg
call
divl
aad
cli
sbb
gs
jmp
scas
mov
xchg
fucom
or
mov
cli
imul
rorl
inc
cmp
popf
pop
lock
movsl
aad
mov
pop
mov
fcom
int3
insl
push
xchg
mov
xor
out
push
add
rolb
jmp
ret
lea
out
addr16
pop
jmp
enter
mul
mov
repz
addr16
lret
arpl
call
push
mov
jno
fbld
out
mov
incb
jmp
push
add
shll
leave
shrb
dec
out
loopne
iret
cmp
jl
scas
pop
push
addr16
outsb
mov
fbld
cmc
mov
lret
xlat
aad
pop
cltd
fcomi
outsb
mov
or
xchg
addr16
ja
jne
adc
pop
fldt
cmp
jg
shll
fwait
mov
loope
mov
mov
ds
aad
sub
andl
cmc
out
popa
cmp
xchg
adc
out
in
out
in
repnz
adc
mov
dec
inc
fcomi
cmp
xacquire
clc
arpl
pop
ret
lds
xlat
xchg
mov
cmpsl
mov
push
jle
jmp
popf
mov
cmp
fildll
or
add
scas
enter
jmp
push
push
imul
ret
xchg
jmp
dec
jl
mov
ja
scas
int
js
in
mov
shr
shrl
sbb
mov
repz
inc
jnp
int
xchg
lea
cmp
mov
push
mov
fadd
xor
rep
test
mov
adc
cmpsb
clc
mov
into
out
inc
aad
jmp
in
movsl
push
xchg
imul
das
enter
loope
insl
jo
xchg
lods
xchg
mov
sbb
out
test
repz
mov
mov
xchg
push
add
lds
cmpsl
sbb
xchg
rolb
out
jg
arpl
in
cld
iret
test
lods
pop
inc
mov
sbb
shll
cmp
fbstp
mov
movsb
jo
js
repz
jle
in
mov
clc
rorl
aad
mov
mov
or
stos
in
lds
shl
rorb
addr16
jo
mov
push
and
jecxz
test
mov
xchg
rcr
mov
xchg
rorl
cltd
pop
mov
cmpsl
setno
outsl
pop
jnp
jne
jecxz
imul
mov
cli
cltd
bound
fistl
shrl
imul
push
arpl
popf
shll
outsl
sub
pop
push
ja
lock
xlat
sub
xchg
mov
nop
outsl
pop
repnz
insl
pop
lret
clc
add
idiv
add
push
aam
xchg
daa
pavgw
jmp
cmc
mov
shlb
adc
aad
mov
fucomi
pusha
test
aam
in
jmp
loope
lds
notl
push
ljmp
pop
out
and
aas
sbb
push
inc
sub
out
scas
cmc
jns
arpl
enter
outsb
add
int
pop
aam
stc
add
icebp
js
mov
int
xlat
pusha
adc
sar
mov
out
test
out
mov
pop
das
arpl
push
frstor
or
cwtl
loop
fimull
pop
sbb
add
aad
arpl
out
xchg
add
popa
movsl
mov
jmp
adc
nop
and
sub
fildll
push
shll
mov
test
xchg
mov
adc
jecxz
and
negl
xchg
mov
mov
jl
mov
xchg
notl
jnp
adc
sub
mov
pop
or
add
sbb
imul
cmp
mov
cltd
loope
test
test
pop
mov
aam
lahf
or
test
out
xchg
mov
outsl
jmp
movsl
xchg
add
movsl
scas
lahf
or
leave
int
add
or
cmp
jl
leave
xchg
adc
push
sbbl
xchg
in
push
pusha
xchg
roll
ja
arpl
cltd
ret
cld
sti
pop
outsl
rcr
insb
mov
int3
dec
dec
fldl
movsl
sti
subb
add
push
mov
ljmp
idivl
adc
in
insl
mov
scas
cltd
or
xor
cmpb
and
and
lds
sbb
js
fninit
in
mov
pop
imul
ljmp
adc
pop
lahf
sbb
mov
adcl
dec
or
mov
rep
negl
shl
out
imull
mov
popa
rcrl
cmc
loope
add
and
cmp
or
fldt
cmc
ja
fucomip
fidivrl
insb
mov
add
cmpsl
push
mov
hlt
out
mov
sbb
ret
lods
lods
out
idivl
filds
out
mov
push
xchg
ret
in
mov
jecxz
ds
aas
test
mov
sub
push
fsts
sub
gs
jno
adc
jmp
adc
xlat
sub
jecxz
popa
jne
addr16
cmp
mov
jnp
sub
popf
jmp
add
mov
cli
mov
jp
add
adc
pusha
or
inc
ja
mov
repz
pusha
sbb
ljmp
mov
cmpsl
xor
out
mov
imul
shrb
sbb
sbb
aas
cltd
xchg
lret
in
js
scas
arpl
int
cwtl
cli
dec
out
pop
mov
lea
call
test
inc
adc
stos
mov
inc
cmp
imul
xor
cmc
loopne
push
mov
roll
ds
and
test
rol
add
cmc
mov
xchg
cmpsl
subl
repz
mov
arpl
es
or
xor
insl
adc
and
jecxz
sbb
lods
pop
xchg
jne
jne
popa
iret
int
add
cltd
xlat
fldt
roll
inc
mov
fstpl
repz
jge
lahf
xchg
es
fistpl
out
mov
mov
add
add
push
int
push
pop
pop
lds
sbb
pop
cltd
jo
adc
imul
mov
in
in
scas
pop
fnstcw
push
stos
subl
ja
vmovsd
xchg
sysret
fst
aaa
cld
xor
sub
out
sbbl
add
mov
popa
sub
mov
in
xchg
movsl
mov
in
stc
mov
lods
testb
rcll
imul
fisttpl
movsl
pop
and
pop
addr16
mov
sti
mov
or
std
mov
insl
adcb
pusha
sub
popa
stos
enter
push
hlt
insl
loopne
dec
cwtl
pop
faddl
test
mov
cmc
shrl
jg
mov
out
xlat
pop
mov
in
mov
rolb
movsl
cmpl
popf
mov
jecxz
fxch
sarl
test
mov
cltd
addr16
sub
or
ja
pop
fistpll
mov
jne
adc
stc
mov
and
out
sbb
mov
push
jb
clc
insl
std
aaa
pop
pop
js
mov
mov
test
sbb
das
je
dec
stos
ljmp
pop
daa
push
test
test
push
imul
popa
stc
push
xchg
repz
out
stos
iret
outsb
xchg
mov
in
fwait
xlat
aam
xchg
shll
push
ljmp
lcall
ffree
cmp
fistpl
mov
lahf
xchg
sbb
mov
and
push
shrl
mov
lret
loope
stos
add
out
fbld
xchg
dec
fwait
and
popf
pop
lret
popa
mov
cmc
xchg
filds
in
out
sub
adc
sbb
add
sbb
out
filds
fabs
fcomi
or
cmpsl
rcll
add
adc
rolb
add
push
je
bound
dec
stos
jecxz
dec
cmc
sbb
imul
inc
cmp
jnp
shl
mov
dec
outsl
out
cwtl
les
cmpsl
mov
dec
int
insl
cwtl
pop
or
and
and
push
jmp
neg
lahf
xchg
lahf
pop
int
stos
nop
arpl
loop
jmp
sahf
ja
insl
sub
popa
cmpsb
cmpsl
inc
jecxz
leave
shll
fwait
lds
in
aad
mov
adc
sbb
mov
fsubrl
cltd
sub
mov
mull
imul
lahf
negl
loope
or
xchg
outsl
clc
test
sub
cmp
mov
aad
popa
cmp
addb
lahf
jecxz
mov
mov
pop
mov
jp
push
lds
fwait
push
jl
mov
movsb
roll
add
mov
mov
popa
sub
mov
fisttpl
loopne
fnsave
inc
xor
arpl
ret
test
fld
mov
iret
xor
cmpsl
adc
mov
mov
and
sbb
mov
mov
test
ret
stos
rorb
and
add
sarl
add
jbe
mov
rol
lret
sub
std
aad
mov
jmp
push
cltd
loop
pushf
repz
arpl
xchg
xchg
add
fisttpll
pop
sub
shrl
les
mov
mov
sbb
loopne
arpl
sbb
mov
ret
push
push
pop
sbb
xlat
insl
stos
out
hlt
or
xor
cmp
out
in
out
insl
adc
testl
imul
cwtl
dec
adc
movsb
sbb
add
ret
cli
push
fistl
push
xchg
popf
subl
mov
das
jmp
les
sub
les
sbb
lahf
push
in
addr16
mov
fbstp
add
fldz
andl
stc
fdivrl
or
loope
out
fwait
roll
pushf
andl
add
test
scas
je
sbb
ljmp
fdivrl
xchg
imul
jns
mov
scas
xchg
dec
lret
ret
mov
mov
stos
mov
push
out
add
iret
xor
xchg
xchg
pop
sub
xor
jecxz
pop
adc
lret
shr
jns
test
ret
mov
rclb
cmpsl
mov
xchg
cmp
dec
add
popa
pop
lods
inc
jne
add
push
stos
xchg
add
jae
insl
mov
lret
xchg
lahf
adc
sbb
shrb
sti
aas
gs
mov
jmp
mull
cmpsb
in
imul
ja
cmp
scas
pop
xchg
in
popf
pop
xchg
mov
lret
lods
leave
out
push
cmp
lea
jmp
xlat
xchg
iret
mov
add
mov
fisubrl
jnp
xor
xlat
addb
hlt
movsl
add
jmp
xorl
sbb
outsl
loop
mov
iret
repz
mov
add
scas
sbb
cwtl
mov
shll
lock
test
xchg
adc
or
jmp
sub
out
lahf
loopne
jno
xchg
mov
scas
cmc
mov
movsl
outsl
popf
xorb
adc
dec
cwtl
push
arpl
fildl
rcll
jl
fists
xchg
out
push
sub
daa
mov
jne
repz
iret
les
push
or
popa
mov
mov
shr
and
adc
test
ficoml
iret
mov
fsubrl
das
sbb
pop
test
pop
xchg
xor
xchg
mov
mov
and
repnz
das
and
int
jecxz
mov
insl
jne
loopne
repz
test
lcall
mov
adc
popf
andl
call
mov
loopne
dec
adc
jmp
repnz
imul
push
outsl
xchg
insl
cmpsl
pop
repz
aad
rol
imul
fdiv
dec
inc
daa
xchg
cltd
loopne
lret
jne
pop
adc
cmp
test
pop
jecxz
pop
dec
mov
jmp
push
cmc
push
lcall
jnp
cwtl
adc
scas
xchg
leave
xchg
test
jle
aad
addl
iret
push
push
aam
daa
cmp
negl
add
cmpsl
sbb
pushl
push
sub
in
mov
ret
sub
cmc
lahf
in
jo
test
xor
addl
rclb
fsub
xchg
movsl
adc
cmp
fistl
pop
mov
cmpsl
int
mov
mov
push
scas
imul
xchg
push
popa
mov
xchg
jmp
mov
mov
or
mov
xchg
ds
fdivl
mov
mov
mov
lods
bound
icebp
mov
xlat
mov
not
fwait
shll
xchg
cltd
sbb
dec
int
pop
or
dec
popa
mov
mov
cmpsl
xchg
rcll
add
rcll
repz
out
cwtl
movsb
cmp
out
scas
ret
cmp
popf
sub
fwait
jnp
xchg
xchg
jmp
rcll
cmp
ds
loope
test
in
ret
jnp
popa
rcrb
flds
adc
neg
sbb
in
push
cwtl
pop
loope
lea
xchg
jae
das
dec
jmp
and
sub
call
xchg
xchg
jne
test
leave
cmp
jmp
mov
xchg
out
decl
clc
jbe
or
jnp
stos
sbb
xchg
jo
cmc
jne
xchg
cld
out
outsl
mov
in
sarl
mov
add
out
faddl
push
enter
out
popf
mov
sbb
lahf
jo
scas
xchg
cmpsl
lods
fwait
daa
dec
cwtl
jmp
ja
shll
shl
out
mov
insl
loope
cmp
movsl
repz
lods
mov
or
xor
dec
iret
xchg
adc
clc
int3
subl
sub
mov
xlat
push
mov
adc
or
jb
lahf
push
mov
mov
iret
loopne
rcrb
jmp
lret
insl
mov
fstpt
mov
mov
xchg
inc
push
mov
jecxz
rcl
mov
fwait
outsl
out
xchg
call
test
int
ret
ja
add
xor
jmp
inc
imul
or
fwait
jae
jmp
xchg
leave
outsl
sub
and
cmc
lock
ja
and
insl
push
add
outsl
adc
add
mov
stos
rol
pop
xchg
sub
or
mov
insl
adc
xrelease
mov
inc
mov
mov
cltd
pop
jmp
pop
sub
psrlw
jne
mov
adc
lret
jne
pop
add
cltd
subl
ja
xchg
lds
cltd
in
sbb
mov
pusha
push
mov
or
movsl
leave
flds
loope
aas
sbbl
in
sub
pop
cmp
es
inc
incl
jo
sub
mov
popa
out
cmpsl
loop
cmpsl
adc
frstor
fwait
ret
xorl
mov
in
iret
ret
lds
mov
imul
ret
adc
lods
jno
fstl
andl
repz
jecxz
test
filds
imul
pop
roll
push
loope
test
sbbl
ja
fildl
out
shll
xchg
jno
rol
int3
outsl
fld
hlt
push
sub
mov
mov
lret
test
dec
cwtl
pop
xchg
mov
and
jnp
mov
mov
js
rolb
fbstp
imul
fstpt
clc
mov
movsl
ret
sarl
arpl
lret
jl
rorl
repz
les
dec
in
pop
add
in
push
dec
iret
hlt
mov
sbb
mov
inc
xchg
ja
into
stos
pop
add
orl
inc
scas
mov
aas
push
adc
jnp
out
nop
paddw
test
push
js
test
lret
jmp
pop
push
or
xor
sbb
int
dec
jne
or
jmp
int3
adc
inc
push
push
jp
test
scas
lds
iret
lds
nop
lds
in
push
adc
xchg
xlat
leave
add
mov
test
hlt
lods
and
clc
lock
fld
ret
xchg
ret
enter
xchg
movsl
imul
dec
rcll
inc
add
inc
les
xchg
pop
hlt
or
ja
pop
jnp
jmp
leave
outsl
cmc
stos
iret
mov
ret
mov
mov
xor
pop
int
insl
cwtl
and
jmp
xchg
js
fwait
icebp
lahf
cld
loope
in
mov
jmp
cmove
mov
lea
jmp
rorl
push
jbe
cwtl
push
ja
mov
inc
dec
out
lods
addr16
shrl
divb
std
pop
cmpsl
movsl
and
jecxz
fwait
ret
aad
insl
pop
lea
in
sub
sahf
lret
jmp
iret
fnstenv
inc
popf
repnz
lock
xlat
mov
cmc
jo
test
cmp
push
xlat
cmpsl
and
sub
stos
xchg
mov
cmp
mov
pop
xchg
rcrl
daa
sub
lcall
stos
or
in
ret
int
mov
leave
jecxz
cltd
out
xor
fnstenv
adc
mov
add
gs
lahf
mov
shll
loop
add
inc
xchg
clc
test
pop
gs
jp
dec
ret
cmc
xor
mov
ret
sti
rcl
jg
sbb
cmp
scas
adc
popa
jo
std
scas
cltd
cwtl
xchg
xchg
leave
nop
cmc
lret
mov
sbb
gs
jge
in
dec
imul
test
popa
and
mov
rclb
loope
ja
fwait
imul
iret
stos
xchg
lahf
xlat
aam
xchg
inc
aam
fistpl
pop
dec
pop
stos
cltd
pop
and
testl
mov
add
xchg
ret
or
xchg
add
jmp
add
mov
pop
out
subl
xor
jae
mov
inc
rol
imul
pop
add
mov
int
lea
dec
out
push
ss
arpl
out
cmp
xorl
divl
inc
fucom
ljmp
jle
cltd
jo
or
lods
aad
xor
mov
mull
movsb
mov
scas
push
lret
jo
dec
out
les
shll
add
xchg
out
or
test
pop
sbb
lea
push
mov
sbb
mov
shll
outsb
fdivs
push
add
test
in
xlat
jns
pop
mov
lods
fwait
insl
ja
xchg
ljmp
mov
out
packssdw
pop
aas
fnstcw
xchg
fildll
push
fmuls
clc
test
sti
push
addr16
mov
popf
arpl
fs
mov
inc
int3
test
imul
arpl
mov
addr16
rcr
lahf
mov
mov
je
out
lret
cli
pop
jp
dec
fimull
mov
jno
rolb
cmp
and
shll
xchg
jecxz
xlat
inc
scas
test
mov
jecxz
cltd
adcl
ja
mov
repnz
idivb
js
lds
test
cmp
adc
xchg
fwait
jnp
ljmp
popf
cwtl
movsl
js
call
cmp
pop
test
int3
iret
cmpsl
roll
push
imul
imul
insl
movsl
imul
xchg
pop
xchg
jecxz
in
sub
jns
popa
mov
cmpsl
sbb
jmp
sbb
mov
std
mov
jge
sahf
lcall
xorb
lahf
xchg
mov
pop
xchg
ss
mov
scas
imul
rolb
mov
xor
lea
mov
push
icebp
and
int
sbb
loope
pop
fisubl
ds
and
hlt
cmp
movsl
mov
into
in
repz
jecxz
cltd
mov
mov
loope
mov
arpl
ljmp
mov
add
in
mov
ficoms
push
repnz
nop
iret
jecxz
inc
addr16
mov
aad
std
cmp
pushf
ret
mov
pusha
jns
xchg
aad
mov
lahf
lods
sub
loop
jmp
sbb
cld
sub
out
jl
fdivs
xor
xor
sbb
out
popa
call
faddl
arpl
testl
loope
std
subl
fstl
fwait
mov
cmc
cltd
out
test
popa
in
ret
xorl
cmp
cmpsl
ja
jbe
jp
lock
loope
xor
scas
push
mov
mov
sub
leave
out
loopne
xchg
add
insl
andb
and
cwtl
inc
mov
or
jp
imul
loopne
aas
jmp
ret
popf
xor
and
pop
test
in
sbb
sub
imul
fistpll
cmp
in
mov
repnz
cmp
mov
mov
loope
cmpsl
in
into
dec
movsl
or
jo
or
and
in
mov
mov
flds
movsl
fsubl
pop
int3
jg
mov
test
cmpsl
and
cli
mov
mov
jmp
mov
imul
clc
mov
mov
popf
push
test
lds
jne
or
lcall
xchg
or
fwait
jne
clc
daa
or
jmp
clc
addr16
jmp
lahf
and
cmc
cwtl
mov
add
notb
gs
pop
jmp
rorb
cmp
cld
sbbb
push
add
popa
inc
gs
call
mov
mov
push
sub
fcoms
popa
addl
loope
jnp
lods
adc
in
push
mov
xlat
pushf
mov
mov
lahf
cmc
pop
movsl
into
out
jmp
xlat
fisttps
ror
sub
sub
xchg
push
adc
mov
mov
stos
imul
fdivrs
add
xchg
cmpsl
out
test
mov
dec
mov
pop
mov
rcl
xchg
in
pop
jmp
pop
test
mov
in
out
mov
or
test
divb
lahf
or
cld
jmp
hlt
mov
in
test
mov
cwtl
fxam
outsl
fwait
mov
pop
popf
adcb
fcmovnbe
cwtl
dec
sbb
ja
fists
repz
lret
lret
or
mov
push
int
jmp
cld
test
push
lds
movsl
xchg
lret
adc
mov
out
sub
lods
and
test
stos
lds
fmulp
fwait
arpl
add
pop
push
mov
daa
in
popl
into
ja
cli
int
mov
jns
hlt
addr16
repz
in
adc
push
sbb
push
mov
mov
xlat
adc
inc
cmp
dec
lods
add
mov
add
xchg
clc
inc
lahf
push
loopne
shll
insl
popf
scas
shll
add
lahf
stos
mov
xchg
daa
xchg
fisttpl
mov
shll
mov
ja
iret
xchg
out
mov
add
xchg
jmp
ds
gs
mov
mov
xchg
jmp
leave
stc
xchg
scas
lods
xchg
popa
stos
push
fbstp
jne
cmpsl
aas
mov
xchg
or
lds
and
scas
sub
test
mov
int
pop
xlat
in
rorl
arpl
xchg
out
call
sub
and
mov
sbb
out
movsl
cld
prefetch
xchg
add
xlat
inc
stc
andl
jmp
insl
mov
nop
add
mov
sbb
lea
mov
sar
cmpsl
fwait
lahf
imul
mov
fldenv
ja
aad
cmpl
mov
out
mov
ficomps
js
sarl
sub
ja
outsb
scas
frstor
xor
iret
xchg
cwtl
out
pop
xor
add
int
repz
lret
imul
mov
cmc
fincstp
neg
xchg
in
mulb
cwtl
enter
out
gs
lds
push
mov
daa
dec
xchg
pop
scas
fwait
mov
cld
ret
js
jmp
sub
lahf
out
push
fsub
frndint
jae
fisubrl
outsl
xor
int3
cwtl
xchg
xor
pop
lret
stos
sub
fwait
cmp
dec
or
inc
dec
ljmp
pop
jmp
xchg
mull
js
popa
lods
adc
xchg
mov
cmp
pop
mov
sbb
jne
out
mov
push
popa
mov
xchg
sbb
add
divl
iret
jmp
scas
cmp
dec
movsl
adc
sbb
jmp
ss
adc
and
inc
inc
aam
out
cmc
jmp
fists
in
mov
pop
punpcklwd
xchg
ret
loope
cmpsl
in
push
int
ja
fldenv
add
dec
out
pop
test
popl
pop
adc
mov
cwtl
in
xor
inc
decb
out
stc
clc
mov
sub
cmp
cwtl
fucomip
and
sbb
cmp
gs
sbbl
adc
or
add
in
dec
mov
out
or
orl
mov
xor
rorl
imul
fs
das
arpl
leave
loop
aad
adc
mov
mov
push
dec
sbbb
jl
out
mov
inc
rorl
shl
add
in
mov
nop
popa
mov
pop
lahf
add
sub
int
insl
add
xlat
xchg
lea
sbb
scas
in
test
add
pusha
cwtl
add
leave
out
push
jecxz
sub
cmc
ja
outsl
iret
lock
xor
mov
sbb
jne
cwtl
mov
jmp
xchg
xor
lea
jp
stos
aad
jg
sarl
cmpsl
jno
test
lahf
stos
lahf
out
xor
add
add
push
test
jo
cmc
mov
lods
in
xchg
call
lea
xchg
fbld
pop
sub
adc
outsb
test
adc
pop
lea
mov
fldenv
xchg
xchg
cwtl
fsubrp
iret
es
sti
ret
out
shl
lret
adc
popf
cwtl
mov
test
fiadds
mov
aad
call
mov
cmpl
lret
imul
lods
cwtl
cmc
outsl
test
imul
lods
pop
ud0
inc
rcrb
inc
xchg
cwtl
xchg
jmp
arpl
cmp
loope
mov
rep
ret
daa
in
loope
jne
gs
decl
jne
iret
adc
fsubl
xchg
jmp
jnp
insl
push
jecxz
leave
sbb
push
test
jecxz
inc
addr16
in
xlat
icebp
clc
ljmp
mov
or
sarl
sub
add
cmc
leave
adc
test
and
sbb
gs
mov
adc
xchg
and
loope
adc
fwait
test
fisttpl
lret
mov
mov
test
ja
aam
hlt
add
in
test
clc
add
aad
mov
test
xchg
jo
jnp
dec
ja
jne
leave
add
clc
inc
lods
aad
outsl
mov
imul
or
push
loop
push
popf
jb
fs
pop
rep
adc
lods
outsl
out
pop
andl
cmpsl
popa
rclb
addr16
in
cwtl
arpl
in
adc
jmp
inc
rcl
insb
and
jl
cmp
or
or
gs
fisubl
add
push
mov
cmp
xchg
insl
testl
addr16
xchg
lahf
cwtl
mul
shlb
pop
cmpsl
adc
add
ja
mov
test
mov
cmpsl
adc
fidivrl
and
xlat
pop
in
mov
add
cmp
arpl
shll
loope
ljmp
subb
fisttpl
pop
ja
je
bnd
notb
ljmp
cmp
leave
xlat
pop
fists
pop
mov
stos
repz
scas
rol
cli
inc
cli
inc
inc
iret
pop
enter
and
dec
call
cli
xchg
xchg
outsl
dec
jecxz
pop
scas
cmc
sub
lods
lsl
fwait
jmp
xchg
mov
dec
inc
mov
mov
mov
lock
xor
fwait
in
mov
and
mov
fstl
adc
mov
push
arpl
push
js
test
pop
std
jne
jecxz
das
ret
movsl
mov
aam
cmp
insl
lods
mov
push
add
pop
fstps
cwtl
test
fsts
dec
adc
mov
fistl
adc
cmp
mov
or
jmp
xor
je
sub
add
les
test
jnp
cltd
xorl
jl
mov
insl
jmp
rcll
dec
loope
repnz
sarl
popa
test
notl
cmpsb
add
js
popf
in
jmp
xchg
addr16
lock
fldt
cwtl
cmpsl
cmpsl
pop
xchg
movsl
jl
aad
xchg
add
out
jmp
popa
pop
xchg
mov
nop
sub
sub
ficomps
and
adc
inc
ja
mov
repz
jmp
gs
stos
scas
add
xlat
jns
mov
mov
cmc
movsl
mov
xchg
fbld
andl
gs
outsl
add
jne
frstor
test
or
test
sti
push
leave
lahf
sarb
adc
jmp
xchg
negl
rcrl
rclb
or
sbb
loopne
jecxz
fcompl
outsl
in
lea
lods
std
addr16
adc
xchg
imul
push
mov
sub
fistl
mov
mov
cltd
mov
mov
test
aas
fldenv
call
jmp
cmp
sbb
cmpsl
leave
sbb
push
jmp
jl
fwait
push
jmp
imul
jne
jecxz
mov
leave
jns
lds
jnp
jnp
arpl
sbbl
sbb
push
jp
cmp
jp
fwait
movsl
push
add
iret
in
or
push
xchg
and
sarl
insl
popa
xchg
imul
adc
or
aad
dec
mov
cltd
pop
das
insl
stos
sarl
or
test
lock
movsl
xchg
sbb
push
or
pop
aam
xchg
mov
aad
mov
sbbl
repz
sbb
sub
lods
sbbb
add
iret
lret
xchg
mov
repnz
shlb
sub
lock
fisubs
cmp
test
mov
das
ret
clc
cmp
hlt
mov
cmp
popf
enter
cltd
test
xchg
mov
rol
call
fstl
pop
inc
cmpsl
jecxz
dec
mov
lcall
test
jmp
and
sub
das
xor
jge
int
mov
fstpl
jle
shl
cmp
in
dec
scas
aad
ja
mov
jae
idiv
xchg
loope
mov
push
test
xor
sub
cmpsl
or
fldpi
mov
loope
ljmp
jmp
outsl
adc
pop
pop
test
mov
xchg
mov
dec
adc
or
aad
inc
lret
xchg
shlb
orl
cmp
fbstp
sti
lcall
or
mov
popf
imul
addr16
ret
ja
into
xor
popf
cwtl
pop
mov
imul
sbb
shl
repz
cmp
jecxz
outsl
mov
iret
ret
test
mov
cmpsb
out
ljmp
add
xchg
in
pop
fnsave
cmp
aad
or
cwtl
loope
testl
fwait
pushf
loope
dec
fists
xchg
mov
cmpsb
rcr
lret
aas
cltd
mov
add
xchg
js
test
pusha
rorl
ja
xchg
pop
lods
adc
or
cmp
scas
stos
outsl
and
dec
lds
inc
xchg
jl
pop
in
sbb
mov
and
mov
addr16
cmp
mov
or
jmp
mov
fs
push
aam
stos
sbb
or
rclb
and
outsl
xchg
lret
pop
pop
enter
das
adc
jne
test
rcl
add
pop
int
in
andl
pop
out
xchg
xchg
out
push
cmp
loope
cmp
add
cmc
addr16
shll
gs
ja
mov
push
popa
mov
xchg
sbb
mov
arpl
cmpb
ja
loope
xchg
in
jb
repnz
sub
and
test
xchg
hlt
add
fwait
push
insl
push
gs
movsb
dec
xor
ret
in
lea
mov
sub
jecxz
xchg
or
shr
and
ret
xor
inc
cmp
das
jmp
and
fucomi
add
iret
pop
movsl
fmull
xor
jecxz
xor
sti
js
jmp
leave
push
sbb
shl
or
adc
ret
lock
and
push
mov
push
dec
add
out
test
jmp
rorl
xchg
jecxz
clc
jp
loop
xorl
xchg
rclb
orl
sbb
leave
in
fimull
ror
les
pop
and
ret
mov
cwtl
out
repz
cmpsl
sub
lret
jns
mov
popa
xor
int
arpl
fldcw
push
lds
repz
lcall
test
cs
push
dec
out
or
fadds
adc
in
popa
pushl
cmpsl
imul
mov
jmp
outsl
addb
fidivrl
imul
jg
push
shll
dec
dec
iret
mov
xlat
xor
test
cmp
jnp
sbb
push
xchg
pop
dec
mov
iret
jl
dec
outsl
nop
lahf
movsl
es
cmc
xlat
mov
xor
orb
xchg
shld
lods
aam
or
ja
cltd
rcrl
jge
push
pop
or
push
mov
lret
rorl
out
outsb
ja
mov
dec
push
inc
cltd
iret
imul
inc
cltd
cmp
sub
iret
aad
fwait
xchg
push
test
popf
stc
mov
fiaddl
clc
cltd
mov
jecxz
sti
pushl
mov
mov
test
in
mov
mov
cmp
xlat
adc
push
mov
jo
lods
ja
mov
sbb
mov
sar
and
cli
or
out
xchg
ja
xchg
outsl
bound
stos
or
popa
inc
or
xor
push
jb
repz
fistps
dec
push
inc
adc
sbb
cld
adcl
mov
out
pop
or
xlat
movsl
leave
jle
push
movsl
ja
mov
scas
push
fsubr
pop
unpcklps
in
int
add
not
mov
mov
test
aas
imul
mov
mov
in
dec
jecxz
stos
fst
imul
mov
jnp
dec
and
test
sti
cmpsl
iret
xchg
fnstsw
fwait
add
lods
popf
sbbl
xchg
mull
stos
in
test
arpl
jmp
loope
cmp
xchg
leave
enter
cmpl
dec
push
cs
repz
mov
xchg
outsl
iret
inc
cmp
cmpsl
mov
out
mov
insl
addr16
jne
lock
stos
dec
in
lods
xchg
testl
andl
fisttpl
test
xchg
jmp
ret
out
filds
enter
dec
lea
loopne
test
mov
cltd
mov
xchg
insl
pop
mov
or
scas
lea
loopne
popa
test
mov
in
sub
test
xlat
ret
mul
xchg
in
xchg
or
mov
stos
mov
xchg
int
mov
scas
cmp
push
imul
leave
or
jmp
imul
repnz
mov
inc
add
out
jmp
loope
mov
cltd
pop
cltd
adc
imul
sub
scas
gs
xorb
lds
or
jecxz
arpl
out
scas
xchg
ret
pusha
pop
and
vpaddusw
mov
rcrl
andb
imul
gs
add
test
xlat
insl
dec
fstps
lret
cmp
mov
lret
xchg
xchg
in
mov
lahf
dec
popf
test
mov
and
ret
scas
sbb
push
imul
xchg
fimuls
jmp
int
cmp
mov
sub
js
mov
jne
imul
pop
sbb
loopne
sub
mov
outsl
or
or
imul
mov
mov
arpl
fwait
iret
scas
cltd
cmc
test
fstpl
fld
aas
arpl
jmp
xchg
aad
ja
outsl
jecxz
loope
clc
insl
sub
adc
jmp
int
xlat
cltd
out
inc
or
xor
jmp
lods
lea
xchg
leave
shrl
subl
push
enter
lret
call
cli
push
fstpl
inc
sbb
lahf
mov
cltd
dec
xchg
out
jge
popa
cmp
mov
mov
xlat
test
inc
ljmp
mul
jno
imul
cmc
outsb
cmp
fbstp
mov
xchg
jae
push
mov
xor
xor
mov
xchg
jecxz
aad
scas
add
mov
hlt
insl
xchg
push
xor
movsl
flds
cwtl
cmpl
dec
mov
jg
mov
mov
ret
lods
pop
test
scas
or
addps
xor
leave
mov
jnp
fucomip
das
popa
ret
movsl
and
iret
or
mov
xchg
stos
inc
sbb
mov
leave
cmc
aad
jmp
xlat
cli
jae
dec
mov
lods
xchg
ret
rorl
jne
repz
xchg
xor
out
rolb
sub
mov
add
rorl
out
lods
add
outsl
xchg
pop
lds
aad
xlat
dec
xor
std
xchg
lahf
iret
sahf
xchg
loope
cmp
mov
sti
xchg
cwtl
mov
scas
jge
repnz
shl
mov
sub
filds
sbb
in
insl
jecxz
stos
ror
cmp
jnp
jmp
popa
fwait
test
mov
cwtl
repnz
fstpt
sub
fbstp
fwait
rorl
sub
mov
popa
fldt
jl
mov
pushf
push
fisttps
dec
cld
loopne
sub
mov
into
dec
fisttpl
mov
ja
push
xchg
sub
push
dec
test
fwait
lahf
add
roll
lret
jmp
out
popa
pop
add
xorb
addb
lahf
mov
in
les
or
mov
cwtl
out
addr16
in
pushl
lods
fnstcw
testl
cmp
cltd
andl
pop
mov
addr16
mov
fcomps
mov
sbb
fimull
mov
xorl
iret
aam
dec
sub
aas
lds
adc
fisttps
fnsave
xchg
push
xor
jne
adc
repz
les
xorb
jne
fs
add
jmp
xchg
xchg
mov
pop
repz
in
scas
fs
xchg
or
adcb
shll
add
push
sahf
lds
adc
cli
ja
lods
dec
and
in
ss
and
mov
and
negb
in
out
movsl
mov
push
aas
mov
into
andl
push
lret
int
lds
xchg
in
andl
movsl
sub
mov
inc
adc
subl
xchg
pop
xor
lret
out
loope
out
cli
mov
mov
test
cwtl
arpl
les
outsl
pop
xchg
es
cmp
pop
mov
iret
cmpsl
in
shlb
imul
fldt
mov
xor
fcmovnbe
mov
into
int
xor
in
wbinvd
xchg
mov
adc
sub
js
pop
aas
aad
push
fildll
fcmovne
mov
nop
pop
lahf
xchg
in
add
outsl
repz
mov
cmp
mov
xchg
xchg
test
mov
xchg
xor
lahf
fildll
test
xchg
adc
or
imul
cmpsb
scas
shl
jge
sub
stos
sbb
dec
inc
pop
add
lret
je
int
outsb
test
mov
movsl
in
shll
adcb
fwait
inc
jno
pop
jne
fldcw
sahf
sub
es
in
mov
jb
mov
dec
aad
jmp
cmc
mov
sub
subl
jp
lcall
adc
test
mov
cltd
in
lea
xor
shrl
mov
iret
ret
jle
aad
stos
rolb
rcrl
leave
lds
cwtl
mull
xchg
repnz
aas
xorl
fcomp
mov
mov
fst
jbe
inc
in
lret
sbb
xchg
jo
xor
test
pushf
mov
jmp
int
es
fcomi
loop
jecxz
inc
popf
jno
popa
cmp
arpl
xor
scas
mov
add
stos
es
lods
in
fcmove
lahf
gs
and
cwtl
jmp
adc
dec
rorb
push
or
arpl
popa
popf
mov
popf
pop
cltd
repz
out
xorl
add
xor
fwait
gs
pop
push
mov
repnz
xor
lret
mov
lahf
popf
in
sbb
push
outsl
idiv
adc
cltd
out
pop
scas
notl
int
push
icebp
cmpsl
arpl
jmp
outsb
or
icebp
adc
lods
xchg
and
stos
mov
in
cmc
push
jne
xlat
push
mov
xchg
aad
cmpsl
cwtl
cmp
fildl
and
cmc
movsl
sbb
clc
jecxz
rcrl
lods
mov
imul
add
cmp
adc
mov
mov
mov
outsb
clc
mov
and
dec
test
leave
in
in
push
pop
mov
scas
movsl
xchg
cmp
clc
lock
pop
andl
jl
xcrypt-ecb
cmpsl
mov
push
je
data16
adc
lahf
adc
push
dec
xor
xor
hlt
outsb
and
push
testl
icebp
shl
lods
cmp
ljmp
jne
cmp
imul
repz
mov
adc
scas
mov
xor
rcr
xchg
fildl
mov
cmp
ja
pop
movsl
adc
mov
out
xchg
mov
imul
adc
flds
pop
jmp
insl
nop
adc
fnsave
or
test
xor
push
in
filds
fwait
and
nop
in
cwtl
test
or
mov
fwait
ds
jmp
xor
iret
lea
cmp
idivl
xlat
jne
xlat
mov
scas
scas
aam
dec
subl
movsl
arpl
lea
pop
jno
push
fstps
xorl
inc
out
sub
sbb
cmp
mov
in
ljmp
scas
jo
sti
std
popa
fdivs
xchg
pop
js
push
orb
mov
pop
test
ja
lea
cwtl
cmp
mov
push
xchg
inc
and
stos
mov
xor
push
cmp
and
push
add
jmp
pop
ja
xchg
add
jnp
or
xor
stos
test
push
sbb
xor
cmc
test
mov
xchg
call
xchg
and
aad
leave
sbb
xchg
shr
insb
xor
xchg
and
enter
xchg
stos
mov
xchg
aas
test
divb
iret
mov
icebp
dec
and
sub
and
mov
stos
dec
aad
rclb
cmpsb
xor
repnz
fdivs
jmp
leave
pop
mov
mov
sub
popf
pop
sarb
ret
cld
xchg
movsb
jg
mov
xor
data16
test
push
jbe
jne
loopne,pt
cmp
sub
lds
mul
sub
movsl
popa
mov
push
repz
xor
sti
out
outsb
adc
inc
nop
mov
lods
aas
fld
gs
push
loopne
bnd
lcall
dec
jne
mov
ret
test
or
in
mov
push
aaa
movsl
xchg
lahf
sub
push
outsl
mov
push
dec
aad
dec
mov
jno
shl
outsl
add
jmp
int
jp
outsb
pop
out
loope
jle
lret
fndisi(8087
push
icebp
jge
jae
mov
movsl
mov
imul
in
repnz
sub
popa
insl
push
mov
sbb
ret
lahf
stos
rcll
add
push
and
xchg
mov
cmpl
rorl
dec
stos
cwtl
imul
mov
in
jns
xchg
or
mov
lcall
cli
stos
mov
into
out
mov
cs
in
fwait
xor
lods
xchg
push
pop
hlt
outsl
stc
int
aad
mov
lds
test
loope
lock
out
cmp
mov
rorb
call
mov
xchg
iret
scas
in
mov
pop
pop
lret
aad
lds
lea
mov
pop
jo
jno
and
leave
pop
aas
data16
cld
shrl
repz
mov
add
lahf
arpl
scas
repz
mov
xchg
loope
insl
dec
rorl
dec
test
and
fisttpll
mov
lea
pop
movsl
xchg
repz
outsl
or
sar
loope
cmp
mov
cmpl
lods
lret
dec
shrl
cmp
fildll
das
dec
cld
cmc
outsb
add
fwait
ret
pop
mov
lods
leave
loope
push
adc
dec
push
shrl
popf
mov
fwait
gs
scas
loope
jecxz
adc
loopne
lret
xchg
shll
ret
insl
xchg
in
adc
imul
shrb
inc
xlat
fwait
lods
xchg
ficompl
dec
jb
stos
scas
insl
jb
popf
mov
dec
cld
movsl
addr16
jmp
jmp
repnz
popf
cmc
je
cld
cmpsl
lcall
mov
aad
mov
jp
push
jne
xchg
loopne
xor
out
hlt
mov
adc
cld
movb
sub
lods
push
cmpsl
movsl
js
xchg
shl
pop
xchg
leave
stos
lea
sbbl
fsubrl
rcr
sbbl
dec
adcl
fldl
mov
stos
mov
loope
mov
adc
div
out
in
fnstcw
xor
imul
cltd
stos
jae
incl
popa
mov
ret
dec
rep
aad
cmc
xor
scas
xorl
shll
xor
jl
scas
sub
jne
fistpl
lods
jbe
imul
popa
rcl
out
dec
push
sub
pop
daa
movsl
iret
arpl
mov
cmpsb
mov
inc
aad
fcmovnbe
enter
mov
jmp
sbb
cmpl
addr16
xor
mov
push
pcmpgtw
test
in
rcrl
xlat
stc
inc
stos
call
shl
test
sbb
mov
mov
or
inc
ss
mov
mov
imul
lahf
mov
sbb
push
sub
push
loope
xor
je
outsl
roll
les
icebp
add
and
mov
stc
xchg
lahf
jmp
push
in
aad
jecxz
test
pop
aas
sub
xlat
inc
imul
loope
repz
adc
fldt
dec
xchg
sarb
ja
out
rol
mov
xchg
in
cmpsb
cwtl
inc
dec
lods
inc
sub
in
aaa
gs
test
shll
mov
jno
mov
push
adc
push
cmp
lods
jmp
mov
push
mov
dec
jmp
dec
fisttps
stos
push
pop
cmpsl
out
movq
lea
mov
movsl
xchg
shll
test
and
cmpsl
jecxz
cmc
push
fbstp
loope
lea
insl
popf
mov
fwait
jne
dec
repz
add
jecxz
ljmp
dec
sbbl
sbb
ljmp
mov
and
jecxz
out
jno
subl
nop
jmp
dec
jecxz
and
or
mov
arpl
cltd
dec
mov
addr16
pop
and
lcall
ja
cmpsl
cltd
test
lods
sbb
xchg
xchg
sbb
ss
push
mov
lret
xchg
aad
in
or
pop
mov
pop
rolb
sub
loope
xchg
int
in
xchg
inc
faddl
out
xlat
mov
mov
jge
bts
mov
outsl
aad
mov
and
aaa
pop
shrl
fxch
cmpsl
stos
inc
pusha
sbb
cmc
sbb
repz
int3
insl
sub
and
pop
add
lods
pop
insl
es
scas
test
test
add
cmpsl
fdivrs
and
xor
ds
inc
cmp
ret
scas
pop
roll
ljmp
insb
mov
shll
mov
lahf
push
jmp
jecxz
testl
in
int
test
fs
popf
xor
and
sti
lods
hlt
pop
sub
shl
xlat
out
sarl
mov
fwait
mov
rcll
and
pop
leave
cwtl
arpl
scas
es
out
jp
fnstcw
addl
and
out
mov
cwtl
ja
xlat
xchg
int
sysenter
mov
sub
std
imul
jb
movsl
mov
data16
or
aaa
inc
icebp
fldt
dec
sub
decb
inc
jo
pop
jo
lods
test
lds
fcoml
mov
lahf
je
ret
ja
aad
in
jp
ret
push
push
mov
sbb
jne
dec
jne
les
ret
out
or
dec
add
movsl
outsl
cmc
lahf
xor
orl
mov
and
popf
jmp
xchg
fnstcw
and
arpl
push
add
imul
orb
int3
jecxz
mov
push
stos
jle
dec
mov
fninit
test
adc
adc
cmp
negl
push
imul
and
cmc
ja
sub
inc
stos
scas
pop
fildll
sub
clc
fcmovnbe
les
movsl
sarl
adc
inc
scas
rcl
xchg
mov
lcall
leave
inc
xchg
je
add
fstpl
in
and
sbb
gs
ljmp
loopne
dec
repnz
jns
push
lahf
pop
mov
sti
popa
rcrb
mov
xchg
or
dec
mov
clc
jp
scas
lcall
cmp
xchg
push
iret
in
jne
jno
cmp
jecxz
hlt
sbb
ffreep
iret
mov
or
mov
cwtl
mov
xor
sbb
sbb
addr16
out
movsl
testl
cmpsb
adc
out
jae
xchg
xor
leave
add
xor
rcrl
add
hlt
mov
cltd
scas
mov
xchg
ja
leave
imul
test
outsl
roll
outsb
popf
dec
js
lcall
cmp
int
mov
iret
jnp
imull
cltd
jmp
mov
sub
test
out
enter
mov
jmp
in
cmp
shll
sbb
mov
lret
rcrl
cmpsl
fistl
add
loope
lahf
xchg
pop
aam
jne
mov
dec
scas
cmpsl
inc
or
in
jecxz
and
aad
cld
and
out
outsl
sub
pop
adc
xchg
jmp
ja
jne
xchg
cmp
jmp
mov
mov
ljmp
mov
sbb
insb
leave
lock
aaa
jecxz
xchg
sar
in
aad
cmp
outsl
mov
sub
scas
jmp
jecxz
mul
lds
movntq
and
in
sub
pop
sbb
insl
sbb
xlat
lods
mov
out
xchg
cmp
insl
pop
int3
imul
enter
mov
ror
insl
subl
xchg
jnp
in
test
sub
mov
mov
or
or
bound
fildl
jl
shl
mov
clc
aaa
ror
std
adcl
js
stos
insl
xor
mull
je
mov
arpl
out
idiv
xchg
out
loope
rol
test
cwtl
sub
mov
call
push
ja
lret
repz
xor
fsubp
sarl
fbld
sbb
iret
lcall
test
leave
push
add
gs
xchg
loope
pop
jmp
je
call
ret
test
or
test
or
fldcw
fcom
fldl
insb
cmpsl
push
loopne
in
inc
popa
test
cwtl
shlb
lcall
add
aad
ret
in
push
cmpsl
mov
stc
out
test
lds
sti
push
sub
roll
pusha
int
add
pop
xchg
in
pop
pop
shr
cltd
das
mov
subl
cltd
rorb
add
xchg
popf
lahf
lea
xchg
sub
mov
scas
lock
cmp
iret
popf
mov
cmc
adc
pushl
jmp
dec
adc
frstor
mov
das
cwtl
clc
dec
jmp
adc
test
sub
inc
shll
adc
and
pop
jl
fucom
sub
mov
clc
jl
in
mov
xchg
or
jbe
jno
adc
pop
mov
push
lahf
sub
mov
fwait
push
arpl
cmp
sarl
addr16
test
mov
mov
xchg
xor
xchg
sbb
jmp
pop
lds
and
outsl
out
insb
push
sbb
in
mov
ja
jns
int
popf
pop
push
fdiv
jge
fstpl
inc
das
fwait
inc
notl
pcmpgtw
arpl
jne
mov
jecxz
int
cmp
jecxz
das
xchg
cltd
lahf
xor
dec
iret
lret
ficoml
and
int
mov
jecxz
and
or
jecxz
aad
pop
shlb
or
imul
sbb
mov
test
mov
pop
ja
shll
out
inc
dec
xor
imul
jecxz
mov
add
int
sub
jb
jg
pop
jmp
rorb
stos
rcrl
push
cmp
sbb
adcl
iret
ds
sub
or
xlat
pop
cwtl
ficompl
add
out
jmp
cmpsl
xchg
test
dec
outsb
dec
test
lret
mov
pop
lock
xchg
xchg
xor
outsl
sub
sub
lea
xchg
add
lahf
mov
call
xor
fstpl
xchg
scas
xchg
out
imul
in
mov
movsl
sub
shl
aad
out
xchg
stos
imul
mov
iret
sbb
xchg
inc
inc
pop
sub
add
scas
std
arpl
jmp
lahf
mov
mov
adc
inc
sub
fwait
imul
jge
adc
fcmovnu
rolb
xlat
loopne
xchg
ret
imul
lahf
loope
in
xchg
test
movsl
ja
js
in
mov
dec
mov
xor
mov
test
mov
aad
lock
lahf
mov
test
addb
inc
cli
and
mov
out
scas
cmpsl
out
mov
lahf
nop
add
mov
pop
mov
push
test
pushf
sub
fwait
stos
jne
out
gs
jne
out
xchg
test
xchg
or
cltd
jle
je
cmc
xor
mov
push
xchg
popf
pop
into
in
arpl
mov
jne
insl
jmp
xchg
repz
test
mov
pop
xchg
mov
ret
mov
repz
outsl
rcll
dec
sbbl
xchg
cmc
adc
mov
adc
and
lret
cmc
insl
mov
pushf
mov
mov
sbb
pop
popa
cmc
xor
cmp
lods
test
sbb
iret
cltd
lds
mov
sub
pop
lods
fistpl
vpaddsw
jno
mov
andl
add
jmp
push
mov
xchg
stos
sti
or
xor
cwtl
xor
icebp
mov
aad
add
jo
fsubp
popf
xchg
mov
xor
insl
stos
mov
ret
gs
gs
cld
cmp
xchg
and
and
cmp
mov
out
call
insl
mov
xchg
aam
test
repz
leave
fldenv
fisttpl
sbb
add
mov
jg
xchg
call
xchg
cmp
pushf
mov
dec
popf
xlat
add
rorl
arpl
cmp
fs
rol
cmp
lods
push
mov
inc
push
mov
popf
mov
sub
int
mov
cwtl
or
outsl
scas
and
xlat
cmp
lahf
test
mov
jecxz
stc
adc
mov
leave
outsl
cmpb
jne
movsl
xor
rol
mov
loope
orl
popa
push
add
test
cmp
mov
add
xchg
aad
jmp
lret
lea
shl
mov
mov
fcmove
mov
in
lds
out
jne
cmp
cmc
cmp
mov
test
xlat
in
xchg
pop
adcl
fcoml
pusha
lret
sub
pop
xchg
and
jecxz
scas
cmp
ret
sub
jo
jno
jle
stc
inc
mov
xchg
or
rcrb
out
in
shlb
popf
xchg
stos
mov
or
fisttps
out
dec
inc
mov
roll
cmpl
fs
mov
inc
aas
mov
xchg
xchg
mov
lds
repnz
push
daa
add
loope
in
mov
dec
xor
cmp
lea
iret
rep
mov
push
out
pop
loope
mov
mov
xlat
in
push
imul
aaa
in
fwait
jne
push
stc
sbb
outsb
push
push
addb
jmp
push
dec
xor
ja
ljmp
xchg
mov
out
fcomps
outsl
mov
loope
sub
add
testl
add
mov
jge
mov
adc
scas
repz
test
mov
jecxz
mov
cmp
iret
outsl
aas
fwait
mov
pop
cli
mov
ja
movsl
adc
aas
imul
insl
ror
lret
adc
ljmp
xor
sub
sub
popa
aad
out
movsb
pop
imul
cmpsl
dec
push
scas
in
test
icebp
xor
jns
repz
xchg
or
loope
sbb
xchg
popa
cwtl
cmp
enter
imul
pushl
cs
adc
pop
ja
fisttpl
mov
test
movsb
mov
out
mov
loopne
xchg
and
in
dec
mov
inc
jmp
jne
iret
lret
outsl
in
push
xchg
mov
aaa
xor
jge
cmpl
out
sub
call
push
push
test
scas
es
jnp
pushf
in
mov
jno
lds
jle
mov
lods
imul
ret
sti
fwait
jmp
mov
xchg
scas
subb
add
mov
push
negl
rep
aad
imul
jnp
rorl
out
stc
or
bound
adc
rol
xchg
sbbl
data16
cwtl
inc
rcr
mul
fildl
mov
popa
lds
mov
rorl
xlat
jmp
fwait
mov
lret
xchg
jp
jecxz
dec
cltd
popl
sub
sub
and
sub
or
shrl
out
ja
scas
test
pop
cmpsl
shrl
pop
int
clc
jl
lcall
push
cwtl
aad
lahf
cmc
iret
jae
or
stc
sbb
loope
cld
mov
fucomp
cmp
cmp
lcall
xchg
and
cs
or
in
in
imul
mov
jmp
ja
xchg
flds
lea
cmc
scas
add
cltd
out
inc
and
aaa
push
inc
xchg
jmp
stos
sub
insl
lahf
sub
mov
or
test
cmc
repz
popa
test
dec
adc
fldcw
sbb
call
lods
dec
ja
pop
mov
dec
xchg
push
mov
xchg
xlat
push
mov
fildll
into
iret
lea
repnz
orl
sbb
jno
cmp
iret
mov
fistpl
jmp
in
std
icebp
add
mov
cmpl
out
add
cmpsl
lds
cmpb
arpl
in
pop
mov
iret
mov
pop
scas
and
sub
movsl
fmull
jle
xor
push
fnsave
imulb
imull
scas
adc
paddusw
mov
mov
mov
lahf
je
jnp
cmpsl
out
rcll
xchg
xchg
add
test
ret
cmc
xchg
movsl
call
inc
imul
outsl
imul
pop
in
mov
scas
push
lock
test
test
cwtl
rol
loope
lahf
aad
sbb
sub
cmp
sub
arpl
xchg
lock
xchg
pusha
cmp
jmp
sub
add
adcl
cmpsl
sbbb
cld
call
xchg
out
andl
test
mull
sahf
push
pop
jecxz
mov
xchg
addb
inc
mov
mov
xlat
sbb
lods
xor
aas
mov
and
stos
mov
test
jp
jp
neg
push
cmp
dec
pop
sti
adc
out
test
orb
adc
rcrl
mov
cmp
sbb
es
push
add
add
fwait
addl
imul
mov
xchg
jae
std
icebp
daa
xchg
sbb
lret
xchg
jmp
shll
dec
stos
adc
in
aad
imul
gs
loop
xor
sub
imul
icebp
pop
mul
mov
insl
fwait
popa
cltd
cld
cmc
sub
mov
in
dec
jns
cmp
in
xlat
dec
mov
leave
inc
sbb
and
popl
je
push
loope
ljmp
lods
das
inc
add
notl
mov
mov
inc
push
mov
sbb
imul
lahf
mov
push
stos
jge
pop
leave
clc
addr16
sbb
adc
dec
jnp
filds
and
aad
push
sbb
mov
cmc
pop
in
out
pop
mov
shrl
fwait
mov
jmp
xchg
lahf
mov
lahf
outsl
fnstsw
std
jae
ret
dec
out
or
xor
mov
test
outsb
out
cmp
jecxz
lea
aam
shr
shrl
jmp
cmc
popa
or
shll
icebp
sbb
cltd
xchg
leave
nop
push
in
mov
loope
dec
rcr
adc
mov
out
lds
rorb
xchg
negl
cmc
xchg
jecxz
mov
std
pop
push
sub
sbbl
cld
add
aad
dec
jmp
sbb
pop
outsl
jle
fnstenv
fbld
nop
adc
jmp
pop
jmp
das
jmp
pop
lods
leave
dec
mov
test
fstpl
inc
mov
pushf
adc
adc
adc
fnstcw
aad
mov
jmp
push
fwait
cwtl
adc
scas
push
xor
cltd
fldcw
sbb
mov
xlat
cmp
loope
cmc
adc
fistl
sbb
test
cmpsb
ficomps
idivl
out
leave
cmpsl
insb
cmpsl
lahf
xchg
fnclex
xlat
andl
dec
cmpsl
cmpsl
push
sbb
out
xlat
int
cli
clc
jb
out
loop
pop
in
test
mov
enter
outsl
lahf
push
sarl
push
mov
imul
ret
lahf
scas
into
test
dec
leave
sub
mov
push
call
adc
out
mov
xor
daa
ficomps
sub
mov
jno
popf
repz
arpl
pop
stos
xchg
xchg
adc
mov
in
lea
lods
test
test
mov
in
push
repz
add
mov
dec
sub
jp
mov
xor
mov
in
cli
sarb
lret
in
out
icebp
addl
mov
shll
lcall
loope
push
sbb
fwait
add
scas
aas
ret
loope
gs
mov
jle
xchg
cld
aad
mov
das
dec
arpl
scas
adc
pop
repnz
fwait
jp
mov
mov
lahf
cltd
push
adc
mov
fdivl
xchg
loop
sub
xchg
adc
out
out
push
xchg
cltd
popf
pushf
mov
mov
addr16
fdivrs
out
loopne
mov
adc
push
or
cmp
fwait
leave
dec
aad
push
test
mov
insl
push
call
jno
lahf
fistpll
xchg
sbb
sub
subl
pmovmskb
popf
mov
rcpps
cwtl
cmp
jmp
mov
sbb
orl
in
ja
mov
xchg
sub
int
mov
xchg
icebp
in
and
mov
repnz
push
fwait
lret
push
test
in
ljmp
fcoms
jmp
jmp
insl
icebp
or
imul
loop
test
fsubs
stos
fnstsw
test
arpl
jp
cwtl
cmpsl
sbb
xchg
idivl
jecxz
xchg
ja
mov
dec
insl
in
aas
pop
sbb
add
popf
mov
flds
lret
xchg
pop
mov
pop
notb
loope
aad
int
xor
cmc
je
pop
cwtl
mov
sbb
xlat
imul
cmc
xorl
testb
lock
in
lds
lahf
fldenv
lahf
sbb
xchg
jmp
imul
gs
lds
stc
int
or
dec
insl
xor
add
push
fnstcw
jmp
notl
jae
push
js
out
in
add
test
ljmp
outsb
cmp
adcl
mov
lods
out
ret
push
sbb
enter
mov
jmp
test
fwait
inc
mov
push
outsl
pop
pop
add
pop
xchg
popa
mov
jno
cld
xchg
mov
rcl
jne
ret
insl
lds
dec
imull
and
fistpll
out
aas
popf
lds
mov
inc
push
inc
loope
lods
mov
mul
lcall
jecxz
les
cwtl
push
aad
cmc
mov
ret
dec
repz
adc
adcl
test
lahf
lds
adc
push
add
arpl
mov
notl
cli
fnstenv
sbb
inc
mov
les
imul
test
sti
jecxz
in
sbb
pop
test
jne
roll
mov
xchg
xchg
push
or
nop
iret
fiadds
fidivl
fcomip
sbb
mov
mov
adc
cmp
xchg
push
test
test
pop
les
fstp
out
xchg
movsl
adc
adc
imul
and
in
clc
popa
movsl
subl
xchg
rcll
lcall
loop
mov
test
loop
mov
jne
jno
insb
stos
lahf
push
pop
mov
out
cmp
jmp
lds
aad
test
jmp
cmpsl
mov
popaw
clc
shll
mov
lahf
dec
icebp
repnz
jl
in
mov
lea
lods
xchg
aad
and
cmpsl
movsl
test
dec
xlat
clc
imul
mov
xchg
test
out
test
rcrl
mov
loopne
sub
and
aas
lds
pop
bound
repnz
outsl
jmp
aad
push
lods
insl
test
cwtl
jae
mov
jp
push
mov
vpsraw
orl
das
fxch
mov
lahf
lahf
cmpsl
add
jmp
jae
xlat
cltd
xor
and
int
std
lods
repnz
mov
mov
enter
js
add
test
cmp
or
subl
repz
lods
sub
push
sbb
popf
mov
lds
mov
cwtl
lock
jecxz
scas
mov
imul
cmp
hlt
mov
out
shrb
arpl
sub
mov
jns
stc
mov
add
adc
stos
shrl
xchg
jle
out
sahf
addr16
xchg
fwait
shl
dec
out
gs
jae
dec
mov
mov
xchg
movsl
add
in
mov
sar
aas
sub
mov
sub
dec
xlat
andb
xchg
fwait
imul
and
push
int
and
mov
hlt
add
lods
jne
jnp
jl
movsl
xlat
imulb
lods
sub
in
shrd
leave
test
push
sub
cmp
mov
cmp
mov
mov
ja
inc
mov
adc
imul
adc
cld
arpl
mov
repz
jne
out
cwtl
sbb
and
stos
mov
sbb
cmpsl
push
push
ljmp
pushl
repz
xrelease
stos
dec
aaa
aad
pop
aad
out
sub
xor
xchg
mov
adc
jns
je
in
aad
leave
popf
ret
pop
andl
cmpsl
cmp
lret
shlb
leave
fucomi
fs
xchg
out
lds
aas
lahf
out
pop
dec
addl
shll
mov
shll
push
stos
insl
lahf
cmpsl
add
mov
add
ret
cmpsl
js
imul
mov
dec
lds
adc
add
test
movsl
lds
dec
xchg
jecxz
ret
ret
clc
scas
fcmovnb
xchg
xor
negl
leave
xchg
dec
lock
xor
outsl
mov
test
mov
out
rclb
add
mov
sbbl
aas
jecxz
scas
out
inc
insl
int
test
xchg
jg
xchg
fwait
pop
mov
gs
andb
cmp
jmp
out
mov
in
push
add
mov
pop
gs
test
stc
mov
sbb
aam
pop
cmp
xchg
mov
int
push
push
mov
arpl
orl
add
cwtl
ret
mov
clc
cmpsl
fbld
xchg
gs
es
mov
lcall
xchg
addr16
rcll
sub
or
dec
rcrl
loope
jl
sbb
mov
movsl
aam
or
push
jmp
ds
lahf
cltd
sbb
rol
mov
call
std
jecxz
enter
jp
xor
sbbl
jp
lods
scas
cmp
test
scas
jmp
cmpsl
fwait
testl
imul
xor
sbb
jle
popa
lds
lahf
scas
pop
or
popf
ret
mov
out
add
ffreep
mov
pop
lcall
lds
fildll
int3
popa
aam
icebp
mov
inc
xlat
adc
pop
cmc
fwait
sub
adc
ret
cltd
mov
rclb
inc
and
frstor
cmp
mov
int
test
mov
adc
gs
lds
adc
jno
cltd
sub
pop
add
xchg
ljmp
lods
stc
push
cwtl
mov
cmp
jno
arpl
push
adc
adc
xchg
dec
and
loop
insl
pop
neg
mov
cmpsl
pop
icebp
mov
test
xchg
inc
cmc
rolb
popf
ja
cwtl
mov
pop
iret
mov
stc
xchg
lahf
notl
lahf
fldenv
fldl
scas
arpl
aam
xor
repz
mov
sbb
das
les
lea
cmpsl
xor
mov
imul
lret
mov
movsl
xchg
int
or
xor
xor
xchg
or
add
xchg
out
int
loope
pop
decl
adc
xchg
jp
in
movsl
fisubs
jmp
mov
mov
cmp
rcrl
gs
mov
mov
into
addl
xchg
lea
cwtl
ror
inc
fdiv
fsubs
out
cmp
mov
out
iret
stc
cltd
or
push
push
out
mov
enter
mov
js
rcll
in
mov
test
jo
pop
xchg
jbe
loope
mov
test
mov
sbb
xchg
mov
pop
sbb
imul
test
testl
fdivrl
mov
cmpb
lods
cmpl
and
addl
jle
cmp
sbb
fwait
insb
and
xchg
lods
lea
sbb
mov
popf
cmp
out
mov
andb
xchg
push
xchg
js
add
add
cmc
pop
jb
mov
jg
pop
push
inc
sbb
popa
pop
or
adcl
mov
movl
jne
cmpl
les
xor
int3
jbe
xchg
int3
test
out
je
jo
dec
ja
adc
adc
nop
mov
push
dec
add
push
test
test
mov
fdivl
rol
loope
cmpl
dec
repnz
mov
aas
xchg
mov
inc
xor
dec
daa
popa
mov
stos
xchg
mov
push
push
shrl
arpl
mov
push
xchg
lahf
imul
filds
xchg
stos
push
sub
dec
fsts
rclb
adc
faddl
add
in
xchg
fwait
push
ret
int
int
cmp
sbb
fcoms
mov
adc
mov
lret
or
fld
imulb
clc
mov
lret
mov
out
sub
mov
enter
mov
xchg
lret
rcrb
int
faddl
rcll
sbb
inc
in
cwtl
loope
xlat
aam
in
arpl
in
lret
dec
xchg
leave
call
jns
in
in
xlat
shr
ljmp
je
dec
stos
in
jb
fwait
mov
pop
int
push
repz
push
loope
pop
inc
pop
pop
notl
in
ljmp
push
adc
xor
ss
mov
shrl
scas
leave
loopne
clc
mov
pop
jne
jmp
dec
mov
cmp
mov
fisttps
pusha
testl
js
ja
cmc
popa
in
xlat
int3
mov
mov
out
inc
inc
push
sub
popf
out
dec
cmc
adc
jmp
fwait
inc
test
push
and
lock
mov
dec
mov
scas
mov
imul
jmp
inc
mov
sub
xchg
aam
mov
dec
xchg
cmp
inc
sti
test
gs
inc
xchg
cwtl
sub
packssdw
push
pop
mov
enter
jecxz
mov
jno
and
sub
das
cmp
cwtl
add
mov
xlat
popa
lahf
xor
xchg
lea
iret
jne
and
roll
lahf
lret
xchg
rcrl
xchg
ja
out
adc
cmp
pop
jno
lods
sub
stos
push
lahf
jbe
addr16
mov
cmpl
leave
cltd
stc
mov
mov
movsl
outsb
jp
push
xchg
jne
push
and
lods
adc
dec
scas
jmp
lahf
fcmovb
mov
andl
xchg
sahf
lods
adcb
mov
shll
repz
fstpt
test
subl
call
add
xlat
out
outsl
clc
xor
cwtl
xor
aam
pop
iret
mov
pop
mov
or
jne
cmc
pop
xchg
add
mov
lahf
loope
dec
outsl
inc
add
imul
pop
push
sub
in
stos
out
negl
movsl
cmpsl
pop
test
outsl
ficoml
lahf
xor
jg
or
imul
adcl
into
inc
repz
mov
sub
das
popf
lahf
in
fcompl
sub
pop
test
lret
mov
lret
cmp
xchg
mov
adcl
sbb
adc
test
mov
mov
sub
sbb
popa
pop
fcomi
loope
mov
pop
xor
lcall
roll
mov
sbbb
mov
mov
insb
cmp
hlt
inc
push
test
shlb
fildl
movsl
iret
cmpsl
fwait
mov
popa
inc
cmp
xlat
push
ja
loope
push
jecxz
test
dec
fistl
call
lahf
insl
repnz
scas
pop
cmp
cmpsl
in
out
test
test
mov
fwait
cltd
jo
fistpll
add
call
mov
fsubp
xor
mov
in
mov
fistpll
jne
cs
rcr
sbb
rolb
cmp
xchg
xchg
shl
stos
cmp
loopne
mov
iret
filds
lahf
rol
pop
xchg
in
testb
dec
loope
out
pushf
xchg
out
push
test
pop
js
rol
mov
jmp
lods
mov
inc
sbbl
cld
mov
fistl
push
test
cs
xorb
arpl
clc
outsl
fistpll
xchg
fnstenv
xlat
lret
roll
cltd
mov
or
push
mov
or
jmp
cmc
imul
cld
mov
popf
loope
frstor
jmp
add
shl
inc
mov
sub
leave
sub
ja
aas
imul
lcall
shll
or
int
sub
lret
in
xlat
rorb
popf
mov
xor
out
sbb
push
cltd
cmpsl
inc
das
and
cmpsl
enter
add
add
popa
sarl
in
lea
daa
fwait
test
cltd
xlat
cld
popf
outsl
dec
in
outsl
dec
jmp
stos
mov
fistpl
inc
pop
jb
push
mov
pop
xchg
xchg
jne
insl
loopne
int
mov
jo
push
mov
dec
scas
adcb
shl
ja
dec
rcrl
and
movsl
in
mov
imul
ljmp
cmp
subl
pop
arpl
inc
cmp
int
js
outsl
imul
leave
rcr
push
or
stos
xlat
fs
and
fisubrl
mov
jne
bnd
sub
add
xlat
addr16
sbb
pop
and
jecxz
jmp
scas
cwtl
mov
nop
orl
aas
xor
sub
js
outsl
mov
test
test
mov
int3
xchg
sub
or
mov
xor
lods
xchg
jmp
push
movsl
ret
rolb
insl
xchg
ja
push
pop
jmp
cwtl
in
loop
nop
or
push
cmp
mov
mov
test
adc
into
scas
pusha
jno
insl
shll
sbbl
inc
in
jecxz
cwtl
mov
outsb
or
loope
stos
xchg
mov
sbb
mov
sbb
mull
std
jne
in
jnp
popa
pop
adc
mov
loope
or
das
push
popl
pop
loopne
faddl
loope
fs
aad
mov
subl
in
xchg
cltd
mov
add
outsl
popf
sbb
mov
jae
imul
jne
adc
insl
fstpl
fistps
sub
jne
setae
lods
push
fistps
in
and
int3
inc
mov
adc
out
sbb
sub
push
ficoml
jns
repz
pop
add
notl
popf
xchg
adc
push
aaa
cli
adc
pop
mov
les
sbb
push
lods
mov
fisubs
inc
inc
cwtl
ret
repnz
sbb
stos
jne
mov
popa
xchg
rcr
mov
adc
fsubr
mov
repz
cmc
cld
mov
adc
js
dec
mov
gs
rorl
repz
out
ds
xchg
aas
sub
mov
popf
pop
adc
imul
xchg
addr16
js
rol
jne
outsl
xchg
push
xchg
sub
das
fstl
idivl
out
and
fucomi
jg
insl
or
and
or
stos
out
push
iret
mov
fstpl
cmp
fstpl
out
mov
aad
add
imulb
loop
dec
or
insl
xor
imul
int
mov
or
daa
fists
mov
outsl
xor
sub
ja
stos
mov
mov
fists
mov
add
call
push
in
fpatan
lahf
ljmp
call
mov
cmp
out
arpl
cmp
lds
mov
cmpsl
xchg
rorl
mov
inc
dec
out
push
fisttpl
sub
push
lret
stos
imul
repz
cmp
mov
rorl
addr16
and
mov
call
and
jmp
out
sub
add
or
adcl
cmp
iret
dec
mov
sub
jbe
lahf
inc
clc
push
sbb
and
stos
js
in
call
orl
xchg
roll
cmpsl
fsubrs
cltd
mov
add
insl
ret
add
xor
cmc
fwait
sub
scas
out
je
jbe
idiv
mov
sbb
mov
lods
scas
int
movsb
loope
mov
fwait
jne
in
imul
shll
cld
adc
not
lods
push
pop
xchg
jmp
xor
xchg
repz
ficomps
jecxz
aam
jp
into
aaa
cmpsl
cmc
repz
shl
and
rcr
xchg
dec
push
dec
pop
adc
add
lock
or
cwtl
movsb
outsl
lods
pop
mov
jge
jnp
xchg
repz
add
adc
stos
rol
enter
xor
subl
mov
mov
roll
insl
push
or
das
lods
jl
inc
inc
xchg
lretw
cmpl
or
pop
ret
inc
pop
test
int
pop
shll
cmpsb
test
inc
inc
jg
or
and
cmp
popf
test
test
lahf
movsl
subl
shll
push
call
adc
scas
pop
mov
pop
out
xor
test
mov
cmp
xchg
outsl
js
sub
jo
stos
filds
popf
addl
mov
cwtl
cmp
fwait
aad
mov
sub
mov
outsb
add
repz
cmp
gs
mul
xor
inc
fsubr
out
xchg
insl
xchg
mov
int
lods
sub
insl
shl
seta
mov
xchg
mov
xchg
out
xorl
jo
jno
stos
mov
les
arpl
mov
cmp
loope
rclb
out
int
xchg
fldt
pop
pop
ljmp
sarl
leave
stos
cmp
fisttps
popa
mov
iret
pop
mov
and
or
arpl
repz
adc
js
cmp
pop
data16
jmp
leave
push
xchg
fld
pop
mov
dec
in
imul
cmp
jmp
in
cmc
leave
iret
popf
jne
xchg
loope
xchg
cwtl
cmp
mov
inc
jp
sbb
leave
dec
xchg
mov
dec
jne
popf
nop
or
faddl
js
lock
iret
in
push
pavgb
lahf
adc
mov
insl
aas
mov
jne
shll
fsqrt
sbb
nop
fst
xchg
mov
dec
sub
iret
out
daa
in
clc
ljmp
cmpsl
lds
jmp
inc
fwait
cmc
dec
insl
call
pop
notb
insl
int
aas
out
mov
ficoml
xchg
arpl
xchg
lret
mov
insb
pop
cmc
cltd
mov
xchg
add
or
inc
inc
gs
rolb
cmpsl
test
or
sub
jmp
pushf
jmp
imul
xchg
push
shll
cwtl
adc
ljmp
push
or
iret
movsl
mov
mov
outsb
test
lret
cwtl
je
inc
in
in
and
xchg
or
addr16
pop
std
sub
dec
cmpsl
scas
sub
popa
mov
push
push
or
inc
xlat
aad
arpl
lods
fwait
dec
fcmovnb
mov
movsb
lock
dec
or
and
dec
out
push
xor
xor
cmc
inc
cli
vpmullw
mov
popa
xchg
mov
scas
rep
mov
sbb
cmp
jge
pop
fstpl
pop
psubq
or
hlt
jnp
shll
test
mov
xchg
push
cltd
xchg
js
rcr
pop
out
stc
test
push
in
fucomip
hlt
mov
shl
scas
leave
out
push
stos
iret
adc
add
lret
xchg
fstpt
addl
and
adc
arpl
mov
rcrb
or
adc
test
loope
push
imul
cld
push
mov
std
test
mov
inc
fisttpll
and
adc
imul
lods
aad
ret
pop
jmp
xchg
jne
push
in
fcomip
mov
ds
jp
mov
testl
out
lods
leave
mov
and
stc
xchg
pop
jne
es
scas
adc
or
out
cmp
xchg
in
dec
lea
fsubrs
cmpsl
push
int
mov
lods
pcmpeqw
nop
and
lcall
and
jmp
inc
aad
jmp
ja
cmpsl
lret
and
ja
dec
repnz
lret
arpl
lock
stos
xchg
gs
loopne
ja
xlat
loopne
jmp
repz
lahf
xchg
add
mov
xor
movsl
imul
mov
iret
sub
jno
xchg
in
xlat
in
dec
jmp
xchg
mov
into
pop
mov
shrl
mov
mov
shll
pusha
adc
dec
xchg
in
and
stos
inc
xorl
mov
loop
int3
cmpsl
leave
call
lret
or
lea
fs
insb
xchg
sbb
xchg
push
divl
or
gs
gs
in
mov
push
or
in
fucomi
sub
mov
out
jp
cmp
subl
adc
test
xlat
jmp
xor
mull
scas
cmc
test
incl
imul
xchg
shlb
push
push
xchg
mov
test
int3
test
outsb
adc
fldl
add
in
lods
jne
rcl
sar
jno
ja
pop
xor
jp
gs
arpl
mov
xchg
inc
movsl
xor
pop
rcl
lea
mov
cmc
xchg
loopne
push
insl
lods
mov
xlat
lds
loop
subb
add
test
mov
jmp
cmp
pop
test
in
xor
fnsetpm(287
cmpsl
out
les
xchg
cltd
mull
dec
test
xchg
mov
das
rcl
fisubrl
inc
lret
popa
js
popf
adc
test
leave
je
cltd
mov
and
pop
loopne
jmp
push
test
shll
aad
orl
or
mov
repz
aas
jmp
frstor
scas
ret
rol
inc
jb
xor
popa
lea
add
outsl
cwtl
int
sub
xchg
lcall
ja
dec
arpl
addl
mov
lahf
adc
insl
leave
decb
xrelease
sarl
data16
ror
out
add
cwtl
mov
lds
addl
lahf
xchg
fcoms
sub
mov
movsb
jmp
ret
sub
cmpsl
pop
test
and
mov
cld
clc
and
addr16
push
lods
cwtl
pop
aaa
pop
xlat
imul
cs
fldln2
add
aas
pop
es
leave
mov
stos
addl
jmp
add
flds
lods
pop
push
in
movsl
pop
sahf
xchg
in
clc
aaa
pop
lock
mov
arpl
cmc
pop
repz
sbb
adc
cwtl
cmp
xchg
scas
stc
or
ret
into
pop
sub
hlt
and
adc
xchg
aad
mov
jmp
jg
out
in
add
ffree
out
mov
cwtl
fisttpl
out
push
sbb
adcl
xchg
cmp
test
test
fistl
adc
xchg
xchg
mulb
out
lcall
movnti
xchg
mov
pop
ds
sbb
addr16
push
imul
psrlq
lock
lcall
jmp
or
and
in
leave
call
shll
in
jns
mov
fxam
push
movsb
in
or
js
popf
test
insl
iret
cmpsl
mov
or
and
sbb
mov
scas
pop
addr16
xchg
loope
addr16
loope
addr16
jecxz
inc
push
and
adc
out
out
sbb
out
ficoms
sub
hlt
cwtl
popf
cltd
out
cs
int
pop
js
imull
sbb
leave
push
leave
pop
mov
add
lods
pop
loope
cmpsl
movsl
mov
pop
outsl
leave
pop
adc
call
xchg
imul
mov
mov
mov
out
shll
jecxz
stc
cmpsl
inc
pop
lea
leave
adc
jno
xchg
and
ret
push
pop
popa
pop
dec
stos
cmpsl
pop
test
adc
pop
pop
int3
std
push
shl
mov
repnz
mov
shrb
repnz
inc
mov
mov
inc
insl
pushf
mov
lea
aad
int
adc
test
push
gs
pusha
testl
ret
sub
insb
loope
dec
nop
mov
cmp
adc
negl
pop
push
int
mov
lea
inc
imul
or
std
les
cli
popl
dec
sarl
dec
lret
jmp
das
xlat
lods
xchg
cmpsb
pop
xchg
jns
fucomi
dec
ljmp
pusha
lcall
push
pusha
adc
aam
insl
ja
lahf
lds
dec
test
push
push
cs
mov
iret
mov
lret
jne
aam
sub
mulb
fisttps
andb
adc
sbbl
mov
cmpsl
jmp
shrl
adc
add
lret
sbb
test
rol
imul
clc
stos
sbb
stos
pop
sbbl
rcll
mov
imul
dec
sarl
imul
cwtl
jns
int
mov
lds
mov
leave
xchg
dec
mov
out
gs
cld
fisttpll
mov
adc
iret
pop
loop
imul
fdivl
sub
and
es
loope
lds
pusha
pop
mov
xchg
imul
jne
in
jmp
cltd
out
dec
or
push
add
cli
mov
popa
push
push
sbb
lods
adc
xchg
adc
add
mov
out
fadd
data16
add
roll
iret
cltd
gs
sbb
cmp
mov
pop
xor
add
ret
in
push
cmc
lds
pop
call
insl
xchg
mov
in
add
xchg
imul
popa
cwtl
push
inc
test
pop
xor
loope
outsl
xchg
push
mov
jecxz
dec
out
ret
inc
add
mov
xchg
loope
cld
mov
repz
add
in
sbb
test
sub
cmp
sub
sbb
fistps
ret
cmpsl
out
stos
sbb
loope
outsb
sar
fiaddl
mov
lea
mov
pop
aas
ljmp
sbb
lods
fwait
movsl
in
jne
rcl
std
gs
repnz
cwtl
mov
ljmp
add
mov
sbb
jecxz
pop
iret
stos
daa
fldt
popa
jg
lea
lods
xchg
jmp
and
ja
lods
jo
pop
imul
sub
jecxz
sub
adc
or
xchg
les
dec
test
insl
cmp
pop
add
push
mov
push
insl
pop
je
xchg
push
xchg
stos
lahf
pop
clc
call
add
cmp
ja
sbb
xchg
push
mov
test
add
adcb
jecxz
lock
loope
popa
cmc
cmp
xchg
imul
icebp
and
cmpsl
test
pop
jb
aad
popa
shll
pop
sub
outsb
xchg
test
push
fwait
jmp
mov
test
sbb
mov
das
sbb
cmp
xchg
and
sub
rorb
mov
cwtl
test
call
cmc
or
popf
mov
jne
out
and
cmp
jecxz
lahf
frstor
in
rorb
mov
les
jmp
cmp
enter
fcompl
das
lea
movsl
push
lods
imul
adc
mov
sub
aas
jo
sbb
xchg
or
jmp
dec
sbb
cwtl
lahf
mov
push
add
das
orl
xchg
test
mov
lods
pop
sbb
xchg
and
dec
cmp
ds
test
test
loope
mov
in
dec
adc
test
addl
icebp
popa
out
mov
adcl
fildl
mov
xchg
out
add
lahf
lods
imul
in
adc
je
addb
mov
jb
shll
xor
mov
xchg
lahf
cmp
in
test
daa
mov
or
fmull
mul
lods
fists
and
xor
mov
xchg
test
xchg
xchg
jmp
inc
mov
or
mov
push
cmp
ret
repz
mov
jle
push
movsl
sbb
push
lods
sbb
cmp
mov
ror
stos
push
insb
push
out
in
lods
test
and
sbb
in
adc
arpl
ret
pop
pop
lahf
lea
pop
or
aam
xor
pop
xchg
push
std
lds
dec
cmpsl
sbb
jecxz
sub
loope
loopne
jne
sub
or
frstor
imul
roll
and
arpl
pop
outsl
test
pop
sarb
cltd
or
int
test
iret
jne
cmp
push
cmp
test
rcr
mov
js
sbbl
lea
pop
int
mov
out
inc
insl
aas
adc
xor
inc
cmp
cltd
fld
mov
mov
xchg
or
jne
outsl
jg
jne
shr
int
cmp
push
mov
xchg
xlat
cmp
test
mov
xorl
in
cmpsl
inc
inc
in
lret
loope
mov
fcom
xchg
addr16
cmp
xchg
mov
fwait
jno
out
mov
mov
mov
xorl
mov
or
dec
push
sub
aas
jmp
shrl
cmc
add
ja
mov
dec
leave
ret
sarb
or
out
jl
je
add
fcmovnb
mov
mov
and
in
mov
cli
int
test
andl
mov
xor
sub
adc
mov
mov
or
or
jmp
xchg
cmpsl
movsb
pop
or
andl
xchg
testb
mov
scas
jecxz
stos
add
loope
adc
mov
or
mov
out
pusha
repnz
sahf
sbb
jecxz
out
arpl
push
adc
xor
outsl
xchg
outsl
and
sub
mov
lahf
inc
jmp
add
jmp
test
popa
mov
inc
cltd
pushf
movsl
jecxz
dec
test
xor
mov
mov
fldenv
push
xchg
cwtl
push
idivb
jo
mov
push
push
repz
xlat
lahf
imul
jae
mov
popa
xchg
iret
xor
or
imul
iret
push
cmp
mov
push
arpl
inc
pop
test
xchg
out
scas
mov
outsl
orl
add
out
ret
xlat
in
fldl
outsb
hlt
jnp
xchg
push
gs
sbbb
jo
out
xchg
call
lret
push
jae
out
outsb
in
mov
dec
mov
sbb
xchg
and
adc
mov
xchg
xlat
repz
fwait
mov
cmpsb
jmp
cltd
cmc
pop
pop
mov
sub
jmp
iret
in
ffree
int
repz
pop
test
add
mov
fdiv
dec
xchg
mov
in
adc
xchg
out
xlat
nop
cld
aad
lret
jp
fidivs
pop
lcall
mov
not
sbb
xchg
out
imul
negl
leave
sub
movsl
jmp
mov
and
and
or
cmp
jmp
cmp
test
bound
push
jmp
outsb
mov
imul
mov
mov
sti
movsb
xor
fs
shrb
jnp
ss
add
out
leave
pop
lcall
fdivrl
pop
xor
in
xor
lcall
xor
stos
shrl
fidivrs
sbb
ljmp
xchg
pop
scas
ret
sbbl
nop
cmp
pop
fsubrl
in
test
lock
xchg
loope
xor
xchg
cmp
orb
rcr
sti
in
adc
lahf
mov
addr16
repz
add
mov
test
cmpl
jmp
lods
frstor
mul
mov
movsl
ja
pushl
bnd
sti
movsb
mov
popf
xor
sti
es
aam
xor
scas
sbb
loope
xor
shl
xor
sub
insl
xor
pop
hlt
hlt
shll
in
lods
inc
hlt
loopne
xor
push
xor
scas
inc
hlt
into
leave
mov
rol
cmpsl
adc
fwait
popf
add
adc
imul
andl
jecxz
fisubrl
push
andl
movsl
add
enter
xor
xchg
dec
pop
mov
dec
mov
iret
mov
popf
shl
adc
js
jmp
test
cld
std
jmp
imul
cmp
movsb
popf
fbstp
push
std
sbb
add
out
out
pop
test
lds
loope
mov
in
mov
popa
xchg
mov
out
xor
cltd
fcoms
test
fstpl
in
clc
pop
lret
fstps
shrl
adc
aas
push
sub
movsl
mov
mov
lea
or
mov
repz
leave
test
cltd
arpl
flds
add
stos
cmpsl
jnp
inc
jle
jg
out
and
das
repz
add
jne
cltd
sbb
xchg
sbb
in
pop
test
mov
cltd
xchg
sub
ds
rcl
fcoms
mov
mov
mov
in
pop
mov
mov
ja
sbb
push
cmp
sbb
add
imul
mov
inc
add
cmp
xchg
fistps
popf
mov
rclb
mov
ds
jp
and
lds
popf
jl
shrb
mov
mov
add
fucomip
fnstcw
popf
mov
lock
ror
std
enter
xchg
xchg
shll
shll
pop
jmp
imulb
xor
lock
mov
xchg
fwait
adc
inc
out
lods
sti
ret
pop
sub
cwtl
sti
cmp
and
hlt
shrl
leave
mov
enter
push
xchg
movsl
mov
imul
push
mov
xlat
xor
stc
sub
fidivs
pop
push
push
jae
fisttpll
inc
ja
mov
and
xlat
xor
out
lret
sbb
lahf
lds
shll
mov
les
pop
shl
xchg
xlat
cld
adc
popa
int
arpl
ret
mov
inc
lret
cwtl
dec
xchg
dec
jecxz
jns
test
dec
mov
in
pop
shrl
pop
xlat
imul
mov
in
push
dec
adc
lds
arpl
mov
mov
and
dec
repz
mov
xchg
frstor
dec
pop
test
add
divl
shrl
fnstcw
imul
in
adc
jge
lret
outsl
add
xlat
lds
fdivrs
test
adc
inc
push
sub
mov
and
cs
cmc
push
push
inc
dec
inc
and
mov
xchg
leave
lds
mov
sbb
scas
cmpsl
or
jmp
decb
ret
xchg
outsl
xlat
repnz
pop
inc
mov
aad
and
shl
sbb
clc
popa
cmc
movsb
add
loope
test
aaa
in
xchg
mov
subl
ret
cwtl
adc
mov
fsubr
sub
std
mov
mov
inc
roll
push
lsl
xchg
cltd
imull
stc
cmpl
orl
xchg
push
and
arpl
pop
outsl
xchg
cmp
cmpsl
and
and
popf
stos
jp
mov
fwait
out
insb
push
push
xchg
popf
adc
dec
add
sbb
call
push
jecxz
gs
fistl
mov
arpl
mov
add
pushf
fsubl
bound
add
clc
adc
frstor
jmp
in
orl
adc
int
mov
out
inc
push
cmp
xchg
cmp
cltd
fucomp
int
mov
lahf
lret
gs
cwtl
mov
test
cwtl
dec
mov
cmpsl
aam
cmp
addr16
add
movsl
test
inc
xchg
xlat
into
inc
js
jmp
xchg
lods
cmp
loope
imul
fsubrl
les
int
in
test
ret
shll
xchg
adc
or
lea
cmc
add
movsl
stos
lods
xchg
ret
jp
out
jae
fstpt
repz
jecxz
mov
sbb
gs
out
lret
out
fstpt
pop
arpl
pop
cmp
inc
jo
fldenv
inc
jne
mov
xor
outsl
lds
pop
aad
icebp
xchg
popf
in
dec
sarl
cmp
fwait
mov
dec
mov
adc
sbb
imul
shll
mov
fidivs
cld
xchg
xor
popa
out
lds
fnsave
mov
test
imul
pushl
jl
pop
cltd
push
aam
lods
aad
add
mov
pop
stos
test
fildl
clc
jg
imul
cli
test
rclb
sarl
xlat
mov
je
int
sbb
xchg
test
lcall
loope
cmp
ret
ja
repz
add
imul
and
fwait
gs
movsl
xchg
mov
rcrl
jae
xchg
test
cld
mov
jmp
sub
mov
fwait
lea
mov
adcl
arpl
dec
xchg
scas
ret
sub
fldt
inc
mov
or
pmaxsw
nop
lahf
fs
jp
ret
aad
iret
outsl
pop
das
and
or
out
mov
jmp
jne
cld
popa
mov
lcall
fstpl
je
jae
dec
test
insl
push
pop
cmp
cltd
in
mov
xchg
cmpsl
subl
xchg
mov
pop
sub
fwait
pop
imul
pop
inc
pop
add
jne
inc
inc
xor
cld
jb
push
std
popf
xchg
imul
gs
mov
jne
lahf
xchg
leave
cmc
pop
lds
push
hlt
pop
lods
stos
movsb
add
mov
cmpsl
ror
shll
fildl
scas
fcoml
aad
inc
mov
push
dec
push
fwait
sbb
jmp
inc
loopne
xor
aad
mov
jne
mov
cmp
pop
sbb
out
xor
jne
jmp
adc
call
jmp
xchg
repz
lahf
fldenv
mov
rorb
test
adc
cmpsl
push
push
out
mov
lods
in
or
add
aad
leave
inc
addb
cmp
sub
popf
mov
ss
xchg
and
cltd
add
vpackssdw
test
xlat
movsb
clc
dec
rorl
lods
lcall
jmp
jecxz
mov
ja
lods
mov
mov
mov
scas
fcomip
pop
jmp
out
pop
lea
pop
decl
aad
test
in
sub
subl
xchg
and
in
cmp
repz
std
inc
cmc
mov
cmp
xor
mov
out
insl
test
sti
stos
pop
mov
jmp
in
mov
jecxz
add
out
push
inc
loop
sbbb
and
shrl
mov
popa
out
mov
pop
fnstcw
jecxz
fwait
fwait
loopne
mov
ja
lds
xchg
rorl
xchg
or
jne
fcomi
xchg
imul
jmp
jae
rcrl
jecxz
js
iret
loope
fmull
movsl
fbld
test
xorb
cltd
in
cmc
test
filds
jmp
test
pop
cmc
lea
sub
cmp
lds
in
xorl
cmp
mov
push
sbb
popf
mov
jne
aas
loope
lea
pop
or
fwait
jmp
ret
inc
test
lret
jg
jne
bound
mov
pop
popa
fucom
xchg
mov
sub
lret
mov
imul
lds
sub
pop
mov
out
and
dec
movsl
mov
cmpb
gs
outsl
repz
iret
mov
cmp
ret
shr
in
xchg
xorl
xchg
cmp
adc
push
and
imul
das
iret
pusha
mov
cmpsl
mov
stos
arpl
xchg
adc
filds
aas
test
cmpsl
lahf
xchg
test
movswl
fimuls
xor
add
cmc
lock
in
aaa
test
movsl
cltd
arpl
aad
mov
out
xor
sahf
xor
mov
imul
add
mov
pop
mov
adcl
mov
scas
imul
outsl
fwait
mov
sub
jmp
sahf
inc
mov
ja
cltd
push
pop
pop
orl
xor
pop
in
data16
jo
jmp
or
cmc
subb
test
lods
and
xlat
jb
or
addl
cmp
mov
jp
stos
and
ret
mov
insb
jmp
fwait
les
sahf
popf
js
out
ljmp
and
cmp
jmp
loope
test
ja
std
mov
add
ret
int3
sbb
fisttpl
jae
aad
insl
sbb
fiaddl
cmpsl
xchg
mov
sahf
sub
xchg
shl
xor
loop
cli
jl
or
iret
adc
or
ret
movsl
push
inc
pop
sbb
es
shl
lahf
aad
xchg
dec
lahf
push
jae
mov
nopl
jnp
jnp
adc
repz
test
scas
adc
mov
sbb
test
mov
test
movl
popf
rcl
jecxz
pop
daa
pusha
stos
and
loope
in
outsl
insl
mov
jecxz
sbb
cld
and
das
xchg
push
xlat
imul
fmuls
insl
outsl
fldl
ds
jne
xchg
xor
test
outsl
addl
xor
pushf
inc
inc
mov
xlat
out
pop
scas
cwtl
sbb
arpl
leave
mov
loopne
mov
std
pop
sub
mov
ffree
push
cmp
sbb
mov
push
inc
sub
inc
pop
and
dec
lock
insl
jne
ja
or
addl
rol
in
ja
outsl
notl
loope
gs
xchg
shrb
fwait
ret
rcrl
bound
mov
push
pop
roll
test
ja
arpl
loope
add
or
dec
stos
les
out
subl
xchg
in
out
imul
mov
aad
lock
repnz
xchg
divl
insb
sub
cli
adc
adc
cli
xchg
lahf
aam
les
sbb
aam
cmpsl
clc
pop
lds
add
xchg
cltd
adc
popf
xor
fwait
or
popf
and
and
ret
xchg
jecxz
ja
iret
pop
in
out
jg
out
push
add
test
aas
fwait
cld
xor
arpl
neg
fsubrs
out
cmpsl
lds
jo
dec
popf
mov
mov
test
lahf
mul
iret
mov
dec
das
addl
jne,pn
cwtl
mov
das
iret
inc
stc
out
cwtl
test
movsb
dec
sub
push
imul
out
insl
mov
xchg
xchg
test
mov
fimull
mov
mov
hlt
sbb
scas
je
lcall
jo
cmp
stos
adc
gs
adc
xlat
lahf
jae
popa
sub
out
aas
jb
cmpsb
adc
xorb
rcr
loop
mov
cld
xor
push
xor
and
lcall
ljmp
cmpsl
cmp
pop
xchg
dec
add
dec
movb
in
lock
sub
lahf
or
test
cmc
in
inc
lds
bound
fprem
jo
sub
pop
mov
outsb
and
fwait
arpl
mov
pop
aad
add
lea
popf
cld
out
push
adc
cmc
scas
fcomi
movsl
add
call
push
mov
mov
mov
test
add
mov
rcr
cmp
cwtl
sub
sbb
xlat
push
insl
pop
and
movb
xchg
and
stc
sbb
and
adc
int
imul
enter
mov
add
fwait
rol
cmp
movsl
and
imul
inc
imul
jp
je
or
push
sub
fcoms
test
jne
xchg
inc
mov
icebp
cmpsl
orb
and
fprem1
imul
in
ljmp
shll
scas
arpl
movsb
out
test
js
push
cld
vprotw
pop
jecxz
ja
aad
cli
stos
popa
sbb
cmp
shr
jg
rcrl
addr16
pop
and
out
cmpl
adc
adc
jecxz
fstpt
jne
adc
pop
mov
in
inc
pop
arpl
sbb
iret
lds
leave
add
stos
pop
cmpsl
xorb
mov
jmp
jae
aad
dec
jae
xchg
dec
sbb
xchg
jne
in
xlat
out
das
sub
out
imul
or
fwait
test
loope
jl
in
outsb
mov
mov
mov
mov
fldt
arpl
fst
cmp
movsb
jno
xchg
ja
xchg
cmp
pop
dec
movsb
mov
stos
fstl
orl
jo
in
mov
mov
dec
stos
cmc
push
xchg
sbb
outsl
aad
or
xorl
pop
cmp
insl
or
fucomip
cmp
ja
movsl
repz
in
scas
dec
adc
gs
or
lock
in
inc
jmp
lea
shrl
inc
addr16
imul
outsl
lahf
xor
mov
fsub
inc
jecxz
adc
adc
cmp
cmp
lock
add
cmpsl
lea
fisubrs
fsubrs
xchg
outsl
in
notl
mov
cwtl
repz
in
jecxz
aad
out
sub
popa
ffreep
and
pop
cmpsl
out
in
stos
cmpsb
ret
int3
dec
mov
pop
jecxz
scas
mov
mov
push
out
popa
pop
sbb
cmpsl
inc
mov
lahf
fwait
pop
sbb
out
mov
jne
adcl
fwait
sbb
outsb
rcl
insl
cmpl
or
in
mov
mov
mov
in
cmpb
movsl
dec
inc
xchg
loop
mov
lods
xchg
popf
jp
out
div
test
rclb
and
xchg
sub
in
int
cmp
mov
cmp
pop
fwait
jmp
outsb
mov
in
cs
dec
jne
mov
outsb
mov
or
nop
repz
sub
ljmp
in
mov
xor
pop
mov
call
mov
call
leave
enter
test
jmp
inc
loop
out
inc
movsl
sarl
je
jbe
test
mov
dec
pop
in
push
jne
fisubrl
or
imul
sub
and
andl
sub
syscall
in
andb
mov
mov
gs
cmpsl
add
in
mov
push
or
mov
or
push
pop
mov
out
pusha
adc
xor
lods
mov
sub
addr16
lea
rorl
aam
add
push
rcl
jne
jb
push
push
cld
jmp
jae
mov
or
test
xchg
leave
int
mov
lds
shl
aas
mov
or
or
imul
mov
or
arpl
add
scas
fistl
mov
cli
pop
lahf
mov
lock
pop
in
inc
add
aad
mov
mov
jmp
jns
ret
rcll
mov
add
lahf
insb
inc
jae
add
test
sarl
mov
push
mov
loope
rcl
int
cli
sarl
mov
shrb
fldenv
mov
repz
pop
add
lea
cmc
lds
mov
gs
push
in
out
xchg
arpl
add
stos
mov
loop
aas
dec
hlt
cmpsl
dec
ds
fidivl
cwtl
inc
shll
cmp
fwait
jae
sub
lret
outsl
imul
out
andb
push
shrb
jp
mov
adc
idiv
maxps
push
das
cvtpi2ps
cmp
insl
jl
lret
lcall
les
xlat
test
iret
jmp
out
jecxz
mov
cltd
xchg
xchg
adcl
sub
fbld
nop
imul
cmc
shlb
stc
addr16
sub
out
call
push
cltd
push
xlat
movsl
add
scas
xorl
jmp
out
ret
arpl
ds
sbbl
insl
jmp
fstl
aaa
mov
dec
push
movsl
mov
xor
xchg
push
or
popa
imul
mov
mov
repnz
leave
cmpsl
mov
dec
int
cld
popf
testl
mov
leave
xor
pop
and
shrl
fisttpl
fisttpll
rclb
das
rorl
cwtl
jmp
aad
mov
adc
repz
iret
rcrl
xchg
xchg
push
inc
pushl
cmpsl
cmp
scas
mov
sbb
xor
sub
aas
mov
ja
jecxz
mov
stos
addr16
cmp
cmpsl
xor
gs
mov
push
ja
push
stos
subl
pop
gs
xor
rcll
adc
roll
add
mov
add
lahf
out
rorb
roll
jl
dec
fwait
xchg
jmp
in
pop
lea
xchg
xor
push
mov
or
mov
adc
pop
xchg
inc
int3
into
shll
cwtl
mov
aas
inc
xorb
xchg
clc
lods
mov
mov
lods
add
neg
adc
jmp
push
stc
xlat
out
ja
or
or
es
stos
pop
sbb
out
addr16
popl
insl
popf
scas
xlat
xchg
test
fninit
sbb
mov
repnz
cmp
sbb
xchg
cmc
sbb
push
popa
mov
subl
jnp
mov
jecxz
subl
add
fsubr
fldcw
movsb
mov
and
cli
fldt
mov
xchg
mov
xchg
cmp
mov
push
pop
lea
sbb
xlat
sub
leave
sbb
ret
mov
ds
stos
and
jne
and
adc
popf
cmp
xchg
out
xor
lds
nop
shrl
jecxz
xchg
add
stos
push
or
push
fistpl
add
js
insl
cmpsl
sub
in
lea
or
imul
leave
push
stc
iret
outsl
arpl
mul
mov
jne
mov
mov
aaa
ret
in
xchg
arpl
jmp
movsl
inc
adc
ljmp
shl
and
cmp
int3
cmpsl
pop
or
dec
cmc
test
adc
out
call
shr
je
shrl
jg
mov
push
push
add
or
popa
xlat
add
mov
jnp
dec
lahf
leave
rcll
cltd
lret
add
sbb
jmp
xchg
xor
adc
xchg
fxch
xchg
mov
mov
outsl
cltd
andl
movsl
movsl
cmp
daa
pushf
xchg
mov
jmp
outsl
lret
cwtl
imull
leave
mov
ret
mov
lret
cltd
mov
adc
dec
and
mov
jecxz
ja
cli
fimull
xchg
inc
or
push
stos
jecxz
xor
add
mov
imull
testb
arpl
arpl
pop
sarb
xchg
das
sti
mov
mov
sbb
inc
repnz
mov
gs
jne
gs
add
cmpsl
and
flds
jg
mov
adc
add
jns
mov
and
mov
mov
roll
mov
iret
bnd
out
scas
shl
jne
mov
fwait
xchg
arpl
addr16
fstps
dec
inc
jg
pop
test
push
ljmp
adc
cmpb
pop
repnz
fwait
lods
shlb
out
sbb
add
fistpl
scas
iret
mov
mov
xchg
push
push
arpl
fists
or
lahf
repnz
sub
jae
decb
dec
adc
icebp
jge
flds
xchg
rcrl
lret
cmpsl
push
jle
nop
or
cmp
add
test
aad
cmpsb
sub
ds
push
stos
add
push
movsl
or
popa
andb
sub
jne
rol
mov
add
stos
mov
das
xchg
xchg
aas
lea
lds
sbb
or
aam
cmp
xlat
mov
test
popf
pop
icebp
lret
inc
out
mov
xor
mov
test
scas
negl
imul
push
adcb
add
shll
repnz
xchg
out
rolb
out
mov
idivl
pop
test
add
fcmovnu
aad
icebp
sub
hlt
cmp
push
out
adc
jbe
popf
outsl
out
mov
lock
adc
lods
int
pusha
movsl
pop
cmp
test
xor
push
test
cmp
test
push
pop
push
test
mov
jmp
xchg
movntq
inc
add
shll
pop
jmp
mov
fsub
jecxz
lock
cwtl
adcl
in
stc
imul
pop
cmc
sbb
notl
inc
loope
xchg
loope
jecxz
aas
cmp
int
aad
mov
and
lods
roll
imul
ja
ljmp
pop
push
xlat
ljmp
lds
cmpsl
sub
stos
rcll
jns
lret
mov
hlt
sub
inc
dec
popa
cwtl
loopne
pop
outsl
jnp
out
roll
push
stos
cmc
pop
shr
sub
inc
shlb
clc
adc
stos
or
jg
cwtl
pusha
rol
xchg
lahf
jmp
insl
jmp
aam
xchg
rcll
mov
pop
cmpl
rorl
das
cs
sbb
push
iret
mov
xlat
rorb
mov
jecxz
mov
iret
inc
jg
cmp
cmpsl
sub
mov
push
clc
sbb
test
enter
arpl
sbb
icebp
ja
lds
outsb
idivl
push
mov
xchg
add
out
mov
jl
and
cmpsl
aas
in
lahf
and
dec
rolb
mov
and
ja
cltd
scas
sbbl
popf
sbb
jg
lret
mov
push
addr16
outsl
ss
cwtl
fwait
lds
mov
cli
jp
inc
add
push
xchg
xchg
andb
pop
ljmp
mov
test
out
xchg
cwtl
adc
add
fidivs
or
and
in
subl
test
repnz
cld
imul
loope
dec
inc
ja
into
mov
sub
mov
rol
stos
je
mov
push
and
or
mov
xchg
add
mov
adc
clc
popf
ja
mov
fildl
sbb
mov
mov
rol
stos
add
leave
lds
cmc
hlt
ret
lret
mov
or
xlat
ss
and
inc
insl
arpl
adc
pop
insb
imull
test
mov
mov
dec
cltd
scas
inc
add
popf
dec
jmp
cmpsl
mov
into
adc
pop
cltd
shlb
fcomps
jg
xchg
lock
mov
push
sub
gs
or
mov
push
mov
pextrw
popf
pop
mov
push
jle
sub
fwait
test
xchg
jmp
es
cmp
pop
arpl
cmp
shrl
pop
out
push
mov
loop
in
cwtl
jge
imul
sub
lahf
xor
ret
out
lcall
mov
nop
pop
or
cmp
inc
pop
aam
inc
test
leave
xor
lret
ja
in
dec
imul
shr
shlb
jp
mov
movsl
adc
xchg
inc
push
push
psubusb
xor
pop
pop
cld
xchg
popf
dec
jns
fistpll
rcrl
add
adc
sbb
dec
mov
ljmp
sbb
cmp
lods
roll
outsl
ja
shl
decb
xchg
xor
stos
in
loope
test
adc
scas
addl
jmp
push
fsub
out
xchg
sub
xchg
out
cltd
sub
jl
sub
or
inc
vpmullw
fwait
clc
jmp
inc
dec
mov
addr16
out
int
stos
mov
xchg
gs
lret
mov
arpl
out
cwtl
aad
fdivs
mov
pop
stos
and
lds
push
fisubrl
sbb
sub
mov
es
mov
repz
lea
add
xchg
jnp
xchg
arpl
mov
rcr
mov
test
pusha
push
xlat
scas
clc
mov
sbb
mov
fldt
fisttps
ja
mov
js
shl
xchg
js
lret
lds
imul
inc
aas
movsl
int
cltd
leave
mov
in
scas
int3
outsl
pop
gs
mov
jecxz
clc
xchg
fcomip
or
frstor
ret
push
adc
in
pop
or
jmp
loope
pop
add
daa
int3
in
les
lahf
lock
xchg
iret
iret
movsl
jmp
rcrb
out
cmp
out
jne
xchg
sar
sbb
repnz
movsl
cmp
negb
push
scas
fisttps
xorl
in
mov
mov
repz
mov
mov
mov
pop
inc
add
pop
js
inc
ljmp
lds
pop
popf
imul
std
das
cmp
aad
add
xchg
ret
imul
mov
arpl
leave
jne
dec
enter
cmp
popf
xchg
loope
movsl
pop
out
out
mov
xor
adc
ret
cwtl
mov
cltd
xchg
lret
sbb
mov
leave
pop
in
mov
sbb
shll
or
cmp
pop
popf
jecxz
imull
ror
test
cmc
sub
jno
mov
xchg
mov
xor
xchg
addl
push
shrl
in
in
fwait
mov
sub
dec
lods
inc
cmp
call
ja
xchg
cltd
movlps
lret
es
xchg
jmp
arpl
sub
cltd
leave
gs
out
mov
lds
or
mov
rep
cmp
push
cmc
sbb
mov
ljmp
movsl
test
int3
popa
pop
aam
ret
mov
repz
cmc
push
lret
sub
andl
inc
pushf
imulb
add
leave
lods
test
sbb
mov
lret
ret
jecxz
xchg
pop
ds
sbb
andb
pop
lods
lock
lahf
add
mov
jecxz
addb
add
iret
roll
jnp
pop
arpl
add
lods
fstp
popa
addr16
pop
add
cltd
jo,pn
cmp
cmp
and
cwtl
adc
cwtl
imul
lods
jmp
call
pop
movsl
xor
mov
inc
inc
hlt
out
test
jne
dec
dec
lods
addr16
cmc
popf
scas
mov
int
inc
fucom
lret
sahf
imul
imul
dec
sbb
mov
ja
popa
popf
mov
insl
out
popa
addr16
rorl
imul
mov
adc
jnp
stos
mov
sub
test
push
ret
loope
roll
stos
in
loop
out
in
imul
jp
lret
xchg
pop
clc
xchg
cltd
in
and
jecxz
in
adc
sbb
mov
ljmp
jmp
adc
shll
out
or
jbe
shl
adc
xchg
roll
outsl
mov
pop
das
mov
jne
push
cmpsl
jmp
dec
push
repnz
iret
in
xchg
hlt
fsubr
and
dec
mov
cs
adc
fwait
add
fidivrl
and
test
cmpb
inc
clc
xchg
jmp
test
mov
cmp
lahf
shrb
push
subb
mov
sahf
imul
sub
ja
pusha
loope
ja
iret
insl
out
filds
and
scas
jl
xor
aad
dec
movsl
test
scas
adc
test
push
arpl
xor
pusha
gs
clc
movsb
lret
addr16
rcr
enter
sbb
stos
inc
lods
mull
scas
outsb
pusha
push
adc
dec
gs
testl
adc
imul
dec
in
in
test
mov
push
imul
xor
ud2
imul
xorl
adc
jae
adcb
popa
cmp
test
cmp
or
lret
jg
mov
std
in
and
adc
insl
leave
leave
jmp
rcrl
ljmp
repz
lods
xchg
dec
iret
shlb
sarl
push
insl
pop
fisttpll
cmpsl
repz
enter
sbb
mov
imul
adc
fs
xchg
cmp
fwait
lods
jmp
fldcw
jae
loope
int
mov
dec
imul
mov
lods
cwtl
jp
js,pt
pop
test
outsb
cmpb
ffree
clc
xchg
pop
ds
rcrl
cmc
mov
xor
mov
js
aad
repnz
pushf
lea
notl
subb
mov
std
xor
mov
leave
in
or
push
push
pop
or
xor
dec
cmp
mov
scas
lret
cmp
cltd
jecxz
ja
imul
pop
and
and
sub
xchg
add
mov
mov
cmp
mov
test
mov
int
cmpb
pop
leave
lahf
aad
outsl
fincstp
out
pand
shrl
push
shl
inc
popa
xchg
xchg
jmp
xchg
fmulp
fwait
xor
neg
xchg
xchg
shrl
cmc
in
popf
cwtl
out
fisubrs
test
out
in
sub
fildll
mov
push
cltd
aad
out
adc
psubusw
cwtl
mov
rolb
xchg
insl
sbbl
scas
ljmp
ja
loope
mov
jp
test
insl
in
cld
jl
lret
andl
lods
out
ret
stos
fldcw
repz
add
in
lahf
mov
test
lds
mov
test
in
sub
cmp
leave
mov
mov
test
mov
test
cmpsl
iret
cwtl
mov
jecxz
cmp
lahf
mov
cmc
das
leave
in
gs
adc
and
adc
add
and
das
mov
roll
xor
and
subb
iret
xor
jle
inc
cli
jnp
mov
adc
mov
mov
mov
xor
push
lds
ror
imul
pop
lds
dec
popf
nop
mov
xchg
test
jmp
test
mov
xor
popa
and
push
std
dec
jne
mov
sbb
gs
or
xchg
adc
or
outsl
ljmp
mov
mov
push
je
hlt
mov
test
jne
out
jp
lcall
sub
mov
mov
add
jmp
jecxz
aas
xorb
ja
add
repnz
mov
lds
mov
popf
js
mov
in
push
divl
imul
push
push
movsb
jl
arpl
loope
sub
push
aad
ror
push
sbb
aad
call
mov
mov
or
adc
add
xchg
dec
inc
arpl
mov
jns
fisttpl
mov
repz
jne
adc
popf
cmc
addr16
lahf
mov
shl
xchg
subb
mov
jmp
push
popa
aad
jg
ss
pop
jp
arpl
out
or
jmp
out
hlt
mov
ficoms
sbb
or
iret
mov
push
cltd
push
push
dec
adc
sbb
int
aad
fldt
mov
addr16
cltd
add
int
mov
mov
xchg
sbb
inc
into
ret
sub
aaa
je
popl
arpl
mov
outsb
mov
ficomps
xor
sbbb
jecxz
icebp
cmp
insb
and
leave
ret
andl
cmpsb
cmp
push
popf
adc
lahf
jp
jl
cmpsl
pop
dec
lods
imul
add
lret
ja
mov
popa
repz
cmc
fldt
cs
pop
pop
roll
fsts
loopne
adc
pop
fisttpl
hlt
xchg
mov
push
dec
adc
mov
ja
stc
in
movsl
jecxz
test
cmc
repz
mov
add
shl
jp
bound
popa
fwait
add
inc
xchg
mov
imul
stos
or
xchg
mov
sub
mov
mov
insb
jmp
fld
int
test
or
inc
bndstx
push
jecxz
lods
in
ret
mov
mul
and
jg
mov
dec
in
arpl
jne
mov
aas
mov
jb
xchg
rorb
pop
push
in
test
out
movsb
mov
rcr
cmp
jne
ffreep
aas
mov
imul
lods
sti
cltd
in
xchg
xchg
movsb
pop
int
repz
cwtl
sti
insl
mov
push
cmc
or
int
jecxz
std
in
pop
in
dec
xor
xchg
sti
sbbb
mov
rorb
cmp
cmp
jae
stc
lds
sub
or
mov
jmp
mov
mov
push
scas
mov
daa
dec
fwait
cld
sub
jmp
fldl
cwtl
test
pop
xchg
fsts
lahf
jecxz
mov
loope
mov
scas
jne
fstp
jnp
adc
mov
dec
cmp
and
or
sub
int
or
repz
roll
and
popf
or
bound
lods
decb
int
daa
rorb
fsts
jmp
mov
cmc
add
out
lods
inc
fdivr
xchg
insl
inc
ljmp
out
out
jae
icebp
dec
mov
inc
sbb
mov
and
scas
pushl
lret
ret
arpl
pushf
ljmp
fwait
xchg
mov
test
call
sarl
mov
mov
add
mov
scas
in
mov
jbe
push
test
decb
mov
or
push
jns
mov
test
clc
hlt
mov
repz
cmp
pop
fstps
dec
movsb
sbb
lret
push
xchg
adc
iret
lds
mov
shl
xchg
mov
addb
cltd
stc
xlat
in
sub
popf
test
or
mov
xchg
gs
ficoms
aad
dec
pop
in
call
fwait
jmp
lcall
pusha
add
pop
andb
subl
in
cmc
xchg
inc
int
pop
cwtl
out
or
imul
loope
rcll
jle
mov
test
ficoml
fdivrs
xchg
loopne
pop
inc
jmp
popf
fldt
cmp
fs
leave
sbb
pusha
pusha
in
and
fimull
push
jecxz
insb
jnp
pushf
cwtl
pop
jne
imul
sbbl
dec
jne
scas
sahf
cmp
mov
out
cmpsl
outsb
adc
mov
xor
cmp
repnz
ret
xlat
scas
clc
lahf
aad
or
xchg
jmp
addr16
or
fldl
and
pop
mov
leavew
pop
movntq
out
or
ret
test
adc
outsb
loopne
inc
rclb
lods
outsl
mov
loopne
popf
sub
out
jge
push
dec
or
xchg
inc
dec
mov
xchg
movsl
jb
xchg
mov
lcall
mov
int3
movsl
xor
push
push
lods
cmp
jne
lret
lret
fildll
inc
dec
out
lea
pop
inc
lret
push
clc
cmpsl
mov
ret
sub
pop
cmpsl
pop
xor
out
inc
aaa
ret
movsb
mov
daa
stos
mov
repnz
push
sbbl
lahf
sti
data16
pop
leave
in
mov
stos
mov
add
cwtl
mov
or
iret
lea
sarl
dec
lret
aad
ret
cmc
xor
pop
subl
out
in
adc
test
movsl
or
cltd
mov
dec
xchg
mov
lahf
jb
call
mov
addr16
fstp
imul
xlat
cmp
fisttps
xor
test
jae
mov
xchg
lahf
and
dec
adc
add
jns
movsl
shl
clc
push
shll
std
divl
pop
jnp
push
pop
popf
out
mov
fistl
jl
adc
mov
add
outsl
sarl
sbb
shl
data16
jne
push
adc
in
popa
or
xchg
ret
lods
adc
push
jbe
out
xorl
mov
popf
roll
pop
and
adc
mov
jno
imul
imul
mov
cmc
inc
xchg
inc
nop
and
shrl
notl
stos
jne
cmpxchg
push
jecxz
jbe
inc
cltd
addl
shlb
mov
cs
sbb
test
test
popa
aam
pop
jo
jb
sti
cmc
lahf
sarl
aad
int
dec
in
ds
pushf
xlat
xchg
roll
iret
mov
pop
fwait
notl
lret
mov
testl
jl
sub
ficompl
adc
and
and
jne
je
xchg
int
jns
sub
add
loope
fwait
ja
mov
xor
orb
jl
loope
inc
push
xorl
and
xor
lods
imul
shr
test
cwtl
mov
leave
xchg
insl
enter
fldl
outsl
out
jmp
xchg
inc
ret
mov
or
in
outsb
mov
iret
adc
ffreep
push
addb
push
sbb
loop
hlt
stos
fucom
cmp
lods
insb
inc
mov
mov
ret
xchg
fcompl
jne
dec
gs
stc
push
out
mov
adc
test
mov
test
jno
dec
aad
mov
ljmp
icebp
push
mov
mov
sub
pusha
add
lea
cltd
aas
xlat
stos
mov
rcrl
or
push
push
add
scas
xchg
xchg
test
mov
rclb
add
push
nop
ja
cli
icebp
xor
cmc
pop
rolb
imul
mov
mov
add
iret
ret
cwtl
lahf
pop
int
fisubrl
mov
sub
inc
push
in
mov
sbb
cmp
adc
aam
adc
mov
cltd
cwtl
xchg
in
in
stos
push
movsb
inc
lret
xchg
xchg
test
in
scas
add
push
xchg
cmpsl
andl
push
and
pop
jno
mov
mov
xchg
mov
test
repz
fld
lods
ja
in
lahf
roll
shrb
ret
dec
xor
mov
pop
rcrl
aaa
push
and
stc
cmp
and
mov
dec
imul
mov
ret
xchg
cmc
pop
jae
sbb
add
add
jecxz
in
iret
test
ja
outsb
mov
loopne
cmp
lods
int3
aam
shrl
mov
daa
push
sub
push
push
into
ret
jmp
xlat
popl
or
out
lahf
push
mov
jns
icebp
out
popf
leave
pop
jne
movsl
add
lods
aad
roll
js
cmpsb
pop
pop
or
shll
seta
fstl
inc
repz
sub
mov
or
je
adc
fstpl
imull
jae
je
cmp
sub
xor
cltd
sub
shl
and
stos
jne
cmpsl
pop
testl
xchg
iret
xchg
inc
das
mov
sub
jecxz
shl
lret
add
mov
stos
xchg
ret
dec
jmp
sub
jmp
sbb
cmpsl
out
loope
arpl
int3
adc
push
adc
lods
paddusw
xchg
mov
mov
adc
hlt
in
out
rcl
cmp
ffreep
pop
cmpsl
movsb
mov
jnp
in
lea
push
cmp
jne
inc
mov
pop
mov
jmp
mov
xorb
xchg
lahf
jecxz
xchg
xchg
lret
sub
pop
sub
pop
in
push
scas
ret
in
lahf
lret
int
inc
inc
loope
iret
stc
xchg
add
mov
xchg
xchg
flds
hlt
mov
stos
into
out
cmc
pop
jmp
lock
push
push
cli
xchg
lods
xchg
adc
out
cmp
aad
xor
std
xlat
sub
lods
popf
flds
in
test
jmp
std
aas
popa
lahf
test
cmp
ret
das
pop
inc
cmp
dec
add
sub
ds
xchg
mov
push
rorl
repnz
xchg
mov
lods
lret
out
test
jnp
imul
imul
popf
fildll
push
mov
sti
cs
cmp
mov
mov
push
cmpsl
fadds
mov
imul
jbe
adc
ret
push
into
jmp
loope
inc
dec
xchg
test
inc
out
ret
lds
mov
adc
addl
outsl
mov
out
in
popf
lahf
repz
mov
rcrb
cltd
fadds
js
lret
sub
mov
mov
fsubs
jbe
jmp
movsl
addl
adc
out
cmpb
pop
scas
ja
push
jne
sahf
int
addl
daa
mov
pop
in
jne
lods
lahf
push
cwtl
test
mov
pop
adc
cmp
les
mov
adc
push
mov
std
sbb
imul
jecxz
or
dec
popf
lods
mov
mov
gs
mov
sbb
pop
lods
pop
pop
scas
mov
rolb
incl
jne
or
popf
cwtl
xor
pop
addr16
test
ret
lahf
outsl
jl
mov
lret
xlat
faddl
out
xchg
out
in
aam
and
cwtl
mov
mov
dec
imul
fucomp
rcrl
xlat
mov
jmp
imul
mov
mov
ffreep
test
xchg
cmp
test
int
push
pushf
lock
and
fisttps
sub
loope
add
fbstp
test
push
adc
cld
sbbl
push
lahf
enter
ss
in
inc
aam
dec
jmp
cwtl
push
aad
lds
cwtl
rorb
ja
insl
in
cmpl
cwtl
popf
dec
xchg
cwtl
jne
in
xor
jne
ja
ret
scas
out
pushf
or
adc
push
adc
sub
rcl
ljmp
mov
and
and
lahf
mov
xchg
aad
ja
cwtl
mov
enter
jb
adc
ljmp
mov
ljmp
outsl
dec
leave
jmp
xor
arpl
loope
cmp
push
push
adc
imul
xchg
mov
arpl
add
aad
mov
sbb
in
pop
out
divl
jmp
out
ja
mov
inc
push
lahf
jne
fwait
stos
int
imul
mov
cmp
test
mov
sub
jno
popf
xor
jecxz
sbb
out
jb
arpl
sub
sub
divl
pop
or
mov
adc
bound
test
dec
emms
unpckhps
mov
jne
cmc
xlat
iret
jecxz
mov
xor
mov
mov
jmp
xchg
fadds
cmc
insb
lea
adc
jg
lods
mov
sbb
xchg
frstor
ja
ret
dec
repz
insl
mov
pop
rorl
jmp
testl
outsb
call
cltd
push
inc
not
shll
fs
repz
mov
lods
mov
jbe
jecxz
jb
xchg
jb
iret
adc
scas
cld
push
adc
push
test
xor
movsb
fistps
pop
test
sbb
sbb
lds
and
movsl
shll
arpl
ret
stos
ret
add
scas
cwtl
sub
fwait
iret
or
mov
insb
cmp
or
arpl
cwtl
insl
sahf
jle
aas
roll
push
iret
cwtl
out
push
mov
cmc
xchg
push
push
out
xchg
js
fcmovnb
iret
lods
aam
arpl
or
into
mov
repz
lahf
in
and
adc
arpl
orl
cmp
or
inc
and
pop
dec
cmp
push
in
js
mov
out
in
mov
sub
iret
adc
ficompl
jbe
rcll
lret
orl
mov
add
out
cmp
and
mov
lahf
cmc
shl
jp
jp
out
mov
in
test
push
rcrb
xchg
popa
fbstp
xlat
and
shlb
sub
test
sahf
and
add
xchg
pushf
push
sbb
imul
fldcw
aad
iret
pop
xor
jne
aad
out
xor
pop
pop
lods
mov
xchg
shll
dec
aad
out
fwait
lret
in
pop
pop
arpl
imul
outsl
mov
adc
mov
jge
int
mov
rorl
xchg
pop
jmp
mov
mov
inc
popf
inc
lret
mov
pop
jle
cltd
out
gs
inc
in
cmp
repz
andb
lret
sbb
mov
out
sarl
mov
aas
popa
stos
fildl
lret
pop
imul
in
sub
leave
sbb
in
imul
or
scas
fnstcw
data16
mov
xorb
test
or
and
lahf
loope
sbb
xchg
popf
jecxz
cmpsl
xchg
mov
int3
orb
cmc
or
outsl
div
test
lock
ret
cltd
mov
cmp
int
movsl
jl
loop
adc
sbb
stos
aad
gs
out
test
push
xor
mov
cmp
inc
fsts
mov
out
shll
jp
mov
add
test
or
cld
jmp
out
adc
stc
mov
fprem1
jns
jmp
in
mov
cltd
xor
ficomps
mov
ret
xor
lds
sbb
pop
mov
cmpsl
xchg
popa
dec
cmp
aas
movsl
lea
sub
out
sbb
stos
cmp
jae
cwtl
lahf
imul
out
inc
jg
mov
xchg
xorl
rcll
lahf
or
scas
in
xchg
fnsave
and
sarl
sub
or
lods
scas
movsb
pop
or
mov
imul
xchg
inc
and
out
das
sahf
popa
xchg
jg
mov
lahf
jmp
or
scas
cltd
dec
aad
sbb
shll
push
imul
out
lret
jmp
dec
lahf
cs
rorl
mov
cwtl
cmp
andl
jne
rol
loope
gs
stc
addr16
pop
arpl
xchg
sahf
jmp
or
mov
sub
sbb
lods
jne
cltd
mov
jp
cld
jmp
inc
in
lret
popf
mov
cmp
push
adc
lods
sarl
mov
jmp
sbb
fcmovne
stos
cwtl
mov
lods
mov
push
fistpl
dec
and
jmp
aad
test
or
cmc
test
insl
cltd
outsl
imul
sub
mov
push
in
aas
jmp
testl
adc
lahf
negl
orl
sbb
xchg
stos
push
xchg
add
fwait
outsb
fiaddl
xchg
cwtl
out
push
push
adc
mov
test
mov
inc
int3
loope
and
pop
rorl
test
rcrl
and
lds
mov
inc
inc
lds
shrl
push
test
popa
lret
sbb
sbb
out
cmpsl
push
or
xchg
ffree
iret
lds
ja
andl
xchg
pop
inc
fabs
in
cmp
outsl
push
imul
dec
or
flds
mov
mov
orb
loopne
mov
data16
mov
rcr
pop
mov
movsl
pop
or
add
cld
cmp
sbb
sti
cmpsl
cs
leave
int
sti
jmp
insl
xchg
xchg
enter
push
shll
mov
popf
std
push
mov
dec
loope
sub
xchg
out
neg
cmp
push
movsl
clc
imul
add
lahf
test
test
leave
iret
dec
xchg
js
xlat
in
add
push
aad
int
dec
pop
es
lahf
shll
repz
cli
jnp
lock
lock
xchg
popa
aaa
xchg
addr16
rcrl
bnd
mulps
xor
test
stos
mov
test
push
es
int
pusha
scas
ret
xchg
lea
xchg
in
repnz
cmp
xlat
hlt
sub
xchg
sub
loopne
push
out
cwtl
xchg
popl
outsl
lret
cli
movsl
test
insl
xchg
xlat
inc
and
sarl
jne
mov
jne
int3
fstpl
hlt
mov
add
loope
lea
test
arpl
lahf
xchg
jns
cmp
and
iret
cltd
cwtl
mov
decl
xchg
stc
data16
mov
sub
ss
std
aam
jle
iret
adc
mov
cltd
arpl
xchg
fiaddl
adc
stos
pop
mov
imul
fst
mov
sub
push
adc
ror
or
aad
cltd
sti
aad
test
lahf
xor
repz
cwtl
lods
jnp
in
and
rorl
repz
sbb
insl
outsl
pop
popa
xor
inc
popf
jecxz
sub
dec
cmpsl
repz
mov
stos
and
mov
push
xchg
insl
ret
js
cwtl
cmpb
arpl
jmp
gs
int
cmp
mov
mov
cmp
xchg
fwait
fwait
jl
in
add
add
xchg
lds
sbb
pop
xor
xchg
sti
enter
sub
pushf
imul
movl
fdecstp
mov
jmp
xor
movsl
pop
adc
push
inc
insb
jle
or
mov
jne
push
xchg
idivl
mov
mov
shl
jmp
xchg
add
popa
fld
cmpsl
pop
jmp
in
cltd
mov
mov
lret
jle
and
pop
cmp
cwtl
sbb
sub
out
popa
nopl
movsl
or
push
cmpsl
aaa
addr16
push
mov
divl
lods
xor
sub
pop
iret
jp
mov
or
push
push
in
mov
movsl
arpl
mov
cmp
ja
gs
mov
lret
jecxz,pt
loope
cld
xchg
xchg
imul
test
or
ss
popa
stc
js
loope
mov
cmpsl
test
outsl
mov
sub
xlat
cltd
or
movsl
out
repz
adc
mov
cltd
test
fisttpll
mov
sbb
out
filds
stos
fldt
lods
push
xchg
popa
loope
pop
movsb
cs
mov
ret
test
jbe
cmp
mov
iret
ret
mov
dec
sbb
imul
lods
arpl
jge
test
fistl
jns
xlat
jbe
test
aas
jmp
into
inc
mov
lahf
shrl
push
rcrl
in
dec
dec
subl
sar
xchg
rorl
xor
mov
cld
xchg
xor
leave
leave
jecxz
fwait
out
int
add
lahf
jl
cli
mul
ss
iret
add
xchg
fcmovnb
movsl
xchg
mov
roll
int
jb
mov
negl
filds
sub
gs
out
sbb
cwtl
ret
shr
mov
gs
leave
cwtl
push
mov
xor
loopne
lret
scas
xchg
stc
js
mov
arpl
jmp
imul
lods
lret
test
lock
mov
ret
jae
add
stos
and
imul
jmp
fildll
mull
lahf
iret
push
mov
jg
xchg
mov
sbb
push
rcrl
fsts
xlat
mov
mov
cltd
xchg
pop
adc
sti
sub
mov
jg
mov
aad
pop
push
mov
mov
mov
jae
loope
sbb
mov
lahf
push
inc
add
add
outsb
cmpl
or
xchg
mov
adc
push
dec
je
fwait
mov
das
adc
xlat
insl
mov
stos
jae
mov
stos
popf
call
lock
ret
inc
inc
ret
sub
call
dec
inc
pop
sbb
push
pushf
cmp
iret
mov
pop
test
movsl
addl
xorl
pusha
scas
fstpl
mov
in
jbe
cmp
push
pop
test
add
adc
shr
loope
cltd
repz
mov
popa
lock
aam
hlt
nop
rol
mov
cmp
xchg
inc
push
and
push
mov
mov
dec
lahf
mov
jbe
xchg
gs
ucomiss
mov
push
ret
arpl
mov
or
lahf
mov
jno
imul
mov
gs
mov
subl
cmp
mov
mov
int
in
out
loop
movq
stos
xlat
ret
scas
out
sahf
int
popa
in
addr16
sub
jmp
stos
lds
ja
jl
mov
arpl
add
scas
hlt
xchg
xchg
pop
sbb
mov
rcr
xchg
fistps
shrb
lret
int
jmp
out
imul
mov
aam
aaa
pcmpgtw
arpl
lods
cld
adc
mov
lea
hlt
pop
or
mov
mov
movsl
leave
xor
mov
jmp
sti
loope
fsts
popf
fcom
push
insl
gs
adc
mov
sarl
jae
imul
repz
cltd
inc
sub
out
sahf
test
xchg
mov
fldenv
in
cmp
mov
sahf
stc
gs
js
fwait
sbb
push
inc
rcrl
out
out
popa
scas
aas
pushf
sbb
mov
imul
in
fisttpl
mov
ret
cmc
pop
push
loope
jns
clc
dec
stos
arpl
dec
subb
std
repnz
loope
push
dec
fimull
push
jmp
hlt
test
jno
dec
out
mov
cwtl
subb
and
rorl
call
aas
pop
outsb
sbb
pop
test
sub
loopne
out
test
popa
sti
arpl
iret
and
out
test
sbbl
xchg
shrl
in
jmp
hlt
cmp
mov
pusha
jmp
push
aas
jmp
sub
notl
stos
mov
cwtl
fcomip
test
and
imul
adc
cmp
lds
scas
sub
adcl
add
lods
out
jecxz
cmc
les
jmp
subl
and
and
add
mov
push
cltd
cmc
pushf
js
fstl
in
test
jge
jno
pop
ja
mov
popa
pop
pop
cmp
outsl
xchg
mov
cmp
and
xchg
add
aam
lahf
sub
idivl
dec
fildl
fldl
adc
lcall
mov
fisttpl
out
jns
rcl
cmpb
pop
push
xchg
insb
dec
aad
stos
push
aad
aas
repz
out
mov
mov
mov
add
cld
xchg
inc
cltd
xchg
jne
jo
lods
or
fwait
mov
push
arpl
testl
outsl
xor
xchg
add
in
xchg
mov
fwait
add
mov
movsl
xchg
insl
out
loope
lea
xrelease
jne
xchg
in
test
dec
pop
adc
pop
aas
aad
scas
and
and
ret
sbb
xlat
sub
loop
out
jecxz
xchg
ja
cmpsl
mov
gs
adc
imul
sahf
jne
push
dec
push
fstpt
add
lahf
xchg
lods
push
pop
out
imul
ljmp
out
bswap
lds
dec
shr
pop
dec
jno
testl
loope
jnp
cmp
outsl
lock
ja
arpl
cmp
fdivrs
cwtl
ret
lods
out
mov
lods
cltd
loope
andb
or
mov
je
das
jne
jmp
dec
imul
adc
outsl
cmpl
xor
xchg
pop
mov
leave
sub
insl
out
cmp
int
clc
data16
jge
ja
int3
mov
add
mov
pop
xchg
jmp
pop
adc
mov
movsl
stos
fdiv
outsl
shll
int
call
or
jne
cmp
lret
inc
addl
lcall
subl
sbb
decb
pop
lds
in
cmc
in
xor
shll
aas
sub
xchg
aad
adc
and
sbb
or
test
jae
das
dec
and
cwtl
jecxz
stc
and
inc
cmpsl
in
jmp
mov
imul
in
ret
fnsave
xor
adc
sub
leave
call
jmp
test
ja
call
jle
and
add
cmp
jp
aad
movsl
roll
iret
inc
add
lahf
push
test
lds
xchg
push
lahf
lcall
adc
imul
imul
cmpsl
shll
and
cli
adc
test
push
divl
rol
aas
jmp
aad
mov
pop
test
lahf
xlat
mov
or
mov
adc
adc
hlt
xchg
rcrl
in
pop
lea
cs
sbb
fstpl
scas
in
movb
dec
xchg
mov
dec
xlat
in
push
cmp
xchg
out
int3
lds
cltd
xchg
clc
lea
xor
mov
pop
std
add
inc
andb
push
cwtl
stc
out
loop
xor
fdivs
or
mov
add
iret
cli
mov
ret
gs
ja
cmp
loope
scas
mov
stos
das
sahf
or
xor
cmp
mov
mov
xchg
iret
cmc
and
movsl
xlat
cld
push
rcr
test
jne
enter
mov
hlt
pop
push
pop
or
pushf
in
xchg
mov
dec
popf
add
lahf
out
mov
add
repz
std
cmp
jmp
xchg
mov
jmp
mov
cmp
fstps
fsubs
in
lods
pop
xlat
fsubrs
jae
mov
leave
scas
lds
pop
loop
aad
stos
adc
mov
shrl
mov
insl
divl
rcrl
sti
or
cmp
test
ja
sub
inc
ds
gs
inc
add
mov
mov
popf
xchg
stos
xor
ret
aaa
addl
add
ja
cmp
lret
icebp
jmp
dec
and
ret
cmp
cltd
inc
adc
out
stos
es
mov
popf
and
test
stos
dec
cmpsl
roll
and
and
xchg
out
cmpsl
cmp
lock
scas
sbb
je
mov
dec
repz
jne
int
ja
cmpsl
ds
inc
shrd
sbb
movsb
adc
into
inc
and
cltd
lahf
fldt
testl
push
xchg
lods
ret
jno
xchg
mov
mov
gs
inc
sbb
cmpsl
pop
add
arpl
jns
repz
mov
adc
xchg
adc
add
ret
orb
dec
mov
jecxz
imul
std
cld
popa
mov
push
jl
mov
or
das
adc
jge
mov
jb
jne
gs
mov
and
inc
cmp
mov
rol
jp
shll
xlat
dec
adc
shll
cld
sub
xchg
jmp
mov
lret
pop
cwtl
ror
cmp
popf
je
ljmp
push
cmp
out
popf
in
cwtl
xchg
cmc
pop
int
cwtl
and
sub
inc
lahf
ret
dec
xchg
xchg
xchg
test
xchg
dec
iret
arpl
popa
inc
rcrl
add
stos
jmp
add
pop
in
mov
xchg
out
in
or
ss
lods
push
enter
ret
xchg
and
ret
rolb
sarl
dec
add
mov
scas
push
ret
add
xlat
cmpl
lahf
lret
sahf
mov
mov
mov
out
xor
adc
mov
cmpsl
stos
xchg
sub
mov
jne
stos
xor
sbb
aaa
inc
xor
leave
stc
imul
pop
mov
sti
cmc
adc
aad
jmp
mov
sar
and
rcrb
push
ja
inc
mov
cmpsl
sub
sbb
inc
push
gs
push
mov
jb
in
pop
enter
mov
cmpb
mov
push
and
das
gs
mov
cmpsl
mov
enter
out
ret
jl
and
and
lods
cmp
mov
jg
or
lahf
mov
pop
mov
xchg
hlt
cmp
push
lret
push
inc
pop
cmpsl
imul
decb
xlat
and
adcb
pop
push
pop
movsl
std
sbb
and
aaa
and
adc
sbbb
stos
jmp
pusha
or
mov
mov
popa
xchg
fildll
push
mov
out
push
push
pop
int
repz
popa
dec
imul
xchg
fstp
xchg
lret
xchg
lahf
leave
aad
out
pop
push
mov
cltd
data16
clc
lods
dec
popa
testl
imul
adc
mov
sub
lock
or
or
arpl
hlt
lds
mov
lods
cs
dec
scas
imul
xlat
pop
mov
popa
sub
orps
insl
push
or
push
mov
subb
out
push
cwtl
stos
fists
icebp
adc
jmp
mov
sbb
push
ret
sbb
adc
ljmp
jae
and
cmp
in
insl
enter
imul
dec
pop
fisttpll
js
repz
xlat
iret
sub
push
mov
repz
lods
dec
jnp
push
xchg
sbb
add
aad
clc
test
imul
and
adc
rcrl
das
loope
xor
fcmovnbe
sub
push
arpl
jecxz
mov
cwtl
in
fsts
adc
stos
cmp
mov
movsl
sub
pop
pop
sbb
adc
add
ficoml
add
aas
mov
out
lret
shrb
mov
sahf
xor
clc
mov
mov
xchg
cltd
or
sub
pop
repz
test
ja
je
enter
pop
shrl
jb
mov
lods
imul
rol
das
int
ljmp
imul
loopne
pop
and
nop
out
sbbl
arpl
fwait
xor
cmp
jle
mov
sahf
mov
sbb
push
out
add
cmpsl
push
negb
lds
xlat
add
or
adc
lret
les
push
fwait
xchg
cmpsl
sbb
xchg
aas
fcomps
test
ljmp
in
rcrl
mov
jns
outsl
xor
repz
mov
repz
xor
inc
sti
repz
jecxz
inc
repz
xor
push
adc
xor
jle
xchg
repz
inc
lret
repz
xlat
mov
adc
xor
subb
imul
imulb
xor
ljmp
imul
xor
xor
jmp
jns
outsl
xor
repz
mov
repz
xor
shll
jecxz
inc
repz
xor
push
adc
xor
xlat
out
adc
movsb
xor
inc
lret
repz
xlat
mov
stc
decl
sub
inc
jns
dec
leave
push
out
shrl
test
shrl
xor
push
sub
mov
jmp
leave
stos
test
arpl
xchg
mov
sbb
mov
stc
mov
pop
fbstp
iret
int
xlat
xchg
mov
xor
lahf
add
movsl
jmp
aad
cltd
add
out
jnp
adcl
xlat
test
or
ret
adc
lea
call
shl
mov
outsl
div
out
into
jno
or
cmp
mov
clc
sub
lea
add
xlat
test
jne
imul
hlt
jmp
push
dec
dec
xchg
push
das
xchg
fists
popa
jo
cmp
lock
xchg
pop
pop
jne
loope
ret
popa
out
into
or
fnstcw
imul
or
push
or
lret
arpl
pop
xchg
xchg
mov
cwtl
mov
xchg
loope
jae
shll
ja
inc
mov
in
xor
sub
mov
pop
and
das
push
clc
lret
mov
adc
jne
and
push
mov
cmp
cli
jbe
jmp
dec
xlat
xor
test
in
cli
les
mov
xor
rolb
add
out
in
mov
sarb
jl
sbb
jl
add
arpl
cltd
ss
add
mov
mov
xlat
popa
addl
insb
mov
repnz
and
xchg
adc
pop
rcl
ja
frstor
cmp
in
adcl
insb
xor
cmp
cmpsl
mov
mov
or
stos
lret
insl
js
outsl
rcl
fsts
push
dec
pop
imul
jae
pop
repnz
fadds
fnstcw
xor
mov
push
cmp
out
dec
inc
xchg
std
add
in
and
cwtl
jmp
fst
push
pusha
sub
mov
add
int
outsl
ja
les
push
rclb
in
adc
shl
cmp
inc
jmp
loope
xor
add
shl
mov
test
inc
pop
scas
rol
mov
dec
int3
popf
ret
loopne
fldcw
xchg
xor
adc
push
fimuls
loop
imul
pop
aad
pop
into
outsl
loope
dec
shlb
pop
sarl
in
lretw
fnsave
mov
mov
xchg
cmp
xor
rcrl
mov
push
clc
xchg
cmp
jbe
repz
xor
popl
sarb
sbbl
mov
mov
rcrl
div
idiv
outsl
fbld
ja
xchg
imul
jl
negl
mov
in
add
cmp
lret
jne
rcr
in
leave
call
mov
mov
hlt
iret
or
or
cwtl
jmp
cmc
popa
popf
lds
push
dec
fisubl
sbb
cmp
fisubrl
lods
sbb
in
jno
test
out
fdivrs
fsubrl
sarl
clc
cmp
xor
pop
adc
rcl
inc
loope
inc
jge
in
js
pop
ja
xchg
jp
sahf
popa
inc
adc
jge
and
cmp
xchg
cmpsl
int
or
pop
mov
cmp
and
lods
mov
int
or
jnp
inc
jg
loopne
and
sbb
xchg
xor
inc
mov
jp
adc
out
inc
inc
mull
inc
shl
loop
stc
popl
stos
subl
push
mov
mov
cld
mov
xor
popl
movsb
jg
stc
je
jg
test
aas
pop
das
mov
cltd
aas
fstpt
xchg
xor
addl
aas
sbb
lds
out
ja
cwtl
inc
jge
and
gs
arpl
iret
popa
push
inc
outsl
mov
adc
fs
and
jle
insb
xor
mov
sub
mulb
mov
mov
cs
pop
imul
mov
cwtl
das
stos
andl
mov
mov
inc
das
subb
imul
and
shlb
push
shrb
insl
cmc
imul
imul
push
das
inc
gs
arpl
mov
into
adc
in
sub
jo
data16
cwtl
xchg
das
mov
andl
sub
jle
sub
jo
push
into
jne
aas
xchg
cwtl
das
stos
andl
sub
jo
push
fsubl
ja
push
xchg
cwtl
das
stos
andl
sub
jo
push
shrb
imul
pop
andl
cwtl
xchg
das
fmuls
scas
lds
xchg
adc
imul
gs
jg
movsb
mov
in
pop
xchg
sub
mov
mov
in
pop
mov
push
pop
push
sbbl
jle
notl
push
mov
push
add
xchg
cwtl
jae
xorl
jne
push
ret
pop
das
xor
lret
inc
ja
xlat
mov
mov
cmc
jne
rcl
movsb
mov
cmpsb
outsl
pop
fcmovnbe
push
fistps
rcrl
xlat
pop
push
lret
pop
push
iret
pop
push
ret
pop
push
pop
push
xchg
pop
scas
dec
pop
add
push
arpl
enter
xchg
and
lahf
or
and
mov
pushf
sbb
xor
and
scas
or
cld
dec
lock
ss
ss
int
xchg
sub
dec
mov
mov
sub
jo
int
xchg
sub
mov
addr16
add
aad
sarl
cwtl
adc
movsb
mov
mov
adc
jp
gs
gs
dec
in
in
mov
movsb
cmc
mov
mov
dec
adc
mov
or
fstl
inc
xchg
in
movsb
pop
loopne
pop
jb
lods
rcrl
aas
mov
ret
pop
cmovae
jmp
fs
pop
ja
ja
shlb
aas
pop
xchg
push
push
ja
pop
and
cwtl
out
ss
ficoms
xchg
ja
outsl
and
pushf
mov
ja
mov
data16
pushf
pop
cmp
mov
inc
mov
pop
cwtl
jo
push
rcrb
gs
inc
gs
adc
repnz
adc
stos
sub
jg
push
arpl
push
xchg
clc
aad
adc
repz
mov
incl
jbe
add
jmp
mov
fs
outsb
inc
sub
inc
sbb
imul
insl
pop
inc
insl
icebp
inc
pop
inc
insl
cmc
insl
ja
push
arpl
xchg
es
mov
outsl
dec
and
es
mov
test
adc
sub
stos
cmp
mov
and
popf
dec
lods
inc
mov
stos
shrb
dec
arpl
mov
movsb
sub
insl
pop
inc
insl
mov
popa
out
push
mov
mov
sbb
movsb
in
jle
jns
mov
fsts
push
repz
cwtl
shlb
lahf
dec
loope
or
mov
mov
mov
adc
adc
les
arpl
and
push
aam
cmpsb
outsl
push
daa
je
arpl
pop
jecxz
gs
scas
xchg
fstl
jne
fsubrs
into
adc
subl
mov
outsl
flds
and
and
sbb
push
mov
aam
repz
sbb
or
adc
xchg
pop
adc
mov
push
iret
inc
cwtl
movsl
push
out
or
pop
stos
inc
adc
int
repz
clc
inc
add
fbld
mov
xchg
jne
dec
pop
mov
dec
imul
add
jg
mov
pop
ret
ja
dec
outsl
fwait
imul
lcall
cwtl
dec
push
daa
mov
addr16
mov
rcrb
sbb
mov
inc
jnp
pop
inc
imul
xchg
push
pop
cmpsb
je
fisttpll
das
adc
xchg
sarl
mov
mov
jno
mul
push
push
in
lret
jne
dec
daa
add
das
test
mov
dec
fbld
push
jle
or
sub
push
cmp
int
xchg
jae
cmpsb
inc
jnp
inc
imul
psllw
mov
add
inc
aas
adc
xchg
push
ja
mov
push
fisttpl
int
jg
mull
xchg
ja
push
push
call
ja
movsl
jg
and
cmp
mov
bswap
ja
popa
adcb
jae
aaa
ss
pop
fists
out
xchg
sti
pop
push
hlt
jo
xchg
mov
fildl
jg
cmp
mov
dec
scas
imul
dec
cmp
cmpsl
pop
xchg
cs
xorl
ljmp
mov
scas
xchg
xchg
xchg
insl
dec
gs
outsl
adc
lret
xchg
out
cmp
ds
sti
fisubs
test
stos
dec
int
cltd
push
leave
popf
jae
dec
jne
shlb
adc
gs
cwtl
or
gs
jg
cltd
pop
sub
mov
call
pop
loopne
mov
enter
daa
int
mov
gs
jge
jno
inc
daa
out
mov
ja
outsb
rol
dec
add
push
das
fcmovnu
push
xor
xor
jnp
add
mov
fistpl
test
or
iret
inc
dec
ja
mov
orl
push
lcall
pushf
sub
pop
jge
add
shlb
and
imul
push
dec
pop
int
imul
scas
dec
jae
xor
cs
ja
iret
inc
cmc
dec
inc
cld
dec
popf
sti
cmp
clc
mov
xor
pop
insl
xchg
xor
sub
sub
mov
xor
lahf
fcomps
mov
scas
cmp
movsl
data16
arpl
dec
imul
das
pop
int
filds
mov
outsl
xchg
aaa
ja
aam
arpl
aaa
mov
xchg
xlat
sti
xor
lea
or
mov
pop
jmp
cs
jae
xlat
sbb
pop
or
addr16
imul
std
mov
lock
push
xchg
add
outsl
inc
js
out
xchg
mov
mov
test
xchg
out
push
mov
sub
xchg
insl
ss
dec
or
lods
inc
in
lret
arpl
jb
outsl
fildll
mov
lods
pop
jbe
and
fwait
outsl
jl
pop
push
leave
ja
outsl
rorb
push
lahf
xlat
xor
es
arpl
mov
sub
add
pop
int
xlat
ret
movsl
imul
push
sub
cmpsl
sbb
out
fisttpll
ror
dec
pop
mov
daa
mov
fsubrs
dec
imul
or
inc
and
mov
jecxz
das
fnstsw
add
call
scas
movsb
mov
ja
lock
scas
in
fwait
pop
jle
dec
sti
dec
ja
push
dec
jae
push
mov
inc
dec
push
and
je
jne
xchg
xor
imul
cmc
push
pop
fcmove
push
inc
jg
jne
adc
xchg
setl
push
mov
adc
movsl
add
push
sbb
fdivs
cwtl
shlb
cmp
push
in
xchg
icebp
in
add
xchg
outsl
ja
js
jne
add
dec
mov
and
sbb
xor
icebp
push
inc
les
adc
xchg
call
ja
pop
xchg
arpl
fwait
push
loope
dec
xchg
dec
and
loop
adc
dec
push
gs
mul
insb
pushw
inc
out
clc
pop
ljmp
sub
nop
outsl
fwait
aas
mov
int
mov
jae
call
mov
adc
xlat
int
and
clc
imul
adc
scas
pop
add
bound
stos
movsb
mov
das
pop
cmp
push
daa
xor
scas
jbe
filds
repnz
cmp
pop
xor
mov
mov
cmp
scas
mov
xchg
lods
popf
pop
and
out
fsubs
aas
or
cmc
ja
dec
in
ja
popa
sti
lods
dec
imul
sub
xchg
add
shl
mov
mov
push
cmp
movl
xlat
cmpsb
add
push
xchg
jne
xchg
ja
jae
jmp
add
int3
sub
push
or
fwait
fs
mov
pop
jg
mov
mul
mov
jecxz
shlb
sahf
in
jbe
cwtl
loope
xchg
push
push
sbb
jg
iret
add
dec
ja
popf
out
jnp
mov
jg
mov
or
cwtl
sub
adc
mov
call
and
push
adc
shlb
dec
inc
in
jmp
outsb
outsl
imul
push
shl
cmc
int3
loopne
xchg
jge
pop
les
ja
mov
and
push
test
ret
cmp
xlat
jae
cmp
jo
mov
xor
int3
push
inc
scas
mov
add
shlb
repz
movsl
lret
lods
rcrb
fstpt
shlb
mov
rol
leave
enter
nop
movsl
mov
es
enter
aaa
pusha
inc
ja
mov
xchg
fwait
out
jo
std
inc
jae
bound
jo
std
inc
jae
loopne
xchg
aad
fcmovne
fdivl
jnp
pop
mov
das
outsl
sbb
mov
outsl
push
in
fsubr
inc
outsl
add
fwait
or
fsubrl
ffreep
adc
inc
call
sub
fcoms
movsl
iret
rolb
fsubrl
sbb
loopne
imul
sub
pusha
push
mov
fdivrs
dec
imul
scas
daa
mov
pop
iret
mov
mov
outsl
sub
fs
das
outsl
sbb
sub
lret
push
rorl
jmp
cmp
sub
jb
into
insb
pusha
xchg
and
or
mov
or
dec
mov
aaa
jne
mov
imul
enter
stos
mov
daa
jecxz
scas
std
outsl
test
push
mov
mov
subl
in
cmc
adc
jne
rcll
jnp
push
scas
cld
xorl
mov
jl
mov
arpl
insl
divl
sbbl
adc
ret
adc
mov
mov
clc
jne
lea
pusha
ja
rolb
leave
adc
cmpb
cld
lret
pop
adc
sub
or
setae
sbb
shl
jo
subl
stc
fsubrl
push
mov
repz
or
dec
aam
push
inc
shrb
or
push
adc
je
movsb
mov
inc
pop
xor
push
add
dec
mov
pop
fnstcw
and
divl
fmull
sub
lods
repz
and
insb
je
imul
add
out
lods
ss
shlb
arpl
mov
je
mov
out
into
insl
xor
fs
mov
mov
jae
adc
clc
mov
push
and
dec
jl
clc
mov
sbb
mov
cmc
popa
dec
inc
mov
mov
mov
outsl
sub
jecxz
pop
and
fbld
xlat
sub
outsb
xor
cmp
sub
mov
xchg
ret
movsl
pop
arpl
sbb
imul
imul
cmc
push
imul
movsb
stos
push
pushf
imul
jmp
ja
dec
mov
ja
mov
mov
mov
pop
push
adc
push
not
cltd
imul
sar
repnz
jno
ja
test
sbb
pop
ret
call
rcrl
das
imul
pusha
mov
xlat
mov
add
mov
cwtl
fcmovnb
out
divl
mov
addr16
adc
mov
stos
jnp
push
out
movsl
les
aad
push
cltd
das
addr16
dec
repz
jnp
xchg
sub
jg
in
fs
fdivl
push
pop
repz
jnp
cmpb
xchg
mov
xchg
jmp
mov
loopne
xchg
add
xchg
hlt
jl
add
add
test
mov
iret
outsl
mov
insl
cmp
pop
andl
jae
rolb
fiadds
and
inc
rcrl
insl
push
jg
decl
xor
frstor
adc
pop
mov
jg
sub
cmc
icebp
mov
xlat
mov
dec
loope
fdivrs
sub
sub
push
xor
mov
fwait
loop
pop
adc
lods
cltd
xor
fimuls
xchg
ficoms
jnp
mov
sub
xor
rolb
mov
das
push
jg
arpl
adc
xor
push
imul
pop
push
clc
int
mov
mov
mov
das
jae
inc
mov
mov
ja
cmp
insb
sti
cmp
outsb
dec
pop
popa
shlb
dec
and
loopne
lock
aaa
mov
loopne
in
xchg
push
mov
sub
fildl
mov
ret
repz
jg
fwait
pop
xor
std
push
lret
testl
scas
loopne
jae
sub
repnz
loop
xchg
jne
loopne
ja
lock
mov
sbb
pop
mov
mov
xor
pop
jae
enter
sub
std
dec
xchg
loop
fwait
mov
and
pop
xor
sti
sub
lret
xchg
imul
pop
outsl
mov
adc
adc
pop
dec
adc
int
pop
pop
nop
lods
ss
jg
push
add
fwait
ds
fs
outsl
test
imul
fildll
push
out
pushf
mov
pop
mov
mov
mov
fwait
pop
mov
jbe
imul
jne
adc
scas
mov
cmp
mov
jbe
arpl
mov
mov
xchg
pusha
pushf
pop
enter
ds
enter
mov
neg
jp
jae
inc
pop
das
sarb
jg
out
sub
mov
fwait
push
insb
jne
out
push
cld
push
add
adc
aas
xor
clc
mov
popf
and
clc
int
mov
sbb
subb
js
lret
stc
loopne
mov
mulb
mov
xchg
mov
imul
addr16
jo
mov
xchg
mov
jne
fldt
push
xor
incl
cs
xchg
jl
jne
and
push
jecxz
in
push
sbb
push
mov
loopne
arpl
xor
and
mov
sbb
or
fwait
into
hlt
and
xchg
arpl
mov
xchg
leave
cmpsl
jb
cmp
ljmp
fadd
insl
inc
hlt
inc
xchg
in
lds
std
pop
fs
repz
fistps
jne
mov
xchg
outsl
je
testb
or
lahf
inc
aaa
dec
pop
cmp
xchg
outsl
xchg
call
dec
mov
arpl
lds
mov
sbb
cmc
js
pop
fcomps
add
lods
sbb
shlb
sbb
cmpl
lret
and
lret
mov
imul
test
adc
jmp
movsl
pop
repz
cld
xlat
inc
sti
stos
mov
enter
movsb
mov
daa
stos
fadds
daa
add
mov
ds
or
hlt
mov
je
hlt
mov
decl
or
roll
std
jmp
movsl
add
xchg
add
or
or
popa
std
cmp
mov
xorl
xlat
pop
cwtl
test
stos
inc
mov
cmpsl
mov
xlat
push
inc
outsl
xchg
ds
fists
js
outsl
jmp
dec
rcll
xlat
and
jnp
cmp
outsl
adc
sti
es
xchg
imul
out
mov
nop
jecxz
leave
iret
out
pop
jne
pop
xchg
dec
repz
in
int
ja
outsl
negl
or
imul
stos
cmp
mov
outsl
fwait
ja
jno
out
fucomip
inc
imul
push
mov
xchg
mov
cmpsl
dec
xor
jae
js
or
and
shl
jbe
iret
arpl
pop
inc
mov
mov
enter
loopne
pop
pop
add
clc
mov
adc
push
mov
aam
xchg
fwait
das
ja
mov
push
mov
adcb
ja
mov
sbb
and
es
mov
shl
int
and
jmp
pop
push
mov
ja
push
add
adc
lds
xchg
outsl
sub
lea
mov
pop
fwait
scas
test
leave
lret
cs
ja
flds
movsbw
mov
pushf
movb
lea
jmp
pushf
cmp
bt
add
clc
stc
clc
mov
mov
test
jmp
pop
sbb
add
rolb
sbb
pop
jg
jae
inc
add
arpl
xchg
lcall
mov
xchg
jae
mov
pop
push
stos
mov
pop
or
lret
test
pop
test
sti
and
sub
adc
stos
daa
and
lahf
lcall
inc
aaa
scas
xor
sbb
cmp
sub
xlat
arpl
and
scas
and
cmp
daa
pop
ret
jle
jp
bound
push
jbe
fsubs
lret
mov
inc
mov
jae
jne
std
subl
insl
outsl
inc
sbb
cwtl
push
int3
xor
mov
fists
mov
xchg
test
mov
iret
mov
xor
cmpsb
inc
mov
stos
int
mov
lock
in
test
and
fdivs
mov
xor
sbb
push
xor
lods
and
setg
pushf
inc
pusha
shl
xor
xchg
aam
mov
add
sar
clc
mov
clc
mov
ror
mov
shl
mov
cmc
pusha
sub
jmp
mov
lea
rol
sar
mov
rol
test
mov
bt
xor
cmp
repnz
pusha
mov
pusha
pushf
lea
jne
btr
shl
stc
xor
mov
shrd
adc
sub
bt
movzbl
movsbl
mov
cmp
clc
sub
clc
push
pushf
mov
pushl
popl
movb
bt
cmp
jmp
lahf
mov
test
lds
movsb
mov
sbb
sbb
orl
xor
push
mov
push
and
insl
lahf
movsb
fidivs
sahf
and
xor
pop
xor
xor
sub
or
lea
pop
mov
dec
xchg
mov
xchg
mov
pop
or
andb
inc
pusha
test
push
add
push
mov
push
fsts
jl
add
mov
fs
push
es
nop
leave
mov
inc
movsb
loopne
sub
std
or
fld
lds
insl
and
rcl
mov
cld
repnz
roll
aaa
xchg
and
aas
lea
je
pushf
inc
pushl
test
cmp
call
dec
outsb
ret
push
cld
mov
iret
add
aas
jg
ret
ja
andl
inc
pop
ja
add
xchg
rcr
jp
aaa
dec
data16
push
lods
in
es
test
ja
iret
adc
adc
sbb
jge
push
cmpsb
sub
popa
outsl
jecxz
fcmovnbe
dec
sub
addr16
cmp
xorb
cltd
mov
cwtl
fsubs
aam
ds
mov
in
int
aaa
rcrl
inc
les
clc
or
jecxz
andl
lcall
ljmp
adc
pop
shl
stos
push
enter
imull
aas
popl
sbb
das
push
ficoms
push
inc
rolb
popf
push
mov
jo
rep
lds
push
xor
push
mov
ljmp
mov
xor
push
ficompl
pushf
sub
lods
test
shrb
cmc
aad
cmp
dec
int
fldl
ljmp
addb
aam
and
pop
push
xor
dec
push
aaa
out
mov
mov
or
sub
mov
data16
outsl
aaa
push
lods
pop
mov
add
shl
xchg
jne
dec
pop
test
xchg
movsl
cmp
xchg
pop
repnz
adc
sbb
mov
mov
pop
or
sub
in
sbb
std
pop
xchg
cmpsb
dec
inc
xchg
flds
xor
mov
inc
enter
sub
sub
ljmp
sub
pop
pop
imul
xor
mov
jb
out
into
notb
ss
jle
cwtl
and
xchg
fstl
int
bound
imul
cwtl
sbb
mov
sub
sub
dec
and
push
lret
dec
stc
xor
jbe
mov
lds
inc
mov
xchg
sarl
outsl
sbb
dec
jge
shr
adc
sbbl
xchg
jne
aam
cmp
in
adc
movsl
enter
fbstp
jnp
mov
add
ret
scas
imull
call
enter
cmpsl
ljmp
dec
and
xchg
repnz
pop
jne
push
cmpl
pandn
xor
addl
lea
cvtps2pd
pop
fptan
sbb
fs
jl
push
and
pusha
add
pushf
mov
lock
xor
xchg
aaa
pushf
push
pusha
movl
pusha
lea
jmp
sbb
pop
mov
into
orl
fsts
push
cmp
or
cmp
xor
data16
addl
into
cmp
adc
mov
adc
aas
mov
mov
and
adcl
mov
mov
repz
setg
fcmovnu
mov
jbe
js
mov
cld
push
dec
adc
xor
lret
and
and
inc
fimull
add
fildl
inc
jmp
jns
andl
ret
mov
data16
hlt
jno
std
xor
push
sbbl
call
mov
adc
lock
and
ror
cld
pop
icebp
cmp
outsb
out
push
mov
sarb
add
mov
out
loop
dec
mov
push
js
imul
lods
into
jnp
fs
mov
aaa
out
imul
xor
imulb
pushf
inc
test
pushf
test
xor
call
push
movl
push
lea
jmp
outsb
add
or
sbb
fdiv
xor
sub
insb
push
outsl
jecxz
movsb
jmp
stos
lds
fstpt
push
lahf
mov
or
adc
sub
and
mov
add
add
push
add
mov
add
add
add
add
add
add
add
test
cmc
test
cmc
neg
bt
cmp
pushl
xor
movb
inc
cmc
bt
cmp
pushf
lea
lahf
cwtl
jmp
test
push
call
stc
pusha
clc
or
call
adc
sbb
daa
xchg
mov
jns
insl
dec
in
aad
out
out
push
fildll
cmp
les
xchg
push
mov
in
int
movsb
in
insb
pop
add
xor
andb
ljmp
jle
bound
and
pop
jecxz
rorb
add
aas
jl
lds
and
and
dec
jno
sub
push
negl
push
insb
les
fcmove
jbe
or
in
rcll
in
jge
pop
in
inc
in
push
mov
repz
test
lds
push
leave
imul
mov
pushl
movl
pushf
movl
pushf
pushf
lea
jmp
jmp
int3
faddl
inc
pop
pop
mov
hlt
nop
pop
or
hlt
xchg
pop
mov
aaa
push
stc
cltd
sbb
std
les
push
inc
jbe
in
adc
in
popa
cli
mov
into
fisttps
js
xchg
jmp
sarl
lahf
jg
out
xor
arpl
dec
test
push
jmp
push
or
or
push
cmpsb
out
xchg
push
jbe
loop
add
adc
out
stos
cmpsl
call
jge
test
sbb
ror
jp
jecxz
mov
cs
pop
cmpl
sub
js
cmp
cmp
pop
jge
inc
stc
pop
mov
and
insl
xlat
repnz
fsts
in
rorl
cmp
cmovns
push
push
inc
ret
into
mov
pushf
cmpsb
xor
dec
sbb
ljmp
sub
jmp
mov
fwait
xchg
and
xchg
lea
ja
call
cmp
jmp
pushf
pusha
pushf
pushf
movl
call
add
dec
outsl
popa
fs
imul
add
jae
in
ror
cld
adc
insb
cwtl
fdivl
mov
xchg
mov
and
pusha
pop
pop
sbb
xchg
mov
loop
cli
lock
xor
or
fs
mov
xchg
dec
lods
subl
lods
popf
mov
and
pop
pushf
lea
jb
push
push
pushf
pushf
pushl
movl
pushl
movw
pusha
pushf
lea
jmp
movl
lea
js
pushf
movl
pushf
lea
jmp
add
add
cwtl
btr
rcr
push
pushf
lea
shrd
sub
aam
shl
call
push
lea
ja
call
mov
mov
pushl
ret
jmp
repz
je
pushf
pushf
movl
mov
jmp
dec
bt
shl
pushf
lods
pushl
test
jmp
out
mov
mov
pusha
xchg
xor
arpl
pop
xor
mov
das
aaa
fldt
loope
fs
mov
inc
mov
pop
aas
loop
fstpl
mov
mov
sub
push
xchg
ret
and
dec
test
xlat
test
push
dec
jle
loop
shl
int
mov
loope
push
outsb
xchg
xor
outsl
fcompl
push
push
enter
stos
sub
add
fidivs
push
xor
out
xchg
inc
fists
xlat
pop
das
and
lock
sbb
fs
jae
push
pushf
push
pushl
lea
jmp
sub
xor
inc
mov
adc
aas
fistl
das
add
push
testl
pusha
push
xchg
das
dec
add
jmp
in
xor
push
outsl
cwtl
es
push
fdivrs
es
pop
flds
data16
andl
or
or
insb
shl
idivb
icebp
adc
shl
in
or
lock
sub
int3
cmp
jmp
cwtl
cs
rorb
push
sub
jo
je
in
inc
dec
push
test
xor
shr
sbb
out
or
decl
gs
std
cmc
rcll
shr
pop
add
jmp
pusha
cmc
cmpb
jmp
jmp
andl
adc
xacquire
stos
inc
jp
jb
cli
pusha
adc
dec
jle
mov
arpl
xchg
push
pop
fwait
pop
lea
mov
mov
mov
leave
xchg
nop
inc
mov
xchg
rcrb
lods
into
in
cmpsb
or
adc
fstl
stos
xchg
cmpsb
mov
cmpsb
cmp
push
push
lea
xchg
inc
jecxz
out
sub
cmp
xor
mull
or
stos
popf
jmp
arpl
add
xor
fbld
push
movl
call
jmp
call
mov
bnd
cmpsl
jecxz
repz
xchg
fistpl
sbb
fwait
dec
jmp
aam
cmp
loop
repz
out
pop
lcall
jg
jae
dec
dec
daa
jg
cmp
jbe
lock
fnsave
add
push
xchg
pop
sub
aas
imul
mov
and
bt
xor
cld
pushw
popfw
push
movl
inc
jmp
call
mov
int3
xor
stos
mov
xchg
leave
add
or
xchg
jb
cmp
dec
mov
adc
dec
cmp
adc
dec
lods
ljmp
sahf
bound
lahf
mov
addr16
mov
and
cmp
scas
pop
enter
fwait
xchg
movb
out
cmp
xchg
and
or
xchg
sbb
adc
aas
pop
in
mov
sarl
pop
iret
scas
mov
mov
loopne
xchg
push
mov
mov
mov
xchg
fcomip
adc
and
xlat
dec
cmp
scas
push
and
xchg
pusha
pop
pusha
cmp
sbb
jecxz
jnp
xlat
pop
pop
mov
xor
mov
mov
and
pushl
lea
jmp
jmp
fistps
clc
pop
lcall
sbb
jmp
jge
jmp
dec
pop
dec
xchg
cmp
xor
outsl
dec
add
sarb
negb
outsb
ja
add
stos
mov
icebp
in
sub
scas
push
lret
pop
xor
aad
cmp
loop
xor
negb
cmpsb
lcall
int
push
int
bound
push
mov
sahf
sbb
xchg
lret
lock
xchg
enter
and
jno
insl
jns
jo
mov
cltd
out
repnz
imul
and
bound
das
sbb
adc
sub
xor
int3
add
lods
mov
faddl
mov
inc
dec
xchg
add
mov
and
addr16
push
in
adc
mov
mov
mov
lds
mov
insb
test
int
test
mov
in
out
cs
dec
push
imull
dec
fiadds
and
gs
dec
push
cmp
xor
dec
data16
into
in
fisubrs
inc
lret
dec
mov
sub
lret
push
cmc
test
mov
aad
or
jb
test
xchg
cmc
push
xchg
loopne
xchg
inc
testl
sbb
cmp
push
push
shl
xchg
mov
xchg
mov
inc
mov
sti
sbb
mov
out
mov
and
mov
into
sub
ret
inc
sub
into
icebp
repz
sbb
shll
push
push
xor
pop
loop
xor
dec
bound
sub
jle
sbb
pop
outsl
cltd
popa
mov
xor
data16
add
inc
gs
outsl
fs
gs
imul
add
movsb
jmp
popf
rdtsc
nop
push
mov
pushf
call
neg
mov
stc
call
fimuls
lahf
jecxz
repnz
xor
pop
push
xchg
aaa
pop
ret
jg
addr16
pop
es
jo,pn
xor
adc
sub
mov
lods
out
lock
out
or
mov
mov
in
in
mov
and
jl
ret
je
call
call
and
inc
xchg
scas
pop
push
push
movsb
fisubs
mov
loope
repz
cmc
ljmp
mov
jmp
jo
pusha
dec
pusha
push
xor
xchg
insl
dec
sub
loopne
inc
mov
pop
in
iret
adc
lahf
mov
jns
aad
or
mov
add
rorb
popa
xor
mov
jno
sub
fwait
xor
mov
popf
lds
push
cmpsl
mov
sti
mov
cmp
inc
movsb
mov
fisttps
push
scas
mov
in
mov
pop
ud0
insb
nop
mov
and
fmul
mov
push
xchg
xchg
ret
xchg
aaa
mov
loop
repnz
hlt
xchg
dec
xor
cmp
pop
sbbl
lret
sar
das
xlat
cmpsl
xlat
repz
imul
push
lcall
adc
push
mov
lret
xor
push
jae
jae
test
cltd
sbb
cmp
cmp
and
pop
or
iret
push
cmpsb
push
sub
icebp
shll
or
shlb
mov
sbbb
call
jnp
jae
or
dec
mov
in
and
imul
fisubl
mov
pop
iret
pop
cmpsl
aaa
or
jnp
mov
pushf
mov
jge
lahf
test
in
mov
int
sub
mov
test
jnp
xlat
lock
add
movsl
aas
jb
and
std
cmpsb
xlat
pusha
sub
cmp
push
mov
repnz
xor
repz
pop
daa
dec
add
test
in
mov
shlb
dec
stos
jne
movl
xchg
into
out
sahf
sbb
sub
inc
jecxz
daa
loope
imul
dec
mov
out
mov
dec
movsb
dec
sbb
jle
pop
mov
ret
pop
pop
hlt
jp
push
out
daa
fistpll
and
inc
mov
inc
cmpsl
inc
daa
lcall
out
cmp
adc
pop
pop
pop
repz
and
mov
push
fmull
fnstcw
pop
xor
xor
xchg
mov
push
clc
cmp
pushf
call
icebp
xchg
inc
push
and
sbb
lcall
arpl
push
daa
scas
jg
and
push
jmp
mov
mov
jb
mov
in
ljmp
xor
inc
fisubrs
shl
push
pop
fdivs
pop
hlt
in
mov
stos
mov
cmp
ret
cmp
pop
daa
mov
int3
movsb
bnd
xlat
test
lods
addr16
mov
inc
iret
xchg
or
aam
xor
cld
sub
mov
xor
ffreep
and
dec
ret
setno
gs
pop
call
pop
scas
jg
jecxz
dec
mov
xchg
pop
and
push
pop
add
pushf
movsb
test
push
ds
scas
adc
adc
and
in
mov
je
xchg
cmp
test
inc
cli
mov
rcrb
adc
or
insb
cli
push
mov
and
jnp
mov
pop
sbb
adc
mov
out
in
repz
scas
jae
orl
xchg
imul
pop
push
inc
cld
enter
es
sbb
fwait
push
push
mov
mov
mov
lea
je
cmc
add
stc
bt
cmp
pusha
lea
jb
bt
pusha
call
imul
inc
loopne
addr16
mov
add
and
dec
push
imul
pop
push
clc
jnp
fcmovb
nop
xchg
and
dec
lret
jmp
lret
jmp
jp
imul
ss
adc
jb
dec
fimuls
sub
rcr
xchg
sub
jnp
hlt
xor
je
lods
aam
subb
fnsave
push
jmp
jo
mov
cmp
push
in
push
in
int
jmp
insb
dec
push
aad
or
inc
pop
jge
lcall
push
arpl
incb
lret
ja
popa
scas
and
jno
sti
pop
mov
sti
jae
arpl
sbb
jae
push
or
mov
lret
into
jno
aaa
xor
imul
adc
and
mov
movl
and
call
pushf
push
bt
sub
pushl
pushf
lea
jne
pusha
push
pusha
call
movl
pusha
pushf
pushf
lea
jmp
push
call
not
inc
jmp
movl
pusha
pushf
lea
jmp
push
pushf
push
mov
pusha
push
pusha
pushf
lea
jmp
adc
lds
mov
test
mov
and
lds
test
xchg
scas
jmp
jno
mov
inc
push
out
lods
inc
es
pop
cmp
aad
gs
test
jmp
jb
sub
stos
push
cld
roll
cmp
leave
xchg
mov
mov
stos
xlat
sub
aaa
dec
out
xor
xchg
jmp
mov
jl
sbb
call
mov
das
test
sar
inc
ffree
fildll
inc
cmp
inc
and
add
rol
jecxz
ret
imul
lds
xlat
pop
aaa
mov
fisubs
fwait
push
cmpsl
loope
std
movsl
ss
mov
and
xchg
xchg
jno
or
ja
sbb
sbb
cli
add
nop
cwtl
adc
decl
mov
pop
inc
jns
push
dec
std
icebp
sub
int
adc
inc
bound
pop
stos
subl
cmp
pop
ret
imul
loope
iret
ffreep
subl
popf
adc
adc
movhps
sbbl
pop
cli
test
out
pop
imul
pop
mov
mov
lret
testl
xchg
add
or
bound
add
mov
dec
aas
cli
imul
xchg
push
add
xor
push
rolb
call
jne
sbb
pop
ret
mov
mov
inc
call
gs
pop
aas
or
mov
ja
arpl
test
gs
mov
mov
dec
mov
test
jbe
movsl
jl
loop
push
pop
xlat
jno
mov
cmp
lahf
push
mov
cmp
loopne
mov
js
popa
enter
jnp
sbb
test
sub
adc
push
sbbb
or
hlt
sub
int
xor
or
inc
jmp
xlat
je
js
andl
cmpsb
mov
and
or
pop
call
dec
add
mov
inc
push
or
xor
add
js
push
dec
xchg
push
das
adc
jg
mov
daa
cwtl
xlat
mov
dec
ss
pop
test
mov
adc
daa
gs
mov
and
xchg
call
dec
adc
inc
pop
pop
dec
pop
out
xchg
daa
nop
adc
scas
xchg
adc
mov
adc
lock
jne
push
push
pop
lock
orl
jbe
adc
xchg
iret
sub
jae
pop
decl
pop
aam
sub
aaa
clc
push
notb
mov
or
or
and
xchg
andb
inc
clc
lea
inc
and
inc
xchg
scas
jp
notl
and
or
mov
loopne
adc
iret
dec
pusha
xchg
sub
mov
addr16
iret
xor
fiadds
ja
push
aaa
push
jne
fnstsw
mov
adc
out
and
je
adc
jo
pop
xor
and
inc
imul
pop
sub
adc
dec
pop
cmp
mov
sysexit
xchg
and
and
rcr
rorl
daa
adc
add
inc
push
outsl
iret
or
pop
fisttpl
and
dec
xor
xchg
iret
and
or
daa
shlb
fbstp
lds
cmpsl
popa
dec
push
mov
xor
out
lahf
cmp
and
loopne
xchg
nop
mov
fsubrs
scas
mov
cmp
xchg
dec
cwtl
adc
jo
loop
aad
cmp
sbbl
out
aaa
insl
sbb
pop
in
sub
or
ja
popa
imul
mov
push
cwtl
xor
aaa
scas
dec
jmp
lock
push
das
fs
pop
sub
jbe
adc
shlb
adc
push
shlb
aaa
pop
and
xchg
and
daa
out
sub
movsb
dec
add
lahf
es
negl
fcoms
push
subl
movsl
sub
sbb
sbb
xor
sbb
and
inc
or
clc
js
xchg
test
or
shlb
lahf
mov
xor
push
iret
cmp
lret
xchg
inc
jg
adc
pushf
mov
xor
shrb
mov
fsubs
out
push
ja
cmp
cltd
pop
popa
ss
or
and
inc
add
ljmp
leave
xchg
aaa
test
pop
adc
and
push
cli
dec
xchg
pop
aas
in
pop
ljmp
pop
rolb
addl
and
aaa
inc
inc
pop
popf
bound
or
out
test
pop
dec
xchg
aas
in
or
sbb
adc
ja
pop
rorb
inc
dec
scas
pop
add
lock
push
clc
dec
enter
xorb
xor
add
adc
pop
mov
and
lea
push
sub
pusha
rcrl
out
fisttps
scas
add
inc
lret
daa
xor
and
test
aam
loopne
xor
sbb
sub
cmp
cmp
mov
sbb
out
daa
ja
pop
mov
xchg
es
sub
dec
mov
add
inc
jle
pop
xchg
aaa
cltd
xchg
xchg
sub
push
jmp
add
test
adc
aas
call
xor
daa
pop
mov
daa
inc
and
xor
addr16
pop
mov
inc
mov
jb
add
xor
daa
andb
addr16
dec
sarl
outsl
subl
outsl
xorb
dec
xor
xor
nop
xchg
loope
aas
mov
enter
push
pop
pop
lahf
leave
pop
call
dec
mov
clc
jecxz
mov
gs
push
pop
das
push
jmp
pop
iret
clc
xor
adc
out
lods
ja
lea
cmp
ret
call
jo
mull
pop
mov
sub
daa
pop
add
add
adc
mov
enter
ja
lahf
inc
out
out
cmpsl
mov
dec
sbb
sqrtps
out
add
leave
int
dec
inc
out
mov
popa
out
insb
xorl
lock
jmp
adc
push
cmpsl
test
getsec
out
js
and
scas
cmp
xor
adc
cwtl
es
xchg
je
lret
loopne
ffreep
lea
jg
nop
gs
adc
testl
xchg
xor
inc
lahf
cltd
movsb
add
daa
daa
shlb
or
out
js
daa
pop
rcr
daa
scas
sbb
iret
es
adcb
pop
fdivs
xchg
xchg
mov
sbb
and
js
into
xor
das
aaa
inc
shlb
orl
js
ja
sbb
das
inc
in
adcb
lea
pop
pcmpeqd
aaa
pusha
pop
xor
test
xchg
inc
int3
xchg
jo
ja
rclb
clc
ret
mov
les
lcall
pop
and
rcrb
pop
adc
es
aas
aaa
sbb
nop
lods
and
shrb
jne
aas
jo
mov
orb
aas
sbb
mov
ror
inc
ja
fcoms
mov
inc
outsl
or
lcall
pushf
adc
pop
lahf
ja
xor
pop
cmpsl
aas
jl
addr16
adc
ja
fwait
push
ja
add
ja
ja
dec
daa
fisubl
and
xchg
sti
xlat
push
xor
inc
scas
movb
push
adcb
dec
mov
daa
add
loopne
pop
and
adc
mov
sbb
xchg
jae
icebp
pop
pop
mov
mov
nop
iret
scas
xchg
cmp
inc
outsl
xchg
lsl
enter
inc
xor
clc
popa
aaa
inc
arpl
adc
loop
fisubl
movsb
and
add
lret
jge
mov
shlb
subb
movsl
and
loopne
inc
das
out
xchg
adc
addb
and
sbb
and
mov
ja
dec
mov
pushf
and
in
sbb
sbb
pop
int
fwait
pushf
sbb
ss
roll
jl
lret
mov
movsl
mov
mov
ja
ja
ja
ja
test
mov
fwait
outsl
or
inc
lahf
jl
pop
or
xor
xchg
cmp
mov
pop
out
dec
xor
mov
pusha
pop
pusha
popf
cmpsl
pop
mull
outsl
xchg
call
push
int3
test
mov
lcall
cmp
add
pusha
and
cmpsl
lahf
xor
out
mov
shrb
iret
call
xlat
ret
cwtl
nop
push
pop
push
inc
addb
dec
rclb
cmp
inc
inc
js
out
xchg
cmp
lret
addr16
leave
mov
cwtl
rcll
and
movsl
ret
enter
cmpsb
cmp
pop
adc
xor
cmp
test
cmc
adc
mov
jmp
cmpsl
movsb
fsubrs
movsb
mov
ss
mov
ss
and
and
nop
aas
aad
nop
xor
cmp
mov
and
mov
mov
push
imull
clc
mov
js
sub
and
arpl
aad
xchg
pop
jg
push
mov
or
in
mov
orb
adc
pop
jae
sarb
mov
cmp
clc
fldcw
adcb
xchg
or
imul
xchg
jecxz
sbb
and
mov
aas
adc
loop
test
jg
pop
pop
mov
loope
loop
daa
jl
push
xchg
shlb
ja
adc
ret
pushl
or
and
pop
push
and
out
nop
mov
dec
sahf
rcr
lahf
pop
daa
add
nop
lea
aas
push
testb
mov
and
add
push
pop
dec
cmpsl
push
movsl
pop
xchg
lea
add
cmc
rorb
adc
outsl
sub
out
fwait
sbb
daa
es
cmc
mov
lahf
mov
push
mov
and
pop
das
shrl
daa
cmp
mov
bnd
adc
cwtl
fists
cmpl
jmp
les
xchg
xor
addr16
out
ss
cmp
inc
out
es
clc
test
add
into
pop
adc
adc
sub
scas
pop
push
dec
mov
and
js
push
jo
inc
pop
mov
test
cwtl
ss
nop
mov
mov
push
fldt
add
mov
mov
xlat
ret
and
xchg
nop
sbb
cld
inc
xchg
gs
pop
js
or
into
pop
aam
push
imul
or
mov
mov
std
pop
mov
inc
mov
jno
inc
xlat
ret
sbb
movsb
cmp
sbbl
rcr
and
push
das
pop
adc
jae
push
ss
enter
or
cmc
sbbl
movsl
xchg
cmpsb
xchg
mov
test
jmp
jo
inc
das
cmp
aas
pop
and
addl
lahf
push
pusha
push
jg
movl
and
pop
jbe
inc
divl
gs
popa
scas
sub
cmpsl
std
sub
push
enter
outsl
insb
rcll
popa
and
xor
push
cmp
and
enter
pushl
imull
lds
pop
xorb
popa
xor
pop
shl
popa
xor
sub
loopne
and
iret
jne
xchg
movl
sub
das
push
rcl
pop
ljmp
lahf
xor
jns
call
xor
and
aas
lret
aas
adc
scas
das
mov
out
and
iret
pop
outsb
dec
scas
push
xor
cwtl
pop
pop
add
inc
xorb
mov
add
sub
call
pop
call
inc
gs
mov
pop
xor
popa
sbb
jg
pop
clc
adc
pusha
lea
gs
aaa
enter
add
out
daa
fs
mov
subl
call
pop
adcb
pop
xorl
das
ss
pop
movsl
inc
pop
cmpsb
push
mov
lea
pop
das
jbe
pop
movsl
xchg
cmpsb
xchg
mov
daa
out
daa
cmpsl
xlat
rorb
adc
movsb
xchg
or
adc
mov
les
adc
or
push
shrb
pop
cmpsl
outsb
xchg
popf
or
pop
cmpl
daa
loopne
sahf
push
and
cmpsl
adc
out
test
andl
ja
popa
je
pop
xchg
inc
sbb
ljmp
call
mov
add
dec
pop
xchg
xor
loop
jl
xchg
pcmpgtw
and
push
inc
sbb
cmp
test
fstps
outsl
push
add
push
lahf
ja
movsl
icebp
sbb
gs
pop
repz
add
stos
dec
adc
imul
xchg
lea
sti
pusha
xor
sub
incl
ja
mov
mov
pop
or
push
push
xchg
in
add
roll
cmp
sbbb
push
mov
je
cld
test
fwait
dec
add
xor
adc
sbb
xor
xchg
aad
pop
push
ds
xchg
and
imul
loope
inc
xor
add
dec
mov
das
cmpsl
lcall
mov
ffreep
popa
xchg
push
jo
cmpsl
aas
cmpsl
or
test
int
enter
add
push
and
pushf
cwtl
add
push
pop
sbb
adc
stos
jg
fidivl
add
cwtl
inc
pop
mov
mov
mov
cli
cmpsb
xchg
jbe
pop
cmp
adc
ja
lahf
push
dec
test
pusha
lea
mov
shlb
shrb
arpl
ja
push
pop
pushw
jns
mov
popa
in
mov
xlat
popa
mov
lret
pop
xor
inc
xchg
adc
xor
xor
jne
mov
push
arpl
loopne
sidtl
mov
mov
sub
test
adc
ficoms
pop
push
aaa
inc
test
and
mov
movhps
nop
and
or
or
jg
push
mov
xchg
adc
xor
jo
or
and
lock
pop
or
das
es
inc
pop
ja
push
cmpsl
and
es
inc
inc
lea
pop
out
daa
pop
dec
movsb
mov
mov
pop
xchg
adc
mov
mov
xor
xchg
xchg
sub
test
enter
add
call
inc
xlat
lahf
or
ja
pop
rclb
sub
ror
xchg
popf
pop
aad
rorl
mov
dec
xor
mov
pop
aas
xor
xchg
sbb
inc
lahf
sahf
rclb
dec
hlt
push
pop
inc
push
sbb
add
sub
mov
ja
xor
push
pop
push
mov
cwtl
outsl
add
add
aaa
mov
cmp
outsl
cmp
aaa
cmpsl
in
arpl
daa
pop
popa
loopne
cmp
add
push
xor
add
cmc
mov
adc
notb
test
and
xchg
sahf
in
adc
daa
dec
cmpb
xchg
cmpsb
push
sbb
mov
xchg
inc
fildll
push
subb
daa
aaa
fistps
cmp
pusha
cmpb
pusha
mov
stos
xchg
jno
incl
xchg
or
out
cmp
pop
jp
mov
out
mov
dec
ja
dec
loopne
pusha
pop
add
int
loope
and
jo
loopne
dec
push
mov
xor
push
dec
sbb
das
dec
sbb
aas
inc
lahf
or
outsl
sub
addr16
adc
xchg
xor
aad
mulb
mov
push
and
outsl
xchg
inc
push
pusha
and
push
xchg
push
mull
mov
clc
adc
adc
adc
es
cmp
mov
pop
and
fisubs
clc
daa
adc
cmp
push
or
xchg
cld
push
mov
sub
test
and
js
inc
ss
enter
inc
daa
inc
scas
mov
jb
inc
sarb
aas
aam
add
add
or
push
inc
sub
je
cwtl
and
out
xchg
xorb
mov
shlb
mov
xchg
inc
stos
xor
mov
daa
movsl
cli
xor
add
ret
xchg
je
lods
xor
add
das
pop
inc
enter
jo
inc
daa
jle
scas
mov
test
aas
inc
inc
rolb
or
pusha
mov
xlat
jb
pop
sub
cmp
inc
test
or
addr16
cmpsl
xchg
or
fmuls
pop
or
pop
addr16
or
or
mov
dec
out
stos
or
ja
out
mov
cmp
mov
inc
cwtl
fcoml
filds
add
in
ds
jb
aas
sbb
xchg
pusha
jo
outsl
prefetchnta
pop
cmpsl
jae
push
cmp
shlb
enter
sahf
daa
push
xor
movsb
es
add
daa
and
inc
mov
push
inc
xor
cmp
les
xor
adc
cltd
jg
lahf
out
mov
push
enter
pop
cmpb
cli
jnp
xlat
or
es
cmp
xor
mov
insb
mov
fwait
movsl
addr16
push
fcoms
addr16
loopne
mov
adc
push
lahf
push
mov
adc
cmp
insb
xchg
mov
iret
js
addr16
andb
and
mov
sub
adc
notb
inc
fists
clc
pop
outsl
loopne
rclb
ret
notl
jge
push
adc
lock
xor
ja
xor
call
iret
xchg
add
pusha
adc
aas
mov
cmp
mov
push
imull
or
adc
jg
dec
and
les
mov
iret
and
data16
jns
out
adc
xchg
and
cmp
mov
cmp
pop
shr
aaa
decl
adc
out
outsl
fimull
pop
gs
sbb
add
outsb
pop
push
fdivs
or
ds
or
dec
add
testl
sub
inc
fs
cmp
aas
cmpsb
mov
fsub
scas
movsl
and
adc
jae
push
es
les
aas
add
in
xor
adc
jb
test
add
jns
scas
mov
je
add
cmpsb
cwtl
es
add
jg
mov
daa
lock
repz
mov
nop
add
push
and
fcoms
incl
sub
fisttps
xchg
adcb
push
fcom
lcall
cmpsl
push
pop
dec
clc
das
adc
mov
outsb
push
sbbb
outsl
testl
popa
out
adc
adc
addr16
mov
jl
lret
movsl
mov
lock
ds
pop
call
add
push
test
enter
add
shrb
mov
call
dec
fisttps
xchg
stos
add
adcb
lret
js
jg
lret
outsb
dec
xchg
pop
dec
clc
mov
and
jo
xlat
lds
add
mov
sarb
pop
inc
inc
mov
mull
cld
xor
mov
pop
mov
jne
sbb
or
or
cwtl
xor
pop
lcall
pop
or
das
push
daa
mov
pop
clc
mov
pop
and
gs
pop
sbb
pop
enter
pop
aaa
xchg
xlat
mov
jb
cmpsl
mov
push
je
mov
pop
inc
icebp
mov
xlat
jecxz
ds
cmpsl
inc
mov
out
or
sbb
adc
ja
out
or
mov
out
sbb
pop
push
or
sbb
inc
xor
xchg
or
push
dec
sub
aas
push
dec
ja
mov
or
sbb
inc
mov
xchg
lea
push
popf
sbb
inc
enter
inc
pop
push
int
pop
inc
mov
pop
cmp
mulb
mov
inc
inc
inc
cmp
mov
dec
test
fwait
loop
popf
push
mov
xchg
and
adc
push
andb
pop
call
dec
enter
cmpl
jmp
push
push
cmpsb
cmpsl
push
fsubrl
enter
jb
cmp
pop
int
and
inc
jns
pop
xor
mov
sub
ja
add
pop
clc
outsl
and
adc
or
push
iret
adc
adc
es
inc
iret
mov
pusha
or
adc
rorb
pop
inc
ja
mov
mov
enter
dec
fiaddl
pop
es
cwtl
jg
xchg
and
and
add
pop
and
addr16
mov
pop
call
inc
and
xchg
cmpsl
xlat
inc
testl
xchg
fsubs
mov
rorb
aas
push
pop
and
xchg
xchg
scas
movl
sub
dec
dec
pusha
xchg
andb
inc
rorb
push
dec
and
push
lcall
mov
adc
mov
ss
xor
adc
subb
lock
daa
loop
aas
es
inc
outsl
and
testl
push
and
mov
pop
mov
daa
test
sbb
test
scas
cmp
gs
and
add
call
pop
sub
negl
xor
sub
adc
ret
mov
or
mov
gs
pop
add
or
push
pop
rolb
and
aad
or
iret
pushf
ss
or
push
out
jo
jecxz
push
int
inc
es
in
test
mov
dec
xor
pop
incl
lea
pop
pusha
movsl
cmpsb
pop
xor
ja
xorl
out
enter
sub
ret
into
sbb
cmp
daa
push
pop
dec
movsl
gs
xchg
push
cmpsb
inc
test
add
inc
xchg
out
adc
push
sub
inc
sbbb
out
andb
nop
ds
pop
pop
fbstp
dec
insb
loopne
adc
add
call
or
sub
aaa
xor
or
xchg
add
sub
sbbb
xor
mov
pop
repz
stc
ja
pusha
rcrl
pop
cwtl
xor
lea
dec
dec
lock
out
out
clc
orl
cwtl
adc
pop
sbb
adc
add
sbb
cmp
pushf
jnp
pusha
push
pop
adc
out
loopne
xor
or
adcb
jg
lcall
test
xchg
nop
jbe
cmpsl
iret
cmp
jmp
jle
out
xchg
adc
mov
inc
or
xchg
imul
aaa
fisubs
arpl
les
ret
lock
inc
push
and
inc
mov
xchg
pop
addr16
nop
aaa
xor
adc
dec
ds
mov
add
fildl
inc
add
and
cs
es
fadds
sbb
call
or
out
add
call
push
push
push
iret
pop
out
push
aas
add
inc
adc
sarb
enter
xor
sahf
cmp
adc
lret
daa
lcall
xchg
adc
dec
pop
popf
and
in
lea
mov
lret
push
and
lcall
adc
mov
lret
lret
daa
movsb
lock
subb
cmp
movsl
sub
cmpsl
pusha
push
push
pop
sti
mov
mov
dec
adc
hlt
pop
dec
push
mov
mov
gs
add
pop
or
lods
inc
iret
fcoml
addl
pusha
cmc
test
mov
fbld
or
lret
or
lret
addl
adc
mov
xchg
test
scas
notl
cld
mov
mov
aaa
enter
loopne
test
les
gs
push
adc
push
adc
loop
or
andl
mov
fsubs
loopne
pop
inc
mov
aas
popf
push
les
mov
adcb
fistps
jo
pop
and
das
cltd
ja
and
and
cmpsl
movsl
sub
mov
shrb
adc
pop
ret
cmovae
pop
push
inc
das
pop
lahf
data16
adc
jg
hlt
das
mov
das
shll
cmpsl
xchg
add
cs
push
mov
fs
push
out
xchg
and
adc
sub
lods
add
add
jl
out
xor
cmp
sub
pusha
shlb
scas
iret
or
jg
out
push
mul
xor
push
les
cwtl
call
cs
js
rcr
test
test
cmp
shrb
xor
push
inc
and
ja
pusha
sbb
enter
add
push
xchg
outsl
arpl
lock
add
xchg
out
xor
inc
mov
jo
adc
adc
jg
addr16
sbb
nop
adc
adc
adc
out
mov
ds
xlat
dec
mov
push
daa
test
mov
mov
push
hlt
daa
out
dec
aad
out
divl
prefetcht0
dec
cmp
je
js
push
test
test
test
and
mov
rcrb
jbe
addb
and
add
push
mov
dec
lock
ja
push
out
add
xchg
push
es
pandn
xchg
scas
dec
xchg
fbld
or
addr16
test
loopne
aas
and
scas
adc
sub
popl
xor
lds
jg
xchg
iret
push
cmp
pop
dec
push
xchg
andb
inc
lock
aas
sub
iret
and
dec
adc
fcoms
jne
addr16
sbb
adc
inc
outsl
cmp
and
and
dec
inc
lahf
rcr
inc
testl
jo
fsubs
rorb
pop
sub
aaa
es
inc
ja
lahf
push
fbld
cmp
xchg
js
addr16
mov
pop
aaa
push
aas
and
xchg
out
cmp
push
inc
and
nop
xchg
mov
sbb
xchg
pop
dec
jg
lahf
es
iret
decl
push
call
dec
es
mov
push
lock
adc
xchg
scas
inc
fistpll
push
pop
and
dec
dec
xchg
pusha
mov
sbb
xchg
aaa
push
push
das
bnd
mov
and
gs
mov
pop
mov
pop
out
rcll
cmpsl
dec
pop
sbb
push
daa
gs
pop
sahf
sub
xorb
aam
shlb
jmp
inc
addr16
shll
ja
inc
je
je
adc
jge
dec
mov
pop
jmp
or
in
inc
dec
sbb
sbb
movsl
cs
cmpsb
mov
daa
test
shlb
dec
outsb
cld
ja
inc
or
setle
das
scas
out
aaa
movsl
mov
aaa
test
adc
out
cmp
pop
movsl
or
sbb
inc
add
push
mov
mov
lahf
loopne
mov
pop
addr16
adc
mov
cmp
inc
and
push
jg
adc
inc
cmp
divb
xchg
mov
lods
sub
neg
mov
fistpl
xchg
test
mov
pop
fsubr
jle
imull
inc
js
mov
xchg
and
xor
insb
inc
jg
cltd
sahf
xlat
fistpl
bound
jg
dec
dec
lcall
mov
sahf
or
sub
push
fmuls
mov
dec
lock
cld
sub
scas
lret
dec
dec
inc
iret
daa
pop
sub
pop
adc
lock
enter
jnp
mov
enter
add
enter
and
add
xor
pusha
shl
inc
xchg
daa
pop
mov
arpl
sahf
add
xchg
pop
nop
adc
test
sbbb
pop
call
push
pop
ja
pop
adc
xor
mov
daa
add
int
cmpsl
js
std
and
or
test
dec
aaa
xlat
push
and
loopne
pusha
or
push
iret
lahf
jecxz
cmp
mov
rcrb
pop
mov
xchg
inc
pop
xchg
scas
push
iret
movq
sbb
sbb
and
aaa
fcoms
mov
jne
lahf
aaa
inc
nop
inc
push
xchg
push
mov
mov
addl
ja
jno
push
ja
mov
xor
cmc
pop
jb
test
in
mov
jbe
adc
iret
test
out
clc
mov
mov
jecxz
push
cs
and
mov
inc
div
addr16
scas
js
int3
shlb
xorb
ret
lods
in
sub
das
push
in
int
xchg
adc
mov
fistl
mov
mov
push
fwait
pop
inc
call
mov
ret
pop
arpl
adc
mov
dec
and
and
mov
les
add
adc
fsubs
leave
push
imul
daa
xchg
sbb
scas
hlt
push
mov
pop
fcomps
or
adc
push
das
add
lds
arpl
mov
cli
sbb
roll
or
scas
sbb
push
out
lea
mov
push
xchg
mov
xor
dec
mov
lret
push
mov
test
imul
stc
or
or
pop
mov
sub
cmp
wbinvd
xchg
push
cli
mov
adc
inc
xchg
inc
es
inc
dec
popa
sbb
xchg
sbb
daa
and
or
jne
popa
add
xchg
repz
sbb
pop
xor
lret
gs
xorl
popa
sub
nop
push
imul
jae
cltd
loope
scas
lahf
pop
jo
mov
or
ffree
out
ffreep
aad
pop
cmp
loope
stos
sbb
jmp
fisubl
add
pop
es
inc
xchg
inc
jnp
sbb
cmp
lcall
or
cmp
inc
inc
mov
xchg
sub
mov
test
xchg
ljmp
call
add
lcall
xor
mov
call
pop
arpl
lods
sub
sbb
mov
pop
rol
test
add
sysexit
arpl
lea
aaa
addl
or
jne
or
xchg
rorl
das
push
and
mov
or
orl
xchg
setne
rcr
jmp
loope
ret
rorl
daa
sub
aaa
add
xchg
aaa
es
arpl
test
call
and
pop
mov
test
ficomps
fwait
lahf
adc
cltd
push
out
add
xchg
sbb
dec
push
mov
xchg
je
sbb
sub
cmp
jg
pop
xlat
lahf
adc
xchg
xchg
mov
pushf
cmp
xchg
sbb
jmp
push
test
sti
lahf
adc
scas
hlt
push
xor
push
nop
push
cmpsl
and
xchg
inc
rclb
aad
jae
scas
jg
mov
dec
bound
inc
pop
pop
popf
push
dec
adc
js
stos
lea
xlat
aaa
fmuls
pop
aaa
out
daa
pop
or
add
xor
jno
aad
enter
ja
imul
pop
jg
cmp
aaa
fwait
arpl
popa
cmp
mov
sbb
scas
test
arpl
test
ret
fisubs
or
jnp
mov
dec
adc
jg
testb
in
xor
inc
xchg
cmp
xchg
repnz
or
addb
and
in
popf
inc
or
pop
jns
out
jns
scas
mov
cmpsl
out
pop
mov
bound
adc
inc
clc
mov
xlat
pop
push
hlt
daa
sub
pop
loope
inc
mov
pop
les
push
mov
mov
rolb
pusha
popf
jb
add
repz
in
rcrl
add
sbbl
leave
cwtl
or
pushf
pop
adc
jecxz
das
xchg
cwtl
xchg
jne
mov
inc
outsl
dec
arpl
jne
aaa
shrl
iret
push
lods
ja
movsb
not
addr16
jae
sbb
jge
aad
jg
cltd
sbb
into
divl
add
or
adc
imul
dec
or
iret
loop
and
int
daa
cmp
jecxz
repnz
pop
or
pop
push
lret
mov
rclb
push
aas
out
sub
pop
loop
push
das
fsubp
adc
sbb
int3
push
and
push
andb
push
xchg
jmp
ret
iret
mov
je
mov
xchg
out
fadds
lahf
aas
test
mov
jle
mov
aas
loop
dec
inc
scas
xchg
out
xchg
mov
lret
sub
xchg
out
cmpb
daa
pop
enter
sub
mov
cmp
shlb
pop
jmp
add
push
xorb
test
pop
jo
pop
daa
out
test
push
leave
cmp
test
jo
pop
ja
dec
adc
sub
sahf
repnz
push
inc
mov
and
movsl
sub
test
cmp
dec
aad
fsub
int
lret
aas
es
pop
inc
pop
loop
arpl
pop
sub
out
mov
xchg
pop
roll
mov
scas
xchg
mov
xor
popa
inc
clc
mov
mov
cmpsl
jle
movhps
and
rcll
fs
jbe
scas
and
data16
rcll
inc
pop
adc
out
sbb
rorl
or
sbb
or
movsl
daa
and
fs
xor
fbld
cwtl
sahf
push
ja
dec
iret
mov
jns
sbbb
out
aaa
sbb
inc
inc
adc
mov
frstor
leave
cmpsl
xchg
push
mov
fstl
fs
sub
xlat
add
xor
jno
fdivrs
and
push
dec
call
mov
mov
sarb
pop
push
xchg
or
jns
sub
mov
dec
outsl
pop
push
enter
dec
fsubrs
daa
leave
cmp
ja
stos
popf
push
test
aas
stos
mov
out
subb
ja
jl
aas
push
and
jmp
insb
pop
push
das
and
in
test
data16
push
adcb
or
orl
das
out
mov
pop
ja
or
add
fcomi
adc
das
jne
add
xlat
push
sub
lds
xchg
daa
pusha
out
addr16
sbb
out
pop
pop
lds
sbb
mov
pusha
out
jge
inc
and
push
icebp
outsl
adc
sub
sub
sub
cwtl
mov
pop
outsl
and
divl
cmp
cmp
out
adcb
sbb
cwtl
pop
addb
push
add
pop
dec
inc
scas
outsl
jecxz
cmp
in
lret
inc
movsl
sub
adc
iret
in
das
adc
jg
mov
sbb
int
jle
ret
jo
cmp
jecxz
or
jne
sbb
xor
les
and
lock
iret
add
rolb
adc
aaa
loope
dec
adc
adc
jbe
sub
mov
movsb
out
xorl
xchg
outsl
inc
or
test
out
pop
sbb
sub
or
iret
in
adc
adc
fucomip
sbbl
add
daa
rcll
dec
xchg
jb
lcall
out
pop
mov
jmp
mov
mov
bound
das
psubusw
sbb
in
mov
push
sbb
dec
inc
xchg
scas
into
nop
push
iret
push
pusha
cmp
loopne
xchg
js
cmp
aas
out
or
mov
aas
in
xchg
lahf
mov
into
and
xchg
mov
cwtl
call
jmp
adc
divl
inc
pusha
xchg
scas
xlat
pusha
push
daa
mov
push
mov
fucomip
inc
cmpsl
data16
fildll
bound
push
jecxz
iret
das
pop
pop
orb
mov
aas
pop
lahf
or
push
jl
ja
adc
notl
jo
xchg
add
jmp
and
and
dec
daa
mov
lds
sub
cmp
sahf
shll
push
pop
mov
and
dec
inc
enter
sub
mov
dec
inc
cwtl
mov
and
adc
dec
gs
mov
filds
dec
arpl
adc
imul
in
cs
sub
mov
bnd
cmc
or
jns
pop
fwait
dec
cwtl
arpl
and
lods
popf
outsl
ss
lock
add
mov
push
shl
fists
pop
jg
xchg
xchg
pop
xor
adc
ja
cwtl
clc
xchg
mov
adc
rolb
scas
xor
mov
idivl
adc
test
jmp
ud0
pop
inc
filds
cmp
pusha
inc
idiv
adc
add
sbb
pop
adc
mov
push
adc
pop
or
jo
in
lahf
cmpsl
pop
insb
and
sti
and
nop
lret
and
add
daa
cmp
les
xor
inc
adc
mov
mov
divl
orb
push
xchg
push
call
xchg
dec
pop
aam
gs
push
or
xchg
push
daa
das
stc
pop
xchg
data16
dec
xchg
mov
stc
into
push
inc
dec
notl
cmp
lea
push
cmpsl
inc
rol
aaa
dec
rorb
xchg
xchg
add
sub
jns
push
leave
and
dec
inc
mov
das
divl
lock
call
mov
fadds
and
xchg
mov
jns
data16
repz
or
push
mov
inc
out
and
aas
push
xor
or
pop
add
mov
out
push
inc
enter
loopne
push
pop
dec
push
xor
test
mov
or
cmpsl
push
repz
das
daa
push
inc
loopne
push
iret
inc
push
loopne
loop
js
xchg
adc
sub
xor
scas
orl
mov
scas
xor
inc
das
lret
int
push
ja
inc
das
cmp
jmp
enter
addr16
pop
int3
add
cwtl
aas
add
testl
arpl
sbb
or
mov
add
mov
daa
into
mov
js
inc
adc
insb
nop
xchg
loopne
mul
ret
mov
push
jp
inc
hlt
dec
xor
sbb
enter
aaa
aas
mov
pop
mov
push
and
xor
dec
pop
push
sarb
xlat
cltd
dec
pusha
mov
or
inc
shl
sbb
cmp
cmpsb
cs
pusha
ss
cmpsl
and
daa
mov
and
cmp
and
cwtl
movsb
stos
sub
pop
mov
push
inc
and
sbb
dec
cmp
adc
lahf
fmul
js
mov
dec
mov
iret
and
jo
clc
sub
mov
mov
jg
adc
pop
mov
scas
sbbb
and
mov
in
add
aas
inc
divl
pop
jecxz
call
inc
jnp
fsubrp
or
push
gs
pop
add
movl
ret
add
test
iret
mov
cmp
or
add
jno
ja
sbb
mov
or
test
insb
das
shlb
mov
scas
lcall
mov
add
loop
daa
or
rclb
or
adc
and
inc
dec
sub
inc
mov
jne
sbb
lds
sbb
and
push
data16
adc
cwtl
push
inc
dec
aaa
push
xchg
mov
imul
pop
adc
and
jo
shr
or
pusha
adc
and
invd
call
test
fisubs
adc
push
fbstp
aam
lods
sub
mov
rolb
inc
adcl
insl
sbb
outsl
mov
sbb
mov
testl
and
or
mov
push
mov
and
mov
cmpsl
sub
adc
adcl
adcb
jne
aaa
push
xor
ficoml
and
xchg
jns
mov
cld
dec
inc
xchg
xchg
es
adc
lock
loopne
and
mov
jg
fwait
pop
xlat
fs
jle
inc
add
je
add
mov
and
loopne
out
sbb
jmp
add
stos
iret
notl
adc
lods
xchg
dec
lcall
cltd
out
mov
dec
andb
and
pop
les
adc
add
mov
inc
stc
enter
fists
mov
aas
or
dec
daa
data16
test
clc
andb
out
scas
daa
pop
jecxz
inc
out
das
insb
jae
das
les
jbe
adc
sub
fsubp
add
sbb
insb
repz
mov
addl
xchg
dec
adc
inc
loopne
adc
xchg
ret
xchg
jne
add
jg
push
pop
jo
mov
jmp
pop
mov
iret
pop
push
imul
es
daa
inc
ja
and
and
ljmp
xor
mov
mov
lret
iret
in
mov
daa
mov
push
adc
cli
pop
xor
mov
mov
sub
push
pop
fisubl
cwtl
test
adc
adc
loopne
mov
lahf
call
lock
sbb
into
sub
jo
movsb
cmovs
loopne
mov
jp
negl
addr16
inc
jne
fisubrl
pusha
push
hlt
adc
shl
add
lods
xor
notb
adcb
sarb
ja
or
mov
call
push
mov
dec
daa
out
xchg
stos
mov
fadd
adcb
pop
aaa
inc
push
leave
xchg
movsb
xchg
cmpsb
int3
cmc
lock
xlat
stc
inc
xchg
jo
test
sub
stc
fsubl
mov
dec
or
xchg
dec
sub
xchg
sub
sub
jg
daa
mov
mul
sub
iret
adc
jl
aaa
add
adc
sub
cmpsb
scas
rcrb
cwtl
mov
arpl
aaa
adcl
mov
mov
sub
xchg
or
icebp
arpl
cmp
cmp
sub
test
sub
push
ss
mov
icebp
pushf
jo
push
xorb
mov
mov
cmp
adcb
iret
js
dec
dec
push
ror
inc
sub
sahf
fisubrs
or
dec
iret
pop
jecxz
fwait
clc
andl
dec
and
mov
or
scas
xor
cmp
incl
pop
pmulhuw
mov
sub
push
xor
int
arpl
and
int
arpl
inc
sub
xchg
push
aas
xor
push
shlb
mov
xor
or
xchg
mov
arpl
inc
das
lock
aas
jg
mov
out
nop
gs
pop
aas
and
test
int3
mov
sbb
daa
subb
leave
or
sbb
daa
mov
xchg
mov
xorl
test
xor
jmp
sbb
and
icebp
imull
sub
mov
inc
push
cmp
daa
movsl
cmp
xlat
shlb
xchg
movsl
xor
sbb
and
nop
inc
inc
adc
mov
js
xor
pop
inc
orl
xchg
jb
lcall
rcrb
in
jb
loopne
mov
js
enter
and
push
jecxz
add
or
cmp
lods
sbb
mov
and
iret
jg
jo
and
sub
sarb
pop
and
push
adc
into
outsl
pop
iret
andb
shr
mov
gs
add
imul
addr16
push
sub
cs
mov
js
pop
sub
and
dec
and
lahf
lods
sub
addl
adcb
cld
sub
lea
pop
iret
inc
jg
lahf
int
cmp
in
cs
and
xchg
adc
stos
mov
push
pusha
xor
shl
ja
push
mov
mov
lahf
mov
push
es
mov
xchg
lahf
mov
or
pop
test
dec
jmp
imul
das
pop
dec
inc
sarb
jo
sub
adc
ja
and
cs
scas
sub
cmc
lahf
mov
scas
mov
push
mov
enter
inc
dec
mov
adc
das
test
std
jg,pn
fcomps
mov
outsl
pop
ds
mov
leave
mov
sub
subl
push
push
adc
add
int3
add
inc
cwtl
xchg
adc
inc
cmp
dec
lahf
daa
sub
cwtl
psubb
test
popl
aas
xchg
jbe
lods
ljmp
xor
xor
mov
add
cmp
mov
adc
jbe
nop
mov
mov
fcomip
iret
cwtl
jb
mov
pusha
ficoml
setns
push
cmp
or
leave
push
aaa
in
xchg
stos
lock
mov
repnz
pop
or
pushl
es
repnz
mov
jae
or
fwait
adc
outsl
mov
in
movsb
ljmp
popa
sub
xchg
xchg
cmpsb
xchg
jge
es
loop
xor
sub
pusha
xor
nop
and
das
sbb
jns
out
enter
xchg
shlb
adc
rolb
cli
adc
popa
xlat
xor
inc
adc
enter
mov
jne
adc
js
pop
pop
lds
daa
data16
dec
cmp
mov
dec
stos
jne
xor
js
pop
les
sub
arpl
lea
push
xchg
xchg
andb
mov
jp
clc
stc
mov
iret
sbb
les
int
inc
ja
pop
and
fsts
xchg
imull
add
shrb
pop
inc
sbb
aaa
jg
cwtl
scas
xchg
and
dec
and
notl
xor
jg
test
xchg
das
out
out
push
ret
rolb
dec
mov
mov
iret
inc
arpl
out
push
pop
xchg
xor
lret
pusha
dec
adc
or
cmp
call
nop
mov
pop
adc
and
rcrb
out
push
aaa
and
xcrypt-ctr
cmpsl
pop
iret
or
divl
aaa
orl
dec
sbb
movsl
dec
pop
mov
and
shlb
cltd
push
les
sub
lret
and
jo
push
pusha
xchg
mov
inc
jg
mov
push
sbb
cmpsl
iret
sbb
and
xchg
mov
sbb
and
fwait
and
inc
xor
dec
pop
cwtl
rclb
inc
aaa
les
pop
cwtl
rclb
lock
nop
jg
adc
out
push
scas
cld
push
out
sbb
lock
in
xchg
xor
loope
ret
pop
stc
sub
sub
cmp
negb
cmp
mov
movsl
cmp
dec
dec
add
and
xchg
scas
push
out
sbb
movsl
cmp
pop
ljmp
ja
nop
mov
sbb
cmp
mov
inc
push
add
mov
xchg
aaa
aad
pop
mov
int
inc
dec
pop
push
aas
cltd
fs
xchg
dec
mov
xor
sbb
pop
inc
lea
and
jecxz
js
xor
bound
and
inc
aas
or
sbbb
adc
iret
js
mov
pop
or
fbld
jg
pop
push
fistl
push
addr16
mov
pop
dec
out
pusha
aaa
das
dec
aaa
add
pusha
inc
or
mov
and
jecxz
push
sbb
mov
jo
hlt
cmp
outsb
adc
sbb
les
sub
popf
or
mov
mov
adc
inc
sbb
js
and
sahf
mov
pop
pop
in
ja
sahf
outsb
jne
sub
xlat
sahf
in
decl
xchg
divl
xlat
push
and
clc
in
mov
daa
leave
adc
inc
sub
es
inc
mov
push
orl
inc
and
and
dec
ljmp
push
sbb
cmp
aas
inc
add
out
scas
addl
mov
fs
fwait
add
push
clc
insl
notl
dec
push
mov
cwtl
lahf
rorb
adc
cmp
and
fsubrs
jp
das
mov
mov
and
pop
dec
adc
out
push
xchg
dec
cmp
shrb
or
mov
enter
push
daa
mov
subl
ja
iret
pop
movl
loopne
inc
add
xchg
cmpsl
sub
cmc
addr16
enter
lahf
mov
xlat
inc
push
ds
iret
xor
or
mov
cmpsl
popf
dec
cwtl
push
push
sbb
or
ja
js
jb
mov
inc
push
pusha
in
aaa
push
adc
adc
notl
jl
mov
push
aas
and
push
xor
push
pop
pmaxsw
cbtw
neg
push
lahf
cltd
add
fcoml
sub
push
iret
dec
popl
mov
jp
fildll
cmp
mov
sub
subl
sub
pop
pusha
pop
cmpsl
pop
insb
into
adc
adcl
pop
jnp
test
call
mov
movsl
aas
fwait
pusha
inc
out
imull
sub
adc
or
inc
aaa
pusha
lock
xchg
je
outsl
push
inc
das
pop
addr16
inc
sbb
jg
jmp
clc
mov
out
sub
aad
je
mov
inc
fmull
and
pop
add
repz
push
scas
cmp
fistps
mov
sbb
lsl
lahf
adc
add
xor
mov
jp
repz
add
add
jns
sahf
inc
ffreep
and
sub
test
or
test
xchg
jo
iret
lock
xchg
xor
cli
lds
adc
enter
pshufw
jg
cwtl
inc
add
enter
sub
inc
out
pop
clc
xchg
pop
das
loopne
push
mov
lds
aas
cmp
and
pop
daa
jo
mov
nop
mov
dec
xchg
and
pop
clc
cwtl
orl
gs
fwait
mov
imul
scas
mov
inc
outsl
orl
jge
sbb
ja
notl
cmp
aad
lds
sbb
xor
xor
mov
adc
das
cwtl
ret
mov
add
or
lds
inc
xorb
ret
dec
inc
inc
adc
sub
scas
dec
sbb
rcrb
add
mov
and
sub
fcoms
test
pop
or
and
sub
mov
das
cmpsb
out
add
mov
cmp
cwtl
cmp
and
pop
sub
ss
sbb
divl
jle
and
enter
push
adc
xor
daa
out
aas
push
or
xchg
adc
pop
daa
and
mov
aas
jg
or
add
adc
arpl
sub
pop
addr16
inc
incl
xchg
inc
aaa
or
rorb
add
and
pop
mov
inc
and
sub
addb
daa
out
popa
xor
cmp
cmp
xchg
adc
mov
pop
mov
sarb
sarb
pusha
clc
push
add
addl
xor
out
and
fxch
aad
lret
push
jecxz
das
arpl
xchg
rcr
pop
test
aad
popf
jp
pop
fwait
in
into
cltd
pop
mov
insl
cwtl
mov
fisttpl
add
or
adc
dec
pop
jmp
sub
sbb
inc
xchg
cmc
ret
fldt
dec
aas
out
xchg
int
cmc
xlat
in
stos
loope
add
fadds
lcall
aad
cmp
daa
cmpsl
xor
out
xchg
inc
mov
mov
js
ffreep
loope
xchg
fcomp
mov
pusha
ret
enter
iret
test
or
xor
xchg
out
lret
jge
add
iret
mov
fistpll
xchg
sbb
dec
sti
pop
push
cmp
ja
iret
mov
add
js
cmp
push
pop
stos
mov
addr16
pop
jns
pop
mov
sub
inc
sbb
repz
jg
jge
push
cmp
int3
fistpl
push
dec
stc
adc
inc
std
out
mov
and
retw
in
jbe
ret
js
int
mov
cwtl
sarl
pop
pop
jge
lock
js
daa
pop
dec
ja
mov
popa
in
iret
jae
dec
cmpsl
jecxz
jne
mov
ror
negb
in
lret
out
inc
stos
lret
in
pop
fsubl
fnstcw
ja
imul
lahf
mov
test
adc
push
cmp
daa
dec
cs
mov
jle
xor
inc
aam
dec
jecxz
inc
jmp
mov
xor
mov
ss
fimull
mov
inc
or
subb
les
cmc
cmp
int
popa
arpl
ror
lahf
sbb
rol
jl
popf
mov
data16
mov
int
adc
test
dec
scas
notl
and
pop
iret
inc
arpl
roll
popa
jmp
pop
adc
sub
dec
insb
xchg
sub
scas
push
flds
rcrb
sub
dec
into
fcom
shl
lock
xchg
mov
xchg
fadds
add
dec
adc
mov
nop
lahf
cmp
scas
fisttps
scas
aad
stc
jecxz
and
xlat
test
gs
sbb
mov
pop
mov
cmpsl
mov
das
out
lock
inc
xlat
test
rcll
loope
fwait
mov
pop
xlat
dec
sbb
out
lods
mov
xchg
leave
inc
inc
inc
xchg
loope
ja
int3
pop
mov
pop
or
das
lahf
popa
in
dec
adc
out
fistpll
arpl
inc
cs
xchg
out
bound
inc
or
cmpsl
ja
lret
clc
ret
mov
jg
ss
shrl
test
ret
ret
jo
and
call
ds
clc
adc
mov
sbb
mov
shll
mov
push
cmp
add
adc
adc
addr16
ss
mov
inc
lea
dec
pop
add
add
fsubrl
sub
ds
imul
mov
push
test
repnz
cmp
out
mov
push
pop
push
mov
in
aad
xor
decl
push
sub
pop
jg
or
xchg
and
out
sbb
mov
pop
popa
hlt
ja
bswap
pop
aaa
mov
inc
pop
xor
daa
mov
xchg
pop
jg
lods
jno
aas
jmp
cwtl
and
xchg
dec
imul
fidivrs
jg
cmpl
daa
push
pop
out
mov
lret
mov
cmp
negl
fwait
inc
shr
sbb
call
mov
sbb
adc
lret
add
pop
lea
ljmp
cwtl
cmp
adc
jmp
cltd
fld
lahf
dec
xchg
add
aas
add
negl
ja
leave
les
dec
adc
mov
daa
ret
cmp
loop
mov
repnz
cld
stos
or
ret
mov
fs
cmpsl
std
xchg
xchg
fwait
cmp
push
idivl
into
lcall
lahf
int3
xchg
cmpsl
xor
mov
out
jecxz
imull
cmp
cmp
xlat
test
aad
cmp
mov
xchg
orl
dec
popa
sub
xlat
add
pop
pop
or
aad
shlb
xchg
aas
fisttps
mov
adc
or
and
lahf
lods
cltd
sub
adc
out
leave
popa
nopl
adc
ss
out
test
mov
int
and
popa
pushf
loope
jne
fnstcw
testb
out
daa
ficompl
push
mov
jnp
dec
sbb
imul
cltd
into
bound
sbbb
cmc
xor
ret
sbbb
out
and
shrb
cmp
pop
dec
fs
adcb
mov
jecxz
and
iret
hlt
repz
enter
inc
out
ret
out
xchg
scas
inc
xor
xchg
dec
rorl
repz
adc
cmp
inc
pop
adc
ret
adc
das
iret
mov
inc
jo
stos
inc
daa
stos
movsb
lahf
bsr
pop
cmp
mov
push
out
push
iret
jno
repz
mov
movsb
stc
push
xchg
add
shlb
push
in
mov
sarb
push
xor
pop
push
xchg
sbb
out
and
push
stc
jl
cwtl
pop
shlb
hlt
mov
cmp
mov
or
test
dec
mov
add
and
filds
mov
subl
push
int
lds
xlat
sarl
inc
fwait
inc
fldenv
pop
or
mov
and
pushf
enter
scas
jnp
push
lahf
jmp
pop
mov
push
or
cli
imul
jmp
repnz
dec
xchg
adc
xchg
add
and
js
fildll
mov
xchg
mov
inc
sub
pop
repz
xchg
fldl
je
and
pop
outsl
mov
mov
xchg
xor
sub
adc
xchg
xlat
jecxz
mov
out
pop
and
popa
pop
cmp
dec
addr16
mov
adc
enter
aaa
clc
adc
pop
cmp
adc
mov
push
pop
xor
js
dec
mov
dec
out
mul
inc
xorb
and
testb
int
adc
call
iret
mov
sarb
or
call
es
inc
aas
pop
xor
mov
xlat
cmp
daa
adc
fdivs
cmpsl
pushf
addb
or
loope
shll
pop
cmpsb
xor
mov
xchg
shll
sub
or
dec
js
add
sub
push
fldl2t
push
push
js
clc
mov
xchg
inc
sbb
adc
jns
fdivrs
loope
cmpsl
repnz
cmpsl
mov
inc
js
lcall
sbbl
adc
jno
xor
dec
fwait
xchg
loop
push
push
cmp
aas
mov
mov
fninit
mov
xchg
shll
add
es
sbb
and
xchg
sub
fmuls
xlat
cmpsb
out
and
pop
adc
les
or
fstp
push
cmc
cmp
es
inc
aas
mov
mov
sub
and
and
push
nop
jne
xor
pushf
movsl
in
dec
mov
push
xchg
aaa
cmpsb
adcb
and
adc
add
mov
loope
xchg
mov
iret
sub
js
and
sysret
mov
lret
xchg
cmc
mov
xor
aas
mov
sbb
ret
lahf
pop
leave
test
mov
addr16
push
shlb
jo
sbbb
xchg
aad
inc
push
adc
and
test
loop
push
push
add
mov
mov
fldl
push
pop
pop
mov
xchg
mov
sbb
sbb
dec
inc
and
pop
mov
xchg
push
mov
ja
mov
loope
dec
sbb
ret
dec
xchg
out
divb
inc
loopne
cmp
sbb
fcoms
push
clc
sub
es
xor
lahf
ss
test
test
push
in
push
loope
ja
mov
pop
ja
mov
xor
push
fisttpll
inc
rcrl
cmp
sbb
inc
mov
aas
daa
push
daa
aaa
lret
popf
orb
fwait
jmp
dec
ja
sbb
sbb
subl
loopne
xchg
mov
cwtl
out
scas
sbb
inc
xchg
jg
subb
or
pop
aad
jmp
outsb
iret
lret
rcrb
mov
scas
and
xchg
ja
sbb
adc
subl
lahf
xlat
scas
or
mov
jmp
lea
inc
test
stc
arpl
scas
dec
lods
gs
inc
movl
sahf
stos
mov
es
inc
fistpll
mov
mov
push
mov
fld
iret
ret
into
fnstsw
mov
or
in
cmp
pop
cltd
push
jecxz
adc
test
rsm
or
cmpsb
add
and
stos
pop
pop
lahf
test
jecxz
sbb
lea
or
mov
mov
in
xchg
or
shll
mov
inc
and
sub
adc
daa
daa
sub
sahf
loope
cbtw
arpl
xchg
adc
sub
xchg
movsl
push
jno
pop
aad
leave
cmc
aaa
mov
dec
inc
sub
fcmovne
inc
sub
in
pop
mov
sbb
out
and
mov
addr16
js
sbb
mov
repz
dec
loopne
int
into
dec
out
cwtl
jbe
test
inc
mov
iret
rorl
cmpsl
mov
dec
sbb
fcompl
jmp
jnp
push
iret
test
and
repnz
sub
test
pcmpgtb
pop
mov
cld
repnz
decb
pop
rcrb
and
daa
sbb
push
cmp
insb
jmp
lds
adc
sbb
punpckhbw
repnz
pop
arpl
cltd
xchg
inc
xchg
scas
aam
mov
cmpsb
and
xchg
adc
add
hlt
xchg
scas
jnp
out
loope
jg
les
sbb
iret
mov
cmpsl
hlt
movsl
pop
xor
xchg
sbb
sub
push
jno
or
xchg
mov
add
clc
int
pop
and
enter
adc
lds
sbb
outsl
pop
arpl
ja
cmpsl
jno
inc
test
add
mov
into
adc
fsubr
notl
jns
and
pop
mov
or
push
sub
loopne
pop
pop
pop
mov
aas
enter
lods
xlat
rorb
popf
pop
inc
add
pop
inc
dec
es
mov
dec
mov
imul
loopne
push
dec
sti
dec
xchg
sub
dec
push
insl
sub
daa
xchg
cwtl
scas
push
in
imul
jae
leave
xchg
popa
or
out
es
mov
icebp
jmp
mov
aas
pop
push
or
dec
mov
jae
sbb
add
xlat
adc
fistpl
ret
inc
adc
fs
outsl
mov
lahf
adc
xor
pop
or
pop
inc
add
xchg
add
aaa
shrd
ja
pop
jecxz
repz
cmpsl
ja
xchg
cltd
adc
ljmp
popf
cmpsl
cwtl
xchg
fisubl
dec
and
jmp
mov
and
imul
loopne
mov
pop
fwait
aad
inc
fists
movsb
xor
stos
mov
push
ret
aaa
roll
ja
out
stos
mov
sbb
jbe
mov
mov
sbb
iret
add
aas
inc
pop
xchg
xchg
testl
mov
push
je
push
dec
cmp
push
jl
iret
cmp
pop
test
daa
ret
fsub
call
das
outsl
or
pusha
mov
iret
xor
gs
xchg
sbb
inc
xchg
in
fwait
scas
cmp
cmp
xlat
or
pop
pop
into
pop
lahf
inc
xchg
gs
pop
movsl
push
dec
scas
xor
or
adc
jg
vunpcklpd
testl
adc
push
dec
push
or
or
inc
shlb
insb
adc
lods
push
inc
lahf
xchg
orb
adc
pop
adc
test
dec
pop
int
cli
lret
ret
shr
inc
inc
lods
jns
aam
test
or
pop
dec
dec
xchg
pushf
loope
jg
xlat
nop
aaa
xchg
adc
daa
inc
mov
daa
push
mov
push
xchg
xchg
out
xlat
sub
sub
es
xchg
adc
add
fsubrl
clc
xor
push
inc
xorl
push
mov
sub
mov
xchg
ja
or
pop
jae
pop
outsl
cli
jmp
cld
push
jl
aaa
lock
mov
inc
popl
push
mov
xlat
xchg
lahf
je
sbb
adc
add
in
ret
in
lds
les
push
test
xchg
add
inc
pop
inc
dec
pop
adc
fcomip
das
lock
daa
and
lods
idivl
cs
fldln2
and
pusha
ret
outsl
mov
xchg
movntq
out
out
out
int
xlat
mov
mov
jo
mov
addl
pop
ja
imul
data16
add
popf
sub
outsl
sub
bound
xchg
pop
aaa
pusha
fidivs
std
loopne
sub
jae
loopne
mov
daa
inc
sub
push
rcrb
lret
das
xchg
xor
pop
xor
iret
pop
setg
mov
outsl
subl
cwtl
mov
xchg
mov
mov
push
daa
add
jnp
pop
fldl
and
inc
fucomi
pop
mov
fsub
nop
cmp
aas
out
lds
sub
stc
in
ficoml
inc
loopne
lea
les
das
inc
ret
mov
pop
imull
inc
xor
in
call
iret
lahf
cmpsl
clc
push
daa
enter
xchg
sbb
lds
mov
rorb
loopne
cmpb
adc
lock
call
ret
pop
ret
dec
nop
aaa
adc
das
adc
ret
sub
and
xchg
inc
cmpsl
jnp
das
test
mov
stos
jbe
lahf
or
inc
xor
pop
adc
jle
test
daa
dec
lret
adc
andl
push
daa
cwtl
dec
rclb
stos
and
xchg
jl
push
andb
sub
cmp
adcl
xchg
cmp
adc
push
test
leave
xchg
cmpsl
es
loopne
pop
faddl
pop
lret
and
jb
dec
mov
jae
mov
mov
xchg
imul
shlb
mov
mov
fnstsw
loopne
enter
pop
outsl
sub
sub
sbb
adc
xchg
fstps
pusha
mov
inc
into
pop
ja
cmc
xchg
sub
into
ds
scas
out
repz
scas
and
push
daa
lahf
les
out
and
pop
sub
xchg
loopne
iret
cmpsl
xlat
mov
adc
daa
mov
pop
test
ss
aaa
mov
les
cmpsl
xchg
cs
inc
lahf
pop
push
jo
es
test
fisttpll
cltd
or
sbb
adc
out
aad
movsb
sub
and
and
ljmp
mov
push
out
movsb
ljmp
shl
das
loop
cmp
cmp
or
push
push
mov
xchg
pop
xchg
add
scas
popa
in
aas
subb
xor
adc
jmp
cmc
sub
iret
mov
xchg
lret
adc
out
xchg
cmp
jo
pop
or
lahf
push
leave
adc
mov
ljmp
xchg
aas
sbb
lds
icebp
jg
cwtl
add
xchg
ljmp
subl
xchg
sub
imul
ret
xchg
es
stc
std
xchg
cwtl
scas
inc
sahf
pop
xor
add
sbb
aas
and
xchg
pop
cli
scas
add
pop
mov
stos
repnz
sub
test
jge
sub
jnp
push
gs
push
xor
sub
pop
in
lods
fidivl
movsb
in
pop
outsb
cmp
xor
jne
jp
mov
pop
lock
cli
cltd
iret
jae
jnp
xor
movsl
jns
pop
dec
add
loopne
mov
js
jecxz
in
loope
fadds
jns
mov
rolb
pop
jbe
jle
mov
scas
jno
or
sbb
and
mov
cmp
cltd
push
repnz
jns
daa
jnp
xor
in
cmc
int
jo
cmp
adc
sub
imul
jp
or
and
jne
mov
jnp
pop
add
dec
sub
cltd
leave
hlt
negl
fs
into
sbb
pusha
add
sub
fucomip
jp
shrb
push
xor
fadd
daa
iret
xchg
xchg
fwait
jg
mov
xchg
addr16
push
cli
ret
clc
aas
inc
dec
fdivrl
daa
jg
xor
aaa
sub
sub
scas
sbbb
hlt
cltd
cwtl
adc
adc
int
stos
pop
sub
pop
repnz
gs
inc
adc
pop
scas
mov
mov
sub
cmpsl
mov
fwait
xchg
adc
sbb
dec
mov
mov
mov
mov
imul
mov
sarb
mov
cmpsb
aas
pushf
xchg
adc
inc
loop
pand
sub
and
cmc
fs
sub
fsubs
subb
outsl
nop
xchg
outsb
ret
dec
inc
adc
test
inc
xchg
mov
int
dec
push
ja
or
mov
aas
xchg
ret
mov
fstl
xor
testl
pop
mov
inc
aaa
out
imulb
das
icebp
push
dec
iret
aas
not
xchg
mov
pop
or
popf
jne
cltd
outsl
mov
xlat
lods
push
xchg
and
pop
cmp
push
daa
cmp
jo
xor
stos
pop
add
or
jg
and
pminsw
push
out
add
test
mov
push
pop
dec
repz
loopne
popf
cltd
push
and
mov
aam
test
lods
mov
stos
xchg
push
aas
jae
push
cwtl
inc
or
xor
mov
jl
pop
dec
xchg
in
inc
and
jbe
pushf
cwtl
aas
dec
call
pop
sub
adc
data16
pop
or
or
inc
jne
xor
dec
roll
dec
push
out
ja
fwait
ljmp
dec
lahf
mov
repz
adc
adc
das
test
and
xchg
arpl
fnstsw
in
xchg
nop
ljmp
adc
mov
aaa
inc
loopne
pop
scas
aaa
fidivs
push
ja
push
lret
sarl
js
scas
fists
sub
sarb
lea
in
out
jo
pop
imul
stos
fildl
lret
pop
decl
dec
pop
std
movsl
mov
outsl
rclb
mov
cwtl
pop
and
dec
xchg
icebp
repz
pop
pop
mov
cmp
aad
push
dec
adc
sub
mov
add
inc
ret
arpl
addr16
fdiv
inc
loop
xchg
inc
jg
dec
ffreep
cmpsl
cmpsb
cmp
pop
and
adc
jmp
and
mov
das
or
ret
imull
add
dec
mov
dec
or
cmp
in
std
scas
sub
sub
nop
pushl
test
leave
dec
jge
adc
pop
leave
pop
xchg
movsl
jnp
push
pop
icebp
outsl
pop
mov
pop
push
in
mov
and
cmp
daa
dec
enter
mov
pop
sub
scas
mov
dec
and
xor
movsb
shll
mov
mov
call
movsl
fmuls
cmpsl
iret
xor
mov
ja
add
cmpb
mov
lret
fadds
push
out
push
add
sti
jae
mov
add
mov
ret
dec
jmp
stc
cld
jmp
cmpb
inc
mov
test
mov
enter
or
aas
cmp
adc
loope
cmp
jmp
cltd
inc
mov
adc
mov
cmpsl
or
sub
adc
adc
daa
jecxz
cmp
or
aas
push
sbb
daa
jge
add
add
stc
push
das
adc
out
sbb
es
cld
push
aaa
cmp
mov
addl
imul
mov
fdivrs
and
std
rol
pop
adc
mov
mov
pop
pop
das
push
xchg
sub
pop
mov
aad
adc
jg
gs
cwtl
scas
mov
insl
neg
dec
aaa
lret
jne
popa
jg
push
jl
out
mov
lods
lret
inc
and
ja
arpl
xchg
aaa
imul
outsl
cmp
int
pop
pop
jne
mov
pop
mov
sbb
das
loopne
repnz
dec
mov
addr16
arpl
inc
mov
daa
push
mov
xchg
mov
movsl
aad
gs
sbb
sub
repz
mov
inc
pop
pushl
loope
dec
add
and
es
mulps
push
and
call
pop
xchg
inc
ret
mov
lea
cmp
addb
adc
daa
jb
mov
inc
call
clc
lods
sub
dec
jge
cltd
sub
sbb
lods
daa
inc
shll
mov
aad
iret
roll
xor
aas
in
jecxz
xchg
xor
and
add
outsl
int
jbe
addr16
pusha
aas
xchg
xor
xchg
insl
push
xor
fwait
mov
mov
stos
or
mov
and
xlat
push
lcall
xor
pop
pop
xlat
jle
push
sub
jbe
pop
ja
and
push
add
adc
xchg
stos
xchg
inc
aas
andb
lahf
jecxz
pusha
lock
notl
mov
cmp
rorb
and
fsubrs
out
cmp
push
dec
ja
lock
clc
aad
rorl
pop
inc
aas
repz
mov
xchg
aas
mov
cmpsl
fwait
jne
aaa
or
push
or
inc
ja
dec
jecxz
aas
or
pop
xor
fisttpll
sbb
aaa
inc
mov
testl
or
rol
mov
movsl
aaa
adc
cli
outsl
cld
jne
xor
andl
xchg
cmp
mov
add
out
fucom
pop
ja
mov
cmpl
push
push
cmp
pop
pop
aas
and
das
inc
cwtl
inc
das
mov
mov
mov
pop
jg
mov
iret
sahf
jecxz
lahf
dec
push
xchg
adc
pop
add
cmpb
inc
arpl
insl
jl
fldt
pop
jg
imul
mov
pusha
int
xchg
mov
inc
mov
das
outsl
dec
daa
shrb
daa
daa
mov
xchg
gs
xorl
gs
sub
pusha
lret
lahf
mov
jo
je
outsl
and
ret
fsubrs
xor
pop
fisttpl
inc
aas
dec
sbb
repz
popa
jnp
stos
imul
ja
imul
cmpsl
pop
mov
adc
outsl
fldcw
pop
adc
stos
add
pushf
pop
test
popa
xor
arpl
dec
pop
out
inc
push
add
test
arpl
push
add
clc
in
clc
int
decl
jg
pop
movsb
pop
das
mov
pop
arpl
subl
mov
arpl
nop
pusha
pop
aas
popa
repz
lods
inc
sbb
lea
jo
adcl
xorl
cwtl
out
fstpt
or
in
popa
dec
mov
or
adc
fcom
and
rcrb
dec
sbb
call
bound
test
movsb
and
insl
arpl
push
gs
fs
dec
and
mov
inc
cmpsl
jo
data16
das
cwtl
mov
lock
sti
add
out
out
lcall
sbb
mov
jmp
icebp
and
and
dec
xlat
loop
adc
fwait
iret
js
push
mov
dec
fwait
or
movsb
cmc
inc
pop
xchg
mov
jne
xchg
xchg
aas
daa
push
loope
inc
and
movsb
out
sti
pop
movsl
adc
fistl
rcrl
pop
mov
dec
pop
inc
cmpsl
dec
mov
xlat
iret
movsl
out
jne
sbb
adc
pop
push
pop
mov
int3
add
and
into
xchg
xchg
jecxz
cmc
add
rcrb
aaa
adc
lret
jae
mov
pop
dec
mov
jecxz
movsl
das
add
scas
pop
cltd
movsb
mov
daa
mov
sub
imul
testl
and
enter
mov
pop
sub
xchg
rclb
das
sti
mov
aad
dec
fwait
or
nop
clc
sub
fsub
movsb
aaa
insb
outsl
pop
fwait
popf
ret
movsl
mov
outsl
rcll
push
dec
stos
push
sbb
mov
movsb
clc
fmuls
push
loope
or
pop
test
sbb
add
mov
imull
rdpmc
mov
fists
add
mov
and
cs
push
and
movsl
ret
pop
ds
mov
push
les
or
mov
xchg
jae
or
mov
dec
xor
mov
daa
stc
push
mov
sub
cmp
movsl
fldenv
push
sbb
pop
das
dec
aad
dec
into
mov
inc
sub
pop
cltd
mov
push
cmp
test
mov
fwait
push
pusha
js
aas
mov
or
movsl
add
ret
xchg
and
xor
push
sbb
cmc
call
lock
adc
fstps
adc
dec
add
loope
adc
subl
lock
or
adc
dec
rcrb
pop
mov
flds
sbb
cwtl
rcl
push
test
out
dec
xor
mov
mov
sub
out
inc
sub
add
daa
cmp
xchg
adc
fcompl
test
add
or
mov
sbb
cmpsl
jb
stos
sarb
inc
cmp
sbb
dec
mov
jmp
lea
jno
stos
movl
jnp
mov
xor
fs
insl
xlat
push
js
popl
out
cmp
mov
inc
sub
pop
xor
daa
dec
or
imul
shll
aas
daa
cmp
or
int
aas
daa
inc
dec
mov
cwtl
dec
pop
add
fbstp
and
mov
and
aas
daa
add
or
inc
cmpsl
addr16
sub
daa
out
mov
and
mov
daa
cmp
push
scas
sub
stc
adc
cmp
or
ret
or
cmp
outsl
xchg
aaa
int
push
clc
add
dec
inc
sbb
pop
shl
cmpsb
and
sub
add
inc
jne
cmp
pushf
push
jecxz
aaa
pop
or
sub
mov
and
loop,pn
and
jp
inc
push
xor
iret
push
adc
cmpsb
cmp
inc
add
scas
mov
inc
out
xchg
icebp
add
mov
pop
push
dec
cltd
and
fsubrl
xlat
sub
inc
arpl
mov
cmp
insb
jle
push
sub
mov
outsl
scas
in
imul
fadd
mov
sub
cmp
mov
and
push
movsl
scas
jg
push
xchg
fwait
lds
pop
adcb
movl
shll
mov
sbb
mov
or
pop
xor
sbb
or
es
jno
jne
cmp
sbb
cli
sti
pushf
es
push
sbb
das
test
ss
movsl
add
loop
add
test
cmpsl
mov
pop
lret
loope
popa
cmc
add
fldl
pop
enter
leave
push
fnsave
movl
push
ret
or
das
mov
fnstenv
pop
pop
mov
fistps
enter
scas
test
test
clc
das
int
sti
xor
or
add
les
xchg
push
scas
xor
sub
add
xchg
or
push
mov
adc
subl
jnp
xor
shll
das
mov
sub
fwait
mov
icebp
int
sub
or
cltd
mov
das
int
fldl
mov
out
xchg
and
jae
mov
roll
in
sub
xor
pop
inc
test
mov
stos
iret
rcr
and
test
pop
lcall
imul
aam
movsl
and
dec
mov
sbb
xchg
inc
and
push
xchg
adc
aas
outsl
adc
push
xchg
jg
push
xchg
js
iret
daa
adc
xchg
call
pop
movsb
jne
fxch
pop
and
jl
in
pushf
sub
call
aas
sbb
adc
nop
movsl
fildll
mov
les
pop
dec
in
inc
jle
movsb
push
arpl
add
or
xchg
pop
inc
clc
push
out
or
adc
push
ja
xchg
inc
loope
jo
outsl
mov
arpl
ret
call
cld
sub
inc
xchg
mov
mov
jecxz
cs
rol
cmp
mov
in
xchg
cmp
dec
call
enter
pop
xor
lahf
sbb
mov
mov
clc
fwait
jp
pop
push
adc
pop
in
aas
mull
js
fninit
pop
xchg
inc
lahf
and
lcall
inc
xor
in
pop
push
pop
aad
nop
sti
push
addr16
fwait
or
sbbb
cmpsl
push
stc
sub
pop
leave
xor
test
dec
mov
dec
dec
sbb
daa
fldenv
push
rcrb
xchg
scas
shll
jp
clc
push
adc
repz
aas
push
add
je
cmp
xchg
daa
dec
jle
out
push
push
aaa
mov
push
sub
jae
or
push
pop
loop
adc
unpcklps
xchg
sti
mov
jae
inc
xchg
stos
xchg
call
mov
testl
pop
lods
inc
dec
popa
mov
ja
mov
subb
or
sub
rcrb
cwtl
mov
jbe
sub
adc
stos
cmc
xor
inc
xor
and
in
push
pop
ret
test
nop
cmp
and
mov
inc
push
pop
cmpsl
popf
xchg
adc
and
mov
fwait
and
idivl
inc
xchg
pop
push
mov
clc
repnz
xlat
dec
pop
fistpl
mov
cwtl
subl
movhps
lcall
mov
mov
adc
cmp
addr16
std
mov
sbb
sub
add
mov
adc
rorb
xchg
icebp
push
mov
scas
pop
je
xchg
mov
and
mov
adc
test
sub
loop
outsl
mov
pop
sub
iret
adc
fists
frstor
pop
pop
cltd
je
ror
int
xchg
fcoml
add
shlb
push
mov
push
and
xor
stos
sti
or
insb
cmpsb
setg
into
test
pop
or
dec
push
pushf
sub
test
cwtl
cmp
sub
push
inc
jne
xor
dec
lret
xchg
mov
cwtl
iret
fbld
or
cmp
lock
int
add
pop
mov
dec
icebp
push
adc
push
ficomps
adc
pop
push
pop
mov
and
ds
jmp
arpl
adc
andl
mov
in
xchg
das
mov
mov
pop
fists
das
mov
adc
arpl
dec
popa
mov
mov
xchg
pop
dec
lea
nop
les
das
pop
popa
jle
jg
jb
xchg
xor
mov
ret
sbb
jg
movaps
nop
sub
adc
sub
cltd
sbbl
inc
inc
dec
mov
fwait
outsl
and
mov
push
stos
cltd
mov
leave
jae
push
or
cmc
outsl
lret
jecxz
pop
cmp
outsl
pop
pushf
ljmp
xlat
push
fldl
in
out
pop
mov
lea
inc
add
jg
cmpsl
les
lock
xchg
push
ja
xchg
mov
sti
fistl
test
in
movsl
xlat
mov
repz
add
leave
dec
push
cltd
cmpsl
mov
adc
aas
daa
adc
mov
xchg
cltd
scas
pop
mov
aaa
push
out
ret
fcmovnb
lds
mov
mov
add
push
xchg
shrl
lahf
or
mov
xchg
add
xor
mov
fildl
mov
xor
stos
ret
push
aas
sub
nop
jne
push
shl
inc
sbb
adc
adc
sti
mov
pop
xchg
sbb
icebp
adc
int
shr
xchg
mov
dec
xchg
jecxz
clc
pop
adc
lret
add
lds
pop
and
ja
aaa
push
icebp
pop
cmpsb
js
int3
outsl
push
cmp
cs
xor
enter
cs
and
fcoms
push
add
outsl
test
xchg
in
sub
filds
push
shll
scas
xor
mov
adc
aaa
fstpl
mov
mov
add
pusha
mov
pop
sub
adc
mov
or
aas
popl
mov
test
daa
sub
adc
add
xchg
aam
or
std
scas
pop
and
adc
es
inc
xchg
int
in
lahf
adc
mov
add
jmp
subl
cmp
js
sub
ret
enter
mov
nop
mov
xor
xor
adc
ficompl
cs
das
push
or
add
adc
enter
in
movsb
aaa
jo
cmp
dec
aaa
ret
test
sub
leave
or
xlat
leave
andb
mov
mov
in
sbb
xor
adc
sub
addr16
push
xchg
add
out
push
inc
sbb
push
out
aas
push
dec
xchg
add
mov
pop
out
rcll
mov
mov
outsl
or
aaa
and
sti
insl
sub
in
mov
loopne
push
clc
add
xchg
sub
pop
roll
xchg
ret
mov
scas
fisubl
sub
decl
adc
aaa
mov
add
in
lcall
or
xlat
scas
mov
imul
negl
sub
inc
mov
xlat
rdtsc
fnstsw
push
loop
leave
mov
mov
je
dec
sub
xorb
call
out
mov
js
xchg
subl
or
clc
sub
in
movnti
adc
daa
dec
fcoms
lret
adc
iret
sub
sub
les
lods
lds
andl
lret
or
jae
or
popa
push
in
push
mov
test
daa
lods
xchg
notl
or
int
or
inc
xor
int
pop
decl
ja
or
mov
cmp
xchg
dec
js
cltd
inc
stos
adc
xchg
push
stos
addb
imul
hlt
pusha
pop
mov
jg
mov
xlat
lds
adc
fcomps
mov
fists
repz
pop
mov
scas
pop
fwait
push
fisttps
cmpsl
outsb
shrl
int3
push
hlt
test
in
mov
ret
int3
cmc
xchg
cmpsl
repnz
divl
sub
jecxz
pop
xchg
sti
je
pop
jecxz
pop
stos
or
cmc
js
leave
sub
cmp
daa
inc
daa
loopne
dec
out
push
xchg
loope
dec
adc
loopne
xor
push
pop
leave
nop
dec
call
or
cmc
stos
xor
dec
push
addl
and
adc
xor
cwtl
daa
xchg
gs
mov
jne
push
and
or
pop
add
pop
fwait
das
in
adc
cld
stos
pop
pop
xchg
fidivs
jae
outsl
aaa
xchg
aam
lods
mov
cmp
pop
icebp
xor
daa
fwait
mov
sub
xchg
cmpsb
mov
rcr
dec
jge
fstpt
aaa
scas
adc
xchg
mov
movsl
lods
xchg
jl
sub
dec
pop
scas
pop
movsb
std
lea
add
leave
arpl
out
jmp
mov
push
scas
mov
ja
das
xchg
xor
mov
ret
mov
pop
int
lock
mov
adc
jmp
outsb
mov
mov
pop
imul
cltd
leave
sub
jae
lods
xchg
inc
fwait
xchg
and
push
and
ret
rcl
scas
add
inc
fcomi
adc
xor
aas
mov
xorb
and
iret
pop
test
das
push
adc
adc
xor
adc
sbb
sub
mov
fcoms
fwait
lahf
in
dec
aad
ud1
pop
and
in
jmp
or
cmp
rcrb
pop
aad
mov
iret
jb
push
dec
shrl
jge
xchg
pop
push
push
mov
xor
shrb
das
pop
push
cwtl
sub
jae
jmp
cltd
mov
xor
push
push
shll
iret
ja
pusha
mov
call
ret
inc
out
jnp
iret
lods
call
clc
out
xchg
xchg
mov
mov
xlat
iret
and
fldl
xor
pop
fildll
testb
add
pop
imul
fsubrl
lret
lret
test
mov
adc
mov
mov
and
xchg
push
ret
or
int
out
xchg
and
sub
adc
xchg
fsub
mov
jmp
sub
outsl
lods
pop
lods
movsb
scas
dec
pop
imul
movaps
addr16
xchg
mov
add
and
das
add
mov
les
lods
das
cmpsl
movsb
cmp
mov
push
push
mov
lods
pusha
movsb
pop
pop
mov
inc
mov
push
push
sub
std
or
fbld
outsl
nop
gs
push
mov
hlt
stc
fidivl
mov
sbb
test
xor
inc
or
pop
pop
fucomip
sub
add
imul
sub
add
psrlq
cmp
cmp
out
mov
cmp
mov
enter
adc
jnp
push
sets
lods
aaa
movsl
cmp
lds
xchg
xchg
xchg
ljmp
inc
loope
dec
aaa
imul
lods
das
imul
and
pop
cltd
call
push
adc
das
cmp
push
test
lret
test
jne
out
aaa
lea
xchg
repz
aad
add
inc
pop
aaa
push
inc
cmp
mov
adc
jg
iret
shrl
outsl
lea
cmpb
je
sbb
inc
aaa
imul
jae
add
dec
mov
cmp
call
popa
dec
adc
rcrl
pop
pop
pop
mov
push
test
and
mov
pop
jmp
lds
or
mov
xor
ljmp
and
or
mov
mov
loope
push
stos
or
xor
xchg
push
ja
in
jmp
mov
addr16
pusha
clc
cmpsl
lds
sti
and
imul
xchg
xor
aaa
in
les
add
and
dec
aaa
clc
dec
pop
pop
mov
sarb
andl
aaa
dec
jg
pop
and
pop
popf
sub
ret
dec
mov
popa
aad
xchg
loope
mull
mov
lahf
das
std
addr16
sub
pop
xor
push
xchg
push
or
call
push
xchg
or
daa
xor
fstpl
adc
mov
cwtl
jg
mov
notl
xchg
pop
pop
aaa
out
mov
pop
add
or
lock
xchg
sbb
dec
adc
mov
adc
xor
cmpsl
pop
pusha
shl
aaa
sub
or
add
add
or
mov
mov
fmulp
xor
sbbl
or
stc
or
and
daa
in
outsl
setae
aas
cmpsl
leave
mov
out
mov
sbb
fwait
test
call
and
pop
mov
js
adc
sub
test
addl
test
js
or
mov
mov
rorb
das
jnp
out
ss
sub
pop
push
js
addr16
pop
out
jge
orl
cmp
xchg
shrb
popa
push
test
imul
xlat
repz
movb
pop
lock
mov
or
jb
or
mov
mov
test
out
dec
pop
outsl
xor
fstl
or
sbb
rorl
and
or
js
jnp
cmp
or
imul
stos
xchg
pop
daa
cwtl
lea
push
es
adc
inc
inc
pop
xchg
sti
pop
pop
pop
mov
and
add
or
sbb
add
add
popf
mov
js
imul
xor
out
aaa
sub
rcll
aad
daa
push
pop
inc
fadd
cwtl
cmp
cld
mov
xchg
jae
fmuls
aaa
pop
dec
lahf
adc
mov
or
inc
xchg
insl
jg
gs
push
or
cwtl
addr16
out
imull
and
int
daa
jnp
xor
xchg
mov
and
fcomps
lcall
jmp
and
sbb
orb
fcoms
push
inc
leave
clc
aaa
jnp
pop
arpl
or
mov
test
jecxz
fcoms
pop
jae
dec
cli
pop
loop
iret
mov
xor
jmp
imul
in
cs
insb
or
daa
in
push
fstpt
test
bound
add
cmp
fcmovnu
xor
pusha
jg
add
loope
jo
cmp
xor
pop
push
es
pop
dec
and
add
maxps
dec
or
xchg
mov
jo
mov
pop
adc
mov
add
mov
adc
test
or
xlat
sub
or
xor
push
daa
sbb
jne
sub
mov
push
icebp
jmp
xor
xchg
rolb
mov
xchg
pop
pop
jno
fldl
clc
cmp
add
cmpsl
xor
cmc
test
ror
cmpb
fiaddl
mov
bnd
cwtl
inc
jb
rcr
cmp
test
adc
out
push
mov
fdivrl
sbb
fptan
test
mov
cmp
insl
icebp
jp
mov
mov
std
add
push
fidivl
add
sti
sbb
int
ja
push
or
incl
cli
sahf
cmp
inc
lods
sbbb
lds
mov
push
mov
adc
add
inc
faddl
fidivs
inc
xor
lret
sub
mov
push
outsl
jl
sbb
lcall
cmp
leave
and
add
lret
pop
cwtl
xchg
mov
push
sti
in
out
insl
int3
aaa
dec
and
pop
pop
aad
clc
push
and
xchg
aas
cwtl
add
lret
cltd
dec
rcl
adc
mov
xchg
sbb
cli
or
pop
mov
jnp
mov
mov
rorl
jne
mov
cmp
cmp
out
xchg
repz
ret
pop
ret
dec
and
jb
rorb
lea
pushf
mov
addl
gs
flds
repz
test
sub
in
insb
idiv
and
scas
cmp
fnsave
mov
inc
pop
testb
xchg
jmp
sub
lret
mov
mov
pop
cmc
in
mov
mov
rclb
sub
sarl
lahf
outsb
jle
push
cmp
pop
out
scas
sub
sti
push
pusha
call
fs
mov
imul
scas
push
inc
add
push
dec
das
rorl
sub
jecxz
add
jns
pusha
mov
xor
lds
jnp
fstl
pusha
mov
sbb
adc
mov
jg
das
dec
xor
insl
repnz
adc
mov
add
mov
ja
jg
test
pop
dec
hlt
pop
jg
cmpsb
or
and
mov
loopne
mov
test
or
fsubrs
jp
cmp
out
sub
add
gs
dec
xor
test
lods
push
pop
mov
lds
cmp
push
cwtl
and
add
ljmp
or
add
and
jnp
clc
xchg
aas
dec
outsb
test
xor
rol
mov
add
mov
jp
fs
or
pop
out
data16
outsb
in
xchg
insl
or
jle
aaa
xchg
or
adc
add
jl
popa
aas
pop
pop
adc
jbe
jge
inc
jno
stc
adc
pop
add
cmpsb
inc
adc
sbb
in
sbb
cmpsb
out
mov
ds
dec
out
popa
xchg
add
mov
fidivs
repnz
insl
pop
push
bound
unpckhps
or
add
stos
pop
add
mov
and
and
add
fimull
inc
jb
repz
jle
cli
jg
and
and
mov
sbb
pushf
fcompl
mov
xor
or
add
xlat
ficomps
pop
mov
aas
adc
or
jne
xchg
or
ljmp
ret
andb
jo
jb
in
or
mov
mov
and
punpcklbw
es
cli
fwait
jae
pop
test
jg
fsubrs
lds
mov
pop
pop
mov
fidivrs
pop
fcomps
hlt
mov
push
add
inc
jne
adc
xlat
pop
or
shll
aas
rcr
or
or
jb
xchg
call
data16
add
push
push
and
xlat
sub
jle
cs
lods
pusha
fadds
int3
mov
inc
int
idivl
inc
icebp
or
mov
stos
in
hlt
in
cltd
dec
pop
outsb
adc
decb
daa
mov
out
pop
add
cmp
movsbl
and
push
inc
mov
push
xor
and
sub
imul
daa
or
enter
inc
loop
cwtl
mov
mov
addb
outsl
fadds
cmpsb
adc
outsl
test
add
or
add
movsl
sbbb
adc
daa
mov
sbb
popf
inc
sbb
addl
pop
in
dec
mov
daa
movsb
jnp
xor
daa
rep
add
jo
lock
inc
jns
sbb
sbb
andb
jns
adc
ret
imul
in
enter
sbb
scas
bndldx
pop
cmp
or
adc
add
adc
addr16
stos
sub
add
scas
cmp
adc
mov
test
jo
xchg
adc
and
push
add
add
dec
dec
xor
push
mov
sub
xorl
sbb
addr16
inc
cmpsl
addl
dec
das
mul
lock
xchg
xchg
lcall
cmp
lods
out
and
and
aaa
lock
fnstenv
insl
and
dec
mov
aas
inc
push
inc
inc
jl
jno
addb
or
in
mov
add
ljmp
nop
inc
push
xor
xor
and
dec
pop
aaa
mov
add
repnz
data16
in
dec
inc
jl
ds
aad
testl
iret
inc
fwait
cmp
jg
sbb
sahf
aam
bound
nop
jnp
pusha
inc
xor
sbb
in
jb
test
mov
test
add
mov
and
inc
push
daa
or
jg
sbb
cmp
pop
movsb
cld
fs
pushf
lcall
pusha
cmp
and
cmpsb
lret
pop
or
fiaddl
mov
inc
sub
orb
dec
ja
mov
gs
push
inc
and
sbb
and
add
push
fmuls
pop
sub
out
pusha
inc
xchg
sahf
xchg
adc
sub
cmp
ret
enter
adc
les
cvtps2pd
mov
and
orl
xchg
fwait
ja
mov
dec
adcl
inc
pop
popa
push
add
ret
pop
xchg
mov
dec
jb
ljmp
xlat
push
inc
jg
and
pop
clc
push
mov
inc
pop
or
lret
mov
daa
xlat
inc
xor
xlat
sbb
les
cwtl
pop
mov
test
add
jo
les
add
and
dec
or
mov
pop
or
push
or
inc
movaps
arpl
dec
add
in
mov
and
add
pop
or
adc
stos
mov
push
outsb
jle
adc
jo
adc
inc
int
push
cwtl
mov
not
arpl
adc
xchg
or
push
dec
gs
pop
add
sbb
mov
iret
and
add
mov
jle
lods
stc
push
movsb
ret
repnz
lahf
add
dec
enter
clc
xlat
fs
out
sub
push
push
jns
fdivrl
and
xor
pshufw
push
xchg
jo
dec
xchg
jns
mov
lcall
pushf
daa
push
rcll
call
add
rclb
out
sub
in
insl
mov
scas
cwtl
push
cli
out
scas
jp
out
inc
mov
pop
push
cmp
sub
pop
pop
and
push
adc
pop
pop
psignw
aaa
lcall
loop
mov
ret
cld
adc
mov
pop
fmuls
fwait
xchg
out
enter
fcoms
inc
xor
jne
push
jae
inc
in
or
add
scas
adc
in
push
and
add
fwait
mov
mov
pop
and
inc
xor
cmp
into
mov
add
ficompl
lds
sbb
addl
subl
aas
pop
decl
les
xchg
iret
pop
or
push
add
push
pop
add
rcrb
push
js
push
out
mov
pop
bt
adc
sbb
setno
add
push
ja
dec
jecxz
nop
mov
jge
clc
push
clc
or
or
jno
jp
xor
xchg
sub
or
imulb
mov
pop
mov
clc
iret
push
es
aaa
iret
push
call
pop
inc
test
movsb
enter
sub
cmp
arpl
in
mov
js
popa
sbb
popf
adc
test
dec
scas
testl
test
add
das
popa
mov
test
jns
xor
add
xchg
push
mov
addb
xor
or
pop
adc
adc
mov
adc
and
pop
jmp
mov
imul
cmp
sub
jg
fldenv
aaa
mov
aad
unpckhps
popa
das
sbb
hlt
stos
mov
xchg
stc
add
pop
cmp
in
js
cs
les
or
sti
scas
add
das
or
adc
daa
xlat
mov
jp
je
insb
sahf
jge
test
inc
gs
test
and
pop
das
arpl
es
pop
inc
addl
xchg
popa
xor
sub
pop
dec
dec
push
push
push
outsl
insl
imul
ja
jae
lea
xchg
pop
sahf
lods
stos
test
ror
lret
leave
xlat
pop
aad
dec
pop
in
jmp
div
repz
add
push
or
or
adc
and
and
sub
sub
pop
xor
inc
inc
dec
dec
dec
dec
pop
push
push
bound
insb
push
push
orb
xchg
movsb
mov
stos
test
mov
into
int3
lret
aam
pop
in
loopne
in
ljmp
lcall
test
and
sahf
or
inc
outsl
and
and
in
inc
or
mov
add
sbb
dec
outsl
dec
mov
xorl
sub
and
push
jle
dec
add
sbb
jne
xor
push
lds
pop
insl
pop
push
jge
sub
push
popa
pushf
cmp
jne
les
jl
cld
test
je
adc
sbb
in
cmp
test
push
hlt
sbb
xor
jmp
call
cwtl
jg
loopne
pop
fildll
bound
mov
add
scas
loop
test
aaa
or
cld
push
sbb
push
mov
inc
call
leave
je
sbb
push
sbb
dec
test
mov
cmp
dec
pusha
leave
mov
fisttpl
mov
adc
jb
mov
imul
cmp
jnp
mov
cmpsl
jns
dec
jns
pushf
add
shll
xchg
sbb
lods
mov
pop
fs
xchg
sub
sbb
pop
mov
enter
xchg
add
jbe
popf
outsb
inc
leave
cmpb
into
mov
stc
call
stos
std
mov
pusha
jae
mov
xchg
xchg
add
jbe
nop
fdivs
pop
xchg
adc
loopne
or
scas
cld
adc
out
lods
out
pop
adc
push
std
mov
shl
int
push
cmpsl
mov
add
mov
mov
arpl
or
lds
sahf
jg
sbb
fistpll
cmp
shlb
in
mov
mov
push
outsl
cltd
movsl
jl
cmp
es
mov
inc
outsb
push
add
les
pop
fs
xchg
movsb
jnp
pop
imul
test
mov
jo
in
inc
aam
push
shlb
mov
sbb
subb
push
sbb
jle
fadd
inc
aad
andl
mov
inc
pop
fnstenv
or
pop
imul
mov
cltd
mov
pop
out
pop
push
fsubrp
std
leave
in
cmpsb
aam
jge
lret
packsswb
pop
pusha
add
ss
mov
fisubrl
icebp
mov
movsb
stc
cmp
fsubrp
cmp
repnz
je
xor
das
sub
in
mov
aaa
sahf
jo
mov
cmc
pop
dec
sub
nop
adc
pop
jecxz
jmp
mov
pushf
ljmp
ret
das
les
daa
ds
pusha
xor
sbb
jmp
aad
out
call
ds
jne
inc
mov
pop
mov
mov
pop
dec
lret
adc
lcall
mov
mov
pop
stc
jge
ds
pop
jno
sarb
ret
push
lret
jbe
or
mov
or
pop
int
addr16
xlat
bound
in
pop
jg
fsubs
pop
jns
lods
ret
mov
daa
xlat
push
outsl
sub
pop
fsts
mov
pop
iret
push
les
and
pop
repnz
jmp
push
mov
js
adc
or
out
loopne
lret
js
xchg
pop
add
xor
scas
pop
fmull
inc
arpl
xchg
outsl
inc
shrb
testb
sub
lahf
call
mov
sbb
push
jo
xor
adc
adc
pop
xchg
lock
ret
jno
stc
pop
push
pop
sbb
nop
int
mov
cmp
gs
es
lock
les
mov
or
xchg
adc
cmp
xchg
or
or
xor
pop
mov
xor
jl
bound
dec
pop
test
cmp
decl
cmp
shll
mov
mov
mov
flds
dec
pop
inc
shlb
lods
hlt
lahf
stos
stos
cmpsb
mov
incl
pop
push
dec
icebp
inc
scas
popa
add
xor
testb
call
imul
and
aad
mov
mov
aam
mov
ficomps
jge
aas
mov
nop
and
mov
push
xor
lahf
sbb
and
out
cmp
into
add
dec
xor
mov
jno
pop
icebp
adc
fistps
push
fstp
add
jg
notb
inc
insb
and
mov
or
stos
lock
ret
icebp
notl
pop
loop
mov
cmp
jmp
dec
fadds
sahf
inc
mov
pop
pop
cmpsl
xorb
sbb
jae
dec
sbb
out
add
pop
rcll
pop
aaa
icebp
call
jle
dec
or
pop
push
inc
cmc
inc
add
enter
mov
adc
arpl
push
arpl
les
push
pop
or
sbb
sub
or
dec
pop
cltd
rol
cmp
or
cmpsb
bound
das
and
mov
pop
xor
mov
bound
lock
sti
dec
addr16
sbb
jle
fwait
xchg
stos
std
cmp
aad
adc
pop
fldt
loopne
sbb
movsb
push
ss
pop
pop
inc
test
outsb
xchg
xor
call
insb
stos
out
cmp
mov
push
add
sbb
jb
pop
shrl
mov
jle
adc
sub
mov
in
test
pop
fadd
or
or
dec
cltd
cmp
pop
add
les
sbb
scas
stos
pop
fsubrl
mov
push
xor
push
roll
sbb
lods
xchg
nopl
pop
pop
xchg
int3
pop
pop
pop
hlt
push
mov
jbe
sti
jnp
ljmp
mov
lods
push
mov
test
mov
jno
and
mov
push
xchg
xor
and
jmp
call
test
addr16
lcall
rcll
mov
insb
jns
jns
add
daa
pop
sbb
test
shll
decl
call
mov
icebp
mov
and
dec
xor
push
mov
mov
pop
aaa
loopne
xor
lea
pop
repz
and
sarl
xchg
lods
into
push
daa
sbb
clc
xchg
jne
sub
addr16
jp
jns
das
jge
xchg
add
outsl
stc
pop
imull
mov
sbb
out
imul
pop
shrb
movsb
loop
aas
push
fdivrs
pop
sbb
in
mov
andb
pop
fidivl
push
insb
and
cmp
insl
subb
pusha
out
mov
jle
mov
or
cmp
nop
push
or
adc
shl
pop
pop
pushf
arpl
sbbl
and
aad
adc
mov
sbb
cmp
ficoml
stc
cwtl
addl
pop
inc
push
jnp
push
shll
inc
pop
rcl
pop
jecxz
mov
test
mov
xor
add
mov
sbb
dec
fstl
test
pop
push
inc
out
dec
pextrw
lea
and
clts
jns
mov
fistl
cmc
xor
jno
pop
lahf
jmp
sub
pop
lock
add
idivl
mov
sbb
xor
inc
pop
xor
daa
std
fwait
and
aas
faddl
or
nopl
ficompl
cmpsl
cwtl
or
add
fdivp
dec
adc
xor
cmp
dec
dec
enter
lock
lods
into
leave
push
cli
call
pop
jns
or
add
adc
repz
add
cmp
adc
ljmp
dec
hlt
dec
insb
negb
and
fcmovu
add
jg
sbb
adc
or
mov
inc
jl
sbb
rorb
hlt
and
movsl
mov
fstps
sbb
daa
in
jnp
or
push
cwtl
pop
cltd
les
or
jae
testl
adc
xor
pop
ficoms
xor
hlt
lods
mov
cmp
and
adcb
hlt
daa
push
add
jnp
loopne
pop
add
jge
and
and
xor
add
packsswb
mov
inc
pop
jae
or
pop
mov
pop
jne
and
ret
or
jp
jg
addl
daa
xchg
pop
or
imul
fstps
sbb
fmuls
sti
add
adc
inc
adc
adcl
adc
cmpsl
mov
add
clc
out
test
ret
cmp
shlb
sub
adc
add
xchg
jbe
addb
sti
aaa
push
aas
int3
dec
popf
outsl
xchg
mov
mov
pop
lahf
or
sub
mov
sub
popf
add
mov
sub
aas
loop
mov
popf
mov
mov
aas
xorl
and
pop
adc
pop
cmp
iret
mov
or
mov
sbb
cmc
aas
pop
enter
popl
outsl
mov
cmp
mov
andl
cmp
cmp
test
mov
mov
inc
jb
and
and
ljmp
mov
add
jg
sbb
fadds
addps
adc
jle
sbb
movsb
push
aaa
lods
in
aas
shl
or
jl
lods
test
sahf
aam
cmpb
cmpsb
push
xchg
inc
adc
pop
cmpsb
negl
add
shlb
inc
add
add
cmp
out
call
pop
daa
pusha
loop
dec
dec
iret
pop
dec
dec
iret
pop
cwtl
dec
jbe
inc
xchg
pop
inc
pop
pusha
test
pop
dec
or
pusha
incb
xchg
dec
rcr
loop
dec
cmp
fidivs
sti
inc
cwtl
mov
mov
es
aas
sbb
add
mov
pop
mov
dec
and
xchg
xor
aad
ficompl
sbb
sbb
sti
add
inc
sbb
push
inc
clts
push
sub
xchg
xchg
pop
adc
pop
test
daa
sbb
pop
mov
push
scas
inc
sbb
pop
add
push
ja
push
sbbb
pop
pop
pop
push
dec
lea
jg
dec
incb
es
push
pop
adc
je
rolb
outsl
pusha
xchg
pop
push
iret
imul
lock
test
movsb
gs
xor
int3
jne
xchg
lahf
lret
lock
ja
or
inc
cwtl
imul
mov
inc
mov
adc
adc
jno
aad
inc
dec
icebp
pop
sub
or
or
adc
inc
ds
bound
mov
inc
adc
data16
fwait
mov
dec
cli
dec
adc
mulb
inc
test
mov
jns
sbb
add
imul
les
jns
sbb
sub
ret
sarl
lock
xchg
xor
ds
dec
popf
pop
jmp
pop
movsb
mov
mov
mov
lods
mov
xlat
xchg
add
stc
or
xchg
sub
pop
outsl
jb
insl
loopne
xor
pop
sbb
adc
cmc
pop
lret
jbe
adc
test
ret
pop
pop
inc
cmp
xchg
lahf
mov
fldl
cmp
aam
pop
lcall
xchg
out
orl
sbb
and
add
lods
clc
jo
or
cmp
lret
insb
and
mov
sbb
adc
pop
mov
xor
cmp
stc
in
cmp
or
mov
or
mov
in
push
shl
outsb
cmp
ss
jp
inc
pop
sbb
push
fisubs
add
aad
pop
fs
mov
pop
mov
ss
lock
xor
cmp
cmpsb
cltd
nop
pop
fiaddl
outsb
mov
sub
mov
mov
sbb
out
pop
dec
movsb
scas
pop
insb
jle
xchg
pop
pop
and
out
pop
adc
mov
jnp
nop
pop
or
scas
ret
mov
addl
jo
jno
popf
or
dec
xor
repnz
fst
lahf
scas
outsb
pop
push
mov
lea
pop
loop
pop
cmp
jo
jae
mov
add
push
sbb
sub
incl
push
out
fiaddl
mov
movsb
clc
cmpsb
outsb
aaa
mov
bound
jo
push
fidivrs
inc
pop
cwtl
int
adc
pop
add
pop
jnp
sbb
sarb
xor
sti
inc
jo
addr16
pop
std
test
push
pop
les
fdivp
push
sahf
xchg
out
cs
dec
push
mov
add
push
pop
jg
fadds
jp
int3
adc
adc
dec
xchg
xchg
fsubs
push
mov
jl
push
adc
addr16
push
fwait
and
es
push
jp
jb
icebp
inc
inc
cmp
pop
pushf
or
add
inc
jg
fs
inc
pop
imul
mov
dec
or
sbb
xchg
add
ret
mov
mov
lds
call
lds
add
cwtl
push
cld
fs
dec
adc
push
mov
push
insb
sub
push
inc
inc
mov
push
sbb
pop
xor
sbb
addr16
adc
jbe
adc
and
enter
or
andb
mov
push
aad
cld
mov
and
ljmp
dec
pop
pop
dec
aam
pop
inc
pop
cmp
jge
or
add
adc
or
outsb
lea
xor
pop
lret
xchg
push
add
fisubrl
mov
das
jg
add
enter
sti
cmp
rcll
or
cmp
inc
inc
add
gs
daa
ret
rclb
adc
mov
imul
xor
mov
testb
test
movsb
pop
pop
or
mov
pop
xor
xor
fnstenv
scas
mov
pusha
jns
add
push
jmp
or
sti
ret
jae
pop
adc
je
inc
rcrb
mov
or
icebp
jno
dec
pop
or
mov
ret
adc
dec
add
sbb
add
push
bound
push
xchg
inc
je
xchg
sbb
lcall
dec
cmc
push
test
andl
pop
or
lds
and
mov
aad
sbb
addr16
inc
push
dec
ret
hlt
mov
pop
scas
jecxz
dec
int
sbb
and
lcall
jo
movsb
xor
adc
out
ss
cld
jg
cmpb
push
pushf
dec
mov
push
jno
aaa
sub
insl
ficoms
mov
adc
push
push
int
push
cwtl
cld
jg
xor
cwtl
push
xor
cli
jg
push
adc
int3
sar
add
cli
xor
add
sbb
inc
cwtl
pop
das
xor
push
mov
fsubrl
and
mov
addr16
xorl
mov
rcll
cld
jl
sub
daa
mov
stos
jg
in
push
cmp
das
decb
hlt
bound
mov
pop
or
cmpl
das
aam
or
add
pop
add
or
xchg
cmp
sub
jle
rorb
sbb
pop
out
xor
pavgusb
pop
mov
cld
mov
int3
aas
in
stos
cs
movsb
ja
sub
add
inc
jb
pop
jno
cwtl
repnz
rcll
mov
ret
cltd
js
cmp
subl
jge
sub
repnz
inc
leave
and
movhps
pop
das
cmp
pop
and
das
lahf
xchg
dec
push
mov
loope
repz
xlat
addr16
inc
into
pop
xchg
mov
mov
push
or
movsb
adcl
mov
bound
shrl
pop
dec
ds
bound
aad
lret
aam
push
leave
cmpsl
adcb
xlat
push
inc
ds
or
int3
decb
push
xor
fwait
test
leave
mov
or
loopne
xchg
lret
out
mov
mov
orl
pop
int
lods
mov
aas
mov
daa
outsb
daa
out
movb
ficompl
mov
gs
mov
xchg
fmuls
outsb
pop
daa
mov
dec
in
data16
push
xchg
push
aad
jne
and
sti
add
inc
and
pop
test
nop
lods
pop
mov
dec
movsb
call
push
movsl
outsl
jns
mov
lods
push
in
cmpsb
popa
adcl
jg
stos
addr16
jl
pop
xchg
mov
mov
push
lahf
adc
xlat
cmc
popa
and
jo
inc
pop
dec
pop
adc
mov
sbb
iret
fstpl
mov
and
sbb
subb
pop
adc
fs
cmp
xchg
fidivrs
lcall
mov
or
fs
and
dec
outsl
inc
mull
lock
jo
mov
out
and
daa
je
or
mov
pop
inc
pop
inc
cmp
test
pushf
fidivl
inc
dec
inc
mov
dec
icebp
mov
mov
adc
mov
inc
sbb
rclb
xlat
dec
or
adc
or
push
in
les
adc
and
push
rolb
cmp
std
and
int3
mov
out
cmp
or
jno
into
xchg
xchg
mov
xor
xchg
fwait
sub
imul
xor
xor
cmp
dec
xchg
adc
push
jae
sbb
clc
lcall
inc
les
mov
pop
pop
inc
jp
pushf
dec
leave
fistps
out
les
pop
jne
jns
and
daa
xchg
push
out
mov
arpl
insb
out
lds
out
push
pop
and
jmp
adc
jnp
xor
std
jg
cltd
pop
dec
loope
outsl
gs
adc
mov
orl
jo
into
pop
jns
and
fdivrp
push
ds
sbb
jnp
and
stos
jo
pop
jae
and
negb
xorl
addl
cld
rol
leave
stos
sbb
cld
fnstenv
and
cli
shll
xlat
stos
mov
pop
sar
fiadds
daa
push
bound
rcrb
imul
int3
inc
mov
loop
cmpsw
adc
stc
pop
sbb
add
jno
adcl
pop
mov
dec
inc
xchg
or
mov
js
aad
test
or
cmp
and
ds
fsts
xor
mov
repz
pop
and
sbb
push
jo
xorb
dec
and
lock
adc
xchg
sbb
xor
pop
icebp
push
and
mov
in
xor
mov
add
push
jg
lret
je
xor
or
js
gs
outsl
inc
insl
imul
ss
or
popa
movq
insl
daa
imul
gs
and
lods
jbe
jno
cmp
inc
out
imul
adcl
inc
mov
daa
cmp
push
daa
or
les
jg
mov
cmpsb
shlb
push
dec
mov
lods
mov
inc
adc
call
dec
mov
imul
or
or
int
sub
imul
cltd
adc
push
dec
add
clc
mov
and
fwait
stc
and
dec
xchg
inc
xchg
add
popf
pop
xchg
insl
dec
pop
cld
xlat
addr16
jns
mov
and
dec
pop
aaa
test
sbb
mov
inc
outsl
out
and
sbb
stos
hlt
arpl
cmpsl
and
mov
adc
cltd
mov
cltd
dec
insb
daa
and
sub
push
jg
pop
adc
and
fsubrl
add
aas
mov
and
mov
push
adc
lods
jo
pop
out
lcall
inc
or
cs
out
stos
xchg
test
scas
aas
jp
dec
lahf
xchg
push
ficomps
mov
jae
sahf
int3
jo
ret
adc
pop
mov
bound
dec
stos
push
cwtl
sbb
cwtl
sbbl
movsl
lcall
adc
lcall
loop
sbb
test
ds
or
jg
fiaddl
or
aam
iret
sbb
xor
fnstcw
sbb
pop
lea
test
add
adc
sbb
daa
ror
jnp
mov
mov
lret
push
enter
cs
inc
mov
stos
and
mov
dec
pusha
movsb
push
inc
pop
jb
arpl
xchg
add
push
jbe
adc
or
xlat
pop
and
ds
pop
sub
xor
call
out
les
dec
je
mov
daa
clc
sub
decl
aaa
mov
mov
sub
loope
push
repnz
jmp
dec
mov
pop
enter
xchg
dec
call
jnp
xorb
aas
mov
insl
mov
jb
add
in
and
iret
pop
pop
test
sub
cmc
fisttps
in
push
pop
push
fsubs
pop
iret
fmulp
aam
mov
sub
int
outsl
xor
push
push
shl
mov
lods
jnp
hlt
cmp
mov
pop
les
pop
pop
nop
jo
mov
or
addr16
dec
pop
int3
cmp
jnp
insl
incl
jmp
fmull
in
aaa
lret
insb
push
inc
add
adc
push
shrb
test
in
inc
pop
add
inc
pop
xor
pushf
data16
lock
xor
add
fidivs
popa
push
fs
pop
add
cmp
mov
jecxz
xchg
jg
mov
negb
pop
push
nop
js
std
pop
sbb
les
jns
mov
sub
add
sub
pop
pop
shrb
or
pop
fcmovnb
es
pop
js
pop
push
cmp
push
stc
in
sbb
stos
gs
jbe
mov
mov
je
lcall
mov
mov
insb
cmp
and
shll
lret
adc
add
test
add
aam
sbb
jns
mov
sub
stos
in
pop
sahf
imul
mov
lcall
push
mov
fildll
inc
lock
pop
addb
add
xchg
dec
adc
jg
addb
cld
push
lock
adc
stos
or
or
xchg
xorb
pop
or
movsb
mov
pop
cwtl
pusha
dec
test
xchg
push
pop
fcompl
int
seto
pop
xchg
outsl
push
jmp
mov
jae
jno
sbb
out
xchg
pop
lahf
push
les
pop
mov
xor
es
xchg
int
call
loop
nop
pop
lahf
xor
pop
sbbl
or
pop
addr16
loop
lcall
sbb
jg
js
gs
mov
mov
pushf
scas
sarl
mov
xor
adc
shr
int
stos
scas
xlat
into
push
or
call
cmp
inc
adc
jl
pop
push
add
dec
jl
pop
fnop
ljmp
icebp
xchg
jno
xor
insb
std
in
je
lret
test
outsb
add
mov
xchg
sar
add
sub
xor
pushf
pop
fstps
fs
addr16
add
dec
xor
loopne
lret
pop
xor
adc
subb
dec
sbb
pop
jne
stc
daa
mov
or
fildl
jge
shrb
mov
xor
int
movsb
xchg
pusha
sub
xor
imul
stos
pop
fisttps
movsl
scas
out
aad
jns
jb
pop
jo
pop
aam
adc
or
leave
mov
aad
fcmovnb
sub
sbb
movsb
mov
faddl
pop
gs
adc
mov
dec
sbb
dec
add
ret
popf
xorl
pop
sbb
mov
fcomps
decl
ljmp
sbb
inc
cmc
dec
pop
inc
jl
call
sbb
lea
inc
mov
cmp
ja
mov
repz
dec
paddusw
or
push
inc
dec
fidivs
sti
inc
xchg
mov
push
add
jecxz
aas
out
sti
add
cmpsl
push
imul
jecxz
and
and
aad
inc
xor
mov
lret
push
or
daa
js
pop
out
orl
inc
cmpsb
sub
pop
sahf
div
aas
pop
jecxz
ficoml
movzwl
push
icebp
cld
jg
bound
in
jecxz
popa
fs
stos
nop
out
or
enter
icebp
pop
inc
mov
sub
cwtl
jo
xorb
fadd
insb
movsl
mov
sti
inc
stc
or
dec
adc
adc
or
xor
add
cld
ss
jae
jmp
rorb
pop
or
mov
imul
loope
cmp
adc
jecxz
imul
pop
xor
pop
loope
repz
mov
notl
sbb
pop
in
repnz
or
daa
add
or
adc
pop
enter
popa
inc
cmp
icebp
push
fidivrl
pop
bts
pusha
clc
push
sub
call
jb
jp
add
dec
cmp
addb
mov
fsubl
inc
or
lcall
jle
out
test
popf
jecxz
add
das
add
mov
mov
imul
mov
les
cmp
arpl
movsb
cmp
add
popa
push
fbstp
outsl
cmp
sti
rcl
sbb
cmpsb
push
jbe
subl
ja
imul
xor
dec
sub
cmp
jmp
mov
icebp
pop
pushl
or
arpl
xor
clc
insl
pop
jg
outsl
cmp
push
ljmp
cwtl
jge
arpl
ja
cmp
mov
aad
jmp
iret
leave
push
sub
sbbb
dec
fldt
cli
imul
jg
mulb
cld
adc
inc
dec
mov
adc
adc
adc
jae
xor
or
and
cwtl
push
push
inc
fisubrs
dec
dec
or
daa
stc
cmp
pop
js
loope
pop
jl
clc
ljmp
pop
pop
mov
add
xor
dec
loopne
jmp
pop
out
xchg
sub
cmp
pop
adc
push
or
movl
sbbb
fisubrs
jnp
daa
pop
call
pushf
sbb
xchg
int
notl
sub
in
gs
out
push
xor
mov
dec
push
mov
popa
lea
enter
sbb
pop
or
lock
incl
mov
add
jmp
cmp
pop
xchg
inc
cmpb
pop
lock
xchg
int3
sbb
jp
push
fnstenv
sbb
inc
sub
pop
mov
orb
jne
cmpsl
lds
push
in
int3
and
icebp
or
je
cmp
test
mov
test
cltd
mov
les
stc
and
dec
sbb
mov
mov
xchg
je
cmp
imul
pusha
es
stos
xor
and
mov
adc
push
fdivr
jae
cmp
call
sub
inc
mov
notl
call
add
push
outsl
repz
cmpsb
and
inc
int
enter
cmpl
sub
sbb
fdivrl
xor
or
inc
aam
mov
pop
rcl
dec
shl
pushf
in
pop
mov
fyl2x
in
pop
adc
xchg
ret
insb
aad
pop
out
jbe
cmp
push
ljmp
out
in
fnstcw
mov
pop
cmp
bnd
out
pop
popa
pop
andl
mov
or
push
mov
add
sub
es
cmp
lods
pop
sbb
pop
pop
cmpsb
lea
pop
mov
cltd
jg
imul
and
or
dec
js
lods
add
fucomp
fdivl
or
scas
out
mov
adc
pop
mov
mov
xor
mov
imul
jmp
pop
xor
mov
fsubl
xchg
imul
push
flds
fcmovnb
sub
lds
roll
xchg
mov
adc
mov
mov
cmp
stos
out
lcall
call
out
pop
pop
dec
sahf
sbb
mov
sub
mov
pop
stos
sahf
xchg
sbb
out
pop
fisubrl
mov
cmc
xchg
xchg
mov
add
jmp
outsb
js
lock
lahf
push
pop
jno
add
or
and
dec
pop
xchg
jno
mov
sahf
inc
mov
add
dec
sarl
mov
sbb
xchg
pop
and
mov
jp
rcrb
xor
push
pop
outsl
jge
test
lahf
sti
cmp
or
out
ret
lds
mov
xor
outsb
nop
lock
aas
cmp
sbb
leave
push
mov
repnz
xchg
enter
mov
sbb
bound
mov
mov
cpuid
stos
pop
addr16
adc
mov
jo
lret
sub
and
pop
jg
pop
sbb
add
repz
mulb
xchg
je
incb
out
push
out
mov
test
in
jge
inc
xchg
cmp
sarl
xchg
sbb
lds
ret
lcall
movsl
aas
sbb
or
push
push
call
pop
pushl
testl
lret
mov
pop
mov
sub
insl
xchg
cmp
popf
push
clc
stos
addr16
mov
xor
inc
pop
dec
es
jb
loope
xchg
mov
fucomp
add
sub
jmp
pusha
pop
add
push
and
inc
test
add
sti
dec
imul
mov
addl
pop
or
xlat
mov
mov
xor
imul
push
pop
ret
roll
in
out
int
jae
mov
lock
mov
idivl
das
stos
push
mov
pusha
pop
xor
mov
daa
jns
pop
leave
jo
jmp
sbb
test
cwtl
inc
pop
lret
cs
mov
jns
jo
mov
repz
test
inc
fdivrl
in
xor
dec
pop
xlat
inc
cmc
and
aad
fldcw
jge
mov
rcrb
pop
call
push
imul
adc
mov
sbb
test
pop
cld
xchg
and
movsb
and
cmp
dec
repnz
push
clc
sub
adc
in
and
ret
add
push
data16
loope
dec
dec
mov
pop
adc
mov
pop
outsl
xor
jle
mov
xchg
pop
je
cld
xchg
adc
into
cmp
xchg
push
mov
jbe
cmc
stos
pop
in
frstor
nopl
dec
pop
mov
mov
inc
idivl
mov
mov
pop
in
adc
push
and
fstl
stos
jb
mov
sbb
sahf
frstor
inc
in
or
cld
loope
jp
pop
dec
pop
add
xor
pop
outsl
cmp
jl
inc
outsb
cmp
sbb
cmp
nop
mov
mov
aas
fnstsw
xchg
xchg
dec
leave
jmp
ret
imul
cmpb
popa
jl
pop
in
enter
pop
std
rep
repnz
mov
mov
add
mov
les
or
mov
out
inc
push
loopne
jb
sub
andb
aaa
inc
add
pusha
repz
push
inc
pop
sub
mov
mov
add
call
addr16
push
ljmp
jb
push
xor
jbe
movsl
dec
pop
mov
push
push
lods
ret
add
mov
adc
shl
pop
xor
cmp
mov
cmc
std
add
pop
test
jl
mov
pop
and
mov
dec
insb
xchg
addr16
lcall
add
int
aam
fistl
jns
enter
xor
pop
out
daa
orb
lret
idivl
sbb
lds
push
mov
mov
dec
sbb
adc
mov
in
cmp
jmp
pop
mov
sbb
push
lock
add
cmp
enter
sub
insl
and
sbb
jg,pt
cltd
gs
or
test
or
pop
imul
or
mov
outsb
cmp
clc
daa
mov
add
sbb
sbb
stos
mov
ret
adc
or
pop
cmp
jno
jle
xchg
insb
pop
addr16
push
popl
shlb
rorl
mov
fstl
pop
addr16
pop
sub
cmp
push
call
push
movsb
inc
stos
inc
lcall
into
xchg
mov
and
subb
mov
mov
jl
je
inc
pop
int3
subl
mov
inc
pop
adc
rcll
mov
std
mov
call
add
icebp
push
xchg
in
out
in
add
mov
mov
xor
push
pop
lret
aam
sbb
sbb
shrl
out
fistl
jns
les
pop
and
xchg
stos
test
cmp
jo
add
mov
inc
push
push
lret
sbb
loop
fildl
push
cld
mov
jg
testl
fcomps
pop
sahf
imul
adc
sbb
push
or
and
int
jecxz
mov
mov
lock
out
dec
into
cmc
or
pop
cld
and
xlat
or
dec
aam
inc
adc
push
js
adc
out
inc
sbb
jp
mov
test
in
jno
add
sbb
out
pop
in
loope
pop
sbb
shll
incl
mov
push
insl
std
or
loop
imul
pop
test
and
ja
fidivs
mov
shlb
shl
pop
movsb
bound
lods
pop
lcall
aaa
imul
sarl
add
sub
mov
ss
scas
inc
cs
int
loop
xchg
inc
mov
jae
pop
stos
inc
mov
in
cmp
cmp
gs
pop
icebp
or
jp
cmp
push
mov
ret
stos
jbe
xchg
cmc
xlat
pop
fldl
and
int
or
jno
in
mov
je
es
shufps
jo
in
pop
sub
or
stos
insl
pop
pop
aam
push
imul
test
add
nop
pop
fstp
mov
pop
divl
jnp
mov
pop
dec
cmpsl
call
mov
cld
jno
les
pop
addb
pop
mov
mov
lods
pop
and
mov
add
cmpsb
adc
int3
fdiv
xchg
mov
lock
test
pop
notl
jge
pop
imul
xor
pop
stos
xchg
push
pop
jg
cmp
push
cmp
fmuls
arpl
adc
cmpsl
mov
icebp
jle
in
fidivl
sbb
push
outsb
cli
mov
cmp
add
inc
sbb
out
or
cmp
mov
pop
mov
popf
add
xchg
pop
fs
test
loopne
or
pop
insl
call
dec
dec
add
pop
fnop
outsl
xor
fidivs
mov
add
mov
adc
ljmp
in
inc
sbb
dec
sahf
call
mov
cmp
pop
arpl
aam
add
subb
xlat
fs
iret
pop
pop
and
pop
mov
es
pop
mov
inc
xchg
icebp
or
add
fiaddl
jns
pop
dec
jb
mov
pop
push
dec
push
pop
loope
cmc
ret
mulb
or
jne
mov
jbe
adc
movsl
out
les
sti
std
cmp
sbb
insl
sub
cmp
dec
mov
js
jg
cmp
bound
outsb
lret
xor
pop
dec
add
test
sbb
push
rcrl
sub
int
jnp
in
test
pusha
push
dec
add
xchg
xchg
dec
pop
ret
and
lods
cvtdq2ps
movl
cmp
repnz
mov
cld
ja
sbbl
mov
les
sahf
cmpsl
mov
pop
mov
in
xchg
mov
fildll
imul
push
pushf
pop
shlb
mov
cmp
and
sbb
ret
sbb
dec
fwait
xor
or
pushl
push
jge
xor
cmpsl
int3
push
push
pop
mov
ss
mov
sub
add
pop
lcall
adc
jne
rclb
es
inc
aas
xor
mov
rorb
pop
or
add
out
sbb
arpl
outsl
stos
adc
mov
mov
ljmp
pop
pop
cmp
xchg
lcall
and
push
imull
and
adc
sbb
lods
xchg
mov
pop
outsb
inc
pop
lds
sbb
into
jbe
addb
test
and
cmpsl
pusha
pop
adc
pop
mov
or
sub
in
fimull
rolb
iret
repnz
push
push
adc
hlt
or
cld
mov
mov
jo
aam
addb
jmp
or
dec
call
and
adc
lahf
pop
stos
les
or
cmp
dec
push
mov
mov
int3
ficoml
adc
mov
inc
xchg
cmp
xorb
pop
push
cmp
adc
jge
stc
mov
or
lods
jnp
sbb
jae
popf
inc
lea
pop
js
insb
jmp
xchg
loope
das
loop
mov
pop
mov
cmp
lret
into
xchg
mov
and
sbbb
jno
mov
pop
pop
out
jno
fdivs
jns
stc
cmp
mov
and
pop
push
decb
jp
pop
sti
dec
sbbb
xchg
or
sahf
inc
adc
pop
adc
aad
in
pop
bound
mov
and
jmp
xchg
scas
xchg
aad
adc
lds
adc
and
std
xchg
stos
jae
icebp
pop
sbb
mov
aad
shlb
bound
les
cmp
insl
aam
jmp
inc
cmp
aad
mov
add
fsubs
inc
pop
lcall
arpl
cmp
push
pop
dec
out
in
push
push
addr16
pop
add
xor
sti
rclb
adc
hlt
mov
in
movb
subl
dec
pop
test
inc
pop
pop
mov
inc
gs
nop
mov
fiadds
adc
jae
adc
loopne
sbb
jp
mov
inc
sub
mov
daa
sub
dec
repnz
mov
out
jnp
sahf
cmp
outsb
lret
push
lock
mull
out
xor
lcall
mov
aad
add
stos
adc
add
mov
inc
in
insb
out
jmp
jnp
and
mov
mov
sub
je
cld
inc
adc
shll
pop
ds
int3
sub
mov
cmp
jl
adc
pop
insl
adc
inc
or
cmpsb
pop
lea
ds
divb
shl
and
pop
inc
aam
daa
mov
mov
adc
or
pop
rcr
test
sbbb
arpl
jae
test
js
add
jbe
add
dec
and
fiaddl
icebp
out
pop
test
outsl
jb
mov
fistps
dec
movsb
pop
ret
cmpsb
fidivl
das
aad
or
les
sub
adc
and
or
mov
idivb
lds
xor
pop
imul
xchg
shl
mov
xor
cmp
cmpsl
arpl
pop
pop
rorb
pop
popf
sbb
xor
xor
push
scas
mov
jp
cld
pop
jae
jb
cmp
dec
sbb
pushf
jbe
xor
adc
arpl
dec
xchg
pop
shrb
push
aas
push
push
xor
fs
lock
add
fldenv
aad
sub
sahf
testb
push
not
fdivl
add
push
sbb
mov
cmp
bound
mov
pop
stos
mov
fadds
aaa
lods
dec
cmc
sbb
add
fcoms
popa
icebp
rcrl
pop
or
mov
jle
add
cltd
cmp
adc
jo
mov
mov
loop
dec
sub
iret
or
sub
out
mov
pop
push
outsb
stc
mov
mov
ficompl
mov
pop
inc
push
cmpl
into
jbe
sahf
sub
cmp
sbb
fs
ja
in
and
xchg
pop
mov
pop
stc
aad
mov
xlat
in
jno
sub
jmp
jo
outsl
test
shll
sub
mov
or
iret
cmp
fstps
cmp
cmp
push
sbb
mov
addr16
mov
pop
pusha
and
mov
add
out
mov
mov
clc
cld
jge
aam
int3
into
and
jecxz
push
pop
lods
inc
aas
mov
mov
pop
rorb
mov
xor
cmpb
es
insl
dec
inc
decb
addr16
adc
inc
insb
lcall
or
clc
xchg
jg
icebp
pusha
sbb
fs
inc
aaa
inc
or
or
push
jle
imul
cmp
jbe
pop
xchg
mov
jb
cmpsb
dec
add
mov
jle
cmp
outsb
jle
pop
and
xor
bnd
cmp
bound
call
and
call
cmp
xor
jge
pushf
pop
fwait
cmp
sbb
loope
mov
mov
fsubl
sub
mov
cmpsb
jno
cmp
es
pop
lea
xchg
inc
add
cmpsl
test
idivb
or
stos
add
roll
pushl
mov
cmpsb
leave
out
cltd
pop
pop
aam
mov
jge
dec
pop
pop
mov
push
mov
mov
cwtl
push
pop
pop
add
andb
aam
sti
pop
sbb
hlt
pop
jb
pop
pop
or
mov
mov
and
mov
dec
push
pop
inc
loope
jecxz
sbb
pop
popf
repz
test
mov
fsubr
pop
outsb
out
sbb
add
cld
fbld
cmp
cmpsb
nop
cmp
outsl
xor
lret
xchg
xor
lcall
mov
sub
cld
mov
in
mov
mov
les
pop
or
adc
outsb
pop
fnstsw
mov
imul
repz
std
stos
pop
bound
sahf
mov
push
popl
loop
inc
in
cmp
leave
pop
mov
dec
cwtl
js
dec
ret
mov
pop
call
cwtl
aad
lcall
shrl
jns
sti
in
cwtl
jo
dec
inc
andl
or
jnp
sbb
jl
mov
jns
mov
jg
cli
jl
filds
xor
dec
shll
enter
inc
inc
pop
cmp
lods
push
in
scas
idivb
sub
pop
nop
lcall
repz
mov
dec
in
mov
enter
ljmp
pmullw
fisubl
xchg
add
and
cwtl
sub
fcomps
adc
mov
rclb
je
mov
cmpsl
lock
sbb
push
scas
fdiv
push
fnstcw
add
cmp
cs
outsl
insl
sub
jecxz
js
sbb
push
cmpsb
add
inc
enter
adc
pop
in
sub
pop
jl
decl
push
jmp
dec
pop
sahf
mov
loop
push
lcall
das
div
push
pop
add
mov
jl
push
popa
cli
xor
add
dec
int
dec
jmp
adc
repnz
inc
xchg
das
bound
je
call
fmull
push
cs
mov
pop
lock
pop
mov
dec
test
and
and
addl
pop
sbb
mov
notl
lmsw
rcpps
xchg
xchg
jne
pop
scas
fisubl
mov
mov
insl
lods
in
or
in
lcall
popl
js
aaa
sub
push
subl
pop
fldenv
adc
and
test
imul
mov
mov
add
das
imul
fsubs
hlt
gs
ja
gs
dec
subb
mov
adc
lods
pushf
icebp
add
jo
inc
ja
lret
lock
add
inc
sbb
push
pop
mov
add
daa
sub
lahf
adc
pop
jg
inc
xchg
scas
jl
decb
cli
shll
jae
stos
mov
out
cmp
ret
sub
or
adc
mov
call
push
add
mov
push
repnz
rclb
dec
ds
lcall
dec
adc
push
movb
in
test
cwtl
mov
lods
ja
nopl
jl
xor
inc
inc
adc
daa
fwait
pop
sbb
inc
inc
stc
or
aas
inc
cmp
mov
add
sbb
fisubrl
movl
ja
sbb
pop
sub
hlt
mov
dec
push
mov
xchg
dec
xor
js
sbb
dec
pushf
daa
inc
and
cmp
pop
adc
xchg
out
push
add
paddusb
jl
cwtl
je
pshufw
push
cs
cmp
sub
vphsubwd
ja
pop
data16
lods
pusha
in
mov
adc
push
aaa
ja
mov
js
lods
inc
movsl
cmpsl
and
push
roll
popw
fcom
xchg
mov
cmc
sub
sub
shll
out
jno
pop
into
jo
jo
push
lea
ljmp
mov
movsb
mov
das
sub
and
fmull
ja
fwait
aam
rclb
sar
scas
test
nop
lcall
lock
xorl
push
lea
enter
or
lret
lcall
mov
subb
test
push
cmp
in
repz
jmp
bound
testb
repnz
sti
ficompl
cmpsl
outsb
mov
les
or
aaa
leave
mov
fstl
pop
adc
cmp
shrb
daa
or
in
jnp
pop
mov
cmc
sbb
pop
add
pop
or
fistpl
add
inc
inc
in
pusha
or
loopne
enter
cmp
push
test
sub
cli
xor
mov
cmp
inc
push
add
pop
imul
add
push
or
sbb
ret
sbb
rdpmc
std
add
add
inc
movq
pop
int3
addl
dec
test
mov
fldenv
pop
sbb
sbb
mov
push
sub
push
xchg
pop
inc
lea
imul
push
mov
into
sbb
fldenv
sbb
andl
or
mov
mov
test
jb
jns
addb
or
or
sbbl
jae
xorl
pushf
nop
cmpsl
mov
subl
fldenv
pop
inc
sbb
and
pop
xchg
pop
push
daa
pop
sbb
sub
mov
out
push
call
pop
adcl
push
mov
add
mov
mov
out
xchg
push
stos
mov
les
cmpb
lcall
ljmp
fcomps
insb
xchg
xchg
insb
dec
add
add
sbb
loopne
movsl
and
cmp
mov
ljmp
jp
loop
addb
inc
mov
xchg
jecxz
xor
aas
dec
cwtl
fbld
jbe
mov
jle
mov
fcoms
push
lods
test
fwait
pop
xchg
push
je
pushf
mov
add
test
jne
pop
fwait
add
mov
stos
mov
adc
pop
jb
aaa
inc
movd
in
rclb
dec
test
mov
movsb
sbb
iret
mov
cmp
mov
dec
movsb
aas
xor
cmp
mov
inc
insl
cwtl
lcall
xchg
cli
xlat
push
pop
mov
inc
je
test
out
push
add
push
xor
lods
push
mov
sbb
imul
lods
xchg
push
push
popa
mov
inc
jmp
sarb
ja
dec
scas
add
imulb
sbb
push
lods
test
pop
inc
or
mov
stos
adc
dec
dec
mov
jb
inc
aas
xchg
pop
inc
pushf
mov
xchg
mov
adc
fs
dec
mov
pcmpgtb
push
pcmpeqd
test
push
aas
mov
fnstcw
and
xor
mov
lcall
inc
mov
mov
mov
pop
scas
cmpsl
cmp
jae
cmc
in
in
das
jo
sbb
mov
push
enter
das
pop
shl
les
add
push
inc
pop
or
scas
fs
negl
lds
jecxz
add
cmp
jae
adc
movsl
and
cld
or
and
sub
mov
or
sbb
mov
add
or
test
and
les
jno
push
cmp
mov
cltd
repnz
mov
push
lods
cmp
test
rorl
pop
cmp
sub
pop
insb
mov
mov
sti
add
jo
xlat
repnz
and
jmp
daa
and
ljmp
or
out
lods
fistpll
stc
pusha
loopne
bound
mov
pop
jnp
or
push
pop
popf
jbe
jg
stos
pop
xor
xchg
pop
mov
flds
movsl
call
ss
push
jg
adc
in
xchg
movb
sbb
aad
pop
loope
mov
jae,pt
sub
push
mov
gs
adc
lods
mov
mov
test
push
or
cmp
pop
and
sbb
mov
rcrb
test
push
testl
mov
and
pop
inc
into
mov
dec
or
lds
inc
cwtl
cmp
xor
xchg
or
ffree
test
mov
call
in
jp
sahf
inc
call
mov
std
xor
mov
adc
mov
sbb
mov
test
cld
pop
out
decl
dec
xor
int
pop
push
out
pop
pop
pop
mov
insb
adc
push
inc
mov
aam
sahf
and
es
or
sets
int
add
sbb
push
mov
cmpb
push
mov
mov
in
enter
xchg
sub
imul
int
inc
sbb
mulb
pushf
dec
pop
xchg
pushl
cmp
nop
cmpsl
sbb
fmuls
adc
pop
mov
movsl
inc
or
outsl
dec
test
adcl
orb
or
in
and
enter
dec
and
push
fs
jp
sub
mov
pop
pop
pop
movsl
mov
mov
mov
arpl
addl
mov
xchg
push
adcb
int3
popf
ds
jge
es
mov
adc
wbinvd
pop
mov
lock
cld
cmp
sbb
sbb
lret
cmpl
in
lock
popf
movsb
add
shl
mov
test
insb
mov
jl
rclb
aam
xchg
xchg
jge
ja
loope
jb
pop
mov
js
cmp
insb
add
ja
and
ret
cmp
adc
aam
or
push
dec
cltd
pop
loop
inc
mov
test
stc
sbb
push
dec
mov
inc
sbb
aas
xchg
call
xlat
sbb
lea
inc
shlb
lahf
fld
sarl
iret
and
and
iret
sbb
out
sub
xchg
and
lcall
jne
popa
inc
add
pop
clc
xchg
add
movsb
xchg
pop
pop
loop
push
inc
dec
and
mov
and
mov
mov
sub
pop
mov
mov
in
push
push
xchg
cld
repnz
cmp
and
jg
jp
mov
std
sbb
and
jecxz
stos
inc
pop
pop
inc
ret
subl
push
mov
jo
or
popf
xchg
rcll
push
cmp
popa
cmp
and
and
mov
aas
inc
pop
xor
inc
lods
icebp
testb
lods
icebp
lock
mov
dec
lea
mov
repz
shlb
push
sbb
mov
aam
cltd
inc
das
xor
ljmp
popa
insb
adc
cwtl
add
ja
daa
fldenv
inc
sub
xlat
addb
or
dec
lcall
test
add
add
icebp
std
cmp
lahf
testl
ss
popa
into
lock
cwtl
pop
repnz
call
mov
push
and
aad
rorb
pop
mov
test
in
pop
in
jno
xchg
xlat
mov
jnp
ss
mov
push
xchg
popa
gs
or
sub
mov
fidivrl
inc
mov
pop
inc
mov
jae
pop
lcall
push
add
es
pop
rorb
outsl
rcrl
cmpsb
cmc
sbb
stos
stos
fistpl
add
insl
xchg
imul
leave
repnz
pop
stos
mov
jae
sub
xchg
adc
mov
fcoms
pop
aad
dec
xchg
xor
add
push
jnp
clc
xchg
pop
inc
sub
shrl
mov
jmp
stos
call
sub
xor
mov
inc
xor
cmp
fldl
cwtl
inc
xor
adc
repnz
shlb
adc
xchg
or
dec
lcall
pushl
pop
xchg
jg
dec
cmp
fcompl
adc
outsl
push
sub
add
pop
inc
ja
mov
pop
jle
xlat
xchg
loope
sarb
sub
pop
dec
mov
stos
jge
sbb
imul
iret
testb
aad
cmp
orb
rcll
xchg
and
sbb
scas
mov
int
cmc
std
jne
adc
jmp
sub
lret
fcomps
lds
pop
jnp
mov
insb
incb
fisubl
enter
repnz
push
test
xor
mov
xchg
jge
mov
mov
mov
sbb
pop
inc
cmp
or
xor
jo
xor
aas
ja
inc
sbb
ja
movl
iret
imul
mov
loop
jge
into
add
mov
mov
testl
jb
xchg
mov
jmp
or
mov
pop
testl
ficompl
inc
xchg
rcll
pop
ljmp
push
gs
pop
inc
inc
and
inc
add
and
adc
fildl
sbb
push
mov
pop
cwtl
aam
out
outsb
loop
add
push
orl
scas
movsl
pop
je
mov
add
add
add
pushf
aad
leave
icebp
dec
add
push
scas
xor
xchg
mov
jbe
orb
mov
xchg
xchg
fwait
pop
and
scas
dec
mov
je
fs
xchg
inc
fnstsw
arpl
lret
inc
int3
mov
xchg
push
ja
mov
int
call
pop
pop
mov
mov
adcb
jne
add
and
push
cmp
jl
stos
mov
enter
imul
mov
mov
in
ficomps
add
adc
adc
xchg
wbinvd
push
jg
lds
xchg
push
adc
pop
lret
cltd
add
mov
hlt
stos
push
dec
clc
jae
inc
push
jmp
and
inc
mov
cmp
pop
lret
cmpsl
mov
pop
mov
xor
je
dec
rorb
icebp
rcll
mov
pop
pop
mov
dec
jle
stos
pop
mov
jge
adc
push
pop
lock
sub
xchg
xchg
gs
mov
lahf
test
lea
call
add
adc
movb
or
les
js
fld
rorb
ss
fsub
pop
pop
lret
bound
outsb
jle
pop
pop
imul
xchg
mov
sbb
sub
cmc
cmpsl
jno
repz
or
xchg
in
arpl
test
les
pop
dec
lock
movsb
inc
je
fildl
out
mov
les
mov
aas
in
add
pop
imul
stos
aad
xor
int3
add
push
mov
jge
mov
push
mov
test
and
xor
jmp
dec
test
cmpsl
stos
outsb
pop
pusha
push
mov
xor
sbb
mov
insb
xlat
fcoml
jmp
lock
pop
jg
inc
shrl
pop
je
jle
pop
push
cmp
sbb
popf
jo
orb
addr16
jb
mov
mov
scas
lds
adc
lods
lea
js
pop
jnp
int3
dec
pop
mov
mov
mov
sbb
shrb
sbbb
mov
xor
pop
insl
jns
aam
pop
dec
and
xchg
push
lahf
sahf
pop
int3
mov
or
adc
sysret
xchg
add
cmp
cld
mov
or
flds
in
push
loopne
and
pop
xor
ret
jge
xchg
fistps
sub
lds
sub
push
icebp
sub
idivb
sbb
js
or
jl
cmp
mov
aam
out
int3
jb
pop
inc
dec
stc
iret
mov
inc
mov
lea
roll
stos
push
shlb
pop
mov
sub
pop
push
jp
mov
add
dec
data16
jbe
add
pop
or
push
mov
inc
mov
push
out
and
xor
dec
sub
pop
iret
adc
cmpsb
xchg
pop
int3
or
test
xorl
mov
in
sti
pop
push
jo
pop
incl
fisubrs
insl
cmc
jle
push
ficoml
fbstp
mov
add
shrl
pop
or
movsl
repnz
adc
pop
jb
outsb
rcrl
mov
push
pop
mov
jg
inc
pop
data16
bound
fdivp
pop
cmp
shll
jg
dec
mov
xlat
stos
jnp
jb
fs
test
mov
push
mov
lock
pop
lods
push
pushl
jne
cmpl
and
les
xor
inc
jo
mov
pop
cmp
dec
add
insl
or
mov
xchg
mov
je
flds
jl
pop
pop
dec
aad
sbb
mov
lret
lods
clc
daa
sahf
gs
enter
xchg
jge
test
sbbb
pop
dec
and
rcll
or
xchg
jb
insb
movsb
fcomps
xor
pop
lea
std
xchg
andb
inc
mov
cmc
sbb
dec
mov
cmp
std
addr16
movsl
adc
xchg
push
cmp
cmp
out
andl
out
inc
clc
pop
addb
mov
xor
pop
sahf
pop
ficoms
test
dec
lea
pop
ret
add
add
lock
incl
jl
pushl
sbb
sarb
mov
fs
loop
aad
mov
pop
mov
popa
popf
out
pop
inc
and
mov
dec
int
sbb
sbb
dec
js
or
pop
push
pop
ds
pop
mov
sbb
dec
outsb
movsb
pop
into
popf
subl
mov
roll
lcall
roll
jo
aad
mov
cmp
cmc
repnz
call
hlt
mov
sbb
in
fsubp
mov
pusha
sub
add
scas
sbb
pop
inc
mov
pop
nop
add
push
sbb
mov
out
push
popf
xchg
inc
mov
cmpl
lock
fs
loope
popw
push
stos
rcll
inc
lds
cmp
loopne
mov
add
pop
lea
mov
adc
inc
movsb
mov
xor
into
aad
inc
xor
out
cmp
pop
mov
dec
int
xor
adc
aam
ficompl
cmp
cmp
lret
out
and
or
subb
call
jecxz
xor
push
enter
cmpsb
lea
xchg
push
inc
pop
xchg
fwait
cmp
fsubrl
pop
cmpsl
adc
pop
push
test
call
cli
mov
int
aam
imulb
insl
cltd
inc
sti
add
pusha
or
aam
or
out
sub
xchg
insb
rcll
adc
test
inc
push
inc
xchg
mov
mov
adc
and
mov
movsl
call
dec
mov
xchg
imul
xchg
mov
add
add
sub
xchg
mov
pop
sbb
ja
or
mov
pop
mov
mov
or
bound
mov
jno
out
pop
mov
cmpsb
lret
out
cltd
adc
jnp
out
push
xor
cmp
sub
xor
rcl
mov
addb
and
loopne
fsubrs
scas
aad
jne
out
dec
pop
inc
add
and
cmp
mov
sub
jp
inc
sbb
andl
push
mov
adcb
push
jp
pop
addl
js
pop
jle
sti
dec
mov
dec
push
jp
aad
adc
and
inc
inc
pop
js
mov
out
daa
aad
xchg
cmp
jne
dec
ljmp
push
mov
mov
ds
jmp
push
daa
jle
xor
fwait
push
inc
jo
nop
jp
lds
pop
pop
cld
dec
push
stos
pop
mov
xor
pushf
stos
xchg
dec
pop
jge
cld
ret
lods
lods
mov
and
lods
jb
cld
sbb
fisubl
cwtl
jmp
push
pop
push
add
xchg
mov
or
push
push
push
pop
fbld
push
pop
inc
push
pop
dec
les
inc
addb
xor
pop
push
les
pop
dec
mov
inc
ja
push
push
push
and
test
pop
push
inc
or
xchg
fcomps
fisttps
inc
mov
stos
xchg
push
inc
add
test
ds
ja
orl
push
test
pop
sbb
iret
push
neg
loop
push
xor
adc
adc
pop
push
dec
lea
inc
adc
or
stos
jecxz
pop
fldt
push
sbb
jo
pushf
push
mov
inc
ja
push
inc
jp
fimull
and
sub
pop
arpl
cmp
pop
inc
adc
xchg
fs
enter
ret
xchg
dec
inc
daa
movsl
and
das
mov
ljmp
sub
jg
and
mov
into
aad
outsl
push
outsl
andl
pop
xchg
or
jno
test
icebp
pop
add
loopne
add
cwtl
hlt
or
mov
pop
push
mov
sbb
push
sub
ret
adc
es
jno
add
dec
and
fsubrs
in
and
addb
xor
dec
mov
lods
sbb
pop
pop
in
aaa
js
cmpsl
add
pop
pop
jae
fnsave
mov
jb
pop
ds
out
sbb
jg
or
call
cltd
add
xorb
lret
insb
popa
sbb
dec
outsb
inc
fdivrl
mulb
in
pcmpeqw
adc
aad
and
and
test
mov
test
shll
pop
adc
icebp
sbb
lea
pop
adc
or
out
adc
fildl
faddl
jnp
dec
imul
mov
cmc
fs
es
pop
in
stc
push
push
xor
sbb
outsb
cwtl
cltd
ret
sti
jnp
lock
out
sbb
clc
testl
adc
push
add
jp
out
mov
add
ds
adc
or
dec
mov
dec
loop
dec
xor
and
push
inc
nop
ror
jp
jne
test
add
pusha
sbb
jo
sbb
mov
ss
push
test
dec
shll
mov
mov
aas
pop
pop
mov
in
das
popw
pusha
arpl
clc
popa
inc
mov
mov
cmp
in
sbb
call
dec
dec
inc
lods
add
mov
enter
xchg
stos
fwait
lods
rclb
fisubs
pop
dec
sub
ja
outsb
movsb
pop
pop
aam
xlat
xor
pop
jo
lods
adc
arpl
sbb
jae
movb
cld
adc
pop
jl
dec
imull
xchg
mov
in
cmc
inc
icebp
jle
les
adc
push
inc
pop
pop
inc
xor
data16
pop
lret
add
and
inc
ljmp
sbb
jp
pop
js
shll
es
pop
std
jmp
icebp
loope
fld
in
xchg
lret
dec
pop
popf
rcr
nop
es
ds
adc
or
mov
or
sahf
pushl
cmp
imul
push
jg
jnp
icebp
pop
inc
subb
dec
jae
xor
mov
scas
pop
pop
out
mov
outsb
jl
mov
or
cltd
inc
lds
daa
mov
pop
stc
add
fcompp
clc
pop
pop
or
sti
and
sbb
or
fs
outsb
adc
mov
pushf
mov
jo
iret
les
ffreep
push
dec
testl
int
jne
cmp
dec
inc
xchg
pop
pop
mov
mov
pop
xchg
sbb
sbb
icebp
aad
pop
in
inc
push
test
dec
xchg
pop
xor
xor
jb
mov
jmp
sbb
cmp
lahf
pop
push
cmp
pop
cmpsl
movsb
sbb
jp
pop
stc
aas
cmp
aad
or
xor
mov
pop
fisttpll
repz
rcrb
jo
mov
add
sbb
add
lcall
std
inc
aam
mov
mov
pop
dec
data16
in
adc
loope
or
pop
xchg
in
cmpsd
scas
orl
cmp
jns
mov
pop
dec
jl
stc
inc
cmpsb
adcb
sub
jo
popa
orl
sbb
adc
adc
sub
xor
sbb
mov
dec
push
pop
mov
mov
pop
mov
cmp
movsb
or
jb
sbbl
sbb
daa
push
jno
scas
sbb
inc
pop
jo
in
jmp
pop
jmp
sbb
dec
cmpsl
xor
sbb
mov
pusha
cmpsb
fdivp
pop
add
sahf
ret
add
mov
addr16
xchg
add
sub
push
lds
sbb
lods
lock
loope
test
in
mov
pop
hlt
ret
lea
add
xchg
testl
int3
pop
cmpsl
push
jb
ret
in
loop
lcall
rclb
or
pop
mov
out
loop
call
stc
das
adc
dec
pusha
mov
xchg
adc
jp
lahf
inc
test
mov
pop
pop
movl
sub
outsb
arpl
or
pop
shr
rol
imul
sbb
test
sbb
and
shrb
pop
pop
imul
movsl
inc
cmp
negl
add
icebp
roll
jge
inc
pop
xor
sti
xor
stos
pop
fisubrs
roll
jg
pop
mul
ficoml
adc
inc
jno
mov
shlb
scas
jge
mov
cs
xchg
pop
pop
sbb
int3
fisttpll
inc
xchg
or
fcomps
cltd
adc
xchg
ret
and
ljmp
shrl
aad
jns
inc
add
int3
xor
sub
push
mov
cld
popf
add
arpl
and
jae
lds
jge
adc
lds
pop
cld
xor
push
insl
mov
aaa
sub
out
es
mov
test
mov
sti
cmp
mov
inc
dec
fdivrl
lret
mov
and
sbb
xchg
and
enter
outsl
pop
xchg
lahf
jle
pop
lret
into
sub
jae
xchg
pop
divl
fisubs
mov
das
inc
cmp
sbb
test
sbb
scas
inc
cmp
int3
jbe
pop
pop
fimull
out
fidivs
aam
in
pop
loop
mov
dec
ss
push
jno
jmp
lcall
lahf
pop
fbld
add
out
inc
adc
shlb
pop
push
cmp
sub
dec
imulb
decb
idivl
repnz
fidivrs
imul
pop
xor
add
pop
loop
stc
sub
dec
sub
ds
mull
jno
and
xchg
aad
or
daa
pop
outsb
ret
jp
lcall
push
loopne
mov
jmp
xchg
bound
cmp
inc
inc
pusha
or
lcallw
movsb
aas
mov
jmp
scas
lods
cltd
fsubs
js
inc
loop
int3
adc
lea
inc
clc
sti
push
jo
xorl
test
outsb
addb
in
fnsave
roll
inc
add
sbb
ja
adc
xor
cmp
das
mov
xchg
push
pusha
xchg
inc
sbb
add
test
push
fsubl
inc
xchg
fwait
xor
sbb
repnz
call
cltd
sub
fcomps
sub
mov
jle
aaa
shrb
pushf
add
inc
arpl
adc
mov
sub
out
je
aam
inc
daa
push
sub
cwtl
push
inc
pop
mov
pop
push
jp
jno
addb
pop
and
or
out
pusha
xor
and
pop
shlb
jp
inc
aas
pop
pushw
and
inc
pop
pop
addr16
push
imul
pushf
jns
pop
mov
pop
lods
jb
push
cmpb
adc
stc
cmpsb
addr16
pop
arpl
cmp
xchg
mov
pusha
inc
jb
xchg
add
ljmp
add
sahf
mov
addb
push
jg
pop
mov
ljmp
iret
pop
xchg
jp
movsl
jne
fwait
pop
mov
adc
jne
mov
les
xchg
ja
mov
mov
add
mov
ret
ja
aas
mov
sbb
fildll
data16
imul
jo
pop
mov
pushf
mov
movsb
and
xchg
pop
nop
test
insl
push
nop
daa
call
mov
or
mov
lods
mov
mov
and
fcompl
jle
lods
fcoms
mov
sbb
inc
pop
rcrb
sbb
das
adc
cmpsb
mov
or
fwait
ljmp
add
cld
or
pop
pop
rorl
andb
inc
inc
fldcw
out
pusha
test
sbb
std
popf
lds
leave
aad
jb
jne
mov
push
and
lret
add
pop
mov
adc
and
adcl
bound
ja
jo
mov
mov
jl
movsb
add
adc
ja
or
sbb
inc
lcall
cli
les
pop
pushf
orl
cmc
cld
scas
cmc
roll
pop
lcall
mov
pop
mov
xor
shrl
daa
rorb
mov
rcrl
push
subl
dec
das
mov
mov
fwait
push
or
sub
ljmp
xchg
movsl
test
aas
fisubl
sbb
enter
cli
push
test
sub
imul
addr16
cld
mov
aaa
adc
jg
adc
jb
xchg
mov
lret
pop
iret
jle
subl
mov
gs
dec
cmp
in
rcl
dec
aaa
shll
out
xor
add
scas
lea
dec
fnop
cli
mov
les
sub
push
cld
nop
cli
or
jo
mov
cli
stos
add
xor
aas
sbb
dec
xor
or
mov
sbb
stc
fists
dec
aaa
add
movsb
bound
out
inc
leave
and
jmp
push
add
mov
add
or
pop
ret
mov
scas
push
push
jbe
mov
dec
mov
adc
mov
lds
aas
pop
mov
mov
aaa
adc
jns
jno
adcb
jns
cmp
pop
xchg
add
repz
jp
inc
sbb
repz
adc
and
mov
pusha
push
and
es
dec
notl
xor
sti
cs
and
cmpl
mov
mov
ret
inc
aaa
imul
sbb
dec
out
pop
movsl
adc
stc
ss
cmpsl
inc
sub
sbb
popf
jno
or
orb
in
adc
or
cmp
xchg
cmpsb
xchg
or
mov
scas
jnp
xchg
ret
add
or
ficompl
jecxz
mov
jg
sbb
pop
mov
das
sbb
mov
in
vandnps
and
enter
mov
les
daa
pushf
setb
cmp
iret
or
inc
cmp
fdivrs
out
pop
add
mov
mov
inc
push
adc
rorb
cmp
inc
adc
jne
mov
add
shrb
or
mov
push
jp
push
sub
and
adc
sbb
inc
pop
ffree
or
push
pop
mov
jl
repnz
adc
dec
pop
les
movswl
mov
and
mov
push
scas
mov
rolb
or
jmp
rolb
cli
stos
repnz
shll
fwait
pushf
fcoml
push
jae
cmp
mov
pop
xor
sbb
mov
enter
sbb
adc
adc
pmullw
into
imul
jno
je
add
ds
xor
xor
cmp
jmp
in
adc
push
icebp
lock
fcomps
mov
hlt
lea
loop
pop
out
sbb
loope
es
enter
xor
inc
fldenv
sub
mov
cmpsl
push
lcall
push
orl
jge
mov
andl
pop
xchg
xchg
aam
pop
stos
adc
sbb
cmp
adc
pop
daa
or
or
xchg
or
aas
or
cli
pop
sub
jnp
cmp
pop
cwtl
pop
iret
adcl
jns
daa
mov
mov
daa
adc
ret
and
mov
push
inc
arpl
daa
mov
mov
and
mov
arpl
add
movsb
or
mov
sub
sbb
push
push
pop
mov
pusha
addr16
notb
inc
stos
push
and
cmp
inc
lods
ljmp
mov
bound
andb
pop
ja
xor
pop
or
fwait
jecxz
mov
mov
or
popf
push
adc
pop
lahf
sbb
sub
int
int
hlt
les
sti
adc
sub
mov
int3
adc
jbe
fwait
pop
xor
push
jp
and
ljmp
pop
std
int3
das
adc
cmpsl
dec
lcall
and
lock
sub
imul
arpl
or
aam
insb
test
jl
pushf
das
test
fldt
cld
aad
fisttpl
incl
mov
push
fnsave
and
sbb
or
add
or
shll
and
lock
shll
or
or
aad
or
or
iret
pop
xlat
les
cmp
and
dec
mov
xor
inc
xor
nop
or
lret
ja
or
mov
mov
aas
cmp
pop
arpl
aas
cmpl
cmp
inc
cmp
xor
cmp
jp
test
lds
inc
pop
jno
inc
jno
inc
outsl
mov
mov
in
xor
mov
inc
daa
fistps
xchg
mov
in
and
xlat
das
mov
jmp
dec
inc
mov
daa
dec
jo
add
pop
mov
cltd
add
arpl
xchg
sbb
les
cmc
repnz
pop
pushf
xchg
sbb
popf
pop
fisttpll
and
mov
sbb
mov
nop
sbb
and
rorb
hlt
daa
xchg
adc
xor
xlat
or
push
and
cmp
inc
psubusw
sub
hlt
pop
push
inc
push
jnp
inc
dec
or
pop
out
or
pop
pop
pop
pop
out
stos
sub
int
iret
inc
pop
push
insb
pop
and
add
in
add
mov
adc
push
mov
and
xor
pop
mov
sbb
pop
cmp
jns
mov
pop
adc
sti
push
ja
xchg
inc
cltd
xchg
es
cli
inc
and
std
mov
lock
mov
jno
addb
imul
inc
es
mov
adc
mov
addr16
jo
stos
popa
and
jp
mov
push
in
mov
xchg
sub
arpl
mov
push
jne
adc
or
jbe
mov
out
cmpsb
mov
push
shlb
mov
push
mov
sbb
xor
idivb
adcb
movsb
jp
cld
bound
fcoml
stos
hlt
lcall
mov
sti
lock
stos
orl
mov
add
lahf
aaa
dec
dec
call
pop
orl
add
jp
pop
repnz
out
xorl
and
scas
pusha
adc
daa
out
movsl
outsb
pop
adc
aaa
mov
repnz
jo
push
or
lea
imul
ret
push
cmp
xchg
jae
out
xchg
int
rcrb
push
pop
pop
jne
and
and
ss
sbb
mov
pop
in
adcl
pusha
mov
je
jne
pop
pop
dec
push
lahf
push
or
movsl
mov
repnz
inc
push
pop
adc
adc
out
or
outsl
inc
pop
mov
mov
xlat
ret
insl
adc
out
sldt
dec
popa
pop
dec
out
dec
xchg
gs
mov
pop
jle
in
mov
jle
outsb
dec
mov
push
arpl
xor
jle
push
xchg
ficoms
enter
dec
arpl
lods
pushf
inc
mov
cmpsb
push
das
das
iret
mov
ror
fwait
xlat
push
arpl
push
test
sub
pop
inc
add
rclb
pop
or
dec
popa
mov
out
dec
clc
lret
xor
and
jl
push
leave
pop
adc
mov
out
inc
fdivrs
inc
pop
ss
loopne
xchg
fcmovne
add
dec
out
jns
inc
sahf
icebp
and
inc
orl
jo
nop
sbb
adc
pop
dec
lea
sub
iret
push
add
aaa
or
mov
in
jae
iret
mov
add
add
cmp
add
in
xchg
xor
cmpsb
movsl
dec
push
cmp
push
das
and
aaa
sbbl
dec
lods
sbb
scas
xor
push
inc
or
cwtl
dec
xor
jge
push
and
lods
mov
das
push
xor
nop
add
sbb
dec
xor
xor
cmp
jb
daa
pop
stos
pop
jg
insl
xlat
cmp
pop
cmp
sbbl
add
cmovae
sub
sub
adc
pop
inc
or
int
push
cmp
orl
pop
lods
mov
inc
jbe
js
dec
pop
dec
or
mov
adc
dec
push
ficoms
xlat
and
cli
test
xor
and
push
fisubrs
pop
inc
pop
loop
sbb
enter
cs
mov
test
das
sbb
daa
sub
cli
into
cmp
or
xchg
lods
inc
imul
sub
sbb
popa
mov
xchg
add
mov
or
sub
sbb
add
test
lcall
stc
jb
mov
cmp
xor
sti
mov
pop
xor
push
or
push
cmp
jnp
dec
sub
mov
dec
and
stos
inc
add
int
int
lods
and
inc
je
mov
dec
and
mov
daa
mov
add
push
or
sub
int3
xor
es
dec
sub
dec
out
cs
cli
push
inc
leave
inc
adc
dec
or
out
gs
or
xchg
popl
mov
loope
or
jecxz
lret
fistps
add
add
adc
scas
adcl
movhps
out
push
pop
jo
rcll
mov
pop
gs
pop
xchg
outsl
lcall
mov
xor
out
iret
ret
pop
or
idivb
jnp
addl
jg
lret
or
sbb
or
pop
sbb
mov
cli
jne
add
notb
jno
mov
add
fisubrl
pop
inc
arpl
std
sbb
mov
pop
add
aad
pusha
mov
or
arpl
mov
jmp
arpl
or
cmp
and
scas
adc
jp
add
mov
daa
jge
out
jg
add
xchg
mov
pusha
in
ja
push
lahf
push
ss
arpl
add
movsb
ucomiss
push
or
jno
mov
sub
sbb
xchg
popa
insb
stc
and
fadds
mov
push
jg
or
rclb
pop
cmpl
inc
or
negl
and
cmpsb
jg
movsl
jg
push
daa
or
adc
jg
iret
movsb
xor
mov
sbbl
mov
mulb
popf
push
imul
mov
push
imul
lcall
ja
xchg
ja
push
jno
sub
push
jb
pop
mov
movsb
xlat
and
pop
insl
or
in
mov
ja
ja
out
adc
divps
in
and
scas
aad
aas
mov
mov
pop
or
out
mov
and
pop
mov
pop
ja
sub
mov
jbe
pushf
mov
pop
movsl
push
add
push
pop
pop
dec
outsb
xchg
popf
or
pop
cmpl
loopne
pop
sahf
cs
mov
push
add
orl
xchg
loopne
imul
push
add
sbb
cmp
pop
in
imul
fldl
lahf
add
aad
pop
dec
push
inc
mov
test
push
popl
add
aas
mov
sub
xchg
lret
xor
push
pop
repz
shrl
rcrl
dec
decb
jae
out
add
adc
and
xchg
ret
cltd
stc
icebp
push
and
jno
inc
jg
jne
adc
xor
cmp
fisttpl
inc
idivl
mov
and
and
in
vpsrlq
xor
inc
arpl
dec
inc
lahf
or
lds
mov
and
and
dec
or
mov
out
ds
iret
or
sub
add
dec
adc
sub
or
xlat
vsqrtsd
xchg
arpl
adc
arpl
cmp
pop
test
mov
daa
adc
sbb
fildll
add
adc
sub
pop
out
sbb
inc
cmp
inc
push
fwait
pop
popa
insl
add
pop
add
or
inc
sbb
xor
stc
clc
jg
mov
out
pop
jno
bnd
ds
cltd
mov
cmp
fisubs
pop
xor
xchg
inc
iret
cmpsl
dec
xchg
loop
pop
mov
test
mov
ret
call
std
push
out
adc
bound
out
dec
lock
xor
mov
and
popf
jg
pop
sbb
stos
pop
and
je
xchg
loop
xor
cmp
in
sbb
mov
scas
cmp
lret
push
inc
testl
push
pop
ret
mov
mov
xchg
sbb
adc
ffree
aam
pop
jmp
lods
mov
nop
push
push
lock
call
pop
mov
mov
outsb
pop
cmp
icebp
mov
test
in
dec
xchg
mov
cmp
mov
incl
mov
jmp
mov
lcall
sub
filds
xor
or
lret
pop
or
pop
pop
sbb
or
adc
outsb
jmp
pop
lods
fisubl
mov
push
adc
push
mov
add
in
jle
cmpb
outsb
push
add
mov
pop
sarl
mov
cld
pop
in
aad
nop
adc
add
push
xchg
lret
pop
and
or
push
pop
jnp
mov
jp
cmp
add
mov
shll
add
loop
stc
cmp
cmp
lcall
xchg
mov
mov
sahf
or
mov
pop
jno
sub
pop
pop
fyl2x
cmp
push
or
or
cld
push
les
pop
sbb
stc
das
jo
add
cli
mov
jno
lods
into
iret
mov
or
stos
sub
push
fsubrl
fstps
sub
pop
pop
mov
stos
adc
popa
pop
notb
loope
outsb
adc
sbb
jo
repnz
test
sbb
inc
lret
or
inc
add
insb
clc
xor
lret
mov
bnd
mov
mov
scas
sub
mov
adc
mov
mov
mov
mov
test
cmp
mov
mov
push
rcl
pop
cmp
mov
rorb
cmpsb
aad
pop
test
xchg
push
sub
lret
int
dec
inc
fs
jae
or
jl
dec
call
sbb
inc
clc
xorl
sahf
out
clc
in
sub
jb
repz
mov
loop
outsb
mov
mov
popa
and
mov
mov
sbb
aaa
xchg
lods
jp
and
pop
jae
adcb
ds
cmp
fstpl
shrl
fsubp
push
jo
cmp
xchg
pop
arpl
add
imul
lock
std
aaa
add
hlt
repz
cmp
sbbb
jmp
push
mov
mov
xchg
pop
aas
dec
mov
cmp
mov
lret
sub
pop
test
fsubrs
aas
stos
inc
ss
xlat
addr16
loopne
sbb
lock
jp
addr16
call
mov
inc
shll
sarb
push
pop
add
rorb
jecxz
pop
sub
fs
pop
sub
sbbl
push
adc
outsl
das
movsl
lea
js
bswap
sbb
add
dec
jbe
cmc
cld
add
fsub
shl
adc
test
push
call
scas
fldenv
sbb
les
test
insl
and
int
rcrb
scas
addb
jmp
mov
pop
pop
cmp
aam
int3
jnp
in
cmp
push
mov
xchg
shrb
pop
enter
test
in
pop
stc
adc
loopne
xchg
and
xchg
jo
add
mov
sbb
jb
adc
lods
decl
mov
pop
mov
stc
sbb
je
push
pop
jno
std
cmp
movsb
clc
fildl
ret
es
adc
mov
in
test
or
add
loop
pop
add
bound
xor
incl
test
popf
fwait
add
jo
cmp
faddl
xor
xchg
xor
icebp
xchg
adc
push
pop
inc
in
mov
pop
xor
fldcw
jae
jo
dec
mov
insl
pop
mov
out
push
mov
add
xor
out
rolb
pop
repz
test
icebp
push
pop
testl
pop
in
sub
or
ja
pop
fidivrs
out
icebp
mov
mov
movsl
jg
pop
aam
jnp
repz
ds
sarl
dec
adc
xor
jmp
xchg
inc
rorb
hlt
insb
pop
out
mov
push
pop
pop
pop
sar
bound
pop
or
mov
jmp
and
cmp
xchg
lahf
jge
and
in
mov
leave
pusha
pop
es
sub
ja
pop
nop
sbb
mov
call
add
jo
add
les
jg
js
outsb
mov
out
mov
mov
jo
int3
sbb
cs
out
xchg
or
dec
je
xchg
and
sbb
mov
es
jae
mov
lock
out
sub
cmpsb
fdivl
cmp
push
pop
pop
sarb
stc
dec
mov
and
sti
mov
mov
pop
fadds
dec
pusha
pop
adc
lret
fldcw
jle
dec
sbb
sbb
jns
fdivrs
sahf
fistpl
pop
push
xchg
ss
mov
sbb
mov
icebp
not
cmp
in
pushf
jns
mov
cld
lret
clc
inc
stc
pop
movq
cltd
stc
and
enter
dec
jne
jmp
cld
loope
jne
sti
scas
in
dec
cmp
lcall
insb
jge
xchg
pop
pop
out
xchg
adc
add
pop
sbbb
cmp
inc
jo
fistpl
lods
scas
jmp
add
in
loope
xchg
pop
iret
neg
or
int
in
cld
pop
mov
popf
inc
aam
add
cmp
stc
cmp
pop
push
sbb
ficompl
adc
pop
mov
loopne
jno
lock
sub
sub
cmp
xchg
sbb
popa
fincstp
shr
jbe
out
jmp
das
sarb
testb
mov
outsb
addb
fs
add
clc
mov
xor
loope
sahf
jae
inc
js
add
inc
mov
inc
outsb
mov
andb
movsb
lock
cmp
sub
xadd
xlat
jl
les
imul
cmc
movsb
in
popf
psrlw
push
fdivrs
add
stos
in
sti
test
loopne
stos
fs
imul
push
cmpsb
popa
xchg
sbb
sbb
mov
xchg
aad
jecxz
call
mov
ja
adc
imul
stos
pushf
test
clc
jmp
add
sbb
pop
add
push
add
xor
fiadds
mov
ret
pop
jg
dec
mov
lods
mov
int
stos
mov
sti
movsl
dec
jae
push
pop
dec
rcl
daa
inc
pop
ljmp
shrb
sbb
mov
fwait
aas
and
sub
sbb
push
cmp
jno
dec
cmp
dec
lods
cmp
decb
and
jbe
or
shl
das
test
add
push
dec
imul
jl
aas
into
lock
pushf
fcoml
pop
sub
push
or
js
pusha
inc
ds
ret
mov
mov
repnz
lcall
mov
xchg
orl
js
and
jle
int3
js
daa
les
sub
scas
xchg
je
inc
jg
les
enter
add
or
sbb
daa
ret
and
pop
push
movsl
xchg
rcrl
addr16
adc
or
adc
fsubp
jp
pop
int
arpl
clc
sahf
enter
stos
jl
leave
fwait
or
out
xchg
cmp
sub
dec
xchg
cmp
pop
in
addr16
sbb
push
fsubr
jno
cmp
mov
jns
jo
stc
cmp
mov
xchg
pop
gs
pop
inc
inc
dec
js
xor
pop
ljmp
xchg
sbb
pop
sub
in
neg
add
fwait
inc
std
les
add
daa
pop
cmp
or
fstl
je
insb
repnz
xchg
dec
or
xchg
aaa
aam
cmp
mov
dec
cmc
out
les
clc
leave
cmpsb
xor
fiadds
test
sbb
testl
cmpsl
aad
rcrb
pop
cmp
pop
adc
mov
pop
inc
pop
or
in
add
cmpsl
jecxz
clc
jp
inc
xor
add
leave
pop
lock
mov
gs
dec
incb
and
jns
mov
jp
or
repnz
cwtl
cmp
imul
les
jo
mov
movsl
jns
cmp
or
pop
leave
clc
pop
inc
shlb
mov
and
adc
mov
mov
add
push
aad
out
or
cmpsl
pop
call
or
mov
push
sbb
gs
mov
repnz
mov
pop
test
jne
adc
dec
jno
lea
test
jae
fisubrs
ror
jb
mov
out
or
mov
pop
cmpsb
jg
push
mov
jecxz
fcoml
nop
insb
cld
mov
sub
xchg
push
test
jge
push
push
jp
pop
add
pop
imul
aaa
dec
pop
insb
push
xchg
outsb
pop
shlb
pop
rorl
int
xchg
pop
push
mov
pop
jno
test
pop
sbb
cmc
stc
les
cltd
mov
adc
cmp
sbb
or
aam
mov
jae
mov
inc
xchg
pop
jecxz
mov
sub
sub
pop
ret
add
cmpsb
or
jne
pop
call
pop
lock
mov
push
fiaddl
out
add
pop
lock
sbb
clc
sahf
in
mov
add
mov
inc
adc
xchg
mov
pop
xchg
and
cld
mov
lcall
pop
pop
fwait
sahf
pop
cmp
xlat
jmp
ss
rorb
sbb
daa
pop
pop
dec
xlat
int
add
jmp
add
bound
fdivrs
pop
xchg
xor
cmp
jbe
sbb
shl
pop
pop
out
mov
pop
fdivr
jp
fistpll
jmp
or
test
pop
outsl
fidivrl
testl
mov
jl
sbb
out
sbb
ret
mov
jae
divl
push
jmp
es
fst
jnp
call
mov
push
xchg
push
push
add
popf
sbbb
inc
mov
icebp
int
sahf
inc
dec
lds
pop
and
jecxz
xchg
pop
das
xor
mov
add
mov
in
aaa
enter
add
hlt
mov
sbb
loopne
sbb
mov
dec
aam
add
scas
jns
xchg
fstpl
add
in
aaa
dec
xchg
stc
pusha
mov
test
mov
ret
sbb
cwtl
fildll
negl
lret
jg
pop
or
call
sti
xchg
push
dec
push
mov
cli
fmuls
pop
xor
inc
repnz
int
test
mov
pop
add
or
outsl
pop
add
imul
inc
sbb
clc
scas
movsb
outsl
xchg
ds
add
cmc
or
je
pop
pop
mov
add
pop
mov
cmp
add
push
outsl
pop
add
or
dec
mov
sub
pop
push
pop
pop
fcmovnb
push
mov
icebp
fildll
daa
pop
mov
jecxz
xor
mov
jge
adc
out
cmpsl
mov
sbb
mov
fwait
mov
pop
pusha
ficompl
mov
push
aas
popa
push
loope
int
xchg
push
dec
imul
mov
xorl
pop
leave
mov
sub
sub
or
in
call
push
pop
outsb
cmp
push
mov
jne
mov
out
mov
sbb
add
clc
call
inc
mov
out
cmp
orb
pop
aam
loop
shr
xor
xchg
or
movsl
jo
ret
cmpsb
lods
xchg
pop
pop
lret
or
pop
dec
scas
or
cmp
les
stos
cmp
movsb
inc
jb
add
mov
pop
xchg
lret
add
pop
xor
pop
xor
jecxz
sub
fs
mov
loop
out
mov
adc
cmp
call
cmp
jp
mov
pop
loop
lods
or
xor
cltd
and
in
inc
inc
jp
sbb
mov
dec
jb
cli
enter
andl
scas
push
bound
ja
cmp
daa
sbb
je
int
sub
pusha
sbb
mov
jmp
andl
xor
out
pop
fisubrl
mov
mov
jl
cmpl
into
mov
or
inc
outsb
cmpb
sbb
push
leave
je
sub
lods
pop
add
mov
test
pop
push
ja
sbbl
pop
xor
jns
push
mov
test
mov
inc
inc
cmp
pushf
movsl
mov
add
fs
int3
lea
cmpl
pop
nop
cmp
fsubs
jbe
orb
insb
mov
jp
sub
mov
jne
pop
cwtl
shlb
xchg
testb
scas
fmuls
les
pop
xchg
hlt
outsb
xchg
jl
mov
rclb
addr16
xor
jl
and
in
jge
arpl
sbb
sub
mov
or
push
adc
pop
pop
pop
pop
dec
cltd
pop
fld
ljmp
outsl
push
or
xchg
addr16
outsl
xlat
push
mov
addr16
fnstenv
add
add
mov
sbb
aad
mov
fnstenv
repnz
and
pop
cmp
and
sti
mov
sub
nop
mov
or
cli
sbb
and
les
and
dec
xlat
mov
clc
sahf
and
mov
push
stos
jp
mov
cmp
lds
mov
add
add
rcrb
scas
and
div
push
lcall
dec
lcall
test
jmp
pop
mov
test
imul
lea
lahf
daa
xor
int
or
xchg
mov
xchg
mov
or
incb
dec
jg
clc
fsts
push
movb
incl
jno
mov
int3
cmp
stos
sbb
pop
es
xlat
inc
pop
jge
sbb
push
pop
and
lret
enter
mov
mov
lret
out
clc
inc
sbb
pop
test
jnp
mov
in
pop
sub
aad
call
adc
pop
sti
das
mov
mov
das
push
call
test
pop
shlb
mov
adc
or
addr16
shll
inc
cmp
cs
incl
les
pushl
idivb
pop
xor
xchg
testl
std
movl
in
test
dec
shll
sub
pop
imul
cmp
xor
inc
fnstsw
sub
sbb
shll
push
jge
mov
lahf
or
pop
in
loope
push
mov
dec
cmp
add
xchg
rcr
pop
mov
ret
loop
rcl
pop
or
pop
jge
ret
or
mov
jnp
jae
movsb
jo
xchg
clc
jle
xchg
es
xor
nop
and
mov
jo
mov
pop
addl
cwtl
adc
pop
mov
sbb
pop
fildll
add
or
xchg
fcmovb
ret
jecxz
mov
push
cmp
push
js
pusha
pop
and
stc
xchg
jns
arpl
cmp
mov
test
loop
inc
pop
pop
and
mov
jb
rcll
and
mov
mov
pusha
sbb
repz
jb
dec
jo
pop
and
div
sarb
inc
and
sti
push
dec
ja
and
push
or
sub
push
js
sbb
imul
add
ret
js
pop
roll
std
aam
dec
dec
dec
lea
add
hlt
daa
lret
add
mov
sub
ljmp
or
pop
jg
sub
incb
cmpsl
adc
sbb
scas
xor
push
xor
or
adc
add
add
or
pop
repnz
add
jne
mov
mov
aaa
lcall
and
hlt
xchg
pop
mov
pop
in
sub
add
sbb
xor
or
dec
jl
pop
out
push
gs
cmc
inc
insb
mov
adc
out
pop
and
mov
pop
notl
pop
pushw
pop
lods
mov
cwtl
inc
sbb
sbb
xor
jmp
das
fildll
xchg
jnp
and
dec
sub
adc
dec
scas
insb
fsubs
mov
arpl
cmp
mov
imul
jge
push
pop
daa
addr16
lock
sbb
cmp
ret
mov
mov
mov
insl
mov
data16
mov
je
in
ja
pop
xchg
mov
in
xlat
inc
pop
sbb
es
cmc
pop
pop
mov
int3
adc
or
mov
xchg
inc
negl
test
adc
sub
add
jbe
ret
popw
cmpsb
pusha
mov
push
cmc
icebp
cld
pop
xor
iret
push
sub
pop
dec
pop
int3
ficoml
or
cwtl
decl
aam
jmp
aas
pop
lods
in
sbbb
mov
mov
pop
nop
cmp
fiadds
dec
push
xor
es
jno
lock
ss
cltd
mov
lock
nop
stos
xchg
ljmp
out
lcall
jp
imul
call
in
dec
push
mov
and
jecxz
lea
sbb
popa
shll
cmp
pop
inc
idivl
mov
pop
sub
js
sbb
mov
cmp
add
and
movsl
aas
pop
adc
jb
lret
cld
pop
sahf
cmp
dec
call
dec
stc
leave
sbb
dec
cmp
pop
fmul
roll
push
jbe
movsl
add
adc
rclb
and
je
loop
faddl
inc
xchg
push
push
in
js
add
push
add
push
aam
mov
mov
orl
imul
daa
mov
mov
pcmpeqd
movsl
clc
cmp
ja
outsb
ss
test
push
add
and
mov
or
or
sbb
outsb
mov
mov
xor
stos
inc
movsb
les
je
add
push
addr16
lods
push
xlat
pop
add
dec
out
mov
adc
push
and
mov
ret
mov
add
jle
lds
jnp
inc
fnstsw
fs
fnstsw
sub
mov
and
xchg
pop
sbb
cmp
push
fisubrs
jns
inc
iret
sbb
cs
clc
insl
mov
cmp
fcmove
test
inc
sbb
lds
aas
push
or
inc
push
test
in
aad
enter
mov
mov
es
pop
scas
out
gs
aam
lea
aam
cwtl
jno
mov
xchg
add
adc
xor
and
cmp
or
pop
jl
loop
jb
nop
jmp
jp
xor
ja
mov
sbbb
add
push
add
cmp
test
inc
xor
sbb
addr16
inc
mov
mov
out
popa
and
shrl
inc
jns
xor
movsl
popa
sub
out
outsb
and
pop
ljmp
outsl
shrb
xchg
dec
hlt
or
pop
call
xchg
pushf
push
nop
into
xchg
add
xchg
add
popa
or
xchg
mov
add
out
pop
loopw
cltd
movsb
push
arpl
inc
inc
dec
shrb
hlt
daa
adc
push
jno,pt
lock
adc
pop
or
loopne
mov
xor
mov
lcall
cmp
or
shrl
es
scas
sbb
dec
dec
and
xor
and
dec
outsl
mov
mov
sti
add
cltd
movsb
cli
push
cmpsb
mov
mov
cmp
or
or
push
push
hlt
mov
clc
ljmp
jp
clc
movsl
jg
xchg
xor
loop
lock
sbb
dec
jl
orps
call
lods
and
xor
in
lcall
xchg
test
inc
jb
sub
push
jb
sarb
and
outsl
lcall
add
sbb
add
sub
out
xchg
jmp
push
mov
xchg
mov
cmc
hlt
mov
sbb
ljmp
inc
outsl
setne
dec
push
xchg
mulb
test
inc
inc
dec
pop
dec
cmp
mov
mov
inc
inc
pop
mov
jecxz
pop
jg
stc
adc
std
sbbb
xchg
repnz
jp
push
mov
mov
test
xor
add
daa
dec
adc
adc
xor
xchg
and
lods
scas
sbb
dec
inc
push
js
loopne
icebp
jmp
cwtl
sbb
jb
jecxz
xor
push
jp
mov
fwait
cmp
das
push
jp
dec
scas
out
cmp
add
inc
sti
add
pop
es
xchg
dec
daa
pushf
xchg
sub
movsb
cmpsb
and
data16
pop
fmul
into
lods
pop
xor
data16
push
jo
push
xchg
push
xor
cmovo
mov
xchg
dec
push
movsb
push
insl
pusha
in
dec
arpl
jae
xchg
loopne
lds
inc
loop
and
pop
pushf
xchg
sbb
bound
xor
loopne
cld
add
cmp
fldl2t
cwtl
or
mov
dec
shll
xchg
and
cmovno
inc
xchg
sarl
xchg
sub
add
andb
xchg
cmp
pop
mov
mov
jl
daa
mov
aad
dec
imul
cli
mov
or
dec
sahf
adc
mov
dec
mov
js
push
int3
daa
and
test
mov
cmpsb
cwtl
jo
daa
outsb
out
add
push
pushf
fs
xchg
fadds
scas
pop
pop
add
xchg
push
rcll
and
add
jl
aam
daa
jb
lods
xchg
add
outsb
pop
mov
dec
stos
push
cmp
scas
sbb
test
pop
stos
lcall
lret
add
lea
sbb
pushf
hlt
daa
mov
andl
mov
out
jg
leave
enter
out
loop
inc
insb
std
lods
push
pop
enter
mov
jbe
xchg
pop
adc
pop
cmpsb
negl
and
daa
push
mov
sbb
addl
push
adc
pop
shl
or
inc
pop
inc
dec
inc
pop
inc
dec
dec
std
aam
jae
xor
mov
pop
mov
pop
inc
sbb
push
bound
outsl
xchg
cwtl
aas
mov
inc
fiadds
sbb
sbb
xor
mov
div
sbb
fdivs
stos
pop
mov
divb
imul
inc
aaa
fldenv
adc
inc
and
dec
rclb
mov
jns
inc
hlt
daa
lock
pop
or
loopne
inc
add
es
clc
test
pushf
and
xchg
enter
arpl
sub
test
daa
cltd
sbb
adc
mov
or
mov
push
and
aam
pop
sbb
adc
xchg
adc
mov
or
aas
dec
add
cmpsl
adc
in
scas
cmp
inc
and
and
inc
in
ficoml
inc
and
and
xor
fbld
daa
incb
arpl
loopne
and
or
push
sub
inc
sub
sub
inc
lock
mov
sbb
sub
das
sub
sub
sbb
subl
ss
scas
xorl
in
inc
and
and
dec
adc
test
mov
lds
push
dec
lds
arpl
or
pop
sbb
mov
fisttps
sub
dec
pop
xchg
push
mov
nopl
aam
inc
dec
xchg
push
insl
jbe
inc
xor
cmp
or
adc
popa
ja
cltd
push
adc
cwtl
cmp
pop
push
or
xchg
repnz
mov
xor
cmp
or
mov
sub
fdivl
and
xchg
adcl
xorl
call
enter
inc
xchg
ljmp
in
inc
and
mov
jns
mov
fsubl
test
pop
lods
adc
std
mov
dec
cs
inc
sbb
dec
bound
insl
jae
lock
scas
fxch
fistpl
adcb
mull
cld
xchg
cmp
pop
jle
in
rclb
cmpsb
sbb
push
shr
pop
jno
and
out
inc
add
cmc
and
lods
nop
sub
int
mov
adc
and
xor
fwait
data16
mov
add
mov
fsub
jmp
xor
inc
iret
pop
xor
es
arpl
add
pop
push
pop
shll
cmp
sbbb
sub
mov
jl
xchg
or
xchg
or
cwtl
jl
xor
cmp
pop
mov
aas
mov
cmp
enter
add
fstpl
cmp
sahf
daa
jl
jg
cmp
out
mov
add
and
js
dec
das
pop
je
insb
outsb
pop
dec
movsb
push
xor
stos
ret
push
js
jecxz
or
pushf
xchg
inc
fstl
addr16
in
shl
arpl
or
cld
and
inc
inc
sbb
xchg
xchg
mov
inc
adc
cmp
or
insb
fwait
mov
xor
jl
inc
mov
push
sbb
jecxz
push
dec
sub
pusha
mov
cmc
adc
pop
add
and
cltd
sbb
sbb
adc
add
add
mov
jnp
push
and
add
dec
push
push
jp
mov
dec
fimull
inc
sbb
loope
and
mov
pushf
mov
nop
mov
push
or
leave
mov
and
push
jne
push
inc
xchg
add
daa
pop
or
push
daa
outsb
jo
adc
mov
jo
inc
mov
adc
insb
sbb
sub
push
inc
mov
add
les
sbb
sti
cmp
sbb
add
and
enter
pop
xor
lcall
test
pop
jl
std
and
in
fs
and
jae
lods
scas
icebp
stos
jmp
and
sbb
enter
dec
pop
and
push
test
xchg
cmc
pop
and
dec
xor
lods
ljmp
jne
in
test
inc
cltd
insl
add
lods
mov
arpl
and
mov
pop
add
mov
arpl
inc
cltd
and
push
sbb
xchg
mov
loopne
sbbb
push
push
inc
mov
inc
pop
call
iret
push
xchg
pop
and
push
dec
xlat
mov
sbb
push
sub
cs
je,pn
js
mov
sbb
pop
xchg
add
mov
mov
sub
fidivrs
jns
mov
add
sub
cmp
add
fsubs
mov
outsl
lods
sti
pop
iret
xchg
sti
jg
test
dec
gs
mov
pop
cmp
xor
ss
test
mov
adc
push
xchg
int3
mov
out
push
dec
mov
fcmovb
cmp
popa
mov
and
mov
mov
dec
std
iret
int
out
inc
jno
hlt
or
pop
jecxz
add
arpl
push
dec
xchg
push
jne
les
iret
pop
arpl
or
movsl
inc
cmp
push
or
imul
dec
pop
arpl
or
push
dec
lods
cmc
push
daa
or
pop
mov
rorb
add
sub
add
xor
stos
rorb
add
xor
pop
scas
stos
shl
and
es
pop
mov
sub
ret
sbb
add
nop
xor
daa
mov
mov
repnz
and
sbb
fs
mov
mov
cmovge
jne
cmp
adc
and
inc
lods
decb
jp
dec
fs
adc
pop
je
mov
lods
shll
scas
repz
ret
cmp
dec
out
add
jmp
inc
and
mov
sti
fbld
aad
pop
mov
ret
clc
mov
pop
pop
or
stos
adc
les
in
pusha
xchg
movsb
daa
xor
daa
cmp
jnp
or
rolb
ret
or
pop
inc
sbb
push
ja
or
cmp
adc
push
cmc
lea
pop
mov
movsl
outsb
xchg
popf
add
inc
std
mov
jle
lcall
mov
sti
sbb
xchg
mov
stc
push
pop
imul
or
loope
int3
aam
fs
daa
stc
arpl
add
jb
lods
mov
pop
cmpsb
repnz
push
cmp
dec
push
jmp
add
mov
adc
adc
push
fldenv
fsubs
flds
add
push
jl
out
or
mov
inc
mov
adc
fldenv
and
pop
call
inc
cmpsl
adcb
hlt
add
cmpsl
adc
sbb
scas
imul
cmp
and
adc
dec
test
sbb
pop
test
adc
stos
fwait
stos
mov
dec
stc
xchg
mov
sub
negl
sti
test
scas
mov
cld
add
jg
lods
xchg
add
dec
hlt
inc
mov
jg
or
arpl
decb
cli
or
pop
movsb
add
mov
lea
int
call
jo
out
pop
enter
or
mov
out
mov
adc
mov
filds
mov
xchg
push
or
and
mov
xchg
pop
roll
sbb
mov
and
test
roll
push
pop
sbb
mov
adc
pushf
dec
adc
pusha
imul
cwtl
mov
sti
loopne
sbb
hlt
mov
and
aas
cltd
or
movsl
push
cwtl
addl
adc
sbb
lds
fldt
cmp
fldenv
fwait
daa
test
dec
xchg
aad
jnp
adc
out
lgs
das
mov
mov
dec
rorl
xchg
leave
push
or
imul
fwait
lret
divb
cmp
or
jl
leave
int
and
dec
add
pop
xchg
inc
add
iret
lret
add
sub
dec
dec
ja
mov
out
dec
pop
ret
fadds
adc
lds
xadd
dec
int3
or
add
adc
pop
xchg
mov
in
or
int
ret
dec
pop
jnp
pop
jle
sub
mov
mov
push
and
jbe
das
xchg
mov
sahf
pop
cmpsb
inc
jmp
ja
pusha
push
xchg
and
notb
cmp
push
adc
cmp
sbb
iret
scas
mov
clc
pushf
sbb
xor
dec
jo
incb
scas
cmpsb
add
mull
dec
xchg
pop
inc
andb
mov
jb
sbbb
pop
test
adc
jnp
jmp
sbb
enter
xlat
ret
xchg
pop
or
mov
flds
adcb
pop
push
in
push
mov
jbe
push
dec
sti
inc
jl
push
out
sti
push
jg
jl
xchg
pushf
fisubl
jne
xchg
xchg
data16
addr16
jmp
scas
ss
push
adc
add
in
stc
test
cmpsl
xor
out
push
aas
sub
mov
mov
in
hlt
lret
enter
xchg
ror
pop
inc
cmc
filds
xor
dec
lret
sbb
inc
jo
js
lods
xor
fsts
es
roll
and
in
fmuls
rep
jge
mov
adc
pusha
xchg
add
inc
loope
mov
inc
inc
inc
adc
fmuls
movups
pop
arpl
xor
cmp
ljmp
mov
adc
jl
sub
and
mov
lcall
in
mov
divl
or
xchg
adc
jp
sub
mov
xchg
mov
mov
test
add
pop
fwait
pop
or
lret
scas
push
pop
lret
or
adc
inc
fildl
incl
rcr
pusha
movsl
pushf
pop
xchg
in
inc
rorb
pop
push
out
xchg
or
xchg
mov
adc
inc
jp
sbb
mov
pop
and
xor
pop
fldenv
mov
push
xor
add
xorl
mov
daa
aad
mov
xor
add
xchg
pop
jbe
jbe
mov
rclb
adc
scas
xchg
test
andb
scas
shl
pop
cwtl
or
mov
sbb
push
mov
inc
add
mov
dec
xchg
mov
daa
cld
add
mov
outsb
lods
jp
add
test
inc
test
xchg
xchg
int
test
xchg
stos
cld
es
fisubl
sub
mov
and
lods
xchg
lcall
mov
cmp
aas
mov
jp
les
and
mov
fsub
movsl
stos
jne
add
ljmp
lret
sub
fs
inc
gs
push
mov
xor
add
xor
lods
cli
addb
cld
cmp
sbb
mov
mov
inc
mov
push
xchg
pop
and
xor
insb
aas
xchg
scas
in
pusha
push
fstl
sub
ucomiss
fldcw
jecxz
lods
sub
mov
test
inc
sbb
add
inc
js
pop
sbb
jbe
mov
push
dec
in
mov
jmp
mov
mov
sbb
mov
lahf
in
outsb
stc
mov
sbb
push
call
or
pop
dec
and
jne
hlt
and
xchg
push
and
xlat
mov
xchg
jnp
cwtl
mov
sub
das
mov
adc
mov
lods
inc
cwtl
mov
adc
ja
add
enter
sbb
push
out
jg
mov
js
fcomps
pushf
push
sub
jnp
pop
xchg
push
ds
adc
call
mov
push
and
lcall
repnz
sub
aaa
or
sti
mov
fwait
rcrb
mov
xorb
in
xabort
sahf
jb
ljmp
fs
stos
test
mov
xor
pop
popf
outsb
mov
insb
lcall
mov
inc
add
or
mov
arpl
adc
pop
lds
sub
and
insl
and
daa
bound
xlat
inc
xchg
mov
jb
stos
xchg
push
pushf
movswl
mov
push
push
jmp
and
adc
mov
in
arpl
add
pop
loopne
mov
test
push
loopne
cmp
icebp
test
xchg
test
inc
cmpsb
jle
outsl
jbe
adc
jae
adc
push
sbb
iret
xor
cld
adc
test
dec
cld
inc
sbb
lock
in
std
mov
xchg
xchg
jbe
add
add
inc
imul
dec
xor
mov
inc
xor
add
or
dec
mov
loopne
das
adc
adc
enter
iret
pop
push
dec
push
jp
in
mov
sbb
pop
sbb
or
push
jp
addl
aam
pop
aas
and
in
jp
mov
or
jmp
enter
movsl
cwtl
dec
pop
cwtl
aam
jmp
cwtl
pop
loop
icebp
addb
mov
sbb
and
test
out
sbb
mov
and
cld
or
cltd
push
inc
or
popa
add
arpl
xlat
sti
or
jp
push
lret
and
mov
jno
ljmp
call
or
adc
and
push
popf
inc
inc
int3
mov
jo
hlt
stc
fcomip
push
sbb
fisubl
pop
push
jecxz
imulb
mov
jl
jecxz
mov
lcall
or
aas
push
jp
jno
mov
imul
sub
cltd
mov
inc
aaa
test
mov
push
sbb
mov
movsl
es
mov
push
mov
jae
cmp
pushf
cmp
movsl
cmp
inc
ret
movsl
adc
cmc
cmpsb
cmp
push
pop
pop
cmpsl
call
arpl
das
sbbl
arpl
das
sbbl
dec
test
outsl
inc
mov
inc
pop
pushf
push
push
insl
stc
push
mov
inc
cmpsb
push
xor
popf
add
or
aaa
pop
insl
push
lahf
jg
add
mov
mov
test
sahf
mov
sub
mov
pop
ja
cmovp
xorl
sbb
js
scas
mov
jle
jno
ds
paddusb
mov
sti
mov
cmp
mov
orb
fisubs
das
loopne
lods
dec
sar
and
lcall
fsubs
and
mov
faddl
data16
inc
xchg
mov
in
jle
cltd
iret
mov
mov
push
jae
inc
iret
mov
fwait
pop
xchg
and
sub
xor
dec
pop
test
add
fmull
daa
sub
aam
adc
addb
rclb
cmp
push
rclb
pop
sbb
jp
pop
rclb
and
mov
sti
add
sbbl
push
xor
mov
cmp
inc
pop
mov
sarb
or
xor
aas
mov
inc
sti
adc
xor
cmpl
xor
xor
daa
pushf
sub
pop
mov
xor
lret
add
sub
aaa
mov
jl
loop
sub
xchg
jne
mov
ja
add
mov
inc
mov
cwtl
pop
xchg
daa
outsl
iret
xor
fs
iret
bound
xorb
pop
inc
pop
repz
dec
pop
divb
test
es
add
nop
les
test
inc
shl
adc
jg
mov
xor
and
pop
inc
push
sbbl
pop
addb
inc
das
mov
pop
or
inc
push
lea
xchg
jb
push
lea
cmp
or
mov
pop
inc
mov
xor
inc
mov
mov
fcomp
sub
imul
adc
jecxz
xchg
jg
lcall
cmpsl
xchg
arpl
xchg
sbb
int3
mov
xor
or
sti
push
adc
fwait
mov
pop
sbb
xchg
adc
sbb
jecxz
imul
or
inc
andb
hlt
and
push
fs
pop
mov
jle
push
fs
femms
clc
pop
sub
jp
in
arpl
fdivs
xlat
jp
lods
iret
repnz
fbld
push
repnz
inc
jge
jge
or
sub
and
sub
xchg
lcall
sub
les
bound
in
sti
jo
stos
sbb
lock
add
adc
mov
sbb
dec
enter
and
sub
hlt
add
adc
sub
fadds
pop
or
das
mov
bswap
add
inc
das
imul
fcomp
pop
push
push
and
sbb
leave
cmp
or
pusha
pop
cltd
adcl
daa
xchg
push
pop
popa
push
add
cli
jb
mov
in
xchg
inc
xchg
lods
xchg
insb
cmc
push
cli
and
ja
jo
outsl
xchg
rcl
add
pushf
nopl
or
jle
pusha
daa
nop
jp
incl
inc
pop
or
or
push
and
jl
fnsave
outsl
jbe
pop
jo
cmp
jl
fsubr
rolb
and
icebp
movsb
pop
out
push
bound
pushf
or
ds
ljmp
pusha
in
lret
sti
nop
hlt
pop
es
lcall
xchg
add
jp
lea
scas
adc
inc
or
sbb
and
jne
xor
sti
or
scas
push
inc
push
jp
rorb
mov
push
or
fcompl
xchg
push
xor
mov
pop
add
mov
cmp
pop
mov
adc
and
or
mov
xchg
sub
adc
aad
push
rorl
xor
jp
fidivrl
movsl
scas
test
daa
shlb
mov
push
fnstenv
sbb
jl
test
add
add
movsb
push
mov
push
xchg
fidivs
push
pusha
push
push
je
fcmovb
inc
out
ds
idivb
sub
jl
fistpll
push
jp
add
or
out
adc
push
sbb
inc
fisubrs
mov
xor
jbe
and
push
inc
cmp
hlt
movsb
out
push
out
sub
stos
cli
xor
and
stos
sar
adc
add
dec
test
jg
test
mov
lcall
push
mov
and
lcall
jne
pop
dec
roll
xor
mov
into
mov
test
cmpsb
inc
mov
dec
cltd
cmp
or
and
jnp
decl
dec
mov
ret
and
mov
pop
add
add
lods
and
ja
pavgb
mov
sbb
jbe
mov
pop
pop
push
jne
xor
jne
popa
mov
loope
mov
adc
incb
negl
test
adc
mov
jbe
push
pop
sub
out
testl
pop
jl
es
push
push
outsl
xchg
xchg
push
jle
pop
and
inc
hlt
or
lods
jno
lcall
cmp
xchg
icebp
xchg
ds
jns
add
mov
xchg
jbe
mov
or
dec
cld
outsb
mov
mov
and
pop
outsl
dec
incb
arpl
xlat
stos
sub
mov
inc
sbb
mov
or
into
lea
or
mov
xlat
test
xor
in
xor
add
sub
xchg
in
xor
adc
jp
inc
xlat
iret
out
repz
adc
pop
nop
inc
and
push
adc
mov
and
fcoms
jmp
inc
pop
lcall
movsl
xlat
test
test
lcall
mov
sub
lret
push
mov
inc
ja
xchg
push
sub
pop
stos
fsubl
pushl
push
shlb
adc
dec
or
mov
add
sbb
dec
sbb
roll
cmp
insb
jle
pop
aaa
or
pop
jnp
icebp
cmp
popa
push
or
sub
inc
stos
and
pusha
jns
mov
sbb
pop
shlb
xchg
inc
mov
hlt
or
ret
cmc
ss
mov
es
hlt
jmp
cld
jecxz
daa
imul
adcl
lods
mov
xor
es
dec
mov
mov
rorl
xor
sbb
jp
test
mov
sbb
dec
cli
jmp
sarb
int
push
cmp
leave
imul
add
pop
test
cmc
mov
orl
xchg
test
div
adc
mov
leave
xchg
cmc
xlat
icebp
or
jmp
mov
lods
jns
adcl
and
lcall
decl
inc
jnp
push
adc
push
sbb
cwtl
popa
lods
mov
add
movsl
inc
or
cmp
and
fs
mov
arpl
adc
cmp
cmp
test
adc
test
pop
or
xchg
xor
inc
stos
jg
push
repz
div
sub
adc
mov
inc
xlat
push
push
add
das
cmp
pop
xchg
cwtl
mov
push
pop
sbb
cwtl
xchg
fucomi
mov
fidivl
jle
mov
dec
mov
jae
add
ss
xor
divb
pop
jb
fisttpl
fists
and
push
loop
cmp
xchg
out
mov
cmpsl
addr16
mov
cwtl
sub
clc
sub
mov
in
jl
mov
push
rcr
xchg
pusha
push
jecxz
xchg
out
js
xchg
fisubs
xchg
jecxz
fs
insb
or
mov
mov
jg
or
lods
or
ja
cwtl
jnp
mov
push
aas
xor
lcall
mov
mov
sbb
gs
loopne
cmpsl
adc
cld
xor
pop
adc
add
mov
adc
hlt
adc
nop
pop
cmpsb
mov
popl
cld
pop
mov
mov
xor
mov
shrb
or
mov
cli
pop
sbb
add
in
push
push
test
stos
ljmp
adc
in
aad
pop
jmp
pop
mov
xchg
sahf
incl
out
test
mov
pop
mov
push
push
mov
jo
pop
nop
aaa
hlt
cmp
adc
sarb
imul
stos
data16
fmull
xchg
pop
jne
jo
dec
lea
aaa
jb
or
push
mov
inc
sbb
sbb
mov
pop
out
jle
shlb
xor
nop
gs
pop
or
pop
pop
aam
arpl
fmuls
cmc
jg
xchg
push
jge
subb
cmpsl
jns
imul
addl
sbb
cwtl
pop
mov
jbe
les
mov
pop
sub
push
iret
push
cmp
cmc
inc
pop
or
xor
shl
les
push
js
scas
cld
or
and
mov
testl
cmpsl
int
jnp
faddl
or
push
ret
cmp
sub
int
lods
add
add
repz
mov
pop
test
xor
pop
push
sub
add
push
pop
push
das
mov
dec
inc
cmc
jno
scas
pop
mov
xchg
dec
xchg
call
and
test
sahf
pop
int3
cmp
jge
inc
leave
pop
imul
into
jnp
mov
aad
fs
xchg
mov
ret
cs
cmp
pop
jecxz
in
repnz
jno
mov
mov
outsb
xor
orb
outsl
pop
insl
sahf
fsubrs
push
daa
pusha
sub
repnz
cmp
cmp
je
pop
call
andb
sbb
cmc
pop
mov
xchg
pop
imul
gs
adc
mov
pusha
insb
xchg
xchg
fsubrs
add
xor
adc
bound
pop
sbbb
push
mov
pop
hlt
imul
sbb
mov
cmp
loop
xor
or
ss
jbe
scas
pop
nop
and
lods
faddl
dec
cwtl
add
add
push
mov
dec
adc
mov
pop
notl
inc
gs
loope
dec
rcrb
sahf
inc
fisubrl
mov
lcall
sub
mov
and
pop
pop
mov
dec
xor
add
push
lock
addr16
inc
stos
scas
dec
fsubr
lcall
movsb
addr16
cmp
std
push
aas
adc
sub
xchg
inc
xchg
js
push
pushf
aad
mov
jp
inc
test
mulps
xor
cwtl
push
in
enter
mov
xchg
stos
daa
fistl
daa
jbe
fistps
mov
jbe
pop
or
pop
ret
sub
add
inc
lock
scas
push
test
inc
pusha
daa
jg
subb
add
or
std
push
push
mov
ja
movsb
nop
pop
insl
push
sub
adc
and
adc
xchg
imul
in
cmpb
mov
add
dec
pop
mov
or
xchg
cmp
sub
inc
push
cmp
daa
sbb
or
sbb
jle
into
addb
hlt
test
mov
lret
movsb
insb
adc
aaa
cmc
cld
in
out
push
cs
into
testl
cmpsl
aaa
or
cmp
mov
cmp
dec
cmp
pushf
stc
inc
sub
arpl
pop
lcall
lcall
movsl
sub
stc
add
mov
mov
dec
fisubl
in
aas
push
adc
stc
add
in
gs
or
mov
cmp
aas
sbb
mov
mov
jg
pop
or
or
mov
test
jnp
movsb
outsl
enter
mov
pop
and
pop
xor
pop
lcall
inc
and
adc
mov
pop
dec
into
pop
mov
fucom
mov
mov
and
mov
pop
pop
dec
jae
cmp
lcall
pop
xor
or
lock
pusha
add
or
daa
gs
outsl
insl
push
imul
dec
ja
xor
popa
movq
insl
daa
imul
gs
and
sub
adc
inc
or
cmp
rclw
jae
out
or
addr16
or
stc
add
aas
or
pop
push
or
loop
dec
daa
in
jnp
pop
cmp
pop
add
iret
pop
push
pop
sbb
daa
lret
add
cmp
add
add
push
call
pushf
setb
mov
bswap
push
notl
jp
lcall
popa
jbe
pusha
jbe
xor
ret
inc
daa
rorb
mov
mov
inc
cmp
addr16
pshufw
adc
cwtl
gs
sbb
push
jecxz
pop
jg
gs
push
aaa
mov
jne
insb
mov
sub
mov
arpl
sub
mov
addl
jecxz
mov
pop
cwtl
imulb
sbb
sub
and
xor
inc
pop
adc
jmp
cmp
pusha
xchg
pop
mov
iret
inc
or
ret
add
incl
fldenv
jmp
imul
sub
mov
cmp
fldenv
jmp
mov
repz
jp
xchg
xlat
outsb
push
or
fidivs
sti
add
pop
lret
mov
push
pusha
and
test
movsl
cmpsb
add
sti
js
pop
or
xchg
or
fistpl
add
pop
cmp
les
test
cwtl
xor
add
mov
fs
jo
fidivs
sti
add
sub
adc
inc
addb
hlt
daa
pop
or
orl
mov
inc
insl
inc
subb
daa
pop
cs
cli
inc
xchg
xchg
dec
push
and
jns
fistl
daa
mov
mov
and
jmp
dec
inc
lods
in
jae
js
cmp
inc
ret
popf
and
andb
jb
stos
movsb
and
mov
cmpsb
or
lods
push
adc
cmc
fcoms
lock
push
push
daa
lcall
push
or
adc
adc
inc
outsl
pop
xor
adc
pop
mov
pop
sbb
sbb
or
xchg
inc
pop
xchg
cmpsl
pop
inc
or
pop
or
mov
daa
or
push
dec
push
fwait
push
test
dec
xchg
push
popf
mov
stc
xchg
or
lahf
ds
test
movsb
push
mov
push
shll
in
and
mov
xor
sub
add
sti
mov
xchg
fldl2e
push
sub
or
xor
sub
pop
pop
inc
or
or
inc
sbb
pop
pop
push
dec
mov
cmp
pop
dec
or
pop
ret
jecxz
jg
loope
mov
cltd
xlat
aaa
bndldx
push
stc
pusha
cmc
cld
and
adc
sbb
jae
addl
xchg
mov
stc
in
jg
pop
stos
addl
cmc
cld
mov
mov
stc
add
jns
push
es
dec
stc
iret
add
in
mov
add
stos
inc
stc
or
inc
mov
out
ja
aam
pop
inc
push
stc
cmp
stc
cmp
push
fdivs
mov
mov
das
or
pop
pop
xor
adc
jg
sbb
into
sbb
lods
mov
arpl
sbbl
mov
jae
jae
in
and
adc
loop
dec
mov
lods
ja
repz
cmc
and
imul
and
daa
pop
jo
add
cs
lods
or
call
push
lods
sbbl
xor
out
push
fadd
arpl
push
test
cmp
fadds
sbb
out
cmovp
cmc
mov
inc
jmp
popa
aaa
add
or
call
sub
enter
imul
push
jp
inc
xor
hlt
and
cmp
xor
sub
mov
xchg
in
lea
shlb
and
cmp
in
pusha
scas
ret
or
lea
xchg
push
mulb
inc
sub
pop
addr16
sti
xor
daa
dec
push
dec
add
xchg
xor
adc
lcall
adc
divl
in
imul
push
cmp
adc
pop
push
jp
cmpsl
inc
adc
lea
jp
xlat
cmp
pop
pop
inc
or
add
or
cmp
seto
pop
or
inc
testl
inc
cmp
into
add
pop
insb
je
mov
push
add
add
jg
sbb
repnz
dec
push
testl
or
in
test
dec
cmpsb
mov
add
nop
dec
xchg
sbb
push
xor
cmp
or
inc
xor
inc
outsb
add
repnz
popf
add
sub
pop
push
stos
or
sbb
push
or
jb
push
js
test
add
ret
gs
mulb
mov
push
movsb
gs
sub
sbbl
or
test
push
pop
dec
mov
jmp
add
or
cmp
hlt
test
notl
imul
cmp
inc
outsl
nop
mov
xchg
cli
fdivr
fs
xchg
pop
shlb
aam
inc
lea
pop
ret
mov
mov
xor
add
pop
xor
dec
enter
scas
orl
adc
dec
enter
push
inc
or
or
push
mov
mov
mov
test
ja
push
cwtl
sbbl
daa
ficomps
push
push
mov
lods
addb
mov
rclb
pushf
xorb
fcoms
test
ljmp
xchg
rorb
in
pop
or
adc
movsb
xchg
or
lea
xor
icebp
push
pop
push
jmp
addr16
pop
jns
pop
mov
or
fadd
repz
jp
push
test
xor
out
jp
push
lret
inc
pop
pusha
jg
scas
aad
int
gs
cmp
test
adc
lea
inc
inc
andl
fstpl
cmp
in
jecxz
gs
test
dec
mov
out
mov
jp
jnp
test
xchg
xor
aad
das
popf
mov
cmpsb
adc
or
sub
notb
inc
std
arpl
ret
aam
pop
lret
push
arpl
pop
mov
sbb
les
pop
das
sbbl
ss
inc
es
inc
pop
pop
test
fld
int
cmpsl
xlat
shr
sbb
lcall
test
jmp
gs
jae
or
mov
pop
testl
add
notl
push
cld
mov
xchg
sub
lcall
mov
cmp
dec
xor
cli
mov
mov
push
xchg
movl
dec
cli
fisubs
sbbl
lods
cmp
push
lsl
push
and
sub
aaa
in
loop
or
imulb
add
scas
daa
lcall
push
or
test
add
ja
mov
and
rcll
adc
mov
test
sub
fldenv
aas
icebp
sub
mov
or
pop
popa
sub
jg
and
gs
test
push
arpl
das
call
dec
sub
pop
outsl
jecxz
cmpsb
orl
sbb
out
loope
sub
inc
add
and
inc
out
imul
lods
pop
int
bound
andb
dec
and
fsubrl
addb
shl
outsb
mov
lret
jmp
sub
insb
pop
mov
leave
pop
jmp
mov
sar
loop
and
inc
and
xchg
mov
jmp
add
xchg
ret
movb
and
jecxz
lock
das
out
or
cmp
dec
insl
test
or
les
pusha
fildl
jp
sahf
pop
enter
cmp
jbe
movsb
popf
setns
mov
mov
cmp
cmp
shlb
test
jo
cmp
or
cld
jbe
mov
inc
insl
test
xchg
mov
test
sbb
mov
dec
sarb
pop
test
mov
or
into
mov
sbb
sbb
inc
test
insl
sub
popa
push
and
jae
xor
dec
adc
jbe
pop
rol
fsubl
mov
stos
out
notb
sub
cmc
dec
jo
shlb
ljmp
outsb
lret
jbe
std
inc
pop
push
loop
imul
faddl
dec
sbb
in
jne
add
std
dec
xchg
out
add
ficompl
test
loop
sti
mov
and
xchg
sbb
lods
cld
aas
int3
mov
repz
xchg
adc
repnz
sahf
sti
xor
loope
je
sbb
mov
daa
in
lods
in
call
fwait
or
rcl
popa
xor
dec
add
mov
dec
add
ljmp
in
pop
adc
fnstsw
stc
test
jns
jecxz
fprem1
data16
out
mov
cmp
adc
and
fsubrs
mov
or
cmp
or
mov
imul
dec
std
sbb
cld
shrl
xchg
int
mov
xor
ljmp
pop
sbb
add
adc
fs
pushf
out
int3
into
xchg
add
sub
pop
shl
inc
pop
pop
es
ret
pop
and
insb
jmp
mov
in
push
call
xor
pop
insl
in
add
stos
push
mov
pop
bnd
fs
loope
scas
popf
pop
sub
adc
pop
jae
push
push
in
stc
or
pop
lock
outsb
cmp
leave
gs
in
ficompl
sti
jns
popf
sbb
inc
aam
xchg
push
pop
add
sub
in
pop
jle
xor
int3
adc
sbb
mov
fldl
popf
or
sbb
mov
popa
inc
inc
ret
add
jb
pushl
or
cmp
lods
out
pop
fs
mov
mov
sbb
mov
je
inc
add
xchg
dec
jb
and
aas
std
pop
cltd
xchg
jge
decl
test
jecxz
mov
push
sbb
add
fs
and
jne,pn
dec
mov
test
stos
and
add
lret
push
aas
sub
data16
or
inc
fsubrp
xor
sub
pop
jbe
jb
jge
jle
cmp
and
inc
aaa
pop
loope
in
dec
add
icebp
cmp
sbb
pop
lcall
jbe
inc
pop
in
xchg
rol
lcall
aas
cmp
fxch
in
lock
cwtl
imul
call
push
outsl
in
sbb
pop
and
aam
push
mov
sbb
xor
in
pop
insl
test
cmp
icebp
mov
jmp
mov
adc
sahf
add
dec
std
pop
cmp
in
mov
push
adc
or
insb
gs
mov
xchg
xchg
cmp
sbb
mov
jns
jb
pushf
push
lods
pop
sarb
cmp
jns
lea
inc
sbbb
jl
push
mov
jnp
dec
cmp
jbe
jae
pop
test
adcb
add
clc
mov
dec
int
outsl
insb
pop
jp
rep
stos
popf
sarl
sub
test
loopne
add
pop
xlat
mov
add
sub
pop
mov
add
push
push
test
mov
add
sbb
and
inc
pop
and
push
stc
sub
scas
jb
mov
pop
test
mov
sbb
loopne
jmp
aaa
and
jle
shl
pop
insl
sbb
gs
pop
pop
dec
je
ret
test
add
mov
outsl
or
addr16
add
xor
sub
jns
sbb
or
rcl
lret
jbe
sbbb
test
mov
ljmp
hlt
mov
pop
or
fwait
arpl
cld
das
mov
mov
sbb
pop
add
lret
add
lock
xchg
popw
pop
lret
test
sbb
dec
sbb
pop
mov
xchg
insb
imul
and
add
cmp
jns
shrl
mov
mov
pop
sbb
push
stos
enter
fisubl
test
and
pop
adc
ret
gs
jg
jg
movsl
sbb
sarb
jl
cli
fsub
pop
mov
lret
jne
push
lods
in
arpl
sbb
pop
dec
jne
ret
xchg
daa
int3
fildl
cld
mov
inc
add
xor
mov
mov
jg
inc
jecxz
mov
xchg
mov
and
adc
pop
lods
repz
jb
cmp
mov
enter
pop
and
imul
mov
lahf
add
decb
repnz
cmc
test
ficomps
js
mov
clc
insb
xchg
mov
mov
or
out
fdivrp
aam
inc
pop
dec
xchg
push
pop
sahf
mov
xchg
int
nop
pop
push
out
popl
pop
test
add
roll
cmp
aam
popf
lds
sbb
mov
enter
stos
sbb
jo
cmc
cmp
insl
jmp
lods
and
das
add
bound
and
mov
pop
xor
mov
pop
sbb
loop
sarb
lods
cmpsb
sbb
repnz
sahf
mov
int3
scas
mov
cmp
mov
jp
push
int
push
mov
sub
mov
cmp
sbb
call
pop
iret
jae
jns
xor
ffreep
lock
pop
icebp
xchg
mov
cmp
cmp
mov
fldl
push
rcl
or
xchg
testl
fcomip
cmp
pop
popf
cmp
ljmp
aam
stc
enter
push
into
pop
sub
hlt
lahf
jge
inc
pop
mov
mov
stc
fdiv
nop
add
adc
mov
fidivrl
sahf
inc
je
cmp
mov
pop
ds
mov
imul
ror
push
dec
xlat
popf
xchg
dec
add
inc
xor
flds
push
int
arpl
inc
test
mov
fstps
repnz
cmp
xchg
test
dec
pop
in
push
jae
jbe
jl
add
test
inc
sbb
mov
jnp
dec
push
cmp
pop
jp
fcomps
and
pop
mov
cwtl
xchg
arpl
mov
aam
or
incb
stc
icebp
inc
sbb
and
clc
fnsave
jp,pt
lret
lcall
push
or
test
mov
mov
mov
test
std
cmp
add
push
sub
push
push
sbb
movsb
repz
xchg
pop
std
rcrl
arpl
jae
jge
dec
jl
inc
mov
inc
sbb
dec
aaa
mov
rep
gs
repnz
cltd
cmpsb
lods
cs
in
pop
fwait
int
pusha
or
test
cmp
xchg
and
arpl
fdecstp
pop
pusha
sub
test
xor
mov
es
inc
adc
pop
cmpsl
in
jns
pop
fidivrs
enter
insb
pop
inc
inc
int
lahf
sti
mov
push
jle
cmp
sbb
dec
cmpsb
out
xchg
ds
lods
xor
push
and
in
test
movsb
fmuls
incb
and
add
shl
sub
mov
add
popf
lahf
sub
mov
leave
lock
mov
adc
cmp
ja
add
fucomi
data16
incl
push
mov
mov
or
jg
repz
sub
pop
dec
clc
int3
sbb
mov
gs
jbe
mov
test
test
pop
f2xm1
mov
pop
xchg
in
jns
pop
mov
nop
xchg
jmp
push
push
aam
jle
inc
pop
dec
mov
add
mov
sti
lret
shlb
je
imul
cmpsb
sbb
push
into
mov
lods
popa
std
pop
test
test
mov
clc
hlt
sahf
stos
pop
jne
sbb
arpl
lcall
js
pop
movsb
int3
stos
mov
dec
clc
sbb
fsts
add
jge
sub
mov
js
orb
daa
mov
loopne
loop
cwtl
push
ret
lret
int
jp
dec
pop
stos
repz
xchg
dec
mov
lret
jns
sti
cmp
hlt
push
push
sub
push
loope
dec
add
xor
mov
xchg
out
pop
adc
xor
jp
mov
add
outsl
hlt
idiv
inc
loopne
mov
cld
jmp
xlat
pop
inc
fisubrs
stos
int3
shll
outsb
pop
loopne
faddl
icebp
xor
mov
enter
sbb
sub
out
insb
and
push
pop
lret
jbe
xor
aaa
pop
call
cmp
sub
mov
dec
movsl
pop
mov
insb
adc
adc
lcall
ljmp
jge
mov
jns
mov
repz
push
cwtl
mov
jne
pop
scas
sbb
clc
sub
or
scas
cmp
les
xchg
cmp
ret
pop
roll
outsl
add
stc
in
push
out
adc
jnp
pop
sahf
gs
lret
stos
ret
xchg
outsl
add
hlt
fstpl
jns
shlb
movsl
fbstp
jb
shrl
scas
pop
add
insb
imul
xor
fsts
push
sub
pop
hlt
cltd
popf
movsl
loopne
push
jne
cmp
jl
sbb
popf
add
or
or
xor
and
out
das
pop
lret
add
orb
or
pop
mov
das
pop
int
inc
cmp
fstl
jl
pop
mov
mov
mov
jmp
testb
popf
mov
jmp
into
pop
and
sahf
inc
fistps
pop
mov
arpl
mov
cmc
mov
xor
pop
xchg
out
pop
dec
iret
jnp
mov
test
lcall
fwait
imul
cld
pop
add
xor
ljmp
inc
and
stc
cltd
or
mov
cwtl
pop
ror
test
dec
jo
xor
pop
fstp
icebp
jle
data16
incl
mov
lods
and
ret
mov
aam
mov
jmp
arpl
cmpsb
fsubrl
lcall
push
loop
jb
pop
mov
xor
xchg
ja
in
adc
jle
incb
lock
arpl
cmp
push
aad
push
lods
fld
pop
pop
stos
sti
hlt
lret
shl
pop
bound
mov
pop
pop
adc
dec
add
lea
cmpsl
push
mov
adc
jne
sbb
aaa
pop
lret
and
fldenv
outsb
adc
js
ja
pop
mov
aas
ret
mov
mov
leave
movsb
fcmovnu
push
mov
fwait
dec
and
sahf
pop
push
mov
std
pop
jb
lock
hlt
mov
jle
ss
cs
inc
mov
pop
mov
sub
jno
iret
adc
sbb
xchg
call
ret
jp
xchg
bound
fiaddl
mov
stos
aam
mov
jne
sbb
cmp
imul
mov
cmp
pop
ror
pop
cmp
icebp
push
inc
imul
fsubr
sarl
push
cmp
pop
sub
in
scas
xchg
jp
jg
add
jge
add
outsl
sti
inc
clc
sarb
aad
fstpl
lds
pop
add
sub
or
shl
js
out
dec
push
push
incb
arpl
lods
pop
push
pop
add
cmpsl
mov
mov
enter
stc
int3
jns
xor
or
adc
aas
jl
rclb
fs
int
xchg
inc
jbe
push
dec
mov
push
sar
leave
fdiv
cmp
rolb
push
mov
mov
xchg
arpl
pop
mov
cmp
pop
loopne
mov
fs
jns
xor
or
add
push
jl
inc
outsl
sub
loopne
add
scas
jmp
jge
xchg
std
inc
pushf
mov
cmp
and
gs
test
xlat
insb
addr16
std
cmp
pop
dec
mov
hlt
negl
cmp
jne
les
adc
rcrb
aas
stos
xlat
or
sbb
pop
jge
mov
jae
jo
lods
push
jb
insb
dec
imul
mov
loope
ds
lods
sahf
jl
dec
std
cltd
rolb
aas
dec
imul
cmp
mov
aas
sub
xchg
ss
test
sub
xlat
inc
sub
cld
icebp
and
stos
jnp
nop
pop
jle
sarl
test
pop
loope
mov
jns
mov
ficomps
mov
sub
testb
cmp
stos
mov
mov
lock
test
popf
add
data16
nop
rol
add
scas
je
shlb
mov
dec
xchg
sbb
add
xor
stos
sti
sbbl
js
push
push
out
pop
scas
pop
in
jp
xchg
push
jne
adc
pop
negb
push
add
fsubrs
lods
cmp
loope
push
cmp
rcrb
inc
add
les
sub
in
in
mov
lock
call
push
jg
ljmp
icebp
xor
pop
xchg
cmp
test
cld
sub
shlb
push
and
xchg
cmp
mov
mov
pop
mov
shlb
sub
aam
dec
std
mov
icebp
xchg
jge
insl
pop
fstpl
loopne
add
mov
pop
sbb
dec
mov
pop
jp
pop
icebp
jb
imul
fnstenv
test
mov
leave
lods
pop
jl
jg
dec
insb
mov
pop
loope
sti
cmpl
jne
fisubrl
mov
mov
daa
sbb
mov
cmp
mov
add
pcmpgtd
aas
out
cmp
dec
pop
xor
mov
repz
cs
dec
dec
lods
mov
pop
mov
mov
test
adc
pop
out
jns
movsb
push
pop
pop
or
sarl
cmp
outsb
sbbb
push
orb
mov
xchg
jp
pop
icebp
jns
pusha
hlt
std
mov
jmp
dec
and
mov
pop
loope
in
int
int3
pop
jnp
insb
jge
dec
dec
push
cmp
cmc
stos
clc
sbb
loope
gs
je
int
push
in
lods
dec
sbb
mov
stc
fidivrs
daa
pop
ss
jecxz
adc
add
negl
inc
jecxz
mov
fcomip
icebp
movsb
int3
mov
xchg
pop
jmp
sti
sbb
xchg
mov
shll
jecxz
frstor
std
imul
repz
and
pop
xchg
mov
inc
mov
sbb
dec
lret
bound
inc
pop
mov
shl
std
mov
rolb
scas
and
ljmp
loop
sahf
jle
out
sbb
stos
pop
sbb
je
jmp
or
mov
cwtl
loop
pop
lea
fs
xor
fwait
push
fisubl
or
aad
subb
inc
cmp
cmc
xor
xchg
pop
add
in
jnp
cmp
hlt
pop
jo
mov
call
shlb
dec
pop
mov
sub
sub
into
cmp
jge
shll
stc
aad
scas
push
add
test
pop
xor
divb
ret
bswap
out
iret
mov
mov
insl
mov
arpl
push
add
or
xchg
repnz
fs
sbb
xchg
push
roll
nop
adc
inc
jne
pop
xlat
dec
inc
mov
jnp
mov
mov
adc
pop
jl
stos
and
pop
scas
lock
pop
in
incb
test
mov
add
imul
lret
dec
add
or
loopne
jg
push
js
and
or
mov
stc
addb
pop
dec
jo
inc
ds
aas
mov
lods
imul
xchg
rorb
sahf
loopne
and
in
xchg
lcall
pop
sbb
mov
cwtl
xchg
or
lea
push
jbe,pn
add
xchg
sbb
addr16
push
stos
adc
call
pop
mov
dec
pop
je
mov
add
and
enter
mov
cmpsl
je
movsb
mov
add
std
stos
mov
push
loope
cld
and
hlt
xchg
out
mov
gs
movb
jge
mov
leave
lret
hlt
mov
ds
cwtl
mov
aaa
adc
pop
fidivrs
push
fs
inc
xor
push
bound
sti
pop
or
xchg
xchg
lods
out
hlt
ret
lret
repz
ja
push
decl
cmp
push
pop
add
pushf
movsl
or
mov
mov
inc
shlb
cmp
mov
lret
or
in
push
mov
jp
adc
sbb
jle
cmp
lret
loopne
cwtl
pop
in
xor
pop
lods
pop
stc
inc
clc
mov
mov
lock
mov
mov
call
stos
dec
cwtl
jmp
int
jge
add
fnstsw
mov
in
iret
popa
pop
cld
fs
movsb
arpl
sarb
dec
or
sbb
sahf
add
dec
mov
mov
pop
loopne
loope
stc
dec
out
sti
add
pop
lods
or
inc
insb
mov
or
xor
mov
scas
into
lret
mov
rcrb
sub
xor
inc
mov
mov
imul
mov
sbb
mov
pop
xchg
pop
shlb
pop
jno
sahf
in
fsubrl
mov
cld
fstps
jns
jne
dec
cmp
imul
add
cmpsb
mov
fisttpl
xchg
push
scas
jno
cld
sbb
scas
pop
jl
inc
leave
addl
cmp
jbe
js
fwait
hlt
and
sub
pop
into
dec
jg
adc
stos
xchg
mov
mov
mov
dec
rorl
fucomi
bound
xchg
mov
jmp
push
cmp
mov
aam
jle
and
sbb
inc
jno
sbb
mov
shrb
mul
jo
pop
sti
jb
push
sahf
mov
add
scas
or
sbb
xchg
dec
mov
scas
push
ljmp
out
cmp
sbb
push
outsb
inc
js
les
sub
add
arpl
push
push
sbb
mov
mov
cmp
jnp
jl
fstpt
xchg
cltd
pop
inc
jge
and
jmp
and
stos
sub
mov
xchg
in
popa
xchg
out
sti
pop
decb
ret
call
sbb
pop
sarb
dec
cmc
mov
inc
xlat
sbb
fucomip
mov
hlt
pop
mov
xor
in
dec
frstor
shrb
pop
test
xor
xchg
cmp
adc
mov
push
sahf
movsb
mov
imul
sbb
pop
clc
mov
inc
jnp
add
in
xchg
mov
outsl
int3
cltd
repz
pop
jge
test
subl
mov
fs
sub
jle
loopne
sub
adc
cld
sub
xchg
cmc
pop
pop
push
xchg
mov
mov
test
orl
sub
cmp
sbb
xor
mov
mov
in
std
push
and
pop
pop
decb
repnz
jmp
add
cmp
shlb
mov
mov
repz
jl
imul
mov
xor
push
mov
cmp
insl
mov
jmp
dec
hlt
int
mov
es
aas
fstl
xchg
cld
mov
sub
jnp
lret
mov
stos
adc
mov
jno
pop
loopne
xor
cmp
push
pop
iret
je
mov
stc
in
add
cmp
pop
rol
test
in
pop
in
and
push
shl
call
mov
hlt
cmp
sbb
mov
je
cmpsl
pop
inc
aam
sti
mov
xor
add
loopne
fisubrs
mov
jle
aad
push
gs
xchg
std
movsb
add
pushf
stc
jne
icebp
int3
js
rcrb
cmp
cld
mov
stos
add
cmp
inc
gs
jmp
scas
mov
xor
out
cmp
mov
leave
cmp
mov
lret
stos
or
lock
call
xor
jg
inc
std
test
jnp
dec
jb
aam
insb
repz
aas
stc
xchg
mov
mov
pop
xchg
mov
faddl
mov
add
flds
cld
jp
push
adc
lock
arpl
adc
mov
sbb
cmp
xor
out
stos
fmulp
out
rolb
loopne
mov
or
negb
mov
add
dec
outsb
sub
pop
test
lods
jns
dec
fidivrs
sbb
pop
sub
dec
cmp
add
jmp
imul
mov
xorl
cmp
xchg
push
sbb
mov
fisubl
dec
adc
jmp
rolb
cmp
in
loop
mov
loope
sahf
outsb
jp
je
call
sbb
mov
std
mov
pop
clc
jp
sbb
rorb
jl
sub
xor
jle
and
popa
pop
cwtl
pop
ja
xchg
popf
cmovge
addl
push
xchg
xor
dec
ja
arpl
aas
push
jns
imul
cmp
add
cs
lea
outsl
sbb
sahf
push
fucomi
and
xchg
push
pop
lret
mov
fistps
and
xorl
or
mov
and
pop
pop
rclb
int
add
outsl
aas
stos
inc
loopne
pop
pop
jmp
nopl
cmp
imul
xor
adcl
and
ret
push
stos
jae
leave
aas
scas
std
inc
add
scas
sub
inc
das
fstp
repz
adc
add
fucomi
in
push
add
or
fptan
dec
push
cli
adc
roll
sbb
gs
outsb
and
fcmovne
mov
daa
sbb
or
xlat
xor
or
enter
aam
rcrb
xlat
lods
or
hlt
es
bound
xchg
jecxz
ds
and
ljmp
pop
test
cmp
insl
lods
cltd
das
push
inc
sbb
mov
jecxz
mov
iret
gs
out
ss
adc
xchg
inc
dec
pop
pop
sbb
in
jecxz
scas
lea
and
popf
loope
int
or
fcoml
das
cmc
sbb
sbb
xchg
loope
into
popf
lahf
aas
push
fdivs
pop
sub
test
fcmove
adc
inc
sbb
or
inc
xchg
push
cwtl
loopne
adcl
pop
outsl
stos
pop
push
pop
or
ret
leave
xor
and
xor
cmpsl
fistl
adc
cltd
xor
loope
jne
adc
xchg
xchg
jnp
movsl
pop
test
xchg
movsl
jnp
xchg
adc
push
xlat
pop
xchg
cmpsl
push
xchg
ja
bnd
sbb
daa
and
das
ret
or
add
in
dec
gs
js
lea
clc
popa
push
gs
or
and
inc
pop
mov
add
add
add
add
cmpsl
add
arpl
adc
call
xor
cmpl
jnp
cltd
pop
ret
cli
or
aaa
add
out
and
fndisi(8087
pop
pop
push
fucom
divl
cwtl
mov
sbb
sti
jl
rcl
out
inc
mov
dec
fidivl
jp
in
xchg
test
out
jnp
xlat
sbb
repz
mov
adc
jne
dec
add
adc
jae
fucom
xchg
xor
fildll
adc
pop
inc
or
roll
ficoml
test
in
aad
xchg
popa
enter
ja
sub
push
mov
jmp
or
imul
iret
lret
adc
mov
push
mov
sbb
cwtl
arpl
xchg
xor
lea
neg
das
movl
lods
out
fcmovbe
inc
cwtl
fsubrl
sub
int
mov
xor
inc
daa
pop
fdiv
lods
sbb
or
fsubs
cwtl
outsl
jae
pop
hlt
out
xchg
icebp
cmpsl
int
ret
in
fidivs
gs
imul
dec
pop
pop
loope
jp
dec
cmp
jmp
jae
push
mov
outsl
arpl
mov
test
jg
pop
aas
es
pushf
cmpsl
jp,pt
fbstp
insb
test
popa
insl
cwtl
inc
mov
xorl
arpl
inc
mov
sti
scas
popa
cmp
inc
push
mov
sbb
arpl
cmp
sbb
cmp
das
jecxz
jnp
push
sub
imul
xor
xchg
jae
cltd
aam
and
arpl
or
das
hlt
ja
mov
inc
inc
test
in
scas
sub
mov
loopne
pop
mov
daa
mov
adc
jne
in
fdivrl
add
sub
out
or
lret
jne
sub
shrb
filds
lret
mov
insl
test
push
cli
stc
pop
fs
push
inc
jge
popf
fxch
adc
cmc
jge
cli
jae
aas
jge
push
inc
jge
imul
jns
pop
rcr
push
mov
sarl
popf
sbb
add
ja
xchg
or
shlb
call
push
sbb
xchg
push
jnp
mov
popa
mov
dec
xlat
loopne
fidivrl
push
sbb
push
iret
rcr
and
sbb
hlt
int
xchg
es
test
pop
jae
lret
jg
or
aad
or
int
shl
fwait
mov
notb
das
pop
popa
jmp
add
mov
cmpsb
sahf
fcmovnu
adc
data16
xchg
add
add
or
or
cmp
sub
pop
and
or
fadds
or
or
adc
cli
sbb
out
imul
fistps
mov
fmull
and
mov
adc
outsb
push
mull
test
sub
sub
dec
popa
sub
ret
es
addl
jecxz
xor
dec
mov
and
scas
loope
mov
mov
push
repnz
mov
les
in
add
and
int
pop
bound
lret
loop
in
push
jne
adc
adc
push
out
and
cli
mov
jp
ficomps
rclb
lahf
lret
into
pop
loopne
xchg
gs
and
xor
sahf
andb
inc
and
pop
inc
and
sub
arpl
das
in
addl
inc
es
adc
dec
push
pop
and
mov
js
aaa
pop
rorl
xor
iret
dec
adc
add
and
int
stos
imul
push
xor
inc
pusha
outsb
aam
rcll
test
mov
xchg
mov
testl
mov
mov
pop
cmc
push
ss
jbe
mov
pop
notb
xchg
mov
repz
xor
je
mov
cli
lcall
jge
pop
stos
daa
xor
adc
test
shll
insl
jge
or
js
mov
xchg
imul
int3
pop
and
inc
out
fiadds
sbb
add
adc
lahf
dec
push
add
mov
cmp
mov
adc
pop
jae
repz
lret
pop
ret
push
ficomps
xchg
add
mov
aam
push
out
pop
or
adc
pop
and
lods
cmc
outsl
sub
mov
dec
test
andb
fmull
pop
pusha
pushl
push
pop
xor
xchg
dec
push
or
js
sbb
into
pop
test
repz
addr16
repnz
and
rol
add
push
dec
ds
dec
les
pop
mov
cwtl
movsl
leave
in
repz
pop
ror
mov
sub
scas
loopne
pop
pop
cwtl
xorl
xchg
mov
std
pop
pop
lcall
or
inc
es
xlat
pop
enter
mov
inc
push
sub
sub
add
mov
dec
fidivrs
mov
dec
mov
cmpsb
es
in
or
mov
mov
push
in
inc
leave
out
das
mov
ljmp
imul
sbb
jl
adc
lock
jnp
cwtl
cmp
mulb
adc
ret
cmp
and
lret
mov
nop
mov
pop
mov
in
es
sub
imul
inc
xchg
je
pop
and
inc
sub
cltd
xor
out
roll
shrl
sbb
int3
add
pop
cwtl
loop
mov
xor
insl
sub
jge
aas
or
scas
or
pop
mov
addr16
pushl
xchg
cwtl
adc
inc
pop
bound
dec
incl
lcall
jle
mov
fs
dec
shll
lods
push
fldl
mov
repnz
lea
xchg
adc
pop
push
imul
cmp
std
mov
into
pop
ss
xchg
call
bound
sbb
into
push
inc
in
rorl
ret
sbb
clc
pop
js
push
fs
aas
jmp
arpl
push
xchg
gs
popl
dec
pop
dec
out
xchg
and
sbb
clc
mov
add
mov
stos
mov
lods
push
sbb
int3
adc
mov
cmp
lret
or
js
add
loop
mov
jbe
cmpsb
rolb
nop
xchg
sbb
mov
and
mov
rol
pop
push
dec
mov
in
add
xchg
sbb
roll
add
inc
cmp
test
jecxz
mov
scas
xchg
adc
rorb
cmp
sub
dec
push
aas
repnz
dec
mov
xchg
adc
or
jl
aad
scas
or
pop
pushl
shlb
xchg
xchg
int
cwtl
mov
cmp
pop
mov
pop
fwait
jmp
jp
xchg
seta
add
insb
dec
pop
sub
add
cltd
add
shrb
cwtl
and
insl
int3
mov
in
sbb
test
mov
pop
push
insb
lods
daa
inc
fistpl
pop
jns
push
enter
mov
pop
lcall
inc
cltd
lods
xor
aas
aad
push
pop
inc
and
push
xchg
jge
addl
data16
sbb
pop
xchg
mov
arpl
inc
popl
jnp
adc
std
ds
mov
icebp
nop
imul
jg
aad
fiaddl
xchg
loopne
sbb
sbb
mov
mov
aam
push
push
test
pop
ret
adcl
xor
or
mov
push
or
mov
and
mov
cmp
ret
or
ljmp
pop
jl
push
lret
stos
push
jb
xor
mov
inc
or
arpl
loopne
xchg
pop
push
repnz
jae
fnstsw
lret
push
pop
test
jne
and
mov
mov
adc
sahf
add
jmp
xor
sub
jns
mov
push
orb
xchg
movsl
xchg
test
sbb
or
jb
hlt
mov
push
ja
popf
pop
out
adc
cmp
cmpb
pop
jecxz
std
les
xor
mov
stos
test
lret
xchg
or
or
jle
rcr
mov
mov
pusha
dec
insb
dec
pop
fstl
push
xchg
cmc
lods
fidivrs
pushf
push
std
xchg
lock
pop
test
int
rorl
add
cmp
xlat
xchg
sbb
cmp
in
or
lock
cmp
call
mov
jmp
pop
sbb
and
subb
jns
xchg
pop
mov
jbe
mov
mov
jno
je
jbe
jns
das
adc
push
lock
add
rcll
cmp
int3
movsl
push
je
or
cmp
not
stc
push
cmp
cltd
inc
inc
adc
cmp
pop
add
sbb
pop
inc
mov
xchg
pop
imul
push
pusha
out
das
es
xchg
lock
push
fidivs
cmp
subl
cmpsl
ret
stc
mov
pop
push
jp
popa
ds
pop
push
pop
addl
adc
add
test
and
cmp
dec
jo
in
mov
push
jmp
cld
mov
push
pop
sub
in
and
and
sti
cmp
sysret
incl
add
pop
pop
mov
scas
pusha
push
jge
arpl
xor
sub
mov
or
ljmp
fsubrl
outsb
cltd
sbb
lcall
or
loope
int3
inc
cs
popf
pop
or
xor
mov
repnz
out
inc
xlat
int
mov
fldt
push
pop
push
jns
xchg
leave
jmp
jg
push
jae
into
dec
mov
add
xlat
fidivrl
test
pcmpeqb
cmp
mov
leave
xchg
outsl
cmp
arpl
dec
add
sbb
iret
mov
or
inc
cld
mov
jae
fdivr
data16
mov
jno
ret
mov
jle
mov
sub
in
aas
xor
lock
xlat
scas
mov
dec
ja
repz
mov
sub
lret
mov
lods
pop
dec
push
mov
std
cmp
in
shlb
sbb
dec
xchg
lods
pop
xchg
mov
add
movsl
adc
or
pop
adc
fld
repz
in
in
jne
cmp
or
es
xor
xchg
lret
push
jae
xlat
stos
shlb
shr
inc
mov
cmp
xor
jmp
xchg
jns
arpl
inc
pop
mov
dec
popf
imul
sbb
push
outsb
add
mov
push
nop
xor
int
sahf
dec
ret
pop
dec
ds
push
jle
lcall
icebp
fbstp
icebp
sarl
inc
outsl
and
push
fwait
popw
push
adc
jge
addr16
jb
pop
fisubl
mov
push
xor
sbb
ljmp
pop
cmp
in
sbbb
fistpll
out
add
cs
jge
pop
inc
fistl
pop
ljmp
xor
inc
dec
push
aas
lea
pop
mov
mov
pop
push
loop
xor
xor
movsl
mov
mov
mov
rol
out
fistps
inc
jge
inc
add
movsb
fidivrl
sub
sahf
andb
insl
pop
jo
inc
pop
mov
imul
scas
mov
incl
sbb
int3
repnz
xor
inc
push
mov
imul
pmaxsw
jmp
pop
and
mov
or
mov
mov
sbb
and
xchg
mov
lods
pop
and
xor
mov
jae
mov
ljmp
cltd
out
fcomip
cmp
pop
loopne
fnsave
push
xchg
sbb
and
mov
sbb
pop
sub
xchg
es
nop
add
popa
mov
adc
mov
mov
je
shrl
imul
mov
mov
cmovle
and
xchg
xchg
pop
es
addr16
pop
nop
push
adc
xor
je
dec
mov
sub
pop
js
adc
or
xchg
jg
mov
xor
fisubs
cmpsb
push
dec
xor
lods
cmp
add
or
aad
test
fdivs
jecxz
test
and
repnz
adc
pop
mov
pop
xchg
in
and
fidivs
or
push
rcr
jg
pop
xchg
lcall
pop
stos
test
ret
jb
scas
and
sbb
outsb
shlb
sti
out
in
sahf
sarb
nop
repnz
push
pop
arpl
popl
inc
mov
scas
pop
inc
adc
out
iret
mov
sbb
or
push
push
popa
rclb
push
sbb
xor
push
mov
in
or
movsl
adcb
adc
in
jne
fwait
pop
mov
jp
pop
lods
mov
cmp
add
pop
push
loope
psubw
add
rorb
mov
fcomp
pop
jl
jmp
mov
dec
imul
insb
pop
mov
lods
add
and
test
pop
mov
mov
xchg
fidivrs
pop
push
ficompl
cmpsb
mov
lahf
pop
out
int
add
dec
mov
ljmp
movl
loop
mov
imul
out
sbbb
mov
mov
pop
in
xchg
or
and
push
dec
pop
add
pop
jg
cmp
xchg
out
mov
pop
stos
rorb
out
test
ss
int3
sbb
xchg
daa
or
push
push
lret
jecxz
js
cmpsb
lock
addl
fxch
loope
push
push
in
sbb
jmp
add
test
push
lock
fcmovu
xchg
stos
sti
lods
pop
dec
sub
mov
sbb
cmpsl
lods
mov
pop
pop
fs
jb
and
jne
pop
cmp
xchg
jecxz
pop
adc
dec
ds
mov
stos
mov
testl
icebp
mov
fadds
mov
mov
or
das
or
mov
sub
jle
imul
mov
into
push
pop
mov
pop
push
pop
fcmovu
rcrl
shlb
add
pop
inc
add
mov
ret
pop
fcmovne
sbb
stos
outsb
lods
or
inc
jle
or
mul
pop
mov
imul
pop
cltd
jb
lcall
jmp
mov
iret
pop
lret
and
fwait
sbb
ss
xor
nop
loop
cmp
adc
stos
cld
mov
je
jbe
dec
cmpsl
lds
ds
sbb
xor
fwait
cmp
out
cmp
pop
sahf
daa
roll
cmp
scas
mulb
xor
in
push
xchg
cld
jb
cld
es
int3
pop
bound
enter
pop
pop
fisttpll
inc
mov
pop
decb
add
sarl
sbb
repz
insl
cmpsl
cmp
adc
sbb
stos
mov
pop
fimull
imul
mov
js
mov
cmpsl
stc
pop
jge
jno
popf
jle
pop
jbe
jmp
pop
mov
mov
fcoml
ja
es
jae
pop
negl
cmp
ds
pop
jb,pn
or
insl
push
ja
xchg
cmp
lea
add
xchg
popf
lahf
es
pop
jbe
mov
dec
sbb
xlat
clc
mov
inc
jae
rorl
in
mov
mov
and
andnps
pop
lea
sti
xor
cmp
lret
or
sar
fcmovb
dec
dec
push
testl
push
or
add
xor
inc
shlb
add
pop
and
fadds
pop
test
aad
mov
adc
and
or
std
mov
adc
mov
sub
pop
mov
and
adc
inc
leave
pop
push
clc
call
es
bound
cmp
xchg
insb
lret
add
jg
sub
aas
aas
scas
pop
adcl
inc
xchg
out
dec
push
jg
pop
xor
mov
dec
cmp
and
pop
sbb
push
xor
loopne
cmp
jg
sti
cmpsb
cmp
ret
cmp
jp
pop
jo
xor
fimuls
ficoml
adc
dec
pop
pop
popf
inc
movsl
push
inc
sub
add
xchg
pop
loop
xor
push
imul
enter
jnp
pop
adcb
mov
hlt
sub
mov
pop
xor
inc
mov
cmc
les
pop
shlb
jmp
hlt
int3
lods
pop
mov
mov
ja
lcall
jle
push
outsb
out
push
mov
mov
push
nop
test
lods
adc
pop
dec
or
and
push
jnp
jle
stos
fchs
jg
mov
movsb
lea
sarb
scas
cmpsl
movsl
adc
ret
pop
mov
add
inc
pop
mov
sbb
mov
pop
shlb
inc
cmpsl
jg
jnp
popf
jb
xchg
and
mov
sub
mov
jnp
jbe
inc
fmull
pop
out
pop
jl
lods
sbb
xor
mov
add
in
stc
mov
jbe
mov
mov
inc
loop
add
jge
adc
cmp
cmp
ficomps
lcall
xlat
push
add
call
pop
loopne
jmp
push
or
and
adc
inc
xchg
and
jle
jno
jp
fsincos
fmull
and
cwtl
nop
dec
movsl
lds
push
bound
out
pop
aaa
shrb
jge
add
subl
pop
stos
dec
mov
pop
jl
mov
mov
inc
sbb
in
lret
xor
out
fimuls
outsl
pop
mov
push
or
pop
dec
repz
sbb
shrb
sbb
mov
cs
fsts
fsubs
pop
push
mov
mov
push
and
std
and
mov
aas
mov
mov
jnp
in
imul
or
sahf
fidivs
js
mov
mov
pop
repz
in
addl
inc
adc
cmc
jp
pop
imul
push
shlb
call
fdiv
cmpl
outsb
mov
rolb
rcr
sbb
xchg
mov
sub
ja
mov
pop
lahf
or
push
pmaddwd
js
idiv
mov
pop
nop
sahf
ret
int
addr16
scas
inc
xor
ds
jns
mov
push
xor
pop
insb
into
imul
push
cmp
pop
inc
mov
jae
clc
adc
shlb
sbb
ret
sarl
push
jno
xchg
je
incl
nop
mov
add
cmp
jns
andl
insb
cmp
jnp
jns
cmpsl
fidivrl
cmp
rcr
iret
pop
inc
jo
out
and
decl
je
fidivrs
xor
xor
fcoml
lahf
jno
pop
not
cwtl
in
call
stos
dec
jmp
xchg
enter
or
push
loopne
xor
les
lcall
sbb
cltd
fcoml
aad
push
test
sbb
rcr
mov
jne
or
pusha
mov
jnp
pop
scas
adc
mov
lods
lock
pop
mov
cmpsl
push
or
inc
xchg
clc
cld
dec
out
pop
stos
add
mov
pop
or
lcall
mov
fcoms
or
push
aas
mov
sbb
push
in
rolb
push
cmc
fdivrs
cwtl
sahf
pop
push
mov
in
jp
das
cmc
mov
int
pop
std
ror
jne
aad
jmp
pushf
mov
adc
or
xchg
daa
sar
loopne
pop
jge
mov
pop
imull
pop
lds
test
mov
enter
cs
movsl
mov
pop
jmp
cmc
inc
add
sbb
and
repnz
icebp
popa
iret
and
ficomps
xchg
jge
inc
mov
icebp
out
insl
outsb
test
fisttpl
pop
das
push
mov
clts
mov
sub
push
cmp
popfw
rcrl
inc
call
pop
in
adcl
dec
or
insl
pusha
push
sub
jle
dec
ss
xchg
cmc
and
cmp
addb
mov
dec
jp
xor
add
das
aam
jns
mov
inc
pop
lahf
fcmovbe
repnz
dec
xor
stc
mov
xchg
pop
or
inc
dec
js
push
jb
cmp
subb
arpl
or
pop
jnp
mov
mov
push
ljmp
pop
sbb
jo
push
aas
icebp
pop
in
and
nop
jecxz
mov
pop
mov
ficoms
lret
lret
cmp
je
jg
rclb
jae
or
ja
frstor
mov
dec
and
mov
jge
xchg
fnstenv
pop
and
lcall
je
push
cs
push
mov
mov
sbb
pop
xchg
ret
or
and
pop
cmpsl
and
rorl
xor
inc
frstpm(287
cmp
sub
aam
add
call
pop
negb
jge
loopne
nop
pop
mov
pop
dec
adc
js
lahf
sbbl
add
mov
fs
mov
stos
add
adc
mov
sbb
jnp
push
daa
mov
mov
cmp
iret
fidivl
mov
dec
adc
mov
aam
sbb
dec
or
aas
cmp
mov
testl
test
cmc
stc
and
push
adc
xlat
and
lods
or
adc
pop
lcall
stos
mov
jmp
rcrl
test
pop
jae
rcr
cltd
fstpl
and
ja
scas
lcall
jle
sbb
and
js
arpl
cmc
loop
jmp
sbb
xchg
inc
cmp
pop
adc
pop
dec
adc
xlat
stc
xchg
pop
test
imul
pop
pop
nop
jne
into
cmp
fnstsw
pop
and
mov
cltd
lahf
pop
or
mov
xchg
ljmp
mov
mov
jbe
jl
out
mov
pushf
or
pop
jmp
mov
shrl
stc
xchg
add
adc
imul
data16
ljmp
pop
ror
xchg
mov
mov
fdivl
push
iret
mov
mov
pop
cltd
stc
mov
cmp
jns
icebp
mov
aas
or
mov
or
xor
inc
or
test
adc
mov
hlt
pop
add
cmp
popf
push
shlb
cmp
dec
cmp
aaa
int3
pop
sub
fisubl
outsb
pop
push
pop
cmp
dec
adc
loop
pop
es
jo
repnz
pop
insb
and
mov
cs
div
sbb
xor
data16
pop
mov
inc
push
push
mov
and
cmc
lret
mov
aas
aad
cmp
pop
mov
pop
sbb
xor
dec
mov
sbb
inc
rcll
lsl
fsts
pop
xor
mov
lret
sbb
fcomps
adc
sbb
dec
ror
push
xchg
es
pop
loopne
adc
push
faddl
scas
rorl
roll
mov
enter
or
cmp
dec
test
cs
notb
push
pop
outsb
jb
rcll
stc
push
and
push
mov
inc
pmullw
cmpsl
mov
idivb
icebp
sbb
lock
cmpsb
mov
imul
mov
mov
mov
mov
pop
pop
push
cmpl
bound
push
pop
xchg
adc
popf
inc
aas
fsub
pop
mov
lcall
ficompl
clc
stos
mov
sbb
orl
push
popa
lret
cmp
pop
sbb
adc
movsb
mov
sub
test
pop
stc
ljmp
pop
add
mov
cld
mov
sub
inc
add
mov
mov
xchg
imull
icebp
lret
jne
mov
mov
test
adc
cmp
jne
mov
faddl
mov
mov
insl
sbb
inc
pop
addb
cmp
outsb
call
pop
dec
adc
cmp
push
test
mov
cmpsb
pop
rolb
rcr
fimull
add
fwait
popa
insl
in
subb
jae
adc
mov
out
movsl
push
fsubs
in
pop
fdiv
aaa
mov
sbb
insl
or
sbb
mov
sub
rorb
fbld
inc
sti
cmpsb
scas
ret
sbb
pop
mov
fstpt
icebp
pop
loope
mov
ror
jno
add
gs
in
cmpsb
push
mov
add
test
pushf
mov
in
add
push
xchg
xchg
arpl
dec
sbb
gs
nop
xchg
jno
out
add
outsb
dec
mov
xchg
ja,pn
pop
sbb
int3
xchg
out
shlb
roll
mov
and
pop
mov
xchg
lods
roll
cmpsl
fsubs
testb
inc
stc
ss
dec
sbb
xor
mov
jno
inc
test
jle
rep
jne
jmp
clc
and
fwait
jmp
xchg
sub
and
mov
shl
pop
push
stos
fsubrl
in
and
fisubrl
popa
pop
movsl
dec
mov
inc
inc
mov
dec
cmp
cmp
ja
test
out
and
rcll
or
sbb
jns
sbb
add
push
sahf
sub
inc
pop
pushf
xchg
mov
popa
shlb
icebp
pop
dec
mov
fs
mov
mov
cmp
and
mov
adc
jmp
sbb
jno
mov
mov
sbbb
xchg
and
cltd
outsl
inc
sub
es
sbb
insb
mov
pop
xchg
fdivl
daa
jo
imul
shlb
lea
call
call
mov
jbe
jle
pop
mulb
xor
mov
call
add
sub
xchg
enter
pop
xor
pop
repnz
adc
adc
fisttpll
es
pop
fstps
pop
scas
mov
push
loopne
jg
fiaddl
push
lcall
aas
out
addr16
or
pop
arpl
mov
icebp
popf
out
cwtl
hlt
mov
stos
les
rcrl
fsubl
adc
aas
repz
xor
xor
lret
mov
fiadds
and
mov
es
push
xchg
filds
cmpsb
or
ja
mov
mov
sub
mov
sub
pop
push
icebp
jmp
pop
dec
mov
leave
lods
in
push
adc
clc
mov
or
jne
mov
dec
xchg
push
testl
fs
pop
xchg
dec
test
push
divl
lods
pop
inc
insb
or
and
sbb
inc
insl
push
xchg
sub
loope
movsb
jb
ret
jbe
mov
pop
sub
push
dec
andb
sub
dec
pop
xchg
dec
cwtl
js
adc
enter
lock
cmp
jmp
adc
sbb
pop
fdivrl
sbb
ret
add
pop
jmp
test
repnz
clc
rolb
shll
mov
jo
shl
xor
addr16
push
dec
movl
push
loope
loop
pop
stos
cmc
dec
fbstp
fcoms
pop
push
lea
insl
adc
xlat
add
and
lods
push
cmp
clc
outsl
push
xchg
inc
test
pushf
out
inc
sahf
pop
pop
pop
push
int
jle
repnz
pop
and
jg
clc
mov
rcrb
neg
fstl
cmp
pop
and
loop
mov
xchg
addr16
add
lret
xchg
fcoms
leave
fidivrs
cld
out
sbb
sti
hlt
add
ret
enter
pop
cld
iret
sbb
xchg
pop
sub
scas
mov
jae
pop
jno
int
dec
add
cltd
enter
inc
sub
imul
or
out
or
pop
sbbl
dec
pop
adc
loop
aaa
mov
lahf
nop
pop
js
aad
push
je
pop
xorl
mov
decl
mov
out
jecxz
jl
jnp
mov
pop
sub
pop
add
xchg
or
xchg
out
mov
xchg
scas
cmc
dec
popf
sahf
ret
dec
pusha
ss
out
or
fs
adc
mov
cld
test
out
jge
jae
repz
das
mov
iret
cmp
dec
popa
inc
jno
pop
out
scas
arpl
inc
sbb
mov
mov
mov
stos
mov
in
push
mov
pop
mov
mov
jp
push
sub
dec
insl
stc
sub
shrb
jle
decl
push
sbb
pop
roll
and
jge
and
dec
sub
sbb
jb
pop
fistpl
pop
xor
xchg
int
xor
stc
push
gs
pop
dec
enter
push
pop
push
inc
lods
ljmp
add
in
cmpsb
jle
sub
pop
popf
insb
cmp
jecxz
stos
cmp
add
sti
mov
cmc
dec
jecxz
mov
push
addr16
cmp
clc
mov
mov
inc
jo
pop
push
es
push
mov
std
pop
push
push
sub
aas
xchg
add
push
inc
add
cmp
clc
cltd
pop
xchg
mov
pop
out
bound
jmp
mov
dec
fldl
dec
mov
mov
aam
pop
aad
outsl
add
aam
pop
shll
mov
push
repz
lods
adc
adc
sub
jbe
cmp
in
imul
jne
xchg
cmp
cmp
repnz
stc
loope
mov
mov
cltd
cmp
pop
lods
dec
cmp
cmpsl
xor
add
aas
xchg
push
sbb
andb
dec
sub
in
pop
pushf
mov
repnz
lods
les
push
jo
sub
fs
jecxz
out
mov
xchg
decl
test
pop
mov
scas
loope
adc
sbb
mov
hlt
xlat
dec
sbb
popf
xchg
ja
mov
mov
pop
mov
mov
sahf
ljmp
push
push
xchg
mov
jmp
pop
pop
xchg
aaa
xor
cmp
mov
pop
mov
and
push
inc
es
ja
push
rcll
out
dec
fcoms
pop
fstpt
jmp
cmp
push
lock
jns
add
fdivrl
cmp
cmp
sub
push
pop
jo
addl
xchg
inc
or
mov
pop
imul
mov
in
inc
mov
jg
or
dec
mov
mov
decb
add
fidivs
pop
mov
nop
add
pop
mov
pop
lret
stos
fbstp
push
mov
stos
mov
std
outsb
loopne
ljmp
sti
jl
jbe
pop
andb
adc
xor
outsl
jb
inc
xchg
sbb
add
in
negl
enter
add
mov
pop
sti
lds
push
scas
mov
xchg
cmp
pop
mov
mov
outsl
pop
pop
pop
adc
int3
pop
div
in
adc
pop
cs
jbe
mov
cmpsb
pop
xchg
cwtl
insb
cltd
pop
popa
aad
sub
mov
aam
pop
pop
or
clc
sti
xchg
lock
stos
mov
add
lret
scas
cmp
out
pop
cmp
xor
xlat
and
mov
pop
repnz
lahf
ficomps
inc
bound
andb
or
cmp
jb
inc
pop
insl
inc
movsb
ret
xor
mov
loope
addl
jbe
mov
add
pop
mov
in
push
pop
jae
stos
xor
test
and
inc
push
loopne
push
and
loope
movsl
js
xchg
push
inc
xchg
or
mulb
jp
in
pop
roll
aam
mov
pop
mov
adc
cmp
xor
jle
pop
adc
andl
pop
inc
sub
hlt
lea
pop
stos
aam
shr
pop
dec
sbb
xchg
jp
stos
cli
mov
cmp
mov
cmpsl
xchg
cltd
fwait
jp
outsb
add
hlt
and
enter
pop
ret
sbb
cmpsl
repz
imul
dec
pop
in
mov
aaa
insb
jl
je
add
pusha
cs
enter
das
mov
inc
inc
insl
cld
add
fsubs
hlt
pop
punpckhdq
lahf
mov
mov
fmuls
mov
mov
inc
sti
dec
cmp
clc
jns
jnp
mov
inc
or
ficomps
sub
popa
mov
fs
scas
add
ljmp
dec
pop
adcb
into
imul
dec
sbb
shrb
xchg
pop
fwait
sbb
xor
pop
ret
pop
or
push
shl
lret
xor
cltd
div
pop
jb
insl
mov
ss
xchg
jo
xor
pop
push
enter
sbb
ds
xlat
and
es
or
lock
jne
ss
ficomps
and
pop
jae
dec
and
sti
pushf
dec
adc
loope
mov
std
adc
rcrl
sbb
lds
add
push
dec
or
cmp
andb
xchg
xchg
and
popf
pop
stc
pop
adc
add
stos
jne
scas
adc
add
dec
into
vunpckhpd
popf
es
dec
pop
sbb
mov
pop
fildll
shrl
pmulhw
fdivrs
xchg
mov
mov
ret
mov
xor
and
lea
addr16
xchg
ljmp
adc
cmc
jg
repnz
cmp
sbb
out
pop
out
sbb
pop
inc
cmp
sbb
pop
jbe
xchg
les
fldt
pop
sarl
sbbl
test
lods
popf
jg
outsb
jg
sub
stos
jo
or
adc
push
fdivl
sarl
mov
jo
das
mov
xorb
out
xor
jg
scas
notb
xor
or
stc
addl
mov
test
in
inc
pop
sub
pushf
into
icebp
pop
stos
and
jmp
mov
push
push
dec
pop
jo
roll
adc
mov
inc
cmp
repz
into
jns
jbe
stos
and
icebp
mov
aad
mov
adc
pop
pop
adc
lea
clc
add
scas
out
dec
ficompl
sbb
mov
popa
insb
in
xchg
mov
jae
pop
mov
lods
or
pop
sub
pop
sbb
jge
cltd
cmp
xchg
mov
pop
inc
aas
daa
std
fistl
imulb
stc
jne
clc
mov
lahf
adc
pop
jnp
cs
inc
add
lret
mov
mov
sti
jg
xchg
and
xor
xor
adc
in
rcll
adc
pop
scas
shlb
sbb
rorb
cmc
pop
inc
pop
std
cwtl
test
loop
xchg
add
bnd
push
pop
cmc
adc
cmp
add
cltd
inc
in
cmp
clc
or
dec
pop
mov
mov
pop
in
mov
test
ss
rcll
mov
jno
push
into
cs
out
cmc
jns
or
sahf
push
mov
sbb
pop
sub
shlb
and
ja
sub
push
clc
test
pop
mov
mov
roll
and
and
pop
lcall
add
outsb
dec
pop
mov
popa
dec
fwait
addr16
outsl
pop
push
or
shl
aas
jge
sti
cmp
movsb
fdivl
inc
shll
pop
jg
sbbl
iret
mov
imul
mov
jbe
dec
ss
iret
jg
sub
insb
pop
cltd
lret
std
add
rcl
jmp
sub
sbb
dec
mov
ss
enter
sbb
stc
jns
xchg
add
jl
in
inc
arpl
ljmp
pop
loopne
pop
pop
push
movsb
lcall
xor
hlt
incl
jecxz
cmp
arpl
pop
pop
sti
fnop
sbb
adc
pop
jmp
jns
roll
enter
add
jmp
cmp
cmp
sbbl
add
lods
pop
inc
nop
sbb
jns
loope
push
pop
sub
std
insl
sbb
dec
pop
call
lret
shr
jne
out
cmp
mov
adc
sbb
stos
hlt
popf
je
add
cmp
mov
mov
das
pop
sahf
mov
jge
mov
mov
add
jecxz
call
ljmp
mov
cmpsl
mov
cmp
pushf
icebp
sub
out
nop
loop
and
mov
mov
scas
xchg
and
mov
mov
incl
push
adc
pushf
clc
fdiv
pop
xor
mov
pop
bound
loopne
ja
fiaddl
lea
out
stc
sub
sub
and
dec
lock
cld
out
pop
jnp
in
mov
movsb
and
jp
loop
movlps
lahf
push
mov
push
jne
mov
push
in
ficoms
push
ret
jle
aad
pop
and
aad
or
shrl
loope
movsb
add
inc
lcall
pop
insl
sbb
test
mov
push
or
fisttpl
mov
rol
out
inc
jecxz
dec
repz
idiv
cmp
sub
sbb
mov
repz
jmp
xchg
pop
pop
movsb
xchg
lcall
and
mov
or
pop
nop
scas
in
fstpl
movsb
pop
sahf
sbb
xchg
sub
cmp
xchg
test
fdiv
inc
add
xlat
mov
pop
xchg
push
fidivl
pop
jge
xorb
pop
lcall
insl
aas
in
or
jns
pop
pop
xchg
testb
jnp
jmp
or
mov
popa
je
sbb
lods
cmp
popf
ficoms
mov
add
int
loop
clc
jle
xchg
cmp
ret
aam
out
mov
sahf
bound
mov
movsb
pop
inc
test
outsl
mov
addr16
clc
pop
sub
pop
int
out
mov
mov
and
addr16
xlat
arpl
sub
fs
repnz
js
nop
jmp
test
sbb
pop
inc
lea
pusha
jmp
iret
call
flds
mov
push
stos
sbb
cmp
jg
xchg
sbb
or
aaa
and
jmp
insl
push
outsb
pop
mov
jnp
dec
dec
push
xchg
pop
dec
aad
cltd
loopew
cmpsb
pop
in
daa
xchg
cwtl
fstpl
inc
push
ja
xlat
pop
mov
inc
cmp
adc
pop
sbb
mov
sti
fsubs
int
xchg
pop
xchg
xor
jg
sub
jge
pop
sub
cmpsl
add
insl
mov
sbb
int3
mov
fwait
jo
fstps
repnz
mov
push
push
nop
cld
mov
add
jnp
hlt
pop
popf
cmpsb
pop
jno
sbb
pop
and
fstpl
shlb
outsb
aas
pop
scas
and
in
outsl
adc
sbb
adc
lods
jo
add
imul
inc
syscall
movsl
push
dec
stos
jae
or
xor
pop
mov
add
roll
xor
cmp
xor
cmp
mov
mov
fcomp
mov
mov
ffreep
add
fdivs
jl
clc
push
push
pop
fnstsw
fwait
stc
push
push
je
jp
dec
aaa
pop
testb
nop
and
pop
push
les
dec
es
pop
mov
mov
cmp
rcll
cmpsb
lods
pop
inc
in
inc
xchg
pop
int3
pop
sahf
inc
rol
fwait
scas
add
inc
pop
movsl
shlb
jle
jmp
or
mov
jbe
sbb
adc
push
or
in
mov
in
loope
pop
jl
mov
xor
jp
shll
dec
stos
mov
fstpt
or
sbb
xor
cmp
sbb
lea
mov
sbb
divl
test
cld
or
pop
dec
pop
cmp
sbb
mov
jl
popf
jg
hlt
pop
in
repnz
scas
mov
stos
sbb
sti
fiaddl
dec
iret
push
pop
push
sbb
stos
aas
flds
push
lods
xor
dec
sbb
sbb
sub
inc
pop
jo
fcmovnbe
adc
pop
sub
cmp
xor
lods
es
mov
xchg
mov
lret
jo
rcll
mov
pop
jl
imul
scas
pop
aam
enter
arpl
fs
mov
repnz
dec
or
movsl
dec
adc
mov
stos
js
aad
sbb
mov
repnz
shl
in
xchg
pop
xchg
movsl
es
mov
sub
pop
sbb
imul
cs
scas
fistpll
adc
int3
mov
jne
add
lock
loope
sbb
cwtl
dec
mov
xchg
mov
mov
xchg
clc
inc
push
std
jae
add
outsl
cmp
scas
cs
pop
push
jp
cmp
cmc
into
add
in
sti
sub
dec
out
mov
fiaddl
fistpll
lcall
pop
fisttpll
mov
adcl
mov
mov
add
data16
andb
test
add
out
fmul
mov
push
add
test
xchg
cmp
dec
pop
jo
push
ds
insb
aas
es
fnsave
push
pop
loop
cmpsb
loopne
aam
pop
sub
mull
popa
inc
js
sbb
cmp
lock
push
test
xchg
ficompl
add
mov
clc
stos
mov
pop
jne
loopne
cmp
inc
pop
test
pop
cmpsb
adc
xor
cmp
imul
test
pop
or
cmc
add
je
pop
mov
push
dec
pop
adc
outsl
and
push
cmp
pop
mov
movsb
and
mov
fildl
les
lods
ret
inc
pop
inc
and
or
cmp
pop
cmp
outsl
fimuls
sbb
imulb
addr16
dec
in
pop
pop
insb
jmp
stos
fmul
in
sbb
sub
das
dec
mov
sti
mov
mov
push
pop
pop
and
clc
imul
pop
and
jbe
popf
pop
sbb
in
xchg
xlat
int
fcoml
pop
pop
xor
imul
xchg
add
jmp
ljmp
mov
or
mov
sbb
dec
mov
mov
mov
out
addr16
dec
cmp
add
xchg
sarb
icebp
insl
add
mov
shrb
stos
mov
inc
std
jns
test
cmc
loope
test
add
mov
add
enter
ficoml
pop
into
nop
imul
das
add
xor
or
sbb
cmp
cld
jge
or
repnz
in
testb
sbb
pop
aas
xadd
mov
cmp
cwtl
out
sub
pop
inc
out
in
push
pop
clc
adc
mov
adcl
lret
aam
hlt
shl
xor
sbb
call
or
inc
xor
mov
in
add
insl
xchg
loopw
xor
stos
sbb
das
and
arpl
loop
sbb
aas
mov
mov
and
movsl
push
jle
add
adc
push
and
ret
shlb
ffreep
xchg
or
loop
dec
mov
mov
sbb
or
xor
enter
mov
outsb
repz
cmp
popf
jo
scas
lods
fs
fstpl
insb
jno
inc
push
sub
dec
mov
shrb
mov
add
pop
lea
enter
jo
xor
lret
jae
jle
lods
repnz
fdivs
cmpsb
cmp
xor
pop
xlat
test
cmp
jmp
lret
negb
addr16
icebp
mov
insb
lahf
in
pop
adc
inc
jg
addr16
mov
ja
pop
movsb
dec
dec
inc
movsl
jle
js
mov
mov
aad
iret
outsl
scas
hlt
cmp
add
stos
lock
sub
lods
or
mov
pop
ud1
es
jno
test
or
push
mov
cmp
mov
mov
inc
add
or
movsl
mov
add
sahf
push
inc
push
cwtl
dec
ret
pop
xor
jmp
inc
inc
lds
dec
cmc
jp
jg
in
sbb
inc
mov
mov
enter
aad
fsts
mov
sbb
pop
sti
fst
imul
ficoms
push
inc
shlb
stos
push
clc
mov
gs
imul
call
pop
mov
or
ja
pop
push
xor
add
stc
fmull
inc
jo
ret
xchg
lret
stos
sarl
push
sub
inc
mov
mov
mov
pop
cmpsb
fucomp
sbb
mov
jne
mov
stos
adcb
sarl
jge
cld
lret
fisubrl
add
jo
mov
push
aad
fsubs
inc
aas
mov
aaa
xchg
insl
loope
gs
and
repnz
or
push
xor
pop
pop
les
cmp
add
sbbb
push
add
pop
out
lret
inc
mov
or
lods
xchg
mov
mov
and
pop
cmc
stos
jns
orl
cmp
mov
adc
cwtl
push
jno
pop
xchg
sahf
cmp
out
mov
les
xor
popa
cmp
push
push
int
les
pop
loope
or
xchg
add
jae
lret
dec
adc
test
add
test
icebp
rcrb
aam
dec
mov
add
dec
in
subb
shr
ljmp
movsb
or
push
sbb
stos
das
outsl
das
mov
outsb
or
dec
sbbb
sub
adc
sbb
cs
cmpsl
inc
and
xor
out
ror
push
sbb
lds
inc
dec
dec
sub
inc
or
aam
or
int3
shl
popf
addr16
jo
pop
test
sbb
mov
lret
cli
arpl
xchg
loop
mov
into
inc
cmp
lret
clc
repnz
out
sbb
pop
mov
or
add
ljmp
into
sub
insl
arpl
rcrl
mov
add
xor
sub
jae
ja
jb
jns
mov
pop
scas
mov
loop
jno
iret
fmul
pop
push
pop
push
cmp
sbb
push
js
sbb
in
pop
or
mov
push
pop
fxch
cmova
ja
add
fcomps
aas
iret
mov
ret
xchg
data16
jnp
mov
repz
ja
scas
cmp
push
lret
mov
imul
imul
dec
rcl
and
mov
dec
ja
cwtl
pop
movsb
pop
dec
inc
mov
pusha
out
test
pop
std
lea
push
mov
and
and
xor
cwtl
jo
lret
or
enter
fs
aaa
pop
hlt
push
mov
inc
pop
lahf
sub
and
push
movsl
sahf
jle
pop
cmp
fcmovnu
mov
addr16
in
mov
test
jae
mov
stos
sub
std
in
dec
jl
jp
je
mov
add
sti
cmpsb
movsl
mov
add
outsb
ret
leave
and
cltd
jbe
push
push
cmp
xor
lock
into
ds
fistpl
pop
aas
mov
add
pop
inc
in
pushf
clc
sub
pop
add
adc
push
lods
mov
stc
lret
std
jae
xor
jle
sbb
mov
lret
bound
fwait
addl
sahf
pop
decb
imul
jo
loopne
popf
xchg
push
inc
das
dec
es
pop
mov
mov
adc
mov
xchg
je
jge
push
cmp
and
addb
fwait
xor
sub
out
and
inc
sub
fadds
repnz
addr16
leave
int3
incb
dec
in
loopne
cmp
add
dec
add
mov
test
loope
repz
or
sahf
jmp
pop
xor
pop
iret
and
sub
sti
insl
mov
pop
pop
mov
fcomps
leave
push
mov
or
pop
pop
mov
inc
and
and
ret
aas
sti
rcrl
std
pop
cli
jae
mov
pop
fwait
mov
jbe
pop
out
loope
ror
insl
std
cmp
das
adc
and
test
insb
fidivl
mov
and
cmpl
scas
daa
push
and
rcr
pop
cmp
leave
out
xchg
mov
aam
pop
fstps
rorb
cmp
call
or
icebp
sbb
xchg
fldt
pop
stos
mov
or
movsl
push
pop
xchg
in
test
sbb
jne
jg
sbb
ja
adc
scas
mov
inc
pusha
in
ss
sub
stc
sbb
or
fnstcw
pop
jnp
fs
inc
xlat
sbb
pop
pop
cmc
mov
inc
cmp
jge
gs
mov
adc
pop
sub
cld
push
flds
call
and
pop
int3
or
insb
or
pop
cmp
push
pop
pop
push
aas
outsl
add
dec
lcall
and
jg
mov
sbb
push
fsubrs
roll
sbb
aas
inc
test
mov
stos
xor
cld
xchg
incl
mov
mov
arpl
test
push
xchg
push
cmp
dec
shl
jmp
push
mov
ret
lcall
je
jp
xor
fisttpll
push
enter
aas
xchg
or
add
pop
mov
pop
pushf
mov
outsb
jno
jmp
cmp
push
pop
dec
pop
cs
and
push
cltd
cmp
mov
pop
leave
mov
bound
jae
fdiv
dec
mov
sbb
filds
xor
jmp
popa
int3
pop
add
dec
mov
adc
and
fwait
sti
std
sbbl
add
jmp
add
cmp
xchg
adc
cld
jp
in
lock
lret
jne
xchg
add
das
hlt
or
sub
mov
test
mov
push
xchg
loopne
sbb
sti
cltd
call
out
icebp
jns
aad
lods
roll
fadd
push
pop
cmp
jge
xchg
in
xchg
addr16
jecxz
cmp
incl
cmp
pop
jge
xchg
sar
jns
outsb
mov
mov
out
in
add
clc
pop
push
or
test
mov
out
lock
push
in
mov
enter
sahf
dec
jecxz
ja
dec
cmp
in
lods
pop
jae
mov
push
in
mov
lods
lret
and
cmpsl
out
fcoms
outsl
mov
hlt
adc
jle
or
notl
lret
mov
pop
dec
inc
push
jae
mov
cmp
mov
jg
mov
or
repz
cmp
outsl
push
dec
sub
inc
icebp
sub
loop
sahf
je
add
push
mov
mov
pop
mov
lock
jno
dec
mov
adc
jbe
mov
fcoms
or
loop
in
imul
add
lret
add
mov
push
pop
lods
rolb
call
pop
fsubrl
xchg
dec
outsl
jns
stc
jmp
aam
pop
push
icebp
addr16
jle
pop
pop
mov
call
lcall
loope
ja
fcomi
pop
adc
js
lods
dec
int
push
in
inc
test
jbe
xchg
call
dec
sahf
int
movsb
pop
pop
ds
mov
dec
arpl
into
scas
mov
mov
or
xchg
dec
mov
push
dec
add
jecxz
rcrl
scas
cmp
fsts
mov
mov
sub
lock
pop
or
or
adc
and
pop
add
add
mov
in
jo
cld
repnz
push
test
mov
mov
push
push
popa
push
popf
aas
inc
jbe
adc
lcall
mov
sbb
cmp
ss
adc
movsl
shll
test
jmp
xlat
and
lods
loope
call
bound
movsb
jns
mov
pop
fildl
in
jnp
leave
cmp
push
mov
cmpsb
jbe
mov
int
pop
scas
jo
mov
dec
push
call
lcall
jb
jecxz
xor
out
icebp
mov
in
cmpsb
in
mov
subb
imul
pop
pop
dec
dec
mov
pop
and
mov
pop
sub
and
mov
jbe
xchg
sub
push
in
jmp
mov
push
pop
push
and
cmp
adc
xchg
sahf
subl
xchg
cmp
sbb
push
cwtl
inc
xchg
adc
jmp
mov
std
in
sbb
mov
insb
out
mov
pop
push
fbstp
aad
aam
pop
push
in
stc
xor
mov
repnz
aad
push
lds
push
inc
adc
mov
jne
rcr
roll
mov
std
or
sub
and
or
xchg
push
pop
in
aam
gs
lock
push
fsubl
jmp
xchg
and
test
pop
clc
add
push
pop
out
ret
mov
test
mov
fiadds
push
dec
push
cltd
pop
shlb
jb
pop
sbb
imul
stos
fldl
push
shrb
xchg
pop
iret
in
std
mov
int3
dec
pop
cmp
out
add
add
fsubl
pop
ret
cmp
jg
xchg
cmp
das
cmp
mov
lods
jne
and
dec
mov
imul
test
add
ret
mov
pop
xor
jbe
ds
aas
rolb
push
sbb
pop
jle
in
dec
jnp
xchg
or
sbb
fdivrl
jnp
xchg
fistpll
sbb
clc
lock
rcl
xor
xor
nop
int3
pop
mov
mov
outsl
pop
mov
and
mov
sub
sub
fs
adc
hlt
leave
sbb
xchg
xor
mov
add
jb
push
jmp
or
xorb
pop
jo
inc
adc
pop
cmp
mov
out
cmp
pop
addr16
pop
call
and
pop
out
lahf
pushf
fsts
and
dec
cmp
pop
icebp
gs
push
mov
into
aam
pop
dec
imul
aad
fistpll
cmp
sti
in
pushf
ljmp
stos
pop
add
xchg
scas
or
adc
sbb
push
pop
shl
ficoms
pop
and
es
dec
pop
dec
mov
scas
and
push
push
mov
in
mov
leave
adc
outsl
mov
push
cmpsl
scas
xor
pop
pop
dec
js
xchg
stos
dec
xor
jnp
pop
das
add
movsl
mov
outsl
adc
jmp
sub
cmp
xchg
call
and
add
push
shll
sti
shlb
pop
imull
push
pop
xchg
pop
movsl
rcrb
add
into
dec
mov
adc
cmp
mov
addb
ljmp
xchg
push
sub
aam
int3
dec
roll
in
out
fisttpll
lret
push
dec
adc
leave
pop
xor
into
out
repnz
cmpsl
sub
in
int
xchg
mov
cmpsl
pop
xchg
inc
push
add
cmp
fsub
dec
andl
jmp
movsl
dec
add
sub
jne
ret
rorl
cmp
out
out
or
ss
pop
lret
loope
sub
pop
jmp
push
rorb
cmp
mov
divb
push
in
pop
insl
push
inc
pop
mov
fwait
pushf
out
pop
add
mov
fcompl
jecxz
mov
insb
push
sahf
cmp
stc
dec
movsl
out
popw
stos
mov
mov
push
mov
xchg
pop
add
psubsb
in
das
cmp
clc
dec
lds
in
pop
leave
mov
xor
pop
out
pop
in
ja
outsb
movsl
xchg
aas
ret
pop
xchg
aad
xlat
lds
and
je
and
pop
sub
cmp
jb
fstl
jmp
cmpb
stc
pop
fs
fsubrp
pop
push
push
and
push
out
aas
adc
mov
pop
jecxz
inc
add
cmp
pop
nop
mov
pop
data16
add
js
xchg
sbb
outsl
add
dec
jns
loop
sbb
mov
sub
bswap
movsb
sub
pusha
hlt
mov
mov
add
out
lret
pop
sti
cmp
mov
lds
sbb
and
int
xchg
cmpsl
pop
mov
lret
pop
stc
jle
bnd
and
aam
shl
xchg
ret
mov
aas
ss
inc
pop
sbb
clc
or
mov
in
xor
jnp
jbe
push
pop
out
data16
dec
cmp
rorb
imul
and
shll
cmp
mov
adc
pop
pop
arpl
ja
dec
lret
or
std
shl
dec
pop
nop
rorb
bound
mov
hlt
pop
mov
pop
pop
mov
xor
testl
call
addr16
push
sub
insl
pop
out
into
nop
dec
bound
mov
push
xor
xchg
cmpsb
pop
imul
push
mov
dec
pop
rcl
js
sti
out
pop
or
jecxz
add
sbb
out
clc
pop
mov
and
mov
sub
inc
cmc
jl
push
add
std
mov
lock
pop
icebp
pop
pop
xor
cld
cmp
mov
xchg
lods
push
fldt
xor
xchg
adc
xchg
sti
in
lcall
jne
insl
or
pop
lds
daa
or
andb
and
in
push
mov
cmp
jmp
movb
movsb
mov
add
stos
mov
add
ss
push
loopne
pop
test
push
sub
add
inc
dec
sbb
push
pop
hlt
xor
stos
lret
sbb
cwtl
adc
sbb
imul
push
pusha
int3
xor
ss
jmp
sub
ljmp
push
enter
jle
das
sbb
add
cltd
inc
andl
cmpb
mov
outsb
das
jnp
loopne
adc
sub
aad
mov
aas
sti
or
mov
les
fildll
pop
in
mov
jge
mov
popa
or
enter
outsl
pop
xor
ja
jle
mov
mov
cwtl
mov
pop
scas
stos
jl
es
in
cmp
mov
aaa
jmp
mov
adc
and
inc
add
cmp
dec
stos
pop
popf
add
mull
cmp
mov
cwtl
pop
xor
imul
dec
pop
push
sub
lds
sbb
stos
jnp
lret
pusha
pop
icebp
push
jns
lret
lcall
pop
out
push
inc
xor
mov
mov
jb
fists
jl
inc
add
sahf
sbb
repnz
outsl
movsb
outsb
fdivrl
ja
cmpsl
or
mov
test
pop
not
sub
push
cmc
outsb
add
jae
stos
inc
aam
and
dec
ja
aaa
dec
mov
sbb
pop
jno
cmc
add
lds
repnz
fcompl
mov
rorb
sub
cmp
addr16
xor
add
sub
addr16
cld
add
add
xchg
mov
jnp
dec
jl
jp
jae
notb
fcmovnu
in
adc
or
cmp
mov
inc
sub
int
pop
or
cmp
sar
shl
loope
jbe
mov
ja,pn
in
xchg
enter
nop
jecxz
jns
into
mov
rcll
cmp
pop
push
fs
inc
xorl
xor
mov
lcall
ljmp
add
jmp
sbb
sbb
dec
xchg
and
out
pop
out
mov
pop
rolb
fs
mov
orb
and
dec
mov
xchg
sub
or
out
stc
repz
pop
rcr
addr16
ds
pop
dec
jbe
mov
pop
outsl
cmp
pop
pop
lea
mov
pop
pop
pop
pop
cmp
popa
pop
sbb
arpl
fsubs
jno
sub
push
adc
mulb
pop
mov
test
jo
jnp
lcall
mov
push
pop
xchg
lcall
pop
dec
loope
iret
in
adc
lahf
imul
pop
push
aas
pop
xchg
sub
xor
mov
fiadds
imul
cmpsb
sbb
push
flds
out
roll
rcrb
lock
push
cmp
pop
bound
pop
mov
add
sub
sbb
mov
xor
fwait
out
jecxz
push
jl
sub
and
inc
movsl
push
cmc
sub
xchg
xchg
cmp
mov
repnz
lcall
cs
inc
push
lock
add
inc
push
pop
lods
mov
fcmove
pop
ror
xorl
fldt
mov
stos
jne,pn
cmp
pop
cld
mov
mov
xchg
loopne
mov
mov
pop
jb
add
pop
pop
rcr
lret
cltd
pop
sub
push
mov
push
decb
iret
cs
sbb
icebp
loope
jp
or
imul
mov
cmp
cmpsl
rorl
sti
xor
cwtl
xchg
dec
ja
jecxz
aad
movsl
into
nop
push
iret
jecxz
pop
jp
sub
popa
jne
pop
adc
shr
pop
sbb
pop
imul
cmp
dec
push
and
mov
dec
jo
sub
rcll
or
add
mov
sub
ror
dec
or
cmp
push
cwtl
pop
sub
hlt
cld
xchg
cmp
xorb
sub
and
call
add
xchg
lods
mov
hlt
mov
stc
dec
insb
add
add
imul
jmp
in
mov
clc
push
cmp
lea
clc
add
push
xchg
cmp
jns
adc
pop
rorb
and
mov
fwait
cmp
aaa
cmp
ja
cmpb
add
andb
repz
out
mov
or
sbb
add
mov
rcr
jno
pop
lcall
pop
mov
sbb
cmp
call
jle
mov
mov
and
insb
add
inc
pop
push
aaa
jnp
pop
mov
adc
stc
sbb
test
jp
pop
jle
fwait
aad
sbb
icebp
sbb
add
shl
jg
pop
addr16
icebp
dec
push
neg
or
sub
out
es
xchg
or
ljmp
loop,pn
mov
add
inc
inc
adc
cmpsb
sahf
das
pop
xchg
push
or
in
movsb
aam
add
repnz
pop
adc
mov
jle
mov
pushf
shrl
popa
pop
clc
or
testb
jb
lods
mov
andl
mov
or
test
push
pop
pop
dec
es
dec
enter
dec
xchg
dec
popa
mov
movsb
cld
mov
addb
push
adc
mov
test
adc
sbb
xor
shrb
cmp
dec
stc
mov
lock
scas
int3
push
jecxz
pop
pop
xchg
mov
and
push
pop
loopne
dec
dec
lahf
add
je
rorb
xor
xchg
mov
sbb
test
repz
insb
pop
into
pop
mov
sbb
imul
xchg
ljmp
mov
xchg
lock
je
int
pushf
dec
outsb
and
pop
pop
fldcw
ret
test
cmp
ret
jne
fxch
jmp
jns
xchg
fsubl
cmp
cmp
adc
mov
pop
into
or
add
cmpsl
lods
test
inc
nop
or
movl
fwait
mov
ljmp
pusha
cltd
in
pop
xchg
gs
jecxz
pop
sarl
xor
fisttpl
jb
sub
and
aas
add
or
xchg
sbb
pop
mov
xchg
popf
sahf
pop
out
insb
jnp
out
mov
fistps
cmp
fcmovb
sub
pop
sbb
dec
orb
mov
push
add
cmp
pop
into
dec
sbb
push
mov
pusha
jl
mov
jbe
fldenv
adc
cmp
xor
xchg
mov
shll
jl
loopne
mov
or
pop
cmp
xor
pop
jb
les
xor
iret
inc
xchg
movsb
fcoml
mov
ret
inc
pop
loop
mov
out
jb
or
filds
and
xchg
dec
pop
cltd
sbb
add
xor
rolb
stc
xor
sbb
xchg
cmp
out
jl
jp
sti
mov
dec
jle
icebp
sbb
sub
int3
decb
cmpb
dec
hlt
pop
mov
xchg
ret
xor
mov
cmp
jg
sbb
jb
mov
les
pop
pop
mov
dec
mov
call
lcall
and
test
out
jb
daa
sahf
sbb
rcrb
jl
lods
js
push
mov
imul
pop
jmp
popa
js
xchg
pop
hlt
loopne
jnp
aas
icebp
cmpl
cltd
out
out
pushf
push
cwtl
mov
daa
pop
inc
lret
xor
add
sbb
jns
out
pop
and
pop
sbb
mov
in
adc
inc
icebp
rorl
add
call
fistpl
sbb
sar
jp
ret
shl
mov
mov
adcl
xchg
movsb
les
add
sub
pop
mov
xor
lea
sahf
dec
pop
hlt
pop
adc
cmp
or
stos
or
push
cmpsb
xchg
xchg
push
mov
movsl
pop
adc
add
addl
loope
stos
mov
pop
scas
insl
imul
ss
cmp
rcrb
pop
cwtl
jp
stos
and
mov
aas
sub
add
pop
jnp
lea
subps
movsb
pop
push
cmp
rclb
or
imul
int
push
dec
pop
movsl
xchg
movsb
and
cld
pop
xor
repnz
lock
rolb
cmp
xchg
aas
fsubl
push
ljmp
mov
sahf
imul
mov
fnsave
out
cmpsb
insb
mov
push
cmp
pop
imul
test
xor
fildl
paddb
mov
call
jns
inc
sti
mov
add
push
rclb
loopew
sub
inc
std
sbb
adc
sbb
in
jnp
in
fidivl
fists
mov
out
ds
mov
addr16
lods
lock
dec
sbb
scas
fsubr
mov
in
dec
loope
sbb
push
push
aad
out
rclb
mov
insl
xchg
xchg
pop
xor
push
pop
mov
or
aad
sbb
popa
xchg
sbb
roll
cmp
inc
and
mov
icebp
mov
xchg
xor
push
cmp
mov
sbb
aaa
jmp
mov
adc
fcmovnb
data16
pop
divl
inc
mov
push
aas
jno
cmp
push
dec
in
das
sbb
add
pusha
and
pop
clc
adcb
jge
mov
jbe
or
in
ja
mov
xor
ret
xchg
cwtl
dec
jo
dec
adc
pop
or
fbld
call
or
pop
cmp
xchg
pop
cmpsl
push
mov
pop
loope
and
call
adc
iret
out
pop
push
adc
mov
or
mov
dec
test
pop
jecxz
andb
inc
cmp
fisttpll
cmp
jae
jnp
jp
add
jecxz
ja
and
xor
sub
cld
mov
fildll
cmp
dec
jne
scas
push
pop
dec
mov
mov
cmpsb
pop
das
or
mov
jg
add
les
gs
push
dec
pop
lock
xchg
mov
push
and
jmp
xlat
inc
xchg
add
pop
sbbl
mov
movsb
jge
ficomps
fistps
cmpsl
and
mov
pusha
add
roll
push
stc
jle
nop
rorl
mov
push
adc
xchg
hlt
pop
fstpt
shlb
or
jno
mov
ret
push
xchg
inc
pop
pop
data16
jo
aam
pop
add
das
loop
lock
add
push
mov
push
enter
fldenv
xor
push
stos
cmp
inc
sbb
inc
lret
inc
mov
andl
nop
pushf
lret
cs
cmp
dec
imul
xchg
comiss
inc
pop
mov
popf
inc
jecxz
daa
mov
jp
cld
fdivr
stos
xchg
or
leave
sahf
mov
push
imul
add
pop
in
test
sub
fwait
pop
mov
cmp
idivb
pop
jl
popf
or
orl
pop
push
and
cltd
lock
cmp
add
lods
arpl
fistl
shll
lret
push
rclb
or
fadds
add
fwait
add
std
and
add
or
cmp
punpckldq
jne
test
mov
mov
xlat
test
xchg
or
xor
mov
addr16
pop
shll
xor
mov
clc
gs
call
pop
add
cmpsb
xchg
rolb
ss
pop
mov
cwtl
lcall
fstps
hlt
inc
pop
add
dec
lea
loopne
in
xchg
lock
push
loope
in
mov
sub
xchg
cmpsl
dec
pop
outsb
enter
into
jmp
sbb
loope
loop
jge
addl
push
pop
mov
lods
in
pusha
es
pop
enter
mov
pop
adcb
jne
sub
jle
int3
xor
pop
ja
je
popa
and
cmp
cmp
mov
mov
fisubl
sub
or
in
xor
lods
bnd
or
push
aas
cltd
jbe
xchg
add
mov
inc
test
sbb
sub
flds
mov
gs
jmp
in
pushf
test
adc
in
out
xchg
in
clc
les
and
outsb
outsl
pop
stos
push
data16
sbb
cwtl
jb
adc
or
cmp
xchg
lret
shrb
inc
sbb
inc
adc
add
mov
sbb
cli
mov
outsb
rolb
xchg
xchg
pop
jne
and
pop
aas
cmp
fimull
mov
mov
pop
inc
aad
mov
pop
or
mov
cltd
pop
fwait
scas
arpl
test
add
pop
stc
mov
cmp
shl
and
pop
lret
shl
out
sub
jbe
adc
push
pop
repz
les
add
sub
pop
push
mov
clc
sub
jg
pop
sub
in
hlt
jno
js
push
addr16
pop
add
jmp
and
ret
addb
lea
push
cmc
movb
sahf
xor
pop
mov
out
and
stc
lods
rcrl
in
mov
loop
or
push
and
push
cmp
push
and
stos
clc
add
mov
es
sbb
lret
mov
xchg
lods
adc
repz
pop
sbb
push
xchg
out
js
pop
ret
hlt
cmpsl
out
rolb
stc
testl
inc
or
pusha
mov
loope
jle
pop
adc
jge
mov
clc
cld
sbb
sub
pop
cmpsb
sub
push
pop
push
into
in
hlt
mov
pop
lock
xchg
sub
fistps
pop
jp
imul
dec
test
sub
lret
aad
or
jb
pop
cmp
test
cmp
push
xor
lret
aad
jnp
lahf
cmp
stos
lods
xchg
mov
adc
je
and
add
inc
stos
jns
loope
sbb
xchg
sub
data16
push
pop
enter
xchg
dec
stos
in
in
std
or
fldenv
pop
fstl
and
pop
sub
movsl
scas
out
das
pop
sub
lret
jb
pop
mov
dec
lods
test
or
testl
xor
imul
adc
or
subl
pop
jnp
inc
int
test
xor
cltd
dec
jle
sarb
dec
pop
jbe
repnz
jg
stos
scas
mov
daa
sub
in
pop
les
aas
out
test
jns
mov
mov
jbe
cs
scas
mov
lods
mov
push
outsl
ret
jbe
cmp
sub
sahf
hlt
mov
or
fmulp
dec
inc
jge
cmp
iret
ret
mov
andb
pop
shrb
lret
ret
test
push
mov
cmp
test
in
mov
fcompl
dec
pop
fidivrl
cs
and
mov
or
dec
inc
ds
rolb
pop
in
daa
cmp
mov
test
pop
loope
inc
mov
sbb
cmp
jnp
push
repnz
imul
mov
cld
jp
lock
cwtl
or
outsl
jnp
enter
test
xor
lock
out
xchg
sbb
mov
call
insb
fmuls
or
dec
or
add
mov
push
pop
mov
mov
cmp
cmp
ret
aas
rcr
sub
sbb
jge
pop
push
mov
mov
pop
aad
cmpsb
nop
xor
or
add
mov
mov
mov
add
dec
repz
xor
in
cmp
mov
loopne
mov
sti
and
pop
stos
or
in
fistpl
xor
pop
dec
push
daa
shll
mov
js
ljmp
dec
cmp
jg
dec
add
pop
pop
mov
jnp
sbb
pop
add
adcb
sub
jns
jno
cmp
sub
pop
mov
pop
sub
mov
sub
push
pop
inc
cmp
in
push
inc
data16
mov
pop
jnp
xchg
dec
int
sub
cmp
iret
xchg
shrb
pop
add
push
jle
sbb
icebp
js
mov
cmp
xor
jge
push
inc
mov
pop
xlat
les
js
aaa
xchg
aad
stos
sbb
push
pop
pop
pop
and
push
sub
and
mov
mov
xor
sbb
xchg
push
sti
xchg
idivl
aam
sub
fildl
mov
and
or
lea
pusha
idivb
pop
in
adc
fisubl
mov
jns
stc
cmp
mov
fistpl
fists
pop
push
dec
loope
dec
mov
pop
pop
mov
push
in
pop
scas
ret
sub
xchg
push
and
movsl
cmp
xchg
cmp
test
jmp
icebp
or
jge
mov
cmpsl
sub
loop
mov
dec
sbb
cmp
fsubr
sbb
out
pop
jp
cmpsl
xchg
push
repz
sub
cmp
pop
stc
ljmp
add
out
les
movsb
pop
pushf
out
mov
dec
cmp
sub
sbb
je
incl
mov
inc
jecxz
dec
sbb
or
in
std
dec
pushf
mov
fsts
push
sbb
shlb
and
inc
incl
mov
ret
mov
stos
fsubrs
fwait
mov
arpl
stc
and
pushl
push
in
cmp
sub
inc
cmp
call
jae
adc
jg
fidivrl
jmp
pop
fxch
fstpl
sub
pop
sysret
jae
pop
mov
mov
push
bound
inc
cmp
jl
push
add
arpl
and
rorb
fcomp
lret
pop
add
test
jne
sbb
jns
push
leave
xchg
xor
scas
jno
jmp
mov
cwtl
xchg
fstps
mov
pushf
stc
sub
mov
jg
and
clc
sahf
mov
enter
fldenv
cmc
incb
out
mov
fstl
pushf
pop
shlb
hlt
cmp
in
sti
test
cmp
inc
jno
ljmp
cltd
pop
mov
in
pop
or
mov
scas
imulb
inc
jbe
int
pop
and
mov
out
popf
js
sti
mov
pop
cmp
xchg
mov
icebp
sub
push
jo
iret
fcmovnbe
fldl
dec
xchg
movsb
out
xchg
pop
pusha
dec
aad
scas
jb
pop
jnp
call
push
pop
dec
dec
pop
push
inc
icebp
and
cmp
lcall
xchg
inc
pop
lret
pop
mov
enter
pop
mov
dec
xchg
inc
sub
push
mov
frstor
jecxz
mov
lods
cmp
xchg
xchg
clc
dec
sbb
and
fs
push
pop
and
cmp
adc
jg
cmpb
sbb
in
jnp
aaa
add
pop
xor
sub
jle
insb
xchg
imul
cmp
sbb
lret
push
in
mov
adc
pop
cs
lock
xor
ds
push
mov
insb
sub
cltd
mov
orb
in
sbb
fistpll
pop
lds
in
push
mov
popf
xor
pop
pop
sbb
and
je
mov
push
shrl
xchg
movsl
stos
fsubrs
cmp
inc
and
sub
or
cmp
xchg
xchg
cmp
xchg
xor
dec
pusha
push
jecxz
dec
or
mov
mov
xor
insb
mov
das
sbb
inc
push
arpl
mov
rorb
lret
out
push
pop
scas
jmp
mov
fs
addr16
cltd
test
sbbl
stc
in
push
arpl
dec
test
nop
xor
scas
sti
out
loopne
or
add
xchg
fidivs
cltd
mov
movsl
push
in
add
sarb
mov
cmpsb
fs
pop
sub
or
pop
stc
stc
inc
cmp
cltd
pop
sbb
mov
sti
lods
shl
pop
fisubrl
pop
mov
movsl
sbb
or
pop
outsb
scas
aaa
pop
cmp
ret
xlat
loop
xor
lcall
js
dec
in
roll
cmp
aaa
or
popl
add
pop
mov
pop
push
sbb
fidivrl
rorb
ret
rorl
cmp
mov
cmp
add
xchg
push
add
sub
dec
jnp
mov
pop
add
lock
xchg
pop
pop
cltd
cmp
mov
pop
sbb
mov
inc
scas
jp
jmp
in
xor
je
inc
jbe
popw
pop
xchg
xchg
lahf
fnstsw
xor
xchg
add
cmp
push
jno
adc
push
or
dec
test
pop
push
mov
xor
jmp
pop
mov
push
movsb
mov
inc
cmp
adc
pop
out
jnp
pop
cmpl
sbb
xor
test
or
gs
push
movsl
mov
lret
in
push
imul
mov
insb
jb
fisttpl
pop
jno
adc
lods
scas
int3
xor
ret
fildll
inc
mov
mov
add
dec
inc
std
mov
lea
int
push
xchg
push
test
or
cmp
pop
sbb
ds
inc
cmpsb
pusha
mov
das
add
push
push
sub
push
clc
dec
repz
pop
pop
shlb
jmp
in
adc
mov
cmp
test
xchg
sub
mov
xlat
pop
out
pushf
jns
mov
or
aas
dec
xor
ds
sbb
mov
push
dec
mov
outsb
pop
out
gs
ret
dec
or
ficoms
addb
rcr
push
add
cs
jb
add
and
aaa
push
andl
xor
outsb
int3
icebp
cmp
cmp
sub
not
or
loope
inc
mov
adc
pop
add
jl
rcl
pop
sahf
dec
mov
pavgw
popf
xchg
test
sub
cmp
mov
pop
dec
pop
push
xchg
pop
out
fidivrs
push
imul
mov
or
pop
and
in
add
enter
sub
std
mov
pop
jnp
test
pop
je
xchg
mov
lock
add
adc
and
sbb
cmp
imul
pop
das
outsb
cmp
pop
xchg
push
xchg
dec
sub
cs
pop
ror
out
enter
add
std
sub
mov
cmp
shll
adc
jb
pop
pop
shrb
out
scas
mov
out
pop
dec
frstor
leave
call
or
sub
lss
pop
pop
cltd
js
mov
dec
call
add
xor
pop
icebp
sarl
lahf
mov
mov
dec
insl
popa
ficomps
insb
xchg
movsl
cmpsb
leave
daa
xor
or
lods
xchg
lea
jno
lahf
add
fwait
in
imul
cltd
sub
and
notb
int
rcrb
fistpl
out
mov
aas
xchg
fildll
add
int
aam
scas
call
mov
jl
cmp
add
mov
adc
scas
jmp
jne
mov
mov
or
lret
stc
xlat
ret
push
inc
pop
mov
movsl
ss
mov
pop
mov
int
sub
jb
stos
dec
dec
xchg
sub
pop
ljmp
mov
in
mov
nop
pop
mov
popf
mov
stc
ljmp
insl
ret
pop
mov
pop
in
icebp
bound
fadds
sahf
and
dec
pop
scas
out
and
mov
mov
inc
and
call
jno
in
stc
and
inc
push
mov
xchg
pop
pop
dec
cmp
inc
jo
pop
imul
clc
dec
mov
int3
jg
xchg
pop
arpl
lods
add
jae
xor
sub
aad
notl
inc
aam
imul
fidivrl
pop
push
mov
adc
xchg
pop
fdivs
test
pop
sbb
lods
enter
jle
mov
xor
jbe
xor
test
std
or
xor
lret
das
icebp
inc
or
xchg
das
adc
insl
mov
push
or
sbb
add
mov
jo
icebp
mov
je
out
sub
and
push
xor
lcall
clc
in
stos
sub
sbb
xor
cmp
adc
testb
inc
ds
addr16
pop
mov
inc
push
push
pop
mov
mov
jo
mov
cmp
lahf
push
mov
push
stc
cmp
adc
gs
mov
notl
lea
push
and
test
ja
jle
fwait
pop
dec
or
int3
inc
xchg
push
sbb
outsb
sub
cmp
inc
or
and
pop
push
inc
iret
pop
mov
and
add
xor
cli
scas
mov
push
imul
lahf
sub
ja
mov
and
mov
ficoms
orb
rorb
icebp
aam
push
clc
mov
pushl
sub
pop
jle
mov
mov
adc
mov
iret
aam
movl
mov
sub
mov
popa
mov
inc
or
pop
subl
pop
bound
sahf
pop
popf
test
jmp
ja
testb
and
clc
test
in
aas
and
mov
jmp
pop
dec
imul
aaa
out
pop
scas
push
pop
decl
outsb
mov
inc
pop
inc
aam
sbb
pop
icebp
cmp
mov
dec
mov
andb
mov
dec
cmp
movsb
test
pop
sbb
mov
pop
ror
aad
xor
insl
cld
xchg
pop
ss
dec
push
pop
mov
xchg
xor
adc
ss
int
rol
into
cmp
call
xchg
orb
insb
mov
es
fsubrl
mov
mov
frstor
lods
pop
aam
in
dec
pop
loope
out
shlb
jno
movsl
jns
outsb
cmp
adcb
mov
pop
mov
into
pop
arpl
fildl
int
fadd
dec
mov
imul
imulb
pop
inc
gs
mov
pop
jae
and
mov
push
in
and
add
fisubs
jnp
movl
mov
out
sbb
pop
nop
xchg
aam
add
lret
xor
inc
pop
and
jg
mov
out
push
mov
cmp
mov
push
lea
in
add
inc
in
lcall
imul
inc
lds
bnd
sarl
stos
xchg
jbe
je
xor
mov
cld
scas
jns
es
add
jecxz
bt
lock
mov
scas
mov
sbb
mov
mov
dec
in
xchg
mov
add
xor
mull
dec
xchg
add
in
dec
imul
add
mov
movsb
pop
or
and
jecxz
aas
pop
ficoms
dec
jo
sbb
jnp
test
outsl
jecxz
mov
xor
cmp
jl
stc
std
or
lds
inc
and
in
lock
xchg
pop
sti
pop
or
sbb
hlt
xor
xor
cmp
pop
out
dec
into
adc
fsubp
pop
daa
and
jge
pop
mov
mov
push
mov
inc
add
arpl
and
call
fnsave
pop
stos
daa
push
test
btr
jge
jecxz
hlt
mov
pop
inc
add
cs
pop
xchg
lret
adc
mov
mov
adc
popw
in
je
insb
mov
dec
loopne
push
push
mov
sbb
fildll
xchg
cmp
aaa
adc
mov
push
test
dec
push
and
jp
sbb
sbb
test
in
outsb
sbb
push
inc
fwait
hlt
push
cld
lcall
push
xchg
cwtl
popa
xor
cld
cmp
mov
cs
cmp
aaa
test
sbb
mov
aam
pusha
dec
mov
out
lret
loopne
cmpsb
pop
pusha
xchg
or
repnz
fcmovbe
fimuls
pop
xchg
mov
adc
xor
test
cmp
pop
jge
dec
mov
sbb
pop
lahf
lea
daa
pop
stos
inc
lcall
dec
cld
jp
out
jle
aas
lret
jle
inc
dec
hlt
jns
pop
pop
out
stc
mov
es
cmp
push
test
jo
mov
adc
mov
cmp
mov
push
mov
scas
adc
add
jmp
jg
iret
and
push
xchg
xchg
cmpsl
cmp
jle
push
inc
jb
xchg
pop
cmp
cld
or
mov
sbb
push
fdivrs
jnp
pop
nop
adc
sbb
mov
xchg
adc
add
cld
mov
je
sub
imul
pop
jae
pop
sbb
mov
sbb
nop
adc
dec
mov
lock
sub
outsb
int
pop
fstpt
mov
imul
dec
mov
in
pop
fldenv
pop
mov
or
imul
pop
inc
pop
test
les
xchg
lds
sbb
fisubl
or
lahf
cmp
clc
push
sahf
mov
sbb
inc
cmp
test
push
repz
rolb
dec
jnp
in
mov
pop
xor
cltd
pop
ds
mov
sbb
loope
jecxz
jp
outsb
enter
jg
mov
lds
cmpsb
ror
sbb
pop
fistl
mov
addr16
rorb
cmp
mov
imul
add
xorl
jecxz
pop
aas
jmp
mov
pop
or
inc
add
or
jecxz
rcrb
fcompp
ds
jmp
in
fimull
imul
sbbb
in
dec
jle
cmp
jb
add
jl
mov
mov
sbb
mov
movsl
dec
mov
pop
dec
jne
mov
jbe
ds
aas
iret
xchg
dec
addr16
xchg
push
push
pop
int3
cmp
xor
dec
mov
pop
lods
cwtl
mov
daa
movsb
aas
xchg
sbb
adc
stos
popf
add
adc
pop
fcoml
jmp
xchg
mov
pop
fnstcw
arpl
fdivrl
repz
cmp
sbb
push
sbb
aam
mov
xor
xor
inc
cmp
movsl
cmc
pop
int
adc
jge
dec
cmp
pop
xchg
loop
dec
outsb
das
enter
insb
sbb
scas
push
xchg
rorl
fldl
inc
push
out
mov
mov
pop
jp
or
or
lock
fsubrs
or
mov
jns
test
imul
sub
mov
popa
pop
add
jb
ret
shlb
jp
xchg
push
inc
lods
or
mov
movsl
insb
add
out
lahf
call
mov
sbb
jle
push
mov
sarb
pop
enter
dec
pusha
ja
pop
cmp
in
mov
ret
mov
inc
xor
inc
pop
movsl
pop
repnz
fstpt
jl
add
sub
jle
negl
jae
xor
aad
xlat
iret
mov
mov
lea
or
dec
inc
push
adc
outsb
loope
xchg
mov
roll
test
mov
jnp
cmp
mov
jns
sarb
rcll
mov
push
pop
scas
fs
ljmp
xchg
pop
loopne
xor
xchg
sub
fdivs
cmp
lret
popa
cltd
xchg
das
les
push
lods
xchg
cmpsl
fiaddl
mov
clc
mov
add
xor
adc
adc
sbb
push
jp
lds
sub
pop
rcrb
shl
xchg
cmc
sbb
pop
pop
mov
or
cmpsl
pop
scas
cmp
pop
in
rcrl
sbb
jne
fnstsw
mov
rclb
push
cmp
andb
cmp
cmp
pop
divl
xchg
adc
into
xchg
decl
pop
sahf
push
lods
sbb
icebp
lea
mov
pop
scas
cwtl
dec
and
or
or
xor
js
cwtl
je
ljmp
lock
fwait
sar
sti
jnp
test
popf
sarb
pop
gs
mov
pop
sbb
cmp
jmp
loope
lods
sub
clc
movsl
mov
lock
jno
mov
sub
cmp
outsb
out
outsl
or
out
out
sub
je
push
data16
insl
mov
out
add
mov
pop
aad
push
mov
or
add
adc
repz
cltd
andps
jecxz
pop
add
outsb
lahf
ficomps
sbb
pop
fdiv
aaa
aas
in
mov
cmp
test
sbb
or
mov
jns
mov
leave
loopne
jge
lods
pop
pusha
test
lcall
out
push
lock
mov
in
sbb
pop
imul
sub
push
testb
push
jno
xor
sub
pop
pop
adc
fcomip
push
jg
enter
outsb
pop
push
and
mov
jns
inc
in
cltd
pop
js
iret
stos
cmp
dec
jmp
and
xchg
adc
hlt
sbb
mov
mov
or
cmp
outsl
enter
les
lods
insl
mov
adc
push
pop
sub
scas
xchg
les
add
insl
sub
pop
push
jp
scas
lods
add
add
push
jge
push
ljmp
ja
xchg
add
add
int3
sub
cltd
bound
mov
adc
mov
das
jns
test
lods
les
pop
pop
xchg
adc
cmp
mov
xorl
fs
dec
cld
in
negl
aaa
shrl
xchg
pop
sub
movsl
mov
repnz
or
enter
pop
ss
aad
pop
inc
scas
dec
pop
cmpl
jg
sub
sbb
lcall
mov
xchg
or
daa
scas
pop
xor
add
jp
mov
sbb
insb
add
mov
or
lock
jp
inc
xchg
mov
fstpt
or
sahf
clc
into
aad
scas
push
outsl
xchg
mov
incb
lock
inc
push
jg
rcrb
dec
or
fstps
mov
bnd
fildll
scas
xchg
pop
aas
test
scas
add
sub
das
jnp
iret
jae
xor
or
jmp
jb
pop
push
insl
cmp
dec
push
pushf
or
push
pop
jecxz
movsb
lcall
dec
and
push
in
loopne
or
cmp
xchg
insl
mov
mov
push
cmp
cmp
cmp
pop
mov
jl
roll
dec
and
jno
lea
xor
stos
sub
cmp
cmp
cwtl
push
cmpb
adc
cmpsb
dec
and
fmul
mov
mov
pop
jns
pop
sub
popa
scas
inc
or
pop
mov
pop
jge
test
ret
icebp
sbb
jmp
ljmp
bound
stos
sbb
pop
xchg
test
adc
xor
mov
mov
sbb
lods
out
inc
pop
xchg
jle
scas
mov
ret
and
add
push
push
push
repnz
std
mov
xchg
push
pop
cld
lods
jp
mov
jo
adc
sbb
or
int
cmp
or
popf
das
cld
pop
hlt
pop
loopne
jl
out
or
jmp
sarb
sub
push
leave
int
mov
xchg
popf
or
sar
mov
jno
xchg
mov
mov
pop
adc
mov
roll
sahf
repnz
shr
shrl
mov
mov
inc
sub
inc
orl
aas
push
in
push
outsl
sub
mov
flds
cltd
aad
xchg
clc
push
add
xor
repz
dec
mov
push
pop
cltd
xchg
mov
mov
repnz
jge
pop
mov
sub
or
mov
xchg
mov
aam
arpl
mov
add
xchg
mov
pop
insb
mov
jb
fists
loope
adc
lods
sub
dec
inc
pop
popf
pop
pop
mov
jecxz
xchg
aas
mov
pop
or
or
dec
loopne
pop
jmp
hlt
jno
jmp
cmp
movsb
cmp
in
repz
mov
cmc
je
out
pop
mov
das
ret
xor
jae
nop
cmp
xor
dec
cmovg
pushf
out
std
lock
pop
jo
push
lret
jne
test
out
pop
cmpsb
je
push
push
pop
xor
jnp
cwtl
adc
outsb
push
mov
cmp
inc
andl
test
add
shrb
push
or
xor
push
dec
pop
ret
adc
in
sarb
push
fs
fildll
mov
push
sub
repnz
or
jns
pop
push
cmpsb
in
cld
in
fnstenv
pop
lea
test
xlat
pop
out
push
stos
add
mov
pop
push
inc
pop
xchg
fldcw
mov
pop
pusha
movl
insl
add
faddl
mov
push
pop
adc
mov
add
dec
mov
scas
repz
lods
cmpsb
jl
xor
inc
and
andb
leave
push
lock
es
xor
add
jns
std
inc
xchg
adc
push
clc
cs
test
cmp
push
add
mov
pop
lea
jno
repnz
pop
push
or
aaa
inc
sbb
and
movsl
js
mov
jno
push
jge
jne
xchg
push
jb
push
insb
pop
mov
mov
js
jae
inc
call
add
outsl
mov
cmp
mov
leave
inc
stc
pop
rcr
test
jge
add
call
adc
lcall
pop
es
je
push
mulb
mov
jns
inc
cmp
pusha
inc
in
pop
or
roll
ljmp
outsb
sti
pop
sbb
adc
addr16
or
rcl
add
andl
cmp
dec
in
insl
les
popa
adc
cwtl
data16
or
xchg
sbb
mov
or
les
xor
fdivs
or
lock
jb
lea
xchg
ja
mov
mov
pop
pop
sub
dec
and
add
loope
mov
insb
clc
xor
or
cld
leave
js
in
sahf
out
es
push
xchg
add
mov
sub
dec
mov
push
mov
movsb
cmp
pop
adc
or
fadds
aas
icebp
sbb
std
adc
and
sub
dec
sub
sbb
pop
xchg
aaa
xchg
push
mov
dec
lret
cmp
stos
ret
out
pop
subl
sub
aad
lods
pop
fxch
les
cmp
pop
movsl
sbbl
test
push
test
gs
sbb
mov
mov
bound
or
cmp
adc
add
jecxz
push
cmp
push
leave
cmp
jl
mov
add
xor
cmp
mov
aas
cmp
aad
jecxz
ja
cwtl
mov
ror
dec
sbb
adc
lods
inc
fmuls
lock
pop
push
movsl
in
cmp
or
jb
inc
mov
adc
and
mov
repz
mov
mov
dec
pop
outsb
xchg
lret
js
iret
add
shlb
xlat
add
imulb
add
dec
mov
pop
clc
insb
push
inc
sarb
sbb
add
xchg
jge
clc
fmul
xlat
or
inc
fdivr
je
xlat
sub
pop
jmp
cmpsl
sahf
movsl
mov
mov
add
adc
push
sbb
daa
mov
lock
add
jns
xor
pop
mov
call
mov
es
out
add
or
aad
sbb
repz
dec
pop
lahf
arpl
push
aam
jae
jae
movsb
push
mov
lea
js
lods
fcmovne
hlt
dec
sbb
jnp
inc
push
es
cmp
mov
aad
rcr
pop
inc
push
xchg
mov
jl
sub
xchg
movsb
add
add
push
clc
xchg
dec
add
lcall
pop
fldt
jo
test
or
cld
sbb
test
rolb
push
aas
sbb
sahf
pop
pop
icebp
mov
fldl2e
jp
sbb
fcmovnbe
xchg
push
out
pop
lcall
js
popw
cmpsb
jo
les
add
cmp
xchg
mov
daa
sbb
aad
into
cmp
gs
cmp
fldl
lock
movsb
xchg
cmpsb
into
js
mov
cltd
outsl
rolb
cmp
add
cmp
scas
pop
popa
or
cld
mov
lock
cs
push
xchg
mov
inc
sarb
loope
testl
push
pop
popf
shll
adc
add
stc
mov
or
pop
adc
inc
inc
push
xor
out
shrl
outsb
pop
daa
pop
and
pop
mov
cmp
mov
mov
mov
xor
repnz
adc
pop
inc
cmp
stc
scas
cmpsb
cld
pop
lods
xchg
aad
imul
fcompl
pop
jp
mov
xor
mov
lret
pusha
lods
scas
add
pop
xor
inc
lcall
pusha
ljmp
xchg
pop
mov
or
mov
xchg
sub
sbb
aad
lock
in
ljmp
mov
bound
jg
insl
cmpb
scas
sbb
pop
loopne
jae
dec
mov
loope
sahf
xchg
xchg
sbb
dec
movsb
pop
dec
push
imul
sub
jae
shr
mulb
pop
dec
test
arpl
mov
ficompl
fistpll
sub
cmp
push
and
jmp
pop
aad
push
imul
mov
pusha
into
xlat
les
rorl
nop
pop
movlps
jge
data16
add
add
in
mov
cmp
pop
xor
mov
xor
incb
scas
mov
aas
imul
or
scas
cld
mov
cmp
cmpsb
jmp
pop
cltd
addr16
and
test
loop
int
dec
aad
pop
cmp
scas
cmp
adc
mov
push
rcl
xchg
pop
bound
mov
pop
push
decb
jnp
ror
mov
mov
inc
push
lahf
pop
fwait
or
xor
movsb
fidivrl
int
loope
shr
pop
push
mov
fidivrs
into
add
in
mov
ds
pop
out
pushl
lds
or
test
fnstsw
outsb
sub
xchg
cmp
cmp
inc
xchg
push
push
mov
pop
aaa
pop
lods
and
cltd
lods
add
adc
cmp
leave
and
in
inc
sbb
ret
call
shr
cld
or
lret
mov
ficoml
pop
and
mov
insb
xchg
push
pop
aam
dec
sarb
test
jbe
std
aas
pusha
add
lret
loopne
dec
and
je
pop
mov
xchg
and
adc
pop
mov
leave
sub
nop
cmp
fldt
pop
mov
or
cmp
mov
pop
mov
or
adc
aas
mov
push
out
push
inc
repnz
mov
cmc
imul
daa
jo
add
arpl
or
push
xor
rolb
mov
pop
das
pop
xchg
pop
outsl
cmpsl
pop
clc
std
jno
jae
jp
sub
or
and
adc
pop
adc
out
in
movsl
pop
lcall
inc
js
dec
mov
jno
unpckhps
jne
repz
mov
xchg
lods
movsb
pop
fwait
dec
lds
pop
daa
fcompl
fucom
clc
sub
pop
sbb
mov
pop
jg
push
mulb
fwait
jae
sub
cld
repnz
pop
mov
sbb
pop
movsb
repz
cmp
lcall
jmp
mov
xor
cld
ja
lods
pop
loopne
jg
int
sub
jae
jnp
pop
add
push
sub
mov
dec
loope
into
jne
add
fistl
fst
pop
arpl
or
popa
sarb
bound
enter
mov
and
sbb
cmp
jp
sbb
pop
outsl
xor
lahf
or
divl
pop
fcompl
aam
mov
xor
lods
les
ja
xchg
jge
jb
add
inc
xchg
out
lahf
cmpb
pop
push
xchg
fs
movsb
sub
cmp
inc
gs
add
dec
push
fwait
push
fidivl
jno
jns
or
cli
pop
adc
dec
xchg
shll
mov
xor
xchg
sbb
jle
cmp
dec
inc
inc
push
pop
push
inc
lea
sbb
insl
mov
add
jno
sub
sbb
sub
pop
cmpsl
les
in
fadds
out
add
data16
fildl
mov
pushf
leave
in
mov
jge
push
xlat
and
sub
cmp
movsl
stos
scas
mov
mov
xchg
out
es
and
pop
adc
inc
jle
test
loop
jne
dec
cmp
popa
xchg
mov
xor
rcrl
dec
adc
stos
jns
mov
pop
data16
bound
adc
pop
sub
jp
fsts
sub
repz
out
add
popf
cli
pop
add
jmp
mov
inc
cmp
jle
pop
push
gs
hlt
shlb
pop
dec
and
out
in
xor
pop
psubusb
pop
lock
std
mov
add
cltd
fs
mov
cmpsl
xor
outsl
cmp
dec
clc
dec
mov
pop
fstpl
in
fcmovne
push
sbb
push
mov
movsl
pop
movsb
mov
inc
xor
lcall
jg
sbb
clc
scas
outsb
mov
cmp
repz
nop
stos
add
call
adcl
jne
mov
inc
int3
push
into
jbe
cmp
mov
sarb
jecxz
addl
pop
aas
leave
xchg
pop
js
in
cmp
dec
mov
jmp
cmpsb
add
cmp
fs
pop
mov
mov
xchg
jle
pop
es
idivl
add
mov
roll
inc
add
aaa
push
lret
cmp
and
add
fcoms
push
icebp
adc
and
mov
pop
inc
inc
push
enter
pop
cmc
loopne
std
jo
pop
mov
sub
sbb
out
cmp
jle
adc
in
imul
inc
fadd
js
adc
pop
movsb
sub
add
xor
push
lock
mov
jg
adc
pop
in
pop
ljmp
loope
mov
xchg
psllq
mov
inc
cmpsl
pop
xchg
sbb
push
push
pop
lock
jns
leave
bound
or
push
add
and
stc
push
fldcw
sti
ficomps
cmp
add
insl
pop
sub
lret
in
and
mov
xchg
cld
flds
divl
jb
inc
inc
and
adc
dec
xchg
testl
mov
mov
pop
inc
rcrb
in
in
pop
pop
inc
mov
adc
into
repnz
or
test
pop
add
mov
pop
pop
fs
cmpsl
ficoms
movsb
mov
mov
mov
pop
push
lds
in
in
pop
int3
mov
xor
pop
or
sbb
filds
xor
aad
dec
scas
or
sbb
sbb
in
jge
sub
in
sbb
in
sysret
ret
or
scas
mov
sbb
jbe
adc
push
sahf
jmp
and
gs
xchg
or
inc
xchg
jge
fadd
fisubrs
lcall
or
mov
mov
mov
gs
add
push
dec
xchg
addb
sub
jne
pop
inc
xchg
jnp
cltd
addr16
jge
out
loope
nop
out
add
test
aaa
int3
enter
and
fcmovnbe
adc
dec
pop
cmp
push
jne
dec
cmp
jle
jnp
aaa
jns
or
sbb
push
pop
pop
gs
into
js
mov
movsb
testl
addr16
jae
add
or
je
mov
faddl
out
or
arpl
mov
test
fucomp
push
xor
pop
out
aas
push
loopne
lahf
pop
jns
push
aam
push
jecxz
aas
das
mov
cmp
xchg
add
push
movsb
setg
lahf
stos
or
sahf
insb
loop
fs
pop
fxtract
or
ja
add
add
cltd
mov
clc
push
incb
jle
pop
inc
push
adc
mov
adc
hlt
adc
mov
sub
push
sub
fwait
mov
jmp
shrl
scas
jg
pop
jb
dec
lock
cmpsl
or
ret
clc
addr16
imul
cli
stos
cmpsb
subb
stos
clc
and
or
cld
iret
mov
loope
push
mov
push
cs
mov
pop
sbb
pop
xchg
xchg
pop
ret
cmp
cmp
cmp
pop
jp
std
mov
fsubrl
dec
aad
mov
popf
sahf
sarb
ret
pop
stos
sbb
dec
es
add
xor
pop
sbb
sti
cmp
repz
sub
neg
xchg
mov
out
int
sbb
jbe
sbbb
sub
testb
movsl
int
pop
mov
pop
pop
push
or
fadd
adc
int3
stos
repnz
iret
pop
sbb
or
pop
pop
scas
out
lret
mov
test
xor
mov
rcll
pop
xor
and
repnz
pop
test
mov
add
insl
push
les
inc
push
popf
sbb
jecxz
pop
xchg
mov
adc
pop
cld
mov
inc
sbb
mov
mov
sarb
and
inc
jmp
cld
dec
in
std
popf
decb
pop
sub
ljmp
xchg
jbe
or
add
or
jae
push
test
push
pop
sub
cmp
aaa
cltd
cmp
aam
push
ret
jns
iret
in
mov
xor
enter
cmp
xorl
repz
mov
pop
mov
cs
or
mov
inc
pop
nop
test
in
pop
shrl
out
mov
enter
or
lods
mov
lods
pop
cld
cmp
dec
xlat
or
mov
call
cmp
or
sub
mov
pop
stc
lcall
pop
push
jecxz
aas
mov
mov
dec
andb
pop
xor
push
inc
mov
popa
jge
jns
cs
ret
pop
xor
mov
adc
push
sbb
push
lds
into
fwait
jns
jle
pop
mov
adc
jnp
sbb
movsb
in
cmp
shl
fcom
idiv
mov
sub
add
idivl
pop
shll
mov
pop
or
fisubrl
add
cmpsb
add
je
jae
mov
jno
lcall
mov
dec
mov
cld
mov
cmp
mov
sbb
repz
xor
push
add
sar
sub
iret
sbb
clc
adc
push
out
sbb
outsb
jl
adc
out
pop
mov
add
call
and
test
add
mov
or
int
xor
mov
sub
pop
enter
cwtl
push
loop
stc
jne
cmp
inc
pop
pop
cmp
movsb
add
mov
fstp
xor
pushf
pop
fmulp
xchg
rorb
fs
insb
pop
sbb
fcmovnbe
xor
out
mov
or
inc
cmp
pop
pop
aaa
lcall
pop
dec
imul
cmp
add
mov
adc
ljmp
imul
pop
and
fiadds
dec
lds
jecxz
cmp
or
pop
icebp
sbb
mov
pop
movsl
out
into
sbb
movsb
pop
cmpsb
iret
push
imul
pop
push
mov
icebp
inc
add
cmp
hlt
movl
sub
mov
into
fdivs
int
shl
adc
test
sub
cmp
pop
call
ror
fadd
fdivl
pop
jp
aaa
xchg
jg
stos
mov
mov
pop
mov
or
les
shll
sub
shl
loope
and
daa
mov
fisttps
arpl
xor
push
rcll
push
or
aas
pop
pop
sbb
cmp
in
jnp
xchg
cli
add
scas
push
ret
lcall
aaa
pushf
jae
fisubrs
pop
cmp
mov
jmp
cltd
ljmp
mov
cmp
jae
or
inc
rolb
lods
sbb
arpl
pop
fidivrs
push
add
xchg
xchg
icebp
clc
dec
bound
ja
aad
mov
sbb
push
cmpsl
dec
pop
mov
jne
jbe
push
rclb
and
aas
cmp
imul
push
fldl
dec
popf
insl
jg
cltd
and
cmp
shl
cmp
mov
je
adc
es
push
cmp
or
push
scas
ficoms
xor
orb
stc
mov
inc
test
adc
cmp
lret
push
fs
adc
fldt
mov
cmp
add
sbb
mov
pop
xor
push
push
jne
inc
pop
xor
stos
mov
pop
push
cmp
insb
dec
ja
inc
cmp
adcb
lcall
int3
ja
xchg
mov
movsb
xor
add
and
mov
das
jmp
faddp
jge
cs
lahf
push
rorb
cmp
fdivr
mov
jmp
cmp
mov
xchg
jb
in
jno
add
jne
js
xor
subl
into
je
dec
sahf
popf
cmp
jae
push
testl
aam
in
cs
jb
push
gs
xchg
pop
ret
ficoml
xor
sub
cmpsl
push
or
add
sbb
pop
xor
push
push
jns
ds
jmp
mov
fdivrl
mov
push
aam
jnp
xchg
negb
stos
xchg
jbe
leave
loope
pop
ret
outsl
mov
dec
mov
fistps
out
add
xor
inc
cmp
shrb
iret
inc
push
ja
lock
or
scas
fcoms
mov
dec
les
adc
aam
jge
xor
subb
jnp
dec
out
nop
jecxz
andl
std
mov
sahf
pop
push
cmpsb
call
cs
jl
adc
push
mov
test
cmpsl
lods
sbbb
repz
mov
jmp
popf
xchg
inc
pop
and
cmc
lahf
mov
pop
je
xor
mov
jmp
pop
aas
outsb
adc
xlat
movl
insb
dec
popa
xor
or
mov
xchg
in
pop
sub
cs
aad
push
sbb
insl
inc
mov
dec
dec
pop
sub
pop
adc
mov
sbb
in
pop
cmp
pop
fisttpll
and
cmp
out
xchg
pushf
fdivs
mov
pavgb
ret
cmp
cmp
sbb
mov
jno
ret
push
mov
push
lret
filds
repz
lods
cmpsl
jecxz
pop
cmp
mov
sti
pop
aaa
xor
cmp
addr16
sub
inc
pop
or
lea
pop
pop
mov
lret
sub
in
xchg
mov
and
mov
aaa
das
call
lahf
int3
inc
mov
aam
stc
and
daa
lea
mov
mov
pop
scas
lcall
lahf
je
mov
pop
push
repz
or
lock
mov
push
inc
popf
pop
jb
add
jg
dec
pop
out
lahf
fistpl
mov
xlat
pop
in
sub
jmp
inc
push
lahf
scas
jecxz
jle
fsubrl
sub
pop
pop
lds
adc
ds
or
pop
mov
sbb
pop
cmpsb
scas
es
cmp
inc
push
add
in
outsb
dec
xchg
cmp
orl
dec
ljmp
sti
jae
inc
xchg
adc
mov
xor
pop
push
addr16
cmp
cmp
int3
mov
stos
imul
dec
loop
nop
popf
fwait
add
loope
and
popa
inc
inc
sbb
cmpsl
xchg
add
push
dec
rorb
fistpll
jb
out
sub
jg
test
divb
pop
cmp
sbb
lods
cmp
push
jno
lds
push
cmc
dec
xor
pop
test
xchg
or
jbe
sbbb
and
stc
pop
or
cld
pop
mov
pop
inc
sbb
es
mov
cmp
inc
pushf
jl
lods
movsl
pop
dec
adc
push
cltd
into
cld
mov
in
sahf
jae
mov
sbb
sub
leave
mov
movsl
aas
and
push
test
xchg
pop
outsb
pop
into
pop
scas
mov
pop
mov
add
xchg
pop
mov
xchg
sbb
pop
out
mov
imul
pop
adc
mov
cmp
jns
push
shlb
jmp
leave
mov
push
mov
mov
dec
or
dec
iret
add
aam
out
ret
aaa
or
sub
scas
popa
mov
test
and
add
cwtl
pop
std
sub
daa
add
popa
pop
push
mulb
xchg
aam
rcrb
mov
mov
pop
mov
ss
lahf
adc
xor
mov
cmp
cmp
hlt
pushf
or
cmp
cmpsl
int
inc
sub
mov
sub
fmuls
lret
pop
mov
xor
xchg
jne
ss
mov
addb
in
sti
dec
out
xchg
out
pop
movsl
inc
clc
add
leave
sbb
mov
dec
shll
faddl
dec
sbb
mov
js
pop
pop
test
xchg
lock
stc
negl
jns
lret
je
xor
test
fbld
mov
ja
popf
or
mov
xchg
mov
add
call
repz
fdiv
push
pop
mov
mov
aas
sub
lock
hlt
pop
call
xchg
in
add
push
insb
mov
enter
pop
add
jns
je
pop
mov
loopne
inc
lret
fdivrp
pop
push
or
movsb
movsl
mov
mov
inc
pop
std
sahf
aas
mov
mov
or
add
xchg
sub
cmp
sub
imul
fwait
insl
jo
cltd
dec
cmp
jp
mov
scas
sti
cmp
popa
cmp
and
inc
push
aad
out
cmp
lcall
push
push
rorl
cmp
and
lcall
dec
out
mov
or
pusha
cmp
fsubrl
mov
lret
add
dec
addr16
pop
sbb
or
push
pusha
add
pop
fmull
imul
loope
jnp
rcll
aaa
lret
mov
sbb
mov
mov
push
into
xchg
pop
lock
imul
push
mov
mov
xchg
xchg
xchg
sbb
scas
xchg
insl
mov
inc
pop
push
lock
add
push
jecxz
shlb
lods
pop
cmp
nop
inc
call
sub
cmp
pop
and
fucomip
jg
sub
es
cmc
sbb
pop
or
and
lret
pop
movsb
jle
pop
cli
fsubs
mov
inc
in
pop
jl
dec
stos
loop
jnp
jne
pop
mov
or
stc
mov
imul
or
xchg
cmp
fcmovb
xchg
lret
rcr
cmp
mov
aad
add
in
scas
mov
cs
cmp
mov
pop
popf
rclb
fnsave
adc
xchg
add
out
mov
and
pop
dec
add
pop
sub
mov
pop
xchg
xor
adc
test
pop
out
jnp
and
int3
push
dec
mov
aaa
or
push
pop
xchg
sti
std
pop
mov
repz
jae
stc
or
dec
pop
data16
jbe
jno
pop
aam
pop
xchg
aad
sahf
pop
jp
repnz
icebp
and
add
mull
dec
pop
pop
stos
xchg
inc
add
jg
bound
push
lcall
sbb
push
fcmovu
inc
loop
ljmp
mul
lds
mov
pop
xchg
sub
ja
adc
xchg
std
sub
pop
clc
cwtl
add
rolb
mov
shl
fldl
jne
cmpsb
ja
pop
cmp
rolb
adc
cmp
add
inc
sub
mov
jbe
in
decl
add
mov
sub
stos
fidivrs
js
pop
das
movsl
mov
shlb
sbb
cmp
movsb
arpl
xchg
enter
adc
fmuls
push
jno
jge
xor
jg
mov
or
jns
movsb
lcall
pop
mov
lock
sbb
pusha
sbb
cltd
js
int3
and
or
lock
sarl
xchg
jne
in
inc
mov
or
ret
jp
pop
fisubs
pop
outsb
out
enter
lcall
cld
mov
hlt
icebp
lea
push
jl
cmp
loope
mov
pop
push
cld
jns
rcr
add
das
mov
nop
push
add
sub
add
cmp
loopne
mov
sbb
cmp
popa
fsubs
push
ja
adc
pop
cmpsl
xchg
loope
dec
mov
cmp
out
stos
hlt
or
mov
sub
pop
mov
push
pop
or
mov
mov
mov
add
cmp
mov
cmp
push
inc
cmp
aas
cmp
sti
mov
push
mov
inc
sahf
adc
in
pop
cmp
fs
and
movsb
dec
inc
xchg
push
adcl
test
ret
ja
stos
cmp
js
xor
test
cmp
push
std
jmp
call
addr16
mov
clc
push
mov
and
mov
jbe
bound
jmp
dec
jecxz
dec
fs
out
test
mov
in
pop
mov
sbb
insl
or
data16
sti
test
sarl
jg
and
dec
sub
push
or
or
sbb
outsb
push
mov
fiaddl
fimuls
movsb
mov
fistl
popf
and
sbb
pop
divl
xchg
je
dec
daa
aas
bound
movsl
xchg
jae
adc
idivb
xor
pop
jns
mov
cmp
int3
movl
loope
xor
pop
insb
out
and
in
sub
sub
hlt
adc
sbb
push
pop
fs
push
inc
js
cmp
ljmp
inc
pop
data16
mov
ja
out
or
mov
clts
cmp
test
xchg
inc
dec
pop
lds
addr16
sbb
pop
loopne
shr
adc
pop
mov
loop
mov
rolb
aas
pop
sti
or
lods
jns
pop
xor
enter
add
xor
repnz
fsubrs
add
add
inc
pop
cmp
cmc
add
insb
aam
or
mov
in
cmp
mov
push
dec
add
cld
inc
jno
ss
jge,pn
mov
fstpl
mov
std
stc
sbb
mov
cwtl
repnz
dec
sbb
orl
mov
sbb
rcll
mov
pop
mov
and
sahf
insl
pop
add
ja
push
pop
out
sub
mov
popf
pop
push
enter
sbb
cmp
xor
push
pop
or
mov
test
mov
xchg
mov
mov
fldenv
enter
je
pop
xor
or
cmp
mov
ret
pop
imul
lods
sbb
test
dec
scas
and
add
fidivs
repz
lock
jbe
mov
lea
repnz
cmp
xchg
push
iret
cltd
pop
cmp
pcmpgtd
pop
push
pop
pop
push
pop
vmulpd
pop
aaa
enter
dec
push
mov
mov
jecxz
adc
mov
ja
pop
sub
pop
and
pop
mov
bound
les
cwtl
mov
jns
popa
mov
lahf
sbb
mov
jmp
jg
movsb
add
fwait
jno
scas
sbb
pop
test
add
pop
mov
clc
pop
push
adc
rclb
sub
iret
pusha
push
mov
pop
test
push
pop
xchg
ret
jle
dec
push
cmp
sbb
jl
cmp
xor
sub
xor
dec
pop
add
pop
scas
mov
pop
mov
push
test
sub
sbb
call
mov
pop
add
mov
xor
fldl
adc
inc
dec
lds
add
jo
into
enter
xchg
pop
jb
test
cmpsb
data16
or
dec
gs
pop
mov
repnz
mov
shll
call
or
mov
out
gs
test
rorb
push
loop
or
mov
xlat
fs
jl
inc
jp
inc
imul
sub
pop
sub
and
adc
dec
mov
std
pop
int3
mov
mov
pop
xchg
dec
mov
pop
ret
push
mov
and
push
mov
imul
mov
out
faddl
js
inc
sbb
popw
popa
fistl
fisttpll
xor
filds
loopne
int
stos
call
inc
int3
mov
rcll
jmp
sub
adc
pop
pop
mov
push
out
outsb
xchg
das
cmpsl
or
fwait
popf
jg
sbb
sbb
jmp
rol
jl
mov
orb
divb
add
inc
mov
or
iret
cwtl
push
call
fmuls
pop
push
adc
ja
or
je
cmc
jge
add
loope
rcr
dec
ja
adc
lret
add
out
adc
jne
pop
js
mov
mov
mov
xchg
clc
lods
pop
mov
sbb
es
into
lods
in
pop
loop
out
stc
cmp
mov
cld
js
mov
sbb
fistpll
push
shll
dec
mov
fstps
pushf
pop
adc
negl
stos
imul
pop
lret
pop
movsl
adc
sub
jb
pop
fldenv
adc
and
cmp
dec
push
mov
cmpsb
xchg
or
fstl
pop
leave
ja
movsl
sub
push
add
jns
movsb
rolb
and
bound
mov
iret
xchg
pop
into
repz
push
call
in
lods
cmp
nop
lret
mov
roll
or
mov
cmovb
pop
insl
xchg
pop
shlb
xor
movsl
lds
int
mov
dec
je
loope
sbb
mov
xchg
jbe
sbb
xor
ja
add
dec
imul
jnp
imul
lret
jmp
cmp
stos
pop
js
and
mov
out
pop
or
pop
xchg
dec
pop
test
sub
aas
fidivl
push
ret
mov
sti
aad
int
std
and
pop
xchg
dec
pusha
js
mov
inc
add
ret
pop
xor
cmp
jae
pushf
cmp
loope
cmpsb
sarl
nop
adc
mov
mov
jg
sbb
mov
inc
test
das
jns
mov
insl
xchg
or
pop
or
jo
pop
fwait
jle
int
jne
adc
sub
addr16
mov
mov
mov
ljmp
pushf
xchg
test
in
popa
outsl
ja
lret
jnp
or
bound
adc
rcrb
jp
cmp
push
jnp
xchg
pop
xlat
or
inc
jl
cwtl
std
pop
je
sub
or
cmp
dec
xchg
jns
adc
out
repz
cld
mov
add
arpl
cwtl
sarl
inc
sbb
xor
xchg
cmp
sbb
sbb
mov
mov
insl
sarl
xchg
fcompl
outsl
pop
adc
pop
jle
pop
lods
aam
sub
pop
push
sti
ss
stos
jmp
clc
xchg
ret
enter
mov
mov
enter
cmp
adc
ror
ret
out
hlt
out
das
lcall
adc
xorb
adc
repz
push
push
adc
flds
dec
pushf
pop
xchg
test
out
je
rcl
mov
pop
xor
aad
cmpsl
ret
pop
sbb
into
adc
rcll
or
push
dec
in
inc
pop
cld
ds
imul
test
icebp
or
pop
pop
gs
xchg
cmp
adc
dec
insl
rcl
pop
xchg
ljmp
cs
pop
cmp
pop
sbb
mov
jge
push
test
shll
push
inc
adc
sbb
xchg
test
pop
sbb
lahf
out
rolb
xchg
xor
sub
sbb
pop
lret
cmc
inc
in
adc
cmp
and
fdiv
pop
xor
or
jns
mov
sbb
mov
and
ret
pop
aas
data16
pop
xchg
sub
cwtl
mov
push
mov
xchg
push
test
cmp
xor
add
cli
cmpsb
subb
cltd
hlt
xchg
ja
and
mov
cmp
scas
and
popa
mov
js
hlt
cld
jae
out
cmp
aam
cltd
push
dec
leave
gs
sbb
push
ljmp
pop
mov
je
addb
sub
fistpll
mov
push
pop
mov
lods
lahf
in
dec
cmp
jo
repnz
rcll
das
mov
sahf
mov
cwtl
and
mov
movsb
push
aad
outsb
xchg
mov
mov
aas
pop
in
lret
jo
ret
or
cmp
in
dec
mov
outsb
hlt
int3
bound
xor
pop
out
mov
sti
cmp
pop
adc
ljmp
inc
dec
pop
dec
add
clc
insb
lods
out
push
cld
jge
test
addl
adc
fldt
pop
push
jnp
std
aaa
mov
addr16
pop
stos
inc
sahf
sbb
sbb
jmp
sbb
sbb
sbb
fstpl
insb
sar
and
mov
ds
push
in
mov
out
scas
cwtl
rorl
movnti
xor
cmp
idivb
jb
mov
sbb
sub
es
jecxz
add
cmpsb
pop
push
movsl
push
cmp
or
push
js
cmp
jbe
inc
pop
cld
lock
pusha
pop
sub
mov
pop
lods
jb
push
mov
sub
pop
add
addr16
jl
push
addb
fs
lret
fcoms
out
jns
push
cmp
jbe
pop
imul
pop
xor
inc
inc
sysenter
inc
subl
mov
aas
mov
mov
cs
daa
neg
loop
pop
negb
xor
jmp
pop
mov
fcompl
push
cmp
or
mov
pop
mov
sbb
adc
sbb
fadds
insb
pop
repz
pop
roll
outsb
jno
sub
cmp
data16
lods
cmp
add
test
cmpsb
fsubrl
pop
xchg
mov
subb
fildl
inc
xchg
jg
dec
ficoms
mov
pop
stos
mov
mov
mov
sbb
rcr
fiadds
jbe
adc
in
dec
movsl
les
and
cltd
xor
jge
in
sbb
cmp
mov
dec
xchg
push
clc
dec
push
sub
sahf
mov
not
dec
jp
add
push
lahf
and
pop
cmp
divb
pop
mov
and
imul
pop
aad
mov
sub
mov
popa
jne
aam
mov
in
ja
loopne
mov
sub
sbb
mov
cs
inc
dec
aas
popa
sahf
sbb
xchg
push
xchg
xchg
cmp
jbe
test
out
xor
dec
adc
add
cmp
loope
mov
push
movsl
sbb
mov
cmp
in
fcompl
cmp
pushf
sarb
test
repnz
sbb
repz
insb
leave
cmp
cmpsb
pop
rorb
sbb
aad
mov
mov
ret
arpl
pop
ljmp
sbb
test
incb
mov
or
sbb
add
sub
xchg
clc
sbb
mov
or
inc
dec
shl
jp
test
mov
jnp
fdivrl
jbe
imul
pop
pop
sarb
lock
pop
cmp
rcrb
pop
lea
mov
mov
push
inc
rolb
push
cmp
ret
pop
scas
into
in
mov
mov
bound
movsb
enter
repnz
pop
popf
jo
pop
sbb
inc
loope
pop
xchg
and
test
dec
fwait
mov
fisubrl
pushl
pop
jnp
clc
data16
sarl
fadds
shl
nop
fstpt
out
or
dec
and
xor
ss
addr16
mov
add
pop
mov
dec
xchg
mov
adc
pop
adc
punpcklwd
jo
rorb
fnstcw
mov
sbb
mov
orl
sub
add
adc
mov
mov
jle
inc
add
shl
push
clc
mov
push
pop
xchg
jbe
adc
mov
xchg
mov
stc
adc
xchg
ret
xor
cmc
mov
push
jbe
pop
mov
out
jp
mov
ja
aaa
js
incl
stc
dec
pop
pusha
arpl
jle
jge
addb
add
jns
bnd
or
in
out
dec
or
push
call
inc
add
pop
lcall
add
sub
jg
cmpl
xor
push
inc
loope
inc
repnz
pop
mov
cs
lea
lds
imul
out
iret
movb
add
push
dec
cs
pop
adc
xchg
jp
pop
fistps
addr16
aad
loopne
aam
in
xchg
in
mov
in
shrb
push
adc
cld
cmp
js
jl
add
pushf
movsb
test
int3
push
sbb
dec
inc
int
decb
xor
ss
add
push
enter
pop
pop
and
push
lea
std
test
lds
xlat
jmp
xor
fadd
mov
pop
dec
adc
pop
loop
mov
mov
bound
clc
aas
mov
pop
cwtl
add
jge
rclb
test
cmp
jb
xor
fnstcw
dec
push
mov
add
mov
or
mov
and
mov
dec
mov
es
push
aaa
add
or
jae
push
fadds
loop
fisubrl
adc
ljmp
js
int
sti
addb
push
cs
stos
fwait
lret
imul
pop
mov
sbb
mov
out
test
call
inc
pop
adc
aas
test
cmp
cltd
dec
lahf
mov
push
sub
mov
test
lock
pop
lods
mov
bound
pop
ljmp
rorl
in
mov
lock
xchg
sahf
mov
dec
nop
ljmp
lock
mov
dec
pop
jbe
sbb
inc
es
pop
mov
leave
pop
sbb
mov
out
jle
cmc
add
popf
dec
pop
popa
pop
sub
iret
in
es
xor
outsb
jns
pusha
cmp
mov
ljmp
xchg
mov
into
lods
sti
or
nop
or
subb
mov
push
sbb
js
call
adc
ja
aam
sub
pop
shll
in
sbb
repnz
push
inc
mov
jne
leave
cmp
and
sti
sarl
test
mov
adc
mov
cmp
add
sbbb
pop
scas
gs
jb
fld
pop
jmp
cltd
mov
jecxz
mov
scas
fisubrl
jmp
add
lret
aad
fwait
js
call
je
add
inc
and
pop
push
scas
jae
shrl
pop
ror
pop
aaa
fisubrl
jecxz
xchg
add
sub
add
cmp
push
fwait
adc
xchg
jle
in
lahf
cmc
nop
jg
add
fmuls
fs
lock
pusha
add
xchg
adc
pop
mov
mov
std
mov
push
sbb
cld
testb
pop
sbb
dec
test
in
lahf
jg
pop
lahf
xchg
add
clc
jle
in
in
add
or
nop
cwtl
std
jg
mov
push
jp
cmp
int3
rolb
popf
sti
mov
add
pop
jns
push
sub
add
popa
je
or
fldl
xor
adc
int3
int
mov
clc
mov
and
hlt
mov
js
int
xor
std
pop
jl
inc
mov
cwtl
repz
mov
cmp
mov
clc
ljmp
faddl
insb
test
jno
jns
jae
outsb
add
clc
mov
inc
sbb
add
fsubrs
dec
mov
xor
xlat
aaa
mov
test
test
aas
pop
popf
mov
ror
xchg
out
bound
sub
ficoms
rcrl
mov
xchg
pop
adc
out
fnsave
pop
add
arpl
loopne
dec
jno
sbb
pop
pop
adcl
push
adc
es
pop
dec
adc
jne
outsl
stc
in
pop
mul
pop
push
cmp
je
jno
add
sbb
filds
and
xor
sbb
dec
pop
sub
inc
adc
ficomps
and
flds
push
mov
ret
xor
pop
push
imul
lahf
xchg
xlat
jne
pop
xchg
pop
dec
shrl
into
sbb
std
mov
jns
xchg
dec
pop
push
test
sub
cmp
and
pop
shl
ret
pop
outsl
enter
mov
or
jb
cmp
jo
rorb
xchg
leave
push
in
cmp
fs
sub
ret
jb
push
test
fnstsw
enter
aas
movsl
push
les
pop
push
xchg
push
mov
inc
xchg
das
adc
mov
cmpsb
mov
add
pop
cmp
enter
movsl
aaa
das
xchg
clc
sub
adc
jns
pop
imul
cld
cltd
mov
push
jmp
cmp
jb
hlt
or
push
mov
mov
jbe
pop
filds
je
ficoms
pop
pop
mov
add
add
or
xor
pop
cld
cwtl
mov
cmp
mov
mov
into
repz
dec
or
push
ja
pop
js
sub
jne
and
lods
clc
xchg
xor
add
out
pop
rcr
xor
ljmp
insl
mov
aas
fwait
ss
xchg
stos
movsb
mov
or
xchg
cmp
repz
cmp
leave
fidivs
fildll
push
int
mov
add
push
inc
pop
fcoms
leave
addr16
mul
adc
sub
add
sbbl
pop
cld
or
lods
fnstenv
pop
cmp
fs
inc
ja
out
cmp
cltd
pop
es
jg
aad
or
loope
cld
arpl
pop
lret
jb
ffreep
dec
pop
mov
mov
pop
or
imul
std
sbb
inc
push
fnstsw
mov
rorb
aam
out
adc
xchg
xchg
pop
test
lahf
cmpsb
jg
push
std
mov
sahf
pop
push
int3
lea
fisubs
pop
iret
mov
xchg
mov
popa
jg
icebp
pop
nop
jno
cmpsb
jl
es
or
mov
inc
adc
pop
pop
push
jns
inc
pop
out
insb
mov
dec
scas
mov
repnz
mov
xor
or
shl
pop
add
pop
mov
or
pop
push
push
jecxz
xchg
jne
sub
and
pop
hlt
mov
cmpsl
mov
sbb
xor
inc
outsb
in
push
andb
mov
pop
cmpxchg
dec
pop
out
ret
adc
andb
jnp
xchg
cmp
mov
cmp
jno
add
hlt
mov
or
sub
sbb
lods
scas
pop
and
in
mov
push
or
fldl
dec
test
out
and
push
jnp
sub
jb
loopne
lea
sarb
push
and
cmpb
mov
stc
gs
adc
cmp
xchg
sbb
dec
sbb
cmp
adc
push
lock
mov
idivl
fildll
pop
pop
imul
or
outsl
rolb
cltd
movsl
pop
xor
inc
push
int
xor
sbb
xchg
or
jle
in
inc
fadds
xchg
pop
dec
mov
cmp
ds
cmpsb
pop
pop
lret
mov
pop
ljmp
sbb
cmp
jo
mov
cmp
cmp
xchg
lss
adc
add
xchg
inc
enter
xchg
in
das
push
loope
xchg
outsb
jecxz
or
fidivrl
scas
outsl
jbe
cmp
xchg
sbb
dec
rolb
mov
scas
insb
in
mov
int3
fcmovnb
xchg
lock
imul
mov
mov
pop
mov
lock
cmp
loop
test
inc
sbb
out
sti
lea
cld
or
mov
ror
jns
cmp
or
out
in
pop
imul
add
jg
mov
or
jp
es
in
ss
add
fs
xor
jmp
ret
lods
rcll
out
add
aaa
xorb
adc
mov
div
cmp
repz
mov
fnsave
sbb
scas
jmp
mov
lcall
int3
pop
fadds
adc
sbb
sbb
leave
pop
ds
mov
movsl
jmp
mov
or
addr16
fidivrs
mov
ret
mov
sub
dec
or
mov
int3
sbb
adc
adc
cmp
into
mov
mov
adc
dec
test
mov
pop
mov
push
outsb
cmp
mov
das
pop
inc
movsl
mov
filds
sbb
mov
mov
inc
mov
test
ret
mov
inc
xchg
pop
inc
aam
cmp
mov
sub
cltd
pop
mov
and
rcrl
pop
mov
lret
mov
outsb
cmp
jb
sar
mov
imul
popf
cmp
sub
or
imul
jg
push
lds
pusha
add
lods
div
ja
xchg
in
call
push
jg
mov
mov
inc
out
sbb
cmp
mov
scas
pop
pop
jge
scas
sar
mov
pushf
stc
es
or
loope
sti
fmuls
push
pop
stc
mov
scas
mov
popf
sub
mov
int3
pop
mov
push
inc
mov
pusha
inc
cmp
into
pop
cmp
sub
mov
mov
xchg
mov
add
add
dec
stc
pop
pop
sub
push
mov
lret
bound
scas
lcall
xchg
pop
push
idivb
sbb
jnp
mov
icebp
sbb
aad
jb
loope
ljmp
out
push
dec
and
mov
jns
jmp
sbb
mov
pop
pop
lods
orb
pop
xchg
or
in
lret
ss
int3
stc
mov
sbb
mov
aas
mov
stc
jge
xchg
push
jbe
mov
test
andb
arpl
pushf
xchg
inc
jp
jns
jp
cmp
gs
mov
pop
out
lds
aaa
or
xor
push
imul
je
pop
movsl
add
jb
out
cs
cs
xchg
in
rolb
dec
jmp
popf
repnz
mov
in
inc
ret
cld
xor
jne
rorl
pop
hlt
pop
fidivl
xchg
adc
aas
fstpl
fstps
pop
sub
push
dec
add
mov
xor
loopne
inc
test
sbb
sbb
clc
jb
xchg
add
pop
cmp
mov
fadds
icebp
inc
shrl
mov
in
out
xchg
add
add
stos
add
cmp
jl
call
cltd
xchg
mov
lock
dec
sbb
xor
jne
pop
cmp
rcrb
lods
out
mov
jecxz
lahf
test
pop
pop
jmp
shrl
sbb
mov
outsl
notb
mov
mov
repnz
outsb
ljmp
icebp
and
aas
sbb
sbb
jno
mov
in
call
xor
pop
clc
mov
jbe
andl
push
inc
pop
fistpl
dec
adc
das
mov
jae
int3
add
pop
int
jle
mov
repnz
mov
clc
imul
dec
jb
sbb
decb
in
leave
inc
pop
faddl
mov
pop
stc
neg
sbb
jae
faddl
stos
dec
lods
lcall
insl
pop
shlb
insb
loop
adc
int
rcll
mov
scas
pop
leave
dec
call
popf
pop
mov
jg
fcmovb
mov
jle
lret
mov
and
cmp
fucomp
push
imul
loopne
mov
mov
dec
out
pop
call
inc
jb
sbb
fwait
and
cltd
faddp
push
jno
shrl
cmp
lock
jge
sub
pop
dec
mov
lcall
and
xchg
ret
pop
adc
insl
push
jns
imul
out
filds
sub
cmp
or
mov
dec
scas
pop
pop
and
dec
or
cltd
push
mov
mov
push
pop
shrb
xor
inc
push
jne
inc
pop
mov
push
lcallw
jne
popa
cmp
ret
mov
mov
cmp
int3
sub
in
and
jp
adc
dec
mov
cmp
pop
pushf
inc
cltd
push
shrl
push
dec
add
or
stos
jmp
ljmp
dec
lret
mov
bound
mov
and
mov
dec
movsb
ljmp
test
mov
inc
adc
lods
pusha
mov
pop
add
lea
fstps
iret
jp
sub
popf
xchg
leave
sbb
out
orb
stos
cmp
push
dec
jno
imul
xor
stos
dec
pop
pusha
cmc
push
inc
add
pop
es
xchg
cmp
sti
push
cmp
test
cld
shlb
push
jecxz
stc
jb
jp
mov
rclb
imul
and
fmuls
pusha
arpl
pop
pop
add
sbb
stos
xchg
push
push
clc
pushf
mov
faddl
fwait
mov
cltd
sahf
loope
jo
inc
std
aad
jmp
in
lods
mov
inc
sub
adc
negl
jle
repnz
pop
jge
rolb
sbb
stos
leave
in
flds
mov
adc
out
clc
or
pop
push
arpl
hlt
leave
add
dec
add
inc
imul
pop
sub
inc
js
std
and
jne
jge
hlt
cmp
test
in
decb
loope
inc
xor
mov
xchg
xor
pop
sbb
mov
dec
xlat
dec
xchg
pop
sub
mov
or
ds
push
std
xchg
outsl
dec
cmp
pop
and
fidivrl
in
pop
loop
icebp
movsl
outsb
push
mov
cmp
inc
xlat
inc
jae
les
mov
push
icebp
cmpsb
add
das
lret
or
in
cld
iret
add
mov
gs
fmuls
rcr
sbb
mov
mov
pop
arpl
cs
data16
xor
xchg
fnstsw
add
cltd
sbb
lods
cmpsl
cmpsl
xchg
pop
dec
jnp
adc
pop
into
fcompp
push
sub
mov
hlt
sub
lahf
mov
xlat
sub
push
test
cmpsl
inc
pop
fstpt
jae
sbb
popf
mov
lret
insb
mov
jb
loope
cwtl
dec
scas
jae
dec
pop
lea
das
jne
push
pop
mov
adc
bound
cmp
inc
mov
sbb
jo
mov
or
outsb
les
ret
sbb
xchg
daa
frstor
nop
push
aaa
pop
cmp
test
pop
and
cltd
incb
stc
xchg
mov
dec
jae
outsb
cmp
addr16
out
es
roll
fildl
fstp
insl
mov
std
sbb
lret
xchg
xchg
mov
xchg
or
lock
cmp
icebp
stos
shlb
aad
xor
push
out
aas
jns
dec
repnz
movsb
scas
pop
or
out
add
mov
dec
jne
adc
push
daa
aam
mov
or
out
loopne
and
mov
xchg
mov
or
inc
lods
lock
sub
xchg
cmp
and
adc
fs
mov
push
scas
push
fwait
clc
adc
int3
clc
xchg
pop
movzwl
pop
xor
dec
add
loopne
rorw
or
imul
mov
aad
das
stos
test
ret
sahf
push
hlt
xchg
lock
mov
shr
jp
imul
mov
fisubs
lahf
pop
stos
into
cld
pop
pop
loop
dec
xor
mov
jle
mov
test
or
xor
adc
sbb
fdivr
fldl
imul
repz
rclb
insb
scas
jp,pn
out
incb
in
inc
mov
aaa
dec
roll
popf
cltd
roll
xor
call
fwait
cld
adcl
mov
shr
jbe
lods
jb
inc
clc
xchg
adcl
clc
pop
jg
push
sarb
icebp
push
arpl
fistps
sub
fldz
insb
jnp
adc
ret
adc
inc
pop
push
aam
jo
fistps
add
and
dec
cmp
std
inc
jl
mov
mov
enter
sbb
jle
test
push
mov
iret
fistpl
pop
aad
ljmp
push
movsl
mov
cmp
in
and
jno
jmp
pushf
shrb
int
lea
xor
pop
das
and
push
inc
sbb
hlt
icebp
mov
adc
movsb
fwait
push
cltd
out
sbb
sbb
xor
sbb
lock
loopne
std
sbb
mov
jg
mov
sub
inc
stc
mov
mov
lea
jp
fs
dec
fsubl
addb
push
inc
add
cld
mov
mov
jle
adc
test
mov
fsubrs
sbb
lahf
mov
or
insb
cmp
mov
test
sbb
clc
jmp
inc
adc
pop
adc
mov
cltd
mov
ja
xor
adc
in
add
stc
enter
lock
leave
jns
lock
nop
dec
sbb
mov
cmp
cmp
push
decl
faddl
pop
mov
inc
inc
cmp
push
aas
pop
repnz
cmp
mov
in
xchg
mov
xchg
cmp
mov
in
lock
sub
pop
cmp
fisubrs
inc
shl
dec
in
dec
mov
sbb
movsb
push
and
test
lock
pop
xlat
je
push
inc
cmp
ficompl
out
int
mov
fsubp
cmpb
cmp
pop
sarb
adc
ret
pop
inc
mov
rcrb
jae
icebp
add
sub
neg
sub
xchg
pop
dec
rcll
mov
stos
insb
inc
inc
mov
test
mov
xchg
ja
lods
push
cmp
add
jne
iret
cwtl
mov
cmp
xor
int
and
sbb
fwait
inc
sbb
cld
push
cmp
imul
adc
insl
incb
pop
pop
dec
lds
in
mov
jge
aad
cwtl
mov
sbb
mov
repz
aam
xor
in
lea
mov
jnp
xor
pushf
mov
mov
scas
js
int3
sub
or
and
shlb
aas
pop
sbb
push
pop
stc
pop
enter
add
jae
jecxz
mov
mov
jne
lea
mov
inc
push
in
pop
loope
in
lods
lods
lock
add
dec
iret
mov
movsl
pop
pop
in
test
pop
pop
and
dec
in
adc
push
dec
add
cld
cmpsl
mov
test
or
or
call
sbb
mov
jmp
fcompl
pop
mov
or
mov
bound
scas
movsl
sti
mov
out
xchg
lock
cld
lcall
jno
cmpsb
cmp
dec
xchg
gs
test
lock
mov
and
sub
xor
dec
arpl
aam
inc
sbb
in
enter
xchg
push
push
out
jne
sti
pop
loopne
imul
and
aam
mov
or
outsb
add
test
sbb
push
mov
sub
sbb
sub
lcall
pop
pop
shrb
mov
mov
jmp
pop
inc
sbb
mul
mov
dec
cs
sub
xchg
mov
rclb
xchg
bound
jp
cmp
add
std
and
mov
scas
dec
scas
cmp
cmp
test
cmp
iret
out
xchg
sbb
cmp
cwtl
mov
repnz
loop
jecxz
movsl
mov
cmp
sbb
push
push
fcomps
mov
shlb
cmp
mov
test
inc
jne
inc
out
aad
faddl
dec
mov
mov
cmp
push
mov
inc
cmpl
mov
mov
das
push
call
jae
pop
daa
div
in
shrb
out
cld
jne
xor
jle
sbb
mov
imul
nop
jle
mov
ja
jo
cltd
sbb
mov
pop
mov
mul
repnz
fs
mov
sbb
cltd
push
sbb
or
mov
adc
inc
mov
push
pop
stc
ss
ljmp
xor
and
sub
nop
pop
mov
add
loopne
lea
or
pushl
pop
pop
inc
sbb
mov
push
pop
popl
pop
push
in
call
aad
out
pop
out
or
icebp
fdivrl
ret
add
pop
js
movsb
mov
pop
inc
push
jg
and
pop
mov
rcr
dec
popf
icebp
pop
mov
movsl
sub
js
nop
inc
inc
push
xor
hlt
scas
pop
addb
jmp
pop
in
mov
movsb
pop
dec
add
or
dec
clc
xchg
mov
mov
pop
lods
mov
test
aaa
stos
leave
cmpsl
jae
daa
push
fdivs
ss
mov
test
dec
insb
stos
cmp
popf
jb
movaps
jl
sbb
sbb
clc
stos
sub
and
cltd
mov
test
testl
cmp
inc
out
enter
shl
sahf
jno
out
sbb
pop
mov
sbb
in
mov
push
cld
inc
lock
pop
xchg
aam
into
adc
cmp
jbe
cmp
mov
jnp
sub
vcvtsi2ssl
mov
pop
fdivr
sbb
sti
addr16
mov
jb
push
fbld
dec
pop
push
pushf
stos
add
cmp
dec
cltd
jnp
out
add
iret
mov
mov
aas
pop
cmpsb
push
mov
xchg
and
cltd
pop
mov
sbb
sbb
mov
cmc
lods
push
mov
pop
cmpsl
sbb
mov
push
mov
inc
mov
cltd
sub
push
and
jmp
sub
dec
sti
jge
nop
cmp
adc
mov
sub
pop
jbe
pop
mov
mov
pop
inc
sub
popa
mov
cmp
scas
stc
icebp
jno
sbb
stos
xlat
sub
push
in
or
jbe
mov
add
pop
es
push
mov
jae
push
int
xlat
mov
rcrb
inc
ret
imul
rcrl
out
mov
cmp
test
xor
cmp
lret
jmp
cld
pushf
mov
out
aam
sub
popw
inc
jnp,pt
inc
dec
pop
pop
or
fcomi
push
pop
stos
add
jge
insl
out
das
cmp
dec
lods
rcrl
push
rcrb
into
jb
dec
dec
ret
jbe
push
pop
add
arpl
pop
lock
enter
jo
or
test
add
test
mov
mov
jp
sub
pop
stc
sbb
sub
mov
dec
insb
aad
push
out
sbbb
fprem
arpl
mov
sbb
cmc
pop
jo
mov
pop
adc
dec
and
unpcklps
clc
and
pop
xor
or
mov
mov
or
or
aam
xor
addr16
outsb
pop
cmp
mov
dec
fidivrs
and
loopne
scas
pop
negl
pop
mov
adc
pop
push
mov
test
out
jnp
jle
adc
adc
sbb
imul
or
cmp
loop
stc
inc
pop
xchg
inc
fcom
cmpl
add
test
jbe
xchg
sar
pop
or
ljmp
sahf
add
sarb
mov
sbb
dec
shrb
adc
jb
jno
js
lcall
in
mov
call
cmp
xor
in
clc
add
jae
pushw
cs
and
jmp
sbb
cmp
fisubrs
pop
flds
push
cmp
popa
push
aam
push
idivl
ror
xchg
mov
addl
pop
outsl
mov
fcmovb
jns
ss
pop
out
xchg
sbb
test
mov
addr16
int
jp
fisubrs
or
ljmp
inc
push
out
je
popf
pop
std
or
jnp
adc
lods
cmp
scas
cmp
orb
fs
push
into
mov
and
loop
mov
nop
xchg
jae
push
sub
dec
pop
or
cmp
mov
adc
fs
insl
jnp
jmp
push
loope
call
sub
adc
test
fisubl
and
scas
mov
pop
stc
and
or
inc
je
int3
jnp
dec
aam
mov
sti
leave
push
pusha
sbb
add
mov
pop
cmp
push
ljmp
fstp
xor
lahf
push
lods
or
ret
pop
adcb
dec
pop
add
iret
sub
faddl
push
pop
ret
mov
sbb
test
pop
iret
and
jne
fiaddl
pop
imul
andb
popa
jo
push
mov
push
rclb
sbb
jp
add
xchg
pushf
in
scas
add
out
sbb
xchg
xchg
pop
mov
fcoml
aaa
jle
mov
jmp
push
pop
repz
and
ljmp
data16
sub
ja
push
or
dec
lods
push
test
cmp
icebp
xchg
mov
fisubrl
fisubrs
in
xchg
pop
jle
jmp
insl
sbb
adc
cmp
in
filds
pop
ret
jge
iret
pop
mov
std
jne
sbb
fs
xchg
imul
movsb
dec
pushf
adc
mov
pop
push
sarb
pop
jae
xor
adc
push
pop
pop
inc
fwait
stos
pop
rcrb
or
xchg
pop
jg
mov
lock
mov
ljmp
bound
jmp
or
clc
je
dec
sub
aad
cs
es
rclb
pop
sarb
jbe
pop
cmc
pop
cmp
mov
pushf
ljmp
ljmp
adc
mov
lret
jb
pop
jmp
movsl
out
dec
jmp
mov
xchg
cmpsb
and
sahf
ljmp
pop
jbe,pn
es
pop
filds
jmp
jle
mov
mov
cmp
int
push
inc
and
popa
push
mov
jmp
repz
imul
mov
fnstcw
insb
adc
inc
jb
lret
test
arpl
jecxz
or
std
fs
imul
sub
jl
in
push
cmp
das
dec
aam
pop
test
jo
jne
dec
or
push
icebp
roll
je
lock
sbb
cmp
icebp
imul
sbb
mov
leave
add
cmp
mov
mov
in
jle
mov
add
mov
and
ret
push
jno
fldl
dec
jbe
push
sbbb
scas
xchg
mov
jbe
mov
pop
imul
push
push
pop
in
mov
push
pop
rcl
lret
sub
je
pop
dec
imul
and
or
lds
lcall
xchg
jne
fldenv
pop
xlat
int3
pop
lock
ljmp
dec
loop
inc
and
or
inc
mov
mov
adc
shll
sar
push
mov
cmp
addl
lret
hlt
mov
jg
xchg
pop
xor
sub
pop
add
pop
orb
mov
xchg
mov
flds
xchg
xchg
sbb
jne
cmp
jge
pop
mov
fisubl
pop
mov
fistpl
std
out
pop
or
push
mov
push
lret
dec
mov
jecxz
ljmp
inc
outsl
sbb
sbbl
jbe
adc
mov
dec
into
adc
sbb
and
pop
js
mov
jl
adc
aam
rcll
in
sub
stc
jle
lret
in
repnz
sbb
scas
push
cwtl
mov
je
xchg
inc
ja
xchg
xchg
mov
and
jno
popf
or
sbb
int3
out
jnp
aam
cmp
mov
push
ret
fnstcw
jbe
pop
push
shl
roll
test
jecxz
pop
icebp
xchg
sbb
add
lods
movsb
mov
pop
sub
jb
dec
mov
lret
sub
and
sahf
jno
add
sti
cld
jecxz
sub
jl
mov
or
mov
decl
mov
jo
sbb
imul
in
or
out
dec
mov
push
pop
inc
pop
inc
and
mov
sub
pusha
jecxz
into
or
aam
xor
dec
push
pop
mov
negl
pop
loopne
cmp
add
ss
pop
xchg
jns
jne
nop
lcall
adc
call
mov
repnz
in
mov
and
sbb
out
pop
jno
fs
pop
cmp
mov
lahf
inc
sbb
ror
inc
push
popa
sub
scas
jge
pop
pop
mov
mov
jbe
andb
jmp
icebp
mov
bound
outsb
push
push
dec
or
out
test
mov
pop
mov
cmpl
call
xchg
std
mov
data16
pop
pop
test
and
sbb
inc
xor
popa
cmp
add
pop
xor
shlb
in
leave
pcmpgtb
pop
mov
inc
or
dec
sub
outsl
mov
mov
stc
cmc
vpunpckhdq
sbb
rcl
data16
out
push
dec
xor
add
adc
lods
subl
push
xor
jo
fcompl
aad
sbb
and
push
cmp
insl
pop
sbb
cmp
notl
lea
pop
push
sub
inc
push
or
add
arpl
incl
or
inc
mov
fisubrs
jge
mov
mov
ret
lock
or
into
dec
pop
and
lea
pop
xor
movsl
inc
xchg
or
inc
mov
cwtl
cmp
pop
jns
jmp
js
imul
in
xchg
dec
add
sbb
add
pop
scas
ja
lods
mov
push
in
mov
inc
pop
int
mov
aas
xor
cmpsl
std
pop
adc
je
sub
dec
icebp
or
and
push
nop
cmp
pop
push
mov
roll
cwtl
mov
in
pop
sub
inc
aam
push
mov
jb
pop
jno
pop
jae
pop
mov
test
sahf
dec
ds
mov
clc
icebp
outsb
xchg
cmp
dec
cmp
leave
dec
loope
and
sub
mov
rcll
mov
cmp
in
cmp
cmp
lret
mov
movsb
mov
jae
dec
insl
out
fs
push
outsb
das
in
ljmp
cmpsl
pop
mov
daa
jnp
pop
or
insl
lcall
adc
pop
je
outsl
xor
dec
subl
pop
test
sbb
inc
sbb
iret
stos
mov
or
test
stc
xor
push
lcall
inc
xchg
cmpsl
scas
mov
bound
int
mov
rorl
insl
mov
mov
imul
in
fiadds
scas
fnsave
mov
stc
cmp
jae
mov
adc
or
jo
jnp
adc
add
or
xchg
into
xchg
or
addb
cmp
cltd
sub
add
sub
enter
popa
hlt
pop
jns
inc
sarb
mov
inc
rcll
ljmp
xor
dec
sbb
adc
inc
lock
jecxz
or
es
enter
lods
mov
or
outsl
mov
pop
xchg
fstpt
scas
dec
into
xlat
rolb
dec
jge
out
pop
sbb
push
out
cmp
jg
in
mov
xchg
rorb
aas
jne
adc
sub
jo
mov
adc
sbb
loop
adc
je
jbe
or
mov
adcb
mov
rcl
into
jge
imul
aam
jae
mov
sarl
xor
push
mov
pop
xchg
cmp
incl
testb
pop
cmp
das
loope
in
push
cmp
inc
inc
mov
mov
add
xor
adc
enter
aas
pop
mov
cmp
adc
out
add
sub
pop
add
lock
pusha
mov
mov
cli
fdivs
mov
sarb
cwtl
cmp
sbb
jnp
mov
test
push
int
inc
lea
push
js
std
jecxz
mov
cli
sub
scas
int
int3
inc
add
cmc
add
sbb
mov
idiv
mov
and
movntps
adc
pop
adc
cmp
in
cmp
mov
push
pop
lret
cmpsl
xor
push
pop
iret
mov
addl
cltd
inc
sbb
mov
movsb
jne
add
jge
insb
and
pop
sti
stc
scas
lret
or
mov
cmpb
jbe
jne
mov
fcoml
gs
orl
pop
fwait
in
jo
setae
xchg
test
mov
sub
fdivrl
push
jl
sahf
pushl
pop
mov
mov
inc
les
xor
adc
out
sub
pop
mov
ljmp
sbb
cmp
aad
sub
cmpl
xchg
out
ret
shlb
add
push
xlat
adc
dec
sbb
mov
test
pop
push
stos
push
push
mov
mov
jae
add
mov
stos
pop
cld
mov
inc
lret
inc
in
ret
pop
stc
lock
jmp
ds
enter
aad
leave
push
jno
push
mov
add
repz
jmp
enter
sbb
lcall
jne
ljmp
mov
shll
fisttps
lods
and
arpl
add
and
pop
popf
sub
add
rolb
push
xor
pop
outsb
mov
pop
pop
or
subl
or
adc
pop
stos
dec
mov
mov
pusha
ljmp
int
cmp
mov
push
push
pop
push
inc
fisttpll
fldt
mov
daa
dec
popf
push
repz
sub
loopne
emms
fidivrs
sub
xchg
imull
sbb
sub
dec
test
xchg
inc
pop
add
insl
test
imul
mov
fcomp
cmp
add
inc
pop
fisttpll
push
inc
lcall
movsb
pop
sub
or
or
dec
sub
pop
leave
push
repz
pusha
mov
cmp
out
pop
mov
loop
mov
xor
cmp
inc
jb
pop
cmp
xchg
ficompl
add
divb
pop
mov
scas
aad
sub
push
jae
sbb
push
pop
jecxz
fdivl
repz
dec
mov
sbb
xlat
inc
add
cld
add
mov
test
add
xor
cltd
push
clc
sbb
push
insb
pop
dec
in
mov
ret
lds
fcompl
data16
mov
dec
push
pop
add
roll
mov
mov
outsb
cmp
iret
xchg
ret
rorl
inc
xor
je
xchg
mov
dec
push
idivl
pop
adc
stos
pop
fidivs
or
inc
cmp
push
sbb
dec
imul
mulb
jae
in
pop
fadds
test
jecxz
xor
ja
push
cmp
adc
popa
sub
adc
push
cmp
imul
icebp
xchg
mov
cltd
dec
fisubs
jp
rolb
jns
lcall
fidivs
xchg
pop
sub
jecxz
lret
pop
cwtl
mov
mov
pop
dec
xchg
cmpsb
subb
pop
or
xor
das
out
pop
fcmovnb
xor
pop
cmp
pop
add
aam
pop
ss
pop
call
jo
pop
sbb
scas
test
sub
loope
arpl
sbb
lret
test
fiadds
jb
mov
inc
cmpsb
scas
inc
sbb
out
je
sti
cmpsl
popf
aas
xor
inc
inc
cld
int3
pop
add
adc
cmp
or
pop
cs
add
mov
and
arpl
pop
push
cld
fstps
in
out
mov
mov
incb
push
sub
jb
addr16
mov
mov
mov
or
or
daa
pop
jbe
roll
sbb
icebp
call
daa
leave
xchg
out
pop
test
lea
sbb
jl
inc
es
cmc
cmp
fldcw
mov
shl
hlt
icebp
sub
insb
ret
xchg
adcb
push
xchg
pop
ss
notb
in
js
pop
inc
push
ljmp
sarb
fcompl
pop
stos
repnz
fisttpll
jno
jb
shll
aas
mov
push
aaa
inc
push
inc
cmovp
push
std
add
jge
pop
dec
and
stc
pop
leave
jnp
mov
pop
cwtl
frstor
pop
push
mov
das
fdivrl
out
aad
into
mov
pop
inc
jg
sub
pop
sub
cmpsl
add
pusha
ja
pop
fildl
fimuls
mov
adc
aam
mov
jo
pop
pop
lea
in
jmp
add
push
in
mov
test
int3
mov
popf
cmpsl
or
inc
mov
adc
xchg
insb
pop
idiv
jb
lret
and
jmp
cmp
mov
jmp
inc
pop
out
call
cmc
fucomp
add
cmpsb
pop
clc
jle
fs
adc
inc
cmp
loop
adc
jnp
xchg
mov
js
mov
pop
in
inc
mov
cmp
xor
pop
ja
cmpsl
cmp
rorl
je
pop
sbb
aaa
pop
mov
popw
shl
mov
push
pop
movsb
int
push
sbb
mov
cmp
pop
dec
inc
loopne
in
mov
popf
push
sbb
fists
jb
adc
lea
mov
cmp
int3
cmp
out
hlt
stc
in
push
and
xlat
ficomps
rol
rorb
add
sti
xlat
cwtl
inc
add
iret
leave
xor
push
pop
movsl
fldl
xor
or
pop
ret
pop
bound
push
and
pop
das
sar
pushl
xchg
sti
pop
inc
mov
popf
adc
xchg
sub
int
lahf
xor
dec
loopne
mov
push
iret
lret
add
cmc
push
test
cmp
mov
inc
mov
stos
cmpl
mov
pop
dec
mov
or
pop
mov
nop
fcompl
aam
in
pop
lods
sbb
out
movaps
adc
cmp
pop
lret
push
push
or
insl
inc
pop
push
orl
pop
loope
cmp
in
pop
inc
dec
scas
lret
cmp
jne
nop
ret
or
rol
add
jno
repz
stos
jl
bound
enter
cmp
or
pop
je
inc
mov
pop
pop
sub
cmpb
pop
mov
scas
test
dec
dec
xlat
jp
fidivs
pop
movsb
cmp
dec
push
sbb
ljmp
mov
outsb
jmp
sbb
int3
mov
mov
clc
xor
push
pop
cmc
add
sbb
push
addb
lcall
add
xor
xchg
pop
xchg
xchg
bound
in
mov
mov
fisttpll
hlt
xorb
mov
fmul
pop
mov
pop
xor
mov
pop
jne
xchg
outsl
push
dec
js
and
sub
cld
or
jle
bound
mov
daa
inc
out
addl
mov
jge
stos
fidivs
and
jne
mov
inc
add
adc
jl
movsb
sub
push
mov
in
mov
test
mov
dec
out
sbb
mov
cli
mov
int3
ret
sahf
jp
lret
and
cmp
lret
xchg
mov
cmpb
xchg
add
arpl
cld
push
aam
sbb
hlt
cmp
jl
cmpb
cmpsb
addr16
jbe
add
ja
xchg
out
and
mov
in
jg
lea
or
popa
nop
scas
add
xchg
shl
cli
dec
pop
std
xor
fisubrs
sahf
add
mov
dec
cltd
ds
mov
nop
stc
scas
jl
mov
pop
sub
mov
ja
add
stos
out
rolb
clc
cmp
pop
jg
leave
fdivrp
loop
sbb
cmp
in
clc
jmp
add
pop
and
fcmovnbe
decl
scas
into
pop
adc
outsl
scas
dec
xor
lds
push
ljmp
in
cltd
mov
xchg
pop
mov
xchg
adc
pop
ret
mov
pop
imul
pop
pop
sahf
mov
push
pop
pop
repnz
cmpsb
jne
jmp
icebp
jle
int3
xor
pop
in
mov
outsb
xor
inc
pusha
jecxz
and
dec
jecxz
pop
aam
jl
outsl
adc
cmp
dec
pop
mov
mov
call
jmp
jno
or
add
clc
jno
mov
sbb
xor
dec
rcr
cmp
stc
dec
pop
scas
mov
jae
mov
sub
sbb
or
popf
lret
jb
arpl
mov
jmp
adc
scas
inc
push
pop
rolb
sbbb
scas
pop
lds
sti
push
mov
mov
and
fiadds
imul
dec
pop
pop
int
cmpb
sti
pop
inc
push
sbb
syscall
xor
scas
mov
xchg
xchg
dec
lods
roll
push
pop
xchg
jle
pop
fdivr
subl
and
stos
fstl
fcomip
out
cmp
cmp
jecxz
push
sbb
gs
cld
mov
stos
cmpsl
repz
cmp
push
lret
nop
xor
shrb
aas
sahf
daa
mov
lcall
jmp
inc
mov
jmp
sbb
int3
pop
jbe
es
or
pop
dec
mov
mov
leave
mov
dec
out
jle
shrb
sub
pop
and
push
and
inc
inc
push
push
and
pop
cmp
inc
sub
rorb
incb
mov
rcll
lock
add
leave
shr
popf
cmp
jmp
pop
xchg
jno
mov
pop
shr
dec
sar
sti
sbb
mov
adcl
lcall
pop
outsb
push
aam
sub
pop
mov
jne
mov
fcompl
cmp
push
shlb
sbb
pop
stos
ret
sbb
mov
xorb
pop
aam
push
dec
popa
pusha
pop
xlat
pop
pushf
push
pop
neg
in
push
pop
sub
mov
mov
pop
pop
mov
out
xor
decl
in
mov
xchg
mov
pushw
inc
and
aaa
dec
xchg
cmp
pop
jp
or
add
sbb
addr16
in
xchg
push
lret
dec
inc
add
movsl
rorb
rdtsc
pop
in
cmp
arpl
sbb
add
dec
push
cwtl
mov
jo
ljmp
xor
pop
jne
lret
mov
imul
mov
adc
js
and
jae
sti
sarl
out
icebp
jne
mov
inc
cmp
test
cmp
xchg
dec
or
or
inc
cs
or
lret
dec
pop
sub
pop
test
mov
in
aam
push
pop
mov
mov
lret
out
sti
stc
add
cmp
out
sub
xor
fistpl
pop
divb
fs
popa
lcall
rcrb
jg
inc
pop
jnp
mov
cmc
ljmp
jbe
rcrb
xchg
jp
les
roll
or
inc
and
sbb
sub
sub
adc
in
cmp
nop
loop
mov
es
or
pop
orl
xchg
les
push
pop
pop
xchg
mov
sbb
mov
shrl
dec
adc
cmpsl
dec
dec
out
loopne
pop
enter
dec
xchg
cs
pop
lods
sarl
sbb
ja
hlt
adc
jle
jne
es
ljmp
push
fldcw
or
es
lea
lods
add
stos
inc
add
test
jmp
jl
insb
shlb
mov
iret
inc
clc
roll
push
sbb
or
adc
pop
add
popa
push
pop
push
mov
popf
lcall
psllw
stos
lods
shl
in
pop
and
sbbl
cmp
adc
mov
test
jmp
or
in
sub
adcb
inc
pop
mov
add
mov
xchg
imul
loop
pop
jo
ja
lods
dec
pop
xchg
add
mov
jg
repz
push
repz
cmp
leave
mov
rolb
test
mov
mov
sbb
dec
pop
inc
pop
fldl
jmp
pop
jne
stos
xor
enter
push
mov
cld
mov
or
call
and
cmp
sarb
jmp
movsl
or
or
popf
and
add
dec
insl
push
jl
xchg
mov
insb
jnp
fbstp
xchg
mov
mov
pop
mov
push
inc
push
add
push
xlat
int3
xchg
aaa
out
cmpsl
rcl
mov
adc
lock
repz
fwait
leave
pop
cmp
popf
mov
ror
loope
out
mov
loop
leave
aaa
sbb
sbb
test
xor
push
enter
aam
imul
pop
pop
out
mov
int
add
add
dec
std
negb
or
jbe
test
das
sub
in
or
mov
shrl
cwtl
outsl
cmp
pop
cmpsb
ljmp
jcxz
fisubl
imul
incb
std
pop
sub
or
dec
roll
mov
fmull
add
dec
sbb
jle
push
cmp
pop
jl
test
fst
push
or
mov
fs
arpl
leave
pushl
adc
and
adc
fcoml
xchg
sar
cmp
pop
ljmp
fiadds
aam
dec
mov
push
fiaddl
cltd
ljmp
pop
into
cmp
mov
shlb
mov
xor
data16
push
mov
inc
pop
or
or
inc
mov
pop
bnd
sbb
xor
std
into
pop
inc
gs
adc
and
cmp
stos
sbb
adc
dec
dec
shlb
je
mov
fcmovnb
addb
dec
test
div
pop
mov
sbb
mov
and
push
test
leave
cwtl
jnp
jno
mov
lds
imul
enter
xor
dec
cs
in
ljmp
jbe
or
std
push
cmpxchg
fstp
adc
xchg
aas
lea
mov
lods
outsb
adc
add
dec
pop
fidivs
test
mov
add
es
push
pop
xchg
xor
pop
mov
add
cmp
cmp
jmp
or
inc
mov
out
movsl
das
dec
pushf
inc
pop
ljmp
imul
inc
xor
aas
idivb
lahf
fisubrs
fmuls
out
in
adc
aad
xchg
or
sbb
xchg
stos
push
jge
add
adc
loope
mov
mov
icebp
xchg
jne
fisubl
pop
cmp
fdivp
pop
loope
or
or
dec
pop
xor
ja
mov
sahf
js
pop
mov
jae
add
dec
sub
imul
pop
add
dec
xchg
xchg
test
jns
jns
jb
lret
andl
cmpsb
xchg
je
mov
cld
jae
jg
xor
das
movsb
push
idivl
cmp
xchg
hlt
push
mov
sbb
or
mov
out
arpl
in
mov
cmp
daa
addr16
xor
pop
jne
int3
movsb
xchg
mov
pop
sbb
js
mov
aam
lds
sbb
inc
hlt
cmp
js
test
pop
mov
out
or
pop
decl
sub
sbb
pop
fistpl
std
lods
push
into
pop
in
popf
mov
fidivs
negl
xchg
mov
inc
cmp
loope
cmp
das
cmp
movsb
sbb
pop
mov
sub
outsl
out
lods
pop
cld
mov
sbb
pop
mov
jo
pop
aam
pop
ret
mov
cld
push
clc
pop
incl
jae
sub
decb
push
sub
fisubs
jae
mov
ljmp
xchg
xchg
cmp
test
mov
int3
pop
pop
and
adc
in
aam
mov
fucomip
cmp
and
sub
out
jnp
mov
jb
sbb
fistpl
ljmp
xchg
insl
stos
xchg
bound
sbb
sbb
lcall
syscall
addl
scas
cmp
mov
call
sbb
mov
les
mov
mov
fs
or
sbb
add
mov
clc
enter
cld
sub
clc
rcr
jge
cmpsb
sub
push
adc
mov
mov
arpl
jg
addl
rclb
add
push
cmpsl
jnp
pop
sbb
add
dec
fidivl
ja
ret
xchg
popa
ja
mov
xor
mov
cltd
add
in
ljmp
cmp
adcl
mov
or
dec
rcll
push
jne
jmp
out
ja
fidivrs
adc
pslld
fcmovnu
push
push
jecxz
lock
pop
int
inc
xchg
sub
inc
dec
aas
out
cmpl
xor
shrb
pop
mov
jne
jnp
pusha
mov
or
popa
call
jge
pop
pop
mov
fdivrs
jp
add
cmp
mov
jl
or
xor
lahf
xchg
jnp
pop
and
xchg
push
sbbl
cmp
push
ja
mov
dec
dec
mov
icebp
cmp
cltd
jle
pop
mov
or
data16
flds
xchg
mov
xchg
lcall
ret
inc
jl
pop
out
in
or
add
pop
pop
loopne
sub
pop
pop
ja
cmp
sbb
cmc
shlb
lods
xchg
aas
fistl
pop
pop
jmp
dec
pop
adc
sub
pusha
cwtl
or
in
jae
xchg
int3
mov
fstpt
lds
dec
cmp
int3
fcoms
sahf
sbb
pop
add
into
push
push
icebp
pop
out
jbe
push
iret
mov
pop
push
dec
dec
push
inc
mov
movsb
and
arpl
xor
das
mov
pop
out
or
push
test
add
jae
xor
sbbl
or
pop
inc
sub
mov
and
pop
sub
mov
ljmp
xchg
pop
movsl
dec
cs
pop
jne
aam
push
xchg
mov
ret
pop
loop
push
mov
add
cmp
push
pop
mov
jnp
push
pop
inc
mov
sbb
test
sbb
aaa
cmp
adc
lods
into
or
mov
add
cmc
test
outsl
pop
pop
mov
ss
sbb
xchg
dec
mov
pop
xchg
cmp
popf
sbb
movsl
pop
in
jnp
jno
loope
pop
aad
sbb
xor
mov
in
inc
xchg
or
cwtl
pop
int
into
cld
cmpsl
and
jbe
popa
and
iret
pop
bound
js
xchg
adcb
outsl
pop
insl
loop
pop
lahf
mov
mov
push
gs
test
pop
rcl
sti
pushf
push
xchg
fwait
sbb
mov
js
out
div
xchg
movl
addr16
pop
cwtl
xor
dec
inc
push
mov
pop
xchg
call
ss
pop
push
int3
push
mov
imul
mov
pop
outsb
cwtl
maxps
or
imul
push
xchg
or
fildl
xor
jb,pt
pop
push
mov
lods
add
jmp
call
push
aam
dec
roll
and
js
test
pop
lcall
pop
mov
movsb
xchg
xchg
js
pop
popa
xlat
pop
jnp
in
out
outsl
and
ds
sbb
rcrl
out
mov
orl
mov
pop
jne
mov
cmp
jbe
test
cmp
or
cs
ret
cmp
imul
in
mov
push
or
jae
in
push
or
cltd
and
addr16
insl
fs
push
imul
rcl
dec
pop
data16
inc
pop
mov
sub
cwtl
push
pop
mov
scas
sbb
mov
pop
sub
add
mov
sbb
pop
pop
popf
jns
sbb
mov
test
cmpsb
cmc
enter
hlt
pushf
mov
add
cld
push
xorl
add
inc
pop
repz
cmp
pop
aad
mov
pop
dec
inc
jne
ret
pop
loopne
cmp
lea
subb
inc
fwait
mov
inc
cmpsb
ja
adc
outsl
lock
add
aam
test
mov
clc
xchg
stos
sbb
cld
or
xor
aas
fimuls
cmpb
push
inc
sbb
push
pop
in
bound
adc
jbe
loope
dec
or
cmpb
mov
jae
xchg
push
mov
sbb
jecxz
lahf
and
pop
inc
mov
jo
sub
xlat
push
arpl
js
call
fistpl
dec
sub
jae
and
andb
mull
mov
mov
lock
jb
out
dec
xchg
mov
movsb
lret
or
ja
push
xor
out
rol
dec
pop
mov
scas
mov
in
cmpb
sarl
flds
shrb
rcrl
mov
clc
mov
and
pop
pop
std
adc
mov
mov
pop
test
inc
cmp
pusha
pop
sbb
push
mov
or
dec
iret
xchg
cmpsb
adc
subb
xchg
ljmp
xor
sbb
outsl
lds
rorb
mov
push
push
repnz
aad
add
icebp
std
mov
jp
pop
nop
es
loopne
dec
stos
jae
das
aad
lret
or
push
dec
sub
scas
inc
js
pop
jb
xor
xchg
test
lret
add
sbb
mov
pop
notl
sbb
cmp
mov
mov
mov
ds
mov
xor
ret
in
cmp
clc
sub
rcrb
test
cmp
cltd
mov
pop
ret
push
or
inc
jg
outsl
pusha
add
xchg
mov
lahf
iret
xlat
adc
mov
or
fisttpll
clc
or
roll
faddp
fcomps
and
adc
mov
xor
mov
push
dec
mov
sbb
lea
inc
push
daa
call
ret
aam
cmp
stos
std
and
jae
ljmp
loop
pop
stc
and
in
sti
pop
mov
add
xchg
pop
fdivrl
jnp
mov
popf
pop
xorl
push
movsl
lods
lret
inc
cmp
push
in
push
lds
repnz
lods
xchg
lret
jb
mov
jg
xchg
cmp
clc
xchg
sbb
dec
cmp
lods
orl
test
mov
mov
lret
pop
shl
add
mov
and
jp
xchg
inc
xor
enter
cmpb
enter
adc
add
les
aad
mov
fldcw
cmp
repnz
and
jae
add
mov
sbb
adc
bound
insb
mov
fistl
mov
hlt
xor
mov
pop
adcl
scas
and
jp
ljmp
pop
icebp
popf
into
ffree
push
pop
dec
je
and
leave
scas
pop
cmpb
add
push
lock
pop
sahf
pushl
jnp
sbb
in
clc
push
std
xchg
je
jmp
add
pop
add
loopne
fwait
pop
fdivs
xor
add
aam
jo
pop
sbb
testb
mov
ljmp
addb
rorb
jne
cmp
push
shlb
sahf
pop
mov
push
int3
or
sub
pop
sub
xor
enter
jge
sub
push
xchg
aad
sbb
adc
push
mov
sti
icebp
lock
enter
xor
gs
sbb
out
sbb
mov
jns
jmp
mov
imul
ljmp
or
ja
cmp
ret
push
int
cmp
cld
mov
loop
pop
fstl
arpl
pop
inc
mov
outsb
in
mov
push
push
mov
cmp
push
pop
mov
and
fists
in
outsl
es
mov
push
and
pop
or
mov
in
je
xchg
outsl
pop
dec
add
aam
adc
enter
cltd
jns
jecxz
and
add
push
pushw
push
mov
rcl
sbbl
test
sub
test
pop
pop
or
push
fwait
mov
int
ffree
in
mov
pop
ds
or
jg
ljmp
cld
insl
sti
pop
pop
jb
dec
xchg
int3
inc
jno
rcrl
ljmp
pushw
inc
hlt
pop
sub
mov
cmp
inc
mov
pop
push
mov
fsubrl
add
cmp
adc
cld
cmp
scas
cmpsb
into
sub
mov
stc
pop
hlt
into
loopne
adc
and
add
sbb
jns
sti
mov
dec
xchg
sbb
push
cs
cmpsb
sbb
mov
call
in
xor
cmp
arpl
pop
push
pop
stc
and
mov
aad
push
xor
mov
inc
pop
fnsave
pop
sahf
push
xor
push
cmp
inc
lret
sbb
bnd
dec
icebp
add
sub
push
push
in
or
iret
xchg
addr16
sbb
call
or
push
xchg
pop
int3
push
icebp
pop
jne
jl
xor
leave
mov
push
and
pop
mov
js
lock
cmpsl
push
lds
out
rcr
jmp
mov
cmp
push
mov
xchg
popf
sbbl
xor
ja
in
dec
pop
cmc
push
idiv
out
xchg
in
popl
sub
cltd
jp
pop
pop
in
ljmp
imul
mov
ret
xchg
pop
roll
into
xchg
adc
mov
testl
in
push
pop
pop
and
mov
adc
andl
sub
adc
pop
scas
out
pop
pop
jp
repnz
addr16
xlat
in
cmp
jecxz
pop
ficompl
jns
scas
in
sub
xor
fdivrp
xchg
pop
test
xor
in
je
stos
jnp
fiadds
rcl
iret
or
insb
push
or
test
lcall
das
in
sub
pop
in
stc
mov
jecxz
and
cld
add
adc
test
pop
sub
mov
es
rol
pop
sbb
rcr
sbb
jb
stc
inc
sar
aam
sbb
dec
test
in
test
xor
adc
dec
mov
js
lea
xor
xchg
pop
test
sbb
fxch
popf
sub
ljmp
lods
js
xchg
xor
cwtl
shrl
adcb
fnstsw
sub
cmpsl
test
mov
lods
scas
call
pop
add
cmp
fs
inc
pop
movsl
push
lret
lods
adc
adcl
cmpsb
push
cmpsl
scas
mov
add
pop
into
xor
dec
cmc
shll
pop
dec
fsubl
mov
repz
leave
mov
arpl
inc
sti
jb
sbb
jo
push
jecxz
hlt
lock
jnp
pop
insb
testl
xor
ret
jecxz
pop
push
mov
test
mov
push
dec
ljmp
fdivs
in
pop
jmp
cmp
jg
mov
pusha
pop
ja
out
push
iret
pop
arpl
add
jns,pn
inc
mov
testb
out
int3
jnp
sub
mov
cmove
pop
ret
mov
push
adc
es
mov
xchg
mov
lods
mov
push
fidivrs
xchg
ljmp
shrb
repz
cpuid
jne
daa
push
jg
jae
push
push
xchg
mov
push
nop
adc
mov
les
mulb
jb
fcomip
jo
jae
fst
inc
pushf
stos
mov
jp
adc
pop
mov
sub
cld
jnp
jne
stc
aad
adc
mov
movsb
rcl
out
cmpsl
ss
pop
ficoms
and
mov
mov
mov
or
dec
shrb
add
push
xor
jecxz,pn
add
icebp
mov
pop
fdivl
rcrb
pop
sbb
push
xor
cmp
pop
movsl
das
addb
mov
inc
in
rorl
or
push
sub
pop
es
insl
jp
jno
add
sti
shl
pop
clc
aaa
xor
mov
notl
icebp
and
pop
das
in
sbb
aad
lret
and
or
sbb
jbe
mov
in
sbb
leave
std
aad
jmp
arpl
or
mov
stos
movsl
or
or
sbb
adc
dec
or
in
dec
or
jmp
fcmovnu
das
imul
mov
outsl
movsb
addb
push
mov
movl
in
inc
mov
andb
lock
mov
push
scas
icebp
xchg
test
or
fdivr
sub
ret
cwtl
stos
xchg
pop
mov
into
sbb
pop
add
pop
cld
outsb
mov
popw
clc
push
jmp
out
cwtl
and
pop
loope
inc
xchg
xchg
mov
xchg
jl
repnz
pop
mov
push
out
sub
cmpsl
clc
iret
aas
cmp
or
xlat
pop
and
mov
xchg
inc
jb
sbbb
sahf
and
dec
popa
mov
out
daa
adc
cwtl
loope
pop
std
fldcw
mov
push
pop
mov
mov
pop
shr
mov
outsl
add
and
mov
pop
mov
mov
test
or
and
in
leave
ljmp
stos
lahf
pop
into
rcr
std
xchg
push
cld
nop
push
adc
lods
jge
or
xor
insl
lock
inc
out
pop
cmp
pop
xor
mov
and
dec
mov
push
int
sti
cmp
jno
cmpsl
jo
data16
pop
cmpl
lea
pop
push
test
mov
fidivl
and
cmp
movsl
xor
pop
push
inc
xchg
xor
imul
pop
lods
mov
jns
cmp
rolb
jae
int3
in
mov
pop
pop
ljmp
roll
mov
repnz
cmp
pop
int3
mov
mov
push
add
adc
add
pusha
je
clc
jmp
mov
pop
mov
cmp
mov
cmp
adc
into
sbb
in
push
fistps
or
dec
mov
pop
jb
sahf
fxam
iret
fcomps
push
fidivrs
mov
and
jge
inc
push
jno
add
das
shlb
sub
xor
pop
adc
pop
lea
loop
and
push
pop
rcrl
mov
pop
cmpsl
mov
dec
rcrl
incl
or
adc
adc
jns
orb
loop
stos
push
cmpsl
sbb
lock
test
loop
test
sub
ljmp
mov
push
xorl
shll
mov
pop
dec
sub
shlb
sbb
add
pop
fdivrp
ret
xchg
imull
jmp
data16
and
adc
xor
inc
jno
inc
stos
pop
and
dec
mov
scas
or
inc
mov
mov
adc
imul
imul
pop
fldcw
mov
xor
or
pop
lods
inc
test
fcomi
jns
cmp
mov
imul
xchg
jno
xchg
pop
pop
pop
popf
inc
js
dec
jmp
ja
dec
and
into
sti
cmp
stc
pop
icebp
lret
sbb
mov
cld
pop
cmp
or
data16
cmp
fs
lods
icebp
sbb
das
and
dec
iret
cmpsb
pop
mov
jno
cmp
ljmp
shrb
stc
and
push
movsl
repz
add
xchg
sbbl
adc
push
mov
nop
rolb
push
scas
shlb
repnz
dec
test
cmpsb
test
int
dec
mov
cmp
sub
cld
lret
pop
jno
jbe
sbb
jmp
jb
out
or
mov
std
cs
in
jmp
mov
loop
adc
mov
or
fdivl
notl
adc
push
cmpl
insb
fidivrs
mov
add
dec
sbb
mov
das
les
daa
lods
mov
jae
add
mov
lock
add
je
stc
xchg
addr16
movsl
mov
xchg
sbb
insl
jno
test
xor
dec
inc
add
or
mov
daa
filds
mov
xor
pop
dec
cmc
shlb
and
jg
sbbb
rorb
mov
pop
out
cmc
pop
mov
lds
in
cmpsl
cmp
pop
cmp
cwtl
add
xchg
add
imul
mov
xchg
jg
cmp
push
push
pop
mov
call
add
inc
cwtl
pavgb
es
loopne
test
xchg
or
incb
jns
test
xchg
subl
cmp
stc
lret
push
and
fcom
stos
add
ret
push
mov
pop
pop
lahf
js
push
add
jecxz
dec
cwtl
push
fiadds
shlb
iret
out
cmp
xor
hlt
inc
pop
add
inc
ss
in
pop
addr16
mov
int3
pop
jge
aam
xlat
pusha
cmp
mov
into
adc
popl
out
imull
pop
or
cmp
hlt
sub
in
les
mov
mov
push
inc
xchg
or
push
in
push
pop
pop
dec
sbb
fs
dec
ret
cs
adc
call
jge
cmp
je
inc
jecxz
mov
adc
pop
sar
in
and
rolb
aam
push
mov
mov
mov
pop
push
fs
test
mov
pop
mov
adc
call
loope
aaa
rcll
ja
arpl
jl
lds
fs
ret
xor
cmpsl
les
push
pop
loope
insb
pop
xchg
out
into
bnd
roll
mov
push
pop
or
xlat
adc
pop
out
pop
jae
sbb
cltd
jecxz
filds
mov
mov
sarl
int3
ret
aam
mov
pop
xchg
pop
lock
jae
in
cmp
cmc
lds
dec
sbb
mov
jge
sub
jbe
stos
ljmp
xchg
clc
sbb
testl
shll
cltd
repnz
add
test
shl
sub
movsb
mov
push
fwait
mov
inc
jle
fdivs
pop
cmp
std
call
xchg
test
movsl
xchg
or
cld
loopne
xchg
mov
out
nop
push
push
cmp
das
dec
inc
aad
pop
adc
push
pop
push
sbb
aas
scas
jl
mov
aaa
xor
jmp
sahf
adc
jle
push
movsl
dec
or
rorl
pop
or
arpl
push
pop
popa
and
js
pop
sti
loopne
in
xorb
xchg
jl
push
nop
lods
mov
insb
mov
sti
inc
ja
xchg
shrl
pop
jns
xlat
mov
inc
test
and
fistpl
jnp
adc
ffreep
xchg
push
jl
fldenv
sbb
lods
xchg
loop
gs
repnz
mov
pop
push
mov
sub
sub
xor
pop
mov
cmpsl
pop
push
xchg
mov
dec
jp
push
pop
aad
fwait
test
add
imul
arpl
clc
clc
push
in
or
mov
mov
xchg
jne
pusha
pop
sahf
popa
push
insl
roll
xchg
iret
adc
sbb
stc
int
loopne
pop
dec
mov
loope,pn
pop
push
lcall
add
scas
mov
pop
cld
sti
jl
mov
lds
jge
pop
adc
inc
test
into
es
mov
mov
ficomps
je
imul
inc
adc
repz
outsl
pop
cwtl
ljmp
lret
pushf
aas
mov
xor
fs
pop
pop
push
fstl
mov
xchg
mov
pop
outsb
ret
sub
mov
insb
sahf
je
xchg
fadds
inc
push
xlat
rolb
out
mov
lock
in
dec
jns
cmpsb
pop
jl
lret
insb
xor
fcoml
pop
cmpsb
dec
mov
sub
cmp
imul
lods
mov
aam
movsl
mov
mov
jae
ret
pop
fcoml
insb
sub
les
mov
push
outsb
mov
dec
pop
daa
inc
fcoms
mov
dec
pop
jge
shll
add
dec
sbb
dec
enter
pop
out
data16
loope
imul
jp
fs
loopne
int3
mov
jge
fcmovnbe
mov
lods
arpl
ds
push
pop
in
add
lods
and
cli
fcmovnbe
push
imul
lods
mov
cs
ret
int
iret
pop
popl
test
pop
or
loop
adc
imul
push
cmp
inc
mov
jo
pop
mov
fwait
inc
pop
rorb
pop
bound
sahf
fs
sub
mov
mov
push
mov
outsl
xchg
pop
sar
mov
xchg
pop
jbe
xchg
or
and
sub
insl
test
repnz
adc
loopnew
pop
push
aas
and
out
mov
cmp
adc
scas
cmpsl
adc
lods
decb
pop
pop
pop
imul
mov
pusha
inc
push
or
pop
inc
jle
outsb
adc
test
push
cmp
mov
jno
inc
jg
cmp
pop
imul
fs
inc
inc
popa
dec
jns
cmc
cmp
rcl
rorl
lcall
ud1
fstpt
pop
js
xor
push
add
pushf
mov
mov
fcmovnb
in
movsl
inc
enter
mov
imul
jecxz
pop
clc
cmp
mov
insb
scas
xor
xchg
xchg
sub
mov
enter
lods
xchg
out
fcomps
inc
faddl
sub
cmp
xrelease
dec
cmc
aaa
dec
lock
jmp
out
jl
icebp
sbb
leave
xchg
movl
push
data16
aad
jb
leave
movsb
add
mov
cmp
pop
add
jl
mov
lods
add
sarb
clc
fwait
xchg
and
push
fstpt
jl
sub
jecxz
insb
pop
lahf
mov
jge
int3
jnp
mov
int
aas
mov
lock
cld
jmp
lcall
sub
push
lret
fisubl
fcomp
jnp
test
push
pop
mov
gs
clc
mov
ret
push
or
sbb
sub
mov
adc
fmulp
mov
lret
in
gs
cmp
and
jg
daa
or
repz
dec
ret
pop
sarl
or
stc
xor
fidivrl
fcomps
jb
add
adc
in
adcb
push
or
iret
les
inc
or
popa
sbb
lcall
sbb
adc
add
or
and
cs
mov
and
jb
pop
popf
and
test
add
add
jp
cmpl
stos
add
mulb
fstpt
add
add
sub
xchg
mov
std
add
sbb
in
pop
cmp
insb
imul
pop
push
out
movsb
enter
fdivl
mov
repnz
mov
or
cmpl
pop
push
and
test
xchg
pop
mov
addl
inc
xor
mov
loopne
mov
jg
es
xchg
and
pop
cmpl
push
pop
test
push
mov
dec
dec
cmp
ret
ret
pop
cmpsl
fldcw
sub
push
cld
cmp
fstpt
out
jp
mov
pop
jmp
std
aam
stos
inc
dec
adc
push
and
aaa
rcl
sbbl
cld
rcrb
xor
repz
mov
in
ja
pop
mov
mov
rorl
mov
ds
xchg
mov
xchg
xor
das
aad
push
jecxz
pop
scas
xchg
lods
adc
imul
xchg
pop
cmpsl
xchg
push
xchg
dec
lock
pop
loop
and
in
inc
pop
xor
pop
rclb
mov
stos
pusha
fldl
add
pop
jno
repnz
pop
out
pushf
mov
aaa
adc
js
pop
xchg
xchg
aas
and
cmp
add
push
add
stc
or
mov
jns
sti
xchg
fdivp
mov
test
pop
push
sbb
adc
jecxz
inc
and
push
pop
mov
jg
jmp
out
mov
hlt
mov
mov
xorl
repz
adc
lret
data16
subb
les
and
pop
xchg
xchg
mul
sbb
xor
inc
mov
dec
and
int3
mov
insb
shll
inc
cmp
sub
add
push
jnp
xchg
add
mov
and
sub
leave
fiaddl
cmp
pusha
mov
in
loop
pop
aad
push
out
pop
pop
dec
lods
sbbb
mov
out
out
mov
or
mov
add
adc
repz
pop
ret
pop
jmp
rolb
mulb
mov
cmp
xchg
xorl
mov
jo
shl
mov
movsb
cmpsl
scas
xchg
lds
cmp
sahf
int3
cs
jae
mov
into
pushf
mov
ficomps
pop
mov
and
sti
int3
scas
mov
sbb
jecxz
dec
xor
dec
xor
dec
ret
dec
mov
fcoms
jae
or
adc
push
sbb
push
test
mov
sub
mov
push
dec
xchg
xor
mov
adc
jmp
movsb
lea
pop
data16
in
add
mov
mov
out
xchg
call
rolb
push
pop
xorb
or
pop
xchg
jae
adcl
lea
in
dec
pop
mov
mov
xorl
and
cld
aaa
das
mov
nop
rcrb
and
scas
pop
mov
mov
jno
inc
fcomi
cmp
mov
add
pop
jecxz
mov
sub
mov
lret
lea
xchg
mov
ss
jp
cmp
adc
mov
ret
or
mov
js
imul
call
lahf
out
inc
pop
fisubs
jecxz
cwtl
mov
dec
stos
int3
jne
loop
fstpt
inc
in
adc
mov
jns
rolb
xchg
lds
lods
testl
xchg
sbb
push
lret
jae
mov
add
es
xchg
pop
iret
dec
movsb
add
jg
in
scas
pop
loopne
or
mov
insb
mov
sar
inc
mov
pop
std
mov
xchg
ja
cmp
repz
lret
fistpll
jno
add
gs
mov
lock
in
movsb
pop
iret
push
insb
mov
lock
jge
mov
jg
dec
push
lods
adc
pop
outsl
pushf
pop
dec
xor
add
stos
dec
mov
sbb
pushf
mov
cmpsb
push
imul
add
cmp
sbb
pop
rorl
ja
sub
sti
les
mov
stc
pop
pusha
ljmp
cmp
fwait
pop
aas
js
cmp
ret
inc
bound
add
pop
clc
xchg
xor
repnz
repz
test
jp
sarb
sub
mov
sbb
stos
fnsave
pop
inc
repz
inc
rol
lock
xchg
in
pop
lret
and
int3
push
pop
push
sub
les
shrl
movsb
xchg
and
push
dec
mov
pop
stc
std
sbb
popf
add
cmp
pusha
xchg
dec
or
push
arpl
rcll
dec
sbb
xchg
cmc
data16
sbb
je
jle
cltd
mov
sbb
add
icebp
fsubp
enter
jge
lret
cld
nop
fcmovnbe
adc
jb
int3
int
push
lock
arpl
lods
scas
adc
jecxz
cmc
pop
inc
mov
aaa
jne
inc
stos
sbb
add
es
aaa
roll
mov
jp
insb
adc
xchg
outsl
mov
pop
cmp
call
les
mov
or
add
in
std
jnp
xlat
add
pop
sub
addr16
pop
xchg
inc
pushf
pop
nop
sbb
lahf
ljmp
push
xchg
pop
dec
dec
pop
pop
int3
mov
call
leave
mov
out
lods
pop
cmp
dec
mov
jmp
aaa
jae
imul
jb
push
cmp
jle
cmp
mov
movsb
orb
jp
loope
mov
sbb
fiadds
fsubrl
push
pop
mov
jo
icebp
adc
subb
mov
or
sbbl
fadds
addr16
inc
dec
scas
push
psrld
ljmp
cltd
jecxz
mov
shll
push
pop
pop
jbe
mov
call
add
lret
in
xchg
push
sbb
sbb
cmpsb
pop
lock
dec
pop
je
rorb
xchg
mov
sbb
imul
ret
xchg
xor
loop
mov
sbb
fstl
sub
dec
insl
gs
iret
pop
dec
or
and
xor
pop
push
fisubrs
pop
in
jbe
loopne
add
pop
mov
mov
xor
out
sbb
mov
into
jl
push
inc
xchg
stos
andb
gs
and
js
xor
iret
jbe
mov
mov
or
lods
mov
scas
lock
cmp
outsb
in
mov
mov
pop
cmpsb
lret
and
add
push
data16
fisttps
lahf
adc
leave
fsubrl
aas
pushf
cmpsl
roll
mov
add
sar
mov
pop
outsl
shrb
mov
fwait
pop
adc
add
xor
or
mov
sub
fcmovnb
sbb
filds
pop
pop
push
inc
mov
fiaddl
fidivrs
cmp
repz
pop
jp
sbb
xchg
fstpl
cmp
push
push
js
or
repnz
test
mov
pop
sbb
mov
cmp
fs
pop
add
cmp
push
sbb
in
push
pop
es
inc
cmpsl
jg
or
movb
jo
add
in
fdivl
pop
xor
jnp
ret
mov
push
pop
out
sub
mov
xchg
xchg
or
pop
and
or
scas
clc
lock
es
lcall
push
hlt
shlb
pop
fstpt
mov
dec
mov
arpl
je
pop
fsub
out
in
sbb
adc
clc
lea
aam
mov
jle
fcomi
xor
jecxz
add
sub
mov
ror
inc
pop
xchg
mov
enter
sub
fxch
mov
push
xchg
into
pop
inc
jle
cmp
dec
sub
mov
fadds
or
lods
iret
jecxz
js
in
movsl
xor
dec
negb
cmp
std
add
aam
insl
jecxz
inc
dec
pop
dec
lcall
aaa
mov
ss
mov
sub
in
sbb
arpl
loopne
dec
pop
and
insl
or
jle
mov
loopne
pop
pop
jne
lcall
push
movsl
or
lcall
cmp
adc
sub
imul
pop
imul
leave
enter
mov
push
jno
dec
sbb
cmp
test
xor
inc
rol
icebp
fsubr
sub
les
mov
xchg
outsb
or
imul
mov
mov
xor
mov
je
in
add
movsl
insl
pop
cmp
call
push
adc
inc
jo
mov
add
push
sub
loop
xchg
cld
inc
aam
mov
shlb
sbb
and
push
pop
mov
or
hlt
cmp
sub
cmc
inc
jbe
pop
xchg
dec
adc
iret
mov
rcrl
xchg
pop
fistpl
push
scas
add
movsb
cmp
sbb
or
xor
popa
inc
or
dec
lea
pop
movsl
jb
push
loope
inc
pop
mov
push
loop
mov
int
xor
xor
jmp
jmp
sbbl
into
movsl
flds
cld
ret
sbb
jne
cmp
orl
xchg
mov
ret
cmp
or
aaa
clc
xor
scas
sbb
inc
ds
cmc
pop
fildll
outsb
xor
push
ret
fidivs
xchg
xchg
pop
data16
mov
lcall
and
addr16
mov
cltd
pop
push
xchg
xor
or
mov
sub
fcoml
sbb
call
test
mov
and
insb
inc
fcmovnbe
jb
rcrl
adc
dec
mov
scas
sbb
xchg
jnp
fsubs
leave
pop
ljmp
fldl
bound
xchg
out
pop
popf
pop
sub
int3
ds
adc
xor
sar
icebp
cmpsl
pop
loope
ljmp
and
test
jnp
pop
filds
rcrl
hlt
testl
icebp
bound
add
cwtl
dec
mov
add
aam
repz
jmp
push
lret
pop
push
mov
es
mov
mov
cmpb
or
outsl
pop
aam
dec
jne
lods
leave
or
add
mov
stc
lock
bound
imul
mov
les
fcompl
pop
movsl
sbb
decl
insb
in
jl
sarb
imul
inc
cmp
fldcw
xor
shlb
jp
stos
and
pop
push
adc
cmp
arpl
ds
xchg
xchg
divl
fidivl
icebp
or
sbb
fsubs
mov
insl
popf
mov
and
cmpsb
cli
pop
inc
repz
pop
jne
addl
pop
fnsave
sub
divl
jge
inc
test
jp
pop
add
dec
pop
stos
repnz
mov
jle
inc
sub
push
adc
lods
add
icebp
imul
in
test
mov
or
movsl
sti
out
inc
xchg
pop
inc
push
lods
cmp
pop
pop
pop
popf
mov
jno
xchg
mov
repz
ds
mov
outsb
loop
inc
test
sbb
ljmp
sub
pop
jbe
sub
popf
push
push
add
popa
das
pop
clc
add
mov
pop
in
or
pop
push
cwtl
out
mov
pop
mov
mov
stos
pop
loope
movsb
pop
mov
pop
jns
arpl
mov
loop
incl
xchg
fstp
push
movsl
jae
pop
xorb
ret
dec
add
or
add
cld
cmp
cltd
out
sarb
repz
pop
ficoms
mov
ljmp
cmp
out
lods
sub
inc
mov
jg
add
les
xor
xchg
sub
add
push
es
aaa
push
pushf
push
fmuls
lea
sti
push
insb
xchg
insl
jns
pop
cmp
nop
out
jmp
arpl
rcll
pop
lods
scas
xchg
outsb
push
test
jbe
ret
cmp
daa
cmp
mov
adcb
pop
xlat
orl
inc
lahf
push
jmp
enter
jecxz
xor
fnsave
out
sbb
pop
push
call
push
je
testb
push
add
cld
sub
scas
leave
cmp
mov
add
push
or
cwtl
jne
enter
sub
cmp
lds
pop
cmp
insb
dec
mov
fldl2t
jmp
xchg
mov
mov
mov
sbb
pop
push
aas
jp
pop
mov
setb
xchg
push
push
pop
loope
mov
movb
jle
add
test
pop
shll
jnp
addr16
cmp
fstpl
pop
pop
xchg
fsts
pusha
and
sbb
rcrl
clc
adc
cmp
mov
or
daa
pop
in
gs
pop
jns
ficomps
add
jg
and
cmp
push
fldenv
xor
push
push
rcrl
cmp
pop
out
or
mov
jne
outsl
sbb
pushf
xchg
sub
jne
clc
sbb
lahf
cmp
sub
gs
inc
pop
mov
jg
jle
clc
push
mov
add
fstp
ljmp
int3
cmp
mov
sbb
shlb
jns
cmpsl
fnstenv
daa
cmp
out
mov
faddp
sbb
lods
cmc
nop
test
dec
test
in
xor
enter
pop
outsl
and
push
push
pop
js
sbb
jne
push
push
pmaxsw
xor
stc
adc
and
and
arpl
dec
push
orb
sbb
inc
mov
jae
add
imul
gs
rcl
pop
jg
sbbb
scas
mov
pop
ds
jnp
fildll
jae
repz
aam
pop
out
dec
or
sub
pop
mov
jmp
mov
mov
ret
jmp
insl
repz
std
jge
arpl
loope
fcomip
clc
popa
fldt
pop
lcall
in
pop
inc
jnp
nop
sub
push
and
in
jge
sub
jmp
fisttpll
xchg
xlat
in
pop
outsl
sbb
jle
sub
mov
xor
ja
mov
jae
pop
push
data16
lods
xchg
test
xchg
addr16
mov
inc
xor
jnp
jecxz
stos
inc
pop
std
fisubrl
jg
pop
jle
push
adc
xor
adc
ds
push
xchg
inc
lcall
je
mov
outsb
insb
sbb
popa
outsb
rorl
pusha
and
sbb
mov
jae
imul
rcrb
sub
or
ljmp
shlb
add
sub
xor
or
lods
rolb
loope
adc
mov
xor
ss
clc
xchg
icebp
pop
insb
test
fisttps
cmpsw
pop
lea
mov
lods
lds
aas
cmp
aad
jbe
push
pusha
or
pop
das
cmpsl
rcrb
pop
cltd
mov
add
jb
push
cmp
jle
add
sbb
sarb
push
ficomps
pop
cld
xchg
shlb
lret
inc
dec
enter
inc
mov
pop
insb
mov
push
push
jbe
out
jne
rorb
pushf
gs
sbb
dec
pop
pop
adc
sub
ja
insb
sbb
fsubrl
and
fwait
sub
cmp
mov
xchg
pop
data16
outsl
dec
iret
aas
xchg
call
jb
cmp
pop
icebp
xchg
pushl
es
lss
repnz
sub
roll
je
rcll
mov
jnp
repz
ja
xor
pop
pop
and
lods
lret
lods
pop
add
cmp
in
mov
xchg
pop
push
cmp
leave
shrl
icebp
call
ret
push
mov
jns
inc
pop
in
out
mov
stos
dec
inc
xor
movsb
add
arpl
pusha
mov
add
lock
dec
mov
pusha
aam
sub
xor
pop
mov
in
xchg
imul
sbb
xchg
sub
sbb
int3
push
sub
jl
dec
in
stos
ret
inc
pop
mov
cmp
roll
dec
push
out
int
and
insl
pop
xchg
les
pop
lret
out
sub
fdivp
lods
mov
fdivl
jmp
pop
jmp
and
mov
jne
pop
addr16
inc
push
jne
dec
pop
xchg
mov
mov
jns
mov
pop
jnp
daa
jbe
int
mov
xchg
pop
fsubs
into
jne
xchg
cmp
out
out
sub
pop
scas
sub
in
and
pop
hlt
roll
scas
xor
movsb
sbb
add
js
xor
std
es
stos
iret
push
icebp
push
pop
dec
popa
or
loopne
adc
testb
roll
fwait
out
mov
push
add
jne
in
xor
pop
push
ss
enter
pop
jge
push
scas
lock
fwait
pop
push
cmc
loope
mov
addr16
pusha
cmp
out
jno
pop
cmp
mov
and
pop
xchg
ret
test
pop
add
ss
jne
fldl
daa
lods
lods
pop
loop
cmpsl
and
push
cmp
add
gs
sbb
or
roll
mov
and
pop
push
dec
div
pop
in
outsb
cmp
dec
sbb
mov
push
popa
jbe
shr
xchg
fistpl
inc
sti
addb
out
test
inc
popa
add
push
mov
adc
dec
add
ja
cmpsl
pop
js
rolb
inc
fcompl
dec
mov
repz
add
stos
and
pop
push
sbb
scas
add
repnz
call
or
and
pop
out
je
mov
push
mov
pop
mov
fistl
pop
test
cmp
stos
cli
nop
aad
cmp
cmp
pop
sub
jmp
loop
and
mov
lahf
aam
mov
out
pop
jecxz
sahf
jle
clc
add
aam
es
or
shl
fdivr
inc
bound
dec
mov
ror
clc
ret
ja
and
dec
xchg
movsb
add
fmull
test
mov
imul
enter
inc
in
imull
xor
dec
call
dec
sbb
cltd
jne
je
and
fidivrs
fstps
xchg
cmc
mov
std
outsl
jnp
pop
jb
or
cld
or
xchg
push
rep
sbb
inc
pop
test
imul
sarb
pop
xchg
cmp
sbb
pop
or
jge
pop
push
mov
lret
dec
addr16
stos
mov
es
out
pop
and
dec
movsl
jns
sbb
jp
pop
mov
pop
xor
or
xlat
rcrl
stc
shl
pop
mov
test
sub
or
lock
sti
jl
stos
shrl
repz
mov
pop
leave
int
cmp
xchg
xchg
and
movsl
into
ret
push
roll
repz
stc
lahf
fidivs
cmc
cmp
call
xchg
mov
push
inc
mov
fimuls
mov
pop
bound
sub
insb
mov
ljmp
xchg
add
pop
mov
aam
adc
mov
icebp
inc
rolb
jns
jb
adc
push
repz
lret
call
fs
mov
adc
int3
dec
pop
out
insl
and
fcomps
cmc
into
lods
and
addl
xlat
or
imulb
insb
popf
sbb
pushf
xchg
jbe
cmp
mov
mov
and
aas
stc
filds
ss
sahf
mov
push
leave
sbb
pop
mov
dec
mov
cmpsb
pop
cs
sbb
jo
popf
pop
jge
push
inc
adc
cmp
call
insb
pop
adc
inc
scas
daa
add
mov
aas
jbe
leave
xlat
push
pop
in
sub
xchg
adc
or
iret
fdivs
popf
cmp
and
notb
add
es
cmpsb
dec
sub
fmuls
aad
dec
test
pop
jg
cmp
mov
and
loopne
mov
je
out
loop
xchg
roll
sub
inc
sbb
lock
jg
jns
sbbl
add
push
push
add
xchg
stos
sti
sbb
and
std
cld
mov
subl
pop
lret
cld
fchs
aas
icebp
pop
cmc
lea
xchg
pop
and
jns
pop
imul
outsl
adc
testl
std
mov
call
test
add
sbb
xchg
sub
cmpsl
stc
jb
movsl
test
cld
loope
pop
stos
xor
xor
jns
cmp
outsb
sbb
out
ret
mov
cmp
sub
dec
push
pop
mov
bound
rclb
cwtl
jae
popf
add
sbb
movsb
popa
test
les
xchg
jge
in
or
lahf
jne
pop
ljmp
pop
mov
mov
addl
int
xlat
ja
jg
repz
pop
mov
aas
or
pop
mov
daa
sbb
push
adc
cmp
or
fdivrp
mov
xchg
and
add
mov
push
mov
sbb
inc
jbe
ja
add
dec
dec
popa
mov
mov
adc
xor
sti
pop
ja
fdivr
clc
adc
pop
out
jle
faddl
cmp
shll
xchg
aam
mov
xchg
aad
js
movsl
pop
sbb
mov
or
jp
fsubrl
xor
ret
xor
mov
into
jle
jl
push
xchg
sub
lock
imul
and
dec
int
fsubl
test
mov
rolb
push
adc
imul
test
sbb
mov
daa
popa
stos
scas
sarb
inc
fwait
sbb
ja
movsb
add
out
lock
sub
pushf
mov
sbb
into
fldcw
pop
aaa
adc
and
cmp
pop
test
xchg
std
jno
mov
outsb
and
jp
gs
jge
daa
pop
jl
fcmovnb
in
dec
pop
lahf
sbb
inc
test
stc
adc
pop
fldcw
ds
loop
std
xchg
mov
in
adc
or
adc
mov
push
lds
in
into
add
pop
dec
jns
ljmp
pop
ficoml
add
add
mov
xlat
imul
dec
pop
mov
mov
push
fildl
int
dec
leave
and
gs
inc
dec
scas
mov
rorb
jge
pop
int3
sbb
lret
stos
dec
pusha
add
scas
or
mov
pop
flds
or
pop
mov
xchg
mov
pop
pop
push
fidivs
popa
bound
fnsave
push
lods
pcmpgtb
ret
inc
xchg
test
pop
mov
dec
pop
movsl
xorl
jnp
sub
sti
pop
movsl
mov
shl
xchg
in
xor
pushf
sbb
mov
or
jno
ja
mov
mov
cld
repnz
mov
pop
decb
mov
push
cvtps2pi
sbb
push
repz
jmp
shr
jp
pusha
xlat
fs
lods
and
arpl
ret
xchg
mov
popf
jb
repnz
push
inc
adc
mov
cwtl
pop
mov
std
add
ffreep
sbb
dec
pop
lods
or
push
or
sbb
bound
dec
mov
int3
leave
in
cmp
insl
push
cmpsl
inc
in
xchg
cmp
xchg
pop
inc
push
aad
dec
inc
lods
fwait
pop
repz
cltd
rcrb
popa
pop
dec
out
cmp
idivl
ja
mov
ret
arpl
jb
mov
sbb
xchg
or
movsl
repnz
aad
dec
mov
pop
mov
mov
xchg
pop
push
and
sbb
rolb
pop
divb
and
bound
add
push
pop
inc
xor
orl
jg
or
or
fnsave
clc
lahf
jmp
xlat
pop
or
addr16
jbe
movsb
xlat
insb
pop
testb
mov
mov
or
push
mov
pop
cwtl
cmp
sarb
sbb
test
lcall
pop
subb
loope
inc
mov
mul
gs
pop
inc
out
mov
dec
sbb
movsb
aaa
push
dec
shlb
pop
or
mov
fwait
cs
jp
sti
pop
sbb
fadds
std
jae
pop
cltd
aaa
sub
loope
adc
pop
dec
sbb
rcr
push
jl
cmp
mov
ret
ljmp
mov
cmp
mov
je
jmp
add
mov
imull
push
jp
sbb
and
or
pop
sbb
mov
and
pop
pop
jle
in
pushf
andl
cmp
icebp
push
aas
rcll
mov
filds
pop
aaa
dec
cmc
rcr
pop
and
xchg
mov
xchg
push
pop
dec
icebp
sub
in
sub
pop
sub
push
popf
daa
pop
and
xchg
xchg
lods
push
les
insl
xrelease
fidivl
std
es
pusha
jae
out
and
add
or
push
es
pop
stc
ljmp
icebp
rcr
dec
lods
sahf
cmpsl
movsb
or
imul
push
sbb
or
clc
or
cmp
or
xor
adc
pop
pop
pop
mov
enter
push
mov
mov
out
sti
fistpll
xlat
mov
fdivr
lret
jno
push
mov
mov
xchg
aad
push
sbb
ljmp
into
sub
adc
call
das
dec
dec
test
repnz
lahf
int3
lds
in
pushf
popa
fildll
dec
pop
pop
dec
push
mov
mov
cmpsb
adc
push
je
pop
adc
and
mov
jnp
mov
xor
ja
dec
xor
cmpb
pop
stos
out
pop
push
pop
cmp
dec
ja
sbb
nop
xchg
pushf
das
bound
xchg
adc
xchg
mov
or
dec
mov
arpl
add
cmp
loope
pop
repz
mov
pushl
mov
pop
iret
rol
or
movb
cmp
js
cmpsb
aaa
xor
out
pop
sarb
jmp
push
sub
push
ljmp
adc
test
add
fidivs
das
mov
push
in
pop
cs
lea
dec
repnz
mov
pop
fadds
cltd
mov
out
mov
mov
fnstcw
insb
bound
sub
mov
mov
lahf
cmp
stos
lods
pop
sub
enter
ja
sarl
pop
scas
adc
fsubrs
mov
das
test
mov
mov
test
mov
xchg
aam
popa
les
aad
push
stc
add
cmp
movb
dec
fldl
dec
push
xchg
pop
mov
mov
push
aas
dec
cmp
xchg
stos
push
jbe
incb
adc
pop
mov
dec
cmp
sbb
pop
fistps
aaa
outsl
sbb
mov
mov
cmp
imul
frstor
sub
mov
pop
pop
mov
mov
test
mov
pop
int
jne
xchg
add
sbb
jge
and
in
clc
jae
add
push
or
mov
ret
mov
arpl
dec
add
hlt
pop
jle
mov
pop
add
inc
sub
aas
inc
pop
mov
outsl
jg
cmp
in
icebp
dec
ljmp
lods
aaa
pusha
push
addr16
pop
or
shll
lret
mov
sub
push
pop
jge
pop
pop
mov
lret
dec
addl
clc
pop
scas
movsl
adc
inc
pop
cmp
jl
mov
sub
inc
xchg
imul
jb
sti
lret
pop
stc
pusha
mov
sub
enter
cmp
jns
push
mov
pop
cld
inc
in
lret
pop
xchg
rcrl
jnp
cmp
xchg
push
mov
or
stos
add
pop
cmp
repnz
fsubrl
data16
xchg
push
add
pushf
add
loope
addr16
pop
in
outsb
or
shll
pop
cmpl
dec
stos
mov
pop
adc
xlat
dec
pop
sub
call
cs
adc
stc
pop
sbb
loop
mov
sbb
cwtl
pop
push
pop
in
sti
std
sbb
mov
jbe
xchg
out
xchg
scas
dec
sbb
jns
mov
dec
adc
or
mov
das
xchg
mov
popw
lcall
fsubrl
pop
ret
mov
adc
cmp
test
pop
cmp
rclb
mov
add
adc
pop
mov
sub
push
stc
aas
or
cmp
hlt
mov
mov
jmp
pop
inc
jge
pop
cmp
xchg
mov
jbe
sti
pop
and
inc
aas
cmp
insl
lahf
es
pop
sub
or
out
cmp
cld
inc
ret
pop
cmp
mov
test
dec
xchg
js
pop
shl
add
fcmovu
jp
stc
cmp
fs
cwtl
movsl
call
sahf
rclb
xchg
and
xchg
adc
mov
xchg
pop
testb
inc
and
icebp
pop
movl
sub
mov
sbb
mov
mov
fsubr
dec
jo
es
mov
outsb
mov
sbb
subl
push
rolb
and
inc
xor
inc
cmp
add
jmp
xor
arpl
out
cwtl
cmpsb
mov
in
ficomps
cwtl
xor
push
popa
adc
inc
and
adc
xchg
ljmp
jmp
ret
rcll
pop
lea
or
dec
jne
pop
imul
add
and
and
paddd
repz
push
add
shrl
pop
adc
out
sbb
ss
mov
pusha
fmull
xchg
sub
cmp
lret
pop
clc
aad
aam
enter
push
out
mov
cld
mov
lods
pop
pop
xor
adc
lcall
into
gs
mov
js
jno
aas
adc
jecxz
scas
sti
fwait
pop
in
and
mov
add
loop
out
into
cmp
add
pop
rcll
fst
xorb
scas
pop
cmp
mov
pop
test
es
jp
js
lods
fadds
fwait
addr16
xor
mov
add
dec
sbb
adc
pop
pop
testl
dec
out
mov
adc
pusha
sub
mov
or
push
dec
and
cmpsb
push
cmp
mov
mov
push
les
xor
sub
xchg
sbb
mov
mov
cld
ror
sti
add
scas
pop
dec
lods
lcall
mov
es
lret
pop
dec
mov
xor
rclb
sub
call
dec
repz
inc
or
cmc
cmp
push
push
xchg
pop
cltd
inc
mov
fstpt
cmp
addr16
lods
jno
pop
dec
pop
scas
test
lea
xchg
addl
popa
aaa
mov
jnp
mov
mulb
lret
incb
out
test
push
out
ret
mov
sub
test
jo
cmp
pop
and
fistpll
outsb
mov
imul
add
or
push
nop
push
mov
ljmp
sahf
iret
gs
pop
jae
xchg
out
push
fucomp
pop
dec
mov
dec
sub
pop
loop
outsb
lahf
fcmovnb
add
mov
repnz
mov
stos
and
pusha
je
in
and
pop
lock
xlat
jle
pusha
jo
out
popf
clc
push
dec
add
xchg
pop
jge
test
out
add
icebp
bound
or
pushf
jle
sbb
mov
sbb
inc
std
inc
adc
ret
push
addr16
imul
sub
rolb
aam
fadds
pop
sub
movsl
sbb
test
pusha
xor
sub
fstpt
jge
xchg
and
lahf
adc
xor
loopne
sbb
inc
jne
cmp
and
jns
fs
jno
cmp
jmp
call
mov
dec
xchg
fs
mov
add
gs
adc
pop
mov
mov
inc
pop
push
rorb
cmp
pop
loope
push
je
ret
pop
lea
xchg
pop
xor
pop
inc
sbb
pop
cmp
icebp
int
loope
mov
dec
jnp
cld
popa
fwait
xor
fmuls
outsl
xchg
push
pusha
shll
fwait
inc
dec
sbb
push
stos
xchg
stc
and
dec
mov
cmp
popa
test
pop
imul
mov
pop
sbb
mov
push
bound
adc
and
add
fsin
test
pusha
andb
pushf
fidivl
sti
ljmp
xchg
mov
inc
enter
pop
and
test
cwtl
and
push
xchg
push
and
or
xor
jge
int3
pop
pop
mov
and
js
dec
icebp
aam
pop
pop
push
inc
cmp
sarl
ja
les
roll
add
adc
mov
cmp
je
rep
add
test
popf
adc
loope
les
pop
push
pop
data16
jne
pusha
add
daa
xchg
xchg
xchg
mov
cmpsb
fadd
jnp
dec
cmp
lret
pop
xchg
jl
sub
movsb
sub
aad
push
pop
cltd
or
cmp
pusha
pop
inc
cmp
imul
mov
mov
call
lods
movsl
mov
psadbw
and
orl
bound
add
xchg
movsb
cmpsb
sar
mov
loope
pop
push
into
inc
cmp
out
in
push
pop
adc
das
mov
inc
pop
bound
adc
sbb
les
adc
add
xor
pop
mov
mov
ljmp
sbb
scas
addr16
inc
pop
pop
pushw
cld
pop
ds
jnp
mov
push
test
xor
mov
mov
addl
rcl
jo
aas
push
jle
call
mov
in
stc
jbe
fnstsw
pop
sbb
pop
addb
jae
sarl
cmp
pusha
ja
or
pop
cmpsb
punpcklwd
stos
mov
jae
clc
sub
cmpl
cld
xchg
enter
jecxz
popa
aas
loop
scas
pop
fnstsw
and
cwtl
dec
cmp
gs
fwait
je
in
stos
cmp
pop
xorl
imul
cmp
pop
push
cmp
popf
scas
or
pop
push
xchg
jg
cmp
insb
repnz
pop
fldcw
push
jecxz
or
mov
xor
mov
test
enter
sbb
jbe
test
adc
pop
insb
mov
adc
cmp
fstpl
pop
jle
pop
dec
cmp
sbb
fs
call
push
mov
mov
ljmp
insb
jl
scas
pop
fs
idivb
ljmp
mov
sub
pop
insb
push
jg
ffree
xor
out
clc
mov
adc
clc
jae
in
stc
mov
loopne
filds
popf
lods
add
testb
mov
cmc
in
dec
out
cwtl
sbb
mov
test
dec
arpl
in
inc
mov
pop
cmp
jbe
and
ds
int3
cmp
mov
mov
lock
es
jo
add
xchg
mov
sbb
xchg
xor
push
pop
sub
pushf
pop
pop
jge
mov
add
cld
and
ror
rcll
jnp
add
jae
jmp
sbb
test
mov
es
inc
inc
in
cmp
xchg
dec
push
pop
push
mov
fwait
push
sub
int3
out
enter
ret
in
dec
arpl
lahf
push
xor
je
or
and
nop
pop
pop
cmp
sub
adc
lahf
inc
or
daa
rcll
pop
push
imul
mov
movsl
insb
cmpsl
xchg
dec
xchg
push
or
push
in
pop
and
scas
stos
pop
mov
pop
jecxz
out
subb
inc
hlt
loope
xchg
jmp
cmp
add
lea
pop
push
gs
sub
leave
in
mov
push
pop
and
repnz
ds
mov
pop
xchg
lcall
vmovupd
movsb
jae
pop
mov
xchg
cmp
lods
loope
loop
push
dec
add
aam
adc
mov
jns
cmp
cmp
xchg
dec
pop
push
fadds
out
mov
push
aas
loop
mov
jg
inc
div
fmuls
aas
ficomps
xchg
xchg
and
loope
jo
mov
je
stos
lods
ficoml
out
cmp
pop
mov
clc
test
push
or
xor
xor
lcall
xor
lods
push
mov
int3
xlat
mov
cli
movsl
add
push
fstpt
xlat
das
ljmp
movsl
dec
rcrl
out
pop
mov
cwtl
or
arpl
dec
addr16
mov
ja
cmp
imul
xor
into
fiaddl
lods
into
rclb
and
mov
rcrl
xchg
sbb
ljmp
mov
sbb
push
lods
xchg
flds
inc
pop
jge
mov
sub
sbb
or
xor
pop
dec
aas
mov
pop
in
loopne
andb
into
das
fiaddl
cmp
adc
pop
in
pop
into
push
ljmp
ss
ret
push
inc
mov
pop
insl
jbe
adc
inc
add
pop
mov
imul
mov
mov
jmp
jb
xor
xchg
in
pop
push
xlat
and
or
xchg
int3
stos
push
mov
mov
pop
rorb
arpl
xchg
test
jge
mov
lahf
into
sbb
clc
stc
testl
cmp
add
xchg
jb
dec
push
aas
pop
xlat
repz
addr16
lahf
cmp
add
lret
cltd
jne
mov
mov
jb
pop
xchg
lret
jmp
jmp
add
imul
aam
sbb
xlat
cs
lods
sub
loop
ficompl
bnd
pop
push
arpl
inc
mov
pop
pop
xchg
dec
out
scas
and
inc
xor
scas
add
test
stos
lods
mov
popf
jae
cmp
pop
cmp
jbe
adc
jnp
pop
subb
lods
push
jg
add
lea
or
out
and
add
jno
add
mov
sbb
loope
jo
cmp
pop
int
cmp
imull
jecxz
fisubrl
sti
movsb
aam
sbb
in
lret
fadds
fcoml
clc
pop
inc
nop
or
mov
sbbl
xchg
in
mov
in
shl
sbb
sbb
push
pop
add
push
and
push
inc
sub
adc
pop
cmp
orb
xor
popf
push
xor
mov
push
xchg
leave
fs
in
mov
mov
and
pop
outsl
and
loopne
aaa
in
xor
addr16
and
xchg
fucom
das
fidivrl
loope
shrd
addr16
icebp
in
push
ficompl
jle
ficomps
lods
negb
sbb
add
movsb
js
mov
adc
lods
outsb
mov
sahf
enter
icebp
enter
cmp
or
adc
fisttps
cs
pop
push
xchg
push
nop
das
mov
xor
xor
xchg
mov
pop
push
leave
adc
es
lods
pop
cld
cwtl
and
sub
jbe
js
jle
jge
pop
push
inc
adcb
adc
insl
pop
jmp
leave
cmpsl
mov
scas
and
enter
jp
dec
jl
pop
inc
pop
push
pop
sbb
out
stos
sbb
mov
fadds
and
or
sub
fists
push
or
nop
aam
pop
in
add
xor
push
repz
stos
iret
clc
loope
push
sbb
ja
mov
pop
cmp
dec
pop
popf
je
mov
mov
lret
rolb
aad
stos
pop
dec
dec
inc
jb
int
test
sti
xchg
pop
ljmp
out
xor
push
popf
jg
dec
cmp
dec
js
cwtl
roll
push
pop
pop
mov
sti
cmp
pushf
stc
mov
mov
shr
in
pusha
sub
jo
je
inc
call
sbb
xchg
jae
movsl
pop
lods
aad
sbb
pop
mull
frstor
pop
pop
enter
inc
adc
sbb
cmpsb
xchg
ljmp
sbb
outsl
in
mov
pop
pop
pop
jne
int3
cmpl
inc
xchg
xchg
jbe
mov
jle
popf
test
push
sbb
inc
cmc
adc
imul
lods
inc
stos
and
les
jge
pop
jmp
xchg
movsl
jmp
xchg
ficompl
js
iret
cmp
and
push
les
in
roll
push
into
cmpsb
mov
int
stc
pop
jo
dec
xchg
cmp
mov
int3
jno
pushw
roll
sub
rclb
pop
divb
sub
xchg
enter
jg
sbb
push
pop
rorb
dec
repnz
pop
dec
test
vmovups
mov
sbb
pop
sub
lea
pop
add
or
add
mov
pop
aam
dec
lea
cmc
vaddsubpd
repnz
out
in
or
jl
ljmp
call
test
in
cmp
pop
cltd
jns
push
jb
adc
fistpl
lahf
mov
pop
pop
sbb
push
sbb
mov
pusha
mov
inc
mov
in
mov
jmp
pop
push
into
mov
bswap
jecxz
dec
cmp
mov
jmp
inc
jb
into
test
in
or
clc
arpl
shll
push
push
pop
dec
lods
or
push
pop
mov
imul
and
nop
popf
push
jae
mov
es
xchg
pop
in
sub
fistl
into
fisubrl
fadd
mov
add
loopne
sbb
jno
cmp
inc
sbb
lahf
mov
inc
pop
and
stos
scas
lds
push
and
test
ss
add
pop
scas
mov
add
int
gs
pop
dec
add
push
push
dec
into
xchg
clc
rcr
pop
sbb
jnp
jmp
mov
pop
in
push
xchg
sub
lea
add
movsl
pop
mov
incb
in
pop
imul
addr16
mov
dec
movsb
ja
pusha
dec
cmpsb
add
jp
mov
mov
enter
jns
daa
cmp
aas
xor
adc
movsl
out
lea
sub
faddl
jmp
sbb
push
aam
stos
shr
pop
jecxz
mov
xchg
pop
push
test
push
push
or
out
ret
mov
lods
sub
insb
enter
push
mov
xor
data16
jge
sbb
and
imul
data16
arpl
movsb
or
push
into
int
aas
out
xor
nop
mov
add
push
inc
jo
jg
fsubrl
sbb
das
sub
xchg
or
loopne
xor
fwait
pop
mov
mov
gs
sahf
dec
test
or
push
xchg
fnstsw
cmp
cmp
pop
rol
pop
sbb
imul
aas
test
xor
jecxz
pop
xchg
call
adc
lods
icebp
popa
movsl
xchg
dec
jns
push
mov
test
pop
add
inc
dec
pop
jo
loope
cmpsl
pop
shll
mov
ljmp
cmp
int3
mov
iret
in
gs
and
and
adc
pop
test
pusha
add
mov
fs
push
je
cmp
in
popa
fsubrs
pop
arpl
filds
inc
pop
cs
xchg
nop
mov
scas
add
adc
push
mov
dec
mov
lock
mov
add
adc
xchg
in
xor
addl
fistpl
add
mov
rclb
pop
sbb
dec
mov
sbb
std
jl
andl
adc
mov
pop
js
pop
dec
aas
pop
add
pop
sbb
dec
xor
fidivrs
repnz
lret
inc
scas
jmp
add
adcl
cmpsb
add
dec
insl
addr16
adcb
or
and
test
or
std
sahf
repnz
cmp
mov
adc
clc
pop
add
pushf
lods
add
loopne
and
adc
dec
cmp
or
jae
jg,pt
add
push
loop
cmp
sbb
out
jns
jo
shlb
xor
pop
test
jecxz
cmp
inc
and
push
test
sbb
sbb
or
xchg
fs
mov
push
lcall
stc
pop
mov
int3
sbb
cmp
push
cld
xchg
rcrb
jb
fiadds
mov
xchg
pop
test
mov
sti
rsm
push
mov
jle
aaa
mov
loopne
jp
out
jns
sbb
fbld
sub
addr16
add
push
jmp
mov
dec
mov
cltd
iret
jmp
shl
mul
add
cmp
lcall
fistps
test
aas
sub
dec
adc
mov
pop
rclb
icebp
mov
lcall
cs
faddl
jae
or
xor
and
pop
push
xchg
cwtl
fbstp
push
pop
mov
test
iret
ret
out
pop
insb
cmp
roll
hlt
loope
inc
clc
faddl
cld
ljmp
jecxz
pop
mov
int3
insb
add
imulb
clc
pop
push
xchg
lret
xor
add
pop
dec
xchg
add
rcl
test
or
repz
dec
pop
dec
jae
pop
fiadds
test
push
pop
and
ds
test
sbb
adc
inc
orl
mov
mov
cmp
mov
pop
inc
int3
xor
inc
rcrb
sbbl
push
pop
cmp
mov
in
cmp
repz
mov
fidivrl
lock
movsb
std
xor
pop
notl
dec
xchg
aad
add
mov
sti
sbb
orl
xchg
test
pop
lea
in
mov
pop
imul
sub
rclb
add
add
xchg
mov
cwtl
les
or
daa
pop
mov
cld
mov
mov
loopne
fildll
icebp
imul
lock
and
sbb
ret
pop
pop
push
pop
jl
inc
inc
aaa
std
lret
cld
mov
pushf
addl
imul
mov
jg
jb
arpl
jnp
int3
mov
jbe
mov
inc
jo
push
dec
dec
out
pusha
xchg
cmpb
push
xchg
push
ds
sbb
mov
dec
push
xchg
outsl
jno
pop
jae
jp
repnz
xor
insb
push
ret
into
pop
push
mov
addr16
mov
sub
pop
js
in
or
lods
dec
pop
fcomps
fiadds
sbb
jmp
lock
aam
test
cwtl
shr
fcmovne
push
dec
rcl
pop
scas
jne
mov
dec
fdivl
pop
sti
arpl
std
nop
inc
adc
ds
lret
and
inc
lea
in
xchg
xor
mov
jecxz
xchg
jg
cmc
mov
into
adc
hlt
out
lds
cmp
in
xchg
pop
xchg
push
xchg
push
subb
mov
repnz
loop
imul
in
mov
pop
insb
stos
inc
jnp
pop
sub
cmp
add
pop
push
or
scas
push
pop
xchg
jb
or
neg
popf
jecxz
pop
jo
ljmp
xlat
les
cmp
sub
dec
ds
mov
xchg
je
pop
out
mov
in
jne
dec
pop
iret
out
dec
sahf
inc
xchg
mov
movsl
add
and
pop
pop
andb
xchg
jge
jne
pop
push
xor
int3
popf
xchg
dec
xchg
js
sbb
addb
cmp
push
dec
jae
leave
aas
popf
or
sahf
andl
mov
sbb
mov
fistps
push
xor
cmpsl
jl
shl
filds
popf
ret
push
test
out
stc
mov
dec
inc
mov
pop
xlat
push
popf
pop
das
out
mov
jmp
or
inc
sbb
pop
mov
pop
push
cmp
mov
std
dec
dec
repnz
cwtl
mov
pop
add
out
mov
in
mov
push
lods
sbb
xor
mov
cmp
cmp
pusha
cmpsl
jae
xchg
pop
int3
jae
mov
sub
xchg
xchg
cmp
pusha
xchg
sub
xchg
repz
adc
nop
xchg
inc
add
push
cmp
in
add
ljmp
scas
sbb
aas
mov
fcmovnbe
mov
test
faddl
repz
sub
fwait
pop
or
add
stos
loopne
mov
popf
in
pop
jl
gs
cmpsl
or
pop
int
je
mov
xor
sti
xchg
pop
leave
cmp
mov
pop
push
imul
dec
mov
pop
mov
lods
movsl
dec
and
lahf
icebp
or
mov
mov
lods
jg
in
cmc
pop
jne
mov
xchg
or
and
call
push
lahf
into
scas
ja
mov
pop
test
and
jno
mov
pop
and
jae
push
fcmovnu
inc
mov
stc
sbb
bound
sarl
mov
aad
data16
das
test
jno
adc
xorl
or
adc
loopne
pop
xor
mov
mull
adc
test
fldl
jo
mov
jnp
dec
mov
pop
pop
push
leave
arpl
xchg
cmpsl
cmp
inc
cmp
mov
aaa
dec
adcl
pop
and
adc
jecxz
nop
jnp
lcall
and
mov
ret
mov
rcl
pop
dec
pop
pop
mov
xchg
push
repz
ja
mov
adc
push
xchg
dec
xchg
inc
sub
lcall
or
je
dec
out
aam
popa
aad
push
es
mov
fsubrl
addl
xor
and
test
arpl
pusha
cmp
add
mov
filds
push
int
jge,pn
icebp
push
cmpsb
adc
cwtl
jae
pop
sub
mov
and
call
out
sbb
and
ret
ds
rcr
pop
rcrb
sti
sbb
push
cmpsl
xchg
mov
repz
pop
cmpl
pop
enter
lods
ficoms
es
inc
inc
push
jge
stc
cmp
lahf
scas
mov
or
addr16
scas
aas
sbb
jno
and
adc
andl
and
pop
cltd
jge
xchg
cmpsb
xchg
cmp
test
ds
cmp
cmp
cmc
mov
shlb
add
pop
sub
in
iret
pop
and
or
addr16
ficomps
mov
add
aad
rcl
inc
adc
js
xor
movsl
mov
push
fs
shrb
mov
out
popa
insl
jg
sub
cmp
sub
stc
xor
pop
fsubr
sbb
lcall
es
pop
cmp
dec
out
pop
xchg
clc
cmp
test
je
mov
sbb
mov
stos
mov
sub
mov
inc
mov
cmp
or
data16
pop
sub
xor
dec
int
fsubs
leave
xchg
repz
push
and
icebp
or
pop
lods
ret
loope
stc
cwtl
xchg
shr
fdivr
adc
mov
pop
inc
dec
popa
inc
repnz
cmp
mov
pop
cs
rolb
aam
add
into
mov
in
or
jo
mov
lea
pop
add
lods
dec
outsb
inc
and
xchg
data16
jo
or
mov
add
bnd
sahf
lods
daa
data16
pop
fimuls
negb
sbb
into
pop
cmpsb
push
mov
pop
stos
mov
pop
cmp
jns
cmp
jmp
call
pop
push
jl
aam
xchg
cmp
mov
push
dec
xlat
pop
out
enter
dec
push
xor
mov
in
pop
popa
loope
jb
mov
sbb
push
or
jns
jge
js
mov
ret
mov
mov
movsl
cld
and
pushf
dec
ret
mov
push
imul
mov
repnz
mov
sbb
les
sub
pop
pop
in
aas
and
mov
lret
movsl
pop
sbb
adc
pop
stos
xchg
and
ss
movsb
sbb
arpl
cmpsb
roll
sti
lods
pop
ss
pop
push
add
xchg
fwait
adc
add
jp
fidivrl
fstpt
aas
fstps
icebp
sub
in
shll
pop
iret
xchg
mov
das
push
insb
rcl
adc
sahf
cltd
mov
pop
xor
sysret
xor
mov
and
jle
mov
jecxz
hlt
sbbb
xchg
lods
insl
adc
or
gs
mov
mov
in
nop
cmp
xor
pop
add
jmp
mov
jecxz
cmp
movb
ljmp
in
pop
jns
xchg
lods
mov
loope
hlt
rcr
or
jecxz
jl
inc
inc
mov
js
into
adc
jns
jg
pop
pop
adcb
sbb
data16
xchg
mov
push
in
lds
je
int3
xor
and
mov
pop
dec
sub
out
in
es
mov
pop
std
test
add
xchg
jecxz
push
rorl
add
or
jne
fnstcw
mov
add
cmp
out
add
jo
mov
adc
shl
arpl
std
ret
sub
jg
fimull
ljmp
mov
mov
xchg
and
jns
in
pop
in
shlb
jecxz
pop
decb
lcall
cmp
ret
loopne
pop
jbe
pop
popf
shll
mov
xchg
cld
jns
les
mov
add
fwait
jae
add
js
loopne
repz
or
dec
dec
icebp
add
cmp
shll
sub
int3
sbb
testl
or
add
cmp
data16
test
lods
aas
mov
jae
daa
adc
mov
stos
jbe
cmpsl
call
pop
mov
add
iret
mov
std
cmc
pusha
loope
icebp
lret
ds
mov
cmp
push
push
repz
pop
dec
sbb
dec
and
pop
aam
mov
mov
jl
fsubr
sahf
sbb
sub
loope
and
dec
push
sbb
xor
sub
xchg
loope
sbb
adc
adc
roll
insb
mov
and
mov
movsl
scas
mov
ja
jle
mov
fisubrs
push
fidivrl
or
mov
adc
pop
iret
in
xor
pop
and
fbld
test
push
pop
aas
add
xlat
jae
mov
call
shll
insb
jb
dec
imull
xchg
popa
adc
push
or
push
pop
lea
cs
in
into
pushf
sub
mov
fcmove
jmp
push
sbb
mov
xlat
andb
aas
pop
fnsave
adc
gs
sbb
stos
cltd
push
xchg
aas
call
pop
stc
sub
aas
mov
lea
push
mov
push
and
inc
jbe
aad
ror
mov
cs
mov
cltd
or
pop
and
mov
cmp
mov
mov
inc
fs
inc
xchg
jmp
add
xor
rcrb
mov
push
cmc
add
out
pop
loope
jb
mov
mov
xchg
add
mov
minps
cmp
lds
rcrl
mov
into
cmp
faddl
sub
popf
in
or
into
hlt
ljmp
xor
nop
mov
movsl
popf
push
pop
push
push
pop
mov
lea
xchg
addr16
mov
leave
fmul
pop
jnp
sub
push
ja
inc
push
mov
mov
test
push
enter
mov
mov
adc
or
fiadds
outsl
inc
int3
mov
insl
stc
jge
cmpsl
aad
jl
out
sub
mov
mov
dec
jno
push
jg
cmc
pop
repnz
outsb
jmp
sub
ret
mov
xor
or
or
mov
cmp
mov
insb
add
test
test
pop
popf
sub
mov
dec
mov
call
lods
ja
xchg
nop
mov
les
iret
mov
aaa
xchg
sbb
push
loop
repnz
lcall
inc
pop
sub
cmc
jmp
pop
aas
adc
lahf
es
mov
jnp
cmpsl
fs
sbb
das
sbb
fcom
jo
stos
and
add
lcall
mov
push
mov
sub
add
pusha
scas
out
pop
pop
ucomiss
inc
jecxz
sub
adc
mov
sbb
add
or
adc
add
inc
and
mov
push
inc
out
push
fldpi
cmc
push
cmp
sahf
push
pop
jnp
js
mov
lret
push
inc
inc
cmpsl
and
lock
pop
fcoms
aaa
jnp
aad
pop
jle
lock
mulb
mov
in
push
stc
je
mov
pop
in
sub
rol
outsb
bound
insl
xor
cmpsl
pop
rclb
inc
push
xchg
int
out
and
ds
or
mov
mov
outsb
push
lds
xor
hlt
lods
add
inc
adc
test
mov
aam
fists
flds
pushl
mov
aas
pop
cmpsl
int
inc
lods
ret
pop
mov
add
out
pop
addr16
and
mov
jge
mov
ror
fstpl
cmpsl
nop
ljmp
mov
inc
pop
mov
xor
out
or
pop
test
inc
mov
or
pop
fwait
xrelease
fimuls
mov
gs
sub
push
ss
xchg
fistpl
mov
pushw
fisubs
call
gs
xchg
xchg
nop
outsb
cmc
or
into
push
movsl
pop
mov
add
cmp
lret
lret
fwait
mov
into
test
mov
mov
pop
aaa
sbb
sub
jg
sahf
mov
int
scas
insb
or
cmc
and
sbb
pop
mov
fwait
push
in
cmp
inc
hlt
xor
pop
clc
push
adc
enter
movsl
test
mov
fwait
stc
addr16
or
sub
sbb
pop
xchg
loop
jae
in
add
fdivrs
clc
je
int3
pop
sub
and
insb
les
mov
cmp
mov
jo
adc
imul
lcall
mov
or
clc
xchg
int
mov
mov
pop
jnp
push
cmp
mov
loopne
and
cmp
pop
add
pop
pusha
mov
mov
xchg
xor
loope
repnz
into
mov
sub
out
jb
insb
mov
pop
inc
mov
ret
adc
push
sbb
sub
ret
push
xchg
inc
mov
sub
enter
add
mov
add
test
mov
dec
jmp
popl
fistpl
popf
or
lods
push
dec
cmpsb
test
cmp
jp
mov
orb
fwait
mov
mov
or
imul
pop
mov
aam
pop
pop
stos
xchg
xor
cmp
dec
clc
or
push
pop
aaa
push
add
sbb
movsl
jp
cmp
xchg
loope
pop
testb
in
roll
jge
sbb
xchg
push
push
imul
pop
leave
push
enter
es
cwtl
fidivrl
testb
popf
insb
jb
pop
cmp
dec
pop
mov
jg
fld
scas
addl
stos
test
xor
fcomps
jg
pusha
ss
mov
popa
test
mov
and
aad
ud0
pop
jno
mov
cbtw
and
pop
adc
dec
pop
or
out
mov
mov
in
cmp
fisttpll
inc
fnstenv
cmp
xchg
sarl
xchg
pop
xchg
or
mov
pop
pop
mov
out
adc
pop
adc
inc
or
mov
fdivs
jl
test
or
jo
ljmp
out
cmpsb
xchg
and
in
jne
inc
mov
pop
pop
lods
fimull
jns
mov
movsb
mov
inc
ss
mov
nop
xor
ljmp
mov
jmp
pop
into
outsb
lea
ret
daa
dec
pop
xchg
ficoms
inc
sbb
int
mov
mov
jo
mov
hlt
int
or
cmp
pop
and
add
pop
pop
ja
push
dec
scas
xchg
xchg
in
pop
daa
ljmp
pop
lcall
mov
je
in
rclb
dec
pop
cmp
xor
call
arpl
mov
outsl
insl
lret
js
jo
cmc
loope
movzwl
xchg
ljmp
lock
movsl
js
jb
xchg
ret
add
cmp
push
mov
add
mov
ljmp
add
and
xor
pushf
les
inc
cmpsb
xor
mov
or
cmp
adc
pop
flds
mov
dec
mov
pop
movsb
mov
dec
aam
ficompl
pop
mov
push
arpl
pusha
mov
cmp
or
sub
mov
fidivl
pop
mov
mov
aam
lods
jge
mov
lret
pop
jno
cs
dec
push
add
call
push
aas
fcmovbe
insb
or
sahf
in
flds
push
test
adc
inc
es
jecxz
adcl
int3
or
je
cmp
pop
mov
dec
outsb
loop
aaa
cmp
jl
pushf
sbb
popf
sbb
clc
mov
into
pop
jnp
mov
shll
or
rcrb
jne
test
dec
data16
add
enter
xchg
mov
clc
push
sbbb
cmp
int
cld
in
pop
mov
xchg
fnstenv
xchg
loope
sbb
xchg
jle
push
mov
cmc
pop
pop
mov
xchg
mov
movsl
or
inc
mov
daa
stc
leave
in
stos
insb
cmp
enter
ret
pop
test
ljmp
and
inc
xchg
add
js
cmp
sbb
mov
aam
sbb
mov
add
mov
xchg
mov
cld
aas
push
and
ret
arpl
adc
dec
mov
shl
sbb
cmp
rorl
nop
arpl
aaa
cmpsb
shlb
adc
cmp
pop
inc
mov
xchg
inc
faddl
cs
js
dec
movl
mov
pop
cltd
fidivs
jmp
push
lock
pop
repnz
or
mov
add
sub
and
xor
rol
jg
pop
sbb
cli
mov
push
pop
jne
cltd
jmp
movsb
lcall
jecxz
jnp
pop
and
rol
sbb
adc
mov
int3
sbb
lds
mov
pop
add
push
std
loopne
sti
mov
mov
hlt
or
mov
jg
pop
dec
cmp
xchg
pop
ror
dec
aad
sub
ljmp
pop
mov
sbbl
lea
loop
cmp
pop
es
out
ficomps
jno
xchg
jb
adc
andb
lods
icebp
jmp
popf
stos
pop
xor
adc
jbe
inc
adc
sbb
mov
pop
in
mov
fidivl
mov
bound
pop
jl
sub
mov
out
gs
cmp
rcrb
fidivs
lcall
ss
call
fbstp
adc
or
cmpsl
jae
pop
push
pop
xchg
lods
lret
jnp
add
idiv
popa
cmpsb
jmp
scas
dec
gs
pop
imul
add
mov
mov
pop
mov
lahf
ja
mov
inc
push
mov
sub
inc
repnz
jmp
std
fcomp
cmc
lods
adc
loop
cmp
notb
sub
ss
xor
add
cs
lret
insl
int
cmp
inc
sub
pop
jnp
out
cmp
imul
xchg
rolb
adc
mov
sub
out
xchg
loopne
pop
loope
ss
dec
push
sbb
data16
repnz
aam
lods
mov
pop
addl
aad
pop
outsl
ret
mov
pop
sarl
call
test
pop
frstor
fwait
push
ja
dec
pop
xor
push
bound
adc
xchg
aas
mov
ret
sti
test
sbb
mov
jnp
aad
push
dec
sub
loopne
jg
arpl
les
fnsave
adc
pop
dec
mov
sub
in
pop
push
mov
les
and
xchg
pop
jle
push
sub
inc
lods
and
push
cmp
scas
negl
fcmovu
stos
mov
dec
sbb
fwait
mov
mov
test
inc
sbbb
in
adc
jle
movsl
pop
leave
push
bnd
fcompl
lcall
pop
inc
dec
pop
add
insb
jnp
jmp
out
sub
pusha
sti
or
and
insl
out
in
es
sub
sub
int
dec
add
loopne
sbb
fwait
das
enter
cmp
popl
js
repz
cmp
loop
cmc
test
xchg
push
lods
mov
out
mov
fnstsw
test
jg
ret
pop
pop
imul
shlb
push
xor
jb
test
fisttps
sbb
dec
push
xorl
or
pop
cmp
pop
sahf
jcxz
pusha
pop
call
testl
aam
arpl
mov
pusha
enter
jns
push
or
lcall
inc
xchg
sub
sbb
pop
sub
outsl
clc
or
cmp
jnp
icebp
pop
push
dec
or
mov
mov
pop
xchg
mov
jp
mov
pop
inc
mov
fistl
jg
jnp
jne
lret
stc
sbb
ja
push
loope
je
pop
or
pop
xchg
mov
pop
pop
mov
loopne
std
xor
mov
mov
rorb
sbb
cmp
pop
repz
pushl
rcpps
sbb
xor
ss
mov
mov
dec
pushf
pop
ret
dec
mov
sbb
cmp
cmc
shrl
repnz
call
pmuludq
sub
inc
aad
xor
and
pop
cmp
out
fildl
mov
sub
loopne
jno
aad
sub
pop
and
pop
dec
xchg
rorb
cld
add
scas
and
cli
enter
cld
insl
pop
arpl
or
inc
insb
js
jbe
iret
pop
in
nop
jg
stos
outsl
pop
fwait
pop
xchg
add
inc
ds
pop
jge
sbb
mov
jb
pop
jmp
add
outsb
out
pop
push
push
nop
dec
imul
test
aas
xchg
incl
mov
pop
inc
cmp
scas
sbb
ret
mov
popa
pop
mov
mov
mov
testl
aad
mov
fadds
cmp
in
push
repnz
repz
ds
arpl
test
inc
sub
in
mov
aam
lods
pop
pop
jnp,pt
aad
out
call
lret
ret
loope
stc
clc
adcl
xor
cmpsl
enter
enter
pop
mov
jae
jecxz
or
pop
mov
lock
pop
mov
std
push
icebp
sub
mov
cltd
dec
mov
lods
pop
and
push
jae
jl
jp
into
mov
pop
subb
loopne
and
int
or
sbb
in
mov
cmc
pop
pop
xor
js
data16
jne
and
cmp
mov
pop
enter
xchg
inc
sub
sbb
movsb
mov
imull
stos
sub
cmp
sub
mov
add
xchg
outsb
jg
jb
jno
enter
aas
nop
cmp
fs
imul
test
aas
jnp
mov
popf
stos
jb
pop
in
lods
mov
inc
pop
cmpsb
xor
fldt
xchg
add
and
shl
pop
rorl
ret
push
clc
pop
call
mov
mov
inc
pop
cmp
cmpsb
pop
daa
xlat
add
or
arpl
call
cwtl
dec
xchg
test
cmp
mov
push
pop
insb
jl
pop
adc
xor
add
sbb
arpl
or
pop
fstpt
xor
or
inc
inc
mov
mov
sub
repz
push
test
inc
pop
cmpsb
bound
divb
pop
jns
ficoms
dec
stc
or
sbb
in
arpl
ljmp
xchg
push
mov
jp
add
pop
pop
fmul
mov
pop
je
popa
dec
mov
xor
mov
inc
dec
into
pop
data16
daa
mov
add
push
cmp
dec
inc
cmp
dec
push
stos
or
pop
jb
sub
jl
imul
mov
fst
push
xchg
pop
mov
in
movsb
sub
addr16
test
enter
aas
push
rclb
ds
jnp
call
sub
sbb
jp
mov
xchg
int
mov
jl
push
mov
push
repnz
test
cmp
incl
push
outsl
movsb
cmp
pushl
inc
fabs
pop
gs
stc
cs
es
add
movsb
mov
idiv
loop
loopne
mov
shrl
pop
mov
mov
mov
insb
mov
mov
es
aas
not
outsl
or
test
stos
xchg
add
in
push
js
inc
dec
pop
test
loope
push
bound
sub
push
jae
sub
insl
fistl
hlt
add
pop
lods
dec
test
xchg
pop
fsubrs
out
pop
and
fnsave
jmp
adc
jb
and
dec
movsl
adc
test
ret
scas
xchg
data16
add
jp
pop
pop
xor
ja
cmc
pop
jecxz
pop
int3
jae
repnz
popf
movsl
jbe
xor
addr16
jmp
loop
pop
jae
sub
in
cwtl
cmpsl
sbb
inc
and
push
aas
sbb
pop
lock
mov
mov
cmp
sahf
jge
in
sbb
dec
fs
jecxz
sub
jl
xorb
mov
push
add
scas
pop
add
aaa
add
mov
hlt
cmpb
in
mov
fisubrs
iret
pop
and
bound
cmp
xchg
mov
iret
pop
mov
fiaddl
sbb
shr
adc
scas
and
movb
cmp
popa
bound
mov
xor
pop
dec
add
and
daa
pushf
aas
fdivs
jno
cmpb
repnz
jl
push
rcrb
mov
cmpsb
mov
and
inc
dec
imul
xchg
jp
std
test
add
push
push
xlat
mov
mov
pop
mov
sbb
shrl
dec
in
cmpsb
add
or
out
cmp
add
pop
stos
jp
ja
or
enter
shll
xor
cli
dec
clc
imul
xor
jnp
jmp
sub
enter
and
add
push
mov
adc
imul
int
mov
pop
mov
xor
add
aas
adc
pop
das
or
test
inc
adc
lods
daa
push
sbb
inc
sbb
push
daa
cltd
fmuls
add
xchg
in
dec
mov
daa
out
sbb
cmpsb
fmul
jae
daa
mov
cli
cld
dec
jo
or
pop
jns
sbb
clc
dec
mov
jns
pop
lret
add
cmp
imul
cmc
enter
jge
popa
addr16
and
pop
or
or
adc
inc
add
mov
adc
hlt
ljmp
or
lahf
fbld
mov
adc
xorb
mov
push
aas
adc
and
xor
pop
mov
pop
xchg
pushf
nop
into
cli
add
xor
or
out
pop
pop
psubusb
enter
leave
and
adc
mov
es
cmp
aam
adc
je
jb
rcl
pop
sbb
add
xchg
lods
inc
subl
add
xchg
and
xchg
mov
mov
lret
jg
aaa
jne
and
jae
adc
out
loopne
cmp
add
and
shll
rcrb
orb
mov
pop
pop
or
or
jmp
sbb
decl
inc
daa
sbb
push
cmpsl
adc
leave
mov
lahf
movhps
sbb
test
icebp
jmp
cwtl
and
bt
adc
sbb
push
or
out
inc
pop
add
or
jecxz
lds
fisttpll
int
gs
outsl
clc
push
sahf
jle
push
es
or
mov
cmpsb
shlb
cmp
fistpll
outsl
cmc
pop
cmp
dec
iret
mov
movsl
cmp
push
in
sbb
fcompl
les
into
leave
add
adc
popa
jae
pop
sbb
imul
sub
test
out
mov
add
or
cmp
daa
pop
lds
sbb
ror
syscall
and
pop
add
jp
jmp
add
xchg
in
sbb
dec
es
push
adc
or
shrl
jo
stos
or
shrb
mov
sub
push
and
jns
add
or
inc
movsb
dec
adc
into
mov
mov
stc
pop
adc
and
lea
pcmpgtw
xchg
gs
aaa
rolb
mov
popa
cmp
or
dec
xchg
mov
out
mov
add
aaa
jge
fs
pop
jp
stos
test
imul
inc
mov
and
scas
jnp
jge
and
pusha
adc
push
fwait
add
or
cmpsb
xchg
adc
add
adc
and
cmp
lods
adc
enter
nop
xchg
cld
insb
lds
test
jbe
das
cmp
in
inc
push
cmp
jns
inc
stc
mov
add
fsubs
les
imul
out
daa
mov
daa
jl
call
sbb
daa
out
dec
xor
inc
test
scas
out
out
xor
fnsave
cmp
jmp
add
add
or
daa
mov
xor
stc
mov
inc
lock
inc
and
pop
popf
test
or
sbb
cmp
jmp
add
mov
jbe
adc
jne
xchg
inc
adc
je
es
adc
sbb
cs
and
mov
lods
daa
jg
mov
xchg
push
cmp
lds
dec
mov
pop
sbb
mov
dec
lahf
cld
aas
mov
popf
dec
push
xchg
insl
push
jb
add
shrb
sbb
pop
jp
and
push
lahf
and
insb
dec
fstl
add
stos
mov
andl
shlb
inc
push
add
incl
inc
fisttpl
adc
add
daa
mov
stos
or
sbb
add
xor
push
test
jmp
fs
or
cmc
imul
cld
jo
xorb
pop
xchg
jg
dec
fidivs
aas
mov
lcall
xor
mov
push
adcl
popf
mov
jne
pop
pop
sbb
cmp
aam
add
and
ja
mov
cmp
dec
push
xchg
sbb
xchg
scas
xor
cmp
aaa
and
pop
xorb
inc
lea
add
daa
and
jne
test
sub
inc
mov
rcrb
pop
arpl
inc
insl
outsl
mov
cmpb
dec
dec
or
scas
mov
or
pop
or
dec
ja
or
ja
or
pusha
sub
inc
sbb
add
gs
inc
setg
mov
enter
jg
dec
arpl
push
and
out
sbb
mov
or
add
pop
clc
add
adc
cs
jno
inc
or
pop
pop
mov
inc
push
or
insb
inc
pop
pop
push
inc
or
test
sbb
mov
xchg
popa
out
ja
xchg
in
filds
jle
xchg
push
xor
imul
fdivrs
aas
insl
pop
xchg
sbbl
fs
cmpsb
pop
iret
cli
pushf
pop
adc
fucomi
orl
sub
in
dec
inc
aas
sub
rcr
aad
mov
cld
jae
scas
pop
xor
xor
loopne
add
add
or
mov
xchg
jl
push
xchg
mov
or
push
ss
outsl
repnz
test
or
inc
dec
push
aas
decl
push
jnp
jg
addl
outsl
repnz
xchg
inc
leave
scas
inc
push
mov
cmp
outsl
seta
cmpsb
pop
and
sbb
and
add
and
daa
xor
mov
inc
inc
daa
leave
sbb
and
jecxz
inc
sub
shrb
mov
pop
adc
sti
mov
push
and
xor
or
mov
mov
insl
add
or
pop
rorl
mov
shl
lock
adc
xor
addl
or
rcrl
lea
and
add
ret
dec
adc
push
xchg
testb
or
mov
jns
pushf
inc
daa
mov
and
inc
pusha
jmp
les
test
push
outsb
divl
and
sub
push
cld
mov
and
push
pop
or
adc
and
sti
sub
and
pop
out
dec
and
add
jg
cmp
jns
shl
rolb
push
xchg
inc
push
sbb
jg
adc
loopne
aas
lahf
pop
mov
test
add
out
sbb
push
addr16
inc
xchg
dec
sarb
lret
jl
add
sbb
or
movups
push
xchg
aaa
cwtl
andl
popa
cmp
call
jecxz
cmp
xchg
sbb
xchg
pop
cmp
les
js
mov
and
mov
ja
pop
and
dec
xchg
iret
out
pusha
sbb
inc
mov
cmp
fisttps
outsl
push
xchg
add
nop
cs
xchg
clc
cwtl
xchg
mov
das
inc
pop
push
jge
jmp
cs
mov
inc
push
div
cli
xchg
or
mov
sub
cltd
movsl
inc
push
iret
daa
lock
mov
das
jge
aam
iret
adc
sbb
sub
mov
insl
inc
jg
arpl
pop
pop
push
mov
mov
add
pop
xor
in
lret
sub
add
jecxz
xlat
mov
mov
add
cs
jnp
jmp
push
xor
imul
imul
cmp
nop
aaa
xchg
xlat
mov
test
cmpsb
je
fildll
insl
xchg
lea
arpl
pop
mov
cli
mov
mov
mov
add
push
inc
mov
xor
es
cld
inc
mov
inc
je
or
scas
dec
sub
loop
add
xchg
out
pop
loope
push
scas
sub
mov
xor
sti
push
in
subl
adcl
fstps
js
stc
adc
gs
cmc
arpl
popa
and
inc
pop
dec
lahf
in
xor
addl
pop
enter
add
cmovnp
mov
adc
sub
or
xor
popl
setg
fisttpl
scas
cmp
pop
psubusw
or
cli
cmpsb
wbinvd
test
inc
pop
and
inc
jae
or
iret
cmp
adc
pop
or
jne
shl
subl
inc
jnp
push
mov
push
sub
icebp
dec
cmp
fldenv
jmp
je
adc
out
ret
mov
xchg
out
mov
mov
and
ja
pop
scas
or
daa
iret
mov
clc
lock
inc
mov
sbb
pusha
out
mov
stc
das
arpl
movsb
sbb
cmp
enter
push
cmp
sahf
inc
test
or
push
mov
pop
mov
and
push
mov
adc
adc
mov
adc
mov
sub
dec
call
daa
or
mov
ret
cmp
sbb
aas
imul
and
jp
paddb
sbb
sub
iret
mov
popf
dec
sbb
in
mov
loopne
fstpt
scas
pusha
insl
sub
mov
jmp
xor
fwait
jg
xchg
and
inc
dec
and
movsb
je
cltd
fildll
adc
fnstsw
rorb
cmpb
mov
push
add
js
out
inc
or
ret
adc
or
mov
inc
adc
loop
adc
or
cwtl
pop
xorb
adc
sub
filds
rclb
pop
shr
pop
jo
jecxz
daa
sub
insl
and
pusha
ja
out
xor
in
mov
cmp
xlat
pop
inc
cmp
sub
sub
fbld
aas
cs
lcall
adc
mov
sub
sub
inc
aas
adc
mov
xor
test
mov
pop
out
ret
sub
js
lret
filds
and
mov
lret
dec
push
fstl
iret
fistpll
loopne
repz
sub
mov
push
in
sub
xlat
or
push
cmpsb
push
dec
aas
jle
dec
dec
or
jo
out
add
daa
fwait
and
cmpsl
cmc
ja
cmp
std
inc
les
lret
scas
cmp
arpl
pop
inc
xor
add
pop
xlat
jmp
ja
loop
sbb
cltd
ficomps
das
gs
add
fwait
imul
push
jae
push
or
ja
push
dec
ja
fsubrs
or
ja
daa
xchg
ja
inc
xlat
xchg
add
jo
xlat
inc
daa
xchg
dec
mov
stos
pop
xor
inc
fadds
cmpsl
xlat
pop
daa
inc
xor
fs
jo
push
mov
xchg
push
inc
sub
daa
add
gs
outsb
fadd
loopne
xor
mov
aas
ja
cltd
ret
lret
popf
xchg
and
loop
mov
xchg
fistps
jo
mov
xchg
pop
xchg
push
inc
sub
daa
js,pn
xchg
push
aas
cli
outsb
insb
push
push
mov
cmp
out
push
jns
aaa
mov
iret
lahf
xchg
pop
push
adc
iret
inc
pop
inc
popl
pop
sub
cmp
maxps
adc
or
dec
add
or
cmp
pop
dec
pop
int3
jl
pop
pusha
add
outsl
stc
inc
fisttps
push
js
outsl
sub
pop
adc
sub
jmp
jg
fcomi
mov
shll
lret
stos
ss
push
lret
movsl
out
jecxz
loope
scas
imul
cltd
out
iret
sub
sbb
push
push
xchg
sub
int
sbb
jo
ret
lahf
daa
sub
and
mov
into
xor
in
or
lock
inc
pop
mov
cmp
jae
pop
jmp
sub
dec
cmp
movq
daa
lods
inc
pop
inc
sbb
pop
daa
fiadds
mov
jg
xchg
push
add
leave
out
dec
daa
jp
jg
mov
das
add
pop
push
insb
push
pop
fidivs
cmp
arpl
pop
aaa
pop
dec
add
test
or
bound
lock
or
pmullw
and
rclb
out
inc
out
mov
pop
dec
out
mov
sbb
push
jecxz
sbb
add
cwtl
or
pop
xor
test
adc
inc
lahf
das
xor
xlat
push
int
xchg
xchg
add
andnps
or
in
sub
pop
and
aad
or
cs
dec
scas
mov
xlat
testl
cmp
mov
adc
ret
pop
fwait
dec
pop
sub
push
addb
out
xchg
jo
xchg
push
int
ret
cmp
jge
jmp
ss
sbb
fwait
xlat
adc
nop
pop
dec
pop
xlat
inc
push
cmc
dec
adc
clc
ljmp
notl
sbb
dec
dec
mov
scas
xor
jne
sbb
push
lds
push
adc
das
sbb
jge
fwait
mov
add
cwtl
test
xchg
fs
out
push
pop
idivl
cmp
push
xchg
lea
add
add
mov
aas
and
dec
mov
mov
mull
rorb
pop
dec
lahf
loop
call
outsb
sub
andl
test
iret
push
and
sbb
rcrb
xchg
enter
sbb
xor
pushf
fadds
imul
inc
ja
jmp
dec
setae
lods
mov
das
add
sbb
push
out
or
push
pshufw
fists
jmp
das
testb
push
mov
sub
cmp
fnstenv
js
arpl
adc
in
push
and
popf
push
rorl
adc
fs
das
xchg
mov
xchg
sbb
push
test
or
jl
in
inc
cmp
pop
sub
add
xchg
daa
sbb
iret
es
es
jg
pop
int3
testl
out
bound
mov
iret
adc
outsb
lahf
lahf
mov
addl
push
xchg
or
das
das
push
test
mov
and
cmpsl
jnp
or
dec
add
sbb
or
loope
fcoms
adc
mov
std
cmp
aad
adc
xor
jg
pop
insl
inc
or
and
iret
cltd
rcr
fwait
jge
adc
daa
pusha
popf
mov
lahf
inc
lods
cwtl
lods
fsubrl
cmp
mov
cwtl
inc
repnz
fidivrs
add
xor
imul
leave
pop
repnz
add
mov
lahf
jnp
je
mov
xor
sub
aas
and
inc
inc
dec
xchg
sub
xchg
push
lret
std
sbb
push
xorl
xlat
and
adc
xchg
mov
in
ss
mov
adc
pand
repz
testb
icebp
xlat
dec
xor
scas
cmp
sbb
push
gs
aaa
in
push
pop
push
adc
testb
mov
addr16
mov
loopne
mov
outsl
sub
cmpsb
pop
lcall
pushf
movsl
and
or
mov
mov
jmp
jmp
add
xchg
mov
shl
lcall
sub
push
jne
adc
stc
aas
int3
mov
insl
aaa
inc
adc
bound
ret
xchg
int3
or
and
add
sub
sub
cwtl
mov
push
jbe
mov
xor
cmp
dec
xor
sbb
daa
sub
dec
outsl
nop
imul
cmp
cmp
loopne
fdivrs
or
mov
mov
push
xor
jle
sbb
cmpb
icebp
ret
das
xchg
in
dec
fisubl
mov
nop
in
or
jecxz
mov
loop
sub
ja
inc
pop
adc
xlat
inc
rcr
ret
daa
sbb
pop
and
call
cmp
mov
mov
lahf
pop
mov
lock
add
pop
push
mov
jg
or
and
sbb
daa
setl
adc
cmp
iret
sub
roll
cmpsl
xor
cmp
ja
xor
shll
push
insl
daa
dec
inc
sub
dec
loopne
dec
jae
inc
or
int3
enter
movsl
sbb
xor
ja
inc
daa
pop
lahf
daa
sub
std
mov
pop
xchg
pop
mov
mov
decl
and
xchg
inc
and
pushf
pop
mov
mov
insb
and
pop
int3
or
inc
lahf
hlt
pusha
push
sub
cmc
jae
pop
or
add
out
cli
movsb
js
cwtl
sbb
pop
add
rclw
addr16
xchg
mov
daa
fs
cmp
pop
inc
addr16
pop
xchg
xchg
bound
daa
outsl
iret
adc
inc
addr16
cmp
lock
shrb
push
lods
mov
jno
add
adc
sub
cmp
dec
cmp
xchg
in
das
cmp
xor
fs
sub
mov
mov
idivl
shl
mov
sahf
xlat
hlt
push
fcompl
adc
lea
inc
lret
ret
cmp
dec
repnz
lock
jp
cmp
pop
ja
inc
and
aaa
xor
mov
loop
aas
aas
and
icebp
int3
sbb
jbe
xchg
imul
inc
pop
jge
lahf
pop
inc
iret
aam
jg
repnz
addr16
cmp
js
xchg
add
test
repnz
jmp
xchg
pop
ret
imul
call
lahf
jno
pop
inc
inc
pop
or
and
insb
outsl
and
pop
lds
pushf
lret
cmpsb
mov
sbb
cmp
jmp
pop
aas
cmp
inc
mov
inc
int
push
push
lret
cmp
repz
mov
js
push
xlat
inc
mov
pop
jne
dec
lock
cmp
add
clc
cld
inc
sbb
cs
rcll
inc
xor
test
lds
cwtl
aas
and
das
sub
jl
inc
out
xlat
xor
or
dec
daa
movsb
adc
mov
or
mov
nop
dec
iret
cmp
loope
and
xchg
mov
test
adc
xchg
daa
xchg
lods
outsl
fadds
and
mov
jg
add
inc
mov
cwtl
pusha
imul
orl
mov
push
sub
je
lods
dec
mov
adc
xlat
mov
lcall
xchg
cwtl
xchg
mov
ret
push
int3
and
or
dec
sbb
fs
xlat
loope
xchg
iret
xor
aaa
rcll
mov
aas
lahf
test
out
pop
cmp
mov
pop
pop
ret
cwtl
sub
push
aas
js
out
aad
adc
xor
gs
xor
data16
cmp
push
and
sbb
xchg
or
inc
fwait
cmpl
jge
and
cmc
push
jnp
das
pop
mov
out
dec
leave
sub
cmp
in
cmp
lods
arpl
ja
cmc
mov
mov
and
jnp
dec
xlat
repnz
aad
cwtl
nop
maskmovq
mull
add
jle
mov
das
aas
mov
es
adc
test
mov
std
nop
shll
lret
cmp
mov
int
jne
daa
adc
aas
inc
call
mov
jg
xrelease
or
cmpsl
aaa
lret
push
adc
aas
inc
sub
test
fwait
jmp
pop
inc
js
xor
subl
pop
mov
mov
add
push
stos
add
push
push
xor
loop
xchg
arpl
dec
xor
pop
ljmp
push
or
sti
jae
mov
and
dec
push
and
test
iret
jns
mov
inc
and
jns
mov
jne
or
jne
inc
in
repz
adc
divl
and
xor
stos
aad
push
pop
mov
rorb
pop
cmp
jo
iret
pop
push
aaa
xchg
jae
out
divl
lock
imul
mov
mov
shrl
push
sub
cmp
sub
orb
sbb
das
cmp
sbb
cld
shll
jae
ja
sub
movsl
adc
aaa
mov
sti
adc
imul
inc
insb
ja
mov
fbld
add
xlat
nop
nop
fnsave
adc
and
and
inc
jp
pop
fstpt
cmp
inc
jmp
dec
mov
mov
cmpsl
pop
aas
xor
daa
rcl
pop
loope
inc
pop
dec
xlat
jno
ffreep
jg
mov
jmp
push
aas
adc
jle
adc
dec
movsb
mov
and
sbb
daa
ret
mov
imul
mov
insl
xlat
lods
jae
pusha
dec
mov
jno
addr16
inc
or
mov
push
pop
scas
and
cmpsl
in
inc
lahf
lea
pusha
inc
or
adc
out
push
jmp
adc
mov
push
sub
in
pusha
cmpsb
loope
sub
das
cmp
repnz
xor
sbb
das
inc
xchg
mov
mov
add
xchg
or
push
mov
pusha
daa
aas
les
jne
adc
jne
icebp
xchg
cwtl
into
add
out
inc
jle
mov
lds
add
jnp
or
dec
sahf
or
adc
jmp
cwtl
mov
inc
inc
jo
and
sbb
lods
subl
or
incl
jae
sub
psubsw
lret
inc
cltd
mov
fucomip
ja
andl
in
cmp
sahf
sbb
int
add
cmpl
inc
pop
aad
add
call
in
inc
push
inc
ss
inc
jnp
movsl
idivl
xor
jg
lock
or
repnz
inc
dec
int
adc
mov
fwait
cld
out
mov
stc
dec
mov
mov
setae
addb
jb
arpl
repz
into
ret
pop
das
es
or
out
rcrb
jmp
mov
clc
out
mov
push
mov
mov
jne
and
shr
cmp
mov
scas
in
xor
mov
ja
inc
test
fistpl
jle
mov
sahf
mov
ja
lods
xor
and
stos
shll
inc
xchg
movsl
mov
shlb
aam
mov
xchg
out
push
sub
sahf
push
pop
aaa
push
cmp
lock
enter
iret
lahf
loop
adc
iret
xchg
lea
js
mov
xchg
loopne
or
pushf
add
lret
fidivs
lret
xchg
pop
xor
xchg
jge
cmp
jo
popf
add
cmc
cmp
add
out
stos
or
pop
dec
mov
sub
aad
or
or
fstpt
divl
sub
cmp
or
pop
pop
xchg
fistpll
sub
in
iret
aaa
cmp
arpl
out
mov
mov
jo
aaa
adc
ret
sub
leave
sub
xor
mov
push
imul
mov
es
dec
pop
repnz
sbb
jge
mov
sub
pop
cmp
cld
outsl
push
fwait
iret
rcrb
dec
pop
xchg
adc
cmp
and
imulb
adc
daa
add
push
cmp
adc
push
pop
rclb
push
cmp
jle
dec
jg
jl
adcl
and
loopne
in
popf
fistl
mov
insl
cli
ret
mov
lret
inc
cwtl
fildll
cs
pop
je
pop
push
sub
out
fidivl
in
dec
aad
aas
ret
jmp
or
dec
mov
test
adc
test
out
lret
xlat
or
push
outsb
adc
adc
or
add
scas
popa
inc
jno
add
test
ja
loope
mov
in
add
or
or
and
xchg
xchg
dec
out
or
fwait
mov
add
xor
roll
mov
cmp
ja
xchg
mov
dec
repz
mov
lret
in
dec
adc
cs
test
and
xchg
stos
xchg
sub
mov
sub
mov
inc
push
inc
test
mov
lret
mov
mov
fildll
and
mov
arpl
fs
iret
push
adc
pop
subl
adc
repnz
mov
cmp
out
mov
clc
push
sub
pop
les
dec
clc
adc
jnp
mov
and
lock
dec
subb
inc
sbb
cmp
add
fs
scas
arpl
push
roll
mov
jmpw
add
call
push
jb
in
sub
xchg
and
popa
nop
arpl
iret
out
xchg
jmp
and
enter
iret
and
cltd
stc
pop
sub
fcompl
lea
ss
and
aad
lods
mov
cs
inc
lock
push
shl
pop
imul
ds
dec
inc
and
fistl
test
rclb
xor
and
stc
add
aas
lret
and
adc
adc
adc
xchg
push
dec
xchg
imul
out
int
cmpsl
iret
pop
pop
cld
aad
outsl
push
jno
scas
jbe
sub
in
mull
and
outsl
push
and
nop
mov
and
sbb
les
dec
inc
push
imul
pop
cmp
dec
push
mov
push
push
scas
cmp
subl
lahf
adc
daa
inc
xchg
xor
stos
loope
cmc
movsl
nop
xor
iret
out
in
in
dec
cmpsl
xchg
lahf
rolb
das
sub
popa
dec
and
movsb
xor
adc
jne,pn
cmp
pop
add
stc
push
roll
mov
out
es
out
pop
add
lret
clc
pop
xlat
xchg
xor
pusha
andl
rorl
inc
js
lret
xor
mov
push
outsb
nop
dec
aas
xlat
sti
rcl
movsb
push
mov
shrb
mov
and
in
inc
cmp
pop
mov
xor
cwtl
loop
call
daa
sub
mov
inc
pop
pushf
ja
inc
lahf
cmp
das
fdivrp
and
popf
ja
notl
and
insl
std
xchg
xchg
sub
xchg
out
sub
lahf
sub
outsb
cltd
popa
insl
int
fisttpll
into
sahf
mov
mov
add
and
arpl
ja
pop
inc
das
pop
insl
lahf
mov
sbbb
fwait
inc
jg
xlat
sbb
dec
adc
xor
mov
jle
cwtl
lods
inc
pop
pop
cmpsl
mov
push
ror
pop
pop
jecxz
xor
jae
mov
xor
adc
dec
sub
and
or
add
pop
push
mov
sub
out
mov
daa
sbb
cmp
xchg
xor
and
adc
int
cmp
push
and
sbb
fsub
clc
push
lods
mov
mov
in
arpl
mov
inc
dec
cmp
movb
adc
ss
mov
add
xchg
les
pop
sub
jecxz
iret
decl
adc
pop
lods
mov
sbb
ja
rol
pop
loopne
ss
or
std
js
jae
add
fwait
ret
dec
xlat
mov
sbb
pop
sbb
inc
mov
jg
and
orb
fisttps
cli
mov
sbb
das
aad
shrb
pushl
sbb
dec
pop
outsl
cltd
mov
sbb
repnz
push
cld
or
lret
imul
shll
or
or
sub
cmc
or
lahf
mov
out
dec
rcll
popf
sub
dec
cmpsl
adcb
inc
clc
clc
add
adc
loopne
jae
pop
or
data16
xchg
ja
or
lock
xchg
adc
or
dec
test
insl
inc
out
or
adc
pop
mov
xchg
mov
insl
cmp
outsl
xor
xor
adc
cld
sub
inc
pusha
mov
xchg
or
call
rcrl
xchg
or
dec
lret
push
pusha
mov
in
cmpsb
sbb
sbb
inc
inc
out
push
xlat
sbb
fs
aam
pop
lods
lahf
iret
and
jge
mov
iret
ret
jge
fsubs
sbb
les
nopl
imul
adc
inc
inc
inc
stos
cmc
xchg
mov
lahf
sbb
inc
mov
push
pop
push
aaa
pop
xchg
dec
lods
cltd
xor
and
jns
cwtl
aaa
or
addl
movl
mov
pop
xchg
xor
and
mov
nop
or
pop
inc
or
andl
jnp
jmp
lea
jno
mov
movb
mov
test
cwtl
inc
jg
dec
enter
pop
pop
xor
out
xchg
adc
mov
pop
adc
xor
shrb
mov
and
xchg
cmp
mov
js
dec
decl
int3
dec
addr16
out
inc
icebp
shlb
inc
dec
xor
or
push
mov
mov
pop
inc
cmpsl
ucomiss
xchg
repz
mov
lea
insb
ror
jbe
les
movsb
cmp
and
dec
unpckhps
inc
fucom
push
xchg
shl
jmp
lret
jo
jmp
addb
or
push
into
movsl
addl
sub
dec
cmp
xchg
inc
aad
mov
add
jmp
adc
inc
mov
pop
pop
xchg
lock
pop
adc
cmp
mov
xor
mov
lret
iret
dec
out
movsb
dec
pop
mov
ss
xchg
clc
andl
ja
aam
nop
push
std
aas
xchg
leave
lahf
inc
and
xchg
cld
xlat
dec
lods
and
dec
mov
pop
repnz
repz
out
mov
ud2
movsb
push
mov
out
ss
lock
dec
jo
xchg
mov
imul
mov
pop
in
jge
sub
pushf
sub
fsubrs
jo
jb
lea
jo
push
sti
cmp
call
xchg
cmpsl
mov
cltd
ja
add
dec
push
gs
adc
push
cltd
adc
sub
add
jne
repz
movl
roll
test
xor
jbe
dec
mov
hlt
add
pop
ret
rcl
mov
daa
movsb
sub
adc
sub
leave
push
mov
dec
xchg
out
roll
and
nop
into
cmpsl
push
and
das
movsb
mov
xlat
hlt
test
xor
mov
iret
inc
mov
ficoms
int
aas
aad
js
and
xchg
xchg
inc
inc
mov
inc
outsl
orb
inc
dec
je
push
jg
and
dec
inc
ss
das
daa
inc
mov
pop
fwait
cmc
jbe
ss
stc
nop
jmp
sarl
js
mov
adc
cld
sti
push
jg
or
jecxz
mov
pop
fs
or
rclb
add
fstpl
add
mov
and
inc
inc
loop
clc
xor
sub
sbbb
pop
ja
dec
jp
pop
pop
xor
mov
sbb
cmpl
popf
ja
jo
xchg
fsub
movsl
jge
inc
mov
sbbl
jne
lea
fbstp
cltd
int
jae
cmpb
int
addr16
mov
mov
jo
mov
xchg
loop
push
sub
jno
je,pt
loope
sub
pushf
sbb
adc
jecxz
fwait
out
and
cmpsb
jp
filds
cs
ja
mov
xor
fsubrl
cmp
repnz
pop
mov
fcoml
stos
ljmp
push
scas
jae
dec
daa
sbb
sub
dec
inc
xchg
stos
xchg
adc
dec
adc
dec
loop
xchg
das
dec
lds
and
jg
js
outsb
sbbb
xchg
in
or
dec
enter
pop
or
sbb
xor
and
sbb
and
bound
add
orps
or
mov
or
mov
daa
push
in
xor
orl
mov
iret
pop
aas
mov
imul
jo
push
push
ja
push
aas
repnz
les
lock
loopne
shlb
pop
lods
lds
mov
xchg
imul
mov
mov
adc
daa
push
les
fstpl
fstps
dec
outsb
pop
or
lds
pop
inc
jle
imul
pop
jne
push
pop
es
adc
mov
dec
mov
dec
loope
pop
pusha
repz
mov
ret
jne
mov
aad
call
sbb
cld
iret
das
in
pop
cwtl
xchg
lea
das
mov
in
cmpsl
dec
inc
mov
in
fs
arpl
inc
mov
inc
daa
out
mov
adc
mov
and
mov
push
inc
mov
mov
iret
data16
add
in
iret
pushl
inc
mov
inc
inc
adc
cs
mov
inc
dec
mov
lretw
mov
xchg
xor
sub
insb
rol
sbb
add
push
test
jp
aas
ss
vmovntps
ret
jecxz
or
mov
cmp
fsts
out
pop
mov
adc
and
push
push
movsb
or
push
mov
cs
xchg
mov
mov
cwtl
mov
test
sub
hlt
clc
inc
jns
into
shlb
arpl
cmpsl
sbb
inc
dec
orl
mov
cmp
cmpsl
faddl
repnz
das
loop
aas
fbld
addr16
call
push
cmpsl
inc
sub
daa
rolb
xor
pop
clc
dec
fnstsw
inc
inc
ja,pn
inc
das
dec
subb
jnp
mov
outsl
cld
jmp
adc
rclb
repz
ja
push
daa
mov
insl
sub
and
test
inc
pop
xor
mov
inc
or
inc
fwait
sub
mov
jmp
and
call
push
mov
push
lcall
xchg
mov
or
pop
dec
aas
jg
pop
inc
mov
sets
or
js
xchg
add
mov
ss
pop
xchg
adc
push
xchg
xchg
dec
aas
push
sub
outsl
pop
aaa
outsl
jns
inc
push
mov
jno
or
or
pop
inc
lret
roll
push
adc
orb
xor
push
dec
sbb
lods
aas
jg
cmpsl
mov
inc
lock
dec
fistl
mov
pop
adc
test
ret
or
insb
pop
xchg
add
pop
jge
push
dec
jbe
lret
pop
daa
scas
les
xor
add
jns
pop
push
into
scas
stc
xor
call
jl
rcrl
pushf
and
pop
xchg
add
cmp
cmp
mov
insb
out
jo
aad
dec
sti
das
in
xchg
mov
xor
call
add
add
fucomip
ds
rcll
nop
iret
jl
ja
mov
xchg
jg
sub
ja
xlat
das
cmp
xor
jl
sbb
ss
pop
test
lock
shl
push
mov
pusha
dec
aas
mov
lds
dec
sbb
imul
ja
loop
sarb
mov
add
dec
sub
int
pop
push
xchg
mov
dec
ja
aaa
out
pop
push
push
sub
cltd
loop
and
xchg
mov
xchg
and
dec
enter
cmp
jl
fcompl
inc
xchg
dec
pop
mov
sbb
mov
push
fimuls
adc
outsb
push
pusha
xor
out
aas
adcb
imul
arpl
jmp
sbb
daa
push
xchg
inc
adc
cmp
cmp
rcll
adc
push
in
test
pushf
pop
into
inc
aaa
les
scas
cmp
sub
push
jns
int
push
push
xchg
push
test
push
subl
subl
pop
arpl
or
add
fs
xchg
mov
jae
ficompl
aaa
gs
aaa
sbb
jne
inc
adc
aad
sahf
jecxz
cmc
mov
ds
jnp
push
inc
aas
mov
mov
outsl
xor
lea
push
xchg
mov
mov
xor
setae
iret
cli
add
mov
call
stc
cs
repnz
aaa
adc
nop
lea
aaa
sub
test
loope
jg
inc
mov
mov
pop
inc
insl
mov
jp
xchg
adc
add
xor
leave
or
dec
out
mov
push
adc
aas
les
enter
mov
cmp
cmp
adc
gs
inc
pop
das
cld
fcompl
out
rorb
loopne
daa
add
xchg
cwtl
cld
lds
xchg
mov
or
ret
mov
dec
out
ja
and
cmc
inc
mov
adc
aas
inc
inc
cmc
aaa
adc
test
xchg
je
adc
add
push
jae
movsb
les
shr
add
into
push
pop
and
adc
mov
cmpsl
jg
cmpsb
iret
or
xchg
add
inc
sbb
and
inc
nop
cmc
mov
loopne
pop
fsubs
jle
popf
sbb
ret
in
sub
mov
jne
mov
cwtl
inc
xchg
jnp
nop
xchg
sbb
and
aam
sahf
aaa
xor
add
push
pop
push
cmp
dec
out
mov
flds
jle
add
sbb
pushf
push
shrl
xchg
shrb
sub
into
insl
pushf
mov
mov
inc
mov
ljmp
xchg
pop
jnp
xchg
aaa
ja
or
call
repz
dec
lret
cmp
pop
paddw
mov
or
in
adc
int3
xor
sub
insb
add
and
pop
roll
xor
adc
test
lahf
or
fwait
les
xchg
iret
clc
mov
ja
loopne
mov
push
xchg
addl
mov
inc
dec
xchg
add
scas
sub
mov
xchg
mov
pop
mov
test
outsl
inc
or
aad
test
mov
sub
push
xlat
out
cmp
mov
leave
sbb
xorb
pop
sub
shlb
or
rorl
add
aaa
mov
inc
cmc
xchg
lret
orl
inc
sti
xchg
loop
add
das
mov
adc
adc
movq
xchg
cmpb
lcall
fdivl
xor
arpl
lret
mov
push
push
insb
add
aaa
jb
scas
pop
mov
mov
dec
adcb
aad
movsb
xor
xchg
loopne
iret
gs
jno
sbb
and
mov
pop
inc
jo
fistpll
add
inc
pop
push
js
cmp
setl
cmp
popf
pop
repz
mov
notl
and
adc
arpl
cmpb
mov
mov
xchg
out
push
pop
outsb
inc
pop
loopne
mul
mov
mov
or
pop
adcb
jg
adc
push
adc
mov
or
pop
or
xor
stos
inc
loop
int
sarb
add
cmpsb
loopne
mov
cmp
or
insl
mov
dec
mov
loop
scas
inc
sbb
mov
and
jnp
mov
dec
shlb
cltd
xchg
fdivp
mov
sarb
xchg
dec
or
jle
cmp
lods
cmpsl
pop
mov
cmp
adc
dec
in
fmuls
hlt
sarb
andb
push
add
rclb
xlat
cwtl
push
outsb
arpl
mov
dec
je
xchg
jecxz
dec
xor
cmp
pop
xor
movsb
std
jl
sahf
xor
das
movsl
cwtl
aad
xchg
in
dec
mov
xchg
cmp
mov
adc
lahf
out
jnp
pop
imul
and
loopne
sub
sbb
sub
xor
push
cld
inc
or
imul
mov
inc
data16
ret
inc
push
adc
mov
mov
fistl
sub
pop
add
rep
movsb
das
push
int3
imull
mov
jnp
adc
push
orb
mov
into
daa
ja
mov
std
sarl
es
sbbb
jno
ffreep
sub
lret
daa
outsl
pop
int
or
dec
adc
scas
js
lods
mov
and
pop
lret
inc
sub
push
nop
cmp
leave
insb
outsl
inc
pop
ret
push
ljmp
lock
pop
xlat
loope
addb
pop
dec
int
gs
mov
sub
mov
lret
or
fidivl
xchg
or
aas
cmp
or
pop
outsb
mov
cmpl
scas
push
jnp
mov
adc
mov
and
sbb
mov
orl
cmp
and
jecxz
xor
sbb
out
into
xchg
out
iret
lock
outsl
and
mov
mov
cmp
adc
outsb
orl
push
sbb
and
lock
sub
jnp
or
sub
lret
and
or
std
fistpll
gs
fsts
xchg
push
movsl
insl
mov
enter
test
and
lock
notl
cmp
notl
nop
and
xchg
mov
scas
push
and
xor
xor
pop
push
in
dec
xchg
inc
or
or
arpl
inc
add
add
pushf
ud1
loop
cmp
cmpsb
push
inc
arpl
cmpsb
dec
xchg
dec
ret
add
in
and
jg
dec
jmp
mov
data16
iret
mov
ret
rolb
mov
cmpsb
cmp
fnstenv
dec
out
loopne
add
out
jecxz
pop
pushf
jecxz
sbb
xor
sub
push
inc
rorl
pandn
or
stos
xchg
pop
cwtl
stos
std
mov
and
push
enter
loope
lcall
rol
dec
shrb
pop
enter
sbb
and
xor
pop
lcall
shrb
fiaddl
iret
es
outsl
xchg
cwtl
insb
out
jns
or
ljmp
and
aas
sub
dec
jb
add
mov
lahf
mov
cmc
mov
pusha
shr
pop
lods
fwait
iret
xor
push
pop
inc
mov
xlat
sub
sbb
jge
cmpsb
or
mov
popa
sub
hlt
movsb
in
xchg
xor
out
test
cli
nop
jae
jnp,pt
and
pop
jge
aas
pop
mov
or
int3
pop
daa
hlt
pop
push
or
mov
jp
xchg
das
cmp
push
and
pop
add
sets
sub
test
push
adc
fcomp
mov
push
xor
pop
mov
mov
sbb
push
inc
mov
mov
divb
ror
cld
bnd
test
lock
loope
shlb
push
jmp
fistl
adc
and
pop
test
push
loope
daa
into
xchg
adcl
and
sub
es
adc
jge
popf
mov
sub
daa
test
inc
clc
loopne
movsl
add
pop
sub
int3
adc
push
outsl
dec
mov
and
outsl
test
pop
daa
sbb
jno
scas
insl
xsha256
cmpsb
push
or
and
xor
aas
push
push
popf
jne
mov
pop
fcmovnb
ja
iret
jne
aas
xlat
sbb
stc
sbb
add
outsl
jae
lods
rclb
iret
dec
lock
jae
jg
or
inc
fists
jg
inc
xlat
aaa
shlb
pop
xor
jnp
adc
cld
cmp
clc
enter
adc
adcl
add
out
pop
add
or
adc
push
icebp
push
mov
adc
inc
lods
stos
push
mov
sbb
repz
hlt
xor
cmpsl
cli
push
and
fwait
cmp
push
jns
xchg
ds
mov
adc
out
call
mov
outsb
adc
mov
out
pop
pop
push
shl
push
call
mov
jae
loope
xor
jg
inc
xlat
dec
scas
push
push
inc
cmp
cmp
clc
xchg
adc
sub
push
test
ss
pop
dec
pop
rol
cld
inc
and
iret
push
out
jp
std
out
or
test
or
xchg
and
dec
inc
ss
roll
jle
inc
iret
sbb
xchg
lcall
and
add
cmp
ljmp
mov
pop
std
dec
pop
xor
cs
add
or
sub
dec
push
add
adc
or
dec
jmp
out
imul
enter
ss
and
inc
dec
cmp
pop
dec
lret
adc
sbb
aas
rclb
xor
fadds
notl
out
cmp
xchg
pop
sbb
inc
pushf
popa
dec
fs
test
pop
daa
cmpsb
mov
mov
push
ja
and
mov
xchg
shl
dec
xchg
pop
enter
stos
in
popf
dec
sbb
adc
scas
das
out
inc
push
xchg
out
scas
mov
xchg
cmp
fwait
push
dec
xcrypt-cfb
cmpsl
movsb
xchg
popa
adc
lock
les
add
add
daa
xlat
aas
mov
cmc
aaa
adc
iret
out
flds
sub
or
xor
push
xchg
adc
mov
and
adc
mov
add
adc
jmp
rcrb
mov
xlat
jle
pop
inc
inc
in
adc
add
dec
push
sbb
mov
push
fisttps
xchg
mov
sub
aas
pop
xor
jnp
out
mov
mov
xchg
xor
inc
sbb
pop
mov
in
dec
enter
out
daa
adc
push
mov
or
cs
pop
adcb
cli
rcrl
test
mov
rorl
rclb
ret
mov
gs
adc
add
pop
es
adc
xchg
xor
cmpsb
and
jmp
sbb
inc
pop
lcall
enter
pop
mov
jle
les
jnp
xchg
call
call
loop
add
mov
cltd
in
or
push
loopne
das
jl
iret
test
add
mov
mov
je
aas
bt
xchg
mov
jae
iret
scas
inc
gs
jnp
icebp
arpl
movsl
jecxz
les
ja
dec
jae
flds
jnp
add
pop
stos
adc
or
mov
inc
aas
stos
inc
sbb
adc
cmp
jo
adc
xor
sbb
clc
sarl
notl
pop
push
sub
orl
jnp
ret
mov
js
mov
call
arpl
scas
aam
mov
push
lahf
and
dec
scas
mov
dec
add
rclb
arpl
cltd
ds
dec
mov
das
cltd
push
popa
iret
pop
or
cmc
ja
in
fcmove
xor
jge
lods
sub
mov
int
mov
and
int3
aaa
xchg
scas
loop
mov
or
scas
pop
frstor
dec
lea
cmpsl
or
fdivs
pop
int
mov
xlat
add
adc
xchg
loope
jecxz
mov
xor
bswap
xor
ja
sbb
lret
add
mov
mov
add
loope
popf
mov
daa
cmpsl
inc
add
loope
mov
daa
cmp
lea
movsb
mov
sarl
shrb
js
ja
popa
cmc
pop
jge
insl
enter
sbb
cmp
out
lcall
cwtl
mov
and
xchg
popf
lahf
subb
xor
scas
dec
cmpsl
mov
aad
jp
call
sti
mov
enter
cmp
fisttpl
or
pop
mov
sub
push
push
pop
cltd
das
jne
sarl
jmp
mov
insl
xchg
xlat
bound
data16
sbb
jecxz
ja
lret
sbb
dec
dec
call
jecxz
cmp
enter
iret
shll
fwait
in
jecxz
iret
xor
insb
out
jp
jg
dec
add
aas
daa
add
jg
xlat
push
fisttps
jp
sub
fbld
mov
pop
and
mov
sbb
push
outsb
mov
pop
into
pop
repnz
mov
push
in
sbbb
sub
push
movsb
sbb
add
js
lret
dec
cwtl
fstl
sbb
stos
mov
sub
xor
ret
incb
sbb
mov
fisttpll
shlb
int
fwait
cmp
fs
fdiv
fsts
push
sub
dec
shll
test
loopne
fwait
sbb
mov
ss
cltd
inc
mov
pop
ja
cmp
or
add
xchg
pushf
dec
inc
inc
iret
xor
adc
lock
fdivrs
iret
dec
add
out
loopne
das
push
or
sbb
inc
inc
sbb
mov
xchg
pop
ds
or
pop
lods
cmpsl
mov
cld
movsl
xchg
xor
lods
nop
dec
jl
or
test
mov
fstpl
mov
xor
xor
xor
jb
add
cmp
das
jg
outsb
rolb
push
inc
adc
push
aaa
and
stos
jg
push
mov
sbb
push
loope
jne
jne
adc
loope
std
push
lea
rcll
enter
push
inc
cwtl
es
daa
pop
ja
fst
sub
enter
mov
pop
mov
pop
out
fidivrl
and
sub
jg
adc
push
int3
and
enter
add
pop
mov
sbb
adc
xchg
xor
sub
sub
push
fdivs
pop
or
cmp
movsl
daa
cmp
mov
mov
mov
jg
aaa
ja
and
das
inc
cwtl
dec
pop
int
pop
jns
dec
cld
cld
dec
push
inc
jecxz
cmp
and
jp
cmp
pop
sarb
and
mov
mov
cli
int
lahf
push
iret
cmp
cmpsl
int
mov
pushf
push
adc
test
pop
lcall
adc
dec
loope
mov
xor
popf
jecxz
test
cmp
xchg
fwait
ds
sbbl
pop
sub
movsl
call
mov
cmpsb
andl
add
xchg
xor
push
inc
stos
out
or
and
shr
mov
popl
xor
in
cltd
stos
inc
adc
mov
mov
and
dec
test
addl
add
push
daa
xor
or
rcrl
ja
dec
adc
jl
ret
cvtps2pi
fisttpll
pop
mov
push
dec
sub
cmc
jno
xor
add
out
scas
in
xchg
cld
nop
stos
push
mov
popa
aas
inc
cli
jae
in
filds
jl
cmp
xor
inc
cld
xchg
movsb
stc
outsb
es
and
xor
adc
mov
push
test
cli
nop
imul
inc
pop
scas
sub
hlt
imul
mov
sub
pop
shlb
xor
or
jnp
imul
inc
adc
ljmp
pop
jp
sbb
jo
fsubs
pop
mov
cmpsb
sti
xchg
das
xchg
test
addl
cs
outsl
mov
lret
adc
dec
dec
jmp
in
and
flds
ret
cmp
mov
cmp
arpl
js
mov
add
loope
inc
mov
daa
adc
dec
iret
in
inc
js
pusha
fucomip
add
jmp
push
pop
pop
pop
mov
pop
call
repz
adc
pop
dec
push
jb
inc
jmp
jae
jo
std
dec
push
push
pop
adc
cmpsl
add
std
outsl
out
or
mov
cs
in
jno
in
dec
mov
pop
pop
rolb
jge
lretw
out
pop
pop
inc
mov
imul
out
rcrl
iret
lea
mov
fildll
sub
and
cwtl
mov
cld
pop
ljmp
sbb
inc
and
dec
fistps
negl
adc
or
pop
scas
daa
pop
loope
xchg
push
cmp
add
xor
dec
into
iret
sbb
ret
inc
scas
push
cld
shrd
or
addb
ret
inc
pop
iret
and
in
and
loopne
jae
ljmp
inc
mov
push
add
sbbb
jno
cmp
dec
fsubs
dec
adc
inc
adc
add
daa
sub
out
add
daa
mov
out
or
incl
and
and
xchg
sub
subb
sub
and
lock
cli
jmp
jg
lods
ja
lea
pop
sbb
lock
fisttpll
push
add
push
xchg
fwait
sub
mov
movsb
sub
push
rcl
pusha
add
xchg
lock
lock
pop
in
push
pop
inc
and
testl
add
shlb
stos
adc
mov
push
out
sbb
mov
es
out
push
filds
adc
pop
cltd
mov
out
and
mov
stos
inc
icebp
lahf
cld
std
into
mov
leave
push
in
aas
push
pusha
mov
mov
xor
arpl
jno
push
mov
adc
xor
inc
mov
or
and
iret
adc
ds
or
mov
xlat
popa
or
adc
adc
add
pop
pop
push
pop
xchg
cli
cmp
inc
pop
daa
pop
or
adc
sub
cmp
sub
std
cmpsl
jnp
nop
shr
adc
xor
mov
pop
or
xchg
inc
adc
sbb
daa
pop
pop
dec
and
and
iret
scas
push
inc
pop
pop
rorb
or
add
pop
imul
movsl
ja
xchg
push
jne
mov
lret
pop
movl
dec
pop
cld
test
add
stc
int3
jnp
out
mov
popa
cmp
outsl
and
stos
divl
enter
cs
or
clc
inc
sub
jl
cld
dec
outsl
pop
sbb
cltd
or
insl
xor
sub
dec
mov
mov
push
jle
sub
loope
adc
dec
and
test
sub
cmpsl
xchg
in
inc
in
cld
cmp
nop
xchg
pop
mov
popa
int
fidivrl
dec
push
xchg
cmc
add
cmp
stc
fldt
in
xchg
jmp
leave
fists
inc
dec
pushl
lods
lret
outsl
cli
int
pusha
in
lock
pop
sbb
mov
insb
inc
xlat
sub
pop
das
pop
pop
xchg
mov
pop
mov
add
push
push
nop
and
lret
push
jns
aas
mov
sbb
mov
out
cmp
lea
repz
bnd
imul
cwtl
cmp
add
inc
mov
mov
repz
jb
add
shlb
sbb
out
outsl
js
fsubs
jle
pop
cmc
fisttps
mov
lret
rcrb
in
out
pop
xchg
xor
orl
or
adc
pand
adc
inc
xlat
movsl
enter
iret
lods
fsts
jb
arpl
adc
sbb
in
shl
inc
insl
rorl
repz
pop
lret
lock
and
fisubrl
mov
fwait
cmpl
jl
add
push
push
movsl
lds
iret
sbb
push
roll
and
sub
or
push
test
ficomps
in
push
mov
add
pop
in
jg
std
push
xorb
mov
jmp
mov
fwait
cmpsb
push
aas
outsl
inc
push
fcoml
ja
es
mov
fmull
push
push
xor
out
insb
xchg
jle
notb
push
cmpsl
and
in
popa
xor
jle
pop
add
rorb
cmpsb
inc
pop
aaa
and
pop
lea
pop
dec
stos
divl
clc
and
fildll
pusha
cmpsl
sub
jp
pop
iret
and
mov
jg
in
pop
add
sub
outsl
adc
ja
ret
cltd
fs
and
data16
mov
dec
cmp
push
lods
jb
pop
fwait
inc
inc
lahf
inc
add
idivl
and
or
das
dec
pop
daa
mov
movsl
outsl
movsl
inc
notl
xor
dec
dec
lcall
xchg
lret
lret
sbb
loop
dec
mov
cwtl
xchg
fisttps
int
mov
imul
pusha
cltd
xchg
add
cmpsl
jg
inc
aas
add
pop
pop
fs
aaa
mov
push
das
cmp
hlt
mov
dec
in
mov
dec
sbb
cmp
and
nop
aad
hlt
xor
ja
mov
add
jne
sbb
and
mov
out
repnz
nop
pop
das
xor
mov
mov
cmp
and
insl
stos
sarl
scas
jl
call
or
cmp
loopne
or
in
dec
mov
aas
into
mov
and
outsb
hlt
inc
sarl
adc
gs
mov
sarl
mov
dec
push
xchg
cmp
cmc
and
loope
ja
and
pop
cmpsb
fstps
imul
jo
jle
enter
in
fnstenv
imul
push
imull
push
pushf
aam
lods
xor
add
aaa
mov
das
je
enter
inc
daa
or
and
call
loopne
sub
pop
mov
sbb
mov
lret
or
add
push
cmc
sbb
and
mov
pop
xlat
add
cwtl
pop
dec
mov
mov
aaa
xchg
sbb
mov
fsubrs
pop
lahf
loopne
out
stc
xchg
cmpsl
or
xchg
iret
iret
pop
fcoms
mov
cmp
add
jp
xor
mov
mov
xor
int
aaa
cmpsl
adc
cld
inc
ficomps
pop
or
aad
jbe
popf
pop
add
and
mov
add
sbb
dec
cmpsl
pop
dec
aad
push
sub
dec
mov
sub
pop
nop
and
cmp
xchg
xchg
out
ss
sbb
mov
mov
int
movsl
sub
or
xlat
dec
pop
stos
movsb
inc
pop
mov
or
mov
cmpsb
aaa
sahf
add
aas
cld
or
fs
sbb
aaa
adc
mov
cld
mov
popa
inc
test
cwtl
jnp
pushf
cltd
inc
data16
pop
and
sbb
out
iret
push
pop
pusha
or
aam
pop
cmc
ja
and
add
call
lods
cld
xor
xchg
xchg
popa
and
sbb
push
outsl
scas
xor
add
jno
testb
adc
loope
push
cmc
cmc
add
mov
add
cmc
mov
icebp
and
xor
dec
adc
adc
mov
mov
lea
xor
add
cmp
in
xchg
inc
shrl
mov
js
pop
push
mov
movsb
push
fimuls
pop
out
dec
add
cmp
aaa
jg
in
push
out
dec
into
push
and
push
mov
clc
dec
ror
repnz
fbld
xlat
pop
lea
inc
pop
jno
push
idivb
pop
dec
push
daa
pop
jp
jb
inc
inc
pop
sub
in
arpl
sbbl
ljmp
in
or
cmp
call
mov
sub
add
jp
mov
mov
dec
cwtl
jbe
mull
mov
lock
out
test
cmpsl
cmp
xchg
xchg
pop
add
pop
andb
es
adc
out
pop
lahf
shlb
ret
das
orb
xor
addr16
aaa
es
dec
pop
sbb
or
das
addr16
mov
es
int
in
jecxz
leave
inc
daa
mov
jle
sub
lahf
das
shrl
mov
cmp
call
push
xor
xor
nop
or
push
fcomps
orb
adc
into
test
pop
fbstp
cmpsl
sbb
or
out
cmp
lcall
fbld
push
clc
push
inc
cmp
lea
ffreep
cmc
scas
aad
ffree
test
and
iret
cli
mov
aad
cmpsl
jnp
cmpsb
inc
sub
movsb
outsl
mov
mov
or
adc
xchg
lods
mulb
push
and
js
jg
mov
pop
scas
push
xchg
sbb
sets
nop
loopne
adcl
ja
ret
ja
inc
cmp
cmpl
or
pop
xchg
xlat
cld
outsl
fcmovnu
jg
mov
push
movsb
jle
popf
aas
nop
cmp
or
mov
test
jbe
mov
data16
jno
fnsave
mov
and
push
pop
inc
fistl
cmpsl
pop
ds
mul
mov
arpl
dec
iret
cmpsb
pop
mov
iret
testb
hlt
jecxz
ja
arpl
jge
xchg
scas
sub
scas
scas
mov
scas
shr
mov
xor
push
fisttpll
es
jne
inc
cltd
mov
pop
aaa
fmuls
jno
mov
add
dec
push
fstpt
push
jecxz
icebp
movsl
xor
outsb
gs
addb
xchg
andb
mov
out
les
adc
cmp
aaa
or
leave
test
daa
mov
mov
ret
insb
es
imul
rol
jge
mov
push
enter
sbb
xor
addl
test
fidivl
call
stos
dec
xor
les
mov
mov
sub
jecxz
cmpsl
arpl
adc
push
dec
pop
cmpsb
lcall
adc
dec
fistpl
pop
and
ljmp
xor
and
aaa
pslld
xchg
outsl
cmp
dec
push
mov
je
notb
loope
adc
gs
insl
cmpsl
aas
xchg
inc
in
xchg
mov
out
ljmp
cmpsl
pop
insl
outsb
fucomi
pop
stc
inc
aas
lret
inc
push
pop
xor
scas
and
lods
shll
adc
divl
sahf
in
pusha
mov
icebp
aaa
fwait
jmp
and
subl
mov
les
call
addr16
mov
das
dec
add
xlat
xchg
rcll
test
das
stc
pop
mov
iret
aas
fisubrl
pusha
pop
cmpsb
and
std
add
or
ficomps
rol
insl
sbb
es
or
and
mov
cli
pop
orl
lcall
sarb
xchg
or
mov
or
mov
mov
testl
popf
xchg
enter
xchg
mov
es
mov
sbb
cmc
into
outsl
xchg
sarl
mov
pop
jg
cmp
mov
push
int
or
je
test
xchg
pop
jmp
scas
dec
test
ds
orb
setns
aam
mov
fists
lods
adc
mov
cld
sub
adcl
adc
push
fucom
mov
push
test
aas
sbb
mov
dec
mov
fs
jle
loopne
aad
and
jg
das
adc
ror
push
push
repnz
mov
sub
adc
aaa
xor
xor
inc
ret
xchg
mov
and
lds
adc
cmp
movsl
add
adc
xor
lea
sub
ret
outsl
loopne
xchg
xor
fs
ret
xor
mov
jo
aad
test
outsb
cmpsb
mov
jl
ds
hlt
rolb
movsl
out
cmpsl
and
pop
pop
sbb
push
inc
inc
push
pop
or
push
das
mov
mov
out
imull
push
sub
pop
xchg
pop
sub
clc
cmp
es
and
lods
in
pop
pop
movsb
cmp
sbb
mov
add
pop
inc
dec
out
nop
rorl
xchg
push
mov
iret
sub
pop
icebp
ss
or
scas
xchg
push
pop
mul
pushf
iret
sub
add
push
pop
push
xchg
pop
iret
iret
pop
lahf
jne
pop
xchg
or
out
iret
jle
push
adc
sti
inc
sub
dec
xor
outsl
xrelease
enter
pop
cmpsl
lods
and
int
sbb
testl
or
fistpll
adc
outsb
arpl
jg
and
cld
mov
ret
push
out
sub
pop
sub
idiv
ret
cmpsl
out
arpl
mov
mov
mov
cld
inc
mov
mov
daa
xor
mov
stos
sbb
test
cmc
inc
xor
or
cmc
or
iret
lgs
or
sub
mov
test
int3
cmpxchg
cld
ja
mov
hlt
jmp
mov
and
fcmovb
cs
jmp
inc
lcall
mov
adc
pop
in
inc
cltd
rcll
loopne
out
mov
push
cmpsb
into
mov
inc
lret
pop
cmp
repz
xchg
xchg
xlat
scas
xchg
inc
xchg
or
aaa
pop
and
das
mov
loope
jnp
sbb
inc
insl
insl
dec
fbld
and
cld
outsl
outsb
push
sbb
lahf
cmp
iret
ja
xchg
cmp
xlat
add
imul
or
iret
adc
hlt
icebp
add
cmc
das
cld
rcl
adc
sbb
idivb
daa
sti
in
pop
mov
jecxz
ret
pop
pop
sbb
out
mov
pop
lds
aas
ficomps
out
lahf
pop
shll
add
cwtl
inc
cmpsl
outsl
or
int3
add
adc
int3
xor
daa
jnp
inc
and
xlat
pop
shlb
shrl
fistpll
dec
push
aad
pop
loopne
sbb
sahf
xchg
xlat
push
sarl
stos
lock
fstp
jbe
adc
mov
sub
shlb
fisttpl
cltd
dec
and
ds
inc
dec
jl
insb
pop
pop
or
fs
xor
dec
xor
mov
iret
arpl
loop
gs
mov
mov
scas
ret
lahf
lea
repnz
in
pop
out
sbb
mov
lahf
xchg
adc
shll
ficoml
push
adc
shl
mov
and
and
push
stos
addr16
dec
jae
rcll
sub
dec
pop
push
sub
inc
pusha
es
sbb
mov
add
add
cld
push
mov
mov
push
sub
push
int
hlt
push
out
push
dec
scas
mov
and
das
push
lahf
stos
aas
sahf
xchg
pop
fcmovne
inc
mov
xor
cmpsl
fists
add
xchg
js
mov
jnp,pt
mov
jne
cmp
mov
and
xchg
ja
inc
mov
scas
sbb
stos
pop
fbld
xor
inc
jg
fildll
and
inc
test
pop
into
sub
scas
inc
cli
cs
loopne
mov
dec
add
fistpl
scas
sbb
push
lods
bound
sahf
push
movsb
lahf
xchg
test
mov
mull
cwtl
dec
js
hlt
fs
dec
lock
dec
cmc
pop
fisubl
adc
pop
inc
rcrl
lods
out
jno
adc
mov
out
pop
xlat
movsb
push
shlb
mov
xor
add
mov
repz
mov
hlt
mov
add
insl
jl
mov
inc
sub
imul
push
inc
lea
adc
jo
pushf
ja
xor
in
pop
and
in
jg
xchg
lea
jne
dec
push
adc
dec
mov
cs
mov
mov
xlat
sub
leave
pop
sbb
pop
and
inc
push
outsb
pop
add
jne
inc
loope
or
push
push
and
pushf
scas
orl
or
mov
mov
arpl
pop
ds
fs
xchg
rolb
loopne
rcl
inc
shlb
into
imul
jmp
int3
or
in
int
sub
dec
ret
inc
call
jbe
and
int3
and
dec
mov
adc
in
xchg
inc
scas
ret
dec
popf
inc
mov
iret
ds
mov
dec
add
rcrb
mov
insb
jo
xorb
lods
insb
orb
and
push
mov
push
mov
inc
inc
xor
mov
mov
lahf
pop
cmpsl
push
dec
pop
fsub
outsl
cmpsb
and
orb
jnp
cmpl
and
jae
loop
or
inc
mov
xchg
mov
cmp
arpl
lret
cmp
out
or
sar
aas
and
mov
nop
fldt
inc
scas
mov
pusha
repnz
xchg
jno
mov
repz
push
push
fldcw
pop
cmp
ret
push
enter
sti
stc
inc
sbb
dec
add
dec
cli
add
and
mov
addr16
cmp
jae
pop
sbb
dec
sub
mov
dec
add
outsb
loopne
repz
push
push
and
sub
lods
cmpsl
loop
std
ds
andb
inc
js
cmp
jle
pop
flds
adc
das
push
jno
adc
popa
mov
out
inc
mov
aas
ror
jnp
mov
pop
shlb
mov
gs
xchg
or
jp
add
push
mov
or
adc
push
in
sub
pusha
push
decb
ds
dec
cwtl
movsb
ds
dec
xchg
or
das
in
cs
es
lods
push
out
test
jmp
mov
repz
orl
lock
sbb
lcall
push
pop
stos
aad
mov
daa
mulb
xor
dec
aaa
sub
sbbl
or
and
loope
add
mov
aas
jg
mov
arpl
in
popf
je
daa
ret
cld
test
scas
aas
insb
mov
not
xchg
loop
out
insb
inc
imul
sub
daa
mov
sbb
cwtl
inc
sbb
fstps
fisubs
icebp
fs
inc
iret
add
lds
mov
dec
pop
lock
xchg
adc
sub
mov
mov
stos
sbb
xorl
ja
call
xchg
adc
jb
and
loopne
or
add
bound
out
hlt
lods
sub
es
dec
leave
clc
lea
add
aaa
aas
adc
iret
dec
out
add
fists
mov
stos
nop
popf
xchg
push
xchg
cmp
cmp
jmp
pop
xor
mov
and
xchg
dec
clc
subl
aas
repz
dec
xchg
fildll
pop
mov
adc
cmp
out
mov
lret
cmp
cmpl
cmp
inc
pop
iret
pop
stos
jg
fnstenv
dec
cmp
xlat
jl
cmpb
in
mov
sti
mov
shlb
fs
std
or
out
and
mov
out
xchg
jge
jl
xchg
or
and
xchg
sbb
scas
loopne
add
ljmp
push
adc
outsl
cmpsb
pop
and
out
mov
out
mov
adc
shr
sti
test
ljmp
and
inc
loope
mov
and
add
dec
daa
daa
xor
push
dec
fstl
enter
xor
inc
je
rcrb
xor
jo
cmp
gs
and
outsb
outsl
adc
repnz
into
cld
sbb
hlt
lcall
inc
outsl
cmp
jnp
stos
add
leave
andl
fistpll
cmp
cmp
and
enter
imul
adc
xchg
pop
add
fadd
sub
lds
addr16
imul
xchg
test
insb
jae
roll
jecxz
inc
pop
ficoml
cmp
stos
jmp
test
push
mov
add
pop
mov
daa
xchg
popf
dec
in
or
mov
inc
add
add
inc
pop
ja
mov
push
divl
pop
add
pop
out
aad
sar
xor
inc
aad
add
jnp
fsubr
out
ret
ja
add
es
out
push
les
jnp
je
repnz
mov
dec
fcompl
dec
jnp
push
js
jle
shlb
sub
inc
inc
addb
cmp
shrl
or
pop
movsl
stc
inc
fstpl
loop
push
mov
lods
ss
aad
scas
fs
mov
out
push
out
insb
add
lahf
sub
sub
add
push
mov
leave
pop
call
xor
hlt
shlb
lret
jmp
push
rclb
iret
xor
loopne
mov
jmp
fisubrl
sbbb
xchg
daa
dec
cmpsb
shrb
adc
shld
prefetchw
lret
pop
pop
aad
xchg
insl
cld
mov
aas
int
push
push
push
imul
add
dec
xor
popf
stc
mov
push
cltd
test
push
jmp
push
in
out
cmp
and
adc
xlat
and
leave
std
cmc
mov
cli
and
mov
xchg
cld
test
sar
push
push
pusha
dec
daa
es
pop
xor
mov
stc
fistpll
pop
and
ss
adc
wbinvd
add
mov
xlat
lahf
lret
rcll
lds
adc
sub
int
popa
insl
pop
dec
mov
outsb
inc
sub
add
imul
popa
dec
lods
add
mov
xchg
xor
ffreep
jp
inc
and
push
out
pop
mov
adc
arpl
adc
test
repz
inc
dec
lahf
scas
call
xor
test
iret
fwait
pusha
andb
nop
jnp
add
les
xchg
dec
out
jg
push
setns
inc
inc
sub
mov
push
dec
mov
add
pop
jle
mov
sub
and
add
add
add
sub
es
pop
or
sbb
lods
cmc
daa
xchg
add
lock
or
xchg
popa
dec
std
and
arpl
ret
out
adc
and
pushf
xchg
aad
push
jns
mov
andl
daa
nop
jle
jo
mov
fildl
shl
adc
sub
cmc
inc
pop
rcll
xor
add
jecxz
cmp
aaa
pop
call
iret
repnz
js
pop
stos
inc
dec
cmpsl
daa
mov
sahf
fildll
xor
test
inc
xor
add
mov
sub
stos
mov
scas
or
imul
pop
cmp
std
lahf
es
push
int3
movsb
sub
fistpll
and
xchg
dec
pop
mov
insl
int3
xchg
call
sub
nop
iret
test
inc
cmp
in
cld
fisttps
insb
jbe
jp
add
subl
mov
fstps
add
fisttpl
mov
ja
push
sbb
inc
cld
cmovs
out
mov
sub
mov
sbb
aad
imul
add
pop
fs
shrb
pop
inc
daa
sub
scas
andb
inc
jns
cmp
pop
call
cli
iret
out
jecxz
adc
mov
cmp
fldl
add
stos
arpl
arpl
test
or
mov
sub
sub
dec
push
div
jns
ret
dec
cmovnp
mov
add
in
int
mov
pop
push
pusha
xchg
pop
pop
jb
pop
dec
pushf
out
inc
pop
movsl
xchg
int
push
dec
cmp
not
popl
addr16
cvtpi2ps
push
aas
add
cli
adc
inc
es
daa
mov
daa
out
and
inc
ljmp
mov
fwait
addr16
pop
push
sbbb
pusha
xchg
mov
out
cs
inc
icebp
adc
iret
jno
loopne
inc
mov
gs
cmpl
fimull
js
outsb
xlat
dec
cmp
inc
sub
mov
inc
adc
and
aad
mov
out
orl
adc
iret
sub
cli
ds
pmullw
or
xchg
and
es
scas
lret
lock
pop
fildll
jmp
int
add
int
dec
mov
push
push
xchg
fwait
daa
xchg
fnsave
imul
pop
xor
jne
imul
pusha
stos
inc
push
xchg
sub
cmpsl
jge
fwait
sub
add
pop
iret
push
add
inc
pop
daa
cmc
inc
or
or
add
sub
push
dec
icebp
mov
cmp
fwait
out
mov
stos
inc
enter
cmp
and
inc
jno
ja
inc
rolb
add
cmp
in
and
shl
jmp
jg
fidivrl
rolb
push
push
dec
daa
mov
sbb
jns
dec
testl
pop
or
fadd
pop
xor
iret
mov
inc
call
or
mov
fs
das
cmp
jg
sti
inc
xchg
mov
sub
shrl
dec
mov
repz
cmpsl
mov
sub
popf
pop
andb
popf
xlat
sbb
and
sti
sub
out
pop
fbld
inc
loopne
mov
push
push
or
and
test
movl
inc
cwtl
aad
inc
push
pop
sub
mov
or
pop
sbb
dec
mov
nop
clc
add
jno
inc
push
mov
adc
or
pop
adc
pop
push
cwtl
push
daa
gs
imul
xchg
xchg
xor
cmpsl
stos
jmp
xchg
add
bound
fldt
in
mov
stos
push
sub
clc
cmp
or
lods
bnd
outsb
popa
iret
shlb
xor
push
mov
add
push
or
jecxz
lret
clc
adc
mov
and
mov
lea
adc
adc
xchg
add
sub
in
fs
xor
add
cmp
pop
or
xchg
in
rorb
fildll
ss
cs
and
add
ja
mov
xchg
in
daa
or
mov
scas
add
daa
pop
imul
in
dec
inc
xchg
dec
cmp
xchg
dec
sbb
inc
sub
push
in
nop
jl
adc
xor
fnstsw
cmp
mul
lods
jo
mov
and
add
fcmovne
mov
outsl
xor
sbb
inc
daa
incl
cmp
icebp
addb
sbb
stos
pop
add
ret
lods
dec
adc
cmp
mov
mov
sbb
xorl
mov
cld
insb
ja
setge
dec
pop
clc
daa
or
push
pop
dec
ficoms
cwtl
push
iret
jae
gs
les
arpl
push
xor
in
xchg
xor
popa
movsl
shl
sub
add
movsl
add
push
maskmovq
cmp
iret
outsl
int
cmpsl
mov
push
jne
mov
popl
dec
in
cmp
lods
and
mov
add
adc
daa
and
add
and
fisttps
enter
add
mov
movsb
or
pop
push
inc
and
mull
sbb
push
sbb
adc
xor
cltd
outsl
stos
fs
pop
mov
mov
adc
movsl
xchg
xor
jno
cmpl
pop
mov
lahf
xlat
dec
push
imul
pop
popf
push
daa
dec
jp
test
lds
cltd
inc
arpl
rorb
outsl
andl
or
movsl
or
or
jno
divb
xorl
add
dec
fsubs
cmp
scas
fs
adcb
scas
jmp
jecxz
lret
xlat
jmp
nop
dec
cmp
fsts
pusha
jmp
or
adc
mov
and
das
jg
or
in
cmp
push
lahf
adc
pcmpgtb
daa
aas
xor
enter
ja
jnp
jnp
pop
dec
aad
add
xchg
sub
push
fldt
sbb
enter
and
lds
dec
lahf
xchg
jmp
and
fwait
js
dec
iret
sbb
and
xchg
xchg
jo
push
cs
xchg
gs
jnp
add
test
pusha
daa
enter
js
mov
fnsetpm(287
outsb
gs
cld
cmp
push
pop
push
daa
cmp
jp
out
outsb
jmp
xchg
sbb
adc
xchg
and
cmpsb
sub
xchg
rclb
pop
dec
popl
sbb
daa
pop
pop
rclb
jecxz
fs
daa
pop
pop
call
jp
cmpsb
nop
sub
dec
popf
jo
rclb
leave
in
out
or
movsb
and
cmpsl
xor
popa
je
leave
notl
sahf
daa
jae
or
mov
dec
mov
test
aas
add
cli
push
scas
dec
dec
or
xor
and
jecxz
fisttpll
or
mov
push
xor
sub
push
out
dec
jmp
decb
ja
cwtl
mov
cld
mov
pop
je
lock
inc
imul
jo
divb
cmpsl
lcall
inc
in
xor
cmp
scas
in
gs
dec
inc
sub
push
pop
fwait
push
sub
pop
out
cmp
rorl
jecxz
xchg
test
and
add
ja
jbe
pop
mov
mov
sub
shlb
pusha
xchg
roll
fnsave
pop
loopne
inc
lahf
or
rcll
xchg
push
not
dec
xchg
push
cmpsl
cmp
xchg
lods
repnz
pop
icebp
test
fistpll
enter
xchg
scas
rcll
mov
dec
sbb
add
sub
jns
xor
sub
ljmp
imul
movsl
inc
jns
aaa
push
adc
jle
pop
mov
das
cmp
add
xlat
inc
sbbl
lock
add
pop
repz
in
mov
sbb
shr
add
mov
adcb
add
pop
xchg
jae
sub
movsb
inc
pop
mov
lahf
iret
pushf
pop
fisubrl
dec
jmp
xchg
jge
movb
jg
inc
fbld
mov
aas
stos
incb
and
mov
pop
ss
test
fsubs
ss
rol
mov
inc
ljmp
jbe
pushf
mov
add
cmpsl
or
cmp
add
lahf
clc
imul
jno
cwtl
outsb
sub
push
xor
jg,pt
and
aas
jae
pop
or
adcl
incl
and
stos
mov
dec
out
and
out
rcll
fs
mov
xchg
or
les
inc
cmpb
jecxz
and
push
out
push
and
out
cmp
push
xlat
xchg
sub
inc
adc
jle
fs
bound
cmpsl
mov
inc
out
mov
iret
loope
js
loopne
push
shlb
bound
lods
imul
or
adc
adc
cmp
js
xchg
and
sbb
dec
and
in
lret
mov
out
stos
out
lret
loopne
outsl
dec
jne
clc
cltd
shll
xchg
jo
xlat
mov
adc
xchg
out
int
push
test
sub
sbb
aas
cltd
add
mov
outsl
jecxz
nop
shrl
int
mov
inc
aaa
aas
inc
sub
daa
aaa
jle
and
jb
rclb
xor
aas
or
ljmp
shrl
dec
sbb
retw
xchg
fdivrl
cwtl
aas
lret
jo
sbbb
adc
adc
xchg
mov
sti
in
sub
push
dec
daa
xor
mov
jg
mov
push
push
cmp
mov
pop
jecxz
add
xor
mov
push
xchg
push
in
das
stc
movsl
dec
decl
jns
mov
push
adc
xchg
aas
movsb
mov
cli
sub
outsl
mov
pop
push
rclb
mov
dec
popf
inc
ljmp
push
stos
and
add
pop
inc
fcomip
popa
loopne
adc
out
das
lret
add
add
or
mov
or
pop
lahf
or
mov
daa
and
push
lea
sbb
mov
div
and
aam
adc
xchg
lahf
pop
push
mov
xor
lods
jecxz
movsb
cmp
test
popa
adc
xor
add
cltd
add
rcrb
mov
and
jns
out
aaa
repnz
int3
ds
xchg
mov
enter
lock
repz
xchg
fldt
sub
and
sub
pusha
cmpsl
push
les
fs
aas
ret
loope
pop
jge
bswap
push
mov
sar
iret
iret
lea
lcall
loopne
mov
push
frstor
mov
fnsave
mov
xor
dec
add
pushf
sub
stos
lea
add
and
insl
lock
pop
aas
mov
cmpsl
sbb
hlt
cld
mov
and
das
push
push
sub
jmp
cmp
add
outsl
add
and
or
rolb
ret
cltd
dec
ja,pn
test
mov
and
sub
mov
fcomp
push
leave
mov
jae
jae
pusha
enter
xor
rcll
pop
aad
cld
std
pop
into
fildll
dec
push
and
add
push
mov
fisubrs
jmp
xchg
inc
jne
add
sub
dec
movsb
mov
mov
ja
sub
pop
call
ss
mov
push
popf
out
push
adc
jge
shl
pop
xchg
lods
outsl
dec
enter
cmp
mov
pusha
fs
cmpps
sub
mov
ret
movsl
adc
adc
sub
scas
sbbl
sbb
sub
add
xor
adc
and
xchg
push
inc
das
pop
mov
jmp
sub
iret
inc
push
inc
aaa
pop
jb
xor
pop
xor
fstpt
inc
shrb
sub
scas
xorl
mov
loope
daa
xchg
mov
sbbl
cltd
arpl
inc
aad
int3
jp
int3
jmp
adc
bt
repnz
add
mov
enter
stc
orb
jg
xchg
cmpsb
ret
pop
or
or
sbb
add
data16
mov
jne
ja
inc
or
xorl
jg
mov
push
mov
pop
outsl
or
pop
pop
add
inc
outsl
cmp
add
adc
push
test
add
sbbl
je
pop
jno
or
inc
icebp
cmpb
jno
aaa
sub
fistpll
lea
iret
xor
add
testb
jp
lock
lret
xlat
adc
mul
jns
adc
jno
or
cmp
iret
js
pop
push
call
inc
or
mov
cmpsb
or
in
xor
sti
andl
rolb
mov
nop
jecxz
mov
xchg
scas
cmpb
xor
mov
sbb
dec
je
xor
lea
fistps
in
loopne
pop
adc
popf
jne
push
xor
lea
fisubrs
aaa
scas
add
rorl
pop
stos
xor
add
popa
mov
lahf
sbb
jmp
aaa
sbb
cmp
std
test
aas
cmp
jg,pt
push
inc
out
into
add
and
fldcw
inc
xlat
xchg
iret
or
in
aaa
testl
iret
popa
sub
add
shlb
push
shll
iret
pop
sbb
adc
pop
xlat
fnstcw
xchg
and
jmp
and
mov
or
enter
or
and
pop
adc
out
daa
lods
jle
loopne
pop
dec
pop
cmpsb
bswap
jg
enter
iret
push
mov
cld
jmp
add
movsl
push
mov
xor
mov
lds
dec
jnp
jg
lahf
je
movsl
insl
test
xchg
jnp
xchg
cwtl
sbb
add
idiv
add
push
add
mov
cmc
add
mov
icebp
inc
icebp
inc
fistps
fisttps
ficoms
or
push
pop
outsl
or
inc
adc
out
dec
adc
shl
pop
jns
addb
fs
and
cmp
test
rolb
jns
movsl
iret
ret
sarb
jae
loopne
xchg
and
rorl
rol
and
pop
sbb
sbb
popf
push
notl
rol
fwait
adcb
cli
mov
dec
loope
push
testl
bswap
xor
xchg
fcompl
aas
dec
push
andb
mov
lock
fisubrs
sub
xchg
pop
push
pusha
rorl
push
out
xchg
push
sub
push
scas
push
movsl
jae
lcall
sti
cmp
mov
in
mov
cmp
push
jne
adc
imul
jb
add
sbb
andb
inc
adc
mov
xchg
push
in
jne
adc
pop
outsb
out
inc
jo
xor
in
aad
dec
or
jb
hlt
iret
shlb
add
jo
jo
mov
push
loop
jge
js
push
inc
adc
push
mov
fldcw
xor
repnz
daa
insl
and
aas
sbb
adc
xor
movsl
dec
xor
pushf
push
dec
outsl
pop
loop
sti
adc
out
bound
xor
mov
mov
jmp
jge
dec
popa
add
test
dec
pop
aas
push
dec
dec
xor
cwtl
sti
push
adc
xor
cmpl
es
jo
cmp
push
push
dec
mov
bound
push
xchg
test
or
push
pop
outsb
jne
hlt
leave
stos
mov
lahf
mov
stos
push
add
adc
popa
ja
push
stos
mov
imul
inc
cmovbe
arpl
mov
rcll
sub
jmp
pop
cmpsb
daa
aad
mov
xor
out
pop
inc
repnz
push
inc
jge
in
popa
subl
cmp
sti
jo
inc
mov
addb
cmp
cmpl
pusha
pusha
and
mov
pop
pushl
sbb
jno
pop
in
in
cmpsb
imul
cltd
ja
jg
pop
pop
inc
iret
fbld
imul
adc
add
adc
aaa
adc
addb
pusha
push
adc
push
imul
int
iret
out
cltd
loopne
cwtl
movsl
gs
pop
cwtl
jns
idivb
andl
sbb
shlb
pop
xlat
rolb
je
inc
mull
jns
push
dec
sbb
jle
outsb
fnsave
enter
push
jge
notb
mov
std
into
test
in
jp
mov
aaa
and
lret
int
jle
cmp
addr16
lods
jl
cmp
xchg
pop
aas
lret
xchg
mov
mov
repnz
std
add
xor
cs
sub
outsb
jp
inc
inc
ja
movsl
push
fabs
nop
cld
movsb
daa
std
lfs
jg
jnp
jp
add
mov
mov
sti
out
cmp
fucomip
mov
push
ja
movsl
add
in
xor
cmp
leave
mov
fists
aas
jae
call
sub
jbe
popf
and
pop
mov
pop
repnz
pop
and
mov
and
sub
or
jg
and
test
cmpsl
dec
jne
xchg
daa
fcmovnbe
mov
mov
xchg
xlat
aaa
add
or
mov
in
push
jmp
adc
cld
rolb
mov
aas
in
sub
movsb
push
sub
js
and
adc
lret
outsl
sub
xor
nop
sbb
pop
inc
pop
mov
sub
jmp
mov
aaa
jnp
sbb
fisttps
add
adc
add
iret
fdivl
clc
sbbl
push
minps
pop
and
inc
pmaddwd
jnp
mov
cmpb
fstps
incb
xor
stc
or
mov
stos
ret
iret
add
adc
and
daa
pop
jo
push
jnp
sub
in
sub
adcb
mov
lahf
out
sbb
cmp
pop
mov
inc
mov
pusha
jne
add
ficoms
add
add
and
and
mov
cmp
pop
dec
movsl
daa
mov
adc
push
lea
inc
cwtl
pusha
movsl
pop
hlt
les
inc
loop
pop
or
add
out
out
cld
pop
and
push
daa
iret
pop
inc
jo
push
jne
ds
fwait
cmp
dec
mov
jne
insl
repnz
mov
lahf
shlb
out
test
stos
adc
popa
or
dec
sbb
mov
adc
ror
add
mov
out
xchg
cwtl
ret
fmull
xchg
sbb
or
mov
xchg
pop
push
xor
lds
jnp
mov
sbb
mov
xor
mov
xor
mov
ret
add
stc
fbstp
scas
insb
cmpsl
jnp
push
movsb
int
mov
jnp
inc
mov
shrl
or
repnz
mov
mov
mov
repnz
push
sbb
adc
xchg
stc
cmp
outsb
mov
and
arpl
sub
sub
sub
pusha
and
and
xlat
xchg
push
xchg
lcall
outsl
sub
pop
add
pop
sbb
imul
mov
cmp
iret
pop
cs
add
inc
out
push
jbe
cmpsl
pop
fs
outsl
dec
nop
jmp
pop
mov
jns
inc
push
inc
pop
mov
pop
pop
cmp
cmpsb
jae
insl
pop
pop
cmp
pop
cld
pop
pop
inc
jbe
push
or
outsl
in
dec
loop
xorb
loopne
ja
fildll
jl
out
and
fisubs
jns
sbb
pop
loop
mull
sbb
jno
int
fwait
lahf
lret
dec
in
lret
icebp
sbb
sbb
jge
cmp
add
jbe
int3
nop
sub
sub
das
jl
aas
jb
mov
add
sbb
xchg
rcll
xlat
mov
jae
loopne
add
loop
adc
loopne
daa
stos
iret
iret
rcrl
rorl
fsubs
push
daa
dec
in
dec
loopne
mov
add
outsl
xchg
mov
xchg
sub
stc
aas
rcrl
pop
jne
mov
sbb
sub
inc
jg
dec
aaa
std
jae
stos
hlt
or
lods
mov
lods
dec
in
xor
push
scas
jno
mov
notl
adc
xchg
xorl
ja
sti
xchg
fdivl
mov
popa
in
cmpsl
mov
or
push
mov
popa
loopne
cltd
cld
inc
lret
pop
pop
pop
cmpsl
shl
cmpsl
pushf
or
jmp
popf
pop
pop
shlb
xor
fstpl
repz
fcompl
add
push
xchg
cmp
mov
add
je
lea
sbb
lea
ret
xchg
pop
fists
call
in
adc
out
sub
divb
pop
pop
insb
pop
mov
push
mov
movsb
lcall
cmp
shrb
xchg
pushf
push
pop
or
pop
ret
orb
lock
pop
shl
and
xchg
fistpll
or
sub
aas
roll
in
dec
jae
repz
xchg
jp
rolb
sub
test
add
cmp
xchg
inc
mov
dec
test
fisubrl
xor
out
push
adc
aam
cmpsl
xchg
fcompp
test
add
repz
inc
push
lds
push
inc
call
or
pop
ret
push
iret
jmp
movsl
aaa
xchg
cmpsl
in
xchg
jg
daa
fs
lcall
adc
dec
iret
test
pop
mov
xchg
mov
xchg
cmp
xor
fwait
jno
cmpsl
jp
pop
hlt
stos
inc
out
adc
sbb
aaa
les
sbb
push
sbb
add
shrl
gs
add
repz
pop
push
in
sub
inc
mov
aas
adc
xor
cwtl
cmp
push
mov
arpl
cwtl
gs
adc
push
push
imul
arpl
pop
mov
push
push
icebp
out
test
sbb
jge
or
push
inc
mov
stos
sbb
cmp
in
gs
shll
xor
out
xor
imul
add
push
pop
fstpl
ds
lret
pop
push
movsl
jle
gs
pop
xchg
inc
leave
test
das
xchg
add
iret
ljmp
pop
pop
xchg
xchg
in
in
pop
dec
hlt
xor
mov
ja
mov
pusha
daa
scas
nop
movsl
mov
or
jge
jge
out
sbb
pop
inc
mov
inc
fwait
push
inc
sub
ret
or
ret
or
add
or
test
or
loop
das
mov
pop
inc
jne
sbb
data16
xor
popa
mov
decb
adc
sub
dec
push
and
in
iret
movsl
fsts
add
add
loopne
repz
aas
mov
cmp
add
mov
and
addr16
sbb
cli
mov
add
mov
stos
pop
fst
and
and
rclb
sub
cld
aad
cld
mov
push
mov
stc
sub
mov
sbb
loop
inc
xchg
hlt
mov
dec
sub
shlb
insl
pop
cli
mov
dec
daa
pop
lods
sbbl
inc
push
xor
xchg
stos
and
aad
push
inc
pop
scas
sbb
loope
mov
pop
mov
aas
mov
xor
es
stc
enter
inc
push
fstpt
push
fcmovnu
pop
shl
and
xchg
inc
loope
push
lods
outsb
movsl
inc
jl
jle
pusha
out
fistl
xor
andl
cmp
inc
nop
mov
mov
mov
sub
das
xor
add
sub
mov
pop
xchg
fstl
movsb
mov
jns
add
jg
mov
aas
xorb
push
cld
sbb
ja
add
stos
je
notl
mov
push
ds
xchg
cmc
xlat
test
add
scas
sub
cwtl
movsb
in
outsl
les
das
testl
mov
mov
pusha
inc
xchg
xor
daa
das
jle
mov
loopne
cmpsb
sub
lret
stos
push
or
daa
xchg
cmp
mov
in
aad
and
mov
mov
out
fldenv
fwait
shrb
gs
and
aaa
mov
cmpl
jp
stos
sub
or
sub
dec
cmpsb
and
pop
add
jp
lahf
mov
fldenv
pop
out
outsl
dec
testl
lsl
add
mov
sub
xchg
add
xor
pop
ret
aas
daa
pop
movsb
addr16
mov
cld
sbb
or
add
rorb
jae
dec
xor
in
adc
or
dec
jl
imul
orl
push
in
movsb
or
je
incl
out
mov
sub
mov
je
dec
pop
and
sub
mov
decb
mov
out
mov
pop
sub
outsb
fadds
or
fwait
inc
aaa
movsl
imul
adc
fildll
or
jmp
pop
lea
cmp
cmp
das
add
shr
mov
cmp
ret
daa
insl
pop
and
jb
mov
dec
add
xchg
hlt
push
inc
cmp
inc
adc
popa
inc
and
or
add
cmp
mov
lods
mov
jmp
mov
icebp
sbb
aad
stos
fisttps
mov
and
hlt
adc
xor
jg
pop
sub
out
test
daa
sbb
es
add
outsb
xchg
add
push
mov
stos
cmp
add
cli
cmp
sbb
mov
cld
xchg
xchg
iret
mov
or
aas
sbb
mov
mov
ljmp
xor
dec
adc
dec
jno
pop
mov
dec
cmp
add
icebp
pop
dec
jbe
sbb
divps
mov
push
popf
stc
push
mov
aas
xor
daa
jmp
sub
mov
jp
stos
ret
jge
xchg
push
sarl
iret
imul
add
movsl
adc
adc
cmp
or
add
push
mov
jb
xchg
add
lret
cmc
add
inc
add
aad
scas
test
xchg
mov
mov
out
adc
or
fnstsw
cmp
inc
and
pop
or
call
dec
hlt
call
jg
add
mov
lods
cmp
mov
bnd
aas
xor
xchg
loop
push
xchg
dec
test
dec
xsaves
repz
pop
xorl
loopne
jnp
mov
or
ja
jmp
cmp
mov
out
sbb
loop
add
stos
add
lods
sbb
jno
adc
imul
pop
std
adc
or
or
loop
ja
test
aas
or
fildl
or
mov
outsl
mov
or
fld
or
adc
xor
mov
aas
adc
and
push
pop
in
and
cwtl
out
dec
ret
xchg
or
pop
add
cs
xor
adc
push
les
enter
pop
mov
fwait
scas
cs
cmp
fistpl
into
lods
fs
daa
mov
ret
jecxz
out
leave
fs
inc
int
aaa
test
add
jg
inc
add
lret
jne
int3
lods
out
xor
push
iret
fbld
sub
loop
jnp
push
cmpsl
cwtl
movsl
cmp
notb
xchg
pop
cld
jl
shl
movsl
daa
add
cli
or
movsl
inc
fimuls
dec
fwait
jge
jo
daa
dec
cltd
rolb
dec
test
pop
into
insb
pusha
pushf
jo
sub
aas
shll
popl
cli
inc
sub
and
push
int3
cmp
jmp
inc
xchg
mov
in
fwait
mov
pusha
cltd
lret
rcr
sbb
movsb
mov
inc
sahf
xlat
mov
cmp
dec
insb
fcompl
arpl
je
nop
arpl
loop
cmp
xlat
jbe
pop
loope
cmp
jecxz
test
add
add
dec
mov
cmovne
add
or
and
dec
addb
dec
push
jcxz
dec
jnp
and
cwtl
pop
lea
fcmovnbe
add
jne
ja
sub
add
aas
xchg
lcall
mov
arpl
enter
loop
dec
daa
cld
lock
xorb
inc
in
mov
jnp
jo
test
sbb
enter
repnz
cli
pop
pushf
mov
dec
sub
jp
gs
fwait
pop
rolb
adc
xor
cmp
sarb
ret
pop
xlat
daa
iret
loope
adc
mov
ret
hlt
push
push
push
jg
xchg
lock
mulb
ret
cmp
and
call
jmp
adc
ss
lods
sub
test
pushf
je
add
add
cmp
jg
jg
and
push
jb
xchg
mov
into
xor
mov
dec
push
in
adc
pop
pop
push
ret
pop
pop
in
mov
dec
pop
dec
mov
xor
push
xor
imul
add
sbb
xchg
cmp
mov
stos
lea
and
add
pop
dec
jl
push
sbb
aam
iret
dec
cli
xor
mov
adc
addl
movsb
or
mov
add
jmp
lret
xor
pop
stos
fstl
sub
cmp
sub
and
add
jp
jecxz
es
sti
jl
ret
push
addl
std
add
icebp
fbstp
mov
iret
mov
mov
xor
dec
out
lret
mov
add
mov
adc
jns
inc
cmpsl
push
int3
mov
sub
jno
test
add
decb
ret
fsubr
push
jo
decl
mov
fsubl
adc
push
sbb
pop
dec
loope
and
adc
mov
inc
insl
out
mov
sub
jno
aad
add
int
pop
xchg
int
mov
mov
scas
mov
inc
insb
mov
sti
push
fs
out
sahf
movl
dec
addr16
incl
add
lock
xor
fnstsw
loopne
xchg
decb
pop
mov
imul
jnp
dec
scas
pushl
xchg
out
out
lea
lods
cmpsb
inc
cmp
cmp
inc
mov
push
push
dec
mov
fwait
cmpsl
or
or
adcb
lahf
mov
mov
pusha
push
inc
dec
cmp
jae
daa
mov
das
inc
mov
mov
mov
fstps
mov
out
push
das
xlat
insl
jns
fwait
dec
xor
jg
jnp
mov
bound
insl
cltd
dec
jp
mov
fistps
mov
std
sbb
jno
addr16
mov
and
xchg
inc
pusha
xchg
push
push
add
into
je
or
sbb
fwait
xchg
clc
addb
xchg
gs
push
arpl
xor
pop
push
mov
and
pop
or
jmp
fists
ja
mov
pop
add
and
adcb
xlat
fistps
pop
jne
xor
repz
fistpll
push
pop
sub
xchg
sub
push
pop
inc
mov
in
cwtl
fdivrl
cmc
dec
xor
sub
fisttps
add
ljmp
in
jle
xor
add
adc
sbb
test
data16
xor
inc
das
jmp
imul
add
cs
push
mov
push
mov
cwtl
add
adc
mov
sbb
test
test
data16
xchg
push
push
dec
push
inc
and
subb
add
pop
mov
add
add
mov
add
pop
lock
xchg
adc
push
aad
lret
xor
xlat
sub
jb
daa
add
stos
cmp
add
mov
mov
das
sub
dec
inc
incb
loope
pop
xchg
stos
pop
pop
pop
daa
mov
pop
js
xlat
rcrb
movsb
pusha
jecxz
push
inc
scas
lods
xchg
repnz
mov
inc
mov
in
jnp
aaa
xlat
mov
fabs
push
mov
sbb
jnp
push
mov
mov
fs
jmp
lea
adc
mov
dec
jno
ret
test
jl
sbb
pop
adcb
sbb
mov
cmp
adc
push
in
inc
ja
adc
xchg
loopne
add
mov
push
int3
ret
inc
lret
mov
test
adc
and
pushf
pop
aad
xor
xor
mov
push
xor
imul
shlb
leave
pop
out
xchg
cld
and
loopne
leave
adc
or
jns
xchg
pop
jmp
into
inc
lock
sbb
mov
sub
pop
fisubrl
enter
jo
call
arpl
stos
mov
mov
out
add
cmpb
cmp
add
orl
addr16
dec
jno
aam
lret
ljmp
push
lret
mov
outsl
inc
orl
push
sti
in
pushf
sahf
adc
mov
push
ja
cmpsl
or
push
das
lea
cld
push
cltd
push
cli
and
movsb
movsl
mov
dec
jae
repz
call
and
pop
push
add
jae
lods
adc
xchg
dec
jns
imul
fwait
cmpsb
mul
push
sbb
jns
push
scas
rcll
mov
or
mov
mov
cmpsl
sbbl
adc
adc
mov
stc
cwtl
mov
mov
jbe
adc
jae
test
inc
xor
sbb
xlat
add
aas
pop
push
pop
adc
cmp
add
in
jbe
outsb
add
test
push
jne
xor
xchg
jns
insl
mov
das
cltd
icebp
pusha
loopne
push
mov
mov
jmp
or
decl
es
or
push
and
inc
cwtl
cli
or
cltd
pop
out
xchg
iret
push
and
fs
ja
adc
repz
mov
mov
les
and
dec
fadd
dec
outsb
aas
es
jle
sbb
pop
iret
imulb
xchg
sbb
add
push
mov
ja
pushl
mov
dec
inc
das
mov
and
ljmp
sub
cmp
fsubrp
not
push
push
movsl
dec
out
or
mov
pop
push
out
bound
gs
inc
das
daa
jp
jecxz
shll
sub
or
inc
fbld
inc
aad
mov
notl
add
iret
and
xchg
pop
xchg
iret
dec
mulb
ffree
mov
add
jnp
jecxz
jecxz
pop
fnstenv
push
mov
pop
das
pop
and
add
mov
in
pop
ds
adc
je
pop
sub
lods
mov
jb
mov
mov
mov
call
inc
fld
rcrl
jnp
imul
sbb
mov
add
out
andl
dec
mov
shll
shrb
rorl
jecxz
lcall
add
sbb
xlat
dec
mov
mov
mov
adc
shl
in
push
cmp
nop
push
iret
repz
lahf
xchg
cmc
sahf
clc
push
jp
nop
adc
iret
cmp
pop
test
ds
mov
imul
xchg
push
xchg
xchg
das
data16
cmp
jmp
movsl
out
or
push
enter
in
xchg
scas
aas
stc
lods
add
mov
std
push
div
sbbb
mov
push
imul
adc
popf
out
xlat
pop
call
lea
adc
xchg
mov
mov
adc
in
out
xchg
mov
shll
push
mov
cmovle
and
and
jmp
xchg
in
adc
mov
pop
fisttps
sbb
ret
dec
ret
pop
push
orb
xchg
lea
loopne
outsl
push
pop
int3
out
repz
push
xchg
aas
arpl
jo
dec
stos
imulb
sub
jl
in
mov
lea
xor
xchg
push
test
jmp
jmp
pop
xor
adcb
out
inc
mov
mov
cmc
xchg
mov
adc
pushf
iret
xchg
pushf
ret
ror
and
fisubs
jns
jle
xchg
mov
push
inc
insb
fcomps
popf
je
scas
aad
test
sarl
jo
iret
nop
cmp
add
bound
enter
call
mov
add
adc
test
xor
sbb
enter
xorl
xchg
fistl
xor
pop
hlt
aas
jge
pushf
cld
dec
test
push
ds
ret
cmpsl
popa
sub
pop
dec
test
xor
nop
movsb
jl
ror
enter
sbbl
andl
inc
das
fisttpl
aaa
sete
xlat
popa
sbb
sub
add
cwtl
push
and
arpl
outsl
jne
mov
inc
jnp
cmp
mov
xor
aaa
mov
icebp
lahf
cmp
lds
mov
mov
cmpsb
mov
push
or
es
andl
push
adc
lea
ja
in
push
inc
scas
fwait
xor
pop
mov
fistps
jle
mov
inc
sbb
addr16
ret
aas
lock
in
bound
cld
pop
insb
ljmp
push
aad
jb
xor
mov
mov
add
call
add
inc
add
rcll
loope
mov
dec
push
xchg
jo
sbbl
test
fidivl
jnp
adc
inc
bound
pop
xchg
add
sahf
dec
sbb
adc
sub
cmpsl
jp
sbb
orb
or
xor
sub
outsb
mov
xchg
cmp
insb
lock
shlb
dec
xchg
push
push
push
inc
or
xor
xchg
mov
add
jno
inc
cmp
mov
inc
movl
push
pop
mov
sti
pmaxsw
jecxz
imul
mov
iret
mov
or
mov
or
dec
imul
inc
dec
iret
movl
inc
mov
lds
unpckhps
mov
ret
xstore-rng
cmpsl
add
imul
inc
xchg
iret
iret
inc
adc
pop
jecxz
imul
inc
test
lret
inc
mov
sbb
subb
inc
int3
mov
inc
sbb
cmp
add
mov
inc
aad
inc
inc
xchg
xor
xchg
test
mov
or
mov
cmp
pop
incl
cmpb
mov
ficoml
cmp
sbb
inc
fldenv
lods
inc
xchg
sub
sub
repz
daa
and
inc
out
nop
or
mov
inc
jg
and
fwait
es
mov
mov
adc
xor
sub
in
arpl
mov
inc
jmp
dec
inc
mov
and
push
das
push
daa
testl
bound
cmc
cmc
pop
add
out
mov
inc
inc
setno
je
xor
push
lahf
aas
mov
jp
cmp
mov
psrlw
das
idivl
scas
cmp
inc
and
or
jge
in
fs
lods
out
cmp
adc
jp
xor
jg
xchg
leave
sub
cmc
xor
xchg
enter
mov
sub
inc
push
jns
in
test
jg
into
mov
lock
push
popa
mov
sub
sbb
cmpsl
popf
add
dec
mov
mov
xchg
cwtl
pop
cmp
sbbb
aad
push
jmp
jle
ss
daa
pop
mov
das
add
jecxz
test
jge
stos
mov
imul
xchg
in
pop
pop
pop
cmc
or
cmp
add
push
or
add
inc
add
sub
pop
sahf
dec
adc
outsl
into
out
filds
fucomip
mov
outsb
ja
mov
cltd
daa
dec
inc
mov
enter
lahf
pop
cs
xor
and
ret
test
mov
mov
cmpl
mov
inc
cmp
cmc
pop
sahf
pop
popf
hlt
jnp
addl
cli
jo
push
daa
mov
fstpl
dec
pop
add
sbb
fcompl
mov
out
fwait
dec
jne
call
movsl
and
lret
jnp
daa
adc
stos
xchg
mov
cmp
gs
cld
iret
loop
data16
pop
jge
xchg
iret
or
mov
adc
movsl
outsb
pop
inc
jl
add
mov
mov
pusha
das
aaa
pop
call
lds
xor
pop
xor
pop
aad
repz
jecxz
lret
cld
fdivl
jmp
or
mov
xor
call
test
iret
push
out
hlt
popf
or
adc
mov
ss
cmp
push
cli
ret
or
cmp
iret
inc
aad
lret
pushf
adc
popf
and
xchg
popa
mov
dec
cmp
ljmp
std
stos
iret
fisubrs
lcall
pop
sahf
in
pop
inc
dec
cmc
fbld
lea
inc
mov
hlt
in
pop
add
fwait
sbb
adc
stos
and
popf
inc
rcrl
daa
psubusb
popa
outsl
fists
mov
stc
xor
mov
cmp
pop
add
aaa
dec
rorl
fwait
xlat
dec
cmpl
in
cltd
mov
push
inc
outsl
pop
adc
and
cmpsl
jg
xchg
mov
pop
pop
mov
clc
sbb
mov
adc
stos
popa
ret
mov
nop
mov
push
cmp
les
pop
push
inc
out
inc
sub
lods
mov
setns
pop
pop
scas
inc
xchg
addr16
data16
out
mov
cmp
dec
loopne
shlb
nop
push
inc
xchg
dec
into
xchg
mov
jp
pusha
lahf
lcall
jecxz
xor
movaps
fmul
adc
sarl
mov
fadd
add
clc
mov
inc
clc
cmp
xor
cmpsb
and
adc
lods
pusha
mov
mov
repz
ja
cmpsl
and
or
test
xchg
mov
sahf
push
xchg
movsl
xchg
xchg
xchg
xchg
insl
arpl
dec
or
xorl
mov
je
or
mov
push
in
or
jmp
daa
iret
loope
xor
gs
cld
mov
gs
xchg
iret
lahf
cld
icebp
and
xor
iret
movl
add
ret
or
and
lret
cmovo
push
je
ret
pop
dec
push
push
add
mov
cmovge
push
arpl
push
xchg
sub
loopne
dec
ja
andb
add
aas
cmp
lahf
fcomp
mov
arpl
dec
addl
pop
pop
in
loopne
jns
rcrl
or
or
push
add
lcall
arpl
fildl
xorl
pop
xor
mov
jg
add
iret
cmp
pop
mov
or
cli
fninit
dec
cs
clc
adc
and
scas
dec
adc
out
dec
mov
sub
sub
lea
xchg
orl
loope
gs
pop
xchg
or
inc
jmp
cmp
icebp
or
cmp
add
aad
lcall
or
cmp
add
inc
push
xor
adcb
or
inc
lahf
sbb
inc
sti
add
sbb
or
and
addl
sub
push
mov
ret
test
pop
inc
lahf
fs
push
add
xchg
or
and
ror
loopne
outsl
sub
push
adc
and
jp
mov
into
push
aaa
mov
cli
pop
mov
pushf
mov
pop
jmp
mov
and
fsubr
repz
jo
push
call
add
mov
adc
mov
jno
cli
mov
mov
std
push
in
jo
stc
jo
cmp
push
pop
or
scas
xlat
movsl
add
call
pusha
gs
sbb
cwtl
sub
test
push
pop
dec
mov
je
test
xor
sub
and
inc
lcall
and
cld
sbb
sbb
or
das
das
testb
mov
cwtl
jge
pusha
xchg
rorb
pop
enter
pop
cli
imul
sub
mov
inc
or
xor
rorl
adc
xor
loopne
stc
shlb
cwtl
stc
xchg
std
adc
and
les
outsl
pop
or
push
add
loopne
sub
into
pop
xchg
push
clc
jne
inc
mov
sbb
push
mov
and
lahf
aas
and
mov
jo
ja
jecxz
push
mov
js
jmp
jmp
adc
xlat
inc
inc
or
enter
rcll
ljmp
push
xchg
inc
imul
ficoms
push
inc
adc
aaa
and
jl
add
rclb
dec
adc
mov
and
dec
sahf
mov
jnp
jmp
sarl
and
pop
lods
sub
and
fidivl
dec
cmp
push
mov
js
inc
dec
pop
mov
in
test
stc
int
xorb
push
lcall
ret
push
es
push
pop
jmp
out
lods
lret
enter
dec
pop
add
fstpl
movups
das
ja
jae
mov
lahf
ljmp
jecxz
loopne
mov
es
orb
rclb
xchg
nop
sub
add
mov
cmpsb
mov
ja
outsl
jns
dec
pusha
jp
ljmp
in
inc
test
aaa
lret
loop,pn
aas
dec
adc
inc
das
xor
cmp
pop
cwtl
cmp
inc
fisubrl
adc
cmp
pop
adc
jp
lods
fisttps
push
or
stos
outsl
dec
sbb
flds
lahf
mov
push
ret
xlat
and
cltd
lods
cmp
mov
add
sbb
push
cmp
aas
push
add
int3
and
mov
fidivs
add
mov
cld
andb
test
pop
dec
out
outsb
fisttps
adc
lods
sbbl
jg,pn
push
adc
out
shlb
mov
pop
jns
push
call
and
outsl
xchg
jae
out
xor
fnstcw
orl
xor
rorl
lret
push
pop
or
pop
testl
pop
ficompl
in
jg
je
lret
mov
push
fdivrl
xor
insb
pushf
jo
mov
subb
pop
pop
adc
enter
and
ja
mov
sub
adc
cmp
pop
dec
xor
xchg
jg
jmp
addr16
insl
das
addb
xor
dec
mov
mov
loop
mov
or
test
inc
push
xor
mov
add
or
jo
sbb
rcll
movsl
xchg
iret
xor
lret
fists
or
out
mov
add
out
jbe,pn
nop
fwait
mov
sub
cmpsl
pop
pop
dec
sub
sahf
xor
dec
loopne
cmp
fs
jmp
pop
cvtps2pd
xchg
push
int3
pop
ja
dec
mov
pop
sbb
outsl
pop
sub
pop
add
pop
dec
scas
xor
in
loope
dec
cmpsb
pop
jmp
mov
sub
out
iret
daa
cmpsb
aas
sub
mov
test
fs
hlt
cltd
pop
xor
stos
and
sti
addl
aad
cwtl
ja
xor
fwait
and
test
int3
movb
sbb
mov
scas
das
sub
push
cmp
or
pop
push
and
xchg
mov
mov
inc
scas
std
mov
aas
ficoms
adc
lretw
push
aaa
and
xchg
adc
pop
mov
inc
or
pop
or
iret
adc
xor
iret
movsb
cli
lods
int
adc
lea
sbb
cmpsb
imul
xchg
and
in
push
fildl
mov
cmp
inc
dec
mov
sbb
dec
push
sbb
scas
lret
leave
pop
cmp
cmp
mov
pop
cli
addr16
xchg
add
stc
and
and
and
mov
jg
push
adc
dec
lahf
test
mov
gs
push
insb
and
mov
and
pop
adc
inc
mov
push
add
hlt
nop
xchg
das
and
add
push
test
xlat
addr16
insb
loope
push
push
xlat
xchg
mov
xchg
sub
push
mov
fcmovbe
jg
enter
outsl
rorb
notl
pop
aas
fwait
sahf
in
pop
xorl
xchg
push
jge
das
nop
xorb
pop
popf
lods
rcpps
outsl
mov
js
xchg
fs
add
sbb
cmpb
wbinvd
cmpsb
cltd
adc
dec
adc
aas
imul
sahf
arpl
aas
test
mov
jae
cmp
mov
ret
fucom
aas
jecxz
sbb
push
mov
pop
add
xor
cmp
and
mov
out
pop
movsl
dec
sbb
inc
and
insl
or
daa
adc
push
add
popl
or
test
xchg
decb
xor
add
btc
add
arpl
aas
loope
or
lods
aaa
addr16
mov
iret
ja
cld
ja
cmp
dec
sub
xchg
cld
mov
adc
bnd
mov
xor
cli
dec
lahf
and
pop
jo
mov
je
andl
cmp
jle
cmp
dec
lock
mov
clc
call
in
les
or
sub
mov
mov
xlat
mov
aas
sbb
and
mov
push
sbb
inc
call
loopne
mov
insb
or
pop
pop
and
pop
aas
and
pop
mov
sbb
fwait
add
adc
movsl
xchg
iret
int3
addr16
add
mov
cld
std
xor
pusha
or
rcr
jge
jns
xchg
adc
shlb
and
mov
sbb
addb
aam
addl
inc
andnps
fldl2e
sarl
adc
and
dec
inc
daa
in
test
je
push
xchg
das
xchg
push
jle
aas
fs
scas
es
pop
lcall
xchg
dec
dec
dec
mov
mov
sub
sub
add
sbb
mov
out
test
adc
aad
es
add
push
imul
aas
and
pop
dec
jae
mov
jno
cltd
push
stc
js
ret
add
sub
add
adc
jnp
dec
icebp
in
sbb
cld
gs
push
and
scas
bndstx
adc
mov
jae
cmp
test
enter
or
sub
sub
lcall
mov
outsb
call
jae
scas
fildll
scas
jb
lret
xchg
iret
cmp
call
in
dec
aaa
fadd
iret
dec
pop
nop
mov
insb
cmpsl
pop
inc
ljmp
lahf
and
sbb
pop
jecxz
test
in
adc
aas
fdivrs
decl
mov
pop
aam
cltd
dec
fiaddl
popa
lock
cmc
in
js
cmp
and
pop
out
and
inc
add
aaa
cmpsl
das
mov
pop
dec
dec
sbb
inc
imul
or
das
sub
pop
movsl
sbb
aas
pop
cmp
pop
cld
inc
pop
adc
push
push
inc
add
incl
jp
push
dec
mov
pop
leave
sbb
dec
fdivr
cld
cmp
sub
adc
call
mov
and
add
sbb
lret
insb
daa
add
or
inc
mov
fdivr
jae
sti
mov
nop
cmp
lea
fwait
out
das
clc
dec
jo
jo
jmp
insb
xchg
and
aad
or
jnp
out
xor
jmp
pop
pop
inc
fcompl
fcomp
inc
dec
jl
jne
inc
lret
cmp
lret
lahf
rcrb
fstpl
cmovbe
xchg
iret
adc
lret
sar
adc
jbe
push
sbb
cli
psubsw
nop
add
loope
push
dec
cmp
fcomps
jns
mov
sbb
in
arpl
mov
jle
sbb
hlt
bound
scas
and
adc
data16
jo
inc
xchg
test
mov
jnp
jae
xchg
int
and
outsl
jae
popa
dec
daa
add
xor
push
nop
mov
sbb
push
int
dec
mov
bound
rcr
test
and
add
scas
and
mov
fisubrl
inc
fsubr
adc
hlt
xor
or
jl
rcrl
out
sbb
adc
mov
int3
das
adc
mov
cmpb
jnp
add
loopne
xchg
fisubl
and
enter
mov
in
dec
cmp
fdivs
mov
dec
adc
mov
ds
outsl
shrl
push
daa
xchg
loope
sti
fwait
inc
adc
jnp
adc
mov
mov
divps
and
out
fistpl
or
cmpsl
outsb
lock
and
dec
gs
inc
xor
or
mov
and
sbb
mov
loopne
jo
dec
aas
dec
aad
push
inc
push
inc
mov
inc
pusha
cmp
cmpsl
movsl
add
cltd
dec
mov
push
pusha
sbb
outsb
fnsave
mov
mov
inc
jg
pop
lds
mov
inc
ja
ret
sub
xchg
and
aas
aam
adcb
mov
pusha
xchg
sub
shr
cld
roll
lahf
cmc
and
xor
cmpsl
iret
dec
dec
out
arpl
inc
xlat
jmp
inc
lods
and
fwait
inc
js
jae
orl
pop
loope
xor
jne
mov
add
push
loop
aad
inc
stos
cmpsl
in
pop
pop
cld
fninit
xchg
popf
xlat
cmp
rolb
sub
das
push
out
loope
sbb
sbb
lea
xlat
sti
dec
xchg
pop
mov
lret
loope,pt
rcrl
aas
cmpsb
jb
fcmovnbe
xor
xchg
add
and
nop
xchg
scas
pop
sbb
add
imul
mov
addl
jle
sub
negl
inc
mov
pop
and
fadds
adcl
out
mov
xchg
das
cld
shr
pop
pop
or
cmpsl
pop
int
push
lcall
pop
pusha
pop
lock
pop
dec
nop
xchg
jl
mov
sub
imull
mov
aad
das
test
pushf
lsl
and
pop
loop
sub
mov
enter
lahf
pop
xlat
mov
test
mov
inc
or
outsl
jge
xchg
aad
xor
xor
lock
adc
das
sbb
sub
fistpll
insl
add
das
movsl
mov
and
sarb
ljmp
or
pop
imul
sarl
adc
adc
out
movsb
cli
push
add
push
xchg
xchg
cwtl
pop
mov
mov
daa
repz
jg
jne
dec
stos
call
xchg
ljmp
cmp
push
jno
cmp
pushf
jno
jmp
mov
lock
xchg
jns
aam
mov
jns
mov
cmp
inc
leave
test
pop
or
jns
xchg
jns
ret
push
out
jns
sub
push
add
mov
sbb
lret
sbb
xor
add
pop
test
xchg
nop
jg
fnstsw
push
arpl
xor
pop
bound
xlat
repz
lahf
cmpl
and
sti
call
or
sbb
stc
iret
cmp
jno
adc
xchg
adc
out
push
rcrl
inc
pxor
sub
mov
pop
push
lea
jp
movsl
fiadds
xchg
jecxz
jmp
xchg
xor
inc
sub
xchg
sbb
or
cmp
rclb
fwait
shrl
xchg
inc
rorl
ljmp
cmp
stc
mov
push
je
sub
aad
out
xor
aaa
mov
cmp
cltd
das
out
push
xchg
xor
cmp
push
mov
aaa
xchg
mov
xchg
out
xchg
sbb
mov
dec
loopne
dec
cmp
mov
inc
es
cmp
push
pop
imulb
ds
xor
pop
pushf
daa
sbb
enter
sub
in
lahf
jae
jge
fisttps
sub
movntq
pop
fmuls
and
dec
dec
testl
es
mov
lahf
jo
xchg
mov
aas
fisttps
les
test
sub
push
jmp
xor
pop
imul
dec
dec
sbbl
sarb
push
sbbl
inc
inc
and
mov
outsl
pop
dec
pop
das
stc
movsb
sbb
mov
sbb
lea
add
inc
xchg
dec
repnz
mov
dec
push
sti
push
mov
cs
aaa
rorl
pop
sbb
inc
pop
lods
or
test
mov
jnp
jg
aaa
das
out
add
outsl
out
lahf
mov
mov
psrlw
push
ja
cmp
jns
and
xchg
out
stos
sbb
subl
xchg
out
ss
and
das
or
popa
lock
repz
sbb
cmp
mov
adc
add
sbb
aas
dec
repz
addr16
sbb
fcoml
or
inc
mov
repz
mov
cmp
inc
daa
rcrb
dec
jg
fstps
aaa
insb
subb
add
arpl
scas
jecxz
popf
sub
mov
repnz
xchg
cmp
out
xchg
add
loop
cmpsl
shrb
mov
and
scas
cmc
add
jge
nop
xchg
jns
dec
add
cmpsl
jmp
arpl
stos
and
mov
pop
loope
dec
ret
add
add
das
cld
push
push
push
in
mov
jne
es
inc
add
lds
imul
arpl
pop
sub
aas
inc
stos
dec
or
call
jo
out
sbb
daa
aas
push
pop
lret
jne
add
repnz
repnz
pop
in
daa
mov
psraw
outsb
into
clc
js
ror
xchg
fs
das
xlat
fstl
pushf
sbb
movsl
repnz
in
inc
jno
sub
add
loop
mov
dec
and
sarb
push
int
sbb
pop
jl
pop
adc
mov
lds
out
jnp
pop
filds
dec
cmpsl
stos
into
testl
and
in
xor
xchg
clc
ficoml
xlat
lock
fidivrs
dec
mov
pusha
sub
lock
cld
jecxz
das
aas
out
sbb
outsb
in
popf
dec
in
int3
adc
pop
ss
nop
cmpsl
fnsave
clc
xchg
push
mov
push
lds
stos
xor
fbld
lahf
pop
lds
aas
xlat
add
jb
rcrb
sub
aas
pop
sbb
insb
pushf
xchg
xorl
arpl
cwtl
lea
dec
fcompl
andl
pop
sub
push
rcrl
or
mov
fcmovne
out
jnp
pop
int
inc
out
pop
jno
mov
pop
and
or
aas
add
loope
jl
cmp
lods
test
insb
xchg
popa
imul
icebp
cwtl
or
fisubl
ljmp
js
test
dec
movsl
fistps
daa
mov
push
das
das
mov
and
add
mov
mov
jnp
pop
je
jg
add
pop
pusha
jnp
adcl
xchg
scas
sbb
push
outsl
push
push
jno
xor
pop
add
js
add
cvtps2pi
adc
cmpl
push
ja
rcrl
sbb
jmp
pop
fmuls
fdivrs
mov
dec
jg
sub
repz
lahf
rcr
rorb
std
scas
pop
pusha
movsl
adc
inc
and
lock
pop
push
fwait
sub
mov
cld
and
jae
cmp
hlt
and
mov
push
or
cmp
sbb
xchg
int
jb
sub
das
cmp
fsts
aaa
out
fsubrp
pop
add
cmp
fwait
jmp
xchg
repz
dec
outsl
mov
pop
sbb
and
pop
cltd
insl
mov
xor
out
or
outsb
lock
adc
add
sub
int
jle
cmp
cltd
subl
and
inc
cwtl
gs
mov
jle
adc
mov
mov
pop
cmpsb
sbb
push
iret
jbe
lret
js
add
xlat
push
loopne
lea
xchg
add
jge
call
add
in
inc
jns
mov
push
inc
jbe
sbb
cmp
das
orl
or
flds
in
cmp
add
lock
and
pop
jbe
add
dec
testl
or
mov
les
or
clc
int3
sub
sbb
in
inc
sbb
mov
das
cmp
add
js
push
adc
loopne
lahf
clc
push
stos
lea
mov
lods
sbb
pop
xchg
cmp
mov
mov
cmpsl
mov
pop
push
out
jnp
lds
lea
jg
aam
push
push
mov
jp
lret
cmp
mov
inc
scas
ss
push
mov
out
stos
mov
sub
sub
sub
inc
outsl
mov
push
push
aas
fcoms
notl
sbb
fdivrs
sbb
xor
imul
jae
mov
stos
jecxz,pt
xor
icebp
xchg
inc
pop
cwtl
inc
adc
mov
jle
popa
jno
jg
jg
mov
cli
push
gs
arpl
xchg
mov
daa
aaa
sbb
into
movsl
outsl
testb
dec
xchg
cmpsl
lock
jae
lock
daa
push
or
add
test
mov
fbld
mov
jnp
mov
mov
cli
lds
subps
mov
cli
ja
push
cmp
outsb
cld
dec
aas
cmpsl
add
popf
mov
inc
dec
sbb
sbb
jp
pop
daa
push
mov
jmp
shlb
cmpsb
or
lock
xchg
adc
mov
dec
popf
jle
push
sub
enter
mov
xor
sbb
jg
loope
jg
loopne
ss
shrl
sub
iret
add
and
pop
or
call
adc
push
xchg
test
pmulhuw
xor
jg
fists
mov
in
movsb
sub
lods
mov
dec
hlt
test
add
subb
dec
inc
mov
mov
paddsb
daa
iret
inc
xlat
out
xor
cmp
fsubr
mov
out
or
iret
add
and
dec
fwait
cmpl
aaa
inc
nop
or
jmp
cmp
out
call
faddp
xchg
mov
jb
div
pop
popf
inc
lds
add
aam
fnstsw
cmpl
cltd
outsb
lret
js
push
pop
or
mov
jg
xchg
sbb
repz
ror
bound
movsb
fmull
pop
jmp
pusha
sub
gs
push
adc
inc
fdivs
aas
sub
arpl
push
cmpl
into
pushw
inc
sub
pop
inc
mov
cs
pop
adc
mov
in
test
outsl
repnz
and
shll
outsl
pop
repnz
add
sub
nop
and
cmp
mov
xchg
aas
pop
movmskps
mov
inc
pop
iret
or
cmc
dec
mov
xchg
addb
inc
xchg
push
add
mov
jae
rcll
and
lret
dec
sbb
dec
jb
push
rorl
and
inc
fistpll
pop
inc
insl
adc
and
ss
add
pop
and
daa
mov
pop
mov
mov
mov
jle
lods
dec
cmp
mov
leave
push
cld
and
outsl
rclb
outsb
jp
into
and
cmp
mov
xchg
sub
pusha
daa
fcmovu
out
std
dec
pop
mov
and
add
cltd
dec
sarb
imul
imul
mov
test
jmp
xlat
cmp
les
xchg
mov
push
aaa
aas
pop
sbb
daa
call
cltd
ss
enter
test
popa
leave
daa
push
mov
movsl
push
and
mov
or
negl
and
movq
push
fisubl
ljmp
in
push
imul
dec
dec
aaa
dec
or
push
cmp
je
and
cld
and
and
test
insb
loopne
clc
mov
mov
pusha
or
nop
xchg
inc
push
lahf
pop
icebp
out
inc
es
enter
das
sbb
subb
hlt
mull
mov
daa
jg
loopne
inc
mov
jns
movsl
das
pushf
adc
dec
jle
daa
jle
outsb
inc
outsb
stos
fstpl
xor
stc
in
push
jmp
add
add
fucomip
popl
dec
xchg
sbb
mov
daa
xchg
mov
and
ret
cmp
mov
pop
or
js
sti
inc
ja
out
stos
add
movsb
jbe
and
and
inc
pusha
repnz
fld1
ror
hlt
in
adc
insb
testl
sbb
lock
pop
dec
sub
or
lret
inc
daa
adc
add
das
out
test
arpl
sub
jp
decl
xor
add
inc
adc
push
sub
or
xchg
xlat
es
xchg
ja
push
aaa
sub
loope
and
mov
mov
add
or
sbb
and
std
in
xchg
add
das
notb
inc
add
mov
loopne
and
pop
ret
pminub
jg
mov
push
cmpsb
mov
les
sbb
mov
mov
jmp
and
pop
jb
mov
adc
int
inc
and
pop
out
stc
dec
pop
daa
add
lock
xchg
pusha
rcrb
sbb
or
leave
inc
jo
sti
and
mov
lret
lahf
cs
iret
xchg
cli
lahf
in
mov
xchg
sbb
cmp
adcb
mov
mov
push
jge,pn
or
inc
mov
mov
adc
imul
or
and
xor
and
aas
gs
xchg
iret
or
cmp
decb
inc
fisttps
mov
shl
mov
xchg
cmpsb
outsb
mov
dec
jo
fsubp
pusha
dec
arpl
pop
sbb
add
pop
and
pop
push
mov
dec
rcll
aas
jbe
popa
or
adc
cli
dec
adc
cmp
jo
adc
jns
fstpt
pop
jmp
in
add
adc
fucomip
xchg
fsubrl
test
cmpsl
ret
nop
aas
incb
and
push
xor
push
popa
lods
fwait
loopne
and
orl
xchg
cmp
lahf
cmp
or
mov
xorl
push
pop
mov
add
add
jl
addl
shrl
lock
add
mov
lods
popa
cltd
addl
adc
and
test
or
mov
dec
and
mov
push
lcall
call
pop
push
iret
and
lahf
iret
mov
sub
pandn
imul
pop
and
and
cmpsl
jb
dec
sub
shlb
cmpsl
xchg
mov
jg
inc
ja
cmpl
xor
inc
int
inc
or
mov
pop
inc
fistl
xchg
pop
cs
movsl
mov
push
stos
sub
sbb
jl
dec
aam
add
or
shlb
shll
mov
mov
jno
push
clc
lahf
sbb
push
sbb
call
sub
dec
mov
dec
iret
adc
stos
xor
xchg
push
xchg
fldt
jl
shlb
je
fistps
stos
leave
mov
daa
push
inc
hlt
and
insl
test
cmp
outsl
imul
inc
mulb
add
mov
in
push
inc
push
test
pushf
sbb
ja
mov
xor
insl
jg
mov
lock
add
pop
jecxz
push
iret
xchg
inc
dec
out
xchg
negl
cmp
stos
or
xchg
jae
lahf
inc
mov
addb
or
sbb
aas
ss
cmp
xor
sarb
cmp
jmp
in
push
xchg
lds
push
out
popa
pop
sub
jmp
dec
and
fucompp
inc
inc
dec
mov
cs
jne
stos
mov
roll
jle
iret
das
mov
out
xor
push
inc
int3
add
aam
pop
out
mov
sub
jo
or
in
dec
test
das
fcom
jns
out
xchg
js
imul
push
scas
movsl
cltd
out
lods
mov
jno
cmpsb
mov
mov
enter
dec
fistl
dec
lea
fdivr
cli
cwtl
or
pop
mov
repnz
gs
cmpsl
and
imul
es
das
out
and
pusha
xchg
pop
incl
cmp
mov
out
xor
and
mov
cmpsl
mov
xchg
cmp
lret
jbe
jmp
adc
shll
shlb
cmpsl
jmp
inc
subl
fstps
scas
fidivs
in
mov
jo
test
fwait
rolb
mov
scas
add
mov
or
xchg
cs
xchg
jo
mov
push
jb
dec
pop
fmull
or
and
dec
lock
mov
pop
cmpl
daa
lock
cmovg
and
or
xor
add
lret
inc
cltd
out
loopne
lahf
xor
xor
inc
mov
adc
push
xchg
jmp
mov
test
pusha
inc
aas
lahf
cwtl
sti
sti
pop
dec
add
xchg
leave
ljmp
cmpsl
dec
aas
cmp
dec
pop
hlt
fbstp
cmpsl
int
pop
add
push
aas
or
add
add
out
fidivs
push
nop
loopne
clc
push
mull
and
push
or
xor
insb
sub
cmp
fwait
or
iret
movq
aad
adc
push
mov
wbinvd
push
divb
inc
jno
js
push
xchg
scas
loop
arpl
adc
push
push
jae
ret
loop
xor
xor
and
push
syscall
stos
add
sub
aas
adc
jmp
mov
aam
xor
aas
mov
push
push
in
jbe
jp
iret
addl
out
add
push
aam
dec
add
xchg
xor
shlb
cmp
icebp
test
sub
daa
push
int3
sbb
push
dec
sub
sub
jae
add
call
scas
adc
mov
xor
cld
les
inc
leave
add
daa
in
add
inc
add
add
cld
sahf
jmp
in
rcl
cld
and
push
repnz
and
movsb
sbb
dec
cld
mov
adc
roll
dec
psrlw
fistpll
scas
jno
mov
arpl
cmpsl
in
pushf
and
ds
mov
enter
or
mov
mov
and
xlat
in
mov
jne
and
sub
adc
or
clc
out
cld
jge
xor
mov
loop
adc
mov
fisttpl
xor
scas
insl
inc
outsl
popf
dec
jae
mulb
mov
adc
xor
cmpsl
rcl
and
aaa
mov
dec
lahf
cld
enter
mov
rcll
jno
call
adc
and
outsl
stos
jle
inc
stc
or
fiaddl
das
mov
cld
xor
pop
push
or
push
aas
out
jp
sub
dec
das
cmpsb
cs
or
inc
fs
fwait
add
cmpsb
push
sub
ds
fsubrl
daa
jp
arpl
sub
leave
cs
pop
loopne
jae
pushf
cmp
cmp
sbb
sub
and
adc
cmp
in
loop
sti
cmp
inc
sub
pop
mov
sbb
mov
push
testb
mull
xlat
movzwl
or
pop
xchg
xor
fucomip
out
dec
mov
lcall
dec
jb
ds
inc
jb
testb
jle
xchg
shl
sarb
jno
jp
cmp
and
incl
scas
mov
sbb
add
pop
out
jmp
cld
das
daa
jo
xor
and
out
mov
out
sbb
inc
fisttps
push
test
cmpsb
cmpsl
mov
lcall
and
mov
cmc
xchg
sbb
cs
dec
lods
outsl
mov
cmp
add
xor
daa
lret
imul
add
and
and
sbb
divl
adc
sbb
push
repnz
inc
sbb
int
dec
pop
mov
lds
push
lahf
pop
popl
pop
dec
add
xor
inc
add
scas
outsb
inc
enter
cmp
pop
push
cli
loope
ja
insb
addl
ljmp
or
xchg
out
fs
cld
adc
popa
cld
iret
cmpsl
pop
nop
or
pusha
dec
aam
add
daa
dec
sub
and
loopne
or
fistpl
jmp
sbb
xchg
ja
sbbl
cli
adc
sub
cmp
xchg
test
lods
xchg
cmp
cmpl
hlt
jne
or
scas
outsl
xor
das
mov
dec
ja
add
push
jg
and
ss
mov
cld
sub
push
push
add
xchg
fwait
cltd
xor
out
repnz
into
fidivl
sbb
add
xor
mov
stos
out
es
or
shrl
pop
adc
pop
adc
dec
mov
call
iret
cltd
pop
xchg
dec
stos
push
mov
cmp
cltd
mov
push
sarl
dec
sti
sahf
ja
add
adc
inc
mov
daa
add
fadds
clc
adc
cmpsl
repnz
mov
and
or
lock
pop
mov
xor
sub
addl
cmpxchg
aam
je
pop
or
mov
xchg
jne
loop
xchg
call
lods
cli
test
push
xor
loopne
or
jg
gs
outsl
xchg
jg
pop
fisubl
sbb
xor
inc
add
push
adc
mov
cmpsl
ret
arpl
sbb
loopne
ss
xchg
iret
push
inc
dec
xorl
cmp
addl
sub
ficompl
lahf
je
outsb
dec
cmp
lods
push
or
imul
or
repnz
jg
mov
popf
push
sub
inc
and
fs
inc
sbb
cmp
push
loope
adc
popf
and
test
dec
mull
lock
push
in
imul
andl
and
in
stos
jbe
xchg
cli
arpl
rcll
jne
mov
and
pop
add
sti
jb
add
andl
or
adc
mov
rorb
insb
das
ja
push
pop
out
pusha
jg
flds
or
lea
cmc
out
jbe
in
inc
sbb
pop
cltd
test
imul
lahf
aas
jbe
mov
xor
push
sahf
adc
add
lock
inc
test
lahf
pushf
xor
loopne
push
cli
xchg
adc
push
sbb
aam
iret
subb
xchg
jae
out
add
nop
sub
mov
pop
adc
cmp
out
and
sub
int
jno
test
xchg
mov
sbb
aas
or
cmp
pusha
add
jns
iret
ficoml
adc
es
adc
inc
call
cmpsl
xchg
stc
mov
cmc
fildll
pop
popl
mov
iret
loopne
adc
jae
ret
xlat
loopne
fcmovu
or
mov
les
fbstp
adc
icebp
ljmp
loope
adc
dec
daa
std
lock
sub
xor
aas
and
jmp
aas
and
cmc
fisubl
and
push
and
mov
sbb
dec
inc
cs
out
mov
mov
push
test
xor
arpl
iret
divl
ja
jmp
rol
lock
add
xchg
pop
mov
out
sbb
xchg
mov
adc
inc
jmp
jnp
fiaddl
add
pop
xchg
push
add
adc
repnz
imul
fidivs
adc
adc
lahf
xbegin
fwait
or
lret
adc
adc
popa
gs
cltd
inc
aaa
xchg
mov
pop
jae
mov
data16
popf
daa
mov
lret
jg
xchg
loopne
js
test
inc
jmp
sub
outsl
and
cmpsb
repz
inc
add
fbld
mov
call
repz
call
lea
and
rorb
inc
cmp
idivb
inc
js
sub
iret
cmp
or
out
std
adc
xchg
movl
lcall
and
xor
add
pop
adc
inc
ds
clc
cltd
fsubs
push
dec
orb
insb
fcoms
frstor
add
iret
mov
xchg
popa
lcall
jnp
fs
push
fisttps
cmp
fwait
lea
jecxz
aas
idiv
jmp
fsub
dec
and
jnp
data16
pusha
jecxz
repnz
retw
clc
cwtl
nop
sti
cmp
xchg
adc
jg
jmp
movsl
in
mov
int3
adc
std
sub
test
mov
lcall
pop
sahf
sbb
cmpsb
iret
test
mov
inc
es
cltd
dec
add
loopne
push
or
jnp
mul
push
fmuls
unpckhps
outsl
lea
cltd
cwtl
outsb
add
pop
or
stos
dec
imul
repz
aam
dec
mov
pop
fadd
movsb
nop
add
adc
cmp
or
out
hlt
das
inc
push
out
sub
and
out
sbb
add
das
pop
scas
lea
scas
andb
add
scas
adc
insl
mov
loopne
xchg
idivb
sbb
sub
lahf
mov
adc
loope
dec
lods
aas
negb
cmp
div
ss
adc
cwtl
xchg
daa
push
pop
clc
inc
fsubrs
fistps
cmp
sti
push
xor
andl
xchg
adc
mov
imul
adc
adc
pop
and
fdivrs
movzbl
xor
call
add
shl
pop
add
ja
mov
and
or
nop
ret
pop
sub
lods
sub
mov
scas
je
and
mov
jne
inc
pop
pop
pop
xchg
xchg
arpl
in
mov
or
or
rcll
and
add
and
or
pop
jnp
adc
aas
in
jg
sbb
mov
clc
adc
and
out
aas
movsl
mov
sbb
stos
fadds
in
mov
stos
cs
and
pushf
cmp
inc
xchg
mov
pushf
daa
into
pop
out
aas
dec
inc
xor
mov
clc
fdivrs
mov
js
pop
or
mov
notl
pop
addr16
cmpsl
aas
xchg
and
mov
inc
xor
mov
call
push
inc
mov
inc
and
adc
call
andb
and
or
adc
mov
xchg
sbb
sbb
or
mov
pop
lret
out
xchg
mov
sbb
lahf
xor
and
je
int
pop
pop
aad
mov
inc
subb
int3
xchg
sub
sub
test
movhps
inc
repz
or
stos
ss
daa
loopne
mov
unpckhps
add
pop
mov
mov
dec
mov
mov
inc
adcb
lock
mov
and
pushf
jmp
out
xchg
inc
leave
testl
dec
out
cmpsl
inc
xchg
sub
mov
inc
lods
pusha
mov
push
cmp
lods
jmp
fldenv
mov
jmp
push
xchg
inc
dec
push
or
icebp
sub
data16
aas
aad
xchg
xor
test
jge
xchg
or
fwait
and
xchg
xchg
and
js
jp
aas
pop
xchg
ja
testb
pop
pop
adc
aam
clc
aam
xchg
mov
adcl
push
push
pusha
cwtl
push
push
cld
and
sbb
adc
sbb
loopne
es
and
mov
and
xor
fldenv
ds
in
cmp
adc
and
mov
lock
popf
aaa
std
inc
mov
push
loope
ror
movzbl
push
les
adc
test
sbb
fcmovnb
loop
xor
jae
xchg
sbb
das
xchg
lret
test
lret
and
cmp
add
rclb
addb
push
popa
aad
mov
in
adc
push
mov
pop
insl
repnz
int3
add
outsl
sbb
aas
and
int3
mov
daa
jge
add
aaa
jge
clc
xchg
leave
loopne
adc
xor
sub
inc
pop
jo
cmp
add
cmpsl
fisubl
or
inc
daa
jo
test
jge
sar
ljmp
fmuls
fucom
sbb
mov
sub
insb
add
iret
mov
stos
aam
xchg
inc
mov
xor
std
push
pop
shrb
rcr
in
inc
jecxz
or
inc
les
sub
clc
mov
and
ja
lahf
lea
push
ja
jb
lahf
cmp
add
pop
xor
jne
mov
xchg
xor
aas
sub
aas
fisttpl
fs
add
lahf
xor
push
fcompl
test
xchg
sub
xor
push
xor
daa
lret
lret
adc
rcl
jecxz
push
pop
inc
cwtl
push
fbstp
sbb
and
xchg
outsl
aad
dec
psrlq
inc
sbb
aad
cmp
jg
ficomps
test
cmp
adc
xchg
xchg
shr
cmpsl
nop
lret
inc
add
pop
ret
inc
dec
sahf
dec
dec
gs
cmp
and
out
outsb
cld
scas
push
repz
mov
inc
add
xchg
mov
jo
dec
pusha
cmc
add
xchg
pop
int
fsubr
movd
jg
dec
outsl
mov
mov
das
ja
xchg
out
pop
ror
xchg
push
mov
dec
adc
sbb
fadds
addr16
pop
and
dec
out
cmpsl
inc
xchg
mov
adc
and
and
jmp
or
movb
mov
xchg
lds
pop
aaa
inc
xlat
ds
mov
rclb
pop
dec
les
or
lds
test
add
jb
fisttps
jnp
lock
jecxz
inc
mov
push
and
out
pop
das
cmp
setg
bound
adc
cli
pop
jge
add
roll
test
and
push
pop
sbb
jmp
roll
cmpsl
es
jo
or
dec
in
xor
iret
push
flds
es
jo
or
cmpsl
stos
aas
sub
je,pn
dec
push
push
iret
xchg
inc
push
stos
or
fs
dec
orb
jle
int3
push
movsb
faddl
negb
cmp
mov
cmpl
pop
push
or
xor
mov
xchg
mov
arpl
shrl
data16
ljmp
cwtl
nop
aas
xchg
jb
dec
xor
jb
jge
mov
cltd
gs
mov
inc
lret
sub
les
popf
push
nop
inc
mov
cld
neg
pusha
sub
pusha
lahf
dec
ja
mov
xor
nop
or
dec
add
xor
push
das
cmp
sahf
jge
inc
jnp
push
popf
dec
xor
dec
mov
push
lds
push
pop
mov
rorb
mov
fbld
xchg
ljmp
pop
cmpsl
add
jg
mov
fildll
cmc
add
or
in
shl
or
xor
mov
rolb
and
mov
or
ret
nop
or
in
and
add
mov
ret
loope
cmp
orb
stos
sub
jbe
mov
dec
fildll
add
nop
call
shrl
sahf
roll
mov
fisubrl
pop
pop
test
xor
dec
cmpsl
add
pusha
jmp
add
adc
mov
call
inc
pop
nop
adc
mov
fcom
cmp
pop
sbb
std
test
inc
ja
jmp
lahf
xchg
out
das
xchg
mov
pop
mov
and
rclb
mov
and
mov
nop
fiadds
lods
es
fiaddl
pop
push
rorb
icebp
in
jns
push
adc
orl
das
test
hlt
sbb
add
sub
mov
daa
push
inc
add
add
push
mov
or
add
cmpl
pop
sub
cmpsb
jge
les
xor
or
movsb
enter
sarb
outsb
cmpsb
jp
dec
cli
mov
xor
test
es
sbbl
or
jp
cmp
inc
push
inc
sbb
or
push
in
pop
sbb
subl
xor
sub
in
fsubl
and
pop
stos
push
fldt
ljmp
cmp
xchg
out
cmpsl
ret
jo
imul
add
outsb
incb
in
daa
out
pusha
add
gs
lods
mov
and
jno
xchg
icebp
add
jecxz
lret
sub
inc
inc
stc
cmpsb
inc
inc
xor
loope
ljmp
mov
push
inc
sbb
outsl
sub
test
rolb
gs
cli
pop
sub
dec
aaa
ds
xchg
or
insl
mov
push
enter
cltd
bound
cmpsl
je
jg
popa
out
adcl
jo
jnp
inc
push
enter
jg
mov
mov
sub
mov
xor
add
test
fists
popf
pop
push
out
icebp
mov
mov
sub
jp
jl
aaa
inc
pop
or
add
sbbb
fsubl
xor
nopl
and
pop
enter
rorl
xchg
rcrl
dec
iret
mov
dec
out
xchg
pop
mov
dec
adc
shll
add
movhps
dec
aaa
push
push
cmc
fiadds
std
xchg
sbb
out
daa
mov
mov
and
cmp
and
stc
add
dec
jnp
jnp
and
xchg
jnp
inc
scas
and
outsl
jmp
mov
push
daa
testl
popl
push
mov
stos
xchg
push
xchg
insl
push
xchg
xchg
mov
add
mov
inc
lret
stc
pop
mov
stos
mov
inc
pop
mov
inc
aaa
es
test
shl
clc
xchg
xor
mov
inc
sub
repz
popf
add
lea
inc
mov
and
xor
jmp
or
adc
outsl
cmp
lret
mov
es
stc
add
movntps
sub
popa
call
loopne
popl
xor
adc
jecxz
fcmovne
add
push
push
mov
cli
add
and
mov
and
jle
jb
aad
xor
lea
aas
lods
or
mov
cld
jg
sbb
and
xchg
int
in
sbb
mov
dec
testl
mov
pop
pop
push
movaps
dec
push
mov
call
mov
gs
loopne
sahf
xor
cmp
mov
inc
xchg
xchg
sahf
pop
inc
xchg
mov
add
dec
lret
dec
push
fs
imul
nop
lds
add
jo
out
jl
sbb
test
outsb
mov
inc
cs
dec
outsl
dec
push
loop
inc
jb
and
or
mov
stos
xchg
out
xor
xchg
jo
popf
mov
dec
out
pop
xchg
dec
or
mov
pop
pop
cmp
xchg
test
dec
outsb
stos
adc
mov
ret
push
inc
sub
popf
dec
test
js
enter
xchg
das
inc
mov
adcl
inc
mov
popl
adc
fstp
xor
roll
fistps
in
and
fisubrs
cltd
jp
insb
pop
cli
outsb
movsl
into
shlb
mov
leave
mov
stc
sub
jae
mov
dec
sub
add
sub
jnp
mov
pop
push
pop
xlat
sub
sti
xorb
inc
inc
mov
lock
cmp
lahf
mov
cmp
iret
stos
movsl
sub
icebp
push
arpl
ja
mov
cwtl
sbb
sub
int
lahf
pop
jle
xchg
xorb
repz
addr16
push
jle
pop
mov
cmp
sub
xchg
cmp
xchg
addr16
pop
mov
imulb
pop
aaa
xor
das
and
out
popf
clc
rcll
push
and
add
pop
lret
insb
cwtl
inc
mov
add
cmpsl
pop
rcrl
lea
lahf
cmpsl
or
or
inc
adc
or
sub
stos
shrb
stos
insb
mov
cmp
push
push
mov
lahf
sarb
sub
sub
cmpsb
xor
pop
adc
add
cmove
xchg
sub
inc
popf
ja
or
lahf
push
dec
dec
jns
in
dec
pop
push
punpckhbw
iret
push
in
out
subl
or
mov
jo
es
inc
add
mov
rolb
adc
rcll
mov
mov
adc
loopne
sti
testl
outsb
pop
sub
in
mov
add
lds
fwait
push
mov
push
push
orl
jge
shl
mov
mov
mov
and
cli
dec
pop
or
in
and
jnp
add
xor
push
and
js
ret
fistpll
mov
sar
pop
push
ds
loop
push
push
out
into
push
xlat
add
pop
aas
add
je
mov
lds
xchg
test
push
das
pop
and
mov
fdivr
mov
decb
daa
pop
loope
loop
call
sub
aas
pop
faddl
dec
pop
sbb
pop
push
or
fnsave
mov
xchg
dec
aas
sub
je
cmp
mov
or
pusha
and
add
push
mov
cmp
add
pop
jle
pusha
cmp
inc
push
jle
mov
mov
leave
mov
sbb
in
pushf
inc
xor
cli
fs
add
dec
lock
jl
inc
xor
insl
pop
inc
imul
push
jle
std
mov
or
cwtl
jno
fisubrs
aaa
je
lret
lods
adc
mov
sub
cli
and
jl
push
sbb
cmpsb
daa
outsl
and
out
lods
push
pop
push
movsl
push
les
adc
mov
add
adc
inc
xchg
adc
adc
mov
rcrb
mov
loopne
mov
popa
add
imul
adcl
les
stos
stos
or
daa
sub
adc
push
xchg
stos
sti
inc
ret
cld
mov
cmp
test
lea
inc
int3
ss
ret
popf
mov
xchg
lahf
or
loopne
ljmp
lahf
cli
in
icebp
int3
lock
push
ret
dec
mov
mov
iret
xchg
mov
sub
xchg
sti
inc
xor
pop
imul
cmpsl
lock
add
stos
repz
pushf
pop
and
push
jnp
mov
ret
shrl
xlat
jg
cmp
iret
in
pop
das
inc
or
or
aaa
add
mov
jl
test
pop
out
rcll
push
ja
lds
or
xchg
push
mov
fcmovu
mov
ss
or
lock
rcrb
or
daa
cltd
iret
mov
mov
inc
incl
push
add
popa
jo
mov
pop
xorl
mov
mov
add
aaa
repz
add
mov
iret
mov
pop
jp
mov
add
rcrl
push
aaa
lods
pop
cmp
push
movsl
lret
popf
arpl
sbb
lock
xchg
iret
outsl
out
pop
pop
mov
out
clc
out
enter
ds
iret
push
pop
call
xchg
jnp
inc
mov
in
jo
mov
lea
aas
les
pop
pop
adc
xchg
daa
and
sub
pop
mov
es
or
adc
aad
pop
xchg
pop
inc
sti
xchg
push
mov
ret
repnz
add
or
rcl
mov
mov
or
daa
xchg
add
add
lretw
or
mov
orl
push
incl
dec
or
adc
xchg
jl
cmpsl
adc
push
push
jbe
dec
sbb
fistps
pop
inc
or
sbb
clc
out
mov
pop
sub
jg
gs
and
mul
push
or
mov
add
and
bound
ret
jae
and
push
xor
loope
movsb
std
lret
mov
push
loopne
push
jnp
mov
cltd
or
lods
dec
cli
out
dec
daa
jecxz
jle
cmp
xor
dec
pop
adc
int
xor
jg
mov
xor
ja
xchg
push
xchg
add
loop
push
pop
jo
mov
cltd
add
dec
stos
in
ljmp
mov
xchg
dec
shrl
das
add
sub
jbe
xchg
and
pop
pop
je
pushf
cld
arpl
daa
outsl
inc
ja
lods
xlat
stc
fiaddl
outsl
jne
shll
push
pop
lahf
mov
xchg
aas
and
mov
inc
cmc
and
mov
and
call
pop
jo
andl
inc
xchg
cli
cmp
sbb
push
jle
repz
jle
stos
aad
outsl
dec
jns
push
fisttps
daa
aaa
jl
and
add
lock
pop
mov
dec
add
inc
and
or
mov
pop
jno
sbb
push
sub
pop
dec
push
lds
testb
xchg
out
hlt
cmpsb
xchg
xchg
jl
mov
dec
mov
stc
push
cs
sarb
es
or
mov
rorb
push
add
pop
addr16
mov
sub
mov
out
repnz
sub
cmc
add
push
negl
dec
cli
pushf
roll
adc
je
push
xchg
mul
mov
cld
cmpsl
ret
dec
enter
in
mov
pop
iret
cmpsb
cwtl
mov
lods
pusha
and
movsl
or
xor
lahf
imul
test
mov
mov
scas
pop
fs
adc
adc
adc
or
jne
xor
les
xor
fxch
outsl
mov
mov
xchg
and
or
mov
stc
dec
stc
jno
das
cld
popa
iret
and
pop
or
push
add
cmpsl
daa
imull
aas
out
cmpsl
outsl
sub
jle
les
mov
pop
mov
or
sbbb
add
popa
cmp
or
and
aam
inc
movsl
mov
lea
cmp
lea
lret
lods
and
add
daa
daa
push
pop
daa
jge
or
mov
das
les
arpl
jno
cltd
or
push
push
movsb
push
jg
pusha
mov
das
ds
shrl
jmp
and
pop
dec
cli
test
and
lahf
add
jb
xchg
pop
sbb
outsb
push
daa
mov
loop,pt
inc
das
out
push
dec
das
mov
arpl
or
das
adcb
xlat
das
notl
mov
iret
xchg
sbb
and
idiv
inc
push
push
dec
ja
shr
mov
jnp
jecxz
jecxz
pop
fnstenv
push
xchg
jmp
insl
fcoml
mov
mov
call
movlps
and
push
repz
cmp
xchg
out
subl
jp
cmp
out
cmpl
and
bound
add
mov
int
ror
inc
aad
fistl
and
adc
mov
dec
cmpsl
cmp
dec
sti
xor
cmp
xchg
test
das
fidivrl
stos
cwtl
rcl
dec
inc
push
add
inc
sahf
adc
and
jg
adc
ficompl
push
iret
repz
add
add
xchg
std
dec
int
adc
mov
loop
cwtl
mov
aaa
xlat
fidivl
outsl
mov
mov
xchg
scas
add
jnp
mov
xor
lahf
xor
mov
andl
xchg
iret
jl
leave
loopne
mov
lret
negb
dec
cmp
xlat
push
ss
inc
in
push
push
imul
das
nop
dec
or
push
jbe
mov
daa
daa
sbb
scas
cs
fstpt
cmp
or
aas
les
push
das
mov
mov
popa
jb
fs
jle
sbb
daa
dec
dec
js
fwait
cmpsl
dec
push
iret
xchg
pop
mov
or
daa
cld
daa
pop
or
out
xor
sub
scas
out
out
pop
mov
loopne
das
inc
dec
fmuls
cwtl
out
push
aas
mov
fidivs
push
in
pop
dec
lods
nop
jmp
ljmp
fs
lahf
test
aad
add
mov
icebp
fwait
push
cwtl
repz
outsb
lds
mov
push
mov
add
sub
sub
push
je
bound
scas
add
pop
and
rorb
es
or
mov
inc
sub
mov
mov
mov
lods
mov
mov
mov
mov
lock
mov
mov
loopne
repnz
lods
enter
jo
mov
pop
push
rorb
aam
add
mulb
scas
out
mov
fsubr
push
jl
adc
adc
rcrl
mov
adc
std
mov
jmp
movsb
mov
jne
fcomi
pusha
sub
cmpsb
xorb
in
cwtl
inc
add
mov
shlb
jl
lret
cmpsb
adc
cmpsl
mov
sub
scas
adc
add
sbb
push
repnz
dec
adc
in
and
icebp
mov
jmp
add
mov
add
xchg
icebp
mov
add
jp
fisttps
inc
mov
and
push
pop
adc
insl
xchg
pop
mov
and
clc
and
xorl
or
roll
mov
fsubrl
dec
xor
outsl
xchg
out
add
hlt
repnz
mov
lahf
push
ja
inc
dec
push
or
adcl
and
psubsb
mov
das
xlat
fnstsw
inc
enter
out
es
xchg
fsubr
pop
xor
lods
mov
xchg
out
xchg
out
dec
stos
push
aam
fsubl
mov
adc
test
test
cmp
das
cmp
mov
add
dec
inc
orl
cmp
or
inc
out
mov
fs
and
das
js
in
xchg
pop
sub
ljmp
out
or
dec
scas
inc
xchg
or
add
push
or
push
aas
dec
xor
or
mov
sub
xlat
sub
jecxz
xchg
setnp
jp
jo
push
mov
out
mov
cltd
dec
jne
iret
sub
iret
mov
xlat
push
mov
aam
push
cmpsl
jp
aam
mov
ret
xchg
mov
push
xor
pop
adc
lahf
cmp
xor
jmp
xchg
out
enter
pop
push
js
mov
mov
dec
les
out
mov
aaa
dec
in
mov
int
push
int
jns
andl
add
cwtl
cmp
mov
loopne
dec
pop
jnp
xchg
push
dec
adc
push
scas
or
mov
roll
inc
fldcw
sbb
mov
push
sub
xchg
mov
aas
out
mov
adc
xor
mov
add
cmpsl
shl
mov
iret
inc
inc
and
fidivs
mov
ss
call
xor
push
lahf
cmpsb
pop
pop
add
adc
jae
adc
push
sub
add
sbb
jae
iret
testb
out
iret
imul
mov
pop
lds
insl
dec
call
ss
push
adc
ds
xchg
pop
push
pop
xchg
pop
pop
xchg
gs
sub
add
inc
jg
and
add
fstl
xchg
mov
aas
pop
movsb
pushf
icebp
cld
xor
cmp
and
add
movb
dec
cld
add
decb
clc
cld
icebp
in
sarb
sbb
pusha
add
and
add
jmp
enter
and
sbb
movsb
xchg
test
and
es
cmpsl
push
out
fsts
shll
dec
jb
std
jecxz,pt
inc
xchg
or
sbb
mov
pop
sub
iret
inc
hlt
std
mov
fisttpl
sbb
ja
mov
inc
add
loope
inc
mov
lods
es
add
insb
mov
mov
push
dec
pop
repz
fstpt
pop
push
adc
pop
pop
in
sub
ss
mov
inc
dec
inc
dec
or
adc
pop
loop
push
popf
repnz
cmp
xchg
cltd
jns
pop
hlt
mov
add
sbb
sbb
jno
or
jno
mov
js
adcb
cmp
push
cli
xchg
clc
pop
adc
dec
pop
mov
enter
dec
lahf
mov
mov
inc
out
cs
jb
daa
pop
insl
sbb
je
aas
outsl
push
xlat
inc
xchg
jmp
outsl
hlt
pop
cmovno
inc
adc
mov
testl
push
ret
popf
jne
push
js
cmp
add
daa
imul
cmpsl
inc
lahf
cmc
xlat
pop
jg
xor
flds
xchg
or
iret
add
inc
das
cli
mov
sub
nop
pop
jg
inc
jb
test
mov
fiadds
lock
push
jecxz
pop
mov
aas
adc
int3
cmp
dec
lods
sub
dec
add
loop
add
test
scas
lods
lods
loop
and
xor
adc
pop
mov
dec
out
fildl
and
movsb
push
xorps
outsl
cltd
xor
stos
sbb
cwtl
adc
stos
loope
adc
inc
mov
aaa
push
fcoml
jbe
xor
cmp
stc
push
sbb
pop
cmovg
dec
mov
stc
cld
add
jmp
aas
mov
push
push
rcrl
jl
pop
stos
mov
and
inc
push
or
dec
aam
enter
sub
pop
mov
addr16
fs
sahf
out
mov
xchg
dec
mov
verw
inc
daa
and
push
push
pop
inc
xor
je
ja
fcoml
std
inc
aas
lock
add
aas
cwtl
cmpl
stc
divb
mov
mov
and
cmp
arpl
mov
cmp
fcmovnbe
xor
testb
cmp
repz
ds
es
sbb
lods
lock
and
sbb
int
dec
lds
out
fdivs
out
xor
lea
and
sub
mov
cmpsb
out
dec
scas
cmp
push
or
or
push
or
push
mov
andb
and
decb
daa
gs
pop
pop
push
daa
out
or
xchg
dec
xor
cld
int
sahf
push
dec
repz
outsl
jbe
or
inc
repnz
arpl
sbb
ss
fwait
icebp
shl
mov
popf
testl
sar
cli
rorl
in
das
dec
jecxz
dec
or
add
cmp
sbbl
add
fwait
daa
movsl
or
cmp
push
adc
cmp
aad
aam
cmpsl
aas
loope,pn
out
sbb
lods
imul
dec
cmc
ja
out
nop
scas
ds
sbb
lods
in
stos
cli
cmpsb
icebp
jmp
aad
mov
cli
cmpsb
add
xor
std
add
sbb
cmpb
out
add
and
icebp
xorl
xor
js
or
dec
cmp
xchg
stos
push
leave
dec
dec
shll
or
outsl
xchg
mov
mov
adc
iret
cwtl
loope
fstpl
mov
adc
push
daa
mov
lea
aas
jle
and
mov
xor
mov
pusha
iret
jno
rcrl
inc
xchg
and
outsl
jmp
mov
pop
pop
repz
xchg
sahf
pop
pop
scas
imul
loopne
adc
push
xor
inc
loopne
inc
mov
mov
pop
cltd
lahf
lahf
addl
cltd
xchg
cli
push
xchg
mov
adc
cli
xchg
pop
lahf
sub
scas
fldcw
call
push
adc
out
push
push
push
inc
add
rorb
lock
iret
sub
out
push
jae
data16
ret
pop
lock
sbb
xchg
inc
push
xchg
aaa
mov
dec
cmp
loopne
popf
push
std
and
mov
xchg
je
mov
dec
adcl
adc
sbb
push
inc
jecxz
daa
les
lahf
mov
loopne
ss
cmp
clc
cmpsl
iret
sbb
cmpl
loopne
mov
call
xor
mov
cltd
pop
fidivl
xor
fimull
xchg
inc
pop
imul
and
cmp
push
inc
loope
inc
mov
adc
cwtl
lock
push
cmpsb
push
fchs
sbb
lock
cmp
popf
inc
cli
cwtl
lahf
adc
cltd
or
in
and
and
movsb
ja
or
fnsave
or
js
sub
sbb
mov
xor
adc
sub
mov
inc
ja
fbld
adc
sar
cmp
lret
push
or
loopne
or
inc
xor
mov
scas
or
test
pop
pushf
inc
dec
xchg
roll
jg
inc
or
jnp
dec
lcall
or
push
sti
cs
or
icebp
xor
mov
cmpsb
ja
mov
push
out
xor
iret
mov
sub
jle
fcomps
jg
sub
aas
mov
iret
jl
ret
faddl
lret
inc
data16
lods
insb
or
push
add
push
xlat
mov
adc
adc
fwait
insb
popf
push
mov
ja
inc
add
jns
loope
pop
in
sub
inc
pop
pop
mov
stos
or
lds
int
inc
fmull
dec
mov
push
insl
outsl
mov
cmp
pop
insl
jmp
inc
fistpll
hlt
test
lea
mov
pop
das
repnz
popf
aas
jp
mov
jmp
cwtl
neg
movsl
das
stc
rcl
and
pop
mov
lahf
das
loopne
push
adc
mov
sub
nop
arpl
fwait
inc
sbb
jle
pop
add
mov
jge
push
ret
es
data16
pop
adc
das
loopne
data16
aam
adc
icebp
or
add
scas
pop
pop
adc
push
mov
xchg
jg
and
in
inc
inc
ret
aas
or
adc
loopne
arpl
movsb
inc
jmp
sub
fdivs
or
pop
sub
repnz
mov
cmp
xchg
sbb
mov
add
aaa
cmovns
out
negl
fucomip
lods
in
pop
jge
lods
inc
mov
dec
out
ret
cmpb
or
adc
test
and
jle
sub
jno
xor
or
aad
outsb
in
out
in
test
leave
in
daa
jo
cld
add
sbb
rcr
int3
fiaddl
or
pop
mov
push
sahf
pop
jns
mov
mov
or
or
inc
jmp
fistps
cmpsl
mov
push
jl
xor
cmp
mov
mov
mov
push
jmp
movsb
aad
sbb
xchg
repz
test
push
adc
in
xchg
xlat
jl
mov
pop
ds
jle
push
outsl
ljmp
pop
dec
in
mov
adc
clc
fmuls
xchg
jne
ds
jp
or
mul
pusha
aas
jb
call
jne
inc
outsl
sbb
bswap
pop
jno
push
imul
hlt
inc
outsl
iret
vmptrst
clc
xorl
outsl
mov
pop
lahf
out
jmp
pop
push
stc
inc
sbb
pop
or
sub
lock
mov
addr16
and
adc
add
ret
xchg
lds
cmpl
scas
js
cmp
aas
movsb
dec
sbb
mov
jmp
in
add
mov
movsb
mov
enter
insb
jp
scas
xlat
cmp
push
fidivs
add
jg
rcrl
xlat
mov
or
add
mov
add
sub
or
xchg
sub
ja
stos
aas
cmp
add
pop
js
push
and
rsqrtps
add
add
setge
mov
test
test
inc
arpl
std
lods
sbb
loop
push
shl
push
and
rcrl
cmp
cvtpi2ps
fs
mov
xchg
lods
jbe
jg
out
pop
dec
dec
pop
aaa
push
inc
adc
fiaddl
and
addb
jnp
pop
mov
inc
cmpb
pop
cmpsb
dec
addr16
test
xchg
jo
icebp
mov
pop
jmp
lds
pusha
arpl
push
dec
push
repz
adc
and
add
hlt
lea
adc
es
sub
push
das
pop
sbb
mov
xchg
mov
jl
lret
xor
lods
rcl
cwtl
inc
loop
out
add
pop
add
sbb
dec
sub
hlt
pop
cmp
scas
fcomp
push
dec
or
mov
pop
fbstp
mov
loope
push
pop
es
insb
fldt
inc
dec
mov
pop
and
inc
arpl
inc
cmp
imull
and
insb
fidivl
and
jg
cld
in
dec
adc
xchg
jnp
jg
sub
in
push
or
jle
add
add
repnz
mov
cmpsl
movsl
imul
call
dec
adc
scas
add
out
outsb
in
shl
or
outsb
mov
and
fsub
mov
aaa
lret
push
push
test
outsb
mov
loop
sub
pop
jo
iret
sbb
or
aaa
xchg
inc
ds
test
pop
mov
jge
sbb
or
sbb
sbb
in
adc
out
adc
push
lret
lds
mov
mov
pop
push
dec
add
xchg
push
add
add
jnp
sub
shl
xchg
in
popa
incl
add
clc
frstor
cmpsb
out
jnp
jns
pop
iret
call
cmpsb
aaa
mov
mov
imul
repnz
adcl
imul
dec
icebp
andb
cmp
cwtl
or
pusha
sbb
dec
arpl
daa
pop
mov
pop
cmp
push
in
mov
add
inc
lods
loope
popa
pop
lock
in
jle
daa
pop
mov
lock
pop
dec
xchg
or
loopne
mov
pop
xor
lahf
or
and
inc
lret
sbb
cmp
incb
sahf
outsl
out
ss
push
sbbb
movsb
or
or
adc
stos
xchg
incl
add
cmp
push
fcoms
add
iret
mov
lods
sub
notl
or
call
pop
aam
scas
sarb
pushf
test
scas
fiadds
aas
mov
cld
mov
mov
in
stos
inc
lret
xchg
mov
cmp
or
and
out
lret
mov
mov
pop
cwtl
test
ja
push
cmp
xchg
sbb
les
and
jbe
jnp
movsl
jno
aas
push
ret
inc
jno
lods
dec
test
loopne
inc
mov
sti
lea
adc
inc
pop
shlw
jns
inc
inc
arpl
pop
or
and
dec
add
aas
mov
mov
outsl
cmp
mov
insb
adc
mov
adc
fwait
aaa
sarb
adc
lods
icebp
xchg
jo
add
sbb
jle
pop
enter
out
and
adc
test
cmp
test
lea
and
cltd
cmp
cmp
mov
xchg
das
cmp
or
cli
fwait
mov
pop
jecxz
fildll
das
fists
lret
mov
pop
daa
sbb
clc
cltd
or
xchg
out
rol
adc
sti
fsubs
dec
cld
xchg
pop
mov
pop
ja
mov
pop
mov
add
in
xor
lret
add
cmp
adc
jnp
mov
scas
xchg
cmp
xchg
sub
mov
addl
scas
add
fistps
arpl
cmpsl
cmp
mov
cmp
and
es
test
shl
add
loop
add
inc
and
orl
dec
xchg
iret
sti
inc
lahf
xchg
lds
adc
in
das
jmp
sub
add
pop
lahf
fsubs
xlat
das
xchg
andb
inc
mov
scas
add
sahf
movsb
test
das
pop
fimull
xlat
testl
sti
adc
mov
iret
in
push
adc
jmp
jns
repnz
lahf
or
lahf
psubb
mov
test
inc
dec
es
repz
jbe
push
sbb
or
popf
jns
add
jae
xlat
insl
jg
movsl
mov
cmpsl
mov
push
dec
or
lea
rolb
jns
jmp
outsl
or
xchg
cmp
add
sbb
and
xchg
inc
mov
and
lods
test
lock
fnstenv
data16
mov
xchg
push
cmpsb
insb
inc
xor
out
shll
daa
movl
rorb
pop
inc
and
pop
and
popf
adc
pop
hlt
sbb
and
daa
mov
je
jg
dec
and
fisttpl
jecxz
ljmp
mov
dec
dec
pop
push
jg
in
sub
inc
adc
cmc
dec
adc
xchg
and
and
fstp
xor
js
adc
cmp
orb
lret
daa
ret
add
mul
or
xlat
add
fildll
mov
xor
mov
add
push
sbb
dec
lretw
negl
xchg
cmp
jnp
fbld
mov
out
xchg
sub
xchg
es
mov
pop
dec
inc
inc
push
iret
iret
loopne
iret
iret
outsl
ret
fmulp
and
dec
mov
or
add
cld
aad
sub
or
mov
cmp
xchg
add
adc
outsl
iret
push
bound
jo
adc
addr16
cmpsb
sub
add
mov
pop
sarl
xlat
icebp
out
sar
ja
pop
add
call
iret
push
lahf
pop
jno
jae
subb
cli
push
push
jno
iret
pushf
cmp
inc
repnz
cmpsl
cmp
sub
loope
mov
std
sbb
psraw
jno
sbb
push
mov
or
loopne,pt
lea
fisubrs
xor
aas
sub
inc
add
lea
daa
or
cmp
and
out
sbb
jmp
fwait
pushf
cld
and
cmp
add
sub
ret
xor
sahf
jge
xor
rorl
into
test
int
jno
or
shrb
mov
fs
or
xor
xchg
add
jae
mov
dec
test
cmpb
pop
add
mov
fwait
dec
aad
cmp
xor
add
call
in
and
jo
xor
mov
test
and
pop
fwait
cld
out
and
fs
add
loop
rcrl
add
add
sub
fisttps
cwtl
adc
cli
dec
lahf
fbld
and
iret
ja
rcr
les
jo
pushf
cld
jge
mov
mov
dec
jne
js
push
pop
mov
mov
or
hlt
jne
aaa
imul
std
push
daa
out
loope
cmp
push
dec
or
rorl
sbb
cld
adc
mov
jl
inc
dec
cmova
mov
and
push
imul
testb
mov
add
pop
dec
std
bound
mov
bound
fcmovb
mov
push
scas
aaa
xlat
push
push
inc
or
addl
xchg
xlat
mov
pop
mov
inc
lahf
dec
std
outsl
mov
es
mov
push
test
jl
mov
jne
aas
mov
mov
daa
xchg
or
iret
jno
mov
fimuls
cli
fs
jae
jo
bound
adc
lret
fscale
jbe
in
cltd
ja
jg
jp
or
in
pop
jnp
movb
stos
jns
push
lret
add
xchg
adc
dec
push
jge
movsb
xchg
mov
and
jge
inc
sar
int
lods
das
hlt
xor
add
mov
xchg
shll
mov
mov
mov
stos
jle,pt
leave
rorb
dec
out
lea
rorw
cmp
outsb
in
out
add
pusha
clc
clc
sar
int3
adc
mov
push
mov
mov
and
add
add
cli
add
push
rol
xor
xchg
and
negb
mov
pop
mov
mov
dec
mov
mov
jle
insb
inc
cmp
roll
jl
push
rcrb
leave
inc
xchg
inc
inc
testl
aam
mov
dec
add
add
call
mov
ds
incl
jp
ds
mov
cwtl
dec
addl
cltd
push
push
rclb
pop
mulb
and
inc
repz
sbb
fwait
ljmp
adc
ds
ja
stos
ds
adc
test
scas
and
or
push
jb
mov
pop
lret
cmp
sahf
das
lcall
ss
movsl
and
out
pop
cmp
sbb
pop
push
ja
js
add
inc
push
xchg
std
negb
inc
repnz
jnp
imul
and
pop
inc
test
gs
inc
shll
bound
add
cmp
pop
bnd
inc
xchg
pop
test
add
or
xchg
rcr
adc
fwait
stc
push
std
out
enter
movsb
and
push
mov
cmp
cmp
fcoms
sahf
and
daa
xchg
xchg
adc
test
pop
aaa
flds
shlb
adc
or
xchg
pushf
pushf
decl
jecxz
test
aam
call
ljmp
push
cmpsb
fs
pop
mov
dec
cmc
inc
push
das
push
leave
imul
mov
lahf
push
jae
subl
push
mov
push
mov
test
sub
js
sbbb
stc
in
and
push
xchg
mov
subb
xor
jecxz,pt
mov
xchg
push
adc
jb
jnp
decb
fmulp
fwait
arpl
das
enter
or
addb
aas
test
mov
gs
push
dec
pop
imul
cmp
pop
in
scas
cmp
pop
imul
pop
lcall
decb
into
xor
cltd
sub
sti
mov
ds
xchg
mov
mov
imul
loope
popf
cmp
popa
outsb
enter
iret
xor
daa
je
sbb
xorl
ret
jns
add
aas
xor
in
stos
in
fstpl
and
das
pop
mov
mov
mov
jb
lret
jns
push
into
mov
add
jbe
pop
mov
cli
sti
jle
movsb
fsubl
out
dec
daa
adc
in
into
mov
pop
ds
jg
outsb
fwait
pusha
xchg
cwtl
jle
inc
or
daa
stc
push
out
add
and
test
mov
pop
add
es
sbb
sub
in
aaa
push
int
push
and
inc
fsts
rclb
cmp
out
test
mov
stc
ss
shlb
pop
punpckldq
sub
push
pop
mov
je
or
push
xchg
incb
lock
pushf
or
cmpsb
dec
or
add
mov
cmpsb
insl
push
icebp
mov
fsts
and
pop
add
push
xorl
push
fwait
mov
dec
mov
lret
sbb
inc
push
adc
add
cmp
inc
cmp
mov
and
inc
pusha
psadbw
adc
xchg
outsb
in
dec
lds
mov
lahf
mov
in
outsb
les
test
dec
or
add
fnstenv
xchg
ret
sar
ret
xchg
stc
or
mov
adc
ja
pop
repz
mov
mov
sbb
mov
pop
or
lret
xor
sub
fidivrl
mov
fstp
aaa
incb
dec
pop
pop
cmpsb
add
cmpsb
das
enter
arpl
push
sub
sbb
mov
out
add
sti
sbb
sub
outsl
loopne
sub
outsl
loop
mov
inc
mov
in
or
imulb
dec
data16
ret
scas
xor
ljmp
dec
into
or
lods
imul
loopne
sbb
xlat
cmp
or
sbb
ficoms
mov
mov
cmpsb
push
sub
or
mov
shll
push
rorl
mov
or
jge
lods
mov
xchg
inc
pop
into
dec
push
int
xchg
lret
mov
lcall
addr16
pop
adc
jno
inc
jl
leave
pop
push
shl
aad
pop
push
xor
rclb
jge
loop
lahf
ds
into
cmp
loopne
movsl
fldcw
das
loop
add
mov
jns
pop
push
or
loop
dec
int
push
xchg
pop
fwait
jg
push
fs
sbb
jl
dec
jns
mov
movsl
xor
push
dec
xor
mov
lret
sahf
imul
jmp
pop
loopne
fisubl
push
addl
push
jg
mov
ret
xor
adc
add
les
gs
in
dec
sbb
fisttps
pop
pop
aad
in
jnp
or
sbb
out
cmp
in
pop
inc
xor
sbb
cmp
mov
int3
lahf
int3
jae
addr16
test
sbb
and
mov
cld
loopne
mov
cmp
xchg
lds
dec
imul
inc
fildl
or
cmp
xchg
lcall
sbb
sbb
add
mov
sub
les
xchg
mov
adc
jns
and
jle
cmp
scas
mov
je
das
xchg
scas
xor
pusha
test
or
and
psubsb
pop
das
loopne
inc
movsb
mov
sub
jmp
int
pop
ret
lcall
mov
in
pop
dec
inc
mov
cltd
pop
hlt
push
mov
pop
cmp
movsl
push
add
fildll
jae
cltd
xor
in
sti
cmp
add
mov
movsl
or
lods
jae
loopne
ret
mov
mov
pop
pusha
push
mov
add
repz
dec
stc
js
adc
mov
addl
faddl
push
outsl
shr
pop
pop
mov
mov
pop
push
testl
push
jae
data16
add
jae
js
push
inc
ret
paddd
fildll
es
enter
adc
iret
xor
cld
imul
sbb
lea
outsl
mov
lods
pop
mov
ds
ficoml
xchg
pop
add
fisttpll
sbb
iret
push
inc
daa
add
xchg
add
cmp
inc
inc
iret
sbb
xchg
inc
out
mov
mov
mov
lahf
andb
pop
pop
add
sbb
xchg
jae
mov
fsubs
jl
out
scas
mov
jmp
data16
arpl
orl
pop
call
cmp
mov
lret
adc
or
dec
xor
sbb
pop
mov
mov
subb
sub
nop
pop
mov
cmp
ja
out
addl
out
xchg
movsb
inc
std
mov
xchg
sbb
xchg
pop
push
push
pop
xor
clc
out
sahf
or
adcb
jae
sahf
nop
add
jae
push
iret
xor
shufps
lret
push
inc
icebp
ja
inc
cmp
adc
fsub
pop
std
dec
jae
ja
cmc
pop
xor
daa
sbb
or
mov
das
and
sbb
iret
inc
inc
mov
fs
jae
xlat
ret
fwait
jae
addr16
inc
inc
add
sub
xchg
fcoml
xchg
mov
ja
mov
inc
mov
xchg
fidivrs
in
outsl
push
ljmp
inc
jmp
fcompl
outsb
cs
xlat
loopne
loopne
sub
mov
cmp
imul
add
lret
inc
jle
shlb
add
aam
in
arpl
add
pop
dec
ficomps
daa
dec
or
ljmp
jae
in
das
inc
gs
insb
imul
pop
imul
add
es
push
and
aaa
mov
add
mov
jae
push
pop
push
or
dec
push
sub
sub
or
jbe
addr16
cmp
data16
andl
arpl
adc
mov
cmp
sbb
sbb
mov
adc
ljmp
and
adc
or
lea
ss
push
mov
stos
jg
xor
xor
daa
pop
inc
jle
bound
fbld
xchg
sub
je
sub
mov
cmp
mov
lret
and
adc
fbstp
imul
popf
pop
mov
pop
sbbb
js
cmc
pop
mov
cmpl
js
adc
or
push
adc
adc
push
mov
stos
mov
mov
das
xchg
sub
popa
adc
mov
xchg
cltd
sub
mov
mov
push
aas
sub
mov
sbb
daa
pop
add
pushf
popa
out
aam
mov
in
out
leave
cmp
aas
add
and
sbb
ror
scas
push
pop
stos
stos
and
cmp
mov
inc
out
cmp
aaa
jg
and
and
lret
js
cmc
inc
push
out
ja
mov
lret
in
and
push
pop
mov
dec
mov
cli
ljmp
jnp
and
loop
push
adc
add
ds
sub
sub
lock
aas
adc
stc
mov
lahf
roll
les
xchg
xchg
std
mov
jnp
dec
clc
sbb
xchg
test
dec
aas
pop
push
inc
push
mov
adc
push
out
push
push
add
xchg
sbb
or
push
cmp
mov
mov
mov
sub
xor
adc
mov
xor
xchg
aas
or
jo
add
in
xor
mov
rcrl
inc
pop
cmp
dec
mov
pop
dec
jecxz
add
add
add
sbb
cmp
decb
inc
cmp
ret
mov
jmp
lea
aaa
dec
xlat
repz
mov
sti
repz
xor
push
in
mov
inc
mov
push
lods
and
adc
leave
add
lret
dec
addb
arpl
add
jns
mov
mov
insb
loope
jb
ja
jp
jno
pop
repnz
inc
test
iret
outsl
push
jg
xchg
sbb
inc
mov
jmp
cwtl
push
xchg
sarl
add
dec
mov
aam
cld
rorl
sbb
add
adc
and
js
cmp
fisttps
cwtl
and
pop
fadd
mov
pop
jne
insb
pop
xchg
mov
mov
jmp
cmp
dec
clc
push
std
inc
stos
sub
mov
in
pop
inc
aas
dec
inc
mov
dec
lods
call
pop
ficoms
push
sub
and
xchg
ja
and
dec
pop
cmp
mov
add
xlat
idivb
push
stc
aas
out
push
cltd
mov
lods
and
in
icebp
push
pop
sub
pop
enter
xor
or
ret
sub
loop
xlat
hlt
cmp
pop
into
cmp
es
cld
jne
dec
and
xchg
inc
ja
dec
aas
std
iret
push
rep
add
pop
cmp
cmp
xor
les
cmc
mov
adc
and
scas
xchg
pop
dec
filds
dec
dec
pmovmskb
adc
outsb
shlb
in
in
cmp
shrl
rcll
cmpsl
andb
xor
or
adc
inc
adc
arpl
pop
inc
pop
andl
pop
xor
jl
xchg
lock
cltd
push
xchg
movl
or
orb
or
ds
divb
sbb
jnp
add
adc
or
jmp
daa
adc
jl
xchg
popa
and
push
adc
les
and
sub
add
mov
fwait
mulb
leave
sti
lods
mov
sarl
movsb
add
mov
xchg
or
stc
or
dec
pop
add
xor
dec
daa
or
jl
out
mov
or
in
push
call
aas
ffreep
ret
adc
lret
push
mov
arpl
mov
rorl
push
ret
push
ljmp
sbb
cmp
or
ss
int
add
iret
leavew
push
pop
cwtl
push
mov
addr16
int3
out
pop
pop
pop
and
mov
das
pop
repz
sahf
push
sub
add
cmp
and
xor
ret
lret
push
mov
and
test
push
movsl
ja
daa
cmpsl
pushl
pop
sub
in
inc
push
inc
clc
and
cld
cld
inc
sbb
pop
jnp
mov
sahf
inc
ja
inc
aaa
leave
xlat
cmc
enter
scas
ja
aas
lock
push
cld
pop
outsl
sbb
or
mov
in
xchg
mov
cmp
mov
cld
mov
sbbb
and
mov
call
inc
ljmp
push
test
in
jae
mov
sub
push
push
push
test
jg
fildll
xor
iret
inc
js
test
pop
adc
inc
faddl
pop
mov
xchg
dec
lds
das
iret
test
jno
push
or
outsl
pop
insl
cmpsl
jl
sbb
push
sahf
xor
cmp
jmp
xor
sti
mov
popf
pop
jp
xchg
xchg
sahf
sti
dec
sbb
xchg
and
sbb
rcll
test
xor
mov
cmpb
xlat
popf
sbbb
xor
pop
xchg
add
lret
loopne
pop
push
lret
aas
cmc
js
test
add
sbb
adcb
jp
sub
fwait
adc
cwtl
sub
and
dec
mov
mov
loop
cmpsb
xchg
stos
add
and
or
jl
cli
sbb
adc
jg
loopne
shlb
xchg
cmp
in
js
and
fdivrl
int
pop
add
add
dec
stc
stc
dec
test
roll
into
icebp
mov
icebp
mov
inc
add
sti
inc
mov
fsincos
ret
jae
pop
mov
out
xor
add
or
add
xor
xchg
cld
adc
dec
aam
loop
inc
out
xor
insl
xchg
les
jmp
stos
popf
and
sub
pop
push
scas
cmp
lea
sub
aaa
ljmp
test
mov
stc
add
add
loopne
sub
pop
or
jo
aad
addb
scas
push
jge
iret
adc
pop
or
addr16
pusha
push
mov
lret
fildll
or
in
nop
jl
adc
roll
mov
js
aaa
scas
push
xchg
daa
mov
out
sbb
ds
inc
dec
sub
dec
mov
jo
lret
push
sub
pop
aam
shr
mov
push
inc
sbb
inc
cmp
pcmpgtw
xor
roll
dec
jg
aas
dec
les
mov
int
aam
mov
lock
loope
mov
jecxz
in
daa
sub
cs
mov
pop
jmp
fnstenv
movsl
cld
dec
in
sbb
test
xor
xor
repnz
mov
pop
aas
ffreep
movsb
cmpsl
add
pop
arpl
pop
pop
or
icebp
mov
adc
xchg
pop
pop
in
cltd
lahf
add
aas
ret
xchg
mov
jae
jno
jp
inc
jle
addl
pop
inc
push
xlat
cltd
add
push
lret
inc
and
mov
je
pop
jno
sbb
idiv
roll
cmp
fcoml
inc
cwtl
lea
movsb
inc
shlb
cmp
mov
mov
daa
inc
push
and
popf
mov
mov
cmp
icebp
adc
movl
cmpsl
push
loop
lods
pop
xchg
jo
stos
lret
add
xor
sbb
and
mov
inc
push
jg
mov
xchg
dec
in
in
and
pop
push
push
jno
mov
jb
sub
scas
xor
les
mov
inc
sti
adc
mov
daa
xchg
add
mov
sbb
bnd
cmpsb
push
aas
fisttps
pcmpeqd
adcl
add
packuswb
jle
jno
mov
ss
jnp
mov
cmp
loopne
lahf
push
dec
add
jecxz
jne
xor
mov
cmp
push
push
daa
push
xlat
mov
aaa
das
ljmp
ja
xchg
gs
or
mov
fs
xchg
loopne
jne
pop
mov
out
into
out
outsl
test
adc
adc
test
mov
bound
add
aas
repz
jp
jns
sbb
out
and
jno
daa
or
orl
adc
dec
fsubl
pop
lahf
push
emms
lods
pop
or
test
mov
scas
lret
adc
aas
cmpsl
lret
sub
cmp
cwtl
mov
fsubrl
cld
jge
adc
cmpl
repz
mov
mov
pop
mov
lds
mov
test
push
push
roll
lahf
xchg
pop
sub
add
sbb
jae
push
xchg
mov
cmc
out
or
gs
filds
rol
nop
mov
and
nop/reserved
dec
std
addl
inc
out
movsl
aaa
jnp
xor
out
mov
ds
das
mov
scas
cmp
sub
push
out
stc
test
test
hlt
das
test
in
mov
arpl
and
push
arpl
filds
jecxz
mov
push
mov
mov
adc
aaa
insl
es
sub
dec
orb
pop
push
push
iret
imul
or
popa
gs
imul
push
shlb
jge
lcall
inc
mov
dec
adc
and
loope
dec
sbb
bound
adc
cmpsb
or
xor
movsb
push
mov
xchg
add
sub
leave
jp
xchg
ss
leave
outsb
pushf
stos
mov
mov
inc
inc
xchg
dec
imul
cmpb
roll
xchg
sbb
in
lds
push
out
inc
xchg
ja
cli
push
jb
repz
orb
dec
dec
pop
pop
test
or
xchg
fwait
push
push
jle
notl
decb
frstor
push
push
mov
or
or
ss
pop
mov
push
jo
mov
or
pushaw
mov
or
out
jae
test
adc
repz
lret
movsb
test
push
push
mov
xchg
sbb
sbbl
lds
push
sahf
adc
daa
shll
cmp
int3
lahf
es
push
jmp
iret
cmp
mov
int
incl
adc
xor
cld
adc
cmp
lea
or
divl
pop
lock
pop
je
mov
pop
les
scas
rclb
lahf
pop
push
ja
xchg
int
into
inc
jp
add
decl
add
xchg
rcrb
dec
push
aad
outsl
jae
push
mov
daa
outsl
sbb
daa
jae
xchg
jo
mov
loopne
not
adc
loope
mov
sub
lock
subb
cmc
aaa
addb
mov
scas
inc
xchg
cmpsb
adc
cwtl
cmpsb
fisttps
lret
pop
jl
loopne
sti
stos
push
movsb
cli
aas
or
jg
push
pop
das
pop
mov
fidivs
inc
cwtl
or
push
vmread
mov
fnsave
out
or
adc
xchg
or
scas
add
mov
mov
inc
xchg
movsl
cmpsl
add
push
aas
dec
cld
sbb
jmp
add
fimull
test
decb
adcl
sub
mov
arpl
mov
popa
movsl
xor
and
adc
sub
je
ja
shlb
aas
add
sbb
add
add
push
jno
xor
dec
fimull
jnp
in
dec
in
outsb
xchg
xchg
cld
or
es
shl
pop
dec
and
popf
imul
hlt
mov
dec
pop
lods
add
add
ret
cmp
dec
out
add
jp
and
sti
and
and
push
aas
mov
and
mov
rorb
lock
jmp
inc
orl
les
js
or
xchg
pop
cwtl
jp
loop
push
xchg
fisttps
or
mov
mov
adc
jp
xchg
mov
sub
rclb
andb
cmpsl
fisubs
push
mov
andl
sub
push
push
call
addl
lahf
mov
xchg
lds
aam
push
inc
jno
inc
add
cmp
lret
jo
mov
xor
jns
enter
push
mov
xlat
inc
or
sub
data16
and
cmpsl
loopne
inc
or
cli
test
mov
sbb
jae
fsubs
sbb
jge
inc
and
stc
sbb
mov
or
cmpsl
dec
mov
jno
icebp
jbe
rolb
stc
ljmp
shr
jne
push
int
outsl
xchg
jg
push
xorb
add
fimull
popl
push
lret
jmp
or
inc
pop
andb
fwait
aam
insb
pop
push
pop
mov
mov
movsl
xchg
negl
xor
push
inc
andl
fisttpl
in
sub
mov
loope
inc
jne
scas
repz
jmp
xchg
cmp
gs
test
inc
shlb
ret
sbb
add
pop
jmp
mov
sub
mov
cmp
xorl
adc
push
in
adc
or
dec
aas
xchg
inc
sub
lea
xor
pop
sub
rcrb
xor
and
call
sahf
movsb
xor
test
mov
test
shrl
mov
js
jnp
pop
loope
push
pusha
popa
inc
push
xchg
iret
stc
jp
and
es
push
push
clc
push
xor
dec
dec
out
loopne
xor
xlat
or
and
rolb
mov
mov
cwtl
push
fwait
mov
loope
lods
add
stos
xchg
cltd
mov
adc
mov
mov
pop
out
shrl
test
out
add
push
add
add
dec
test
push
int3
jo
cmpsl
mov
mov
loopne
inc
scas
inc
xlat
or
add
and
out
dec
out
fbld
xlat
inc
iret
pop
mov
jbe
adc
in
or
pop
enter
mov
lahf
sbbb
shl
sahf
outsl
stc
dec
push
cmp
cltd
shrl
fsubs
sub
repnz
lea
les
pop
lods
jo
or
inc
mov
xor
mov
notl
filds
ja
mov
pop
gs
jg
or
inc
mov
pop
ret
add
outsl
daa
mov
fldenv
mov
jo
or
inc
out
xor
mov
notl
filds
int
mov
pop
jecxz
jg
or
inc
mov
xchg
jmp
cmpsb
daa
js
inc
out
jne
mov
adc
push
lea
mov
notl
adc
push
and
fists
orl
jg
inc
xchg
add
add
mov
js
adc
out
popf
sbb
push
xchg
pop
jo
out
push
paddusw
jno
xchg
adc
jmp
fisubl
inc
mov
cmpsl
pop
jg
out
pop
imul
jno
xchg
pop
daa
testl
adc
out
mov
push
rcll
sbb
and
loope
xor
xchg
adc
mov
fisubl
inc
mov
test
jg
out
pop
setno
jno
xchg
pop
daa
mov
daa
adc
out
test
mov
stos
pop
jo
out
push
punpcklwd
jno
xchg
adc
xchg
or
fisubl
inc
mov
repz
jg
out
pop
setg
jno
xchg
pop
daa
in
lock
out
sbb
push
adcl
sbb
and
xchg
inc
xor
xchg
adc
fisubl
inc
mov
pop
pop
jg
out
pop
packsswb
jno
xchg
pop
daa
lret
add
ljmp
lds
push
xlat
pop
jo
out
push
setnp
jno
xchg
adc
movsl
or
fisubl
inc
mov
imul
sbb
and
aam
and
fcmovnbe
mov
xchg
rcrl
stc
jge
out
mov
movsl
push
cltd
inc
test
gs
pop
inc
inc
adc
and
pop
cli
out
fiaddl
pop
mov
xchg
jp
inc
pop
add
pop
cmp
dec
lret
dec
stos
dec
xchg
dec
mov
dec
push
push
dec
dec
dec
ss
sub
dec
or
dec
jmp
dec
mov
test
dec
jne
imul
dec
sub
dec
or
test
jns
lds
inc
lds
lds
gs
gs
fisubl
gs
cwtl
xchg
je
sub
inc
sub
sub
sub
sub
sub
sub
sub
mov
rol
mov
out
cmp
push
and
push
shrb
ds
aas
negb
call
out
mov
nop
divl
push
push
addr16
stos
addr16
clc
pop
jp
cli
mov
aas
ljmp
fldenv
or
cli
call
sbb
xchg
shr
pusha
mov
jg
scas
dec
jge
cmp
mov
ret
pmaxsw
push
dec
jl
dec
xchg
daa
dec
ljmp
cli
mov
mov
sbb
movsl
mov
mov
cltd
mov
sub
pop
pop
jmp
and
fdiv
lret
and
dec
out
das
lock
mov
cmp
pop
cltd
dec
xor
cmp
add
add
lea
sub
mov
insl
and
sub
das
rcrb
push
or
sub
push
jl
shrl
iret
enter
jo
xor
xchg
jecxz
pop
std
xchg
lcall
stc
lods
popl
imul
data16
ucomiss
cwtl
mov
dec
push
shll
dec
push
push
and
xchg
leave
add
or
mov
imul
loopne
not
xchg
addr16
mov
shrb
add
mov
insl
psubd
mov
mov
ja
xchg
pusha
jno
inc
pop
sti
xor
shlb
cli
fcmovnbe
test
mov
push
cmp
mov
rorb
shrb
push
jo
push
and
in
mov
adc
enter
jo
in
call
sarb
in
call
sarb
mov
pop
call
sarb
in
call
sarb
and
inc
imulb
mov
pop
call
sarb
hlt
out
adc
mov
pop
call
sarb
in
idivb
jl
in
call
sarb
in
call
call
in
call
sarb
in
call
sarb
and
inc
imulb
mov
pop
call
shlb
sbb
or
inc
andb
bound
daa
xchg
repnz
xchg
mov
rcr
inc
mov
xchg
add
sbb
roll
add
push
out
sbb
iret
add
popf
das
in
dec
scas
int3
sub
jo
outsl
push
lahf
pop
dec
sbb
and
out
fsts
xchg
loopne
sub
cmc
popa
or
orl
and
mov
add
and
psrlq
jno
xchg
scas
daa
lods
or
mov
das
pop
cltd
cltd
mov
loopne
out
scas
mov
or
andl
push
int
inc
sbb
and
pmaddwd
jno
xchg
out
daa
repz
fisubl
inc
jo
outsl
push
fists
dec
sbb
and
bts
fisubl
loopne
fld
cmp
cmp
das
jo
pusha
push
ret
pop
inc
sbb
and
btr
jno
xchg
out
daa
mov
inc
scas
adc
jo
outsl
push
xchg
pop
dec
sbb
and
setnp
fisubl
loopne
adc
shl
inc
daa
js
push
jmp
pop
pusha
inc
lds
and
push
out
add
dec
scas
pop
fwait
mov
outsl
addl
das
add
push
loopne
mov
cmp
inc
outsl
daa
mov
push
fistl
sbbb
pusha
loop
and
and
mov
out
daa
jecxz
iret
fisubl
inc
jo
outsl
push
loope
dec
sbb
and
movzwl
fisubl
loopne
bound
jg
mov
daa
js
push
shll
pusha
pop
imul
add
mov
notl
scas
add
dec
outsl
int3
sub
jo
das
push
jmp
in
xor
nop
loopne
loop
jg
mov
daa
js
push
jne
cmpb
popl
or
inc
xchg
and
out
popa
fldlg2
or
mov
xor
test
inc
gs
inc
push
cmp
sbb
pop
fcmovb
inc
mov
xchg
add
pop
pop
inc
inc
cmp
pop
sbb
imul
mov
test
dec
xorl
sub
cmc
sub
aad
leave
xorl
mov
push
orl
subl
adc
ljmp
stos
xor
and
gs
gs
fisubl
gs
xchg
gs
gs
cmp
sbb
gs
gs
fldenv
gs
test
push
push
inc
subb
and
push
loop
jns
pop
out
dec
jne
rclb
notb
ljmp
adc
adc
push
push
or
rorb
addl
fucomip
testb
adc
ss
js
lret
sub
rol
cmp
outsl
rcrl
or
pop
pop
or
icebp
push
dec
lods
pop
int3
gs
scas
fwait
ljmp
ljmp
iret
pop
lods
dec
add
mov
adc
int
das
push
add
pop
repz
ja
mov
lret
fwait
and
in
cmp
push
pop
push
mov
clc
mov
js
sarl
bound
or
nop
inc
push
idiv
int
in
cwtl
ljmp
fnsave
mov
push
das
mov
sub
loop
xchg
or
js
xchg
push
cwtl
jno
insb
push
add
push
xor
cmpsl
adc
scas
repz
adc
cli
icebp
sub
mov
daa
fwait
cmp
xor
cli
add
das
sub
mov
aad
mov
cli
lret
xchg
adc
and
xchg
cltd
dec
stos
in
push
pop
das
incb
daa
inc
dec
dec
jo
adcl
insb
jnp
clc
bound
daa
jnp
push
adcl
cmp
inc
or
cmp
lcall
sbb
mull
cmp
mov
stc
add
adc
or
and
je
mov
cmp
lret
repnz
ja
enter
push
xchg
sub
lahf
ja
not
jmp
add
push
jo
push
jg
in
mov
pop
xchg
bound
inc
adc
push
inc
out
mov
pop
call
sarb
in
call
lock
call
sarb
in
call
sarb
and
inc
imulb
mov
pop
call
sarb
hlt
out
adc
mov
pop
call
sarb
in
idivb
jl
in
call
sarb
in
call
call
in
call
sarb
in
call
sarb
and
inc
imulb
mov
push
jmp
cli
xchg
adc
lods
fwait
xor
in
adc
daa
jge
mov
jp
xor
das
inc
and
adc
call
rcr
lcall
and
adc
adc
stc
jmp
pop
jnp
sbb
cmp
mov
pop
dec
push
add
std
fcmovbe
gs
movsl
sti
mov
push
push
dec
insl
aam
iret
aad
cli
xchg
xchg
scas
int3
add
out
pop
push
dec
stos
dec
jnp
loopne
iret
sub
fsub
js
inc
pop
lret
pop
push
mov
ds
xchg
iret
add
aas
shrl
inc
push
lods
xorb
insl
push
aas
test
xor
stc
into
adc
push
or
ja
es
add
adc
scas
inc
xchg
faddl
ja
adc
xor
lret
and
xor
lock
and
arpl
cmp
cwtl
jae
push
loopne
aaa
add
push
fiaddl
pop
cmp
or
inc
or
sub
std
loopne
loop
and
jge
mov
jne
ror
dec
icebp
add
sub
fsub
inc
fwait
sbb
loop
or
stc
inc
dec
loope
jo
inc
or
popf
pop
mull
negl
ret
mov
lds
in
neg
repz
notl
sbb
ja
jp
mov
daa
daa
inc
add
lock
or
scas
xor
dec
mov
mov
lock
mov
scas
sbb
jg
jp
mov
je
dec
mov
in
sbb
sbb
in
jle
aam
test
mov
out
adc
mov
or
adc
das
dec
into
or
negb
inc
pusha
cmp
push
xor
loopne
sarb
iret
xor
mov
xchg
insl
imul
popf
or
sub
loop
imul
mov
push
aaa
insl
mov
scas
sar
jno
sub
das
cmp
mov
lcall
dec
or
push
push
inc
fdivrs
movb
push
test
mov
push
or
or
or
adc
adc
and
fistps
mov
sti
dec
pusha
xor
stos
cld
lahf
inc
pop
xor
movsl
mov
xor
xor
mov
mov
aaa
pop
mov
adcb
cmp
sbb
fcmovne
xchg
fwait
or
xor
xorb
push
aas
sbb
sub
mov
pop
adc
sbb
add
add
rcrb
xor
pop
push
clc
pusha
aaa
add
inc
cli
dec
test
pusha
jnp
cmp
sub
lds
xor
sbb
and
pop
daa
nop
jae
inc
ljmp
adc
subl
icebp
xor
test
lock
shrl
sub
lock
and
xchg
nop
mull
scas
push
das
out
push
movsl
mov
nop
mov
xor
xor
or
and
jge
pop
ljmp
sbb
sbbl
aam
pop
add
ja
or
adc
add
xor
adc
or
jne
dec
dec
cmp
arpl
pop
or
mov
cld
das
sbbb
xchg
inc
pop
add
dec
into
adc
xlat
adc
sub
pop
scas
mov
nop
mov
mulb
movsl
loope
pop
sbb
enter
shlb
cmp
push
aaa
push
enter
test
xchg
push
out
in
pop
adc
cmpl
and
dec
adc
cltd
pop
call
fwait
cmpsl
sbb
cmpsl
or
push
es
mov
xor
pop
pop
iret
jg
das
inc
ja
adc
out
or
sbb
pushf
pusha
sbb
daa
les
int
jg
add
test
xor
sub
sub
push
add
out
jo
mov
rolb
jmp
sbb
push
sub
sub
push
inc
or
jle
inc
fadds
ret
cmp
in
dec
loopne
repnz
cmp
cltd
jmp
out
mov
adc
stc
jp
repz
push
xor
ror
inc
add
push
sbbb
adc
adc
cmp
rol
daa
arpl
pop
cmpsl
sbbl
push
inc
add
jge
sbb
adc
dec
xcrypt-cfb
cmpsl
out
inc
jne
rcrb
in
scas
xlat
cmpsl
aas
mov
add
adc
out
adc
outsb
ret
jl
cmp
mov
jns
iret
mov
shlb
testl
fucom
and
sub
mov
xchg
out
add
or
inc
into
fists
jmp
pop
das
or
pop
push
test
test
push
dec
pop
jmp
mov
outsl
andl
fisttpl
jmp
adc
cli
in
daa
sub
pop
jmp
push
les
cmpsb
push
sub
and
outsl
lahf
cmpsl
outsl
addl
cmpsl
adc
or
stos
push
mov
roll
lea
fsts
int
andl
fidivrs
mov
bound
iret
ss
push
or
ret
in
mov
jmp
or
dec
or
xor
stos
or
mov
mov
or
ret
fisttps
cs
or
or
or
push
dec
and
out
or
or
mov
xor
test
in
mov
cmpsl
popl
movsb
push
xchg
leave
add
mov
adc
out
cs
add
fs
sbb
stos
test
xchg
jnp
inc
les
adc
les
pop
sbb
les
adc
inc
cmpsb
adc
test
adc
push
dec
pop
xor
lret
dec
sbb
or
adc
mov
cmp
push
fs
cmpsb
filds
rcrl
add
xor
add
addl
cmc
push
adc
inc
popl
mov
and
pushf
rcrl
pop
jge
cmp
lds
adc
ljmp
adc
xor
imulb
mov
add
mov
ss
adc
les
dec
dec
add
pop
rcrl
pop
sbbl
or
dec
out
imul
pop
mov
in
and
ret
imul
ret
inc
push
adc
pop
inc
shrb
push
daa
lock
push
cmp
imul
ja
idivb
jge
test
cmp
sub
mov
and
mov
jg
sbb
jmp
orb
jo
xchg
cld
lcall
ja
scas
cli
cmp
mov
int3
enter
hlt
jne
jns
bound
movlps
mov
lret
and
das
loopne
mov
adc
add
js
stc
lret
cmpl
loop
xchg
shlb
test
pop
fcoml
ja
sub
cs
xor
jge
jl
subl
aas
mov
inc
xlat
jle
out
jle
mov
por
and
mov
push
mov
lret
xor
mov
cmpl
lahf
jnp
gs
fistps
popf
das
dec
xchg
adc
adc
cltd
xor
sbb
and
push
lret
push
lahf
xor
std
jo
push
jb
xor
scas
push
fcoms
jl
fidivrl
fmull
push
jmp
test
fwait
pop
les
mov
cmpsb
adc
mov
dec
or
pop
jmp
imul
cltd
dec
shlb
repnz
pop
fbld
mulb
jo
gs
shlb
sub
stc
or
xchg
xorl
pop
lret
shlb
add
add
rcll
fldcw
aas
fimuls
add
loop
cmpsl
iret
push
das
ljmp
dec
cmp
shll
in
sub
aaa
ljmp
icebp
arpl
hlt
or
add
adc
daa
or
popa
sahf
mov
dec
imul
or
add
scas
iret
mov
mov
xchg
mov
xchg
dec
dec
pop
test
in
or
cmpsl
in
mov
sarb
aas
jno
adc
das
xchg
bound
das
mov
mov
stc
scas
inc
xchg
es
or
aam
jmp
in
xor
aad
xorl
aam
xor
packssdw
xlat
sub
jecxz
sbb
sbb
mov
dec
adc
adc
dec
or
daa
test
adc
lret
out
fwait
mov
mov
adc
lds
mov
aas
cmp
rorb
repz
fildl
out
imul
add
mov
loope
loope
das
nop
roll
cmp
adc
inc
call
imul
jbe
roll
mov
mov
enter
xchg
imul
int3
ds
fnsave
push
dec
sub
sbb
mov
popf
push
sti
inc
sbb
add
shll
cmp
sbb
dec
pop
cmp
sti
mov
jmp
outsb
sub
daa
fwait
sbb
pop
aaa
outsb
mov
addl
dec
ja
ja
pop
outsl
sbb
inc
repz
mov
xchg
lods
inc
movsl
fcomip
loopne
cld
inc
enter
sbb
out
cmpsl
and
xlat
sub
dec
xchg
clc
cmp
cwtl
jp
jae
nop
popl
addr16
std
and
xor
jmp
xorb
xchg
hlt
xchg
sbb
cwtl
push
dec
aas
push
jmp
xlat
aas
movsl
and
ret
adc
mov
rclb
jecxz
adc
mov
loope
daa
shlb
daa
inc
xchg
xor
dec
dec
adc
cmp
adc
popf
lret
sbb
and
xor
lret
xchg
or
in
inc
sbb
das
mov
fidivl
shlb
imul
sbb
inc
and
movq
lods
xor
rcrl
mov
popf
std
pop
fidivrs
dec
out
mov
xchg
iret
lahf
imul
nopl
dec
test
popf
sbb
adc
es
xlat
mov
mov
sub
aas
pop
add
cmp
inc
repz
call
outsb
pop
shrb
sub
jg
mov
out
push
mov
adc
push
push
push
pop
mov
fisubrl
in
jae
in
aas
cmp
popa
add
or
imul
test
xlat
push
pop
imul
ret
lahf
jmp
or
or
push
rcrb
adc
ljmp
sbb
insb
xlat
pop
test
dec
xchg
adc
dec
gs
mov
cld
push
fstpl
movzbl
push
testl
icebp
and
dec
fwait
sbb
inc
popf
daa
shrl
das
or
fidivrl
dec
push
out
cmp
sbb
out
dec
daa
ja
inc
ds
js
lods
push
cmp
notl
fwait
test
jl
sbb
cmp
sub
and
xor
movsl
out
adcl
aaa
xor
xor
dec
inc
push
or
or
push
sbb
mov
daa
std
int
pop
cmp
incb
xor
and
mov
add
adc
inc
fwait
pop
pop
dec
stos
insb
fxch
pop
aas
or
or
pop
mov
xor
cmp
arpl
pop
jns
inc
sub
ficompl
inc
inc
cwtl
dec
loopne
rcrb
test
out
pop
xchg
out
adc
mov
mov
add
pop
pop
lods
dec
add
adc
cwtl
cmp
pop
push
sbbl
push
jl
adc
dec
pusha
dec
sub
mov
movsl
hlt
dec
incl
xchg
or
addl
rclb
jge
and
inc
sahf
jle
push
cltd
push
in
push
roll
mov
stc
cltd
fldcw
dec
in
push
fbstp
jp
add
mov
push
and
xor
cli
pop
jo
mov
ret
iret
pop
sahf
inc
cmpsl
ficoml
or
insb
loope
in
sti
nop
mov
pop
scas
sbb
cmpsl
and
lock
fdivs
in
call
popf
xchg
sbb
lret
mov
in
sti
xchg
fdivp
pop
push
and
loop
int
stos
fcoms
cmp
sub
and
in
and
sub
dec
add
in
sbbl
jae
cli
adc
mov
fsubs
pusha
btr
loope
xor
cmc
repnz
add
arpl
xchg
iret
sahf
stos
fwait
pop
cmpsl
mov
or
cmpsl
jecxz
sbb
ss
pushf
push
daa
into
imul
aas
xor
mov
imul
and
shl
jne
ja
aas
xchg
jp
jle
cwtl
shll
stos
ljmp
daa
inc
std
fisubrs
int
sarl
inc
iret
divl
cli
add
mov
loopne
hlt
adc
pop
mov
mov
iret
pop
sti
mov
in
cmp
negl
ljmp
pushf
test
mov
rorl
call
scas
aaa
pop
jo
jle
inc
mov
orl
fbld
jae
inc
mov
jg
daa
xlat
cmpsl
xor
inc
in
sbb
jmp
xchg
fcmovnu
push
pop
roll
int
mov
outsl
mov
xchg
jae
lods
xchg
test
mov
sbb
imul
mov
fcoms
repnz
and
xor
mov
or
jecxz
out
mov
aas
add
mov
xchg
movsb
je
mov
jne
mov
pop
rcr
push
cmpsl
adc
mov
pop
daa
outsl
jg
or
sbb
and
push
xlat
ss
adc
xor
fdivrs
iret
scas
outsl
imul
push
dec
loopne,pn
sbb
nop
fcmovne
shl
sti
cld
cs
stc
aas
pop
test
out
adc
jbe
dec
add
xor
cmpsl
daa
add
cmpsb
lret
add
sbb
or
and
and
mov
add
test
inc
inc
scas
cmp
dec
addr16
insl
pop
out
and
xor
and
jae
inc
fistpll
out
xchg
xor
sbb
insl
pop
inc
xor
push
out
idivl
in
add
adc
xchg
or
outsb
repz
aad
xor
pop
sbb
ds
push
sarb
pop
adcb
inc
cmpsl
push
cmp
xchg
in
adc
mov
jmp
rorl
cmp
leave
xchg
enter
popl
bndstx
daa
shll
cmpsl
or
mov
sbb
cwtl
mov
cmc
adc
sysenter
push
subb
ror
lret
xchg
cmpsb
insb
jecxz
test
cli
dec
or
add
xchg
sbb
or
push
inc
or
and
cmpsl
into
or
jecxz
ret
mov
pop
jecxz
mov
inc
xchg
js
xor
or
ljmp
add
gs
ss
inc
mov
or
mov
out
shlb
pop
adc
adc
daa
push
mov
adc
push
lret
das
or
dec
fwait
or
push
mov
adc
testb
mov
mov
ret
lcall
sahf
xor
xchg
lock
push
jns
movsl
add
jns
das
push
arpl
ljmp
sti
scas
cltd
push
sbb
test
cmp
sbb
mov
cld
lds
loopne
cmc
sahf
sbb
shlb
xor
lret
les
mov
cmp
fldcw
ret
pop
xchg
sbb
mov
cmpsl
mov
adc
xchg
and
cli
or
push
stos
xchg
scas
aam
and
adc
dec
mov
test
out
jecxz
adc
dec
das
jno
imul
mov
fmul
sbb
stos
out
dec
mov
ds
out
ja
sbb
cs
imul
mov
call
sub
sub
sub
rol
jg
xchg
rorl
push
outsb
loopne
and
inc
filds
repnz
mov
xor
lcall
lods
adc
mov
divl
push
xor
xlat
out
add
out
jae
jg
lahf
dec
sub
rolb
mov
mov
enter
cwtl
xchg
daa
push
sahf
mov
jle
test
orb
aaa
or
je
adc
rorl
xchg
mov
xchg
out
or
lea
jne
stc
push
xlat
jae
mov
pop
fistps
sbb
test
ret
fistpll
sub
push
sub
jp
andl
mov
xor
add
in
push
mov
daa
sub
aam
xlat
lods
test
repnz
dec
addr16
pop
in
sbb
into
cmpsl
add
lock
jge
jle
push
pop
mov
cli
inc
lods
xlat
seta
or
repz
pop
push
fnstsw
arpl
ss
mov
inc
pop
xchg
mov
sub
jne
lods
shlb
xchg
stc
xor
xchg
pop
adc
ret
mov
and
pop
pop
pop
pop
loop
jmp
xor
adc
sbb
jae
idiv
adc
roll
in
clc
dec
xchg
mov
fcmovu
mov
adc
in
in
fwait
inc
sbb
xlat
push
fisubl
divl
cmp
push
jg
ret
mov
push
insb
and
cmp
rolb
mov
jnp
stos
mov
jbe
and
inc
adc
push
inc
inc
pop
and
std
leave
push
loope
aaa
sti
cwtl
cmpb
lods
dec
push
mov
cmpsl
aas
mov
mov
pop
adc
xchg
adc
pop
cmpsb
lahf
push
popf
cmc
cmpsl
push
add
jnp
stos
iret
or
adc
cltd
push
mov
daa
ret
adc
movsb
push
add
mov
roll
add
lret
mov
cli
or
leave
call
lea
mov
shr
mov
adc
push
push
stos
jno
ljmp
mov
cld
mov
adc
jmp
push
dec
sarl
test
roll
inc
pop
or
jl
or
and
call
and
xor
inc
rorl
dec
stos
sub
mov
lods
rolb
mov
pop
pop
adc
out
adc
sub
std
pop
scas
outsb
sub
shll
pop
ret
cld
ja
mov
std
mov
adc
movsl
add
dec
sub
daa
sbb
adc
xor
mov
popa
mov
test
inc
test
sub
or
sub
inc
add
mov
arpl
jg
cmp
adcl
iret
jl
daa
sub
imul
pop
cmp
or
mov
pop
jg
mov
iret
iret
adc
aad
sbb
mov
adc
aaa
cmp
jg
push
in
les
shr
push
mov
sbb
iret
push
pop
cmc
xor
mov
xchg
lahf
adc
xor
pop
sbb
rorb
sbbl
jne
fdivl
stos
ret
loopne
mov
inc
dec
jne
xor
popf
pop
jne
lahf
addr16
mov
aam
imul
push
push
pop
sub
shl
pop
ja
call
lcall
out
arpl
outsl
cmp
sbb
orb
and
or
fcom
sbb
or
push
mov
inc
push
sbb
pop
out
aas
or
and
cmc
sub
fs
pop
sahf
inc
mov
sbb
test
sbb
jne
pop
ds
fidivl
xor
in
mov
inc
sub
aas
cmp
orb
inc
stc
ss
sub
add
push
push
mov
out
sub
es
mov
or
jmp
fmull
add
mov
js
fs
adc
daa
dec
mov
pop
jne
adc
into
adc
add
call
and
aad
pop
stc
pop
mov
pop
cli
jnp
std
dec
out
sbbb
testl
push
push
fistpl
fxch
loope
push
insb
mov
pop
lds
aas
mov
movsl
sub
pop
mov
fmull
daa
or
daa
imul
jp
pop
and
scas
out
mov
or
popf
xchg
shlb
cltd
addr16
push
jae
out
movsb
and
scas
ss
xor
aas
jnp
scas
fcoms
mov
or
xor
loopne
lock
loopne
lock
lret
adc
or
add
call
mov
mov
std
add
jl
incb
xor
jge
xchg
rcrb
cld
outsl
ror
test
or
pusha
inc
cmp
clc
add
pop
sbb
call
xor
jmp
add
pop
sub
xchg
fwait
jb
lock
call
enter
and
dec
repz
mov
leave
enter
repnz
push
cli
mov
test
xchg
push
or
ret
jns
mov
inc
or
and
shrl
dec
and
inc
sub
sub
orl
dec
test
xor
inc
jmp
add
leave
dec
and
jo
xchg
ja
scas
adc
out
and
sub
mov
sti
dec
and
nop
daa
jle
xchg
jp
adc
test
push
push
push
jmp
out
das
and
pop
je
aas
add
lahf
xchg
cmpsl
aas
ret
push
jg
xorb
ret
sbb
shll
mov
cmp
pop
les
sbb
mov
pop
lock
mov
pusha
lret
or
and
or
sub
daa
xor
mov
loop
jo
andl
push
cwtl
xchg
inc
pusha
adc
popa
insb
lods
xchg
std
imul
mov
mov
inc
and
fs
xor
cmp
mov
inc
shrb
in
adc
dec
sti
mov
add
cltd
leave
push
or
xchg
mov
push
mov
adc
adc
or
jle
pop
mov
inc
roll
dec
adc
lahf
stc
adc
scas
mov
cmp
or
pusha
and
dec
ss
dec
jmp
test
or
xor
push
test
dec
xchg
dec
pop
mov
das
scas
push
into
jp
push
and
aam
xchg
xchg
and
cmp
mov
mov
lea
mov
punpckldq
rol
add
enter
cmpsl
mov
cmpl
xlat
cmp
rorl
push
jmp
mov
or
mov
xor
movsl
inc
xchg
test
shrb
imul
jmp
push
mov
jno
mov
ljmp
adc
pop
roll
mov
movsl
pop
sbb
out
pop
adc
mov
sbb
dec
out
cmp
cltd
fwait
sti
test
std
pop
jle
sub
push
xchg
scas
out
xor
mov
cmpsb
dec
inc
icebp
xchg
xor
xor
xor
mov
add
inc
es
out
jb
pop
addr16
push
adc
aaa
movsl
popl
cwtl
and
andl
adc
jp
push
lock
imul
xchg
xchg
and
sub
pop
and
aam
inc
popf
adc
ss
imul
push
enter
daa
cmp
mov
sbb
jp
sub
andb
pop
aad
pop
and
loope
dec
aas
aam
enter
fwait
xlat
jae
mov
mov
cmp
pusha
add
mov
push
adc
inc
dec
add
push
fs
ja
mov
into
cmpb
jnp
je
xchg
mov
lahf
js
xor
ss
loop
aad
xchg
arpl
xchg
daa
es
movsl
shll
adc
in
xor
pop
mulps
ret
and
nop
mov
sub
and
cli
adc
adc
int
imul
jp
lcall
pop
add
and
pop
pop
jae
lock
arpl
mov
rcrb
cmc
jmp
jmp
mov
rcrb
cmc
fistpll
out
lds
pop
cmc
ret
cmp
out
es
mov
shl
pop
cmc
pop
cmp
out
fnstenv
pop
cmc
pop
cmp
out
fnstenv
pop
cmc
aad
test
mov
out
es
rcrb
cmc
out
test
push
xchg
cmp
add
cmp
jno
mov
lds
aas
sbb
and
pop
js
hlt
jmp
loope
inc
jo
in
pushl
cs
xor
arpl
ja
out
push
push
test
jg
arpl
mov
notl
pop
add
daa
lock
cs
lret
aaa
sbb
and
iret
xchg
push
jnp
and
pushf
ret
xchg
push
jns
adc
stos
cld
jg
pop
mov
into
adc
rolb
cmc
lds
mov
std
stos
pop
das
repnz
jnp
ftst
fldt
pop
out
jo
push
rcr
inc
out
cmc
pop
adc
in
sub
jo
push
rolb
vmovntdq
mov
mov
mov
sub
jo
push
rcr
inc
fcomi
pop
adc
in
sub
jo
push
rcrb
lret
cmc
fsts
mov
mov
sub
jo
push
rcr
inc
int
fistl
mov
mov
sub
cmp
mov
jo
or
push
ret
iret
aas
or
rolb
fcomip
or
test
loope
out
adc
in
sub
jo
push
rolb
dec
cmc
out
mov
mov
sub
jo
push
shl
inc
arpl
jge
mov
andl
sub
iret
inc
sbb
and
and
mov
push
sub
push
xchg
xlat
and
idivl
fmuls
pop
jg
cmp
add
add
jg
ds
call
movl
subl
iret
fisttpl
movsl
pop
adc
cli
sar
das
cmp
daa
outsb
pop
int
and
imul
repnz
adc
mov
xor
push
xor
jnp
decb
jnp
dec
int3
das
mov
lret
mov
and
jnp
setae
mov
add
jge
loopne
xchg
pop
adc
jg
xchg
push
jecxz
dec
pop
hlt
fisubrl
inc
mov
add
jecxz
dec
stos
negb
aad
dec
iret
cwtl
rclb
scas
testb
movl
scas
imulb
dec
jae
sbb
or
jp
sar
xchg
mov
in
fwait
repnz
dec
int3
popa
dec
mov
int3
enter
dec
adc
es
fisubs
mov
add
jmp
test
mov
fidivrl
ja
or
push
push
push
inc
cmp
popa
sbb
cmp
pop
or
dec
adc
inc
outsl
imul
pop
aam
ret
roll
out
cmp
add
pop
xor
mov
cmp
sbb
arpl
add
out
insl
inc
pop
imul
adcl
adc
inc
mov
iret
or
test
inc
mov
lods
ret
mov
jle
pop
inc
xchg
or
out
push
mov
or
mov
out
or
jnp
insb
mov
neg
out
test
mov
rcll
inc
movsl
sbb
ficoms
cmp
ss
daa
sbb
out
or
adc
aas
jmp
in
daa
adc
daa
ja
adc
pop
and
int
ja
rolb
f2xm1
cld
cmp
or
loope
iret
mov
ret
sbb
enter
movsb
cmp
and
pop
fiadds
sub
mov
shll
fs
iret
mov
rcll
mov
and
push
sub
push
or
lods
pop
dec
and
leave
xor
adcl
adc
xor
je
adc
mov
dec
in
cmp
pop
leave
and
hlt
lea
mov
sbb
insb
arpl
sub
aaa
sbb
jbe
jmp
jge
iret
or
inc
or
xchg
xchg
and
inc
imul
addl
fistpl
aas
or
ret
jo
mov
or
jne
inc
pop
xor
shlb
xchg
inc
aas
xchg
jmp
sti
inc
push
vmptrst
daa
xchg
inc
inc
jnp
xor
inc
test
inc
mov
adc
adc
inc
cwtl
movsl
inc
mull
xchg
inc
popa
xchg
aas
adcl
lahf
or
pop
jl
inc
xor
popa
inc
cwtl
stos
dec
dec
pop
cmp
xor
or
mov
mov
adc
lds
xchg
add
arpl
addb
pusha
sbb
cmc
out
push
ret
jns,pt
int
popf
pop
sbb
pusha
or
in
mov
push
pusha
cmpsb
adc
push
cmpsl
ljmp
aas
inc
sbb
jnp
mov
std
push
jb
cwtl
mov
xchg
imul
add
push
mov
adc
cltd
out
fwait
xchg
cmpsl
mov
or
sahf
xchg
cwtl
andl
lea
sub
push
cld
mov
push
dec
sub
lret
xor
ss
lahf
scas
fadds
ss
inc
fistps
fnstenv
shlb
push
scas
call
xchg
imul
mov
xchg
jge
jbe
out
pop
sbb
push
imul
xchg
xor
dec
xor
add
xor
xor
pop
repz
mov
cmp
cmp
mov
mov
push
jns
sub
aas
clc
das
add
and
jb
dec
fs
dec
out
cmpsl
sbb
and
pop
push
hlt
iret
xchg
insl
cmpsl
adc
shr
fsubs
adc
aad
pop
es
std
and
lods
fnstcw
out
and
mov
sbb
ret
xor
ret
mov
imulb
sbb
jmp
hlt
out
sub
dec
iret
and
push
cmp
and
mov
scas
or
mov
cmp
adc
hlt
and
push
clc
pop
daa
pop
shl
pop
inc
add
js
test
lcall
jmp
daa
add
xchg
pusha
rclb
push
call
mov
pop
sbb
sti
add
movsl
in
sub
sub
ja
and
fldenv
movsb
pop
add
daa
sbb
pop
daa
and
call
insb
push
out
adc
out
or
adc
cmc
gs
mov
pop
leave
mov
aas
add
imul
pushf
pop
mov
sbb
iret
addl
pop
sbb
jbe
cld
inc
pop
sbb
jecxz
aas
repnz
jo
lock
sbb
daa
ljmp
jb
mov
sti
add
inc
pop
add
js
rcrb
aaa
push
imulb
scas
mov
inc
js
adc
or
pop
mov
fcmovnu
pop
into
sub
lock
shl
xchg
xchg
adc
adc
inc
and
add
and
push
aad
test
popf
mov
out
ja
mull
loopne
sbb
jo
fs
enter
ds
mov
fwait
dec
repnz
jmp
fs
hlt
ds
pop
pop
popa
push
push
adc
cld
adc
jnp
cmp
dec
inc
push
and
int
push
rcrb
mov
andb
mov
and
das
and
mov
iret
mov
iret
jno
ret
or
imul
sbb
dec
orb
adc
test
rcr
hlt
push
popf
or
cli
test
stos
lret
neg
adc
in
sub
jle
mov
int3
andl
daa
xlat
adc
arpl
and
add
popl
call
dec
fisubl
jnp
push
mov
ja
inc
lahf
cld
pop
mov
divb
das
es
mov
fldcw
push
fcmovb
jb
les
push
jb
arpl
jb
jo
sbb
adc
dec
lret
and
lahf
jp
jb
in
out
sbbl
jb
inc
mov
jno
jb
adc
add
xor
jo
sbb
add
lahf
jb
lock
lahf
jb
sbb
push
jb
sub
push
ja
loopne
fmuls
fcmovbe
and
and
jb
fcmovnb
xor
and
mov
aas
mov
push
ss
push
jb
dec
aaa
movsb
push
fsubs
jns
xchg
push
xchg
addb
shlb
inc
iret
pusha
imul
pop
iret
jl
sub
int
nop
push
inc
cmp
jb
xchg
add
and
iret
add
out
ret
sub
cmp
push
iret
xor
and
pop
pop
ret
xchg
push
mov
andb
in
push
xchg
bound
sub
mov
popf
xchg
movsb
pop
xchg
out
mov
shlb
das
cmp
or
incb
and
aad
mov
fdivs
xor
test
add
pop
test
shll
mov
ss
adc
mov
mov
xchg
cli
lret
loop
fucom
adc
aas
mov
es
les
mov
cmovno
add
insb
js
outsl
das
aas
adc
inc
and
movsl
xchg
out
insl
lsl
mov
mov
xor
into
xlat
mov
lea
and
jecxz
pop
fnstenv
push
aam
call
add
aas
dec
pop
or
mov
inc
add
add
lds
sub
jo
sub
mov
sub
jle
adc
das
fldenv
das
mov
sub
mov
js
and
fists
iret
pop
mov
aas
fstl
ss
pop
scas
push
add
jge
cmp
iret
pusha
cmc
mov
inc
inc
jecxz
mov
pop
add
daa
stos
das
aas
jne
rcrb
cmp
mov
adc
push
mov
mov
mov
push
inc
push
movsb
adc
test
adc
mov
lahf
stos
subl
and
push
jg
push
add
dec
jecxz
imul
out
jg
cmpl
cmc
xlat
dec
insb
repz
out
inc
cmp
hlt
in
es
push
mov
inc
add
test
outsl
cmp
add
and
scas
xlat
outsl
sbb
cltd
mov
out
pop
les
vaddpd
jo
push
ror
mov
cmc
out
adc
repnz
push
out
sub
out
pop
lahf
push
cmp
mov
js
mov
cmpsl
cmp
das
adcb
das
mov
adc
cwtl
add
inc
cmp
decb
imul
xor
loop,pt
int3
xchg
mov
mov
in
sti
adc
cmp
enter
pop
mov
clc
add
sbb
or
inc
daa
movsb
daa
pusha
outsl
arpl
push
je
imul
inc
xor
fwait
xor
cwtl
ljmp
push
cmp
out
xor
movsb
fidivrl
mov
aaa
fiadds
aas
ljmp
loop
add
clc
sbb
mov
push
sar
fwait
inc
cwtl
and
into
pop
aas
add
loopne
adc
aaa
mov
push
or
lahf
add
rcll
dec
adc
xor
sbbb
lods
and
std
mov
mov
es
inc
cmp
and
es
out
or
xor
push
add
inc
adc
mov
lods
nop
pop
adcl
mov
push
stos
push
pop
sti
jl
aaa
fisttpll
inc
adc
rorb
or
andl
arpl
add
mov
ja
sbb
sub
aaa
cld
sub
mov
or
lcall
push
pop
or
jle
bound
andl
mov
mov
sub
mov
cmp
cmpb
and
ljmp
in
add
jle
nop
jb
test
inc
js
cmpsb
push
subb
js
lret
sub
xor
cmp
or
mov
out
mov
cwtl
sbb
nop
pop
ja
push
pusha
pop
loope
lea
mov
adc
mov
mov
pop
xchg
imul
or
fstpl
mov
inc
push
aas
stos
mov
aaa
lahf
in
xor
addb
stos
jp
pop
adc
loop
daa
cmp
jbe
inc
je
jb
jo
aas
ljmp
jle
es
fs
push
adc
lcall
xor
cmp
mov
push
add
fdivl
dec
add
or
ret
aas
mov
adcl
ljmp
or
push
fiadds
sarb
push
cs
jae
push
daa
rcll
rcl
sbb
dec
je
arpl
pushf
dec
xchg
jae
cs
xor
pop
lock
loope
fiaddl
and
rorb
or
in
popf
ret
daa
fstps
xchg
jne
xchg
icebp
cmpsl
movsb
push
les
xor
cmp
mov
orl
mov
jbe
mov
movsl
xor
call
xchg
movsl
ss
jb
push
ljmp
xor
xor
cmp
aas
mov
pop
mov
test
sbb
imul
dec
mov
test
in
xchg
insl
add
insl
sbb
stos
xchg
inc
xor
dec
divl
cmp
imul
mov
adc
inc
lea
jecxz
xchg
sbb
das
cmp
lcall
test
dec
gs
insl
ds
lods
adc
movsb
inc
cmp
sub
sub
rcr
lods
pushl
test
iret
and
mov
and
in
jo
jp
inc
jge
and
adc
and
sub
or
xor
xrelease
sbb
jecxz
sub
icebp
iret
and
mov
cld
rolb
idivl
jnp
sbb
daa
movsb
or
je
mov
pop
loop
subl
mov
in
mov
inc
push
daa
int
add
jb
pop
mov
mov
sub
mov
and
and
sbb
lock
scas
stos
jecxz
add
iret
inc
imul
rclb
xchg
push
subl
adc
cmp
sbb
sub
cmpsb
pop
das
shl
push
lock
dec
push
adc
icebp
scas
sbb
sub
sti
xchg
adc
mov
and
test
addl
clc
cwtl
movsl
shll
jmp
add
or
inc
pop
in
pop
inc
mov
add
and
gs
sbbl
les
lds
push
sbb
ffree
cmp
bound
add
in
sbb
or
aas
sbbl
pop
xor
cld
add
lods
icebp
loopne
push
and
add
addr16
cmp
pop
xor
ja
sbb
das
insb
pushl
and
test
sarb
ss
pop
or
push
fdiv
mov
cmp
rcrb
fsubl
scas
cld
out
dec
push
cmpsl
lret
add
mov
xor
and
lods
lods
cmp
mov
xchg
sub
inc
sbb
pop
lret
sub
jae
dec
inc
in
jle
and
xor
pop
add
outsb
and
loope
add
jmp
inc
inc
daa
pop
sbb
mov
adc
or
btr
xor
lods
cmc
mov
adc
pop
add
cmp
test
xchg
popf
adc
push
and
in
in
or
std
es
aam
dec
daa
cmp
loop
inc
loopne
aas
or
sbb
push
into
adc
mov
jg
in
and
xchg
xchg
cmp
icebp
mov
jae
dec
daa
mov
jb
mov
out
xor
pop
add
or
xchg
mov
insl
jecxz
jne
adc
in
sbb
mulb
aas
adc
pop
mov
test
push
es
or
xor
inc
je
aas
lcall
and
sbb
or
cmp
lock
mov
iret
push
inc
mov
pop
pop
cmp
xor
inc
adc
ss
aam
cmp
inc
xchg
bound
addl
and
jbe
repnz
mov
xor
jae
inc
inc
lea
stc
jge
and
xor
dec
push
cld
mov
push
mov
jmp
cmc
push
and
add
inc
inc
jns
push
les
daa
daa
lahf
and
mov
push
out
and
lret
daa
mov
and
add
jns
leave
sbb
add
sbb
fisttpll
or
popa
inc
lcall
mov
orl
les
sub
or
and
inc
lods
add
ja
mov
mov
aam
ret
loopne
jmp
inc
fstps
push
and
fcoml
sub
movsl
fisubrs
ja
and
fsubrl
fisttps
pop
or
and
pushf
jmp
or
xchg
adcl
daa
cmp
cwtl
daa
and
fcoml
notl
and
fdivrs
push
adc
xor
xchg
daa
lock
or
loop
cld
adc
jae
rorl
jae
daa
repnz
or
cmc
pop
aas
daa
cmp
cltd
in
adc
daa
or
pop
mov
cmc
fistpll
daa
or
int
daa
mov
in
jne
sbb
pop
daa
in
jne
jae
rol
daa
cmp
pop
jecxz
cmp
daa
cmp
pop
jecxz
aas
push
ud0
and
leave
aas
daa
or
aad
daa
cmc
fstpt
daa
or
mov
cmc
pop
aas
daa
cmp
and
daa
sbb
pop
daa
in
jne
sbb
pop
daa
in
jne
sbb
pop
daa
in
jne
sbb
pop
daa
in
jne
adc
in
sub
out
jns
insb
stos
inc
daa
ror
daa
aas
adc
cld
cmp
idivl
incl
cli
xor
xor
mov
ja
inc
daa
lret
daa
mov
cmc
addb
daa
cmp
push
mov
arpl
ja
inc
daa
enter
mov
daa
out
popa
aaa
mov
cmp
in
shr
inc
push
or
ljmp
imul
sbb
arpl
cmp
inc
pop
cli
cmp
add
cmp
push
mov
test
gs
push
mov
cli
arpl
repnz
ds
loop,pt
sti
ds
pop
mov
xor
xor
mov
mov
testl
pop
sahf
rorl
mov
iret
dec
sub
repnz
into
out
repnz
faddl
jmp
cmp
pop
or
shll
and
push
mov
fadds
ljmp
mov
mov
jge
jb
sti
dec
out
inc
xor
movsb
xor
fwait
aas
int3
fdivrs
clc
das
cwtl
ljmp
xor
mov
pusha
fbld
sub
xor
outsb
xor
inc
stos
imul
xor
push
xlat
hlt
push
jp
and
aad
fs
addr16
gs
or
inc
ss
inc
add
inc
repnz
decb
jmp
fistpll
sub
aam
mov
ret
jae
scas
loopne
or
loopne
mov
inc
test
in
sbb
nop
lret
outsl
clc
cmp
pop
int3
jne
and
cmp
std
or
sbbb
mov
adc
into
loope
ja
push
aas
dec
push
sbb
test
out
movsl
imul
daa
xor
jne
subl
jae
cwtl
pop
or
ficompl
sub
out
es
lods
arpl
shll
pop
adc
mov
and
mov
cmp
jmp
jmp
in
icebp
call
cli
xchg
jae
iret
jnp
jl
bound
sbb
pop
cltd
push
loop
iret
jge
add
es
movsl
pusha
cmp
lea
dec
and
cld
scas
push
arpl
stos
mov
imul
lods
or
aaa
sbb
and
fisubrl
pop
or
adc
xchg
je
orl
shll
subb
push
xlat
or
xor
sub
inc
and
pop
or
cld
roll
iret
cltd
aaa
lret
cmp
aad
cwtl
and
add
rolb
push
sbb
and
xor
adc
xchg
and
unpckhps
aaa
mov
adc
cmp
lcall
mov
ud0
adc
idivb
inc
push
xor
daa
arpl
adc
insb
jnp
push
cmpsl
cld
fists
xchg
pop
add
or
rorb
adc
pop
js
xchg
add
sub
jl
xchg
dec
and
fists
fisttps
add
xlat
loope
add
js
or
add
ret
or
lret
mov
daa
jns
in
or
pop
add
fwait
adc
ret
adc
ret
ss
pop
fbld
pop
je
shlb
out
clc
mov
repnz
cmp
aas
adc
sbb
cmp
and
and
inc
movsl
dec
aas
stos
cld
mov
add
inc
mov
lahf
jl
push
fs
bndstx
jne
fsubl
sbb
xor
leave
mov
mov
arpl
cmpsl
or
out
fisttpl
sub
aaa
xchg
jae
int
jb
icebp
enter
add
and
aas
dec
imul
sub
sub
sar
shlb
sbb
loopne
jge
das
loope
cmovno
jle
xchg
dec
add
es
cmp
xor
sbb
xor
and
or
test
negl
dec
mov
popf
pop
testl
rorb
pop
testl
fsubp
test
arpl
pop
ljmp
lret
jmp
sbb
out
push
adcl
xlat
mov
out
lahf
dec
test
mov
xchg
gs
inc
or
sbb
ficoms
push
push
fcompp
mov
mov
pop
or
leave
aaa
mov
add
push
add
jbe
nop
imul
iret
testb
mov
push
inc
ret
leave
jg
cmpsl
shlb
push
mov
push
div
add
jecxz
jno
xor
aaa
or
ja
push
push
sbb
lret
adc
xor
sbbb
inc
push
enter
xchg
xor
and
jl
imul
pushf
fdivrs
pushf
ltr
mov
cmpsb
and
lret
ror
and
sub
jb
loopne
jle
adc
jp
fwait
pop
or
and
mov
dec
inc
or
and
lock
lods
je
incb
unpcklps
mov
xlat
aas
sub
cmp
mov
sbb
out
cmpsb
cmpsl
outsl
xchg
xor
or
adc
jl
cmp
push
mov
lret
outsb
add
dec
rclb
inc
mov
xor
daa
inc
push
pusha
cmp
inc
out
pop
inc
rcll
adc
jg
sub
xor
mov
xchg
lar
or
push
sbb
and
pusha
xchg
jae
and
movsl
movsl
mov
inc
inc
xchg
aam
std
scas
and
andb
in
xor
mov
mov
xchg
and
inc
and
or
sbb
pushf
nop
aam
movsb
cmpsb
mov
cmp
fisubl
pop
cmpsl
mov
enter
rcl
xchg
shrl
mov
inc
loopne
rolb
xor
stos
dec
lahf
in
pusha
xchg
out
fsubp
and
shlb
ret
imul
xchg
or
out
loopne
scas
cmpsb
negl
and
ljmp
orb
mov
into
mov
sbb
adc
pop
pop
arpl
inc
xlat
sahf
out
orl
out
dec
das
xchg
add
pop
inc
push
or
int
pop
out
and
lcall
sbb
jne
movsb
pop
cwtl
inc
add
mov
add
out
sbb
lret
mov
push
lret
movsb
aas
scas
outsl
adc
daa
inc
loope
iret
add
aaa
mov
aas
xor
sbb
add
add
xor
xchg
sbb
loopne
std
scas
xchg
mov
mov
jne
push
lret
or
daa
cmpsl
sarb
jb
push
adc
aaa
lods
ss
iret
das
mov
imul
es
and
xor
mov
inc
stos
cltd
fiadds
jmp
insl
mov
push
enter
rorb
jg
dec
pop
fstl
enter
addsubpd
adc
repz
and
xchg
shlb
das
sub
cli
sbb
fimull
fsin
and
lock
pop
jl
mov
adc
mov
stc
fdiv
or
cmp
xchg
and
or
test
add
mov
dec
inc
mov
ret
and
dec
push
repz
push
aas
fiadds
dec
idivl
xchg
push
jmp
in
push
sub
xchg
movsl
mov
lahf
lahf
jne
pop
imul
and
push
jnp
daa
dec
adc
pop
mov
subl
mov
in
rcpps
outsb
sbb
push
daa
jbe
pop
adc
fcom
and
dec
pop
jle
lahf
dec
lea
mov
mov
adc
pushf
das
or
push
inc
pop
mov
jp
cmp
and
aam
imul
xchg
aas
ror
sub
cmp
shll
jmp
dec
ss
rorb
push
jmp
loopne
fidivs
and
sub
enter
and
rep
xor
ds
xlat
imulb
repz
jbe
iret
add
inc
dec
and
cmpsl
pop
daa
or
mov
les
adc
insl
mov
aas
cvtdq2ps
inc
nop
mov
dec
addr16
jno
loopne
pop
fs
mov
pop
xchg
mov
mov
jle
and
rcl
mov
sub
xor
and
aas
jnp
xchg
ja
mov
shrb
cmpsl
sub
mov
mov
repz
aaa
mov
fwait
add
ss
cmp
mov
sub
ret
pop
lahf
test
mov
es
inc
addr16
push
or
push
iret
lcall
ja
loop
adc
pop
ja
xor
and
fisttps
xchg
sub
out
mov
sub
jb
sub
adc
das
call
push
enter
mov
mov
sbb
out
dec
jne
cmp
divl
xchg
xlat
loopne
xorb
mov
and
mov
sbb
mov
xlat
daa
js
daa
out
fistpll
test
push
jne
cmp
divl
xchg
xlat
shlb
ja
and
mov
mov
xlat
daa
js
stos
pusha
push
test
jo
mov
nop
sbb
aas
sub
and
jne
cmp
mov
adcb
es
mov
fisubl
adc
out
aad
mov
adc
imulw
les
jl
sbb
jno
xchg
or
imul
or
xlat
dec
xlat
mov
xchg
cmpsl
mov
and
adc
das
fldenv
and
pop
js
ret
nop
test
das
adcb
popf
das
les
xchg
jno
shr
jl
out
sarl
mov
out
xchg
ss
ja
les
xchg
js
es
call
js
out
cwtl
fldenv
mov
push
push
idivb
mov
es
push
mov
jo
xchg
sub
xchg
aas
aaa
sbb
sub
lret
sahf
daa
sub
out
lds
shr
or
adc
das
fldenv
inc
sub
or
shlb
mov
notl
xlat
add
mov
les
arpl
jno
xchg
push
sti
xchg
mov
mov
xlat
daa
js
popf
dec
adc
das
fldenv
inc
push
out
pop
sub
and
ss
idivl
mov
adcb
jmp
aaa
fisubl
in
outsl
daa
mov
fldenv
mov
inc
push
movl
and
ss
sbb
lods
movsb
mov
jmp
jecxz
mov
lret
inc
stos
adc
mov
inc
push
push
dec
push
ss
sub
or
inc
jmp
mov
test
jne
pop
jnp
push
dec
das
xor
repnz
ret
jns
gs
pop
ret
inc
ret
cmp
and
cmp
out
fiaddl
cmpsb
sbbl
sbbw
cmpl
sbbl
push
test
sub
clc
sub
push
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
dec
push
mov
mov
mov
lahf
negb
lret
clc
fcmovb
call
sub
mov
xlat
cmp
push
lock
lock
lock
test
mov
jge
jnp
jns
jns
jns
jns
xchg
push
cmc
dec
ret
push
rol
inc
shr
scas
daa
ja
call
add
aam
push
stc
add
mov
pushf
and
lods
out
pop
cmpsl
in
jge
fwait
inc
add
sbb
dec
push
push
and
neg
data16
xchg
ja
inc
daa
pop
fsubrs
das
xchg
out
mov
mov
dec
sbb
xor
sbb
repz
adc
inc
pop
repnz
in
jno
jg
mov
add
mov
in
nop
leave
sbb
addb
mov
push
sub
jmp
jae
sbb
cmpsl
push
daa
dec
push
jg
add
push
subl
xchg
xchg
inc
cmpsl
cmp
repnz
pop
aas
jnp
shrb
clc
pop
inc
insb
inc
dec
scas
out
inc
sbb
ficompl
or
xlat
leave
lahf
push
jns
das
mov
out
pop
pop
scas
out
push
subl
xor
push
jle
loope
pop
cmp
push
and
lock
xchg
or
xlat
push
fnstenv
insl
repnz
pop
adc
xchg
shrb
jb
enter
sbbl
lds
lahf
push
out
mov
enter
push
psrlw
dec
sbb
adc
repnz
mov
dec
int
xor
mov
jo
rcrb
mov
lcall
push
push
fmul
push
popa
shl
lret
jbe
enter
daa
xchg
ss
repz
test
fimull
imul
add
add
xchg
push
xchg
or
jno
out
cwtl
aad
ficomps
dec
xor
push
mov
pop
pushf
or
mov
iret
nop
in
jp
mov
cmp
iret
rcrl
add
fcoml
xchg
int
jo
cmpsb
mov
mov
xlat
add
push
and
pop
int3
aad
add
dec
xlat
lea
lods
push
into
icebp
sub
sti
mov
cmp
sti
insl
inc
xor
test
enter
in
xchg
adc
jnp
iret
sub
std
fs
enter
add
add
sub
sbb
xchg
adc
in
ss
mov
setbe
pop
add
mov
rclb
and
pop
test
icebp
out
mov
inc
dec
mov
aas
or
mov
stos
xor
sub
dec
push
into
ljmp
sbb
movsb
js
sbb
cld
rcrl
mov
lea
dec
adc
or
stos
or
and
adc
jl
lea
sti
and
gs
out
jp
fucomi
cmc
repz
and
call
cmp
adc
xor
inc
jae
adc
cmpsl
and
ja
xor
stos
pop
aas
inc
fisubl
jmp
adc
adc
imul
in
add
out
sub
test
dec
xorb
gs
not
int3
and
stc
lret
xor
cs
sub
mov
mov
pop
call
sarb
in
call
lock
call
sarb
in
call
sarb
and
inc
imulb
mov
pop
call
sarb
hlt
out
adc
mov
pop
call
sarb
in
idivb
jl
in
call
sarb
in
call
adc
jl
in
call
sarb
in
call
ljmp
call
sarb
in
call
sarb
and
adc
test
add
xor
out
xor
pop
mov
add
aas
pop
imul
push
insl
cmp
mov
loope
out
xchg
dec
movsl
pop
and
js
xor
enter
push
test
fadd
sbb
das
dec
cwtl
test
sti
push
dec
sbb
insb
fwait
mov
jecxz
xlat
xor
mov
mov
push
or
inc
pop
std
daa
adc
adc
inc
pop
std
daa
sbb
ss
mov
andl
jmp
adc
or
adc
xlat
roll
sbb
adc
cld
aad
jle
or
cld
mov
data16
adc
dec
mov
inc
mov
subl
pop
iret
sub
dec
mov
xorl
rcrl
xor
xor
cmpsb
aas
sbb
mov
xor
pushf
int
imulb
adc
cmp
lods
pop
pop
scas
les
lea
or
cmpsb
or
and
les
cmp
inc
mov
addb
push
loopne
inc
or
dec
ja
push
sti
addl
mov
addr16
or
push
cmp
or
inc
pop
xor
inc
pop
sti
xchg
pop
jnp
xchg
pop
sub
out
pop
addr16
cltd
jnp
mov
cmp
addr16
jmp
in
xlat
jp
or
sbb
cmp
aas
pop
int3
in
adcl
adc
test
sbb
es
inc
add
pop
les
mov
adc
adcl
sbb
pop
ja
sbb
in
adc
arpl
pop
invd
aas
ret
adc
or
orb
in
cmp
or
sti
orl
movsb
xlat
loop
inc
popa
test
sub
pop
pop
repz
daa
add
jl
add
test
leave
pop
sti
addl
inc
mov
subl
popl
arpl
inc
out
adc
cmp
cmpb
in
cmp
cmp
jne
inc
pop
rcl
divl
push
sub
add
xchg
jle
inc
cwtl
xor
cmp
iret
or
pusha
jne
stc
fs
fsubrl
nop
bnd
repz
xor
test
sti
jo
push
adc
jp
adc
sbb
push
test
test
sub
adc
mov
jne
repz
into
insb
fisttps
jns
lahf
hlt
rcrl
jg
or
inc
test
inc
fimuls
cmp
mov
insl
jg
dec
adc
popl
push
pushf
aam
pop
and
or
jp
sub
adc
lret
mov
fists
adc
fistpl
push
pop
out
mov
addr16
add
adc
adc
aaa
aas
nop
aas
arpl
je
pop
or
das
mov
in
add
fisubrl
les
and
ljmp
jae
std
and
mov
in
and
add
jns
mov
in
jmp
mov
jecxz
adc
movb
xor
in
jmp
icebp
mov
imul
lods
xor
sahf
std
jae
sbb
or
fdivs
or
sbb
mov
cld
ja
ja
ficoms
xlat
pop
rclb
sbb
das
leave
lret
leave
ret
movsb
adc
mov
sbb
mov
inc
les
lea
push
mov
or
es
aas
pop
cmovns
mov
ret
xor
in
icebp
mov
or
shll
dec
and
adc
fnstsw
andb
stc
inc
es
leave
lods
sub
decb
jb
xchg
inc
je
adc
pop
and
shrb
out
adc
cmpsl
repz
cwtl
outsb
popa
sub
jne
aaa
jno
mov
mov
pop
inc
ret
leave
mov
fsubrp
dec
das
sahf
fucomip
jl
push
and
out
lahf
mov
mov
add
test
iret
mov
fwait
mov
dec
lods
jne
insb
mov
or
pop
xor
add
jmp
adc
aad
jmp
shrb
es
arpl
adc
clc
pop
inc
mov
cmp
and
xor
pop
psubsb
es
sti
pop
pop
or
out
push
in
xchg
pop
mov
or
xchg
xchg
jecxz
cmp
dec
sahf
aas
sub
cmc
je
mov
inc
clc
lcall
out
cltd
jns
movsb
imul
push
or
sub
js
mov
dec
in
pop
call
push
adc
pop
adc
aaa
arpl
aas
add
cli
pop
jae
test
into
and
lcall
icebp
insl
das
cmp
cld
insb
push
inc
push
mov
and
pop
dec
adc
and
adc
dec
aaa
xchg
xchg
test
jmp
aas
sbb
arpl
and
and
cli
adc
ret
cwtl
adc
push
cmp
mov
pop
cwtl
jmp
push
cmpsb
orb
aas
push
pop
ljmp
cmpsb
stc
aas
es
sbb
and
ja
inc
push
call
int3
nop
cmp
push
inc
cmp
test
dec
mov
sbb
shll
adc
push
cmp
mov
cmc
adc
adc
sbb
lahf
imul
add
push
aad
sub
cwtl
push
outsb
iret
jnp
iret
jmp
xchg
xchg
jae
mov
jnp
enter
insl
inc
movsb
in
rolb
pop
sbb
in
adc
mov
int
pop
gs
test
imul
pop
mov
mov
jp
fistps
ss
jne
inc
scas
or
sbbl
int
and
faddp
pushf
jle
pop
adc
inc
add
and
sub
js
andl
mov
pop
jne
xor
test
out
sbb
mov
jo
add
cltd
xchg
cli
mov
sbb
fsub
sbb
push
clc
idivl
sbb
rcrb
das
ja
repnz
jp
imul
cmp
inc
push
aad
lods
push
jno
sbb
adc
xor
cltd
mov
adc
adc
xchg
out
dec
mov
adc
cs
cmp
push
leave
lahf
ret
lods
mov
addl
add
mov
adc
mov
pop
daa
dec
mov
add
rcll
and
inc
push
ret
cmp
arpl
stos
push
jl
stos
mov
sub
push
imul
xchg
mov
push
inc
xor
add
adc
pushf
or
fs
lahf
jmp
mov
push
jecxz
mov
xchg
add
insb
aaa
icebp
cmp
jle
sub
lds
pop
rorl
push
sbb
push
rep
in
or
jns
and
jae
mov
gs
imul
and
pop
int3
push
mov
daa
lahf
ss
and
mov
or
pop
lcall
xor
scas
xchg
sbb
adc
pop
xor
fsubl
dec
dec
mov
or
adc
jl
jg
push
mov
push
and
adc
jo
sub
mov
adc
adc
out
pop
dec
iret
movsb
fldt
in
arpl
push
xchg
mov
xchg
arpl
rol
popa
mov
fs
mov
xchg
inc
or
mov
and
adc
icebp
js
cld
and
dec
push
mov
xlat
gs
cmp
inc
sbb
xchg
test
adc
mov
int
sbb
call
sbb
sbb
sti
mov
loopne
adc
jmp
cmp
inc
movsl
insl
das
fiaddl
mov
sbb
adc
mov
xchg
das
and
es
xchg
call
cwtl
cmp
test
push
shl
out
stos
mov
xchg
pop
push
pop
jno
mov
test
rcll
xor
sti
xchg
sub
lods
cmp
and
daa
sarb
push
push
sub
mov
mov
imul
fwait
out
mov
dec
je
xorl
ffree
adc
test
lea
addl
or
icebp
into
das
fisubl
cld
jae
dec
jg
add
fwait
jl
lock
ds
sbb
lock
ja
fidivrl
jnp
cltd
enter
push
add
pop
push
idiv
jmp
push
xorb
pop
jo
xchg
dec
inc
mov
fs
inc
repz
pop
enter
gs
movsb
cmp
xor
stc
push
shrb
aaa
inc
mov
movsb
pop
jns
xchg
xchg
int
daa
aaa
xchg
call
ja
lods
std
push
test
push
arpl
sbb
fidivl
sahf
mov
push
and
push
pop
outsl
lea
push
xor
ja
scas
into
cmp
lahf
dec
rcll
mov
rclb
or
rclb
or
lea
xchg
mov
inc
xor
dec
repnz
cmp
fnsave
mov
or
lret
inc
mov
xor
xlat
mov
cmpsb
xchg
inc
sub
add
stc
andb
mov
inc
push
pop
sub
cmp
cmp
movsb
lret
mov
in
xchg
lock
add
das
xor
sbb
dec
xchg
mov
daa
push
xor
ficomps
jge
sbb
test
or
inc
jae
push
in
or
fstps
mov
dec
call
ret
lea
inc
and
aas
cmpsl
popa
rorl
jle
push
loopne
ljmp
xor
sbb
xor
xor
adc
sbb
arpl
insl
out
gs
shrb
cmp
sbb
xlat
mov
outsl
xchg
mov
outsl
push
mov
inc
scas
shrb
inc
scas
inc
jg
aas
inc
loope
scas
push
ja
dec
jno
cld
mov
lgs
jge
mov
dec
incl
jnp
mull
mov
imul
or
jns
dec
iret
out
adc
loopne
fdivrs
popf
fbstp
jmp
or
cmp
int
stos
dec
mov
rcrb
repz
scas
mov
cmpsl
jae
in
adc
push
sbb
gs
outsl
ret
jg
flds
leave
test
dec
in
dec
not
sbb
loop
dec
mov
cmp
xlat
cmp
sbb
rorl
mov
rolb
xchg
pop
or
adcb
repnz
daa
fdivs
xchg
sbb
xchg
pusha
adc
loopne
imul
add
cmp
mov
lahf
or
mov
jnp
inc
fwait
mov
hlt
and
or
es
imul
xchg
adc
decl
inc
adc
or
mov
loopne
add
movsl
mov
shl
mov
sbb
mov
inc
mov
or
cmp
adc
iret
inc
out
test
pop
sbb
push
mov
sbb
lahf
cmpsl
enter
push
clc
imul
test
xchg
subl
jnp
mov
loope
int
fwait
ja
xchg
out
and
mov
mov
push
mov
xor
fcoms
sti
push
aaa
xor
cld
mov
leave
cli
cmpl
sbb
aaa
fcoms
std
xchg
xlat
dec
inc
in
mov
jl
iret
push
inc
es
pop
or
popa
and
push
dec
aaa
imul
jne
loopne
push
cltd
jne
enter
out
aad
jne
jbe
jg
outsl
sar
sti
dec
ja
xchg
adc
xlat
iret
out
mov
int3
mov
adc
cmpsb
aas
xchg
out
in
jge
clc
arpl
pusha
jns
mov
int3
int3
xchg
inc
jae
lods
or
mov
inc
and
cmp
cmc
mov
lods
sbb
cmp
orl
rcrl
add
mov
arpl
mov
leave
sub
in
and
pusha
push
sub
push
sbb
daa
or
mov
daa
dec
add
daa
push
mov
stos
sbb
test
mov
sbbl
shlb
push
and
lods
push
mov
and
fbstp
jne
xor
and
scas
loop
jmp
subb
outsl
jne
inc
aaa
inc
test
adc
enter
clc
daa
sbb
mov
mov
push
iret
cmp
ret
out
flds
repz
cli
xor
mov
xor
mov
loopne
adc
pop
std
adc
adc
push
dec
xchg
mov
out
inc
in
fisubs
pop
fcmovnb
fmul
jge
push
cltd
out
mov
imul
mov
sub
aam
xchg
lahf
sbb
mov
lods
pop
lods
or
cmpsb
iret
nop
mov
xorb
mov
lods
dec
out
rclb
ficomps
add
cmc
add
cmc
or
dec
sub
or
mov
lea
cli
and
ss
sbb
int
or
sub
shlb
pop
inc
push
aam
ret
and
push
dec
xor
std
mov
aas
or
mov
iret
pop
push
in
sub
xchg
in
cmpsb
ja
out
out
ds
add
cmpsl
or
mov
adc
mov
rcl
enter
stc
div
shr
test
js
lea
pop
jp
and
in
mov
fistpll
jnp
mov
mov
lea
ss
xchg
rclb
xor
out
or
mov
xchg
jae
daa
pop
and
jae
ljmp
nop
adc
mov
push
imul
xchg
push
and
xor
outsl
add
hlt
inc
pop
pop
jecxz
aas
dec
sbb
xor
cmc
movsb
adc
aad
dec
mov
aam
cmc
orb
pushf
jno
push
lds
and
push
and
cmp
outsb
push
push
in
xor
imul
inc
push
popf
inc
outsb
movsb
mov
imul
test
test
dec
fstpl
mov
mov
xor
mov
pop
insl
rcll
pop
mov
gs
dec
push
pop
mov
lahf
xchg
subl
mov
jp
pop
mov
sbb
aas
xor
inc
push
lods
push
popf
xchg
mov
jb
sbb
push
outsl
cmp
and
sub
lods
or
jno
inc
xchg
add
cmp
sub
jns
add
sub
lea
das
dec
mov
ret
xor
xchg
das
movsl
cmp
xor
or
dec
fildll
sub
or
ds
xor
repz
xor
iret
add
in
mov
dec
cmpsl
clc
xor
aam
jp
repz
adc
dec
inc
aas
dec
repz
mov
xor
sbb
outsl
or
or
xor
out
dec
testl
add
mov
daa
mov
inc
or
mov
adc
cmp
or
repz
mov
or
adc
out
cltd
and
sub
xor
rorl
aas
adc
inc
jnp
iret
dec
mov
inc
adc
xchg
xchg
fistps
push
dec
mov
mov
fiaddl
adc
xchg
xchg
jnp
jb
pop
popf
rolb
mov
ret
dec
adc
icebp
or
push
sbb
and
in
mov
in
cmp
sbb
xchg
incb
js
gs
jmp
inc
dec
jns
or
adcl
sub
mov
in
sti
cmp
sti
adc
jp
dec
xor
scas
add
push
xchg
cld
xor
cld
cmpsl
jle
outsl
sbb
je
mov
adcl
addr16
cmp
pop
mov
test
loopne
or
mov
add
dec
push
mov
dec
add
push
jl
cmp
rorb
or
decb
mov
push
inc
inc
and
pop
or
fnstenv
ljmp
out
xchg
sbb
pop
mov
cs
and
adc
iret
xchg
daa
jnp
inc
pop
pop
jecxz
pop
sub
push
jp
dec
cmp
jecxz
add
fdivr
ficoml
sbb
sbb
pop
cmp
xchg
arpl
das
andl
adc
dec
sub
bound
pop
stos
das
scas
mov
push
popl
rolb
adc
sbb
cld
adcl
mov
mov
jl
mov
out
add
inc
aaa
dec
add
and
xchg
xchg
dec
repz
xor
add
movsl
adc
and
mov
jo
subl
sub
sbb
add
sub
call
push
mov
sbb
mov
inc
jmp
add
mov
aas
xchg
xlat
loope
adc
cld
cmc
adc
fisubl
cmpb
xchg
mov
fs
test
xchg
xchg
add
test
xor
mov
xchg
andl
inc
and
add
inc
cmp
mov
or
or
add
es
les
dec
adc
cmp
pop
cmp
mov
lret
sbb
add
push
and
cmp
mov
mov
and
sub
cmp
push
sub
add
out
aaa
sub
push
std
inc
out
xor
js
out
aas
push
test
cmp
cmp
popf
popl
add
or
lahf
setge
imul
and
and
cmp
or
lahf
xchg
leave
popf
inc
and
popf
loopne
and
leave
popf
inc
and
pcmpeqw
popf
inc
and
daa
jne
xor
inc
and
xchg
aaa
and
ss
mov
pushf
and
cmp
popf
frstor
add
popf
inc
and
and
popf
xor
aad
pop
popf
and
mov
ss
popf
and
sbb
out
xorl
cltd
add
xor
daa
out
aas
scas
loopne
cmpl
adc
daa
insb
push
sub
in
lahf
cli
nop
mov
aaa
shlb
xchg
mov
shlb
pop
jmp
scas
arpl
jnp
cmp
into
mov
imulb
flds
outsl
aad
pop
push
mov
out
in
popa
sub
pop
incb
pop
arpl
nop
xchg
pop
and
in
adc
repnz
enter
in
adc
dec
lcall
stos
mov
fsubrl
mov
push
outsl
inc
adc
pop
mov
iret
and
mov
enter
mov
insl
xchg
and
out
andb
xchg
dec
add
test
pushf
jle
dec
sub
xor
or
and
out
jnp
mov
or
and
mov
mov
or
sub
aad
fs
adc
iret
adc
sbb
cli
cwtl
repnz
adc
or
and
sbb
sub
std
sbb
daa
xor
cmpsl
inc
pop
inc
pusha
xchg
in
mov
in
or
pop
inc
xchg
mov
iret
and
mov
dec
sbb
push
mov
xchg
ja
js
mov
das
es
mov
jmp
dec
mov
jnp
mov
mov
add
sbb
daa
int3
inc
test
jmp
xchg
mov
xor
int3
sahf
movb
sbb
lods
or
cmp
add
sbb
pop
mov
std
es
ret
inc
add
lock
mov
js
add
or
adc
push
push
idivw
cli
dec
sqrtps
jo
sbb
in
push
or
push
push
pop
and
add
fisttpll
push
dec
and
scas
add
ja
decb
adc
xchg
and
dec
jl
push
std
jb
js
lcall
xchg
xchg
jb
or
jo
jl
fs
xor
hlt
dec
inc
adc
push
cwtl
fisubl
push
or
fs
mov
rorl
into
ss
jnp
sbb
cmp
add
daa
stos
push
xor
push
xchg
or
xchg
and
xchg
cli
push
adcl
and
stos
cmpsl
dec
inc
inc
and
sbb
and
sti
stc
add
js
lock
sub
outsb
or
es
in
mov
js
nop
pop
sbbl
std
loopne
cli
or
mov
pop
insl
add
iret
sbb
sbb
int3
pop
sbb
inc
or
or
and
xlat
mov
ljmp
jae
jle
add
xchg
stos
push
or
mov
pop
cli
mov
ja
or
mov
pop
sub
push
nop
sub
test
mov
or
in
cli
lahf
lea
cmp
mov
sbb
imul
jns
sub
divl
cs
cmp
aas
cmp
add
pusha
dec
mov
in
dec
shrl
je
xor
dec
push
xchg
pop
adc
pop
xor
xchg
out
out
mov
push
scas
mov
iret
pop
je
adc
out
push
jge
mov
inc
mov
lret
daa
insl
dec
gs
test
pop
inc
xchg
mov
scas
arpl
inc
out
pop
push
and
jge
lret
scas
jg
push
cmp
and
hlt
out
dec
popa
mov
mov
pop
loop
inc
repz
xor
jae
inc
stc
imul
xor
hlt
cmpsl
add
cmpsb
dec
xchg
dec
mov
lret
popa
pushf
mov
dec
mov
inc
xor
xchg
cmovae
push
xor
arpl
mov
xchg
and
fcomp
loop
shll
fldenv
aas
daa
adc
gs
mov
push
ja
ja
gs
fistpll
test
test
daa
push
das
aas
enter
mov
mov
jp
and
and
fmul
pop
mov
pop
xor
fadd
xchg
push
jae
orl
scas
cmp
daa
or
movsl
jg
dec
sbb
fldl
sbbb
cmp
cmp
out
jbe
adc
out
in
sub
sub
testl
or
lds
push
mov
cltd
xchg
pop
inc
xchg
dec
lds
pop
dec
das
scas
jle
je
flds
rorb
pop
xchg
or
pop
in
xchg
repz
cmp
adcb
gs
add
mov
xor
cmpsl
jns
mov
jnp
adc
cmp
in
cmp
or
dec
push
mov
inc
xchg
jns
stc
or
out
push
imul
lea
in
xchg
mulb
das
repz
popa
adc
sbb
in
das
jo
repz
shl
mov
inc
jb
stc
dec
push
add
idiv
cmpsb
aaa
fwait
test
sub
daa
jae
dec
adc
in
mov
jne
xchg
dec
jnp
mov
mov
jmp
test
jae
or
leave
imul
lahf
enter
xchg
sbb
repz
push
mov
test
and
mov
fisubrl
sbb
adc
call
jae
enter
push
pop
xor
mov
and
leave
xor
fistpll
aas
dec
js
adc
iret
mov
subb
or
cmp
in
adc
and
fcmovnb
test
or
psrlq
sbb
sub
sub
enter
xor
js
movswl
xchg
aas
sub
subb
cmpsb
lds
xor
and
jge
xor
or
add
in
cmp
jmp
inc
es
lds
stos
sbb
cmpl
in
fs
xchg
js
push
dec
push
mov
jns
fs
imull
pop
dec
sub
add
aas
popa
sbb
arpl
mov
sub
dec
ljmp
mov
push
sbbb
sub
push
jb
mov
imul
xchg
fsubrl
mov
mov
dec
pop
push
iret
adc
lds
cwtl
inc
cmp
aas
ljmp
xchg
inc
dec
cs
dec
inc
pop
loopne
notb
and
es
pop
popf
jb
idivb
shrb
pusha
mov
aas
pop
and
pop
xorl
jge
sbb
stc
in
and
repnz
push
popf
xchg
xchg
test
fwait
lds
pop
outsb
ljmp
adc
testb
int3
test
mov
sbb
addb
out
loope
ret
push
push
pop
insl
cmpsb
push
sbb
cld
insb
and
pop
mov
push
repnz
mov
mov
movsb
lods
iret
pop
adc
adc
cmpsl
and
sub
pop
lea
mov
add
jo
sbb
jge
mov
inc
inc
mov
jge
mov
or
lds
stc
pop
cmp
inc
jge
xlat
add
fisttps
out
mov
jne
add
daa
out
sbb
filds
scas
outsl
pop
jg
pop
mov
inc
ja
aas
outsl
sbb
call
lock
sbb
push
das
sbb
add
jmp
es
idivb
xchg
sbb
sti
cld
pop
sbb
iret
xlat
adc
aaa
loopne
incb
jno
rcrb
cmp
push
rorb
pop
push
dec
mov
xor
sub
insb
or
ljmp
xor
sar
mov
pop
adc
test
insb
dec
imul
rcll
push
movsl
out
das
imul
push
jle
test
push
aaa
sbb
mov
decb
add
dec
jle
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
es
sahf
enter
lret
or
xlat
inc
mov
das
add
add
aas
pop
clc
xchg
mov
pop
pusha
cmp
push
mov
ss
adc
outsl
aas
adc
and
dec
xlat
xchg
iret
movl
pop
pushf
pop
loopne
sbb
rorb
pop
ss
test
arpl
test
idivb
pop
mov
out
fbstp
arpl
dec
adc
out
lahf
sub
int
shlb
leave
cvtdq2ps
mov
or
mov
loope
lahf
aaa
pop
adc
popa
bt
loopne
popf
sub
push
out
imulb
cmpsl
lods
jl
loopne
sub
cmp
cmp
daa
scas
popa
in
shll
or
lahf
add
xchg
loopne
inc
inc
push
cwtl
jae
push
subl
mov
sub
test
xor
push
lret
jge
aas
fldenv
outsl
rcll
test
ja
fcmovne
aam
pop
inc
dec
pop
fstl
and
sahf
fs
jne
jl
jnp
decb
out
popf
xchg
jno
ja
or
and
sarl
dec
xchg
adc
push
subb
orb
cwtl
lods
int
arpl
pop
pop
icebp
les
sub
add
mov
sbb
mov
cmpsb
das
incb
and
movsl
sahf
ljmp
adc
outsb
fwait
stos
xchg
mov
test
and
jo
es
fmulp
lcall
mov
add
xorl
add
xor
jmp
jb
lods
int3
and
push
adc
popa
inc
dec
outsl
test
je
ret
mov
fisttps
inc
imul
cmp
rcl
mov
xor
lret
or
inc
jns
xchg
mov
mov
sti
xor
lea
xchg
lahf
inc
fwait
sti
inc
push
or
adc
push
icebp
pusha
es
int
xor
or
arpl
jns
xchg
rcrl
push
sbb
out
and
jno
mov
mov
or
hlt
pop
sbb
push
jmp
xchg
add
adc
fcompl
arpl
imul
arpl
sbb
jp
fdivrl
adc
mov
out
mov
aaa
lods
outsb
addr16
push
inc
dec
sbb
dec
sbb
outsl
js
mov
xchg
mov
cld
adc
popa
cli
aam
sahf
xor
aas
xchg
pop
jle
or
mov
imul
push
ret
mov
das
xor
dec
sub
adc
lcall
out
push
sub
xor
enter
dec
int
stos
mov
rclb
insl
jae
adc
pop
or
push
xor
mov
data16
fwait
push
lret
xor
fwait
cmp
int
and
movsb
iret
mov
xlat
fiadds
dec
notl
push
xor
mov
xor
rorb
nop
aas
lea
jne
xchg
jge
daa
adc
dec
or
aam
and
daa
cmp
sbb
and
mull
out
add
sbb
jmp
in
inc
movsl
aaa
jb
sub
aam
shll
jnp
pop
das
push
and
push
pop
adc
ret
fstl
sub
add
mov
dec
pop
cltd
sbb
or
sub
fdivrs
imul
adc
inc
aaa
sbb
push
imul
insl
jg
pop
fdivrl
pop
cli
pushf
lret
mov
sarb
insb
in
mov
ja
aas
and
dec
push
lods
and
and
jge
xchg
pop
loope
idivl
aas
adc
outsl
daa
sbb
lea
sub
sub
sbb
cli
mov
dec
and
int3
push
pusha
mov
in
outsb
test
fwait
pop
out
ja
pop
xchg
or
les
sbb
push
es
sub
mov
out
jmp
sbb
enter
cli
stc
add
cmp
inc
pop
or
in
and
insl
sbb
push
les
xchg
sahf
repz
pop
adc
sahf
andb
jg
mov
mov
push
fxam
mov
dec
sbb
out
aad
outsb
in
add
pop
adc
shrb
xor
gs
movsb
lahf
ffreep
gs
fs
cmpsb
and
adc
and
das
int3
ret
pop
jae
popf
pop
push
sub
in
sub
dec
sbb
movsb
sub
pop
cmp
pop
jbe
mov
jne
cld
outsb
out
popf
sti
jae
dec
mov
pop
jge
push
jo
mov
xchg
and
cmc
add
xchg
pop
mov
push
mov
sbb
xor
lock
cmp
ret
xchg
int3
inc
xchg
adc
mov
imul
stos
inc
ljmp
and
and
int
push
cmp
repnz
push
cld
sub
pop
shlb
and
mov
inc
adc
insl
xor
adc
and
scas
cmpsb
pushf
mov
cs
and
fs
mov
lods
mov
cmc
addr16
jge
mov
push
mov
add
in
mov
gs
out
xchg
sub
iret
mov
lret
mov
mov
add
aas
xchg
lret
xor
das
mov
into
adc
ret
lcall
xor
orl
inc
inc
sub
mov
or
sub
adcl
aas
and
pop
mov
push
sub
cli
cld
jg
cmp
incl
adc
lods
out
and
pop
jae
out
add
ljmp
cmpl
sub
xchg
sti
popa
lret
call
jne
pop
ljmp
xor
pop
rolb
ret
xor
popa
pop
ret
test
xor
cmp
aad
sbb
mov
out
cltd
dec
pushl
mov
fwait
jle
dec
and
sub
dec
xchg
repnz
es
lds
xchg
and
outsl
repz
dec
xor
fildll
rcrb
mov
cmpsl
ss
scas
jno
arpl
lods
movsl
int
aam
nop
jle
pop
dec
pop
pop
add
sbb
mov
ss
aas
inc
cmovnp
mov
insl
xchg
sub
xor
dec
gs
aas
aas
and
jnp
test
inc
cli
sbb
aaa
adc
inc
scas
lods
arpl
repz
das
fildl
or
xor
sub
je
into
ds
push
cmp
lods
add
aas
jne
insb
cmp
xchg
test
stos
aad
daa
aaa
aas
cmpsb
shl
btc
xorl
cs
mov
jnp
loope
pop
clc
jecxz
pop
loopne
xor
inc
or
loopne
js
adc
aas
push
xchg
or
insb
rcrl
xor
sbb
mov
outsl
fwait
mov
mov
pop
nopl
adc
xor
cmp
or
lahf
cmp
inc
inc
fwait
and
mov
ja
repz
test
clc
adc
inc
nop
jmp
adc
test
cmp
push
push
gs
xlat
fists
aas
and
insl
xor
mov
insl
aas
lock
lret
rcrl
fstpt
lds
insl
inc
mov
push
aad
test
adc
sbb
push
filds
xchg
shl
not
daa
mov
fisubs
inc
repnz
addr16
in
jecxz
jnp
mov
mov
aad
xchg
iret
jmp
inc
arpl
cmp
add
dec
nop
aaa
pop
add
pusha
jecxz
psubb
leave
or
jns
mov
test
enter
cmp
dec
sub
mov
in
pusha
movsb
push
mov
aas
ja
pop
push
repnz
mov
pushf
jno
sub
push
pop
popa
dec
ds
imul
movsl
pop
or
test
je
push
inc
cmp
push
lret
adc
push
cmpsb
outsb
ds
sbb
jmp
daa
aad
mov
and
lods
pop
or
or
test
add
std
mov
xchg
ficoml
lret
push
loop
push
dec
pushf
pop
add
fistpl
mov
das
ja
repnz
into
decl
popa
adc
iret
inc
add
sbb
repz
push
aaa
sbb
das
fcoml
dec
cltd
jb
mov
imul
fcoml
xor
aam
pop
js
cmp
xor
jg
push
xchg
inc
cmp
add
cld
dec
shlb
cltd
cli
jb
mov
imul
addl
das
pop
test
nop
xor
and
dec
cmp
mov
pop
addr16
inc
jo
cmpsl
sbb
add
outsb
dec
fmull
cmpsb
pop
mov
xchg
push
cmp
push
adc
and
dec
aaa
sub
jb
push
cmp
add
sahf
mov
test
cmpsb
sahf
and
imul
xchg
sbb
shll
mov
adc
or
and
hlt
pop
ljmp
dec
sub
xchg
cwtl
and
dec
push
lahf
add
sbb
outsl
aaa
xor
in
jae
jno
xchg
cwtl
popf
jae
jno
pop
add
cmp
jecxz
sarl
sbb
bound
inc
add
aaa
sub
in
or
sbb
push
xchg
ss
cs
xchg
test
fmul
adc
push
ljmp
insb
cmpsl
das
or
fstp
xor
xlat
or
incl
testl
cmpsl
mov
push
inc
adc
fwait
inc
popf
mov
cmp
lcall
ficompl
mov
mov
push
jnp
add
jno
popa
sbb
mov
add
mov
les
adc
cmp
push
sbb
push
scas
cld
aaa
sub
xchg
ljmp
xchg
testl
mov
dec
sub
jbe
insb
fistl
or
xchg
int3
add
es
adc
test
xchg
aas
outsb
shlb
adc
rolb
xchg
adc
ss
incb
mov
inc
cli
addr16
pop
fisubs
andps
and
dec
adc
cwtl
imul
xcrypt-ofb
cmpsl
jmp
sub
inc
xchg
incb
add
mov
or
jnp
push
jnp
das
test
jno
pop
mov
enter
popf
daa
hlt
insb
sti
and
daa
push
push
scas
dec
in
cltd
mov
aas
mov
push
mov
call
cmp
push
adc
test
xor
adc
cmp
add
aaa
daa
jnp
add
test
in
mov
gs
jecxz
rorb
push
mov
pop
daa
ja
and
push
mov
mov
mov
popf
enter
xchg
mov
addr16
test
add
and
dec
mov
and
or
mov
jo
int3
adc
xchg
adc
pop
dec
les
push
mov
out
mov
xchg
push
push
cmp
lahf
out
push
push
das
and
push
stc
icebp
cli
dec
add
jnp
inc
adc
fs
out
mov
out
add
fwait
jne
in
dec
jno
adc
adc
dec
mov
ret
mov
jo
jmp
sub
pop
or
xor
xor
imulb
es
test
outsl
pop
inc
pop
daa
out
ja
or
pop
aaa
cmp
sbb
arpl
or
sbb
push
dec
out
pop
loopne
push
aaa
out
aaa
push
mov
movsl
adc
adc
cwtl
mov
outsl
ds
imul
inc
cmp
inc
inc
andb
outsb
adc
sub
cmp
add
xor
dec
push
js
sbb
andb
inc
sbb
sub
mov
xor
fucom
dec
pop
xchg
xor
mov
mov
lods
arpl
cmp
les
push
rcrb
and
dec
sub
std
pop
imul
out
fldt
aaa
in
test
aaa
sub
sub
stos
pop
outsl
lods
sub
arpl
and
cmp
dec
cs
int
mov
cwtl
incb
mov
out
xlat
mov
add
nop
sbb
push
clc
cmp
iret
arpl
inc
insb
and
sub
cmp
bswap
add
outsl
das
cltd
cmpsl
xchg
daa
mov
or
xchg
scas
jg
adc
dec
pushf
mov
cmp
stos
jge
add
and
js
push
test
sbb
dec
enter
clc
mov
sbb
nop
outsl
sbb
add
pop
dec
mov
jg
filds
sbb
call
or
aam
xchg
sub
in
xchg
jne
in
mov
xchg
ja
dec
cmp
add
ret
dec
or
push
jnp
or
mov
leave
in
dec
aas
hlt
stc
mov
or
or
or
mov
add
sbb
xchg
and
sbb
sub
data16
or
jmp
xchg
or
sub
cmp
jl
pop
jno
lods
sub
iret
or
xchg
add
sub
mov
mov
repnz
test
and
jp
sub
adc
loop
adc
imul
xchg
sbb
dec
mov
cli
movsl
test
push
arpl
sub
adc
stos
hlt
popa
mov
aas
and
mov
fwait
repz
test
jno
xchg
xchg
arpl
xchg
into
pop
sub
js
add
xlat
inc
pop
stos
sub
stos
addb
sti
outsl
pop
pop
or
push
inc
cwtl
sub
test
cmp
movsl
jns
lds
cltd
outsb
sbb
jne
dec
or
cmovge
or
ret
cld
inc
or
rorb
xchg
popa
ja
add
jo
dec
xchg
lcall
sbb
xchg
call
dec
xor
push
int3
enter
lods
pop
repnz
fwait
push
or
and
fstl
popf
test
adc
xchg
pop
xlat
ja
pop
addl
sbb
nop
fisubs
pop
pop
inc
cmp
das
push
lret
or
inc
push
aam
sahf
or
push
mov
in
cmp
adc
pop
mov
in
out
test
movswl
and
aaa
add
add
in
mov
sahf
push
jns
xchg
add
pop
in
ss
and
dec
xchg
pop
bound
adc
xchg
or
and
pop
ret
add
dec
loopne
aas
std
div
dec
jl
pop
xchg
pop
adc
and
nop
mov
mov
nop
out
jle
out
iret
cwtl
xchg
inc
in
into
mov
add
out
push
nop
xchg
add
inc
cmp
adc
sub
pop
out
adc
and
sub
movsl
xchg
mov
sbb
lahf
xchg
daa
push
and
inc
cmp
mov
sub
adc
and
iret
pop
test
xchg
add
push
inc
jge
pop
iret
fs
adc
rorl
xchg
lea
jecxz
and
add
push
out
add
ds
ja
jb
mov
mov
mov
das
addr16
loop
mov
xor
pop
mov
aad
add
sub
adc
aam
div
pop
push
jmp
ret
stos
setg
movsb
mov
test
idiv
fwait
movsl
and
cmp
inc
and
loope,pn
mov
lea
jmp
call
call
inc
pushf
push
pushf
pushf
lea
jmp
xor
inc
xchg
adc
repz
jbe
rolb
and
xchg
jb
ss
push
push
mov
and
push
sub
jno
subl
lahf
cmp
jno
and
lret
xor
sahf
lds
or
lahf
xchg
add
xor
lcall
lret
leave
push
stos
push
cs
add
aad
add
inc
js
iret
add
dec
fists
mov
inc
mov
repnz
push
push
add
xchg
xchg
cmpsb
or
pop
pop
cmpsl
sub
push
outsl
stos
ficomps
fistl
iret
pushl
daa
mov
mov
mov
repnz
dec
stc
fimull
xor
mov
mov
dec
scas
and
xor
cmc
jmp
xchg
mov
inc
mov
scas
divb
adc
pop
divb
mulb
mov
sbb
into
mov
jns
sub
out
shl
jp
jp
xor
sbb
adcl
into
ljmp
jnp
out
lods
mov
dec
test
dec
stc
addr16
push
add
arpl
sbb
xchg
cwtl
mov
fsubs
lret
xchg
mov
and
gs
loop
arpl
mov
or
xchg
bound
dec
xchg
es
pop
out
cmp
gs
inc
cs
enter
sub
and
push
gs
lods
xchg
pop
and
add
adc
xor
notl
add
adc
xor
adc
enter
out
adc
int
adc
shl
adc
add
test
pusha
inc
call
mov
pushf
pusha
lea
jmp
call
sar
cs
dec
aad
jge
xor
jae
sti
pop
cmpsl
das
push
repz
ja
aas
mov
adcb
and
cmpsl
into
test
fbstp
pop
in
sbb
cwtl
dec
divb
mov
aaa
mov
lret
jne
xchg
jb
dec
movsl
fcoms
lcall
mov
ja
mov
and
sahf
in
movsl
mov
data16
cmp
mov
xchg
pop
aaa
daa
or
xor
xor
jmp
call
jbe
iret
jg
iret
add
pop
push
mov
loop
pop
jp
inc
xchg
sbb
jmp
pop
sti
std
es
xchg
mov
sbb
sub
adc
stc
in
call
outsb
xor
pop
mov
adc
sbb
daa
ljmp
cli
es
daa
pop
jmp
sub
xor
mov
push
orl
mov
xchg
xchg
mov
and
andb
and
push
movl
pusha
lea
jbe
push
push
lea
jmp
lea
ja
push
cmc
inc
bt
sub
sub
btc
add
add
mov
lea
movzbw
mov
sar
not
call
push
adc
pusha
lea
jae
call
loope
mov
cli
iret
aad
scas
ja
mov
aaa
iret
lahf
ret
pop
daa
mov
pop
mov
push
mov
jle
lret
int
fwait
das
ja
push
inc
push
lret
loope
push
xchg
sbb
dec
mov
lods
fcomip
int
stc
adc
iret
out
inc
jmp
subb
mov
data16
sbb
lret
mov
dec
inc
rolb
shlb
fimull
mov
daa
inc
adc
adc
addr16
push
out
shlb
lea
pop
not
pushf
bswap
mov
not
pushf
lea
pusha
mov
lea
mov
pushf
call
cmp
inc
or
dec
jae
inc
aad
std
das
push
mov
movsb
fcoml
pop
imul
popf
ret
ss
repnz
ss
and
hlt
mov
bswap
pusha
movsbw
call
lea
jbe
sar
bswap
mov
rcl
add
xadd
shrd
mov
shl
shl
or
add
mov
xor
test
movl
rcl
movsbw
mov
bt
push
clc
cmp
mov
pusha
mov
lea
jbe
sub
xor
bts
adc
sub
sar
bsr
mov
lea
movsbl
movzbw
mov
shl
rcr
add
shr
push
shld
shl
shr
bt
shrd
bsr
mov
mov
add
not
bswap
lea
jno
mov
pusha
call
lea
je
clc
add
push
bt
test
mov
cmp
push
lea
jb
stc
cmp
pushf
pushl
lea
jae
movsbw
mov
shrd
xadd
btr
or
mov
push
mov
pusha
pusha
pushf
sub
test
stc
bt
clc
repnz
jmp
rolb
leave
loope
int3
sbb
rcll
jne
gs
push
dec
xchg
pop
je
testb
int
and
or
int3
shrb
cmp
push
jb
dec
adc
push
jmp
loope
incl
inc
push
sub
outsl
and
inc
sub
imul
sbb
rorb
pop
push
nop
fsubr
repnz
or
rcrl
mov
andl
movsl
cltd
ret
sti
pop
mov
das
mov
jmp
and
pop
cmp
lahf
add
mov
scas
leave
cmp
jecxz
mov
fadds
push
das
push
cmp
xchg
sbb
add
mov
dec
rol
dec
and
popa
xchg
xor
fildl
aaa
scas
daa
or
adc
xor
les
loop
in
push
lock
pop
adc
push
add
push
mov
loope
lret
loope
test
jb
cmp
fdivrl
jo
push
lock
fmuls
xor
mov
idiv
lea
ja
setne
inc
not
jmp
push
lods
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
add
push
ss
fs
call
push
pushf
movb
push
lea
jae
pushf
cmc
cmc
jmp
movl
pushf
jmp
call
pushf
lea
jne
push
call
mov
movsbw
push
lea
cmp
mov
mov
setg
sub
mov
mov
adc
mov
push
clc
clc
stc
or
pusha
movb
pusha
push
lea
je
clc
or
call
cmc
push
add
bt
clc
call
call
out
jae
popf
jns
jo
leave
xorl
rcll
push
repz
fcoms
dec
repnz
push
add
cmovg
js
cmp
pop
popa
mov
das
mov
rcrb
mov
shlb
cltd
adc
cmp
imul
inc
mov
sti
and
movsb
jns
out
arpl
loope
insl
mov
inc
push
jbe
push
pop
jns
sbb
dec
imul
lods
fdivrp
stos
mov
popa
mov
pop
lcall
push
jbe
add
xchg
dec
lods
rclb
decb
mov
andl
pop
mov
mov
sbb
sbb
shlb
xor
xor
push
and
movsl
add
dec
pop
pop
xor
xor
xchg
mov
and
xor
shlb
cltd
daa
fisttpl
or
sbb
dec
add
xchg
ja
push
dec
dec
aam
pop
sub
movsl
bound
popa
fs
add
js
push
inc
mov
pusha
mov
mov
pop
pushl
nop
mov
sub
fisttpll
cmp
orb
mov
mov
xor
ror
push
jae
xchg
test
mov
aam
add
icebp
lahf
leave
jnp
out
fdivl
mov
adc
adc
mov
inc
cs
mov
xchg
in
jns
rorb
inc
inc
and
fildl
add
cmp
test
add
pusha
push
lea
jmp
lods
jmp
push
out
add
out
dec
invd
pop
inc
mov
shlb
or
and
xor
iret
jg
in
out
clc
push
pop
mov
and
mov
mov
pushf
push
rclb
arpl
movl
jae
scas
dec
pop
push
call
stos
mov
xor
lahf
pop
push
push
jl
cmp
inc
dec
push
lods
xorb
mov
pushf
mov
sbb
sahf
xor
gs
mov
ss
mov
fidivl
lcall
rcr
je
lret
mov
enter
ja
pop
pop
pop
adc
or
inc
cmc
xor
inc
mov
fsubrs
pminub
imul
lahf
mov
cmc
jl
cmp
adc
pusha
out
pushf
sahf
mov
fwait
loopne
inc
and
aad
fsubrl
inc
ds
cmpsl
add
call
mov
call
test
popa
shl
pop
xlat
sub
xchg
pop
mov
daa
cmpsl
pop
fbld
daa
out
mov
cwtl
sbb
push
or
sbb
jbe
sarl
mov
lods
loop
sbb
fsubrs
and
int3
mov
je
pop
cmp
insl
sub
mov
jl
dec
and
cwtl
divb
jne
jecxz
cltd
xor
subb
into
sbb
xchg
cmp
lret
push
enter
add
into
cmova
ja
sbb
test
adc
jmp
jmp
add
dec
cmp
pop
mul
popf
int3
movl
dec
lahf
mov
ficoms
sbb
xchg
lret
dec
or
dec
ja
lahf
sub
xchg
in
in
ret
sbb
cld
cli
pop
ljmp
push
xor
scas
mov
xor
xorl
jo
push
push
std
arpl
repz
and
jg
lea
idivb
test
es
aaa
lret
dec
push
mov
adc
or
gs
pop
imul
push
adc
lods
sub
mov
das
xchg
cmc
fisttpll
xlat
lds
push
inc
xor
jle
rcr
adc
pop
inc
movsl
pop
xchg
fwait
dec
xchg
cmp
cmp
or
jb
inc
dec
and
enter
xor
push
mov
xchg
push
jno
jg
dec
xor
fwait
gs
ret
dec
adc
pop
int
into
sbb
outsl
mov
xchg
or
dec
sahf
or
arpl
dec
call
jl
arpl
fs
ficoms
xchg
mov
add
push
out
ret
mulb
push
mov
lret
jne
rcrl
or
das
stos
jnp
and
cmpsl
xchg
hlt
add
jp
mov
and
addr16
mov
movb
or
fwait
lret
adc
aam
pop
xchg
or
jno
frstor
or
xor
pop
aad
decb
xchg
sbb
js
lahf
mov
add
or
movsb
mov
lods
jmp
add
add
jbe
dec
ret
pop
add
mov
inc
dec
jne
add
rol
cmp
test
aad
ss
inc
negl
xlat
jmp
mov
or
insl
jno
xor
jle
push
or
xchg
inc
sti
cmp
dec
dec
movsb
add
mov
mov
jmp
mov
and
cmpsl
xchg
mov
loop
cwtl
cmp
cmp
push
sub
cli
adc
and
dec
sahf
aaa
sub
je
in
cmova
xchg
scas
xchg
out
mov
or
inc
dec
pop
dec
repnz
rorb
dec
xchg
test
mov
mov
push
sbb
dec
sub
testb
xchg
insl
adc
and
pop
imul
les
fcmovu
inc
aaa
fisubrl
mov
gs
and
jg
enter
sbb
push
pop
nop
xor
adc
dec
iret
sub
xchg
es
aas
ret
sbb
and
xorl
or
aam
mov
jb
aaa
clc
sbb
push
aas
cmpl
into
xchg
fstpl
sub
mov
lahf
scas
and
inc
pop
hlt
mov
adc
bound
xchg
mov
js
adc
popf
scas
and
lods
and
mov
mov
stos
in
mov
xchg
sub
mov
or
scas
call
cmp
adc
add
rcrb
xchg
lahf
arpl
adc
push
mov
ficoml
lcall
or
dec
mov
mov
clc
enter
sbbb
int
mov
addr16
cmc
cld
dec
add
add
lret
push
cmpl
add
sbb
add
or
xor
add
mov
xchg
mov
stos
cs
loope
ds
xor
daa
xchg
jg
cwtl
xor
js
or
call
out
push
js
or
add
cltd
aas
mov
jl
sbb
xchg
xor
push
mov
nopl
fstps
xchg
mov
xor
aam
mov
jge
stc
test
adc
jo
mov
lcall
and
lods
push
icebp
sub
fwait
inc
test
out
pop
ss
xchg
repnz
cmp
mov
bound
dec
dec
out
push
out
pusha
adc
and
xlat
xor
lahf
shrb
add
cwtl
dec
inc
lea
adc
mov
xor
adc
inc
pop
aas
pop
sbb
shlb
mov
int3
incb
xchg
jae
xchg
jmp
popf
jae
ja
aam
inc
xor
ja
sub
pop
int
insl
sub
pop
xor
or
xchg
daa
inc
mov
or
adc
shll
mov
xlat
stos
mov
add
adc
inc
cmp
mov
xchg
mov
bound
xor
dec
and
icebp
testb
cmp
gs
or
inc
fistpl
popf
lock
xchg
aad
xor
into
ja
xchg
and
jb
add
xor
inc
xor
in
fnsave
addr16
mov
sbb
mov
fcomps
pop
movb
and
packsswb
cltd
outsl
sub
lret
xchg
loopne
sbb
adc
or
andnps
and
add
icebp
ja
push
jmp
enter
push
insb
xchg
mov
xor
jmp
cmpsl
in
jl
aam
adc
cmp
adc
dec
mov
mov
sbb
insl
or
mov
pop
pop
xlat
test
repnz
inc
out
gs
sbb
push
cmp
std
gs
or
mov
cmovnp
mov
outsl
shr
add
mov
or
cmp
xchg
sbb
das
mov
or
cmpsl
pop
or
cs
dec
sbb
xlat
gs
adc
xor
push
mov
push
dec
popa
mov
or
add
enter
dec
lcall
pop
shlb
sub
and
test
pop
sbb
fisttps
shlb
xchg
push
inc
jmp
push
dec
das
mov
push
cmpsb
test
xor
xchg
enter
ljmp
loop
xchg
inc
enter
mov
push
or
xor
ljmp
call
mov
orl
xchg
push
push
imul
inc
dec
xchg
inc
xchg
sbb
add
and
out
or
cwtl
push
add
mov
cmp
pop
insb
push
pushf
push
outsb
jnp
jno
addr16
dec
pop
adc
enter
pop
popa
or
shll
mov
sbb
cmp
add
and
adc
das
jae
pop
mov
loop
mov
or
xchg
push
sbb
nop
scas
jge
or
orl
push
rcll
xor
ja
decb
xlat
daa
es
pop
pop
sahf
xor
pop
cwtl
xchg
sbb
push
out
adc
or
inc
add
sahf
inc
push
dec
xor
dec
hlt
es
loope
das
repnz
add
scas
and
and
mov
dec
jl
sub
fidivrl
addb
test
mov
aaa
ja
cld
int3
daa
es
sbb
pop
fs
imul
lcall
test
inc
dec
movsb
push
adc
xchg
cmp
mov
cmpsl
or
sbb
and
add
subl
pop
mov
mov
sbb
ljmp
movsb
mov
adc
lret
repnz
rolb
or
ja
cmc
sub
adc
gs
inc
pop
outsl
mov
dec
lret
sub
fadds
xor
jne
and
das
xchg
cwtl
add
das
jo
in
mov
test
cmp
das
push
add
out
add
mov
lret
xchg
ljmp
lcall
or
xchg
add
push
fsubs
push
popf
cmpsl
dec
cmp
loope
adc
btr
daa
and
daa
cmp
pop
lahf
inc
mov
dec
adc
popa
inc
push
loopne
sbb
aas
add
xorb
sbb
test
push
mov
je
adc
mov
jecxz
js
xchg
in
pop
sbb
xor
jl
enter
ficoms
inc
push
xchg
cli
imulb
int3
pop
ja
addr16
into
and
fwait
xchg
sub
pop
mov
adc
inc
mov
cmpsl
in
pop
call
push
into
es
cltd
das
insb
hlt
xchg
loope
rclb
in
in
jns
cmp
hlt
push
mov
cmp
pop
mov
and
mov
enter
pop
sbb
cld
in
jecxz,pt
and
inc
je
std
mov
pop
inc
inc
es
or
pop
xlat
and
push
inc
cwtl
xchg
fld
cmp
imul
aas
xchg
fdiv
xlat
ljmp
cmp
pop
test
xchg
push
push
mov
xchg
push
es
lods
out
les
mov
sbb
mov
stos
aas
shlb
mov
out
mov
cs
sbb
ret
sub
xchg
xchg
add
pop
fmul
hlt
pop
xor
std
add
unpcklps
shll
inc
cmp
dec
and
ja
loop
cld
pop
mov
push
mov
dec
pusha
cmp
or
sbb
ljmp
xlat
jbe,pn
test
adc
xor
es
mov
adc
out
pop
aam
xchg
mov
xchg
mov
push
pop
xchg
xchg
push
test
enter
adc
add
jb
inc
xchg
sti
enter
jae
xlat
or
das
push
pop
movsb
clc
inc
push
mov
call
loop
outsb
add
lods
pop
nop
cmp
loop
add
clc
fisttps
mov
cmpb
push
pop
fbstp
cld
setbe
or
mov
clc
data16
cwtl
cld
sub
sti
es
int3
xchg
lahf
xlat
gs
dec
cmpsl
inc
mov
push
inc
xchg
push
sbb
mov
inc
inc
mov
xchg
jbe
and
sbbb
and
push
push
mov
add
enter
or
pushl
mov
imul
add
enter
fisubrs
idivb
or
les
shlb
pop
dec
shlb
in
mov
fldcw
mov
cwtl
arpl
repz
cli
cwtl
incb
loope
cmpsl
mov
cmpsb
inc
lcall
mov
in
call
andl
das
mov
cmp
or
push
push
push
and
cmp
dec
or
icebp
scas
sbb
inc
ret
sub
push
notl
or
adc
jae
adc
clc
cmpsl
push
sub
push
push
push
lods
jbe
nop
xchg
call
xor
mov
aad
or
sub
sub
dec
scas
inc
mov
cwtl
das
movsl
jnp
dec
cmp
xlat
push
repz
lcall
xor
mov
test
jbe
lahf
sbb
adc
cmpsl
pop
or
sub
add
in
cmp
je
in
dec
and
jge
inc
and
inc
mov
fs
mov
push
movsb
les
int
cmp
cmp
enter
xor
les
dec
adc
aaa
cmpsl
dec
jnp
addr16
jo
push
fsub
inc
and
aas
test
push
mov
or
jae
xchg
inc
jg
xchg
mov
push
sahf
jno
adc
lahf
inc
das
js
mov
inc
cmp
adc
daa
dec
push
sub
xor
add
idivb
stos
das
push
sbb
jg
enter
xchg
jbe
ja
mov
add
mov
ljmp
inc
imul
sub
mov
push
orb
mov
pop
je
cmpsl
ds
or
scas
es
ljmp
sahf
and
pop
mov
dec
sub
xchg
push
jg
mov
or
fstpl
sti
mov
xlat
repz
nop
out
inc
ret
adc
sbb
outsl
add
jns
jnp
push
fadds
rorl
lahf
stos
incb
test
xor
leave
movsl
pushf
dec
loopne
stos
xchg
movswl
pop
fiaddl
lret
jl
lods
sbb
test
dec
fistpl
lret
xor
movsl
push
jge
cmpsl
or
bound
sub
rcrb
fisttps
xchg
sbb
enter
clc
dec
aas
nop
fwait
dec
or
dec
and
sti
test
sbb
shrb
rcll
and
rorb
mov
inc
jmp
add
test
mov
iret
add
popa
jge
xchg
aas
mov
faddl
xchg
xor
push
mov
inc
push
mov
dec
xor
or
and
add
enter
mov
mov
pop
outsl
outsb
cmp
ret
cmpsb
leave
inc
lahf
xchg
push
es
insb
fwait
xchg
mov
and
in
test
test
mov
jnp
cmpsb
call
lods
mov
sub
fwait
cltd
pop
fadds
mov
push
adc
jecxz
movsl
clc
adc
jmp
loope
mov
shlb
lods
mov
in
or
xchg
popl
and
mov
adc
scas
ja
pop
test
cmpsl
mov
mov
sub
pop
into
aaa
test
add
xchg
inc
inc
mov
nop
cmp
push
mov
arpl
xchg
negb
mov
sbb
mov
adc
mov
mov
sbb
mov
or
pop
mov
dec
inc
repnz
dec
cmp
and
pop
pop
add
or
aaa
loop
sbb
and
arpl
push
out
mov
dec
roll
sbb
leave
and
out
inc
pop
sub
mov
cmp
cwtl
out
popf
cld
iret
mov
and
adc
js
push
mov
add
add
jne
arpl
sbbb
adc
add
xchg
lret
push
decb
sti
fcomip
clc
call
xchg
fwait
push
sub
cli
jl
ss
loopne
mov
xchg
pmaxsw
rorl
cltd
dec
add
into
fcomps
ret
mov
mov
loope
push
cmc
fnstsw
xchg
call
std
movsb
pop
xchg
adc
add
fcoms
cwtl
cmp
jbe
adc
xor
testb
sbb
mov
mov
popf
enter
push
xchg
and
add
adc
push
cmpsb
xchg
xchg
mov
ret
mov
ljmp
pop
cmpsb
adc
data16
xchg
xchg
mov
or
test
les
stc
xchg
shld
push
fists
inc
icebp
jnp
test
fcomps
push
inc
scas
cli
sahf
addl
lods
mov
dec
push
and
arpl
xor
bound
mov
cmp
add
sub
sbb
sti
mov
inc
mov
loop
dec
xchg
xchg
dec
xchg
add
sub
mov
dec
fnstcw
rcr
lock
addb
test
aas
push
ja
scas
adc
insl
mov
mov
and
movsb
or
jnp
mov
xchg
or
xchg
imul
cmp
push
shrb
loopne
jo
movl
movsb
enter
out
cmp
xchg
ja
arpl
shll
punpckhdq
mov
adc
xchg
xchg
inc
out
add
out
push
cmp
and
mov
mov
jo
add
sbb
dec
shll
xchg
jbe
pop
addl
adc
pop
mov
dec
movsl
dec
mov
add
dec
sub
repnz
cli
repz
ss
adc
out
xchg
or
pop
sub
out
dec
jne
lea
sub
and
xor
mov
fisubrs
imul
and
xor
inc
arpl
jle
mov
fnsave
sbb
stos
jp
sub
std
fidivrl
popa
and
test
jmp
fs
pop
push
dec
daa
cs
xchg
or
lea
cmp
clc
xchg
mov
jge
test
pop
push
cmp
movsb
xchg
repnz
pop
movsl
lock
in
scas
pmaxub
pop
notl
ret
dec
dec
and
cmp
std
cltd
ucomiss
push
pop
xchg
fisubs
out
enter
pop
mov
adc
mov
loopne
xchg
xlat
cmp
dec
mov
daa
icebp
aas
cwtl
mov
dec
pop
aam
test
mov
lcall
scas
xlat
xchg
ss
popf
sti
pop
adc
jmp
and
mov
sbb
inc
and
jo
arpl
lret
mov
inc
fsubrp
cmp
psubusw
or
push
out
and
cmp
faddl
pushf
cltd
add
ja
out
sahf
adc
mov
pop
cltd
inc
jns
sbb
lea
sub
inc
sub
cmpsl
sub
aas
lds
pop
rcrb
ja
nop
outsl
es
mov
jbe
pop
scas
daa
mov
jl
inc
cwtl
lret
xchg
outsb
pop
pusha
aad
dec
setno
and
adc
adc
loopne
adc
data16
movsb
mov
dec
clc
sub
mov
movsl
filds
push
mov
xchg
pop
mov
lcall
add
add
sbb
mov
xor
imul
dec
outsl
aas
rorb
jbe
jg
stos
inc
mov
mov
loope
xchg
and
inc
or
jbe
adc
mov
add
lods
adc
scas
mov
add
enter
outsb
daa
test
jno
or
imul
fdivr
fsubp
pop
ds
test
xor
lret
dec
pop
xchg
das
sub
loopne
sahf
sub
sub
fisttps
adc
movsl
fidivrs
mov
xor
js
scas
jne
outsl
adc
getsec
bound
mov
cmp
test
mov
and
shlb
into
push
push
stos
mov
pushw
pushf
ljmp
xchg
sbb
ret
sub
cltd
pop
test
rolb
lret
inc
sbb
aaa
les
mov
jo
in
dec
xchg
mov
shl
rorl
js
mov
repz
pop
pop
loop
clc
xor
out
gs
and
add
out
jb
xchg
filds
sbb
mov
and
xor
outsb
xlat
test
cwtl
add
pop
mov
pop
pop
pop
xlat
mov
mov
adc
cmpsb
inc
pushf
xchg
addr16
je
inc
jg
cs
cs
fs
xlat
xor
or
fwait
xchg
out
mov
xchg
jl
push
xlat
stos
ja
inc
xorl
aam
lahf
push
lods
mov
adc
iret
jp
mov
mov
mov
mov
dec
arpl
xchg
sbb
imul
xchg
cmc
js
enter
lods
jno
test
mov
std
cmp
mov
xchg
jns
imulb
adc
pop
nop
jno
adc
jecxz
jae
or
cmpxchg8b
enter
movsl
xchg
in
dec
adcb
push
pop
or
add
push
xor
ja
outsb
jl
inc
adc
lahf
mov
push
loop
cld
add
lahf
enter
xor
pop
jl
push
cmp
outsb
addb
add
ds
or
cs
les
mov
jae
dec
ret
rorl
xchg
add
and
sbb
popf
cmpb
aas
enter
push
sti
sub
aad
out
mov
xchg
adc
das
andl
arpl
popa
cltd
insb
sti
jne
stos
es
movswl
pop
jle
enter
js
test
cmp
dec
outsl
mov
js
test
sub
pop
mov
xlat
adc
enter
xchg
xchg
add
mov
je
xor
pop
adc
scas
lahf
mov
mov
sub
cmpsb
adc
jb
scas
sub
mov
xor
sarb
and
cs
lret
mov
fmuls
mov
movsl
adc
jb
or
jne
adc
subl
add
in
adc
xchg
mov
cmpsb
ja
sub
jb
in
xor
mov
roll
rcrb
pop
je
imul
out
call
push
add
outsl
mov
xchg
idiv
sub
test
inc
jb
daa
push
xchg
and
pop
je
or
pop
cwtl
cld
jecxz
in
jg
mov
xor
adc
addr16
sub
sbb
inc
cmp
or
pop
lret
testb
mov
mov
push
test
fcomp
insb
popa
sbb
pop
nop
fstpl
mov
cmp
inc
mov
adc
js
std
inc
dec
into
add
sbbb
jne
xchg
clc
push
icebp
pop
xor
mulb
movsb
enter
insl
xor
rclb
outsl
add
mov
pop
push
lret
pop
add
pop
jle
add
fs
push
sbb
xchg
sbb
jbe
pusha
loop
sub
repz
mov
add
enter
mov
sub
adc
add
enter
xchg
push
mov
lea
inc
ret
scas
out
and
mov
fistl
pmullw
sub
mov
cmp
push
mov
sub
bswap
lods
or
es
dec
pop
movsl
xchg
icebp
lods
clc
xchg
repnz
sbb
es
cmp
sub
repnz
dec
jg
repz
push
loopne
test
mov
andl
dec
int3
and
lahf
push
xor
mov
xor
insl
xchg
dec
or
inc
cltd
fmulp
mov
add
faddl
mov
cs
mov
dec
sbb
or
mov
xchg
out
stc
xchg
mov
mov
jnp
insl
mov
xlat
cmp
sbb
in
mov
xchg
sti
jecxz
xorb
cld
add
xor
outsl
inc
and
xlat
out
call
sub
dec
jle
pusha
xchg
iret
cmp
enter
add
lods
cmp
fisubl
sbb
stc
in
add
or
aam
repz
jne
inc
push
sbb
cmpsl
cwtl
jbe
enter
popa
cmpsl
mov
xor
mov
adc
xor
popf
shlb
mov
mov
sbb
decl
aam
push
lods
mov
lods
push
decb
data16
orl
mov
xchg
xchg
dec
inc
rcrb
loope
xor
out
dec
xchg
rcl
pop
ds
imulb
outsl
add
out
sti
flds
xchg
bt
and
mov
inc
lret
imul
les
out
cli
mov
or
pop
adc
xchg
ja
push
sahf
mov
dec
cltd
rcll
imul
nop
xor
jns
jecxz
fwait
call
adc
sbb
sbb
xchg
xchg
jnp
das
mov
mov
movsb
fldt
add
sti
pop
fidivrl
dec
mov
xlat
adc
sbbl
cmp
mov
xchg
cmp
fsubr
add
enter
loopne
pushf
bound
cs
push
xchg
aad
pop
enter
xchg
dec
test
call
xorb
xchg
inc
clc
cmpsl
arpl
cmpsl
lods
sbb
add
xchg
popf
lahf
sbb
mov
jbe
mov
mov
or
cld
loope
popa
addr16
push
icebp
xchg
fimuls
fmuls
jae
push
xchg
pop
or
xor
mov
xor
lcall
gs
adc
or
cmp
data16
bound
aam
movsb
dec
dec
mov
pop
push
lahf
loopne
mov
mov
add
enter
cld
cmp
mov
cwtl
and
xchg
mov
cwtl
popl
std
sbb
sarl
inc
in
jge
cmp
jne
popa
push
int3
ret
jo
xor
pop
add
sub
or
and
adc
pop
xor
pop
mov
aas
xlat
adc
jns
ljmp
sbb
cmpsb
pusha
outsl
aas
xor
lods
dec
insb
cmp
cwtl
imull
jmp
or
sbb
aam
lods
fnstsw
and
and
lret
notb
dec
cmp
adc
push
cmp
jbe
add
mov
scas
leave
cmc
incl
or
sahf
inc
push
bound
sub
mulps
xchg
data16
adc
push
jle
dec
pusha
xchg
aad
add
and
jmp
xlat
in
jmp
enter
cmpsl
movsb
gs
cmp
mov
add
jbe
aad
adc
push
popf
popf
push
daa
leave
test
lahf
sbb
fldcw
mov
ss
jae
jp
jg
pushf
push
fildl
ror
in
lret
pop
mov
xchg
pop
pop
ret
jno
or
pop
xchg
test
js
jle
mov
xchg
xlat
add
cmpsb
sti
lret
popa
mov
or
sbb
loopne
sbbl
adc
punpckhwd
scas
mov
and
sub
adc
fiadds
int3
int3
fwait
jbe
pop
lods
and
pop
or
xchg
test
insb
testb
cwtl
add
or
sub
lea
adc
mov
fsubrp
mov
pop
loopne
jg
dec
lea
xor
mov
inc
popl
mov
adc
les
pop
xlat
subl
orl
jge
mov
xchg
lods
or
mov
cmpsb
mov
or
xlat
add
enter
inc
pop
test
ljmp
sbb
lahf
adc
add
xchg
faddl
cmpsl
cwtl
scas
ja
shl
movl
xlat
sbb
push
dec
andl
nop
jo
adc
jbe
sub
push
or
shrl
je
repnz
cmpsl
movsl
mov
fisttpl
push
push
popl
xlat
mov
or
mov
adc
mov
add
push
loop,pt
xor
sti
out
loope
xchg
add
add
iret
bound
aas
pop
imul
push
lods
push
movsl
sahf
adc
cmp
add
and
mov
aam
mov
sub
mov
mov
push
or
movups
faddl
int
mov
pop
dec
pop
add
lock
jg
test
cmp
test
mov
sub
test
loopne
pop
jae
push
idivb
es
push
enter
ret
xchg
xorb
adc
enter
xchg
push
and
jno
mov
fisttpl
shll
lahf
adc
push
xchg
cmc
or
stc
push
adc
jo
dec
outsl
jne
icebp
sbb
and
scas
andps
cmpl
subl
dec
lods
and
add
pop
cmpsl
mov
fistl
pop
and
mov
sti
add
lock
mov
in
mov
enter
pop
fbstp
xchg
cmpsl
dec
xlat
sbb
add
add
subb
sub
stos
arpl
daa
pop
aas
das
test
add
in
jmp
jb
xor
in
pop
push
or
jnp
jg
push
call
dec
cwtl
pop
or
shr
cmp
push
dec
xor
jp
pop
mov
iret
mov
sti
bound
sub
adc
movsb
mov
add
fcomps
out
cwtl
cld
mov
dec
in
fadds
sub
dec
hlt
adc
push
or
or
inc
or
fsubl
pop
sub
nop
outsl
lcall
shr
dec
shr
stos
sarl
fwait
pop
dec
shld
fnstenv
xlat
js
sti
aad
mov
imull
push
daa
data16
pop
cmp
jmp
aam
adc
aaa
test
xchg
add
outsl
pop
and
inc
cli
push
mov
iret
outsl
xor
jne
aaa
push
pop
fwait
jb
sub
aas
or
sbb
movq
scas
mov
mov
xchg
adc
jae
xlat
js
insl
adcb
pop
daa
mov
sbb
lret
jge
mov
mov
rcrl
push
jae
ljmp
xchg
int3
cltd
dec
in
push
mov
push
adc
xchg
js
push
es
push
or
test
loope
popf
push
mov
ja
sub
jb
jne
lahf
movsl
xchg
mov
adc
pop
icebp
lds
outsl
fisttpl
out
inc
add
cmpb
xchg
xchg
vmwrite
cmpsb
lea
and
mov
push
mov
loop
cld
sub
repnz
pushf
or
in
fsts
xorb
xor
dec
call
aas
mov
or
xchg
aaa
mov
in
cmpsl
sub
sub
mov
dec
cltd
jo
int
clc
or
sub
pop
int3
popf
adc
das
iret
inc
sub
xor
pop
imul
sbb
inc
sub
pop
pop
and
lret
jg
ljmp
fs
sbb
test
aam
sub
dec
and
shrb
sti
adc
add
lock
into
cmpb
stc
ja
dec
mov
dec
sbb
cmp
push
in
add
in
sub
rclb
push
push
enter
xchg
jle
sub
into
insl
push
into
xor
arpl
pop
mov
fs
xor
insb
sbb
and
jbe
mov
iret
or
sahf
sub
lods
inc
hlt
cwtl
xchg
fldcw
sbb
inc
int
sub
ja
xchg
dec
std
jae
movl
lcall
fwait
lock
daa
sub
xlat
and
cmp
mov
shrb
daa
push
outsl
test
imul
bound
mov
pop
sahf
loop
clc
pop
rorl
and
pop
jg
das
jl
mov
pop
test
xchg
mov
xor
fwait
mov
mov
xchg
test
movb
push
xchg
stc
js
in
and
add
cmp
pop
add
test
mov
xchg
cmp
mov
ja
fnsave
test
push
inc
cmp
mov
ljmp
inc
mov
out
inc
ljmp
sub
cmpsl
test
or
popa
or
outsl
ret
add
test
pop
std
xchg
cld
mov
xchg
cli
syscall
cmp
test
scas
xchg
dec
mov
mov
xor
sub
lods
adc
pop
test
test
xor
mov
enter
loop
filds
add
fadds
dec
sub
xchg
ss
negl
add
lret
out
cmp
add
mov
clc
sbb
mov
cltd
cmp
pop
xorb
add
mov
xchg
xchg
movsb
add
add
add
cmpsb
add
enter
jbe
dec
popa
movsb
jns
sbb
cmp
pop
cld
xchg
adc
jmp
sbb
pop
in
cmp
xlat
mov
add
loop
pop
enter
dec
cs
test
add
push
inc
mov
sbb
add
pop
lock
jge
lret
xchg
inc
inc
inc
pop
adc
xor
call
dec
popf
test
dec
sub
outsl
call
xor
pop
push
lds
xor
ret
or
and
data16
dec
mov
jne
testb
xor
sub
jecxz
jbe
and
and
sahf
adc
cmpsl
scas
push
mov
je
xor
out
pop
and
add
les
jne
pop
fbstp
iret
xor
ret
push
pop
jp
mov
sub
push
push
adc
iret
sbb
push
cwtl
movsb
or
xchg
sbb
lods
dec
xchg
mov
xor
clc
cwtl
loopne
loop
into
insl
inc
ret
sub
cmp
dec
add
fiadds
or
addr16
jmp
jp
int3
mov
inc
dec
and
mov
repz
xorb
lock
fwait
out
add
repnz
fs
mov
adc
enter
adc
dec
add
adc
arpl
in
dec
int3
xor
ficoml
arpl
ret
add
sbb
push
xlat
out
fs
cmpsl
jg
mov
lock
mov
mov
adc
push
xchg
loope
cs
inc
stc
push
dec
pop
jp
push
addr16
cmp
mov
fwait
xchg
mov
cmp
mov
cld
push
inc
and
sub
mov
add
outsb
enter
cwtl
xor
add
adc
mov
ss
pop
scas
dec
mov
lahf
adc
pop
movsb
iret
rcrb
add
push
xor
pop
add
sub
std
xchg
in
adc
cmpsl
cmp
mov
jge
xlat
popf
addr16
das
mov
add
xchg
push
pop
imul
ret
cmp
inc
dec
movsl
repz
ud0
mov
xchg
call
xchg
sub
adc
fwait
add
xor
xlat
daa
imul
ret
sti
ljmp
mov
mov
cmc
mov
mov
inc
call
call
movsb
stos
test
push
cld
push
in
ds
iret
mov
fwait
xchg
or
ja
test
pop
and
test
gs
aad
xchg
adc
imul
lds
mov
mov
add
loope
dec
adc
inc
movsl
push
iret
jl
or
add
add
sbb
add
adc
jmp
add
movsl
dec
push
sahf
jne
dec
fnstsw
add
divl
enter
sub
cmp
dec
scas
ss
cmp
add
ss
js
mov
jbe
cmp
pop
mov
jmp
test
in
in
repnz
xchg
ret
or
xorb
and
lcall
xchg
in
subb
pop
es
cmpsb
ret
jge
or
movsl
jle
enterw
sub
xlat
xchg
movsb
test
pop
rorl
pop
mov
pop
inc
push
xchg
je
jmp
gs
mov
inc
fwait
enter
pop
in
cmp
movsl
nop
vmread
icebp
outsb
xchg
sarb
dec
or
sahf
fcomps
or
adc
iret
insb
xchg
xchg
xor
pop
loop
fcomip
mov
adc
xchg
push
and
pop
movsb
or
xlat
repnz
push
dec
xchg
dec
repz
push
enter
jb
dec
push
add
push
cwtl
push
mov
pop
scas
ss
cmpsb
in
shrl
pop
push
pop
jae
jnp
cli
pop
cmp
inc
dec
xor
push
aaa
aad
mov
cli
inc
adc
jmp
sbb
push
cmp
mov
in
gs
push
out
ljmp
test
fidivl
lcall
sbb
cmp
lret
sub
xor
mov
outsb
lahf
shrb
mov
push
mov
mov
lcallw
nop
pop
lea
mov
lahf
and
sbb
cmpsl
add
lods
and
dec
inc
ret
in
cwtl
cmp
iret
out
xchg
stos
les
and
push
mov
dec
testb
jle
movsb
add
pop
mov
hlt
out
pop
call
push
dec
ja
lods
out
xchg
dec
add
lret
fcoms
sbb
outsb
aaa
add
cmpsb
outsb
pop
xlat
test
lods
xchg
xchg
xchg
rcl
pop
and
xor
mov
mov
pusha
out
ss
xchg
ror
hlt
fs
sub
push
test
into
mov
mov
inc
add
adc
xchg
push
dec
int3
mov
mov
mov
incl
out
pop
in
test
sbb
xlat
add
mov
lahf
add
and
movsb
addr16
pop
in
adc
movsb
pop
push
daa
push
mov
fwait
mov
out
call
and
xchg
outsb
hlt
inc
sub
lods
leave
add
aam
stos
xchg
ds
sarl
ja
imulb
and
xor
addr16
addr16
in
add
sub
fst
jmp
adc
mov
xor
mov
and
sub
mov
sub
jns
inc
mov
inc
cmp
popf
lock
sti
lea
pusha
pusha
cmpb
inc
pop
add
cmpsl
in
adc
vpcmpgtb
fldt
sub
popa
out
dec
jmp
lods
test
dec
mov
inc
lods
cmpsl
pop
andl
adcl
sub
loope
dec
addr16
popf
movsl
push
bound
pop
arpl
mov
lahf
jne
xor
inc
push
cmp
add
outsb
dec
into
sbb
mov
fucomi
outsb
dec
jae
push
aas
xchg
xor
jecxz
jmp
out
push
cmpsb
cmpsb
add
add
mov
mov
mov
push
lret
arpl
es
outsl
adc
xor
fists
or
xchg
jmp
xor
push
jo
enter
dec
mov
outsb
aaa
sbb
mov
mov
mov
repz
push
adc
push
cmpsl
sbb
enter
fisttpll
nop
mov
aam
aaa
push
pop
pop
mov
cmp
hlt
enter
push
fwait
lods
jne
mov
ret
and
rcrl
ds
or
or
enter
jno
cmpsb
and
add
cmc
xchg
sub
inc
pop
jecxz
mov
or
mov
and
js
test
pusha
jge
repz
mov
dec
cld
mov
adc
int3
push
and
and
adc
mov
and
jle
push
test
pop
iret
inc
jns
mov
pop
ds
xchg
aad
je
mov
out
ds
or
or
mov
cmp
movsb
test
das
aas
scas
xor
in
filds
mov
xlat
adc
xlat
add
lahf
pop
pushf
pop
mov
xor
push
and
rclb
fsubp
rclb
aas
in
andb
mov
xchg
mov
and
rolb
and
push
dec
sbb
sub
aas
sbb
mov
inc
pusha
data16
in
mov
fldcw
pop
loop
pop
cwtl
push
addr16
int3
cmpsb
mov
popa
mov
arpl
sub
mov
mov
aaa
fsts
inc
in
dec
or
jnp
out
push
out
lods
movsl
fwait
lea
jo
adc
mov
dec
sub
add
cmp
and
cmpsb
pop
inc
dec
call
push
into
fsubrs
mov
sbb
movsb
out
enter
mov
push
stc
loopne
xchg
test
cmpsl
adc
xchg
stc
mov
add
mov
sahf
jb
cli
dec
pop
mov
jmp
xor
xor
and
shlb
inc
seta
dec
pop
jb
push
fs
cld
mov
adc
lret
or
xor
incb
aam
xlat
outsl
xor
enter
scas
call
push
dec
or
cwtl
daa
aam
movsb
xlat
jne
fcmovnu
sub
inc
adc
inc
jl
outsb
lock
push
inc
clc
pop
out
add
add
xchg
sbb
loope
mov
and
mov
movsl
xchg
mov
test
sbb
and
outsb
bound
divl
pop
enter
in
or
negl
ret
push
outsl
int
rcrl
jp
push
push
lock
adc
xor
pushf
subl
or
lcall
fbld
and
jo
lcall
lods
bnd
testl
sub
aad
test
out
pop
xchg
add
jmp
sub
xor
stc
scas
outsl
xorl
inc
stos
test
imul
pop
cld
int
imul
js
push
ret
int3
int3
adc
fucomip
adc
jecxz
repz
sti
mov
nop
daa
push
inc
xchg
sub
or
add
mov
inc
xchg
in
pop
psubd
aaa
mov
add
hlt
rolb
xor
xor
mov
pop
jae
daa
jp
je
or
mov
xlat
xchg
sub
or
movsb
enter
int
inc
decb
bound
daa
daa
jo
sbb
out
or
pop
gs
or
decb
pop
mov
dec
andnps
inc
pop
jne
fdivrs
ss
inc
push
cmp
aas
fdivs
shlb
or
daa
sub
js
xorl
pop
lahf
jp
cmp
and
aas
and
aaa
cmpsl
ret
pop
inc
fdivr
add
pop
movlps
aad
dec
leave
mov
daa
or
daa
push
iret
daa
cmp
icebp
mov
stos
daa
sbbb
push
popf
push
add
adc
movsb
xchg
daa
call
adc
cmp
inc
sub
cmp
sub
adc
xor
das
hlt
movsl
pop
mov
bound
mov
add
scas
std
arpl
rcrb
cmc
pop
jg
bound
mov
xlat
push
mov
movsl
xchg
cmp
negl
in
or
inc
inc
pop
arpl
and
int
int
daa
dec
aaa
pop
adc
inc
push
xlat
out
adc
lea
xsavec
inc
cwtl
pop
cmp
jo
addr16
stos
outsl
lea
aaa
xor
xor
cmc
inc
mov
addr16
outsl
pop
push
push
or
mov
push
cmp
in
outsl
adc
movups
push
loopne
iret
adc
xor
inc
mov
lcall
mov
add
sbb
mov
test
daa
jo
cmp
mov
mov
xchg
pop
sbb
xchg
cmovne
inc
mov
xor
push
test
enter
xchg
push
ffreep
jg
cmpsl
sti
dec
xor
inc
cmp
ja
inc
pop
jbe
and
push
test
xchg
dec
pop
daa
pushl
test
scas
int
and
pop
xor
movsl
out
sbb
add
call
xchg
rcr
in
rclb
hlt
into
lock
mov
and
push
xchg
add
dec
pop
je
nopl
fwait
dec
mov
loopne
push
adc
nop
add
push
mov
push
jo
iret
filds
mov
lds
pop
xchg
pop
jge
and
pusha
push
mov
cld
xchg
cmpsl
mov
les
jo
adcb
push
insl
leave
mov
and
fstpt
pop
xor
mov
cmp
idivb
int
roll
adc
cmpsl
test
or
lahf
mov
aas
jmp
xchg
pcmpeqd
dec
fisttps
xor
or
xor
or
inc
pop
jge
into
aad
out
adc
xchg
pop
pop
ds
cltd
cmpsl
mov
pop
mov
dec
repnz
enter
in
rcrb
xlat
jp
cmp
out
je
test
or
xchg
lea
add
push
sahf
into
fcom
and
cwtl
push
clc
xchg
inc
or
push
cltd
xor
rclb
ss
mov
ret
xchg
outsb
enter
xor
add
mov
cmp
in
fwait
jle
and
outsl
add
loop
dec
lret
mov
dec
mov
fistpll
jl
xchg
sub
push
add
push
push
pop
int
or
jge
mov
loop
loopne
xchg
js
dec
and
out
xorb
or
jo
sbb
adc
inc
outsb
enter
adc
dec
pop
jae
xchg
sti
cmpsl
cmp
xor
mov
xlat
faddl
pop
test
dec
mov
xchg
add
jo
addr16
lock
out
pop
shlb
test
xor
bound
cli
or
sub
mov
cmp
sub
mov
push
cld
xchg
mov
out
mov
mov
jo
outsl
push
adc
jb
scas
call
or
mov
cmp
adc
ret
mov
cwtl
mov
call
mov
popf
lock
xchg
mov
stos
mov
enter
int3
sub
and
push
mov
push
aas
pop
stc
hlt
lahf
and
testl
push
call
mov
aad
pop
stos
inc
lods
mov
cs
mov
mov
inc
push
jp
xchg
mov
pushf
mov
arpl
cmpsl
lods
adc
add
call
ljmp
aaa
mov
xchg
movsl
pop
or
mov
mov
mov
loope
bswap
xchg
test
mov
leave
nop
jne
mov
mov
call
pop
pop
int
in
or
mulb
xchg
xor
test
mov
or
xchg
pop
add
fmulp
fisttps
add
out
jne
daa
inc
mov
sbb
push
pop
pusha
push
js
dec
and
pushl
mov
popf
cmp
cs
and
lods
inc
int3
lods
add
fwait
or
sub
mov
cli
aaa
adc
xchg
adc
call
fs
popf
add
jno
push
test
xchg
gs
push
int3
fbld
imul
lret
cmpsb
or
mov
adc
xchg
shll
popa
js
push
or
xor
xchg
pop
scas
dec
fiadds
idivb
mov
xor
mov
jmp
add
nop
or
push
jne
pop
loope
jno
cmpsl
repnz
xlat
aas
mov
sbb
push
mov
dec
jbe
jmp
outsl
sbb
adc
cmp
cli
adc
sbb
testb
xor
movsl
popf
cld
stos
sub
inc
test
pop
add
rcrb
fbld
cltd
sti
sbb
enter
adc
lods
dec
cld
xor
or
enter
jl
sub
pop
push
xor
outsl
sbb
mov
sub
and
jne
pop
xor
push
mov
adc
mov
cmp
lock
xlat
xlat
icebp
and
pop
cs
push
push
and
inc
icebp
push
xchg
xlat
adc
div
nop
imul
jo
pop
xchg
filds
pop
test
int3
inc
mov
mov
add
add
mov
testl
cltd
stos
jbe
aaa
jns
pop
push
ds
or
push
daa
add
das
push
adc
div
fwait
ja
mov
in
jb
icebp
in
je
adc
test
cwtl
and
add
cs
xchg
out
xchg
leave
mov
sbb
mov
dec
repz
inc
mulb
xlat
sub
pop
mov
insb
mov
out
gs
fcomps
sbb
or
fidivs
add
add
enter
test
add
cld
adc
addr16
jg
lds
icebp
push
leave
orl
mov
and
jp
rorl
pop
add
mov
mov
mov
fs
dec
scas
or
adc
loop
sbb
push
jb
sbb
add
adc
mov
addr16
js
aaa
pop
lods
cwtl
test
dec
mov
inc
sub
rorl
xchg
jae
cmpb
fsub
pop
or
sub
or
cwtl
test
sub
pusha
inc
enter
add
push
adc
mov
ret
test
xchg
adc
mov
inc
pusha
inc
add
test
mov
mov
push
and
jle
mov
and
push
xor
test
push
lods
data16
pop
nop
pop
and
adc
mov
insb
sbb
cltd
adcb
ficoml
outsb
andb
adc
movsl
loopne
sub
stos
mov
pop
mov
pop
mov
pop
push
adc
xchg
mov
xchg
and
insl
mov
xchg
add
adc
js
cmpsl
and
call
or
int3
jne
loopne
test
and
xchg
cld
inc
dec
std
sbb
clc
mov
rclb
xchg
xlat
pop
out
dec
call
mov
lret
gs
dec
adc
mov
inc
stc
inc
pushf
icebp
test
push
into
dec
sbb
pusha
mov
arpl
rcrb
add
xor
pop
xlat
lods
mov
fisubl
aaa
jp
mov
int3
inc
dec
test
xchg
dec
out
and
cmc
out
iret
jb
fimuls
sub
dec
push
stos
daa
cmp
enter
and
jg
jmp
ret
push
mov
cmpsb
into
sub
jle
test
maskmovq
imull
add
out
outsl
cmp
cld
sahf
xlat
jne
and
mov
mov
lret
xor
mov
dec
sbb
jbe
pop
xorb
lret
gs
xchg
push
rclb
les
add
sub
aas
out
pop
das
mov
and
scas
mov
outsb
dec
mov
fwait
ljmp
notb
rolb
lods
mov
mov
inc
mov
xchg
lret
fwait
xchg
enter
dec
mov
popf
mov
or
add
clc
nop
xor
xchg
add
cld
xor
mov
add
adc
fdivrl
aaa
or
aas
out
xchg
cmp
xor
in
sub
cltd
cmpsb
xchg
lcall
cmpsb
je
ljmp
mov
or
int3
pop
lods
push
jb
push
add
adc
rcrb
ss
push
nop
or
into
sub
outsb
mov
ds
aaa
jle
dec
andnps
test
inc
cld
sub
or
xchg
cltd
in
pop
push
lock
je
adc
inc
fs
enter
add
gs
mov
cmp
or
in
out
jae
adc
cmp
pop
ljmp
test
or
shll
scas
inc
jg
adcl
unpckhps
nop
movsb
icebp
xchg
sbb
loop
cmp
imul
jo
sbb
stc
and
mov
mov
cmpsb
inc
dec
fs
popa
mov
inc
insb
mov
push
ret
bnd
and
mov
pop
xor
outsl
sub
stc
mov
aam
or
mov
sub
dec
sub
decb
aam
jle
jbe
jge
jne
push
and
dec
adcl
das
aaa
pop
pop
imul
cltd
mov
inc
xlat
pop
sub
in
mov
daa
mov
jmp
fwait
movl
inc
cs
push
out
dec
test
lods
jo
dec
fisttpll
sti
or
movl
js
call
and
add
mov
mov
daa
xchg
lahf
shll
pop
dec
loop
add
pop
and
fdivrs
sbb
daa
int
and
pop
jne
rorl
repz
inc
cltd
cld
mov
gs
mov
mov
aas
test
mov
push
in
pop
enter
cmp
in
rol
mov
jmp
enter
sahf
xlat
xchg
fwait
bound
es
cmp
push
out
mov
and
mov
in
pop
aam
mov
dec
mov
je
enter
dec
push
and
enter
xchg
cli
sahf
andb
insb
inc
fldenv
mov
jge
int3
mov
sub
jae
gs
test
sbb
inc
negb
push
push
xchg
movsb
push
sub
push
cmp
push
test
aas
or
jb
lock
out
mov
mov
loopne
push
add
imul
pop
xchg
inc
int3
scas
jl
iret
mov
cmp
push
les
mov
mov
in
jnp
out
add
mov
dec
push
gs
loopne
push
mov
movsb
pop
add
test
cmpsl
mov
outsb
clc
cmp
sub
mov
ljmp
repz
pop
add
aaa
mov
and
cmp
sub
negb
cwtl
into
or
mov
movntq
out
call
xchg
mov
inc
hlt
pop
mov
adc
inc
add
imul
xor
jns
dec
std
inc
das
cmp
adc
les
sbb
testb
xor
mov
push
mov
add
imul
push
sbbl
dec
mov
pop
cli
aaa
mov
repnz
notb
adc
or
mov
xchg
xchg
adc
lcall
js
rep
cmp
and
inc
movsb
and
pushf
pop
addr16
das
add
mov
pop
add
xor
lods
aad
movsb
cmp
out
mov
or
pop
test
cmpsl
int3
out
and
dec
fidivs
inc
fistl
mov
pop
dec
adc
lret
add
es
cmp
pmuludq
in
mov
mov
mov
into
dec
sub
xchg
cs
push
out
adc
out
fmuls
test
push
data16
sub
lcall
mov
adc
mov
pop
add
lods
jno
outsl
imul
sub
jne
insb
adc
inc
cmc
fistpl
xchg
cld
push
sub
icebp
add
mov
scas
lods
xchg
js
and
push
pop
rcrb
dec
mov
mov
pop
sbb
inc
dec
mov
outsl
stos
dec
xchg
shr
call
dec
jns
push
repz
cmp
mov
rcr
es
xor
push
add
ret
cmp
arpl
out
pop
loope
xchg
les
dec
or
enter
std
inc
icebp
xchg
in
sbb
mov
lods
xchg
jae
dec
xor
and
pop
inc
xor
cmpsb
enter
aam
mov
test
cmp
pop
in
movsb
push
pop
push
subl
push
scas
pop
fisttps
fdivs
cmp
in
mov
adc
mov
mov
mov
imul
insb
cmp
call
in
fmul
mov
movsl
push
jmp
adc
push
and
or
adc
cmpsb
nop
lods
or
xchg
fisubrs
aaa
rcll
mov
xchg
adc
dec
dec
test
outsl
push
ljmp
inc
adc
test
in
adc
aas
enter
cwtl
arpl
jb
xor
dec
or
push
rorb
stos
pusha
sbb
mov
xchg
cmpsl
mov
mov
push
out
sbb
lret
or
movsb
xchg
cwtl
movsb
mov
or
sub
test
mov
clc
pop
gs
clc
mov
xor
out
mov
xchg
cmpsb
js
cmpl
push
mov
ss
inc
push
fcoml
and
jl
arpl
adc
inc
sahf
fwait
aad
add
mov
mov
paddb
or
push
jo
enter
xor
ret
xchg
xchg
aaa
enter
pop
rcr
clc
xchg
push
les
push
xchg
shlb
jle
repz
cmp
mov
and
adc
mov
sbb
aaa
test
sub
dec
push
shrb
dec
shlb
inc
fsubs
add
loopne
inc
test
rcrb
call
mov
cwtl
out
mov
test
ds
ja
hlt
xlat
cmp
jp
lahf
and
andl
shll
jp
fs
mov
pop
inc
add
add
imul
cmp
xor
dec
adcl
xor
ret
cwtl
sarl
rcr
pop
dec
pop
cmpsb
sbb
push
pop
mov
into
sbb
movsb
and
enter
lea
push
mov
pusha
jg
jnp
roll
push
mov
and
cld
adc
cmp
xchg
lahf
pushf
pop
push
add
inc
adc
dec
mov
inc
out
les
lods
enter
cmpb
inc
pop
into
jbe
leave
test
arpl
lcall
xor
and
adc
sub
notl
loopne
pop
loop
pop
fcomp
pop
in
adc
sar
adc
push
movsb
out
mov
or
pop
out
push
lock
dec
pop
inc
push
mov
idivb
mov
jbe
inc
xchg
cmp
pop
push
jp
jl
mov
in
cmp
dec
jg
jp
inc
repnz
and
in
xor
imul
inc
cmc
sub
test
fsubl
loop
adc
loope
mov
push
inc
in
fldcw
nop
data16
std
je
pop
popa
les
in
scas
data16
push
push
ja
arpl
sysexit
cmp
enter
sub
dec
cli
outsl
push
add
ret
daa
sarl
fistpl
addr16
leave
ret
into
test
popa
cmpsl
ret
js
push
into
test
enter
cmpsb
xchg
negb
mov
jno
lret
fsub
mov
and
pop
rcll
cmp
lret
adc
jmp
mov
bound
cmp
xlat
and
stos
jne
je
movsl
setg
rol
sbb
sub
pop
inc
sub
adc
or
fadds
mov
sub
aad
repz
mov
ds
pop
lods
inc
jl
mov
dec
sbb
xchg
jmp
jae
and
xlat
mov
sbb
mov
jl
pop
lret
das
test
lods
push
pop
daa
movsb
mov
xchg
dec
push
cmc
clc
pop
dec
insb
jae,pt
push
in
xchg
or
cmp
adc
add
pop
in
popf
scas
movsb
jne
test
xorb
les
out
push
adc
jmp
cmp
mov
mov
gs
dec
or
sbb
sub
lret
jl
cmp
cmc
stos
or
push
mov
xchg
mov
fcoml
sub
mov
cmp
std
sub
cwtl
push
scas
xor
xor
arpl
pop
sbb
add
mov
xor
movsb
cmp
adc
mov
cwtl
test
pop
stos
pop
dec
test
aaa
jne
cmp
outsb
adc
xor
mov
jbe
jo
es
push
clc
adc
dec
xchg
xor
repz
out
jne
and
gs
repnz
push
and
xlat
fildl
fstpl
fistps
jb
or
mov
mov
mov
add
adc
dec
push
cmpsb
adc
jmp
lods
pop
add
jge
into
mov
pop
xlat
add
fwait
mov
xchg
sub
mov
addr16
in
mov
push
insb
repnz
add
pop
js
out
lea
push
rcrb
jmp
cmpsl
cltd
dec
setae
pop
inc
test
add
rorl
xchg
rcrb
mov
dec
repnz
mov
mov
xchg
call
imulb
pop
loop
cmpsb
fnstsw
push
mov
xchg
fs
inc
cmpb
testb
push
and
movsb
pop
cmpsb
pop
scas
fisubrs
hlt
mov
sub
adc
pop
adc
mov
nop
test
cmpsl
out
aas
mov
cmp
cmp
repz
xor
cltd
xchg
sbb
scas
pop
inc
xchg
aaa
test
xchg
lods
pop
adc
sub
adc
incb
sbb
adc
shll
and
imul
imul
fcomps
push
daa
or
scas
push
in
or
in
cltd
adc
aad
mov
lcall
in
dec
mov
cmpsl
push
jb
fwait
aas
scas
and
mov
test
xor
andb
enter
jne
test
bnd
in
mov
push
adc
mov
sub
mov
and
sbb
es
cmp
mov
sub
shrb
xchg
in
insb
mov
add
lds
jmp
stos
cld
mov
cmp
inc
mov
rcrb
add
push
pop
popl
inc
je
adc
xchg
data16
cli
cmp
out
pop
aaa
mov
pop
fs
jno
inc
dec
mov
xchg
lea
jnp
fistps
jle
mov
and
xchg
ret
enter
scas
cmpsl
dec
pop
and
std
icebp
dec
and
enter
addr16
jg
mov
movsb
push
add
test
mov
loop
inc
pop
pop
enter
sub
fs
movsb
call
sbb
iret
mov
adc
mov
movsl
jge
lds
scas
or
addb
cwtl
lods
mov
in
xchg
add
fstpl
int3
mov
xchg
test
adc
fcompl
pop
cmpsl
mov
xor
cs
shlb
adcb
std
incb
pop
mov
or
add
scas
enter
hlt
aas
leave
aam
test
add
sub
ss
jo
sbb
pushf
adc
movsb
scas
pushf
lods
fwait
mov
pop
jge
mov
adc
popl
cltd
notb
xchg
xor
mov
sub
loope
or
adc
add
dec
fdiv
js
out
fs
fwait
sahf
sbb
pop
pop
cs
mov
xor
mov
arpl
ficomps
int3
xchg
and
mov
jle
gs
jae
jae
out
mov
int3
pop
sub
mov
jns
sub
add
inc
pushf
pop
mov
les
rolb
das
sahf
movsb
dec
in
lock
mulb
fsubrs
mov
sbb
fwait
cmpsb
dec
dec
cmp
add
out
es
arpl
ja
lods
xlat
hlt
fnstenv
sub
call
test
xor
call
jae
jno
das
pop
das
cmpsl
and
xchg
sti
pop
push
in
pop
out
and
cmpsl
push
pop
xlat
push
dec
ljmp
xchg
andb
iret
dec
clc
cmp
aad
mov
push
hlt
mov
gs
pop
mov
jns
fwait
addr16
or
sub
add
or
jno
mov
aad
mov
inc
sbb
cmp
enter
aas
aam
mov
out
ss
jbe
fs
inc
add
mov
sbb
into
and
and
out
roll
ljmp
add
xorl
push
sbb
and
enter
adc
cmpsl
daa
pop
enter
orl
testb
test
pop
and
pop
rcll
or
cmp
jbe
add
jmp
cmp
sahf
dec
bnd
pushl
vpshab
popf
push
ljmp
mov
inc
pop
xor
cmp
push
lock
enter
add
stos
xor
fwait
decl
xlat
nop
cld
xchg
les
or
icebp
iret
add
and
fcoms
mulb
dec
mov
scas
cwtl
subb
fsubs
and
rorb
jmp
enter
pop
push
sub
jae
add
add
insb
mov
sbb
adc
adc
mov
jle
xor
mov
cmp
mov
xchg
inc
or
testb
or
jo
enter
inc
scas
or
inc
das
pop
dec
imul
mov
dec
mov
dec
test
inc
xor
rorl
xor
imulb
rcrl
daa
cmp
scas
mov
push
adc
mov
pop
xlat
adc
dec
cmp
mov
and
mov
fidivrl
in
dec
mov
sti
cmpps
addr16
mov
fists
jle
mov
mov
mov
lods
in
pusha
push
test
xchg
add
cld
pushl
stos
inc
sub
dec
sub
enter
stc
sets
inc
or
dec
nop
movsb
stos
add
es
xor
sub
or
mov
and
test
inc
cs
mov
push
xor
xchg
daa
xor
cmp
fistl
sub
and
aas
aaa
mov
dec
mov
repz
rorl
xor
iret
fcom
jno
inc
mov
push
pop
cmc
cs
xchg
adc
divb
aad
enter
cltd
sub
xchg
or
clc
loope
arpl
dec
rolb
jne
and
pop
xchg
inc
aaa
sbb
aas
inc
or
rclb
jnp
movb
add
or
loopne
and
inc
add
xlat
push
loopne
push
mov
jmp
dec
jmp
sbb
movsb
enter
mov
push
xchg
push
shlb
shrb
sub
sub
push
xlat
jmp
cmp
jbe
lods
das
pusha
jbe
faddl
iret
roll
push
add
cmp
xlat
mov
ja
mov
xchg
out
mov
add
mov
enter
gs
ja
lahf
fs
insl
jge
aaa
cs
push
ljmp
jp
in
dec
mov
sbb
mov
addr16
or
dec
push
repnz
add
jmp
add
lcall
jle
stos
push
jp
sbb
push
aad
adc
pop
aaa
sub
adc
imul
out
cld
aas
cwtl
movsb
adc
test
add
cld
xchg
mov
push
mov
notl
clc
mov
call
das
xchg
mov
xchg
mov
pop
out
loope
ja
mov
and
out
gs
adcl
cmp
pushf
pop
mov
push
or
imul
xor
adc
sub
mov
sub
ret
scas
or
js
mov
sahf
or
push
dec
rcrb
ret
or
sbbl
or
xor
dec
shlb
sbb
xchg
xchg
mov
data16
xor
inc
lods
inc
je
mov
pop
mov
inc
jbe
push
loopne
fdivrs
repnz
sbb
cmpsl
aad
fsubs
mov
xchg
hlt
aam
mov
out
in
out
adc
lods
and
and
add
pop
addr16
jge
in
and
cmpsb
repz
iret
and
mov
in
mov
cmpsl
test
cmp
mov
enter
pop
and
idivl
arpl
mov
sub
test
push
dec
fwait
and
imul
dec
xorb
sub
jge
add
xchg
cltd
bound
xor
xlat
jl
sub
jns
and
idivb
cli
js
dec
cmc
cmc
mov
inc
or
roll
add
je
inc
inc
int
adc
psrad
sarl
clc
mov
adc
add
les
test
bnd
inc
xchg
insb
sub
sti
jp
test
test
jns
pop
xor
stos
in
scas
fwait
cmp
mov
or
jo
test
sbb
testb
or
icebp
out
arpl
mov
test
pop
cli
add
mov
sahf
not
cld
fldcw
sbb
js
inc
sbb
mov
insl
jg
inc
popa
dec
andb
lods
enter
dec
addr16
das
arpl
dec
addr16
pop
mov
repnz
cmp
ljmp
aaa
dec
lock
add
push
stos
push
jecxz
add
lods
inc
dec
or
mov
loop
enter
adc
push
xor
std
aaa
dec
xor
xor
cltd
movsl
push
pop
test
pop
hlt
mov
jo
loop
pop
mov
pop
pop
add
movsb
test
lock
fdivr
mov
repz
rcl
push
or
sub
out
arpl
icebp
sbb
int
sub
cmp
je
xchg
and
dec
or
mov
or
cmp
inc
pop
test
mov
adc
int
pop
jmp
mov
adc
add
popa
xchg
sub
mov
enter
pop
fbld
cmp
mov
mov
or
enter
jge
xchg
out
or
call
sbb
cltd
je
xchg
cmp
mov
bt
fimull
jno
outsl
jnp
pop
aam
sbb
xor
xor
mov
jl
dec
rcrl
shll
cld
push
dec
adc
sub
and
loope
jae
push
inc
ret
sbb
rclb
mov
mov
es
lret
inc
fistl
mov
popf
cmc
leave
xchg
dec
rcrb
mov
mov
mov
aaa
xlat
out
subl
dec
cs
push
cwtl
cs
xchg
aas
fimull
or
and
or
repnz
lcall
push
in
mov
jae
lods
xor
ret
call
rclb
push
xchg
sbb
cmp
addr16
in
pop
and
jo
mov
mov
enter
je
lods
pop
stos
cmp
mov
xchg
jge
mov
es
dec
or
mov
scas
mov
test
pop
pop
jo
adcb
xchg
adc
add
stc
cwtl
jno
sub
and
or
pusha
ss
adc
stos
sub
dec
mov
fadds
mul
test
adc
cwtl
pop
jo
mov
in
sbb
loop
push
loopne
jo
mov
test
xchg
ret
mov
enter
nop
xchg
xchg
sahf
int3
adc
cmp
dec
rorl
enter
fnstcw
or
cmp
fs
aaa
xchg
pop
fwait
mov
jne
jge
dec
fiaddl
push
or
dec
dec
aas
in
dec
enter
or
mov
push
ret
sbb
pop
xchg
scas
and
jp
ret
out
inc
sarb
jb
and
adc
mov
add
ja
lods
or
xchg
push
dec
mov
add
or
lock
movsb
and
mov
test
inc
lods
mov
pop
fwait
push
stos
mov
push
das
adc
idivb
dec
xchg
xchg
imulb
xor
xchg
mov
mov
in
ja
outsl
test
pushf
push
mov
jg
test
sub
jl
lea
test
pop
aaa
enter
sbb
lds
adc
dec
or
pop
call
xchg
iret
push
mov
add
ret
test
sub
int3
mov
movsb
push
rcll
xchg
jle
std
aaa
cli
xchg
loopne
pop
fcmovb
sub
push
mov
je
fs
add
xchg
xor
cmp
stos
out
pop
xchg
int3
xchg
push
push
notb
pop
fists
add
test
jg
dec
adc
pushf
mov
pop
push
aas
sahf
push
and
or
mov
jge
jecxz
gs
push
add
xchg
mov
or
rcrl
pop
push
inc
push
daa
cmpsb
movsb
push
ja
xchg
enter
pushf
sti
push
pop
xchg
stos
xor
lods
repnz
and
xchg
jae
dec
fs
ljmp
test
rolb
push
fisubs
loope
push
xlat
sti
sub
push
stos
cld
out
je
add
fsubrs
and
pusha
scas
jp
jmp
fildll
or
stc
jg
mov
pop
xor
call
xor
sbbb
mov
call
and
jno
iret
movsb
sbb
scas
out
xchg
test
mov
xchg
xchg
xor
rcll
mov
mov
push
shrl
dec
pop
pushf
test
sub
add
inc
add
jne
and
outsl
sbb
push
sub
push
mov
or
dec
adc
clc
cmpsl
in
test
shll
in
cwtl
imull
push
add
mulb
pop
add
pop
push
xor
into
inc
jae
pop
cltd
push
inc
pop
jo
push
aas
xchg
int
roll
pop
pushf
xlat
into
out
mov
dec
jl
jecxz
push
movsb
xchg
pop
or
sbb
lea
enter
pop
fstl
dec
call
dec
cs
sahf
sub
outsl
dec
sub
andb
enter
sub
push
cmp
push
pop
inc
xchg
scas
mov
and
fnstenv
aad
das
xlat
loop
mov
test
push
lods
int
jae
push
es
cmp
xchg
push
inc
push
sbb
lcall
out
nop
sub
testb
pmaxsw
lds
bound
xor
sub
es
cld
mov
adc
dec
fdiv
psubsb
addr16
stos
psadbw
out
push
fs
adc
mov
push
xchg
js
into
jnp
push
call
pop
stos
in
mov
pop
cmp
aas
test
push
ss
mov
adc
aad
pop
sti
nop
or
sbb
push
in
adc
neg
cld
movsl
mov
jp
lods
xlat
cltd
mov
mov
pop
cs
dec
das
test
cmp
adc
out
test
lods
pop
adc
lock
idivb
adc
test
je
mov
dec
call
sub
xchg
push
add
cltd
pop
mov
inc
hlt
push
cmpsl
dec
mov
push
dec
push
sbb
out
ret
sbb
fcom
mov
adc
daa
cltd
out
addr16
mov
push
jo
push
pop
mov
jo
xchg
mov
mov
adc
cmp
test
xchg
mov
dec
or
pushf
shl
js
out
mov
or
and
loop
out
aam
test
andnps
cmp
insb
jp
test
push
outsl
jmp
mov
cld
xor
push
call
enter
adc
inc
mov
push
sysenter
or
scas
stos
mov
fdivrs
xchg
in
cs
adc
add
out
inc
lock
push
insl
xor
loope
cmpb
fsubrl
daa
sub
movsb
sub
cmpsb
fcoml
inc
xor
popf
mov
sub
push
addr16
out
je
mov
xor
or
sbb
call
daa
mov
shl
and
movsb
enter
fdivr
mov
sub
lahf
cli
push
movsl
movsb
sbb
les
je
push
ljmp
imul
popa
inc
outsb
sahf
cmp
ds
xchg
ds
lahf
sbb
outsl
lods
fimull
addr16
mov
add
enter
mov
xlat
outsb
stos
roll
xor
and
hlt
add
push
sbb
mov
jmp
jae
pop
push
enter
dec
pop
mov
in
cmc
rol
ds
xchg
cli
inc
fistpll
inc
inc
or
ret
iret
xor
outsl
insb
xchg
push
and
mov
call
pop
addl
mov
pop
mov
fs
xchg
jns
in
fsubr
or
stos
xchg
fisubrl
jl
xchg
push
mov
adc
or
inc
stc
in
adc
stos
adc
push
mov
push
inc
mov
and
aam
dec
mov
jo
push
mov
cwtl
popf
xor
shll
sarb
adc
sub
inc
mov
or
mov
testl
pop
cmp
mov
dec
mov
lret
jp
mov
xor
popf
pop
sbbb
in
jle
hlt
negl
inc
icebp
cmpsl
hlt
mov
push
xor
jne
add
mov
lock
add
xor
ds
inc
push
repnz
out
cs
sub
jl
add
mov
das
dec
sbb
stc
scas
out
cmpsl
fisubrs
mov
idiv
push
pop
pop
sbb
idivb
xchg
cmpsl
pop
sbb
mov
subb
mov
inc
or
decb
addr16
outsb
jl,pn
jno
sub
imul
cmp
push
lods
lret
cld
jbe
inc
movsb
cli
out
adc
and
or
daa
dec
pop
and
inc
iret
dec
lret
sbb
test
loop
mov
outsb
mov
inc
fcmovne
cmpsb
pop
cmp
lods
mov
iret
mov
xor
xor
pop
movsb
cli
in
js
xlat
in
cmp
aaa
push
mov
dec
rorb
sub
frstor
inc
add
ljmp
fcom
sbb
lret
xorb
xchg
test
cmp
sbb
dec
iret
mov
push
es
lahf
out
ljmp
mov
or
inc
cli
and
outsl
testb
aaa
cmpsl
sub
inc
add
dec
jp
add
mov
loopne
rcl
stc
out
pop
or
arpl
out
pop
jg
iret
mov
pop
out
enter
adc
cmp
outsl
lock
mov
jp
lods
icebp
push
add
push
mov
pop
mov
loop
sub
xchg
in
push
cmp
mov
lock
lods
and
lea
inc
into
xchg
divb
mov
mov
in
cmpsl
mov
aam
ljmp
cli
in
stc
cmpsl
xchg
andl
mov
mov
jmp
jl
movsb
adcb
mov
and
xchg
fbld
add
xchg
sbb
in
lahf
mov
or
hlt
mov
insl
aas
sub
jae
repz
push
add
mov
aas
xlat
stc
adc
dec
pusha
and
out
add
jno
push
call
adcb
and
repnz
mov
ja
pushf
rclb
data16
nop
sub
ja
mov
dec
lcall
jp
xor
enter
insl
rorb
dec
mov
push
int3
cmp
lret
sahf
jl
testl
add
hlt
jae
xchg
insb
jecxz
lods
and
or
xchg
test
ljmp
xchg
stos
and
sbb
cmpl
test
outsl
repnz
push
fs
ret
into
xlat
loopne
xchg
movsl
add
jne
sub
and
mov
or
jo
pop
mov
adcb
aas
lret
push
push
cmp
aad
mov
or
xchg
faddl
js
jb
cmp
cltd
adc
fadds
add
aam
dec
js
mov
movsb
outsl
xor
pop
mov
stos
mov
mov
adc
fwait
sub
mov
and
stc
sub
stos
sbb
mov
dec
xlat
jne
jle
inc
dec
cwtl
shlb
jp
subl
test
aaa
aad
imulb
pop
dec
loopne
xchg
daa
fbstp
lock
enter
divb
xor
cmpl
and
lods
pop
cmp
es
cmp
mov
jbe
dec
ljmp
sub
jp
xchg
mov
cs
es
push
adc
mov
xor
das
push
cld
add
or
ss
dec
add
lods
pop
xchg
adc
lods
xlat
lcall
push
aas
dec
and
mov
dec
cld
add
enter
scas
nop
cmp
cmpsb
cltd
adc
cmp
das
shrb
adc
mov
jmp
add
or
or
push
subl
adc
fisttpl
xor
scas
in
mov
fcoml
daa
push
pop
aas
sub
jecxz
push
add
xor
mov
adc
xlat
add
lcall
and
addr16
je
adc
add
ret
lret
pop
and
pop
ds
cltd
lods
pop
pop
pushf
mov
pop
xlat
test
xchg
outsl
pop
cmp
pop
sahf
fsub
dec
pop
sbb
add
enter
bound
push
pop
popw
add
mov
cmc
inc
cmp
xchg
mov
or
lcall
pop
add
push
fdivl
out
xor
in
lock
fisubrs
inc
lret
or
cmc
push
in
lret
pop
xchg
cld
pop
pop
mov
and
lds
les
push
dec
push
inc
rorl
lods
rorb
out
xchg
inc
cwtl
cwtl
adcb
stc
out
movsb
xchg
cmp
adc
mov
sbb
cmp
sbb
push
xchg
mov
or
mov
je
add
sub
pushf
mov
mov
push
and
xor
xlat
inc
mov
fmul
and
outsb
jecxz
pushf
push
sar
or
aaa
insb
aam
mov
adc
add
gs
stos
lea
pop
and
stos
jg
xchg
out
scas
in
jb
push
pop
out
mov
negb
xlat
jo
dec
jp
andl
push
adc
dec
rcll
scas
nop
add
add
sub
lret
or
in
sbbb
sbb
dec
dec
int3
jo
pop
or
mov
adc
ss
into
push
loop
dec
xchg
cs
or
sub
mov
jns
scas
cmp
inc
test
lods
dec
jno
inc
cmp
xchg
imul
mov
cmp
sub
div
cmp
pop
xchg
sbb
mov
rorl
lds
or
popf
adc
mov
cmp
sub
rclb
xchg
enter
test
inc
fdivs
xchg
inc
xor
pop
adc
push
push
movsb
aaa
sbbl
iret
push
hlt
xchg
aad
daa
aam
xchg
sub
cmp
mov
enter
pop
push
addl
daa
cwtl
test
sub
add
enter
ffreep
add
aam
mov
ret
xchg
pop
adc
popa
and
or
or
imul
nop
in
mov
js
pop
lods
and
popf
std
and
lahf
andb
dec
in
cltd
into
dec
enter
push
jbe
or
gs
je
inc
cmpsb
arpl
jb
and
push
orb
dec
daa
and
and
xor
shll
add
cld
xlat
aad
imul
push
mov
xlat
cmpsb
cmp
shlb
mov
imul
call
push
cmp
les
mov
pop
mov
popl
cmp
pop
enter
ss
int
in
pop
sbb
mov
int3
cld
loop
icebp
add
hlt
add
movsb
test
fwait
cli
adc
mov
ficoml
sub
inc
fidivs
mov
sub
jecxz
or
mov
cmp
lea
add
call
and
mov
in
shlb
out
aam
cli
lahf
outsl
jl
rol
leave
scas
out
and
xchg
xchg
fsubl
mov
iret
fwait
adc
push
outsb
insl
dec
rcrb
mov
pushf
sub
dec
push
adc
aad
sahf
out
adc
inc
cltd
dec
gs
pop
lea
and
pop
in
fidivrs
repz
negl
push
xor
mov
insb
sbb
jle
movsb
movsl
std
adc
mov
fwait
iret
mov
lock
cmpb
dec
es
jg
lods
pushf
lret
xchg
mov
enter
ljmp
daa
jge
xchg
add
fs
movsb
sub
cld
loop
jmp
ret
pop
sbb
xlat
sbb
ficomps
popa
pop
rclb
dec
add
jp
cmpsb
dec
fs
test
in
xor
inc
sub
test
xor
int3
fmull
movsl
or
or
rcrl
mov
pop
lret
outsl
dec
sub
and
mov
fdivs
and
out
fcoml
mov
mov
in
xorb
push
or
mov
mov
dec
mov
ja
inc
push
pop
mov
sahf
das
roll
dec
fistpll
sub
pop
adc
iret
ja
xchg
add
ss
icebp
hlt
xchg
mov
aaa
movsl
or
repnz
movsl
in
fcmovnb
das
fsts
or
ds
imul
movsb
mov
lods
jecxz
add
les
mov
nop
sub
popf
inc
pop
cld
cmp
cwtl
cmpsl
rorb
out
pop
sub
adc
push
out
cmp
sbb
repnz
movsb
lods
cld
mov
inc
notl
test
in
mov
rol
fs
lcall
notb
add
test
retw
outsb
aam
and
daa
lods
mov
adc
mov
pop
xor
ja
cltd
and
iret
shrb
sahf
das
cmpsb
xchg
mov
movd
test
hlt
or
pop
add
add
movsl
pusha
mov
enter
dec
xor
movsb
mov
jg
aaa
adc
scas
mov
lods
ret
jecxz
std
ja
aaa
xchg
push
mov
imulb
dec
lea
mov
mov
dec
test
inc
jo
sub
adc
push
cli
enter
sarl
sbb
sbb
mov
pop
xchg
xchg
ret
xchg
jns
adc
jb
cmp
sarl
lock
lret
fiadds
add
inc
icebp
pop
cli
cld
cmpsl
mov
or
nop
push
sbbb
ficompl
pop
stos
mov
push
push
stos
add
std
pop
and
outsl
lock
out
inc
dec
pop
arpl
push
cmp
outsl
fdivrp
mov
enter
adc
cmp
and
in
test
pop
in
pop
xchg
xchg
mov
fwait
cmp
out
xchg
adc
andb
mov
dec
pop
clc
jle
mov
dec
and
adc
ljmp
imul
nop
out
xchg
insl
nop
movsb
inc
test
sbb
sbbb
outsb
loope
pop
scas
xor
push
jg
push
scas
xchg
lods
inc
fiadds
test
out
xchg
adc
bound
jnp
mov
adc
dec
push
clc
test
jmp
aam
xchg
sub
sub
mov
mov
jp
in
and
mov
adc
sub
cli
push
dec
mov
cmp
push
dec
mov
mov
pop
sub
push
pop
test
jno
xchg
and
jnp
inc
not
push
paddq
add
jecxz
xor
outsl
or
sub
push
add
lret
outsl
inc
sub
enter
cmp
sub
jecxz
stc
inc
cmpsb
pop
inc
scas
dec
pop
mov
outsl
xlat
aas
ja
jge
mov
std
add
in
push
jp
sbb
mov
or
popf
mov
dec
mov
sub
iret
cmp
movsl
pop
enter
call
push
and
cmp
push
add
data16
cwtl
outsb
fs
fnstcw
movsl
dec
fwait
mov
add
mov
icebp
sbb
xchg
loope
out
cltd
cmp
cmp
and
jle
mov
cmp
pop
xchg
xor
movsb
enter
les
daa
or
pop
cmp
and
mov
imul
cwtl
cmc
sti
arpl
push
outsl
in
pop
mov
and
cmp
mov
mov
pop
jmp
mov
out
and
mov
push
data16
pop
and
xor
mov
xchg
mov
jecxz
pshufw
movsb
xchg
mov
xor
pop
out
enter
pop
add
je
mov
pop
enter
dec
or
lods
orb
inc
pop
aaa
inc
push
test
ror
push
mov
and
imull
xor
sarb
mov
daa
inc
addr16
sbb
xchg
or
adc
mov
pop
dec
insl
mov
cmp
and
fwait
sbb
ret
ja
int3
sub
adc
leave
lods
sub
loop
xor
mov
pop
fwait
mov
jecxz
outsb
ret
jbe
pop
mov
lea
ret
fcoml
out
repz
std
adc
movsb
clc
enter
sti
out
pop
inc
jb
rclb
push
mov
lock
adc
sbb
iret
stos
xchg
mov
in
sub
or
mov
into
pop
xchg
mov
arpl
js
mov
scas
aad
mov
xchg
in
cmpsl
jecxz
lahf
iret
xor
mov
in
imulb
adcl
or
test
xlat
mov
cvttps2pi
test
hlt
and
add
xchg
lea
testb
lods
js
movsb
cmpsb
sub
stos
pop
mov
mov
dec
mov
jp
inc
cmp
cmpsl
movsl
mov
xor
pop
jno
add
addr16
cmp
push
insb
hlt
inc
repz
mov
scas
pushf
xchg
push
rolb
mov
iret
xchg
sub
adc
scas
xor
inc
aaa
push
mov
push
jne
imulb
out
mov
cmp
mov
jns
bound
nop
add
and
pop
clc
ret
add
fldt
push
outsb
add
add
mov
pop
in
hlt
cs
sbb
jo
das
int3
scas
mov
or
out
jl
enter
icebp
or
and
cmpsl
cltd
jecxz
cmc
scas
add
mov
loopne
lret
cmpsl
dec
mov
daa
xchg
mov
int
sub
out
sub
mov
test
jmp
sub
inc
push
aaa
pusha
orl
les
xchg
sub
ljmp
add
or
aas
lods
loopne
jecxz
mov
or
xchg
push
pushf
xor
dec
mov
fisttpll
pop
popf
icebp
pop
mov
call
inc
push
lcall
or
fstpt
pop
cmpsb
sarl
add
fimull
testl
add
ja
xor
xchg
mov
cld
cs
jnp
sti
pop
xchg
push
repnz
in
shlb
scas
dec
out
out
enter
subl
pop
mov
inc
and
popf
push
cmpsl
push
out
ja
fimull
pmaxsw
mov
and
xor
adc
enter
sub
jns
jle
pop
add
movsl
jo
test
call
mov
and
add
clc
jmp
push
pop
cld
adc
stos
movsb
scas
pop
pop
ljmp
xlat
pushw
cmp
neg
pop
mov
and
pushf
xchg
fdivl
lret
lock
decl
jns
aam
mov
adc
scas
call
add
jp
movsl
call
addl
push
or
sub
adc
stos
dec
dec
mov
or
call
xor
popf
push
push
enter
jae
mov
or
cmp
xchg
iret
mov
or
mov
mov
adc
dec
popf
lahf
xor
mov
aaa
call
xlat
adc
or
mov
mov
dec
lahf
push
int
cmp
subb
inc
sbb
sbb
and
cli
jp
and
push
in
movsl
aad
iret
xchg
clc
dec
mov
rorl
fwait
jp
repnz
mov
sub
pop
pop
enter
aaa
cmp
movsb
out
adc
mov
or
repnz
jae
inc
fmull
and
in
jo
sub
cmp
dec
enter
rcrl
inc
xchg
popa
sbb
lahf
test
jg
push
fs
push
mov
pop
dec
pop
lea
jne
adc
dec
mov
mov
dec
pop
mov
shlb
xchg
es
pop
gs
inc
push
imul
cmp
out
xchg
xchg
sub
add
lcall
gs
or
mov
sbb
xlat
mov
sub
xchg
std
jne
mov
jmp
mov
stc
adc
lods
mov
adc
pusha
mov
ja
adc
ds
into
mov
dec
mov
mov
mov
inc
inc
rcrl
cli
fbld
jmp
pop
mov
pop
adc
xchg
sbb
cmp
cmp
in
inc
add
nop
mov
add
dec
xor
push
mov
ja
idivb
cmpl
xlat
pop
in
mov
mov
sbb
pop
icebp
gs
test
mov
lret
xor
popa
pop
push
and
bound
in
xchg
dec
scas
enter
pop
test
into
inc
out
cltd
jecxz
sub
lods
stc
iret
and
cmp
add
mov
mov
in
xor
pop
xchg
cli
xchg
jle
and
stc
dec
pop
inc
sarl
mov
mov
push
sti
push
adc
stc
or
jns
xor
inc
mov
movsl
cmp
jbe
push
lock
cmp
test
clc
cs
lret
lea
mov
js
mov
cld
cmp
dec
push
push
push
fs
push
sti
jmp
push
and
mov
fdivrs
sub
xchg
mov
stc
xor
dec
inc
jns
and
sti
inc
add
jne
cld
decb
mov
push
sub
testb
pop
pop
jbe
sahf
fadd
cmpsb
adc
cmp
mov
mov
repz
adc
xchg
adc
int3
jle
cli
cmp
cmp
iret
dec
mov
aaa
and
sahf
out
in
dec
xorb
loopne
jge
call
mov
iret
pop
jbe
or
cmp
inc
hlt
jl
mov
or
xlat
xchg
pusha
cli
les
aaa
je
jae
and
dec
in
mov
adc
or
xchg
xchg
stos
mov
mov
rcll
sub
stos
or
popl
aaa
cmpsl
adc
xor
popa
andb
add
pop
enter
adc
dec
lods
dec
enter
sbbb
popa
pop
mov
lsl
cmp
dec
sbb
incl
add
popf
cmpsl
in
sarb
xchg
mov
pop
jmp
and
mov
scas
sbb
dec
aas
dec
jae
ljmp
into
or
add
ja
cs
test
stos
mov
insl
stos
lods
mov
or
daa
add
mov
rorb
push
aam
outsl
dec
dec
inc
out
jae
xchg
push
cwtl
sub
mov
dec
xlat
dec
xor
out
enter
pop
fwait
xlat
loope
xchg
mov
sbb
mov
adc
mov
popa
lods
jle
mov
mov
pop
jne
adc
cmpsb
xor
iret
imulb
xchg
inc
shll
call
arpl
adc
test
movsl
jl
sub
enter
inc
xlat
sahf
jo
mov
jnp
dec
dec
icebp
repz
add
je
inc
xor
into
enter
out
clc
sub
loop
pop
jns
add
gs
mov
xchg
scas
and
push
fcoms
iret
cmp
fwait
mov
push
cmpsb
arpl
add
dec
mov
inc
cmc
in
sbb
ret
rorb
jle
xor
cmp
push
lcall
lds
test
inc
add
inc
and
out
pop
push
adc
outsb
pop
or
test
lea
pop
push
add
mov
call
inc
xchg
xlat
inc
ljmp
cmc
mov
pop
pop
adc
pop
push
aas
dec
das
addr16
adc
call
sub
jb
cli
mov
push
add
fisttpll
rol
jo
sbb
pop
int3
pop
mov
push
cli
call
ficoms
out
and
add
mov
data16
pop
pop
insb
repnz
sar
je
sbb
lahf
jne
and
mov
xlat
dec
mov
and
xor
arpl
or
xchg
inc
mov
mov
add
nop
mov
inc
ret
loopne
call
and
sbb
mov
aam
test
or
lea
cmp
fwait
std
cmp
iret
das
mov
adc
jle
add
sub
out
lret
ljmp
sub
enter
xlat
inc
mov
aad
adc
sbb
cmp
setb
cmp
addr16
pop
rclb
sub
mov
aas
push
ja
ret
loopne
aad
in
ja
mov
aaa
dec
cmp
fdivr
add
ret
popl
xchg
mov
mov
adc
mov
jp
add
dec
out
call
mov
mov
and
mov
nop
xor
addr16
cmp
shlb
adc
std
test
mov
pop
ret
in
scas
add
rclb
call
nop
pop
xlat
jns
add
mov
ljmp
je
cld
and
add
cmp
outsl
mov
in
dec
xchg
add
xchg
dec
in
and
shll
mov
test
aaa
jo
adc
xchg
shlb
les
push
sbb
pop
adc
pushf
dec
movsb
and
or
enter
nop
or
aaa
jle
ficompl
test
mov
dec
rclb
or
aaa
gs
adc
mov
ja
pusha
out
xor
inc
idivb
adc
pop
pusha
jg
lock
ss
int
mov
daa
sti
in
fs
jne
test
xchg
push
les
in
or
jo
and
out
test
jge
dec
test
mov
cmpb
adc
and
mov
adc
in
test
negb
pop
add
mov
cmpsb
or
lcall
adc
fistps
je
xchg
mov
and
dec
pop
leave
xchg
sbb
sub
xchg
ret
shr
scas
sbb
inc
or
and
jmp
andl
mov
mov
stos
fildl
enter
aad
lds
cld
add
lret
jecxz
xor
push
mov
dec
test
jns
sbb
movsb
sbb
fwait
call
hlt
mov
dec
inc
lahf
inc
dec
in
mov
sub
cs
mov
sbbb
test
dec
dec
inc
pop
mov
in
mov
stos
xchg
inc
ficompl
xor
xchg
jle
mov
out
pop
sub
das
push
lods
push
not
sub
call
into
push
arpl
ret
mov
imul
mov
xlat
in
mov
arpl
js
xlat
push
push
movsb
mov
outsb
jg
js
mov
push
mov
decb
xlat
mov
icebp
mov
push
or
pusha
mov
pop
icebp
lods
insl
inc
push
add
lret
sti
dec
push
xlat
pop
fnstenv
adcb
sub
out
ljmp
ret
xchg
aam
fwait
push
jle
movsb
fsubrl
inc
mov
jbe
xlat
ja
es
test
js
test
aad
and
pusha
push
xchg
push
ljmp
movsb
out
lret
pop
int3
cmpl
adc
jecxz
mov
sub
inc
incb
aad
lods
pop
adcb
cwtl
ds
jns
fwait
scas
or
pop
xchg
xlat
adc
jmp
js
inc
dec
add
inc
dec
enter
scas
ret
movsb
notb
jl
enter
inc
or
movsb
push
push
and
cmp
xchg
insl
mov
xchg
in
push
lods
cli
mov
or
sub
int
and
cmpsl
mov
vmovq
outsl
mov
mov
pop
mov
push
mov
xchg
adc
dec
and
out
pusha
mov
pop
adc
faddl
adc
mov
dec
ja
bound
pusha
movsl
adc
cmpsl
out
daa
push
mov
or
xchg
in
std
mov
pop
lock
aas
nop
inc
or
fcoms
jae
ret
pop
lret
jne
notb
cmc
push
dec
fwait
cs
unpcklps
mov
daa
xchg
inc
adcb
inc
mov
es
mov
inc
adc
enter
stos
ret
fld
sti
pop
arpl
mov
xchg
das
in
mov
and
xchg
push
scas
fwait
into
jl
pop
clc
and
movsb
in
dec
outsb
es
xlat
fidivl
insb
push
pop
mov
inc
xchg
iret
test
or
scas
pop
mov
repz
ret
inc
out
gs
enter
xchg
hlt
lret
and
test
sahf
jle
xchg
scas
xchg
adc
cmp
jnp
in
insl
stos
inc
jbe
cmpsl
in
mov
or
shrb
lret
fs
mov
dec
and
ret
call
cmc
mov
or
loop
sahf
mov
add
andl
jb
fs
lds
movb
jmp
mov
push
pop
fbstp
adc
lods
lret
pop
push
in
sub
inc
lods
dec
inc
test
jo
jb
xchg
je
mov
cmp
scas
arpl
stos
rcll
sub
cmpsl
mov
iret
pop
aaa
scas
js
call
sbb
cmpsb
cmpsl
decb
and
fdivrl
xchg
cmp
adc
xlat
adc
imul
push
lods
push
call
and
xchg
xchg
mov
je
ljmp
fs
or
jbe
pop
mov
mov
add
call
mov
aam
jle
out
jae
pop
mov
sahf
xchg
cltd
or
jns
mov
enter
mov
arpl
mov
and
aam
movsb
loope
daa
push
nop
add
insl
bound
adc
dec
pop
push
mov
lcall
hlt
add
enter
cld
or
xchg
jns
popf
lock
add
addr16
mov
orl
mov
int
repnz
jp
sbb
jb
adc
fwait
sbb
add
mov
insl
insb
sbb
jnp
jecxz
pop
jno
pop
hlt
aas
xlat
shlb
lret
test
xchg
xor
push
pop
or
adc
test
sarl
ficompl
push
push
int3
dec
adc
lods
notb
xor
cmp
pop
adc
inc
pop
pop
inc
and
and
ret
sub
ljmp
cli
inc
enter
dec
mov
push
je
jae
movl
rcl
call
push
add
js
jae
sub
stos
mov
push
mov
xor
stos
out
pop
std
int3
lds
sub
adc
stc
xor
inc
xor
add
sub
and
loopne
into
sub
push
test
xchg
dec
mov
sub
jge
iret
sub
loopne
and
mov
pop
ret
shr
sti
pop
jp
bswap
idivl
mov
test
pop
cli
mov
fcmove
pushf
leave
fs
xor
test
outsb
arpl
lods
sbb
enter
shl
cs
movsl
add
dec
mov
lods
je
push
cmp
add
outsb
rcrl
fistpl
cmpsb
mov
movsl
mov
insl
lahf
or
clc
cmpsl
jp
mov
jge
cmp
cmpsl
or
scas
int
lds
stc
mov
xlat
mov
test
mov
repz
mov
push
fwait
jns
push
ja
push
sub
test
shll
call
arpl
sub
cmp
sub
test
fucomp
mov
shl
mov
xlat
jne
mov
add
cwtl
push
lods
lock
inc
out
sbb
sbb
dec
inc
lds
lods
fldcw
or
and
cli
mov
mov
pop
outsl
xor
push
cmp
xor
mov
pop
out
push
scas
mov
xchg
xor
cmp
xor
mov
push
push
or
and
jo
cmp
les
mov
call
fadd
rorb
pop
xchg
out
inc
repnz
adc
and
inc
mov
dec
fsubrl
daa
mov
add
cmp
dec
enter
mov
and
mov
push
test
pop
movsb
imulb
pop
add
fisubrs
xchg
rorl
lods
dec
repz
or
push
cwtl
mov
xchg
pop
das
add
fdivs
adc
or
ss
pop
add
xorb
jo
fmul
in
inc
sub
xchg
scas
enter
dec
out
aaa
sub
xor
jno
ljmp
and
in
pop
testl
or
dec
sbb
lds
mov
cmpsl
mov
fwait
xlat
in
imul
scas
sti
ret
inc
movsl
xchg
sbb
mov
fisttps
pop
xchg
mov
mov
je
aam
int
adc
inc
inc
xchg
adc
mov
mov
notb
test
xor
xchg
adc
xchg
hlt
mov
loopne
faddl
dec
fwait
inc
mov
pop
fildll
ja
sbb
cmp
cmpsb
loop
lcall
call
jnp
into
roll
xchg
xor
add
mov
ja
mov
ret
aas
int
or
mov
je
or
shr
pop
push
inc
cmpsl
outsb
pop
cmp
push
cmp
jp
add
add
adc
and
sub
lahf
mov
movsb
xor
add
xchg
mov
mov
push
sbb
enter
adc
insl
in
mov
test
sbb
or
and
xchg
shlb
adc
aas
enter
dec
iret
jo
add
ja
aad
in
cmp
sub
aad
add
test
mov
rcrb
divb
dec
fmull
ret
pop
dec
scas
into
shl
push
cwtl
dec
imul
sti
push
repnz
add
cli
pop
lahf
pop
dec
mov
fsubrs
adc
push
scas
mov
enter
lods
xchg
pop
repnz
xchg
js
js
xor
or
sbb
imull
das
inc
andl
or
xchg
iret
out
pop
cmp
out
imul
ret
mov
mov
adc
scas
arpl
mov
shlb
mov
and
sub
inc
pop
xchg
clc
xlat
xor
outsb
movsl
sub
ret
push
cmpsl
mov
sbb
xchg
mov
mov
shl
push
mov
loop
movsb
add
lods
inc
ja
mov
dec
mov
pushf
push
sub
test
dec
test
lret
enter
into
jnp
mov
adc
ja
mov
cs
out
mov
movsb
mov
add
fistpll
mov
fists
jbe
adc
icebp
nop
and
test
inc
lods
cwtl
int3
aam
dec
dec
popf
pop
cmp
jle
movsb
jle
dec
pop
out
dec
lret
pop
sub
outsb
fbld
sub
pop
dec
pop
fwait
xlat
in
add
gs
enter
and
mov
and
les
sub
sbb
shr
sahf
sub
dec
fdiv
enter
negb
inc
aas
movsb
inc
dec
dec
lods
lods
xchg
jg
outsl
andl
mov
mov
repnz
lret
fwait
pop
cwtl
push
pop
mov
cltd
je
mov
lahf
xchg
in
add
cmp
adc
out
and
inc
les
and
fstps
lret
ljmp
out
sahf
jmp
movhps
or
lret
jl
rcrl
outsb
ljmp
aaa
mov
call
or
sub
push
aaa
inc
mov
add
mov
cmp
dec
mov
xchg
enter
push
xlat
adc
imul
push
and
and
movsl
iret
push
add
inc
out
or
or
or
adc
dec
and
enter
cmp
xor
xchg
lds
push
outsl
leave
fwait
and
fs
jb
lahf
cwtl
push
insb
adc
in
shl
cltd
xchg
mov
adc
movsl
movb
shl
ss
inc
or
jne
enter
mov
outsl
pop
jp
mov
repz
adc
pop
sub
xchg
fs
out
xchg
adc
dec
orl
notl
sub
mov
pop
lock
call
pop
fsub
xchg
mov
pop
stos
out
fnstcw
xor
scas
push
push
or
sub
fildll
test
mov
scas
cmp
or
push
idivb
or
rcrb
push
pusha
mov
jge
sbb
movb
movsb
push
cmp
sub
adcb
out
or
dec
xchg
out
movsl
nop
pop
in
lock
sbb
xor
sahf
test
es
adc
sbb
lea
pop
jne
lahf
shrl
pop
fs
jge
orl
stos
push
xchg
sub
loope
mov
and
adc
xchg
aas
mov
inc
mov
cmp
test
dec
sbb
imul
xchg
loop
pop
inc
idivl
jge
jle
inc
jge
out
dec
mov
cmp
dec
cmp
mov
insl
jle
fsubs
inc
sub
xchg
dec
mov
push
add
imul
xchg
aas
ficoms
fwait
js
mov
add
and
push
in
fldenv
xchg
ret
fwait
jmp
xor
mov
inc
ja
into
popa
xorb
and
ds
bound
mov
jo
pop
test
stc
lret
hlt
out
out
sub
int3
faddp
scas
push
cwtl
adc
ror
cs
shrl
inc
pop
cmc
xor
movsl
mov
adc
test
test
jno
cmp
cs
int3
in
test
push
in
mov
xlat
and
sti
fwait
push
stos
mov
jnp
or
lods
mov
mov
dec
jnp
nop
in
add
mov
inc
in
fwait
fwait
and
arpl
enter
inc
sub
fwait
pop
fisttpll
hlt
mov
adc
icebp
mov
mov
inc
pminub
fisttpl
xlat
sbb
cltd
jnp
cmp
inc
jns
hlt
dec
mov
dec
and
out
push
pop
add
xlat
sub
mov
push
addl
mov
xor
shrl
jae
adc
add
fisttpl
lahf
pop
ss
aad
inc
pop
add
jb
jb
sbb
outsl
mov
xchg
xchg
ret
add
stc
into
scas
sub
pop
jbe
inc
or
mov
xor
xchg
pop
into
and
fs
jo
test
mov
or
enter
idivb
dec
cmp
movsl
xchg
mov
jg
adc
rcrb
push
in
repz
in
sub
mov
push
adc
mov
mov
loope
cmpsl
outsb
mov
out
jo
clc
pop
les
and
jecxz
iret
dec
pop
fwait
ja
inc
jmp
xor
inc
jle
mov
mov
xchg
test
add
mov
call
xchg
pop
scas
dec
fisubrl
jl
jne
loopne
ret
adc
add
or
inc
mov
dec
mov
xchg
movsl
les
add
mov
cmc
test
in
jle
add
lods
jle
rolb
bnd
pop
or
sbb
repz
daa
and
hlt
enter
inc
in
sbb
rcl
and
inc
in
sub
or
aaa
lock
and
shrb
mov
loope
cmp
test
or
pop
add
jge
fsubs
shl
dec
sbb
xchg
mov
jns
mov
adc
mov
rcrb
or
add
add
and
jp
lret
repnz
and
add
jns
add
fwait
pushf
dec
scas
pop
inc
int3
sbb
je
aad
arpl
mov
lahf
arpl
add
stc
xor
sbb
push
in
out
cmpsb
push
pop
int
jo
sti
into
ret
fistpll
call
nop
adc
les
dec
mov
add
movsb
xadd
cli
in
jle
add
lods
out
sbb
dec
call
addl
int
mov
popf
stos
and
or
enter
jle
inc
or
cmp
movsl
fsubrs
shr
mov
xchg
mov
xchg
iret
adc
and
aad
mov
aaa
scas
sub
orl
shrl
jg
sub
mov
xchg
or
lcall
jp
and
pop
andb
popa
cmp
inc
fisttpl
pusha
adc
and
fidivs
sbb
cmp
mov
xchg
call
adc
rcr
xlat
sbb
and
add
popa
add
pop
movsl
sti
cmp
clc
inc
lret
aaa
das
stc
jo
xchg
adc
inc
aam
loopne
out
add
jb
insl
dec
cs
popf
add
xchg
sub
mov
xchg
xabort
push
add
imul
rcll
mov
test
bswap
sub
mov
stc
pop
mov
push
mov
mov
xor
or
loop
cmpsl
inc
push
push
mov
pop
ljmp
mov
ss
jo
adcb
outsl
push
xchg
imul
rdmsr
mov
cmp
shrb
insb
out
jge
test
pop
enter
lods
mov
cld
xlat
adc
lret
dec
inc
cltd
mov
xchg
rclb
pop
inc
sbb
ds
mull
jns
pop
push
divb
jo
xlat
jns
cld
add
rorb
roll
pop
push
outsl
sahf
mov
dec
dec
mov
sarb
rclb
enter
inc
call
cvtpi2ps
mov
jp
jmp
adc
fisubrs
inc
inc
arpl
arpl
fwait
jo
push
je
adc
xor
sbb
sbb
lods
pop
iret
pop
std
fcmovb
jno
push
push
xchg
call
addr16
enter
movsb
cmp
mov
lahf
scas
and
add
call
scas
xchg
pop
mov
mov
shrb
testb
sbb
adc
movsb
divl
ja
adc
push
movzbl
cmp
mov
or
test
or
out
sub
rep
fcoml
xchg
loopne
xchg
push
cmp
fmulp
add
xchg
xor
jne
lds
test
data16
out
js
int
and
pop
or
xor
push
adc
iret
js
iret
mov
ret
xchg
mov
mov
dec
loop
mov
outsl
push
jb
and
push
push
push
push
repnz
xchg
mov
xchg
jle
xchg
mov
add
cmpsl
leave
outsl
pop
xchg
fisubrl
and
lahf
fdivrp
cs
xchg
out
addb
inc
pop
inc
mov
out
add
push
mov
loopne
outsl
test
cmp
adc
lock
cltd
gs
push
into
shrb
add
inc
das
call
adc
mov
xchg
mov
xlat
xchg
xchg
sub
dec
stc
pusha
mov
push
xor
into
addr16
in
mov
outsb
mov
push
inc
fidivrs
push
fidivl
adc
mov
sahf
incl
gs
jnp
push
into
pushf
enter
arpl
pop
jg
jmp
xor
mov
sbb
movsb
orb
pop
cmpsb
sti
rorb
jb
loope
dec
repnz
sbb
pushf
ds
aas
and
mov
enter
sbb
mov
sub
js
inc
popa
movsb
lods
scas
xchg
into
dec
es
or
cmp
jno
mov
test
stc
push
bswap
inc
cltd
movsb
jo
mov
in
dec
andb
cwtl
xor
in
js
mov
and
xchg
dec
test
outsl
in
inc
nop
not
dec
in
push
mov
or
shll
fnstenv
jmp
sub
sub
ja
and
cmp
or
xlat
push
out
jns
xchg
pop
enter
dec
shll
push
test
out
push
adc
add
push
xchg
aas
lods
ja
fxch
and
or
fimull
ret
pop
add
xor
xor
push
dec
std
and
in
adc
test
sahf
add
lcall
push
pop
xor
icebp
pop
cmp
in
sbb
lods
add
adc
pop
or
inc
test
adc
and
mov
jns
hlt
jb
fucomi
mov
cwtl
mov
lds
mov
mov
sub
cmp
jbe
dec
xor
ljmp
fcom
and
push
inc
test
enter
insb
hlt
icebp
or
or
insb
sbb
je
ss
xchg
inc
ja
mov
daa
xor
sub
decl
mov
cmp
dec
stc
pop
loop
rol
int
cld
cmp
enter
adc
ds
in
and
or
pop
dec
sbbl
jmp
sub
inc
xor
cmp
sbb
or
cmpsl
pop
inc
pop
insb
movsl
mov
montmul
cmpsb
inc
dec
add
insl
stc
mov
pop
mov
pop
ljmp
adc
loope
movsl
stos
pop
and
sub
push
fcmovb
sbb
and
adc
add
jbe
and
leave
sahf
jb
inc
push
ja
push
inc
paddq
sti
sti
mov
cwtl
fcoml
enter
inc
mov
and
outsb
and
ss
and
fistps
dec
out
add
sar
gs
and
sub
sub
cli
aaa
out
imul
add
dec
sbb
ret
xchg
into
inc
fisubrl
aaa
enter
mov
pop
unpckhps
dec
fdivp
sub
test
subb
jmp
mov
test
rcll
xchg
rcll
cmpsl
mov
adc
push
mov
and
rclb
fstpt
inc
cmc
pop
test
push
push
inc
push
pop
insl
cltd
pop
xchg
ja
test
ds
add
fwait
test
inc
sub
jns
and
std
xchg
fcmovnu
mov
and
fisubrl
in
lods
cmp
fildll
rclb
popa
enter
sar
mov
inc
add
in
pop
ret
lcall
out
xlat
add
add
jmp
daa
cmp
pushf
add
std
mov
insl
mov
push
in
mov
cli
inc
arpl
ret
daa
loopne
mov
sub
outsl
in
cmpsl
and
out
imul
sbbb
push
mov
test
repnz
xor
mov
pop
push
cmp
hlt
sti
xlat
sub
jl
in
inc
aam
add
filds
mov
out
data16
add
or
lahf
andb
mov
jno
adc
cmc
fstps
mov
imul
out
outsb
dec
out
int3
test
mov
jo
pop
sub
loope
cs
scas
mov
enter
sbb
pushf
jno
iret
call
jb
ret
cmp
rclb
pop
add
call
pop
push
jnp
xor
lret
scas
sbbl
out
push
mov
xchg
jne
lret
pusha
imul
push
das
jecxz
adc
push
and
mov
dec
cmp
loopne
in
nop
cmp
js
jmp
sub
mov
sahf
sbb
sar
xchg
pop
cmp
ret
mov
add
push
int3
xchg
pushf
out
sbb
mov
push
in
and
lds
xchg
xorl
aas
mov
cs
xchg
or
fwait
xchg
xor
sti
into
rcrb
sbb
test
icebp
xchg
xlat
lock
faddl
push
push
mov
fsubrs
fiadds
sub
ja
and
xor
mov
or
mov
pushf
scas
xor
cmpsl
push
out
ljmp
lods
pop
sar
aas
cli
mov
daa
xchg
dec
sub
push
nop
jl
push
push
push
in
faddl
mov
mov
jnp
sub
jb
jg
adc
xor
cwtl
adcb
inc
or
push
and
das
mov
hlt
inc
daa
clc
push
or
pop
add
outsb
les
mov
add
xchg
fs
cmpl
push
addb
rcl
movsl
outsb
inc
xor
in
pop
inc
and
loope
mov
fistpl
push
mov
cmpsb
ja
xor
les
and
loopne
push
fstpt
das
push
fs
xor
jne
xchg
fldenv
xchg
jo
mov
push
out
flds
or
push
cmp
mov
inc
mov
pushf
jae
mov
aad
push
sub
or
cmpsb
xor
lods
data16
xor
mov
cmp
jl
sub
xchg
das
imul
inc
fwait
enter
sub
push
mov
and
mov
push
repz
out
or
es
lcall
cli
jg
lss
mov
mov
aam
dec
add
jg
jmp
mov
fwait
pcmpgtb
shrl
xchg
pop
inc
jbe
mov
jno
mov
and
test
cmp
enter
fcoms
in
ficoms
shlb
sbb
popl
xorb
and
inc
push
xchg
cmpsl
jl
add
xchg
jns
repz
scas
jae
xchg
js
push
std
or
mov
insl
jo
mov
push
filds
xor
js
call
push
je,pn
out
int
inc
inc
fcoml
jno
jg
in
mov
inc
jmp
push
sub
pop
xchg
push
lds
mov
jnp
and
popa
repz
sub
sub
enter
cmpl
pop
outsl
ret
jb
cs
out
mov
enter
push
loop
dec
dec
leave
or
or
mov
adc
sub
mov
xorl
lret
jge
mov
or
aaa
adc
ret
bound
aam
add
movsl
cltd
adc
push
sti
xlat
and
jo
rclb
enter
movsb
xchg
nop
pop
adc
or
out
push
pop
mov
xchg
sbb
jae
pusha
cltd
ja
lods
push
mov
cmp
popa
cmpsl
dec
pusha
ljmp
adc
les
pusha
push
push
loop
xor
mov
out
mov
adc
and
nop
cli
and
inc
lds
mov
shlb
and
cmp
fiadds
pop
xchg
push
ret
arpl
xor
in
mov
repnz
fsts
aaa
enter
out
cmp
popl
bound
fsubr
cmp
sub
mov
xchg
and
lcall
cld
out
sub
test
cwtl
xor
add
xchg
out
fwait
test
andl
inc
cmp
cmp
addr16
sahf
lcall
or
cmovne
or
enter
and
fsubrs
into
cwtl
je
and
pop
cli
movsl
out
pop
imul
jmp
out
ret
in
jmp
and
sbb
pop
xchg
ds
mov
outsl
les
dec
enter
cltd
cmp
push
lcall
adc
cld
mov
or
fildl
sub
mov
sub
daa
sub
sub
mov
adc
imul
mov
pop
popa
and
movsb
fprem1
loopne
add
adc
pop
xchg
int3
inc
cmc
outsb
popf
shll
in
xchg
sbb
jmp
mov
and
adc
mov
fsubrl
mov
jbe
adc
lods
in
test
out
notb
push
lods
push
push
mov
rolb
adc
stos
xchg
xor
flds
dec
in
rcrb
mov
insb
inc
aaa
mov
xchg
and
vmulss
xlat
inc
mov
and
adc
gs
mov
xlat
cmpsl
jo
xor
outsl
insb
mov
lock
inc
shr
test
out
iret
inc
push
sbb
mov
ret
cmpsb
mov
loop
cmp
cmpsl
push
imulb
out
cmp
outsb
cmp
fwait
and
cld
idivl
andb
scas
adc
xchg
mov
cmovo
dec
repz
loope
pop
or
int3
popf
cltd
or
sub
add
push
lods
js
xlat
lahf
xchg
xor
push
mov
adcb
pop
add
pop
push
xchg
mov
mov
mov
adc
int3
xchg
adc
inc
pop
or
jne
mov
or
fsubrs
sub
test
jle
and
popf
jle
movsl
push
repz
mov
ret
stc
pusha
xor
adc
scas
mov
adc
inc
sub
lods
shll
mov
or
aas
popf
testb
in
xor
cmpsb
push
mov
mov
loopne
sbb
call
das
pop
xchg
pop
mov
mov
out
int3
push
lea
ret
mov
cmpsb
pusha
fnsave
das
fimuls
rol
xor
sbb
movsl
decb
push
outsl
loop
cmp
in
dec
xchg
popa
xor
pop
dec
pop
cwtl
cmp
add
add
pop
in
pop
ljmp
test
mov
adc
pop
aam
jmp
adc
scas
movsl
and
xlat
es
mov
lret
add
xor
sbb
test
inc
lahf
shlb
xor
sbb
mov
enter
daa
lcall
out
mov
lcall
cmpsb
and
sbb
ljmp
dec
fisubs
dec
jl
clc
sub
mov
jp
sbb
xor
daa
xchg
or
mov
inc
push
ret
mov
popa
fsubs
mov
int
or
xor
xor
in
pop
in
std
push
jb
mov
in
pop
add
push
in
push
add
addr16
cmp
das
mov
aam
lret
cmp
push
cld
and
enter
add
mov
mov
dec
adc
inc
push
mov
push
sub
dec
fistl
lret
push
nop
xchg
iret
jg
dec
jne
mov
mov
fisttpl
add
out
cld
cmpsl
dec
push
dec
xchg
add
outsb
dec
dec
jae
jne
pop
and
add
dec
roll
notb
shlb
jo
xchg
xlat
cmp
addr16
xor
int
dec
xlat
adc
add
push
push
or
xchg
movsb
pop
and
push
dec
pop
aaa
fiaddl
imul
pusha
cld
jae
xlat
and
xchg
mov
enter
ja
stc
push
mov
adc
xchg
sub
ja
adc
or
enter
stc
and
das
inc
xchg
or
pop
adc
cmp
mov
jmp
add
scas
lcall
jecxz
lods
mov
mov
mov
push
add
dec
or
lahf
and
leave
shll
cld
sahf
in
jg
pop
xor
and
sbb
std
mov
jle
js
les
movsb
jb
push
cwtl
dec
test
adc
xor
cld
dec
mov
push
inc
xor
sub
add
add
in
jns
mov
arpl
push
add
bound
jmp
pop
sub
or
vmovhps
psllq
cmpsb
cs
xor
in
mov
movsb
lcall
mov
jmp
push
mov
jle
out
and
imul
popf
xchg
mov
stos
mov
enter
call
jne
dec
sub
ret
test
test
adc
mov
mov
dec
inc
sub
psubq
insb
mov
pushf
movb
scas
pop
xchg
stos
cmp
jae
push
jbe
cmp
jg
mov
popf
lods
repnz
mov
das
out
cwtl
out
shlb
cmc
daa
je
in
lahf
jl
push
inc
aas
push
push
xchg
orb
lahf
icebp
movsl
pop
jns
add
lods
std
mov
sbb
push
stos
fldenv
cmpsb
xchg
aam
dec
xchg
xchg
sub
add
add
test
pop
and
lcall
jmp
dec
mov
mull
ljmp
enter
push
xchg
fisubrs
ficoms
enter
dec
nop
pop
mov
iret
inc
iret
or
shll
addb
lds
jg
jg
pop
fs
sbbl
daa
imul
push
pop
shrb
lods
int
push
int
hlt
and
inc
ds
add
fisttpll
das
das
dec
mov
and
enter
mov
into
std
inc
jl
addr16
mov
xor
fistpll
addr16
or
adc
pop
jae
pop
fwait
jnp
cmpsb
aas
jecxz
loopne
cltd
push
jbe
and
cli
push
faddl
jecxz
lock
xchg
jge
shl
daa
fs
or
rolb
add
gs
ljmp
or
test
add
push
out
mov
dec
out
jecxz
cmpsl
loopne
mov
aam
jns
arpl
lret
pop
out
movsb
mov
sbb
ret
mov
or
jnp
enter
addb
aad
inc
add
aas
clc
divb
sub
movb
inc
sbbb
movsl
pop
lock
inc
mov
aad
call
in
adc
cmp
test
shl
das
push
out
cmp
lock
imul
adc
iret
pusha
dec
pop
stos
mov
mov
adc
push
jmp
or
sub
faddl
jae
cmp
xchg
push
test
mov
je
adc
out
mov
inc
loop
fs
pop
and
or
adc
inc
out
inc
xchg
pop
enter
call
fcoms
inc
data16
xchg
das
push
mov
fwait
or
das
clc
and
xchg
icebp
or
mul
rcrb
push
and
or
jno
int3
push
mov
add
xchg
lret
ds
test
enter
fiaddl
outsb
cltd
and
adc
jno
push
rcrl
or
ds
les
cmp
mov
aas
in
mov
aam
test
sbb
call
and
inc
push
pop
add
js
stc
das
pop
add
in
fcoml
push
jg
rcl
push
xchg
add
ja
dec
cmpsl
jl
popf
mov
fwait
push
movsl
scas
adc
shlb
jecxz
mov
call
insl
mov
rol
lcall
adc
cmpsl
nop
lahf
stos
push
pop
push
push
iret
fcomps
fcmovb
pop
sub
push
push
adc
xor
jbe
enter
mov
mov
movsl
xlat
subb
inc
and
fisubs
mov
testb
test
ds
mov
in
andb
ljmp
push
jne
in
test
push
add
adc
adc
cmovg
jp
or
mov
xchg
cmp
call
iret
sbb
aaa
cwtl
mov
and
jo,pn
cld
out
sahf
jno
ljmp
inc
fildl
push
fwait
xchg
push
and
sbb
or
movsb
pop
sub
cmp
add
xchg
outsb
xchg
or
movsb
adc
and
add
jle
mov
jl
sbb
clts
xchg
loopne
push
xchg
mov
push
xchg
int3
mov
enter
iret
cli
out
inc
and
movsb
or
cs
pop
fldenv
and
sub
mov
inc
pop
adc
cmc
js
pop
iret
push
push
xchg
insb
movsl
daa
mov
lret
stc
cmp
in
jb
pop
pusha
in
nop
stos
or
lods
rcrl
ja
movsb
dec
xchg
out
xchg
mov
std
imul
xchg
xchg
shlb
call
adc
push
push
add
testb
push
sbb
div
es
sarb
test
aas
push
and
pop
out
push
mov
or
push
getsec
out
in
mov
ret
ltr
std
inc
repnz
imul
scas
mov
sub
enter
add
dec
inc
mov
or
mov
lahf
sub
xlat
jecxz
and
xchg
and
sbb
xchg
stc
out
movsb
add
push
xor
cld
into
fbld
shll
fimuls
push
inc
fbstp
push
dec
adc
aam
xor
je
int3
sub
enter
push
pcmpeqb
cwtl
div
xlat
xchg
adc
and
xchg
xchg
or
cwtl
enter
sar
fiadds
fcmovnb
inc
jne
lods
cmpsl
cmp
faddl
test
adc
cmp
outsb
sar
sarl
cwtl
mov
inc
test
sti
push
jl
cltd
dec
lret
xor
scas
enter
mov
push
pop
fdivrp
dec
out
jge
inc
scas
mov
sbb
mov
push
into
mov
or
xchg
mov
enter
xlat
imul
mov
sbb
test
mov
jecxz
movsb
rclb
addr16
sub
ret
pop
inc
adc
repz
roll
stos
sub
mov
gs
jno
cs
jae
jmp
jmp
cs
sub
or
mov
adc
or
xchg
or
adc
sbb
popf
mov
lret
into
sbb
sbb
and
lods
cwtl
sub
and
fcoms
dec
inc
dec
mov
inc
jg
mov
push
mov
add
xchg
jle
gs
andb
ja
bound
lret
or
fmuls
ljmp
xchg
fdivrs
inc
and
xchg
stos
in
xlat
pop
in
popa
xor
mov
dec
and
or
loope
xor
cli
mov
dec
std
mov
out
lods
je
sub
jno
inc
xchg
orl
or
cli
ss
sub
adc
sub
loope
mov
aam
and
adc
lock
aaa
rclb
daa
adc
pop
adc
aam
aaa
mov
pusha
and
leave
pop
pop
hlt
pop
inc
inc
int3
out
mov
lret
jg
adc
add
mov
or
mov
lea
xchg
imul
dec
xchg
cmc
xlat
cmp
jo
pop
mov
xchg
movsb
repz
xor
xchg
hlt
push
div
mov
mov
scas
lods
aaa
enter
movsb
jo
xchg
int
out
fcoms
ds
mov
test
adc
pushf
add
jmp
les
addl
test
and
popa
jl
sahf
push
and
aad
sbbb
jbe
jae
mov
in
adc
jb
cli
xchg
aas
imul
outsl
fidivrs
lods
mov
sub
das
in
out
jne
out
bound
daa
mov
mov
lret
btr
jns
or
setnp
xchg
scas
inc
inc
pop
lret
ds
lret
fcoml
adc
js
cld
in
inc
ficomps
xchg
pop
scas
xor
mov
mov
pop
outsl
lea
inc
pop
inc
in
cmpsl
adc
mov
dec
incb
jg
outsb
fmull
pop
dec
lods
jne
adc
repz
mov
sbb
add
aaa
pusha
cltd
pop
and
mov
mov
daa
sub
insl
icebp
aaa
pop
inc
jne
in
mov
sar
sub
xchg
rclb
mov
inc
mov
imul
dec
scas
or
lahf
mov
inc
xchg
jle
push
les
inc
pop
adc
push
sbb
and
push
mov
daa
jae
aaa
xchg
mov
adc
sbb
mov
call
and
popl
add
adc
push
xchg
ja
add
sub
nop
sete
push
lods
pop
daa
pop
ja
aas
das
pop
cmp
pop
and
movsw
lea
adc
ret
rclb
in
add
shl
movsl
pop
inc
in
push
push
push
out
loopne
push
and
ss
out
sub
movb
or
cmp
movl
stos
xor
xor
pop
adc
cmpsl
test
fcomp
mov
inc
lock
xchg
scas
out
pop
adc
pop
and
lock
sub
lods
aas
cmpsl
add
mov
dec
xor
xor
mov
fisttps
fmul
mov
push
rolb
and
dec
cwtl
movsb
aaa
lret
lahf
cmp
pusha
in
inc
out
dec
bound
stos
push
sub
and
inc
aaa
fists
adc
out
add
pop
mov
xor
xor
lahf
filds
adc
das
mov
scas
xchg
pop
inc
pop
inc
lock
or
outsl
mov
test
add
mov
pusha
and
lret
aaa
aaa
adc
add
inc
out
pop
push
pop
sub
xlat
fsubs
daa
iret
add
aas
pop
lock
ja
pop
pop
and
or
dec
or
pop
cmp
and
cmp
pushf
pop
xlat
mov
enter
dec
scas
mov
mov
add
out
movsb
out
ret
xchg
fwait
adc
in
mov
add
ds
xlat
jbe
inc
push
xor
cmp
out
xlat
jne
pop
inc
push
or
fwait
arpl
adc
out
stos
inc
add
lods
xorb
test
arpl
js
mov
dec
sub
out
cs
push
mov
sbb
pop
daa
pop
cmp
cmp
out
mov
test
ret
les
cmp
ljmp
mov
jns
or
pop
std
xchg
pop
test
imul
pop
insb
or
sub
mov
stos
movsb
or
add
shlb
sbb
movsb
out
divb
adc
cmp
and
data16
out
add
pop
aad
dec
loopne
jne
xchg
test
rcrb
and
push
jg
lds
or
fisubrl
push
mov
and
outsb
test
push
cltd
jno
lods
xchg
sub
enter
lahf
repnz
pop
lock
fdiv
push
into
push
daa
ja
stos
dec
adc
cvtps2pd
xchg
dec
enter
adc
std
cmpl
push
add
sub
inc
jmp
xor
mov
push
subps
arpl
je
repz
inc
pop
cmp
xchg
or
xchg
add
push
or
xchg
movsb
add
sbb
mov
les
sub
push
popa
fidivl
nop
jo
lods
and
inc
jg
ljmp
push
fimull
sbb
xchg
xor
inc
add
push
jb
not
loopne
call
shrb
call
call
push
jl
sub
lock
cs
xchg
add
mov
mov
movd
push
jmp
mov
insl
or
ljmp
sahf
mov
test
mov
loopne
std
test
cmpsb
lock
lds
jmp
fdivs
xlat
pop
push
cmp
add
jbe
inc
jns
xlat
cmp
mov
xchg
les
mov
outsl
jg
and
shlb
sub
mov
jp
pop
inc
lods
inc
xchg
sti
cwtl
xor
les
dec
mov
xchg
add
sub
test
xlat
insb
lcall
push
push
cmp
jnp
bound
out
mov
jb
add
sbb
cld
inc
mov
mov
sbb
popf
fwait
outsb
adc
mov
and
mov
mov
mov
pop
lcall
aam
push
cmp
je
popf
scas
xlat
mov
dec
sbb
xchg
iret
xlat
and
pop
sub
test
xchg
popa
rorl
mov
xchg
pop
xchg
loopne
ljmp
push
mov
xor
or
xorb
test
dec
xchg
aam
in
xor
sti
cmc
daa
and
mov
add
cmpsb
cmpsl
adc
sub
or
xor
adc
out
adc
scas
nop
xor
push
repz
and
adc
ret
mov
into
xchg
add
jg
adcb
inc
mov
shlb
xchg
mov
nop
fsubrs
push
pop
sub
jp
xor
outsb
mov
inc
push
hlt
mov
xor
and
xor
scas
hlt
stos
add
push
pop
cmp
inc
fcomps
pop
scas
cmp
aas
inc
pcmpgtd
xor
pop
mov
cld
daa
adc
adc
les
fs
mov
push
or
sti
andl
sbb
push
or
std
mov
out
jp
jnp
pop
xor
mov
xor
inc
cmp
not
dec
out
mov
dec
test
mov
ret
and
les
jno
sahf
test
les
mov
in
out
mov
add
enter
push
jge
lret
dec
pop
mov
mov
xchg
lock
adc
pop
cmp
iret
scas
jle
insb
push
xchg
gs
hlt
jg
jle
scas
xchg
jmp
lods
es
or
push
and
popa
pop
shlb
xchg
sub
addl
ret
fdivrp
xchg
push
test
leave
push
inc
push
hlt
dec
lcall
cwtl
stos
out
dec
mov
jne
mov
popa
lret
nop
sub
pop
mov
xchg
inc
loop
scas
adc
enter
pop
mov
mov
out
cmp
dec
jb
mov
cmp
push
xlat
sub
or
icebp
mov
dec
push
inc
aas
sbb
bnd
push
push
std
lahf
adc
rclb
and
mov
sub
lds
pop
fdivr
adc
cld
setbe
cmp
in
jp
xchg
rolb
mov
mov
cltd
push
aaa
enter
das
push
add
or
gs
push
lahf
adc
imul
mov
clc
nop
push
mov
lahf
pop
push
in
repnz
sub
jae
push
adc
xor
jae
ret
aam
stos
adc
divl
jae
out
pop
loop
push
mov
dec
mov
push
ret
xchg
xor
push
lds
cld
ljmp
cs
jno
jnp
mov
xor
sbb
add
or
stos
dec
lods
loopne
xchg
mov
lahf
inc
jb
ret
mov
sarb
mov
in
mov
scas
aas
ret
or
cmc
sub
loope
idivb
fadds
test
mov
lock
fwait
push
cmp
jge
scas
dec
roll
test
xchg
xchg
jp
mov
xlat
jecxz
fmull
mov
cmc
cmp
xchg
test
and
loopne
cli
xchg
repz
pop
ret
testb
push
adc
addr16
mov
push
movsl
ljmp
pop
push
dec
jl
jbe
icebp
and
or
xor
cli
daa
push
jg
pop
in
clc
lcall
bound
adc
pop
push
lcall
mov
adc
jbe
cld
mov
mov
mov
dec
cmp
cli
out
stos
push
inc
out
pop
pop
out
xchg
dec
sub
neg
nop
sbb
add
mov
movsb
mov
cmp
inc
xchg
jl
xchg
jl
xchg
and
mov
scas
dec
out
inc
push
jne
shlb
repnz
aaa
out
dec
mov
cli
loopne
adc
lods
cltd
xchg
cwtl
andb
or
in
fs
scas
inc
fcmovbe
arpl
ds
imul
lcall
jns
mov
jns
mov
mov
sahf
imul
sbbl
sub
mov
pop
incb
dec
sbb
add
xor
mov
pop
dec
jp
notb
xchg
aam
pop
fsub
mov
push
xchg
roll
loopne
inc
pusha
sub
mov
cmp
pop
sbb
imul
add
pop
es
in
daa
rorb
stc
dec
add
loop
add
cmp
xlat
sub
push
inc
adc
fcomps
shrb
cld
inc
mov
fistps
imulb
cmp
adc
stos
add
sbb
xchg
cli
xchg
sbb
fwait
mov
jp
sub
xchg
cltd
fists
arpl
std
test
lds
inc
je
ss
outsl
into
push
mov
and
mov
jo
cmc
mov
pop
push
adc
gs
sub
ljmp
adc
inc
mov
mulb
movsb
sbb
push
cmpsl
pop
ret
cld
mov
mov
insb
cmpsl
loop
pop
lcall
mov
outsb
push
fwait
push
dec
negb
mov
pushl
push
push
jnp
jg
mov
push
adc
mov
pop
mov
mov
outsb
or
push
sahf
xchg
inc
jmp
push
dec
int3
pop
mov
sahf
into
imul
xchg
sbb
add
sub
push
mov
jp
xchg
loop
add
mov
adc
es
cwtl
lea
repnz
adc
xchg
pusha
arpl
daa
or
icebp
call
lods
decb
fwait
dec
aam
add
add
pushf
dec
test
and
es
or
dec
dec
mov
stos
sbb
jg
repz
mov
adc
aad
mov
push
rclb
adc
ret
adc
mov
inc
les
div
mov
es
add
into
pop
dec
lods
inc
and
pop
fwait
and
and
divb
and
test
mov
and
lods
adc
inc
xor
into
ficoml
sub
mov
enter
add
mov
sbb
sub
pmullw
xchg
cmp
cwtl
sbb
dec
jo
out
xorb
lds
mov
fs
xchg
ljmp
mov
insl
es
sub
and
inc
add
xor
pusha
push
add
lods
cmp
inc
mov
adc
mov
jge
in
xor
mov
cmpsb
xor
xchg
add
sbb
loopne
mov
cwtl
hlt
add
insb
pusha
je
push
nop
daa
or
scas
mov
xchg
pop
jns
pushf
dec
ja
push
push
jo
hlt
jb
mov
scas
cmp
pop
push
push
pop
xor
ds
jmp
cmpsl
lea
jne
aas
xlat
outsb
and
xchg
imul
cmp
pusha
lahf
xchg
popf
cltd
in
push
or
mov
mov
sbb
xlat
push
cmp
push
mov
xor
mov
or
popa
mov
cmp
movsb
test
xor
and
xchg
in
ficoml
iret
or
ret
inc
push
jo
hlt
ljmp
enter
push
sbb
sub
das
jl
pop
stc
push
mov
lds
fsubrs
push
lock
mov
push
or
out
push
mov
mov
repnz
pushf
test
lcall
sbb
dec
jp
pop
xchg
pop
sbb
mov
add
std
add
adc
adc
xchg
mov
inc
mov
ljmp
xchg
push
jp
mov
sbb
call
out
enter
mov
xchg
sbb
xchg
dec
pop
mov
insb
dec
rorb
mov
divb
inc
clc
aaa
hlt
nop
lods
ljmp
pop
out
push
dec
js
cmp
repz
std
and
jl
dec
popa
adc
mov
mov
call
addr16
jg
add
dec
repz
xor
inc
xlat
adc
dec
ficomps
cs
pushf
std
sub
fldl
clc
gs
xchg
aas
mov
cs
or
pop
jg
dec
mov
dec
and
push
roll
adc
add
mov
push
and
fwait
inc
call
ds
das
xchg
enter
xlat
adc
rcrl
pop
push
push
push
insl
cmpsb
enter
stos
je
pop
js
shll
shll
scas
push
mov
xchg
je
pextrw
mov
inc
pop
inc
dec
jne
in
cmpsl
push
outsb
out
insl
xchg
pop
push
lcall
testb
jbe
and
and
adc
push
fstl
cli
pop
inc
movsb
push
mov
adc
insl
std
adc
rorl
cmp
dec
dec
sti
inc
test
push
ficompl
mov
out
dec
dec
and
and
add
jecxz
leave
test
ficomps
and
push
jnp
nop
xor
aad
jbe
fsubrs
mov
and
mov
xchg
fsubs
pop
hlt
iret
mov
xchg
daa
in
mov
or
rcrb
xchg
mov
xchg
sub
mov
cmpsb
fldl
test
lods
sub
aam
mov
shrb
push
lcall
sbb
sti
fnstenv
aaa
lcall
scas
or
aas
adc
xor
sub
add
mov
inc
test
inc
or
mov
out
sub
faddl
cmp
out
xchg
inc
push
cs
ljmp
rcrl
rorl
xchg
lret
sub
je
in
adcl
cmc
stc
lcall
jbe
mov
in
jmp
bswap
xchg
jb
stc
mov
enter
mov
scas
pop
push
inc
xchg
mov
outsb
mov
pop
out
stos
dec
inc
pop
mov
or
mov
sub
mov
sub
test
push
cmp
inc
jo
aas
lock
sub
dec
aad
out
xor
cmpsb
push
mov
gs
inc
pop
adc
jae
pop
scas
jg
jge
ds
std
jl
daa
je
jnp
sub
mov
sbb
jecxz
cwtl
sbb
adc
pop
and
and
sbb
mov
add
and
push
daa
enter
test
packuswb
cltd
xchg
pop
push
pushf
mov
shufps
pop
and
aad
pop
push
push
jecxz
rol
jl
jmp
fmul
xlat
adc
xor
sahf
xchg
lret
fistpll
pop
jns
lods
mov
xor
mov
stos
lea
ds
movl
cwtl
cmp
inc
mov
cmp
cld
orl
mov
and
jb
fs
dec
jne
paddsb
cmp
add
call
daa
js
popf
add
mov
pop
xor
stos
push
cmp
out
cs
imulb
xchg
xchg
push
lds
adc
add
imul
movsl
inc
jp
movsl
jnp
mov
xchg
mov
into
mov
xor
jmp
cmpsb
cmp
outsl
jecxz
dec
and
add
les
das
mov
xchg
stos
jo
dec
stos
test
inc
aam
ja
fs
mov
ret
out
js
xlat
xor
gs
pop
sub
mov
lods
fs
frstor
in
adc
or
pop
out
mov
repz
rcrb
xor
sub
or
adc
in
fbstp
adc
lret
adc
movl
cmp
in
clc
inc
push
aaa
dec
movl
pusha
mov
mov
xchg
jg
rcr
and
fisttpl
push
sub
pop
xchg
jmp
cmp
pop
sti
das
cmp
xor
and
add
mov
adcl
xchg
pop
adc
fstps
push
or
sub
mov
pushf
jl
in
das
fldenv
mov
mov
in
mov
mov
lods
add
out
in
loopne
aad
lds
repnz
ljmp
add
in
movsb
mov
out
sub
add
lret
dec
push
repnz
call
mov
rcll
test
cmp
fwait
adcl
rep
xlat
faddl
jecxz
rclb
arpl
repnz
jae
in
mov
scas
push
cmp
mov
jl
bound
push
dec
clc
jle
add
push
cli
mov
xchg
dec
mov
ja
jne
inc
pushf
imul
xorb
jge
add
shll
ja
push
rorl
xchg
movsl
mov
out
jp
fiadds
aaa
pop
in
stc
nop
jl
rclb
jp
aaa
int3
fmul
das
cmp
dec
xor
jno
dec
cmpsl
xor
lods
test
pop
mov
and
adc
cmp
dec
adc
test
lahf
sbb
hlt
mov
gs
mov
xor
xchg
clc
cmp
cld
jp
movsb
mov
shrl
cmp
jbe
xchg
nop
and
incl
pop
add
test
lds
cltd
or
dec
inc
std
jmp
gs
jns
xlat
fld
dec
mov
pop
cwtl
sete
or
ss
xchg
nop
fwait
in
mov
loop
cmpsl
cmp
mov
xchg
sahf
inc
lea
dec
shr
fadds
out
cld
adcb
inc
scas
push
test
pushf
sahf
push
repz
jmp
scas
push
lock
and
sub
repz
rep
addr16
push
adc
adc
call
jg
out
test
xor
lea
sbb
test
jbe
outsl
xor
stos
test
dec
mov
cmp
mov
cmovg
mov
inc
imul
or
xchg
sbb
push
mov
inc
es
call
daa
test
push
dec
movsb
xchg
push
xchg
jmp
sbb
cld
or
in
mov
dec
add
dec
fwait
inc
stc
pop
xchg
adc
out
stos
and
xchg
sbb
cmpb
out
out
push
pop
popf
out
aaa
sub
fwait
popf
jmp
and
inc
adc
pop
in
mov
xor
test
ja
lods
ret
and
lods
out
in
and
pop
stos
push
adc
cmp
xlat
dec
rcrb
cmc
jne
adc
mov
test
loope
cmp
nop
sbb
mov
add
test
mov
push
hlt
out
aad
out
inc
notl
cmp
pop
mov
das
or
adc
xor
xlat
or
push
sarb
mov
mov
sub
imul
xlat
les
jmp
pop
xchg
mov
dec
inc
cwtl
scas
adc
jns
mov
insb
ret
xlat
adc
mov
ds
inc
mov
xchg
in
loop
sub
pop
dec
jmp
js
loope
mov
iret
pop
sbb
mov
xlat
mov
mov
push
sub
popa
pop
movsb
xchg
out
cld
lods
xchg
pushf
push
ja
mov
pop
dec
jne
xchg
push
outsb
add
out
dec
jg
ja
xlat
mov
inc
fnstcw
mov
cwtl
mov
or
xor
pop
add
cmp
enter
push
sbb
ret
cmpsb
addl
or
or
dec
push
xor
or
or
pop
loopne
add
insb
push
add
xchg
adc
repnz
dec
push
push
fwait
mov
je
stos
lock
jb
sub
mov
es
pop
fldl
push
push
scas
repz
in
test
or
pop
mov
test
mov
aas
xchg
xchg
movsb
or
adc
cmpsl
sub
xchg
push
mov
scas
mov
repz
jg
inc
and
out
jbe
push
out
dec
std
mov
inc
pop
mov
test
pop
xor
xchg
movsb
sbb
jecxz
and
scas
push
pushf
in
repnz
add
add
and
test
mov
sub
sub
add
mov
repz
mov
mov
cs
adcl
xchg
push
mov
aaa
ret
pop
pop
cmp
fdivrs
or
stos
decl
xchg
movsl
popa
inc
cmpsl
sbb
jle
and
lcall
out
enter
in
or
mov
setae
or
aas
inc
inc
pop
rcrb
ljmp
mov
pop
push
enter
xchg
fwait
lret
sbb
xchg
fwait
lods
and
adc
shrb
or
rcr
and
sub
mov
sub
or
insl
test
sub
dec
fwait
aas
dec
hlt
add
push
lret
inc
fcoms
xor
or
and
out
test
mov
push
mov
dec
fs
mov
inc
cwtl
test
or
out
adc
cmp
jno
mov
outsl
cmp
or
cmovle
jl
sbb
scas
addb
incb
add
xor
inc
sub
movsl
in
js
xlat
ret
stos
clc
jp
std
inc
fs
adc
mov
stos
dec
outsl
loope
and
jle
and
negl
test
push
call
dec
rol
movsb
in
add
sbb
in
push
addl
mov
xchg
movsb
out
pop
add
adc
xor
jmp
and
mov
hlt
orl
adc
and
test
mov
pop
cmp
xor
sub
in
aam
mov
outsl
and
or
mov
in
cld
sub
ret
mov
adc
lds
leave
xchg
pop
sub
mov
in
sbb
iret
cmc
add
call
enter
mov
pop
adc
mov
dec
xchg
jl
adc
mov
ja
push
xlat
mov
rcll
cmpsl
sbb
xlat
pop
sub
sub
das
test
aas
ljmp
mov
out
jp
addr16
setge
popf
jno
dec
sahf
in
inc
test
pop
stos
sub
ficomps
in
testb
dec
enter
mov
cmp
sbbb
aaa
or
daa
cmp
or
clc
push
add
xchg
and
fisubrs
fsubs
sub
cmpsl
sub
flds
int3
pop
mov
xor
data16
push
xor
adc
mov
adc
inc
fisubrs
jmp
ret
push
cmpsb
inc
inc
or
cmc
aad
xor
push
add
xor
and
sbb
and
daa
sbb
pop
pop
lcall
sub
jmp
cmp
lea
jae
jmp
jl
sub
jmp
sub
nop
pop
xchg
stos
xor
cmp
sub
mov
leave
cmp
lret
jmp
lods
scas
das
push
or
xlat
pop
xchg
clc
in
push
out
ret
ja
movsb
dec
adc
pop
mov
sub
fiadds
ret
int3
loope
iret
mov
sub
pop
mov
enter
loop
bound
fadd
mov
fwait
loop
xchg
aaa
dec
enter
dec
or
pushf
mov
movsb
leave
push
cli
inc
dec
jb
test
aas
loopne
and
adc
ljmp
mov
add
add
pop
loopne
push
fiaddl
iret
not
inc
loopne
jg
test
cmc
imul
cwtl
mov
dec
aaa
mov
fwait
shl
movsb
and
lcall
xchg
outsl
fldenv
stos
xchg
popf
jmp
cwtl
xchg
ss
mov
stos
and
fwait
push
cmp
cwtl
sub
sti
rolb
add
enter
xor
sbb
inc
stos
dec
movsb
clc
xchg
jo
pop
cld
ret
jmp
jecxz
adc
in
insb
in
pop
pusha
subl
neg
sub
mov
inc
or
fbld
ljmp
rcl
xchg
mov
and
push
lret
outsl
sub
jo
mov
ja
lret
push
sti
adc
jb
and
enter
mov
mov
loopne
mov
data16
mov
xlat
gs
sub
ljmp
add
mov
clc
jnp
mov
popa
xor
js
imul
mov
aaa
cmc
imul
pushf
jg
cmp
mov
mov
movsl
cmpsl
cmpsl
lcall
mov
js
jg
ja
stos
jns
aaa
repz
gs
loop
inc
mov
cmpsb
push
scas
out
push
sti
mov
mov
mov
clc
imull
inc
push
pop
and
popf
cmp
mov
test
jno
cmp
xor
inc
movl
loopne
pop
xchg
aaa
out
mov
jae
mov
movsl
iret
adc
lret
adc
mov
pop
inc
rcpps
xchg
cmpsb
data16
push
sbb
cmpsl
xchg
push
cwtl
mov
and
lods
mov
and
sub
xchg
inc
inc
add
xchg
push
push
popa
rclb
pushl
mov
pop
movsl
out
mov
cmpsb
addr16
out
sbb
lock
cmp
shll
fs
subl
push
fmuls
fisttpll
mov
push
or
xchg
and
es
stos
push
lahf
push
xchg
push
aaa
pop
mov
test
mov
dec
cwtl
inc
push
mov
mov
add
fwait
pop
cmpsb
cwtl
xchg
inc
push
xlat
mov
inc
xlat
adc
or
cwtl
cmp
scas
push
lods
dec
jo
lahf
aad
bound
stos
daa
xlat
dec
notl
push
inc
das
lahf
incl
outsl
pop
mov
or
push
inc
push
inc
mov
adcl
pop
cmp
push
mov
cmpsl
and
iret
pop
adc
xchg
pop
mov
enter
nop
push
xchg
aaa
lea
cmp
cld
xchg
ja
outsl
pop
not
dec
jbe
push
adcb
jno
push
jns
cmp
pop
xlat
mov
mov
fcmovnbe
push
int3
or
ss
mov
fwait
cld
push
cmpsl
add
sub
test
call
xchg
xchg
ds
mov
idivb
cld
aas
xorl
enter
lcall
cmp
sbb
xchg
push
sbb
into
out
add
push
mov
lret
or
adc
aas
gs
cmpsl
enter
fwait
pop
cmp
stos
dec
push
mov
inc
cmp
adcb
lds
sbb
lds
adc
xchg
jns
mov
iret
testb
insb
jmp
sbb
addr16
enter
inc
xchg
repnz
loopne
sub
enter
xchg
inc
jne
lds
sbb
push
xchg
push
mull
xor
inc
fdivs
dec
sub
pop
lods
xchg
sub
cld
sahf
inc
repz
push
aaa
pop
fcomi
push
rclb
std
sbb
mov
mov
dec
mov
out
xchg
cmp
dec
sti
repnz
fldt
or
test
js
outsb
push
imul
rorb
xchg
jae
add
pushf
outsl
fcomps
jecxz
jecxz
pushf
scas
lret
bound
pop
je
pop
enter
jl
sbb
idivl
mov
fcoml
out
rclb
or
add
cltd
out
mov
lahf
js
fwait
mov
repnz
test
and
and
xchg
xor
cmp
paddusw
clc
out
sub
push
pop
es
rolb
xlat
setle
add
xor
xor
jle
sbb
adc
out
pop
out
fmul
jno
loop
orl
ja
push
test
xorb
test
fmulp
pop
add
mov
and
dec
lahf
pop
jne
ljmp
cmp
add
cmpsb
divb
or
pop
dec
and
fidivs
add
sbbb
cmp
fisubrl
and
or
push
xor
fisttps
or
xchg
cmp
adc
loopne
mov
mov
movsl
int
add
rorb
xor
pop
add
arpl
add
bswap
lahf
or
add
mul
sub
pop
inc
js
push
popf
fwait
lock
add
adc
enter
mov
das
jb
int
dec
or
mov
js
adcl
insb
negb
mov
and
addr16
adc
in
jle
adc
pop
xlat
sub
je
lods
adc
mov
in
sbb
fcomp
pop
jmp
sub
xchg
mov
jge
cmp
and
call
mov
popf
mov
sub
sti
pop
les
push
outsb
enter
xchg
or
sub
in
pop
or
or
sbb
xchg
push
popf
pop
sbb
ret
sub
add
das
ljmp
fsubrs
or
test
dec
add
jns
popf
adc
inc
cmpb
xor
pop
scas
and
call
data16
add
xor
dec
es
dec
add
dec
dec
lret
push
scas
movb
mov
test
jmp
fyl2x
cmpsb
jbe
mov
sarb
add
mov
in
mov
scas
add
mov
mov
aad
add
ljmp
scas
mov
add
mov
das
push
inc
stc
out
mov
jb
jne
and
sbb
enter
popf
jge
xchg
xor
rol
push
xchg
nop
clc
cltd
mov
mov
sub
outsl
sub
sub
faddl
and
mov
xor
pop
xchg
pop
outsb
rorl
pop
mov
in
adc
das
or
xchg
fsts
mov
test
and
pop
jp
sub
test
ja
adc
mov
shlb
or
and
mov
sarb
mov
stc
or
mov
enter
outsl
popa
ds
mov
cmp
addb
out
cmp
ret
dec
mov
fst
dec
mov
pop
jbe
lahf
mov
iret
or
cs
jmp
adc
dec
nop
xor
and
sahf
clc
jbe
int
adc
lock
pop
push
fidivs
mov
sbb
sbb
hlt
sahf
xor
pop
iret
int3
sub
sti
and
jl
xor
stos
std
lds
add
addb
xchg
or
into
push
arpl
push
push
and
lea
xchg
scas
add
or
nop
dec
subb
testl
cmp
clc
iret
sbb
mov
add
push
and
rorl
in
jo
cltd
mov
call
cmp
adc
iret
movsb
ret
mov
pop
cmpb
jb
sub
dec
sub
mov
std
int3
jbe
std
sub
je
lock
enter
iret
jp
jl
aad
xchg
cld
into
jnp
mov
test
mov
enter
lods
aaa
push
adc
sbb
add
sbb
lock
aam
mov
cltd
into
push
xchg
js
sbb
mov
jno
mov
or
mov
jp
xor
jne
or
mov
shlb
ds
inc
adc
lock
mov
xchg
dec
xlat
fcmovbe
sbb
push
insb
adc
call
es
notb
adc
addl
test
xor
ds
jle
outsl
out
push
out
jno
mov
mov
les
xlat
fcmovbe
lock
into
shlb
enter
ret
mov
dec
inc
inc
xchg
or
xchg
data16
cmp
out
dec
ljmp
leave
cmp
jbe
adcl
iret
out
jg
xchg
sbb
cmc
jne
std
loopne
mov
sub
int
je
sbb
lods
fidivrl
nop
sub
out
sub
mov
mov
xor
movsb
sub
aam
pop
test
push
insl
jl
cmpsb
shll
outsb
dec
out
sbb
fmuls
lods
fiaddl
pop
xor
popf
push
out
push
xchg
jbe
mov
cwtl
mov
mov
and
clc
sarl
and
push
std
mov
add
mov
mov
push
enter
push
mov
adc
cmp
mov
xchg
scas
stc
jae,pt
out
xchg
add
test
xor
orb
enter
lcall
mov
div
fwait
addr16
ret
loope
stos
xor
cmp
dec
add
dec
dec
out
shl
pop
loop
cld
add
setge
pop
mov
mov
fmul
sub
push
daa
lods
stos
js
out
xlat
inc
xchg
out
and
push
call
mov
push
in
out
imulb
sbb
xchg
mov
ds
scas
xor
loope
xchg
lret
test
adc
or
mov
add
push
mov
pop
add
xchg
daa
add
jle
dec
add
shrl
das
push
adc
shld
nop
add
xchg
push
push
test
add
pop
pop
sub
xor
cwtl
inc
cmc
xor
dec
inc
pop
addl
fildll
jnp
inc
daa
inc
add
push
ljmp
and
mov
das
pop
sahf
sbb
pop
dec
push
icebp
insb
dec
scas
xchg
out
pop
popf
xchg
inc
xchg
mov
jl
cmp
add
cmpsb
dec
mov
roll
cwtl
es
lea
addps
add
mov
mov
mov
inc
enter
pop
outsb
pop
daa
cmpl
and
adc
mov
ja
push
scas
xorl
movsl
mov
inc
push
pop
add
lahf
inc
daa
mov
add
cwtl
cmp
ret
clc
daa
lcall
jb
cmpsl
inc
dec
daa
xchg
jge,pn
test
test
pop
inc
movsl
xlat
adc
test
das
dec
add
push
adc
adc
xchg
xchg
aas
jp
fsubrs
lds
jbe
jg
mov
sahf
cmc
das
aaa
sub
inc
test
mov
int3
mov
cvtdq2ps
adc
iret
popf
mov
pop
push
test
outsl
sub
filds
rcl
aaa
lock
popf
push
inc
cmpsl
pop
out
movsl
fbstp
inc
js
mov
sub
inc
mov
das
rclb
in
das
dec
pusha
xchg
or
into
daa
outsl
scas
sub
lea
xor
sub
aaa
adc
and
fs
dec
rorb
out
pop
daa
xor
addr16
mov
inc
cwtl
inc
push
popa
loopne
sbb
movsl
sysexit
adc
pop
iret
pop
daa
test
pop
not
mov
nop
dec
sub
outsl
inc
mov
adc
outsl
mov
inc
xchg
xchg
jo
mov
imul
test
data16
cmpsb
push
xchg
and
ja
mov
cmp
icebp
leave
lock
sbb
movsb
xchg
data16
enter
or
pop
cmp
subl
fcoms
cmp
cmpsb
movsb
adc
inc
xor
push
jg
and
enter
mov
add
mov
fdivs
repnz
daa
jns
ds
xorb
xlat
mov
mov
and
jge
xchg
inc
call
daa
jno
adc
jb
dec
pushf
cs
frstor
cmp
out
daa
add
mov
or
movsb
ficompl
int3
mov
mov
ficompl
fmul
fwait
and
call
mov
or
lcall
xor
cmp
fidivl
testb
add
mov
stos
dec
jne
adc
stos
loopne
add
mov
xchg
movsb
or
fsub
jb
pop
sbb
pushf
pop
negb
sbb
call
cmp
xchg
cld
sahf
jp
jbe
fistpll
es
and
pop
arpl
mov
call
insb
jle
add
push
mov
scas
repz
xchg
call
movsb
loope
and
xchg
ds
cmp
out
mov
cld
mov
cltd
cld
cmp
xchg
adc
sbb
mov
jle
lahf
push
getsec
push
call
in
push
mov
or
dec
or
negb
cmp
inc
pop
xorb
and
sub
sbb
in
adcb
mov
insl
add
call
mov
enter
xor
xlat
pop
or
xor
inc
daa
sub
cvtdq2ps
or
push
out
dec
cli
adc
jnp
mov
and
pop
popa
jae
or
idiv
rolb
add
dec
mov
aad
mov
sub
mov
movsl
enter
xlat
fimull
js
or
stos
add
js
xchg
mov
xchg
xchg
pop
mov
cmp
xchg
adc
movsl
ljmp
mov
popa
adc
cmp
in
xchg
push
scas
push
jle
add
add
or
repz
ds
dec
test
call
pop
xor
pop
mov
repz
mov
push
mov
out
cmp
mov
enter
xchg
les
cmp
dec
mov
inc
push
pop
lcall
in
adc
jmp
sbb
mov
pop
repnz
testb
repz
pop
mov
scas
sbb
push
in
in
rcl
mov
jb
xor
mov
xchg
and
sti
push
ss
xchg
movsl
hlt
repz
dec
pushf
sub
bound
cltd
out
ficomps
jb
mov
cmp
push
out
adc
es
dec
stc
cltd
mov
pop
out
pop
aam
xchg
insl
aas
mov
insb
sahf
jno
and
cmpsb
andb
aaa
mov
inc
jne
and
xchg
test
dec
leave
inc
inc
ja
gs
push
popa
mov
sbb
pop
mov
xchg
ljmp
or
pop
mov
int
push
xchg
add
dec
adc
iret
pop
or
rolb
jmp
enter
pop
arpl
push
test
cld
mov
jno
ja
push
inc
fs
push
mov
js
sub
dec
and
pop
add
pop
mov
cltd
mov
inc
bound
fmuls
xchg
lods
pop
movsb
enter
fcompl
iret
jle
and
test
xchg
insb
cmc
dec
xchg
jl
movsb
dec
push
and
and
push
jle
and
je
push
xor
lock
je
subb
inc
sub
xor
xchg
jmp
out
cld
push
sahf
fwait
mov
ret
cmp
pop
push
jp
ss
xlat
push
jp
gs
into
mov
ds
pop
xchg
pop
mov
xor
pop
jne
jo
adcb
mov
sar
adc
fildll
test
cmp
in
cmp
mov
sbb
add
call
xchg
jb
xor
mov
sub
push
call
push
pop
xadd
dec
adc
mov
push
and
cs
mov
inc
cmp
sub
xor
xlat
sub
xor
pop
fimull
repnz
add
testb
bound
aaa
lods
xor
lret
inc
jne
je
pop
call
adc
mov
sub
or
pop
test
mov
cmp
imull
xchg
shl
nop
insb
fidivl
or
add
lods
jns
dec
aas
out
ret
dec
fs
mov
adc
push
push
pusha
sub
pop
sbb
insb
add
test
jl
imul
addr16
mov
outsl
pop
aam
jb
aaa
inc
jne
add
inc
push
enter
jae
mov
xchg
pop
push
sarb
cmp
les
stos
mov
mov
and
jp
js
enter
out
cmp
cwtl
enter
daa
imul
arpl
popa
aaa
movsb
shlb
stc
pop
addb
or
mov
push
pushaw
lods
xor
dec
outsl
add
jae
pop
daa
mov
add
xor
inc
push
push
scas
pop
xchg
mov
std
sti
andb
rorl
cmpsl
xchg
fistpll
mov
adc
cmp
insb
test
aaa
popl
pop
fwait
sub
repnz
sbb
jmp
or
push
sub
divb
inc
ja
ret
adcb
addb
pop
mov
or
cwtl
push
xchg
movsb
inc
das
inc
and
sbb
out
pusha
das
or
pushl
daa
mov
or
addb
mov
add
pop
jg
fiaddl
inc
aaa
outsl
mov
aaa
sub
cmp
cmpsl
orb
iret
mov
cld
sbb
mov
mov
not
fcomps
inc
sub
mov
inc
mov
cwtl
cmp
mov
int
in
push
push
mov
int
sub
stos
xchg
cmp
cmpsl
mov
aaa
int
das
and
testl
mov
mov
popl
and
js
push
enter
inc
inc
pop
dec
and
inc
rolb
pop
cmp
lds
daa
pop
xlat
and
iret
inc
push
cmc
add
or
pusha
xchg
nop
inc
rolb
mov
or
mov
insl
jbe
aaa
inc
mov
xor
mov
ljmp
rol
dec
pop
loopne
out
dec
and
inc
mov
pop
pop
into
jp
lldt
mov
pop
daa
push
mov
push
push
aas
xlat
xchg
push
sbb
xchg
sbb
ror
imul
stos
xchg
mov
out
mov
adc
cmc
int3
xchg
xchg
jo
aas
add
enter
and
mov
mov
ljmp
jne
aam
jle
push
adc
rcl
mov
push
cld
cmp
outsl
pop
loope
xlat
fwait
and
mov
adc
test
jns
mov
loopne
insb
cmp
mov
das
shrl
lods
adc
movsb
shl
or
or
cmpsb
aaa
enter
fsts
loop
jbe
ja
call
pop
cmc
test
adc
pop
lea
sub
jecxz
mov
shl
sbb
pop
mov
lret
sbb
sub
cmpsl
and
aas
bound
mov
repnz
dec
xlat
out
cmp
enter
push
dec
sbb
dec
int3
daa
inc
mov
mov
pop
adc
mov
roll
add
sar
lret
outsl
inc
dec
adc
jmp
xor
repnz
and
xor
fisubrs
pop
arpl
negb
push
xor
mov
popa
jl
sub
into
in
fcomps
cmpsl
add
insb
cmp
cwtl
nop
push
xlat
jle
pushw
lock
adc
add
cmp
sub
int3
adcl
ljmp
mov
xor
cltd
adc
xchg
or
or
push
call
and
inc
dec
pusha
push
test
mov
pop
mov
sub
shlb
add
loope
mov
mov
lret
push
lret
ds
cltd
cmpsb
sahf
ss
into
adc
or
pop
xchg
adc
outsl
dec
aam
mov
in
repnz
out
pop
daa
call
jle
mov
addr16
cmp
mov
cmp
jae
jp
or
mov
in
ja
lcall
xor
cld
push
adc
and
in
outsb
repz
aam
daa
ror
std
enter
dec
inc
insl
dec
dec
jge
push
out
out
jnp
aaa
fsub
aaa
inc
movsl
mov
aad
and
cs
ret
push
arpl
cmpsb
in
mov
addb
mov
jae
jmp
out
inc
mov
mov
adc
subb
jmp
mov
mov
into
jp
out
enter
fwait
dec
mov
fisubs
sbb
insl
int
inc
in
pusha
ret
nop
xlat
mov
cmpsb
mov
ja
test
jae
xchg
movsb
mov
shlb
fwait
jp
adc
test
add
shrb
cli
fldenv
mov
aam
out
push
cld
data16
cmp
cmpsl
sbb
ret
loop
lock
and
mov
cmp
in
jmp
scas
xor
iret
pop
hlt
inc
rcrb
aas
std
movsb
je
cli
mov
iret
inc
pop
stos
daa
mov
xchg
xchg
cmp
sub
and
mov
lods
sbb
arpl
pop
mov
neg
arpl
stc
cli
lods
push
and
and
pop
das
mov
inc
jmp
pop
or
in
loopne
add
enter
or
ds
xlat
out
ret
iret
mov
jp
inc
sbb
xchg
pop
mov
es
mov
stc
dec
call
push
xor
cmp
cmp
fimull
not
out
popa
cmpsl
mov
xchg
data16
cmc
xchg
negb
notl
enter
jecxz
or
pop
mov
mov
cld
subl
or
and
sub
insl
bound
adc
dec
mov
dec
jnp
xadd
sub
dec
dec
xchg
push
adc
lods
cli
test
xchg
push
sub
sub
push
into
ficoml
push
outsl
mov
in
pop
popa
xchg
fisubs
aad
sbb
outsb
into
cwtl
push
js
and
mov
sub
add
mov
idivb
mov
or
inc
pop
push
xchg
or
repnz
xlat
sahf
fwait
pop
jns
mov
add
ja
fucom
mov
enter
cmpsl
jp
enter
adc
lea
mov
movsb
movsb
add
call
out
fsubp
test
push
cmp
js
pop
push
ret
int3
aaa
or
add
test
and
ja
xchg
mov
xchg
daa
jle
mov
adc
in
inc
andl
aam
push
cmpl
movsl
inc
sarb
prefetch
and
or
lock
mov
push
xor
daa
addr16
inc
dec
movl
daa
add
cltd
test
and
pop
mov
push
addb
lds
daa
lret
lcall
dec
out
push
push
pop
push
shl
inc
or
xchg
cmpsl
ja
sub
mov
popa
adc
inc
push
adc
adc
inc
mov
mov
sub
pop
and
mov
fwait
adc
inc
inc
push
popl
sbb
add
lea
ss
aas
push
push
mov
push
pop
adc
imul
cmp
push
out
das
pop
cmpsl
out
fmuls
fistpll
mov
and
popl
inc
xor
add
bound
notb
xlat
daa
push
fildll
dec
push
inc
add
push
lock
pop
cmpl
mull
inc
cmp
test
push
fldt
dec
lcall
and
adc
jmp
daa
addr16
adc
sbb
fisttps
test
inc
pop
adc
mov
daa
daa
clc
mov
xlat
push
iret
js
adc
sub
add
and
xor
clc
push
test
mov
pop
sub
fsubs
popf
js
es
pop
push
adcl
aaa
sahf
js
mov
xchg
aaa
scas
pop
out
iret
ss
or
xlat
outsl
cmp
outsb
lret
fbld
and
push
lock
mov
ja
aam
xchg
test
cmpsl
jns
xchg
pop
cmp
je
mov
sbb
jecxz
push
jp
inc
clc
mov
pop
in
mov
mov
test
dec
mov
mov
pop
lods
sbb
push
je
cmc
mov
lahf
mov
es
cwtl
test
xchg
out
cvtdq2ps
rol
loop
add
or
pop
and
dec
stc
mov
xchg
outsb
out
aaa
add
int3
insl
xchg
inc
mov
imul
shrb
mov
jne
aas
mov
ds
xlat
cld
inc
sub
ljmp
mov
dec
enter
das
mov
ret
xlat
testb
int3
cmpsb
repnz
jo
fmul
cmp
imulb
cmp
les
add
jl
cmp
mov
pop
dec
cld
test
inc
pop
push
sub
lcall
cwtl
jbe
in
daa
xor
cmc
js
cmp
lods
aam
or
pop
cmpsb
ljmp
aas
je
insl
mov
pop
gs
inc
pop
add
and
push
pop
mov
adc
jbe
cmpsb
pop
frstor
sbb
pop
js
inc
cld
aam
lret
xor
xlat
pop
lock
inc
cwtl
and
xchg
orb
stos
loop
daa
stc
test
cmp
sar
xor
mov
mov
mov
adc
pushf
jle
mov
dec
sub
rcr
xchg
xchg
jg
and
dec
test
hlt
add
xchg
sbb
jp
push
cmp
lods
out
incb
jo
mov
push
cmovns
push
imul
jo
fisubrl
sub
jbe
mov
sub
push
adc
jne
subb
xor
sub
push
or
inc
mov
adc
pop
xlat
mov
ss
fidivs
cmp
outsb
pop
xlat
dec
lahf
mov
ds
jae
andl
mov
lret
mov
mov
cld
mov
xchg
loope
test
jle
or
idivb
insb
adc
aas
stc
mov
testb
pop
or
sub
sahf
test
sbb
dec
inc
xor
std
loop
jns
into
jno
inc
push
fmulp
push
aas
mov
imul
cmpsb
push
cltd
cmp
test
testl
or
repnz
pop
sarb
filds
mov
inc
push
mov
xor
fs
push
rcrb
aaa
xchg
enter
dec
stos
ret
add
in
orl
or
lret
jne
mov
sbb
sbb
mov
push
pop
mov
mov
push
cwtl
icebp
inc
jae
loop
adc
mov
jle
cmp
jb
adc
icebp
test
rol
sub
xchg
pop
xchg
test
test
dec
pushf
imul
test
in
lea
ds
shlb
push
jno
test
loop
jle
inc
cld
pushf
lods
ret
jmp
inc
cmp
xchg
icebp
call
ds
xchg
fs
push
rolb
jecxz
or
push
sarl
jo
jnp
pop
sahf
in
lock
test
lcall
xchg
adc
cld
fdivrl
or
ja
mov
dec
sahf
insb
int3
push
dec
xchg
mul
pop
pusha
dec
sub
loopne
ror
push
push
or
in
push
imul
add
mov
in
or
and
sub
jg
not
into
cmpsl
jbe
mov
pop
test
xchg
add
adc
popf
call
je
sbb
adc
popa
fwait
in
sub
daa
test
aam
pusha
lea
adc
test
xor
push
pop
push
scas
out
xlat
or
mov
bound
dec
lods
in
es
sub
fsubrs
cmp
mov
iret
dec
and
sub
jns
aaa
jo
and
lea
mov
sub
icebp
lahf
rcrl
xchg
lock
mov
sbb
scas
pushf
mov
mov
dec
sarb
scas
and
mov
mov
jle
sbb
sub
mov
arpl
pop
cmc
out
int3
jecxz
call
xor
enter
inc
or
dec
jno
add
push
xor
pop
in
int3
loop
cld
andb
orb
out
dec
xor
je
out
aad
sub
popa
je
repz
or
call
repnz
and
jl
pop
or
mov
mov
pop
nop
lods
sub
enter
cmpsl
pop
inc
outsl
fsubr
std
or
repz
or
cmpsb
cmp
hlt
int3
mov
outsl
lock
pcmpeqb
mov
mov
pop
lcall
test
fists
test
pop
xor
test
int3
mov
mov
dec
pop
adcb
into
xchg
mov
push
jbe
inc
mov
fwait
xor
mov
xor
cwtl
pop
and
stos
mov
or
push
dec
or
mov
stc
xorb
inc
fadds
xlat
mov
pop
clc
cli
dec
call
nop
jecxz
cld
cmp
stos
dec
add
sub
and
mov
adc
ds
cmp
movsl
sahf
mov
lahf
add
jno
push
mov
outsl
movsbl
jae
jno
mov
sub
faddl
fs
pop
xchg
lahf
mov
adc
imul
add
sub
movsb
push
fdivs
cmp
or
mov
stos
cld
cld
jae
push
test
jb
mov
push
and
arpl
mov
sub
dec
lahf
rorb
test
mov
mov
es
das
mov
cld
inc
xchg
out
fdivrs
mov
jbe
movsb
pop
and
fwait
mov
or
inc
ljmp
dec
or
or
movsb
cmc
adc
jp
sub
add
addr16
sbb
mov
je
das
or
into
xor
adc
inc
scas
xlat
adc
sbb
imul
call
xchg
or
rolb
push
out
call
cmp
in
cwtl
repz
add
xlat
insl
repz
sbb
xchg
cli
push
in
mov
cmova
test
nop
int
xor
or
xchg
mov
add
adc
fcoml
push
push
dec
cwtl
scas
dec
dec
stos
ror
jo
mov
cwtl
jno
mov
sbb
push
std
int3
dec
and
sbb
mov
test
xchg
setge
dec
hlt
lock
mov
mov
or
add
dec
and
pop
mov
and
ja
cmp
lods
adc
mov
add
jb
test
les
cmpsl
mov
dec
div
lock
sub
es
fcomip
neg
aas
lods
mov
adc
mov
fisubrs
sbb
je
enter
cmpsl
scas
ljmp
cmp
mov
divb
or
inc
add
adc
in
sti
gs
pop
pop
xor
vmptrld
or
cmp
and
push
mov
cmp
ror
jmp
sub
or
add
push
cli
inc
push
sub
sbb
loopne
xchg
xor
xchg
mov
les
dec
movsl
dec
insl
pop
enter
test
mov
pop
add
pop
sub
sti
push
jae
bswap
icebp
out
lret
mov
xchg
and
cs
pop
repnz
push
ja
push
stos
mov
ds
sbb
xor
push
repnz
les
add
in
gs
cli
sbb
jnp
jne
mov
push
pop
les
xchg
incb
pop
icebp
call
in
fildl
xchg
not
loope
mov
dec
lret
imul
adc
insb
test
mov
or
cmp
pop
push
and
and
fiaddl
add
clc
mov
fisubl
pop
adc
mov
aam
int
in
test
in
and
ret
mov
xlat
notb
mov
ja
add
cwtl
test
outsl
addr16
mov
rol
and
jo
fnstcw
leave
adc
pop
icebp
or
dec
cmp
add
xor
adc
enter
mov
ficoml
stos
add
xchg
jecxz
cmp
add
les
xchg
cmpsl
xchg
lcall
data16
add
sbb
or
addr16
out
cmp
es
test
sbbb
mov
inc
sbb
aaa
push
push
xchg
in
sbb
iret
insb
adc
nop
add
cmp
bound
add
jmp
and
or
test
cmpsb
and
jne
je
sub
dec
imul
or
mov
stos
cmp
cmpsb
push
fdivr
aad
movsl
pop
shrb
xor
dec
gs
movsb
leave
adc
mov
push
lret
mov
add
sbb
adc
not
inc
out
cmp
adc
ja
enter
sub
loop
xlat
mov
movsl
bound
setno
scas
test
mov
out
and
sbb
mov
add
test
repz
dec
das
insb
dec
inc
push
jmp
mov
cmp
ss
sbb
icebp
dec
int
out
mov
cmp
stos
jb
fstl
movsl
or
dec
xorl
test
mov
xor
aam
cmpsl
or
and
lods
mov
outsb
sbb
sub
andb
and
stc
nopl
adc
xchg
clc
and
idivl
jb
test
neg
xor
les
mov
scas
push
mov
mov
and
ffreep
sub
repnz
arpl
fldt
daa
es
or
les
clc
xlat
test
enter
cmpsb
mov
outsl
jo
andb
pop
andb
jbe
mov
loopne
ret
repnz
mov
add
xor
jns
mov
sbb
xchg
jl
enter
dec
and
or
jns
test
push
adc
pop
hlt
and
outsl
mov
bound
dec
fwait
pop
add
mov
xchg
popa
aad
in
idiv
jns
jecxz
cmp
pop
or
adc
inc
mov
or
jnp
inc
je
pushf
sub
test
test
in
push
out
dec
pop
iret
pop
hlt
int3
lods
vpmacswd
cmpsl
pop
mov
push
push
xchg
ret
mov
push
cs
and
repnz
call
mov
cmp
sbb
xor
push
in
and
shrb
loopne
jp
cmp
mov
cltd
mov
add
ljmp
xor
cmp
or
das
mov
or
scas
jbe
sub
cmp
xchg
ficoml
cmp
cld
cmp
inc
add
push
loopne
push
daa
enter
idivb
mov
imul
insl
in
fldcw
or
mov
mov
daa
icebp
aas
outsb
fisubl
adc
pcmpeqb
jp
addr16
loop
and
sbb
push
nop
cmp
insl
add
mov
sbb
jle
popa
push
mov
adc
xor
pop
jp
jno
insl
roll
imul
push
cmp
push
mov
in
adc
pop
gs
lret
ds
aas
mov
in
jno
lea
repnz
mov
mov
test
icebp
add
lock
addl
inc
inc
movsl
movsl
cmp
sbb
mov
sbb
add
mov
and
and
jl
loopne
hlt
mov
lea
jb
ffreep
js
ja
push
cmova
pop
clc
adc
lahf
movl
movsb
xchg
sbb
repnz
mov
or
test
ljmp
inc
adc
mov
in
shlb
lods
in
out
pop
pop
ficompl
cmp
dec
movsl
mov
pop
jmp
sub
outsb
movsb
push
sub
daa
pop
xor
xchg
mov
inc
ljmp
outsb
shrb
rol
push
jne
mov
adc
sub
push
pop
cmp
mov
or
fildll
adc
cmp
movsb
data16
jb
test
cld
sti
mov
je
aaa
call
stos
stos
ficomps
pop
loopne
xchg
push
stos
inc
mov
cmp
je
sbb
mov
into
sbb
xor
mov
mov
mov
popa
push
mov
mov
mov
adc
enter
daa
cli
lea
mov
loop
adc
or
push
push
adc
std
xor
in
aas
cmp
sbb
sti
es
jg
lahf
daa
mov
dec
imul
jmp
outsl
cld
or
jo
sahf
pop
loop
pop
and
pop
mov
lcall
test
push
pushf
int
lods
repnz
adc
dec
dec
lea
fldl2e
jmp
xor
clc
gs
mov
pop
aas
leave
mul
dec
popa
dec
insl
arpl
cs
ljmp
sbb
jle
cmpb
pop
pop
pushf
add
pop
in
ljmp
pushf
cmp
nop
sub
jg
mov
subb
imul
xchg
repz
pop
mov
in
xchg
mov
pop
es
adc
arpl
movsl
inc
fidivrl
mov
adc
push
scas
lds
or
inc
push
enter
stos
adc
lods
lds
push
and
testb
jae
xchg
pop
push
adc
sbb
mov
add
cwtl
test
or
std
push
in
adc
cmpsl
movsb
mov
lahf
test
cmc
xchg
dec
mov
sub
jns
es
insb
mov
test
icebp
mov
scas
xlat
adc
repz
sub
pop
xchg
je
mov
mov
pop
add
loop
je
jo
mov
adc
sub
lods
leave
mov
mov
add
mov
call
mov
jns
lret
dec
js
xlat
ja
mov
fildl
and
enter
dec
or
bound
in
jecxz
pop
xor
in
push
cwtl
push
sbb
mov
cmp
sbb
into
sti
cmp
push
insb
mov
rcrl
push
das
mov
push
addr16
es
sub
inc
cmp
addr16
nop
mov
out
inc
adc
add
and
xor
dec
enter
xchg
mov
cmp
jg
and
mov
push
in
mov
mov
add
jg
daa
xchg
cmpb
je
mov
inc
push
jg
out
mov
adc
dec
cltd
sahf
call
out
cli
mov
mov
mov
stos
sub
adc
leave
or
cli
les
push
popa
jb
inc
je
dec
jge
sub
jmp
mov
icebp
xchg
lcall
and
jnp
jb
and
enter
mov
outsl
xchg
enter
in
xor
stos
push
mov
lea
push
addr16
int
mov
or
mov
jbe
orl
and
shr
dec
je
out
dec
pop
fs
push
ds
mov
push
push
in
or
test
mov
dec
aad
out
adc
mov
xlat
in
jb
cmp
fs
adc
test
push
push
lcall
test
push
and
shlb
dec
cli
data16
add
lahf
adc
shld
push
mulb
ja
xchg
adc
aaa
inc
jg
test
test
xchg
jo
daa
dec
sti
xchg
aas
xlat
xchg
popa
sub
jmp
loop
enter
lock
not
jno
rcll
clc
xchg
dec
xor
sahf
cli
inc
sbb
cmp
pushf
enter
mov
add
cmpsb
and
xchg
mov
add
movsb
inc
arpl
xlat
xor
adc
out
add
fistpl
dec
inc
sub
cltd
push
mov
loope,pt
add
mov
test
add
hlt
push
ss
fmul
loopne
cli
mov
push
ljmp
stc
mov
pushf
mov
dec
faddl
push
adc
adcb
mov
in
cmp
psubsb
or
int3
mov
cmp
xor
jne
imul
sub
mov
mov
mov
xor
xchg
cmpsl
nop
cmp
push
adc
xchg
iret
notb
push
push
pop
fmuls
scas
mov
int3
lahf
mov
les
mov
pop
in
xchg
inc
test
pop
or
cld
lods
das
cmp
xchg
adc
fisubl
dec
sub
mov
adc
push
and
xchg
jbe
mov
movsl
insl
jae
dec
sub
adc
push
mov
xchg
pop
fs
pop
mov
jl
xor
fdiv
outsb
outsl
fwait
mov
aaa
mov
ds
pop
in
mov
std
cwtl
insb
rorl
sahf
add
xor
fs
add
sbb
cwtl
adc
add
aaa
loop
negb
ja
mov
push
xor
xchg
push
mov
or
and
popf
fucomi
loopne
test
je
or
rolb
aaa
inc
fmull
cmpsb
stc
scas
xlat
lock
mov
scas
imul
push
cmp
out
jno
ljmp
aam
adc
pop
pop
scas
das
rcrb
cmp
push
xor
jecxz
add
mov
mov
stos
loopne
lret
pop
mov
push
xchg
sub
dec
pop
xchg
push
cmp
in
mov
fmull
cmc
aam
ljmp
mov
cwtl
out
loope
push
jp
addb
sbb
outsb
xor
and
cmpsb
mov
xor
push
notb
mov
xchg
xchg
call
pop
xlat
test
sar
push
movsb
shll
dec
dec
es
jmp
sub
inc
dec
jp
and
jne
test
ret
cltd
xchg
call
fwait
pop
inc
pop
enter
push
daa
js
push
das
popf
inc
sub
in
in
sahf
xor
test
dec
xchg
adc
pop
fcom
adc
xor
or
roll
inc
cmp
push
cltd
jae
sbb
inc
push
into
shrb
in
cld
inc
outsb
and
sub
test
and
shr
repnz
add
mov
sbb
dec
adcb
hlt
xchg
push
in
add
add
sti
mov
sbb
sbb
jp
insl
xlat
xchg
and
movsb
mov
add
fsubs
aaa
sbb
pop
cmc
cmc
mov
mov
mov
or
cs
xchg
aad
add
lret
dec
ror
cli
clc
jb
xchg
add
repnz
jp
aam
xchg
repz
pop
and
lret
dec
cli
out
inc
cwtl
lret
mov
les
fsubr
pop
push
or
outsl
xchg
fsubrs
jg
sbb
or
dec
out
loope
cwtl
mov
sub
mov
pop
stos
pop
fwait
cmpsb
cmp
stos
aas
bound
mov
pop
add
aas
or
push
not
inc
add
cmpsb
cmp
cmp
pushf
int
add
aad
cltd
xchg
fwait
pop
mov
cwtl
lahf
aam
or
pop
lret
std
lret
jl
leave
pop
hlt
das
inc
das
sbb
stc
mov
push
cmpsb
pop
out
mov
xlat
sbb
inc
pushf
in
mov
loopne
pop
xorb
call
add
mov
push
mov
out
or
cmp
add
mov
sub
pushf
cmp
lea
xchg
jg
adc
into
lahf
mov
mov
ljmp
sub
or
movsl
cld
ret
jl
cld
ret
jp
push
pop
faddl
mov
andl
daa
in
push
pop
stos
imul
adc
iret
ficomps
mov
push
in
rorb
xchg
js
inc
cmpsb
daa
or
pop
jle
test
push
xchg
test
test
shr
pop
fmuls
jbe
test
icebp
add
popa
pop
iret
mov
push
je
sub
xchg
shlb
push
lahf
ds
aam
ret
cmp
adc
pop
xlat
lock
jle
cmp
push
adc
jl
aam
in
cld
and
cs
pop
pop
bound
pop
cmc
xor
push
fsubrs
mov
cmp
pop
jg
jno
mov
jb
or
xor
cmpsb
pop
sub
mov
push
and
cmp
sub
lock
sub
xchg
add
out
inc
pop
dec
pop
push
pop
ret
lret
enter
cwtl
and
adc
hlt
leave
aad
inc
sub
xchg
mov
xchg
inc
jb
lock
push
movsb
push
mov
dec
dec
push
adc
scas
in
lahf
and
clc
xchg
adc
adc
adc
ret
mov
hlt
cwtl
outsb
jg
inc
leave
adc
xor
add
dec
scas
fistpll
dec
repnz
adc
push
fisubl
xchg
shlb
add
pop
ds
insb
loop
enter
sub
popw
adc
sbb
dec
enter
mov
jae
pushl
inc
adc
lods
jmp
xchg
or
orl
add
mov
push
stos
or
or
mov
hlt
loopne
cltd
mov
cli
dec
pop
pop
dec
inc
pop
sub
out
jl
ficoms
add
add
loopne
aaa
notb
and
adc
enter
sbb
int
mov
fsts
fwait
jno
mov
adc
adc
fbstp
out
pusha
loopne
loope
jge
adc
lock
aad
lods
pop
shlb
mov
ret
lea
rcrb
clc
mov
or
cmc
push
dec
mov
jo
pushf
outsl
fcoml
push
push
pop
fs
outsb
xchg
sub
dec
xor
shl
loopne,pn
push
arpl
push
sbb
add
xchg
mov
test
andl
ss
sbb
jecxz
out
mov
pop
xchg
mov
push
mov
fucomip
mov
mulb
cltd
adcl
test
outsl
lret
aam
and
scas
pushf
cmp
mov
fs
cmp
hlt
mov
inc
dec
in
cmpsb
sub
xchg
insb
hlt
xchg
pop
xor
fmull
sbb
mov
cld
mov
mov
or
test
rcll
in
pop
push
aas
scas
push
add
popf
lods
sub
fcmovb
xlat
jbe
pop
or
or
push
mov
ss
jbe
mov
dec
cmpsl
pop
stos
xor
es
subb
cmp
dec
pop
mov
mov
mov
add
jne
pop
in
stos
cmp
cmpl
les
cmpsb
or
inc
adc
xlat
xchg
fdivl
inc
xchg
sub
mov
stos
cli
xor
mull
fs
repz
lea
and
test
push
dec
cmp
outsl
loope
xchg
movsb
in
fildl
inc
popa
nop
cmpsb
adc
mov
xchg
dec
jns
jb
imul
mov
dec
loopne
out
push
cld
inc
movsl
outsl
nop
fildll
cs
roll
aas
fdivr
aaa
stos
push
add
scas
jp
cmpl
add
faddl
jns
cmp
xlat
mov
mov
enter
dec
adc
pop
mov
jle
inc
mov
aam
mov
inc
movsb
or
sbb
int3
adc
enter
or
mov
inc
add
mov
jge
cmpsl
jo
subb
mov
out
in
addl
and
dec
push
jo
lods
incb
xchg
lods
out
pop
fwait
jno
xor
add
sub
fldz
sbb
icebp
pop
lods
daa
lods
cmp
inc
movsb
dec
arpl
adc
addr16
sub
pop
push
cltd
shlb
dec
xchg
inc
int
movsl
mov
jo
sub
pop
cld
push
adc
int3
add
jno
adc
mov
and
inc
mov
and
stos
scas
lods
push
push
dec
lods
je
dec
movsb
int3
pop
pop
in
or
pop
lea
sub
ret
cld
lahf
lods
stos
mov
push
fidivs
mov
test
xor
movsb
mov
pushf
pop
or
testl
pop
imul
mov
cmp
test
push
idivl
pop
scas
frstor
adc
scas
enter
scas
and
sub
flds
mov
jo
adc
jns
jmp
test
jno
push
mov
dec
test
mov
mov
movsl
pop
xchg
jae
lods
cmp
adc
mov
or
add
out
outsl
pop
outsb
jne
enter
pop
ljmp
jb
push
push
mov
adc
rorl
mov
cmp
or
test
inc
sets
mov
adc
adc
xchg
adc
sub
jp
jle
out
pushf
fs
leave
int3
rol
sub
push
into
push
outsl
aas
enter
sahf
cld
dec
je
jb
xchg
int
aaa
xchg
and
or
pop
xlat
out
repnz
add
movsl
sub
outsl
sbb
cmpsb
ret
mov
cwtl
and
rcll
xchg
pop
call
subl
and
sub
and
xor
mov
sti
mov
mov
cmpsl
enter
mov
fdivrs
psrlq
and
loope
les
enter
and
sahf
xchg
adc
push
test
lock
stos
cwtl
cmc
in
cmp
cmp
pop
mov
dec
xchg
push
mov
test
sub
adc
lods
repnz
imulb
mov
xchg
adc
jne
testb
push
cld
adc
test
out
and
xchg
mov
adc
shrb
or
aad
dec
sarl
mov
out
mov
gs
ss
add
test
sbb
or
clc
or
movsb
jg
aam
push
enter
int3
cmp
vmread
stc
sub
nop
inc
js
push
mov
hlt
cwtl
stos
mov
in
adc
jnp
loope
sub
jbe
or
xor
and
xchg
in
jns
xchg
pop
and
jp
mov
sub
mov
xlat
call
jnp
mov
mov
aad
jmp
add
mov
mov
insb
mov
and
push
push
call
rep
cmp
inc
sub
popa
out
nop
sahf
and
mov
je
idivb
cmp
cltd
pop
fwait
dec
mov
xchg
cmp
in
inc
out
fcoml
jno
inc
cmpsl
dec
or
jae
gs
fs
int
cs
and
enter
addr16
dec
mov
mov
cmpsb
shr
gs
xchg
ja
fsts
mov
add
mov
lods
jmp
das
push
outsl
in
in
cmp
dec
adcb
xor
cmp
cmp
mov
mov
jbe
ljmp
mov
shlb
pop
mov
in
add
jp
or
or
push
gs
push
call
sbb
ljmp
sub
jnp
xor
fimull
daa
lods
ds
xchg
add
sub
pop
xlat
add
jne
aas
sbb
and
inc
les
and
mov
enter
mov
rolb
outsl
or
xlat
nop
adcb
mov
push
push
mov
addr16
jmp
adc
mov
dec
popl
push
push
sub
hlt
adc
xor
sahf
clc
nop
in
adc
pop
loopne
xchg
stc
or
gs
push
test
js
push
lods
repnz
and
xchg
into
xchg
mov
cs
pop
xlat
and
or
jne
jae
scas
pop
insb
xchg
inc
outsb
push
stc
fs
add
jo
lock
repz
jo
icebp
cli
in
movsl
fistpl
cmp
pop
roll
aad
mov
cmp
in
mov
iret
jne
test
rol
orb
nop
pop
movl
adc
xlat
pusha
add
addr16
or
and
sub
sub
mov
and
jnp
shll
jnp
mov
inc
sub
jp
mov
ret
fisttpl
iret
mov
aas
loopne
inc
fwait
scas
adc
sarl
daa
popl
push
inc
mov
les
mov
mov
stos
leave
scas
push
movsl
mov
xor
push
lods
movsl
lds
sub
or
out
jg
ficoms
mov
sbb
sar
lahf
xchg
xchg
mov
fsubrp
pop
and
fdivs
xlat
push
and
mov
lea
clc
test
mov
test
adc
movsb
inc
pop
out
push
adc
xchg
lods
cld
ret
outsl
xchg
or
ficomps
inc
negl
dec
out
pop
or
and
mov
sub
cld
ds
jns
mov
lods
push
inc
push
pop
xor
inc
insb
sub
cmp
sbb
sub
fbstp
fcomip
ret
adc
cmp
mov
rcrl
add
add
fmull
js
je
pop
push
jb
in
je
mov
nop
imul
fmull
mov
gs
aas
mov
jl
push
xor
les
mov
sbb
push
pusha
mov
cli
int
adc
lods
xchg
data16
lret
loop
xor
cmp
mov
xor
fldt
sti
ret
out
xlat
sub
ds
dec
hlt
mov
lcall
fs
cmpsb
cld
das
mov
pop
mov
subb
pop
or
std
cwtl
adc
and
pop
clc
mov
mov
pop
aam
sub
xor
in
add
pop
add
sub
inc
and
das
cmp
inc
jg
popa
push
xor
shll
lahf
aaa
pop
or
xchg
jnp
cmp
xchg
ss
adcl
fnstenv
daa
inc
fnstcw
cmpsl
cmp
pop
cmc
mov
xchg
or
lcall
sbb
fists
pop
mov
outsl
cmpsl
or
pop
inc
dec
shlb
mov
add
mov
iret
cmpsl
aad
movsb
sub
cwtl
cmpsb
inc
xlat
adc
add
cmpsl
jo
lock
fcomps
lret
test
fldt
push
test
pop
or
scas
movsl
inc
pop
xchg
pop
shlb
and
pop
sub
movsl
xchg
push
mov
xchg
cmp
add
jg
sahf
inc
adc
inc
adc
push
push
data16
and
movsl
loopne
movsl
or
out
cld
cwtl
push
xchg
mov
xor
xchg
add
xor
daa
dec
aas
daa
or
sahf
ss
xor
jbe
fbstp
js
daa
inc
daa
and
or
test
daa
movsl
mov
inc
cmp
sub
add
lds
mov
and
inc
jb
fists
adc
dec
mov
repz
fsubs
aad
xor
push
testl
outsl
pop
jnp
pop
jo
aas
test
dec
sub
sub
xchg
pusha
push
xchg
ss
cwtl
js
xor
lea
adc
xor
push
or
cmpsl
aad
arpl
pop
xlat
xchg
mov
pop
inc
cmp
test
or
cwtl
push
nop
push
clc
pop
pop
adc
xchg
clc
dec
pop
dec
insl
iret
sub
mov
lahf
pop
sbb
lea
lahf
daa
inc
dec
add
cmp
cmp
push
xor
jbe
rorb
sbb
sti
adc
dec
adcb
xlat
out
add
gs
jl
mov
arpl
xchg
xchg
aam
aad
inc
mov
in
dec
mov
adc
movsb
mov
enter
adc
lods
lret
cli
pop
push
inc
sub
insl
and
cmpsb
pcmpeqb
out
push
mov
call
sbb
or
idivb
inc
movsb
add
call
sbb
scas
testl
flds
push
mov
push
sahf
stos
pop
shll
mov
test
xchg
xor
sub
add
out
push
mov
xor
xlat
cmp
pop
jge
lahf
pushf
shll
add
lock
lock
lcall
lock
jle
push
mov
sub
outsb
add
push
enter
and
push
andb
push
jb
jmp
or
sahf
add
fsubr
push
sub
add
or
jmp
dec
lock
enter
and
pop
push
adc
jbe
icebp
adc
shll
test
mov
push
enter
loopne
xchg
or
pop
arpl
and
loop
fwait
js
sarl
adcb
int3
adc
aad
outsb
lcall
xlat
les
push
scas
mov
pop
sti
incb
xlat
dec
aam
or
movl
cwtl
jns
jge
mov
enter
sub
insl
aaa
dec
daa
lret
push
xchg
adc
enter
mov
mov
cmpsb
sbb
leave
push
cli
int
mov
xchg
xchg
js
stc
jo
and
lock
stos
push
jbe
dec
cmpsl
mov
pop
jle
loopne
movl
addr16
jge
pusha
pop
push
enter
ds
ljmp
mov
sub
rorb
mov
jg
pop
adc
je
and
into
mov
push
mov
mov
adc
jmp
dec
push
ds
data16
pop
lea
test
jg
roll
mov
fnstsw
aas
in
xchg
mov
dec
imul
enter
push
jmp
fistps
mov
popf
cmp
sarl
xchg
jg
lret
mov
orl
or
xchg
pop
jb
jp
mov
test
mov
icebp
add
mov
cli
idivl
sbb
add
cwtl
add
sbbb
pusha
out
fnstsw
cmp
pop
cld
dec
leave
pop
mov
fwait
xchg
cmp
xchg
push
repz
jl
cmp
aad
and
dec
push
int
aaa
bound
mov
aaa
cmpsl
jge
leave
mov
push
push
push
in
fimull
test
bound
mov
mov
cmp
xlat
mov
enter
daa
arpl
adc
mov
enter
jne
push
jg
adc
push
or
dec
adc
add
dec
push
mov
dec
xchg
pop
jae
mov
sbb
fisttps
add
xor
and
cltd
dec
sub
push
pop
pop
cmp
or
ds
aam
pop
push
xor
js
dec
jne
sub
cltd
add
cmp
jge
lret
cmp
inc
imul
incb
pop
mov
adc
pcmpeqd
inc
jg
sbb
pop
adc
dec
inc
or
clc
outsl
xchg
xor
inc
in
gs
cltd
add
push
stos
mov
jl
andb
in
mov
mov
mov
add
dec
cmp
lret
sub
xchg
movsb
add
mov
mov
in
jb
or
sbb
xor
loop
dec
nop
mov
add
pop
and
push
jo
gs
mov
nop
hlt
js
outsl
sbb
xlat
jmp
inc
popa
mov
add
lods
and
xchg
jnp
stos
or
jge
push
inc
pop
jae
scas
xlat
aaa
insb
adc
rorl
inc
pop
out
leave
mov
fs
adc
and
cli
push
inc
hlt
clc
push
aas
shlb
xlat
lock
mov
ja
xchg
jne
or
push
jmp
mov
xchg
pcmpgtw
stos
ret
xchg
ds
xlat
scas
dec
mov
add
in
sbb
enter
out
cmp
fwait
in
or
call
xchg
or
les
mov
and
mov
rorl
and
into
lahf
sub
aaa
ret
insb
jnp
mov
mov
pop
adc
movsb
mov
adc
sbb
imulb
hlt
pop
mov
sahf
movsb
xor
and
mov
add
out
daa
jne
mov
push
jnp
adc
and
ljmp
dec
loop
sub
xorb
push
dec
push
jle
inc
int
push
or
push
sahf
lahf
pop
adc
cmc
scas
das
js
xchg
lahf
in
push
push
push
andb
pop
sub
out
iret
sub
je
push
in
outsb
mov
decb
lock
dec
notb
pop
cmp
int3
sub
mov
or
cmp
adc
sub
cmpsb
xchg
ljmp
clc
mov
aas
loop
enter
popf
loope
and
adc
out
outsb
rcll
mov
dec
inc
jb
lds
pop
mov
pusha
mov
jp
out
pop
lea
popl
cmp
push
and
cmp
rorl
das
les
push
enter
mov
jo
sub
adc
loopne
cmp
xor
xchg
mov
scas
sub
idivb
and
subb
roll
xchg
outsl
ret
and
les
pop
add
add
stc
daa
jo
cli
pop
lcall
and
rcr
and
out
cmp
or
in
add
mov
movhlps
cli
adc
dec
xchg
dec
sub
je
cmp
outsl
dec
lret
sub
in
and
mov
add
xlat
sarl
pop
lea
mov
sbb
ljmp
xor
cld
sub
enter
dec
in
mov
and
clc
dec
or
or
and
sub
mov
mov
xchg
dec
mov
cmp
fwait
mov
orl
xchg
lods
and
mov
sbb
lods
pop
repnz
mov
stos
jb
fcomps
pop
pop
add
sbb
dec
mov
mov
dec
inc
roll
hlt
sbb
sbb
fs
jp
pop
dec
pop
xchg
add
and
sub
sub
and
pop
and
es
mov
xor
add
out
pop
shlb
jnp
movsl
enter
add
mov
lret
mov
cld
cmp
fsubr
xchg
push
gs
scas
in
mov
out
mov
movsl
rcll
jne
fcomip
mov
mov
push
rorl
in
outsl
subb
loopne
dec
inc
mov
pop
cltd
jp
repnz
mov
mov
sub
out
lock
cmp
sub
and
mov
mov
push
dec
pop
mov
idivb
mov
scas
test
int
adc
inc
lea
int3
outsb
adc
enter
inc
adc
popa
stos
rolb
lock
lea
dec
test
fwait
sbb
test
pop
loopne
push
fmull
fmuls
inc
inc
dec
jnp
movsb
mov
push
push
adcl
or
cmpsl
notl
fidivs
push
cmp
xchg
mov
pop
push
xor
fsubrs
dec
popa
and
jp
test
pop
jle
scas
and
in
lret
addr16
cli
test
jmp
or
mov
push
or
jno
pushf
pop
lds
sub
sub
aas
outsl
inc
mov
push
lret
stos
xchg
fwait
mov
das
lcall
or
push
call
inc
or
ud2
jb
leave
or
js
stos
push
int3
cltd
sub
insb
pop
sub
dec
xor
pop
xchg
mov
ljmp
and
pop
or
or
xchg
sub
inc
outsw
call
or
les
xorb
pop
xchg
movsb
bound
in
adcb
cmp
xor
mov
daa
push
xchg
xchg
add
iret
mov
xchg
pop
in
pop
sti
dec
outsb
and
mov
cmp
jge
dec
popf
add
jnp
push
inc
aas
pushf
std
test
push
imul
pop
cmpl
cmp
pop
pop
or
sbb
mov
lcall
rol
and
stc
jmp
sbb
sub
pop
pop
mov
fdivp
fs
stos
push
insb
xorb
or
das
cmp
mov
mov
or
sbb
insb
bound
pop
repnz
jecxz
and
call
cmpsb
and
repz
sbb
out
jp
inc
dec
push
jl
sub
mov
inc
ljmp
adc
add
push
into
testb
jecxz
or
clc
int
jp
mov
jae
lea
pop
mov
xchg
adc
mov
cmp
out
mov
push
add
jl
lods
orb
push
or
sar
xor
outsb
dec
sub
xor
daa
xchg
iret
cmp
xor
adc
xchg
test
or
dec
stc
in
mov
xchg
pop
nop
inc
aaa
and
inc
xchg
pop
xlat
jcxz
sbb
mov
or
dec
mov
ss
je
cmp
shll
pop
and
aaa
sti
mov
mov
cltd
and
jmp
dec
bound
push
xlat
push
fbld
fnstenv
dec
xor
js
jnp
cs
add
add
or
sub
inc
in
xchg
inc
and
cmpsb
lods
sbb
pop
ljmp
mov
mov
and
dec
xchg
popw
pop
out
pop
mov
and
mov
or
gs
push
scas
out
ljmp
in
add
mov
jae
push
pop
jle
sti
dec
mov
cmp
sti
pop
mov
cmpsl
imul
clc
test
mov
pop
add
push
subb
push
sbb
js
pop
notl
out
jno
and
mov
aaa
and
leave
xchg
pop
mov
pop
insb
or
test
hlt
cmovge
pushf
call
fmull
xchg
adc
enter
lods
xchg
jp
fisubs
ljmp
not
dec
in
movsl
arpl
out
mov
cmp
add
in
pop
cltd
ja
push
push
je
out
adc
int3
sbb
aaa
test
pop
bound
cwtl
add
js
test
lods
lcall
mov
push
inc
push
mov
sete
outsb
xchg
xchg
sbb
int3
adc
call
mov
xchg
cmpsl
jbe
add
mov
insb
xchg
out
mov
pop
sub
add
pop
dec
cs
add
imul
mov
pop
pusha
addb
outsb
mov
fstpt
aas
adc
mov
dec
in
add
fnstsw
dec
movsb
popa
push
les
das
sbb
in
adc
inc
sahf
xor
cmp
jo
xchg
call
dec
mov
xchg
call
out
lods
pop
jl
scas
lds
repz
negl
xor
and
mov
xchg
data16
adc
lods
pushf
stc
cltd
cmpsl
dec
aas
jbe
and
mov
ret
out
fmull
pop
add
mov
call
popa
addl
mov
cmp
sub
dec
mov
ljmp
adc
cmp
pop
xchg
js
mov
les
ljmp
repnz
sub
rcrb
xchg
push
clc
push
ljmp
fsubr
les
ret
lahf
das
repz
xor
add
add
or
loopne
fsubs
adc
insl
sub
lahf
jg
jmp
in
movsb
cmp
and
scas
mov
scas
pop
push
jp
icebp
daa
jmp
mov
adc
lods
in
xchg
mov
cmp
das
jg
adc
and
imul
xchg
into
lods
sub
sub
call
xorl
xchg
fcoml
jge
lahf
push
lds
add
push
jo
xchg
inc
pop
pop
push
dec
adc
ljmp
inc
mov
fsts
in
test
insb
jle
dec
jle
sbb
fstl
ds
imul
mov
jbe
adc
scas
dec
or
inc
cli
xor
xor
les
and
stos
cli
mov
push
cmovs
jg
sub
cld
xchg
xchg
add
jne
xlat
mov
lock
cmp
not
add
xchg
sbbb
push
pusha
xor
adc
mov
and
push
xchg
int3
ror
insb
test
mov
adc
dec
rolb
ret
nop
test
inc
dec
xchg
cmpb
push
xchg
add
jg
mov
jb
dec
aas
dec
std
mov
push
fsubrl
in
incb
xor
dec
cmpsb
faddl
enter
in
adc
out
pop
out
sub
mov
adc
mov
dec
and
std
bnd
ror
andb
ret
or
or
stos
cmpsl
fmull
inc
cmc
and
push
stos
mov
shll
or
inc
mov
xor
dec
cmp
cmpb
push
int3
push
add
shlb
fsin
lcall
fwait
stos
and
push
push
add
dec
test
test
add
add
test
rcr
mov
jl
adc
movsb
js
cmp
and
mov
movl
outsl
pop
out
out
xchg
in
or
mov
xchg
lea
jl
inc
jl
pop
dec
test
enter
xorl
xchg
adc
out
ja
and
rolb
sbb
fisubl
out
adc
enter
sub
cmc
mov
pop
pop
jl
pop
incb
pop
arpl
and
xlat
or
inc
fdivs
lds
cmp
or
jne
push
adcb
adc
hlt
mov
sub
aas
loope
scas
cld
jae
fs
mov
push
xchg
lods
insl
jno
scas
outsl
or
fmuls
push
dec
out
sub
add
lcall
mov
sbb
mul
adcb
add
icebp
mov
test
fists
jne
addl
sti
das
cmp
pop
aam
or
ret
adc
inc
pop
fwait
jl
iret
in
icebp
jle
add
cli
cld
push
les
sub
push
gs
mov
mull
repnz
mov
in
mov
rcr
in
hlt
daa
imul
xlat
mov
dec
mov
enter
xrelease
add
fisubs
fldt
and
mov
ja
mov
push
xor
clc
mov
hlt
in
sub
pop
xlat
outsl
jge
enter
call
or
xchg
add
bound
imul
fwait
stos
in
push
pushf
sbb
sub
mov
pop
movsb
les
adc
fidivrs
test
out
xchg
lods
jnp
call
push
sub
nop
in
repz
inc
das
push
test
or
pop
xor
call
jnp
scas
outsb
dec
jmp
jp
cs
dec
enter
cmpl
dec
iret
fwait
or
nop
std
out
mov
and
daa
mov
add
xlat
out
insb
jns
in
mov
dec
push
pushf
or
mov
lret
ficomps
xchg
xchg
dec
mov
xchg
pop
push
mov
lret
inc
lret
push
ds
insl
xchg
aaa
loopne
jb
cmpsl
clc
mov
pop
stos
sbb
dec
mov
rclb
mov
jnp
or
jmp
jae
inc
mov
mov
xchg
bound
mov
xor
daa
lret
push
jne
aaa
push
jg
sbb
mov
and
xchg
push
enter
cwtl
cltd
out
and
xchg
insl
jp
lods
mov
in
xchg
movsb
xchg
xlat
sbb
out
dec
xchg
movl
add
cwtl
mov
fwait
push
stos
dec
cwtl
cld
rcrb
xchg
out
pop
adc
test
sbb
das
sti
pop
add
jbe
inc
fwait
sub
insb
jb
mov
sub
push
cmpsl
mov
pop
lcall
insb
es
xchg
insb
enter
pop
lods
scas
sub
arpl
push
fs
pmovmskb
jns
pop
movsb
aad
mov
adcl
lret
clc
add
push
mov
stos
sub
imul
enter
cmpsb
cwtl
pop
in
cmp
mov
call
fmull
fadds
xlat
push
repnz
pop
pop
ret
xchg
mov
pushl
dec
ss
aaa
notl
push
pusha
pcmpgtb
lahf
mov
push
enter
js
dec
push
mov
jle
jecxz
push
out
enter
xor
push
mov
inc
popf
shr
mov
mov
cwtl
fidivrs
test
push
push
stc
dec
xor
dec
js
pop
jno
pop
adc
or
dec
cmp
and
xor
in
mov
cld
adc
fcompl
xchg
pop
fs
sub
cli
scas
mov
dec
movsb
enter
pop
call
pop
jnp
xchg
out
mov
dec
test
pop
push
push
xchg
jecxz
add
xlat
add
ficomps
lret
push
aam
and
sbb
cmp
and
pop
inc
test
xlat
lds
push
adc
jbe
je
mov
rclb
sahf
lods
mov
and
push
mov
mov
das
push
cmp
dec
call
mov
sub
ret
fcmovb
fs
int3
insb
xor
inc
xchg
leave
mov
inc
and
je
mov
fmuls
jp
rorl
or
mov
sbb
jb
mov
dec
cld
scas
ret
insl
push
adc
in
mov
decl
or
add
aam
in
mov
rorb
movsl
xor
inc
into
sub
cmp
in
mov
push
mov
dec
cld
sti
xchg
cli
push
bound
push
cmp
fs
push
insb
mov
pop
jg
xor
xlat
rcrl
rorb
lahf
or
adc
lods
out
stos
lea
sbb
mov
inc
xor
jg
clc
lods
test
inc
pop
inc
or
add
outsb
sahf
hlt
sarl
jg
bnd
xchg
inc
daa
stos
mov
dec
cmp
mov
clc
into
addb
inc
sub
mov
out
stc
insb
rcll
xchg
test
xor
imul
push
dec
nop
pop
adc
aad
stos
cwtl
xor
jne
ja
fnstenv
fwait
bound
mov
mov
push
mov
pop
pop
xchg
sub
enter
jg
xchg
mov
add
dec
mov
sbb
push
add
outsb
fiaddl
ret
jl
jno
rol
fwait
xchg
out
ja
push
sbb
jmp
fmull
add
out
lcall
cs
mov
aaa
rolb
and
scas
push
jo
xlat
cltd
push
add
mov
or
mov
lods
rep
and
mov
pop
mov
shrb
add
mov
push
mov
pop
xor
out
sbb
lahf
mov
sarb
outsl
lret
pop
cmp
dec
inc
popf
mov
adc
cld
lcall
inc
fcomp
add
mov
sub
jo
sub
adc
imull
gs
pop
enter
out
mov
dec
pop
add
sbb
hlt
and
mov
xchg
imul
sbb
nop
mov
push
lds
cmp
sub
xor
xor
enter
push
sub
inc
mov
pop
inc
pop
out
cmp
pusha
fwait
dec
cmpsb
xor
popl
xchg
testb
in
and
out
inc
orb
out
sbb
and
outsb
pop
loop
imul
lcall
jmp
insb
adc
xchg
mov
mov
dec
stc
dec
cmp
in
enter
pop
fnstcw
movsb
cmpl
adc
aas
mov
in
enter
inc
push
pop
sub
out
lahf
fisttpll
mov
pop
adc
jmp
pop
lock
xchg
or
pop
movsb
xchg
ret
push
mov
dec
push
jnp
addr16
dec
cmp
jbe
and
stos
mov
mov
xlat
xrelease
xchg
sbb
out
or
xchg
mov
pop
daa
clc
inc
mov
cmp
pop
dec
push
add
lds
call
jbe
jb
cmp
mov
xor
inc
xchg
push
pop
fdiv
scas
maxps
or
dec
pop
gs
add
push
lret
or
les
outsl
xchg
mov
lret
aad
mov
popa
mov
pop
cmp
stos
add
lret
cwtl
mov
out
call
inc
test
pop
xchg
adc
xchg
pop
outsl
xlat
iret
dec
daa
adc
or
ficoml
stos
adc
aaa
cld
stos
loop
test
scas
xchg
pop
and
ss
out
dec
in
cwtl
cmp
push
sub
jo
pop
cmp
pop
jle
push
push
jge
adc
outsl
mov
call
jg
daa
pop
adc
cwtl
daa
cld
and
push
rol
lahf
lret
scas
pop
mov
ret
pop
daa
cmp
das
shrl
and
ss
xchg
cmpsb
sub
divl
add
adc
mov
push
movups
dec
out
addb
out
cmpsl
outsl
test
cmpsl
mov
rcl
test
test
push
insl
xchg
lret
and
mov
mov
dec
movsb
adc
jg
sbb
inc
add
mov
inc
or
push
push
outsl
fadds
xor
js
orb
lahf
xor
pop
outsl
mov
mov
iret
and
aas
push
jo
testl
scas
pop
inc
add
pop
dec
aas
inc
push
dec
outsl
sbb
sub
and
enter
lahf
loopne
pop
xchg
and
adc
pop
ret
ja
nop
mov
mov
iret
pop
and
lret
cmpsl
aaa
xor
push
cwtl
add
and
adc
adc
test
ds
out
int3
and
idiv
lds
repz
push
adc
aad
inc
jno
mov
push
mov
cld
push
inc
jmp
or
xchg
xchg
pushf
jbe
cmp
add
push
in
test
add
fcoms
fcoml
inc
cmp
aaa
js
addr16
in
daa
je
lea
xchg
jg
xchg
incl
je
stc
push
sbb
push
mov
mov
jecxz
adc
cli
xlat
hlt
test
push
aad
outsl
fwait
loopne
xchg
mov
stc
adc
inc
call
movsb
push
sbbb
hlt
push
sbb
loop
bnd
jne,pt
sbb
or
lock
rorb
in
lods
pop
xchg
push
in
pop
cmp
push
cld
lret
in
jle
mov
dec
mov
or
dec
add
scas
xor
add
and
and
or
adc
jle
iret
fnstenv
pop
xchg
roll
inc
xchg
pop
push
mov
movsl
inc
or
xorl
xchg
xchg
js
sahf
insl
cmpsb
lods
dec
pushf
test
xchg
push
les
sbb
jbe
insl
lods
andb
push
xchg
cmpb
pop
pusha
in
outsb
lds
jg
out
out
sbb
push
sahf
adc
push
jg
dec
stos
iret
addr16
mov
xor
mov
or
xor
mov
call
adc
adc
cld
imul
stos
push
rcl
scas
sub
jae
testb
hlt
enter
push
divb
cwtl
sbb
lock
jecxz
in
imul
sahf
and
jecxz
push
sti
negl
push
jmp
xlat
inc
mov
pop
xchg
in
adcb
dec
and
das
inc
mov
clc
add
jmp
sub
inc
mov
jno
jge
in
or
pop
dec
movsb
clc
movsl
cmp
push
add
pop
xlat
xchg
xor
out
lds
test
int3
mov
push
inc
inc
imul
ret
or
or
cld
mov
mov
xchg
dec
cmp
pop
call
leave
xchg
sbbb
xor
jp
mov
or
sbbb
inc
cmp
mov
add
loopne
cwtl
out
lock
pop
js
mov
sbb
xchg
push
cmpsb
shrb
movsb
add
mov
lcall
in
aas
jno
out
cld
fwait
int
dec
add
ret
push
in
and
xchg
jle
test
dec
stos
testb
cmp
ret
out
out
jge
out
cld
in
add
mov
push
and
jnp
data16
jae
shll
nop
shlb
sub
xchg
adc
jae
pop
inc
add
movsl
xor
adc
in
pushf
xlat
cltd
or
jg
jmp
stos
lret
pop
inc
mov
mov
or
out
enter
sub
fadd
xchg
sub
pop
sbb
daa
sub
stc
fwait
orl
mov
fsubl
arpl
ds
dec
xchg
aaa
pop
pusha
iret
in
lods
pop
jmp
xchg
push
mov
movq
pop
mov
in
xor
jae
stos
add
sbb
fstpt
xor
ret
fcomps
pusha
stc
call
les
hlt
js
test
mov
popa
dec
dec
in
enter
push
sbb
cs
cmp
lock
adc
pop
adc
call
mov
xchg
push
aas
dec
sub
addb
xchg
push
push
cltd
sub
mov
or
jo
xchg
inc
rolb
pop
int3
pop
cmp
add
ljmp
and
pop
rcrb
xchg
cmpsl
gs
pop
xor
dec
andl
mov
sbb
xchg
pop
es
sub
push
adc
or
out
push
and
fisubrl
outsl
mov
stc
xor
mov
ljmp
mov
adc
into
mov
inc
movsb
fsin
out
add
lods
mov
mov
dec
xor
push
xchg
push
je
scas
rorl
xlat
jo
fsub
and
out
mov
int
loop
xor
inc
xor
add
fs
add
lcall
cld
dec
xchg
add
sub
pop
push
adc
test
xchg
in
pop
mov
jnp
mov
test
push
inc
ja
je
sub
loopne
push
add
fists
sbbl
frstor
push
loop
lahf
xchg
sub
mov
outsb
mov
loopne
xlat
mov
push
adc
lret
stc
lock
repz
dec
cmc
daa
mov
mov
fnstsw
mov
and
ljmp
fwait
ljmp
bound
pop
push
fwait
aam
fiaddl
sub
iret
fmuls
aam
cmpsl
sahf
orb
add
lods
xchg
inc
in
popf
fwait
in
stc
jge
xor
std
test
sub
int
sub
ret
xor
adc
in
out
mov
stos
icebp
fdivs
mov
scas
xchg
in
es
stos
jno
or
mov
fcomp
movsb
mov
or
inc
repnz
pop
scas
sarb
or
shlb
es
cmp
inc
sbb
cmp
negl
int
jecxz
cs
aas
call
lret
inc
sub
xchg
mov
enter
push
subb
fisubl
xlat
in
ret
xchg
enter
notl
push
lret
pop
inc
push
sbb
inc
dec
imul
mov
xchg
push
push
popa
inc
clc
or
pop
inc
out
mov
movsb
and
nop
push
or
cmp
pop
jb
push
daa
bnd
jbe
add
leave
aam
xchg
stos
dec
xlat
xchg
sub
rolb
push
inc
inc
xchg
incb
push
movsb
pop
aaa
sbb
cmp
mov
scas
push
and
shl
scas
outsb
out
sbb
xlat
or
pop
mov
jg
push
je
pushf
xchg
lcall
add
jns
pop
out
imul
dec
cmp
imulb
lea
and
xchg
lahf
das
int
ret
aad
mov
enter
push
daa
scas
mov
xchg
and
xorb
add
inc
fcoms
stc
fsubl
cli
and
and
out
xchg
cmp
in
push
ljmp
enter
pop
shlb
mov
rorl
loopne
test
icebp
push
imul
pop
jb
inc
and
sub
mov
xlat
inc
lahf
pop
inc
js
lods
and
data16
leave
repnz
sub
hlt
orl
repnz
subb
push
inc
inc
mov
xchg
mov
mov
xlat
cmp
xor
pop
sbb
ljmp
sbbb
xchg
cwtl
shll
or
ja
imull
loopne
fwait
nop
test
call
sub
mov
movsl
cltd
sub
outsb
push
popl
movsb
sub
in
sti
adc
pop
pop
xlat
push
or
jmp
sub
stc
nop
dec
add
push
sbb
lds
push
ljmp
mov
jmp
inc
test
test
mov
and
pop
jmp
mov
aam
mov
ret
inc
outsl
pop
mov
prefetch
es
xchg
cmpl
cmp
mov
and
xchg
adc
adc
mov
in
mov
cmp
pop
push
test
outsl
repz
call
addb
add
add
iret
mov
push
push
int3
mov
movsb
idivb
mov
je
adc
jle
in
inc
les
cli
adc
jge
cmp
adc
call
inc
mov
adc
jb
dec
mov
js
push
test
gs
push
fstl
daa
mov
mov
adc
outsl
icebp
cmpsb
cmp
sbbl
dec
pop
mov
clc
dec
sbb
testb
xor
xchg
xlat
jne
dec
adc
lods
test
ds
jl
push
sub
adc
xor
xchg
pop
pmullw
inc
xchg
cmpsb
fimull
xor
ds
adc
xchg
fwait
mov
xor
dec
cmpsl
lock
mov
mov
push
mov
enter
call
adc
sub
sbb
ja
mul
cmp
aam
fs
pop
jmp
popf
cwtl
and
jae
or
fs
xchg
mov
out
and
pushf
ljmp
or
gs
push
adc
adc
inc
add
test
or
icebp
sub
fs
mov
loopne
pop
cmp
hlt
cltd
inc
adc
enter
int3
pushf
dec
aaa
cmpsl
in
int3
xchg
adc
mov
inc
inc
jne
cmc
daa
enter
sub
add
adc
insb
fimull
hlt
in
pop
movsb
cmp
outsl
inc
inc
mov
call
rclb
xlat
xor
lods
and
ljmp
lea
sub
dec
push
rolb
out
dec
iret
cli
dec
inc
shlw
out
roll
rcr
adc
and
hlt
outsl
repz
test
bound
cltd
sbb
test
bound
xchg
xor
repnz
cmp
lcall
fcoml
and
sbb
lcall
adc
aas
popa
inc
xchg
mov
push
call
xchg
arpl
xchg
pop
pushf
ja
jne
sbb
lock
push
xchg
lcall
enter
out
js
push
xor
jno
outsb
mov
notb
dec
xchg
inc
call
inc
out
ljmp
mov
call
or
inc
ss
pop
bound
mov
dec
mov
fsubrl
push
push
shlb
push
lcall
pop
arpl
repnz
add
addr16
xor
push
sub
xlat
cmp
pusha
cmc
adc
sub
loopne
jno
int
adc
in
mov
inc
dec
cld
int3
dec
stos
loopne
adc
in
inc
mov
ljmp
notb
and
sub
shrb
lret
sti
and
pop
aas
jl
mov
daa
cmp
xchg
adc
gs
testl
xchg
fs
dec
cmp
enter
fidivl
movsb
xlat
adc
es
test
mov
lods
scas
scas
imul
cmp
dec
cmc
stos
or
out
push
rep
and
push
pop
rorb
mov
arpl
cmpl
orl
mov
mov
jae
dec
mov
setp
cli
mov
push
xchg
sbb
ret
pop
ljmp
xchg
and
gs
mov
jb
dec
mov
das
call
sub
add
push
pop
enter
add
xchg
fcmovnbe
dec
mov
lea
mov
pop
push
stc
sarl
lods
adc
outsl
and
lods
xor
mov
and
iret
mov
push
sub
mov
orl
xchg
out
idivb
xchg
or
movsb
mov
sahf
aam
mov
mov
xlat
add
in
jno
popf
testb
mov
jp
push
xor
aam
and
out
push
test
sbbb
fisttpll
fmuls
loopne
push
push
sbb
add
das
call
push
test
rcll
mov
jecxz
xchg
punpckhbw
ja
stos
and
and
stos
cli
dec
and
mov
ret
sti
outsb
out
enter
mov
jbe
sbb
scas
adc
xchg
mov
mov
sbb
pop
push
enter
mov
jge
mov
dec
out
cltd
pop
out
xchg
popf
roll
call
jno
mov
stos
dec
jg
pop
pop
das
pop
addl
popf
and
and
nop
add
scas
daa
nop
sub
pop
dec
and
dec
cld
test
inc
imull
inc
cmp
inc
fdivrp
divb
inc
push
add
fwait
or
mov
in
fdivs
cmp
adc
enter
xor
in
dec
adc
mov
repnz
imul
dec
test
jecxz
es
adc
cmc
cmp
pop
insb
test
mov
inc
jl
cmp
jp
enter
test
mov
inc
movhps
cmc
add
pop
ss
scas
test
pop
les
add
ror
es
ljmp
scas
jo
add
push
fimull
rorb
xor
aas
pop
daa
adc
ljmp
call
jp
add
jle
rorb
pop
mov
daa
sub
mov
add
cld
sbb
xchg
xchg
or
sbb
fcom
movsb
adc
push
and
lcall
ret
aad
fs
lds
xchg
push
repnz
out
out
add
mov
pop
rcl
mov
negb
pop
sbb
std
dec
and
cmp
sbb
xlat
cmp
icebp
and
pop
push
sbb
adc
sub
rorb
insb
in
jl
pop
pop
ja
call
pop
pop
bound
cmp
pushf
fs
mov
sub
lock
xchg
bound
xchg
cs
mov
add
push
and
idivb
dec
int
stc
in
int
rorl
cld
pop
inc
inc
les
xlat
sub
fcom
loopne
add
movsb
xchg
daa
cmpsb
repz
cmpsb
sub
xchg
adc
sbb
or
mov
sub
inc
int3
push
out
arpl
dec
jl
adc
adc
inc
bswap
mov
jg
roll
jmp
mov
xor
imull
clc
roll
add
sbbb
shl
and
dec
outsb
mov
adc
call
rorb
pop
scas
stos
push
int3
aad
shlb
pop
cmp
addb
scas
cmpsb
data16
xor
xor
sub
push
jmp
cwtl
sbb
pop
fcom
inc
push
lcall
sub
or
cmpl
ss
dec
ret
call
iret
inc
dec
cltd
cmpsb
sbb
or
cmp
int3
faddl
movsb
hlt
and
jge
cmp
std
push
push
repnz
mov
and
xor
push
push
adc
xchg
pop
mov
inc
dec
add
jo
and
les
adc
xlat
imul
test
jno
icebp
cltd
lahf
xor
outsl
out
call
xor
cmpsb
in
test
push
xchg
mov
enter
stc
mov
sbb
jne
stc
mov
into
add
stos
daa
mov
dec
or
mov
inc
and
push
sbb
test
mov
enter
or
sti
out
mov
xchg
rorl
sti
lock
aaa
cmp
aas
mov
jne
cmpsb
jns
dec
and
mov
nop
xchg
enter
mov
cwtl
fcomps
cs
inc
inc
lods
bswap
jp
and
add
inc
inc
fcoml
je
test
pop
les
or
aas
rclb
popa
popa
adc
pop
inc
sbb
sbb
pop
in
movsb
jns
fisttpll
rol
addb
pushf
inc
fadds
push
leave
mov
xchg
dec
rolb
pop
stos
icebp
gs
test
mov
xchg
repz
inc
cld
cmpb
sub
not
dec
ret
jmp
sub
adc
js
into
mov
pop
iret
jge
lock
fsubl
sub
rclb
outsl
inc
jl
movsb
inc
mov
jmp
cmp
pmaddwd
dec
scas
mov
xbegin
pop
push
addr16
pushl
jno
sahf
movsb
movsl
je
popa
mov
in
in
addr16
dec
addr16
hlt
fisubl
inc
cltd
add
rcrb
out
sysexit
push
mov
arpl
xor
xlat
mov
jno
push
sub
std
inc
neg
fwait
and
fs
enter
sub
std
xlat
xchg
sub
xchg
pop
in
sbb
xchg
inc
inc
lea
insb
xchg
cmp
mov
and
or
adc
add
pop
sbb
test
scas
fsubrl
jmp
jg
mov
mov
jnp
shlb
scas
cmc
das
call
jg
fmuls
in
fwait
imul
dec
rcll
or
mov
pop
lods
xchg
push
or
xor
fmull
enter
jp
neg
andb
enter
popf
sub
cmp
lret
adc
scas
push
xor
mov
mov
inc
sub
lods
mov
dec
sbb
arpl
add
arpl
push
int3
mov
aaa
mov
faddl
out
cli
sbb
fwait
add
jae
and
sub
add
push
clc
push
mov
adc
adc
cmp
push
push
pop
inc
xor
loopne
int
jp
call
cltd
add
sbb
mov
pop
xchg
pusha
mov
lock
push
or
cld
add
subl
adc
enter
mov
push
repz
mulb
mov
or
push
or
mov
pop
stc
lret
and
cld
mov
jge
sub
push
mov
adc
mov
mov
int3
or
inc
aaa
insl
enter
xchg
dec
rcl
jnp
pop
inc
and
aas
mov
pop
aam
pop
xlat
outsb
test
pop
out
lods
dec
sahf
pop
adcb
xor
cmp
iret
movsl
push
ss
xorl
mov
ret
enter
xchg
add
lods
dec
daa
dec
scas
xchg
mov
icebp
loopne
inc
enter
push
and
sub
jno
in
in
mov
int
or
out
xchg
inc
fwait
into
test
jo
movsb
sub
sti
inc
dec
mov
jge
xchg
hlt
cmp
lahf
or
nop
bound
lods
mov
add
inc
sbb
jle
mov
push
push
cld
outsb
push
fcoms
xor
and
adc
pop
mov
xchg
cmp
pop
pop
adcl
popf
push
mov
hlt
ljmp
jo
mov
adc
sbb
into
jae
rclb
ja
iret
loopne
and
das
pop
loopne
jl
mov
push
xor
pop
mov
bound
sbb
sahf
call
xchg
mov
pop
cmp
rorb
jmp
or
inc
orb
or
jp
in
rcrb
enter
lea
mov
lcall
and
xlat
testb
in
push
fwait
call
adc
mov
mov
shl
sbb
sbb
sub
mov
insb
adc
mov
in
ret
jecxz
mov
mov
xchg
pushf
or
push
add
mov
xchg
sub
dec
mov
iret
xor
sub
inc
clc
inc
pop
fcmovnb
lock
lret
je
ret
add
lret
push
mov
lds
mov
sti
nop
push
movsl
push
aad
adc
insb
cmp
xchg
test
je
xchg
xchg
std
inc
inc
je
sbb
stos
cmc
dec
dec
lods
out
rolb
push
les
aad
sbb
outsb
and
movb
add
adc
mov
sub
scas
into
loop
loop
cwtl
in
jg
flds
jbe
add
outsl
sti
sbb
jg
pop
sbb
cli
nop
cmp
mov
dec
test
dec
sbb
daa
mulb
pop
jmp
dec
mov
ljmp
sub
idivb
test
pop
add
add
fwait
sti
pop
push
pop
or
movsb
aam
add
pushf
or
pop
dec
dec
movl
dec
inc
call
repz
xchg
jl
andl
pop
pusha
mov
sub
push
jge
jg
xlat
jp
idiv
jg
add
pop
scas
insl
iret
xchg
xor
movsl
mov
je
xchg
mov
cmp
mov
sub
out
cmp
sbb
mov
imul
push
push
jle
xor
negb
mov
js
enter
lcall
cwtl
or
fsubl
movsl
fnstenv
jo
fbstp
xchg
in
aas
mov
jg
cmp
cltd
sub
pushf
enter
nop
out
sbb
int3
ds
lret
push
lock
icebp
icebp
mov
hlt
xchg
int3
or
ret
xchg
adc
sbb
xchg
aaa
and
push
jl
push
and
jae
sbbl
mov
mov
inc
and
xor
cmp
push
scas
lldt
nop
inc
aas
in
in
mov
adc
adc
aam
jmp
iret
jmp
add
add
ret
adc
pop
push
dec
ja
ljmp
outsl
or
inc
mov
add
push
jmp
stos
mov
hlt
test
mov
sbb
out
sbb
stc
jbe
xor
or
test
push
stc
fs
movsl
or
pop
pop
scas
js
mov
fistl
out
jno
xchg
mov
mov
xor
cmp
jmp
insl
ret
rclb
enter
dec
in
jo
sbb
daa
cld
sbb
cmp
xchg
enter
cmpsl
add
divb
movsb
call
or
lcall
sbb
cmp
and
adc
mov
es
rol
or
or
rolb
insb
mov
pop
push
mov
mov
dec
icebp
mov
cmp
test
adc
pop
mov
repnz
jp
out
jp
shl
add
test
or
push
sahf
test
test
aam
lds
jae
and
enter
inc
inc
cmp
es
frstor
sarb
adc
dec
dec
std
mov
mov
jbe
outsl
add
cwtl
jno
jae
repnz
icebp
cs
mov
and
and
or
sub
mov
sbb
dec
xchg
repz
dec
pop
out
push
fucomi
iret
lahf
test
fsubl
push
jo
sarl
test
aas
xchg
jl
out
clc
jne
loop
icebp
cmp
push
mov
cmp
jno
fcompl
test
jp
push
push
aad
xchg
out
xchg
pop
shl
test
js
sbb
sahf
cmp
dec
clc
nop
lods
pop
push
mov
mov
int3
add
out
cmp
xchg
ljmp
mov
popl
pop
inc
orl
push
stos
adc
and
xchg
or
mov
enter
arpl
pop
cmp
stc
sub
xorl
iret
scas
inc
and
pop
mov
lock
mov
jle
insb
or
call
ret
mov
idivb
jecxz
fdivrs
lds
cwtl
xchg
out
stos
aad
jle
cld
loopne
mov
jo
lds
and
icebp
lahf
mov
jns
push
fwait
hlt
out
test
inc
xchg
pusha
ljmp
je
xor
push
mov
dec
dec
inc
ljmp
cmpsb
mov
fcoml
fdivrs
push
in
push
loop
inc
arpl
cs
push
cli
pop
int
daa
es
adc
pop
orb
lods
iret
cmpsl
mov
stos
cmc
jo
cs
scas
sub
pop
aaa
cli
leave
imul
iret
std
out
add
cli
pop
popf
dec
sarb
or
mov
mov
xlat
adc
sub
cwtl
cli
arpl
enter
mov
xor
xor
mov
nopl
ja
test
or
jg
mov
jmp
outsb
lahf
aad
lods
rorl
int3
pop
xchg
cli
test
push
pop
int
sbb
fmull
fwait
mov
movsb
rclb
lods
fildll
enter
push
daa
sbb
cltd
cmpsl
gs
sub
dec
fcoms
das
adc
dec
popa
test
and
inc
xchg
inc
jnp
arpl
aaa
lahf
mov
cld
or
ret
sub
shrl
push
outsl
jns
push
and
idivl
adc
dec
inc
jns
mulb
icebp
sub
push
bnd
scas
and
mov
push
xor
call
mov
in
testl
dec
mov
inc
insb
mov
lret
xlat
fcmovnbe
outsl
xor
mov
adc
inc
adc
fstpl
insl
adc
cmpsl
les
lods
nop
pop
xchg
and
mov
push
loop
adc
lret
int
cmpb
and
jmp
scas
out
pop
mov
scas
mov
mov
xor
adc
cmp
mov
movb
in
mov
xor
cmp
inc
mov
sbb
sub
pop
add
hlt
dec
les
push
pop
dec
jne
jp
push
mov
insl
pop
flds
out
xlat
push
or
jb
and
adc
mov
arpl
xor
pop
mov
jg
sub
and
xchg
movsl
push
mov
push
popa
ja
or
mov
fs
cmp
shlb
xor
mov
jns
sti
jecxz
cmp
ret
or
insb
in
adc
std
out
movsl
faddl
enter
add
push
mov
dec
and
jecxz
jbe
sbb
clc
add
xchg
ret
pop
jnp
enter
mov
xchg
in
or
outsl
dec
inc
fstps
pop
outsl
xlat
aaa
test
cltd
push
mov
xchg
outsb
sti
pop
and
mov
pusha
and
cltd
adc
push
xchg
insl
cltd
sub
les
lods
fdivr
xchg
xchg
mov
divl
fst
xchg
stc
les
mov
aad
cmpsb
xchg
or
out
push
mov
sub
fs
lahf
pop
cld
mov
or
cmpsl
je
ficompl
scas
addr16
sub
fdivl
jp
inc
jnp
jnp
lea
movsb
clc
jle
cmp
fistpll
outsl
add
out
or
inc
jns
push
xorb
shl
inc
setnp
jo
ret
inc
in
fwait
enter
je
fsubrl
xchg
fs
sub
pop
and
scas
out
call
es
sub
fists
jnp
sub
inc
sub
out
subl
insl
and
fldcw
leave
cmc
push
enter
pushl
jmp
pop
lock
into
test
xor
popa
aam
in
mov
mov
lds
or
cmp
insl
int3
scas
dec
push
std
mov
sub
inc
or
lret
test
lcall
jnp
push
push
outsl
jecxz
pop
pop
or
adc
mov
pop
mulb
cmpsl
or
xchg
pop
dec
and
push
mov
or
jne
jl
pop
mov
jbe
sbbb
das
cmpsl
out
lods
iret
cmp
jbe
push
fs
lret
jns
pop
sbb
rcll
int
shlb
hlt
std
mov
add
jns
sbb
sub
pushf
fwait
xlat
inc
test
sub
cld
popa
sahf
jmp
adc
adc
jbe
pop
fldt
adc
or
xchg
movsl
in
cmc
mov
mov
lods
into
cmp
mov
pop
dec
add
dec
push
loopne
or
inc
stc
inc
add
stos
sbb
enter
jl
movzwl
aas
add
aaa
jmp
push
inc
dec
and
aas
fbstp
inc
aaa
inc
mov
pop
fmuls
xor
add
pop
lds
imul
das
add
adc
jo
xor
daa
xor
push
daa
pushf
aam
mov
cwtl
out
outsb
dec
daa
adc
adc
and
cwtl
daa
in
filds
daa
cmpsb
aad
mov
and
mov
or
and
call
movsb
sub
lahf
pop
movsl
push
daa
adc
or
and
adc
pop
xchg
push
outsl
inc
mull
loope
out
add
test
add
mov
je
inc
out
cmp
mov
test
test
pop
pop
push
ljmp
adc
xor
inc
cwtl
fdivl
adc
and
mov
outsl
or
stc
lods
jg
xlat
movsl
iret
out
and
xchg
aaa
cmpb
pop
push
clc
clc
inc
cmpsl
inc
dec
xor
ja
addr16
test
and
add
test
sbb
pop
push
inc
push
adc
mov
sbb
xor
das
xchg
and
mov
incl
mov
or
and
push
rolb
or
xchg
ret
adc
xor
pop
dec
or
lea
or
loopne
pop
das
cmp
call
inc
xlat
add
bound
xchg
das
inc
or
call
lds
inc
xchg
notl
pop
outsl
xchg
das
scas
sub
mov
test
mov
movzbl
or
and
lahf
and
sub
scas
js
mov
pop
call
add
push
testb
mov
push
stc
adc
and
push
daa
mulb
push
push
enter
xor
call
jmp
cmpsl
sbb
xlat
adcl
loop
add
repz
call
test
out
mov
fdivr
or
jecxz
cs
xchg
and
aaa
ret
mov
push
fwait
push
jge
pop
sub
push
or
ss
add
inc
pop
xlat
xchg
cwtl
pop
cwtl
or
inc
add
mov
mov
add
inc
enter
cmp
cli
vsqrtss
add
xor
xchg
and
loop
mov
jle
push
xchg
iret
cmp
daa
mov
xchg
jp
lea
nop
mov
xchg
mov
jle
and
adc
scas
mov
jl
mov
ljmp
fdiv
jno
int3
push
clc
stos
cmpsl
and
mov
xchg
adc
shl
jno
add
xor
je
in
and
or
fdivl
in
test
xchg
xor
mov
dec
adc
xchg
mov
jecxz
sub
push
sub
inc
clc
data16
dec
stc
sub
adc
loop
inc
rorb
mov
cs
cmp
mov
insb
cmp
call
es
aam
cwtl
mov
ds
std
mov
sub
push
and
inc
pushl
add
and
aas
test
mov
dec
push
das
or
cmp
jl
je
sub
mov
sti
sbb
mov
lods
out
stos
stos
xchg
loop
push
mov
hlt
aam
add
inc
pop
sar
pushf
js
mov
repnz
xchg
fimuls
in
pop
test
mov
ficoms
mov
cmpsl
movsb
add
stos
push
cmp
add
and
push
sub
ja
dec
xor
fldt
jno
push
sbb
jg
cmp
lret
movsb
xchg
js
push
pop
add
or
aaa
ja
in
sub
hlt
xchg
je
iret
mov
daa
test
in
ss
cmp
test
add
xchg
cmp
jmp
pop
adc
push
sbb
push
xchg
push
xchg
pusha
lods
std
push
test
add
jo
pop
and
testb
xor
lds
out
jge
dec
and
add
mov
or
cld
data16
sub
lock
repz
out
xchg
cmpsl
cmpsl
or
ret
in
insl
test
add
xchg
jl
add
cld
sbb
mov
out
cmp
pop
pop
mov
or
enter
cs
xor
ficomps
or
ret
adc
mov
push
mov
addl
loop
cmp
lahf
xlat
push
call
insb
dec
out
adc
add
jnp
pop
dec
sub
enter
pop
cmc
xchg
in
pop
xchg
cmpsb
stos
ds
mov
inc
pop
std
dec
xchg
xchg
jbe
faddl
jb
mulb
add
pop
cmpsb
loop
sub
mov
pop
jb
mov
test
out
mov
cli
inc
hlt
mov
jp
jmp
add
pop
cli
popa
mov
pop
push
xchg
sbbl
aas
sbb
mov
cmp
mov
push
mov
js
adc
lea
lock
shlb
mov
xchg
and
cmp
cmp
jmp
add
daa
push
ljmp
xchg
vcvtsd2ss
movsl
mov
mov
outsl
into
pop
push
pop
xchg
leave
add
daa
jnp
push
paddsw
add
in
daa
pop
mov
daa
mov
dec
sbb
daa
daa
mov
aaa
adc
jle
pop
fbstp
xchg
sbb
push
cmp
dec
sbb
or
push
aad
iret
adc
pop
je
jg
cmpsl
jmp
in
pop
fisttps
inc
inc
inc
aas
and
jb
cmp
mov
clc
sub
call
xchg
adc
lea
mov
enter
nop
cwtl
adcl
adc
and
or
daa
inc
cwtl
pop
sbb
cltd
push
pop
xor
das
leave
ja
mov
and
or
pusha
sahf
xchg
das
lahf
mov
shll
push
out
pop
mov
push
adc
or
inc
jo
movsl
xor
inc
movsl
pop
nop
cs
dec
popf
fwait
pop
xchg
pop
inc
jns
xor
pop
popf
cmp
xchg
adc
scas
xlat
add
jbe
insl
movsl
outsl
add
or
or
testl
sbb
ss
wrmsr
iret
and
cmp
push
das
scas
filds
test
xchg
mov
test
iret
push
clc
and
inc
cmp
lock
inc
lret
adc
es
inc
fists
dec
inc
aaa
inc
xor
sub
stos
nop
outsl
call
push
lock
jg
nop
das
pop
add
dec
pop
add
dec
aaa
and
lahf
das
mov
out
jo
das
outsl
sbb
xlat
xchg
test
mov
loopne
xchg
and
xchg
dec
dec
cmc
stos
xor
xlat
dec
dec
inc
xchg
aam
mov
daa
mov
ds
aaa
mov
mov
aas
lret
sub
xchg
cmp
ds
sarb
cmpsb
ret
setle
aad
iret
test
adc
les
scas
dec
int
es
idiv
mov
cmc
icebp
int
mov
sub
xchg
jmp
addr16
push
ds
mov
sti
bound
stos
repnz
inc
sti
pop
hlt
lods
push
add
cltd
push
js
or
xchg
aaa
les
adc
cmp
fs
pop
movsl
add
jl
push
jbe
cltd
pop
cwtl
or
pop
repz
fldcw
xor
lcall
lret
xchg
mov
aam
mov
and
add
push
pop
sub
dec
int
movsb
mul
xor
insb
jecxz
test
out
cwtl
jns
rcl
mov
push
pusha
and
jle
jmp
push
and
xor
mov
mov
lods
cmp
jle
jp
dec
pop
cld
xchg
adc
mov
movsl
je
mov
xor
mov
sub
sbb
add
mov
xchg
in
push
pop
es
popf
pop
dec
mov
imul
pop
loopne
lahf
mov
repnz
push
fdivrp
addr16
jb
xor
mov
xchg
jmp
loope
ljmp
push
pop
lret
mov
push
cmpsl
clc
dec
xlat
adc
pop
mov
test
and
inc
shll
cmpsl
xchg
cmpsl
push
lret
pop
fisttpll
mov
sarl
jle
dec
push
cld
stos
insl
aam
jnp
xchg
cld
mov
pmulhuw
xlat
sahf
movsb
lret
out
mov
addr16
cmp
fldt
std
je
fwait
mov
or
xlat
cmp
cmp
sub
mov
cmp
push
idiv
cmpsl
outsl
daa
push
out
xor
loopne
sarl
push
shrd
inc
cwtl
pushf
ljmp
inc
push
fists
stos
iret
mov
mov
jmp
xlat
rolb
adc
push
cwtl
hlt
cwtl
jle
daa
add
push
pop
push
sbb
test
aaa
mov
fstpt
gs
icebp
fsubr
cld
mov
mov
test
push
or
jle
enter
push
xor
add
out
mov
ljmp
lret
push
push
imul
rcrb
cltd
in
jbe
or
dec
shrb
xlat
pop
xchg
repnz
mov
pop
shlb
ss
mov
pop
ret
mov
fdivs
gs
add
imul
fdivr
es
mov
cmp
xlat
mov
daa
push
inc
lods
pop
lret
push
pop
pop
ljmp
or
mov
outsl
into
adc
dec
jp
fs
mov
mov
call
xchg
cmpsb
push
dec
adc
sub
adc
aas
call
pop
pop
movsl
mov
push
cld
fcmovne
imul
rolb
mov
sub
inc
out
enter
mov
lock
pop
les
jge
pop
repnz
aam
outsb
repz
jg
js
xlat
add
mov
hlt
ja
inc
fmul
fcmovu
add
hlt
fiadds
pop
and
push
add
jb
push
xchg
mov
jno
jne
das
inc
andl
lods
sarl
push
and
jmp
adc
xor
dec
mov
or
jne
cli
fwait
lock
sub
jp
andps
jmp
cmp
imul
call
adc
ja
mov
adc
adc
or
xchg
push
and
sub
mov
incb
adc
xchg
push
mov
xlat
aam
stc
fnstcw
mov
mov
inc
lock
xchg
mov
dec
pop
cld
cwtl
push
push
bound
adc
lods
movsb
lods
shr
dec
jo
popa
out
xchg
pop
addl
int3
in
push
loop
out
pop
push
sub
fildll
aam
jo
xor
mov
das
push
push
test
fsub
addr16
mov
es
stos
std
scas
or
lahf
adc
sahf
and
insb
pop
xchg
jge
sbb
mov
push
cmp
push
jno
testb
dec
stc
cmp
xlat
cwtl
mov
shl
pop
and
inc
scas
cmp
push
xchg
mov
add
les
fxch
xchg
ret
das
mov
ljmp
mov
fsubs
mov
ds
push
mov
mov
push
or
decb
loopne
or
mov
stos
xchg
mov
sub
mov
mov
test
and
inc
mov
sbb
adc
mov
xchg
pop
cli
cwtl
test
loopne
cs
data16
adc
pop
lahf
add
ret
test
pop
call
push
jae
pushf
adcl
enter
imul
aaa
jle
cmp
push
cmp
addl
enter
sub
pop
pop
nop
scas
push
mov
aam
cmpsb
lock
or
xorl
dec
push
xor
add
sti
movsb
xchg
in
je
add
dec
jle
rorb
enter
negb
daa
add
sbb
pop
je
sti
xchg
das
scas
lock
sub
dec
mov
ret
mov
jge
sbb
push
mov
xor
stc
xor
inc
cld
repnz
pop
out
adc
pop
xchg
adc
in
ret
push
xchg
adc
dec
jp
je
dec
push
repnz
push
push
pop
fwait
inc
add
mov
dec
out
outsb
nop
mov
ja
mov
mov
jecxz
xchg
push
stos
mov
test
xchg
jle
and
xlat
and
cmc
out
fwait
call
pcmpeqw
mov
push
lret
xchg
inc
lret
mov
arpl
cmpsl
aaa
mov
mov
nop
stc
fcompl
add
lret
fiaddl
je
add
xchg
mov
test
aam
jae
fwait
in
test
pop
pop
movsb
adc
in
and
cmp
adc
leave
int
cmp
and
gs
imul
shrb
add
dec
test
cwtl
fcmovnb
xchg
call
add
add
add
bound
cmp
scas
lea
imul
push
jmp
inc
into
movsb
dec
cmc
pop
cmp
jl
pop
add
xchg
orpd
cli
add
sub
bound
jmp
pop
push
inc
test
inc
bound
and
fists
and
divl
movsb
pop
aas
les
xor
dec
sbb
popf
dec
jne
xchg
sbb
ljmp
xor
pop
aam
cmp
idivb
lock
mov
andb
and
insl
lahf
pop
pop
sahf
out
outsb
mov
jb
in
in
cmp
sub
mov
enter
or
insb
xor
mov
pop
mov
mov
lods
add
jno
push
jmp
push
add
jmp
outsb
mov
idivb
cmp
aas
xchg
add
dec
push
mov
call
dec
cmp
in
sbb
xorb
stc
mov
mov
jo
dec
xor
xchg
lahf
push
outsl
adc
insb
into
push
jg
and
or
and
pop
sub
xlat
mov
enter
hlt
jns
mov
sbb
pop
cld
cmp
aam
addr16
inc
aaa
popf
gs
ds
sbb
daa
addr16
mov
pop
scas
mov
mov
jns
push
push
lret
mov
cmp
or
enter
stos
xchg
add
pop
into
add
addr16
mov
push
hlt
call
loopne
push
clc
leave
adc
out
sub
push
in
cwtl
orb
xor
push
hlt
addr16
mov
mov
inc
or
loopne
xchg
mov
or
jnp
or
loope
mov
and
adcl
mov
test
lcall
xchg
outsl
xchg
add
sub
push
add
lahf
out
jo
inc
sbb
push
enter
divl
xor
push
adc
lods
xlat
pop
push
pop
movd
je
test
lret
scas
adc
out
xchg
inc
or
jno
or
mov
neg
inc
mov
mov
sysenter
lahf
je
jae
sbb
in
scas
mov
bound
xor
ret
out
pop
xlat
cmp
jmp
loopne
add
cmc
push
loopne
and
mov
sbb
xorb
notb
cmp
and
call
lock
fnsave
leave
xor
jge
cmpsb
mov
rcrb
sub
xor
push
and
loop
dec
ja
cli
adc
mov
js
sub
loopne
pop
lock
push
in
mov
das
and
ds
repz
jns
adc
lds
mov
jae
or
out
xor
movsl
aaa
cmpsb
aad
sbb
pop
lret
sub
pop
push
jg
mov
xlat
loopne
mov
fldenv
lock
and
aaa
pop
lahf
aam
or
cltd
repz
and
mov
push
and
test
cmp
and
sbb
jmp
dec
addl
lods
out
pop
idiv
jle
xchg
xchg
cmpsl
inc
xchg
nop
inc
push
cmpsb
loope
out
sti
mov
push
test
cld
xchg
movsb
or
push
in
or
ljmp
in
shlb
ds
dec
bnd
gs
out
adc
lock
lret
jne
out
jg
push
mov
pop
cmpsb
pop
stos
daa
xchg
popf
cli
nop
mov
xchg
pop
sbb
pop
push
sbbb
xchg
popa
fsincos
or
mov
enter
sub
add
push
adc
adcb
pushw
and
rorl
fstpt
pop
add
mov
gs
mov
into
enter
arpl
aaa
mov
sbb
cli
ljmp
and
insl
sub
pop
xchg
and
cli
dec
lea
shlb
daa
andl
dec
push
out
push
icebp
retw
add
jb
push
xor
jmp
xchg
sbb
add
clc
hlt
dec
and
jmp
pushf
add
xchg
test
sub
xchg
sbb
sti
xor
mov
mov
call
cltd
scas
mov
sub
xchg
push
cmp
mov
push
and
push
dec
push
mov
cmp
or
jl
and
mov
iret
jbe
pusha
mov
jnp
push
movsb
fistl
or
pop
pop
lret
mov
push
lea
sbb
clc
arpl
xlat
xchg
out
jns
je
rorb
mov
cli
mov
pop
pop
hlt
xlat
or
pop
stos
and
nop
pop
add
mov
mov
in
aaa
dec
push
ror
divb
ss
mov
sbb
out
mov
ja
push
or
add
enter
dec
icebp
mov
jle
sub
js
pop
mov
xchg
dec
in
pusha
fists
mov
idivb
or
test
ds
movups
addr16
xorb
movsb
dec
or
int
cmpsl
lock
adc
in
jp
in
inc
mov
shlb
mov
push
mov
gs
push
insl
insb
stc
enter
pop
and
sub
pop
sbb
fdivs
and
push
xchg
pop
xchg
in
nop
pusha
jmp
insb
pop
test
mov
jo
cmp
incb
push
push
inc
clc
sub
repz
aam
sub
and
jae
lds
rcrb
mov
pop
add
enter
cmp
sub
cmp
call
movsb
sahf
cmp
rolb
addr16
cld
mov
jnp
ret
xor
dec
pop
push
test
movsl
add
jnp
push
mov
movsb
mov
fsubl
jb
jle
mov
insl
mov
mov
outsl
loope
lcall
jl
mov
fs
add
pop
int
mov
xchg
pop
scas
outsl
xlat
pop
imul
inc
hlt
mov
aaa
movsb
push
in
cli
sub
cmp
add
xchg
xchg
and
adc
mov
mov
pop
mov
daa
cwtl
fldt
sahf
mov
scas
sbb
mov
add
xchg
dec
or
lahf
jnp
outsl
fmulp
or
out
aas
ja
xchg
push
push
test
mov
adc
xorb
loopne
aas
adc
mov
and
cmc
cmpsb
faddl
cs
mov
pop
pop
jge
das
or
dec
dec
add
push
xchg
iret
or
pop
enter
xchg
incb
adc
cwtl
cmp
add
or
nop
bnd
inc
jb
insl
in
mov
mov
loopne
cmp
adc
push
pop
sbb
filds
lret
insl
enter
dec
pop
fs
cmpsb
lcall
push
aad
adc
clc
mov
es
or
sub
mov
daa
aad
cwtl
clc
mov
enter
or
inc
pop
add
fdivrl
loopne
pop
sub
cmp
mov
xchg
or
jns
outsl
test
push
insb
ljmp
sbb
cmpsl
shl
cmpsl
cmpsl
pop
push
and
add
jp
mov
adc
movsl
xorb
into
cmc
push
cmp
nop
out
aas
in
xchg
adc
pop
scas
cmp
aas
sti
mov
and
je
jbe
enter
adc
aam
cmp
xchg
aad
add
adc
xchg
inc
or
popf
mov
test
ds
jo
push
adc
das
adcb
and
insl
push
and
and
and
mov
sub
insb
iret
dec
adc
andl
and
jmp
or
add
and
mov
inc
test
push
subb
je
leave
xor
cmp
sub
add
sbb
jbe
mov
clc
decl
add
sub
pop
ret
dec
rcr
jp
ja
sbbl
push
hlt
pusha
dec
pop
pushf
xor
shrb
adcb
pop
pop
add
mov
xchg
dec
iret
inc
xor
dec
push
adc
push
jp
test
shrb
mov
dec
sahf
xor
sub
sub
movups
enter
lods
jg
xor
data16
inc
sbb
xlat
mov
scas
cltd
fcompl
cmp
or
sbb
repz
add
stc
adcb
stos
aam
pusha
cwtl
ds
jecxz
push
lahf
imul
mov
sbb
dec
and
sar
adcb
cmpsl
mov
and
or
inc
es
sub
test
and
add
xor
push
cmp
push
rcr
bnd
test
mov
inc
push
adc
pop
test
rol
adc
sub
or
bound
insl
pop
test
push
js
enter
sbb
stos
ja
movsb
js
add
out
cli
cmp
adc
push
mov
fsubl
jae
sbb
xchg
xor
movsl
add
and
inc
test
daa
push
shrb
imulb
add
xor
lahf
cs
push
mov
sub
push
in
push
out
jne
pop
mov
cmpsb
mov
inc
cmp
mov
xchg
fwait
or
cwtl
xchg
sbb
psignd
cmp
das
adc
xor
xchg
mov
inc
dec
mov
sbb
dec
mov
or
or
sub
dec
test
jmp
scas
in
add
sbb
sbb
ds
adc
das
cmpsl
or
pop
cmp
mov
cmpsb
xchg
std
cli
pop
outsl
roll
adc
push
pop
pop
shlb
lahf
daa
leave
and
sub
sbb
xor
xchg
sbb
add
or
jecxz
sti
je
push
jne
push
pop
imul
pop
sahf
jmp
sub
push
mov
push
gs
mov
and
ret
push
mov
mov
mov
stos
dec
inc
dec
sbb
or
jle
out
daa
mov
add
popa
dec
add
lret
pop
and
arpl
cmp
adc
mov
into
imul
or
mov
addps
jge
aaa
jnp
mov
pop
aam
push
cmp
ds
lods
sub
push
lahf
push
fwait
xchg
xchg
pushf
scas
sub
push
stos
pop
rorb
psadbw
in
sbb
adc
cwtl
cltd
enter
test
movsl
popa
sarl
inc
mov
xchg
andb
and
fwait
loope
or
jnp
adc
pop
inc
or
cmp
mov
aam
ss
pop
mov
jb
add
or
aad
lret
nop
scas
jb
xchg
xchg
add
cmc
or
dec
adc
div
pop
dec
pop
sub
sub
jae
jns
test
mov
movsb
scas
cmp
mov
xor
push
cltd
xchg
fcoml
pop
inc
dec
mov
and
orb
ss
repz
sbb
sbb
push
xchg
and
stc
pop
sbb
lods
cmp
in
fisubs
fucomip
xor
adc
and
test
inc
fisubs
sbb
mov
outsl
mov
mov
jb
push
sub
cmp
xlat
scas
add
lahf
inc
loopne
or
icebp
xchg
cmp
xor
arpl
and
pop
dec
aam
insb
hlt
mov
popw
movsl
xlat
scas
xor
aad
sbb
and
xchg
cmp
mov
enter
push
inc
push
mov
push
add
ja
fbld
test
sbb
add
xor
maxps
int
sub
lds
push
jo
push
out
jecxz
add
xchg
adc
pop
lret
jp
inc
xor
lock
jne
jae
dec
loope
stc
adc
nop
mov
into
xor
push
stos
movsl
pop
enter
pusha
lahf
lret
cmp
or
imul
xchg
sti
xor
mov
iretw
rorb
mov
pop
or
ja
and
fbstp
dec
mov
push
test
xchg
je
sub
scas
xor
adc
imull
stos
or
cmpb
pop
or
xchg
fnstsw
rcll
inc
cmc
out
pop
popf
es
ja
enter
daa
ss
cmp
inc
lock
ss
pop
jno
nop
or
sbb
xchg
ret
test
into
pop
lock
adc
cltd
aaa
sub
movsl
push
mov
sub
movsb
enter
pop
and
mov
fs
je
in
sub
mov
mov
xchg
xlat
gs
ja
dec
adc
fidivrs
dec
cltd
scas
or
outsl
dec
arpl
add
inc
retw
mov
test
sub
mov
cmpsb
rcl
out
cltd
xlat
jne
push
inc
jns
xorl
xor
scas
icebp
imul
sub
addr16
int3
aas
cmp
stos
mov
in
push
xlat
mov
popf
dec
arpl
cmc
or
jns
in
jecxz
fstp
pop
xchg
out
test
adc
test
and
test
sbb
adc
and
mov
inc
push
xor
icebp
in
daa
inc
xlat
adc
sti
jne
push
test
enter
pop
mov
xlat
cmp
inc
test
and
ret
add
pop
bound
lret
xchg
sub
mov
xor
cwtl
or
and
mov
out
ret
ljmp
inc
loopne
dec
jmp
int3
mov
lds
jno
fs
sub
pop
lods
xchg
add
jmp
push
sub
adc
into
xor
push
dec
adcb
test
push
jns
or
out
and
dec
jp
push
ja
and
or
xchg
out
cmp
sub
pop
out
negb
das
dec
rcll
xor
enter
jle
lods
add
sub
movsl
mov
jmp
or
add
je
xor
scas
push
in
iret
cli
or
xchg
cmp
sahf
rcrl
mov
adc
mulb
outsb
mov
mov
pop
enter
pop
jp
add
imul
jo
jp
xchg
fsubs
xchg
mov
mov
mov
dec
rcr
popf
cmpsl
lahf
popa
pop
je
mov
push
aad
notb
adc
nop
and
dec
mov
ds
mov
cmp
mov
test
add
call
stos
test
clc
xchg
adc
sub
and
and
fsubl
mov
lret
xor
aaa
jecxz
jne
jecxz
loop
popa
insb
ja
fs
and
test
inc
mov
out
adc
push
sbb
jmp
int
inc
dec
cwtl
testl
add
mov
inc
dec
stc
int3
cltd
mov
jb
sub
mov
add
sub
push
cmp
push
aad
jmp
add
push
shrb
push
add
xor
iret
sbb
enter
scas
pop
hlt
xchg
and
outsb
test
pusha
xor
push
iret
sbb
ljmp
out
vpminub
test
mov
sub
shl
int
aas
enter
sub
test
pop
pop
and
sbb
mov
rcrb
and
es
jl
loope
xor
and
push
adc
adc
das
das
xlat
repz
call
adc
add
aad
mov
push
out
mov
mov
sub
dec
mov
push
ss
test
jp
pop
xor
enter
test
inc
dec
inc
xchg
int
test
adc
xchg
xor
cs
iret
lock
iret
decb
fidivrs
jle
dec
mov
push
dec
cmp
jbe
add
bswap
pop
pop
jb
fistl
jne
cli
dec
mov
sarb
std
pop
inc
jg
pop
stc
sarb
mov
test
jge
jmp
sub
js
nop
xchg
cwtl
jo
dec
cwtl
or
xchg
das
xor
cwtl
shrl
push
adc
cs
push
xchg
fwait
pop
das
mov
sub
sub
stos
call
xchg
pop
rolb
enter
data16
aas
mov
sahf
mov
iret
lea
adc
es
jmp
mov
ret
xchg
or
lret
cli
movl
adc
cs
sub
jge
call
mov
andl
pusha
mov
std
jmp
and
and
pop
sub
cli
call
jns
jecxz
hlt
stc
add
mov
aaa
inc
pop
es
movsb
jnp
or
inc
hlt
xchg
pushf
popa
xor
xchg
cmp
or
inc
sbb
or
xchg
dec
jp
adc
sub
in
fdivrp
jmp
push
std
sub
in
jnp
mov
jecxz
aas
gs
or
dec
pop
mov
inc
ret
lahf
je
test
fcomps
inc
js
rorb
neg
add
sahf
cmp
push
or
xchg
iret
add
xchg
cltd
pop
add
add
pop
pop
mov
fiadds
push
adcl
aaa
push
cs
mov
mov
daa
scas
or
lcall
inc
jmp
xchg
sbb
or
aad
cmp
dec
lahf
aaa
pop
or
push
imul
call
inc
mov
pop
dec
pushf
js
in
dec
outsb
push
mov
mov
inc
icebp
cwtl
sarb
jno
sbb
or
mov
or
ret
mov
pusha
scas
orl
jle
test
inc
inc
inc
cmp
aaa
ret
and
xchg
inc
pop
cmpsl
or
inc
shlb
pop
loope
dec
fidivrs
mov
cmp
ja
sbb
outsb
dec
test
out
lods
inc
pop
ret
inc
push
es
jnp
or
pop
pop
mov
fwait
pop
sub
fistpll
int
cmc
mov
or
cltd
and
mov
fwait
dec
stc
cmpsl
fdivl
mov
jnp
or
or
inc
adc
pshufw
push
cwtl
add
sbbl
dec
pop
mov
jge
clc
lock
mov
or
ret
enter
or
rclb
dec
in
dec
imul
out
sub
addr16
lcall
pop
dec
lds
mul
push
lahf
pop
add
aaa
popa
out
jle
xchg
test
outsb
dec
dec
mov
mov
push
ja
jns
aaa
pop
fildll
xor
lret
add
mov
das
pop
or
aam
sahf
inc
pop
lods
or
jge
mov
arpl
add
in
ret
sbb
lock
and
mov
add
icebp
rorl
adc
enter
cmp
xchg
std
adc
and
sahf
jecxz
mov
setg
adc
shl
sub
ja
je
mov
lret
insl
nop
xchg
sub
cmp
int
movsl
ret
pop
out
in
jle
mov
pop
pop
repnz
arpl
cmp
and
lods
nop
shll
or
pop
lahf
lcall
sbb
movsl
dec
shlb
cmp
enter
push
xor
cmp
mov
push
adc
push
mov
stc
outsl
sbb
lret
jl,pt
rcll
cmc
bound
sbb
mov
cwtl
leave
data16
test
xor
enter
mov
dec
pop
ljmp
or
call
cmpsb
adcl
imul
imul
das
lea
add
pop
jg
xchg
pop
push
pushf
pop
xlat
loope
mov
adc
xchg
cmpsl
inc
push
sbb
enter
pop
push
sbb
fcomp
xchg
mov
sqrtps
aad
rcrb
mov
jg
push
enter
xor
call
sub
or
dec
push
iret
rclb
push
pusha
mov
sub
mov
xchg
or
repnz
sbb
cs
inc
push
nop
cmpsb
xchg
enter
in
outsl
and
dec
add
mov
orb
iret
dec
xor
inc
es
jo
jecxz
cmpsl
stc
xor
mov
out
pushf
pusha
je
test
xlat
std
mov
adc
and
push
xchg
cmpsb
sbb
push
outsb
test
and
adc
test
cmpsl
push
cmp
add
xlat
mov
fwait
testb
inc
mov
jmp
ret
pop
adc
and
or
jl
xchg
pusha
pop
inc
pushf
nop
pop
in
cmp
gs
std
jbe
icebp
stos
popf
popa
movsl
adc
daa
int3
popf
adc
lret
rorb
add
test
scas
das
scas
lods
das
mov
mov
xchg
pop
xchg
mov
xlat
xchg
jnp
xlat
pop
imul
jle
in
jle
mov
pop
add
scas
gs
fimull
enter
mov
inc
clc
mov
pop
enter
push
pop
jle
xchg
fidivs
sbb
dec
pop
sub
clc
xor
into
inc
pop
cs
push
jbe
cmp
pop
out
aad
adc
sbb
int3
ret
pmuludq
and
popf
sbb
rorb
out
mov
xor
pop
les
cmpsb
gs
mov
jne
jno
aas
mov
dec
xor
push
loop
cmp
cmpsl
cmpsb
mov
pop
xor
leave
push
dec
loope
add
mov
sbb
add
xlat
mov
mov
aaa
sbb
jecxz
cmp
test
xor
mov
mov
push
jl
pushf
inc
filds
add
out
sbb
pop
xlat
cs
push
ljmp
adc
pop
gs
add
dec
or
dec
imul
sti
fsubrl
pop
pop
pop
int
dec
mov
push
scas
daa
add
or
add
popl
push
ret
dec
lret
test
pop
and
enter
sub
adc
push
adc
push
or
xchg
xlat
jge
jp
inc
les
sahf
jno
xchg
and
inc
mov
dec
int3
mov
stos
sub
sbb
fistps
mov
sub
iret
jg
pop
push
pushf
xchg
mulb
cmp
mov
test
cmpsb
push
clc
push
aam
jmp
fimull
jbe
jo
fisttpl
sbb
mov
js
dec
mov
mov
mov
push
aam
insb
rolb
dec
hlt
fcompl
mov
sub
sub
dec
into
xor
popf
push
jb
popl
out
cmp
pusha
movsb
adc
dec
cmp
xchg
adc
inc
and
add
sahf
out
mov
mov
or
xchg
push
andb
xor
mov
inc
popf
cmp
adc
pop
in
pop
push
mov
xor
jg
jle
xor
xlat
and
dec
cmp
mov
sbb
iret
outsb
inc
icebp
add
xlat
push
inc
pop
lods
loop
in
push
dec
mov
fdivs
pop
xchg
add
aas
scas
out
add
dec
or
cmp
sbb
sahf
es
outsl
mov
adc
in
fsubr
and
inc
inc
scas
xchg
xlat
out
rclb
shrb
xchg
sti
ret
mov
out
push
aad
popa
out
mov
mov
fcmovnu
out
sahf
ficompl
test
fisttpl
mov
bnd
add
sbb
adc
jp
and
jl
jo
repz
sub
sub
pop
inc
jbe
pushf
stc
leave
pop
outsb
add
push
mov
sbb
push
outsl
fcom
and
and
jns
fwait
in
pop
js
enter
test
pop
add
jns
cmp
cwtl
pop
push
rorb
cs
cmp
pop
mov
and
imulb
dec
rorb
add
rorb
enter
and
lahf
push
bound
addl
xor
loopne
jno
or
mov
fldenv
daa
dec
lret
jg
call
jns
dec
inc
hlt
adc
inc
cli
and
rcr
lods
test
stc
loopne
and
cli
cmc
pop
pop
mov
inc
cli
arpl
mov
mov
adc
enter
mov
or
sub
mov
loope
in
mov
jbe
jae
aam
jb
subb
xchg
fs
faddl
xlat
dec
test
roll
ljmp
aaa
push
push
pop
clc
pop
hlt
dec
mov
push
addps
out
mov
pop
mulb
dec
decl
inc
push
adc
jle
adc
repnz
fstpl
enter
js
int
and
lds
les
int
cwtl
out
std
and
packssdw
mov
pop
arpl
popf
push
insl
popf
cwtl
enter
xor
pop
shrb
lods
cld
mov
scas
ja
mov
call
outsl
enter
inc
insl
add
xchg
mov
pop
mov
xor
add
aas
enter
mov
push
xchg
push
mov
or
push
sbb
xchg
out
pushf
jle
pop
mov
push
pop
xchg
and
xchg
pop
inc
fldenv
decl
push
movd
icebp
out
sbb
inc
ljmp
push
dec
mov
das
dec
cmp
adc
adc
mov
out
pop
inc
in
sahf
fwait
out
cmp
rclb
jo
and
xlat
das
sbb
mov
roll
mov
ret
out
jle
clc
enter
outsl
add
add
push
mov
mov
enter
jp
mov
lret
outsl
xor
scas
iret
push
popa
movsl
or
imul
mulb
xor
mov
adc
les
popa
outsl
and
xor
adc
ljmp
enter
out
mov
scas
inc
xorb
mov
xchg
or
sahf
cltd
in
cwtl
cmpb
cmpsb
or
into
inc
js
sub
fcomps
scas
mov
daa
and
mov
and
push
pop
jmp
add
test
dec
test
add
je
dec
and
jecxz
push
sbb
xor
jne
sahf
and
popl
outsb
jg
dec
int3
dec
pop
mov
push
xchg
jo
push
adc
into
cmpsl
adcb
lock
les
cwtl
ljmp
xchg
clc
hlt
xor
and
addb
aaa
lret
dec
scas
pop
std
push
imulb
mov
pop
adc
xchg
jne
xor
mov
loope
loopne
push
loopne
popa
mov
dec
mov
add
xchg
popa
or
lds
lahf
call
mov
adcb
enter
sbb
mov
fmuls
fsubrp
and
dec
mov
push
xchg
insb
and
ljmp
das
push
pop
loope
cmp
push
push
gs
add
lods
inc
adc
lods
pusha
nop
aam
jb
sub
adc
paddsb
mov
jo
xor
cmp
loopne
inc
inc
enter
in
lods
cwtl
push
push
jnp
fidivrl
push
popa
pop
cmc
dec
call
fsub
sbb
mov
into
mov
ret
pop
std
lock
pop
ficoms
sub
hlt
jl
lahf
jle
popa
push
movsb
test
sub
jle
xor
out
inc
repz
imulb
sarb
fcoms
in
cmp
pop
or
sub
iret
mov
call
in
mov
pop
xor
dec
or
icebp
and
push
adc
adc
mov
push
mov
sbb
push
mov
push
mov
outsl
push
and
xchg
mov
cmp
sub
xor
js
adc
ljmp
lock
loop
cmp
cwtl
xlat
jge
dec
mov
data16
jns
in
adc
fimuls
outsb
cmp
js
cmp
int
ret
cld
and
stos
jmp
xchg
or
pop
push
ficompl
testb
repz
lods
int
adc
das
mov
jle
lods
jae
inc
mov
inc
movsl
fsubr
mov
jbe
push
out
sbb
or
mov
dec
push
cmp
inc
xchg
js
cli
movsl
xor
lods
aaa
push
stos
dec
ss
push
mov
xchg
insl
cmpsb
adc
cwtl
lds
or
dec
in
dec
and
mov
push
or
cmp
xchg
and
push
xchg
xchg
shrb
inc
push
test
mov
mov
test
dec
lock
mov
aas
iret
mov
enter
mov
xchg
mov
and
outsb
popa
dec
fcoms
xor
loope
push
or
jp
ds
pop
or
jo
and
aam
mov
fs
push
stos
push
cld
jecxz
ja
addr16
enter
out
push
xlat
mov
inc
dec
dec
sub
mov
cwtl
cltd
stos
xlat
popf
pop
in
lahf
negb
jl
adc
cli
jb
js
cmp
les
pusha
fisubl
xchg
mov
inc
xor
ss
and
sub
imul
add
sarl
or
test
or
mov
pcmpeqd
mov
ss
stos
add
lds
pop
outsl
loopne
lret
int
shlb
pop
cmp
repz
jno
mov
lock
or
and
int
xchg
push
pop
sub
out
jl
jae
xchg
fidivrl
mov
add
ljmp
std
notl
lds
push
fwait
xchg
test
imul
pop
or
add
mov
xchg
or
add
repnz
or
or
test
call
daa
mov
aas
mov
leave
and
jmp
test
cmp
cmp
mov
add
or
daa
xchg
mov
mov
fidivs
pop
jmp
xor
gs
dec
orb
js
out
int
mov
push
pop
pop
jo
scas
lea
mov
pop
test
stos
movsl
jb
out
jae
mov
insl
rolb
add
test
sbb
push
fildl
mov
cmp
sbb
dec
dec
ds
jbe
arpl
pushf
dec
pop
xor
jle
jnp
or
sbb
sbb
filds
jb
repz
pop
je
ret
or
cmp
pop
cmc
lret
ficoml
pop
idivb
sub
and
pop
bound
andb
jb
pop
cmp
ljmp
adc
lcall
ret
cmp
mov
pop
mov
inc
adc
pop
jns
mov
lret
fwait
pop
push
jmp
push
pop
pop
pop
or
pop
mov
mov
add
call
push
ss
stc
test
mov
mov
adc
movsb
popa
adc
ret
pop
xlat
jl
test
mull
push
movsl
cmp
cmp
cmp
int3
fcompl
mov
pushf
xorb
pop
pop
icebp
sub
or
jns
and
mov
mov
js
and
add
cmc
cwtl
loope
inc
sahf
ret
std
inc
leave
in
sub
cmp
ljmp
add
nop
pop
std
sti
push
xorps
lods
test
movsb
sub
enter
add
add
inc
adc
and
or
out
scas
sub
push
mov
cmp
mov
fsts
adc
cmp
mov
roll
sub
sbb
in
into
xchg
fwait
les
mov
lahf
cmpsb
mov
or
or
inc
xchg
sub
inc
leave
ss
inc
subb
push
jecxz
daa
jecxz
daa
out
daa
cmp
ja
pusha
pushf
test
or
testl
lret
lds
push
daa
jne
lahf
push
std
repz
cwtl
into
in
xchg
cmovbe
rcr
push
add
mov
movb
add
leave
das
inc
sub
pop
jmp
inc
insl
jnp
jns
add
fs
pop
jg
cmpsb
xchg
xchg
xchg
cmp
fistpl
pusha
cmp
test
xchg
mov
xchg
int
adc
push
fcomps
mov
jmp
ret
aas
pop
mov
enter
sub
add
fists
out
mov
out
and
bound
fcmovnu
add
in
mov
add
arpl
and
and
cmc
stos
dec
jg
inc
pop
test
xlat
push
cmp
scas
mov
xchg
ds
push
ss
inc
or
jecxz
ja
sbb
out
in
leave
repz
sub
mov
push
in
rcll
push
out
mov
jmp
xchg
mov
cmp
sub
mov
fadds
pusha
xchg
ficoml
mov
sub
std
repnz
push
jne
shlb
pop
jg
and
pop
sub
lret
mov
mov
rolb
fisttpll
and
int
fs
dec
xchg
add
inc
sbb
cmp
imul
sub
sbb
sbb
sahf
cmp
adc
popl
pop
or
ss
pop
movsl
popf
mov
imul
add
fcomi
adc
addb
adc
pop
fldenv
push
mov
sub
daa
and
lea
ret
inc
cmp
mov
fdivr
test
jne
subl
popa
push
xchg
gs
negb
inc
dec
lret
mov
cmpsl
jecxz
pop
pushf
inc
xor
push
fldl
or
idivl
fistps
and
sub
xchg
lcall
cmpsb
fprem
aas
mov
xorb
xor
push
mov
pusha
hlt
pop
push
ljmp
sbb
imul
mov
lods
in
adc
xor
adc
mov
enter
push
dec
sahf
mov
and
shrb
mov
call
push
mov
fldl
repnz
mov
aaa
mov
pop
les
sbb
pop
adc
mov
xchg
inc
mov
call
punpckhdq
dec
flds
jle
add
add
inc
adc
or
sub
xchg
pop
cmp
ficompl
jmp
inc
or
and
test
inc
and
movsb
fldt
or
daa
test
xlat
pop
pop
sbb
cs
jae
insl
sti
dec
xor
dec
add
and
pushf
inc
or
sahf
jmp
leave
es
cmp
sbb
inc
clc
filds
daa
and
cmp
jle
add
add
sarb
test
bound
scas
pop
push
sub
test
mov
adc
mov
fsts
sub
jmp
mov
shlb
aam
ja
xchg
sbb
jns
and
test
jg
mov
and
jmp
jnp
xchg
pop
lahf
iret
add
in
sub
xor
gs
or
adc
add
loop
and
sub
cltd
or
dec
pop
cmp
push
pop
lcall
fdivrl
mov
xchg
and
add
loopne
lea
pop
and
lahf
xchg
jle
dec
inc
int
fiaddl
lods
shl
lcall
or
pop
pop
pusha
js
loopne
testl
xlat
out
fstpt
sub
mov
inc
add
fwait
popf
rorb
mov
fsubl
out
xlat
pop
in
fnsave
test
cmp
mov
stos
xchg
popa
or
pop
loopne
mov
xchg
sbb
mov
fcoms
pop
and
and
inc
xchg
repz
cmp
mov
inc
faddl
loop
sahf
or
xchg
inc
cmp
or
mov
or
pop
movsb
xlat
push
or
cmpb
loope
bound
or
fadds
mov
pop
adc
leave
fldl
inc
lds
mov
pop
test
sub
mov
mov
xor
xchg
dec
cmpb
jno
shll
nop
xchg
mov
movl
mov
hlt
lahf
push
enter
roll
ljmp
popf
inc
pop
cmp
and
xchg
add
lock
daa
xlat
sub
pop
mov
enter
and
inc
mov
andl
pop
fistl
test
jg
mov
inc
mov
cwtl
mov
and
cmpsl
mov
add
daa
sub
xchg
mov
or
cli
pop
mov
sub
or
or
xchg
out
pop
in
fldenv
sar
stos
into
dec
shrb
and
jnp
adc
pop
xor
mov
push
sbb
fsubrl
out
cmp
pushf
mul
insb
aas
pop
int3
add
xlat
test
popf
pop
cmp
mov
loope
fists
add
and
or
mov
dec
pop
inc
sbb
scas
push
stos
jns
push
pop
and
dec
adc
mov
xchg
pop
jno
daa
inc
sub
mov
jnp
jge
adc
test
int
movl
add
pop
cmp
cmpsb
add
rcl
js
stc
sub
push
daa
ficompl
mov
lret
add
lahf
sbb
mov
cltd
cwtl
xor
dec
inc
jno
imul
and
or
add
push
sbb
cmp
dec
add
fs
fmull
push
pop
mov
and
add
xor
pusha
daa
sbb
pop
divl
xchg
pop
or
leave
push
stc
push
mov
lds
add
bound
cmp
in
sub
and
test
pop
and
popf
dec
dec
sub
and
jmp
cmpsl
pop
mov
add
sbb
jge
shl
xor
cmpl
adc
and
mov
insb
jo
jg
aad
rcr
movsb
mov
cmc
mov
sbb
mov
mov
push
dec
add
sub
fwait
pop
dec
movsb
mov
xor
xchg
mov
and
jno
mov
add
pop
xchg
mov
and
push
adc
dec
cvtps2pd
and
clc
outsl
pop
dec
mov
popf
filds
decb
int3
mov
aam
ret
adc
cld
stc
xchg
jge
sbb
fs
add
dec
call
mov
movsl
sbb
mov
mov
fcompl
stos
sahf
and
pop
mov
clc
xor
cmp
sub
push
pop
dec
lds
rorl
and
jmp
sti
or
inc
jecxz
dec
mov
sub
pop
mov
mov
dec
xchg
sub
mov
pop
cmp
pop
jecxz
or
and
xchg
add
shl
inc
roll
pop
and
jns
add
outsl
mov
jmp
mov
adc
inc
and
pop
nop
mov
mov
xor
imul
xchg
sbb
pop
stc
cld
lea
push
pop
mov
and
xchg
cltd
cmp
push
in
bsf
sbb
pop
inc
and
pop
call
test
push
mov
xchg
push
add
stc
clc
imul
dec
int
xlat
xor
cmp
pop
pop
adc
ja
inc
shlb
in
sbb
sub
imul
mov
mov
cmovnp
testl
and
bound
sbb
repnz
fistpll
int
dec
sub
mov
sbb
or
sub
addr16
inc
cwtl
repz
cmc
outsl
adc
out
mov
imul
lods
sbb
jae
jg
inc
test
mov
inc
arpl
fdivs
add
pusha
jns
add
fadds
push
cwtl
or
shl
outsl
les
imul
push
jne
ljmp
sbb
mov
rcrb
jae
fwait
mov
sbb
xor
arpl
ret
popa
stc
rolb
imul
int
lret
jnp
and
dec
movsl
test
cwtl
pop
popa
cmc
jae
jno
add
jl
pushf
pop
push
jne
jne
sub
push
jge
popa
mov
daa
inc
xchg
inc
aas
test
imul
jecxz
out
sbb
cmp
out
add
jge
xchg
das
xorl
outsl
ret
insl
mov
mov
jl
xchg
fcomps
punpcklwd
es
cmpsb
jmp
add
sbb
mov
imul
xchg
aas
xchg
cwtl
roll
ja
jne
xchg
push
fadds
jae
pop
out
repnz
mov
fisubs
cmpsl
and
inc
popa
lret
insl
jmp
inc
imul
mov
ja
sbb
pop
mov
out
lea
lods
aas
sub
ds
sub
jne
xchg
inc
aaa
imul
mov
jno
sarb
dec
inc
das
out
aaa
out
in
psrlw
outsl
or
divl
mov
jecxz
out
pushf
jmp
aas
leave
jae
add
jg
or
add
or
jbe
scas
xchg
cmpb
test
dec
cmp
inc
jae
and
fisubl
sub
test
outsl
insl
aas
adc
xchg
inc
movsb
imul
push
int3
cwtl
mov
dec
arpl
or
jne
mov
jae
shll
rorb
and
push
fwait
jle
jae
mov
lahf
inc
push
jne
sbb
xchg
jg
jge
xchg
and
adc
pusha
lcall
mov
and
and
rcr
jge
aas
fists
cmp
js
jecxz
out
xchg
aas
jge
mov
jno
cmpsl
inc
jle
gs
mov
cli
cmp
jnp
icebp
out
push
xchg
mov
cwtl
push
mov
or
imul
jne
mov
in
out
and
pop
repnz
popa
adc
jne
nop
pop
je
test
mov
daa
aaa
dec
and
popa
jle
dec
ja
xor
mov
arpl
in
and
inc
sbb
and
add
aad
in
loope
stc
fwait
mov
pop
xor
fwait
jnp
rolb
ja
mov
imul
jecxz
and
push
cmpsl
and
and
scas
enter
outsl
jp
nop
cmp
pushl
rclb
or
pop
test
push
mov
rorl
test
xchg
test
mov
addr16
fdivrl
jg
xor
sbb
inc
fnstcw
xchg
mov
rcrl
addr16
enter
sbb
popa
pusha
xchg
subb
lret
imul
test
shlb
das
push
jnp
arpl
cmp
xchg
cwtl
sbb
adc
arpl
outsl
jecxz
aas
ds
cmpb
or
imul
mov
dec
ljmp
sarb
jne
jae
adc
jecxz
inc
dec
jg
xchg
in
faddl
xchg
xadd
add
and
push
setle
push
sbb
mov
test
sub
or
cmc
push
call
loopne
sub
lcall
jbe
xchg
pop
xchg
jae
arpl
cmpsl
add
pop
leave
cltd
stos
mov
outsb
ret
shlb
fnstcw
pushf
add
fadd
test
je
push
push
es
inc
push
leave
js
mov
insb
sbb
lahf
or
out
mov
cmp
lods
jmp
dec
sub
lock
lock
ror
pop
pop
icebp
movsb
inc
sub
inc
sub
mov
shlb
and
in
jmp
inc
fistl
xchg
sub
or
push
or
aas
and
es
cli
inc
ret
dec
sub
subb
sbb
out
mov
and
sahf
fs
lds
in
inc
rcr
adc
ficoms
stos
mov
jno
mov
jb
xchg
jle
mov
mov
test
ja
cmp
xor
xchg
xchg
inc
mov
scas
adc
dec
cltd
insb
orl
jbe
pop
mov
icebp
and
sbbb
fisubs
pop
sub
jge
and
mov
icebp
add
dec
les
mov
ljmp
lahf
pop
les
fisubs
inc
sbb
outsl
ds
or
dec
icebp
stos
push
repnz
dec
xor
out
fists
in
notl
out
adc
sub
cmp
mov
lret
mov
xor
lret
ss
imul
fwait
test
ret
pop
dec
dec
adc
pop
inc
push
sub
int3
dec
mov
mov
jb
clc
xlat
jno
add
inc
push
fisubrs
shl
lods
inc
stos
lcall
inc
xor
or
leave
push
mov
jg
repnz
fmull
jne
add
xor
mov
fsub
lret
jecxz
sbb
fidivrs
test
je
add
hlt
or
add
mov
jmp
push
cmp
and
add
cmpsl
int3
dec
inc
fdivrl
ja
xchg
sahf
add
mov
pusha
jns
xchg
fidivrs
sti
popf
jno
lea
rolb
cli
fdivp
pushf
add
repz
jmp
adc
ss
mov
clc
push
lahf
mov
dec
lret
push
xchg
sub
sub
dec
enter
push
insb
or
je
cmpsb
or
jnp
xor
loopne
inc
sub
add
and
mov
cltd
mov
jnp
mov
filds
in
inc
les
mov
sbb
lds
cmc
jno
push
xchg
pop
mov
add
cmp
jb
inc
out
insl
arpl
pusha
mov
xchg
mov
xchg
push
sbb
lret
imul
in
push
cld
das
cmp
pop
mov
inc
andb
mov
or
mov
and
test
outsb
es
pop
sub
pop
cld
shr
hlt
and
xchg
sar
test
xchg
outsl
arpl
pop
cli
pop
adc
inc
and
dec
scas
bound
xor
and
rcll
gs
mov
lea
negb
int
out
shl
aas
xchg
jne
and
mov
pop
clc
mov
and
test
call
and
push
movsb
fistpll
cmp
out
out
inc
inc
lcall
clc
movsl
dec
das
sub
sub
subl
call
rorl
shl
mov
pusha
movb
pushl
lea
je
call
mov
mov
not
pop
movzbw
bswap
pop
jmp
lea
je
call
pushf
lea
jb
bt
push
cmp
pushf
movb
pushf
pusha
lea
ja
stc
cmp
add
stc
cmp
or
jmp
push
and
jo
test
sub
and
adc
dec
xor
aam
xchg
adc
daa
out
xchg
decl
push
xor
dec
movsb
mov
mov
test
enter
scas
fnclex
aas
imul
sub
adc
sbb
in
test
js
int3
and
mov
jb
stc
stc
cmp
jmp
pusha
cmc
rol
lea
jae
push
mov
pushf
inc
bt
xor
test
jmp
pusha
mov
pusha
add
call
in
popf
fnstenv
and
scas
mov
push
stos
jp
scas
jp
push
jb
loop
dec
mov
insl
in
cmp
lods
lods
or
loope
movsl
popf
fwait
xchg
test
mov
sti
ret
push
scas
inc
fisubl
adc
movsb
in
cmpsb
xor
notl
add
pop
add
ss
shr
decl
cmp
lock
decb
cmp
loop
or
loopne
mov
cmp
mov
cltd
out
xor
lods
mov
sbb
and
cmp
inc
push
movsb
testl
jp
adcb
mov
incb
mov
ds
ljmp
and
aad
cmp
jge
les
and
xor
jae
or
pop
aad
inc
cmp
mov
pushw
xor
xchg
cmp
sub
push
jno
mov
add
movsb
sbb
dec
outsl
loope
in
cli
jo
mov
movsl
jg
xchg
mov
fsubs
adc
cwtl
pmaxsw
lret
mov
lods
lods
lcall
ljmp
mov
enter
imul
adc
clc
dec
mov
ds
rolb
push
or
inc
inc
fimuls
stc
loopne
stc
outsl
lea
sub
push
test
xor
sarb
and
fcoml
out
bound
aad
xchg
int
dec
in
arpl
test
aas
jge
jb
jnp
inc
xor
negl
popl
nop
push
dec
clc
sahf
sub
daa
pop
mov
adc
repnz
and
adc
push
inc
fildl
adc
popf
stos
jnp
mov
xchg
es
push
arpl
pop
in
rolb
and
inc
cwtl
mov
or
pop
xchg
fnstcw
and
inc
adc
add
iret
ret
jg
jmp
cmc
cwtl
insb
bound
xchg
jmp
testl
call
inc
xchg
stc
cmp
mov
orl
inc
lea
out
cmp
stos
dec
in
popl
or
mov
push
sbbl
sbb
jg
aas
ljmp
icebp
mov
stos
ja
scas
jae
out
imull
sub
or
xlat
sub
pop
xchg
test
lock
les
xor
and
push
bound
clc
sub
inc
inc
adc
fidivrl
mov
scas
shl
bnd
adc
cmc
pop
jae
cs
in
xor
loop
push
dec
into
push
and
movw
lea
ja
push
pushf
pusha
push
mov
lea
jmp
and
and
fildl
movsl
or
add
and
dec
loope
pushl
inc
pop
nop
lods
loopne
xor
and
sbb
jns
mov
push
add
push
push
mov
ljmp
push
or
stos
movsb
mov
sub
jo
movsb
fisttpl
call
fcmovbe
push
lahf
xchg
leave
cltd
shll
sub
loope
pop
cmp
sub
out
dec
or
mov
and
inc
loop
and
mov
pushl
neg
mov
call
inc
lea
push
lea
call
pusha
pushl
adc
call
lea
je
push
lea
jmp
push
nop
lods
push
ret
insb
xchg
fwait
aad
add
xchg
jmp
popf
sti
test
add
and
clc
dec
leave
les
xchg
push
lahf
addr16
jmp
cltd
fwait
movsb
fsubrs
mov
dec
stc
xor
scas
push
cmp
andb
pop
fcmovu
cs
and
cli
fs
inc
loopne
in
repz
dec
push
stc
pop
xchg
sub
mov
pop
push
push
pop
rcll
les
xchg
dec
ljmp
jbe
or
adc
lcall
jbe
xchg
sbb
cli
out
fiaddl
cs
mov
xor
test
add
not
bt
jmp
call
jmp
daa
push
je
xchg
repnz
sbb
xchg
xlat
outsl
inc
jnp
dec
or
arpl
jae
lods
ret
cmp
aam
loop
das
push
mov
inc
mov
or
lock
fcomp
and
inc
xor
add
mov
shrb
jns
xchg
outsl
repz
shll
sbb
mov
lea
push
bts
btc
push
inc
lea
jmp
mov
mov
xor
rcll
cltd
fnstcw
aad
aaa
pushf
std
test
cs
nop
ljmp
adc
ficompl
push
cli
movsb
test
xor
inc
dec
inc
mulb
cmp
lds
dec
pop
inc
mov
dec
xor
cmpsl
and
inc
xlat
stos
xor
and
sub
and
and
adc
inc
push
pop
push
cs
ret
insl
pushl
mov
setle
push
not
pusha
lods
call
bswap
mov
lea
lea
pushf
pusha
mov
movsbw
movl
jmp
test
fsubl
dec
jge
shl
sub
in
pop
cmp
adc
xchg
xor
mov
mov
lods
test
jmp
arpl
mov
ret
push
ret
jne
inc
outsl
mov
sbb
xchg
dec
jo
movsb
sub
fimuls
ds
pop
cmp
adcb
and
and
mov
rclb
mov
adc
sub
shrb
test
jg
pop
mov
cmp
or
arpl
xchg
add
mov
pop
iret
add
mov
adc
xchg
fadd
push
push
jae
pop
clc
cmpsb
inc
clc
push
inc
push
xchg
pop
inc
lcall
std
sbb
pushf
incb
adc
shrb
nop
add
add
sbb
push
aaa
xchg
add
popa
or
pop
repnz
sub
pop
xor
adc
test
pop
mov
mov
test
cmp
call
fsubrl
cs
sub
and
popa
mov
iret
add
xchg
sar
push
cmp
out
ret
sub
and
stc
jno
push
scas
iret
mov
jb
pop
mov
dec
jne
lock
adc
sti
inc
imul
mov
fcom
sbb
in
mov
jp
sub
add
xor
mov
xor
dec
jecxz
popf
jge
popa
cmpsl
das
sti
pushl
repz
sub
shrl
test
push
xor
jno
mov
sub
mov
inc
mov
mov
cs
mov
dec
dec
aaa
in
les
dec
adc
sub
mov
test
lods
arpl
jl
fistpl
das
ja
sub
mov
dec
pop
sbb
inc
dec
inc
lcall
cli
push
outsl
jo
in
adc
lret
ror
and
dec
data16
cmpsl
sbb
dec
cmpsl
das
fs
sub
out
test
sti
mov
outsb
sbbb
mov
jmp
dec
lret
scas
mov
sti
mov
mov
movsb
mov
adc
dec
pop
sbb
fldenv
pop
jp
or
ret
cs
call
inc
add
xchg
mov
sub
fdivr
xor
mov
sarl
pop
aas
sbb
test
cwtl
shl
rclb
mov
jecxz,pt
push
mov
push
cs
ds
cmpsb
lcall
cmp
push
mov
dec
mov
out
dec
and
call
xor
js
inc
mov
ljmp
and
xchg
jmp
movl
call
sar
mov
call
call
mov
lea
jae
pusha
lea
jle
mov
mov
mov
dec
push
mov
inc
pusha
mov
lea
jmp
add
jno
cmp
ljmp
arpl
ret
fists
xchg
push
mov
les
test
testl
movsb
fbld
shll
loope
push
xor
lods
sub
or
pop
in
lods
pushf
sbbb
loop,pn
pop
xor
jl
aam
jne
ret
fcomps
nop
inc
or
pop
cwtl
and
pushf
in
aam
and
cmp
pcmpeqw
adc
andb
adc
lahf
dec
xlat
jnp
cmp
imul
lea
and
add
js
mov
insb
pop
add
idivl
incl
pop
lea
jne
out
jmp
sub
out
or
outsl
adc
jo
adc
in
inc
dec
filds
push
int
cmp
fdivrp
pop
cmp
jmp
mov
lahf
setnp
loope
dec
pushf
mov
pushf
lea
call
pusha
call
inc
jno
loope
into
repz
mov
push
pop
jl
push
xor
clc
jecxz
adc
adc
xchg
cmp
jne
icebp
sti
movsb
adc
mov
in
lahf
lea
adc
dec
out
and
xor
pop
imul
add
adc
pop
and
pusha
or
mov
add
pop
lret
into
mov
adc
clc
dec
xchg
pop
clc
fdivrl
cmc
push
cmp
ss
or
stos
test
mull
sarb
test
lret
loope
xchg
jbe
push
neg
test
not
test
cmp
neg
jmp
call
mov
push
jbe
iret
add
xchg
pop
mov
jle
into
testb
incl
cmpsl
inc
jmp
loop
and
lahf
dec
scas
aas
mov
pop
mov
mov
pop
nop
or
sbb
sbb
sti
cmp
sub
outsl
mov
cmpb
mov
dec
xor
push
add
loopne
jae
cli
stos
sub
repnz
stos
or
xchg
cli
and
adc
xor
jmp
push
adc
arpl
iret
add
mov
inc
xchg
pusha
js
enter
insb
jbe
mov
push
inc
push
sbb
gs
push
arpl
sti
inc
das
fwait
movsl
ds
cmp
fiadds
repnz
sahf
push
rcrb
inc
cltd
scas
push
push
lods
inc
mov
jl
mov
mov
mov
addr16
mov
loopne,pn
mov
xor
jmp
mov
mov
enter
call
stos
insl
push
dec
pop
pushl
pop
or
and
mov
fdivrp
xchg
repnz
jbe
aam
notl
pop
popf
out
mov
pop
mov
rcrb
add
jp
stc
fldl
ret
xchg
xor
xchg
xor
xor
adc
nop
xor
pop
aaa
xchg
cmpsl
xor
or
test
cmpsb
pop
xchg
push
and
ficompl
push
and
cmp
push
xchg
xor
movsl
or
jns
jg
push
mov
mov
in
std
mov
popa
lds
aam
fists
inc
xor
and
fildl
cmp
or
sbb
fists
ljmp
into
icebp
mov
lds
lds
push
pushf
fcmovu
nop
cli
les
test
imul
loopne
and
sbb
ss
fmul
fisubrs
xor
inc
inc
bound
cs
pusha
or
and
xchg
mov
stos
jp
and
movsl
fabs
add
shrl
cmpsb
add
cmp
jo
scas
sub
mov
jo
xchg
mov
jp
dec
gs
push
subl
mov
rorl
loop
insb
sahf
push
or
in
inc
lcall
nop
lcall
pop
push
jp
sub
loop
push
scas
idiv
lcall
fidivrs
popl
aaa
and
mov
add
adc
gs
push
lret
fmull
cmp
and
nop
ret
push
mov
jl
dec
and
mov
mov
xchg
in
scas
inc
push
mov
sbb
fdivrp
inc
mov
or
push
jo
xchg
loopne
hlt
jb
cwtl
xor
push
stos
pop
fnstcw
ja
mov
hlt
add
mov
clc
or
addl
adc
out
mov
ret
push
outsb
add
dec
push
adc
mov
imul
mov
xchg
out
mov
push
call
sahf
insl
cmpsl
lahf
add
outsl
dec
mov
sub
loopne
adc
xchg
xor
inc
mov
cmp
fwait
dec
insb
repnz
add
scas
jns
sbb
filds
inc
and
mov
inc
shrl
jmp
aad
notl
dec
add
pop
pop
inc
and
dec
mov
jno
mov
jg
out
xlat
jmp
xlat
rcll
stos
xlat
mov
jne
mov
orl
or
or
mov
push
imul
stc
rolb
xor
out
lods
ja
movsb
and
leave
addr16
rcll
aaa
and
dec
out
push
cmp
mov
rep
jmp
scas
enter
xchg
insb
cmpsb
movsb
movsb
mov
and
mul
mov
mov
ja
push
xchg
or
ret
mov
and
das
andl
dec
popa
shlb
roll
fldt
mov
xchg
and
fdivrs
test
das
inc
aad
xchg
fwait
aad
sbb
movsl
test
sbb
push
ss
mov
fs
sbbl
loopne
add
movsb
fistpll
jmp
scas
negl
sub
dec
cmp
dec
fbstp
xlat
ret
pop
xchg
jnp
imul
ficoml
les
jmp
aad
pushf
pusha
pushl
ret
jmp
pushf
call
fcmovu
inc
fildl
dec
add
dec
or
in
out
mov
push
push
mov
cmp
std
ljmp
sub
in
stc
sar
lods
push
dec
jo
std
aaa
loopne
push
lcall
out
out
scas
xchg
sbb
fists
sbb
mov
push
clc
pop
xchg
mov
or
mov
pop
cld
xchg
add
push
pop
scas
popf
xlat
loope
in
jp
lcall
pop
and
lods
iret
xchg
pop
mov
pop
int
sbb
ficoml
cmp
add
mov
adc
sarl
xor
sbb
and
cmp
in
repnz
jb
and
xchg
jmp
lret
sarl
shrb
sub
inc
xchg
iret
out
mov
cmp
rep
jbe
pop
pop
lock
xor
fucomi
int3
dec
shll
jp
push
enter
fisubrl
mov
int
in
pop
addl
jbe
add
test
mov
lea
cmp
adc
push
sbb
cmp
imul
cltd
jge
test
in
jno
popa
pusha
dec
lds
push
xchg
xchg
lret
ja
int3
add
add
mov
and
out
inc
and
pushf
pushf
mov
pushf
pushl
ret
mov
jmp
imull
jb
call
in
pop
imul
and
push
mov
je
ret
jns
aaa
jae
inc
lods
jb
call
mov
add
fnstsw
pop
push
pushf
pushf
lea
jmp
movl
pushf
pushf
pushl
lea
jmp
roll
pop
imul
xor
adc
fs
mov
adc
cltd
out
andb
cwtl
pushf
dec
cmp
jns
pop
sub
cwtl
mov
jne
and
imul
loopne
push
jne
jo
inc
cli
hlt
lock
push
mov
and
dec
dec
outsb
stc
stos
adc
pop
inc
pop
mov
pop
arpl
pop
jle
inc
push
mov
mov
jmp
hlt
xchg
or
sub
push
fdivrs
and
iret
mov
and
cmp
adc
clc
mov
sub
pop
insb
mov
add
sbb
fists
xchg
lret
out
sti
mov
cmpsl
aaa
mov
fiaddl
or
clc
xchg
inc
mov
xchg
xor
fisubl
xchg
movw
movl
pusha
push
mov
pusha
pushl
ret
cmp
lea
lea
not
movzbl
call
movl
call
adc
lea
pushf
pusha
mov
pushl
ret
call
push
pushf
call
clc
clc
call
lea
call
pusha
lea
jmp
jb
jmp
stos
in
iret
add
pop
jle
out
and
mov
ljmp
xchg
cmc
push
into
inc
push
and
push
adc
jge
std
cmpsl
lahf
popa
lret
faddp
stos
test
xor
rcrb
cmp
shlb
ljmp
cmp
call
inc
push
pop
lods
jne
sbb
pusha
dec
rorb
cmp
and
ja
lcall
cmp
adc
mov
andb
xor
incl
das
xchg
sti
repz
fldenv
in
stos
ljmp
arpl
bound
push
pop
mov
mov
loope
pop
add
inc
pop
sub
iret
fstl
mov
ss
push
lock
jns
push
and
pop
test
xor
adc
fs
std
repz
push
cwtl
ss
xchg
xchg
jbe
dec
inc
or
out
push
les
add
int3
adc
xor
ljmp
xlat
stos
xor
pop
fstpt
jle
cmpsb
inc
dec
xchg
jnp
ja
inc
incl
dec
cld
pop
mov
int3
add
or
dec
pop
lret
mov
push
ja
fstpt
std
cvtpi2ps
or
stos
ja
cmp
sahf
inc
lds
jecxz
mov
shrl
leave
mov
mov
or
cmp
cs
push
jl
outsl
mov
js
dec
addl
cld
aad
leave
sub
sbb
aad
or
mov
pop
dec
mov
shrl
lods
dec
mov
jle
cmpsl
mov
xchg
or
dec
jnp
pop
push
shrl
sbb
jae
or
sbb
push
rcrl
cmp
scas
pop
rolb
mov
mov
daa
inc
sti
out
dec
dec
aam
dec
or
mov
xorb
sahf
daa
pop
aad
xchg
clc
xor
inc
inc
xlat
xchg
popa
cltd
ror
adc
push
adc
int3
push
dec
and
jecxz
jg
xchg
mov
push
mov
outsl
pop
lret
or
mov
dec
inc
inc
xlat
xchg
push
cmp
mov
push
push
dec
insb
add
mov
mov
int
xchg
in
jge
popa
inc
mov
cmp
or
xor
dec
pop
ja
shrb
xor
cs
pop
roll
cld
xchg
lock
js
push
lea
pop
mov
cmp
adc
adc
aam
push
sub
mov
daa
xor
mov
movsl
mov
pop
and
in
cmpsl
add
sub
cld
pop
fxch
idivl
lret
mov
and
pop
mov
lea
jb
pushf
cmp
call
lea
je
jmp
jmp
xor
neg
inc
mov
cmp
mov
call
add
mov
inc
or
xchg
int3
hlt
mov
rcrb
and
mov
pop
mov
clc
xor
mov
push
inc
cmpsb
pop
mov
pop
pop
or
data16
sub
adc
imul
xor
js
pop
sbb
pusha
lret
mov
js
je
mov
mov
ja
mov
mov
mov
ds
push
pop
adc
aaa
xchg
mov
xchg
inc
mov
jbe
and
xchg
jnp
scas
aas
lahf
and
pop
sub
add
sbb
push
fdivp
es
pop
jle
fimuls
mov
xor
dec
sti
and
sub
mov
test
iret
call
add
jb
mov
cmp
pop
insb
dec
cmp
test
pop
jmp
inc
je
popa
ja
push
lds
mov
gs
mov
xor
in
pushf
pop
cmp
cmp
or
and
ficompl
cli
outsb
fmull
dec
lcall
aad
inc
sbbl
push
jecxz
lock
repnz
int
and
mov
lea
cltd
adc
dec
stc
add
mov
sbb
rcl
mov
test
jmp
lea
jne
cwtl
movzbw
pusha
pushf
movb
bswap
mov
movzbl
movsbw
lea
pusha
movl
call
cmpb
pushf
pushf
jmp
cmp
pop
mov
pop
sub
rcl
enter
in
mov
jecxz
pop
sbb
mov
mov
bound
mov
push
outsb
outsb
repnz
inc
cs
inc
aas
loop
sub
imul
push
dec
int
shll
mov
and
cmpsl
mov
inc
cs
imul
cmp
sub
pop
fs
dec
rclb
inc
js
lods
cmp
dec
sbb
call
sbb
test
std
andl
cs
fwait
lcall
sbb
inc
xchg
sahf
pop
push
cs
loop
and
jmp
fists
scas
and
lock
stos
push
lahf
pop
mov
jecxz
scas
xchg
ja
imul
add
xor
mov
mov
sbb
push
data16
pushf
xchg
jo
movsb
and
push
cmp
enter
pop
mov
jmp
sub
pop
or
popa
push
cwtl
test
cld
out
lds
dec
inc
jl
jb
and
adc
test
push
scas
or
ja
je
lods
mov
xchg
dec
mov
repz
idivl
cmc
and
repz
mov
mov
xor
push
push
fdivs
or
rcrb
inc
clc
push
stos
lods
mov
jae
mov
notb
sarb
pop
dec
add
test
mov
mov
sub
mov
xchg
jp
sbb
dec
mov
pop
pop
mov
jmp
and
js
femms
daa
sbb
or
adc
daa
or
adc
daa
adc
push
daa
adc
or
sti
push
or
adc
daa
or
adc
daa
adc
adc
or
or
add
dec
cld
xchg
pop
push
out
scas
ret
jecxz
arpl
imull
movsb
mov
adcl
das
jnp
test
dec
push
or
mov
outsb
jg
jmp
mov
movsb
in
sarb
bound
icebp
das
jno
xlat
lret
mov
add
add
sbb
mov
xor
mov
xchg
mov
mov
rep
loope
shll
or
adc
cmp
add
jle
in
lahf
add
add
imul
jl
sbb
lret
cmp
fs
sub
jb
mov
dec
int
cmc
cmp
arpl
lret
jmp
mov
push
pop
movsl
inc
or
sarl
push
scas
and
ss
in
dec
jnp
mov
out
cli
jbe
mov
inc
sub
mov
sub
and
out
sbb
lds
out
je
and
pop
mov
test
jle
mov
mov
xchg
lcall
mov
push
pop
push
mov
fincstp
ret
mov
pop
leave
movsb
xchg
inc
rcll
out
loope
inc
and
aaa
xchg
dec
ljmp
repz
out
jecxz
mov
mov
mov
out
test
subl
fldl
dec
jmp
inc
iret
cmpsl
or
and
int
pop
roll
movsb
mov
mov
je
cld
pusha
inc
movsb
dec
addr16
into
mov
lock
mov
jge
sbbl
ret
aam
sub
push
inc
dec
out
daa
hlt
jecxz
in
inc
pop
xchg
nop
or
popl
inc
dec
outsb
push
add
inc
pop
adc
push
ss
push
fisubrl
pop
adcl
pop
clc
repz
addr16
xor
cltd
test
insl
fsubrs
fs
iret
loope
push
lods
loope
notl
cmp
out
loope
fidivs
sbb
jge
add
and
adc
cmp
cs
or
add
jb
cmc
jmp
cmp
out
jp
and
repnz
xchg
mov
jl
in
lds
inc
dec
cmp
ret
int3
add
push
push
loop
out
xchg
push
lcall
sahf
mov
mov
imul
cmp
lahf
call
pop
mov
pop
es
and
shl
mov
pushf
adc
mov
dec
jbe
mov
jg
lret
mov
push
pop
mov
pop
leave
cmp
mov
movsb
or
pop
sbb
imul
or
jmp
or
inc
das
ljmp
add
testb
rcrb
dec
cmpsb
mov
sub
xchg
int
cmp
xor
mov
into
das
daa
mov
aaa
xlat
daa
mov
cmp
pop
fucomip
imul
popa
ljmp
mov
pop
les
cmp
jg
sti
in
cmp
mov
cmp
dec
xor
cmp
and
nop
jl
pusha
int3
pop
and
scas
and
sbb
add
pushl
push
pushf
lea
jmp
add
sbbl
mov
insl
cmp
mov
jp
jae
pop
rcl
stc
adc
andb
rorl
jae
dec
sub
xor
push
je
loope
lret
or
adc
jnp
daa
sbb
aam
xchg
icebp
add
mov
jp
mov
lret
jnp
lahf
movl
push
negb
mov
fmull
stos
ja
ror
pop
fildll
das
sub
cs
mov
or
test
sbb
add
test
mov
aam
sub
shrd
btc
mov
sar
neg
add
test
bt
cmp
neg
mov
pushf
cmc
test
pushf
movw
lea
je
pushf
pusha
lea
jmp
movl
bswap
lea
jmp
outsb
fistpll
adc
mov
dec
xchg
lret
lret
xchg
mov
push
lods
push
xchg
or
nop
in
jg
mov
nop
cmp
push
dec
shlb
push
clc
movsl
xchg
cld
cmpsb
push
mov
das
sahf
cmp
fsubl
lods
lcall
jg
ds
xchg
push
cmpsb
adc
push
popf
sub
sbb
aas
dec
fcmovnb
cmpsl
jg
push
inc
mov
cs
cmpsl
pop
mov
pushf
pushl
movb
pushf
pushl
ret
pop
outsl
scas
outsl
xorl
das
jecxz
inc
add
xor
fiaddl
xchg
cli
cmp
lret
iret
outsl
push
gs
lods
dec
push
adc
dec
mov
cmp
in
lods
jne
and
in
add
mov
adc
bound
in
insl
int
rolb
lods
dec
inc
in
roll
rcl
fdivs
add
lods
fldenv
mov
dec
dec
fwait
mov
push
or
in
mov
xor
sarb
test
adc
test
push
cmpsb
sub
sbb
jle
inc
xlat
cli
cld
das
pop
jp
and
insl
call
iret
add
std
test
mov
and
rol
xor
pop
cmc
andl
jmp
out
dec
lahf
ror
xchg
mulb
in
lahf
xchg
adc
cs
outsb
push
pop
out
cmpsb
mov
jl
inc
lods
lds
repnz
ret
int3
out
and
cwtl
cmc
pop
repz
lods
mov
push
aad
cli
or
push
scas
cmpsb
adc
aaa
inc
inc
sub
xor
enter
and
fidivl
jb
and
pusha
xor
pushf
inc
clc
push
jmp
jmp
mov
push
cwtl
cwtl
movl
setl
push
pop
mov
lea
lea
jb
pusha
pushf
movl
push
pushl
popl
push
movb
pushl
ret
loop
dec
lahf
sti
cmp
stos
into
xchg
pop
jbe
out
push
rclb
jp
dec
jnp
mov
cmc
test
inc
dec
loope
outsl
mov
dec
aaa
mov
mov
int
xchg
add
mov
pop
dec
adc
lahf
sub
add
add
mov
jg
mov
add
scas
or
ret
repz
jmp
mov
dec
adc
lods
add
xlat
push
cmp
shll
nop
testb
insb
pusha
dec
mov
cs
and
xlat
mov
setle
push
bswap
lea
pusha
xchg
pop
pushl
popl
mov
jmp
call
popa
sahf
fisubl
add
dec
inc
jns
xor
aad
inc
or
insl
jmp
icebp
aad
andl
out
or
repnz
xor
ret
in
dec
fisttps
sub
icebp
xchg
pop
int3
ret
lds
dec
nop
negb
mov
dec
arpl
js
rorb
enter
push
outsl
orl
mov
and
movsb
push
sbb
enter
jb
xchg
pop
and
xor
xchg
test
sbb
jge
mov
mov
call
mov
vpsraw
sub
rorb
mov
incl
es
gs
int
imul
sub
fstl
mov
shll
rorl
xlat
ret
mov
leave
lahf
pop
lret
and
call
jmp
mov
pushf
call
neg
bt
not
test
neg
clc
sub
cmp
test
neg
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
mov
pushf
mov
pushf
jmp
stos
push
pushf
mov
lea
jmp
nop
mov
add
push
in
sub
mov
mov
fidivrs
mov
insb
cli
fimull
mov
add
es
ret
dec
push
jne
and
jo
and
insl
lahf
rorb
add
xchg
pop
add
rol
stos
testl
and
fsubr
xchg
add
add
leave
sahf
cmpsb
imul
add
in
add
hlt
shrb
inc
dec
push
pop
sbb
int3
out
adc
test
pop
mov
psrlw
shl
lret
cwtl
mov
test
stos
pop
dec
out
int3
aad
stc
jo
mov
inc
outsl
into
lea
jmp
es
fidivrs
inc
scas
mov
lods
push
xor
das
sub
orb
fs
loopne
int3
mov
and
jne
or
iret
or
bound
std
shl
push
pop
std
fisttpll
loopne
add
rolb
adc
mov
cmp
fwait
inc
dec
push
pop
mov
mov
pop
test
outsb
lcall
xchg
mov
jg
cmp
inc
xor
movsb
ret
mov
sub
iret
inc
lret
add
cwtl
jb
and
fs
aam
mov
sbb
lret
cmp
cmp
jp
and
ds
inc
xchg
shrl
loopne
mov
shr
pusha
jmp
mov
stc
neg
movsbl
or
add
not
mov
push
push
test
call
sub
bound
sahf
mov
repnz
sbb
in
lahf
lret
out
iret
fwait
movsl
mov
call
fcoml
cmp
fs
pushf
cs
mov
mov
adcb
mov
cmp
add
out
and
jmp
cmp
xchg
cwtl
sti
adc
push
or
mov
rolb
sbb
lcall
clc
orl
nop
mov
xchg
mov
sti
jmp
pop
loop
jg
add
aaa
cmp
cs
pop
xchg
sahf
and
fdivs
cmp
mov
es
addb
cs
scas
daa
fiaddl
jle
xor
cli
jb
repz
iret
xchg
mov
aaa
call
cmp
adc
pop
xlat
pop
sub
mov
pop
and
mov
sub
jecxz
mov
xchg
movsb
in
shrb
fdivr
jl
andb
adc
cmp
in
pop
fcoms
mov
cmp
popa
and
pop
push
movl
mov
pusha
pushf
lea
jmp
sbb
repz
push
imul
cmp
cmp
js
call
adc
inc
dec
and
xchg
adc
xchg
pop
jne
add
jnp
imul
pop
imull
and
and
and
aam
aaa
pushf
movl
pushf
mov
lea
jmp
clc
mov
adc
call
rolb
inc
loopne
into
inc
xchg
mov
xlat
adc
xchg
push
xchg
inc
mov
mov
pop
fcmovbe
fnstcw
nop
cmovne
fs
mov
ljmp
inc
stos
dec
shrb
inc
sbb
into
push
cmpsb
mov
fidivrs
into
fisubrs
ds
js
lds
out
jmp
pushf
mov
bswap
call
lea
mov
pushl
movl
pusha
pushl
ret
jmp
push
call
pushf
jmp
int3
insl
or
hlt
cld
out
out
push
xchg
lods
jno
insl
xchg
test
cmp
test
xor
sub
xor
insl
jecxz
daa
lds
jle
scas
insb
pop
out
repnz
daa
dec
dec
or
jp
lret
push
or
lret
push
pusha
aad
sub
xchg
repnz
pop
int
pop
mov
loopne
jo
aam
push
xchg
or
loop
inc
loopne
sbb
pop
arpl
daa
jae
jg
push
inc
mov
rol
pop
loope
ret
xor
nop
adc
test
shll
xor
movsb
push
fsubrl
dec
or
jle
notb
loop
lret
mov
and
jmp
jl
das
and
js,pt
int3
add
dec
insb
or
hlt
sub
sub
dec
add
mov
jb
sbb
sti
mov
push
cli
push
movsl
das
ret
sub
mov
pop
pop
push
cli
mov
adc
ds
or
lcall
loopne
dec
mov
cmp
fisttps
cltd
test
mov
and
call
jb
cmp
fisubs
fmull
test
and
add
adc
jmp
fstps
and
loop
cmp
jmp
test
pusha
mov
mov
jmp
bt
mov
stc
push
cmp
test
jmp
stc
push
add
js
test
pushf
pushf
push
pushf
lea
je
stc
sub
bt
call
jmp
movl
call
pushf
lea
jae
jne
call
lea
jae
clc
pushf
pushf
pushf
add
pushf
push
pushf
mov
pushf
movb
push
lea
jmp
jmp
pushf
lea
je
pushf
cmc
pusha
add
mov
stc
cmp
pushf
pushf
call
sahf
dec
ja
jnp
inc
loopne
pop
cmpps
cs
push
fisubl
jb
out
pusha
and
pop
push
adc
les
inc
pop
add
inc
jmp
hlt
mulb
loop
cld
test
push
daa
sub
sub
mov
insl
inc
mov
fsts
cmpsl
and
mov
add
call
and
je
call
imul
movb
bt
clc
add
pushf
pusha
movb
lea
jmp
lea
call
call
fidivrs
mov
pop
sbb
mov
loope
fidivl
ds
inc
inc
mov
pusha
pop
xor
xchg
pop
mov
inc
sub
in
test
mov
loopne
inc
lcall
clc
push
test
neg
stc
cmc
not
jmp
movl
call
jmp
mov
not
jmp
call
in
or
aad
pop
aad
bound
mov
dec
into
push
pop
outsl
push
push
mov
pop
sub
les
clc
add
xlat
movsb
fists
xorl
sbb
dec
dec
xor
addr16
lods
pop
xchg
cs
insl
andb
cli
sbb
sahf
dec
sahf
push
push
out
ds
inc
fldl
std
jnp
jle
shlb
aam
test
pop
sarl
outsl
jecxz
lds
ffree
pushf
addb
arpl
outsl
add
sbb
or
xor
jnp
sti
insl
xchg
loope
jmp
loope
fimull
rcr
pusha
enter
sbb
sub
jg
test
or
scas
mov
testb
pusha
mov
pushf
movl
call
inc
test
push
fdivrl
repnz
in
cmp
les
mov
cld
add
and
mov
pusha
int3
inc
and
mov
cmp
or
lret
mov
jmp
push
xchg
rcr
in
jne
xor
lea
adc
pop
ret
sbb
push
add
pop
js
cmc
inc
push
andl
sub
mov
cs
stos
test
inc
lock
lret
mov
movsl
jbe
lock
dec
sub
mov
mov
cmp
inc
jl
aad
fwait
push
lahf
and
cmp
xchg
stos
sbb
inc
hlt
outsb
fsubs
adc
mov
repnz
in
jp
cli
mov
js
xchg
sti
adc
aaa
sbbb
dec
cmp
mov
in
aam
incl
push
loope
jmp
dec
cmp
or
pop
out
and
jbe
stos
into
jp
scas
in
sarb
mov
das
or
repnz
das
inc
sub
pop
les
fisubl
das
adc
or
int
es
ret
idiv
pop
bound
cmc
movsl
dec
or
pop
or
xbegin
dec
or
test
jnp
mov
repnz
fsub
ds
ficomps
xor
push
mov
gs
cmp
andl
lahf
pop
bswap
lea
cwtl
mov
cwtl
movw
mov
pusha
push
lea
ja
call
xlat
clc
mov
and
adc
jno
jne
imul
mov
scas
push
outsb
insb
scas
jmp
xchg
xlat
fildl
enter
repz
xor
mov
fs
dec
stc
cmp
aad
js
scas
and
loop
es
push
cmpb
sbb
enter
pusha
lret
or
add
mov
repz
sub
jmp
mov
scas
aas
mov
out
sub
mov
sub
cmpb
cmp
cs
out
stos
bound
data16
sub
stos
and
movsb
in
pop
int3
xchg
jb
into
pop
into
pop
enter
inc
sub
xor
test
in
xor
dec
aam
lods
mov
mov
mov
dec
cmc
lea
je
stc
mov
pushf
add
pushf
test
pusha
mov
cmp
test
push
jmp
jmp
call
pop
lea
push
movzwl
movsbl
lea
pop
mov
call
push
pushl
movl
pusha
pushf
movl
pusha
push
push
push
lea
jmp
jecxz
lret
ljmp
inc
ja
scas
xchg
adc
in
or
aam
xor
push
cmp
sbb
or
mov
imul
xor
mov
adc
fadd
cld
jb
mov
add
in
add
loopne
je
arpl
push
cmp
lcall
les
aad
cwtl
repnz
jno
movsb
lods
xor
stc
xor
xchg
fadd
test
push
dec
mov
xor
ret
jp
insl
push
inc
scas
mov
mov
sbb
mov
pop
fmul
lods
mov
mov
and
lds
inc
insb
xchg
cmpsb
aas
rolb
mov
jne
push
xor
add
mov
fildl
mov
mov
dec
sub
out
sbb
pop
movsl
fldcw
leave
jae
xor
add
das
sbb
int
xor
mov
stc
test
sbb
sub
sub
xor
in
in
mov
jns
aaa
dec
vmwrite
icebp
or
push
inc
out
movlps
popa
or
dec
ret
dec
pusha
adc
jnp
xchg
dec
cwtl
sbb
lods
mov
adc
sub
iret
or
jo,pt
movsb
fadd
stos
mov
pop
adc
das
rol
inc
stos
imul
sahf
xchg
pop
add
popf
scas
test
mov
dec
in
rcr
jnp
push
aas
sbb
out
and
pop
push
xor
push
jg
xor
sub
andb
lret
loop
arpl
push
mov
dec
jg
push
xchg
sub
dec
rcrl
rolb
pop
lret
cmpsl
pop
fnop
loopne
pop
jns
mov
push
inc
push
mov
and
mov
jo
xchg
jb
dec
pop
outsb
and
pop
shl
and
xchg
pop
inc
add
arpl
ja
dec
and
ljmp
or
cmp
pop
adc
ret
and
sub
gs
fnstcw
mov
lret
and
leave
cmc
mov
push
cmpb
pusha
push
pushf
lea
jne
movzbl
not
rcr
sub
movsbl
add
mov
sbb
push
pushl
add
push
rcr
mov
call
fnstcw
ss
loopne
aad
inc
ds
sub
sub
lea
pop
mov
push
ja
push
xchg
cli
lret
lahf
xchg
push
loopne
loopne
and
xor
out
lcall
pop
mov
and
hlt
clc
aam
push
and
push
pusha
pushf
pushf
lea
ja
shl
add
setae
inc
or
sbb
mov
test
pushf
cmp
call
cmc
xor
push
fs
into
dec
out
jnp
mov
xor
das
push
orl
lcall
daa
sub
cld
cmp
xchg
into
xchg
xchg
aam
and
pop
stos
fcompl
cmp
bound
inc
daa
inc
popa
push
cmp
push
dec
rcrb
insb
ja
jo
adc
mov
xchg
imul
mov
out
pop
add
jo
das
sbb
testb
lcall
adcl
push
ret
cmp
decl
push
sti
fcom
xchg
fisubl
mov
test
xchg
lods
stos
mov
mov
mov
pop
inc
xor
fisttps
scas
or
dec
fiadds
out
sub
cmp
shll
sub
nop
push
into
mov
pop
shll
or
sub
adc
adc
jbe
insl
or
inc
mov
stos
fisttps
test
and
sub
mov
pop
cs
adc
push
jne
sahf
mov
ds
and
sahf
xchg
push
pop
sbb
fiadds
pop
mov
insl
lahf
roll
lds
mov
mov
sub
push
pop
mov
not
call
lcall
out
out
cs
mov
arpl
test
lahf
daa
mov
loope
sarb
in
jg
mov
add
fldt
loopne
mov
and
orl
cltd
movsb
fidivl
ss
dec
pusha
shlb
addb
jp
mov
sbb
into
fdiv
mov
ret
rcll
mov
cs
adc
test
divb
mov
stos
inc
mov
stos
dec
mov
sub
cmp
sbb
inc
and
inc
icebp
out
sbb
mov
sbb
sahf
mov
mov
stos
aad
ds
stos
mov
cmp
xor
shll
dec
in
rcrb
movsl
cmc
lods
inc
mov
out
push
or
aam
lret
in
iret
bound
inc
shll
push
and
and
cli
xchg
daa
jnp
stc
inc
loopne
filds
mov
mov
loopne
stc
push
pop
icebp
lcall
and
xchg
lods
inc
ljmp
jne
repnz
std
repnz
sub
test
add
cmp
mov
jl
pushf
jmp
push
pushf
movl
movb
mov
lea
jmp
popa
or
add
xchg
dec
pop
out
mov
and
sbb
lods
and
test
xchg
sbb
mov
and
sbb
daa
jl
dec
and
sub
jbe
stc
out
push
pop
int
push
pop
aas
sbb
mov
and
cmp
dec
das
nop
cltd
xor
inc
add
aad
jl
push
imul
pushf
sahf
xchg
in
leave
xchg
aaa
add
pop
call
addl
jle
fidivrl
inc
and
mov
pop
sarb
add
and
fmull
push
roll
push
loope
fcmovnbe
sbb
add
add
sub
pop
jl
xor
add
xchg
jg
repz
xorl
mov
mov
and
clc
add
repnz
or
xchg
push
inc
mov
pop
jl
cmp
add
insb
lods
les
pop
xchg
imul
mov
and
mov
fsubs
and
jnp
or
add
stc
or
jbe
sbb
add
add
and
inc
mov
xchg
xchg
out
popa
jp
pushf
xchg
popa
fcom
mov
jnp
pop
and
lock
pop
imul
jl
add
add
xchg
sbb
jg
xorl
add
fmuls
pop
pop
add
sbb
stos
mov
leave
lea
mov
jecxz
adc
sahf
xchg
pop
cmp
rcll
add
xor
xchg
fisttpll
dec
lock
mov
add
enter
or
add
les
add
pop
mov
mov
and
adc
fnstcw
mov
mov
and
add
into
sub
and
push
mov
and
pusha
popa
fdivrp
push
jmp
xchg
shr
push
sbb
inc
popa
addr16
fcoml
ret
xor
sahf
pop
sbb
mov
mov
push
test
or
mov
fs
adc
cmc
pusha
fistl
pop
dec
sbb
mov
xor
mov
outsb
push
dec
outsb
in
mov
mov
outsb
mov
mov
xchg
push
mov
nop
enter
lcall
push
inc
jns
aam
push
lahf
mov
sub
push
sahf
push
andb
stc
cmp
mov
mov
cmc
lods
adc
add
mov
sub
loope
mov
je
mov
outsl
iret
adc
lret
sub
test
cmp
scas
sahf
mov
inc
stos
xor
sub
repnz
stos
aam
push
aam
shrb
cmp
and
pushf
lea
jne
shld
movsbw
mov
pusha
or
shrd
sub
pusha
adc
lea
sub
pushf
jmp
sub
stc
pusha
pushl
popl
mov
cmp
test
pushl
cmp
push
call
jno
inc
pop
pop
or
test
push
mov
pop
aaa
push
sti
ret
imul
dec
adc
insb
mov
rolb
jp
leave
sub
cmp
dec
rcrl
dec
mov
inc
jb
mov
jg
movsl
repnz
and
ja
aas
popf
mov
fcompl
movsb
cwtl
and
cmpb
out
lret
cli
push
sahf
push
lea
dec
repz
lcall
cs
and
jnp,pt
aam
call
mov
fistps
rorl
outsl
lahf
push
fwait
xchg
and
push
xchg
jae
inc
shrl
pop
jg
ficoms
and
test
test
inc
fs
test
imul
repz
dec
mov
inc
xor
dec
sbb
push
sub
sub
jne
mov
push
insb
sub
test
mov
mov
in
in
push
dec
outsb
xchg
push
push
decb
mov
ds
sub
dec
sub
aad
les
pop
imul
shll
outsl
neg
clc
test
cmc
not
clc
clc
jmp
bswap
cwtl
mov
movsbw
lea
pusha
lea
jo
push
mov
movl
push
call
jmp
call
push
pusha
mov
lea
je
btr
bt
xor
shl
sbb
mov
btr
sub
xadd
not
mov
dec
xor
shrd
shr
add
mov
call
push
movb
mov
bswap
pushf
not
lea
mov
pusha
pushl
ret
movl
jmp
movb
stos
pushl
lea
jmp
pushl
movl
mov
push
lea
jb
push
pushf
pusha
pushf
lea
jmp
xbegin
inc
aad
sbb
shr
mov
movsb
rolb
sbb
aas
inc
push
dec
mov
call
add
jne
cwtl
loopne
or
fistps
int
mov
sbb
push
movsb
jge
sbb
test
test
and
jl
in
pop
and
jp
xchg
pop
mov
push
pusha
mov
lea
jmp
cmp
pushf
movw
jmp
pusha
pushf
lea
je
pusha
cmc
jmp
call
je
pop
fcmovbe
jne
jne
dec
sbb
xchg
leave
in
in
pop
adc
je
push
out
mov
dec
call
sub
sbbb
movsb
push
sbb
aaa
jae
sub
mov
mov
leave
in
insb
fisubs
dec
pop
push
and
push
cld
xor
arpl
cld
and
mov
pop
ja
pop
addr16
pop
aaa
sub
out
xlat
dec
out
inc
sub
xchg
sub
mov
pusha
cmp
sbb
sub
test
dec
call
clc
pusha
jmp
movb
adc
movw
pusha
movl
movb
lea
jmp
mov
mov
cmp
pusha
cmp
pushf
cmpb
pusha
movl
movb
lea
jne
cmp
neg
bsr
bsr
xor
das
clc
mov
cmc
add
not
push
neg
mov
stc
pushf
test
pusha
mov
call
mov
pusha
pushf
mov
mov
lea
call
pusha
call
int3
or
pop
add
push
jb
dec
jb
repnz
push
xor
sbb
bsf
bound
push
mov
sbb
ret
xor
pop
mov
rcr
xor
mov
mov
test
xor
xchg
cmp
mov
lret
scas
and
add
push
push
xchg
xchg
mov
gs
arpl
inc
xchg
mov
sub
stos
adc
ljmp
mov
scas
jg
mov
test
pop
test
movsl
mov
add
dec
and
pop
iret
jl
fmull
fs
in
in
mov
andl
ja
xor
out
jl
in
or
loop
mov
jo
sahf
push
xchg
testb
mov
in
outsl
leave
loop
and
or
fisubs
hlt
test
jp
repz
loope
xchg
stos
or
cmpl
or
popf
out
popw
dec
jmp
mov
int3
popa
sub
dec
jne
fucom
and
cmp
inc
pop
xchg
dec
and
add
xchg
cs
cmp
mov
jg
mov
xchg
pop
jae
xlat
xlat
das
aaa
xor
sub
xor
scas
jg
jo
and
pop
ds
and
pop
push
push
mov
push
mov
pusha
pushl
dec
jmp
lea
js
pusha
lea
ja
pushf
jmp
lea
ret
stc
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
dec
cmc
call
dec
xchg
movsb
iret
add
push
fcoms
in
sub
add
in
pusha
cmp
in
pop
std
mov
inc
push
jp
aam
adc
popa
sbb
dec
pop
sbb
je
mov
jge
rcl
sar
movsb
out
inc
ror
repnz
stos
rcrl
repz
addr16
pop
pop
jnp
mov
pushf
xor
loopne
repnz
cltd
fbstp
in
fnstcw
or
mov
lods
movsl
jbe
fs
jae
jbe
ror
mov
rcr
pusha
or
rol
add
neg
mov
shr
pop
bswap
add
test
movl
shld
mov
sub
bt
clc
stc
jmp
movw
pusha
add
cmc
clc
clc
cmp
movzwl
add
mov
or
mov
call
ret
jo
add
aad
ret
fs
add
insb
cwtl
mov
test
pop
popf
ss
xor
jl
js
aad
sbb
pop
jg
or
inc
shl
in
mov
ljmp
or
addr16
mov
fwait
in
push
movsb
mov
in
pop
pop
xchg
stc
movsl
pop
cmpsb
imul
data16
lods
movsl
jge
loope
lods
pop
aad
pushl
popl
pushf
mov
pushl
ret
call
pushl
test
pusha
sub
pushl
call
pushf
movb
mov
pushf
pusha
lea
jmp
pusha
pushl
popl
push
pushf
pushl
lea
jmp
call
dec
xor
btc
neg
mov
pushf
add
push
pushl
lea
jmp
not
mov
mov
jmp
call
sub
movb
stc
bt
sub
push
call
pushl
popl
movb
lea
jmp
lea
call
cmp
pusha
mov
mov
cmp
clc
pusha
sub
cmc
cmc
sub
jmp
jmp
bswap
adc
shld
mov
stc
add
push
lea
jmp
call
bt
pusha
mov
push
jmp
push
add
pushf
shld
push
pushf
pushl
mov
jmp
movw
mov
call
push
lea
jne
stc
bt
sub
pushf
call
call
jmp
call
shl
pusha
lea
jno
push
push
mov
call
btc
inc
mov
test
sete
push
shr
mov
pusha
clc
cmp
test
add
mov
pushf
jmp
pushf
movb
jmp
cmp
bt
cmp
neg
bt
pushf
cmc
sub
pushf
cmc
pushf
cwtl
pusha
sub
mov
push
mov
pushl
pushf
pushf
lea
jmp
sub
jmp
lea
jne
pusha
jmp
movsbw
shld
mov
clc
cmc
bt
bswap
cmc
clc
bt
bt
add
bt
push
sub
cmc
movb
pusha
neg
pushf
test
xor
pushf
add
stc
sub
clc
cmc
bt
add
call
mov
call
pushl
pushl
popl
pushf
lea
jmp
jmp
mov
pushl
push
movw
lea
jmp
pusha
mov
mov
call
push
shl
mov
pushf
jmp
bt
sub
pusha
sub
mov
bt
sub
call
jmp
add
setl
jmp
mov
mov
mov
call
pusha
mov
call
mov
call
jmp
lea
je
test
stc
sub
bt
stc
jno
xchg
cmc
clc
test
push
test
sub
pusha
pushf
lea
jne
bt
bt
cmc
stc
xor
pushf
xchg
mov
call
pusha
pushf
popl
call
call
call
cld
pop
aam
pop
shr
rcr
pop
shrd
std
inc
and
pop
bswap
and
or
sbb
popf
mov
movsbw
push
mov
setg
not
movsbw
not
mov
bswap
movsbw
pushf
push
mov
pushf
mov
push
movw
pusha
pushf
pushl
ret
stc
cmp
sub
push
call
pushf
mov
movb
lea
jmp
pushl
lea
pusha
call
mov
mov
mov
pusha
pushl
lea
jmp
add
push
call
jmp
mov
pusha
movw
pushl
movw
lea
jmp
call
pushf
call
clc
call
lea
jne
xor
bswap
jmp
xchg
pusha
movl
jmp
call
add
pushf
call
pushf
popl
push
mov
jmp
mov
pushf
lea
jmp
push
mov
movl
movw
movw
movw
lea
jmp
jmp
mov
pushf
popl
mov
jmp
mov
mov
movw
mov
pushl
ret
not
lea
mov
lea
pusha
lea
pusha
pushf
popl
movw
movzbw
mov
mov
movzbl
std
mov
call
pushf
mov
pushf
mov
call
shl
movzbl
pusha
pusha
xor
mov
add
pushl
not
call
jmp
call
mov
pushf
call
pushf
pushl
popl
movb
movb
lea
jmp
sub
cmp
push
add
pushf
jmp
call
jmp
pushl
jmp
mov
push
pushl
mov
pusha
mov
pushf
pushl
push
lea
jmp
bsr
stc
mov
bt
add
push
pushf
pushl
push
lea
jmp
pushf
pushf
mov
mov
pusha
lea
jmp
call
pushf
call
rcr
cmp
shl
dec
mov
stc
test
jmp
cmp
cmc
jmp
call
dec
add
mov
lea
mov
pusha
mov
stc
call
movw
pushl
popl
pushf
movl
pushf
lea
jmp
xchg
push
setle
mov
pushf
jmp
mov
call
clc
add
cmp
jmp
push
push
pusha
pushl
pushl
popl
movb
lea
jmp
jmp
jmp
mov
movb
pushf
mov
movb
lea
jmp
pushf
test
cbtw
pushl
cmp
clc
cwtl
call
push
movb
push
mov
pop
pushf
bswap
lea
mov
pushf
xchg
xchg
xchg
lea
bswap
movsbw
movsbw
push
jmp
push
mov
push
lea
jmp
mov
bt
cmc
cmp
test
pushl
popf
mov
movb
mov
movb
lea
jmp
mov
pushf
pushl
mov
pushl
lea
jmp
movzbw
shr
mov
not
adc
mov
clc
clc
jmp
push
mov
push
jmp
lea
jne
shl
xorb
movzbw
call
bswap
movsbw
push
repz
popl
shld
rcr
cmc
push
ror
sub
push
btc
lea
push
push
cmp
not
mov
shrd
or
adc
push
mov
shld
pushl
rcr
push
movl
rcr
xor
mov
or
movsbw
movzbw
not
and
xor
pusha
not
inc
movzbw
dec
lea
dec
movsbw
add
lea
push
shl
lea
bsf
sub
btr
lea
not
movsbw
mov
clc
rcl
sar
mov
adc
bts
pusha
add
sub
and
dec
mov
btc
add
adc
inc
btc
sub
bts
or
seta
neg
add
xor
xor
lea
bsf
inc
bts
add
sar
stc
movsbw
add
movzbl
sbb
bsr
mov
cmp
bt
jmp
sete
movsbw
mov
movb
lea
ja
push
pusha
lea
pushf
mov
pushf
push
pushf
pushf
lea
jmp
jmp
pusha
mov
lea
jg
push
mov
pusha
call
mov
pushf
pushl
push
push
lea
jmp
pushf
movb
mov
pushf
movl
mov
lea
jmp
call
pushf
popl
movw
lea
jae
pusha
push
pushl
popl
pushf
movb
push
lea
jmp
push
not
push
mov
movb
movw
call
jmp
call
pushf
jmp
push
mov
mov
pushl
movw
lea
jmp
add
add
pushf
pusha
mov
pushf
push
mov
movb
lea
jmp
divl
pusha
mov
mov
pushf
push
call
mov
jmp
inc
jmp
push
add
pusha
lea
jmp
shr
or
xor
mov
cmp
sub
push
mov
pusha
mov
mov
cmp
sub
clc
test
shr
pusha
jmp
aad
mov
pushf
mov
pusha
mov
stc
stc
sub
stc
bt
shr
jmp
bt
jmp
push
call
mov
pushf
lea
jp
push
call
pushf
shl
pusha
stc
shr
call
pushl
call
clc
pusha
mov
cmp
xor
cmp
add
pushf
not
pusha
jmp
mov
jmp
call
mov
test
cmc
or
push
test
xor
pushf
inc
pushf
push
jmp
mov
pushf
push
movb
lea
jmp
pusha
jmp
mov
push
pusha
pushf
popl
call
mov
pushf
lea
je
pushf
mov
pusha
pushl
mov
pushf
lea
jne
or
rcr
and
neg
mov
pushf
cmc
mov
and
clc
cmc
cmp
call
sub
call
mov
jmp
pushl
call
mov
mov
lea
jmp
bts
not
mov
cmc
pusha
cmc
add
pushf
mov
jmp
pushf
popl
pushf
pusha
lea
jbe
popl
pusha
lea
jmp
jmp
movb
mov
mov
lea
jmp
cmc
pusha
xchg
add
jge
clc
bt
sub
pushf
inc
push
pushl
rol
cmp
stc
jmp
push
add
stc
shrd
call
push
bswap
mov
mov
pusha
add
pusha
lea
jmp
lea
bswap
movsbl
bswap
mov
call
xadd
inc
shr
mov
rcr
setne
mov
bt
sub
call
movb
not
cmc
clc
call
bswap
bswap
jmp
jmp
add
pushf
clc
not
clc
add
jmp
btc
stc
mov
pusha
clc
call
mov
pusha
pushf
jmp
pusha
pushf
pusha
jmp
jmp
sub
test
stc
add
call
push
sub
test
clc
cmp
bt
and
pushl
movw
mov
pusha
mov
jmp
dec
add
push
test
mov
add
js
add
jle
push
movb
pusha
mov
pusha
pushf
movb
lea
jmp
mov
pushf
pusha
push
movw
lea
jmp
jmp
movw
mov
push
pushl
pushl
lea
jmp
jmp
bt
not
cmp
cmp
call
cmp
movb
cmc
add
clc
pushf
cmp
bt
mov
pusha
clc
pushf
jmp
clc
add
call
pushl
popl
movl
mov
mov
movw
lea
jmp
pushf
ror
lahf
mov
push
shl
not
mov
pusha
cmp
bt
sub
movl
bt
push
shl
movw
call
bsr
mov
movsbw
dec
movsbl
clc
mov
call
pusha
call
and
rcl
mov
pushf
sub
push
movb
push
call
movw
mov
pushl
pusha
lea
jmp
jmp
movzbl
mov
add
clc
jmp
cmp
pusha
clc
call
pushl
mov
pusha
movw
pushf
movw
lea
jmp
add
pushf
jmp
pushf
mov
push
add
push
pushl
lea
jmp
not
jmp
pushf
popl
push
pushl
popl
mov
push
lea
jmp
cmp
add
pusha
pushf
pushf
mov
push
call
pushf
call
cld
call
mov
pushl
pusha
lea
jl
mov
push
mov
jmp
call
jmp
call
dec
bt
rol
ror
dec
not
clc
shl
call
or
mov
cmc
and
cmc
pusha
cmp
pushf
push
lea
jne
cmp
pushf
xorb
lea
movsbw
call
movw
call
add
pusha
jmp
mov
call
sub
bt
cmc
pushl
shl
call
pushf
pushf
jmp
rol
aas
notl
cbtw
inc
and
aad
mov
pusha
clc
bt
sub
test
pusha
pushf
and
jmp
pushf
popl
pushf
pushf
pusha
movb
pushl
popl
pushf
mov
movl
lea
jmp
shr
mov
cmc
add
push
mov
lea
jmp
push
mov
mov
lea
jne
push
push
mov
lea
jmp
pusha
jmp
test
sub
mov
jmp
bt
jmp
movb
call
push
pushf
popl
pushl
pushf
pushl
popl
mov
mov
movb
mov
lea
jmp
dec
not
pushl
dec
xor
bsr
ror
add
xor
jmp
call
call
call
bts
mov
btr
movw
mov
sar
lea
seta
pushl
popf
setns
mov
not
mov
lea
mov
bswap
not
pop
mov
pop
not
call
shrd
sbb
and
inc
mov
shl
dec
mov
jb
clc
add
pusha
mov
push
lea
jmp
pusha
mov
pushf
mov
pusha
pushf
push
movb
pushl
ret
mov
call
mov
call
pushf
mov
pushf
pushf
pushl
pushl
ret
push
pushf
mov
pushf
mov
push
pushf
call
aas
mov
sbb
or
mov
bt
call
dec
xor
adc
sar
stc
or
mov
stc
pusha
call
movzbw
sbb
cmc
mov
jmp
movb
pusha
mov
jmp
pop
pushf
pushf
movb
lea
jmp
pusha
mov
call
dec
xor
bts
add
push
call
pushl
lea
jp
pusha
mov
push
movl
push
pushf
lea
jmp
jmp
pushf
pushf
jmp
mov
push
lea
jmp
pusha
mov
call
push
mov
pop
push
mov
movb
call
push
pushl
movb
lea
jmp
cmc
neg
call
bt
bt
xadd
mov
jmp
push
cmc
add
pusha
jmp
lea
jo
mov
pushf
lea
jmp
mov
pushf
pusha
call
not
pushf
test
lea
jge
not
cmp
clc
and
jmp
mov
push
call
jmp
pushf
call
jmp
pushf
mov
mov
call
shrd
pushf
bts
pusha
mov
pusha
add
pushf
mov
pushl
lea
jmp
stc
mov
shr
call
call
mov
movb
pushf
lea
jmp
jmp
jmp
pushf
movw
pushf
popl
pusha
pushl
popl
movb
pushf
pushf
mov
lea
jmp
pushf
pushl
mov
pusha
movb
mov
movb
mov
push
lea
jmp
movb
rep
xchg
mov
jmp
push
pushf
pushf
popl
push
pushl
popl
movw
pusha
movb
lea
jmp
rol
add
movzbw
sar
xor
add
bsf
mov
call
push
mov
pushf
mov
call
push
push
mov
call
aad
ror
mov
test
xchg
jmp
call
lea
jns
pusha
mov
mov
movb
pushf
mov
pushl
mov
pushf
mov
pushl
pusha
lea
jmp
movzbw
cbtw
ror
mov
cmc
jmp
jmp
clc
xor
stc
add
push
pushf
mov
not
jmp
jmp
pushf
mov
pushl
lea
jmp
call
lea
bt
or
neg
rol
add
neg
xor
movsbw
clc
and
cmc
not
mov
clc
jmp
call
pusha
lea
jne
rcr
call
dec
push
pushl
ror
clc
cmc
not
clc
xor
test
mov
cmp
movw
jmp
stc
shl
sbb
sub
setnp
push
dec
bswap
ror
mov
stc
shr
not
ror
xor
sub
ror
mov
pusha
mov
clc
add
movb
pushl
mov
push
pushl
push
lea
jmp
mov
pushf
lea
jmp
pushl
popl
movl
movw
pushl
movb
lea
jmp
mov
clc
cmc
add
mov
push
pusha
lea
jmp
mov
mov
cmc
or
pushl
call
shl
btr
test
ror
mov
pusha
add
pushf
not
mov
call
mov
mov
push
pushl
pushf
lea
jmp
decl
call
mov
pushf
call
not
push
test
add
stc
cmc
stc
add
jns
add
pushf
sub
jge
bt
mov
cmc
test
clc
cmp
sub
call
lea
push
mov
pushl
movb
dec
bt
cmc
cmc
xor
clc
sub
call
push
mov
pusha
mov
pushf
movw
mov
push
lea
jmp
pusha
pushl
popl
pushf
movb
lea
jmp
movsbw
mov
sub
neg
stc
not
mov
push
pusha
add
pushf
jmp
mov
pushf
mov
call
mov
mov
lea
jmp
pushf
cmc
add
movb
mov
movb
lea
jmp
cmc
sub
mov
jmp
pushf
jmp
mov
pusha
movw
pushl
lea
jmp
pushf
pushf
mov
movb
pushl
lea
jmp
mov
call
mov
mov
mov
push
pushf
pushf
pushf
lea
jmp
pushl
cmp
sub
pushf
jmp
jmp
movb
mov
mov
movw
lea
jmp
jmp
jmp
push
jmp
pushf
sar
ror
add
jbe
mov
jmp
push
mov
push
pushl
pusha
pushf
lea
jmp
sub
mov
jmp
jmp
pushf
pushf
mov
mov
mov
push
mov
pusha
pusha
mov
lea
jmp
mov
pushl
pusha
mov
pushl
lea
jmp
sub
call
sub
not
mov
push
and
pushf
pushf
mov
push
cmp
mov
pushf
lea
jne
setg
xorb
mov
jmp
pushf
jmp
mov
push
push
pusha
lea
jmp
cmc
or
push
mov
call
mov
lea
ja
inc
shld
aaa
das
mov
lahf
lea
ror
sub
rcr
rol
lea
pushf
bts
and
add
sub
pushf
call
mov
pusha
call
call
mov
pushf
stc
movzbl
call
mov
pushl
push
push
mov
call
not
sar
stc
mov
test
call
jmp
call
or
sbb
bsf
rdtsc
cmc
jl
cmp
sub
jmp
mov
push
push
lea
jmp
jmp
stc
test
call
push
shl
mov
cmp
jmp
pushl
popl
movb
mov
movb
lea
jmp
stc
clc
bt
cmp
sub
pusha
jmp
lea
jb
push
pushl
mov
push
pushf
push
lea
jmp
movb
call
add
push
lea
jmp
not
lea
mov
push
mov
call
pusha
call
jmp
movzbw
or
mov
pushf
btc
mov
pushl
jmp
mov
push
pushf
pushf
lea
jmp
sar
push
or
rol
movzbl
call
push
mov
pushf
movb
lea
jmp
push
mov
jmp
pushf
pushf
popl
lea
jg
push
movb
pushf
pushl
popl
pushf
pusha
pushf
lea
jmp
mov
jmp
push
mov
movb
mov
push
pushl
mov
lea
jmp
mov
clc
test
test
add
call
xor
xor
rol
rcr
add
jle
sar
sub
movzbw
jmp
jmp
mov
movb
push
pusha
pushl
pushf
popl
jmp
jmp
call
call
mov
pusha
jmp
xadd
aaa
movzbw
shl
mov
movzbw
or
mov
stc
push
stc
add
pusha
mov
push
movl
push
push
lea
jmp
bts
sub
lea
stc
stc
push
cmp
pusha
call
pushl
mov
pushl
lea
jmp
shl
shld
shrd
mov
push
push
pusha
add
pushf
pushf
lea
jmp
movw
pushl
pushf
pushf
popl
push
jmp
cmp
pusha
xchg
cmc
bt
pushf
test
mov
test
mov
pushf
pusha
sub
call
shrd
mov
shrd
mov
pushf
push
pushf
test
sub
mov
jmp
arpl
jmp
inc
mov
call
pop
mov
lcall
decl
and
jmp
mov
incl
push
mov
jmp
mov
mov
dec
mov
jmp
push
mov
mov
cmp
ljmp
cmp
mov
push
inc
mov
lcall
cmp
inc
cmp
jmp
inc
mov
jl
mov
jmp
mov
call
mov
ljmp
mov
decl
dec
mov
pushl
inc
mov
call
pop
mov
decl
cmp
decl
mov
clc
cmp
decl
mov
clc
cmp
call
mov
clc
cmp
pushl
mov
clc
cmp
decl
in
mov
pushl
mov
clc
cmp
cmp
call
inc
mov
mov
inc
mov
clc
cmp
lcall
cmp
call
pop
mov
pushl
mov
push
inc
mov
decl
mov
ljmp
mov
lcall
lcall
mov
push
inc
mov
push
inc
mov
cmp
ljmp
mov
ljmp
cmp
push
inc
mov
call
inc
mov
pushl
mov
push
cmp
mov
decl
incl
push
mov
pushl
mov
inc
cmp
push
inc
mov
pushl
mov
lcall
pop
mov
ljmp
cmp
mov
ljmp
dec
mov
incl
dec
mov
ljmp
mov
dec
push
mov
jmp
inc
mov
lcall
pop
mov
dec
push
mov
incl
mov
ljmp
mov
clc
dec
mov
jmp
inc
mov
decl
mov
call
mov
ljmp
mov
dec
dec
mov
dec
push
mov
decl
pop
mov
decl
inc
mov
pushl
inc
mov
inc
cmp
jmp
mov
ljmp
mov
ljmp
cmp
incl
push
mov
jns
mov
ljmp
cmp
mov
ljmp
mov
push
cmp
mov
jl
mov
ljmp
mov
decl
jmp
dec
mov
mov
push
mov
decl
mov
jmp
pop
mov
call
mov
jmp
mov
decl
mov
jmp
mov
ljmp
mov
jmp
mov
incl
mov
jmp
mov
incl
push
mov
jmp
mov
jl
mov
jmp
mov
incl
dec
mov
jmp
pop
mov
jmp
dec
mov
clc
dec
mov
decl
dec
mov
jmp
push
mov
mov
dec
mov
decl
int3
push
mov
pushl
inc
mov
jmp
pop
mov
jmp
shld
btc
clc
mov
cmc
sub
pusha
mov
pusha
lea
jmp
mov
pushf
lea
jmp
pusha
add
movb
pushf
movb
cbtw
push
cwtl
cmc
sub
jmp
pusha
mov
pushf
pushf
mov
mov
movb
mov
lea
jmp
lea
rcl
shl
mov
movzbw
mov
cmc
pusha
pusha
add
jmp
push
mov
push
jmp
jmp
pusha
movsbw
mov
rcr
xor
jmp
cwtl
aaa
mov
sbb
call
push
push
mov
pushf
popl
mov
jmp
adc
jne
rcl
sar
mov
bt
pushf
add
pushf
mov
push
pushf
lea
jmp
pushl
mov
call
push
push
call
lea
jle
push
mov
pusha
lea
jmp
bsr
mov
test
cwtl
and
sbb
pop
rdtsc
sar
pop
bsf
jle
rdtsc
pop
btr
rol
pop
bsr
shrd
call
pushl
popl
mov
push
movl
lea
jmp
mov
pushf
pusha
lea
jmp
inc
clc
rol
bt
test
bt
neg
stc
stc
sub
movw
call
call
mov
pusha
push
pushf
pushf
lea
jmp
aam
adc
daa
mov
mov
shl
adc
bt
mov
call
add
pusha
call
mov
push
mov
pusha
mov
lea
jns
push
pushf
push
mov
pusha
movw
pushl
push
lea
jmp
test
clc
cmp
xor
pusha
cmp
sub
call
mov
jmp
push
pushf
popl
pushf
pushl
popl
mov
movb
push
pushl
lea
jmp
clc
bsf
mov
stc
jmp
call
clc
sub
mov
mov
push
lea
jmp
pusha
movw
pushf
mov
mov
movb
lea
jmp
pushl
xor
test
lea
jge
add
call
pusha
movb
mov
movb
pushl
pushf
pusha
mov
movb
mov
mov
pushf
jmp
pusha
sbb
or
neg
bsr
or
add
cmp
and
xor
sub
seta
and
jmp
pushf
lea
push
push
mov
cld
lea
pushl
mov
jmp
mov
pushl
mov
push
mov
push
mov
push
pushf
lea
jmp
mov
pushl
pushf
pushf
mov
pushl
ret
call
pushf
pushl
popl
pushf
lea
jmp
call
pushf
shl
movzbl
clc
shl
call
lea
cpuid
cmc
clc
stc
sub
cmp
cmp
cmpl
jmp
call
mov
pushf
popl
jmp
mov
pusha
pushf
push
push
lea
jmp
not
shl
mov
movsbw
mov
jmp
call
sub
clc
jmp
pusha
movb
shr
lea
jnp
mov
call
pushf
movb
movl
jmp
mov
pushf
mov
pusha
push
pushl
pushf
mov
pushf
lea
jmp
pushf
pushf
mov
mov
pushf
pushf
lea
jmp
not
cmc
and
push
pushf
mov
movb
movb
push
call
call
jmp
add
bt
pushl
popf
push
push
mov
push
lea
jmp
pusha
mov
mov
pusha
push
pushf
lea
jmp
pusha
mov
pushf
push
movb
lea
jmp
xor
rol
mov
shld
not
pusha
ror
add
not
movzbw
inc
test
not
bt
add
bsr
shld
or
neg
add
call
call
cmc
sub
push
inc
push
pushf
pushf
pusha
rol
cmc
lea
jne
pusha
neg
pusha
stc
sub
cmc
cwtl
jmp
dec
clc
xor
push
call
cbtw
stc
pushf
push
cmc
cwtl
cmc
sub
push
pushl
mov
jmp
jmp
