pusha
add
push
cld
pop
imul
or
ror
inc
movl
and
push
inc
pop
decl
jmp
mov
sarl
sbb
jmp
insb
mov
movb
and
jmp
int3
lods
in
out
test
sub
add
add
sub
push
xchg
pop
adc
sbb
jmp
enter
jae
and
jno
rcr
sub
movb
sub
jmp
xor
aam
adc
or
add
jo
push
inc
pop
rol
jno
or
inc
movb
ror
or
sbb
push
dec
pop
jno
jmp
pop
int
in
test
or
mov
pop
shl
push
inc
pop
jmp
pop
cmp
xor
pop
adc
shl
xor
movl
sub
jns
adc
ror
adc
sub
jo
push
cld
pop
jmp
pop
mov
cltd
aad
sbb
sbb
or
add
movb
jmp
xor
mov
pop
jne
push
xchg
pop
add
sub
jmp
adc
rorb
out
sub
imul
dec
movl
add
push
inc
pop
jae
sub
jmp
mov
or
xor
add
add
push
inc
pop
je
or
xchg
movl
push
xchg
pop
sub
push
inc
pop
js
movw
jmp
mov
out
or
cld
pop
in
lcall
int3
je
sub
jnp
jmp
sbb
in
push
loop
sub
int3
add
ror
jbe
sub
jnp
sub
push
inc
pop
js
jne
movb
rol
js
or
push
inc
pop
jns
sub
push
inc
pop
sub
jno
cmpl
jne
sbb
mov
jmp
add
add
add
add
incb
das
jmp
adc
dec
xchg
jo
gs
xchg
decb
xchg
gs
jns
lcall
into
fs
out
pop
jo
xchg
in
scas
xchg
gs
outsb
pop
lods
xchg
mov
subl
xchg
cmp
fiadds
lods
xchg
ja
xchg
push
divl
xchg
lcall
and
lds
xor
scas
xchg
gs
scas
mov
in
and
mov
inc
sub
cmpsl
test
and
in
xchg
in
xchg
sub
and
arpl
and
jg
sahf
push
popfw
sahf
addr16
lds
lods
xchg
mov
dec
daa
lods
in
gs
lds
and
mov
jle
mov
cli
aas
and
gs
and
lea
xchg
and
mov
repnz
xchg
pop
es
add
fs
jne
stos
or
lcall
sbb
lods
frstor
out
xchg
scas
lds
ficompl
insl
mov
je
insb
add
scas
mov
inc
jne
mov
subb
popf
xchg
out
gs
push
lods
xchg
insl
es
jl
cs
jno
movsb
or
inc
or
push
lods
lret
or
frstor
xchg
cld
or
es
mov
hlt
xor
loope
and
cli
add
repnz
outsl
scas
sbb
xchg
mov
sub
sbb
mov
in
xchg
mov
lods
or
sub
sub
scas
cmp
add
pop
out
hlt
mov
mov
hlt
add
adc
or
and
jne
push
jb
xchg
test
out
xchg
cld
aam
pop
lods
repz
scas
das
and
insl
mov
lods
into
inc
scas
inc
cmpsb
movsl
scas
into
jg
andl
insl
mov
lods
into
arpl
jbe
jnp
jl
insl
repnz
scas
add
jp
insb
xchg
cmpsb
sbb
xchg
cmc
or
scas
gs
inc
cmpsb
movsl
test
loope
std
add
ficoml
mov
cmp
movsb
xor
lods
xchg
and
lods
xchg
popa
lds
int
lods
xchg
popa
and
lods
xchg
popa
std
out
jo
in
xchg
pop
xchg
mov
mov
xchg
or
sbb
out
xorb
jecxz
or
ljmp
lods
rorb
repz
or
hlt
inc
add
repz
or
ljmp
int3
loop
or
hlt
inc
pop
aam
and
pop
ret
add
hlt
inc
push
fiadds
dec
dec
leave
ljmp
shl
xor
jecxz
sub
aad
push
dec
or
repz
and
in
add
repnz
or
loope
gs
je
enter
ret
loopne
pop
shl
or
call
inc
push
fiadds
dec
fiaddl
fs
mov
and
add
add
add
mov
cli
add
push
add
add
add
add
add
add
add
out
pushf
cmp
stc
and
jle
pop
pushf
mov
popa
xor
out
mov
lods
iret
inc
mov
loopne
push
xlat
adc
mov
data16
cwtl
push
add
add
xor
dec
push
pusha
or
sub
cmp
sub
stos
inc
adc
push
daa
ret
cmp
loope
and
sbb
sahf
into
vprotd
sarb
push
jg
roll
mov
pop
imul
add
pop
push
pop
pop
add
push
stos
pop
ret
jae
add
dec
add
add
add
std
fiadds
add
cmp
add
faddl
add
add
add
inc
add
add
add
add
add
jecxz
add
add
add
add
lret
repnz
adc
add
add
add
add
add
add
addb
add
add
cwtl
add
add
in
add
cwtl
add
decl
add
fildl
add
xor
add
dec
add
add
add
jmp
xlat
divps
add
mov
add
add
add
add
adc
je
add
jmp
add
push
add
push
add
sub
add
add
add
add
xlat
jmp
fmuls
arpl
insl
adc
cmp
mov
jno
lds
push
mov
cmp
divb
jmp
icebp
je
loop
add
add
mov
xchg
inc
addr16
in
mov
jno
sbb
add
test
fwait
loop
add
movsb
cmp
dec
dec
jp
add
adc
pop
pop
aaa
xor
mov
pusha
push
add
inc
movsl
or
add
xor
inc
pusha
jbe
mov
les
imull
add
jne
pop
sbb
inc
add
jge
inc
incl
add
sub
sub
add
popf
dec
or
enter
sub
xorb
and
fadd
xchg
pusha
jge
leave
movsb
xor
lahf
loope
ja
iret
mov
jnp
iret
add
push
add
add
add
shrl
add
ss
dec
movb
xor
pop
imul
adc
leave
in
cmp
fsubrs
sti
add
jae
ljmp
ret
mov
mov
push
cmc
lods
test
add
adc
divb
dec
adc
data16
dec
jl
pop
test
add
add
push
adc
jb
adc
jge
cmp
add
js
fidivs
ljmp
ja
lods
dec
les
test
cmp
mov
pushl
adc
scas
adc
add
cld
out
push
mov
mov
inc
shll
add
fcomps
scas
arpl
jbe
add
sti
lcall
inc
add
imul
jle
rcl
add
jns
arpl
add
add
dec
adc
add
lea
mov
mov
add
add
insl
adc
mov
jg
add
std
pop
mov
add
push
xchg
pop
lret
mov
test
xor
sahf
pop
testl
jecxz
push
cmpsb
mov
pxor
mov
scas
xor
scas
adc
into
movsl
addl
jl
pop
std
jmp
and
mov
insb
jno
add
je
xor
push
cmp
insb
sub
add
imul
add
nop
pop
daa
sbb
mov
rolb
shlb
iret
adc
fldt
loopne
lcall
mov
imulb
mov
vmread
cmp
mov
ret
xor
push
ljmp
push
loop
add
and
sti
insb
inc
les
in
call
filds
add
aam
xor
xor
add
mov
fcmovne
jle
mov
xchg
bnd
dec
and
lock
add
mov
lahf
add
jae
mov
lock
loopne
add
fwait
or
and
popf
jmp
cmp
lds
sub
add
and
mov
pop
mov
sbb
out
leave
inc
cmp
add
jbe
mov
ljmp
add
ja
outsb
xchg
addb
imul
call
notl
sub
insl
adc
fadd
xor
mov
pop
dec
mov
add
jnp
add
or
inc
mov
pop
movsl
mov
bound
mov
shrb
xchg
mov
push
incl
adc
pop
rcll
add
mov
in
cli
lret
sub
int3
into
call
in
sub
add
lret
add
xor
lretw
add
fneni(8087
push
sub
repnz
in
add
sbb
xor
arpl
in
mov
lret
popa
pop
cs
or
repz
jne
rcrl
sahf
ds
pop
mov
clc
add
scas
enter
inc
add
cmp
inc
inc
lahf
ja
iret
sub
lahf
nop
sub
add
jb
mov
test
out
pop
and
add
es
fucomip
hlt
mov
add
and
insl
inc
and
inc
or
sbb
mov
and
ret
insl
dec
lods
adc
sti
lock
flds
xchg
sub
das
mov
push
pop
arpl
lcall
mov
jbe
jns
add
pop
cmpsb
cmpsl
js
mov
or
mov
inc
mov
adc
xchg
adc
sub
stos
xlat
outsb
fwait
xor
stc
add
add
pusha
pop
mov
dec
push
push
das
pushf
jnp
sahf
repnz
pop
sarl
mov
push
pop
add
lock
push
add
jae
inc
xchg
xor
inc
cmpsb
jp
adc
xlat
mov
adc
sahf
testl
inc
stos
add
push
scas
adc
in
or
push
out
add
mov
and
and
shlb
add
enter
and
cmp
paddd
and
mov
and
and
push
loop
sti
dec
dec
fiaddl
add
sbb
pop
cmp
add
cmpl
add
mov
int
sub
add
cmp
mov
jle
add
add
cmpsb
mov
inc
js
sbb
repz
lea
sbb
mulb
mov
shlb
pop
mov
ja
pushf
lea
fisttps
xlat
sahf
mov
add
add
lods
mov
adc
fs
sbb
sub
sbb
push
aaa
inc
into
adc
ret
sbb
jb
mov
pop
and
adc
rcll
pop
push
into
outsl
sub
adc
xor
sub
aaa
jge
lret
test
aad
mov
jae
jb
jecxz
into
inc
add
pop
mov
mov
or
shrl
xor
mov
in
pop
and
loope
push
cli
ret
nop
jo
stos
and
cmp
std
add
in
stc
xchg
ljmp
dec
in
or
and
rcrl
rcrl
mov
test
out
pop
jne
add
cmp
push
mov
or
cwtl
pop
out
add
add
cmp
inc
xor
inc
or
mov
jmp
ljmp
mov
mov
xor
leave
out
testb
adcl
inc
pop
test
add
lock
call
add
xor
add
movsb
and
mov
xchg
addr16
sbb
daa
mov
int
add
mov
enter
aam
add
add
loope
in
xchg
add
and
push
outsb
jno
dec
mov
push
sarl
enter
or
push
js
repz
std
scas
sbb
movsl
mov
rorl
cmpsb
fadds
xchg
or
sbb
jg
sub
sbb
lret
rclb
add
add
xor
dec
add
add
mov
hlt
mov
or
out
ja
js
jg
into
dec
test
lock
fwait
cwtl
outsb
add
out
outsl
into
lret
xchg
or
fcoms
stos
pop
cltd
daa
cmp
outsl
adc
adc
push
test
addb
or
pushf
int3
mov
cmp
shrb
lahf
pop
insb
test
scas
lock
adc
out
jns
mov
cmpsb
mov
in
fnstcw
push
xchg
test
mov
rcrb
sahf
adc
mov
sub
mov
add
inc
jp
push
mov
add
add
scas
stos
sub
cmp
sub
add
mov
jle
pop
mov
jne
sub
inc
outsl
adc
pusha
fprem1
mov
sub
icebp
in
jge
cld
add
mov
jno
xchg
jp
loop
mov
cmp
push
push
mov
pusha
loopne
sti
movsb
add
sub
add
test
jmp
cmc
outsl
shrl
mov
cltd
and
mov
push
sub
jae
mov
movsl
add
gs
xchg
daa
cmp
dec
mov
sahf
or
add
or
mov
xor
daa
pop
test
repnz
cmpsl
arpl
xlat
xchg
in
add
dec
xchg
cmp
dec
aad
adcl
lods
push
sbb
cmpsb
cmp
decl
jp
repz
in
lret
fistl
add
push
dec
and
jmp
or
js
add
lods
add
lods
sbb
push
aaa
ud1
mov
test
push
or
and
and
and
inc
mov
add
push
js
incl
adc
pusha
mov
and
xchg
sahf
xor
or
add
add
ret
xlat
sub
push
adc
or
inc
dec
add
push
push
insb
add
fs
sbbl
lods
adcl
sub
add
pushf
cmpsl
xchg
aaa
shrl
imul
outsb
pop
js
cs
cs
fidivs
decb
or
setp
xor
add
nop
pop
sub
jle
add
mov
jnp
cmp
out
push
xlat
jmp
xlat
xor
outsb
call
cmp
dec
cmp
ss
out
or
adc
add
mov
scas
cmp
cmpl
scas
jmp
fsubrl
mov
jmp
pop
or
lock
mov
stc
mov
mov
add
adc
push
ret
arpl
xor
add
fadds
repnz
pusha
fsts
mov
imul
jmp
add
mov
add
and
mov
and
and
std
flds
lock
insb
loope
aas
mov
sub
mov
repz
in
add
repz
clc
add
std
faddl
add
adc
and
push
inc
popf
test
xchg
push
mov
sub
add
xor
xchg
out
lahf
shl
cmp
add
ficoml
push
dec
ret
insl
mov
out
pop
push
les
rorl
or
add
inc
jecxz
push
std
aam
pusha
test
mov
loopne
xor
add
sub
push
sub
and
pop
ret
add
out
fistpll
push
rorb
mov
add
in
bound
icebp
addr16
dec
pop
loop
add
fmul
shl
jnp
add
dec
cmpsl
data16
inc
sahf
shrb
and
add
add
mov
negl
clc
xchg
jle
xor
cmp
and
mov
in
push
add
lret
mov
xor
add
mov
ror
popa
lcall
add
in
pop
adc
and
and
add
sti
pop
add
pop
mov
push
shl
aas
scas
mov
push
jecxz
add
jle
push
inc
rcll
or
iret
test
inc
mov
jecxz
data16
add
sbb
in
outsb
jmp
cmc
add
sbb
dec
add
scas
lret
and
roll
nop
add
inc
and
inc
or
sbb
std
adc
add
test
sti
lock
fldl
xchg
sub
fwait
mov
push
pop
adc
and
xor
add
cmp
movsb
fildl
aad
in
out
cltd
add
inc
and
ljmp
mov
jno
sarl
add
outsl
in
aad
push
mov
rol
popf
jb
push
mov
and
cmc
popa
lcall
inc
cld
inc
fwait
lret
pushf
std
movsl
ret
mov
mov
cmpsl
pop
aaa
add
stc
loope
in
cmc
add
xlat
hlt
ret
xor
or
mov
add
add
add
push
movsb
pusha
jns
fwait
in
mov
add
ret
sti
add
popf
lcall
cmp
add
mov
mov
xchg
jo
stc
mov
cmp
xor
sub
sti
add
jno
inc
mov
and
fistpl
add
xor
pop
mov
pop
in
and
enter
pop
mov
ja
cmp
xor
iret
in
cmp
add
xchg
arpl
shlb
sub
mov
rolb
popf
push
hlt
pop
xchg
repnz
add
add
int
add
fisubrs
cmp
add
je
jae
add
xchg
sub
lds
daa
push
jnp
add
add
mov
add
mov
add
mov
add
call
shlb
jbe
into
loop
pop
dec
add
fnstsw
enter
mov
adc
js
fcoml
add
sarl
pop
add
sub
add
add
aam
dec
mov
and
lock
dec
mov
add
push
lods
xor
ljmp
or
inc
mov
jecxz
into
gs
cmp
inc
outsl
mov
mov
mulb
dec
leave
std
add
add
aad
add
lret
dec
popa
test
add
pop
nop
sbb
aam
movsl
insb
mov
add
add
and
push
add
lds
notb
xchg
roll
cltd
mov
mov
lock
test
or
push
daa
stos
push
out
lds
add
lahf
out
in
iret
cmp
bound
hlt
add
fadd
push
out
aas
clc
add
sbb
add
sbb
jbe
add
andb
add
addr16
sub
mov
add
jb
add
inc
push
xor
push
or
mov
or
mov
dec
mov
mov
pop
add
add
in
dec
popa
int3
add
subl
and
ja
add
add
icebp
xor
fs
sub
and
out
insb
stc
inc
ss
jmp
rolb
aam
nop
scas
addr16
jecxz
add
add
dec
in
mov
add
ret
jmp
insl
or
shlb
add
inc
imul
mov
arpl
mov
cmc
loopne
std
add
hlt
sub
stc
pop
push
leave
inc
xchg
lds
mov
add
pop
xor
xchg
std
mov
add
xor
repz
call
push
bound
jle
arpl
out
jg
add
enter
cmpsb
or
xor
xchg
cwtl
je
enter
add
add
push
sti
loopne
mov
dec
inc
add
inc
add
ds
mov
and
stc
repnz
pop
aaa
xor
or
cli
pop
add
adc
hlt
jecxz
mov
mov
addr16
into
and
mov
hlt
ret
adc
xchg
xor
add
push
mov
jl
das
ret
jmp
fwait
push
mov
daa
inc
vsubps
xor
iret
sahf
mov
add
add
lock
mov
add
xor
in
in
or
insb
sub
test
add
aaa
cmc
pop
sub
aas
mov
add
sbb
add
lahf
mov
add
add
sub
stc
lahf
mov
add
lret
dec
pop
icebp
loop
ja
pop
add
add
scas
insl
dec
add
and
add
mov
inc
shll
xchg
andl
push
add
sbb
xchg
add
and
stos
icebp
stos
fsub
sub
sub
ljmp
add
jno
push
add
aad
rdtsc
inc
cld
int
or
je
push
add
adc
mov
nop
pop
es
jle
ss
mov
stos
pushf
aad
lret
iret
sti
xor
aas
xlat
arpl
data16
add
push
int3
outsb
jne
jmp
int
rcrb
inc
mov
enter
mov
pushf
rorl
rorl
js
loope
pop
cwtl
jnp
adc
sbb
inc
add
loopne
in
dec
or
add
push
adc
add
fdivrs
outsl
lods
ret
or
sub
jnp
add
cmp
mov
inc
sub
mov
add
mov
div
add
cmp
fwait
dec
loopne
add
jo
push
jns
lods
add
add
add
add
jno
add
add
dec
and
stc
mov
xchg
or
add
std
push
inc
push
adc
ds
repnz
push
mov
arpl
leave
add
das
mov
lods
and
pop
mov
add
fs
in
lods
add
inc
loop
cwtl
add
insl
enter
xor
pop
addr16
rorl
add
stos
cmpsb
xchg
add
in
fimuls
pop
push
add
add
add
lock
jb
pop
loop
mov
pop
ss
stc
dec
jg
adc
sbbb
sub
add
jno
rorl
sbb
imul
mov
inc
mov
loope
jne
adc
add
jg
aam
hlt
push
add
add
out
add
push
sub
add
mov
add
mov
clc
clc
add
leave
xor
lea
arpl
mov
movsb
cmp
add
xchg
data16
inc
lret
das
add
fsubs
sbb
xchg
add
or
in
pop
sub
divl
and
out
xor
dec
test
or
inc
cmpsb
xor
daa
and
add
testb
and
sti
adc
jo
mov
cmp
jne
add
mov
or
add
insb
pop
jmp
sbb
mov
cmp
jae
cli
add
push
push
mov
mov
xor
mov
mov
add
sub
sub
xchg
ss
add
add
shrb
jecxz
and
jo
movsb
std
mov
std
add
add
push
pop
sub
pushf
xor
bound
out
mov
rorb
sbb
add
add
xchg
js
sbb
sub
add
or
or
add
out
sbb
dec
mov
insb
ja
imul
push
lahf
sub
repz
mov
add
add
jb
add
jecxz
adc
repz
daa
mov
add
add
aas
shll
adc
insl
ljmp
lret
jecxz
out
add
insb
mov
cmp
ljmp
pop
arpl
mov
das
mov
mov
arpl
add
das
fisubl
pop
xor
sti
mov
pop
popa
clc
mov
add
push
mov
lods
add
call
fsubl
adc
mov
add
je
mov
lock
dec
lods
add
xchg
and
rol
aas
jecxz
push
lods
setnp
inc
mov
int3
inc
and
xor
arpl
mov
shll
lods
mov
jge
aad
int
out
frndint
add
in
add
loope
loope
jae
or
sub
cmpsl
fdivl
faddl
or
dec
nop
or
in
ror
push
lock
mov
or
in
mov
rolb
mov
jecxz
lret
push
cli
jecxz
add
adc
add
add
call
add
adcl
add
add
xchg
repnz
insl
ljmp
jmp
rolb
add
cmp
popa
xor
push
pop
inc
call
lcall
frstor
movsl
add
add
add
aad
add
or
jns
xchg
fmull
test
xor
push
sub
cmp
idivb
add
lods
or
inc
into
shrb
ds
int
xor
add
xor
outsb
fildll
out
adc
mov
or
inc
jg
add
cmp
jp
sub
xlat
mov
add
mov
loopne
rolb
add
pushf
push
xchg
in
mov
xchg
mov
fsts
add
jle
std
flds
xor
lahf
mov
add
mov
test
or
add
mov
inc
sub
inc
daa
data16
add
clc
stos
or
lcall
out
cli
arpl
sbb
push
cwtl
test
dec
inc
shlb
fisttpl
cmc
leave
inc
xchg
cmpsl
mov
out
lcall
inc
add
and
lods
push
xchg
sub
mov
sbb
pop
add
sbb
pushl
dec
xlat
xchg
xchg
add
js
lods
jmp
push
mov
dec
es
aaa
test
loopne
push
roll
add
lret
shll
mov
cltd
add
add
lahf
popf
lock
or
cmp
repz
mov
push
cmp
push
scas
in
mov
fs
jp
cwtl
xlat
mov
add
clc
lret
mov
stos
fdivrs
frstor
pop
add
stos
xlat
iret
popa
scas
jge
fdivrl
mov
aas
cs
repnz
add
sbb
into
pop
add
inc
ss
mov
mov
lock
jae
mov
cmp
mov
add
movsb
jmp
ja
sub
add
imul
pop
mov
aas
or
add
ret
cmp
sub
jg
aam
mov
into
inc
xor
or
sbb
in
add
cmpsb
inc
sbb
add
movsb
js
dec
in
inc
mov
in
ljmp
jl
dec
sub
add
ljmp
pop
ds
leave
add
daa
cmpsb
push
add
xchg
cmc
fldt
stos
aam
mov
popa
popa
movsl
out
fsubl
sbb
pop
cld
stos
and
cwtl
mov
sub
rorl
adc
and
insl
test
add
cmp
insb
add
adc
mov
mov
add
pushf
add
mov
add
fmul
fwait
inc
out
lods
sbb
movsb
in
add
push
cmp
fcoml
add
sub
cmp
add
fadds
and
lcall
pop
mov
add
sub
or
scas
pop
mov
add
sbb
mov
mov
jb
add
add
add
cld
in
std
es
out
sub
add
pop
outsl
mov
dec
lahf
pop
bound
adcl
add
int3
out
lret
out
add
dec
pop
or
or
mov
popa
sti
and
aam
dec
scas
jnp
lods
add
cwtl
pop
sbb
jp
movsb
stc
add
loopne
add
cmpsb
sbbl
es
stos
mov
aad
cmp
jp
outsl
jo
add
nop
xchg
or
loopne
leave
scas
add
imul
js
jnp
jno
insb
jmp
add
out
aaa
push
iret
dec
ja
or
aaa
mov
add
dec
daa
inc
and
push
push
cs
lcall
xchg
ss
out
add
add
mov
lret
inc
cmpsl
push
sbb
add
stos
mov
jbe
mov
mov
add
inc
add
cmp
dec
xor
jbe
add
add
daa
mov
sub
je
stc
jae
rolb
sub
xor
out
aas
insl
dec
add
add
loop
jo
add
add
jmp
repz
or
push
rcrl
mov
movsb
rcrl
push
add
xchg
leave
add
pop
xorb
add
xor
push
xchg
shrb
pop
in
lret
xchg
lds
je
lea
inc
hlt
cmpsb
ret
and
aaa
je
add
cmp
dec
pop
or
or
mov
popa
sti
and
aam
or
adc
out
inc
sti
mov
mov
adc
inc
add
add
xor
sbbl
add
xor
or
out
jmp
xor
int
mov
add
push
movl
add
jp
mov
negb
pop
jns
daa
and
cwtl
mov
add
cwtl
xor
add
fistl
in
mov
cmp
mov
add
xlat
addr16
add
arpl
xor
lods
test
and
add
andb
add
sub
add
add
jne
add
fs
popa
cmp
scas
sbb
add
xor
push
loopne
add
dec
adc
add
mov
jns
fbld
cld
add
mov
add
dec
xchg
inc
sbb
or
pop
jb
out
andl
add
idivb
cmc
loopne
cli
add
pop
aam
mov
leave
ljmp
xor
lret
xchg
push
add
in
add
add
mov
add
mov
mov
call
dec
add
rclb
sub
lods
jmp
shrb
jne
push
push
testl
cmp
add
add
int
cltd
notb
inc
dec
mov
add
rorl
add
popa
movsl
stos
rcr
daa
and
leave
add
mov
pop
add
rorb
xchg
aaa
add
popf
test
add
or
add
mov
std
fidivs
scas
in
mov
pop
push
repz
add
pusha
jno
flds
into
add
mov
hlt
jg
pminub
or
dec
mov
inc
jns
nop
push
sbb
sub
add
jl
jle
add
add
in
jb
out
jecxz
inc
pop
clc
aam
sub
icebp
add
pop
sub
or
out
add
mov
jge,pt
vpaddsw
iret
test
add
inc
adc
add
sub
push
cli
cmp
add
jne
outsl
and
rolb
add
jecxz
stos
add
and
hlt
inc
ss
mov
add
xor
jbe
inc
pop
incb
add
cmp
jmp
lods
add
in
adc
add
daa
imul
sbb
notl
adc
popa
inc
add
add
add
add
jl
mov
add
push
test
add
movsl
iret
xchg
cwtl
add
mov
js
cmpsb
jp
jmp
add
js
add
mov
add
add
in
lods
roll
xchg
arpl
out
pop
aaa
lcall
dec
scas
or
out
add
jl
aam
in
bound
cs
repz
hlt
jg
add
aam
outsl
mov
add
loopne
movsl
js
or
les
add
js
push
lret
lods
adc
xchg
js
jno
add
add
sbb
sbb
in
inc
jno
jge
shl
add
inc
dec
sbb
mov
sbb
push
dec
add
inc
push
push
arpl
add
mov
adc
lret
rolb
xor
add
push
sub
xchg
insl
ret
mov
add
inc
pop
sbb
dec
lods
mov
fadds
sub
addb
dec
jae
mov
gs
repz
mov
mov
add
ss
iret
push
fcomi
jne
inc
stos
ja
cmpsl
daa
popa
push
add
gs
add
insl
xor
pop
jle
xor
add
outsl
jecxz
mov
in
add
sub
jl
add
pop
aam
add
and
add
inc
dec
cmp
mov
stos
sub
add
in
movsl
dec
cwtl
lea
dec
and
add
popa
pop
cmpsl
clc
add
test
loopne
jge
lea
add
cmp
rcrb
stos
jg
add
mov
loop
add
outsl
nop
repnz
pop
sbb
add
sarb
jb
mov
roll
add
arpl
add
mov
sbb
xor
or
mov
fsts
stos
dec
jbe
add
lahf
jne
push
lahf
xchg
inc
push
xchg
adc
add
movsl
push
cwtl
out
fs
test
in
add
add
add
std
enter
mov
pop
mov
add
sbb
xor
ja
sub
xor
push
sbbb
sbb
into
lcall
fcom
push
push
cmp
fisubrs
cld
add
jecxz
xlat
roll
pop
adc
cwtl
test
lret
rolb
add
shrl
inc
pusha
inc
std
mov
mov
call
jge
int
shll
faddp
mov
js
add
insl
xchg
inc
xor
xchg
subb
add
jle
outsb
xchg
test
lods
jno
add
lock
mov
mov
mov
in
mov
out
xlat
stos
test
add
and
in
inc
pop
test
and
mov
xchg
mov
inc
imul
inc
inc
add
inc
or
mov
xor
xor
sub
add
inc
xor
xchg
outsl
add
mov
test
out
add
cmc
inc
jne
out
inc
jl
sub
inc
push
outsl
jbe
mov
sbb
dec
add
popa
or
jbe
sbb
ss
bswap
add
sahf
cmpsb
pop
test
aaa
add
xor
scas
cmp
mov
scas
add
insl
jg
data16
mov
add
adc
sahf
lcall
mov
fiaddl
add
fdiv
pop
add
push
jp
xor
xchg
inc
xchg
test
add
adc
shlb
add
test
adc
add
imul
adc
iret
ds
mov
jge
roll
cmp
add
add
pop
dec
in
cmp
aaa
xlat
mov
iret
into
or
add
cs
sar
push
stc
mov
add
out
xchg
movsb
add
addb
jg
pop
mov
fs
xor
add
repz
shl
lret
roll
jne
and
inc
push
jmp
add
clc
fadds
test
rcr
add
fwait
sahf
ror
mov
mov
xor
add
mov
imul
daa
gs
push
ret
test
mov
jg
push
dec
int
aad
add
jns
mov
roll
inc
and
inc
or
and
nop
add
inc
sub
sbb
add
add
mov
test
repnz
jns
add
mov
jmp
fcom
push
sbb
sub
dec
add
in
fnstsw
add
rcl
lahf
xchg
add
add
test
add
add
ret
or
mov
pop
push
popf
loope
add
add
dec
or
mov
add
jp
xchg
add
fs
or
sbb
adc
cmpsl
rorb
cmp
add
pop
xor
fldl
add
cld
xchg
lds
stos
adc
or
insl
andl
jp
dec
sub
cld
pop
push
data16
inc
add
push
mov
sbb
es
add
cmp
pop
in
sub
sbb
sahf
pop
fiaddl
xorl
push
test
scas
dec
add
add
add
in
mov
add
sarl
std
lcall
lret
movb
add
dec
mov
push
add
dec
push
mov
adc
and
add
mov
mov
add
in
add
lea
rclb
or
inc
into
mov
int
pushf
lret
outsl
call
pushl
add
mov
bound
push
add
mov
mov
and
or
out
add
das
mov
mov
add
in
testl
or
sub
add
daa
dec
push
jle
add
jmp
loopne
pop
icebp
mov
call
jmp
clc
popa
andl
add
pop
in
xchg
lds
jae
xor
jmp
shlb
jle
cld
flds
inc
push
xchg
frstor
add
clc
imul
add
push
adc
add
rcll
sbb
or
add
int
adc
fstps
shrb
pop
shll
jle
xlat
add
lret
add
sbb
sbb
add
jmp
add
jne
stos
gs
test
xor
mov
cld
xchg
enter
int
add
adc
in
add
test
scas
pop
sbb
add
mov
xor
mov
xor
mov
jno
dec
in
fisubl
sbb
movsb
jp
push
cmp
or
add
inc
fs
mov
add
repz
ja
add
xchg
outsb
inc
mov
mov
push
es
popl
cmp
bound
lahf
enter
or
out
cs
add
fwait
and
add
xor
add
xor
mov
add
in
lahf
iret
popa
jl,pn
fdivrl
mov
mov
mov
nop
add
call
pop
mov
in
inc
leave
loopne
aam
xor
pause
scas
xor
outsb
cmp
sti
add
shll
cmp
sti
js
add
mul
mov
ret
sub
mov
and
inc
push
xchg
add
mov
mov
roll
inc
and
inc
or
and
nop
add
inc
sub
sbb
add
mov
add
mov
add
std
scas
push
notl
nop
js
add
pop
push
jle
mov
pop
add
in
add
pushf
or
cltd
add
ds
in
add
cmp
shr
add
and
mov
outsb
jno
imul
add
jns
cmpsl
cmpsb
call
push
adc
add
push
mov
loopne
xlat
ljmp
in
aaa
jg
push
rcll
test
adc
mov
and
test
add
mov
push
int3
jge
cmp
add
pop
ret
cmp
sahf
push
insb
js
add
jb
sub
popf
cmpsl
mov
aad
push
in
addl
mov
pop
insl
add
sbb
add
xchg
jnp
jae
fs
incl
daa
pop
dec
add
add
push
addb
fldenv
mov
or
sub
jno
xchg
add
add
inc
push
pop
dec
mov
xlat
cmc
addl
sbb
dec
outsl
xor
jge
iret
add
mov
scas
in
cmc
pop
cmove
mov
aam
xor
jecxz
push
cld
add
xchg
fsubrs
xor
xlat
or
test
mov
cmp
xor
dec
aas
sub
adcl
stos
ja
inc
jmp
sub
inc
fmull
mov
add
stos
jo
mov
test
imul
mov
mov
lds
lcall
add
push
lret
add
aaa
icebp
inc
and
push
add
out
shrl
adc
jnp
mov
cmp
lret
testl
fldt
add
out
lea
add
stos
enter
pushf
orb
mov
cmc
xchg
fildl
add
in
lods
add
dec
fnstsw
es
dec
mov
dec
add
dec
xor
aas
xor
cld
jecxz
add
ret
cld
cld
add
sub
cmpb
add
mov
add
add
sub
es
mov
push
xor
add
stos
xor
pop
addl
inc
iret
add
push
mov
xor
addl
push
add
jg
xchg
shlb
ja
in
xor
add
dec
mov
sub
add
mov
add
addr16
cld
ja
mov
bound
add
pop
out
and
add
add
add
lret
lret
std
and
sti
ja
dec
mov
sub
inc
xchg
aam
push
jnp
test
add
outsb
imull
out
add
or
movsl
sbb
add
sbb
pop
jle
sbb
dec
nop
add
jle
add
push
cs
repnz
insl
fwait
lods
or
mov
add
hlt
std
pusha
push
push
sbb
jg
out
xor
leave
int
add
adc
nop
scas
mov
or
leave
add
cmp
es
xchg
add
or
mov
jl
and
aaa
shrl
pop
into
xchg
push
cmp
jno
and
dec
dec
mov
jle
push
dec
into
rcr
fwait
mov
pop
inc
mov
std
test
add
jb
or
pop
push
cmp
leave
xor
loop
add
mov
sub
rcll
sub
scas
lret
xor
out
xchg
lahf
add
enter
lahf
xor
outsl
add
xchg
fiadds
ss
sbb
jmp
ret
das
ds
into
adc
fldt
pop
cwtl
lds
pop
and
cld
mov
jne
xchg
sti
add
xor
add
stos
cli
add
sub
and
jg
push
jns
jae
add
add
cmp
fstpt
mov
or
add
add
mov
or
mov
push
add
add
mov
cmc
ret
sbb
add
jnp
jae
fs
paddd
inc
loop
fstpt
xchg
mov
lods
xor
ret
int
pusha
sub
fidivl
fs
and
in
add
mov
inc
cmp
call
hlt
sub
sbb
add
sarb
fstp
add
cmp
cmp
mov
xchg
dec
add
or
add
enter
add
jp
in
and
push
ret
fcom
push
daa
add
add
mov
add
pop
add
ja
push
xorl
mov
int3
and
subb
add
add
add
jle
popa
popa
movsl
rcl
fsubl
sbb
pop
sub
and
xor
cmc
repz
lea
sub
xchg
scas
lret
pop
aaa
xor
cmp
add
add
mov
scas
daa
insl
push
inc
pusha
sarl
add
push
or
push
pop
add
jg
fsubrl
adc
int3
jle
pushf
fisttps
ror
mov
repnz
cmpb
sar
sbb
pop
fisubrs
cmp
add
jp
pop
add
ret
sbb
add
mov
mov
in
add
sub
sarl
xor
pop
idivl
pop
mov
pop
add
pop
iret
cs
jne
shrl
mov
ljmp
jmp
mov
loope
add
hlt
pop
inc
call
neg
or
sbb
add
jecxz
sbb
dec
and
add
bound
dec
mov
sbb
add
negb
adc
in
mov
jge
fisubrl
and
mov
int3
loope
add
imul
mov
add
dec
add
cwtl
pop
mov
add
sbb
add
mov
jae
in
and
test
add
cli
pop
or
adc
sarb
add
popf
xlat
add
popl
loopne
xor
fcmovu
mov
fucom
mov
movl
jae
cli
mov
cltd
movsb
insb
add
jns
add
in
test
out
lods
add
in
inc
pop
clc
xchg
sub
mov
unpcklps
dec
add
fisttpll
mov
xlat
add
cmp
push
add
movsb
jl
inc
cwtl
or
stos
jmp
mov
push
nop
mov
cmp
jg
mov
mov
xchg
cmp
roll
push
add
cmp
inc
jo
imul
arpl
inc
stos
adc
mov
aaa
xor
pushf
movsb
gs
push
push
fs
movsl
ljmp
dec
mov
xor
mov
cwtl
push
push
ja
jg
and
sub
xor
fs
push
xor
leave
sti
jb
test
cli
sbb
xchg
pop
or
and
js
int3
or
xor
or
mov
dec
shll
inc
stos
in
cmpsl
mov
or
faddl
add
inc
push
inc
pop
lcall
sbb
fst
jns
jmp
aad
ja
mov
push
xor
cmpsl
call
nop
outsb
inc
cmp
mov
xor
mov
add
in
xor
test
add
icebp
nop
push
shrb
stos
mov
idivl
mov
pushf
les
push
subl
data16
or
xor
shrl
or
pusha
cmp
mov
dec
vcvtsd2ss
leave
imul
and
mov
imul
cvtdq2ps
aam
test
or
adc
popf
loop
loopne
mov
test
jle
enter
lods
lret
push
test
jno
outsl
ljmp
leave
and
ret
adc
inc
jb
das
jmp
dec
dec
jl
mov
pop
les
sbb
sub
jo
mov
rcl
dec
insl
arpl
lock
cltd
mov
ret
pop
sub
lcall
or
sbbl
adc
and
test
pop
clc
les
jbe
push
adc
jb
mov
imul
mov
adc
lods
lret
cs
insb
test
pusha
ds
push
andb
ja
orb
shll
xchg
sbb
add
cwtl
mov
jne
dec
push
push
cltd
xor
mov
adcl
sbb
inc
fbld
xor
fstl
mov
mov
sahf
out
loopne
lds
das
pop
pop
sbb
xchg
cmp
loope
mov
rorl
orl
xlat
mov
jmp
mov
push
adc
mov
xchg
lahf
mov
pop
leave
scas
lock
xorb
decl
in
fcoms
into
rcrb
ss
jg
xor
inc
sub
fidivl
inc
into
mov
add
pop
adc
and
fisttps
mov
mov
lahf
call
adc
leave
ret
push
outsb
popa
sbb
sbb
inc
adc
jecxz
inc
push
mov
pop
push
incw
pop
push
xchg
arpl
imul
popa
aam
jne
loopne
cltd
inc
std
sbb
mov
mov
xchg
pop
xor
lds
sub
js
jne
test
repnz
mov
test
mov
adc
cmp
les
pusha
cmp
cmp
lods
adc
repnz
lods
inc
int3
in
cmp
in
mov
sub
loop
jg
jmp
pop
outsl
icebp
icebp
scas
or
push
cmp
sub
cltd
xchg
xchg
popa
push
jp
aas
test
icebp
pusha
fucomi
sti
sub
mov
roll
scas
mov
or
in
sbb
dec
rorl
inc
mov
push
mov
bound
pusha
shr
shlb
jb
fisubrs
adc
mov
shrl
js
sbb
insb
add
xor
inc
in
lret
fisubrl
add
inc
jae
cmpsb
into
arpl
mov
dec
andl
in
dec
push
pushf
or
mov
push
and
and
mov
out
out
ret
mov
iret
cmpsl
shll
movsb
mov
ret
xor
into
cmpsl
push
mov
aaa
das
icebp
and
sub
add
mov
loopne
dec
negb
sbb
inc
iret
mov
test
mov
loope
jae
std
loopne
lea
aad
pushf
dec
stos
lds
mov
dec
jg
cmpsb
test
mov
insl
rcll
jo
jmp
mov
xor
int
dec
jmp
out
jl
jmp
xchg
sub
int
or
xlat
mov
mov
xchg
pusha
cs
ret
popa
jle
lcall
test
movsb
or
sbb
pop
test
popf
stos
cli
or
test
mov
aaa
pop
enter
int
push
jg
mov
lret
push
lods
pushf
ljmp
mov
subb
sarb
adc
subb
and
mov
movsb
test
mov
std
enter
xor
scas
test
sub
std
mov
push
sbb
lock
push
add
adc
sub
sbb
xchg
sti
dec
mov
add
mov
in
and
xchg
cmpb
mov
loop
xchg
jmp
dec
and
xchg
out
movsl
shll
mov
inc
out
jne
xchg
shll
mov
inc
fisttps
mov
push
leave
fbld
loop
js
jge
aam
ljmp
jns
inc
mov
inc
adc
mov
or
add
push
filds
shrb
in
lahf
shrb
call
fwait
roll
push
fists
loop
jo
jge
test
cmp
sbb
notl
push
sub
js
sahf
aaa
push
flds
jbe
pop
aaa
into
loope
xchg
mov
jge
shll
push
inc
push
cli
frstor
cwtl
cmp
je
dec
je
adc
fldt
das
push
enter
pop
in
aas
test
addr16
mov
pop
cmp
cli
push
repnz
ret
pop
cmp
shrl
jecxz
shlb
push
mov
hlt
jmp
sub
mov
xchg
or
and
or
mov
lock
shl
sti
and
testl
push
jg
push
lds
jb
pusha
sbb
test
mov
mov
pop
sti
jno
test
push
push
rcll
dec
aaa
or
adc
iret
pop
mov
inc
xorl
add
xchg
das
js
pushf
arpl
xchg
lret
add
sub
repnz
lock
jmp
sub
push
mov
inc
out
sbb
inc
inc
sahf
mov
push
cmpsb
clc
jg
test
adc
rorb
jl
fwait
push
sub
loop
icebp
aaa
mov
out
inc
test
adc
cmp
aas
fs
es
lock
xor
or
leave
mov
xor
sub
enter
push
xchg
pushf
push
mov
adc
dec
push
lret
dec
push
popa
inc
xchg
lea
les
insl
pop
call
mull
jne
stos
and
cld
ja
fcmove
cwtl
ret
xchg
adc
mov
adc
xor
lds
les
fistps
mov
cmp
adc
hlt
pusha
jge
shrl
js
sbb
xor
pushf
mov
lods
popa
lock
inc
mov
jne
xlat
pop
inc
or
add
sub
xorl
adc
mov
cmp
jbe
shrb
ds
inc
adc
push
je
ljmp
out
roll
cltd
dec
dec
sub
inc
pushf
add
test
cmp
adc
loop
sub
mov
int3
outsb
cmp
adc
lahf
or
out
jmp
or
xor
lods
in
jbe
adc
roll
ljmp
jnp
mov
insb
adc
push
loop
in
or
stc
xchg
insl
lea
std
mov
lret
jle
push
xor
sub
add
in
mov
jno
inc
cmpl
hlt
pusha
mov
or
push
mov
incl
imul
lahf
mov
cltd
daa
jle
mov
scas
std
outsb
mov
jne
leave
jge
flds
fs
cmp
or
cld
mov
rolb
xor
negl
cltd
push
sub
mov
iret
idivl
aaa
out
push
dec
enter
stc
shlb
sbb
in
mov
aas
in
mov
mov
popa
sub
xor
push
dec
jns
in
es
loop
push
ret
pop
adc
mov
sbb
cmp
fldl
aad
dec
je
sub
popa
mov
lret
jo
leave
inc
and
pop
stos
lods
xchg
inc
jns
push
mov
mov
adc
sub
mov
lock
out
push
addb
test
pushf
inc
stos
cmp
mov
add
fcmovu
fists
cs
rcrl
mov
lahf
inc
in
mov
rcrl
jae
lods
in
out
addr16
fdivrl
pop
leave
imulb
inc
rcll
lods
leave
je
leave
lds
xchg
fnstcw
shrl
cld
fnsave
aad
cs
push
mov
pop
cmpsl
sbb
inc
in
inc
mov
ljmp
arpl
cli
mov
in
cltd
sub
push
jg
aad
pop
arpl
cltd
rcl
push
flds
mov
gs
out
and
xchg
add
xchg
jge
loope
gs
std
ljmp
sub
ja
or
cltd
add
add
push
jb
loope
lock
xchg
xchg
testl
mull
add
sub
jmp
xor
lds
sti
add
clc
les
fcmovbe
loope
mov
std
mov
enter
loop
sti
dec
or
pop
add
add
add
int
cld
mov
popf
repnz
sub
nop
out
out
inc
pop
out
push
inc
add
popf
dec
xor
and
les
add
ljmp
jns
add
push
inc
mov
into
add
pop
sub
add
stos
aas
inc
add
add
dec
ljmp
add
sbb
cs
cmp
and
cmp
sbb
pop
loope
sahf
aam
add
lods
add
jne
cmp
inc
ret
and
inc
arpl
add
add
cs
clc
pop
int3
sub
mov
daa
cs
cmp
ret
and
add
ds
cli
or
push
mov
into
add
xchg
push
add
mov
add
ret
push
pop
and
add
cwtl
xor
or
add
lcall
add
and
mov
xor
aam
add
imul
inc
ljmp
imull
inc
add
or
out
rcll
or
popf
add
jno
inc
popf
aas
add
add
mov
aam
cs
jns
cmp
inc
mov
add
dec
pushf
cmp
ret
scas
roll
test
out
cmp
mov
xor
in
in
or
pusha
add
mov
lds
popf
xchg
add
outsb
add
into
mov
xor
jecxz
or
mov
repnz
sbb
add
popf
into
callw
shlb
pop
dec
incb
adc
xor
sbb
add
sbb
add
push
fxch
cmp
mov
or
push
mov
add
dec
out
out
in
cmp
fs
addb
inc
arpl
add
mov
or
cltd
add
jmp
test
add
jmp
push
and
dec
sarb
push
lret
push
in
pop
mov
outsb
xchg
jns
test
sti
or
and
lods
xchg
fyl2x
fldenv
daa
add
xchg
lea
adc
sar
lcall
js
mov
call
jge
add
cmp
lea
add
jl
sbb
jno
ds
idiv
xchg
mov
mov
add
jns
mov
fwait
push
sub
add
jle
push
stc
js
std
shll
mov
inc
call
jecxz
lret
out
or
pop
popf
repnz
fs
xor
push
add
jecxz
sbb
jl
subl
add
xchg
out
dec
and
into
push
cmp
dec
sub
cmp
in
inc
lods
leave
xchg
mov
mov
je
fwait
in
pop
icebp
fcom
sbb
pop
mov
add
push
daa
mov
stos
popf
ss
scas
add
in
into
mov
int
int3
icebp
stos
xchg
cmp
jns
in
jecxz
push
push
add
add
add
mov
mov
sbb
out
add
rcl
enter
out
mov
xor
push
or
add
add
cmp
add
sub
rcrl
or
pop
add
repz
outsl
faddp
add
fwait
jg
stos
xor
cld
aad
popf
hlt
cmc
pop
mov
fwait
cmc
inc
or
add
arpl
test
cmp
mov
and
sub
jecxz,pt
and
push
scas
fiaddl
add
or
repnz
pop
jnp
xchg
mov
lods
std
mov
add
xlat
ja
add
in
cmp
mov
sub
push
insl
xor
add
add
cmc
popf
into
stos
ljmp
bound
mov
mov
push
mov
push
add
enter
insb
mov
rorl
fnstenv
cli
aad
dec
and
xor
dec
add
mov
xor
add
mov
push
inc
xlat
mov
addr16
je
adc
push
inc
jb
or
push
addr16
int3
add
pop
sub
mov
cmpsl
add
lahf
in
mov
mov
ljmp
in
xor
xlat
sub
loopne
addr16
adc
add
mov
ret
pusha
addl
push
lods
inc
lods
faddl
iret
jl
sti
scas
push
insb
adc
add
pop
clc
roll
add
inc
pop
mov
mov
xor
mov
repz
jne
ljmp
or
ds
sub
or
ror
add
stc
mov
add
lods
adc
jl
mov
add
add
ret
jns
mov
imulb
roll
popa
fstp
push
cmp
add
jb
lods
outsl
dec
add
incb
and
inc
imul
arpl
adc
sbb
xor
jle
or
inc
cmpsl
inc
lret
je
add
xchg
pushf
faddl
dec
loop
jno
xchg
push
push
add
test
call
mov
add
lods
stc
cmp
in
lret
std
add
add
cli
pop
cmp
shlb
push
mov
xchg
loopne
add
fisttpl
jle
ss
cld
in
add
add
aas
ja
jns
stc
or
movsl
jb
pop
mov
dec
add
arpl
ret
add
cld
jo
pop
sub
sub
movl
incb
or
or
pop
stos
add
add
ljmp
add
add
inc
mov
mov
scas
lock
jae
add
xor
mov
scas
bound
pop
lret
scas
cmp
push
lahf
jns
xchg
rcll
scas
fnsetpm(287
add
jae
add
out
mov
rorl
push
inc
sbb
cmc
out
out
dec
dec
sarb
mov
add
add
add
lock
dec
mov
add
push
add
int3
shlb
lds
divb
fwait
and
jg
sub
add
pop
mov
out
adc
add
add
add
add
mov
lods
mov
pushf
movl
push
popl
add
lods
inc
or
jmp
in
movsb
pushf
sbb
xor
add
dec
int
ja
add
cmp
enter
xor
or
and
in
pop
adc
dec
adc
cmpsl
insb
cmpsb
aaa
add
add
int3
add
int
js
mov
addb
jb
jge
inc
incl
pop
jne
test
cmp
push
and
pushf
cmp
ret
sti
add
jb
mov
add
lock
add
xor
inc
adc
movsb
insl
ja
mov
pop
jl
fwait
add
mov
imul
sub
cmp
or
add
dec
or
fidivl
xor
repnz
popf
into
xor
cmp
dec
add
test
push
cmp
jl
lds
and
std
adc
ja
in
cmp
add
movsb
fistpl
aad
jecxz
icebp
loope
jle
add
into
add
xchg
lock
incl
add
les
add
inc
add
test
xchg
aaa
xchg
arpl
add
out
sbb
push
xchg
pop
add
sbb
add
add
and
inc
and
add
cli
add
mov
xlat
mov
pusha
xor
testl
jmp
add
dec
or
out
xor
add
outsb
out
mov
push
out
xchg
aam
xor
mov
push
jl
add
and
push
shl
cmp
mov
pop
lahf
xor
inc
aam
push
jp
mov
push
andb
fcom
xchg
out
shrl
repz
test
xor
aas
sti
rcll
xorb
add
iret
fs
dec
pop
push
inc
or
arpl
xor
mov
mov
test
mov
stos
frstor
iret
jb
sbb
add
movsb
fildl
cmp
mov
add
or
fcmovbe
xchg
add
icebp
inc
movsb
pop
popl
xchg
jo
cmp
sbb
add
mov
popa
add
test
imul
xor
push
add
sbb
jmp
jb
jo
les
mov
mov
push
push
sarb
mov
mov
aaa
sub
add
add
add
sub
sub
shrl
cmp
add
or
rolb
js
and
mov
ja
or
jnp
cs
ficoms
pushf
or
add
jmp
faddl
testl
lock
je
out
fwait
add
pop
cmp
lahf
inc
mov
pop
and
xchg
add
iret
mov
gs
push
hlt
cmpsb
push
mov
xchg
leave
hlt
mov
pop
pop
lds
insl
dec
scas
pusha
imul
jb
loopne
call
add
xchg
push
pop
imul
ss
cmp
out
sub
mov
pop
popl
out
jno
cmp
bound
or
jmp
add
into
cmp
mov
ficoml
imul
add
sahf
repnz
mov
mov
in
mov
push
add
mov
aaa
push
fwait
stos
jp
add
int
lret
scas
jmp
push
inc
pusha
push
cmpb
xchg
mov
fucom
pushf
mov
sbb
or
add
int
mov
xchg
add
add
xchg
adc
add
push
mov
clc
add
nop
and
xor
in
add
int
js
int3
mov
inc
insl
loope
add
mov
add
mov
add
jl
mov
jb
mov
adc
jmp
pusha
jo
sbb
xchg
add
in
pop
push
adc
mov
stc
popa
xchg
das
add
xor
mov
adc
add
inc
addr16
imul
call
repnz
cs
sub
outsl
repz
sbb
in
jbe
jbe
decb
ja
stos
pop
pop
jbe
xchg
or
xor
gs
jecxz
add
lock
pop
add
enter
xchg
cmpsl
add
into
cltd
sub
test
pushf
daa
add
or
in
cwtl
arpl
push
mov
xlat
pusha
add
add
add
cmp
sbb
addb
imul
iret
add
xchg
mov
adc
add
mov
push
dec
fwait
add
in
ror
lret
mov
add
lcall
stos
pop
add
add
sub
and
lret
repnz
xchg
pop
popa
and
cmp
enter
xorl
repz
sub
xor
xchg
repnz
add
popaw
inc
ja
cmp
mov
cmpsl
ss
xor
add
push
bound
dec
push
sbb
andl
add
xchg
lds
adc
pop
jno
sahf
aam
add
add
cmp
movsb
inc
in
mov
xor
idivl
adc
ja
je
lret
mov
push
xchg
dec
aas
int
or
pop
or
aaa
or
cld
les
lcall
dec
and
cmp
int
push
std
add
mov
xorb
adc
pushf
popf
jnp
jnp
enter
mov
aaa
push
inc
in
es
xlat
and
cmpsl
xor
imul
or
in
and
mov
jg
into
loop
push
dec
add
cmp
add
out
loopne
lods
sarb
lret
xlat
imul
sbb
push
popf
stos
sub
movsl
xchg
cwtl
inc
or
rorl
outsl
or
bnd
push
rcrl
mov
dec
nop
mov
inc
cmp
dec
jp
xchg
leave
jmp
add
stc
push
mov
xchg
add
pop
pop
ss
mov
aaa
bound
mov
cmp
add
push
dec
insl
mov
out
mov
inc
cmp
lea
pop
jae
popa
rep
cmp
dec
mov
es
add
mov
data16
ret
cmp
scas
sub
dec
cmp
fsubr
or
into
add
fwait
fs
dec
mov
dec
testl
insb
xor
popa
pop
mov
xchg
imul
movsl
rcll
add
nop
push
mov
out
stc
push
in
cs
cld
dec
inc
jg
mov
in
mov
pop
add
popa
clc
mov
jnp
adc
bound
add
pop
test
or
inc
add
out
add
xor
sbb
ret
lods
sub
or
cmp
and
insb
sbb
xlat
loope
fadds
loopne
ffree
in
cmpsl
lock
mov
adc
or
push
ror
test
jecxz
lods
push
sub
je
add
inc
xchg
inc
sldt
pop
loopne
lret
xchg
inc
test
add
xchg
insl
in
orb
and
sub
add
add
ss
mov
ljmp
add
test
jnp
add
add
and
arpl
or
daa
add
mov
or
add
sbb
push
mov
and
mov
xor
xchg
sub
stos
xlat
stc
cmp
mov
test
test
adc
lcall
loope
shll
repz
dec
loope
rcll
add
stos
movsl
jge
dec
or
nopl
jno
mov
xchg
adc
push
call
jbe
add
shll
jg
fists
add
jns
xchg
mov
iret
fsubrl
mov
out
insb
in
mov
xchg
and
and
in
xchg
add
xor
in
xor
loop
ret
int3
sub
push
mov
and
sbb
add
pop
fbld
jne
repnz
dec
cmp
cwtl
sub
das
xor
jge
int
add
cmp
clc
push
pop
or
add
xlat
loope
adc
jbe
jp
in
add
dec
mov
leave
sbb
or
inc
pusha
add
in
xor
cmp
insb
mov
divb
popf
or
int
fisubs
iret
imul
inc
addr16
xchg
int
xor
adc
into
stc
lock
test
leave
std
int
xchg
push
cmpsl
mov
imul
aad
cmpsl
sub
xchg
mov
jge
add
mov
mov
and
mov
mov
incl
adc
pop
out
cwtl
imul
outsb
lret
cmovbe
add
add
jg
jo
daa
ret
jns
pop
xor
mov
addr16
pushf
cmp
ret
pop
mov
roll
in
aaa
xchg
pop
nop
jbe
ds
aas
jle
jbe
xchg
je
int
sub
adc
in
add
ds
das
add
add
in
fiaddl
sub
and
es
add
push
cmpsb
mov
xchg
insl
xor
ss
sbb
cmp
in
add
pop
insl
push
add
inc
jg
icebp
add
scas
test
cmp
subb
add
push
fmul
mov
lcall
ud2
movsl
pop
popl
inc
xchg
test
add
xor
add
and
mov
imul
jae
add
mov
cmp
push
mov
popf
cwtl
popf
ja
lods
out
loope
mov
repz
clc
xor
pop
mov
leave
or
pop
add
add
add
stos
pop
or
rolb
repz
outsb
filds
mov
mov
fidivrl
jb
mov
mov
mov
frstor
xchg
xor
mov
xor
ror
inc
cwtl
jg
out
rcr
push
loopne
or
add
lods
jp
bswap
rolb
add
cmp
push
jp
add
mov
sbb
push
add
push
mov
daa
sahf
js
jae
cmp
leave
xor
cmp
xor
test
jecxz
push
add
xor
xor
mov
dec
bound
sbbl
inc
roll
mov
dec
xchg
pop
test
popl
or
fidivrs
push
pushf
dec
das
dec
and
or
enter
sbb
mov
sbb
add
xor
push
add
orb
mov
in
and
jmp
sarl
push
addr16
fwait
movntq
xchg
xor
ret
aad
into
scas
insl
xor
jo
out
out
cmpl
lret
xchg
push
add
sbb
ja
cltd
xchg
loopne
jne
xor
arpl
out
inc
divl
mov
mov
fcompl
subl
cwtl
fwait
sahf
std
cmp
add
pop
dec
pop
add
or
outsb
push
sar
jne
leave
mov
ljmp
add
mov
xchg
incb
int3
lcall
and
push
ret
dec
mov
mov
add
jb
or
mov
ljmp
push
lret
sbbb
pop
leave
xor
jg
inc
movsb
sbb
dec
mov
pop
aad
mov
jbe
mov
test
push
or
xor
sahf
daa
mov
mov
popf
sub
dec
mov
mov
lods
cs
mov
adc
sbb
inc
add
sub
mov
mov
out
or
mov
out
sub
add
sbb
jb
out
mov
sahf
xchg
mov
jnp
fidivs
mov
or
xchg
push
lahf
sbb
mov
jne
xor
jp
fdivp
add
mov
int
cmp
xchg
and
jmp
sahf
movsl
stos
subl
jbe
xor
xor
mov
sahf
je
or
bswap
xlat
or
test
xor
mov
jbe
sbb
outsb
sbb
mov
pop
or
cmpsl
jno
mov
roll
sbb
repnz
add
aad
mov
mov
incl
icebp
add
lcall
pop
add
test
enter
aaa
mov
add
sbb
mov
repz
les
mov
add
push
adc
ret
mov
movsl
xor
dec
test
imull
jmp
xor
sbb
enter
sbb
dec
add
fimull
nop
daa
sti
mov
jle
loope
cmpsb
flds
daa
cmp
rorl
mov
xchg
jge
mov
lret
cmp
add
adc
add
ljmp
pop
js
push
and
clc
mov
jno
xchg
mov
add
out
lods
push
mov
pop
cmp
popa
xchg
lds
jp
clc
mov
insb
dec
add
inc
pop
cmpsl
fsubrs
add
push
adc
add
in
test
jo
adc
lret
mov
add
stos
pop
lahf
lock
sub
enter
dec
lret
outsb
add
add
test
sbb
sbb
test
popw
in
aas
jmp
mov
outsl
or
mov
pop
mov
js
stc
iret
and
xor
inc
pop
mov
jg
shll
mov
sub
dec
gs
out
js
and
rorl
scas
add
pusha
add
add
xor
adc
inc
roll
pop
out
out
cmp
jae
mov
xor
jo
cmpsb
push
xor
add
cmp
cs
loop
pop
ja
in
pop
call
pop
dec
dec
inc
sbbl
test
xlat
jo
add
mulb
dec
jge
push
fadds
add
out
enter
sbb
aad
out
test
sarl
add
iret
in
sbb
mov
pop
push
mov
enter
lock
dec
inc
push
test
mov
or
enter
push
or
sub
sahf
fldl
lcall
jno
mov
add
and
stos
movsl
xchg
cld
daa
or
and
aaa
mov
hlt
add
dec
lahf
jp
add
push
neg
or
fcomp
inc
aam
dec
dec
andl
jne
rcr
mov
push
mov
aaa
mov
push
out
mov
push
mov
cmp
xchg
add
imul
add
test
add
push
mov
push
out
push
shlb
dec
out
lods
inc
in
inc
notl
add
add
sarl
add
add
push
add
inc
jp
or
mov
mov
add
mov
add
pop
jb
add
add
pop
add
add
adc
push
mov
fadds
sti
add
idivl
jg,pt
add
xor
cld
inc
out
lcall
add
add
fadds
add
mov
or
xorb
xchg
mov
fcom
push
dec
and
sub
dec
aas
inc
bound
add
sub
adc
ret
mov
test
xchg
mov
xchg
mov
popa
gs
stos
inc
dec
add
mov
out
rolb
add
add
pop
sub
pop
addl
cmp
fistpl
ljmp
je
rol
pop
push
loop
add
daa
popf
xor
adc
gs
insl
add
lcall
mov
and
add
sbb
add
jne
inc
pop
out
adc
dec
in
xor
subb
pop
mov
sbb
mov
jbe
add
fbstp
or
add
push
pop
gs
andb
sub
inc
sbb
in
or
add
sbb
xchg
and
jle
push
add
pop
jae
call
pusha
add
cmpsb
inc
cmp
mov
adc
inc
in
inc
gs
mov
sub
in
out
sbb
aas
xchg
fidivs
xor
pop
add
loopne
cmpsl
xor
add
test
add
lcall
and
aad
and
ror
ja
loope
outsb
add
sbb
dec
mov
or
lret
or
xchg
cmpsl
cld
in
cmpxchg
inc
lcall
pop
and
ljmp
jae,pt
iret
add
inc
repz
daa
and
add
or
dec
popl
add
pushf
xchg
js
sbb
fcompl
jle
push
jl
pop
mov
cwtl
add
xor
xchg
stos
fs
jge
and
xor
inc
mov
sarl
ljmp
xchg
or
lods
push
inc
adc
add
iret
sub
push
jno
add
jmp
arpl
mov
dec
shrl
inc
hlt
aam
sub
leave
ljmp
mov
cmp
scas
xor
xchg
std
mov
sbb
in
cmp
jl
int
testb
test
jmp
fcomps
into
fnsave
js
inc
mov
add
pop
loop
jae
test
push
repz
jno
dec
clc
lcall
shl
sub
add
add
repnz
add
and
lret
pop
lea
add
loop
ss
xchg
add
or
add
add
inc
cmp
inc
fcmove
and
rorl
test
add
jo
pop
sub
jae
js
sbb
xchg
data16
mov
inc
int
loope
xchg
add
loop
jle
cld
flds
and
lahf
out
inc
loope
mov
and
add
add
sub
add
pushf
and
push
fsts
stos
xchg
add
push
faddl
jb
add
mov
mov
add
jmp
pushf
loopne
adcl
imul
xor
push
push
neg
and
push
or
cmp
lret
xor
ds
dec
shr
pop
test
mov
js
jle
xor
sbb
popf
out
lods
add
mov
mov
or
mov
and
jne
adc
sub
jg
push
das
iret
jmp
push
popa
aam
loope
lds
sbb
incl
outsl
xchg
fwait
or
rcr
add
std
ret
and
jl
mov
stos
test
push
jle
jne,pt
xchg
lcall
movsb
lds
scas
in
sub
inc
int
xchg
add
add
cs
inc
xchg
ficompl
jns
or
stc
mov
je
dec
add
mov
js
out
in
mov
xchg
jns
add
xlat
jl
shlb
inc
sbb
pop
fcmovne
dec
mov
add
xchg
add
and
add
sbb
std
nop
fisttps
leave
iret
fs
js
inc
jle
adc
cmp
aam
xor
push
adc
cmc
mov
into
loopne
add
cmp
inc
call
add
mov
iret
dec
das
cltd
stos
arpl
sub
pop
lret
or
xor
sub
not
cmp
add
add
inc
into
mov
fisubl
pop
or
sti
mov
cmc
and
add
outsl
jmp
mov
push
subb
xchg
mov
inc
mov
insb
inc
xchg
insl
fisubs
push
xor
rolb
clc
loope
repnz
inc
cmp
repnz
xor
shrl
rcr
cmp
cli
adc
dec
mov
xchg
fnstsw
in
xchg
outsb
and
outsb
or
jns
adc
cmp
push
shl
jnp
ret
popf
jo
or
jno
shlb
rorl
mov
push
or
add
andl
push
push
ret
mov
insl
xor
xor
jae
jl
pop
nop
cwtl
lahf
aam
popf
pop
cmpsb
adc
mov
add
add
pop
int
mov
sbb
add
push
pop
andl
jle
mov
push
stos
push
mov
sbb
js
pop
push
fisttpl
test
cmp
sub
notb
repz
arpl
adc
pop
fbstp
into
hlt
int
int3
cmp
pop
mov
mov
adc
xchg
les
es
xlat
in
push
jle
cmp
mov
dec
mov
loopne
and
fiaddl
imul
ret
xlat
or
cli
out
daa
loop
or
aam
cs
mov
setae
pusha
cmpsl
dec
mov
push
add
cmp
sbb
xchg
hlt
stos
loope
mov
push
xchg
inc
pop
mov
into
fists
mov
and
lds
xchg
pop
mov
rcr
sbb
ljmp
into
das
mov
shrl
cltd
adc
sub
fldcw
nop
scas
popf
out
pop
in
mov
mov
sub
sub
into
xchg
push
jno
and
xchg
add
xor
ljmp
pop
sbbb
mov
int
fists
add
add
fsubrl
std
fidivl
add
mov
dec
add
add
cmp
push
mov
in
aaa
mov
xor
mov
pop
add
pop
jno
add
stos
nopl
into
rolb
neg
cmc
ret
inc
dec
pop
sub
dec
js
rorl
or
push
mov
jl
lcall
fsubrl
nop
es
clc
aam
xchg
and
sub
or
and
mov
inc
fldl
push
pop
lahf
sbb
inc
add
mov
adc
ds
fcmovnbe
std
std
and
int
jp
cmp
subb
ret
jl
mov
add
add
dec
inc
sbb
or
xor
std
addr16
add
sbb
push
jge
bound
add
lcall
or
lret
xor
clc
and
xor
ret
arpl
jb
faddp
stos
lret
push
popa
jbe
pusha
mov
or
or
sbb
aad
and
shrb
adc
lds
scas
mov
dec
arpl
push
add
rol
cmp
pop
xor
bound
test
and
fildl
push
adc
fcompp
jg
mov
mov
imul
lock
add
fmull
xchg
pop
mov
inc
jecxz
mov
js
popf
fistpll
cmp
flds
and
dec
mull
cmp
pop
xchg
jmp
adc
lret
sub
mov
outsb
test
adc
movsl
xchg
lahf
mov
or
mov
push
or
push
add
arpl
loopne
std
cmp
add
sub
out
in
cmp
xchg
out
jg
test
push
fcompl
fdivp
stos
fildll
popa
pop
dec
shll
sub
sbbl
pop
lods
mov
push
int
ret
inc
sbbl
and
xchg
sbb
or
cmpb
jno
mov
jno
aad
inc
xor
xchg
shl
cmp
sub
enter
addr16
dec
sbbb
test
push
subb
or
lret
add
sbb
int
jb
adc
inc
xorl
imul
mov
push
insb
lea
push
xor
jnp
add
stos
xor
cli
add
add
ja
and
lret
sub
in
cmpsl
mov
fiadds
cmpsl
push
mov
mov
mov
add
push
idivl
movl
shr
lret
into
push
adc
mov
mov
mov
sbb
mov
add
add
inc
jecxz
or
sub
insb
dec
sub
pop
add
test
push
add
jp
add
lret
push
popa
adc
js
push
lcall
xor
add
pop
add
add
dec
cmp
mov
xor
std
sub
adc
add
sbb
cs
adc
mov
mov
popf
lods
pop
data16
testl
orl
inc
mov
scas
push
scas
xor
jge
rcrb
mov
jl
jo
add
cmp
sub
int3
inc
mov
jecxz
dec
jnp
iret
leave
loopne
mov
mov
es
inc
mov
push
dec
adc
insb
jecxz
scas
xlat
push
andb
pop
bound
sarb
mul
or
add
push
shl
xor
xor
mov
popa
loopne
ret
pop
add
add
ljmp
push
lods
in
mov
mov
add
or
lods
fbld
cmp
mov
out
add
ja
add
dec
repnz
pop
xor
lds
mov
mov
pushf
das
aad
shll
dec
imul
push
lds
xchg
or
or
lds
add
push
mov
icebp
cmp
aam
push
rorb
xlat
add
fdivr
incb
pusha
xor
loopne
add
jecxz
add
sahf
in
add
jecxz
rorb
xchg
js
or
cmp
mov
add
in
out
adc
mov
lods
sahf
scas
add
test
inc
lock
and
add
add
add
mov
and
sub
and
jo
xchg
shll
inc
pop
sub
xchg
dec
jle
mov
lret
mov
pop
add
adcl
out
mov
inc
rol
xchg
push
inc
andl
je
stos
popf
movsl
inc
fcoml
adc
stos
in
or
lcall
mov
sbb
xor
repnz
sldt
ja
scas
xlat
jl
sldt
jo
shlb
add
pop
shll
aad
mov
and
add
add
mov
aas
mov
push
outsb
movsl
shl
add
add
xchg
pop
fisttpl
pop
clc
mov
inc
mov
sbb
lret
xor
aaa
stos
mov
inc
out
int
add
jne
out
cmpsb
mov
mov
lea
lds
add
sub
sbb
pop
mov
test
xchg
rclb
fdivrp
mov
inc
add
out
enter
xchg
sbb
push
add
clc
or
decl
mov
add
dec
cmc
add
imul
cwtl
es
mov
sub
push
into
jle
cmp
jecxz
and
pop
es
mov
test
inc
cltd
sbbl
loope
xchg
mov
lods
popa
inc
fistps
popa
aas
or
cmpsl
push
mov
add
sbb
int
popf
jmp
movsl
mov
xlat
push
fildl
add
pop
cmp
dec
pop
daa
jl
xor
mov
out
add
add
add
push
aad
mov
inc
jo
push
in
mov
dec
cs
cmp
movsb
mov
or
out
enter
jp
mov
sub
xor
pusha
jmp
push
in
mov
add
mov
mov
loopne
dec
shl
nop
ror
cmpsb
and
sahf
mov
push
xchg
popa
out
mov
inc
sbb
out
lds
xor
add
dec
daa
and
fcoms
mov
hlt
add
fs
xor
popf
loopne
mov
movsl
mov
push
xchg
js
aas
xchg
xchg
cmp
pop
ret
mov
mov
mov
push
pop
and
dec
push
movsb
lahf
aas
data16
fildl
ret
mov
subl
dec
mov
loope
inc
rcll
mov
push
inc
outsb
cli
mov
fildll
iret
incb
stos
scas
dec
sub
mov
into
fstpt
add
sub
sbb
xchg
repz
add
movsb
pop
add
add
xchg
mov
inc
push
enter
pusha
adc
add
std
push
outsl
int
inc
cltd
or
sub
shlb
xor
add
add
movsb
test
sti
lret
es
pop
inc
pop
popf
mov
rolb
sub
scas
xchg
xor
jmp
sarb
ficoms
pop
dec
cwtl
add
cmpsl
xchg
mov
sti
pusha
lcall
pop
nopl
add
iret
push
cwtl
jge
loopne
xor
jne
or
adc
adcb
cwtl
push
mov
mov
in
or
pop
push
mov
ljmp
add
add
dec
in
dec
sbb
inc
jmp
incl
add
jecxz
jg
sub
cli
insb
mov
test
fwait
mov
sti
mov
push
mov
in
mov
mov
faddp
add
add
jmp
mov
pop
sarl
lcall
popa
push
dec
bound
mov
add
out
add
sbb
push
loopne
add
sub
jp
ljmp
push
hlt
xchg
add
push
sub
add
ss
mov
loope
inc
jl
cmp
xchg
les
mov
enter
mov
mov
and
push
add
add
mov
mov
adc
lcall
mov
add
add
gs
lcall
xchg
jp
xchg
ds
cwtl
xor
mov
repnz
ss
push
mov
mov
insb
xchg
rcll
jb
lcall
lods
out
fs
sub
pop
or
add
xor
out
jnp
icebp
and
int
fcomi
ficompl
lods
js
cli
mov
mov
aad
rol
inc
es
push
push
mov
cs
mov
xchg
mov
fsubs
test
jo
sbb
ret
mov
push
inc
bound
sbb
jge
cmc
push
xchg
jne
data16
cmp
pop
insb
xor
clc
lahf
fs
sbb
jne
cmp
lea
sub
jp
xor
mov
and
mov
int3
add
jnp
and
in
and
adc
mov
dec
aad
stc
stos
or
cld
cmp
add
add
lret
jp
pop
ljmp
push
stos
dec
popf
xor
sub
repz
sub
mov
jle
enter
add
add
add
add
add
push
incl
mov
add
addl
add
sub
adc
xor
or
mov
add
cs
call
loop
push
mov
add
push
push
test
lret
ljmp
push
popf
add
or
adc
mov
cmp
pusha
sub
mov
movsl
pop
in
mov
movb
sbb
xor
add
or
add
sti
test
pop
jnp
shrb
push
lock
cmp
outsl
or
enter
jno
loop
test
xor
mov
insb
adc
es
das
pop
xchg
inc
cmp
fiaddl
jl
test
test
sub
mov
ds
int
xchg
mov
xchg
lret
in
dec
popa
jmp
mov
xorb
loope
and
jecxz
xorb
push
icebp
adc
mov
or
iret
jecxz
inc
out
xor
cmc
out
out
add
mov
inc
fs
adc
and
cmp
sti
pop
mov
movsl
xor
cmp
add
add
jle
mov
stos
adc
xor
ret
inc
add
cmpsb
inc
or
roll
add
inc
push
js
sahf
add
mov
sub
add
roll
xor
add
mov
push
sub
push
pop
daa
push
insb
imul
jbe
in
add
add
inc
jle
jb
cmp
add
add
sbb
aaa
leave
adc
jne
add
lret
mov
jbe
add
push
dec
outsl
mov
repnz
nop
testb
fucomip
mov
pushf
mov
pop
repz
add
add
add
pop
fwait
and
out
push
out
mov
jle
mov
inc
mov
inc
das
adcl
insb
cmp
mov
in
add
inc
cld
dec
mov
jmp
add
fimull
xchg
mov
inc
in
ds
cmp
xor
ficoml
add
aaa
cmp
jae
jae
ja
aas
mov
push
add
sahf
add
cmp
add
dec
mov
pop
mov
aam
clc
ss
jnp
shl
dec
lret
sbb
add
lods
jo
and
ret
dec
mov
push
aaa
pop
jmp
cld
cmc
cs
leave
add
iret
jns
add
pop
jno
add
ss
mov
jp
js
cld
add
loopne
xchg
incb
stos
aaa
inc
and
stc
lds
xchg
int3
ror
push
cmp
stos
cltd
cmp
xlat
clc
loope
clc
pusha
push
movsl
inc
repz
ljmp
pop
lods
dec
inc
cmpsl
aad
dec
mov
rorb
mov
jbe
sti
jg
pop
test
fistpl
add
add
mov
stos
rorl
pop
inc
ret
or
add
add
xlat
dec
dec
xor
sbb
repnz
aam
cmp
mov
mov
xchg
arpl
sti
push
adc
add
add
push
or
repz
inc
add
add
mov
inc
dec
aam
arpl
inc
xchg
hlt
mov
push
sub
sbb
loop
jl
ret
sti
xchg
xchg
sub
sbb
loop
pmaddwd
push
jl
jp
or
mov
add
add
add
pop
adcb
pop
into
adc
add
test
add
add
mov
notl
mov
cld
es
enter
fcmove
es
adc
pop
into
push
xor
in
mov
aam
jl
fiadds
or
dec
mov
outsl
sti
mov
repz
aam
ja
add
in
repz
add
push
loop
mov
add
pop
add
add
hlt
jae
scas
in
insb
push
dec
ret
in
test
add
fnstenv
data16
add
mov
fsubrs
fsubl
add
ds
lcall
xor
popa
das
dec
sarl
pop
sbb
mov
or
ljmp
pop
cli
add
cmp
jo
les
mov
into
in
sti
popa
pop
xchg
add
mov
or
mov
mov
jl
jmp
jno
mov
out
stos
fsubrl
or
into
add
dec
stc
add
pusha
add
pop
arpl
mov
cld
aad
adc
add
xchg
push
add
mov
fimull
push
stos
and
mov
inc
mov
mov
fidivl
les
mov
fadds
clc
dec
push
bound
lds
lock
xchg
fisttpll
inc
jmp
add
xchg
inc
imul
jo
fistl
roll
push
jns
movb
pop
dec
add
pop
imul
pop
push
mov
push
jg
lock
lock
lcall
pop
fimull
jle
mov
push
jg
imul
js
ds
fwait
aam
inc
xchg
nop
or
lahf
xor
dec
adc
loop
or
adc
push
add
dec
into
mov
je
fwait
cmp
sub
and
add
lods
or
inc
inc
stos
mov
xchg
into
adcl
sbb
mov
jno
push
aad
add
scas
divb
sbb
cwtl
jne
fsubr
outsl
aad
sub
imul
add
js
leave
push
jmp
or
mov
cmp
repnz
adc
insb
cmp
jnp
fldt
mov
add
mov
filds
xchg
bound
sub
jns
inc
and
imul
sub
js
pop
xor
shll
out
aad
aaa
cmp
add
lea
sub
dec
add
xchg
and
iret
cmp
int
stc
add
fs
mov
outsl
add
lods
and
mov
movsl
xchg
sub
ds
out
mov
xchg
xor
rcl
cli
xorb
sbb
lahf
inc
sbb
mov
cli
pusha
add
add
out
xchg
fcomps
add
cmpsb
push
out
add
scas
add
outsb
add
cmp
jbe
ret
push
cmp
cmp
cmpsl
lahf
int
roll
mov
loop
xor
xor
scas
neg
ret
bnd
data16
mov
xor
arpl
adc
mov
sbb
mov
arpl
jge
add
ljmp
cmp
add
adc
flds
push
pop
call
inc
enter
mov
adc
add
inc
nop
jns
movsb
js
stos
xchg
in
addb
dec
fldcw
push
inc
roll
divl
push
rolb
jns
add
xchg
gs
adc
push
sbb
in
dec
add
adc
add
nop
push
add
add
lods
cmpsl
repnz
add
es
ret
sub
cmp
mov
lahf
push
add
decb
andb
adc
add
jno
or
add
cltd
inc
inc
insl
test
mov
cmp
and
pop
fidivrl
push
stc
testb
push
imul
xchg
add
add
push
enter
add
cmp
jp
repz
bnd
add
roll
cmc
stos
sub
flds
add
sub
adc
add
popf
and
fs
loopne
add
in
pop
add
stos
popf
cmc
ja
xchg
push
popa
insl
xor
xor
mov
lods
pop
fstp
push
in
add
cs
paddsw
mov
jge
lcall
and
mov
imul
cmpsb
shlb
cmp
add
jmp
clc
adc
add
dec
rolw
push
insl
pushf
push
test
add
cmc
or
add
mov
add
add
cmp
jo
nop
xchg
enter
add
sarl
push
out
faddl
add
mov
inc
aam
imul
jl
icebp
cmp
jmp
lret
push
cli
cmp
add
xchg
add
sarl
lret
mov
mov
add
add
cmp
das
enter
mov
sub
insl
add
in
rcll
xor
push
sahf
xchg
cmp
push
add
js
push
dec
out
sub
mov
add
cmp
or
push
push
add
movsb
aad
dec
clc
fsubrs
adc
cwtl
jns
sub
cmpsb
in
sbb
outsb
pop
aad
and
roll
add
ds
outsb
mov
sbb
add
sub
dec
and
mov
cwtl
sbb
inc
das
add
xor
add
cli
repz
pop
movb
add
into
xchg
add
add
cmpl
insl
cwtd
add
jle
dec
mov
xchg
add
jnp
or
or
scas
xlat
cmp
mov
clc
add
add
enter
movsb
scas
les
xor
mov
add
inc
inc
or
cmc
and
mov
or
insb
je
or
divl
add
lock
xchg
dec
subb
arpl
adc
shrl
out
mov
push
cmp
cmp
sub
mull
test
scas
add
or
xlat
das
add
mov
repz
inc
add
lea
pop
lea
fldt
data16
icebp
mov
xor
sub
xor
push
adc
lods
addr16
loope
das
sub
repnz
lahf
into
scas
mov
pop
add
adc
into
add
dec
int3
push
cmp
sarb
xchg
add
mov
or
add
repnz
sbb
xor
pusha
xchg
push
lea
add
out
fldcw
or
jmp
insl
mov
xor
loopne
int3
xchg
jne
out
sub
xlat
dec
mov
cwtl
lock
lods
add
lods
testl
fwait
push
or
add
js
dec
fwait
sbb
mov
lret
pop
mov
add
push
mov
push
rolb
xchg
in
adc
iret
push
or
pop
inc
cmpsl
xchg
mov
lock
into
jle
ss
ds
adc
call
add
dec
fisttps
add
jae
add
mov
pushf
sti
inc
movsb
add
cmp
jle
in
mov
test
cmpsl
arpl
mov
mov
add
test
out
add
mov
jecxz
js
scas
imul
mov
xor
push
dec
jmp
test
dec
test
daa
mov
jnp
sbb
arpl
mov
add
int
pop
adc
aas
outsl
mov
in
data16
ljmp
add
les
mov
pop
mov
jns
mov
add
lcall
loope
icebp
decl
add
add
lret
fs
sti
repz
call
mov
ss
pop
icebp
mov
enter
imul
rcrb
or
cmp
cld
add
cmp
addr16
sbb
rcrl
ljmp
dec
xlat
xor
and
add
sbb
imull
xchg
push
in
sahf
sarb
mov
lcall
dec
in
mov
cs
call
jl
add
cmp
add
dec
push
cmp
mov
out
push
sbb
incl
imul
inc
jbe
outsb
movb
out
js
mov
or
add
lret
lret
cmp
push
test
outsl
lret
cli
test
in
and
add
cmp
arpl
add
or
stos
mov
pop
stc
test
fiadds
add
ret
sub
les
cmp
add
loopne
mov
adc
jecxz
mov
jmp
push
je
xor
lret
dec
popf
add
lahf
fidivs
add
jno
mov
std
faddl
ds
dec
roll
add
mov
imul
add
inc
outsl
jb
lcall
mov
cmp
sbb
out
mov
xor
aad
xor
out
mov
in
xorl
lret
test
out
mov
add
shl
push
jg
fdivs
add
add
add
ret
sub
add
out
mov
ljmp
adc
cwtl
repz
inc
call
xlat
cmp
fdivrl
fcoml
int
mov
dec
mov
jge
push
adc
stos
ja
adc
add
jns
add
imul
add
shll
movsb
push
pop
test
iret
jne
popf
das
sub
add
and
fiadds
add
add
dec
hlt
loope
jge
xchg
cmp
pop
cltd
inc
lods
daa
sti
add
rolb
std
imul
mov
xchg
lock
ret
mov
add
add
add
add
xchg
hlt
push
cli
xchg
add
add
pop
xor
sbb
lcall
add
stos
xorl
add
add
sbb
sti
sbb
ret
xor
add
fs
adc
cmp
cs
mov
push
xchg
pop
lods
jl
mov
push
xchg
jno
add
call
lods
lahf
add
add
pusha
pop
mov
add
adc
xor
and
lods
sti
xor
ja
push
sub
mov
pop
cmp
pop
add
mov
nop
out
sbb
ret
push
dec
repz
rolb
add
xor
mov
sarl
jno
mov
sub
dec
jmp
fcmovbe
add
dec
iret
mov
cwtl
mov
adc
inc
lahf
fmul
dec
add
ret
inc
jmp
add
lret
cwtl
mov
iret
repz
das
add
pop
mov
or
fistpl
mov
js
mov
dec
shlb
ss
shll
add
scas
pop
sti
loop
jmp
xor
add
cmpsb
std
inc
lock
das
rdmsr
test
xor
push
jmp
int
iret
aas
mov
or
cs
inc
lcall
lahf
dec
mov
pop
div
lahf
xchg
inc
push
dec
ret
dec
add
and
add
add
scas
in
mov
ffree
int3
out
cmp
sarl
mov
jle
mov
mov
dec
int
ss
dec
add
add
sbb
mov
mov
cmp
adc
mov
add
sub
push
jle
into
cltd
sub
xor
add
or
xchg
mov
push
movsb
dec
shll
mov
sahf
mov
add
in
std
lea
call
ss
aas
mov
pop
push
jl
lea
xchg
shll
jmp
mov
fldcw
insb
mov
xor
jns
or
add
repz
iret
loopne
arpl
push
in
pop
sub
xor
xchg
add
add
mov
decb
push
add
jo
cmpsl
adc
cmp
pop
fdivs
dec
mov
loopne
mov
push
nop
push
fwait
mov
sub
jb
loope
fadd
mov
jae
rolb
jle
and
mov
add
addr16
fnstenv
or
mov
out
jg
push
cmp
mov
movsb
xor
lods
std
aad
stos
aad
xor
mov
inc
dec
fcoml
mov
push
lock
jbe
pop
pop
shlb
cwtl
popf
jnp
xlat
jnp
sahf
shll
cmp
sub
gs
adc
shll
push
out
xor
lret
mov
insl
mov
mov
pop
jne
jbe
jb
call
sbb
jns
and
push
rcl
ja
adc
ret
mov
sub
add
lahf
ljmp
test
stc
and
lods
fisttpl
jecxz
add
jge
fisttpl
inc
rcr
nop
pop
inc
jecxz
testl
les
add
push
ljmp
rep
call
mov
call
mov
dec
pop
jle
xor
into
mov
dec
xor
add
add
jg
sbb
mov
test
xor
jg
fadds
mov
aad
or
jnp
fcomip
adc
pop
mov
add
mov
jnp
cmc
add
jo
mov
xlat
add
add
div
mov
inc
push
add
cwtl
push
shr
push
aaa
jb
inc
scas
adc
add
aam
inc
sub
mov
aad
addr16
fidivs
xlat
lret
out
inc
push
loope
jge
mov
cmpsl
adc
aam
out
icebp
test
aas
movsl
add
add
add
lret
bswap
std
lcall
sub
push
mov
aad
xchg
and
sub
repz
xor
ds
add
pop
jp
sbb
add
ret
sti
mov
cmp
xlat
sub
add
cld
jmp
outsb
cmpsl
outsl
cmc
add
mov
testl
lds
xor
dec
lret
mulb
ja
pop
mov
popf
pusha
lock
push
inc
test
or
add
cld
mov
cmp
scas
add
add
int
push
jns
stos
in
pop
jp
cmp
jp
js
lods
loope
js
pusha
mov
adc
push
iret
push
leave
fwait
sub
mov
xor
pop
pop
ror
cmc
inc
add
add
fisubl
inc
lahf
out
add
add
int
in
data16
inc
sbb
xchg
int3
push
aaa
jle
or
in
leave
lods
aad
sti
or
scas
dec
addb
and
push
addl
insb
cs
mov
mov
mov
in
adc
sub
enter
cmpsb
or
out
add
jecxz
cli
popf
inc
ss
cltd
push
push
adc
sub
mov
mov
mov
add
add
lcall
or
mov
sub
lods
imulb
push
jbe
sub
out
inc
sbb
mov
mov
inc
in
popf
aad
push
mov
push
cs
push
and
mov
dec
add
cmp
dec
add
cmp
mov
outsl
mov
push
inc
les
call
and
inc
mov
xor
add
cwtl
mov
push
cmp
pop
test
xchg
out
push
fsubrs
int
mov
push
mov
testb
mov
repnz
data16
sub
leave
cmp
dec
and
add
and
and
pop
add
popf
inc
test
ja
dec
jb
test
add
or
mov
lahf
mov
loopne
add
sub
sub
paddd
popa
lock
sbb
mov
inc
push
out
fwait
or
cmp
dec
in
or
cmp
sbb
mov
mov
push
cmc
ds
add
add
subl
mov
into
aaa
sub
add
jge
pop
jmp
insl
inc
xchg
ljmp
cmc
cmp
push
lcall
mov
je,pt
repz
cs
or
bound
subl
in
repnz
add
mov
fildl
int
mov
mov
add
or
lea
outsb
adc
add
jno
imul
in
pop
mull
push
ja
icebp
in
in
inc
xor
pop
mov
adc
cmp
cld
movsb
mov
shll
or
sbb
xlat
mov
add
jg
or
cmp
dec
int3
pop
push
mov
add
add
es
rolb
mov
mov
fwait
nop
hlt
cs
lea
mov
aam
mov
loopne
push
add
add
divps
ja
lods
icebp
mov
or
push
in
mov
dec
jbe
jle
adc
sub
xor
icebp
add
fnstenv
sub
inc
adc
out
xlat
sub
xor
lcall
in
add
add
stos
cmp
pop
inc
inc
sbb
jl
adc
add
cli
or
outsb
add
push
stos
jecxz
dec
aad
mov
pop
ja
ret
daa
pop
test
into
mov
pop
xor
add
out
pop
or
fdivp
mov
jno
adc
pop
mov
pop
add
add
or
ljmp
cli
cltd
test
adc
adc
push
loopne
aaa
jb
lds
sbb
iret
dec
shl
mov
shlb
loope
xchg
daa
push
sbb
leave
jg
or
outsb
inc
pop
test
add
mov
mov
scas
jecxz
xchg
sahf
fcomip
clc
pop
sub
inc
icebp
cmp
sub
lret
inc
inc
idiv
stc
in
lcall
iret
sub
xchg
pushf
add
push
ja
iretw
movsl
adc
out
pop
sbb
enter
xor
ret
push
mov
lret
into
negl
pop
xor
clc
mov
xchg
cmp
aas
enter
cmp
jp
in
or
out
js
mov
mov
cmp
stos
orb
out
adc
sti
or
movsl
add
xor
stos
add
sub
fildl
mov
pop
add
xor
std
int
push
lcall
add
enter
add
sti
add
add
inc
adc
lret
inc
push
data16
mov
pusha
out
aam
lret
scas
arpl
add
call
bound
cmp
add
add
cmp
out
fsts
iret
movsl
add
xor
pop
movsb
test
add
outsb
push
sub
add
cmp
nop
and
mov
add
movsb
test
add
add
add
in
adc
cmpb
add
sub
das
xchg
jnp
jle
inc
inc
imul
fisttpll
sbb
xchg
mov
lods
pop
test
jle
push
xor
out
push
xor
inc
sbb
lods
test
add
add
mov
in
add
cmp
add
jmp
add
mov
mov
cmp
bound
jg
inc
mov
jge
mov
push
ret
rcrb
pop
cld
cli
mov
in
sbb
cltd
inc
repnz
add
add
mov
jle
xchg
xchg
mov
fcomps
mov
aad
dec
cmpsl
xlat
outsl
mov
fisubrl
subb
add
add
hlt
xchg
xchg
shrl
inc
dec
cs
gs
and
jl
mov
add
rcll
test
xor
inc
test
fs
faddl
fldt
mov
std
pop
xor
sub
insl
sahf
pop
dec
nop
or
movsb
jp
int3
adc
cmp
push
js
sbb
and
jae
ds
shl
rclb
pop
mov
mov
mov
shlb
ljmp
out
and
fwait
orb
mov
inc
test
push
lcall
stc
je
push
movb
add
jmp
fiaddl
lcall
add
pop
mov
mov
lock
loop
jae
push
faddp
mov
outsb
sahf
jl
sub
arpl
dec
mov
out
stos
or
mov
cmp
add
add
lods
jecxz
xchg
jno
dec
out
lock
jb
rolb
mov
cmp
sbb
jbe
cmp
xchg
aaa
fs
sub
inc
mov
sti
inc
inc
push
add
xorl
add
jmp
cmp
push
mov
cmp
add
add
sbb
push
lods
imul
in
add
movsb
push
repz
fucomi
sub
int3
les
aad
add
rcr
pop
push
jae
add
add
pop
sbb
pop
int3
icebp
or
in
add
add
rcll
sti
or
push
jns
add
xor
ds
in
jne
add
pop
add
fnstsw
add
cli
add
aas
ret
xor
mov
popf
or
xor
dec
and
xchg
add
add
in
xchg
clc
addb
mov
dec
loopne
xor
gs
subb
add
add
inc
roll
dec
aaa
sarb
pop
add
cmp
or
jnp
push
iret
faddl
imul
fmul
add
pop
nop
lret
fsub
or
add
leave
and
scas
cltd
add
add
out
lds
imul
inc
loope
mov
push
scas
lods
nop
xor
inc
rolb
mul
jne
mov
sbb
fadd
flds
add
insl
ret
stos
mov
pusha
sub
mov
add
in
jno
add
add
cltd
sub
xchg
mov
and
imul
dec
dec
xor
and
fs
add
fadds
sahf
cmp
add
mov
cmp
xor
and
jo
add
sarb
inc
add
lods
daa
lods
lcall
movsl
lock
cmp
ret
push
inc
jge
add
jo
pushf
cltd
imul
iret
cmp
mov
cmp
pop
frstor
loop
push
fistpl
lods
out
jbe
xlat
sahf
mov
dec
test
repz
fldt
dec
sub
xlat
clc
js
icebp
shrl
loopne
add
cmp
inc
mov
or
imul
lret
nop
test
int3
imul
xchg
out
aaa
es
add
lea
subl
add
adc
mov
divb
in
test
movsl
subb
nop
out
addr16
movsl
add
imull
mov
sti
or
add
add
sarl
in
mov
jb
push
or
add
jnp
in
mulps
add
test
outsl
cltd
addr16
lahf
movsb
mov
mov
mov
cli
cwtl
sti
sbb
and
into
xchg
or
add
xchg
jne
add
ret
add
fwait
movl
scas
inc
or
int
aaa
xchg
jmp
dec
cltd
mov
inc
mov
jb
lds
inc
fucomip
mov
into
xlat
popa
mov
jo
sti
push
mov
sbb
outsb
ret
mov
ljmp
add
arpl
xchg
addr16
or
xlat
test
mov
es
dec
inc
std
ss
cmpsl
xor
lock
sub
add
add
jge
insl
push
rcrb
jle
add
mull
xor
push
stos
mov
adc
push
and
mov
test
and
js
inc
arpl
jnp
insb
fstpt
test
mov
add
add
xchg
sub
jge
aam
lds
lods
cmpsl
inc
imul
mov
test
pop
xchg
or
adc
add
mov
aam
js
pop
fcompl
add
add
adc
filds
add
and
rcr
mov
ja
incb
xabort
cwtl
pop
xchg
adc
sub
sub
dec
push
lahf
js
jl
add
lcall
mov
mov
sub
rorb
cmp
idivb
pop
fldt
fildl
add
mov
mov
nop
pop
movsl
dec
mov
imul
lret
into
mov
mov
out
push
sub
cmpsl
and
cmpsb
xchg
mov
gs
iret
roll
add
lea
mov
xchg
mov
jbe
shl
push
cmp
jb
ss
int3
add
inc
and
add
push
jno
mov
rolb
scas
xchg
insl
movsb
test
jo
or
mov
and
add
sahf
mov
dec
mov
jge
sub
sbb
orl
out
jmp
mov
add
add
repnz
push
add
es
lcall
push
fiaddl
test
out
xor
push
gs
cmp
push
in
dec
mov
mov
xor
sahf
add
jne
cwtl
sbb
mov
aaa
arpl
sub
pop
jnp
jl
xchg
jge
mov
in
fwait
sbb
sub
cmp
add
lock
or
movsl
pop
loope
cmp
imul
out
mov
add
cmp
add
xor
pop
mov
or
mov
add
add
ja
arpl
add
add
int
jecxz
es
mov
add
out
roll
xchg
mov
movsl
sbb
mov
xor
ds
add
pop
xor
sbb
add
jmp
dec
jne
push
enter
mov
pop
add
ljmp
jae
movsb
mov
loop
sub
scas
andl
mov
add
addb
or
xor
fadds
xchg
arpl
mov
jge
fld
mov
pop
push
pusha
jb
rclb
mov
test
add
add
jge
repz
out
jl
mull
pusha
repz
add
popa
add
add
scas
xor
add
lock
cld
xchg
inc
xchg
add
sahf
jmp
cmpsl
xchg
fildl
fiadds
add
sbb
mov
lods
inc
xchg
cmp
add
loop
add
or
xchg
push
cli
cmp
add
add
inc
pop
jecxz
jbe
out
add
fcmovu
pop
push
sbb
cmp
add
pusha
sub
add
loopne
xorl
xor
test
add
inc
add
and
or
add
add
mov
inc
daa
gs
mov
mov
xchg
sbb
or
fists
imul
mov
or
add
mov
scas
mov
xlat
lcall
push
out
mov
push
inc
add
add
or
loope
ja
cwtl
outsl
std
add
add
add
mov
pusha
add
or
fdivrs
add
add
call
mov
pop
add
enter
and
stc
jmp
incb
add
ss
pop
scas
pop
stos
jg
xchg
jge
xor
ss
dec
add
add
shlb
mov
rcrb
lret
sbb
cli
movsb
jb
not
xor
cmp
cmp
add
mov
jb
sbb
imul
xor
dec
add
add
repnz
ss
out
add
push
add
push
add
add
arpl
cmp
xchg
enter
test
xor
pop
mov
or
cwtl
push
add
mov
imul
jmp
daa
std
in
add
add
into
jp
aas
sub
lcall
lods
xlat
xor
in
outsb
add
add
int3
lods
xor
pop
add
sub
mov
xchg
add
ret
fldl
add
xchg
bnd
push
jo
add
cmp
add
divl
cmpsb
xchg
test
ret
fs
scas
addb
xor
sub
cmp
arpl
mov
pop
out
dec
and
jp
add
add
jp
xor
cltd
std
aam
inc
sahf
jl
add
add
mov
sbb
mov
ds
add
cltd
addb
and
bound
ss
adc
call
xchg
add
ss
add
pop
out
fmull
add
add
sbb
add
sub
fucom
lahf
inc
outsl
xor
repnz
mov
pop
loopne
and
xor
shl
nop
lea
scas
mov
popa
mov
test
add
stos
push
xchg
bts
movsl
mov
dec
push
cmovae
aam
adc
mov
jnp
or
aam
mov
push
xor
add
imul
xchg
std
into
mov
pop
push
add
add
aad
mov
adc
repnz
push
cvtpi2ps
int3
inc
mov
out
testl
sub
and
pop
inc
sbb
ficompl
jb
out
mov
mov
add
jecxz
or
scas
inc
jns
jle
push
push
xor
clc
leave
ret
cli
add
cmp
repnz
repnz
bsr
add
pushf
mov
xchg
adc
fistpll
add
movsl
into
sbb
add
add
pop
mov
or
pop
pop
push
cmp
xchg
push
adc
xlat
iret
mov
stos
repnz
mov
mov
or
in
daa
js
pop
mov
lods
push
add
add
mov
add
inc
sbb
add
add
add
add
adc
inc
or
jge
stos
mov
sbb
sub
mov
inc
dec
clc
pop
dec
flds
mov
mov
add
xchg
nop
jnp
scas
xor
add
add
movsl
movsb
mov
sahf
or
rclb
hlt
pcmpeqw
std
lea
jnp
aad
dec
mov
sbb
daa
mov
shr
cmc
xchg
mov
add
add
cmpsl
jae
les
mulb
sbb
int3
jl
pop
das
mov
cli
loopne
jns
dec
loopne
add
pusha
inc
pushf
xchg
gs
push
mov
add
add
lcall
pop
gs
pop
jno
andb
adc
pop
dec
add
add
bnd
es
and
fmuls
inc
les
mov
add
fldt
xor
mov
add
pusha
in
movsb
or
add
jge
repnz
xchg
fldt
xchg
movsb
inc
xchg
xor
push
add
mov
mov
xorl
mov
fwait
add
push
addb
add
data16
push
inc
je
and
jl
add
add
push
outsl
sbb
fadd
outsb
adc
jge
lret
pop
dec
xchg
icebp
pop
sub
add
adc
adc
xlat
out
pushf
cmc
lret
scas
sbb
sbb
mov
pop
insl
cltd
outsb
dec
out
fisttps
mov
ss
pushf
pop
aas
shlb
je
cmpb
es
jge
in
push
lcall
sbb
cli
push
in
adc
add
xor
lds
addr16
sub
out
adc
ret
xchg
cmp
pop
jg
mov
sub
mov
aam
and
test
movsl
je
add
lcall
mov
outsl
call
add
lock
sbb
and
cli
loop
or
add
rcl
add
add
ror
insl
pusha
lds
pop
lret
fisubl
dec
loopne
cmpsb
pop
insl
lea
mov
xchg
push
jbe
add
add
add
jno
dec
lahf
xchg
es
pop
add
add
add
mov
mov
mov
mov
loope
pop
cmp
add
pop
mov
add
cmp
jge
add
push
nop
stos
add
pop
inc
pop
imul
lahf
sti
xor
sub
mov
iret
mov
xlat
mov
enter
xchg
aad
mov
leave
inc
push
iret
xor
call
adc
cmp
aam
and
dec
add
aad
lea
mov
flds
or
add
fdiv
adc
or
sbb
lret
mov
fimuls
ss
in
dec
mov
pushf
je
add
daa
lea
stos
std
xchg
mov
add
sahf
stc
inc
and
push
xorl
push
cmp
mov
jmp
call
jbe
mov
adc
or
add
imul
and
push
xchg
sub
mov
std
inc
adc
lcall
push
outsl
das
ret
mov
jge
sub
sbb
jecxz
sti
lahf
repz
mov
and
sub
inc
add
popa
ret
testb
movsl
jnp
fs
xor
stc
xor
cld
andb
cs
xrelease
stos
pop
sarl
push
xor
or
lds
add
xor
add
cli
add
gs
cltd
add
mov
xor
mov
add
add
add
sub
add
inc
gs
pop
mov
push
xlat
inc
mov
sbb
lret
pop
mov
addl
aad
add
mov
add
pop
repnz
aas
fdivs
fst
push
test
rolb
or
fwait
mov
add
cmp
or
jno
add
addr16
jo
das
out
in
jle
mov
jmp
push
mov
add
adc
sbb
mov
aad
sub
sahf
cmpsb
add
add
jg
ljmp
adc
jb
int
movl
xchg
pusha
dec
in
ds
xlat
cmc
inc
stos
imul
mov
inc
shr
sub
fdivrp
stc
mov
add
pop
adc
adc
les
add
add
ret
sbb
add
pusha
psubusw
add
add
dec
inc
imul
or
add
test
xlat
cmp
add
in
sub
dec
add
xchg
sub
jmp
aas
lods
out
sub
push
cwtl
fwait
pop
loop
test
ljmp
and
cmpsl
enter
mov
lahf
or
adc
add
jno
mov
cld
flds
and
lock
data16
add
sti
xchg
sub
std
cmc
out
add
testb
jbe
dec
mov
shrl
cld
inc
iret
xchg
das
fwait
mov
xchg
imul
and
lret
cmpl
bound
add
dec
aam
call
sbb
out
cmp
mov
mov
ja
or
mov
ljmp
add
sub
xchg
popa
addr16
dec
xor
dec
shl
add
dec
xor
sub
int3
mov
clc
int
jp
ficoms
mov
filds
lret
cmc
test
scas
jae
aaa
sbb
sub
dec
ljmp
mov
test
dec
dec
sahf
addb
sub
pusha
movsl
das
cld
add
das
cmpsb
push
lds
add
add
mov
jge
dec
jge
shlb
mov
push
and
add
inc
in
pop
rcl
lret
lea
add
adc
jne,pt
pop
mov
outsb
jno
bound
addr16
xlat
cld
ret
mov
push
and
xor
ret
lcall
add
xchg
fdivr
push
in
adc
pop
sbb
add
xor
mov
pusha
mov
and
add
es
push
arpl
add
xor
add
fcmovb
add
dec
add
loop
push
mov
jge
inc
andl
mov
mov
sub
andl
ja
rcll
inc
mov
jbe
iret
and
clc
inc
arpl
sub
push
inc
mov
ds
pop
dec
xor
psubusw
xor
jns
and
cmc
mov
aas
int3
xchg
aas
dec
pop
xor
cmc
mov
sub
adc
push
cmpsl
push
ret
mov
lds
cmp
cli
jle
xchg
add
sub
jno
adc
in
insb
xchg
jge
aam
leave
les
xchg
pop
cs
shlb
psubb
mov
xchg
pushf
leave
sbb
mov
or
sub
hlt
mov
push
dec
out
push
shlb
mov
mov
outsb
add
cs
push
rolb
mov
inc
and
repz
js
or
add
leave
push
mov
push
push
leave
pop
mov
jecxz
pop
cmp
or
int3
inc
mov
clc
les
in
sbb
adc
dec
aad
fs
inc
or
and
push
add
std
aaa
inc
fsubrs
in
add
je
mov
add
lock
movb
xchg
or
add
imul
into
mov
cmpsl
mov
xchg
outsb
jae
jmp
adc
mov
add
or
add
mov
loope
add
mov
adc
sub
repnz
pop
sub
sub
add
cmpsl
addl
daa
pop
aad
js
addb
jmp
cmp
xchg
xchg
or
addr16
pop
aad
sub
inc
into
fistpll
pusha
add
jmp
and
dec
xchg
xlat
int
sti
add
icebp
aas
add
adc
or
add
push
add
xchg
jo
add
add
ret
and
sub
push
pop
ficompl
scas
arpl
add
pop
cmp
xor
arpl
je
outsb
pushf
icebp
push
lret
and
outsb
shlb
icebp
jnp
mov
icebp
inc
lcall
dec
lds
fisttpll
sub
and
mov
xchg
add
add
nop
cli
jge
add
out
imul
and
add
outsl
add
scas
lahf
pop
push
mov
stos
sub
outsb
cmp
js
mov
jmp
fisubrl
sbb
xor
cmpsb
add
xor
adc
in
ret
and
mov
or
inc
stos
movsl
xchg
add
push
cli
or
js
mov
mov
das
jmp
add
and
lods
jl
pop
xlat
int3
xor
es
es
mov
inc
xchg
push
daa
xchg
popf
leave
adc
mov
movsl
pop
test
xor
push
pop
pop
repnz
add
out
mov
mov
or
xchg
dec
mov
mov
inc
pusha
jg
fwait
mov
pop
jge
jecxz
or
or
mov
push
je
jecxz
jl
cli
or
scas
cmp
jns
xchg
pop
jg
mov
push
std
add
pop
adcl
add
add
sub
nop
adc
in
dec
lret
add
sbb
pop
in
sbb
pop
mov
and
sti
push
xorb
imul
mov
ds
js
xchg
popa
add
add
setg
sahf
mov
jo
cmp
add
push
add
add
and
scas
cmp
mov
push
mov
jnp
js
pop
nopl
sub
mov
inc
add
aam
add
popa
ss
add
outsl
pop
out
add
data16
jmp
pop
out
cmp
mov
rorl
pop
jnp
popa
or
add
loope
dec
icebp
ret
cmp
xor
aas
add
test
mov
push
dec
data16
mov
add
sbb
sar
daa
repz
popf
add
cmp
jg
loopne
xlat
add
nop
std
fildl
cmc
xchg
fsubs
addb
add
mov
sldt
shr
ret
loop
aad
sti
orl
hlt
xchg
sbb
test
scas
dec
dec
punpckhwd
add
scas
sbb
js
jns
scas
dec
addl
inc
popa
dec
mov
and
mov
push
add
pop
mov
jg
mov
jle
cmp
mov
push
xor
push
push
sbb
decl
leave
push
inc
jae
sub
jmp
nop
sbb
jg,pt
movsb
xor
xor
jmp
adc
fistps
sub
movsb
dec
fiadds
or
ret
stos
cmp
fadd
xchg
adc
enter
insb
inc
mov
add
cmpsb
loope
out
jbe
dec
cmp
stos
xchg
mov
add
ljmp
mov
dec
mov
shlb
pop
mov
into
adc
jge
cmp
add
fistpl
lock
add
pop
js
mov
push
je
jecxz
lock
ja
jle
lret
je
add
fsubl
imul
lret
jae
jmp
xchg
divb
and
ss
data16
cmc
fldl
inc
sub
outsb
mov
jne
mov
add
popa
gs
fistpll
ds
sarl
hlt
test
pop
add
int3
cld
lahf
ret
adc
jae
popf
push
push
inc
sub
or
add
xlat
jno
sub
adc
lds
stc
sub
loope
xchg
cli
stos
fmul
jb
fxch
mov
mov
mov
add
push
int
jg
jl
or
jl
shrb
add
into
xchg
sub
pop
add
mov
add
inc
push
add
inc
pop
push
ljmp
add
es
test
sub
imul
and
push
mov
movaps
pop
add
ja
mov
aam
or
loopne
roll
add
pop
mov
popa
push
push
leave
add
add
add
sahf
std
add
sub
xchg
add
add
inc
dec
hlt
pushw
or
sahf
add
and
dec
add
add
cli
out
in
inc
push
pop
dec
push
gs
sub
add
add
add
add
sbb
into
js
lret
pusha
iret
adc
add
rcll
cli
mov
add
leave
daa
inc
jae
dec
call
hlt
add
test
fisubs
and
xor
testl
pop
pop
dec
insb
fmull
mov
sub
lret
and
mov
add
outsl
add
flds
rcll
xchg
xchg
fisttpl
adc
in
inc
fst
add
in
or
jae
stos
fs
mov
test
add
push
xchg
pop
mov
popf
jnp
in
add
pop
jae
mov
add
and
sub
add
add
jl
fdivrs
inc
add
inc
gs
push
pop
add
add
mov
mov
stos
outsl
sbb
std
adc
mov
add
pusha
mov
dec
int
jo
cmp
scas
pop
dec
add
sub
test
mov
jae
nop
push
pusha
scas
mov
pop
fsubr
testl
das
and
jne
xchg
add
add
call
adc
sbb
mov
mov
add
cmp
push
test
mov
add
add
out
insl
mov
adc
popf
aaa
lds
out
add
iret
in
add
dec
jns
sahf
adc
xchg
jo
repz
mov
add
inc
lret
ret
add
cs
mov
or
sub
loopne
fildl
add
mov
push
add
pop
mov
add
pop
add
sub
je
stos
sbb
stos
rol
dec
out
add
data16
popf
loopne
cld
mov
arpl
movsl
lods
jge
popf
ss
bound
stos
push
mov
fcompl
add
jl
jno
sahf
jo
movsb
in
insb
sbb
nop
sub
xor
cmpb
out
mov
inc
fs
or
or
add
imul
push
push
add
xor
lahf
stos
incl
and
mov
mov
push
popa
ret
mov
inc
cmp
insl
ja
xor
cmovo
add
xor
jge
add
add
ret
inc
clc
aaa
cmc
loopne
add
add
ret
js
add
mov
jl
mov
bswap
loop
push
pop
nop
add
cmp
and
sahf
shrb
mov
je
cmp
cmpsl
or
xchg
stc
dec
xor
rcll
aad
ljmp
pop
es
mov
add
xor
push
sub
imul
aad
fdivl
or
and
pusha
aas
add
cwtl
sub
pop
add
xor
dec
ljmp
dec
adc
bound
sbbl
fldenv
divl
dec
int
sbb
dec
xor
test
sbb
cltd
inc
inc
xchg
rcl
add
cmc
inc
xchg
jp
or
and
pop
sbb
and
je
inc
or
sahf
and
lods
add
int
mov
or
add
inc
push
add
fs
lcall
jmp
cmp
adc
popa
pop
sbb
rolb
aad
mov
sbb
jns
jge
sbb
hlt
lea
mov
dec
adc
fistpll
or
jno
shrl
test
out
or
add
insb
dec
add
insb
imul
mov
xchg
sub
ss
daa
adc
sub
add
hlt
xchg
mov
aad
jns
call
xchg
fldl
insb
mov
add
add
add
add
xor
add
jno
or
leave
scas
xchg
icebp
jp
add
inc
loop
add
add
dec
aam
adc
jg
jp
mov
add
add
sbb
pop
jmp
mov
dec
add
outsb
push
je
xor
add
dec
loop
sub
sbb
add
xchg
js
enter
int
fisubl
shll
rcrb
scas
cs
fiaddl
pop
jmp
jbe
mov
sub
movsl
in
xor
fistpll
fwait
sub
mov
add
add
mov
add
leave
sub
add
add
mov
or
sub
add
sub
test
push
or
out
add
add
dec
ret
data16
mov
aam
sub
or
loopne
fcoms
adc
xor
sub
nop
xchg
shrb
add
verr
daa
xor
int
mov
jbe
or
test
xchg
mov
inc
mov
jle
loope,pt
add
mov
add
adc
push
mov
mov
mov
add
add
enter
jnp
mov
adc
int3
mov
jae
pop
pop
cmp
add
xchg
cmp
popl
adc
pop
les
sbb
add
adc
inc
xchg
fidivs
cmp
jle
mov
adc
add
pop
outsb
into
add
adc
xor
sub
xlat
adc
cmc
pminub
jecxz
lods
jae
leave
push
stos
in
mov
je
out
mov
add
sub
sub
stos
jno
inc
add
dec
mov
mov
push
int
xchg
rorb
cmc
adc
loope
add
aaa
icebp
shll
xchg
push
mov
inc
clc
add
add
add
xchg
push
bound
xor
add
push
inc
or
jbe
add
add
add
cmp
jecxz
push
jp
gs
in
cmp
sldt
add
cli
mov
push
movsl
cmp
pop
pop
sbb
jne
pop
jecxz
mov
fisttps
mov
add
add
xchg
mov
add
add
push
or
pop
pushf
insb
or
sub
add
inc
ds
dec
mov
jnp
mov
jp
fs
cmp
cwtl
les
or
push
and
jnp
cltd
movsl
aam
stos
test
jmp
xor
in
jge
inc
push
movsl
inc
xor
pop
lret
inc
std
out
out
cmp
aad
xor
out
mov
mov
sti
mov
into
lods
mov
dec
in
adc
or
push
push
sub
and
cmpsb
xor
add
inc
out
roll
add
hlt
jae
cmp
sub
jbe
in
lret
in
add
push
and
fistpl
fadd
add
imul
cmp
shrl
cmp
mov
vmread
add
rolb
add
add
jae
stos
dec
adc
std
jns
push
insb
cwtl
jge
call
add
dec
lds
orl
shl
or
xchg
gs
xlat
or
sbb
and
xor
jae
mov
outsl
add
add
dec
jbe
jno
dec
popf
add
pushf
out
pop
push
mov
cmpsl
fstpl
inc
or
add
test
loop
sub
insb
addl
push
add
add
sub
add
sarl
jno
add
in
push
xchg
mov
test
cli
add
sub
cmpsb
dec
add
mov
jae
xor
stos
xchg
rol
inc
add
sbb
add
mov
cmp
rolb
mov
mov
and
add
add
lds
imul
add
in
movsl
mov
jle
mov
leave
cmp
add
movsl
add
xchg
xchg
mov
out
test
add
mov
jb
inc
and
pop
out
rcrb
jbe
enter
movsb
mov
add
rorl
lret
mov
push
or
add
jns
jp
push
jge
push
shl
pop
in
mov
out
stos
insb
dec
outsl
add
jg
rcl
cld
popf
mov
mov
mov
or
imul
popa
sub
call
mov
or
test
inc
add
fmull
dec
push
repnz
out
dec
imul
stos
jg
loopne
cmp
int3
xchg
js
sbb
xor
adc
add
fadd
aam
fs
rcrb
jae
nop
aaa
add
in
adc
scas
pop
push
push
stos
add
adc
and
and
add
add
stc
aad
xchg
push
add
movsb
mov
test
sbb
pop
into
add
out
into
mov
int
adc
adc
pop
mov
mov
andl
insl
push
inc
leave
sub
sub
pop
imul
add
int
stc
in
add
add
add
icebp
xor
aas
xchg
inc
jns
inc
xorb
repz
sub
mov
or
addl
sbbb
popl
sub
inc
imul
nop
mov
ja
add
mov
add
add
outsb
cmp
inc
add
movsb
int3
ret
add
add
and
inc
pop
mov
cmc
insb
xchg
jae
pop
shll
jl
js
out
add
pop
add
push
pop
or
movsl
add
mov
add
jne
insb
bound
fiaddl
add
jle
out
add
test
push
enter
add
add
sti
push
scas
test
add
daa
enter
add
add
pop
cmp
push
add
out
push
add
add
add
aas
shl
add
sub
sub
mov
mov
movsb
add
add
imul
cmp
push
add
add
les
add
and
push
add
xchg
sahf
nop
test
inc
xlat
adc
adc
or
sub
or
arpl
cmp
daa
mov
push
mov
and
ds
mov
pop
add
mov
roll
arpl
out
pop
mov
scas
filds
pop
xchg
add
mov
dec
cli
and
ret
imul
mov
xchg
or
add
sub
nopl
sahf
pop
loope
push
add
into
or
add
insl
add
ret
idiv
std
pop
xchg
pushf
out
and
lock
sub
cli
popf
dec
adc
shlb
xchg
add
fwait
jl
pop
jb
lret
inc
mov
jnp
lods
rcrl
mov
mov
add
outsb
add
dec
adc
push
add
cmp
fwait
sub
pop
iret
mov
fxch
adc
sub
mov
adc
add
add
icebp
fidivrs
hlt
sbb
and
mov
cmp
pusha
pop
jno
bound
or
pop
pop
add
cmp
jae
gs
neg
cwtl
popf
invd
dec
xor
add
mov
fsubs
pop
sbb
pushf
in
mov
arpl
push
test
xlat
mov
sbb
movsl
push
mov
inc
fidivl
gs
rorl
sbb
and
bound
loope
into
loope
test
fs
add
add
fstpl
xchg
enter
repnz
jae
inc
add
or
add
xchg
adc
adc
addr16
add
ss
or
mov
rcl
add
sbb
add
add
jp
jbe
push
xchg
enter
clc
add
add
and
xchg
and
decl
and
enter
jg
mov
jae
adc
clc
xchg
in
cltd
sbbl
pop
push
outsl
add
add
xor
adc
xor
adc
adc
aaa
test
jae
push
fmulp
lcall
mov
and
add
add
lret
xchg
mov
popa
test
or
mov
aaa
dec
pop
sbb
ret
pop
pushf
fidivrl
hlt
adc
cmp
sub
mov
in
xchg
mov
mov
ja
imul
dec
pop
sbb
and
cmc
adc
jae
pusha
xchg
pop
rcrb
xchg
jne
dec
inc
test
push
jnp
and
adc
loopne
bound
mov
inc
cmp
push
dec
ss
adc
out
stos
loop
dec
pop
mov
fimuls
cmp
add
lods
add
add
mov
xor
push
inc
add
xor
cli
mov
add
add
bswap
sti
cltd
jl
rol
call
cmpsl
add
sub
jge
add
add
xchg
cld
std
int
or
test
sub
iret
es
aam
lret
je
inc
mov
stos
test
fcmovu
jae
in
add
fs
sbb
adc
xchg
push
les
cmpsl
movsl
test
fwait
iret
cmc
inc
mov
cmp
loope
add
sub
inc
cmp
add
ret
mov
mov
outsl
inc
add
sbb
add
xor
sahf
lods
dec
sbb
fidivl
repz
enter
pop
fiaddl
sub
ss
add
mov
shlb
outsl
xchg
addr16
or
mov
cmp
jne
fsubrl
dec
mov
add
add
add
jp
push
fs
or
mov
js
out
inc
or
pop
outsb
adc
cmpsl
mov
or
add
mov
mov
cmp
cli
add
push
pop
aas
sbb
add
xlat
dec
mov
add
add
ret
add
dec
push
icebp
push
dec
xchg
push
and
bound
add
add
sub
loope
addr16
enter
imul
inc
pusha
enter
or
fcmovne
pushf
mov
sub
fmull
orb
jo
mov
loope
fsub
mov
int3
mov
adc
mov
daa
xor
sbb
mov
jle
mov
jle
int
setnp
adc
cmp
data16
repnz
dec
lock
cmpsl
push
push
jns
imul
or
hlt
into
sbb
push
lret
cmp
adc
movsb
mov
out
js
mov
pop
call
mov
xchg
lret
repnz
aas
cltd
mov
and
push
or
adc
cmp
ret
aad
ljmp
dec
daa
or
dec
call
add
add
push
into
add
xchg
out
nop
bound
xlat
adc
rcll
ret
add
sub
add
ja
sbb
and
scas
mov
add
inc
pop
insl
mov
mov
add
adc
add
add
or
add
add
xchg
test
and
stos
jmp
inc
cwtl
add
popa
mov
xchg
mov
push
inc
inc
and
add
roll
jge
add
add
mov
das
cmp
add
add
rcll
lock
cmp
add
add
mov
mov
adc
sbb
mov
ret
pop
jae
sahf
add
add
repnz
dec
mov
dec
add
fmuls
cmp
adc
dec
insl
pop
test
fs
dec
in
xchg
inc
mov
sub
loopne
adc
pop
push
pop
cltd
sarl
fisttpl
add
add
mov
add
outsb
and
je
out
lahf
sbb
insb
int3
icebp
cmp
ret
xchg
cmpsl
jecxz
and
mov
add
ds
pop
pop
mov
or
inc
mov
inc
call
ljmp
in
add
movsb
js
dec
lods
into
jge
insl
mov
mov
mov
jge
lret
cmp
js
in
xor
add
add
in
xor
cli
aas
cwtl
pop
ror
int
call
adc
add
add
add
cmp
flds
jmp
popf
sub
mov
add
or
fsubrl
add
xchg
mov
add
push
inc
adc
iret
fnstsw
adc
mov
add
add
and
add
outsl
sub
inc
ja
jb
add
add
add
test
add
sbb
dec
or
mov
add
mov
and
mov
pop
xchg
dec
and
orb
push
or
xor
stos
pop
lcall
jl
add
push
adc
adc
pusha
add
add
jne
mov
or
test
push
push
add
add
push
daa
roll
movsb
add
pop
mov
inc
xor
pop
lret
inc
test
cmove
inc
sub
xchg
cld
xor
ljmp
jo
lahf
jns
inc
call
adc
xor
jl
push
pop
std
dec
dec
mov
or
sub
mov
in
imul
add
call
adc
mov
push
adc
test
add
xchg
sub
in
mov
imull
mulb
push
xchg
jle
aaa
xor
jns
sahf
mov
mov
lock
mov
into
pop
mov
lds
xchg
mov
in
int3
mov
xlat
stos
dec
or
add
ss
lahf
mov
ja
movsb
pop
adc
add
repnz
stos
pushf
inc
inc
inc
ds
push
mov
add
rcrl
ja
dec
add
mov
mov
add
cli
cmp
ja
imul
outsl
jmp
xchg
aaa
lds
adc
mov
nop
cs
jg
sub
xor
push
xor
add
movsl
add
xor
mov
add
mov
sub
mov
sbb
inc
test
fs
pop
xchg
dec
in
jp
mov
ret
sub
stos
out
add
lods
ljmp
push
xchg
add
test
test
or
xchg
pop
mov
pusha
xchg
fbld
push
cltd
add
mov
jmp
or
mov
jg
ds
jmp
out
add
cld
movsb
add
dec
out
mov
add
cmp
popf
mov
popa
inc
out
mov
sub
pop
pop
add
loopne
js
callw
jns
xorl
std
pop
and
iret
loopne
or
enter
or
sub
cmp
mov
push
insb
and
loop
daa
push
lods
aas
inc
jb
adc
lods
mov
shrb
pshufw
jae
mov
ljmp
dec
sahf
mov
adc
in
mov
ret
sahf
addb
cmp
jno
aas
pop
decb
lods
loopne
aam
in
xor
sub
test
out
idiv
out
inc
mov
fstpl
mov
enter
pop
mov
jmp
sbb
jbe
loopne
pop
lods
aad
mov
in
adc
sub
push
daa
jg,pt
xchg
mov
shll
inc
in
sbb
in
jo
mov
dec
out
shlb
insb
pop
das
xchg
scas
jne
movb
rcr
pop
imul
sub
aas
jb
mov
add
scas
xchg
adc
movb
gs
add
add
add
add
cmp
add
add
mov
outsb
mov
fadds
fldl
add
fidivs
jg
nop
jo
xor
outsb
xor
jmp
nop
jnp
push
add
add
int
mov
dec
push
push
pop
out
lods
lock
loop
loopne
dec
jns
jbe
adc
inc
out
das
mov
arpl
push
inc
stos
and
add
pop
loopne
add
insl
add
les
xchg
mov
popa
mul
mov
jae
push
or
adc
add
adc
bnd
ljmp
or
inc
sub
mov
shrl
xchg
test
lods
mov
addb
inc
cli
arpl
sahf
mov
fisttpl
in
add
xchg
and
addb
mov
repnz
out
rcl
dec
imul
sbb
jle
jmp
jnp
dec
pusha
xor
loope
add
sub
fld1
jno
test
popa
mov
add
pop
rolw
add
add
icebp
or
aad
mov
add
mov
loop
lock
mov
or
add
arpl
mov
mov
push
add
mov
mov
aaa
mov
lret
adc
push
mov
shr
popa
scas
push
xchg
jbe
xor
rcll
adc
add
push
add
enter
add
add
add
mov
mov
dec
add
out
hlt
lods
cmp
mov
addb
outsb
cmp
dec
xor
fcmovnu
jae
xchg
lea
testb
dec
addb
add
add
ret
mov
mov
add
mov
lret
lea
cmpb
insl
mov
mov
push
jp
out
fidivrs
mov
cmp
xor
sub
xorl
push
inc
daa
std
add
leave
sbb
xchg
aaa
inc
popl
iret
stc
outsb
arpl
add
add
aad
dec
mov
rorb
cmp
or
cmp
cmpsl
pop
inc
int3
pusha
out
and
int
xor
scas
fistpll
stos
add
add
scas
mov
dec
lgs
js
push
xchg
jo
icebp
add
imul
or
shl
and
cmp
rcrb
cwtl
sub
xchg
add
rolb
popf
sbb
dec
sbb
dec
daa
sub
out
sub
mov
rorb
stc
icebp
jp
mov
mov
outsb
add
pop
pushf
mov
mov
pop
call
dec
mov
addr16
xor
out
movl
mov
ret
and
sbb
lret
int
add
lahf
add
adc
add
mov
cmp
add
jmp
push
add
das
je
xor
stc
pop
adc
das
fnstcw
inc
loopne
xchg
xchg
leave
or
popa
push
das
xchg
add
push
imul
mov
pushf
std
aad
or
sub
ret
xchg
aaa
xchg
daa
cmpsb
in
mov
add
pop
cmp
aam
jo
dec
add
scas
out
cmpsl
add
jnp
add
xlat
xorb
mov
repz
xchg
dec
mov
mov
icebp
jns
cmp
frstpm(287
push
nop
push
stc
xchg
add
mov
or
mov
aaa
jl,pn
add
outsb
std
pop
dec
rorb
add
xchg
pop
jp
mov
pop
cld
fcmovnb
call
pop
inc
repz
icebp
add
push
cld
jne
mov
add
rclb
add
add
imul
mov
fbstp
push
or
xchg
mov
fsubl
add
add
mov
dec
loopne
adc
dec
fadd
cmp
xchg
mov
or
ja
sti
daa
or
cmpsb
insb
add
bound
into
sbb
and
loope
jb
adc
push
sub
cmpsb
xchg
and
xchg
push
mov
or
out
stos
scas
jecxz
shl
mov
inc
ds
push
sbb
in
js
clc
xchg
jo
testl
add
xor
sub
imul
mull
cmp
imul
add
in
adcl
movb
cs
sbb
jne
inc
inc
cmpb
cld
std
xor
xor
push
out
jo
popa
jo
sbb
cmc
stos
xor
add
add
sub
cmp
pop
inc
push
add
jae
add
test
cmp
mov
xchg
pop
sbb
cwtl
mov
xor
pop
je
adc
shll
and
inc
out
dec
scas
xlat
adc
sarb
xor
jns
mov
push
js
push
cwtl
or
ret
jbe
jbe
jae
fnsave
xorl
xchg
dec
or
dec
add
add
push
jge
ja
cmp
jecxz
add
add
popf
add
out
insb
add
inc
aam
std
enter
add
out
sbb
inc
aaa
jecxz
cmp
cld
push
js
pop
aam
push
xlat
and
outsb
add
add
pushf
imul
add
outsl
add
add
xchg
add
add
jecxz
jl
lods
add
add
inc
jl
jmp
or
and
out
ja
sbb
pusha
add
dec
adc
add
das
lods
jg
mov
adc
addr16
add
push
add
add
add
dec
add
add
jne
adc
popa
xor
add
push
add
jp
or
int3
add
loopne
jnp
cmp
cmc
in
adc
add
add
aas
add
add
gs
scas
rorl
mov
push
add
inc
xchg
adc
add
add
fcmovnu
add
dec
sarl
sbb
push
push
add
add
mov
add
add
add
add
and
cwtl
lock
dec
stc
call
cmpsb
aam
popf
cmp
movsb
dec
add
add
in
jnp
out
aaa
xchg
ss
ja
add
adc
add
cmp
inc
roll
movsl
add
add
pushf
mov
cmp
sub
dec
aad
shrb
add
push
ja
add
add
add
mov
push
mov
test
lahf
insl
pop
sbb
lcall
outsb
ja
cmc
add
mov
push
roll
and
add
and
dec
rclb
add
add
roll
mov
lods
popf
jl
fistpll
call
lods
sbbl
ja
aad
xchg
jle
push
xchg
divb
add
int3
fs
push
enter
fyl2x
and
cmp
out
dec
dec
je
and
inc
dec
fisubl
cld
popa
pusha
rorl
pop
hlt
xor
stos
inc
das
es
mov
dec
add
add
loope
push
mov
and
dec
lds
mov
xor
mov
sbb
aam
ja
fstl
mov
in
jb
lea
lcall
add
jp
int
in
in
mov
addr16
les
loop
jo
fildl
and
iret
add
add
pop
test
popf
dec
mov
int
je
mov
push
or
bswap
add
int3
mov
dec
jbe
add
add
fists
pop
add
add
mov
repnz
add
sub
lcall
inc
push
add
pusha
add
jge
xor
imul
push
xor
bound
out
or
sbb
mov
mov
ret
jno
aad
or
or
add
int
mov
inc
ja
filds
hlt
adc
add
sub
dec
movb
jbe
dec
movsb
into
cltd
cmp
pop
cmp
aas
pop
int
test
sbb
add
add
add
int
sbb
and
add
add
cld
mov
cwtl
mov
mov
in
adc
sbb
lret
iret
jecxz
pop
mov
dec
lods
sub
dec
pop
int
loopne
jp
cmpsb
ffreep
jbe
add
add
or
ss
sub
mov
test
mov
test
out
sbb
mov
mov
inc
cltd
dec
mov
sbb
in
cmp
and
ss
negl
mov
jg
cmp
sub
jle
push
hlt
inc
mov
xchg
add
adc
mov
lods
aad
imul
add
mov
or
pusha
cmc
mov
and
push
cmp
cmp
adc
add
add
add
adc
mov
in
pop
ret
add
mov
dec
clc
ret
add
into
test
icebp
arpl
lea
fildll
fistpll
sahf
jnp
add
aaa
jge
sub
test
jle
dec
mov
adc
inc
xor
in
cmp
iret
sub
xlat
add
mov
mov
cmp
push
adc
js
clc
loope
ljmp
add
hlt
or
les
add
std
pop
outsb
les
xor
out
int
cmp
jnp
mov
sub
xor
mov
cmp
add
rolb
fidivrs
mov
add
or
jp
movsl
adc
push
inc
ffree
mov
add
or
cmp
add
adcb
add
add
orb
clc
ljmp
cmp
out
jae
or
pop
ret
jp
je
add
repz
scas
add
data16
fs
jl
rcrb
imul
loopne
sbb
sbb
rol
add
add
mov
insb
mov
cmp
dec
mov
lea
add
and
fsubrl
push
outsl
xor
jg
lea
dec
mov
adc
inc
sub
clc
sarb
js
inc
push
call
test
iret
sti
ss
jmp
scas
movsb
pop
movsl
inc
cmp
sub
add
enter
xchg
lret
mov
test
notl
push
jge
out
jns
push
in
insl
inc
push
push
pop
movsb
pop
mov
mov
test
rcpps
lds
mov
in
sub
lcall
je
mov
sti
je
add
push
je
pop
sub
add
add
mov
cmp
mov
add
add
fwait
aas
jo
push
cmp
mov
lock
xchg
mov
orl
inc
sub
xor
sub
cmpsb
out
mov
jmp
lea
sbb
jae
jne
push
and
lahf
push
fistpll
adc
leave
add
aad
or
mov
fadd
sbb
add
jbe
mov
test
mov
clc
rol
insl
outsl
xchg
dec
movb
push
pop
in
js
dec
sti
add
test
sbb
repz
pop
xchg
jo
andb
sbb
dec
outsb
movsl
mov
add
add
addr16
jg
cmpsl
pop
mov
loop
mov
add
repz
insl
arpl
inc
sbb
inc
or
pause
mov
mov
mov
in
sub
mov
adc
mov
sbb
cli
outsl
add
cli
sbb
lods
imul
pop
hlt
and
scas
in
imul
divb
dec
mov
ret
dec
jae
sub
lock
jg
dec
std
pushf
pop
lret
sbb
sub
popa
and
inc
inc
sbb
lea
scas
mov
xchg
fs
ja,pn
aad
sub
roll
popf
int
cmp
sub
cld
lcall
sub
fld
mov
mov
mov
bound
inc
adc
mov
add
jle
out
jl
jle
pop
jle
xor
mov
ficompl
sub
cmc
adc
inc
dec
addr16
jo
fsubr
mov
push
shll
repz
push
pop
cmpsl
fadd
data16
dec
xor
xor
mov
mov
jecxz
hlt
enter
jle
sbb
idivb
adc
xchg
add
or
xor
add
xor
fsubrl
decb
add
mov
shlb
sbb
sbb
xchg
and
inc
gs
mov
dec
mov
das
out
js
dec
aaa
jle
pop
divb
mov
push
lods
out
add
out
xchg
cld
mov
inc
into
lock
or
dec
mov
push
xor
out
jle
add
rorb
imul
sti
incb
call
mov
std
adc
lcall
cmp
add
add
in
jmp
or
add
mov
fs
pop
out
test
mov
loopne
cli
shll
xor
sub
fisubrs
dec
call
pop
push
mulb
test
imul
popf
and
inc
xorl
add
xchg
dec
add
and
add
mov
push
xchg
cwtl
arpl
cmp
mov
pop
sub
jg
aad
mull
or
aas
dec
xchg
add
cmpsl
loope
jnp
scas
lret
jmp
ret
add
test
cmp
outsb
test
scas
ds
add
add
fwait
pop
add
push
add
add
adc
gs
lcall
cmp
pushf
das
mov
add
das
push
jns
dec
add
and
pop
mov
test
movsl
fcoml
inc
lock
cmpsl
mov
mov
add
test
adc
pop
aam
into
pop
fiadds
loope
bound
in
imul
xorl
testb
or
cs
push
inc
mov
test
gs
add
add
mov
in
bound
xorb
fidivrs
or
add
push
sbb
ret
cli
mov
add
test
push
inc
or
pushf
and
ret
mov
add
add
add
add
sub
push
xor
out
add
add
xchg
faddl
inc
insl
add
add
cmp
xchg
adc
cwtl
insl
pushf
adc
sub
add
jecxz
add
add
cmp
adc
dec
and
jecxz
lods
add
outsl
mov
xchg
add
add
add
add
pop
mov
jle
add
add
add
add
push
xchg
aad
add
push
pop
das
leave
add
fs
add
lret
and
sbb
mov
loopne
and
adc
mov
push
fidivl
add
inc
pop
pop
jg
add
sbb
lds
add
mov
inc
enter
cli
in
add
lds
das
push
add
icebp
dec
sti
add
mov
mov
ret
fiadds
lea
lcall
divl
xchg
add
out
jecxz
movsl
add
xchg
xchg
sub
imull
cmp
add
mov
add
add
jecxz
sub
loop
imul
in
add
call
sub
nop
jnp
mov
inc
mov
sbb
pop
sub
in
inc
sahf
xchg
jmp
jb
int3
adc
mov
adc
pop
ss
int
lret
add
pop
ljmp
inc
add
cmpsl
xlat
test
flds
xchg
icebp
rclb
mov
test
cmc
and
sbb
jns
inc
pop
aam
dec
sbb
pop
test
add
sarl
test
out
fnstsw
pop
int
fstl
ficoms
mov
push
push
inc
add
add
daa
jg
dec
leave
add
xchg
popf
jnp
xlat
sub
pusha
mov
push
and
mov
or
dec
sub
dec
jns
inc
or
add
arpl
subl
cmpb
add
jno
out
fs
cli
mov
add
xor
ret
mov
add
add
call
sahf
fwait
jae
pop
cmp
aam
cmp
shlb
add
dec
push
fdivl
sub
add
ret
mov
outsb
fdivl
add
popa
jbe
lock
insl
test
xor
div
leave
inc
xor
cli
add
add
add
sbb
jns
add
in
scas
test
test
xor
jae
lea
dec
orb
outsb
add
std
xchg
int3
imul
jecxz
fisubs
nop
add
daa
cs
enter
mov
push
add
adc
add
rolb
or
scas
into
cmp
mov
outsb
repnz
out
push
xorl
mov
aas
jecxz
mov
jnp
mov
add
push
filds
mov
inc
in
mov
add
loopne
je
fcmovbe
mov
test
pop
out
enter
pop
add
add
push
xor
inc
shr
push
xchg
cltd
push
outsl
mov
loope
adc
lret
pop
xchg
sahf
sbb
xchg
add
mov
jns
add
add
or
pusha
movsb
rolb
sub
xchg
or
cmc
mov
cld
pop
ds
add
in
push
imull
and
add
aas
jp
add
add
xor
jp
inc
sub
add
push
add
jecxz
push
xchg
je
sbb
pop
inc
xchg
mov
jp
adc
ja
push
pop
ss
mov
jmp
pop
divl
mov
add
test
daa
xchg
add
xor
fisttpll
add
sbbb
ja
les
add
mov
adc
adcb
in
push
leave
pop
movsb
pop
mov
outsb
out
int
stc
in
add
add
add
add
xchg
push
add
add
iret
out
shlb
inc
sbb
lods
mov
cmp
cmpsl
pop
ret
add
add
add
inc
jb
inc
cmp
cmp
incb
inc
push
xchg
or
push
or
in
pushf
sarb
add
cmpsb
int
add
add
sub
add
add
adc
cli
enter
insl
stc
push
adc
or
cmp
add
xchg
mov
sbb
add
aam
in
mov
add
add
dec
add
mov
aam
jge
add
pop
ret
leave
in
insl
call
or
xor
add
inc
push
rorb
cmp
lods
add
cmc
incb
add
js
add
add
sbb
add
mov
add
pop
add
add
add
fdivrp
add
xchg
das
add
sub
add
testl
add
hlt
add
adc
add
add
rorb
add
mov
mov
add
mov
add
add
xor
add
add
sbb
in
add
out
add
xchg
mov
add
dec
add
clc
inc
add
jns
add
jg
add
enter
lock
add
add
mov
dec
add
scas
mov
add
or
add
mov
add
add
jmp
roll
stos
jg
add
jbe
add
adc
add
sub
add
xchg
add
jno
add
dec
sub
add
shl
add
pop
add
mov
out
add
test
roll
add
incb
add
fadds
add
push
add
pop
mov
add
sub
add
add
loop
add
xchg
add
add
add
out
add
fprem1
add
or
add
push
mov
add
pop
add
mov
les
add
fiaddl
add
addb
sahf
adc
add
add
add
add
add
add
pop
lock
add
add
or
add
jno
add
cmp
add
add
add
das
add
xor
add
add
add
jmp
add
push
add
xchg
push
add
adc
add
cli
dec
add
xchg
jl
add
add
loopne
add
pop
test
add
adc
add
scas
movl
add
jb
add
data16
loopne
add
mov
add
cmp
add
fabs
add
hlt
and
in
add
sti
add
add
push
add
add
sub
leave
xlat
idivb
adc
add
mov
add
fimuls
or
add
iret
sub
add
add
es
dec
push
sub
mov
push
test
xor
repz
add
add
push
add
popl
add
add
ljmp
pop
fldl
into
leave
xlat
je
jo
jg
outsl
bound
shlb
xor
rolb
mov
jge
mov
stos
cli
fwait
int
jge
add
add
dec
mov
ja
lock
enter
add
and
add
repz
adc
fists
add
add
dec
and
cmc
dec
out
add
add
pop
iret
mov
fiaddl
inc
fdivrl
add
jmp
shll
pop
ja
fldenv
sub
pop
gs
cmp
int3
addb
fdivl
add
inc
and
mov
push
add
jns
mov
mov
pop
psrld
fwait
bound
cld
je
mov
out
into
sahf
mov
add
add
inc
jge
daa
repnz
and
in
cld
fmull
mov
aam
mov
fnstenv
lahf
addr16
pop
aad
popa
xchg
inc
lahf
dec
inc
and
xor
and
stc
fiaddl
add
add
out
enter
andb
jecxz
pop
ficompl
out
push
fiaddl
dec
cmp
inc
mov
add
add
push
push
push
mov
sbb
into
push
mov
mov
int
mov
sbb
jge
lock
roll
push
jmp
aad
xchg
push
stos
add
add
push
popf
out
mov
xchg
loope
pop
mov
jmp
cld
mov
adc
add
add
cmp
cltd
push
into
loopne
je
dec
je
xor
jmp
fsubs
cs
cli
and
add
add
sub
jns
mov
xor
dec
mov
fdivrp
pop
push
lret
or
pusha
mov
sbb
loopne
into
xorb
inc
jge
and
insb
and
in
cld
fmull
mov
aam
mov
fnstenv
lahf
addr16
pop
shlb
mov
push
xchg
inc
inc
sub
push
add
mov
jl
mov
clc
mov
xor
out
mov
scas
leave
pop
leave
pushf
pushf
cmp
pushf
test
add
add
or
pop
pop
add
sti
or
pusha
pop
lods
ret
pop
loope
mov
mov
shll
or
pop
cli
add
arpl
jge
cmp
pop
push
dec
aam
lahf
sbb
add
in
sbb
ljmp
add
add
inc
mov
add
mov
jmp
jmp
or
ja
fwait
pushw
test
xchg
gs
add
add
add
mov
out
jnp
sub
in
jae
arpl
sbb
jmp
pop
pop
stos
pop
mov
ret
add
xchg
jno
add
fildl
or
insl
repz
jns
cli
push
sti
add
push
std
stos
rcll
add
gs
pop
insb
stos
loopne
xchg
int
pop
sbb
iret
xlat
pusha
fadds
add
notl
xchg
pushf
inc
add
addr16
push
fxch
psubsb
add
dec
mov
xor
out
add
cmp
add
cld
ret
push
push
push
mov
inc
int
lcall
decb
push
cwtl
dec
and
mov
addr16
incl
fadds
adc
in
jbe
mov
cltd
mov
shll
add
pop
add
scas
daa
add
rorb
add
add
add
add
add
add
add
add
add
lcall
add
ja
add
sub
add
push
add
or
add
add
add
ja
add
mov
add
sub
add
mov
add
push
sub
add
movl
add
mov
add
ljmp
pop
or
add
add
add
add
or
repnz
cmp
mov
add
inc
add
in
add
xchg
addl
loopne
add
loop
add
scas
repnz
hlt
mov
add
cmp
add
add
bound
add
and
add
int
add
add
push
add
pop
out
add
cmp
add
call
mov
add
xor
add
add
jl
add
add
test
add
mov
add
push
mov
add
xchg
popa
add
pop
addl
cmc
scas
add
test
add
mov
dec
add
jno
add
xor
add
and
add
scas
dec
add
out
add
arpl
add
sbb
add
mov
add
outsb
test
add
dec
add
insb
pop
add
xor
add
and
add
xor
add
cmpsb
fiadds
add
rolb
add
repnz
sar
add
push
xchg
add
imul
add
add
xchg
add
subb
add
add
add
repnz
add
push
add
or
add
popf
mov
add
add
cltd
jge
add
add
add
add
add
sub
add
add
add
add
push
add
scas
out
add
add
add
call
add
fdiv
add
add
add
xor
add
cmpl
add
fwait
add
loop
add
loop
add
pusha
daa
add
idivl
add
inc
loope
add
add
or
add
add
dec
leave
add
add
add
mov
repnz
in
add
xchg
dec
add
adc
add
add
mov
inc
xchg
sti
dec
int
add
insl
mov
fucomp
pop
jno
add
aam
mov
inc
adc
roll
cs
dec
andl
negl
jg
outsl
add
lds
jl
and
mov
xchg
fcoms
sbb
inc
pop
es
cmp
fidivl
jp
cmpsl
add
in
neg
cld
cmp
push
sub
jno
xlat
mov
mov
sbb
mov
mov
add
inc
cs
push
mov
dec
ja
xchg
ret
xchg
rcr
gs
xchg
cmpsl
push
pusha
mov
inc
xchg
push
push
sbb
mov
imul
mov
imul
pop
xor
sti
stos
stos
adc
ffree
repnz
iret
cmpsl
test
jmp
shll
fs
pop
jp
jmp
sub
add
add
or
test
test
insb
movsb
mov
add
add
outsb
or
and
or
add
add
sbb
movsl
dec
add
out
inc
iret
jo
mov
xchg
dec
or
outsl
or
mov
and
test
sahf
inc
add
jne
fiaddl
pop
fwait
mov
jg
cli
scas
outsb
adc
out
pop
jp
insb
inc
int
mov
add
add
inc
push
xchg
mov
add
std
ja
cmp
in
imul
jmp
add
je
mov
out
cvtps2pd
hlt
add
sub
bound
hlt
je
mov
loope
add
daa
repnz
xorl
stos
add
mov
sahf
cwtl
add
scas
push
aad
add
gs
test
pusha
xchg
js
mov
mov
sub
fidivrl
jge
add
mov
aaa
jp
fsub
mov
mov
xor
mov
add
push
ja
inc
inc
mov
jo
loope
pop
add
jmp
push
add
or
jns
sahf
mov
enter
leave
pop
sbb
sub
and
push
lret
add
push
mov
inc
les
add
jp
mov
inc
shlb
out
call
add
hlt
cmpsb
dec
sbb
lock
add
ret
mov
jecxz
add
clc
scas
add
pusha
bound
mulb
aam
mov
bound
xor
in
stos
lahf
leave
xchg
cmc
in
jg
and
pushf
add
add
or
mov
add
mov
fcmovb
ss
addr16
cmp
fisttpl
cmp
scas
lret
xchg
add
inc
adc
add
push
test
ret
scas
mov
mov
sti
ja
in
fldenv
mov
or
add
add
ja
insl
push
dec
mov
inc
sub
lods
les
add
pop
dec
dec
xchg
movsb
stc
mov
out
mov
add
pop
roll
jmp
push
add
pop
inc
mov
inc
pop
cld
adc
or
test
sahf
aam
test
mov
cli
loop
mov
js
daa
orb
sti
add
mov
sti
push
int
mov
mov
add
addl
daa
add
inc
sbb
xlat
pop
in
add
cmpsb
sub
add
jmp
push
andb
add
sbb
xlat
subl
iret
mov
add
inc
inc
adc
push
sti
comiss
test
add
cmpsb
call
fsts
xor
gs
fimuls
push
lock
mov
push
out
add
repnz
mov
pop
push
repz
lods
dec
add
and
push
stos
aad
or
xor
outsl
push
inc
sahf
dec
add
adc
xor
and
fnsave
in
stos
mov
jl
lods
loope
int3
mov
loope
push
int
mov
test
cmp
mov
cld
add
push
xlat
test
movsb
iret
push
add
loop
leave
mov
add
pop
mov
pusha
or
add
jmp
in
sbb
add
xchg
add
inc
cmpsb
dec
stos
jp
test
mull
add
add
lret
pop
lcall
dec
pop
sbb
rcll
add
add
popa
dec
iret
scas
outsl
adc
jge
popaw
into
push
lods
mov
inc
add
imul
add
lcall
bound
add
sub
mov
adc
lods
pop
test
fucompp
cmovp
cld
sbb
ret
mov
mov
pop
fildl
testb
clc
dec
aad
mov
dec
jno
sti
fcoml
xor
mov
shlb
xlat
jns
adcl
lea
outsl
add
and
sub
xchg
pop
mov
and
add
shl
mov
in
out
mov
push
stos
rolb
mov
add
cmp
pop
sahf
push
and
cltd
outsl
pop
jmp
add
nop
inc
adc
push
cld
jle
rorl
sbb
stos
daa
mov
lock
adc
add
jb
xor
jmp
aad
mov
mov
add
lds
lret
in
jl
xor
inc
sbb
clc
rcll
inc
cmpb
add
jl
dec
jne
fisttps
ret
mov
add
les
add
add
mov
iret
jnp
xor
in
pop
push
sbb
add
jns
sbb
lods
imul
rcl
sbb
shlb
out
add
popa
rorl
testl
mov
imul
stos
mov
xor
iret
aad
es
stos
jl
adc
cmp
mov
arpl
inc
sub
fadds
fnstsw
pop
andb
add
orb
inc
stos
into
push
add
ret
jae
pop
mov
add
add
aas
jo
into
cld
push
add
icebp
xchg
mov
ret
cmpsb
pushf
add
imul
jg
add
cmp
inc
cmp
pop
aam
ljmp
lret
int3
push
rcrl
pop
lcall
cwtl
addl
stc
sbb
loopne
popf
outsb
in
add
daa
imul
pusha
xchg
cwtl
push
jns
ficompl
outsb
jl
hlt
dec
dec
loop
add
aam
mov
or
imul
add
add
sbb
add
add
add
jo
push
mov
add
adc
add
sbbb
sub
outsb
add
cmpl
dec
xor
dec
pop
dec
add
inc
dec
add
xor
es
jbe
dec
fwait
rolb
sub
add
add
xchg
imul
cmp
add
or
add
cld
add
loope
shl
or
mov
out
sbb
scas
add
outsb
add
shll
ficomps
add
inc
push
stc
inc
or
testb
add
mov
add
add
pushf
push
add
pop
test
push
mov
fildl
mov
jno
nop
push
add
cwtl
add
cmc
jb
shlb
add
xchg
les
mov
push
jle
jmp
pop
pop
add
push
mov
ss
add
fwait
jns
sub
push
add
add
add
dec
filds
stos
push
jno
ja
mov
js
xchg
add
ret
nop
int
lds
add
enter
out
sub
js
incl
into
jne
add
and
sub
flds
add
and
xchg
in
push
add
cld
inc
add
test
inc
add
fmuls
movsb
dec
add
adc
add
or
add
out
add
mov
add
mov
cmp
and
add
lea
add
cmp
decl
ret
xchg
in
lods
and
add
sub
mov
sub
out
loope,pt
orb
jo
rolb
inc
aaa
and
outsl
lock
stos
inc
mov
add
add
add
push
add
cmp
jb
inc
add
add
add
xor
add
cld
mov
lods
pop
cwtl
add
jp
add
ret
addl
shr
fadds
adc
add
push
pusha
add
arpl
and
inc
add
jns
add
adc
cmpsl
cmp
add
xor
add
cmp
add
iret
add
xchg
adc
add
add
add
xlat
loope
add
jp
ljmp
add
jl
add
mov
add
jo
add
cwtl
xor
push
dec
jb
xor
add
inc
fwait
dec
add
imul
pusha
mul
add
icebp
call
add
add
nop
mov
out
dec
addl
ljmp
add
pop
out
add
push
add
outsb
add
sti
add
xchg
jg
ret
pop
xor
or
dec
add
jp
add
adc
in
mov
cmpsl
sbb
add
push
add
sub
add
in
lea
jbe
mov
add
cld
test
or
or
add
dec
sbb
jno
dec
add
mov
inc
fimull
add
les
add
ds
add
push
push
add
mov
scas
add
dec
jb
je
mov
test
add
jnp
add
lods
add
or
xchg
add
imul
add
idivb
add
aam
add
and
push
decl
add
push
push
add
data16
mov
mov
dec
add
add
popa
int
jmp
mov
repz
movsb
add
mov
jg
xor
lds
add
lds
add
xchg
or
mov
or
cmc
push
add
inc
add
test
adc
dec
add
mov
and
outsl
sbb
stc
add
arpl
pop
xchg
or
jae
test
decl
sbb
and
cmp
add
push
cmc
add
cwtl
and
push
loop
add
sbb
dec
sahf
lcall
js
add
cli
or
add
test
in
inc
add
pop
lods
add
lahf
addl
push
push
add
cmpsb
add
loop
add
add
add
mov
into
fisttpll
add
mov
add
add
push
add
es
add
cld
jno
stos
dec
jb
hlt
add
add
fsubrs
xor
or
add
jb
js
and
orl
add
add
add
mov
inc
imul
add
mov
je
pop
std
add
and
pop
push
filds
cmp
add
rorb
add
ret
out
or
push
mov
and
add
stc
rolb
les
add
jbe
add
xor
add
sub
jne
flds
cmpsl
cli
and
jne
push
add
out
inc
add
mov
inc
add
mov
add
push
cmpsl
add
mov
add
cmp
add
add
lock
or
inc
dec
and
in
into
add
idivl
add
xchg
add
pop
fildl
pop
fcos
add
xchg
and
icebp
out
xchg
add
in
sbb
lods
xchg
lcall
je
add
adc
push
add
test
arpl
lods
add
shlb
shlb
xchg
mov
daa
xchg
outsb
sub
add
pop
xchg
es
cmc
cwtl
dec
test
add
add
pop
dec
cmpsl
fwait
loop
mov
dec
or
fnstcw
pop
bound
add
jp
pop
test
add
jns
lods
aas
jae
cmpsb
lock
add
adc
xchg
ja
scas
aad
out
cmpsl
sub
add
add
pop
mov
cmpb
add
cmp
repz
insl
es
fisttpl
in
mov
push
mov
pop
lods
sbb
les
dec
popf
out
sub
push
xchg
pop
or
sbb
xchg
push
stc
dec
add
mov
push
jg
cld
mov
add
add
add
lretw
insb
sub
and
pushf
fiaddl
inc
xor
mov
mov
add
out
dec
push
or
popa
add
add
cmp
std
jb
sbb
aad
jmp
dec
xchg
adc
add
jnp
ret
mov
add
add
mov
arpl
loopne
add
add
or
jno
out
rcrb
add
push
mov
shlb
into
sarb
test
jnp
sbb
es
mov
pop
xchg
push
add
add
inc
sbb
movsl
flds
sarb
add
pop
xchg
mov
outsl
and
cld
loope
or
inc
mov
xorl
loop
jmp
push
push
orl
inc
stos
add
add
inc
jbe
lock
dec
adc
xchg
add
imul
inc
out
cmpsl
sub
add
fldcw
shll
pop
add
jle
movsb
sbb
fadds
add
add
dec
add
repz
push
pop
add
push
imulb
cli
sbb
repz
xor
mov
pop
push
clc
lret
push
scas
dec
xchg
mov
add
pop
divb
mov
add
add
fs
imul
jns
add
sbb
scas
mov
add
ds
add
fmuls
mov
js
mov
jecxz
add
dec
bswap
fs
fidivs
add
add
loop
mov
inc
fiadds
mov
add
xchg
popf
jge
cld
jo
add
data16
mov
sbb
inc
les
add
add
xchg
lret
sbb
add
push
cmpsb
inc
arpl
data16
add
add
roll
and
dec
mov
xor
in
mov
mov
add
nop
andl
pop
rcll
add
imulb
jnp
add
add
loop
pop
sbb
nop
imul
pop
add
add
mov
lods
cmp
xor
add
mov
push
cmpsl
cmp
add
add
cmp
inc
fistpl
add
add
int
inc
enter
stos
jo
add
add
movsb
jle
loope
push
in
inc
jl
loop
add
add
nop
ja
lahf
inc
push
pop
hlt
push
add
pop
fwait
mov
and
scas
add
add
push
fldcw
cmp
test
inc
pusha
add
outsb
cwtl
sbbb
add
add
or
sarb
mov
add
add
cmp
lret
add
add
scas
das
aas
sbb
aad
sbb
rcrl
insl
add
add
cmpsb
aad
ss
pop
scas
jns
fists
add
add
mov
jne
hlt
cmp
add
ja
loope
mov
pop
flds
add
add
lret
and
pushf
jo
add
or
cmp
dec
inc
filds
sub
add
add
mov
das
and
add
lods
mov
mov
add
add
addr16
mov
push
add
add
cli
jmp
push
js
pop
mov
jmp
adc
push
stos
test
add
add
mov
stos
das
fsubrl
shlb
rclb
mov
ja
cmp
pop
into
test
pop
mov
add
add
push
int
sbbl
xchg
cld
jle
out
add
add
stc
std
inc
jl
loop
add
add
xorl
jmp
loop
lcall
dec
add
test
adc
lret
es
fnstcw
add
add
mov
subl
jle
xor
add
xchg
ja
cmp
out
pop
pop
push
and
lret
add
add
scas
out
das
jp
mov
jecxz
add
add
dec
mov
adc
jno
fidivs
add
or
add
fimuls
jmp
stos
add
mov
add
add
lahf
clts
test
lds
add
xor
mov
jge
add
inc
xchg
inc
inc
cmp
add
shlb
popa
xchg
jge
ljmp
add
add
fwait
xor
mov
add
add
inc
test
inc
or
add
loopne
add
repnz
add
dec
mov
mov
mov
add
fisttps
push
mov
push
add
inc
aam
aam
mov
inc
add
add
rolb
push
mov
inc
cli
data16
add
push
std
in
jl
test
add
popf
push
sbb
hlt
push
add
add
repnz
test
adc
arpl
movsb
jno
sbb
jbe
insl
add
add
je
cmp
add
xor
jl
xchg
adc
xchg
lds
aam
jge
loope
dec
push
pop
xor
add
add
test
or
test
lods
add
rol
push
pop
rolb
add
jae
pop
shrl
shrb
lock
add
add
js
iret
sbb
mov
push
add
jge
adc
mov
add
frstor
add
add
xchg
xchg
imul
dec
dec
xchg
dec
inc
arpl
add
lds
jbe,pn
add
jl
in
imulb
popa
inc
mov
push
rorb
xor
stc
in
mov
rcll
lahf
inc
and
sub
adc
adc
mov
mov
add
add
lods
sub
jle
int3
mov
add
pop
and
in
push
add
xchg
aad
stos
pop
sbb
push
add
add
test
jp
mov
sbb
add
or
xchg
jmp
add
xchg
jg
xchg
inc
sbb
stc
dec
add
add
fwait
cmpsb
sbb
lods
pop
insb
add
mov
add
pop
ja
aad
bound
xorb
add
cwtl
sbbb
add
add
test
scas
pushf
lret
and
add
add
jnp
cmp
pop
lods
mull
in
das
jns
mov
incb
add
add
dec
leave
lds
add
add
push
mov
sbb
adc
add
add
mov
jns
jmp
mov
add
jno
inc
xchg
ret
mov
adc
add
mov
shll
iret
sarl
sub
popf
adc
add
inc
filds
sub
pop
xor
and
add
add
stos
xchg
and
cmpsb
jmp
mov
add
sbb
cmpsb
ret
sbb
nop
nop
add
add
loop
jmp
adc
add
push
xor
mov
in
pop
add
pop
test
pop
add
add
popa
aad
mov
add
repz
pop
sbb
dec
xor
add
add
out
fstpl
push
fiaddl
add
inc
push
xchg
dec
std
cmp
mov
inc
add
add
rolb
into
shrl
mov
add
add
repnz
inc
inc
adc
fiaddl
inc
in
andb
add
jg
cli
movsb
imul
aaa
jbe
insl
add
lods
mov
je
add
imul
add
lahf
shr
cwtl
shll
add
pusha
cmp
jmp
pop
or
xor
hlt
jmp
je
or
inc
mov
pop
rolb
add
js
aam
cmp
adc
add
mulb
cs
je
popa
adc
insb
mov
add
add
popf
add
shlb
xchg
mov
sbb
je
add
add
pop
nop
push
inc
ds
sub
rcll
add
cmp
test
imul
mov
mov
sbb
nop
nop
add
add
and
pop
xlat
pop
mov
add
mov
ja
in
in
pop
add
add
or
stos
adc
add
jne
xchg
out
stc
leave
add
add
push
test
add
add
bound
out
xlat
cwtl
roll
scas
push
adc
iret
cli
dec
aad
adcl
cltd
add
mov
or
ljmp
add
xor
or
in
add
add
movsb
push
out
mov
jns
cld
mov
add
add
or
jb
fidivs
add
sub
les
inc
xor
add
scas
xchg
fistpll
and
add
add
out
push
sbb
ja
fiaddl
add
add
pop
mov
add
add
push
enter
shlb
add
add
jg
icebp
sbb
outsb
dec
filds
add
add
mov
jne
add
add
pop
insl
mov
add
add
addb
mov
shlb
add
add
mov
sub
imul
lahf
push
pop
and
mov
add
lret
add
add
pusha
fwait
movsb
lret
xor
xor
jmp
mov
lods
ret
sbb
nop
nop
add
loop
std
out
pop
int
mov
add
cmp
in
in
pop
add
add
pop
lock
jbe
mov
mov
and
outsl
lahf
shrl
add
dec
jge
sbb
add
add
jl
loope
fisttps
pop
sbb
testl
insl
add
add
jae
jmp
add
add
and
inc
adc
fiaddl
pop
loopne
fwait
mov
jmp
cld
add
add
cmpsb
outsb
pop
pop
jp
fidivs
add
add
cs
sahf
push
xor
pop
test
shll
das
loop
inc
pop
push
data16
lea
ret
mov
lods
push
mov
enter
pop
xchg
rorb
add
jnp
fisubrs
loope
hlt
outsb
dec
filds
add
add
loope
xchg
ret
xchg
add
mulb
dec
dec
jnp
add
add
rcrb
or
push
add
add
in
ljmp
orl
xor
and
xchg
add
dec
inc
cmp
mov
add
lret
add
mov
jbe
add
add
ljmp
cmpsb
fcoms
add
cwtl
fwait
cmp
clc
call
mov
add
add
inc
inc
mov
in
pop
add
or
mov
mov
and
jns
fsubl
or
push
mov
jno
lock
filds
lcall
add
dec
movb
loopne
test
out
sub
loopne
jb
in
xchg
in
inc
add
out
mov
jecxz
mov
insb
pop
ljmp
add
leave
es
fnstcw
add
push
imul
mov
cwtl
add
jge
xor
out
add
sub
pop
add
hlt
jmp
je
add
cmpsb
dec
mov
fdivp
movups
int
add
add
or
insb
mov
jns
lock
add
addr16
fimuls
jle
adc
lret
fwait
add
push
xchg
ja
les
add
jbe
adcl
add
int
imul
dec
sub
inc
sub
xor
add
sahf
mov
mov
in
imulb
push
mov
sbb
nop
nop
add
aas
out
out
in
adc
add
dec
aaa
pop
inc
imulb
jnp
add
add
loope
sbb
pop
test
pop
add
add
test
test
rolb
add
mov
pop
pop
stos
sub
jno
sti
push
rcll
add
add
pop
sar
push
enter
stos
add
add
stos
imul
push
mov
add
add
out
fwait
push
inc
adc
fiaddl
add
add
pop
popf
mov
push
add
mov
jbe
insl
add
add
pusha
shrl
xchg
or
aaa
jg
xchg
add
sbb
cwtl
shll
add
jne
loopne
pop
inc
push
cmp
sub
add
pop
sbb
push
lods
push
mov
add
fcomip
push
pop
rolb
adc
xchg
cmp
mov
add
test
movl
add
dec
jo
out
mov
add
ja
ret
and
pushf
jo
add
add
push
leave
data16
pop
filds
sub
add
add
lods
ret
cmp
xchg
test
add
add
mov
cmpsb
jmp
mov
add
or
dec
scas
roll
nop
sub
cmc
pop
faddl
inc
cs
add
inc
mov
addr16
cld
out
add
loope
xchg
test
add
add
mov
rolb
scas
stos
repnz
pop
mov
add
add
ja
loope
fistl
fiaddl
add
add
pop
rcll
pop
loopne
test
out
pop
in
inc
jl
loop
daa
xchg
jnp
xchg
push
mov
add
add
push
repnz
sbb
scas
outsl
adc
jl
fiadds
add
insl
jno
xor
pop
imul
adc
xchg
int
ja
testl
pop
push
adc
data16
addl
xor
out
scas
rolb
add
jecxz
push
pop
add
mov
jl
sti
pop
mov
add
sbb
mov
ds
pop
dec
jae
repz
xchg
adc
adc
rcll
popf
jp
or
xor
frstor
inc
push
xchg
add
add
inc
inc
cmp
mov
inc
rcl
xor
add
add
and
and
cld
mov
push
add
andl
pop
add
add
fldl
push
and
mov
push
clc
stc
add
adc
xchg
cmp
add
add
cltd
cmpsl
pusha
lret
arpl
shll
pop
mov
add
xchg
or
ja
cli
inc
fcoms
add
add
dec
sbb
sti
dec
enter
mov
add
ja
ljmp
add
jecxz
mov
adcl
push
call
hlt
mov
add
add
scas
je
inc
imul
mov
test
jbe
xor
addl
xchg
shll
and
add
add
in
dec
inc
sbb
lret
add
scas
cs
scas
rolb
sbb
fwait
push
sbb
add
add
js
hlt
push
mov
add
add
imulb
jbe
mov
add
add
stos
fcoml
add
mov
add
add
sub
mov
dec
sahf
dec
inc
sub
in
rcll
add
and
andb
xor
jmp
mov
cmpsb
fcoms
add
xchg
mov
rcll
cmp
mov
add
push
in
push
pop
dec
loope
jbe
add
adc
int
scas
fldln2
pusha
lret
arpl
in
lahf
or
pop
mov
add
xchg
or
cmp
in
push
add
fwait
into
pop
stos
dec
sbb
add
push
mov
inc
cli
data16
loope
sbb
jecxz
andl
pop
rcll
mov
add
mov
insb
inc
hlt
lods
outsl
dec
dec
popa
jbe
add
add
arpl
ljmp
lret
inc
jg
xor
rcrl
test
int
cwtl
lret
cmp
and
add
jmp
push
sbb
add
add
mov
scas
pop
stc
rol
add
push
aam
jae
dec
shlb
add
arpl
repz
outsb
dec
filds
add
psubd
cs
sub
add
add
in
inc
les
add
cmpsb
into
xlat
arpl
xchg
lahf
jno
sbb
add
andb
lcall
cmp
fstps
aad
and
xchg
aaa
jge
jmp
mov
add
add
mov
xchg
cmp
pop
int3
inc
addl
or
push
std
loope
add
ljmp
add
add
sahf
mov
jo
shlb
pop
dec
mov
push
add
add
hlt
inc
into
test
dec
in
push
fiaddl
add
push
int3
push
xchg
push
loopne
test
jmp
or
cmc
adc
xchg
jmp
add
add
test
rolb
jmp
add
add
mov
add
insb
pop
jmp
insl
add
insl
add
das
fwait
mov
je
add
jl
mov
movsb
test
add
sub
in
push
push
add
cmp
xchg
dec
sbb
cmp
scas
rolb
repz
push
xchg
rorb
add
les
fs
cld
adc
outsb
dec
filds
add
add
rcr
xor
add
xor
add
std
fiadds
inc
pushf
jae
lds
jle
sbb
jl
pushf
sub
pop
cwtl
inc
push
insl
or
ljmp
fwait
movsb
mov
in
mov
lret
sbb
shlb
scas
mov
add
lret
jmp
push
xor
mov
bound
sti
add
xor
leave
pop
sti
lret
xchg
add
add
test
mov
dec
cmpsl
and
sub
add
add
pop
into
pushf
aam
cmpsl
dec
add
jmp
rcll
out
jnp
mov
push
out
dec
add
add
add
add
mov
add
add
add
dec
xor
ss
dec
pop
or
aas
cmp
pusha
rorb
add
add
add
add
add
add
add
add
add
jg
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
mov
add
cwtl
add
add
add
add
add
js
add
dec
add
add
js
js
rolb
mov
cmp
aas
fisubs
cmpsl
jns
sahf
cmp
cwtl
xor
sbb
loopne
in
scas
adc
jge
bswap
mov
jno
das
mov
lret
add
icebp
loopne
bnd
push
adc
jmp
cmp
hlt
xor
scas
sub
clc
roll
arpl
cmp
xrelease
mov
xchg
test
aas
mov
add
add
add
sub
faddl
dec
add
mov
add
data16
data16
add
mov
add
fildl
dec
stos
add
cli
add
add
test
add
test
aas
add
cmp
lret
add
add
add
add
mov
sub
iret
add
sub
add
add
add
movsl
xor
iret
add
add
or
add
add
pop
and
pop
add
add
add
mov
add
add
add
add
loopne
pop
addl
daa
imul
add
add
test
xchg
fldt
sub
add
sbb
sub
add
or
movsl
add
pop
ror
add
add
add
sub
or
add
add
or
mov
add
popa
add
add
add
add
mov
add
add
test
and
add
push
push
add
loopne
clc
cli
add
push
jl
outsb
dec
add
add
add
add
add
das
add
add
add
stos
add
flds
adc
add
add
add
add
mov
add
add
add
cmp
add
add
jae
add
lret
add
add
add
stos
and
add
add
add
add
testb
gs
cmpsl
add
add
inc
add
test
add
add
add
idivb
mov
outsb
pop
add
add
cmpsl
ds
add
add
cmpsb
add
add
add
add
cmp
fldl
add
imul
add
push
add
clc
add
js
add
add
aad
add
add
add
push
add
ljmp
adc
shll
adc
clc
jne
aad
add
cltd
cmp
cmp
out
sub
push
add
add
add
sub
dec
add
add
cmp
add
outsl
push
add
jne
test
add
add
add
xlat
inc
lods
add
add
add
repz
add
cmpsl
lret
addl
add
insb
xor
add
insb
push
adc
inc
xchg
add
mov
mov
and
add
mov
and
add
add
add
add
add
int3
or
add
or
add
add
rolb
add
add
add
daa
orb
add
add
add
sbb
sti
test
add
mov
add
sub
push
add
add
add
mov
addl
add
jmp
add
add
js
frstor
add
add
leave
add
pop
popa
add
add
adc
add
mov
or
pop
pop
add
add
mov
add
add
insl
pop
add
dec
add
add
inc
fldl
add
add
add
add
add
add
add
add
add
xor
add
enter
pop
pop
add
add
add
add
add
add
add
add
add
testl
add
add
add
add
add
add
mov
push
add
jns
add
cli
add
mov
cmp
in
mov
add
add
add
cmp
repnz
add
add
add
dec
add
xchg
add
jle
insl
add
testb
add
add
pop
cmp
xchg
in
add
cwtl
add
xchg
add
add
jns
mov
add
out
add
add
pop
add
cmpsl
add
add
add
mov
scas
add
cmpsb
add
jle
add
add
mov
jge
xor
add
add
lret
add
add
je
das
add
flds
add
stc
pop
or
add
add
out
add
add
add
push
add
cmp
add
loopne
add
add
xchg
jns
add
add
add
push
add
add
add
sub
add
add
add
add
add
mov
add
aas
add
add
add
add
add
add
add
add
ret
addb
add
add
add
add
add
add
push
add
add
add
add
cli
add
incl
sub
sub
ja
filds
daa
add
add
add
add
dec
add
fiaddl
add
add
and
inc
add
insl
popl
add
add
add
pop
add
popl
add
out
pop
add
add
cli
add
add
add
add
sub
jne
mov
cmp
add
add
xchg
push
add
add
iret
sub
add
fldpi
or
imul
add
daa
mov
test
add
lea
loopne
add
mov
dec
add
add
jo
testb
add
add
testl
add
add
add
add
cwtl
add
push
or
add
add
pop
test
add
and
cli
sahf
sbb
add
push
add
mov
add
add
imul
add
add
xchg
add
and
mov
xchg
fwait
add
dec
add
add
add
cli
add
dec
add
jbe
lcall
add
mov
add
stos
mov
imul
push
add
add
add
repz
add
add
add
add
addr16
add
add
add
add
mov
add
add
add
scas
add
add
add
roll
and
adc
sub
movl
mov
add
add
fdivr
pop
cs
add
test
add
add
mov
add
in
add
add
add
outsb
pop
add
mov
mov
cmpsl
add
xchg
add
mov
add
and
pop
or
fiaddl
push
add
and
add
add
gs
in
sbb
iret
add
add
add
movsb
add
loope
add
add
add
outsb
add
add
mov
scas
add
push
add
push
repnz
add
jne
add
add
add
xchg
add
adc
add
add
sub
add
xchg
push
movsl
xor
add
cmp
add
or
repnz
add
add
add
add
add
arpl
testl
dec
les
add
test
cli
add
and
add
add
xor
mov
roll
add
add
addb
jnp
cmp
add
mov
add
add
add
or
mov
pop
loope
rcr
loopne
add
mov
or
add
add
add
roll
in
stc
add
add
add
rolb
mov
outsl
add
add
pop
test
add
and
jl
into
add
dec
add
add
roll
add
mov
add
add
add
scas
mov
add
add
add
add
xlat
stos
add
add
sbb
add
jbe
add
cli
add
jl
add
stos
add
add
add
adc
or
add
test
adc
add
out
add
jmp
xorl
lods
add
add
push
aam
test
pop
dec
add
idiv
add
add
cmp
add
add
add
add
ds
inc
and
mov
imul
ret
mov
xor
loop
mov
pop
jecxz
inc
rcl
jo
mov
fsts
pop
addb
push
mov
push
out
scas
inc
inc
push
movsb
stos
push
pop
add
add
mov
push
movsb
lret
shlb
scas
lock
mov
or
gs
out
xlat
cwtl
lret
inc
movsl
dec
add
add
shr
dec
int
xchg
pop
stos
insb
fdiv
jg
leave
inc
dec
add
add
out
add
sbb
add
mov
in
xchg
or
pop
mov
test
popa
dec
mov
add
add
das
push
or
aad
jae
xor
js
jo
test
xlat
cmp
push
add
add
in
inc
inc
inc
push
xor
scas
out
xor
pop
in
dec
stc
add
add
xchg
mov
sbb
fwait
xor
pop
inc
fistpl
out
iret
xchg
fwait
xchg
cld
data16
std
mov
enter
add
inc
notb
pushf
pop
mov
jle
sbb
push
pop
iret
popa
dec
dec
xchg
push
push
sub
aas
jecxz
inc
xchg
insl
cmpb
add
pusha
mov
jb
lods
sbbb
movsl
xor
loop
hlt
dec
fstl
test
inc
push
stos
das
pusha
inc
cmpsb
cwtl
push
mov
push
push
test
xor
add
mov
add
add
lret
xchg
call
xorps
xor
loopne
lret
pop
scas
dec
pop
mov
add
add
jne
jle
add
add
push
add
add
sub
pushf
ljmp
sbb
repnz
pushf
mov
add
add
ss
test
call
push
xor
ret
in
fsub
dec
add
adc
dec
and
je
add
imul
add
add
test
cmp
ret
scas
push
xchg
xor
mov
add
add
rcll
mov
and
dec
xchg
and
push
mov
xchg
lcall
cmp
stos
add
add
stc
add
add
mov
add
add
cmp
dec
xchg
jbe
jle
or
cmp
gs
add
add
sub
stos
add
add
gs
pushf
sbb
mov
adc
lea
sbb
pop
sahf
and
add
push
ja
add
add
mov
inc
inc
testl
inc
in
call
outsl
mov
add
lds
sbb
jp
sti
push
sahf
rorl
pop
push
int
inc
lds
std
add
add
add
add
popa
mov
or
clc
adc
add
add
add
insb
negb
fimull
mov
nop
add
add
add
add
push
arpl
xchg
mov
cmp
add
add
or
daa
out
add
add
add
ror
mov
mov
jmp
add
add
add
pop
dec
add
out
and
shr
add
add
add
leave
mov
add
add
add
pop
add
lcall
add
sbb
addr16
add
add
add
add
test
mov
add
add
add
add
mov
add
mov
mov
add
add
adc
add
add
frstor
dec
adc
add
add
add
repz
stos
dec
fidivrl
fstpt
test
add
add
add
mov
jge
add
add
outsl
add
add
add
inc
push
sub
icebp
test
test
int
xchg
ljmp
test
cmpsl
push
nop
add
add
faddp
popa
jecxz
in
decb
addl
inc
jmp
xor
movsb
push
push
push
mov
ja
cmc
cwtl
or
add
add
push
pusha
sti
adc
add
add
add
add
pushf
add
add
leave
lcall
push
shr
divb
test
add
add
sbb
sbb
insl
xchg
into
push
add
add
cmp
add
push
lahf
jge
add
add
inc
imul
add
add
daa
lods
shrb
shlb
lcall
cmp
inc
repnz
into
sahf
test
push
mov
lods
mov
push
xchg
nop
and
xchg
cmp
and
push
gs
push
jns
mov
mov
out
jno
in
push
and
mov
pop
mov
xor
or
mov
mov
or
pop
xchg
mov
daa
push
xchg
or
test
add
add
and
mov
mov
je
add
add
mov
jbe
mov
xor
mov
push
hlt
imul
jno
add
adc
jl
nop
scas
pop
cmp
add
add
push
push
or
sarb
add
mov
add
xchg
jp
movsl
xchg
pop
stc
fiadds
add
add
add
add
sub
xchg
scas
jmp
sahf
or
leave
push
fs
movsl
add
sbb
inc
xchg
add
add
push
xchg
push
mov
dec
in
outsl
dec
jecxz
add
call
add
jae
cwtl
dec
or
hlt
int
out
dec
test
fs
lock
add
add
aam
outsb
lret
xor
mov
and
and
add
add
test
scas
test
movsb
das
add
add
jmp
push
or
jge
cwtl
addl
bound
add
push
add
add
fwait
mov
sbb
shll
fidivrs
mov
mov
pop
cwtl
dec
test
sar
mov
add
add
arpl
add
xor
add
mov
add
inc
add
adc
test
aaa
insl
xchg
hlt
add
add
pop
add
aad
jno
push
pop
add
cmp
ret
sarb
xchg
xor
mov
jnp
stos
into
push
xchg
enter
mov
lcall
int
sahf
inc
aaa
dec
push
imulb
data16
add
mov
push
mov
in
mov
test
scas
mov
scas
aaa
orl
ds
pop
fst
outsb
lahf
js
add
add
cld
inc
iret
pop
sahf
push
test
or
add
out
xchg
xor
call
pop
out
mov
add
add
aas
bound
cmpsb
jl
push
cmp
jp
sarb
jecxz
add
rolb
add
add
lea
dec
xor
into
leave
sbb
add
out
xchg
xchg
in
xchg
and
add
add
add
add
cmp
sbb
mov
xor
adc
clc
sbb
fcompl
leave
outsb
cmp
pop
cli
js
fisttps
sti
stos
enter
add
add
push
daa
loopne
movsl
add
rclb
in
add
add
stos
add
add
out
jle
sbbl
jno
jle
push
xchg
dec
inc
es
xor
and
lret
testb
add
loop
mov
xor
leave
mov
push
xlat
push
ret
outsb
cmp
popa
mov
push
adc
adc
cmp
jg
add
cmpsl
mov
pop
mov
bound
add
inc
add
push
add
add
add
add
pusha
cmc
popa
xlat
dec
stos
jp
mov
pop
mov
sbb
repz
cmp
fiadds
sbb
mov
idivb
out
outsb
dec
or
xlat
insl
cmp
add
add
xchg
fmull
sbb
add
test
xor
sbb
pusha
jae
loope
dec
inc
or
insl
mov
adc
scas
out
xor
add
popa
pop
mov
add
aam
or
push
adc
jp
fisubrl
mov
mov
pop
fiadds
add
scas
rcrb
xor
lods
test
sahf
cwtl
sbb
add
mov
fnstcw
xchg
xchg
js
add
add
mov
add
adcb
pop
add
add
add
pop
lock
cmp
add
sub
and
stos
mov
jl
movsb
lods
cmp
int3
add
add
xor
std
jmp
sbb
pop
int3
push
and
lods
push
pop
test
or
add
push
mov
cmpsl
sub
add
add
add
add
filds
add
add
add
out
jbe
inc
outsl
aaa
ds
add
add
add
add
add
into
or
add
cli
push
les
push
stos
jnp
add
lahf
cmpsl
imul
push
imul
ljmp
lcall
add
push
out
dec
mov
aaa
pop
push
ljmp
or
ss
add
call
add
jo
sub
push
cmc
stos
and
add
fsubl
cmp
loope
pop
push
and
adc
scas
sti
sub
mov
out
mov
dec
pop
cli
and
jmp
add
inc
lahf
or
add
add
xchg
aam
arpl
divl
inc
or
mov
int
add
xor
in
fidivs
in
ret
jp
or
cmp
dec
popf
push
push
push
and
fsubrl
lods
out
mov
push
fmuls
ljmp
je
mov
hlt
push
add
add
stos
xorb
add
lods
pusha
lret
add
icebp
mov
pusha
popf
jae
or
adc
xchg
iret
pop
mov
inc
popl
add
add
pop
add
jnp
mov
dec
hlt
popw
rcrl
jp
out
xor
insl
stc
addl
or
pop
out
popf
mov
sbb
icebp
sbb
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
repz
pop
scas
jp
sub
data16
mov
cltd
aas
xor
add
lods
pop
adc
arpl
ret
cli
stos
cmp
add
add
xchg
add
cmc
add
in
adc
fistl
push
mov
fiadds
pop
cmp
pop
lods
fs
fiadds
add
add
fisttpll
push
pop
shlb
jge
mov
in
cmpl
add
mov
push
add
stc
add
sbb
add
dec
add
mov
jb
or
gs
addb
cmp
enter
loopne
pop
add
inc
leave
add
add
jae
mov
mov
inc
xchg
rolb
orb
add
pop
imul
xlat
or
out
cmp
add
js
add
addb
rorb
add
adc
add
mov
sub
popl
iret
jmp
add
cmp
add
imul
nop
addr16
ds
push
rorl
fstpl
jns
inc
add
or
daa
push
mov
ret
dec
movsl
add
mov
pop
addr16
add
jg
add
fs
add
xchg
mov
sbb
in
cli
add
push
lret
subl
add
add
and
mov
add
add
stos
test
add
add
lock
mov
das
loope
in
dec
pop
push
add
add
and
adc
add
add
add
add
add
aam
pop
add
add
pop
faddp
jae
add
add
add
add
popa
cmp
add
pop
fiadds
paddw
add
add
add
repz
add
or
add
add
rorb
cmpsl
add
add
inc
fdivrs
iret
add
add
js
xchg
add
add
lcall
jne
add
add
push
aas
add
add
dec
mov
add
and
mov
mov
add
add
and
cld
add
add
cli
stos
pushf
push
jl
movsb
add
push
rolb
fwait
nop
sub
add
idiv
dec
fildl
add
pop
mov
add
add
mov
dec
add
jmp
add
add
testl
sahf
add
add
rolb
mov
pop
add
or
add
scas
xor
add
cs
add
add
push
fcoms
clc
sbb
mov
add
ret
cmp
add
in
adc
mov
das
mov
das
add
add
mov
adc
mov
add
add
mov
inc
mov
add
pop
lods
sub
add
sub
mov
add
cmp
add
cmc
inc
add
push
jg
xor
mov
lret
xor
sub
sub
add
ss
stos
cmp
pop
lods
push
repnz
cmpl
sbb
sub
sbb
in
and
call
xor
das
in
pop
and
mov
lea
add
add
enter
cwtl
arpl
xchg
jl
xorb
or
push
cmpsl
cwtl
setns
mov
leave
sti
mov
mov
add
add
add
stos
or
pop
leave
adc
sub
add
testb
lock
rcrb
jecxz
mov
dec
xchg
xlat
call
add
aas
mov
or
adc
fcompl
inc
adc
inc
xchg
sbb
cs
mov
push
ljmp
xchg
jmp
les
xchg
pop
add
rclb
or
pop
push
pop
or
aam
daa
lret
mov
imul
scas
cwtl
popf
in
cltd
aaa
jbe
lods
test
dec
pop
outsb
jbe
add
or
pop
mov
movsl
inc
pop
ror
push
inc
shrb
sub
lock
js
test
mov
jae
std
xor
rep
xchg
xchg
xchg
int3
push
adc
adcl
cmpb
subl
shll
add
mov
fadd
imul
jbe
ss
stos
fwait
dec
inc
lods
rclb
mov
out
sbb
push
sahf
push
cmp
packuswb
cld
or
jb
mov
stos
das
fdivrl
test
movsb
in
dec
push
sbb
jae
stc
adc
xchg
leave
or
adcl
mov
add
adc
cmpsl
sub
dec
push
hlt
fcompl
or
dec
jle
mov
jbe
fwait
cs
test
pop
sub
and
xchg
xchg
inc
cmc
enter
cltd
xor
aas
cli
out
push
adc
jb
xchg
pop
inc
cli
loope
xor
dec
mov
dec
lahf
nop
jae
pop
fwait
sub
mov
push
fcoms
fwait
pushf
push
adc
mov
roll
mov
sahf
fldcw
lret
or
push
add
add
add
add
add
add
add
add
addl
clc
mov
add
add
add
sbb
cltd
add
fwait
iret
add
adc
int
add
add
add
add
popl
add
or
add
popa
add
add
or
add
clc
add
and
adc
test
mov
dec
add
dec
add
push
add
add
add
add
add
mov
cmp
fildl
test
call
add
sub
fiadds
inc
add
add
add
add
test
and
stos
add
add
add
sbb
mov
add
mov
add
add
add
add
add
add
or
ljmp
add
in
pop
add
add
jne
nop
add
add
add
add
add
xchg
fiadds
push
sbb
add
add
add
add
add
movb
add
add
add
add
push
add
add
leave
add
add
add
add
add
add
add
add
add
add
ds
mov
add
repnz
add
add
add
add
add
push
add
add
add
add
aad
add
movsb
add
add
add
add
add
add
add
add
add
add
into
add
jnp
add
add
add
add
add
push
jo
add
add
add
push
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
push
sbb
add
add
add
add
add
nop
add
or
add
add
mov
add
stc
add
add
add
add
add
push
jo
add
add
mov
adc
add
pushf
cmpsb
add
add
add
add
aam
scas
add
add
jnp
mov
aaa
add
add
cltd
imul
lret
bound
out
add
add
dec
add
add
add
add
add
add
fstl
add
sbb
add
add
sbb
addl
add
add
jp
add
push
roll
testl
stc
add
add
pop
repnz
add
add
add
add
add
lods
and
aad
push
add
pop
loopne
outsl
or
add
in
leave
add
add
add
add
add
add
add
add
add
add
add
std
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
dec
add
add
add
add
add
add
add
mov
add
adc
add
xlat
add
add
add
add
add
arpl
add
sbb
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
popa
add
add
add
sbb
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
repnz
add
add
add
fsts
add
add
add
lock
add
add
xchg
filds
add
add
add
mov
add
push
clc
add
add
es
add
rcr
adc
and
add
add
add
fildl
add
mov
push
sub
add
push
inc
add
add
add
dec
cmpsl
add
add
add
and
add
add
dec
push
loopne
jb
add
add
add
or
mov
add
add
xor
add
push
pop
int3
imul
scas
icebp
add
inc
add
es
