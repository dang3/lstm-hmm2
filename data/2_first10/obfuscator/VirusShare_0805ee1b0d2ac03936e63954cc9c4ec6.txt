add
adc
or
push
je
imul
add
add
xor
pop
and
pop
inc
pusha
push
mov
sub
xor
push
and
push
dec
bound
push
arpl
subb
shlb
les
call
testb
je
mov
or
std
pop
xchg
fs
push
mov
push
cmpl
jne
push
push
call
enter
add
lret
sbb
mov
xchg
or
mov
add
lea
inc
roll
mov
and
inc
cmp
fs
cmp
jle
addr16
pop
nop
insb
push
inc
ja
mov
fsubr
popf
iret
xchg
test
push
or
push
addr16
or
adc
push
add
mov
sbb
push
mov
push
push
push
adc
or
ret
nop
push
andnps
icebp
out
and
call
add
push
pop
mov
icebp
push
or
outsl
or
ret
inc
adc
mov
mov
aam
add
inc
add
adc
and
and
fwait
mov
cmp
jne
clc
push
sub
pop
pop
pop
mov
adc
mov
xor
cli
into
xor
dec
insb
call
int
bound
add
movsb
cmpl
sbb
cmp
jmp
mov
add
xor
or
sub
jmp
sub
test
scas
and
stc
outsl
jl
sti
cmp
and
or
aam
sar
movsl
xchg
jmp
push
or
jle
sbbl
xchg
mov
nop
lock
jge
push
mov
insb
adc
out
or
pop
xchg
add
add
and
dec
push
rclb
std
jne
mov
test
je
add
mov
insb
movsb
fs
mov
mov
dec
pop
stc
stos
rcll
and
call
popa
cmp
push
orl
pushf
mov
sahf
xorl
ja
cmc
std
push
inc
bound
aad
aas
in
movsb
dec
adc
in
jecxz
or
add
jmp
ljmp
vcvtsi2ssl
push
sbb
repz
xchg
pop
out
ja
xchg
movb
jnp
xor
inc
push
mov
or
imull
jne
push
call
xchg
movl
mov
or
cmp
pop
pusha
add
in
adc
sbb
dec
sbbl
and
mov
xchg
sbb
dec
adc
repnz
mov
ljmp
add
ja
dec
mov
loop
mov
dec
loope
mov
inc
fists
iret
cmp
pop
cmp
adc
sti
pop
xchg
jbe
decb
add
push
inc
pop
inc
adc
notb
push
call
mov
mov
xchg
mov
cmpsb
je
sub
add
repz
xor
sahf
jmp
sbb
cmp
sub
inc
test
sbb
and
jge
or
std
sub
addl
and
and
rcll
sub
inc
sarb
aas
push
xchg
add
cmc
pop
aam
cmp
cld
jg
sub
sub
pop
mov
mov
je
cli
inc
dec
in
or
ds
sti
pop
xor
leave
stos
add
idiv
xchg
das
and
int3
arpl
cmp
int
movsl
and
es
adc
adc
mov
cli
mov
xchg
je
dec
adcb
test
mov
fimull
test
movsb
push
mov
fildl
sbb
aaa
or
push
mov
dec
xor
mov
out
call
aam
test
nop
je
andl
mov
incl
pop
jmp
imul
jne
and
xor
jnp
nop
insb
cmpl
test
adc
inc
and
or
and
and
dec
dec
xorb
lds
jecxz
ss
push
or
cmp
jae
std
rcl
sub
int
cltd
fstps
int3
mov
fildll
fldt
je
mov
ret
int
xor
sub
inc
dec
lods
movsl
adc
lods
notb
repnz
cmp
xchg
dec
jmp
jnp
mov
in
pushf
jne
push
pushl
cmp
sub
cmp
or
mov
adc
adc
adc
or
xchg
xchg
js
push
js
andb
sbb
test
mov
adc
add
xor
cmp
cmp
mov
lahf
add
add
mov
mov
push
xchg
mov
ret
in
test
pop
and
push
jl
stc
adc
test
rcl
rcrb
data16
push
push
call
or
adc
cmp
aad
and
mov
out
test
or
mov
je
xorb
mov
push
notl
adc
jmp
or
aad
or
rorl
and
pop
and
sbb
adcl
or
cmp
jo
add
test
jns
add
xchg
stc
add
je
mov
jmp
pop
movsb
adc
sbb
pmuludq
testl
adc
mov
pusha
in
shll
add
adc
call
dec
push
mov
inc
lret
add
sbb
add
cli
adc
add
xorl
mov
sub
jl
inc
or
or
or
sbb
add
sbb
xor
jg
pop
add
add
outsb
or
jne
sub
add
mov
call
dec
or
add
andl
mov
or
xchg
or
je
sub
add
fcmovb
push
push
sub
test
jne
testb
std
and
cmpsl
jb
sub
cmp
lods
push
inc
push
call
faddp
push
in
cmp
add
test
and
mov
and
add
adc
fs
pop
gs
or
movsb
mov
xchg
dec
or
mov
sbb
or
mov
nop
cmpsl
inc
andb
dec
gs
aaa
sub
test
clc
into
jl
jge
icebp
hlt
jge
mov
pop
add
je
sti
add
ljmp
mov
lods
insb
and
sbb
sub
arpl
cmpsb
lods
std
push
add
or
imul
mov
subb
jle
ret
mov
or
dec
push
mov
push
or
mov
push
add
sub
dec
mov
xchg
aaa
mov
test
dec
dec
ret
gs
test
mov
pop
pusha
lahf
sbb
dec
cmp
xor
adc
stos
ja
cld
sub
jg
or
push
pop
ljmp
xor
rorl
inc
jle
or
cmp
mov
test
sub
rcl
sbb
add
adc
and
cltd
std
arpl
inc
push
xchg
nop
push
pop
lea
movsl
pop
loop
call
loopne
xlat
mov
adc
mov
or
push
roll
fsubs
xor
dec
sub
add
int3
and
or
ljmp
pop
or
pop
push
ds
imul
ja
ds
add
dec
adc
mov
icebp
call
imul
push
icebp
adc
add
bound
leave
and
fcomps
lea
xor
bound
inc
clc
sub
cmp
push
je
adc
stos
shlb
push
jbe
ljmp
mov
mov
pop
adc
mov
or
xchg
or
loope
cmc
inc
adc
arpl
or
fwait
aad
jne
sbb
lods
lcall
cmp
cmpl
inc
arpl
xor
add
sub
adc
mov
aas
cmp
jmp
adc
add
loopne
movl
fs
roll
xchg
call
sar
inc
mov
in
cmp
sbb
dec
jle
pop
gs
push
push
xor
cmpsb
das
add
call
je
out
or
or
pop
enter
push
and
inc
and
and
add
data16
pop
fiaddl
xchg
adc
xchg
mov
dec
mov
test
jns
test
add
and
jne
sbb
enter
imul
es
cmp
or
dec
lods
or
mov
movsb
push
mov
sbb
xchg
jmp
xchg
jmp
adc
or
xchg
lcall
and
and
adc
lock
mov
mov
push
push
mov
dec
nop
push
inc
pop
sar
and
adc
negw
or
pop
jb
pop
jmp
inc
and
xchg
ljmp
mov
or
jmp
or
les
mov
add
mov
icebp
aam
or
call
nop
or
ret
inc
sbb
sahf
and
lods
sub
cwtl
and
xchg
ja
loop
lahf
mov
cmp
nop
jno
push
inc
adc
mov
jle
call
jo
cmp
inc
mov
test
daa
je
xor
cli
add
cld
inc
or
aaa
orl
add
js
or
jge
push
push
or
and
adc
add
inc
ret
daa
cli
add
dec
and
rorl
rcrb
jne
in
and
inc
mov
movsb
in
fs
fdiv
ret
movl
mov
and
fwait
movsb
mov
orb
xlat
sub
pop
call
cmp
or
adc
xor
sysenter
lea
push
xor
sub
enter
mov
add
ljmp
jmp
test
add
dec
pop
movups
push
xchg
sti
jmp
js
mov
lret
test
inc
lahf
jno
jl
jns
inc
push
sbb
sub
test
add
add
aaa
inc
sub
lock
stc
bound
or
dec
xchg
sbbl
stos
clts
pop
cmp
jl
pusha
in
sub
pop
stos
lret
inc
and
and
dec
cmpsb
shlb
jecxz
outsb
clc
ds
cmp
pop
push
adc
faddl
fmul
cli
lret
cwtl
test
iret
stc
les
add
jmp
sub
sbb
xchg
orb
adc
adc
jmp
sahf
xor
xchg
jns
test
and
adc
in
dec
adc
test
sar
rolb
ss
pushf
dec
push
ret
pop
fs
lock
add
js
dec
adc
and
and
sti
mov
jo
and
bound
lea
jle
jb
xor
adcb
test
or
sub
rorb
inc
add
out
mov
out
inc
je
xor
call
or
cwtl
sbb
push
mov
push
xor
pop
or
ret
push
jmp
xor
jne
jmp
out
jo
adc
out
cs
adc
dec
adc
clc
nop
jecxz
adc
sub
or
dec
lcall
or
jne
ret
xchg
cwtl
cmp
call
lods
and
lcall
push
push
push
call
cmpl
pop
jne
xor
sub
fcomps
call
pop
push
add
mov
imul
push
das
nop
adc
ret
cmp
xchg
pop
add
xchg
xlat
out
cmp
ja
je
sub
pop
js
rep
incl
and
mov
inc
je
cld
xchg
sbb
adc
sbb
clts
int3
inc
cld
inc
push
dec
data16
add
sub
dec
clc
xor
lahf
add
pusha
cli
fsubr
dec
sbb
pop
pop
push
and
loopne
dec
jle
and
sti
push
sarl
mov
fcompl
pushf
adc
arpl
xor
and
jb
cmp
pop
ja
mov
adc
or
call
ljmp
and
je
xlat
js
hlt
sbb
nop
jmp
mov
imul
in
dec
push
adc
or
mov
mov
inc
add
je
mov
cmp
sub
loop
add
and
pop
pop
pop
hlt
push
or
or
sub
and
in
jmp
add
sub
or
ja
cmp
test
lea
fsubrs
dec
sbb
jmp
int3
push
testl
dec
pop
sub
cld
inc
aaa
inc
inc
jb
mov
sub
sbb
add
or
adc
add
or
add
push
aad
inc
add
mov
test
subl
repz
mov
sub
push
in
addl
dec
je
outsl
adc
lea
and
test
push
lret
data16
or
add
paddq
test
sub
je
stos
fcoms
and
jmp
cld
mov
inc
scas
inc
adc
mov
inc
stc
and
stc
jmp
fnstsw
xor
inc
adc
out
mov
add
jb
aas
cmp
enter
or
adc
cmpps
xor
add
mov
imul
sbb
rorb
xchg
and
mov
and
adc
subl
test
and
out
sub
pop
jecxz
xor
add
leave
sbb
cs
inc
jbe
imul
shlb
call
mov
add
lods
inc
addb
xlat
fadds
lods
outsb
xor
js
xchg
mov
or
push
push
mov
ret
hlt
mov
popa
push
pop
iret
push
inc
enter
mov
hlt
cmp
mov
daa
lret
into
pop
hlt
test
or
pop
hlt
in
or
mov
dec
addr16
leave
repnz
rclb
outsl
cld
gs
sahf
mov
sub
imul
dec
aaa
pop
js
mov
add
stos
mov
cmp
jmp
xchg
test
stos
pop
add
jg
mov
add
daa
cmp
jl
xor
cmp
call
dec
mov
jle
push
inc
add
sarb
pop
jbe
int3
repnz
test
nop
fneni(8087
daa
cmp
clc
scas
adc
cli
pop
pop
pushf
mov
pop
inc
mov
fs
add
repz
loope
jp
jp
cmp
addb
fdivrs
mov
xchg
push
cmpsb
scas
mov
pop
pop
or
addl
xchg
cmp
xor
push
in
cmp
sahf
xchg
pop
add
push
movsl
mov
aaa
popa
jl
add
and
addr16
repz
mov
subb
add
mov
push
pusha
les
aad
bound
xor
ret
mov
pop
dec
cmpl
pop
jne,pt
add
loop
and
or
push
dec
aas
pop
mov
and
stc
adc
hlt
movzwl
mov
lea
push
push
xchg
sub
xchg
mov
push
test
rclb
movsl
sub
mov
movl
mov
push
mov
lret
pop
push
insb
mov
jmp
out
mov
sar
loopne
push
clc
pop
cs
pop
or
aam
adc
or
push
dec
inc
push
push
inc
add
pop
inc
outsl
jb
popa
cmp
fs
push
dec
rolb
push
dec
popa
jae
push
mov
add
sub
dec
or
shlb
leave
mov
push
inc
rep
leave
inc
or
sbb
push
push
shr
enter
cmp
xchg
or
sbb
mov
push
adc
shlb
lds
adc
loopne
pop
mov
aaa
or
call
pop
cmp
mov
stos
rorb
rclb
jmp
pop
mov
stos
cmp
mov
push
adc
and
clc
sbb
in
cmp
aam
sbb
ret
sbb
adc
adc
xor
xchg
sbb
jne
call
cmp
cmp
jbe
jp
in
push
xchg
mov
mov
data16
movsl
inc
mov
dec
stos
nop
dec
add
inc
test
call
rcll
add
gs
addl
add
scas
ret
xchg
xlat
add
pop
add
sub
lock
cld
divl
shr
or
inc
data16
repz
sub
cmpb
push
bound
inc
stos
xor
or
pop
les
push
outsb
call
cmp
push
icebp
pop
pop
loope
sbb
push
push
ss
add
mov
mov
mov
enter
movl
rorl
pop
or
pop
xor
inc
add
xor
or
je
or
pop
pop
call
inc
add
adcl
lods
nop
or
rorb
add
call
cmpb
adc
cltd
popl
call
sbb
push
call
push
bound
push
push
cmp
adc
pop
push
loopne
sbb
mov
pop
push
push
lret
fistps
add
jmp
jmp
inc
movsbl
ds
out
pushf
bound
imul
mov
pop
pop
mov
sub
push
and
loop
pop
test
push
lds
bound
enter
mul
ds
scas
jne
cmp
inc
mov
int3
dec
adc
je
cld
call
imul
test
mov
adc
out
mov
cmpl
push
je
call
out
sbb
inc
jbe
pushf
das
ja
and
sbb
in
loopne
enter
mov
jnp
lret
xor
stos
push
pop
cmp
or
es
or
loopne
mov
or
add
nop
clc
push
nop
push
jns
xchg
sbb
fistl
push
fstpl
mov
mov
sub
pop
adc
scas
dec
cmpsb
fsubl
mov
inc
imul
xchg
data16
rorb
add
adc
add
dec
mov
leave
xlat
or
xor
dec
iret
lcall
fisttps
call
cmc
sbb
cmp
or
fsubs
add
push
push
push
fs
pop
pop
insl
add
and
xor
mov
movsb
mov
add
andl
xchg
mov
or
scas
ret
lock
dec
clc
xor
or
adc
lea
jne
pop
sub
je
pusha
and
and
ret
shrl
mov
xor
pop
lret
or
in
rorl
xor
sub
je
test
or
adc
add
mov
cmp
jmp
add
sub
jb
out
loope
cmp
adc
sub
inc
adc
push
and
cmp
std
nopl
push
cmp
mov
enter
leave
cmc
loope
icebp
and
iret
icebp
push
lahf
and
pop
xlat
pop
push
pop
into
pop
adc
fcomps
push
pop
ficompl
or
fstps
push
adc
loope
inc
xor
movsb
mov
push
or
aam
addr16
ret
enter
or
cld
shlb
xor
sub
push
lret
and
xor
es
int
cmp
add
hlt
inc
sbb
je
sti
jno
and
mov
std
out
sbb
sbb
int3
sub
or
inc
push
adc
scas
or
xchg
popa
xor
add
andb
in
mov
mov
and
cwtl
sbb
cmp
dec
jne
jo
pop
jp
or
cmp
jne
cmc
and
insb
or
or
xor
xor
out
or
test
jle
dec
mov
add
push
lcall
dec
jmp
sub
add
cmpsb
xchg
or
and
pop
mov
mov
xchg
xor
inc
ljmp
sbb
sbb
shrl
in
dec
pusha
adc
daa
mov
movl
sbb
jo
mov
dec
mov
push
stc
sub
cmp
gs
xchg
lahf
ret
push
clc
add
mov
lea
mov
push
push
mov
add
mov
loopne
add
or
jmp
pop
imul
sub
pop
or
add
adc
jmp
mov
push
mov
mov
test
rorb
sub
dec
xchg
push
sbb
sbb
add
sub
lock
sbb
and
push
push
mov
ljmp
xchg
sbb
dec
scas
test
rolb
push
and
aaa
mov
movsl
pop
leave
mov
adc
mov
nop
push
add
add
or
popf
adc
hlt
and
adc
mov
or
out
push
push
push
call
std
lcall
loopne
xchg
and
and
push
or
push
mov
add
out
mov
mov
ret
push
cwtl
loopne
sub
jbe
cmpl
mov
shlb
mov
call
jne
cmpsb
or
mov
call
xor
and
mov
mov
jo
dec
mov
sub
add
mov
sarb
sbb
imul
inc
std
cmp
stc
je
or
push
or
cld
xor
test
je
call
cmp
nop
mov
or
or
mov
fiaddl
lock
sti
daa
bound
pop
jmp
stos
push
mov
pop
inc
mov
jmp
mov
or
in
clc
dec
add
dec
jl
lock
mov
xchg
call
fs
and
adc
push
sbb
add
inc
push
sub
sub
sahf
lcall
push
popa
and
inc
jg
cmp
cs
jno
pop
enter
sbb
aam
pop
in
jmp
fnstcw
xchg
adc
dec
inc
mov
inc
or
jle
sub
fs
enter
sbb
insl
or
incb
push
das
sub
pop
movw
rorb
mov
mov
adc
popf
sbb
incl
xlat
stc
cmc
mov
or
aaa
stos
popf
ret
out
mov
loopne
or
push
push
into
inc
or
mov
lea
push
push
add
sbb
das
int3
icebp
clc
lds
and
outsb
add
add
sub
shlb
xchg
dec
call
jl
sub
dec
xbegin
daa
jmp
ds
fistpl
sar
imulb
sbb
sbb
sub
xor
adc
addr16
adc
jns
adcb
mov
rclb
fcoms
and
cmp
mov
sbb
add
addl
call
rcrl
int
inc
lock
inc
xor
bound
or
pop
or
or
jmp
or
dec
add
cmp
cld
cmpsb
cmp
push
sbb
popa
repnz
mov
add
xor
xchg
inc
sbb
add
inc
rorb
sbb
repnz
je
lcall
add
cmp
incb
cmp
cwtl
mov
adc
cwtl
in
sub
ret
sub
inc
mov
push
pushf
mov
xor
sbb
adcb
sbb
cld
dec
jmp
mov
add
and
iret
sbb
insb
sub
imul
dec
push
cmp
pushl
add
dec
jmp
cs
mov
pushf
sbb
repnz
test
push
cmp
cmc
dec
jne
arpl
mov
lcall
mov
xchg
hlt
loopne
sub
popa
add
add
jecxz
xor
sub
push
add
sbb
fidivrl
sub
mov
sbb
fnstcw
adc
sub
fidivl
jmp
xor
call
jns
adc
sbbl
mov
dec
sbb
popf
and
jne
mov
or
loopne
test
xchg
sahf
xchg
jecxz
add
jo
cmp
pop
jmp
adc
shll
aas
adc
icebp
jl
scas
add
pop
in
int3
fmull
cld
xchg
xor
push
xor
call
fnstcw
test
or
xchg
add
loop
push
and
fmuls
push
mov
adc
cmp
mov
adc
fcom
adc
daa
test
in
xchg
push
or
mov
mov
or
mov
adc
imul
shlb
push
mov
push
push
mov
pop
dec
add
mov
xchg
push
or
jbe
cvtps2pd
pop
adc
inc
mov
push
xchg
push
bound
into
jg
test
sti
push
mov
push
inc
or
scas
sbb
add
ja
xor
sub
and
push
repz
push
xor
or
pop
flds
xor
ljmp
sbb
mov
aas
lock
addl
inc
inc
sbb
push
cmp
adc
inc
icebp
jmp
xor
pop
addl
pop
pop
je
adc
push
mov
or
fs
or
adc
cmc
or
pop
insb
insl
cmp
pop
xor
dec
or
daa
pop
pusha
xchg
mov
jo
mov
test
mov
ret
subb
push
sbb
sub
and
jne
push
and
inc
aam
adc
mov
adc
xchg
xchg
lock
jne
ss
std
outsl
or
js
scas
pop
int3
mov
push
lahf
dec
or
hlt
add
sub
nop
and
out
je
mov
inc
ret
adc
pop
jne
xchg
mov
pop
mov
fists
icebp
or
sbb
or
push
test
cmp
jl
push
push
aam
decb
sub
lods
cmp
cmpsl
je
rorl
push
adc
ss
cmpb
cmp
vmread
and
test
add
sub
cmpb
xchg
notl
adc
mov
movb
lea
inc
add
push
leave
mov
jb
cs
sub
add
add
inc
cmp
lahf
aas
inc
push
push
push
xor
add
push
push
sbb
mov
inc
dec
and
call
inc
jmp
daa
lds
add
inc
push
cmp
movb
push
sub
dec
xchg
dec
fwait
mov
inc
mov
xchg
inc
in
inc
sub
rclb
test
sbb
mov
and
cmpsl
dec
sbb
cmp
subl
fs
imul
addr16
popa
jae
dec
mov
adc
loopne
adc
adc
xor
rolb
movb
and
push
sub
pop
inc
sbb
call
mov
inc
mov
and
push
cmp
xchg
scas
sbb
jbe
mov
test
adc
mov
xor
out
jl
dec
mov
and
and
std
rcll
push
xor
lds
or
and
ret
jmp
out
mov
push
popa
or
xlat
rorl
fs
scas
mov
adc
test
xor
cmpb
hlt
jge
mov
data16
and
mov
les
jmp
dec
cmpb
cs
inc
adc
fdivs
or
mov
sbb
fmuls
ret
adc
call
push
push
enter
leave
push
push
je
sbb
mov
xchg
sbb
cli
rcrb
nop
or
cmpsl
ss
cmp
les
push
cwtl
push
push
outsl
add
ja
jb
jle
push
inc
push
arpl
iret
divb
test
xrelease
and
call
mov
cmpl
mov
nop
pop
mov
test
pop
clc
xchg
mov
push
or
and
out
es
imull
cmp
mov
jbe
push
mov
push
scas
iret
mov
shrl
je
inc
jbe
dec
inc
bound
add
mov
adc
mov
add
mov
cmp
ja
push
or
adc
push
into
sub
and
out
push
ret
fs
or
cld
daa
int3
mov
pop
jnp
xlat
add
sub
cltd
inc
test
call
or
lahf
enter
mov
fists
in
sbb
negb
inc
xchg
xor
lods
das
push
movsl
pop
test
push
push
jg
push
cmc
push
push
ror
aas
inc
lock
scas
cmp
cld
negb
dec
in
ss
test
xor
repz
mov
insl
jmp
inc
popf
dec
add
and
in
adc
xchg
imul
loopne
and
mov
jo
cmp
mov
cmpsb
nop
sub
cvtpi2ps
lahf
adc
add
jno
jnp
ss
inc
jo
fs
mov
push
lods
inc
fcmovne
faddl
or
cmp
mov
xchg
jno
xchg
or
xor
int
mov
fs
adc
and
add
sbb
lock
clc
sbb
or
mov
sbb
call
mov
movaps
aam
popa
and
adc
mov
inc
xchg
loopne
and
mov
call
or
cmpl
push
loop
imul
mov
adc
ds
push
mov
sarb
add
mov
adc
adcb
jo
add
mov
or
outsb
test
je
sbb
mov
push
pop
adc
inc
shr
add
push
xchg
sbb
mov
addl
cwtl
and
pushf
and
shrl
mov
fs
pop
xchg
int3
mov
xor
and
lcall
mov
xchg
mov
adc
cmp
and
insb
xor
sbb
xchg
inc
inc
mov
pushf
inc
test
sub
jo
and
push
add
icebp
jb
cmp
sbb
mov
and
xchg
test
cli
cmp
sbb
mov
and
mov
loope
loop
jecxz
in
in
out
inc
out
call
in
jb
cmp
sbb
mov
and
xchg
ror
shl
shll
cmp
sbb
mov
and
xchg
fxch
cmp
sbb
mov
and
xchg
ror
in
jb
cmp
sbb
mov
and
xchg
leave
enter
jb
cmp
sbb
mov
and
in
jb
cmp
mov
mov
in
jb
cmp
mov
dec
loop
xor
push
dec
or
out
je
lods
pop
dec
repnz
fistpll
jl
mov
or
adc
notl
xor
add
or
arpl
add
outsb
adc
idivl
adc
dec
push
inc
or
popa
jo
out
mov
and
pop
pop
or
dec
jne
xor
gs
adc
jns
sbb
mov
scas
push
and
mov
mov
or
ja
mov
adc
or
jl
testb
fmuls
and
push
jno
pop
pusha
enter
or
push
nop
mov
xor
dec
adc
inc
inc
imul
outsl
sub
push
cmc
add
push
popa
outsb
xchg
pop
mov
sbb
dec
push
jbe
adc
pop
je
dec
stc
test
or
sub
inc
mov
nop
cwtl
jnp
and
and
fs
jo
lock
pop
enter
movsb
mov
sarb
dec
dec
pop
rorb
xchg
insb
xchg
popa
nop
insb
push
mov
ljmp
pop
nop
clc
pop
pop
enter
mov
pusha
jge
outsl
repz
pop
movsb
or
or
xor
or
pop
inc
test
mov
pop
fs
rorl
mov
fadds
dec
aas
xor
mov
loopne
inc
inc
pop
arpl
mov
insb
popa
xchg
mov
mov
xchg
int3
leave
jb
jns
gs
les
rorb
push
je
arpl
push
nop
and
pop
cmpsb
inc
mov
je
imul
js
pop
fs
enter
popa
sbb
in
mov
aam
ljmp
ret
popa
outsl
mov
push
xchg
add
push
push
pusha
test
andl
mov
fs
xlat
or
in
jg
in
fimuls
or
rolb
adcb
push
cs
xor
xor
dec
or
or
jns
push
inc
insb
jmp
pushf
sub
dec
add
and
push
sbb
pop
in
adc
mov
sub
fs
call
loop
fisttpll
leave
jne
or
jns
adc
fsubr
hlt
lea
mov
ret
mov
push
xor
idivl
xchg
arpl
add
pop
mov
adcb
pop
pop
sub
in
add
add
mov
rcl
jmp
add
cli
gs
cltd
xor
testl
cmp
jo
add
mov
negl
cmpl
xor
call
ljmp
mov
add
fnstcw
mov
orw
sub
inc
mov
call
xor
fs
fstpt
addr16
or
sbbl
faddp
setb
jmp
outsb
icebp
dec
int
jmp
stc
mov
cld
xor
mov
push
cs
rcrl
loope
cwtl
insb
add
fnsave
je
jbe
sub
pop
lret
and
or
iret
lret
js
push
pop
push
loopne
aam
call
popl
jmp
aam
sub
xor
mov
mov
cltd
pop
in
cmp
push
pop
jle
mov
aas
ret
xlat
orl
push
xor
xlat
pop
xor
sbb
jne
dec
jecxz
push
jg
jnp
int3
xor
lahf
sarl
jno
aas
add
push
lea
mov
pop
adc
sub
icebp
pop
cmp
popa
shr
push
sub
add
add
or
inc
clc
cld
clc
push
daa
call
mov
or
insl
clc
fsubrs
data16
sbb
push
mov
sbb
out
inc
dec
or
add
dec
sbb
ret
xchg
mov
jg
jg
push
xchg
jae
xor
test
enter
inc
push
syscall
xchg
call
jns
and
test
cmp
pop
jne
inc
sub
std
test
or
push
push
mov
orb
pusha
xlat
insl
lret
xor
or
push
dec
and
pop
repz
mov
mov
push
mov
sub
mov
sbb
or
push
add
je
fildl
andb
jnp
add
or
inc
mov
shll
fcoms
mov
pop
jbe
mov
rorl
mov
sbb
les
sub
aaa
add
cmp
jbe
push
and
push
mov
hlt
shrb
leave
call
les
in
xor
mov
cmp
sbb
imul
fdivs
stc
movl
push
test
cli
or
dec
lock
pop
xor
jge
or
lock
or
je
xchg
inc
cwtl
mov
cmp
add
mov
sub
jmp
das
repnz
lea
decb
cli
sub
fsubrl
cmp
or
hlt
shll
lods
jmp
mov
mov
fldcw
mov
sub
xor
push
push
cli
xchg
sbb
dec
mov
xor
cmpb
pop
or
jl
add
push
je
sub
and
stos
push
push
or
jge
repz
push
cli
cmpsl
popa
sbb
pop
pop
mov
mov
xorl
cmp
imul
push
movzbl
add
call
xchg
in
pop
jmp
dec
cmp
adc
or
jl
aam
sbb
inc
lret
and
mov
pop
dec
cmp
push
rcrb
or
xor
pushw
pushf
pop
push
push
add
xchg
dec
push
mov
inc
adc
enter
mov
push
push
and
dec
and
pop
adc
inc
ja
mov
repz
fsubrs
shl
cld
repnz
mov
hlt
jne
add
faddl
xchg
cmpb
sub
pop
je
inc
adc
push
sbb
cli
mov
or
sub
insb
cmpsl
insb
pop
jo
test
inc
js
push
jmp
stc
push
jecxz
jno
adc
aad
test
cmpl
add
mov
daa
imul
add
xor
and
lods
add
enter
sarl
push
aad
in
push
lsl
jne
and
imul
pop
jp
cld
jle
test
sti
or
cmp
ja
mov
and
and
cmpsb
mov
mov
sub
pop
inc
push
or
mov
jmp
add
jmp
jo
jo
fstpt
push
inc
je
push
push
inc
mov
inc
out
in
cmovle
testl
add
adc
sub
and
sub
int3
js
popf
movsb
sahf
adc
and
mov
clc
mov
and
push
repnz
iret
mov
rol
xchg
ret
xor
fsubl
ja
xchg
das
dec
sbb
shlb
push
gs
xchg
daa
dec
notb
and
xor
in
leave
mov
or
xlat
call
mov
movsl
jmp
push
mov
push
wbinvd
add
dec
je
dec
sub
mov
sbb
in
loopne
lock
add
sbb
cmp
mov
xor
cld
lea
rcrl
jmp
and
les
fwait
add
ret
jmp
add
test
sub
push
inc
daa
sub
call
xchg
jge
movups
adc
lea
and
imul
mov
imulb
scas
or
or
sub
sub
in
add
mov
xor
mov
orl
inc
dec
cmp
cmp
add
jg
dec
mov
stos
ds
or
pop
pop
pop
xchg
aam
mov
xchg
mov
mov
lock
or
mov
mov
lock
or
nop
stos
pushf
leave
mov
mov
test
and
jge
es
and
push
jbe
cwtl
xchg
daa
dec
add
add
call
jge
movzwl
sub
adc
jae
push
pop
call
mov
mov
dec
mov
jmp
ret
pusha
das
pop
adc
or
or
mov
jle
add
test
xor
or
shrl
gs
icebp
imul
or
into
dec
cmp
cmp
lods
or
or
mov
in
or
shll
stos
test
pop
mov
aam
xor
jg
cmp
jl
xchg
cs
sbb
cmpb
dec
cmp
fstps
repz
sbb
inc
lea
je
adc
clc
or
mov
inc
push
stos
or
lret
sub
cld
fs
mov
or
lods
dec
repz
sbb
xchg
fadds
or
inc
in
mov
call
addr16
dec
mov
ds
or
jb
mov
das
xchg
mov
jmp
xchg
out
add
or
add
repz
inc
les
push
dec
je
dec
jne
hlt
mov
mov
ss
call
mov
stos
jecxz
jnp
in
inc
or
int
sbb
hlt
repz
adc
sbb
repnz
add
cmp
cwtl
je
mov
add
pushf
fwait
xor
push
inc
pop
cmp
je
push
push
mov
mov
inc
sub
call
mov
pop
cs
loop
pop
push
or
aad
adc
add
sub
add
mov
out
mov
sub
sub
sub
add
dec
sub
sub
add
cs
add
xor
cmp
out
xor
aam
test
leave
adc
test
das
mov
pop
add
sub
and
cmp
testw
cmpsl
adc
push
or
dec
inc
sbb
int
pop
fldt
sub
rclb
sbb
inc
test
dec
hlt
rol
in
loope
lods
or
ljmp
fldt
loope
not
cmp
je
fidivl
pop
fbstp
lea
add
adc
add
call
pcmpgtd
sahf
push
jmp
shrb
or
fidivs
ja
cmp
loopne
jae
aas
cmpb
sbb
dec
js
push
cmp
jmp
push
mov
mov
dec
sahf
or
sbb
icebp
cld
push
pop
or
mov
xor
dec
and
or
call
mov
lret
dec
add
mov
imul
fadds
test
or
bound
mov
pop
mov
sub
fidivl
repnz
push
inc
rclb
rcrl
insl
or
mov
or
fiaddl
mov
xlat
pop
inc
or
or
mov
inc
sub
jne
pop
iret
and
bound
dec
loopne
jmp
test
add
inc
and
xchg
inc
ljmp
sub
movb
adc
aas
in
idivl
cmp
sbb
sub
in
outsb
sub
inc
mov
push
sbb
pop
push
cmpl
xor
mov
dec
lea
adc
sbb
or
shrb
ds
xchg
pop
notl
in
push
insb
mov
es
and
das
add
xchg
sub
sbb
push
pop
mov
xchg
lock
jmp
call
ja
in
leave
adc
leave
or
mov
pushf
or
push
scas
fmull
push
add
popa
test
enter
sub
rolb
ljmp
in
lock
inc
pop
dec
jle
pop
test
mov
jp
aad
and
add
sub
adcl
push
push
inc
inc
sbbl
movb
or
cmp
xchg
insb
sbb
pop
add
cltd
idiv
cld
mov
in
adc
pusha
addl
call
nop
jecxz
fisttpl
or
jecxz
mov
push
pop
or
mov
mov
scas
mov
jmp
pop
xor
or
mulb
jle
je
xchg
cmp
popf
inc
stos
mov
add
test
or
pop
xchg
mov
js
lods
into
jns
sbb
pop
cmp
nop
sub
pusha
xchg
call
add
aad
aad
xor
movsb
jne
inc
mov
pop
adc
sub
inc
inc
bound
adc
shll
lock
pop
cltd
int3
adc
dec
ja
pop
dec
popa
adcb
loop
mov
adc
dec
std
push
imul
and
dec
icebp
mov
push
cmp
out
scas
jae
cmp
add
pushl
xchg
divb
leave
pop
mov
test
js
pop
add
or
push
push
bound
test
xor
pop
mov
dec
push
aas
cmp
test
lret
inc
lret
cmpsb
xor
pop
das
ret
loope
loopne
dec
or
cld
adc
sbb
andl
push
jb
cmp
ret
sbb
je
and
and
leave
inc
shlb
push
ljmp
popf
sbb
and
push
push
call
sub
adc
adc
fmuls
mov
xchg
mov
hlt
cmp
push
pop
mov
les
adc
xchg
cld
push
or
nop
xchg
daa
arpl
arpl
jge
lahf
add
jmp
in
xor
call
push
arpl
dec
mov
push
addb
es
in
xchg
inc
gs
add
add
push
fisttps
dec
ret
push
push
sbb
add
dec
xor
jle
xorb
aaa
and
jo
jmp
add
addr16
dec
xchg
cmp
inc
or
mov
stos
jns
dec
xchg
cmpsb
data16
dec
call
lods
in
addr16
lds
pop
or
jns
add
rolb
gs
mov
mov
imul
cmp
add
xor
les
push
jecxz
std
fiaddl
push
lea
lock
inc
filds
add
jne
out
popa
dec
out
std
adc
call
sub
sbb
pop
push
dec
imul
orb
fistpl
and
mov
call
shlb
and
decb
xchg
adc
adc
out
or
add
std
adc
and
and
movsl
jl
push
rcrl
ror
out
inc
jl
pop
cmpb
mov
push
call
add
ds
out
aad
mov
dec
pusha
fmulp
test
or
addr16
mov
es
mov
push
sub
and
cli
popf
push
rorb
enter
sub
mov
cmpsb
mov
push
adc
lcall
cld
cmp
call
test
mov
pop
scas
sbb
sub
xor
mov
or
push
pop
fsubrp
cmp
or
dec
call
or
ss
hlt
pop
cmp
inc
and
andb
or
leave
cmp
add
orb
ret
or
push
and
out
dec
inc
cli
jge
mov
lods
lods
subl
adc
test
adc
cmc
push
pop
rolb
xchg
in
movsl
into
xchg
and
loopne
psadbw
push
fs
shl
sbb
or
sub
mov
lods
leave
inc
sbb
inc
test
or
cli
cld
faddp
lret
inc
into
push
push
jb
xchg
xor
int
std
movl
jnp
cmp
push
bound
and
pop
ss
shl
dec
mov
push
lock
jnp
int
out
clc
mov
into
and
cmp
adc
les
js
jl
mov
ret
imul
or
mov
arpl
idivl
sti
xor
call
mov
sti
push
add
cmp
jne
push
pop
adc
pop
roll
dec
adc
frstor
imul
cmp
or
adc
add
inc
and
andb
mov
lods
pop
adcl
add
adc
ljmp
sti
or
nop
adc
sub
orb
mov
iret
cmp
call
jmp
lret
cmp
sbb
nop
ret
dec
pop
dec
loop
mov
dec
xchg
jl
cmp
push
cld
mov
lods
push
or
call
pop
or
bound
sbb
xor
fucomi
or
lock
and
nop
xchg
in
dec
push
loopne
inc
mov
dec
aam
mov
movsb
xchg
dec
fadd
mov
push
loopne
call
cld
push
adc
or
mov
test
insl
psubsw
cmp
rorb
add
rcr
std
jle
rclb
outsb
inc
inc
in
push
ss
loop
pop
sub
inc
push
and
jmp
or
xor
aaa
and
xor
jmp
das
and
mov
ret
fwait
add
push
add
or
or
or
or
pop
nop
mov
jle
test
les
dec
test
xor
sbb
nop
cltd
push
insl
test
addb
xchg
xchg
adc
test
mov
jbe
and
pusha
daa
shlb
or
adc
cmpl
push
mov
sub
cmpsb
in
inc
fcoms
test
mov
lea
fsts
cmp
in
mov
adc
cmpsl
cld
pop
sub
and
dec
or
sahf
xchg
enter
ds
mov
or
fs
jecxz
and
mov
lea
push
lret
dec
cld
popa
cli
and
xchg
xchg
xchg
inc
pop
pushf
xchg
and
add
nop
inc
mov
pop
sbb
xchg
pop
mov
mov
enter
mov
sbb
cmpsl
js
test
cmpsb
dec
mov
aad
les
outsb
cmp
lcall
rolb
or
or
dec
adc
sub
and
out
cmp
imul
push
add
inc
lock
dec
fs
bound
xor
sar
int3
shll
mov
in
imul
fsubrl
jg
cmc
movl
push
and
dec
popf
and
push
and
out
lret
lds
jo
les
pop
fnstcw
adc
adc
fsubrs
jge
or
addb
or
mov
addb
call
test
jae
stos
sbb
or
push
or
ss
inc
inc
nop
js
and
pop
call
nop
pushf
mov
movsb
xorb
or
cmpb
orl
adc
subb
and
mov
add
inc
popa
mov
in
push
mov
sahf
push
mov
mov
jne
adc
pusha
mov
or
inc
or
out
ds
loope
call
cmp
mov
data16
pop
pusha
lods
mov
mov
dec
dec
jnp
mov
jnp
add
or
adcl
jb
mov
sub
enter
add
dec
or
inc
mov
inc
add
add
adc
inc
add
mov
or
btcl
dec
lock
nop
xor
pusha
push
pop
call
mov
mov
jl
mov
inc
aam
imul
sub
pusha
sub
mov
cmc
loop
lea
inc
jb
mov
js
inc
stos
inc
cmp
fiaddl
lock
loopne
adc
out
fs
sub
pop
sbb
movsl
mov
cmpsl
pushf
lret
in
and
pop
clc
icebp
pop
ds
cwtl
cmp
add
inc
lahf
sub
jb
adc
inc
loope
call
fcompl
fstl
pop
hlt
enter
push
stc
sub
and
or
enter
loop
pop
or
loop
pop
and
gs
les
xchg
dec
jge
cmp
dec
mov
mov
inc
xor
jmp
mov
pop
add
sub
jb
inc
pop
mov
cmp
fcoms
stos
xchg
push
lret
jne
fisttps
or
dec
enter
mov
ja
xchg
icebp
mov
pop
jl
add
push
movl
jo
icebp
adc
and
loope
sbb
mov
adc
mov
or
adc
shr
or
jae
mov
iret
mov
movsl
xor
add
sub
call
fcompl
push
inc
adc
mov
lock
cmp
mov
call
setne
mov
or
sarl
cmp
add
cmp
cmc
lea
fwait
mov
imul
movmskps
rcrb
or
cmp
or
pop
ss
dec
in
jmp
or
sbb
insl
clc
int
inc
sbb
or
inc
lea
mov
xor
add
stos
je
adc
jne
push
push
or
in
rorl
sub
add
lods
popa
stc
pusha
movsl
lock
jge
adc
jno
mov
jmp
repnz
mov
sub
fwait
mov
sub
add
lret
sbb
cmpsl
or
jge
mov
mov
mov
and
jg
inc
in
sbb
pop
enter
mov
sbb
cmpl
sub
push
out
daa
rolb
roll
adc
ljmp
sub
sub
cmp
insl
adc
sub
mov
add
or
and
push
int3
mov
or
lock
pop
shr
adc
clc
xchg
and
enter
fsubrp
adc
inc
cld
mov
push
adc
jmp
mov
ds
out
cmp
sbb
xchg
inc
frstor
aas
jmp
and
xchg
shlb
xor
hlt
mov
mov
inc
loopne
popf
mov
sti
xchg
cld
push
hlt
mov
inc
mov
enter
adc
fucomp
and
aad
std
push
mov
mov
mov
mov
das
fs
call
and
popf
push
pushf
inc
add
insl
or
jo
dec
adc
and
iret
mov
add
push
xchg
or
push
pop
mov
flds
data16
test
adc
mov
les
mov
dec
sub
lods
mov
movsb
push
fstps
out
inc
icebp
insb
ret
and
sarb
and
push
pop
or
push
adc
and
js
inc
imul
xchg
popa
arpl
inc
js
cmp
dec
mov
mov
pop
and
mov
shlb
mov
adc
js
rcrb
fs
cltd
clc
or
cmp
and
cwtl
dec
mov
cmp
xchg
xor
and
sub
mov
pop
dec
xchg
sbb
in
inc
adc
or
push
and
addl
call
inc
aam
mov
cltd
pop
rclb
enter
fs
adc
xor
and
js
mov
add
cwtl
push
nop
sbb
xchg
inc
test
nop
push
aam
and
shlb
push
sub
adcb
and
and
js
pusha
and
and
mov
jl
push
inc
add
pusha
push
movsb
push
and
and
push
and
and
push
inc
inc
and
and
dec
or
inc
inc
or
mov
movsb
jb
and
jb
and
jb
and
jb
and
jb
and
and
and
and
and
and
and
and
jno
addb
cmp
adc
lcall
xchg
mov
adc
bound
pushf
js
add
fmull
sbb
mov
pop
xor
mov
add
or
mov
sbb
adc
push
adc
loope
xchg
test
mov
and
adc
nop
aas
test
xchg
dec
or
sub
mov
pushf
hlt
xchg
cwtl
and
xchg
or
inc
nop
and
mov
push
adc
dec
test
rolb
xor
mov
jnp
ret
jmp
mov
adc
mov
je
enter
pushf
mov
jl
cwtl
mov
pop
loope
ficompl
insl
call
repnz
adc
mov
cli
mov
jae
dec
jl
and
mov
cwtl
jo
js
add
sub
xchg
push
pop
xor
jl
or
dec
and
shrb
mov
jo
loopne
sub
jp
in
jno
xor
cld
decb
inc
jl
inc
aad
repz
or
rolb
stos
sub
and
xor
mov
add
add
pop
sbb
mov
or
add
lret
int3
enter
ror
into
add
fcomp
fxch
fimuls
fnstsw
loope
push
in
popa
mov
xor
outsb
je
insl
gs
inc
adc
punpcklwd
in
inc
in
xor
add
xor
ss
cmp
inc
add
inc
leave
cmp
fsubr
push
inc
push
sbb
or
adc
lahf
jno
dec
mov
or
and
or
mov
adc
and
dec
cmp
adc
pusha
dec
push
inc
orb
mov
and
rclb
fsubs
dec
call
sarl
pop
and
or
enter
or
add
and
push
hlt
scas
push
movsb
scas
push
push
lods
sti
test
lock
dec
dec
bound
and
adc
push
popa
les
js
push
clc
aam
and
nop
push
in
jo
push
pop
inc
and
adc
call
adc
test
nop
add
inc
es
std
adc
test
loopne
dec
clc
push
fdivl
cmp
mov
addr16
mov
icebp
adc
dec
xchg
mov
enter
adc
dec
enter
movsb
sbb
cwtl
icebp
add
rorb
mov
xchg
test
dec
jmp
sbb
dec
adc
and
fsts
jecxz
sbb
mov
enter
jns
xchg
push
mov
pop
loopne
mov
and
mov
xchg
imul
fsubs
push
orb
xor
pop
add
mov
or
notl
cli
mov
