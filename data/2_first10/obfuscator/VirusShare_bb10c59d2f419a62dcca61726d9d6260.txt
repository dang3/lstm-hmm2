iret
pop
xchg
xor
cwtl
rcrb
lcall
pop
loopne
pop
lods
mov
or
ficomps
popf
cmc
xchg
push
sbb
clc
mov
out
mov
or
dec
ja
adc
fcmovb
fimull
mov
jbe
pop
xchg
jo
clc
add
je
incl
mov
notb
fbld
pusha
push
add
or
push
lcall
adc
std
sbb
add
in
in
subl
xchg
jno
add
jns
adc
mov
scas
insl
xlat
sbb
pop
jae
aam
xadd
mov
jmp
jae
cmpsl
rcr
leave
cmp
adc
add
dec
int
lock
mov
mov
xor
daa
roll
or
adcl
mulb
arpl
mov
hlt
adc
inc
out
sbb
cmp
add
pusha
pusha
lea
jmp
lea
jb
push
cmp
mov
movb
call
add
ja
jo
imul
movl
pusha
movl
pusha
pushf
push
push
lea
jmp
lea
xchg
jmp
iret
push
addb
push
cmp
dec
mov
out
shr
push
repnz
out
sub
les
fimull
jnp
imul
dec
sbb
or
imul
mov
call
movsl
xchg
push
push
cmpsb
inc
pop
jle
fildll
xor
int
jbe
pop
xchg
cmpsb
int
mov
and
ret
mov
jae
inc
mov
and
idivb
pushf
pop
into
fnstsw
fnstenv
push
in
adc
dec
or
and
repz
and
shrl
lret
ret
insl
int
sar
out
das
lcall
inc
sarb
inc
adc
rorb
push
jb
iret
inc
repnz
lahf
aam
push
imul
repnz
cmpsb
and
ret
jo
arpl
fcoms
adc
jle
xchg
subl
inc
jecxz
imul
rorl
test
mov
fs
inc
or
mov
subl
jae
jmp
adc
sub
add
sub
push
dec
cltd
mov
xlat
sub
sbb
hlt
jge
pinsrw
loopne
inc
aaa
adc
ss
or
push
mov
fwait
jae
jp
inc
push
cld
or
sbb
fadd
sbb
lea
sbb
xchg
add
xabort
mov
add
mov
xadd
sar
mov
and
mov
rcl
rol
jmp
inc
jmp
push
adc
push
pushf
movb
pusha
pushl
ret
call
lea
call
push
adc
push
pushf
lea
jae
pusha
mov
lea
jne
pusha
stos
push
movb
lea
jmp
cmp
pushf
lea
jae
bt
pushf
cmp
mov
pusha
pushf
lea
jae
push
cmp
call
mov
call
add
inc
jb
popa
je
push
gs
outsl
je
push
push
add
fs
ja
pusha
lea
jb
bt
cmpb
pushf
lea
jne
adc
rcr
mov
clc
cmp
stc
jmp
push
inc
pushf
adc
lea
pusha
mov
pushf
pushl
ret
dec
outsl
push
push
insl
push
bound
jo
and
jae
jae
es
add
cmp
add
pushf
call
mov
not
dec
inc
call
add
jmp
add
push
imul
insb
insb
outsl
arpl
mov
call
inc
call
jmp
mov
mov
and
inc
vmovdqu
pop
and
insb
lea
mov
pop
cmpsl
sbbl
dec
or
loopne
cmc
scas
addr16
movsl
fisubrl
mov
jne
mov
lcall
pop
lret
lret
pop
fbstp
into
popl
mov
cwtl
mov
sub
add
and
inc
mov
idivb
call
out
lahf
aam
lods
dec
outsl
repz
out
lret
loopne
push
or
iret
inc
push
repnz
jge
xor
test
outsb
cmp
lret
push
inc
sahf
pop
fwait
jo
hlt
adc
jecxz
fwait
cmp
jecxz
xor
insb
pop
mov
and
adc
fwait
sub
movsb
inc
daa
pusha
jmp
lods
jns
dec
mov
inc
mov
adc
add
cmp
sub
and
push
dec
orb
mov
je
sub
push
stos
fadds
das
xchg
and
sti
pusha
jae
test
and
mov
jg
add
adc
xor
bound
jnp
adc
mov
fs
jae
bt
jle
cmc
cmp
cmp
jns
pusha
pushf
lea
jae
pusha
cmp
mov
call
push
mov
movl
jmp
movb
pusha
adc
jmp
pushf
sub
iret
xchg
pop
andb
xlat
loopne
mov
inc
popa
and
aad
lods
std
pusha
ds
mov
push
inc
push
dec
cltd
daa
mov
popa
cmpsb
push
fs
es
mov
adc
mov
xlat
insl
into
shll
cmp
add
add
cli
xchg
mov
add
adc
mov
in
popa
mov
adc
and
es
sub
pop
mov
jp
mov
and
incl
mov
adc
cvtdq2ps
int
lahf
mov
xlat
negl
orl
ret
add
xchg
lods
clc
je
das
push
shll
mov
lock
lods
cmp
sub
jle
arpl
cmp
shlb
inc
addl
sbb
push
fcomip
inc
out
push
pop
sbb
pop
mov
mov
add
in
sbb
into
adc
popf
sbb
mov
das
cmp
xor
lds
mov
adc
in
mov
popf
jns
and
pop
mov
ljmp
in
push
loop
mov
test
push
or
jno
cmp
daa
enter
rorb
es
push
pop
cld
fnstcw
repz
and
add
xchg
jge
add
shr
inc
mov
lea
jbe
inc
stc
rol
push
call
push
lock
std
std
test
xchg
push
mov
ret
jo
les
and
pushf
mov
pop
mov
addr16
iret
fdivrl
xor
dec
dec
lret
and
aam
pop
into
add
loope
das
adc
test
stc
cmp
add
cmpl
mov
sub
mov
js
and
enter
xlat
inc
jmp
lea
movsbw
lea
pop
lea
movzbw
xchg
mov
pop
call
out
jbe
pop
or
mov
iret
lret
cmpsl
fmuls
cmp
pop
loopne
pop
mov
mov
xorb
pop
jnp
jnp
lods
mov
sub
cwtl
inc
cs
pop
push
xchg
push
shl
add
das
push
int
sub
sbb
mov
idivl
add
frstor
xor
bound
jnp
xchg
sub
imul
imulb
inc
orb
jb
and
push
sub
mov
jg
push
sub
shl
std
inc
ja
adc
sub
dec
add
shl
mov
shr
bswap
mov
cmc
add
test
cmc
mov
clc
cmp
call
mov
cmp
push
sub
clc
mov
bt
cmc
sub
call
stc
add
cmc
test
call
pushf
movl
pusha
pusha
jmp
cmp
cmp
push
lea
ja
inc
pusha
inc
pushf
setp
inc
rcl
sub
pusha
xchg
aam
mov
cmc
and
mov
pushf
mov
jmp
lea
jb
pushf
pushl
ret
mov
pushf
lea
jmp
jmp
lea
jae
not
mov
push
lea
jno
seta
setbe
inc
push
mov
lea
jmp
jmp
call
push
push
inc
push
call
add
cmc
cmp
jmp
clc
pusha
test
lea
jg
push
mov
lea
jns
je
test
setno
bts
cmp
mov
sub
add
test
add
bts
shl
mov
call
lods
cmp
cmc
push
bt
neg
call
pushf
cmc
not
xchg
ror
mov
bt
mov
push
call
inc
jmp
stc
call
movb
lea
jae
cmc
jmp
lea
jne
cmp
pusha
jmp
lods
lock
lods
jle,pt
or
adc
fdivs
cmc
das
pop
lds
xchg
dec
movaps
imul
into
lods
sbb
sbb
push
mov
jbe
jo
add
jg
xchg
mov
jecxz
add
push
outsl
popa
add
out
in
and
int
movsb
leave
pop
repz
cmpsb
pushf
popf
pop
add
sub
cmp
mov
lahf
mov
push
jo
inc
cmpsb
xor
in
pop
xor
int
dec
aad
loop
gs
lock
xchg
in
stc
in
clc
mov
test
xor
imulb
aas
cmp
fisubs
push
clc
mov
fstpt
xchg
int
inc
out
inc
push
aaa
xorb
or
enter
fists
das
push
popf
decl
push
out
ret
add
adc
inc
inc
pop
pop
push
inc
xchg
mov
popf
dec
lea
sub
das
daa
jmp
ficoms
enter
stos
push
movsb
ror
mov
sti
pop
insl
mulb
jns
inc
cmp
mov
das
add
cmpsw
ds
pop
stc
fcmovu
cwtl
sbb
cmp
mov
leave
gs
pop
js
addb
add
stc
daa
pop
mov
das
mov
rol
imul
cmp
ja
pop
bound
push
inc
out
jb
mov
cmpsl
and
repnz
in
cmp
ds
inc
mov
popa
dec
cmp
fsub
push
adc
and
out
dec
pop
ds
and
cmp
lret
fwait
mov
cmp
mov
cwtl
cmp
fisubs
mov
addr16
lret
gs
imul
jmp
xor
ljmp
adc
in
cli
aaa
ficomps
shrl
push
dec
insl
push
fnstenvs
mov
lock
test
mov
adc
push
iret
stos
add
lea
je
pushf
test
add
pusha
shl
shrd
mov
bt
movb
call
jmp
inc
movb
push
pushf
adc
mov
pushf
push
push
pushl
ret
lea
jae
jae
jne
pusha
push
stos
pusha
lea
jmp
cmp
pushf
lea
jb
push
cmp
call
bswap
adc
mov
call
lea
jne
sar
jmp
pusha
adc
push
int3
ror
popf
or
addr16
or
or
outsl
jge
jno
pop
push
lret
xchg
addl
push
roll
push
lods
lcall
jnp
pusha
sub
mov
or
call
mov
mov
dec
das
push
mov
xchg
incb
and
loop
and
lret
jmp
pop
mov
cmc
xor
xchg
jb
fbld
icebp
sbb
insb
adc
lahf
or
mov
jl
ror
lcall
sbb
and
add
mov
jge
mov
xor
aaa
xchg
out
mov
dec
sbb
sub
adc
scas
arpl
xchg
stc
dec
je
push
outsl
adc
test
push
mov
test
push
in
mov
jge
mov
leave
push
xor
scas
jns
xorb
adc
cmp
fcmovbe
dec
ror
loopne
adc
mov
lds
in
das
cmp
xor
xchg
xchg
xorb
scas
xor
je
or
pushl
stc
add
mov
loopne
cmp
xchg
in
ds
in
shlb
in
push
pop
movl
es
stos
jo
outsb
psrld
push
jp
dec
push
lea
or
aad
mov
adc
pop
daa
dec
adc
jge
push
mov
lea
jae
call
imulb
adc
xchg
sbb
jno
js
add
rcrl
outsl
push
dec
pop
test
ds
fidivs
xor
cmp
jmp
js
and
fucomi
sub
adc
ljmp
cmp
stc
add
fs
decl
jg
stc
lds
ret
xor
popa
cmp
jno
cmc
test
fucomip
leave
push
sbb
mov
mov
xchg
dec
xor
jno
das
mov
mov
insl
adc
fdivrs
fsub
mov
imul
mov
pop
addr16
dec
mov
fmuls
orl
pusha
popa
mov
mov
sbb
add
inc
jb
popa
je
push
outsl
outsl
insb
push
xor
popa
jo
push
in
movsbl
call
pusha
add
cmp
pushf
cmc
cmc
movzwl
not
movzbw
sub
mov
clc
movb
mov
add
push
bt
pushl
mov
push
test
mov
lea
je
cmc
cmc
test
add
test
pusha
jmp
pushf
lea
call
push
lea
jae
xchg
mov
not
pusha
mov
inc
jmp
or
add
cmc
shr
bsf
mov
mov
neg
bsr
sub
xor
add
pusha
lea
mov
jmp
inc
mov
call
xor
xchg
ss
rol
push
inc
ret
lds
lock
ret
fs
insl
das
push
jbe
aas
push
scas
add
loope
imul
stos
jno
adc
mov
movl
sub
sbb
lock
jnp
push
into
cmp
xor
in
sti
mov
lods
pop
push
cmpsl
xchg
loopne
cmp
sub
test
xchg
data16
mov
add
cltd
movsl
mov
cltd
repnz
adc
mov
inc
cmc
insb
jnp
icebp
pushl
and
pop
ljmp
mov
or
add
mov
pop
out
push
int
lds
ljmp
hlt
push
adc
xchg
xchg
cs
mov
loope
push
mov
mov
dec
das
cmp
loop
dec
movsl
mov
jb
loope
add
jb
adc
fcoms
dec
cmc
lcall
mov
inc
test
ja
cmp
test
xor
daa
mov
enter
loopne
mov
jecxz
fstpl
adc
lret
cmp
inc
inc
jne
jmp
sub
jmp
push
jmp
mov
sbb
sets
mov
pushl
push
cmc
cmp
mov
shr
call
add
push
je
inc
imul
jns
sub
jmp
jmp
call
call
push
mov
pushf
setp
pushf
not
lods
cmc
movb
mov
neg
movb
pusha
pushf
jmp
pusha
call
cmp
cmpb
pushl
movb
lea
jne
push
cmc
sub
pusha
push
pushl
lea
jmp
add
push
jb
je
inc
imul
mov
pusha
lea
call
pushf
push
pushf
mov
pushf
pushf
mov
lea
jmp
dec
shrd
bsr
push
seto
mov
adc
sub
cmp
test
push
setbe
aad
cwtl
or
push
lahf
setp
aam
sar
push
shl
push
shl
shl
mov
jmp
add
bound
or
xor
add
popl
inc
sub
add
or
out
or
fsubrs
or
mov
or
out
add
add
cmp
add
adc
or
mov
or
add
or
or
outsl
xor
add
sbb
add
pop
or
inc
inc
or
dec
test
cmp
or
insb
aas
or
add
add
push
add
add
or
add
xor
add
add
add
or
add
add
bound
or
add
add
sarl
or
lea
add
adc
add
or
add
add
add
push
cmp
pushf
mov
sbb
movzbw
sbb
mov
jmp
sub
cmpsb
rorb
jb
lods
add
ret
jmp
hlt
leave
out
or
or
lret
mov
mov
insl
stos
fbld
imul
loop
xlat
fidivrs
mov
es
loope
outsb
adc
je
sbbb
jl
xlat
sub
int
push
mov
dec
sub
ljmp
test
call
lea
and
dec
sub
fucom
pop
sub
iret
push
mov
or
pusha
xchg
sbb
in
pop
jle
jnp
sub
xchg
adc
mov
dec
outsl
popa
fs
imul
add
xor
add
call
pushf
or
out
jnp
and
repnz
loopne
sub
adc
mov
xor
dec
pop
cld
pop
mov
push
scas
jp,pt
div
test
xchg
lea
out
stc
lods
inc
and
mov
dec
and
shl
mov
cmp
fisttps
xor
rcrb
xchg
leave
adc
fmuls
pusha
jmp
push
movb
adc
jmp
pusha
bswap
call
adc
pushf
pushl
mov
pushl
ret
jmp
movb
lea
jne
inc
mov
or
not
add
sub
bt
mov
cmc
jmp
mov
lea
bswap
setno
xchg
inc
mov
dec
mov
call
pop
clc
sub
mov
rcrl
or
sub
gs
xchg
mov
mull
mov
add
testl
jle
jno
push
rcrl
inc
sbb
jnp
gs
pop
jmp
shl
mov
xchg
inc
pop
icebp
int
addb
xlat
sbb
pop
sti
jle
adc
lea
push
pushf
mov
lea
jae
clc
cmc
stc
cmp
pusha
movl
pusha
lea
jae
call
rcl
shl
cmp
pushf
mov
clc
cmpb
mov
pushf
call
loop
pop
sub
add
outsl
outsl
ds
mov
fadd
stos
xchg
cld
mov
add
scas
or
ss
rcrb
lock
daa
jge
fcmovnbe
notl
lcall
xchg
loopne
lea
jne
push
push
push
call
add
push
je
push
outsb
ja
outsb
add
test
loop
jo
dec
call
pushf
movl
push
pushf
push
mov
lea
jmp
lea
je
lea
add
bsf
sete
mov
bt
add
jmp
and
test
aam
push
xchg
add
dec
or
shlb
xchg
fsubr
js
xchg
out
cmp
or
sti
mov
in
clc
mov
mov
inc
cmp
cmp
ds
jb
stos
out
jg
jns
sbb
jne
stc
ss
jnp
adc
push
fcompl
pop
xor
xor
mov
sub
mov
dec
mov
shl
stos
popa
mov
arpl
adc
adc
mov
lods
cmp
adc
push
pop
sbb
mov
cmp
and
and
insb
daa
sbb
arpl
ja
sbb
scas
xchg
stos
push
mov
fimuls
pushf
cmp
fistpl
add
cltd
mov
shrb
call
lea
adc
and
inc
mov
pusha
lea
jmp
movl
lea
jbe
pusha
pushf
pusha
movl
movb
pushf
mov
push
lea
jmp
clc
cmp
pusha
lea
jbe
jae
bt
clc
cmp
pushf
jmp
pushl
not
jmp
mov
clc
stc
shl
mov
pushf
call
lea
pushf
mov
pusha
lea
jmp
bswap
mov
pushf
mov
movb
pushf
movb
mov
jmp
call
and
mov
or
lods
int
ja
adcl
clc
jns
aad
xor
leave
daa
cmpsl
sub
push
xchg
jmp
xlat
or
jns
cmp
sbb
popf
mov
test
cmp
daa
mov
mov
and
jmp
inc
dec
xlat
in
jmp
das
pop
xor
mov
add
adc
fs
jne
push
jmp
lea
je
pushf
pushf
inc
bt
jmp
bt
clc
test
xchg
stc
movzbw
mov
clc
push
sub
mov
push
rep
mov
movsbw
lea
bswap
mov
mov
mov
movw
lea
jmp
sbb
mov
cmp
cmp
pusha
jmp
push
add
clc
cmp
pusha
lea
jb
jmp
jmp
inc
pushf
mov
bswap
shld
mov
rcr
or
inc
push
inc
shrd
push
shl
sub
push
movsbl
or
push
bsr
push
xor
mov
and
pushf
add
shrd
mov
or
mov
call
sbb
cmp
push
xor
and
lcall
dec
ja
imul
and
sbb
push
xor
add
sbb
stos
jno
popf
mov
push
pop
fwait
mov
out
test
aas
pop
stos
jae
dec
sub
xchg
pop
push
mov
sub
push
loopne
lock
xorb
out
lea
cltd
lock
clc
xor
sbb
and
shll
inc
sub
cmp
es
mov
orl
jp
pop
adc
and
cmp
cmpsb
call
jp
js
push
leave
or
push
hlt
shr
sahf
clc
mov
stos
sahf
cmpsb
out
loop
in
outsb
ljmp
xchg
pushf
shrl
out
push
xchg
lods
and
repnz
cmp
bound
aaa
pushf
loope
sbb
cs
pop
scas
mov
orb
inc
fistpll
outsl
ret
cmpsb
push
sub
cmp
rorb
mov
inc
push
mov
popf
sbb
es
mov
push
nop
ljmp
mov
mov
pushl
fdivr
or
loop
clc
sub
jnp
sti
arpl
in
hlt
pop
and
xor
adc
pop
into
mov
lret
sbb
les
inc
add
cmpsl
sbb
aam
js
sbb
iret
and
mov
or
and
mov
cmp
sub
add
cmc
xchg
pop
test
adc
jmp
lods
sub
lock
daa
hlt
jns
mov
add
sub
pop
xchg
xorb
cld
mov
xchg
jno
push
das
add
data16
test
lock
sbb
pop
jb
or
adc
int
rolb
mov
into
hlt
fadds
dec
and
lock
or
inc
cmpsl
cmp
sub
addr16
push
notb
lods
fwait
movsb
and
stos
addl
fscale
inc
mov
push
push
xchg
xchg
or
or
ss
sub
add
hlt
cs
popf
movsl
in
sub
jecxz
mov
into
adc
call
hlt
mov
pop
xchg
push
sub
gs
lods
outsb
test
jno
in
out
lcall
add
cmp
movsb
add
adc
sbb
inc
in
sub
xor
jns
lret
fstl
pop
xlat
or
js
notl
addr16
out
dec
sbb
jmp
lretw
into
nop
jle
pushl
pushf
fs
push
xchg
lock
sub
sbb
inc
roll
adc
mov
dec
push
xchg
je
mov
faddl
sbb
mov
insb
fwait
xchg
xchg
ljmp
aam
subb
cmp
push
cmpsb
hlt
leave
icebp
lret
fsubr
adc
inc
pusha
lods
repnz
mov
addl
cld
add
outsl
adc
or
mov
ret
rcr
leave
push
out
ljmp
dec
mov
inc
mov
addb
lcall
jmp
jecxz
jnp
incb
add
stos
jbe
sbb
loop
xorl
mov
mov
mov
inc
cmpxchg
dec
out
mov
xor
test
add
adc
repz
icebp
roll
ret
mull
sbb
push
fwait
mov
inc
add
notb
das
inc
xchg
rorl
iret
shll
outsb
push
xor
inc
fisttpll
xorb
add
mov
mov
js
xor
push
xchg
int3
and
insl
fstpt
xorl
loope
pop
pusha
ret
add
loop,pt
setl
popa
lret
lods
stos
out
jecxz
js
push
out
cli
cmp
popa
push
imul
ljmp
stc
push
inc
icebp
cmp
mov
add
mov
sar
rorl
pop
push
add
lcall
test
popf
arpl
sbb
addl
movsb
ljmp
test
mov
sarb
addl
cmc
cld
in
adc
leave
rclb
ret
je
das
sbb
fbstp
xchg
jle
andl
and
sti
insl
in
xor
cltd
or
xchg
inc
out
jns
adc
add
cmp
stos
loope
std
mov
mov
lock
mov
fadds
dec
jmp
push
cmp
stc
push
or
je
inc
sbb
mov
addl
lods
fiadds
add
jbe
adc
sbb
jle
pop
ret
add
pop
and
inc
hlt
xor
in
xlat
adcb
push
pusha
test
and
push
gs
adcl
inc
mov
cld
and
inc
arpl
ret
xchg
outsb
add
xchg
fmulp
movsl
je
and
xor
add
fstps
add
push
push
pop
add
pop
arpl
add
sub
sub
in
or
mov
stos
pop
popa
hlt
std
mov
test
jne
ret
mov
xchg
call
xchg
pushl
add
movb
sti
cmp
pop
cwtl
add
hlt
loopne
stos
and
out
cli
movsl
xor
pop
jae
pop
and
add
mov
imull
stos
ret
push
push
add
xchg
or
inc
jmp
mov
repnz
loopne
xchg
divb
xor
in
leave
add
add
mov
stos
divb
pop
inc
fucom
jge
mov
mov
aad
add
into
imulb
test
lret
or
imul
je
mov
cwtl
std
mov
cli
mov
lods
inc
hlt
cltd
cmp
dec
mov
add
add
push
aaa
call
xchg
sbb
or
out
scas
rcl
mov
add
pop
cltd
or
rcr
jge
gs
ja
inc
jnp
mov
jbe
add
dec
sub
ret
jge
cmp
outsl
jge
fildl
shll
add
inc
movhps
add
jl
add
or
xor
outsl
sub
int3
and
xchg
add
or
xor
mov
push
arpl
jnp
insb
sarb
pop
fidivs
call
mov
push
jne
jl
repnz
out
jne
fisttpll
cli
inc
jnp
add
push
lds
xor
je
mov
hlt
aad
pop
fwait
jae
cmp
ja
add
add
cmpb
add
mov
repnz
sti
clc
jl
rcl
and
in
sarb
inc
sub
xchg
xchg
loope
cmp
scas
lea
clc
imul
cmpsl
adc
xchg
pop
sbb
jg
bound
out
popf
in
cmp
and
imul
xchg
sbb
test
and
hlt
sbbl
sbb
shl
fimull
jb
in
lods
into
cld
rdpmc
lods
mov
push
add
jmp
int3
popf
mov
ja
les
adc
push
int
jg
shl
dec
jb
sub
push
out
xchg
push
push
inc
repz
pushf
cmpsb
ljmp
mov
add
inc
lret
test
ret
or
roll
jae
jno
add
jecxz
dec
int3
es
xchg
mov
add
jb
xchg
in
inc
jl
sub
in
in
sub
fbstp
xchg
cs
lock
push
adc
iret
shl
cmp
sahf
xchg
pop
jle
mulb
inc
cwtl
add
daa
nop
dec
das
mov
ret
sti
and
jecxz
scas
mov
hlt
push
jae
imull
nop
aam
pop
jp
mov
test
scas
movsl
imul
inc
ror
pop
add
or
xor
or
jl
xchg
add
add
lods
and
repz
pop
das
fs
mov
mov
call
addl
into
push
mov
mov
push
sub
ss
lock
adc
test
push
add
subb
pop
bound
xlat
sub
das
lods
add
scas
mov
loopne
xchg
popf
mov
addr16
test
sti
mov
call
cmp
and
cltd
xor
inc
add
faddp
icebp
cmp
test
push
lds
sub
sub
mov
mov
addl
xchg
ja
movb
dec
loopne
add
test
jmp
dec
in
addr16
cld
jecxz
sub
add
mov
add
inc
loope
jnp
pop
xor
and
sti
popa
xor
xorb
mov
ljmp
sub
inc
xor
in
leave
sqrtps
fdiv
mov
jg
push
test
cld
xchg
mov
inc
or
out
xchg
jg
hlt
and
sbb
fbld
pxor
jecxz
add
push
das
mov
push
sub
inc
out
pop
inc
xor
lods
add
sbb
sub
add
lahf
push
outsb
inc
pop
jg
add
aaa
jo
bound
cmc
mov
arpl
into
cmpsb
add
fst
mov
add
add
or
pushl
in
jns
sub
jb
daa
stos
sub
out
mov
pop
int
clc
shl
cmc
inc
les
push
arpl
cmpsb
test
aam
andb
xor
mov
mov
and
lret
hlt
sti
pop
xor
add
stc
or
inc
lods
icebp
sub
cmp
push
inc
lret
and
mov
cmp
add
mov
push
add
mov
add
add
sbb
addb
dec
xchg
mov
xor
rcll
add
mov
or
arpl
hlt
int3
xchg
ret
pop
adc
inc
mov
xchg
push
add
pop
fldcw
pop
lock
inc
inc
cli
xchg
inc
jmp
popf
imul
ret
inc
jne
cmpsb
jb
enter
stos
nop
popa
stos
push
add
std
jg
sbb
mov
sar
test
js
das
sti
jno
adc
sub
and
aas
cld
fwait
hlt
fdivr
or
leave
fisttps
mov
cli
sar
stc
movmskps
pop
loop
xchg
sahf
lret
sub
inc
movsl
push
in
add
pop
das
out
arpl
or
and
into
inc
nop
jmp
or
lock
mov
mov
jmp
ljmp
scas
cmp
repnz
mov
rcr
xorb
push
rol
adc
jg
mov
cmpsb
out
xchg
aad
xchg
sbb
dec
pop
add
push
lds
add
mov
pop
ficoml
mov
fstps
cs
dec
iret
out
add
mov
cmpsl
add
mov
add
nop
and
sbb
jb
hlt
in
adc
xor
ret
popa
pop
fadds
add
sub
cmp
mov
pop
icebp
frstor
pusha
and
cld
xchg
cmp
push
ds
sub
fwait
push
je
dec
fldl
repnz
xchg
xor
mov
push
dec
das
adc
jae
rclb
stos
mov
movsb
add
jl
ss
rolb
fwait
or
adc
or
lret
jge
repz
fbstp
cmpsb
movsb
sub
mov
test
add
mov
mov
jns
add
push
int3
push
pushl
lea
lods
call
movsb
fidivrl
aaa
push
push
sbb
cmp
add
mov
mov
in
bound
sahf
ljmp
roll
shl
xchg
pushf
dec
sbb
add
in
cmp
clc
js
rolb
mov
push
jle
int3
ss
mov
cmp
stc
pop
imul
xchg
pop
je
xor
jns
push
xchg
cmc
loop
add
mov
or
adc
push
or
cmc
jle
mov
pop
jmp
push
fstps
out
call
sahf
pop
jp
sti
rorl
cld
fsub
hlt
jg
mov
loopne
daa
adc
fwait
cmp
push
xchg
dec
pop
ljmp
shr
jb
inc
and
decb
repnz
insw
orb
lds
cltd
push
jnp
mov
pop
les
pop
adc
and
ja
dec
add
xorb
rolb
out
jo
pop
sub
sti
and
sti
dec
and
sub
or
push
sub
jecxz
add
pop
dec
xor
add
push
rorl
int
out
jno
scas
aas
out
es
or
jo
sbb
jbe
xor
mov
push
add
add
and
cmp
sbb
int
scas
cwtl
and
js
dec
cmpsl
stc
inc
mov
lret
fwait
in
cmpsb
loope
sbbl
xchg
cld
lods
aad
rorl
mov
test
add
pop
pop
cwtl
pop
int
cli
je
dec
and
sbb
mov
xchg
test
dec
adc
loop
int
cltd
sub
inc
movsb
add
sbb
pushf
roll
out
stc
das
mov
cli
in
jno
pop
inc
jl
loop
leave
sbb
cwtl
std
xor
pop
fdivl
inc
add
cs
xor
aas
xchg
mov
hlt
iret
lret
ret
dec
adc
add
cli
pushl
loop
popa
or
mov
scas
mov
adc
subb
push
lret
push
pop
out
inc
mov
xorb
js
test
jae
data16
mov
xchg
leave
push
push
subb
and
pushf
xorl
xchg
mov
sbb
icebp
dec
lods
add
and
push
inc
or
loope
mov
rcr
push
adc
das
inc
out
add
xchg
add
add
ja
pop
in
sbb
lss
adc
incl
jns
das
mov
mov
xchg
jb
jge
cld
or
das
cltd
ds
xchg
sbb
jnp
jb
push
pusha
push
add
dec
bswap
add
or
arpl
out
push
mov
dec
enter
add
xor
clc
cli
sbb
pop
xchg
dec
hlt
mov
mov
add
pop
cld
popf
mov
xor
mov
add
cmpl
mov
pop
in
in
out
ret
fiadds
mov
jmp
push
jne
movsl
aad
add
xchg
rorl
mov
mov
sbb
push
adc
aaa
add
mov
inc
ret
add
test
mov
sarb
add
addr16
mov
jbe
ss
andl
ljmp
ret
cmp
je
add
cmp
mov
into
in
jno
pushf
mov
adc
push
jb
icebp
lea
sbb
gs
sbb
fistps
ficoms
pop
stos
out
out
sbb
adc
shrl
sbb
gs
mov
repnz
ljmp
stos
loop
lret
add
xchg
lods
lahf
hlt
mov
and
arpl
inc
mov
mov
or
pop
test
add
inc
mov
cmp
test
and
sbb
add
int3
push
add
mov
aaa
dec
add
xor
sub
mov
push
jg
add
inc
test
add
and
jae
pop
sti
das
outsb
xchg
mov
mov
mov
cmp
and
fcmovnb
adc
lea
dec
test
cmpl
imul
mov
outsb
sbb
flds
xchg
jge
aad
lods
in
cmp
insl
xor
sbb
xlat
adc
add
jo
std
inc
gs
ror
lea
mov
add
xchg
dec
push
sbb
add
hlt
dec
test
add
aad
xor
and
decb
aaa
test
add
lock
in
lods
add
loope
pop
dec
stos
push
cmp
mov
imul
add
adc
mov
jo
sub
mov
data16
pop
dec
ja
adcb
hlt
ret
lock
icebp
in
and
daa
jecxz
mov
mov
and
mov
sbbb
loope
mov
pop
dec
add
xor
std
test
xchg
hlt
or
fbld
add
sahf
cmc
add
out
popf
xchg
lods
jl
jae
mov
add
loope
add
push
add
cld
lds
cmp
mov
and
jae
fsubl
pop
lret
add
mov
roll
aam
outsb
out
mov
cmpsb
das
pop
cmp
ja
push
push
lock
ret
inc
inc
add
mov
xchg
loopne
nop
dec
das
stos
pop
movsl
movsb
repnz
xor
scas
ret
fcompl
add
hlt
cmc
fisubs
jbe
fsub
aas
or
movl
mov
jne
jb
lds
xor
and
add
mov
push
cld
insl
add
push
jne
ret
add
dec
cmp
int3
xchg
or
sti
cmp
mov
dec
or
add
ror
nop
push
outsl
fsincos
inc
out
jmp
jbe
pop
pop
adc
and
call
das
cmpsb
cmp
sbb
je
sbb
and
sbb
xor
inc
sub
fmul
js
negl
or
leave
loop
jge
shrl
mov
rolb
icebp
ja
clc
or
pop
andb
mov
add
add
sbb
jae
rcr
jg
cmp
xlat
xchg
add
and
das
out
fdivrl
and
shl
push
dec
mov
stos
fwait
push
add
adc
xor
push
and
insl
xchg
mov
lret
ds
out
xor
data16
mov
rclb
or
daa
in
arpl
sub
ret
pop
test
push
add
add
add
pop
push
add
or
stos
xchg
out
push
inc
add
shlb
int3
sub
in
in
add
xorl
in
lea
mov
mov
in
testb
pusha
add
mov
xor
test
mov
roll
jae
les
inc
fcom
and
adc
inc
sbb
push
add
rclb
dec
mov
cld
das
and
fcomi
bound
insb
mulb
hlt
adc
fstps
addb
pop
pop
adc
push
pop
pop
xor
mov
add
or
test
jo
push
loop
fsubs
repnz
das
in
movsb
mov
js
and
or
test
mov
stos
cltd
lcall
inc
cmp
mov
adc
mov
or
incl
mov
mov
cmp
jge
ret
jg
push
add
pushf
mov
dec
dec
mov
xor
test
lock
and
dec
push
xchg
call
pop
ret
push
xchg
loop
xchg
lock
out
add
jb
call
add
movsb
loopne
out
mov
aam
pusha
fdivs
add
into
xchg
add
sub
cltd
out
int
dec
hlt
das
mov
and
pop
cli
dec
xchg
pop
in
shll
fistps
mov
or
adc
push
xchg
arpl
andb
sub
int
mov
or
dec
push
jmp
test
sti
add
mov
sarb
adc
add
mov
mov
push
pop
shrb
pop
add
sbb
stos
sbb
in
inc
jge
jbe
add
lods
fnstenv
xor
push
add
ret
xor
adc
stos
loope
test
adc
mov
mov
add
int3
enter
dec
add
xor
ja
add
lods
mul
mov
cli
push
daa
sarb
mov
xor
ss
lahf
add
mov
scas
out
fwait
add
lcall
mov
mov
popa
jecxz
add
pop
adc
std
mov
aad
sub
je
cli
mov
mov
xchg
pop
add
sahf
adc
fldcw
xchg
fwait
insb
pop
sbb
and
ret
nop
mov
jecxz
add
add
add
je
div
mov
jbe
cld
ficompl
jg
dec
add
dec
repz
mull
cmpsl
sarl
nop
cld
inc
dec
mov
jg
mov
sahf
or
stos
pop
call
out
and
and
xchg
sbb
add
push
ret
mov
sub
sub
xchg
pop
sbb
and
rorl
aaa
mov
aam
add
fldl
inc
ret
mov
sub
pusha
cmpsb
push
and
dec
int
idivb
mov
cmp
dec
mov
andl
mov
xchg
test
xor
flds
add
or
arpl
add
cmp
sti
jns
cli
cmp
popa
jno
xor
mov
mov
test
ret
dec
mov
dec
int3
adc
sub
repnz
xor
stos
xchg
ljmp
jl
fldt
insl
add
and
add
pop
lcall
add
xchg
mov
and
inc
add
dec
lret
xor
sbb
mov
out
and
pop
aas
and
push
jnp
add
xor
insb
mov
in
fisubl
mov
pop
ror
xor
dec
stc
leave
inc
jbe
imul
add
xor
cmp
adc
stos
xchg
in
inc
xchg
mov
stos
jbe
xchg
adc
inc
call
insb
lods
sub
std
loop
das
mov
xchg
xor
or
lcall
loop
fs
inc
scas
leave
das
ret
fidivrs
lds
jne
add
cmpl
add
cmp
sbb
lcall
add
jecxz
or
mov
jge
mov
daa
lret
add
xor
fstl
fldt
cmpl
rcrl
mov
lret
push
js
icebp
das
adc
mov
icebp
add
jne
ficomps
xchg
fisubl
outsb
jb
outsl
flds
add
popf
shlb
add
mov
fsub
sub
in
mov
nop
inc
jge
pop
mov
dec
lock
xor
addr16
or
xor
pop
xor
fistpl
leave
popf
pusha
cli
fcompl
daa
pushf
sbb
or
and
mov
adc
mov
or
ret
outsb
sbb
ret
pop
pusha
or
and
xor
xchg
add
xlat
orl
push
sbb
dec
daa
mov
stc
das
xchg
call
push
aam
out
out
inc
mov
mov
test
mov
inc
add
or
mov
jns
repnz
pushf
adc
push
out
add
ja
cmpsb
pop
popa
aam
push
cmp
popf
sub
fistps
jno
pop
outsl
add
xor
sbb
or
or
fildl
je
scas
add
mov
push
test
cmp
clc
stos
outsl
lods
jge
ret
add
fadd
xor
cli
mov
sti
or
add
shl
gs
xchg
add
or
add
push
int3
and
roll
sbb
mov
cld
push
into
adc
add
mov
pop
outsl
bound
xor
xchg
movsl
ret
lea
in
and
aas
adc
pop
pop
adc
xchg
outsl
fsub
icebp
xchg
mov
cld
lcall
test
lahf
add
lret
dec
hlt
cmp
mov
mov
in
pusha
cltd
add
nop
xchg
pushf
add
dec
lcall
aas
les
mov
push
add
sbb
add
data16
jp
pop
add
loop
add
and
sarb
stc
lods
xor
add
ret
aam
gs
pop
mov
sarb
movsb
xchg
les
cli
cmpb
aad
jmp
add
sub
test
dec
push
lret
clts
add
rorl
cmpsb
sbb
mov
mov
idivb
xlat
add
popa
fwait
loopne
loop
sbb
outsl
mov
scas
adc
cmp
push
sbb
lods
sbb
les
cltd
add
jae
subb
cmp
test
outsl
ljmp
add
lea
jle
mov
lods
add
jno
loopne
daa
subl
jg
xor
jbe
or
mov
lret
jmp
test
movsl
add
dec
ret
lret
arpl
mov
sti
jne
dec
pusha
mov
jp
jg
push
out
addr16
add
xor
fstl
adc
pop
cli
sub
lods
fdivrl
mov
push
xchg
das
enter
hlt
in
jnp
lret
sti
adc
sbb
jno
xlat
roll
add
pop
sub
repnz
jno
inc
sahf
adc
adc
bound
add
xchg
daa
add
inc
adc
sbb
test
sub
pop
aad
jge
repnz
jmp
inc
out
sub
addr16
dec
jmp
sub
inc
ret
ret
adc
pop
xor
out
mov
dec
jl
cmpl
pusha
xor
das
outsl
aas
and
lahf
ret
lret
adcb
lret
adc
fadd
call
lea
das
movsb
mov
pop
xchg
cld
xor
stos
push
jo
int
or
push
sbb
xchg
add
ffree
fnstenv
add
sbb
push
add
lods
ljmp
cli
pop
xor
mov
fst
sbb
hlt
out
jp
adc
inc
int
sahf
jl
xchg
sub
addb
add
mov
hlt
ljmp
jecxz
add
pop
or
dec
stos
test
movsl
outsb
adcb
add
pusha
jnp
fcoml
das
out
ret
dec
jp
adc
pop
add
into
test
rclb
push
dec
sbb
add
pop
and
pushl
lock
add
es
add
inc
jge
cld
push
jp
dec
out
aaa
dec
xchg
mov
cli
fiaddl
mov
int
jge
cmp
add
xor
sbbl
xchg
lahf
lcall
jg
adc
mov
mov
jmp
insl
xchg
mov
dec
add
sti
orl
dec
inc
mov
adc
test
push
mov
cld
fldt
mov
add
jne
or
repz
xchg
and
aad
mov
inc
pushf
push
jge
add
jb
arpl
aas
push
inc
mov
pop
jns
outsl
xchg
jo
or
enter
add
movsl
cld
jmp
punpcklwd
repz
jle
dec
add
mov
mov
push
je
lods
mov
push
xchg
aaa
push
les
test
clc
jno
es
addl
iret
push
xchg
daa
pushf
pushf
arpl
or
add
cmc
in
stos
or
jge
dec
andl
test
test
mov
inc
xchg
or
add
movsb
and
add
mov
outsl
mov
mov
add
shrb
xchg
and
push
pop
and
pop
dec
add
jmp
pop
sbb
or
add
push
inc
fidivrl
cmpsb
sub
adc
push
pop
clc
pop
push
adc
xor
cmp
test
or
das
push
ljmp
mov
les
popl
outsb
aaa
pushl
std
ds
lds
lret
cmpsb
sbb
mov
call
loopne
jns
jle
nop
and
scas
mov
and
push
bswap
daa
sarl
aaa
outsb
leave
addr16
ja
sahf
call
adc
sub
mov
fs
mov
add
lret
sub
ficoms
hlt
sub
inc
mov
mov
lret
add
cltd
and
sbb
call
leave
andl
shrl
cmp
adc
popf
cmp
dec
inc
dec
mov
xchg
aas
in
add
add
aad
call
xchg
rorl
add
mov
pop
hlt
cmpsl
jae
mov
lahf
sbb
in
mov
add
stos
xorl
add
and
inc
test
addb
xor
lcall
iret
xchg
ret
incl
cmp
jg
inc
out
add
fsubr
mov
mov
xchg
icebp
nop
and
mov
jae
mov
iret
xchg
cmp
inc
mov
leave
add
push
repnz
xor
dec
add
jae
xchg
push
cmc
inc
lods
and
push
pop
pop
add
mov
dec
addr16
push
sub
push
add
mov
add
adc
mov
pop
push
loope
mov
xchg
jle
mov
cmp
adc
lahf
sti
mov
ss
inc
mov
xor
add
fsubs
hlt
clc
cltd
inc
sbb
loop
mov
stos
mov
leave
sub
repnz
jge
push
push
test
out
jnp
das
mov
jae
or
jbe
lret
push
and
jns
pushf
lock
test
into
jo
shl
stos
shl
repnz
inc
ret
mov
pop
sbb
jl
add
fwait
mov
push
add
lret
or
out
add
mov
fiadds
shrl
mov
loope
cwtl
pop
and
daa
pop
pop
cmpsl
push
pushl
lret
int
push
cld
push
ret
sub
aad
cld
add
cmp
cmp
in
jnp
aas
jg
jns
mov
scas
or
jae
dec
popa
outsl
rorl
adc
scas
in
ljmp
int
movsb
ret
hlt
xor
daa
push
leave
xlat
fistpl
lock
mov
fildll
add
pop
ss
inc
cvtpi2ps
jge
lcall
in
add
add
adc
ss
cli
mov
icebp
add
popa
pusha
xchg
das
outsb
xor
xor
cmpsb
lret
aad
mov
inc
jns
cmc
aam
mov
insl
cmp
xchg
mov
push
mull
cmp
das
out
in
into
and
insb
jle
test
popa
mov
xor
xorps
inc
std
xorl
adc
popa
lret
push
sbb
out
in
mov
cld
cli
cmp
out
sub
test
das
or
sbb
stos
in
scas
data16
mov
add
inc
xchg
cmpsb
adc
cmp
test
inc
jg
das
addr16
add
divb
or
pushf
cmpsb
xor
add
xchg
cli
mov
fsubrs
mov
setb
data16
jmp
mov
shll
push
fcomp
data16
pop
hlt
out
add
sahf
jg
fimuls
test
in
push
aas
je
pusha
ss
bnd
sbb
mov
loopne
stos
mov
dec
loope
push
cmp
sub
in
pop
jo
sub
rorb
push
adc
sbb
xor
cmp
mov
xor
cmp
mov
jmp
fisubrl
cli
cmp
lock
xor
cmp
stos
inc
xchg
out
mov
int3
repz
pushf
fwait
imul
pop
sub
push
lock
icebp
jmp
enter
ljmp
xor
ficoms
adc
fcmove
xor
mov
pusha
das
stc
add
pop
pop
clc
push
lea
arpl
adc
mov
and
add
daa
dec
or
xchg
in
rclb
cmp
mov
mov
or
out
out
add
mov
adc
pop
and
sbb
std
or
scas
pop
add
mov
test
jmp
jp
mov
cli
fbld
movsb
pusha
dec
aad
pop
out
jae
xchg
decb
lds
mov
cmp
roll
ficomps
sub
imul
mov
in
jg
repnz
repnz
das
pop
push
cmp
pop
iret
inc
roll
inc
ss
testl
jle
push
roll
iret
dec
add
xchg
dec
dec
jne
lret
out
repz
pop
mov
shrl
pop
dec
test
je
into
str
and
cli
adc
cltd
lahf
popf
sbb
pushf
sbb
out
or
ljmp
in
push
sahf
sbb
jecxz
adc
jp
adc
leave
cmp
xchg
mov
or
clc
add
and
ss
shrb
xchg
inc
mov
add
jge
sub
add
and
jno
adc
lock
loopne
mov
dec
add
fbstp
pop
push
jnp
cld
ds
imul
fmul
shlb
xor
mov
mov
js
imul
add
cmp
inc
lock
push
fists
mov
scas
push
mov
inc
add
jnp
pushf
mov
mov
adc
add
iret
jno
ret
addl
fs
sub
jmp
ret
imul
pop
and
cmp
scas
push
push
rorb
lcall
add
xchg
ljmp
lret
pop
mov
ret
das
popa
mov
pop
movl
clc
clc
mov
loop
mov
sbb
adc
cmp
hlt
jle
pop
out
aaa
inc
pop
jge
push
gs
insl
bound
xchg
cmp
sub
ja
rolb
rcrb
cmc
scas
pop
cld
push
outsl
mov
pop
jmp
repnz
push
das
push
loopne
negl
in
adc
out
ficoml
shll
pop
fcmovne
mov
pop
scas
pop
inc
dec
iret
xor
xchg
jecxz
add
aas
xor
nop
inc
in
push
ffreep
pop
inc
mov
adc
ror
or
mov
adc
xor
jnp
icebp
sbb
das
mov
mov
xchg
push
add
test
lds
insb
xchg
scas
popa
or
add
cmp
scas
mov
cmpsb
mov
inc
out
enter
cmp
mov
and
adc
xlat
sbb
insl
icebp
add
fimull
adcl
mov
jne
push
mov
adc
movsb
shrb
xchg
test
push
add
pop
jge
or
push
lods
mov
push
sbbl
add
fistpl
outsb
add
pop
cmpsb
inc
add
mulb
out
shll
or
and
pushf
push
lahf
add
movsb
jl
sub
test
jbe
repz
cmp
fdivrs
imul
pop
out
mov
adc
inc
enter
or
adc
aas
addb
fstp
mov
mov
dec
or
jno
sbb
shll
lcall
popa
fcoml
mov
push
ret
imul
outsb
dec
jns
or
aad
out
ret
add
std
fisubrs
jae
imul
and
add
cltd
les
inc
mov
add
inc
rcr
pop
push
popf
inc
mov
lcall
sahf
loop
push
jns
loope
pop
loop
add
cmpsb
repnz
fbld
mov
cmpsl
cmp
iret
dec
cli
inc
xor
inc
mov
enter
enter
lret
pushl
mov
aas
std
add
test
adc
adc
jb
mov
push
inc
and
xlat
clc
dec
stos
popa
test
pop
sarl
out
or
push
cmc
out
inc
mov
or
out
xor
or
adc
fdivl
xchg
adc
adc
xor
out
cmpsb
fnsave
test
push
fwait
loope
stos
out
and
add
add
push
push
cltd
insb
jmp
test
and
jo
push
jmp
sbb
and
add
add
mov
in
mov
inc
rol
xchg
dec
push
add
or
clc
imul
jae
cmp
ficomps
adc
es
mov
mov
sbb
mov
loop
clc
push
mov
pop
cmp
repz
inc
adc
mov
mov
add
or
mov
call
xchg
add
pop
sbb
and
decb
inc
or
add
test
ds
hlt
movsl
sti
add
imul
mov
xor
insb
sarl
or
data16
push
sub
push
cmp
scas
xor
xorl
ja
fbld
mov
add
inc
hlt
sbb
jle
popa
xlat
xchg
aad
lcall
ret
cmp
cld
jbe
mov
jae
xor
aas
add
or
jno
in
adc
std
icebp
inc
rcr
test
mov
sub
jne
cltd
fwait
add
add
add
scas
stos
imul
std
test
add
out
add
xchg
mov
in
call
add
inc
add
test
pushf
xor
add
and
lret
hlt
jno
dec
and
sbb
or
shrb
jbe
add
add
pop
jo
imul
push
mov
inc
popa
mov
insb
out
cmp
das
hlt
jp
xor
jp
mov
jae
adc
roll
ja
movsl
cld
scas
mov
mov
sbb
inc
inc
or
stc
fiaddl
and
pop
and
scas
jnp
pop
or
add
fstl
stc
in
mov
mov
popa
imul
aam
cmpsl
sub
push
xor
sub
movsb
sbb
push
xchg
add
inc
mov
mov
mov
mov
xor
pop
clc
xor
adc
mov
cli
dec
int3
hlt
test
inc
loopne
adc
push
jg
bound
sahf
lea
push
in
or
outsb
push
negb
repz
shr
aaa
test
jne
sti
sub
ljmp
andb
xchg
lock
pop
adc
and
out
cmpsl
adc
clc
pop
xchg
shrl
adc
add
setb
inc
adc
jae
sarl
setno
xlat
stos
sarb
lret
pop
test
mov
cmc
mov
enter
or
jg
cld
push
add
outsb
add
inc
sbb
pop
add
dec
jmp
ret
aaa
cld
sub
jnp
out
jae
adc
cld
leave
ret
mov
jbe
outsb
rcrb
dec
sub
loopne
repnz
ret
xchg
nop
xor
mov
sti
push
add
mov
adc
div
xchg
gs
jmp
call
das
sub
cli
sar
das
pushf
jmp
xchg
push
mov
push
aad
outsl
dec
xchg
ds
incb
pop
scas
out
insl
shlb
mov
fwait
adc
jmp
adc
mov
jns
add
jge
xor
jg
push
movsb
call
add
dec
jbe
push
idivl
bswap
mov
add
xchg
push
or
push
loope
sub
hlt
inc
sbb
icebp
inc
mov
mov
and
or
mov
inc
loope
loopne
sbb
xchg
mov
and
mov
fwait
fs
mov
add
dec
lods
test
std
lcall
fdiv
push
out
sub
outsb
mov
in
ljmp
push
cmp
inc
xor
repz
sub
es
mov
add
sbb
jns
mov
lds
pop
into
add
jnp
inc
test
insb
add
sarb
add
add
jecxz
mov
scas
add
adc
and
mov
sbb
in
add
xor
stos
mov
fdiv
mov
xchg
test
dec
add
add
mov
stc
add
dec
add
mov
not
jne
cld
scas
mov
mov
dec
jnp
add
arpl
ja,pt
insl
and
inc
adc
xchg
inc
xchg
jmp
int3
xor
or
inc
xchg
xor
scas
lock
ret
shll
movsl
out
jbe
xor
out
ss
icebp
or
dec
lods
sbb
mov
and
sbb
into
sub
mov
mov
sbb
jg
test
lds
add
hlt
dec
xor
aad
add
pushf
xchg
xchg
push
pop
push
mov
sbb
inc
mov
sbbb
or
push
cmp
aas
or
add
arpl
stos
mov
mov
adc
pop
and
xor
stos
pop
je
cmp
mov
or
loope
imul
out
daa
sub
adc
test
or
add
xchg
mov
inc
mov
popf
add
sbb
mov
jecxz,pt
cmp
lcall
hlt
imul
cld
lods
out
fs
add
cmp
mov
add
enter
adc
mov
ss
cld
inc
and
mov
adc
xchg
clc
jmp
mov
aas
call
push
hlt
inc
jae
cmp
adc
jg
mov
mov
stos
les
out
popa
in
roll
inc
and
in
hlt
xor
jns
cld
pop
stc
subl
adc
lea
dec
and
hlt
xor
mov
lcall
sbb
cs
pop
lret
iret
aam
test
sub
aad
fbstp
in
or
add
clc
jne
pop
jg
add
flds
or
adc
mov
mov
inc
push
and
shlb
push
pop
sbb
repnz
and
ja
xchg
mov
or
enter
lds
in
bound
outsl
push
outsb
ret
sti
push
repz
xor
jp
jle
mov
ss
je
and
pushw
loopne
ret
dec
xor
or
sbb
and
add
pusha
dec
and
or
cmp
push
or
inc
ja
jae
add
rcll
push
sbb
scas
push
mov
add
cmp
xor
int3
cmp
sub
stos
lods
push
mov
bound
add
jecxz
decb
sbb
fimuls
sub
dec
imul
call
test
mov
leave
addl
xchg
xlat
jb
cmpb
mov
shrl
add
inc
cwtl
and
inc
sar
das
arpl
add
enter
nop
gs
pusha
push
sbb
shlb
std
cmp
pop
xor
data16
add
or
lret
jnp
mov
lock
add
add
jae
push
add
aam
jno
lds
fwait
push
jnp
mov
clc
pop
insl
leave
fsubl
xor
lret
neg
and
int3
or
mov
test
cli
sub
add
add
or
cmp
in
in
sub
xor
test
out
adc
lret
mov
jae
add
aaa
je
or
mov
adc
int
imul
fwait
push
mov
shll
sbb
inc
inc
adc
and
cmp
push
add
xchg
push
dec
mov
insb
mov
sti
inc
add
push
rorl
andl
test
jbe
xchg
add
mov
fsubs
sub
das
add
jmp
es
jl
add
fwait
push
mov
pop
popf
jge
push
add
das
pop
fmul
repz
dec
xchg
pop
mov
test
xchg
cmpsb
stc
repz
outsl
adc
cmp
push
outsl
xchg
addr16
mov
xchg
fnstcw
out
jge
sbb
push
stc
sub
mov
std
xor
cmp
lods
test
xor
jo
sub
jno
jmp
adc
sbbl
or
xchg
out
jg
adc
movsl
jae
mov
bound
es
fcmovnu
jbe
add
mov
xor
add
dec
xlat
dec
adc
and
or
or
add
or
insb
enter
add
mov
out
pop
jae
fmulp
mov
xor
push
sub
pop
dec
sub
in
arpl
xchg
movsb
imul
inc
imul
ja
jecxz
sbb
pop
aad
pop
cmpsl
sub
push
inc
cmp
icebp
xchg
into
inc
xchg
rcrl
mov
mov
pop
inc
aaa
mov
dec
mov
sbb
xchg
push
pop
xor
inc
pop
add
loope
adc
add
jp
cmp
inc
sahf
cld
push
fcom
push
or
push
inc
add
sbb
cwtl
fdivrl
add
int
pop
daa
or
sbb
push
cmp
mov
sub
lret
hlt
or
inc
mov
add
test
into
mov
or
pop
leave
mov
mov
adc
cmp
lcall
push
xchg
lahf
stos
jb
jp
jge
push
add
test
xchg
mov
push
dec
test
roll
lods
cmp
cmp
sub
jae
sub
jb
out
push
mov
testl
outsl
pop
jg
or
into
add
pop
repnz
pop
out
ror
jge
lock
movsl
inc
pop
adc
dec
or
scas
sti
mov
sub
aas
mov
add
pop
jns
sar
add
popa
cmp
push
pusha
in
pushf
xchg
cmp
scas
in
add
xor
dec
bound
jo
jno
pop
fcmovnu
fists
pusha
and
dec
dec
mov
sbb
pop
popa
not
push
xor
push
push
in
mov
add
mov
shl
mov
fdivl
ja
inc
out
enter
fcoml
aam
mov
dec
pop
aas
push
pop
stc
and
xchg
out
cltd
gs
rcll
push
pop
xchg
leave
push
test
pop
testl
movsl
loope
xchg
push
fwait
out
mov
pop
inc
repz
jmp
xlat
jg
fidivs
mov
lods
jp
add
out
xor
cmc
ficoms
pop
outsb
lret
out
nop
mov
lock
and
stos
mov
arpl
minps
cmp
sarb
add
fwait
adc
inc
adc
cld
mov
cmpsb
lock
stc
push
popf
mov
inc
jecxz
xor
inc
andb
mov
arpl
add
mov
repnz
and
mov
xor
das
addl
pop
inc
lock
sbb
lock
xchg
ds
xchg
adcb
out
jnp
ret
call
bound
xor
nop
adc
das
pop
addr16
push
decl
and
repz
add
aas
imul
pop
ficoms
sbb
mov
test
jg
ret
pop
aad
cld
stc
ds
add
jae
pop
adc
rol
push
ljmp
pop
rclb
push
cwtl
lock
not
adc
in
and
mov
pop
cmp
pusha
xor
mov
push
aam
enter
orb
es
adc
cmp
inc
loope
add
xchg
jp
push
or
addl
add
add
ds
mov
add
mov
ret
inc
imul
inc
ret
adcl
out
loop
rcrb
dec
movsb
jns
mov
cmp
daa
fists
fcoms
adc
cmp
test
push
mov
cwtl
sahf
test
imul
jecxz
call
jmp
nop
sbbl
in
jg
out
or
sub
fcompl
mov
cmc
mov
sub
mov
dec
divb
add
pop
andl
or
daa
pusha
aam
sarb
lods
mov
add
lret
and
cli
sub
shll
in
movd
mov
lret
add
in
and
leave
test
jecxz
jge
idivb
jmp
jp
cmpsb
andb
xor
xchg
test
cmp
dec
push
cmpl
mov
add
fs
add
hlt
mov
cmp
clc
cmc
add
add
or
add
clc
test
jecxz
in
out
scas
daa
lea
and
and
push
jnp
jp
mov
xchg
repz
rorl
push
add
cli
ss
jecxz
fsubrl
pop
mov
jae
xchg
xchg
add
loope
shll
add
scas
cmp
nop
hlt
out
mov
andl
out
stc
sbb
jno
hlt
lret
push
cmc
or
add
cmpsb
xor
jb
dec
add
cmp
ret
cli
inc
jmp
lea
sbb
je
ja
roll
mov
popf
mov
test
outsl
or
cli
xlat
add
mov
jae
test
fsts
xchg
add
push
out
add
loop
cmpsb
mov
cmp
ja
jns
sbb
and
sbb
ret
add
add
cli
mov
sbb
out
fimuls
shll
movsl
push
test
add
loop
hlt
mov
push
bound
jp
add
jge
dec
jnp
movsb
js
mov
imul
and
ret
add
cs
hlt
jle
push
fildl
xchg
lock
aad
fsubp
cmpsb
testl
ljmp
lahf
test
xor
add
loope
cli
shl
jbe
add
mov
add
add
or
loope
cwtl
inc
cmc
sub
test
and
cmc
cs
push
push
inc
cli
or
jnp
push
jb
add
daa
js
popl
push
test
jecxz
repnz
je
movsb
jne
add
leave
fstpt
xchg
push
adc
push
add
insl
add
lcall
aaa
inc
adcb
cld
sbb
imul
ret
shll
repz
push
add
jbe
inc
jb
scas
lock
adc
fwait
sbb
out
mov
test
sub
addr16
jo
jmp
sbb
jnp
mov
outsb
cmpsl
ret
in
test
and
cmp
add
ja
cli
add
mov
fs
mov
test
movsb
out
add
imull
mov
mov
aaa
mov
out
or
xchg
add
cmpsl
xor
les
fld1
pop
enter
pop
adcl
xor
lahf
inc
in
pop
mov
jno
insl
jle
pop
jbe
push
pop
hlt
cs
rclb
sub
mov
test
sbb
imul
xchg
enter
mov
stos
sbb
stc
mov
fstpl
jns
add
pop
mov
loope
sub
add
add
push
fwait
mov
nop
add
mov
fsts
cmp
arpl
mov
out
xorl
xchg
push
pusha
jnp
subl
aas
jp
scas
js
cmp
arpl
mov
xor
push
hlt
add
addl
lret
adc
cmpb
xchg
push
shr
xor
add
icebp
out
add
push
jmp
or
mov
mov
and
sub
aaa
pop
and
push
test
jecxz
shll
add
out
mov
cmc
ret
repnz
add
push
scas
outsb
add
daa
push
jns
fsubl
push
ja
sti
cmp
push
and
add
pop
cmpsl
imul
xchg
push
test
xchg
push
les
ret
cltd
add
adc
fsubl
xor
nop
not
mov
cli
jl
decb
add
ja
add
scas
out
sbb
add
imul
jns
out
lea
sub
or
push
xchg
scas
std
sbb
popf
mov
xor
hlt
sbb
cmpsb
or
jbe
jb
in
int3
ss
ret
push
ret
add
jp
add
cmp
aaa
or
xchg
sub
push
fnstsw
push
mov
push
cmp
stos
sbb
and
adc
orl
cmp
scas
xor
jnp
mov
xor
stc
mov
in
sub
repnz
divb
rep
addr16
push
into
ficoml
out
insl
lret
cmpsb
dec
imul
mov
faddl
loopne
fdiv
jae
cmp
sbbl
mov
and
add
push
hlt
add
das
or
not
std
add
dec
popa
mov
xchg
fwait
repz
fdivl
add
ffreep
loopne
cmc
mov
ja
sarb
mov
pusha
outsl
mov
add
jb
clc
sbb
lods
and
or
mov
add
jo
shl
mov
add
jl
adc
cli
pop
xchg
sahf
sti
pop
imul
rcrb
insb
pop
inc
aam
mov
lock
add
cmp
cltd
add
add
mov
jae
xchg
cli
cmp
adcl
mov
push
mov
sbb
inc
jo
or
fistl
outsl
insb
sbb
adc
mov
iret
inc
aam
incb
xor
lds
in
jbe
arpl
loope
xchg
push
lret
sti
mov
add
mov
fdiv
adc
mov
pop
lret
test
outsb
add
lret
push
aam
cld
mov
rolb
fstpt
xchg
add
sbb
shlb
mov
test
pop
adc
out
sti
and
aad
frstor
sbb
les
pop
adcl
mov
test
scas
mov
or
add
push
jge
xlat
sub
in
or
sbbb
mov
mov
orl
cmpsl
testb
mov
bound
cmp
ret
hlt
xchg
ja
cmpb
lea
shl
aaa
mov
push
daa
pop
or
xchg
stos
loop
out
stos
call
xchg
push
cmp
xchg
add
bound
xchg
cmp
sbb
cmp
pop
adc
sbb
mov
xchg
out
lahf
cmpb
cmpsb
add
fwait
cli
testl
cld
ja
out
jne
fcompl
fadds
mov
xorb
add
inc
or
push
cmp
call
bound
test
xchg
inc
and
out
mov
and
adc
add
jo
add
stc
lock
jl
add
sbb
mov
repz
xchg
add
data16
sub
jb
mov
sub
add
aas
mov
cmp
add
xchg
cmc
lret
std
add
test
enter
ja
cmp
test
jns
sahf
pop
xchg
out
mov
xchg
push
subb
les
mov
xchg
sub
popa
adc
xchg
lcall
push
mov
add
jg
push
mov
mov
mov
cmpsb
jae
pop
inc
jne
push
repz
mov
mov
mov
dec
filds
mov
push
ret
jbe
aam
aas
sbb
jg
jle
pop
pop
xor
or
cltd
cmp
mov
mov
movsl
push
shll
out
or
adc
loope
loopne
icebp
ds
hlt
dec
incl
daa
cmp
jns
push
stos
sbb
inc
add
xor
jbe
jg
in
cmpb
mov
adc
cmp
leave
outsb
out
out
cmp
into
out
dec
mov
add
cld
stos
fs
es
jne
loop
dec
inc
sub
repnz
flds
add
pop
add
hlt
out
mov
les
ja
or
push
xchg
enter
in
pushf
ds
mov
andl
xchg
testb
int3
repnz
push
cmp
test
jp
dec
or
xchg
mov
sub
dec
xchg
jle
fwait
dec
mov
mov
add
out
or
into
mov
mov
push
std
shll
jnp
addr16
adc
add
sti
or
andl
mov
repz
add
pusha
incb
xor
in
jp
idivb
add
aad
add
xchg
jl
enter
sub
xor
out
sbb
and
test
pop
movsl
jne
sub
mov
jl
mov
cmpsl
sub
dec
add
push
xlat
lcall
xchg
add
addb
add
lea
in
cmp
push
mov
fwait
adc
idivl
pop
sub
jo
daa
jg
outsl
add
clc
cmp
push
push
adc
icebp
subl
pop
hlt
inc
jp
xchg
hlt
and
in
pop
add
or
add
mov
aad
mov
push
xor
cli
mov
mov
cld
push
or
les
adc
fsubr
lahf
mov
mov
xchg
test
std
add
repz
add
mov
aam
ljmp
fcoml
shll
mov
xchg
jno
ljmp
add
in
ret
add
jne
out
mov
push
test
shrl
movb
sbb
adc
xchg
out
mov
ljmp
mov
clc
mov
add
jle
cmp
add
mov
gs
aam
rep
fsubp
mov
in
push
imul
push
pop
add
jg
pop
repz
dec
add
insb
fisubrl
subb
loop
lods
repz
push
aad
bnd
push
add
add
xor
mov
cld
pop
xchg
out
lret
jbe
testl
shrl
or
pushf
cmpl
jbe
cli
ss
mov
adc
sbb
out
daa
push
fs
lret
mov
add
mov
jp
in
or
inc
cmp
dec
dec
ret
jns
add
in
out
jmp
in
shr
imul
notb
mov
add
mov
rolb
push
pushaw
in
xor
les
cltd
cli
test
aaa
mov
add
push
jns
cmpb
movsb
xorb
adc
add
sub
jmp
sbb
repz
xchg
fsts
rcll
ret
mov
cli
je
stc
sub
add
mov
jecxz
out
jae
jno
lahf
adc
jle
ficoml
ja
clc
push
lods
outsb
inc
mov
cltd
in
pop
push
sbb
xor
repnz
push
inc
mov
jb
out
lock
aad
xor
sbb
ftst
lahf
push
cs
clc
mov
push
cli
out
xchg
jno
add
cmc
addr16
add
cmp
xchg
add
sbb
pop
add
cmp
ret
add
emms
dec
xor
outsl
mov
fwait
jae
adc
cmp
leave
das
cmp
cld
mov
sub
sahf
mov
or
mov
mov
lds
cli
pop
xlat
out
adc
mov
sub
in
aad
mov
sub
cmc
sarb
dec
aaa
push
jecxz
ss
out
inc
sbb
cmp
or
cmc
ljmp
movsl
inc
inc
repnz
adc
mov
scas
inc
into
das
cmpb
mov
out
xor
outsb
pop
adcl
jmp
lds
push
hlt
mov
loop
push
fnsave
add
orl
ja
les
sub
iret
fidivs
xchg
cwtl
insl
add
jae
ret
mov
or
add
aaa
mov
mov
insl
cli
adc
push
add
xchg
stc
push
mov
movl
cld
cmpsl
data16
cmpps
add
cmc
stos
sbb
lock
add
in
mov
jge
shll
sub
push
data16
movsb
adc
push
push
out
fdivrl
cld
add
out
inc
cmpsb
leave
and
cli
adc
cli
aaa
into
xor
pop
xchg
adc
cmp
jbe
add
xchg
imul
pusha
nop
mov
ret
shrb
xchg
es
jae
mov
jg
adc
arpl
mov
add
adc
jae
pop
xor
fiadds
sbb
loopne
adc
or
inc
add
sar
cmc
xor
lret
dec
out
pop
inc
test
pop
cmc
jnp
jno
addb
rorl
adc
movd
fiadds
or
jnp
mov
inc
xor
cmp
jb
dec
cmp
inc
rcr
add
subb
aaa
dec
add
and
jno
add
repnz
test
and
andl
push
mov
bound
adc
imul
add
cld
pop
mov
cmc
in
and
sbb
sbb
add
cmp
es
dec
lahf
movsl
sub
xlat
xchg
mov
insl
mov
hlt
cmp
jns
sbb
add
push
js
or
mov
cmpsb
cmc
inc
jb
add
or
cmp
ss
inc
adc
push
xor
in
lock
out
outsl
aas
mov
repnz
sbb
enter
xchg
push
xor
addl
sbb
inc
mov
test
out
pmovmskb
hlt
dec
jp
mov
roll
in
or
inc
mov
and
adc
lea
sbbl
test
mov
aas
in
aaa
lds
lgdtl
jle
cs
add
and
out
stos
loope
loopne
inc
xchg
pushw
xor
test
cmpsb
dec
dec
add
das
inc
push
cld
pop
movl
jl
jne
cli
ja
xor
sub
imul
pop
pop
pop
fcoms
fidivs
cld
cmp
cltd
xor
aaa
popa
jl
adc
sub
add
in
sub
dec
dec
inc
sbb
add
std
mov
cwtl
imul
push
stos
mov
adc
and
shr
ja
andb
dec
pop
adc
test
mov
repz
dec
jns
shrl
add
mov
jmp
inc
mov
push
sub
cld
sar
popa
or
and
adc
push
mov
subb
pop
cmpl
mov
sbb
add
add
sub
and
adc
clc
xor
fists
idivl
fisubrs
rcrb
fcompl
movsl
mov
dec
outsl
roll
repz
mov
adc
insb
insb
sub
stos
mov
jno
sub
mov
clc
add
pop
das
push
inc
jae
rcrb
cld
hlt
xor
mov
ds
cmp
pop
xor
mov
or
xlat
push
sbb
sub
sbb
dec
jbe
push
mov
jecxz
cmpsl
xchg
pusha
lcall
gs
enter
inc
ret
push
movsl
xchg
outsl
pop
add
data16
out
xchg
mov
iret
add
cmp
jne
pop
orl
cld
and
pop
inc
call
cld
xchg
fwait
jecxz
call
int3
add
adc
xor
sbb
cmp
rcrl
and
inc
cld
xor
jns
cmp
sbb
sti
and
stos
scas
and
es
jp
cmp
insl
push
aas
lds
addl
add
or
fwait
shlb
push
mov
loop
sub
xor
xchg
sub
fwait
mov
std
in
jl
sbb
mov
cmp
add
mov
out
push
xor
xchg
cmpsb
add
lea
add
xchg
sti
lods
test
out
imulb
lock
jo
add
adc
cld
rcr
jbe
push
fildl
mov
cld
mov
xor
repz
pop
push
out
pop
and
add
adc
out
mov
inc
ret
negb
push
add
adc
xor
js
cmp
dec
clc
cmp
mov
mov
push
pop
inc
sarl
popa
add
mov
xchg
in
mov
jle
lea
mov
sub
sbb
mov
subl
lods
jg
test
shlb
leave
cmp
iret
ficoms
aam
pop
mov
shll
or
hlt
dec
aaa
adcb
mov
loop
pop
gs
cmp
fadds
hlt
mov
sub
inc
mov
pop
pop
jbe
dec
inc
bound
jnp
pop
mov
cld
mov
sub
mov
pop
or
lcall
pop
cltd
imul
mov
xchg
add
and
fiaddl
cld
out
cld
pop
push
cmovb
imul
sub
push
add
in
out
in
jo
push
mov
add
test
jne
sbb
mov
cli
sti
sub
ret
mov
mov
fsubl
bound
cld
mov
ss
addb
aas
mov
push
loope
push
mov
adc
pop
lds
popa
xlat
jbe
push
inc
fisubrs
and
lods
cmpb
fiadds
xor
fdivrp
insl
inc
mov
ljmp
jg
push
scas
sti
out
jne
mov
outsl
cmp
add
add
push
mov
dec
add
imull
in
mov
clc
scas
in
sti
or
shrl
shr
ldmxcsr
mov
mov
jl
shrb
pop
xchg
jp
pop
pop
fimuls
aas
and
into
xchg
mov
push
dec
ljmp
scas
or
pop
mov
out
jp
sbb
pop
das
or
loop
inc
inc
jge
leave
loope
ret
das
mov
push
xor
xchg
adc
test
scas
jg
xor
ds
mov
int
mov
test
std
xor
mov
add
xor
mov
ljmp
fisubl
mov
push
or
leave
push
sbb
mov
xchg
mov
inc
or
xor
fsubl
jae
pop
aas
clc
js
sub
repz
aaa
idivl
inc
add
add
jmp
mov
inc
cmpb
ds
in
scas
adc
jmp
mov
fmul
mov
pop
adc
shl
insb
ret
add
inc
das
lret
outsb
jg
xor
cmp
inc
add
dec
mov
dec
int
cwtl
sbb
stos
pop
enter
cmpb
xor
shl
jg
add
int3
rolb
lret
sbb
dec
mov
lock
ficoml
push
add
sub
cmp
cld
stos
ss
push
push
test
jecxz
dec
out
push
les
mov
pop
icebp
loopne
rorl
nop
and
popf
cmp
inc
adc
out
xor
add
movsb
in
push
mov
in
incl
addr16
rol
sub
mov
add
outsb
popf
jle
sahf
fdivr
mov
sub
xlat
leave
movsb
pop
xchg
jmp
and
fiadds
stos
out
mov
in
sarb
scas
into
inc
loopne
xchg
repnz
insb
jge
mov
or
sarb
inc
add
mov
jmp
ja
and
dec
adc
orb
cmp
gs
sub
fnstenv
or
inc
sahf
mov
fadd
popa
adc
mov
in
mov
xor
hlt
fwait
push
cli
stc
sbbl
xchg
xor
faddl
popa
das
and
aam
sub
inc
adc
and
push
cmc
mov
mov
adc
adc
loope
cmpsl
xor
insb
out
jg
jns
or
inc
pop
sub
repnz
data16
adc
stos
xlat
adc
mov
push
jbe
into
les
call
sbb
add
sbb
jnp
jno
add
push
lret
lret
add
lcall
adc
add
mov
movsl
adc
shll
cmp
and
jle
jbe
aad
adc
cmpsl
and
scas
rorl
das
imul
hlt
cmp
scas
inc
test
pop
loopne
pop
inc
in
aaa
add
or
scas
cwtl
push
push
pushf
pop
fiadds
loopne
inc
dec
repz
xchg
pop
inc
mov
xchg
xor
loop
mov
add
nop
push
mov
pushl
loop
lret
int3
xchg
push
nop
cmp
mov
popa
xor
aaa
mov
cmp
xchg
add
cmp
les
mov
aam
dec
push
mov
mov
xchg
hlt
or
add
and
inc
test
sbb
lahf
add
push
bound
loop
adc
popa
pushf
aam
cmp
and
xlat
inc
xor
mov
and
pusha
jns
jg
xor
mov
xchg
sbb
add
push
pop
and
jge
insl
iret
loop
xchg
bound
insl
cld
adc
data16
adc
shrl
mov
sbb
movsb
enter
mov
xor
dec
xchg
lcall
loop
pop
std
mov
push
int3
xlat
shlb
gs
add
pop
lds
mov
inc
int
mov
ret
inc
mov
adc
adc
inc
push
aaa
jae
in
pop
pop
pop
mov
jg,pt
popa
mov
xchg
lods
adc
call
cwtl
lret
jge
mov
add
scas
sbb
es
lods
jno
xchg
add
inc
sahf
lock
mov
cmpsb
mov
or
push
jge
jg
insl
hlt
sbb
lock
xchg
push
loop
mov
xchg
push
lods
sub
xchg
aad
jl
cli
int
cmc
dec
icebp
subl
xor
cltd
sbb
cmpsb
xchg
jno
je
ror
mov
jge
dec
jnp
sbb
test
ret
fidivrl
bound
sub
scas
add
xlat
and
repz
dec
decl
inc
push
in
add
xlat
cmp
pop
sub
loopne
fcomi
jl
das
adc
cmp
or
jae
add
push
xor
outsl
fst
or
hlt
shll
mov
add
xorb
push
cwtl
add
jno
jecxz
in
and
xchg
lds
mov
cld
hlt
movsl
repz
in
jp
or
xor
inc
cmp
sti
loop
or
negl
outsl
xor
inc
add
clc
cmovp
sub
mov
jns
test
push
cmpsb
popf
add
mov
and
nop
add
dec
dec
or
mov
enter
mov
cmpsl
stos
mov
cmp
add
push
das
mov
pop
jne
sbbb
mov
mov
xchg
adc
and
push
and
insb
cmpsb
add
mov
xor
clc
and
mov
rcr
aas
outsl
add
out
aad
test
sbb
loope
xchg
mov
clc
add
jbe
lret
popa
push
hlt
add
arpl
sar
push
fsubrs
sbb
mov
lods
xor
sbb
xchg
cmp
adc
mov
es
push
xchg
add
inc
inc
or
add
aas
add
mov
cltd
fs
add
dec
pop
jle
xor
xchg
jo
lds
pop
fcmovb
sbb
xchg
lock
mov
mov
sbb
subl
and
loopne
loop
ret
mov
lret
testb
fcoml
sbb
xor
fists
fiaddl
add
pop
pushf
or
inc
add
negl
out
sub
sbb
push
sbb
mov
in
and
push
flds
push
push
ret
out
jae
mov
out
cmp
cld
or
add
pop
mov
lds
mov
scas
add
dec
push
jecxz
repnz
insb
dec
incb
dec
loop
stc
lock
stos
ja
pop
movsl
repz
aam
mov
subl
mov
jno
mov
fidivl
ljmp
mov
aaa
mov
ljmp
cld
popf
ret
or
es
mov
or
add
sub
rcrb
lret
stc
add
es
ret
sbb
adcl
jp
adc
rolb
scas
sub
sub
mov
mov
sbb
in
jge
mov
mov
add
xchg
sahf
jp
fadds
add
out
iret
fmul
rcl
xor
ja
aad
or
clc
cltd
mov
push
push
sub
div
adcl
popf
sub
mov
push
xchg
out
es
pop
std
cmp
ret
mov
ret
rolb
arpl
adc
out
dec
or
xor
out
subl
std
sbb
inc
add
cmp
ffree
fisubl
test
clc
leave
insb
mov
movsb
push
loopne
nop
mov
imul
addr16
lods
cwtl
add
jp
fcomps
sahf
mov
xlat
lods
dec
popf
mov
popa
fs
xchg
inc
ljmp
iret
xchg
sub
pop
lock
loopne
and
dec
stc
out
inc
jae
rorl
jg
push
out
mov
jne
jl
cmp
lock
bound
add
imul
xor
add
insl
js
lods
push
mov
add
dec
push
cmp
sub
sti
lret
push
push
test
addl
sbb
push
test
shll
lea
addr16
in
in
pop
and
inc
mov
jo
je
xor
adc
dec
daa
movsl
add
pop
repz
push
add
jns
or
mov
inc
or
mov
add
std
fists
mov
psrld
add
cmp
pop
add
addb
add
mov
fstpt
add
sarb
mov
xor
jg
inc
fnsave
pop
cmp
sbb
xlat
repnz
xor
ret
arpl
jp
push
cmp
mov
call
push
xchg
jg
add
psubd
fwait
add
fcomip
cmpsl
jns
jae
add
jge
stc
jbe
xor
je
repz
mov
jge
sbb
out
mov
idivb
arpl
cmp
in
stos
repz
por
sbb
jae
aad
cmp
fwait
mov
lods
xchg
add
jne
jmp
ficoms
add
pushf
dec
in
popf
loop
add
xchg
ja
add
push
sti
push
adc
add
popf
les
fidivrl
lods
add
add
xacquire
out
pop
jecxz
not
mov
ret
ss
mov
push
add
sbb
xchg
in
decb
roll
and
mov
out
pop
cmpsl
test
adc
fisttps
mov
mov
in
dec
lea
and
adc
fildl
div
dec
mov
insl
add
js
push
fidivrl
shrl
hlt
jne
push
stos
inc
push
xorl
xor
scas
dec
push
and
pop
out
outsl
fisubrs
aas
pop
sub
mov
stos
add
pop
stc
adc
add
data16
adc
xor
mov
push
lods
xchg
mov
sub
inc
push
add
push
and
pop
ljmp
or
outsb
leave
xor
stos
mov
inc
outsl
arpl
nop
xchg
rol
mov
addl
cld
jae
jo
xchg
ret
push
add
cmpsb
mov
out
outsl
test
xor
pop
jo
adc
jae
xchg
mov
adc
pop
jge
outsl
push
mov
xchg
sbb
add
jno
ja
out
addl
and
ds
out
inc
cmpsb
call
fmulp
sbb
movsb
adc
lock
fildl
test
cld
cmc
mov
mov
and
jmp
out
loop
push
insb
sub
scas
mov
adc
fdivr
into
sti
fwait
pop
sbb
hlt
xchg
add
and
mov
jge
add
mov
rol
add
sub
pushf
test
andl
sbb
push
xor
jns
sbbl
fwait
lds
aam
jecxz
ds
mov
inc
xchg
add
inc
setns
int
add
lret
aaa
cmpsl
adc
testl
add
xchg
add
push
pop
xchg
jo
cltd
mov
aad
xchg
popf
push
hlt
jns
and
adc
cmp
add
xor
addl
mov
and
repnz
int3
idivb
lea
xchg
adc
dec
inc
movsb
cld
jae
les
add
jle
test
sbb
jg
popf
add
stc
enter
aad
add
dec
push
lret
daa
xchg
mov
and
lahf
add
pop
mov
jle
add
pop
ljmp
in
mov
mov
cmpsb
cld
or
inc
jne
cmp
vphaddbd
add
popf
fucomi
lret
nop
adcb
in
sub
sub
int
and
add
test
fsts
adc
cmpsl
sti
xchg
gs
sbbb
in
pop
std
xor
outsl
xchg
mov
shrl
out
stc
movsb
int
icebp
out
push
sbb
repnz
xchg
sbb
xchg
sub
hlt
add
mov
rolb
sbbb
call
mov
cli
mov
out
fcomps
mov
sub
xor
push
add
push
sub
out
call
movsb
es
loop
add
jg
cmp
add
add
jo
stc
addr16
xorb
xor
lds
fiaddl
in
loope
push
and
fcomi
push
cmp
test
mov
jae
roll
ljmp
xchg
sbb
pop
cmp
hlt
pop
xchg
or
lods
subb
sub
shrl
movb
hlt
mov
adc
cmpsb
sarl
cmp
not
test
push
jecxz
jo
mov
shll
push
lcall
dec
cmp
popa
insl
add
push
nop
cld
fnstcw
sub
cwtl
push
xchg
dec
and
mov
orl
adc
pop
fisttpl
add
mov
out
mov
in
repnz
adc
add
into
fsubl
in
sahf
repnz
add
out
fisttps
fsub
les
adc
les
pop
dec
sbb
xorl
mov
test
movsl
cld
mov
mov
popa
mov
jl
sti
mov
out
fdivs
mov
cmpsl
add
dec
push
loopne
or
sti
mov
add
xchg
jp
cmpsl
xchg
push
cld
leave
orl
mov
mov
je
iret
inc
jns
cmp
and
fcmovu
push
roll
pop
pop
xor
mov
hlt
imul
pushf
popl
mov
js
stos
int
xchg
in
push
sub
cmp
rorb
jnp
lock
push
jge
add
les
mov
mov
sbb
iret
cmc
sbb
jge
xlat
dec
std
inc
mov
aad
sub
aam
push
mov
lds
mov
jl
je
test
mov
cmpsl
fwait
jns
xchg
mov
xchg
js
aad
and
test
adc
leave
add
mov
jl
cmc
xchg
add
sar
add
imulb
mov
jne
les
push
leave
mov
dec
lret
out
jg
xor
int3
ret
ja
icebp
xlat
enter
jle
mov
inc
sbb
test
out
push
add
shrl
xchg
xchg
push
cmp
ja
add
push
fldl
mov
xchg
jg
cld
dec
cwtl
icebp
pop
xlat
xchg
in
test
sbb
inc
xchg
mov
jnp
xorl
ds
push
cmp
jg
add
pushf
pop
lods
adc
in
mov
sbb
jnp
add
mov
jne
movsl
icebp
test
xchg
sahf
push
xor
aad
push
inc
cli
jae
mov
mov
xchg
lahf
mov
jnp
mov
xchg
fildl
mov
mov
out
mov
mov
pop
xchg
add
inc
scas
jae
push
mov
leave
add
sbb
lods
lea
jnp
lret
sbb
les
testl
jae
mov
xchg
mov
andl
shrb
push
add
mov
hlt
cmpsb
mov
adc
add
out
inc
sarl
push
adc
sub
jmp
jge
repz
outsl
add
imul
adc
fs
sub
xor
jp
cld
sbbl
xor
outsl
loopne
int
jecxz
add
hlt
cli
inc
popa
adc
sub
mov
adc
add
add
xor
or
mov
adc
stc
push
jno
cld
mov
push
pop
adc
aaa
add
lock
or
loope
out
inc
push
dec
loopne
mov
push
add
out
faddp
pop
mov
jg
mov
sbbb
je
jo
cmpsl
in
addr16
push
roll
mul
xchg
subl
pop
repnz
jns
mul
cld
pop
subb
stc
jo
mov
incb
xchg
iret
push
je
lods
push
mov
mov
ss
add
lret
xor
mov
fnstsw
push
cmpsb
xor
popa
mov
mov
xchg
roll
out
out
mov
imul
sti
add
pusha
mull
into
jp
push
xchg
jecxz
xchg
cmpsl
loop
lret
inc
out
test
mov
mov
push
out
imul
cld
cmpsl
inc
pop
mov
shl
add
adc
jbe
push
shll
loop
xor
sbb
add
mov
in
movsb
push
mov
add
mov
loop
sbb
pop
push
push
add
sbb
or
shll
inc
dec
pusha
sbb
adc
jne
stos
mov
test
xor
dec
push
jb
out
sub
push
testb
sbb
pop
pop
out
jmp
mov
sarb
push
jecxz
cmp
add
cld
cmp
icebp
add
and
add
leave
scas
je
in
cmp
xchg
ret
xor
test
adc
mov
push
adc
cmpsb
jb
mov
xchg
lret
outsb
jns
popa
add
inc
repz
push
dec
pop
inc
sbb
sbbl
cld
xchg
jns
daa
lods
inc
sbb
call
jnp
repnz
shl
push
call
add
inc
push
jle
inc
pop
add
inc
xorb
add
cmp
in
and
lea
mov
decl
je
dec
pop
outsb
add
push
sahf
jne
sbb
mov
inc
sbb
mov
jmp
push
mov
add
xchg
fdivrs
cmp
add
xlat
mov
jnp
add
test
in
xchg
sbb
outsb
and
jo
jb
push
sub
das
fsubl
jecxz
adc
and
mov
pop
add
mov
jecxz
or
mov
xor
xchg
or
add
ss
ror
or
mov
mov
icebp
in
inc
test
add
add
pop
sub
or
movsb
ljmp
fcoml
icebp
out
repz
add
push
mov
add
negl
call
fldcw
jl
gs
ds
add
sbb
xor
push
cmc
or
pop
out
add
mov
mov
je
shl
mov
cmp
and
rcrb
or
sub
into
jge
inc
cs
cmc
decl
cmpsl
inc
inc
push
mov
sbb
mov
in
or
pop
out
dec
test
fcompl
mov
hlt
mov
jl
enter
xor
xchg
xlat
inc
xor
cmpsl
jb
insl
cltd
sub
aaa
outsb
cmp
xlat
jno
dec
sbb
cmpsb
xchg
add
add
push
mov
cmp
test
inc
cwtl
cmpsl
cld
int3
iret
es
fnstcw
xor
lret
insl
movsb
outsl
js
pop
jo
dec
mov
in
stos
add
pop
cmp
clc
or
daa
mov
int3
js
xchg
xchg
and
test
jmp
push
dec
and
mov
leave
es
push
jg
popf
les
mov
notb
test
xor
add
jns
add
adc
popa
cmp
inc
xchg
icebp
data16
add
scas
cld
cmp
or
push
or
add
ja
js
xchg
cmp
lea
mov
mov
jne
jnp
mov
xchg
out
idivl
add
xchg
fsts
cwtl
xchg
pop
mov
mov
jne
cmpsl
test
mov
add
bound
in
jns
cwtl
inc
mov
hlt
ss
push
push
lds
push
xlat
push
pop
lock
or
in
add
stc
test
in
mov
add
out
insb
sbb
aad
pop
cmc
mov
daa
outsb
xchg
xchg
dec
dec
xchg
lock
xlat
lds
fwait
inc
add
in
cld
xor
add
add
or
dec
rcrb
jne
out
add
lods
jl
mov
aaa
inc
mov
jbe
cmp
cmp
sti
jmp
adc
pop
mov
lods
mov
loop
pop
neg
add
push
jnp
push
pop
fs
inc
ret
aam
clc
jne
xor
jns
and
sbb
cs
xlat
dec
jbe
mov
jecxz
cmp
ss
out
rclb
sahf
movsl
aad
mov
andl
add
push
pusha
push
mov
out
mov
xlat
add
insb
mov
xchg
inc
lcall
bnd
jne
sbb
les
push
add
popl
incb
cmpxchg
fiaddl
inc
or
add
movsl
pop
je
mov
jle
add
in
sbb
mov
jne
rcrl
add
ds
cmpsb
call
pop
cmp
sbb
mov
jae
xchg
outsl
ja,pn
lahf
enter
dec
in
imul
cld
cli
mov
add
out
mov
jo
add
xor
inc
clc
out
imul
pop
rcll
push
add
sti
enter
in
js
je
daa
leave
mov
xchg
or
popa
out
fildl
clc
ret
cmpsb
add
dec
stc
xor
jp,pn
outsb
inc
dec
and
add
cwtl
aam
add
lods
dec
add
xlat
cmp
ret
hlt
inc
fcoms
xchg
aam
ret
and
inc
sbb
gs
or
add
divl
mov
movl
dec
roll
out
push
or
mov
std
and
add
add
add
pusha
movsb
int3
mov
mov
cmpsl
xchg
out
les
sbb
scas
jnp
rclb
push
out
popf
and
in
clc
mov
add
test
push
nop
testb
xchg
cmc
push
pop
jo
lock
add
xchg
hlt
sti
cmp
mov
cmc
add
add
outsl
out
add
jp
add
xor
arpl
add
sub
add
imul
cld
jne
xchg
cmp
push
ja
stos
jae
shll
cmpsb
outsl
or
or
mov
add
add
jmp
iret
aam
xchg
add
pop
push
pop
movsl
pop
lret
cmpsb
add
mov
stos
add
mov
xchg
or
fsubrl
pop
mov
add
xchg
js
or
add
mov
pop
inc
loopne
add
add
dec
dec
inc
cmc
add
in
sub
repnz
pop
in
out
add
fdivrl
mov
clc
push
xchg
pushf
mov
lock
cli
mov
add
xchg
xchg
cmp
push
sti
push
lock
sub
fisubl
into
add
ja
pop
inc
arpl
sub
pop
pushf
fdiv
add
jg
inc
mov
cmp
add
push
out
sti
pop
ds
jl
jbe
and
in
mov
fdivrl
add
pop
pop
loope
add
lret
xchg
shlb
cltd
push
in
jecxz
ret
add
lahf
jo
add
jg
test
ljmp
xabort
loopne
lea
or
cwtl
jl
movsb
rolb
fistl
or
in
jnp
rol
cmpsl
fcomps
cli
add
jno
pop
clc
push
pop
xchg
jne
xchg
xchg
pushf
mov
cs
add
sbb
ror
xchg
add
fwait
ja
pop
mov
pop
xchg
cmp
inc
mov
ret
add
pop
add
divb
loopne
jmp
mov
xchg
pop
xchg
push
scas
out
aad
out
ret
ljmp
cmc
push
inc
outsb
jno
add
out
mov
jmp
imul
aam
fwait
mov
dec
mov
push
xchg
fbstp
add
inc
je
bound
pop
pop
jge
loopne
insb
ds
mov
ffree
je
pop
xorl
mov
jne
pop
dec
and
push
xchg
jge
mov
pop
call
incb
jno
int
icebp
push
in
xor
mov
cmp
xlat
roll
popl
iret
lds
fistps
fwait
jg
push
imul
add
or
push
push
add
pop
jnp
das
fiaddl
lahf
jl
xchg
cld
out
mov
mov
ss
iret
xchg
mov
fiadds
sbb
sbb
xchg
xchg
xor
pusha
mov
push
rolb
pop
shll
add
xor
jmp
inc
lcall
adc
out
pop
call
cltd
cmp
movsl
inc
xchg
mov
sbb
and
add
jns
cmpsb
jne
add
dec
xor
xchg
xchg
stos
fdivr
push
add
fdivrp
jbe
popa
push
pop
or
ret
xchg
lret
ljmp
cli
jmp
or
mov
hlt
sahf
cmpsl
inc
pop
or
add
fcomps
mov
out
sbb
jae
add
lcall
add
xchg
hlt
and
test
dec
or
add
test
add
scas
lea
pop
cmpsb
aam
or
add
jmp
cli
cld
test
adc
mov
jge
out
add
jmp
out
ljmp
xchg
sti
lcall
icebp
adc
xchg
dec
sub
nop
mov
addl
aam
mov
ljmp
fs
sub
enter
stc
xchg
xorl
jmp
mov
cmp
repnz
push
add
xchg
leave
out
add
jle
cltd
nop
adc
add
subl
lds
fs
and
outsb
pop
mov
xlat
leave
cmp
fwait
xchg
jnp
adc
xor
insb
cmpsb
jge
bound
add
sbb
aam
cmp
fwait
mov
call
in
lret
sbb
jmp
int3
outsl
inc
roll
push
mov
add
pop
in
jb
sbb
int3
mov
pop
xor
mov
or
aam
mov
jae
out
jp
dec
sub
insb
mov
dec
pop
add
pop
pop
or
fcoml
movsb
out
lcall
jl
push
int3
add
jle
repz
stos
outsb
inc
iret
dec
aam
cmpsb
add
add
xchg
inc
sub
pop
and
movsb
lea
xchg
fbld
adc
pop
pop
fcomps
pop
aad
mov
add
push
xorl
loope
ja
jg
xchg
adc
call
cltd
fdivrl
and
sbb
ja
add
mov
insb
popf
xor
mov
mov
or
add
std
sub
sub
push
jae
jp
sub
aam
popf
push
dec
sub
mov
xlat
push
cmpsb
incl
fs
add
clc
fwait
loopne
push
inc
add
add
repz
add
sbb
push
data16
fucomi
add
sbb
mov
dec
rcll
push
lock
sub
and
inc
cld
add
clc
insb
add
mov
mov
ja
cmp
cmp
jmp
add
insb
repnz
add
xorb
or
dec
lret
mov
call
test
out
ja
add
jg
push
mov
xlat
cmp
mov
adc
pushl
add
aaa
in
mov
shll
add
push
jmp
mov
cmpb
mov
add
shll
jp
mov
hlt
jmp
movlps
in
adc
push
push
pushl
add
ficoms
mov
lret
ss
pop
mov
push
add
clc
mov
call
mov
leave
call
mov
loop
test
aam
inc
jg
mov
cmpl
in
lods
cmpsl
aam
xchg
imul
add
sbb
mov
cltd
sub
lea
mov
outsb
or
jne
cmp
or
lds
loope
cwtl
outsl
adc
push
push
nop
adcl
xor
add
data16
sbb
push
jmp
inc
add
sbb
pop
jno
or
cld
popf
aad
out
mov
cmp
lret
push
outsl
xchg
fstps
and
dec
pop
insb
and
outsl
sub
pop
daa
pushf
add
outsb
adc
xchg
cmp
fdiv
lock
sarb
jge
aas
sbbl
xor
or
sub
jmp
inc
adc
jmp
adc
xchg
jge
out
pop
cwtl
add
adc
orb
jecxz
cmpsl
popa
lea
cld
scas
or
jo
jbe
outsb
mov
in
nop
lret
pusha
xorl
imul
add
cmpsl
pop
add
lret
sbb
adc
repnz
xor
pop
add
movsl
ret
and
adc
sti
xor
add
or
xchg
mov
mov
add
scas
jecxz
sbb
cmp
dec
subb
add
in
mov
jnp
mov
jl
push
add
jne
dec
add
andb
add
movsl
push
and
jecxz
xchg
jb
or
fdivrp
and
push
add
imul
mov
add
repz
xor
jecxz
pushf
sub
jecxz
mov
adcl
int3
jle
loope
int
mov
nop
sbb
jp
ja
sbb
addb
test
sbb
and
push
rolb
add
jg
sahf
or
aas
add
or
add
je
mov
cld
shrl
jp
mov
push
mov
jecxz
pop
lret
scas
mov
add
jp
push
add
mov
cmpsb
je
jne
ljmp
jge
jbe
lea
fstp
hlt
sbb
out
mov
and
icebp
mov
loope
testb
inc
add
repz
ljmp
ja
jge
mov
ss
aad
dec
jmp
out
es
mov
test
or
stos
pop
repz
repnz
sbb
mov
add
hlt
fnstcw
lea
repnz
cld
aam
pusha
adc
or
xor
fwait
mov
jecxz
in
es
add
push
mov
add
popf
out
xchg
add
inc
out
imul
test
cli
outsl
jae
aam
out
cwtl
add
inc
add
pop
dec
jnp
test
nop
xchg
inc
mov
clc
sbb
mov
add
enter
jmp
testl
mov
cmp
cld
loop
filds
jmp
imul
jg
xchg
jne
call
mov
imul
sbb
hlt
enter
and
cltd
ret
add
jne
repz
sahf
stos
andb
scas
sbb
xchg
add
sbb
mov
jno
outsl
aad
lods
cmp
cmpsl
adcl
clc
jne
out
out
push
inc
shlb
add
adc
scas
adc
sub
out
test
shll
cli
rolb
popa
xor
cmpsl
call
ja
popl
cwtl
sub
jns
aam
sarl
clc
fists
push
xlat
iret
fldl
jae
add
jge
inc
incl
cmc
fiaddl
sti
push
sub
inc
lret
into
mov
xchg
and
pop
add
jae
push
imul
daa
or
xchg
push
cmp
mov
add
insb
inc
out
leave
cli
subl
test
cmpsl
adc
pop
cld
insl
cmp
out
and
add
push
cld
jecxz
sub
push
inc
hlt
fadd
ljmp
xor
dec
out
jnp
sbb
dec
xchg
call
imul
add
xor
jbe
mov
xlat
incl
mov
or
xchg
jae
insl
lds
cli
add
cmc
or
or
dec
pop
imul
stc
add
push
out
fldl
out
sbb
mov
add
mov
mov
jnp
add
or
std
jns
xchg
mov
cmp
mov
push
sti
out
push
and
ret
adc
cmpsl
add
xchg
jl
xchg
jae
push
cld
icebp
sub
inc
push
sbb
push
cmp
call
ret
jmp
dec
mov
hlt
push
add
mov
and
mov
mov
hlt
aad
xchg
shll
ds
mov
test
mov
in
mov
and
arpl
out
pushf
test
incl
push
jo
lret
rolb
nop
out
mov
push
add
out
repz
sub
xor
mov
shlb
cmp
xor
add
icebp
dec
les
adc
add
inc
loopne
out
fadd
cltd
push
jno
mov
jmp
xor
cmp
sbb
add
les
inc
cmp
int
jg
cli
or
add
sbbl
in
arpl
xor
clc
out
les
add
into
cwtl
cli
push
lea
cmp
mov
mov
in
testl
imul
cmp
mov
pop
daa
mov
mov
je
cmc
jns
add
xchg
cmpb
stos
ds
or
or
adc
dec
cmp
bound
std
fwait
add
mov
mov
cmp
jae
dec
xor
daa
or
aad
sbb
addr16
xchg
aad
mov
aam
cmp
loop
add
icebp
xchg
xchg
pop
rol
mov
cmp
jns
jno
arpl
mov
or
dec
sbb
add
andl
xchg
loop
loope
add
test
sbb
outsb
add
xor
cmp
fcoml
clc
pop
int3
fwait
adc
add
movsb
loope
add
push
xchg
nop
test
lahf
add
test
lcall
enter
mov
mov
pop
push
xlat
call
mov
lret
cmpsb
hlt
xor
int
sti
test
out
mov
mov
popa
and
push
pop
xchg
repnz
push
dec
cmp
jl
lds
hlt
aaa
cmp
sub
je
outsb
or
xchg
hlt
insl
mov
add
lock
and
cmp
roll
testb
xchg
shl
add
cwtd
or
imul
and
idivb
sbb
mov
mov
icebp
pop
scas
out
nop
shll
push
jae
cmp
mov
stos
lods
mov
je
push
or
xchg
adc
cmp
mov
dec
lahf
pop
jecxz
cwtl
sub
js
sbb
jo
rcr
xchg
addb
mov
dec
or
pop
out
cmp
scas
sbb
ss
sbb
nop
aaa
adc
push
add
lock
mov
sbb
xchg
rorb
iret
movl
fsub
push
sar
insl
rorl
xorl
mov
and
push
rcll
jb
fdiv
and
pop
nop
mov
cld
cwtl
insl
test
xor
ret
and
cmc
shrb
and
add
enter
xor
adc
jae
xor
add
orb
mov
mov
sbb
flds
xchg
jbe
mov
adc
xor
lock
cmpsb
add
xchg
adc
aad
push
mov
lahf
fwait
addr16
adc
movsb
add
xchg
jl
mov
add
mov
mov
popa
adc
sub
scas
mov
sub
or
mov
push
out
mov
mov
or
inc
push
lods
pushl
cltd
jmp
mov
loopne
mull
xchg
ret
add
dec
fwait
mov
add
in
push
sti
sbb
pop
out
in
jecxz
pop
test
add
jns
scas
jo
ret
push
push
jae
xchg
int
push
dec
add
shrl
mov
jge
jecxz
pop
xor
add
mov
cmp
test
push
fs
sub
negl
les
outsb
cli
movups
add
mov
push
arpl
and
fbld
loope
pop
cs
mov
aas
sub
mov
and
push
loope
cmp
insl
fdivrp
cltd
jb
jo
push
sarb
add
xchg
inc
add
aas
jecxz
add
jge
stos
into
aaa
sub
in
xor
cmp
add
repnz
sbb
rorl
aas
out
jno
jno
hlt
lods
enter
loope
mov
mov
jbe
sbb
xor
sbb
andl
jecxz
mov
out
mov
add
fldl
out
stos
pavgw
test
or
push
in
mov
cmpsb
in
in
out
popf
arpl
inc
and
js
fs
shrb
andb
ds
inc
push
hlt
dec
fmull
mov
and
adc
shl
sub
dec
aad
push
sbb
jg
fcomp
mov
gs
mov
push
pop
cmovns
xor
mov
mov
ja
repz
fwait
std
cmp
popa
inc
lret
add
jne
dec
test
jno
sub
add
leave
mov
jp
fwait
cs
push
xchg
sti
out
add
outsl
and
inc
inc
mov
xchg
jmp
mov
or
jne
ljmp
rolb
xchg
mov
clc
add
sub
fiaddl
enter
lods
notb
add
jne
and
mov
test
dec
jmp
adc
sbbb
jno
push
jae
sub
xor
adc
pop
aas
shll
mov
jg
lock
cld
repnz
jp
ret
add
addl
jne
jo
in
sub
in
pop
das
mov
mov
addb
pop
testb
fwait
les
mov
add
rclb
inc
or
out
fiadds
movsb
and
nop
cs
add
test
push
testb
jae
lods
sbb
cmp
add
add
loope
mov
ret
pushf
ds
loope
mov
pop
ja
xchg
or
sub
mov
xchg
add
lock
jle
mov
fsts
clc
jno
jb
push
inc
add
arpl
fistps
jb
bound
sbb
jnp
rolb
dec
sbb
in
mov
gs
les
mov
mov
pop
lds
ficoml
mov
push
sub
repnz
in
hlt
xchg
aam
add
pop
add
dec
pop
inc
bound
frstor
and
cs
adc
ret
xor
mov
cmp
adc
cli
flds
inc
addr16
ljmp
xchg
add
mov
xchg
add
jl
fnstsw
stos
lods
or
cld
or
fistl
aaa
mov
call
aam
dec
dec
cmp
or
add
xor
sub
in
dec
ja
rcr
or
xor
pop
mov
mov
lcall
repnz
or
pop
testl
push
add
cmp
pop
call
incl
xor
add
dec
lret
out
cmp
aaa
inc
sub
in
shlb
push
push
add
add
insb
mov
stc
mov
add
jp
mov
inc
add
pop
xchg
pop
repz
insb
jns
mov
cs
xor
xchg
jo
sbb
mov
dec
sbb
pushf
mov
add
pop
mov
push
loope
insb
mov
mov
xor
mov
dec
js
into
adc
add
in
aad
add
fdivrp
xchg
lcall
jnp
js
es
std
mov
fldcw
mov
test
lret
mov
jecxz
sti
inc
pushf
mov
mov
bound
ja
or
mov
sbb
add
push
mov
mov
or
ret
and
cs
add
into
cwtl
hlt
jp
out
inc
adc
add
mov
push
lcall
mov
jecxz
cli
mov
mov
imul
mov
push
jge
fstps
mov
movsl
add
repnz
mov
mov
add
mov
shlb
jnp
push
rcrb
mov
xor
xchg
sbb
pushaw
stos
or
sahf
mov
je
outsl
push
adc
les
dec
add
push
sub
pop
clc
jns
add
inc
xchg
add
ret
adc
or
repz
call
jnp
leave
inc
lcall
in
xchg
pop
andb
pop
stc
sbb
jl
addr16
cli
loopne
iret
popf
and
add
add
jmp
mov
repz
mov
push
add
sub
ljmp
movb
adc
or
sub
pop
push
repnz
lret
jno
rclb
hlt
mov
jmp
lods
dec
adc
add
into
fistpll
mov
and
add
or
cld
mov
cmc
mov
jno
mov
xchg
xlat
add
cmp
mov
mov
les
adc
inc
loope
les
and
push
add
dec
and
add
cltd
pop
xlat
hlt
mov
decb
inc
je
call
ret
inc
repz
add
jb
fnstsw
lock
adc
jns
jmp
mov
enter
ss
add
push
add
add
add
jecxz
outsb
add
std
mov
add
push
jge
sbb
jb
or
movsb
jae
sbb
je
xchg
int3
sbb
shl
push
push
add
shl
mov
jns
iret
pop
jae
imull
inc
push
cwtl
add
mulps
add
cmp
mov
je
jecxz
pop
mov
test
out
sub
or
add
xchg
and
aad
sar
lcall
ffreep
addb
in
jecxz
add
push
adc
add
dec
lret
sub
in
scas
aas
pusha
popa
or
push
jns
jmp
add
in
shl
pop
outsb
inc
mov
mov
cmp
js
ds
push
lock
xchg
sbb
push
ljmp
enter
int
cwtl
jl
sub
add
adc
lcall
add
cmp
mov
test
pop
sub
ljmp
push
mov
mov
mov
xlat
cmpl
imul
xlat
cwtl
xorl
lea
sbb
rclb
sbb
add
lret
or
ds
fstpl
add
fldcw
cli
push
jae
cmpsl
cmp
into
divb
add
pop
or
insb
dec
fadds
out
dec
icebp
adc
or
es
jp
add
or
adc
xchg
jns
cmp
je
xchg
or
inc
pop
testb
adc
push
mov
mov
mov
andb
arpl
inc
add
test
sub
xor
mov
mov
or
add
hlt
jle
jg
pop
add
out
inc
cmpl
pushf
mov
lret
enter
in
mov
loopne
leave
jae
cli
and
push
pop
pop
loope
out
test
add
pop
add
add
lods
dec
inc
mov
pop
xchg
xor
loopne
sub
xchg
imul
hlt
sti
push
add
dec
les
mov
movsb
mov
cli
jae
lods
push
jecxz
test
lret
cmpsl
cltd
les
adc
xchg
push
adc
js
clc
or
mov
jge
das
push
vhaddps
push
jecxz
lea
daa
in
xchg
mov
add
sbb
enter
ror
cmpsl
xchg
mov
lcall
xor
and
pop
pop
inc
fldl
fldt
rorb
cld
repz
pop
mov
sub
adc
or
sar
fidivrs
movsl
pushfw
incb
testl
cmp
ljmp
movsb
lret
pop
jp
jecxz
push
xchg
or
push
out
icebp
mov
cli
frndint
mov
pop
popa
push
xor
inc
adc
add
dec
cmp
xor
mov
push
in
mov
add
adc
ss
out
hlt
cmp
test
push
cmp
and
add
std
mov
fadds
xor
mov
hlt
int
or
shlb
jae
rorl
daa
and
jg
xchg
pushl
jp
mov
fdivl
inc
add
add
aam
pop
add
fwait
cli
mov
dec
imul
loop
adc
inc
mov
add
push
rcll
push
dec
xor
push
mov
stos
push
cld
stos
dec
scas
add
outsl
pop
mov
mov
cmp
clc
add
xchg
mov
add
test
lock
inc
jecxz
out
hlt
push
and
push
dec
rorl
pop
mov
add
add
shr
pop
cld
cld
sub
jge
add
adc
add
rcrb
sbb
testb
data16
stos
fsubs
sbb
fistps
cmpsb
inc
out
inc
xchg
andb
int3
dec
mov
cmc
shrb
or
add
dec
push
out
sub
add
std
xor
inc
add
push
mov
andb
popf
or
adc
add
adc
data16
mov
mov
add
hlt
push
ljmp
ret
dec
aam
xor
sub
mov
jmp
cmp
add
movsb
cli
cmp
jae
hlt
jg
add
adc
lods
mov
add
in
sub
jp
sbb
mov
dec
cld
mov
sbb
xchg
loop
loope
and
mull
and
jno
or
xchg
icebp
push
adc
loop
call
sbb
xor
jns
scas
test
imulb
mov
jae
dec
jmp
dec
and
adc
clc
ja
xchg
repz
add
pop
enter
insl
imul
xchg
jno
lods
mov
mov
loop
adc
xchg
andb
or
scas
sbb
push
call
ljmp
and
xor
flds
pop
sub
mov
dec
add
jo
rcrb
add
test
ja
sub
mov
call
sub
cmp
push
jecxz
decb
das
std
dec
aad
inc
fcmovnu
pop
add
cmp
jp
add
jl
xchg
and
hlt
dec
or
ljmp
jg
add
push
add
fwait
mov
add
cmp
out
mov
out
mov
and
lret
jge
add
jae
leave
xchg
mov
ss
jp
sbb
add
mov
cmc
add
out
push
xor
xchg
dec
xor
jl
daa
pop
inc
popf
add
loope
aad
lock
pop
add
inc
stos
cmp
daa
mov
mov
notl
add
sub
sbb
movsb
mov
xchg
pushf
or
sub
mov
movl
fsts
roll
out
xor
js
pop
add
mov
jl
cld
push
xchg
push
push
xor
in
mov
mov
add
mov
nop
and
jb
pop
add
add
inc
sbb
add
in
jo
sbb
add
xchg
jmp
pop
or
mov
cmpsb
cmpb
movsl
dec
hlt
lahf
sub
je
xchg
lea
je
jns
out
push
lods
xchg
lds
or
hlt
add
and
add
sub
xor
mov
test
fstp
adc
inc
inc
mov
inc
cmp
fdivl
or
imull
ret
je
mov
add
xor
and
popa
sbb
add
cmc
xor
push
mov
mov
inc
icebp
add
xlat
testb
cmp
add
pop
pop
scas
jno
fists
rcr
sbb
mov
addr16
or
ds
xor
imul
shl
mov
add
inc
fucomp
shll
pop
mov
add
movsl
inc
push
pop
push
or
ljmp
in
outsb
out
shrl
call
daa
jnp
test
js
ret
addb
cmc
dec
insb
rcll
nop
stos
decl
sub
ret
mov
push
inc
aam
adc
push
mov
add
jb
test
add
pop
mov
or
lret
mov
mov
push
pop
mov
enter
sbbb
xchg
fsubs
cmpsl
add
sbb
adc
mov
into
adc
std
out
ss
jno
insl
push
jae
push
loope
pop
add
in
push
xor
stos
mov
xchg
cld
cld
out
dec
push
xchg
dec
test
in
mov
mov
add
push
xchg
aam
and
inc
mov
adc
sbb
iret
and
cmp
and
ljmp
cltd
add
pop
lret
cmp
out
fincstp
mov
cmp
stos
call
outsl
movsb
hlt
or
sti
hlt
mov
add
sarb
sbb
ds
or
or
jne
cmp
add
push
sbb
add
mov
cmp
push
cmp
mov
jbe
and
clc
popf
loop
cld
jg
sbb
mov
add
pop
push
lds
fnsave
cmp
or
jbe
jno
add
shll
or
faddl
push
addr16
fmulp
and
add
add
into
pop
arpl
jns
sub
xor
cmp
xchg
mov
ja
add
sbb
cmc
jecxz
repz
dec
push
jb
aaa
inc
adc
ret
cmp
cmp
cli
scas
mov
xchg
fists
and
js
aas
inc
xchg
fiaddl
jecxz
test
jge
in
mov
out
imul
int3
fmull
cmc
cmpsl
cld
arpl
xor
repz
push
jecxz
xlat
test
pop
icebp
rcrb
add
push
sbb
hlt
jno
mov
lock
fwait
cltd
sbb
add
negl
add
sub
testb
xchg
mov
and
shrb
cmpl
or
repz
pop
jp
negl
xlat
add
leave
rclb
jb
test
movsb
nop
xchg
adc
xchg
test
lcall
sti
xor
add
outsb
jl
pop
dec
out
add
dec
mov
pop
aad
lock
mov
dec
fucomip
ret
xchg
cwtl
in
or
sub
out
add
enter
jle
ret
lahf
int3
test
repz
add
and
pop
cld
add
xor
pop
xchg
jne
inc
inc
mov
add
mov
cmp
mov
hlt
test
push
adc
jb
cmp
je
xor
repnz
inc
jecxz
pop
xorb
sub
pop
jbe
add
add
jl
xchg
in
sbb
leave
test
jl
maxps
lret
cs
xchg
mov
je
xor
dec
dec
or
add
pop
cmp
ret
iret
add
notl
add
sub
jg
and
hlt
cmpsl
push
xchg
push
push
add
jmp
push
xchg
jnp
cmp
mov
ja
outsl
lods
xor
or
or
mov
add
fistpll
xor
jle
add
jns
mov
das
adc
in
push
xor
aaa
fwait
popf
mov
xchg
es
psubd
sbb
jns
fstpt
lods
xchg
inc
xchg
cmc
test
sub
sar
aam
mov
loope
mov
js
pop
test
jns
jl
cld
nop
in
test
mov
xchg
and
xchg
add
in
mov
je
sbb
push
pop
dec
jns
inc
add
popf
dec
fdivl
and
pop
fs
imul
xor
popa
adc
lock
fwait
mov
mov
pop
aad
flds
adc
add
sbb
aas
add
mov
fildll
or
pushf
lcall
daa
mov
inc
or
test
out
bound
jge
mov
sbb
cld
mov
xchg
or
push
add
sti
mov
jne
clc
push
add
mov
fs
cmpsl
mov
ljmp
xchg
inc
lds
cmp
jb
ret
dec
jg
fidivs
mov
cld
pushf
call
xchg
adc
mov
mov
mov
xor
shr
pop
push
add
movsb
cltd
xlat
test
mov
xor
jl
push
sti
sbb
cld
hlt
xchg
fdiv
mov
dec
testb
inc
outsb
inc
jle
jnp
hlt
push
insb
ja
pop
mov
cmpsb
mov
lcall
cmp
push
add
mov
es
hlt
mov
sbb
mov
xchg
cld
add
add
icebp
xor
mov
imul
push
xchg
inc
iret
test
clc
jns
psubq
jg
add
push
push
jnp
dec
add
jns
push
rorb
add
mov
roll
in
jmp
jae
add
cmpsl
stos
clc
test
adcl
xor
jae
inc
add
cmp
sbb
pop
jg
daa
js
test
xchg
cmpsl
andl
fcomip
lea
add
dec
fbld
and
push
outsl
mov
add
ficompl
ja
divb
pusha
xchg
repz
or
or
and
and
ret
push
std
mov
sub
mov
xchg
mov
dec
bound
dec
add
xchg
jns
lcall
test
repz
xchg
ret
jmp
pop
sbb
aaa
adcl
shrl
cmp
lock
fwait
push
test
xchg
scas
add
ret
mov
or
pop
add
cltd
dec
mov
out
xor
cmp
adc
fstpl
cmpl
sbb
push
cli
ja
push
fdivrl
stc
add
leave
roll
jge
pop
push
and
out
nop
fldt
aad
xchg
out
sbb
flds
cmp
and
jle
xchg
add
incl
add
aad
mov
push
lcall
lret
add
ss
push
jmp
lcall
jns
xchg
xchg
das
add
scas
rol
dec
jnp
loope
popf
movsl
fwait
add
in
push
mov
add
sbb
sbb
xor
rcrl
sub
add
or
sub
push
mov
ss
inc
cld
js
out
inc
cmp
sbb
lods
add
lret
pop
clc
lcall
adc
sub
adc
addb
scas
les
adc
loop
jl
out
outsl
leave
out
xor
or
and
clc
out
cmpsl
mov
add
sub
aam
cmp
sar
sub
inc
mov
or
jg
add
out
add
cmp
cwtl
rorb
testl
vpcmov
shrl
into
sbb
xchg
out
clc
adc
imul
fiadds
xchg
hlt
cmp
inc
xchg
mov
nop
inc
jo
cmc
addb
add
jle
sbb
cmpsb
push
add
or
cld
rcll
lea
xor
rcrl
mov
and
fs
jge
sub
mov
xchg
dec
mov
nop
pop
inc
sbb
add
test
das
cld
mov
add
mov
mov
jb
mov
aam
loop
dec
adc
jecxz
fdivs
sti
icebp
xchg
adc
cmp
mov
push
into
js
loop
jae,pt
xchg
cld
add
in
popa
jg
push
arpl
mov
cld
data16
sub
mov
push
pushl
add
and
lret
andl
jb
mov
and
dec
std
fdiv
popa
imul
mov
jne
out
mov
repz
add
in
pop
frstor
sbb
sub
leave
mov
scas
jmp
pop
mov
cmc
push
pop
xchg
add
pop
xor
sub
or
aas
out
or
mov
jnp
add
push
pop
cmp
aas
cmp
addl
push
lods
ljmp
cmpsl
repnz
add
xchg
loope
jb
xor
lea
xor
popa
stos
in
push
push
mov
neg
les
sbb
ret
incl
mov
inc
mov
lret
stc
adc
js
inc
out
cmp
mov
adc
jecxz
in
cwtl
add
mov
nop
add
ret
push
aaa
daa
es
jecxz
lret
fisubrl
cmp
add
imul
dec
out
pop
cld
xlat
xchg
in
jecxz
les
daa
push
mov
mov
adc
jge
hlt
stos
mov
inc
sub
sbb
movsl
add
and
mov
add
jge
imul
sub
mov
jne
jp
stos
and
or
sti
pop
gs
add
in
in
clc
hlt
xchg
mov
jecxz
fwait
pop
jmp
sbb
add
subb
icebp
jp
lea
mov
dec
push
cld
dec
sub
and
lahf
cmpsl
push
add
repz
les
out
mov
cld
call
loop
sbb
arpl
cmp
xor
fbstp
inc
xor
movsl
mov
inc
fabs
push
xchg
mov
in
loopne
push
xor
mov
mov
mov
add
adc
aaa
into
sarb
mov
rcrb
mov
mov
add
or
loope
or
add
dec
pop
js
sbb
roll
test
jno
mov
loop
jecxz
fcomp
jb
add
cmp
fldl
add
jg
inc
add
xorl
xchg
aam
and
adc
xor
pushf
add
mov
jl
mov
adc
sti
cmp
loope
lock
cld
in
cmc
mov
ret
cmp
je
inc
loop
add
out
mov
push
scas
arpl
pop
cli
rolb
add
and
sbb
loop
adc
out
clc
cld
and
call
xchg
out
sbb
xor
push
sti
cwtl
jmp
repz
pop
out
shll
add
sub
bnd
add
mov
movsl
jecxz
das
cmp
sbb
les
push
pusha
add
fcompl
jp
hlt
inc
mov
pop
lock
rorl
call
cmpsb
and
mov
push
mulb
mov
cwtl
sub
ret
pop
mov
adc
mov
fldcw
mov
popf
mov
lods
cli
in
rcl
addl
xorb
cli
inc
out
cs
repnz
in
js
ret
dec
idivb
dec
lmsw
pop
das
and
adc
add
sub
or
rcrl
aaa
rorb
and
in
std
cmp
ret
es
adc
pop
hlt
shlb
pop
push
pop
test
jmp
adc
add
mov
cmp
pop
jecxz
sub
movsb
cs
inc
xor
add
shlb
lock
adc
add
pop
dec
push
notl
enter
mov
std
lds
in
in
add
pop
mov
hlt
les
test
xchg
cmpsb
faddl
out
cld
lock
adc
sbb
pop
cmp
jg
int3
jge
ss
push
ret
sbb
add
out
or
dec
pop
jecxz
nop
lcall
idivb
add
jecxz
inc
add
stc
icebp
push
out
divb
add
fldenv
call
movaps
inc
bound
jp
xor
and
add
idivl
int3
and
loope
inc
jae
repz
sbb
in
mov
roll
sbb
aas
fsubr
aam
add
add
lea
xor
dec
and
hlt
or
outsb
adc
mov
cs
hlt
movsb
xchg
sbb
adc
cld
call
mov
mov
jae
hlt
cltd
stc
ds
push
and
js
xor
or
add
dec
sbb
jbe
add
mov
add
push
push
add
cli
xchg
out
imul
fstpt
jmp
lahf
insl
or
lock
add
pop
aam
add
rcl
push
add
cmp
aad
xlat
xor
xchg
cmc
add
cmpsl
add
jg
cmp
insl
movsl
and
fadd
sbb
add
clc
shl
das
pop
sbb
out
enter
inc
adc
or
lock
push
jle
sbbl
jae
mov
cmpsb
add
pop
call
fmull
and
sbb
cmp
lahf
pop
out
xchg
hlt
and
dec
lret
imul
jle
add
scas
out
add
clc
jo
xor
fnsave
or
adc
adc
pop
mov
and
xor
sbb
inc
mov
iret
sahf
lea
pop
sub
je
lds
cmp
dec
and
ja
cmc
add
call
push
sbb
add
jns
sbb
add
out
outsb
xchg
fistpl
add
or
cmpsb
add
lcall
std
out
add
sub
mov
pop
add
jnp
repnz
fisttpl
add
jbe
push
sub
inc
push
lahf
test
sar
cmpsl
dec
add
mov
cwtl
or
push
or
or
adcb
add
and
enter
jmp
loopne
punpckhbw
adc
outsl
enter
out
pop
xor
xchg
push
pushf
mov
and
mov
and
fcompl
xchg
xor
pop
or
add
pop
inc
movsb
fwait
je
push
pusha
add
sbb
add
movsl
popl
mov
add
rorl
jge
add
rorl
pop
xchg
sbb
push
sbb
add
rclb
mul
cwtl
pop
add
lret
cmpsl
aad
pop
mov
mov
mov
stos
out
movsl
add
fldenv
dec
aas
les
aaa
and
jecxz
add
into
lahf
xlat
cli
lcall
xchg
pop
adc
out
aas
jg
insb
add
cmp
sbb
repz
lods
sub
add
push
cmp
xor
int3
mov
ja
pop
sbb
out
icebp
mov
jmp
orb
and
xchg
inc
inc
ficompl
push
mov
jnp
add
jecxz
jge
mov
jo
cmpsb
div
clc
add
sub
ljmp
and
addb
cmp
add
sub
ret
add
cmpsb
pop
in
push
jbe
jmp
jne
and
popa
cmp
xchg
roll
lret
adc
mov
or
add
outsl
ljmp
jb
mov
into
and
and
sahf
mov
mov
inc
sbb
xchg
shl
and
fdivs
scas
aas
jae
add
add
in
jns
add
mov
xor
gs
xchg
cli
sar
out
cmc
push
dec
cld
xlat
lods
sbbl
mov
enter
dec
mov
add
dec
jle
daa
cmp
arpl
jns
sub
mov
dec
adc
add
mov
mov
shrb
jmp
cltd
mov
xchg
xchg
aam
adc
inc
orl
lods
add
je
fnsave
sar
test
mov
sahf
fcompl
dec
dec
loop
add
xchg
push
sub
add
test
cli
cmpsb
mov
mov
movb
add
mov
icebp
inc
scas
mov
push
adcb
inc
add
popf
push
jns
jle
iret
stos
add
mov
jmp
sbb
add
xor
ljmp
test
test
push
int
mov
ret
push
in
cli
add
cmc
mov
add
mov
add
xchg
ss
mov
clc
cltd
add
or
in
test
sarl
mov
add
stos
cli
call
and
cmpsb
or
aas
add
pop
sbb
cmp
lds
xor
je
adc
int3
or
push
lret
test
insb
dec
rcll
xchg
add
in
mov
mov
ss
je
pop
mov
cmp
js
in
sbb
xor
movsb
xorl
dec
jo
and
xchg
clc
imul
hlt
je
and
pop
jle
mov
sbb
sub
xor
cld
sbb
jno
cltd
into
hlt
mov
mov
daa
add
push
int3
push
jb
stc
call
ret
jb
add
ret
add
and
xchg
sbb
sbb
adc
lahf
add
rcl
mov
cmp
xor
inc
add
or
mov
xorl
hlt
dec
xchg
mov
dec
add
lods
sub
add
cmp
mov
mov
test
jle
dec
fidivrl
out
sbb
mov
pop
test
lea
hlt
popa
scas
hlt
int3
sbb
adc
ss
repnz
or
pop
cmp
je
pushf
mov
es
imul
rorl
add
xchg
adc
fs
xor
mov
jbe
dec
or
sbb
jns
sub
add
sub
ja
or
ret
addr16
add
cltd
mov
or
add
add
dec
jno
mov
test
or
ret
mov
neg
dec
xor
xchg
sub
in
hlt
jne
xor
pop
divb
in
repz
mov
cwtl
xchg
hlt
clc
das
sarl
fistps
jmp
adc
inc
mov
addr16
gs
fstps
das
repz
cwtl
scas
cmp
call
mov
mov
add
sbb
cmp
pop
push
in
sub
mov
fldl
mov
sub
and
lock
push
incl
iret
mov
jnp
or
out
mov
add
enter
and
xor
push
and
jne
hlt
dec
std
add
fldt
add
add
mov
loope
stos
out
pop
xchg
cld
pushf
testl
inc
and
rorb
inc
push
gs
shlb
cld
cli
jb
dec
fistpl
add
push
scas
into
pushf
jmp
push
lods
sahf
xchg
add
out
inc
mov
add
or
cld
or
and
dec
xchg
dec
inc
mov
loopne
loope
push
mov
or
xchg
in
adc
adc
outsl
arpl
stos
stos
xor
mov
dec
inc
cmp
in
fistpll
test
push
or
cld
jg
mov
sbb
daa
popf
push
je
mov
add
lods
add
pusha
fidivs
test
scas
cli
sub
mov
mov
mov
aas
fsubp
gs
js
sarb
std
fisubs
push
push
xor
sub
jp
mov
insl
test
imulb
inc
inc
xor
jnp
and
xchg
hlt
or
jecxz
and
into
mov
add
stos
add
mov
cmp
dec
sarl
and
dec
jecxz
orl
and
mov
xchg
or
push
pop
daa
cmc
mov
xchg
lcall
movsb
add
mov
jmp
cli
pushf
loopne
faddl
cmp
out
mov
mov
shrl
movsl
add
leave
xorb
jle
divl
push
mov
hlt
push
aaa
fdivrl
mov
pusha
out
movsb
mov
xchg
xchg
icebp
and
jns
aam
pop
in
clc
idivl
and
movsb
xchg
cmp
or
push
sub
out
add
xor
roll
cmp
popa
jne
imul
lcall
add
js
enter
add
jecxz
push
jg
in
jno
loope
aam
loop
nop
add
adc
and
jp
jne
hlt
push
sbb
fisttpl
decb
pop
enter
inc
test
add
fimull
add
sbb
cmpb
jge
clc
mov
ret
add
fs
add
fldenv
mov
aam
jecxz
imulb
bound
out
inc
sbb
aaa
jl
mov
jecxz
hlt
sub
mov
push
or
lock
push
add
add
xor
je
hlt
xchg
cmp
icebp
mov
nop
add
mov
hlt
movsb
or
xchg
sbbb
add
jecxz
addr16
fisubs
mov
and
nop
out
adc
mov
dec
mov
hlt
cld
add
xor
out
insl
nop
test
sbb
int
push
add
push
lahf
pop
mov
sbb
enter
jb
lcall
xchg
movsb
enter
and
es
xchg
jge
cmp
orl
xor
add
add
lcall
in
xorl
mov
add
pop
fwait
add
xchg
in
xchg
hlt
fstpl
inc
mov
sub
jmp
jl
mov
xlat
jb
shlb
jmp
out
add
shlb
hlt
xchg
cld
jns
cmp
sbb
imul
loopne
add
dec
ficoms
mov
hlt
or
adc
jbe
or
xchg
sti
fidivs
mov
or
fisttps
out
jmp
repnz
mov
mov
adc
jns
xchg
jl
dec
add
repnz
jge
add
mov
ljmp
xor
vmovups
push
je
pop
add
decb
stos
bound
insl
add
jmp
cmp
in
inc
addl
add
inc
pop
xchg
push
jecxz
pop
add
popa
out
daa
sbb
mov
cmp
xor
jno
scas
xchg
hlt
stc
ret
push
or
inc
dec
dec
jne
add
ret
or
add
adc
rolb
add
sub
stos
out
add
jge
mov
repz
sti
sbb
into
push
aas
not
das
cltd
mov
xchg
test
xor
test
mov
add
mov
jle
repnz
mov
xor
sub
mov
add
pop
jg
adc
sbb
repnz
daa
mov
imul
fdivp
rcrl
lret
loop
nop
add
adc
pop
add
mov
jecxz
inc
add
addr16
add
out
ret
sbb
xor
das
es
rcr
mov
pop
add
lret
cli
jo
sub
roll
in
or
dec
ret
xchg
jge
mov
int3
cmpb
leave
push
sbbl
rcrl
test
jo
add
jb
pop
add
mov
stc
dec
push
js
xor
dec
inc
dec
and
mov
add
mov
and
test
jecxz
cmp
repnz
dec
jl
scas
dec
inc
ja
jp
mov
out
cmpsl
lret
xor
ds
mov
jp
mov
popa
adc
add
xchg
xor
in
incl
pop
xchg
loopne
cmp
dec
pop
bound
fcoms
enter
idiv
jae
les
add
ljmp
ret
sbbl
or
test
cld
add
xchg
sub
iret
test
incb
push
push
outsl
daa
inc
loope
aas
cmp
pop
je
xchg
sbbb
hlt
call
loope
pushf
in
in
push
push
mov
xchg
jb
mov
notb
insl
sti
adcl
mov
and
jecxz
in
lods
lds
mov
and
pop
repz
mov
ljmp
mov
add
mov
nop
push
bsr
adc
mov
sub
mov
fiaddl
stos
lock
les
out
jns
fwait
dec
loopne
mov
movsb
sbb
jge
and
push
fwait
mov
jle
dec
int
xlat
adc
in
add
jae
jg
mov
dec
add
dec
lahf
dec
hlt
sub
fs
pusha
lds
dec
cmpsl
add
out
jmp
add
aam
adc
mov
sbb
xor
sahf
lods
hlt
cmp
and
pushl
mov
adc
scas
imul
and
jmp
add
dec
sub
cmpsl
push
add
shlb
andb
and
lret
shl
add
add
adc
mov
jno
aam
dec
xchg
loope
bound
fisubrl
mov
cmp
mov
movsb
sbb
jg
aaa
mov
sti
stos
mov
and
out
sbb
cmp
and
inc
test
add
cmpsb
xlat
enter
adcl
cs
push
iret
pop
pop
adc
push
mov
dec
test
jl
cli
clc
js
out
sub
rorb
xchg
xor
aad
jecxz
and
lahf
mov
jne
adc
xchg
push
and
into
sub
inc
nop
mov
add
push
and
pop
pop
bound
inc
ret
stc
add
loopne
and
adc
sub
repnz
rcrl
dec
sub
les
out
jno
movl
jno
call
aad
mov
gs
add
repz
fs
faddl
xchg
jmp
pushf
je
js
stos
pop
popa
outsb
mov
hlt
xor
pop
inc
das
stos
ffree
rcl
add
rclb
inc
cmp
mov
cmp
sub
dec
jecxz
cltd
daa
out
movsb
fisttps
mov
add
in
jg
inc
xchg
int
adc
jno
push
and
sbb
dec
scas
data16
jmp
pop
sbb
jb
ret
fisubs
shll
fldl
fdivl
dec
add
iret
push
mov
je
scas
adc
rorl
xor
fbstp
scas
xchg
add
arpl
out
lahf
push
add
inc
jge
mov
adc
out
push
jp
jmp
test
test
sbb
sahf
adc
popf
add
aad
test
aam
add
add
or
lcall
sub
fildl
and
inc
or
stos
add
test
sbb
add
mov
out
scas
add
cli
daa
jns
insb
ret
xor
jmp
repnz
sub
adc
mov
xchg
loop
or
es
out
cld
cmp
cmp
push
pop
lods
adc
xchg
sub
mov
push
lret
pop
fiaddl
hlt
arpl
fcoms
imul
nop
lods
testb
aam
and
hlt
sub
jge
cmpb
pop
add
testl
and
pop
rcrl
pusha
aas
loope
testb
mov
mov
mov
push
mov
cmpl
pop
aaa
add
cmpsb
arpl
add
sbb
addl
add
cmp
adc
mov
loop
lahf
push
push
cld
xor
rcl
inc
lcall
jb
adc
or
or
icebp
sbb
add
add
mov
insb
mov
add
lods
sbb
clc
cmp
lret
add
mov
pop
add
stc
std
add
and
mov
inc
stos
pop
jae
mov
and
add
scas
pushf
jnp
add
cli
jo
in
push
xchg
add
ret
add
mov
add
rcl
push
ds
and
or
in
cmp
pushf
sub
mov
add
jmp
xorl
add
je,pt
out
mov
cli
and
loop
push
imul
add
jns
iret
imull
push
mov
sbb
mov
xlat
dec
sbbl
mov
in
jnp
mov
xor
out
or
repz
mov
out
and
cmp
push
cmp
mov
cltd
jmp
jno
sub
les
add
xchg
add
mov
jo
add
push
in
or
ss
add
fsubrs
adc
jmp
mov
not
addl
cltd
sbb
add
jne
push
repz
leave
push
add
pop
jmp
mov
dec
insl
mov
adc
push
mov
cli
outsl
push
out
inc
testl
add
add
add
push
mov
ret
mov
in
dec
fidivl
mov
and
xchg
fdivrp
jl
push
inc
mov
ds
js
fiaddl
js
push
xchg
fwait
add
push
mov
and
popl
inc
lea
dec
iret
mov
add
push
aam
scas
ds
sahf
dec
je
push
ljmp
mov
jge
add
cmp
ficoms
inc
xchg
fstpl
add
sbb
clc
xor
add
in
mov
mov
in
mov
push
or
jmp
inc
jns
out
add
cmc
popa
and
inc
dec
or
add
les
pop
stc
iret
add
aad
add
jle
add
xchg
repz
add
lods
pop
scas
dec
jo
add
pop
mov
rcrl
ss
jbe
cmpl
mov
flds
shll
testl
lods
lcall
pop
and
xchg
add
mov
mov
loopne
jns
out
stos
js
lcall
xchg
dec
add
adc
push
dec
adc
test
sub
ds
fistl
out
lds
mov
les
inc
loop
test
stos
add
cld
outsb
dec
dec
movb
jo
cmp
mov
adc
or
xor
lret
xchg
dec
sbb
jnp
jecxz
pushf
roll
outsb
xorl
or
add
lods
sbb
shlb
aam
push
movsl
out
cmovno
cmpsb
stc
mov
loope
lods
push
add
daa
mov
or
inc
jge
insl
xor
out
add
ffreep
jns
dec
mov
mov
cmp
loop
pop
push
std
cmpsb
hlt
add
jmp
adc
pop
add
xchg
inc
add
out
cwtl
mov
dec
add
or
sbb
jge
mov
popf
jnp
cmp
and
xchg
lmsw
pop
js
aad
or
jae
inc
add
mov
cmpsl
sbb
lods
sbb
mov
jne
hlt
aaa
mov
hlt
add
rcrb
in
mov
loope
jnp
add
lahf
and
adc
lret
clc
repnz
stos
lcall
and
lock
cmc
mov
add
mov
jne
test
fcmovu
ret
push
imul
or
add
cmc
and
add
insl
mov
push
mov
xor
dec
xor
adc
aad
dec
xor
sub
jp
insl
lock
sub
cmpsb
push
pop
scas
jo
mov
aas
jmp
jecxz
and
mov
xor
fildl
call
ret
jle
fldcw
or
incl
pop
sbb
cmpl
cltd
adc
rorl
das
fmul
xor
hlt
jp
inc
push
pop
inc
fistpll
call
or
std
sbb
test
fwait
arpl
xor
popl
jmp
mov
jmp
push
addb
sub
roll
stc
inc
jno
hlt
xor
and
rclb
cmp
movsb
icebp
ds
push
out
xor
rcl
xchg
out
lret
cli
cmpb
xor
fidivs
push
mov
imul
aas
outsb
add
out
insb
gs
loopne
int3
sbb
push
xor
in
jg
push
out
jecxz
popf
loop
push
jmp
mov
negb
ret
incl
and
sbb
dec
jecxz
mov
sub
xlat
or
add
mov
add
mov
mov
add
mov
cmpsb
push
xlat
movsb
das
stos
sub
add
pushf
inc
adc
add
jnp
dec
mov
add
lods
pop
imul
push
add
inc
lahf
in
pusha
cmp
imul
sub
loopne
add
enter
aaa
stc
pop
hlt
ret
scas
sbb
loope
aad
sbb
mov
xchg
lds
xor
hlt
std
inc
repz
push
and
mov
push
lret
add
jecxz
loop
xchg
xor
xor
xor
cltd
cli
ror
cmp
add
js
call
cmpsb
popaw
mov
cs
and
adc
inc
addb
push
scas
pushf
add
rorb
repz
test
jg
hlt
popa
sbb
jnp
mov
inc
pusha
xchg
in
adc
out
cmpsl
dec
add
das
cld
xchg
data16
or
mov
fidivrs
cld
jno
adc
enter
hlt
mov
mov
push
xlat
shr
lret
mov
inc
sbb
out
in
inc
xor
or
pop
pushf
adc
cmp
and
add
inc
fisubrl
pop
xchg
lcall
std
faddp
sahf
test
imul
rorl
lea
bnd
add
movsl
pop
pop
lahf
das
xchg
cmpsb
push
ljmp
or
shll
jae
dec
mov
aad
add
andb
popa
jbe
aam
add
xor
outsl
dec
add
pop
push
fcmovu
icebp
jl
add
push
jnp
sub
xchg
leave
clc
add
sbb
sti
stc
jno
lahf
lea
retw
in
negb
mov
add
mov
and
xchg
sahf
cli
pop
jecxz
addb
lret
mov
cmpsl
add
cmc
inc
cmp
dec
push
arpl
ja
xchg
add
mov
out
fnstcw
xchg
aad
out
rcll
jo
push
xchg
shlb
outsl
inc
cltd
std
pushf
mov
dec
aad
repnz
sbb
push
inc
adc
ret
les
ss
roll
lret
dec
add
push
jge
fs
cmp
jl
push
jno
mov
jne
push
cmpsl
stos
dec
ss
arpl
xor
dec
push
in
inc
insl
or
add
sahf
or
subb
jnp
adc
and
mov
xchg
mov
das
cmp
aad
sub
cld
ss
mov
or
inc
or
jns
es
clc
jmp
mov
lcall
call
jo
and
addb
cltd
pop
test
aam
sbb
jo
pusha
out
aam
xchg
cwtl
jp
hlt
repz
popf
inc
call
xor
jae
inc
or
add
add
jle
cld
add
shl
popa
add
pop
scas
xor
int3
fmull
push
sub
adc
mov
cmp
xor
pushf
cmp
cld
andl
add
lcall
add
push
jne
add
lret
leave
jp
faddl
rep
inc
dec
cmpsl
sbb
out
les
adc
sbb
push
lcall
scas
fisubl
push
xchg
mov
add
shll
les
mov
inc
xchg
mov
popl
sub
aad
sbb
dec
ds
out
idivb
cmp
add
xor
je
ja
mov
inc
sbb
jg
test
bound
stc
add
jbe,pn
push
pop
xchg
jnp
sbb
jae
out
xchg
add
iret
les
pop
js
ss
out
mov
outsl
mov
xlat
cli
add
shll
repz
sahf
add
sbb
xchg
mov
mov
pop
xchg
add
cmc
pop
rclb
lret
pop
pop
jp
cld
jae
sbbb
test
add
pinsrw
mov
push
pusha
mov
je
cmc
pop
mov
out
cmp
hlt
test
js
adc
cwtl
adc
cmp
mov
hlt
out
mov
xchg
add
out
pop
mov
adc
int3
das
mov
mov
push
jge
cmpsl
rolb
aad
iret
jl
in
scas
shlb
ret
dec
subl
cmp
sti
fsubl
jl
es
xchg
adc
add
arpl
aaa
rcll
add
add
pop
add
sti
jns
xor
mov
sub
cli
add
mov
push
xchg
jbe
add
dec
lea
imull
xchg
pusha
sub
test
movsl
add
mov
mov
sti
push
and
inc
ljmp
sbb
mov
fwait
or
sti
xor
cmc
outsb
rorl
int3
mov
add
pop
es
fucomi
lcall
out
dec
hlt
add
pop
mov
scas
ret
test
fdiv
aaa
in
add
inc
stos
mov
cld
mov
mov
in
dec
lret
out
or
add
int3
and
push
or
push
hlt
icebp
sub
rcrb
aam
push
push
sub
inc
stos
pop
hlt
hlt
enter
lods
loope
inc
xchg
pop
add
outsl
das
jmp
insl
add
jl
sbb
xor
push
std
or
jmp
roll
fiadds
out
lea
mov
jmp
sti
fwait
not
enter
add
xor
aaa
in
out
gs
add
mov
pop
or
jb
add
movl
pop
add
add
pop
cmpsb
in
mov
jl
inc
xchg
fsubrs
mov
add
inc
out
add
ss
or
imul
popa
or
jns
je
popa
pop
cld
pop
cmp
cmp
mov
xchg
and
inc
ret
add
pop
jbe
add
cwtl
xor
jae
sbb
std
les
push
jle
pop
inc
push
cmp
xchg
in
dec
sub
aad
sub
jb
add
inc
xor
add
sbb
fsincos
sbb
negb
and
cmp
mov
and
cs
mov
push
int3
and
jo
push
add
repz
mov
add
adc
scas
in
int3
add
jbe
cmpsl
and
lds
jg
mov
pmuludq
add
mov
adc
scas
mov
insb
cmp
out
loope
fiadds
ret
cld
dec
iret
jp
lahf
push
add
or
jmp
sub
leave
xchg
sbb
pop
mov
lret
clc
mov
adcl
adc
mov
fwait
pop
in
mov
cs
mov
adc
add
lret
loope
popf
jecxz
decl
fidivs
push
aaa
cld
and
into
dec
leave
pop
add
dec
sbb
add
ficoml
shl
sbbl
cld
jg
aas
cmc
aaa
inc
in
aad
add
mov
lcall
add
mov
jecxz
or
xor
xor
pop
xchg
add
jb
cmp
mov
in
add
into
cmc
adc
lahf
mov
mov
arpl
icebp
frstor
daa
outsl
pusha
loopne
xor
mov
pop
jmp
push
notl
insl
cmp
add
mov
sbbl
js
loopne
add
clc
call
adc
jb
fucomip
idiv
add
ret
mov
shl
dec
xchg
popa
outsb
add
jg
add
out
add
scas
not
hlt
sub
je
ja
ret
jbe
aas
call
xchg
std
loop
cmp
xor
fistpll
and
cmp
push
cmpsb
pop
testb
enter
aaa
or
sub
jns
rcll
bound
ret
add
sbb
xchg
rep
add
rcr
adc
mov
xchg
sarb
add
mov
stos
enter
xchg
add
inc
cwtl
add
adcl
cld
enter
xor
and
push
push
jle
sub
dec
movl
inc
add
cmp
mov
out
out
notb
lock
or
vmptrst
sti
pop
test
std
cmp
or
add
push
add
mov
or
mov
ret
add
out
and
add
clc
xor
add
shll
xlat
xchg
enter
cmp
aas
lahf
add
xchg
fistpll
fucompp
push
mov
mov
loopne
ret
stos
in
mov
call
fbld
jg
fsubs
or
xlat
xor
xor
scas
repz
add
push
test
inc
nop
loope
imul
in
std
out
inc
xor
jne
xchg
add
push
popa
mov
in
jl
mov
or
dec
and
add
and
ljmp
outsl
jl
negb
push
inc
or
test
adc
jno
xchg
dec
les
push
push
add
cs
cmp
add
inc
xlat
jns
rolb
jne
jmp
hlt
int3
in
pop
out
jae
retw
fnstenv
cmpsb
inc
stos
fistpll
xlat
cmp
mov
and
xchg
jns
dec
pop
shrl
add
lcall
mov
lods
out
or
mov
out
mov
fs
jns
mov
inc
add
add
mov
mov
or
stos
cmp
add
scas
pop
aas
add
sbb
fs
ss
jno
jo
hlt
stc
or
sub
mov
inc
jge
lcall
cmp
shl
inc
mov
jae
xor
out
push
sub
add
shll
adc
mov
rcrb
cmpsl
push
clc
push
inc
jo
out
nop
test
orb
mov
add
or
ds
in
jo
adc
jne
inc
xor
jae
pop
and
jge
xchg
je
and
push
and
mov
cmp
sbb
outsb
scas
sbb
xchg
in
add
movsl
fisttpll
mov
call
push
cs
js
xchg
add
push
sbb
clc
dec
in
sbb
xchg
push
add
aad
lahf
add
sbb
sub
cmpl
xchg
inc
mov
lret
or
sbb
adc
jmp
hlt
adc
or
loope
push
ret
mov
add
push
add
dec
loope
test
fwait
addl
repz
push
fcompl
hlt
scas
cmpsl
test
js
or
mov
and
or
fs
xchg
sub
add
lea
cs
pop
cmpl
daa
xchg
jge
repz
jl
lcall
in
push
inc
ret
or
inc
add
mov
mov
sahf
cld
push
inc
in
jmp
add
adcl
shrl
popa
fnstenv
mov
in
in
add
enter
leave
hlt
fcomps
insl
rorl
add
cmp
cmc
xchg
in
adc
repnz
pusha
xor
pop
popf
xchg
rorb
sarl
aaa
add
pop
mov
cmp
loope
mov
add
adc
hlt
sub
push
pmuludq
push
test
push
testl
push
loopne
mov
ret
cmpb
xor
xor
xchg
add
mov
and
jnp
cli
pop
out
std
cmp
sub
filds
out
inc
popa
aad
fcmovnb
repnz
add
fwait
adc
mov
jmp
aas
ja
in
and
add
jne
inc
or
addb
sub
je
push
decl
lds
pop
add
popa
ljmp
inc
mov
insb
xchg
add
push
cmc
mov
lret
or
dec
imul
xor
add
push
lods
cwtl
ljmp
clc
pop
mov
lret
pop
jmp
icebp
xlat
nop
out
mov
fstpl
pop
mov
bnd
mov
add
out
inc
aaa
sbb
insb
ljmp
add
adc
xchg
sbb
cmp
mov
hlt
mov
cltd
pop
push
inc
or
jnp
xchg
cwtl
pop
add
push
mov
sahf
nop
inc
pushf
sbb
cltd
xchg
fiaddl
mov
in
je
add
dec
insb
xchg
cs
add
fidivl
pop
push
jecxz
out
or
cmpsb
int
add
lret
sub
push
fmull
cli
aam
push
in
add
flds
idiv
jecxz
mov
clc
and
push
xchg
pop
jnp
pop
pop
add
mov
in
and
punpckhdq
sbb
add
add
mov
add
nop
sub
cmp
pop
add
mov
jb
cmpsb
out
dec
mov
and
hlt
jge
sub
adc
call
cmp
jae
pop
scas
lahf
mov
add
xorb
pop
mov
adc
int3
jecxz
stos
jmp
add
pop
dec
stc
lds
pop
inc
inc
or
mov
add
xorb
bound
repz
or
inc
shll
out
mov
push
jb
dec
test
jno
mov
add
push
lahf
mov
add
cli
mov
lea
int3
stos
xchg
jbe
jno
out
dec
sbb
iret
scas
inc
xchg
in
gs
or
adc
movb
mov
dec
jae
cs
cmp
and
sti
xchg
clc
jb
call
fidivrl
shl
std
jbe
pop
test
inc
jg
repz
cwtl
mov
jno
fistpl
add
nop
fdivl
ljmp
jmp
mov
mov
daa
call
imul
hlt
adc
cmc
lock
aas
clc
clc
leave
pusha
add
sub
push
pop
cmp
push
sbb
add
ret
pusha
adc
and
mov
jge
mov
filds
ret
imul
jecxz
xorl
add
ds
fucom
scas
cli
add
and
loope
add
adc
mov
mov
movsb
add
jns
sub
mov
sub
fldenv
jecxz
add
inc
or
out
sbb
adc
aam
mov
add
bound
lods
leave
imull
dec
and
mov
test
into
xchg
icebp
add
hlt
call
dec
push
add
fnstcw
aas
jecxz
les
mov
loope
jb
aam
sub
int3
rol
cs
push
pop
enter
fnstsw
stos
inc
add
divb
cli
stos
push
sub
sbb
enter
in
adc
add
sub
or
leave
test
cs
inc
ljmp
cmp
mov
addr16
add
mov
cmp
daa
sqrtps
in
sti
adc
mov
lret
cmp
mov
ds
inc
pop
pop
add
iret
test
bound
mov
imul
arpl
repnz
pushf
add
sbb
mov
lods
in
in
gs
orb
jle
cli
sbb
fsubl
mov
add
ret
pop
sub
add
mov
jecxz
hlt
jbe
and
inc
and
aam
xchg
mov
dec
jo
sbb
cli
pop
mov
pop
ret
jnp
outsb
out
testb
add
mov
xor
add
fiaddl
clc
testl
add
jle
push
test
xchg
sub
jae
adc
inc
add
add
aam
or
and
xlat
adc
pushf
addb
add
push
inc
jge
mov
xchg
jcxz
test
popa
push
mov
add
idiv
jl
mov
cwtl
push
shlb
subb
jns
shrl
mov
lahf
jmp
jmp
stc
xor
insb
add
dec
push
inc
rcrl
hlt
fidivs
and
push
mov
xorl
add
insl
xchg
pop
neg
popa
cmpsb
addr16
or
je
faddl
sbb
stc
push
add
and
cli
add
hlt
fists
add
or
dec
xchg
les
aad
shl
daa
cld
add
push
ret
es
sub
or
xor
add
mov
ljmp
pop
stos
mov
mov
lcall
xor
add
aam
enter
push
sbb
ds
add
mov
jmp
pop
mov
inc
xchg
icebp
jecxz
add
loope
lret
xor
idiv
sbb
adcl
adc
sub
mov
add
adc
adc
jne
hlt
or
fidivrs
pop
je
mov
inc
cmp
adc
cld
out
rcl
mov
push
jno
ficompl
inc
xchg
mov
add
lret
gs
pop
sbb
sti
jb
sub
aad
cli
jp
xlat
jle
xchg
stc
add
pop
dec
and
clc
sbb
jmp
push
f2xm1
cmp
pushf
testb
rcl
adc
cmp
hlt
pop
jle
sub
ljmp
jmp
pop
or
retw
cmp
push
xor
xor
lahf
adc
dec
mov
adc
adc
and
xchg
hlt
movsb
mov
call
out
mov
add
adc
aam
mov
add
subl
std
hlt
mov
add
pop
mov
inc
bound
je
call
fidivl
cld
push
inc
cltd
push
lods
xor
lock
lds
mov
fdivr
mov
in
sbb
cli
push
adc
lret
cmpsb
add
cmpsl
dec
add
jbe
sar
push
jg
lock
hlt
test
fiadds
stc
movsl
add
xorb
lods
jmp
jp,pn
lds
cmpsb
mov
faddl
cwtl
icebp
arpl
sbb
fidivrs
sti
daa
outsl
int3
dec
add
add
sub
nop
add
arpl
mov
shrl
loop
xchg
and
bound
xchg
imul
mov
pop
mov
xchg
cmc
and
mov
mov
jge
popf
lock
adc
imul
ljmp
add
in
xor
cmp
fisubrs
cmpsb
sbb
adc
lea
add
inc
push
and
adc
push
jae
or
jge,pn
pushl
push
dec
hlt
lahf
add
in
cs
or
cld
ljmp
call
pop
movsl
push
lcall
scas
xor
xchg
cld
insb
stos
ud0
add
stc
push
pop
add
cltd
insl
jne
loopne
push
and
lret
or
popf
xchg
dec
push
adc
adc
in
push
loope
outsb
out
fildl
and
mov
xor
sarl
jae
cld
ja
push
mov
add
out
cmpsb
lea
dec
mov
faddp
jmp
mov
adc
cmp
add
loope
or
cli
sbb
cmpsl
clc
sbb
xchg
out
add
scas
mulb
mov
xchg
push
mov
dec
add
lahf
les
add
ret
lcall
jns
push
dec
push
pop
dec
in
and
hlt
cmp
int3
loope
sbb
or
clc
jnp
jge
ficomps
push
lods
xchg
pop
add
test
pop
cmp
add
rcll
in
sub
sbb
jg
adc
push
dec
mov
inc
pop
lods
fninit
cmp
cld
sti
pop
dec
mov
repz
sar
aad
loope
lea
in
sub
ret
and
faddp
out
jbe
dec
sbb
mov
mov
popa
cmp
stc
dec
mov
decl
imulb
leavew
and
and
aad
jecxz
sbb
or
mov
decb
out
stos
mov
sbb
mov
lret
jne
or
cmp
call
pusha
movsl
mov
mov
jnp
faddl
lret
jp
sar
inc
and
call
and
mov
push
inc
add
jecxz
test
cmc
add
insb
stos
scas
adc
add
xchg
jne
xor
es
xchg
decl
repnz
jmp
pushf
jecxz
mov
xchg
dec
add
mov
mov
xchg
and
fisubl
je
add
pushf
cmpsl
aad
mov
cmp
jl
xor
sub
repz
in
out
aas
adc
cli
es
movsb
pusha
and
jns
push
add
add
mov
lock
push
jmp
out
sarl
ss
cmp
insb
jno
push
xchg
lods
cmp
pop
notb
inc
push
movaps
inc
in
add
add
sbb
pop
mov
aas
mov
sbb
in
push
ljmp
lock
add
add
fdivr
in
add
xor
inc
lcall
xor
xchg
jle
cmp
out
push
inc
xchg
andb
cmp
ss
fdivrs
jo
pushf
outsb
pusha
stc
mov
or
pop
iret
add
lahf
xor
sbb
daa
shrb
lock
mov
inc
sub
add
xor
xchg
lock
pop
faddl
in
jecxz
hlt
int
lods
movb
test
add
movsb
jns
ret
sahf
arpl
cmp
lods
add
bound
inc
dec
repz
mov
in
or
pop
ret
mov
lcall
in
ret
test
out
jnp
add
add
divb
add
push
andl
pop
push
rolb
in
sti
fwait
hlt
jl
dec
mov
jns
lcall
repz
inc
scas
cmp
sbb
fndisi(8087
add
jecxz
add
aam
adc
js
xor
test
add
movsb
sub
loop
xor
jb
and
add
addr16
inc
xlat
mov
mov
inc
push
daa
add
sbb
ja
je
icebp
push
add
dec
and
push
or
std
adc
scas
push
cmp
push
outsb
jne
jp
repz
add
jecxz
pop
mov
adc
xchg
xchg
lock
inc
cmp
mov
loop
mov
out
or
cmpsb
scas
mov
inc
sbbb
ss
dec
mov
sub
mov
cmp
sahf
lahf
add
lret
xchg
adc
cmp
adc
les
dec
cld
cmp
mov
int3
jbe
sub
fwait
mov
mov
push
in
inc
and
xorb
mov
inc
jae
sub
adc
add
mov
dec
sbb
mov
pop
dec
cmp
cmp
xlat
inc
dec
and
test
mov
testb
lods
mov
mov
pop
mov
pop
pop
add
add
sub
cmpsl
add
in
cmp
add
xchg
mov
insl
cmp
adc
mov
cwtl
mov
inc
add
out
ret
add
lea
lahf
hlt
mov
inc
inc
in
inc
and
fists
and
lret
xor
add
in
repz
add
xchg
mov
and
mov
push
jnp
add
and
add
addr16
sahf
dec
or
loopne
imull
lret
cwtl
mov
inc
mov
sahf
add
push
negb
insl
movsb
sub
negl
add
xchg
xchg
repz
out
les
stos
push
inc
icebp
divb
xchg
cmp
cli
mov
je
mov
loope
add
scas
inc
push
xchg
data16
add
dec
rorl
jns
mov
inc
std
shl
in
daa
loop
lcall
cmp
xchg
incl
xor
jg
cwtl
stc
push
cmpb
jo
push
mov
mov
ret
hlt
cmp
add
mov
test
lods
add
fcoms
add
loop
pop
in
cmpl
out
shll
clc
sar
subl
cmp
add
aas
ret
ljmp
adc
iret
out
add
mov
dec
cmc
cltd
add
push
inc
sti
in
orl
in
mov
rcll
icebp
add
out
mov
hlt
push
daa
and
dec
xor
rol
add
js
add
or
add
out
iret
cmp
mov
mov
in
lock
ljmp
push
daa
pushf
std
cmpb
push
push
mov
fprem1
inc
test
mov
pop
aam
add
xor
pop
mov
xchg
mov
add
arpl
sahf
cltd
fwait
add
add
sbb
mov
add
xchg
fimuls
ret
lock
push
js
push
xor
lcall
xchg
inc
movb
sub
out
fdivl
into
lret
push
sahf
push
movsb
add
dec
aaa
xor
mov
xchg
add
fstpt
roll
cltd
hlt
mov
lahf
pop
cmpsb
cmp
mov
push
add
mov
push
add
push
and
push
add
test
cmp
dec
shlb
aas
and
add
mov
into
xchg
jns
add
jecxz
mov
arpl
mov
test
adc
sub
xor
adc
sbbb
out
add
fisttpl
and
sub
jbe
stos
lcall
jmp
dec
out
insb
add
jge
xor
lea
add
outsl
xchg
cmp
aam
fsubrl
mov
dec
sar
or
mov
in
ret
inc
incl
fcmove
scas
sub
add
es
leave
hlt
fidivrl
shl
mov
jae
mov
xor
out
mov
inc
stos
cmpsb
cmp
xor
out
or
mov
cltd
push
push
jl
jecxz
out
pop
fdivrl
jmp
call
cmp
sbb
add
adc
mov
outsb
mov
arpl
add
mov
out
mov
add
xchg
jne
mov
xor
pop
fistpl
cmp
pop
dec
jecxz
push
aas
pop
mov
insb
cld
test
push
dec
das
nop
jno
lcall
add
in
dec
sbb
inc
add
and
mov
mov
mov
add
shl
dec
mov
dec
cmc
or
add
movsb
pop
clc
les
je
mov
jo
push
call
cmpb
add
xchg
xchg
stos
xchg
mov
inc
hlt
cltd
test
insb
loop
ljmp
add
rolb
inc
xchg
out
les
loop
mov
or
lret
test
popf
sub
outsl
push
ja
fstl
arpl
movups
add
sbb
mov
push
mov
fwait
hlt
inc
sbb
jp
cld
mov
sub
lock
inc
add
jae
mov
out
imul
scas
scas
cmpsl
jp
mov
dec
shrb
ljmp
aaa
pop
sar
stc
push
xlat
cltd
dec
mov
push
add
add
movsl
stc
rcr
and
out
hlt
cmp
cmpsb
inc
dec
or
jns
add
jmp
stc
add
cwtl
pusha
shll
sub
in
sub
add
lret
push
ret
outsb
add
cli
std
aad
imul
inc
jne
repnz
jecxz
add
test
adcb
ror
jmp
pop
jecxz
sbb
outsl
mov
call
jmp
scas
lret
outsb
adc
in
sub
fstl
popa
fdivr
sti
jge
cld
push
fxtract
adc
pop
loopne
pushl
cmp
and
inc
add
mov
pop
pop
je
sub
stc
mov
popf
imul
add
mov
jno
imul
arpl
mov
movsb
out
orb
push
and
mov
neg
sbb
xchg
fsubl
movsb
cwtl
incl
push
sub
add
pop
aaa
mov
push
stc
mov
in
loope
pushl
and
push
lret
adc
add
test
in
xor
arpl
sbb
mulb
ss
fists
or
push
mov
cli
rcll
mov
fwait
sti
add
sbb
sbb
into
testb
and
mov
adc
ret
mov
pop
imul
frstor
jmp
mov
hlt
mov
dec
daa
popa
cwtl
sar
xchg
imul
cld
fxch
cli
test
lret
or
push
add
sub
cltd
add
stc
sahf
aam
sbb
scas
inc
jns
loope
add
mov
add
jp
or
ds
loope
jg
add
das
push
mov
flds
pop
add
add
imul
add
mov
negl
data16
stos
inc
int
xor
jno
mov
hlt
mov
dec
sbb
cmpsl
inc
mov
xor
and
sar
pop
xchg
cld
out
mov
ja
mov
adc
push
sub
inc
add
js
ja
jae
add
or
adc
mov
cmpl
mov
inc
outsb
push
add
sbb
and
mov
hlt
sub
and
shlb
test
xor
cmp
outsl
add
lods
out
adc
cld
and
add
cli
mov
pop
mov
stos
and
add
dec
popl
out
and
mov
mov
cld
inc
sub
cmp
mov
mov
in
ret
add
test
jp
add
mov
pop
in
add
loope
add
mov
xchg
mov
sbb
mov
loope
jnp
push
mov
test
roll
in
xchg
mov
push
add
adc
cs
shrb
pop
in
jns
scas
dec
add
pusha
xorb
hlt
xor
adcl
sbb
sub
jno
bound
pop
adc
in
or
fiaddl
jmp
jmp
ret
add
pusha
add
shrb
add
push
pop
xchg
add
add
addl
xchg
test
jmp
arpl
sti
jmp
push
in
les
ficoml
test
rclb
repz
cld
imul
clc
adc
add
cmp
add
or
xchg
fildll
add
es
inc
cltd
add
jp
aas
and
mov
gs
lods
js
adc
fwait
cmc
fadd
add
and
xchg
icebp
jmp
outsb
mov
fdiv
inc
ret
fwait
lahf
cmp
imul
les
scas
ret
lods
notb
add
sbb
incb
add
xchg
incb
sub
js
lock
dec
dec
add
flds
add
jecxz
stc
enter
popa
adcl
faddl
fidivrl
fdivrs
repz
jge
into
or
hlt
fisttps
or
dec
push
sbb
imul
out
push
lret
test
inc
pop
mov
outsl
leave
push
popa
roll
jne
aaa
in
mov
add
xchg
aam
add
lods
xor
add
and
in
add
cld
popa
add
int
mov
test
les
cmp
subl
in
mov
lock
jl
aam
fwait
leave
std
cmpb
or
xor
daa
ret
xor
mov
xchg
and
dec
jecxz
push
scas
pop
outsb
or
in
lret
mov
andl
jg
jg
cmpb
jne
mov
sar
inc
inc
mov
inc
repnz
aaa
mov
add
pop
and
cmp
dec
sub
shlb
mov
add
xor
sub
xchg
out
aad
shll
sub
mov
xchg
mov
push
sub
mov
int
mov
adc
mov
add
divb
and
pop
in
or
mov
inc
subb
xor
subb
pop
ret
xor
test
add
nop
scas
lret
lock
pop
mov
or
addr16
mov
add
and
in
sub
leave
add
push
js
add
ja
das
mov
movsl
sti
faddl
or
jne
cli
les
mov
ret
lret
inc
out
repnz
sub
repz
mov
sbb
call
subb
sbb
mov
and
add
dec
das
xorb
and
frstor
add
xor
mov
pop
jbe
push
in
orb
jne
je
in
jmp
add
lds
add
sub
add
or
add
ds
roll
cmp
icebp
xchg
hlt
add
and
adc
mov
insl
scas
dec
lods
ds
in
and
je
push
out
or
gs
xchg
or
ja
jnp
mov
push
push
test
add
inc
pop
fwait
in
insl
movsl
mov
lock
shll
sbb
sub
loopne
xor
add
testb
scas
icebp
pop
mov
fsubl
jo
xor
fwait
xchg
sti
xor
jmp
lret
les
pop
rol
xlat
scas
in
cltd
add
pop
hlt
shrl
sahf
mov
fisttpl
dec
sbb
aas
addl
or
icebp
jo
cmpsl
lret
pop
hlt
iret
jbe
mov
loope
or
mov
popl
loope
adc
rolb
lock
xchg
inc
je,pt
jo
pop
pop
push
and
jecxz
push
test
mov
insl
xor
cld
mov
out
stos
add
fwait
mov
hlt
jge
xor
or
ficoms
jbe
and
pop
mov
test
cmc
imull
adc
incl
pop
fwait
les
ss
push
add
arpl
xchg
pop
mov
add
lods
les
out
mov
jecxz
add
mov
into
add
mov
lds
arpl
add
mov
push
cld
shrb
ss
push
hlt
js
ss
imul
mov
jp
add
mov
inc
inc
rcl
cmp
loop
jl
std
cld
cwtl
mov
jo
lahf
jno
popf
aad
push
mov
inc
out
mov
shl
and
adc
push
arpl
cmpsb
shlb
xor
inc
test
xchg
add
mov
pop
jp
gs
out
not
iret
mov
xchg
push
add
xchg
xor
xchg
out
stos
xlat
mov
xor
mov
mov
aaa
add
push
imul
mov
call
mov
outsl
hlt
repz
jbe
xchg
fisttps
pop
je
push
movb
add
ja
repz
fildll
cli
outsl
jmp
inc
lret
add
and
xchg
mov
andb
adc
xchg
cmp
xor
mov
je
add
sarl
clc
loope
add
mov
dec
sbb
or
sahf
add
add
or
jae
adc
xchg
mov
lcall
cmp
mov
add
jecxz
or
dec
cmpsl
jo
sub
mov
inc
jle
xchg
repz
stc
pop
call
sbb
add
loope
cmp
xchg
adc
mov
add
mov
ret
or
cmc
ljmp
ss
pop
xchg
addb
cmp
lret
mov
pop
pop
cmp
xchg
push
add
jmp
or
add
cs
stos
add
mov
sub
inc
mov
jmp
lds
insb
ret
shll
sbb
xchg
inc
jo
mov
xchg
fldl
cli
insl
push
stos
add
iret
pop
xchg
adc
fadd
adc
or
icebp
cmpsb
sbb
aad
test
or
std
mov
bound
in
mov
lcall
inc
jmp
sbb
or
sbb
cli
add
pop
or
inc
lret
jmp
inc
xor
push
fs
adc
xchg
sub
pop
sub
gs
and
and
jl
pop
in
loope
repnz
in
pusha
sahf
sbb
inc
movsl
js
out
pop
and
hlt
idivl
cs
xor
ret
mov
in
xchg
push
lahf
add
dec
lock
add
jecxz
std
punpckldq
cmp
das
add
test
les
dec
adc
dec
shrb
lahf
push
lret
mov
mov
xchg
out
movsb
jno
call
inc
or
dec
or
jl
add
cld
push
hlt
outsb
popf
jp
mov
loopne
je
xchg
call
mov
cld
mov
outsb
jne
inc
cmc
rcrb
xor
je
bound
add
mov
aas
add
repz
cli
cmp
inc
fdivrp
cmpl
sub
add
les
and
das
push
in
add
sub
sub
xchg
pusha
or
mov
add
call
mov
int3
xchg
negb
inc
xlat
and
mov
cmpsl
mov
fstl
loop
sub
hlt
pop
loopne
add
cwtl
sub
dec
orb
mov
enter
jne
xchg
or
ja
add
iret
jb
add
or
cli
push
hlt
jle
ss
inc
inc
cmp
jg
mov
icebp
in
int
xchg
jb
rolb
rcrl
mov
pop
add
jle
adc
jmp
icebp
jne
jnp
and
insb
hlt
rcrl
cmp
pop
loope
mov
jo
repz
add
inc
pop
jp
ficompl
rclb
add
lds
inc
in
mov
mov
add
icebp
and
pop
nop
shll
rclb
inc
mov
inc
scas
gs
lcall
push
ljmp
add
add
jle
repz
lods
pushl
leave
pop
jecxz
add
cmp
add
data16
cwtl
push
dec
push
sub
add
lret
fldl
icebp
sub
clc
sbb
and
add
out
cld
and
adc
divb
push
stos
mov
inc
and
sub
sub
fdivl
xchg
call
ja
in
jb
jecxz
lret
mov
fbstp
lret
jg
call
inc
je
add
shll
rorb
jecxz
insl
test
xchg
push
cld
mov
add
mov
mov
loope
lock
or
std
adc
mov
mov
push
mov
xchg
stos
sbb
xor
cmp
sub
sti
scas
movb
fcompl
mov
call
out
lds
jne,pt
jbe
mov
hlt
xor
and
and
je
sbb
jmp
mov
mov
insb
outsl
inc
jl
fsubrs
lea
subl
push
lock
xor
fwait
ret
dec
push
in
sbb
dec
ret
pop
mov
mov
test
or
inc
add
add
push
add
lret
adc
xchg
ret
add
sbb
mov
push
cltd
mov
popa
or
shr
std
lahf
jno
cmp
ja
in
mov
mov
stos
mulb
mov
pusha
sub
xchg
or
pop
sbb
roll
icebp
and
lcall
stos
mov
mov
filds
movsl
push
mov
dec
dec
add
push
lea
repz
mov
iret
xor
pop
fiaddl
xor
ret
xchg
adc
jge
add
fucomip
lea
js
out
mov
push
insb
lcall
aad
ss
cmp
cmp
jne
ficomps
add
add
dec
pusha
xchg
add
add
mov
nop
xorl
iret
cli
add
in
push
in
test
out
ret
xchg
pop
adcb
test
sbb
sbb
add
push
fdivp
add
inc
iret
jae
repnz
jecxz
add
dec
pop
repz
mul
dec
ljmp
cmp
mov
fcmovne
xchg
mov
add
and
je
in
mov
imul
adc
shlb
xor
pushf
hlt
add
es
jne
bnd
enter
jg
daa
adc
add
push
icebp
test
cli
repnz
jb
ret
xchg
inc
repz
xchg
roll
dec
push
cmpsl
int
mov
fucomi
sarl
aaa
add
mov
aad
push
test
pushf
or
dec
fsubr
adc
es
mov
mov
pop
hlt
sbb
cld
jo
add
sahf
clc
pop
nop
into
push
jl
ss
dec
pop
ret
ljmp
jle
testl
out
mov
add
pop
push
xchg
or
lock
add
jo
loop
push
call
fdivrl
and
mov
icebp
add
aad
xchg
add
mov
test
add
pop
push
mov
cs
jns
adc
inc
hlt
push
sub
push
pop
mov
subl
call
mov
xchg
lret
pop
add
sub
hlt
jo
cmpsl
jmp
cs
mov
jmp
mov
ljmp
lret
lods
sbbl
push
adc
mov
lret
mov
out
cmp
rcll
je
jge
roll
pop
inc
mov
add
pop
rolb
insl
lds
scas
roll
dec
xor
add
mov
mov
mov
imul
sub
xchg
inc
test
lcall
push
add
adc
jge
sbb
mov
out
ds
cmp
mov
icebp
fcmovnb
arpl
jne
addr16
jae
dec
data16
cld
or
mov
test
sbb
inc
out
cmp
decb
cmpsb
hlt
push
out
xchg
lock
add
aas
mov
push
add
test
shrl
ds
mov
xchg
push
cwtl
inc
mov
mul
decb
xor
fisubrl
popa
or
add
fistpll
call
pop
out
adc
push
inc
jnp
rcll
popf
mov
add
enter
jmp
hlt
test
xor
xor
repnz
add
bound
mov
push
repz
add
mov
out
notb
pop
cmp
add
add
mov
dec
mov
aas
mov
out
jge
cli
mov
pop
jl
hlt
dec
cmp
inc
add
sti
jae
mov
and
in
cltd
push
pop
imull
mov
xorb
mov
mov
ret
jno
mov
setl
cmp
in
adc
dec
das
push
pop
lret
xchg
cld
and
lret
pop
cmpl
enter
or
push
push
push
inc
sub
shl
cmp
cmp
add
xlat
faddl
fdivrs
jmp
mov
lcall
xchg
add
popa
mov
aas
pop
or
mov
xor
aad
mov
and
add
loope
jg
and
and
insl
add
adc
into
dec
jle
push
popf
push
adc
jnp
add
in
addl
add
mov
pop
push
ss
lock
add
les
mov
sahf
cmp
and
xor
or
add
jb
incb
icebp
adc
and
mov
xchg
addb
xchg
in
hlt
mov
ja
fstps
nop
cmpsb
mov
mov
inc
adc
out
add
jbe
push
or
xchg
sbb
aas
push
jp
idivb
mov
cld
sbb
out
push
mov
jno
xchg
and
push
adc
push
inc
push
add
incl
stc
mov
mov
cmp
test
out
cmp
std
cmc
xchg
in
or
push
rolb
out
fildl
pop
out
roll
jns
imul
push
jo
sub
int3
out
imul
ret
sbb
push
hlt
ss
cmpsb
repz
je
rcll
out
xchg
movsl
addl
mov
jl
mov
les
xchg
pushf
aad
js
xor
aaa
jp
psubw
cld
rcll
loopne
add
sub
popa
push
pushl
lcall
add
xor
pusha
decb
pop
mov
loopne
adc
cmp
push
inc
sub
pop
lock
mov
in
out
inc
cmpsl
clc
std
mov
xlat
add
adc
jl
or
pushl
rolb
repnz
bound
in
sbb
mov
imul
mov
pop
xlat
or
sahf
cmpsl
cli
add
aam
lea
mov
dec
fidivs
js
clc
pop
and
push
scas
mov
add
jg
fdivrp
fdivrl
add
loope
aam
das
xor
clc
adc
lcall
iret
cld
scas
gs
add
sarb
ret
mov
or
adcl
or
mov
mov
ret
add
int3
test
jno
and
repz
xorl
cltd
adc
xchg
inc
mov
lock
icebp
lods
dec
push
stc
aaa
or
fucomip
lea
xor
jo
cli
inc
lock
ja
and
add
dec
sbb
hlt
dec
cld
push
mov
sub
out
ljmp
add
addb
lret
in
sbb
test
and
loopne
push
push
lock
mov
add
add
fimuls
lret
sbbb
subl
jle
add
bound
clc
jmp
add
ss
xchg
in
ffree
xchg
addl
cmpsb
in
shl
js
jg
clc
je
add
xchg
lock
scas
outsb
movsl
adc
lcall
jae
pop
mov
mov
xorb
sub
nop
jno
roll
cmp
ret
sub
jmp
mov
push
mov
mov
jbe
dec
and
cmp
pop
test
popf
insb
push
movsb
mov
xchg
adc
add
cmp
ret
inc
stc
add
sub
mov
add
or
or
pop
loopne
movsl
iret
aad
jecxz
inc
roll
push
adc
cmp
in
add
cmc
add
aaa
adc
xlat
gs
insl
cmp
xor
dec
add
cmp
inc
push
cmpsl
add
js
aaa
add
fdivs
and
push
xor
ret
fiaddl
popf
cmc
mov
xor
outsb
sbb
pop
fdivl
xor
mov
in
shll
pusha
les
adc
cmpsb
leave
add
fnstsw
jb
hlt
sub
pop
mov
add
add
ret
add
inc
cld
jecxz
inc
jno
aas
xchg
outsl
dec
stos
scas
mov
xor
rolb
lret
jecxz
in
and
pop
daa
push
in
loope
pusha
call
aad
ret
stos
cmc
inc
adc
sub
and
cld
cwtl
adc
push
mov
xor
add
cmpsl
lea
hlt
xor
outsl
rcrb
in
or
or
ror
imul
lcall
jmp
sbb
outsl
mov
in
add
xchg
cltd
adcl
add
shl
ljmp
jp
xchg
sbb
sar
mov
cmp
pop
test
int3
ja
cmpsb
sbb
sub
or
push
jge
orb
cld
loopne
push
add
inc
leave
arpl
jnp
mov
int3
aas
and
mov
insl
jmp
and
stos
or
or
mov
jne
xorl
or
mov
imul
sbb
addl
negl
add
mov
mov
cmpsb
ret
enter
mov
dec
mov
fimull
push
and
jmp
sub
loopne
hlt
clc
xchg
dec
inc
ret
dec
push
cmp
add
adc
push
add
sub
jmp
mov
incl
in
sbb
mov
lods
cmp
and
insl
cmp
loope
mov
std
push
stos
mov
sarl
xor
cli
popa
shlb
les
jbe
sub
add
jl
pop
add
jg
add
mov
call
inc
and
push
xor
aad
xlat
push
sub
fwait
cmp
add
dec
in
mov
dec
leave
popa
add
cmp
add
or
int
lods
lcall
loope
test
fistl
or
jno
inc
inc
add
jnp
pop
repnz
push
adc
dec
mov
inc
and
or
mov
popf
jmp
mov
in
stos
testl
out
inc
mov
add
aaa
push
mov
cwtl
add
cmpsb
push
in
outsl
mov
add
ljmp
add
mov
mov
inc
testb
loope
fwait
out
cmp
sbbl
out
pop
icebp
ja
jg
cli
mov
mov
add
lea
hlt
xchg
out
mov
mov
add
adc
gs
pop
lock
jge
out
imul
pop
jns
add
js
jecxz
mov
repnz
mov
adc
push
adc
hlt
cmp
movsb
aad
loope
ljmp
pusha
xor
testb
push
scas
aas
jb
fisttpl
data16
jne
push
add
mov
jp
inc
add
mov
mov
mov
inc
data16
repz
rclb
cmc
clc
cmp
adc
fcompl
test
inc
cmp
add
inc
test
sub
sub
in
movsl
jg
push
add
pop
xchg
sub
std
xchg
pop
mov
add
repnz
add
loope
cmpsl
nop
ss
cltd
xchg
add
mov
jge
add
or
fstl
scas
loopne
add
es
adc
xor
fistpl
decl
add
and
inc
cmp
out
jno
xor
hlt
loop
xchg
insb
cs
add
xchg
out
fidivs
or
xor
call
popa
mov
popl
mov
jno
add
ljmp
mov
xchg
lea
xlat
adc
xchg
cmpsl
movsb
ja
ret
hlt
pop
mov
xor
leave
jnp
xchg
add
lcall
add
lock
inc
inc
add
stos
fsts
add
add
xor
cs
loop
jp
inc
rcrl
fs
inc
addr16
add
std
inc
mov
shrl
repz
ret
add
mov
scas
or
jp
adc
xchg
std
adc
lods
or
add
cli
jp
sbb
mov
mov
jae
inc
pop
arpl
mov
push
sahf
xchg
sub
std
mov
inc
adc
mov
xor
and
mov
jecxz
repnz
add
test
sub
xchg
mov
add
cli
xor
aam
xchg
and
lods
cmp
int3
fwait
andb
inc
or
fidivrs
ret
add
out
jnp
cld
cmp
loope
dec
lret
push
adc
push
fcomip
loopne
pushl
add
mov
idivb
hlt
aaa
ja
adc
jns
or
jne
mul
out
sbb
mov
mov
hlt
repnz
mov
add
push
shrl
inc
inc
enter
inc
lock
je
add
notb
dec
faddl
dec
push
add
sarl
add
jb
cltd
xchg
pop
icebp
aas
add
jecxz
hlt
pop
loopne
mov
push
out
adc
jo
or
mov
add
dec
dec
rorb
or
adc
jmp
add
sub
inc
repz
test
pop
fwait
scas
pusha
jae
xchg
jmp
imul
fidivrl
jecxz
les
adc
loope
leave
fs
inc
aas
shll
lret
popf
add
loope
mov
addr16
sub
bound
mov
sub
add
fldenv
cmp
loop
add
out
repnz
fisubrl
mov
xchg
gs
out
les
pop
lds
addr16
out
xchg
and
js
in
adc
leave
ret
outsl
scas
rol
xchg
sub
mov
add
in
sub
pop
out
mov
hlt
push
mov
add
jecxz
or
fadds
and
cmp
inc
sbb
xchg
scas
add
and
aad
sbb
cmpsl
mov
in
lods
hlt
insl
xor
dec
sub
lret
pusha
add
dec
repz
mov
in
pop
icebp
and
cmpb
mov
add
add
adc
stos
xchg
cwtl
stos
dec
sbb
push
mov
jle
out
adc
jmp
jmp
lahf
notb
bound
mov
and
outsl
shl
stc
fsubrs
push
mov
out
lahf
pop
insb
lret
adc
add
dec
outsb
push
notl
and
jnp
rol
and
pause
ljmp
mov
jmp
mov
fbstp
lock
cmpsb
hlt
in
add
nop
adc
push
mov
scas
add
pop
in
adc
and
pushf
add
sbb
push
stos
mov
add
aas
hlt
insb
xchg
mov
ret
stos
in
cmp
sbb
inc
add
or
xor
and
pusha
and
jnp
push
sub
jl
pop
fadds
pop
jp
add
push
hlt
leave
dec
fdivrl
pop
add
ret
call
mov
outsl
cmp
out
pop
cmpsl
sub
rol
inc
pushf
out
enter
xor
add
movsb
lcall
fmull
and
add
jbe
fcom
inc
sub
add
pop
jae
js
in
rorl
decl
subb
push
movsl
add
clc
pop
mov
lock
adc
push
dec
fcoml
call
mov
call
jb
sti
dec
test
push
sub
je
mov
mov
sub
mov
in
aam
xor
lahf
lcall
mov
mov
test
jnp
rcl
sbb
jg
adc
xor
sar
or
xchg
xchg
xchg
fs
imull
add
adc
repnz
mov
mov
arpl
jl
add
cmp
xchg
rcrl
dec
adc
js
inc
jnp
bound
ss
pop
jb
scas
sbb
repnz
icebp
out
jl
movsl
std
add
mov
cmp
cmp
lahf
sti
repz
push
in
dec
cmpsb
dec
add
out
mov
sbb
add
sub
iret
lret
addr16
lret
shll
hlt
loop
pop
jb
add
adc
test
mov
dec
or
mov
mov
xor
je
add
ret
fwait
jl
cli
add
roll
jmp
jp
add
insl
push
cmc
add
jecxz
mov
sbb
inc
dec
sbb
pop
push
scas
add
cli
pop
orl
adc
sahf
fs
cmpsl
xchg
xor
test
inc
inc
jns
and
cltd
das
jp
sarb
inc
mov
pop
mov
adc
test
push
ds
xor
inc
add
lret
and
xor
std
and
loopne
sub
imul
jb
add
mov
cltd
shrl
in
fsubrl
and
in
mov
ret
sti
fdivp
add
jle
mov
push
dec
adc
jno
add
icebp
mov
add
test
subb
add
push
add
cmpl
orps
add
xor
aam
idivb
cmp
stos
pop
ja
add
out
add
adc
xchg
sahf
xchg
sub
mov
mov
add
mov
mov
mov
aam
xor
add
cli
jp
mov
xchg
add
jecxz
or
cmpb
cmp
std
add
xchg
jp
imul
sbb
fwait
movsl
add
mov
stos
out
jp
add
std
data16
int3
mov
rcll
aas
and
dec
sahf
in
and
add
call
xor
aas
cmc
sbb
hlt
push
mov
sbbl
mov
jl
pusha
adcl
sti
mov
mov
and
mov
outsl
fdivrp
divb
data16
mov
xlat
in
repz
sub
jg
ret
pop
or
sub
xlat
and
call
mov
scas
aam
movaps
mov
mov
lahf
jns
sbb
or
into
sar
or
pushf
enter
fcompl
add
jno
sbb
push
mov
xchg
insb
or
add
sbb
add
movsl
rol
add
stos
stos
pop
nop
dec
mov
mov
and
push
cmp
and
outsb
lret
cmp
xchg
jge
mov
push
add
in
jne
mov
out
ret
mov
mov
mov
adc
xchg
mov
cmpsb
add
jecxz
pop
clc
ljmp
mov
cwtl
mov
sbb
popa
jae
out
in
lds
ja
sbb
mov
hlt
fildl
adc
stos
or
cmp
push
lahf
addl
repz
jle
sub
pushf
push
fldcw
fwait
sub
out
mov
mov
mov
or
mov
add
sbb
je
mov
mov
ja
aad
sub
sarl
mov
jecxz
cmp
and
shll
jns
lret
xchg
or
xor
sbb
cmp
enter
pop
mov
inc
fstpl
loop
aam
push
movsb
inc
cltd
cmpb
xchg
pop
sub
add
mov
rep
xchg
mov
xlat
pop
movsb
mov
dec
and
cmp
out
sub
cmp
out
addb
out
imulb
mov
pop
aaa
add
mov
xchg
cld
mov
lods
adc
push
out
aaa
stos
mov
roll
icebp
lcall
add
repnz
insb
dec
enter
cmp
mov
lret
inc
imul
push
cmp
push
jmp
dec
jmp
sub
jo
ret
shll
int3
xorb
add
xchg
hlt
sti
decl
rolb
pop
lret
pop
cmp
cli
mov
ret
icebp
and
je
in
aaa
mov
adc
mov
adcb
in
xor
mov
loopne
sbb
insb
mov
mov
add
testb
fidivrl
mov
xor
in
test
add
mov
stc
test
xor
add
jl
xor
sbb
mov
xchg
scas
in
fdivr
inc
jae
pop
adc
rorl
push
pop
xor
sti
mov
adc
in
and
add
in
sbb
fadd
jb
pop
das
movsl
aam
lock
lods
xchg
test
xchg
mov
add
repz
js
add
dec
jecxz
add
outsl
xor
push
das
lock
xchg
mov
std
sbb
pusha
test
and
or
fs
rcl
xchg
add
movsl
mov
dec
dec
xlat
or
je
push
add
push
lock
push
adc
icebp
dec
adc
lret
dec
aam
jno
mov
cmpl
mov
mov
xor
push
int3
xchg
add
mov
xchg
lock
lret
enter
add
mov
cltd
jo
mov
add
push
loopne
in
mov
scas
add
dec
dec
pminub
mov
icebp
cmp
lock
adc
sub
mov
dec
stos
xor
add
hlt
shll
call
in
push
xor
cmc
cmp
loopne
call
or
pop
add
mov
clc
adc
adc
xchg
cmc
into
lret
lahf
ds
movb
mov
cmp
jp
ss
inc
out
push
cli
xor
add
subb
stos
dec
hlt
jo
add
xor
add
inc
push
adc
add
jno
sbb
add
std
lea
and
mov
std
sti
jge
jl
jg
sahf
mov
add
aas
aaa
mov
add
cmpsb
add
insb
sbb
add
jmp
sbb
push
in
pop
out
adc
test
cmpsl
jns
xchg
and
cmp
add
xor
clc
leave
sbb
adc
add
mov
add
and
jae
xchg
jb
pop
pop
lods
mov
cli
mov
in
push
in
pop
shlb
out
push
cmpsb
add
out
pop
out
jl
push
add
aas
negl
xor
push
or
out
push
lcall
repnz
or
and
icebp
dec
pop
add
stc
jnp
mov
xor
cmpl
popa
adc
in
push
jle
pop
mov
inc
push
pop
out
repz
fadd
push
addr16
mov
sub
clc
cmpsb
shlb
mov
orb
shlb
push
out
stos
out
pop
popf
dec
add
icebp
or
sub
enter
add
fdivr
inc
scas
add
sbb
stos
add
cmpsl
pop
scas
fs
jns
mov
jg
add
ds
xor
add
sbb
negl
fcomi
rolb
out
call
sbb
in
xor
jbe
inc
sti
cs
fadds
jno
pop
add
adc
adc
or
push
ss
mov
popf
mov
pop
adc
adc
cld
xchg
pop
jb
jmp
cld
andl
lret
inc
pop
cmp
insl
dec
push
repz
shlb
int3
mov
xchg
and
hlt
mov
vaddsd
sbb
push
fadds
outsb
cwtl
hlt
push
shll
popf
sbb
add
xchg
mov
add
mov
mov
nop
sub
dec
dec
js
outsb
dec
cmp
test
add
out
aam
mov
lock
inc
push
xchg
mov
jmp
test
ljmp
mov
rcll
sbbl
out
jae
in
mov
mov
add
xchg
rorl
push
inc
lcall
add
cli
dec
into
stos
jb
rol
sahf
addb
hlt
push
push
cwtl
sbb
mov
push
mov
adc
push
cld
cld
cmp
mov
stc
aad
cmp
lock
aaa
outsl
jns
cmp
into
incl
sbb
sti
xor
xor
clc
test
jl
call
lds
push
add
inc
fstps
sbb
and
add
cli
mov
add
loopne
rcrb
sarl
cli
jne
pop
add
and
or
es
mov
pop
jp
cmp
repnz
cld
ds
dec
cmp
andl
xchg
xor
mov
dec
mov
add
adc
pop
adc
push
loopne
ljmp
push
shl
pop
xorl
or
add
cmp
cmp
fs
cli
or
shl
add
aad
xor
and
push
push
add
repz
pop
inc
xchg
sub
rolb
in
pop
lods
and
cld
and
dec
mov
jno
fnstcw
xchg
stos
and
pop
push
fwait
jge
rorl
out
faddl
add
imull
add
lret
pop
cmpsl
ljmp
mov
adc
mov
icebp
add
out
sbb
xchg
pop
add
enter
mov
test
fcomi
add
add
push
cld
fdivrl
dec
out
mov
lahf
mov
sbb
popf
aam
xor
add
jns
loopne
cli
and
pop
push
pop
shrl
sbb
fwait
pop
lea
jns
divl
test
push
or
sbb
pop
dec
les
and
or
add
in
repnz
xor
jae
push
mov
loopne
mov
cli
daa
mov
jle
mov
roll
neg
insb
mov
popa
mov
jne
dec
jo
popf
sbb
push
add
inc
inc
mov
jnp
popa
sti
ja
cwtl
add
leave
mov
adc
cmpsl
mov
es
subb
repz
push
mov
sub
mov
mov
or
jnp
stos
add
jae
mov
test
add
pop
adc
xchg
sub
add
xchg
adc
aaa
add
inc
and
lret
pop
pop
sbb
fdivr
jb
outsl
lods
xchg
adcl
pop
out
sub
add
sbb
das
stos
add
mov
dec
add
aas
jmp
loope
add
jg
or
in
dec
cmp
add
push
add
cwtl
ret
mov
sbb
inc
aaa
lret
shl
jle
push
rcll
adc
add
mov
fwait
sbb
cmp
mov
repz
fisubrs
and
mov
out
cli
movsb
mov
call
cld
loope
int
push
sbb
add
sbb
cwtl
insb
xchg
or
popa
add
fwait
xor
push
pop
cltd
je
fnstenv
mov
add
in
sti
aaa
in
addr16
adcb
mov
add
sbb
fistl
std
add
outsl
push
inc
sahf
or
mov
fbstp
je
mov
rcll
outsb
dec
repz
or
sbb
add
mov
jecxz
mov
ss
add
sub
loope
adc
add
out
mov
inc
aad
inc
sbb
jecxz
jp
mov
loope
and
mov
jnp
xor
out
call
push
xor
pop
imulb
and
add
aas
cwtl
mov
repz
jl
cmp
or
fbstp
dec
jecxz
movsl
mov
sbb
mov
iret
loop
mov
sub
sahf
les
scas
sti
add
mov
and
repz
subl
iret
fmul
add
push
decb
cmp
imull
sbb
imul
cld
jmp
or
inc
sub
adcb
add
push
add
out
push
aaa
rorl
cmp
out
cmpl
hlt
pop
jns
mov
push
push
cld
xchg
cld
mov
xchg
add
out
test
fwait
push
arpl
push
pop
or
sti
mov
add
jno
loop
sbb
or
adc
cmp
xchg
add
sub
nop
testb
gs
mov
jecxz
xchg
ljmp
dec
cltd
add
jmp
fwait
gs
jmp
add
lds
sub
rcl
add
std
jg
mov
sbb
loop
out
out
ret
add
xchg
ret
out
adc
jge
fidivrs
pop
mov
jno
xchg
div
enter
adc
out
mov
cmp
popf
hlt
jp
imul
add
add
jae
cltd
cli
adc
sub
nop
sub
and
push
push
pop
cmc
loope
mov
sub
dec
ret
clc
fisubs
lock
orl
les
cli
sti
in
xor
or
or
dec
loope
pusha
test
in
addb
mov
dec
add
sahf
call
sbb
cmp
mov
jns
nop
cmp
and
pusha
add
in
data16
push
inc
in
sub
cmpsb
cmp
sbb
pop
shr
cmc
fnstcw
mov
adc
xor
cmp
insb
faddl
ja
jno
jne
add
xor
repz
cli
call
adc
add
mov
add
es
or
xchg
push
jmp
popa
lret
ljmp
add
mov
repz
into
mov
push
mov
add
cmpl
dec
rclb
add
outsb
cld
out
lcall
or
jmp
dec
lods
cmp
sti
mov
out
cmp
add
sub
push
enter
add
fadd
rorb
addb
cmpsb
inc
lahf
pop
scas
out
xor
cs
dec
jp
lahf
idiv
and
add
andl
add
push
sbb
nop
mov
mov
add
sbb
add
je
cli
add
xchg
xchg
pop
add
adc
add
in
push
sub
fistps
mov
std
add
outsb
jge
cli
pop
mov
ss
xchg
das
in
outsl
mov
adc
jmp
hlt
add
sbb
jp
mov
jecxz
xchg
mov
xor
subb
stc
add
mov
repz
sub
sub
jge
scas
add
arpl
test
pop
add
orl
scas
sub
xchg
add
mov
cmp
sub
scas
xchg
xchg
pop
cmp
mov
dec
mov
test
ja
or
or
mov
test
lret
call
jecxz
insb
pop
or
add
cmc
pop
rorb
add
or
xor
add
mov
lods
add
mov
push
roll
cmp
ret
notb
cltd
test
and
mov
inc
fdivr
cmp
bound
or
seto
fldt
mov
mov
rclb
add
insb
int
cs
add
clc
sbb
pop
add
cld
mov
stos
mov
mov
hlt
mov
add
in
mov
stc
inc
add
rcll
fmuls
mov
insl
cmpsl
rclb
mov
aam
pop
imul
int3
popa
inc
xchg
and
fists
sarl
aam
cmpsl
cmp
mov
push
shl
out
shll
dec
dec
mov
inc
jp
fs
jo
add
mov
es
pusha
jecxz
mov
hlt
sbb
jnp
sbb
fs
sub
dec
push
jae
sahf
outsb
add
lods
push
xchg
mov
ret
hlt
cmp
fisubrs
pop
into
shrl
or
test
push
add
test
stos
pop
or
insb
mov
xchg
ret
inc
in
scas
sub
inc
test
lock
dec
mov
add
pop
or
add
push
mov
add
bound
ret
adc
mov
fdivrl
movsb
mov
xlat
stc
pop
sbb
xor
hlt
inc
add
add
shr
out
or
out
ficoms
inc
xor
cmp
mov
pop
cmpsb
jnp
add
in
adc
scas
ret
mov
xchg
jb
leave
adc
dec
mov
es
sbb
shll
add
push
push
mov
push
pop
add
mov
push
inc
jecxz
add
in
mov
or
loopne
jmp
mov
add
rorb
xor
scas
cmp
dec
out
adcl
inc
adc
in
mov
pop
cltd
mov
jb
sbb
push
sbb
fldl
and
ret
lret
in
cld
pop
pushf
jns
jno
push
sub
lcall
and
add
or
sbb
pop
add
pop
cli
outsl
adc
or
imul
mov
mov
jecxz
push
out
mov
cmp
mov
ret
or
mov
jecxz
pusha
popf
jbe
pop
std
xchg
stos
and
lret
aam
inc
mov
add
shrb
testb
dec
sarl
dec
aas
jge
ret
clc
sbb
out
icebp
add
cmpsb
add
hlt
inc
push
add
insl
mov
out
dec
jecxz
add
lcall
aas
pop
inc
cmp
mov
lcall
push
inc
jecxz
call
dec
xor
add
mov
ljmp
fcompl
rolb
mov
cmp
sub
adc
or
mov
lock
pop
add
notl
fildl
add
push
xor
inc
and
loope,pt
mov
inc
pop
mov
testb
dec
or
add
sar
mov
cltd
xchg
add
mov
call
test
dec
push
ja
in
and
lcall
xchg
inc
orb
jge
add
dec
xchg
scas
cmpsb
hlt
cmp
cwtl
add
pop
dec
cmp
jle
jge
popf
sbb
pop
int
push
add
popa
insb
sahf
gs
mov
add
lret
add
xor
mov
gs
fistpl
js
add
jecxz
push
add
jg
pusha
sbb
xor
cmp
das
mov
dec
push
insl
daa
call
sub
out
dec
fimuls
jl
add
xchg
adcl
hlt
xchg
pop
jnp
lods
mov
in
add
fsubrp
sub
enter
lds
mov
cmp
outsl
dec
adc
mov
mov
xor
std
adc
insl
bound
adc
pop
lea
push
and
stos
and
insl
fs
xor
dec
mov
lods
jo
scas
mov
in
and
add
nop
add
xor
sar
outsb
arpl
add
or
mov
add
push
adc
add
lock
iretw
add
and
cwtl
out
cld
dec
shrb
mov
add
dec
push
add
push
and
mov
loopne
sbbb
lock
ret
loop
sti
inc
add
add
sbb
xor
adc
sar
mov
rolb
jmp
xchg
div
and
pop
aaa
repnz
aam
xchg
mov
pop
xchg
xchg
add
idivl
push
dec
sahf
fwait
add
mov
ss
push
adc
jnp
dec
add
out
cld
addr16
add
add
ja
test
cld
mov
insl
sub
das
loope
pop
lds
mov
jmp
hlt
and
mov
and
fcompl
aam
cwtl
adc
adc
mov
pop
add
xor
inc
std
mov
add
addl
fsubrl
test
sbb
cmp
sub
jecxz
pop
test
add
xor
cmpsl
jl
dec
sbb
cmc
mov
test
sub
scas
clc
insl
add
fs
fsub
adc
ret
jmp
push
gs
cld
mov
add
mov
mov
or
in
and
mov
into
mov
popl
lods
leave
add
fcmovnu
cmpsl
adc
repnz
mov
loopne
jecxz
xlat
sub
jmp
inc
adc
aad
add
inc
jnp
pop
imulb
cmp
popa
movaps
add
ljmp
pushl
mov
sbb
pop
inc
dec
mov
dec
mov
hlt
push
test
and
mov
inc
es
fs
add
mov
push
jecxz
cli
mov
repz
stos
add
pop
xor
imul
adc
lahf
adc
pop
test
lock
fbld
jl
popl
in
mov
aam
sarb
and
push
xchg
repnz
scas
lods
imul
cld
fldt
jle
in
jnp
out
clc
out
add
xchg
jecxz
sbb
les
lcall
stc
add
cmp
repnz
xor
jge
inc
call
jns
push
add
xor
push
add
loop,pt
in
insb
fsubr
add
out
mov
mov
jae
sub
jl
out
push
sbb
sbbb
xlat
imul
les
js
mov
out
adc
loope
aas
and
das
out
dec
jge
inc
adc
inc
aad
outsb
roll
out
incb
cmp
add
ret
lock
and
cmp
dec
ret
into
fmuls
insl
mov
push
sub
add
lds
cmp
data16
dec
jb
push
cmpsl
iret
ja
jmp
pop
add
pop
or
bound
push
xchg
nop
sbb
add
cmp
fildl
adc
cld
orl
pop
add
rolb
loopne
inc
insb
fidivrs
inc
dec
jne
sbb
repnz
dec
test
ficoml
sbb
fnstsw
scas
cmpsl
jp
js
pop
roll
test
cmp
lods
or
decl
add
pop
test
adc
nop
enter
push
mov
punpckhbw
dec
cli
rorl
mov
es
out
in
orl
mov
inc
addl
push
in
mov
jp
cmp
sbb
xchg
inc
mov
add
mov
xor
hlt
cmc
pop
gs
loope
sub
sbb
sub
cmpsb
dec
and
ds
in
push
sbb
add
adc
add
je
jns
add
in
sahf
jmp
sub
pop
add
or
out
into
add
jo
hlt
enter
add
scas
mov
jae
jecxz
call
dec
inc
pop
or
add
rol
xchg
aaa
out
jecxz
es
push
mov
cmp
sar
idivl
cmc
mov
loop
inc
repz
or
les
sbb
nop
inc
cli
push
repz
sbb
loopne
into
push
inc
subl
clc
mov
mov
and
ja
pop
adc
push
add
jecxz
jmp
int3
jnp
fcmovnb
iret
jno
fmulp
xchg
ret
stos
cmc
lock
inc
sub
inc
add
shlb
adc
orl
xchg
ret
xor
and
loope
cmpsb
in
mov
push
mov
add
mov
xor
hlt
inc
sbb
loope
cmpsl
lds
clc
cmc
incl
shrl
sbb
cwtl
and
xchg
les
stos
andb
fcoml
push
je
xorb
inc
icebp
add
cmpb
jecxz
lcall
loope
js
adc
xchg
paddd
xchg
sbb
add
jg
fildl
gs
mov
movsl
cld
js
sbbb
outsl
dec
mov
jp
lcall
lahf
mov
cli
mov
add
or
adc
push
insl
adc
dec
add
add
ret
mov
dec
xorl
mov
pop
stos
jb
mov
test
add
outsl
imul
popaw
hlt
arpl
sub
jmp
sbb
shrl
cmp
add
fnstenv
sbb
or
add
adc
daa
lock
adc
lds
fiaddl
inc
jge
stc
and
hlt
dec
insl
adc
mov
jecxz
popf
cld
xchg
add
je
xor
mov
add
xchg
into
divb
incb
jmp
jle
ja
add
sbb
add
mov
add
and
lcall
cli
mov
dec
adcl
mov
add
into
sbb
mov
rolb
mov
adc
ljmp
add
call
insb
loopne
mov
lcall
and
aam
out
stos
fnsave
sbb
xor
call
fdivp
insl
inc
pop
add
addb
mov
ja
jecxz
cli
repz
mov
dec
dec
xor
bound
mov
lret
ret
push
cmp
in
add
xchg
pop
jno
cmp
adc
xchg
bt
add
sub
jmp
sbb
push
inc
mov
je
insl
std
ret
insl
bsf
stos
mov
pop
ret
add
std
aad
xchg
in
push
mov
les
stos
add
sub
stc
pop
jmp
add
ret
xchg
add
cmc
xchg
clc
add
pop
lods
add
mov
jecxz
aas
aaa
or
push
pop
mov
xor
add
add
or
mov
jmp
filds
cmpsl
jecxz
add
aam
sbb
loope
repz
into
roll
or
add
jecxz
fstpt
lock
movsb
stos
mov
inc
add
jnp
xchg
sbb
jne
pushl
adc
repnz
int
loop
add
xor
lret
mul
sahf
test
loop
dec
scas
jge
ret
popl
jecxz
dec
add
mov
dec
jbe
add
jecxz
adc
xchg
ret
dec
shll
outsl
inc
in
cld
dec
lods
cmp
xorb
daa
inc
jns
fiaddl
mov
loopne
into
inc
iret
inc
lret
inc
jecxz
sbb
cld
repnz
xor
fdivrp
jno
add
pop
into
mov
in
adc
or
mov
push
jb
cld
fldenv
call
ret
inc
or
sbb
outsb
sbb
add
add
sub
dec
xor
mov
xchg
push
add
mov
out
and
cmp
in
not
sar
incl
and
outsb
lock
popf
int
enter
aas
in
mov
loopne
jmp
movb
or
data16
rcll
inc
xor
je
ljmp
call
out
mov
inc
cmp
ja
jge
jno
jl
call
jp
addl
push
push
cmp
inc
adcl
add
jecxz
pop
push
adc
add
sbb
push
sbb
mov
rcll
sbb
jp
mov
xor
mov
jecxz
sbb
and
add
jno
out
push
push
and
hlt
rcrl
mov
xlat
or
loope
xchg
dec
dec
dec
and
or
push
xchg
jns
dec
inc
rolb
add
jnp
xor
int3
sbb
lock
fidivrl
sbb
pop
and
fdivrl
insb
mov
fildl
clc
in
repz
addr16
jne
das
movsb
or
stos
filds
gs
pop
xor
call
cmpl
dec
push
das
mov
or
mov
lock
addr16
dec
xor
mov
jp
inc
notb
add
sbb
sub
add
jg
adc
pop
inc
or
xchg
mov
fwait
mov
ljmp
and
call
cmp
cmp
clc
and
add
add
xor
stos
in
mov
push
xor
add
dec
loopne
addl
add
bound
add
repz
ljmp
jo
mov
cmp
xor
and
cmp
inc
jp
adc
xchg
nop
mov
xchg
inc
push
out
jnp
add
aaa
dec
in
call
lahf
push
mov
jp
scas
or
add
jge
xlat
push
roll
clc
not
addr16
mov
add
add
inc
cmp
add
scas
popa
dec
ficomps
rcrl
call
stos
enter
cli
outsl
popf
jb
lcall
std
and
push
mov
or
sub
ja
ret
int
jl
or
imul
cmc
test
cld
push
and
adc
xor
dec
adc
or
xchg
out
adc
xchg
subl
mov
mov
adc
add
in
jmp
fcoml
pop
mov
outsl
mov
add
arpl
xchg
cmp
cmp
add
jmp
hlt
add
shrl
push
mov
add
rclb
add
jo
test
cmp
xchg
adc
js
push
jmp
bnd
pop
add
lahf
xlat
mov
mov
into
mov
jns
adc
add
pop
add
in
lock
mov
xchg
mov
or
push
loopne
std
add
dec
aas
cmp
jae
mov
imul
xor
or
pop
adc
xchg
xchg
jb
repz
aam
xor
test
stc
add
hlt
lds
adc
and
notl
jno
mov
pop
adc
mov
arpl
dec
pop
mov
sahf
aam
add
xorl
push
out
dec
mov
lea
je
or
and
aas
pop
in
xchg
inc
bound
add
test
add
mov
jne
call
rcrb
enter
or
jg
fmuls
xor
mov
xchg
in
add
inc
jge
add
cmpsl
or
fisubs
push
lods
mov
jge
movsb
jo
aas
add
lret
fdivrl
in
xor
cmp
fyl2x
sbb
inc
sbb
xor
mov
shl
push
dec
test
add
jle
and
xchg
stos
lret
sbb
adc
nop
imul
mov
pop
enter
add
lret
loopne
dec
add
mov
add
daa
out
add
ds
mov
xorb
ljmp
cmpsb
sub
add
inc
inc
mov
adc
scas
add
mov
shr
test
sti
add
sahf
loop
inc
sub
add
ss
int
into
add
mov
ljmp
jo
inc
ret
add
sti
imul
mov
fwait
mov
jns
add
mov
js
rcll
pusha
add
jnp
push
aaa
add
xor
dec
ljmp
sarl
push
jecxz
pop
pop
mov
mov
bound
jne
or
pop
mov
add
lods
sub
lods
xor
add
cs
mov
iret
jmp
aas
jmp
mov
cmp
fldl
jle
xor
lock
cmpsb
add
cmp
mov
pop
mov
out
add
call
mov
jbe
jnp
mov
lock
jecxz
jmp
dec
adc
dec
aam
hlt
mov
aad
xor
shll
scas
jl
dec
mov
pop
into
or
cmp
stc
add
sbb
fldenv
lock
gs
add
aad
mov
pop
out
add
cmpl
inc
add
flds
dec
and
push
xchg
cli
outsb
enter
add
divl
imul
cmp
jge
dec
fsubl
and
mov
cmp
mov
mov
add
inc
in
inc
push
jb
inc
loope
mov
add
jl
and
pop
sbb
add
push
lcall
mov
inc
push
xchg
jecxz
inc
sbb
in
xchg
or
add
pop
scas
add
mov
mov
cltd
fucomip
ret
or
add
jle
pop
add
imul
notb
bts
je
ss
add
inc
mov
mov
mov
add
pop
push
pop
repnz
rorb
ror
ss
pop
addr16
outsb
lcall
cmp
and
jg
mov
xchg
repz
gs
mov
imul
loop
jae
call
inc
add
mov
push
or
out
roll
imull
aaa
and
int
jmp
addr16
xchg
mov
lret
push
add
clc
mov
jae
xchg
popf
enter
mov
push
xlat
cltd
adcb
lahf
xchg
dec
loope
adc
outsl
xor
mov
add
or
pop
or
shll
rcll
inc
fwait
pop
inc
and
xor
push
xor
add
xchg
pop
rorl
cmp
sbb
pop
mov
iret
mov
pop
or
and
inc
ret
je
push
jle
aaa
and
scas
test
hlt
add
xchg
xchg
mov
rcr
and
xchg
cmp
push
push
ja
mov
and
int
std
ljmp
stos
sub
or
movsb
xlat
mov
in
push
or
fdiv
sub
jo
mov
push
add
leave
push
xchg
and
add
xor
xchg
jnp
loopne
mov
fsubrl
movl
push
jae
add
int3
je
lret
icebp
rorb
and
testl
push
nop
out
sub
subl
mov
ret
push
out
mov
cwtl
or
ret
mov
push
dec
mov
mull
cs
inc
ret
inc
clc
xor
aas
lcall
sub
test
jl
popf
lods
call
cmp
mov
add
imull
fndisi(8087
sub
hlt
stos
test
mov
mov
lods
push
testl
pushl
xchg
jp
mov
mov
jne
jb
cli
cmp
and
sub
mov
pop
jle
dec
test
inc
mov
stc
mov
add
push
pop
aam
push
inc
jl
repz
push
xchg
add
fidivl
fnstsw
fs
cltd
fmull
out
test
inc
mov
mov
jns
negb
xchg
add
shlb
xchg
sub
loope
movsb
jecxz
pop
cmp
cmp
test
insb
add
clc
jb
shll
jge
mov
jp
or
xor
shll
scas
fcmovu
add
out
imul
add
clc
jecxz
cmp
xchg
xor
fisubrl
pop
or
in
sbb
loop
mov
or
in
mov
in
lahf
repz
lods
add
cmpsl
js
jle
sbb
or
or
cmp
test
addb
adc
xlat
fiaddl
add
insl
mov
sub
mov
jo
and
stos
fldl
add
lea
scas
out
ljmp
movsl
and
lret
in
clc
jmp
lock
add
mov
add
mov
shlb
fdivs
cli
bound
pop
in
out
dec
jmp
xor
push
cld
pop
xlat
pusha
dec
jmp
jno
or
sar
loope
push
cltd
aam
xor
mov
insb
lahf
mov
add
mov
bound
or
mov
dec
aaa
pop
push
mov
lea
mov
add
sbb
cli
in
jns
stos
faddl
std
stos
aas
ficomps
xchg
roll
icebp
cltd
push
cwtl
sbb
ret
xchg
xor
ljmp
dec
call
mov
inc
cld
outsl
jecxz
and
adc
add
lret
push
jecxz
pop
bound
aam
mov
and
push
loope
sub
cli
sahf
call
incl
into
xor
loope
add
mov
lcall
repz
mov
push
and
add
mov
pop
add
sub
inc
mov
ds
add
jno
fistpl
into
out
dec
jl
add
out
mov
popf
push
mov
jp
int3
cmp
loopne
mov
jg
out
es
mov
push
add
mov
sbbb
sbbl
xchg
add
fldl
fadds
add
ds
lods
in
pop
mov
add
xchg
xchg
sbb
jge,pn
test
hlt
enter
add
xchg
or
add
sbb
into
inc
popa
stc
jno
shl
add
push
movsl
scas
fcmovnu
jnp
or
arpl
cli
rcrb
jp
hlt
test
sbb
loope
popf
pop
pop
cld
adc
mov
sbbl
cltd
pop
arpl
das
inc
out
cs
mov
roll
mov
out
loop
jno
mov
jbe
repnz
and
dec
and
aam
add
add
ljmp
ss
ror
inc
cmp
pop
mov
add
sbb
daa
ret
cltd
rolb
mov
test
ret
pop
jo
add
pop
out
in
mov
jg
test
add
sbb
or
and
xchg
out
and
fists
lahf
in
adcb
and
adc
int3
rcrl
sbb
sbb
sub
gs
add
inc
push
lods
or
dec
or
mov
daa
lea
lret
pushf
or
movl
mov
daa
mov
add
pop
jl
add
push
cmp
lahf
or
push
mov
stos
jne
jbe
add
imul
inc
mov
mov
mov
das
rolb
pop
and
ficoms
shll
push
cmp
mov
ss
add
push
jne
cmp
mov
add
out
push
int3
andl
test
mov
imul
jl
shl
add
push
xchg
movsb
jne
out
add
dec
dec
xor
pop
cld
bound
adc
push
mov
adc
lcall
out
mov
add
xlat
pushf
fucom
mov
xor
rcrl
mov
add
pop
lea
xlat
out
jmp
jmp
outsl
fiaddl
loop
jns
xor
into
rolb
sub
xor
scas
and
or
jmp
sbb
hlt
bnd
fsubl
add
dec
cli
and
cwtl
test
repz
xchg
push
dec
add
add
mov
push
mov
cmp
dec
sub
jns
sti
rorl
push
add
test
lcall
pop
inc
inc
inc
adc
add
addr16
movsb
add
hlt
cwtl
stos
push
sahf
sbb
add
and
decl
shlb
out
xor
inc
int3
cmpsl
add
into
xchg
jb
incb
cmp
dec
cld
dec
ja
add
dec
mov
mov
add
add
xchg
in
lock
adc
hlt
pop
daa
add
push
ret
mov
jecxz
add
jp
jno
scas
lea
repnz
push
adc
push
pop
test
das
mov
adc
add
mov
push
adc
add
xorb
mov
into
add
loop
lds
in
out
fdivrl
subl
dec
mov
hlt
jge
cli
fs
ror
inc
in
xor
sub
mov
pop
mov
inc
test
jge
enter
fmull
add
fs
xor
jns
pop
add
or
add
pop
dec
lods
add
mov
insb
das
add
adc
inc
mov
je
add
push
push
xor
mov
divl
cli
imul
and
lds
jecxz
divb
inc
stos
shlb
xor
jbe
insb
adc
cwtl
les
push
cmp
sbb
hlt
xchg
ds
aad
dec
xor
sbb
popa
mov
and
fwait
dec
test
pop
fcmovne
inc
xor
xchg
test
or
xchg
add
and
rcrb
in
adc
sbb
jecxz
decl
push
cld
fsub
in
jo
cmc
imul
test
jno
jp
add
hlt
movsb
xor
dec
sbb
jmp
push
pop
shlb
push
jge
jo
mov
add
xor
jl
ljmp
lahf
cmp
add
jne
sub
std
cli
jo
int3
add
insl
push
repnz
jecxz
xchg
idivb
adc
push
hlt
sahf
ffreep
addr16
mov
pop
divb
sti
int
add
decb
jnp
or
repz
cld
push
movb
int3
addb
xchg
xchg
lock
add
pop
pop
add
clc
jp
inc
scas
add
andl
mov
jbe
bound
xchg
pop
push
in
adc
rcr
rcrb
add
jecxz
movsl
mov
lahf
test
mov
mov
xor
cmp
cltd
jns
adc
outsb
addr16
fldcw
inc
jno
testb
cmpl
inc
fdiv
xchg
inc
cmpsl
or
xor
int3
test
pushf
ds
jnp
rcll
aas
and
loop
mov
xchg
imulb
shll
or
fildll
jmp
fildl
mov
scas
movsl
xor
xchg
mov
stc
ja
xlat
push
cmpl
scas
loopne
outsl
add
mov
add
mov
dec
push
sahf
cmpsb
adc
fnsave
add
xchg
sub
pop
lods
jo
mov
mov
loop
lds
xchg
add
push
jbe
xchg
cmp
mov
ret
js
enter
lds
jecxz
xor
adc
add
adc
sbb
out
sti
push
mov
xchg
inc
and
shr
dec
add
xchg
mov
lods
scas
js
push
adc
test
movsb
jnp
push
mov
imul
sbbb
and
mov
jecxz
testl
jno
cltd
ljmp
aas
add
pop
or
aad
sub
jge
sbb
arpl
xor
push
cmp
fimull
ljmp
mov
jne,pn
add
pop
test
ja
mov
rcl
ret
enter
add
arpl
jnp
mov
and
addl
out
add
test
hlt
filds
in
add
mov
pop
xchg
cli
fmull
cmp
and
sar
inc
and
xchg
insb
jge
mov
loopne
mov
add
cwtl
sbb
stos
aad
in
ret
loope
add
pop
sbb
add
mov
inc
adc
and
mov
jo
cmp
cmpsl
leave
jne
rol
mov
invlpg
push
clc
fs
adcl
cld
push
xchg
test
adc
pop
push
add
xchg
loop
inc
jo
add
out
arpl
jnp
jns
xchg
test
call
add
mov
roll
outsb
imul
in
cld
pop
cmp
andl
mov
ljmp
jg
addr16
xor
mov
jae
mov
iret
lret
das
sbb
jge
pusha
cmc
cld
cmp
bound
addb
push
nop
cmpsb
imul
decb
test
in
mov
lock
fsts
add
pop
jbe
test
or
add
leave
dec
ret
stos
lods
pop
mov
add
jno
int
js
out
mov
xchg
xchg
sbb
and
jo
insl
call
cld
fsts
roll
int
inc
cmp
test
xor
imul
mov
add
add
add
out
push
adc
notl
add
mov
xor
fcompl
aas
sbb
or
push
push
stos
mov
add
test
repz
xor
cmp
xor
incl
out
inc
fsubs
adcb
jno
mov
shlb
jmp
mov
mov
out
add
pop
fninit
ss
push
add
out
loope,pt
pop
cmp
out
xchg
sahf
pop
inc
pop
fiaddl
add
test
xchg
loope
xchg
add
mov
add
cmp
lcall
jge
in
adc
add
outsl
cwtl
mov
add
cmp
sbb
add
mov
jmp
dec
jns
add
dec
pushf
push
stos
push
add
imul
out
jo
repz
adc
int3
arpl
jp
outsb
jns
cmp
leave
fstpt
xchg
inc
cmpsl
imull
in
add
mov
mov
ss
pop
add
lods
push
aam
shrl
dec
cmp
add
outsl
into
out
add
ds
pop
sub
xchg
ret
adc
push
cmpsl
add
cs
cmpb
add
test
sub
xor
cld
mov
dec
mov
fiaddl
inc
into
xchg
outsb
cmp
lea
adc
xor
enter
addr16
addb
sti
cld
loopne
cmpsl
lret
and
mov
pop
out
sti
fidivl
sbb
shll
out
xchg
cltd
mov
mov
cmp
out
cmpsl
or
pop
push
inc
cmp
jns
out
mov
pop
adc
jno
push
fsubl
je
dec
hlt
cmp
adc
icebp
xor
cli
lods
cmp
sub
out
add
mov
add
jne
je
jnp
cmp
mov
ret
cmp
dec
push
mov
xor
mov
out
jns
dec
ljmp
shlb
ficoms
lea
ret
negb
shlb
add
insb
xor
jb
xchg
lret
push
scas
movsb
add
hlt
xor
and
xchg
add
imull
mov
aas
sbb
pushl
pop
arpl
jbe
push
scas
outsl
mov
cmpsb
add
cli
xor
xor
jbe
cld
xchg
xchg
les
jae
add
divl
push
sti
jp
push
cld
jno
and
rcll
out
in
insb
adcl
aas
test
mov
sti
cmp
or
and
lds
mov
or
hlt
out
sub
popf
testl
and
test
jns
push
and
add
push
inc
dec
movsl
cld
pusha
ljmp
fwait
sahf
test
outsl
add
xor
in
call
ds
mov
mov
popl
jo
dec
dec
pop
jmp
sbb
cwtl
push
rcll
jns
jns
mov
jl
sahf
mov
cmp
adc
fstp
jo
loope
add
shrb
adc
mov
cmp
adc
pushl
xchg
mov
jb
shr
hlt
inc
jmp
test
or
in
mov
xchg
mov
xchg
and
xchg
aaa
pop
xchg
ss
scas
out
mov
push
mov
add
pop
push
je
mov
jae
push
push
inc
push
and
or
jnp
fwait
and
dec
add
pop
sub
adc
arpl
xchg
jge
lret
in
aaa
pop
pop
adc
lock
mov
push
mov
adc
jp
jl
std
repz
adc
in
lock
xchg
push
cmp
in
jne
lcall
add
and
imul
arpl
out
cltd
cli
cmp
sbb
mov
out
outsl
push
xor
clc
fisubrs
or
sti
les
jg
add
je
pop
popf
orb
cld
cld
mov
icebp
loop
dec
add
lock
aas
clc
mov
sub
and
jns
pushl
data16
mov
and
jae
cmp
adc
test
add
js
aam
and
clc
pop
pop
cmp
add
push
add
lea
add
int3
lods
ja
xor
inc
repz
pushf
stos
clc
movsb
jb
cld
imul
enter
sbbb
sub
adc
movl
out
in
add
jno
hlt
lds
repnz
add
push
jo
add
stos
dec
popf
add
or
add
mov
or
inc
flds
lcall
arpl
loopne
hlt
out
pushf
inc
scas
add
cmpsl
pushl
jmp
shll
and
sbb
xor
fistpl
addr16
or
sahf
int3
daa
mov
les
cmpsl
push
std
mov
inc
inc
test
hlt
jge
mov
adcb
mov
enter
add
sbb
out
push
inc
mov
pop
ret
jl
shll
and
fs
add
push
repz
test
add
pop
mov
jnp
in
pop
popa
je
add
cmc
push
addr16
or
jl
mov
inc
fcoms
je
cmp
out
add
fcmovbe
aad
cmpsl
push
std
jno
inc
into
cltd
loope
repz
pop
sarl
test
mov
cmp
sbb
sbb
xchg
or
insb
inc
cmp
xchg
xchg
jmp
mov
call
push
add
cmp
jns
out
mov
jg
add
add
jo
aad
ds
mov
dec
call
ret
sti
rcrb
subl
push
jae
mov
fsubrl
fwait
xchg
cmpsl
or
out
ret
sti
loope
or
mov
mov
outsb
mov
mov
push
jno
clc
sbb
into
jg
in
and
or
lret
cmp
sbb
add
cltd
jno
addb
insb
add
mov
cmp
push
dec
push
xor
cmpsl
inc
pop
sarb
or
push
mov
jae
sub
or
sbb
mov
adc
add
cltd
mov
in
out
stc
loope
jmp
out
in
and
add
add
add
out
jmp
in
sub
push
aas
mov
movsl
hlt
mov
call
rclb
xor
cmp
fwait
push
jle
lret
mov
xlat
and
mov
adc
xchg
sub
mov
popl
lock
out
dec
xchg
jae
mov
jle
stos
lret
xchg
push
sbb
dec
add
jge
add
dec
out
dec
repnz
aam
lret
add
push
mov
decb
addb
test
add
sub
xor
fs
cmpb
scas
sbb
out
scas
jne
xchg
xchg
hlt
dec
mov
sub
jg
es
loope
and
in
data16
ret
or
push
xor
mov
jle
mov
ret
add
sbb
scas
cli
testl
add
aam
pop
cmpsb
add
out
add
stos
js
xchg
mov
add
push
lea
push
lods
lret
xor
add
add
je
pop
dec
imul
mov
cmp
adc
jmp
loope
or
fstl
ja
pushf
push
ljmp
test
add
mov
cld
mov
push
ds
stc
jno
mov
fnsave
loope
mov
jbe
push
ret
js
movsb
add
lock
pop
fdiv
and
in
pusha
ret
mov
ja
ffreep
xor
mov
outsl
sub
add
into
cwtl
jle
popf
mov
insb
push
adc
out
pusha
test
push
xor
stos
mov
dec
cli
test
mov
scas
mov
mov
or
xchg
repz
pop
mov
jbe
add
imul
xchg
xorb
repz
sub
out
mov
xchg
fists
xchg
leave
cs
push
aas
cld
sub
outsb
add
hlt
imul
mov
cld
ret
push
mov
inc
nop
lea
into
hlt
test
mov
aaa
arpl
lret
jb
jle
ror
ss
push
add
js
ficoms
xchg
cwtl
cltd
add
mov
inc
add
jb
test
add
cs
add
add
mov
pop
lret
mov
leave
hlt
and
xor
sti
pop
call
ret
fsubl
clc
add
add
cld
iret
sub
dec
sbb
hlt
ret
push
sbb
mov
das
mov
xor
lods
movsl
or
add
mov
sbb
clc
add
lods
push
enter
rcll
and
adc
push
sub
xor
push
shlb
xorl
mov
xor
jmp
out
inc
cmpsb
jecxz
inc
cwtl
xchg
in
mov
in
loopne
mov
lret
bound
add
sahf
lcall
test
loopne
inc
out
xor
les
push
fildl
xlat
add
pop
shlb
repnz
add
sar
pop
rorb
shll
push
add
into
dec
mov
add
xchg
cmp
aas
push
or
popa
dec
cmc
popf
add
mov
lock
mov
push
add
add
mov
repz
jne
mov
fildl
lds
imul
ficompl
shlb
push
out
das
aad
ret
popa
add
pop
clc
lds
mov
movsl
lock
add
pop
cmp
fxch
adc
mov
mov
lods
shl
mov
pop
fists
cltd
cli
mov
sbbl
out
inc
les
lods
inc
ret
fsubrl
and
fwait
push
dec
and
or
inc
jb
int3
and
in
in
gs
sbb
loop
aaa
cwtl
jae
mov
flds
mov
lahf
xchg
scas
out
clc
in
filds
push
call
hlt
sahf
jns
xor
test
jb
inc
loope
mov
hlt
add
shrb
pop
xlat
or
inc
xchg
in
fnsave
call
xor
imul
cmp
inc
shll
cmp
jne
xor
movsl
inc
inc
add
xchg
cmp
cld
stos
repnz
pop
xor
adc
add
arpl
dec
inc
dec
aad
add
or
out
push
xor
add
sbb
shrb
scas
add
add
xlat
dec
hlt
sub
or
push
lods
sub
cmpsb
cmc
flds
sub
fdivr
clc
cmp
ja
test
adc
lcall
xchg
xchg
jno
dec
mov
jmp
jp
int3
shrl
mov
add
and
dec
sub
mov
sahf
add
add
push
stos
idiv
dec
out
aas
fdivr
mov
repnz
sub
pushl
mov
xlat
scas
xor
aaa
mov
adc
cli
stc
pusha
mov
outsl
mov
mov
and
test
adc
cmp
ljmp
cld
or
mov
add
fsubrs
popa
movsb
jle
add
nop
lods
push
push
add
sti
rcll
add
cli
add
cli
xchg
inc
mov
test
insl
lock
enter
loope
icebp
in
pop
sti
int
mov
add
or
enter
and
dec
mov
jno
frndint
mulb
dec
dec
xchg
js
lods
mov
push
jbe
cwtl
add
addr16
in
orl
stos
push
inc
pop
mov
cld
lds
pop
xlat
jno
push
int
es
loop
loope
push
xchg
addr16
loope
stc
xor
iret
or
loopne
mov
jge
hlt
pop
xchg
mov
loope
jmp
push
add
ja
add
cmpsl
inc
add
loopne
cmc
dec
push
pop
mov
mov
sbb
add
add
mov
in
popl
dec
cmc
cmp
inc
mov
add
in
addb
gs
and
pop
cmp
xor
pop
and
cmp
hlt
call
adc
popa
mov
xor
mov
adc
imul
cmpsb
dec
daa
rcr
hlt
fsubrl
std
add
jp
in
lea
rcll
lret
mov
add
jmp
mov
mov
jns
fs
ret
mov
outsb
push
cmp
jp
cmp
mov
cmpsb
jbe
smsw
in
mov
outsb
mov
flds
add
jp
add
cmpsl
outsl
mov
push
test
out
scas
cltd
addl
lock
das
jp
lcall
sub
mov
mul
push
push
add
add
pushf
xlat
stos
dec
pop
inc
clc
pop
addl
addr16
push
add
aas
imul
out
mov
ss
into
imul
dec
leave
jbe
mov
add
mulb
jno
mov
xlat
adc
sbb
and
lock
into
add
xor
pop
nop
lock
es
fstps
pop
jl
mov
incl
mov
cmc
aam
pushf
or
testl
hlt
mov
icebp
mov
in
xrelease
das
scas
imul
stos
cmpsl
cld
xlat
ljmp
add
add
test
add
arpl
std
movsb
loope
shll
cld
pop
repz
icebp
inc
or
mov
mov
insb
mov
sub
in
add
ret
cltd
mov
and
pushl
jp
cmpsl
hlt
mov
jae
loope
xor
in
cmpb
push
fmull
adc
add
adc
jnp
pop
addb
inc
jle
cmpsb
mov
and
adc
xchg
mov
lret
add
cli
test
inc
sarl
inc
add
fs
xorl
inc
divb
shl
rorb
and
add
cs
int
mov
out
orl
fwait
leave
sbb
roll
jnp
int3
xchg
push
mov
lcall
add
push
loope
sub
cli
or
mov
int
daa
add
hlt
push
push
out
call
inc
cmp
add
or
add
sub
imul
add
in
cmp
push
mov
cmpsl
lds
xchg
clc
test
jns
inc
inc
pop
add
inc
cmpl
out
inc
mov
xchg
ljmp
frstor
or
push
add
jnp
insl
divl
pop
push
insb
add
adc
int
xchg
roll
mov
push
or
pop
inc
push
inc
add
sub
lret
push
test
jb
testb
jle
xor
and
adc
add
loope
ja
pushf
in
lret
mov
scas
mov
fs
cmp
xor
bound
add
cltd
hlt
jnp
pop
ss
dec
std
aam
sahf
xorl
mov
out
ljmp
outsl
inc
cs
gs
in
movlps
or
pop
dec
loope
inc
popa
inc
roll
incl
mov
jno
lret
pop
push
roll
sahf
icebp
inc
out
inc
push
inc
mov
jno
mov
addl
imul
cld
push
xchg
outsb
int3
sbb
popf
sahf
push
add
jnp
aam
mov
aad
cs
adc
sahf
add
dec
sbb
insb
xchg
add
jmp
cmc
mov
jns
fsubr
add
mov
sub
adc
xor
hlt
fcom
cmc
sti
cli
loop
pop
filds
dec
ret
cmpsl
add
inc
aaa
scas
cmp
mov
or
jmp
push
popa
adc
xchg
sbb
add
out
inc
call
mov
and
jb
aad
subl
adc
mov
add
dec
push
add
mov
adc
add
daa
sbb
stos
mov
aam
inc
outsl
out
mov
and
add
jle
ret
in
data16
add
xor
mov
sarl
cld
mov
add
ffreep
jns
orl
mov
mov
mov
add
pop
sti
mov
add
loope
or
push
rcrl
add
cmpsl
push
orl
inc
inc
mov
rolb
push
adc
jbe
xchg
clc
sahf
pushl
icebp
xchg
dec
dec
cwtl
mov
ja
inc
xor
repnz
or
push
adc
scas
lods
or
ret
xchg
adc
and
loope
add
push
outsb
pop
add
ret
jmp
jmp
sub
cmpsb
mov
cld
bound
mov
aad
lods
adc
imul
push
xchg
in
xor
shr
sbb
imul
or
lods
sbb
js
and
and
jge
fcmovnu
es
mov
jmp
hlt
push
lds
cwtl
cmpsb
repnz
pop
test
dec
jl
mov
ja
mov
lcall
mov
xor
decl
jge
xchg
jg
push
and
out
xor
les
sbb
xor
shl
negl
xor
sbb
aam
and
jne
ja
hlt
jecxz
and
pop
addr16
jnp
xlat
add
push
call
cmp
jno
aad
adc
lret
loop
cmpsl
out
jmp
inc
add
push
jns
lock
repz
filds
out
mov
jae
sub
in
add
cwtl
pop
jge
xchg
mov
shll
out
and
bound
jae
or
push
add
adc
out
add
xchg
mov
mov
mov
call
or
push
xor
xchg
cmpl
stos
sar
ret
or
push
or
out
mov
mov
lret
in
cld
sub
cmp
jnp
push
pop
add
jp
pop
fdivl
data16
hlt
in
xchg
and
xor
adc
add
insb
or
out
mov
add
negb
and
pop
mov
popf
push
loop
add
repnz
sub
jb
jge
xlat
movsl
jle
fwait
ret
mov
xor
jmp
inc
jb
cmp
das
mov
jecxz
movnti
mov
in
adc
jmp
add
cmp
pop
and
push
fdivrs
or
lcallw
lcall
pushf
add
pusha
cld
xchg
pop
mov
pop
bound
or
inc
rcl
hlt
mov
mov
and
mov
aad
xchg
andb
add
imul
subl
inc
jecxz
mov
pop
shll
add
pop
sbb
add
je
lock
fildl
ret
adc
dec
data16
xchg
test
outsb
fnstsw
pushf
fdivs
out
or
std
xchg
jle
add
sbb
pop
jp
mov
xchg
out
adc
pop
out
jmp
push
movsb
push
add
lock
dec
loope
add
or
ret
shll
iret
fidivl
jne
hlt
je
incb
jecxz
add
push
xor
xor
add
sbb
sbb
adcl
loope
mov
mov
jecxz
cmp
pop
add
int3
jne
fisubs
jnp
inc
pop
addl
push
lahf
ja
in
cli
lret
je
cld
pop
push
add
add
mov
adc
sbb
add
test
xlat
jmp
jne
cmp
aas
lahf
sbbl
xor
jecxz
iret
lcall
fstpl
adc
add
ljmp
mov
pushf
pop
mov
hlt
add
into
aam
jle
pop
sti
add
push
mov
xchg
mov
cmp
cmpsl
add
jae
jmp
ja
jg
cltd
xchg
cmp
mov
out
push
jae
add
fisubrl
add
cmc
incb
inc
sub
mov
cmp
jecxz
and
lcall
fstpl
out
mov
ret
jg
add
add
hlt
insb
jbe
popf
loope
add
push
sub
mov
fcmovb
add
cld
pop
add
leave
jmp
dec
and
or
add
xor
outsb
jmp
adc
scas
and
xchg
lret
aad
jns
push
roll
cli
mov
testb
sbb
xchg
stos
ljmp
adc
addb
push
xor
add
ljmp
add
sbb
add
lods
popa
dec
fwait
call
out
pop
mov
subl
popa
mov
dec
and
mov
inc
subb
pop
rcrl
xor
jmp
inc
push
jecxz
sbb
pop
sahf
cmp
movsl
repz
and
loop
mov
popa
jo
or
jbe
repz
inc
add
push
inc
loop
outsl
pop
lret
loope
add
mov
mov
popa
aam
xchg
sub
mov
xlat
scas
add
cwtl
push
add
lods
adc
add
xor
mov
jae
mov
add
push
ret
add
mov
jno
cld
fisubl
movsl
fwait
add
repz
jl
sbb
adc
pop
test
into
add
mov
xchg
fiaddl
loop
scas
fbld
ljmp
imulb
aam
xchg
mov
or
xlat
push
push
push
push
jae
add
add
jnp
jecxz
xchg
dec
xor
adc
je
or
cmp
movsl
push
jecxz
jle
mov
call
push
add
stos
hlt
pop
mov
push
filds
divb
jl
mov
aam
in
add
mov
hlt
sbb
xchg
xor
fisubl
and
ftst
pop
cltd
pop
test
xchg
or
pop
ja
dec
andl
sbb
add
data16
loope
cmp
fmuls
cld
repz
outsl
add
cmp
mov
ja
sahf
push
mov
std
movsl
shl
add
xor
jno
add
adc
mov
inc
jecxz
and
dec
nop
mov
out
pusha
add
push
je
fbstp
mov
shl
ss
inc
add
mov
int3
neg
lret
call
test
subb
add
scas
jnp
push
xchg
add
and
fsub
inc
repnz
sbb
mov
sbb
cmpsl
adc
add
pop
lret
ja
loope
add
add
std
pop
mov
icebp
sbb
jb
jmp
movsl
mov
mov
cmpsb
adc
lea
mov
cmp
jo
repnz
mov
add
lret
clc
test
nop
lock
adc
dec
leave
add
xchg
pop
repz
in
popf
cld
xchg
ss
in
ret
and
xchg
insl
push
add
mov
add
adc
rcll
add
add
ret
add
jg
ljmp
inc
negb
dec
js
jne
mov
fstps
test
lret
push
and
sub
xchg
data16
aam
mov
pop
pop
add
cld
hlt
subb
mov
pop
int3
fucomip
subb
iret
cs
out
xor
mov
mov
cmp
stc
dec
lahf
aas
movsb
jno,pn
pop
cld
imulb
je
push
insl
iret
test
lods
fwait
sti
mov
out
imul
inc
ret
adc
push
push
sbb
add
add
in
shl
ja
int
call
std
adcl
mov
jb
sub
xchg
stos
add
repz
lcall
adc
jecxz
push
mov
xor
loope
jo
addr16
jno
mov
cltd
pop
inc
push
cld
push
test
dec
jno
daa
adc
loopne
mov
add
in
out
lret
out
mov
ljmp
add
mov
pushf
add
or
mov
xchg
xlat
inc
or
and
in
push
ret
xor
mov
out
mov
pop
mov
mull
shlb
testb
test
push
xchg
lahf
cld
and
mov
in
mov
xchg
push
inc
repz
adc
insb
sbb
stos
add
lods
dec
les
movsl
add
add
mov
fwait
movb
push
add
enter
in
jp
pushl
daa
add
push
sbb
adc
test
mov
jmp
rcrb
pop
xor
fs
shl
in
add
ret
adc
mov
jo
mov
mov
popa
add
jl
add
andb
add
stos
jmp
fldenv
movsl
inc
aad
xchg
pop
sbb
stos
test
jecxz
dec
loop
mov
cs
jp
jo
cli
adcl
imul
das
xchg
adc
and
and
jecxz
sbb
cmpsb
and
fdivl
xchg
ss
xchg
jmp
jl
imul
sti
cmp
sub
inc
test
add
sbb
stc
mov
add
repz
test
pop
fwait
mov
and
cwtl
or
add
push
mov
pushf
add
sub
loope
or
xor
jmp
mov
rolb
scas
push
add
inc
movsb
ret
cli
add
andl
hlt
jl
fcmovb
jecxz
mov
and
sub
addb
cmp
cld
ret
mov
inc
push
push
repz
je
xlat
sub
cld
incb
ret
mov
inc
jecxz
hlt
cmp
loope
pop
mov
add
push
int
shrb
and
and
lcall
sub
xor
pop
pop
mov
fidivl
mov
pop
fildll
bound
and
cmc
cmp
mov
sbbb
inc
xchg
push
inc
call
or
test
out
xchg
rcr
ds
mov
add
or
adc
mov
jg
cmp
sbbb
hlt
ret
add
ljmp
add
cmp
roll
adcl
outsl
test
push
add
clc
xor
mov
jecxz
stos
cmp
push
and
push
dec
inc
hlt
sub
mov
and
mov
jnp
inc
push
add
mov
sahf
push
inc
mov
lahf
adc
or
loop
jecxz
xor
lea
into
jne
inc
cld
mov
in
out
mul
push
xlat
xor
movsb
pop
mov
into
jmp
xchg
sbb
inc
push
in
orl
out
rcll
orb
je
jnp
xchg
add
push
sub
test
cld
or
hlt
fwait
das
test
push
xor
pusha
stos
xor
jecxz
cmpb
cmp
idiv
mov
fstpt
jg
cltd
dec
mov
inc
imul
fldl
pop
mov
movsl
mull
mov
out
mov
in
cs
jecxz
xor
pop
sti
cmpsb
mov
xchg
inc
fldl
and
xchg
add
fistl
xor
pop
jo
in
jno
cmp
add
fs
enter
aaa
add
arpl
xchg
jecxz
sbb
addr16
cmpsl
hlt
inc
add
shll
mov
xchg
out
sbb
mov
push
inc
adc
mov
sbb
ljmp
lahf
xlat
jecxz
mov
pop
inc
aas
sarb
stc
repnz
cmpl
hlt
lea
add
cwtl
push
je
jae
add
and
lds
ljmp
add
xorb
mov
jecxz
and
inc
push
xchg
cmpb
cli
test
cmpsb
cld
icebp
mov
lods
int3
xor
dec
or
pop
imul
or
cld
lods
adc
cmp
jnp
vpavgw
fbstp
cmp
je
addb
clc
xor
sbbl
inc
add
sarb
cmc
pop
bound
xchg
fcmovne
loopne
adc
das
adc
orl
inc
add
xchg
jecxz
mov
sub
clc
mov
loopne
data16
cmp
mov
and
cmp
cmpsl
test
aaa
insb
jl
add
push
jecxz
hlt
sbb
arpl
mov
mov
push
lahf
cmp
je
add
test
add
cmp
enter
jecxz
xchg
jle
inc
xchg
shrb
add
inc
jnp
xchg
jne
clc
mov
push
imul
cmpl
cwtl
sub
test
jl
ffree
sub
ja
imul
imul
sub
jecxz
pop
xchg
ffreep
add
xchg
aaa
add
leave
push
cmp
cmp
test
jae
lods
jge
add
test
xor
call
add
adc
xor
adc
leave
sub
pop
jae
add
xor
sbb
mov
sarl
mov
aad
and
dec
jno
mov
jae
repnz
shl
jne
cmp
daa
in
mov
add
jmp
loope
pop
sbb
lahf
adc
daa
out
repz
clc
xchg
ljmp
in
xor
add
ud2
sbb
ljmp
mov
sbb
ret
inc
jecxz
sbb
addl
in
out
jbe
and
add
adc
xchg
push
mov
add
jp
sbb
ret
cmp
stos
sbb
in
lret
ljmp
cli
xchg
inc
incl
jne
ret
jae
mov
pop
out
dec
adc
movsb
xorb
xchg
lds
aaa
das
in
repz
adc
jge
cli
cmp
cld
push
loopne
lret
je
mov
out
sbbl
add
mov
aaa
mov
add
cli
mov
mov
mov
dec
jecxz
or
daa
in
mov
jmp
sti
xchg
jp
add
ret
movsb
add
mov
add
push
test
incb
sbb
mov
or
dec
das
shll
ljmp
inc
les
xorl
cli
or
imul
pop
inc
pop
ret
stos
addr16
rolb
daa
gs
lea
jns
push
lods
push
lods
cmpsb
cltd
sarb
orl
es
stos
jl
ss
add
sub
or
mov
in
cmp
dec
jmp
add
leave
roll
mov
xor
jnp
xchg
lcall
cli
inc
adc
add
inc
imul
in
testb
mov
fs
xor
sbb
mov
nop
out
jp
or
popa
add
fsub
cld
mov
xchg
mov
add
mov
add
pop
or
adc
aas
jne
orl
cwtl
or
lea
or
add
and
xchg
in
jp
push
xchg
fstps
leave
mov
lock
cmp
pop
pop
gs
add
cmp
loopne
insb
cmp
popa
add
call
in
add
push
fildl
paddsw
add
shl
push
sarl
push
jle
adc
daa
imul
xchg
sbb
mov
std
jmp
xor
cmp
int
mov
jle
cwtl
add
inc
xchg
fidivrl
and
cld
push
nop
repnz
stos
ds
ret
into
or
mov
mov
cmp
push
adc
mov
jmp
sbb
pop
and
out
pop
adc
andb
jno
ss
pop
push
pop
add
and
or
jmp
cli
and
jg
mov
jg
arpl
sbb
pop
and
inc
loopne
popf
add
jns
sbb
add
xor
mov
dec
test
les
pop
mov
and
cli
add
fnstcw
pop
movaps
daa
mov
cld
lcall
adc
xchg
dec
cmpsl
ror
in
cli
xor
pop
sti
xchg
pop
add
and
mov
push
add
push
ret
mov
add
add
mov
les
jae
lea
cld
xchg
pop
cltd
pushf
adc
pushf
aaa
xchg
ja
adc
pop
sbb
mov
notl
pxor
in
cmpsl
inc
jnp
adc
movsl
loop
dec
cld
lcall
and
sbb
pop
inc
out
add
stos
outsb
rolb
mov
xchg
fcompl
jo
data16
xchg
pop
xorl
jb
mov
cmpl
jno
cmp
and
and
add
inc
repnz
push
mov
imul
pop
inc
es
and
aaa
mov
dec
mov
repz
sbb
jg
dec
mov
push
sub
sbb
add
imul
ficoms
pop
xchg
enter
add
arpl
push
cmp
xor
xorb
scas
test
inc
adc
xlat
pop
mov
and
mov
std
rorb
pop
aad
pop
adc
rclb
test
adc
add
xchg
cmp
push
lds
xor
lahf
add
add
push
xchg
cmp
imul
or
or
aas
sbb
sbb
into
icebp
dec
add
ds
add
fnstsw
int3
add
sub
ljmp
imul
mov
cmp
call
sti
pop
cltd
pop
lret
jge
cs
call
push
dec
push
stc
jg
cmc
test
scas
cmpsb
out
cmp
xor
addb
add
mov
add
pusha
adc
call
sti
daa
push
loope
ror
cmp
lret
dec
nop
enter
inc
scas
xor
pop
xchg
clc
cmp
inc
ss
add
movl
sub
sbb
js
mov
jmp
adc
push
inc
in
mov
es
ds
and
jno
loope
clc
mov
mov
sub
mov
sbb
mov
add
dec
jnp
add
imul
xchg
adc
adc
add
cmpsb
jo
add
xchg
and
loop
xor
subps
movsb
or
stc
cli
inc
ss
fimull
sarl
das
push
jbe
add
or
lods
mov
loop
out
adc
iret
out
hlt
loopne
and
pop
pop
outsb
xchg
iret
cmp
jbe
cmpsb
int3
ja
push
shl
jp
jge
clc
repz
repnz
inc
sub
dec
xor
insb
lea
in
stc
inc
cmovle
jg
not
ljmp
out
hlt
ljmp
in
ret
add
push
ret
sti
das
repnz
xor
pop
pop
imul
dec
cld
in
mov
stos
or
mov
imul
jne
out
sub
pop
add
leave
std
inc
adc
and
or
add
xor
in
inc
pop
icebp
dec
sti
or
xchg
adc
outsl
adc
push
cmp
cmovb
cs
xor
outsb
in
mov
xor
mov
data16
jno
adc
push
imul
xor
push
pushl
xlat
fsubrl
repnz
push
clc
in
xor
dec
adc
pop
pop
push
jle
sub
shlb
mov
ljmp
hlt
leave
xor
aas
cli
inc
stc
subl
in
aam
adc
dec
ljmp
lret
xchg
icebp
inc
add
sub
loopne
mov
xor
jno
pop
jbe
sti
inc
sbbb
int3
xor
notb
icebp
dec
mov
jge
jp
jae
loop
mov
inc
add
sbb
std
add
popf
lods
lret
enter
int
dec
test
mov
in
pop
add
lea
out
sub
sahf
mov
bound
leave
ljmp
aas
ror
pop
popa
xor
sub
or
shrl
mov
das
mov
and
out
pop
xchg
ja
daa
sub
sahf
in
leave
fldl
jl
cmp
icebp
daa
add
sbb
dec
pop
addl
dec
out
cmp
dec
xor
hlt
mov
call
add
divl
enter
leave
add
cltd
mov
das
cmp
mov
pop
pop
pop
xor
and
das
das
dec
dec
jb
addr16
mov
cmp
inc
cmp
mov
mov
arpl
cld
gs
out
cmp
cmc
in
mov
pop
sub
sbb
insb
add
je
adc
push
add
pop
mov
repnz
pop
mov
in
push
add
mov
hlt
inc
jnp
addr16
scas
sub
and
add
sarb
xchg
inc
ljmp
ret
add
lcall
arpl
jb
in
fiaddl
pop
jno
inc
arpl
pop
pop
add
rcrl
cmp
je
push
dec
inc
pop
adc
rorb
jge
les
push
dec
add
sahf
add
decb
xor
test
imul
jl
std
add
daa
ds
xchg
push
rcrb
out
fmuls
aaa
aad
add
push
pop
call
out
pop
cmc
and
adc
pop
rclb
out
cld
repnz
outsl
or
jge
and
icebp
cwtl
scas
or
or
mov
add
iret
int3
dec
movsl
out
push
out
add
and
push
sub
mov
loop
addr16
loopne
add
or
xor
cmp
mov
push
sub
fsubl
xor
cltd
punpckhwd
xchg
jmp
push
mov
inc
out
scas
scas
add
xor
cld
clc
popa
pop
lds
sub
lahf
jae
add
orl
stos
jns
shlb
popf
add
call
pop
xor
or
add
lods
jb
out
sub
adc
add
fxch
cmp
push
add
xchg
jne
or
inc
mov
add
pop
iret
dec
lcall
test
ret
hlt
in
gs
push
and
scas
ret
or
xorb
dec
sub
xchg
nop
dec
sub
mov
xor
lcall
loop
xchg
subl
sar
or
outsl
xchg
mov
call
cmpsb
and
aad
add
jg
fldl
shll
or
xor
mov
lea
mov
dec
dec
outsl
bound
xchg
scas
dec
dec
add
fs
xor
mov
xchg
insb
jb
add
fldl
cmp
sub
addl
dec
push
scas
mov
inc
xchg
cli
loope
ss
lods
add
iret
or
rcr
sahf
mov
jae
and
sub
test
lods
fs
pushf
ds
sbb
add
cmp
inc
mov
dec
xchg
dec
dec
jbe
mov
jg
std
add
pop
xchg
fwait
add
sbb
hlt
xchg
jmp
cmpsb
jecxz
scas
cli
push
testl
and
jmp
das
fcmovu
lods
xor
jns
cli
jb
loope
add
out
repnz
int
imul
lret
cli
push
jnp
cmp
jnp
mov
inc
ja
outsl
xor
leave
adc
sbb
add
divl
push
clc
add
movsb
mov
adc
nop
jl
in
movsl
imul
mov
xor
dec
mov
xchg
test
out
adc
orb
shr
and
mov
les
das
xor
scas
cltd
sbb
orl
ljmp
jnp
fsin
les
rorb
pause
popa
das
lods
rcrb
pop
mov
subb
repnz
lock
jle
adc
fiaddl
fsubl
mov
out
mov
das
push
or
pop
push
fwait
pushf
cltd
sbb
movsl
lret
inc
add
add
mov
aaa
push
dec
outsl
lods
arpl
call
xchg
ficomps
nop
add
sub
adc
ret
cmpsb
dec
lahf
filds
jl,pt
cmp
outsb
sbbl
rcl
loope
and
test
add
pminub
fistpl
sub
lahf
mov
ljmp
push
xchg
loope
pop
lock
sbb
dec
test
sar
cld
sub
push
addr16
add
stos
dec
push
mov
jae
inc
gs
and
je
das
ror
sub
rcll
aas
xor
in
mov
and
fidivrl
clc
pop
push
shll
adcb
outsb
xor
jmp
ljmp
inc
aam
in
sarl
mov
cmp
out
stc
jnp
clc
xorl
xor
movb
mov
jo
push
stc
aaa
mov
jge
sar
rolb
push
jmp
inc
xchg
mov
pop
jbe
mov
lret
iret
loopnew
add
sahf
rcrl
loope
jg
adc
enter
sub
nop
inc
cmp
gs
xchg
mov
jmp
stos
adc
add
mov
xchg
cmpsl
test
mov
add
push
jecxz
data16
mov
dec
call
cs
mov
adc
clc
test
add
mov
or
leave
cltd
out
insl
or
jecxz
add
lods
ljmp
cs
pop
adcb
adc
ja
cmp
adc
push
subl
aam
sub
xor
and
jae
out
dec
and
xor
das
scas
fidivrs
ret
imul
inc
mov
fistpl
out
loopne
push
enter
add
jg
pop
pusha
ret
shlb
in
jne
ret
out
rcl
popa
sbb
jl
imul
push
pop
push
cmpsl
add
lahf
sub
inc
jb
sbb
test
imul
hlt
scas
inc
sar
hlt
andb
loope
fcmovu
test
dec
pop
fistl
inc
mov
aas
xchg
stc
xchg
push
add
push
adc
aaa
repnz
mov
ret
adc
enter
hlt
add
movsb
fstps
add
outsb
dec
dec
adc
mov
mov
push
addl
xor
ss
mov
jnp
idiv
cmp
aaa
enter
lret
dec
jae
fidivrl
mov
cli
xchg
mov
std
aaa
hlt
std
lret
xor
scas
out
jg
or
out
jecxz
push
fwait
xchg
jmp
cmp
movsb
seto
idiv
inc
rcr
push
iret
int
test
or
data16
adc
in
xor
add
xor
int3
sbb
ss
jb
cmc
out
dec
sub
add
mov
or
mov
xor
pop
fsubs
pop
test
test
leave
aas
lcall
je
jns
cltd
rol
cmp
xchg
movsb
lods
sbb
fcomip
ja
mov
adc
aad
xchg
inc
lds
cmp
xchg
xchg
push
repz
lret
stos
xor
lods
in
hlt
fistpll
ljmp
fs
rorl
mov
mov
ss
fiadds
lcall
jb
stos
les
mov
mov
sbb
arpl
ret
add
inc
rcrl
mov
cmpl
mov
sub
add
pop
aam
loope
hlt
pop
mov
leave
cld
loope
and
jmp
mov
add
ja
and
mulb
mov
cwtl
subl
mov
add
mov
mov
mov
add
out
aam
sahf
pop
add
xchg
xor
pusha
mov
les
inc
push
xor
faddl
sbb
and
push
mov
push
rolb
fidivrl
aaa
test
add
jnp
mov
outsb
aas
lea
xor
push
add
rclb
cmp
cmp
mov
insl
adc
ss
pop
sarb
mov
jp
lods
dec
dec
mov
int
addl
mov
or
shlb
add
xor
inc
add
daa
std
mull
lods
inc
xor
test
mov
mov
das
nop
add
sbb
pop
mov
imul
add
or
lret
jno
lock
xchg
xchg
adc
inc
cmp
add
add
movl
aad
add
dec
leave
push
dec
daa
enter
add
mulb
movsb
hlt
or
stos
popa
xor
mov
sbb
and
mov
sbb
insl
or
lret
sbb
add
cld
fdivrl
jno
dec
fwait
mov
out
dec
pushl
std
enter
inc
aam
xchg
loope
jb
testl
or
push
add
nop
and
mov
in
fildl
rolb
adc
mov
jb
cmp
popa
int
movsb
lret
fbstp
subb
sub
mov
rcrl
fbld
lcall
rolb
dec
add
cs
loopne
repz
test
add
roll
popl
ret
inc
xchg
jbe
das
adc
xchg
daa
xor
mov
mov
lret
push
xchg
xchg
roll
mov
mov
aas
mov
das
lcall
push
loop
xor
cld
cwtl
mov
add
clc
dec
push
mov
xchg
jbe
or
inc
leave
and
mov
das
data16
add
leave
xor
ret
ljmp
insb
pop
xorl
insb
sub
dec
and
dec
ret
add
out
ret
mov
out
push
repz
int3
jmp
shrb
insl
sbbl
in
mov
xchg
stc
cmp
mov
in
push
leave
mov
and
imul
push
in
cli
xor
test
rorb
pop
andl
adc
fcmovne
leave
ja
cli
popf
mov
roll
adc
pop
or
and
xchg
mov
jle
mov
add
jl
inc
mov
shrl
add
gs
jp
or
hlt
push
push
dec
dec
popa
sub
std
add
fidivl
mov
cmp
aas
incl
cmpsb
mov
cs
call
psubd
dec
in
lock
push
inc
out
stc
xchg
sbb
jnp
sti
call
mulb
dec
and
cmp
xchg
cmp
je
or
xor
rcr
mov
into
lret
and
rcll
hlt
mov
pop
rcr
add
sbb
inc
rcrl
daa
push
outsb
sub
cltd
push
addl
and
ss
ds
lret
mov
scas
andl
add
push
push
pusha
rcrl
xor
inc
xlat
test
and
outsl
jo
popa
out
mov
ss
pop
rolb
jbe
and
inc
das
push
stos
insb
sbb
xor
lcall
add
pushf
ret
lock
adc
into
outsl
ret
xor
xchg
jge
mov
inc
dec
test
inc
dec
cmp
mov
jns
insb
out
push
jl
sbb
add
push
inc
addb
mov
jne
xchg
in
add
out
cli
pop
aam
inc
je
jo
popf
sub
xor
mov
add
jp
pop
dec
cmpsb
push
and
push
iret
cld
lahf
mov
jbe
test
add
fwait
dec
gs
and
sbb
mov
add
xchg
xchg
cld
or
sbb
mov
mov
push
xor
mov
movsl
mov
pop
and
sub
or
add
cld
fnstenv
shrl
movsb
stos
rcl
inc
mov
mov
arpl
imul
mov
out
jno
fiadds
hlt
nop
lods
dec
xor
pop
ss
inc
adc
lods
bound
or
or
inc
mov
popa
in
sbb
inc
movsb
inc
outsl
divb
or
push
fidivl
idivb
or
lea
or
dec
imul
out
and
mov
jecxz
and
rolb
push
or
mov
jl
xor
decl
add
test
push
gs
pop
cld
sbb
imul
sti
pop
sbb
dec
inc
add
jl
inc
xlat
dec
add
adc
hlt
push
mov
leave
add
push
inc
xor
dec
adc
scas
notb
cld
mov
jle
in
adc
test
xor
pop
out
or
mov
add
cltd
pop
dec
fwait
jle
loop
movsb
lock
adc
mov
inc
ds
cs
mov
push
dec
add
cltd
add
out
mov
out
xchg
add
cmp
adcl
add
fstl
in
inc
jmp
hlt
xor
aam
and
jg
add
or
sbb
pop
add
mov
stc
add
inc
jle
rclb
cmc
incl
aas
std
dec
popf
out
adc
sti
add
mov
es
or
hlt
enter
sub
xchg
outsb
in
cli
mov
xor
sbb
mov
ss
negl
ret
cld
nop
push
or
pop
pop
and
or
mov
xchg
lret
jnp
dec
out
dec
push
pop
jmp
and
xchg
repnz
inc
and
imul
leave
icebp
dec
and
xor
mov
scas
mov
mov
cmp
hlt
arpl
dec
pop
jmp
fwait
adc
add
jmp
cli
sbbl
stc
jno
shlb
frstor
pop
adc
mov
add
pop
das
popa
arpl
adc
jnp
and
pop
add
repz
hlt
push
xor
das
out
sub
pop
loope
add
sbb
pop
sbb
add
std
mov
pop
mov
sub
dec
aam
hlt
iret
popf
out
jp
fldl
lods
pop
mov
shll
sbb
add
add
pop
outsl
call
xchg
loopne
xor
cmp
xchg
pop
loope
adc
insb
out
lock
outsl
inc
decl
aam
shll
xor
in
std
add
lock
fidivrs
leave
mov
aas
jns
mov
das
xor
jnp
jbe
jmp
leave
out
or
jns
pop
dec
jnp
das
add
inc
leave
sbb
mov
fnstcw
jle
sub
inc
add
stos
cmc
cmp
incl
enter
xor
sbb
jne
idivl
or
mov
jmp
xchg
rclb
sti
adc
enter
and
bound
iret
lock
das
out
aad
xor
sub
shlb
inc
insl
or
lock
imul
mov
test
cmp
pop
cld
ja
pop
or
xor
inc
icebp
mov
adc
jle
das
mov
clc
push
arpl
leave
ficoml
sti
lret
in
stc
and
lret
test
dec
or
addr16
xlat
or
lods
mov
xor
sbb
mov
jp
pop
cmp
xor
mov
pop
mov
add
fcoml
sbb
andb
dec
xchg
aam
mov
sbb
je
outsl
arpl
jg
pop
dec
fildl
ficomps
test
or
jg
push
adc
sub
push
sub
cmpsl
imul
xor
dec
add
icebp
lock
add
in
cmp
repz
fidivs
adc
cmp
push
pushl
int
in
movsb
add
pop
fisttpl
mov
and
add
sahf
lret
aad
sbb
addr16
adc
movsb
popa
lds
out
mov
ret
push
sbb
lods
leave
adc
testl
jg
mov
mov
stos
hlt
and
inc
dec
mov
subb
mov
mov
inc
push
mov
and
cli
mov
out
fs
sbb
push
lret
test
in
cmp
loop
lret
bnd
xlat
pop
loopne
into
insl
pop
inc
repnz
in
inc
mov
and
add
les
jno
jb
xchg
add
insb
and
sbb
js
subb
les
add
jecxz
push
sbb
cltd
mov
sbb
add
test
mov
pop
ja
and
cmp
hlt
cmp
shll
push
add
mov
xchg
in
cwtl
add
sbb
rolb
imul
cmp
mov
add
cli
leave
test
or
repnz
faddl
inc
pushf
and
mov
int
push
jge
mov
int
sub
fsubs
cld
lods
nop
int3
shr
inc
fldt
xchg
popa
ljmp
in
mov
fnsave
push
cmpsb
inc
imul
add
inc
rclb
std
enter
jg
fwait
dec
xchg
inc
or
adc
mov
jge
and
fists
sbb
nop
ss
lods
aaa
jb
ljmp
cs
cmc
xchg
sahf
cmpsb
add
sub
mov
ret
inc
andb
das
lret
pop
xorb
xchg
cmc
mov
insl
call
cwtl
pusha
clc
jecxz
orb
bound
lea
test
icebp
loopne
xor
enter
push
sub
in
ret
fimuls
ret
in
xor
sub
push
iret
or
sbb
insb
add
dec
inc
out
mov
xchg
push
jg
cli
aad
mov
out
push
loope
cld
in
xor
adc
cltd
and
add
rcll
dec
jno
add
fwait
push
sbb
adc
xor
stc
mov
outsl
gs
sbb
enter
rorb
data16
inc
sahf
ret
mov
dec
jb
mov
pop
sbb
test
sub
movsl
imul
int3
xor
jl
faddl
fnop
pop
test
cwtl
add
out
gs
imul
fmul
in
xor
push
cmp
stc
jo
or
jge
pop
jno
and
insb
sbb
out
push
fnstsw
sbb
sub
jnp
xor
sbb
lock
and
outsl
sbb
fdivs
loop
xor
pushf
pop
add
nop
mov
out
ljmp
rorb
jge
dec
xchg
frstor
pushf
lahf
fcompl
dec
or
xchg
xchg
and
adc
insb
pushf
mov
imul
sar
loope
in
roll
addr16
into
sub
jp
pop
xlat
sub
add
xchg
cmp
dec
pop
stc
fwait
sbb
shrb
inc
jne
movsl
add
mov
lods
in
jmp
scas
add
add
fstps
xchg
rcrb
fstl
and
dec
sbb
lods
adc
ret
xchg
jb
andl
sar
pop
pop
mov
decb
or
imul
cmp
fadds
stc
xorb
iret
stos
mov
aad
repnz
les
add
fs
cmp
push
jecxz
inc
idivb
dec
add
xchg
and
sbb
or
shl
fldenv
popa
pop
and
pop
les
and
push
or
add
jno
xchg
jmp
loop
mov
or
fldenv
cmp
daa
aas
sbb
in
push
pop
movsl
xchg
cltd
adc
addb
clc
xchg
cmp
add
rolb
test
cmp
add
stos
aam
sub
pop
push
mov
hlt
cld
jge
jns
jmp
push
in
xlat
adc
push
mov
sti
adc
repz
nop
add
dec
rorl
cltd
inc
dec
and
ljmp
add
push
je
mov
dec
icebp
add
inc
scas
mov
jmp
xor
mov
mov
loopne
and
push
mov
push
push
ret
add
scas
into
sahf
hlt
sarl
inc
xchg
sbb
les
hlt
arpl
adc
mov
mov
movsb
addr16
in
in
out
cmp
pop
out
adc
sbb
pusha
leave
hlt
popf
mov
int
cmpsl
insl
add
mov
repnz
inc
dec
add
out
hlt
push
mov
mov
lret
sbb
cli
sahf
xor
push
add
aas
push
testl
cld
jmp
or
mov
hlt
mov
dec
xor
inc
push
repnz
outsl
adc
enter
or
mov
add
pop
lret
and
or
xchg
mov
fxch
push
xchg
adc
cltd
aad
jle
cmp
cmc
xorb
add
inc
add
mov
add
vpsubusw
movsb
or
psubsb
ljmp
push
mov
push
jne
inc
negl
mov
xor
enter
cmp
dec
push
gs
lahf
adc
xchg
cmpsb
add
out
sbb
ja
jp
rolb
push
out
xchg
inc
incl
test
popa
aam
out
xchg
mov
andb
add
cli
pop
xchg
cltd
push
faddl
xchg
pop
sbb
add
push
mov
pop
insl
mov
dec
leave
adc
xor
or
lds
mov
sti
push
push
add
mov
shlb
adc
out
lret
xor
stos
and
push
aas
notb
jnp
xor
into
jg
int3
ss
test
notl
xor
inc
push
adc
mov
sarb
das
xor
mov
mov
inc
xor
inc
negb
jl
add
dec
in
ds
pop
dec
or
sqrtps
cmp
and
bnd
cmp
leave
clc
nop
pavgb
pop
sbbl
pop
mov
subb
outsb
adc
cmp
cmp
stos
mov
inc
sbb
in
xor
repz
and
jp
inc
sbb
inc
push
clc
xlat
ja
mov
mov
insl
add
or
cld
jg
mov
std
adc
mov
or
lcall
add
xor
sti
sub
mov
int3
das
jmp
cli
jns
aas
pushl
lock
das
jae
hlt
shrl
es
and
mov
jns
loop
mov
aam
xchg
sbb
filds
pop
lea
fimull
stos
pop
adc
mov
out
imul
arpl
dec
dec
ljmp
adc
pop
adc
dec
xor
mov
cmp
jne
xor
jle
adc
test
shlb
rorl
ret
xor
das
jp
loop
xchg
xor
mov
outsl
xor
aaa
cmp
bound
pop
test
sbb
lock
pop
aas
lds
mov
aad
bound
sub
das
sbb
in
icebp
pop
cmp
sbb
stc
push
out
jnp
push
cmpsb
in
out
lock
popf
or
pop
bswap
mov
xlat
pop
fucomip
push
ret
and
cli
mov
adc
sub
fcmove
xchg
adc
pop
das
subl
fs
cmpb
xchg
aam
ffree
push
neg
outsl
sub
cld
cmpsl
and
adc
fistl
push
fdivl
or
lods
ss
das
sti
inc
cld
ret
inc
xor
rorb
xor
cmp
xor
lock
aam
pop
sub
out
loop
or
adc
testb
mov
and
pop
jg
pop
sbb
rcll
sbbl
repnz
ja
xor
adc
sbb
add
mov
pop
clc
out
js
cltd
dec
jge
jecxz
ljmp
push
in
mov
mov
in
mov
ljmp
push
xchg
and
and
insl
xor
scas
cmp
xor
mov
sub
test
mov
call
lret
aad
lcall
sti
in
imul
mov
jge
iret
and
pop
pop
mov
loop
js
mul
das
jb
sbb
jmp
psllw
test
pop
leave
pop
xor
loop
dec
les
popf
xchg
jmp
mov
out
data16
jmp
pushf
jmp
test
jns
movb
xorl
jge
aad
dec
push
das
cmc
es
cmc
repz
insl
sub
mov
into
adc
pop
lret
add
lods
icebp
stos
pop
xchg
xchg
les
insb
cmp
aad
fidivs
icebp
pop
dec
iret
dec
popl
inc
mov
and
jmp
enter
cmp
fs
cmp
mov
and
js
add
adc
es
jbe
roll
std
xchg
pop
clc
xor
cmp
rcrl
test
mov
dec
push
cmp
mov
adc
daa
ljmp
inc
xchg
das
push
pop
pop
pop
out
pop
mov
sahf
icebp
fnstenv
cld
fidivl
jae
les
xchg
xor
push
or
pop
push
out
xchg
push
mov
xchg
fcomip
clc
mov
popf
ret
popa
adc
gs
lods
mov
loop
std
pop
pop
sub
and
into
xchg
insl
popa
xor
shlb
sub
stc
or
jb
mov
xlat
sahf
lock
cmp
pop
mov
repnz
push
inc
sahf
ja
ret
aaa
lret
push
fdiv
xor
cmpl
loopne
and
mov
sbb
mov
fnsave
xchg
pop
nop/reserved
shl
push
jmp
iret
dec
rcll
and
sbb
aad
hlt
fistpll
ljmp
stos
popf
adc
mov
loop
sub
sar
mov
pop
imull
sub
xor
sahf
ret
jge
insb
bswap
mov
pusha
mov
dec
xchg
loopne
cmp
pop
mov
pop
xchg
mov
fisttpll
aaa
inc
iret
popa
in
pusha
xor
mov
hlt
divb
int3
ret
fisubrl
jne
jl
dec
call
ret
xchg
enter
fidivrs
fidivl
dec
mov
fmull
dec
lahf
jp
jge
int3
rclb
pop
xor
in
adc
sub
bound
and
out
ficomps
push
je
push
mov
or
push
jnp
lahf
ret
and
lahf
push
inc
pusha
sbb
cmpl
push
hlt
lock
sbb
inc
pop
cmc
jno
das
test
incb
pop
pop
mov
hlt
inc
push
mov
cmc
pop
das
mov
ret
mov
repnz
in
ds
aam
lcall
js
xor
fildll
insb
stc
add
ret
and
dec
aam
sahf
xor
bndldx
push
and
cltd
xchg
fidivs
lahf
add
or
xor
in
dec
das
pop
dec
jle
stos
loopne
sub
sub
lds
ljmp
popa
ss
jp
pop
cmp
mov
jnp
fisttps
jno
divb
cmpsl
pop
cwtl
out
cli
mov
xor
fidivrl
ret
arpl
fimuls
dec
int3
shr
xchg
pop
fstps
stos
bound
ljmp
xchg
repnz
pop
or
xor
mov
loope
push
lret
mov
mov
ret
xor
fiadds
or
lret
stos
mov
fs
lods
sti
or
js
xchg
mov
push
adc
sbb
push
subl
in
xchg
icebp
loop
out
add
cltd
fadd
mov
mov
punpckhwd
inc
xor
clc
pop
pop
fcomps
movsb
add
pop
rclb
das
pushf
ljmp
cmp
jns
aam
adc
add
adc
lahf
jb
loop
xor
bswap
lods
lahf
xchg
mov
outsl
jbe
fdivrp
mov
rcl
test
cwtl
pop
sahf
test
push
das
insl
xor
jbe
cmp
out
mov
xor
std
mov
jle
jns
movsb
adc
cmpsb
inc
stc
or
mov
add
cmp
in
xorl
inc
aam
or
rorl
add
mov
sbb
js
fisubs
das
jge
leave
mov
mov
bound
mov
fcmove
test
stos
adc
cmp
xor
aad
fnstenv
dec
adc
mov
push
ds
ss
iret
das
fsubs
dec
cmpsb
inc
mov
lods
frstor
test
cld
ret
or
sti
iret
mov
cmc
pop
mov
adcb
rcrb
mov
adc
xor
sub
mov
lcall
add
pmuludq
cmp
lock
in
inc
cld
cs
in
in
adc
cmp
xor
roll
jg
and
fcoml
or
nop
std
pop
cli
inc
jno
icebp
add
in
cmp
push
fisttps
das
xchg
movsb
out
clc
mov
loope
inc
insb
mov
xlat
pop
mov
mov
pop
inc
jecxz
ljmp
xor
dec
mov
pop
insb
ds
mov
push
dec
jp
cmp
add
neg
lock
sbb
mov
mov
ret
jae
push
cmp
stc
push
push
fimuls
jns
push
xor
mov
jo
cmp
ljmp
insl
in
fwait
pop
sub
sub
sarb
sbb
ret
sub
popa
cld
sti
cmp
cs
jge
push
in
push
jne
cli
mov
and
fcomip
shll
mov
adc
or
mov
jnp
mov
leave
stos
dec
pushf
pop
xchg
mov
mov
hlt
out
insb
xor
jge
stc
sbb
mov
or
enter
in
jge
je
add
adc
fimuls
popa
subl
adc
movmskps
mov
sub
jnp
jo
dec
cli
jl
mov
std
mov
mov
icebp
aas
xchg
int
iret
ret
push
loop
loopne
jl
push
jnp
gs
call
adc
idiv
loope
jo
ljmp
bound
pop
ss
daa
loop
fdiv
in
jge
jbe
lahf
lahf
pop
fsubp
outsl
test
orb
stos
ror
ss
jns
test
cltd
dec
push
fistps
and
hlt
mov
mov
xlat
insb
cmp
cmp
enter
movsb
js
jb
pop
mov
push
jle
jle
cmpsb
inc
std
cmp
repnz
cmp
dec
ret
jmp
jg
cmc
sub
push
pop
cmp
into
and
cli
lret
xorl
cmpl
xchg
jnp
fsubrl
pop
dec
stos
lock
jbe
jmp
testl
adc
loop
out
xorl
fsubs
repz
cld
inc
mov
inc
shl
xchg
mov
cmc
ffreep
sub
fdivrl
lret
adc
push
xchg
xor
dec
ficoms
punpckldq
push
in
push
adc
cmpxchg
adc
cwtl
clc
movsb
leave
in
std
pusha
pop
sub
jo
jecxz
push
xor
mov
enter
in
xchg
outsb
cld
pushl
xchg
lock
xor
xor
inc
and
xor
ficomps
bound
icebp
bound
xor
mov
iret
fidivrl
or
fistl
xor
push
icebp
test
mov
es
fdivrs
push
add
and
repz
orl
or
repnz
test
mov
in
incb
int
fdivrs
test
cli
pop
xchg
push
repnz
ss
or
cmp
mov
or
fwait
dec
mov
ret
sub
arpl
icebp
imul
cwtl
leave
test
jno
rolb
add
or
aam
fidivs
push
cmpsl
pop
mov
rcr
dec
cmp
sbb
insb
jl
mov
fs
mov
fldenv
jb
mov
pop
xor
inc
sarl
test
cmp
aas
cmp
or
movsl
adc
dec
ret
repnz
mov
or
add
sbb
lret
or
fdivrl
bound
mov
repnz
jbe
jb
cli
daa
loope
or
push
das
shll
jo
lock
jg
leavew
sbb
xorb
xorb
add
ret
cld
sahf
mov
lahf
and
aaa
dec
ret
fiaddl
cli
or
mov
sbbb
pusha
stc
inc
ficompl
cmp
jmp
popa
push
jb
cld
shrb
xor
icebp
push
pmulhuw
pop
fmul
ficompl
ret
jle
sahf
lret
lahf
jg
loope
xor
stc
and
mov
cltd
cli
push
mov
ret
add
stc
lock
test
lret
adc
sub
popa
xchg
sbb
jbe
addb
addb
and
cmp
loop
addr16
xchg
scas
push
and
popa
push
push
inc
shlb
cmp
mov
rcr
fcoms
fildll
orb
call
sbb
mov
jge
xor
loop
mov
sbb
shll
jbe
addb
leave
scas
mov
mov
repnz
mov
dec
shrl
std
jns
stos
repnz
pop
push
shll
pop
ljmp
in
mov
iret
lret
imul
outsb
test
fildl
mov
mov
icebp
cmp
loopne
xor
xor
mov
popa
push
repnz
bound
loop
cmp
out
mov
xchg
push
xchg
pop
loopne
dec
test
add
js
addl
aaa
popa
xor
inc
push
mov
in
int
jg
pushf
push
out
pop
cmp
mov
dec
shl
fnsave
cli
pop
pop
cmpsb
out
aad
cmp
leave
push
jb
ljmp
rorb
ret
dec
sbb
rcl
mov
sbb
jnp
adc
inc
add
mov
aas
pushaw
xor
fidivl
mov
fwait
inc
out
leave
bound
push
addr16
aam
mov
aaa
mov
xchg
dec
lods
lret
je
xor
aam
out
test
loope
out
leave
stos
mov
shl
aam
dec
xchg
jnp
subb
xor
or
inc
xlat
mov
movl
mov
mov
lock
fsts
es
cmpsb
mov
scas
scas
push
cmp
insb
loope
cmp
adc
ljmp
adc
lods
adc
dec
mov
pop
or
loope
or
leave
adc
pop
push
mov
pop
pop
adc
shlb
cli
xorb
fistps
pusha
adc
test
scas
movsb
mov
loopne
mov
mov
loope
xchg
call
addl
data16
xor
mov
push
pop
push
jg
pop
push
pop
pop
out
out
and
xor
insb
out
pop
add
cmovl
shll
xor
fwait
inc
add
lcall
or
mov
cmpsb
test
sub
lahf
jecxz
push
icebp
rorl
xor
pop
push
xor
sub
pextrw
cmpsb
cld
lret
mov
mov
push
adc
leave
cli
jge
daa
mov
negl
fidivl
inc
cmp
lods
push
leave
pop
sub
or
mov
xor
or
mov
lods
call
jge
sub
sti
popf
decl
xchg
lcall
test
repz
fnstenv
pop
xlat
les
test
mov
pop
js
inc
jl
movhps
ret
push
rcrb
sbb
or
push
ret
into
roll
push
loopne
mov
xor
loop
hlt
dec
mov
mov
add
hlt
inc
in
divb
mov
xchg
mov
push
mov
xor
mov
jp
movsl
xor
xchg
cli
test
push
mov
xor
jne
out
leave
and
cmp
and
daa
aas
icebp
mov
adc
sahf
stc
add
fidivrs
das
push
jp
pop
inc
xchg
bound
jns
adc
outsb
mov
xchg
into
sub
sbb
rsqrtps
cli
push
test
addb
hlt
mov
loop
enter
aas
rorb
ljmp
out
push
mov
loop
leave
xorps
xlat
out
fidivl
outsl
push
aam
hlt
addr16
ffreep
bound
sbb
add
cmp
out
xor
movsb
idivb
or
jmp
stos
dec
jmp
xchg
adc
add
out
jbe
xor
andb
lret
and
push
outsl
push
sub
icebp
mov
xchg
loop
mov
xor
daa
dec
inc
pushf
subb
int
sbb
xlat
int
stc
jno
pop
push
jo
fidivs
mov
mov
jne
adc
pop
cmp
scas
dec
fdivrp
xor
mov
bound
jg
mov
adc
js
outsb
push
add
shlb
pop
cmpsb
mov
mov
and
xor
jns
jbe
push
rcll
cmpsb
cmp
and
ljmp
xor
jo
data16
aam
add
adc
js
mov
push
pop
and
neg
getsec
outsb
xchg
add
ljmp
cmp
cwtl
rorb
pop
add
decb
psubusb
sub
xor
pop
inc
inc
imul
and
pop
mov
orb
or
jecxz
and
push
xchg
bound
cmp
mov
xchg
adc
dec
sub
pop
mov
mov
adc
loope
push
lret
movsb
out
in
adc
inc
or
jp
xor
fistpll
adc
push
dec
xchg
clc
jle
xchg
hlt
xor
mov
jne
fwait
int
outsl
iret
out
dec
in
ja
movsb
imul
cli
mov
sbb
push
bound
imul
and
aad
les
in
push
xchg
ret
add
inc
xchg
out
loop
pop
cld
push
mov
mov
ss
cwtl
insb
inc
add
jbe
ljmp
jo
pmuludq
or
std
push
into
nop
insb
mov
pop
pop
leave
stc
jo
xor
xor
push
pop
adc
push
push
stos
ret
out
push
and
leave
pop
bound
dec
scas
imul
in
jmp
adc
test
imulb
das
mov
jns
sar
add
aam
cli
into
pop
inc
xor
shll
ja
push
push
mov
inc
loope
cmp
iret
loope
outsb
cmp
aas
xor
cmpsb
ljmp
pop
cs
mov
pushf
dec
mov
ret
jg
outsl
mov
mov
inc
outsb
mov
push
mov
rolb
pop
rcll
test
fs
mov
loop
addr16
lock
test
icebp
sahf
insl
push
jp
mov
xchg
cld
pop
adc
push
mov
psrld
popf
and
repnz
insl
in
movsb
xorb
roll
repz
pop
jno
repnz
and
push
popa
sub
imul
in
clc
or
sub
mov
or
std
fnstsw
pop
inc
sbb
cli
inc
andl
test
pop
icebp
rcrb
mov
xchg
sbb
and
lods
sbb
pop
or
mov
push
inc
dec
cmp
mov
jne
push
jb
loope
pop
lea
xchg
push
fs
mov
pop
add
fsubr
aas
test
xchg
js
fistps
outsb
mov
cmpb
std
out
push
das
repnz
xor
outsl
cmp
jmp
lret
jle
das
jge
adc
leave
inc
outsl
mov
xor
out
sbb
loope
cmp
scas
das
inc
dec
add
call
gs
xor
movsl
cld
xchg
mov
scas
sub
mov
mov
lcall
xor
pusha
lcall
and
fs
sbb
cli
jae
repnz
sub
adc
jne
xlat
cltd
mov
jo
jge
outsl
lret
pop
jno
cmc
push
sub
shl
sbb
sbb
and
inc
movsb
jg
lock
push
test
xorl
loop
dec
add
movb
add
xor
mov
inc
inc
push
xor
inc
jne
sbb
clc
cmpsl
cmp
xchg
int3
insl
negb
add
shrd
aas
arpl
cmp
push
mov
inc
mov
test
inc
adc
sbb
or
push
pop
jo
fcomi
loop
nop
jno
xor
iret
inc
fsubrl
dec
movsb
lock
adc
lock
sahf
lock
rcrb
cli
sub
mov
dec
repz
fs
ljmp
subl
cli
int
pop
imul
addl
jne
insl
incb
adc
stos
subb
bound
in
add
popf
cld
add
hlt
dec
sbb
subb
xor
xor
mov
and
add
xor
mov
je
cli
mov
and
xor
sub
mov
clc
js
push
or
orl
fnstsw
sbb
sahf
cmp
fs
in
sti
adcb
int
aaa
int3
mov
push
mov
push
cld
lds
fwait
jno
dec
insb
imul
das
dec
adc
jp
movsb
nop
inc
jb
jne
add
pop
icebp
xor
xor
dec
out
dec
lock
mov
scas
jmp
out
jl
mov
mov
xorl
push
lahf
mov
loop
nop
pop
mov
push
cld
mov
jmp
repnz
mov
pop
sbb
pop
or
dec
xor
cmc
leave
jle
jbe
rolb
or
shrb
mov
cld
call
pop
push
cmp
push
mov
cmpsb
mov
xor
mov
inc
jp
mov
mov
roll
sbb
mov
push
sbb
mov
fidivs
push
mov
mov
or
cmp
pop
cld
mov
seto
arpl
jns
jge
movsb
mov
add
or
scas
fcompl
add
pop
xor
mov
stc
shrl
jle
lcall
xchg
mov
aas
sub
popa
cld
scas
aaa
push
pop
inc
inc
jns
repz
aaa
pushl
jecxz
leave
adc
mov
ljmp
in
in
sub
jns
add
xchg
int
pop
mov
pop
pop
divb
movsb
mov
pop
test
lret
jns
loope
xor
adc
inc
stc
imul
fbstp
sub
and
jns
mov
aam
mov
xor
fimuls
pop
ljmp
cmp
clc
mov
mov
sub
pop
in
inc
lahf
pop
jne
and
xchg
pop
pop
sub
pop
lret
leave
mov
mov
pusha
inc
stos
adc
cmpsb
sub
dec
cmp
repnz
cli
and
sub
outsl
jb
cmpsl
adc
out
sbb
xlat
sub
push
leave
cli
pop
lahf
movsb
lahf
mov
rclb
les
ror
mov
test
xor
aam
pop
xor
xor
outsb
in
fwait
aam
mov
ret
lods
adc
push
lret
cmp
ds
shrl
dec
jno
stc
pop
dec
inc
mov
xor
lcall
mov
add
dec
movsl
mov
test
stc
stc
and
mov
nop
popa
repz
jp
mov
dec
leave
or
inc
jne
jmp
pusha
nop
mov
stos
bound
mov
adc
lcall
push
sbb
mov
rclb
inc
or
pop
sbbb
inc
outsl
xor
push
call
jecxz
call
xchg
ret
rcrb
push
inc
imul
pop
mov
xor
jnp
fdivrp
sub
jno
add
pop
pop
loopne
and
push
jp
in
xor
lret
adc
push
fsubr
cwtl
push
pop
mov
jo
es
and
insl
stos
cld
or
pop
mov
out
pop
imul
mov
sbb
pop
inc
sub
mov
xor
stos
stos
push
cmp
aas
jne
outsl
inc
fnstcw
dec
cmp
push
add
jne
xchg
push
mov
xchg
les
js
pop
or
insl
clc
stos
in
add
lret
add
cmpl
adc
pop
jg
call
adc
loope
test
addr16
out
in
pop
mov
sbb
inc
xor
ffreep
jne
iret
dec
adcl
in
pop
ret
xor
xchg
loop
sbb
xor
and
inc
add
pop
mov
das
ja
push
call
xlat
loop
das
ficompl
sub
in
mov
in
pop
jne
jb
mov
popa
fcmovbe
fwait
pushf
dec
insl
or
test
mov
mov
and
or
popa
mov
shlb
aas
shrb
xorl
inc
fdivl
or
add
cld
xor
pop
sbb
leave
inc
add
mov
push
add
mov
pop
aas
mov
lcall
dec
aaa
popf
fdivl
lods
js
adcl
pop
das
cld
sti
push
outsb
mov
iret
repz
jns
inc
lds
jnp
comiss
sbb
push
sahf
mov
sbb
ljmp
iret
scas
loop
add
push
jmp
shll
xor
and
negl
mov
mov
inc
testl
add
xor
mov
xor
into
dec
outsl
ja
mov
rcrb
pop
pop
jg
push
lea
inc
dec
out
xor
ljmp
push
pop
stc
sub
mov
loopne
pop
push
sub
repz
insb
addr16
test
por
mov
leave
pusha
cwtl
ret
jge
std
xor
mov
pop
sub
cld
xor
jmp
xor
inc
mov
xor
lods
cmp
fiaddl
es
xchg
lock
lahf
jns
aaa
xchg
add
pop
jg
sti
adc
fmull
mov
dec
aas
movsl
lds
or
xor
xor
cld
inc
hlt
add
mov
das
mov
in
rcrl
pop
in
mov
mov
and
and
xor
mov
addr16
in
movsl
frstor
push
fsts
lock
or
xchg
dec
dec
in
fbstp
inc
adc
mov
xor
sbbb
ret
sbb
in
mov
dec
jo
dec
cmpsb
cmc
push
insb
jecxz
push
call
test
subb
cmp
cmp
jp
pop
lods
out
jb
enter
or
xor
dec
fildll
jmp
and
clc
ficomps
into
dec
aas
push
movsb
cmp
dec
mov
cmp
jo
xor
xor
cmp
and
pushl
adc
and
stc
ret
fsubl
outsl
sub
cli
dec
mov
push
push
lock
jmp
lret
subb
add
mov
cltd
and
cmc
xor
mov
sbb
sub
mov
xor
in
pusha
cwtl
pop
out
loope
out
xchg
mov
fsubrs
setb
xor
inc
fnsave
xchg
pop
frstor
and
fisttps
lock
stos
mov
test
fbld
scas
out
outsl
divb
mov
fdivp
pop
jne
lar
mov
push
call
arpl
jae
es
add
nop
pop
js
lds
pop
jnp
sub
aad
shrl
das
fnstcw
pop
imul
mov
push
xchg
mov
lahf
fchs
negl
mov
into
cmp
sbbb
mov
adc
inc
lock
daa
cmp
rcl
cmpsb
stc
cmp
cmp
jg
into
add
jle
mov
outsl
stc
arpl
loop
cwtl
pop
lret
xlat
sub
pusha
cmp
xchg
xchg
xchg
mov
pushf
cmpps
sbb
movb
out
sub
jae
jge
or
mov
push
and
push
imul
gs
call
lods
stos
xor
scas
loope
fldl
dec
inc
mov
mov
aas
pop
stos
dec
stc
lock
sbb
xor
sub
sahf
dec
adc
ljmp
stos
mov
inc
xchg
inc
testb
rcr
add
test
push
scas
inc
cli
rcll
xchg
movsb
mov
scas
jb
mov
bound
bound
xor
xor
jno
int3
mov
insl
faddl
loop
sbb
mull
cli
int
test
or
and
fisttpl
pop
in
add
aas
sbb
arpl
pushf
shlb
ljmp
and
stos
cmp
cmp
mov
clc
add
leave
cmp
or
and
adc
jae
jl
adc
jns
add
gs
lahf
push
cmp
shl
mov
jae
shrb
fcomip
push
push
jp
push
out
std
fsubp
mov
jns
dec
jp
or
mov
jb
fistps
mov
out
xchg
fidivs
add
sub
out
insl
cwtl
shlb
cmpsb
loopne
popa
mov
inc
jmp
dec
ret
jmp
repnz
imul
out
dec
mov
xchg
stos
jl
push
bound
add
movsl
push
sub
push
fwait
pushf
add
xchg
inc
inc
xor
cld
jne
cmp
xchg
mov
shll
and
test
push
aaa
mov
decl
inc
fnstsw
sahf
mov
add
mov
cmc
add
loopne
add
shlb
cwtl
imul
cmc
js
adc
cli
jae
xor
les
insb
aad
adc
incl
mov
and
insl
add
inc
jae
pop
pop
mov
add
jns
dec
cs
pop
add
shrl
inc
jnp
aam
and
sub
shll
jne
stos
hlt
cmp
shl
and
fsub
inc
mov
sbb
repz
xlat
popf
sub
fidivrs
adc
out
cld
shrl
fcmovnu
mov
pop
sahf
xor
cld
aam
clc
jge
xchg
jmp
push
arpl
adc
cs
mov
in
cmp
xchg
std
sbbb
cmc
in
fildl
sub
cmp
and
clc
es
icebp
fnstsw
out
adc
xor
add
lahf
add
dec
xlat
cmc
add
and
adcb
add
xchg
fwait
shrb
ljmp
lret
inc
add
cwtl
add
pop
inc
mov
lods
jns
add
lcall
mov
cld
mov
ja
xchg
adc
inc
xchg
std
mov
mov
mov
repz
add
push
jbe
add
jne
dec
adc
lret
rcll
mov
pushf
adc
sbb
cmp
jg
neg
push
mov
add
push
cmp
cmp
cwtl
hlt
lcall
mov
cmp
std
and
inc
mov
movsl
add
inc
cld
xchg
loop
push
jle
ret
xchg
jb
xchg
fidivrl
cld
push
fistps
cmp
jle
and
loopne
shlb
jbe
and
dec
add
mov
push
xor
xchg
addr16
cmp
hlt
mov
cmc
rcrl
add
xor
and
mov
bound
xorb
inc
or
dec
xchg
jmp
popa
testl
dec
hlt
daa
cmp
movsl
sub
incl
addl
iret
call
lea
call
pushf
jmp
jmp
mov
pushf
movb
mov
lea
jmp
mov
stc
pushf
pushf
add
bt
bt
movzwl
shr
cmc
pushl
mov
pushf
jmp
dec
pop
mov
jnp
mov
jge
cmovs
call
clc
loop
daa
and
das
sub
daa
outsb
push
daa
lock
aaa
pushf
fstl
push
or
sub
ds
pop
rorl
bound
mov
or
arpl
xchg
into
xor
movsb
popa
shlb
and
and
cs
cmp
imul
movl
and
jb
pusha
call
add
jne
neg
std
popfw
pushf
pushf
inc
call
push
jmp
dec
stc
test
pushl
push
not
stc
neg
stc
mov
bt
push
cmp
pusha
add
pushl
cmp
lea
jns
stc
test
jmp
call
movb
lea
je
pusha
pusha
lea
jmp
lea
jne
push
stos
movl
pusha
pushf
lea
jmp
in
xchg
or
ss
adc
out
jae
leave
ret
mov
out
sbb
test
mov
jmp
sub
mov
push
xchg
mov
clc
lret
ljmp
cli
inc
push
push
ret
ds
inc
int3
xchg
aaa
sti
daa
cli
addr16
andl
adc
in
repnz
sar
add
rcrb
lahf
incb
cli
xorb
shl
adc
xor
andb
push
ljmp
jns
leave
adc
lods
mov
push
add
shlb
cli
std
xchg
lcall
loop
adc
push
inc
loop
fisttpl
cli
mov
dec
ds
inc
test
out
std
ret
jb
dec
rol
adc
pusha
into
inc
push
mov
and
adc
sar
loop
leave
mov
sar
and
pushf
roll
jns
scas
loopne
icebp
in
lods
and
xor
jl
mov
repnz
leave
mov
lock
cs
sahf
mov
mov
jp
pushf
push
and
cs
mov
jle
and
and
jp
mov
fsqrt
jbe
andb
loop
jmp
xor
jb
ret
lea
ret
mov
sarb
pop
sbbb
cmpb
pop
je
or
lock
mov
mov
int
leave
repnz
rcr
jbe
add
cli
mov
lret
orb
pop
jbe
pop
lret
shlb
sub
xor
lret
ficoms
fsubp
icebp
cltd
ret
lcall
ret
add
popa
flds
ret
jle
jbe
jb
jle
push
pop
or
mov
out
sub
loope
subb
sbbb
repnz
shll
mov
imul
outsb
ljmp
subb
mov
xorb
leave
xor
ljmp
repz
pop
sub
mov
and
rolb
jnp
mov
leave
xor
stc
cmc
popf
add
xchg
jge
mov
out
adc
in
mov
ret
ds
hlt
lock
lcall
das
and
or
ja
xor
das
dec
fsubrp
mov
gs
shlb
mov
roll
fisttpll
mov
movsb
leave
jmp
icebp
lcall
inc
paddsw
xchg
es
arpl
inc
mov
int
out
out
sub
xorb
push
dec
pop
repz
inc
inc
cmp
cwtl
mov
lcall
gs
xchg
cmp
fwait
cmp
jl
ror
icebp
cmp
cmp
ljmp
stc
mov
adc
jae
push
mov
stos
cmpsl
xchg
jne
aad
mov
or
or
cli
inc
lcall
insl
subb
adc
bound
stc
jne
mov
cmp
stos
lret
leave
movsb
inc
das
mov
loopne
div
jmp
dec
mov
xor
jl
cmpsl
fdivrs
add
repnz
repnz
pop
fwait
lahf
fmull
inc
clc
jae
out
pop
hlt
icebp
inc
pop
sub
mov
mov
repnz
bound
jbe
pop
push
sub
loopne
mov
dec
loop
repnz
xor
push
lock
cld
dec
adc
lret
bound
pop
test
xor
adc
xchg
xor
addb
inc
cmpb
call
cmp
inc
pusha
push
mov
xor
lar
roll
pop
inc
orl
in
inc
das
divb
testl
xchg
pop
lods
repz
adc
mov
jo
xchg
cmc
fisttps
lcall
inc
mov
mov
shrb
mov
cmp
dec
bound
push
shll
cmp
icebp
loop
pop
jb
jg
xor
cld
jno
sti
jns
in
fcom
sti
mov
add
test
jg
aas
ljmp
hlt
mov
loop
adc
mov
stos
mov
pop
mov
outsl
inc
adc
sbbb
test
mov
hlt
out
popa
pusha
adc
pop
xchg
dec
rclb
pop
fnstsw
lcall
cmp
fists
xchg
in
cmpsl
inc
loope
fnsave
das
mov
jb
mov
pmuludq
int
sbb
das
mov
call
xchg
pop
sub
xor
pop
decb
negl
mov
icebp
fisubrl
inc
ret
addl
add
ja
jg
push
mov
imul
inc
push
insl
bnd
ss
stc
or
shrb
jg
push
ds
das
rclb
cmp
int
jl
sbb
jb
bound
inc
pop
arpl
jns
mov
push
pop
xor
enter
fimull
push
or
repz
test
xchg
outsl
mov
inc
and
stos
int
mov
jb
push
in
inc
jmp
jo
leave
fnstsw
add
loop
cmc
pop
xor
fsubs
or
push
iret
jnp
pop
cmc
push
ja
pop
rcl
setp
jae
mov
icebp
jmp
lea
imul
mov
int3
test
in
lods
adc
das
popf
add
xor
adc
jo
cmpl
lea
insl
lock
mov
and
sarb
in
jo
inc
sub
hlt
push
mov
dec
jbe
mov
mov
out
shl
ljmp
icebp
ss
in
imul
cmpl
push
lock
xor
xor
ret
mov
mov
out
dec
rcrb
hlt
push
push
cmp
mov
out
pop
in
cmp
jb
push
pop
jne
hlt
push
adc
sbb
ret
popa
inc
xor
add
pop
or
das
jb
add
lcall
adc
das
cmp
cld
pop
popf
push
outsb
int
xchg
cmp
dec
mov
negb
add
xor
repnz
out
dec
incl
sbb
jl
dec
iret
sarb
das
adc
fldl2t
and
stc
mov
ret
pop
mov
repnz
stos
jne
add
ja
into
push
xor
and
inc
push
testl
int3
pop
jnp
mov
in
adcl
add
aaa
jle
push
mov
xchg
int
stc
pop
push
add
aam
lret
pop
or
test
mov
push
ja
pop
sbb
notb
das
test
js
std
sahf
dec
test
pop
sub
adc
sub
ds
loop
xchg
shrb
adc
das
adc
inc
fidivs
pop
xlat
jecxz
sbb
mov
ss
stos
adc
repnz
gs
push
rcr
jns
sub
stos
les
jns
aam
test
adc
inc
leave
movups
outsl
mov
sbb
repz
icebp
aad
adc
decl
mov
ds
mov
stos
stos
and
xor
add
and
cmc
inc
xor
pop
dec
outsl
dec
cmpsl
cli
repnz
leave
fistl
mov
sbb
stos
ret
and
xchg
ds
sbb
sbb
int
stos
xor
push
xchg
aas
movsl
mov
mov
push
test
es
or
xchg
inc
cwtl
test
sbb
inc
pop
jns
inc
andb
cmp
jg
adc
inc
add
adcb
lcall
fidivrs
out
push
out
lods
pop
cmp
sbb
push
jmp
negl
loope
data16
add
xor
mov
lock
push
mov
fcoml
loope
adc
sub
pusha
das
mov
push
or
add
iret
pop
leave
jg
call
add
and
sbb
mov
push
dec
jno
add
xchg
mov
push
sahf
mov
lcall
loop
dec
mov
pop
popf
loop
cmp
pop
adc
ficomps
inc
js
int3
ljmp
pop
push
clc
fnstenv
jno
cmc
pop
push
add
stos
sub
rol
pop
mov
pop
add
ljmp
in
lock
int
or
shl
mov
xchg
lahf
mov
fisubs
fbld
repnz
xor
jae
dec
and
sti
jbe
fldenv
cmp
stos
in
jbe
push
mov
rclb
stos
cmpl
cmp
movsb
pop
adc
insl
sti
add
add
mov
adc
cmp
xchg
das
jg
stc
jns
jle
rolb
lret
mov
fsubrs
push
jmp
imul
out
cli
sub
fcoml
pop
shrl
jbe
aaa
mov
push
loop
adc
cmp
lock
xor
cmpsb
xor
out
add
inc
enter
aam
jmp
xor
sbb
icebp
sar
and
out
idivb
jno
fildll
das
mov
les
out
and
idivb
sub
out
lods
xor
popa
mov
mov
mov
xor
pop
mov
xor
adc
lret
xor
in
stos
xchg
loope
psubd
sbb
int3
mov
shlb
dec
ficoml
xor
enter
into
xor
or
outsl
shl
push
mov
ret
adc
pop
inc
add
push
nop
aaa
xor
sub
push
jbe
inc
pop
adc
mov
fstps
inc
sbb
cli
leave
xor
fs
jo
lret
stos
pop
lock
mov
std
pop
mov
dec
jb
sbb
push
pop
loop
sbb
fldl
pop
repnz
in
mov
call
add
pop
out
push
pop
insb
stos
shl
cs
xor
popf
es
daa
out
adc
mov
rorl
in
popl
inc
lret
jne
jg
rolb
repz
push
fstpt
cli
pop
jge
movsb
xchg
das
dec
in
test
push
xor
ljmp
jb
fisubs
pop
pusha
add
lret
mov
or
jmp
pushf
push
add
dec
mov
imul
jnp
repz
sub
mov
imul
mov
jno
repnz
and
mov
in
fsts
test
cwtl
fisubrs
testl
xchg
in
into
inc
sarl
das
pop
pop
sub
mov
rol
pop
sub
cmpb
add
xor
sti
movsb
inc
popf
rorl
add
loope
fucomip
fisubrl
xor
add
mov
push
pop
lret
movb
loope
divb
mov
push
xchg
repz
mov
ret
mov
addr16
fisttpl
xlat
test
inc
repnz
and
pop
push
jmp
addr16
push
leave
push
fdivs
in
call
mov
xchg
loop
enter
push
jb
cli
into
in
adcb
rdtsc
scas
pop
mov
inc
pop
mov
dec
in
dec
mov
repnz
aam
add
pop
dec
out
mov
jb
loop
lret
scas
push
cmp
xchg
ljmp
jge
jnp
and
lcall
push
xor
movq
fisubrs
shrb
scas
cs
cmp
lea
stos
les
fs
das
xchg
adc
shll
jno
into
aam
mov
imul
popa
out
lock
roll
pop
jg
fs
cld
and
dec
js
repz
xor
cltd
inc
mov
mov
cmp
clc
stc
insl
das
mov
jb
pop
push
jmp
loope
aas
push
lcall
xor
pushf
pop
add
std
ljmp
mov
jno
sub
fistpll
pop
and
push
mov
sub
jmp
ljmp
jbe
shlb
cmpsl
pop
fsubrp
push
pushf
scas
mov
lock
sbb
add
or
ljmp
das
shll
jb
add
add
or
leave
and
xchg
add
and
pusha
jo
loope
add
into
mov
mov
stos
xchg
pop
mov
mov
cli
ljmp
outsl
shl
xor
incl
in
das
data16
dec
int3
into
rolb
js
sub
je
mov
fstpt
xlat
iret
test
cli
lcall
adc
das
sub
xor
dec
jns
push
jge
lods
mov
pushf
or
xor
mov
repnz
lcall
inc
add
out
out
add
int
jg
daa
push
pop
nop
and
xor
idiv
mov
xchg
imul
call
enter
inc
ret
jo
xor
into
mov
inc
repnz
mov
bound
into
mov
cmc
fdivl
lret
sbb
frstor
mov
gs
xlat
inc
out
adc
das
ret
data16
push
mov
fdivr
push
sbb
and
push
out
mov
arpl
inc
bound
shll
in
dec
jb
inc
punpckhdq
inc
ja
jp
inc
call
xchg
ret
inc
sub
jb
xor
in
mov
clc
mov
and
mov
adc
pop
js
jg
dec
jns
pop
sahf
aas
xchg
ds
dec
rolb
adc
clc
xor
pop
mov
mov
xchg
outsl
out
imull
out
cmc
sub
jbe
mov
outsl
leavew
mov
mov
add
pop
ficoml
into
mov
dec
imul
mov
cmp
repnz
stc
js
repnz
mov
cwtl
cmp
jl
mov
mov
test
adc
std
in
cmpl
loop
or
lret
sbb
mov
fidivl
cmp
cli
fwait
inc
fdivr
adc
sbb
mov
jno
xor
cmp
mov
sahf
fmul
mov
outsb
repz
dec
dec
or
les
jmp
scas
test
aas
pop
cli
iret
test
ljmp
aam
mov
icebp
int
pusha
notb
test
or
lret
loopne
mov
xor
out
out
loopne
fwait
addr16
sub
xor
ja
pop
outsb
push
push
pop
fsts
fnstenv
dec
clc
in
pop
inc
add
mulb
mov
test
sti
das
lock
xor
pop
pslld
ficoms
mov
jecxz
ret
out
imul
pop
cli
repnz
outsb
subb
out
mov
sti
push
pop
lds
ror
xor
push
sbb
repz
imul
pop
call
insb
insb
push
pop
shr
fsubs
adc
add
adc
jne
dec
jl
sub
sahf
xor
jge
clc
out
adc
xor
or
cli
pop
xor
les
shlb
inc
rolb
pop
cmp
mov
in
das
sbb
lea
xor
jecxz
mov
mov
repnz
clc
imul
mov
stos
popa
arpl
inc
adc
mov
jmp
or
aas
fisubs
cmp
test
fwait
mov
out
ror
sbb
ljmp
stc
cmpsb
inc
scas
addb
pop
rcll
or
fiaddl
pop
push
or
outsl
xor
jns
jbe
mov
jp
in
insl
add
mov
jmp
xor
fidivrs
orl
leave
ret
push
and
push
xor
adc
clc
xchg
fidivs
into
fs
xchg
or
lea
mov
inc
jecxz
outsb
add
mov
pop
xor
xchg
pop
out
mov
sbb
in
inc
adc
je
out
fnstsw
jmp
fistl
jmp
inc
xor
pushf
jle
adc
repz
aam
sbb
xor
sub
fistpl
push
adc
das
push
xor
mov
das
lock
pusha
fs
mov
shl
fwait
cld
sti
stos
or
jae
sub
or
push
rcrl
hlt
mov
pop
adc
lcall
xchg
dec
das
ret
outsb
pop
dec
mov
jns
in
fimuls
popf
jns
push
pop
les
push
or
jp
cmp
in
iret
aam
add
out
mov
fstp
lea
stos
xor
jno
mov
scas
mull
stos
xor
cmpb
cmpsl
and
xchg
xor
fidivrs
sub
cpuid
xor
xor
ffree
adc
popa
movsb
loop
repnz
mov
loop
shl
das
sbb
hlt
andl
push
inc
ficoml
popa
cmpsb
inc
sbb
mov
mov
push
sbb
jge
mov
lods
fisubrs
aaa
not
xor
adc
push
in
xor
sub
jbe
inc
bound
je
icebp
pop
xchg
or
loop
pop
cs
stos
stc
pop
je
xor
jge
ss
test
in
mov
sub
in
pop
ret
add
jo
setae
dec
in
in
fcmovnb
mov
dec
leave
adc
pop
xchg
stos
inc
jmp
outsl
lret
repnz
scas
push
push
out
inc
aad
mov
mov
mov
xor
pushf
popa
std
mov
test
das
push
adc
add
mov
loope
jge
das
pop
and
cld
sti
xor
inc
jno
mov
fsubrp
pop
test
inc
mov
sub
lret
mov
inc
adc
adc
subl
cli
lods
mov
dec
jmp
dec
lock
jns
loopne
test
popf
rorb
lret
ds
push
cli
and
loopne
inc
mov
lods
das
xor
out
sub
roll
jbe
push
rorb
incl
add
inc
pop
xchg
xchg
ret
or
cltd
mov
lock
adc
adc
jecxz
fildll
sbb
ret
jno
sahf
fistps
cli
jle
je
adc
mov
mov
arpl
sahf
shlb
dec
lea
lea
orb
xor
dec
dec
and
or
pop
adc
pop
dec
out
loope
xor
arpl
in
lahf
mov
fs
int3
sub
out
addr16
ficompl
xor
cmp
lret
mov
pop
sub
into
or
push
das
hlt
pop
les
jg
imul
pop
mov
leavew
icebp
jns
jb
mov
cmp
sti
sub
test
addl
inc
cld
push
out
xor
and
rorb
add
cld
sbb
repnz
sarl
add
fisttpl
or
adc
stos
ljmp
mov
pop
fiadds
xor
jo
in
icebp
ljmp
sub
push
inc
mov
jge
pop
mov
pop
mov
mov
cli
adc
es
xchg
repnz
sub
push
xor
mov
subl
cld
sub
cmp
mov
inc
subl
inc
push
aam
out
push
outsl
sbb
add
jb
sbb
or
dec
mov
movsb
xor
stos
cmc
pop
std
orl
pandn
lock
push
imul
lock
pop
xor
leave
inc
push
sarb
orl
ja
femms
fs
das
dec
repnz
lock
das
dec
pop
dec
xchg
push
mov
dec
push
loop
jb
mov
in
int
jle
and
jb
jmp
xor
lods
push
xor
test
lret
jge
loope
out
frstor
dec
icebp
dec
sarb
xor
add
add
cmp
arpl
lock
roll
jmp
test
bound
fs
mov
rcrl
adc
push
popl
sarl
ja
fstpl
lcall
js
adc
fimuls
pop
adc
lods
imul
icebp
push
mov
das
es
fnstsw
adc
mov
bound
mov
lds
sahf
dec
das
ret
xchg
mov
xchg
lock
leave
sub
sbb
das
dec
push
popa
xchg
pusha
pop
push
jmp
sbb
aad
fnstcw
lret
inc
adc
add
mov
mov
std
dec
xor
or
fisttpll
cld
cmp
sahf
rolb
mov
incb
bswap
or
sbb
xor
add
das
fsubrs
divl
js
bound
lahf
xchg
ss
jg
cmp
pusha
adc
in
ljmp
dec
cmp
out
dec
add
in
out
xchg
les
insl
pop
stos
pop
icebp
dec
fistpll
pop
leave
adc
neg
mov
mov
adcl
fidivl
cmp
adc
xor
and
pop
xor
aam
loopne
loop
mov
mov
divb
loopne
sbb
out
sbb
ret
jae
sub
leave
nop
dec
jmp
sbb
cs
sarb
lods
insb
in
leave
add
leave
pop
jne
pushf
and
mov
xor
push
mov
add
inc
inc
dec
fnstsw
sub
xor
xor
push
cmpb
cmp
subb
mov
add
xchg
push
pop
xchg
shll
cwtl
mov
je
sub
shlb
movsl
in
jnp
ret
cmpb
jno
fidivs
int
out
imul
and
leave
pextrw
popa
xchg
fldenv
xchg
shll
aaa
pusha
cwtl
callw
cmpsb
fsts
inc
adc
push
loop
cmpsl
xor
cmp
mov
aad
mov
mov
adc
mov
lods
mov
loope
mov
adc
cli
xor
xor
xor
dec
bnd
std
out
push
mov
mov
arpl
cld
cmp
pop
push
popa
lea
ret
int
add
sbb
subl
scas
push
out
lea
test
or
lea
xor
fdivl
jmp
out
xchg
sbb
xlat
pop
lahf
insb
ljmp
popa
ja
sar
clc
dec
loopne
xchg
jecxz
jmp
mov
add
and
cmp
loope
mov
pop
mov
cli
out
jg
leave
roll
xor
shl
pop
mov
add
iret
jbe
xor
icebp
inc
pop
sbb
jmp
push
fsubs
aas
xor
jno
cli
push
xchg
xchg
add
sbb
pusha
stos
pop
jmp
xchg
add
inc
mov
xor
jae
jnp
in
test
cmp
cmpps
cmp
nop
movhps
outsl
fldl
in
bnd
fidivl
add
xchg
lret
into
outsl
xlat
jle
shll
push
clc
fistpl
jecxz
adc
cmc
add
inc
ljmp
lods
fwait
mov
lret
cli
test
cmp
pop
dec
lret
push
lret
and
fwait
movsb
fldl
jo
xchg
movsb
dec
fisttpll
jle
repnz
out
lret
pop
ja
movsb
push
leave
mov
inc
or
movsb
aas
mov
clc
dec
mov
push
ja
stc
leave
mov
movsb
add
jecxz
mov
mov
cmp
mov
mov
jbe
arpl
sub
clc
or
cwtl
jle
adc
jp
or
lea
stc
subb
repz
ss
dec
push
daa
popf
dec
or
mov
test
movsl
cmp
sarb
push
xor
or
addb
fnstcw
ss
test
daa
cmp
imul
jmp
sbb
sbbb
loop
pop
push
mov
or
xchg
add
jnp
cli
jb,pn
icebp
lahf
sbb
xor
and
das
sbbl
in
rcll
adcl
insl
std
push
jge
dec
pop
movsb
scas
popf
jo
leave
stos
idivb
xor
sub
aaa
sub
add
or
pop
inc
xor
das
mov
shll
sti
push
mov
negl
push
icebp
adc
hlt
xor
lods
mov
mov
sti
mov
pop
ret
jmp
cli
cmp
push
pushf
xor
test
dec
mov
jl
hlt
cs
hlt
xlat
lock
xor
outsb
and
sbb
sub
shll
or
das
adc
cmpsl
xor
cmp
shrl
pop
lret
mov
mov
mov
std
pushl
inc
clc
pop
xor
imul
mov
push
jecxz
sub
mov
inc
mov
dec
subl
inc
jge
mov
sbb
push
xchg
mov
int3
neg
inc
fists
jmp
lea
daa
andl
xor
xchg
fsin
push
pop
in
pop
adc
ret
mov
in
fisubrl
js
das
mov
sub
ljmp
pop
and
push
clc
out
sub
jp
loopne
outsl
jl
dec
call
out
mov
std
or
xor
mov
out
das
inc
adc
fcoms
sti
into
stos
das
jl
adc
mov
sbb
test
jp
jecxz
cltd
push
jle
push
adc
xor
xor
in
xor
fstpt
ja
arpl
sahf
push
inc
push
dec
sub
mov
fs
xor
mov
xchg
fldcw
test
lea
mov
jns
add
imul
das
jo
jle
out
loop
mov
pop
lret
lea
add
pop
dec
lcall
roll
das
loop
fcomp
ficoml
aaa
fistps
stos
sub
les
add
iret
int3
jp
add
shlb
inc
cmovle
xchg
das
mov
mov
cmpsl
push
mov
ljmp
mov
mov
aad
jp
loope
setb
mov
mov
inc
push
mull
push
push
mov
jg
lock
push
lods
insb
ret
jmp
or
ja
loope
out
xor
jno
add
jno
stc
dec
cli
mov
jmp
jno
add
addl
pop
inc
sbb
and
insl
sbb
and
xchg
cmp
inc
jno
shr
xor
jp
xor
pop
add
clc
cmp
ljmp
mov
aam
pop
and
cmpsl
das
pop
or
pop
movsb
push
fldcw
mov
dec
jbe
rolb
xor
pop
jb
movsb
sbb
fwait
pop
mov
into
xor
stos
add
sbb
and
add
in
loop
gs
and
fdivs
fnstsw
sahf
ja
push
xor
mov
adc
xor
pop
xor
inc
add
in
out
adc
aad
mov
sbb
sub
push
jae
movsb
push
aam
shll
xchg
ret
mov
lcall
lret
jmp
and
dec
push
es
xor
out
pop
fnstcw
push
xor
mov
mov
or
pop
scas
std
dec
cltd
and
stc
insb
push
pusha
cmp
adcb
xchg
ljmp
sub
lret
xor
or
pop
out
cmp
rorb
add
bound
xor
outsb
imul
pop
sub
test
xor
sarb
pop
popf
lock
aas
sbb
sbb
inc
in
sti
and
mov
pop
movsl
mov
jmp
pop
adc
inc
xor
push
cs
mov
cmp
hlt
stos
jbe
mov
shl
sub
push
mov
fildl
cmpl
pop
add
add
jge
leave
hlt
jnp
xlat
add
adc
xlat
or
icebp
mov
stos
xor
mov
and
aad
sti
mov
mov
std
stos
pop
xor
mov
bound
das
js
rcl
pop
xor
lock
mov
ljmp
aaa
add
loopne
or
mov
and
jb
dec
cmpsb
xchg
mov
pop
or
outsb
shll
andb
sbb
scas
negl
out
pop
adc
add
lret
mov
pop
push
jbe
xor
sub
inc
xchg
jle
xchg
loopne
pop
xlat
push
fs
out
inc
jge
aad
pop
push
icebp
stos
pop
repnz
push
sete
sbb
jno
repz
outsl
pop
lcall
jne
aad
decb
jecxz
lock
aaa
mov
mov
mov
pop
pop
mov
push
int
jp
mov
mov
pop
test
das
or
inc
cmp
push
fidivs
xchg
xor
xchg
rolb
jp
jb
sbb
pop
xor
mov
push
int3
das
mov
push
dec
lret
add
out
test
aam
pop
jo
js
into
loop
test
aaa
inc
add
xchg
jle
xor
rcll
adc
leave
mov
jg
iret
mov
test
lock
js
addl
cmpsb
insb
fldt
xor
rol
pop
iret
jl
xchg
das
sar
adc
or
repnz
popa
shll
jge
dec
loop
pop
int
mov
lcall
stos
mov
test
enter
add
in
ret
mov
jge
mov
bound
enter
stc
and
leave
icebp
xor
xor
inc
cli
nopl
rorl
sahf
inc
xorl
jmp
sti
pop
data16
sbb
jbe
shlb
out
repz
jg
daa
push
jne
out
and
outsl
sahf
cmpsb
aam
cmp
aas
out
out
adc
xchg
aad
aad
xchg
jns
jo
mov
addr16
lock
cld
jle
dec
imul
add
adc
or
jno
add
sub
sbb
mov
adc
push
cmp
mov
pop
stc
hlt
lcall
fucomip
leave
jbe
push
mov
cmpb
movsb
xchg
sub
shl
mov
leave
sbb
je
les
xchg
test
mov
repnz
mov
aaa
mov
test
rcl
clc
ja
stos
pop
fmul
cmpsl
mov
jo
cmp
addb
xor
pop
mulps
and
dec
jb
lock
add
mov
lahf
push
jmp
call
xor
ja
cmp
scas
or
mov
je
pop
nop
lock
das
adc
pop
mov
push
jae
or
push
mov
mov
and
sbb
ret
ficoms
shr
mov
sahf
and
mov
das
jnp
outsb
dec
xorl
icebp
cwtl
dec
mov
imul
outsb
mov
test
es
clc
xor
movsl
test
xor
aad
xchg
jb
push
out
in
test
cmp
outsl
imul
mov
or
or
leave
pop
daa
inc
out
add
sub
out
add
and
movsl
stc
cltd
fmull
pop
mov
mov
lods
stc
movsb
xor
lret
xchg
push
das
pop
mov
mov
push
pop
leave
add
xchg
popa
and
das
adc
cmp
insl
xchg
xor
cmp
or
mov
repnz
mov
and
adc
scas
lock
call
add
mov
ljmp
mov
into
sbb
adc
sub
and
lret
unpckhps
lret
insl
dec
inc
lret
das
cmpsl
cmp
leave
movl
inc
jb
jns
sub
cmp
mov
addr16
sub
fcoml
popa
sub
iret
fsts
ljmp
cmp
mov
mov
push
std
stos
das
sub
adc
int
inc
aaa
mov
out
push
pop
dec
sar
pop
inc
outsb
pop
xorb
das
shlb
lock
mov
pop
adc
jno
dec
sub
mov
sti
stos
fisubl
into
xor
xchg
int3
push
add
sti
or
push
ljmp
stos
test
ja
pop
mov
bound
stos
data16
add
das
xchg
pop
inc
adc
sub
fidivs
nop
std
adc
push
pop
js
pop
stc
mov
mov
jl
fdivrl
mov
add
add
or
xor
sti
jne
mov
jnp
andb
jbe
xchg
clc
pop
xor
xchg
out
dec
shll
mov
pop
fs
add
push
pop
add
cld
adc
lea
je
adc
fdivrp
out
add
js
push
fsubrl
sti
xchg
push
push
and
sub
es
loop
das
xor
notl
xor
ja
cld
shl
cmp
out
lds
add
cmp
push
sub
push
int3
xorb
inc
push
ljmp
cli
clc
stos
xchg
scas
jae
insl
testb
ljmp
or
repnz
jno
add
fdivs
bound
mov
ljmp
out
cwtl
shrl
repnz
gs
rcrb
fldcw
dec
or
push
insb
dec
add
loopne
mov
jo
mov
aaa
sti
orl
or
mov
dec
ror
push
out
cmp
jb
scas
ss
ljmp
int
sarl
jmp
rcrb
pop
fidivs
das
push
aaa
mov
inc
inc
out
push
push
cld
loop
repnz
mov
data16
and
repnz
in
mov
mov
or
sub
pop
xchg
fdivl
pop
pop
ret
cmp
xchg
mov
das
pop
add
add
sbb
dec
jp
call
loop
jo
and
and
mul
dec
data16
ret
pusha
arpl
bound
add
rcrl
jo
inc
jecxz
adc
nop
sub
fidivrs
lahf
push
pop
arpl
stos
dec
fidivs
testb
adc
bound
mov
add
jno
imul
lret
add
loop
movsl
push
pop
aad
mov
sub
dec
loop
in
arpl
inc
xchg
js
out
ss
daa
inc
mov
lock
adc
add
push
inc
inc
cltd
mov
stc
sbb
jl
pop
dec
cvtpi2ps
fists
push
pop
int
stos
fidivs
adc
cli
pop
loope
mov
add
pop
les
cmp
or
repnz
jmp
add
cli
add
ja
outsl
dec
mov
adc
cmpsl
xorb
add
test
lock
add
mov
incb
fistps
cmp
lret
rcr
push
xorb
in
ja
aas
imul
fsubl
in
jg
out
sahf
mov
movsb
jne
push
decb
addl
ror
outsl
pushl
loop
pop
xor
add
nop
sub
cmp
out
push
imul
xor
popa
fisttps
push
int
into
outsl
xorb
xchg
mov
mov
cmp
jp
xor
sbb
push
pusha
mov
mov
and
dec
int
adc
sbb
ja
or
mov
cwtl
pop
cld
pop
leave
loope
cmp
fs
inc
orl
addb
mov
pop
ret
adc
das
dec
hlt
add
nop
jl
adc
cld
sbb
jp
lods
mov
or
adc
and
push
and
cmpsb
das
mov
add
mov
add
sbb
shl
and
jg
orb
mov
xchg
out
xchg
fcomps
mov
push
push
mov
add
in
les
jl
stos
fisubs
pop
xchg
add
push
pop
mov
bound
pop
and
bswap
sti
push
and
into
add
rcrl
lret
out
inc
jl
cmp
dec
jno
pushf
add
les
mov
cwtl
mov
aad
add
xor
or
jbe
fs
jp
or
or
xchg
xchg
mov
fnstenv
idivl
pop
xchg
sbb
loope
subl
jo
mov
sbb
out
test
add
sub
mov
xchg
ret
fdivs
add
in
fucomp
fisubs
jno
mov
movsb
int
clc
sub
in
iret
mov
je
mov
mov
ret
jne
inc
push
pop
add
xchg
mov
mov
imul
stos
xor
sahf
dec
pop
es
lods
and
cmp
lahf
out
adc
add
dec
and
add
out
in
xor
xorl
xor
xorl
xor
shr
pop
test
incl
push
pop
add
std
mov
xlat
jo
dec
dec
xor
add
popl
push
addl
ret
jge
out
popa
xchg
ja
adc
inc
dec
add
imul
pop
iret
fwait
xchg
out
sub
jne
shr
pop
adc
rorl
add
adc
pop
add
mov
add
fldcw
xchg
loopne
jns
cmp
jp
shrb
test
rcll
jbe
iret
je
rcl
out
xchg
sub
sbb
add
fcmovb
lods
push
into
dec
add
push
push
xchg
popf
fidivrs
cmpsb
fsubrl
add
repnz
adc
add
pop
xor
mov
xchg
xchg
stos
in
sti
call
mov
movsb
sbbb
cli
add
dec
lock
in
popa
xchg
or
add
sub
mov
aad
je
out
add
ss
repz
icebp
jg
push
xchg
jnp
sub
adc
pop
pop
mov
aas
sbb
adc
or
ret
adc
les
fdivr
add
sub
dec
jno
fmul
lret
out
sbb
lcall
loop
rcrb
push
ss
adc
mov
mov
int
shl
inc
call
inc
jne
in
in
mov
loope
stos
loope
out
mov
sub
push
nop
xchg
aad
dec
pop
add
adc
pop
cltd
ficomps
add
mov
jb
jns
cmp
pop
lret
mov
test
loope
add
comiss
mov
imul
add
and
add
pop
add
add
gs
jbe
inc
xor
inc
pop
add
testb
add
mov
aaa
enter
add
orb
dec
add
rolb
add
cmp
xor
cmc
inc
lds
je
std
rclb
or
xor
in
je
jge
call
dec
xor
add
insb
lods
push
test
int3
adc
stos
add
loopne
pop
lret
js
sbb
adc
sbb
mov
sbb
sbb
imul
js
add
add
jo
mov
xchg
cmp
xchg
inc
jo
sub
and
and
add
pop
sbb
and
scas
push
push
add
fiadds
sbb
or
std
popf
add
inc
call
add
stc
imull
add
or
cmp
lret
pop
cmc
mov
add
dec
adc
int
stos
sti
and
std
xor
cltd
shrl
aaa
mov
xchg
cld
xor
push
cmpsb
hlt
and
pop
popa
and
scas
cmpsb
jle
mov
lea
add
push
push
cmp
or
sbb
sahf
das
add
shr
xchg
adc
push
jb
cmp
pop
pop
lret
add
in
cmc
push
and
jnp
loopne
not
addb
adc
add
imul
push
xor
pop
xchg
icebp
into
mov
sahf
loope
aaa
in
pusha
adc
pushf
jmp
pop
call
and
push
sbb
sub
jbe
stos
cli
cld
ds
scas
and
icebp
xor
add
rorb
in
clc
lock
movsl
inc
jecxz
stc
lret
addb
inc
adcl
push
and
movb
jns
shll
imul
cwtl
in
inc
hlt
push
fcmovnbe
lret
gs
add
push
sbb
int
lock
popa
out
push
xchg
pop
and
outsb
cltd
dec
adc
shrl
jge
and
jg
xchg
add
jae
lods
hlt
mov
or
mov
addr16
mov
std
adc
jl
cltd
les
ret
add
xchg
movsb
xchg
mov
incl
jne
hlt
inc
ja
or
popa
lret
in
push
push
cmc
add
xchg
outsl
fs
add
cmpsb
aam
inc
mov
out
add
or
fnstcw
mov
adc
add
fsubs
es
mov
insb
loopne
cld
add
add
lret
ds
fsubrl
or
add
rorb
add
popf
jns
fwait
mulb
mov
stc
rcrl
pop
add
inc
js
mov
andb
ficoml
lret
jmp
cmpsl
outsb
push
fcoms
loope
hlt
jo
mov
adc
jle
pop
cld
sbb
ret
adc
pushl
scas
sub
pop
or
popa
int
mov
enter
cmp
inc
add
sub
mov
dec
jge
out
mov
add
lods
sti
in
push
inc
adc
mov
jnp
add
mov
xor
je
in
imul
xor
in
mov
push
or
mov
sub
clc
arpl
jae
push
dec
push
ret
mov
or
loopne
inc
hlt
std
adc
sbb
mov
add
fildl
xchg
dec
out
out
roll
xchg
adc
and
sub
bound
pop
add
lods
sub
lcall
push
pushf
or
sub
lcallw
sti
pop
scas
xor
mov
sub
pop
aaa
and
dec
fdiv
testl
ret
flds
mov
push
add
xchg
pop
pop
jae
ficoms
cmp
inc
mov
subl
dec
push
stc
sub
fsubrl
add
int
jnp
andb
jg
mov
mov
mov
add
enter
mov
jmp
pop
or
add
push
nop
mull
das
clc
shll
mov
xchg
mov
stos
sub
imul
push
iret
cltd
test
ss
jno
cmp
imul
sarb
hlt
pop
pop
pop
stos
sub
ret
rorl
mov
insb
enter
and
rclb
xchg
xchg
cmp
sbb
lcall
jg
mov
aaa
push
mov
mov
lock
or
aam
jae
add
sub
rorl
add
loope
xchg
pop
push
jecxz
adc
and
sub
je
pusha
adc
sbb
add
add
iret
jae
fists
and
pop
jbe
jb
jmp
or
mov
out
add
loopne
push
or
call
leave
sub
das
jg
lcall
add
orb
jb
sbb
mov
pop
add
into
stos
add
sbb
jmp
jg
add
fs
nop
xor
into
test
adc
xlat
je
push
in
pop
stos
push
mov
mov
incl
inc
xchg
xchg
mov
pop
push
cld
lret
test
add
sbb
sub
fisubrl
xor
popa
leave
and
xlat
inc
inc
jl
lock
pop
xor
and
push
mov
jp
mov
pop
int3
lods
in
and
adc
adcl
nopl
add
dec
mov
jae
jp
add
dec
aad
in
es
jnp
add
movsb
andb
add
inc
nop
lcall
jge
push
outsb
pop
sub
jns
push
push
add
sub
adc
pusha
stos
lods
and
sub
sub
pop
faddl
loop
ljmp
push
icebp
arpl
add
es
or
fstpl
adc
insl
enter
fwait
into
add
lret
xchg
push
pop
pushf
jmp
adc
movsb
addl
sarb
push
add
ljmp
add
loopne
add
mov
cltd
sbb
clc
out
std
jmp
std
xchg
xor
cmpsl
fsubs
bound
cmp
jle
and
xchg
xchg
jmp
adc
cmpsb
dec
test
cltd
adc
inc
nop
sbb
or
sbb
std
add
testb
mov
rcr
enter
and
enter
add
les
and
clc
adc
lcall
dec
add
subl
mov
int
pop
cmpsb
and
cmc
add
mov
lret
push
pop
add
int3
hlt
mov
adc
push
pop
loope
inc
sub
xchg
repnz
xchg
testb
jnp
enter
flds
nop
les
jne
jo
cmpsb
lahf
addl
mov
or
jg
mov
fmuls
xor
subl
lcall
push
out
lea
les
pshufw
fdivr
fwait
mov
or
xchg
add
leave
clc
std
push
mov
inc
push
lods
mov
ss
sbb
push
add
mov
jae
loope
dec
mov
cmp
mov
in
and
add
jg
andb
clc
and
lret
lcall
sbb
jnp
jmp
iret
or
xor
sbb
movsb
xchg
mov
sbb
hlt
leave
fdiv
stc
mov
sbb
add
lcall
mov
cld
stos
push
jge
enter
cmovae
push
in
subb
aad
movsb
flds
adc
or
cwtl
out
cld
mov
xor
roll
arpl
gs
or
add
lock
jg
in
add
mov
insb
add
sbb
inc
iret
loop
jns
incb
rcrl
fs
add
fsubr
test
xchg
cmp
push
rolb
inc
or
stc
aas
add
mov
add
and
xor
add
cmp
jno
add
push
mov
mov
popa
push
pushf
or
insl
andl
mov
push
icebp
push
dec
add
pop
insl
or
fiadds
testl
or
popa
and
and
add
cltd
pop
icebp
adc
add
shl
push
jnp
in
fidivl
imul
dec
cltd
xchg
xor
mov
xchg
div
outsl
fdivrs
add
ds
aam
xchg
or
cmp
mov
push
adc
adc
shlb
stc
jo
push
hlt
jle
sub
cmp
add
clc
push
jge
sub
out
fsqrt
or
cmp
sbb
push
mov
xchg
sub
das
imul
adc
repnz
jb
ss
mov
or
push
dec
dec
repz
sbb
and
jnp
add
adc
or
jp
inc
es
rolb
in
popf
push
or
into
add
insl
push
xchg
jp
xchg
out
dec
jmp
add
mov
cmp
rorb
and
mov
mov
mov
mov
inc
jecxz
push
roll
adc
mov
jg
push
pop
add
out
or
cltd
lds
mov
push
cmp
mov
cmp
cmpsb
js
cmp
clc
pop
inc
incb
repnz
ss
pop
push
pop
xorb
into
lahf
sub
sub
incl
push
int3
rorb
inc
test
add
or
or
out
mov
sbb
mov
sub
mov
mov
pop
mov
add
fcompl
cmp
addb
stos
std
rclb
mov
jbe
push
fcmovu
fisttpl
ss
call
fisttps
test
in
dec
dec
push
add
pop
inc
pusha
and
xor
call
mov
xor
movsb
test
addr16
stc
xchg
cmp
fwait
pop
in
aad
add
xchg
aam
xchg
insb
cmpsb
add
jecxz
add
mov
sbb
add
ror
outsb
rorl
xor
stos
xchg
jg
cmpb
and
fnstsw
sbb
daa
sarb
jnp,pt
push
lret
cld
das
test
arpl
jecxz
faddp
shl
and
push
mov
out
ss
inc
sbb
mov
sti
jbe
gs
or
add
mov
test
mov
bswap
jg
dec
clc
stos
insb
inc
icebp
inc
push
in
test
adc
cli
sarl
add
fcoms
sbb
sbb
inc
movsb
adc
add
mov
or
push
fs
fistl
and
pop
add
loop
jns
les
or
out
mov
mov
xchg
jbe
ret
repz
add
or
sub
jne
add
and
add
adc
jbe
add
sti
mov
mov
int3
add
push
imul
fsubrl
lock
push
xchg
add
mov
push
fstpl
fists
dec
insl
xchg
add
movsb
popf
cmp
xor
inc
pushf
js
mov
push
scas
mov
push
mov
int
pop
jno
xor
mov
push
inc
and
add
cmpsb
fs
add
adc
sbb
divb
and
push
xchg
hlt
push
outsl
inc
pop
inc
cs
sbb
leave
mov
inc
dec
or
fildll
cld
inc
out
jmp
push
and
and
add
aam
cmc
mov
add
loope
sbb
sarl
adc
popf
adc
mov
in
insl
cmp
aam
fsubr
jns
and
loope
adc
jp
add
pop
js
cmp
or
lret
filds
pop
xchg
les
mov
or
add
mov
cmpsb
push
push
dec
pop
cltd
adc
repnz
or
ja
popf
pop
add
test
rcr
add
adc
dec
loop
imul
jg
shrb
pushf
xchg
leave
dec
xchg
sti
jp
xchg
inc
test
add
or
sub
pop
push
pop
push
jmp
mov
imul
outsb
sbb
hlt
or
shrb
in
add
jge
push
add
mov
inc
in
iret
hlt
roll
js
ljmp
adc
test
sub
add
ljmp
add
faddl
add
fstpl
add
cld
inc
loope
jns
mov
fildl
std
call
or
rcl
loop
inc
insl
jns
inc
pop
test
inc
dec
xchg
sbb
rolw
add
fbld
dec
paddusw
add
mov
mov
rcrb
add
scas
inc
ss
cmp
add
mov
xchg
ret
bound
jecxz
test
in
add
dec
sbb
lret
xor
cmp
mov
inc
and
mov
cmp
xor
cmp
ja
xor
xor
pop
std
cmp
xchg
inc
rorl
rol
insl
and
cmp
ficompl
push
movsl
cmp
xor
sbb
aas
cs
fisubl
das
and
imul
incl
sbb
mov
add
lret
or
add
ret
hlt
mov
test
sub
push
adc
inc
in
xlat
adc
decb
loope
shr
and
inc
aaa
imulb
das
jbe
scas
mov
xor
enter
add
lcall
hlt
inc
cld
or
cmpl
mov
rclb
push
fidivs
sbb
mov
pop
jbe
mov
and
call
xchg
cwtl
push
ja
daa
adcl
pop
scas
jne
scas
add
cld
int
dec
or
xor
xchg
xchg
add
push
adc
lahf
sbb
fnstsw
clc
jg
sti
and
inc
adc
leave
or
nop
stos
loope
mov
fisttpl
inc
add
ret
push
mov
mov
scas
xor
cmp
add
pop
add
mov
or
and
inc
jp
xor
insl
inc
and
or
add
shrl
inc
int
push
add
insl
or
add
int3
inc
hlt
and
loopne
aaa
loope
xchg
add
and
lds
loop
cmp
je
mov
mov
in
es
aam
ficomps
cmp
aaa
adc
incl
ds
in
adc
xchg
call
cmp
push
cmc
mov
or
mov
xor
jnp
mov
xor
jo
adc
pop
jae
orb
inc
fiaddl
adc
or
dec
pop
in
jl
les
imul
dec
lret
cld
add
or
in
and
lret
cmpsl
add
xor
stos
ja
pop
outsb
ljmp
cld
jl
lods
imul
shl
xor
add
jecxz
jmp
add
cltd
sub
es
pop
or
movsb
shl
pop
add
add
repnz
mov
data16
dec
into
and
dec
daa
add
testb
pushf
push
cmp
inc
pop
fstpt
mov
jge
add
arpl
test
call
jp
les
xor
je
xchg
xchg
sbb
sti
sbb
rorb
movb
pop
inc
and
add
or
mov
in
mov
jg
add
ljmp
sarl
in
push
sub
ret
addr16
xorl
push
es
add
sub
lret
pop
lods
stos
add
test
push
outsb
hlt
jbe
add
inc
es
add
adc
add
push
stc
insl
cld
pop
out
lret
sub
mov
add
clc
jns
sbbb
in
mov
push
cmpsb
dec
mov
add
pushf
inc
cmp
dec
stc
dec
adc
add
lahf
rcl
and
lods
xchg
dec
repnz
je
add
imul
mov
faddl
jp
and
stos
flds
gs
adc
sub
ds
mov
jo
xchg
jno
cli
out
add
mov
add
rcrl
mov
add
outsb
cmp
xor
jne
mull
or
sub
add
aad
and
icebp
inc
hlt
sahf
lea
fmulp
cmp
mov
add
dec
dec
add
popa
cmp
movsb
pushf
adc
sub
jp
bound
mov
or
addb
jo
mov
mov
add
inc
mov
or
and
cmp
sbb
test
xor
pop
xor
xchg
test
lret
lods
daa
lret
rolb
pop
faddl
add
outsb
int3
shll
pop
xchg
add
ret
and
cmpsb
int
inc
clc
fmull
add
lods
fwait
add
lahf
cmp
add
orl
add
fdivrs
std
mov
popf
pop
enter
sarb
sub
jp
in
stc
jno
mov
and
insb
popf
es
clc
add
cmp
mov
ja
sahf
mov
decl
pusha
leave
mov
aas
testb
add
nop
in
dec
ret
cmc
adc
jle
int3
movsb
inc
jae
decb
add
loope
stos
add
and
add
jns
cmpsb
enter
hlt
daa
mov
dec
cmp
add
pop
mov
in
xchg
cwtl
enter
mov
or
cmp
sbb
add
inc
cli
cs
stos
add
adc
and
andl
mov
pop
rcl
pop
xchg
inc
lret
rcr
inc
test
lret
in
cwtl
sub
lods
xchg
mov
ret
mov
jp
les
push
test
sub
pop
in
loop
out
popl
cli
mov
scas
dec
add
enter
push
lcall
push
push
daa
add
xchg
fldl
incl
in
or
icebp
and
add
lds
ficomps
pop
or
roll
in
mov
sbb
mov
icebp
movsb
mov
cli
or
test
mov
inc
subb
mov
lods
pop
cmp
dec
enter
jns
cli
addb
inc
mov
sub
jno
mov
sub
sarl
in
add
testb
bound
add
mov
push
adc
hlt
and
loop
add
les
pop
mov
out
add
push
insb
mov
add
cmp
outsl
xchg
cld
mov
inc
lods
add
inc
addl
or
movsl
inc
imul
aas
repz
cmp
xlat
mov
add
test
data16
hlt
inc
in
sub
mov
shrb
out
pop
add
cmpb
stos
adc
in
add
fisubl
jno
push
arpl
out
add
add
es
and
adc
jb
filds
lock
pop
hlt
xchg
les
jge
loopne
xor
or
sti
lret
inc
push
or
and
jae
xchg
fisubl
mov
inc
mov
out
enter
xor
fbld
adc
imul
push
in
arpl
ljmp
lret
les
gs
or
push
add
popf
pop
and
and
mov
add
into
xor
add
fxch
in
xchg
xchg
push
cmp
dec
mov
push
cwtl
lods
lds
cmp
add
fiaddl
add
jns
xor
push
add
nop
out
mov
or
add
mov
data16
int3
or
into
mov
fwait
jl
idivl
push
add
adc
dec
sub
pop
ja
adc
inc
out
adc
lock
push
rolb
lahf
ret
shrb
and
arpl
lods
dec
add
pop
xchg
insl
out
push
jmp
lret
cmpsl
dec
test
sub
je
dec
mov
inc
out
aam
rcll
icebp
add
xchg
xor
popa
xchg
pop
das
loope
lcall
cmp
in
and
mov
mov
pop
cltd
imul
insl
movsb
addl
les
mov
sbb
pushf
pop
lods
xor
mov
ss
rorb
test
mov
mov
pop
jo
lods
pop
mov
mov
dec
cmp
mov
and
mov
mov
loop
inc
mov
repnz
call
push
mov
sub
pop
lret
mov
sbb
popf
mov
repz
add
cmpsb
cmp
add
mov
xlat
jge
dec
xor
incb
insb
mov
or
pop
jecxz
pushf
sbb
push
movsl
movsb
in
cmp
mov
push
sub
sub
aad
call
mov
ljmp
scas
outsb
dec
popl
repnz
pop
push
call
sbb
adc
add
pop
lret
cli
push
out
nop
adc
loope
jne
inc
add
or
scas
add
jl
cmp
popa
xor
push
stos
fwait
repnz
data16
xchg
testb
sub
mov
pop
outsb
inc
and
cmp
mov
popa
sub
cmp
and
loopne
stc
lret
fdiv
leave
mov
lods
je
or
cmc
test
js
notl
mov
sub
loopne
andl
or
cmp
arpl
cmp
push
xchg
insb
popa
pop
xor
shll
addb
lret
mov
test
mov
pop
and
cs
pop
mov
lds
adc
outsb
sub
xchg
test
mov
ja
jl
repz
sahf
xor
mov
push
movsb
inc
jb
mov
inc
sub
jb
fmull
icebp
sub
out
jge
pop
incl
mov
aas
pop
je
stc
scas
sbb
xchg
xor
test
jne
xor
adc
lcall
xchg
call
pop
cmp
popa
push
jnp
adc
mov
push
popa
add
loop
mov
gs
jns
popa
xchg
leave
pop
push
imul
or
shll
inc
mov
jnp
add
jl
lock
cmp
push
data16
aas
idivb
fisttpl
leave
mov
xchg
mov
sub
push
lods
inc
leave
pop
sbbl
pop
add
ret
add
outsl
addb
xchg
mov
fwait
lcall
adc
call
std
fstl
mov
mov
sub
push
out
mov
in
int3
mov
adc
cmp
mov
push
testl
popa
in
inc
imulb
es
jo
loop
xor
scas
pop
or
scas
ss
add
inc
pop
xor
xor
jb
mul
lcall
push
dec
mov
push
cmp
scas
cmp
push
xchg
inc
pop
sahf
incl
xor
jno
push
clc
adc
loope
xorl
dec
js
das
add
and
jecxz
ret
dec
les
test
cmpsb
ljmp
mov
pop
push
add
sbb
lods
xor
sub
add
orb
jecxz
or
inc
sbb
add
repnz
dec
inc
fdivrl
hlt
sbb
jae
add
xchg
adc
cmc
mov
add
cmpsl
aam
jo
sbb
add
idivl
dec
jae
addr16
add
push
sti
inc
scas
sbb
mov
cmc
jns
push
cld
js
cmpsl
test
cld
add
sti
xchg
aaa
add
xor
mov
add
iret
inc
pop
push
push
cmp
xchg
jp
mov
out
rcrl
cmp
sbb
pop
mov
aad
or
dec
test
dec
cmpsb
mov
pop
std
fwait
testb
mov
mov
jo
fiaddl
or
mov
add
fsubr
mov
add
mov
hlt
mov
add
icebp
pop
push
add
dec
sbb
push
loope
dec
add
leave
notl
jle
rolb
mov
rolb
daa
jbe
jp
add
addr16
scas
adc
roll
jnp
inc
mov
aam
enter
je
addl
ficoml
test
fnsetpm(287
fisttpll
add
add
insb
fadd
mov
xlat
out
sub
into
add
or
movsb
out
mov
xor
add
and
call
mov
pop
mov
arpl
dec
scas
fwait
or
sbb
cli
fsubrl
sub
daa
cmp
or
push
test
loop
add
imul
add
insl
dec
sub
jo
sub
scas
add
xchg
cld
dec
jl
or
outsb
mov
jo
push
cmp
mov
dec
xchg
fcoml
lds
adc
sbb
mov
loope
in
inc
scas
lods
xchg
hlt
popa
fdivl
shll
ficomps
sub
fs
lahf
pop
dec
mov
sbb
faddl
and
out
inc
aad
sub
add
inc
psllq
les
sub
cmp
add
mov
in
add
cmp
clc
sub
loope
add
sahf
fwait
jnp
test
dec
push
add
add
or
fisubl
insl
mov
mov
dec
inc
in
orl
lahf
xor
scas
repz
add
sarb
out
dec
rorl
add
pop
stos
lahf
add
rclb
dec
movsb
add
xor
std
aad
add
mov
cld
inc
add
hlt
fcmovnbe
adc
shll
xchg
add
push
inc
xchg
outsb
pusha
pop
inc
jmp
test
and
sbb
mov
push
pop
icebp
enter
sbb
pop
mov
movsb
subl
sub
jmp
jl
adc
loopne
or
add
pop
sbb
sbbl
sub
sbb
push
mov
cmp
jae
scas
jno
jle
out
add
cmp
cmp
testl
push
add
test
pop
loope
mov
adc
inc
cmpsl
frstor
push
and
push
mov
mov
into
roll
sbb
lock
in
lods
cmp
inc
mov
mov
or
sbb
and
and
inc
repz
out
cmp
setno
push
push
hlt
push
mov
ljmp
cld
mov
popf
inc
pop
inc
ret
sbb
and
xor
adc
rcrb
ret
shrl
pushl
popf
or
pop
mov
cmp
inc
dec
imul
add
jb
xchg
jge
mov
adc
lods
lods
add
fiaddl
fimuls
test
sarl
mov
stos
inc
mov
mov
or
pop
test
sbbb
lret
jae
popa
push
popf
out
out
adc
xchg
pop
adc
aaa
fnsave
test
or
xlat
cmp
shrl
sub
and
lret
inc
push
jb
iret
pop
mov
movsb
stc
js
lret
mov
mov
jmp
add
jo
sub
pop
add
push
pushf
push
call
xchg
cmpsl
cmp
add
cld
sub
add
pop
fnstsw
inc
xchg
xchg
inc
repz
roll
mov
cld
xor
outsb
adc
js
inc
add
xor
dec
add
adc
sar
inc
jo
cwtl
lods
ss
pop
adc
test
out
ret
cmpb
push
roll
lods
out
js
repz
pop
adc
adc
push
insb
aam
and
sti
jp
adc
das
cmpl
push
mov
arpl
lea
jle
lods
add
sarb
stos
lcall
jbe
mov
cs
and
add
pop
mov
push
stos
xchg
add
or
mov
jne
shll
lahf
into
dec
in
dec
add
fisttpll
pop
push
add
lret
pop
add
pusha
inc
outsb
sub
mov
jbe
xchg
shll
cld
xchg
cmp
xor
gs
add
lret
and
ret
inc
cs
enter
adcb
lcall
cmp
adc
lret
subl
jl
mov
into
jecxz,pn
bound
adc
out
cmpsb
add
nop
cli
in
imul
jmp
add
sbb
xor
aaa
cwtl
add
inc
popa
loop
pop
mov
int3
and
ds
stc
mov
dec
xchg
cmpsl
sbb
les
fs
dec
cli
ret
mov
mov
stos
add
or
add
imul
roll
add
arpl
inc
add
das
sahf
fisttpll
aam
add
and
jmp
std
in
xor
int
movb
mov
imul
and
add
mov
add
add
jno
sub
xchg
stos
ud2
add
enter
or
add
dec
popa
pop
pop
mov
add
dec
pop
or
loop
repnz
sbb
or
scas
dec
ds
sub
adc
add
fnop
mov
mov
and
mov
adc
sbb
fldcw
push
cli
xor
movsl
add
inc
sbb
and
mov
cmp
add
xor
in
ss
and
inc
push
push
mov
fstps
add
sbb
mov
dec
cs
ds
inc
and
mov
mov
or
aad
lcall
xor
add
jecxz
pop
fstps
les
fcoms
add
cwtl
test
add
add
push
push
ret
lret
popl
dec
sub
fs
jg
dec
test
and
add
repz
add
js
sub
ret
push
in
jae
iret
ss
ds
pop
or
mov
sbb
fwait
sub
bound
insl
sub
lds
test
sub
fwait
les
mov
add
mov
nop
sub
lret
add
jecxz
pop
icebp
dec
sbb
push
cmp
cmp
jno
dec
stos
cmp
mov
add
and
add
xor
mov
cmp
pop
test
mov
sub
mov
sarb
fcmovb
data16
inc
dec
popf
popa
and
ss
test
xchg
and
icebp
aaa
pop
fdivr
sbbl
fildl
xchg
pop
loop
pusha
xor
out
pop
aad
mov
out
js
pop
jne
fcompl
stos
mov
inc
lea
je
adc
sbb
inc
pop
xchg
in
stos
pop
adc
add
mov
les
mov
and
loopne
enter
jae
add
cld
out
mov
push
and
out
inc
adc
sbb
add
cmp
dec
add
push
lock
sti
mov
add
aaa
mulb
add
aam
add
movsl
add
lds
les
or
rcrl
das
lock
add
les
mov
add
jle
pop
into
aaa
arpl
andb
in
push
in
cmc
inc
test
inc
dec
pop
mov
arpl
push
jg
cltd
sub
dec
adc
daa
ret
test
incb
cmp
scas
jmp
lock
pop
adc
jle
xchg
scas
xchg
or
cli
xchg
cmp
mov
add
lahf
int3
xor
pop
pop
shll
jae
adc
add
jno
mov
int
pop
lods
nop
pop
add
mov
iret
mov
mov
mov
cmp
incl
mov
add
push
push
into
fiadds
pushl
in
cmc
out
sbb
popf
ret
int3
xchg
cli
cmpsb
imul
or
push
std
lret
dec
orl
mov
into
jno
imul
adc
add
jnp
jmp
cmp
movsb
mov
add
scas
push
popa
and
out
paddb
lds
adc
aaa
add
mov
xor
scas
dec
cmp
jo
notl
hlt
push
mov
fadds
je
xlat
jl
pop
or
ret
out
icebp
add
lock
or
adc
add
or
jge
sub
mov
mov
mov
jmp
add
popf
mov
adc
or
mov
dec
and
sbb
xchg
ja
ss
lcall
ljmp
add
add
sub
test
sti
add
stos
sbb
xor
jne
jo
cmp
mov
push
jno
push
push
cltd
add
mov
movsl
dec
lcall
sbb
mov
cwtl
adc
lret
cmc
add
hlt
xor
jae
jg
outsb
or
sbbb
hlt
or
icebp
add
inc
pop
repz
pop
push
xor
jns
ja
mov
and
add
les
mov
ds
sub
fdiv
popa
jl
push
add
dec
sub
xor
shll
or
inc
cmpsb
ljmp
pusha
ror
scas
push
aas
fisubl
enter
or
lahf
mov
orl
clc
adc
fs
add
rcl
sar
clc
pop
movsb
push
push
daa
ljmp
cltd
xor
add
xor
hlt
insb
lods
and
and
jno
leave
mov
addb
imul
sti
lret
lret
mov
mov
mov
and
cmp
mov
nop
add
add
adc
jmp
mov
add
js
cmp
mov
repz
dec
add
pop
adc
lea
loopne
add
aam
push
fdivrl
test
fs
cld
xchg
mov
add
sbb
pop
xchg
add
jmp
scas
xchg
jae
and
sub
pop
leave
clc
push
add
mov
ud0
sti
lcall
add
mov
out
iret
add
push
int3
lods
jno
cmp
enter
out
in
inc
cmc
pop
cmp
outsl
subb
add
shll
cld
mov
in
jecxz
andl
rolb
rcrl
mov
loopne
dec
jecxz
add
mov
mov
inc
add
sbb
cld
sub
loope
mov
fdivs
in
stos
and
xorb
or
popa
add
xchg
or
jbe
sbb
sbb
xchg
adc
das
add
mov
loope
mov
pop
add
lret
mov
add
loope
mov
pop
jae
and
scas
dec
std
jmp
jno
mov
cli
sub
out
jp
mov
inc
hlt
pop
mov
in
push
xor
mov
mov
jns
jge
mov
arpl
add
in
mov
pop
call
lahf
jo
mov
cmp
ljmp
xchg
cs
jle
ret
mov
add
mov
cmp
jge
pop
push
fldt
add
sbb
ljmp
pop
nop
lret
mov
push
inc
out
loop
ret
add
jb
pop
lds
jle
pop
add
mov
lods
add
scas
inc
dec
pop
es
clc
pop
cltd
cmc
sub
mov
xchg
popa
mov
outsb
push
cld
stos
movsl
mov
xchg
cld
sbb
int3
cmp
push
mov
sub
out
push
loope
dec
int3
add
pushf
jne
add
lods
cmpb
jp
pop
stos
jg
sub
jmp
lahf
jge
add
cli
mov
mov
push
cmp
adc
and
ror
scas
lret
add
pusha
jl
add
pop
cmp
xchg
sbb
stos
pushf
add
icebp
dec
mov
add
imul
sub
cmpsl
add
or
dec
pop
in
lcall
pushf
jo
mov
adc
inc
add
int
mov
mov
inc
mov
add
dec
sub
mov
fdivl
xor
sbb
fcoms
mov
add
xor
fldcw
popa
lret
addb
test
add
fisttpl
pop
incl
fldl
cmc
or
adc
sbb
push
add
xchg
inc
inc
adc
add
mov
jb
add
insl
mov
pop
push
push
inc
lock
or
cmpsb
jecxz
mov
mov
mov
js
pop
addb
push
loop
or
and
insb
sbb
je
neg
mov
test
decb
sbb
inc
inc
mov
inc
xor
icebp
jae
push
in
out
add
xchg
add
pop
xchg
jo
movsb
xchg
rcrl
lcall
sbb
sub
pushl
rol
das
cld
add
les
ss
jo
lock
push
push
imul
inc
dec
fdivrl
ljmp
push
dec
inc
movsl
nop
xchg
repz
test
inc
cltd
add
xchg
mov
add
mov
mov
fxsave
xlat
jnp
das
inc
cmp
rcrl
flds
and
adc
icebp
push
ljmp
pop
adc
aad
cmc
cwtl
xchg
stos
sarb
and
or
sub
jle
mov
int
incb
add
or
lea
mov
cmpsb
push
add
adc
sahf
mov
rcll
add
cmovae
dec
cltd
add
cmp
mov
cmp
arpl
push
stos
cwtl
dec
or
adc
adc
sbb
xchg
outsb
mov
sbbw
out
xor
loop
mov
mov
pop
cwtl
imul
mov
add
cmp
loope
in
and
gs
sub
adc
inc
add
movsb
pop
roll
adc
dec
loopne
adc
lret
push
pop
int3
bound
sub
aas
movsl
inc
addr16
inc
jno
sbb
xchg
adc
sbb
arpl
mov
add
hlt
or
pop
insb
sbb
outsl
xor
add
add
add
shlb
cmp
fsubl
push
iret
dec
orb
sbb
cmpsl
add
inc
push
sub
mov
test
adc
loop
push
call
mov
push
stc
in
aaa
sahf
subb
jns
inc
je
dec
lahf
int3
jb
decl
mull
js
pop
or
pusha
cld
mov
cmpsl
xchg
cld
iret
jge
inc
leave
pop
cli
adc
xor
pop
jne
sbb
adc
int
outsb
fsubrl
stos
bound
push
add
push
hlt
inc
fwait
imul
dec
jne
inc
dec
add
icebp
out
add
dec
iret
push
cmp
cmp
xchg
les
inc
cmp
lds
pop
add
movsb
ss
pop
outsb
cli
in
push
mov
lret
movsl
adc
mov
mov
inc
rorb
add
push
add
push
xor
inc
out
cmp
insb
xchg
lds
or
xchg
add
or
dec
add
push
jno,pn
cld
jnp
stos
mov
loope
adc
cmp
aad
push
jno
inc
add
and
cmp
fisttpl
insb
rcrb
popf
outsl
jnp
push
xchg
lret
cmp
pop
dec
push
cltd
aaa
jne
adc
cli
and
push
sbb
xchg
ret
les
rcrb
mov
addr16
stos
scas
ss
call
dec
jecxz
mov
dec
dec
dec
fsubrs
into
cmp
mov
sbb
mov
xorl
fisttpll
aam
sub
or
pop
add
not
cmc
add
add
in
push
stos
fidivs
test
xchg
cld
mov
jge
cmpsl
mov
add
or
lcall
cmp
negb
movsb
mov
mov
mov
pop
jbe
bound
jle
aad
sbb
gs
mov
and
inc
lret
ja
fs
xor
add
iret
insb
push
aam
cmpsl
scas
jmp
sbb
mov
xchg
add
pop
ljmp
sbb
les
mov
lods
mov
out
popa
xor
mov
jb
mov
xor
inc
push
sub
mov
add
add
test
pop
add
pop
movsl
adc
imull
or
subb
mov
add
out
mov
les
pushf
push
cmpb
loopne
jns
adc
int3
out
jecxz
xor
sbb
ret
lcall
clc
push
inc
fdiv
adc
loope
icebp
push
and
dec
fisttpll
cs
inc
ja
dec
inc
ret
stos
ret
add
inc
cmp
imull
gs
out
adc
lock
add
movsl
add
das
popa
add
gs
push
xor
mov
aam
repnz
and
insl
hlt
daa
inc
mov
mov
xchg
test
xchg
roll
add
sub
loope
clc
scas
add
xchg
in
sahf
adc
arpl
out
bound
push
jne
movsl
inc
popf
mov
add
imul
repz
cmpb
or
std
sbb
cmp
mov
add
adc
mov
mov
sub
cmp
xlat
push
add
xchg
in
ret
add
lock
adc
mull
xor
sub
fbstp
mov
adc
lahf
adc
inc
xchg
dec
and
pop
xchg
add
mov
dec
inc
int3
imul
es
ret
movl
mov
repz
aaa
cmpsl
jg
mov
add
out
xor
addr16
std
cmp
mov
movsb
test
xchg
cmp
scas
dec
cmp
pushf
orb
cmpsb
jns
push
jno
and
add
cli
mov
push
and
xchg
aam
jle
jb
mov
pushf
jg
inc
popa
shll
pop
or
or
xchg
pop
movsb
add
push
outsb
dec
shll
mov
fwait
xor
icebp
xchg
outsb
mov
inc
add
sbb
hlt
insl
cwtl
cmp
ret
ja
add
or
add
out
cmpb
mov
pushl
into
inc
inc
ljmp
sbb
shlb
mov
ret
sbb
lock
test
add
cld
js
pop
pop
aas
adc
push
stos
scas
jne
mov
shll
mov
test
fdiv
adc
xchg
sbb
loope
es
adc
add
rolb
adc
daa
add
xor
mov
hlt
add
aam
mov
add
iret
outsl
aaa
bound
jecxz
xor
insb
lock
cwtl
pop
nop
sbb
xchg
in
xchg
les
add
fs
cmpsb
sbbb
add
insb
adc
add
stos
cltd
sub
xor
stos
shll
cmpsl
xor
add
xlat
aas
stos
sarl
imul
inc
shl
cmpsb
adc
mov
in
push
lock
jmp
lcall
fisubl
aaa
out
sub
xor
mov
push
roll
or
adc
ficoml
aas
dec
jne
push
xor
orl
into
add
loope
stc
test
inc
and
mov
push
add
jnp
mov
fld
push
and
fadds
movsl
mov
int3
cmc
cltd
add
ljmp
in
jbe
mov
mov
mov
insb
mov
filds
idiv
and
gs
jb
adc
mov
ret
jp
sbb
stos
and
enter
icebp
or
nop
xorl
sbb
push
sub
rcl
dec
or
aam
fdivl
cli
aas
add
das
gs
xor
fidivrl
push
sahf
add
cmp
jnp
mov
sti
jb
xchg
or
xorl
les
aaa
incl
popf
mov
stos
mov
cmp
mov
leave
int
or
fstpl
add
and
mov
decb
mov
mov
add
lret
sub
jge
stc
mov
sub
add
aad
pop
jl
mov
je
add
add
inc
add
xchg
push
ret
add
xor
stc
jae
add
sbb
rolb
ret
repnz
xchg
orl
jne
or
mov
add
fnstsw
adc
cmp
jne
mov
movsl
inc
out
out
leave
mov
mov
loop
fsubl
enter
sahf
jl
repnz
out
push
xchg
scas
fdivr
xorb
aas
shr
push
jnp
fs
out
lret
jmp
xchg
sbbb
aaa
adc
add
xchg
ss
ds
adc
lcall
dec
dec
adc
pop
jo
dec
pop
push
jp
hlt
fsub
push
xor
push
ds
in
adc
inc
pop
or
test
cmp
fdivp
push
stc
nop
push
pop
loop
ljmp
in
mulb
mov
mov
cs
repz
mov
je
mov
shrb
push
push
sub
mov
in
add
mov
sbb
pop
add
inc
cli
cmp
pop
out
add
sub
sbb
xchg
jp
and
inc
and
or
mov
iret
push
jo
enter
in
outsl
mov
pop
push
push
ja
cld
cmc
das
scas
jl
mov
cmpl
pop
push
push
push
ja
sbbl
jnp
sub
pop
iret
lods
dec
dec
add
jmp
ss
adcb
gs
stos
cli
push
arpl
jecxz
cvtpi2ps
sbb
cmpb
xchg
add
pop
aaa
jno
aas
mov
std
out
cmpsl
xchg
gs
rorl
dec
clc
lea
xchg
insl
lret
mov
push
jle
ret
hlt
in
push
adcl
add
sti
cld
insb
and
sub
fldenv
cmp
add
rorl
subb
daa
add
loopne
faddl
dec
add
add
push
inc
popa
rcrb
adc
add
lret
pop
or
cmp
int
mov
jge
imul
xchg
ja
mov
roll
je
and
repnz
mov
cmpl
cld
add
or
sub
or
pushf
or
mov
mov
mov
inc
jmp
add
scas
loopne
sub
push
push
test
js
add
pop
inc
loopne
mov
lret
adc
ret
add
popf
jl
xchg
mov
add
clc
xlat
jo
push
jb
cli
add
add
mov
test
xchg
add
push
rcrl
fcompl
xchg
mov
fnsave
jb
test
add
mov
stc
xor
mov
or
dec
jbe
jl
jo
icebp
add
ret
dec
dec
out
lods
mov
add
lock
fwait
push
sub
setno
add
mov
add
aam
shl
insl
das
int
int3
lds
into
xchg
dec
das
and
stc
inc
loopne
cmp
test
pusha
jp
jne
sub
jnp
into
pop
jmp
xchg
and
dec
subb
add
fisttpll
enter
push
inc
nop
testl
and
add
jg
in
fildll
test
cmp
gs
sbbb
rcr
adc
and
ret
jle
mov
mov
cmpsb
dec
sub
outsb
out
fcoml
lret
sbbl
test
call
push
pop
push
add
dec
in
mov
rolb
xchg
add
mov
outsb
lods
stc
push
addb
icebp
movsb
sub
sahf
jnp
push
stos
pop
lret
dec
jmp
push
add
mov
dec
push
add
sbb
scas
add
cmpsl
mov
xchg
xchg
cld
dec
dec
or
nop
or
lcall
pop
add
adc
add
js
es
repnz
loopne
cwtl
cmp
add
add
fistps
mov
add
cmp
jb
test
adcb
add
push
ja
mov
aam
popf
mov
hlt
std
lcall
xchg
loopne
stos
add
repz
pushf
imul
mov
sbb
push
in
orl
lret
inc
mov
movb
jae
addr16
and
cld
fbstp
lock
xchg
into
arpl
fsubl
lret
add
jp
outsl
push
add
mov
jecxz
or
mov
dec
cld
fiaddl
cmp
fsubp
pop
aas
xchg
nop
mov
sbb
movsb
inc
ljmp
out
and
mov
add
jg
in
outsl
out
scas
adcb
pusha
sub
cmpsl
mov
mov
ret
outsl
jns
adc
out
add
mov
loop
in
test
sub
nop
gs
jnp
xor
rclb
pop
pop
pop
imul
pop
and
jne
sub
pop
das
pop
je
mov
add
test
rorl
out
pop
dec
hlt
add
lds
add
int
add
dec
add
dec
pop
add
jmp
testl
mov
xchg
stos
andl
stos
mov
mov
popa
jp
icebp
data16
movsl
add
inc
enter
jno
das
or
inc
mov
faddl
sub
pop
and
xor
test
dec
jbe
in
jns
aaa
aas
daa
ret
mov
fnstcw
fwait
push
add
lock
add
enter
mov
cli
out
add
mov
sbb
pop
xorl
xchg
add
dec
xchg
adc
mov
arpl
add
movb
push
fldenv
xchg
lea
mov
adc
out
or
xchg
idiv
int3
adc
jle
adcl
lods
lea
dec
xor
outsb
mov
dec
jbe
rorb
dec
stos
jns
sub
inc
mov
inc
cmc
dec
add
fisttpll
mov
aam
push
and
testb
aam
push
mov
daa
xor
mov
add
dec
xchg
mov
add
sbb
cli
add
popf
cmp
lea
add
into
pop
xor
mov
lret
cmp
mov
cwtl
pop
outsl
sub
jmp
ja
stos
hlt
or
add
mov
mov
shlb
and
pop
add
dec
jb
jmp
fistl
adc
push
out
xor
gs
add
xchg
outsb
add
mov
mov
add
ljmp
cmpsl
add
sub
dec
xor
add
jecxz
adcb
xlat
mov
loop
jns
inc
in
cwtl
js
repz
loope
fwait
pushf
sti
jge
movsb
rcrl
add
jmp
and
aas
bound
fidivrs
mov
jl,pt
and
hlt
or
sub
inc
mov
mov
lret
add
add
syscall
sub
out
aam
ja
pusha
test
in
dec
jne
push
invlpg
jns
mov
dec
int
mov
mov
jne
cmp
adcl
cld
leave
ficomps
outsb
arpl
cld
adc
rorl
test
and
mov
in
jmp
mov
cmpb
add
or
ss
sbb
hlt
jmp
adcl
sbb
or
stos
stos
mov
outsb
outsl
mov
fildl
xchg
call
mov
lret
pop
push
testl
add
mov
hlt
push
pop
xchg
adc
rorb
lahf
es
sbb
xor
push
jns
lret
jle
push
add
cmp
and
hlt
lahf
push
fcompl
mov
addb
ss
cmp
out
push
cmp
xchg
pop
mov
jb
push
mov
add
pop
xchg
inc
jmp
push
add
lcall
in
jbe
cs
pop
sub
test
gs
lret
and
fstpl
subb
inc
lock
adc
addr16
dec
sbb
call
jmp
pushl
xchg
inc
stos
mov
cmp
push
mov
or
stc
aam
mov
lods
pop
fwait
aad
xchg
add
pop
ficoms
mov
scas
std
stc
mov
lcall
add
subl
add
shlb
sti
testb
lds
add
callw
out
cmpsb
add
mov
or
hlt
adc
aam
popa
imul
mov
fcompl
and
push
push
push
adc
mov
cmp
hlt
repz
gs
and
inc
and
xchg
out
add
ds
flds
call
lock
mov
cld
movsl
gs
nop
add
cmpsl
xchg
or
testb
ljmp
aaa
push
loop
orl
add
push
mov
dec
sbb
div
xchg
xchg
popf
int3
pop
roll
mov
add
and
add
test
lret
hlt
adc
fldl
add
cld
add
loope
gs
push
out
xor
les
loope
add
inc
mov
sub
jae
imul
push
push
dec
mov
aad
mov
call
push
jb
pop
push
pop
add
sbb
xchg
lsl
lret
jb
sahf
add
add
inc
cld
rolb
inc
jae
mov
jle
or
mov
xchg
pop
out
adc
addr16
and
pop
aam
jp
pop
popl
test
pop
loope
test
xor
xorl
sub
mov
mov
mov
in
add
mov
or
cmc
stos
jge
sub
cmp
or
cli
sbb
lods
aam
and
xor
cli
in
mov
add
inc
dec
fmull
pop
cltd
adc
xchg
push
pop
jae
add
push
cmpsb
jp
mov
fnstenv
adc
ror
fisubs
out
pusha
cmp
add
cld
jg
or
lret
je
jns
mov
cmc
xchg
xchg
addl
pop
inc
rclb
hlt
out
mov
imul
inc
sarb
add
dec
add
addr16
jmp
sbb
inc
mov
add
add
inc
mov
xchg
push
lret
loop
inc
jg
add
cld
aad
orl
sub
imul
scas
add
mov
mov
aaa
insb
xchg
scas
add
dec
testl
cli
dec
jg
cmp
add
cmp
add
jbe
add
pusha
push
pop
add
mov
mov
mov
outsb
lods
frstor
inc
or
mov
aad
add
shl
cmp
mov
pop
fdivrl
inc
mov
inc
mov
bound
mov
cld
nop
jp
jecxz
push
andb
dec
out
add
aaa
adc
or
ja
cmp
xchg
xchg
mov
add
insl
aam
out
add
rol
xchg
stos
inc
cmc
test
cli
repz
jno
lahf
pushl
pop
arpl
xor
jnp
incb
adc
sbb
push
mov
sbbl
mov
pop
mov
jnp
dec
out
dec
iret
add
shll
xor
call
iret
bound
cmp
scas
sbb
shll
xchg
mov
jmp
mov
cmpsl
inc
cli
or
scas
pop
inc
jbe
xchg
arpl
decb
dec
or
movsl
add
inc
stos
xchg
outsb
out
sbb
mov
xchg
sarb
mov
sub
adc
fistps
jle
lahf
mov
xchg
pop
aaa
jb
in
push
sub
pop
pop
add
inc
mov
add
xor
mov
xchg
cmpsb
add
fistl
xor
mov
add
cmp
loopne
xor
add
adc
jge
inc
cld
fidivrs
les
cmp
sub
hlt
fs
arpl
add
xchg
pop
add
stos
roll
adc
loopne
mov
fistpll
jo
in
push
add
push
or
jb
xchg
frstpm(287
cmp
and
push
lahf
sbbb
out
cmp
add
xor
push
imul
add
arpl
push
add
mov
inc
ffree
daa
xchg
cmc
sti
mov
xchg
dec
add
add
add
sbb
inc
lock
subb
add
clc
add
jb
insb
cltd
xor
pop
in
ficomps
aas
mov
jg
inc
lods
inc
cmpb
stos
pop
add
scas
cmc
cmpsb
mov
sbb
mov
mov
cmpsl
push
adc
push
test
push
add
mov
cld
jmp
add
pusha
lret
rcll
ss
mov
es
dec
or
push
mov
lods
stos
movb
call
push
xchg
icebp
push
inc
int3
add
les
add
jns
fisttps
add
ss
cmp
and
add
out
adc
push
gs
or
mov
dec
mov
xlat
jne
cmp
xchg
aaa
inc
test
xor
adc
add
push
lahf
pop
popl
cli
xchg
mov
sarl
xchg
aas
and
pop
in
and
xchg
stc
shrb
cmp
clc
jl
pop
addb
add
mov
add
and
mov
enter
mov
sub
or
xchg
push
and
test
add
jg
lret
les
or
cmp
jl
mov
shll
cli
push
in
hlt
push
out
adc
aas
scas
add
dec
imul
mov
loope
mov
insb
arpl
xorl
dec
out
enter
sub
mov
lock
shlb
leave
cmpsl
into
add
xlat
adc
add
sub
cmp
sbb
adc
sub
dec
adcb
mov
push
jb
dec
inc
aaa
pop
adc
rorb
and
dec
jb
mov
ds
lea
adc
outsl
adc
out
repnz
aas
bswap
add
daa
hlt
rolb
stc
popa
cmpsb
xor
stos
mov
jnp
fiadds
arpl
mov
add
cmp
popa
pop
jge
je
stos
call
or
hlt
clc
jmp
stos
xchg
lahf
and
popa
xor
add
adc
test
lret
loop
faddp
in
rorb
jecxz
add
loope,pn
mov
xlat
xor
xchg
cld
cmp
jno
inc
push
nop
xchg
testl
jge
add
pop
adc
xchg
dec
rcrb
mov
ret
jno
jmp
xchg
sub
mov
repz
aas
hlt
fidivrl
pop
lds
mov
sbb
shr
inc
dec
jb
pop
mov
out
outsl
or
bound
repz
mull
dec
dec
and
add
dec
enter
shr
or
xor
mov
rorl
add
jno
and
jae
iret
enter
test
ss
xchg
add
mov
mov
mov
gs
xchg
repnz
cmp
aas
add
jp
roll
pusha
mov
sub
mov
xchg
das
fcmovb
mulb
insl
and
mov
fiadds
add
inc
out
push
sbb
add
cli
pop
arpl
scas
orb
add
add
aaa
adc
add
test
stos
xchg
mov
jbe
testl
cld
lock
and
xchg
lcall
dec
jno
mov
sbb
insl
mov
ds
incb
add
sbb
cmp
add
fucomip
std
pop
repnz
add
add
mov
dec
sub
cltd
mov
inc
sbb
ljmp
xchg
inc
push
add
aaa
cmc
mov
popa
into
sti
inc
xor
add
pop
fldl2e
cmpl
add
jge
sbb
and
lahf
dec
ret
pop
sti
in
rolb
shlb
mov
add
test
or
cmp
sarl
or
dec
mov
sub
add
out
push
add
mov
pop
xchg
cltd
pop
addb
sub
dec
nop
mov
cld
inc
jnp
testl
lahf
shlb
adc
ljmp
scas
add
call
and
inc
pop
mov
js
rcrb
imul
mov
sub
adc
push
and
xchg
xchg
jns
mov
insb
xchg
dec
pop
xor
jb
insb
xchg
and
pop
fdivrs
sbbl
cli
cmp
cmp
pop
in
mov
test
add
inc
fsts
add
inc
in
and
lock
push
add
cmpsl
add
mov
test
sahf
lahf
addr16
inc
or
ljmp
fimuls
das
xorl
adc
pushw
adc
jg
mov
inc
mov
mov
add
imul
xchg
mov
push
adc
dec
pusha
mov
hlt
xchg
mov
add
push
daa
add
rclb
add
xor
push
and
fstl
popf
roll
cmc
in
mov
push
add
adc
test
add
add
xor
in
jg
push
pop
add
sub
repz
lcall
add
dec
mov
je
cmpsl
mov
in
sub
ret
add
cwtl
lock
hlt
or
mov
add
xor
xlat
rolb
push
or
shrb
push
mov
push
aad
scas
lods
fsts
pop
xor
ret
and
out
sti
movsl
stc
je
mov
data16
push
add
shlb
add
sbb
sbb
jecxz
mov
cmp
jg
pop
sub
leave
add
xchg
inc
mov
or
mov
mov
add
and
push
and
fcom
outsl
cmp
sbb
hlt
cwtl
add
lea
add
lock
xchg
int3
test
fnstenv
cli
ret
xor
mov
fstpt
inc
mov
add
xchg
add
push
jl
cmp
add
iret
add
sub
push
lcall
fbstp
jns
and
leave
xchg
ljmp
add
adc
cmp
mov
cld
pop
out
and
inc
icebp
adc
jb
add
arpl
mov
mov
insl
nop
adc
hlt
dec
mov
push
jecxz
stos
adc
sbb
mov
pop
pop
cld
in
out
inc
or
add
mov
cmpsb
adc
adc
push
pop
adc
mov
loope
cltd
in
sub
inc
scas
lret
jl
loope
jae
jle
inc
sub
sbb
je
push
dec
dec
addl
lret
mov
out
sbb
push
lret
scas
je
push
inc
inc
lret
outsl
add
test
fiaddl
mov
repz
add
xor
aam
movsl
push
mov
or
inc
adc
xchg
testl
cs
loope
icebp
dec
cmpsl
add
xlat
imull
loope
call
add
cmp
add
or
ror
std
add
pop
xchg
xchg
test
int
mov
mulb
insb
push
adc
clc
ret
cmp
out
enter
add
pop
mov
mov
ret
bound
add
test
mov
add
je
jb
xchg
add
sub
into
or
inc
das
loop
sub
fcoms
iret
and
adc
int3
dec
mov
add
xchg
xchg
jae
add
pop
xor
jo
aam
pop
ret
das
je
adc
lret
xchg
test
push
data16
jnp
ja
rclb
lods
xchg
xchg
mov
fimuls
cld
cld
repnz
pop
xor
inc
jmp
jb
icebp
data16
mov
cmc
sub
enter
dec
add
add
push
sub
jp
in
mov
scas
in
les
fiadds
aam
test
lods
mov
loope
jb
aad
adc
add
bound
push
adc
mov
jbe
xchg
xchg
hlt
push
arpl
xchg
popf
mov
insb
add
sar
add
clc
mov
xchg
test
stos
xchg
inc
lods
push
test
add
in
push
xchg
add
sbb
dec
mov
daa
push
aam
add
in
mov
add
or
add
lret
loopne
add
iret
insl
mov
cmpsb
cltd
xchg
mov
hlt
add
push
pop
les
push
and
test
jo
add
inc
outsb
test
fidivl
sahf
add
aas
test
push
add
inc
sti
jp
add
inc
in
idivl
pop
add
repz
cmpsb
dec
test
xor
adc
add
xor
cmp
sbb
fs
loop
arpl
mov
pop
test
xchg
or
hlt
scas
popf
andb
jg
or
push
or
inc
push
add
cli
idivl
add
and
xchg
fiaddl
dec
sbb
outsl
iret
fisubrs
fadds
mov
lock
in
mov
jb
jg
imul
pop
push
les
movsl
jnp
mov
jge
cmc
add
add
pop
cmp
int
cmpsl
xchg
imul
sub
lret
dec
push
mov
movl
cmpsl
sti
std
ja
inc
lods
clc
sbb
jns
jbe
pop
mov
pop
mov
shll
xchg
push
negl
sub
sti
lret
lcall
or
add
xor
push
nop
rolb
xorb
in
push
stos
test
out
mov
add
in
lods
cmp
add
pusha
add
addb
mov
cmp
mov
jmp
sarl
inc
pusha
cmp
hlt
cmp
cld
fldl
and
add
xchg
or
pop
jno
xchg
add
jne
push
cmpsl
dec
sbb
ja
xchg
dec
adc
add
pop
in
sub
dec
push
sbb
ljmp
leave
or
shlb
push
mov
and
mov
out
mov
jno
lahf
rcll
mov
out
hlt
sbb
clc
xchg
adc
pop
and
push
jnp
repnz
add
bound
jbe
fadds
scas
jl
mov
push
test
inc
xlat
jb
mov
pop
add
in
daa
xor
add
je
mov
xchg
add
mov
adc
cmpsb
test
enter
in
add
cli
mov
and
jo
or
lret
and
sub
ljmp
clc
lret
imul
outsb
rolb
mov
sbb
xor
popl
and
test
shll
rorb
insl
add
sahf
shr
xchg
dec
add
cmp
xlat
push
inc
daa
loope
xchg
mov
cmp
add
sub
mov
rcrb
xor
arpl
pop
xor
mov
cmp
push
jae
lret
xor
hlt
adcl
arpl
add
sbb
aaa
sub
mov
notl
mov
outsl
decl
and
sbb
dec
stos
add
fisttpl
outsb
pop
jbe
add
mov
sbb
mov
lock
cmp
bound
cmp
hlt
add
daa
les
lods
add
popa
dec
add
mov
dec
in
adc
mov
faddl
icebp
scas
xor
frstor
and
in
adc
fwait
jle
repnz
cwtl
mov
in
push
mov
adc
cwtl
in
xorl
mov
enter
sub
sub
shl
pop
mov
stc
inc
call
xchg
ljmp
mov
dec
lahf
mov
ds
or
sarb
call
std
stos
fstpt
movzwl
out
pop
imul
test
push
lcall
cli
test
add
call
xor
outsl
add
dec
std
or
add
pushf
icebp
sbb
aas
lret
movsb
xchg
frstor
hlt
or
in
sarl
loop
add
jge
xchg
mov
out
pop
outsl
cld
js
dec
ja
mov
ljmp
add
popf
inc
mov
faddp
lret
js
xchg
lret
stos
add
dec
jae
jns
push
add
xor
add
inc
movsb
sub
stos
jae
add
sub
pop
jmp
or
xchg
call
add
mov
push
iret
mov
out
jb
rolb
xor
imul
cmp
std
pop
repnz
push
pop
loope
xorb
pusha
push
xchg
lea
fldenv
xor
ret
cmp
dec
mov
push
lock
add
cs
lea
mov
add
push
popf
push
dec
xor
test
add
dec
add
mov
push
aam
dec
ret
loope
pop
jns
add
ss
mov
pushf
push
pop
aas
outsl
fdivp
jl
popa
or
fsubr
jle
xchg
popa
add
add
leave
jg
daa
push
imul
clc
cwtl
stos
out
andl
cmp
pop
out
loopne
or
out
repnz
mov
sahf
sub
xor
add
filds
pop
dec
pop
add
dec
pop
jge
insb
sbb
add
lock
and
je
inc
and
pop
sbb
rclb
mov
incl
leave
insl
sub
add
rcll
adc
mov
sahf
movsl
add
xor
aam
push
subl
lcall
xchg
in
shr
je
and
add
jb
cltd
les
add
sbb
adcl
lcall
xor
cmp
imul
repz
xchg
adc
add
mov
jnp
ds
lock
sbb
ljmp
mov
test
inc
rcl
dec
fbstp
sti
fisubl
in
add
cmpsl
inc
pop
add
mov
mov
aas
in
daa
push
pop
or
push
in
push
push
add
divb
mov
outsl
lods
movsb
test
lret
sub
mov
fisubrl
add
aas
orb
cmp
lock
cmpsb
cmp
jl
inc
xchg
mov
add
stos
out
pop
sub
xlat
dec
jg
sahf
jne
loop
push
mov
ja
and
add
dec
std
jg
push
insl
adc
lahf
mov
pop
jno
mov
imul
mov
hlt
and
daa
mov
out
sbb
mov
push
fiadds
mov
cmp
lahf
adc
add
les
add
mov
pop
add
push
lea
add
lret
jbe
mov
rolb
sub
xchg
dec
add
jle
inc
mov
fs
push
fbld
add
inc
int
or
add
sub
dec
add
js
mov
andb
popf
adc
in
movb
mov
cmove
call
lret
incl
sbb
outsl
ljmp
adc
pop
jbe
push
push
pushf
pop
fnstcw
push
int
mov
sub
or
adc
scas
sub
xor
sbb
movsl
and
mov
arpl
mov
sbb
jmp
push
mov
or
imul
add
xchg
pop
add
sahf
nop
cmpsb
sub
pop
push
orb
setp
or
jp
loop
add
daa
hlt
out
aam
scas
add
adc
call
in
in
insl
pop
adc
xchg
add
pop
inc
js
jbe
inc
cmpsb
inc
xor
loope
jmp
dec
mov
aam
add
std
pop
fldt
jg
cwtl
test
mov
inc
jle
mov
and
mov
bound
sub
add
repz
push
xor
shrl
pop
cld
add
loope
adc
sbbl
in
pcmpeqw
xlat
icebp
adc
jns
mov
cwtl
add
push
movsl
das
test
adc
mov
cld
inc
mov
icebp
pushw
ljmp
mov
and
outsb
lret
cmp
repz
add
repnz
fdivr
lahf
and
push
push
and
sbb
lcall
jo
inc
movsl
outsb
lods
sbb
dec
in
pop
mov
aam
jo
out
hlt
cmpsb
and
in
pop
inc
andb
add
popf
or
stos
fcmovnb
loope
mov
faddl
fadd
adc
in
or
shl
fldenv
je
push
xchg
add
push
sub
mov
sti
cs
and
add
stos
mov
and
add
push
js
fldln2
nop
jns
push
int
subb
repnz
sbb
ss
sbb
ljmp
arpl
insl
sub
cmp
mov
std
test
fistpll
add
or
fldl
add
mov
dec
shrb
mov
aas
fstl
mov
mov
mov
pop
pop
pop
sbb
and
adcb
cli
jg
scas
fidivrl
aam
add
add
sbbl
add
push
and
add
jae
testb
mov
adc
pop
std
cli
aas
push
pushf
fiaddl
add
in
lret
scas
pusha
lea
jp
clc
jne
add
inc
jmp
pop
xchg
or
inc
add
jmp
lcall
rol
xor
sub
call
xchg
in
add
fnstcw
cltd
mov
mov
mov
adc
or
xchg
rcrb
add
sub
dec
addl
dec
out
sbb
imul
adc
fs
mov
ftst
add
lahf
pop
add
mov
fildl
jg
shrl
mov
adc
pushf
jns
mov
rcrb
lcall
mov
adc
js
into
sub
jo
xor
xor
sub
sbb
cmp
bound
loopne
or
mov
add
cmpsb
inc
loop
ror
add
popf
mov
xor
jge
stc
fs
call
sar
fisttps
mov
test
loope
add
adcb
add
imul
jo
repnz
sbb
jmp
or
add
inc
sub
mov
mov
inc
in
xor
cmp
mov
add
add
repnz
lods
adc
loope,pt
xchg
fwait
scas
enter
inc
xchg
cmp
les
int
std
in
mov
xor
das
jnp
inc
add
sub
xor
sub
mov
xchg
scas
mov
mov
lods
add
arpl
lea
adc
cli
jb
xchg
test
dec
mov
sbb
cmc
aaa
xor
incl
mov
inc
clc
and
xor
nop
xchg
pop
jmp
mov
test
push
daa
add
mov
icebp
sbb
pushf
outsl
cmp
or
adc
ljmp
inc
add
shlb
mov
cmp
loop
mov
fists
popa
in
mov
add
cld
sahf
pop
push
fwait
xor
rsm
pop
add
lock
xchg
mov
cmpsb
and
stc
cld
aad
sub
add
pop
leave
movsl
xchg
push
movsb
fidivrl
xchg
je
in
adc
aas
sbb
xchg
mov
stos
inc
add
or
in
lcall
ficoml
inc
dec
add
xor
or
test
jne
mov
js
add
sbb
aam
jp
fcoml
xchg
push
or
mov
and
mov
sbb
movsl
aas
jl
sbb
add
jns
xor
xor
mov
testb
mov
lret
pop
mov
sbb
lods
fcmovb
xor
or
or
lea
mov
int3
sub
sub
cs
ror
js
xchg
cmp
jp
pop
xchg
testl
movsb
cmp
insl
in
stc
xchg
push
push
sbb
loope
or
xor
xchg
or
xchg
mov
add
je
loop
pop
test
add
jecxz
add
movb
pop
mov
inc
mov
dec
sbb
insb
push
rcrb
ja
or
mov
enter
and
fcom
dec
xorl
mov
icebp
inc
jg
inc
add
cmp
push
xsha1
cmpsb
lret
dec
pop
adcl
push
incl
pop
lcall
popa
xchg
push
jmp
mov
insl
imul
and
adc
add
xor
sbb
add
les
jne
rcrl
lret
pop
add
add
scas
ljmp
shlb
add
ljmp
lds
jmp
not
ja
xor
xchg
add
sbb
jne
mov
mov
lods
pushf
ret
add
jge
and
add
fdivl
xor
outsl
add
adc
lret
or
sub
aas
aaa
repz
sbb
in
mov
xchg
mov
cmp
das
mov
incl
mov
inc
or
cmp
mov
lds
test
and
std
adc
insl
sub
repz
push
fldenv
pop
enter
sub
nop
cld
sbb
xchg
or
xor
movsl
bound
add
test
cltd
mov
or
pusha
divl
clc
jecxz
ret
add
in
cmc
fiaddl
jo
sub
pop
adc
addb
movsl
sbb
adc
xchg
xor
int
jns,pt
lock
pop
xchg
jecxz
ret
add
mov
cmpsl
cli
divl
mov
lahf
ret
mov
push
fisubl
cmpsb
add
inc
movsl
add
rcrb
mov
lsl
cmp
or
out
ss
xchg
jnp
mov
cli
movsl
mov
xchg
push
aas
mov
incb
push
ret
rorl
sbb
sbb
jge
andl
mov
mov
xchg
pop
adc
push
jbe
insb
adc
cld
imul
or
fucomi
pop
shlb
xchg
add
mov
sub
idivb
mov
mov
hlt
or
sti
incb
add
int
jge
mov
mov
mov
cmp
add
pop
xor
aaa
mov
adc
dec
pop
aad
push
add
mov
mov
or
popa
push
pop
lret
cld
mov
in
push
sub
sbb
rorl
test
out
push
mov
sti
aaa
test
ljmp
adc
dec
loopne
dec
add
lds
dec
dec
mov
xchg
adc
mov
lods
xor
insb
ret
test
push
decb
push
cld
sbb
out
push
jae
stos
cmp
add
mov
aas
add
inc
or
fwait
mov
fincstp
jae
and
sub
mov
hlt
lds
cmp
xchg
push
mov
adc
push
enter
inc
add
sub
mov
add
shl
mov
push
mov
add
rolb
mov
lret
aad
mov
mov
sbb
mov
cltd
in
in
decl
test
add
mov
inc
inc
cmc
xor
mov
add
adc
aad
loopne
call
xchg
fsubp
adc
leave
inc
push
inc
cli
daa
add
and
mov
xor
sub
lock
xor
gs
std
ret
push
cld
fdiv
push
cli
inc
nop
mov
insb
jne
loopne
xchg
pop
std
or
jg
stc
and
add
jecxz
xchg
xchg
jo
outsb
add
in
xchg
pop
push
sub
mov
rolb
jns
scas
xchg
andl
movsl
nop
sub
inc
pop
mov
lahf
add
dec
pop
and
mov
dec
clc
sub
adc
mov
out
jbe
xchg
rcl
and
vpshuflw
jge
jp
inc
push
shr
mov
push
add
fidivl
dec
jbe
add
push
mov
test
cli
inc
mov
add
sbb
cmpsb
sub
ljmp
xor
mov
daa
mov
adc
push
push
add
inc
lret
xchg
cmpb
dec
cltd
nop
in
mov
repnz
xchg
lods
add
add
pop
rcll
push
pop
xchg
jle
js
pop
push
inc
inc
cmc
cld
shll
cmpsb
mov
addl
mov
and
inc
mov
add
lcall
iret
dec
mov
xchg
dec
sbb
push
cmp
loopne
xor
push
xchg
add
ret
outsb
mov
lahf
mov
fadds
xlat
pop
mov
cmp
cld
ret
dec
sbb
fcomp
incb
test
adc
leave
cmp
cmp
add
adc
in
push
push
inc
sbb
das
ret
sub
add
mov
pusha
sahf
mov
sbb
xor
or
stos
jb
in
div
cli
ficomps
add
sbb
add
push
ds
mov
sbb
jecxz
lret
fsubr
aaa
add
jne
xchg
jl
xor
cmpsl
mov
add
mov
cli
mov
fidivrs
lods
add
sbb
je
pop
out
push
cmp
adc
pop
repnz
movsl
jbe
es
js
add
lds
add
mov
and
add
jbe
inc
add
push
dec
pop
mov
icebp
add
lds
push
out
xor
xchg
add
loopne
jp
add
add
mov
jo
cmp
ja
mov
lret
xor
push
adc
flds
aam
test
xchg
jl
push
mov
inc
add
push
pop
outsl
aas
mov
jmp
push
lcall
ds
jge
js
loope
aad
pusha
cmp
add
mov
cmp
xchg
add
sbb
les
pusha
in
rcrb
leave
pop
pop
in
dec
mov
lock
add
mov
pop
push
pop
add
subl
out
mov
xor
pop
dec
inc
les
add
mov
inc
jae
mov
sub
xor
sbb
add
jecxz
aaa
ret
inc
add
xor
sbb
incl
aad
or
sbb
jle
out
cmp
add
cli
rolb
mov
pusha
lret
sub
mov
repz
add
push
iret
stc
mov
cmpsb
sub
jl
xor
das
icebp
jo
xchg
jle
push
mov
add
or
jno
mov
mov
andl
add
repz
loop
enter
add
and
sbbl
shlb
outsl
jle
jmp
xchg
dec
mov
add
hlt
fcoms
add
loopne
pop
cmp
jns
add
sbb
sbb
push
add
push
sub
cmp
sbb
add
push
xchg
jmp
push
ds
add
rcl
mov
xor
inc
repz
sbb
ljmp
jne
jns
scas
lahf
js
and
adc
mov
jl
cld
add
mov
hlt
mov
repnz
es
push
sahf
push
and
adc
inc
outsl
sbb
loope
cli
lods
imul
jp
mov
add
sub
or
loope
test
push
cmpsb
js
incl
leave
orb
inc
add
inc
sub
cmp
lret
push
and
sbb
inc
adc
and
dec
push
add
out
lods
lahf
cmp
xor
pop
lret
adc
add
call
test
clc
std
fadds
loop
loopne
imul
jp
insl
and
push
add
in
test
mov
pop
mov
arpl
dec
sbb
pop
jle
pop
stc
subb
jo
mov
std
add
mov
jg
or
mov
fmuls
lcall
mov
pop
out
xor
inc
and
sbb
shl
adc
subb
in
mov
loop
jno
sub
adc
jecxz
sbb
les
mov
push
dec
mov
add
fcoms
lea
adcb
cmp
test
add
add
mov
jge
popa
fbstp
adcl
ljmp
mov
sub
loopne
and
in
lods
xorl
scas
add
add
andl
mov
faddl
xchg
das
aad
jo
lret
push
popf
lahf
pop
jg
sub
add
outsl
adcb
leave
test
xchg
sahf
pop
xchg
add
das
sub
and
add
stos
or
dec
mov
sbb
fadds
add
adc
cld
insl
or
scas
in
in
pop
dec
inc
mov
cmp
test
pop
pop
aas
in
movsl
add
jp
frstor
aad
cli
and
cld
loopne
sub
or
subb
into
hlt
or
cmp
inc
add
out
push
les
push
ja
into
and
ret
out
arpl
jmp
push
shl
mov
xor
in
negl
mov
insl
push
mov
xchg
mov
test
mov
add
mov
mov
add
dec
hlt
pop
in
add
adc
or
gs
or
stos
jbe
jle
xor
loop
lea
scas
outsb
out
leave
jl
dec
add
and
push
xchg
jno
add
pusha
mov
cmp
sbb
mov
cmpsl
push
jnp
in
ret
bound
fmull
aas
lahf
sbb
mov
or
mov
std
js
add
repz
out
adc
movsb
in
xchg
lock
aam
push
inc
loop
xlat
or
cmp
and
mov
call
dec
shll
inc
jne
push
xchg
mov
mov
push
xchg
jge
dec
arpl
or
jno
add
shrl
add
mov
mov
add
add
push
fwait
mov
mov
jecxz
gs
out
lods
je
sbb
push
insb
mov
lret
push
inc
ror
pop
std
inc
fwait
cli
add
add
sub
stos
xchg
loope
jbe
lds
ficoml
imul
insl
add
ss
pop
int
xor
push
xlat
out
adc
fadds
xor
out
mov
push
scas
enter
xor
in
mov
sbb
jmp
and
aaa
mov
push
sbb
push
pop
ds
jo
inc
test
lcall
push
sbb
add
sbb
movsl
mov
roll
orb
add
or
sbb
bnd
jnp
jbe
sub
ret
and
call
add
pusha
ror
inc
jecxz
add
out
ljmp
mov
inc
add
je
xchg
push
test
lods
add
stos
loope
sbb
dec
pop
jmp
and
fs
sub
xchg
leave
outsb
sbb
pop
incb
shll
shll
out
mov
pop
add
inc
sub
in
mov
inc
push
add
rclb
rolb
test
out
pop
int3
out
stc
outsl
xor
sahf
push
fs
add
mov
std
sbb
lahf
jb
add
or
inc
cltd
add
cld
inc
mov
clc
xor
iret
rolb
pop
mov
adc
outsb
mov
imul
gs
sub
in
jne
sbb
add
ja
negb
pop
enter
ret
dec
mov
pop
cmpsb
sti
stc
or
outsb
rclb
push
mulb
add
ror
or
xor
imul
pop
icebp
loope
add
push
test
repz
inc
add
adc
push
into
add
mov
ds
repz
adc
scas
test
fimull
mov
add
mov
add
fsubrs
jmp
ret
aam
icebp
dec
stos
mov
sub
xchg
clc
xor
jnp
xor
jb
lock
cmp
mov
enter
in
subl
lcall
clc
xor
inc
pop
ret
arpl
add
adc
clc
jle
xor
roll
sbb
fistpl
daa
sbb
in
js
sub
add
dec
inc
repnz
nop
jae
add
ret
popf
or
mov
into
testl
xchg
add
jle
xchg
fcmovu
out
xlat
and
addl
lds
inc
decb
push
cli
or
cmp
add
dec
push
ljmp
rcrb
cmp
in
xor
rclb
add
rol
or
in
push
add
out
sbb
add
cmp
cld
add
test
clc
mov
pop
aas
sub
mov
cli
sbb
inc
xchg
lret
mov
mov
lods
loopne
hlt
jle
lea
and
inc
mov
adc
cli
mul
jle
sub
les
nop
mov
subb
add
testb
jbe
in
shr
mov
xchg
clts
cli
add
aam
shl
lret
and
ret
xchg
pop
mov
add
dec
lret
xchg
sbb
fimuls
push
inc
aas
cs
adc
lods
lds
movsl
test
test
jle
add
add
aaa
jmp
movl
jb
pushf
out
mov
xchg
addb
inc
imul
xchg
ljmp
leave
mov
jno
addl
sbb
jg
mov
ljmp
add
fnstsw
dec
or
aaa
repnz
lods
dec
push
shll
ret
movb
push
test
loop
movsb
ja
pusha
mov
mov
int
ds
inc
mov
in
jg
ljmp
cmpsb
dec
popa
fadds
jg
sub
jecxz
cmc
sbb
cld
rol
lcall
adc
add
jle
pushl
iret
xchg
cmp
ret
add
sarl
pop
sarl
sbb
inc
clc
adc
dec
test
sbb
add
orl
aad
loope
aam
push
aas
or
out
mov
mov
pop
lds
inc
or
cmc
jae
aaa
fdivp
fldl
nop
and
mov
inc
xchg
mov
sbb
lcall
inc
daa
push
xor
add
sub
in
xchg
sbb
sbbl
jmp
pop
add
xchg
hlt
subl
out
sbb
and
mov
dec
lock
xor
jns
add
out
add
add
adc
xor
loop
fdecstp
sbb
dec
mov
insl
xor
test
dec
scas
inc
cmp
repz
fisttps
xor
lea
xor
in
pop
fsts
add
jp
push
cmp
in
dec
xor
add
push
cld
push
ret
in
pop
mov
xor
scas
insb
and
dec
aad
jbe
in
or
mov
pushf
bound
push
xor
fildl
inc
add
imul
out
and
or
dec
les
push
test
cmpsl
mov
mov
fs
pop
cld
add
mov
fdivr
arpl
es
shl
inc
cltd
pusha
add
cwtl
xchg
lea
jbe
adc
add
fisttps
sub
mov
sarb
sbb
hlt
test
fcompl
ret
mov
add
lods
xor
inc
into
scas
lahf
adc
mov
add
negb
mov
add
and
cmc
addl
push
scas
nop
pop
imulb
cmpb
aam
out
int3
lret
popf
add
mov
mov
das
int
lods
test
mov
inc
sub
cmp
sbb
repz
adc
and
push
push
lods
dec
ss
mov
mov
sbb
dec
sahf
clc
int3
and
inc
sub
shrb
repz
push
sub
lcall
clc
xchg
jmp
lock
pop
ret
add
shl
dec
and
add
mov
push
hlt
out
mov
lods
and
sub
dec
scas
sbb
in
sbb
jp
add
or
gs
add
add
imul
mov
call
mov
nop
inc
ret
mov
jns
mov
clc
popa
push
xchg
adc
in
xchg
pop
cwtl
sbb
xor
push
mov
std
daa
add
stc
sar
out
or
xor
push
call
lret
push
fsubrl
sti
add
dec
mov
fwait
push
pop
jge
adc
fadds
inc
cwtl
add
pop
xchg
mov
adc
jmp
inc
jmp
pop
in
mov
pop
dec
adcl
insb
push
arpl
jae
inc
push
sub
sbbl
mov
loop
je
or
cmp
fdivrl
hlt
mov
jp
pop
cwtl
cltd
hlt
bound
outsl
leave
popa
xchg
dec
xor
scas
fisttpll
add
std
iret
and
lret
insl
sub
lods
sar
in
fistps
rcr
xor
in
push
insl
push
sti
add
push
mov
fdivs
in
dec
adc
jne
lock
add
lds
add
movsb
mov
outsb
int3
push
jns
lea
sbb
mov
cmp
jecxz
xor
or
insl
pop
pusha
ja
test
ljmp
push
popa
scas
mov
aas
jno
je
pop
sahf
dec
shl
icebp
sahf
sub
in
loopne
mov
xor
popa
daa
daa
push
sbb
add
push
adc
cltd
inc
sub
add
icebp
dec
jg
cli
xchg
or
jp
mov
cmp
aaa
pusha
sub
add
out
data16
hlt
adc
int
cmp
mov
shlb
xchg
xor
mov
jmp
fildll
add
sbb
mov
in
cli
xor
mov
and
ds
xor
mov
add
ds
mov
hlt
loope
add
out
lcall
dec
stos
jmp
dec
outsb
cld
aas
jnp
or
sub
xchg
mov
flds
gs
sahf
cmpl
add
xor
add
jns
enter
fs
jge
dec
pop
add
out
mov
or
adc
in
mov
mov
push
insb
rol
adc
jl
mov
pop
jo
jb
call
aam
add
ss
lret
cmpsb
cld
iret
lods
dec
repnz
xchg
mov
and
cmc
int3
sbb
cld
pop
push
xor
cltd
out
dec
pop
ljmp
dec
jns
aam
mov
xor
jo
cld
loope
popf
pop
jecxz
repz
loope
sub
bound
sbb
repnz
push
adc
and
cmp
scas
mov
imul
xorb
aam
fcmovne
xor
xchg
inc
pop
add
cmp
mov
lods
push
lahf
sbb
je
push
cmc
or
jecxz
push
add
mov
movsl
roll
stos
adc
jmp
add
mov
mov
lds
add
fwait
mov
add
into
add
adc
fadd
call
add
xchg
dec
incb
mov
pop
fidivl
out
out
addr16
pop
das
popa
add
insl
fisubs
movsl
adc
and
sbb
out
movsb
and
add
sub
dec
jnp
fildll
pushf
mov
mov
pushl
in
sbb
mov
sbb
in
fst
add
sbb
xchg
adc
jmp
pop
xor
add
lock
imul
enter
ret
mov
popa
xor
xchg
js
sub
sub
roll
rol
decb
test
push
add
nop
jae
pmaddwd
pop
loopne
cmp
inc
hlt
pop
gs
insl
ret
adcb
imull
in
push
sub
std
cli
pop
dec
cmpl
mov
adc
loope
xor
ret
gs
add
ret
jmp
xor
xchg
add
mov
sub
test
pop
lea
xor
xchg
pop
cmpl
add
lcall
add
fimull
add
imul
xor
outsb
dec
add
gs
loopne
pop
stc
lods
fisubrl
dec
dec
outsl
push
test
jecxz
sub
cmp
add
lds
cli
data16
push
sti
jno
add
cltd
scas
idivb
cmp
sub
xor
test
adc
jl
movsb
mov
stos
inc
sbb
test
inc
jmp
js
test
or
mov
jle
inc
jmp
mov
ja
shlb
lea
push
ret
in
push
mov
jno
sub
xchg
push
adc
xchg
cld
lods
lahf
or
push
xor
inc
lods
add
test
movsl
out
pop
add
xchg
jne
iret
mov
and
add
sub
mov
decl
adc
out
dec
xor
add
inc
inc
or
adc
add
inc
jo
dec
loope
lds
cli
jne
and
loop
out
mov
jns
movsl
test
and
lock
hlt
add
ficoml
and
sar
xchg
repnz
add
and
jp
push
adc
jle
ds
adc
mov
call
ror
addl
mov
push
sub
fmuls
pop
pop
or
add
or
xor
test
push
dec
ret
nop
add
push
add
out
pop
pop
test
sbb
cmp
loopne
cltd
bound
insl
pop
add
sbb
ljmp
pop
fildl
loop
cmp
jl
sbb
test
pop
lret
repz
mov
add
mov
dec
xor
pop
sbbb
clc
int
jns
xor
call
nop
cmpb
inc
test
pop
in
inc
mov
cmpb
lcall
mov
sub
add
jnp
test
jp
add
outsl
xchg
push
mov
lock
xchg
or
sub
lods
pop
fiadds
cld
paddd
inc
cmp
bound
rcr
push
repz
and
jg
fnsave
mov
pop
movsl
cmp
ret
inc
mov
mov
add
hlt
dec
cmpsb
jb
cmc
lds
inc
dec
popf
test
mov
push
cld
test
inc
xchg
add
xor
push
jnp
sub
icebp
add
adc
jle
aas
pushf
xor
imul
sbb
je
jmp
cmp
int
inc
add
mov
push
jle
mov
jnp
flds
int3
push
xor
cld
hlt
push
aas
lret
adc
sbb
repz
lea
test
ficoml
mov
mov
jb
stos
inc
lds
xchg
pusha
scas
fstpt
sub
push
lret
cli
dec
je
in
adc
mov
push
mov
lahf
aam
bound
loopne
inc
push
ret
out
cltd
in
dec
cmp
inc
mov
out
movb
add
pop
test
cmp
lret
add
and
cmpsb
pop
push
mov
test
inc
add
xchg
icebp
arpl
push
sbb
jns
subb
aas
out
add
or
jbe
rcr
gs
jecxz
out
add
leave
jle
jge
cmc
adc
outsl
sahf
test
ds
jno
add
dec
dec
vunpcklpd
mov
mov
cmp
fstpl
incb
in
mov
push
push
sub
push
sbb
rcrl
and
mov
jnp
add
sbb
es
add
fadd
mov
dec
lea
test
imul
add
pop
sub
xor
add
add
xchg
not
mov
dec
add
or
jbe
lods
mov
add
out
sub
sbb
ljmp
add
mov
inc
scas
inc
cmp
std
das
sub
mov
add
outsl
xchg
dec
int3
sbb
clc
pop
gs
int
orl
leave
dec
cmp
fstl
and
jno
shrb
cmpsl
inc
movsb
subl
dec
pop
push
daa
mov
jo
adc
test
mov
enter
mov
in
popf
jmp
cltd
lret
call
pop
add
sbb
ret
add
pusha
test
in
mov
pop
or
in
leave
mov
pop
add
cmpl
cmp
ret
aaa
in
pop
add
pop
stos
in
cld
mov
roll
mov
jge
sbb
pop
pop
popa
and
cmp
outsl
mov
add
mov
add
test
push
fisubs
imul
cltd
jge
cmp
jae
dec
mov
add
les
scas
mov
rcl
ficoms
jnp
jns
or
push
cmpsl
lret
jnp
movsb
push
icebp
outsl
mov
xchg
jb
rorb
mov
xchg
adc
loope
and
int
inc
ljmp
loop
inc
and
fiaddl
add
popa
cmp
clc
mov
xor
int3
addl
push
mov
mov
movsb
jne
clc
mov
xor
cwtl
lea
dec
leave
cmp
out
icebp
add
sarb
das
roll
cmc
add
sbbl
loop
add
or
or
and
add
and
cmpsl
dec
jge
pop
nop
xchg
movsb
add
add
cltd
sub
lret
mov
stc
jmp
add
mov
inc
fldenv
and
jae
push
add
pop
mov
test
das
movq
add
and
inc
mov
add
aam
add
cmpsb
mov
fwait
add
xor
ljmp
fsubrl
xor
add
cmc
aas
loopne
xchg
add
fcom
fucom
xor
adc
push
xchg
add
out
rclb
iret
mov
xorl
or
inc
cmc
scas
movsb
mov
out
rolb
nop
leave
jno
andb
pop
cli
dec
add
pop
popf
cs
rolb
xchg
jno
mov
es
add
jns
push
into
cli
jno
xorb
and
and
cld
div
jg
pop
addl
lods
lds
clc
icebp
xor
jne
popa
sbb
inc
dec
push
jae
inc
xor
sbb
std
iret
pusha
dec
jmp
sti
ljmp
cltd
aaa
mov
add
icebp
dec
das
scas
scas
jg
mov
xchg
mov
mov
or
pop
clc
popf
xchg
inc
sbb
dec
xchg
imul
add
inc
sahf
jo
mov
add
dec
cmp
cmpsb
arpl
push
jae
or
sbb
aam
clc
cmpl
jo
outsl
cs
loope
sub
andl
incb
pop
jle
faddl
sahf
shlb
adc
lds
mov
repz
push
xchg
jns
push
idiv
mov
rcll
and
subb
cmpsb
in
mov
dec
pop
clc
inc
add
jbe
lds
arpl
outsl
flds
stos
mov
insl
or
or
subl
add
aad
and
loope
add
jb
push
cmpsl
sti
push
cld
push
mov
xchg
shlb
or
jb
ja
stos
cwtl
push
mov
imul
aam
or
incl
adc
add
mov
cmp
xchg
add
mov
lds
or
xchg
push
nop
sub
outsl
sub
add
xchg
decl
in
push
xchg
test
ficoml
add
int3
dec
mov
mov
test
or
leave
push
jl
jns
mov
stos
mov
invlpg
or
mov
sub
or
gs
mov
push
jp
setbe
stc
xor
and
or
and
push
into
mov
pop
pop
sti
jge
or
add
out
cmpsb
dec
add
adc
mov
mov
mov
daa
add
fwait
cmp
loop
insl
mov
jo
or
test
mov
movb
or
repz
pop
mov
rcll
insb
fs
cs
mov
cmp
jbe
pop
or
adc
sbb
cmpsb
loope
outsb
xor
data16
xchg
push
inc
lcall
fcoml
lret
test
or
sub
add
sub
ss
mov
cmc
adc
arpl
cld
pop
fs
nop
inc
jae
fildll
cltd
push
clc
xor
sarl
xchg
pop
fsubrs
inc
das
call
jmp
fucomp
and
mov
mov
jecxz
sub
push
mov
adc
js
std
ret
inc
cwtl
test
cmp
inc
inc
dec
imulb
fadds
adc
rcll
inc
push
jnp
pop
adc
push
adc
dec
jp
xor
fsubrs
out
mov
ret
popf
mov
xor
loop
cwtl
adc
js
xchg
les
sahf
mov
add
into
or
aam
loope
stos
sbb
out
push
daa
adcl
sub
mov
add
and
inc
push
jmp
add
addr16
inc
sub
mov
xor
sub
xchg
xor
hlt
lcall
test
hlt
xchg
sub
cmpl
mov
add
rolb
jno
stos
pop
jl
aam
mov
inc
pop
add
roll
xor
loope
mov
incl
cmp
das
inc
adc
ret
rcll
insl
stc
xorb
cltd
dec
inc
pop
mov
ret
add
or
pushf
add
push
push
enter
sbb
shl
stc
xchg
jnp
cld
sar
popa
mov
lahf
mov
fwait
in
xchg
mov
push
or
and
movsb
push
cld
clc
mov
andl
gs
fmull
sti
mov
cmc
scas
outsb
add
jge
in
add
sub
jle
stos
xlat
out
pusha
mov
sub
lods
repz
mov
xchg
cmpsb
out
sarl
add
xchg
out
add
or
mov
dec
xlat
add
jmp
testb
xchg
stos
hlt
inc
xchg
add
mov
pop
adc
loop
fdiv
xchg
mov
xchg
clc
add
ds
inc
add
repz
sbb
aam
push
arpl
cwtl
sahf
inc
fdivrl
add
shrl
push
jmp
es
pop
and
jecxz
dec
pop
sub
adc
dec
or
mov
pop
inc
test
popa
addl
xor
dec
jns
dec
sbb
addl
inc
stc
and
gs
je
insb
sbb
notl
push
pusha
jmp
xchg
push
jecxz
ds
push
pop
cltd
pop
leave
xchg
push
pop
ljmp
stos
push
sbb
fnstcw
and
rcl
pushf
outsb
push
sub
arpl
cmpsl
cli
in
ret
pop
fdivrs
int
dec
add
mov
add
in
or
cli
sbb
dec
cld
popa
lock
cmpsb
adc
lret
sub
shlb
subl
out
inc
and
xor
push
lret
mov
es
fistps
loopne
xlat
xchg
loope
insb
lcall
cli
or
jg
dec
in
lret
jge
into
adc
add
addb
add
cmp
sub
jle
nop
roll
iret
add
scas
jo
imul
add
dec
cmp
int3
xchg
add
mov
and
add
mov
sbb
repnz
dec
sub
pop
out
add
clc
or
xor
mov
bound
xor
sbb
add
cmp
or
in
inc
inc
subl
cmc
sbb
add
pusha
inc
push
mov
into
dec
cmp
and
add
arpl
push
add
fsubp
jae
pop
push
movsb
xchg
push
push
add
pushf
test
push
add
mov
je
in
inc
or
ds
mov
int
andb
sar
in
add
lea
sbbl
icebp
or
pop
jae
add
fnstenv
inc
mov
dec
mov
pop
loop
in
test
popa
mov
jmp
mov
stos
les
and
mov
int
xchg
push
lret
mov
bound
ljmp
mov
cmpsl
dec
and
shrl
add
in
aad
xchg
jbe
add
into
mov
je
std
jae
or
xchg
addr16
push
pop
shrl
in
cmp
pop
xchg
test
and
aad
mov
pop
or
dec
mov
add
sbb
jno
jbe
sti
imul
out
jmp
pop
cld
dec
pop
jno
icebp
insl
add
sbb
mov
mov
cmp
pop
in
inc
inc
fcomip
or
xlat
ja
bound
cltd
cmc
add
lds
inc
in
push
add
and
movsb
sbb
add
xchg
jecxz
inc
addr16
sbbl
addb
arpl
xlat
test
push
push
xchg
hlt
cmp
inc
add
dec
enter
add
sub
in
jmp
mov
jne
add
pop
push
adc
popa
and
sub
imul
call
inc
inc
movsb
cld
test
add
sbb
test
dec
jbe
inc
mov
inc
mov
bound
mov
lock
mov
dec
add
mov
jp
cli
notb
jecxz
shrb
jl
lret
insl
jg
xchg
adcl
inc
push
jns
push
and
xchg
sub
mov
xchg
xor
out
mov
call
push
pop
inc
fstl
or
jno
add
int3
xor
add
mov
push
add
cltd
add
ret
lret
mov
add
or
push
hlt
pop
add
jbe
mov
add
add
xchg
sbb
sar
cs
pusha
jae
and
rcrb
xchg
in
imul
mov
push
cmp
xor
lods
fistpl
dec
loope
int3
pop
out
xchg
inc
fwait
sti
lcall
or
add
in
clc
mov
mov
xchg
dec
aas
and
jp
repz
repz
cmc
rclb
or
dec
jnp
in
mov
lea
jecxz
xor
nop
fisubl
mov
inc
mov
mov
aam
cmpsl
jg
jne
sub
push
je
jecxz
xor
out
add
mov
push
lock
or
dec
aas
fidivrl
popf
mov
bnd
push
shl
lret
cmp
out
lret
xor
shrl
andl
xchg
stc
das
pop
and
ss
in
lock
mov
mov
testb
add
cli
sti
adc
mov
cld
xor
loopne
orl
or
add
jp
inc
mov
dec
addl
pop
test
outsl
push
mov
sub
xlat
insl
inc
ret
loop
ljmp
pop
dec
je
popf
pop
int
add
adc
psubq
addr16
and
xorl
push
shrl
mov
ficoms
and
outsb
repnz
inc
or
pushl
sarb
mov
add
mov
xor
leave
nop
cmpsb
lock
jg
rolb
rcr
lock
mov
insb
sub
push
mov
in
dec
mov
xor
addr16
add
mov
jbe
loope
imul
jnp
hlt
mov
loope
fmull
in
outsb
adc
jmp
push
add
xor
mov
mov
pop
scas
inc
mov
pop
aas
data16
mov
out
fnstcw
add
add
xchg
inc
dec
sbb
popf
sub
push
movsb
mov
cld
push
test
jno
sahf
imul
mull
mov
cli
sbb
pop
jge
daa
adc
pop
add
pop
mov
add
int3
nop
cli
fcmovu
sbb
aaa
jmp
inc
add
push
push
scas
mov
xor
push
mov
sbb
add
push
sub
cli
repnz
in
mov
inc
orl
sbb
cmpsb
push
inc
cmc
jae
add
jbe
hlt
xchg
imul
jg
adc
jno
add
shl
jae
popf
or
lret
stos
add
sbb
sbb
cmp
leave
ret
or
add
jecxz
pop
push
out
imul
inc
dec
cmp
hlt
jmp
push
lea
mov
cmp
adc
xchg
jne
add
shll
cmp
sbb
rolb
mov
nop
andl
lahf
sbb
mov
push
rorl
sub
fadd
add
fdivrs
jmp
jnp
mov
imul
mov
dec
out
push
push
sub
pushl
mov
add
xor
pop
das
stos
xchg
out
les
add
add
ljmp
add
scas
jmp
movsb
mul
roll
mov
movsl
or
sbb
enter
addl
push
add
and
push
inc
incb
ret
dec
dec
aad
mov
xor
pop
add
mov
add
cmp
mov
pop
outsl
add
and
mov
and
fdivrs
push
flds
insl
pusha
movsb
clc
dec
jg
or
lret
adc
mov
outsl
xchg
call
push
imul
add
sahf
es
pop
xchg
dec
add
pop
push
xlat
fcompl
adc
xchg
adc
iret
add
pop
cs
mov
xor
enter
jmp
call
cmp
daa
jno
cmp
or
add
add
mov
test
cmp
push
push
mov
xor
in
aaa
pop
xor
orb
push
inc
add
stos
scas
sbb
mov
add
and
xchg
xor
ja
test
icebp
cli
mov
jne
adc
jnp
jg
push
inc
dec
fs
xor
loopne
sbb
pop
daa
add
ret
or
pop
addl
jle
push
repz
mov
and
jae
xor
imul
dec
pop
push
mov
lahf
mov
xor
add
mov
insb
adc
cltd
sub
inc
movsl
lret
mov
jbe
out
ljmp
xchg
cmp
pop
fsub
les
sbb
mov
cmp
add
mov
jo
add
int3
imul
push
push
add
loopne
jns
das
ret
mov
test
or
shlb
subl
icebp
in
adc
cld
ljmp
int3
jne
add
push
xor
testl
xor
add
and
lock
add
xchg
mov
pop
xchg
jnp
test
cmpl
sbb
lock
cltd
filds
dec
add
ret
mul
movsb
stos
outsl
sub
add
outsb
or
mov
ror
add
or
enter
das
psubsw
ljmp
push
jmp
imul
int
lcall
add
adc
and
test
xchg
add
test
mov
inc
dec
in
popa
xchg
mov
push
sbb
push
lods
outsb
add
lods
or
adc
mov
mov
add
cmpsl
mov
cwtl
or
xorl
lock
or
add
mov
ficoms
insl
or
push
mov
push
adcb
mov
mov
subl
in
push
push
insb
sbb
sbb
insl
stos
jmp
mov
mov
hlt
fbstp
in
jbe
add
xchg
jne
or
into
jno
in
mov
stos
lahf
mov
jp
add
jb
add
repnz
jl
pusha
add
cmpl
mov
pop
pop
push
add
int
dec
inc
cmp
mov
adc
ja
rcl
stc
cmp
mov
add
test
xor
sbb
lds
loopne
fwait
adc
ficoml
bound
lcall
loop
adc
clc
add
js
jg
imul
test
pop
jno
rolb
data16
pop
loop
and
rorb
std
xor
pop
push
xchg
sub
add
mov
in
icebp
imul
out
inc
lods
popf
inc
cmp
push
enter
dec
xchg
mov
jb
fldt
inc
push
loopne
sub
jge
out
stos
hlt
push
call
imul
insb
add
ss
shrl
xor
add
add
mov
enter
aam
nop
test
jmp
roll
loope
xchg
mov
xor
dec
jae
mov
xor
jo
or
pop
inc
sbb
push
push
fnsave
cld
add
enter
ljmp
xchg
add
nop
andl
add
push
mull
pop
add
je
mov
in
in
pop
xchg
loope
fstps
lds
push
div
push
cld
sbb
and
push
mov
loop
mov
sub
int3
movsl
jl
call
adc
sub
add
test
aas
pop
call
mov
mov
pop
add
ljmp
sbbb
clc
pop
pop
push
sti
cld
or
jge
popa
push
mov
add
mov
adc
int
sti
cld
pop
add
fwait
cmp
scas
add
push
ds
loope
add
mov
add
cmc
pop
and
pop
push
pop
enter
mov
add
mov
mov
jne
add
dec
inc
loope
sti
out
cmp
daa
and
mov
pop
cmp
push
in
add
add
push
imul
cmpsb
xor
icebp
rolb
arpl
xchg
or
test
jmp
roll
add
mov
add
stos
fadds
int3
mov
stos
stc
pop
xadd
mov
lret
addr16
loop
xchg
movb
xchg
icebp
repnz
pop
lcall
add
cmpsb
mov
into
xor
add
xor
push
inc
mov
subl
mov
dec
add
push
out
pop
mov
addl
in
mov
inc
sahf
xchg
jno
sbb
std
les
loopne
andl
test
insl
lcall
push
aam
pushf
add
jge
sub
dec
dec
sub
jmp
scas
mov
lahf
mov
dec
mov
jl
mov
enter
popa
fistpl
daa
rcrb
cmpsb
mov
xchg
mov
add
push
and
loopne
stc
inc
xchg
std
and
xchg
dec
add
cmp
adc
pop
jge
add
lods
fildll
add
in
pop
mov
stos
cmc
mov
add
int
shrl
pop
pushf
clc
push
or
pop
push
mov
mov
outsb
xlat
std
cmpsl
add
inc
sub
mov
or
dec
popa
cmp
cwtl
jmp
fcmovb
cmp
shrb
test
stos
push
jg
jp
add
push
lds
jge
jecxz
cld
cld
push
push
sarb
sbb
fsubrp
xor
jp
shrb
pop
faddl
dec
inc
mov
sbb
stc
and
cmc
inc
cmpsb
enter
cli
sub
and
test
out
loop
sub
and
xchg
add
das
xchg
mov
cmp
repz
xlat
and
pushw
pop
stc
or
hlt
call
loope
iret
and
shl
add
mov
cmpl
movsl
add
addb
inc
dec
xchg
mov
push
add
xchg
jecxz
shll
inc
lods
out
cmpsb
aad
mov
push
repz
add
jae
scas
and
int3
mov
or
mov
sbb
aaa
adc
fiadds
add
sub
cmpsb
out
bound
je
std
add
or
push
sub
cmp
in
loopne
jg
iret
jge
add
ror
dec
ret
test
lahf
add
insl
and
dec
dec
repnz
xchg
mov
int
lea
xor
sbb
push
inc
std
mov
jns
mov
sti
mov
scas
or
mov
test
je
out
push
ds
subb
add
pop
cmpl
dec
ds
fsubl
jae
jmp
inc
loope
jmp
mov
xchg
add
cmc
mov
ficoms
xchg
xor
mov
push
cmp
repnz
pop
mov
popa
orl
add
add
inc
xor
push
pop
jb
js
in
jbe
sub
and
inc
add
jbe
xchg
adc
mov
adc
jmp
mov
mov
into
jbe
push
not
out
add
dec
stc
sbb
add
add
in
inc
inc
lahf
scas
shll
mov
adc
xchg
lahf
add
xor
in
cs
clc
ret
je
inc
lock
js
mov
in
sub
add
dec
mov
lock
xchg
lret
jae,pt
dec
adc
imul
test
popf
fiaddl
lret
movlps
aas
enter
mov
pop
and
push
cmp
add
imul
enter
inc
test
sub
shlb
cld
jbe
fnstenv
outsl
mov
xor
mov
inc
mov
leave
pop
loopne
jp
sahf
mov
aas
pop
cld
inc
xchg
clc
cmp
sbb
loop
fnsave
clc
jg
loopne
push
sbbl
ljmp
or
sbb
fmuls
xor
fisubrl
mov
in
mov
add
sub
pop
test
ss
jl
ficomps
shlb
push
jg
int
ret
push
rcl
cmp
inc
out
push
xor
sti
enter
cltd
xor
stos
push
lahf
daa
stos
jl
add
sbb
nop
clc
add
or
ds
or
loope
lock
jne
or
push
cld
cs
adc
ds
fcmovnb
addb
adc
je
fwait
pop
or
push
ja
inc
rorb
push
outsb
nop
insb
stc
add
push
sahf
and
fsubl
fimuls
movsl
add
inc
pop
push
fstpt
lret
into
insb
jbe
xchg
pushl
adc
adc
ret
add
test
jge
push
pop
hlt
mov
in
xchg
mov
xadd
xor
cli
sarb
cwtl
inc
movsl
add
cli
mov
filds
xchg
in
push
jecxz
fisubrs
aam
pop
push
jo
mov
mov
adcl
pop
subb
xlat
pushl
stos
xchg
subb
sub
add
push
sbb
pushf
inc
or
sahf
sbb
dec
mov
pop
inc
lcall
fmul
jl
rorl
cmc
out
xor
movb
gs
cli
bound
add
adc
push
cmp
mov
jle
test
mov
dec
add
jp
in
cmp
aaa
xchg
xor
xlat
push
push
pop
and
es
fisubrl
xchg
jo
add
je
push
lock
add
sub
into
jmp
outsb
dec
movsb
lea
in
inc
jg
and
add
out
jge
adc
dec
out
mov
addr16
or
jno
sti
sbb
mov
hlt
and
call
add
inc
jae
fstpt
cltd
jge
cmp
lahf
or
lods
aad
add
push
mov
xchg
xchg
or
sbb
out
outsb
sbb
shll
add
jg
into
sbb
stos
and
in
add
jno
mov
in
adc
sahf
mov
test
aad
mov
es
mov
dec
add
push
adc
pop
cmp
sub
add
addr16
mov
jno
push
cmp
ret
and
ficompl
dec
jp
pop
outsb
addb
sbb
xlat
cmc
lock
std
aaa
mov
cld
shrl
mov
add
repnz
je
and
divl
add
pushf
cmp
fdivl
std
jl
jae
popl
mov
and
add
aam
mov
or
add
sbb
xor
jb
loope
xchg
mov
push
popa
jl
adc
hlt
lods
out
mov
and
repz
jns
push
dec
and
out
inc
add
inc
repnz
push
jno
xor
lcall
mov
outsl
push
xor
jl
int3
loope
or
inc
ljmp
test
jae
add
mov
lahf
mov
mov
add
cs
sub
pushf
add
add
out
rorl
sbb
add
push
push
loopne
fsts
push
xchg
aaa
add
lock
das
pop
mov
jb
sub
int
cmc
xchg
inc
add
sub
pop
or
into
incb
mulps
cmc
push
imul
xor
push
sti
bound
sbb
inc
imul
jle
out
cmc
clc
test
or
cmp
fiadds
xchg
cwtl
add
mov
rol
sbb
add
add
ret
sbbl
fldcw
shll
push
movsb
sub
mov
jno
jmp
and
mov
add
push
sarb
and
mov
xchg
movsl
push
int3
jns
and
insl
dec
jecxz
inc
cmp
or
adc
cmp
pushf
inc
shrl
or
loopne
loope
imul
mov
sbb
cmp
fs
repnz
hlt
and
popa
popa
add
mov
push
pop
sub
sbb
add
cmpsb
lea
add
out
mov
aaa
jns
fistps
icebp
shlb
enter
jmp
les
ret
fmull
cmp
add
pop
gs
pop
mov
fs
cmc
mov
aaa
aad
sbb
fcomi
sub
stos
incb
push
insl
cmpsl
xchg
add
mov
xlat
cmp
xchg
call
or
mov
mov
cli
mov
xchg
inc
ret
subl
add
int
popa
dec
push
adc
add
aas
scas
xor
add
ja
int3
add
cmp
bound
add
pop
mov
scas
lret
push
jmp
or
and
pop
lcall
dec
mov
add
loop
and
je
andl
xchg
lahf
andb
add
aad
in
repnz
cs
add
inc
adc
fiadds
das
movsb
rcrl
xchg
es
xor
addl
sbb
mov
or
sbb
jb
call
jmp
pop
mov
xlat
inc
mov
add
jns
push
ljmp
ss
mov
or
cmp
bound
xchg
push
and
mov
pop
rolb
popf
adc
and
lea
add
add
arpl
sti
mov
and
jnp
js
sub
jo
imul
dec
enter
adc
fldt
cmp
les
xlat
andb
jne
jp
pop
test
or
sbb
inc
adc
repz
adc
xor
arpl
stos
jmp
stos
xchg
adc
adc
imul
movsl
add
jne
jns
add
mov
stos
ds
mov
dec
lods
frndint
insb
fiaddl
mov
dec
and
mov
in
push
je
movl
mov
movsl
mov
add
loope
je
popa
add
mov
xchg
popf
mov
aaa
out
pop
lock
add
negl
popa
jmp
or
mov
bound
test
cmp
sbb
loope
pop
and
inc
sub
jne
and
pop
dec
sbb
xor
addr16
orb
in
xchg
scas
lods
xchg
cwtl
lcall
imulb
sbb
push
pop
mov
pop
push
mov
add
xor
or
and
add
xlat
in
add
or
mov
int3
in
int
imul
add
mov
sub
sub
xor
in
and
shrl
mov
push
add
push
stos
jl
mov
hlt
push
rolb
push
xor
cmp
mov
into
stos
mov
add
push
sarl
arpl
sub
iret
mov
add
cs
lret
test
xchg
add
and
inc
orb
nop
or
cmp
ljmp
inc
out
push
inc
stos
sub
dec
pop
call
pop
push
cli
mov
lods
add
jmp
or
add
and
fsts
xchg
arpl
jno
mov
loope
out
stos
or
pop
jbe
ficoms
add
shlb
bound
lock
cmc
out
add
test
aas
bound
clc
add
lds
or
or
fldenv
mov
idivl
ljmp
jecxz
fcompl
jne
mov
adc
mov
fistps
mov
enter
cmp
add
dec
add
inc
dec
movb
mov
mov
dec
add
fmull
shlw
pop
dec
andl
fldcw
popa
shlb
sub
sbb
jmp
dec
mov
inc
adc
test
aad
xchg
lret
adc
in
clc
fisttpl
sahf
sti
test
mov
aad
rcll
inc
add
into
sbb
loop
rolb
push
pop
jmp
lock
ja
enter
add
jb
jp
cld
fxch
hlt
lcall
lret
faddl
cmc
ds
xlat
push
add
mov
dec
cld
xchg
imul
sar
jne
outsb
or
lcall
inc
lock
sbb
sub
imul
add
cmp
push
mov
fiadds
mov
inc
sti
xor
movsb
xor
mov
popa
jnp
inc
test
xor
dec
jns
aam
or
lret
incl
cmp
add
mov
add
sub
fistl
mov
cmp
inc
push
sbb
push
clc
sbb
adc
sbb
in
cmp
cmp
ljmp
shll
std
fstl
mov
mov
dec
jno
mov
add
pop
dec
add
fsubl
add
loope
pop
pop
xchg
inc
hlt
clc
add
out
stc
bound
push
jb
pop
cmc
out
pop
or
inc
mov
clc
repnz
jp
sub
push
dec
mov
je
xchg
pop
scas
jns
pop
aam
add
cmpsb
jo
jne
lods
bound
outsl
dec
mov
sbb
xchg
push
adc
adc
add
loop
fistps
aas
icebp
enter
adc
and
dec
test
faddl
sbb
jmp
adc
rcrl
in
mov
shlb
mov
or
sub
out
add
mov
cli
shr
das
xchg
add
dec
js
aam
adc
add
xor
lcall
xor
cmpl
adc
add
adc
stos
add
movsb
fnstsw
mov
add
lret
mov
dec
xor
add
sub
lahf
insl
push
js
jmp
rorl
test
out
fcompp
sub
aad
lods
mov
leave
nop
add
jl
add
sub
sbb
outsl
push
loope
popa
xor
cmpsl
jnp
dec
cld
or
sti
sub
mov
dec
cli
sub
mov
pop
add
inc
sub
call
add
enter
push
sub
push
ljmp
push
gs
jne
sbb
hlt
push
dec
mov
jbe
add
pop
jmp
icebp
in
insl
mov
cmp
sub
jecxz
and
mov
rorb
fstpl
mov
mov
xor
les
pusha
loop,pn
mov
xchg
add
stc
sti
mov
movsb
out
mov
sub
stos
out
adc
pop
dec
xor
test
lock
add
pop
and
mov
sbb
sbb
or
stos
ja
rclb
cltd
or
in
push
adc
xchg
popa
mov
pushl
cld
aas
mov
xor
and
add
xchg
ret
popw
cmp
adcl
dec
enter
sub
xlat
lea
out
divb
daa
cli
clc
mov
jae
addl
mov
add
insl
adc
and
jl
or
push
mov
add
pop
ret
sbb
add
dec
add
out
mov
call
push
add
incl
push
xchg
out
lea
lret
cmpsb
pop
pop
int
aas
xchg
jg
scas
pop
outsl
test
pop
addb
sub
out
ficoms
nop
cmpsl
mov
xor
loopne
sbbl
movsl
rcr
ficomps
ljmp
jmp
mov
pusha
jb
leave
jl
jge
sbb
rcrl
pop
mov
add
aad
add
dec
xchg
add
js
outsb
add
mov
stc
sub
incb
mov
inc
push
add
hlt
jl
sti
test
pop
out
lret
mov
add
les
jmp
add
imul
cli
cmp
xchg
pop
ja
add
dec
lret
mov
push
xchg
adc
mov
xor
scas
cmp
in
mov
sbb
mov
add
dec
pushf
movsl
adc
cltd
jnp
sarl
sbb
push
add
mov
fsub
dec
xchg
jo
movsb
sub
cmp
test
cmp
lock
xchg
push
add
jne
add
and
jb
add
cltd
mov
das
dec
test
stos
push
sbb
push
popf
mov
mov
add
mov
fsubs
inc
enter
stc
push
sbb
mov
fstpl
sub
inc
scas
and
dec
add
push
scas
repnz
push
jo
cli
decb
cli
pusha
test
repz
dec
add
les
insl
cmp
out
push
int
mov
cmpsl
loop
leave
xor
iret
add
sbb
mov
les
push
mov
in
dec
jns
das
lcall
pushf
adc
add
fwait
andb
mov
sbb
add
push
in
incb
push
mov
popf
add
mov
dec
lret
inc
xchg
andb
dec
fnstsw
cmp
xor
rcll
inc
xor
jb
mov
push
call
sbb
mov
aaa
push
es
cmp
lcall
sub
in
mov
aad
jp
add
and
add
in
int
and
sbb
pop
test
add
clc
jmp
fnstenv
lds
dec
pop
ss
gs
sahf
sbb
jge
iret
mov
xchg
add
mov
add
ss
jb
xchg
xor
adc
mov
jne
insb
movhps
lahf
dec
and
imul
mov
sub
cmpsl
xchg
pop
sub
lret
inc
add
mov
stc
jecxz
clc
cmp
orl
dec
lcall
add
inc
je
in
daa
pop
pop
cli
sti
call
scas
adc
fnstenv
insb
sub
decl
into
inc
pop
pop
push
and
push
lcall
movsb
xor
pop
adc
arpl
jl
dec
and
or
lahf
pop
sbb
out
std
imul
push
stos
add
push
fisubrl
cmp
stos
mov
lret
push
smsw
cmp
ret
popa
mov
inc
cs
xchg
rcll
jae
mov
and
push
nop
cmpsl
and
je
repnz
pop
mov
jg
sahf
jge
pusha
sti
sub
inc
lock
xchg
and
loope
sub
or
cli
xchg
dec
mov
xchg
out
jl
out
mov
jp
test
loopne
or
lea
hlt
enter
cli
mov
aad
cmpl
fdivrs
into
mov
repnz
js
mov
les
add
sar
mov
inc
sub
push
cld
mov
and
or
jo
popa
ljmp
nop
in
shrb
mov
lds
jmp
push
subb
mov
jo
incl
stos
or
enter
les
mov
fdivrp
cmpsl
inc
fstp
cmp
ret
mov
push
inc
push
mov
add
jge
push
hlt
cmc
or
dec
leave
lret
xor
mov
pop
loope
fs
push
and
push
and
dec
lds
mov
cmc
adc
add
loop
scas
add
ja
out
pop
mov
cld
imul
dec
pop
dec
push
jnp
popl
jle
leave
cltd
adc
cli
stos
in
fs
divl
pop
sbb
mov
sub
inc
enter
je
popa
in
inc
inc
das
fidivrs
stc
push
xlat
std
pop
imul
outsl
add
dec
mov
add
sub
xchg
shr
add
decl
movsb
sarl
add
loope
add
cs
add
in
enter
pop
xchg
mov
inc
mov
sahf
xlat
mov
cmpb
push
clc
add
xchg
fildl
mov
lcall
xlat
cmpl
or
adc
rolb
mov
divl
sub
sub
stos
jns
push
add
inc
cmp
cmpsl
push
jmp
leave
loope
outsb
cmpsb
sbb
and
pop
push
adc
movsl
lret
sti
mov
aam
je
and
aaa
add
jo
jb
lea
dec
cli
icebp
jnp
mov
aas
pop
mov
stos
cmc
or
inc
adc
mov
sti
jecxz
add
loopne
fsubrs
and
mov
push
lds
sbb
mov
cli
xlat
repnz
xor
das
rorl
and
imul
icebp
enter
mov
dec
cmp
lret
mov
xchg
mov
jno
pushf
mov
icebp
dec
jbe
and
mov
push
xchg
addb
add
cmp
pop
jge
add
mov
inc
out
and
mov
movsl
jmp
adc
mov
cs
icebp
adc
cwtl
insl
push
add
mov
adcl
adc
xor
ret
xorl
lret
xchg
xor
sti
std
inc
stos
das
adc
clc
leave
add
cmpsl
fdivl
mov
int
cld
xor
xchg
in
mov
inc
aas
jecxz,pt
lret
fldenv
add
dec
mov
pop
pushl
xchg
push
dec
jmp
orl
mov
mull
enter
shll
stc
mov
fadds
aad
pop
inc
push
outsb
sbb
incl
sub
sub
movsb
in
xchg
outsl
mov
inc
sbb
ficoms
jecxz
dec
cld
jbe
or
iret
mov
cltd
popa
mov
hlt
sbb
cwtl
dec
xor
cmp
outsl
fdivr
add
xor
jp
pop
ja
or
add
scas
stos
arpl
mov
incl
cmp
test
popa
mov
ds
fadds
mov
push
pop
or
dec
lock
fwait
jae
sbb
aas
fmull
loope
xchg
popa
bound
sarl
call
inc
add
adc
lods
or
inc
dec
shrl
add
ja
lock
movsl
lods
insb
cltd
dec
lds
stos
iret
sbb
add
rep
in
bound
test
add
push
pmuludq
movsb
fildl
gs
push
sbb
cld
add
popa
mov
pushf
add
dec
xor
ljmp
xchg
pop
add
mov
cld
filds
loopne
test
mov
xchg
adc
add
sub
cmp
jo
rorl
fwait
sub
cltd
add
mov
or
add
fistpl
add
push
lods
aaa
nop
jg
add
popa
insl
add
sub
ss
sub
aam
dec
daa
add
push
popa
int
subb
sub
cld
and
or
mov
ljmp
push
xor
or
lds
cmp
lcall
xor
push
cld
shl
mov
cmp
out
aaa
pop
or
movb
ret
int3
addb
mov
dec
add
add
pop
hlt
loopne
push
pop
adcl
sbb
in
rcrb
stos
fsubp
jae
mov
adc
push
vandnps
mov
in
cmpsl
or
add
mov
add
jl
jne
xlat
leave
xchg
arpl
add
mov
lods
popa
xchg
les
fadd
test
movsl
cmpsb
movsb
or
mov
and
xchg
pop
mov
mov
cmpb
lret
add
or
jecxz
pop
xchg
sarb
cmp
ret
lahf
push
add
mov
add
in
lods
outsl
mov
int3
mull
sbb
xchg
fadds
push
dec
subb
out
mov
or
jo
push
xor
xchg
adc
bound
mov
add
mov
incb
xchg
hlt
enter
ret
repz
sbb
jecxz
inc
lods
inc
ja
rol
add
negb
mov
push
jno
fsubrs
jmp
or
add
pusha
sub
jp
sbb
push
dec
or
xchg
test
cmc
pop
add
cli
daa
add
mov
push
ret
mov
xchg
test
dec
mov
mov
icebp
fincstp
or
repnz
add
or
sub
pop
outsb
popf
lret
mov
jle
jae
xor
add
rorb
lods
lret
mov
movsl
idiv
inc
mov
repz
cmp
mov
sbbb
push
movsl
inc
jo
push
add
adc
dec
add
rclb
mov
or
pop
xor
or
jne
add
test
cmp
in
xor
aas
push
clc
pop
mov
jl
popf
js
ss
int3
xor
adc
mov
push
mov
stc
cmc
sarl
lahf
add
cld
mov
mov
mov
lods
stc
aam
stos
and
in
add
mov
lds
leave
incl
nop
cld
adc
jp
and
or
cmpsb
adc
into
fmulp
mov
push
cmp
fldcw
cmp
shrl
dec
dec
out
mov
loop
std
xchg
add
data16
addl
add
nop
arpl
adc
add
and
dec
shll
das
cmp
test
scas
add
xchg
add
or
add
mov
test
sarl
dec
loop
cs
ja
rcll
repnz
sub
mov
or
movsb
gs
ret
mov
add
movsl
add
pop
fs
inc
std
add
faddl
add
popf
lret
in
into
xchg
aaa
dec
in
roll
jp
push
mov
cwtl
pop
cmp
stc
gs
sti
jbe
pop
cld
adc
mov
aad
jecxz
out
sbb
cmpsb
add
gs
out
cli
mov
add
and
dec
xchg
cs
push
add
loopne
jno
pushf
cli
mov
xchg
mov
out
arpl
jg
enclu
into
xchg
andb
mov
int
clc
xor
scas
inc
mov
cmp
cmp
add
loop
ret
pop
enter
cs
sub
inc
int3
js
rcll
add
outsl
mov
fldl
add
movsb
lret
add
push
cmp
lock
lods
lods
add
rcl
dec
jmp
mov
leave
subl
aas
incb
pop
andl
mov
jecxz
pop
dec
inc
jmp
adc
jae,pn
pop
cld
sbb
cmp
jp
dec
cmpsb
or
mov
jb
add
pop
pop
xchg
adc
sti
mov
push
mov
mov
add
stos
cmpb
int3
xchg
jge
add
cs
add
sbb
arpl
inc
push
in
xchg
shll
or
cld
push
lcall
fimuls
cmpsb
loopne
fcoml
push
dec
cld
sub
add
adc
ret
pop
ljmp
fstps
popa
adc
mov
insb
scas
add
out
dec
lcall
mov
add
shll
jecxz
idiv
in
pusha
pop
mov
mov
sub
insl
push
add
pushl
pusha
mov
lods
mov
addr16
dec
and
mov
pop
mov
jnp
out
lahf
sbbb
sub
inc
and
add
jge
popf
inc
sbb
xorw
mov
cmpsb
or
mov
test
xlat
js
sti
shll
out
xor
ja
cmc
cld
es
mov
mul
mov
dec
jno
lahf
addl
das
push
xor
adc
sbb
mov
jbe
fildl
pop
pop
cmpsb
jmp
xchg
adc
xchg
pop
repnz
ds
mov
jmp
mov
inc
pop
inc
js
or
or
arpl
add
rorb
inc
mov
shrb
xor
and
scas
sub
fstpl
repz
add
js
or
imul
add
mov
and
sub
in
xchg
dec
inc
and
movl
cld
pop
cli
aas
negb
and
hlt
pusha
add
stos
dec
push
and
aad
fimull
fcmovu
xorb
mov
arpl
mov
ret
repnz
adc
das
add
loope
stc
andl
xor
bound
push
add
lahf
sub
cwtl
fistpl
mov
adc
cmp
push
arpl
dec
int
sahf
sbb
imul
out
inc
lds
and
xchg
mov
mov
jge
gs
push
in
inc
sbb
bound
sub
lret
xchg
cmp
jae
mov
mov
imul
pop
ja
dec
mov
cld
ljmp
cwtl
inc
pop
add
jl
ds
xor
stos
pop
call
mov
sub
lret
filds
xor
inc
or
out
out
lods
lret
sub
fs
clc
and
inc
shrb
sbb
test
add
xchg
fnstsw
or
add
ret
dec
pusha
aas
mov
push
enter
add
add
dec
js
ret
iret
dec
loopne
sti
pop
cld
leave
popa
dec
sbb
add
sbb
rclb
bound
or
sahf
xor
ss
and
mov
add
xor
ss
xchg
sbb
pusha
andb
ljmp
jne
ljmp
add
int3
sub
push
push
lret
xchg
add
mov
pause
inc
jb
cmp
or
daa
fnstsw
add
xchg
cmc
rcll
mov
push
jns
adc
das
dec
cmp
popa
shrl
insb
mov
add
repz
cmc
push
js
xor
fsubs
lahf
dec
or
andl
sbb
fxch
xor
test
loope
and
jge
mov
jae
dec
sub
add
pop
pop
mov
mov
lret
jae
xor
lea
lds
push
mov
sbbl
nop
jno
mov
es
inc
popa
add
sub
mov
xor
add
stos
shrl
repnz
mov
fs
in
std
xchg
cmp
adcb
add
or
add
push
clc
pushf
pop
cmp
push
out
jns
sti
add
aaa
jecxz
push
int3
add
icebp
xor
cmc
arpl
ss
mov
lret
cli
xchg
inc
add
add
add
cmc
jecxz
inc
lea
xchg
sahf
jne
orl
add
push
xchg
push
add
mov
mov
push
mov
and
mov
and
xor
push
add
inc
add
mov
and
or
cwtl
push
les
push
add
pop
test
add
out
lea
sahf
fstl
jo
adc
imul
lds
sbb
ss
add
shl
nop
stc
fiadds
rcll
andl
roll
repz
fsub
add
test
and
popf
js
sbb
int3
inc
add
xchg
push
mov
xor
imul
mov
inc
dec
xchg
aaa
sbb
add
aam
test
lock
lds
pop
pop
mov
and
lods
push
mov
outsl
and
fiadds
int3
inc
and
repnz
lcall
add
sar
jmp
xchg
ret
push
push
pushf
movsl
cld
ss
adc
jmp
xorb
xor
ret
sahf
pop
ja
xchg
lcall
jb
shrb
and
sbb
iret
cld
mov
out
fbstp
add
xor
loopne
not
cmp
inc
add
dec
clc
cmp
push
inc
sub
add
cmpl
js
movsl
push
lcall
adc
adcb
aaa
add
mov
jmp
mov
adc
aad
add
mov
or
dec
and
test
dec
or
xchg
adc
xor
pop
inc
sub
mov
sbb
enter
add
insl
lods
push
jg
int3
adc
pop
mov
mov
imul
xchg
xchg
jae
call
push
jecxz
pushf
jg
push
adc
add
dec
push
cs
aad
pop
enter
subl
add
lock
jmp
rclb
push
lret
mov
call
mov
nop
sub
xchg
xchg
jno
add
sahf
push
mov
lret
hlt
cs
cwtl
push
daa
or
jg
pop
jmp
mov
or
fiaddl
dec
shlb
push
mov
cli
add
sahf
mov
adc
je
or
inc
jne
mov
adcl
jns
push
popf
loope
in
mov
test
es
adc
cmp
xchg
inc
imul
loop
or
mov
inc
lea
outsb
pop
mov
out
mov
jns
test
in
ljmp
int3
pusha
addr16
and
out
add
stos
call
and
add
hlt
mov
movsb
test
inc
pushf
cmpsb
repnz
mov
jmp
bound
test
lock
push
andb
enter
int
xchg
lret
xchg
test
stos
mov
xchg
andl
es
sbb
cli
orb
add
sub
add
jle
mov
pushf
mov
cmp
cmp
shr
push
hlt
sahf
cli
div
movsb
add
or
xchg
insl
pop
push
nop
mov
push
mov
xchg
std
sbb
push
std
add
adc
out
xor
scas
mov
lcall
mov
jp
mov
rclb
cli
cs
mov
les
xor
inc
pop
scas
jl
add
pop
push
push
rcrb
lret
add
filds
add
adcl
ficomps
je
out
add
cmp
int
test
xor
xchg
add
push
sbbl
stc
call
popf
sbb
pushf
out
push
add
inc
out
jmp
testl
cld
mov
mov
fmuls
lods
add
fwait
mov
hlt
out
fsubl
xchg
lds
mov
xlat
data16
pop
in
push
fwait
push
xor
rolb
and
flds
sbb
dec
stos
jo
fwait
mov
and
scas
cli
fidivrs
add
sar
mov
sbb
mov
bound
js
add
movsb
xchg
pop
fsubl
sbb
into
dec
pop
andl
jb
mov
cmpsb
add
insb
cmc
lcall
adc
sarl
test
pop
xor
and
adc
sbb
add
jmp
jae
hlt
inc
aam
lret
add
jp
in
xchg
leave
add
cmc
flds
mov
cmp
mov
daa
les
insl
sbb
aaa
mov
cld
add
xor
test
mov
pop
jae
sub
in
ds
jp
shll
ljmp
mov
push
imul
call
jns
add
xchg
pop
add
into
sbb
pop
cmp
or
add
mov
in
and
call
cmp
add
sti
mov
xchg
add
add
inc
je
add
daa
inc
sub
dec
clc
add
cmpb
idivl
or
mov
rclb
iret
scas
sti
add
insl
jl
xchg
addb
push
movsb
repnz
xor
cmp
fsubs
mov
jae
push
int3
mov
add
inc
xor
icebp
sub
divl
sbb
add
mov
stos
inc
icebp
and
xor
push
loop
test
shl
xchg
stos
mov
les
mov
adc
enter
jg
out
add
icebp
sbbb
ret
xchg
add
push
movsl
add
cld
aad
mov
mov
cmp
add
dec
out
mov
mov
push
ds
or
int
inc
pop
inc
arpl
mov
or
jmp
lock
repnz
xchg
fisttps
sbb
jne
jge
add
sub
mov
jae
cld
pop
cmp
xchg
push
cmp
mov
sub
ss
pop
imul
sub
mov
outsb
and
ret
jmp
sbb
cmp
out
enter
xor
xor
lods
add
add
andl
cmp
add
clc
sahf
rolb
dec
cmpsb
mov
add
lds
sbb
ss
in
add
pop
test
and
push
nop
jg
lret
sbb
lods
out
cmpsb
mov
das
sub
inc
mov
sub
adc
and
pop
test
and
xor
ja
xchg
dec
xor
fiaddl
nop
in
xchg
aas
xchg
loopne
cld
testb
mov
fnsave
mov
mov
sbb
mov
adc
add
cwtl
lock
popl
dec
sub
or
pop
add
fistpl
add
test
and
aaa
scas
aas
push
in
sbb
or
push
add
pop
loope
add
add
stc
dec
imul
mov
jg
scas
imul
push
ja
push
sarl
aaa
sahf
aam
cmp
shl
lea
test
cmc
pushf
aam
xchg
cmpsl
jge
cli
insl
in
ss
test
xor
fwait
inc
dec
pop
and
movsl
mov
scas
ljmp
mov
shrb
inc
mov
push
and
call
scas
daa
cmp
xchg
insb
insl
push
add
cli
movl
bound
lea
cmc
popf
out
mov
mov
jb
push
add
cli
inc
dec
je
mov
xor
cmc
adc
mov
sbb
jbe
bound
mov
lock
es
roll
add
loopne
stos
out
clc
sub
sub
fstpl
addr16
add
dec
mov
hlt
lret
push
cmp
out
cmpsb
push
jge
fdivrl
push
add
int
addl
jmp
imul
mov
and
popa
and
mov
outsl
addl
roll
push
sarb
ret
out
pop
pop
sbb
arpl
and
xchg
fisttps
add
sbb
adc
aad
sahf
and
xchg
mov
xor
add
add
ret
push
pop
hlt
fdivs
repz
fsubrl
roll
adc
imulb
out
test
jl
std
ds
xor
sbb
add
sbb
out
add
mov
es
add
fwait
pop
xchg
xchg
shr
add
inc
rcrl
xchg
push
ret
addl
sub
jmp
add
or
stos
adc
addr16
in
add
xchg
pushf
cli
pop
dec
push
add
hlt
xchg
cmp
mov
mov
push
int3
mov
inc
mov
mov
adc
ficoms
and
and
mov
roll
movsb
inc
inc
leave
scas
fildl
mov
xor
out
shrb
aam
sbb
jmp
jl
incl
and
ret
lret
dec
insb
pop
xlat
rol
sbb
divl
int
adc
sbb
stos
mov
enter
faddl
ljmp
test
mov
shrl
add
sti
test
aaa
icebp
aad
jae
cmp
add
mov
add
jo
xchg
jge
incl
xchg
lcall
outsl
inc
add
stos
aaa
loope
jg
add
loope
xchg
pop
inc
insl
and
hlt
dec
dec
sbb
les
lea
scas
dec
enter
jb
imul
cmc
add
inc
iret
xchg
mov
add
and
jle
insl
add
add
xchg
mov
jae
cld
cmp
xchg
jecxz
dec
pop
or
push
sahf
xor
pop
vcomiss
or
incl
test
enter
pop
mov
jmp
lahf
enter
xchg
xor
fcmovnu
shll
jnp
roll
and
adc
dec
push
pop
fdivp
in
mov
adc
cmc
nop
add
leave
dec
mov
sub
loope
popl
push
decl
popa
sarl
push
cmp
ds
stos
mov
push
xchg
sti
popa
jecxz
in
mov
lods
mov
cwtl
aas
test
iret
pushf
pop
and
add
pop
xor
aas
xchg
or
decl
and
push
cmpsl
test
sbb
add
ret
fbstp
decl
xchg
mov
enter
jns
imul
fidivs
fadds
addr16
or
and
out
jbe
enter
pop
dec
mov
out
mov
frstor
mov
into
test
add
cltd
dec
lar
repz
fldln2
mov
push
test
xchg
scas
imul
repz
push
adc
mov
add
add
dec
daa
cmp
push
dec
outsb
inc
ret
xor
sahf
add
cmc
or
jbe
insb
rolb
jae
icebp
inc
hlt
pop
ret
xchg
roll
rcll
lahf
push
lret
and
outsl
enter
or
aam
adc
add
pop
jecxz
and
jp
arpl
mov
in
repnz
xchg
je
loope
jne
jmp
scas
scas
inc
or
and
add
je
pop
push
fildl
add
jp
cmp
je
lret
xor
jo
mov
add
xchg
jl
es
testl
aam
jle
dec
ljmp
loopne
push
hlt
sub
cli
sub
xor
sbb
imul
xor
ljmp
mov
jle
xchg
or
push
sahf
adc
fs
int
inc
jl
pop
fisubl
gs
cmpsl
jae
cli
cwtl
and
dec
cmp
stos
cmp
cmpl
cld
stos
jp
pop
xorl
loop
leave
inc
adc
xor
xor
sbb
push
test
mov
and
daa
pop
inc
ljmp
in
leave
mov
fucom
pop
sub
dec
sub
mov
ljmp
add
mov
loope
xchg
add
add
add
incl
mov
jg
inc
in
xor
add
mov
xchg
pusha
dec
adc
cmp
or
add
sbb
leave
cwtl
out
das
jbe
inc
out
mov
add
sti
aaa
and
lahf
mov
pop
cwtl
and
inc
out
sbb
xlat
in
jmp
mov
leave
test
in
mov
shll
mov
inc
lret
filds
xor
xor
es
test
cmp
mov
fdivrp
add
andb
xchg
inc
shl
pop
rcrl
addb
enter
jmp
add
imul
sub
lods
test
cli
mov
out
jecxz
lock
add
addb
push
fcompp
jge
sub
pushf
mov
sbb
mov
test
xor
imul
scas
aad
mov
xor
std
xchg
jae
sub
xchg
stc
cmpb
aam
data16
mov
add
rcr
sbb
enter
add
or
leave
pop
mov
mov
pop
ja
lods
add
add
mov
lods
into
mov
mull
ss
xor
mov
imul
fistpll
add
insb
add
xlat
push
xchg
les
xchg
sub
hlt
into
loopne
enter
cmpsl
xchg
ss
std
ljmp
mov
add
inc
xchg
loope
ljmp
out
push
cmp
inc
popw
lahf
xor
mov
shl
cs
xchg
paddb
xchg
sub
fildl
jge
add
mov
cmc
add
data16
out
loop
mov
mov
cmp
cmp
cmc
xor
push
iret
subb
out
and
mov
lret
rcrl
outsl
dec
add
fcomps
mov
jae
adc
fstpt
cmp
mov
push
jo
mov
adc
xchg
sub
lods
pop
push
test
popa
adc
add
cmp
dec
or
sbb
rcr
popa
xor
xchg
push
adc
aad
jb
jbe
sti
or
add
xchg
xor
cli
mov
lret
js
xchg
inc
fildl
jno
adcb
out
int
mov
outsl
push
ljmp
test
or
jmp
andl
push
xor
insl
bound
mov
push
inc
pop
inc
rorl
cmp
mov
pop
cmp
repz
cltd
mov
jb
andl
clc
jbe
lea
jmp
sub
jns
shl
into
loop
mov
ret
xchg
das
hlt
push
cli
xor
adc
mov
aam
xorb
lcall
cli
lahf
push
xor
sahf
outsl
test
sub
or
mov
mov
xor
pop
push
adc
les
mov
outsb
push
inc
das
daa
mov
sarb
mov
mov
cmpsl
cltd
inc
lock
add
ljmp
clc
adc
pop
add
dec
mov
lods
cmp
mov
push
int
mov
sbb
cmp
add
call
dec
insl
xchg
cs
add
mov
add
iret
loop
cmp
jmp
xchg
xor
hlt
sub
jecxz
nop
add
loop
sub
adc
test
mov
push
shll
movsb
jns
cmpsl
out
jp
lahf
add
xor
in
das
aam
push
adc
add
add
sbb
sbb
in
cmpsb
dec
sti
lock
aad
imul
cli
cmp
ret
and
std
add
sarl
sarb
pop
or
add
mov
ja
sub
les
popa
sbbb
push
pop
add
fcmovne
repnz
add
pushf
out
loope
mov
stos
shll
xchg
hlt
das
mov
cmp
test
into
fdiv
jle
sahf
insb
movsl
add
mov
cs
movntq
mov
or
cld
inc
lea
xor
pop
rcrl
clc
in
leave
inc
movsl
flds
inc
scas
cmp
add
sbb
imul
push
add
stos
cmp
popa
xor
psubb
lret
mov
outsb
cmc
fdivr
xor
and
loop
and
nop
lret
out
sahf
lea
and
sbb
dec
lock
sar
test
push
jno
inc
stc
dec
adcl
test
mov
mov
enter
into
xor
repnz
pop
aam
das
pusha
add
pop
jg
adc
outsb
mov
jg
sti
mov
jp
push
test
adc
jle
xor
sahf
sti
cs
das
mov
lds
xchg
and
sbb
pop
fbld
adc
mov
fbstp
mov
hlt
mov
xor
mov
cmp
jmp
mov
pop
add
sub
add
int
mov
or
xor
add
out
jecxz
gs
repnz
sbb
sbbl
das
test
add
fidivl
sbb
test
nop
mov
lret
arpl
test
lock
mov
icebp
lods
ljmp
fwait
icebp
dec
daa
addl
rcl
dec
adc
sbbl
stc
insl
dec
inc
add
xor
shl
push
and
mov
lock
jns
mov
out
sbb
out
xchg
sti
aas
mov
pop
ret
jle
adc
es
loop
xchg
or
movl
sub
and
add
cwtl
arpl
repnz
stc
or
add
sahf
mov
cmc
movsb
dec
sbb
jl
add
loop
push
mov
int3
cmp
sbb
push
mov
push
push
clc
test
fbld
pusha
inc
fldl
adc
subl
add
mulb
in
fbld
cmp
in
fs
xor
xor
sub
aaa
mov
mov
pop
or
movsl
and
es
adcl
dec
das
sub
sbb
cmp
xor
pop
jno
pop
ja
add
mov
cld
sti
xchg
push
add
cmpsb
lds
xlat
xchg
xor
add
add
push
into
outsl
cmp
xchg
orb
decl
incl
mov
cmp
add
popa
dec
cld
loopne
in
pop
std
fwait
sub
jnp
lea
out
out
push
pop
fldl
xchg
push
inc
jns
sbbb
add
mov
or
call
test
lods
or
mov
iret
xor
cmp
fidivrl
mov
pop
das
dec
pop
add
mov
add
ljmp
sti
cld
hlt
dec
lcall
jno
push
add
xor
add
sub
out
les
sub
push
rclb
mov
push
xchg
xor
cmpsl
imul
xchg
dec
push
add
jnp
gs
fdivrl
add
and
cmp
jo
into
sbb
add
xchg
cmp
shll
fsub
repz
rcrl
pop
add
fisttpll
push
fldt
push
xchg
push
nop
daa
xor
icebp
stos
add
insb
dec
xor
repz
xor
add
mov
stos
xchg
dec
add
addb
mov
mov
movsb
cltd
stos
rorl
sub
hlt
and
les
ret
mov
dec
imul
dec
add
push
xchg
xchg
addl
fmuls
mov
mov
pop
outsb
pop
dec
add
mov
push
movhps
sti
loopne
and
add
sub
jl
mov
xor
loope
push
repz
pusha
add
sahf
jb
fisubrs
fwait
hlt
or
mov
add
fnstcw
xor
scas
pushf
add
mov
add
ret
add
cmp
xchg
ds
push
xor
sarl
stos
data16
adc
dec
sbb
out
out
jl
add
mov
mov
add
or
add
andb
xor
mov
add
outsl
add
sub
inc
in
loopne
into
jecxz
dec
ja
dec
push
adc
sbb
outsl
add
or
stc
sti
aam
add
dec
add
sub
adc
add
mov
jl
add
add
jp
outsb
push
hlt
mov
mov
pop
test
sub
cmc
sbb
test
mov
push
pop
cld
call
push
cwtl
inc
xchg
test
add
sub
xlat
out
pop
push
sti
sbbl
int3
sub
stos
inc
add
shr
pop
or
ss
jmp
xorl
hlt
mov
cmp
sub
addl
mov
xchg
pop
insb
dec
mov
xchg
mov
testl
mov
lock
fwait
mov
cmp
sbb
add
xchg
mov
inc
pop
xorb
pop
insb
jns
sbb
cmpsl
out
sbb
inc
mov
lret
decl
sub
mov
int
add
iret
mov
lahf
xchg
rolb
inc
shr
pop
cltd
mov
mov
mov
pop
call
pop
in
mov
sub
mov
fcoms
add
and
std
loopne
loop
pop
mov
add
or
movsl
test
addl
arpl
cli
add
cmpsb
inc
and
in
sbbb
jle
in
rcrb
std
inc
aad
movsl
mov
mov
add
xchg
loop
lods
addr16
jl
hlt
jnp
add
push
mov
xor
push
adc
scas
pop
inc
xorb
fldt
adc
ds
cmpsb
rcl
mov
adc
inc
popa
xor
mov
in
dec
mov
inc
stos
add
outsl
mov
mov
ljmp
aaa
or
xchg
loope
add
adc
or
inc
mov
or
fwait
add
push
mov
rcl
out
lahf
add
ret
hlt
js
hlt
xchg
packuswb
mov
and
subl
adc
ret
or
jae
mov
xchg
inc
ljmp
cltd
add
fnsave
xchg
repnz
dec
and
popw
mov
add
adc
repnz
mov
xor
mov
add
dec
sub
mov
xchg
mov
push
inc
and
out
mov
outsl
sti
insb
mulb
imul
popf
shrb
call
pop
and
mov
push
or
scas
xor
into
xchg
add
cmp
xchg
int
dec
sbb
add
cs
or
test
repz
lcall
popf
or
out
mov
adc
push
shrl
xchg
adc
push
mov
add
cmpsl
int3
adc
rclb
add
push
push
orb
push
add
xor
leave
inc
or
gs
out
sbb
sub
daa
rolb
sarl
xlat
roll
shll
jbe
loopne
cld
lea
cli
push
push
add
cmp
mov
adc
in
sets
rep
add
out
rcrl
cld
test
add
lods
cmp
lahf
dec
loopne
test
repz
sbb
sbb
and
shrb
mov
push
cmp
ljmp
mov
adc
mov
popa
sbb
pop
and
mov
fisttpll
cmp
sti
add
lods
iret
loopw
movsl
add
adc
lock
mov
lret
jne
ja
pop
push
push
add
xchg
pop
add
ljmp
dec
mov
int3
sub
mov
cmp
nop
popf
xor
mov
dec
dec
stos
into
and
xor
xor
lock
xor
push
loop
jg
loop
jnp
out
repnz
dec
cli
stos
mov
std
pop
add
ret
push
sub
add
mov
jmp
xchg
std
mov
hlt
in
dec
sbbl
dec
jbe
xchg
push
addr16
mov
and
test
push
jbe
lret
mov
push
add
xor
cmp
xchg
add
dec
or
cmpb
push
mov
cmpb
cmp
cmp
pop
in
adc
repnz
lock
hlt
icebp
mov
arpl
add
adc
mov
stc
rolb
emms
xor
hlt
hlt
push
mov
cmpsl
fs
inc
dec
loope
cmp
xor
nop
pushf
pop
inc
mov
imul
or
xor
or
test
push
cli
dec
fidivrs
rol
out
mov
pop
addl
fs
pop
loope
add
xchg
fsubp
stos
cli
ret
add
cmpsl
mov
add
push
sbb
xor
dec
add
sub
jg
les
mov
dec
in
jge
daa
push
leave
jnp
mov
call
movsl
pop
shll
lea
test
or
in
gs
adc
test
ds
sbb
ljmp
mov
movsb
push
adc
dec
inc
in
cvtdq2ps
sbb
inc
dec
popf
add
or
fstpl
cltd
mul
push
jle
lock
pop
or
pop
cld
jb
addr16
test
mov
lahf
dec
push
add
fcoml
sub
add
push
add
adc
scas
lea
das
add
push
mov
add
push
mov
jle
xor
xchg
sbb
in
bound
dec
pop
clc
mov
lea
push
inc
add
incl
andl
dec
or
sar
aaa
icebp
jno
adc
sbb
cmp
andb
outsb
in
xchg
stos
lock
and
lahf
inc
sub
add
bts
cltd
pop
les
cld
enter
jbe
shll
jo
repnz
jle
pusha
mov
in
enter
add
imul
mov
push
lret
lret
inc
ror
sbb
mov
add
add
sbb
pushl
outsb
and
lahf
add
mov
shlb
jl
sbb
add
sub
fwait
adc
xor
ret
mov
leave
fimull
or
adc
pop
push
fdivrl
jecxz
cld
sbb
cmp
cmp
and
xchg
dec
add
dec
and
mov
mov
xor
shlb
stc
and
add
lcall
or
or
mov
sarl
xor
out
jl
rcrl
add
mov
cs
push
sbb
or
cwtl
push
push
sub
pop
sbb
ficoml
pop
mov
loopne
xchg
int
add
fmuls
fildl
rolb
lea
lret
push
test
mov
lods
cmp
xorl
imul
or
sahf
mov
add
and
pop
fisubrs
sub
push
sbbb
sbb
xchg
xchg
jnp,pn
jno
fcompl
jmp
addl
int3
fsub
js
push
aad
mov
hlt
nop
rolb
mov
sub
hlt
adc
or
mov
jne
test
ljmp
or
test
xchg
and
or
mov
add
fildl
cli
sbb
sub
cmp
clc
push
pop
stc
test
pop
jno
sbb
jb
fimull
mov
sahf
pushf
cmp
mov
fisubs
or
cmp
adc
jo
or
add
incb
pop
xchg
es
inc
adc
test
mov
cmpsb
pusha
add
out
sub
or
add
sbb
mov
adc
push
pop
cmp
or
add
add
add
or
pop
fisttpll
mov
and
popa
add
adc
mov
add
ss
bnd
add
xchg
jo
cmp
push
lahf
add
inc
fcomp
imul
cmp
roll
jecxz
fiaddl
mov
addl
push
shrb
pushf
lea
inc
add
cwtl
shrl
fisubl
insb
sub
cmpsl
ljmp
dec
inc
sub
add
lods
lods
pop
cld
push
sbb
xchg
ds
sub
or
push
jno
sub
imul
std
outsl
insb
and
bound
aas
mov
leave
mov
lock
pushf
inc
pushl
icebp
dec
out
push
add
hlt
inc
xor
iret
int
repz
inc
jbe
lret
add
pusha
andl
mov
adc
inc
inc
jl
fiadds
add
jbe
add
mov
mov
add
cmc
xchg
pusha
fcoms
add
ficoml
push
mov
stos
jl
flds
push
fmull
hlt
or
jae
push
xor
mov
add
in
jg
mov
enter
jmp
mov
stos
add
push
cli
mov
aad
push
cmp
add
add
sub
xchg
lock
inc
xorl
push
mov
lahf
popl
outsl
mov
jbe
inc
cmpsl
flds
pop
jns
cmpsb
pusha
or
add
push
mov
push
imul
lcall
jns
mov
add
pop
mov
nop
movsb
shrl
mov
in
xor
xor
mov
enter
lcall
outsb
inc
lds
adcb
hlt
clc
outsl
pop
jecxz
fbld
out
stc
lret
xlat
xor
adc
hlt
aad
rclb
push
add
pop
push
cmp
xchg
add
mov
add
andl
xor
sbb
jmp
movsl
test
xor
xchg
inc
add
jg
dec
jmp
or
mov
mov
int
divb
xor
ds
dec
outsb
adc
mov
in
negb
fnstcw
or
js
and
inc
mov
outsb
xor
fists
push
ficompl
loope
push
push
fimull
leave
cld
xchg
pusha
dec
les
stc
xor
mov
jno
add
or
mov
push
xchg
add
mov
add
add
cwtl
lret
cmp
out
test
faddl
insl
push
fs
and
add
outsb
inc
jns
ss
jno
mov
jecxz
aam
cld
dec
lods
sub
or
lods
jp
fistl
pop
jmp
popa
cwtl
push
stos
jge
sarb
add
jns
lcall
xlat
in
sti
aam
aaa
pop
inc
imul
or
lods
loop
scas
add
out
iret
mov
outsb
add
cmpsb
sbb
or
mov
mov
gs
ds
fs
sahf
pop
mov
jb
jns
inc
addb
inc
in
loop
xor
and
mov
inc
mov
push
mov
fldenv
or
lret
add
inc
addr16
stos
mov
js
and
xchg
das
add
lods
xchg
std
cs
mov
pop
cmp
inc
jno
scas
add
ficompl
push
rclb
sbb
ljmp
hlt
fiadds
dec
jnp
push
push
cli
add
add
sbb
rcrl
and
inc
mov
lea
add
ljmp
enter
add
pop
or
mov
enter
orl
es
jg
cmp
les
jge
fstpt
xor
clc
add
pop
pusha
mov
cmp
movsb
shrl
cmp
cmp
jp
aad
mov
sub
cmc
int
cwtl
mov
fdivrl
add
lcall
sub
inc
mov
jle
cmp
cwtl
xchg
mov
add
cmpb
sahf
repnz
sub
add
add
inc
mov
shrb
mov
outsb
pop
roll
mov
cltd
fadds
jbe
push
adc
push
push
lods
xor
pop
je
out
out
xchg
arpl
loop
inc
xlat
xchg
test
lret
incb
push
jle
mov
xchg
dec
mov
lea
andl
add
dec
mov
fildl
cld
mov
clc
out
add
xor
lock
or
aam
cmp
call
sarl
inc
dec
sub
out
mov
and
lock
loope
pop
jbe
mov
fwait
cmpsb
adc
scas
loope
cmpsb
clc
cmp
jge
fcmovbe
adc
and
and
sbb
das
add
xor
jg
cmpsb
shlb
dec
add
outsb
push
cmp
push
xchg
add
lods
or
mov
add
cltd
call
add
in
inc
xchg
cmp
int
out
push
mov
jb
dec
rcl
add
sbb
and
addr16
sub
clc
sbb
sub
addb
xor
iret
push
dec
out
add
fstpl
dec
push
lock
mov
pop
add
aas
pop
mov
dec
hlt
fiaddl
pusha
loopne
xchg
lods
leave
mov
xchg
push
jnp
inc
cmp
add
xchg
lret
in
sbb
dec
lds
mov
test
in
shlb
fidivl
mull
add
bsr
aaa
add
mov
mov
ficomps
jno
pop
add
add
fdivl
loope
add
idiv
xor
out
mov
add
ljmp
mov
cld
mov
xchg
xchg
cmp
mov
or
lea
pop
lret
sbb
xchg
adcl
mov
or
jbe
test
fnsave
sbb
push
sti
add
out
push
aaa
mov
hlt
add
mov
cwtl
add
pusha
add
jp
sub
xchg
add
movb
testb
fadds
repnz
or
cmp
ljmp
sbbl
popa
sbb
jae
sub
out
pushf
push
mov
mov
in
pmuludq
and
dec
cld
mov
and
ret
add
add
xor
inc
gs
adc
lea
jno
push
xchg
add
aam
adc
sbb
adc
jae
je
shlb
gs
or
in
out
mov
mov
fs
out
sbb
adc
add
lret
test
loope
mov
sub
adc
add
lret
sbb
fs
test
adc
lods
imul
fidivs
cmp
stc
mov
fcoml
cmp
and
gs
hlt
sbb
push
sbb
xchg
mov
push
add
mov
popf
sbbl
push
jge
add
ret
call
insl
mov
mov
or
jb
jmp
mov
pusha
aas
mov
add
orl
xchg
js
imul
dec
mov
hlt
xlat
mov
int3
jg
mov
clc
mov
add
add
sahf
scas
sub
jnp
sbb
cmp
lahf
mov
fwait
add
dec
add
movsl
cs
jmp
pusha
out
push
in
or
ret
lods
int
lods
mov
add
out
js
mov
inc
xor
dec
push
and
mov
cld
adc
testb
decl
sub
add
adc
inc
incl
addb
iret
mov
ds
xchg
lret
inc
and
xor
enter
adc
add
fwait
adc
sbb
push
cld
icebp
jb
roll
sti
lret
or
add
in
pop
test
aaa
pop
add
cmovge
xchg
lea
pop
hlt
incb
inc
inc
cmc
lock
pop
clc
aad
mov
loop
dec
lret
mov
cld
jmp
sub
dec
xchg
js
fstl
mov
inc
inc
cld
and
inc
mov
add
stos
cmp
inc
mov
test
es
and
lods
mov
inc
and
mov
or
dec
push
and
repnz
push
cmc
push
xchg
adc
sbb
add
ss
test
pop
clc
mov
jbe
add
loop
std
aam
ret
subb
les
push
add
and
cli
push
add
xor
subl
rcrl
add
lcall
hlt
push
in
and
mov
xor
push
xchg
xor
mov
jo
pop
testl
xor
dec
mov
adc
add
and
dec
lcall
std
sub
push
add
jne
ficomps
lock
sti
pop
bound
mov
js
inc
cmp
ret
mov
add
scas
pop
repz
inc
mov
cmp
and
imul
or
pop
cli
cmc
shr
add
xchg
ret
fimuls
inc
sub
sub
pop
ss
add
rol
xchg
pop
stos
jl
mov
jno
out
add
data16
push
sets
iret
loopne
jge
pushf
sbb
xor
aad
faddp
mov
aas
test
pushf
jbe
mov
push
push
hlt
dec
add
adc
sub
mov
add
in
dec
add
lods
sub
loope
mov
jae
leave
sub
aam
add
cmp
mov
sbb
sub
out
pop
or
rcl
add
cmpsl
lds
jns
push
fstp
add
jl
lret
jmp
and
fwait
sahf
adc
fnstenv
dec
call
ss
cmp
pop
out
jl
xorl
add
and
enter
lret
mov
add
cmp
mov
xor
xchg
cli
cs
adc
add
xor
loopne
sbb
lahf
xor
sub
fiaddl
push
cltd
mov
jp
jle
add
push
fdivrp
mov
andl
mov
adc
jp
movsb
popf
add
sti
mov
push
les
push
cmp
imul
vphaddbw
push
outsl
add
mov
orl
ret
add
mov
inc
fiaddl
lahf
mov
faddp
test
lds
mov
addb
xchg
add
pusha
scas
in
arpl
out
xchg
mov
lods
jecxz
in
lods
dec
add
pop
add
adc
add
mov
jg
mov
mov
sbb
adc
xchg
cltd
add
repz
add
imul
adc
pop
and
add
incb
arpl
pop
scas
mov
add
iret
lret
jb
sahf
movsb
adc
mov
aam
adc
xor
data16
adc
repz
inc
test
orl
pop
hlt
sub
hlt
xchg
shll
adc
fistpl
cmp
push
cmp
sbb
shrb
ret
sbb
inc
xor
pop
mov
jae
add
push
inc
test
cmp
push
dec
jge
test
adc
je
inc
cmp
aam
jmp
pop
mov
jns
ss
ja
in
jno
lock
adc
into
dec
mov
and
ret
cld
ret
push
clc
push
pop
jae
sahf
test
inc
lahf
fiadds
sub
movsl
mov
divb
in
lret
adc
repz
push
dec
fdecstp
leave
mov
insb
in
pop
adc
mov
stc
negb
arpl
add
adc
xchg
mov
or
in
push
adc
pop
inc
aad
mov
dec
std
mov
cltd
cld
sbb
mov
inc
out
stos
incl
int
xlat
add
xor
mov
sar
add
mov
cs
add
or
jb
stos
mov
jle
sub
xor
rcrl
movb
add
in
adc
add
test
add
inc
negl
push
mov
das
jg
xchg
shrl
cmp
sub
adc
shrl
mov
mov
jno
test
dec
xor
cli
cmp
sbb
rcrb
add
cld
ret
inc
mov
mov
sub
int3
lods
add
enter
mov
lock
test
mov
sar
mov
mov
clc
mov
push
sub
mov
sbb
mov
pop
out
mov
pop
add
call
jne
popf
mov
ret
mov
loopne
sub
pop
shr
test
stos
add
pop
loopne
sub
cmp
add
and
stc
add
push
inc
out
and
add
sarb
push
xor
xchg
jg
movb
lahf
mov
jl
std
add
add
aaa
daa
xor
add
fcoml
imul
jle
mov
ljmp
add
addl
jp
push
add
mov
dec
xor
outsl
pxor
mov
mov
roll
clc
pop
and
dec
xchg
cmp
clc
push
ss
cwtl
popa
add
repz
jmp
nop
add
lahf
stos
or
movsb
aaa
or
xchg
sbb
sub
push
push
mov
lret
and
xor
push
add
mov
jge
or
repnz
dec
xchg
sub
add
cmp
and
insb
push
fistps
repz
mov
fiadds
push
jne
fsubs
repnz
add
jno
add
aam
lock
pop
xchg
add
xor
inc
jae
dec
hlt
ss
mov
sti
scas
jno
xchg
xorl
test
mov
enter
pop
xor
lahf
insb
mov
add
addr16
dec
cmp
cmp
enter
sbb
xor
add
fnstcw
popa
push
fsubs
mov
jge
pop
mov
xor
add
cld
roll
inc
xchg
push
push
push
sbb
sub
jne
mov
push
dec
hlt
add
imul
sub
mov
sahf
jne
mov
fdivrp
adc
xchg
fadds
mov
cltd
xlat
fstpl
jnp
add
loopne
insl
cmp
mov
into
shlb
cmp
fnstenv
cmp
jne
testl
cli
add
or
ljmp
pcmpeqw
sub
fnstenv
pop
fcmovnb
push
popa
add
jns
outsl
inc
lea
inc
cmp
xchg
add
inc
sub
into
dec
xor
dec
out
outsb
pop
adc
add
inc
push
cmp
sbb
jnp
mov
sub
cld
scas
dec
mov
adc
ret
repnz
add
mov
ret
pop
mov
in
fsubrs
fisubrs
mov
cmp
or
add
push
test
sbb
sahf
int3
clc
es
mov
fwait
out
pop
pop
and
loop
cli
test
hlt
add
sbb
fdivrs
sub
aad
imul
add
mov
iret
hlt
scas
adc
pop
repz
int3
test
pop
add
and
add
xchg
add
clc
shrb
push
imul
in
ja
mov
mov
cmp
xor
outsb
jns
arpl
and
in
test
dec
lods
add
data16
lret
push
add
and
mov
xor
add
in
and
jp
dec
mov
xchg
adc
pop
add
mov
jp
cli
movsl
xchg
cmp
fcomip
jmp
inc
inc
adc
aaa
mov
xchg
pop
xor
mov
add
in
pop
imul
mov
add
mov
mov
add
jl
lahf
xor
cli
popf
scas
in
cs
dec
pusha
sbb
inc
sbb
pusha
add
cmp
sub
faddl
add
in
lods
loope
js
pop
add
bound
insl
icebp
jbe
adc
lods
ja
and
shll
cmp
mov
mov
cmp
add
pop
dec
lret
shr
lea
int3
insb
arpl
stos
adc
stos
add
and
ret
out
mov
sbb
sbb
repnz
dec
loop
add
subl
adc
leave
call
fnstcw
ja
cmp
add
cmp
jae
sbb
sahf
push
and
sbb
jg
inc
add
mov
fstpl
inc
adc
ja
mov
inc
jns
mov
push
pop
imul
mov
add
aad
shl
rorl
sbb
sti
add
in
add
jo
xor
jnp
test
and
pop
add
les
out
jge
mov
sub
jae
mov
add
lds
stos
leave
add
mov
add
or
out
add
dec
adc
shl
int
cli
or
aaa
and
and
lods
xchg
aas
mov
fwait
pop
push
add
mov
sbb
cld
add
mov
test
lods
insl
sbb
pop
xlat
add
mov
lahf
out
daa
repz
sub
loopne
jnp
mov
xchg
out
xor
mov
inc
pop
add
add
sub
jecxz
cltd
je
cld
in
add
enter
or
test
jo
jg
xchg
add
or
hlt
jle
mov
lcall
movsl
fbstp
into
add
push
xchg
enter
cmp
pushf
jecxz
xor
xor
inc
mov
cmp
lods
dec
movsb
xor
nop
stc
js
mov
repz
lahf
cmpl
lock
into
pop
mov
cmpsb
or
mov
repz
push
jmp
fwait
popa
mov
push
fmull
popf
lods
les
inc
push
subl
cld
add
and
add
add
or
movl
enter
add
inc
lahf
test
ds
add
cmpb
jmp
clc
mov
inc
in
imul
loope
jbe
arpl
add
mov
xorb
pushl
inc
cmc
push
data16
mov
shrb
ljmp
in
pop
dec
inc
add
xor
stos
aam
pop
std
ret
or
mov
jne
movsb
push
and
adc
test
add
out
xchg
fnsaves
out
jbe
add
jg
pusha
jmp
shrl
adc
mov
push
dec
sbb
and
add
or
add
test
cmp
add
xchg
add
jle
loopne
clc
xchg
das
flds
dec
push
or
mov
jae
jmp
jb
scas
jo
add
cs
pop
in
std
fildll
jnp
inc
dec
mov
out
add
jp
inc
mov
test
add
outsb
fnstcw
fildl
test
sbb
int
or
fcoml
push
daa
and
jecxz
add
jl
adc
hlt
pop
mov
sub
roll
inc
or
loopne
idiv
push
in
test
sbb
cmp
add
xor
hlt
sti
pop
test
mov
ljmp
mov
add
fdivrs
adc
push
roll
jl
imul
shl
add
sbb
add
rorl
cmpsl
ljmp
lods
fldenv
push
lcall
cmp
pop
enter
in
testb
cmp
or
test
add
rcrl
add
mov
sti
cmp
jb
lea
cli
cmpsl
xchg
cmp
jg
lret
dec
mov
lock
ret
add
xor
loop
std
or
nop
imul
fsubl
lods
lock
inc
add
cli
sar
pop
nop
das
lods
in
add
sti
mov
scas
ret
xchg
cltd
add
or
sub
sub
inc
jl
jo
jnp
mov
cld
decl
inc
jmp
jecxz
and
cld
rcrb
into
dec
aas
aam
jno
movl
lods
jnp
in
and
pop
add
movsl
xchg
call
dec
sub
aad
imul
mov
sti
inc
stos
popl
or
adcb
cld
or
dec
pop
jge
in
imul
out
add
jae
mov
int
outsl
adc
rol
or
int3
inc
subb
daa
sub
cmp
jnp
out
or
sbb
repz
rolb
add
aaa
sbb
add
sbb
clc
sahf
call
cmp
mov
cmpsb
adc
push
cli
inc
data16
xor
mov
shrb
mov
out
leave
jo
repz
lock
hlt
pop
inc
repz
mov
add
lret
and
push
mov
lods
push
jl
inc
cmp
int3
sub
leave
cld
push
cmp
cmp
mov
add
inc
movsb
inc
les
add
mov
stos
shufps
lahf
cmp
jno
and
mov
add
rcl
mov
pusha
in
js
push
pop
push
out
ss
lods
add
dec
mov
test
jecxz
sub
add
nop
adc
cwtl
repz
out
mov
jbe
add
imul
jnp
outsl
data16
dec
imul
imul
aaa
or
mov
in
and
jno
add
sbb
lea
and
data16
jl
mov
lock
mov
int
fs
cld
add
or
out
loope,pt
test
inc
mov
and
adc
add
movsb
adcb
ret
pop
js
fld
jne
add
lea
lock
sbb
pop
mov
shlb
je
bound
aaa
stos
aaa
subl
dec
xor
hlt
jl
inc
cmpsb
out
inc
and
adc
outsb
dec
imul
cmp
pushf
rcrb
cmp
gs
adc
repz
jnp
in
hlt
sbb
add
inc
mov
sub
fisubrl
jmp
leave
sti
inc
add
add
mov
push
gs
xchg
mov
das
mov
push
and
add
stc
push
sbbb
leave
stos
test
add
push
mov
add
repz
dec
in
jb
add
or
cld
movsb
cmp
mov
stc
add
repnz
jp
fmuls
into
scas
cmp
pop
xchg
stos
xchg
ficompl
shlb
je
and
mov
ret
pop
mov
mov
hlt
jnp
out
out
pop
xlat
push
or
add
inc
pop
daa
cmpsb
pop
aas
mov
add
mov
popf
lcall
xor
sahf
add
adc
outsb
addr16
add
xchg
mov
ss
aas
popf
kmovw
enter
dec
push
sar
lahf
add
pusha
mov
sub
incl
push
outsl
loop
sub
addr16
sub
mov
mov
sub
fucom
jmp
insb
add
out
fisubrl
sbb
mov
add
imul
add
test
lcall
in
sbb
daa
in
in
cmp
mov
rcpps
ja
sub
decl
aaa
xchg
cmp
sarb
jmp
das
fiadds
scas
nop
sub
dec
sti
lcall
or
pop
inc
icebp
jecxz
cmp
nop
jae
lods
pop
pop
adc
mov
out
cli
mov
and
mov
add
mov
flds
pop
cmp
shrl
pop
bound
das
ljmp
ljmp
pcmpeqb
and
fadd
mov
pusha
add
add
push
add
mov
sbb
mov
jb
hlt
nop
dec
inc
and
pop
and
imul
push
cmp
add
inc
mov
push
mov
add
mov
and
les
mov
rorb
ljmp
adc
das
imul
add
mov
hlt
mov
test
inc
and
push
cmp
call
xchg
mov
xchg
push
jno
sub
mov
xor
xor
adc
push
cmpsb
fisubl
enter
add
inc
lret
push
test
adc
popf
decl
adc
out
outsb
cmp
pop
into
sub
mov
ja
or
arpl
inc
les
and
and
das
les
lea
jge
add
stos
push
and
mov
adc
out
mov
add
mov
loope
nop
mov
mov
scas
jae
in
jns
cmp
xchg
inc
dec
jb
sub
pop
and
or
pop
ds
mov
mov
mov
shl
pop
add
xchg
fstpt
fldl
test
lods
cmp
std
mov
outsl
aas
icebp
lods
int
add
and
sub
jl
push
push
cmp
mov
jecxz
fs
jnp
mov
jmp
mov
scas
leave
cli
lret
lcall
mov
out
fs
mov
scas
add
pop
insl
xor
sub
cmp
dec
jne
or
ds
je
shlb
jl
out
incl
sub
pop
jmp
and
int
cmp
cltd
call
mov
push
sbb
jne
rcll
jbe
inc
sub
or
mov
add
aas
pop
dec
add
jmp
testb
enter
add
dec
add
and
cmc
add
mov
add
jl
mov
xchg
sub
sbb
jmp
fstpt
aad
std
enter
jecxz
mov
cmp
pusha
push
push
sub
ja
in
mov
shll
dec
add
repz
mov
add
mov
or
mov
add
mov
add
aam
and
mov
std
sub
jbe
clc
add
inc
mov
add
dec
pop
insb
cmp
push
fisttpll
sbb
filds
mov
inc
xchg
push
faddl
cmp
inc
je
lahf
lcall
aaa
add
dec
and
adc
ds
ss
pushf
mov
paddusw
xor
stos
cmpsl
mov
lret
cld
into
test
popa
jae
adc
jge
push
inc
jbe
ja
ss
xlat
movsb
cmp
gs
jmp
in
in
inc
rcll
repnz
leave
cmp
clc
call
add
cmpb
mov
fistps
insb
sbb
or
xchg
scas
cwtl
ss
add
popf
mov
repnz
lods
fisubrl
ds
pop
add
pop
jmp
adcb
test
pop
xor
in
pop
xchg
mov
std
call
lock
add
lahf
das
pop
imul
add
aaa
insb
sbb
loope
mov
dec
ds
or
popa
xchg
dec
out
and
mov
jle
push
add
mov
jo
pop
fsubr
add
mov
addl
test
aad
rcrl
cmp
cld
bound
iret
js
push
ja
and
sbbl
lds
mov
add
jmp
hlt
rcrb
push
and
je
out
pushf
add
pop
inc
pop
mov
mov
push
jno
inc
adc
in
scas
and
mov
push
add
or
cld
push
add
adc
orl
andb
outsb
test
inc
add
sbb
aas
push
sbb
push
xchg
push
pusha
cmpsl
int3
mov
add
dec
movsb
lods
adc
xor
xchg
fwait
enter
pop
aad
dec
add
or
and
insb
xchg
test
cmp
ljmp
andb
add
lret
int
hlt
inc
sub
in
icebp
jnp
aas
xor
mov
add
lock
in
ljmp
int
out
xlat
mov
das
in
sbb
cli
sub
and
es
xchg
pop
mov
shlb
mov
mov
xchg
adc
push
add
cmp
icebp
cmpsb
add
jae
stos
movsl
adc
mov
mov
lret
add
xor
xor
cmpsl
in
mov
inc
add
aad
movsl
and
add
mov
leave
mov
inc
movsl
out
cmp
xchg
add
in
shlb
or
or
xchg
cli
and
push
lea
ret
ret
scas
mov
scas
cltd
mov
add
cmp
sub
push
insb
add
add
xchg
inc
fcoms
std
mov
cmp
add
je
cmp
lcall
js
mov
int3
inc
dec
sub
dec
ljmp
imul
fcomps
push
mov
cmpsl
mov
jno
sbb
mov
add
test
mov
clc
sub
inc
xchg
inc
and
aas
push
inc
mov
add
push
in
lds
add
dec
leave
jae
mov
adc
xor
loop
out
dec
aam
mov
jp
sarl
sub
add
cmc
sar
pop
mov
sbb
int3
xlat
and
mov
xchg
ja
push
cmp
pop
repnz
add
sub
mov
add
cwtl
xchg
add
sub
add
jg
add
test
insl
iret
sti
out
ja
cmc
jae
inc
fbld
loop
or
jg
mov
sbb
and
mov
mov
lret
dec
dec
dec
rcrb
or
mov
xchg
into
outsb
test
data16
push
dec
fisubrs
add
jns
mov
scas
add
ret
fldenv
cld
out
lods
add
cltd
fsubl
loop
jl
jmp
sbb
int
hlt
insl
adc
hlt
movsl
mov
inc
nop
pop
loope
add
sahf
pop
cmp
loopne
add
aas
mov
shll
add
cmp
imul
xor
scas
mov
clc
addr16
pop
cli
shll
mov
test
xchg
roll
repnz
pop
lret
enter
jp
mov
add
out
daa
out
stos
dec
add
mov
repz
cmp
sbbl
hlt
pop
aaa
popa
push
rcrb
pop
jno
les
sbb
lods
jns
add
ds
sbb
xchg
mov
inc
sub
in
int
or
xchg
add
push
add
shll
test
add
cld
mov
incl
rcr
ret
push
je
add
push
lods
daa
in
pop
stos
test
pop
and
inc
add
push
mov
lahf
dec
addr16
inc
push
lods
or
add
mov
cmp
sbb
clc
jbe
stos
pop
data16
and
adc
lock
popf
cmc
test
jle
and
sbb
jnp
icebp
roll
cmpsl
add
mov
cmp
stc
push
fadds
add
outsl
add
jle
push
ja
lret
clc
push
sub
fildll
outsb
in
cmpl
add
xlat
frstpm(287
popf
push
sbb
add
inc
add
aas
jne
repz
sbb
rolb
pop
ret
pop
nop
dec
xchg
mov
add
sbb
js
add
imul
nop
pushf
add
jbe
dec
add
repnz
or
add
loope
and
add
push
stos
pop
mov
xchg
push
add
adc
imul
xchg
mov
movb
insb
inc
outsb
push
ror
xchg
add
dec
mov
push
cmp
inc
fsubrl
fldl
pop
jns
xchg
fisubrs
add
cmp
add
js
pop
cld
jmp
fwait
arpl
dec
sbb
mov
nop
lret
xor
inc
mulb
jbe
out
imull
mov
or
mov
je
psrld
call
jbe
mulb
xchg
pop
into
mov
test
cld
jb
scas
push
hlt
iret
fisubs
frstor
cld
push
shl
jb
aam
add
in
data16
pop
cmp
push
add
push
mov
out
pusha
mov
push
insb
aaa
push
test
add
push
cli
popf
pop
mov
push
pop
test
sbb
add
cmp
mov
xchg
out
outsl
mov
data16
inc
mov
aaa
xor
movsl
mov
stc
cmp
mov
add
sub
call
shll
daa
int
scas
push
jmp
cmpl
add
push
leave
scas
cwtl
stos
add
aam
pop
xorl
push
mov
and
negl
in
xor
ljmp
xlat
popa
out
loope
or
jbe
cs
sub
push
add
cmp
stos
int
idivl
in
imul
xchg
and
fs
inc
test
out
test
ds
mov
sub
mov
hlt
shr
in
pushf
adc
mov
add
aad
movsl
xchg
mov
sidtl
js
push
cltd
outsb
adcl
push
xchg
into
add
jle
fsubrl
push
sbbb
iret
cmp
jno
add
or
stos
add
mov
xchg
jo
fsubs
bound
lahf
mov
mov
stc
cwtl
addb
cmp
imul
addl
add
test
jmp
push
pop
sbb
roll
js
decl
mov
jno
adc
adc
mov
stc
xchg
fldl
lret
push
rclb
sbb
imul
adc
jl
ds
push
sti
out
dec
mov
lcall
push
adc
mov
fwait
jb
mov
add
neg
incb
push
sbb
orl
mov
divl
and
adc
pop
cld
adc
push
xor
mov
repnz
cmp
iret
xchg
xchg
pop
lds
in
pop
cmp
dec
inc
cld
xchg
inc
js
rolb
popa
aaa
in
add
aad
jp
insb
mov
fidivrl
adc
xor
je
sti
ret
data16
cltd
xchg
ja
sub
push
aas
stc
push
subl
mov
jnp
popf
xchg
bound
add
inc
insl
pop
ficoml
xchg
sub
dec
mov
add
jbe
inc
add
and
cmpsl
dec
adc
add
movsl
das
mov
push
in
repnz
add
add
das
in
fistpl
sbb
insl
movb
sbb
aam
daa
hlt
loop
popa
jbe
mov
add
int
mov
add
ret
jge
pop
das
add
mov
mov
imul
mov
mov
rdmsr
xchg
or
inc
add
dec
movsl
jno
call
sbb
add
sti
daa
dec
xor
xor
iret
push
jb
ret
lock
mov
add
pushf
cwtl
aad
inc
sbb
adc
subl
xchg
into
and
and
add
dec
cmpsb
push
es
hlt
mov
add
das
shrb
dec
mov
add
daa
xchg
inc
sahf
mov
arpl
add
sbb
nop
add
lds
clc
rcrl
ret
loope
adc
xlat
in
aam
mov
pop
jo
xor
xchg
hlt
mov
shrl
ja
pop
test
fisubrs
cmp
pusha
fldcw
lea
xorl
and
add
fnstcw
add
lods
cwtl
xor
addl
ss
dec
add
out
sbb
jl
mov
fiadds
xchg
rcll
or
sub
ret
mul
pop
push
xchg
out
add
cmp
jns
popa
insl
xchg
fstpt
pop
shlb
test
repnz
mov
and
jae
mov
adc
aam
es
lret
add
inc
dec
loope
sub
jl
push
movsl
js
sub
xchg
inc
lock
jb
xchg
aad
dec
jp
imul
pop
fisttpl
add
xor
lret
add
loopne
or
div
je
filds
sub
adc
mov
and
hlt
test
mov
subb
and
fisubl
out
push
mov
out
test
xor
add
xchg
jns
lcall
dec
fwait
push
inc
cmp
add
inc
push
xchg
or
std
lcall
add
push
and
inc
addl
inc
sbb
mov
insb
push
and
add
outsb
and
inc
mov
in
add
aas
add
clc
repz
add
andl
dec
push
aad
push
adc
jns
loop
into
or
ljmp
inc
nop
popa
sub
adc
clc
ljmp
add
or
cmpsb
dec
ret
das
push
notb
cld
push
inc
mov
push
pop
mov
pushf
les
add
int
shll
sbb
fwait
pop
aam
add
cmpsl
fists
dec
inc
test
les
incl
ficomps
xchg
pop
adc
lock
push
js
add
pop
icebp
int3
add
popa
lock
cld
and
je
pushf
mov
enter
addl
les
out
stos
shr
jb
out
pop
xor
sbbl
ljmp
add
add
incl
jmp
cs
or
add
stc
dec
pop
add
les
fcomi
outsb
jl
je
inc
or
push
ret
cld
scas
iret
mov
xchg
popa
sub
out
sti
jae
bound
mov
mov
int
sbb
xchg
fistps
pop
mov
mov
cmc
in
or
dec
push
mov
hlt
call
cmp
mov
add
mov
iret
fldl
sub
and
jns
shlb
add
dec
pusha
and
push
pop
sub
mov
jge
in
sub
add
add
jp
dec
adc
jbe
test
mov
out
add
pop
cmp
mov
mov
mov
out
stos
xchg
dec
add
dec
in
lods
add
pusha
xor
sbbl
in
call
enter
stos
mov
repnz
push
dec
test
xchg
mov
sbb
adc
cmp
test
les
cmp
mov
clc
dec
and
lcall
jmp
pop
shl
add
cmpsb
sub
inc
xchg
movsb
scas
hlt
jl
lds
add
sbb
push
and
enter
add
call
dec
arpl
pop
ds
inc
sub
fists
cwtl
cmp
adc
out
movsl
inc
add
test
int3
jmp
add
daa
cmp
mov
add
jno
xchg
pop
push
mov
cmpl
adc
adc
pop
lmsw
and
inc
adc
cli
aaa
jbe
inc
add
mov
inc
or
mov
and
adc
aam
sbb
xchg
dec
push
bound
lret
mov
aas
mov
add
dec
jecxz,pt
popf
bswap
outsb
repz
sub
add
icebp
adc
add
jecxz
ja
mov
insb
dec
lods
cmp
std
xchg
int3
jl
or
cld
push
mov
add
rcrl
stos
add
andb
add
movsb
xchg
add
dec
jae
xorl
lcall
loope
xor
mov
test
jb
or
mov
jo
repz
inc
lret
add
pop
call
and
push
inc
loopne
and
roll
filds
outsl
sub
fadds
cmpsl
xchg
add
rcll
dec
inc
mov
loope
sub
dec
and
cmpb
mov
push
inc
lea
lcall
pop
in
and
arpl
jns
push
dec
cld
add
insl
sbb
jg
pop
add
mov
xchg
push
or
add
sbb
cwtl
mov
fldcw
out
cmp
pop
sbb
inc
hlt
sbb
jecxz
leave
sub
mov
sub
lea
mov
loope
and
sahf
stc
cli
push
jno
xor
movl
or
cmc
adcb
faddl
jne
punpckhwd
jb
xchg
and
push
push
mov
adc
cmpsb
mov
aas
enter
out
int
mov
add
mov
sub
push
mov
xor
add
inc
add
test
or
jmp
mov
and
sub
stos
into
cmp
in
jmp
add
cld
or
stos
loope
xchg
jne
fdivrs
xchg
sar
decb
or
insb
testb
mov
pop
daa
lcall
int
popa
push
testl
push
daa
lock
add
fs
or
rcl
pop
sbb
or
mov
lds
mov
in
cmp
pop
roll
mov
pusha
lock
nop
testb
sbb
and
xchg
inc
and
movsb
xchg
push
cli
and
add
ffree
sbb
lods
pop
dec
jp
mov
rorb
fildl
xchg
daa
cs
nop
in
jb
shl
cmp
dec
inc
sti
sbbb
loop
arpl
loope
outsb
sbb
xor
test
fnstcw
pusha
or
jmp
orb
sub
test
stos
mov
jmp
push
in
add
or
lods
mov
incb
lcall
fistpll
mov
cmp
jle
in
jo
lock
push
in
stos
dec
dec
lods
faddp
xchg
add
inc
sbb
xlat
cmpb
or
dec
add
sub
inc
xchg
jecxz
jp
add
mov
pop
push
test
inc
xchg
outsb
mov
pop
out
js
xchg
stos
and
jo
fildll
ljmp
fisubl
pushf
or
add
push
jnp
push
or
subl
fdivrl
or
mov
dec
lret
xchg
add
in
fadds
das
mov
sbb
mov
sub
add
xchg
mov
outsb
push
fidivrs
jge
jge
mov
mov
adc
xchg
adc
adc
push
loope
out
push
jge
inc
aam
outsl
shl
scas
cmp
popa
sbb
pop
mov
leave
mov
jo
and
mov
cmc
sbb
inc
cli
and
inc
pop
adc
decb
ljmp
add
and
add
cmpsb
mov
hlt
add
sahf
sbb
aam
std
add
imul
mov
fildll
shlb
pop
sub
pushf
jmp
inc
cmp
mov
push
pop
mov
xchg
out
clc
and
ret
repnz
std
add
mov
pop
aam
xchg
cmpsb
push
test
test
js
jb
pop
je
adc
les
notb
push
sub
inc
pop
fdivrl
scas
hlt
mov
test
in
xor
sbb
sub
sbbb
hlt
leave
xchg
inc
pop
adc
cli
mov
test
xchg
addr16
popf
pop
xor
stc
inc
add
arpl
out
lods
in
pop
testl
out
in
in
add
popf
aaa
sbb
insb
cltd
mov
or
lret
icebp
aas
inc
adc
sub
outsb
add
push
mov
cmp
and
insb
inc
rcr
dec
ljmp
push
mov
jns
shrb
js
int3
cli
cmpl
xchg
add
mov
test
out
dec
decl
pop
cs
push
cmp
add
lods
icebp
sub
cld
subb
aad
lahf
xchg
push
mov
out
rcrb
fiaddl
cmp
xorl
inc
loop
or
aaa
test
or
sbb
add
aad
mov
add
sbb
xor
cmp
into
dec
cmp
sbb
ds
xchg
nop
pop
clc
rclb
incl
movl
fildl
add
fadds
mov
push
test
or
inc
out
lock
or
jecxz
fwait
add
scas
cmpsl
add
jp
dec
jbe
call
insb
adc
add
enter
lahf
mov
mul
mov
decl
faddp
or
add
push
cmp
sbbl
hlt
mov
ret
mov
add
jnp
ss
inc
pusha
pop
cmp
dec
sub
ljmp
xlat
cmp
mov
xchg
fbstp
je
sbb
iret
int3
xor
adcl
pop
sub
sub
and
jg
repz
addb
nop
rcrb
xchg
cmp
test
jl
les
adc
out
jmp
and
mov
mov
ljmp
bound
sti
sub
dec
fidivs
and
add
gs
xchg
jo,pn
mov
cmp
sbb
icebp
cld
lcall
js
daa
or
sbb
imul
sub
mov
dec
fldenv
lar
xchg
daa
movsl
lock
mov
inc
sub
and
mov
in
mov
pop
orl
sub
sbb
mov
ljmp
cmp
mov
ljmp
ljmp
add
std
ljmp
lcall
inc
add
jl
adc
sub
or
pop
popa
roll
call
in
adc
imul
push
lock
and
add
sbb
add
xor
jp
jns
pop
dec
les
push
sbb
popa
and
mov
sahf
aaa
pop
repnz
mov
push
or
repz
hlt
pop
inc
push
stos
mov
imul
push
and
inc
ljmp
or
dec
mov
pushl
rorl
decl
stc
xchg
lock
add
pop
cmpsl
add
bound
inc
movsl
das
dec
and
out
jmp
in
xchg
sub
cmp
or
les
pop
andl
das
rclb
hlt
shl
push
jecxz
xor
inc
daa
or
insb
add
push
mov
add
out
mov
cmpsb
inc
lods
add
ret
or
mov
and
sub
subb
in
fsubrl
sbb
fidivs
out
xor
in
push
xchg
or
sub
repnz
pop
insl
add
push
add
xchg
inc
mov
cmp
out
add
lods
out
add
jge
jmp
jns
or
dec
cmp
xchg
jl
jmp
les
shrl
fiaddl
addr16
or
std
inc
loope
add
movsl
in
ret
pop
nop
add
popf
pop
jo
pop
loopne
stos
dec
std
cmp
hlt
xchg
repnz
push
add
cmpb
xchg
cmpl
jmp
or
pop
loope
ret
cmc
inc
add
sbb
scas
xlat
dec
add
test
pop
out
mov
sarl
jl
adc
imul
and
ja
jecxz
xchg
in
mov
push
nop
fnstenv
add
icebp
insb
pop
sbb
bound
mov
ret
inc
sti
repz
hlt
lcall
xchg
jp
mov
sar
mov
add
mov
mov
pop
in
fcomps
or
aam
mov
sub
cld
rcl
pop
cli
aam
mov
mov
xchg
cmp
popf
jnp
imul
mov
xor
sbb
lahf
mov
call
aad
push
in
dec
add
push
stos
xor
repnz
fwait
mov
add
repz
mov
stc
or
out
xor
incl
fcmovnu
pop
xor
add
or
aad
idivl
cld
ret
pop
pushf
inc
pop
dec
mov
rcll
aas
ss
ret
cmpsl
cmp
addr16
push
push
mov
imul
lcall
add
sub
popf
jb
shlb
or
mov
ja
jle
hlt
dec
ljmp
cmpsl
add
cmp
add
fmuls
cmc
loope
jle
mov
fildll
cmp
jno
dec
orb
inc
test
in
leave
rcll
lret
out
notl
add
mov
fwait
or
add
ja
mov
mov
sub
xor
add
mov
outsl
add
lret
mov
int
inc
js
add
mov
add
mov
les
or
and
sbb
hlt
mov
sub
scas
mov
add
mov
imul
or
aas
fwait
sbb
lea
rolb
xchg
dec
scas
mov
aam
and
rcrb
xor
inc
ret
jbe
imul
jne
in
das
mov
inc
add
sub
sub
roll
aas
insl
imul
lods
mov
add
xor
sub
jle
jb
rcll
adc
cmp
loop
or
add
or
ljmp
xchg
popa
movsb
sub
add
xorl
pop
icebp
cmp
sbb
mov
rclb
sub
pushf
sub
je
leave
jae
lret
and
out
sbb
cmpb
decb
cmpsl
fisubl
test
in
inc
jle
out
add
cmp
add
scas
js
jo
jle
movsl
aam
dec
lahf
add
roll
cmc
imul
arpl
dec
add
jno
clc
xorl
ljmp
into
add
popf
add
pop
adc
xor
xchg
push
jne
sub
add
fiadds
push
jbe
mov
cmp
std
imul
mov
fnstcw
mov
add
push
dec
and
pop
push
je
xchg
inc
popa
cmp
xchg
dec
push
xor
add
mov
mov
scas
lahf
xor
add
les
and
push
add
mov
and
cli
scas
rolb
test
push
pop
shrb
int
adc
div
adc
iret
push
and
daa
in
add
lcall
mov
ss
js
fwait
jne
add
popf
nop
mov
xor
pop
jnp
or
int
ret
add
xchg
adc
lahf
inc
push
mov
flds
jbe,pt
add
xchg
inc
aad
dec
sub
push
push
out
imul
in
mov
iret
out
cmp
add
lcall
movsb
mov
out
js
mov
xor
ret
fsubrp
and
fidivrs
fildl
or
and
loop
add
or
cmp
xchg
inc
rol
add
mov
arpl
icebp
add
push
faddp
in
xchg
imul
out
dec
jecxz
out
cmpl
dec
jne
fsub
push
xchg
stos
sahf
jl
sub
scas
or
xchg
outsl
cli
cltd
xor
sarl
mov
dec
sti
xor
adc
insb
sub
dec
scas
adc
xor
stc
lock
sti
adc
add
mov
mov
incl
repnz
adc
or
dec
xchg
scas
sub
jmp
rclb
popa
imul
mov
lock
sbb
jl
fisttpl
icebp
stc
leave
test
lods
out
insl
jge
add
popa
mov
dec
xor
gs
insb
pop
xchg
inc
mov
inc
and
pop
sub
pop
pop
add
or
mov
ficomps
cmp
mov
in
ret
mov
adc
add
xchg
jne
or
insb
mov
dec
mov
add
stos
adcl
push
adc
mov
or
mov
pop
cli
sub
mov
insb
mov
adc
xchg
jmp
gs
sbb
cld
popa
jg
jnp
jae
addl
shll
ss
cmp
cmp
mov
adc
cli
sahf
mov
mov
or
xchg
push
dec
mov
mov
test
ror
mov
add
xchg
in
ss
in
push
cmp
sub
xchg
popf
and
fcoml
adc
or
cmp
push
add
stc
ret
add
das
sub
pop
dec
add
xor
int3
push
outsl
mov
nop
cmpb
jbe
lahf
add
pop
clc
mov
outsb
jmp
sub
push
pushf
loopne
adc
or
into
sub
lock
dec
and
push
test
aam
sub
icebp
sbb
stc
push
test
xchg
add
outsl
jae
rolb
into
sub
ret
test
and
pop
hlt
jecxz
test
pop
sub
inc
add
mov
adc
shlb
mov
fxtract
loopne
push
push
shl
repz
lods
jmp
popa
lds
out
imul
cli
iret
mov
or
repz
dec
mov
xor
in
pusha
inc
jne
sbb
jle
data16
int
mov
addl
cmpb
hlt
ds
loop
sub
push
jg
jno
lods
add
add
sbb
hlt
cwtl
in
dec
push
jns
cmp
sub
rolb
mov
jp
in
add
xchg
and
andl
fdivs
inc
in
icebp
sbb
popf
ja
add
sbb
dec
clc
sbb
aam
clc
add
push
jecxz
fldl
arpl
cmp
add
sub
test
push
out
add
shll
loope
xor
inc
mov
lcall
subl
pop
or
sbb
push
and
xchg
sbb
mov
jmp
loop
and
imul
inc
cmp
inc
or
in
scas
fsubr
inc
mov
repnz
push
sbb
ljmp
imul
lret
adc
ret
lock
gs
jno
add
xchg
adc
jecxz
cmp
add
jmp
popa
mov
lds
jle
sub
xchg
mov
imul
data16
xor
lret
loop
rolb
add
outsb
mov
pusha
xchg
nop
pop
sbb
and
dec
ret
or
sahf
test
add
add
fadds
sub
fcmovnu
cld
cltd
ret
out
or
pop
inc
outsb
pushf
add
add
imul
lds
dec
jl
push
pop
adc
pop
and
hlt
add
sbb
jno
push
inc
xchg
add
add
adc
add
sbb
loope
xchg
add
out
test
inc
pop
sbb
inc
mov
icebp
scas
add
add
xlat
add
andl
and
sub
in
dec
sbb
dec
lret
out
data16
rclb
add
pop
lcall
roll
repnz
push
lret
mov
cmp
xor
hlt
jno
loop
pop
or
add
mov
xchg
push
lds
ljmp
fdivr
in
test
mov
add
scas
sti
loop
leave
repnz
test
in
repz
adc
mov
lret
dec
jecxz
cmp
fxch
sbb
jno
dec
add
add
push
adc
pop
cmc
aam
jge
add
inc
aam
sub
add
lahf
push
cmp
gs
data16
outsb
repz
xor
fcmovb
xor
cmp
faddl
or
mov
pop
jns
rcll
add
pushf
xor
mov
test
cli
sub
jb
lret
mov
test
cmpltps
mov
sbb
es
xchg
fiadds
mov
packsswb
cwtl
push
inc
pop
push
lret
sbbl
inc
clc
test
add
push
add
xor
stos
in
nop
add
scas
repnz
jnp
cmp
and
ljmp
movsb
or
or
jle
jo
lret
add
xchg
or
call
popa
push
push
jb
add
shr
jle
sbb
mov
mov
inc
clc
mov
repz
mov
mov
test
loopne
add
dec
decl
adc
adc
cmp
mov
and
enter
jnp
pop
add
mov
lods
add
aad
flds
aaa
scas
jb
lahf
mov
je
lods
jmp
inc
mov
loop
popa
push
insb
xchg
std
in
mov
in
jge
fnstenv
jl
and
jnp
adc
pop
xlat
push
cltd
mov
push
mov
add
fisttpll
cmpsl
adc
cmpsb
add
ja
out
add
out
add
cmp
push
sbb
enter
adcl
sub
jbe
inc
popa
sbb
jg
lahf
jno
cltd
lods
add
in
mov
pop
mov
add
xchg
int3
cmpsl
add
in
fidivrs
cmpsb
popf
lcall
and
lods
aaa
cld
cmp
popa
cmp
inc
mov
ja
stos
lock
xchg
daa
in
sbbb
lock
enter
out
call
inc
inc
sub
cmp
aam
inc
mov
sbb
jnp
add
mov
in
insb
lods
jne
mov
loope
sbb
roll
fwait
vrsqrtss
xor
fcmovnb
inc
and
movsb
into
cmp
popa
repnz
jp
add
int3
inc
pop
add
nop
and
sub
lock
shr
push
fiadds
dec
cs
sti
adc
rorb
sbb
enter
pop
fstpl
adc
mov
mov
sti
sub
mov
jmp
test
pop
in
jae
lahf
imul
sar
psubusb
out
cmp
lea
add
sub
mov
cld
lock
add
pop
push
cli
js
dec
outsb
sub
sbbl
paddsw
repnz
outsl
in
mov
xchg
and
dec
and
inc
stc
add
add
fistps
add
xchg
jno
aas
test
sbb
jmp
sgdtl
scas
js
xor
stos
es
in
mov
aam
pop
testl
imul
das
in
add
jmp
imul
inc
inc
add
xor
stc
repz
add
sub
xchg
aam
inc
pop
add
jbe
cmp
insb
hlt
outsl
push
outsb
shrl
imul
mov
sub
pop
data16
inc
dec
jl
pusha
jecxz
insb
add
fsubs
nop
add
decl
jmp
cmp
mov
mov
mov
add
repz
add
jg
add
xor
mov
push
or
jo
or
sbb
add
mov
fidivs
scas
cwtl
sub
jl
cld
xchg
imul
push
jb
mov
and
xchg
add
bound
arpl
pop
mov
cmp
or
and
mov
inc
call
or
movsb
and
fcomps
cmc
rol
add
push
inc
pop
shlb
and
push
sub
xchg
mov
or
adc
mov
aam
jo
into
clc
scas
daa
add
jg
and
jmp
and
xorl
aaa
stos
mov
out
add
mov
mov
addr16
mov
lock
movsb
add
cltd
shl
add
xor
xchg
not
dec
lock
pop
cmpsb
sub
aam
and
or
hlt
cs
scas
push
adc
ds
imul
jne
sbb
xor
add
add
mov
idivb
pop
push
add
addl
push
test
inc
add
in
ljmp
outsl
les
sahf
das
or
call
and
es
aas
dec
arpl
push
sbb
add
push
cli
js
add
aam
xor
cltd
mov
or
popa
xchg
mov
xor
jb
sti
ds
pop
gs
test
add
cmp
outsl
cld
mov
hlt
xor
add
lods
sbb
xchg
mov
insl
aam
add
jmp
sahf
lds
roll
sub
cmpb
stos
cmp
push
push
and
mov
xchg
cmp
push
dec
in
in
sbb
add
xor
stos
addr16
shlb
mov
cmpsl
add
xchg
adc
pop
pop
add
xchg
adc
dec
cmpb
ret
mov
shrl
xchg
inc
sub
and
stos
push
push
pop
cld
div
int
pop
nop
add
mov
dec
push
flds
add
leave
mov
mov
imul
clc
int
js
scas
dec
pop
lahf
push
repnz
adc
in
addr16
xor
jg
xor
push
add
aaa
frstor
scas
push
lock
in
cmp
add
add
add
sub
mov
nop
add
fwait
vpaddusw
push
sbb
into
rolb
out
insb
repnz
mov
add
mov
pop
cli
idiv
or
enter
aas
out
repz
lds
sub
add
dec
imull
inc
call
mov
mov
in
add
ret
jle
cmp
xor
addb
clc
push
cli
pop
dec
add
movsb
and
xor
jge
add
fsubl
mov
decb
cmp
imul
mov
push
add
mov
test
ret
je
jmp
popl
pop
xchg
xor
cltd
add
jo
mov
incl
cmp
cmpsb
or
sbb
push
mov
pusha
out
inc
fwait
mov
pop
clc
jne
outsb
and
jns
mov
addl
add
scas
ds
jp
hlt
cmp
push
in
sti
lret
sarb
test
lret
jns
scas
imul
jle
dec
sbb
adc
idiv
out
inc
adc
mov
or
cmp
clc
xchg
cmp
add
pop
lock
aad
mov
mov
add
jno
test
inc
mov
dec
jbe
mov
add
adc
pushf
push
xor
mov
flds
sub
mov
hlt
sbb
fisubrl
jo
add
js
jae
outsl
mov
pop
push
jbe
mov
inc
ja
movl
mov
or
push
pop
pop
add
pop
jnp
sbb
adc
outsb
fwait
mov
adc
sbb
and
mov
lret
jb
inc
mov
daa
pushl
jp
sbb
popf
or
add
mov
adc
push
jae
cli
cltd
cmp
cmc
mov
sub
or
mov
jnp
inc
insl
add
push
xorl
xor
outsb
or
test
movsl
shrl
jbe
divb
loope
adc
repz
scas
fucomi
mov
push
sub
inc
lcall
pop
add
cmp
adc
add
cmpb
cmp
enter
loopne
add
adcl
das
mov
push
loope
add
outsb
mul
popa
popf
mov
dec
mov
leave
enter
sub
scas
add
int3
and
mov
popa
cmp
adc
cli
jecxz
jle
xchg
fimull
jp
xchg
push
pop
mov
and
add
out
leave
pusha
xor
mov
pop
loope
in
and
fdivr
xchg
and
addb
jno
sbb
lret
test
add
xchg
dec
jo
sub
es
add
sub
mov
lock
add
hlt
inc
je
push
movb
xchg
pop
xchg
imul
xor
add
mov
enter
add
cmp
sbb
dec
add
movsb
fwait
push
adc
inc
mov
sub
clc
cmp
jg
push
fadds
mov
test
bound
std
pop
xor
faddl
gs
mov
xor
push
das
sahf
cmp
mov
lock
scas
andl
mov
cmp
iret
cmp
pop
xlat
add
arpl
add
jae
in
pop
inc
dec
mov
cmc
in
pop
mov
dec
sub
pop
add
mov
inc
mov
push
into
add
scas
xor
add
mov
or
inc
and
push
addb
clc
enter
repnz
outsl
clc
push
mov
addl
dec
cltd
or
push
add
or
fnstsw
ficoml
adcl
in
push
mov
scas
inc
push
cmc
ja
push
or
sub
pop
ljmp
push
rcrb
outsb
jle
test
add
inc
cmpsl
adc
es
cwtl
inc
pop
incb
cmp
sub
cld
sarb
inc
notb
cmp
filds
xlat
lret
cltd
cmpsl
adc
push
add
and
pop
push
in
pop
sti
cmp
sbb
idiv
ret
lcall
daa
shr
adc
lret
adc
add
fiaddl
jo
ret
cmpsb
fmulp
push
fidivrs
jp
pop
outsl
sub
add
add
mov
les
arpl
xor
push
jb
and
adc
insl
in
add
mov
loopne
out
pop
xchg
addr16
or
sbb
cmp
arpl
xchg
sub
movsb
in
push
loopne
and
or
popa
fcompl
pop
inc
loope
xchg
ds
jbe
mov
xor
scas
leave
mov
adc
adc
add
mov
inc
cwtl
add
fs
outsb
sub
pushl
sub
mov
dec
out
sbb
jle
add
jo
fildl
adc
adc
xchg
push
sbb
pop
add
xor
add
insl
inc
cld
test
fdivr
fbld
mov
add
push
or
in
fnsave
add
mov
jle
in
add
push
adc
out
xchg
xchg
cmp
sti
in
jno
cmpsb
ljmp
cmp
mov
or
shrl
scas
cs
inc
andb
in
dec
and
mov
fwait
lea
add
pusha
adc
in
push
jnp
inc
xchg
inc
xchg
stos
adc
inc
iret
or
popl
sbb
jbe
mov
in
mov
or
jge
xor
pop
adc
mov
add
into
mov
lret
mov
sbb
iret
jns
mov
xchg
divl
add
push
jle
fmull
add
sbb
inc
adc
xorb
aam
enter
insb
in
dec
jle
repnz
pop
sub
or
fsubrl
cwtl
xchg
xchg
mov
hlt
jle
push
fldcw
dec
add
jno
adc
sbb
ret
or
jecxz
add
imul
std
inc
scas
lcall
lahf
fs
add
rolb
sbb
fiaddl
xor
inc
add
movsb
sub
les
hlt
aam
test
dec
pop
sti
push
cmp
mov
add
cmp
lea
push
pop
push
out
ficoms
mov
add
xchg
call
sbb
repz
test
add
cmc
je
dec
xor
xor
das
insl
sub
aas
stos
imul
mov
out
into
fwait
pop
ret
aaa
cld
xtest
repnz
dec
imul
ss
pop
xchg
push
hlt
mov
movsb
repnz
xchg
std
adc
cmpsb
cli
pop
aaa
lar
es
call
mov
popa
dec
fstl
testb
push
cmp
orb
sub
in
jns
pop
dec
cmp
popa
add
mov
int3
inc
in
aas
cmc
ror
hlt
imul
push
lds
add
pop
or
lcall
lea
cwtl
es
in
mov
xor
mov
aas
jmp
xchg
je
pop
int3
cltd
je
push
jge
out
mov
push
lods
js
pop
test
lcall
add
cmpl
push
idiv
mov
sub
shll
in
imul
inc
push
mov
jl
in
cmp
loope
or
sub
push
clc
sbb
sub
scas
mov
xchg
cmp
pop
outsl
pusha
mov
add
jmp
fiadds
call
gs
iret
enter
cmp
push
cld
fwait
xchg
jbe
data16
lea
sub
in
and
movsb
pushl
sub
inc
pop
xor
add
ret
imul
js
popf
cli
cmp
sub
cmpsl
cmp
sbb
inc
add
cmp
in
gs
xsave
push
and
xchg
ret
add
neg
cli
jae
cs
push
xorb
insl
push
cmp
and
ret
dec
cmpsb
fimuls
xchg
pop
and
jg
sbb
and
inc
sub
pop
mov
add
cmp
xlat
cli
or
dec
lock
cmp
std
adc
mov
ss
out
decl
inc
inc
imul
add
push
mov
add
cmp
aas
or
cmpsb
mov
sbb
mov
mov
mov
pusha
xlat
repnz
aam
and
cmpl
aaa
jno
add
mov
and
cmp
out
mov
xchg
xorl
pop
xchg
cld
insl
je
out
xor
xor
aaa
sbb
inc
adcl
in
in
xchg
inc
in
imul
jns
je
fsts
pusha
jb
xchg
add
das
lret
test
mov
xchg
jmp
jbe
add
pop
adc
punpckldq
adc
sahf
ja
sub
and
add
jmp
cmp
and
fcomps
jmp
add
and
psubb
out
sbbl
xorb
pop
or
add
mov
es
aam
xor
cmp
in
add
cmp
hlt
out
imul
and
ss
je
add
xchg
pop
sbb
lcall
cmpsb
out
cmp
shr
dec
add
mov
bound
aas
or
inc
mov
test
sub
outsb
add
insb
sbb
add
enter
cld
addr16
lds
out
ret
int3
jns
aaa
adcb
cmp
or
and
aad
hlt
iret
shll
into
add
ljmp
fs
mov
or
shll
pop
les
sbb
ds
dec
jae
out
and
or
mov
push
add
ljmp
add
adc
xchg
popf
out
inc
sbb
push
movsl
add
sbb
and
call
cmpb
mov
add
mov
push
add
pop
js
inc
mov
cmp
inc
shlb
les
push
add
fs
mov
cmp
push
fmulp
outsl
decl
outsb
jl
les
stc
loope
inc
movb
repz
rcll
inc
jp
xlat
mov
jl
cld
test
or
push
push
mov
adc
mov
mov
pop
add
aaa
repz
sub
stos
je
or
sbb
xchg
leave
stos
add
pushf
add
call
inc
add
jle
orb
decl
ja
test
add
fstl
xchg
xchg
arpl
insl
cmp
fadds
mov
lret
jmp
sti
sbb
adc
xchg
push
add
cwtl
mov
sbb
mov
int
xor
hlt
cwtl
xchg
add
inc
or
xchg
mov
movsb
adcl
xchg
dec
push
add
out
mov
add
pop
mov
pop
inc
loope
or
inc
sub
popa
xorb
leave
outsl
add
xlat
les
cmp
fidivrl
or
decb
gs
xchg
scas
or
cmp
imul
add
cmpsb
pop
aam
push
jnp
out
arpl
ret
add
jmp
push
mov
cwtl
fists
mov
out
push
inc
or
push
out
add
xchg
adcb
push
cmp
add
jmp
jg
mov
jmp
sbb
add
arpl
xchg
fisubl
inc
fadds
adc
loope
push
js
adc
mov
in
pop
repnz
mov
aaa
mov
and
add
pop
add
outsl
and
sbb
pop
and
les
or
xor
shl
xor
xor
jle
and
and
xor
shll
mov
scas
add
and
cltd
mov
dec
mov
and
in
mov
out
push
jl
add
pop
xor
add
aaa
aam
movsl
jns
add
dec
or
jg
jae
mov
xor
test
hlt
int3
sbb
mov
and
mov
in
push
xlat
cltd
add
mov
xor
aas
add
movsl
sti
mov
pop
sub
add
adc
jo
outsb
push
out
in
jbe
xchg
jne
leave
aam
fmuls
pop
mov
popf
mov
ffree
clc
leave
stos
mov
xchg
add
pop
and
jp
imul
mov
mov
push
cmpl
add
scas
xchg
lret
add
out
cmp
jo
sti
jae
mov
jmp
das
mov
sub
lock
mov
enter
push
int3
pop
xor
push
push
add
roll
rcrb
imul
aas
pop
fs
cmp
lcall
or
xor
xor
jnp
insb
jns
test
add
es
mov
hlt
popa
cmp
lret
mov
mov
fdivrs
inc
xor
cs
jnp
sub
int
cld
xor
mov
or
repnz
stc
inc
clc
cmpsl
push
rcrb
fsubr
pop
push
dec
jle
sub
shl
popa
pop
out
mov
adc
loope
adc
addl
jne
leave
insb
pop
or
push
jns
pop
inc
les
pop
ljmp
sbb
movb
adc
mov
xlat
add
mov
out
and
add
adc
incl
fstps
bound
sarl
popf
addb
out
jmp
movsl
movsb
add
push
add
mov
hlt
add
pop
sub
add
xchg
test
cmp
mov
mov
or
js
xor
loope
sti
pop
sub
testl
ret
icebp
jl
add
out
xor
push
pop
cld
add
mov
add
pop
sub
adc
int
les
mov
call
fwait
add
data16
mov
mov
add
add
or
stos
add
pop
mov
cld
jmp
xchg
incl
push
xchg
mov
sti
mov
in
xor
jecxz
insb
add
mov
mov
adc
insl
mov
in
xchg
jmp
adc
add
fisttps
es
subl
add
mov
mov
pusha
cmpsl
dec
mov
push
add
hlt
mov
cmc
ficoml
out
mov
push
punpckldq
jg
jecxz
push
jno
jo
or
loopne,pt
add
iret
cmc
lmsw
and
mov
test
fs
sub
ds
cmc
shl
fstps
in
mov
and
outsl
mov
dec
pushf
mov
pop
xchg
mov
cld
fsubs
aas
push
and
jmp
dec
xor
bound
insl
push
push
into
test
out
jl
imul
and
jb
dec
shll
adc
jp
xchg
add
insb
lret
imul
fiaddl
push
cmp
fisttpl
arpl
mov
ds
pusha
or
incl
push
imul
hlt
pushf
mov
adc
push
add
adc
add
stos
dec
roll
sub
or
add
pop
sbb
add
mov
faddl
xchg
movb
and
mov
jle
pop
mov
ret
stos
mov
sub
xchg
mov
lock
add
sub
push
lock
dec
jl
add
xor
popa
sbb
xchg
mov
imul
push
imul
mov
push
arpl
pusha
into
ret
add
add
sbb
add
sarb
add
aaa
fdivrl
stos
sbb
mov
fistpl
rcrb
mov
insl
loop
div
jmp
sbb
testb
add
aas
outsb
xor
add
icebp
sahf
xchg
mov
push
jmp
mov
out
popf
lcall
and
fistpl
pop
mov
pop
addr16
mov
xchg
and
xchg
xor
hlt
xor
std
outsb
shr
imul
adcb
pusha
fildl
push
les
aas
and
test
sub
lds
or
lcall
xlat
test
inc
add
cmp
lret
ljmp
incl
movsb
adc
mov
aam
cli
xchg
push
cwtl
inc
adc
xchg
adc
add
push
lret
imul
add
pushl
mov
inc
ss
mov
push
ljmp
mov
out
imul
out
push
inc
pop
and
hlt
cld
push
xchg
js
push
sbb
lods
mov
add
sbb
leave
loopne
fdivp
push
movsb
int
ret
jle
cmp
xor
fs
fnsetpm(287
mov
add
push
inc
mov
pushl
clc
lods
ret
hlt
cmp
mov
das
jle
mov
pop
sti
xor
testb
shl
adc
push
add
push
inc
rolb
out
mov
or
xor
mov
bound
sub
stos
andb
mov
add
adcl
cs
pop
jno
gs
cli
popl
loop
test
mov
clc
mov
adcl
xchg
fists
jg
call
sti
arpl
or
stc
stos
mov
jl
cmc
push
clc
or
mov
adc
hlt
iret
repz
adc
in
sarb
insb
shrl
mov
js
lock
push
and
inc
add
sub
test
add
or
mov
and
lea
pushf
push
daa
rcl
mov
nop
add
jg
out
cld
mov
stc
hlt
and
sub
mov
cli
xlat
jnp
test
xchg
mov
test
sti
pop
fisttpl
add
pop
cltd
push
add
push
sahf
repnz
pop
stos
dec
add
add
sub
jp
mov
movsb
notb
add
xchg
nop
xchg
and
add
or
int
add
mov
xor
stc
lock
pop
inc
push
mov
lret
cwtl
roll
mov
lret
add
mov
mov
movsl
fiadds
jl
pop
pop
fidivl
or
add
and
push
mov
loope
fstps
push
inc
sahf
ret
push
sbb
je
mov
pushf
jp
cmp
jg
mov
adc
xor
cmp
popa
icebp
xchg
pop
fcompl
or
mov
rcll
aad
mull
add
adc
jp
out
cld
dec
enter
dec
adc
jmp
lea
add
int
stos
cs
out
lret
scas
cmp
add
inc
or
mov
mov
push
mov
loopne
addb
mov
xor
stos
pushf
xchg
push
cmc
shl
aas
stc
adc
mov
into
insl
repz
add
push
sti
mov
sbb
test
sbb
rorb
sub
add
add
hlt
inc
mov
xchg
xor
add
jecxz
popf
add
outsl
movb
pop
and
or
ss
movsb
and
in
push
lock
push
xchg
add
xor
cmp
dec
mov
mov
cmp
lods
inc
mov
or
jmp
or
inc
test
mov
dec
pop
jmp
std
ja
add
lcall
cmp
xlat
data16
mov
out
out
sar
sti
add
adcl
pop
aam
lret
hlt
or
movsl
mov
loope
sbb
lods
les
popf
add
push
js
sub
pop
lock
arpl
push
xlat
addr16
fiadds
loop
jmp
pop
sahf
mov
inc
mov
or
pop
dec
and
std
xor
xlat
dec
popl
mov
push
sbb
and
mov
sub
hlt
sbb
mov
cwtl
je
xlat
shll
jo
cmp
add
leave
pop
push
cwtl
aad
xor
cli
rcrb
and
pop
dec
je
mov
mov
shrb
fidivs
xchg
sti
sub
jae
jl
in
movsl
add
mov
outsl
inc
adc
enter
adc
adc
data16
mov
lock
mov
xchg
sbb
cmp
pop
cmpsl
xchg
pop
sub
pop
sbb
xchg
xor
imul
sub
imul
mov
dec
xchg
add
dec
cmp
movsb
aaa
out
pop
add
add
nop
adc
adc
add
lahf
xchg
mov
cmpsb
xor
js
add
inc
into
mov
in
popa
stc
jmp
call
mov
addr16
add
rclb
pop
adc
push
sub
xor
push
hlt
add
std
mov
push
lret
dec
inc
fiadds
adc
mov
sbb
add
xor
fdivr
adc
and
rcr
jge
out
inc
mov
rorl
and
add
and
mov
jno
in
push
xor
lea
xchg
mov
pop
push
cmpsb
loopne
sub
mov
xchg
add
mov
test
mov
xor
aam
test
pop
rcrb
icebp
shlb
lods
jle
test
outsl
les
pop
jmp
stc
fsubl
nop
cwtl
leave
or
mov
mov
xor
add
dec
or
lret
add
testl
call
inc
cmp
mov
sbb
pop
lds
pop
cmp
cld
gs
mov
ret
add
adc
and
xchg
flds
mov
fldcw
add
aam
mov
in
mov
repz
add
das
add
sub
adc
lret
push
push
add
data16
pop
out
jl
arpl
pop
cmp
lods
subb
add
in
or
sarl
adc
jbe
sahf
inc
cmpsl
push
add
push
rolb
loopne
hlt
out
xchg
cmp
arpl
cltd
nop
ljmp
leave
dec
test
xchg
cld
adc
fiadds
lret
rorb
gs
pop
cld
xchg
push
js
and
scas
dec
fstl
add
imul
jle
out
mov
lret
in
icebp
ljmp
mov
popf
mov
fnstenv
mov
lds
fildl
cmpb
aaa
mov
and
hlt
adc
popl
cli
xlat
jge
sbb
dec
int
sub
clc
add
xor
jmp
inc
out
sub
mulb
enter
mov
mov
inc
cltd
iret
adc
lcall
pop
push
jno
or
imul
or
faddl
fisubrs
jmp
imul
cmc
add
adc
pop
push
jo
sti
in
or
dec
jns
sbb
xchg
push
sub
orl
popf
sub
stos
cld
fistl
pop
dec
xchg
nop
mov
jnp
add
cmp
lahf
mov
cltd
mov
inc
sub
ljmp
lods
dec
sub
add
aas
gs
add
add
les
je
cmp
inc
add
imul
pop
sbb
ljmp
ss
add
popa
mov
sbb
cmp
lret
mov
sub
sub
pushf
cld
xchg
and
mov
mov
xor
adc
fldenv
mov
ret
push
test
xor
cltd
jle
lods
push
fbstp
adc
fs
daa
dec
lret
out
inc
jae
jnp
mov
shl
test
jecxz
and
out
roll
sub
xchg
xchg
lods
add
sbb
pop
add
das
lret
ljmp
mov
pop
and
les
in
sbb
add
es
inc
jg
sahf
jle
sub
stos
add
mov
mov
cmp
out
out
inc
pop
mov
stc
loope
scas
or
or
sub
mov
clc
mov
aaa
dec
out
or
pop
addb
pop
shlb
pushl
add
pop
dec
push
xchg
sbb
fadds
shr
mov
cmp
loopne
sub
arpl
push
adc
cltd
addr16
pop
mov
popf
add
cmpsl
sti
stc
xor
or
mov
dec
or
dec
jl
xor
inc
sub
scas
and
stos
mov
pop
enter
cmpb
mov
or
add
cmpsb
into
or
xor
fildl
xchg
add
mov
cmc
pop
ret
xchg
pusha
gs
insl
add
mov
cmpsl
mov
or
xchg
test
mov
cmpsl
jge
adc
sbbl
or
je
gs
cli
ljmp
rcr
jl
or
in
loop
add
jb
cmp
lds
add
or
add
and
pop
mov
jnp
fildll
add
and
pop
idiv
sbb
xchg
lods
xor
adc
inc
sub
pushl
ret
imul
nop
jge
scas
cmp
push
sbb
orl
jb
aaa
roll
jno
cmp
mov
nop
out
sub
test
cmc
outsl
add
pusha
lods
jns
fimull
in
sub
inc
xchg
jbe
push
adc
cmpsl
sarb
adc
jns
add
scas
mov
inc
xchg
outsb
jbe
cld
arpl
sbb
add
out
stos
frndint
mov
aam
and
add
add
sub
cli
divb
mov
hlt
aam
out
ss
movb
test
sub
leave
add
or
pop
in
clc
mov
mov
lods
mov
sbb
je
ror
push
add
jge
xor
rcl
daa
cld
mov
lret
insl
addl
push
push
das
inc
cld
imul
pusha
inc
lods
add
imul
mov
shl
mov
add
dec
cli
fiaddl
or
push
fbld
inc
sub
pop
cmp
mov
sbb
filds
mov
xchg
test
stos
sbb
lea
add
xlat
lods
adc
dec
and
cmp
popf
mov
adc
add
icebp
cld
fadds
push
sahf
xorb
popf
ja
outsl
aam
popa
insb
iret
push
pop
ret
sub
add
sarb
arpl
push
das
jne
cmp
test
adc
add
jmp
cld
push
xor
lret
mov
adc
mov
jge
std
lret
js
add
scas
lahf
je
punpckhwd
or
xchg
test
shll
lea
enter
add
andb
gs
and
pushf
add
test
rcll
cmp
add
je
fdivrl
adc
in
jne
cmp
repnz
outsl
mov
ljmp
mov
or
pop
outsl
add
mov
adc
and
add
jge
std
mov
adc
jp
stc
hlt
into
sbb
loopne
and
sub
mov
inc
push
hlt
jb
movsb
pop
add
xor
jle
jmp
sub
andl
dec
cmc
mov
dec
push
jp
leave
add
xor
sbb
add
mov
pop
mov
dec
fdiv
hlt
push
sub
pop
ss
cmp
loop
pop
frstor
sbbl
jl
mov
in
and
cs
mov
jecxz
pusha
leave
in
imul
cli
add
cmc
push
xor
aam
mov
stc
popf
mov
lds
lock
popa
iret
addl
mov
mov
jecxz
iret
add
adc
lods
xchg
add
loope
int3
add
mov
and
inc
sbb
shll
add
pop
test
mov
ret
loop
sub
notl
fidivs
std
or
xor
and
call
xchg
in
inc
mov
mov
mov
mov
add
add
lock
js
into
add
out
lock
sbbl
or
mov
mov
add
or
test
ret
fnsave
loope
xchg
sbb
cmp
sub
xchg
mov
add
xor
test
sti
stos
stc
fstps
cmp
orl
imul
leave
in
mov
adc
mov
mov
sub
imul
sbb
sub
xorb
sbb
dec
bound
add
dec
ret
lock
jle
add
in
pop
lcall
dec
and
stos
bound
mov
imul
add
push
clc
popa
cmp
pushf
inc
imul
pop
pop
in
xchg
repnz
popa
das
add
out
sub
pop
fsubrl
jg
aas
cmp
arpl
sti
inc
cmc
inc
add
inc
push
and
add
or
dec
sbb
stc
mov
mov
push
enter
cmpsb
div
mov
insb
or
pop
xor
add
ficompl
ret
ror
or
cld
imul
xchg
and
push
movl
mov
cmp
and
jne
add
pop
dec
hlt
fsubp
mov
push
shlb
clc
add
mov
add
mov
imul
push
subl
inc
sbb
gs
jmp
pop
mov
sbb
add
sbbb
clc
xchg
mov
cmp
adc
mov
add
xor
add
int3
rolb
adc
sbb
out
inc
dec
add
call
or
inc
icebp
and
cmp
outsl
cmpsl
inc
mov
rolb
sahf
pop
xlat
sbb
jle
and
pop
mov
xchg
and
mov
loope
cmpsb
push
xchg
pop
dec
add
xchg
lock
mov
jl
lcall
ss
out
add
addr16
stos
test
testb
lret
or
add
cmp
sbb
fistpl
jno
pop
pop
push
jno
fisttpll
and
test
arpl
cmpb
bsf
add
cmpsl
in
ret
stc
insb
mov
outsb
or
rorb
mov
mov
dec
mov
adc
in
je
pop
and
repnz
xchg
cmp
jecxz
movsl
sbb
push
movsb
add
mov
xchg
inc
jmp
add
test
xchg
cmp
jle
jae
pop
pop
fisubl
aam
enter
sbb
mov
loopne
push
mov
shr
pushf
sbb
mov
adc
mov
jno
pop
xchg
cld
xchg
or
mov
je
iret
add
mov
roll
lcall
test
cmpsl
ret
fsubl
sahf
sbb
or
int3
xor
add
fsubs
fcoml
inc
bound
bound
inc
std
add
mov
insl
dec
decl
lods
xchg
jo
cmpsb
arpl
aam
mov
das
punpcklwd
fisubrs
cmp
clc
add
orb
mov
xchg
mov
lret
dec
sub
mov
add
icebp
mov
dec
hlt
in
in
pop
xorb
fcos
int
lock
aas
jge
or
scas
jmp
inc
cmpsl
loope
push
int3
add
xchg
testl
add
rol
mov
dec
push
and
push
or
out
sarl
ret
add
mov
or
jge
adc
hlt
or
pop
fdivrl
add
aas
mov
icebp
andb
sub
test
enter
cmp
add
jmp
pop
push
cmpsb
xchg
out
pop
add
mov
das
imul
xor
iret
outsl
inc
mov
pop
sbb
stc
add
into
cli
test
mov
xorl
das
inc
mov
push
inc
fiaddl
dec
inc
pop
icebp
lds
mov
pop
movsl
sbb
orl
cmp
enter
xchg
mov
mov
xorb
leave
add
lods
test
ja
mov
pop
or
adc
lods
dec
dec
or
int3
cmp
pop
dec
add
mov
mov
notl
adc
test
pushf
and
shrb
mov
inc
leave
mov
sub
push
stos
jle
dec
out
in
sbb
cltd
incl
pop
unpcklps
sarb
sbb
inc
stc
cli
jb
xor
xchg
dec
pop
pop
push
xchg
jb
jle
xor
or
cmc
add
not
ret
in
or
mov
and
mov
lods
sbb
jbe
scas
cli
adc
jno
lahf
out
cmp
add
mov
ror
insb
mov
jg
xor
sbb
pusha
xchg
xor
ja
mov
adc
push
cmpsl
lret
iret
ss
movsb
mov
xor
or
stc
shll
sub
cmp
sbb
sbb
push
sub
rsm
sbb
popa
outsl
add
shll
adc
xchg
roll
sahf
fs
xchg
lea
xchg
push
test
and
add
sbb
inc
sbb
enter
outsl
cmp
into
clc
sub
or
les
mov
mov
cld
aam
fiadds
lods
add
ror
test
insb
sbbl
adc
loop
pop
leave
ljmp
mov
rolb
cmpsl
aaa
inc
dec
in
sbb
pop
enter
subl
add
or
sub
add
fildll
mov
fsubl
mov
cmp
repz
cmpl
mov
add
add
jnp
inc
xchg
add
pushf
inc
cld
test
cmpsl
or
std
out
mov
xchg
fadds
pusha
inc
xor
jg
mov
notb
jmp
xor
xor
dec
call
repnz
in
sub
mov
pop
and
popa
add
mov
std
cmp
popf
or
add
stc
out
or
pop
mov
mov
lret
scas
sbb
movb
mov
popa
loopne
push
fsubl
ja
sub
aaa
dec
in
movsb
dec
adc
adc
cmp
leave
or
cld
rcrb
fwait
jle
add
lock
enter
iret
ljmp
jp
fmull
cltd
adc
cmp
jbe
sahf
push
scas
mov
sbb
push
fadds
mov
inc
dec
xor
inc
add
jle
enter
std
add
dec
in
add
cmp
iret
fidivrs
rcl
mov
pop
push
add
adc
ja
stc
pusha
ljmp
rclb
mov
dec
xchg
adc
push
jecxz
mov
loope
add
mov
sub
jmp
test
xorl
mov
jl
jmp
inc
mov
stc
mov
rcll
mov
add
mov
scas
or
pop
test
cld
pop
popf
mov
add
and
add
add
or
jno
jns
loop
add
es
mov
mov
psraw
stos
or
int3
xchg
xchg
add
jmp
clc
jne
cmp
adc
add
push
aam
in
aad
pop
in
inc
pop
mov
sbb
sub
add
dec
out
dec
sub
ja
push
outsb
dec
cwtl
fnstcw
adc
hlt
or
mov
add
fwait
scas
mov
mov
xchg
ljmp
subl
add
lcall
sbb
jns
cmc
sbb
and
add
int
ret
bound
nop
mov
xor
insb
sbb
je
add
dec
cmp
pushf
push
das
imul
fisttpll
arpl
xchg
lods
fwait
dec
movsl
push
push
push
lock
cmp
add
mov
adc
sbb
jmp
mov
or
cmp
sbb
shl
shlb
insb
push
sbb
mov
movsl
mov
sub
stos
inc
rcpps
or
seta
xor
sbb
add
dec
jmp
jle
in
xchg
xor
dec
aaa
mov
inc
loope
pop
pop
jp
xor
mov
sub
push
lea
add
cmp
sbb
pop
and
icebp
movsb
test
xor
repz
adc
fidivrs
add
push
add
mov
lods
imul
int
pop
cmp
xor
sub
mov
or
test
pop
icebp
xor
sti
mov
xchg
add
negl
pushl
or
dec
icebp
push
call
les
sbb
add
push
lahf
add
jl
into
mov
stc
nop
sub
insb
fsubrp
inc
cmp
sub
push
daa
add
out
movsb
adc
in
mov
test
in
dec
test
sub
mov
leave
outsl
in
std
sub
inc
test
pop
jns
inc
ror
fiaddl
out
add
fstps
in
or
push
pop
add
xor
add
push
lock
add
push
ret
xchg
daa
push
mov
dec
mov
sbb
scas
push
add
fadd
and
aad
ret
andb
sub
cmp
lea
mov
mov
call
imul
mov
xchg
push
cmc
cmpsl
and
or
or
dec
mov
rorb
xor
sbbb
xlat
jle
in
mov
xchg
adc
add
out
ret
xchg
out
push
or
or
in
or
mov
aaa
rcrb
fimull
mov
mov
push
adc
lea
jno
movsb
adc
cwtl
inc
push
add
or
lcall
cmp
mov
sbb
jg
cltd
sbb
cli
jmp
lods
lret
bound
fdivrl
cmp
movsl
rcll
pop
add
jp
mov
and
lds
insb
out
pop
add
jb
inc
jns
lcall
loop
pusha
push
add
test
ret
jae,pn
out
rclb
cld
add
andb
mov
push
push
push
movl
sbb
pushl
aad
adc
lret
rcrl
cmp
fistl
mov
aaa
mov
iret
jno
add
sti
xchg
leave
les
jmp
add
xor
cmp
add
pusha
lock
shll
pop
stos
add
sets
xor
pop
mov
fisubrs
sbb
add
jne
dec
push
rcrb
filds
cmpl
dec
cld
int
add
fistps
lret
add
sbb
pop
notb
or
hlt
rolw
add
cmp
sbb
add
js
add
pop
xchg
xchg
sub
clc
arpl
int3
inc
cmpsl
ret
push
push
push
jne
mov
repnz
subl
lods
data16
xor
inc
hlt
mov
cmp
pop
mov
xchg
adc
test
lock
mov
sub
add
cwtl
sbb
add
push
push
lea
iret
mov
or
loopne
jne
pop
jbe
je
dec
daa
sub
mov
in
fadds
sub
add
fbstp
inc
iret
mov
xchg
pop
lret
push
jmp
jb
std
dec
xlat
push
add
xchg
adc
jle
sbb
inc
and
je
xor
loope
test
cs
adc
repz
push
adc
in
pop
push
sbb
sbb
ret
fxch
hlt
fimuls
add
adc
stc
mov
lods
std
pop
sub
mov
popa
adcl
push
inc
outsl
add
dec
mov
inc
faddl
jb,pn
mov
push
inc
cltd
push
into
add
repnz
inc
dec
pop
add
xchg
xchg
rcr
add
jle
je
repnz
jae
lock
sbb
mov
jl
cld
lock
mov
popa
outsb
mov
mov
sub
and
test
jo
adc
cmp
shll
xchg
add
test
testl
xor
scas
mov
jp
mov
cs
cmc
xchg
in
inc
xor
xorl
aas
jle
mov
push
orb
sub
pop
sbbl
icebp
in
xchg
cmp
jns
rol
mov
dec
pusha
out
pop
fistpl
and
loop
jae
rolb
rcll
push
sub
fisubs
pop
roll
cld
arpl
mov
mov
push
popl
cmpsl
movb
and
mov
pop
add
decl
ss
mov
cmp
jns
loope
or
xchg
int
push
scas
add
fs
in
roll
imul
jbe
dec
push
xchg
add
cmpb
ficoms
loopne
jg
push
notb
fs
aad
cmp
icebp
icebp
pushf
pop
rolb
mov
mov
dec
data16
into
xor
sub
pushf
test
add
push
inc
inc
jmp
movsb
call
fidivl
inc
mov
sub
pop
xchg
or
fwait
add
and
xchg
push
adc
jge
and
fcmovne
mov
cmp
push
push
repz
cmpsl
mov
add
in
dec
dec
repnz
xchg
ljmp
add
push
sbbb
leave
addl
xchg
stos
add
adc
and
fidivl
popa
rcrb
call
sbb
sub
iret
into
xchg
add
int
or
adc
cld
jnp
dec
ljmp
bound
jle
fisubrl
inc
sbb
sub
push
xchg
aaa
enter
push
add
add
or
lret
xchg
add
or
in
sub
pop
push
int3
add
cmp
push
xor
xchg
add
inc
inc
inc
pop
xchg
and
add
stc
push
stos
pop
jb
dec
mov
test
add
inc
sub
mov
push
jbe
push
add
in
lock
push
jae
decl
outsb
test
inc
add
gs
mov
lock
mov
xchg
cmp
bound
orl
imul
xor
stos
xchg
sahf
add
out
mov
add
addr16
int3
add
xchg
add
inc
dec
fs
pop
mov
lea
or
bound
clc
mov
and
dec
lret
fistpll
add
outsb
jb
sahf
ja
xchg
add
roll
pop
in
out
mov
add
pop
add
push
add
mov
cmp
mov
xlat
inc
lods
inc
sub
and
stos
sar
add
jecxz
xchg
sbb
mov
idivl
pop
inc
cmpb
jg
pop
jecxz
icebp
mov
xor
fs
pop
dec
vpunpckhbw
aas
divl
xor
mov
imul
orl
xchg
dec
test
popa
test
add
icebp
pop
pop
add
pop
sahf
sbb
stc
add
cmp
cmpsb
jae
mov
add
mov
mov
push
movsl
je
in
stos
call
repnz
sbb
add
fiadds
add
imul
or
add
cs
nop
fwait
mov
mov
xchg
hlt
roll
shll
out
mov
add
add
add
push
mov
mov
out
jno
mov
fnstsw
mov
cli
je
mov
mov
mov
inc
inc
pop
push
mov
ss
push
bound
sbb
cmp
out
cmp
dec
mov
jno
inc
cli
add
arpl
push
in
add
jl
push
push
incl
push
sbb
pop
loope
popa
loopne
add
fisubl
fdivl
mov
xchg
imul
aad
cmp
adc
sbb
sub
add
mov
call
fwait
test
sbb
pop
add
int3
in
and
cmp
mov
pop
out
in
or
push
outsb
jmp
push
fwait
clc
mov
sbbl
bnd
push
or
out
leave
flds
aaa
test
xchg
inc
add
lret
cli
push
sub
add
dec
push
sub
mov
add
aad
gs
test
lds
sub
cmpsb
mov
lret
add
scas
fsubl
ret
add
cltd
inc
imul
sub
shll
inc
xchg
pusha
in
add
shrb
aam
lock
sub
js
mov
adc
loopne
push
les
fsubl
gs
or
int3
add
ja
rol
push
dec
add
lret
out
push
dec
shlb
push
movsl
cmpsb
add
test
or
cld
adc
xchg
in
iret
mulb
into
sub
movsb
imul
aad
sub
xchg
jns
inc
cli
add
movb
addr16
mov
scas
jecxz
xor
sbb
pushf
hlt
sbb
mov
lret
insb
aas
pop
out
cli
mov
and
subl
pop
loope
inc
mov
cmp
jmp
test
ret
jo
cld
repnz
ds
mov
add
mov
xor
js
push
adc
mov
insl
mov
hlt
adc
in
stc
adc
fmuls
repnz
or
jg
pop
mov
add
and
push
lcall
or
repz
popf
push
into
jmp
mov
add
or
pusha
adc
add
icebp
shl
rolb
data16
and
leave
ret
incl
sarl
lret
test
out
lahf
addl
pop
lock
mov
inc
mov
dec
cmp
inc
and
pop
fdivl
add
xchg
adc
sbb
jne
in
mov
xchg
sub
nop
popf
push
jle
mov
add
pop
in
mov
hlt
clc
in
mov
sbb
inc
gs
add
xor
xchg
aaa
jbe
hlt
call
jne
jmp
clc
out
lea
mov
sbb
add
mov
mov
loope
inc
gs
push
dec
clc
cwtl
adc
jle
xor
xchg
add
shrl
out
data16
mov
and
sti
ljmp
ret
addb
add
arpl
add
inc
sub
pusha
mov
popa
push
jns
dec
cli
cmp
xor
xchg
push
and
cmp
jnp
jo
pop
insb
add
stos
ja
add
cmp
dec
push
cwtl
jmp
aad
sub
int3
aaa
add
jp
and
scas
sub
stos
push
aad
add
jns
jg
pop
cmp
ret
lahf
add
stc
sti
mov
hlt
mov
test
leave
add
xchg
push
jg
pusha
mov
insb
lods
add
data16
dec
std
ret
sub
and
cs
loop
sbb
lods
jno
adc
cmp
and
push
cmpsb
pop
jo
hlt
jb
cmp
loope
or
push
pop
add
mov
inc
xchg
int3
sub
mov
stc
cmp
lds
pop
inc
loop
add
pop
les
adc
xchg
cwtl
inc
adcb
sahf
add
pop
shll
or
loope
lods
pop
lcall
inc
add
push
cwtl
dec
add
aas
in
pmaxub
pop
fldl
les
fwait
or
lock
ret
ja
jmp
imul
addr16
into
sub
fiadds
rclb
mov
push
test
sahf
push
cmc
add
mov
add
lods
dec
add
js
xchg
sbb
hlt
pop
inc
shrb
enter
xchg
cmp
fisttpl
push
ret
lods
filds
mov
mov
add
pop
xor
adc
fisubrs
mov
out
push
xor
add
fsub
ljmp
cmp
pop
mov
int
mov
adc
out
push
pop
xorb
mov
jmp
add
or
dec
das
cmp
inc
stc
ja
inc
ret
mov
hlt
sahf
in
adc
xor
inc
cmp
int3
adcb
scas
stc
test
mov
hlt
mull
and
fildll
add
xchg
in
lods
clc
ds
add
fsubrs
movsl
add
mov
inc
add
outsl
loopne
xchg
ret
mov
stos
cmpsb
jp
push
mov
pusha
mov
adc
add
rclb
hlt
ret
int
mov
add
sbb
xchg
movsb
dec
lods
add
dec
clc
pop
shl
pop
test
imul
test
inc
jo
jns
xorl
hlt
sarb
mov
lock
cli
lods
mov
leave
jb
and
popa
in
add
shlb
sarb
push
sbb
xchg
xlat
ss
cltd
mov
rorl
inc
cmc
mov
cmp
mov
mov
lods
ljmp
xchg
aam
mov
jbe
sti
cmpsb
call
cmp
jno
add
cltd
roll
mov
hlt
add
cmp
xor
stc
jne
outsb
mov
shrb
negb
nop
mov
faddp
aas
aas
sub
loope
fsubr
xchg
ret
add
cmc
test
dec
test
repnz
sbb
push
sub
in
rorb
stos
nop
add
push
sub
es
or
in
cmp
add
cmp
and
cld
jg
xchg
dec
add
mov
push
dec
add
pop
out
sbb
mov
jl
fdivl
fiaddl
sub
mov
addl
xchg
inc
or
and
jno
insl
add
sbb
sub
addb
addl
jae
add
dec
lret
mov
loope
or
dec
add
shlb
ljmp
add
mov
pusha
jnp
repz
sbb
add
fsubr
xor
nop
add
out
and
lods
cmp
or
int3
mov
inc
mov
std
inc
cmpsl
lea
subl
mov
add
mov
pop
rcll
loope
cli
das
add
push
xor
push
xchg
fmul
pop
push
icebp
adc
fs
icebp
std
stos
mov
pop
lods
cld
sbb
jae
mov
scas
lock
mov
mov
inc
inc
sbb
out
lcall
das
repnz
push
cmpsl
ret
test
in
pop
xor
xchg
push
das
popf
cmp
lds
test
pop
imul
inc
mov
in
ja
push
das
cmp
push
imulb
xorb
movsl
add
pop
loop
xchg
dec
mov
mov
out
xor
jp
cwtl
inc
ss
sbbl
js
iret
xchg
xchg
out
jno
push
aaa
lahf
fnstenv
jge
jge
pop
lods
orb
addl
add
faddp
std
mov
mov
jle
clc
add
cwtl
movsb
pop
mov
test
inc
arpl
icebp
add
sbb
xor
pop
clc
xchg
cmp
jg
hlt
mov
ud0
push
leave
aad
aam
or
push
xor
xor
dec
or
ret
mov
int3
and
or
inc
jb
ja
outsb
add
pop
xor
into
mov
mov
testb
icebp
lret
add
rol
cmpsl
es
add
push
fimull
mov
mov
or
mov
call
pop
push
add
stos
or
add
mov
mov
add
sub
mov
call
fcompl
xchg
adc
dec
mov
jns
shll
push
jne
test
mov
push
add
push
in
add
add
fsubs
add
inc
out
pavgb
add
add
out
pop
imul
loopne
gs
cmc
cmp
ljmp
pop
cmp
test
in
les
push
bswap
out
dec
in
mov
dec
enter
mov
cld
add
pop
iret
popf
inc
xor
movsb
mov
aaa
lock
push
inc
add
cmp
in
pop
jnp
jno
pushf
cmp
add
in
fstpl
sub
stc
arpl
out
jb
dec
mov
test
sbb
clc
pushf
inc
jb
aad
stc
es
push
jo
popf
hlt
pusha
and
xchg
lock
dec
mov
mov
push
ret
mov
or
push
arpl
xor
jge
jg
and
cmp
jecxz
lret
xchg
les
cli
dec
or
testl
loopne
mov
push
pop
add
push
cwtl
repnz
or
add
in
pop
out
aam
shll
adc
or
cld
inc
test
leave
xchg
push
xor
xor
jmp
loope
or
mov
sbbb
mov
inc
xlat
pop
add
sbb
shrb
or
sub
nop
lods
add
pop
cs
add
mov
icebp
adc
in
pusha
int
mov
push
add
fstpt
jno
dec
mov
imul
pop
add
push
dec
lods
inc
or
es
ljmp
gs
sti
push
cmp
push
jnp
fdivrs
test
imul
repz
test
adc
test
lock
jmp
rolb
jnp
insl
mov
add
sub
dec
mov
jno
pop
lea
or
mov
and
insb
cvtps2pi
add
add
sbb
sbb
mov
ret
fisttpll
loopne
push
mov
add
fisttpll
xchg
adc
cmp
hlt
pop
arpl
and
mov
push
aaa
xor
xchg
mov
insb
pop
jmp
sbb
add
sar
pop
dec
into
xor
repnz
les
andb
dec
mov
loop
in
fistpll
repnz
mov
pop
or
add
mov
or
dec
push
add
test
ja
aam
push
cmp
or
pop
icebp
add
pop
mov
clc
loopne
sarb
cltd
pmuludq
jg
push
jecxz
loope
and
push
inc
jae
xor
repz
jbe
xchg
add
sti
es
iret
cmp
jne
aad
mov
and
mov
fs
data16
popf
fldt
xchg
daa
sbb
jecxz
scas
mov
addr16
add
add
add
in
outsb
add
stos
loop
xchg
fstl
xchg
push
xor
xchg
sub
and
jp
add
pop
int
jmp
mov
lds
mov
arpl
fwait
or
cmp
scas
les
out
xor
adc
mov
fisttpll
xor
cld
je
hlt
out
push
enter
dec
cmc
pop
and
sub
push
shlb
lret
shll
pusha
rolb
and
hlt
leave
add
xchg
shll
add
mov
ret
push
inc
pusha
lods
fs
add
mov
fsubl
iret
shll
jnp
cmp
fstps
adc
sub
mov
test
ljmp
add
shl
lods
sub
lods
nop
add
mov
sub
sub
jp
mov
xor
xchg
std
bound
cmp
and
test
loope
sbb
std
shll
dec
add
push
in
inc
and
popa
jg
imul
xchg
or
add
jno
ret
addr16
decl
arpl
in
jo
sub
lods
testb
add
js
jmp
add
jo
ret
dec
call
outsl
fidivrl
add
cs
jecxz
xchg
inc
in
enter
push
scas
imul
or
and
lock
mov
cld
pop
mov
add
cli
xchg
mov
mov
std
in
es
test
fidivs
repz
xchg
xchg
pusha
add
xlat
inc
mov
aaa
sbb
cmpb
cmp
mov
movb
outsb
and
sub
adc
mov
ss
pop
inc
cli
push
and
cmp
and
insb
add
loop
rol
lock
incl
or
loope
out
cmp
inc
fldl
mov
pop
dec
fistps
mov
inc
mov
sub
sti
into
sub
add
fnsave
mov
jg
shl
jbe
je
pushl
lahf
scas
xor
popa
insl
out
inc
aad
cli
push
mov
data16
or
dec
movsb
cmp
mov
in
arpl
add
shl
push
jno
mov
dec
jle
hlt
scas
lahf
or
jae
sbb
fcoml
add
or
inc
and
lods
ret
sub
popl
lods
int3
das
lahf
aad
fiaddl
fisttpll
leave
xchg
push
sub
jg
mov
rol
or
add
pop
orb
xor
push
popa
stos
pop
dec
out
xchg
ljmp
sub
jno
xor
daa
ret
add
adc
xchg
pop
mov
mov
aas
mov
outsl
cmp
insl
xchg
sbb
rorl
cld
movsl
fmull
popa
enter
mov
jle
rol
ja
inc
and
jno
mov
sti
popa
shl
mov
clc
sbb
jecxz
sbb
insl
add
inc
sub
jo
xor
dec
or
addr16
lods
cli
aas
jmp
shl
roll
dec
incl
incl
or
in
gs
mov
mov
test
das
pop
mov
out
iret
dec
scas
add
cmp
jl
hlt
mov
add
sbb
cli
mov
cmc
cmpl
sbb
lds
enter
adc
loop
add
aad
imul
push
dec
ret
bound
das
in
add
mov
add
inc
dec
clc
in
les
add
xor
mov
rolb
mov
push
add
addr16
add
data16
mov
rclb
insl
test
ljmp
mov
xchg
or
fcoms
clc
inc
lods
jns
insb
pop
add
ljmp
add
adc
jnp
xorb
add
inc
jae
mov
fsubp
adc
jns
mov
push
adc
sbb
daa
sub
mov
hlt
push
lea
pop
push
mov
mov
pop
shl
add
lahf
clc
fs
out
add
lret
cmp
add
fdivl
and
subl
lock
cld
push
outsb
add
fnstsw
pop
sbb
sbb
aas
jae
fidivs
mov
shl
sarl
cwtl
adc
cld
xchg
dec
daa
mov
jno
add
jnp,pn
or
cltd
push
xor
xchg
rorl
data16
mov
jbe
pop
ret
push
inc
add
call
hlt
xchg
push
or
inc
adc
ret
add
jb
push
xor
inc
add
divb
push
push
cmp
dec
mov
cmp
jecxz
int3
sub
inc
pusha
out
ja
dec
lret
pushw
fbstp
fldt
int3
sbb
rcr
mov
insl
and
clc
out
pop
sti
fnstenv
inc
and
xchg
pop
add
enter
clc
inc
sub
test
and
push
aas
cli
out
jb
or
pop
mov
inc
addb
xchg
cmp
loope
fcomi
arpl
pusha
add
mov
jnp
mov
faddl
idivl
pushf
or
xchg
add
mov
aam
add
in
fildl
loop
shlb
add
push
or
jle
fadd
stc
pop
iret
test
push
add
imul
lcall
lock
cmp
inc
inc
enter
inc
adc
outsb
pop
jnp
roll
aad
scas
sbb
insl
les
lods
or
shlb
js
in
jb
adc
inc
adc
pop
xchg
cltd
adc
add
mov
fildll
out
mov
mov
aad
xchg
push
sti
pop
in
lret
or
jo
jle
or
out
add
into
add
test
test
add
dec
jbe
sbb
test
push
ret
dec
pop
es
add
inc
clc
jle
dec
mov
mov
mov
test
add
inc
jmp
lret
or
inc
push
rol
or
push
es
sub
and
int
repnz
add
das
addr16
push
mov
mov
mov
fnstenv
jp
xlat
push
aam
loop
mov
int3
sub
xchg
sbb
xor
lods
cld
mov
stc
orl
fcomp
insb
ljmp
push
sub
scas
subl
mov
icebp
bound
test
sbb
or
push
sbb
fwait
or
fldl
jnp
dec
xor
leave
pop
xor
inc
add
mov
add
mov
add
inc
mov
roll
scas
pushf
mov
iret
or
cmp
xchg
inc
test
mov
inc
push
in
nop
std
adc
add
mov
ljmp
inc
daa
push
xlat
or
cmpsb
adc
jmp
jmp
outsb
mov
mov
adc
jns
insb
fadds
imul
out
jae
cmp
add
push
shlb
cltd
pop
mov
in
icebp
sbb
lea
add
inc
out
adc
loop
add
in
adc
jmp
jbe
inc
and
data16
rol
xchg
or
insl
popa
add
shll
out
push
mov
adc
inc
add
and
iret
fwait
stc
insb
loope
mov
push
popf
add
cltd
in
dec
pusha
adc
and
add
add
idiv
popa
mov
add
sbb
or
add
jge
in
xchg
lcall
mov
jns
es
std
pop
add
jg
fwait
cmp
or
or
xor
add
enter
hlt
movsl
cld
xchg
push
xchg
orb
pop
jecxz
pusha
mov
jp
add
cmp
inc
and
movsl
add
or
push
lds
add
add
mov
inc
mov
gs
mov
push
imul
cmp
xor
pop
jb
push
xchg
pop
cmpl
mov
stc
or
lahf
loope
pop
inc
outsb
test
or
ret
add
scas
inc
test
out
mov
sbb
ret
addl
add
je
stc
jb
and
fs
add
jbe
dec
mov
mov
pop
call
add
mov
and
fmuls
sub
repz
inc
add
xchg
call
lds
dec
and
pop
insl
cmpsl
stos
xchg
fwait
add
jmp
aaa
cld
and
icebp
bound
sbb
mov
add
mov
test
add
out
add
mov
xchg
or
add
loopne
sub
push
rolb
cmpsb
repz
and
jle
add
incl
sub
mov
lock
xor
add
mov
jns
jecxz
add
xor
sbb
pop
cmpsl
ret
sbb
jg
dec
and
iret
add
jecxz
adc
jbe
nop
decl
scas
sub
shlb
adc
out
inc
mov
in
pushf
test
xchg
jge
fbstp
xor
xlat
jb
mov
faddp
mov
lods
dec
stos
dec
mov
andl
pop
adc
and
mov
pop
adc
jns
and
les
mov
pop
out
cmp
mov
shrb
add
pop
call
clc
add
out
gs
xchg
dec
mov
cmp
mov
hlt
sbb
push
xor
into
inc
pop
adc
fs
cmpsb
add
push
jecxz
jl
mov
cmp
inc
cs
push
ljmp
aam
insl
cmp
fucomip
pop
or
add
mov
cld
stos
xchg
dec
mov
mov
push
and
add
cmp
test
inc
loop
nop
cmpsl
fsubrs
add
mov
icebp
roll
ret
movsl
fsubrp
cmp
dec
rorl
add
mov
add
pop
add
add
shl
push
ja
and
add
dec
xchg
test
mov
out
movd
clc
xchg
add
xchg
rcr
add
pop
adc
sti
bound
in
mov
iret
dec
js
add
cltd
fidivl
pop
inc
mov
lret
and
add
in
adc
clc
andb
cwtl
testb
push
scas
sbb
add
push
mov
sbb
add
xor
xchg
add
fisttpl
inc
fldlg2
incl
mov
push
xor
iret
in
movsb
pop
cmp
in
lret
and
shll
or
sbbb
add
daa
cmp
add
push
cmp
fsubr
in
add
enter
dec
dec
hlt
inc
icebp
mov
call
dec
add
pop
add
fs
xor
xor
popa
mov
jmp
in
test
out
std
push
hlt
movb
jle
jbe
sbb
xor
cmp
shlb
in
adc
inc
add
push
add
mov
in
aam
insb
xor
inc
aas
mov
jmp
std
call
cltd
popf
je
jnp
push
out
popa
xchg
cld
adc
and
test
addr16
jns
aam
sbb
cmpsb
out
and
mov
in
pop
insl
or
add
add
cmovae
mov
popf
cld
jg
adc
add
cld
xor
and
insb
sbb
fwait
test
in
addr16
icebp
pop
push
lea
sub
test
xchg
mov
int3
fcoml
icebp
add
out
ja
sub
adc
and
aas
mov
sub
jp
pop
xlat
inc
ret
rorl
mov
loopne
pop
out
in
test
popl
test
add
push
add
xor
fstl
adc
inc
mov
stos
ja
pop
divl
jns
fsts
sahf
push
leave
or
fldl
mov
and
shrl
fdivrl
jb
jbe
xchg
xor
ja
add
ljmp
add
xlat
jb
add
pop
les
dec
add
or
sbb
push
aad
cmc
sti
scas
pop
xchg
and
jae
popw
sbb
ret
dec
dec
adc
incl
inc
and
ret
test
mov
mov
call
sbb
add
ds
popa
jg
mov
mov
push
push
add
inc
mov
dec
mov
outsb
neg
or
pop
add
imul
outsb
mov
sub
cmpsl
insl
mov
inc
mov
and
dec
sbb
addr16
mov
sar
dec
mov
cmp
sub
pop
pop
mov
jmp
dec
and
pop
jb
sub
adc
adc
lret
inc
ss
hlt
bound
mov
mov
push
rcr
in
xlat
addl
or
fldenv
mov
mov
loopne
jbe
dec
clc
faddl
out
mov
add
fcomps
cs
inc
mov
cmovb
shlb
in
into
and
jg
add
shl
outsb
push
add
out
push
shrl
lods
add
jne
adc
pop
add
cmp
jecxz
sbb
sbb
cmpsb
sub
cpuid
sti
xchg
or
cmp
repz
gs
add
in
cmp
sahf
dec
imul
dec
or
pop
xor
push
mov
mov
nop
inc
imul
ret
inc
pop
mov
imul
push
mov
das
xorl
shlb
inc
and
mov
xchg
pop
stos
das
lds
xor
test
in
xor
pop
aas
jg
add
pop
roll
jne
add
xchg
popa
fstpl
pusha
pop
leave
adc
jecxz
ficoml
fisttps
and
jg
jo
or
mov
sbb
leave
test
movl
loop
or
fildl
and
mov
movsb
sbb
mov
imul
jns
rolb
mov
in
hlt
or
je
dec
push
stos
data16
ja
movsl
jne
das
and
add
push
add
shrl
push
xor
inc
pop
sbb
jmp
call
pop
mov
adc
test
stc
mov
adc
cmpl
pop
movsl
cs
stos
add
dec
add
rcrl
cwtl
into
pop
xchg
inc
add
stc
or
jle
and
scas
mov
mov
dec
orl
inc
add
jge
rcr
iret
pop
int
cmp
fs
mov
ljmp
push
adc
cld
xchg
loop
cli
stos
hlt
xor
insl
pusha
push
movsb
stos
xor
xor
scas
jb
xorl
sahf
test
fsubrl
dec
xor
mov
xchg
mov
rcll
roll
sbb
into
addr16
insb
jecxz
xor
aad
fldl
shll
xchg
inc
mov
enter
lret
xchg
aaa
sbb
ljmp
lret
xchg
pop
lcall
adc
jecxz
lods
mov
jl
add
imul
or
mov
ja
jle
push
jae
and
add
cmpsb
stos
mov
iret
push
int
adc
mov
nop
sub
outsb
push
popf
add
std
ret
pop
jp
sub
mov
cmp
cltd
cld
cmp
fstl
cld
popa
rolb
cli
int3
mov
aas
ds
add
int
pop
inc
inc
in
gs
push
fisubrl
sub
jl
iret
orb
mov
fsubr
test
ds
cld
mov
mov
enter
add
jmp
jg
mov
cmpsl
inc
cmp
loopne
jmp
dec
in
push
mov
pop
xor
mov
mov
icebp
and
sbb
cld
xchg
ret
aad
scas
cld
mov
fiadds
fdiv
rcrl
add
popf
mov
pop
mov
mov
xor
cld
cmp
cmovp
or
xor
je
test
clc
add
pusha
add
outsb
mov
pop
and
adc
cltd
xchg
push
adc
popf
arpl
jl
mov
adc
xchg
lahf
pop
add
mov
cli
pusha
popf
clc
jae
bound
icebp
add
add
fsubl
adc
add
fcomi
addr16
jb
add
fs
fwait
mov
stos
daa
push
movsl
and
rolb
adc
add
sbb
sbb
icebp
dec
mov
sub
imul
mov
loope
mov
pop
cld
inc
sub
xor
inc
add
jge
xchg
nop
push
add
jle
lock
out
stos
addr16
mov
add
popf
push
cld
push
pop
inc
movsb
pop
iret
popa
pop
arpl
mov
cmp
cmp
mov
jecxz
xor
dec
lret
daa
fsubrl
pop
mov
movsb
jno
inc
add
sti
xor
sbb
mov
jb
sub
and
out
je
hlt
add
or
cmp
das
testl
mov
mov
cli
aas
sub
addb
push
ds
aam
out
test
adc
cmc
or
scas
insb
enter
cmp
les
hlt
add
dec
xor
inc
jmp
sbb
inc
subl
sar
stos
ss
loopne
add
imul
mov
or
imul
cmp
lock
sbb
sahf
gs
push
xchg
sbb
jle
inc
xchg
sub
dec
push
enter
aaa
fwait
cmp
loope
movl
imul
jnp
insb
add
cwtl
push
add
mov
lods
push
cmp
dec
cmpsb
sbb
mov
leave
repnz
mov
jnp
sub
test
inc
adc
xor
and
adc
add
mov
and
dec
inc
data16
and
cltd
mov
loopne
test
pop
stc
add
xchg
js
and
repnz
add
cld
je
in
or
push
adc
shlb
bound
in
dec
push
loop
leave
mov
xlat
jae
arpl
sbb
fldenv
jmp
mov
adc
fwait
sbb
pop
sbb
cmpsb
outsl
push
jp
or
fadds
inc
xor
pop
add
pop
add
push
add
clc
cmpsb
sub
sbb
call
in
mov
ret
hlt
pop
stos
cltd
and
fildll
mov
or
in
aam
mov
ljmp
insb
push
stos
and
in
sub
xchg
adc
dec
and
fldcw
or
mov
sub
stos
in
xchg
je
mov
cmp
sbb
sbb
xor
fstl
mov
ja
jecxz
pop
pop
idiv
inc
imull
mov
rorb
ret
in
dec
sahf
xchg
add
pusha
fs
out
cmp
sti
mov
mov
idiv
pop
test
push
inc
push
jl
xchg
enter
ret
mov
shlb
movsb
add
xor
lret
mov
lcall
inc
and
cmp
add
negb
cmpl
xor
call
fisttps
call
les
inc
xor
add
jg
pop
fsubrs
add
test
add
and
xor
sbb
add
pop
arpl
out
mov
dec
mov
push
lcall
lods
xchg
clc
add
fadds
pop
add
out
mov
jns
and
enter
stos
aad
cmpl
lret
bound
daa
add
and
sub
jne
lret
ljmp
jno
mov
andl
adc
fdivl
xchg
jbe
add
sbb
inc
imul
mov
cld
pop
stos
cli
jecxz
push
rcrl
lods
loopne
ss
xchg
out
xchg
movsb
mov
icebp
push
xchg
addl
xchg
pop
filds
shll
cs
repz
adcl
inc
sbb
sbb
testl
mov
push
push
enter
xorb
add
cmp
dec
add
xchg
dec
ljmp
into
sbb
insb
jmp
out
push
or
add
jl
dec
adcb
test
std
cli
xchg
mov
in
sub
sti
jb
hlt
add
lret
idivb
into
cmpsl
lods
inc
lock
es
or
xchg
cmp
aam
inc
add
push
in
inc
cmp
xchg
add
mov
addr16
jbe
stc
inc
xor
lods
add
xchg
and
shll
int3
pop
mov
test
aas
xor
mov
cmp
ror
incl
popf
mov
add
inc
push
or
dec
xor
sbb
aas
add
outsl
sub
jb
and
enter
jnp
adc
lock
bound
ds
pop
push
cmp
cs
sbb
add
pusha
jno
ret
stc
lock
add
clc
jnp
cmp
xchg
sti
dec
aad
addl
xor
push
xchg
mov
adc
out
or
inc
imul
adc
addl
call
outsl
jge
movsl
faddl
loope
add
ljmp
sbb
int
xor
pop
out
call
sbb
push
loopne
lret
lret
imul
sbb
add
fidivrs
add
mov
xchg
clc
mov
add
push
pop
in
mov
out
pop
ret
sub
aaa
mov
cmp
rolb
cmpb
sub
and
or
addr16
jae
push
pop
rorl
add
movsb
inc
test
stos
arpl
adc
shll
mov
add
jno
jp
dec
add
subb
mov
loope
enter
test
mov
insb
ds
push
or
iret
frstor
pop
inc
jnp
stos
and
lods
add
jle
add
aas
jmp
sub
out
and
das
shl
lods
push
mov
movsl
mov
mov
add
dec
ffreep
gs
icebp
add
aam
int3
sbb
lret
xor
rcrl
pusha
popa
inc
jg
jle
or
hlt
repnz
jecxz
inc
sub
lahf
add
add
js
jp
dec
icebp
pop
frstor
jmp
mov
adc
cmp
or
adc
xchg
loope
mov
sbb
movsl
sti
fbld
dec
jno
mov
jp
fiaddl
mov
stos
rcrb
dec
cmpb
add
popf
dec
add
sub
adc
adc
xchg
push
push
add
xchg
scas
mov
lcall
add
addr16
std
adc
mov
mov
cmpsl
orb
mov
jg
insl
loope
das
inc
fildll
add
ret
out
jecxz
mov
mov
int3
mov
aam
loope
out
pusha
sbb
mov
add
leave
adc
in
cmpsb
test
test
loope
jp
pop
test
dec
stc
into
sbb
cmp
pop
add
cmp
lea
pop
clc
and
or
lock
sbb
pop
add
mov
xor
cmp
mov
and
hlt
stos
imul
dec
mov
movsl
sahf
add
int3
sbb
mov
pop
stos
inc
pop
hlt
dec
orl
movsl
sarb
fstpl
mov
hlt
push
cwtl
leave
inc
mov
mov
cmpsl
test
xchg
dec
sbb
loopne
jmp
divl
cmpsl
adc
jl
out
add
jle
mov
jnp
mov
mov
mov
mov
cld
fs
mov
movsl
rorb
mov
js
ds
fcomp
lcall
dec
xchg
add
inc
mov
or
int3
sbb
cld
popa
cmpb
leave
cli
mov
sub
scas
sbbl
or
xchg
imul
ss
dec
sti
in
mov
das
jnp
call
cmpb
add
inc
add
sbb
jmp
sbb
pop
cs
outsl
add
out
inc
je
xchg
cld
cmp
call
aaa
aad
enter
rorb
add
popf
inc
xchg
cmp
sahf
jle
outsl
insl
mov
pop
dec
add
movsb
jnp
sub
loop
data16
xchg
add
xor
cmpb
add
pop
insb
cmpsb
add
pop
test
jne
push
mov
int3
pushl
pextrw
or
aas
add
popf
js
xor
fiadds
scas
mov
cmc
pop
add
sbb
sets
xchg
jns
sbb
mov
nop
sub
lret
jo
mov
or
movsb
mov
enter
jb
add
daa
push
out
add
je
rolb
add
cli
push
leave
push
pop
enter
add
outsl
frstor
mov
inc
pop
aas
cmpsb
xchg
pop
insb
decb
rorb
pop
inc
aam
mov
xor
sub
pop
xor
inc
out
insl
add
pop
test
push
dec
lahf
les
add
int3
push
loope
loop
and
xchg
mov
cmp
testl
fs
in
ljmp
mov
cmp
sbb
sub
in
mov
call
xchg
add
hlt
dec
and
lret
loop
sbb
das
push
lcall
and
pop
add
add
in
mov
cmp
movsb
add
or
cmp
mov
jne
inc
xchg
lcall
mov
daa
pop
sub
sbb
push
nop
add
xchg
push
jg
and
sub
mov
lods
hlt
adc
pop
mov
in
add
into
dec
popa
stos
jbe
and
mov
cmc
mov
sbb
out
dec
mov
popf
lods
sbbl
jae
or
cmp
int
sbb
inc
xchg
aam
cmpsb
and
movsb
mov
push
and
dec
inc
hlt
pop
push
nop
imul
mov
adc
fdivl
fiadds
mov
jo
pop
push
xlat
hlt
enter
cmp
aaa
and
lea
inc
xor
push
xchg
test
insl
or
jns
mov
fcoms
in
ds
dec
mov
add
pop
mov
add
adc
sub
add
or
xchg
mov
add
push
xor
sbb
enter
adcl
je
sbb
adc
lahf
ds
jne
push
add
xlat
dec
xchg
jbe
lea
fsubrl
arpl
pop
pop
test
sub
aaa
jl
sub
cld
jae
gs
add
dec
push
hlt
out
dec
fdivrp
and
pop
lret
add
mov
mov
dec
push
sbb
insb
dec
sti
pop
cmpsb
cmp
jo
clc
cld
aas
cmp
dec
aad
push
ja
sub
mov
addb
inc
push
jmp
add
cmc
mov
movb
push
fadd
inc
add
sub
notb
mov
icebp
lods
addb
mov
ss
mov
adc
add
mov
dec
in
xchg
dec
cmp
add
jecxz
inc
add
jg
cwtl
push
mov
adcl
lods
lock
inc
clc
cmp
inc
mov
dec
dec
dec
subps
aam
fsubrl
push
hlt
add
jno
mov
add
cmpsl
enter
out
imull
add
hlt
pmaxub
inc
sub
and
mov
adc
ret
dec
push
inc
daa
inc
aad
add
add
out
inc
push
inc
hlt
lods
imul
lret
jbe
add
sbb
clc
adc
in
cmpl
in
mov
jmp
mov
lods
mov
add
leave
enter
mov
decl
js
addr16
hlt
hlt
lahf
clc
sub
sbb
jmp
ret
mov
mov
jne
mov
inc
sar
test
push
mov
push
add
fisubrs
aaa
sbb
adc
fs
cli
subb
test
out
shll
clc
cmpb
lcall
pop
cmp
pop
lcall
mov
jge
sbb
sub
add
nop
fisttpll
push
jae
mov
hlt
or
popa
insl
pop
int
les
mov
mov
xchg
ljmp
hlt
push
movsl
fdivs
pusha
xchg
adc
sub
popf
pop
cmc
pushf
jne
hlt
sub
outsl
adc
xchg
scas
arpl
add
rclb
test
mov
addl
sub
sub
pop
mov
xor
sbb
mov
sub
std
clc
aas
dec
out
dec
add
ljmp
ja
lcall
cmp
call
imul
or
les
cwtl
xor
or
hlt
pop
add
inc
loope
insb
repz
xchg
jbe
ljmp
adc
add
mov
xlat
ret
sbb
out
sub
movsb
adc
pusha
rcrl
jecxz
ret
addb
mov
lods
stc
mov
sbb
mov
or
hlt
adc
adc
icebp
mov
add
xorl
fs
in
dec
push
push
repz
and
dec
jmp
mov
out
inc
ds
int3
out
add
dec
jno
aam
or
les
outsl
inc
and
in
lods
adc
enter
cwtl
push
xor
lods
leave
iret
pop
cmp
sbb
cmpsb
test
insb
mov
loopne
pusha
jns
and
scas
mov
rorb
add
mov
pop
push
idiv
inc
jb
jbe
dec
ljmp
and
sbb
les
push
sbbb
add
dec
pusha
push
pop
cltd
mov
jmp
pand
addr16
mov
pop
in
ror
outsb
sub
loope
add
fcoml
loopne
push
cwtl
negl
cld
xchg
inc
rolb
and
push
pop
and
or
je
adc
lods
mov
movsl
push
repz
jnp
inc
or
dec
dec
xor
ret
xchg
call
arpl
mov
add
lods
movsl
mov
add
push
fnstcw
mov
repnz
ja
clc
popa
push
hlt
adc
adc
rcll
add
out
fdivrl
fidivl
jae
out
dec
add
pop
test
mov
clc
loopne
xor
mov
fadds
fiaddl
xchg
out
jle
shlb
mov
out
je
clc
inc
rcrl
mov
jne
hlt
add
mov
mov
les
xchg
les
pop
std
cmp
sti
jne
mov
pop
jb
mov
sbb
dec
shr
lods
mov
fiadds
ljmp
insb
add
sti
or
pop
icebp
mov
jo
add
lret
push
mov
mov
jo
int
popa
mov
and
mov
aas
lock
ret
cli
add
adc
lds
mov
and
das
sahf
push
hlt
xor
pop
adc
je
add
mov
inc
cmpsl
ret
sub
add
jae
xchg
and
cmp
clc
mov
outsb
lret
ja
sub
xlat
add
jp
loope
add
rol
fisubl
mov
jl
mov
fnstenv
dec
bnd
es
pop
fisubrs
loope
jb
dec
adc
in
mov
add
xchg
mov
pop
dec
xchg
mov
add
hlt
cmp
lret
sub
jns
adc
adc
mov
sbb
xor
add
add
lret
leave
inc
push
add
mov
add
cmpb
in
test
add
lds
popa
and
call
jne
xlat
sub
std
sbb
pop
jg
pop
xchg
push
inc
pop
ret
cld
sar
push
into
call
sbb
add
bound
adc
outsb
in
inc
jno
mov
xchg
loope
data16
sbb
mov
inc
inc
mov
aam
mov
hlt
mov
lcall
daa
sub
aad
adc
decb
sub
add
lock
cwtl
add
jb
out
mov
sti
clc
add
lret
int
and
mov
pop
je
jae
pusha
sub
ret
mov
jmp
fldl
add
or
sbb
and
push
icebp
add
rep
bound
sbb
sub
insb
loop
es
dec
mulb
movsl
int3
sbb
dec
hlt
subl
inc
cmc
jno
xor
mov
adc
dec
hlt
mov
inc
in
xchg
shl
add
aas
xor
mov
in
mov
mov
dec
sbb
stos
jb
cld
enter
xor
cmp
add
adc
add
inc
stc
jle
push
out
or
adc
popf
in
push
test
sbb
aaa
add
outsl
mov
inc
or
fdivl
push
call
out
inc
scas
jle
inc
call
add
mov
pop
lret
push
add
push
pushf
and
lcall
adc
mov
sbb
jmp
sbb
and
in
sbb
cmp
pop
mov
ljmp
stos
ljmp
xorl
ret
lcall
sub
sub
ret
dec
sti
loope
push
mov
dec
arpl
dec
outsl
push
cmp
cli
mov
jge
cmp
add
popa
cli
xor
xchg
or
xor
lock
out
dec
add
push
stos
mov
ror
push
adc
mov
jbe
es
pop
add
dec
sub
loopne
dec
cmp
push
add
jo
psllq
mov
add
and
into
mov
orb
push
mov
push
mov
sbb
sub
or
gs
dec
inc
or
ljmp
sbb
inc
loope
pop
scas
jns
lahf
stos
add
jo
mov
mov
pop
mov
adc
scas
inc
ds
std
add
xor
xchg
iret
dec
xchg
jb
out
jmp
clc
jbe
add
stos
xchg
aam
ljmp
or
fsubl
out
dec
xor
repnz
lret
add
hlt
std
jle
push
pop
insl
add
pop
push
add
cs
mov
fistpll
cli
js
imul
hlt
in
jmp
xchg
aas
lret
pop
jo
filds
pop
xchg
pop
and
rorb
stos
pop
mov
popa
add
jno
lret
aad
out
xlat
cmp
std
subl
cltd
xor
out
cmp
add
pop
or
ds
cmp
ret
add
pop
add
std
pop
or
cmp
xchg
xchg
int3
orl
mov
jp
add
push
adc
iret
sbb
ret
rcll
jno
in
xchg
pop
cmp
cmp
add
dec
out
mov
sub
addl
fwait
push
lret
push
leave
in
hlt
aas
sub
jge
jg
add
dec
into
add
inc
mov
mov
imul
les
jle
mov
add
leave
imul
inc
std
add
adc
sub
dec
fs
loope
add
inc
lea
aaa
pop
pop
mov
push
loopne
jb
sub
bound
sahf
xlat
xor
xchg
dec
in
add
lea
and
adc
push
ds
sub
mov
movsb
clc
mov
idivb
jmp
adc
aas
push
add
nop
hlt
mov
mov
dec
test
xchg
fnstcw
add
xchg
cmp
sbb
dec
add
test
add
rcl
in
leave
jle
cmp
xchg
push
and
adc
xor
mov
cmpsl
xor
inc
jmp
mov
mov
add
iret
mov
lret
add
mov
xor
fisubl
mov
fildl
ret
push
dec
cwtl
push
and
add
imul
jo
fdiv
gs
inc
sbb
adc
mov
push
testb
cmp
pushf
add
mov
daa
leave
inc
mov
mov
add
xlat
mov
data16
xchg
in
xorl
and
push
mov
or
test
into
scas
add
fdivrl
inc
hlt
jmp
addr16
jo
mov
fs
shrl
mov
mov
add
jne
add
rolb
loope
push
in
add
cmp
fmull
cld
jg
lcall
scas
rorl
repnz
out
xor
rcl
ficompl
lcall
sahf
sub
hlt
cmpsl
std
sub
mov
add
push
dec
sbb
inc
push
jp
add
adc
in
mov
fucomp
in
cltd
decl
mov
push
and
xchg
xchg
dec
shl
sti
add
adc
insl
jmp
mov
in
mov
orb
cltd
adcb
les
in
add
mov
add
lcall
call
imul
push
test
sbb
jl
push
outsl
out
hlt
mov
xchg
lds
push
push
push
inc
add
stos
xchg
pop
mov
mov
sbb
imull
pop
adc
push
add
jbe
inc
sbb
add
add
fildl
sbb
lret
in
mov
sub
fdivrl
dec
movsb
add
hlt
imul
sbb
hlt
in
xlat
cmpsl
popa
push
mov
sbb
or
adcl
cld
or
sahf
ret
mov
imul
mov
pop
inc
insb
mov
inc
jmp
std
cmp
mov
xchg
xor
mov
lock
ret
dec
ret
es
push
add
call
je
push
inc
mov
pushf
add
xchg
fistpl
push
js
push
push
add
insb
fs
mov
test
mov
ja
mov
jg
leave
lods
mov
jge
mov
imul
lahf
scas
add
das
repz
mov
adc
mov
adc
fs
scas
sbb
les
jno
inc
sub
dec
cmp
cmp
add
ret
jbe
fwait
lret
mov
clc
add
mov
jno
int
mov
lcall
pop
xchg
mov
cli
addr16
add
iret
cmp
xor
mov
in
out
test
fadds
push
jns
push
outsb
orl
sbb
jecxz
pop
sub
iret
dec
test
scas
mov
cld
stos
adc
inc
call
push
add
jne
repz
aaa
loopne
xchg
dec
add
mov
outsl
and
xchg
add
movsl
dec
xchg
cld
decl
adc
and
push
push
rol
dec
xchg
mov
lcall
or
popa
mov
sahf
or
push
out
jbe
sti
stc
mov
cmp
jp
add
mov
add
cmp
clc
repnz
subl
sbbb
add
xchg
stc
xor
pop
jo
lds
jg
insb
sub
rolb
cmp
add
dec
mov
xchg
xor
aaa
hlt
adc
fidivrs
xchg
jle
rcll
or
or
lret
loope
repz
imul
pop
loopne
hlt
aaa
lods
push
dec
xor
or
mov
add
cmp
sbb
cld
repnz
outsb
aam
dec
add
insb
pushf
push
adc
incb
and
pop
std
push
sub
mov
andl
xor
mov
imul
xlat
ljmp
add
icebp
mov
pop
mov
mov
int3
icebp
outsl
add
bts
add
push
lahf
inc
inc
mov
stc
out
xchg
out
je
cltd
and
mov
add
push
scas
stc
rcll
xor
and
jae
inc
xor
bound
sub
inc
mov
xor
loope
fadds
push
mov
fwait
or
clc
add
add
inc
in
mov
insl
jb
orb
or
jmp
fadd
pop
aaa
pop
jg
mov
jl
push
sub
jmp
mul
adc
cmp
movl
xor
movsb
shlb
add
push
inc
jb
jmp
out
jp
testb
adc
cmp
les
rorl
or
sub
mov
push
data16
pop
cmpsl
add
inc
jmp
in
cmp
pop
mov
add
cmc
enter
dec
add
arpl
out
notb
fucomi
or
mov
add
sub
out
add
xor
jnp
jo
divb
lahf
insl
and
jle
cmp
lock
mov
out
dec
dec
stc
popf
lods
add
add
mov
add
add
jno
mov
push
or
add
out
int
mov
sub
pop
xchg
jae
add
outsl
lock
mov
add
mov
cmp
stc
xchg
in
or
add
push
adc
jecxz
pop
mov
mov
cmc
ret
adc
xor
lcall
dec
repnz
test
loop
xchg
jecxz
in
shrb
xorl
decl
gs
ja
add
mov
pushf
push
add
xchg
dec
push
add
incl
aas
jle
inc
inc
lret
add
push
dec
mov
xchg
inc
jmp
negb
pop
cwtl
xlat
add
sbb
adc
xchg
cmp
movsb
incb
sbb
arpl
in
sti
cld
cld
mov
dec
xor
subl
lcall
jne
dec
int
mov
fcoms
xor
data16
sbb
add
gs
add
shrb
add
fdivs
out
sbb
add
popa
jmp
icebp
shll
rcll
add
gs
scas
inc
push
cmp
mov
int
cld
cli
outsb
jl
fldcw
mov
jne
sbb
loopne
mov
ja
outsl
ficompl
push
add
mov
add
std
sbb
addb
mov
sub
ret
std
inc
mov
add
loope
adc
jno
add
pop
incl
test
jmp
rep
sbbb
or
ds
popl
popa
or
mov
add
sahf
out
out
xor
pushf
add
popa
sbb
or
mov
lret
insb
mov
sbbl
mov
jnp
fnstenv
test
mov
in
popa
adc
inc
in
mov
cwtl
add
decl
ja
lock
mov
add
jmp
xchg
pop
cmp
cs
pop
test
ret
inc
into
add
inc
int
cltd
or
cmp
add
xlat
add
and
mov
jno
mov
pop
xchg
add
in
push
clc
arpl
mov
add
lds
daa
test
sarb
mov
add
xchg
ret
jne
cmp
add
sbb
or
mov
repz
mov
addr16
aaa
push
outsl
cli
inc
sbb
add
jb
push
out
jge
add
movsl
dec
xor
and
faddl
dec
add
fildl
mov
and
xor
mov
inc
add
leave
data16
and
xchg
mov
pushf
add
mov
fiadds
push
add
cli
push
shrl
cmp
dec
icebp
pushl
mov
incb
xor
mov
mov
jg
lock
iret
loope
adc
inc
pop
cmpsl
jmp
outsb
add
push
sbb
int
pop
xchg
cs
jg
rcrb
fiaddl
out
mov
mov
xchg
out
aam
pop
jmp
mov
mov
or
mov
fnstenv
mov
into
pop
int
dec
sti
cmp
es
stos
imul
push
std
mov
dec
dec
add
xchg
je
add
push
inc
stos
add
movsb
test
jg
sbb
ret
add
push
dec
incl
jmp
xchg
inc
stos
sbb
je
outsl
mov
or
push
xchg
mov
add
or
stos
jp
sub
in
ljmp
add
add
clc
add
mov
and
aam
xchg
je
fsubrl
add
xchg
cmp
lret
add
mov
cmp
cmp
cmpsl
mov
stos
jb
pop
pop
add
sbb
jg
jb
scas
pushf
xor
inc
stos
add
push
fimuls
in
sbb
enter
cld
icebp
int
shlb
repz
das
or
les
sti
out
push
push
addb
stos
xchg
js
mov
pop
test
out
add
pop
xor
icebp
rclb
or
inc
inc
ljmp
sbb
add
dec
test
dec
cmpb
fildll
lcall
and
out
insl
rorb
jo
enter
adcb
adc
xchg
enter
cmpw
jbe
lahf
inc
push
into
or
mov
in
ret
in
je
ljmp
lahf
test
stos
loope
divl
add
xchg
pushf
sbb
movsl
iret
add
and
add
mov
and
pop
add
ljmp
mov
dec
add
movsb
cs
popa
or
fisubl
adc
cmpsl
jb
mov
jns
enter
mov
hlt
mov
sub
push
leave
add
xchg
faddl
sub
mov
jl
in
pop
pop
add
fucomip
jnp
pop
mov
add
sbb
rorb
mov
xor
pop
xchg
mov
stos
and
or
cld
movsb
int
and
inc
movsb
sete
dec
cld
or
xchg
xchg
add
jno
or
sti
xor
rolb
add
insb
jne
xor
push
add
mov
shr
and
add
sbb
xchg
mov
or
add
aaa
fwait
cmp
jnp
push
rcll
je
add
lock
xchg
jne
add
insb
xor
sub
pop
xchg
jle
test
sub
xchg
insl
push
fisubrl
inc
add
scas
ret
rcrl
addb
clc
cmp
xor
add
mov
call
xchg
fs
aam
and
clc
testl
and
lret
lods
add
test
dec
pusha
xor
sbb
add
xorl
pop
jne
add
push
pusha
leave
repnz
sbb
popf
inc
push
cli
lret
push
sbb
push
mov
out
ret
mov
adc
pshufw
fucomip
ljmp
loopne
and
xchg
rorl
mov
imul
pop
cmc
adc
notl
js
imul
cld
adc
xchg
int3
cmc
adc
loop
mov
test
sub
push
xchg
popf
add
les
hlt
pop
xor
pusha
dec
mov
je
incl
xchg
rclb
ret
add
inc
inc
lret
add
dec
mov
or
imul
jmp
leave
fsubr
mov
lock
sbb
add
add
fs
adc
mov
insl
xor
push
mov
cmp
cli
xor
cld
das
jnp
add
xchg
push
gs
lcall
test
sub
add
dec
and
stc
jecxz
les
mov
lahf
repz
push
adc
es
loope
cmpsb
xor
add
cmp
xor
mov
pop
jp
adc
push
popf
add
jae
mov
rclb
sbb
pop
jnp
js
test
mov
fwait
lea
fsubl
inc
mov
push
rcrb
movsb
add
adc
and
and
adc
nop
test
mov
add
sub
pop
dec
xchg
and
add
push
sub
loope
add
push
aaa
add
out
cld
in
mov
addl
jns
mov
xchg
add
fisttpll
test
data16
mov
add
and
add
add
insb
mov
mov
sbb
xor
jg
loope
filds
std
inc
in
js
sub
cli
jmp
out
in
stos
add
sub
add
add
mov
es
rolb
out
add
mov
adc
scas
fwait
sbb
cli
mov
jnp
sub
jbe
aam
push
lea
cmpsl
andb
add
mov
fstpl
pop
enter
and
mov
cld
loopne
adc
scas
cwtl
jno
and
enter
pop
inc
hlt
cwtl
push
imul
xor
jb
leave
dec
inc
cmp
xlat
lods
in
mov
enter
sub
aam
std
popf
leave
test
lods
andl
outsb
mov
out
jge
and
outsb
shrl
jb
mull
roll
jp
adc
mov
inc
jnp
add
aas
xlat
dec
les
push
ja
cld
fwait
arpl
xor
mov
test
xchg
add
icebp
jecxz
add
mov
inc
ficoms
add
lods
push
sbbb
pop
sub
fdivrl
data16
and
sarl
icebp
sbb
add
xlat
or
cmp
orl
lret
dec
pop
add
xor
sbb
cli
stos
arpl
mov
jmp
or
int3
cmp
clc
pop
sbb
xor
mov
push
adc
scas
sbb
dec
sarb
dec
add
adc
or
cmp
insb
loope
test
dec
pop
push
jl
add
test
add
aam
pop
add
mov
pop
xchg
and
mov
xor
jne
enter
add
icebp
push
jg
xor
cmp
stos
xchg
cmp
arpl
gs
push
test
adc
xchg
xor
sti
push
add
popl
gs
jns
sar
aad
fisubl
rolb
in
stc
stos
and
inc
out
dec
add
pop
inc
cwtl
insl
js
nop
addb
daa
test
mov
add
outsl
mov
adc
out
sti
pushf
cmp
aaa
and
fistl
pushf
xchg
add
sub
loop
sub
das
mov
lds
xchg
dec
out
adcb
push
add
or
mov
sub
loope
add
decl
jnp
add
push
jmp
sti
add
in
int3
cmp
pusha
mov
mov
inc
divl
jae
push
mov
add
fsts
mov
popa
mov
add
cwtl
out
shlb
aam
or
adc
out
push
enter
aaa
std
mov
aad
dec
fadd
jge
add
icebp
call
add
iret
jecxz
mov
pop
popl
mov
and
push
sub
sbb
ss
sbb
adc
push
and
cli
xchg
imul
sub
and
test
lea
out
shl
push
sbb
hlt
xchg
fisubrs
push
ret
daa
or
addl
lods
loope
leave
xchg
clc
push
push
dec
add
in
add
decl
and
add
jp
rcll
and
in
cmp
adc
outsl
add
dec
out
dec
cmp
inc
sub
add
nop
and
jns
aas
xor
or
inc
movsb
in
flds
jns
jl
enter
add
xchg
xchg
xor
jno
pop
add
movsl
push
add
in
jmp
lods
lods
push
add
addr16
xchg
sbb
cli
rep
shll
popa
sub
xor
lcall
nop
pop
cmp
mov
call
jecxz
js
pop
mov
push
inc
inc
pop
stc
add
out
mov
add
mov
add
data16
nop
mov
cmc
xchg
xchg
std
cmpsl
sti
add
shrb
insb
push
pop
nop
add
jns
cmp
dec
shll
lcall
sbb
add
adc
cld
movsb
push
out
insb
lret
inc
and
push
xchg
movsl
bound
lods
inc
pop
dec
xor
ret
mov
bnd
mov
inc
add
xchg
imul
or
js
push
mov
jmp
jecxz
dec
inc
fimuls
test
cli
ss
imul
mov
scas
add
lds
or
cli
mov
adc
xor
cmp
loope
mov
pop
add
mov
mov
cmp
add
add
rorb
inc
adc
xor
push
mov
ret
add
sahf
mov
mov
add
cli
es
adc
roll
inc
lods
movlps
sub
sbb
movsl
jmp
or
mov
stos
cmp
sbb
add
and
cmpsl
cld
in
pushw
mov
mov
pop
or
mov
xchg
pop
es
imul
add
vmovd
in
in
sub
xor
and
mov
sbbb
push
mov
fwait
sbb
sbb
sarb
dec
in
jno
xor
add
and
or
inc
out
add
in
les
ljmp
add
imul
adc
jne
and
inc
into
imul
xchg
das
mov
mov
sub
ljmp
sbb
test
call
scas
dec
fcom
into
jno
xchg
dec
js
test
xchg
call
ret
add
rcll
push
xchg
add
xor
daa
out
std
out
paddsb
pop
pop
cmp
adc
enter
popa
push
lock
clc
xchg
xchg
faddl
into
leave
mov
jbe
mov
xlat
repz
inc
adc
and
cmp
hlt
imul
mov
mov
das
aad
pop
pop
inc
sbb
or
es
hlt
pusha
notl
sub
loope
ds
mov
jecxz
roll
add
inc
loopne
cltd
dec
mov
aam
mov
iret
dec
jno
mov
xor
addb
jbe
and
xlat
xchg
pop
add
xchg
mov
add
fistps
mov
mov
jae
sub
hlt
ud0
sbb
adc
adc
mov
add
cmp
sbb
mov
jb
push
dec
sbb
test
mov
addb
add
mov
jge
push
dec
push
mov
cli
enter
inc
aad
arpl
sar
cmp
fcompl
js
testl
xor
aam
flds
dec
arpl
sub
jge
mov
test
xor
lcall
xchg
out
sub
pushf
scas
mov
lods
test
iret
add
push
xor
lret
jmp
rolb
jg
sub
aaa
icebp
sub
enter
cmpl
add
mov
insl
xor
jo
cmpsb
mov
or
pusha
orl
sub
push
xchg
cmp
jge
add
sbb
pop
jno
inc
mov
adc
int3
lds
push
shl
loop
mov
dec
lahf
cs
xchg
xor
mov
loope
movsl
hlt
lock
sub
pop
inc
sub
mov
lahf
push
insb
enter
addl
cmp
mov
mov
add
inc
mov
lret
inc
and
cmp
add
mov
sbb
pop
xchg
pop
xor
les
nop
push
cmp
add
ss
ret
jecxz
mov
or
in
adcl
leave
fdivl
adc
or
add
jl
mov
out
jecxz
sub
hlt
repz
sub
insl
or
push
fldl
pop
pop
imul
mov
in
cld
ret
cld
repnz
xchg
jmp
push
jecxz
adc
addl
hlt
mov
push
enter
loop
add
add
mov
sbb
std
test
mov
adc
xlat
xor
xor
fsubs
movsl
mov
pop
addr16
adc
sbb
push
mov
mov
ljmp
jp
pop
push
lds
test
cmpsl
sbb
pop
aaa
flds
test
jecxz
insl
popl
adc
pop
cmc
and
loope
push
les
imul
mov
mov
cmp
inc
xor
frndint
sahf
inc
xchg
jg
dec
dec
jnp
xor
stc
ficomps
xor
xorb
xchg
addl
xor
mov
in
jns
dec
mov
add
pop
sub
enter
adc
mov
jl
in
out
push
cmp
popf
inc
cltd
push
lods
mov
int
pop
xchg
mov
std
or
arpl
insb
xlat
idiv
cmpsl
into
or
int3
out
jge
mov
lcall
jno
fstpl
push
es
scas
call
fmull
aas
fwait
and
push
add
add
push
or
mov
add
mov
dec
idiv
mov
pop
les
push
sub
cmp
repnz
in
mov
psllq
fs
add
mov
test
sbb
data16
mov
in
out
add
pop
add
xor
ja
push
enter
sbb
jmp
cli
cmp
cwtl
mov
mov
cld
shrl
out
push
rcr
mov
sti
das
jno
nop
or
cld
clc
test
andl
movd
sub
cmpsb
lret
mov
aas
mov
inc
cs
arpl
mov
add
sti
add
lret
inc
mov
mov
shll
xor
pop
add
push
inc
out
mov
clc
sbb
xchg
xor
pop
add
jne
subb
inc
mov
add
or
lahf
sbb
hlt
sahf
daa
inc
into
pushf
ret
rcr
mov
lret
test
leave
sbb
hlt
nop
popf
adc
add
dec
in
xchg
test
nop
xor
nop
test
add
lea
fldcw
add
mov
mov
xchg
pop
add
shll
in
xchg
inc
ja
popf
cmp
subb
enter
add
jnp
dec
xchg
add
and
movsl
add
into
mov
iret
je
in
jg
sub
mov
inc
pop
mov
mov
sub
fsubl
pop
and
mov
jmp
push
mov
adc
dec
add
push
add
xchg
xchg
pop
adc
sub
mov
out
pop
cmpb
adc
cmp
mov
pop
mov
fiadds
mov
repz
add
and
jae
insl
mov
mov
addl
or
xor
add
test
mov
fsubrs
jp
filds
roll
cmpsb
leave
add
xchg
jp
sarb
ret
sub
add
shll
test
jmp
adc
mov
adc
aad
sahf
add
rol
imul
jmp
jae
mov
pop
roll
clc
mov
inc
dec
pusha
push
cmc
push
pop
add
movl
push
or
int3
and
and
adc
jp
adc
push
jl
into
add
aas
dec
pop
xchg
aad
sub
stos
sbb
mov
insb
add
mov
dec
cmp
cmpsb
pop
mov
pusha
incl
xchg
scas
push
incb
xchg
push
mov
push
out
std
testl
test
adc
lret
repz
mov
jecxz
xchg
cmpsl
faddp
repnz
inc
mov
in
cmp
ret
setne
cmpsb
ffree
cmp
test
pop
and
add
shlb
xchg
add
add
call
add
sub
inc
in
loope
jmp
jecxz
js
and
sahf
cmp
arpl
dec
add
shll
mov
add
lds
mov
pop
adc
push
imul
sub
add
jecxz
sub
jnp
mov
inc
xchg
hlt
add
push
pop
mov
add
mov
inc
jns
icebp
xchg
and
push
inc
cli
test
dec
cs
sbbl
sub
fstl
cwtl
sbb
add
int3
repnz
mov
mov
rorl
or
dec
ljmp
lock
pop
rclb
test
inc
icebp
hlt
repz
fcoms
je
and
push
mov
cmp
add
push
or
enter
clc
sbb
add
push
xchg
lret
mov
add
dec
pusha
and
insb
mov
mov
imul
dec
lahf
cld
mov
mov
dec
xchg
add
scas
add
daa
into
pop
push
ljmp
ret
imul
jns
jp
add
xor
sahf
jl
xchg
add
lret
sbb
cmpsb
outsl
mov
mov
nop
dec
clc
xor
xchg
xchg
cmp
xchg
sbb
pusha
fidivrs
daa
lods
bound
inc
adc
into
pop
add
mov
and
das
popl
cmp
stc
fcmove
and
dec
in
inc
add
pop
push
insl
inc
das
adc
stos
imul
add
or
je
pop
sti
dec
xchg
scas
mov
out
imul
popa
outsl
add
call
repz
cmp
in
xlat
jl
add
insl
xor
inc
mov
stos
mov
add
mov
and
add
ds
enter
fiaddl
fwait
inc
xor
icebp
in
pusha
es
cmp
and
nop
dec
push
push
imul
add
and
fs
and
loope
add
mov
stos
inc
xor
in
dec
loop
add
popf
add
lahf
loope
inc
mov
hlt
cs
fbstp
negb
push
lret
mov
xor
sbb
jbe
mov
out
jge
out
xor
mov
insl
in
adc
mov
add
and
mov
sbb
in
jle
shl
std
adc
add
mov
adc
add
das
hlt
dec
or
in
inc
sbb
cmp
fistl
dec
rolb
cmp
or
jmp
nop
jp
mov
mov
sbb
and
add
loope
movsb
ljmp
add
lret
hlt
rolb
add
or
adc
ret
sbb
mov
imul
dec
in
cs
xchg
mov
jmp
in
movl
cld
outsb
cmpsb
sub
ret
orl
stos
mov
faddl
lcall
mov
mov
pop
push
mov
insb
sub
inc
cld
and
lock
or
add
cwtl
mov
adc
xchg
sti
mov
and
imul
xor
lahf
in
dec
dec
sahf
inc
inc
inc
mov
inc
xchg
out
scas
jle
sbbb
sbb
push
mov
jno
cmp
add
push
pusha
lods
jb
ja
pop
or
in
cmp
lods
xchg
mov
adcb
mov
popf
dec
inc
shl
add
and
bound
aas
xchg
jno
lods
stc
mov
add
aad
nop
orl
lock
loope
add
inc
xchg
dec
pushl
jno
mov
cmp
fiaddl
btc
ret
mov
add
flds
add
xchg
add
xchg
xchg
lock
inc
mov
add
dec
jns
les
test
ficomps
imul
add
sub
pextrw
ss
pop
ret
in
popl
imul
ja
or
xor
fcoml
sbb
xchg
add
inc
xor
add
jb
xchg
das
cwtl
stos
xchg
fldt
sbb
push
in
fbstp
or
sbb
cmpsl
cli
cwtl
fsubl
loop
add
xchg
pop
push
sbb
fnstcw
xchg
jg
adc
cmp
push
std
pop
jne
hlt
repnz
xorb
ss
xchg
rorl
out
lcall
mov
sbb
adc
test
mov
or
mov
das
aaa
and
xor
outsb
lea
adc
shlb
daa
sbb
mov
aaa
push
mov
setge
fldt
push
sbb
pusha
addl
xchg
in
mov
pop
call
cmp
push
gs
and
out
mov
out
push
fsts
pop
cmp
add
add
xchg
mov
add
and
and
in
dec
adcb
mov
mov
lds
jp
lods
pop
test
inc
xchg
jo
mov
mov
out
xlat
orl
jne
pop
adc
outsb
add
sub
mov
hlt
js
mov
je
pop
add
cmp
sub
sub
cld
jle
or
inc
lret
add
fldl
call
out
shr
loopne
push
dec
or
or
gs
inc
and
pop
lahf
adc
and
das
mov
ja
inc
ret
pop
xor
aas
push
pop
xor
fs
push
icebp
cmpsl
mov
es
cwtl
and
mov
loope
mov
fucomip
xor
outsl
scas
mov
xchg
push
ss
ret
mov
inc
mov
add
mov
outsb
addl
cmp
psubd
mov
jno
ljmp
or
je
mov
hlt
lea
popf
imul
and
xorb
insl
mov
dec
enter
fwait
std
mov
add
pop
inc
inc
push
cmp
add
push
leave
test
add
cmp
inc
in
jecxz
mov
adc
ds
xor
adc
jae
movsl
fnstenv
jl
add
or
nop
mov
sbb
lock
xchg
xchg
push
jns
cld
dec
dec
jmp
sarl
sbb
fcmovnb
cmpsl
xchg
xchg
scas
xor
divl
mov
add
xor
sub
in
jbe
add
inc
inc
hlt
loope
scas
mul
sub
mov
mov
adc
cmc
add
loopne
pop
add
fcompl
and
test
cmp
in
cmp
fiadds
sbb
xchg
stos
mov
lea
mov
add
mov
add
xchg
mov
xor
cmp
inc
adcl
xchg
mov
jno
sarl
mov
cltd
subl
aas
sub
or
push
enter
hlt
xchg
pop
add
adc
pop
mov
mov
add
inc
je
leave
adc
lods
incl
pushf
dec
js
jecxz
mov
dec
stos
push
add
out
mov
scas
jl
lcall
sahf
cld
lock
pusha
or
test
incb
mov
sub
push
in
rorb
push
jmp
std
push
lock
jb
shlb
jecxz
pop
out
add
mov
inc
add
jle
xchg
push
out
mov
xchg
stos
shll
pop
lret
divl
sbb
shrb
mov
andl
jle
std
insl
mov
addb
fs
inc
call
lret
cmpsb
dec
push
out
add
enter
push
pop
sti
pop
cld
mov
sub
adc
push
les
adc
shll
push
cmc
mov
mov
pop
callw
xchg
push
notb
pusha
dec
mov
push
add
inc
test
outsl
sbb
ss
pushl
aam
or
adc
out
and
ud1
sti
xor
in
mov
pop
sbb
movsb
leave
mov
paddusb
or
push
mov
movsl
add
fstps
add
insl
mov
imul
add
xchg
jo
pop
sbb
or
ret
rcrl
insb
xchg
cltd
push
ror
add
into
mov
hlt
loop
test
push
aad
scas
sub
enter
subl
cmp
add
push
out
mov
mov
mov
add
out
sti
and
pop
dec
mov
inc
add
sub
xchg
dec
inc
xor
add
mov
and
lret
sub
addb
sbb
std
lahf
out
xchg
jmp
fidivs
scas
sbb
add
cmp
repnz
push
je
mov
mov
dec
fldl
pandn
int3
sub
dec
sub
mov
lods
cld
sar
sbb
add
aas
mov
rcrl
add
sbb
imul
mov
cmp
inc
mov
mov
inc
push
lret
rcrb
add
add
mov
inc
scas
push
mov
mov
movb
test
lahf
sbb
or
add
mov
aam
scas
popa
insl
js
popf
pusha
xchg
test
jb
lret
inc
lock
jg
xchg
inc
lret
jne
jo
lock
add
scas
cltd
adc
add
xor
mov
fstl
xchg
inc
rorl
addr16
sti
shr
popa
add
lock
ret
aas
aaa
push
add
mov
mov
iret
lret
mov
sub
movsb
dec
xor
lahf
cmp
imul
add
mov
mov
push
aaa
jecxz
cmpsb
and
lods
je
out
sbb
inc
arpl
jae
sbb
stos
repz
rcl
jns
in
addr16
outsb
dec
lret
add
add
pop
jl
sbb
xchg
in
pop
rol
and
cmp
pop
push
ret
add
xor
pop
adc
mov
inc
sbb
pop
jb
test
cmp
in
push
fisubs
mov
sub
add
xor
and
push
fadd
lahf
xchg
xchg
arpl
mov
mov
mov
mov
cs
lcall
inc
add
push
in
int
hlt
insb
lds
and
nop
popf
out
adc
sbb
mov
add
cmp
push
cmp
sub
add
je
lods
pop
imul
add
adc
sub
sbb
cltd
mov
nop
xor
add
mov
lea
aaa
mov
adc
mov
dec
adc
nop
jo
add
in
aad
lock
mov
push
or
jmp
push
aas
xchg
ja
and
cvtps2pd
lock
loope
jmp
add
das
cli
iret
mov
out
ret
icebp
pusha
sbb
adc
inc
mov
loopne
adc
cmpsl
add
and
ss
dec
in
mov
xrelease
ljmp
dec
cmc
rcrl
into
sub
mov
inc
push
push
je
or
add
mov
movsl
enter
pop
adc
sub
and
adc
add
cmp
xchg
and
aam
inc
shlb
movsl
lds
cmp
repnz
adc
add
xchg
pushf
add
pop
lods
push
in
fdivrp
lock
lcall
push
in
dec
jbe
mov
pop
or
dec
or
cmpsb
subl
xchg
push
icebp
push
push
cwtl
decl
push
ret
cmc
addb
add
sbb
cld
dec
jle
stc
xchg
in
push
mov
mov
je
or
adc
lret
sbb
jne
iret
mov
add
add
in
dec
mov
adc
cltd
add
dec
pop
sub
mov
add
ja
push
mov
add
or
sub
inc
xor
out
loopne
dec
dec
es
push
mov
adcl
pop
imul
cmp
and
sarl
push
add
mov
sahf
mov
jecxz
push
mov
pop
or
test
add
fcmovb
mov
movsl
add
fwait
mov
dec
out
fists
ret
jmp
jnp
push
data16
inc
xorl
push
rolb
fstpt
pop
add
sbb
loop
gs
out
lea
andl
mov
mov
nop
push
movsb
stc
jecxz
lret
mov
pop
lock
cmc
in
cmpsl
xchg
cs
sti
inc
in
mov
add
or
andb
xchg
add
mov
adc
add
mov
push
push
jg
hlt
dec
xor
jle
xor
loop
add
leave
cmp
inc
xchg
ss
add
mov
in
mov
push
test
movsb
add
sbb
jns
xor
jecxz
mov
jne
add
add
bswap
mov
in
insb
loope
arpl
sbbb
fsubs
ds
mov
dec
or
push
fdivp
mov
add
sbb
xchg
gs
orl
iret
pop
inc
je
push
add
xchg
push
into
xor
mov
adc
fwait
and
repnz
leave
cmpsb
insl
sbb
and
push
cld
scas
lods
or
out
adc
call
mov
sub
sbb
add
loop
cwtl
hlt
cmpsb
adc
enter
fdivrl
pop
inc
out
adc
mov
inc
mov
lods
hlt
pop
mov
adc
add
jmp
sbb
and
ja
or
cmp
and
movsb
inc
cmp
arpl
or
andl
sbb
xor
enter
out
das
ret
ret
inc
adc
or
scas
inc
xor
sub
popw
mov
xor
mov
xor
mov
add
out
pop
lods
cld
cwtl
mov
jmp
push
xor
mov
mov
fidivrl
jne
pushl
icebp
imul
and
in
hlt
rorl
xchg
add
pop
sbb
pop
add
or
add
xor
adc
add
movsb
call
sahf
mov
push
sti
adc
jno
push
stos
enter
addb
es
inc
add
push
fdivrl
dec
test
lods
cmc
iret
test
shlb
inc
xchg
adc
fdivs
lcall
xor
xchg
movb
popa
cld
sub
sti
push
popa
mov
in
dec
mov
add
fs
cwtl
xor
in
out
cmp
lods
jg
lahf
xor
in
add
jge
mov
jecxz
nop
cld
mov
mov
cltd
aaa
mov
and
inc
jg
sbb
mov
add
fdivrs
xchg
or
jp
mov
sbb
push
dec
cmp
test
scas
mov
or
jo
outsl
das
adc
cltd
xchg
mov
sub
in
lcall
fcomp
add
inc
jno
out
mov
sarb
enter
add
sbb
dec
aad
emms
call
stc
shl
test
mov
add
in
out
ljmp
inc
mov
and
xchg
fnsave
push
inc
fcmovnb
rol
repnz
mov
enter
dec
fmuls
xchg
insb
inc
jl
add
or
sub
movsb
mov
inc
and
xor
or
dec
sbb
aaa
add
into
or
sbb
xorl
sub
pop
push
imulb
jno
push
ljmp
fdiv
mov
xchg
lock
int3
decb
add
lea
xorb
xor
test
add
or
enter
add
mov
fstpt
and
push
sahf
mov
cld
test
sbb
jl
xor
out
add
js
cmc
sbb
and
jl
and
lock
pop
in
push
add
add
aaa
je
stos
dec
inc
scas
add
insb
in
pop
shrl
scas
pop
sub
sbb
test
jnp
popf
jle
and
inc
or
les
out
push
aam
inc
rorl
add
xlat
xor
dec
leave
add
adc
movsl
pop
push
add
mov
add
mov
repz
cli
cmp
loope
add
fisubrs
adc
add
mov
xchg
adc
enter
inc
ja
dec
add
push
inc
nop
icebp
mov
fisubrl
repnz
and
mov
pop
push
jns
sahf
dec
sub
and
push
shrb
fwait
add
cli
insb
xor
stos
jns
icebp
add
mov
roll
cld
pop
scas
jo
push
in
cli
lret
cmp
in
out
jge
gs
xchg
xchg
add
dec
jg
add
push
inc
rcl
push
stos
add
test
mov
mov
lahf
insb
cmp
lds
lcall
testb
imul
clc
add
jno
jge
je
or
fisubs
sahf
and
pop
inc
or
cmpsl
nop
push
cs
dec
lahf
addl
cmpl
ror
sbb
daa
arpl
rcrb
xor
lock
cld
loop
mov
dec
mov
add
sbb
add
outsl
dec
inc
out
loope
xchg
add
push
clc
rep
sub
add
mov
das
push
iret
stos
push
hlt
push
lds
popa
cs
inc
shl
dec
push
imul
pop
cld
sbb
lret
sub
stos
idivl
icebp
lods
lea
add
mov
stc
xor
push
mov
pushl
jge
push
add
xchg
push
popf
enter
add
jl
pop
mov
lock
cmp
sbb
sbbb
mov
lcall
int3
xchg
cwtl
add
call
dec
jge
dec
cld
aad
or
test
xor
jne
in
repnz
es
fidivrl
fmuls
cld
or
and
cltd
hlt
inc
pushl
inc
push
bound
mov
and
mov
add
pop
orl
mov
sbb
mov
push
es
incb
ret
lret
rorl
lock
add
push
ljmp
rorb
test
int
xchg
add
mov
dec
into
mov
movsl
mov
and
and
sbb
mov
or
loop
testl
test
inc
arpl
add
push
add
add
sti
nop
add
popf
aaa
dec
pop
repnz
jg
dec
adcl
push
push
push
add
cmpb
popa
mov
push
ljmp
sbb
mov
jg
daa
cmpsb
aam
sbb
nop
or
lods
mov
cmpsl
popa
into
mov
mov
sahf
out
add
mov
addl
xor
jle
insb
xchg
pop
add
inc
dec
lods
pop
pushl
dec
cmp
jp
sbb
insl
out
or
dec
testb
xchg
xor
ret
dec
push
outsl
in
sub
adc
sbb
enter
mov
inc
test
mov
int
jg
subb
push
mov
and
jg
arpl
shll
dec
add
cld
mov
idivb
dec
pushl
add
sub
add
mov
xor
mov
test
adc
push
scas
lret
pop
adc
dec
mov
mov
push
cld
rorl
arpl
sub
add
cltd
pop
lret
adc
hlt
jne
subl
mov
js
add
into
jbe
cmp
jo
dec
enter
out
mov
add
push
fchs
ror
add
pushf
sub
sub
ficoml
cmp
in
int3
pop
flds
mov
sub
sbb
loop
pop
mov
mov
mov
lahf
adc
xor
add
pop
mov
push
adc
cmp
sti
cltd
mov
add
orb
fstl
dec
mov
push
cld
xor
xchg
adc
leave
xor
adc
lret
adc
cld
jns
xchg
ljmp
add
sbb
pop
out
mov
adc
sti
inc
fsubrs
sub
mov
pop
mov
push
xchg
addl
aad
arpl
mov
les
push
shl
mov
jbe
cmp
push
pop
mov
or
cmp
shll
test
add
add
loopne
mov
bound
ret
mulb
jecxz
sar
xorb
pushf
imul
lahf
cmp
add
add
inc
cmp
jle
dec
out
mov
inc
mov
aad
enter
test
sub
std
jecxz
stc
or
xorl
xor
inc
das
cli
insb
and
call
adcb
mov
mov
jnp
loopne
cmp
sub
xchg
stos
push
clc
into
and
add
test
inc
jl
adc
les
jge
gs
mov
mov
jne
push
push
and
lret
push
add
lcall
and
lock
adc
mov
adc
clc
je
mov
lods
or
js
negb
cli
imul
inc
dec
inc
add
jnp
inc
or
ret
lcall
test
mov
repz
idivb
add
mov
loope
mov
and
xlat
add
negl
stos
insb
pop
imul
inc
pop
ret
scas
inc
inc
daa
xor
cs
stos
push
mov
js
mov
sbb
fsubl
test
loop
mov
ret
add
xchg
aam
or
hlt
mov
sub
sti
and
add
lock
lidtl
mov
sbb
fsts
cld
cltd
xchg
movsl
dec
fsubl
adc
lret
xchg
subb
mov
ret
out
add
jg
mov
xchg
push
add
fs
das
repz
cmc
into
aaa
stos
adc
call
and
test
rcrb
hlt
push
in
pop
icebp
flds
test
addl
add
pushf
dec
and
out
cmc
ret
add
xchg
scas
add
cmp
iret
fistpll
addr16
ja
add
add
inc
sbb
add
aad
push
xchg
or
pop
mov
imull
xchg
mov
jmp
inc
pushf
movsl
out
push
bound
or
cmp
mov
and
fs
imul
xorb
jge
enter
pusha
in
adc
and
popa
es
in
add
cli
and
hlt
sbb
and
pushf
mov
outsb
add
outsl
je
shll
jns
add
cltd
sub
repnz
imul
subb
loopne
call
sbb
sbb
gs
inc
scas
add
mov
mov
mov
or
mov
cmp
mov
cltd
add
add
iret
jo
cmp
out
mov
inc
pop
popa
or
dec
cmp
push
add
push
jo
repnz
add
push
adc
adc
fucomip
xchg
xchg
dec
nop
xor
ret
outsb
rcll
out
push
pop
sbb
shlb
iret
jbe
sar
push
or
lock
repnz
cmp
xchg
jbe
cmp
mull
cmp
and
lea
cmp
pop
mull
lret
pop
xchg
popa
fstl
add
lods
ret
pop
xchg
imul
jl
inc
aas
repnz
or
fsubr
pop
stos
and
loop
fmuls
add
testl
repz
addr16
add
ss
add
add
mov
lret
mov
adc
cmp
sub
add
test
add
stos
xchg
aaa
out
sbb
mov
or
std
jl
mov
adc
mov
mov
push
std
add
xchg
and
add
es
cmpsl
sarb
add
jbe
mov
roll
cmp
or
xchg
loope
mov
stos
add
leave
aaa
push
jbe
mov
sbb
test
ds
adc
mov
pop
lea
fwait
mov
fidivrs
outsb
mov
add
sub
std
daa
movsl
mov
movl
shlb
push
lock
and
mov
inc
xchg
add
push
ucomiss
icebp
add
dec
cmc
dec
cmp
add
js
loopne
inc
and
loop
in
fdivrs
inc
test
jmp
jl
jp
jae
rorb
add
xchg
push
mov
sub
scas
addl
lock
in
sub
pushf
jns
xchg
enter
jl
mov
sbb
xor
add
jns
inc
orl
test
push
sahf
ss
add
pop
add
dec
sub
imul
int3
xlat
sub
popf
fcom
add
jp
xchg
sbb
xor
mov
popl
fildll
hlt
push
ljmp
rorb
mov
adc
pop
push
dec
sahf
and
fmull
cmpl
push
inc
mov
out
divb
incl
jp
or
push
enter
cwtl
push
in
js
out
and
out
xor
fdivl
mov
std
enter
xor
mov
or
jl
xchg
aam
mov
insb
cmp
cmpsb
pushf
lock
mov
add
cmp
cs
ljmp
mov
sbb
and
cmpsl
cmp
pop
add
push
shrl
mov
mov
mov
test
mov
imul
in
jl
dec
popa
js
sub
xchg
aam
add
enter
xchg
cmp
rcll
imull
push
fdivr
lret
repz
lea
inc
inc
add
jns
add
xor
mov
sbb
filds
pop
addr16
jnp
pop
pushl
iret
in
aaa
bound
movsb
loope
int
pop
cmpsl
adc
ffree
jae
push
fistl
add
test
fiadds
outsb
rcrb
incb
push
pop
mov
incl
movsb
or
lcall
enter
adc
add
fcomip
jo
and
mov
insl
add
cmc
cmpsl
xchg
xchg
dec
pop
push
pop
aam
add
or
fbld
jmp
roll
add
cmc
clc
or
arpl
xor
divl
xor
lea
push
stos
cmp
add
fcmovnb
pop
pop
xchg
add
mov
int3
aad
cmc
add
jbe
stc
hlt
pop
icebp
xlat
idivb
jecxz
inc
jne
and
mov
imul
mov
or
adc
xlat
add
pop
and
xchg
push
hlt
push
rorl
loope
stos
fcmovu
or
cmp
mov
mov
addl
fs
push
stos
enter
pushl
mov
jno
shll
adc
dec
pushf
inc
mov
dec
enter
cwtl
ljmp
mov
sbb
fldl
bswap
sarl
push
adc
addb
outsb
std
out
neg
loop
push
cmp
jb
mov
daa
add
lret
or
pop
cmp
leave
enter
mov
mov
loop
call
popa
adc
mov
add
or
hlt
pop
cli
pop
inc
inc
add
jecxz
dec
adc
and
ret
sbb
or
adc
pushf
popa
lret
sbb
push
std
push
add
or
movsb
push
add
out
lret
rolb
jb
mov
jo
sub
sub
mov
and
add
pop
xchg
aad
testl
das
pop
add
mov
add
lret
and
add
in
xor
xchg
jb
je
mov
icebp
cmpl
xchg
out
mov
fadd
push
or
mov
xchg
add
stos
push
popf
dec
dec
shll
cld
adc
movl
push
inc
hlt
jns
add
test
faddp
imul
dec
sbb
outsb
orl
add
push
xlat
add
int3
adc
hlt
xor
in
inc
popf
addl
test
mov
out
and
inc
fldl
icebp
jmp
fidivl
mov
cmp
jnp
insb
push
icebp
mov
jbe
mov
dec
cli
inc
hlt
aam
xor
inc
add
pop
outsb
pushf
adc
add
pusha
add
mov
or
and
cld
sbb
pusha
dec
jecxz
cmp
mov
dec
mov
xor
adc
ljmp
je
outsb
inc
dec
insl
hlt
jo
adcb
out
into
cld
movb
faddl
dec
xor
shll
lret
jecxz
inc
or
adcb
or
mov
fmull
mov
negb
pop
stos
notb
loope
add
clc
jmp
jo
es
mov
setno
mov
sti
add
and
enter
je
bound
xor
mov
jg
lods
jns
hlt
sbb
or
test
add
xchg
mov
push
mov
xlat
add
lret
test
mov
mov
or
inc
adc
add
mov
lock
lods
mov
pushf
fcompl
mov
scas
popf
adcl
add
adc
loopne
nop
add
jp
mov
mov
xchg
jle
fs
add
cmp
cld
mov
jmp
sbb
sbb
sbb
clc
bound
andb
jmp
repnz
ret
cmp
push
push
fwait
xor
cwtl
jo
mov
push
xor
out
lods
xchg
cmp
stos
add
jg
mov
in
dec
out
cli
daa
loopne
add
xor
hlt
push
aaa
jl
pop
sbb
add
mov
xchg
lahf
mov
insl
loopne
add
hlt
fldl
add
mov
xchg
call
push
orb
add
test
scas
adc
loope
dec
xchg
hlt
das
or
inc
and
orl
clc
cmp
or
dec
ss
jg
in
lret
div
push
bound
pop
xchg
add
or
add
stos
sub
cmc
clc
lahf
out
push
xchg
push
in
push
ret
mov
roll
adc
in
inc
popa
dec
pop
add
fcoml
hlt
out
nop
jo
inc
rolb
ja
movsb
push
es
add
loope
call
lock
add
jmp
movsb
lcall
adc
xor
out
mov
or
cmp
push
movsb
add
pushf
xor
cwtl
jbe
jb
stos
dec
scas
or
inc
or
add
fistps
jge
sahf
hlt
mov
mov
mov
and
adc
push
sub
shrb
add
jp
inc
xor
scas
pop
mov
aad
mov
xchg
int3
mov
das
add
jno
hlt
dec
push
stos
mov
loope
xor
add
cmp
jae
pop
push
dec
add
arpl
call
dec
ja
mov
xchg
push
dec
nop
int
aam
add
jnp
ficoms
cmp
jmp
pushf
std
fwait
adc
mov
and
xchg
int
add
cmpb
decl
sub
or
and
lea
movsl
cli
add
andl
add
jmp
mov
adc
xor
les
mov
adc
popa
dec
int
lock
das
mov
pop
dec
sub
add
mov
addr16
dec
fwait
les
imul
movsb
cmp
add
cwtl
jno
cld
je
lock
or
adc
ret
stos
mov
sbb
hlt
jp
xchg
stos
hlt
inc
idiv
arpl
imul
pop
roll
jbe
movsb
xor
mov
in
jge
mov
xchg
dec
adc
jle
jp
adc
mov
adc
fs
adc
cmp
popa
int3
je
comiss
xor
cmpsl
ljmp
daa
inc
mov
movsl
cmp
add
int
pop
cmp
in
adc
jecxz
popf
cld
mull
ss
jg
xchg
mov
push
fcomi
cld
jecxz
sub
xchg
sub
dec
add
rolb
mov
bound
dec
sbb
xlat
movsl
xorl
jae
in
addb
out
mov
or
test
sbb
pop
pcmpeqb
pop
enter
and
into
xchg
outsb
test
jne
aas
push
lods
sbb
add
jno
and
mov
lea
cmp
imul
pop
push
rolb
adc
in
dec
dec
xor
jp
cmpsb
nop
roll
sbb
xchg
outsb
int3
loopne
sub
xchg
xor
sahf
bound
or
xor
add
ret
insl
inc
push
sub
dec
sar
cmp
or
ficomps
sub
inc
pop
fistl
jb
add
cs
outsb
mov
addl
jmp
lods
add
mov
popa
xor
roll
xor
lahf
sbb
xor
lret
aad
sub
mov
popa
sti
xor
inc
ret
jl
ret
fmuls
fimuls
jne
addb
mov
pushl
inc
cmpsl
and
pop
and
outsb
add
jbe
inc
add
fucom
push
sbb
add
repnz
push
in
xor
daa
mov
sbbb
lret
jnp
aam
sub
rcrl
popa
jg
psllq
push
cwtl
cld
leave
cmp
ja
popa
fsubrl
add
sbb
add
jne
jle
pop
pushf
add
pop
add
and
push
lea
jb
pop
or
xchg
mov
mov
cmp
and
cli
jno
std
jmp
fisubs
adcb
cmp
test
ja
cli
xlat
sub
shlb
xchg
lcall
int3
leave
sbb
mov
sarl
sar
inc
lret
lock
fdivrs
loopne
test
sbb
mov
push
adc
mov
popa
add
rolb
and
movsb
outsl
mov
das
mov
sbb
add
push
test
enter
imull
cmp
and
add
jg
xchg
adc
testl
cld
dec
pusha
cmp
adc
ret
orps
pushf
movsb
push
scas
and
sub
mov
pop
movsl
ljmp
jne
mov
js
dec
ja
cmp
in
nop
add
adc
inc
xchg
imul
rorb
test
xchg
add
out
pop
add
dec
hlt
dec
xchg
cmp
ja
add
mov
std
addl
xchg
mov
cli
push
mov
fiadds
cmc
ret
sub
and
push
aam
pop
and
imul
xor
cmp
add
pushf
cwtl
lds
push
add
movsb
nop
pop
or
sti
and
stos
add
lds
jecxz
add
lret
adc
add
xorb
adc
aam
adc
add
cmp
clc
in
in
insl
mov
sbb
sub
adc
ret
in
add
jp
add
dec
icebp
iret
add
lds
repz
inc
in
pop
out
adc
dec
mov
xor
sti
push
out
sub
jge
aaa
fs
push
adc
je
fiadds
sbb
andl
lods
and
daa
aam
aaa
pusha
in
rolb
jmp
aas
in
xor
sahf
pop
jb
hlt
push
xchg
mov
lcall
xchg
add
and
and
insl
jl
lock
xor
loop
xor
push
cld
mov
test
inc
icebp
or
add
ret
push
or
add
xor
mov
sbb
jle
dec
cmp
sub
mov
inc
add
pop
mov
sbb
push
out
jle
jge
lret
or
les
addb
mov
add
scas
out
xor
sahf
adcl
movsb
jno
sbb
fs
subl
mov
int
push
jle
data16
inc
rclb
push
adc
iret
cmpsl
or
lcall
testb
incl
sub
ja
loopne
aas
hlt
adc
ret
loope
ss
cld
test
stos
jns
xor
or
leave
add
xchg
test
cmp
stos
jp
push
add
mov
jno
jo
pop
mov
loope
cltd
andb
js
add
ja
sahf
cld
jb
pop
or
js
movl
mov
cmpsl
mov
add
rcr
fwait
cwtl
adc
test
addr16
add
add
mov
frndint
retw
lods
sub
in
nop
xchg
int
mov
mov
mov
sub
mov
lock
mov
xor
push
ret
std
add
jae
mov
and
aam
pop
adc
insb
rcll
mov
enter
add
jnp
or
and
in
repz
insl
pop
cmc
ds
xchg
mov
xor
or
lcall
mov
hlt
sub
add
fwait
mov
mov
xchg
cmpsb
pop
fistpl
ljmp
shrl
clc
mov
add
xor
sbb
jnp
adc
push
test
fucomp
out
dec
mov
clc
push
lea
int3
sbb
sub
adc
push
in
fnsave
jne
roll
jle
hlt
mov
test
gs
or
outsl
and
int3
add
or
movl
push
mull
sbb
jb
lods
sar
xchg
int
jmp
add
gs
sub
loopne
stos
add
popf
or
and
test
add
sbb
or
test
pop
inc
loopne
inc
add
sbb
xlat
hlt
xchg
sahf
loope
mov
shlb
sub
jne
ret
cmp
call
fadds
mov
jne
inc
or
add
movsl
cmp
push
xchg
popf
mov
adc
fisubs
dec
out
add
inc
rol
push
test
mov
fnstsw
push
and
jbe
pop
daa
add
lcall
jecxz
push
cmp
pop
fmull
jnp
xor
sti
add
lods
lds
add
int3
mov
ljmp
push
sub
out
mov
and
pop
adc
jmp
mov
andb
cmc
pop
les
inc
jp
in
cmp
popa
pusha
imul
outsb
fstpt
cmpsb
pop
shl
add
inc
xor
repz
lcall
dec
mov
inc
push
add
and
xchg
mov
add
mov
aaa
rcll
scas
add
bnd
aas
sbb
call
leave
hlt
add
pop
lcall
mov
add
repz
add
xchg
or
mov
sbb
pop
aam
xchg
stos
add
cli
mov
mov
mov
push
cmp
fs
mov
inc
push
iret
jp
mov
inc
pop
jnp
lods
add
cltd
les
or
stos
lock
negl
add
pop
lret
mov
aam
in
bound
and
add
int
insl
out
sbb
pushf
xor
sub
add
mov
push
dec
add
mov
sbbb
add
add
and
filds
lcall
inc
lret
push
add
mov
maskmovq
add
jl
add
add
add
xchg
mov
and
cmovne
mov
imul
je
sbb
or
add
stos
push
repz
adc
sbbb
push
mov
jecxz
xorb
arpl
call
mov
mov
fnsave
add
data16
jns
adc
cs
add
inc
sub
pop
dec
addb
mov
notl
fisubrs
xor
add
push
jecxz
rcrl
xchg
xchg
or
lret
xor
nop
scas
out
add
adc
aad
add
xchg
jno
cmp
lret
push
aas
jecxz
cli
mov
mov
ss
mov
mov
mov
xbegin
dec
addl
imul
xor
sub
icebp
cmp
lock
ljmp
push
lret
enter
add
fwait
jns
mov
pop
add
or
shll
xchg
lods
push
int
add
nop
aad
and
and
mov
inc
fdivs
sbb
mov
pop
add
sub
fdivrl
int
repnz
adc
fbld
nop
shrb
movsl
push
daa
mov
add
sub
cmp
jl
jns
out
into
pop
insb
stos
loope
jge
add
fldt
in
xchg
outsl
and
es
in
sbb
add
lods
dec
mov
add
out
sub
loopne
addl
cmc
adc
in
hlt
jle
call
cmp
imul
push
jecxz
add
imul
add
lahf
dec
fnstcw
popf
mov
ret
mov
jmp
xor
mov
mov
push
addb
xor
in
test
sub
push
push
jnp
mov
pushf
gs
and
pop
sti
cltd
xor
xchg
fwait
into
lret
rep
imul
add
xchg
add
out
and
ret
mov
jge
test
pusha
std
cmpsb
mov
sub
push
stc
cwtl
popa
dec
notb
adcb
sbb
or
mov
sub
sbb
jnp
std
xchg
ss
popa
mov
push
mov
xchg
nop
xlat
mov
add
daa
mov
hlt
and
push
sahf
addb
adc
pusha
outsl
js
add
jmp
test
xchg
pushl
dec
daa
add
orl
hlt
bound
cmpsb
mov
mov
mov
mov
push
adc
lahf
cld
stos
pop
add
jmp
out
sbb
push
aad
xor
fistps
mov
add
sahf
or
stc
add
test
push
js
adc
pop
add
mov
cmc
loopne
jns
sbb
scas
dec
sub
in
int
fs
outsb
or
jp
insb
mov
daa
sub
add
jg
add
lods
xchg
mov
clc
pop
aaa
test
in
add
ds
sbbl
mov
lods
mov
in
cmp
and
movsb
ss
hlt
fiadds
xchg
jb
fs
movsl
decb
push
jg
push
popa
push
test
inc
add
addr16
test
mov
jno
push
daa
or
nop
push
fsub
cmp
jmp
std
and
test
xchg
test
movsl
pop
mov
add
cmpsb
enter
xchg
hlt
ja
push
jmp
sbb
fadds
in
and
addr16
push
and
mov
jg
scas
insl
push
mov
or
adc
bound
imul
enter
call
inc
mov
add
popa
mov
in
inc
cmpl
inc
xchg
jne
mov
add
and
push
lods
push
or
add
fst
and
lcall
es
adc
data16
sub
lods
fisubs
in
sub
call
sbb
insl
push
cmp
sub
inc
or
scas
mov
jb
xchg
mov
testb
add
sbb
xchg
je
pop
sub
ret
and
inc
insb
cmpsl
cli
shrb
jae
add
out
test
jl
add
aam
inc
or
add
jns
sub
scas
dec
inc
mov
inc
in
jnp
xchg
jg
add
loop
jmp
mov
add
nop
lahf
arpl
lret
mov
out
cmp
call
xchg
repz
std
add
popa
or
aas
int3
inc
fwait
das
push
inc
mov
jmp
mov
cld
lods
cltd
das
jle
cmp
dec
mov
out
mov
push
sub
dec
decb
shrb
and
jl
push
inc
outsb
or
repz
pop
or
add
orb
add
jbe
and
popa
adc
add
adcb
add
pushf
mov
sub
jnp
jmp
pop
and
mov
hlt
pop
mov
mov
cli
mov
hlt
repnz
dec
mov
loop
add
aam
sub
add
loope
inc
inc
mov
gs
add
sbb
add
rcl
les
enter
scas
into
repz
popa
and
iret
bound
xor
incl
imul
or
dec
dec
int3
mulb
xchg
ret
imul
jp
popa
mov
push
lods
faddl
dec
lock
aam
loopne
add
mov
mov
shrl
add
decl
add
insb
push
test
or
jg
js
movsl
and
push
incb
cmp
lret
loop
fisubl
pusha
shrl
repnz
push
lret
or
movb
mov
loop
pop
adc
push
add
decl
ljmp
xchg
cld
mov
jno
add
shr
sub
push
imul
sarl
xchg
mov
xchg
fbld
add
imul
popf
mov
pusha
scas
popl
ja
mov
add
inc
inc
aad
sub
pop
or
pop
add
xchg
addb
push
ja
bound
insl
push
aaa
repnz
adc
lds
mov
in
fs
add
push
nop
sub
rcrb
add
data16
rorl
jecxz
inc
xor
cmp
pop
inc
enter
leave
jg
bound
push
inc
sub
js
pop
into
lret
add
je
lods
mov
inc
enter
jl
jecxz
push
incl
mov
push
inc
lahf
add
and
arpl
jle
jl
cmp
scas
pop
jne
and
mov
mov
iret
inc
dec
dec
dec
add
sbb
hlt
mov
jae
pop
sbb
adc
adc
addr16
subl
mov
inc
ljmp
xchg
push
xor
inc
vpsubusw
lret
add
push
or
or
cmp
mov
shrl
stos
pop
sub
pop
sbb
repz
mov
scas
push
xor
add
lock
in
add
mov
add
and
in
sub
xorl
es
or
imul
add
int
push
add
not
and
or
jg
add
xor
mov
add
add
fadd
add
testl
out
aam
push
pop
dec
sbb
cld
add
fcompl
sti
shll
jns
mov
mov
out
add
imul
outsb
xor
add
loop
sbb
bound
sbbb
dec
cmp
xchg
cwtl
or
pop
add
or
jno
mov
push
scas
add
lret
insb
cs
sahf
adc
popf
enter
jmp
hlt
cmp
or
add
push
mov
mov
sub
adc
mov
in
push
cmpsl
add
imul
out
cmp
stc
fsubrl
inc
in
xchg
jge
ja
mov
sub
test
inc
add
xchg
mov
aad
xchg
out
dec
dec
add
or
pop
add
push
in
sbb
push
out
mov
xlat
mov
lock
inc
je
xchg
add
fsubs
rcl
jns
bound
mov
or
lock
std
sub
cmpsl
push
and
push
pop
add
and
jg
add
dec
jo
mov
cmp
jne
xor
jno
mov
xor
cmp
out
xchg
mov
mov
add
ja
mov
add
jmp
jne
inc
mov
push
in
add
xor
pop
cs
add
fs
push
add
addr16
push
out
icebp
and
dec
push
push
xchg
fistpl
mov
fiadds
cli
inc
ss
mov
fmull
loopne
adc
aas
xor
push
jno
inc
pop
xchg
xor
jae
stc
add
addr16
cld
add
add
sub
cmp
notb
roll
add
mov
inc
out
mov
mov
sub
mov
mov
xchg
cmp
push
add
sbb
out
mov
aad
or
and
incl
leave
pop
xchg
sahf
sbb
inc
add
sti
insl
bound
data16
and
stos
mov
aas
add
push
xchg
daa
pushf
sub
jns
call
ss
faddl
popl
scas
ja
imul
mov
xor
add
xchg
xor
aad
pop
add
ret
sbb
and
outsb
fildl
xchg
lea
push
clc
incb
cmp
mov
test
mov
rorl
das
test
sbb
inc
pop
test
imul
xchg
jo
das
dec
aaa
and
fcomps
test
xor
mov
leave
adc
cmpb
mov
mov
emms
stos
leave
lcall
mov
or
ss
popa
sbb
inc
cwtl
inc
mov
in
pop
and
jnp
mov
ljmp
inc
out
fstps
sub
xor
xchg
sarb
test
cmpsb
push
push
xor
mov
mov
or
jo
push
mov
xchg
add
mov
leave
dec
clc
and
aas
xchg
sub
das
mov
decb
sbb
jbe
mov
into
lahf
in
xchg
push
or
adc
ds
arpl
sbb
cmpsb
sub
xchg
subb
mov
jmp
push
jae
in
out
dec
repz
rcrl
fdivs
cmp
xchg
jb
inc
sti
mov
jo
add
arpl
mov
mov
cmp
lds
outsb
add
test
fmul
hlt
jae
fsub
adc
ljmp
test
fistpl
stc
cmp
pop
mov
mov
iret
fwait
inc
adcb
cld
aam
mov
mov
sbb
fildll
mov
int
inc
lcall
leave
testl
jno
xchg
aaa
in
movsb
mov
sbb
nop
xor
xor
push
xchg
xchg
jno
aaa
sbb
jae
push
xor
lret
dec
sub
mov
xor
loope
insl
jl
pushf
add
add
pop
mov
add
mov
cmp
sti
jae
xchg
shrb
adcl
add
pop
test
add
int
xchg
loop
push
mov
pop
dec
ljmp
jne,pn
add
sub
int
pop
pop
lods
pop
jno
nop
add
mov
sub
mov
mov
fadd
hlt
imul
sbb
nop
add
cs
adc
std
cmp
cmpsl
mov
sti
gs
xlat
rcll
add
push
xchg
scas
out
pop
add
aas
icebp
pop
bound
sbb
inc
push
stc
xor
mov
cld
in
sbb
mov
sub
add
inc
loopne
rclb
stos
test
mov
add
inc
dec
jecxz
jo
pop
add
test
and
add
jmp
add
xchg
mov
fldl
inc
in
cltd
test
insl
cmp
lock
adc
push
arpl
fdivrl
mov
or
pop
nop
add
lods
adc
add
mov
or
outsl
or
pop
cmp
in
adc
test
or
xchg
cld
pop
jns
scas
nop
push
roll
stos
xchg
fimull
mov
popf
cmp
mov
add
pop
movsl
mov
ja
mov
xor
pop
out
cwtl
adc
mov
subl
repnz
add
test
mov
clc
test
incl
mov
out
in
or
outsb
fisubrs
out
lea
xor
jne
in
ret
rclb
shl
scas
pop
sahf
and
cmp
dec
sbb
test
add
add
sbb
mov
pop
pop
adc
sbb
hlt
jb
sbb
sub
and
and
and
scas
cli
sahf
add
sbb
addl
cmp
shlb
sti
xchg
nop
pop
fiadds
mov
xchg
jnp
mov
jmp
jl
jns
xchg
dec
xchg
cmp
jb
daa
dec
cmpl
mov
aaa
mov
pop
inc
testb
add
xchg
cmc
testl
test
xor
add
xchg
in
sarb
dec
push
pop
iret
push
mov
add
dec
stos
out
adc
adc
sti
cmp
pop
jmp
lret
and
mov
dec
test
add
gs
pushf
andl
pop
fcomip
clc
sbb
jnp
mov
aam
mov
inc
lods
dec
insb
fsts
lret
jb
ret
add
or
push
mov
paddb
cmpsl
ficomps
sbb
iret
dec
add
incb
jge
insl
rolb
movl
loop
push
js
nop
sub
sbbl
jmp
xor
js
add
test
fiaddl
xchg
cld
cmp
daa
xor
sbb
add
xchg
lock
inc
add
push
mov
add
outsb
cltd
mov
add
dec
xchg
cmp
call
xor
or
je
mov
arpl
push
sbb
add
xor
inc
in
or
pop
push
pop
and
and
ret
data16
jg
xchg
xadd
inc
jb
dec
push
rolb
loope
rclb
cwtl
enter
cmc
call
mov
add
adc
dec
jno
data16
stc
cmp
jmp
lock
ficoml
shrl
int3
jle
xor
aaa
fs
loopew,pt
add
insl
push
jns
xchg
inc
add
cmpsb
js
add
pop
mov
sub
mov
test
add
mov
add
fbstp
xor
nop
fdivrs
xchg
popa
orl
sub
and
add
adc
inc
xchg
shl
pop
aaa
add
mov
jl
out
add
nop
test
mov
sub
and
out
lahf
lcall
es
xchg
jno
sub
jg
mov
inc
push
cld
mov
lret
into
sub
dec
mov
adc
inc
mov
dec
sub
hlt
lods
fwait
lea
inc
ss
adc
cli
pusha
ret
push
pop
xchg
sub
js
dec
ljmp
xchg
add
pop
roll
push
insl
fildl
stc
aas
hlt
in
shll
jns
add
pop
xchg
dec
add
dec
pop
and
dec
fiaddl
inc
push
jno
add
and
aaa
pop
adc
pop
mov
pop
out
inc
pop
shll
lret
iretw
mov
inc
or
dec
sbb
add
add
pop
dec
add
stc
ljmp
sub
lods
fsubrl
mov
cwtl
shlb
mov
les
mov
add
inc
mov
inc
mov
and
sbb
out
mov
je
loope
push
pop
insb
sbb
add
mov
add
mov
push
jl
orl
xchg
add
imul
popa
push
loope
in
cmc
into
sti
sahf
lods
clc
xchg
cmp
push
mov
sbbl
adc
sbb
inc
aam
cld
stos
add
jmp
push
cwtl
add
bound
mov
add
cmp
adc
add
sahf
xchg
enter
hlt
or
or
mov
loope
mov
add
test
inc
xchg
out
add
pushf
loopne
cmp
mov
or
or
addl
rol
outsl
dec
add
xor
aaa
jg
jae
call
jb
mov
sbb
imul
xchg
ret
push
jns
jo
hlt
push
leave
sub
or
sbb
call
sub
das
ds
roll
adc
add
inc
sbb
add
jmp
popf
add
inc
test
or
fnstsw
push
add
mov
scas
int3
out
xchg
and
int
out
push
cwtl
loope
dec
xlat
rolb
stos
in
sbb
mov
loope
inc
jno
iret
sbb
sbb
andl
jp
aaa
xor
pop
push
xchg
std
shlb
add
pusha
dec
add
sbbb
sub
in
cmc
xor
sti
test
add
sti
cwtl
shlb
mov
addb
lods
pushf
xchg
jo
xchg
sbb
mov
data16
add
sbb
inc
lret
pushf
jmp
add
outsb
add
cmpsl
es
mov
push
push
iret
xor
popf
add
fmull
notb
sahf
sbb
ljmp
imul
adc
hlt
xor
in
and
rolw
cmpsl
xchg
or
dec
add
push
les
mov
lods
jg
addr16
add
push
mov
xchg
lahf
dec
shr
test
xlat
sub
inc
repnz
mov
push
fmull
shrb
call
pop
pop
movsl
lods
mov
push
sahf
xchg
jp
fldl
nop
cmovg
shl
mov
add
mulb
sub
and
fadds
out
or
jecxz
test
cli
ja
clc
pushl
vmaxpd
shll
jmp
xchg
mov
in
push
cmp
add
sub
mov
bound
sub
int
xor
rorb
cs
add
lock
andl
test
rcrl
jno
lcall
adc
xchg
addr16
lock
push
push
hlt
sbb
adc
into
fcomi
fnstcw
outsb
and
pop
out
add
or
jae
adc
out
add
orb
lret
pushf
jne
hlt
xchg
inc
scas
xchg
roll
cwtl
hlt
lock
leave
push
xchg
incl
adc
push
fbstp
adc
jle
cmp
sti
pusha
add
sbb
cmc
out
aad
lret
subb
mov
ja
cmpsb
xchg
shrl
add
mov
mov
ret
nop
mov
inc
xchg
out
leave
dec
dec
pop
cwtl
mov
mov
aam
ljmp
fisubrs
cmp
stos
nop
hlt
aas
das
xor
add
ja
mov
add
testl
jecxz
ss
lret
cmp
sub
sbb
add
cmp
jns
test
icebp
in
test
dec
jnp
out
add
jg
cmp
icebp
jecxz
mov
add
jne
mov
mov
mov
stc
cs
jb
add
dec
xchg
push
mov
std
jnp
fdivr
mov
add
scas
inc
push
in
jle
xchg
push
or
ss
push
push
add
mov
call
fsubs
sub
aam
faddl
clc
add
xlat
pop
loope
mov
push
adc
inc
inc
int
dec
into
or
sub
push
test
inc
add
es
movsb
add
and
and
jge
imul
jne
push
pop
into
mov
addr16
hlt
mov
les
inc
mov
idivb
sbb
test
adc
pop
aam
neg
rcr
aaa
in
jae
adc
mov
add
push
lods
add
and
in
dec
xchg
pop
paddusw
dec
mov
lock
daa
mov
push
stos
add
mov
adc
add
jl
test
jecxz
clc
jge
je
xchg
add
pusha
and
push
or
add
dec
imul
cltd
sti
loopne
mov
nop
pop
jbe
and
push
jns
lret
inc
test
stos
adc
cli
cltd
xor
icebp
xchg
mov
daa
inc
jb
jae
lret
sbb
js
xchg
sbb
cmp
and
mov
leave
pushf
pop
hlt
sbb
bound
jmp
add
push
gs
pop
or
and
adc
insw
pop
mov
ljmp
xchg
pop
je
in
push
iret
sub
pushl
push
adc
lock
ret
sub
jo
and
add
xchg
sbb
lock
add
loopne
cli
adc
test
imul
shrb
dec
testl
pusha
xchg
cmpsl
ret
fcmovnu
out
jae
out
repnz
xor
loopne
addr16
mov
add
adc
jns
shrb
fmulp
fsubl
pushf
pop
mov
add
test
jmp
pop
mov
mov
and
xchg
jp
enter
out
call
lock
cmp
loopne
int3
add
dec
xchg
enter
jns
mov
dec
add
or
insl
jo
cmp
sub
sub
mov
das
dec
int
cmp
sbb
sbb
iret
pushl
adc
pop
adc
out
sti
bound
push
in
mov
clc
js
jle
mov
push
sbbl
imul
rcll
mov
daa
imul
loope
sbb
icebp
cmp
sbb
cs
test
and
fistpl
push
insl
cwtl
add
lcall
lahf
repnz
hlt
cld
push
xchg
lock
jecxz
mov
add
sbb
jp
add
add
jae
jmp
and
cmpsl
movsb
cltd
imul
popa
sbb
pop
mov
jne
jmp
add
cwtl
outsb
pop
xor
mov
mov
repz
dec
rcrw
jle
dec
std
xchg
and
add
loopne
ljmp
push
es
jp
dec
pushf
add
push
xchg
enter
add
popl
cs
fs
add
mov
dec
dec
add
push
insl
add
int3
les
ja
int
mov
enter
imulb
aam
inc
popl
pop
xchg
lods
push
push
mov
dec
mov
into
repz
jno
mov
sahf
imul
hlt
mov
mov
sub
adc
add
andb
mov
fldl
and
sbbl
cli
inc
incl
fmul
outsb
or
ret
add
sub
mov
mov
daa
or
jmp
inc
clc
sub
ds
sbb
imul
lods
add
iret
je
xor
add
mov
jp
add
rcrb
cmp
cld
mov
shlb
xchg
and
into
jnp
in
mov
roll
hlt
cwtl
xchg
loopne
add
ret
ja
add
stos
xor
lods
es
dec
in
xorl
ljmp
and
inc
sub
lds
xorl
add
mov
dec
jne
mov
in
sub
popf
add
push
jg
cltd
sbb
add
mov
out
popa
cmp
dec
add
dec
jno
xchg
repnz
stc
add
inc
in
push
rolb
mov
test
push
add
add
mov
icebp
jle
std
lret
sub
fldt
mov
rcl
fs
clc
pop
mov
lock
jecxz
add
xor
add
shlb
push
mov
pop
mov
lea
cmpsl
enter
je
sbb
mov
adc
push
mov
dec
pop
inc
add
xchg
lock
lods
ficompl
hlt
mov
pop
and
inc
ret
in
xor
cwtl
cmp
out
addr16
add
je
enter
subb
imul
stos
xchg
xor
out
push
cmp
mov
mov
xor
stos
dec
xor
or
dec
push
mov
and
xchg
add
inc
sti
pusha
or
movsb
hlt
sbb
cld
rcrb
dec
cmp
inc
push
lret
dec
hlt
mov
nop
mov
add
or
add
popa
or
js
pop
cmc
mov
test
notb
mov
push
mov
in
push
xchg
dec
sub
out
mov
jo
xor
mov
loopne
rcrl
cmp
pop
roll
jo
adc
leave
addb
mov
loopne
clc
and
jmp
mov
out
into
sbb
add
add
out
mov
mov
jb
rcrl
je
sbb
rolb
loope
add
stos
sub
push
or
les
and
or
fimull
jb
inc
test
mov
cmp
push
and
int
cltd
xor
push
insl
pop
mov
les
in
add
fadd
test
hlt
aad
pop
cmp
loop
imul
adc
mov
addl
icebp
pop
lock
pop
or
push
push
sub
insl
push
mov
mov
lods
mov
push
add
sbb
cld
out
xchg
rcrl
in
pop
leave
hlt
call
and
rol
cltd
adcl
shrl
cmp
xchg
or
mov
fs
scas
subb
add
sub
add
xor
aas
out
jo
add
add
js
xchg
mov
sti
adc
mov
mov
sub
ret
add
sub
pop
rolb
add
testb
orl
xor
fs
mov
adc
enter
mov
ret
add
dec
ljmp
cltd
fbstp
cmpsb
sbb
push
lock
push
dec
jbe
inc
add
idivb
mov
pop
add
or
loop
data16
cmp
or
cmp
mov
add
dec
mov
lds
cld
test
loop
loope
je
lcall
mov
ds
das
popa
std
push
movb
add
mov
shrb
push
mov
out
mov
jae
push
mov
imul
int
lret
ret
mov
xchg
mov
lcall
int3
mov
mov
jns
pop
dec
movl
add
mov
add
and
jne
hlt
pop
clc
int3
in
add
push
jl
add
movsl
mov
cmp
adc
repnz
adc
shrb
pop
add
push
pop
add
mov
ret
nop
push
mov
lret
mov
and
inc
xlat
inc
test
icebp
add
add
jo
cmc
push
mov
int3
xchg
cltd
fmull
sbb
jmp
mov
decl
mov
ret
mov
scas
inc
aam
mov
jo
jno
xchg
add
sub
xchg
push
inc
les
add
xchg
mov
jge
pop
push
pushf
shufps
xor
aaa
sbb
es
testl
or
das
jle
stc
add
iret
pushf
cltd
mov
mov
push
call
inc
xorl
add
pop
test
orl
nop
sub
or
les
out
sbb
lds
andl
ds
and
iret
push
mov
pop
hlt
jmp
sbb
ret
and
push
add
adc
ja
mov
enter
jmp
cmpsb
outsb
mov
push
mov
sbb
ds
add
das
jns
pop
std
mov
gs
inc
sbb
aam
loope
lahf
add
test
push
push
pop
add
sti
cmp
stos
test
test
jbe
pop
add
adc
hlt
ss
out
inc
loopne
sub
add
bound
xchg
add
dec
stos
xchg
sbbb
add
js
lds
mov
pop
dec
aad
mov
repz
xchg
cmp
ret
cld
jp
rcll
push
push
sbb
movsb
add
movsl
imul
or
fdivr
xchg
popf
addb
adc
add
add
xchg
shlb
fstpl
mov
aam
adc
add
fsubl
add
divb
add
andb
add
push
repz
lret
jge
lcall
and
sti
xorb
orl
push
hlt
loope
mov
fst
mov
xchg
das
mov
mov
loope
push
fildl
add
aaa
popa
mov
repz
mov
popa
xchg
outsb
hlt
xlat
and
adcl
incb
fdivrl
mov
dec
xchg
xor
adc
movsl
pmuludq
cmp
push
mov
rolb
test
stc
mov
sub
add
push
push
mov
pop
inc
sub
push
adc
inc
shrl
int3
push
outsl
add
sub
sbb
scas
pop
int
test
and
shll
cld
add
pop
adc
xchg
sub
push
and
lret
xor
push
in
aad
xorb
fisubrl
cmpsl
ficoms
orb
add
iret
leave
aaa
add
push
sub
push
cmpsl
ret
inc
cs
add
ds
adc
dec
xchg
push
push
icebp
int3
cmpsl
mov
dec
pop
push
push
or
hlt
ret
std
sub
xor
jae
mov
hlt
push
fwait
iret
shlb
mov
mov
push
xchg
aam
mov
xchg
add
mov
adc
jae
or
cmpsb
inc
sub
sub
incb
jle
ret
test
insl
outsb
cltd
ja
add
mov
sub
sub
loope
sti
ret
add
out
mov
lea
divl
add
scas
sub
add
sub
xchg
mov
popa
jmp
arpl
repnz
inc
addr16
int
add
mov
dec
mov
fiadds
sahf
mov
xchg
loope
mov
sbb
or
add
pop
adc
xchg
sub
xor
cli
stc
cs
push
sub
add
jge
test
stos
push
aas
push
mov
or
mov
cli
movsb
sub
rolb
push
cmc
and
sbb
push
add
int3
fcoms
push
clc
inc
insb
mov
inc
shrl
cli
fs
out
pop
test
pusha
mov
mov
fpatan
aas
pop
add
leave
and
or
imul
pop
add
sahf
cmpsb
popf
stos
neg
adcb
push
bound
addl
and
and
sbb
xchg
adc
in
ljmp
jg
mov
mov
aad
cli
inc
inc
xchg
je
add
aas
jmp
and
add
pop
jo
and
and
sbb
add
arpl
and
mov
xor
mov
inc
and
push
scas
and
cmp
sbb
loopne
rcrb
sbb
mov
data16
movsl
push
and
cmp
xchg
dec
add
add
rorl
loopne
sahf
xor
mov
dec
mov
xor
xor
add
mov
mov
push
cmp
xor
nop
push
add
jl
nop
stos
inc
add
xchg
mov
daa
mov
jae
inc
add
cmp
aam
std
cmp
add
xlat
scas
les
mov
xchg
jecxz
adc
xorb
sbbb
add
dec
xor
sbb
xchg
ja
dec
stc
pop
cld
dec
cmp
sub
sahf
cmp
cmp
adc
pusha
mov
cwtl
cld
repnz
add
roll
sub
xchg
icebp
incl
cltd
add
mov
mov
xchg
sub
xchg
adc
add
mov
add
sub
iret
cmc
and
imul
gs
iret
sub
in
lret
push
xchg
rcll
add
adc
xor
rolb
pop
and
add
xchg
cli
sub
imul
pop
add
hlt
jl
dec
lods
lock
cmp
rorl
lods
out
jno
jmp
outsb
push
je
add
add
inc
ret
jne
cld
inc
repnz
jl
jle
mov
cmpsb
fiadds
dec
movsl
pop
mov
aam
aaa
pop
out
roll
mov
sbb
jno
add
aaa
popf
add
adc
mov
out
std
cs
adc
dec
add
lret
add
add
sti
xchg
popa
mov
in
and
pop
outsb
xchg
repnz
test
push
xchg
mov
sarb
hlt
out
cld
dec
inc
jecxz
pushf
mov
iret
rcrl
repz
mov
mov
es
bound
add
push
imul
cmc
mov
sbb
inc
xor
stos
leave
inc
xchg
add
adc
mov
hlt
dec
cltd
fcompl
push
inc
jecxz
test
test
lods
iret
pop
add
loopne
lods
cmp
rol
sub
popl
sub
sti
jno
add
test
cmp
add
iret
rcrb
dec
out
mov
lock
dec
enter
push
inc
rolb
je
jg
cs
lea
jne
xchg
add
movsb
pop
and
loope
pop
out
repz
sub
sti
sbb
test
orb
les
fs
xor
xor
xchg
or
test
add
fwait
sbb
insl
or
es
jo
rcrl
add
xor
add
mov
dec
xlat
fadd
mov
repnz
add
add
push
xchg
filds
loopne
mov
add
je
fisubs
adc
les
xchg
call
icebp
rorl
ds
fwait
sti
inc
shl
xor
daa
in
sub
arpl
std
rcrb
test
add
pop
repz
mov
mov
sbb
mov
pusha
push
test
lcall
icebp
ds
add
fdivs
jle
sti
and
aas
xlat
imul
clc
mov
popa
mov
loop
inc
mov
repz
jns
xchg
gs
xor
popf
add
mov
shl
mov
push
in
add
add
sub
adc
or
lods
sub
xor
jbe
out
hlt
lock
add
xor
data16
push
or
clc
adc
and
lret
ret
movsb
cmp
inc
pop
add
sbb
out
ljmp
inc
add
xlat
sub
cmp
mov
cmp
ljmp
ss
push
jae
or
in
ficoms
push
in
lock
adc
adc
add
ss
push
add
testl
mov
in
adc
add
sub
mov
add
in
xor
xor
jbe
sbb
std
sets
notl
mulb
fld
cmp
roll
daa
rcll
popa
jnp
xchg
mov
adc
imul
cmp
lea
aaa
bound
push
aam
xor
xor
jmp
add
andb
stos
add
cmp
shll
shr
icebp
mov
repz
push
out
lcall
xchg
das
sub
out
push
inc
pop
repnz
popa
js
mov
fiaddl
jnp
xor
mov
pop
repz
mov
in
cld
stos
mull
fwait
dec
mov
es
fildl
jns
cmp
pushf
test
call
jae
add
ss
add
pop
in
xchg
push
rclb
pop
pop
decb
jns
cmpsl
out
pop
cld
mov
mov
xchg
lret
push
sahf
push
cld
shrb
popa
jg
and
add
pcmpgtw
test
inc
inc
cwtl
sbb
jns
popf
repnz
dec
jo
les
push
cmp
sbb
mov
cmp
test
or
hlt
lock
addr16
and
in
pop
shlb
add
sub
adc
ds
mov
jb
dec
hlt
dec
lds
add
jmp
sbb
push
cmpsb
or
iret
in
or
pushl
aaa
pop
insb
pop
push
std
mov
jmp
mov
mov
mov
pop
push
pop
mov
scas
xor
aad
popf
cmpb
inc
loopne
lds
sbb
jecxz
dec
cld
mov
rorb
jle
imul
ret
popa
dec
ds
adc
aas
insl
xorb
and
and
lods
adc
xor
in
sbb
push
mov
lahf
xchg
cli
add
and
hlt
inc
mov
test
les
stc
mov
icebp
cmp
incb
mov
loop
test
push
push
add
xor
lds
add
or
add
jno
push
dec
mov
hlt
pop
ficompl
fldl
loop
arpl
add
mov
repnz
push
pop
and
cmp
xchg
in
stc
sub
adc
mov
ret
nop
xor
adc
pop
cmpb
or
out
dec
cs
mov
add
or
jno
insb
cmp
int
sbb
cmp
cld
mov
ja
addr16
loope
sbb
in
arpl
pop
add
mov
mov
adc
xor
lret
movsl
jae
inc
fistpl
popa
and
jbe
and
add
jl
xor
addr16
add
lods
add
pop
or
inc
xchg
sbb
mov
and
sbb
add
rclb
leave
loope
add
enter
cmp
insb
push
adc
sbb
add
push
out
les
pop
mov
add
dec
mov
out
jbe
in
orb
das
and
push
hlt
outsb
dec
loope
add
add
mov
iret
rcll
push
add
insl
inc
scas
add
xor
adc
add
or
add
xor
shl
push
lea
and
dec
pop
sbb
adc
or
clc
leave
jno
imul
aaa
test
dec
mov
sub
call
push
xor
aad
fstl
cli
fisubrs
mov
stc
jmp
mov
bnd
xchg
lahf
cld
and
movl
dec
sub
insl
dec
ret
mov
aas
mov
into
imul
push
adc
dec
shlb
out
inc
jnp
scas
aam
push
or
add
andl
mov
add
add
jmp
mov
movsb
xor
ljmp
lahf
sbbl
sbb
negb
and
leave
movsl
cmpsb
nop
gs
adc
std
cli
stos
xlat
inc
or
adcb
sub
popa
and
gs
jbe
jle
cmpb
lds
push
inc
add
push
push
shrb
push
jle
adc
rcrl
xchg
std
mov
jp
cld
movb
aam
add
lock
cmpsl
es
push
in
inc
pop
outsb
add
inc
and
add
mov
adc
pop
stos
add
mov
mov
sbb
xlat
loope
shl
shlb
std
push
iret
pop
pusha
pop
add
cmpl
push
inc
mov
cmc
mov
push
out
add
sbb
pusha
rclb
add
adc
ret
or
decl
shr
and
add
dec
lock
push
ficoml
cld
mov
lds
sub
pop
call
fldl
jge
rol
imul
aas
push
adc
add
lcall
add
lods
or
add
inc
insb
add
and
cmp
fldl
pop
jbe
inc
repnz
pop
mov
lods
dec
sbb
cmp
pop
mov
testl
add
out
loopne
xor
add
sub
add
sub
dec
mov
fstpl
and
pop
addl
push
xchg
in
cmpsb
push
pop
push
clc
adc
pop
cmp
cmc
jle
hlt
rorb
xchg
jp
pop
adc
pop
sbb
int3
enter
lcall
movsb
add
xchg
adc
mov
sbbl
mov
sbb
jno
add
fisubl
add
lds
add
jns
inc
lret
fiaddl
in
int3
inc
push
xchg
sbb
dec
xor
and
and
jbe
fs
test
add
in
cmpsl
nop
loop
add
pop
shll
testb
inc
mov
xchg
add
push
cmc
call
lea
mov
sub
test
sahf
enter
sub
mov
lock
pop
rcll
lods
repnz
cs
rol
mov
dec
sbb
cld
jnp
movsb
je
pop
and
cwtl
pop
test
das
add
insl
addl
pop
sbb
int
xlat
out
xchg
push
or
xor
jg
js
push
add
mov
cmpsb
xor
es
mov
inc
std
mov
add
insl
mov
push
cmp
mov
xchg
jecxz
iret
add
mov
jbe
cld
jns
and
repnz
sbb
insb
mov
ljmp
popf
aaa
bound
xlat
add
push
outsl
pusha
pushf
inc
mov
stos
mov
jp
dec
scas
add
faddp
mov
mov
mov
loope
test
je
push
sub
dec
push
cmp
xor
test
adc
xchg
lcall
xor
cmp
inc
cwtl
add
and
mov
je
data16
or
rcr
movsb
add
push
inc
hlt
xor
bound
or
adc
mov
loope
loope
fistl
add
rorl
add
jno
adc
pop
popa
push
mov
icebp
jae
stc
subb
cwtl
sbb
arpl
fsubr
add
ret
out
int
dec
jmp
nop
and
adc
pop
out
mov
xchg
sarb
adc
movsl
adc
adc
test
sbb
sti
add
mov
and
or
rcr
xor
mov
sbb
push
dec
les
test
sbb
jg
add
mov
mov
push
inc
xchg
pop
inc
lret
ficoms
das
arpl
jl
mov
test
jmp
push
mov
in
jo
sbb
sbb
test
mov
adc
xor
or
push
add
xor
xor
jns
inc
push
sub
scas
add
movsl
push
sub
call
and
mov
cld
inc
pop
or
sub
enter
filds
xor
add
negl
enter
mov
jl
inc
rorb
sub
mov
adc
scas
or
cmp
aam
fucomi
mov
pop
add
mov
fs
fildll
inc
cmp
add
leave
imul
nop
ss
push
xchg
inc
xor
test
pop
pop
rcrb
notb
or
punpckhdq
decl
ret
in
ja
les
mov
stos
xchg
js
xchg
test
daa
sbb
lea
in
mov
cmpsb
add
mov
jo
pop
movsl
sar
in
or
mov
pop
xor
into
in
fstpl
rcrl
or
out
aas
add
repz
push
pop
inc
push
add
loop
or
icebp
xor
popf
pop
rolb
in
add
mov
add
fistps
xchg
add
add
push
hlt
add
add
xor
scas
add
push
mov
adc
cmp
mov
pop
fnstcw
xchg
push
stos
incl
add
add
push
filds
add
sub
sti
cmp
xor
and
pop
push
shr
and
cmp
mov
jl
xchg
testb
popf
out
pop
jecxz
pop
addr16
dec
sarl
jae
push
iret
sti
xor
and
add
cli
xchg
inc
adc
fwait
enter
pop
sbb
xor
or
loope
cmp
mov
outsl
sub
int
call
jne
into
add
xor
sub
inc
in
iret
notb
push
jno
dec
stc
sbb
push
jl
sbb
fidivs
pushf
test
push
cld
enter
subl
jg
imul
out
sbb
cld
push
rcrl
pop
and
ja
add
inc
dec
xchg
mov
leave
xchg
jg
xor
jns
dec
xchg
enter
adc
inc
dec
jge
imul
or
rcr
mov
mov
sbb
js
jbe
rdseed
xchg
mov
mov
ja
mov
push
mov
loope
outsb
inc
jle
test
cli
aam
movsb
mov
stc
lods
lea
push
pop
hlt
mov
cmpl
cltd
mov
cmp
mov
fsts
lcall
movsb
or
popl
test
iret
jbe
rclb
inc
out
imul
popl
push
or
jne
sbb
bound
pop
add
les
add
pop
repz
dec
push
roll
mov
push
push
mov
cmpsb
add
leave
and
sub
jne
jbe
call
js
push
ss
xchg
pop
add
fdivrs
push
add
icebp
sub
repnz
mov
rolb
shl
aaa
daa
adc
sbb
fcompl
out
xor
lret
xor
mov
cmp
clc
cmp
frstor
cmp
sbb
add
push
xor
lret
and
sbb
cmc
and
imul
sbb
fsubrl
mov
xchg
aaa
mov
dec
fiaddl
aas
jae
mov
add
loopne
xor
mov
push
mov
dec
or
push
jmp
mov
mov
stos
std
lock
fs
adc
out
out
fiadds
ror
iret
inc
popl
ret
mov
add
leave
movl
push
fistl
sub
and
mov
add
stos
ljmp
pop
int
call
fiaddl
enter
jo
lods
imul
cld
cmp
add
mov
ret
mov
inc
gs
adc
jge
xorl
test
and
loopne
jae
inc
je
pop
add
cmp
fdivrs
outsl
or
cltd
or
mov
inc
add
popf
jo
dec
iret
add
into
jg
fucomi
xor
enter
in
test
xchg
jbe
cld
dec
andb
jb
push
xchg
inc
or
orl
out
fcmovne
dec
add
mov
mov
dec
stc
movb
pop
pop
cmpsb
dec
fidivs
push
xor
mov
lret
dec
add
jmp
add
cmpsl
push
cmp
mov
or
xchg
mov
inc
std
add
sub
dec
lds
cmp
cld
test
lods
xchg
xchg
xor
pop
out
mov
in
aad
ret
pusha
orl
outsl
sbb
mov
in
cmp
add
mov
rcrl
adc
add
fidivs
and
mov
dec
js
add
mov
push
or
aas
sbb
cmp
dec
xchg
ljmp
loope
imul
cmp
jb
adc
mov
lock
and
add
pusha
cld
xchg
push
jle
add
pop
mov
fistl
out
std
sbb
push
iret
add
adc
popa
insb
enter
add
in
jno
dec
add
xor
stos
add
fdivr
mov
cmp
inc
addr16
sub
add
daa
sub
xor
in
cmp
mov
mov
adc
jge
jp
mov
and
dec
outsb
in
or
ds
add
dec
sarb
add
leave
sbb
mov
fsubrs
cmpsl
das
add
ja
stc
js
pop
sbb
out
mov
or
add
pusha
loop
xor
add
or
and
mov
out
adc
scas
xchg
add
push
ret
rorb
add
mov
bound
pop
xchg
lcall
aaa
sub
add
xchg
xor
add
push
add
test
xchg
push
daa
add
enter
repnz
fistpll
sub
rcrb
pop
addr16
daa
pop
inc
movsb
loop
in
fsubrl
int
adc
sub
add
decl
es
fiaddl
movsb
xor
call
int
jnp
test
lahf
dec
sbb
mov
xlat
mov
xor
icebp
add
pusha
out
or
push
inc
ljmp
into
insl
add
lret
sbb
add
fwait
mov
cmc
fstps
or
hlt
jo
xor
lret
pop
cmp
mov
mov
and
das
jg
ret
jbe
add
xchg
stos
and
mov
jge
popa
fcomps
mov
sub
test
outsb
fs
sub
add
inc
dec
xchg
adc
inc
mov
add
mov
sbb
add
lret
rcrl
mov
sbb
out
inc
loopne
orl
add
repnz
pop
or
push
lea
aad
stos
sahf
loop
mov
dec
rcr
div
mov
das
jbe
add
lods
xchg
xor
lds
sahf
insl
add
sbb
js
les
outsb
dec
pop
shrl
in
fwait
xor
inc
sub
stos
or
pop
and
sub
push
mov
push
sbb
inc
test
shr
push
cmc
aam
jg
cmpsb
and
lcall
cld
dec
mov
add
sub
scas
add
mov
cmpl
cmp
iret
ficoml
les
cmp
pop
adc
cmp
mov
aam
xor
mov
js
pop
sbb
xchg
push
or
jp
ret
test
cs
and
loop
pop
fnstsw
jmp
adc
lfs
ja
mov
jl
inc
rorl
add
loopne
dec
jecxz
mov
mov
decb
add
movsl
test
cwtl
or
xchg
lret
fiadds
lahf
pusha
add
cmpl
add
fidivl
imul
ret
stc
rolb
mov
enter
pop
loope
and
imul
push
fdivp
mov
stos
aas
cmp
scas
jne,pn
push
inc
mov
popa
sbb
add
xor
mov
mov
xor
cmp
add
hlt
xor
sub
int3
add
jnp
bound
jecxz
inc
push
movsb
stos
filds
aas
dec
lcall
add
mov
lds
jmp
mov
add
sub
mov
stos
add
pop
and
mov
insl
xchg
add
jle
jns
dec
dec
mov
add
add
dec
clc
sbb
add
lods
pop
loope
dec
shll
in
pop
fcoms
or
push
fisubrl
add
or
je
les
imul
repz
mov
adc
ss
lret
hlt
cli
pop
movsl
stos
aad
test
dec
or
clc
movsb
and
fisttpl
and
jmp
push
and
xlat
push
jnp
pop
les
push
daa
xchg
pushf
in
pop
and
push
fimull
std
sbb
dec
sub
cld
add
xchg
insb
scas
add
gs
orb
mov
jae
dec
mov
pop
out
add
or
mulb
js
adc
shlb
testb
mov
les
push
mov
xor
add
sbb
pop
and
je
mov
and
mov
ljmp
movhps
add
jg
add
add
fs
stos
inc
icebp
fidivrl
push
sbb
mov
pop
repnz
add
rorl
cmp
das
imull
inc
pop
xor
out
pop
mov
das
scas
xchg
je
in
pop
arpl
sahf
loopne
subl
sarl
es
jmp
pop
ror
addr16
dec
popa
test
inc
jl
int
mov
icebp
or
leave
imul
movsl
ret
or
xorb
mov
fisubl
sbbb
setl
add
leave
in
aaa
incl
roll
jae
dec
pop
mov
sbbl
cmp
in
fsubrl
xlat
std
xor
outsl
push
jge
add
ret
inc
xlat
arpl
push
subb
xor
out
pusha
adc
icebp
jno
push
mov
xor
ret
ficomps
or
xchg
aas
xor
sbbb
cmc
sbb
mov
repnz
idivl
and
jne
xchg
ret
sbb
xor
add
pop
lds
xchg
cmp
adcl
mov
mov
pop
mull
xchg
sbb
test
pop
sbbb
mov
and
pop
adc
pop
ljmp
cmp
push
fdivl
mov
add
jae
and
lods
pop
test
pop
lret
or
das
into
sarb
push
inc
cmp
add
cmp
stc
es
addr16
cld
add
jle
cwtl
add
fisubl
push
cmp
mov
fwait
or
mov
add
movsb
sub
loop
mov
dec
stos
incb
cmpsb
pop
sbb
jns
jmp
fidivrl
or
pop
mov
xchg
mov
outsl
les
cmpsb
jge
mov
add
xchg
mov
adc
mov
mov
dec
js
bound
pushf
in
add
adc
jbe
xchg
xchg
adc
scas
loope
lret
std
add
cli
cld
in
xor
sbb
push
scas
roll
mov
xchg
mov
xchg
add
xchg
in
roll
add
mov
loope
xorb
add
mov
jae
inc
inc
out
add
add
mov
jp
scas
push
aam
add
and
jmp
pop
ds
pop
push
inc
jecxz
cld
jae
pop
mov
push
add
nop
xlat
int
sbb
add
movsl
sbb
mov
je
pop
gs
sbb
hlt
mov
add
mov
and
arpl
mov
add
sbb
fnstsw
mov
push
ret
loop
and
inc
mov
add
push
div
jne
cltd
or
mov
sbb
cmp
mov
and
andl
pusha
xchg
add
push
pop
sarb
and
roll
dec
pop
shll
fsubp
into
dec
neg
dec
push
outsb
pop
and
push
int3
rolb
fucomi
cli
push
xchg
xlat
sbb
lahf
cwtl
aas
cmpsl
into
jnp
push
add
icebp
incb
std
bound
or
add
mov
mov
mov
add
push
pop
jnp
add
fs
mov
stos
les
mov
sbb
add
mov
les
xor
jno
int3
mulb
stos
push
vcvtpd2dqy
fs
inc
test
sbb
inc
sub
add
adcb
sbb
in
cmpsb
push
and
mov
push
push
or
in
outsl
lds
movsb
scas
xor
add
in
mov
add
test
add
adc
mov
mov
mov
inc
add
adc
cld
pusha
je
jmp
sbb
add
mov
scas
cmpsl
jle
or
in
pop
popa
mov
dec
add
mov
aaa
jmp
mov
sub
out
ret
mov
psllq
lea
subb
xor
jg
push
adc
add
mov
out
mov
test
add
sbb
adc
cltd
add
mov
sbb
mov
xor
mov
lods
mov
add
cmp
jge
jb
lea
dec
add
push
add
ret
outsl
mov
cmp
xlat
inc
testl
das
cmp
cmp
cmc
aad
cmp
mov
lret
mov
in
adc
hlt
cld
aad
push
inc
xor
das
jae
push
movsl
fisubrl
inc
lds
aam
cmp
out
xchg
jge
jb
fldenv
fnstcw
mov
bound
sar
xchg
shll
sbb
call
or
add
ss
xlat
stos
jne
out
dec
jns
pop
add
arpl
mov
dec
and
cs
dec
xchg
leave
mov
nop
dec
sbb
inc
dec
paddd
cmpsb
mov
push
int
in
loopne
rolb
pop
sub
insb
filds
inc
cmc
xchg
xchg
mov
or
fiadds
hlt
xor
neg
mov
mov
push
push
gs
mov
xchg
add
mov
in
add
and
paddb
jae
pop
sub
mov
rcrb
roll
js
and
add
jmp
or
decl
xor
pop
push
xor
js
leave
sbb
push
hlt
cli
pop
push
int
nop
add
in
mov
adc
repnz
mov
loope
dec
andl
fimull
push
mov
or
xor
or
jle
lret
jmp
sbb
ljmp
or
add
cmp
cmpsl
unpcklps
sbb
fisubrl
pop
fcoms
xchg
adc
mov
adcl
icebp
mov
nop
adc
fisttpl
add
rclb
jecxz
add
flds
inc
xchg
std
mov
hlt
add
ja
add
js
fiaddl
cmpb
mov
jecxz
xchg
out
inc
repnz
inc
pop
stos
add
jp
xchg
in
std
cmp
jg
stos
jae
add
leave
sub
stc
jbe
add
cmc
movsb
jecxz
rolb
cli
popf
daa
or
cld
filds
push
mov
addr16
hlt
int3
faddl
loop
xor
pusha
ljmp
adc
add
push
lods
cld
in
mov
mov
cmp
cmp
nop
fstpt
movsb
mov
hlt
jnp
pop
push
hlt
arpl
nop
loope
add
test
int
add
or
fadds
mov
iret
push
dec
add
adc
or
pop
mov
sbb
sbb
test
or
sub
rclb
cmpsl
mov
mov
pop
data16
rep
pop
mov
sub
push
add
lret
fildl
testb
adc
ficompl
xchg
push
xchg
cmp
es
xchg
andl
push
jp
lcall
xchg
outsb
bound
jl
pushf
mov
hlt
push
cld
movsl
dec
mov
or
or
dec
add
push
add
mov
lret
mov
into
and
and
mov
aaa
sub
fst
xchg
pop
fsubp
jmp
push
dec
or
das
jne
and
push
adc
mov
mov
sbb
add
or
pop
add
cwtl
lds
int3
inc
and
mov
sub
out
cli
mov
adc
sub
ret
add
jecxz
mov
imul
mov
clc
fistps
pop
fldl
enter
add
or
jb
pop
addr16
mov
movsl
mov
clc
jno
push
iret
xorl
lcall
out
loope
xchg
adc
dec
cmpsb
int
and
xlat
dec
push
add
and
mov
popa
in
pop
fwait
jge
aad
movb
adc
andl
loop
pop
addl
jb
xor
std
mov
test
cmp
popf
add
mov
out
inc
clc
movsl
lods
mov
cmp
les
insl
test
inc
adc
sarl
stos
push
xchg
add
adc
and
data16
and
pop
add
add
and
mov
xor
inc
aad
jp
imul
add
inc
iret
xor
pop
faddl
lea
daa
out
out
cltd
orb
int
add
stc
mov
loop
cmp
xlat
add
lds
lret
lret
call
cmp
in
mov
cmpsb
add
push
pop
bound
mov
adc
jno
add
inc
sarb
add
xchg
xchg
insl
add
ficompl
popa
in
and
aaa
add
mov
lds
daa
outsb
inc
repnz
pop
sbb
movsb
out
out
sub
cs
movsl
jno
add
inc
add
repz
adc
fsts
mov
clc
pop
lods
ficompl
rdpmc
xlat
sub
add
pop
lret
sbb
jb
or
mov
jge
xor
adc
xchg
dec
icebp
movsl
xor
popa
cmp
psadbw
les
add
cmp
into
add
jmp
js
iret
sbb
mov
cld
adc
jmp
movsl
nop
push
jecxz
scas
inc
dec
out
in
sbb
ret
insl
dec
lods
add
adc
push
xchg
lods
push
testl
fwait
pushf
popl
in
sub
inc
data16
add
jb
addl
mov
mov
lods
int3
in
in
push
cmp
inc
clc
and
outsb
jg
mov
psrad
add
fists
aaa
push
adc
inc
lcall
daa
mov
loop
out
cmp
inc
fdivrl
test
fidivs
cwtl
pushf
in
mov
and
repz
testb
sbb
fistl
leave
ljmp
inc
call
fildl
orl
push
lock
adc
pop
sbb
ljmp
loopne
cli
xor
test
jecxz
adc
fildl
in
and
inc
cli
mov
sarb
jno
and
je
jle
ja
xchg
out
push
adc
jns
rclb
sahf
pop
add
mov
out
mov
fisubrs
enter
xchg
inc
add
ret
cmpsb
stc
inc
add
xchg
adc
add
dec
stos
jae
mov
add
xchg
push
sbb
arpl
dec
lret
es
xor
push
sbb
outsb
testb
sbb
nop
in
sbb
enter
xchg
stos
movb
inc
mov
xchg
ja
gs
add
mov
or
sub
add
stos
cmc
mov
mov
jp
mov
nop
or
sbb
addr16
loopne
add
icebp
mov
sub
scas
inc
lods
ret
in
add
jp
mov
sahf
icebp
add
dec
in
pop
clc
jge
and
addl
push
mov
aas
fcom
imul
call
push
fcompl
hlt
dec
and
cmp
test
push
xor
iret
or
mov
icebp
nop
mov
add
mov
add
fnstcw
pop
daa
add
in
mov
lods
jg
scas
fucomi
add
adc
sub
add
repnz
ret
pop
add
ds
ficoml
rorl
daa
call
sub
pop
cmp
movsb
adc
adc
sbb
jb
add
mov
sahf
xor
aas
dec
ret
add
hlt
cmpsb
jp
sbb
divl
shl
jbe
arpl
xor
imul
movb
pop
mov
fdivs
cmp
test
dec
cs
push
add
dec
sti
test
mov
sbb
mov
jno
xchg
add
lods
insb
push
int3
dec
sbb
cltd
dec
bound
cmp
sbb
pop
pop
adc
loop
lds
mov
jecxz
cli
js
clc
ficoms
subl
test
iret
sub
inc
xlat
sbb
call
add
xor
push
fcomps
mov
sbb
movb
and
enter
sbb
add
pusha
std
push
out
or
add
mov
cmc
add
dec
jmp
xor
outsb
movl
jl
add
add
and
mov
outsl
add
and
repz
cmp
push
loopne
mov
ret
test
cmp
mov
jl
jno
repnz
mov
add
mov
movsb
fs
les
inc
outsb
sbb
cmc
add
mov
xchg
add
addr16
and
cmp
into
icebp
dec
mov
xchg
mov
add
xor
push
jl
lea
add
xchg
push
leave
cmp
cmp
mov
roll
adc
add
call
push
out
sbb
add
add
ret
xchg
cmp
add
mov
push
rcl
dec
icebp
inc
out
fsubrl
popf
inc
sbb
clc
fmull
pop
xchg
push
sbb
cmpsl
add
jno
sti
add
or
fsub
push
inc
add
inc
icebp
rclb
imul
push
out
add
pop
insl
dec
add
mov
repz
jge
aam
xor
push
sarl
sarl
push
or
mov
decb
add
cltd
push
dec
insl
ljmp
and
cmp
repz
aas
pop
sub
add
jge
aad
or
cld
cltd
movsb
dec
adc
mov
imul
mov
sub
xor
xchg
jmp
call
lods
add
sbb
lock
les
mov
dec
sub
cli
aas
pop
in
and
sbb
and
push
add
dec
sahf
mov
jp
cltd
lods
add
mov
xchg
add
hlt
fmul
sbb
adc
add
ss
add
fcomip
ret
mov
test
jecxz
add
add
in
or
pop
jmp
fsts
les
cmp
in
sarb
call
dec
hlt
add
xor
shrl
xlat
mov
into
fsubr
xchg
sbb
aaa
xchg
outsb
add
fists
add
out
mov
inc
ret
sbb
enter
and
icebp
orl
enter
mov
mov
cmp
add
xchg
inc
cmp
pusha
popf
xchg
andl
or
add
mov
push
add
push
jb
sbb
jmp
xchg
jne
and
push
cmp
cmp
out
jle
jp
int
cmp
jnp
imul
loope
inc
push
add
loopne
jge
fcmovnb
inc
add
lods
adc
hlt
push
ret
pop
loop
sub
aam
sti
movsl
mov
dec
clc
cmp
xlat
jl
cmpsl
xor
sub
pop
mov
inc
mov
add
pop
test
ret
pop
ret
xor
mov
shll
cmp
jb
add
pop
mov
scas
bound
mov
sbb
les
imul
hlt
leave
cmpl
push
add
cmp
fwait
enter
cmp
out
into
hlt
inc
dec
ja
mov
add
jmp
in
fisttpll
leave
adc
sahf
sbb
add
adc
xchg
lret
add
ficoml
lods
mov
adc
ljmp
adc
incl
push
jg
repnz
jno
rolb
push
mov
leave
xchg
jbe
movsl
mov
in
dec
cld
mov
iret
add
std
call
pop
cmp
sub
mov
xchg
add
push
sti
adc
jecxz
dec
inc
icebp
cmp
sub
sbb
mov
sub
loope
rcl
clc
decb
cmpsb
mov
addl
daa
repnz
in
jnp
inc
in
hlt
pop
mov
pop
loopne
and
and
sub
xor
ljmp
lock
nop
fwait
add
cmpsl
andl
mov
sbb
add
fmull
sub
xorl
push
daa
push
xchg
and
in
movsl
push
push
out
enter
int3
jecxz
and
dec
mov
sbb
jb
sub
add
cli
jo
inc
cwtl
adc
dec
xlat
mov
push
sub
and
jo
rcrb
add
mov
xchg
xchg
add
hlt
mov
jmp
fs
add
test
sub
cmp
or
orl
into
push
add
push
xor
cmp
mov
jmp
pop
movsl
sub
out
sbb
iret
loope
xchg
mov
xchg
push
sbb
lods
add
addb
fsubrp
loopne
ficompl
push
out
repnz
push
lods
add
dec
jb
sub
mov
add
scas
repz
dec
and
incl
daa
sahf
insb
cltd
wbinvd
dec
xor
outsl
add
nop
pop
xchg
add
clc
push
repnz
add
into
cmp
lock
push
and
mov
inc
inc
cmp
inc
inc
xchg
addl
aaa
jg
or
sbb
push
and
jo
xchg
ror
add
cmc
out
fucom
jp
imul
inc
add
jns
nop
mov
jmp
jl
add
cmp
out
inc
push
add
lods
mov
add
fidivrs
and
out
inc
adc
adc
jae
test
add
add
jecxz
mov
daa
lock
popa
aam
aas
add
push
inc
add
xchg
push
xor
mov
icebp
pop
push
add
xor
lea
xchg
mov
add
push
dec
roll
mov
sub
inc
out
rorb
aaa
ret
mov
add
in
mov
test
testl
ljmp
sub
mov
shlb
pop
movsbl
fiadds
dec
lds
inc
cltd
inc
push
pop
push
add
xchg
ja
mov
push
loop
push
leave
je
repnz
lret
div
jg
and
jne
xchg
leave
xor
sbb
lock
or
pop
inc
js
add
clc
imul
add
adc
add
adc
sti
xchg
mov
xchg
fsub
gs
mov
jbe
fsubrl
lock
push
fistl
xchg
inc
les
mov
or
push
push
push
iret
xchg
and
cltd
add
cmc
setae
adc
cwtl
fs
sub
inc
sub
movl
in
movsl
daa
scas
jecxz
int
sub
mov
xor
jno
frstor
cli
mov
mov
cli
das
sub
pop
cli
xor
leave
jge
lock
pop
push
mov
push
inc
mov
leave
add
das
mov
ret
loop
loop
insb
pop
sub
xor
xchg
sahf
rorl
je
leave
xor
cmpsb
lea
inc
sbb
xor
xor
mov
out
mov
frstor
pop
jbe
loop
lock
icebp
sbb
jo
sub
addr16
repz
movb
clc
add
push
in
fwait
stc
mov
call
jae
inc
fistps
add
jle
insl
xchg
adc
clc
out
ds
mov
movsb
out
mov
push
jae
out
add
dec
int3
lock
mov
in
xor
add
push
std
mov
lahf
xlat
das
add
or
repz
test
dec
add
or
outsb
inc
mov
add
cmpl
lret
dec
sti
sbb
xchg
roll
inc
mov
test
test
popl
sub
in
movsb
das
sahf
iret
mov
mov
mov
xchg
data16
call
dec
mov
pop
es
push
or
cmp
xchg
mov
push
out
push
xor
and
mov
adc
and
sar
sar
jg
rcl
cmp
ficoms
dec
inc
pusha
rorb
into
pop
inc
negl
add
repz
data16
or
mov
mov
pop
in
cmpsb
out
jne
jnp
les
inc
dec
lret
gs
xchg
mov
and
ja
enter
dec
jno
pushf
cs
out
fdivl
nop
sub
pop
ljmp
mov
cwtl
xchg
daa
fistps
lea
test
lds
sahf
xchg
push
or
adc
or
daa
repz
adc
jge
jne
int
dec
inc
mov
add
push
cwtl
inc
dec
push
mul
rdtsc
sub
mov
arpl
inc
pop
mov
inc
mov
das
insb
cmpb
and
push
adc
push
stc
mov
cld
pop
rclb
or
cwtl
lock
imul
inc
pop
or
mov
jb
insb
bound
repnz
aaa
jl
fdivl
adc
adc
lret
adc
push
sbb
xchg
sub
or
cwtl
mov
insl
add
jnp
cli
add
push
pop
add
out
fs
jp
and
inc
cwtl
inc
sub
inc
dec
and
fdivp
cld
repz
jno
or
sbb
mov
cmpl
dec
add
push
sbb
in
push
inc
dec
add
out
loope
mov
mov
sub
and
bound
pop
out
jmp
sar
cmp
pop
jae
cmp
cs
mov
jbe
add
or
dec
ljmp
and
and
jnp
scas
pop
call
imul
dec
es
mov
movsl
stc
js
lock
xchg
lds
push
mov
push
fnstcw
call
cli
aad
imul
aas
addr16
jbe
adc
mov
push
jmp
push
loop
jmp
ljmp
pop
ret
inc
ret
cmc
clc
add
xor
call
dec
lods
popf
add
addr16
out
xchg
test
imul
mov
fadds
rclb
fiadds
inc
mov
mul
lock
add
shr
inc
movb
mov
jp
fisttps
push
add
dec
cmp
in
repnz
pop
add
push
int3
loope
adc
jle
xchg
inc
outsb
adc
js
inc
add
out
add
or
lods
adc
ds
pop
mov
test
lret
push
cmp
cwtl
xchg
mov
sti
ret
xchg
or
test
jno
mov
in
sub
daa
jbe
mov
out
add
scas
mov
notl
divb
repz
movsb
push
shrl
test
rolb
dec
mov
lret
jo
js
cmp
lahf
sub
xor
mov
inc
jo
sub
addl
mov
xor
fmul
lods
les
pop
add
les
loope
lock
mov
adc
imul
jg
cmp
push
int
or
push
xor
adc
xchg
jmp
shr
call
mov
add
mov
mov
adc
and
cmp
or
bound
clc
add
lods
stc
ucomiss
pop
divb
or
mov
pop
movsb
stos
movsl
sub
mov
and
mov
adc
std
arpl
jne
add
outsl
out
xor
xlat
push
ljmp
in
in
insl
inc
mov
mov
push
shrl
lods
jno
lcall
dec
jp
int
or
mov
mov
push
mov
fstp
add
cmc
push
sbb
xchg
mov
add
mov
mov
add
xchg
adc
ret
test
pop
out
push
inc
add
dec
out
add
xor
jl
mov
mov
adc
pop
sub
adc
repz
icebp
aas
add
jo
push
inc
inc
mov
add
mov
imul
adc
jp
push
jns
sbb
sbb
fstpl
add
add
sar
xchg
cmp
cmc
push
push
ljmp
push
and
dec
lahf
mov
cltd
ds
andl
ljmp
add
dec
das
adc
sbb
daa
or
mov
in
pushl
jns
das
out
rcll
push
mov
sbb
push
sbbl
fistl
loop
adcb
push
mov
lret
mov
mov
inc
mov
push
rcr
sbb
or
mov
iret
in
dec
push
cmp
add
pop
es
add
pop
xor
add
insl
fisubrs
jmp
push
inc
add
mov
mov
cmp
push
pop
mov
cld
or
pop
adc
rcrb
and
pop
lret
fdivs
or
pop
loope
mov
inc
iret
andb
bound
inc
lret
out
dec
and
jge
pop
ds
jae
add
hlt
test
xchg
pop
adc
lock
xorl
mov
fisttps
inc
jmp
jo
nop
add
push
cmpsb
daa
add
push
fldenv
or
add
paddd
mov
cld
loop
or
pop
out
and
scas
add
sub
xchg
and
test
xchg
cmp
ficoml
and
add
shrl
jle
incb
jl
loop
push
inc
dec
mov
inc
add
lret
clc
mov
jnp
mov
sub
mov
mov
rolb
jo
jecxz
mov
inc
insb
mov
adcb
fwait
mov
add
aam
mov
pop
adc
add
jl
xchg
test
je
icebp
push
ret
and
shl
jecxz
cmp
out
cli
sbb
lcall
or
popf
std
mov
sbb
cli
or
sti
sbb
mov
or
adc
mov
xchg
icebp
add
push
inc
dec
xchg
add
ret
and
cmp
pop
fsub
call
les
aam
mov
push
out
inc
add
cmp
inc
std
in
or
add
add
sub
stos
dec
sbb
negb
add
fistps
bound
add
int3
cmp
add
sub
pop
jae
lret
add
push
sarl
xchg
add
int3
mov
repz
or
lret
sub
lds
jle
inc
hlt
add
std
dec
orl
sub
outsl
lcall
sub
dec
divl
mov
mov
or
sbb
lret
test
or
add
inc
pop
fiadds
cwtl
in
push
call
mov
out
outsl
popa
or
add
add
fildl
add
xchg
xchg
das
test
add
push
imul
jmpw
lahf
addl
xchg
and
jle
add
mov
dec
fbld
jb
rol
jle
mov
xchg
sbb
lcall
test
rolb
pop
adc
xchg
fmull
divl
mov
sti
dec
int3
push
and
frstor
jb
imul
rcr
ja
clc
and
xchg
stos
orl
mov
or
cmp
or
mov
mov
nop
pop
xor
hlt
cltd
clc
cmp
addb
mov
sbb
or
rcr
inc
pop
add
in
mov
inc
lahf
push
mov
or
and
mov
cmp
xchg
add
add
out
lcall
jp
mov
loope
sahf
jge
push
loopne
mov
or
cmpsl
es
add
mov
dec
aad
sbb
add
or
popa
xor
xchg
cmpsl
add
loop
addr16
adc
xor
cld
inc
cmp
mov
rcrb
sub
test
out
pop
adc
sbb
in
xor
sbb
sub
mov
cli
adc
add
loope
jmp
xor
sbb
stos
mov
incl
cld
cltd
push
pop
movsb
adc
xchg
push
and
mov
sub
add
aaa
xchg
mov
mov
push
pcmpeqb
push
fcomps
cmp
mov
rcr
pop
cmpl
add
jmp
dec
mov
add
lods
jne
add
push
push
sbb
dec
add
loope
mov
add
andb
inc
popa
fsubrl
pop
add
xchg
add
je
aad
in
add
inc
outsb
mov
jae
popf
dec
lret
add
loope
dec
add
mov
ja
inc
fwait
mov
pop
jns
cmp
out
sbbl
jl
dec
jle
ret
jp
push
out
addl
or
pop
into
add
pop
cmp
xorb
cs
out
cmovns
inc
sub
enter
jl
mov
in
mov
ror
adc
add
sbb
sub
repnz
out
jecxz
cmp
out
fildll
push
push
mov
popa
push
hlt
rorl
es
add
pop
jg
enter
ss
add
push
mov
xchg
test
ljmp
pop
jbe
push
mov
jns
pop
mov
pop
and
add
out
scas
jle
ret
stos
not
mov
cmp
push
fcompl
cld
cld
pop
es
dec
loope
andl
inc
jp
fldcw
adc
push
in
add
std
test
mov
fdivrs
mov
and
in
mov
push
shlb
test
add
ja
pop
xor
inc
add
out
lret
cmp
fcoml
testb
loopne
sbb
loope
add
pop
and
mov
adc
les
sbb
add
sbb
mov
fwait
adc
insl
lock
fstl
scas
xor
jmp
push
and
sub
insb
repz
into
mov
push
xor
pop
add
cmp
pop
add
repnz
lret
jge
sahf
xchg
enter
popa
adc
mov
dec
ja
and
inc
aaa
cmpsb
xchg
fs
out
lock
call
inc
add
stos
jg
add
mov
push
out
mov
test
test
loopne
add
outsb
pop
inc
cli
lret
push
cs
mov
sub
and
mov
mov
lock
jecxz
leave
out
sbb
push
cmpb
add
xlat
enter
ja
adc
out
or
mov
pop
and
xor
rcrl
inc
clc
ret
xor
cwtl
ja
sarl
imul
data16
add
xor
cmp
xchg
push
aam
js
push
cld
leave
jl
xadd
mov
mov
in
xchg
hlt
ss
repz
and
pop
add
xchg
inc
iret
fldcw
and
adc
dec
jnp
push
nop
leave
scas
jmp
xor
out
push
adc
and
int
cli
and
add
xor
jno
nop
add
gs
jmp
xchg
jne
cmp
xor
insl
les
cmpsl
jecxz
cli
add
add
mov
outsl
loop
icebp
cmc
or
jb
ljmp
cmp
push
ficompl
inc
inc
cmpsb
xor
mov
insb
das
lods
cld
js
sbb
nop
test
xor
enter
mov
inc
jb
xchg
dec
repnz
cmp
pop
ret
out
dec
pop
roll
les
aam
and
stos
push
cwtl
insl
incb
adc
mov
hlt
popf
mov
pop
sti
stos
orl
jne
sbb
mov
fwait
in
xor
pushf
or
inc
ja
pop
iret
inc
add
xchg
daa
push
sub
dec
mov
cli
aaa
add
js
xchg
insb
gs
test
fnstsw
sbbb
sub
sarl
jnp
add
ds
add
inc
scas
into
cmpsl
push
sub
adc
add
cld
rclb
mov
fstl
fldenv
scas
xor
pop
fdivs
adc
fwait
sbb
mov
aaa
xchg
filds
js
pop
cmp
cmp
fnsave
jg
enter
jbe
cmpb
ret
ljmp
stc
aad
sti
jecxz
jno
addr16
cmp
cld
into
xor
xlat
add
jmp
jns
jmp
addb
cmpsb
rol
cmp
andb
inc
mov
hlt
push
andb
lods
inc
movsl
cmp
fistpl
mov
xchg
mov
add
imul
and
add
sbb
push
mov
xchg
pop
mov
xor
add
or
xchg
mov
cld
fstpt
push
sbb
xlat
cmp
into
cmp
fwait
dec
dec
dec
repz
jne
jmp
cld
add
in
daa
addr16
in
push
sub
add
popa
lods
mov
push
xchg
repnz
dec
hlt
push
sbb
mov
inc
sbb
cmp
movsl
call
cmp
pop
mov
call
ss
xchg
fs
mov
add
dec
jae
or
mov
cmp
add
jb
stos
or
pop
cli
mov
sub
mov
mov
stos
jle
mov
adc
add
movsl
test
daa
add
or
add
adc
mov
add
data16
outsb
jne
in
lock
lods
out
mov
cmp
movsb
sub
gs
add
shll
fwait
lcall
adc
lahf
mov
xchg
xchg
pop
cmpsb
mov
stos
inc
fldt
ljmp
out
xor
and
mov
clc
inc
es
inc
sbb
mov
pop
mov
sti
push
call
popl
xchg
sub
mov
adc
jo
or
in
lcall
mov
shlb
cmp
enter
adc
and
xchg
bound
fistpll
mov
and
add
popf
or
cld
pop
jne
jecxz
shlb
dec
stos
imul
sbb
jo
push
lods
sbb
mov
addr16
repnz
pop
xor
pop
add
or
hlt
loopne
push
mov
decl
pop
shrb
imul
das
fcoms
repnz
add
add
and
cmp
cltd
ret
cmp
adc
and
andl
mov
sub
stc
aad
incl
ja
push
add
cwtl
or
sub
ret
and
xchg
fildll
lret
xchg
stos
and
std
pop
inc
adc
repz
mov
mov
cmpsl
inc
mov
xchg
add
into
adc
mov
add
insl
and
xchg
jns
mov
inc
or
out
outsb
add
add
dec
add
sbb
addr16
aam
dec
sbb
out
add
jg
pop
mov
outsb
or
adcl
in
cs
xchg
lods
inc
mov
sbb
add
mov
inc
push
add
add
sahf
dec
dec
imul
ljmp
adcl
subl
or
daa
imul
inc
sub
lret
add
dec
clc
int3
addb
test
add
cmp
cmpsb
pxor
pop
add
or
lcall
or
pop
mov
pop
decl
loop
rcrb
inc
enter
push
push
add
sub
jno
or
mov
data16
movsl
adc
imul
test
dec
lret
or
lds
add
xchg
cmp
add
lods
sbb
add
clc
cmp
mov
mov
out
add
xorb
data16
push
xchg
jne
sub
add
les
cmpsb
jmp
pop
shll
lret
mov
inc
pop
aam
les
dec
out
lock
cltd
jle
push
xchg
test
stc
imul
push
xchg
loop
adc
in
mov
cmc
mov
rorl
popl
xchg
popa
hlt
and
add
adc
mul
add
out
mov
fdivs
cmp
pop
add
in
popf
fistl
shr
dec
ret
notb
js
push
jo
mov
inc
jmp
pop
mov
in
rcl
cld
jbe
popa
js
add
xchg
xor
sbb
add
cli
hlt
clc
insl
pop
out
nop
or
push
leave
test
and
das
and
add
push
aad
add
adc
mov
push
cmp
add
aaa
push
cld
push
stos
cld
pop
arpl
movsb
adc
or
sti
rolb
xchg
rcrl
mov
loope
or
outsb
add
movsl
mov
add
cli
and
inc
xor
stc
aas
push
sbb
push
adc
add
test
in
mov
pop
in
add
daa
cmc
pop
add
lcall
add
inc
clc
jo
mov
sub
push
dec
sub
mov
xor
inc
dec
push
inc
push
clc
cltd
insb
sbb
sbb
add
or
jmp
fsub
mov
add
dec
pop
sahf
jmp
add
adc
jnp
mov
jae
addb
add
rcrb
decb
inc
iret
lret
jae
stos
sbb
cmpb
shlb
aad
mov
or
test
add
stos
bnd
pop
rcrl
je
loopne
orl
sarl
adc
shll
popl
cld
sub
jnp
imul
pop
inc
movb
mov
sbb
add
out
fadds
je
and
push
popl
xor
smsw
stos
sbb
loope
call
or
push
add
pushf
mov
dec
xchg
mov
pop
test
sub
arpl
add
mov
movsb
loope
sbb
jno
into
add
sbb
ficoml
out
sub
inc
clc
inc
jmp
push
mov
in
cmp
push
jge
hlt
imul
fsubl
add
sbb
into
lret
push
inc
cmp
aas
addb
mov
test
arpl
enter
mov
sbb
jb
lahf
cmp
and
loopne
in
inc
insb
imul
lret
js
enter
dec
add
addl
add
cwtl
xor
cmp
stc
add
into
ljmp
imul
popf
and
pcmpeqd
sub
int
sbb
inc
mov
mov
ljmp
sub
mov
ds
jmp
mov
mov
dec
jmp
push
ucomiss
push
jne
cmp
add
add
and
jnp
cmpsb
dec
push
hlt
and
add
sub
inc
inc
rorl
jle
test
or
cmp
aad
out
decb
push
add
dec
mov
out
add
mov
jp
cld
inc
sub
icebp
mov
or
push
sub
loopne
mov
xchg
or
cmp
lods
sbb
mov
fnsave
push
jno
orl
pop
xchg
out
inc
dec
mov
out
adc
xchg
add
rcrl
insl
out
pop
xchg
add
arpl
adc
mov
or
rcrb
add
mov
xchg
lfs
mov
imul
xor
or
in
rcll
aam
pop
aam
sbb
adcb
add
cmp
lea
mov
mov
in
add
push
mov
mov
jle
aaa
adc
aad
mov
add
imul
add
sub
xor
add
mov
xor
add
pusha
cltd
out
dec
testl
scas
cs
push
jbe
add
inc
jge
pusha
popa
pop
clc
daa
popa
mov
add
mov
or
ret
add
test
daa
push
testb
and
clc
icebp
add
aad
mov
hlt
mov
add
les
in
dec
cli
mov
aas
add
push
mov
add
mov
stc
or
mov
cmpsl
adc
add
test
jl
fld
js
or
jecxz
dec
add
jmp
add
leave
and
fprem
mov
aad
sti
push
add
icebp
imul
lret
add
mov
add
dec
test
enter
sub
test
mov
add
push
aas
pop
out
pop
push
faddl
pop
push
dec
add
ljmp
pop
loopne
sub
repnz
ja
je
pushf
ret
mov
cmp
arpl
mov
sub
push
bswap
and
jl
test
int3
mov
xor
outsb
mov
add
fnstenv
jae
xchg
test
mov
cmpsb
xchg
mov
add
rcr
push
hlt
lret
xchg
pop
xchg
jbe
es
js
movsl
mov
inc
inc
int3
add
sar
sahf
sbbl
pop
lcall
fcmove
cmp
add
add
mov
dec
sbb
xchg
std
add
fisttps
push
add
fucomp
mov
loop
sbb
add
jne
xor
xor
lods
mov
outsl
dec
mov
jnp
add
lret
mov
mov
jns
jmp
sbb
cmp
rcrl
cmpsl
jo
mov
fistpll
nop
popa
in
push
add
lret
add
jg
add
lds
add
inc
iret
jno
std
inc
popa
shll
fstpt
cmpl
dec
add
cmp
add
inc
mulb
jb
cmp
pop
je
in
es
popf
mov
add
outsb
adc
frstor
aaa
insl
pop
cwtl
enter
aad
lahf
jg
add
pop
mov
popa
pop
xchg
fdivp
mov
dec
fxch
lds
pushf
add
pusha
std
dec
add
cli
hlt
pushf
enter
add
mull
mov
popa
fists
cli
call
add
shrl
rol
jmp
or
scas
outsb
stos
in
add
orl
outsl
or
mov
stos
cmp
ja
jns
push
and
addr16
cmpsl
stos
test
xor
es
out
add
jae
or
sbb
decl
push
loope
add
xchg
iret
ljmp
adc
add
in
add
imul
movsb
mov
hlt
enter
push
push
push
jecxz
cmpb
pop
mov
popl
lahf
pop
mov
jae
mov
jl
jbe
clc
cmc
jg
out
icebp
cld
cmp
sbb
lret
and
adc
cwtl
or
out
rcr
inc
movsl
or
push
aas
jle
and
add
mov
mov
fistpl
in
and
loope
sub
add
push
sbbl
loop
mov
inc
ret
add
push
lret
sbb
popf
mov
jae
jecxz
fwait
xchg
les
mov
push
aam
xor
int3
dec
arpl
cmpb
cld
inc
mov
and
loope
push
popl
adc
loope
popa
ds
inc
pop
pop
sbb
ljmp
or
mov
das
adc
add
add
sbb
lahf
pop
add
inc
xor
xchg
sub
cmp
adc
jle
add
xchg
dec
sbb
and
leave
jne
adc
add
and
adc
das
in
xor
jmp
cld
push
iret
add
movsl
mov
mov
in
cmp
and
mov
jo
bound
mov
adc
out
repz
or
push
or
rorb
adc
hlt
and
cmp
and
lret
cwtl
pop
add
push
mov
out
test
jno
push
cmp
or
cmp
xchg
fcmovb
add
ljmp
sbb
aas
jne
cmp
xor
pop
xchg
insb
add
xor
in
jecxz
or
push
sbb
jl
add
inc
dec
fcoms
cld
add
pop
ljmp
jnp
mov
adc
mov
jp
stc
sbb
hlt
in
test
test
mov
cmpl
hlt
cmp
mov
jns
clc
addl
mov
xor
js
lcall
cld
mov
mov
jno
adc
push
dec
inc
add
cmpl
pop
xchg
outsl
add
push
add
jp
xor
add
xor
leave
das
xchg
sbbl
aas
pop
repnz
repz
or
or
les
mov
cltd
je
andl
fimull
mov
ret
lcall
push
out
pop
in
inc
and
loop
scas
in
add
add
sbb
sub
cmp
insl
jl
call
cmp
cmpsb
fs
lahf
out
imul
sub
jmp
push
cli
xchg
cmp
lret
jle
mov
loopne
sti
add
xchg
adc
in
inc
in
adc
add
lods
sub
hlt
adc
adc
lret
sbb
jno
flds
incl
lds
jnp
mov
sar
jae
rol
add
lods
dec
mov
or
mov
fs
hlt
lret
lds
add
pop
insl
imul
add
inc
cld
andb
add
cmpsb
insb
in
imul
cmpsl
loop
les
lock
andb
movsl
sbbl
push
hlt
das
jns
les
lea
mov
out
std
push
add
cmp
sub
push
add
pushf
in
inc
pop
outsb
dec
or
cmp
add
and
add
jb
out
adc
movsb
fdivs
out
aaa
mov
mov
adc
cli
stos
gs
enter
orl
push
and
sbb
loope
dec
mov
pop
jmp
pop
add
mov
mov
shl
mov
ret
rol
xlat
pop
push
popa
in
jae
add
mov
shlb
add
adc
and
xor
shll
shll
mov
test
add
sti
push
dec
add
pop
fldcw
imulb
add
jns
iret
add
repnz
sti
sbb
mov
xchg
sub
add
addb
loop
fwait
add
xor
ds
ror
es
pop
loop
push
mov
add
jmp
cmp
mov
cmp
repz
test
loopne
les
mov
fdivrl
push
mov
mov
jmp
pop
add
sub
add
movsb
dec
push
leave
lods
lods
fcoml
pop
fildl
xchg
out
cmp
and
adc
sti
push
inc
cmp
add
sub
testb
je
xor
add
fld
jae
addb
notb
stos
add
fsub
pop
cmp
add
fcmovnb
cs
add
add
xlat
xchg
popa
imul
pop
andl
jp
decb
add
dec
xchg
ficoms
mov
out
pop
and
ficoml
nop
pop
mov
aas
inc
jae
ss
bound
popf
pop
or
cli
xor
xlat
xorl
adc
mov
jo
icebp
andl
adc
fwait
ja
inc
mov
in
sbbb
xor
mov
mov
dec
les
lock
hlt
push
shl
dec
outsb
sub
fst
pop
cld
out
mov
daa
add
and
or
add
xor
inc
push
out
addl
jb
fildl
sbb
add
jbe
cld
mov
cmp
roll
mov
in
cmc
cltd
hlt
xchg
inc
lret
inc
sbb
hlt
std
test
arpl
jmp
jge
ret
cld
inc
cmpb
scas
xor
jl
push
push
cwtl
shll
add
fistpl
lahf
inc
pop
jmp
jl
test
push
or
les
mov
push
jp
clc
add
adc
aaa
mov
les
cld
lret
fildl
add
inc
shll
mov
push
mov
jo
add
js
or
fimuls
mov
mov
notl
sub
mov
add
loope
add
push
push
sub
xorb
mov
add
xlat
and
add
cmp
lcall
mov
and
pop
pop
stc
fmuls
add
add
push
shlb
decb
mov
pop
add
pop
inc
and
pop
mov
mov
adc
aam
pop
sub
and
inc
mov
jns
sbbl
popa
xchg
and
mov
push
std
ret
lods
daa
add
das
mov
adcl
mov
rorb
loopne
xchg
mov
lods
mov
enter
push
xchg
add
in
jle
add
inc
push
incb
inc
xchg
ljmp
test
xchg
ds
adc
inc
add
cwtl
mov
adc
add
aaa
xchg
pop
cld
xor
xor
testb
loope
xor
jae
popa
add
les
pop
pop
mov
add
add
xchg
jne
repz
xlat
pop
sti
push
xor
scas
fcmovnb
ja
ljmp
jnp
mov
inc
jg
outsb
cld
sbb
mov
mov
cld
xchg
cwtl
sbb
repz
push
sbb
cmp
dec
xor
mov
cmc
mov
mov
add
int3
inc
mov
and
cmpsb
rol
sub
push
adc
out
pop
sub
jno
or
and
mov
jbe
mov
pop
sbb
cmp
shlb
push
pop
xor
call
xchg
movl
dec
andl
in
lods
gs
inc
jnp
inc
xor
lea
arpl
add
sti
inc
jl
pop
notb
dec
mov
push
enter
cmpl
lcall
push
adc
pop
lods
xor
sti
orl
sbb
popa
rcrl
jmp
pop
add
dec
lret
and
cmp
jmp
dec
jo
pop
pop
inc
mov
add
aad
ja
and
inc
xchg
ret
enter
add
xor
shl
add
test
add
decb
dec
xor
push
push
push
stc
les
and
add
aad
mov
pushf
out
sub
repnz
pop
cltd
les
stos
call
mov
dec
enter
orl
mov
pop
nop
lds
inc
xor
lcall
std
xchg
and
bound
sub
mov
fimull
and
mov
xchg
push
and
add
jne
rcl
add
add
and
out
add
pop
adc
mov
jmp
lcall
fcos
mov
jo
sub
in
or
mov
ja
push
int
dec
jge
dec
dec
pusha
add
inc
shrb
pushf
or
xchg
pop
dec
shll
stos
xor
jb
push
in
add
sub
jne
xor
gs
mov
adc
js
add
call
cld
jg
or
jns
dec
inc
sbb
cmp
mov
fimuls
add
sbb
and
sub
mov
add
sub
mov
orl
add
dec
iret
mov
cmpb
add
lret
cli
or
sub
push
aaa
scas
push
fsts
mov
ds
add
adc
sbbl
push
das
mov
add
rcr
insl
mov
ljmp
repz
dec
mov
add
jp
outsb
and
add
pushf
out
sub
xchg
repnz
mov
add
es
add
rclb
xor
add
jmp
stos
push
jg
dec
adc
inc
and
outsb
add
dec
add
test
push
in
fdivr
dec
mov
mov
add
cli
xchg
pushf
sub
hlt
and
leave
orb
lock
hlt
mov
jnp
cmp
xchg
add
or
dec
push
test
test
mov
dec
adc
push
add
out
ljmp
push
xor
mov
dec
movsb
mov
push
sti
xor
in
loope
test
add
and
and
inc
out
enter
bound
jmp
add
xor
push
hlt
sbbb
add
lcall
add
sbb
mov
aad
adc
jnp
sbb
dec
aam
outsb
add
or
add
pop
or
insb
cmovge
add
out
fbld
push
rorl
jb
out
lock
xchg
ret
lods
add
aad
rorl
pop
jne
mov
sub
daa
loop
adc
in
mov
add
add
in
xabort
jae
add
or
js
xchg
imul
add
sbb
call
scas
jg
jno
pop
fildl
inc
mov
push
stc
test
jns
push
ret
rcrb
xchg
mov
mov
lcall
addr16
xchg
mov
xchg
mov
leave
xchg
out
mov
idivb
les
in
cmc
inc
test
mov
push
shlb
xchg
sub
inc
and
mov
aas
add
repz
cmp
nop
in
add
dec
xor
add
cs
cld
in
stc
loopne
jno
or
lock
jbe
add
pop
outsb
js
mov
push
sub
imul
out
adc
popa
in
divl
push
das
push
out
ljmp
adcb
fucom
sti
inc
ret
imul
add
stos
sahf
sub
addl
inc
int
add
scas
js
lahf
add
jae
mov
adc
mov
out
cmp
pop
in
xchg
add
roll
push
xor
sbb
jb
add
test
push
mov
jns
sbb
add
out
les
add
stos
mov
cmp
dec
fwait
jmp
xchg
sbb
jmp
scas
sub
jb
sub
add
mov
icebp
add
add
mov
mov
mov
outsl
sub
or
movsb
xchg
pop
sti
add
ret
shr
pusha
push
mov
in
and
sub
xchg
pop
cmp
mov
jo
add
aam
xchg
call
or
fcompl
cmp
sub
mov
and
scas
test
fisubs
push
xchg
pop
mov
hlt
jmp
inc
xchg
pop
fsubs
add
jo
jp
dec
daa
push
mov
jl
faddl
cmp
ja
test
add
rolb
add
jecxz
cmp
add
clc
lods
or
in
rcr
cmp
mov
mov
cmpsl
rclb
movsb
aad
cmp
mov
in
or
add
jne
mov
and
and
dec
sar
popa
adc
movsl
shr
mov
or
repnz
mov
aas
rorl
out
sbb
lret
xor
std
dec
mov
add
add
inc
cli
xchg
add
cmp
dec
add
pop
stos
rcrb
add
or
mov
popf
sub
jecxz
inc
sarb
idivb
mov
add
shll
hlt
cmpsb
fwait
add
push
aad
xlat
xor
out
dec
cmpb
push
xor
pop
mov
adc
jbe
hlt
arpl
xchg
jg
bound
mov
mov
cmpsb
jmp
sub
ja
xor
inc
add
or
imul
add
repnz
mov
insl
or
inc
dec
int
in
ljmp
sbb
add
sbb
fldenv
clc
push
ljmp
frstor
jno
mov
js
add
ja
pop
mov
call
in
add
add
mov
hlt
hlt
jmp
adc
cltd
sti
clc
push
mov
jne
cs
adc
add
es
insl
sub
jp
or
sub
loopne
xor
mov
stos
lcall
jns
test
adc
jge
sti
add
mov
xorb
fcoml
mov
add
adc
lcall
pop
add
sti
pop
add
ret
es
cwtl
jle
jg
data16
stos
mov
insl
jmp
cmp
add
pop
lock
adc
dec
add
idivb
add
cmp
inc
enter
subb
add
push
cld
pop
lahf
sub
clc
in
aas
lea
or
fwait
sbb
or
sub
and
adc
sbb
icebp
add
je
sbb
cld
sbb
test
push
inc
stc
and
add
leave
and
stos
dec
imul
jnp
fwait
push
mov
and
sarb
sbb
enter
adcl
hlt
arpl
push
out
push
add
imul
push
mov
icebp
hlt
xchg
mov
dec
sub
add
or
inc
popa
mov
pop
adc
cltd
or
add
lods
mov
xor
pop
leave
jmp
test
xor
mov
inc
lea
lret
sbb
mov
sub
lods
and
leave
stc
je
xor
testb
in
and
pop
jp
lock
loopne
hlt
pushf
push
and
mov
je
and
out
jle
add
movsl
in
pop
add
out
jno
pop
cmp
mov
dec
add
popa
fistpll
gs
xor
andl
stos
sub
adcb
stos
inc
outsb
addr16
clc
jo
dec
ljmp
or
push
test
incb
loop
pop
pop
sbbl
popa
outsb
xchg
add
cs
cmp
roll
cmp
sahf
loopne
mov
xlat
mov
cmp
sub
inc
add
and
xor
scas
push
add
jmp
xchg
jp
into
sbb
mov
stc
insl
push
inc
add
test
mov
call
xor
imul
add
jge
add
mov
popa
jmp
mov
pop
cmp
xor
sbb
test
add
and
cmp
pop
inc
pop
mov
in
fldl
push
inc
rcrb
das
cld
add
arpl
bound
mov
stc
hlt
push
out
nop
add
lds
lods
imul
pusha
add
xchg
cltd
inc
add
fiadds
adc
sti
adc
cmpw
jno
jb
repnz
repz
push
data16
addr16
xor
addb
inc
and
add
mov
xor
std
and
mov
add
or
loopne
mov
xor
test
inc
and
xor
das
xor
fsub
cld
xor
stos
cli
dec
aas
and
inc
sbb
cmp
test
inc
add
pcmpeqw
jge
mov
add
push
jno
cmp
insl
adc
das
lcall
testb
sti
andl
cmp
js
mov
pop
les
add
scas
rcrl
clc
xor
stos
int3
rcll
add
sub
pop
add
cmc
pusha
ja
push
aas
icebp
add
lret
filds
add
mov
jns
in
fcomi
rorb
lahf
sub
roll
pop
ds
mov
sbb
aaa
ffree
push
mov
xor
dec
test
stc
pushf
cmp
lds
enter
sub
icebp
add
mov
out
mov
rcrb
lret
pop
adcb
movsl
fidivl
aam
add
and
add
xor
call
mov
in
push
in
mov
xor
add
push
aad
add
fnsave
repnz
std
shl
fldt
cli
loop
ja
inc
add
dec
sti
test
int
stos
lcall
pusha
xor
push
mov
pop
idivb
dec
out
pop
or
inc
sbb
xchg
daa
add
or
and
push
outsl
xor
clc
sbb
push
leave
xchg
pop
add
xchg
decl
pop
jns
lahf
cmp
mov
add
lock
aam
test
stos
cmp
hlt
jbe
mov
hlt
out
mov
loopne
push
je
xchg
aaa
or
or
mov
subl
invlpg
cmpsb
fdivrl
adc
inc
mov
mov
dec
adc
pop
pop
add
ljmp
xchg
push
xor
int
data16
push
cmp
ljmp
xor
adc
add
dec
xchg
popa
add
push
and
shll
adc
aaa
jecxz
cmc
push
push
push
pop
jge
lret
and
addb
mov
dec
mov
jle
inc
je
push
lcall
loopne
andb
mov
add
lahf
jb
repz
push
lret
xorb
push
push
arpl
shlb
xchg
sti
test
add
adc
cmp
lds
dec
jp
push
in
repz
xor
mov
xor
mov
jg
mov
cmp
out
pop
icebp
mov
xor
mov
arpl
add
rcr
das
xor
xchg
pop
push
jle
leave
pusha
pop
mov
fadds
sbb
je
cltd
push
jne
cli
clc
inc
jb
test
adc
add
mov
jb
mov
cli
and
out
mov
push
aad
lock
out
add
xor
jle
rorl
and
pop
fs
lret
popa
jbe
jge
add
mov
dec
aam
scas
xchg
dec
sbb
cwtl
inc
addb
or
cmpsl
rcr
enter
xorl
add
aam
and
insb
cmp
ror
dec
repz
cmpl
mov
test
sbb
add
mov
add
into
xor
arpl
popf
or
repz
mov
in
ljmp
cmpsb
or
fwait
dec
adc
sbb
imul
cs
faddp
add
add
popa
outsl
in
lods
std
ds
jl
roll
in
out
loope
jge
mov
int
in
dec
inc
dec
aas
popa
hlt
mov
sbb
aaa
stc
and
out
cmp
pushf
jmp
ret
mov
enter
add
xor
ds
or
push
xor
jl
sbb
add
lret
out
mov
add
pop
insl
xor
bound
sub
hlt
jns
mov
sbbl
xor
sahf
push
add
in
mov
push
mov
int
sahf
push
movsb
movsl
mov
inc
into
add
sarb
fdivrl
mov
stos
imul
aad
inc
push
test
or
bound
mov
mov
pop
call
add
test
pusha
jmp
aad
ret
cmpsl
andb
add
jg
and
fists
add
inc
shll
add
icebp
mov
push
add
mov
leave
sub
add
mov
out
mov
dec
repz
test
pushf
lea
pop
aaa
push
cli
test
das
push
sbbl
pusha
stc
push
mov
xor
out
add
mov
push
mov
xchg
sti
fisttpl
jb
jmp
andl
push
sahf
into
int3
xchg
test
repnz
push
adcb
je
xchg
add
lds
push
aas
mov
xchg
cltd
push
add
dec
mov
leave
cmp
or
and
popa
scas
push
dec
xlat
inc
and
out
jle
add
adc
les
mov
and
add
mov
scas
mov
adc
xchg
mov
call
mov
pop
mov
inc
repz
sti
adc
mov
orb
add
add
pop
adcl
xchg
dec
shl
stos
cld
push
jmp
push
inc
adc
push
sub
ja
cmp
inc
pop
pop
jno
popf
jo
sub
adc
scas
lock
adcl
aad
test
add
jmp
fcmove
mov
add
popa
and
mov
sbb
pop
or
dec
mov
adc
push
jo
in
scas
es
add
mov
dec
repz
rolb
mov
mov
pop
mov
outsl
loope
inc
mov
add
add
jae
jp
insb
add
push
addr16
dec
push
add
adc
sbb
and
pop
push
nop
add
jnp
mov
mov
mov
mov
cs
sbb
inc
add
in
fnstenv
inc
xor
je
xor
xchg
jae
mov
ret
add
scas
push
cmpsb
mov
cs
add
inc
cmp
add
push
push
sub
adc
movsl
jno
xchg
sub
pop
in
rorb
or
fnsave
cmp
mov
sub
pushf
add
inc
or
dec
andl
add
lcall
jmp
lcall
aas
xor
in
mov
je
adc
xor
mov
pop
std
in
sbb
add
jo
ror
sub
add
shl
rol
or
add
mov
stos
or
popf
xchg
push
xor
mov
mov
dec
les
incb
fstps
push
pop
aam
fidivrl
add
fwait
xchg
push
jnp
inc
rolb
loope
push
add
dec
dec
sub
mov
stos
idiv
mov
push
aas
sbb
es
add
imul
scas
mov
mov
fisttps
repz
inc
movsb
xchg
cmc
jo
fst
jnp
push
inc
mov
movsb
inc
std
inc
rorl
arpl
jmp
fucom
jecxz
pop
lahf
add
push
or
imul
mull
incl
fistpll
bound
cmpsb
and
inc
inc
pop
ret
add
mov
add
sbb
lcall
jge
cmc
xchg
cmp
fwait
pusha
cmp
sub
add
adc
call
lahf
arpl
sbb
add
scas
pop
dec
ret
enter
jle
mov
xchg
hlt
cs
sub
add
xlat
outsb
js
dec
cmp
inc
cld
sub
icebp
imul
mov
add
loope
out
push
jns
or
sahf
enter
clc
imul
mov
xchg
adc
xchg
lock
sub
lds
and
lcall
jle
imul
cmc
shrl
lret
add
cmpsb
lahf
add
lret
or
ds
push
lds
xor
ret
lock
adc
std
enter
or
orb
and
jae
mov
cvtpi2ps
fists
shl
dec
in
testl
inc
ret
loopne
lods
data16
out
cmpsb
add
shlb
decl
fwait
daa
jno
xor
jmp
jp
jne
pop
fistps
cmc
push
add
outsl
xchg
mov
call
fbld
mov
lret
mov
popf
mov
xchg
jg
stc
sahf
in
cmp
lock
jne
cmp
das
fisttpll
mov
stos
cltd
add
pop
outsb
push
sub
dec
mov
lock
jns
shr
mov
or
decl
add
mov
jo
aam
add
insb
lret
outsl
dec
add
imul
add
add
adc
xchg
movsb
pusha
popf
adc
add
jle
xor
in
decl
add
sbb
mov
test
push
push
add
shll
cld
shll
in
inc
cmpsl
flds
rcrb
int3
push
rcl
jmp
mov
add
add
jp
mov
add
push
hlt
leave
jns
js
shll
adc
xchg
hlt
sub
cli
push
and
lods
clc
cmc
dec
lret
inc
lods
pusha
push
fcompl
cmpsl
ja
add
imul
lret
addb
ret
xchg
mov
popa
mov
dec
add
das
stos
in
and
pop
and
inc
andb
nop
popf
add
test
lret
lcall
es
dec
mov
xchg
pop
bound
or
push
sub
pusha
stos
hlt
dec
mov
add
leave
cld
jae
mov
ja
mov
cwtl
in
js
xor
xchg
sub
ljmp
xchg
test
cmpsl
add
cmp
and
insl
in
icebp
push
movsb
std
and
xor
sarb
add
cmp
jecxz
sbb
fwait
dec
push
pop
cmc
dec
xchg
inc
inc
incl
das
fmull
adc
loop
inc
lcall
or
xlat
lcall
mov
sbb
xor
xor
inc
add
insb
outsb
cmp
hlt
rolb
add
pop
bound
add
and
xor
or
rcrl
daa
or
adc
ljmp
jbe
xor
lods
lret
out
cmpsb
mov
or
xor
add
mulb
sbb
aas
ds
andb
popa
pop
pop
add
sub
popa
cmpsl
jg
setne
mov
xchg
jp
vmovsd
adc
mov
jb
mov
inc
call
and
cmp
cwtl
add
add
stc
and
stos
in
add
and
dec
xchg
cmp
lahf
leave
push
xor
jns
cmp
cli
xchg
sub
les
xor
test
or
mov
adc
out
add
push
jae
cmpsl
add
sub
test
add
pusha
jno
jmp
lret
sbb
dec
shll
and
aam
stc
xlat
inc
ret
mov
push
pop
push
pop
add
fdivrp
shrb
test
add
xor
scas
in
add
cmp
popa
add
jmp
clc
shrd
stos
add
inc
cmp
add
dec
mov
inc
sub
and
add
cmpl
jae
sbb
test
add
add
sub
and
orl
popa
fiaddl
sbb
insb
adc
bound
jg
xchg
mov
sbb
mov
sahf
daa
mov
push
lods
push
rcrl
lock
test
add
mov
cmpsl
jecxz
inc
aam
push
lret
dec
sbb
mov
pop
call
lcall
mov
shrl
rcr
sub
add
loopne
dec
push
add
and
sbb
out
les
mov
jno
int
lock
aad
and
movsb
mov
cmp
mov
jmp
mov
daa
jl
mov
sbb
jb
shl
dec
cs
call
cltd
and
jnp
repz
fs
icebp
ret
filds
inc
push
cli
jle
subl
loope
imul
orl
test
in
sahf
dec
add
add
mov
lea
jecxz
add
pop
les
fs
inc
xor
ds
pop
imull
jmp
mov
cmpsb
or
mov
jmp
or
data16
dec
xchg
hlt
xor
cmp
pushf
pop
hlt
jecxz
mov
mov
aaa
mov
adc
push
outsb
arpl
inc
mov
pop
hlt
enter
in
mov
xchg
popa
ret
sti
mov
add
cwtl
shlb
add
enter
mov
ret
scas
mov
add
shrl
dec
xchg
add
in
cmc
jnp
sbb
in
push
lods
test
cmp
add
cmpsb
and
sbb
clc
jns
test
test
insb
xchg
cmpsl
jnp
adc
enter
pop
jle
das
add
pop
xor
and
xchg
xchg
jl
mov
inc
cld
aam
or
and
lods
pop
mov
and
pusha
dec
mov
in
xchg
push
hlt
aad
in
aam
add
mov
inc
nop
push
add
aam
mov
push
push
or
inc
les
repz
ss
cmp
xor
scas
mov
les
addb
pop
dec
leave
lods
incb
rorl
mov
add
shrb
test
xchg
mov
inc
rolb
rcl
lcall
insb
loopne
inc
decl
nop
gs
imul
loope
add
in
mov
std
jl
fdivl
in
and
div
xchg
fs
sub
mov
add
mov
and
in
cli
fs
adc
add
adc
push
aaa
sahf
or
mov
fst
fidivrl
loop
sub
add
cmc
jle
arpl
flds
sub
inc
cmp
and
xor
jo
aas
in
mov
mov
pop
add
jecxz
fsubrl
or
mov
mov
pop
lea
sbb
ljmp
lds
jle
negb
xchg
clc
mov
sbbl
push
push
adc
or
shll
std
push
add
clc
icebp
jecxz
outsb
jnp
add
add
out
addr16
in
imul
aad
mov
pushf
cmp
add
dec
xor
cmp
cmpsb
cmp
xchg
add
jnp
cltd
mov
dec
std
sbbb
sbb
cmpsb
shl
jne
je
and
xor
rcrb
hlt
mov
mov
xlat
or
add
mov
inc
pop
jle
std
and
test
xor
mov
jl
inc
xchg
rcrl
add
jp
jmp
orb
cld
into
in
jmp
lock
sbb
int
mov
idivb
je
inc
sub
fdivrs
add
insb
cmp
push
pop
push
jno
pop
add
test
mov
mov
rclb
sbb
mov
int
ljmp
inc
mov
clc
cmc
xchg
mov
add
mov
pop
push
push
jns
aas
or
add
stos
or
add
es
and
dec
xchg
add
lcall
out
cmp
add
inc
jnp
fwait
push
testb
in
mov
in
shl
imul
dec
js
adc
int3
add
ror
mov
add
lahf
cld
mov
ljmp
mov
and
das
movsl
out
lds
out
mov
mov
jns
lods
push
push
sub
dec
and
push
outsb
mov
enter
mov
add
lea
push
sti
loope
rcrb
or
push
lods
dec
and
and
add
leave
loop
xchg
sub
mov
push
rolb
aas
add
mov
mov
mov
sub
mov
add
sub
mov
add
movsb
in
and
inc
hlt
add
scas
sub
inc
sbb
sub
xor
jmp
jmp
mov
pop
sarl
dec
cmpsb
lds
cwtl
out
pop
xchg
pop
lock
xlat
cmc
xchg
rcll
test
mov
ljmp
push
sbb
lock
sbb
adc
mov
cmc
rcrb
jecxz
sub
cwtl
jp
xor
ss
movsb
adc
nop
add
cmp
jecxz
xchg
xchg
xchg
sbb
add
dec
cmp
cld
arpl
push
fs
aaa
mov
stos
stos
test
inc
cmp
or
lock
xchg
cmp
sub
insl
notrack
jno
pusha
popf
push
jns
sbb
stos
daa
and
xchg
call
adc
jp
mov
outsl
scas
pop
test
inc
subb
jmp
lods
cmp
mov
add
out
pop
or
leave
scas
jg
sub
rcrl
call
add
out
shlb
or
ds
popa
inc
push
add
push
lcall
lods
mov
add
cmp
xlat
fiaddl
rcl
cmp
fs
test
jb
dec
aas
and
stos
cmp
pop
inc
inc
dec
add
lods
add
aas
pushf
les
mov
add
insl
ljmp
or
mull
jmp
mov
lods
pop
sbb
inc
push
orl
hlt
mov
inc
xor
leave
sub
jmp
sub
popf
add
pop
pop
testl
sbb
or
clc
cmp
xchg
jp
aam
dec
shrl
lret
mov
les
or
in
aad
pop
cmp
daa
push
xchg
inc
xor
inc
call
fldl
mov
rclb
outsl
shrb
add
xchg
cmpsl
out
stos
cld
enter
lods
dec
push
loope
dec
add
stos
ret
add
mov
jne
insl
add
push
cmpsb
out
cmp
push
in
sti
xchg
loop
mov
bound
mov
xor
add
mov
cmp
lods
test
loopne
xor
pop
ljmp
negb
fildll
outsl
cwtl
stos
sbb
add
nop
cmp
adc
jge
mov
and
push
jle
or
add
mov
adc
addl
xchg
icebp
in
cmpsb
ljmp
roll
mov
adcb
dec
fwait
inc
lret
pushf
adcl
or
pusha
and
dec
add
inc
push
cmp
xor
mov
and
push
in
into
stos
cmpl
mov
mov
and
dec
mov
push
adc
fwait
add
jp
pop
add
mov
movsl
les
add
xor
incb
push
hlt
stos
dec
mov
cs
or
jg
push
add
push
mov
add
lds
fdivrs
call
punpckldq
in
stc
shlb
loope
in
arpl
add
fcoml
cmp
scas
testl
bound
rcrl
hlt
pop
push
test
or
test
add
mov
adc
in
aam
sbb
outsb
sbb
js
add
addr16
mov
je
push
jecxz
xor
xor
dec
fs
inc
loop
loope
add
lahf
sbb
gs
pop
inc
adc
ja
cld
mov
std
jno
pop
inc
mov
mov
pop
inc
mov
insl
cmp
scas
pop
scas
dec
xlat
inc
xchg
push
bound
ds
dec
sbb
sbb
in
je
andl
jo
jge
imul
inc
std
mov
push
ljmp
out
cmp
push
lock
jne
inc
adc
push
sbb
mov
cmpsb
xor
repnz
nop
movsl
enter
pop
add
cld
xchg
cmc
push
add
jb
shlb
sbb
in
add
lret
scas
lcall
mov
dec
incl
push
rorb
push
dec
lock
lds
push
or
xchg
adc
add
xlat
scas
stos
add
pop
cmp
jg
cmc
sbb
pop
mov
add
dec
inc
mov
sbb
fs
add
jnp
jecxz
and
xchg
jle
push
mov
lahf
repz
adc
fs
scas
add
sbb
es
gs
in
addr16
and
pop
inc
and
in
jno
inc
dec
or
call
aas
inc
mov
test
add
mov
dec
cli
sub
movsb
and
mov
mov
inc
push
xor
dec
cmpsb
ret
hlt
out
es
shlb
shrl
pop
imul
add
gs
ja
dec
adc
fnstenv
movsl
test
ret
jge
sbb
shll
dec
cwtl
std
loop
divb
add
add
dec
or
aad
les
dec
add
fcompl
ljmp
xor
push
xorl
pop
pop
push
jp
test
scas
jl
loope
add
push
cld
stos
xchg
dec
pop
push
sbb
adc
adc
pop
insb
lret
jp
in
jecxz
repz
add
fisttps
add
cltd
ret
imul
jne
repnz
and
cwtl
add
out
cmc
sub
js
mov
test
outsl
add
gs
popa
out
and
fucomip
mov
scas
repz
lds
add
jnp
mov
dec
and
pop
cwtl
adc
pop
xchg
in
ret
xorb
mov
mov
daa
add
es
add
and
mov
sub
lods
xchg
mov
adc
fiadds
dec
jns
lds
in
imul
fwait
xchg
xchg
stos
movsl
cmp
cltd
inc
and
inc
in
lcall
jmp
xor
xchg
es
mov
mov
std
and
not
dec
lock
out
mov
pop
add
aas
mov
push
add
mov
add
inc
cmc
es
push
mov
ljmp
jmp
dec
pop
jge
jo
in
call
lods
rorb
mov
sub
push
add
jns
and
cld
icebp
rolb
xchg
mov
cmpsb
into
xlat
adc
mov
add
movsb
dec
mov
mov
addl
out
or
jg
xchg
push
fdiv
or
pop
pop
add
out
sub
or
cld
cwtl
pop
decl
sub
into
mov
xchg
mov
add
pop
or
jb
add
out
pop
adc
popl
mov
add
adc
jmp
faddl
les
out
out
inc
mov
push
jmp
xchg
cmpl
cmc
jecxz
in
pop
std
lret
lock
mov
xor
push
es
arpl
sahf
mov
inc
add
out
mov
out
push
je
testl
add
addr16
dec
xor
add
xchg
xor
push
bound
cwtl
in
in
loop
enter
adc
cltd
sub
lret
and
add
mov
popa
xor
mov
jp
cmp
sbb
dec
and
adc
pop
cmpl
loope
mov
iret
and
xor
roll
inc
xor
in
mov
gs
mov
sub
add
mov
imul
fsubl
jge
jno
cmp
xchg
sub
imull
xor
js
push
imul
outsb
pop
ljmp
xchg
mov
cmp
pop
mull
jle
inc
add
mov
jae
aad
add
arpl
jl
jno
fadds
psubw
int
fs
cli
ja
or
push
jo
daa
sbbb
add
mov
lahf
pop
aas
add
mov
fdivl
lcall
lods
in
push
lret
pop
jecxz
xchg
aaa
inc
adc
add
in
movsb
clc
xlat
sub
in
dec
js
or
fsts
inc
mov
outsl
xchg
add
add
or
and
add
ljmp
rorb
pop
pusha
sbb
movsb
mov
inc
adc
addb
shrb
cmpsl
ret
arpl
pop
add
inc
add
fdivs
cwtl
out
adc
lcall
cmp
add
scas
sbb
add
lret
push
jg
add
test
cld
subb
mov
xchg
push
xchg
dec
ss
enter
jle
imul
push
and
add
or
add
jo
inc
lods
dec
roll
mov
mov
cmp
push
cmpsl
cli
or
or
imul
jecxz
gs
and
movsl
dec
hlt
mov
pop
inc
das
adc
aaa
pop
dec
push
sub
shr
in
cld
mov
sbb
pop
add
arpl
shll
add
das
int
xor
dec
sub
mov
mov
outsb
sbb
fldcw
xor
cld
addr16
and
in
xchg
data16
lds
cltd
and
rolb
jne
outsb
cld
sarl
add
pop
addr16
mov
or
mov
int3
mov
push
xor
hlt
xchg
les
loop
lret
out
test
add
xchg
sub
into
jb
xchg
fs
ljmp
fisubrs
mov
cld
cmp
push
test
or
xor
ret
popa
popl
adc
mov
dec
in
psllw
mov
loope
adcl
pop
xor
add
xor
test
decl
pop
add
jne
ret
jp
push
nop
hlt
es
jecxz
pop
sbb
cld
lods
mov
addl
xchg
add
push
push
sub
popf
das
ret
inc
cmp
std
fstpl
es
shll
add
or
cmpsb
add
mov
fisttpl
loopne
scas
sbb
test
jno
mov
or
jns
mov
sub
add
outsb
adc
or
add
out
outsl
jg
lahf
push
adc
punpckhwd
add
inc
cld
daa
push
call
push
out
inc
sbb
cmc
aad
cmp
pop
sub
mov
das
mov
pop
popa
lods
pusha
insl
nop
or
sbb
and
mov
jnp
aas
and
xor
cmp
mov
dec
mov
scas
mov
je
add
mov
pusha
ds
lahf
xlat
cmp
leave
daa
std
mov
call
xchg
jns
lahf
xchg
roll
cmp
xor
push
aad
mov
sti
cmp
push
add
int
ds
mov
orl
sub
push
hlt
pop
sbb
into
loopne
add
out
push
frstor
cld
and
and
outsl
repnz
mov
sbb
lock
daa
or
xchg
xor
lcall
imul
add
stos
test
or
dec
cmp
test
test
push
iret
cltd
vunpckhps
xor
mov
loope
sbb
sbb
mov
xor
dec
cmp
add
or
cmp
aas
sub
call
aad
cld
add
xchg
push
sti
sub
adc
jl
sub
inc
sar
andb
loopne
in
and
xchg
or
dec
stos
mov
pop
test
pop
sub
hlt
out
push
test
inc
cmp
jb
jecxz
inc
xor
fmulp
push
shl
out
andb
sbbl
lea
adc
das
add
jmp
dec
loopne
jle
cld
xchg
add
push
or
aam
nop
and
pop
inc
pop
sbbl
lods
add
or
adc
dec
adc
add
sarb
xchg
js
cmp
push
inc
jbe
shll
dec
test
je
push
cmp
jl
js
out
mov
or
lea
mov
push
add
mov
je
mov
std
mov
incl
iret
sti
jmp
fistpl
ret
addl
add
add
sbbl
out
addr16
inc
pop
sub
jecxz
jl
je
pusha
add
mov
xchg
shrb
inc
inc
fcoml
loopne
sbb
aaa
test
add
cltd
add
hlt
ret
push
cmc
sub
andb
inc
adc
add
mov
jb
ss
sbb
stos
cwtl
adc
push
in
leave
push
push
push
add
xchg
mov
adc
cwtl
aam
pop
pop
subb
lods
mov
testb
xchg
pop
shll
pop
dec
add
jecxz
push
enter
or
mov
sub
nop
mov
push
insb
add
inc
mov
jle
sbb
cwtl
dec
icebp
or
outsb
sbbl
fsubs
jecxz
inc
push
or
xchg
pop
xchg
out
push
enter
ret
mov
int
add
je
int3
lds
bound
inc
mov
repz
mov
adc
data16
cmpsb
outsl
add
and
in
cmp
adc
xchg
cltd
nop
loop
mov
ss
pop
decl
in
dec
inc
les
dec
orl
pop
sub
xor
add
in
aad
fisttps
outsb
add
lea
call
xchg
and
adc
add
daa
adc
xchg
mov
test
add
jns
sub
dec
xlat
xchg
out
add
jmp
ret
sbb
pop
inc
inc
add
adc
jge
push
adc
rorl
scas
adc
addr16
and
fstl
nop
addb
mov
push
arpl
daa
pop
std
or
cmpsb
add
jnp
movsl
das
xchg
popa
jecxz
pusha
add
int3
ret
rorl
arpl
add
sbb
outsl
add
jo
out
in
add
and
scas
adc
scas
or
hlt
inc
imul
xor
pop
movl
pop
xchg
fwait
xor
cmpl
push
int3
lcall
sub
mov
sbb
bound
leave
xchg
add
test
add
or
add
in
xor
xchg
loope
or
mov
mov
sbb
pop
pop
shl
sub
ja
clc
mov
arpl
aad
xor
hlt
jnp
mov
sahf
sbbb
sbb
add
and
inc
dec
mov
jecxz
jmp
clc
push
adc
js
cwtl
fcmovnb
adcl
inc
push
int
rcl
cld
jo
xchg
sbb
mov
add
sti
out
cld
push
dec
popf
jp
lods
add
mov
jle
addr16
pop
xchg
sub
add
hlt
sbb
repz
imul
out
nop
dec
cmpsl
ret
inc
or
lahf
push
mov
add
jmp
mov
mov
dec
clc
fsubrs
push
push
lods
add
mov
dec
add
incl
call
or
mov
lods
icebp
pop
shll
mov
imul
imul
jmp
es
cmp
inc
loop
mov
sbb
stos
outsb
nop
stc
mov
jl
loop
jmp
xor
sbb
add
ret
cwtl
fildll
decb
add
in
dec
pop
flds
ffreep
and
cmc
loope
in
and
add
mov
xlat
inc
sbb
add
icebp
mov
cld
xor
xor
sbb
push
sbb
mov
imul
xchg
cld
cmp
xor
stc
adcl
imulb
enter
mov
repnz
int3
mov
mov
pop
jae
loope
sahf
and
mov
inc
and
cmp
and
xor
or
push
push
push
add
loopne
mov
mov
test
mov
jg
dec
adc
ret
subb
lahf
sub
mov
cld
xor
mov
movswl
add
dec
inc
movb
out
or
out
fs
pop
popf
add
xor
pop
mov
add
or
cmc
lahf
pop
orl
inc
clc
mov
adc
cmp
stos
lcall
and
jns
xchg
inc
inc
ds
jmp
add
jl
pop
loope
pop
dec
add
fbld
out
jnp
mov
xchg
sbbb
sub
pop
loop
imul
mov
movsb
xchg
inc
icebp
mov
je
mov
add
push
cmpsb
scas
and
rcrl
fsubp
leave
mov
out
xlat
push
lret
sbb
into
clc
inc
mov
add
xchg
int3
iret
gs
add
jl
in
int
ret
adc
aas
xchg
popf
fidivl
roll
xor
lods
cld
sbb
push
push
daa
shrl
jbe
push
jecxz
lock
outsb
xchg
sbb
add
mov
jp
fcoms
add
pop
xor
test
outsl
adc
push
or
mov
jl
jge
lods
sub
arpl
add
sbb
int3
mov
lods
cli
pop
ret
jle
xor
hlt
in
in
aam
cmpl
fsubl
scas
std
mov
shr
cmp
xchg
or
dec
push
mov
jae
push
dec
loop
mov
inc
hlt
xor
lcall
inc
add
mov
fs
jmp
xchg
filds
sarl
cmp
daa
inc
cltd
nop
movsl
add
xlat
popf
jle
mov
dec
shll
orl
test
mov
cmp
into
push
push
inc
imul
cmp
lds
lea
xlat
xor
or
add
test
cmpsb
mov
cmp
add
stos
lret
adc
sbb
and
fcomps
and
pop
and
in
xlat
adc
pushf
pop
jno
lea
inc
daa
push
lret
inc
cltd
ficomps
out
pop
inc
insl
xchg
mov
loop
cmp
mov
loopne
testb
pop
stos
mov
enter
inc
or
pop
das
push
add
lret
push
lret
push
decb
xchg
dec
scas
adcl
inc
lcall
mov
inc
inc
add
aam
push
ja
iret
sub
sti
addb
xchg
ljmp
out
rcl
cmp
xchg
or
add
mov
add
leave
fistps
sub
add
mov
add
mov
xchg
filds
scas
pop
jmp
stos
push
lock
aas
enter
jnp
add
dec
rorb
or
iret
test
xor
push
add
push
sub
mov
cltd
xorl
mov
test
lcall
les
hlt
inc
mov
fsubr
add
rcl
outsb
sbb
add
jne
hlt
enter
add
jbe
in
fnstsw
cmp
push
jl
mov
fdivrp
sbb
dec
movsb
dec
add
sbb
pop
add
jl
in
fldz
add
jns
mov
jne
aam
or
or
add
add
sbb
ljmp
dec
sub
adc
fnsave
jmp
ret
jmp
in
out
lcall
insl
orl
add
push
jle
out
jno
jns
icebp
aad
bound
sub
add
jp
dec
sbb
dec
jmp
and
cmpsb
pop
jecxz
add
mov
mov
or
mov
cmp
cmpsl
lcall
adc
add
es
add
cmp
add
je
add
in
hlt
xor
or
mov
sahf
sbb
cld
jbe
std
sub
jno
lods
add
aas
sbb
into
xchg
bound
cmp
inc
adc
jae
stos
push
cld
lock
neg
pop
ljmp
pop
xchg
clc
push
in
add
rolb
lods
mov
and
cld
mov
pop
stos
filds
rdtscp
jae
movsb
push
das
shll
add
dec
add
hlt
mov
loope
cmp
imul
fs
ret
popa
adc
add
jbe
mov
js
cld
push
shl
add
lods
popa
xchg
adc
call
pop
jg
jge
cmp
xchg
jae
cld
clc
xchg
and
out
enter
pop
dec
js
add
fldt
insl
pop
xchg
adc
loopne
dec
sbb
or
negl
add
or
add
add
andb
leave
fs
std
sbb
dec
repnz
jmp
out
add
jne
aaa
push
adc
or
inc
outsl
hlt
sahf
cmp
mov
hlt
sbb
mov
and
add
popf
clc
add
inc
mov
jg
call
or
add
push
dec
int3
dec
jns
loope
hlt
inc
xor
sahf
cmpsl
pop
subb
jge
shrb
or
mov
inc
xchg
xchg
mov
or
push
cmp
out
in
clc
and
push
test
jnp
cli
jge
mov
addb
pop
or
push
mov
cmpsb
jae
out
add
jo
test
dec
test
sti
mov
cmc
sub
les
cltd
repnz
inc
pop
test
ds
out
cmp
mov
add
pusha
push
mov
and
mov
cld
mov
push
inc
xchg
add
add
pop
lea
daa
ss
int
icebp
in
jge
pop
and
mov
adc
add
xchg
add
adc
add
and
adc
cmp
dec
mov
aad
out
ficoms
sub
mov
in
enter
add
or
sbb
and
mov
adc
sahf
out
inc
insb
lock
mov
aaa
push
pop
mov
ds
call
add
jnp
lods
cmp
mov
add
divb
add
push
sahf
inc
ret
add
mov
lret
rolb
ud1
aas
add
sub
xchg
or
adc
add
inc
pop
or
push
mov
jmp
incb
shlb
push
arpl
loop
xor
std
xchg
enter
inc
in
add
xchg
sbb
cmp
jb
push
pop
mov
pop
cli
gs
je
add
fs
lret
iret
jg
inc
mov
adc
loop
int3
sbb
dec
xchg
or
in
xorb
sub
ds
pushl
dec
and
mov
mov
mov
mov
insl
mov
mov
xor
imul
xchg
mov
repnz
add
pop
lock
mov
pop
add
xchg
not
in
adc
xchg
or
test
pop
mov
imul
mov
mov
fildl
ret
orl
outsl
or
mov
lahf
stos
lret
incl
sub
aam
push
add
xchg
dec
dec
jp
cmp
add
es
loopne
js
push
add
inc
test
mov
xor
repz
mov
daa
lret
data16
in
loope
js
add
sbb
testl
push
inc
popf
dec
or
mov
mov
sub
mov
jge
pop
jl
into
add
mov
ljmp
out
in
mov
pushf
and
inc
mov
sbb
add
push
leave
cmp
cld
nop
test
ret
pusha
add
bound
fimuls
mov
push
outsb
das
outsl
inc
shll
pop
pop
ds
enter
add
cmpsl
popa
jnp
add
faddp
scas
xchg
cli
sub
mov
cmp
add
add
inc
adc
and
lea
iret
jb
push
add
mov
adc
inc
hlt
dec
mov
shrl
add
fs
imul
xlat
cltd
paddsw
mov
into
je
jmp
or
dec
mov
and
sub
movsl
clc
sahf
inc
lods
mov
inc
jp
or
adc
insb
add
imul
cld
dec
push
bound
test
add
clc
loope
sbb
add
cltd
pop
cwtl
test
push
leave
add
jne
jp
adc
aaa
push
addb
in
pop
add
leave
fildl
inc
stos
sbb
fists
dec
sti
cs
call
add
mov
sbb
add
and
inc
ds
rolb
ret
pop
cld
sarb
inc
iret
inc
in
jno
leave
add
add
xor
iret
ja
jl
popa
push
jb
add
dec
rolb
or
jno
loopne
lea
push
push
pop
mov
nop
leave
aaa
add
push
push
stos
add
xchg
iret
xchg
add
shlb
xchg
call
test
test
dec
and
and
mov
nop
in
mov
inc
add
fs
cmc
xor
add
mov
cli
adc
cwtl
mov
sub
or
out
mov
jmp
mov
add
lds
loope
outsl
mov
or
or
xlat
add
shll
cmp
lods
cltd
mov
jae
xchg
cmpsl
out
lds
add
pop
dec
pop
cmpsb
sub
and
sbb
cld
ja
or
mov
roll
imul
das
sub
push
mov
movsl
inc
dec
sub
sbbl
inc
popa
jmp
xchg
lea
js
iret
popa
xchg
fldl
sarb
push
pop
fmulp
mov
jge
mov
mov
aas
aas
mov
imul
fs
outsl
out
std
cmp
cmc
xchg
or
cmp
jmp
inc
out
outsl
cs
xchg
int
imul
andl
push
ret
popa
add
xor
xchg
cld
jo
icebp
sbbb
sbb
dec
add
add
fnstcw
sar
pop
cmp
and
or
push
cmpsl
lock
xchg
loope
add
fsub
jne
jg
hlt
cmp
jecxz
out
cmpsl
insb
sub
repnz
gs
and
sbb
dec
rolb
nop
cmp
and
push
jnp
mov
jmp
mov
xor
out
in
add
lods
stos
and
negl
xor
xchg
fcomip
inc
jnp
sub
and
out
cmp
dec
repz
orl
hlt
fwait
cwtl
mov
cld
jno
xchg
shrb
insb
add
hlt
outsl
and
sbb
mov
gs
testb
dec
cli
jmp
jnp
sbb
inc
mov
mov
fld
add
aaa
inc
push
fimull
shr
add
xor
ljmp
xor
or
loopne
cld
xchg
inc
lret
out
repz
mov
notb
mov
out
jmp
pop
mov
jl
das
lea
inc
inc
pop
pop
add
pop
cltd
imul
xchg
mov
cs
sbb
jl
sahf
add
push
cmpsl
cld
cli
mov
add
outsl
jg
lret
add
ljmp
and
dec
pop
fcoms
aas
add
stos
and
cld
subl
xor
xchg
cmp
push
pop
out
mov
aam
mov
adc
fisttps
aaa
adc
add
inc
fsubs
rclb
inc
js
lock
or
mov
add
sbb
mov
aaa
add
add
ja
xor
cmp
jo
out
add
dec
nop
xchg
inc
dec
add
fs
aam
movsl
sub
scas
adc
aas
int
sub
inc
add
dec
dec
addl
shld
xor
sub
imul
xchg
mov
add
hlt
mov
sub
inc
insl
xor
add
test
mov
jne
je
pop
pop
xchg
pop
add
jnp
mov
jle
xor
test
fucomi
repnz
shr
fimuls
mov
dec
add
add
mov
in
test
imul
ljmp
orl
mov
fmul
jbe
push
xor
and
add
fbstp
adc
das
sub
jecxz
mov
adc
cmp
add
addr16
add
cmc
mov
xor
negb
negl
lret
push
lahf
or
lock
shlb
frstor
jne
cmp
lcall
mov
add
jecxz
mov
add
or
hlt
out
imul
mov
pop
repz
fs
add
push
dec
sbb
or
insb
push
sub
xchg
add
or
xchg
pop
dec
add
adc
lret
xor
rep
out
dec
hlt
cli
xchg
and
add
inc
mov
insb
ljmp
sbb
sub
pop
test
bound
nop
jp
mov
cmp
cmp
cmp
mov
lods
adc
ss
jmp
xor
adc
or
flds
imul
and
loope
cltd
sbb
rol
mov
js
or
mov
decl
xchg
movsb
inc
mov
fildl
dec
cld
stos
add
insl
push
fisubl
cmp
call
bound
hlt
jo
jno
pop
adc
out
loope
inc
add
add
in
mov
sbb
int3
sub
cmp
or
pop
sahf
pop
jg
pop
xchg
adc
addr16
add
imul
out
push
fadd
lcall
sub
xchg
xor
inc
js
shlb
int
sbb
cld
fisubl
ja
aam
incl
cld
pop
into
das
push
jmp
mov
int3
sbb
sub
insl
in
imul
cmp
jae
call
clc
cmp
add
in
movl
addr16
xchg
pop
push
adc
or
and
add
icebp
adc
xor
incl
and
push
into
test
popa
xchg
fiaddl
aam
add
xchg
fwait
mov
sbb
flds
daa
loop
sub
add
stc
mov
popa
or
pop
inc
jp
dec
mov
repnz
leave
insl
cld
add
stos
ljmp
das
xchg
aad
mov
das
aas
cmpl
iret
cli
push
sub
add
jbe
adc
xchg
add
jge
xchg
xchg
daa
enter
push
shrl
cmp
sub
pop
adc
clc
add
scas
dec
push
adc
add
push
rclb
add
pop
mov
fdivs
pop
sbb
adc
lcall
mov
push
rol
add
ss
leave
imul
jg
shr
jno
mov
add
mov
add
leave
xlat
js
testl
lods
pop
into
push
insb
push
mov
lret
add
or
push
bound
loope
mov
xor
add
and
inc
mov
push
cmpsl
push
in
loopne
pop
mov
jmp
in
scas
ljmp
add
cwtl
xchg
jne
mov
inc
add
sub
stc
add
in
push
sti
mov
xchg
add
pop
xchg
xor
and
hlt
fwait
clc
orl
popa
jmp
pop
hlt
loop
enter
nop
in
dec
sub
dec
jg
inc
pop
jb
sub
xchg
pop
mov
adc
inc
js
mov
data16
movsl
dec
mov
mov
add
cmpsb
pop
das
jmp
sarb
push
mov
cmp
pop
icebp
jg
cmp
es
add
mov
scas
frstor
inc
xchg
cmp
ds
rorb
andl
sbb
movsb
xorl
dec
mov
pop
dec
add
add
ret
psllw
test
cmp
insb
out
cltd
call
mov
pop
add
xchg
push
or
daa
add
int
xchg
dec
jns
sbb
dec
rorl
shlb
scas
gs
icebp
push
pop
stos
orb
roll
int3
inc
in
jecxz
xor
jb
xor
mov
hlt
aas
js
subl
lds
jg
xor
adc
add
lods
push
shll
mov
pop
lret
jo
dec
mov
movsb
xor
ror
jnp
inc
adc
test
popl
bnd
jns
mov
test
push
xchg
out
cmp
xor
mov
shl
add
mov
dec
aas
or
adc
push
pushf
subb
dec
push
pop
inc
lock
and
mov
push
fildl
pop
pop
push
jmp
sub
mov
inc
cmc
test
add
dec
xchg
inc
ss
cmp
seto
dec
add
push
data16
scas
jb
xor
ljmp
mov
add
cmp
scas
loope
mov
xchg
mov
mov
ret
fs
loopne
adc
mov
xchg
hlt
push
push
lcall
and
in
aam
xor
in
inc
pavgw
inc
xchg
cld
imul
add
jne
dec
cmp
dec
jl
mov
push
xor
push
pop
and
ret
jle
mov
add
adc
dec
add
int
mov
push
cmp
add
cmc
add
aam
cmpsb
mov
mov
fnsave
inc
out
inc
add
cltd
xor
mov
cmp
mov
ret
inc
arpl
push
addl
imul
in
sub
lret
and
sbb
mov
in
xor
ret
push
cli
stos
clc
inc
je
sub
xchg
inc
adc
leave
cld
lahf
sub
jae
jmp
push
add
fcmovnu
roll
pop
cmp
arpl
add
addb
add
fwait
or
ret
shll
movl
sub
out
mov
sti
jle
dec
pop
add
mov
das
scas
adc
and
pushf
add
push
add
stos
stos
or
enter
adc
out
mov
xor
xor
inc
xor
aam
push
ds
inc
mov
fs
movsb
mov
loopne
popa
add
or
add
xchg
mov
outsl
and
xor
stos
arpl
ljmp
inc
jne
xor
adc
adc
test
aam
xchg
je
clc
frstor
mov
cltd
add
call
inc
xchg
out
stc
cmp
or
sbb
jmp
sbb
add
test
xchg
clc
mov
inc
xchg
rorl
jb
dec
pushf
add
or
test
xchg
add
dec
jno
push
hlt
jbe
sbb
cmp
dec
adc
lock
pusha
imul
out
cmpsb
cmc
mov
add
dec
nop
gs
pop
pop
jecxz
cli
inc
add
sub
xchg
cld
add
fsubr
mov
imul
in
fwait
push
jg
clc
add
pop
sub
add
push
nop
or
in
outsw
ljmp
xchg
add
mov
cmp
inc
add
mov
xor
into
not
pop
mov
imul
stos
sbb
add
divb
add
test
cmp
hlt
cmp
sbb
add
pmullw
pop
adc
adc
idivl
into
iret
filds
jae
cmp
cld
lods
outsb
adc
cmpsb
xchg
out
add
pop
sub
push
mov
mov
cli
xchg
dec
lds
clc
xor
mov
inc
add
pop
push
dec
int
incl
add
adc
jp
les
add
insl
add
sbb
cmp
pop
jle
xchg
add
push
shrb
mov
and
out
push
sub
lods
mov
out
std
ret
sub
or
lcall
stos
mov
enter
jl
test
cmpsb
fisttps
add
stos
mov
cmpsb
in
add
shrb
jp
add
ja
cmp
arpl
add
xchg
sbb
add
test
mov
outsb
mov
xchg
jmp
or
pop
ret
popa
mov
add
xor
subl
add
push
jnp
aaa
add
mov
or
adc
jmp
ljmp
xor
pop
stc
and
lahf
out
lcall
push
ja
xchg
add
vorps
outsb
add
mov
pop
push
imul
xor
decb
mov
pop
lcall
loope
add
mov
pop
xor
dec
clc
das
lcall
cmp
or
repnz
leave
jecxz
ret
add
sbb
arpl
jne
mov
lds
lock
sbbl
jge
pop
inc
or
std
les
fadds
lds
adc
fwait
and
nop
push
xchg
or
inc
jb
add
or
or
pop
dec
mov
jb
inc
push
ja
in
out
daa
xchg
lods
mov
pop
pop
push
dec
add
scas
cwtl
in
xor
std
adc
out
mov
and
pop
insb
adc
loope
cwtl
orb
lahf
icebp
daa
stc
dec
inc
data16
pop
rcll
adc
inc
mov
pop
dec
aam
jge
sbb
repnz
arpl
inc
push
cmp
cmc
dec
lahf
adc
mov
orl
cld
add
mov
adc
stc
push
adc
mov
movl
jl
push
push
insl
and
jns
add
mov
enter
xorl
in
jnp
sub
adc
push
shr
hlt
or
dec
push
mov
mov
xchg
iret
sahf
mov
in
add
ds
arpl
outsl
jns
add
jo
ret
fcoml
dec
mov
add
shl
mov
lret
outsb
add
mov
mov
into
ljmp
iret
ja
out
dec
shrl
decl
xlat
pop
out
xchg
popa
add
add
in
dec
pop
mov
lock
add
mov
push
xor
aas
xchg
cltd
sbb
and
aas
push
outsl
cwtl
adc
aaa
ss
mov
stc
imul
out
cmp
aad
nop
inc
gs
add
bound
mov
dec
test
subb
and
dec
shll
or
das
push
add
mov
not
hlt
inc
leave
enter
or
add
dec
mov
cmp
sbb
sub
movsl
add
xor
out
sbb
xchg
push
mov
xchg
push
add
xor
mov
hlt
clc
stos
addr16
loope
sbb
adc
jo
jb
movsl
pop
int3
arpl
fstpl
es
in
inc
rorl
add
hlt
mov
dec
cwtl
add
xor
fwait
pop
xchg
je
add
mov
adc
add
in
push
dec
or
fsubrp
lods
inc
gs
fcmovne
imul
daa
dec
add
mov
sahf
push
stos
lcall
dec
imul
adc
daa
pop
xor
or
stos
std
jns
push
sub
cld
leave
fdivrs
pop
push
add
stos
sbb
in
sub
xor
aam
lds
push
dec
aaa
push
imul
fucomip
bnd
in
add
push
jo
and
add
pop
imul
jmp
inc
dec
and
mov
enter
inc
icebp
out
cld
xchg
xchg
scas
mov
add
fisubs
cmp
and
push
xor
jne
iret
mov
ret
cli
pop
inc
inc
mov
lea
inc
das
repz
adc
clc
mov
xchg
push
gs
and
dec
adc
push
loop
stos
mov
cltd
cmp
in
push
repnz
scas
xchg
hlt
push
sub
fidivl
jl
movaps
push
add
fistpll
mov
shl
dec
push
jmp
test
into
mov
sbb
sarb
mov
xorb
mov
rcr
and
inc
fs
sub
ljmp
or
or
mov
add
lods
xor
push
push
add
into
lret
aad
xchg
or
lea
cmp
loop
and
xor
pusha
add
sbb
jl
packsswb
mov
enter
adcb
sub
imul
test
addr16
jg
sub
or
adc
mov
dec
in
in
push
lret
pop
mov
mov
outsb
movsl
push
pop
inc
shr
imul
or
inc
mov
mov
cmpb
dec
mov
adc
lea
sbb
add
addb
andl
push
or
add
je
inc
jns
xor
cld
ljmp
mov
add
scas
imul
and
data16
xchg
xchg
sbb
into
add
in
sti
pop
mov
fcos
dec
incb
sub
aam
sbb
testb
add
shrd
cmp
add
and
sahf
jg
xchg
out
call
xlat
cmp
xor
mov
pop
stc
mov
aaa
jnp
push
add
jg
insb
add
outsb
loop
add
jmp
bound
mov
xor
pop
sub
add
lods
mov
outsb
enter
add
xchg
jg
out
js
xlat
mov
addl
jne
aaa
lret
mov
add
nop
push
hlt
jb
paddb
lahf
popf
mov
dec
cmp
cli
fsubl
xchg
xor
cmp
into
jbe
ljmp
lds
pop
int
xlat
in
or
lret
dec
aam
aas
sub
mov
cmc
imul
push
out
add
scas
sbb
push
xor
dec
shlb
idivb
loop
push
fdiv
dec
jo
jb
ret
lret
xchg
and
cmc
sub
mov
or
jg
jecxz
dec
sbb
add
pop
sbb
mov
out
mov
out
idivl
jl
fsubs
pop
pushf
popa
ja
xor
in
mov
add
sbb
pop
xor
xchg
xor
leave
mov
flds
imul
lock
dec
mov
and
lods
mov
cmpsl
in
test
adc
addl
jb
add
fwait
pop
pushf
mov
jae
rolb
push
fists
out
pop
sbb
dec
test
push
faddl
incl
fistl
or
add
pop
cmpsb
lods
pop
adc
add
xchg
mov
fsubrl
push
add
cmpsl
ja
sbb
adc
mov
stos
cmp
out
xchg
aas
add
push
or
cli
or
jmp
xchg
lds
jns
jge
f2xm1
sub
ja
cmp
inc
jo
mov
adc
inc
int
shrl
test
pop
lods
fsubs
into
lahf
jmp
add
ds
les
dec
movsb
lock
aad
sahf
mov
mov
add
lods
fistpll
jge
aas
jmp
mov
cli
mov
push
fiaddl
dec
aam
cld
or
ret
pop
out
sbb
loop
sbb
outsl
add
mov
or
imul
decb
enter
add
push
add
mov
push
push
mov
sbb
cmpsl
movsl
xchg
clc
sub
daa
xlat
scas
shrb
fnstenv
lods
insl
add
push
mov
add
addr16
xchg
bound
add
jno
lock
aaa
sub
shrb
mov
mov
mov
jmp
dec
jge
adc
andl
push
mov
mov
dec
addr16
xorb
or
fmull
aas
arpl
pop
repz
adc
sub
imul
pop
fisttpl
inc
incl
insl
fstp
cmpsl
push
pop
hlt
add
in
and
mov
jge
call
loope
xchg
stos
int
push
jg
rcrb
jb
add
jo
iret
and
out
in
fwait
add
xor
lea
out
fiadds
sbb
xor
dec
add
pop
cwtl
lahf
mov
invlpg
ds
pop
add
lret
movsb
je
dec
mov
sbb
dec
das
jae
dec
xchg
push
add
cmpsb
pop
sbb
cmp
fdivrs
ljmp
stos
mov
fsubp
add
jmp
out
dec
in
sbb
cs
mov
pushf
sbb
mov
loopne
xchg
push
fisttpll
add
mov
sub
xor
add
inc
fsubs
dec
dec
sarb
pop
js
jecxz
pop
je
inc
pop
inc
add
sti
push
mov
cli
mov
sub
pop
jp
repz
sbb
fucomp
jle
inc
faddp
fists
nop
dec
pop
add
xchg
sahf
pop
and
loopne
sbb
mull
out
inc
xchg
add
es
pusha
add
inc
fdivp
jbe
lret
testb
cwtl
sbb
cli
add
movsb
insb
leave
mov
lret
mov
or
in
pop
filds
arpl
add
rclb
add
outsl
inc
inc
iret
mov
test
cld
push
mov
int
clc
pop
shrl
mov
lcall
bswap
cmp
hlt
sbb
cld
lret
outsb
fidivs
mov
xchg
or
ret
inc
gs
adc
xchg
cld
loopne
pop
mov
test
in
mov
dec
dec
mov
inc
jb
add
insb
lods
gs
mov
push
lahf
sbb
ficoms
mov
jne
sub
test
movsb
call
sub
addr16
xor
sub
adc
jmp
pop
cmp
and
add
xchg
fdivrs
insl
out
mov
fmull
sub
lfs
add
sub
jo
in
fsubrl
cmc
jp
sahf
outsl
fnsave
pop
pop
ret
mov
idiv
jae
pop
jne
and
xchg
dec
pop
jl
add
push
aaa
cmp
int
add
mov
add
leave
pushl
cs
scas
and
inc
cli
cld
mov
jg
add
xlat
mov
sub
in
roll
into
lret
jge
sbb
ja
jne
cmpsb
out
shrb
mov
jo
enter
fbstp
cmp
mov
mov
lock
sub
icebp
xchg
ljmp
add
push
aam
dec
mov
fdiv
scas
data16
and
inc
inc
enter
js
mov
imul
lock
jp
add
mov
cmp
mov
lret
inc
xor
jmp
xchg
cli
add
and
clc
sub
add
fs
movsb
push
cli
add
out
cmp
jnp
loop
mov
sbb
mov
outsl
add
je
mov
push
add
mov
cli
cmpsb
divb
dec
and
imul
rcrb
xor
inc
aam
cld
loope
push
pop
and
xor
ljmp
jb
shlb
bound
bswap
sbb
mov
movb
cld
rcll
add
rol
adc
jae
add
adc
ss
int
add
mov
sbb
lret
fmull
ss
clc
aas
fs
lea
add
and
aad
push
push
add
sbb
push
stos
in
pop
add
sub
or
jns
mov
daa
cmp
aad
lahf
arpl
ret
sbb
dec
xchg
loop
loopne
ss
cmp
push
mov
call
add
movsb
sbb
add
jle
xchg
mov
nop
jge
mov
out
dec
cmp
inc
inc
mov
mov
xorl
add
popa
jo
shrl
insl
jns
add
stos
inc
ret
lods
in
bound
add
imull
les
adc
add
or
cmp
xor
iret
sbb
mov
inc
cmc
arpl
push
add
fs
add
imul
jmp
and
stos
test
sbb
jl
lcall
imul
inc
cltd
mov
add
add
fadds
les
outsl
add
loope
hlt
aas
xor
mov
mov
aad
add
div
sbb
mov
mov
add
push
xor
leave
das
push
or
aam
adc
mov
sub
lds
adc
and
dec
mov
inc
fs
test
and
std
inc
mov
and
jl
cld
add
cmp
add
cmpsb
in
mov
mov
ja
mov
aas
push
cld
inc
or
subl
dec
sbb
loopne
xchg
mov
add
pop
inc
loop
xor
enter
xchg
push
gs
inc
and
imul
test
pop
addr16
fistpll
movsb
xor
mov
sub
hlt
cmc
jbe
ret
rcll
mov
cmp
add
fstps
mov
gs
les
mov
filds
mov
or
and
mov
jmp
dec
adc
or
insb
aad
fimull
loopne
shrb
into
pop
mov
inc
add
iret
or
inc
lock
cmp
aad
in
add
adc
cltd
adc
sub
mov
push
push
add
dec
and
loop
adc
mov
ss
call
mov
dec
mov
mov
addb
stos
loop
or
clc
imul
fnstsw
xor
pusha
inc
xorb
lods
cltd
push
inc
and
ljmp
lret
dec
push
and
xlat
or
add
add
mov
outsl
or
sbb
nop
inc
add
xor
add
mov
dec
test
sbb
xchg
pop
stos
pushl
jmp
and
jl
cmp
sub
sbb
lahf
pop
mov
popa
inc
ret
push
clc
and
daa
cltd
pop
aad
add
push
iret
clc
xlat
int
in
add
sbb
lods
mov
add
mov
add
pop
shl
add
sbb
sti
test
cmp
mov
int
add
stos
outsb
es
inc
jnp
add
push
movsl
dec
sub
sbb
inc
push
adc
in
ss
inc
push
add
mov
fsin
add
into
mov
jmp
jmp
hlt
xchg
movsb
insb
fisubs
mov
mov
dec
in
pop
push
cs
call
popf
xlat
neg
lcall
call
sub
stos
adc
xchg
sti
lods
add
shrl
adc
add
sarl
jmp
popf
pop
movsb
mov
loope
pop
pop
int
jmp
and
cs
mov
jle
out
inc
out
test
add
cmp
pop
pop
js
call
mov
xor
inc
add
rorb
xchg
iret
mov
push
clc
aad
add
fidivs
pusha
fsts
add
pop
and
add
adc
push
add
movsl
pusha
add
push
push
mov
add
cmpsb
jnp
pop
outsb
adc
cmp
mov
adc
outsl
rcll
jno
dec
mov
ss
popl
out
mov
faddl
imul
sbb
arpl
add
xchg
in
insb
mov
mov
adc
dec
mov
std
dec
mov
sbb
cld
js
jae
mov
lock
add
cwtl
sahf
add
popa
repnz
out
lods
sbb
jge
inc
ficoms
pop
imul
repz
fs
mov
leave
add
mov
cltd
cli
mov
inc
and
out
sbb
and
xchg
fisttpl
xor
roll
pop
int
js
jne
cld
lea
adc
cltd
dec
sub
cmp
hlt
add
fcmovne
loopne
mov
add
pop
inc
pop
mov
loop
add
sbb
in
fcomps
add
sarb
call
lcall
repnz
lahf
int
shlb
or
inc
xchg
enter
xorb
fldt
hlt
xor
scas
ss
int3
add
mov
fwait
inc
into
xor
add
push
shlb
andl
sub
stc
les
faddl
sub
and
mov
sbb
cmp
mov
cmp
or
sub
test
in
mov
lahf
cltd
out
movsl
dec
call
jmp
add
jno
xchg
and
sub
and
pop
std
pushf
add
imul
loopne
outsl
lds
adc
push
jae
jge
add
insl
adc
mov
mov
xor
je
subl
add
rcrl
jb
jge
sbb
adc
cld
inc
test
and
in
mov
add
mov
aam
out
dec
add
lret
push
mov
clc
lds
aam
clc
add
dec
fwait
xchg
enter
push
pop
add
fdivs
ljmp
push
and
mov
cmp
jno
lret
sahf
sub
fwait
repz
mov
jo
adc
adc
out
cmp
adc
add
cs
inc
pop
aad
nop
ljmp
hlt
inc
adc
pop
fwait
xor
mov
add
xor
inc
addl
aaa
or
sahf
xor
test
in
sbb
arpl
movsl
sbb
ja
rcll
cmp
repnz
insb
sub
cmp
add
inc
add
cmp
stos
enter
lret
scas
xor
add
cmpsb
dec
mov
stos
mov
shl
sbbl
aad
stc
data16
incb
and
ret
call
push
xor
cltd
incb
cmp
pop
adc
and
rcll
add
or
addb
sarl
mov
pop
mov
mov
lea
jno
sti
les
pop
pop
xchg
pop
sub
cmp
jb
bound
and
xor
inc
push
add
and
inc
or
jmp
call
inc
add
sbb
repz
loopne
mov
addl
aad
inc
xorl
pop
mov
mov
sbb
inc
push
fcoms
dec
fidivrs
rol
dec
enter
loop
sub
add
sbb
adc
jo
push
pop
test
aad
cmpsb
insl
jmp
lret
mov
push
mov
out
out
mov
arpl
testl
gs
or
js
lea
inc
mov
adc
ljmp
cmp
add
inc
push
fwait
addl
and
das
cli
pop
xor
stc
mov
rolb
push
enter
sub
and
add
xchg
jecxz
jno
xchg
add
sbb
xor
push
pop
add
cli
xlat
cmc
out
addb
mov
push
std
add
dec
mov
cmc
add
pop
adc
dec
leave
popa
pushf
stos
xchg
add
and
jmp
add
mov
mov
js
fwait
imul
pushf
add
jne
dec
and
add
call
jnp
push
shl
adc
add
mov
fwait
sub
xchg
mov
pop
adc
sub
or
mov
mov
cld
ljmp
adc
popa
or
jg
inc
cli
mov
icebp
testb
xchg
mov
or
jno
gs
pushf
imul
in
into
shll
test
add
cmpsl
sbb
add
in
inc
inc
xchg
mov
pop
daa
xor
stos
push
pop
push
scas
sub
push
add
jmp
dec
fildll
dec
add
stc
hlt
sub
add
shrl
aaa
decl
adc
jbe
fs
add
push
lds
insb
int
ret
and
push
jns
push
outsl
xchg
add
in
shrb
xchg
cld
filds
and
push
inc
add
adc
xchg
jbe
loope
cltd
mov
sti
cmp
pop
add
add
mov
push
pop
jnp
jmp
dec
add
fnstcw
sbb
lret
mov
dec
add
xchg
push
push
insl
add
mov
jp
push
ret
aad
add
sub
out
cmp
add
cltd
js
arpl
test
jl
add
aam
mov
js
add
inc
and
cli
out
cmc
add
repnz
and
or
mov
mov
out
jg
imul
aaa
push
add
into
jo
jle
sub
outsb
fildl
adcl
push
cli
fxsave
add
cmp
lahf
in
dec
dec
aam
add
mov
add
or
inc
jb
adc
cmp
sarw
xchg
cld
push
insb
push
or
les
xchg
or
movsl
push
dec
popf
inc
cltd
add
adc
xchg
inc
fisttpl
pusha
sbb
push
fiaddl
mov
xchg
add
dec
mov
pop
add
or
lods
dec
cmpsb
push
lds
cltd
andb
hlt
out
shlb
rcl
call
mov
out
jmp
movsb
and
loopne
add
lcall
lds
test
mov
fnstcw
cmp
call
je
jge
orps
push
in
xchg
add
adc
stos
and
out
pusha
rcll
add
adc
xchg
push
jae
add
mov
jmp
add
pop
movsl
mov
adc
xor
adc
ret
insb
fnstsw
add
push
pop
rorl
or
test
xchg
or
jl
cmc
and
fiadds
inc
dec
pop
clc
jp
mov
add
arpl
or
sbb
scas
and
and
jae
push
loopne
sbb
rcrb
sub
mov
sti
dec
iret
inc
add
mov
or
push
ret
add
push
je
bound
inc
lret
aam
movb
inc
mov
push
fisubl
roll
ljmp
movsb
and
add
jns
cmpsl
mov
aas
add
ret
das
popf
clc
add
mov
xlat
adc
hlt
add
add
jnp
add
ret
xorb
pushf
or
mov
fwait
mov
push
add
ljmp
cld
ss
jb
sarb
inc
ret
and
ret
jg
add
or
mov
lret
add
fsubl
cmc
imul
cld
ljmp
mov
pushf
add
dec
add
or
int3
outsl
mov
add
jnp
mov
mull
xor
or
stc
cmp
mov
add
sub
ljmp
shrl
popl
push
add
cmp
out
and
cli
cmp
sarl
loope
addl
inc
in
shl
sub
sub
iret
xlat
test
push
mov
jns
add
push
sbb
fiaddl
add
jne
fucomp
nop
pop
sti
out
loop
add
insb
imul
loopne
sub
movl
int
out
test
sbb
shrb
cmp
addr16
xor
xlat
arpl
leave
fcompl
add
mov
lock
pop
cmc
out
add
lods
pop
or
cld
nop
xor
jns
iret
jbe
lock
sbb
and
aam
hlt
je
mov
and
insl
inc
add
out
orl
mov
push
bnd
aam
jbe
add
or
add
add
and
mov
bsr
xlat
icebp
mov
push
fs
loop
push
mov
cld
jmp
hlt
mov
test
push
js
or
add
aas
pop
inc
lea
mov
xchg
push
ficomps
jo
rcrl
xorb
js
push
fadds
jle
mov
hlt
push
add
out
xor
cmpb
cmp
int3
jl
orb
adc
cmp
add
add
outsl
dec
loopne
aam
or
mov
scas
mov
sbb
imul
enter
jnp
jl
add
lds
cmp
mov
shll
shr
into
cli
mov
adc
add
and
es
iret
mov
add
pop
add
mov
pop
sti
add
mov
rolb
popa
lea
add
daa
inc
out
es
fptan
mov
mov
adc
mov
cld
fs
adc
aas
das
xor
xor
adc
cmpsb
add
popf
adc
in
xor
cltd
ds
pop
das
pop
mov
cmp
hlt
ret
mov
mov
and
add
inc
aas
xacquire
add
pop
cs
jb
out
sahf
or
or
jbe
daa
lds
mov
inc
adcb
add
ljmp
or
and
mov
push
jb
fisttps
and
icebp
add
mov
push
mov
add
xchg
faddl
imul
push
insb
push
mov
add
sub
xchg
in
xchg
cli
adc
sub
pop
add
lds
call
out
movsl
mov
add
in
add
loopne
out
add
adc
mov
lahf
pushl
fnstcw
xchg
inc
inc
and
and
rorl
outsb
mov
sub
lea
xor
pop
dec
sub
pcmpeqd
iret
sbb
nop
repz
add
push
subb
cmp
mov
out
arpl
add
fadds
cmp
mov
scas
inc
clc
iret
mov
in
inc
add
mov
add
fdivl
jnp
push
iret
ljmp
je
or
add
push
fmulp
xchg
iret
mov
push
jp
addr16
or
adc
xchg
dec
repz
icebp
mov
push
jge
add
xchg
je
mov
dec
in
inc
mov
subl
sub
add
nop
in
fwait
pop
add
cmp
pop
addl
xor
in
push
and
ret
xchg
ds
add
rolb
add
scas
mov
mov
insb
shrb
add
push
push
mov
orb
push
add
lcall
add
ljmp
mov
pop
adc
add
or
add
ds
rorb
mov
jnp
imul
jle
add
repnz
and
add
xchg
sbb
aas
test
sub
popf
movsl
cmpl
pop
add
xchg
xor
xchg
gs
add
inc
and
push
add
sbb
stos
mov
aad
mov
int
repnz
lahf
add
ret
sbb
add
lods
push
cmpsb
sub
push
fimull
in
lret
mov
mov
jnp
sub
lcall
or
jbe
add
in
and
sbb
nop
mov
hlt
cmc
jg
cmp
add
push
jge
add
cld
loopne
inc
dec
xor
lcall
loope
jmp
cmp
mov
test
dec
and
mov
les
jmp
add
pop
cmpsl
add
adc
shrb
pop
int
xchg
fildll
lret
mov
fldl
repz
fmul
push
and
push
sarb
dec
or
jno
mov
lret
loope
das
ljmp
aas
cmp
push
pop
filds
adc
mov
mov
rcl
test
out
repz
adc
sub
push
pop
pusha
sbb
ffreep
sub
adc
shll
ljmp
push
sbb
cmp
mov
jmp
mov
push
negl
jno
push
lods
add
and
mov
add
or
inc
add
push
arpl
out
xlat
addb
pop
das
pop
dec
popf
dec
mov
jno
or
out
sbb
jb
cld
cmp
adc
je
add
and
add
add
inc
loope
add
and
cld
add
test
outsb
xor
add
sbbb
jno
ret
and
add
mov
add
popf
pop
sti
aam
shll
add
lahf
sbb
int
adc
pop
les
mov
jae
shll
inc
push
and
sbb
pop
or
cld
repz
adc
pop
dec
jle
fldl2t
bound
sbbl
jge
rol
aam
add
fcmovne
add
mov
scas
mov
ljmp
nop
sbb
xchg
jno
rorl
pop
mov
sub
cmp
add
in
adc
dec
out
cmp
cld
mov
xchg
pop
imul
test
sti
add
enter
xchg
push
mov
inc
sub
sbb
mov
icebp
adc
add
out
mov
mov
pop
cmpsl
adc
push
out
enter
in
sub
sub
add
and
es
cld
push
ret
add
and
jae
and
lods
or
shl
dec
test
mov
xchg
fnstsw
in
inc
add
cmp
mov
cmpsb
inc
dec
imulb
cmp
xchg
pusha
add
movl
addb
cld
and
pop
mov
call
push
in
imul
sbb
jns
mov
cld
inc
rorb
xorl
inc
mov
add
jge
cmp
orl
pop
sahf
add
pop
jo
sbb
cmp
loopne
adc
push
je
push
xchg
ja
insl
xor
cmc
adc
ds
add
sub
mov
xchg
bound
dec
xchg
sbb
or
outsl
ja
leave
out
pushf
decb
cmp
int3
rolb
xor
test
pop
add
xlat
xchg
inc
mov
sti
push
jg
fdivs
add
pop
add
outsb
cmp
xor
movsl
inc
push
mov
outsb
xlat
push
xchg
jecxz
inc
cmc
js
loope
adc
add
mov
arpl
push
lret
frstor
jl
cltd
jmp
fisttps
adc
and
les
scas
cmp
inc
mov
and
imul
push
mov
inc
ret
add
cmp
cld
jae
mov
lods
xchg
lret
in
int
imul
jg
add
mov
je
and
sbb
js
and
push
add
jp
lret
mov
add
fiaddl
sub
pop
pop
adc
mov
add
movsb
fsubrp
iret
ret
jb
insb
hlt
inc
push
and
sbb
and
pop
add
adc
test
jo
mov
pop
mov
adc
add
clc
mov
cli
stos
dec
nop
cmp
add
cmpsb
mov
add
js
das
dec
lret
push
cwtl
in
add
add
fcmovnb
fs
lcall
push
shlb
hlt
inc
ja
xor
adcb
pop
add
jge
or
and
or
scas
xchg
mov
iret
aam
jbe
add
xchg
aad
ds
decl
push
outsb
jmp
jnp
addl
jecxz
or
inc
or
ja
ret
out
dec
xor
add
shrl
enter
ficoms
push
insb
out
hlt
test
js
inc
lret
das
add
or
cmp
add
iret
std
cld
mov
pop
ror
cwtl
lret
mov
sub
out
dec
ljmp
aam
fsub
xchg
pop
xchg
xchg
add
or
popa
aam
out
add
shlb
in
mov
inc
in
xchg
xor
cli
inc
out
jno
mov
fists
sub
dec
add
mov
movsb
push
hlt
jnp
jp
add
cmpsb
fwait
xchg
hlt
aas
fisttpl
rcrl
adc
in
jne
movsb
scas
std
mov
sbb
outsb
in
pop
cld
stos
inc
lods
movl
sub
lock
add
push
loope
scas
out
mov
fstps
mov
mov
aam
xchg
pop
loopne
xchg
call
clc
stos
sbbb
dec
add
xchg
prefetchw
or
movsl
jnp
xor
mov
sub
roll
in
icebp
aaa
fdivp
sbb
xor
and
adc
repnz
pop
loop
fidivl
lods
add
push
filds
sub
add
mov
aad
push
add
aam
stc
add
dec
das
pop
movl
and
aad
dec
and
outsl
idivb
test
sbb
sahf
out
fnsave
and
cmp
pop
dec
mov
jns
lock
inc
mov
mov
jmp
fstpl
or
ret
cld
pop
pop
fmul
clc
std
mov
mov
pusha
int3
mov
xor
lods
mov
clc
out
movsl
jb
mov
xchg
dec
mov
mov
jae
mov
add
stos
clc
push
add
push
push
decl
insb
mov
jbe
add
or
xor
jne
inc
test
adcl
mov
add
inc
in
addr16
mov
add
sub
lea
ret
roll
adc
hlt
inc
pop
sub
pop
cli
out
mov
imul
xor
xor
cld
or
popf
sbb
pushf
add
xchg
add
sbb
inc
aaa
aad
dec
fwait
add
fcoml
and
xchg
and
inc
mov
enter
add
cmp
out
push
fildl
add
movsb
repz
and
cmc
add
xchg
or
sub
add
sub
or
add
out
inc
test
push
xchg
movb
or
out
add
lcallw
add
jns
call
adc
js
jecxz
int
xor
pop
inc
xor
dec
mov
sbbl
insb
and
adc
adc
pushf
testb
rorl
mov
aaa
push
mov
cli
movsb
xchg
outsb
push
jp
shrb
int3
std
mov
sahf
repz
jae
incl
fisttps
mov
addl
hlt
push
add
das
or
int3
hlt
arpl
fcmovnbe
cmp
hlt
ja
inc
inc
mov
addb
ljmp
mov
repnz
mov
add
xor
popa
add
mov
mov
adcl
ja
stos
push
and
cmpsb
cmp
enter
adc
mov
sahf
push
es
jae
xlat
pop
hlt
inc
xor
nop
stos
inc
les
rolb
jmp
add
cs
mov
dec
push
xchg
add
add
inc
cli
mov
stos
pop
sub
and
xchg
pusha
andb
and
cmp
ljmp
and
movsb
xlat
ds
jb
gs
sbb
jne
in
std
fadds
aam
add
inc
clc
testl
mov
andl
dec
xchg
test
lcall
sub
pop
push
add
inc
jns
ret
jne,pt
mov
xchg
adc
out
mov
ljmp
mov
jp
mov
pop
inc
mov
aam
add
add
or
scas
xchg
mov
insb
stc
outsb
pop
lcall
pop
push
aad
jo
sub
pop
add
xor
inc
push
repnz
pop
inc
and
lret
xor
push
xor
test
idivl
imul
fistpl
es
xor
mov
out
dec
andl
push
cmp
call
adc
or
pop
sub
sahf
in
flds
xor
jo
and
lock
push
dec
movsb
xchg
hlt
add
lds
mov
sahf
adc
jne
in
add
sarb
jb
shll
lods
sbb
sbb
mov
cwtl
jmp
push
lods
add
or
popa
mov
jbe
pushf
mov
mov
popa
movsl
add
dec
jmp
jg
cld
adc
fisubs
add
adc
sub
jp
roll
roll
in
into
movsb
scas
fimull
add
addl
push
inc
decl
mov
hlt
out
inc
fcompl
and
mov
int
mov
fisttpll
les
xchg
ficompl
jp
add
sarb
add
fwait
adc
in
icebp
mov
xchg
xor
adc
pushf
out
sub
loopne
inc
and
mov
mov
xlat
xchg
sbb
and
rcr
dec
mov
int3
xchg
push
jns
movsl
add
inc
roll
add
adc
push
lahf
push
ljmp
add
and
pushf
push
pop
outsl
add
sub
add
rclb
test
cmpsb
roll
test
int
mov
push
pop
inc
mov
jb
jecxz
adc
popf
add
xchg
out
xor
mov
xchg
add
mov
incb
push
loop
mov
xchg
push
jg
push
mov
add
cmp
popf
pop
gs
cmpsb
test
loope
lret
xchg
mov
mov
add
push
ja
repz
enter
add
add
jge
cmc
add
dec
aam
lret
add
in
mov
xor
shl
jns
stos
ret
cltd
enter
pop
imul
cwtl
push
push
add
lret
lock
add
movsl
in
mov
and
dec
loope
adc
and
pushf
leave
mov
mov
dec
add
sbb
inc
dec
fs
mov
fwait
cld
orl
pop
icebp
cmp
pop
push
xor
lcall
xchg
pop
sub
inc
add
and
pop
add
add
adc
add
push
inc
add
dec
sub
lahf
stos
push
push
iret
mov
shrl
push
mov
stos
sbb
hlt
push
lea
test
add
int
xor
cmp
inc
push
repz
stc
insb
mov
rorb
add
rorb
xor
ds
pop
xchg
add
cmp
or
cmp
mov
or
xor
sbb
in
and
leave
or
push
and
scas
xor
add
push
add
inc
dec
das
mov
adc
dec
fidivs
lds
ds
out
sti
lcall
div
subb
sbb
jge
xor
ja
sbb
in
test
dec
push
jp
xchg
adc
dec
out
xchg
cmp
ss
notrack
out
pop
repz
cwtl
push
or
shrb
sbb
cmp
or
test
out
les
xchg
mov
imul
std
loope
mov
ret
push
dec
adc
xlat
push
fistpl
xchg
add
ja
loop
xlat
or
stos
adc
lds
imul
ret
lods
aad
add
lds
xor
and
lret
arpl
leave
add
adc
movsb
test
xor
jl
xor
dec
mulb
jns
cs
fidivrl
jmp
xor
push
adc
cld
nop
fdiv
scas
jb
lahf
xchg
mov
dec
clc
or
mov
ljmp
mov
mov
or
ss
lret
add
imul
xorb
pushl
adc
imul
aaa
movb
in
push
dec
and
ret
in
mov
push
cmc
add
sub
add
xchg
pop
jno
test
dec
inc
popa
mov
popf
or
mov
in
xor
out
add
pop
mov
add
mov
or
add
cmp
sbb
nop
add
add
in
xchg
orb
mov
or
add
aaa
mov
inc
adc
pushw
cmpsl
dec
stc
push
push
aad
pop
jmp
ljmp
xchg
mov
add
imul
mov
mov
dec
cmpsl
cmp
inc
add
pusha
xor
cld
packsswb
jne
xor
cli
push
aas
std
pop
cmpsl
add
xchg
or
rcr
testb
pushf
add
or
push
test
cwtl
push
fldenv
cltd
push
inc
into
enter
add
loopne
arpl
mov
and
jne
inc
adc
mov
add
sbbb
lret
mov
pop
mov
add
sub
add
add
shlb
xor
in
into
gs
lock
in
or
mov
fiadds
and
dec
cmpsl
shr
fisttpl
dec
sub
fdivrl
sub
ret
ja
inc
jl
inc
xchg
inc
mov
loop
jnp
dec
dec
cmp
add
inc
shll
and
and
add
addl
add
mov
fxtract
mov
fsubr
adc
mov
les
sarb
jne
sub
es
pushf
push
cmp
or
add
and
cld
dec
mov
lods
pop
xor
adc
add
push
xchg
xor
cwtl
movsl
cld
sbb
je
or
out
mov
add
xor
inc
adc
sbb
or
add
inc
jb
push
sbb
mov
dec
jmp
jmp
mov
or
mov
leave
sbb
mov
fisubl
divb
lret
stc
adc
add
xor
in
cmpsb
in
iret
into
inc
dec
add
bound
jmp
add
pop
cld
dec
and
mov
mov
mov
cmp
addl
mov
test
cmp
movsb
mov
push
pop
mov
sti
pop
push
fisttpll
add
in
mov
xchg
inc
mov
jbe
sub
add
aas
mov
and
adc
and
iret
jl
sbb
cmp
or
inc
mov
lret
fcom
int
cmpsl
in
sbb
insb
lcall
insl
neg
or
jno
add
mov
enter
xchg
cmpsl
das
sbb
mov
mov
ret
iret
add
add
popf
jg
fisubrs
iret
xor
js
jle
push
lock
mov
cmp
add
cld
jle
mov
inc
add
xchg
bnd
roll
jl
xchg
fsubp
add
scas
ja
xor
sub
aas
cmpsl
ret
or
shl
or
adcl
icebp
cmp
jecxz
sbb
in
mov
lahf
dec
in
mov
scas
sub
int3
cmpl
outsl
jle
daa
or
aad
in
pop
and
aaa
fsubr
push
mul
or
inc
fiaddl
xor
add
cltd
fstl
insb
adc
and
mov
sahf
stos
dec
fiadds
gs
pop
fcoms
ds
mov
sarl
andl
movsb
mov
sbb
xchg
lahf
mov
sbb
inc
lea
xor
pop
sbb
sbb
cmp
outsb
adc
mov
mov
add
mov
call
or
or
loope
ds
or
mov
jo
outsl
lods
shll
push
add
jl
out
pop
loopne
repnz
aas
xchg
cmp
inc
mov
cmc
dec
hlt
add
ljmp
add
inc
lret
lods
fdivs
faddl
mov
into
dec
mov
dec
dec
cmp
jmp
push
subb
or
add
cmp
pop
imul
std
cmp
push
mov
cmp
inc
jnp
imul
or
add
dec
pushl
adc
repz
pushf
xchg
add
and
cmpsb
clc
dec
push
inc
in
add
add
leave
bound
sbb
out
jns
popl
mov
stos
ss
add
fsubr
mov
lret
fiadds
jbe
icebp
test
mov
xor
out
jp
out
jno
push
fbstp
stc
add
xor
cld
xchg
cmp
push
cmp
push
scas
outsl
push
pop
ja
div
jg
js
adc
jb
movsb
push
rolb
or
sbbl
aam
les
pop
es
add
loop
mov
call
dec
stos
or
testl
cwtl
rolb
pop
lds
insb
cmp
cmpsb
pop
add
fwait
mov
cmp
lcall
stos
sarl
loopne
loope
aaa
xor
push
les
add
xchg
sbb
sub
in
insl
sbb
pushw
xor
shlb
andb
stos
sbbb
add
pop
lahf
repnz
cli
dec
pushf
lock
rol
jg
or
dec
sub
add
sti
add
mov
ja
in
cld
out
icebp
std
add
sub
ljmp
aaa
stos
cli
push
dec
imul
lahf
push
lcall
stos
push
push
xchg
mov
jp
and
inc
jmp
add
mov
pop
hlt
jne
in
call
xchg
xchg
pop
jge
mov
add
cmp
nop
out
negl
xchg
push
pop
pushl
dec
cli
loopne
sbb
lea
in
das
incl
js
mov
mov
xchg
add
aam
jmp
pop
lret
inc
add
lods
icebp
outsl
add
stc
repnz
addl
inc
mov
sub
add
sar
mov
outsb
scas
adc
aaa
adc
fisttpll
and
adc
inc
add
aad
add
adc
fistps
mov
repz
xor
push
push
add
in
out
sahf
out
add
adc
mov
pop
pushf
xchg
pop
jo
lcall
mov
je
pop
stos
les
js
lock
sub
or
popl
sub
cli
mov
ror
push
mov
imul
dec
mov
xor
mov
sahf
clc
repz
sahf
pmaddwd
jno
ret
mov
cmpsl
push
icebp
and
repnz
fs
pop
push
xor
cwtl
popa
orb
push
xchg
add
fisttpll
test
add
cld
dec
repz
xchg
add
rorl
out
dec
sbb
xor
push
in
rclb
or
loopne
in
rorl
test
xor
cli
pop
leave
xor
aam
cld
leave
adc
add
cmpsl
mov
es
adc
loopne
mov
push
sub
xor
jle
add
and
pop
addb
fnstsw
das
cltd
add
push
mov
mov
mov
repnz
fiadds
repz
xchg
cwtl
insl
in
mov
popa
out
or
aaa
pop
mov
xchg
mov
repz
popl
mov
xchg
xchg
stc
and
frstor
add
add
mov
sub
add
ss
negl
mov
push
rcrb
stos
scas
inc
andb
jecxz
fnsave
cltd
and
orl
jne
ret
dec
mov
psraw
repnz
aam
and
test
add
pushw
mov
push
ja
xor
xchg
rcll
stc
je
add
fistpll
add
jbe
xchg
push
test
ret
cli
icebp
in
mov
enter
out
adc
ds
cltd
push
jge
clc
loope
push
addl
add
ret
int
leave
mov
or
add
data16
fstpt
pusha
jns
xor
jne
stc
shll
pusha
data16
cld
push
mov
pop
dec
mov
test
mov
stc
insl
adc
out
dec
fsubl
sub
frstor
cli
push
cltd
loop
imul
mov
jnp
rol
es
ljmp
popa
out
gs
mov
inc
mov
fwait
repnz
push
push
cmp
iret
inc
add
into
add
int
and
inc
cld
ljmp
sti
inc
dec
stos
pop
add
insl
hlt
ds
jno
sbb
push
fmulp
mov
jp
stc
jb
outsb
cld
pop
cltd
sarl
and
jo
add
jnp
addl
aas
add
add
stc
push
out
add
or
aaa
add
add
inc
mov
inc
jno
cmp
fsubr
mov
adc
cmpsl
fnstsw
and
push
jp
xorb
test
mov
les
inc
push
xchg
popa
and
ss
xlat
sub
add
clc
pushl
mov
loopne
data16
sti
add
inc
push
inc
sub
lds
mov
test
cmp
mov
push
inc
bnd
mov
rorl
out
ja
in
out
sahf
push
adcb
jecxz
mov
and
cltd
ja
insl
cld
inc
sbb
mov
test
ss
and
jmp
inc
mov
sbb
add
jp
mov
push
arpl
and
outsb
shl
repz
push
mov
xor
sbb
fdivp
addb
sbb
cmp
jecxz
jmp
add
adc
sub
cltd
in
xchg
push
addb
movsb
ret
push
mov
jne
mov
sub
out
ljmp
dec
icebp
sbb
inc
ljmp
inc
movsb
fcoms
mov
outsb
and
or
add
enter
int
mov
mov
sbb
cld
jecxz
jb
jle
add
int3
push
jp
and
cmpsl
ja
add
sub
lahf
jl
add
hlt
mov
mov
push
mov
ret
pop
jne
sub
in
aas
add
rcrb
sahf
cld
gs
xor
adc
movb
mov
or
or
add
jb
movsb
add
push
mov
add
xchg
arpl
outsb
sub
dec
add
pop
bound
repnz
cltd
add
and
fcoms
mov
pop
push
or
sub
cwtl
ss
imul
inc
dec
clc
addb
and
xchg
sub
comiss
push
repz
add
dec
push
cmp
xchg
shll
out
xchg
rcrb
xorl
push
mov
std
mov
xchg
shl
mov
imul
sub
dec
nop
mov
xlat
sub
jmp
je
fwait
jae
xor
loope
js
aad
pusha
addr16
in
lds
cmp
mov
inc
ja
fsubl
mov
and
cltd
add
xor
xchg
outsb
xchg
cmpsb
xor
arpl
cmp
inc
push
sbb
jp
add
js
inc
cmp
and
cmp
fimull
xor
jns
pop
clc
test
push
mov
add
scas
push
popf
hlt
lods
into
add
push
sub
aam
sbb
popa
decl
loope
mov
xchg
hlt
arpl
test
sbb
jns
fimull
push
cmpsl
les
aad
rorb
add
cltd
andb
loop
roll
sbb
add
sub
xor
addr16
push
pusha
and
add
das
int3
inc
jecxz
pop
xchg
push
add
cmp
mov
dec
icebp
adc
paddusw
loop
add
pop
inc
add
and
aaa
dec
push
jnp
push
mov
mov
add
lcall
repnz
insb
push
ret
movsb
pusha
mov
lds
cmp
push
call
ja
mov
repnz
adc
subb
mov
das
inc
cmp
jb
fdivp
and
aaa
sbbb
fistps
push
movsl
int
out
add
xor
lcall
push
jl
imul
xchg
addb
outsl
push
mov
enter
cmp
daa
fimuls
sub
mov
mov
jl
cmpl
jnp
add
dec
shrl
xlat
ret
xor
or
push
loop
fdivs
mov
sub
ret
nop
dec
out
cmp
inc
mov
jecxz
popf
popa
rdtsc
push
or
cmc
add
jb
and
hlt
adc
test
loope
fsubr
mov
push
push
mov
pushl
shll
jo
xchg
pop
cwtl
inc
dec
jecxz
mov
jle
mov
in
fs
ret
mov
push
add
mov
mov
jmp
and
leave
add
and
addb
adc
add
das
inc
cmp
bound
in
jb
add
jecxz
cmp
cli
jae
xor
cmc
add
mov
jl
jge
into
mov
mov
add
push
std
jmp
into
xchg
xchg
and
xchg
xor
cld
lcall
in
cmpb
fimuls
icebp
or
mov
cmp
scas
mov
dec
cmpsl
fcmovne
push
or
pop
inc
pop
sahf
mov
je
fdiv
add
push
add
sub
mov
insb
jb
jmp
sub
cli
inc
sti
repz
mov
and
push
sbb
push
shl
pushf
xor
mov
sbb
add
std
xor
xchg
add
jno
insb
cmp
xchg
add
pop
ret
or
fstl
fiaddl
mov
add
scas
pusha
out
sbb
pushf
sbb
push
and
jb
fiadds
jl
dec
repnz
fimuls
xor
and
flds
xorb
xchg
stc
mov
add
xor
ds
jbe
test
pop
xlat
hlt
outsl
jae
pop
testl
xchg
jns
jo
mov
xchg
sar
xor
dec
incl
mov
mov
lods
bound
ret
and
add
rorb
mov
scas
mov
call
mov
pop
stc
xchg
bnd
fiadds
adc
fdivs
sbb
jl
hlt
in
scas
hlt
nop
sub
ja
mov
sarl
cltd
inc
or
rcll
xchg
mov
fdivrp
cmp
dec
adc
ljmp
xchg
mov
pop
hlt
add
and
jbe
std
cld
add
jecxz
icebp
fstpt
jo
jmp
sahf
out
inc
test
xchg
nop
add
js
jae
mov
jp
xchg
faddl
call
add
loop
and
ret
lret
sbb
iret
movsl
add
les
outsb
out
repnz
push
cmp
jno
or
mov
hlt
test
pushf
dec
adc
daa
cmp
inc
xchg
inc
add
push
jno
cmp
imul
mov
fidivrs
push
xor
xor
and
inc
dec
adc
iret
sub
testb
loop
push
add
loopne
gs
push
add
test
jp
add
out
mov
fimuls
pop
out
xchg
inc
imul
int3
fdiv
add
push
sbb
push
imul
push
pop
bound
addb
icebp
jae
pusha
sub
cmc
add
push
jno
aas
push
mov
loopne
fdivrp
and
loopne
mov
std
adc
xchg
inc
pop
add
lock
in
mov
std
in
xchg
sahf
xchg
lret
ret
sarl
callw
je
shll
popf
mov
pop
jno
mov
cmpb
loop
int
add
sarb
mov
lock
mov
fisubs
repnz
add
addb
push
xchg
push
sub
jo
mov
add
mov
xor
add
push
and
adc
popf
add
gs
cmpsl
cltd
and
ss
mov
or
pop
and
cmpsl
cli
push
sbb
mov
xchg
cmp
jl
adc
sbb
dec
pop
daa
cli
mov
shll
add
popa
cmp
jne
cs
mov
xor
jp
jae
sub
add
jbe
pop
add
shrl
inc
jmp
loopne
push
getsec
dec
sbb
push
std
not
dec
sarl
ja
jns
lahf
jle
cli
das
les
sbb
sbb
es
push
pop
push
lds
aad
outsl
insb
add
push
cwtl
jecxz
adc
add
mov
je
jae
mov
push
push
iret
loope
loop
jmp
fwait
lea
sbb
lock
ret
add
pusha
rol
add
mov
xor
test
das
dec
cmp
imul
shll
pop
and
cli
mov
xor
xchg
inc
push
xor
cmp
jnp
clc
sbb
loope
in
mov
adc
jle
add
push
sub
sub
aam
ja
stos
sbb
clc
sub
sub
adc
add
push
sti
inc
mov
fistl
xor
insl
add
inc
in
rcr
icebp
out
ret
popa
inc
mov
mov
sub
add
jl
adc
rorb
je
push
dec
pop
add
addb
xor
inc
push
jmp
cvtps2pi
add
pop
xchg
mov
fimuls
jl
mov
pop
out
xor
add
jne
pop
loope
add
and
dec
test
inc
sbbl
mov
fcompl
sti
push
mov
repz
shll
les
xorb
and
jns
add
in
lcall
mov
test
cli
cmp
movsb
mov
add
mov
aas
outsb
incl
jmp
in
lcall
ret
mov
sti
xchg
lods
fisttpl
push
out
les
xchg
out
in
dec
rolb
mov
adc
cwtl
out
xchg
test
movsl
in
ja
xchg
orl
inc
mov
ljmp
and
mov
mov
push
sub
or
pushf
loope
xchg
leave
cmp
shl
cld
xchg
hlt
xchg
testb
mov
xor
xchg
mov
mov
xor
or
addl
rcl
pushf
mov
xadd
push
pusha
call
not
pushf
inc
test
clc
stc
cmp
not
bt
stc
clc
pushf
cmp
jmp
add
bt
pusha
call
pusha
pushf
jmp
cmp
pushf
lea
jae
sub
btr
shl
setb
mov
push
mov
jmp
inc
stc
bt
test
not
cmc
stc
movb
call
movzbw
mov
push
mov
pushl
mov
pushl
ret
lea
jne
pushf
push
pushl
stos
pusha
lea
jmp
pusha
push
cmp
push
pushf
mov
lea
ja
dec
jmp
pusha
dec
cmc
shl
call
bt
pusha
cmp
bt
sub
call
not
lea
jl
inc
pushf
jmp
pushl
lea
jne
lea
stc
bsf
cmc
sub
lea
jg
sub
movzbw
mov
cmp
jmp
add
push
je
inc
popa
jo
jne
gs
outsl
outsb
je
js
add
fcomip
lret
lea
call
pushf
lea
jb
push
pushl
push
pushf
pushl
ret
ror
jmp
in
cmp
das
xor
test
pop
adc
mov
mov
sbb
in
cmp
out
and
pop
mov
adcb
xchg
pop
add
xchg
cmp
jp
adc
fisubrl
xchg
pushf
inc
pushf
test
movl
not
cmc
cmp
lea
mov
not
pushf
lea
movzbw
push
setno
mov
mov
call
add
dec
outsl
arpl
inc
jb
gs
xor
add
cmovae
add
inc
and
mov
movb
pushl
pushl
pushl
ret
rcl
mov
mov
pushf
push
test
stc
and
cmc
pushf
add
lea
push
mov
call
push
push
mov
lea
je
clc
add
jmp
test
jmp
pushf
pushl
lea
jb
push
cmp
mov
pusha
lea
jae
test
pushf
pushf
mov
bts
mov
cmc
neg
shl
mov
bt
clc
clc
cmc
sub
call
call
inc
dec
dec
shr
cmc
push
neg
push
pushf
stos
not
setae
setp
mov
lea
push
lea
call
jmp
movsbl
mov
pushf
jmp
lea
jae
xor
add
movsbw
xadd
mov
shr
bts
bsr
mov
sar
mov
call
add
dec
fs
outsb
imul
push
push
jmp
bt
test
cmp
add
jge
push
movb
push
lea
jne
pushf
push
pusha
pushfw
popw
pushl
setp
mov
jmp
add
sbb
sbb
mov
dec
sub
test
fwait
out
pop
xchg
fadd
icebp
mov
cmp
xor
xor
ja
dec
mov
std
lock
std
mov
cmc
insl
rclb
into
fcoml
andb
push
cld
push
or
xchg
pop
jge
adc
insb
jmp
xchg
imul
jl
xchg
inc
pusha
mov
loop
xchg
xchg
fimuls
pusha
pop
and
jbe
pop
sbb
and
lods
mov
push
out
and
fs
inc
mov
pop
ret
xor
jle
push
dec
mov
mov
lods
mov
and
sahf
pop
pusha
mov
icebp
cld
sbb
es
sbb
adc
push
dec
fmuls
jae
mov
push
aas
test
shlb
lods
insb
or
fldl
stc
dec
jmp
add
xor
lahf
mov
not
shr
add
mov
pushf
cmp
or
pushl
lea
je
cmp
movsbw
add
sar
bts
sub
jmp
add
dec
outsl
jbe
inc
imul
loope
jno
imul
mov
sub
pushf
bt
cmp
mov
pusha
lea
jbe
pushf
sub
rcr
mov
sub
test
shl
inc
mov
sub
bsr
add
neg
rol
lea
shr
movzbw
sar
stc
inc
mov
bts
shl
add
bswap
movzbl
pushf
push
mov
lea
pusha
push
pusha
mov
mov
not
pushf
lods
test
pushf
pushf
jmp
pushf
lea
je
jmp
jmp
bt
stc
pushf
neg
pusha
pushf
pushw
popfw
movb
jmp
not
movw
call
cmpb
pusha
mov
push
movb
lea
jne
lea
not
bt
sar
xor
bswap
or
lea
mov
add
add
shl
mov
pusha
stc
test
movw
jmp
cmpb
pusha
call
movsl
or
and
cwtl
jns
sti
inc
gs
fists
add
jnp
cwtl
int3
nop
mov
jne
insl
lea
and
add
lcall
xor
jmp
mov
pusha
std
jl
dec
insl
xor
jmp
fs
mov
sbb
lea
je
call
add
dec
jo
outsb
push
jb
arpl
jae
stc
mov
call
movl
push
push
lea
jmp
mov
movw
push
cmp
jmp
sub
pop
lods
or
hlt
push
out
daa
js
sub
cld
aad
sub
add
inc
and
pop
mov
push
shrb
cli
dec
and
dec
cmpsb
aas
es
pop
fnstenv
rcll
leave
adc
xor
or
mov
push
jmp
js
adc
sub
pop
lds
sbb
xor
push
jecxz
inc
bound
and
fs
mov
loope
fs
jb
clc
cmpb
pusha
jmp
lea
je
cwtl
cmc
xor
bt
shrd
stc
or
mov
bsf
jmp
sub
lea
pushf
lea
jbe
inc
jmp
pushf
lea
jbe
and
mov
shrd
shl
add
cmp
sbb
mov
btc
add
xor
shrd
movl
pushf
call
lea
jae
cmp
clc
jnp
xor
push
jmp
jmp
mov
push
pusha
mov
pushf
lea
jmp
sub
ror
in
out
scas
mov
adc
test
addr16
rolb
and
dec
push
xchg
mov
adc
sbb
pop
push
loop
sub
pop
fcmovnbe
aaa
mov
jns
faddl
out
lret
stc
sbb
mov
mov
lock
fmul
sbb
jmp
imul
gs
jl
cmpsl
xor
stos
fdiv
sub
push
sbb
andb
cmpsb
sub
sbb
mov
or
insl
pop
das
pushf
leave
jnp,pt
jge
lahf
fsubs
add
lea
ja
pusha
jmp
cmc
push
stc
test
pushf
movb
lea
jmp
push
pushl
neg
mov
jmp
pusha
mov
pushf
movsbw
mov
pushf
call
test
test
movzwl
xor
shl
mov
stc
pusha
clc
add
push
call
pushl
lea
jae
movsbw
call
inc
pushf
inc
or
call
lea
jb
clc
pushf
pushl
cmp
cmpb
call
add
stc
cmp
mov
mov
cmp
cmc
test
push
lea
je
jmp
lea
push
movl
push
pusha
mov
movb
mov
pushl
ret
add
push
imul
insb
insb
outsl
arpl
add
lea
jmp
mov
mov
call
pushf
mov
sete
pusha
mov
bswap
movsbw
pop
mov
bswap
bswap
mov
push
mov
call
jmp
je
inc
mov
movsbw
sub
ror
cmp
add
lea
shr
shr
rol
mov
pushf
test
pushf
pusha
jmp
not
pushl
mov
jmp
push
jmp
movw
or
mov
jmp
shr
adc
mov
xor
push
rcl
bsr
add
not
mov
lea
jne
pusha
mov
pushf
not
lods
jmp
lea
jle
mov
pushf
jmp
lods
lock
int
push
arpl
hlt
cmp
mov
sahf
and
ret
test
aad
xchg
or
cs
loop
sub
bswap
movsb
sbb
out
rcr
sub
push
pop
jbe
mov
insb
add
stos
jae
xchg
mov
jecxz
add
xor
add
gs
ret
sub
mov
pop
pop
fldt
aad
xor
outsl
imul
adc
cld
dec
stos
dec
out
in
cmp
lcall
gs
inc
mov
mov
scas
hlt
inc
mov
adc
clc
repz
in
cmp
jno
pusha
mov
jg
dec
cmp
faddl
out
adcb
rorl
sahf
dec
dec
out
mov
pop
pop
mov
or
xor
cld
test
mov
nop
pop
dec
js
cs
mov
jecxz
jae
test
out
and
push
lds
or
int3
jnp
out
lock
cmp
scas
daa
jmp
ficoms
enter
pushf
clc
mov
cmc
pushf
call
lea
call
push
pushf
call
je
outsl
add
xchg
cmp
or
inc
gs
cwtl
int
xor
leave
sub
ret
test
jmp
js
inc
cmc
insl
data16
pop
sub
int
clc
out
sti
loopne
push
or
mov
addr16
adc
jmp
mov
or
addps
mov
int
cmc
popa
imul
push
fs
inc
mov
jmp
ror
xadd
sub
jmp
pushf
not
mov
pusha
pushf
inc
cmc
not
clc
cmc
cmp
pop
lea
setl
movzbw
lea
movsbw
call
not
pushf
mov
inc
pushl
test
not
bt
call
mov
and
pushf
shr
lea
mov
test
call
add
dec
fs
outsl
popa
fs
insb
insb
add
bt
stc
test
jmp
clc
cmc
clc
cmpb
jmp
mov
sbb
bts
mov
call
lea
jne
btr
mov
add
mov
shl
sub
movsbw
jmp
pushf
mov
movb
pushl
ret
inc
mov
pushf
shld
shl
pushl
sub
shl
pusha
ror
lea
cmp
test
stc
push
sub
cmc
clc
cmp
pushl
popl
call
xchg
push
call
add
inc
js
je
jb
arpl
jae
stc
test
pushf
pushl
mov
movb
lea
jmp
bt
cmp
shl
not
lods
push
inc
cmc
rol
push
dec
cmc
neg
pusha
pushf
lea
call
cmp
pusha
test
cmp
push
jmp
pusha
movw
pushf
movl
call
pushf
call
bt
jmp
push
mov
clc
stc
pushl
test
movw
lea
je
cmc
jmp
inc
cmc
stc
clc
rol
call
jmp
jmp
or
call
pushf
mov
movw
push
mov
pusha
lea
call
call
pushf
lea
jne
mov
push
call
add
push
gs
fs
jb
arpl
jae
gs
outsl
jb
add
lret
push
lods
push
stc
neg
call
dec
pusha
lea
jne
rcr
pushf
mov
test
cmp
cmc
cmp
pushf
call
pushl
cmp
call
lea
ja
jmp
call
push
movb
mov
not
movb
call
call
lea
ja
push
call
not
pushf
push
pushf
inc
call
jmp
adc
pusha
call
mov
push
jmp
not
lods
pusha
pushf
inc
inc
rcr
rol
seta
mov
push
dec
xor
ror
neg
pushf
stos
pushf
mov
mov
movb
jmp
lea
mov
btr
shl
sub
lea
mov
pusha
bt
sub
test
pusha
pushl
popl
bt
cmp
call
lea
jae
clc
xor
jmp
bts
mov
cmp
cmp
bt
call
cmp
cmp
call
lea
je
bt
pusha
sub
pushf
clc
cmp
pusha
push
push
lea
ja
stc
push
cmc
imul
stc
stc
add
pusha
pushf
lea
jmp
movzwl
adc
mov
stc
clc
stc
add
pusha
mov
test
call
pushl
lea
call
pusha
pusha
pushl
lea
jae
cmp
xor
pushf
pusha
lea
call
pushf
movb
call
lea
ja
push
inc
pusha
inc
or
rcr
add
xchg
aaa
clc
daa
mov
call
pushf
movb
lea
je
stc
add
pusha
cmp
pushl
push
mov
pushf
lea
jb
bt
cmc
stc
cmc
cmp
pushf
pusha
jmp
pushf
inc
mov
movl
not
push
call
push
lea
jae
pushf
lea
jne
jmp
movl
pushf
jmp
mov
call
lea
jbe
sub
mov
or
btr
movsbw
add
neg
rcl
mov
sbb
add
stc
not
movl
setb
neg
or
call
movl
movb
pushl
call
jmp
inc
lea
pushf
mov
mov
dec
inc
lea
seta
pusha
neg
xchg
lea
push
mov
sub
dec
test
and
mov
add
clc
bt
pushf
mov
shld
btr
sar
shld
mov
pushf
call
cmp
call
pop
inc
rcr
inc
ror
mov
fidivrl
pop
push
xchg
xchg
outsb
scas
jl
add
or
cs
mov
xor
jbe
les
adc
repz
dec
stc
leave
pushl
lcall
ret
ljmp
pop
dec
rorl
mov
inc
daa
nop
push
mov
xor
push
or
jg
sti
mov
lahf
pushf
nop
adc
fs
push
mov
gs
daa
jl
push
sarb
push
std
mov
pop
pushf
bound
adc
fs
ret
xchg
mov
pop
clc
cmp
mov
iret
mov
push
not
push
mov
das
call
pop
neg
cld
fidivl
adc
push
mov
mov
ret
shlb
testl
lock
jg
mov
sbbl
xorb
pop
and
and
jge
addr16
imul
frstor
clc
mov
sbb
and
lea
xor
lock
cs
jge
ficompl
mov
sbb
fisubrs
and
sbb
sub
mov
sub
pop
sub
jmp
jecxz
fistpl
push
andl
lds
mov
stos
fwait
ret
push
push
adc
movsb
fs
dec
xchg
shlb
mov
and
rol
pushf
mov
dec
stc
neg
clc
stc
shr
jmp
clc
cmc
bt
cmp
mov
lea
ja
je
call
push
call
cmpb
jmp
call
pushf
inc
pushf
movb
not
push
test
cmp
jmp
rcl
add
rcl
movzbw
btr
movl
push
mov
clc
cmp
cmp
mov
pusha
lea
jbe
shl
bsr
xchg
or
sub
clc
mov
xchg
mov
mov
shld
add
cmc
shld
cmc
shrd
shr
rcl
mov
movzbw
sub
add
jmp
cmp
cmp
jmp
pushf
lea
je
jae
pusha
push
movw
adc
push
pushf
pushf
lea
jmp
push
lea
jne
jmp
add
push
jb
je
push
jb
arpl
jae
gs
outsl
jb
add
xchg
lcall
icebp
add
cmc
mov
jmp
mov
mov
mov
lea
ja
pushf
pushf
lea
jb
jmp
push
faddl
inc
sbb
bound
gs
lock
rcrb
popf
push
add
xchg
inc
stos
mov
jne
js
mov
test
mov
inc
subb
jae
outsl
repnz
std
xor
xor
movsl
fisubrl
lret
jmp
add
inc
gs
outsl
fs
gs
imul
add
enter
add
pusha
pushf
push
push
lea
jmp
pusha
mov
mov
inc
call
jmp
fs
jle
stos
mov
xor
or
insl
iret
cwtl
std
lods
enter
je
sub
cmpb
adc
xor
je
std
mov
clc
and
xchg
xor
jne
cld
pop
mov
sbb
lds
lahf
sub
adc
fxch
xor
push
lret
aam
xchg
adc
mov
mov
dec
insl
in
dec
out
fs
xor
ja
cltd
push
lock
inc
imul
cltd
int3
jg
xchg
pop
inc
mov
out
pop
je
fs
sub
and
add
je
jb
arpl
fs
jae
add
je
add
dec
jecxz
aaa
mov
pushf
movl
push
lea
jmp
lea
jg
call
jmp
fisubs
jo
lds
es
inc
or
fistl
dec
fistl
mov
xchg
inc
stos
ljmp
mov
inc
bound
sub
dec
ds
clc
push
stos
lds
lods
bound
loopne
push
notl
es
fs
jnp
push
and
rcl
clc
mov
movzbw
add
setae
push
sub
or
mov
setns
pushl
add
mov
btr
movl
adc
shrd
or
pushl
mov
clc
test
clc
cmp
call
jmp
pusha
dec
stc
pushl
clc
push
neg
cld
pushw
popfw
lea
jnp
pushf
inc
jmp
jl
mov
insb
lcall
mov
add
sub
cmpsb
sbb
xchg
inc
into
jno
outsl
dec
mov
pushl
stos
jo
cmp
lahf
push
test
andl
inc
sbb
mov
lahf
ret
jno
mov
add
pushf
gs
xchg
popa
addl
movsl
pop
ljmp
push
imul
cmp
xchg
jecxz
sbb
bound
xor
cmp
js
sti
es
cmp
jo
xor
imul
hlt
push
cmp
sbb
lret
and
test
cmp
sub
sub
das
adc
mov
jmp
ret
push
popf
loope
cltd
cmpsb
push
jl
std
mov
mov
sub
xchg
ds
sbb
lret
push
test
cmp
push
ljmp
push
add
pop
call
call
or
mov
lret
pop
mov
cmpsl
push
xor
fiaddl
lea
xchg
dec
in
add
scas
cltd
lea
out
dec
jne
lahf
imul
pop
xor
push
sti
push
test
mov
adc
xchg
ficompl
cmp
cld
and
xchg
dec
fsts
fdivr
push
arpl
jecxz
and
fs
mov
and
movw
rcl
mov
dec
btc
mov
or
inc
bts
pusha
mov
test
mov
dec
sub
lea
jae
xchg
not
mov
lods
mov
inc
jmp
adc
mov
movw
lea
jae
jmp
lea
jne
shld
shl
mov
push
cmp
push
add
call
cmp
movsbw
lea
bswap
lea
setg
setge
call
jmp
lea
call
pushf
test
cmp
test
sub
pusha
pushl
call
pushf
pushf
lea
ja
pushf
pushf
sub
bt
lea
add
lea
mov
adc
add
mov
clc
test
cmp
repnz
call
call
jmp
clc
test
jns
jmp
int
addr16
ljmp
lock
push
icebp
nop
lret
and
mov
sbb
mov
push
and
xor
push
push
movsb
mov
rorl
ljmp
sti
inc
xchg
push
arpl
inc
mov
mov
pop
outsb
xor
mov
push
jmp
adc
scas
push
xchg
fisttpll
rcll
jg
xor
outsb
xor
or
fs
in
pop
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
mov
bt
add
bt
mov
cmc
test
mov
call
lea
jne
and
bsr
sub
or
mov
pusha
add
stc
cmc
movzwl
shl
add
mov
clc
pusha
add
call
xor
jmp
popf
sub
or
cmpsb
mov
cmp
pop
sub
adc
imul
daa
mov
faddl
rolb
mov
adc
cmpsl
jge
inc
into
fwait
icebp
test
cld
jmp
inc
rep
in
ss
sahf
cld
sahf
cld
xchg
sbb
push
pop
jo
xchg
into
gs
push
add
xchg
scas
stc
xchg
js
push
in
pop
xchg
mov
inc
pusha
lret
jno
loop
pop
leave
push
sbb
or
mov
lcall
push
in
xor
mov
xor
jecxz
icebp
ljmp
std
cmp
insb
xchg
insb
dec
imul
shlb
jg
sbb
push
fcmovnbe
testl
loopne
push
and
pushf
cmp
imul
inc
cmp
jle
push
outsl
mov
arpl
sbb
test
jnp
jns
aas
int3
imul
std
adc
cmc
push
test
outsb
sbb
call
pop
xchg
inc
es
mov
jb
mull
xchg
aad
or
int3
int3
jne
inc
jmp
test
fwait
cmp
iret
test
pop
jge
mov
pop
daa
scas
outsl
push
stos
leave
flds
mov
test
mov
imul
cmp
cmc
mov
fwait
cmp
imul
mov
hlt
xchg
es
fs
jmp
popw
lea
jae
not
not
mov
jmp
jne
push
call
mov
push
lea
jb
clc
pushf
pushf
call
call
jmp
mov
mov
movb
lea
jmp
jmp
lea
jae
pusha
pushf
pushf
lea
jmp
mov
bswap
bswap
jmp
bound
or
xor
add
popl
inc
sub
add
or
out
or
fsubrs
or
mov
or
out
add
add
cmp
add
adc
or
mov
or
add
or
or
outsl
xor
add
sbb
add
pop
or
inc
inc
or
dec
test
cmp
or
insb
aas
or
add
add
push
add
add
or
add
xor
add
add
add
or
add
add
bound
or
add
add
sarl
or
lea
add
adc
add
or
add
add
clc
jmp
stc
cmp
movb
movw
lea
je
push
lea
jmp
push
adc
pusha
push
push
pushl
lea
jmp
pushf
not
push
dec
mov
push
not
push
movb
pushf
jmp
clc
pushw
popfw
push
movb
call
inc
mov
mov
jmp
add
push
je
dec
outsl
jbe
dec
gs
outsl
jb
add
jle
call
lea
jae
pusha
mov
dec
pusha
mov
not
inc
jmp
jmp
cwtl
jle
cwtl
pop
rol
xchg
jp
cld
in
fists
mov
scas
adc
out
das
cltd
aad
adc
andb
jg
fistps
dec
dec
data16
nop
cmp
cmp
std
jno
xor
sub
push
pop
pop
out
in
in
lods
into
notl
dec
insl
out
imul
test
ds
in
test
iret
adc
inc
or
js
movsl
mov
or
loop
mov
add
jge
pop
cltd
mov
jae
sbb
adcb
push
mov
call
pusha
push
lea
jne
sbb
pushf
mov
push
pusha
add
test
push
movzwl
or
mov
call
movl
pushf
call
push
mov
not
lods
pusha
bt
neg
pusha
push
call
pusha
pushl
rep
pushf
push
lea
jnp
pop
push
lea
jmp
add
push
imul
jb
je
arpl
inc
and
push
pushf
jmp
fisttpl
les
adcb
xchg
test
mov
adcb
and
jg
bound
xor
inc
xchg
lret
push
and
jecxz
push
mov
fs
das
pop
mov
pop
push
fwait
leave
pop
jge
enter
nop
mov
mov
jle
xchg
sbb
out
sbb
sub
sahf
lods
and
hlt
movsl
ss
mov
movsb
ljmp
lods
out
add
out
mov
pop
loope
arpl
fs
inc
adc
bt
bts
rol
cmc
mov
push
and
test
add
pushf
pushf
pusha
push
lea
jmp
pushf
jmp
lea
jne
shl
rol
rcl
lea
mov
pushf
pushf
jmp
mov
jmp
add
push
je
pop
gs
dec
gs
outsl
jb
add
lea
jmp
setg
mov
jmp
call
jmp
push
inc
jmp
call
rcl
push
sub
shrd
bts
cmp
xor
mov
bts
bsf
movsbw
pushl
mov
neg
add
lea
shr
test
not
bsr
mov
sub
add
lea
pop
call
pushf
push
lods
pushf
pushf
jmp
cmp
push
call
cmc
jge
push
and
addr16
dec
pop
inc
mov
cs
mov
pop
push
xchg
inc
sahf
mov
sub
je
pop
test
pop
sub
repz
subb
jno
pop
pop
mov
sub
inc
mov
cmp
push
imul
out
inc
mov
sbb
inc
mov
pushl
rep
lea
pushl
pushl
mov
pushf
movb
push
pushf
lea
jmp
pushf
pusha
lea
call
call
pusha
inc
mov
bt
bt
cmc
rol
call
push
push
dec
cmp
cmp
push
neg
pusha
lea
call
bt
clc
call
mov
call
lea
call
pusha
lea
jmp
stc
cmp
stc
pusha
sub
movb
call
pop
lret
add
mov
lret
jae
jns
add
cli
shlb
inc
hlt
fsubrp
and
sti
adc
sbb
push
xor
mov
sbbl
xor
mov
jle
fcom
movsl
mov
xchg
add
sub
outsl
jnp
sbb
test
pop
inc
leave
pushf
je
sub
adcl
jnp
insl
xor
in
jg
jnp
cld
add
mov
adc
fidivrs
notl
push
jmp
cmp
pop
xor
insl
jns
mov
sbb
popf
add
call
scas
cs
loop
outsl
or
sahf
repnz
sarb
icebp
jle
scas
popf
fnsave
shr
fisubrs
icebp
loopne
add
sub
out
mov
cli
jae
sahf
lret
xor
jl
mov
repnz
jg
repnz
xchg
jle
mov
and
mov
ss
out
and
out
nop
inc
fisubrs
je
sarb
insl
loop
mov
mov
js
aaa
add
xchg
mov
loop
add
or
gs
inc
testl
add
adc
cmp
clc
sub
test
cld
inc
push
xchg
jmp
out
test
in
leave
xor
jle
push
xchg
add
jne
or
cmp
mov
sbbl
push
cli
outsl
jmp
in
mov
xor
push
in
clc
push
das
pop
movsl
lcall
jmp
xor
add
pop
or
pop
sbb
int
dec
jp
pop
loop
into
xor
cmp
xchg
xchg
das
rcll
fsubr
bound
ljmp
add
jle
ljmp
pop
mov
xor
pop
test
repnz
div
out
js
repnz
jo
sti
rcrb
icebp
mov
loop
jnp
inc
xor
sahf
jb
mov
xor
aam
test
cmp
out
shrb
and
stc
es
les
cmp
mov
jp
out
les
jnp
lock
xor
fidivrl
js
lock
cmpsb
orb
cmc
dec
sub
or
sub
stc
cmp
lahf
mov
das
mov
leave
out
das
in
movsl
sti
loope
std
das
stos
xchg
jo
dec
cmc
xor
lahf
fidivs
scas
loop
cltd
out
add
ret
hlt
pop
push
ss
out
js
loop
sub
fwait
sahf
sti
int3
ja
leave
push
xor
ss
out
push
jns
pop
cmp
dec
xchg
stos
mov
ljmp
loope
lcall
int3
adcl
inc
in
push
movsl
add
icebp
lret
pop
cmp
pop
pop
add
mov
xor
outsl
lods
std
cld
jne
jecxz
dec
icebp
ljmp
jge
xor
test
dec
in
mov
ret
dec
loope
fsubr
popf
insl
pop
inc
xor
mov
sub
cmp
and
pop
push
mov
xchg
fs
leave
mov
xor
jne
scas
test
adc
pop
xor
ja
jns
repnz
popf
pop
stos
mov
in
lcall
out
in
ja
in
mov
out
pop
neg
rcrb
lock
add
xor
adc
sti
daa
clc
aas
push
jnp
mov
jmp
add
xor
sti
shrb
in
pushf
divl
mov
std
cmp
pop
dec
xlat
inc
push
mov
push
jae
pop
xor
lods
inc
pop
fistpl
notb
push
adc
test
pusha
lea
call
incb
add
imul
dec
dec
inc
push
pusha
rcrl
add
cmp
leave
sti
or
loopne
cli
push
das
xchg
ljmp
jo
rorl
adc
mov
pop
imul
popa
stc
or
jb
lret
cld
mov
sub
xor
lret
push
vmovlps
push
jg
call
push
and
adc
xor
xchg
mov
faddl
ja
mov
sub
push
filds
icebp
int
data16
arpl
mov
rcrb
repz
test
cmc
repnz
das
scas
jo
jp
lock
pop
aaa
ss
xor
popa
fdiv
add
mov
in
das
push
inc
ret
inc
out
jae
xor
insl
jo
or
shrb
sbb
push
add
loope
or
lock
adc
cli
mov
push
sti
cli
cmp
mov
xchg
aam
mov
jnp
xor
xchg
ret
or
mov
adc
xor
xor
sbb
lcall
pop
dec
push
lcall
pop
inc
inc
mov
rclb
dec
jno
mov
xor
test
stos
fidivl
ss
push
pop
xor
scas
faddl
cltd
mov
jg,pt
test
bound
mov
jne
jl
rclb
or
cmp
sahf
icebp
shr
ljmp
loope
jno
cmp
ljmp
loope
jno
cmp
jno
imul
rclb
jno
cmp
sahf
and
add
add
outsl
jae
dec
popa
outsb
fs
add
add
xor
pushl
pushf
lea
jmp
movsbw
not
lahf
movb
jmp
pusha
push
inc
pusha
rol
mov
movb
dec
cmp
call
cwtl
jle
sarb
lret
sahf
movl
ret
aad
mov
stc
scas
shrl
mov
fstpl
dec
mov
fdivl
cld
mov
sbb
push
loopne
lcall
mov
stc
fisubrs
nop
push
sbb
leave
cmp
sbb
xchg
xor
jg
inc
jl
daa
popf
jmp
and
nop
jp
in
and
jo
push
outsl
fsubl
loop
sbb
and
popa
xor
xor
xchg
jg
jae
adc
shl
jg
sub
fs
addb
push
mov
jecxz
pop
call
add
adc
xor
sub
xchg
test
dec
mov
cmc
out
adc
addb
add
add
cmp
adc
insb
sub
mov
shl
mov
mov
jecxz
or
cmp
insl
mov
mov
sub
pusha
lea
jg
pusha
rep
mov
movzbl
lea
jnp
pusha
mov
push
movw
push
movw
lea
jmp
sbb
jmp
push
rolb
mov
bound
pushf
mov
inc
loopne
lods
mov
fs
cwtl
hlt
movsb
xor
lock
pop
jg
cmp
mov
xchg
bnd
push
ss
push
dec
clc
pop
movsb
test
mov
cmp
push
mov
cmc
jb
movsb
add
stos
aaa
push
pop
xchg
mov
and
xchg
test
sbb
hlt
int
mov
adc
jo
stos
mov
push
pushl
pushf
lea
jmp
pushf
push
pusha
lea
jne
pusha
pushl
pushf
mov
mov
call
jmp
cli
loopne
push
mov
jb
cld
sbb
pop
imul
leave
fmuls
add
int3
loope
xchg
push
aad
push
pop
icebp
jl
xchg
bound
mov
or
pop
testl
xchg
fs
testb
jmp
add
push
jb
arpl
jae
xor
jb
je
jmp
rol
pushl
movb
call
push
push
mov
pushf
pusha
pushl
ret
lea
jne
movzbw
pushf
movsbw
movb
push
lahf
mov
movzbw
movsbw
lea
lea
jp
push
jmp
repnz
pushf
push
pushf
lea
jne
rcr
shr
mov
cmp
sub
call
push
pushl
adc
jmp
pushf
lea
ja
pusha
mov
call
xchg
call
mov
pusha
call
lea
jo
dec
stc
call
mov
jmp
clc
clc
pushf
sub
pushf
rep
movzbw
bswap
call
push
pushf
fstpl
jg
ror
cmpb
or
cmp
xchg
push
inc
and
mov
xchg
xor
jb
sarl
add
push
sbb
push
lret
aaa
jb
xchg
mov
sbb
imul
ja
jge
sahf
pop
add
nop
push
mov
aam
mov
hlt
adc
mov
cmpsb
xchg
addl
movsb
or
inc
fldl
fs
cmp
ljmp
sti
cmp
inc
push
push
pop
outsl
mov
sbb
bound
mov
not
push
push
inc
call
push
not
push
call
or
jle
data16
icebp
lret
gs
out
mov
mov
jnp
jae
pop
cmp
lea
pushf
jg
sub
lea
add
fcmovnbe
int
mov
adc
xchg
sbb
ja
bound
ss
push
sbb
inc
add
mov
fs
out
neg
imul
gs
xor
cs
insb
add
xchg
push
decl
xchg
shrb
dec
cmp
ror
add
seta
rcl
cmc
mov
mov
seto
mov
push
mov
push
bt
repnz
pushl
lea
jne
lea
seta
movb
cwtl
bswap
push
pusha
movsbw
movsbw
lea
jmp
cmp
movb
pushf
lea
ja
setae
pushf
inc
pusha
pushf
mov
inc
bt
sar
xchg
or
shl
mov
not
sub
shl
clc
mov
jmp
pushf
rep
movzbw
jmp
call
call
xorb
jecxz
jmp
iret
xchg
fidivrl
add
pop
or
inc
cli
xlat
les
or
pop
mov
cmp
arpl
mov
push
dec
out
pop
pop
hlt
adc
push
or
aad
inc
arpl
fwait
leave
pusha
lcall
addr16
pop
jns
xor
aam
shlb
xor
in
mov
cli
aas
dec
sub
out
xor
adc
dec
imul
add
mov
pushf
cmp
out
mov
mov
sbb
imul
jne
gs
xor
fs
insb
add
rcrb
add
add
pop
std
std
andl
jo
push
inc
ret
int
insl
and
inc
pushf
mov
pop
scas
ss
ficomps
sbb
icebp
enter
and
aam
push
lret
add
out
fldenv
adc
test
negl
add
jb
inc
push
mov
in
xchg
push
mulb
or
clc
ja
loopne
enter
rolb
jecxz,pt
jmp
cmp
call
adc
pushf
pushl
ret
lea
ja
pushf
pusha
lea
jb
pusha
stc
cmpb
jmp
lea
jbe
shl
pusha
lea
js
movsbw
sub
xchg
shld
mov
bsf
stc
push
mov
rcr
pop
shl
add
rol
dec
call
call
imul
imul
lea
jne
jmp
sub
sbb
cs
ror
test
repnz
iret
loopne
mov
xor
int
cmp
jno
outsb
add
xlat
fsub
ds
call
cmpsb
jae
or
mov
sbb
push
push
rcrl
add
cwtl
mov
das
xor
or
and
push
adc
addr16
mov
xrelease
dec
rorb
push
adc
mov
mov
dec
pop
test
add
inc
rcrl
popf
mov
fadds
cld
rcrl
dec
mov
sbb
fs
push
outsb
das
xor
repz
jle
adc
push
jmp
xchg
shrl
mov
and
lret
mov
jbe
mov
and
sbb
xor
mov
daa
out
or
pop
popf
fdivs
fldenv
ja
fwait
addr16
aas
cmp
mov
mov
adc
das
xor
push
je
push
mov
jb
test
mov
out
fldenv
sub
xor
inc
mov
int3
mov
xchg
aas
mov
jecxz
lds
nop
sub
mov
and
lods
xchg
aad
in
enter
lods
xchg
outsl
faddl
mov
inc
and
in
aad
push
push
pushf
push
lea
jmp
xchg
and
lea
shl
or
mov
mov
call
call
jmp
cmp
pusha
lea
not
lahf
sete
mov
mov
call
lea
jne
dec
lea
rcr
mov
xor
shr
dec
sub
not
not
call
add
inc
jb
popa
je
inc
imul
bt
clc
push
repnz
movw
jmp
push
imul
outsl
bound
es
fs
insl
and
jne
arpl
insl
jo
bound
and
and
and
outsl
bound
and
outsl
insb
and
arpl
jae
and
je
jmp
cmp
pushl
pusha
push
lea
je
call
add
dec
gs
popa
addr16
outsl
js
add
add
cmc
sar
clc
cmp
lahf
cwtl
lea
call
outsb
je
insb
insb
cs
insb
add
and
jo
data16
and
jne
jp
jno
push
jne
es
insl
and
jne
arpl
insl
jo
bound
and
and
and
outsl
bound
and
outsl
insb
and
arpl
jae
and
je
stc
pushf
mov
shld
bts
sub
rcl
mov
sub
cmp
sbb
bswap
mov
push
pusha
xor
jmp
lods
movb
pusha
jmp
mov
lea
ja
bswap
call
mov
rol
xor
bound
inc
leave
jp
xchg
jne
stos
push
mov
mov
leave
push
jns
lods
popf
outsb
sti
or
decb
xchg
sbbb
lds
loope
push
pop
pop
sbb
mov
lret
std
sub
add
cltd
mov
pop
mov
pushf
out
mov
lahf
add
xlat
adc
popl
inc
inc
or
inc
cmp
push
inc
sub
lods
stos
add
mov
fisubrs
dec
or
outsb
cmc
jp
hlt
cmp
sbb
rcrb
rcrb
shrb
xor
adc
push
fbld
lret
out
inc
lods
stos
subb
jp
push
fisubrs
repz
cs
rorl
fldt
lcall
or
insl
mov
cli
movsb
push
inc
popf
pop
push
xchg
fstp
inc
add
cmp
adc
scas
iret
pushf
lea
je
jmp
call
fisttpl
les
sub
xchg
adc
or
cmc
push
or
int3
pop
xchg
cmp
dec
rol
sub
ret
ljmp
xorl
cli
xlat
movsb
adc
sub
mov
jmp
test
pop
sub
mov
addr16
pop
insl
push
mov
mov
enter
pop
orb
imul
push
subl
cwtl
sub
mov
subl
jns
add
pop
fs
xor
popa
jecxz
xchg
out
xchg
iret
mov
push
aam
jle
shl
or
adc
adc
clc
inc
inc
rol
push
jb
push
jmp
test
js
or
mov
cmp
sbb
cmpsl
cmp
sbb
push
push
stos
push
and
xor
adc
xlat
sbb
lds
xchg
insl
or
cmp
cltd
addb
and
and
xchg
xchg
lds
pushw
out
pop
test
and
imul
out
daa
nop
xorl
mov
popf
es
loopne
iret
or
popa
dec
repnz
jmp
sub
mov
xlat
sub
cld
xchg
push
and
jne
push
and
iret
mov
stos
int3
pmulhw
mov
jmp
sahf
fs
or
cltd
jmp
pusha
mov
pushf
pushl
ret
add
push
je
inc
fs
jae
push
jb
jbe
insb
gs
add
add
add
add
add
add
mov
or
push
sub
add
xchg
add
sbb
add
xchg
add
sub
add
xchg
add
xor
add
add
cmp
add
or
test
add
add
and
ja
pusha
pushl
lea
jb
push
test
call
lea
call
push
jmp
repnz
movw
call
sti
leave
push
sbb
stos
stos
xchg
mov
cmovs
loop
test
jmp
xchg
sbbb
ljmp
jno
mov
lret
cmp
imul
jge
jae
fcoms
jnp
jmp
lret
rcrl
xchg
jmp
dec
addr16
rol
lret
mov
test
fs
loopne
mov
icebp
push
bswap
mov
movl
pushf
movb
lea
jmp
add
push
je
inc
popa
jo
jne
gs
je
arpl
popa
arpl
jb
arpl
pushf
push
call
sbb
aam
push
int
es
mov
scas
nop
leave
mov
repz
or
inc
popa
bound
repnz
movsb
fldenv
insl
fwait
xchg
jb
push
mov
sbb
jge
insl
add
cmpsb
fsubrs
fidivrs
lret
cli
jns
cmpsl
dec
daa
or
mov
jl
mov
mov
xor
add
or
fsubs
bound
jle
mov
xor
outsb
xor
movsl
loope
in
pop
or
mov
or
xchg
lock
loope
xchg
sbb
testb
sub
movsl
cli
jnp
ds
cmp
or
ss
rcl
and
repnz
into
jae
pop
and
scas
int3
popf
out
das
xor
xor
in
xchg
cmpxchg
push
xor
test
ss
shlb
xor
cmp
das
cmp
mov
jge
mov
in
addl
inc
test
inc
test
xlat
cwtl
add
das
mov
and
cmp
loope
adc
pop
pop
mov
arpl
sti
lock
repnz
and
shll
jg
and
mov
out
mov
and
cbtw
int3
mov
insl
pop
inc
xchg
mull
repz
xchg
int
push
mov
js
jb
je
mov
jle
push
sub
add
mov
mov
dec
imul
je
js
push
lods
xor
fs
outsb
jp
call
lea
jae
xadd
ror
bts
mov
movsbw
mov
mov
rcl
bt
or
mov
cmc
clc
pusha
pusha
sub
cmc
repnz
push
movw
mov
mov
lea
jne
call
pop
fstpl
iret
inc
ror
fwait
in
test
scas
out
sbb
sbb
jne
test
aas
push
out
loop
js
je
faddl
xchg
popa
sbb
in
add
push
adc
or
push
inc
fistpl
insb
lcall
push
inc
mov
xchg
std
or
movsl
loope
popf
push
ds
add
cmpsb
sbb
out
scas
in
mov
loopne
jp
in
push
stos
dec
jne
push
sbb
cmp
inc
jns
sub
dec
movsl
ret
test
imul
dec
lea
fs
mov
rol
add
cmc
rol
mov
not
jmp
sub
jmp
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
jae
mov
in
call
jmp
dec
add
popa
push
out
popa
rcrb
hlt
jge
arpl
fwait
xlat
pop
xchg
sub
ja
js
xor
fldcw
sub
mov
mov
or
rolb
out
outsl
xor
repz
aad
push
cmc
xor
aaa
adc
mov
mov
sub
push
loopne
mov
sub
daa
push
and
push
mov
or
adc
andb
push
xorl
lahf
incb
dec
xor
jle
das
xor
mov
daa
push
and
scas
push
mov
xlat
loop
fmull
das
fdivs
mov
ret
cmpsl
xlat
ljmp
paddsb
jecxz,pn
or
jg
ret
and
push
mov
out
sarl
fs
mov
sbb
lea
call
pushf
lea
jb
pusha
pushl
ret
add
add
call
lea
ja
setl
mov
call
movb
jmp
call
push
movb
inc
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
outsl
arpl
jae
xor
js
add
dec
repz
incl
sar
ljmp
faddl
jno
cmp
loop
cmp
cs
push
stc
jle
inc
inc
in
scas
outsl
fsubrs
stos
mov
push
nop
pop
in
iret
test
push
cltd
mov
popa
and
fsubs
jb
imul
jp
stc
sub
cs
dec
jg
notrack
push
aaa
lods
out
and
pusha
repz
pop
mov
in
cmc
idivb
ja
mov
ret
stc
push
inc
push
pushf
pop
stos
je
bound
aaa
test
in
jne
iret
dec
or
cmp
or
shll
mov
cmp
popf
icebp
mov
xor
cmp
xchg
into
pushf
cmpsb
rorl
or
sub
jl
mov
cmp
mov
cld
seto
hlt
jmp
xlat
pop
test
sbb
sbb
fisubs
outsl
add
or
cld
rol
sub
cmpsl
fmuls
fistpl
test
and
shll
jmp
repz
jno
stc
push
outsl
dec
test
imul
mov
mov
mov
lock
inc
shll
push
ret
pop
lods
cmp
mov
popa
and
push
jno
xor
xchg
sub
mov
cwtl
cmp
pop
sbb
add
and
repnz
arpl
fs
ss
enter
rol
and
test
mov
adc
push
jg
mov
mov
jmp
jmp
mov
loopne
xchg
adc
subb
or
sub
mov
jmp
clc
add
dec
mov
addr16
mov
mov
cwtd
outsl
push
fucomip
ret
xchg
mov
pop
sbb
test
xor
jge
and
sbb
imul
fdivr
mov
xor
push
xor
test
fucomip
ret
mov
cmp
sbb
lret
ret
sub
xchg
mov
pusha
out
cli
mov
adc
inc
pusha
pushf
fisubrl
dec
pop
leave
adc
or
mov
sbb
mov
xor
pop
cli
add
cmp
dec
dec
jnp
into
fiadds
dec
dec
or
mov
xchg
mov
sbb
scas
pop
loop
ret
add
xor
cmc
inc
pop
adc
addr16
sub
loopne
add
cmp
add
in
sub
jo
pop
ja
jge
in
mov
mov
and
push
aam
pop
orb
sbb
xchg
xchg
push
scas
sbb
xor
push
and
jp
xchg
leave
mov
imul
adc
xchg
mov
js
mov
or
stos
mov
mov
push
out
mov
mov
fwait
add
adc
fwait
rcrb
stc
cmc
cmc
bt
cmp
push
pushf
pusha
lea
jae
stc
cmp
call
push
lea
jns
pusha
movb
movl
push
push
pusha
movw
movl
movw
movb
lea
jmp
push
call
test
push
pushf
pushf
lea
je
or
push
sar
add
movsbw
mov
pushf
pusha
add
cmp
pushl
mov
stc
or
bt
xor
mov
test
cmp
pushf
call
lahf
test
jne
pop
jo
repnz
xor
inc
js
mov
arpl
test
ret
push
push
sub
rclb
sub
xchg
mov
aaa
jae
dec
orl
lcall
xor
cmpsl
xorl
fwait
inc
jns
in
int3
or
xchg
mov
jne
sbb
mov
bt
pushf
bt
neg
clc
pushw
popfw
pushf
pushf
call
rep
mov
pusha
pushl
mov
pushl
movb
pushl
lea
jmp
roll
jae
out
iret
xchg
sbb
pop
jge
out
sbb
jecxz
pop
out
pushf
repz
out
test
cmp
push
cmp
mov
xchg
or
dec
adc
push
xor
out
cld
cmp
cltd
dec
jo
fstps
jmp
pop
and
add
sbb
xor
xchg
and
pushf
mov
jbe
ja
idivl
and
pop
xchg
nop
in
push
or
sub
movsl
fs
lock
push
jl
roll
rcrb
fs
sub
call
pushf
mov
seta
jmp
jmp
lea
lahf
mov
pop
mov
call
jmp
bswap
seto
lea
pop
mov
jmp
call
add
push
imul
jb
je
arpl
add
fsubr
ret
inc
repz
dec
sti
decl
test
mov
dec
bswap
mov
stc
add
pushf
call
pusha
add
shl
btr
add
sub
sbb
mov
cmc
stc
push
cmc
shr
jmp
inc
mov
clc
test
bt
and
clc
jmp
jmp
mov
bswap
mov
jmp
lea
jae
stc
push
cmp
push
push
pusha
lea
ja
inc
call
setnp
pusha
mov
call
jmp
add
push
gs
gs
outsl
outsb
imul
imul
fsubs
rol
inc
and
cmp
pop
stc
push
fldenv
sarl
movb
test
movw
pushf
xor
bt
cmc
cmc
repnz
jmp
push
push
adc
mov
pushf
pushl
ret
sub
xor
xor
cli
inc
les
or
xchg
push
es
push
mov
icebp
xor
xor
push
sbb
mov
sti
enter
fsubl
fs
aas
mov
shl
fdiv
scas
jmp
push
jmp
lods
test
cmp
pushl
neg
mov
pusha
jmp
inc
jmp
mov
push
mov
mov
call
pushf
lea
jae
pusha
pusha
lea
jne
push
pushf
stos
pushl
pushl
push
movb
lea
jmp
dec
mov
rorb
shrb
lods
lock
stos
mov
or
mov
daa
adc
addb
pushf
fs
xor
hlt
sub
xchg
outsl
push
jp
jmp
es
fstpl
in
jmp
push
mov
out
std
xchg
out
mov
ret
pop
das
scas
lock
insl
mov
or
sbb
push
mov
aad
jg
jns
xor
push
sub
sbb
sbb
out
out
jle
xchg
jnp
fs
outsb
divb
lea
bswap
mov
movw
jmp
test
test
call
pushf
push
xchg
call
pushf
push
movb
lea
call
jmp
adc
cmp
pushf
shr
rcr
bsf
bsr
mov
sub
call
pushf
pushf
mov
pusha
movw
pushl
ret
sub
cmp
pusha
pushl
popl
test
mov
pushf
cmp
pusha
lea
ja
stc
sub
ror
add
clc
lea
xor
sar
mov
add
cmp
sub
cmp
mov
push
pushf
repnz
pushf
mov
jmp
pusha
mov
lea
call
jae
push
adc
pushl
pushl
mov
lea
call
pushf
pusha
call
and
rol
push
xor
or
inc
mov
add
jl
add
cltd
adcb
xchg
stos
jmp
inc
ss
into
pop
fs
pushl
inc
enter
ret
rcr
push
cld
loop
or
mov
push
notl
leave
sarb
int3
mov
dec
cli
and
inc
and
outsb
inc
dec
and
xchg
rclb
mov
pop
scas
lods
jmp
scas
inc
mov
jno
imul
push
mov
sub
mov
sub
inc
xchg
inc
push
jp
lods
loop
iret
jle
adc
stos
les
add
add
cs
jns
sti
loopne
loop
pushf
and
xchg
pop
mov
clc
insb
mov
and
inc
add
and
mov
or
cmp
pushf
lea
jbe
call
bt
cmp
pushf
push
pushl
lea
jb
bt
cmp
pushf
cmp
push
lea
jae
sbb
mov
shl
stc
mov
dec
setl
jmp
mov
push
movb
lea
jmp
stc
test
not
call
dec
loopne
mov
rolb
pop
imul
out
mov
xchg
fdivs
sbb
cmc
jmp
sti
mov
arpl
aas
pop
ficoms
adcl
cmp
es
add
lds
mov
sub
das
xlat
enter
popf
sub
es
test
pushf
xchg
les
scas
pop
ror
outsl
jne
ret
mov
testb
sbb
imul
jle
sti
into
push
sub
jbe
cmp
ret
repnz
sbb
in
dec
call
lea
jne
bt
mov
pusha
cmp
push
cmc
add
movb
cmp
cmc
pushf
movzwl
jmp
mov
jmp
cmpb
call
pusha
pusha
pushf
push
inc
stc
pushf
rol
push
dec
cmc
call
pushf
cmp
push
pushf
jmp
cmp
movw
pusha
lea
jae
pusha
pusha
add
jmp
add
insb
jae
jb
insl
jo
inc
add
or
lea
call
mov
movb
jmp
pusha
push
mov
mov
pushf
push
pushl
ret
lea
push
call
call
mov
call
cmc
movl
rol
movw
pusha
stc
push
not
bt
clc
cmp
bt
xor
mov
sub
movw
mov
pushf
lea
jmp
lahf
mov
jmp
cmp
pusha
test
add
call
lea
push
pusha
mov
pushf
jmp
sub
jmp
repz
popl
pushf
movl
bt
xchg
bts
bswap
cmc
mov
bt
stc
pushl
popl
bts
bswap
cmc
movl
bt
btr
btc
xchg
mov
movzbw
rol
inc
jmp
xor
setle
add
pushf
jmp
pusha
pusha
movw
pushf
mov
pushf
pushf
jmp
pusha
call
cltd
mov
lea
cwtl
mov
pushf
push
pushl
mov
divl
pusha
call
push
mov
rcr
mov
bt
xchg
btr
pop
movsbw
rcl
pushl
btr
pusha
movl
push
mov
not
rcl
jmp
call
mov
pusha
pushf
push
lea
jmp
mov
pusha
call
pushf
jmp
pushf
pushl
popl
pushf
pusha
lea
jmp
sar
stc
setnp
cwtl
mov
lea
sub
mov
pusha
call
btr
clc
cwtl
lea
cmc
cmp
pushf
jmp
pushf
dec
push
mov
pushf
pushf
not
pushf
pushf
dec
pusha
call
push
call
call
pusha
pusha
jmp
call
or
shl
mov
pusha
stc
push
sub
clc
pushf
test
add
pushf
movw
push
pushf
popl
push
pushl
popl
movw
push
movb
mov
lea
jmp
pusha
mov
mov
mov
mov
call
mov
pushl
repz
popl
push
movb
pusha
mov
rcr
bts
xchg
not
pop
push
pushl
popl
call
push
pushl
pushf
popl
pushl
call
pushf
lea
jo
push
std
jge
mov
call
lea
je
pushf
pushl
pushf
popl
call
sub
clc
pushf
bt
pushl
xor
mov
jmp
test
add
push
pushf
pushf
lea
jmp
mov
pushf
mov
call
jmp
push
bswap
mov
pusha
pushf
lea
cpuid
pusha
sub
jmp
push
movw
lea
ja
pushf
xadd
lea
rcl
lea
shr
sub
aas
dec
lea
shl
and
sbb
sub
lea
jmp
pushf
cmp
mov
sub
pushl
mov
mov
pushf
pushl
pushf
lea
jmp
add
cmpsl
xchg
add
ficoml
add
ret
xchg
add
out
add
add
xchg
add
mov
xchg
add
cmpsb
xchg
add
stos
xchg
add
mov
add
xchg
add
mov
add
xchg
add
repnz
add
ficoml
add
mov
add
xchg
add
xchg
add
mov
add
xchg
add
jecxz
add
xchg
add
loop
add
add
xchg
add
xchg
add
mov
add
xlat
xchg
add
xchg
add
xchg
add
add
mov
add
xchg
add
xchg
add
rclb
add
mov
add
xchg
add
xchg
add
add
call
xchg
add
mov
xchg
add
call
xchg
add
xlat
xchg
add
xchg
add
xchg
add
mov
xchg
add
xchg
add
mov
xchg
add
xchg
add
in
xchg
add
jecxz
add
mov
add
xchg
add
movsb
xchg
add
mov
add
xchg
add
ret
or
xchg
add
xchg
add
ret
pop
ljmp
xchg
xchg
add
mov
add
repnz
add
out
add
mov
add
lods
xchg
add
xchg
add
rclb
add
mov
xchg
add
movsb
xchg
add
xchg
add
xchg
add
ficoml
add
add
xchg
add
mov
xchg
add
xchg
add
xchg
add
mov
xchg
add
xchg
add
xchg
add
movsb
xchg
add
rclb
add
xchg
add
mov
add
cmpsl
xchg
add
mov
add
mov
add
xchg
add
cmpsb
xchg
add
xchg
add
cmpsl
xchg
add
mov
add
rclb
add
rcll
cmpsb
rclb
add
xchg
add
movsb
xchg
add
xchg
add
xchg
add
mov
xchg
add
add
out
add
mov
add
cmpsl
xchg
add
lods
xchg
add
mov
add
rclb
add
ficoml
add
cmpsl
xchg
add
add
mov
add
rclb
add
movsl
xchg
add
xchg
add
cmpsl
xchg
add
movsl
xchg
add
ficoml
add
ficoml
add
xchg
add
add
xchg
add
xchg
add
out
xchg
add
movsl
xchg
add
add
cmpsl
xchg
add
ret
pop
ljmp
mov
xchg
add
xchg
add
xchg
add
xchg
add
cmpsl
xchg
add
call
xchg
add
rclb
add
xchg
add
xchg
add
mov
add
xchg
add
rclb
add
ret
shlb
xchg
add
xchg
add
out
xchg
add
loop
add
cmpsl
xchg
add
add
xlat
xchg
add
add
mov
xchg
add
lods
xchg
add
cmpsl
xchg
add
xchg
add
movsl
xchg
add
mov
xchg
add
mov
add
xlat
xchg
add
cmpsl
xchg
add
lods
xchg
add
xchg
add
int3
xchg
add
js
mov
repnz
add
lock
btr
cmp
mov
adc
shl
bt
xor
mov
stc
pushl
popf
mov
movw
pushl
lea
jmp
btr
rol
call
rcl
dec
xadd
mov
rcl
mov
clc
call
jmp
mov
pushl
mov
mov
pusha
pushl
movb
mov
call
jns
push
pushf
not
push
pushl
mov
push
pusha
movb
xchg
bswap
jmp
call
dec
call
jmp
pushf
inc
call
mov
mov
pusha
movb
mov
mov
mov
call
mov
call
pushl
pusha
mov
call
jmp
movb
lea
jl
pushf
mov
je
push
pusha
mov
call
pusha
pusha
pushl
popl
pushl
movb
lea
jmp
shld
push
pushf
jmp
lea
jle
pusha
repz
popl
clc
bt
xchg
rol
cmc
movsbw
btr
mov
xchg
pushl
popl
btr
movl
ror
cmc
mov
pushf
pushl
call
call
pushf
pusha
not
inc
inc
mov
pushl
pushf
lea
push
lea
jmp
jno
shl
test
or
mov
test
cmc
test
add
pushf
push
mov
mov
call
mov
pusha
movb
mov
pushf
lea
jmp
inc
jmp
pusha
lea
je
cmc
sub
test
jmp
xor
test
add
clc
call
or
rcr
mov
rcl
sbb
add
setl
pushf
not
mov
jmp
mov
cmp
cmp
jmp
mov
push
repz
popl
mov
stc
push
push
mov
not
btr
mov
btc
rcl
cmc
pushl
popl
ror
clc
movsbw
btr
push
push
call
pusha
mov
not
jmp
lea
push
pusha
pusha
mov
call
mov
mov
pushf
bswap
mov
pusha
add
call
movw
mov
mov
movb
mov
lea
jae
push
push
lea
jne
pusha
shl
mov
bt
cmp
and
push
cmp
call
mov
dec
push
pushf
cmp
sub
stc
movl
cbtw
cmp
stc
cmc
cwtl
call
dec
not
call
inc
not
not
inc
pop
movsbw
lea
not
lea
movw
mov
mov
push
lea
jmp
not
call
pusha
call
lea
jle
pusha
pushl
popl
pushf
movb
mov
pushl
lea
jmp
movsbw
mov
lea
rol
rcl
bts
pushl
popl
rcr
cmc
movl
btc
lea
mov
btr
rol
movzbw
pusha
mov
pop
not
not
bswap
inc
movsbw
jmp
mov
mov
push
lea
jmp
call
jmp
xchg
bswap
xchg
pushf
rol
pushl
popl
bts
movsbw
movl
pop
pusha
pop
mov
btc
rol
call
bt
mov
sub
movb
mov
movb
mov
lea
jmp
pushf
jmp
movw
pushf
mov
mov
jmp
push
bt
sub
pusha
jmp
pusha
mov
jmp
shl
cltd
daa
pusha
mov
neg
xor
inc
mov
cmc
add
call
lea
call
pusha
jmp
pushl
popf
movl
push
pushf
push
lea
jmp
pushf
push
lea
jne
btr
mov
and
mov
jmp
lahf
mov
shr
not
mov
call
pushf
mov
pushf
jmp
rcl
mov
push
pusha
cmc
stc
sub
jmp
or
bt
notl
push
das
aam
mov
cmp
call
pusha
movsbl
movsbw
lea
mov
lea
jmp
push
mov
jmp
movsbw
mov
lea
bswap
clc
rcl
rol
movsbw
not
pushf
inc
movw
lea
movzbw
not
lea
mov
movw
pushf
lea
jmp
push
pusha
movb
mov
call
pushl
popl
movw
movw
movw
lea
jmp
pusha
movb
lea
push
jmp
bswap
inc
dec
movzbw
mov
rol
neg
lea
bswap
push
ror
pusha
bsr
and
xor
test
movzbw
mov
cmp
pusha
clc
jmp
push
call
mov
push
call
movb
jmp
cmc
push
add
jmp
mov
pusha
repz
popl
cmc
mov
bts
rcl
pushf
lea
xchg
call
jmp
mov
pushl
popl
pushf
push
movb
pushf
lea
jmp
jmp
call
rol
pusha
not
pushl
pushl
xor
push
sub
call
push
xchg
pushf
pop
xchg
repz
popl
rcr
xchg
btc
btr
stc
mov
movl
movsbw
pushf
pushl
popl
movzbw
bt
setb
movl
cmc
call
add
push
pushl
mov
pusha
push
lea
jmp
pusha
cbtw
aam
cbtw
mov
inc
mov
test
sub
mov
mov
stc
jmp
stc
mov
pushf
movw
pushf
sub
jmp
pusha
call
call
pushf
pushf
popl
jmp
pusha
shr
lea
js
test
stc
or
pushf
movw
xor
pushf
pusha
jmp
pusha
mov
call
bts
ror
jmp
shl
sar
rcl
mov
jmp
not
movsbw
movzbw
jmp
pushf
call
jmp
call
jmp
pop
bswap
mov
pushf
not
not
pushf
popl
movsbw
push
cld
pushf
xchg
jmp
call
test
clc
push
pushl
popl
test
pusha
push
add
std
pushl
jmp
movb
mov
call
pusha
pushf
inc
push
not
lea
push
mov
mov
mov
lea
jmp
test
sub
jmp
mov
pusha
jmp
pusha
push
jmp
pusha
mov
push
jmp
call
pushf
mov
jmp
call
jmp
xchg
stc
clc
sub
pushf
pushf
add
stc
cmc
jmp
push
pushf
popl
call
rol
movzbw
jmp
movzbw
setae
mov
pusha
call
test
clc
pushl
popf
pushf
movw
pushl
mov
lea
jmp
mov
pushl
pushf
pushl
ret
pushf
popl
movb
call
pushf
pushf
jmp
movb
mov
jmp
add
add
jmp
movsbl
jmp
movl
pusha
pushl
popl
push
mov
lea
jmp
pushl
pushl
mov
lea
push
pusha
mov
call
jmp
pushf
repz
popl
call
call
pusha
pushf
repz
popl
cmc
mov
not
pop
xchg
pushf
pop
bts
clc
pushl
popl
rol
ror
movl
btr
bts
mov
bt
pushf
bt
ror
rol
pushl
not
movw
lea
inc
not
movsbw
lea
push
movw
push
lea
jmp
sub
pushf
pushf
shl
pusha
mov
pushf
jmp
bsr
movsbl
mov
bsf
bswap
not
test
pushl
popf
xchg
setnp
mov
movzbl
pushf
pushf
mov
call
call
mov
push
push
push
mov
push
pushl
pusha
push
mov
call
lea
push
push
jmp
pusha
push
mov
jmp
call
mov
call
push
jmp
setno
pushf
xchg
movsbw
xchg
pushf
lea
push
push
bswap
setb
push
xchg
jmp
cmp
clc
xchg
bt
test
test
jmp
rcl
rcl
bt
movzbl
cmc
stc
pusha
sub
pushf
pusha
sub
pushl
push
cmc
stc
lea
stc
call
lea
push
pusha
call
call
pusha
mov
bts
lea
movzbl
rcr
pushl
popl
bt
movl
call
push
pusha
call
repz
popl
mov
pusha
clc
xchg
rol
xchg
rcl
lea
cmc
pushl
popl
movzbw
btc
movl
rcr
mov
movzbw
clc
not
rol
mov
lea
jno
pushf
movsbw
not
jmp
jmp
dec
lea
jbe
lea
stc
call
bts
movzww
cmp
clc
xchg
call
lea
jne
jmp
mov
setbe
movzbl
jmp
jmp
repz
popl
bt
clc
cmc
mov
ror
pushf
push
ror
mov
pop
jmp
movsbw
mov
push
pushl
ret
jmp
mov
movb
lea
jmp
call
jmp
pushl
dec
pop
adc
sub
jmp
btc
rcl
mov
ror
setns
btr
add
bts
btc
xor
rcr
push
rcl
ror
sar
add
shl
add
pushf
add
setne
xor
mov
cmc
add
mov
jmp
pusha
mov
pushl
popl
pushf
mov
lea
jmp
push
mov
jmp
pushf
lea
jge
pushf
jmp
pushf
mov
pushf
setns
call
dec
not
mov
not
lea
movsbw
jmp
mov
pushf
push
mov
pushf
lea
jmp
mov
mov
rol
push
movzbw
call
lea
push
pushf
pushf
call
mov
pushf
call
call
pushf
call
pushf
pushf
movb
mov
mov
pusha
mov
pusha
pushf
call
bswap
inc
rcl
pushf
cmp
lea
sub
shld
bt
xadd
sub
sub
xadd
mov
and
mov
lea
add
add
shld
seta
sar
inc
mov
movzbw
shl
cmp
add
not
not
mov
dec
dec
mov
movzbl
dec
rcl
and
bsf
call
clc
rol
pusha
not
movsbw
mov
inc
lea
not
lea
mov
lea
jmp
jmp
popl
push
movb
pushf
lea
jmp
pushl
popl
pushf
movl
pushf
pop
rcl
pop
mov
pusha
pushf
rcr
rol
mov
dec
pop
not
jmp
pusha
lea
pushf
lea
jmp
call
pushf
mov
pushf
movb
call
not
not
pusha
call
bt
clc
sub
test
jmp
pushf
mov
pushf
pushf
call
pushl
jmp
rol
neg
movzbw
btc
mov
cmp
test
test
bswap
jno
stc
test
xor
jmp
pushf
call
pushf
jmp
add
test
call
mov
call
sub
cmc
shr
movw
push
pusha
mov
pushl
push
mov
pushf
popl
jmp
pushl
mov
movb
push
pushl
mov
jmp
pushf
setp
xchg
not
call
push
jmp
neg
pushf
pusha
pushl
pushf
xor
stc
cmp
bt
sub
pushf
mov
jmp
test
pushl
sub
pushf
pusha
xchg
bt
pushf
pushl
mov
test
jmp
cmc
movsbw
mov
bt
setns
movzbl
rol
call
movb
call
clc
bswap
rdtsc
cmp
sub
jmp
mov
call
pusha
call
call
mov
call
pushf
lea
push
jmp
pushf
pusha
mov
movb
movw
push
lea
jmp
mov
push
pushl
pushf
pushl
ret
pushf
mov
push
pushf
pusha
pushf
mov
mov
mov
push
mov
pusha
lea
push
pusha
jmp
mov
call
push
jmp
sar
sub
ror
mov
dec
movsbw
test
mov
pusha
not
cmp
jmp
mov
pushf
mov
pusha
pushf
lea
push
pusha
mov
jmp
call
pushl
popl
pushf
movb
lea
jmp
pushf
mov
call
pushf
pusha
lea
movw
jmp
clc
call
call
mov
movb
jmp
push
pushl
pusha
pushl
repz
popl
jmp
sar
bsf
mov
xor
cmp
mov
clc
pushf
pusha
push
sub
movl
mov
mul
call
mov
movb
movw
jmp
mov
pusha
mov
pushf
pushf
call
mov
mov
lea
jmp
not
pushf
pushl
popl
pop
pusha
pushl
movl
pushf
btc
mov
movzbw
rol
movzbw
bswap
not
not
call
pushf
mov
call
cmp
not
push
test
and
mov
pushf
mov
mov
pushf
popl
pushl
mov
jmp
mov
call
call
lea
movb
push
pushf
rol
cmc
call
jmp
mov
cmc
pushf
sub
pushl
push
mov
mov
movw
push
pushl
lea
jmp
lea
je
push
mov
pushl
lea
jmp
push
ror
add
jae
stc
add
push
add
test
mov
bt
pusha
sub
movl
mov
push
pushf
mov
mov
movb
pushf
lea
jmp
pushf
daa
mov
movzbw
btc
aad
cld
pop
cld
shr
clc
rcr
pop
std
pop
call
aas
mov
sub
mov
pusha
mov
jmp
repz
popl
bt
mov
mov
btr
movl
push
mov
not
clc
pushl
popl
movsbw
rcr
push
rcr
movl
bswap
jmp
call
push
rcr
movsbw
mov
bts
jmp
jmp
setns
shld
adc
mov
btr
mov
stc
push
pushf
clc
sub
pushf
call
shrd
push
movsbw
and
mov
test
stc
xor
mov
cmp
push
clc
add
pushf
pushf
pushl
mov
pushf
lea
jmp
mov
lea
lea
mov
pushf
lea
jmp
push
pushf
popl
jmp
decl
jmp
pushf
mov
jmp
pusha
mov
pusha
repz
popl
pushl
push
call
mov
pusha
pushf
mov
pushf
jmp
call
mov
call
pusha
jmp
movw
pushf
popl
call
pushf
pushl
popl
movb
lea
jmp
push
mov
push
mov
push
mov
movw
call
repz
popl
stc
pushf
bt
mov
jmp
mov
call
pushf
pushf
popl
pushf
call
cld
pusha
pushf
rep
pushf
mov
pop
mov
mov
cmc
pushf
push
pushl
popf
movb
pushl
pushl
mov
lea
jmp
lea
push
jmp
call
inc
movw
pushf
pushf
decl
movb
lea
jne
call
push
dec
stc
push
stc
pusha
add
jmp
bt
or
jo
push
lea
je
call
cmc
push
add
lea
jo
pushf
pushf
push
pushf
popl
jmp
add
call
not
inc
bswap
mov
lea
pushf
lea
jmp
pushl
popl
btr
rol
ror
movl
xchg
mov
pusha
pusha
rol
bswap
push
dec
pop
not
lea
inc
pushf
pushl
not
bswap
lea
mov
push
mov
lea
jmp
call
cmc
cmc
xchg
call
pusha
dec
test
cmp
shl
xor
not
and
add
bt
movsbl
movzbl
btr
not
mov
pushf
mov
push
ror
call
mov
pushl
movw
mov
lea
jmp
pushf
jmp
cmp
add
push
push
jmp
pusha
push
repz
popl
call
pushl
mov
mov
call
lea
mov
clc
pusha
stc
bt
add
mov
mov
pusha
mov
push
mov
push
movw
movb
lea
jmp
pushl
jmp
pushf
clc
pushl
popl
movzbl
movzbw
movl
jmp
pusha
push
lea
push
jmp
pushf
xchg
push
pushf
push
call
bt
cmp
add
call
lea
not
push
mov
jmp
add
pushf
movb
mov
push
movw
movb
lea
jmp
jmp
lea
movw
inc
pop
jmp
mov
push
movw
mov
call
lea
push
push
pushl
mov
pushf
pusha
call
mov
lea
pusha
push
pushl
pushf
mov
pushf
pushl
lea
jmp
pusha
call
sar
bt
mov
pushf
sub
pusha
mov
push
mov
pushl
push
lea
jmp
push
bt
xchg
not
call
rol
cmc
mov
shr
mov
stc
pushf
movl
sub
mov
shr
jmp
movw
pop
movsbw
lea
pushl
lea
jmp
jmp
jmp
pushf
mov
jmp
call
rol
call
cld
pushf
call
neg
cmc
pusha
movb
xor
bt
sub
call
call
jmp
movl
sub
call
mov
mov
movw
mov
movl
lea
jmp
jmp
jmp
jmp
bt
mov
call
lea
das
pushf
mov
bswap
mov
cmc
pusha
stc
mov
cmc
add
pusha
movb
stc
call
call
mov
inc
pop
lea
bswap
pop
lea
push
movb
push
movw
lea
jmp
push
pushf
pusha
repz
popl
call
mov
mov
lea
jmp
lea
pushf
pusha
lea
jmp
call
push
mov
pusha
mov
jmp
mov
jmp
clc
pushf
sub
mov
add
call
mov
jmp
btr
btr
movzbw
mov
clc
clc
rol
pushf
not
bswap
mov
push
pop
inc
pop
not
lea
pushl
pushl
pushl
movl
lea
jmp
mov
movzbw
pushl
movzbw
bts
xchg
ror
push
mov
btc
btr
mov
ror
pusha
rol
inc
not
call
push
not
inc
xadd
rcr
pushf
shr
lea
bswap
sub
sub
lea
and
mov
movzbw
mov
xchg
and
shl
rcr
add
shl
mov
cmp
jmp
push
mov
pushf
pushf
mov
pushf
push
mov
call
pushf
inc
pushf
dec
dec
rcr
btr
neg
pushf
movb
btr
ror
and
and
shr
sub
sbb
clc
mov
call
pusha
pushf
popl
push
pushl
popl
push
push
lea
jmp
jmp
jmp
pushf
lea
push
jmp
cmc
mov
call
lea
jne
cmc
test
xor
push
pushf
push
pushf
xchg
pushl
pusha
movw
movl
movb
pushf
mov
mov
pushl
ret
push
lea
push
jmp
jmp
call
adc
mov
call
pushf
push
pusha
mov
pushl
pushf
push
lea
jmp
rcl
push
jmp
rcr
cmp
not
adc
mov
clc
call
lea
push
push
call
mov
pushf
push
pushf
mov
jmp
xor
stc
jmp
mov
push
mov
lea
jmp
not
pop
not
inc
call
clc
or
stc
xor
pusha
pushl
inc
jmp
mov
pop
btc
lea
bt
rol
inc
mov
not
lea
inc
inc
lea
call
stc
jmp
mov
cld
push
jmp
jmp
call
and
cmc
pushf
cmp
movb
jmp
pushf
pushl
push
mov
pushl
repz
popl
mov
jmp
lea
jne
not
mov
rcl
not
xorb
mov
mov
pushf
movzbl
mov
pusha
pushf
lea
jmp
jmp
mov
pusha
lea
jp
push
repz
popl
jmp
push
repz
popl
stc
stc
clc
mov
movsbw
mov
bswap
pushl
popl
stc
bswap
rcl
mov
movl
rcl
ror
mov
not
pushf
rol
call
setae
repz
popl
ror
push
pusha
stc
mov
pop
pushl
popl
lea
movl
call
stc
push
add
pushl
pushf
movb
call
cmc
movzbl
cmc
movsbw
mov
bt
pushf
pushf
ror
call
mov
movw
lea
jmp
call
xor
bsf
mov
pushf
jmp
push
mov
pushf
lea
push
push
call
pushl
pushf
pushf
popl
pushf
lea
js
popl
pushf
push
movb
lea
jmp
pushf
pushf
mov
pushf
mov
pushf
pushl
pushf
lea
jmp
xchg
pop
mov
movzbl
mov
movzbw
movzbw
mov
pop
jmp
bt
bswap
sar
btr
movzbl
bsr
shl
xor
sub
rcl
xor
sub
bswap
xor
and
stc
shl
sub
stc
cmc
or
jle
add
shrd
rcl
push
btc
sub
sar
shr
shl
mov
pushf
add
push
call
xchg
mov
movzbw
rol
bswap
inc
not
pusha
pop
inc
not
lea
push
push
push
lea
jmp
rol
not
not
push
lea
pop
inc
bswap
lea
pop
lea
mov
push
push
movb
lea
jmp
not
das
rcl
mov
rol
jmp
call
not
rol
push
not
movsbw
inc
movzbw
call
push
pushf
mov
cmc
lea
mov
mov
call
mov
movw
movw
mov
push
jmp
jmp
push
mov
mov
pusha
mov
push
jmp
movzbl
movsbl
movzbw
mov
js
pushf
mov
push
pushf
mov
mov
pushf
pushl
pusha
pushf
lea
jmp
jmp
mov
movzbl
pushf
call
dec
rol
mov
xor
adc
mov
call
movsbw
lea
mov
pushf
lea
jmp
call
push
pusha
repz
popl
jmp
call
xchg
stc
pushf
lea
bts
xchg
rol
pushl
popl
xchg
cmc
rol
not
movl
movzbw
mov
bswap
rol
pusha
push
pushf
not
not
pop
call
cmp
pusha
test
add
bt
call
jmp
pushf
call
jmp
pushl
popl
push
pushf
lea
jmp
call
mov
pushf
push
push
pushf
lea
jmp
mov
mov
push
mov
call
pusha
call
jmp
pushf
call
mov
call
mov
dec
push
movb
call
mov
pusha
pushf
lea
jmp
pushf
jmp
shl
pusha
jmp
add
call
movsbl
not
mov
bts
push
rol
bswap
movsbw
not
movsbw
pushf
inc
movzbl
movzbw
call
xchg
rol
pushl
mov
bts
btr
push
mov
mov
bt
rol
push
not
push
dec
not
mov
mov
inc
inc
lea
jle
movsbw
mov
push
pusha
push
lea
jmp
pusha
mov
push
pushl
pushl
lea
jmp
movw
sub
jmp
pushl
popl
mov
lea
jmp
pop
pop
lea
push
pusha
push
call
pusha
pushf
push
pushf
popl
push
jmp
pushf
jmp
movl
jmp
mov
pushf
movb
movb
mov
lea
jmp
jmp
jmp
dec
pushf
mov
movb
lea
jmp
call
jmp
not
movzbw
mov
mov
inc
jmp
mov
movb
mov
lea
jb
bswap
push
clc
pushf
rol
pushl
popl
cmc
xchg
btc
push
bt
bt
mov
cmc
movsbw
rol
dec
not
jmp
pusha
repz
popl
jmp
mov
bswap
pop
inc
lea
lea
push
not
lea
push
lea
jmp
pushf
stc
add
bt
sub
sbb
mov
test
pushf
pushf
push
add
call
call
add
push
mov
movb
jmp
repz
popl
jmp
not
jmp
jmp
rep
cmc
not
dec
mov
test
or
mov
clc
cld
clc
cld
pushl
popf
pushf
pushf
movw
lea
jmp
pushl
popl
mov
lea
jmp
pusha
pusha
movl
mov
pushf
call
add
pusha
pushl
mov
pushf
pushl
ret
push
call
lahf
pusha
pusha
mov
mov
pushf
push
mov
push
mov
call
pusha
mov
mov
pushf
mov
jmp
cmp
cmpl
jmp
jg
movzbl
lea
dec
mov
inc
dec
dec
pushf
sub
xor
xor
pushl
pushf
call
pushf
mov
jmp
movl
jmp
bswap
xchg
bswap
pushl
popl
ror
btc
clc
movl
rol
rcl
btr
xchg
mov
call
call
call
lea
sete
mov
jmp
push
mov
jmp
pushf
pushl
repz
popl
jmp
mov
pushf
lea
lea
pusha
push
mov
movb
lea
jmp
pushf
jmp
cmp
call
pusha
pushf
jmp
lea
jnp
mov
pushf
pusha
mov
lea
jmp
pushf
mov
pushf
mov
jmp
movw
inc
not
push
movzbw
movsbw
lea
mov
pushf
push
movb
lea
jmp
bswap
add
mov
cmp
not
push
cmc
stc
not
cmp
sub
pushf
and
jmp
lea
pushl
movb
lea
jmp
adc
add
pushf
stc
dec
sub
sub
push
rcr
sar
btc
mov
clc
pushf
shl
call
bts
cmc
clc
xchg
rcl
pushl
popl
stc
rol
movl
call
bsr
mov
xchg
mov
rcr
sub
mov
stc
add
push
jmp
pusha
mov
lea
jg
push
pushf
popl
push
pushf
pushl
popl
movb
pushf
pusha
push
lea
jmp
pushf
mov
mov
movw
pushf
call
pusha
pushf
call
push
lea
mov
lea
dec
bswap
movb
dec
sbb
lea
inc
btc
sub
pop
sar
push
shl
xor
pushf
movsbl
not
mov
pop
pop
dec
and
shl
sub
mov
movzbl
jmp
pop
lea
pushf
lea
jmp
push
div
call
mov
pushf
mov
lea
jmp
cmc
pushf
not
movb
xor
cmp
clc
jmp
bts
pusha
bts
shrd
mov
shl
clc
rcl
mov
pushl
sub
mov
mov
pushf
test
shr
call
call
mov
mov
movw
pushl
mov
lea
jmp
sub
push
movw
jmp
mov
bt
stc
ror
rol
mov
rcr
jmp
pusha
repz
popl
stc
xchg
rol
stc
stc
not
mov
cmc
pushl
popl
xchg
cmc
movl
call
inc
shld
sar
mov
cmp
test
seto
call
call
movb
mov
push
jmp
pop
mov
btc
pushl
popl
bt
movl
movzbw
pushf
pop
mov
bt
movzbw
bt
lea
jae
rol
push
bswap
not
mov
pop
dec
lea
inc
pushf
lea
mov
pushl
lea
jmp
push
lea
jbe
popl
push
mov
lea
jmp
std
push
mov
jns
movsbw
movsbw
mov
pusha
movw
std
cld
jmp
inc
inc
jmp
lea
movb
pushf
mov
push
lea
jmp
mov
pushf
pusha
pusha
call
pushf
shl
movzww
movl
jmp
pushl
pusha
mov
movl
push
jmp
sub
call
mov
movb
mov
pushl
jmp
mov
mov
pusha
lea
jmp
mov
pusha
push
pushf
pushl
lea
jmp
mov
pushl
popl
push
mov
pushf
pushf
lea
jmp
mov
call
pusha
jmp
jmp
call
sub
call
push
movb
pushl
pushf
popl
pushf
pushf
pushl
popl
pusha
lea
jmp
jmp
cwtl
bt
cmp
sub
jmp
mov
setns
mov
pusha
mov
pusha
push
lea
pushl
push
mov
mov
pushf
movw
mov
lea
jmp
movzbl
std
movzbw
mov
pusha
pushf
pushf
movb
cld
push
rep
xor
mov
bsr
add
mov
bt
jmp
pusha
mov
push
movb
pushf
lea
jmp
lea
push
push
jmp
pushf
cmp
add
push
jmp
mov
jmp
movsbw
jmp
mov
pushf
lea
push
push
pushf
mov
pusha
jmp
lea
jne
test
stc
clc
pusha
xor
jmp
mov
pushf
lea
jmp
mov
pushf
pushf
lea
push
jmp
pushf
mov
movb
mov
movw
mov
pushf
pushf
pushf
mov
jmp
lea
jne
btc
bsr
cmp
xorb
bswap
bswap
movzbw
pop
pusha
push
lea
jmp
push
push
pushf
popl
mov
pushf
mov
push
pushl
popl
movb
movb
movb
lea
jmp
pushf
popl
call
pusha
pushf
cmc
shl
pushf
push
mov
mov
jmp
pusha
jmp
shrd
pusha
pusha
jmp
pusha
jmp
pushf
movw
mov
movb
pushf
pushf
lea
jmp
pushf
pushf
mov
mov
lea
jmp
pusha
cld
pop
mov
call
add
setnp
seto
lea
not
mov
not
dec
call
call
mov
call
pusha
jmp
cmp
test
xor
call
shld
rcr
rcr
cmc
mov
cmc
sub
call
pushl
popl
pushf
mov
movw
pushf
lea
jmp
call
btr
bt
movl
movzbw
cmc
stc
mov
lea
pushf
movsbl
rol
not
not
not
inc
call
xchg
call
sub
cmp
pushf
test
xor
pusha
push
call
lea
call
call
sub
clc
bt
test
pusha
and
call
push
mov
call
pusha
pushl
popl
mov
push
lea
jmp
rcl
lea
movzbl
test
mov
pushf
stc
clc
or
jmp
pusha
pushf
lea
je
cmp
pushf
bt
xor
pusha
stc
xchg
stc
test
cmp
mov
mov
sub
pusha
pushl
movb
lea
jne
cmp
pushf
test
push
sub
jmp
mov
mov
movb
mov
movw
pushf
jmp
lea
pusha
mov
mov
lea
jmp
mov
mov
movb
pushf
popl
push
pushf
pushl
popl
push
movb
mov
lea
jmp
