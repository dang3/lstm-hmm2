push
call
ret
ret
sbb
arpl
mov
in
inc
js
xchg
or
call
stos
jle
add
xchg
inc
negl
mov
enter
mov
xor
shl
xchg
add
or
fwait
test
lret
mov
insl
xchg
inc
xor
inc
std
xchg
dec
jl
insb
std
jmp
mov
xor
inc
popf
out
ds
movsb
cmp
mov
inc
push
bound
jns
push
rcrl
out
inc
mov
adc
or
lahf
xchg
rolb
pop
scas
xchg
sub
jb
fldenv
adc
data16
jnp
shlb
push
cmp
jmp
inc
sub
jb
sub
testb
jno
push
jnp
sbb
jo
scas
pop
xor
adc
cmp
cli
sbb
mov
js
inc
lret
clc
je
test
pop
mov
jns
out
arpl
xor
fdivrl
pop
pop
dec
xabort
sahf
aam
dec
ja
cmp
push
stos
aaa
sbb
add
dec
cli
push
fs
rcl
out
inc
icebp
push
cmp
xchg
pop
repz
aad
push
cs
repz
cwtl
cmp
push
pop
ja
pop
andl
xchg
xlat
jne
jo
pop
pop
sti
xor
sahf
data16
aas
mov
jmp
dec
ffree
imul
cmp
rcr
pop
mov
add
out
xor
mov
or
or
or
cmp
out
ret
push
fisubrl
adc
sbb
je
sub
cltd
sbb
scas
add
popf
bound
nop
mov
lock
fs
mov
movsl
daa
jnp
ljmp
or
iret
dec
and
rorb
hlt
decb
dec
repz
sahf
dec
data16
std
pop
ljmp
pop
into
cmpsl
imul
icebp
pop
ja
cmp
pop
fdivrp
mov
jp
sub
cmp
cmp
cli
push
pop
jb
cs
sub
cli
push
hlt
mov
shrb
fiadds
inc
jne
xchg
lret
mov
jmp
add
lds
mov
sub
mov
xchg
mov
outsb
sub
push
and
cs
jns
push
imul
adc
int3
dec
pop
xor
pop
sbb
mull
jmp
mov
ret
mov
add
lods
lods
push
sar
inc
cld
inc
bound
pushf
pushl
sahf
jae
mov
sub
sbb
inc
stc
lock
mov
jae
test
mov
pop
int3
insb
or
mov
repz
pop
cmp
xor
push
and
sub
or
jp
xor
jae
sub
xchg
or
popf
addr16
jbe
dec
cld
cmp
adc
mov
cwtl
dec
xchg
shll
repnz
andb
xor
jge
insl
les
xchg
in
aas
insl
mov
das
dec
push
fdivrp
sub
pop
fs
ret
xchg
arpl
mov
push
call
das
ret
push
std
cmp
push
je
xor
outsl
pop
mov
out
push
xor
aam
cmp
imul
bound
pop
das
lock
gs
test
mov
and
xlat
cmp
or
jp
push
sub
mov
fcomp
lahf
test
mov
das
test
cmp
outsb
inc
cwtl
push
int3
cli
push
and
lods
dec
imull
xor
mov
out
add
adc
xor
dec
aad
in
daa
lods
ljmp
sbb
add
clc
shrb
or
push
inc
xchg
xor
cmpsb
rorl
popa
mov
insl
outsl
xchg
ficoml
stc
fwait
sbb
inc
lock
js
pop
dec
inc
fnsave
test
push
out
fildl
cmp
dec
popf
fidivl
mov
sub
ret
cmp
insl
cmpsl
mov
cmp
jnp
loope
adc
fadds
shl
outsl
pop
js
add
dec
xchg
addl
cld
dec
or
decl
cmp
and
push
push
loope
dec
cli
out
fildl
outsl
loop
jne
jb
mov
jo
hlt
lock
icebp
xor
or
repz
scas
int
push
xchg
cli
aaa
shlb
insl
sub
icebp
pop
mov
adc
push
setp
mov
adc
and
mov
xchg
test
mov
push
inc
stc
aas
sbb
push
insb
push
stos
mov
jp
fs
orb
sarb
dec
sub
out
test
xor
push
jge
sbb
sbb
mov
cltd
rclb
jnp
cld
jo
xchg
icebp
pop
cs
rclb
mov
int
ljmp
mov
or
ror
push
pop
loop
mov
cmp
int
negb
fcoms
or
filds
mov
sbb
cmp
cli
add
cmp
cmp
arpl
in
rorl
sarb
push
aad
in
dec
mov
ds
scas
add
adc
or
outsl
outsb
lret
ja
test
mov
mov
dec
push
xor
inc
mov
inc
dec
lret
int3
mov
popa
jno
rorl
cmp
sbb
inc
fdivrl
add
pop
out
or
push
jns
or
pop
cmpsl
mov
xchg
adc
or
xchg
movsb
adc
or
mov
mov
lcall
fcoml
inc
int
cmp
scas
sbb
sub
vpshufhw
imul
arpl
ret
std
pushf
jmp
lock
daa
fwait
or
fldl
pop
sbb
mov
pop
pop
out
mov
add
ret
mov
nop
xor
test
lret
in
xchg
cwtl
xor
adc
shrb
sub
inc
fs
nop
lods
mov
inc
dec
fldlg2
test
ret
push
xchg
add
inc
nop
aaa
dec
inc
mov
pop
arpl
adc
inc
inc
icebp
loop
mov
sub
and
mov
test
sbb
in
les
pop
xchg
inc
jl
xchg
jge
or
pop
iret
fcom
xor
out
or
lea
add
sbb
nop
or
add
or
xchg
and
imul
jbe
inc
sub
stos
or
sub
jle
lock
jecxz
add
test
into
cld
lock
arpl
dec
in
outsb
pop
cmp
push
jmp
mov
cmc
adc
pusha
cmp
dec
je
movsb
pop
push
push
sahf
or
orb
jl
popa
popa
or
pop
xchg
es
ja
shr
mov
addr16
sbb
cmovs
mov
and
push
inc
push
data16
cmp
sbb
adc
rol
cmpsl
mov
imul
xchg
xchg
jmp
sbbl
xor
test
xchg
fstp
inc
js
xchg
xor
cli
mov
fisubs
xor
jmp
jmp
mov
cmpsl
mov
xchg
mov
sbb
enter
sahf
inc
pand
cmpsb
inc
jl
sub
sub
int
nop
and
popa
shrb
arpl
out
fcomps
inc
xchg
addr16
out
sub
ljmp
shll
vhaddpd
pop
push
test
sub
mov
fucom
and
or
fdivrl
jae
sbb
shlb
xorb
xor
mov
into
neg
sarl
push
push
mov
cmpsb
fcompl
outsl
fisubs
fcmovb
jg
addr16
pop
in
push
popf
mov
inc
xor
jbe
add
xor
movsl
pop
iret
xor
push
test
outsl
fsubl
lret
lret
cwtl
je
pop
stos
inc
xchg
adc
loop
shlb
icebp
aad
lods
js
jb
dec
insb
les
fsub
push
or
mov
pusha
outsl
clc
jmp
push
or
dec
adc
daa
push
push
rcl
les
mov
mov
inc
movsl
gs
mov
add
imul
shlb
mov
in
out
adc
fisttpl
cmp
cmpsl
cmc
sbb
test
mov
es
push
test
pop
mov
xchg
je
data16
pushf
mov
mov
mov
sbb
test
cwtl
push
pop
xor
xchg
xchg
jnp
in
pop
aaa
jo
enter
out
mov
dec
jo
cli
mov
lahf
and
inc
cwtl
decl
arpl
xchg
xchg
das
cmp
out
mull
in
aam
in
mov
test
sub
jb
push
dec
pop
or
test
fldenv
adc
lret
pop
sub
xchg
xor
xchg
lds
sbb
jle
mov
sti
push
add
push
std
jnp
lods
mov
pusha
int
leave
mov
mov
lods
adc
adc
xor
aad
fidivl
push
mov
mov
sub
push
or
and
or
sub
and
adc
sub
sbb
mov
clc
and
sub
lea
pop
adc
lret
inc
insl
jns
bound
scas
jne
jl
push
and
pop
int3
mov
leave
push
and
inc
lea
jle
adc
xchg
inc
daa
adc
xchg
lret
cmpsl
dec
mov
adc
adc
maskmovq
fldt
cld
sahf
cmp
jb
or
imul
gs
iret
pop
int
jg
jg
imul
arpl
jbe
je
push
sub
enter
ficompl
lcall
mov
push
mov
jne
cmp
or
nop
lods
push
inc
shld
stc
in
mov
outsb
xor
and
dec
mov
xchg
outsl
clc
mov
dec
std
decl
push
mov
mov
cmp
out
mov
jns
xor
xor
mov
ja
arpl
incb
sub
jae
out
test
jmp
mov
out
inc
js
xchg
jge
movsb
rsqrtps
jp
inc
andl
adc
add
mov
xchg
inc
inc
into
popf
xchg
dec
adc
push
adc
cmpsb
xchg
loop
gs
mov
and
inc
lods
fwait
mov
push
lret
pop
scas
fidivs
jo
test
mov
pop
cwtl
xchg
std
add
adc
cltd
mov
fisttps
sbb
in
push
mov
outsl
imul
jbe
pusha
dec
dec
xor
add
shll
rclb
test
int3
hlt
jl
arpl
js
jne
add
sbbb
cmc
mov
push
xlat
mov
jno
or
mov
addl
mov
outsl
push
insl
cmpsl
xor
dec
dec
rcrb
cmp
sbb
pop
flds
fidivs
xchg
push
stos
scas
push
dec
das
ja
inc
mov
loopne
enter
ret
cwtl
pop
ret
scas
rclb
add
jnp
imul
sbb
xchg
mov
pop
cmc
xchg
insb
stc
mov
and
push
test
push
popa
imul
cmp
mov
repz
dec
in
scas
sub
push
jb
xorb
rolb
mov
jge
pop
fs
cmp
jmp
fxtract
push
xor
mov
fnstenv
push
cmp
adc
push
jl
push
icebp
jge
sahf
cmp
daa
test
loope
jns
out
das
cmpsb
fists
jne
or
xchg
xchg
push
cmp
inc
push
xchg
enter
fsubrs
sub
inc
clc
lahf
jmp
jmp
sub
orl
ret
xchg
pop
scas
jecxz
dec
je
loope
xchg
push
daa
mov
data16
inc
popl
adc
pushl
cmp
enter
push
rcrl
loop
mov
nop
push
sbb
or
inc
stos
dec
nop
lds
xchg
push
out
push
je
iret
push
aad
cmpsb
int
scas
icebp
or
mov
out
nop
xor
or
insb
popf
jg
arpl
test
push
jnp
push
bound
push
dec
dec
jno
mov
sahf
push
xor
mov
sub
test
mov
mov
sahf
jb
push
dec
adc
in
je
fcoml
imul
test
loopne
outsb
xor
jae
lret
cwtl
ror
add
inc
jg
add
ror
inc
jns
mov
nop
cli
push
sahf
fmull
mov
rol
xchg
add
pop
inc
jbe
xor
call
or
and
jp
loopne
jg
and
shll
dec
popf
negb
fwait
sahf
fidivrs
fstps
jecxz
xor
inc
ljmp
mov
in
lods
xor
mov
loope
xor
hlt
repz
push
lds
sbb
push
mov
popf
cmp
cmpsb
cmp
dec
mov
add
aad
call
mov
mov
clc
sarl
fcoms
gs
inc
xor
imul
mov
mov
inc
jmp
insl
and
loopne
lret
adc
pushf
sbb
mov
pop
xor
xchg
mov
push
fmull
cmpsl
fcompp
cli
jno
stc
add
out
mov
dec
dec
pop
and
addr16
cwtl
adc
or
push
jnp
or
sub
aad
scas
mov
or
and
inc
ja
pop
arpl
fwait
mov
ret
loopne
jg
adc
adc
xchg
pop
lcall
in
mov
lods
insl
aam
adc
pop
out
les
hlt
popf
push
mov
cmc
testb
incb
sbb
aad
int3
jne
arpl
mov
sbb
pop
mov
add
popa
dec
mov
mov
lret
sub
jge
sbb
jle
add
lods
fstpl
loopne
pop
iret
jge
xchg
jmp
icebp
sub
out
jns
pusha
call
adc
aam
fstsw
subb
inc
dec
lock
sub
push
aam
and
pop
jno
and
push
popa
cltd
dec
sahf
cmpsb
ret
mov
mov
push
gs
fldcw
jbe
sbb
push
sbb
fidivrs
mov
mov
cli
cmp
pop
out
bound
pop
mov
sub
dec
arpl
jbe
push
insb
fwait
jnp
fs
in
in
and
mov
jno
stc
rcr
movsl
xchg
gs
or
scas
aas
push
adc
aam
jo
xchg
fisttps
mov
pop
aad
call
cmc
aas
sbbl
push
adc
addr16
pusha
add
popf
ds
lds
arpl
movsl
sbb
pop
push
and
pop
xorb
xor
push
sti
cmp
pop
push
ret
pop
decl
addr16
push
rolb
daa
push
push
loopne
enter
cld
popa
jbe
push
das
push
jmp
rol
push
dec
enter
push
dec
cs
dec
push
nop
bound
jge
mov
cmp
sbb
dec
inc
lds
hlt
push
sbb
mov
pop
and
add
mov
pop
push
push
jg
jae
popf
jmp
stos
out
dec
mov
loope
insb
sbb
pop
xor
divb
sub
dec
inc
mull
adc
fsubl
pop
dec
sbb
scas
pop
cmp
add
cmp
jp
imul
sti
ljmp
stos
call
mov
sbb
mov
and
dec
leave
stos
lods
mov
mov
cmp
stos
push
push
and
leave
cltd
out
out
sub
popa
cld
test
cmpsl
push
sub
rorl
dec
sub
pop
inc
jmp
and
rclb
mov
imul
decb
imul
add
pop
sub
sub
in
adc
mov
fwait
push
std
mov
xor
mov
js
fdivrl
aam
and
xchg
je
or
sub
sti
mov
inc
and
inc
pop
cmc
mov
pop
xchg
mov
jnp
dec
in
push
repz
enter
dec
sbb
jl
pop
fwait
cmpsl
dec
hlt
cwtl
jp
mov
rolb
loop
divb
lahf
cmp
adc
movsl
mov
push
sbb
jmp
lret
mov
fbld
and
mov
xchg
popf
inc
or
pop
insl
bound
add
in
mov
mov
icebp
jno
cmp
pop
shrb
pop
sbb
mov
mov
in
insl
sub
rorb
imul
jbe
push
cmpsl
pop
aas
adc
inc
addr16
mov
pop
lea
ret
mov
pop
movsl
mov
mov
jb
push
adc
dec
ja
nop
test
test
adc
ss
and
inc
int3
icebp
cmpsb
pop
cltd
je
aad
xor
shrb
adc
in
outsb
mov
sbb
lahf
mov
je
ss
dec
mov
nop
jae
xchg
or
mov
sahf
or
nop
icebp
push
mov
ds
adc
pop
imul
scas
or
add
mov
pop
aam
or
test
sbb
adc
jae
dec
lods
movsl
cmp
jp
mov
cmc
shrl
insb
enter
lock
inc
and
push
jbe
jbe
jecxz
and
sub
mov
push
sub
pop
mov
xchg
cmp
push
ljmp
add
sbb
push
lods
dec
outsl
lock
js
jb
popf
fidivl
popf
cmc
mov
xchg
inc
arpl
je
in
mov
xchg
xor
push
repz
rcll
hlt
dec
mov
rolb
inc
xchg
jecxz
imul
mov
jle
sbb
or
inc
mov
nop
sbb
sbb
fcom
sub
jo
insl
lods
lcall
in
xor
sub
inc
push
pop
cmpsb
push
aaa
mov
and
push
xor
pop
add
bound
add
cltd
jmp
inc
iret
xchg
enter
pop
jae
and
xchg
loopne
cmp
mov
inc
ds
inc
lods
fnstcw
shrb
mov
aaa
in
data16
or
outsl
push
cmpsl
jo
push
jge
aad
pop
insl
int3
mov
iret
popa
jmp
dec
or
dec
dec
mov
addr16
lret
jnp
dec
out
cmp
jb
jbe
ret
adc
lcall
pusha
in
mov
xor
jne
pop
cmp
adc
jne
fnstenv
mov
scas
js
push
inc
sub
out
outsb
fnstcw
test
in
movsb
clc
pop
xor
out
sbb
mov
ss
xchg
fnstsw
inc
dec
imul
idivl
mov
cmpsb
je
mov
fcoml
mov
dec
cmp
jge
mov
and
jle
xor
xor
mov
inc
xlat
test
dec
mov
xchg
test
jg
enter
popa
sti
ja
sub
mov
ret
lock
int3
lods
mov
inc
sbb
lret
pop
fisttps
test
fildll
test
mov
dec
pushf
mov
inc
stc
sahf
add
xor
cmp
fwait
dec
inc
sbb
outsb
mov
xchg
sbb
mov
jmp
lea
shll
in
out
lahf
test
popf
mov
pop
jmp
push
cltd
or
push
test
insl
nop
lods
icebp
mov
and
inc
mov
xor
xchg
stos
js
xchg
mov
test
adc
and
push
xor
jno
dec
aaa
ds
pop
sub
jle
rorb
push
mov
push
out
sub
and
sbb
mov
call
pop
mov
jge
or
cltd
shl
cmpsb
mov
mov
add
out
mov
rcll
pop
in
out
fbstp
inc
test
sahf
std
or
sti
cmp
jecxz
icebp
data16
push
mov
pop
pushf
mov
or
sub
sub
jne
cmp
sub
and
js
pop
mov
int
lahf
andnps
add
stc
jne
xchg
cld
pop
xchg
mov
lds
sbb
mov
leave
mov
scas
sbb
sbb
pop
jae
sub
icebp
sub
xchg
clc
pushf
adc
out
jb
pop
adc
lahf
andl
mov
loop
mov
into
enter
pop
les
mov
js
push
adc
mov
jl
mov
pushf
jmp
sub
test
inc
repz
xchg
fyl2xp1
mov
and
repz
gs
xlat
lods
js
icebp
or
adc
mov
xorl
mov
xchg
outsb
cmp
in
iret
cwtl
fists
lcall
in
cwtl
cmp
xor
push
push
clc
insl
mov
sbb
push
inc
bound
push
jg
rcrb
mov
inc
push
cmpb
mov
push
xchg
ds
jmp
mov
push
push
push
cmpsl
dec
ljmp
in
cmp
inc
sbb
fisttpl
jne
mov
jo
mov
in
or
nop
rcrl
jo
pop
daa
dec
scas
call
push
mov
jge
mov
adc
cmp
mov
jae
mov
push
shl
pop
add
in
jp
loopne
push
outsb
jmp
inc
mov
testb
fildll
and
pop
jae
mov
add
push
movsb
inc
and
test
push
push
fcoms
push
std
mov
pushf
push
xchg
add
push
vandps
inc
pop
fsts
shlb
adc
ds
push
adc
andl
addr16
inc
outsl
and
pop
jns
imul
push
xor
pop
shll
jb
cli
inc
out
mov
mov
imull
fndisi(8087
jl
insl
shl
jge
cs
loope
hlt
xlat
fisttps
fsts
ret
dec
pop
outsb
jbe
mov
in
sub
jecxz
xlat
negl
jl
sti
mov
cmp
mov
iret
inc
xor
pop
out
or
jne
push
mov
mov
sbb
sbbl
mov
jl
ljmp
lds
mov
dec
jmp
andl
loope
sub
dec
pop
sbb
rorl
pop
mov
subl
xchg
mov
pop
std
pop
inc
fldcw
sbb
movsl
stos
lahf
and
or
and
lcall
jns
jge
jo
or
fbld
mov
out
mov
cmp
das
in
add
push
mov
bound
xchg
test
mov
sub
push
adc
sbb
fucom
mov
push
fadd
cmp
dec
cmp
daa
in
cmp
jl
test
xor
push
sbb
movsl
cmc
xor
jnp
fcoms
push
or
inc
fldcw
mov
cmp
ja
enter
add
dec
add
cltd
inc
push
lods
cmp
js
inc
rcr
xchg
mov
andl
mov
adc
je
add
mov
mov
mov
lret
push
sub
ja
mov
push
addr16
adc
mov
dec
jle
loope
imul
in
inc
arpl
bound
movsb
je
mov
xor
push
adcb
fs
iret
or
cmpsl
ja
jno
sub
imul
inc
xor
shlb
imul
inc
hlt
push
popf
pop
in
shll
pop
lahf
or
ja
inc
shll
mov
jmp
sahf
or
sub
outsl
in
jecxz
pop
inc
push
loop
bound
jno
roll
sub
outsl
add
mov
lods
bound
adc
push
pushf
hlt
mov
mov
pop
cli
sbb
lret
adc
imul
sbb
jo
jp
sub
repnz
push
mov
sub
aas
mov
aaa
imul
in
and
push
imul
cmp
je
cmp
inc
cli
enter
ret
mov
pusha
and
dec
aad
push
in
shr
dec
inc
mov
aad
ja
mov
xchg
cmp
add
mov
sub
aad
loopne
sbb
pop
lret
adc
movsb
cmp
lea
jp
mov
mov
adc
adc
divl
or
mov
sub
rclb
jbe
add
pop
loop
call
mov
in
push
or
lock
cmp
dec
pop
push
mov
sub
clc
sti
in
outsb
addr16
pusha
sub
jmp
jmp
movsl
inc
daa
jns
cltd
mov
dec
inc
jns
int3
cwtl
in
ret
insb
dec
xchg
addr16
xchg
gs
cmpsl
and
fildl
inc
pop
lcall
test
dec
stc
hlt
fisubl
in
mov
adc
das
mov
insb
rolb
movsl
arpl
aas
sti
out
out
jecxz
fwait
mov
push
cmp
xor
jb
iret
push
iret
cmpsl
imul
pop
fldt
clc
pop
mov
loopne
mov
jge
fistpl
in
outsb
lea
adc
xor
lock
in
add
mov
ret
stos
push
das
cmp
add
inc
rolb
push
mov
imul
mov
fmuls
sbb
adc
cmp
stos
mov
arpl
add
inc
push
jecxz
icebp
fnop
add
out
rclb
hlt
popf
inc
dec
adc
cli
sbb
jg
mov
mov
mov
aaa
andl
adc
shll
fimuls
mov
shl
pusha
adc
jl
jg
push
pop
push
and
and
mov
mov
cld
push
rorb
sub
les
in
test
lret
pusha
inc
xchg
movsb
pop
and
iret
ror
fsubrs
movsl
arpl
xchg
hlt
adc
add
pop
lret
cmc
orb
xchg
fdivs
pop
into
and
mov
inc
std
loop
pop
fiaddl
mov
pusha
scas
lea
add
lahf
lret
dec
sub
push
stos
imul
scas
mov
jo
xchg
sbb
sub
or
sbb
fisttpll
aaa
pop
js
inc
imul
lods
stc
test
das
mov
stos
pop
imul
ljmp
adc
mov
outsb
out
push
cmp
jmp
lcall
inc
sarb
fnstsw
stos
or
pushf
insb
iret
sbb
sub
push
cmpsl
outsb
add
mov
sub
in
mov
and
lods
insl
and
push
sbb
mov
mov
je
push
or
int3
repz
add
inc
push
inc
dec
imul
out
pop
dec
adc
insb
mov
push
pop
ds
jb
pop
and
and
xchg
inc
jo
mov
std
daa
fidivs
push
pop
ds
test
test
psubw
inc
addl
pop
xchg
mov
icebp
jnp
inc
mov
adc
negb
shl
mov
in
bnd
adc
popa
cs
push
pop
push
adc
sbb
or
inc
ds
inc
xor
lahf
movsl
imull
lahf
add
sub
sbb
lds
inc
or
jg
mov
cld
mov
mov
or
mov
shl
push
mov
dec
dec
add
pop
out
jmp
arpl
dec
int
push
out
rep
push
lods
sub
fisubrs
clc
clc
push
fisttps
cmp
mov
dec
out
loopne
clc
repnz
xchg
mov
sarb
push
lods
mov
aad
js
data16
cmpsl
ret
scas
push
enter
aas
stos
ret
jmp
pop
mov
es
imul
inc
mov
mov
sbb
pop
cmpsb
bound
inc
dec
loope
add
scas
lock
jae
shrb
adc
std
dec
in
sub
icebp
xlat
movl
dec
rcrb
mov
dec
jns
mov
dec
scas
mov
adc
push
aaa
lods
pushf
aam
orb
push
and
sbbl
pop
dec
cmp
lock
lods
sti
jno
sub
mov
enter
lods
jle
sti
cmp
insl
add
scas
test
js
jb
mov
nop
jecxz
dec
xlat
lock
sbb
in
push
xor
mov
pop
sub
movsl
inc
dec
shr
pop
popa
outsb
gs
call
ficomps
xor
orl
out
dec
push
cmp
fdivr
mov
pop
ret
out
mov
in
inc
loope
fidivrl
mov
jno
aaa
or
test
int3
insb
mov
jl
dec
jmp
pop
pop
bound
adc
and
into
jnp
pcmpeqw
and
fxam
shl
cmpsl
or
fwait
mov
push
jbe
lea
push
scas
mov
mov
imul
or
les
scas
pop
ljmp
sbb
pop
push
sbb
cmc
xor
inc
lds
nop
pushf
scas
in
insl
and
shll
lcall
testb
adc
pop
adc
ljmp
insb
lea
scas
jmp
andl
add
in
pop
rcrb
dec
testl
aam
xchg
pusha
negl
in
push
into
push
mov
outsb
loopne
mov
fldcw
or
je
subl
push
jle
gs
xchg
das
push
xor
gs
flds
mov
rcr
jecxz
jl
imul
jo
dec
dec
xchg
sti
insb
pop
mov
mov
imul
inc
lahf
jns
dec
test
lret
es
add
dec
mov
ret
pushf
and
or
test
fstpt
sbb
xchg
mov
stos
aam
fwait
bound
or
out
mov
jp
lcall
jecxz
cmpsl
push
aaa
sbb
sbb
xchg
dec
loop
sub
push
stc
push
rcrb
or
mov
iret
inc
ljmp
adc
inc
cs
push
sub
out
mov
outsl
jecxz
jno
mov
or
pop
lock
adc
repz
mov
mov
xor
add
cmpb
divl
lret
xchg
dec
pop
icebp
ja
adc
mov
jg
sbb
xor
cltd
and
cmpsw
pop
sbbb
sub
jle
testb
jne
cmp
lock
mov
lret
fiadds
cli
mov
dec
mov
inc
inc
loopne
or
and
jne
fisttps
popf
fstl
imul
icebp
jle
lea
test
pop
fidivrl
jmp
dec
dec
jnp
pop
or
cmp
mov
shll
in
xor
pop
xchg
jl
lahf
inc
orb
and
add
aam
imul
mov
jnp
adc
xchg
hlt
and
adc
stos
enter
mov
cwtl
and
ret
mov
and
dec
shlb
jns
js
movsb
mul
sarb
mov
leave
jp
in
inc
push
into
xor
loopne
cmp
imul
ja
lret
add
dec
int3
jp
jb
push
mov
lock
cltd
xchg
mov
inc
mov
jp
jmp
xchg
popa
ror
xchg
sub
dec
repnz
lods
xchg
out
insl
ret
sub
mov
sbbb
test
pop
sub
sbb
mov
lcall
mov
or
into
out
gs
push
push
sbb
and
sub
push
dec
inc
shll
mov
jno
xchg
pushf
pop
fs
aad
aad
or
dec
sub
mov
mov
jmp
jg
arpl
repnz
jle
jbe
jp
jae
sub
dec
pop
pop
int3
das
iret
or
into
ret
pop
mov
mov
push
fndisi(8087
push
mov
push
movsb
adc
dec
jb
inc
jle
mov
mov
mov
jnp
xchg
and
add
sbb
pop
pop
adc
repz
mov
icebp
lds
icebp
ds
bound
shrl
sahf
out
daa
aaa
loope
nop
icebp
mov
lahf
les
incb
adc
daa
or
adc
mov
ss
scas
jl
cs
je
aam
clc
movsl
push
in
add
aas
out
jo
bound
or
mov
clc
int
fs
bound
inc
xor
cmp
fdivl
push
xchg
pop
hlt
call
inc
repnz
cmpsb
add
inc
ljmp
int3
jns
ds
mov
sbb
adc
push
mov
aam
aas
test
bound
sbb
mov
and
mov
fbld
psubw
out
pop
dec
mov
dec
sbb
imul
adc
push
and
mov
inc
xor
fs
cld
js
je
loop
insb
sub
jb
lahf
es
xchg
cli
ficomps
mov
xchg
push
jne
add
jno
adc
outsb
in
mov
jno
ror
push
movb
sbb
ret
jne
and
push
ret
fdivl
push
rolb
add
aam
dec
add
cmp
mov
push
outsl
push
inc
jecxz
enter
loopne
ja
scas
jg
out
out
data16
mov
dec
cwtl
jmp
pop
adc
scas
stc
inc
ror
loopne
sub
pushf
adc
mov
mov
jg
push
jne
push
test
sbb
lock
jle
mov
addl
inc
mov
leave
cmp
dec
mov
leave
jno
pop
negb
and
int3
push
ss
ffreep
push
jp
push
movb
outsb
push
inc
xchg
in
cli
lret
xchg
cs
xlat
orb
pusha
jno
fistpl
xorb
jecxz
imul
and
xor
add
lock
sub
mov
push
inc
repz
push
andb
std
jecxz
pop
and
repz
adc
aaa
aas
mov
inc
nop
sbb
in
and
xor
aaa
mov
cmp
std
inc
mov
lret
out
addr16
xchg
pusha
andb
in
xchg
movsl
xchg
xlat
stos
std
mov
mov
das
sub
and
or
mov
push
mov
sub
xchg
stos
sti
orl
pop
andw
ljmp
or
cmp
shlb
or
push
ja
sub
push
lods
scas
aad
xchg
add
and
pop
dec
fwait
shll
stos
rol
ljmp
mov
cwtl
push
loope
adc
mov
pop
lcall
sbb
or
inc
addb
faddl
sub
and
mov
mov
pop
xor
and
aas
jmp
push
movsb
jecxz
lret
push
sub
xor
push
mov
push
leave
andl
mov
out
dec
dec
mov
inc
mov
bound
push
xchg
inc
jno
pop
pop
fstl
in
inc
mov
les
sbb
cmp
lods
sbb
sbb
adc
pop
aam
or
mov
sbb
nop
sub
loopne
push
movsb
xor
imul
testb
fs
repnz
inc
xchg
fld
add
dec
and
sbb
adc
call
push
or
jae
aas
fsubrs
dec
cltd
push
push
push
pop
xor
adc
mov
nop
push
xor
mov
lods
stc
jp
js
in
loop
inc
rorl
xor
or
mov
jl
add
iret
in
ljmp
fcoml
and
xchg
dec
xchg
mov
clc
je
out
into
adc
into
xor
push
fistps
pusha
push
mov
inc
xchg
cmc
loope
mov
or
mov
pop
dec
pop
or
push
add
push
xor
mov
mov
cmp
push
cmp
es
pop
push
sub
enter
mov
cmp
imul
sub
mov
inc
dec
adc
js
push
fidivl
sarb
push
lods
loop
pop
lret
add
jnp
sub
fmuls
sbb
rcl
push
jo
inc
insl
mov
or
shlb
jg
fnstenv
stc
fbld
in
popf
cmp
cmc
jns
stos
or
add
sub
mov
scas
pusha
inc
loopne
mov
sahf
loopne,pn
push
xor
js
cmpb
movsl
dec
lahf
insb
dec
fistl
mov
mov
je
jo
xchg
xor
or
mov
cmp
popa
pop
in
out
add
mov
enter
rcrb
cmp
stc
push
dec
cmpsb
dec
cmc
pop
lret
ficomps
push
push
cmp
push
notb
decl
cmpsb
and
push
call
repz
notb
add
popl
xor
out
cmp
or
sbb
dec
int3
rolb
movsb
into
cwtl
jbe
or
sub
stos
jnp
add
aam
mov
into
lcall
cmp
out
cmpsb
or
mov
inc
xor
or
mov
ret
fwait
push
mov
xor
pop
fdivrp
es
hlt
stos
mov
outsb
mov
repnz
clc
dec
into
gs
sub
mov
add
ja
or
popa
arpl
fildll
push
push
test
push
xchg
xor
ret
lods
loope
sub
inc
ljmp
mov
push
xor
pop
shl
std
faddl
int
scas
xchg
add
popa
push
lcall
test
adc
mov
fcomps
xchg
mov
sti
or
dec
cmpsl
in
leave
and
mov
sub
adc
cmp
lea
push
jo
dec
pop
bound
jmp
mov
mov
rcrl
lods
cmp
stos
mov
mov
cltd
scas
fs
xor
push
push
popa
sub
test
pop
sbb
fs
adc
jp
mov
addr16
sbb
sub
mul
subb
jno
data16
pop
popf
shlb
orl
cli
cmp
cmp
loop
or
in
fcoms
mov
pop
out
xor
movsl
out
js
pop
addr16
inc
ja
mov
xchg
loopne
daa
lods
jg
and
hlt
repz
dec
jmp
les
nop
cld
and
adc
add
pinsrw
dec
pop
les
jl
mov
pop
xor
icebp
dec
mov
mov
xchg
es
push
adc
cwtl
lret
rcr
insb
int3
mov
jno
ja
fwait
stos
or
pop
addr16
jns
inc
inc
shlb
mov
inc
pop
adc
mov
pop
jbe
or
andb
xchg
jecxz
aaa
sub
mov
inc
xor
pop
add
sub
aas
inc
xor
scas
dec
inc
sbb
stc
cmpsb
ljmp
hlt
jnp
test
jmp
inc
clc
add
jmp
adc
addr16
scas
xchg
imul
cmp
mov
es
dec
lahf
push
add
cmpsb
inc
lret
add
jae
test
jbe
sbb
lahf
sbb
or
aaa
outsl
mov
lds
push
adc
rclb
pop
js
mov
js
adc
stc
adc
in
jp
jne
sub
and
lcall
dec
imul
imul
jmp
mov
ret
pop
sub
mov
sbb
je
or
data16
lock
adc
jge
pop
sbb
or
push
jnp
fistpll
mov
lods
rcr
fistpl
cmpl
popa
popa
add
cmpsb
sbbl
sub
mov
pop
sub
pop
mov
mov
sbbl
fnstsw
cmpsl
push
scas
stos
push
in
mov
push
sub
cwtl
fs
or
dec
mov
dec
fdivrs
iret
sub
jge
mov
dec
or
adc
icebp
sub
or
pop
sahf
add
cmp
sahf
jle
outsl
xor
push
rcrb
pop
inc
in
fsubl
mov
test
or
xor
sub
xchg
cmp
es
jle
cmp
pusha
cmc
jno,pn
push
in
fbld
xchg
sub
push
jne
mov
mov
add
pop
and
js
sub
stos
scas
mov
js
loope
xor
pextrw
mov
or
adc
mov
xchg
xchg
sub
je
pop
shl
hlt
push
bound
lcall
sti
xchg
loop
xchg
push
mov
roll
cmp
cmp
and
cmc
cltd
repnz
pop
xchg
mov
sub
fdivrl
mov
push
sbb
xor
pop
stos
cs
enter
outsl
xor
popf
lahf
imul
scas
mov
mov
jo
out
arpl
push
sub
or
pop
int3
loop
push
adc
jnp
pop
jmp
sbb
mov
stos
lcall
popa
sbb
push
pop
sub
pop
test
std
pushl
subb
mov
jle
push
insl
jecxz
pusha
bound
and
roll
sahf
int3
xor
cld
test
cmpb
xor
out
enter
push
jge
xchg
scas
pop
xor
inc
nop
sbb
pop
mov
in
rorl
fcmovnbe
mov
shrl
aaa
push
outsb
gs
popl
pop
cld
fcoml
inc
lahf
mov
loopne
mov
addb
fdivrl
ss
imul
sub
dec
lahf
jno
pop
adc
sbb
xchg
pop
ret
mov
push
addb
mov
loope
sbb
movsl
mov
ja
sbb
getsec
pop
xchg
cltd
jo
add
nop
inc
jne
addl
leave
push
jg
fwait
enter
les
in
ljmp
ret
mov
cmpsb
cmpsb
pop
icebp
lahf
cmp
enter
out
and
xchg
aam
icebp
scas
fwait
mov
out
out
pop
pop
xchg
and
aam
mov
inc
mul
loopne
xor
frstor
in
jmp
pop
sti
lret
pop
nop
popf
pop
or
cmc
and
mov
cli
les
mov
fs
fdivr
and
testl
pop
mov
jb
data16
push
or
add
bound
or
mov
dec
popa
pop
int
fildl
mov
out
sbb
in
loopne
incb
push
out
lahf
xchg
inc
and
and
cmp
mov
and
into
sbb
inc
pusha
mov
add
cmpsb
and
ret
cltd
cmpb
pop
in
lret
jb
lcall
xchg
std
mull
lods
rolb
xor
lock
sbb
shll
shl
push
jno
fs
ficoml
aas
pop
jb
pusha
and
mov
aaa
fs
in
addr16
dec
outsl
add
fistps
pop
popf
xchg
xor
out
lods
xchg
fstpl
sti
ja
push
xor
mov
pop
loope
jne
cld
sbb
adc
in
imul
gs
lock
cmpsb
jb
subl
les
dec
adc
push
jb
mov
lock
mov
pop
mov
in
int3
into
or
inc
inc
stos
fdiv
xchg
jecxz
mov
aam
lea
xor
int3
pop
inc
imul
sub
xchg
mov
dec
mov
arpl
cmc
sub
loope
loop
and
push
push
fwait
xchg
adcl
in
testb
xlat
adc
mov
xor
rcrl
push
scas
data16
rol
pop
test
sahf
and
push
inc
gs
cmp
dec
and
pop
lret
scas
ret
andnps
out
iret
adc
pop
aaa
or
mov
lcall
popf
add
ret
aad
xchg
lds
mov
popf
mov
add
clc
fnstcw
pop
adc
sub
pop
es
sub
in
mov
mov
pop
or
sub
aam
pushf
xor
sbbb
int
lods
lods
jns
push
or
pop
shrl
test
test
out
in
xlat
and
cmp
mov
je
lods
pop
int3
jns
or
outsl
jb
sbb
outsb
stc
lcall
jmp
fwait
push
inc
sar
mov
in
push
xor
fists
lock
lcall
cwtl
scas
sar
adc
leave
jno
test
xor
sbb
pop
pop
push
push
mov
xchg
in
pop
mov
clc
pop
dec
das
or
sbb
jp
pop
in
icebp
aad
mov
add
aas
xorl
and
getsec
adc
clc
push
lods
jb
in
jno
cltd
rolb
addr16
mov
push
lds
hlt
inc
sub
pop
ljmp
cmp
jo
pop
nop
arpl
mov
mov
cmp
test
mov
in
cwtl
repz
outsl
pop
in
pop
out
dec
sub
imul
aaa
lods
dec
mov
iret
insl
repz
dec
aaa
mov
jecxz
sub
loop
inc
stos
cmp
addb
and
pusha
dec
fdivrp
jl
pop
cmc
out
pushf
scas
mov
pop
arpl
scas
add
pop
mov
jns
stos
popa
jl
sbb
jecxz
dec
adc
mov
jbe
pop
stos
pop
loop
push
sbb
aas
aad
pushl
or
inc
lea
cmp
inc
loop
jl
inc
pushf
test
add
ror
xchg
or
int3
pop
pop
xchg
jge
or
sub
xor
adc
mov
cmp
inc
movsl
pop
adc
jmp
mov
xor
mov
out
sarb
loopne
or
xchg
lret
clc
or
test
into
pop
in
sbb
inc
and
leave
int3
jg
mov
scas
pop
scas
push
mov
mov
cli
sbb
insl
fmull
sbb
pop
inc
arpl
add
call
scas
pop
mov
jmp
je
inc
ja
leave
sbb
pop
or
ficoml
xchg
popa
les
inc
push
fldl
cmp
add
push
jno
or
pop
fidivrl
inc
inc
icebp
xchg
jae
fwait
xor
std
pop
adc
test
imul
and
negl
aas
es
lret
sarl
or
mov
jle
push
push
pop
fcoml
call
lods
sbb
pop
pop
xor
into
or
xchg
lds
dec
test
aaa
push
pop
testb
in
outsb
pushf
push
adc
add
aaa
pop
lahf
cmpl
repz
outsl
cmp
xchg
int
xchg
xor
in
mov
push
aaa
out
push
xchg
fcoml
insl
jle
test
push
push
js
xchg
stc
xor
inc
cmp
cmp
dec
hlt
mov
movsl
xor
or
stc
sbb
mov
push
js
mov
ret
jmp
sbb
popa
sahf
jmp
cmp
xlat
out
inc
jg
daa
popf
push
cmp
in
cltd
das
lds
ret
mov
jle
psubusb
mov
cmp
pop
lcall
inc
gs
push
push
lods
sub
pop
xor
nop
gs
mov
add
xchg
test
mov
adc
int
push
mov
ds
inc
cmp
lock
mul
out
ret
loope
inc
add
and
inc
je
or
pop
hlt
roll
aas
inc
shrb
hlt
inc
and
and
xchg
or
mov
test
jne
adc
scas
mov
jp
sub
daa
sub
or
add
jmp
push
xor
mov
mov
daa
in
lret
ss
dec
or
iret
adc
repz
imul
imul
icebp
pop
imul
jecxz
inc
mov
cwtl
jl
inc
push
lea
push
inc
fwait
push
and
scas
jnp
pop
jnp
and
insl
sub
mov
push
pop
jbe
push
cmp
dec
iret
shl
push
mov
push
or
pop
sahf
xor
arpl
inc
scas
nop
xor
cli
cmp
push
jmp
dec
adc
mov
mov
jnp
fadd
pop
jmp
test
or
aam
push
cmp
shll
push
or
adc
pop
adc
js
les
xchg
jo
outsl
adcl
add
push
movsl
pop
xchg
mov
or
jmp
pop
ficomps
inc
les
sub
sbb
mov
lret
ja
lea
stc
cmp
push
dec
push
sub
les
frstor
dec
xchg
rorl
movsb
adc
int
xor
inc
aaa
sbb
xor
loope
cmp
loopne
daa
xor
or
dec
in
mov
lds
push
pop
andb
adc
lcall
push
in
mov
out
pushf
adc
mov
out
jae
mov
scas
leave
push
and
sub
jle
cmc
mov
mov
fcmovnb
mov
xchg
push
jp
jp
mov
bound
cmp
bound
push
jge
ds
cmp
sti
inc
orl
dec
push
sbb
test
sub
lea
jne
in
jmp
in
push
shll
mov
xlat
clc
lret
mov
xor
xchg
fidivs
push
add
es
add
mov
pop
xchg
dec
jge
mov
add
nop
cmp
pop
pop
dec
in
mov
js
mov
add
test
sbb
orb
icebp
das
adc
cmp
mov
adcb
sti
out
cltd
addr16
mov
or
ret
rcr
jno
pop
mov
add
dec
jne
bound
sar
mov
mov
cmp
cmp
mov
mov
in
int
icebp
add
and
mov
mov
rcrb
dec
push
cwtl
sub
adc
loop
jnp
icebp
popa
inc
dec
addb
xchg
out
mov
xchg
mov
ds
shl
push
push
sub
xchg
jne
cmp
push
mov
addr16
aam
sub
enter
mov
inc
vmulsd
mov
xchg
mov
mov
mov
bound
pop
sbb
fistl
push
aaa
and
and
fidivrl
mov
fisttpl
cmp
mov
cmp
mov
add
ret
jbe
push
mov
adc
popw
jb
or
aad
mov
xchg
push
cltd
repnz
inc
mov
lret
push
lret
adc
cmp
pop
pop
xchg
popf
leave
push
xor
mov
orb
fs
pop
jae
lret
fmull
jg
fstpt
js
jge
add
pop
shl
shll
sub
push
cmpsb
or
dec
sbb
mov
movsb
pop
cmp
add
adc
add
xor
fstl
cmp
daa
movsl
mov
jno
add
imulb
xchg
xchg
pop
sub
test
mov
dec
push
ljmp
and
push
jnp,pt
out
adc
dec
fs
imul
ficoms
psubq
xor
mov
pusha
sti
push
push
cmp
cli
int3
pop
icebp
out
mov
or
dec
push
xor
pop
mov
jbe
or
lret
mov
cmp
testl
inc
pop
pop
sub
stos
sarb
sbb
loop
cmp
xchg
clc
xchg
pop
fwait
in
aaa
dec
out
shlb
scas
das
out
sbb
ja
sbb
aam
jl
mov
cmp
mov
insl
movups
enter
lret
or
sbb
add
push
scas
inc
xor
dec
repnz
xor
or
inc
mov
xchg
cmpsl
sti
repnz
dec
and
xlat
mov
jecxz
lock
push
ljmp
cltd
pop
lods
mov
sub
push
test
xor
cwtl
xchg
outsb
repnz
or
sbb
pop
mov
je
sub
push
repz
xor
lock
jbe
add
xchg
lds
stos
jg
cmp
push
sahf
sbb
daa
das
dec
inc
filds
out
fnstsw
xchg
rcll
mov
mov
push
sbb
sahf
pusha
inc
cmpsb
cmpl
lea
enter
mov
inc
pop
into
xor
sti
jg
mov
and
jae
loop
mov
push
out
xchg
into
push
push
sbb
adc
pop
enter
add
or
jp
cmpps
loop
xchg
out
mov
push
aam
xlat
xor
cs
dec
cmp
jp
or
push
mov
cmp
push
fidivs
mov
xchg
pop
scas
push
fwait
fs
jne
sbb
das
cmp
insl
repnz
and
stos
repnz
ds
ds
xchg
cmp
push
jecxz
jns
std
shl
ret
sbb
ljmp
imul
sub
movsb
pop
std
mov
iret
ja
xor
mov
imul
test
push
push
das
inc
sti
xlat
push
lcall
popa
rclb
lcall
es
in
int
pop
add
lahf
iret
cld
sbb
int
push
pop
mov
mov
push
mov
fwait
sbb
mov
push
inc
stos
xchg
fidivs
sarl
int3
pushf
stc
jge
mov
sub
and
lahf
mov
push
icebp
xor
sub
popa
repz
mov
dec
xor
mov
cmp
jecxz
shrl
adc
in
stos
hlt
sbb
or
cmc
mov
lea
cmp
xor
rcrl
add
sbb
and
mov
xchg
inc
out
jne
jl
lock
sbb
push
dec
movsl
arpl
pop
mov
js
inc
iret
scas
fldenv
lahf
xchg
lret
aas
jmp
inc
lock
mov
push
mov
lods
mov
mov
shll
fmull
rclb
in
add
fadds
mov
mov
sub
roll
out
and
loop
add
jle
sbb
ja
pop
das
dec
push
mov
cmc
push
arpl
std
out
cmp
sub
mov
and
loope
mov
loop
test
dec
and
mov
shrl
sbb
aad
mov
mov
mov
lcall
sub
mov
aad
stc
lret
sbb
xchg
addb
lods
dec
xchg
cmpsl
loop
push
mov
xchg
mov
xchg
cmpsb
mov
sbb
add
pop
inc
push
int
jg
enter
pop
mov
pop
inc
cmp
gs
xchg
xor
mov
xchg
scas
sti
rcl
xor
fsubrs
sbb
jb
sbb
xor
rol
movsb
adc
shrl
mov
aas
adc
jmp
and
add
cld
xorl
push
sbb
add
dec
cwtl
shll
in
jl
pushf
cmc
xor
pop
leave
inc
fisttpll
jnp
fidivs
dec
xor
cmp
mov
dec
mov
repnz
nop
cmp
jmp
ret
sbbl
cli
and
shlb
fs
test
fsubs
inc
inc
addr16
sbb
rcrb
xchg
xor
and
into
inc
lds
push
pop
ss
inc
pop
pop
aas
and
shl
mov
dec
lahf
add
out
testb
dec
push
icebp
mov
cld
pop
mov
lahf
sbb
xchg
loopne,pt
pop
movsb
inc
mov
xor
bnd
lods
shrb
jl
inc
jp
sub
xor
pop
ljmp
insl
dec
cmp
mov
mov
jecxz
jnp
xchg
repz
push
or
mov
jg
add
repz
out
mov
testb
pop
into
stos
stc
bnd
nop
jg
pop
loop
sub
adc
sbb
out
xchg
arpl
ficoml
pop
and
shlb
add
ret
push
nop
pop
call
negl
xchg
adc
or
mov
jnp
jbe
ret
mov
lds
cmpsl
cmp
std
popa
adc
ljmp
stc
icebp
scas
mov
and
daa
lret
in
xlat
add
lods
fwait
out
xor
jmp
sbbb
inc
aaa
xor
or
sub
mov
xchg
jle
insl
jge
jo
push
mov
and
aam
sub
jp
bound
idivl
in
or
in
jns
lea
push
out
shll
and
enter
mov
lahf
mov
cmp
sti
pop
mov
mov
push
dec
sub
shrl
fs
std
sub
mov
mov
cltd
mov
mov
jg
mov
or
cltd
pop
mov
fwait
push
or
mov
xchg
aad
cmp
fiaddl
cmc
ja
mov
stos
xchg
pop
enter
push
inc
and
imulb
xor
mov
les
aas
out
sbb
or
ficoms
insl
and
test
fsubrl
or
and
inc
ljmp
push
inc
push
sbb
stos
fidivl
jmp
fiadds
loop
icebp
fwait
dec
xchg
testl
jl
pushf
test
and
bts
filds
popa
jb
mov
fdivl
movsl
push
stos
xchg
cmpsb
cmp
lahf
insl
dec
mov
repnz
pop
imul
cmp
mov
imul
inc
fwait
subb
xchg
xor
lea
rclb
mov
push
insb
lret
inc
push
shr
sub
push
addb
into
fdivrs
out
push
inc
lret
mov
lds
xchg
jl
sbb
mov
shl
push
inc
lcall
imul
subb
dec
movsl
or
adc
into
lret
inc
jbe
test
adc
or
mov
fadd
and
lods
lahf
jle
jo
ds
iret
adc
push
stos
jbe
orb
out
lods
stos
and
out
fwait
mov
jle
shr
jno
out
xor
cld
xchg
shlb
pushf
leave
aad
inc
jmp
insl
pop
mov
es
lahf
icebp
jg
dec
ficompl
fs
decl
or
add
sahf
adcl
pop
movsb
js
call
imul
push
pop
sbb
sub
or
fs
mov
inc
repnz
ret
or
jo
in
out
cmc
negb
daa
jge
xchg
xchg
and
pop
push
mov
pop
xchg
mov
and
test
jg
nop
leave
sbb
mov
dec
shlb
out
add
xor
push
add
pushw
test
jno
dec
mov
mov
fsubl
ret
pop
inc
xchg
pop
or
push
cmp
xchg
sbb
mov
mov
repz
test
jnp
or
aaa
movsb
pop
pop
jg
dec
adc
fucomi
insl
scas
cmp
and
data16
inc
test
into
loope
add
jl
push
pop
cs
adc
mov
enter
aaa
outsl
add
imul
jne
pop
lret
push
daa
mov
push
sub
mov
sbb
or
movsl
push
push
xlat
adc
hlt
push
inc
std
pusha
call
dec
sbb
sbb
in
and
or
inc
xchg
jp
jne
inc
fdivl
mov
pop
mov
loop
mov
cmp
and
push
cs
sub
lock
int
insl
stc
inc
stos
cld
xlat
push
outsb
imul
fs
mov
mov
xlat
push
xchg
clc
in
dec
cld
jge
notl
repnz
into
jb
sti
jg
sub
and
lock
cmp
call
pop
inc
cs
aam
mov
fmulp
inc
mov
mov
sbb
in
scas
sahf
sar
mov
pop
outsl
dec
adc
inc
xchg
sub
into
fiadds
and
je
adc
cmpsl
add
iret
daa
pop
dec
je
adc
movl
or
mov
js
insw
mov
xchg
jae
sahf
lcall
mov
jl
jnp
xchg
mov
cmp
adc
dec
pushw
xchg
sbb
dec
and
dec
jg
mov
inc
repnz
out
clc
lods
out
dec
cmovne
loope
int3
out
cld
outsb
loope
add
xchg
and
pop
xor
cmc
mov
xchg
or
sbb
add
subb
fstps
mov
cmp
xchg
cmp
push
cmpsb
mov
jb
sub
add
loop
fadds
xchg
test
imul
lea
mov
scas
ret
in
mov
fldenv
jl
lret
mov
sbbl
aam
mov
adc
mov
pop
call
frstor
outsb
mov
mov
or
mov
xchg
xor
pop
dec
arpl
adc
lret
mov
sub
into
pushf
data16
sbb
aad
cwtl
adc
test
add
insb
jmp
add
xor
mov
inc
jbe
movsb
out
insb
insl
and
push
test
mov
arpl
jge
les
in
mov
popa
mov
fstpt
data16
or
ja
in
or
cmp
add
inc
jo
xchg
loope
mov
test
mov
xlat
mov
push
test
sti
into
dec
daa
aaa
es
hlt
ret
cmpsb
int
mov
pop
mov
cmpsb
push
out
add
and
pop
dec
mov
sub
shrb
outsb
sub
insb
in
jge
push
lret
dec
paddb
mov
pop
cmp
jecxz
and
or
xchg
sub
int3
es
add
idiv
push
out
mov
cmp
std
movsb
int3
lods
cs
xchg
aam
jbe
stos
lcall
fdivr
mov
sub
add
daa
mov
ljmp
ret
sarl
cmp
adc
lods
loopne
shrl
pop
adc
lret
push
rcrl
and
je
jbe
sbb
push
inc
dec
xchg
add
lret
cmc
mov
ret
mov
decb
push
cmc
sbb
push
stc
ret
push
and
add
fprem1
mov
mov
mov
out
add
inc
push
jp
sbb
fisttpll
icebp
out
enter
pushf
in
aam
cwtl
xchg
sbb
or
mov
mov
lods
jne
mov
dec
mov
repnz
lahf
sub
iret
xchg
aaa
loopne
pop
repz
mov
cmpsb
lods
mov
jb
jl
scas
out
cmpsl
sahf
add
xor
pop
sbb
movsl
ret
jbe
shll
mov
adc
fisttpl
repnz
fs
jne
loope
out
ret
xchg
dec
test
or
pop
mov
imul
popa
jmp
mov
mulb
test
adc
sbb
xor
cmp
pop
int
in
fmuls
mov
xchg
ss
sbb
jae
xlat
jnp
hlt
nop
mov
iret
inc
add
outsl
jg
adc
enter
jle
mov
addr16
sarb
push
inc
cltd
in
lods
jg
inc
lret
mov
adc
push
out
enter
jbe
mov
cmp
cmp
loop
mov
adc
sbb
cmp
pop
in
sbb
lret
test
mov
xor
push
cltd
nop
jle
cld
adc
mov
scas
mov
les
pusha
lods
add
add
push
mov
loope
daa
loope
and
stc
das
mov
inc
jle
mov
xor
repnz
popa
cmp
icebp
aaa
jl
jecxz
mov
pop
fistpll
xchg
mov
fcmovbe
jne
movsl
push
xor
cmc
out
inc
push
xchg
jge
mov
push
inc
aam
stos
mov
std
push
orl
repz
fcmovb
iret
hlt
add
push
mov
and
pusha
push
mov
xchg
dec
xorl
ret
jmp
mov
in
inc
mov
pop
jg
and
sbb
mov
out
lds
fwait
je
jl
nop
pushf
jmp
mov
rcrl
xor
cmp
jae
and
mov
cmp
inc
pusha
jo
loop
push
fwait
dec
mov
in
or
mov
lods
roll
mov
stc
or
ljmp
xor
inc
dec
mov
jmp
jge
mov
jne
and
ret
xchg
imul
jne
xor
imul
add
dec
adc
dec
data16
xchg
lods
add
je
push
sbb
out
jp
push
mov
hlt
mov
icebp
or
lock
scas
subl
adc
jno
and
outsl
call
push
cmp
add
mov
mov
pop
or
test
out
out
add
imul
add
lahf
lahf
sub
ds
add
dec
dec
out
jae
or
lcall
mov
sub
push
dec
lret
pop
xor
lock
lods
mov
ret
rorb
cmc
stos
inc
addr16
lret
ret
stos
or
fwait
shrb
cmp
sbb
inc
fmulp
or
jns
cmp
arpl
fidivl
or
mov
das
ja
jge
lret
popf
insl
je
xchg
ret
arpl
addr16
sbb
fisttps
outsb
jbe
ljmp
adc
sub
fldenv
imul
into
into
std
add
pusha
xchg
iret
imul
mov
into
xchg
icebp
fwait
test
adc
dec
mov
ds
daa
jle
jecxz
jne
cld
shl
and
dec
add
pop
test
test
mov
cltd
pushf
jnp
xchg
outsl
call
and
mov
int3
jb
jp
unpcklps
test
rorl
inc
rcll
fstpt
scas
cmp
or
cli
lcall
dec
jecxz
pop
daa
lret
jecxz
ds
cmp
sahf
insb
ss
je
push
test
fisubrs
pop
sub
cmp
std
jnp
stos
ret
pushaw
mov
and
ss
mov
mov
daa
loope
stos
seta
fucomi
xor
jb
inc
cmpsb
shll
xor
aas
mov
out
pop
xor
stos
dec
fldl
inc
jge
and
fdivs
hlt
pop
xorb
sbb
sub
adc
test
aaa
fdiv
dec
xor
cmp
sti
push
shrl
ret
inc
scas
lcall
and
or
js
jae
outsb
dec
aad
and
inc
jnp
das
cmp
or
jo
pop
inc
mov
dec
xor
pop
adc
shl
dec
cld
loope
add
sbb
or
lea
cltd
add
cld
mov
sbb
add
pushf
lea
in
mov
xor
lret
adc
loope
xor
xor
repnz
jge
mov
dec
fldt
fwait
mov
es
lds
push
jecxz
fwait
rclb
xor
inc
divl
fwait
imul
and
scas
enter
nop
jle
fcoms
cwtl
adc
pop
int
pop
add
bound
enter
or
pushf
aam
aaa
push
cmp
add
gs
aad
shl
lods
adc
ficomps
inc
int
icebp
push
shlb
xlat
adc
loope
and
jle
pop
scas
ret
mov
sub
mov
jae
add
inc
jl
cwtl
xchg
insb
fiadds
add
and
scas
cmp
push
mov
in
dec
add
adc
jbe
dec
xchg
cmp
adc
call
jae
pop
mov
or
xchg
sarb
das
jns
push
xor
or
inc
inc
cli
lds
add
mov
jl
cs
mov
test
popa
pop
lods
fcmovb
jnp
push
addb
mov
fcoms
mov
mov
sbb
insb
sbb
lds
ss
mov
cmp
dec
mov
ja
ds
cs
fs
fldl
loop
mov
sbb
adc
lret
cmp
or
jns
push
jne
les
jnp
mov
mov
inc
stos
dec
jns
mov
lods
cmpsb
addr16
inc
mov
xchg
hlt
mov
nop
add
push
and
into
push
imul
loope
mov
and
inc
lret
inc
jl
orl
popf
mov
mov
mov
push
movsb
mov
arpl
cmp
jno
sbb
push
repnz
xchg
and
xchg
add
pop
jle
or
lods
mov
lea
sti
dec
or
jle
lds
scas
pop
inc
ljmp
jl
mov
rorb
sub
adc
dec
lods
les
aam
in
out
fisubrs
push
out
ds
stos
mov
jne
or
lods
jecxz
insb
jecxz
movsl
decb
fdivl
mov
mov
jo
insl
pop
pop
roll
aam
xor
bound
pop
test
lock
mov
das
mov
dec
imul
mov
sbb
mov
mov
jmp
fisubs
lea
inc
jmp
fucom
or
mov
cmp
lock
jmp
pop
jae
in
pop
aas
es
icebp
add
stos
repz
add
add
jns
xor
cwtl
xchg
inc
inc
mov
icebp
repz
add
into
dec
adc
dec
cmp
xorl
cmpsb
aad
lea
pop
jmp
pop
or
mulb
loopne
sub
xor
jns
mov
adc
xor
jnp
test
icebp
mov
xor
sub
mov
lods
mov
out
inc
push
inc
xor
call
js
sbb
popf
outsl
sub
mov
and
shll
loopne
ds
xor
shrd
sub
xor
and
test
xor
inc
cwtl
push
mov
pop
ret
ret
push
dec
fsubr
or
add
repnz
push
into
sub
jecxz
cld
lret
adc
pop
ret
orl
pusha
frstor
and
push
out
push
push
out
bound
outsb
cmpsb
leave
adc
lea
push
ret
stos
inc
sbb
xor
dec
cmp
lcall
ss
out
cmc
arpl
stos
sub
insl
enter
clc
test
cwtl
pop
sub
push
sbb
fldl
add
loop
sub
and
sti
add
sarl
mov
xor
ja
adc
orl
in
notl
pop
pop
add
dec
xchg
jmp
jge
lcall
enter
int
mov
push
jbe
sbb
gs
leave
aam
adc
ds
fadds
ljmp
fldcw
orl
loope
dec
movsb
dec
inc
mov
xor
jge
mov
mov
in
ljmp
mov
mov
lret
aad
mov
xor
call
add
imull
and
ljmp
call
pusha
xor
mov
imul
cli
push
outsb
mov
lods
cmp
inc
mov
fisubs
sbb
imul
dec
rorb
cmp
jnp
jg
arpl
sub
call
imul
popa
inc
repz
pop
cmp
ds
xor
pop
mov
mov
fprem
xchg
adc
xchg
int
cmp
in
add
js
adc
inc
mov
jg
out
pop
mov
sub
sti
je
add
sbb
aas
xchg
push
pop
adc
add
cs
push
inc
imul
lahf
mov
and
dec
mov
popa
mov
push
fadds
pop
cmc
out
add
pop
inc
inc
and
rcrl
push
dec
iret
dec
add
jge
pop
jl
jl
push
iret
xor
movsw
mov
loopne
xchg
mov
sbb
jp
lea
bound
mov
js
loopne
das
lock
adc
push
les
or
or
xor
xor
push
js
and
sarl
push
xchg
push
xor
dec
aas
aaa
xchg
and
in
hlt
jmp
xor
add
and
or
in
das
int3
cmpl
test
xor
mov
jae
loopne
loop
pop
repz
cmpsl
add
inc
xchg
js
insl
pop
outsb
jae
sbbl
add
cmp
fnstsw
sbb
pop
loopne
xor
push
loopne
loopne
xor
ljmp
pusha
cltd
add
shl
idivl
and
clc
test
icebp
and
sbb
out
adc
cmp
xchg
adc
jbe
std
lahf
push
sub
jbe
test
push
and
popa
push
sub
jno
add
sub
and
push
jbe
push
adc
lock
pop
xor
sbb
jmp
subb
jno
pop
dec
call
push
in
test
jmp
filds
call
push
sti
dec
jle
inc
push
sahf
jmp
test
scas
add
adc
out
add
pop
jbe
mov
or
test
mov
sbb
mov
inc
push
imul
das
sub
testb
int
decl
dec
aam
stos
xchg
or
cmp
xchg
fdivrp
shrb
data16
inc
dec
push
mov
cmpl
and
sbb
or
call
lea
adc
pop
mov
sub
lcall
test
int
je
and
and
in
push
cmp
mov
test
in
cwtl
lock
and
test
jp
mov
mov
loopne
addr16
fidivs
ljmp
arpl
cmp
cltd
adc
jmp
mov
cld
mov
cmpsb
imul
mov
cmpsl
xchg
out
pop
scas
mov
ss
mov
inc
sbb
add
mov
loope
sbb
dec
cmp
adc
xor
fwait
cmpsl
clc
jle
fwait
shll
js
jno
or
mov
sti
adc
in
and
mov
sbb
lock
lods
cmp
ljmp
int
cmpb
stc
mov
adc
and
insl
adc
ja
fadds
daa
bound
cmp
xlat
jmp
leave
cmp
lret
sub
mov
int
jnp
daa
cmp
mov
or
lret
hlt
and
in
jecxz
push
and
pop
inc
mov
lahf
sub
add
inc
jns
xchg
add
push
test
lret
adc
aaa
push
xchg
cmpsl
aas
cmpsl
hlt
divl
bound
jle
scas
cmp
sbb
xchg
mov
pop
lods
test
cwtl
jg
test
mov
aam
pop
clc
or
mov
ret
lea
outsb
cld
std
lock
mov
lea
in
xor
roll
xchg
test
push
aaa
pop
xor
xor
lds
es
lret
movsl
sub
out
dec
mov
fwait
inc
sbb
jbe
jecxz
lds
or
in
fadds
mov
mov
aam
mov
es
test
mov
negl
fstps
dec
pushf
jl
lods
jmp
mov
subb
shr
and
loopne
jle
popf
enter
daa
or
dec
call
add
add
psrad
dec
lret
lret
sbb
pop
jns
jmp
leave
push
loope
outsb
dec
xchg
pop
fwait
xchg
mov
repnz
push
sbb
scas
xchg
loop
into
addb
jge
xchg
ficomps
fnsave
push
cmp
jl
insb
comiss
mov
mov
sbb
push
pop
or
pop
ficompl
xor
inc
jp
mov
push
add
lods
or
out
cmc
repz
inc
pop
push
pop
sbb
adc
jmp
aam
sahf
in
jnp
jge
pop
push
add
scas
jbe
sub
fwait
insb
push
sub
aas
cltd
les
idivb
push
je
aam
fimuls
je
or
dec
xor
adc
fmull
and
and
inc
push
mov
icebp
jmp
hlt
adc
cmpsl
ret
imul
imul
push
cs
dec
dec
addr16
jbe
clc
xchg
fadd
add
xchg
repnz
scas
sub
mov
dec
sbb
cmp
and
fcmovbe
inc
mov
in
cld
mov
bound
dec
mov
cmp
inc
ds
dec
pop
stos
mov
pop
pop
inc
ss
xor
into
insb
inc
sbb
jo
aaa
fimuls
jns
sub
test
mov
mov
stc
test
lock
fs
das
addr16
cwtl
repz
pop
mov
jp
jo
xor
cmp
cmp
and
lret
sub
jb
jne
test
in
mov
push
cs
stc
leave
cli
xchg
cmp
cmp
dec
inc
sbb
cli
repnz
enter
and
dec
and
and
inc
cmpsb
pop
aam
add
cmpsb
or
cmc
adc
sub
cmp
imul
adc
cmp
sbb
sbb
xchg
or
jge
lcall
cs
fwait
mov
mov
xchg
or
cmp
int
insb
xor
mov
lahf
push
cmp
or
and
mov
mov
lcall
mov
sarl
jne
inc
test
jnp
inc
mov
mov
into
mov
push
push
push
in
dec
into
test
pop
lods
jae
adcb
lods
bound
into
rcrl
add
insb
or
lahf
hlt
stc
in
in
repz
push
xchg
add
mov
call
cltd
jb
sbb
das
dec
fldcw
mov
dec
xor
mov
adc
mov
test
push
push
jmp
dec
mov
xchg
sbb
fldl
lret
xchg
movsl
jb
ss
mov
xor
popf
jae
popf
dec
addr16
xchg
mov
inc
add
mull
inc
out
sub
fwait
lahf
xor
into
stc
mov
fyl2x
mov
imul
fistl
divl
and
push
lret
jb
daa
out
lret
sar
repz
pop
movsb
sbb
decl
andb
adc
dec
aam
clc
xor
cmc
add
mov
sub
dec
push
pop
xchg
scas
push
and
cli
xor
mov
pop
sahf
xchg
fnsave
xchg
call
push
adc
out
jle
push
add
add
push
mov
add
pop
fdivs
das
mov
es
add
into
add
jo
cmc
and
jle
outsl
ret
pop
hlt
lcall
movsb
jmp
movsb
stos
jge
movsl
mov
lods
add
mov
jnp
mov
pop
rcrl
cwtl
push
push
ss
cld
and
mull
not
insl
sbb
pmuludq
sub
repnz
pop
rorl
sahf
sub
and
cmc
and
pusha
xchg
ja
adc
movsb
in
xor
out
std
add
xor
in
shlb
sbb
aaa
out
and
daa
and
mov
sub
packssdw
popf
out
jmp
inc
mov
push
xchg
and
loop
jne
sub
jne
pop
pusha
out
sbb
push
pushf
inc
cltd
xchg
push
icebp
imul
cmp
popa
mov
sbb
out
in
adc
les
inc
js
adc
sub
or
arpl
and
repz
sbb
mov
add
sti
cli
push
aam
nop
push
sahf
rcll
fwait
xorb
xor
push
jne
dec
pop
xor
sbb
icebp
sub
pop
lret
adc
inc
push
mov
adc
shlb
inc
or
pmuludq
sti
push
repnz
xchg
in
push
test
ret
mov
xor
clc
jbe
pop
xor
push
fildll
shlb
stos
pushf
jge
mov
es
xchg
int3
jmp
adc
bound
cmp
shrb
ljmpw
ss
mov
testl
insb
enter
lods
or
das
mov
xor
iret
jp
xor
std
xor
in
lret
pop
inc
les
lea
add
jecxz
ljmp
lret
push
xchg
inc
clc
lds
push
and
xchg
out
scas
pop
inc
adc
les
cmc
push
fidivs
dec
sbb
lea
mov
mov
push
imul
in
js
into
clc
inc
test
mov
pushf
movsl
int3
adc
dec
adc
out
inc
cmp
fmuls
pop
or
in
jl
sbb
pop
leave
mov
xor
push
ret
mov
test
mov
arpl
mov
aam
cmp
pop
xchg
pop
cmp
mov
and
xchg
jbe
jle
xorb
pop
add
pop
addr16
sbb
js
outsl
mov
in
mov
int
loope
aaa
test
mov
mov
lret
insb
push
fmuls
in
int
xchg
stos
das
jae
sti
ds
pop
push
jnp
cmp
sub
out
cwtl
push
pop
push
repz
xchg
out
lds
ret
jae
add
decl
das
sbb
add
rorb
inc
jge
lock
lds
dec
gs
lea
stc
xor
xor
cmpsl
jmp
sbb
into
js
mov
iret
add
std
test
out
fnstsw
sub
mov
sub
test
xor
into
pop
jge
adc
popf
cmp
outsl
dec
ss
test
fldt
pop
adc
inc
repz
hlt
jno
call
mov
sti
pushf
add
hlt
sbb
shlb
pop
in
popf
inc
les
add
cltd
adc
inc
xchg
mov
std
dec
or
mov
loope
lea
test
sbb
test
jb
test
cmp
xchg
jmp
dec
lret
dec
add
sub
adc
and
xlat
mov
adc
fimull
movsl
in
popa
mov
xor
push
pop
ror
mov
in
sbbb
fwait
xchg
mov
cmp
pop
dec
and
fcmovbe
jno
cwtl
jns
cld
inc
xchg
cmp
shrb
lcall
mov
inc
xor
mov
mov
push
insl
je
lcall
push
mov
or
xchg
xor
add
mov
cli
add
sar
cmpsb
ja
xor
add
and
popl
call
clc
fidivl
lds
mov
icebp
lods
inc
stos
mov
lds
cmp
es
test
dec
or
mov
dec
outsb
test
cld
lret
jmp
ljmp
outsb
enter
push
and
push
lock
and
push
lret
mov
js
ja
push
sti
adc
xchg
out
stos
fiadds
fbstp
push
cmpsb
movsl
mov
sub
mov
push
adc
xor
adc
data16
in
mov
out
lret
call
fstl
cmp
out
fdiv
clc
aaa
push
sbb
rcll
mov
mov
cmpsb
jg
push
xchg
aaa
movsl
inc
add
pop
xchg
fs
fists
add
shll
test
leave
pop
jecxz
sbb
push
aad
xorl
cwtl
dec
out
xor
xchg
xor
pop
mov
inc
add
repnz
dec
gs
lock
dec
clc
pusha
jmp
jecxz
pop
mov
je
fwait
mov
xchg
pop
aas
cmpsl
div
mov
dec
mov
sbb
inc
les
int3
test
push
push
les
loop
sub
ds
mov
xchg
cmp
dec
stos
es
sti
les
icebp
xchg
lea
dec
test
xor
dec
inc
dec
lcall
test
leave
xchg
arpl
fisttps
mov
xor
repz
xor
fwait
ror
xor
or
adc
imul
dec
dec
popa
movsb
push
lret
dec
xor
sbb
leave
sub
push
mov
jecxz
rcrl
or
call
aam
pop
je
scas
out
leave
call
xor
mov
jo
push
pop
popa
std
imul
pop
rorl
loopne
test
and
mov
andb
dec
shlb
mov
ds
inc
xchg
push
pusha
pop
cli
test
mov
push
fsubrs
ja
add
lock
adc
ja
and
cmpsb
pop
nop
push
mov
mov
pop
pop
lock
lock
add
dec
xor
imul
jbe
or
repz
out
jp
jecxz
sti
cmc
int
cmpl
pushf
clc
xchg
sub
push
test
fnstenv
push
dec
fisubs
rcll
fmull
sbb
push
jl
mov
popf
imul
sbb
loop
ja
sub
inc
xchg
or
jno
nop
mov
sub
test
xchg
and
das
call
add
test
inc
std
pop
and
addb
je
or
push
movsb
xor
mov
jb
out
sub
xor
and
add
mov
pop
mov
xchg
cmp
popa
dec
frstor
cmpsb
jmp
or
cmpsl
jp
adc
jl
pop
jbe
mov
hlt
sti
repz
dec
push
arpl
lcall
cmc
push
add
rol
pop
mov
loope
dec
inc
inc
ret
in
push
mov
push
add
adc
aad
mov
out
xchg
inc
rorb
fimull
xchg
sub
aas
ja
scas
xchg
push
mov
int
inc
ds
stos
fsubrs
daa
mov
xor
cs
fisubl
or
xor
push
ret
or
cmc
pop
repnz
mov
fwait
inc
xchg
inc
mov
iret
jnp
cli
mov
cmp
jecxz
dec
gs
std
mov
arpl
mov
sbb
hlt
push
mov
shrb
pop
add
xchg
sbb
shlb
sbb
mov
popf
ds
enter
std
lods
push
mov
sahf
jle
cmp
dec
xor
sbb
mov
jae
xor
mov
mov
push
sbb
xor
pusha
push
adcb
sti
sub
adc
sti
out
sbb
cld
into
pop
into
mov
dec
imul
ss
mov
incl
cmp
mov
adc
sub
mov
xor
add
stos
mov
repz
mov
xchg
xchg
cli
dec
xchg
cmpl
movsl
inc
push
pop
in
gs
mov
test
jns
fsts
stos
es
fstl
subb
dec
adcl
sbb
xlat
xor
ficoms
mov
aaa
or
xchg
mov
push
mov
ja
dec
ja
inc
sub
and
and
in
std
mov
mov
fwait
pop
add
add
jge
sbb
int3
bound
cmp
iret
sub
push
ret
pop
sbb
popf
je
loop
sbb
add
jbe
mov
cli
inc
ret
or
sbb
out
inc
cmp
gs
mov
jne
push
and
loope
xchg
jae
adc
popa
pop
jge
inc
mov
imul
rcll
xchg
sbb
jb
jl
pop
stos
jp
aam
call
xlat
addl
fcom
sarb
mov
pop
test
lea
jb
jg
sub
mov
cli
jle
dec
fbld
mov
jno
insl
push
push
out
jg
fldenv
imul
xchg
test
pusha
in
aas
fmuls
cmp
fiaddl
push
push
popf
popa
fisttpll
inc
sub
ss
aam
adc
call
mov
mov
mulb
imul
sbb
inc
pop
rcrb
lods
popa
jle
pop
jbe
dec
xor
push
mov
sub
insl
bound
sub
or
inc
push
leave
in
mov
insl
loopne
or
dec
ret
add
aam
push
in
inc
and
xchg
clc
cwtl
inc
pop
jle
dec
enter
ss
shlb
xor
inc
ss
sti
mov
xor
pop
sbb
fisubrs
and
sbb
push
mov
jg
sub
addr16
or
or
jg
and
popa
mov
dec
stos
fldenv
xor
adc
movsl
insl
add
repz
mov
arpl
and
iret
mov
xor
sbb
cs
and
xor
data16
or
dec
xchg
sbb
mov
addl
test
insb
mov
lods
inc
test
out
popa
sub
dec
mov
and
add
in
pushf
sbb
in
pop
jle
shlb
sbb
leave
imul
in
outsb
pop
push
sahf
mov
or
lock
mov
arpl
pop
adc
out
xor
pop
in
mov
sbb
jmp
mov
add
mov
xorl
addb
sarb
push
mov
daa
lods
jno
out
sbb
iret
lock
inc
hlt
in
mov
push
push
lret
cmp
sub
push
or
aam
mov
push
fwait
adc
rep
and
pop
pop
stos
mov
pop
jecxz
mov
stc
dec
xor
pop
std
mov
dec
xor
sub
movsl
xchg
mov
xor
sti
inc
push
orb
imul
sbb
cld
pop
jb
add
cltd
jae
sub
mov
push
add
push
decb
rcl
mov
push
and
pop
adc
insl
sti
sti
mov
adc
testl
sbb
cmc
fadds
mov
jg
popf
and
jb
into
dec
xchg
pop
mov
addr16
arpl
gs
shll
mov
and
xchg
sar
je
js
test
pop
mov
add
xchg
mov
mov
and
inc
ljmp
test
pop
dec
cmp
ss
cmp
cmp
add
adc
icebp
sbb
frstor
data16
js
fimuls
fwait
cltd
test
inc
inc
push
cmpl
std
movl
fsub
out
adc
lret
repz
push
cmp
mov
dec
incl
imul
sub
add
fwait
mov
push
ror
pop
push
int
xlat
inc
sbb
mov
imul
or
data16
xor
aad
xchg
push
lret
lret
clc
lock
imul
fadds
orb
lahf
jge
in
jnp
jnp
fwait
dec
loop
fwait
das
xor
mov
xchg
pop
inc
in
inc
jp
dec
jg
jb
cld
adc
inc
mov
lock
mov
test
inc
sbb
pushf
ss
enter
ret
sbb
cmp
push
jb
pop
sub
fidivrs
adc
jge
lock
movsb
lock
or
inc
or
js
mov
add
ret
popw
dec
out
int
or
sub
mov
lds
xor
mov
mov
into
dec
rorl
lock
cwtl
jae
popf
lret
fdivs
dec
sub
jnp
js
jb
push
aad
jl
ret
sahf
adc
lea
rcr
dec
imul
scas
dec
adc
jns
repz
dec
stc
push
aaa
adc
jb
lret
push
stos
enter
ret
sub
xlat
push
daa
les
clc
es
fxam
mov
pop
adc
mov
out
int3
add
into
cwtl
lahf
lds
call
lods
iret
repnz
mov
adc
std
cltd
sbb
xor
dec
xchg
gs
mov
xchg
mov
lea
dec
rcll
cmc
push
mov
dec
fmull
ljmp
xchg
xchg
push
pop
scas
jg
sbb
sub
sbb
outsl
dec
jle
imul
xor
sti
insb
push
shrl
ficompl
or
mov
in
fcoms
pop
jp
sub
lcall
hlt
sti
and
cmp
fs
sub
pop
push
mov
aad
push
jnp
fists
test
fwait
movsb
mov
ss
cmp
out
and
push
pop
mov
shll
test
iret
mov
mov
out
push
test
daa
ret
gs
sub
sbb
jnp
jge
and
and
inc
cmpb
scas
adc
mov
ret
out
jbe
fstpl
iret
sbbl
mov
jle
pop
lcall
je
add
icebp
sahf
xor
clc
cmpsl
js
or
ret
gs
push
loope
pop
dec
movsl
cmc
jnp
sbb
jae
pop
hlt
cld
fistpll
or
adc
or
lods
push
jae
out
rcrb
jg
aas
add
in
cs
movsb
cmc
and
ljmp
out
push
add
arpl
imul
and
fs
lds
int3
fnsave
dec
jecxz
dec
in
sahf
in
loopne
iret
xchg
inc
fcmovnbe
jge
idivb
lock
mov
push
ds
aas
add
in
lds
jle
mov
out
icebp
xchg
insl
mov
rolb
sub
mov
dec
test
jno
dec
jmp
sbb
mov
andl
js
cld
add
andb
clc
push
lret
aam
xor
inc
lar
adc
add
mov
dec
fcmovnbe
mov
popf
fld
inc
pushf
arpl
jno
in
loope
lcall
out
mov
clc
lock
adc
fisubrl
sub
inc
sysenter
iret
xchg
dec
cli
mov
sub
push
add
and
jnp
cmpsb
bound
sbb
in
mov
mov
jno
pop
jg
arpl
inc
xor
and
es
ds
das
and
dec
stos
fbld
push
in
push
push
outsl
mov
push
mov
je
mov
icebp
mov
and
push
mov
add
into
js
lret
mov
fs
pushf
mov
add
sbb
in
packssdw
stc
in
mov
mov
dec
fstps
xchg
adc
cltd
mov
cmp
cmp
repz
aaa
push
cmc
or
scas
ret
das
repz
test
lret
mov
mov
push
mov
sub
pop
scas
icebp
jmp
in
enter
sbb
mov
int
insw
cmpsb
cmp
push
dec
inc
je
mov
mov
mov
ret
sub
loope
cmp
jg
fstpt
scas
dec
scas
addl
push
inc
rorb
out
movb
sbb
int
test
idivb
cld
lcall
hlt
int
les
sub
arpl
icebp
xchg
sub
inc
outsl
fiaddl
inc
rcll
test
jnp
inc
subl
cmp
inc
jne
scas
fdivs
je
testl
fidivrs
outsl
and
cmpsb
repnz
clc
shll
imul
sbb
xor
shlb
mov
mov
ret
fnstcw
cmp
sarb
iret
and
inc
sub
enter
or
sbbl
fwait
jl
and
xchg
cmp
adc
cmc
es
push
into
das
adc
adc
ja
jae
call
out
inc
pop
add
xor
sbbb
fidivrl
stos
push
or
stos
xor
push
ret
ror
lret
dec
dec
rcrb
lods
dec
jne
lock
jl
mov
movsb
out
pusha
dec
sub
ljmp
pusha
mov
jns
or
shrl
jbe
mov
dec
jmp
data16
scas
inc
call
aam
dec
movsb
jns
lock
mov
icebp
add
or
xchg
dec
scas
arpl
enter
cwtl
mov
addr16
dec
xchg
movsl
cmpsb
repz
xorb
mov
and
add
and
pop
pop
jg
inc
insb
cmp
sub
pop
lods
xchg
cltd
imul
outsl
pop
push
pop
jg
cmp
cmc
inc
testl
mov
fisttps
add
outsl
fildll
adc
scas
lds
dec
cld
gs
jnp
popa
xor
adc
stos
mov
xor
mov
cli
dec
and
jp
mov
and
loope
and
mov
push
mov
sbb
and
push
and
mov
push
push
lcall
subl
daa
xor
xorb
out
cmp
pusha
sub
je
outsl
push
xchg
int
jl
mov
lods
aaa
jle
lcall
addr16
and
sahf
pop
lds
fldt
cli
mov
inc
lahf
dec
dec
inc
mov
and
ja
mov
mov
bound
push
mov
ljmp
in
or
dec
andb
int3
out
loope
cltd
adc
bound
scas
push
dec
fisubl
xor
pusha
dec
mov
cmp
ds
and
test
add
mov
mov
adc
jo
inc
mov
cmc
adc
lahf
test
mov
xchg
push
in
imul
mov
insb
sub
xor
clc
or
inc
dec
addl
pop
ret
push
push
rorb
inc
rolb
nop
leave
xchg
add
out
inc
pop
js
sub
xor
or
pusha
fbld
notb
je
cmp
stos
clc
repz
jg
or
movzwl
int
hlt
xchg
xchg
mov
subl
or
inc
scas
jae
decb
lret
sbb
add
mov
cmp
fiaddl
arpl
xlat
lahf
lahf
inc
in
dec
pop
push
stc
pusha
xor
mov
call
int
stos
xchg
pop
and
pusha
out
cmp
loopne
mov
push
mov
pop
jbe
mov
ffreep
push
push
test
xchg
cmp
sub
sbb
popa
mov
test
clc
or
or
in
dec
shlb
mov
inc
shll
sbb
popa
cmp
mov
push
push
fs
cmp
mov
int3
in
outsb
jmp
insb
pop
mov
pop
and
test
sarb
xchg
lcall
loope
lods
pxor
and
sti
push
and
xlat
sbb
in
mov
jbe
fs
mov
mov
lock
inc
jbe
xchg
dec
cmp
inc
xchg
jae
pushf
ret
lret
inc
push
fwait
adc
push
cmp
stos
cmpsb
dec
sub
scas
unpcklps
inc
dec
or
or
lahf
mov
push
scas
call
mov
xor
std
cmp
popa
pop
adc
ss
ljmp
icebp
test
or
mov
std
mov
test
xchg
int
inc
push
mov
xor
jg
sub
push
xor
das
mov
jno
xor
aam
test
sbb
fstpt
add
jne
mov
mov
mov
inc
mov
rolb
in
adc
repz
jge
jb
loope
cmp
cmp
lret
ljmp
arpl
out
int
mov
mov
jle
mov
add
push
push
sub
jecxz
stos
push
test
loopne
test
gs
cmp
ja
out
arpl
sbb
mov
push
or
xor
jno
pop
jno
push
ret
xchg
ss
inc
sub
xlat
dec
mov
jns
loop
xor
push
fsubrl
inc
inc
orl
mov
sbb
inc
mov
fcomps
xorl
out
adc
aam
pushf
and
ljmp
pop
fimull
cs
inc
inc
mov
mov
loop
xor
fidivrs
rcl
aas
push
xchg
push
ret
js
movsb
aas
pop
sbb
int
pop
xor
mov
rclb
jecxz
push
push
rclb
push
push
arpl
push
js
and
xchg
push
stc
js
addl
xor
xor
std
pop
cmc
in
ljmp
mov
icebp
dec
mov
in
sar
push
repnz
mov
fldcw
jge
in
je
movsb
or
dec
adc
outsb
xchg
dec
bswap
push
cld
mov
lcall
and
rcrb
push
lods
js
jne
mov
outsb
loopne
pop
shlb
and
adc
xchg
rorl
arpl
dec
sahf
outsl
jno
data16
inc
sbb
dec
lods
cmp
adcl
xchg
fwait
push
xchg
fadds
and
lea
lds
or
lock
sub
pop
pop
cmp
dec
sbb
ja
pop
movsb
inc
ret
mov
les
mov
sub
std
mov
icebp
inc
movb
in
cmp
test
inc
mov
xchg
sbb
push
les
cs
xchg
mov
test
pop
jg
insb
out
pop
scas
push
mov
mov
adc
jmp
fsqrt
dec
dec
fimull
push
pop
sbb
dec
cwtl
and
roll
fistps
lods
jecxz
adc
js
adc
pop
repnz
loopne
dec
je
cmpsb
xchg
shr
fidivrs
cmovl
data16
ljmp
xor
and
pop
xlat
out
cmp
sti
xor
mov
test
aas
xchg
inc
cmpsl
inc
lret
push
xchg
mov
sahf
mov
rcrb
inc
push
ficoms
xor
cltd
fistl
push
movsb
jle
jno
nop
lret
push
xchg
daa
sub
jno
mov
movsl
mov
mov
sbb
rcll
push
ret
fcompl
mov
stc
imulb
sbb
xor
aaa
lret
inc
xchg
xchg
sub
mov
dec
jns
fldenv
xchg
or
dec
xor
adc
cmpsb
sahf
call
movsb
out
pushf
int3
xchg
dec
loopne
imul
and
fwait
jnp
loopne
adc
add
repz
sub
notl
push
xchg
insb
xor
mov
jbe
ja
fs
dec
add
xchg
outsl
pushf
clc
sbb
jb
jno
test
pop
fldenv
out
hlt
repnz
and
mov
xchg
imul
sbb
push
popa
or
mov
pusha
sbb
sbb
mov
cmpsl
xchg
iret
add
fistl
add
lods
cmpsb
stos
jo
fwait
xor
loopne
fcomip
scas
sbb
xchg
lahf
fwait
dec
test
adc
and
xchg
push
popf
jne
shlb
mov
mov
daa
sub
ja
fcom
fsubs
addb
jmp
push
outsb
out
lock
insl
rclb
sub
imul
inc
cmp
out
xor
rclb
imul
jp
jmp
imul
cmp
fdivs
std
mov
jmp
push
push
mov
mov
push
ja
das
cmp
push
fisubrs
addr16
enter
xchg
out
int
pushf
jmp
adc
adc
test
xor
inc
sub
lret
lcall
sub
leave
pop
clc
xlat
sub
clc
jge
les
gs
mov
inc
add
jno
sub
pop
test
test
cmp
insb
jge
adcb
ljmp
add
adc
ljmp
lea
and
lcall
mov
dec
mov
stc
lret
loope
adc
cvtpi2ps
loop
fidivl
addr16
xchg
sbb
stos
sbb
les
jns
mov
out
mov
pop
push
test
stc
push
rorl
daa
push
aaa
data16
out
add
hlt
inc
sub
cld
adcl
inc
mov
dec
mov
mov
mov
sub
sub
mov
div
mov
test
loop
test
mov
push
push
mov
bound
or
mov
inc
sbb
adcl
scas
pusha
dec
lret
push
stc
insb
pop
repnz
cwtl
and
das
mov
stc
fsubrs
and
into
jae
leave
shlb
rorl
cmp
ficomps
pop
jbe
lods
sub
ret
ficoml
std
adc
sub
ret
pop
xchg
fs
bound
add
aam
fwait
cmp
push
cltd
rolb
cmp
push
jne
push
dec
sub
gs
pop
pop
adcl
or
inc
js
and
dec
lds
maskmovq
testl
ljmp
push
outsb
repnz
dec
xchg
std
fildl
mov
sbb
andb
movsl
lods
mov
in
mov
les
lahf
mov
call
mov
sahf
loopne
xor
mov
jge
or
sti
stos
pop
pop
xchg
out
mov
lcall
and
sbb
test
int
xchg
loope
ss
dec
pop
jo
jl
arpl
adc
lods
and
lock
dec
jl
xor
dec
fimuls
add
and
xchg
stc
xchg
fldl
loop
lahf
xchg
cmpsl
arpl
iret
add
dec
into
xor
pushl
lods
mov
enter
xor
adc
pop
movsb
pop
mov
and
clc
jg
pusha
nop
div
pop
arpl
mov
incb
and
imul
dec
aam
add
adc
sbb
fmull
fidivrl
mov
pop
lods
jl
push
pop
adc
aad
es
xchg
loopne
dec
inc
or
inc
andl
sar
push
cltd
incl
popf
add
push
dec
movsb
xor
inc
and
lds
mov
mov
jg
push
or
cli
jo
je
aad
jno
inc
jo
xchg
outsl
test
sbb
mov
bound
hlt
cmp
lcall
dec
push
mov
jle
mov
fwait
mov
lret
insl
adc
push
jmp
in
sarb
roll
xchg
xor
stos
jl
loop
iret
cwtl
in
clc
dec
and
ret
lds
addr16
test
xchg
sub
and
jl
insl
mov
pop
inc
icebp
lret
mov
inc
xor
or
insb
icebp
orl
sbb
and
or
dec
pop
jl
lret
mov
mov
xchg
or
push
and
sbb
push
out
xchg
add
insb
cmp
push
stos
mov
xchg
or
fs
hlt
mov
outsb
pop
shlb
dec
push
mov
and
outsl
sbb
out
rolb
jbe
cld
lret
mov
popa
mov
dec
mov
sbb
loop
xor
mov
push
stc
inc
jbe
pop
mov
pop
sbb
test
movsb
inc
ss
cs
lret
pop
arpl
in
ficoml
push
cmpsb
push
insl
dec
xchg
in
push
sbb
xchg
and
mov
jmp
lock
mov
call
psllq
cmp
lods
pop
outsl
addr16
cltd
push
int3
jns
adc
mov
adc
aam
jge
out
dec
in
scas
mov
fdivp
bswap
push
fsub
cld
sbb
cwtl
out
mov
mov
call
pusha
mov
movsl
inc
cmp
mov
movsl
cmp
icebp
in
dec
pop
and
icebp
mov
add
sbb
inc
mov
hlt
lods
dec
cs
fs
adc
inc
cmp
scas
cpuid
jbe
or
lods
mov
lcall
daa
shl
xor
adc
add
adc
push
mov
aas
out
lret
fcoms
sub
push
cwtl
jbe
sbbb
mov
arpl
sbb
xchg
push
inc
out
mov
mov
lret
pop
aaa
mov
add
dec
pop
mov
repz
mov
imul
pop
adc
or
add
pop
xor
mov
pop
jb
pop
add
mov
fbstp
iret
sbb
and
jbe
add
jecxz
dec
mov
pop
adc
and
lahf
int3
jmp
sub
fcoms
xchg
xor
mov
fidivs
xchg
gs
adc
fs
ljmp
mov
in
cmp
test
adc
popa
in
test
movsl
push
push
popa
es
xchg
icebp
cwtl
push
stc
jle
inc
xor
aas
xchg
mov
clc
add
lret
sbb
dec
mov
jb
imull
cmp
mov
iret
pop
add
pop
stos
pop
cmpsb
inc
jg
mov
dec
rclb
jo
inc
arpl
lcall
and
pop
mov
pushf
lret
movsl
iret
pop
jno
push
mov
shlb
out
add
inc
popa
dec
loop
inc
jb
mov
ss
mov
and
and
fucomip
cmpsl
mov
mov
mov
xor
cmc
loopne
xlat
dec
sub
out
mov
mov
xor
xchg
sub
mov
mov
test
xorb
std
popf
mull
bswap
pusha
mov
stos
fnstenv
dec
sbb
ret
mov
sbb
jno
sbb
xchg
sbb
cmp
fmul
jle
cmc
mov
leave
push
shufps
int
mov
xlat
push
jnp
and
xchg
out
outsb
loopne
rcrl
sub
xor
addr16
dec
les
pop
test
inc
and
pop
xchg
or
jno
dec
xchg
xor
arpl
test
jb
aad
aas
in
and
lret
incb
outsb
adc
cmp
fwait
imull
adc
cmp
inc
jae
cli
test
and
loopne
mov
pop
test
xchg
data16
iret
dec
mov
imul
xchg
adc
data16
aaa
dec
xchg
repz
fwait
aaa
adc
jle
jbe
inc
iret
mov
jge
ret
mov
sub
pop
mov
test
shlb
dec
mov
add
in
xor
mov
rclb
out
jb
je
pop
ficompl
and
jo
mov
in
cwtl
scas
and
jle
ja
mov
sbb
mov
pop
sbb
js
add
xor
pop
ljmp
add
inc
lea
jmp
stos
cmp
and
sub
dec
xor
stc
aad
mov
mov
andb
adc
imull
int
fucom
cltd
imul
stc
mov
inc
pop
js
test
cmpsb
xchg
add
fsubrl
pop
cmp
push
mov
fadds
jp
in
in
push
inc
lds
cltd
inc
dec
std
mov
dec
push
and
sbb
es
ljmp
arpl
add
rcrl
imul
xchg
and
loopne
push
ror
out
sub
nop
int3
xor
sub
les
push
outsb
cld
pushf
ljmp
stos
iret
out
filds
dec
sti
outsb
jecxz
ficomps
mov
sbb
push
insl
rcll
push
jae
mov
cmp
aam
jns
mov
cli
iret
roll
loop
fwait
sbb
insl
imul
movsb
pop
mov
repz
pop
inc
mov
jmp
cmpsl
or
inc
shlb
sti
xorl
jmp
inc
adc
cmp
in
bnd
data16
data16
dec
je
lret
popa
xor
scas
inc
ds
and
fnstsw
or
add
icebp
fdivrs
arpl
sbb
add
cli
mov
repnz
mov
mov
dec
push
or
movsb
mov
dec
jo
insb
aaa
mov
shrl
jge
fsubl
add
sub
fsubrl
leave
push
ds
cmp
dec
out
fisubl
decb
sub
fs
daa
sub
cwtl
mov
imul
cmpl
insl
dec
and
adc
or
adc
lcall
inc
jl
lods
or
cmp
jl
in
xchg
hlt
cmpsb
and
sbb
rorb
nop
mov
cmp
ss
cmp
xchg
add
push
ss
cmp
mov
gs
jo
fistpl
push
and
or
mov
loopne
in
shlb
rorb
mov
pop
mov
test
gs
cmp
lea
lods
repnz
or
aad
xor
je
pop
pop
xchg
push
outsl
cld
mov
jnp
add
sub
pop
mov
dec
jl
inc
movsl
test
int3
or
mov
rcr
and
clc
dec
rcr
je
mov
push
xor
mov
xor
mov
mov
cmp
shl
popf
cmc
adc
mov
mov
fbld
je
sub
icebp
dec
dec
les
in
rcrb
mov
mov
pop
das
cwtl
dec
call
or
jg
mov
stc
fcmovnbe
dec
jns
lods
jmp
sbb
lods
or
outsl
mov
hlt
xor
aam
push
movsl
jnp
fidivrs
inc
fs
xchg
into
in
insl
jbe
scas
rorl
dec
xchg
call
test
or
xchg
ljmp
push
push
test
cld
jbe
ret
lock
push
push
sub
xor
adc
add
mov
leave
dec
dec
test
inc
psrad
jl
repnz
imul
sar
or
popf
or
pop
lods
adc
adc
pop
js
in
inc
bound
xor
fdivrs
push
push
fwait
fwait
mov
pusha
inc
pop
js
xchg
mov
sub
inc
loop
shl
add
and
mov
or
pop
ret
pusha
loopne
repnz
cltd
inc
hlt
xlat
jmp
mov
mov
pop
ret
repnz
pop
jecxz
sub
or
mov
cmpsb
imul
mov
fnstenv
loopne
xchg
inc
inc
inc
je
jecxz
sub
ja
mov
lahf
fdivrs
les
fwait
mov
jmp
push
nop
cmpsb
iret
mov
dec
cs
not
iret
fs
imul
dec
cld
jno
scas
aad
ljmp
mov
add
or
shll
xchg
pop
hlt
xchg
mov
out
inc
iret
push
xchg
clc
jae
push
push
mov
push
dec
cmp
xchg
adc
cmp
ss
cmp
jns
lods
dec
repnz
in
push
xchg
in
cwtl
and
mov
jb
in
push
xlat
xlat
mov
repz
movsl
pop
hlt
fstpt
jmp
pop
pop
in
ret
mov
and
mov
movsl
in
jecxz
nop
movsb
mov
or
lods
or
adc
test
dec
cmpsb
jb
xchg
pop
dec
test
test
xor
in
add
test
lea
lret
scas
mov
push
sbb
sbb
stos
dec
xor
repnz
les
sbb
data16
push
push
aam
call
dec
push
add
std
jl
ret
dec
mov
jl
sbb
mov
mov
out
xchg
push
cmp
addl
add
jmp
idivl
add
sti
lock
fisubrl
dec
or
popf
fs
cmp
les
xchg
cwtl
push
xor
mov
jp
ss
jg
imul
cmc
hlt
pushf
mov
es
mov
add
mov
dec
sti
cmp
sbb
add
pop
push
jo
xchg
inc
das
and
out
jecxz
mov
or
ss
jb
jecxz
pop
das
into
int
dec
xor
icebp
pop
lods
push
adc
fcmovnb
aaa
iret
aas
push
pop
imul
or
das
cs
cmp
pop
fcomps
push
fcompl
mov
nop
push
mov
dec
sbb
dec
or
stos
push
bound
insb
mov
inc
and
cld
aad
adc
sub
in
aad
insl
lahf
aad
pop
sub
dec
inc
push
or
lea
cld
shrl
mov
mov
pop
out
push
dec
fmuls
leave
xchg
pop
cmpsl
sbb
inc
push
dec
xchg
fnstenv
mov
push
xor
insb
pushf
int3
push
testl
adc
adc
stos
hlt
aam
icebp
xchg
and
in
xchg
cmp
push
dec
dec
or
in
and
lea
or
andb
addr16
or
jg
bound
imul
jae
sti
mov
or
jae
scas
jns
fdiv
call
inc
loope
sub
movsb
mov
dec
insl
jo
cmp
lea
sub
jp
push
fsub
out
aas
test
mov
pop
loope
cmp
push
and
insl
pop
mov
daa
add
mov
mov
test
jno
push
cmp
pop
sbb
jmp
ret
iret
jp
push
mov
jmp
sahf
sbb
jae
add
imul
jns
and
jmp
mov
xchg
incb
mov
and
ljmp
pop
inc
scas
popf
jmp
xor
push
push
add
push
sbb
mov
add
js
ror
mov
lock
outsl
push
cmpsb
jns
xchg
jmp
sbb
adc
adc
popw
iret
add
jbe
repz
adc
jbe
cmpsl
mov
pop
test
outsb
outsb
repz
sbb
aad
or
leave
fimull
or
push
cmpl
movsb
push
xchg
and
imul
mov
adc
aaa
mov
inc
enter
xor
outsb
inc
mov
rorl
imul
sarl
sub
cmp
inc
jmp
xchg
fwait
mov
xor
stc
call
xchg
fwait
ret
add
aam
mov
inc
inc
clc
dec
pop
cld
and
cmp
cmpsb
test
loopne
rclb
mov
cmp
sbb
je
push
mov
xchg
cs
dec
fisubs
mov
mov
xor
dec
in
sub
loopne
and
sub
int3
dec
movsl
push
stc
pop
cmp
sub
pop
cli
inc
test
mov
jae
sub
xor
cld
xchg
mov
enter
lcall
lock
sub
inc
lea
sbb
stos
xor
pop
mov
dec
call
movsb
adcb
movl
mov
in
xchg
push
pop
lahf
subl
pop
popa
and
nop
inc
cld
sbbb
or
arpl
fwait
dec
adc
and
or
cmp
push
inc
pop
pop
and
cmp
xchg
inc
dec
das
sub
xchg
add
sbb
push
repnz
std
pushf
xchg
mov
int3
add
mov
ss
rorl
nop
dec
mov
sbb
sbb
mov
push
leave
xchg
int3
mov
adc
mov
sti
xchg
pop
mov
mov
jg
add
sahf
pop
cmp
aas
mov
push
ret
and
bound
popf
sub
xchg
fbld
push
loopne
shrb
sbb
aas
movsl
jno
int
mov
xchg
mov
jne
push
out
push
sbb
pop
adc
test
lds
pop
and
ret
jg
rcl
mov
loop
fdivp
lcall
stos
jo
fildll
inc
adc
sbb
xchg
mov
int3
cli
sub
repz
jecxz
sbb
xor
mov
inc
mov
fsts
clc
jge
loopne
mov
push
mov
dec
or
fbld
sub
xchg
push
mov
and
js
fstl
mov
mov
fnstsw
in
scas
pushf
shrb
inc
xchg
cmp
jae
jmp
insl
mov
dec
inc
dec
sahf
xchg
sahf
pop
popf
mov
dec
push
imul
rcrl
dec
push
and
xor
les
pop
fsubs
je
mov
inc
sub
dec
mov
inc
sti
dec
imul
xchg
xchg
inc
iret
rcr
lods
shlb
inc
inc
mov
leave
pop
mov
out
mov
fcoms
imul
repnz
lcall
movb
mov
enter
pop
cmp
decb
stc
pop
call
imul
xchg
insb
imul
mov
sarl
fnstsw
loope
cs
fdivp
pop
jo
and
bound
mov
cmp
movsb
mov
pop
cmpsl
fistpll
stos
mov
xor
insb
xor
neg
xlat
mov
gs
push
jno
cld
sub
lock
adc
xlat
dec
cmpsl
std
cmp
shll
mov
gs
in
mov
mov
sbb
popf
jbe
out
mov
dec
repz
adc
es
fstpt
jl
testb
jmp
add
das
inc
mov
cli
jb
movsl
rcll
push
jo
ret
xlat
xor
sbb
dec
and
mov
je
aaa
lods
pop
mov
imul
pop
xor
push
push
mov
and
or
pushf
jl
adc
adc
inc
data16
mov
sub
jp
mov
cld
sbb
je
mov
mov
jae
adc
dec
and
arpl
fidivs
and
out
push
jns
mov
jne
in
mov
cmc
nop
cmp
jmp
mov
clc
push
rcl
xlat
mov
iret
jne
stos
fisubrl
and
add
outsb
mov
into
pop
sub
mov
mov
movsl
dec
out
mov
cmp
ljmp
rcll
and
shll
sbb
repnz
addl
les
fs
sub
sbb
push
aad
mov
lea
movsl
daa
inc
cli
hlt
add
xor
cs
nop
inc
mov
mov
xchg
cli
pop
subl
add
into
mov
fnstcw
in
pmulhuw
scas
jns
jno
into
lret
sbb
outsl
sar
sub
cwtl
rorb
push
push
lcall
dec
mov
dec
xchg
add
inc
or
mov
pop
cmp
mov
lods
stos
inc
ds
pusha
dec
mov
ljmp
adc
movsb
scas
icebp
jmp
lods
rol
fcomp
mov
in
out
add
rol
daa
adc
lcall
subb
into
mov
popl
add
das
and
and
test
jmp
cld
aam
mov
into
in
shlb
sbb
into
inc
movsb
sub
xlat
push
inc
push
jg
cld
sub
push
xchg
sub
push
add
fs
add
imul
testl
js
jmp
cmpsb
aaa
push
jo
clc
out
cmp
pop
leave
adc
jmp
jecxz
dec
sbb
mov
insl
aaa
jl
sub
cld
hlt
adc
addr16
inc
pop
dec
arpl
stos
popf
jae
sub
sbb
mov
leave
adcb
int
jmp
outsb
jnp
sub
pop
cmpb
dec
outsb
sahf
ficomps
std
lret
xor
std
mov
xor
repnz
mov
cmpsb
xchg
fucomip
ret
gs
jae
test
mov
and
stc
loop
xor
sti
pushf
dec
ljmp
xor
pop
icebp
fs
bound
mov
mov
in
xor
cltd
aas
jl
cltd
ds
sbb
or
test
ljmp
jns
shll
mov
cld
icebp
inc
addr16
int3
int3
mov
xor
sahf
push
daa
outsb
mov
ret
mov
ljmp
imul
add
mov
push
outsb
orl
mov
loope
ljmp
mov
lret
dec
inc
bound
mov
cmp
mov
dec
jns
xchg
scas
fs
ret
fists
dec
movsb
inc
stos
dec
fidivrl
xchg
notb
xor
ss
leave
testl
lock
lahf
int
int
int3
call
mov
mov
xor
jmp
mov
and
jb
stos
insl
jo
popa
jb
jb
stc
divb
cmp
aam
xorl
cli
arpl
mov
push
mov
in
int
add
jmp
cmc
pop
push
into
xor
sub
push
push
or
lahf
sbb
fs
mov
push
xchg
in
dec
pop
add
xchg
push
test
sti
stos
mov
mov
mov
mov
dec
clc
cmp
aas
pop
out
inc
adc
cmp
rol
invd
fildl
scas
mull
insl
sbb
and
bnd
pop
pop
test
sbb
sub
out
cmp
repnz
mov
outsl
out
fdivl
aas
in
adc
cmc
jae
push
push
mov
hlt
mov
movsb
sub
sbb
rcll
in
mov
push
bound
test
push
aaa
add
mov
nop
push
enter
dec
nop
dec
call
ret
outsl
pushf
mov
mov
jns
mov
mov
cld
nop
mov
mov
adc
and
es
push
sub
jmp
pop
xchg
popa
mov
jge
and
push
sbb
in
mov
lret
cld
sub
xchg
sub
addb
in
leave
hlt
push
fstpt
loop
repz
add
and
pusha
sub
xor
shll
sub
cmp
dec
sub
aas
cmpsb
inc
xor
xchg
xchg
jae
jge
lock
sub
aas
mov
int
arpl
mov
jmp
faddp
jno
jg
test
lods
xchg
push
dec
lret
mov
jo
pop
push
mov
enter
sbb
pop
cmp
mov
loop
jnp
mov
mov
insl
mov
out
and
daa
js
in
pop
addl
xlat
mov
mov
clc
movsl
out
cltd
shll
cmpsb
das
push
xchg
neg
jle
or
lahf
inc
inc
clc
clc
pop
std
jb
movsl
and
pop
test
xchg
pop
sub
mov
and
js
ds
adc
xchg
xorb
xor
outsl
xlat
push
lret
test
mov
repnz
add
push
or
xchg
mov
mov
js
add
rolb
ret
lcall
add
xchg
cmc
aas
add
rcl
lods
add
scas
adc
fiaddl
out
sbb
xlat
stos
or
lret
gs
xchg
sub
aam
pop
sbb
ret
mov
insl
push
shl
rcr
sbb
inc
decb
std
daa
dec
adc
mov
jne
outsl
rcll
cmp
fisubl
icebp
std
hlt
pop
loopne
mov
jns
aas
gs
push
in
push
scas
ds
cmp
cmpb
xchg
ja
inc
aam
rcrb
xchg
out
iret
pop
das
mov
inc
je
and
popf
adc
xor
mov
cmp
loop
xor
push
xchg
aas
jge
cmp
cmp
and
jnp
mov
jecxz
inc
push
mov
loope
push
xorb
std
mov
or
push
pop
lods
shrb
cmc
mov
push
add
add
mov
mov
rcrl
jg
neg
lcall
push
in
jl
sti
xor
and
xor
mov
test
popa
shr
repnz
in
dec
dec
fists
clc
imul
les
add
mov
fdivr
sub
jmp
out
add
sbb
pusha
pop
sub
jge
je
sbb
insb
popa
bound
mov
mov
adc
xlat
fs
push
mov
adc
inc
push
mov
or
dec
ror
jl
xchg
mov
push
inc
cld
jno
sbb
in
lds
xchg
nop
testb
pop
in
lock
lcall
pop
les
ficomps
fadd
jge
push
int
and
shr
sub
ds
add
mov
mov
xchg
jl
and
or
jno
cmp
sub
push
testb
ss
mov
insb
ljmp
pop
loop
leave
xor
mov
or
push
std
dec
shll
mov
and
add
push
shll
sub
xchg
movsb
test
sub
dec
mov
or
bound
mov
or
test
jl
pop
lds
js
mov
dec
lret
jbe
fists
cmp
ja
out
jns
or
fisubl
in
mov
cli
scas
les
fsts
pop
push
fs
cmpsl
lret
into
inc
push
into
push
xor
pop
push
test
jbe
call
jnp
jnp
sub
xor
jne
out
loope
or
leave
push
fsubl
gs
je
fisttpl
stos
sti
push
add
fcomps
mov
push
cmp
add
xchg
outsb
cmp
fucom
adc
xor
inc
mov
and
jmp
pop
adc
sbb
stos
adc
adc
out
inc
pop
arpl
adc
enter
test
in
cltd
dec
cltd
xchg
and
loop
rcll
aad
dec
addr16
cmp
adc
jle
xor
dec
pop
mov
jp
ficoml
dec
pushf
mov
dec
data16
sbb
outsb
out
lds
sbb
push
jmp
add
bound
push
mov
mov
lock
scas
push
testb
out
push
jge
pop
push
js
sbb
cmp
je
mov
flds
cmp
or
push
jecxz
mov
push
mov
ja
dec
mov
jno
dec
inc
push
sti
hlt
pop
sbbb
imul
sub
sar
daa
sub
jmp
mov
or
in
ss
repz
mov
jge
fstpl
mov
ds
insl
jle
stos
jo
push
xor
xor
push
mov
inc
mov
xor
repnz
push
rcrb
cmpsl
add
test
sub
test
adc
sub
inc
sbb
sub
gs
call
and
notl
mov
bound
out
mov
push
dec
scas
mov
mov
sub
add
mov
dec
mov
push
jecxz
and
pop
lret
out
dec
std
inc
pop
ja
xor
cmpsb
or
test
pushl
mov
add
pcmpgtd
fwait
ret
idivl
dec
fcmovne
icebp
jmp
push
fsubs
xchg
sbb
lret
shl
adc
out
mov
mov
out
cmpsb
mov
mov
scas
lods
cli
and
mov
das
sarb
add
adc
adc
or
sahf
jnp
aad
ret
push
cld
out
add
bound
mov
test
and
adc
push
cmp
pop
cmpsl
mov
jecxz
adc
sbbl
pop
push
das
jb
sarb
xchg
sbb
pop
jne
dec
push
insl
bound
sbb
adc
push
sbb
mov
clc
mov
jns
pop
int
and
cmp
push
cli
mov
stos
inc
addb
dec
adc
inc
scas
dec
outsb
cwtl
sbb
loopne
mov
ljmp
dec
fldcw
cwtl
sub
outsb
push
ja
xlat
aad
and
mov
ljmp
xor
js
je
mov
adc
js
add
or
push
sub
loop
pop
jg
mov
push
repz
lods
cmc
cmpsl
pop
ficompl
mov
shll
mov
mov
push
and
mov
adc
xlat
leave
dec
daa
sarb
push
adc
clc
sbb
and
insl
aas
jne
bound
mov
aas
cmp
push
inc
in
pop
xlat
lret
clc
idivb
mov
add
or
cltd
iret
in
inc
adc
dec
dec
xchg
jp
scas
outsb
and
jge
jne
mov
inc
or
mov
push
add
nop
add
mov
cmp
inc
fmulp
stos
sbb
cmpb
dec
adc
lock
add
int
testl
jo
imul
cmp
xchg
ss
adc
mov
pop
imul
inc
sub
lods
clc
fnstenv
or
xor
mov
jmp
push
cld
cld
jg
movsl
mov
testl
push
aas
popa
mov
jb
mov
flds
dec
loop
fsub
xchg
and
xor
mov
stos
xchg
pop
adc
dec
sbb
push
es
pop
stc
cmpsl
lods
add
das
mov
test
sbb
add
adc
shlb
sbb
jp
aad
imul
gs
push
int
cmp
or
jp
inc
lea
mov
or
loope
ffree
outsl
aad
lds
pushf
dec
cltd
loope
sti
mov
add
pop
mov
dec
and
fwait
mov
lods
xor
and
fidivl
mov
mov
inc
stc
adcl
icebp
sub
xor
pop
arpl
mov
test
cmc
popf
adc
and
sub
mov
mov
add
dec
mov
pusha
shlb
mov
gs
loop
pop
xchg
lret
push
xor
mov
loopne
mov
dec
xchg
fwait
aaa
push
and
xchg
add
sti
add
fcmovb
jb
push
sti
cmpsl
pop
stos
or
mov
xor
rorb
test
sbb
or
mov
arpl
shll
inc
mov
jb
loope
cmc
dec
out
xor
jp
aad
inc
xor
icebp
pusha
ss
mov
bound
inc
xor
xchg
shrb
pop
loop
hlt
mov
pop
out
adc
adc
sti
push
xchg
adcl
fidivs
or
add
lret
mov
ss
mov
mov
sbb
mov
or
xchg
loop
mov
leave
cli
rolb
jp
push
jecxz
ds
in
es
sbb
ljmp
sahf
mov
xlat
mov
icebp
mov
outsb
iret
std
xchg
outsb
jb
inc
cld
loopne
add
mov
daa
cmpsl
mov
and
jns
push
pushf
aam
rorl
fstl
mov
call
sub
movsl
xchg
jle
jmpw
push
cmpsb
dec
aad
test
mov
loopne
jbe
ljmp
loop
fists
push
xchg
mov
test
jno
sbb
pop
stos
ss
sub
cmc
dec
mov
jmp
push
les
fmull
fldl
stos
pop
xor
ret
mov
adc
fsubrl
mov
out
pop
ficoml
not
dec
inc
adc
int3
ljmp
daa
push
sbb
mov
mov
inc
and
dec
xlat
push
in
loopne
lods
fwait
daa
daa
jl
jecxz
mov
mov
add
popf
dec
mov
or
idiv
cmp
test
xchg
subb
mov
sub
enter
cld
inc
pop
shlb
xor
or
jle
imul
ja
pop
dec
lahf
in
mov
push
adc
lret
and
mov
aaa
jnp
sbb
mov
mov
and
mov
mov
jnp
in
repnz
cld
pop
jbe
jo
xchg
gs
andb
lret
sarb
insb
sahf
fcom
mov
or
mov
push
in
sub
push
in
mov
mov
cs
cmp
insl
adc
cmc
jb
in
test
lret
xchg
pop
dec
mov
icebp
push
pop
cmc
mov
sbb
inc
mov
sbb
adc
xchg
jle
mov
sti
sub
filds
cmp
shll
test
shr
fists
dec
daa
jge
jnp
out
pop
aas
loope
push
mov
xor
mov
test
js
lods
xlat
fistpll
mov
pop
sti
xlat
xchg
dec
lock
addb
popa
xor
dec
jno
add
sbb
lea
cmc
inc
mov
sti
pop
sarb
rcr
sub
add
sbb
lret
data16
scas
mov
aas
inc
mov
test
fwait
cmp
in
scas
and
jbe
push
sub
mov
aam
les
mov
in
cwtl
dec
xchg
xchg
jae
dec
cld
divb
sbb
jmp
pop
push
cltd
sbb
je
repz
pop
das
and
ds
shll
dec
xchg
mov
jmp
mov
leave
push
fdivrs
clc
fidivl
call
and
mov
or
lds
out
mov
psubq
jge
cmp
cmp
cltd
cmp
jbe
dec
mov
xor
scas
jb
sbb
push
loopne
mov
ss
or
das
push
sbb
cld
sbb
push
lcall
push
test
fwait
add
jbe
ljmp
pop
cmp
pop
push
dec
sbb
outsl
adc
sub
mov
lods
addr16
xor
rorb
push
cmc
push
mov
xchg
aam
fdivrp
lea
jge
insl
or
cmc
mov
mov
lcall
out
sbb
rclb
or
nop
sarb
cltd
fisttpll
inc
pop
sub
xor
imul
ret
dec
cmp
loope
cwtl
jle
loop
mov
jge
sbb
addr16
mov
push
sub
or
dec
push
aam
sub
sarb
mov
out
add
cli
mov
add
test
xchg
lods
cli
fs
sahf
in
xor
stos
push
or
enter
bound
stc
add
repnz
dec
mov
popf
cmp
ja
fcoml
lock
arpl
call
or
push
es
call
mov
mov
inc
and
dec
push
cwtl
js
mov
sbb
or
pop
mov
cmp
dec
dec
push
adc
or
imul
mov
jl
inc
popa
mov
out
sub
pop
pop
lret
jg
fstps
jb
sub
inc
jmp
shrl
mov
adc
into
jp
cli
repnz
cmp
jbe
insl
enter
test
lcall
inc
mov
icebp
or
ja
inc
int3
hlt
lahf
xchg
in
and
xchg
shll
mov
sbb
call
sub
mov
jle
jge
das
push
or
push
lods
cmpsb
and
jnp
lock
ficompl
mov
insb
jae
roll
add
push
adc
mov
xor
das
sub
and
aad
adc
aad
call
and
jb
mov
fisubrs
stos
push
cmp
inc
sbb
out
push
jecxz
loopne
jg
das
mov
hlt
hlt
adc
cmp
in
cmp
xor
sbb
xor
std
imul
test
cld
lahf
and
xchg
or
imul
mov
mov
fists
call
test
aad
inc
cmp
rcr
stos
out
sub
xor
inc
and
sbb
lods
enter
pop
mov
mov
sub
push
in
rorl
mov
ja
popf
mov
lds
out
std
mov
dec
out
push
sarb
dec
iret
outsb
push
xor
das
out
fistpl
jno
dec
into
and
or
or
popa
shr
mov
adc
movsb
pop
movsb
lods
push
pop
call
dec
jle
fs
aaa
mov
and
shrl
mov
out
push
mov
push
test
out
enter
mov
orb
out
jge
sub
and
jb
inc
movsl
ss
repnz
push
or
cwtl
imul
jns
shl
push
scas
clc
jnp
mov
cmp
ret
pop
jle
sub
sub
stos
and
push
pop
aas
inc
sbb
out
int3
push
mul
push
xchg
pop
fcomp
sti
add
pop
iret
insl
inc
push
and
stos
add
movsl
push
adc
inc
je
imul
popa
sub
mov
aad
in
xchg
mov
cmc
cmp
dec
dec
ffreep
cmc
fisubrl
notl
jmp
inc
push
push
in
mov
aad
xchg
jg
shll
sbb
mov
xor
xor
mov
pop
mov
stos
jmp
rolb
adc
movsb
daa
sahf
aas
lcall
mov
xor
loop
jb
movsb
mov
test
lea
push
jnp
xor
pushf
cmp
arpl
shll
aas
loope
sbb
clc
movsb
mov
adc
stos
sbb
xor
loopne
fimull
jne
iret
mov
fisubrl
cmpsb
xor
into
mov
xor
repnz
inc
lret
aam
rcrl
sub
aad
popf
leave
dec
lds
pop
sbb
adc
or
es
orb
push
arpl
test
cmc
fidivrs
xor
out
add
hlt
lret
cmpsb
and
cmp
xchg
loop
push
sti
push
std
aas
shll
ds
cmc
sub
loopne
scas
scas
into
push
fs
hlt
les
cmpsb
cmc
sub
and
into
icebp
frndint
into
pushf
sbbb
les
daa
adc
xor
insl
movsl
aam
clc
fs
or
cmp
aad
jo
add
test
jnp
daa
push
mov
fdivs
test
pop
jmp
pop
pop
xchg
add
into
in
scas
xlat
aam
subl
push
dec
sub
or
pusha
jnp
xchg
xor
imul
out
lods
push
outsb
sub
int3
xchg
mov
xor
stos
mov
sbb
je
clc
test
cld
daa
data16
mov
test
sbb
gs
mov
mov
rclb
ljmp
das
xchg
popf
jnp
mov
pop
inc
rcll
cmp
adc
shl
cmpsb
inc
je
int3
cld
push
jbe
pusha
jnp
pop
mov
mov
push
pop
lods
loope
push
aad
mov
enter
add
adc
cmp
mov
fldt
add
jmp
push
xor
rcll
daa
scas
andl
mov
push
bound
xchg
mov
sub
aaa
arpl
lods
cmp
mov
sbb
shrb
add
pusha
mov
push
push
xor
xchg
sar
out
pop
ds
jb
inc
iret
inc
jbe
or
jecxz
mov
adcl
dec
cltd
cmp
repz
insl
setnp
dec
ss
fildl
push
jnp
scas
mov
outsb
and
jnp
lea
das
and
sub
jae
xchg
shrl
jns
add
out
adc
xor
rorl
daa
push
pop
add
mov
movl
hlt
mov
mov
jg
mov
pop
jnp
mov
insb
pop
xchg
sti
sub
xor
add
xor
nop
pop
and
cs
mov
out
jne
popf
jne
fidivl
testl
aaa
and
cmova
test
xchg
push
imul
aad
in
das
inc
push
je
mov
adc
out
mov
adc
test
repz
jno
rep
push
mov
pushf
xor
cmpsl
stos
pusha
and
fisubs
push
fstps
jno
push
out
mov
rcll
addb
push
sub
ret
jo
aam
daa
in
das
hlt
inc
hlt
sub
addr16
sbb
xchg
jo
stos
lods
cltd
ficoms
mov
stos
scas
mov
mov
ret
sbb
push
sbb
cltd
cli
jne
cmp
xchg
scas
xor
cmp
fldcw
xchg
into
outsl
insb
cs
push
aaa
push
mov
test
sbbl
add
gs
mov
sub
pop
or
stos
mov
and
push
loopne
out
ds
fwait
outsb
pop
out
jle
push
jno
xlat
or
movsb
dec
sub
fidivrs
xchg
out
int
xor
lock
jb
inc
lock
lods
push
dec
mov
lcall
fidivs
mov
movsb
out
outsl
cld
inc
sub
mov
enter
imul
mov
aad
push
or
aam
repz
mov
lods
stos
cmp
xor
or
mov
shll
fld
fcmovbe
fstpt
inc
jmp
pop
lret
mov
int3
sub
jns
jmp
hlt
shl
push
test
fyl2x
fldcw
push
pop
gs
and
fsubr
or
jbe
adcl
repnz
rcrl
mov
leave
mov
inc
test
mov
lret
dec
adc
push
decl
sub
jle
and
add
add
fcomps
cmp
shll
test
dec
cmpsb
xor
mov
sti
rcr
inc
xor
xor
cwtl
shlb
cs
xchg
fimuls
jae
fldt
fnstsw
fimuls
jecxz
bound
in
mov
inc
hlt
pop
cmp
fdivrs
nop
cmp
leave
cld
xchg
jecxz
jmp
js
xchg
rcll
aas
jbe
ss
xor
dec
pop
adcb
xor
fistl
arpl
test
mov
jge
loope
xor
dec
sarb
test
or
adc
arpl
xchg
ja
adc
cmp
and
or
xchg
jecxz
dec
stos
cmpsb
xchg
cld
jne
scas
out
push
cmp
pop
xchg
sub
mov
fsub
mov
clc
movsl
cltd
push
jp
inc
addb
std
out
movsl
daa
push
fisttpll
jno
push
mov
sub
and
inc
or
or
pop
loopne
leave
lods
stos
add
insl
pop
sub
in
cmp
add
leave
xchg
jb
cmovae
pop
xchg
jge
sub
outsl
dec
pop
mov
mov
mov
lock
push
aad
js
fists
xchg
cmp
mov
mov
ja
outsb
fs
fwait
pop
xchg
jns
aas
xchg
mov
adc
movsl
rcrb
dec
sbb
ss
xor
mov
mov
pop
mov
mov
filds
repz
cmp
jns
mov
mov
scas
popf
sub
std
ds
jecxz
pusha
ret
flds
fldcw
pop
stos
adc
fbld
add
ficomps
rclb
lret
or
test
pop
aas
sub
inc
mov
mov
fdivrl
lds
movsb
xchg
popf
mov
cmc
mov
bound
xlat
js
xchg
fcompl
movsl
jle
jge
xchg
dec
fs
ss
sti
leave
xchg
push
sub
fstpl
dec
sub
sub
add
cld
je
and
add
adc
mov
in
mov
dec
and
sbb
add
pusha
ljmp
int
sarl
xor
idivl
loope
lahf
aas
xchg
jns
test
sbb
or
clc
ss
xchg
mov
sbb
mov
mov
or
data16
mov
inc
mov
xor
add
enter
mov
or
leave
lea
loope
das
bound
and
mov
cmp
mov
cmpsl
clc
xor
les
add
or
xor
aaa
aad
pop
inc
xchg
jl
cmc
into
outsb
xchg
into
js
cmpsl
mov
std
imulb
push
and
mov
sub
ret
es
call
mov
mov
lods
lret
scas
push
pop
dec
lret
xor
xchg
call
scas
mov
mov
pop
mov
cmpsb
jmp
inc
cwtl
push
imul
fisttpll
es
sbb
scas
pusha
fisubrs
aad
aam
push
sub
xlat
dec
stos
icebp
dec
xchg
ficompl
add
mov
cwtl
jle
cli
xchg
jo,pt
rcr
out
mov
mov
push
aad
cld
adc
or
push
loopne
sub
dec
xchg
notb
jns
xchg
push
js
add
mov
mov
pop
dec
test
test
nop
jbe
rol
or
mov
in
jl
jne
mov
test
mov
aad
ret
push
js
push
cld
and
pop
lahf
xor
les
in
test
and
mov
ret
jnp
fwait
mov
or
repz
pop
stos
pop
les
mov
inc
mov
and
movsl
push
stc
addb
loop
data16
xchg
sbb
out
sub
imul
mov
cltd
jmp
xchg
push
xchg
fnstsw
add
add
pop
int3
xor
idiv
mov
lods
cli
test
xor
adc
dec
pop
idiv
mov
out
jo
jl
in
or
push
sbb
mov
mov
sbb
add
xlat
outsl
inc
cmpsb
mov
shrb
mov
push
inc
cwtl
testb
inc
and
lret
scas
outsl
mov
ljmp
push
sub
test
gs
dec
pop
xor
lret
xor
xorb
sub
pop
mov
rcll
xlat
dec
push
popa
dec
lods
sub
dec
jb
push
mov
aas
sub
scas
popf
sbb
mov
lock
popf
xor
icebp
or
scas
pop
mov
divb
mov
gs
mov
dec
pop
aaa
outsb
lods
xchg
xchg
nop
mov
xchg
xbegin
jo
adc
call
cld
xlat
xchg
sub
push
loop
dec
cmp
lods
dec
cmp
and
push
jge
movsb
data16
imul
and
mov
or
out
movsb
mov
lods
adc
or
imul
mov
iret
idivb
add
popa
iret
dec
and
pop
hlt
sub
call
jb
cmpsl
push
mov
fisubl
mulb
enter
jnp
xor
addr16
inc
clc
pop
movsl
jne,pn
sbb
fs
mov
and
jb
and
icebp
and
sbb
jle
sub
mov
rcrb
sbb
sub
test
xor
adc
fmull
std
dec
push
lds
lret
xchg
shr
dec
sarl
fwait
xchg
pop
movb
scas
clc
push
ret
push
xchg
pop
mov
fwait
push
xorb
add
jbe
lahf
add
mov
rol
outsb
ljmp
stos
pusha
scas
lods
mov
insl
xor
insb
lea
xchg
mov
aam
cmp
mov
shll
mov
cmpsl
mov
cli
lods
int
inc
lret
jo
es
out
pop
mov
push
ljmp
out
xor
ret
or
clc
out
jp
inc
and
jg
mov
and
out
scas
das
stos
lret
sbb
in
sbb
dec
shrb
inc
adc
mov
dec
mov
inc
push
popl
ljmp
cmp
fwait
inc
sub
push
xor
enter
dec
push
cmpsb
xor
push
adc
std
mov
test
out
cs
lods
mov
jmp
mov
push
ret
mov
pop
ficompl
push
daa
shr
test
nop
push
iret
ficoml
call
sbb
mov
sbb
inc
nop
out
test
and
pop
add
stos
daa
cmp
shll
xchg
cmpb
rcll
mov
mov
pop
adc
add
xchg
jns
jae
hlt
fadds
sub
dec
cmp
sbb
call
or
popf
insl
lret
pop
lcall
pushf
movsl
adc
mov
mov
inc
jle
or
imulb
test
or
push
aad
repz
in
ja
xchg
lods
and
lods
sbb
sbb
fcompl
jns
dec
cmc
fstpt
xchg
or
movsb
mov
sub
cmc
sbb
pop
std
sti
and
inc
jmp
cmpb
test
sbb
scas
mov
mov
outsb
jae
negb
inc
cmpsb
fsubrs
sub
aad
xchg
inc
icebp
dec
sbb
pusha
mov
adc
jg
xor
xchg
ret
addr16
call
test
aas
popf
sbb
xchg
sbb
sub
inc
adc
cmc
insb
or
adc
lret
sub
popf
add
scas
repz
scas
fsubrl
notl
mov
pusha
enter
scas
sub
xor
test
idivl
mov
or
push
pop
mov
adc
dec
inc
and
mov
push
dec
insb
sub
sub
jge
xor
repnz
xor
dec
jb
js
push
js
out
cmp
xchg
iret
into
cld
popl
outsl
adc
scas
sub
repz
mov
mov
ss
xlat
sbbb
and
sahf
stos
and
or
mov
pop
adc
outsb
jp
and
std
mov
add
scas
fisttpll
into
aaa
adc
in
inc
or
fwait
je
xor
dec
out
inc
and
leave
out
lcall
inc
dec
outsl
scas
lds
inc
outsb
or
out
jne
fsubl
push
fwait
sub
fdivrl
stos
mov
mov
pop
outsb
shr
pop
dec
push
out
insb
mov
add
sbb
sbbl
mov
mov
cmp
sub
sub
lods
rcrb
testb
sub
xchg
paddb
imul
imul
jle
insl
mov
les
loopne
stos
mov
push
cmp
notl
xchg
pop
scas
push
push
fcoml
sub
enter
nop
outsl
pop
pop
add
pusha
push
sbb
mov
inc
adc
or
or
cmp
ficoml
outsb
ljmp
dec
inc
mov
insb
in
push
sub
cmp
mov
mov
sbb
xor
mov
sti
cs
and
ljmp
push
pusha
pop
lret
inc
xchg
push
xlat
inc
jnp
popa
mov
fstl
mov
xor
test
pop
mov
cmpb
in
nop
ja
mov
sahf
pusha
scas
fwait
mov
dec
lods
call
fisttps
inc
das
inc
leave
daa
test
repnz
outsl
jecxz
shll
mov
push
aad
push
xor
xor
mov
rcll
dec
cmp
cli
adc
or
or
pop
insb
in
pop
push
sub
les
aad
je
fs
sti
sbb
iret
mov
push
xchg
divl
stc
je
sbb
dec
push
xor
into
neg
stos
lret
or
jmp
das
dec
fwait
rorl
rcll
fistps
fdivs
sub
mov
jns
and
fsubp
aam
mov
adc
push
sub
sub
into
out
add
sbb
and
popf
sub
push
xchg
test
shlb
pop
dec
push
cmp
test
lahf
sub
xor
lea
fwait
and
loop
push
rolb
jle
movsb
fdivl
xor
movsb
aam
mov
pushf
in
sbb
loop
in
sub
jp
sbb
inc
in
pusha
sbb
fcmovb
sti
lcall
lock
sbbb
fsubrl
dec
lods
test
cmpb
rclb
sbb
xor
movsl
dec
nop
sti
repz
cmp
faddl
cli
test
mov
mov
stos
cmp
inc
scas
cmp
bound
fnstcw
sub
shlb
sti
push
xchg
lea
icebp
xlat
xlat
int
and
jmp
cmp
lret
sbb
push
mov
ds
js
bound
lock
jnp
in
push
sub
mov
mov
ficompl
mov
int
mov
dec
cmpb
add
gs
mov
mov
insb
popa
out
into
mov
jb
jno
jle
js
sub
mov
dec
jecxz
jae
scas
xchg
dec
jno
movsl
mov
loopne
adc
lcall
jo
lcall
adc
icebp
shl
idivl
mov
mov
rcrl
leave
or
xor
out
xor
loopne
sarl
jmp
sbbb
subb
jne
loop
and
sbb
daa
shl
decb
jae
adc
test
add
pop
repnz
fs
mov
cmpsb
loope
inc
and
push
orl
dec
mov
insl
ffree
xor
or
mov
in
xchg
loope
enter
loope
xor
mov
jnp
shlb
sub
sub
shlb
int3
push
cld
mov
xor
xchg
sbb
loop
jae
jo
add
ds
mov
pop
out
imul
xchg
adc
iret
mov
aas
dec
lret
sti
jnp,pn
jge
and
das
jle
mov
stc
enter
xchg
mov
push
mov
inc
inc
lods
cld
loop
mov
jle
mov
xchg
fstps
jp
xchg
dec
sbb
adc
mov
jbe
cmp
or
pop
lea
xor
pop
mov
enter
lock
filds
sbb
push
jns
push
test
push
lods
sbb
xlat
xor
fldcw
gs
repz
cmp
nop
mov
addr16
shll
fadd
xchg
test
sub
loope
rclb
mov
adc
scas
aad
adc
aam
cmpsb
lea
sti
les
pop
xor
adc
loopne
inc
rorl
daa
out
testb
sbb
xor
push
mov
xchg
cs
jbe
and
bound
jge
inc
pop
xchg
sbbb
leave
pop
bound
clc
mov
jmp
sub
cmp
xorl
leave
pop
shrl
rclb
inc
xchg
int
mov
xor
mov
daa
push
xor
mov
inc
jne
fisubl
popf
test
enter
push
add
popf
out
jecxz
fnstenv
push
fsubrl
cmp
xor
mov
push
jp
ss
mov
jb
pop
fldt
inc
cld
push
int
push
or
test
cwtl
loope
out
int3
xchg
sbb
out
sub
inc
push
into
loope
gs
dec
or
xchg
pop
or
sahf
out
lea
jl
loopne
xchg
xchg
ja
dec
mov
mov
movsb
pop
movsl
mov
cltd
shlb
ss
lahf
and
out
mov
dec
scas
jnp
pop
xchg
scas
repz
jecxz
mov
mov
jmp
xchg
cmp
jns
fisttps
aad
xlat
pop
addr16
push
cmp
addr16
out
icebp
fstpl
fsub
sbb
out
push
cmpsb
hlt
je
xorl
ficoms
mov
xchg
or
ja
popf
xor
loope
fwait
stos
sub
cmp
push
cmc
aam
fdiv
lock
lods
aas
adc
cmpsl
fidivrs
jb
jb
jl
sub
in
sub
int3
pop
stos
popf
mov
lods
mov
xchg
adc
bound
add
xchg
wbinvd
sub
lods
mov
xchg
aam
mov
xlat
xchg
paddsb
fisttps
adcl
popf
inc
jo
xchg
pushf
ss
ss
push
in
xchg
dec
ljmp
dec
push
push
cmpsb
pop
ss
std
lret
fs
ret
cli
jno
adc
jno
mov
out
aam
into
fdiv
jp
pop
imull
sbb
xor
popa
inc
pop
jl
push
nop
out
icebp
movd
pop
xchg
fldenv
gs
inc
aad
test
repnz
call
push
call
or
das
out
shlb
inc
lret
sub
testl
pushf
adc
or
sbb
sbb
xor
test
in
xchg
inc
dec
insl
fcoms
scas
inc
cli
arpl
jg
inc
and
mov
loop
xchg
cmp
pop
fs
jb
shlb
mov
inc
call
int
dec
mov
jb
arpl
sub
mov
test
scas
pusha
push
out
sbb
push
ret
xor
mov
fdivl
push
repnz
lahf
arpl
stos
icebp
inc
and
scas
xor
push
lock
enter
lahf
mov
sbb
js
mov
iret
or
sbb
out
ret
mov
xor
daa
xor
push
out
jg
mov
mov
inc
stos
dec
ret
xchg
mov
sub
ss
adc
stos
cwtl
add
std
mov
repnz
sar
outsl
shlb
lds
mov
sbbl
stc
into
popf
inc
pop
fxch
clc
dec
rcrl
lcall
cli
cmp
outsb
push
ss
out
pop
clc
mov
jmp
sbb
mov
test
jne
mov
or
mov
std
inc
or
inc
sbb
push
loopne
cli
mov
or
dec
addb
dec
fiaddl
ds
cwtl
mov
lcall
popf
out
push
ret
call
call
cmp
divl
int3
imul
lods
out
shrd
arpl
cltd
mov
shll
popa
xchg
fwait
xchg
cmp
mov
and
mov
and
and
into
stos
fbld
mov
mov
pop
and
mov
adc
dec
sub
punpcklbw
pop
pusha
int
dec
sbbb
mov
sub
call
xor
lods
fwait
mov
repz
dec
push
or
and
lock
loopne
adc
fwait
push
ficompl
orl
add
roll
clc
fwait
cli
xchg
pop
push
mov
cwtl
mov
mov
popf
sbb
inc
rclb
rcll
and
movsl
cmp
xor
fdivs
js
filds
ds
mov
ds
scas
lods
jmp
rolb
ret
adc
js
movsl
push
cmp
decb
adc
sarl
out
pop
adc
rclb
cmp
mov
sub
cwtl
imul
lcall
and
dec
out
inc
sbb
adc
cwtl
xor
xchg
sahf
push
scas
fcomps
mov
jnp
xchg
arpl
pop
scas
push
push
xor
xor
shrl
fldcw
or
and
pop
lret
dec
and
sub
pop
mov
add
push
pop
cmp
test
xchg
xchg
jno
push
xor
adc
fldcw
popa
icebp
out
sbb
pop
outsb
dec
std
jne
stos
mov
out
pop
adc
push
cs
or
inc
jp
bound
add
xor
push
or
add
jle
sbb
and
mov
inc
mov
sub
call
push
pushf
arpl
adc
add
and
sbb
mov
scas
xchg
cmp
push
pop
push
imul
jp
push
mov
inc
cmpsb
stos
cmp
bound
jg
cwtl
es
cwtl
and
scas
insb
test
out
in
mov
xchg
sbb
das
test
icebp
vmovntps
loopne
adc
or
push
in
out
xchg
mov
inc
inc
and
xchg
adc
adc
adc
mov
testb
repz
outsl
outsb
or
inc
lahf
int
add
out
jg
aas
or
pop
repnz
and
mov
sti
and
sbb
jmp
and
inc
jl
mov
jle
pushf
cwtl
in
jmp
sub
cmc
clc
jae
popf
les
pop
pushf
outsb
mov
popf
data16
sbb
faddl
ret
push
push
cltd
and
jne
and
ljmp
jnp
pusha
ljmp
xchg
inc
mov
movsb
xchg
cli
or
push
in
ss
push
aas
mov
cli
sbb
jmp
in
stos
push
xchg
rolb
lret
push
call
jge
cld
cs
test
jle
fwait
insb
and
dec
push
mov
xchg
js
mov
loope
mov
pop
adc
push
lret
jmp
or
xchg
cmp
rol
in
mov
fbld
mov
lcall
ja
daa
int3
mov
inc
mov
push
mov
pop
xlat
push
cmpsb
pop
and
popa
sbb
in
pop
fucomp
push
fisttps
iret
adc
icebp
pop
xchg
jmp
test
pop
pop
ficomps
es
mov
add
addl
imul
inc
in
mov
ljmp
add
adc
or
pop
repnz
outsl
sbb
out
outsb
jno
int3
mov
xchg
scas
scas
mov
dec
add
insb
outsl
jle
loope
testl
shr
pop
loop
sub
sub
dec
xchg
push
rcrl
mov
jne
pop
cld
rolb
sub
mov
push
add
call
push
sub
mov
leave
pushf
jp
pop
jnp
adc
cmp
mov
sbb
or
test
mov
xchg
mov
fwait
loopne
push
es
inc
sub
testb
add
push
dec
push
imul
inc
and
test
xchg
mov
test
fstpl
add
mov
xchg
insb
push
lea
xor
loopne
dec
popa
lds
mov
loopne
mov
fwait
lock
mov
lret
add
xor
push
ss
in
jle
xchg
cmpsb
and
in
mov
gs
and
movsl
in
lds
and
es
jmp
cmpsl
lods
xchg
mov
jnp
dec
nopl
cli
in
aad
pop
ret
xchg
and
pop
sub
xor
inc
shrb
mov
push
adc
adc
aas
repnz
lcall
jg
pop
imul
into
leave
hlt
xchg
cmp
inc
dec
loop
imul
xchg
and
cmp
xor
repz
adc
sub
mov
not
and
sbb
or
mov
push
addr16
xchg
push
sbb
repz
in
adc
bound
push
push
mov
and
imul
inc
cmp
xor
mov
cwtl
jb
sub
dec
push
sbb
mov
icebp
cmp
adc
sbb
inc
addb
sbb
cmp
push
cmpl
insb
sbb
push
jl
rcrl
shlb
shll
or
test
sub
test
std
andb
addr16
cmp
pop
push
sub
loope
or
pop
xor
mov
dec
xchg
inc
add
cltd
aas
jo
sbb
rcrb
es
fnstsw
cwtl
js
les
mov
cmpsl
and
cmp
test
ret
push
xchg
dec
add
or
loope
cmpsb
pop
je
into
mov
jecxz
jns
clc
lods
int
pusha
dec
lret
push
and
cli
fistl
icebp
mov
ja
cmp
out
sbb
sbb
add
loope
sbb
nop
jmp
jge
cs
push
cmp
mov
push
rolb
int3
test
out
sbb
sbb
aaa
iret
dec
movsb
push
in
pop
lds
or
jl
push
rol
jle
jle
jle
cmp
stc
inc
mov
jbe
sbb
add
cmp
xchg
out
mov
mov
ret
movsb
aas
push
arpl
ret
adcl
xor
aam
enter
add
out
pop
stc
inc
xor
int
repz
jbe
jp
add
dec
mov
mov
adc
iret
mov
sub
frstor
push
and
stos
pusha
int3
idivb
xchg
or
es
cmpsb
sbb
xor
stos
clc
pop
ds
stos
or
insb
jmp
idivl
mov
loop
jp
jmp
inc
in
cmp
sub
dec
jl
mov
mov
sbb
fistps
lds
jecxz
iret
and
dec
and
mov
jbe
shlb
jmp
popa
sbb
int3
push
iret
ficoml
sbb
mov
pop
sub
insb
or
test
cltd
push
loopne
xor
xchg
sub
stos
pop
jnp
inc
mov
push
rcll
xor
add
test
into
mov
sub
cmp
xchg
jge
jo
js
mov
shrb
in
or
lcall
cmc
xor
mov
xchg
sbb
xchg
and
icebp
dec
pop
jl
mov
xor
xchg
aaa
hlt
cwtl
mov
imul
adc
loopne
pop
out
es
push
pop
fsubs
push
push
mov
ljmp
sti
stos
push
mov
mov
mov
sahf
rol
or
fwait
sub
outsl
insl
mov
sbbb
enter
test
test
dec
xchg
adc
test
mov
mov
imul
pop
jge
and
in
mov
lret
xchg
fucom
add
in
and
repnz
pop
cmp
sub
xchg
jb
dec
jge
pop
jecxz
xchg
push
sub
lahf
out
pusha
dec
lahf
lds
rol
icebp
lahf
mov
adc
jno
or
out
sti
fistpl
and
stos
icebp
push
xor
frstor
or
hlt
sahf
jecxz
or
in
sbb
roll
popa
out
dec
push
fldt
int3
dec
xor
scas
adc
push
adcl
nop
inc
push
mov
adcb
inc
outsb
cmc
xchg
test
mov
fwait
fwait
test
mov
inc
add
sub
push
mov
add
mov
mov
inc
lret
push
shrl
popf
mov
rclb
jge
bnd
shll
adc
jno
popf
pop
inc
lret
add
cmp
sarb
imul
mov
jnp
mull
mov
cld
mov
add
imul
push
push
in
out
pop
insb
fwait
enter
jl
je
mov
rclb
adc
clc
in
imul
xchg
xor
or
fcomps
xor
test
sub
sub
aam
dec
div
push
lods
inc
mov
push
xchg
dec
int
mov
clc
cwtl
mov
dec
rolb
xor
push
pop
stos
clc
jne
out
call
or
sbb
fmull
push
in
cmc
rorl
cmp
ret
mov
jne
sti
shlb
pop
lahf
jno
dec
fadds
test
test
ljmp
lahf
mov
fidivl
adc
push
pop
pop
and
enter
insb
sbb
jnp
negb
pop
mov
fdivs
bound
shl
and
cmp
add
arpl
push
lods
mov
mov
inc
xchg
jno
adc
in
push
sti
and
loop
xor
add
mov
jae
idivb
pop
pop
add
add
push
popf
pop
jl
fldenv
pop
mov
std
add
push
inc
mov
cmp
std
cmp
fsubr
bnd
and
lret
push
pop
xor
add
cmc
shll
incb
or
mov
sahf
push
imul
pop
xorl
adc
cli
mov
mov
lret
and
imul
xor
xchg
cmpsl
cs
pop
xchg
or
nop
pop
mov
cmpsl
dec
aad
call
fsubl
in
lods
cmovo
shll
cmpsb
mov
into
mov
cmp
cmc
jnp
aas
and
sbb
lret
cmp
cld
add
jbe
push
popa
fs
popa
push
adc
das
lret
sub
mov
cmpsb
pushf
mov
dec
mov
fidivl
loope
lods
ret
sti
dec
cli
inc
jge
mov
pop
jbe
xchg
xchg
mov
inc
fs
xchg
jmp
cmp
and
mov
fadd
rolb
push
jae
movsb
pop
loop
sti
xlat
push
cmc
movsb
push
xor
movb
cmp
addr16
inc
testb
lock
scas
sti
or
inc
js
daa
mov
jge
cltd
jp
sbb
in
cld
lods
pop
mov
adc
add
in
out
stos
cld
ljmp
les
dec
mov
addr16
enter
xchg
jne
mov
cmp
and
insl
cmp
enter
lahf
jmp
mov
pop
js
dec
add
movsb
sbb
fs
loope
in
stos
adc
xchg
xchg
clts
sbb
push
cmp
mov
inc
fnstcw
mov
divb
inc
inc
nop
mov
sub
lret
pop
inc
ret
cs
dec
fcmovnbe
xchg
xor
push
inc
or
lret
xchg
mov
dec
inc
notl
adc
pop
inc
or
iret
pusha
pusha
xchg
test
loopne
fsubrp
inc
int
out
inc
jecxz
lahf
pop
adc
xlat
lods
push
iret
push
cmpsb
or
pop
add
inc
push
in
fmul
adcl
mov
and
add
and
insb
push
stos
testb
mov
xor
lret
sub
insb
int3
sbb
or
xchg
fcmovne
and
clc
jnp
loop
fwait
inc
lret
out
dec
cmp
stc
addr16
movsb
rcl
daa
inc
ret
xor
test
xchg
xlat
mov
mov
xor
mov
in
rcll
mov
data16
jge
adc
adc
xchg
or
fldcw
and
mov
xchg
jle
pop
iret
mov
xor
lret
inc
in
sbb
dec
mov
xchg
test
fcoms
adc
push
test
int3
xlat
mov
jmp
mov
mov
pop
push
into
call
pop
jns
mov
or
push
inc
data16
jo
rcrl
imul
test
dec
mov
mov
mov
pop
push
jmp
pushf
jno
push
mov
mov
iret
dec
filds
jl
inc
jb
repnz
mov
aam
mov
sbb
aad
mov
outsb
nop
mov
stos
insb
and
pop
cmc
lret
pop
cmp
pop
ja
adc
and
cmp
cmp
decb
adc
mov
pop
pop
in
movl
lret
ljmp
shr
mov
add
sbb
mov
inc
out
es
xor
push
pop
fistl
push
mov
push
cltd
enter
in
add
push
mov
jo
std
sub
sarb
test
out
lret
mov
and
mov
cwtl
xchg
lahf
jae
mov
mov
xor
mov
xchg
mov
jbe
outsl
gs
insl
outsl
add
sti
in
rcll
inc
mov
mov
sub
jl
xchg
push
shlb
je
sbb
aad
push
jmp
lock
sahf
cs
and
mov
jne
lods
and
ljmp
es
push
insb
push
sub
lcall
push
mov
stos
fcmovu
decb
test
cld
lods
addb
add
dec
inc
fnstenv
fmul
shll
mov
inc
push
xor
jbe
mov
aaa
add
sti
hlt
xchg
lahf
cmpsb
shrl
enter
mov
add
cld
and
stos
xor
loop
jne
sbb
adc
mov
jge
test
std
out
inc
push
and
jae
dec
xchg
scas
cmp
jo
adc
mov
or
std
loopne
fcmovne
into
inc
movsb
filds
aas
inc
gs
adc
mov
mov
pusha
fstl
cmp
pop
cmpb
push
pop
jecxz
shll
lahf
movsb
jno
jae
mov
inc
imul
inc
xor
mov
roll
insb
dec
or
mov
mov
sub
roll
mov
out
dec
and
jo
into
adc
mov
cmc
jmp
push
mov
pop
stos
ds
xchg
xchg
add
inc
cltd
xchg
cmp
xorb
jno
rclb
scas
in
mov
jl
add
js
orl
cmc
in
and
popa
mov
dec
mov
sub
test
scas
rclb
and
sub
call
adc
sarl
mov
lahf
sbb
enter
jns
xchg
dec
leave
ljmp
push
adc
aad
andb
ljmp
ds
cmp
js
daa
loopne
inc
xchg
push
mov
repz
mov
cmpb
int3
fcoml
push
mul
outsb
inc
call
jmp
pop
stos
lock
popa
push
aam
into
vmulpd
hlt
mov
pop
loop
bound
stos
and
inc
jb
or
in
and
or
mov
stos
push
lods
jns
push
dec
pop
push
add
adc
jp
notl
jge
clc
mov
nop
test
fdivs
pop
cltd
pop
mov
arpl
cmp
mov
sahf
pop
fldl
push
loopne
adc
movsl
xor
mov
mov
mulb
je
cmpsl
mov
pop
pop
or
adc
mov
enter
xor
ja
xor
pop
fildll
es
lods
push
add
je
pop
cmc
push
popa
mov
mov
fsts
stc
movl
mov
xchg
subl
xlat
cmp
leave
clc
int
cmp
jge
in
shlb
mov
push
xchg
clc
jae
dec
mov
test
aas
scas
test
fs
xchg
inc
popa
sub
xlat
push
cmp
or
aam
inc
jmp
push
outsl
mov
mov
jne
inc
ficomps
and
clc
mov
daa
mov
sbb
icebp
push
xor
leave
sarl
push
outsl
cmpl
packuswb
shrb
adc
jne
lret
mov
hlt
pop
pusha
mov
sub
sbb
dec
scas
xor
adc
dec
scas
cld
stos
std
mov
enter
scas
pusha
popa
sub
negl
mov
push
jae
std
xor
in
add
popf
fbld
aad
push
mov
mul
loope
or
sbb
inc
push
aaa
les
xchg
icebp
cs
aas
dec
push
sub
mov
test
push
xor
and
mov
lret
test
das
pop
les
test
test
out
lret
fcomps
pop
add
nop
in
dec
dec
lret
xor
pop
enter
arpl
iret
pusha
adc
movsb
cmp
sbb
test
xor
cwtl
fistpl
mov
dec
les
push
mov
jle
inc
pop
lock
and
dec
add
push
mov
jle
and
adc
into
mov
adc
rcrb
mov
stos
hlt
jle
scas
lea
out
xchg
test
rcr
add
jb
add
cld
sbb
nop
push
daa
cmpb
xor
pusha
add
fisubs
scas
shlb
cld
fwait
sbb
lods
xchg
sbb
fiaddl
jns
xchg
xchg
mov
and
pop
lret
xchg
sub
fwait
jp
cmp
into
xor
push
xor
adc
xlat
lcall
test
pusha
cmpsl
sub
bnd
inc
sbb
mov
addr16
and
roll
xor
call
vshufps
xor
ficoms
mov
popa
or
mov
cltd
loop
shl
decl
pop
fs
jbe
movsl
aaa
push
cmp
aaa
mov
cmp
leave
call
orb
xor
add
xor
xchg
xchg
mov
mov
ret
mov
cmp
dec
push
inc
mov
dec
pop
mov
bound
ficompl
sti
adc
insb
ja
repnz
mov
mov
jle
mov
push
sbb
sub
push
ljmp
outsl
imull
xchg
mov
andl
jnp
insl
mov
jecxz
sub
inc
iret
mov
sti
mov
out
jp
mov
ja
stos
cld
dec
lret
push
mov
mov
fbstp
mov
pop
push
std
aam
insl
lahf
loope
stc
es
out
scas
mov
cwtl
aam
jnp
pop
int3
adc
push
inc
sub
push
mov
xor
jo
cmp
dec
mov
das
mov
fisubl
data16
in
fcomps
adc
cmp
aas
xchg
lds
lock
xor
push
xor
mov
dec
dec
cld
xchg
fdivl
or
add
adc
enter
sbb
jae
dec
test
add
jb
mov
aaa
pusha
add
mov
test
xor
in
xor
jno
sbbl
imul
aas
pushf
xchg
movsb
mov
cmp
push
add
loopne
ja
mov
pop
ret
jcxz
inc
ja
or
lcall
ds
mov
scas
cmc
lahf
lds
lds
movsl
mov
or
rcl
aas
lock
jns
xor
test
sub
mov
mov
cld
add
je
inc
xchg
or
sbbl
stos
adc
mov
fs
push
push
ds
pop
jbe
out
push
adc
push
out
nop
adc
popf
lock
sahf
ss
test
mov
fsubl
mov
je
adc
xor
push
push
aaa
fwait
add
pop
xor
insl
or
test
jae
jle
xchg
push
dec
push
cwtl
push
mov
sbb
push
out
add
sub
ja
jae
sub
std
add
jo
push
es
std
sub
jmp
xlat
xchg
mov
mov
rorl
insb
adc
pop
jnp
enter
add
orb
clc
ffreep
lock
shll
inc
mov
push
pop
push
ljmp
icebp
inc
out
mov
jge
pop
dec
ret
xor
sti
out
mov
mov
je
cmp
daa
add
lahf
add
dec
add
mov
dec
adc
lret
inc
pop
dec
out
add
inc
pushf
cmpsb
jbe
fs
push
dec
push
jl
and
iret
xchg
xchg
push
stos
mov
mov
clc
xor
subl
loope
call
cmp
je
pop
scas
mov
in
out
fcompl
div
cmp
adcl
sub
push
into
mov
xor
pop
fwait
lea
dec
xchg
cltd
call
jns
enter
nop
mov
enter
push
dec
or
cmp
jmp
cltd
aad
xchg
fs
add
lahf
fucomi
dec
inc
push
add
add
add
add
xchg
arpl
adc
aaa
iret
xor
jmp
sbb
loopne
loop
je
dec
push
jecxz
xchg
dec
xor
push
jmp
lret
pop
mov
inc
aam
subw
fwait
sub
mov
dec
push
les
xchg
or
xor
adc
jle
rclb
sbb
xchg
adc
andb
popa
mov
subb
dec
out
inc
out
sbb
lea
ja
add
xor
cmp
cwtl
sbb
adc
fs
cmp
data16
popf
xchg
xchg
scas
in
push
dec
inc
sub
sbb
sarl
push
cli
mov
aad
dec
cli
xor
ret
push
orl
mov
mov
fildll
imul
sub
dec
arpl
pop
mov
test
mov
mul
and
pop
sarl
mov
fidivs
add
pop
sahf
aaa
je
imul
mov
xor
sti
inc
int3
outsb
daa
lahf
loope
movsb
cmp
stos
push
inc
sbb
adc
jg
pop
push
lea
adc
daa
adc
rcrb
ret
xchg
pusha
shrb
or
mov
dec
mov
pop
dec
add
out
fldenv
cmpsl
notl
cmp
sbb
subl
rorb
movsb
mov
and
fildl
pop
bound
sbb
pop
jmp
xchg
test
out
jp
and
mov
das
mov
iret
xor
mov
cmp
dec
sub
sub
ret
sarl
mov
lcall
mov
mov
arpl
inc
icebp
imul
fbld
dec
jo
je
mov
or
stc
push
push
aas
mov
sbb
fisttpl
dec
xor
sub
cmp
and
cmc
mov
or
jmp
test
add
iret
popa
jns
mov
call
mov
push
pop
jge
imul
nop
ja
push
ret
cmp
xchg
pop
mov
fdivrs
cmpsl
pusha
fisttps
push
xor
in
add
icebp
fwait
xchg
inc
and
mov
aam
sar
mov
enter
ret
out
pusha
jle
test
mov
and
sub
sarl
mov
jge
repz
mov
test
xchg
mov
stos
insl
jmp
xchg
ret
or
xchg
rcll
jmp
in
inc
cli
mov
sub
call
add
dec
sub
sub
aaa
cld
les
addr16
sbb
orl
inc
jp
and
cmc
lret
into
jns
pop
mov
jno
cmp
lods
lock
hlt
jno
pop
hlt
cwtl
std
mov
add
jne
mov
and
sub
neg
lods
pop
inc
xchg
sub
ljmp
adc
or
into
jo
fsubr
mov
icebp
pop
push
das
mov
inc
dec
fmull
mov
aam
addb
push
dec
icebp
lds
bound
xchg
push
push
or
mov
push
fistpl
scas
and
pop
mov
cmp
cmc
add
pop
mov
je
sbb
mov
inc
cmp
mov
or
orb
les
and
mov
repz
js
lret
cmp
insl
das
test
xor
gs
insl
adc
into
jge
mov
mov
std
jp
jmp
adcb
adc
sti
bound
dec
out
and
je
push
jmp
push
aas
and
mov
push
mov
and
add
sbb
xor
mov
xchg
loop
mov
jnp
aas
and
divb
jle
xchg
subl
mov
lahf
enter
out
loope
pop
aad
push
mov
cmp
repnz
push
fisubrl
add
out
and
mov
fmulp
xor
aam
sbb
push
fstpt
jae
lret
mov
or
or
enter
mov
fsubrs
mov
xchg
push
dec
push
inc
int3
pop
or
mov
cli
push
cmp
cwtl
stos
cmpsb
jge
or
mov
lcall
mov
cmpsb
dec
jae
addr16
cmp
jp
jne
push
dec
and
out
pop
mov
jne
clts
mov
movsl
cs
fwait
xchg
and
fs
mov
mov
jnp
cltd
push
sub
dec
mov
fucomi
icebp
xchg
add
jle
push
cmp
in
ja
repz
loop
mov
fstpt
sahf
mov
rolb
jl
mov
mov
xchg
call
cwtl
ret
mov
call
insb
sahf
jl
mov
push
inc
adc
jae
out
xor
jns
jb
leave
fmul
mov
cmp
sbb
imul
popa
ljmp
or
stos
pop
push
dec
test
push
push
mov
popa
in
and
pop
lret
loope
xor
xor
enter
mov
mov
mov
stos
xor
leave
scas
xchg
inc
rcr
stos
cmp
mov
stos
add
test
fistl
cmpsl
out
sti
pop
into
pop
cmpl
lds
sub
int
inc
std
push
sbb
and
sub
jns
ret
cmp
jb
test
mov
ss
push
test
shrb
jb
jle
jecxz
xchg
xchg
cld
daa
ret
or
and
insl
mov
push
leave
push
cmc
mov
mov
fadd
pop
dec
dec
push
in
or
xlat
fdivs
sub
out
into
cli
fistpll
ja
cltd
ret
sub
and
rclb
rorb
push
int3
sub
sub
sub
mov
dec
push
movsb
call
inc
push
cmp
sbb
ror
lods
cmpsb
fstpt
movsl
lods
test
testb
inc
pop
movsl
orl
cld
dec
out
and
int
or
ror
add
jns
movb
in
adc
xorl
or
int3
mov
gs
xchg
mov
or
pop
or
nop
adc
in
mov
jne
ds
daa
push
jp
cmp
dec
cmp
mov
ljmp
and
test
roll
add
add
push
js
push
cmpsb
jns
les
cmpsl
movsb
shll
loope
or
bound
dec
pushf
loopne
pop
mov
adc
dec
add
cmpsb
fildll
inc
adc
loope
or
addl
jne
js
xchg
sbb
insl
push
sbb
push
xchg
in
adc
or
jae
add
cmp
jl
push
pop
sub
mov
push
push
ja
mov
fidivrs
sbb
jno
dec
cmp
sbb
inc
push
add
adc
out
dec
adc
loope
shlb
pop
pop
repz
mov
sub
mov
and
push
in
sub
xor
leave
outsb
cmp
or
les
inc
lret
popf
xor
push
rorb
movsb
mov
shrb
or
lock
mov
pop
mov
cmp
pop
sahf
mov
sub
pop
loop
aaa
mov
push
or
xor
inc
sub
inc
or
mov
cmovge
lahf
cmp
push
ss
and
in
test
xchg
adc
mov
dec
adc
xor
xchg
lock
in
loop
dec
push
mov
ljmp
ljmp
cld
repnz
pop
pop
xchg
xchg
into
pushf
xchg
clc
loope
mov
cltd
push
mov
mov
into
add
popa
fsubrl
add
imul
mov
inc
test
fwait
adc
dec
shlb
into
test
jae
lea
pusha
arpl
sbb
fadds
mov
fstpl
xchg
fsubr
sbb
push
popa
repz
test
mov
aam
or
mov
sarl
scas
shlb
add
push
test
xchg
leave
xor
jbe
mov
jp
and
inc
clc
sbb
add
lock
sti
add
nop
rolb
in
sbb
mov
inc
ret
jg
into
test
push
int
cmpsb
sub
imul
mov
hlt
out
mov
xor
repnz
out
cwtl
loope
movsl
stos
add
imul
imul
enter
iret
lret
inc
outsl
cwtl
mov
and
cmpsb
arpl
nop
adc
mov
das
lea
int3
inc
subl
xchg
or
inc
pop
popf
stos
xchg
fisttps
and
dec
cmp
xor
rcr
stc
dec
or
push
rcr
mov
fwait
jbe
bound
movsl
shrl
shrl
out
mov
daa
es
das
sub
repz
adc
mov
jno
mov
xor
sub
stos
xchg
repz
ja
or
cmp
mov
pop
inc
push
or
es
push
ret
pop
in
jg
sub
mov
les
lock
dec
sub
rclb
inc
imul
addl
or
std
iret
ss
xchg
inc
push
adcb
out
push
dec
push
push
sbb
imul
imul
or
fsub
xor
or
lret
push
cs
dec
dec
xchg
mov
mov
cmp
dec
jne
jns
pop
push
aaa
inc
sbb
jl
mov
and
shrl
je
sub
xor
in
xor
gs
in
jns
js
mov
push
aaa
and
mov
mov
mov
adc
sti
pop
imul
into
mov
aad
pop
sub
add
arpl
xlat
popa
addr16
push
cmp
gs
and
addr16
mov
push
jb
test
pop
jp
lcall
xchg
out
sbb
adc
outsl
mov
dec
sbb
jns
aaa
xor
cmp
mov
push
add
push
out
inc
lods
mov
jg
shlb
shll
mov
or
xor
cmp
shr
add
mov
jno
loopne
cmc
ds
ljmp
pusha
or
loop
xchg
inc
adc
daa
mov
in
lcall
jo
xlat
fcoml
fwait
sahf
stos
xchg
call
inc
lret
sarl
call
dec
rol
movsb
push
add
pop
fsub
pop
notl
sbb
add
scas
inc
enter
jns
cmpsb
aam
jg
out
inc
mov
aas
sbb
repz
jmp
je
into
cld
xchg
push
sbb
jge
rclb
ret
rcl
dec
scas
ret
push
test
sbb
and
jnp
mov
les
cwtl
loope
aam
inc
fsts
movsl
cli
xchg
add
pop
xor
jecxz
notl
add
mov
cmp
or
push
andl
inc
and
arpl
push
test
inc
lock
int
jbe
sub
in
pop
jl
xchg
out
pop
adc
imul
fsubr
clc
cmp
shll
push
inc
aaa
call
add
clc
or
add
fndisi(8087
sahf
lods
arpl
inc
push
cwtl
adcb
push
xchg
lods
adc
icebp
cmp
mov
push
jmp
and
daa
fldenv
pop
dec
pusha
pop
jmp
jbe
push
and
mov
inc
add
fsubrp
xchg
shlb
repnz
cmp
aad
fwait
aaa
movsl
jb
fwait
ss
add
xchg
push
fimull
in
mov
jl
inc
dec
or
mov
xchg
xchg
jp
lcall
out
or
out
pop
iret
cwtl
cwtl
inc
mov
push
fs
lret
inc
push
sub
test
arpl
outsb
push
incl
test
out
mov
push
orb
cmpsb
out
lret
adc
jl
ss
mov
sub
mov
xchg
inc
bound
sbb
or
sahf
int
mov
jle
xlat
mov
and
pop
cmp
call
clc
out
loop
hlt
out
add
mull
lods
inc
add
pop
cmp
mov
shrb
mov
popf
adc
lahf
in
adc
push
cs
xor
fcomp
push
sbb
test
rcl
or
imul
xchg
sbb
mov
lcall
mov
pop
inc
cmpsl
or
fsubrs
adc
lcall
push
repz
out
push
lds
es
sub
cli
adc
push
sbb
xchg
into
xor
sbb
mov
add
sbb
repz
jne
adc
es
push
loop
cs
out
sbb
push
inc
cmp
sahf
sub
in
pop
xchg
shlb
imul
dec
inc
pop
push
shl
mov
jge
sub
push
pop
cmp
shll
xchg
sub
dec
ds
xchg
inc
add
repz
das
jge
xor
push
cmp
adc
cmp
xor
jge
rcl
sub
pop
push
mov
shlb
in
push
xor
jl
cmp
jle
je
sahf
rcll
bnd
push
mov
icebp
cld
cmpsb
pop
inc
adc
les
mov
aas
imul
in
mov
sub
sub
pop
adc
bsr
imul
test
inc
insb
lahf
pop
mov
out
mov
enter
clc
into
pop
push
cli
pop
dec
pop
jno
jecxz
xchg
inc
cmp
nop
adc
insl
mov
xchg
cmp
mov
mov
shr
jl
xchg
or
mov
scas
mov
daa
add
xor
pop
xor
insb
shlb
xchg
xor
mov
add
int
cld
xor
mov
hlt
jecxz
addr16
mov
mov
dec
push
clc
mov
jecxz
lds
in
pop
xor
in
pop
scas
jle
sub
mov
rcrb
pop
jle
mov
mov
popa
mov
fnstsw
push
test
inc
into
sub
fwait
lock
mov
jnp
mov
and
lods
lret
jp
mov
add
jp
enter
adc
push
push
xchg
daa
loop
cmp
cwtl
ds
mov
or
leave
pop
push
sub
in
mov
xchg
icebp
sub
movsb
pop
int3
mov
ret
fmulp
lret
ror
mov
jno
lret
sahf
inc
dec
or
push
pop
mov
mov
lock
leave
mov
outsl
shrb
sbbb
sti
fidivl
inc
mov
pop
jmp
nop
xor
add
mov
mov
aaa
outsl
sbb
fstpt
pop
inc
lea
out
sbb
push
mov
aam
orb
inc
fdivs
cltd
mov
mov
dec
add
dec
pop
stc
fists
push
mov
loopne
pushf
sbb
jae
insl
cmp
and
gs
aad
sub
mov
loope
inc
mov
cmc
stos
jb
add
sub
mov
pusha
mov
xor
ret
sbb
fistpll
enter
popa
xchg
mov
pop
addr16
mov
xlat
sti
out
xor
in
in
add
push
pop
jnp
pop
mov
sbb
inc
loop
popf
mov
mov
cmpsl
movsl
mov
subl
test
cmp
cltd
popf
pusha
sbb
std
push
cmp
push
inc
test
sarb
mov
rcl
frstor
push
pop
mov
mov
sar
ss
imul
test
sbb
pop
mov
xor
jns
pop
push
cmovg
mov
xor
iretw
lcall
adc
sub
aas
fsubrl
mov
lods
mov
lea
inc
cmp
call
jmp
aaa
sub
je,pn
and
adc
cmp
into
cmc
popf
rcrb
pop
gs
fsubr
xchg
mov
cmp
ret
das
out
inc
adc
xchg
dec
jg
insb
cmp
xchg
mov
sub
xchg
es
sub
xchg
add
sbb
mov
cmc
aad
out
ss
sub
mov
inc
cmp
lret
push
test
jg
inc
push
lahf
xchg
das
jge
into
adc
cld
int3
popf
fstpl
sub
mov
stos
cmp
sub
inc
fidivl
dec
in
cmp
push
mov
lea
insl
jo
xor
dec
rep
mov
lcall
mov
or
lret
jl
repz
nop
push
dec
es
jb
mov
gs
std
popa
xchg
adc
cmc
insl
out
sbb
fsubrp
sar
mov
lret
les
push
mov
fwait
shlb
inc
jl
test
sbb
adc
mov
sub
outsl
les
mov
dec
or
ljmp
test
cmp
cld
cmpsb
mov
sub
and
cmc
mov
sub
xchg
pop
sub
or
ds
xchg
mov
popa
repz
lahf
dec
sbb
inc
sbb
dec
xor
lock
out
dec
mov
imull
aaa
lods
in
and
lods
pop
pop
inc
loop
mov
test
xchg
popf
cmc
sbb
push
adc
je
xchg
push
shr
wrmsr
adc
js
insb
dec
add
iret
cli
faddl
push
jl
mov
jo
or
add
mov
cmpb
adc
jns
pop
fsubrs
mov
dec
pop
jnp
cli
imul
inc
scas
or
dec
daa
xchg
outsb
mov
push
pop
mov
xchg
inc
adc
push
or
sbb
insb
add
popa
mov
sbb
int
pop
and
scas
insl
or
and
int
xor
ret
les
sbb
fcompl
repz
xor
aas
cli
inc
mov
sbbb
inc
lahf
jne
jns
rcll
sub
std
lods
and
dec
das
mov
sub
mov
jno
es
pusha
pop
repnz
cmpb
faddl
insl
int
cmp
sub
and
pushf
scas
and
add
xor
inc
jg
test
icebp
rcr
jne
mov
mov
inc
xor
rorl
mov
aam
lcall
fildl
jle
pop
jnp
jmp
test
into
jl
xor
and
inc
std
xor
sub
jae
mov
mov
push
jb
clc
sbb
mov
in
xor
xchg
lea
adc
mov
out
in
lahf
lea
les
push
out
add
cmpsl
sti
stc
mov
icebp
or
mov
push
scas
out
repnz
mov
lods
add
jecxz
rorl
pop
xor
fistpl
mov
push
mov
and
mov
mov
jno
test
push
jle
jmp
xchg
enter
scas
data16
cmp
xchg
std
adc
adc
push
mov
popa
xchg
jge
lds
dec
std
mov
fs
sarl
js
js
mov
pop
pop
cmp
cmc
inc
push
sbbl
subl
xor
sbbb
sbb
xchg
into
idivb
mov
dec
mov
push
insb
mov
push
out
inc
stos
aam
ja
es
mov
inc
sub
jno
out
insb
stos
sub
xor
iret
cmpsb
inc
xchg
push
or
movsl
ds
sbb
insb
dec
fmull
movsb
mov
sti
cs
push
decb
push
lods
inc
jne
mov
movsl
pop
rcr
mov
int
cmp
sti
ss
stc
fldl
mov
mov
add
clc
pop
popf
or
lods
push
aad
cmp
mov
inc
fwait
fs
outsb
inc
jb
lods
stos
test
push
xor
xchg
sbb
pop
push
jl
mov
jbe
xor
ja
iret
out
test
xor
sbb
push
aas
imul
adc
es
mov
and
mov
jecxz
cmp
jge
push
dec
lods
pop
push
test
arpl
ret
mov
or
pop
mov
xchg
cld
xor
sahf
or
ret
sub
dec
hlt
jno
dec
xor
into
cmc
jmp
fcoml
adc
stc
add
in
mov
cmp
mov
mov
inc
push
inc
je
or
aam
mov
aam
arpl
in
sbb
xor
and
cmpsl
mov
mov
fbld
cmc
aam
dec
jmp
push
jmp
xchg
jnp
jno
pop
test
lahf
dec
mov
dec
nop
hlt
fcomi
outsb
dec
std
add
sub
mov
es
fimull
or
xchg
std
fs
push
mov
jmp
fldt
lock
push
ret
out
lea
mov
pop
pop
dec
or
cli
mov
dec
jae
gs
adc
sub
xor
inc
and
hlt
pop
mov
jno
fs
add
fs
xchg
hlt
fldcw
and
lret
and
cmpb
cmpb
mov
sub
divl
xchg
mov
xchg
jae
lods
xchg
mov
iret
insb
ret
addl
adc
adc
das
sbb
daa
cmp
lods
in
adcl
pop
mov
aam
je
or
adc
mov
xchg
cwtl
andl
movsb
test
test
add
es
test
jns
cmc
xor
in
fistpll
mov
aad
aaa
std
and
out
pop
jmp
call
push
cmc
cld
pusha
fsts
lods
mov
lahf
das
ret
push
pop
xor
mov
mov
xor
adc
movsb
enter
mov
jne
sub
push
orl
pop
ret
cmp
outsl
ret
shr
add
test
mov
aaa
jge
stos
push
and
xor
mov
mov
xchg
pushf
and
mov
xchg
inc
fbld
push
mov
xchg
cmp
mov
dec
sub
lds
jo
out
call
or
mov
sub
push
ficomps
push
xor
into
pop
mov
push
loopne
repz
aam
outsl
cwtl
scas
mov
adc
scas
add
jecxz
cmpsl
fidivl
fisttpll
call
mov
je
imul
push
movsl
adc
fidivrs
push
scas
mov
xor
popa
pop
jecxz
mov
xor
adc
imul
cmpl
or
add
movsb
jmp
sbb
lret
xor
pop
cwtl
mov
mov
ljmp
dec
data16
add
int3
sbb
sbb
call
dec
and
xlat
cmpsb
mov
dec
and
into
enter
fstl
sub
or
add
sbb
scas
sbb
jle
adc
dec
cs
jg
stos
scas
mov
cmp
popf
jge
cld
jmp
adc
movsl
out
dec
cld
pushf
xchg
pop
jmp
mov
xchg
pop
shl
pop
pop
pusha
stos
dec
sbb
into
push
xor
inc
mov
out
or
add
xchg
mov
mov
fs
lea
sub
stos
inc
adc
cmp
hlt
fisttpl
mov
cs
or
sub
sbb
rcrl
dec
ss
fisubrs
mov
push
sbb
daa
and
insb
in
mov
aam
pop
push
jl
add
dec
sbb
mov
push
test
pop
mov
cwtl
fildll
xor
xchg
aad
cmp
lea
dec
fwait
lret
and
mov
jp
push
pusha
push
cli
mov
adc
sti
pusha
dec
mov
mov
adcb
int3
hlt
loop
and
shlb
arpl
cmc
test
inc
das
fnsave
mov
hlt
mov
out
pushf
dec
jno
insb
adc
daa
inc
push
stc
mov
in
xchg
pop
pop
and
and
push
lahf
xlat
repnz
call
stos
ljmp
clc
dec
imul
mov
fistpll
lea
mov
mov
dec
push
dec
es
enter
and
mov
out
cltd
and
mov
push
sub
popf
mov
dec
mov
push
lock
std
push
and
inc
xchg
clc
sub
mov
mov
lods
out
insl
pusha
lods
scas
pop
push
loopne
loope
clc
lds
clc
mov
jmp
pop
repnz
mov
outsl
mov
scas
ds
push
stc
popf
js
cmp
mov
mov
cld
andb
mov
add
cs
lret
inc
xchg
xor
ffreep
cmpsl
dec
es
add
ss
ss
test
jns
sbb
mov
dec
daa
sbb
inc
fstps
sahf
push
fwait
pop
or
mov
xchg
mov
les
shrb
data16
sti
loopne
or
lods
jno
in
addr16
inc
outsl
into
into
leave
inc
in
ret
lds
cmp
sbb
enter
jmp
cmpsl
push
mov
adc
lea
imul
lods
lret
call
mov
mov
add
or
mov
push
repnz
dec
sub
inc
add
mov
fstpl
movsb
cltd
mov
enter
mov
icebp
sub
push
inc
add
std
hlt
mov
pop
orb
sbb
insb
ret
cmp
shrb
stos
mov
movsl
dec
gs
mull
nop
sub
lock
push
add
mov
mov
dec
stc
jo
sub
aas
cmp
jbe
inc
lock
pushf
mov
mov
adc
gs
push
cmp
push
mov
cmp
aad
addr16
ljmp
dec
js
jb
addl
test
fcomps
iret
mov
daa
jmp
ljmp
push
scas
lds
lock
or
cmp
mov
jns
adc
sti
cmp
mov
pop
sub
shrl
mov
or
mov
push
sub
mov
testl
mov
push
loop
dec
cli
out
in
sbb
cmp
cmp
scas
inc
in
inc
push
push
xor
mov
xor
and
gs
xor
xchg
xor
test
pop
push
xor
outsb
pop
jp
xor
mov
mov
js
les
mov
xchg
xlat
scas
xadd
sub
aad
pop
push
ss
cld
je
push
subb
jl
xchg
jmp
pop
and
stos
das
gs
jo
or
xor
mov
cmp
xor
xor
lds
stos
and
bound
xchg
or
loope
iret
aam
sbb
add
testl
frstor
pop
jle
cmc
and
xor
jo
popa
cmp
std
pushf
arpl
or
movsb
mov
mov
jmp
pop
into
or
sahf
mov
nop
adc
mov
xchg
ficomps
into
sub
cmp
sbb
and
xchg
xor
mov
sub
dec
pop
out
lock
repnz
pop
adc
lds
pop
jl
dec
aam
leave
lret
xor
mov
jns
lds
into
clc
fsubs
pop
mov
fwait
mov
jo
movsb
sub
cwtl
mov
shrl
xorl
loop
lock
adc
xor
roll
sarl
inc
aaa
shrl
mov
push
pop
je
inc
push
mov
mov
cmp
lret
es
sbb
aam
dec
stos
adc
push
outsl
sbb
push
lret
cwtl
in
sub
aaa
inc
sub
jmp
out
jae
fstl
and
idivl
outsl
xlat
sub
aam
mov
mov
dec
cmpsl
sbb
jmp
or
jecxz
mov
cmpsb
inc
lcall
lret
in
das
mov
scas
test
mov
lret
test
mov
mov
iret
push
dec
push
dec
mov
dec
mov
cmpsb
stos
mov
add
cmpsl
jno
xor
pushl
and
mov
test
cmp
jl
and
jp
sbb
dec
stc
xorb
push
popf
test
and
pop
out
jp
mov
add
mov
mov
lods
mov
adc
rcl
mov
sub
dec
pop
mulb
pop
repz
cmpsl
add
gs
aaa
adc
icebp
dec
cwtl
ss
inc
int3
mov
pushf
mov
and
arpl
mov
or
pop
jbe
jbe
pop
fimull
push
push
insb
loopne
std
push
dec
mov
jno
hlt
sbb
xor
jbe
xor
push
rolb
mov
in
lahf
jnp
xchg
inc
xor
pop
lea
shll
orl
pushf
sub
and
xlat
adc
jl
cmpsl
mov
cmp
pop
lods
in
repnz
jp
test
xor
cs
testl
jmp
insb
shr
sub
mov
inc
mov
mov
mov
push
mov
xor
cmpb
mov
adcb
adc
xor
scas
leave
ficoms
pop
imul
cmp
cmp
mov
push
jb
cld
bound
sub
stc
push
loop
mov
sub
pop
aaa
cmpsb
jne
or
cld
or
pop
xchg
xchg
mov
sub
rcrl
sahf
hlt
outsl
xchg
out
sbb
loopne
cmpsl
adc
outsl
mov
dec
ret
add
mov
fstl
rclb
pop
jbe
adc
add
mov
inc
in
pop
push
dec
orb
ja
push
adc
aad
mov
dec
lods
cld
xchg
or
mov
add
aaa
fnsave
and
mov
sub
cmc
mov
push
mov
jle
and
repnz
fmull
int
mov
pop
mov
pop
and
mov
enter
das
roll
jp
xchg
inc
jecxz
mov
cmc
push
pusha
mov
or
cmc
out
ret
or
icebp
add
jmp
xor
push
repz
gs
cmp
in
jge
test
push
cld
in
repz
shrb
aad
popa
popa
pop
adcb
pcmpgtw
aaa
into
lcall
inc
ljmp
lret
push
xchg
jg
sbb
jae
or
loopne
xchg
inc
jb
dec
add
sbb
dec
mov
data16
hlt
jne
addr16
sub
mov
ret
cmp
aad
lcall
and
aas
ds
cmp
rorb
cmp
xchg
inc
xchg
cmpsl
xchg
mov
jge
adc
jl
xchg
test
mov
sti
ljmp
mov
mov
inc
shlb
xchg
xchg
ljmp
mov
mov
lds
lret
cmp
xchg
and
or
sbb
xor
call
jno
js
jb
xor
ret
lea
xchg
lds
mov
xchg
push
gs
arpl
stos
andb
inc
adc
addr16
daa
jno
xor
in
sbb
push
lret
sbb
arpl
fcompl
xchg
aad
insl
ficoms
and
popf
mov
ja
js
dec
jecxz
xchg
mov
push
xor
ficomps
fimull
int
out
jmp
sbb
push
push
mov
jmp
and
lods
out
xchg
push
push
ja
lcall
cmpsb
sbb
cmpsl
xor
mov
ret
jecxz
addr16
lods
clc
scas
sbb
jbe
insl
int3
push
add
and
jle
scas
mov
pop
or
dec
mov
push
sub
cmpsb
or
stos
ror
ja
mov
movsb
ret
push
or
jp
pop
jno,pn
std
stos
fs
mov
pushf
in
lcall
scas
push
ficoms
out
popf
mov
and
sub
or
test
ds
and
jno
into
loope
or
pusha
pop
stos
and
mov
mov
pop
cmp
mov
adc
mov
adc
xchg
push
outsb
cltd
ficoms
leave
mov
ja
orl
in
jecxz
js
mov
mov
pop
ss
loope
pusha
cmpsb
xor
rol
lods
stos
sbb
jecxz
lock
repz
outsl
les
jmp
lret
add
out
sbb
bound
stos
fadd
inc
mov
inc
add
pushl
mov
mov
fst
xchg
push
idivb
inc
and
xchg
push
lahf
shll
xchg
xor
push
sub
or
and
sti
out
out
mov
xchg
leave
cmp
lret
xchg
pop
xchg
xor
adc
adc
and
lcall
adc
sti
mov
popa
fptan
mov
push
mov
sub
in
inc
insl
sbb
das
xor
test
mov
test
adc
loop
sub
jne
mov
lret
lds
ret
mov
shrb
push
jns
sbb
sbb
out
into
jle
push
andb
or
mov
jnp
adc
arpl
mov
daa
scas
mov
and
not
clc
and
hlt
in
xor
push
cltd
xor
imul
push
clc
xor
xchg
orl
mov
or
out
xchg
shlb
aad
mov
or
popa
test
xchg
add
ss
push
xor
bound
aam
cs
mov
insl
jae
lock
sbb
mov
into
push
roll
aaa
mov
or
andb
dec
sub
stc
ljmp
mov
cmp
xor
in
push
insb
add
inc
mov
and
cmpsl
sub
int3
pop
xchg
and
les
mov
mov
mov
adc
add
xchg
lea
into
movb
sbb
push
shl
jbe
enter
xor
cmc
xor
fadds
dec
add
outsb
outsb
adc
mov
push
add
xor
sub
inc
xchg
or
mov
scas
inc
cmpsb
test
int
pop
ret
into
push
adc
sub
lods
jle
mov
or
jbe
cs
xchg
and
sub
xor
test
xlat
and
loope
pop
stos
in
scas
int3
icebp
out
ret
fists
les
sbb
in
and
scas
adc
dec
std
add
and
stos
xchg
mov
and
je
stc
push
cmp
movsb
pop
lret
test
cmp
data16
test
stc
mov
cmpsl
lret
mov
outsl
push
movsb
les
lret
insb
test
cmp
jbe
pop
stc
popf
sbb
shrb
xchg
ljmp
stos
and
adc
out
jl
lods
jg
xor
insb
xor
push
fildll
insl
and
cwtl
leave
pop
jne
jns
cs
cmp
and
add
or
imull
mov
sub
loope
cmp
jmp
daa
push
jb
clc
lds
push
pop
subl
je
push
out
or
jmp
xchg
push
fsin
jo
outsb
push
shll
xor
rclb
in
scas
dec
mov
push
push
bound
sbb
psllw
pop
mov
out
filds
adc
mov
jp
jecxz
fucomi
stos
adc
stc
lds
in
mov
jns
rcrl
lods
jns
or
jb
lods
xchg
cmp
sub
mov
imul
lret
pop
fwait
sub
sti
cld
mov
movl
push
ret
call
xor
inc
sub
sbb
inc
int3
mov
adc
into
pop
out
push
cmp
xlat
fists
addr16
jo
out
xchg
leave
adc
pop
adc
jl
outsb
hlt
and
insl
out
inc
arpl
mov
inc
or
cmp
ljmp
ja
idivb
mov
push
in
push
in
jns
xchg
xor
pusha
xor
cmp
in
mov
add
inc
icebp
pop
jg
clc
ret
dec
outsl
jae
fwait
and
xchg
cmp
imul
mov
or
jnp
seta
lret
lret
cmp
xorb
jmp
sbb
mov
shrl
sbb
pop
jl
cmp
je
cmp
and
mov
jle
sub
aam
sub
xchg
lahf
jbe
and
leave
push
popf
or
mov
xor
sub
sub
xchg
mov
and
cwtl
outsl
adc
data16
add
lock
out
ljmp
xor
xchg
adc
lock
cs
cwtl
fistpl
call
fmuls
jg
shr
arpl
das
jbe
mov
cmpsb
int
repz
mov
lock
leave
outsb
pop
es
jecxz,pt
dec
push
jl
cmpl
push
mov
fstpl
in
mov
inc
sub
jmp
push
enter
xchg
jae
cmp
ds
scas
and
mov
push
and
aaa
lds
mov
aas
lock
out
daa
mov
jle
mov
lea
mov
sub
loopne
int
jmp
add
lds
or
dec
jl
xor
push
aad
pop
clc
mov
jo
je
in
mov
push
pushf
popf
cmpl
or
ljmp
jae
fcomps
inc
xor
movsbl
popl
mov
sbb
jb
jae
jg,pn
mov
outsb
rorl
push
in
xlat
push
fwait
jbe
test
lods
xchg
adc
xor
push
ja
and
push
cmpb
imul
xchg
stos
push
incl
mov
incl
mov
pop
cmpsb
xor
enter
ljmp
jmp
jle
mov
jg
data16
les
push
cmp
sarl
add
push
fiaddl
dec
lods
xchg
xchg
pop
or
outsl
repnz
push
sub
jbe
dec
sub
lods
jno
xchg
mov
sub
lods
hlt
shll
mov
push
dec
lret
and
sub
lods
test
mov
call
mov
repz
xchg
scas
test
and
scas
cmpsb
addb
mov
fistl
adc
scas
movb
lods
jae
shr
xor
test
or
cmp
jmp
adc
mov
inc
xchg
cmp
dec
lds
test
int3
pop
jmp
in
xor
shrb
jnp
cmc
lock
arpl
call
repnz
xlat
adc
divb
pop
aad
jg
cmp
les
and
dec
push
dec
xor
rolb
js
pop
xlat
fistpl
lcall
fsub
xor
roll
in
fsub
enter
mov
mov
xchg
ja
xchg
sub
mov
movl
cmc
in
orb
stc
pusha
mov
fimuls
mov
mov
jmp
jl
lock
aad
sub
jge
test
loope,pt
pop
jo
popa
loopne
pop
cld
pop
push
jecxz
stc
and
lods
js
fstpl
lcall
lret
std
push
mov
sbb
scas
mov
ret
ror
push
cmpsl
sbb
cli
fisttpll
mov
adc
fmuls
jne
sbb
add
xchg
add
xchg
aam
or
popl
and
loopne
mov
aaa
mov
pop
xchg
jge
xchg
imul
jge
shr
in
aaa
mov
jnp
xchg
int3
mov
fisubrs
cwtl
pop
cmp
mov
repnz
xlat
mov
stc
pop
popa
and
lcall
fwait
cmp
mov
xor
out
dec
sbb
inc
jmp
cld
jmp
xchg
int3
lea
or
sub
or
lock
cmp
add
sbb
add
inc
imul
cmp
popf
orb
arpl
rcl
sti
leave
mov
cmp
jns
push
mov
sbb
leave
test
mov
loop
mov
ja
mov
adc
outsb
cmp
adc
das
ljmp
arpl
add
lret
je
sbb
in
jae
and
or
pop
in
pushl
repz
push
in
pop
movsl
mov
jno
in
jmp
and
sub
and
daa
lods
shlb
adc
jp
in
les
push
inc
push
js
dec
mov
in
mov
sbb
imul
push
iret
add
sahf
and
push
fiaddl
xchg
hlt
push
cwtl
cli
in
mov
hlt
out
lret
out
and
and
lahf
jg
into
mov
mov
inc
icebp
mov
ljmp
popa
mov
rorb
mov
inc
in
xchg
xchg
icebp
ret
pushf
imul
loope
cmp
xor
pop
xchg
es
xor
sub
adc
in
cmp
adc
lcall
dec
add
das
or
jle
cwtl
outsl
test
test
in
cwtl
sbb
test
pusha
push
mov
push
aaa
movsl
dec
loopne
mov
test
xlat
lret
xor
mov
mov
mov
pop
adc
mov
aas
pop
push
scas
jnp
dec
pop
mov
xorb
inc
or
shr
pop
or
int3
adc
fidivl
sub
sbb
jnp
jae
fadd
mov
test
jne
xor
mov
dec
ror
jbe
in
jnp
mov
repz
enter
call
call
and
test
jno
add
pop
pop
stos
cwtl
add
icebp
cmc
cmp
cmp
mov
cmp
fistpl
push
out
push
data16
mov
push
cmpsl
cmp
pop
push
xor
je
pop
jns
cmp
cmpsb
loope
jle
add
push
jmp
adcb
cli
sbb
jae
nop
pop
mov
pop
insb
or
popa
push
adc
jae
push
and
je
pop
push
mov
pop
sahf
movsl
push
push
push
dec
xor
inc
imul
imulb
mov
mov
gs
mov
pop
and
xchg
repnz
sahf
xorl
fsubr
jecxz
stc
lods
fisubrl
sti
lds
sbb
mov
addl
mov
dec
or
mov
nop
inc
push
ljmp
mov
out
and
mull
xlat
inc
les
rcll
dec
std
dec
mov
lea
pushf
and
cmp
cmp
cmp
addl
fisttps
test
mov
shl
mov
sub
and
andb
lcall
push
lock
xchg
or
and
add
scas
push
scas
aad
popa
push
adc
roll
mov
test
mov
xchg
or
mov
push
jo
xorl
ret
sub
out
pop
testb
scas
xlat
icebp
popa
push
les
outsl
sahf
xlat
mov
popa
and
add
les
in
iret
adc
int
mov
jo
orb
jae
dec
lods
jg
ret
lahf
icebp
mov
cmpsl
lea
add
into
test
hlt
adc
and
pop
clc
xorl
jl
xchg
xor
jno
sti
dec
pusha
push
xchg
cmpb
mov
in
jnp
xchg
lahf
pop
std
mov
sbb
inc
pop
jnp
push
mov
outsb
dec
out
fdivrl
loopne
mov
push
repz
jl
adc
add
movsl
out
filds
out
cmp
and
into
pop
xchg
sar
add
xlat
mov
insb
test
cmpsl
addr16
loop
into
jp
ror
ds
add
leave
inc
cld
xchg
xchg
and
pushf
mov
mov
mov
mov
jno
and
jae
addr16
arpl
xchg
daa
mov
das
repz
hlt
mov
sarb
out
xchg
xlat
dec
lds
and
jp
xor
dec
push
cmpb
cmp
inc
mov
aas
xchg
outsl
mov
enter
sarl
jb
sahf
xchg
leave
orl
push
add
xchg
cmpsl
outsl
push
pop
bound
aaa
or
pop
fs
js
or
xchg
fwait
cmp
mov
jmp
push
lret
test
out
in
out
pop
gs
cs
mov
call
lret
outsl
in
enter
insl
and
sbb
and
and
ja
and
push
pushf
adc
dec
sub
arpl
fwait
jno
add
jg
xor
fsubs
push
rcl
popa
test
aaa
pop
in
push
cli
xchg
sub
xchg
push
pop
repz
daa
rclb
imul
pop
pop
push
pushf
iret
add
in
aaa
fmuls
aam
into
inc
aad
push
loop
leave
xchg
or
xor
not
jge
push
insl
cmp
stc
cmp
insl
sbb
aaa
lods
rorb
mov
xchg
adc
and
dec
mov
ja
adc
jmp
aas
mov
adc
and
or
fstl
xchg
test
inc
fcoml
test
scas
test
ror
arpl
outsb
gs
mov
clc
outsl
jg
push
jg
xchg
fdivs
and
pop
lea
test
lods
jne
cmp
sub
idivl
outsl
mov
mov
shlb
adc
fdivrs
pushf
jmp
pushl
pop
inc
repz
jp
xlat
fldcw
les
cmpsl
popfw
ljmp
xchg
inc
fisubl
arpl
inc
or
in
adc
jbe
popa
xchg
sub
lods
lahf
les
int3
add
into
xor
push
in
xor
les
outsb
cld
inc
inc
mov
jg
jle
nop
ret
xchg
adc
sarl
ja
aaa
clc
xor
or
jo
cmp
and
inc
adc
aas
imul
rorb
les
inc
add
mov
loope
in
std
sbb
add
nop
lret
in
or
lods
jp
arpl
rcrl
pop
movsb
cltd
or
in
mov
xor
xorl
loop
jne
xor
cld
sub
push
sub
push
sti
xchg
cmpsl
call
fs
jo,pt
orb
push
pop
xor
cmp
sbb
in
and
fwait
sbb
and
repnz
mov
movsb
dec
push
jno
mov
nop
arpl
dec
ret
out
mov
shl
aas
xor
and
out
adc
xchg
or
dec
jb
or
add
adc
loopne
xor
nop
push
cmc
dec
dec
or
jb
mov
cs
lret
rol
addr16
lret
adc
loope
test
push
xlat
repnz
movsl
outsb
aam
arpl
add
cmp
sbb
lods
jg
cwtl
mov
hlt
popf
popf
push
lea
jle
add
mov
clc
in
push
lds
dec
jnp
dec
adc
adc
mul
popa
jnp
sbb
enter
test
loope
inc
imul
fbld
lcall
in
mov
mov
jae
pop
jg
cmp
push
ret
mov
mov
xchg
push
fnstsw
jo
or
les
shll
add
mov
test
xchg
sarb
nop
cmpsb
std
xor
xor
stos
subb
jbe
mov
subb
or
and
cli
push
xor
cmp
and
movsl
pop
dec
cld
and
mov
push
xlat
pop
push
imul
lahf
add
fisttpll
pop
cmpsl
dec
sbb
or
add
clc
xor
js
adc
jle
xchg
xor
add
add
inc
out
xchg
test
pop
add
subb
sub
cmp
sub
clc
adc
test
mov
xchg
out
in
stos
add
jecxz
cmp
outsb
or
cmp
sti
sbb
mov
lods
xor
andl
push
jp
js
xor
pop
dec
sub
int3
les
push
aad
push
hlt
push
lock
sub
lock
pusha
lcall
mov
hlt
add
ret
jg
mov
aad
sbb
pop
cli
fnstenv
jle
dec
sbb
mov
add
in
ss
pop
std
aam
aad
ljmp
fcomp
imul
push
fwait
loop
not
lods
into
push
in
push
cmpl
repnz
sbbl
jecxz
xor
push
cmp
push
xor
data16
xchg
push
in
neg
cmp
stos
adc
int3
xor
cmpl
repz
sub
push
sarb
push
pop
incl
mov
mov
sub
inc
xor
mov
mov
cmp
mov
dec
jle
test
fisttpll
pop
push
dec
adc
jne
sub
fstl
pop
xchg
loopne
add
xorb
in
lods
mov
imul
mov
jge
sub
fucomi
sbb
dec
lahf
cmp
or
dec
out
jno
mov
jns
sub
dec
into
daa
xchg
scas
cmp
cs
xorb
test
or
popa
jnp
idiv
test
or
ja
fs
sbb
pop
xor
fwait
outsb
and
pop
sbbb
jne
sbb
test
push
cmc
push
mov
inc
push
fbld
pop
xchg
fsts
in
mov
adc
sub
jl
or
iret
xchg
mov
xor
mov
sbb
or
xchg
push
aaa
push
cmp
fisubrs
test
cmp
rcll
sub
fldl2e
jle
ljmp
lods
jp
dec
cmpsl
push
mov
daa
je
dec
inc
bound
xchg
xor
push
dec
dec
pop
or
jo
push
push
cmp
adc
adc
sub
xchg
add
jp
nop
push
jmp
push
aaa
sarl
andb
sbb
and
lcall
add
push
mov
mov
xchg
mov
jge
int
lea
fmul
aad
push
dec
inc
sub
dec
jne
into
dec
sbb
mov
int
fdivl
pusha
cwtl
adc
mov
test
sbb
add
cli
sbb
out
push
imul
mov
lahf
jmp
cmp
jnp
fmull
testb
jae
push
adc
and
push
fcmovnu
je
aam
inc
cltd
adcl
jae
adc
fsubl
mov
movsb
xchg
mov
pop
mov
push
in
mov
dec
jmp
mov
cmp
lcall
pop
cmp
or
out
je
xor
cltd
cld
xlat
mov
add
loopne
nop
adc
push
scas
adc
or
cmp
mov
inc
or
btsl
sub
push
lds
mov
sbb
jns
cmp
push
test
mov
lods
push
movsb
mov
xor
pop
cmp
jl
in
jmp
cmp
fbstp
fidivl
inc
push
pop
repnz
xchg
fldt
loopne
xor
lahf
icebp
jbe
pop
mov
mov
mov
dec
mov
push
push
imul
mov
mov
mov
rcll
mov
rclb
repz
mov
fisttpl
jno
pop
sub
add
inc
dec
jb
inc
lcall
jo
sub
bound
or
lret
repnz
pop
pop
mov
pop
lods
fisttps
movsl
pop
bound
int3
out
pop
pop
mov
jbe
adc
fucomi
int3
dec
fwait
push
lods
pop
dec
pop
test
jbe
cmpsl
and
lcall
push
xchg
sbb
jmp
flds
adcb
xchg
hlt
and
fs
jg
push
add
popf
jns
inc
scas
jecxz
pop
pop
xchg
mov
jne
int3
lret
xchg
cmp
jecxz
mov
jo
mov
out
and
lahf
push
shll
into
and
cli
ret
dec
call
mov
mov
loopne
ss
sahf
jge
test
notb
push
out
mov
inc
mov
lds
sbb
shl
cmp
clc
mov
xchg
cmp
cmp
add
push
fwait
jecxz
cmp
enter
int
jae
cwtl
enter
xor
jo
sbb
data16
jne
sub
push
xor
movsl
popa
inc
inc
aaa
pop
xor
fstpl
xor
je
fucomip
dec
mov
leave
aaa
clc
call
outsb
mov
cli
sub
mov
ficomps
jbe
mov
movsl
jmp
in
sarl
icebp
jg
lcall
mov
out
push
in
cltd
and
inc
ds
push
sahf
adc
bswap
add
mov
pop
sbb
jb
push
pop
inc
mov
inc
inc
adc
cmpl
out
ljmp
les
mov
cmpsb
xor
or
outsb
fxch
jle
ja
cmp
dec
add
jne
dec
mov
mov
sbb
xchg
fisubs
add
test
addb
and
fs
xor
stos
push
jg
hlt
mov
dec
pop
push
rol
out
imul
lahf
xor
dec
out
cmpb
push
push
movsb
or
mov
fs
add
jecxz
je
xor
cwtl
ds
dec
mov
jg
jecxz
mov
popf
dec
pop
sbb
arpl
xor
sub
sub
pop
inc
push
in
adcb
dec
rol
fnstsw
rclb
mov
jl
mov
inc
lret
insl
cmpsl
test
sbb
xor
test
xor
out
fiaddl
fsts
or
mov
imul
cli
test
fwait
xchg
into
and
sub
add
mov
ret
fidivrl
imul
aas
fiaddl
add
pop
in
pop
in
push
leave
pop
dec
xor
mov
sub
dec
add
loop
iret
jbe
xlat
notl
or
xor
fucomip
mov
stos
popa
pop
fsubrp
shlb
shrl
test
mov
movl
mov
js
lea
jo
cmp
loope
fsub
clc
clc
jle
lcall
ds
xchg
xor
lret
adc
xor
xchg
cmp
push
mov
pop
xlat
or
ljmp
lahf
mov
rcl
aas
pusha
nop
mov
fsts
jnp
andps
push
inc
insb
xchg
cs
and
sbb
enter
mov
in
inc
mov
sub
mov
push
loop
mov
add
and
lock
fildll
lahf
xor
sub
sub
lahf
nop
out
xchg
xor
ja
xlat
xor
sbb
rdmsr
mov
stos
out
arpl
dec
inc
sti
dec
int3
jecxz
sub
cld
shlb
lods
jbe
enter
jp
lret
add
lods
in
outsl
cmp
ljmp
stc
repnz
popf
mov
imul
xchg
lods
idivb
jnp
push
push
in
in
dec
xlat
xor
jae
and
jp
lret
fwait
and
push
or
adcb
pop
icebp
xchg
or
mov
scas
cmp
int
sbb
pop
jl
rolb
int3
mov
fs
xor
pop
into
xor
mov
mov
pop
popf
push
addb
loope
int3
mov
mov
fdivrs
cmc
addr16
popa
into
je
sub
cmp
and
add
xchg
adcl
mov
lahf
nop
mov
arpl
mov
popf
mov
inc
mov
mov
xchg
loopne
aaa
and
or
fs
add
mov
sbbl
movsb
cmp
push
mov
popf
jp
out
push
lock
pop
xchg
daa
shll
sub
es
fimull
jae
add
mov
cli
mov
adc
mov
pop
stc
jg
pop
sbb
mov
adc
cmpsb
xchg
repz
mov
jne
repz
jb
add
test
mov
sbb
into
mov
imul
sti
fwait
popa
jno
stos
mov
stos
fwait
int
or
outsl
and
add
sbb
test
and
mov
sbb
imull
stos
in
les
ds
xchg
lahf
cmp
add
std
scas
js
mov
pop
jl
dec
jmp
mov
int3
push
fs
into
in
imul
cmp
adc
ficoml
adc
adc
xchg
rolb
sub
test
or
imul
or
dec
sub
and
in
arpl
mov
adc
pop
inc
mov
bswap
sbb
nop
and
lods
sbb
or
lret
mov
sbb
dec
data16
adc
outsl
xor
cmp
sbb
movsb
xlat
add
jl
jl
lret
daa
and
test
pop
mov
cltd
ja
loop
sbb
pop
sbb
pushf
push
cmp
xor
jns
cmp
pushf
out
test
jg
mov
inc
jl
dec
pop
push
inc
mov
aaa
jne
pop
mov
inc
mov
fcompl
mov
xchg
jecxz
das
mov
insb
push
push
pop
fidivs
jb
scas
cmp
or
sarb
pop
test
sbb
shrb
push
dec
test
dec
inc
mov
mov
mov
aam
ret
add
mov
inc
jb
mov
xor
add
dec
add
dec
xchg
pusha
ja
mov
outsl
repz
jbe
jne
mov
jg
cmp
mov
nop
pop
jecxz
mov
xchg
and
outsb
jge
test
cmpsb
mov
int3
add
lea
addr16
xchg
xchg
inc
and
adc
icebp
xchg
xor
popa
imul
jns
aas
inc
or
mov
outsb
lret
cld
stos
jns
push
adcl
mov
adc
cmpsb
pop
inc
dec
inc
adc
pop
scas
cmpsb
or
aaa
or
andb
fs
xchg
popa
xchg
jb
xchg
adc
gs
adc
cmpsb
jmp
fs
and
in
add
jnp
jo
jno
jb
sbb
pusha
outsb
xchg
out
push
ljmp
imul
sbb
inc
sub
xchg
jae
xlat
call
cmp
rolb
enter
addr16
xor
or
rolb
fstpt
in
js
pop
and
push
lods
sbb
dec
sbb
jg
test
xor
inc
scas
mov
xchg
daa
inc
cmp
lea
mov
jnp
in
outsl
scas
inc
mov
cltd
cmp
in
jae
outsl
and
pop
ljmp
dec
jle
xor
aam
jo
add
mov
mov
fldcw
xor
jecxz
mov
jo
mov
test
loop
adc
mov
xchg
in
push
cli
out
pop
fisubl
sbb
or
icebp
or
roll
es
pmullw
or
sub
mov
imul
push
or
jbe
mov
inc
and
cmpsl
or
push
dec
or
int
cmp
arpl
cli
mov
scas
push
dec
mov
push
add
dec
jl
ret
mov
cmp
in
sub
xchg
push
fwait
dec
sub
test
fmuls
imul
sub
mov
mov
inc
fistl
daa
mov
pop
add
sbb
xchg
lods
add
pop
lret
dec
sarl
add
arpl
repnz
cmp
sbb
sbb
movsl
jmp
loope
jae
xchg
sub
std
add
cmp
in
lock
stos
sbb
cmc
movsb
add
adc
dec
dec
stc
loope
pop
andl
daa
push
rcr
rcll
lsl
inc
loopne
mov
xchg
enterw
and
xor
sub
lahf
out
fwait
push
pop
repz
add
jp
sbb
stos
fimuls
mov
push
jge
loopne
ret
and
clc
gs
sbb
inc
or
or
fdivr
add
out
pop
or
imul
fmull
adc
cmc
mov
popf
xor
mov
push
fstl
icebp
mov
xor
sbb
cmp
cmp
pop
icebp
push
mov
insl
imul
cld
pusha
inc
adc
and
mov
lret
xchg
and
sub
lahf
sub
and
adc
sarb
xor
mov
cmp
sub
xchg
test
and
pushf
sub
les
es
pop
pop
fbstp
sub
sbb
aas
xchg
fs
sbb
mov
addl
push
jns
pop
or
push
inc
sub
aas
dec
arpl
push
fildl
pop
shlb
pop
and
notb
fmul
mov
dec
in
sub
jg
aas
hlt
sbb
ret
inc
and
mov
repz
xor
cmp
hlt
mov
inc
and
push
out
mov
stos
cwtl
jns
xor
test
sub
xor
jp
push
mov
dec
test
dec
push
movsb
lret
popf
loope
xchg
pusha
push
sbb
lods
aad
pxor
je
mov
push
das
cmp
iret
mov
lods
or
adc
ds
jecxz
clc
adc
mov
loopne
add
xchg
push
push
les
or
lds
out
repz
mov
cmc
fisubrs
push
jb
ret
repz
repnz
pop
out
and
xchg
sti
sbb
adc
mov
jns
pop
test
daa
outsb
jb
imul
repnz
cmp
movsb
sbb
dec
jo
popa
adc
add
push
xorl
adc
lcall
add
sub
jns
pusha
mov
icebp
aas
mov
mov
adc
loope
mov
dec
jmp
mov
jp
push
pushl
sarl
ss
xchg
sub
scas
xchg
pop
pusha
cli
mov
sarb
lret
sti
in
push
jg
imul
xor
lcall
inc
shl
sub
out
vpcmpeqw
outsl
xchg
fstpt
jg
test
pushf
arpl
cld
lods
test
insl
imul
rorl
xor
jo
data16
jno
sbb
pop
imul
sbb
add
adc
js
or
aad
cli
movsl
mov
aad
push
pop
dec
jo
pop
rorl
sbb
mov
loope
mov
push
pop
pop
adc
adc
fs
sarb
aam
inc
inc
mov
add
push
loopne
dec
inc
push
ss
pop
sbb
orl
hlt
aam
into
jle
or
and
jecxz
loope
pop
xchg
nop
push
jmp
icebp
jecxz
mov
rcrb
loopne
xor
dec
dec
lods
mov
aaa
xchg
lcall
push
push
mov
pop
push
rol
loop
je
aaa
add
scas
or
cli
mov
dec
adc
pop
mov
push
mov
inc
in
mov
push
sbb
outsb
pop
sbb
or
outsl
daa
test
and
mov
cwtl
imul
out
xchg
or
rorl
push
jl
les
ss
xchg
sub
fs
push
movsl
and
call
jle
xchg
push
push
je
testl
hlt
jns
mov
sbbl
mov
mov
dec
repnz
push
lds
jle
xchg
or
std
imul
mov
fsubl
cwtl
mov
lahf
cmp
mov
push
sub
aaa
mov
test
mov
int3
arpl
cmc
jg
in
popl
adc
nop
cli
push
xchg
xchg
sub
cld
push
mov
mov
neg
inc
adc
sbbl
mov
or
mov
pop
iret
dec
rcrb
test
ja
mov
pop
push
out
mov
cmp
and
stos
mov
mov
outsl
xor
outsb
test
add
lock
cwtl
call
js
dec
push
pop
loop
lahf
ror
cwtl
int3
mov
jp
dec
adc
mov
sbb
pop
mov
cmp
stos
cmp
or
fcoms
dec
ja
push
ret
mov
or
fs
mov
sub
adc
loopne
sbb
mov
jecxz
mov
dec
ds
adc
movsl
das
mov
mov
adcl
sbb
out
or
mov
and
xor
lahf
scas
or
xor
loopne
loope
jno
outsl
test
rcrl
and
lods
mov
xor
push
int
mov
push
dec
xor
int3
and
inc
push
adc
in
roll
loopne
mov
mov
leave
or
jp
mov
and
sbb
or
nop
hlt
xor
leave
mov
stc
pop
stos
jns
mov
mov
add
cmp
mov
cmp
pusha
into
push
cmc
xchg
push
lret
out
xchg
out
cmp
je
jmp
das
dec
loopne
adc
push
xor
arpl
enter
xchg
cmp
imul
xor
pop
mov
aam
arpl
repnz
arpl
popa
pop
push
mov
out
ret
jne
dec
insb
adc
jmp
insl
or
and
lahf
test
mov
nop
sub
lock
push
loopne
mov
jp
testl
enter
adc
xor
lock
sahf
das
push
pop
shrb
inc
xchg
arpl
scas
loopne
pop
pop
cmovns
mov
mov
addr16
jmp
outsb
mov
adc
lods
clc
push
or
xchg
cmp
cmp
lret
hlt
pop
adc
mov
sub
sub
fidivrs
lret
push
inc
push
daa
mov
aam
mov
sarl
mov
dec
scas
mov
or
idivb
clc
daa
push
jno
dec
pop
imul
loope
sub
xor
cmp
loop
pop
inc
ficoml
arpl
test
xchg
lcall
or
fwait
push
mov
inc
push
gs
mov
cs
popf
testb
jno
scas
mov
fidivrl
insb
int
into
xor
lock
mov
ret
push
xchg
adc
imul
andb
xchg
pop
cmp
push
fucomp
lcall
xchg
cmp
data16
sbb
push
xchg
aas
int3
push
sub
stos
and
popf
hlt
jle
mov
cmp
call
test
nop
lahf
or
fwait
adc
xchg
pop
into
mov
pop
adc
imul
or
gs
int
sbb
xor
loop
jb
mov
pop
jp
dec
and
cltd
cmp
test
cmp
fidivs
dec
lods
int3
pop
dec
dec
rcr
cmp
jl
hlt
push
lds
xor
lods
stos
push
adc
addb
or
cmpsl
lret
fidivl
dec
movntq
xchg
mov
xlat
hlt
push
mov
xchg
fmull
mov
jb
out
lods
adc
call
lds
popa
frstor
incb
push
lahf
xor
js
sbb
mov
cmpsb
xchg
fstps
cwtl
mov
lea
mov
clc
or
fimuls
js
xchg
push
sub
xlat
push
xor
add
mov
pop
pop
xchg
mov
push
inc
in
jmp
add
in
sbb
lret
stos
xor
stos
mov
rcl
jbe
test
cmp
and
stos
push
rcll
xchg
shlb
adc
sbb
pop
and
and
xor
jns
pusha
dec
mov
fcoms
inc
mov
pushf
in
frstor
mov
test
ret
ss
or
push
addr16
cmp
test
mov
aas
stos
pop
shl
add
xlat
stc
lcall
rep
lock
and
sbb
sbb
jnp
add
push
mov
and
sahf
xor
out
fmuls
push
mov
sbb
jl
push
and
sbb
pop
test
xlat
and
andb
jo
cltd
pushf
push
ljmp
stos
inc
cmp
popa
emms
outsb
mov
push
lods
test
cwtl
cltd
dec
adc
push
jnp
fcmovu
out
dec
jmp
insl
lahf
addl
adc
iret
aaa
stos
pop
or
mov
mov
hlt
dec
icebp
cwtl
mov
jecxz
xchg
movsl
cltd
imul
dec
pop
jmp
call
loop
out
stos
fimuls
pop
sub
adc
pop
icebp
sub
jmp
mov
cmpsl
mov
ret
out
loop
roll
ds
nop
leave
call
and
test
pop
orb
repz
and
push
faddl
shrb
mov
sub
or
in
aad
jp
fsubrl
aaa
fcmovne
sbb
xor
stc
pusha
mov
sbb
outsb
sbb
out
in
inc
cli
and
adc
push
xchg
int3
out
add
pop
imul
mov
xor
mov
sub
or
sbb
insl
sub
mov
mov
push
mov
outsb
sub
dec
mov
icebp
sub
sbb
lcall
sbb
xor
xchg
jl
push
in
inc
adc
clc
and
push
pop
inc
sub
jmp
mov
dec
add
xchg
or
test
mov
pushf
shrb
lods
roll
mov
fwait
mov
cmp
cli
or
fisttpll
and
mov
mov
or
loope
sub
test
dec
add
subl
jmp
push
test
push
pop
lds
push
pop
aaa
mov
dec
jecxz
push
divl
mov
icebp
sbb
inc
rolb
sti
adc
pop
add
icebp
jg
cwtl
sbb
adc
inc
mov
dec
je
xor
mov
push
lret
or
je
ja
cmp
jp
std
or
fwait
test
jmp
ficompl
push
mov
or
xor
subl
push
or
cli
std
out
mov
fwait
inc
mov
je
lret
out
push
xchg
popa
jo
sub
rol
mov
jge
fnstcw
pusha
lea
add
test
mov
mov
or
and
test
sbb
or
insl
insb
pop
ret
add
xchg
aaa
adc
lods
out
int
xchg
in
fbstp
ja
pusha
pop
sub
inc
dec
test
jecxz
int
sub
mov
or
jmp
xchg
push
decb
sub
dec
cmp
fists
movsb
out
or
bound
enter
ss
aam
int3
xchg
adcl
xlat
cmc
pop
fwait
cmp
aas
repz
mov
jl
xchg
jge
inc
test
lret
rcr
push
xchg
fnsave
dec
lret
fisubrs
aas
or
jb
pop
and
inc
sbb
sub
es
xchg
imul
out
mov
xor
mov
popf
int
push
movsb
dec
cli
jge
iret
mov
push
cmp
cmp
pop
sbb
mov
add
and
add
cld
scas
sbb
ficoml
sbb
xor
mov
cld
jnp
cltd
and
cmp
push
sarl
test
cwtl
or
pop
dec
test
and
loopne
popf
adc
sarb
test
ja
or
stos
je
mov
cmp
in
rcll
sub
inc
add
cmp
xchg
inc
mov
mov
popa
sub
cmpsl
mov
sbb
xor
sub
pop
pop
push
mov
mov
ja
rorl
int3
jle
adc
mov
sarb
pushf
outsb
mov
xlat
out
inc
call
lahf
push
and
xchg
pop
pop
test
mov
jbe
xor
cmp
jmp
or
test
daa
lods
sbb
movsb
adc
push
rcl
dec
fwait
dec
dec
jp
loop
loopne
ljmp
mov
std
adc
dec
scas
pop
cmp
idivb
sub
xchg
cltd
stos
push
dec
arpl
cmp
int3
out
and
and
fnsave
sbb
lods
pop
mov
and
mov
sub
or
push
mov
xchg
fnstcw
xchg
jns
cmpsb
jg
push
xchg
mov
cmc
ss
das
mov
aas
mov
fs
xor
stc
stos
fidivl
push
clc
push
dec
cmpsl
aad
adc
adc
lahf
inc
test
fisttpll
xchg
mov
sbb
xchg
add
sub
in
lea
push
and
pop
cwtl
fimuls
mov
ss
mov
aaa
repnz
test
and
out
inc
sbb
inc
adc
sarb
mov
or
out
xchg
jl
jno
gs
push
cmp
les
test
insl
ss
and
aam
addr16
or
mov
shrb
push
sbb
adc
ljmp
adc
cmp
sub
xchg
in
mov
mov
mov
movsl
or
ljmp
insl
sub
xchg
mov
fldl
or
inc
dec
test
clc
mov
in
lret
test
loope
in
mov
xchg
and
jne
ficoms
pop
jle
mov
stos
loopne
cld
fwait
sbb
and
jbe
add
lods
ljmp
cmp
push
cmp
xor
arpl
sub
and
xorl
loopne
push
sti
jo
rorb
cmpsb
clc
adc
jl
cld
mov
xchg
or
dec
xor
inc
pop
in
jle
cmpsl
int3
inc
ret
or
cmpsb
fdivs
stos
enter
roll
pop
shll
stc
cmpsb
out
leave
jg
lods
mov
arpl
psubd
stos
jle
aas
addr16
adc
add
jecxz
sbbb
pop
or
je
cmp
shl
mov
fisttpll
imul
mov
inc
insb
push
sbb
aaa
mov
je
jge
pop
stos
pop
dec
popa
mov
pop
push
and
out
daa
xor
xor
dec
xchg
xor
add
inc
addr16
cmp
inc
subl
and
dec
pop
jl
mov
int3
sbb
dec
xchg
pop
cmp
mov
push
stos
push
lret
pop
push
aaa
jecxz
xchg
mov
mov
fdivl
fistps
nop
scas
neg
push
jns
insb
and
loope
out
push
mov
push
mov
pop
es
xor
xor
and
inc
dec
pop
mov
push
jmp
jnp
repz
out
lret
movsb
sub
cmp
out
out
aaa
push
push
cmp
rolb
inc
pop
insl
lcall
and
dec
xchg
ret
in
mov
fs
jp
inc
clc
push
in
insb
push
stos
xchg
sbb
jo
insb
in
outsl
push
enter
lret
jns
jns
xor
mov
jnp
pusha
xor
jecxz
mov
aaa
icebp
inc
popa
push
fisubrl
mov
addr16
lods
or
pop
movsl
sbb
mov
call
mov
js
sbb
mov
adc
loopne
add
dec
inc
cmp
es
lea
setle
lock
cwtl
adc
mov
mov
xchg
loope
fs
lods
or
push
or
cmp
stc
jp
negb
or
ds
pop
pop
js
pop
int3
xchg
mov
xchg
mov
mov
mov
jnp
adc
inc
or
jle
or
xor
mov
and
lcall
js,pn
inc
xor
in
out
insl
stc
mov
jbe
or
scas
add
cwtl
add
outsl
cmp
mov
mov
lret
lods
aas
popl
jmp
sete
and
sti
dec
inc
in
lds
mov
fsts
push
push
rcl
in
popf
fisttps
push
inc
mov
jmp
ja
pusha
js
das
es
jmp
xchg
and
fnstcw
or
or
into
inc
rcll
pusha
std
inc
adc
js
in
fstl
sbb
fisubl
lock
inc
cmp
mov
shlb
xchg
imul
mov
rcll
fldt
dec
lret
push
and
inc
ja
xchg
scas
in
hlt
fs
into
and
push
jg
sar
jp
out
pop
mov
imul
sahf
inc
sbb
insl
or
sbb
ja
ss
inc
aaa
lods
scas
add
js
clc
or
imul
sub
xor
jge
fincstp
push
lret
mov
je
loopne
sub
push
icebp
fisttpl
arpl
mov
out
gs
int3
push
aaa
jbe
inc
test
fnstcw
adc
inc
mov
sbb
pop
fnstenv
cmp
push
nopl
out
nop
fistl
lods
sub
pop
mov
sbb
pop
cli
push
repnz
fcmovnb
sbb
inc
mov
ds
pop
jns
aas
lret
movsl
xor
out
xchg
fiadds
inc
iret
in
jb
jg
mov
cmp
jp
mov
push
push
ja
cmp
or
sti
push
iret
out
pop
imulb
das
add
add
inc
add
jp
push
and
push
int
ds
sbb
push
xchg
into
pop
mov
daa
push
les
fs
xchg
inc
mov
or
gs
jge
lock
add
lds
push
mov
cwtl
xchg
hlt
icebp
pop
cmpsl
stos
scas
jae
cld
ret
mov
push
popf
jp
out
in
cmp
popa
ja
xchg
sub
cmpsb
testl
jg
aaa
sahf
push
pop
jbe
adc
lock
cmp
clc
push
clc
jno
outsb
mov
xor
xchg
call
and
jg
loope
popa
incl
xor
subb
mov
mov
out
sub
and
xor
les
mov
sbb
stc
mov
lahf
popa
stc
out
in
mov
mov
adc
cld
lods
cmp
sub
dec
movsb
push
pop
sbb
xor
inc
inc
loopne
mov
inc
test
dec
loopne
mov
lret
xor
out
jmp
stos
loop
dec
pop
jp
xchg
loop
lahf
aad
aam
fisttpll
aad
out
sbb
popa
and
pop
shl
push
xrelease
mov
in
push
xorb
mov
xchg
sarl
push
outsl
sbb
dec
inc
sbb
cmc
cltd
xor
fs
fwait
out
in
cli
dec
add
adc
or
ljmp
xchg
loope
call
rcrl
in
xchg
ja
xchg
inc
sbb
or
pop
xor
loop
cwtl
adc
jecxz
mov
jmp
fnstenv
or
int3
jbe
call
or
fwait
clc
aad
jbe
jbe
das
rcl
sub
lods
xchg
inc
add
mov
mov
mov
jp
leave
or
in
adc
es
addl
add
je
imul
mov
mov
inc
and
fsts
shlb
shr
ja
negb
call
xchg
fld
lea
cmp
out
cmp
cltd
push
pop
inc
add
xor
inc
jmp
into
movsb
ja
aam
pop
mov
sbb
cwtl
stos
insb
xor
data16
out
mov
mov
mov
push
cli
push
clc
xchg
ret
pop
int3
bound
in
pusha
push
mov
xchg
ret
mov
or
bound
fdivl
js
je
cmp
icebp
pop
add
testb
enter
sbb
test
aas
xor
jns
cs
scas
inc
xor
sub
ss
cmp
mov
repz
scas
insb
fiadds
sahf
xor
sbbl
mov
repz
xchg
movsl
lock
dec
arpl
jnp
stc
dec
movsl
lea
dec
add
inc
out
les
addr16
mov
outsl
cmp
hlt
push
add
loopne,pt
xor
fbstp
add
fnsave
in
push
fsubrl
les
call
dec
ret
in
outsb
mov
xlat
enter
ficoml
and
mov
mov
cmp
std
cmpsl
mov
fildl
and
outsl
scas
push
push
lcall
pushf
lret
pop
pop
test
mov
pop
movb
mov
fnstcw
iret
xor
dec
mov
orb
and
stos
out
sub
ret
movsl
cmc
fisttpll
icebp
outsl
adc
jne
or
jbe
push
dec
and
xor
inc
push
mov
test
or
jmp
aam
jle
mov
add
push
pop
arpl
inc
mov
cmp
aam
adc
and
xchg
mov
xchg
inc
neg
out
dec
jg
dec
dec
mov
adc
push
addl
or
sahf
mov
cmpsw
cmp
pop
cli
mov
pop
cmp
cmp
jl
cmp
iret
and
inc
cmpsl
mov
and
lea
fmuls
subl
pop
sub
dec
sub
dec
mov
xor
jl
lret
ret
sbb
in
mov
fs
in
jge
jmp
and
insb
jne
dec
es
lock
mull
push
dec
mov
cmp
dec
adc
xchg
enter
push
movsb
pop
outsb
cmp
repz
mov
push
shll
xorb
lret
and
or
out
push
lret
jg
loopne
dec
sarb
bound
sbb
add
mov
lahf
lea
mov
mov
mov
mov
daa
lret
mov
dec
and
or
xchg
inc
xor
pop
pop
loop
push
adc
xchg
jae
or
pop
pop
xchg
aad
xchg
inc
lea
jle
mov
into
cmp
push
ljmp
sub
inc
push
push
mov
adc
sub
pop
jbe
imul
sbb
leave
nop
orl
mov
js
testl
pushf
sbb
lock
and
outsb
pop
loopne
adc
xor
inc
icebp
psllw
popf
fistpll
leave
andb
jne
cmc
sub
sti
add
inc
cmp
fwait
adc
inc
push
es
inc
and
mov
daa
subb
out
in
inc
inc
xor
sub
xchg
push
or
outsb
cld
jecxz
inc
xchg
insl
pop
mov
sub
sbb
in
xor
push
sub
adc
fmuls
sahf
mov
roll
inc
movsl
jg
and
xchg
dec
mov
xchg
aas
mov
repz
cmp
sub
mov
arpl
jmp
dec
movsl
adc
adc
test
aam
dec
lods
push
mov
aaa
mov
xchg
mov
in
push
leave
loopne
adc
test
sub
or
mov
cmp
in
shlb
mov
icebp
mov
push
pop
rcrb
mov
stc
sub
lret
jge
es
ja,pt
outsl
xorl
push
dec
mov
pop
mov
insl
jae
icebp
fdivl
xchg
movsb
cmp
cwtl
les
cs
ret
xchg
int3
outsb
cmc
mov
xchg
sbb
push
jnp
out
lds
and
fstpl
lahf
test
mov
xchg
mov
cmp
fldcw
iret
xchg
repz
out
jae
jnp
loop
cmp
mov
cltd
mov
dec
enter
sbb
xlat
mov
adc
mov
jb
lods
mov
in
and
mov
fbstp
push
dec
xchg
mov
sbb
in
leave
cmp
dec
jl
js
lods
outsl
rorb
cs
in
out
lcall
xor
ljmp
adc
mov
jge
mov
push
mov
pop
enter
nop
xchg
mov
repnz
mov
push
stos
cmc
imul
and
pop
inc
jb
inc
xchg
mov
fbstp
sbb
aas
imul
xor
adc
push
nop
mov
adc
cltd
adc
fxch
xor
adcl
cld
inc
lret
sbb
inc
inc
xchg
cmp
mov
and
push
sti
xor
push
inc
pop
outsl
cmc
sub
sbb
push
lcall
subl
mov
aas
push
dec
lret
pop
mov
mov
pusha
xchg
sub
out
adc
push
gs
pusha
mov
xchg
pop
repz
repnz
push
dec
xchg
test
addr16
data16
lock
fs
lods
std
jbe
adc
sub
mov
loop
mov
cltd
mov
imul
inc
add
cmp
adc
stc
and
ret
sub
aaa
sub
inc
loopne
mov
mov
loopne
mov
jnp
jg
sub
das
fnstcw
addr16
es
dec
daa
cli
cli
dec
mov
rcrb
in
dec
subl
test
jne
lret
jnp
inc
bound
cmp
sub
jge
fimull
ret
leave
jecxz
stos
hlt
fists
xlat
cmpsl
lock
ljmp
out
adc
pop
cmc
dec
pop
rolb
add
or
test
leave
xor
int3
sarb
and
test
cs
ljmp
sub
and
popf
xchg
int3
xchg
sub
lret
sub
popa
sub
dec
inc
xchg
subb
fs
test
xchg
adc
mov
and
pop
push
cli
imul
adc
jbe
mov
outsl
xchg
push
xor
mov
add
and
in
test
sbb
and
pop
pop
ds
mov
xchg
cmp
jmp
sub
icebp
push
mov
add
imul
sti
inc
push
xor
sbb
add
mov
dec
into
out
adc
dec
lock
xchg
adc
pop
subl
adc
inc
mov
fidivrs
lock
inc
test
mov
lds
dec
mov
bound
inc
sub
iret
lret
or
sbb
iret
outsb
iret
mov
or
jle
fsub
mov
call
addr16
mov
cmp
outsl
mov
sti
int
lret
pop
add
mov
pop
xor
popf
xlat
lret
push
js
push
add
mov
sub
cli
sub
nop
mov
mov
cwtl
lahf
push
js
adc
sub
sub
push
and
dec
xchg
lcall
sarb
xchg
fwait
js
pop
mov
cltd
fistpll
fwait
lahf
rcrl
xlat
pop
pop
icebp
int
xor
add
mov
pop
pop
jle
dec
xchg
repz
push
mov
out
rolb
add
dec
dec
pop
push
xchg
inc
mov
into
cs
call
out
fs
xchg
mov
mov
ficoms
mov
testl
add
xchg
icebp
movsl
mov
xor
nop
cmpsl
je
in
cmp
xorb
lcall
adc
cmp
stc
cmc
pop
rorb
cmpsl
out
aam
jmp
inc
jmp
mov
cmp
pusha
leave
ss
icebp
jb
jle
pop
rcr
or
fcoml
sbb
sbb
scas
jg
xchg
adc
adc
pop
sbb
scas
cltd
sahf
mov
mov
pop
out
pop
push
jns
rcr
adc
pop
mov
sbb
fstpl
fistl
iret
loope
out
cwtl
and
ret
xchg
ret
rcl
ja
popf
inc
push
stos
lods
adc
pop
loopne
out
rclb
inc
mov
test
dec
fldl
cli
dec
mov
dec
dec
cmc
sub
loop
jge
insb
mov
lock
clc
push
call
fsubrl
dec
rcrb
sub
xchg
mov
leave
pop
imul
or
movlps
imul
popl
lcall
cld
mov
or
cltd
jo
sbb
movsb
mov
mov
mov
lret
mov
xchg
rorl
cmpsb
movsb
jl
test
push
daa
aam
lret
mov
cmc
repz
jbe
cmpsb
setp
aad
add
or
push
stos
adc
into
xor
repz
call
das
stos
fdivl
and
and
fsubs
fucomip
repz
sti
jmp
add
outsl
test
cmp
in
cmc
jns
pop
or
sbb
sbb
xchg
mov
inc
stos
outsl
dec
int3
call
cmp
mov
pop
add
andl
pop
shr
mov
sub
lcall
jae
leave
jb
movsb
mov
and
xchg
in
sbb
das
adc
cwtl
mov
cmc
push
aam
cmp
dec
sub
fs
sbb
call
je
jl
std
lds
test
jno
out
xor
and
jae
sbb
cltd
les
sbb
iret
sbb
mov
inc
das
jno
adc
ljmp
dec
cmp
xchg
and
mov
jb
in
sub
or
lret
push
xor
lea
mov
xchg
bound
mov
adc
jge
dec
push
push
les
insl
pop
adc
out
sub
jne
and
xlat
clc
xchg
mov
sbb
jb
mov
pop
je
cmp
adc
pop
cltd
inc
lret
ror
jbe
fwait
pop
loop
and
loopne
and
into
ljmp
lret
cmp
jge
gs
and
pop
inc
arpl
loopne
xchg
repz
lock
xchg
push
out
test
outsb
push
hlt
bnd
cmc
cmp
into
outsb
mov
lret
pop
or
or
ret
push
dec
add
sub
xor
push
enter
cltd
dec
movsb
xchg
pop
aam
aam
inc
fucomp
lods
enter
in
movsl
mov
jge
mov
fisubrs
orl
push
push
jge
fistpll
xchg
fldcw
lods
call
xor
decb
jecxz
cmpsw
sbb
push
les
popa
lret
xor
jmp
push
jne
inc
jmp
sbb
idiv
push
stos
andl
femms
cvtps2pi
loopne
jns
loope
jbe
lahf
xor
or
sub
call
aas
ror
add
in
add
mov
sub
scas
mov
fdivrs
mov
cmp
pop
add
test
or
xor
cmpsl
mov
in
cli
push
insl
not
inc
inc
dec
fdivl
adc
inc
mov
cmp
or
neg
add
shll
xlat
pop
jle
shrl
cmpsb
sbb
jb
cmp
add
push
in
cmpsl
mov
push
mov
mov
pop
push
mov
xchg
int3
sbb
mov
mov
mov
dec
cmp
fadds
stos
push
loop
adc
push
insb
cmp
lret
mov
cmp
stc
les
sti
decb
pop
xchg
xor
dec
dec
je
pusha
xchg
mov
mov
pop
jecxz
jmp
outsb
pop
aaa
xor
repz
aad
les
pop
or
in
adc
stc
jo
and
mov
push
movsb
data16
sub
rorb
out
lret
ljmp
and
inc
fmull
mov
lcall
ret
and
mov
cmp
xor
cmp
pusha
pushl
xchg
push
notl
movsb
mov
aaa
pop
stos
sub
in
shr
fsts
dec
dec
lret
ljmp
push
add
sbb
stos
adc
fwait
jp
shlb
add
iret
fistpll
cmpsb
or
xchg
pusha
notb
jne
lock
jg
inc
mov
out
sub
out
jno
inc
mov
test
out
inc
cmc
sub
xlat
fwait
div
and
push
icebp
bound
lock
popa
mov
inc
push
test
sub
sub
cmpl
nop
js
inc
aas
aaa
test
imul
test
mov
aad
xchg
hlt
aad
push
dec
iret
lock
std
mov
xor
cmp
push
push
fildll
mov
in
pop
test
cmp
push
and
and
inc
sbb
icebp
mov
pop
jge
or
jbe
cs
inc
mov
aas
push
ret
sbb
dec
add
sbb
push
sub
in
lds
and
fdiv
cmp
loope
jbe
push
fnsave
les
jnp
mov
mov
repnz
jo
iret
jg
adc
mov
out
jl
pop
jmp
data16
jne
loop
mov
lret
sbb
aas
test
pop
inc
sbb
and
js
lods
ds
aaa
addr16
or
sbb
xor
test
insl
mov
pop
xchg
cmp
lret
or
shrl
into
cmpsb
sub
icebp
in
imul
hlt
scas
pop
xchg
daa
imul
adc
pop
jno
mov
pop
jne
inc
xor
imul
xchg
mov
inc
cmp
add
loope
loop
stc
call
test
in
lock
mov
cli
mov
mov
sarb
popa
orb
aas
or
pop
test
xchg
add
pusha
mov
sub
adc
push
push
shl
sbb
sub
stos
test
sub
sub
push
loope,pt
leave
in
shll
lret
repnz
cmp
mov
arpl
xor
sarb
sub
dec
inc
xor
scas
cmp
pop
loop
jae
inc
mov
sbb
pushf
call
pop
push
ja
sti
fadds
or
lret
fnstenv
mov
sbb
jmp
cmp
shrb
push
cmp
mov
add
mov
xor
ret
divl
lret
pop
mov
icebp
xchg
inc
repnz
push
bound
jo
pop
popa
in
push
out
mov
and
sbb
adc
xor
fidivs
jmp
xchg
popf
scas
inc
inc
and
lahf
adc
lret
out
scas
stos
rcll
out
adc
jecxz
es
mov
int
cmc
enter
mov
push
push
or
xlat
xchg
repz
hlt
push
and
mov
xor
and
and
xchg
sbb
jbe
adc
mov
or
test
push
xchg
push
js
jle
call
xor
xor
cltd
and
add
js
mov
call
sub
cmp
add
dec
fbld
ja
pop
rclb
daa
repnz
pop
push
ds
adc
fs
add
aas
sbb
in
xchg
jae
test
inc
dec
cmpl
push
mov
dec
pop
nop
xchg
inc
push
test
call
xor
roll
sub
fcomps
add
add
cwtl
mov
sti
imull
sub
ljmp
scas
xor
inc
cli
insl
int
adcl
outsl
add
in
push
rol
jbe
mov
inc
mov
inc
dec
or
pop
lea
and
or
push
fninit
dec
push
mov
xchg
repz
mov
dec
inc
enter
imull
nop
xchg
fisttpl
pop
movsl
cmpsb
iret
clc
gs
lret
inc
xchg
scas
lahf
lret
int
aaa
int3
jbe
mov
dec
es
movsb
jecxz
fidivs
pop
gs
idivb
rcr
leave
push
add
jl
jne
mov
into
mov
aas
xchg
ret
push
cmp
notb
and
in
xchg
or
xchg
dec
into
das
sub
in
xor
push
pop
sbb
inc
or
call
inc
xchg
pusha
leave
add
jmp
xchg
in
lods
jge
push
cmp
pop
das
test
dec
jae
push
or
in
aaa
clc
sbb
in
negb
cmpsb
orl
or
fsubs
sub
scas
ljmp
loop
jbe
cltd
or
aaa
mov
sti
cli
pop
test
cmp
cmp
stos
test
lea
test
fcmovne
mov
dec
bound
add
into
fimuls
add
repnz
insb
mov
dec
mov
mov
mov
sub
lds
push
lods
in
jge
jns
sbb
subb
add
jge
jne
pushf
subb
push
or
xchg
fisttpll
cmp
mov
aas
sbb
pop
mov
dec
mov
pop
inc
push
adc
adc
mov
shll
and
mov
pop
add
cmpb
or
mov
inc
xlat
inc
stc
mov
mov
insl
mov
xor
mov
or
add
adc
movsl
cmp
cmc
out
jns
stos
xorb
mov
cmpl
lahf
dec
mov
mov
in
sbb
shrl
xorl
push
outsl
push
ret
loope
hlt
subl
cld
es
mov
jns
in
daa
xchg
sbb
lret
mov
outsb
divl
decl
test
jb
repnz
mov
test
pop
push
xchg
stc
inc
jne
sti
xchg
sub
mov
jecxz
int3
out
dec
pop
mov
mov
cmc
or
jns
cwtl
xlat
push
sub
shll
mov
sub
stos
push
cs
jae
stos
cmp
int3
sbbb
dec
jbe
scas
sbb
stc
in
mov
mov
out
mov
stc
cmp
icebp
scas
xlat
jne
shr
mov
mov
xor
push
rolb
jb
test
inc
inc
cli
mov
mov
xorb
sar
data16
dec
jne
and
pop
dec
xlat
mov
pushf
mov
pop
data16
dec
dec
lret
mov
xchg
or
inc
xlat
xlat
xchg
jne
and
jp
mov
add
add
orb
jnp
movsb
rolb
addr16
lds
push
and
sbb
xchg
sub
and
ljmp
pop
mov
mov
mov
adc
push
jbe
push
mov
adc
jb
imulb
das
jo
sbb
xor
inc
adc
stos
adc
mov
lcall
ljmp
cld
mov
mov
std
imul
enter
and
insb
icebp
cli
jg
sahf
ljmp
and
adc
rcrl
test
movsl
dec
icebp
jmp
stc
inc
hlt
fucomp
adc
es
push
into
xchg
icebp
add
cmp
iret
test
fnstenv
cmp
jecxz
enter
xor
pop
mov
loopne
fistpll
movsb
orb
ficomps
mov
imul
mov
and
leave
and
jb
loop
bound
sbb
int
sbb
insl
aad
dec
pushl
cmpsl
push
es
or
popf
cmp
lock
jns
sub
rclb
push
mov
mov
mov
adc
ret
fisubrl
adc
jmp
pop
test
or
fldenv
cmc
mov
dec
stos
push
outsl
fcoms
adc
fnstenv
jb
addr16
xchg
pop
xchg
bound
adc
adc
mov
ds
and
mov
dec
shlb
subb
clc
out
xor
or
mov
mov
and
lock
and
ss
xchg
clc
mov
shl
fidivs
push
fadd
jne
icebp
js
cmp
mov
inc
jle
out
lds
sub
bound
hlt
lock
lahf
cmc
out
adc
jmp
and
imul
mov
push
and
cltd
push
jo
mov
sahf
mov
inc
pop
cwtl
cmc
push
mov
inc
inc
inc
mov
in
push
inc
cmp
mov
cli
pop
aas
inc
icebp
mov
mov
stos
in
ljmp
loopne
insb
mov
dec
jge
popf
lods
or
fstpl
pop
paddw
mov
cmp
test
fwait
loop
jle
faddp
jmp
dec
repz
rcrb
lahf
ret
rorl
push
orb
mov
adc
inc
mov
xchg
push
jmp
or
jns
push
push
mov
div
rclb
repz
rcll
inc
mov
mov
loopne
repz
jmp
mov
pop
cwtl
lods
sbb
cmpsl
popf
cmpsb
adc
in
scas
push
std
rcl
dec
lds
push
icebp
pop
outsb
jmp
or
mov
test
xchg
or
dec
jle
pop
mov
scas
idivb
mov
pop
dec
sbb
in
sbbb
mov
push
cmpb
cmp
ds
push
jge
jl
mov
push
pusha
pop
or
sub
rcll
jle
inc
movups
pop
ds
pop
out
pushf
jecxz
xorl
jb
jmp
sbb
push
mov
std
scas
iret
daa
mov
insb
xchg
sbb
xchg
jl
jo
outsl
test
arpl
mov
into
ret
inc
adc
lcall
mov
mov
orl
mov
loope
int
mov
orl
rolb
cmpb
sbb
dec
clc
cltd
or
ficompl
adc
push
aad
inc
repz
fs
push
xor
dec
and
rolb
outsl
aas
mov
das
dec
pusha
lds
sbb
add
pop
fwait
mov
or
and
aam
test
lods
sbb
and
xor
mov
out
adc
mov
stos
jne
mov
das
mov
jp
clc
sbbl
push
adc
inc
nop
sub
movsb
ss
push
xchg
jmp
push
or
nop
mov
or
or
jle
cmpsl
fs
stos
testl
sbb
clc
int
add
ret
test
mov
jnp
in
mov
int
lods
mov
and
enter
stos
test
xor
cltd
pop
mov
sub
mov
addr16
insl
jno
cmpsl
mov
sub
es
fdiv
sub
push
ret
jo
decl
sbb
mov
stc
add
std
mov
orl
loopne
push
bound
insl
addr16
push
movsl
fldl
leave
shrl
mov
dec
push
test
pusha
dec
jg
jle
pusha
mov
repz
or
push
mov
or
xchg
mov
xchg
in
fsubrs
mov
aad
out
pop
nop
dec
inc
dec
pop
dec
pop
stos
add
popa
out
xchg
xchg
inc
xorb
push
mov
cmpsb
jns
mov
orl
push
and
xchg
scas
lret
pop
add
jge
or
and
jbe
aam
fistpl
mov
movsb
leave
ret
imul
pop
not
sub
cmpsb
dec
cmp
push
das
pop
decl
ljmp
and
inc
sub
mov
fnstsw
lahf
mov
jp
insl
mov
cmp
mov
test
out
cmp
mov
sahf
sbb
gs
rcr
jb
xlat
push
insb
mov
lcall
negl
inc
subb
sahf
cmpsl
icebp
enter
cwtl
call
sub
imul
or
lret
mov
andb
fs
push
and
push
nop
add
in
sub
out
xchg
and
sub
pop
add
mov
mov
daa
repnz
idivb
scas
fs
sbb
jmp
std
notb
and
das
jecxz
inc
arpl
xchg
mov
in
cwtl
sar
xchg
stc
stos
pop
pop
push
into
ljmp
ja
push
and
xor
pop
out
pop
push
pop
popa
fsubrl
push
mov
mov
out
add
lcall
mov
push
mov
mov
sub
pop
mov
cmp
stos
dec
ja
js
mov
into
sbb
ljmp
sub
aad
jne
push
rol
test
shll
sbb
testb
mov
out
mov
dec
mov
xchg
xor
fstpt
dec
andl
and
negb
scas
fwait
adc
sahf
ja
sbb
and
mov
xor
repnz
or
call
add
scas
stc
mov
mov
inc
or
or
pop
pop
iret
jb
mov
add
cmpsb
sti
push
or
out
dec
sbb
lahf
push
mov
aad
pop
lock
test
repz
xchg
jns
inc
outsl
scas
mov
inc
stos
adc
stos
jmp
test
outsb
pop
insb
xor
hlt
ljmp
iret
out
mov
notb
add
lret
hlt
repnz
std
ds
data16
sbb
xchg
mov
test
sbb
xchg
sub
jmp
jge
sub
or
rclb
jns
push
pop
adc
jb
xor
popa
xchg
test
mov
mov
jns
jmp
mov
push
test
mov
imul
cs
add
sti
jmp
fmull
mov
lcall
inc
jg
in
xor
mov
jns
mov
jo
outsb
cmpsb
imul
cs
mov
fwait
pop
pop
insl
addr16
jbe
movsb
cmp
cmp
and
jp
push
xchg
sbb
lods
jl
pop
aad
mov
mov
jl
mov
aad
sti
pop
pop
cmp
movsl
test
ljmp
jecxz
cmp
and
mov
mov
add
push
mov
hlt
aam
mov
aas
cltd
int3
in
inc
cltd
inc
filds
das
popf
loopne
scas
mov
adcl
insb
inc
movsb
test
fimull
loop
adc
test
std
lret
push
and
add
stc
js
out
pop
fnsave
nop
xor
jo
sbb
xchg
jns
into
and
push
lcall
in
clc
test
lock
addr16
lea
inc
inc
pop
faddl
mov
popf
test
das
out
pusha
test
stos
sub
push
pop
test
add
or
add
jb
int
inc
sahf
sub
out
jle
mov
mov
cmpsb
icebp
ret
cmpsb
xchg
mov
aad
jne
pop
jne
hlt
mov
xchg
sub
sbb
test
xchg
daa
pop
loop
jne
roll
in
pushl
loope
or
movsl
and
mov
and
jnp
mov
jecxz
and
push
mov
mov
and
cmp
in
adc
popa
movsl
jg
lahf
je
dec
cmpsb
imul
ljmp
je
mov
mov
dec
push
popa
sub
xlat
orl
fldl
imulb
sub
fldpi
sub
sbb
test
decb
lcall
mov
in
shl
fsubrl
in
incb
shl
cmpsb
daa
jl
xchg
les
mov
loop
mov
jne
jecxz
int3
cmp
push
inc
xchg
add
push
fsubr
dec
add
pop
push
out
in
adc
test
int
das
aam
dec
inc
mov
xchg
insl
adc
sbb
fadd
cmp
add
fwait
daa
or
fiadds
rcll
test
cwtl
sub
mov
in
icebp
or
sbb
sub
push
loope
shlb
push
flds
xor
jg
insl
jnp
imul
mov
dec
push
int3
rorb
loope
mov
jecxz
xlat
cmp
cmp
push
lcall
rorb
cmpsb
mov
push
jnp
in
push
mov
jnp
and
xlat
mov
adc
mov
mov
pop
sub
push
shrb
and
icebp
int3
lret
dec
add
push
jmp
inc
bound
mov
pop
stos
mov
or
sbb
fisttpl
mov
cmp
sti
cld
sbbl
pop
add
test
outsb
xchg
jle
inc
dec
and
scas
xchg
pop
fisubl
mov
cwtl
add
mov
loopne
cmp
sbb
fcmove
lock
sbb
sub
push
xor
adc
sbb
fdivrs
push
loop
sub
dec
lock
inc
mov
nop
adc
icebp
push
jb
out
jo
cmp
inc
adc
xor
pop
xchg
pop
mov
je
xchg
fcomi
das
les
cmpsl
xchg
lods
pop
sbb
push
insl
rclb
decl
mov
shrb
sbb
sarb
shrl
negb
adc
fs
jnp
mov
testl
jae
xchg
jo
lahf
mov
pop
addr16
push
aad
mov
jmp
mov
push
shlb
jmp
das
pop
mov
insb
aam
mulb
sbb
or
push
js
pop
pop
cwtl
xor
faddl
std
inc
mov
into
ja
test
push
repnz
push
shlb
popf
mov
mov
or
cmp
push
loopne
lea
loop
or
fildl
jae
es
inc
xchg
sbb
mov
dec
xchg
adcl
cmpsl
jno
test
mov
jp
pushf
mov
jne
jmp
les
inc
loopne
xor
sub
dec
outsl
cli
fwait
scas
sub
mov
hlt
mov
or
add
aad
xor
lds
mov
jbe
pop
pop
and
or
and
out
cltd
sbb
iret
mov
inc
in
sbb
shlb
mov
mov
sbb
outsl
mov
dec
je
ret
int
mov
mov
leave
test
xchg
fisubl
cmp
aam
xor
mov
push
leave
sti
imul
fdivrl
ss
pop
mov
mov
movsb
fstenv
repz
lret
jl
inc
pop
mov
in
gs
inc
in
push
sbb
sbb
xchg
insl
xchg
jmp
jae
testb
adc
xor
stos
mov
inc
cmp
ficompl
lcall
cwtl
mov
addr16
lods
jmp
das
add
adc
pop
add
mov
add
lods
shrb
cmpsl
scas
rorl
mov
mov
scas
cmc
and
mov
test
or
cmp
adc
insb
addr16
std
mov
arpl
ja
cmc
mov
clc
negl
sub
popa
mov
dec
push
ss
scas
or
jl
add
or
notl
movsl
push
sub
sbb
fwait
mov
jmp
gs
cmp
fimull
leave
dec
js
mov
popf
lods
pop
cmp
mov
mov
adc
enter
cmpsb
mov
call
mov
test
ficoml
imul
cmc
repz
ljmp
pop
sub
jecxz
lds
lods
int3
and
aad
dec
jb
icebp
in
movsb
ficoms
mov
pminsw
jo
je
fs
or
jbe
adc
orl
cmp
xor
sub
and
cwtl
xor
sub
push
mov
cmpsl
jne
jmp
xor
and
mov
or
push
jb
mov
test
pop
or
xor
fnstsw
and
icebp
sub
jp
loopne
repz
scas
xchg
dec
add
popf
dec
xchg
iret
xor
cmp
adc
pushf
call
cmp
ja
gs
imul
mov
imul
mov
mov
cmp
lret
inc
rcrl
scas
pusha
mov
mov
inc
cmpsl
insb
icebp
call
hlt
sbbl
xor
mov
push
mov
dec
iret
mov
jne
rcll
cmpsb
and
bound
repnz
mov
lcall
pushf
out
sar
stos
mov
pop
dec
pop
and
inc
iret
scas
cmp
jl
jle
stos
shrb
clc
push
sub
rclb
mov
int
xor
and
ljmp
iret
add
aad
je
cmp
aaa
push
pop
sbb
adc
shll
xor
int3
icebp
stos
xchg
pop
sbb
jno
ds
mov
cwtl
sbb
call
lods
lods
test
popa
sub
in
xor
dec
cli
dec
mov
lahf
push
pop
mov
dec
adc
stc
cmp
add
jge
jae
in
mov
inc
in
ja
xorl
sub
inc
pop
sbb
test
sub
mov
stos
pop
cltd
inc
fnstcw
dec
aad
arpl
in
loopne
insb
or
cmp
jns
cmp
mov
rcrb
loope
cltd
mov
out
mov
xor
ss
arpl
dec
pop
clc
cmp
orl
pop
xchg
rorb
int
cmpsb
xchg
stc
and
pushf
movsl
int
ljmp
xchg
push
cltd
roll
inc
and
sbb
sahf
cwtl
xchg
cmpsl
sbb
cs
imul
ret
xchg
and
push
into
mov
lods
mov
xchg
add
xchg
lods
mov
es
xchg
cmp
scas
xchg
push
mov
roll
xchg
cltd
jne
adc
cmp
add
pop
add
jbe
inc
xor
int3
push
cmp
jp
adc
push
lcall
mov
mov
int3
ljmp
sbb
push
pop
dec
sub
push
mov
in
rcpps
les
jecxz
push
pop
sub
addb
cld
stos
call
les
cld
imul
in
pop
mov
cmp
cs
or
ja
sbb
dec
jg
push
and
in
jae
lds
sub
cmpsl
mov
ret
add
push
push
mov
movsl
xor
mov
into
or
and
addr16
mov
sbb
out
pop
xlat
mov
mov
popa
mov
jl
push
rorb
mov
adc
add
test
dec
push
repnz
push
push
fstpl
mov
xchg
nop
ljmp
adc
mov
add
xchg
or
fcompl
or
mov
iret
xchg
repnz
scas
aaa
jbe
inc
pop
repz
dec
sub
shr
fiadds
fcomi
push
sub
xor
jl
cltd
jle
movsl
push
into
dec
fldl
int
daa
mov
out
mov
fs
div
jo
inc
lret
dec
jp
push
mov
mov
cwtl
aad
add
test
pop
jmp
popf
test
out
dec
mov
inc
mov
cmp
iret
or
push
lcall
mov
mov
inc
loope
xor
dec
mov
cmp
popw
hlt
in
iret
dec
pop
jnp
imull
or
dec
pop
dec
pop
push
imul
lcall
imul
lods
fstps
aam
add
out
xor
mov
out
fs
inc
push
daa
add
sbb
loope
stos
add
push
hlt
dec
mov
mov
pop
xchg
dec
enter
dec
xor
cld
inc
cwtl
lods
pop
add
adcb
pop
sti
push
sbb
mov
lock
mov
mov
dec
int
sub
ret
or
push
outsb
ljmp
stos
sbb
scas
mov
push
pop
cmpsl
jno
sbb
mov
or
outsb
out
pop
int3
pop
xchg
inc
cwtl
movsb
mov
and
push
pop
jecxz
hlt
mov
fcompl
add
in
divl
xchg
ljmp
add
pop
inc
pop
rorb
loop
jne
xchg
jg
jnp
or
rep
xchg
mov
das
out
and
mov
mov
lds
out
inc
mov
jl
dec
xor
jno
arpl
xchg
dec
xor
pop
sbb
push
sbb
out
mov
sbb
int
fcompl
inc
push
daa
out
cmpsl
out
into
mov
dec
mov
cmp
fiadds
hlt
shl
bound
fmul
insb
decb
cmc
cs
insl
arpl
lahf
jae
xchg
gs
popa
je
push
add
dec
push
mov
mov
pop
and
movsb
test
push
lahf
lock
inc
and
push
repnz
push
jmp
ds
and
cmc
xor
push
mov
pop
inc
inc
cld
popa
jl
les
stc
sarb
inc
les
jnp
xor
jns
mov
in
notb
mov
inc
inc
lds
and
mov
call
mov
ret
cld
in
fidivs
lret
cltd
mov
or
add
ret
dec
cmc
fisubrl
xchg
xor
push
jle
mov
ficoms
out
stc
roll
adc
dec
loopne
mov
cmpsl
gs
ficompl
push
cmp
mov
mov
in
jb
lods
ja
jg
pop
mov
sbb
xchg
imul
stos
jnp
mov
ror
out
retw
jle
sbb
gs
jg
push
orl
aad
pop
xchg
repnz
sti
or
leave
push
mov
or
xor
cltd
or
mov
mov
push
pop
dec
sbb
pop
outsl
adc
dec
fs
mov
in
pop
and
in
inc
inc
fidivl
mov
inc
ja
ja
jecxz
sbb
out
mov
sbb
mov
sarb
mov
mov
mov
cwtl
jge
icebp
sbb
out
pusha
cmpsb
xchg
test
fwait
movsl
or
lret
jb
out
push
mov
test
and
mov
or
outsb
cvtpi2ps
xor
call
jl
lods
loopne
push
dec
test
ja
push
lahf
inc
sahf
xor
fsubp
aas
pop
int3
lahf
sub
or
arpl
sbb
fs
lret
mov
loope
jno
pusha
lods
fs
xchg
sar
xchg
jae
mov
addl
js
mov
stos
popl
pop
loop
je
pop
loopne
ret
mov
mov
xor
adc
lds
lds
std
mov
mov
idivb
pop
jae
mov
inc
in
repnz
sbbl
lods
cmpsb
push
jl
rcll
aaa
sub
fstl
jae
xchg
sub
inc
rorl
je
inc
inc
mov
ret
cmp
test
push
and
ljmp
adc
test
jne
out
cwtl
sbb
xor
les
add
lret
push
mov
or
addl
aad
sub
scas
rol
sbb
out
movsb
cmp
loopne
mov
jg
or
jbe
jbe
or
subb
add
insl
push
imul
imul
scas
pop
jnp
inc
jnp
icebp
or
in
mov
xor
test
lods
cltd
sbb
push
insl
jns
inc
aaa
jae
shl
lcall
inc
nop
or
and
frstor
lcall
dec
mov
in
inc
adc
mov
adc
cmpsb
lret
faddp
scas
mov
push
inc
pop
aas
xlat
jge
and
lds
xchg
push
arpl
sbb
test
test
loopne
aas
cmp
or
les
clc
nop
xor
cmp
cmp
sub
lock
les
and
filds
cltd
push
divl
aas
daa
jbe
imul
out
push
jne
adc
jb
inc
std
xchg
dec
pop
and
in
push
sahf
cli
push
out
fmull
call
in
push
ret
dec
outsb
cmp
and
hlt
xor
mov
jnp
insb
sbb
daa
xchg
jmp
mov
imul
dec
les
movsl
int3
loope
ss
push
add
in
cs
cwtl
inc
lahf
add
or
test
aam
mov
pop
scas
sbb
loope
jle,pn
ja
and
push
cld
mov
inc
add
and
sbb
sub
jb
aas
int3
out
lahf
xor
push
xchg
clc
aad
inc
test
daa
xor
cmp
sub
cmc
jl
xor
inc
sub
ret
dec
rcl
addl
dec
iret
lret
stos
and
sub
xchg
xchg
test
insb
dec
and
xchg
test
cmp
or
dec
negl
bound
inc
sub
sbb
cmp
cmpsb
hlt
imul
inc
and
or
daa
imul
gs
mov
jge
push
dec
push
movsl
mov
fiadds
nop
and
adc
fnstenv
popf
aaa
mov
mov
jl
adc
scas
test
sub
add
sbb
sbb
jno
dec
insb
rorb
pop
pusha
gs
fs
fwait
ret
roll
push
nop
insl
push
mov
or
outsl
xor
mov
cmp
in
xor
neg
mov
roll
sti
adc
rorl
jne
je
push
mov
ret
testl
arpl
sub
pop
push
shr
data16
sub
lods
push
mov
out
outsl
daa
dec
push
std
dec
loope
dec
mov
inc
lods
sbb
es
nop
or
mov
cs
filds
lret
and
lcall
inc
xchg
stc
pop
add
cmpsl
mov
xchg
sti
je
dec
mov
add
bound
insb
xchg
lret
rcrb
add
mov
mov
enter
aas
mov
xor
xchg
inc
sbbb
add
dec
rcrb
jle
sub
sbb
cmc
test
jmp
sarl
adc
in
inc
jmp
add
mov
pushf
mov
ss
ror
int
icebp
cmc
xor
imul
push
jne
mov
sub
jae
pop
outsb
adcb
lds
aas
xor
inc
rsqrtps
or
fsubrs
fdivs
daa
jge
add
fwait
or
adc
test
jg
jl
std
fs
mov
sub
aaa
fwait
add
push
jns
pop
mov
nop
jmp
insl
mov
scas
shrb
mov
sub
sub
aaa
aaa
fdivrs
mov
lock
je
mov
xorb
scas
sti
add
inc
lret
imul
ret
in
stos
cmp
loopne
sti
sbb
xchg
jmp
aas
jg
xchg
pop
sub
sub
ds
das
and
movsl
or
add
mov
call
fidivs
add
sbb
sbb
inc
adcb
and
testl
aad
dec
mov
jp
jge
cmp
cmpsl
push
outsl
push
adc
xchg
inc
js
xor
les
es
sub
push
cmc
cmc
fimuls
mov
outsb
adc
clc
mov
mov
pop
pusha
push
out
mov
cmpl
sub
cltd
cs
jp
dec
pusha
mov
in
push
or
xchg
cltd
loopne
or
imul
jae
sbb
push
mov
mov
sbb
mov
mov
pop
inc
popa
scas
adc
cld
inc
in
lret
dec
int
adc
hlt
es
fs
push
dec
cmp
dec
std
cmp
mov
out
gs
or
cmpb
je
inc
and
jnp
xlat
jmp
daa
or
or
sub
mov
lods
mov
sbbl
sbb
xlat
rclb
cs
dec
adc
js
lock
stos
jmp
jp
dec
xor
mov
xor
mov
outsl
icebp
in
mov
cmp
lret
sub
mov
xlat
sahf
popa
xor
mov
int3
ret
cmpsb
jne
jp
mov
mov
push
and
idivb
push
sahf
lods
cmp
ja
jns
rcrb
hlt
sub
call
rcll
xor
mov
rcl
js
pop
push
in
add
jae
sub
in
adc
rcr
cmp
lods
inc
movb
adc
enter
dec
je
lcall
sub
sub
xchg
mov
add
sub
dec
insb
sub
ja
jae
sbbb
lret
hlt
out
pop
mov
gs
push
outsl
jle
fisubrs
ds
testb
scas
and
bound
mov
jmp
dec
imul
adcb
rcpps
ret
push
int
xor
push
lcall
int3
in
inc
mov
clc
out
scas
cmp
dec
cmp
js
mov
and
flds
out
pop
jb
aad
mov
pop
ss
lods
sbb
call
subl
ds
das
adcl
push
pop
loopne
add
or
std
ficoms
xor
xor
icebp
mov
mov
rcrb
loop
jg
mov
xor
jp
lods
pop
scas
mov
pop
and
rclb
sbb
repz
repnz
adc
clc
cmp
rolb
fnsave
cmpb
mov
test
bound
inc
stos
pop
jge
cmpsb
insb
or
adc
sbb
mov
dec
testb
sbb
or
out
clc
into
icebp
not
jge
xchg
or
mov
mov
pop
aaa
pop
addr16
out
mov
mov
cs
jg
data16
not
and
shrb
sbbl
loope
divl
inc
es
or
aas
and
dec
pop
mov
ret
scas
cs
mov
sbb
test
out
fidivs
mov
insb
sarl
fcompl
mov
dec
test
cmp
jmp
push
inc
mov
mov
ljmp
sub
push
xor
inc
inc
idivb
inc
pushf
xor
ret
test
jne
pop
xor
repnz
idivl
insl
mov
pop
cmp
or
mov
pop
add
jo
mov
aad
xor
inc
shlb
stos
cmp
es
stos
test
lods
mov
push
dec
pop
gs
and
rorl
pop
addr16
ja
stc
jmp
sub
add
fbld
push
inc
mov
ljmp
or
arpl
inc
pushf
dec
cs
add
pop
or
popa
inc
leave
push
and
aad
in
inc
nop
dec
inc
ja
out
cwtl
movsb
add
lea
jnp
jae
shrl
in
cld
xlat
mov
outsl
and
pop
subb
aaa
cmc
lret
data16
enter
sub
aas
cmpsb
loop
cmc
sub
add
add
outsb
jae
cltd
mov
nop
loope
push
addl
in
bound
push
fisubs
xor
int
aad
mov
add
sub
mov
out
add
lret
pop
sub
repnz
inc
clc
fmulp
ret
int3
jns
repnz
cmp
ss
cli
sub
fidivs
xchg
loopne
nop
mov
idivb
lods
cmpsb
int3
xchg
sub
mov
mov
cmp
mov
add
fldcw
addr16
and
add
sub
fidivl
adc
cld
mov
and
lods
out
jmp
adc
adc
sub
fwait
adc
in
jns
mov
stos
mov
adc
sub
mov
mov
loop
ret
or
sub
jnp
mov
push
push
shrb
cmp
jne
xorl
cmc
and
pop
fildl
ror
adc
outsl
pop
in
les
verr
cmp
pop
sub
repnz
or
inc
mov
test
inc
cli
std
adc
jo
jmp
in
jg
add
pop
push
mull
fbld
mov
das
adc
push
sar
dec
sbb
mov
jp
ja
sub
mov
cmpsl
daa
and
jmp
mov
popf
out
xchg
sahf
cmp
or
fiaddl
pop
mov
in
xchg
ja
pop
xor
sbb
lahf
cltd
in
aaa
mov
xchg
clc
mov
push
jns
cmpb
imul
jb
mov
and
pushf
lahf
imul
or
stos
sbb
ret
lcall
dec
add
mov
xor
in
stos
and
xchg
xorl
push
sub
mov
ja
push
sub
dec
push
aaa
mov
lret
outsl
nop
sub
xorl
popf
aas
addr16
rorb
movsl
dec
sbb
out
or
push
pop
push
dec
jge
jmp
cmpsl
xchg
push
add
add
xchg
inc
lret
mov
iret
sub
int
dec
sub
sahf
jne
add
xchg
mov
inc
mov
fstpt
icebp
jl
jge
cli
add
inc
jo
add
aaa
loopne
mov
jns
inc
cmp
mov
xor
cwtl
mov
or
lds
sti
movsb
cmp
hlt
lock
out
xor
dec
rcrb
push
xchg
inc
movsb
lcall
and
pop
into
mov
test
std
sbb
push
or
stos
mov
sub
ret
arpl
and
push
lock
mov
cld
call
int3
mov
dec
jnp
dec
aad
je
pop
xlat
inc
mov
sbb
mov
nop
pop
dec
jle
testb
xchg
jns
mov
push
jecxz
pop
sub
adc
lock
arpl
and
jbe
mov
imul
push
sbb
shll
call
and
jne
enter
mov
mov
sbb
adc
fs
out
sub
lods
divl
add
shr
movb
xchg
mov
xlat
pop
or
and
outsl
sbb
std
stos
rclb
enter
imul
mov
and
ret
xor
ficoms
add
test
push
out
push
or
int
mov
fstpl
mov
xor
inc
pop
xlat
mov
inc
push
push
sti
adc
fimuls
jg
lock
jp
ja
mov
loopne
inc
xchg
add
mov
pop
push
stos
mov
mov
test
fsubrs
in
xchg
xor
and
aaa
xlat
and
cltd
test
call
xchg
mov
inc
jno
add
daa
arpl
and
inc
aam
mov
jmp
mov
or
adc
nop
xchg
addr16
push
iret
cmpsb
lods
in
dec
aad
out
jnp
jne
ss
mov
shrl
daa
inc
cld
lcall
daa
sbb
leave
lret
add
pop
mov
or
mov
jae
mov
adc
jge
cmp
cmp
enter
lods
lock
cmpl
cli
jp
arpl
out
mov
mov
loope
andl
repnz
int
cmpsb
in
lcall
leave
add
mov
mov
rol
je
inc
jmp
shlb
fistps
add
lea
lret
sub
shlb
rol
cwtl
dec
push
mov
les
nop
mov
shlb
pop
inc
out
dec
test
shl
je
cltd
outsb
stc
inc
loop
fistpl
dec
fldt
push
xchg
push
mov
out
inc
mov
or
pop
lock
jmp
dec
or
mov
cmc
mov
push
pop
loopne
or
subb
sbb
mov
iret
ja
dec
mov
into
pop
out
iret
in
pushf
sbb
outsl
mov
mov
jge
xchg
shrl
dec
xchg
add
aas
mov
sub
sub
out
mov
cmp
pop
adcl
xorl
jo
and
mov
sub
sub
out
xchg
pop
aam
ret
push
and
mov
xor
cmp
int3
sahf
jnp
popa
repnz
jno
rcl
inc
mov
mov
mov
jb
int3
and
pop
sbb
rcrl
mov
xor
sar
cmp
lret
pusha
pop
push
test
mov
mov
push
push
sbb
loop
movsl
stos
jp
testb
cmp
cmpsw
fdivp
sbb
push
imul
xor
push
xchg
jle
les
jno
adc
jb
rcrb
mov
or
js
pushf
es
push
dec
and
cli
push
and
inc
loope
xchg
std
popa
adc
xchg
fcompl
cmp
xor
mov
rcrb
fldenv
mov
push
sahf
cmp
mov
dec
incl
int
mov
add
and
test
add
jg
scas
xchg
shlb
pusha
sub
jbe
loopne
fistps
dec
pushf
mov
mov
mov
xchg
mov
xor
pusha
cli
xchg
pop
jg
dec
sub
dec
ss
shll
push
imul
gs
pop
cs
mov
jge
je
shl
fcom
ss
movsl
jb
insb
inc
inc
int3
test
lods
pop
and
fwait
mov
and
xchg
mov
loope
or
pusha
call
pusha
mov
nop
jp
jae
mov
notb
iret
enter
or
ret
test
ss
dec
divl
mov
push
lock
mov
inc
mov
mov
in
je
ja
shrb
xor
loope
insb
and
lods
and
mov
sbb
and
js
ret
add
das
adc
mov
mov
push
or
cld
lods
dec
pop
push
dec
mov
sbb
jno
pop
mov
or
sti
inc
pop
mov
jg
int
fcoms
cmp
or
sub
push
push
mov
jmp
pop
andl
je
and
and
pavgb
outsl
shrb
stos
lret
add
xor
hlt
adc
sub
mov
mov
sbbb
fcomp
sub
movb
shll
sarb
fdivp
and
xchg
das
cwtl
push
jae
insl
mov
rcrb
std
push
cmp
out
xchg
push
or
xchg
shl
lods
mov
mov
fadds
mov
lods
sarb
add
jmp
sbb
pop
and
jbe
jns
lock
mov
scas
loop
mov
sub
leave
push
push
aad
xchg
xchg
push
data16
pop
sbb
sbb
adc
pusha
push
push
orb
mov
push
or
orb
stc
xor
cmp
loop
ss
ficoms
fcompl
out
rorl
or
stos
mov
icebp
pop
aas
out
mov
movsb
push
push
and
insl
jb
or
fldcw
xor
pop
mov
or
clc
xchg
cli
adc
cmp
sti
test
mov
insl
outsl
icebp
jne
mov
sbb
sub
add
sub
add
sub
inc
push
hlt
add
and
pop
lahf
dec
mov
xchg
out
es
or
insl
aad
fs
jno
mov
xchg
or
xchg
fwait
cwtl
add
rclb
js
adc
cmp
in
vprotw
add
add
adc
rcrb
push
pusha
pop
out
inc
iret
sbb
inc
push
fisubrs
sbb
pop
push
sub
adc
push
push
subl
cld
push
mov
jnp
sbbb
sub
mov
sbb
xorl
repz
scas
xor
loopne
mov
pop
pusha
pop
mov
outsl
push
test
mov
fisttpll
rolb
mov
xchg
push
sub
mov
cmp
in
iret
or
leave
xchg
adcl
dec
iret
and
test
adc
xchg
mov
jne
or
or
fimull
or
hlt
and
cmp
xor
push
or
in
sbb
scas
inc
xlat
push
cmp
cmp
jmp
int3
lods
xchg
mov
add
ljmp
lcall
and
or
lock
out
popf
imul
jl
std
arpl
xlat
daa
clc
pop
movsl
cmpsl
mov
add
ffreep
jno
lahf
ret
or
insl
shr
or
loope
stos
xchg
cs
icebp
cmpsb
repnz
addr16
and
mov
mov
out
test
dec
push
push
xchg
cltd
pop
mov
pop
inc
fstl
popa
stos
xor
add
lods
faddl
bound
ja
and
jb
ret
out
push
arpl
mov
popf
imul
cmpsb
mov
aas
out
sub
xchg
dec
rcrl
cmpsb
jge
dec
cmp
add
and
jb
inc
mov
les
gs
jnp
sarl
pop
lods
test
xchg
sbb
in
cld
adc
bound
mov
sbb
sbb
data16
jnp
das
add
std
movsb
lods
roll
add
in
sub
inc
cmp
inc
cmp
adc
jmp
add
and
or
jne
push
jecxz
imul
adc
jne
sub
add
pop
sub
in
in
xchg
and
ljmp
mov
js
aam
mov
sub
ret
aad
cltd
cvtps2pd
adc
movsb
sahf
xchg
push
and
sbb
dec
xor
das
pop
jae
jbe
mov
add
xor
xchg
je
pop
mov
or
cmp
push
arpl
dec
lcall
movsb
aas
dec
sub
xchg
pushf
xor
fs
jl
mov
lahf
mov
jae
push
jae
xor
pop
outsb
push
xchg
insl
xchg
xchg
lret
push
imul
das
shrl
or
enter
shlb
pop
jo
movsb
test
mov
and
mov
sub
insb
sub
mov
xchg
mov
fistl
movsb
int
test
push
sbb
mov
addr16
test
pop
loopne
pop
cmp
xchg
popf
push
add
pop
in
add
xchg
add
pop
nop
xchg
cmpsl
mov
js
movsb
test
dec
mov
jmp
xchg
lock
push
mov
scas
push
mov
daa
fiadds
ret
cmp
xor
inc
push
sarb
jge
push
pop
and
cmp
repz
push
push
test
inc
aas
pop
cmc
rcl
int
stos
xchg
test
aad
lods
pop
aas
icebp
mov
fistl
ret
inc
popf
mov
sub
dec
scas
pushf
in
dec
out
jmp
sahf
leave
int3
adc
movsb
nop
movb
xchg
mov
jbe
pop
repz
jno
jmp
pop
xchg
inc
sahf
imul
and
lea
test
lret
xchg
push
dec
fwait
in
int3
loope
jp
arpl
sbb
sbb
in
pushf
mov
insl
cmp
imull
movsb
jns
lds
cld
push
ret
aas
jl
dec
sahf
aam
or
iret
lds
mov
fwait
add
mov
nop
je
lcall
test
aaa
pop
cwtl
call
out
pop
push
jae
repz
mov
int
adc
cmpsl
loopne
pop
mov
lret
or
bnd
mov
inc
fxrstor
pop
int3
out
sub
add
jecxz
loopne
in
mov
imul
sbb
sbb
pop
sbb
stc
mov
pop
fcoml
stos
cs
sahf
xchg
pop
jp
rol
hlt
and
ret
sub
mov
add
adc
stc
push
jns
pop
mov
aam
mov
pop
filds
int3
xchg
lods
and
out
mov
inc
mov
ljmp
and
mov
xor
js
je
mov
test
aad
cmpsl
mov
mov
pop
push
jne
pop
into
jl
mov
xchg
add
testl
inc
xchg
aaa
pop
mov
pop
mov
add
out
push
pop
lods
xchg
aas
mov
sub
movsb
mov
dec
mov
lea
mov
clc
xchg
or
push
clc
decl
xor
inc
mov
sbb
stc
je
in
push
jb
mov
notl
and
imul
leave
dec
inc
lea
mov
rcr
cmp
cwtl
pop
push
in
fisubrs
xlat
aad
adc
add
sub
lcall
jnp
test
inc
push
out
mov
xchg
aad
int
iret
sbb
jmp
inc
popf
xor
xchg
pop
data16
loopne
hlt
mov
and
leave
ss
push
inc
cmp
scas
inc
mov
cmp
push
jmp
jmp
ds
ljmp
scas
xchg
push
mov
sub
lret
jne
lds
mov
jg
adc
xor
jne
sub
pop
adc
adc
std
test
in
sub
imul
cltd
shl
and
clc
xor
pop
test
add
ljmp
push
mov
or
lcall
pushf
dec
and
fisttps
rcr
push
enter
aad
sbb
pop
push
bound
push
fwait
sbb
pushf
mov
lret
pop
shl
das
call
pushf
push
loope
decb
jbe
jecxz
dec
xlat
push
ja
imull
fstps
lret
jo
push
dec
call
iret
dec
pop
in
and
mov
xchg
in
or
stos
add
and
adc
lods
daa
ljmp
push
fsubl
adc
dec
mov
mov
cmp
aam
out
out
repnz
sbb
and
and
fdivrs
arpl
and
arpl
adc
and
xor
cmc
sahf
jmp
imul
repz
mov
fldl
in
mov
test
jl
cmpsl
push
add
jg
ss
xor
cmp
outsb
nop
les
fisubl
jae
lret
out
orl
iret
mov
xor
orl
ljmp
out
stc
sbb
mov
in
insb
popa
sti
movsl
gs
fldl
out
xor
cmp
mov
out
push
pop
jns
je
lret
xor
stc
mov
cs
xor
enter
xor
in
xchg
std
or
push
iret
jne
mov
or
daa
fsubs
jmp
fcoml
xor
lods
loopne
ss
push
ja
or
pop
mov
in
or
mov
ljmp
out
sub
stc
test
out
mov
dec
inc
dec
sbb
cmp
les
mov
push
xchg
inc
or
or
iret
pop
imul
enter
stos
jb
stos
push
adc
mov
or
pop
das
aas
cld
xor
movsl
xor
dec
lea
lret
inc
iret
fwait
dec
dec
div
jle
mov
popa
shrb
ds
jbe
and
jo
jnp
mov
out
aam
inc
mov
int3
xchg
mov
cltd
xor
cmp
or
stc
in
add
mov
xlat
stos
enter
jmp
sub
stc
std
push
in
jg
loopne
dec
rcll
popf
jbe
mov
jp
and
mov
mov
xor
jne
jecxz
arpl
adc
sub
adc
jb
lret
mov
shll
jbe
divb
xor
shrb
addr16
xor
es
jbe
pop
lret
jno
movsb
mov
shlb
sbb
test
lock
aaa
sahf
mov
sbb
inc
or
mov
insl
add
fwait
and
test
ljmp
idivb
dec
xchg
data16
fs
notb
popa
adc
cmp
repz
orb
scas
push
mov
mov
fisubl
mov
xor
ret
inc
popa
lcall
out
fildl
push
lds
pop
add
xlat
push
mov
pop
clc
and
cwtl
dec
hlt
in
aad
push
inc
test
int
mov
inc
mov
push
ja
xor
aad
fimuls
je
sbb
inc
rol
ljmp
rcl
movaps
pop
add
out
js
push
ret
fs
or
jp
mov
bnd
jl
xchg
repnz
sarb
push
mov
mov
mov
xor
movb
and
in
mov
sti
loop
xor
sbb
into
adc
pop
mov
mov
jbe
aaa
xchg
adcl
cmp
imul
movsl
in
add
aaa
pushf
lods
fxtract
lret
jb
int3
fs
inc
in
pop
mov
xchg
ljmp
aad
pop
push
xchg
into
inc
pop
ffree
fwait
cltd
insl
push
cmpsl
fistps
cmpsl
outsb
push
out
mov
mov
mov
mov
mov
lret
sbb
mov
sub
mov
outsb
mov
mov
cmp
fisttpll
inc
mov
mov
sub
popa
test
out
idivb
dec
stc
cmc
xchg
out
inc
mov
in
into
and
icebp
stc
fwait
bound
mov
cmc
lcall
popf
cmp
lods
std
xor
mov
mov
inc
outsb
nop
dec
push
cmc
dec
xchg
xchg
es
xor
test
sub
adc
scas
or
push
test
daa
cli
jmp
popa
out
mov
mov
and
sbb
in
lods
or
cld
mov
loopne
mov
sub
jle
mov
lret
adc
jo
adcb
enter
xchg
imul
outsl
xchg
pop
sar
loopne
maskmovq
negl
test
cltd
in
cmp
jl
ljmp
xchg
loop
out
jns
dec
inc
movsbl
sbb
adc
xor
jecxz
xor
mov
add
push
xchg
aas
adc
mov
sbb
std
mov
sbb
cld
inc
add
adc
mov
mov
mov
lock
ljmp
inc
in
jmp
fsubrl
dec
aas
fistpll
and
std
lret
jae
jmp
pop
dec
les
scas
mov
pushf
push
cmp
mov
sbb
inc
mov
adc
mov
push
push
enter
arpl
dec
sub
pop
add
xchg
adc
sbb
insl
fiadds
shl
lock
adc
lret
iret
test
pushf
and
jmp
test
cmp
sub
push
xchg
xchg
xchg
stos
out
jno
lods
ds
adc
in
cmp
pop
lcall
pop
testb
mov
sbb
jge
cltd
dec
push
pop
push
dec
sbb
cmp
xchg
jmp
ja
jo
ljmp
pop
movsl
cwtl
mov
cli
fs
sub
xchg
cmp
jl
ficompl
adc
cli
mov
cmp
movsb
pushf
jle
jns
adc
mov
cltd
xchg
stos
or
out
xchg
cli
xchg
and
cmp
fstpl
pop
mov
mov
pop
es
inc
pop
add
cltd
stos
sub
push
cli
push
sub
adc
popf
jo
jmp
inc
jo
je
cmpb
std
xchg
jno
add
xor
pop
imul
lock
jae
jge
gs
je
jbe
insb
cmp
jae
adc
or
push
sbb
hlt
jmp
ja
xor
pop
insb
cmpsb
dec
push
sbbb
je
xor
xor
sti
pop
in
scas
data16
cwtl
xchg
fisubs
pop
movsl
mov
pop
ss
ret
xchg
das
jo
mov
shrl
shlb
cmpsl
cltd
mov
xor
cmp
pushf
outsb
shl
movsb
fisubrl
sarl
inc
xlat
scas
dec
jmp
sub
icebp
enter
pop
inc
jmp
or
push
fwait
pusha
cmp
mov
push
inc
sub
les
aad
hlt
ja
and
insb
fsts
ret
fwait
ja
scas
mov
xor
or
xor
in
add
fmuls
pop
lcall
xchg
stc
dec
xor
add
movl
shrb
insl
orb
bound
mov
mov
mov
and
lds
insb
insl
mov
out
inc
in
jecxz
cmp
sarl
pop
sbb
rorl
sarb
imul
mov
lods
sbb
loopne
inc
sbb
into
in
sub
add
add
jg
mov
nop
jmp
cmp
xlat
fwait
push
cmp
daa
outsl
sbb
pop
arpl
out
pop
data16
sbb
icebp
sub
mov
push
mov
jno
out
xchg
test
mov
xchg
push
fmuls
repnz
movsl
andl
pop
mov
or
dec
cltd
mov
inc
or
mov
in
scas
mov
fcmovbe
push
insb
lock
and
jecxz
cmp
scas
cmp
mov
cltd
fldt
lahf
mov
stc
xchg
pop
sub
nop
les
jo
xchg
jle
sbb
lds
jbe
mov
movsb
in
add
je
cmp
mov
mov
dec
movsl
inc
or
dec
ret
pop
ljmp
mov
push
mov
fistl
jl
imul
test
pop
fnsave
int3
loop
dec
pop
pop
insb
sbb
mov
xor
shlb
lret
jg
xchg
repnz
lret
lahf
mov
xor
push
mov
mov
test
popf
repz
inc
adc
jns
push
push
and
lahf
jb
mov
fisttpl
adc
jmp
pushf
popa
jbe
scas
pop
repnz
outsb
sub
adc
into
adc
mov
lds
hlt
sub
stc
pop
into
aaa
xor
mov
filds
stos
mov
xor
jne
imul
repnz
cmc
dec
je
jmp
xchg
mov
cwtl
inc
pop
jp
jp
mov
push
push
push
sbb
add
cmpsb
es
pusha
movsl
daa
enter
jne
lcall
int3
mov
pop
sub
and
push
out
dec
and
mov
dec
cmpsb
xchg
xchg
push
imul
xlat
addb
xchg
cmpsl
scas
movsb
inc
outsb
lods
rcl
test
ljmp
daa
sbb
adc
jmp
nop
sarb
and
inc
cli
popf
dec
jnp
sbb
xorl
divl
flds
mov
jle
mov
fidivl
ret
xor
stc
repz
xor
fistpll
outsb
sbb
pop
push
jl
push
push
sub
mov
lahf
pop
sub
fsts
xor
aad
rcr
xchg
or
sarb
mov
movsb
pop
cmp
gs
shll
ss
popa
shrl
das
push
in
flds
cmpsl
flds
lret
or
pop
xor
sub
cs
dec
movsl
test
dec
mov
sub
ldmxcsr
sub
orb
mov
inc
mov
clc
int
mov
scas
je
mov
in
popf
ja
inc
xor
shl
cmp
or
mov
cmc
imul
cmp
dec
push
push
pushf
pop
xchg
dec
and
add
inc
dec
inc
cmp
jmp
lahf
or
test
sbb
cmp
adc
cltd
mov
xchg
cmp
sti
push
mov
aam
and
repnz
shrl
xchg
dec
popa
gs
es
scas
aas
sti
sub
dec
rcll
cli
inc
cmp
fsubrp
test
mov
add
jp
in
lock
cmpsl
add
mov
jl
int3
arpl
jo
pop
in
pop
inc
adc
xchg
jae
es
test
sahf
xor
ret
shrd
faddl
loopne
xchg
movsb
les
sahf
pop
clc
inc
dec
aam
jmp
sbb
pop
push
jae
mull
mul
sbb
popa
ds
out
xor
iret
add
clc
inc
scas
xchg
movzwl
int3
in
add
shll
inc
dec
pop
mov
mov
pop
test
pushf
xchg
push
mov
xchg
mov
adc
sbb
cmp
mov
fnstenv
or
jb
mov
rorl
jg
or
or
cmp
add
pop
dec
lock
nop
es
popf
fdivs
lcall
dec
xor
mov
cld
mov
pushf
pop
mov
inc
xor
call
push
mov
and
xor
adc
sbbl
inc
jae
into
mov
adcl
xor
scas
aad
jb
test
daa
out
sbb
aaa
inc
daa
cmc
xchg
orb
cli
jecxz
std
pop
push
popa
out
fstps
mov
mov
mov
data16
cmp
inc
push
test
icebp
xchg
int
fistl
cld
repz
cmp
cmpsl
inc
cmpsl
daa
stc
add
fwait
inc
into
xchg
or
ja
shrb
jge
scas
les
bound
insl
jne
mov
movsb
in
clc
ja
sbb
fwait
add
lret
and
or
jp
and
rorl
lcall
fmul
push
sbb
xchg
dec
repnz
cmpsl
sbb
nop
lcall
or
push
xor
jne
adc
ficompl
jge
push
aaa
add
subl
sub
mov
adc
mov
cmpsl
loop
jbe
std
icebp
divl
out
xchg
adc
cmpsl
cmp
cmp
pop
xchg
cmp
pushf
and
fs
cmp
and
test
imul
push
es
xchg
fistps
les
add
ret
repz
adc
out
test
das
push
in
mov
mov
pop
pop
and
or
jl
xchg
stos
or
popa
loopne
sbb
xchg
cwtl
pop
movsb
je
rcrl
pop
loopne
sub
xor
push
push
pop
int3
inc
sub
test
mov
nop
mov
xor
mov
ret
jg
in
popf
out
push
dec
add
sub
pop
jle
sub
imull
stos
pop
sub
or
or
sub
es
fnstsw
int3
shl
cmp
push
fistl
jl
pop
sub
or
int
fldcw
xchg
hlt
fwait
fs
out
cwtl
or
dec
sub
lcall
xchg
fs
fwait
lahf
out
das
cli
cli
popf
and
dec
push
xchg
mov
popf
sub
hlt
fcmove
mov
iret
pop
subl
xor
pop
test
leave
inc
add
mov
jbe
or
sahf
jp
in
sub
inc
fs
xchg
pushl
mov
imul
xlat
xchg
mov
jl
popa
jmp
xor
xlat
push
cmpsb
sbb
mov
push
push
stos
add
mov
dec
pop
shrb
adc
lret
pop
xor
movsl
aaa
or
xchg
and
adc
push
cmp
inc
inc
or
push
hlt
jb
push
icebp
mov
in
arpl
xchg
mov
add
mov
cmp
mov
cmp
push
aaa
ds
or
fwait
push
jae
adc
cwtl
mov
and
adc
call
inc
pusha
fisubl
jo
scas
mov
aaa
mov
inc
out
mov
pop
cld
adc
mov
mov
mov
scas
mov
xlat
mov
lcall
push
inc
bound
jnp
cmp
cmp
sub
in
mov
hlt
iret
lds
loop
icebp
out
pop
mul
jl
inc
sub
jno
xchg
dec
dec
xor
adc
jp
adc
loope
jg
dec
pop
push
test
inc
push
int
divb
xchg
add
data16
xlat
jb
xchg
js
iret
sysexit
jns
pop
jne
test
cmp
jle
xchg
inc
retw
sahf
sbb
jge
fnstenv
fdiv
mov
pop
pop
adc
sub
pop
aas
loope
cmpsb
cld
xor
push
cmp
mov
daa
dec
loopne
xor
aad
cmp
out
or
stc
aad
pushf
push
test
xchg
push
fsubr
jg
cmc
xchg
xor
ret
fscale
lods
cmp
arpl
inc
inc
dec
add
dec
mov
pop
xchg
mov
pop
xchg
dec
xor
mov
repz
lahf
inc
jle
xchg
xor
mov
iret
jns
push
or
jle
lods
dec
scas
xchg
je
or
loopne
movsb
call
loop
mov
leave
mov
clc
cmp
fwait
inc
add
popf
cmp
dec
data16
push
jno
sbb
fnstcw
inc
lds
mov
out
stos
shrb
jne
jmp
sahf
ljmp
and
test
mov
roll
das
out
mov
ds
fildll
mov
fcoms
xlat
loope
lods
mov
rcrl
cwtl
hlt
jle
repnz
or
pop
enter
pushw
lret
cmpsl
add
mov
fs
aad
dec
in
mov
leave
and
xor
mov
jnp
ja
aad
or
xlat
mov
popa
imul
in
jne
jmp
mov
int
adc
jne
cmpsb
adc
push
daa
xchg
shll
mov
and
shll
jl
sti
xchg
ret
dec
jmp
fisttps
scas
and
cmp
mov
mov
or
cli
xor
push
lods
in
inc
js
or
aam
sbb
xor
cmp
lcall
pop
jo
and
xchg
pop
adc
pop
lret
jecxz
mov
or
mov
jle
pop
ret
cmp
bound
cs
sti
ds
pop
dec
inc
or
sub
xchg
inc
cmp
insb
push
sub
daa
sbb
push
les
fildl
jmp
pushf
imulb
push
andl
pop
andl
push
mov
je
bound
in
mov
mov
mov
inc
pop
shlb
sbb
mov
adc
cmp
add
mov
mov
enter
adc
xor
ljmp
jle
cmpsl
push
or
mov
nop
push
sbb
ljmp
test
stos
push
pop
addb
lds
repnz
pop
push
rcrb
rclb
inc
mov
decl
mov
sbb
pop
cld
xor
mov
addb
adc
and
or
hlt
dec
push
arpl
lret
xor
push
test
rclb
int
xor
int
fisubrl
add
cmp
sbb
hlt
xlat
icebp
imul
pop
pop
ficompl
rcrl
shld
mov
in
jnp
cltd
or
jmp
cmp
inc
xchg
jg
aas
push
and
fs
adc
jns
jmp
push
push
leave
pop
daa
inc
sbb
adc
xor
pop
mov
dec
test
rclb
movsl
sub
bound
adc
cld
data16
mov
movsb
mov
jmp
or
movsl
xchg
jb
jbe
fbld
cmp
inc
mov
sub
or
lcall
out
lcall
cmpsb
sub
movsb
and
mov
xchg
sub
dec
out
call
inc
test
inc
xchg
pusha
leave
mov
inc
scas
hlt
and
jb
mov
int
jg
inc
test
sub
iret
push
into
bound
push
sub
inc
add
gs
fdivr
pop
and
lock
cmp
push
insl
push
lds
into
pop
lds
inc
sbbl
sbb
mov
bound
cltd
and
popa
daa
mov
repnz
ret
jle
jbe
jns
testl
or
pop
jp
rcrb
cmp
scas
rcr
xor
into
adc
or
sub
dec
sbb
xchg
cmp
cmpsb
lods
out
mov
out
inc
jmp
fdivrs
stc
ret
es
dec
es
inc
xchg
insb
lea
in
jge
mov
gs
sub
lods
add
mov
mov
jo
sbb
add
push
adc
outsb
ss
dec
nop
adc
into
mov
xchg
icebp
shll
add
popa
mov
addr16
clc
fdivs
les
test
fldl
js
xchg
add
fcmovne
shlb
int3
jge
xor
mov
jl
in
xchg
sbb
out
mov
and
loop
xchg
addr16
push
dec
pusha
loope
divl
aam
xor
dec
jno
fdivr
sahf
std
orl
pusha
jmp
jge
call
mov
xlat
stos
mov
in
lret
movsl
outsl
lds
push
dec
mov
sub
stos
lret
data16
xchg
ljmp
test
add
xor
mov
cli
xchg
in
adc
enter
sub
clc
roll
and
out
insl
add
ds
dec
cmp
push
popf
mov
iret
shll
outsl
cs
pop
lahf
in
push
cmpsb
push
ljmp
sbb
imul
jne
add
jns
call
dec
xchg
shlb
pop
lods
and
pop
mov
or
inc
jmp
dec
jge
lret
push
es
cmpl
mov
mov
add
cmp
sbb
in
bound
popf
pop
cli
int3
jnp
xor
ror
movsb
loop
into
jne
jge
ss
adc
inc
jg
adc
sahf
insl
mov
add
mov
lods
test
popa
or
mov
add
bound
xor
inc
cmpsb
std
and
movl
mov
cmpsb
jl
dec
aad
repnz
jnp
aaa
push
mov
adc
rcr
jge
pop
stos
mov
loop
cmpsb
stos
inc
add
add
cmp
pop
mov
leave
cmc
jae
repz
jl
dec
xor
lcall
pop
sbb
jne
mov
in
and
xor
sbb
xchg
mov
outsb
xchg
test
out
push
jae
and
dec
shlb
jbe
dec
mov
push
jbe
into
mov
lock
pusha
dec
sbb
outsb
ret
dec
cltd
sbb
mov
jp
lock
dec
push
inc
mov
adc
ja
and
pop
ja
push
jbe
jmp
cwtl
gs
insb
fwait
xchg
orb
pop
mov
int
inc
das
pop
mov
sarl
xchg
jmp
push
loope
stc
push
push
cmp
sbb
in
push
outsb
mov
xchg
or
rcl
add
mov
xchg
lahf
lock
imul
loopne
xchg
fcmovbe
out
repz
push
xchg
cmpsl
xor
pop
mov
or
xchg
nop
jmp
idiv
into
rclb
add
repnz
or
lcall
ja
jp
clc
sub
icebp
cmp
mov
int3
pusha
add
push
ret
cld
inc
mov
cmpsb
pop
cmp
pop
fwait
roll
mov
jne
dec
leave
test
inc
xor
in
repz
stos
mov
cmp
mov
jne
leave
icebp
mov
pusha
addr16
inc
add
dec
mov
dec
cmp
and
ja
xchg
std
mov
outsb
cmp
call
stos
std
repz
inc
bound
jns
mov
xchg
cs
push
or
dec
ljmp
out
jmp
sub
mov
dec
stc
sub
mov
in
inc
data16
mov
lods
or
lds
cmp
push
notl
rcrl
ja
pop
cmp
cmpl
mov
lcall
mov
in
and
mulb
notb
lahf
inc
inc
jl
mov
jg
mov
andl
rcr
fwait
jae
or
jae
jecxz
sub
mov
fs
xor
hlt
push
or
pop
sbb
fdivrs
int
stos
lcall
xor
mov
mov
mov
add
ljmp
test
push
sbb
daa
jle
fsubp
es
lcall
outsl
lock
hlt
cmp
dec
pop
out
jle
mov
jg
adc
ja
loope
scas
stc
sbb
xchg
movsl
pop
testl
adc
popa
jns
pop
dec
mov
ja
or
mov
mov
rcrb
mov
or
push
ret
xor
or
enter
push
inc
mov
cmp
loopne
and
aas
dec
pushf
sbb
mov
repnz
nop
std
mov
xchg
shrb
mov
in
mov
repz
dec
and
xchg
pop
pop
sub
out
das
mov
dec
add
mov
subb
add
shl
in
adc
test
mov
dec
xchg
int3
inc
push
or
mov
xchg
mov
xchg
dec
pop
mov
mov
shll
lret
mov
gs
aaa
xorl
orl
xlat
lahf
int3
arpl
jne
push
sbb
sbb
jb
ds
pop
test
rcrl
or
xor
aad
pop
mov
js
adc
xchg
pop
or
lods
dec
inc
dec
cmc
or
out
push
mov
adc
mov
aam
scas
outsb
push
nop
xlat
call
lods
ret
pop
mov
mov
jo
ljmp
push
popw
or
icebp
int3
sub
shl
cli
mov
rol
mov
sbb
test
inc
mov
cwtl
jns
mov
idivl
ficoml
cs
jg
push
out
adc
mov
add
xchg
faddl
mov
mov
add
leave
imul
xchg
or
jmp
dec
int
jns
dec
adc
lds
fs
js
cmp
xlat
test
mov
jbe
cmc
mov
sbb
mov
lret
adc
jne
lods
dec
rclb
sbb
int3
addr16
dec
mov
test
adc
aas
mov
add
or
in
fsts
out
mov
das
mov
and
add
pop
sub
imul
mov
ret
out
xlat
in
jecxz
inc
and
xchg
int
pop
dec
bnd
enter
mov
xor
mov
inc
gs
mov
lahf
out
imul
and
enter
daa
mov
dec
out
pop
outsl
push
decb
ss
repz
cmpsl
sti
test
insl
lds
test
push
shrb
sahf
int3
lcall
push
test
daa
pop
xchg
fcomps
les
imul
xor
push
inc
sti
bound
rcrb
cltd
push
pop
outsl
pop
imul
jnp
sahf
int3
add
push
jae
popa
inc
cmpsl
mov
xchg
scas
jb
repz
cld
nop
test
mov
repz
pop
jo
sub
push
cmp
out
pop
push
mov
adc
inc
push
mov
dec
cld
js
dec
rclb
xchg
add
clc
imul
pop
pop
mov
mov
aaa
pop
mov
cmc
lea
mov
pop
int
push
iret
rorb
pushf
test
or
mov
sub
dec
fiadds
js
jno
dec
push
rcll
das
cmpsb
jge
sbb
ficomps
lock
sbb
add
icebp
mov
push
sbb
push
xchg
xlat
adc
sti
repnz
jp
movsb
out
xor
cmp
dec
xchg
inc
mov
test
cli
dec
cmp
loop
movsl
dec
nop
xchg
in
and
inc
and
fdivrp
ret
dec
in
inc
lahf
mov
test
xchg
popa
or
stc
add
fs
mov
or
sti
push
dec
loopne
outsl
scas
push
push
int
lret
jns
popf
imul
or
pop
mov
mov
add
loop
adc
lods
dec
fsts
push
push
mul
rclb
aaa
stos
test
sub
sub
je
test
add
outsb
dec
jmp
lcall
fdivs
movsl
or
pop
fdivs
minps
es
stos
lahf
adc
push
or
idivl
scas
lcall
sarb
jge
or
xor
xchg
mov
loopne
dec
mov
rcll
push
fadd
inc
jle
jno
outsb
push
and
stos
fldenv
scas
push
scas
adc
and
out
add
pop
fsts
in
test
xor
sub
into
mov
ja
and
popa
cmp
pop
adc
sub
xchg
mov
jp
mov
int
arpl
sub
or
sbb
fs
fsubl
popa
sub
jns
jle
shl
mov
push
orl
int3
xchg
loopne
dec
xor
cld
ja
cmpsb
cld
pop
cmpsl
mov
jbe
dec
aaa
or
mov
imul
mov
dec
pop
aam
or
std
xor
jl
sub
jle
popf
sub
xchg
mov
mov
push
scas
push
sub
stc
dec
cld
test
stos
cmp
daa
jae
mov
adc
lock
push
out
sbb
fwait
ds
repnz
fsubrl
mov
nop
cmc
ss
adc
xchg
ja
lea
inc
out
mov
ja
jno
inc
mov
loope
adc
add
pop
mov
push
add
repnz
roll
fs
testb
lea
incb
mov
jmp
mov
or
push
jp
or
js
push
xchg
mov
outsl
sbb
outsl
jae
dec
arpl
sbb
out
out
cli
lock
jp
scas
mov
xchg
mov
js
jae
jae
cmp
addr16
or
mov
sbb
lock
in
and
lea
rclb
dec
test
mov
adc
leave
push
out
clc
insb
stc
popf
fcoml
xlat
xchg
cmp
loop
jmp
clc
xchg
repz
fdivl
je
test
shrl
pop
jl
inc
aam
mov
mov
push
mov
cmp
sub
in
das
daa
sar
movsl
xorl
sarl
mov
rorl
or
jnp
call
sti
inc
xor
fadd
shl
outsl
and
jmp
add
mov
pushf
mov
insb
mov
fcoms
mov
aad
lahf
jae
lds
add
dec
xor
sbb
ljmp
cltd
or
ja
push
mov
stc
pop
popf
jne
divb
outsb
sbb
call
dec
or
xor
adc
incb
add
loopne
outsl
pop
mov
sub
sbb
push
lret
sbb
icebp
and
push
jns
cmp
add
scas
aad
sbb
jg
in
idivl
and
fs
fdivrs
add
pop
fwait
cmpsb
ja
ror
jnp
mov
std
lds
sti
pusha
orb
lods
xchg
rolb
out
jle
add
adc
add
daa
sub
into
sub
xor
lock
cmp
xor
jmp
ret
mov
daa
pop
jge
aam
lock
sub
sbb
cwtl
fldl2e
fs
call
test
xlat
imul
pop
cs
dec
jmp
in
mov
enter
fcmovb
inc
sbb
dec
ds
xchg
movsb
sub
popf
aad
jo
sbb
fists
insl
dec
repnz
je
sub
lret
xchg
sub
adc
mov
in
jo
lds
arpl
les
fdivs
in
mov
stos
adc
ss
xlat
lahf
adc
test
mov
popa
push
mov
xlat
iret
test
repnz
out
sub
mov
jo
sub
scas
mov
insb
push
movsb
cmp
xor
std
test
outsb
js
mov
sahf
xchg
shrl
mov
clc
arpl
testl
pusha
mov
pop
pop
out
test
add
jne
or
cmp
call
lret
fistpll
cmpsb
push
cmp
inc
sub
xor
test
and
pop
fld
cmp
push
dec
popf
sub
cltd
sub
out
in
in
add
pop
dec
fcomps
sub
mov
fldl
xchg
mov
jae
push
mov
mov
add
jo
lret
jno
mov
roll
inc
clc
pop
movsb
cmp
and
lods
aas
jge
loop
shl
mov
push
mov
dec
outsl
xchg
incl
std
xor
adc
jae
std
bnd
push
das
test
scas
popa
ja
shll
xlat
xchg
lcall
lea
cltd
mov
int
stc
test
gs
inc
fsub
or
mov
daa
lock
sub
jae
out
pop
ss
das
and
mov
push
add
cmp
jle
jne
xor
adc
subb
jbe
adc
fmull
dec
jns
xchg
mov
xchg
test
sbb
cmp
rorl
mov
in
and
xchg
push
cmp
scas
jb
js
and
bound
dec
inc
push
lcall
jp
pop
sub
or
push
add
lret
and
fdivl
rorl
adc
inc
out
fisubs
jge
das
cmpsl
pop
xchg
in
lock
xor
jmp
outsl
cwtl
sbb
xchg
arpl
fdivrl
out
push
or
in
inc
or
xchg
test
ljmp
cltd
push
in
es
popf
fistpl
or
ja
pop
mov
test
fldl
rcrl
pop
mov
xchg
fwait
movsl
jp
or
xor
call
sbb
push
dec
fsubrs
out
mov
test
sti
rcl
and
add
dec
fwait
cmp
scas
repnz
in
lret
cmp
sbbb
rcrb
push
mov
into
sub
pop
cmp
test
mov
dec
or
and
enter
inc
dec
mov
daa
push
push
ja
movsl
movsl
sarb
dec
sub
cli
xlat
cmp
dec
les
cmp
push
movb
jbe
popa
jne
test
repnz
xor
pushf
adc
addr16
jle
test
cwtl
into
cmp
lahf
icebp
xchg
push
push
popa
sbb
dec
fsubs
cmpsl
pusha
dec
pop
ja
pusha
js
cmp
pop
mov
inc
outsl
add
inc
jp
inc
mov
mov
fucomi
ja
sub
mov
in
sbb
in
cmp
jbe
dec
mov
dec
mov
cmp
scas
call
loopne
xor
loop
inc
mov
out
in
in
cmc
push
xchg
aad
sub
scas
jmp
lret
insl
daa
divl
loope
subb
mov
out
sub
aaa
lea
xor
mov
test
pop
fucom
sub
loop
pop
add
div
cmpsl
lods
cmc
sub
dec
adc
test
scas
xchg
stc
jno
pop
mov
mov
mov
movsl
orb
lods
cmp
out
lods
or
add
arpl
adc
cmpsl
xchg
dec
in
mov
mov
xchg
push
pop
jecxz
clc
call
cld
xchg
int3
push
xlat
pop
andl
lds
lods
or
out
popf
sti
xchg
aam
xor
in
dec
xor
enter
fldcw
jae
xor
sbb
pop
add
sbb
cmp
fsub
dec
mov
ds
out
jbe
sbb
xchg
mov
sbb
xchg
aaa
and
xor
int3
out
pop
cltd
das
pushl
push
enter
test
mov
cwtl
push
int3
out
push
dec
or
push
sbb
jno
out
mov
cwtl
clc
cmpsl
mov
mov
adc
jmp
adc
jae
aad
and
mov
adc
lea
lcall
xchg
imulb
add
jns
cmp
cmp
push
stos
push
jle
cmp
or
and
pop
cmc
js
or
mov
mov
int3
jae
xchg
add
out
shrb
push
pop
cmp
mov
mov
dec
dec
xchg
jmp
sub
adc
sahf
push
and
push
pop
outsl
dec
out
xchg
scas
ljmp
cmpl
xchg
addr16
rcrb
xchg
adc
negb
and
stc
jge
xor
mov
push
xorl
pop
fldt
fildll
daa
mov
shl
ds
icebp
cwtl
out
add
sbb
ljmp
mov
cmp
jb
push
mov
jbe
out
outsl
mul
push
push
jle
push
and
insl
push
pop
test
pop
and
testl
jbe
fadds
pushf
fdivrs
jp
addb
jp
push
xor
mov
or
xchg
cmc
out
dec
xchg
xchg
cmp
jbe
das
adc
inc
imul
jg
xchg
or
xchg
xchg
jge
movsb
mov
push
inc
popf
lock
dec
fwait
pop
mov
mov
movsl
pop
jmp
push
sub
mov
cmp
shlb
and
xchg
mov
mov
jle
inc
fmuls
mov
inc
sti
stos
push
xchg
es
mov
adc
jae
icebp
add
mov
fbld
in
pop
mov
mov
jne
out
out
lea
mov
out
pop
inc
pop
fstps
jp
inc
inc
lcall
xor
scas
int
inc
push
sbb
repz
dec
es
cmp
mov
fidivs
jnp
xchg
inc
push
mov
sbb
inc
ljmp
push
stos
sub
fs
jmp
repnz
cmpsl
ja
aaa
xchg
orb
sub
lock
in
adc
test
xor
jecxz
popf
mov
pop
adc
mov
cmp
mov
and
leave
inc
xchg
mov
loopne
push
sub
shrl
fdivl
add
or
adc
mov
loopne
sbb
and
cs
stc
sbb
addl
dec
fidivrl
lcall
fistl
aad
cmpsl
cmp
dec
int
aad
sbb
mov
mov
andb
sbb
ret
inc
pop
push
test
mov
cmpsl
mov
push
shll
fs
in
cwtl
sbb
inc
jns
cmpsl
sbb
inc
insb
inc
sub
sbb
lea
cmp
ds
addr16
adc
add
bound
bnd
cli
stos
imul
jg
in
fstl
bound
sbb
xchg
sub
out
jmp
shl
sub
cmp
push
ficompl
push
test
fldenv
outsl
test
ljmp
adc
outsb
daa
hlt
cmp
mov
xor
rcrl
jge
and
sarb
pop
adc
push
jo
xchg
adc
or
xor
sbb
push
js
insb
pop
xchg
add
inc
push
ljmp
test
cmp
lahf
int
loopne
fsubs
mov
xor
and
jno
mov
sbb
xchg
mov
imul
andl
rcl
mov
dec
out
add
mov
movsl
pusha
ljmp
testl
and
inc
rcrl
fs
fisubs
lock
xor
jnp
test
ds
int3
addb
fildll
xchg
sar
xor
movsb
fs
js
sub
in
repz
cwtl
mov
xor
cmpsl
jne
adc
stos
sub
mov
fmuls
leave
jns
out
cmp
movsb
ficompl
popa
nop
or
xorb
push
sub
mov
sbb
or
sahf
xor
mov
inc
pushf
xchg
xor
pushf
lahf
mov
lods
push
sbb
subl
ss
scas
inc
pop
popa
sub
jae
xchg
and
ja
loope
jbe
sub
and
adc
lock
out
filds
insl
mov
push
mov
sbb
mov
adc
add
idivb
aad
dec
xlat
sub
in
jl
shr
cmp
sti
add
or
roll
ret
fbld
popf
mov
xchg
lds
or
mov
ret
pop
idivb
or
push
fisubl
arpl
mov
jge
out
push
add
movsl
jg
or
xor
es
in
sub
pop
xor
in
lods
pushf
dec
popa
outsl
cmp
or
outsl
daa
in
cmp
je
in
push
cmp
cli
lcall
test
inc
inc
fs
jge
or
icebp
adc
jo
inc
fs
ljmp
inc
xchg
fwait
pop
arpl
push
fwait
pushf
sub
and
or
daa
push
xchg
add
xor
repnz
jle
mov
pop
popl
out
jnp
cmpsb
aad
pop
adc
ljmp
xor
fiadds
xor
xlat
rol
sbb
pop
xor
mov
loop
nop
sub
nop
fidivrs
popa
imul
das
fnstcw
testb
clc
inc
inc
mov
xor
js
pusha
add
cmp
xchg
xchg
cmpsl
inc
mov
cmpsb
hlt
mov
popa
std
subb
clc
fcompl
push
mov
outsl
scas
int3
dec
repnz
in
sub
mov
fcomps
mov
xor
add
outsl
shr
and
inc
inc
out
inc
add
sti
dec
mov
test
aam
jnp
dec
popf
popa
in
sbb
stos
jmp
pop
dec
imul
sbb
mov
sar
push
inc
jp
adcb
jno
sbb
imul
dec
cmp
nop
mov
mov
pop
daa
xchg
popf
add
mov
jmp
ss
mov
lods
pop
mov
push
in
xchg
jl
ja
in
xchg
outsb
sbb
fdivrs
or
dec
xchg
and
sub
jo
jns
insl
lret
iret
mov
es
mov
xchg
xor
lahf
mov
fmul
ret
ja
jl
dec
inc
pushf
sub
cmp
push
xchg
pushf
dec
cmp
cmp
inc
xchg
xor
jb
jmp
pop
pop
adc
mov
arpl
jno
aaa
ret
je
dec
dec
rclb
orb
jne
or
mov
outsb
fadds
aas
movsl
test
imul
mov
and
cwtl
cmc
mov
cld
mov
xlat
test
fistpll
adc
mov
bound
sub
and
sbbb
clc
test
or
push
or
inc
sbb
sub
cmp
out
jno
adc
test
sahf
sbb
jge
out
sahf
cmpsb
cwtl
or
pop
sbb
cmp
adc
popa
cmp
cmc
cli
in
mov
and
xchg
xchg
std
cmp
xor
ret
and
repnz
jp
pop
or
shl
mov
loop
in
iret
inc
in
test
pop
inc
jae
int
insl
xorl
scas
out
adc
mov
pop
popa
push
pop
insb
mov
out
nop
mov
in
xchg
jge
jp
dec
stos
test
jmp
sub
xor
mov
daa
inc
add
dec
clc
nop
xchg
pop
lods
out
pop
jge
pop
xchg
push
sub
fucomip
ja
sbb
test
cltd
testl
xor
push
push
test
pop
jecxz
or
stos
ljmp
insl
decb
fdivs
sbb
stc
stc
ret
add
pop
insl
jle
addr16
jle
aas
lcall
js
divb
pop
movsl
sub
aaa
mov
sub
stos
fists
jb
lods
jb
lods
xchg
inc
jae
jecxz
ficoms
or
xchg
pop
dec
fistpl
loop
inc
push
adc
adc
cmpsl
ds
mov
scas
in
sbb
mov
loopne
pop
mov
outsl
std
inc
push
and
outsb
adc
ljmp
mov
mov
pop
dec
pushf
xlat
addl
mov
pop
loopne
pop
sbb
adc
mov
and
add
add
adc
dec
ret
dec
test
shlb
bound
or
mov
jae
sbb
jnp
loope
push
dec
ja
cld
ret
jbe
out
addr16
aam
or
call
cmpsl
mov
cmp
pusha
mov
int
pop
adc
xlat
sub
add
cmp
sbb
faddl
mov
dec
cmpw
sbb
adc
and
cmp
push
jae
lahf
nop
add
xchg
pop
repz
pop
mov
in
sub
lret
and
push
lret
push
into
xchg
mov
clc
movsb
fbstp
clc
add
inc
jnp
xor
or
stos
mov
out
cmp
shl
or
movsb
mov
faddl
icebp
js
fimull
fdivrl
cmp
xchg
dec
sub
idivl
cmc
cmpsb
mov
cli
add
xchg
xchg
jl
jp
mov
xor
xchg
jbe
sbbb
sarb
pop
fadds
pusha
enter
or
push
es
pop
repz
sbb
testb
out
cli
xchg
jnp
test
insl
dec
jnp
enter
ljmp
shlb
sarl
cli
in
xchg
hlt
push
pop
iret
and
sub
or
jmp
adc
inc
jbe
out
insb
outsb
push
arpl
mov
xlat
andl
pop
jmp
inc
cld
lea
inc
inc
es
xor
gs
mov
insb
mov
stos
xchg
pop
jmp
cmpb
xchg
jge
shlb
dec
lods
aas
rorl
cltd
iret
arpl
out
mov
popa
or
test
cli
jmp
shll
call
sbb
lahf
test
mov
push
sbb
xchg
adc
add
lret
push
adc
jb
cmpsl
or
mov
add
sub
or
nop
add
jecxz
lods
pop
test
addps
int3
fwait
xchg
les
xchg
test
push
fidivrl
inc
fmuls
adc
std
into
jo
cs
addr16
outsl
jmp
add
je
out
shr
inc
repnz
out
mov
inc
pop
cmpsl
js
movsb
out
sti
or
mov
push
shr
dec
lahf
inc
mov
push
or
add
ret
aad
popa
sbb
cmpsl
scas
xor
push
add
ror
ds
cwtl
jne
fists
xchg
xor
insb
pop
pop
pop
xor
in
push
sahf
dec
pop
pushf
test
jmp
lds
pusha
pop
call
repnz
dec
subl
hlt
cwtl
mov
push
lods
icebp
pop
jo
xchg
pop
js
cwtl
call
adc
mov
push
dec
daa
xor
xchg
jl
rcl
dec
nop
jp
fsts
xchg
int3
inc
push
pop
jmp
sti
push
movsl
inc
sbb
pop
imul
lret
leave
push
arpl
and
dec
addl
sub
pop
enter
xor
pop
call
mov
sbb
sbbl
jecxz
je
scas
adc
sub
repnz
movzbl
ss
and
lret
rcr
sbb
int
push
movsb
add
test
shrb
les
scas
pop
push
lret
enter
or
and
outsb
lret
out
inc
icebp
mov
out
inc
push
fldcw
sub
ret
pop
cmpsb
cmp
sub
fiadds
xchg
jb
std
fcomps
xchg
shl
xchg
or
fs
aad
inc
popa
push
fistpl
xchg
mov
bound
lods
imul
push
mov
icebp
cmp
sub
pop
mov
mov
in
add
adc
cltd
mov
ljmp
movsb
xchg
mov
int
aas
pop
sbb
fistl
ret
xor
fldcw
or
pusha
or
lahf
je
in
pop
adcb
aad
pop
cmp
out
fadd
mov
iret
xchg
push
xchg
and
pop
fstl
adc
popa
xor
aad
shll
sub
adc
cmp
add
mov
mov
push
dec
fisubrl
mov
adc
repnz
or
pop
out
cmp
inc
in
movsb
jbe
or
sub
gs
mov
fsubs
jp
fmuls
add
dec
adc
dec
dec
cmp
inc
xchg
xchg
nop
push
jg
mov
and
dec
pop
xor
push
jb
lods
jge
mov
sbb
fadds
push
pop
sub
fildll
fs
frstor
bound
xchg
cmp
stos
push
or
mov
ret
inc
cltd
ds
mov
test
sub
adcl
mov
dec
js
add
repnz
fstps
mov
cmp
mov
sub
mov
jbe
lcall
xchg
jl
outsl
sarl
push
and
icebp
shl
roll
shll
movsb
hlt
sbb
mov
fwait
or
aaa
mov
and
lods
insl
jmp
sti
sub
inc
or
lret
push
jp
xchg
xor
xchg
mov
lahf
dec
or
xchg
pop
cmpsb
sbb
inc
or
pop
or
out
lds
addl
mov
fdivrp
ds
arpl
adc
scas
inc
in
xor
mov
inc
xchg
mov
shll
leave
cmc
mov
cmpsb
orb
or
dec
ljmp
mov
pop
mov
scas
jmp
iret
xor
cs
inc
fdivrl
addr16
test
adc
or
clc
cltd
mov
jmp
mov
js
jge
hlt
call
subb
pxor
mov
cmp
pop
ds
insb
add
and
mov
jbe
pop
jne
push
mov
xchg
sub
cli
ret
bound
aaa
sub
or
push
push
xchg
jns
push
pop
xorb
mov
stc
shrb
adc
daa
loopne
popl
fwait
lea
add
outsl
aad
cmpsl
and
and
xor
test
cs
push
mov
xchg
scas
dec
das
pop
bound
push
dec
xchg
sbb
xchg
push
daa
add
push
test
ljmp
cmp
aad
xchg
cmpb
lahf
pop
sahf
ja
xor
and
vcvtpd2dqx
pushf
imul
mov
movsl
jns
pop
mov
or
cmpsl
test
mov
jno
and
cmp
sbb
dec
mov
icebp
gs
sub
nop
loopne
push
sub
dec
adc
pop
xor
sbb
icebp
or
push
xchg
cmp
aad
or
cwtl
insl
mov
mov
dec
unpckhps
cmp
shlb
int3
call
sbb
dec
stc
adc
sub
js
arpl
in
test
stos
dec
stos
in
ss
outsl
leave
lahf
pop
or
pop
or
and
enter
cmp
inc
and
sub
jne
gs
out
inc
pop
adc
cltd
or
inc
out
mov
sti
and
pop
psubb
xchg
sbb
push
je
mov
cmpsl
or
fcmovnb
ljmp
jno
aam
push
xor
xor
gs
mov
out
pushf
xchg
loope
or
imul
sbb
jne
or
dec
popf
int
dec
xor
lahf
jns
inc
dec
cltd
push
xchg
test
adc
push
xchg
pushf
shll
nop
push
inc
dec
in
jne
loopne
adc
sub
xchg
mov
negl
test
push
dec
fstps
adc
lea
test
pop
mov
sbb
leave
icebp
repz
jne
or
inc
int
test
faddl
outsb
nop
std
adc
cli
lods
mov
push
rclb
dec
push
cmp
mov
push
dec
mov
fwait
inc
xor
lahf
mov
xor
imul
cmp
sbb
or
push
adc
push
incl
popf
cmp
out
xor
push
push
aam
xchg
fsubl
notb
dec
or
add
lds
jae
pushf
mov
ja
not
gs
ret
adc
aaa
pop
push
mov
inc
in
xor
insl
add
popf
mov
xor
testb
std
lahf
outsl
mov
scas
pop
sub
fs
cld
fdivl
jmp
pop
fsts
pop
fcoms
and
pop
aad
test
mov
aam
adc
int3
data16
mov
sbb
mov
sbb
sub
das
dec
mov
test
bound
jns
inc
jns
icebp
fs
out
sahf
xor
sti
xlat
push
mov
sub
xorl
sbb
pop
unpckhps
push
add
sub
sub
rcrb
and
test
mov
js
xor
inc
inc
inc
or
jecxz
lret
lcall
stos
scas
push
popf
mov
ss
sub
mov
mov
jb
fisubrl
cmp
test
jbe
repnz
lea
call
test
push
mov
clc
sbb
daa
in
adc
xchg
and
mov
fstl
push
in
xor
int3
test
dec
test
add
leave
cs
xor
add
sbb
std
and
mov
and
fadds
jb
xor
aaa
idivb
loop
xchg
fdivrs
xchg
add
adc
scas
fwait
sbb
inc
dec
adc
cmpl
xlat
movsb
fucomp
cmp
adc
clc
insb
push
jl
xchg
inc
mov
test
sub
stc
xchg
popl
sub
fnstsw
repz
nop
xor
lea
outsl
cwtl
ljmp
jge
push
sbb
xchg
movsl
jns
test
cld
push
test
je
sub
and
mov
push
mov
push
pop
adc
lahf
stos
int
pop
jno
inc
adc
out
cmpb
mov
xor
nop
cmp
push
sti
xchg
lods
add
mov
push
jp
ss
pop
je
repz
mov
jl
inc
out
sbb
mov
push
dec
mov
or
push
stos
test
movsl
in
enter
inc
pop
mov
pop
sub
addr16
mov
inc
push
mov
adc
add
mov
loope
shl
lcall
sti
jnp
cwtl
jns
fwait
sub
and
xchg
mov
stos
fwait
adcl
int
and
or
mov
lcall
and
out
xchg
add
aaa
jg
mov
lea
negl
mov
sbb
mov
sti
xor
loop
pop
cmpsl
lods
sub
jnp
gs
adc
pop
adc
sub
xchg
push
cmp
mov
inc
jne
rcr
jne
adc
xor
cmpsl
and
mov
movsb
je
cmp
adc
int3
mov
data16
cltd
pop
pop
inc
mov
test
mov
ret
xor
sbb
mov
rorb
stc
jg
xchg
fsubl
pop
cwtl
addr16
cmp
mov
cbtw
ss
jg
in
inc
and
into
outsl
int
fsubl
addr16
sahf
ss
sbb
frstor
pop
adc
cmpsl
adc
stos
jge
pop
subl
pop
mov
loopne
pop
out
ret
cltd
popa
es
mov
push
mov
js
out
adc
sbb
arpl
xchg
mov
mov
pop
outsl
data16
push
xor
ja
testl
cmp
scas
add
fidivrs
mov
pop
xchg
dec
pop
add
push
aam
inc
and
jnp
mov
adc
jbe
cmpl
inc
imul
movsl
pop
pop
lock
lock
push
test
and
sub
leave
les
push
xor
mov
loope
sub
inc
sbb
or
mov
mov
mov
dec
test
andl
movb
push
popa
xor
das
jge
loopne
push
fwait
clc
jns
sub
dec
fcomp
out
dec
dec
sbb
call
dec
gs
sub
int
add
and
orb
lret
cltd
mov
dec
cs
jmp
hlt
out
negl
rclb
test
loop
dec
lods
cmp
inc
and
push
inc
cld
push
cvttps2pi
repz
std
into
and
mov
cmp
lods
mov
adc
aaa
mov
inc
and
stos
inc
std
enter
push
adc
and
test
mov
lods
scas
int3
outsl
insb
clc
and
sar
inc
adc
add
push
sbb
xchg
xchg
into
repnz
sub
jb
jae
popf
inc
cmp
or
push
push
xchg
jge
pop
std
lds
std
dec
pusha
xchg
stos
loopne
and
mov
sbb
add
xor
dec
pop
loopne
addr16
xchg
lods
dec
mov
lea
cmp
pop
xchg
xchg
cmc
dec
sub
and
ret
inc
jns
outsl
call
mov
stos
call
out
cwtl
mov
data16
or
out
mov
pop
inc
mov
dec
xor
xlat
pushf
adc
sbb
dec
mov
inc
pop
pop
rcrb
push
cmp
ss
and
pop
cmp
sbb
fs
jno
adc
sbb
ficoms
popf
xlat
enter
and
and
dec
or
aas
lahf
or
push
mov
push
sub
clc
mov
mov
enter
sbb
push
add
cmpsb
movsb
xor
loop
pop
sbb
andb
mov
inc
pop
xorl
pop
test
ud2
out
dec
push
data16
mov
mov
xor
movq
dec
aas
sti
out
jae
jnp
mov
popf
dec
std
orl
pop
cli
add
xlat
add
jae
mov
repnz
lds
fwait
mov
or
jle
cmp
outsb
pop
imulb
inc
push
out
lock
pop
jbe
push
pop
mov
and
xchg
mov
cld
fsubl
jb
dec
mov
sbb
pop
mov
adc
cmpsb
dec
and
stos
dec
adc
orb
inc
or
push
sub
inc
sarl
or
imul
adc
jg
mov
lods
divb
push
popa
mov
sub
add
cltd
std
dec
mov
sbb
icebp
scas
lcall
pop
cmc
push
cmpsl
scas
dec
push
lahf
lcall
lcall
out
sub
in
push
dec
mov
fpatan
sbb
xchg
stos
bound
push
inc
and
jns
pop
cld
mov
in
sub
sub
fnsave
es
push
stos
xchg
out
outsb
or
cmp
pop
add
insb
push
imul
jp
adc
test
mov
out
mov
cmc
mov
fwait
mov
jmp
sbb
mov
push
dec
pop
insl
roll
inc
add
pop
lahf
mov
and
mov
js
dec
and
mov
xchg
xlat
shll
and
inc
fcoml
jl
sub
pop
push
sbb
pushf
fadds
mov
bound
dec
fsubs
movsb
sbb
pop
loopne
int
incl
imul
ficomps
push
in
dec
divps
arpl
clc
and
add
out
and
fstpl
loop
inc
cmc
or
out
lods
mov
add
cmpsb
cs
lret
sbbb
aas
lock
jno
jns
lcall
cmp
out
mov
sbb
shr
mov
adc
xchg
add
and
xchg
js
dec
xor
movsl
xchg
adc
lds
cld
sub
dec
ss
cmp
shll
repz
orl
jbe
xor
and
fcmovne
imul
pop
imul
mov
push
ss
cmp
movsl
push
cltd
jae
call
icebp
xchg
outsl
ja
dec
aaa
sbb
aam
pop
or
mov
popf
add
xor
in
je
call
mov
and
xchg
cmp
inc
push
mov
aad
jbe
pushf
xchg
std
pop
lahf
ja
repnz
adcl
pop
inc
jle
lods
lcall
aas
ret
jmp
sub
icebp
jno
sbb
stos
adc
pop
loope
jmp
jg
push
mov
xlat
mov
or
push
data16
test
sbb
sbb
pop
or
sbb
mov
dec
stos
mov
mov
mov
adc
cmp
cltd
cmpps
sub
jo
dec
scas
cmp
adc
cmp
dec
mov
or
sbb
divb
lret
adc
ret
sbb
add
sbb
pop
pushf
jl
mov
sti
loope
sub
test
or
addb
inc
inc
gs
pop
pop
sub
inc
jo
inc
adc
ret
jle
imul
imul
cld
mov
ja
mov
sbbl
test
iret
ljmp
pusha
ja
loop
xchg
insl
daa
sub
mov
fwait
jg
lock
xor
imul
mov
arpl
sub
mov
push
popa
adc
pop
aam
sti
in
outsl
out
outsb
mov
nop
mov
sub
fstp
ficoms
and
pop
adc
popf
jae
cmpsb
mov
sbb
loope
or
sbb
into
setns
mov
push
in
mov
sbb
or
add
lods
xchg
lods
out
js
loope
mov
xor
arpl
xlat
xor
mov
in
cs
in
ficompl
push
lds
aas
in
pop
rcrl
stos
pop
inc
mov
mov
push
add
imul
cltd
push
pop
dec
push
addr16
mul
jns
in
xor
out
push
ret
test
loope
aas
xchg
jae
into
mov
mov
int
ficoml
push
inc
call
stc
mov
jmp
push
mov
andl
xchg
pusha
push
packsswb
cmp
jmp
pop
clc
fs
rorl
mov
jle
mov
push
pop
in
jno
call
and
cwtl
xchg
mov
imul
popa
lods
push
mov
not
push
pop
sbb
addr16
push
gs
cmp
movsl
jmp
mov
xchg
decb
stos
and
cmpsl
xor
jo
icebp
andb
mov
push
iret
sbb
mov
mov
xor
pop
adc
jecxz
shlb
rcll
push
dec
rolb
dec
mov
scas
xchg
and
add
mov
es
xor
rcrl
notl
dec
iret
or
jg
fcmovbe
mov
test
mov
fwait
push
pop
jp
mov
lock
sub
cmpl
add
outsb
pop
imul
add
hlt
jl
xchg
or
div
and
add
push
decb
adc
rcrl
in
dec
movsb
dec
leave
leave
xchg
repz
gs
iret
inc
inc
mov
shlb
dec
mov
dec
add
pop
pop
clc
sbb
outsl
es
inc
dec
lds
pop
lods
inc
out
in
cmp
adc
sahf
mov
mov
jo
ja
cmpsb
xor
and
sbb
loopne
and
hlt
mov
xchg
inc
xchg
fwait
push
aad
pop
sub
dec
push
add
addb
andl
sub
xchg
pop
stos
inc
repz
xchg
cwtl
shrl
sub
pusha
movsb
sti
idiv
xchg
push
sahf
adc
fcomp
test
lds
nop
jbe
mov
xchg
pushl
add
mov
loopne
ss
jns
mov
lock
clc
std
es
fimuls
fwait
adc
sub
or
cmpsl
push
xchg
outsl
pop
ficompl
in
inc
sub
xor
mov
arpl
stos
ljmp
lahf
inc
sub
lret
sub
xchg
mov
push
and
and
or
shl
leave
lods
push
add
lret
cmp
inc
das
mov
ret
pushf
scas
jbe
pop
push
repnz
mov
push
mov
jns
lds
cmpsl
pop
push
inc
loope
out
and
dec
aam
stos
pop
lds
sti
sbb
mov
xchg
inc
fs
iret
or
popa
fsubrs
loope
or
movsl
push
pushf
push
jo
cmp
mov
adc
inc
mov
ret
pop
adc
mov
in
add
cmpsb
outsl
dec
shll
pop
inc
xchg
jmp
notl
and
cmp
xchg
xlat
insl
add
mov
popf
sub
mov
dec
xchg
add
addr16
adc
mov
lret
repz
lods
fisubrs
mov
and
dec
push
sbb
adc
cs
mov
add
or
cltd
scas
repnz
cmp
ret
int
out
mov
into
imul
sahf
xchg
out
dec
mov
mov
push
cwtl
stc
and
mov
adc
pop
dec
fldl
push
push
decb
gs
sbb
es
dec
sub
test
and
jns
ds
lret
ds
imul
cmp
fadds
pop
dec
push
cld
pusha
xor
push
stos
clc
jle
push
mov
cmp
lea
insb
mov
push
insb
nop
cmp
and
roll
lret
adc
les
aad
subl
in
loopne
xor
les
out
mov
sbb
fcmovbe
cmc
outsl
test
testl
or
pop
das
jmp
cmp
mov
pop
mov
and
out
adc
daa
ret
mov
adc
lea
into
fisttps
pop
movsl
rclb
ja
cmp
das
cli
xchg
and
dec
rol
shl
loop
push
mov
cmp
out
test
cmp
aas
jns
in
cmp
out
mov
movsl
int
popa
test
gs
jecxz
insb
add
out
sbb
loope
jbe
lock
cmp
repnz
ljmp
mov
insl
loopne
dec
les
std
jmp
insb
enter
lock
cmpsb
js
adc
adc
jbe
mov
lret
icebp
or
dec
push
cmp
cmp
into
ds
jns
fidivl
imul
xchg
cmp
adc
add
repz
push
faddl
or
into
insb
std
adc
sbb
mov
clc
sub
dec
pop
fs
es
adc
data16
fs
and
ja
dec
fisubs
cltd
mov
mov
jo
xchg
ljmp
mov
add
mov
adc
in
push
pop
rcrb
xor
xor
and
iret
sbb
divl
jnp
mov
and
pop
insl
ret
pop
dec
adc
fldcw
jle
jnp
fwait
ror
mov
inc
nop
das
and
sbb
fisubs
push
scas
push
adc
cwtl
push
add
lds
push
inc
in
je
pop
xchg
jb
iret
lds
arpl
loopne
sar
das
mov
xor
lret
add
and
idivl
fnstcw
jb
cmp
lods
jno
loope
mov
loop
aad
int
loopne
ss
sub
inc
dec
mov
fdivs
stos
sbb
mov
arpl
jb
loopne
adc
das
inc
cmp
cmp
jmp
push
cld
imul
outsl
inc
lock
ds
je
pusha
sbb
sbb
xchg
add
lcall
loop
push
repz
fadds
daa
xor
sub
icebp
add
xchg
pusha
fbld
lahf
hlt
sbb
popl
idiv
push
mov
enter
jo
movsl
in
mov
inc
push
dec
pop
arpl
outsl
push
cmp
das
push
imul
pop
or
popf
push
jae
push
in
syscall
and
and
pushf
bound
jmp
fdivp
mov
stos
pop
push
insl
cld
ret
pop
mov
fdivrl
adc
inc
lcall
das
and
bound
pushf
xor
jg
sbb
or
mov
jmp
insl
aam
mov
mov
adc
push
or
xor
out
mov
and
das
mov
out
repz
xor
sub
xlat
pop
lahf
js
inc
pop
je
lret
notb
mov
mov
xchg
repnz
leave
push
xor
pop
arpl
mov
and
rcl
jecxz
jl
loopne
sbb
xchg
out
test
daa
xor
mov
xor
movsb
jae
ret
push
enter
lahf
cmp
mov
push
popf
and
cmp
dec
iret
repz
ret
popa
lret
xchg
lods
sub
ds
icebp
xchg
lods
mov
lcall
iret
push
clc
popf
xchg
insl
pop
out
jb
push
push
stc
cwtl
add
mov
push
and
dec
mov
pop
lods
inc
jl
jge,pt
in
es
or
btr
cmp
jae
lret
ficompl
mov
ret
rclb
and
jp
push
push
cmp
add
stc
push
testl
gs
adc
push
aaa
inc
pop
pushf
fsubrs
mov
ja
push
sbb
push
popl
mov
popf
jo
pop
adc
lea
and
sarl
popf
mov
push
push
and
nop
outsl
mov
loopne
in
mov
ret
repnz
or
add
mov
mov
jecxz
popa
jecxz
push
cli
mov
dec
loope
aaa
inc
fsub
fmull
enter
ss
dec
leave
push
xchg
lret
das
out
pop
dec
shll
fsub
movsl
arpl
ret
xchg
jae
test
mov
xchg
xchg
shrb
cmp
xchg
push
sbb
adc
std
sub
ret
mov
rclb
add
sbb
sbb
movsb
imul
xor
mov
stc
jl
xchg
aad
addl
mov
mov
insb
sbb
data16
outsb
xlat
add
outsb
xor
fsubr
mov
popf
loop
push
pop
data16
push
xor
ja
out
divl
jne
dec
sub
sub
xchg
push
imul
fs
inc
mov
inc
or
ja
and
inc
fmulp
cwtl
movl
jo
xor
fwait
pop
repz
cmpsb
int
or
es
or
inc
sar
stos
lods
pop
xlat
sbb
pop
dec
pop
les
adc
push
fldl2e
pop
dec
insb
loopne
mov
das
mov
cmp
stos
scas
cwtl
xor
jmp
into
mov
xlat
rorb
repz
out
push
inc
scas
in
pop
sarb
test
inc
and
sbb
inc
push
sbb
mov
sbbl
in
add
stos
stc
shr
jl
mov
test
sarl
xchg
sub
add
mov
sahf
xor
mov
fidivrs
add
fsub
aas
push
movl
jp
bound
lock
dec
push
cmpsb
xchg
push
mov
popf
inc
xor
inc
in
lahf
jne
ljmp
int3
sahf
mov
ret
movsl
mov
jns
xchg
bound
mov
lcall
cld
rolb
aam
push
cmp
ret
mov
pop
ss
dec
pushf
not
out
mov
loope
ja
out
mov
jle
rolb
hlt
outsb
xchg
rcr
pop
mov
imul
pop
cld
sbb
sbb
popa
sub
and
push
imul
enter
dec
or
mov
stos
sbb
xchg
test
icebp
xchg
popa
nop
repz
aas
sbb
loopne
sbbl
push
gs
test
inc
nop
mov
cs
xor
mov
add
shr
rcrb
adc
xlat
shrl
in
mov
or
lret
jl
mov
mov
cli
mov
adc
cmc
jge
in
cs
push
cld
clc
test
push
mov
sbb
xor
arpl
add
loope
loop
out
stos
inc
sbb
inc
ret
mov
dec
cli
pop
jo
pop
ss
out
shr
in
nop
shlb
and
mov
bound
pop
jbe
shlb
mov
xor
jo
cltd
pop
inc
mov
cmc
adc
xchg
push
popf
outsb
mov
in
lea
mov
xlat
mov
lds
pop
mov
xchg
hlt
xchg
sub
sbb
jb
rorl
mov
xchg
pop
xchg
push
aaa
fwait
sbb
dec
xchg
rcl
scas
test
cmpsl
test
fisubs
outsb
popf
js
add
inc
mov
frstor
jg
cmpsl
imul
std
rcr
dec
dec
in
adc
daa
pop
adc
or
cmc
lret
incl
inc
into
lcall
outsl
pushf
mov
jnp
xchg
and
mov
ja
adc
test
sbb
iret
jno
fnstcw
add
push
pop
roll
cmp
mov
je
adc
inc
lahf
sub
mov
and
aas
popa
js
sub
dec
cwtl
shrb
push
cmc
lock
cmpsl
stos
mov
inc
jge
insb
repz
jle
push
imul
adc
add
push
aad
push
js
orps
cs
mov
ss
jmp
test
sub
sbb
add
sbb
rorb
mov
mov
mov
cltd
jg
adc
es
jnp
popf
jge
aad
push
and
inc
push
lret
push
out
mov
mov
sub
enter
imul
mov
push
shlb
lret
mov
or
pop
pop
icebp
inc
mov
dec
lret
mov
mov
shlb
sbb
dec
pop
outsl
mov
das
test
push
fs
clc
pop
pop
rol
jmp
xchg
int
out
rcrb
popa
inc
mov
das
fldlg2
pop
dec
je
xor
fimull
out
inc
add
mov
sbb
xchg
fcoms
pop
arpl
mov
imul
loop
mov
fistps
jmp
and
xor
into
pop
push
popa
into
call
jecxz
mov
negl
out
and
mov
pop
sub
add
mov
mov
les
add
dec
xlat
xchg
es
lret
sbb
push
ja
cmp
xchg
jecxz
add
jb
sub
loopne
test
in
rol
addr16
aaa
outsl
fists
adc
push
dec
push
aad
cmp
pushf
rolb
mov
frstor
into
js
scas
push
sbb
mov
leave
fwait
or
filds
mov
fisttpll
inc
xchg
rol
xchg
mov
jns
jo
pushl
adc
lcall
test
mov
lods
sbb
sbb
ds
frstor
movsb
das
pop
ds
cltd
dec
adc
adc
pop
lret
dec
add
mov
dec
rcrl
adc
cmp
lock
push
loopne
mov
iret
in
fidivs
pushf
imul
es
mov
add
xor
mov
adc
cld
mov
mov
popa
jp
lods
cmp
mov
add
mov
jl
mov
int3
pop
aad
repz
push
add
rolb
aam
pop
jmp
out
loopne
into
xchg
xchg
cmpsb
or
or
jmp
inc
pusha
iret
scas
ljmp
add
in
mov
cmpsl
xchg
mov
fs
jge
out
fmull
cmp
lret
push
mov
les
fstpl
cmpsl
call
dec
inc
bound
mov
push
push
mov
mov
add
cmp
add
xchg
sahf
lea
nop
jae
and
daa
insl
xchg
add
call
gs
sarb
inc
arpl
push
mov
push
mov
aaa
fidivrs
pop
jne
mov
dec
fldl
jae
pop
roll
pop
push
add
xchg
dec
xor
icebp
or
stos
inc
ljmp
dec
in
invd
mov
arpl
mov
add
adc
mov
xchg
add
sub
push
xlat
sub
pop
scas
addr16
leave
into
pop
in
ret
xchg
out
cmp
inc
add
push
bound
and
sbb
dec
in
lcall
adc
imul
mov
rolb
lret
sbb
jle
mov
adc
xor
adc
cmpsb
mov
lret
cmc
sarb
push
cs
lahf
addl
jmp
stos
aam
mov
lds
rorb
push
cmp
cmpsb
xchg
xor
xor
push
repz
mov
fcoms
das
mov
ja
cmp
std
dec
cs
and
das
xchg
imul
lea
imul
xchg
jo
fwait
xlat
xchg
push
xlat
jo
and
dec
sub
adc
push
pop
and
and
orl
fwait
adc
pop
pop
ss
popf
sti
cmp
jno
repz
mov
inc
jbe
mov
rep
cmp
and
and
inc
dec
leave
push
and
jg
mov
popa
push
test
aas
xchg
fcmovu
dec
aam
push
mov
dec
jmpw
lods
mov
cmp
adc
xchg
dec
xchg
xchg
mov
pop
movsb
test
out
inc
repnz
and
out
fidivrs
mov
push
dec
push
inc
jmp
add
push
and
out
jns
pop
inc
cld
adc
adc
mov
pop
lret
xchg
jnp
js
or
test
mov
add
mov
nop
add
lret
inc
sub
mov
popf
sbb
idivb
mov
es
popa
dec
outsb
jle
jle
pop
add
test
pusha
fsubrs
pop
add
mov
movsb
pop
inc
dec
cmp
inc
xlat
insb
mov
sbb
mov
mov
call
mov
inc
out
xor
jg
mov
pop
mov
adc
dec
in
mov
lock
xor
push
sbb
mov
and
xlat
sbb
sub
sub
push
push
pop
incl
adcb
mov
repz
das
loopne
insl
ja
mov
mov
pop
pop
push
es
out
into
mov
sbb
rdpmc
push
or
in
enter
sbb
mov
jo
cmp
sbb
push
push
roll
popa
lahf
sbbl
insb
inc
and
sub
push
add
mov
imul
cltd
popa
xchg
and
and
xorb
cli
mov
sbb
sahf
jns
loopne
test
mov
decl
push
sub
xor
cltd
push
or
mov
in
sti
aad
xor
adc
sbb
mov
mov
xchg
add
sbb
mov
lock
push
mov
xchg
and
je
xor
scas
mov
jbe
inc
xor
fcmovnu
add
xchg
sbb
andb
sarb
jp
pop
ror
pop
lds
dec
lds
mov
sbb
and
dec
push
int
pop
xlat
subb
es
aad
xchg
pusha
ret
mov
xbegin
fsts
cld
call
pop
cli
xchg
or
mov
int
inc
cmp
imul
rcrl
leave
add
lds
mov
rclb
mov
test
shr
je
jmp
push
pop
sbb
lds
jg
jb
push
repz
jmp
aam
insb
pause
xor
lods
aam
test
jmp
lret
fists
jge
lds
cld
cwtl
mov
push
mov
test
inc
mov
loop
mov
into
out
popa
jle
jnp
fdivl
sub
mov
mov
outsl
ror
movsl
jnp
push
cmp
sub
cmp
lret
push
cmc
xchg
loopne
loopne
mov
fcoml
in
jecxz
pop
stos
jae
inc
or
cmp
faddp
test
add
ljmp
push
gs
fs
insl
pop
inc
push
into
sbb
hlt
add
jbe
out
sbb
xorl
dec
jb
jns
imull
and
push
addr16
ds
inc
inc
dec
mov
scas
pop
sub
test
pop
fistpll
and
xor
sub
dec
cmc
ja
xlat
jmp
sarb
jno,pn
les
pop
pusha
fs
stos
pop
out
mov
roll
mov
or
dec
packssdw
aas
cmp
xor
lods
loop
mov
or
addl
stc
orl
je
ds
dec
mov
dec
sti
pushf
xlat
inc
jbe
fldl
cwtl
xchg
push
mov
test
adc
jle
mov
enter
sbb
sub
inc
in
push
test
jg
fsts
sar
add
loopne
lock
mov
mov
sti
aaa
loop
pop
pop
mov
dec
xorl
xchg
push
inc
lret
pusha
testb
sub
sbb
mov
hlt
fstps
out
adc
and
push
push
pop
adc
mov
adcl
ds
mov
and
sbb
lcall
test
enter
hlt
movsb
xor
xchg
jnp
mov
cmp
fyl2x
xchg
pop
hlt
dec
sub
lret
dec
xor
jns
mov
add
mov
imul
jns
in
mov
xor
xchg
repz
push
test
ret
ret
je
lock
test
mov
aam
cmp
cltd
repz
movsb
jo
cmp
movsb
pushf
xor
or
icebp
icebp
stos
sbb
push
inc
inc
mov
push
mov
mov
loope
xchg
lock
addr16
fstpl
in
ficoms
jmp
cmp
sbb
clc
imull
mov
shl
push
jp
inc
pop
out
mov
repnz
mov
xchg
mov
fstl
pop
mov
clc
orl
push
ds
cmpsl
imul
scas
outsl
lods
lahf
out
repnz
rolb
inc
mov
xchg
lcall
outsb
dec
mov
rcl
shll
ljmp
pop
pop
pop
xor
pop
xchg
jne
fwait
aad
cwtl
mov
push
xchg
adc
cmp
fs
or
out
jbe
in
sti
out
out
inc
dec
insl
pop
mov
xchg
push
or
and
xchg
adc
in
and
cmp
sar
out
add
test
inc
dec
cmp
jmp
mov
jbe
xchg
mov
mov
lret
in
out
dec
mov
cmpsb
adc
repz
push
fst
or
andl
or
xchg
in
fstpt
movsb
nop
out
sub
mov
pop
test
inc
or
pop
push
cmp
xor
mov
dec
pop
loopne
cmpsl
aaa
in
jne
imul
push
push
jno
mov
js
fcmovbe
jmp
mov
js
nop
imul
xchg
sarb
jne
dec
je
push
fimull
jg
mov
inc
ret
sahf
leave
lods
imul
pop
push
in
and
sbb
push
outsb
cmp
les
fsubl
mov
lods
sub
cwtl
xchg
fiadds
test
pop
xchg
test
in
mov
add
sub
mov
imul
push
pop
add
pop
xchg
and
insb
sbb
push
or
xchg
stos
test
jns
xchg
jle
rclb
pop
loop
adc
lahf
lods
orb
scas
outsl
mov
das
lods
mov
movsb
lret
push
fistpll
fstpl
add
insb
mov
jge
das
cmpsl
negb
pop
fdivl
lret
mov
lret
xchg
rcll
stos
stc
sub
in
push
repz
mov
mov
sbbl
mov
out
push
xchg
inc
roll
lods
ds
lods
popa
mov
mov
adc
inc
push
push
rol
inc
xor
jecxz
insb
rclb
iret
pop
loope
repz
stos
fs
xor
or
inc
push
je
mov
lret
mov
mov
xor
xchg
or
mov
test
dec
xlat
fwait
inc
dec
movsb
mov
scas
jb,pt
nop
dec
pop
cltd
xchg
dec
stc
dec
jg
cmpsb
rorb
mov
or
adc
dec
xchg
test
cmp
lods
lock
adc
push
es
cmp
pop
fnsave
out
inc
int3
jne
add
leave
pop
adc
dec
or
fcompl
into
fdivrl
push
cmp
incl
lds
mov
add
xor
insb
push
add
and
cmpsb
or
mov
ret
xor
mov
cmp
sub
inc
loope
sarb
int
pushf
cmp
lea
add
inc
inc
imul
sub
popa
stos
add
adc
fists
in
in
addr16
xchg
cmp
stc
push
clc
call
sti
xchg
and
xor
fdivrs
clc
mov
mov
pop
push
cmp
mov
adcb
mov
sbb
imul
inc
jae
xchg
jae
imul
xchg
adc
flds
pmaxub
mov
test
pop
push
dec
adc
hlt
add
push
addr16
mov
mov
mov
fldenv
pop
mov
mov
shl
daa
out
push
mov
push
mov
mov
pop
gs
or
pop
fisttpll
or
sti
sub
sbb
pop
cmp
or
push
loop
mov
jg
out
jge
cwtl
pop
cmp
ljmp
bound
shlb
dec
push
lahf
int3
cmp
ljmp
rcll
xor
imul
int3
dec
fisubs
imul
mov
push
in
mov
arpl
and
inc
mov
mov
or
xchg
loop
jg
negb
mov
test
jns
fdivr
dec
cmc
test
sti
sti
jo
incl
mov
loopne
jae
xchg
dec
or
rorl
xor
jb
repz
inc
or
sub
dec
lret
sub
adc
gs
or
mov
cmc
cwtl
cmp
enter
xchg
or
jns
decl
push
stc
shll
shlb
jnp
mov
sbb
xor
push
dec
mov
in
jge
inc
mov
outsl
pop
push
jl
sbb
cmp
and
orb
sub
movsl
mov
icebp
push
rorl
fnstenv
adc
shrb
sbb
loopne
cmp
cmp
andl
dec
push
mov
sarb
lods
pop
bound
shl
repz
call
add
xchg
lea
fwait
sbb
xchg
into
das
or
imul
adc
adc
insb
fsubrs
dec
sbb
arpl
or
aam
clc
adc
xor
mov
outsb
sbb
push
mov
mov
jl
call
xchg
fiaddl
mov
jnp
jb
pop
adc
fadds
data16
mov
add
cmp
js
cmp
out
js
adc
outsb
lods
xchg
mov
fnsave
dec
mov
push
mov
xor
mov
pop
adc
pop
xor
push
test
scas
xor
decl
inc
xchg
and
push
push
lea
xor
pop
lcall
je
adc
fldl
jmp
iret
dec
loop
jnp
sub
icebp
outsb
push
test
int
popf
outsb
jecxz
mov
bound
or
xor
pusha
sahf
gs
and
add
dec
mov
fbld
int3
jno
out
xlat
push
xchg
loopne
ret
push
outsl
ljmp
imul
fidivrs
outsb
inc
shlb
inc
out
jp
sbb
jle
sbb
pop
and
pop
stos
shll
push
jno
inc
mov
lea
nop
jle
mov
xchg
mov
add
sub
shlb
mov
imul
mov
and
xor
add
ret
lahf
lods
roll
enter
pop
pop
mov
cs
add
cmp
sub
int
jbe
addr16
maxps
movsb
cli
sub
and
js
inc
push
pop
nop
movsl
pusha
dec
mov
dec
mov
dec
mov
and
lcall
cmpsb
push
or
pop
mov
or
mov
sub
cmp
jb
mov
dec
repz
pop
in
mov
in
jl
movsl
xchg
inc
sbb
pop
fsubrs
aas
aad
mov
je
mov
out
dec
push
aam
or
fisubrl
push
xchg
fidivrs
xchg
faddl
leave
lds
sub
fdivrl
bound
and
dec
xchg
scas
out
outsl
orb
push
lods
and
sub
ret
mov
ss
push
push
push
pop
sbb
mov
loopne
push
sbb
int
cmp
scas
dec
daa
xchg
mov
loopne
lret
hlt
add
mov
movsl
inc
out
push
in
jmp
jbe
pop
inc
sbb
into
loop
out
mov
jns
movsl
sub
imul
xchg
or
jne
in
ljmp
mov
add
lods
cli
cli
jg
testb
add
fnstsw
stos
sbb
adc
test
push
mov
cmp
idivl
xor
mov
testl
mov
mov
lods
jbe
push
loop
cmc
xchg
pop
test
mov
lahf
or
adc
pushl
stos
daa
pop
dec
loop
and
outsl
leave
mov
mov
xor
iret
adc
mov
lahf
aas
fucom
add
mov
adc
loop
scas
push
mov
lock
inc
push
cmp
pcmpgtw
fwait
pop
ret
fsubrp
call
pop
adcl
ret
shll
push
ja
ja
pop
pop
shll
rorl
cmpsb
lret
add
xchg
sbb
sahf
ss
mov
dec
popa
xor
mov
sbb
push
jnp
test
gs
daa
sub
ljmp
jmp
les
adc
or
cmp
add
dec
xor
cld
jp
xchg
inc
aas
cmp
cs
pop
push
push
std
popl
sbbl
aad
inc
xor
or
xor
iret
mov
adcb
cmpsl
mov
push
jl
xor
pop
ss
and
ficompl
mov
xor
aam
add
dec
test
jmp
push
dec
addr16
inc
or
jp
loop
je
pop
inc
cwtl
xor
jmp
outsb
jge
mov
std
movsb
scas
lcall
test
data16
xchg
addr16
sub
stc
adc
and
dec
lea
lock
loopne
repnz
in
mov
iret
fdivrs
icebp
popf
sbb
push
fnstsw
jmp
nop
cmp
fdivrl
popa
sahf
cs
lea
ljmp
lea
add
popa
push
rcll
push
inc
push
jge
push
dec
cmp
into
mov
xchg
iret
xchg
test
jae
pop
xchg
out
ja
xor
mov
pop
mov
jle
loop
inc
jne
inc
sbb
cmc
sub
inc
cmp
clc
adc
sahf
push
std
call
inc
pushf
xor
mov
lahf
rol
jb
loop
cmp
cmp
push
cmpsb
addl
lahf
aas
sbb
jle
push
push
idivl
stos
mov
jae
dec
shrw
test
push
cmp
daa
sub
insb
jle
jl,pt
xor
sbb
inc
dec
cwtl
bound
dec
imul
in
testl
jg
push
push
pop
ret
aam
js
pop
mov
inc
lods
cmp
cmp
clc
fsts
xchg
fisubl
mov
lds
dec
in
pop
out
js
test
xchg
mov
push
lods
in
pop
lods
pop
add
cmp
stos
lahf
cwtl
adc
cmp
pop
fs
jg
outsb
push
mov
std
push
repnz
mov
inc
in
adc
and
lahf
pop
jns
sub
fisubs
or
fsts
adc
fldcw
mov
clc
inc
repz
out
popf
lret
add
xor
sub
pop
daa
dec
and
xor
ret
push
push
fcmovnb
scas
mov
lods
js
mov
loope
imul
xchg
outsb
lcall
xor
leave
fwait
push
pop
xchg
push
mov
jmp
xor
fdivrl
lret
jle
rcrl
pop
psraw
mov
xchg
mov
dec
add
push
cld
mov
xchg
jno
and
fwait
mov
jb
fsubrs
inc
and
mov
push
lahf
xor
sbb
xchg
cld
in
jno
nop
xchg
cmp
popf
rcr
mov
mull
and
pop
or
add
adc
inc
adc
stos
lcall
pop
or
out
and
or
aad
fdivrs
jecxz
add
or
mov
cmp
clc
lcall
add
test
das
psubusb
jl
addr16
mov
cmp
xchg
mov
add
push
sbb
hlt
adc
push
rcll
cmc
pop
addr16
lock
repz
lock
jge
fs
cmp
or
jle
dec
dec
jge
es
imul
das
adc
jp
movsl
in
cltd
lea
jnp
pop
cltd
movsb
insb
jb
mov
jl
xchg
outsl
mov
pop
mov
ficomps
mov
jle
clc
mov
and
jbe
xchg
mov
jp
fstpl
mov
cmp
mov
aas
in
popa
jg
int
mov
bound
cmp
mov
adc
shrl
test
sub
cmp
inc
mov
mov
std
add
ret
pop
lds
loop
xorb
bound
lock
cli
jmp
int3
mov
xchg
push
dec
dec
cmc
jecxz
cmp
out
cmp
add
mov
loop
fimuls
jg
mov
mov
add
idiv
cmpsb
xlat
aam
mov
testl
inc
in
les
add
push
xchg
push
insb
sbb
in
push
mov
lea
xchg
pop
push
xchg
push
xchg
inc
cmp
jb
shll
push
mov
inc
aaa
insb
push
mov
lcall
sbbb
mov
mov
xor
scas
jo
add
ljmp
cmp
mov
jl
inc
aaa
pop
shll
shl
repnz
leave
in
movsb
out
cmp
and
ja
mov
push
pop
xchg
pop
insl
inc
dec
insl
test
test
or
sbb
insl
test
jg
imul
mov
sbb
popf
adc
inc
mov
out
push
sbb
adc
ljmp
jecxz
pop
or
lods
cld
dec
rcr
mov
aad
fidivs
push
adc
jg
out
lret
mov
xor
sub
cmp
std
aas
sti
test
dec
repnz
mov
out
clc
shll
mov
and
in
test
mov
fsubr
and
jg
xchg
jge
ret
loop
clc
cld
mov
in
pop
rcrl
sub
mov
mov
cs
xor
add
hlt
inc
les
and
push
ljmp
icebp
mov
jmp
ja
cmp
mov
inc
inc
and
push
cmp
inc
ficoml
jbe
hlt
sahf
stos
int3
fists
jo
cmpsb
sbb
gs
jbe
push
xor
inc
out
add
jecxz
push
xchg
xor
lock
cwtl
mov
call
and
inc
movsb
add
pusha
sbb
push
adc
lahf
jge
gs
add
mov
cmp
popf
sbb
loopne
mov
mov
rorb
mov
jp
jmp
push
or
lea
jle
popf
mov
fwait
ljmp
jl
icebp
stos
test
and
sti
dec
lock
stos
mov
lds
inc
xchg
ljmp
pop
setbe
popf
stos
sbb
sbb
mov
scas
mov
mov
sub
push
push
in
xchg
jmp
outsl
xor
xchg
cmp
or
inc
inc
xchg
inc
mov
insb
out
loop
or
dec
add
lock
mov
mov
int
ljmp
pusha
push
fistl
add
in
mov
sbb
fs
les
sbb
pop
sub
cmp
jecxz
ja
jbe
jb
adc
loope
lock
insl
insb
cmp
test
jp
loope
push
insl
jg
pop
mov
ja
fs
push
mov
ljmp
dec
lret
jns
cmp
push
mov
xor
and
push
or
pop
scas
pop
cmp
aad
fs
dec
mov
mov
negb
mov
mov
loopne
cmp
cmp
pop
push
inc
div
pop
push
xlat
mov
jmp
lea
dec
iret
pop
jge
add
jecxz
aad
fwait
jbe
fists
sbb
aam
mov
ss
leave
in
add
inc
xor
pop
into
and
into
pop
in
pop
pop
mov
xchg
xchg
pusha
adc
imul
mov
dec
ficoms
fidivl
mov
cmpsb
in
inc
pop
out
and
adc
mov
icebp
cwtl
das
xor
fdivr
and
leave
push
ret
cmpsl
mov
or
add
adc
or
or
inc
dec
ja
pop
movsl
fwait
jl
mov
ret
push
adc
xorl
sub
adc
out
out
sub
pop
rcrb
stc
cld
lds
mov
inc
push
dec
ljmp
push
ljmp
int3
aaa
fdiv
add
out
sbb
sub
or
aam
push
push
jnp
xchg
pop
add
add
pusha
adc
mov
in
mov
mov
jbe
push
test
pop
and
fisubl
jle
cmp
shll
les
ret
and
pop
mov
and
enter
stos
or
in
lcall
sbb
mov
sub
cmpsb
cmpsl
dec
roll
mov
cwtl
dec
mov
into
ss
and
lcall
pop
stos
mov
notl
fisttps
int
sbb
or
pop
lret
movsl
pop
cmp
gs
mov
andl
dec
rorl
add
xor
leave
cmpsl
pop
outsl
sti
xchg
scas
pop
subb
xchg
divb
pop
aas
repz
xchg
sbb
movsl
pusha
and
nop
sub
mov
test
pop
pop
push
aaa
popa
inc
xchg
mov
mov
into
lret
stc
cmpsb
and
adc
popf
and
cwtl
leave
scas
out
test
aas
lea
in
dec
lds
or
loop
push
ds
sub
mov
lock
xchg
xchg
xchg
jmp
xor
pop
xorb
push
sub
or
test
aaa
imul
and
sub
mov
pusha
fidivs
stos
lods
aam
out
mov
xchg
inc
mov
sub
fwait
pop
outsl
outsb
jo
cld
faddp
xlat
inc
lea
addr16
cmp
stc
aas
mov
icebp
ret
cli
int
mov
sbb
sahf
dec
rcl
out
daa
scas
lcall
in
addr16
scas
rcrb
sbb
fnstcw
xchg
mov
mov
faddl
lock
jne
daa
push
cmc
cmc
movsl
enter
movsl
push
sub
fisubrl
pop
test
jns
sbb
xor
int3
cwtl
adc
aam
inc
dec
sub
push
jg
scas
fildl
mov
cmp
stc
pop
sub
xor
mov
mov
cwtl
mov
idivb
js
leave
pop
mov
cmp
outsl
mov
in
push
mov
icebp
filds
cs
and
cmpsl
sbb
daa
jnp
shlb
ja
fdivrl
sbb
xchg
in
sub
pop
hlt
sub
jmp
jb
adc
pop
and
mov
out
mov
xor
mov
sar
push
inc
cmp
pusha
popa
xchg
dec
mov
out
pop
push
push
cmp
push
mov
cs
adc
jg
scas
into
jo
dec
test
xchg
or
pop
add
dec
inc
and
jle
imull
sub
and
push
jecxz
jbe
push
adc
das
les
cltd
paddd
jmp
xlat
and
push
pop
icebp
cmp
imul
adc
fs
aad
sub
arpl
jnp
test
lods
mov
outsl
jae
dec
filds
xchg
out
loopne
shlb
xchg
leave
repz
orb
inc
push
cli
mov
cmp
xor
xor
or
add
lret
sbb
insl
shll
leave
test
or
fincstp
xchg
pop
adc
xlat
mov
adc
out
mov
mov
mov
popa
sbb
popa
mov
pusha
icebp
jo
jo
cs
mov
bound
movsb
push
aaa
push
mov
int
push
xchg
sbbb
jmp
xor
js
add
repnz
scas
cltd
inc
fwait
inc
pushf
repz
sub
setbe
popa
dec
lods
and
icebp
mov
movsb
pop
repnz
out
lock
int3
pop
scas
stos
pop
push
leave
cmp
sbb
ja
jmp
sti
lock
or
lds
mov
ja
jmp
dec
out
adc
fcompp
test
mov
mov
lods
aas
repnz
xlat
pop
jle
lret
mov
and
jb
pop
lcall
dec
mov
inc
fldcw
jmp
xor
and
pop
adc
adc
rcll
fwait
roll
xchg
or
adc
mov
sub
ret
jo
mov
lret
insl
inc
rcrb
shrb
add
pop
or
scas
ljmp
daa
lret
sarl
cmp
lcall
sub
movsb
nop
cli
mov
and
pop
aad
pop
pop
pop
stc
leave
imul
or
fistl
mov
lret
movsb
data16
inc
or
pop
xor
icebp
pushf
xor
lods
insb
cltd
inc
jo
inc
dec
xor
sub
stos
cli
stos
jno
xlat
lea
fwait
and
xor
push
mov
dec
xor
cmp
dec
add
leave
jg
rolb
pop
inc
nop
outsl
dec
adc
and
mov
fnstcw
xlat
call
push
cwtl
stos
xchg
mov
in
pushf
inc
fstpt
lds
push
out
xchg
fadds
mov
dec
dec
mov
andb
inc
fs
pop
jnp
push
jmp
pop
lds
sbb
loop
outsb
mov
sbb
and
lea
inc
lret
pop
mov
lret
jo
repz
or
push
add
lods
push
ljmp
ss
adc
sub
aas
out
inc
ret
es
sbb
ret
or
ds
icebp
pop
push
dec
add
imul
lods
cmp
lcall
pop
loop
xchg
pop
loop
jg
outsb
shll
pop
sbb
sbb
mov
mov
movsb
popl
sub
in
pop
arpl
dec
and
cmpsb
sub
hlt
xchg
or
cmp
iret
shrl
in
add
lahf
fs
jnp
lock
pop
fldcw
inc
rcrl
sub
sub
mull
jp
sub
cli
push
std
stc
push
mov
push
fsts
sub
and
aas
xor
imul
lods
popa
fisubrs
sbb
out
mov
mov
inc
jae
lahf
call
dec
scas
sub
mov
and
fbstp
mov
inc
loope
xchg
in
mov
mov
popl
xor
mov
or
add
add
mov
xor
mov
jg
mov
je
inc
xchg
mov
fwait
repz
sbbb
cwtl
mov
ds
xor
out
and
fdiv
jae
sahf
imul
fdivr
aas
mov
ret
mov
push
fstpl
xchg
shlb
cmp
in
jne
jns
dec
mov
cld
sahf
xchg
sbb
cmp
data16
aas
or
dec
push
das
lock
push
sahf
pop
mov
pushf
xchg
clc
pop
cmpsb
push
push
push
cmp
das
test
pop
rcrl
mov
adc
xchg
jb
out
cmpsl
push
xor
push
or
cmp
imul
lods
ljmp
mov
pop
xor
inc
ret
lret
ja
sub
ret
repz
jo
insb
rcrl
stos
adc
pop
je
push
sub
cmc
out
gs
fsubs
mov
xchg
mov
lods
movsb
es
or
negl
pop
mov
push
pop
or
xchg
outsb
in
mov
insb
sysret
sub
incl
shll
sti
push
xchg
mov
ret
inc
inc
lret
ja
jns
xchg
enter
cs
inc
jns
xchg
rol
jns
dec
icebp
fistps
push
nop
fwait
push
add
decb
push
sbb
sbb
jg
inc
movsl
mov
fdivs
je
call
jmp
add
and
outsl
int3
pop
sar
mov
lods
mov
cmp
pop
add
testb
adc
cmpsl
mov
nop
add
je
sub
fdiv
mov
push
aad
int
xchg
lea
dec
in
cmp
loopne
fsubrs
adc
sti
out
loopne
cmp
adc
pop
jno
movl
scas
jno
and
stc
pushf
push
jbe
sti
aas
test
int3
sub
lock
pop
shr
cmp
mov
aam
jge
jg,pn
ror
inc
out
jge
cmp
aad
or
adc
call
loop
adc
ret
and
divb
movsl
add
rcrl
mov
cs
inc
jecxz
outsl
in
dec
dec
inc
insb
adc
in
adc
scas
mov
mov
add
std
aaa
mov
xor
sub
sub
pop
jnp
pop
sbbl
rcrl
decb
fidivs
lods
lock
repz
mov
push
fsts
xchg
fs
sahf
dec
mov
rolb
mov
xor
sub
lea
mov
jge
neg
pop
hlt
or
out
test
and
mov
push
stos
les
jbe
out
xchg
fs
sub
in
scas
mov
sub
and
aam
sub
arpl
testl
dec
adc
mov
hlt
aam
mov
lds
std
sub
in
imul
aam
pop
pop
mov
jl
nop
loop
mov
pop
xlat
mov
mov
xor
inc
cmp
cwtl
outsb
in
adc
pop
mov
xchg
adc
stos
cmp
int3
fdivrs
fsubr
addr16
cmc
xchg
sub
or
sbb
in
dec
fisttpll
loop
lcall
mov
shll
mov
sub
pop
insb
xchg
pop
push
cmp
outsl
fsubrl
xchg
push
idivl
hlt
adc
stos
xor
push
test
jb
bound
push
rol
pop
sbb
mov
outsl
mov
je
sahf
fildll
mov
cmp
or
inc
push
ja
pop
mov
mov
sbbb
mov
ss
mov
add
jp
cmp
and
gs
test
mov
pop
sbb
xchg
dec
sbb
clc
add
stc
dec
sbb
jg
jo
insl
je
aaa
jbe
sub
push
xchg
sbb
dec
daa
mov
jnp
xchg
jb
xchg
aad
jecxz
movsb
push
mov
xchg
xorl
fwait
push
test
mov
dec
pushf
cmp
adc
repnz
jo
iret
pop
dec
scas
jp
pop
cli
stos
dec
popl
jle
stc
sbb
push
int3
jge
inc
rcr
je
pop
jmp
cmp
movsl
nop
test
jns
cs
push
pop
jl
cmp
xchg
shrl
inc
mov
inc
or
xchg
flds
mov
or
repz
mov
add
cmp
test
sub
sbb
inc
or
push
lret
inc
jo
movsb
push
dec
cmp
insl
js
int3
cwtl
fdivs
fs
xor
into
lds
ret
mov
or
subb
pop
call
pusha
cmp
call
incl
adc
push
in
scas
sub
into
inc
push
jbe
inc
addb
mov
push
adc
test
stc
mov
and
imul
movsb
insl
addr16
sub
test
dec
jns
test
arpl
clts
clc
add
mov
sbb
and
test
pop
sub
pop
or
dec
inc
adc
fdivrl
or
enter
push
and
sbb
add
dec
sbb
add
push
pop
lahf
add
xor
or
test
jecxz
jns
loopne
sbb
jp
pop
gs
sahf
loop
adc
std
mov
pop
mul
jmp
pinsrw
inc
shll
cltd
mov
push
mov
pop
push
hlt
xor
call
enter
mov
cmc
aas
push
push
sub
sub
push
mov
inc
outsb
jg
lods
test
push
push
pop
shll
aam
push
in
mov
cmp
subl
xchg
dec
scas
jmp
pop
scas
sub
cmp
push
adc
addl
push
pushf
js
dec
inc
or
dec
adc
psrad
mov
popa
cli
add
sub
cmpsl
aaa
sub
test
pop
xchg
int3
jo
xor
pop
pop
and
jle
rolb
jns
pusha
pop
test
xor
data16
mov
fcoms
aaa
cmp
movsl
inc
pop
push
outsb
push
psubq
sbb
xor
push
mov
lcall
fstl
cmp
imul
push
mov
sbb
jge
fwait
sbb
fistpll
fs
jp
clc
cli
jp
mov
dec
pusha
adcb
jle
negb
dec
rcll
outsb
and
popl
dec
fildll
jnp
or
repnz
imul
dec
popa
cmc
out
push
push
and
dec
dec
loop
add
std
std
popa
dec
jb
xor
nop
or
jae
pop
arpl
mov
inc
in
fsubp
movsl
idivb
and
loop
jecxz
shl
push
mov
out
loope
rcrb
mov
xor
iret
stc
xchg
dec
cmc
dec
mov
or
xor
xchg
add
je
das
movsl
mov
add
lcall
aas
out
mov
cwtl
pop
mov
fistl
jbe
cmp
mov
leave
jle
mov
sub
push
into
nop
add
clc
sub
cmp
mov
xchg
dec
mov
sub
cmpsl
pop
imul
negb
in
add
loope
test
mov
mov
dec
movb
fsts
pop
mov
into
jmp
sti
mov
lods
or
adc
jnp
scas
pop
data16
xor
addl
dec
xor
in
dec
push
fiadds
cmp
bound
adc
xchg
mov
stos
sbb
rcr
jno
xchg
xor
movsl
mov
push
mov
fnstcw
cmpsb
mov
int
mov
sahf
sbb
sbb
lcall
sarl
cmpsb
lret
testl
pop
sbb
cmp
jg
int
xor
sub
jbe
repnz
xchg
rclb
int3
jo
cmp
mov
pop
vpand
mov
xchg
inc
inc
loopne
jae
push
add
ds
ja
outsl
xor
sbb
idiv
lret
add
mov
sub
das
int
cmpsl
push
testl
mov
aad
loope
jecxz
insl
pop
ficoms
lods
cltd
sub
push
in
popf
fldt
test
or
cmpsb
cld
jne
push
push
das
cs
or
in
call
cmc
data16
addr16
xor
add
ret
pop
lret
xchg
xchg
pop
cmp
pop
adc
shr
xor
xchg
cltd
push
push
das
jnp
les
mov
arpl
loope
cmp
movsb
pop
scas
jb
les
fldl
icebp
pop
xor
lods
jecxz
inc
or
xchg
push
dec
xchg
stos
mov
adc
pop
arpl
das
sub
fistl
mov
mov
and
inc
mov
int3
movb
mov
mov
and
pop
les
testl
add
es
cld
xchg
aam
addr16
sar
add
pushf
jl
fsubrp
andb
xchg
mov
addl
mov
dec
sub
in
shll
imul
push
xchg
sti
out
dec
jb
mov
xor
fldl
movsb
add
inc
cmc
push
cli
jecxz
es
sbbl
xchg
xor
push
pop
loope
lods
pusha
mov
dec
daa
fbld
stos
sbb
cmpb
lret
std
fisubrl
int3
shlb
mov
sbb
shrb
imul
cwtl
xor
push
mov
fcompl
dec
clc
cmp
dec
rclb
insl
sti
inc
pop
popa
stos
cld
test
mov
inc
fimull
mov
jns
xlat
inc
inc
and
mov
push
dec
aam
jno
jle
jmp
sbbb
and
fwait
and
pop
arpl
xchg
sub
mov
lock
push
bound
mov
andb
loop
loop
mov
into
leave
into
fwait
push
adc
xor
daa
fisubrs
mov
cli
rolb
mov
test
shrl
push
lea
lods
jecxz
xlat
push
jmp
cmpsl
adc
xor
loopne
jg
sub
in
rcrl
ds
push
fwait
test
es
jno
imul
imul
mov
mov
testl
pusha
ss
jmp
pop
enter
xor
inc
loop
cli
push
or
pop
pop
dec
push
int3
lret
cld
aad
pop
je
and
iret
test
stos
out
ds
hlt
rclb
inc
pop
mov
loopne
outsb
or
js
xor
cwtl
dec
aaa
inc
xchg
ja
test
rclb
jo
pushf
mov
jecxz
xchg
imul
fs
sbb
clc
inc
repz
pop
ljmp
ret
scas
ja
ds
push
out
inc
mov
fsubs
jae
and
mov
sub
sbb
repnz
jne
movsb
mov
jmp
pop
out
std
test
cmp
icebp
inc
sub
pop
aam
xchg
or
xor
pop
cwtl
mov
push
push
push
repz
insb
xchg
mov
fbstp
sbb
test
adc
dec
aaa
sbb
std
xchg
mov
cli
je
mov
mov
scas
mov
pop
dec
mov
leave
scas
aas
daa
dec
rorl
push
pop
rcrb
add
mov
inc
push
rorl
cs
inc
push
jnp
lret
hlt
lods
mov
jp
aas
shll
mov
add
inc
loopne
and
fnstenv
mov
stos
insl
jle
out
ret
mov
call
inc
push
enter
inc
mulb
sub
pop
out
aas
jmp
xor
outsb
push
in
xor
jb
jae
imul
or
xor
pop
idivl
add
dec
iret
ret
or
lods
jecxz
dec
cmpsl
fsubl
inc
jbe
lret
rcrl
dec
xor
lds
mov
stc
mov
cs
jl
pop
ret
testl
pop
mov
das
mov
daa
lea
ficomps
jns
ret
das
arpl
pop
dec
mov
aas
inc
xchg
aad
call
push
adc
pop
push
movsl
dec
insl
cmp
ret
scas
mov
imul
sbb
pop
imul
lret
dec
and
jne
lds
lds
sub
dec
cmc
inc
push
jno
aam
fwait
ret
pop
or
cli
pop
lods
or
jo
add
mov
pop
sub
rep
jns
in
stos
or
cmp
push
insb
and
adc
or
jb
fucom
sbb
rolb
scas
mov
in
push
xchg
lock
pushf
sahf
adc
xchg
jb
inc
sbb
jmp
sub
fstl
and
mov
jne
jge
lods
mov
dec
jg
push
jle
loopne
xchg
push
aam
stos
sub
push
rorl
push
or
mov
shrb
mov
popa
sub
test
leave
movsb
sub
loope
inc
push
rcrb
leave
and
imul
lds
inc
xlat
cmp
dec
rcrl
mov
divb
mov
cmpsb
dec
push
mov
mov
xorb
stos
xor
sub
adc
int3
adc
push
enter
dec
inc
xor
fdivl
fisubs
or
xlat
stos
add
stc
push
dec
and
das
xchg
pop
stos
ja
mov
popf
jmp
cwtl
stos
or
mov
xchg
pop
xchg
sbb
xchg
mov
hlt
pop
iret
xchg
ficoms
dec
pop
dec
xchg
and
call
stos
sbb
add
insl
push
push
mov
test
xchg
sub
gs
popf
xchg
cmc
outsb
stos
es
jo
mov
popf
fdiv
stos
imul
outsl
pop
and
stos
mov
fcoml
pop
and
stos
shll
sub
cmp
add
insl
xchg
jl
jmp
stos
and
insl
mov
mov
sub
test
std
add
push
aam
jmp
jbe
cld
dec
out
fwait
mov
xorb
cs
into
cmpsl
pop
lret
call
pop
out
cmp
lea
dec
aaa
in
xorb
push
js
sbb
inc
enter
lock
outsb
loopne
push
dec
movsl
pusha
push
gs
xchg
cmp
adc
in
jns
pushf
mov
mov
adc
xchg
xor
sub
xor
out
shll
add
ss
inc
adc
shrl
sbb
xchg
dec
jno
push
inc
rcl
and
and
jns
xchg
stos
pushf
pop
popf
lds
pop
mov
dec
mov
inc
inc
dec
in
xchg
lods
popa
dec
xor
dec
mov
xlat
mov
nop
inc
add
aam
repz
inc
rolb
out
je
lods
stc
dec
cs
std
sub
imul
shrl
or
cmp
hlt
xchg
cld
iret
icebp
gs
arpl
test
push
and
add
jnp
test
icebp
aaa
and
xchg
ret
pop
jb
cli
jb
push
out
fsubrs
push
adc
mov
xor
jae
fs
mov
pop
fs
push
push
cltd
movsb
je
out
sbb
inc
dec
pop
movsb
dec
sbb
sbb
aas
scas
cmp
cmc
push
xor
movsb
ficoml
push
dec
mov
mov
and
mov
xor
xchg
push
test
mov
cmpb
incb
mov
lahf
push
cmp
icebp
pop
leave
dec
rolb
loopne
orb
and
es
mov
dec
cld
or
push
push
pop
aam
cmp
ljmp
mov
es
lret
pop
push
mov
gs
idivl
xor
lahf
mov
cmp
or
xchg
cmpb
sbb
jecxz
add
mov
decl
jbe
mov
sarb
inc
and
dec
fsubrp
add
dec
jne
int3
mov
inc
dec
outsb
aaa
into
repz
mov
cwtl
out
adc
jae
loopne
jp
cmpsb
fiadds
xchg
outsl
test
mov
cwtl
sub
in
aam
jne
or
cmp
mov
cmp
mov
int
mov
imul
jmp
jp
inc
dec
push
jno
xchg
adc
fs
cltd
call
sahf
shrl
add
xlat
inc
fdivrl
pop
and
jp
adc
stos
fidivrs
sbb
dec
cmpl
lds
hlt
cmp
outsl
rcrl
clc
sbb
inc
dec
push
jle
inc
shll
mov
push
sub
lea
int3
nop
push
outsb
imulb
loope
popa
in
addr16
xlat
popf
push
shrb
cmp
or
arpl
lds
mov
test
or
loop
or
aaa
pop
popa
nop
add
mov
mov
jmp
out
jo
mov
pop
pop
lea
cmp
and
enter
xchg
int
cmpsb
adc
jp
pop
xchg
imul
pop
rolb
dec
outsl
sarb
pop
dec
bound
lret
mov
in
xchg
mov
mull
fisubrl
ret
fs
repnz
push
lods
cmc
inc
push
xchg
shlb
add
fidivs
add
into
jne
fxtract
test
jmp
lahf
aas
dec
movsl
test
xchg
mov
lea
push
mov
gs
push
push
xchg
push
fnstcw
dec
movsl
stc
sahf
add
pusha
or
daa
xlat
xchg
pop
sahf
hlt
cmp
ret
dec
nop
test
into
sbb
mov
sub
out
out
das
add
cmp
cmc
ficoml
xor
mov
push
adc
mov
cmc
add
push
mov
std
jge
test
lds
ljmp
loope
js
xlat
xor
or
xlat
push
imul
scas
das
push
into
xchg
mov
inc
sbb
or
rcll
sub
dec
mov
push
sbb
clc
jg
sbb
in
aas
dec
mov
mov
imul
mov
mov
inc
shufps
repnz
adcl
icebp
lods
mov
divl
inc
or
add
scas
xchg
jmp
std
xor
mov
jo
pop
mov
scas
inc
outsl
jp
adc
sbb
jne
movsb
sbb
rcrl
mov
xchg
movsl
sub
pop
add
or
fwait
inc
push
sbb
or
cld
xor
and
jnp
rcrl
hlt
cmp
sbb
cwtl
in
push
jmp
loope
ret
es
fwait
daa
movsl
lret
cli
lahf
cltd
pop
adc
ret
push
inc
repz
not
and
insb
jg
addl
cmp
cmp
jbe
inc
and
adc
mov
jp
xorb
scas
stos
mov
dec
adc
xchg
out
xchg
cmc
jnp
test
cmpsb
dec
jle
hlt
add
or
pop
push
inc
test
pop
hlt
ret
adc
mov
or
mov
jno
mov
aam
in
das
roll
movsl
xchg
jg
mov
clc
ret
lock
inc
outsl
pop
jl
stos
mov
push
jns
decb
pop
test
in
mov
fldenv
dec
rorb
or
jb
outsb
arpl
loopne
jle
orb
movsl
push
cli
clc
jne
ss
jecxz
imul
lea
cmp
mov
stc
push
cmpsl
xorb
jbe
xor
sbb
mov
sub
pop
lret
mov
adc
fildl
xorb
pop
jmp
xor
push
test
xor
cmp
add
mov
repnz
xor
cltd
add
push
mov
cmp
xor
outsb
rcrb
xor
lea
jb
pop
call
push
inc
and
push
loope
xchg
jb
stos
mov
and
mov
adc
pushf
pop
test
fstps
mov
dec
push
daa
xor
xchg
test
or
and
je
sub
or
add
insl
add
into
and
or
pushf
shlb
jns
imul
stos
mov
in
je
dec
xor
out
jae
xor
je
xchg
leave
scas
xchg
int3
stos
and
pop
outsb
test
popa
pop
pop
leave
inc
mov
or
sbb
movsb
adc
cmpsb
cli
js
jne
xor
push
sbb
add
sahf
push
sub
jb
push
sbb
or
mov
xchg
popa
fsubp
es
pop
cmp
xchg
cmpsl
imul
add
sbb
rclb
movsb
cmpsb
clc
or
or
push
cld
push
push
jae
ficomps
mov
movsl
jl
test
std
sahf
pop
ret
xor
xchg
sub
inc
pop
pop
sbb
repnz
mov
aam
jle
in
inc
movsl
outsb
dec
push
cmp
cmpsl
popa
dec
popf
fs
mov
cmpl
das
cs
and
das
mov
stc
sbbb
add
jmp
out
dec
xchg
rcr
cmp
mov
lods
scas
push
cmp
mov
mov
push
hlt
jle
insb
mov
loopne
pop
xor
int
mov
push
mov
daa
pop
sub
jo
aad
or
xor
push
inc
inc
test
das
lods
inc
mov
imul
add
inc
pop
inc
je
ljmp
mov
cmpb
add
sub
mov
call
in
int
xor
pop
jmp
cwtl
adc
cmpsl
pop
aam
add
pop
loop
inc
scas
push
pop
movsl
mov
lret
or
dec
rolb
xchg
js
xor
inc
les
fists
pop
roll
xor
jg
adc
mov
mov
sbb
inc
mov
mov
dec
mov
movsl
and
mov
outsl
rolb
aaa
mov
push
pop
xorl
loopne
pop
arpl
stos
mov
adc
mov
xor
out
jge
cs
aaa
mov
or
insb
jmp
jl
pop
push
cltd
fildll
cmpsb
jle
mov
cmp
xchg
test
stos
scas
repz
cwtl
stos
jp
pop
jae
sub
aam
sbb
insb
add
mov
mov
xchg
xchg
xchg
bound
and
mov
shrb
mov
arpl
jno
dec
ffreep
je
popf
mov
cmc
mov
dec
hlt
mov
xor
lret
push
fstp
or
popf
mov
mov
inc
out
adc
dec
les
loope
push
int
mov
mov
mov
sub
int3
stos
add
xchg
jb
clc
sbb
xchg
sbb
ljmp
mov
fs
sub
jae
ror
mov
jg
and
inc
push
dec
jo
jb
or
fmull
jbe
lea
test
lds
int
daa
mov
jb
outsl
or
xor
jb
inc
xor
and
test
data16
seta
xchg
bound
cmp
shlb
pop
add
sarl
xor
imul
ss
inc
popl
mov
clc
push
out
roll
push
sbb
outsb
and
scas
jb
inc
cmp
jmp
lcall
js
xor
rorb
xor
xchg
arpl
icebp
add
into
fsub
fpatan
iret
pop
imul
mov
dec
cwtl
add
add
jns
test
pop
xchg
imul
je
out
sbb
mov
dec
xchg
hlt
and
shl
mov
leave
inc
jmp
adc
jnp
dec
or
scas
xchg
aaa
addr16
xchg
cmp
es
out
fildl
mov
mull
sahf
in
mov
jno
pop
sbb
cmpsl
pop
jbe
sub
pusha
push
and
or
sbbl
xchg
sbb
es
adc
ftst
ds
mov
int
aaa
or
in
sti
cltd
mov
sbb
data16
insl
imul
dec
nop
or
push
xchg
stos
insb
cltd
jp
mov
fstpt
inc
mov
repnz
sbb
add
andb
fdivrs
sbb
cmp
std
cmp
mov
ret
pop
sti
bound
mov
jle
sub
cmp
sbb
bound
rolb
inc
cld
inc
sbb
std
xor
jp
cmp
adc
or
sbb
cmp
repnz
jge
jg
or
sub
jno
push
dec
pop
and
push
mov
xorb
push
sub
loope
leave
pop
popf
ds
cmpsl
fcoml
sub
mov
arpl
add
mov
cmp
push
dec
std
xchg
rcll
stos
mov
mov
jnp
dec
out
cltd
dec
andl
dec
push
mov
jnp
data16
aaa
stc
push
fstps
stos
ds
pop
fisttps
call
mov
inc
jl
rorl
clc
cmp
movsl
sbbb
aam
jle
lock
cmpsb
push
aas
lahf
daa
dec
xchg
out
cwtl
xchg
xchg
cmpsl
sbb
xchg
ret
dec
loopne
xchg
add
jae
adc
and
dec
mov
cmpsb
dec
in
xchg
xor
pop
clc
imulb
pop
mov
mulb
mov
test
add
cld
sub
xor
ds
daa
mov
dec
fnsetpm(287
popa
adc
sub
in
lahf
data16
adc
sbb
fidivl
rcrb
cmp
mov
fsubl
mov
idivb
fsubrl
fwait
loopne
inc
xchg
loopne
and
sub
cmp
dec
sub
lods
mov
andb
out
add
xor
push
cmp
xorb
enter
push
enter
sbb
sarl
cmp
push
adc
add
stc
pop
mov
ds
push
cmp
sahf
xor
imul
stc
dec
int3
pop
roll
or
cmp
andl
stos
fbld
add
mov
rcll
cli
push
adc
sub
cmpsb
push
in
or
std
outsb
xor
cmp
adc
mov
test
pop
xor
stos
mov
dec
and
cpuid
jnp
add
mov
dec
popa
or
jp
dec
pop
cmp
jge
out
cli
rorb
xor
out
lcall
cmc
and
enter
xchg
mov
testl
pop
mov
dec
sbb
jb
test
in
jb
fcomps
fsubrl
jge
jecxz
fs
sub
or
inc
cltd
movsb
pop
or
mov
mov
jae
cmp
nop
or
pop
mov
mov
bnd
mov
lahf
ja
in
lods
std
inc
test
es
jns
sbb
push
fisubrs
mov
sbb
shlb
ret
mov
fistps
out
mov
lahf
inc
clc
push
fnstenv
inc
mov
add
push
jns
pop
sub
push
cmc
jg
or
or
test
cmp
shll
adc
cmpsb
fwait
lea
push
sbb
pop
mov
mov
sub
xchg
fsubs
xlat
fdivr
push
inc
mov
sub
xchg
insl
push
divb
in
mov
jb
enter
orl
mov
outsl
rorb
movsl
adcl
shll
popa
sbb
mov
mov
and
mov
or
addr16
fistl
in
mov
mov
popf
int
push
sbb
mov
xchg
cmpsb
sbb
les
dec
xchg
je
fwait
test
loop
xor
xor
aam
push
mov
mov
inc
lods
stos
xor
into
jge
jb
push
pop
pop
push
clc
lods
lods
sti
out
sub
xchg
and
fsts
pop
insl
divl
sub
pop
or
sarl
mov
mov
insl
lds
push
push
lock
fs
frstor
or
js
push
pop
aas
jne
insl
mov
and
loope
roll
sub
int
dec
cmc
lods
fildl
outsb
xchg
push
ret
pop
jp
jns
dec
stc
adc
std
pop
divl
dec
and
mov
adc
fs
icebp
hlt
sbb
repnz
jo
imul
outsl
jne
lret
fisttpl
aas
rcl
pop
ficompl
cli
aam
cwtl
fisubs
jnp
nop
jb
cmp
sub
xchg
jle
pop
fisttpll
adc
inc
dec
add
add
aad
jmp
xchg
adc
adc
xchg
out
ds
sub
pop
jge
popa
aas
inc
inc
stos
mov
daa
mov
outsl
pop
mov
inc
pop
cltd
pop
insb
xchg
xchg
adc
cmp
inc
es
add
or
fstps
adc
mov
push
xchg
mov
sahf
xor
pop
mov
test
xchg
cmc
daa
leave
mov
cmp
lods
mov
mov
add
enter
push
cs
pusha
js
pop
popf
jle
mov
jbe
daa
xchg
push
cwtl
pop
test
test
sbb
jae
xchg
inc
add
or
jg
loopne
cmp
lods
pop
push
les
fs
inc
jg
lods
sbb
mov
jl
mov
inc
push
ss
in
fisubl
dec
into
fidivrs
shlb
mov
mov
shlb
and
add
jb
popf
mov
push
push
xor
cmp
in
cs
call
mov
or
scas
into
fidivrl
lods
incb
push
mov
add
dec
add
jno
sti
mov
push
clc
xor
popf
scas
repz
stos
fstl
ret
fsubs
or
lret
and
mov
sub
sub
cmp
push
dec
out
dec
jge
xor
bound
sbb
inc
test
xchg
dec
lret
adc
ret
out
pop
inc
jns
ja
mov
cld
std
fwait
sub
mov
mov
push
je
data16
jecxz
push
mov
jo
xor
ffree
and
aam
aaa
sub
mov
push
inc
stos
push
cmp
lcall
xchg
aas
push
lods
mov
or
dec
pushf
jae
aas
cmp
dec
pop
jl
shll
cmpsb
stos
arpl
ss
or
outsb
and
jl
jmp
outsb
push
fs
ud0
jg
and
fwait
cmpl
movsb
aas
add
jge
adc
and
adc
cmp
inc
jle
icebp
push
add
aas
fstpt
sub
movsb
popa
xchg
inc
xchg
jb
fwait
daa
xchg
in
mov
or
aaa
shrb
ret
cli
adc
outsl
decl
fs
and
dec
xor
pop
or
fs
mov
call
test
js
sub
push
ja
jg
fld
ret
mov
mov
xchg
xor
and
cs
push
out
dec
lea
aad
pop
dec
xorb
or
imulb
jne
sbb
jg
cmp
pop
push
fnsave
jmp
xor
fdivl
xor
movsb
ljmp
es
adc
jne
pusha
xchg
and
push
pop
add
and
mov
xor
jge
push
fs
gs
sub
filds
ss
jmp
jmp
push
imul
adcb
push
jbe
cmp
jo
cmp
fwait
inc
les
jmp
pusha
shlb
subl
and
mov
push
dec
stos
cmp
cmp
mov
sub
mov
and
adc
mov
enter
and
inc
xchg
dec
jle
or
add
daa
lret
dec
jo
in
dec
mov
in
sub
sahf
xchg
add
dec
xor
popa
mov
out
ret
fistpl
xlat
xor
pop
pop
lea
int3
jae
out
cmp
jae
add
adc
push
cmpsb
and
dec
or
xlat
mov
insl
jne
add
jns
shl
dec
push
pop
clc
or
out
add
dec
xchg
pop
push
fstl
aaa
jp
jp
mov
lret
xchg
insb
dec
in
ss
clc
pushf
push
xor
adc
adc
push
fcomp
cmp
inc
pop
push
pop
xchg
lds
and
shlb
sub
sbb
stc
pusha
sbb
bound
lret
mov
in
xchg
xchg
shr
iret
into
inc
int3
mov
test
pop
xchg
lret
divl
dec
lock
xchg
lods
push
popf
int
ss
inc
mov
sbb
mov
loopne
xlat
repnz
das
and
sbb
xchg
aaa
cmp
xor
stos
jbe
cmpsb
sbb
enter
test
into
fistpl
movsl
fdivr
push
mov
loop
jmp
adc
dec
cli
pop
jnp
or
es
cltd
and
std
js
cmp
pop
repnz
popf
movsb
arpl
or
inc
adcl
out
push
inc
in
xor
adc
sub
jne
and
test
orb
inc
sub
mov
cld
lds
mov
mov
loope
jno
sub
add
sbb
cmpsb
push
int
lods
es
dec
scas
dec
test
cmp
int
insl
pop
push
mov
inc
loope
je
adc
mull
mov
cmc
inc
mov
jecxz
jp
mov
adc
enter
les
sub
ret
add
stc
and
inc
rolb
or
aam
rorl
arpl
inc
fsqrt
mov
fdivr
mov
js
mov
dec
mov
push
decl
loop
sbb
jle
or
jmp
jle
xor
or
dec
sub
icebp
dec
stos
dec
xchg
stos
dec
mov
sbb
jp
cld
test
shl
adc
fld
inc
adc
out
mov
sub
cmc
dec
int3
rcrl
sub
lret
gs
repnz
or
mov
mov
fimuls
dec
cmp
xchg
ret
mov
rclb
mov
add
outsl
in
aad
mov
and
pop
out
ljmp
or
mov
cltd
cmp
xchg
pop
sbb
xchg
push
xchg
inc
sbb
in
inc
shrl
adc
mov
xor
test
dec
inc
adc
mov
dec
push
inc
mov
inc
fwait
inc
mov
and
push
inc
adc
mov
ja
aaa
push
fisttpll
xor
mov
and
std
loopne
int3
das
shl
jle
popa
xor
aad
add
fmulp
push
fwait
arpl
pop
in
loope,pt
mov
adc
dec
test
daa
mov
sbb
jge
loope
aam
dec
mov
add
xchg
shlb
je
cli
pop
xchg
adc
mov
mov
push
push
fsts
aad
xlat
add
repnz
icebp
sub
mov
movsl
or
shll
imul
pushf
ret
aas
cmpsl
jmp
sub
fnstcw
fildl
test
cs
mov
insb
pusha
xchg
xchg
dec
in
lahf
leave
sti
sbb
inc
and
stc
fnstsw
je
push
lret
jbe
or
shr
mov
ss
int3
inc
shll
popf
mov
sbb
js
icebp
add
cld
or
ja
das
xchg
mov
data16
jl
dec
rolb
push
jbe
dec
jne
scas
xchg
xor
cltd
pop
das
xchg
inc
pop
fsubrs
shrb
repnz
jecxz
ss
cld
xchg
fiadds
lea
insl
cmp
mov
hlt
pop
sub
sub
add
ja
mov
xlat
dec
lea
inc
out
lret
pop
scas
lods
jecxz
or
fwait
scas
mov
mov
sub
es
sub
lahf
inc
stc
fcmovnbe
adc
pop
lahf
xchg
das
mov
and
inc
repz
rcrl
pop
enter
jns
xlat
ljmp
adc
pushf
nop
lret
mov
adc
shlb
pop
sub
push
mov
icebp
mov
fildll
xchg
pop
aaa
mov
add
lock
mov
jecxz
jbe
pop
lret
add
rclb
mov
and
lea
add
or
sbb
sbb
push
test
lods
sub
adc
sbb
mov
out
shll
adc
mov
add
pop
repnz
pusha
cmpsl
mov
mov
push
xlat
mov
mov
sbb
xchg
mov
mov
ljmp
adc
xchg
mov
andl
adc
mov
popf
add
dec
ljmp
clc
inc
stos
mov
sbb
jp
jge
adc
cmpsl
out
cmp
jno
pop
nop
fs
mov
mov
rclb
movsb
add
jecxz
cmp
cmpsb
ret
jg
addb
xchg
test
ljmp
shr
pop
fbld
andl
filds
data16
jmp
ret
add
fdivrl
xchg
pop
mov
int
and
jp
jbe
jmp
push
pusha
insb
sub
out
jmp
cwtl
sub
insl
and
push
xchg
add
add
mov
push
push
push
movsb
pushl
push
cs
insl
mov
jg
mov
push
or
lds
add
out
popf
fwait
jns
cmpsb
test
scas
filds
xchg
cmpsl
imul
std
scas
inc
jne
xlat
inc
stos
stos
mov
mov
in
sub
push
loop
mov
bound
out
call
push
icebp
into
ja
ja
les
andl
jmp
mov
pop
outsl
subl
in
lahf
mov
popa
subb
test
xlat
push
and
jmp
dec
lds
repz
les
mov
jns
mov
adc
dec
cmc
pop
xchg
dec
xchg
xchg
addl
out
sti
or
popf
shrb
inc
xchg
sbb
mov
mov
int3
inc
add
mov
inc
leave
in
fdivrp
xchg
mov
cmpsl
cmpsb
nop
and
loop
rclb
js
jmp
adc
pop
inc
sub
nop
xchg
add
lods
jl
xorb
lret
sbb
mov
test
add
xchg
pop
stos
jne
xor
outsl
jmp
mov
dec
imul
cmc
adcl
sahf
xchg
jle
fsubrs
dec
cmp
pop
jnp
or
fdivrl
mov
fdivl
mov
cmp
in
repz
cmpsb
sbb
xchg
mov
rorl
xchg
pop
xchg
outsb
lods
fmuls
andb
dec
cmp
push
push
lds
pop
mov
xor
pop
outsb
daa
leave
cmp
out
out
mov
scas
cmc
or
shrb
inc
sub
add
cwtl
clc
lds
in
sub
ja
sbb
ljmp
inc
xchg
lcall
ss
stos
mov
dec
rorl
sub
sbb
xor
popf
stc
dec
mov
sbbl
xor
pop
push
push
sbb
mov
sti
mov
add
fmulp
lret
or
pop
xchg
flds
mov
in
aas
lret
inc
xchg
push
and
pushf
or
ret
xchg
sti
ss
jl
dec
jns
dec
ret
ljmp
fcoml
clc
dec
lret
push
xchg
out
and
push
cmp
ds
or
adc
out
xor
lods
pop
and
dec
push
sbbb
jle
shrb
mov
push
je
sub
shll
outsb
jae
dec
loopne
inc
aam
lock
mov
outsb
pop
cld
cltd
adcl
repz
mov
cmp
imull
jne
lock
mov
add
or
mov
pop
push
mov
dec
cltd
rorb
imul
xchg
je
test
add
and
adc
lret
loop
xchg
sbb
repnz
stos
out
adcl
cmp
in
xor
jo
push
mov
je
outsl
inc
cmp
ja
cltd
addr16
dec
mov
orb
add
aas
fmull
loop
mov
repz
ljmp
cmc
mov
sub
mov
inc
jl
sbb
jmp
cmc
clc
jge
mov
push
inc
out
popa
fcoml
addr16
inc
cltd
mov
adc
outsl
mov
out
xor
xor
int3
dec
push
adc
adc
lods
sbb
test
pop
rclb
xor
das
aaa
push
adc
pop
lret
out
jg
lea
sub
cmc
loop
clc
add
push
lods
cwtl
cmpsl
push
sbb
inc
mov
clc
imull
lock
sub
sbb
mov
push
xor
mov
and
sub
push
jne
adc
lcall
xlat
int
test
int
jmp
mov
sahf
cmpsb
mov
scas
push
dec
lea
mov
inc
xchg
push
sub
mov
push
aaa
mov
aas
and
hlt
mov
xchg
cs
inc
fcom
mov
daa
inc
jb
push
pop
rcrb
adcb
sbb
pop
inc
xchg
add
lret
pushf
fs
mov
icebp
jae
cmpsb
dec
in
add
scas
push
mov
lcall
enter
push
cli
push
shlb
cmpsl
std
shl
aas
inc
jecxz
sub
xchg
mov
or
sub
popa
stc
jno
test
pop
pop
nop
scas
ficoml
mov
inc
cld
sub
ja
fwait
adc
jecxz
sbb
daa
jge
iret
ja
xor
mov
sub
pop
fimuls
lods
xchg
out
aaa
and
rcll
daa
cmpsl
outsl
in
shl
movsl
into
xor
inc
clc
push
lahf
pop
rclb
mulb
mov
outsb
fidivs
fsubrl
fld
jl
bswap
or
aam
ret
lcall
ds
cli
push
push
mov
xchg
ffreep
dec
pop
aam
sbb
or
ljmp
lret
push
jmp
inc
add
pushf
xor
stos
stos
xchg
into
imul
stos
inc
insl
test
xor
fldcw
sbb
dec
xor
jecxz
rcrl
adc
in
xor
test
imul
and
mov
ret
pop
xchg
dec
push
jbe
inc
jo
sbbl
insb
lret
fcomip
addr16
push
imul
cltd
inc
inc
js
inc
cs
movsb
push
imulb
lods
dec
xchg
xor
scas
sub
mov
add
sub
cmc
jno
cmp
xchg
sbb
sub
dec
xchg
sub
or
mov
fistpll
fnstcw
data16
sub
clc
mov
je
pop
mov
nop
jo
mov
mov
sub
mov
cmp
popf
loopne
je
int3
mov
imul
dec
sbb
outsl
lret
lods
div
push
pop
push
sbb
mov
mov
sarl
and
std
and
cld
pop
out
mov
cmpsb
fistl
shll
adc
cmp
test
push
xor
lret
mov
ja
lcall
mov
jnp
push
push
ror
add
adc
nop
or
and
enter
sahf
mov
insb
arpl
xor
inc
cmp
hlt
clc
jns
pusha
push
hlt
pop
arpl
popa
mov
outsl
jge
cwtl
inc
cmp
fists
fwait
gs
in
pop
sub
lret
jp
insl
and
push
fbld
sbb
push
xchg
lret
mov
xor
pop
cmc
and
je
ss
pop
incl
cmp
mov
mov
push
mov
dec
inc
fs
in
shll
cmpsb
loopne
push
popa
test
cwtl
sub
xchg
leave
xor
movsl
add
repz
or
pop
leave
push
lahf
add
xor
hlt
iret
push
pop
jg
fsqrt
and
and
cvttps2pi
outsb
fs
pop
lret
shll
jo
mov
inc
sbb
inc
mov
cmp
pop
int3
imul
xor
in
lock
les
or
jp
cmp
mov
inc
cmp
lcall
sub
pop
mov
loop
push
jbe
shrl
mov
mov
xor
test
sahf
imul
leave
push
test
insb
pop
jno
xchg
pusha
add
dec
lret
ja
mov
test
sub
in
jo
lods
stos
jmp
xor
pop
repnz
or
les
push
dec
lds
push
repnz
lret
pop
jo
packuswb
imul
es
pop
and
imul
push
and
pop
push
sbb
fiaddl
adc
sbb
imul
xchg
mov
or
and
xor
rorl
fcomps
mov
cmp
hlt
or
jo
sub
add
mov
inc
subl
fdivrl
and
jne
jle
test
lock
push
adcl
les
fbld
fs
pop
cmpb
scas
jns
fcoms
push
pusha
pop
dec
aam
mov
lret
mov
sahf
mov
orb
sti
ret
pop
sub
enter
rcrb
fwait
add
or
jg
repz
in
out
sub
xchg
inc
outsb
jb
add
in
movsb
add
scas
mov
pop
jg
push
in
inc
add
sbb
jg
jmp
aaa
sahf
stos
bound
jecxz
adc
fwait
ds
push
ljmp
xchg
cmpsb
lds
pop
mov
fdivr
int
jmp
mov
sub
mov
cwtl
jp
sub
dec
dec
jg
and
cmp
jmp
loop
call
or
lret
and
adc
mov
lds
mov
out
stos
lcall
shlb
push
test
xlat
ja
add
mov
sti
jge
test
pop
data16
and
lret
cld
push
sub
cs
out
in
or
pop
ret
or
adc
sub
push
mov
xlat
cmp
out
xchg
icebp
bnd
loopne
fnstcw
add
xor
sub
inc
popa
cs
dec
clc
scas
add
dec
mov
dec
adc
lahf
pop
and
xor
mov
les
or
mov
repz
imul
xchg
push
in
push
popa
cmp
outsb
jmp
xchg
test
div
cmp
lods
dec
push
loopne
aas
xchg
jmp
cmp
repz
pop
and
rcr
stos
xorb
pop
push
pop
rcl
xchg
rclb
mov
cli
stc
push
test
push
stc
leave
or
popf
mov
jae
mov
orl
popa
pop
inc
push
popf
or
aas
sbb
test
sub
pop
sub
out
inc
xor
sahf
loope
or
stos
push
nop
mov
imul
push
mov
jns
and
sbb
push
enter
cld
ret
add
inc
movsb
add
xor
loopne
loop
insl
jo
adc
fimull
adc
popa
dec
rcrb
inc
out
std
inc
mov
sahf
cmpsb
xor
mov
andb
outsl
xchg
daa
cmp
inc
pop
mov
and
lods
cmp
mov
jbe
fcompl
test
movsl
mov
push
in
mov
push
call
push
or
loope
xchg
aam
test
rorl
cmp
ret
loope
mov
fwait
push
aad
les
pop
dec
filds
xorl
mov
and
mov
aas
push
xchg
fsubrl
lret
mov
pop
ds
fimull
mov
testb
fmuls
rol
mov
jg
dec
aad
or
aam
jge
insl
dec
cwtl
mov
dec
in
pop
sub
pop
lahf
pop
mov
nop
or
fldt
jecxz
xor
nop
fwait
mov
es
pusha
sub
mov
add
add
inc
mov
mov
aas
pop
rorl
enterw
shr
mov
int3
dec
adc
xchg
les
add
add
dec
sbb
pop
push
xchg
and
jbe
pop
mov
ret
push
pop
arpl
fs
lds
xchg
dec
mov
data16
mov
cld
imul
sub
out
ret
in
pop
jae
mov
test
or
pop
jmp
gs
cmp
or
in
orl
push
fcompp
imul
jnp
jo
sbb
jmp
mov
push
sbb
push
pop
mov
mull
pop
jbe
fildll
mov
nop
add
adc
and
dec
addr16
inc
pushf
leave
pop
bound
push
lcall
sbb
lret
fcoml
mov
lock
xor
arpl
outsl
sti
and
hlt
cs
in
cmp
push
movsl
lods
pop
cmc
sub
stos
ss
stos
in
loop
mov
stos
or
dec
or
xchg
adc
lahf
in
xchg
mov
or
loop
cltd
inc
pop
leave
push
ljmp
jno
add
add
insb
xor
cmp
pushl
mov
int3
jge
push
add
sbb
enter
into
mov
xchg
add
sub
mov
out
js
sti
jmp
jb
sti
mov
lods
mov
jle
and
aad
xchg
pushf
mov
repnz
rol
pop
or
in
cmp
cltd
ret
dec
sub
pop
mov
filds
out
push
mov
cmp
lahf
add
adc
mov
inc
mov
arpl
out
xchg
mov
lret
cmp
js
sub
push
mov
test
cmp
cmpsl
xor
xor
push
fnstenv
mov
test
fnstenv
cmp
repz
add
fisubrs
and
cmp
push
dec
nop
enter
aas
fidivl
lret
outsb
rorb
push
mov
jmp
enter
pop
pushf
mov
xor
push
leave
rorb
mov
mov
sbb
mov
jo
adc
or
mov
ret
jl
movsl
pop
add
jne
out
or
mov
jb
xchg
imul
addr16
repz
out
std
test
dec
sub
dec
cli
inc
cld
mov
add
shll
dec
jp
sbb
loope
pusha
mov
lods
arpl
js
lahf
add
pop
xor
fwait
xchg
dec
pop
addr16
call
dec
scas
loopne
ss
xchg
xchg
cmp
mov
mov
jp
xor
das
jns
mov
cwtl
add
mov
repnz
xchg
arpl
push
pusha
dec
imul
sub
sub
push
fimuls
loope
mov
xchg
je
mov
jbe
cmc
out
aam
pop
xchg
jnp
cs
adc
mov
mov
jcxz
mov
movsl
pop
gs
pop
rol
jge
inc
mov
adc
push
push
gs
mov
into
push
jmp
and
daa
sahf
push
divps
lahf
fldenv
xchg
rorb
in
loopne
xlat
dec
adc
or
mov
push
imul
lahf
in
rol
aam
push
mov
push
imul
cld
fadds
pop
jg
imul
or
hlt
bound
rclb
sub
push
test
lods
pushf
aas
cmp
lret
mov
cmpsb
popf
or
or
ret
sub
aam
hlt
outsb
hlt
push
daa
lret
cmp
mov
push
in
add
roll
int3
je
fstpt
cmp
out
add
jmp
lret
pop
aad
sbb
outsl
stos
enter
jnp
jp
nop
push
test
inc
vphsubbw
mov
movsl
sub
sti
arpl
xor
insb
jecxz
rolb
shlb
dec
std
push
sub
outsl
cs
aaa
mov
jno
test
xor
cli
jmp
inc
or
out
mov
mov
cmp
dec
or
xor
aad
ret
aas
outsl
or
cmp
mov
rol
mov
or
jns
lcall
pop
pushf
stos
outsb
jp
sub
mov
aam
mov
into
hlt
mov
nop
pop
lahf
jo
pushf
andb
mov
or
arpl
gs
scas
mov
xchg
imul
mov
das
mov
pushf
mov
pop
rcr
loope
fdivr
mov
jle
inc
push
sbb
adc
push
out
out
loop
mov
push
lea
js
outsl
test
cmc
cltd
mov
es
sbb
jle
mov
push
inc
pop
sti
ret
xor
dec
dec
cli
setb
xchg
imul
adc
daa
pop
movsl
call
movsl
lret
mov
mov
xchg
dec
out
int3
rorb
pop
jp
or
rol
out
pop
jo
rorl
in
xor
imul
shlb
mov
sbb
aad
lcall
cld
shll
fcoml
in
pusha
xor
jnp
cmp
mov
jp
xchg
jg
sbb
jne
sub
insb
fcompl
arpl
fwait
dec
xchg
mov
call
mov
push
pop
mov
pushf
push
pop
out
sarl
push
sbb
push
mov
outsb
jmp
sbb
fildl
mov
std
jmp
push
jecxz
mov
sbb
mov
cmpsb
dec
and
sub
sub
ljmp
lea
cld
aas
mov
push
loop
sbb
ljmp
push
ja
subb
or
movsb
push
push
mov
add
dec
repz
adc
jnp
mov
repnz
push
or
or
lcall
cmc
adc
loop
lret
cmpsb
out
adc
jbe
iret
jle
shl
push
push
push
or
cld
jmp
mov
lds
mov
rolb
gs
jns
ds
mov
inc
mov
daa
mov
push
das
fidivrs
push
jb
imull
push
out
fst
das
push
jb
dec
imulb
add
clc
je
mov
pop
shrl
sub
pop
out
adc
mov
push
in
mov
push
pusha
js
cmp
call
addr16
or
push
fdiv
jbe
cmp
fbld
cmp
add
aad
sub
cmp
push
dec
mov
and
js
loop
lahf
cltd
imul
or
and
inc
pop
jnp
jns
sbb
dec
dec
and
push
js
mov
mov
cld
add
insb
dec
popa
lds
xchg
inc
pop
jns
movsl
sub
and
adc
icebp
sbb
or
pop
add
adc
mov
xor
das
add
and
adc
sahf
cli
xchg
mov
push
cmp
mov
imul
negb
gs
inc
jnp
jnp,pn
fisttpll
fcoml
mov
or
dec
xor
mov
lahf
scas
ljmp
inc
lds
sbb
push
lods
sub
mov
pop
mov
jg
add
or
add
mov
mov
push
jns
out
aam
cmp
pop
js
mov
notl
pop
in
aam
jne
data16
gs
adc
dec
fs
pop
jnp
popa
cli
mov
fwait
pop
push
cmp
in
int
cmp
jmp
mov
lret
int
pop
xchg
mov
nop
mov
push
push
lcall
mov
push
out
sbb
mov
in
add
sub
xchg
inc
dec
push
adc
mov
iret
jg
xchg
pop
hlt
daa
jle
push
inc
dec
rcrl
fwait
imul
fnsave
sbb
and
in
repz
xchg
fucomi
fsubs
jne
rclb
xchg
or
lahf
cld
loopne
sarl
and
js
lock
imul
hlt
mov
pop
xor
adc
mov
and
cs
rorl
cmp
jmp
xchg
and
mov
push
adc
dec
movl
fstp
fcmovnbe
lcall
or
jl
jecxz
ror
push
mov
dec
lods
push
mov
scas
cltd
orb
jle
popa
faddl
shlb
and
aam
shll
sbbl
pop
js
loop
outsb
cmp
sbb
mov
push
sahf
inc
stc
jp
and
pop
sbb
shrl
dec
mov
jp
sbb
xor
sbb
stos
test
aas
pop
sub
sarl
and
into
and
push
icebp
cmp
inc
dec
andl
xchg
out
push
adc
inc
cmp
mov
mov
cmpsb
xor
and
add
aaa
repnz
loop
push
sub
mov
cmp
sub
std
mov
xor
add
repnz
cmp
mov
and
cmc
shll
outsb
cli
sti
imul
insb
xor
fistl
jo
push
icebp
push
in
sub
jne
cmpsl
adc
imul
jnp
jl
sbb
mov
sub
cmp
adc
out
mov
inc
mov
fistpl
mov
mov
xchg
subb
sti
outsb
mov
ret
aam
sbb
jl
data16
movsl
or
mov
mov
xor
gs
scas
adc
call
in
fcmovnu
pop
jmp
fstpl
adc
test
pop
cmp
sbb
jp
sub
gs
push
movsb
cmpl
push
lret
mov
jnp
enter
add
scas
movsl
mov
xor
add
cmpsl
std
stos
inc
mov
mov
dec
mov
subb
add
xlat
jp
dec
cmpsb
jecxz
sub
jp
and
sub
push
inc
scas
dec
adc
in
test
sti
fistpll
stos
andb
pop
rcl
cltd
xchg
loope
clc
mov
loop
xchg
dec
sub
testl
cmp
out
pop
mov
push
push
and
xor
mov
pusha
mov
pop
lods
aam
inc
and
sub
cmp
cmp
imul
xchg
shrl
sahf
push
fldl
xchg
adc
call
jo
fnsave
dec
sbb
test
dec
pop
push
jge
cmp
dec
push
add
stos
xlat
nop
addr16
scas
mov
inc
or
jge
ds
addr16
jp
insl
cmc
and
jnp
popa
outsl
mov
xor
xchg
add
jmp
cmpsl
jge
sbb
sbb
pop
or
popa
add
mov
pop
mov
sub
sbb
mov
jecxz
add
xor
sbb
imul
icebp
and
jae
loope
xor
movsl
push
lods
dec
int3
imul
movsl
dec
add
call
push
fs
insb
loope
rorb
out
repnz
adc
add
pop
add
mov
rcrb
mov
subb
mov
xor
cs
sbb
and
cmp
std
pop
or
out
fstpl
stos
hlt
rcrb
and
push
fs
int
movsl
and
mov
jae
andb
fs
add
adc
dec
int3
popf
stos
cmp
pop
sub
xor
movq
inc
shll
fwait
insl
xchg
aad
and
adc
nop
cld
les
pop
fdivrs
inc
or
mov
es
mov
xor
loopne
lods
and
inc
and
pop
lret
add
xlat
xchg
mov
fs
leave
test
test
mov
je
rorb
addr16
cmp
push
imul
aam
xor
fcoms
loopne
inc
adc
lret
lods
movsb
mov
nop
adc
xor
xor
hlt
push
push
stc
cmc
adc
dec
fstps
mov
inc
cltd
or
sbb
mov
inc
inc
rcll
ljmp
int
lods
inc
es
xchg
push
mov
mov
in
loop
xlat
cli
jmp
pop
movsb
jmp
mov
daa
shll
lds
jp
in
dec
mov
or
jb
mov
pop
inc
cmpsb
fdivl
push
sti
fwait
shl
mov
flds
xchg
jge,pt
push
js
xor
rcr
or
scas
aad
adcb
mov
inc
iret
scas
sbb
iret
icebp
and
movsb
lock
scas
clc
add
test
xchg
aam
movsb
pop
add
je
xlat
or
smsw
xchg
mov
lds
loopne
popf
orl
enter
mov
ljmp
sub
cs
mov
mov
xchg
out
jb
xchg
cmpl
xor
ljmp
jg
fwait
pop
dec
mov
cmpsl
mov
pop
loopne
lahf
push
out
mov
pop
lea
xchg
push
cmpb
jg
pop
jo
std
push
sub
inc
xor
outsl
rcrb
jmp
mov
jns
fildll
xchg
pop
scas
add
sbb
inc
xlat
adc
xor
imul
daa
push
jo
fs
jo
daa
mov
hlt
bound
or
out
loope
aaa
imul
and
mov
dec
aam
inc
cmp
cmc
adc
push
mov
call
mov
dec
loopne
loopne
scas
fs
roll
cmp
jb
jl
inc
mov
mov
dec
lcall
sarb
xor
pop
add
lret
clc
ja
enter
or
cmpsb
arpl
jno
loopne
sub
jg
cmp
inc
push
aad
mov
inc
stos
andl
xchg
pop
iret
shlb
or
cmp
aam
lcall
aaa
test
xorl
jg
loopne
fwait
out
cmp
pop
jae
std
out
pop
insb
out
jne
jl
adc
ret
add
rcll
cmp
mov
shll
add
ss
pop
mov
mov
scas
scas
cmp
ljmp
loop
sub
jmp
xor
xlat
dec
shll
jae
mov
lods
fsubs
jns
push
pop
pushf
outsl
rorl
outsl
mov
push
out
or
inc
adc
mov
ljmp
sbb
out
fs
faddp
cmc
loopne
gs
or
cld
and
hlt
jno
jle
mov
pop
addl
scas
xchg
in
inc
lahf
xor
xchg
lret
xchg
sti
repnz
arpl
ss
fimull
jmp
aad
cmp
or
add
cmp
repnz
data16
lret
pop
scas
push
shrl
testl
or
fldl
push
dec
movsl
mov
scas
push
out
das
xchg
push
push
pop
pop
shrl
mov
cmp
cli
outsl
push
das
xlat
mov
fldl
in
pop
mov
sub
bound
insb
pop
cld
fldl2t
cmp
imul
or
xor
xor
test
mov
ficompl
xlat
rol
jo
out
movsl
lahf
sbb
add
dec
frstor
inc
movsb
pop
add
movsw
mov
cld
mov
inc
clts
lret
mov
dec
scas
adc
or
out
dec
rcrb
mov
and
or
sarl
jg
icebp
xor
in
lret
sbb
in
lods
xchg
xor
gs
pop
jecxz
out
arpl
jo
test
jge
push
xchg
mov
add
and
sub
cmp
scas
jae
std
fmul
xor
icebp
pop
mov
sbb
jp
imul
jae
adc
mov
lahf
add
gs
jb
xor
mov
subl
loop
xor
cltd
or
inc
jmp
pop
cmpl
std
xor
xor
and
out
cwtl
mov
pop
cmp
xor
scas
sub
orb
xchg
mov
lcall
mov
xchg
cmp
sbb
jp
xlat
js
jbe
xlat
les
fucomip
jl
jb
sti
jp
call
decb
xor
sub
movsb
into
sbb
loopne
or
mov
aad
push
jb
cmp
pop
sbb
add
cmc
pop
jp
xchg
lret
data16
xchg
mov
sub
hlt
mov
and
sbb
cmpl
and
jmp
adcl
out
int3
and
lds
je
adc
xor
add
mov
pop
pop
mov
jo
rorl
sub
aad
inc
iret
jae
and
loope
lock
push
xchg
pop
jg
adcl
jnp
dec
or
adc
call
sbb
inc
add
sti
test
lret
mov
pusha
cmpsb
mov
push
mulb
stos
inc
imul
pop
insl
add
incl
lock
jne
std
out
xlat
cmc
repz
imul
sahf
pop
mov
mov
and
outsb
insl
adcl
cltd
adcb
test
jge
push
int
lret
shlb
mov
in
imul
cmp
jg
adc
je
je
mov
xchg
inc
lds
repnz
sub
mov
push
iret
std
mov
xlat
shlb
repz
dec
cmpsb
fildl
sbb
jno
test
adc
aam
sub
fimuls
adc
xorl
sahf
cmp
std
or
add
repz
sub
iret
in
mov
xchg
add
and
sub
and
push
dec
flds
and
pop
lret
lahf
js
lock
mov
mov
pop
or
add
sub
xlat
or
es
and
adc
mov
fmuls
ret
add
sbb
jne
clc
jl
push
ret
ds
sub
pop
xor
mov
sbb
cmp
mov
pop
das
and
cmp
sbb
ret
or
push
mov
shl
rcl
stos
jno
inc
aam
lret
or
stc
adc
mov
and
mov
aam
jns
orl
hlt
repz
xchg
fwait
and
jle
sub
pop
imul
push
mov
pop
lret
nop
ss
je
mov
inc
cmp
into
sbb
jecxz
fildll
ds
cmc
adc
mov
xor
xlat
push
dec
arpl
sbb
andl
imul
add
in
xchg
gs
jl
mov
mov
negb
sub
je
cmp
cmc
xchg
ret
test
scas
and
pop
pop
push
mov
xor
gs
sbb
push
ret
movl
lcall
push
enter
adc
dec
jmp
xchg
outsb
sbb
leave
push
mov
xor
insb
cmp
rcrl
sub
jns
dec
cmp
sbb
sbb
clc
arpl
xor
stc
test
cmpsl
sbb
repz
jmp
fcompl
or
fcom
loopne
inc
inc
adc
mov
mov
jns
lcall
mov
push
stos
jecxz
repnz
ds
ss
and
push
add
mov
loope
idivb
sahf
jb
cmpsl
out
pushf
add
hlt
mov
jmp
lods
int3
adc
ds
stos
mov
xchg
mov
jae
mov
fldt
ds
and
sub
jecxz
mov
subb
lock
pop
xchg
push
sahf
stc
xor
loope
jecxz
inc
push
cs
mov
fs
jo
dec
test
fdiv
icebp
js
mulb
cmc
and
rcll
push
mov
adc
pop
jb
lret
jo
fidivs
iret
dec
ret
push
in
fisttpll
mov
pushl
cmpsb
and
mov
xor
xchg
xchg
sti
xlat
out
cmp
into
push
xor
outsb
xlat
push
add
add
nop
inc
jp
out
pusha
sub
loope
lods
add
mov
fisttpll
dec
lcall
int3
cmp
xchg
mov
loop
call
shll
mov
cmpl
dec
jnp
inc
out
and
popa
mov
mov
dec
jb
xor
jb
pop
ss
stc
xlat
pop
pop
jmp
dec
cwtl
push
lock
je
repnz
fnsave
or
ret
jns
loope
xchg
push
or
sbb
pop
ret
jnp
push
cmp
mul
jbe
and
dec
xchg
mull
out
cs
nop
jnp
pusha
xor
mov
add
pop
addr16
movsb
inc
orb
sub
fsubp
call
push
sbb
insb
and
jne
sub
mov
mov
ja
test
push
xchg
stos
in
push
outsb
mov
insl
xor
pop
std
cmpsb
mov
cmp
mov
xchg
cmc
xchg
and
out
inc
xor
ret
mov
les
lods
cmp
decb
testb
cltd
sub
push
and
pop
ljmp
adc
lods
mov
lea
jo
mov
cmp
cwtl
push
xor
sarb
loop
int
push
scas
movsl
in
imull
loop
addl
or
inc
pop
shll
sbb
jno
bound
jp
fnstsw
loope,pt
loopne
xor
out
aam
into
repz
xor
dec
jbe
push
sbb
aaa
lock
or
loopne
ja
sub
test
jns
pop
bound
add
les
jb
out
lea
jo
mov
xchg
or
gs
mov
sbb
cmp
and
add
ds
mull
jnp
setg
movsl
out
dec
adc
cmpsb
cmpsl
jae
int3
stc
test
ret
pop
cs
sbb
sub
dec
adc
outsl
into
xchg
mov
and
xbegin
dec
int3
mov
ds
push
repnz
sub
mov
cwtl
cmp
cmp
int
into
scas
pop
js
scas
daa
xlat
xlat
out
fisttpl
adc
add
sbb
mov
sbb
ja
add
cs
inc
incb
sub
xchg
xor
pop
ret
cmp
outsb
sarb
cmc
icebp
test
add
mov
stc
mov
sahf
rcr
das
pand
cld
push
in
mov
rorl
out
loopne
loopne
mov
and
or
push
mov
int
dec
sbb
stos
icebp
sbb
popa
mov
test
pop
ja
lods
sub
movsl
fcomps
cmpsb
mov
fs
pop
int3
insb
lods
xchg
inc
cmc
cwtl
lret
daa
imul
frstor
pop
bound
cmp
inc
cmp
movl
xor
push
sub
int
dec
cmp
sbb
or
cltd
scas
inc
in
mov
cmpl
dec
hlt
hlt
mov
mov
mov
fists
aaa
cld
add
scas
sub
mov
lret
inc
ret
sbb
test
icebp
insl
mov
sbb
jmp
xchg
arpl
pop
jo
cmp
vmovq
add
mov
mov
add
addr16
xchg
rcrb
lret
jo
repnz
lret
add
enter
mov
pop
cmp
mov
jmp
mov
dec
cs
inc
add
or
push
cmp
and
xchg
mov
xchg
sbb
lret
sub
sbb
lcall
addl
mov
cmc
popa
pop
adc
mov
or
push
lret
in
test
call
sbb
imul
push
push
add
insb
arpl
pop
add
adc
out
ret
add
mov
jo
lret
xor
push
int3
mov
rcr
sub
pushf
fstl
inc
cltd
dec
jg
and
loopne
push
negb
jns
sub
add
int
je
and
in
test
inc
lcall
mov
jp
sarl
out
xor
sbb
xor
adc
adc
ss
test
loop
fstpl
rolb
je
push
mov
push
add
or
hlt
rcl
jb
std
frstor
test
mov
loopne
pop
loop
adc
mov
jb
data16
aad
daa
mov
sahf
js
rolb
pop
scas
cmc
adcb
iret
mov
iret
es
sarb
arpl
mov
or
loope
mov
add
std
aam
rclb
sarb
out
add
sbb
mov
cld
dec
inc
daa
jnp
sahf
repz
rorb
sahf
mov
shll
fsts
jmp
pop
sub
cwtl
out
mov
sub
adc
loope,pn
jl
xchg
jmp
stos
roll
movsl
popf
mov
rcll
mov
and
mov
mov
fdivs
into
out
cltd
sub
push
dec
inc
pop
scas
nop
dec
gs
lcall
inc
call
test
aas
xchg
sub
pop
cmp
push
sahf
idivb
sub
cwtl
imul
add
inc
lcall
xchg
dec
fstpl
cli
popf
jge
or
sbb
aaa
jl
jge
and
jns
jnp
nop
roll
sti
xchg
or
mov
popf
fst
inc
ja
loop
mov
cmp
jecxz
xchg
xchg
add
gs
int
inc
add
jge
test
in
adc
repz
imul
add
sahf
sbb
andb
dec
stos
mov
mov
push
cli
mov
movsb
sbb
sbb
add
nop
nop
aad
add
mov
jle
pop
add
into
cld
push
add
xchg
clc
ja
jg
pusha
adc
rorb
mov
loop
or
cli
cmpsb
pop
xchg
jle
mov
fistps
lods
xchg
inc
jmp
ficompl
clc
stos
mov
and
outsl
out
mov
mov
mov
mov
mov
inc
scas
xchg
inc
adc
test
scas
xchg
dec
fwait
rcll
xchg
pop
mov
lds
fimull
jge
or
and
imull
aam
cli
mov
repz
mov
stos
push
jae
or
inc
scas
jnp
mov
push
sub
xchg
adc
add
push
jb
xchg
ss
std
mov
mov
fsubrp
adc
xchg
jnp
mov
cli
in
mov
and
push
iret
cli
lret
jp
ds
fnstcw
xchg
out
into
sti
mov
jb
pop
cmp
push
flds
les
leave
aaa
jle
dec
mov
popf
sub
out
lds
enter
dec
cs
push
mov
fidivl
mov
xchg
push
inc
mov
stos
in
inc
add
mov
cmp
pop
sbb
jno
aaa
fld1
cmp
jno
popl
sbb
and
mov
xor
pop
push
sub
push
fdivs
lret
pusha
mov
in
push
ja
xchg
xor
cld
lret
test
jne
mov
out
xchg
jb
mov
sub
pushf
insb
fs
daa
jo
mov
andb
icebp
cltd
adc
push
cltd
cmc
xor
out
mov
in
add
fs
sahf
divl
jo
mov
cld
fistpll
sub
popa
jae
xor
imull
fsts
cmp
in
add
sbb
mov
add
data16
test
mov
scas
pop
popf
lcall
jmp
sti
popf
inc
int3
fwait
test
test
sbb
mov
add
mov
js
inc
aaa
out
xchg
or
ljmp
inc
jns
jp
pop
xor
into
cwtl
movsl
push
inc
adc
lret
xlat
cs
fcmove
clc
xchg
ds
es
cmpsb
repz
arpl
icebp
test
gs
pushf
test
out
jl
mov
fmuls
lea
mov
cs
mov
xor
addb
imul
mov
xchg
clc
cmp
mov
push
mov
bound
mov
out
fiaddl
xchg
movsb
sti
inc
xchg
pop
fcompl
inc
aas
push
dec
out
stos
sbb
inc
mov
xchg
nop
inc
fs
test
sbb
pop
mov
lcall
or
adc
fsubrs
sub
jne
or
sub
jnp
xchg
das
adc
in
fwait
cmc
mov
dec
popa
dec
sub
jp
jmp
add
sbb
push
decl
add
add
xchg
aam
and
popl
and
push
lods
xchg
fsub
add
sbb
pop
dec
jne
aad
jno
cmp
sbb
lret
xor
mov
stos
mov
pop
xor
fdivl
or
scas
push
push
mov
inc
or
xor
outsl
popa
ja
cmp
xor
test
out
sbb
movsb
push
sbb
jnp
inc
dec
pop
pop
je,pt
adc
mov
gs
cmp
in
shrb
and
push
sub
pop
add
mov
imul
ret
fadd
mov
into
adc
mov
inc
mov
shll
push
adc
mov
hlt
jo
push
cmp
dec
repnz
or
aas
and
shl
hlt
int3
mov
mull
mov
and
scas
mov
fs
inc
push
loop
push
sarb
sub
sbb
lods
push
ret
cltd
test
sbb
push
dec
popl
lock
and
xor
and
xor
stos
sahf
or
bnd
or
outsb
dec
adc
add
stc
adc
fsubr
jmp
stc
imul
icebp
dec
xor
ss
cmp
out
jb
jl
std
iret
or
insb
inc
mov
add
push
add
arpl
aam
pop
sub
imul
pop
and
push
cmp
scas
in
call
xchg
adc
aad
inc
loopne
xor
xchg
xor
mov
adc
sbb
cmp
sub
push
mov
dec
cmp
loope
pop
repz
mov
sub
bound
jbe
subb
xchg
xor
clc
cld
mov
clc
aas
and
adc
pop
out
call
shrb
add
rorl
mov
and
jb,pt
test
ljmp
push
push
ds
clc
dec
pop
cli
xor
sub
pushf
repz
and
fs
lcallw
sbb
lock
sti
mov
pop
pusha
jne
frstor
scas
cmpl
mov
mov
stc
or
adc
mov
inc
jge
cli
pop
and
jno
mov
fdivr
xor
or
js
in
xchg
das
hlt
out
js
mov
mov
es
xchg
out
xchg
cmc
les
bound
nop
loopne
addr16
in
scas
xchg
or
dec
xor
sti
push
or
or
sub
rcrb
cmp
out
and
call
mov
sbb
ljmp
sub
aaa
mov
mov
into
fsubr
lods
mov
or
cs
mov
sbb
dec
or
adc
shll
xlat
jnp
pop
xchg
cmp
fisubs
fcmovnu
cmpsl
mov
xchg
mov
pusha
mov
push
fnstenv
adc
iret
rcll
sbb
imull
xchg
pop
mov
enter
cmp
clc
sbb
dec
lock
xor
mov
stc
push
das
ds
sub
fdivrl
out
ja
sbb
inc
test
or
cmpsl
push
inc
mov
lea
mov
mov
push
or
inc
cmp
fnstcw
les
xor
ljmp
mov
mov
mov
les
cmp
push
cmpsl
xchg
shlb
aam
mov
cmpsb
lock
push
int3
adc
dec
insl
inc
ficompl
dec
mov
out
xor
cmp
push
sbb
cli
dec
nop
pop
mov
jl
inc
mov
push
or
inc
ljmp
addr16
lret
fistps
push
outsl
push
outsl
jno
bound
aam
mov
add
bound
jecxz
and
ror
mov
lods
mov
aas
inc
int
dec
and
int
sub
gs
arpl
xchg
jle
gs
push
or
fidivrs
add
daa
outsb
push
cli
call
mov
icebp
ficompl
fbstp
in
xlat
adc
fimull
mov
or
cli
push
iret
ror
lods
add
bound
fstl
mov
into
outsl
out
loop
jl
mov
lret
xor
sbb
aad
aad
mov
jo
mov
mov
jns
push
dec
pop
dec
mov
cmpb
xchg
rorb
ret
xor
scas
and
shrb
sarl
fwait
mull
push
or
call
mov
adc
sbb
pop
pop
dec
fcompl
stc
cmp
fisubl
mov
lds
sti
mov
jg
mov
ret
push
aad
mov
jno
mov
mov
mov
add
sbb
mov
rcr
dec
movsl
in
push
push
lret
push
and
mov
je
dec
fstpt
jmp
jg
push
xchg
push
inc
xchg
stos
clc
out
out
jge
sbb
sti
pop
arpl
aad
sbb
fisubrs
push
xor
ret
cli
jb
lahf
mov
cmp
mov
pop
and
push
sub
stos
out
or
lahf
popa
pushf
mov
cld
scas
xchg
fsubrs
jp
frstor
push
insb
xchg
imul
adc
sub
ljmp
aaa
sbb
shlb
aad
xchg
ficoml
sbb
fcompl
rolb
or
cli
jbe
push
aas
mov
ss
addb
or
and
add
add
xchg
or
repz
leave
ret
nop
lods
in
mov
rclb
ss
into
or
jae
arpl
pop
call
mov
dec
xor
ret
sti
cmp
mov
mov
leave
xchg
lret
fisubrl
add
cli
ret
jge
mov
stos
ljmp
adc
in
ss
cmp
xchg
cmc
mov
xchg
dec
xlat
test
ret
lcall
adcl
sub
sub
sub
jns
cltd
xor
mov
cmp
cmp
pusha
pop
inc
mov
je
in
out
mov
repz
push
pop
adc
std
insl
test
aam
ds
mov
iret
rclb
and
cmc
xchg
mov
cmp
and
cmp
jp
ja
dec
fs
adc
sbb
ror
and
mov
leave
aam
in
xor
mov
xor
js
jns
mov
xchg
fwait
inc
push
jae
in
repnz
or
or
shlb
mov
sub
shrb
xor
ljmp
lock
cmc
xchg
fcmovb
mov
mov
in
cmpsb
nop
xor
jne
lods
fcmovb
test
repnz
cmp
stc
inc
mov
aam
xlat
mov
pop
pusha
push
je
jp
jl
ss
xchg
cmp
mov
push
xchg
inc
dec
enter
test
outsb
dec
xlat
xchg
lret
xchg
jmp
inc
pop
xor
scas
mov
mov
enter
xchg
les
pop
inc
push
jl
loopne
addb
sbb
lods
cltd
gs
call
leave
xchg
sub
inc
aad
xor
imul
push
aam
sub
cmp
lgs
scas
mov
mov
test
xor
mov
dec
unpcklps
inc
cmp
push
mov
push
leave
ss
out
bswap
inc
push
das
pop
inc
inc
pmaxsw
cmp
out
movsb
nop
imul
insl
mov
sarl
dec
pushf
adc
xor
mov
fcmovu
rorb
out
sub
xchg
push
mov
inc
das
sub
jp
shrb
jp
cmc
lock
loop
movsl
sti
test
pop
fistpl
xchg
ds
push
loope
stos
ja
pusha
adc
scas
stos
mov
inc
push
mov
lock
push
cmc
lahf
popa
mov
cmp
push
rclb
in
hlt
sbb
stos
fldcw
lds
sub
rclb
lods
jl
mov
inc
movsb
punpckhbw
mov
adcl
shlb
cmp
imul
push
ds
mov
pop
cmp
popf
popf
clc
add
sbb
xchg
adc
jp
enter
int3
aaa
jae
xor
sbb
lret
cs
icebp
in
int
mov
scas
cmp
lea
aaa
mov
jmp
mov
sti
das
xor
lret
mov
push
jge
adc
mov
lea
jnp
ds
in
xor
push
xor
pop
int
jmp
adc
add
mov
sbb
ret
sub
ja
lcall
lret
xlat
xchg
test
int3
js
pop
lods
sahf
or
dec
je
ss
cwtl
lea
mov
lcall
ss
sub
inc
mov
test
push
inc
stc
out
flds
stc
lea
imulb
arpl
lods
scas
mov
lock
fnstsw
pop
cltd
xchg
stos
sbb
add
jecxz
pop
fnsave
test
or
lahf
or
imulb
int3
lcall
sahf
or
lock
sub
repz
inc
fwait
mov
sub
sub
andl
sub
lods
data16
xor
and
xor
sti
xlat
js
adc
xchg
sbb
fnsave
mov
xorl
adcl
add
sbb
cmpsb
aaa
scas
mov
xchg
lret
rorl
inc
xor
cltd
mov
xchg
mov
add
aas
popw
push
mov
pop
adc
mov
jno
dec
sbb
arpl
ja
pop
pop
mov
sub
call
or
xchg
mov
pop
mov
ret
add
xchg
or
je
loopne
and
cmpsl
jg
mov
movsl
stc
ja
lock
mov
into
int3
xchg
addr16
mov
in
vmulpd
push
mov
dec
test
idivb
push
test
scas
stc
insl
movsl
lahf
ljmp
addl
add
lds
insb
mov
xor
popf
lods
mov
jns
jo
out
andl
xor
xchg
mov
aas
ret
shrl
jp
jb
stc
mov
imul
jns
and
jo
pop
fstpt
mov
int3
jbe
orb
lret
stos
adc
add
stc
xor
test
fsts
or
pop
nop
sbb
push
lods
jo
or
int3
hlt
sub
jb
mov
das
push
add
pop
pop
push
cmp
lock
dec
jecxz,pn
clc
fs
xlat
xchg
jg
push
mov
in
fimull
fildll
lret
cmp
nop
jl
stc
loopne
sarl
ret
imull
test
inc
ret
push
pop
ds
inc
add
loopne
mov
ss
xor
stos
dec
dec
lods
pop
leave
mov
dec
adc
call
add
xchg
repz
mov
mov
xchg
inc
inc
xchg
hlt
mov
sub
mov
shlb
xorl
lock
js
mov
inc
sti
icebp
and
or
push
mov
xchg
mov
mov
xor
test
mov
arpl
sbb
mov
fidivrl
mov
ljmp
pop
aad
outsb
bound
or
or
xchg
dec
push
xor
inc
pop
xchg
jb
mov
insb
hlt
lahf
mov
test
icebp
jne
aam
push
cli
adc
out
pop
imul
stos
xor
xor
dec
mov
imul
xor
inc
jo
aas
mov
in
jnp
mov
rol
pop
outsl
stos
jne
cmp
push
adc
cli
xchg
inc
push
aad
lds
add
pop
jle
mov
or
fsubr
popf
jb
inc
rclb
cmp
or
decb
pop
inc
das
mov
icebp
outsb
arpl
cmovg
push
or
add
push
jg
mov
mov
fbld
sbb
push
js
dec
clc
sbb
and
shrl
jae
psrld
in
adc
jmp
xchg
mov
cmpsl
ret
or
int3
pop
lock
scas
roll
jnp
pop
mov
xlat
inc
std
pop
mov
cmp
addl
jp
out
cwtl
cmp
adc
lods
or
leave
mov
addr16
rclb
inc
lret
pop
inc
shrb
sbb
ret
mov
lret
mov
cmp
aad
mov
mov
pop
push
test
adc
rcr
adc
cli
pop
and
ret
jne
test
cld
mov
faddl
ss
adc
sub
loop
adc
nop
cmp
inc
cmp
iret
in
pop
inc
js
inc
out
adcb
dec
adc
mov
daa
cli
subl
nop
push
rclb
mov
jp
cmp
mov
push
jecxz
mov
xor
shll
push
fimuls
pop
psubd
std
popf
rorb
sbb
mov
push
adc
xchg
cmp
push
xchg
add
pop
sbb
jle
test
mov
cmpsl
repnz
enter
imul
sub
sub
outsb
in
jge
sarb
adc
fstl
cmp
sbb
scas
mov
xchg
minps
xor
pop
adc
push
aaa
nop
pusha
in
mov
jnp
adc
or
jl
arpl
stos
mov
ss
rorb
out
insl
andl
xchg
pop
or
xchg
push
mov
xor
and
pop
pop
xchg
imul
aam
fwait
mov
or
sub
push
ret
mov
lret
pop
lea
pop
inc
shll
add
jl
jmp
ret
pop
into
mov
lahf
inc
andl
sti
jp
dec
xchg
dec
iret
lock
ja
ja
movsb
xchg
inc
movsl
stos
mov
scas
inc
inc
push
test
shrl
dec
iret
xor
leave
xchg
test
fwait
mov
dec
jno
cs
aad
mov
shrl
xchg
mov
pusha
mov
or
test
jle
add
inc
aad
cmpsl
adc
push
xchg
aas
loopne
or
pop
lods
jmp
sti
xchg
movsb
lret
mov
sub
add
es
fwait
movsl
arpl
fiaddl
dec
stc
rcrb
push
push
fdiv
repnz
mov
sbb
cltd
lods
js
out
sub
jb
int3
insl
jle
xchg
pop
mov
adc
subl
inc
dec
fcoml
or
out
rcrb
mov
push
fcompl
or
pop
push
push
mov
call
sub
nop
ja
imul
push
mov
lret
dec
sti
adc
orl
call
add
ds
out
int3
mov
adc
or
jg
or
fistpll
mov
inc
xor
cltd
repnz
xchg
rcr
fwait
jb
jge
add
cli
push
xchg
bound
popl
ret
cmp
jl
scas
push
out
dec
jle
xorl
jnp
andb
xchg
jb
cmpsl
push
sbb
lret
insl
lret
hlt
inc
push
enter
lock
add
pop
dec
ljmp
dec
xor
shlb
push
les
mov
push
push
icebp
mov
ljmp
inc
scas
ja
mov
nop
xchg
sbb
jp
rol
mov
call
add
bound
adc
sub
push
adc
xchg
aam
lcall
push
jge
lods
test
mov
iret
dec
cltd
inc
inc
cs
gs
stos
das
mov
loop
cli
xor
adc
sti
xor
xorl
in
pop
imul
call
lret
jle
mov
addr16
test
jne
ja
inc
loopne
mov
das
jae
dec
icebp
xchg
or
jmp
hlt
fldt
xor
clc
jge
xor
add
pop
aas
or
mov
movsb
mov
pop
add
inc
add
add
dec
mov
call
sbb
testl
shlb
cmp
repz
lcall
dec
sub
notl
jge
jge
xor
movsb
addr16
loop
mov
sub
cld
aas
loop
loope
popa
test
enter
scas
outsb
add
fdivp
jp
loop
fisubrs
pop
jb
stc
das
addr16
int3
adc
sbb
out
lods
jp
cltd
popf
jmp
pop
in
mov
aad
and
push
adc
pop
xor
arpl
push
jno
ljmp
adc
push
mov
inc
xchg
sub
jp
xlat
pop
pop
insl
scas
mov
mov
test
pop
and
loope
jecxz
test
or
or
dec
inc
xchg
mov
fucomp
pusha
jns
push
and
adc
inc
jp
mov
rcl
es
shrb
mov
pusha
mov
pop
pop
mov
mov
push
aad
test
sbb
adc
cmp
popf
lock
sub
jae
enter
int3
scas
xchg
test
jge
jg
inc
out
mov
inc
cmp
cltd
pop
lahf
outsb
imul
mov
sbb
add
dec
fsubl
test
sahf
or
jecxz
mov
jae
pop
int3
cmpsb
mov
push
cmp
test
adc
jle
jl
push
xchg
xchg
jg
cmpsl
mov
or
dec
das
pop
dec
push
cmpsl
xchg
xor
arpl
adc
fisubs
test
sbb
sbb
jo
push
test
mov
and
js
inc
gs
stc
sub
sbb
push
mov
mov
or
fimull
adc
sbbb
add
vmovsd
push
and
test
push
aaa
aas
inc
and
mov
xchg
int3
mov
push
mov
outsb
jp
clc
mov
adc
adc
mov
lcall
sbb
xor
scas
pop
in
outsl
mov
dec
push
loope
and
cwtl
dec
xchg
cmpsl
cmp
push
out
inc
ret
out
das
fs
xchg
cli
repnz
pop
ud0
fadd
fs
cld
out
fistpl
enter
nop
xchg
cmp
in
clc
xchg
faddl
mov
mov
ret
push
xor
loopne
ret
jle
jnp
inc
xchg
push
in
adcl
xchg
lret
dec
aaa
jne
mov
and
mov
inc
mov
mov
sbb
ds
out
dec
dec
hlt
fcoms
rcrb
fs
fcmovbe
clc
into
jnp
lret
push
inc
mov
mov
repnz
lds
imul
push
cmp
sbb
inc
push
imul
push
jle
cs
dec
jecxz
mov
fs
loopne
adc
push
insl
scas
xor
add
movsb
test
mov
mov
jne
add
mov
add
test
push
stos
or
lock
dec
sbbl
xchg
sahf
cs
or
jne
xchg
insl
mov
xchg
pop
cmc
imul
outsb
jb
in
inc
and
loopne
mov
js
pop
bound
sub
daa
mov
sub
jecxz
mov
xchg
insb
test
in
out
mov
mov
addr16
inc
inc
cwtl
sub
adc
mov
jl
imul
pop
and
and
nop
iret
push
mov
popf
jns
add
mov
das
push
lcall
push
add
sub
mov
scas
test
sahf
xchg
fistps
and
iret
aas
cmc
sbb
mov
loop
jbe
add
outsl
mov
outsl
jg
mov
mov
lret
filds
cs
xchg
and
iret
mov
xchg
repz
adc
adcl
cmpsb
outsl
jge
clc
imul
xchg
cmpsl
test
repnz
shrb
mov
pop
sti
pop
add
mov
cmp
lret
and
and
lcall
imul
jns
sbb
fmul
jmp
xchg
ret
pop
inc
aam
nop
out
push
aam
insb
cmp
add
aaa
fstps
data16
lods
sbb
cmp
es
jae
mov
push
inc
loopne
inc
or
iret
jo
jns
add
xchg
add
xlat
cmc
adc
xchg
jbe
lcall
sub
fsub
stos
fwait
test
xchg
int
pop
jmp
mov
test
jae
shll
jne
loope
lret
lret
add
rcl
jle
stos
or
lcall
sbbl
adc
mov
push
pop
push
enter
and
shlb
mov
out
ret
and
fld
sub
loope
cmpl
push
lea
aam
xchg
in
pop
aas
arpl
ret
in
cmpsb
sti
jae
out
les
ds
repnz
loop
call
push
cmc
cmovle
cmp
jns
in
sbb
les
scas
pop
xchg
fwait
mov
outsb
imul
lea
das
push
adc
pusha
mov
mov
hlt
inc
push
cmp
int3
daa
rolb
movsb
cmp
sub
aam
inc
mov
aad
dec
adcb
movsl
test
imul
push
dec
push
xor
cmp
push
cmp
enter
sub
jne
sahf
mov
cmpb
fdivr
dec
sti
pop
ds
addr16
xchg
movsl
pop
repnz
and
cmp
ljmp
rcl
mov
outsl
mov
sub
lods
cwtl
xchg
mov
mov
mov
ljmp
mov
popa
mov
cmp
mov
movsl
sub
mov
loope
inc
mov
scas
or
and
dec
into
inc
shlb
dec
or
push
jg
test
and
jp
xchg
jns
pop
xchg
jg,pn
outsb
aam
paddq
dec
mov
jle
sbb
mov
pop
sti
add
test
ljmp
out
xlat
shl
mov
mov
xor
and
pop
sbb
bound
add
inc
addb
jae
repnz
mov
jno
ljmp
aad
rcrb
rorb
xor
movnti
mov
lods
or
mov
pop
test
fdivr
fisubs
cmpsb
jo
and
pop
fimull
cli
mov
jl
cs
mov
or
outsb
daa
mov
cmpsl
xchg
loopne
rcrb
inc
push
nop
add
xor
adc
out
aam
mov
mov
push
stc
ret
into
ret
ljmp
stos
dec
push
pop
es
mov
fmul
mov
div
inc
add
icebp
jns
inc
outsl
cmp
push
and
jl
dec
add
call
mov
inc
mov
sbb
jle
dec
jns
divl
dec
cmp
insl
test
movsb
arpl
addr16
pop
cmp
push
dec
iret
int3
cmp
fstps
mov
and
inc
pop
filds
addl
icebp
xchg
pop
or
cmp
loop
jp
or
mov
cmc
ljmp
add
popf
add
inc
or
ljmp
cmp
je
fwait
mov
enter
xchg
mov
dec
xor
xchg
dec
in
mov
mov
outsl
push
push
xor
add
or
add
push
scas
dec
xor
out
lret
push
ljmp
xchg
jnp
xor
xchg
les
pop
insl
insl
sub
mov
mov
inc
xor
mov
xchg
add
das
jmp
pop
mov
push
jmp
xchg
aad
dec
adc
jns
mov
xlat
imul
inc
rcr
adc
loop
rorb
pusha
cwtl
dec
adc
dec
sub
jecxz
xchg
add
cwtl
xchg
loop
movsl
and
dec
xor
inc
ret
jecxz
ja
mov
jbe
mov
xchg
xchg
mov
xchg
shlb
lcall
xchg
ljmp
outsl
or
mov
adc
mov
push
xor
scas
mov
pop
popa
dec
cld
pushf
bndldx
jp
leave
add
pop
js
ds
repnz
and
cltd
ja
dec
inc
cmp
fwait
push
ret
lock
mov
push
mov
mov
lods
adc
lock
jae
dec
sbb
dec
ja
mov
mov
mov
and
lcall
jnp
loopne
cs
in
pushf
inc
stos
lea
push
out
and
inc
jp
xor
inc
int
xchg
icebp
or
leave
aas
and
inc
hlt
daa
push
mov
inc
out
sub
push
dec
insl
or
into
icebp
cld
imul
mov
cltd
xorb
cltd
jnp
xchg
shlb
mov
xchg
sbb
cmp
mov
and
jno
mov
fdivrs
jbe
inc
mov
fdivrp
leave
pop
sub
cltd
insl
in
out
rclb
shl
aam
enter
jge
mov
xor
sarl
pop
or
insl
xor
jns
popf
inc
sbb
cld
addb
rolb
cmpsb
jnp
mov
stc
push
adc
adc
mov
jg
dec
aas
xor
into
mov
jge
mov
cltd
adc
cmp
xor
push
mov
iret
orl
loope
cli
sbb
push
sbb
daa
repz
shl
ret
lods
imul
dec
sbb
popa
dec
add
jns
xorl
fs
fmuls
loopne
sub
rclb
repz
adc
push
lock
mov
cwtl
pop
add
clc
sub
xchg
movsl
xchg
or
aad
jnp
ret
mov
inc
ret
push
inc
xchg
imul
xor
adc
sbb
cwtl
arpl
dec
test
or
fmul
stc
outsb
add
xchg
out
dec
sahf
sub
sub
xor
push
mov
cmp
jp
and
inc
or
ret
cmpsb
stc
pop
jge
sbb
cmpsl
cmpsl
aas
pop
inc
mov
pop
push
mov
xchg
adc
and
hlt
sub
pop
fs
pop
inc
mov
jbe
pop
mov
sub
pop
dec
cmp
add
cmp
icebp
stc
loope
repnz
jo
dec
xchg
test
mov
mov
push
insb
sbb
jle
loope
rorb
lea
or
and
sub
dec
andb
fistps
loop
in
or
call
test
cmp
mov
jbe
dec
sbb
xchg
xchg
in
mov
addb
push
in
leave
dec
int
sbb
nop
mov
mov
gs
jns,pt
fwait
adc
fdivrl
or
jne
dec
rolb
jg
xlat
insb
and
push
cld
fdiv
jmp
adc
cmpsl
cmp
popf
loope
fadds
jp
inc
mov
fsts
xchg
fyl2xp1
mov
xchg
inc
fdivrp
nop
mov
je
inc
push
mov
dec
xchg
dec
jns
sahf
rorl
ficoml
pop
test
xor
push
cmp
lock
adcl
push
jae
jmp
roll
shl
or
testl
sub
addr16
sub
add
fs
dec
push
dec
in
fnstsw
jg
loopne
jle
scas
push
dec
clc
enter
sbb
jl
sbb
cli
jo
jne
ds
dec
push
pusha
jb
or
pop
sbb
stos
cmp
cmp
test
jbe
in
push
xchg
jae
push
lds
jge
outsb
add
sub
icebp
xchg
sbb
adc
cld
mov
jl
fwait
inc
arpl
inc
out
fldl
mov
and
ror
divb
ljmp
pop
pusha
loope
cs
inc
dec
ficoml
sub
aas
aas
lods
mov
js
fucomp
mov
int3
ljmp
pop
xchg
pop
lcall
aaa
mov
sub
push
xor
mov
mov
repz
mov
out
sysret
adc
pop
out
push
in
test
loope
push
push
pusha
cs
xor
ret
cmp
mov
les
lock
jbe
pop
add
pop
adc
fxtract
int3
push
xorb
ret
pop
add
popa
pop
fisttpll
mov
mov
mov
les
adc
fidivrs
jb
in
dec
mov
cmp
xchg
fld
loop
hlt
stos
or
or
xor
iret
shll
mov
fcoms
mov
test
imul
push
add
xchg
pop
scas
mov
push
mov
jg
mov
inc
int
push
int
nop
xchg
hlt
inc
mov
test
xor
inc
repnz
cmpsl
popf
mov
cld
insb
push
lcall
inc
mov
mov
pop
imul
cs
sbb
mov
mov
sub
adc
sti
or
fucompp
ljmp
arpl
lds
dec
nop
fbstp
ja
and
push
push
xlat
call
icebp
call
sbb
push
leave
adc
add
int3
ret
xchg
cmp
pop
inc
cmp
fbstp
shl
outsl
mov
pop
test
add
stos
imul
stos
subb
loopne
outsl
icebp
add
inc
inc
mov
inc
lods
add
mov
pop
mov
test
pushl
icebp
pop
cmpl
adc
sub
add
sarb
pop
data16
or
jno
add
xchg
mov
ja
sbb
mov
cmpsl
xchg
lea
bnd
mov
call
xor
outsb
dec
xchg
xchg
scas
inc
xor
push
adcb
and
hlt
outsb
das
jle
jmp
rcll
cmpsb
aad
shrb
cltd
lods
js
loopne
push
test
test
jg
mov
adc
or
shl
data16
filds
pusha
push
sbb
xchg
push
jno
xchg
push
fiadds
cltd
jge
adc
push
mov
loop
fdivrl
mov
neg
pop
mov
push
and
dec
fimull
jbe
adc
ja
dec
sub
mov
sub
testb
jno
dec
adc
fidivrl
jae
adc
jmp
or
rorl
mov
lods
sbb
mov
icebp
jmp
in
in
mov
add
sub
and
cmp
std
popf
mov
mov
jmp
lods
data16
dec
pop
lea
inc
fwait
jmp
push
push
jb
jge
cmp
jp
lds
cmp
or
in
mov
xchg
mov
mov
xlat
cmp
sbb
dec
and
popa
and
fs
rcll
ror
inc
lret
stos
fs
in
cmp
jp
shrl
fucomi
arpl
jnp
cmp
jns
lods
call
mov
mov
jnp
outsb
mov
int3
scas
lds
jns
sub
xor
mov
jnp
pop
and
cltd
inc
loop
aaa
sbb
add
push
sbb
insb
jo
cs
orb
cmp
cli
loope
ds
lds
add
jno
pop
sbb
enter
and
mov
cmp
in
xchg
jbe
adc
xor
sbb
rorl
inc
enter
out
sbb
fwait
inc
mov
gs
jge
jg
inc
out
jecxz
mov
call
mov
popf
mov
pop
jb
adc
out
bound
mov
pop
xchg
or
icebp
das
or
pop
data16
jno
loop
jle
mov
cmp
inc
dec
mov
add
adc
dec
add
cltd
lds
test
jmp
ret
mov
rcl
fidivl
int
xchg
and
push
test
cmpb
les
xchg
insb
stos
test
sbb
das
cmc
xchg
mov
cmpsl
xchg
mov
add
inc
and
push
std
test
sbb
data16
sarl
fwait
adc
and
jg
adc
inc
xor
mov
sbbb
out
jae
add
lret
inc
adc
ror
es
std
jl
lcall
or
outsl
mov
push
push
imul
ss
sbb
sbb
ja
mov
mov
add
cmp
mov
hlt
dec
addr16
push
push
and
sbb
ljmp
push
or
stos
and
jb
repnz
imul
pusha
jae
jp
jmp
in
dec
xor
in
pop
mov
dec
testb
ret
ret
adc
xor
add
movsl
sti
cmpsb
and
mov
popf
scas
sub
aad
sub
jg
bnd
push
sbb
lods
inc
pop
aam
stc
push
bound
mov
sar
repz
push
fiadds
or
in
jbe
xlat
mov
in
int
jbe
in
idivl
pop
inc
fucomip
pop
adc
in
repz
pop
jecxz
pop
pop
adc
outsb
jne
sbb
push
in
mov
add
lods
scas
stos
ja
push
mov
lock
hlt
mov
push
fidivs
outsl
inc
inc
pop
cld
scas
cmpsb
int
lods
cmp
push
mov
testb
push
sti
call
sbb
pusha
mov
xor
icebp
xchg
orl
dec
push
mov
cmpsl
xor
xchg
sbb
jecxz
imul
stc
mov
loope
mov
js
or
cmp
or
dec
xchg
mov
cs
pop
lahf
and
mov
fsubs
shlb
cwtl
inc
in
push
fs
mov
stc
pop
orl
cmc
in
and
addl
cli
dec
popa
std
jge
pop
jle
pop
daa
dec
adc
push
xchg
pop
jae
xchg
mov
movsl
xchg
sbb
jl
test
std
scas
leave
xchg
je
gs
push
push
xchg
jge
push
cld
scas
inc
cmp
subl
and
inc
mov
pusha
fwait
mov
lods
mov
mov
xchg
jmp
cld
dec
and
xor
dec
pop
or
lods
jo
sub
das
lods
aam
and
jns
fistps
enter
mov
sti
movsl
mov
pop
inc
ret
test
pushf
daa
jp
insb
cwtl
lahf
rorl
mov
mov
xor
add
test
dec
rol
dec
orl
add
enter
pop
ds
fnsave
nop
int3
out
in
js
scas
fsubrl
ljmp
fsubs
out
stc
outsb
shrl
decl
xchg
jmp
or
mov
adc
out
shll
lds
mov
mov
testl
push
mov
sbb
es
dec
repz
or
addr16
out
test
pusha
or
lock
xchg
push
pop
jb
popf
mov
dec
stos
test
loope
xor
adcb
add
xchg
leave
cmc
mov
jle
cmp
ret
or
push
cmc
xchg
loope
mov
stos
fiaddl
mov
je
sbb
dec
xor
fildll
adc
ljmp
andl
iret
cmpsb
scas
iret
sub
sbb
sub
cmp
push
mov
add
jmp
inc
push
ret
es
mov
sahf
lods
daa
sbb
loop
or
add
and
scas
addr16
mov
sub
mov
scas
mov
mov
xchg
int
push
cld
mov
xor
push
mov
or
xlat
sbb
cs
fs
xchg
cmc
xorb
dec
bound
xchg
mov
clc
mov
pop
mov
pop
jns
dec
add
nop
popa
outsl
fs
cltd
fs
sbb
mov
add
rcrl
push
pop
repnz
cmp
pusha
movsl
int3
scas
add
add
fdivrp
fldt
push
add
leave
add
adc
jb
std
fwait
daa
mov
pop
push
enter
jge
mov
add
js
test
in
lods
sbb
xor
push
pop
sub
and
mov
leave
rcrb
inc
cmpsb
fwait
pusha
push
mov
inc
sub
dec
dec
cmp
repz
fisttpl
cltd
std
jp
sub
and
mov
aas
adc
mov
push
fmuls
jb
data16
mov
cmp
inc
add
cmpsl
xor
adc
stos
mov
mov
jmp
stos
aaa
dec
cmc
cmp
mov
shlb
pop
in
inc
ds
aaa
lcall
outsl
pop
fadd
int3
or
test
xchg
loope
jmp
into
shrb
xlat
bound
and
js
int3
xor
sbb
push
ret
dec
gs
out
fnstcw
ficoml
add
pusha
mov
lret
jae
pop
pop
aam
jb
sbb
xor
mov
pop
adc
aam
jb
xor
outsl
sbb
dec
lods
push
cmpb
inc
cmp
mov
movsl
pop
inc
pusha
rorb
mov
push
mov
mov
jae
add
enter
xor
xchg
mov
enter
les
jg
in
mov
test
add
inc
jmp
mov
ret
test
call
sbbb
mov
into
dec
xlat
das
xchg
inc
or
dec
sbb
enter
pop
dec
lods
popf
aad
lahf
clc
adc
outsl
fisubl
leave
sahf
test
cltd
xchg
cmpl
cltd
or
inc
mov
adc
ds
jb,pn
lock
adc
jle
lret
mov
pop
inc
cli
jbe
cmp
pop
js
and
jmp
repz
dec
gs
push
in
lds
or
ficoms
pop
dec
jecxz
fs
ror
mov
es
les
movsl
jbe
fmull
fwait
push
lock
xor
shr
ret
mov
adc
mov
mov
jae
test
push
xchg
lahf
xor
push
pop
lret
into
cwtl
lahf
and
test
pop
xor
clc
mov
or
jnp
xor
lahf
in
addr16
or
and
pop
aam
loopne
sbbl
pop
nop
out
fadds
inc
ljmp
sub
mov
nop
jne
jle
lret
jge
jmp
sub
push
fwait
mov
lock
popf
gs
test
ds
adc
adc
cli
shufps
inc
xlat
fsubrs
xor
rcr
fsts
sub
push
outsl
lods
add
xchg
ror
dec
or
std
out
insl
mov
inc
inc
les
jl
enter
adc
sub
out
pop
jl
int
sub
sub
mov
or
test
cmp
pop
mov
push
jo
push
mov
adc
mov
imul
cmpsl
lds
add
sti
frstor
adc
sub
or
int3
popf
xor
ret
rclb
xchg
and
test
add
dec
ss
cltd
icebp
das
mov
aas
cli
lods
mov
fidivl
pop
lock
mov
lcall
fdivrl
insl
mov
das
or
mov
shll
loop
adc
jae
sbb
jg
mov
enter
adc
ljmp
jmp
jg
and
lea
test
or
dec
pop
inc
sub
cmpsb
sub
push
push
out
sbb
or
adcl
jo
xor
ljmp
into
sbb
cwtl
test
outsl
jmp
outsl
push
sbb
int3
sbb
scas
xchg
xor
dec
pop
je
adc
shrl
push
mov
mov
sbb
lret
jg
mov
cmp
repnz
aad
sahf
mov
xchg
cmp
cmp
cmp
shrd
lahf
pop
mov
inc
push
icebp
out
dec
outsl
loope
push
outsb
orl
cmp
dec
icebp
mov
fs
jp,pt
insl
jp
and
adc
pop
sbb
mov
aaa
push
push
aaa
mov
icebp
outsb
sbb
stos
inc
test
cmpsl
mov
nop
lea
push
mov
and
shlb
aam
inc
test
adc
gs
push
out
jae
lods
adc
test
and
fs
loop
xor
sub
popf
ficompl
repz
xor
jg
fs
xchg
ror
les
mov
icebp
int3
paddd
addr16
pop
xchg
adc
add
ficompl
into
inc
in
add
jp
ret
push
mov
mov
call
out
ds
adcl
cmp
mov
dec
sbb
lock
rcll
ret
jno
pop
stos
je
xor
push
cltd
adc
in
mov
loop
sub
mov
into
inc
mov
xchg
mov
aaa
fs
push
jle
push
rorb
lea
pop
rorb
jl
mov
sub
mov
rcrl
xor
testl
push
jne
jae
icebp
popa
add
pop
gs
std
mov
out
sbb
repz
or
dec
jecxz
and
jge
fsubrl
or
loope
lret
mov
fstp
lret
mov
popa
add
rcll
ss
addr16
negb
imul
lods
mov
pop
test
pop
shlb
xchg
dec
lret
adc
lock
loop
mov
jmp
loopne
xorl
dec
mov
inc
clc
inc
iret
cs
cli
inc
lahf
fwait
pop
sbb
movsb
sub
rorb
sub
ds
or
ljmp
or
ret
pop
push
rorb
and
das
sbb
daa
mov
pop
push
les
push
stos
pusha
lcall
push
and
inc
sbb
mov
pop
xchg
loope
sub
mov
bound
add
xchg
popf
int
lret
push
mov
lods
add
lret
dec
pop
mov
cmp
out
movsb
and
ret
and
arpl
push
adc
icebp
std
outsl
leave
pop
jg
les
pop
or
xor
dec
dec
push
test
jne
fldt
inc
mov
outsl
mov
popf
and
mov
movsb
mov
jl
loope
ds
or
stos
popa
fisttpl
inc
andl
jmp
js
jnp
xor
int3
push
push
cmc
xor
inc
dec
int
xchg
jge
cmpb
mov
push
sbb
mov
outsl
mov
jp
or
stc
scas
lds
sub
jbe
addr16
push
dec
xchg
movsl
movsl
sbb
xchg
inc
jns
jl
iret
push
pop
das
dec
ret
rorb
fadd
cmp
outsb
sbb
jg
mov
popa
push
pop
inc
sar
sti
aam
sub
add
call
add
dec
mov
push
pop
xchg
test
push
and
sbbb
fiadds
insb
test
das
int
cmp
jge
cmc
outsl
mov
ds
mov
and
insl
iret
fisttpll
sub
ret
xor
stc
fists
ds
cli
dec
lods
sbb
mov
ljmp
push
fmuls
jbe
call
xchg
xor
rcr
cmc
scas
roll
pop
stos
orb
xor
push
xchg
cmp
xor
out
dec
outsl
ss
mov
int
mov
lds
pop
outsl
push
mov
stc
pop
and
mov
les
pushf
pop
repnz
pop
jecxz
sbb
outsb
cs
subl
clc
mov
je
ds
jmp
lods
or
push
jae
push
scas
mov
sysexit
jne
js
xchg
mov
sbb
cld
movsl
push
jg
mov
mov
aad
mov
jo
mov
mov
pop
pop
cmp
fwait
les
push
shlb
ljmp
push
outsl
mov
pop
xchg
jns
mov
sbb
stc
ror
rorb
jno
xor
xchg
pop
xchg
mov
imul
xchg
or
cwtl
insl
xchg
mov
jecxz
xor
or
sbb
mov
mov
mov
aad
test
in
les
shrb
push
ret
inc
fcomps
cmp
jecxz
mov
idiv
push
mov
add
cli
push
cmp
enter
adc
data16
sbb
dec
push
mov
add
lods
rolb
cmp
mov
pop
xchg
cli
inc
fs
aam
pop
lock
andb
lods
aas
dec
iret
test
fistpll
mov
xor
int
pop
xor
test
dec
push
test
daa
cld
out
outsb
popf
insl
xor
mov
push
mov
dec
andl
pop
std
in
pop
pop
add
mov
pop
sti
mov
rclb
sbb
mov
dec
stos
lods
mov
push
or
mov
sub
aaa
inc
insb
xchg
pop
test
adc
test
jnp
fstpt
clc
aad
dec
jp
stos
orl
scas
insb
fdivrl
sbb
jnp
std
inc
cmp
mov
adc
pop
clc
adc
pop
js
repz
in
dec
test
or
rcrb
dec
iret
sti
lret
adc
int
pop
push
pop
inc
enter
and
and
inc
bound
imul
cwtl
jmp
sub
iret
adc
xor
jbe
mov
cmp
push
dec
imul
in
cmp
jecxz
push
dec
push
pop
inc
push
dec
push
push
dec
inc
fsubs
outsl
enter
push
test
pop
insl
cld
jecxz
repz
dec
ljmp
cli
lret
mov
rcr
xor
mov
outsb
outsb
fwait
decb
pushf
in
push
and
dec
shll
push
and
into
mov
lcall
imul
mov
cltd
das
jmp
push
dec
into
or
test
test
data16
inc
mov
xorb
int
popf
mov
xor
add
sarb
mov
adc
adc
in
fadds
mov
mov
enter
outsl
mov
scas
mov
sub
in
dec
popf
mov
add
add
pop
pop
out
jp
adc
and
jbe
out
lods
sti
or
sub
mov
mov
das
fcmovnb
or
inc
ss
dec
les
repnz
fisubrl
xor
mov
jmp
jp
dec
scas
inc
cmc
sbb
mov
xchg
push
iret
in
cltd
inc
mov
mov
pusha
stos
and
loope
into
fidivrl
out
lcall
imul
mov
jo
cmp
cmpsb
repnz
subb
sbb
ljmp
out
mov
je
pop
mov
inc
sbb
call
xchg
sahf
and
mov
ds
mov
add
or
jo
or
pop
fisubrs
das
push
sbb
rolb
out
jmp
push
lds
adc
add
out
loopne
lods
outsl
sub
enter
cmp
sub
sbb
repz
aad
test
sbb
or
inc
repnz
rclb
add
cwtl
push
mov
inc
mov
lcall
push
dec
dec
mov
mov
loop
cmp
cmp
and
jb
icebp
out
ret
jns
fcmovnbe
mov
ljmp
lret
mov
adc
push
fisttpll
popl
mov
jle
xor
ja
xchg
dec
dec
bound
push
imulb
fnstenv
fsubrs
out
loopne
outsb
push
dec
fists
sub
sarb
in
push
cli
inc
leave
and
lods
mov
lea
enter
adc
xor
mov
xchg
cltd
jbe
fcomi
fcoms
dec
lret
outsl
test
push
lret
cmp
lds
popf
push
loope
ret
mov
jnp
inc
inc
es
negl
lcall
pop
cmpl
fsubr
jae
and
inc
mov
push
cltd
lret
cmp
add
xor
push
in
mov
fimull
in
push
and
aaa
jbe
sub
inc
imul
add
sbb
nop
stc
fists
ret
push
daa
add
mov
push
call
ja
es
or
repz
adc
jo
gs
dec
nop
sbb
adcb
dec
cmpsl
push
sahf
xchg
pminub
lea
inc
jo
ret
iret
cmp
mov
xor
outsb
push
pop
imul
or
sub
lds
adc
jno
adc
mov
enter
mov
push
jg
jbe
push
cmp
fidivs
insl
xchg
aam
movsl
mov
mov
lahf
lahf
dec
mov
addr16
push
dec
in
shll
push
movzbl
add
and
decl
fstpt
and
arpl
dec
xchg
iret
fsubs
dec
mov
repz
out
push
mov
ja
pop
xlat
ret
adc
jae
pop
mov
cmp
cmp
cmp
in
insb
aam
xchg
xlat
dec
or
inc
test
dec
mov
cmp
jge
and
mov
push
inc
sbb
pop
movl
pop
cli
mov
dec
sbb
push
lods
aad
xor
and
xor
jp
shlb
lods
pusha
stos
dec
xchg
sbb
arpl
adc
adc
mov
or
mov
jns
adc
jne
repz
adc
pop
push
or
leave
jns
mov
push
insb
insl
add
jnp
insb
out
sub
lahf
lret
dec
dec
adc
push
iret
push
xchg
imul
scas
or
shll
in
jl
int
jge
sti
sub
jnp
scas
loopne
xchg
push
jo
mov
loopne
pop
aaa
mov
addb
xchg
movsl
repz
loopne
test
je
adc
ljmp
ret
aad
sbb
in
xchg
push
mov
sub
jb
pop
mov
or
sbb
nop
jl
jno
repz
dec
pushf
imul
mov
mov
scas
out
ljmp
inc
movsl
or
push
stos
arpl
mov
and
push
les
xlat
inc
cld
imul
mov
mov
jno
movlps
pop
outsb
es
out
js
test
neg
fildl
xchg
jno
or
lds
rcll
mov
mov
mov
mov
jne
insb
xor
xchg
mov
push
pop
andb
or
xor
cmp
and
dec
mov
cmp
mov
dec
outsb
and
lret
pop
int
ja
lods
inc
jmp
fisttpll
fwait
cli
adc
xor
stos
push
sub
iret
xchg
or
pop
cld
adc
cmc
sub
pop
or
paddb
and
addr16
fwait
mull
xchg
jae
cli
cmp
ret
enter
sbb
add
xor
cli
pop
dec
sbb
mov
jbe
cmp
fildl
scas
aad
xor
out
enter
adc
int3
fldl
iret
das
xor
inc
adc
stos
sub
lea
inc
mov
mov
ljmp
push
fucomi
adcl
rclb
out
inc
lret
xor
push
je
fisubrl
mov
xor
xchg
push
cmp
mov
aas
sti
daa
cmp
jle
fiadds
lock
aaa
add
sub
scas
repnz
or
add
push
sub
ja
mov
enter
pop
jne
or
inc
test
cmc
inc
popf
jns
jp
sub
jg
xor
xchg
xchg
dec
push
rol
mov
pop
mov
aaa
xchg
ror
xchg
out
jecxz
fwait
mov
cmp
scas
sbb
mov
jae
movsb
lahf
jmp
cmpsb
cmp
ret
popl
xchg
push
mov
or
aas
xcrypt-cfb
cmpsl
addr16
push
clc
sub
add
int3
xchg
ret
in
lds
and
and
pop
pop
adc
jne
mov
pop
shll
sbb
jb
dec
jbe
fists
cmp
jmp
pushf
pop
add
or
mov
leave
push
inc
cmp
aaa
fwait
or
mov
inc
lea
inc
loopne
xchg
mov
mov
jmp
xchg
cltd
mov
test
lds
mov
lahf
adc
mov
jns
movsb
or
in
in
outsb
jae
adc
cmpsl
mov
inc
adc
jbe
sahf
iret
jbe
aam
inc
mov
fisttpl
clc
in
sub
stos
repnz
mov
lcall
cltd
xor
fxch
sub
inc
shll
xor
cld
decl
sub
adc
sbb
jo
add
mov
mov
mov
jne
and
jg
sbbb
mov
pop
xor
and
movsb
and
mov
push
loopne
lods
push
add
sti
movsb
stos
push
pop
mov
jle
ret
int
mov
mov
in
xorl
pop
and
fs
les
cmpsb
cmp
cmpsb
pop
scas
inc
imul
dec
scas
and
sub
bnd
adc
call
xlat
es
add
xchg
int
mov
shrl
mov
loope
ds
pushf
jmp
scas
stos
pushf
jmp
nop
pop
xchg
mov
notl
mov
loop
sub
mov
jae
inc
push
ds
ret
shr
loopne
jge
mov
cmp
mov
jmp
or
pop
lods
orb
sub
insb
fildll
mov
in
sub
lods
outsb
mov
fnsave
jecxz
xor
push
mov
cmp
push
and
imul
or
xchg
test
and
lret
inc
jecxz
pop
and
adc
sbb
std
pop
and
mov
mov
int
inc
pop
push
je
mov
mov
test
cmc
mov
xchg
jb
jl
xchg
repnz
dec
inc
cmp
lock
xor
into
mov
push
xor
xchg
push
mov
adc
call
adc
cmpsb
pop
pop
sub
xchg
into
clc
insb
xchg
sbb
scas
adc
lret
jmp
jmp
and
js
loopne
and
int
cld
sahf
test
gs
pusha
div
sbb
ret
pop
add
mov
mov
and
mov
stos
sub
add
clc
xorb
push
push
andb
xor
mov
dec
pop
pop
inc
stos
cmp
fisttpll
data16
imul
imul
jne
mov
dec
das
xchg
adc
lea
cmpsl
adc
sbb
inc
sub
in
add
imul
sbb
and
add
icebp
mov
jecxz
lods
push
jbe
aad
push
cmpsl
mov
adc
mov
orb
dec
xchg
fsubs
shlb
bound
dec
sbb
addr16
jb
mov
add
jmp
int
pop
ret
repz
fstl
aaa
mov
push
push
std
maskmovq
outsl
add
fwait
je
jb
cmp
rorb
xor
mov
push
pop
mov
xchg
sarl
and
adc
lcall
leave
fisubrs
ds
xor
dec
mov
sbb
rcrl
sbb
push
pusha
aam
je
sti
movsl
jp
or
adc
and
jg
clc
add
mov
movsl
pop
fwait
push
or
pushf
fdivrl
ret
jbe
dec
inc
push
pop
mov
cmp
add
push
jae
insl
dec
and
std
fstps
fimull
and
jmp
iret
pop
mov
ret
mov
xchg
addb
xchg
inc
inc
ljmp
test
inc
fmuls
nop
push
js
jbe
jne
dec
fldcw
mov
or
lods
xlat
xchg
enter
adc
xlat
fisubs
ja
mov
cmp
roll
jge
mov
jno
jg
adc
sbb
into
dec
mov
lock
int3
cli
push
mov
popf
mov
cmpsl
cwtl
pop
or
xor
scas
int
add
jle
outsb
add
int3
outsl
aas
cmp
mov
mov
mov
xchg
adc
add
sbb
mov
das
testl
lock
repz
push
xchg
push
hlt
mov
pop
popa
mov
add
mov
aas
mov
mov
sahf
repz
es
pop
xor
popa
rcr
sahf
outsb
lock
mov
dec
fildll
xchg
nopl
dec
pop
inc
jecxz
scas
push
nop
and
and
out
test
cmp
mov
cs
fcmovbe
pushf
cmp
loop
cmp
adc
adc
cmp
syscall
js
ljmp
mov
pop
or
or
mov
mov
test
in
inc
push
mov
sub
mov
rcpps
loop
popa
call
insl
mov
dec
mov
lcall
cmpb
xchg
mov
sbb
xchg
pop
repz
lahf
mov
or
fs
dec
cld
test
jne
cmpl
sub
in
out
scas
jl
xor
sbb
rclb
lcall
dec
int3
rorl
pop
or
shl
out
lock
inc
movsb
mov
jge
mov
movsl
loop
inc
aas
mov
mov
dec
cltd
enter
add
data16
dec
jo
sbb
insl
popf
outsb
cmp
xchg
sub
xor
fsubrs
sub
js
sbb
outsl
lock
test
inc
mov
pop
call
shrb
jno
xlat
lea
stos
mov
mov
and
mov
leave
hlt
arpl
add
or
jae
dec
mov
ficomps
inc
mov
sbb
icebp
in
cmp
mov
lret
stc
and
sub
xor
rolb
lcall
nop
movsb
fistps
pop
xorb
fwait
mov
add
adc
popf
movsl
mov
push
ds
inc
popf
jmp
pop
push
in
adc
out
pop
clc
pop
adc
mov
call
jnp
dec
outsl
sahf
mov
xor
add
pop
scas
ja
imul
pop
loope
and
xchg
out
add
jecxz
in
mov
xchg
pop
push
jle
test
cltd
das
es
testl
rclb
xlat
mov
mov
jbe
mov
adc
mov
test
jbe
in
jae
sbbb
jae
push
aaa
push
mov
pop
lcall
and
ret
push
bound
mov
pusha
add
fdivs
rol
into
jne
scas
pop
add
bnd
es
and
adc
jnp
xchg
fabs
fstps
js,pt
mov
sub
out
jge
jge
cmp
push
imul
test
jno
adc
jo
adcb
popa
cmp
mov
and
in
test
and
adc
sahf
push
push
cli
lcall
imul
arpl
out
cmp
push
add
lods
adc
push
pop
imul
mov
adc
pop
fdivs
sbb
pop
in
mov
xchg
mov
add
and
fldcw
and
mov
nop
sbb
push
stc
aam
adc
cltd
push
out
push
pusha
hlt
js
inc
fidivl
adc
imul
into
lods
aas
call
outsb
pusha
cld
push
adc
push
lcall
mov
xchg
jl
adc
xor
xor
imul
jl
scas
bound
xor
outsl
mov
fsub
dec
rcrb
sub
push
imul
cmp
pop
ret
fwait
out
xchg
int
lock
ret
mov
aad
mov
orb
jmp
xchg
xchg
popf
ds
xchg
std
push
andb
add
inc
insb
loopne
ljmp
push
and
mov
dec
lods
out
movsb
in
cs
lock
cmp
inc
adc
cs
les
mov
out
out
xchg
std
in
loope
and
xchg
fwait
int
cli
pop
jnp
pop
or
aam
push
mov
inc
adc
push
test
xor
adc
mul
xchg
cli
popa
scas
jge
dec
push
sub
andb
cmpsl
jnp
clc
push
xlat
push
or
into
lret
mov
dec
sarl
dec
sub
test
adc
sbb
dec
rclb
sbb
mov
adc
mov
pop
xor
loopne
or
sahf
sbb
orb
jle
mov
pop
lea
pushf
add
xchg
aam
fldt
inc
insl
sti
dec
and
mov
shlb
cmovb
sub
pop
hlt
adcb
sbb
push
cmp
lret
fs
push
push
or
test
jae
repnz
bound
sbb
lods
ret
xchg
cs
sbb
or
xor
cmc
add
aad
leave
jbe
push
sub
movsb
or
inc
push
loop
jmp
jmp
sti
jecxz
push
rorb
jo
jl
test
mov
in
cli
neg
mov
aas
out
fdivrl
cmpsb
pop
dec
lcall
rorb
sub
push
fdiv
xor
call
cmp
sbb
lock
cmp
orl
mov
mov
xchg
push
jno
jg
push
adc
mov
xor
push
xorps
xchg
xor
movsb
xor
nop
jo
inc
aas
pop
sbb
xchg
jae
cmp
mov
fstl
rolb
mov
into
push
test
adc
jno,pn
mov
xchg
inc
scas
out
inc
inc
mov
pushf
sbb
sub
pop
push
xchg
repz
lods
add
loop
shr
lcall
push
jnp
leave
loope
adc
mov
inc
xchg
mov
mov
mov
data16
push
add
loope
test
roll
inc
fldt
sub
sbb
jge
pop
psubd
mov
imul
jl
cmpb
sahf
stc
add
pop
mov
or
xchg
jp
mov
sti
xchg
rcl
stos
sbb
xchg
and
pop
jmp
and
icebp
cmp
lea
imul
mov
sbb
pop
mov
push
popa
lods
leave
push
or
popf
xchg
add
inc
cmpsb
mov
mov
and
fisubrl
mov
pop
repnz
sbb
pop
mov
je
add
popf
jne
sbb
addl
jge
or
lea
lret
les
xor
rorb
insl
inc
scas
fistpl
adc
lcall
cmpsb
icebp
mov
jo
ret
scas
dec
adc
mov
shrl
sarb
in
and
je
cmp
dec
lds
test
sbb
inc
jnp
cmp
mov
lret
push
xorl
cmp
orb
push
aas
xchg
orb
test
in
inc
imul
sub
sub
add
js
sbb
mov
outsb
pop
cmp
bound
call
fdiv
testb
pop
das
stos
nop
repnz
inc
xchg
dec
pop
out
das
jno
fwait
mov
lahf
movsb
or
sub
lods
orl
dec
mov
xor
out
inc
adc
aas
dec
cmp
lock
jecxz
rcll
pop
mov
out
daa
push
loope
dec
into
adc
inc
enter
dec
imul
push
ret
mov
mov
push
loope
and
or
fxtract
arpl
or
adc
mov
add
pusha
or
stos
or
mov
dec
cmp
xor
dec
mov
jle
gs
xchg
xchg
add
mov
sub
mov
mov
pop
ret
mov
insl
and
mov
loope
inc
push
inc
ds
enter
dec
pop
add
xor
orb
iret
lock
shlb
inc
inc
cltd
add
lds
mov
adc
xchg
ret
in
mov
dec
mov
and
and
pushf
stos
fs
aaa
int3
sbb
test
in
in
jns
and
icebp
mov
jp
jbe
test
mov
xchg
jb
insb
insl
loope
pop
loope
leave
sub
and
sub
cmc
adc
push
sub
add
cli
add
sbbl
pop
ss
in
loope
jg
mov
cli
and
mov
xor
add
pusha
fidivl
das
mov
rorl
sbb
cltd
cwtl
faddl
test
fucomi
push
push
push
imull
push
les
mov
mov
imul
loope
call
xchg
push
ficomps
shr
test
or
cmp
mov
jge
jg
lret
sahf
jle
ds
cli
enter
sti
hlt
data16
cmp
mov
cs
mov
mov
mov
sahf
int3
jae
xchg
xor
sub
cwtl
sub
inc
xchg
cmp
jno
mov
iret
or
rcrl
lret
inc
js
xchg
mov
call
add
mov
nop
inc
stos
lods
mov
sub
and
hlt
out
pop
cmp
out
cmp
and
jns
pop
test
ficompl
lcall
jne
dec
jg
aaa
push
outsl
mov
pop
test
push
cwtl
or
and
outsb
adc
adc
pop
pop
mov
xor
push
sbb
cmp
sub
lcall
scas
gs
mov
cmpsb
jmp
mov
out
jno
subb
mov
stos
lret
int
jo
aas
xchg
mov
pop
sbb
test
clc
js
jle
cli
cwtl
and
fstps
pop
sbb
mov
pusha
cwtl
mov
fdivr
std
xor
rorl
hlt
pop
fadds
loopne
mov
mov
sbb
adc
jne
lods
adc
add
pushf
arpl
jg
sarl
fcmovnbe
ss
stc
mov
mov
jo
scas
mov
icebp
push
imul
cs
js
sub
cltd
shlb
aad
shll
sub
and
shr
inc
xchg
jecxz
xor
pop
or
rol
test
lcall
fs
cwtl
sub
and
push
lcall
sub
xchg
dec
scas
dec
roll
xor
mov
pop
movsl
sub
pusha
push
ret
mov
xchg
movsb
shrl
jp
mov
mov
pop
ret
repz
jle
inc
or
cmp
in
dec
adc
add
std
push
dec
jns
adc
dec
leave
repnz
dec
fcom
dec
std
stos
int3
dec
mov
mov
add
sub
mov
or
rolb
mov
cmp
stos
add
dec
cld
jns
cmc
leave
pop
inc
push
inc
je
fildll
fisubl
inc
mov
dec
std
insl
movsb
push
dec
aaa
mov
jmp
mov
in
fisttpl
xor
popf
inc
mov
stc
sbb
sub
ss
cli
adc
clc
jns
scas
xor
bound
jne
test
push
cwtl
push
add
or
lods
inc
and
cmc
mov
aam
arpl
loope
popa
mov
and
insl
cmpsl
mov
in
pop
aam
sub
push
mov
jno
push
pop
push
push
mov
or
aam
jne
hlt
andb
xor
pop
in
adc
in
out
shll
out
inc
movaps
cmp
cwtl
enter
ror
pop
add
out
mov
or
fstl
shrl
jle
out
rclb
and
sbb
int3
push
mov
lret
adc
mov
adc
insb
fs
push
in
jne
or
adc
das
dec
les
test
out
cmp
xchg
jo
xchg
in
xchg
mov
movsl
mov
movsl
les
in
gs
mov
lds
mov
inc
mov
lods
lahf
push
shll
test
cmpsl
addr16
lcall
leave
mov
cli
push
jp
xchg
jmp
ja
insb
cld
xor
sti
cwtl
call
scas
xchg
inc
lds
mov
std
loopne
cmpsb
mov
inc
add
iret
pop
cmp
or
mov
cmp
pop
sub
mov
cli
or
aaa
fdivl
jmp
rorb
jnp
scas
xchg
outsl
mov
insb
fcomip
nop
sbb
jae
rol
sbb
test
in
and
pop
inc
fcmovu
shll
and
push
jecxz
sub
inc
fwait
cmp
out
mov
fisttps
push
xor
loopne
ud1
push
pop
in
aad
shrb
int
lea
js
adc
pop
pushf
sbb
jp
shlb
mov
leave
and
stos
inc
lcall
lahf
rcl
sub
push
inc
out
arpl
mov
pop
fs
mov
fldenv
lahf
popf
adc
sub
fsubs
call
cmpsl
jg
in
out
hlt
mov
cli
lods
lret
mov
pop
jl
cmp
xor
sub
mov
cmp
jo
push
lea
sbb
mov
mov
ret
jecxz
iret
jle
imul
cmc
xchg
mov
jle
xor
fisttpll
clc
sub
aas
roll
out
ret
rol
cmp
cmp
sbb
das
notb
xor
add
pop
mov
inc
movsl
inc
add
pop
pop
mov
cmp
inc
cmp
loop
ss
js
xchg
cli
or
in
and
pop
and
fstpl
stos
pushf
sahf
jl
inc
sbb
imul
mov
inc
sub
xchg
push
neg
dec
push
mov
pusha
dec
out
shll
push
loop
shll
mov
shll
add
xchg
mov
jmp
popa
push
insl
lds
fbld
add
iret
test
jge
adc
lds
cmp
cmp
mov
mov
mov
ficoml
adc
lcall
cli
test
pop
dec
sbbb
mov
fisttpl
xchg
and
shr
outsb
imul
jae
addb
pushf
in
sub
loopne
into
xchg
sbb
sbb
push
into
sahf
push
out
or
cmp
adc
adc
loop
sti
mov
lods
cmpsl
roll
push
sar
cmp
lds
dec
nop
mov
jle
inc
push
aaa
mov
ret
push
movsb
push
clc
sub
add
mov
and
aad
mov
out
movsb
push
lcall
and
xchg
jg
inc
repnz
xor
aas
test
or
adc
loop
rcll
xor
scas
int3
das
xchg
frstor
out
nop
ret
or
cs
sub
inc
xchg
mov
lods
jg
jo
xchg
hlt
dec
aas
mov
call
movsb
pop
sbb
daa
push
lret
pop
fs
in
or
dec
mov
popf
mov
pushf
out
push
imul
repnz
mov
jb
pop
mov
and
xor
jle
iret
test
jp
gs
xorl
mov
or
lcall
dec
mov
cli
sahf
imul
sbb
ret
adc
mov
mov
stos
std
stos
xchg
jno
jge
cmpsl
pusha
cltd
cmp
jb
ret
mov
sbb
shrl
mov
add
das
jo
fists
andl
pushf
sbb
mov
mov
jo
xchg
push
dec
setno
adc
sub
sbb
xor
test
dec
ds
arpl
out
imul
lods
pop
pop
lcall
or
daa
in
mov
aad
mov
imul
test
iret
stos
mov
push
xor
jnp
ret
dec
push
mov
fcmovnu
test
lods
gs
jno
lea
stos
jge
pop
push
pop
stos
pop
or
out
data16
add
cld
stos
add
and
mov
lock
dec
mov
mov
outsb
stc
pop
ds
dec
imul
data16
xchg
repz
add
dec
outsl
das
ljmp
push
pushf
mov
popa
inc
in
or
ds
icebp
push
ljmp
xlat
out
inc
rorl
fwait
in
or
out
inc
cmp
enter
outsl
pop
out
jnp
add
in
adc
xor
push
mov
cmc
push
mov
jne
cli
out
and
sbb
or
mov
jno
jge
leave
jnp
test
bnd
inc
sub
sub
rcll
imul
push
adc
mov
jg
aam
stc
pusha
lock
jecxz
sub
not
xchg
pop
bound
in
neg
push
out
stos
xor
mov
loopne
xchg
cmp
jno
xchg
pop
lahf
jl
out
xor
rorl
add
push
insl
adc
cmp
mov
push
cmpsl
and
mov
mov
xor
xlat
gs
push
loopne
cld
out
push
and
sub
das
out
lret
push
sub
int
rorl
cmp
cmc
mov
jle
jmp
leave
test
or
inc
fiaddl
notl
fisubl
rcl
xchg
lea
sarl
cli
mov
loop
mov
movsb
in
mov
pop
inc
push
inc
cltd
adc
pop
lods
mov
mov
cmpsb
leave
cs
int
push
lock
jp
stc
and
enter
pop
dec
stos
fsubrl
insl
jo
aam
dec
in
stc
in
add
cwtl
inc
decl
lock
outsl
ds
leave
xchg
sub
loop
in
add
sbb
ja
or
loop
data16
adc
notb
icebp
xchg
mov
shr
aam
sti
dec
mov
xchg
scas
leave
mov
out
sub
popa
lahf
xchg
test
fsubrs
enter
mov
int
sbb
dec
cwtl
xchg
mov
in
mov
xor
mov
push
add
adc
xchg
test
pop
gs
loop
mov
rcrb
popf
ret
xchg
lods
faddl
mov
jp
mov
push
repnz
mov
add
mov
add
xchg
adc
and
cmpsb
inc
adc
outsb
pop
stos
xchg
add
lret
push
cmpsl
xlat
inc
in
and
in
jns
pop
and
js
jno
insl
jp
fbld
jb
cmp
mov
movsb
mov
cmpl
pop
insl
or
mov
mov
cmpsl
sub
pushf
adc
cmp
pop
test
mov
loop
sahf
fcomps
aam
aad
push
out
fs
adc
mov
add
cmpsb
lret
inc
loop
sahf
fcomp
xor
fneni(8087
movsb
jb
mov
dec
inc
cld
push
popa
fsubs
push
loope
shl
add
test
cld
dec
outsb
les
loope
mov
in
pop
xor
scas
jle
out
outsb
fs
mov
cmp
and
incl
sahf
pop
jg
xchg
pop
mov
aaa
adcb
les
out
jmp
adc
dec
mov
lock
mov
hlt
add
das
or
adc
push
add
jp
fildll
lea
into
push
popf
sub
cmp
cwtl
icebp
ret
sub
mov
mov
pop
lret
jbe,pn
imul
cmpsl
pop
push
or
in
cmpsb
sbb
repz
outsw
add
jbe
jns
sbbb
fisubs
vpunpckhwd
fstps
sbb
ds
jmp
lret
xlat
dec
pop
add
outsl
and
add
imul
mov
lret
add
and
jbe
shll
jns
mov
xor
mov
cmp
stc
inc
push
dec
mov
and
les
stos
jae
rclb
shll
adc
inc
xlat
decl
sbb
sub
mov
lcall
lea
das
mov
jge
inc
sbb
arpl
loopne
imul
adc
test
dec
loopne
add
sbb
xor
dec
xor
test
add
cld
adc
iret
rcrl
push
rcll
addr16
mov
push
xchg
pop
cmc
pop
adc
mov
fwait
movl
aaa
test
xor
xchg
jnp
pop
pop
outsl
loope
js
cmp
jo
mov
mov
mov
fadds
jns
imul
test
lea
jle
or
xlat
or
in
xchg
repz
push
cmc
jmp
in
dec
mov
or
stos
shrl
mov
ret
mov
push
pop
repnz
mov
pop
and
inc
push
cmp
pushf
mov
adc
jmp
ret
push
orb
push
inc
pop
inc
xchg
pusha
lret
push
clc
pop
mov
push
or
hlt
insb
sub
cli
xchg
sub
fidivrs
daa
cli
sbb
mov
ret
adc
xlat
les
adc
jecxz
mov
mov
subb
in
icebp
and
inc
xor
mov
gs
pop
pop
push
jmp
mov
in
fsubr
in
xor
aam
pop
adcb
add
inc
and
adc
shll
mov
jnp
es
lret
mov
jbe
xchg
mov
adcl
push
shlb
inc
cld
repz
mov
xor
popa
lret
xor
cmp
loope
xchg
cmpsl
cmp
and
push
mov
mov
stos
adc
inc
fs
inc
and
pop
mov
jbe
xchg
cmp
test
push
jae
sbb
js
nop
sbb
xchg
sbb
jbe
dec
mov
shll
scas
push
sbbl
pop
mov
dec
adc
clc
gs
fmul
push
dec
repz
ljmp
insb
jl
mov
daa
mov
scas
sbb
or
test
lods
loope
xchg
lahf
out
cmc
popa
jg
jnp
test
leave
cmp
icebp
andl
dec
sub
push
add
loope
mov
sbb
push
mov
dec
daa
jae
dec
lret
shlb
jecxz
int3
pop
test
ss
jbe
dec
ja,pn
mov
jecxz
out
cmp
sarl
cmpsl
push
sti
out
aas
or
je
loop
imull
xorl
push
push
cmp
lods
das
call
fdivl
faddl
bound
xchg
sub
adc
cmc
int
mov
xor
sahf
inc
hlt
and
scas
cmp
fwait
xor
std
jmp
push
sub
outsb
and
pop
popf
lahf
mov
rorl
pop
repnz
stc
pop
mov
dec
mov
mov
into
adc
and
push
loop
fcoms
push
adcb
push
rcr
out
jno
in
cwtl
jo
bnd
shl
arpl
jmp
adc
sti
mov
inc
add
jno
test
cltd
push
popa
push
cmp
mov
cs
xchg
imul
mov
daa
cmp
stc
loope
insl
adc
das
mov
sub
push
inc
mov
int3
arpl
push
jl
dec
std
xor
je
lock
lret
ds
subb
add
clc
inc
test
dec
mov
mov
mov
addb
mov
push
add
imul
adc
jl
lret
cmp
pop
fstpt
add
iret
mov
mov
mov
imull
jno
xor
mov
or
bound
mov
sahf
js
mov
mov
loope
ss
repz
loopne
xchg
sbbb
outsb
add
xor
shll
popf
cmpsb
js
insb
xchg
pop
mov
sub
xchg
gs
bound
push
push
dec
sbb
in
cmp
jp
dec
or
or
sub
mov
sbb
jle
shll
xor
mov
cmc
nop
or
push
add
dec
cs
fnstsw
test
scas
test
xchg
jl
fistpll
push
aam
mov
sub
push
pop
fwait
sub
mov
test
cmovnp
ret
lods
xchg
and
xchg
lahf
xor
or
sub
add
outsb
xlat
push
icebp
jmp
push
mov
fisubrs
je
pop
lcall
les
adc
daa
xchg
addr16
int
mov
and
cmp
inc
dec
sbb
sub
pop
pusha
js
sub
subl
cmp
mov
fistps
xchg
movsb
jge
ds
aam
jo
push
xchg
push
shll
or
paddd
dec
insb
mov
xchg
in
jbe
icebp
jno
jno
insl
xchg
mov
or
push
mov
pop
xchg
arpl
sbb
and
xor
outsb
lahf
pop
mov
mov
sarl
sbb
xlat
cmpsb
pop
arpl
jl
mov
insb
mov
or
and
or
rcr
sub
outsl
adc
adc
and
lret
mov
and
fldt
cmp
repnz
xchg
aaa
jbe
es
test
pop
mov
mov
iret
jns
cmp
dec
inc
jns
test
mov
les
sub
jne
je
sbbl
lock
mov
mov
xchg
and
in
decl
or
loopne
mov
jb
aam
fwait
add
fldl
pop
popf
loopne
outsb
xor
repz
ret
and
push
and
xor
rclb
je
ja
movsb
jae
sub
push
mov
sub
add
fstpl
sahf
sub
mov
les
rolb
cmp
div
add
outsb
cmp
loop
push
jmp
imul
clc
cmp
sub
mov
outsb
shr
pop
test
xor
decb
dec
pop
inc
aad
jmp
lret
in
pusha
mov
jbe
sub
push
in
push
daa
ret
into
mov
xchg
test
add
dec
pusha
shll
repz
in
inc
std
popf
push
jae
cpuid
int
sub
loope
inc
mov
icebp
ret
mov
movsl
cmpsl
adc
hlt
and
cmp
dec
mov
push
jmp
push
lret
mov
icebp
imul
insb
jg
cmpb
insl
iret
lret
inc
imul
push
lcall
sahf
iret
inc
xchg
mov
fmulp
in
fdivs
and
jecxz
mov
push
lsl
pop
push
mov
adc
lret
xchg
sbb
xchg
mov
cli
outsl
push
and
push
add
xchg
inc
dec
sbb
cmpsb
pop
add
testb
test
mov
and
sarb
stc
xchg
push
and
js
je
fcoms
sbb
call
cmp
mov
fsubs
cmp
inc
xor
xchg
test
mov
jo
jno
xchg
in
adc
jp
out
adcl
xlat
xor
jb
loope
call
clc
cmp
lret
insl
dec
ss
mov
xor
aas
add
cmpsb
sti
xchg
mov
cltd
and
push
inc
in
loope
inc
ljmp
dec
jg
cmpb
mov
repz
stc
cltd
mov
pop
push
mov
mov
dec
jecxz
dec
add
push
fdivs
out
daa
pop
addr16
movsb
and
loopne
jbe
inc
sub
scas
pop
sub
xchg
xlat
scas
inc
or
out
in
sbb
pop
roll
loop
mov
cmpsl
xor
xor
mov
sbb
inc
punpckhdq
loope
testl
add
hlt
xchg
jmp
hlt
dec
pop
in
lds
jns
jle
lea
cmp
mov
test
adc
ljmp
mov
inc
push
push
push
loop
rclb
sbb
ss
filds
sarb
adc
sbb
lahf
in
stos
cld
push
aam
adc
lahf
push
mov
adc
jnp
xchg
inc
push
sbb
pop
test
push
jl
pop
pop
dec
adc
lock
mov
fiadds
inc
and
push
sbb
das
out
push
jo
insl
inc
in
sahf
in
cld
add
jg
psrld
dec
cli
mov
and
mov
pop
or
dec
aas
lahf
nop
arpl
jbe
ret
movsl
jle
jnp
mov
pop
imul
sahf
test
out
mov
mov
in
inc
pop
inc
insl
mov
mov
and
scas
clc
or
sti
or
mov
iret
xor
icebp
jle
orb
xor
out
lods
cmp
aaa
sub
in
pop
imul
lret
lret
out
push
xor
je
clc
cs
pop
jns
rorb
mov
add
negl
xchg
pusha
add
bound
mov
jl
push
les
xor
mov
dec
std
pop
shlb
or
mov
int
in
dec
lret
loop
push
pop
stos
adc
clc
cmc
hlt
mov
sbbl
add
es
mov
push
or
cmp
push
adc
iret
fistl
pop
fstp
icebp
xor
loop
fildll
fnstenv
xor
sub
dec
inc
xor
and
mov
xor
push
stc
cwtl
out
cld
dec
roll
int
dec
std
fildl
jle
scas
scas
lret
imul
mov
pop
jnp
dec
out
and
popa
adc
fisttpll
ljmp
addl
cmc
xchg
je
jg
andb
loop
sbb
xchg
mov
mov
mov
rclb
lret
or
stos
xorl
nop
repz
mov
das
cmp
xor
jge
xchg
mov
adc
jmp
scas
add
xchg
loope
sbb
popf
push
daa
out
mov
repz
icebp
popf
addl
stos
fs
mov
pop
jge
jae
pusha
out
cmp
mov
jns
xor
lcall
loope
adc
push
jecxz
fdivrl
imul
add
lds
sub
out
sti
out
xor
push
jl
pop
insl
fdivrl
test
outsb
cltd
shrl
push
repnz
lds
sbb
xor
outsl
cmp
sub
sub
sbb
xchg
outsl
data16
sub
pop
dec
jo
adc
xchg
pop
int3
xlat
fnsave
in
dec
leave
arpl
inc
adc
sti
sub
jnp
cli
dec
xor
testb
test
addb
add
mov
mov
test
dec
roll
popf
adc
rcl
mov
sub
push
imul
lock
popf
aas
dec
push
iret
aad
jnp
int
cmp
insl
mov
shrb
xchg
scas
int
inc
ret
dec
push
and
push
lds
aam
fisubl
jl
mov
loop
je
insb
xor
dec
scas
mov
push
lret
jnp
mov
sub
inc
xchg
je
push
cmpsb
adc
jb
xchg
xchg
leave
mov
push
and
daa
push
inc
iret
aaa
pushf
insl
inc
cmp
popf
xchg
inc
cmp
jno
stos
xor
mov
cmpsl
scas
and
push
ret
fdivl
inc
push
cs
hlt
ror
jmp
stc
jns
or
data16
sbb
mov
ja
daa
les
or
pop
push
out
inc
pop
jb
sbb
cmc
adc
addr16
insb
adc
mov
pop
jmp
add
daa
sbb
bound
cltd
adc
adc
lock
addr16
push
sahf
imul
lds
xlat
sbb
dec
popf
fdivrl
clc
sahf
cmp
ja
push
inc
test
addr16
dec
cli
das
js
mov
lods
test
js
clc
das
cmpb
insl
xchg
pop
in
cmp
inc
xor
jmp
pop
inc
repz
cli
fs
add
mov
push
insl
js
adc
and
inc
mov
jl
adc
dec
jl
es
and
mov
subl
and
cmc
enter
mov
jmp
pushf
mov
std
sub
adc
adc
mov
popa
mov
ja
or
or
sti
les
mov
push
push
orb
jp
rcr
add
mov
cwtl
adc
sub
xchg
mov
mov
push
pop
aas
dec
pop
fcmovb
jp
fisubs
and
mov
pop
test
inc
scas
movsb
pop
sub
jno
fcoms
adcl
adc
xor
push
lret
or
pop
cmp
xchg
lret
mov
push
mov
cli
push
inc
out
clc
test
mov
add
fcomi
adc
mov
pusha
pop
cwtl
in
lret
lods
dec
dec
mov
test
pop
cmp
mov
jl
in
mov
daa
dec
gs
mov
je
ja
push
ret
pop
inc
hlt
and
addl
js
lods
data16
jl
stc
push
daa
jl
xor
sbb
fsubs
xchg
fsts
lahf
cwtl
les
jbe
fsubr
int
in
lret
xchg
sbbb
js
push
pop
push
sti
lahf
jo
sarb
icebp
and
dec
repnz
add
fwait
add
and
inc
nop
int
adc
mov
pop
mov
ret
and
std
or
sbbb
fs
mov
xchg
js
addb
cmpl
stc
sbb
loope
aad
pop
roll
mov
aam
adc
add
stos
fdivrs
dec
mov
xor
pushl
lock
cltd
and
mov
sub
xor
addl
pop
mov
in
sbb
xor
dec
inc
sub
sub
mov
and
lahf
int
icebp
cwtl
ficompl
adc
push
or
pop
push
inc
arpl
jl
outsl
xchg
push
shlb
jnp
aas
xchg
cmc
mov
push
das
and
fisttps
ret
fsubl
ja
xor
mov
inc
gs
adc
or
lahf
push
icebp
aam
lcall
jl
or
inc
inc
loopne
dec
test
fcomps
shll
scas
xor
je
mov
and
push
jge
fcomps
addr16
mov
and
cmp
icebp
jecxz
sti
or
mov
insl
mov
shll
lds
fs
sub
push
jbe
enter
cmp
push
shlb
inc
loope
std
shlb
inc
jmp
jg
sub
mov
adc
vpsubusw
call
jmp
pusha
sbb
cwtl
and
push
popf
out
nop
loopne
or
mov
in
pop
testb
out
inc
mov
push
movsb
test
mov
push
repnz
mov
and
cmpsl
mov
in
mov
test
or
rorb
push
dec
pop
inc
lret
pop
jecxz
xchg
sahf
ror
mov
test
mov
jns
test
push
ficoms
mov
adc
or
pop
jbe
mov
loop
negl
jmp
aas
mov
xchg
sti
ss
pop
sti
stos
xchg
clc
push
cmp
xchg
mov
inc
inc
data16
xor
out
fldcw
data16
clc
xchg
or
dec
mov
insl
arpl
push
jg
pop
into
sbb
mov
popa
mov
push
jmp
je
sub
stc
mov
cmc
jecxz
icebp
push
hlt
shrb
pushf
ret
dec
leave
iret
push
dec
lds
or
loope
mov
push
pop
jp
fldl
mov
movsl
mov
repnz
cmpsl
jae
lds
xchg
outsl
inc
aam
push
popf
fcmovnb
push
push
scas
dec
dec
xor
out
push
push
xor
movsb
je
ljmp
ret
cli
mov
xchg
adcl
or
mov
andb
jl
rorl
ror
mov
and
stc
push
jo
mov
mov
cmpsb
je
fxch
scas
push
mov
sbb
sub
sub
dec
mov
and
sub
sub
hlt
dec
xchg
scas
in
sbb
pop
jecxz
fidivl
test
sub
mov
mov
add
pop
adc
xchg
xor
das
lods
sub
or
adc
lods
jno
andl
dec
mov
push
movsb
sub
es
add
mov
icebp
mov
and
or
lret
enter
xor
jl
jns
mov
adc
mov
push
int
dec
push
test
pop
push
mov
jge
cmp
leave
ljmp
jae
movups
inc
or
shll
nop
jb
push
fsubrp
add
sahf
lea
call
mov
andl
add
xlat
inc
mov
jnp
jle
icebp
gs
and
or
push
push
mov
aaa
js
data16
jnp
jnp
loop
cmp
cmp
mov
mov
mov
nop
mov
mov
xor
pop
or
shl
push
addb
aas
adc
test
adc
cmp
cmc
and
nop
sahf
imul
sbb
adc
ja
insl
pop
mov
push
int3
xor
or
jnp
call
pop
jb
cmp
cmpsl
rclb
cltd
mov
loopne
cs
cmc
mov
test
lock
xor
and
mov
jmp
mov
loopne
adc
sub
clc
nop
ret
cmp
sti
or
push
pop
jae
in
shr
and
mov
jnp
add
in
shll
push
xorb
sub
sub
imul
pop
fwait
popa
pop
lods
jp
mov
push
int3
testl
les
pop
jne
popf
shll
fs
mov
jecxz
jo
popf
incb
mov
jb
fnop
fiaddl
push
jg
arpl
sub
lods
add
adc
jnp
add
mov
dec
sarl
imul
mov
dec
inc
lret
cmp
or
push
push
add
or
cld
inc
cli
jp
lds
sub
or
pop
bound
jnp
inc
fwait
cmpsb
pop
scas
in
fildll
add
push
fildl
adc
mov
call
cmp
mov
cmp
int3
cli
xchg
clc
es
cmp
fwait
adc
int
cmp
mov
add
mov
push
sbb
stc
outsl
sub
and
or
mov
jae
shr
jl
mov
sbb
inc
jnp
mov
jge
iret
xchg
stc
fidivrs
mov
adc
push
mov
es
sbb
jge
loope
test
imul
lds
insl
and
hlt
loopne
lcall
mov
add
aad
les
lret
test
ss
mov
icebp
fwait
ret
adc
je
popf
xor
rol
inc
xlat
rcrb
das
sub
or
and
adc
pop
xchg
add
in
add
bound
in
add
mov
mov
cltd
mov
dec
pop
jge
mov
sub
lahf
push
sub
shr
out
sub
in
xchg
sbb
or
sub
jl
xor
inc
out
popa
xchg
hlt
sub
lock
rorl
and
pop
push
pushf
mov
jae
andl
xchg
fwait
push
lock
cmp
fadds
call
fld
mov
ficoml
mov
push
popa
les
testl
jge
aad
sbb
adc
fmulp
das
xor
fwait
adc
aad
arpl
lods
adc
mov
jg
rcll
push
outsb
pop
push
add
dec
sbb
or
mov
xchg
mov
test
ja
and
jns
lods
xor
ljmp
mov
jno
test
scas
mov
sub
adc
sub
ds
sub
mov
test
pop
stos
fdecstp
jbe
pop
repz
cwtl
or
sbb
mov
fs
hlt
inc
out
mov
lods
mov
incb
loop
add
loope
les
sbb
xchg
lods
int
iret
push
fdivrp
fs
scas
arpl
sbb
dec
dec
fisubrl
fbld
leave
outsl
rcrb
addr16
sbb
fsubrl
scas
cmp
sub
testl
and
jae
mov
sbb
adc
cmc
mov
std
bts
add
add
stos
dec
mov
dec
push
sarl
pop
xchg
lcall
and
lods
loopne
rorl
popf
sbb
outsb
push
call
or
cmp
sti
stc
jne
jge
pop
pop
push
jnp
and
dec
cltd
mov
dec
jge
push
dec
adc
pop
into
ret
add
aad
xchg
jb
add
out
std
shll
jge
mov
loope
aad
inc
cltd
lcall
aaa
in
mov
fstpt
int
loop
cmpsl
inc
or
mov
inc
inc
adc
push
sbb
cli
pop
inc
mov
idiv
lock
das
inc
push
movsl
and
cltd
jb
dec
cmc
and
cmp
sbb
fildl
loop
sbb
jbe
mov
dec
insb
popf
mov
pop
sub
add
mov
hlt
pusha
fst
outsb
cmc
out
shl
xchg
data16
mov
jnp
or
and
iret
call
aas
lahf
mov
xor
jae
enter
fdivrs
jne
mov
inc
mov
fwait
sti
scas
mov
outsb
fsubrs
xor
pavgw
mov
imul
je
int
test
dec
out
imul
adc
xor
inc
mov
jae
xchg
sub
test
adc
push
stos
clc
in
in
les
imul
outsl
mov
mov
xchg
mov
imull
ficompl
jno
ss
fbstp
mov
outsl
and
cmp
bound
xchg
dec
sub
fdivrp
adc
out
cld
and
mov
repnz
sti
xor
out
clc
pop
mov
cmpsb
std
or
cmp
je
das
cmp
cmp
cmpsl
test
mov
fisttpll
std
cmpsb
ret
sarl
aaa
and
enter
pop
scas
negl
pop
or
adc
push
inc
fs
lock
push
jge
inc
cmpsb
pop
dec
jmp
jnp
xchg
and
cwtl
jno
xchg
loop
mov
cli
mov
add
push
fwait
mov
or
in
sbbb
pop
add
dec
adc
add
push
push
ror
jecxz
mov
add
adc
sub
jg
add
mov
sbb
sbb
mov
xchg
mov
loop
sub
jg
scas
ja
clc
push
or
cli
into
or
pop
mov
inc
ret
lock
test
shlb
push
and
xchg
adc
test
lods
enter
mov
inc
mov
inc
add
test
cs
fistpll
lcall
xchg
popl
sbb
xchg
mov
mov
adc
mov
rcr
and
bound
lahf
in
lcall
icebp
jbe
push
stos
icebp
mov
out
ss
pop
cmp
cmp
lahf
inc
xor
pushf
lcall
repnz
xchg
push
mov
out
mov
sbb
adc
mov
lea
lods
shll
mov
fiaddl
mov
add
or
cs
or
push
jbe
inc
mov
xchg
fldt
mov
and
movsl
mov
pop
pusha
dec
mov
mov
push
scas
pop
mov
test
je
pop
sbb
mov
mov
test
icebp
jmp
loop
xchg
or
iret
les
fcomip
or
adc
cmp
cmp
adc
dec
bound
repnz
rcll
mov
push
lahf
ljmp
push
lret
pushf
mov
cli
add
pop
jae
clc
jae
jmp
into
pushl
adc
lds
push
movsb
and
adc
cs
inc
shll
inc
sti
cmp
mov
popf
xor
cmp
fdivs
sub
js
mov
insl
rol
out
into
imul
dec
fucom
movsl
in
enter
and
dec
push
jae
outsl
je
outsl
xchg
ret
adc
pop
mov
mov
hlt
mov
add
mov
pop
xchg
sbb
xchg
repnz
mov
xchg
xlat
test
fiaddl
mov
cmpb
sbb
mov
pop
lds
cmp
push
ret
xchg
cmp
aad
or
xor
xor
inc
or
loop
lahf
repz
mov
or
pop
xchg
dec
xor
xchg
jecxz
adcl
aaa
ret
push
repnz
sbb
mov
xchg
jnp
xor
movsb
neg
mov
mov
jns
pusha
lcall
push
and
stos
dec
adc
cmp
imul
cmp
mov
jnp
pop
pop
clc
mov
mov
out
mov
jle
dec
test
cmp
ret
mov
push
push
mov
ret
fwait
mov
cmp
cmp
notl
ja
imul
push
rcr
or
dec
loopne
lock
std
cmp
jne
jno
xchg
mov
fsts
or
and
xorb
add
xor
fildl
add
dec
ret
loope
into
insb
jnp
dec
pop
repz
subl
jb
lods
in
dec
cmpsl
jnp
scas
sti
dec
xor
popf
inc
mov
adcl
pop
ret
ljmp
fdivs
mov
stos
scas
jle
rclb
rcrb
mov
cmc
int3
xchg
jns
aad
lock
pop
xchg
int3
or
fdivr
loope
sbbl
mov
lret
and
js
xlat
push
ficompl
add
neg
pop
xorb
pushf
addr16
mov
and
data16
jno
mov
daa
imul
cmp
inc
sbb
and
and
inc
or
insb
jp
xchg
lods
and
jbe
pop
mov
jmp
jo
pop
mov
adc
fisttps
dec
mov
cwtl
in
clc
aas
cmpb
sbb
loopne
cmpb
clc
jg
sbb
bound
lea
fnsave
in
ror
add
cs
inc
popa
mov
cmpsb
and
insb
loop,pt
add
cmpsb
push
inc
dec
mov
pop
lret
mov
fwait
mov
push
mov
pop
call
data16
mov
pop
test
and
mov
fisubs
lahf
mov
ds
dec
inc
mull
and
cmp
repz
push
xor
jge
enter
mov
jmp
mov
repnz
cs
std
sub
out
adc
outsb
icebp
jo
lock
push
call
psubusw
cmp
hlt
fcomip
or
hlt
mov
sub
xchg
push
fstl
out
cmp
insl
arpl
je
cld
fimuls
data16
fbld
iret
scas
movsl
jnp
push
xchg
mov
xchg
adc
mov
aaa
jne
imul
pop
test
ret
loopne
xchg
pop
pop
cli
xchg
in
fdivrs
or
stc
sub
xchg
pusha
adc
and
cmp
and
sbb
pusha
shr
rcrb
mov
add
mov
in
fsubrl
xor
push
inc
sbb
or
jge
mov
notl
jne
jle
je
mov
push
mov
xchg
mov
fstl
jbe
cs
out
cli
outsb
push
popa
aas
aam
push
jp
mov
push
jl
fstl
insl
jmp
xchg
mov
xchg
adc
mov
inc
push
inc
lods
cmpsl
or
cmpsb
xlat
in
je
fstpl
lods
into
mov
test
mov
xor
pushf
mov
fcoms
pop
cmp
adc
test
inc
lods
popl
push
movsl
ljmp
ret
dec
fcom
mov
lret
add
leave
icebp
hlt
in
in
pusha
mov
test
bound
repz
mov
fnsave
sub
test
mull
jo
gs
pop
cmp
pop
imul
test
adc
cwtl
rclb
rcrl
mov
stos
fistl
mov
sahf
add
mov
push
sti
add
lods
mov
fsubl
test
pop
push
sub
xchg
inc
mov
xor
adcl
xchg
jo
les
cltd
dec
cmpsb
stos
stos
xchg
xlat
in
cmp
in
leave
lods
dec
cmc
fdivrs
jmp
mov
xchg
xchg
and
mov
ds
mov
jge
cmpl
imul
cmpsl
mov
sbb
cmp
les
ror
lods
push
inc
dec
movsb
fbld
cmc
roll
dec
mov
jmp
sbb
pop
std
pop
test
dec
mov
xor
mov
push
fcoms
jge
into
xor
push
aaa
sbb
mov
jge
mov
cmp
push
enter
cmp
mov
push
jmp
mov
mov
ret
push
mov
sbb
std
xchg
mov
jne
lret
std
mov
push
xchg
icebp
movsl
or
pop
aas
gs
lock
sbb
outsl
inc
cmp
xchg
int
das
push
hlt
and
sahf
xchg
jnp
adc
out
jo
sahf
test
push
push
faddl
xchg
dec
aaa
sbb
push
inc
pusha
sbb
push
dec
push
sbb
rcrb
jg
pop
repz
call
inc
sbbb
mov
aas
je
shrb
test
loop
shl
cmp
aam
sbb
add
rclb
pop
cmp
inc
jl
out
and
xor
mov
pop
jecxz
or
pop
push
lds
cli
push
out
fnclex
pop
aad
xchg
test
outsb
int3
cmp
icebp
stos
add
jb
in
or
and
cmp
push
lds
cltd
aaa
add
push
testl
cmc
cmp
inc
insb
and
stos
sub
sbb
cli
aas
xchg
or
pop
sub
jmp
add
sarl
push
mov
dec
jno
cmc
push
mov
pop
lods
cltd
rorb
or
jecxz
adc
cmp
repz
adc
or
leave
stos
sbb
pop
push
orl
sahf
mov
icebp
adc
sti
adc
lret
cli
add
cmp
mov
in
mov
push
test
mov
xchg
inc
pushf
out
mov
outsb
mov
push
sbb
ja
push
pop
push
test
mov
mov
enter
call
push
test
inc
mov
mov
xchg
jecxz
inc
cmp
xorl
xor
jmp
push
test
mov
inc
addb
push
adcl
lcall
les
inc
lods
fwait
cs
aas
pop
int3
pop
testb
jmp
xchg
rorb
and
jo
push
add
jno
mov
decb
jg
adc
cwtl
dec
mov
fimull
jno
push
fwait
sbb
xlat
push
mov
jmp
test
fistl
push
or
lock
jge,pt
or
loope
shll
push
iret
cmp
in
aaa
xchg
int3
movsl
sbb
shlb
sbb
adc
stc
dec
jecxz
pop
jl
rcll
and
dec
xchg
sbb
icebp
push
mov
orb
pop
in
adc
mov
in
sti
pop
jl
sbb
in
movsl
neg
sub
dec
add
les
or
cmp
push
mov
sub
dec
or
rcrb
jmp
mov
mov
pop
mov
ret
sub
inc
in
mov
jmp
mov
icebp
stos
and
loopne
adc
push
dec
or
daa
dec
lcall
cli
hlt
xor
sbb
ss
sub
enter
cwtl
mov
pop
sahf
sub
dec
add
push
mov
mov
stc
adc
imul
xchg
jle
mov
fnstenv
mov
fdivrp
ja
fildll
cwtl
or
push
fmuls
xchg
mov
lahf
adc
jp
mov
aam
sub
stos
xchg
outsl
inc
std
sti
mov
popa
sbb
xor
push
dec
mov
test
inc
inc
sbb
mov
shlb
ret
sub
or
outsl
mov
inc
lds
sarb
das
rcr
pusha
test
push
add
dec
jbe
aad
mov
cmp
sbb
int3
mov
dec
sti
sub
repnz
push
lds
sti
popf
into
mov
out
xchg
addr16
aaa
stc
lcall
pop
push
cwtl
cmc
add
std
jecxz
aam
pushf
sbb
mov
bswap
and
enter
mov
out
mov
inc
lea
movsl
jg
sbb
xchg
push
pop
jne
and
jp
add
dec
fidivl
sub
push
and
mov
push
cs
push
inc
xor
stc
icebp
stos
bound
push
cmc
test
aas
dec
pop
xchg
push
mov
aas
push
mov
jle
adc
insl
jmp
mov
xor
mov
loope
shlb
test
adc
cmc
in
std
mov
mov
jmp
incb
xchg
sub
jns
sbb
cli
add
push
xor
add
aas
xchg
aam
cmpsl
jp
push
outsl
jmp
mov
fs
lods
adc
addl
push
movsb
push
les
mov
cmpsl
das
push
pop
mov
fs
sbb
inc
mov
and
movsb
dec
jmp
jge
cmp
shrb
sbb
or
cmp
lret
push
mulb
dec
das
inc
mov
je
sub
pop
mov
inc
pop
mov
outsb
rol
mov
fmull
push
push
stc
icebp
fnsave
std
fmul
xchg
lret
cwtl
mov
lds
inc
es
lods
hlt
mov
jmp
push
push
rcll
or
xchg
pop
push
idivl
mov
fsubrs
into
inc
dec
lock
xchg
push
mov
xchg
cmp
jecxz
jno
mov
push
mov
adc
ret
fnstenv
roll
cltd
testb
push
test
bound
sti
inc
scas
out
in
mov
xchg
lods
fimull
movsb
in
lret
push
sub
xor
js
lea
into
adc
add
xchg
jno
adc
cmpsb
mov
cltd
mov
pop
xchg
sbb
lds
daa
imul
call
mov
outsb
jg
ret
nop
iret
movsb
dec
adc
xchg
jo
idiv
insl
mov
add
fcmovne
in
mov
or
repz
data16
pop
dec
xor
divb
pop
aas
jecxz
subl
xchg
mov
sti
lret
fstpt
xchg
inc
pop
adc
mov
bnd
adc
aas
add
mov
fwait
adc
mov
adc
push
lcall
andb
imul
and
aaa
mov
add
out
jmp
or
scas
push
fcmovne
and
insb
ret
mov
call
sbb
mov
xor
ret
add
in
inc
mov
aad
mov
lods
push
adc
push
sahf
scas
push
jl
movsb
fstpt
icebp
jne
cs
sar
dec
std
mov
sub
mov
push
int3
in
mov
ja
pushf
movsb
xlat
pop
loop
fadd
insb
pop
add
popf
imul
cld
or
stos
mov
stos
sbb
sub
adc
and
adc
sti
push
or
or
ret
popf
mov
sbb
fisttpl
inc
ja
insb
jne
fnsave
dec
fstpt
out
cmpsl
xor
sub
mov
push
push
cli
cmc
push
addr16
adcb
inc
scas
jno
pop
inc
mov
lret
fstpl
aaa
xchg
cmp
jg
or
shlb
push
scas
or
movsl
push
leave
mov
sbb
lret
stos
mov
nop
jp
jbe
lret
ds
push
sub
int
pop
xlat
sbb
out
dec
or
add
jae
push
jns
imulb
sbb
js
add
mov
xchg
mov
aam
cmp
dec
xor
ja
ss
andl
orb
repnz
icebp
jg
inc
jge
cs
scas
and
lret
fiadds
loopne
pop
mul
inc
dec
and
sti
xor
daa
inc
aaa
dec
mov
pop
les
lods
xchg
push
mov
pop
decl
dec
ficoml
mov
fcoms
add
or
pmulhuw
int
test
adc
dec
aad
ret
dec
stos
xchg
inc
jae
das
mov
mov
push
shlb
cltd
ret
push
mov
lcall
mov
into
sti
mov
jne
fsubr
cmp
or
pop
mov
stos
int3
sbb
xlat
imul
pop
cmp
ja
mov
fs
stos
int3
rol
cltd
xchg
ss
pushf
andb
dec
sub
dec
bound
xchg
jge
inc
sbb
aad
add
cmp
rep
roll
jmp
or
aad
dec
repz
arpl
xor
cmpsl
jmp
sub
mov
outsl
in
sbb
jnp
outsb
sub
jmp
xchg
dec
rolb
xchg
ret
xor
js
cmp
stos
lods
add
pop
mov
cmp
adc
enter
mov
mov
aaa
mov
movsb
xchg
scas
das
mov
test
pushf
in
push
nop
std
or
ret
repnz
xor
movsl
xchg
push
cmp
sbb
add
mov
int3
lods
repz
sahf
movsl
jno
cltd
xor
clc
pop
aaa
into
mov
scas
dec
pop
or
push
into
mov
js
fistpl
and
fucomp
push
mov
cmp
pop
adc
in
outsb
cld
xchg
jge
adc
mov
incl
jmp
pop
sbb
push
push
pop
in
pop
rol
jp
cld
push
cmpsl
inc
pop
stos
jnp
mov
push
and
insb
xor
dec
into
cmpl
test
adc
andb
sub
mov
jl
stc
ljmp
dec
js
and
es
push
mov
lcall
sti
test
ret
cld
lods
cmpsb
xchg
mov
xor
aaa
into
xor
aaa
sbb
fistpll
imul
mov
sbb
popa
xchg
sahf
cwtl
in
roll
pusha
xchg
pop
test
add
adc
gs
push
in
mov
pushf
test
or
cmc
je
repz
das
popa
push
in
dec
jnp
rcrb
cli
sbb
dec
push
jbe
mov
test
lock
adc
jecxz
pushf
mov
cmp
clc
cld
test
mov
xor
pop
mov
push
add
mov
out
daa
and
mov
aam
or
dec
stc
sbb
in
push
jl
lea
ds
adc
xchg
es
fsubr
inc
insb
jmp
f2xm1
cs
jne
inc
or
addr16
or
adc
add
out
inc
andb
mov
mov
adc
xchg
jge
adc
js
lret
jbe
aad
xchg
aaa
test
mov
mov
imul
inc
and
or
fstps
and
test
adc
cli
mov
gs
sbb
push
sahf
ret
out
mov
push
ret
mov
add
bound
addr16
mov
sub
idiv
pop
adc
filds
cmp
adc
adc
push
mov
xchg
push
mov
fildll
xor
insl
push
mov
aam
adc
xchg
mov
ljmp
in
jbe
mov
out
pop
addr16
inc
inc
daa
js
decb
sub
add
ret
testb
lods
xchg
cmp
adc
imul
push
xor
cmp
mov
or
xchg
sbb
scas
jns
pop
insl
jg
popa
ret
sbb
loope
int
ja
pop
xor
xor
lret
jecxz
ret
pop
adc
mov
cltd
or
and
rolb
mov
cltd
dec
popf
add
iret
lods
cmp
cmpsl
jb
adc
jmp
mov
dec
cmp
jo
fisubs
pop
ja
and
lahf
and
pop
inc
jl
fcmovnu
in
dec
xor
setne
fwait
ret
adc
mov
sbb
arpl
mov
cmp
in
rorl
dec
mov
or
and
mov
into
cmp
add
pop
sbb
adc
sbb
mov
out
sub
out
lahf
stc
mov
cltd
push
push
mull
push
in
cld
hlt
gs
roll
test
push
into
inc
sti
lret
mov
jp
xchg
imul
xor
repz
fsts
mov
inc
nop
lcall
out
sbb
cmpsl
sbb
mov
pop
pushf
fs
sub
repnz
lock
cld
aam
notl
fwait
push
out
cmc
imul
hlt
lret
sbb
fmul
mov
add
push
call
rcr
sub
daa
out
scas
std
hlt
add
xchg
adc
xchg
cmp
sbb
lock
or
test
fwait
mov
lds
dec
icebp
cs
mov
out
fcoms
scas
lret
ljmp
nop
xchg
push
dec
fadds
mov
add
dec
push
cmp
and
dec
leave
and
test
or
xor
mov
pop
das
and
ja
lea
stc
out
rcll
daa
mov
call
add
movsb
fs
adc
mov
xor
mov
enter
add
pusha
imul
and
out
ret
sbb
and
push
imul
inc
adc
outsl
inc
pop
push
jnp
lret
pop
loop
out
outsl
iret
in
sarl
and
sahf
mov
sub
mov
fldlg2
pop
push
sub
sbb
adc
push
adc
push
xchg
push
push
inc
and
shll
sub
pop
xorl
popa
nopl
sbb
sub
aaa
push
jns
fcomps
lock
or
rclb
int3
cmc
mov
and
dec
xor
jl
and
adc
inc
xchg
sbb
jb
fyl2xp1
add
popf
mov
gs
in
insb
lcall
lods
xchg
cli
adc
add
ja
nop
cmp
aad
fwait
dec
cmpsb
push
push
or
pop
mov
lds
movsl
or
xchg
and
mov
fsubrp
lcall
xor
cmp
cld
mov
scas
inc
xor
cltd
mov
movsl
inc
in
and
xchg
sub
adc
neg
xchg
shr
sub
stos
cmp
stos
jmp
xor
adc
sub
xchg
int
mov
sbb
xchg
testb
xor
cmpsl
mov
rcrb
iret
shrl
mov
cmpsb
into
mov
xchg
cmc
add
push
push
xor
pop
push
dec
lret
into
dec
cmc
je
stc
pop
mov
sarl
out
daa
shll
xor
je
add
sbb
mov
lods
and
addr16
loop
mov
inc
jo
cltd
iret
and
sub
xchg
dec
sub
hlt
insl
int3
pop
xor
inc
rol
test
push
fstps
pop
mov
push
in
and
nop
mov
push
sahf
mov
sbb
imul
mov
leave
push
pop
loopne
dec
nop
bound
int3
xlat
daa
imul
cs
mov
or
pop
sub
push
insl
mov
roll
mov
push
jae
andl
daa
aaa
negl
clc
rorb
inc
std
jg
inc
push
or
push
pop
pushf
adc
lock
dec
mov
out
dec
jp
icebp
bswap
sbb
cmpsb
mov
bound
test
pop
ficomps
fwait
aam
jne
add
pop
or
insb
mov
imul
and
dec
jne
jbe
fwait
into
pop
setp
or
xchg
pushf
pop
push
and
pushf
fmuls
ljmp
adc
mov
cli
scas
lcall
insb
lds
mov
sarl
mov
rorb
cmc
jne
sahf
mov
inc
adc
insl
mov
mov
aaa
jge
sub
gs
push
stos
insb
aam
scas
imul
push
and
add
dec
push
adc
ficoms
cmp
popa
push
cltd
cmp
mov
sbb
sub
add
push
mov
xchg
add
adc
fsts
pop
sub
pop
mov
leave
sbb
sahf
leave
addl
shlb
and
mov
in
cmp
ljmp
mov
imul
mov
jbe
mov
mov
in
mov
fdivl
insb
mov
push
leave
iret
sahf
mov
roll
sbb
sub
repnz
pop
in
ljmp
sbb
aad
out
das
icebp
mov
lods
mov
add
mov
add
test
insl
outsb
idiv
lods
xchg
div
mov
in
sub
testb
dec
xchg
imul
pop
mov
int
pusha
xlat
xor
movsl
sub
lret
mov
add
jnp
push
push
subb
sbb
clc
push
push
fadd
push
insl
sbb
scas
push
pop
cmp
lock
adc
xchg
fwait
shlb
test
cli
pop
or
and
nop
mov
xchg
mov
xchg
jbe
leave
mov
jne
sahf
xchg
pop
and
mov
xchg
or
inc
stc
sub
or
ja
and
xor
add
sub
scas
scas
pop
and
fcmovb
cwtl
test
movsb
repz
sbb
mov
add
out
add
pop
adc
in
mov
in
in
mov
xor
inc
fs
xchg
push
in
mov
push
daa
push
fimull
xor
sub
test
insb
adc
out
dec
jl
cmp
lahf
hlt
fdivrs
lret
push
movsb
cmp
cmp
js
push
adc
je
adc
addr16
xchg
and
adc
out
cmp
mov
out
push
push
and
jecxz
push
lcall
cmp
xor
mov
push
pop
sbbb
sbb
fs
add
pop
dec
adc
lods
data16
shrb
inc
inc
adc
in
ds
int
jmp
pop
push
xor
jae
iret
jae
dec
imul
sub
pop
sub
xchg
mov
push
ret
into
jp
xchg
xor
push
data16
cmpsb
lret
sbb
dec
je
pushf
xchg
mov
clc
mov
xor
or
jg
in
jnp
jmp
add
cmc
pop
jecxz
jno
shll
sbb
outsl
stos
add
je
add
repz
jno
inc
xor
cmp
push
das
sub
jb
adc
cs
add
push
cmp
test
push
cmp
mov
imul
xchg
and
scas
and
daa
outsb
mov
icebp
dec
jg
lods
cmp
xchg
mov
mov
gs
mov
imul
mov
dec
pop
dec
or
dec
out
das
mov
adc
or
fimuls
fwait
xor
mov
popf
push
push
cmp
xor
imul
mov
xor
aad
sub
inc
pop
add
push
cwtl
sahf
mov
cmc
xchg
jno
mov
test
mov
push
shl
inc
inc
int
iret
fmuls
xor
ret
lods
mov
or
jl
add
sbb
fiadds
and
and
push
xchg
int
lahf
pop
mov
divb
mov
aas
pop
xchg
mov
push
or
ret
inc
xchg
dec
int
movsb
adc
loopne
notl
xor
mov
out
dec
loope
cld
sub
out
stos
sahf
ja
sub
fwait
jle
fstl
jecxz
fisubl
clc
push
rcrl
pushf
push
sbb
lock
jmp
adc
sbb
sub
fists
jb
add
push
in
ds
scas
push
cmp
fimuls
lret
sbb
in
add
outsb
or
mov
icebp
out
xor
hlt
montmul
cmpsb
add
mov
xchg
xchg
xchg
xchg
xor
lods
in
inc
leave
jp
jecxz
clc
push
jo
fcoms
cmp
scas
lods
shlb
insl
dec
mov
insl
jns
sub
scas
pusha
cltd
xchg
add
push
fdivrl
push
cmpb
cltd
jp
jnp
jae
arpl
jns
jg
in
pop
lds
mov
sti
and
es
jnp
add
xor
ret
out
pop
xchg
fisubrl
mov
add
push
insl
mov
lea
nop
test
cmc
jnp
xchg
jge
cli
adc
and
lods
mov
rol
jno
lcall
and
pop
pusha
test
push
mov
sbb
int
je
outsl
jbe
lods
mov
xchg
js
fdivrs
js
inc
pop
gs
mov
xchg
lret
into
sub
aas
push
jle
dec
inc
or
xchg
pop
dec
push
enter
sub
hlt
pop
and
mov
and
cmp
fsubrs
mov
xor
scas
mov
ds
push
lods
lea
jo
xor
mov
cli
ficoms
insb
in
cmp
lcall
inc
imul
call
sysexit
test
ret
add
int3
jno
cmpl
xchg
lcall
lret
pop
push
or
or
lods
jb
add
xchg
xchg
or
pop
xchg
adc
fdivr
ss
dec
and
jmp
fwait
sub
sub
dec
repz
mov
les
dec
add
leave
fwait
xor
int3
xchg
hlt
cmp
pop
push
sub
jl
mov
or
mov
mov
sbb
dec
nop
pop
sbb
jo
fstpl
jmp
ret
inc
dec
cmp
push
hlt
or
inc
lods
stos
sbb
add
push
push
test
test
inc
lea
push
sbb
ljmp
push
stos
bound
cwtl
ja
inc
sbb
mov
dec
int3
sub
out
fcomi
sbb
jmp
pop
xor
push
lcall
push
cmp
ljmp
aas
icebp
fsubrl
shl
call
push
jns
xor
test
rorb
and
testb
add
add
movsb
and
sub
mov
mov
aaa
add
dec
stos
sub
ret
add
xchg
loope
out
xchg
cmc
mov
add
xchg
dec
or
lock
xchg
rorb
into
enter
or
daa
pop
ss
xor
xorb
jmp
cs
cmpsl
ds
and
cmp
mov
and
push
mov
fcoms
aas
push
mov
nop
cld
imul
bound
xchg
and
in
shlb
ljmp
out
or
repz
enter
xchg
xchg
jl
daa
aad
aas
sub
or
jle
data16
push
scas
enter
push
leave
jno
fsubrs
mov
sarl
mov
push
fbld
scas
leave
lcall
mov
or
push
mov
and
insb
cld
in
xor
add
push
cwtl
jge
sub
lahf
xchg
fistl
or
out
insl
call
lock
push
sbb
ljmp
dec
nop
mov
pop
jno
adc
stos
les
sub
cwtl
xchg
inc
add
nop
sbb
adc
mov
ficomps
jno
lret
lods
mov
loop
mov
or
ja
clc
jg
adc
push
sbb
xor
xchg
jp
adc
ret
add
inc
adc
stos
mov
push
fldcw
mov
jo
inc
lret
mov
imul
in
ljmp
rcl
mov
mov
xor
xlat
in
pop
mov
xchg
out
jle
inc
leave
ret
insl
inc
mov
add
mov
popa
xor
mov
fs
xchg
sub
xchg
xor
jne
sbb
js
pusha
jno
jecxz
loopne
adc
mov
in
mov
lret
xlat
push
out
inc
lret
cmp
loopne
outsl
dec
in
sub
incb
addl
sti
hlt
cmp
outsl
dec
mov
sbb
data16
adc
inc
xchg
cltd
add
pop
call
lcall
mov
and
sbb
dec
push
mov
jle
shrb
mov
rol
insb
enter
shl
xchg
nop
mov
xchg
pop
fimuls
jnp
fwait
lahf
hlt
popa
xchg
loop
outsb
add
sub
or
call
pop
mov
data16
xlat
cwtl
push
adc
gs
testb
pushf
or
lahf
inc
repz
fisubrs
cmp
pop
mov
ret
xchg
int
pop
cltd
daa
sahf
rorl
xlat
hlt
add
fidivrl
ljmp
enter
or
insb
sbb
pop
push
clc
mov
mov
mov
sbb
sbb
dec
xor
test
pop
rdtsc
fdivrl
test
cmp
test
jge
inc
popf
fstpl
sbbl
xor
xor
fsubrl
push
fmul
daa
aas
call
clc
push
enter
or
jecxz
lea
aam
cmp
inc
mov
sysret
ret
addr16
je
in
jp
popa
jp
xchg
inc
in
stc
jmp
cs
addl
stc
test
pusha
and
adc
xchg
pop
mov
lods
xor
imulb
clc
xor
sub
loopne
sbbl
insb
leave
sti
leave
jge
hlt
arpl
movsb
pop
sbb
sub
aaa
test
xchg
sub
or
mulb
lcall
cltd
or
xor
icebp
mov
fcoms
fadd
xor
subb
imul
push
or
in
or
sbb
outsl
and
mov
into
jg
out
inc
xor
push
insb
sub
insb
insb
dec
push
popa
adc
sbb
and
mov
ss
out
lods
cmp
or
out
inc
rcrl
lret
sbb
les
icebp
adc
mov
imul
shll
mov
inc
mov
pop
or
sbb
scas
lret
hlt
je
mov
rcll
dec
popa
enter
insb
cs
popa
mov
inc
push
sub
or
xchg
cltd
mov
or
popa
insb
jp
mov
and
and
pop
sbb
ja
ret
cmp
sub
stos
dec
or
lret
sti
cs
jl
pushf
addr16
xchg
dec
push
divb
mov
fnstenv
dec
inc
lcall
mov
stc
loope
lahf
cmp
in
sbb
fstpl
and
push
jno
cld
repz
xor
insl
sbb
sub
popfw
int
lods
cmp
mov
js
loopne
lret
push
xor
hlt
pop
sti
fiaddl
call
push
jge
in
sarb
dec
cltd
test
and
mov
mov
sub
rolb
push
pop
inc
lods
and
fstps
cmp
xor
and
or
outsl
jnp
inc
dec
fadd
aaa
sbb
jne
aam
lods
xor
std
loopne
xlat
adc
cmp
mov
aaa
jns
pop
adc
shrb
or
dec
imul
sub
stos
pop
lret
repz
pop
cmp
jo
jns
pushl
push
shll
int
and
aad
pushf
jbe
ret
cmp
mov
data16
loope
adc
add
push
mov
xlat
lds
clc
aas
ficoml
mov
mov
mov
pushf
pop
pop
pushf
in
lock
dec
mov
inc
xchg
call
sub
aam
mov
jge
in
cmp
fdivr
shll
sbb
ret
mov
enter
mov
mov
dec
aad
or
nop
add
dec
cmpsb
or
imul
jg
or
imul
push
pop
cwtl
bound
bound
push
push
lds
js
jmp
xor
cld
pmuludq
inc
xchg
movsl
xlat
mov
lret
cmp
loope
xorl
aaa
test
sti
test
mov
xor
aad
test
push
js
scas
sbbb
in
bound
scas
dec
cmc
mov
xor
repz
dec
inc
repnz
push
movsl
xor
pop
dec
xor
mov
jmp
push
add
outsl
cmp
ret
cmp
add
push
shlb
xchg
sbb
das
xchg
jae
fsubs
fldl
jb
insl
sbb
gs
sub
dec
call
mov
mov
mov
cltd
mov
sub
loope
pushf
cli
mov
push
pusha
add
pop
ffreep
and
addb
xlat
ja
mov
pushf
int3
adc
dec
les
dec
xchg
or
add
dec
in
pop
jge
mov
icebp
push
dec
cwtl
stos
xor
cltd
outsb
into
push
ret
add
loope
cmp
aad
enter
push
and
outsl
pop
insl
sbb
imul
insb
add
jp
push
fldl
push
sub
out
push
rcrb
lods
imulb
adc
loope
mov
inc
add
xor
xchg
sbb
dec
adc
hlt
fsts
sbb
sub
inc
or
insb
lcall
push
imul
lock
xor
jmp
sub
stos
push
adc
jnp
or
dec
out
int3
mov
push
mov
and
lcall
dec
cmp
out
push
rolb
divb
in
mov
jo
enter
mov
push
xchg
inc
and
pop
cmp
addr16
push
inc
movsb
and
decb
mov
xchg
and
ret
push
lea
ret
mov
bound
std
das
mov
pop
inc
mov
ret
dec
loope
add
sbb
push
push
xchg
push
xor
in
scas
pop
sub
pusha
sbb
mov
and
cltd
xlat
adc
testb
xor
jo
ljmp
out
adc
cld
icebp
fdivl
mov
mov
stos
sbb
scas
mov
push
movsl
repnz
dec
bound
push
test
sbb
jp
movsb
fisubs
test
dec
inc
jb
into
pop
subb
test
jge
leave
pop
jbe
and
mov
insl
cmpsl
dec
mov
pop
mov
scas
push
aad
shrb
jae
lcall
daa
in
fs
incl
push
das
das
das
jb
adc
test
lcall
hlt
push
inc
leave
popa
jbe
xchg
stc
jl
mov
aas
data16
mov
xor
rcrl
ja
sbb
xchg
bound
int
loope
add
ljmp
not
mov
insl
xchg
xchg
pop
xchg
jp
out
cli
les
pop
xor
fnstsw
out
es
jno
or
dec
mov
insb
mov
lret
xorl
cmp
arpl
push
push
test
cmp
adc
push
dec
add
lods
cltd
scas
ldmxcsr
and
pop
cs
outsl
out
sub
cld
sub
lret
test
pop
push
and
push
pop
out
push
repnz
ss
dec
push
push
dec
sub
jmp
push
std
js
addr16
jnp
push
jno
xchg
cmpsl
sub
repnz
jb
adc
push
xlat
loop
pop
sbbb
mov
in
inc
mov
and
mov
cs
add
insb
pop
jns
hlt
mov
ret
pop
add
stos
xchg
xor
dec
imul
enter
pop
xor
inc
add
outsl
xor
mov
inc
pop
fcomp
inc
in
mov
sbb
popf
cmp
in
sub
lods
orb
mov
ret
lods
sbb
xor
clc
cmovo
stc
pop
stc
jg
xchg
dec
add
in
insb
fcmovnb
mov
aaa
adc
xor
outsl
enter
cmp
xchg
cmp
in
insb
sub
bound
pop
mov
mov
mov
cmc
leave
js
loope
jmp
mov
dec
inc
add
mov
ss
sti
out
inc
mov
stos
and
andl
fcom
add
pop
sbb
loope
inc
mov
sub
mov
sti
inc
add
aas
fmuls
fnstenv
lock
or
stos
aaa
aaa
push
in
xchg
lds
sub
lret
ss
add
lock
push
xchg
and
sbb
push
jb
xchg
xlat
mov
addr16
outsb
scas
cmp
lahf
sahf
sbb
mov
aas
jp
dec
std
jl
add
mov
mov
sbb
js
fnstsw
cvtpi2ps
mov
callw
xchg
pop
xorb
je
outsl
and
dec
pop
movsb
rorl
loopne
cmp
jp
or
mov
xchg
mov
cmp
pop
dec
mov
pusha
nop
and
sub
lea
jmp
lahf
out
xchg
in
mov
jae
jle
or
loope
cs
pusha
roll
pop
lret
mov
rcr
pop
outsb
jnp
popa
addr16
cmp
pop
mov
fstpt
mov
adc
dec
cmp
dec
mov
lret
imul
mov
andl
movsb
sbb
mov
loop
jg
pop
dec
jecxz
fprem
stc
pop
push
mov
mov
jle
cmp
sbb
cmp
cmp
cmp
je
push
dec
ljmp
adc
in
sbb
cmpb
les
pop
out
push
shl
xor
in
popa
dec
ja
sbbl
dec
fs
cmp
aad
mov
xor
push
rcr
in
inc
adc
fcompl
cmp
xor
mov
fsubrl
mov
or
pop
adc
test
dec
popa
cld
push
cmpsl
pop
and
xor
xchg
subl
or
cmp
or
pop
cmc
es
sub
lods
pop
ja
jne
xor
mov
lods
xlat
stos
xchg
mov
ds
test
sbb
movsb
in
inc
fwait
jb
inc
xor
jbe
sub
sbb
jae
filds
adc
aaa
cmp
pop
mov
pop
and
mov
cmp
adc
out
and
js
or
add
dec
pop
ret
int
movsl
push
or
popf
dec
stos
add
rorb
or
xor
mov
fwait
inc
or
add
push
daa
mov
imull
jae
dec
mov
repnz
mov
insl
sub
push
sub
pop
out
xchg
jp
sbb
pop
jne
cmpsl
ja
mul
dec
xor
pop
into
sahf
mov
lods
push
ficomps
les
jl
push
cli
mov
popf
or
sbb
add
sub
xlat
sbb
sub
clc
jmp
cli
cmp
cli
cmp
hlt
imul
imul
push
inc
bnd
daa
mov
mov
xchg
pop
fs
cltd
sbb
xor
mov
aas
cmp
sub
inc
dec
mov
aaa
cwtl
fsubrl
into
dec
xor
leave
sti
repnz
sbbb
xor
dec
sahf
add
mov
icebp
xchg
push
lods
pop
or
jp
jo
sahf
mov
mov
jbe
test
cmpsb
shlb
lock
add
gs
js
bndldx
adcl
push
imul
inc
cli
jmp
ret
mov
sub
add
jecxz
aas
xchg
inc
je
sbb
inc
jmp
test
aam
push
lock
xor
out
aad
and
sub
leave
cmpsl
sbb
lret
or
out
xor
or
jle
push
dec
sbbb
fsts
sbb
ss
shr
sub
std
jnp
cwtl
cmp
ja
jle
push
pop
xor
dec
mov
bsf
jne
xchg
push
and
xor
out
mov
fstl
bound
test
adc
pusha
iret
rclb
or
sbb
stos
outsl
mov
sbb
insl
mov
arpl
loop
inc
add
fstpt
and
adc
jle
push
xor
push
jbe
push
fs
mov
leave
dec
leave
pinsrw
inc
fildl
gs
test
test
scas
pop
cmp
mov
inc
repnz
push
adc
dec
movl
mov
mov
mov
xor
lods
pop
mov
push
adc
mov
mov
adcl
ja
cmp
test
imul
out
mov
idivb
jb
lea
jl
sub
jecxz
adc
lds
popa
xchg
outsl
mov
jne
leave
mov
sbb
int3
mov
stos
iret
add
les
push
popa
xchg
lcall
jne
hlt
xchg
xchg
or
lock
mov
and
cmp
push
adc
or
add
mov
cmp
and
je
push
adc
mov
movsb
idivb
jbe
les
sub
cld
xor
or
jecxz
out
mov
dec
dec
cmp
test
sahf
int
cmc
ja
xor
dec
mov
adc
js
loop
pop
decl
xchg
call
cmp
cld
pop
fdivs
cmpl
mov
push
mov
cltd
enter
enter
cld
out
outsl
push
dec
or
je
aam
and
xchg
repnz
daa
adc
add
ret
xorb
mov
lea
push
sub
jbe
jo
mov
aam
fisubrs
movsb
dec
popa
push
cli
or
xor
and
cmp
sahf
into
fsubs
xchg
fiaddl
add
inc
lret
aas
cmpsl
repnz
andl
rcrl
sbb
xchg
stos
pop
arpl
jecxz
inc
inc
mov
loope
ljmp
ja
add
icebp
addr16
out
test
jp
les
push
add
repz
stos
push
shrb
outsl
ss
xor
mov
pop
pop
xor
xlat
std
and
pop
out
aas
push
sub
es
dec
add
js
ss
jle
ss
and
aaa
inc
leave
or
cwtl
sahf
adc
jmp
movsl
aad
jne
xor
movsb
cltd
inc
inc
xlat
hlt
cltd
cmpsl
push
clc
je
pop
in
xor
pop
sbb
cmp
adc
test
test
test
out
cmpsb
fdiv
dec
cmp
into
push
loopne
jecxz
sbb
test
and
in
sub
mov
mov
cltd
in
xor
arpl
dec
loopne
mov
mov
add
div
in
loop
mov
ss
outsb
call
ss
popa
jge
int3
jmp
pop
loop
xchg
out
sbb
cmp
movsb
pushf
iret
pop
lcall
call
add
mov
cmovle
pop
mov
into
dec
dec
push
xchg
lods
mov
xchg
add
add
xor
bound
icebp
fldenv
mov
test
sub
out
int3
popa
jb
test
and
push
jl
sbb
jno
fisttpl
mov
lods
dec
xchg
mov
or
ljmp
repz
addl
jg
hlt
sub
mov
ja
sahf
dec
mov
or
or
je
and
pop
or
add
inc
fcomps
pop
add
in
ficomps
pop
sarl
popf
lock
or
jmp
and
and
xchg
mov
sub
pop
sub
add
jb
daa
fcmovnu
sub
popa
pcmpeqb
push
mov
mov
dec
mov
jb
repz
cmp
shll
push
ja
cmp
aad
daa
fmull
mov
sbb
mov
cmpb
jp
push
fwait
inc
mov
lcall
add
hlt
mov
pop
push
out
movsl
sbb
pop
popa
dec
enter
cltd
mov
jne
xchg
xor
gs
test
insl
scas
sub
aas
add
mov
sub
fldt
xchg
cltd
mov
stc
xchg
cmp
dec
pop
mov
mov
inc
lods
icebp
ljmp
aas
dec
rorb
lret
or
add
imul
test
xchg
pop
jle
add
imul
add
or
dec
xlat
cmp
mov
jecxz
xor
sbb
dec
pop
aas
bound
sbb
xor
mov
fs
out
icebp
dec
subb
push
cs
dec
fimuls
inc
sub
shlb
dec
adcb
ret
rcl
fildll
outsl
insb
sub
cli
inc
in
jnp
mov
jle
ja
mul
ret
fs
push
je
shll
pop
pop
int3
adc
loop
repz
push
insl
movsb
aas
mov
divl
inc
push
or
pop
and
inc
and
mov
negb
mov
inc
call
nop
loopne
jne
cmovle
dec
and
das
xchg
inc
scas
adc
pop
jo
xor
mov
xor
orl
mov
scas
es
mov
mov
fldenv
xor
xor
push
push
inc
imul
jnp
jg
push
add
fildl
filds
xor
inc
lret
loop
inc
fdivrp
aas
js
fisttpll
push
ret
add
xchg
mov
stc
jns
shll
test
sbb
inc
mov
cmp
xchg
sarb
and
popl
lods
insb
pop
xor
test
jo
adc
push
cmp
outsb
leave
xor
add
dec
push
and
mov
jns
and
movsb
push
movlhps
lahf
jbe
xchg
lret
dec
jmp
rcl
aad
push
mov
out
jne
shlb
xor
je
divb
lods
jg
adcb
sub
mov
out
jp
push
cli
cmp
cmp
ret
push
xchg
jl
call
stc
inc
lock
fbld
mov
pop
inc
data16
cs
add
pop
mov
dec
nop
cmp
int
scas
fxch
dec
ret
jbe
push
mov
mov
cmp
roll
add
std
pop
add
ficoml
xor
es
xor
icebp
icebp
xor
push
or
lcall
pushf
cmc
sarb
cmp
mov
push
lahf
push
dec
sub
int3
jae
jo
cmpsb
scas
lea
cli
enter
leave
adc
movsl
inc
aam
inc
and
jecxz
lret
arpl
dec
repz
lea
push
pusha
jae
movsb
mov
mov
fidivs
sbb
jle
aam
testb
jge
xchg
jmp
fsub
sub
ja
call
inc
jmp
mov
roll
test
fimuls
dec
pop
adc
or
push
mov
enter
popa
or
push
sbb
adc
adc
xchg
or
cmp
xchg
jns
and
sbb
or
lods
fcoml
insb
sarl
cmc
scas
lea
sub
xchg
mov
sbb
fwait
sti
inc
xchg
inc
add
sub
or
xor
cmp
sbb
pop
imul
enter
mov
test
loop
xchg
pop
xor
or
inc
ss
bound
mov
dec
mov
push
cmpb
popa
sub
and
pop
sbb
popf
push
lcall
daa
xchg
es
inc
push
push
adc
aad
enter
sahf
inc
xchg
in
ficoms
xor
mov
popa
fidivrl
jno
mov
sahf
daa
jns
push
in
orb
imul
xor
repnz
popa
push
es
mov
inc
mov
sbb
out
popa
in
pop
jbe
repnz
and
call
jl
adc
add
outsb
call
jns
clc
cmc
xchg
jbe
arpl
mov
xor
xchg
xor
ds
jnp
cmc
cmp
inc
adc
xor
stos
aam
mov
bound
cmp
or
cwtl
and
fs
push
lcall
dec
xor
lret
push
mov
cld
push
push
arpl
lods
out
xchg
stos
fdivrs
fisubrl
push
out
jae
mov
int3
lock
xchg
dec
icebp
dec
mov
pop
sbb
sti
xchg
push
sbb
ds
adc
xchg
sahf
fcomps
pushl
inc
adc
push
jo
clc
mov
mov
jbe
adc
sti
dec
cld
mov
pop
lods
mov
pop
pop
jne
mov
movsb
lcall
pop
loop
add
add
ljmp
cmp
fsub
in
ret
insb
inc
mov
push
in
jns
sub
stos
sub
add
and
out
es
inc
mov
lods
lret
mov
jmp
insl
rol
adc
lock
ret
jb
cltd
mov
shlb
or
bound
js
inc
fcmove
insl
in
cmpsb
cli
pop
loop
mov
js
mov
mov
cltd
and
sub
nop
mov
xchg
sbb
or
js
xchg
jg
lea
test
push
sub
andl
push
mov
sub
add
inc
push
ds
jle
mov
jnp
mov
pop
mov
in
jbe
iret
enter
mov
test
leave
or
cmp
ds
adc
pop
add
out
lods
cwtl
int
stos
inc
add
dec
or
cld
sbb
jecxz
mov
jb
sub
pop
inc
inc
inc
push
nop
jae
mov
test
loope
dec
xlat
data16
into
fistl
xchg
adc
push
xor
movsb
fstpl
insl
stc
mov
cwtl
pushl
test
dec
xchg
nop
leave
add
les
cmpsb
xchg
and
dec
xor
pushl
popf
out
push
adc
fidivrs
and
int3
mov
flds
cmp
sarb
jne
pop
or
xchg
sbb
lods
jmp
in
in
adc
or
dec
xchg
fucomip
push
ja
xor
shll
sub
in
cmp
les
pop
sbb
imul
pop
ficoms
jl
stos
out
or
and
iret
cs
adc
adc
sub
mov
cwtl
scas
cmpsb
mov
or
jns
roll
pop
addr16
or
xchg
fstpl
or
add
sar
loope
lahf
cs
pusha
sarb
push
adc
addr16
mov
stc
aam
lret
out
or
dec
mov
dec
popf
sbb
addr16
mov
shll
jmp
in
jmp
popa
outsl
jnp
pop
aad
xchg
add
jg
push
cmpsl
jb
cld
loopne
subl
data16
inc
cmp
daa
pop
cmp
andl
out
fdiv
mov
popf
ss
dec
pop
lock
push
js
push
ror
add
lret
js
adc
inc
and
mov
scas
add
pop
notb
push
xchg
fidivrl
mov
insb
aam
dec
push
xchg
mov
xchg
add
mov
std
mov
cs
jle
lock
in
stc
xchg
and
inc
jl,pn
lods
adc
roll
lcall
iret
int
ret
xor
sbbb
inc
push
jnp
push
movsb
aad
pop
dec
call
cmc
jmp
in
dec
clc
cmpsb
mov
push
push
nop
cwtl
inc
add
scas
jnp
xor
in
inc
mov
movsl
loopne
mov
or
in
jmp
push
pop
mov
and
lcall
or
jb
roll
lret
sbb
outsb
stos
and
lods
xchg
xor
mov
and
mov
dec
mov
mov
push
cmp
push
xchg
inc
movsl
lods
inc
xorl
lods
lods
fwait
cltd
push
sbb
andl
scas
push
mov
mov
ret
mov
incl
int
jp
fldenv
mov
cli
lahf
mov
stc
sbb
nop
lock
push
xor
mov
inc
test
bound
stos
inc
sti
push
scas
lea
sub
mov
loopne
inc
sub
jle
vpcmpeqw
and
iret
insl
test
insb
jo
add
cmp
insl
and
xor
jecxz
test
adc
in
jp
das
stc
xchg
cmp
and
outsl
mov
sarl
pop
negl
in
out
dec
mov
not
lock
jp
pop
inc
das
xchg
ljmp
or
aaa
sbb
cs
push
aas
ret
pop
jp
push
push
scas
cs
xchg
jl
rorl
cmc
jp
popa
outsb
push
lahf
mov
pop
enter
fsubs
adc
adc
cld
out
call
out
jp
dec
push
inc
mov
mov
leave
push
cmp
lods
jb
inc
inc
pop
icebp
pop
fcmovne
fcomi
daa
pop
mov
add
loope
adc
stos
inc
push
mov
fdivrl
decb
hlt
ss
push
repz
pop
pop
mov
cmp
aas
sbb
pop
or
xor
adc
sbb
repz
mov
mov
push
jbe
lock
push
dec
sbbl
push
mov
mov
cmp
cmpsb
push
xor
scas
orb
gs
gs
adc
lds
cmp
mov
and
notl
sbb
cmovae
xchg
fiadds
mulb
int
sbb
add
pop
mov
mov
and
fbstp
sub
and
or
test
xor
test
inc
mov
inc
mov
lods
cmpsl
js
or
mov
shl
dec
cld
mov
inc
pushf
push
lret
hlt
pop
jb
test
inc
mov
enter
insl
lret
jge
stos
sbb
push
aad
adc
inc
mov
jo
mov
in
xchg
adc
jg
and
cwtl
fwait
in
outsb
in
jns
jge
or
mov
int3
cwtl
jb
sub
shrb
jp
aaa
clc
orb
inc
dec
fistpl
push
and
jl
fstps
and
sbb
xchg
test
push
lret
push
fnstenv
inc
or
mov
in
jecxz
mov
push
xchg
jno
fnstsw
pop
in
in
repnz
inc
pop
insb
add
sub
mov
das
cltd
xor
call
fdivl
in
notl
in
mov
dec
ja
and
leave
loopne
xchg
push
add
fstpt
xor
stc
dec
cwtl
sarl
sbb
fiaddl
pop
decl
and
jl
mov
imul
mov
mov
xchg
sbb
lcall
jae
and
sub
inc
iret
data16
rolb
loopne
inc
mov
int3
pop
rcll
call
push
mov
test
fisubrl
mov
mov
cwtl
mov
pop
sbbl
dec
scas
adc
mov
test
mov
xor
lds
mov
bound
nop
xor
arpl
xor
push
test
cltd
cltd
mov
dec
aam
lods
arpl
mov
call
fidivrl
test
xchg
clc
aam
dec
test
push
inc
and
or
lahf
mov
mov
jmp
pop
and
xor
adc
dec
clc
sbb
ret
loope
mov
sbb
xchg
shr
outsb
push
jmp
pop
mov
lock
jae
jmp
out
cmp
cmc
mov
mov
dec
or
push
xchg
lea
mov
popf
loopne
das
sub
sti
fdivl
cmp
xor
arpl
mov
daa
fstps
repz
icebp
jae
icebp
xchg
test
ljmp
pop
aad
sub
sbb
sbb
movsl
loope
wrmsr
inc
sub
shrb
sub
jnp
dec
es
outsb
inc
in
add
lret
inc
test
shll
std
dec
cmp
xchg
fdivp
dec
movsb
call
jmp
movsb
mov
xchg
mov
lea
dec
sti
test
jg
adc
jecxz
jb
fwait
sbb
xchg
jecxz
lcall
push
bound
mov
jl
lret
mov
sbb
test
mov
add
xchg
pusha
scas
nop
pop
fdivrl
and
es
loope
dec
cmpl
mov
rcrb
pop
inc
outsl
push
jae
lods
mov
dec
and
xchg
mov
test
mov
in
pop
fcmovu
jae
lds
sbb
dec
stos
xchg
adc
out
inc
jmp
push
mov
gs
dec
out
into
dec
jne
xchg
shll
aaa
mov
push
pop
mov
jl
fmuls
dec
sub
shlb
jne
cli
test
es
pusha
cmp
or
ficompl
mov
lcall
mov
repz
notb
pop
xlat
call
nop
sbb
and
test
add
inc
mov
subl
js
add
pop
jp
cmp
loope
ficompl
mov
jo
and
jo
adc
outsb
mov
divl
cld
adc
hlt
bound
movsb
xor
mov
stos
repnz
jl
push
or
ror
jmp
dec
aas
and
daa
js
loop
lret
jae
pop
repz
sub
mov
inc
push
jbe
popa
imulb
jg
add
mov
in
push
sbbb
outsb
xchg
negl
adc
push
sbb
ss
enter
movsb
pop
pushf
in
xchg
xchg
call
cmp
aad
sbb
lret
mov
pop
icebp
and
and
pop
add
mov
pusha
daa
in
insb
fcoml
xor
in
cltd
repnz
imul
idivb
loopne
push
jnp
cmc
leave
adc
xor
dec
aas
and
sti
inc
ljmp
nop
or
pop
add
pop
in
dec
push
je
dec
pop
stc
jl
loope
push
adc
cmpsb
shll
inc
mov
push
dec
xchg
mov
mov
int
in
test
lock
ret
adc
test
cli
shr
dec
xchg
or
sub
insb
lds
ja
imul
mov
sbb
jmp
cmpsb
mov
lcall
mov
xor
pop
mov
push
data16
mov
insb
or
psrld
sbb
aad
adc
xchg
inc
loop
sbb
mov
pop
jp
mov
sub
xchg
sbb
cmp
add
add
inc
sbb
das
cmp
lea
jbe
adc
jge
jecxz
xchg
cld
negb
mov
add
dec
xchg
push
scas
mov
mov
cmp
jb
push
jmp
jae
pop
out
fadd
cmp
and
push
mov
inc
repz
mov
fistpll
fstps
mov
ret
lcall
mov
out
incl
mov
inc
mov
push
enter
je
je
xor
dec
aas
pop
imul
hlt
mov
in
xor
pop
cmp
cmp
and
imul
jae
adc
push
xchg
push
sub
mov
push
ljmp
clc
xor
std
mov
mov
test
push
push
test
rcr
repnz
fcmovnb
les
xor
inc
stos
rcrl
dec
movb
fwait
test
fiaddl
test
add
enter
inc
xchg
inc
add
add
pop
out
fidivl
add
jnp
outsb
jp
mov
xchg
cltd
xchg
or
mov
mov
out
push
js
fs
and
mov
dec
ret
mov
cmp
mov
mov
outsb
cmpb
and
adc
ss
push
mov
in
lcall
inc
adc
fisubl
dec
sbbl
cmp
add
pop
xchg
mov
jno
adc
xor
jle
jge
hlt
push
scas
mov
popf
push
xor
inc
jle
or
js
loope
pop
fisubl
jg
mov
rclb
fildll
sbb
cmp
push
cmp
xor
add
gs
insb
push
dec
sti
jns
pop
sbb
shlb
mov
dec
inc
outsl
inc
das
xor
test
or
out
push
sub
push
jle
out
jle
es
add
ss
sbb
dec
inc
inc
cltd
fwait
jle
imul
sbb
adc
cltd
fidivl
push
andb
aam
inc
mov
add
fisubs
inc
mov
jl
in
cli
into
push
pop
mov
in
or
push
sub
cli
in
sahf
cli
rorl
inc
sahf
cli
jb
mov
xor
imul
or
movsl
cmp
or
daa
cmc
inc
pop
rolb
jno
cmc
sbbl
lods
push
les
or
push
jl
sti
pop
cltd
out
xor
push
pop
and
push
mov
sub
or
xor
xor
and
or
xchg
and
leave
sub
in
mov
es
jge
lods
push
das
pop
xchg
or
jne
lock
es
lcall
xor
dec
push
into
pop
out
xchg
fisttpl
sub
sbb
mov
aad
mov
cwtl
out
lds
rcl
mov
pop
fidivl
sbb
daa
adc
sub
mov
daa
sub
in
aam
shrb
push
sub
ret
in
iret
fnstcw
push
sbb
pop
rorl
and
push
testl
loop
aad
insl
adc
jge
and
sti
lcall
xor
sbb
adc
daa
push
les
cld
movsb
sarl
pushf
sub
sbb
hlt
and
xor
push
or
outsb
xchg
decl
jmp
jle
testb
and
test
push
or
popf
mov
mov
repnz
inc
or
jg
aas
inc
loope
xlat
pop
or
insb
xchg
scas
or
loop
aam
cmp
or
outsw
jno,pn
or
sbb
sub
inc
sahf
cmpsl
jle
pusha
jp
pusha
xor
sar
jp
adc
adc
int
inc
in
sbbl
popa
xchg
mov
sub
xor
insb
or
jne
mov
shlb
cmc
cmp
mov
sub
jne
mov
push
insl
xor
outsl
inc
popa
pop
mov
lcall
cmp
sub
push
call
inc
cmp
stos
xchg
scas
mov
mov
sub
movsb
cmpsb
data16
lret
retw
pop
add
xchg
shr
xchg
hlt
daa
sub
hlt
aaa
loope
adc
sbb
mov
popf
out
dec
sub
aam
ret
aas
fldenv
dec
push
psrlw
pusha
fdivrs
mov
mov
sbb
sub
gs
push
pop
rolb
cmc
push
fcompl
dec
mov
xchg
outsl
lcall
jmp
mov
imul
into
sti
cmpsl
sbb
xlat
stc
popf
mov
fisubrs
xchg
dec
std
xor
push
jno
hlt
aas
inc
je
xlat
int
jnp
cltd
scas
data16
inc
mov
jo
lods
jae
test
cmp
mov
mov
mov
in
mov
cmp
pusha
xchg
rcrb
sbb
mov
dec
aam
pushf
dec
bound
loope
sbb
add
out
cmp
push
into
rorb
adc
ret
mov
sub
jae
jmp
xchg
subb
ja
ljmp
icebp
pop
daa
aas
or
clc
loope
add
popa
ja
into
or
xor
hlt
jecxz
jns,pn
xchg
stc
mov
sub
das
sahf
test
cmp
into
roll
dec
mov
inc
mov
xlat
das
add
test
fisubrs
pop
jge
inc
mov
jbe
lds
sbb
xchg
xor
scas
scas
pusha
jne
and
pop
cmp
jns
jge
in
xor
inc
or
pop
mov
push
dec
dec
gs
out
fnstcw
adc
xor
cmpl
adc
jns,pt
pop
cwtl
lret
loop
in
mov
xor
cmp
aam
rcrb
mov
sub
fcmovb
jl
stos
sub
sbb
adc
mov
xchg
sti
inc
push
jmp
push
push
push
xor
dec
ljmp
dec
out
inc
inc
dec
jae
outsb
jno
shll
xchg
clc
xchg
jno
es
inc
inc
xchg
xchg
push
pushf
ja
sbb
call
addr16
sub
inc
pop
hlt
inc
lahf
in
out
lret
cmc
clc
into
dec
sti
push
in
xchg
cmpsb
inc
int3
inc
std
inc
or
mov
in
and
xchg
pop
cmp
jae
inc
inc
cmp
add
xchg
sbb
inc
bound
movl
mov
push
xor
adc
out
xchg
mov
lret
mov
jge
cmp
mov
int
xchg
rclb
jmp
sub
popa
xchg
leave
xchg
es
sub
insb
cmp
cltd
sub
data16
and
sbb
mov
fs
xor
stos
dec
pusha
into
insl
lea
and
inc
push
adc
flds
sbb
fcomp
fsub
push
push
or
push
daa
sbb
mov
in
ja
inc
jmp
pop
xchg
jno
fildl
fistl
inc
mov
outsl
leave
cmc
lock
lods
jae
cld
aas
aam
adc
test
mov
or
ds
mov
jbe
mov
leave
dec
or
stos
push
inc
push
cli
ss
pusha
dec
adc
call
push
fcoml
cli
push
cmp
mov
call
sub
fs
in
add
sbbl
push
push
cli
dec
addr16
out
sbb
or
pop
jns
cmp
push
and
sbb
loope
fiadds
dec
sbb
in
xor
sbb
test
jge
stc
add
test
and
in
jnp
in
fisubs
push
xchg
mov
xor
cmp
rolb
jnp
pop
push
and
jbe
mov
fmull
ret
outsb
add
and
or
mov
cwtl
out
pop
jp
push
mov
ret
aad
pslld
xchg
int
daa
or
into
mov
orb
sbb
cmp
lock
int
xchg
mov
mov
cmp
mov
or
je
sahf
and
scas
leave
mov
aam
pop
or
pop
push
or
or
daa
rorb
ret
add
cmp
sti
test
test
or
adc
mov
mov
sbb
and
push
push
adc
cmpsb
lret
adc
xor
jb
outsl
out
xor
mov
in
pusha
xlat
ja
xchg
mov
test
cmp
lods
pop
sahf
lahf
inc
sahf
mov
pop
sar
sti
pop
fistl
loope
imul
sub
shl
fcmovne
or
lock
xchg
push
or
lret
push
rol
jne
mov
jbe
test
ljmp
imul
test
nop
daa
jb
pop
cmp
cmp
pop
imulb
xor
xor
sub
lods
add
xchg
cltd
imul
mov
das
bound
mov
lds
jnp
test
pop
mov
or
mov
jb
jb
loope
loop
stos
hlt
dec
or
adc
cmpsl
push
push
push
ficoml
fstp
mov
data16
lret
js
dec
das
lock
xlat
stos
fistl
pushf
mov
sub
inc
push
push
hlt
inc
fldl
xor
mov
xchg
add
jbe
inc
dec
test
popf
out
xlat
dec
jb
push
inc
pop
rclb
repz
clc
aam
in
test
scas
xchg
xor
mov
cwtl
add
xchg
mov
inc
lahf
sbb
or
sbb
lret
ret
pop
mov
or
mov
jno
out
mov
pushf
leave
les
rorb
mov
adc
aad
push
jne
xchg
jne
data16
add
inc
sub
mov
data16
jl
in
dec
in
add
ret
xchg
jl
out
jo
dec
popaw
icebp
insl
mov
cs
popf
in
imul
pop
jle
jnp
jecxz
xlat
aam
fwait
inc
sub
rcrl
and
cmpsb
pop
pop
and
mov
testb
pop
popa
fwait
je
push
jae,pn
cmc
and
iret
adc
lret
leave
test
dec
lock
and
insl
adc
mov
lret
in
jp
and
jb
into
adc
dec
loopne
pop
lcall
les
cmp
or
bound
dec
mov
cmp
dec
sub
or
pusha
mov
xor
adc
lret
or
adc
cmpsb
lret
add
repnz
inc
add
fadd
xchg
mov
adc
sub
jge,pt
jge
jbe
decb
lock
fidivs
inc
imul
adc
inc
rcl
or
push
iret
imul
jl
cmp
sti
mov
push
mov
pop
loope
in
add
in
pop
iret
lea
inc
mov
xchg
stos
cmc
imul
ret
sti
xchg
in
push
inc
or
cmovne
cwtl
je
mov
add
pop
cltd
test
or
rcr
sbb
dec
adc
dec
xchg
in
repz
xchg
xchg
test
sbb
and
stos
das
dec
cmpsb
ret
outsb
mov
inc
xor
xchg
inc
imul
cmp
lret
jbe
nop
gs
ja
mov
mov
subl
jnp
pop
shlb
roll
int
lds
stos
leave
sti
push
cltd
pop
in
loope
cmpsl
lret
add
xor
push
fwait
mov
aaa
into
ret
inc
loope
push
pop
frstor
pop
dec
dec
lods
xor
repz
aad
or
sbb
ds
pop
lcall
adc
push
std
dec
push
rcrl
hlt
jne
xchg
cwtl
test
or
push
xchg
ret
cmpsb
sti
push
les
xchg
imul
jbe
adc
xchg
xor
push
pop
hlt
and
es
xchg
sbb
into
cmp
sbb
ficomps
mov
clc
jle
add
and
cmpl
cli
lea
bound
and
cmp
jg
scas
loopne
cmp
and
adc
jbe
les
ja
sbb
mov
ret
jge
into
stos
and
clc
test
shlb
sub
cmp
lret
pop
add
test
cltd
lret
sub
sbb
adc
mov
test
jge
dec
dec
cmp
mov
mov
or
dec
push
in
or
in
push
insb
lods
or
ror
mov
sub
mov
cmp
loope
adc
stos
nop
lods
shrl
fisttpll
push
push
insl
movb
aaa
pop
pop
xlat
xchg
xchg
jae
leave
jb
bound
xchg
cmc
stos
push
sbb
rorb
mov
addr16
les
dec
dec
ss
hlt
or
jg
sbb
in
mov
or
xchg
xor
test
enter
mov
xchg
xchg
hlt
pop
fs
sbb
cmp
fsubr
pop
jle
test
popa
stc
sub
jl
daa
stc
adc
pop
push
pop
clc
push
mov
add
jp
fchs
rorl
mov
xor
sub
mov
jns
shl
push
cmc
jne
jae
xorb
addr16
push
pushf
gs
movsl
mov
rcrl
movsb
out
jmp
cmp
adc
cwtl
adc
push
pushf
pop
push
popa
fildll
cmp
pop
test
scas
lock
and
fdiv
leave
mov
pop
xchg
sub
lods
stos
mov
in
in
xor
fscale
mov
std
dec
xchg
scas
cmpsb
data16
mov
fstl
ja
les
stos
lock
xchg
out
ret
and
add
jg
loope
push
or
scas
test
sbbb
jle
popf
mov
pop
test
jns
nop
dec
mov
xchg
push
xor
aad
ja
mov
mov
roll
xchg
xchg
rcrl
scas
mov
xor
outsl
and
push
dec
stos
adc
imul
stos
or
fldl
jne
lea
scas
dec
mov
not
dec
ljmp
inc
sub
dec
push
sahf
add
add
sahf
cmpsb
cltd
lods
mov
xor
lea
dec
cmpb
pop
mov
ss
mov
or
inc
je
call
jnp
lcall
nop
dec
cld
mov
fimuls
ret
cwtl
sbb
int
push
fsubrl
push
mov
insl
adc
jno
outsl
push
xchg
push
pop
in
stos
xor
sbb
xor
push
and
sbb
lret
lods
out
mov
out
xchg
sbb
cmp
adc
arpl
sub
ds
pop
pusha
dec
test
mov
pop
ds
mov
inc
mov
jmp
hlt
or
or
xchg
jp
xorb
cwtl
mov
das
addr16
adc
add
pop
rcl
ss
jmp
jo
sahf
add
sbbl
or
jne
ljmp
enter
pop
sub
add
out
push
push
jmp
adc
cmpsb
sbb
notb
int
xlat
aam
cmp
outsl
add
in
cmc
repz
rolb
shrb
data16
xchg
pop
jg
nop
ret
sbb
mov
sahf
jnp
sbb
les
cmpsb
cmpsb
sahf
push
fnsave
jne
mov
push
or
gs
pop
xchg
sbb
ficomps
rcrl
or
sub
into
loop
sbb
sbb
in
pop
xchg
in
xchg
insl
dec
xor
mov
inc
popf
fsubrs
int
mov
shr
leave
mov
ds
orb
ficoms
cld
ds
push
fsubs
or
mov
push
rorb
xchg
xchg
pop
incl
mov
mov
or
mov
jle
xchg
ja
push
lea
mov
xchg
pusha
ret
mov
adc
xor
out
sbb
out
inc
sbb
lea
or
fs
cld
lock
dec
and
push
int
dec
test
sbb
push
ss
or
rcl
lahf
sti
xchg
mov
and
iret
mov
frstor
test
jmp
scas
push
addr16
pop
jb
sub
js
xor
jb
shll
and
cmp
test
cld
push
lret
rcll
sbbb
cmpsb
jg
jmp
jnp
lcall
out
jge
jge
int
mov
insl
andl
leave
ljmp
in
cmp
clc
gs
popf
test
test
inc
jl
adc
lcall
xlat
fisubl
nop
ds
outsl
stc
cmc
xchg
xchg
sti
xor
xchg
xchg
or
test
sbbl
fsubr
add
xchg
int3
and
outsb
pop
test
cld
lods
stos
jle
mov
shl
xor
arpl
add
mov
xor
lds
cmp
lcall
pop
repz
pop
enter
repz
filds
inc
adcb
jmp
insl
push
jle
test
mov
mov
xchg
jo
add
inc
mov
leave
mov
popf
test
mov
stc
test
cmpsb
ljmp
rorb
aaa
dec
push
mov
jb
pop
dec
fdiv
push
addl
repz
adc
aas
mov
push
xor
outsl
pusha
js
push
mov
les
pop
inc
mov
insb
jae
xchg
out
scas
das
add
or
fildl
test
sbb
out
arpl
movsl
lahf
dec
frstor
push
cmpsl
cmp
adc
insl
popa
mov
test
cmp
and
mov
mov
mov
jmp
jbe
sar
fidivl
adc
mov
mov
mov
movsb
and
stos
outsb
hlt
insl
adc
mov
sbb
add
ss
stc
sbb
or
stc
dec
sti
lods
jae
sub
mov
mov
jle
popf
call
sbb
inc
mov
les
je
fmull
movsb
inc
into
and
xchg
or
add
mov
add
and
pop
pmaxsw
sbb
jl
or
lret
test
and
pop
sub
gs
jb
cmp
xlat
insl
pop
inc
outsl
sub
lret
aas
push
mov
pop
ds
jne
clc
gs
loop
sahf
dec
inc
int
push
dec
or
pop
mov
or
in
lret
movsb
jo
inc
sub
push
ja
push
push
mov
test
sbb
in
iret
mov
mov
sbb
rcrb
js
enter
cmp
or
stos
sbbb
pop
ljmp
andb
mov
ret
js
ficomps
es
out
mov
cmpsb
cli
outsb
test
jmp
mov
mov
stos
add
imul
cmpsl
mov
mov
call
sbb
arpl
jb
out
push
mov
aaa
inc
sub
pop
arpl
xlat
rcrl
std
bound
jb
sbb
add
int3
xlat
jl
pop
and
xlat
shll
push
enter
xchg
mov
jle
jns
sahf
add
dec
sub
cs
in
xchg
pop
adc
or
sbb
je
rorl
sub
adc
cmp
popl
ja
cmp
mov
cli
enter
cmc
inc
dec
pushf
inc
add
cmp
cli
pop
or
imul
pop
hlt
pop
jno
mov
sub
insb
lock
mov
xor
cli
mov
stos
dec
jp
push
outsb
outsl
and
mov
mov
sub
test
or
jecxz
adc
std
dec
mov
adc
inc
xchg
add
jge
jge
cmp
pop
movsl
popa
std
sub
cmp
ljmp
fdivrp
jecxz,pn
pop
sbb
push
rcrb
sahf
jle
data16
test
xchg
iret
imul
insb
jl
aad
xor
aas
sbb
mov
push
mov
out
push
jp
test
jmp
xor
adc
pop
out
jle
mov
paddw
std
popf
cmpb
cmc
shr
cli
sub
roll
or
into
fadds
sahf
imulb
mov
add
mov
int
out
imul
and
jns
mov
mov
insb
loop
mov
push
jp
or
cld
lea
imul
push
mov
push
mov
add
push
cs
bound
jae
push
jne
mov
loop,pt
outsl
scas
or
pop
mov
jnp
scas
es
mov
popa
push
push
test
popf
outsb
mov
or
std
les
push
filds
mov
sub
push
mov
data16
jne
adc
mov
mov
xor
pop
nop
jg
mov
mov
pushf
pushf
cmc
sbb
cltd
test
out
push
mov
test
rclb
icebp
mov
out
or
lcall
pop
es
cmpsl
fldenv
push
mov
push
stc
jbe
mov
xor
lock
outsl
lods
push
pop
or
mov
pop
sub
push
cmp
fadd
std
xor
fs
fsubs
and
pop
in
jp
or
mov
lret
imul
push
jb
dec
pop
scas
lret
xchg
lods
mov
mov
push
and
lods
push
jecxz
daa
push
xchg
or
sbb
push
inc
cmp
in
das
out
aas
jb
sub
clc
stos
test
stc
and
addr16
jb
lret
pusha
and
xchg
pop
scas
pusha
jp
or
dec
pop
rclb
daa
test
cmpsl
cs
jne
or
pop
jmp
std
stos
insb
adc
sbb
jmp
aaa
push
mov
outsl
push
mov
scas
mov
or
jp
in
push
xor
sbb
scas
push
inc
adc
sahf
in
jge
jno
movsl
dec
xchg
andl
cwtl
sar
mov
fildl
pop
test
lret
cwtl
adc
popa
adc
push
in
xor
cmp
mov
in
mov
sbb
sti
push
test
test
das
out
outsl
stos
dec
cltd
push
sub
cmp
daa
jo
insb
mov
setns
push
mov
mov
jb
int
ljmp
mov
inc
stos
fisubrs
fidivl
repz
lds
jae
mov
mov
and
mov
mov
cmc
movlps
loope
sbb
sub
sbb
test
int3
pop
pushw
imul
test
ss
inc
xorb
shll
jnp
mov
iret
ds
ljmp
xchg
ret
out
in
add
stc
divb
sbb
jecxz
xchg
add
pushf
push
notl
bnd
pop
js
dec
stos
add
jns
popf
das
mov
std
xor
faddl
mov
fsubrs
addl
mov
haddpd
pushf
push
fstps
loope
andl
and
test
jno
pop
rclb
and
in
sub
cmp
enter
adc
pop
js
add
test
pop
gs
sbb
test
xchg
aad
cmpb
and
mov
int
in
sbb
fadds
insb
pop
mov
leave
or
sbb
js
insb
inc
bound
inc
aaa
cmp
mov
iret
adc
push
xchg
mov
jge
push
or
sub
jecxz
std
data16
xchg
xorl
and
bound
mov
fbstp
mov
xchg
jl
jns
and
testl
out
mov
and
dec
in
xchg
repz
fmull
cmpb
jnp
and
mov
lahf
pop
mov
dec
fs
std
dec
mov
mov
add
jno
je
mov
inc
add
ret
lods
or
sbb
incb
add
xchg
bound
dec
movsl
js
ds
cmp
lds
mov
and
iret
int
pop
mov
stos
addl
es
or
dec
and
mov
jbe
or
stc
mov
jae
lret
cwtl
scas
jae
mov
je
lds
repz
push
repz
ror
xchg
pop
xor
lret
test
adc
fcomp
nop
lret
fbld
popf
add
ljmp
stos
sarb
out
in
xor
addr16
sbb
gs
xchg
or
and
inc
inc
adc
cmp
mov
repz
js
cmp
jge
pop
ret
mov
in
sbb
mov
xchg
jl
leave
in
cmp
gs
jbe
loop
mov
cmpsl
sbb
mov
fimuls
or
jge
and
fwait
sub
out
add
sar
inc
fdivrl
addb
jns
ret
iret
jbe
ret
xor
scas
jb
adc
jmp
and
sbb
dec
ret
fwait
sbb
sahf
xchg
adc
sub
xchg
dec
rolb
andb
adc
mov
fs
out
pop
and
adc
in
int3
lret
cmp
mov
and
call
out
cmc
dec
aam
fwait
out
jb
lods
and
push
cwtl
test
dec
jne
lcall
pop
mov
mov
or
xchg
lds
dec
ljmp
stc
cmp
daa
push
jecxz
scas
mov
mov
sbb
adc
xor
pop
aaa
lcall
scas
fwait
xchg
into
mov
mov
insb
inc
aam
rorl
jg
pop
add
and
and
jb
cld
mov
inc
mov
repz
arpl
idivl
outsb
incl
jp
leave
sub
jmp
movsl
hlt
out
lahf
or
push
orl
out
mov
test
scas
mov
xor
jb
mov
mov
mov
adc
mov
movsb
out
xchg
hlt
scas
dec
dec
inc
cmp
int3
xor
aaa
cmp
subb
mov
mov
cltd
push
pop
shld
repz
fbstp
test
push
sub
lea
into
mov
dec
je
add
push
cmp
pusha
hlt
jae
insl
ret
add
xor
push
addr16
pop
lret
sub
ret
popl
imul
push
test
cltd
or
ficompl
xchg
hlt
dec
cmpsl
test
mov
addr16
and
mov
adc
push
mov
inc
pusha
lods
cmp
cld
lods
mov
jl
or
fs
sarl
adcb
inc
xor
xchg
mov
mov
cmp
ja
int
data16
out
push
xlat
cmpsl
or
clc
and
out
popa
pop
int3
mov
jmp
out
loop
das
out
jbe
roll
pop
push
sti
out
das
nop
ret
rol
popa
jmp
sbb
jg
das
jo
repz
rcrb
pop
mov
lahf
cmc
in
clc
mov
leave
arpl
xchg
xchg
imul
scas
jbe
test
or
sub
test
es
or
clc
ljmp
push
data16
mov
cmp
cs
xchg
mov
je
out
jbe
and
inc
pop
rclb
mov
fildll
nop
call
cmpsl
gs
and
xchg
in
mov
rorb
mov
pop
int3
loope
cmp
test
fimull
xor
mov
dec
add
or
addr16
pop
orl
xchg
mov
lahf
mull
push
jno
xchg
out
lret
and
fdivrp
je
lret
bound
imul
add
xchg
or
dec
out
cmc
mov
daa
xchg
mov
jmp
cli
sbb
icebp
add
mov
shrl
xorl
push
xchg
stc
mov
inc
nop
sahf
imul
pop
mov
arpl
mov
cs
jo
enter
mov
testb
dec
push
and
mov
push
int3
cmp
adc
lahf
pushl
push
gs
adc
je
inc
shlb
jae
iret
inc
nop
int
fcoms
movsl
mov
out
pop
mov
xorb
mov
push
movsb
ja
fucomip
lcall
jmp
mov
cld
pop
push
and
movsb
icebp
insb
mov
in
imul
subl
cmc
inc
jo
int3
cld
or
call
fiaddl
or
jl
lahf
xchg
xchg
shrb
xor
cmpl
scas
xor
jo
dec
je
hlt
negl
mov
adc
push
add
mull
leave
cmp
ficompl
add
bnd
mov
mov
hlt
cs
adc
sti
subl
inc
dec
aas
sahf
hlt
push
test
sub
movsl
dec
out
jmp
nop
fdivl
sbb
add
mov
ss
ja
sti
dec
rclb
cs
stc
xor
ret
cwtl
sub
xor
mov
push
jg
mov
stos
adc
sbbb
jno
xor
add
cld
or
or
fisttpll
add
leave
push
fimuls
dec
addr16
shrb
add
fidivs
stos
popa
std
dec
mov
xchg
dec
hlt
xlat
imul
stc
lret
out
pop
jno
fisttpl
add
xchg
std
lret
and
mov
mov
sarl
mov
mov
adc
adc
cwtl
cmp
push
xchg
and
test
and
sbb
fs
xchg
mov
incl
jne
xchg
arpl
fucom
mov
and
call
sub
pop
in
mov
aam
xchg
jle
fnstenv
jmp
fildll
scas
fsubs
xchg
imul
pop
or
in
int3
sub
xor
inc
jl
ljmp
lds
iret
shr
das
sub
jmp
dec
mov
pop
lds
xor
dec
xor
xchg
jo
stos
mov
cmp
sbbb
or
dec
roll
xchg
mov
xlat
test
push
dec
or
fwait
cwtl
ror
adc
xchg
call
jmp
mov
xor
aas
jg
cli
pop
dec
in
dec
rolb
pusha
xor
imul
call
repz
jmp
cmpsb
loopne
push
loop
mov
pop
scas
nop
xchg
shlb
clc
mov
rcll
rclb
insl
das
mov
lahf
cmc
pop
jo
push
xor
imul
pop
mov
hlt
dec
lret
sbb
stos
sub
int
sbb
pop
out
or
sti
stos
bound
lret
adc
aam
fdivp
dec
out
aad
dec
movsl
pop
repz
jp
outsb
jg
call
mov
cld
aam
mov
add
cltd
push
repz
adc
repnz
shl
inc
mov
inc
shlb
ss
into
lcall
shlb
bnd
cmp
xchg
cmpsl
cmpps
jp
mov
or
sub
call
nop
push
in
mov
add
push
inc
ss
jnp
in
outsb
fbstp
add
mov
xchg
jmp
xor
xchg
or
add
push
sub
into
in
xchg
enter
sahf
shlb
push
push
outsl
enter
bound
mov
xchg
jns
mov
cwtl
loope
fstps
jecxz
push
icebp
sub
inc
xchg
pop
insl
bnd
push
mov
and
adc
fucomi
in
inc
mov
cmpsb
mov
dec
fwait
gs
out
xlat
xor
fdivrl
orb
pop
sbb
sub
jb
scas
cmp
jge
stos
icebp
pop
lds
fnstenv
pop
adc
sahf
dec
jne
gs
fidivs
movsb
shll
sbb
xchg
inc
or
call
lea
dec
xchg
xor
movsl
pop
sbbb
lea
pop
push
push
imulb
cs
cwtl
add
outsl
repnz
cmp
and
mov
xchg
insl
jno
or
push
xlat
daa
pop
add
or
stc
mov
rorl
mov
cwtl
add
inc
cltd
mov
aam
rcrb
subl
xchg
push
pop
mov
je
decl
adc
and
invd
xor
pop
sbb
jo
xor
rol
xchg
jae
sahf
pop
mov
xor
pop
out
and
pop
xor
dec
jecxz
xchg
sub
push
jb
cld
jp
jmp
xor
dec
push
out
mov
inc
pop
mov
or
dec
fnop
jg
and
imul
rcrl
outsb
repz
add
sahf
adc
mov
pop
and
aad
dec
sbbb
dec
dec
test
sbbl
sbb
sti
aaa
and
pop
imul
xor
mov
xrelease
pop
push
cld
inc
add
mov
and
push
fwait
imul
cmp
hlt
repz
shrl
cmp
xchg
gs
xor
sbb
inc
insb
pop
dec
imul
clc
fidivs
cltd
into
fisttpll
cmc
daa
insl
xchg
test
xlat
mov
aaa
cwtl
out
pop
mov
jl
xchg
out
mov
mov
push
inc
ss
inc
pop
ljmp
int3
clc
mov
pop
mov
xor
and
inc
stc
xchg
fcmovne
addr16
int3
pop
leave
dec
xor
rcl
push
mov
call
stc
shrl
pop
add
xchg
and
or
arpl
outsb
adc
mov
pop
or
out
data16
and
inc
int3
stc
mov
mov
nop
jno
ds
mov
mov
sahf
or
cli
lcall
xor
sbb
cmp
pop
sub
push
push
jo
xchg
aad
dec
sbb
das
jecxz
popa
cli
xchg
xchg
pop
imul
fimuls
into
ljmp
sahf
inc
mov
push
fstpl
cltd
mov
push
and
data16
or
into
xor
or
setne
pop
adc
scas
jmp
inc
mov
mov
into
push
idivb
mov
lret
enter
pop
jae
or
jns
adc
xor
stos
push
mov
mov
pop
jecxz
lock
push
pusha
cmpsb
fldcw
sbb
add
ja
ja
push
in
mov
push
ss
add
xchg
adc
mov
push
into
xlat
inc
inc
xchg
cmp
mov
lcall
cmpsb
js
mov
jbe
and
add
sti
fwait
sarb
in
gs
jno
js
pushf
mov
push
sub
sbb
pop
ret
insl
rcl
lods
iret
jl
and
xchg
in
adc
xlat
dec
outsl
mov
sarl
ljmp
dec
push
push
ret
fwait
out
mov
jg
and
add
dec
jnp
xor
and
imul
and
mov
popa
imul
jnp
push
fwait
inc
fwait
xor
xchg
setns
hlt
add
sub
loop
notl
sub
scas
jns
dec
into
lea
xchg
sti
fsub
mov
xor
lret
or
inc
leave
pop
insb
lea
mov
cld
imul
movl
test
mov
xchg
sbb
mov
push
jb
je
xchg
ja
pop
sbb
mov
pop
lret
addr16
jns
cli
dec
icebp
ljmp
ret
out
popf
repz
mov
or
mov
mov
cld
pop
jnp
sub
out
mov
and
add
loope
jo
sbb
popa
inc
dec
or
xchg
loope
jnp
sbb
pop
or
cwtl
outsb
hlt
xchg
test
mov
mov
xchg
scas
mov
pop
imul
stos
pop
out
mov
push
or
cs
add
daa
cmp
pop
or
adcl
push
inc
inc
divl
mov
ficoms
xor
adc
aad
sti
xchg
outsb
mov
outsl
jmp
out
icebp
mov
add
push
mov
xchg
adcb
sbb
sbb
push
xchg
rol
mov
cmpsl
ficomps
in
lods
inc
mov
mov
fsts
jp
inc
cli
add
je
in
test
je
cmp
adc
aad
call
cmp
mov
fcmovb
fcoml
xor
sub
fwait
mov
sbb
add
mov
shll
js
xchg
in
or
xchg
rol
stc
adc
jns
push
daa
cltd
inc
data16
shll
mov
negb
out
test
mov
data16
and
adcb
lods
in
sti
nop
adc
in
sbb
jb
les
or
push
adc
idivl
lock
bound
pop
shll
sbbl
rclb
pop
jmp
and
add
mov
cmp
int3
shrl
add
mov
push
ret
push
jp
cmpsl
fnstcw
pop
mov
hlt
push
sti
je
pushf
cmp
call
jbe
test
ds
fidivs
push
popf
psubsb
divl
stc
mov
shll
fildl
movb
shll
int3
outsl
and
mov
jl
pop
push
xor
xchg
and
pop
jge
push
pop
pop
xchg
inc
dec
subl
pop
add
sbb
hlt
xchg
popf
dec
sti
movsl
movl
or
adc
out
push
in
jge
and
in
aad
jae
jno
cmp
mov
mov
cs
loopne
test
cmp
pushf
push
xchg
loop
add
inc
xchg
and
lea
dec
test
clc
not
adc
mov
push
sbb
int3
mov
insb
or
lea
les
inc
fs
fwait
add
arpl
inc
test
lock
repnz
out
xor
or
stos
leave
rcrl
xor
xor
xchg
lock
xchg
xchg
add
in
mov
jb
inc
ja
cmp
xor
neg
dec
cwtl
das
pop
out
push
lea
jo
add
out
adc
rolb
xor
jl
xchg
popa
dec
and
mov
shlb
mov
mov
sar
sbb
lods
lahf
jecxz
and
sbb
data16
cmc
xchg
and
fmul
call
dec
cmp
and
in
insb
ljmp
inc
mov
icebp
addr16
iret
test
jg
lods
bound
in
das
or
int3
xor
mov
out
arpl
sub
movsb
loopne
push
inc
js
cmp
fists
outsb
or
hlt
cs
or
xorl
adc
icebp
pop
aaa
fistps
cmp
cmp
imul
fstpt
ficoml
add
lds
imul
mov
pop
gs
jge
and
leave
jae
lret
out
mov
push
pop
stos
push
adc
inc
iret
sub
fs
inc
dec
inc
mov
fwait
inc
es
sub
inc
push
js
xchg
stos
stos
jp
mov
loop
or
xor
sbb
mov
aad
divl
inc
push
adc
js
shl
int3
mov
jbe
inc
jae
movsl
call
rol
lds
out
add
or
add
jg
add
pop
push
aas
movsl
or
popf
push
sahf
jae
xchg
mov
fisttpll
dec
aad
jb
jnp
dec
dec
cmpsl
push
imul
std
jnp
push
das
mov
popa
pop
popa
nop
out
std
adc
aad
cltd
xchg
dec
in
insb
hlt
fadds
out
add
ss
inc
js
pushf
sbb
in
sbb
out
add
sbb
mov
sub
imul
mov
les
push
xor
out
inc
outsb
and
ror
dec
pop
sub
fiadds
fnsave
out
and
je
or
and
mov
mov
sbb
mov
sub
sar
add
or
dec
xchg
shll
pop
sbbl
sbb
aam
pop
js
jb
ret
mov
mov
xchg
popf
dec
xchg
jle
enter
inc
sbb
jp
mov
movsl
adc
adc
inc
insl
dec
dec
push
cmp
xchg
shl
scas
stos
xchg
outsl
adc
fld1
lret
fs
loop
add
jnp
stos
leave
pushf
jbe
mov
fidivs
jle
mov
or
xor
addr16
xchg
or
jno
push
sbb
pusha
ds
je
jmp
lea
cmp
outsb
mov
daa
hlt
xor
ljmp
ret
or
int
cmpb
sub
push
sbb
add
mov
add
mov
data16
rcll
sub
jmp
pop
inc
pop
sub
ret
lret
mov
fsubs
test
jl
imul
dec
jg
mov
test
xchg
iret
push
mov
pop
adc
pop
mov
lods
pushf
daa
lea
cmp
clc
xchg
dec
push
imull
jle
imul
push
out
into
mov
mov
jb
adc
sbb
pop
pusha
jae
dec
inc
cltd
add
pop
ja
xor
pop
out
adc
pop
pop
movb
cltd
mov
push
idivb
icebp
aaa
into
add
cmc
cmpsb
mov
test
shll
push
loopew
dec
cmp
adc
jae
aaa
push
iret
xchg
sbb
sub
or
in
xor
sbb
add
xorl
enter
mov
lock
ret
sbb
mov
stc
jle
jo
push
add
jo
mov
js
adc
jae
pop
repnz
sub
fidivl
jg
outsl
xor
jmp
cs
cli
loopne
jne
xor
xor
or
xor
sbb
sbb
and
scas
lea
mov
jns
cmp
and
inc
repz
cmp
or
out
fidivs
xor
call
aaa
sub
or
pop
xor
xor
mov
xchg
int3
std
dec
xor
sub
scas
mov
inc
cmp
add
sbb
into
pop
push
lods
pusha
xchg
push
fstpt
iret
sti
sbb
fiadds
cmpsb
and
mov
xchg
sub
mov
ret
out
add
push
add
shr
mov
xlat
or
dec
mov
xchg
pop
lahf
mov
in
cmc
and
rep
pushf
imul
pop
or
xor
lods
insb
pop
jge
popa
int
jp
mov
mov
push
jmp
mov
lds
out
es
adc
popa
ja
cmpsl
inc
jbe
sub
xor
add
push
es
sub
add
add
lret
pop
in
jno
mov
push
xor
sub
subl
lcall
jns
mov
pusha
jne
mov
roll
lds
sarb
out
cld
push
fnop
into
gs
mov
fwait
adcl
ss
adc
fwait
sbb
iret
sahf
add
jns
sub
iret
aad
sbb
mov
inc
sub
clc
push
or
test
movsl
int3
mov
int3
push
add
in
in
xchg
sti
iret
imul
out
aaa
test
popa
popa
pop
mov
ds
inc
xchg
and
out
fsubs
jle
and
xor
cmpsl
fildll
ds
lcall
imul
xchg
gs
imul
sub
sub
sbb
xchg
ljmp
push
fstpl
sub
ds
mov
ret
hlt
loop
in
cltd
pushf
mov
push
cmp
jge
js
leave
pop
ret
call
in
pop
sbb
lret
jb
iret
cli
in
pop
loope
jo
pop
repz
jle
rcrl
pop
pop
fstpl
repnz
mov
lods
fdivs
repz
cld
into
mov
mov
mov
add
mov
sub
jecxz
lea
stc
addr16
iret
loopne
das
int
push
push
in
je
insl
scas
pop
adc
jno
jo
rorb
insb
pop
outsb
mov
xor
xor
adcb
imul
repnz
sbb
inc
mov
data16
xor
mov
sarb
lds
bextr
pusha
xchg
ss
out
lahf
inc
pop
fldt
jge
pusha
imul
jo
lret
sub
add
dec
outsl
fidivrs
mov
shll
xchg
pop
xor
lock
testb
stos
lahf
pop
mov
xor
mov
mov
rcl
adcb
scas
add
mov
rorb
paddusw
jne
mov
mov
lea
rclb
or
in
testl
nop
add
or
dec
adc
sub
cs
add
dec
add
lret
jg
push
sti
int
aad
mov
xor
mov
ja
fisubrs
fs
icebp
dec
fwait
jg
xchg
mov
xlat
push
shr
mov
lret
dec
mov
daa
insb
bound
rorl
push
repnz
scas
and
dec
test
lret
push
jo
or
ds
lahf
dec
bound
repz
jbe
jno
cwtl
outsl
lret
jg
sbbl
out
imul
in
and
cmpsb
mov
into
xchg
or
sbb
out
je
pop
xor
xlat
out
hlt
lahf
or
inc
sti
pop
cli
or
cmpsb
ret
addl
pop
adc
push
dec
fmull
mov
sub
rorb
or
lock
xor
add
dec
inc
bound
aad
in
movzwl
mov
cmp
sub
leave
movsl
jp
add
push
jnp
out
fucom
push
adc
mov
cmp
push
and
test
cwtl
shll
jbe
sub
addb
cmp
cwtl
aaa
nop
call
xor
out
dec
sti
mov
or
dec
jns
aaa
les
in
inc
or
fists
or
test
pop
jo
outsb
mov
pop
sub
jg
aad
or
jg
or
cmp
mov
mov
cwtl
imul
movb
jno
es
cmp
out
or
lds
inc
pop
push
mov
lret
push
lods
push
sti
mov
js
sbb
aas
jns
and
mov
pop
pop
iret
xchg
mov
mov
jae
addr16
jecxz
lods
cmpsl
enter
in
push
in
pop
sbb
cmovae
mov
sbb
fisubrs
sub
cmp
mov
inc
fldl
jmp
xchg
push
adc
mov
xchg
adc
shlb
or
into
add
out
push
jno
mov
sub
mov
outsb
mov
or
mov
fstps
jl
ficompl
xchg
rcr
mov
mov
pusha
push
jb
test
push
call
and
push
div
pop
pop
xorb
cmpsl
jb
sub
mov
imul
mov
imul
mov
xor
dec
rolb
mov
pop
pop
lcall
adc
cmp
popa
mov
mov
xor
xchg
lret
setno
jmp
sbb
push
repz
xor
jge
pop
loopne
js
mov
lock
pop
push
mov
fsubrl
adc
cmp
sbb
test
popa
inc
addr16
adc
mov
sbb
xchg
daa
scas
mov
cwtl
add
add
out
cmpl
test
add
push
inc
leave
lds
xor
mov
dec
mov
bound
pop
jg
je
jl
test
fwait
mov
and
repnz
mov
dec
pop
je
scas
fistps
and
adc
mov
mov
lcall
leave
popf
cs
andl
mov
outsb
je
jne
aad
jo
adc
jae
mov
sub
sbb
fcomp
and
mov
xchg
inc
jecxz
mov
jo
mov
xchg
mov
sbb
out
in
inc
adc
sti
or
js
sub
repz
divl
imul
std
testl
sbb
inc
pop
test
dec
outsl
fld1
call
or
popf
in
dec
in
pop
mov
movsl
leave
xchg
pop
and
in
push
call
push
clc
leave
push
les
or
test
pop
or
fadd
das
lds
cwtl
fwait
scas
hlt
leave
adc
fcompl
fildll
je
inc
inc
jb
popf
iret
lds
fnsave
loop,pn
push
icebp
and
adc
and
mov
lds
cmp
insb
and
inc
add
testl
or
sub
test
mov
mov
push
mov
stc
sub
push
or
testb
sarb
aam
xchg
lcall
inc
mov
and
jo
in
push
jnp
mov
rcrl
cmp
nop
mov
gs
cmp
mov
xor
ja
xchg
sub
push
out
testb
xor
ficompl
mov
cmp
lcall
add
scas
sti
sub
mov
pop
in
in
inc
out
pop
aad
jnp
ljmp
test
or
xchg
mov
sbb
adc
pop
mov
mov
mov
insl
lcall
jl
adc
inc
xchg
pushf
adc
xchg
fcomi
cmp
mov
adc
into
int
mov
dec
faddl
fadds
adc
into
inc
xchg
test
xor
test
mov
push
sbb
addr16
mov
push
outsb
stc
xchg
cltd
into
out
aam
das
mov
idivl
iret
lahf
std
cmpsb
ret
ret
hlt
jno
insb
sahf
int
mov
jno
or
mov
sub
lahf
pop
repnz
aad
push
repnz
or
mov
pop
push
mov
mov
and
fildll
sbbl
pop
jns
or
addr16
incb
in
sti
sub
sub
xchg
dec
in
cld
or
dec
inc
push
out
inc
stos
push
adc
movsb
push
out
ja
sub
jmp
imul
sub
inc
mov
xchg
fwait
lret
adc
loop
push
inc
mov
lods
pop
xchg
movsb
adc
in
sahf
adc
fldcw
jge
test
xor
mov
sbb
jne
out
lea
repz
pop
in
push
fldl
cs
and
stos
ljmp
out
cli
and
fs
mov
lahf
cmc
in
inc
jp
cmp
mov
and
push
sub
bound
xor
stos
and
jp
pop
in
iret
pop
pmaddwd
or
ret
mov
lcall
mov
and
mov
mov
fucomip
int3
mov
push
jl
push
dec
movb
add
sahf
dec
dec
lahf
out
and
es
jns
and
pop
mov
mov
dec
push
aas
es
js
mov
pop
inc
fnsave
fsts
push
jae
lret
mov
push
mov
mov
out
and
out
and
popf
add
pop
orl
pop
cmc
push
mov
inc
inc
mov
outsl
pop
and
xchg
or
mov
lods
xchg
ret
iret
push
out
xor
in
cmp
lcall
pop
dec
pop
push
subl
repz
sub
loopne
iret
aam
push
call
and
lahf
add
sti
rcr
cld
es
xchg
dec
fbstp
sbb
lret
scas
aas
mov
xor
add
negl
aas
dec
push
sub
pop
cmpsb
imul
cmc
inc
ss
pop
sub
xlat
inc
mov
out
mov
sbb
divb
sub
push
xchg
gs
mov
mov
pusha
and
jbe
mov
sub
inc
nop
sbb
adc
pop
xchg
cltd
jnp
xor
fsubl
dec
inc
or
push
cli
int3
push
xor
popa
lahf
mov
arpl
ljmp
cmpsb
iret
sub
cld
aas
cld
and
xlat
xlat
pushf
in
or
repz
clc
cmpl
sbb
addb
addr16
aad
rcll
or
cmovp
int
ficoml
int3
movsb
push
dec
push
inc
insb
cmp
cmpsl
cwtl
pop
fimull
push
pushf
ret
pop
xchg
jb
and
or
inc
int3
jg
cmp
pushl
sub
xchg
or
imul
jne
inc
pop
test
or
imul
and
adc
jbe
bound
out
push
int3
pmaxsw
cli
test
pusha
add
test
loopne
cmpl
push
push
out
fnstcw
jle
add
pop
sbb
push
push
int3
jne
popa
jnp
loope
pop
mov
ss
or
sbb
adc
cld
inc
jg
xor
rclb
push
cmpl
out
mov
mov
insl
lahf
popa
pop
lods
test
shrb
loopne
std
pop
lds
jge
sub
cmp
stc
repz
push
adc
jp
test
test
jb
repz
xchg
jl
jp,pt
add
sbb
jl
mov
or
pop
cmp
popf
add
popl
gs
or
mov
jmp
mov
sarb
mull
adc
push
and
inc
add
xor
jl
or
pop
in
movsb
dec
sbbb
xor
cld
cmc
adc
cld
sbb
rol
hlt
mov
lret
push
pop
fs
daa
mov
ds
int
push
jnp
decb
push
sbb
dec
pop
icebp
jmp
inc
call
mov
mov
insl
pushf
or
mov
xchg
jg
push
pop
jno
inc
cmp
outsb
cmp
lods
inc
or
sbb
repz
and
pop
push
mov
push
xor
and
push
and
mov
or
lods
mov
outsb
faddl
fimuls
push
cld
mov
sahf
sub
mov
sti
cmp
adc
xchg
pop
push
push
insb
sbb
sub
movsl
sahf
and
lahf
push
rdmsr
inc
fiadds
test
push
cmpl
js
add
mov
jecxz
outsl
mov
sbbl
push
shrd
into
test
sub
aas
cwtl
mull
cmp
inc
popf
pop
fucomi
outsl
lahf
aam
add
inc
pop
outsb
xor
js
popa
cwtl
std
cmp
dec
call
xor
mov
jno
cmc
push
push
push
sbb
mov
sbb
adc
nop
mov
adc
xchg
pop
or
lret
xor
div
push
imul
lret
negb
icebp
andl
mov
daa
dec
dec
cld
repnz
ja
daa
sbb
push
aad
dec
fistl
cmc
out
pop
sub
lds
ret
xor
mov
fidivrs
jno
pusha
mov
jbe
push
inc
les
es
dec
pop
leave
hlt
sbb
stc
fisttps
inc
xchg
sti
xchg
insb
and
clc
add
adc
sahf
jno
sub
jae
out
lcall
adc
fld
sbb
bound
xor
das
shlb
xchg
in
repz
clc
add
dec
xor
or
out
imul
mov
rolw
mov
aaa
jle
data16
mov
enter
insb
jmp
mov
dec
pop
pop
push
js
add
pop
insb
xchg
call
push
insl
sub
mov
pop
insl
fistl
sbb
ljmp
stos
dec
cli
scas
inc
in
repz
roll
fists
push
mov
mov
insl
mov
xchg
int
ret
outsb
test
and
pushw
repz
or
pop
push
into
out
pop
sbb
bound
ja
add
fstpt
dec
repnz
loope
inc
mov
repz
inc
jge
mov
add
inc
sbb
pop
pop
imul
jns
sahf
adc
or
je
adc
jp
in
shrb
pusha
sub
xchg
push
jle
sub
jno
cmc
or
lds
fwait
and
lret
sub
sub
in
into
xchg
cmp
xchg
jg
add
dec
stos
inc
inc
dec
and
fimull
jns
mov
test
push
lea
les
mov
lods
mov
daa
enter
mov
popa
sbb
push
pusha
std
mov
pop
cs
fidivl
pop
scas
mov
jge
jns
mov
out
shrb
int3
mov
xchg
xlat
mov
xchg
inc
sub
ret
xchg
repnz
loop
dec
idivb
inc
insl
imul
pop
aas
sbb
adc
mov
out
roll
sub
div
nop
dec
sahf
pop
inc
xchg
push
push
je
into
daa
push
out
dec
add
test
xor
lock
cmc
and
or
mov
rcl
ficoml
cmp
movsl
or
pop
cmp
movsb
or
xchg
fldl
and
in
mov
mov
sub
add
sbb
adc
rcrl
sahf
inc
jmp
and
movl
mov
addr16
sbb
in
adc
je
xchg
jmp
lcall
dec
aam
aad
das
jmp
sbb
leave
xchg
loopne
mov
scas
or
add
inc
add
jp
or
fcoml
push
cltd
js
pop
call
pop
mov
rcrl
imul
js
vsubss
cmp
mov
in
loope
out
sub
test
out
xor
out
mov
jb
arpl
fs
in
jno
mov
shr
xor
sub
rorl
shlb
inc
test
jecxz
rcl
mov
sub
test
pop
ret
jl
pop
jmp
aam
lods
add
aas
dec
int3
dec
dec
add
ret
enter
adc
mov
into
dec
lret
scas
adc
cmpsb
mov
enter
loop
xchg
aad
xor
fsubs
xor
popf
pop
sbb
ficoml
cmp
sahf
inc
in
loope
dec
mov
mov
rcrb
xor
movsb
scas
xchg
nop
insb
cwtl
xorl
xchg
push
inc
jg
imul
in
fnstenv
mov
int3
repz
in
sub
clc
lods
dec
mov
pop
sub
ret
inc
jecxz
xchg
addb
and
lods
ret
fsubl
call
addr16
lds
rorl
daa
test
sub
fstpt
sbb
cmpsl
sub
imull
cmp
xor
cltd
adc
sbb
lock
or
bound
fnstenv
bnd
inc
ljmp
push
xchg
cmp
jl,pt
jmp
xor
jno
mov
jle
xor
aam
add
repz
mov
inc
in
fsubp
insb
inc
imulb
pop
divb
xchg
inc
inc
ret
out
inc
adc
inc
inc
xlat
js
popf
orl
leave
pop
push
cwtl
sbb
and
outsl
lret
pop
iret
mov
shrb
dec
push
stos
rorl
in
in
mov
ljmp
cmpsb
xchg
mov
push
and
out
xor
fs
mov
addb
je
xchg
xchg
ljmp
sarb
cmp
sbb
xchg
lock
outsb
addr16
jg
hlt
not
fstpl
lock
dec
add
repnz
mov
xchg
add
xorb
pop
out
sub
and
loope
jl
popa
mov
xlat
jecxz
leave
push
imul
js
in
bnd
xchg
pop
sbb
dec
pop
out
cmpsl
xchg
add
mov
sbbb
cmpsl
pop
add
and
xlat
push
aas
leave
int3
push
mov
pop
fs
fcomps
pop
lret
std
mov
mov
movsl
fs
test
ljmp
xchg
ffreep
xchg
push
pushf
xchg
icebp
out
jns
push
icebp
or
fstl
into
stc
xor
or
dec
xor
aaa
pop
sbb
das
notl
les
sbb
or
mov
jne
inc
pusha
in
sbb
sarl
xor
fisubrl
lds
sti
ret
xchg
xorb
sbb
ret
andb
lods
mov
and
stos
loop
mov
dec
sbb
lods
idivb
jo
cmp
pushf
ret
or
sbb
lret
gs
inc
aam
fstps
add
push
jae
xor
adc
lcall
push
xor
xor
lock
mov
into
jbe
cmp
lods
push
pop
test
sub
sbb
sarb
sarb
cmc
clc
push
insb
mov
aam
iret
pop
add
les
repz
lret
adc
sub
arpl
cltd
in
sahf
and
in
mov
jecxz
push
xchg
mov
imul
or
dec
and
mov
mov
movsb
xor
pushf
fnstenv
stc
or
jecxz
sbb
inc
sub
inc
ljmp
inc
add
fcmovb
insb
sub
ds
fwait
nop
push
fs
sub
mov
mov
flds
fildl
jne
dec
push
pop
into
lret
daa
sbb
imul
xchg
jle
flds
icebp
dec
push
or
adc
out
lods
sbb
jge
push
repnz
mov
xor
filds
movsb
hlt
pop
add
inc
shll
or
outsl
xchg
test
lods
sbb
data16
and
sbb
ror
xchg
sub
notl
cmpsl
dec
cwtl
and
imul
push
xchg
testb
jo
ret
fmuls
jmp
out
xchg
lahf
pop
in
jo
cmp
mov
sbb
les
mov
das
dec
sub
jle
or
in
and
ljmp
push
lods
or
lods
sbb
inc
iret
std
pushf
cmpsb
sub
or
mov
fildl
sbb
mov
outsl
push
adc
mov
sti
push
test
out
insb
inc
stos
ljmp
test
int3
pop
in
mov
ljmp
popf
xor
dec
in
popf
or
lahf
inc
pusha
inc
pop
jno
pop
iret
pusha
out
inc
sbb
jecxz
lock
push
pop
rolb
push
and
xor
pop
out
jmp
popf
out
jle
adc
ficompl
adc
stos
jnp
lcall
ds
mov
and
aam
or
insl
pop
xor
push
es
mov
xor
call
sarl
cmp
mov
mov
push
aad
stos
jmp
shlb
cmp
lahf
rcrb
cmp
push
lret
es
push
aam
mov
mov
xor
nop
push
xor
mov
sbb
out
adc
inc
push
mov
flds
mov
outsl
loope
jl
lahf
orb
push
push
push
fnstcw
loopne
cwtl
and
aas
in
add
dec
lret
enter
or
mov
andl
cmp
push
push
or
test
aam
sub
movl
mov
sub
ficompl
mov
push
pop
mov
or
imul
inc
pop
jo
fwait
hlt
jle
sub
clc
xchg
das
or
outsb
aam
pushf
pop
lcall
xchg
xlat
mov
pop
roll
ret
ficompl
hlt
push
xchg
clc
xorb
in
ficoms
mov
pop
or
sub
daa
lock
pop
pop
cmc
sub
outsb
sbb
mov
inc
mov
adc
in
adc
into
data16
popf
xchg
inc
or
out
fcomps
add
sbb
std
mov
out
adc
xor
jo
add
cmp
or
cmp
andl
and
enter
pop
xchg
jne
or
aaa
pop
jmp
xchg
xchg
mov
push
jns
mov
jo
push
or
out
or
jne
sbb
push
mov
mov
sub
arpl
xchg
and
sahf
and
scas
call
daa
push
popf
mov
ja
adc
mov
dec
popa
cld
stc
outsl
mov
fwait
aad
xlat
sub
jbe
xorl
push
addr16
lods
xor
fidivrl
and
or
or
gs
pusha
lods
stos
mov
inc
mov
repnz
stos
push
rorl
lods
jp
ficompl
in
out
pop
je
shll
xchg
idivb
dec
mov
pop
push
popa
adc
daa
push
mov
cmc
xlat
lret
lock
loop
fs
jecxz
out
sbb
mov
scas
xor
orl
out
add
or
xor
push
addl
popa
jne
and
lcall
pusha
nop
pop
pop
pop
add
mov
dec
mov
and
cmpsb
dec
adc
movsl
or
mov
bndldx
fists
xor
test
in
adc
or
cwtl
ret
xor
dec
ret
xchg
cmpsl
adc
mov
aam
hlt
aam
xchg
mov
cmpsb
mov
in
in
cmp
sub
addr16
fs
pop
pop
mov
ffree
mov
inc
out
xchg
jno
add
outsl
sbb
dec
aam
pop
add
push
rcrl
jne
mov
and
cld
stos
mov
js
lock
sbb
in
clc
imul
movsb
mov
shlb
sbbb
jae
pop
or
out
ds
ja
jmp
mov
jmp
lock
cmp
lods
pop
dec
push
out
sub
xchg
pop
push
pop
lea
popf
sti
cmp
in
mov
push
lret
cltd
xor
mov
sub
and
imul
imul
pusha
or
addr16
mov
xchg
out
mov
leave
int
push
cmpsb
lret
ljmp
js
movb
dec
mov
inc
dec
mov
push
xchg
lret
jecxz
mov
ds
add
popa
icebp
xor
in
and
call
out
cmp
fdivr
js
jb
xchg
push
shll
dec
ret
inc
xor
mov
int
dec
mov
jecxz
int3
add
lds
sub
jne
mov
xchg
or
jbe
pop
aad
cmp
cmp
cmpsl
fwait
inc
lret
psrlq
sarl
and
jmp
shrb
mov
pop
cmp
imul
inc
add
insl
pop
jg
in
fisubrs
and
ds
push
xchg
cltd
movsb
lods
add
adc
push
movsb
lods
roll
mov
mov
mov
cmpsl
subb
mov
dec
out
fwait
jb
adc
mov
and
mov
lea
mov
mov
adc
enter
out
push
push
mov
push
mov
sub
add
std
push
jnp
push
cmp
lahf
les
bound
fstpt
arpl
mov
cltd
adc
or
xchg
sub
rclb
xchg
dec
dec
stc
or
lcall
xchg
sahf
sub
xchg
push
cmpsl
fcmovnb
jns
dec
lods
js
xchg
dec
inc
push
adc
dec
and
sub
lea
push
add
loopne
and
jmp
fdivs
sub
dec
push
pop
dec
test
inc
mov
sbb
fisttps
push
sarl
std
adc
out
sub
into
addb
dec
mov
arpl
test
mov
dec
movsl
add
jo
mov
adc
ss
inc
cwtl
sahf
test
fadd
fsts
roll
or
pop
inc
fiadds
push
lcall
xchg
mov
lret
jno
fcoml
arpl
mov
aam
xlat
sbb
in
jns
add
pop
sub
inc
mov
out
call
clc
imul
nop
xor
mov
xor
xorb
mov
dec
xor
jno
xor
sub
inc
push
cwtl
mov
movsb
jge
or
in
xlat
push
jge
mov
add
insl
testb
loopne
bound
cwtl
orb
mov
pop
mov
adcb
xor
testl
dec
adc
in
cltd
int
rcrb
push
sbb
mov
sub
push
lods
dec
push
aam
pop
cmp
js
out
fcomp
xchg
ss
cmp
popl
push
sbb
jecxz
mov
aad
jmp
fmulp
pop
pop
enter
inc
sub
dec
lret
cmp
mov
in
testl
or
loope
mov
fs
subl
pop
add
or
pop
xor
mov
inc
cmp
xor
cmp
jge
push
fdivrs
or
mov
xor
sub
fs
je
loope
sbb
sbb
lock
movsl
xchg
or
int
mov
shll
adc
xchg
add
xchg
aad
xchg
aaa
ds
mov
cli
sub
inc
sahf
rcrb
test
adc
and
inc
mov
shl
sub
xchg
nop
sti
orl
in
mov
movsl
cmp
mov
cmp
inc
fld
call
mov
fidivl
mov
aas
cwtl
add
repz
mulb
pop
push
test
ljmp
dec
or
and
sub
sbb
test
ss
push
mov
js
pop
cltd
out
aam
xchg
jg
or
mov
mov
int
xchg
test
and
mov
dec
fs
out
into
push
call
shr
enter
data16
mov
xor
out
sub
out
jp
dec
sbb
imul
fimull
push
xchg
ss
add
pusha
int
or
outsb
jnp
aas
or
mov
test
cmp
shr
pusha
or
mov
and
fadd
inc
inc
fwait
cmp
xchg
out
and
out
and
mov
pop
adc
es
test
aad
out
out
loope
sti
mov
fsubs
sbb
call
lods
jp
in
jle
in
aad
je
push
test
out
std
cmp
enter
js
int3
or
add
pop
scas
pop
lret
sbb
negb
or
add
adc
or
ds
popa
pop
loopne
ja
add
jno
vmovupd
pushf
pop
out
xchg
cmp
fists
stos
xchg
push
push
cld
mov
repnz
jo
xor
icebp
popa
mov
fcomps
mov
aad
insl
iret
xchg
add
pop
les
dec
push
mov
mov
add
in
rclb
cmp
cld
aaa
mov
mov
bound
aam
pushf
scas
lods
mov
scas
xor
push
sub
add
push
cmp
add
in
pop
popf
sub
jnp,pt
push
push
add
push
popa
lret
cmp
add
add
mov
dec
mov
mov
es
in
pushf
sbb
aad
dec
mov
out
add
daa
fs
int
and
dec
pop
rorl
shrl
fsubrl
sub
dec
pop
loope
cmp
mov
cmp
movsb
and
movsb
adc
sub
ja
fisubs
scas
sbbl
mov
fdivrs
sbb
addl
lcall
lods
inc
fnsave
pop
pop
in
jns
xchg
sbb
outsb
lret
cmp
jb
popa
sub
mov
cmp
out
cmp
in
inc
pop
data16
popa
movsb
jnp
int3
cmp
xchg
call
cwtl
shrb
cltd
outsl
lea
dec
dec
mov
mov
sub
decl
inc
sti
inc
xlat
test
jg
inc
xor
xchg
pop
aas
jecxz
or
jno
leave
daa
cwtl
adc
xchg
iret
mov
xor
aam
push
mov
clc
idivb
test
in
imul
sarb
das
mov
out
jo
pushf
xchg
mov
jno
sub
fdivrl
imul
xchg
push
dec
adc
ss
hlt
sbb
femms
sbb
into
mov
aaa
in
scas
adc
pop
pop
popl
sbb
inc
inc
cmp
les
shrd
aam
xchg
cltd
dec
and
sub
sub
xor
movsb
cmpl
cli
das
xchg
outsb
fiadds
mov
cmpsl
inc
inc
ljmp
and
repz
ja
std
mov
into
daa
xchg
movsb
add
push
cmp
inc
cmp
sub
lret
or
mov
lods
cmpsl
inc
sub
jns
mov
or
xchg
adc
mov
rolb
inc
repnz
mov
and
push
mov
mov
jbe
push
pop
dec
sbb
pop
test
pop
inc
lea
xor
lahf
dec
sahf
les
fcomps
mov
dec
lds
inc
pusha
xlat
repnz
es
out
repnz
jle
cmp
sub
rorb
insl
sub
lods
sub
inc
pusha
mov
jnp
pop
jl
clc
into
addr16
scas
pop
fadds
sarb
mov
sbb
xchg
push
fcmovne
sbb
dec
pop
xor
loopne
pop
mov
cmp
inc
addr16
sarl
in
dec
fiadds
stos
push
out
scas
push
popa
shr
push
push
in
rorb
rorl
inc
aaa
ret
xchg
pop
and
dec
xor
pop
push
jnp
and
mov
enter
sub
sub
jmp
cmpsb
repz
mov
mov
dec
inc
or
mull
dec
retw
jne
scas
fnstsw
int3
mov
shll
call
cwtl
push
add
mov
jne
repnz
pop
lahf
xchg
leave
cmp
xrelease
adc
add
push
popa
repnz
push
stos
out
jmp
std
adc
push
push
hlt
push
xor
push
push
out
lret
adc
out
sar
data16
andb
jl
shll
mov
repnz
lcall
cmpsb
ret
mov
mov
test
ret
inc
dec
mov
dec
mov
jl
sbb
popf
add
incb
aaa
xchg
or
dec
pop
lea
xor
test
testb
xor
adc
repz
add
xlat
dec
add
mov
pop
push
lahf
bnd
mov
mov
push
jo
cmp
in
ret
leave
ja
cmp
enter
and
fbld
push
sti
fwait
xchg
adc
inc
divb
aad
into
push
cmpsl
testb
mov
and
jp
jp
hlt
inc
sub
and
gs
insb
sbb
mov
test
bnd
test
roll
inc
mov
pop
jmp
pop
lds
cli
test
cltd
jg
or
sub
cltd
add
fistpl
pop
add
xchg
xchg
test
sar
daa
mov
push
das
pop
notb
loopne
iret
loop
xor
loopne
addr16
cmp
scas
std
neg
xchg
cwtl
lds
subl
mov
daa
out
rorb
push
aaa
jg
sbb
mov
pop
pop
shll
cmp
jecxz
adc
mov
insl
fcomps
and
jmp
sub
pop
sahf
gs
sbb
sbb
cmp
xchg
into
jbe
push
daa
dec
std
cmp
mov
jle
nop
ja
jno
insb
dec
push
sbb
loop
iret
data16
cmc
jnp
pop
add
je
mov
ror
push
push
adc
jnp
xchg
xrelease
fwait
out
pop
push
jne
pop
pop
jbe
test
ret
lods
aam
xlat
test
out
xor
rcrb
out
jns
ljmp
aas
mov
je
mov
es
pop
lods
lea
mov
lahf
or
insl
mov
rcll
ljmp
inc
push
jno
jnp
cwtl
hlt
test
sbb
jmp
clc
add
test
data16
std
enter
jb
xor
int3
mulb
cmp
jmp
lret
adc
lock
xchg
mov
repz
loopne
inc
xchg
stos
or
sbb
imulb
jl
mov
stos
push
inc
lret
dec
in
mov
rorb
jmp
pop
cs
insl
std
jle
jne
or
inc
popf
mov
scas
je
mov
and
dec
cs
add
xchg
out
add
xlat
dec
into
and
pop
cmp
hlt
jnp
jne
pushf
loope
jbe
and
iret
jmp
push
fcomp
int3
imul
fsubrl
fldcw
cld
push
arpl
stos
iret
lods
ljmp
push
inc
shll
push
pop
mov
subb
arpl
movzwl
mov
fadds
inc
pop
mov
xchg
or
dec
stc
lods
push
jbe
sbbb
out
icebp
mov
mov
push
out
push
addr16
jecxz
iret
adc
adc
repnz
outsb
or
mov
cmp
dec
mov
sub
sbb
js
adc
iret
jb
dec
jae
cmpl
lea
jecxz
shr
push
out
cmp
andl
mov
cli
out
cmc
daa
fidivs
mov
xchg
jo
jbe
mov
pop
aad
mov
push
ljmp
js
xor
cmpsb
std
mov
notl
sti
cmp
dec
or
je
in
mov
mul
sbb
popa
and
fwait
mov
scas
sbb
pop
out
sti
shrb
pop
int3
mov
es
in
lods
outsb
adc
cmp
aad
pop
xor
xor
divb
fwait
mov
lret
dec
mov
mov
pushf
cld
ds
aas
sub
jns
mov
sub
pop
dec
or
mov
push
stc
push
mov
push
jo
xor
xchg
pop
fsubs
mov
xchg
dec
roll
xchg
jb
std
imul
add
push
pop
cld
mov
pushf
clc
ss
sub
jl
nop
stos
sub
aaa
push
or
jmp
inc
cmp
jg
adc
dec
sbb
sbb
inc
in
fidivrs
nop
cld
inc
out
add
mov
insl
in
repz
leave
adc
imul
mov
fisubrs
xchg
test
mov
sti
push
loope
inc
mov
jl
dec
shrb
lret
rorl
jns
ds
iret
add
insb
xor
repnz
adcb
sahf
add
test
cmp
xor
cmp
adc
xchg
sub
lahf
mov
sub
xor
xlat
ss
xchg
leave
push
je
outsb
push
and
mov
inc
sub
lds
or
ljmp
inc
add
enter
aaa
fs
inc
ja
js
inc
or
xchg
pop
xchg
fstpl
sbb
mov
adc
pop
enter
cmpsl
out
jns
rcrb
addr16
push
fcmovne
jl
mov
push
iret
movsl
and
xchg
das
aad
add
fwait
push
loop
jge
mov
pop
inc
test
and
in
cltd
inc
das
adcb
mov
pushf
arpl
leave
dec
adc
dec
js
mov
cmpsb
pop
jnp
insl
mov
in
outsl
lea
shl
sbb
cwtl
or
cmpl
aaa
mov
popf
in
cli
inc
cmp
adc
lock
jecxz
push
mov
das
add
fcoms
mov
sub
bound
cmpl
jnp
daa
aaa
int3
sarb
push
int
stc
push
cmp
inc
push
mov
xchg
mov
mov
mov
xlat
cmp
mov
jnp
add
ja
cmpsb
lock
and
xor
xchg
mov
mov
push
fwait
rol
test
daa
fdivrp
subb
imul
sar
or
int
cmp
sbb
lahf
jo
out
mov
dec
scas
in
adc
push
std
arpl
arpl
daa
cltd
cmpsb
cmpb
sbb
pushf
loop
mov
mov
ja
sub
insb
shrb
adc
jecxz
and
fwait
lods
pop
outsb
stos
sbbb
lock
in
jne
lret
pop
fs
add
push
and
or
dec
gs
pusha
inc
shrb
rorb
cwtl
and
mov
subb
scas
es
or
push
xor
mov
mov
and
mov
xchg
mov
jno
mov
rclb
pop
insb
loope
inc
xchg
push
cmp
jno
mov
cli
mov
in
sub
jbe
movsb
cmpsb
adc
ljmp
dec
cmc
inc
sub
jle
xor
sbb
add
in
mov
mov
ret
addl
test
fcmovnbe
jl
leave
mov
rorl
mov
pop
ds
out
lods
jle
repnz
lret
lcall
mov
pop
insl
sbb
push
imull
xchg
pop
in
and
jle
and
aas
pop
ljmp
xchg
lret
sbb
test
push
pop
cmp
adc
mov
xor
pop
je
inc
jmp
fisubrs
jb
push
lods
adc
jbe
inc
and
sub
cmp
loope
xor
push
lds
or
pop
out
fcmovnbe
mov
outsb
xchg
inc
int3
jge
or
in
push
out
movsl
sbb
pop
aad
in
es
mov
or
js
sub
jae
sbb
push
daa
in
movsl
inc
insl
loope
sub
sub
das
loopne
mov
xor
add
pop
js
xchg
movzbl
xchg
adc
ja
in
and
flds
cmpsb
xor
outsb
stos
in
push
test
mul
adc
push
js
jg
sbb
cwtl
hlt
xchg
push
xor
sub
cld
enter
push
fldt
outsb
lahf
jb
push
xorl
ljmp
dec
fidivrs
mov
filds
push
cmp
and
fwait
jmp
pop
call
jmp
lock
in
fisubrl
cmc
cs
mov
dec
add
loope
into
loop
or
insb
adc
jmp
jmp
cmp
xor
inc
mov
gs
std
jmp
pop
ret
js
sub
jmp
inc
int
repnz
and
insb
sbb
test
mov
test
sub
dec
mov
insb
shll
or
bound
sahf
out
popa
outsb
inc
and
sbbb
sbb
imul
sarb
sarl
adc
push
mov
jmp
mov
sbbb
xlat
out
inc
iret
call
dec
cwtl
dec
addr16
imul
adcl
jp
or
sbb
enter
sbb
xor
shrb
jp
add
ficoml
cs
pushf
divl
daa
out
add
mov
dec
maskmovq
testl
or
das
mov
mov
and
and
sub
imul
in
pop
and
cs
loopne
imul
sbb
add
in
lods
sub
pop
lahf
outsl
test
cld
jno
push
clc
or
adc
mov
lahf
lret
nop
rcll
mov
dec
inc
cltd
subl
leave
xor
les
fs
sub
cmp
mov
andl
xor
sub
test
sub
pop
cmp
loop
jle
les
sahf
out
mov
test
or
push
aad
ret
jg
shll
fimuls
pop
test
cs
dec
xor
sub
pop
pop
sbb
and
mov
pop
insl
inc
jo
mov
fsubrp
int3
aas
mov
clc
jnp
decl
roll
mov
xchg
jns
mov
nop
ret
inc
or
cmpsl
ficoms
sub
and
or
movsb
xchg
and
mov
fiadds
xchg
fcoml
jo,pn
mov
sbb
daa
cmp
jnp
or
rdtsc
mov
js
sub
mov
cmp
cmc
add
aas
sti
add
js
jb
and
mov
pop
xchg
ja
sub
test
inc
dec
xchg
test
in
push
fistpl
in
test
push
push
iret
mov
stc
push
cs
testl
push
mov
mov
sbb
mov
insl
mov
pop
push
push
xchg
xchg
jp
inc
dec
jmp
mov
mov
pop
cwtl
xlat
fistl
push
mov
pop
pop
loopne
stos
mov
std
adcl
cmp
sub
arpl
lret
inc
add
sub
jo
xchg
sub
outsl
push
pop
inc
cmpsb
les
daa
in
fwait
sbb
aaa
pop
sub
mov
mov
cmp
movntq
push
mov
mov
cmp
jl
repnz
inc
sub
call
jmp
mov
out
nop
cmp
jecxz
pop
paddq
aas
shl
in
dec
fstpl
jnp
mov
rclb
pusha
jno
jmp
jge
loop
or
sahf
out
out
leave
push
push
add
repz
fcomip
xchg
pop
or
lahf
fs
sbb
je
pop
int
call
sub
fs
leave
idivb
insl
add
cmpl
fucomi
sbb
mov
xor
push
test
mov
mov
mov
jl
jae
lock
jnp
mov
and
push
cmp
cltd
mov
add
and
xor
iret
cmp
pop
cltd
mov
cs
shll
imull
pusha
les
mov
jle
xchg
enter
call
jg
mov
call
fistpll
mov
cltd
scas
and
mov
lret
test
mov
mov
jl
sbb
inc
xchg
jb
mov
inc
adc
loop
adc
sbb
je
add
imul
add
add
cltd
inc
push
and
pop
or
out
insl
ret
repz
and
iret
mov
mov
jne
pop
jae
in
inc
jmp
mov
mov
jl
cld
jecxz
ret
cmpsb
push
mov
test
inc
mov
mov
jle
and
imul
mov
dec
in
xchg
mov
inc
mov
cmpb
and
in
xchg
mov
dec
movsl
pop
pop
in
dec
xlat
mov
cld
fwait
popa
clc
adc
cwtl
xor
dec
sbb
xchg
in
faddp
leave
stos
popf
xchg
sbb
ds
jge
cmp
cmp
mov
sbb
or
xlat
and
shlb
call
mov
xchg
ret
aas
pop
mov
dec
sar
adc
repz
dec
out
add
jmp
sbbl
sti
lea
adc
fsubrl
xlat
cli
cmp
jne
jg
mov
clc
push
jg
push
sbb
xor
lods
sub
inc
enter
popa
gs
scas
cmp
js
mov
out
xor
sbb
or
dec
push
xor
xchg
sub
idivb
dec
cwtl
sbb
dec
inc
mov
dec
adcb
pushf
lods
lods
add
or
cmc
mov
mull
mov
rcrl
inc
jge
mov
jnp
leave
xchg
imul
jnp
fiaddl
pop
mov
scas
mov
mov
cli
cli
js
jne
lea
rclb
inc
gs
loop
cmpsl
add
xor
aad
stos
cmc
mov
mov
push
out
lock
test
xor
popa
inc
mov
xchg
pop
test
das
out
push
sti
fs
mov
push
loop
cmc
js
mov
xor
aad
xor
cmp
pop
div
es
jo
sbb
out
dec
sbb
fldenv
or
lds
fisttpll
jmp
into
push
add
adc
shrl
and
mov
stos
ljmp
pop
imulb
pushf
dec
mov
gs
fs
jecxz
push
call
dec
adc
mov
cld
xchg
push
add
in
push
ss
xchg
sbb
inc
lret
bound
xchg
pop
dec
xlat
int3
inc
mov
xor
std
and
gs
xchg
iret
icebp
lcall
loop
rorb
mov
xchg
testb
fcoml
pop
jae
push
push
pop
add
loop
movsl
ret
movsl
hlt
std
xchg
sbb
mov
sahf
orb
shlb
gs
push
inc
mov
out
or
popa
data16
out
add
into
push
push
stc
cltd
mov
orl
adc
imul
int
adc
pop
nop
cmpsb
stos
lret
es
or
aaa
in
add
cmpb
shl
stos
xor
fwait
sarb
push
leave
subb
inc
pop
jge
sbb
loopne
adc
jmp
xacquire
mov
mov
bound
in
mov
into
jecxz
repnz
xor
jg
sbb
out
fwait
cltd
xchg
pusha
aam
add
fbld
gs
push
ficomps
stos
inc
mov
add
das
and
repnz
outsl
scas
mov
dec
test
fnstenv
imul
xor
scas
mov
jb
mov
inc
xchg
loopne
jnp
add
push
or
or
add
popw
stos
stc
push
daa
loop
test
mov
mov
jo
mov
fmull
jo
mov
and
cmp
cmpb
out
mull
daa
add
inc
lods
xor
xchg
pop
test
lock
mov
jae
mov
loope
mov
and
lea
testb
push
es
mov
lcall
stos
pusha
mov
mov
sti
mov
fldenv
cmp
insl
xorb
xor
pop
push
ja
xchg
mov
lea
es
push
jns
mov
push
ret
adc
add
mov
popa
lds
movsb
xlat
into
dec
inc
jbe
or
orw
mov
mov
arpl
cmp
adc
fldt
mov
cmc
adc
das
clc
dec
daa
scas
les
and
in
inc
or
cmpsl
je
jo
xor
gs
cmp
jmp
arpl
mov
mov
popa
jle
adc
mov
and
icebp
pusha
scas
ss
nop
cwtl
mov
xchg
xor
daa
and
rcrb
pop
in
fbstp
cmp
enter
pop
and
mov
sbb
gs
les
xor
and
je
in
addr16
ret
popf
sub
inc
fildll
mov
pop
in
daa
jae
adc
aas
mov
dec
mov
sub
adc
pop
add
test
dec
jnp
mov
insl
out
lret
fdivrl
xor
fidivrs
push
into
fnstenv
adc
cli
sar
lods
or
mov
or
push
sbb
pop
mov
das
inc
in
imulb
outsl
imul
cmpsb
mov
lods
adc
dec
test
mov
jno
test
mov
jae
out
sbb
xchg
xchg
cmp
mov
cmc
repz
sub
and
loope
mov
mov
lds
jnp
mov
insl
repz
out
les
xor
add
daa
in
jns
ret
push
and
enter
cmpsb
push
or
clc
xor
or
mov
popf
dec
gs
jae
jae
push
xchg
aaa
xchg
mov
mov
mov
xor
int
adc
movsb
out
jns
cwtl
and
jecxz
push
add
cltd
repnz
jmp
out
repz
or
fdivrl
popa
sub
lea
das
mov
mov
push
push
inc
popf
insb
xor
call
sbbl
aad
cmp
popf
xchg
add
pop
mov
addr16
das
das
out
ljmp
subl
sbb
shlb
inc
je
dec
or
dec
add
popf
pop
daa
jbe
and
inc
sbb
adc
xorl
stos
sub
outsl
mov
pushl
outsl
sbb
cli
jb
mov
jle
adc
arpl
test
call
inc
xor
outsl
pop
jo
inc
mov
cwtl
movsl
xchg
inc
inc
adc
mov
jae
lock
pushf
jecxz
nop
add
testb
fsts
pop
dec
push
std
push
push
or
sbb
mov
fcomps
pop
dec
out
xor
pop
jo
pop
push
notl
fucomi
jns
cmp
push
and
fsubl
out
jns
inc
lcall
mov
cltd
jb
lea
or
lods
fistps
cwtl
xor
lock
mov
out
cmp
xor
lds
shll
mov
jmp
popf
pop
aaa
ds
aaa
sub
fwait
stos
push
mov
testb
imul
sub
jne
andl
xchg
negl
cmpsl
xchg
mov
jmp
addr16
jp
ljmp
sbb
stos
shlb
mov
iret
fbstp
pop
stos
and
nop
or
dec
cs
sub
inc
jg
outsb
outsb
fiadds
in
or
xchg
cmpsl
adc
add
enter
push
xchg
nop
jp
adc
andb
add
add
les
mov
aaa
stc
pop
xchg
xor
fisttpl
xor
mov
and
or
cmc
fistpll
add
pop
out
stos
and
mov
mov
addr16
addr16
and
inc
sti
jmp
lahf
rcr
insl
lods
sbb
divl
push
inc
adc
or
aad
out
pop
pop
sub
sahf
lods
and
mov
and
mov
flds
in
fsts
inc
lea
or
lcall
jmp
ja
popf
ljmp
inc
ficoml
shll
sti
adc
xchg
insl
push
mov
std
sbb
jb
inc
push
test
jmp
stc
in
out
mov
push
icebp
scas
mov
decl
les
adc
add
fnstcw
mov
mov
push
inc
into
cmp
pop
ja
aas
or
mov
or
loope
inc
add
nop
dec
or
negl
stos
dec
jnp
pop
xchg
dec
leave
jecxz
pop
xchg
xchg
and
dec
idiv
add
test
lea
iret
xchg
jmp
sub
add
mov
or
stos
hlt
jne
xor
dec
mul
pop
push
neg
push
jmp
jne
outsb
cli
out
in
scas
pop
xchg
std
cltd
sub
xor
cmp
cmpsl
movsb
xor
mov
hlt
div
push
paddq
mov
sahf
mov
add
dec
pushl
jmp
mov
ljmp
mov
nop
insl
jmp
iret
mov
jno
lret
shlb
sbb
push
dec
scas
cmp
ret
pushf
ss
das
inc
frstor
arpl
and
adc
arpl
mov
cmp
and
out
or
lahf
xchg
pop
mov
out
adc
mov
sti
loopne
add
push
jbe
add
std
inc
mov
mov
push
loop
aaa
mov
test
mov
cmp
jg
fcoml
mov
add
daa
mov
jne
jb
rclb
jmp
pusha
add
inc
stos
cmpl
ret
fadds
fmuls
call
xchg
add
cs
sub
btc
fnstsw
lea
push
jo
lret
repz
lahf
inc
insb
sbb
and
pushf
popf
add
mov
jmp
dec
dec
push
xchg
push
adc
popa
lahf
push
insl
push
iret
in
jecxz
push
es
les
push
jae
iret
int
dec
add
push
cwtl
fisubs
mov
pop
mov
pop
push
mov
xor
nop
inc
sub
cmc
push
sub
add
xchg
pop
pop
mov
in
pop
inc
dec
and
mov
inc
inc
andb
leave
xchg
jns
pop
scas
inc
loope
jbe
dec
xor
ret
cmp
in
ret
out
rorl
mov
cld
sbb
push
inc
mov
aas
xor
and
sub
mov
mov
sub
push
add
xor
scas
jl
xchg
xorb
mov
mov
mov
mov
lds
inc
ljmp
repz
addr16
cmp
lods
mov
cmp
push
lcall
cmp
inc
fwait
out
or
pop
subl
jae
mov
lds
sub
jnp
sub
xchg
pop
imull
add
aam
jo
lcall
adc
dec
mov
xor
cmp
inc
jmp
lahf
or
cmc
adcl
and
jl
jo
add
jg
or
mov
inc
sub
test
cli
out
repnz
push
jbe
jne
cmp
test
jle
push
xor
stc
sub
cmp
xchg
ds
mov
push
lock
daa
xor
mov
mov
jg
or
mov
pop
test
cmp
dec
add
faddp
sub
vmovmskps
add
xor
dec
cli
adc
cmpxchg
dec
jg
push
or
sbb
xchg
adc
in
arpl
sbb
addr16
inc
xchg
mov
movsl
jge
xor
scas
push
pop
test
popa
scas
sti
jb
js
mov
subl
mov
add
dec
cwtl
mov
dec
inc
xlat
dec
mov
mov
dec
js
push
sbb
addr16
xor
pop
data16
pusha
lret
push
bound
xchg
fdiv
ret
cmp
add
loope
pusha
not
and
or
or
clc
and
cmp
mov
testl
cmc
xchg
sbb
addb
rclb
push
mov
push
mov
fnstcw
sbb
push
dec
adc
adc
push
mov
popf
sub
mov
mov
inc
mov
int3
aam
sbb
adc
jns
lret
jge
sbb
jecxz
mov
and
push
mov
cmp
push
js
jge
scas
js
mov
jno
lcall
mov
ja
loope
fs
and
lea
ficomps
bound
scas
fists
jl
mov
xchg
out
sbb
nop
div
mov
xor
xchg
imul
iret
out
mov
dec
out
inc
std
loopne
xchg
inc
or
sub
fcmovb
push
cltd
or
xor
or
in
sub
push
or
sub
and
xor
ret
mov
arpl
call
in
dec
fwait
sbb
add
add
jle
adc
pop
out
cmp
cmpsl
pop
bound
iret
xor
int
mov
sbb
inc
popa
jne
or
push
sub
in
cs
fisubrs
out
outsb
inc
aam
lret
mov
push
rolb
push
insl
mov
daa
inc
mov
push
rol
pop
fildl
inc
test
je
dec
out
pop
mov
and
gs
cmpsl
push
xchg
sbb
imul
mov
pop
gs
fimull
inc
lds
pop
out
inc
sub
out
jecxz
push
cmp
jle
adcl
test
lahf
aam
mov
out
loop
inc
fisubl
or
jg
adc
loopne
cmp
iret
repz
scas
ret
in
pop
sbb
lods
push
dec
xchg
enterw
mov
jecxz
ss
jbe
or
clc
inc
stc
mov
insl
pop
push
xor
or
xchg
sub
and
dec
iret
aaa
fcompl
pusha
fistpl
jge
jne
xlat
sbb
ss
sub
mov
sbb
push
out
loope
icebp
jl
inc
cmp
mov
shlb
dec
push
movsl
inc
sub
xor
mov
int3
dec
push
inc
test
inc
mov
push
adc
lea
sti
mov
lahf
cmpsb
sahf
jns
cs
sets
add
cmpsb
das
xchg
mov
adc
clc
pushf
div
ss
test
inc
mov
add
ficoml
mov
dec
enter
xchg
adc
add
enter
or
or
mov
push
in
cmp
shr
daa
fsts
stos
lret
loop
cld
dec
into
mov
xchg
mov
outsl
inc
cmp
xchg
clc
xor
loopne
cmpsb
bnd
dec
xchg
or
shlb
and
mov
inc
adc
bound
adc
mov
mov
push
jle
pop
adc
int3
shll
aas
push
xor
mov
xchg
ja
push
test
lds
test
bound
and
xor
fnstcw
jecxz
inc
ds
sub
cld
adc
mov
or
jmp
sbb
ds
xchg
ss
arpl
sarb
jg
fcomps
inc
add
rorb
rolb
lock
add
xor
negl
adc
push
sbb
mov
lret
xorb
mov
lcall
pop
mov
fdivrl
fidivl
pop
ret
jae
inc
lret
sbb
sbb
push
add
popa
adc
push
stc
out
jmp
push
and
daa
shll
movsb
ret
scas
inc
sub
inc
pop
pop
push
negl
and
cmpsb
xchg
jbe
cmpsb
out
jge
sub
cld
xor
inc
incb
fstpl
push
jl
jb
sbb
es
mov
dec
xchg
push
out
das
xchg
icebp
data16
cwtl
dec
sbb
clc
ret
xchg
mov
sbb
jecxz
scas
mov
cmp
fsts
or
xor
inc
in
inc
sub
mov
outsb
add
movsl
loope
mov
cmpsl
fdivl
pop
test
lcall
stos
or
xchg
mov
xchg
test
les
les
xchg
mov
ljmp
shll
and
outsb
xor
ror
sti
jp
sahf
cld
and
cmp
movsl
fwait
mov
pop
fwait
call
lods
jne
pop
xor
ds
and
out
jmp
int
xor
mov
int
popf
nop
and
jl
adc
adc
out
mov
sub
inc
insl
js
dec
inc
popa
jmp
hlt
push
cmp
aad
push
insb
xchg
xlat
xor
or
inc
cltd
insl
aam
jo
xor
xchg
mov
aam
ret
jge
pop
stc
dec
pop
icebp
rorl
push
sbb
adc
test
add
jb
je
and
test
addr16
xchg
sub
add
mov
lret
mov
cmp
mov
add
dec
sbb
fsubl
leave
inc
leave
idiv
mov
faddl
mov
out
sub
sbb
and
mov
lock
lods
enter
inc
dec
pop
ret
mov
adcl
cmpsb
mov
sbb
xchg
mov
pop
push
sub
add
out
xor
pop
popa
pop
sub
scas
in
cld
push
stos
stos
mov
dec
int3
aaa
xchg
and
push
and
and
inc
repnz
cmpsl
out
icebp
sbb
stos
adc
adc
dec
push
ja
fdivr
insb
movsl
and
shlb
push
stc
and
adc
mov
imul
fbld
pop
push
sti
in
dec
icebp
cmpps
xchg
sbb
fsubrl
pop
sub
imul
ja
xlat
out
mov
mov
loope
in
push
es
or
out
adc
out
xor
mov
ret
add
lahf
mov
ret
sbb
mov
sub
dec
inc
pop
cmp
scas
mov
push
stos
stos
aam
pop
push
cli
pop
add
dec
fistps
push
sub
ja,pt
jb
push
sub
cmp
loopne
dec
add
bound
xor
cltd
sbb
and
cmp
clc
sahf
cwtl
push
inc
jb
jo
xchg
daa
rcrl
push
movsb
adc
or
arpl
outsb
es
xchg
push
adc
icebp
aad
mov
popa
out
lret
dec
and
and
jo
mov
adcl
push
imul
mov
inc
add
je
inc
jmp
sbb
into
orl
cmp
and
pop
add
divb
pop
movsl
aam
sub
xorb
popf
sbb
shl
mov
sub
mov
sbb
bound
out
das
mov
adc
lea
mov
push
xor
in
imul
icebp
sub
mov
jne
and
sbb
mov
and
adcb
xchg
sbb
pop
pusha
test
jb
cmp
pop
cltd
pushf
push
mov
gs
popf
popf
pop
outsb
repnz
call
cmp
adc
enter
cmp
js
rcrl
pop
push
aad
mov
lahf
test
and
add
imul
aaa
aas
rorb
xchg
iret
push
loope
loopne
pop
xor
push
mov
xchg
cmpsb
subl
ds
int3
sub
decb
dec
dec
push
cld
mov
movsb
loopne
in
fwait
push
lret
fcomi
test
lcall
jbe
ds
xor
pop
inc
out
and
xchg
push
ret
into
lds
mov
popf
lcall
pop
cwtl
psubq
cmp
pop
sti
jle
sbb
or
push
mov
mov
mov
ret
and
rcr
pusha
jbe
dec
stos
inc
mov
or
jae
inc
jnp
shll
xlat
sub
mov
push
repz
xlat
out
repz
add
idiv
dec
xor
push
gs
out
pop
inc
pop
sbb
fimull
ja
roll
xor
fists
adc
xchg
push
dec
pop
mov
add
pop
jne
mov
leave
xchg
cwtl
mov
mov
pushf
xor
adc
loopne
inc
aad
push
push
outsb
or
neg
mov
mov
xchg
stos
aaa
in
xchg
push
loopne
xchg
push
jmp
fisttpll
and
xlat
pusha
push
clc
pop
jecxz
dec
or
lcall
mov
fnsave
int
daa
cmp
dec
and
inc
xor
sbb
into
addr16
ss
dec
adc
aam
adc
inc
and
jae
sbb
fwait
loope
mov
xor
dec
dec
cmp
pop
pop
push
aaa
dec
mov
inc
mov
rsm
outsb
cmp
dec
pop
xchg
add
popl
push
cmp
add
leave
inc
or
ja
and
pop
lea
and
adc
xchg
lea
outsb
adc
out
cmp
in
adc
pop
xchg
jg
cld
xor
cmp
mov
pushf
test
sbbb
push
mov
fisttpl
out
cmc
push
in
nopl
fs
sub
jge
mov
inc
or
add
stc
testl
lea
mov
or
arpl
addr16
lea
or
mov
hlt
sub
test
mov
xchg
cltd
stos
cmp
dec
popf
cmp
sub
adc
mov
push
dec
mov
es
loopne
push
imul
or
popf
xchg
jns
fstpl
dec
mov
jl
jns
lahf
xchg
inc
les
ret
mov
jne
orb
push
stos
shlb
pop
sub
pop
mov
out
ret
pop
movsl
sbb
mov
test
popa
jmp
daa
decb
jo
repz
inc
int3
jbe
xor
jo
push
mov
sbbb
xor
jge
jl
jbe
daa
dec
ljmp
mov
jo
nop
test
xchg
fldt
push
inc
in
cmp
and
inc
sub
in
jecxz
mov
sub
negl
jae
shr
add
dec
sub
test
mov
jb
mov
inc
aam
inc
fcompl
test
mov
jecxz
scas
int
adc
aas
iret
inc
xchg
sub
stc
sti
popa
enter
ret
inc
jmp
add
adc
inc
mov
nop
popa
addr16
stos
cmp
mov
cmpsl
pop
test
xor
cltd
jno
imul
jo,pt
fcompl
dec
add
incb
and
inc
sub
aam
mov
and
pop
loope
jb
xchg
and
out
cmc
mov
xchg
scas
mov
cmp
inc
add
gs
in
mov
adc
std
xor
aaa
add
mov
scas
popf
mov
mov
push
sbb
xchg
outsb
mov
orl
push
dec
std
and
cs
imul
sbb
push
aad
ja
data16
mov
jmp
stos
jle
adc
out
xor
fcomip
testl
dec
sbb
fwait
pop
int3
ds
xor
imul
mov
lret
pop
mov
add
jb
dec
sbb
fst
mov
scas
sbb
in
inc
icebp
mov
popa
pop
sti
or
repz
jl
pop
fcompl
jmp
push
pop
popf
rcl
lcall
cmpsl
mov
jae
or
xchg
pop
mov
xchg
mov
mov
add
sub
pusha
mov
aad
pop
xlat
lods
xor
jl
xor
lret
imul
push
aas
mov
xchg
out
xchg
dec
imul
test
jno
xchg
push
iret
lret
xchg
and
cltd
jecxz
xchg
mov
test
in
jno
add
ljmp
out
push
cwtl
mov
pop
cld
outsb
mov
jecxz
xor
push
sbb
dec
inc
and
shrl
cmpsl
adc
movsb
pop
in
dec
cmp
repnz
lret
jge
adc
les
xor
xor
stc
push
push
aad
lret
or
in
sub
and
push
int3
rcrl
xchg
push
lcall
sbb
xchg
aas
jg
or
push
mov
mov
insl
sub
push
mov
mov
hlt
divl
sub
aas
pop
stos
rolb
and
out
xor
mov
adc
das
stos
vmread
in
nop
jo
pop
scas
and
mov
std
int
and
scas
jo
xchg
cmp
adc
xor
into
sti
bound
or
aad
xor
lcall
push
loope
ret
xor
sahf
jg
out
xor
not
jmp
add
mov
xchg
js
mov
mov
jb
push
adc
jge
cli
arpl
icebp
insb
popf
insb
jmp
sub
data16
inc
fldenv
mov
repnz
ljmp
addr16
gs
movsl
gs
push
popf
lcall
inc
mov
out
pop
sub
or
push
jo
daa
push
sbb
fnsave
cmp
fmul
jns
adc
sub
movsl
outsl
mov
adc
xchg
sbb
and
push
adc
je
pop
rcrb
inc
jae
sbb
jge
mov
movsl
mov
pop
jmp
xchg
dec
xchg
lret
out
cmp
cmc
cmpb
push
outsb
bsr
ret
iret
cld
dec
mov
xchg
jae
bound
cwtl
fdivl
popf
lret
xchg
dec
lret
cs
dec
cli
aad
jno
loopne
xorl
and
and
add
cmp
test
inc
sub
mov
pop
cmc
fistpll
mov
lods
fcmovne
into
cmp
inc
loop
negl
fs
mov
mov
mov
adc
fsubl
int
jne
int
test
lcall
sti
push
aam
pop
gs
cmc
adc
sar
out
lock
sti
hlt
pop
xchg
or
mov
adc
jae
and
test
xchg
xor
iret
and
cs
jae
iret
xor
adc
int3
ss
enter
std
xchg
sub
clc
jp
xorb
ret
push
movsl
sub
inc
lret
movsb
cmc
dec
xchg
je
lds
adc
or
scas
cmp
adc
cmp
xor
fwait
push
test
aad
push
xchg
inc
inc
insb
jb
mov
lret
cmpsb
mov
mov
cmp
push
scas
mov
xchg
pop
or
inc
mov
imul
das
repnz
out
mov
fisubl
outsb
sbb
inc
mov
cli
clc
jp
jecxz
and
inc
outsb
movsl
mov
fnstenv
mov
dec
aaa
sbb
jecxz
mov
push
mov
div
in
lcall
mov
sbb
jbe
jbe
mov
push
dec
jl
xchg
jae
adc
pusha
xor
pop
inc
xor
addr16
jno
scas
nop
fwait
lods
mov
adc
enter
shlb
sub
jno
enter
sahf
testb
mov
inc
cmpsl
pop
jecxz
add
dec
mov
in
xor
iret
push
aaa
or
fadd
dec
fsubrl
in
std
add
or
iret
and
pop
inc
lahf
xchg
mov
lods
fmull
and
cmp
mov
icebp
or
jo
mov
or
std
xchg
mov
daa
mov
fcomi
rcrl
jmp
mov
insb
push
cmpb
inc
insl
sti
inc
add
inc
rcrl
into
ss
movsb
sbb
pop
pop
nop
inc
outsb
push
cli
add
inc
xor
xorl
mov
cmp
inc
dec
sbb
lods
xchg
mov
stc
bswap
adc
xor
xor
scas
push
inc
mov
dec
dec
adc
push
xor
or
mov
push
in
push
dec
shl
ret
mov
cltd
push
push
jnp
lret
inc
iret
sbb
arpl
push
push
xor
dec
xchg
xor
das
sbbb
ror
mov
jne
adc
in
or
lcall
stos
scas
sbbl
push
and
ljmp
testl
cltd
lret
sbb
sbb
rep
and
and
or
sahf
shrb
jmp
lock
xor
in
push
std
fs
mov
adc
mov
push
cld
jp
jp
push
mov
sahf
lret
pop
mov
and
dec
int3
sbb
xor
adc
push
lock
push
sbb
rorl
in
daa
inc
dec
sbb
das
push
xor
add
sahf
addr16
xchg
fs
sbb
or
leave
jno
call
push
sar
xchg
int3
xlat
call
das
subl
fwait
shlb
stos
push
jb
push
push
mov
fs
mov
outsb
mov
mov
adc
arpl
add
adc
stc
xchg
adc
adc
cs
xchg
xchg
movsb
faddl
sbb
out
daa
sub
mov
pop
mov
mov
sub
or
pop
sbb
and
movsl
out
mov
fistpl
push
stos
jmp
lods
cmp
fisttpll
jno
sub
iret
inc
pop
insb
popf
dec
mov
push
add
std
pop
adcl
movl
test
push
popf
aad
stos
dec
test
mov
mov
loope
sbb
dec
jmp
xchg
jle
mov
in
adc
loopne
cmp
lret
dec
xlat
sub
xchg
mov
out
lea
int3
out
mov
insl
inc
sarb
inc
add
pop
push
cmovne
ljmp
inc
shrb
inc
jbe
js
jg
call
pop
lock
push
dec
mov
insb
push
clc
dec
leave
repz
pop
cmc
pop
stos
lret
shrb
aam
inc
cwtl
andl
jae
jmp
out
icebp
inc
sub
push
cs
jmp
ret
cld
lahf
inc
or
cmp
es
pop
dec
lock
lock
mov
mov
in
cmc
xor
xchg
mov
mov
jge
ret
dec
ds
jmp
iret
sub
imul
rolb
cltd
arpl
ss
pop
test
xchg
xchg
sahf
lcall
dec
push
cmpsl
mov
clc
fisttps
outsb
jmp
scas
loope
ss
adc
aam
inc
inc
mov
push
ret
daa
fadds
pop
push
cmpsl
stos
xchg
lock
loop
jbe
test
xchg
lock
fs
mov
imul
sbbl
add
cmpl
mov
mov
cwtl
inc
ret
jp
mov
leave
inc
mov
int3
js
pop
ficoml
notl
jne
lods
or
js
addr16
sbb
jg
enter
mov
sub
jae,pn
and
rcrl
pop
mov
insl
adc
mov
loope
jnp
out
push
pop
mov
leave
or
mov
sub
ds
jne
stos
leave
in
push
icebp
add
dec
pop
dec
test
mov
pop
inc
lcall
in
dec
outsl
push
lea
sahf
jbe
adc
rcll
adc
es
or
dec
sub
pop
cmp
dec
stc
mov
movsl
movsl
mov
loopne
sub
clc
movsb
or
insb
clc
add
mov
mov
xchg
cwtl
lds
and
or
pop
jmp
pop
xor
push
shll
lods
add
add
sub
xor
cmp
fmuls
fiadds
and
clc
add
cmovl
addr16
int3
sar
push
rcr
mov
arpl
inc
and
movsb
sbb
sub
cmpsl
fs
je
clc
inc
into
jo
jp
cwtl
sub
mov
movsb
iret
fisttpll
cmpsl
sbb
mov
lds
ljmp
cmp
inc
pop
sub
cli
and
sub
mov
and
mov
popf
pop
jg
mov
js
movsl
jg
xchg
add
mov
push
shlb
jp
jg
and
sbb
addr16
pusha
ljmp
push
scas
sub
adc
bound
xor
js
jge
jge
mov
xchg
fcoms
push
xchg
dec
xchg
lods
popf
in
sbb
iret
stos
add
jg
xchg
loope
fildll
jno
add
in
pop
movsb
adc
mov
mov
enter
ret
popf
adc
mov
shlb
dec
ljmp
lds
iret
jg
aaa
fdivrl
aas
cmpsb
cmp
fcomps
shlb
or
scas
cmp
xor
bound
push
ret
xor
inc
outsb
mov
add
sahf
test
cs
sbb
das
push
js
mov
jp
push
ret
push
enter
lea
mov
int3
xor
inc
addr16
push
push
mov
shll
dec
xchg
add
lds
cmp
xchg
push
adc
das
pop
leave
js
inc
mov
into
sbb
or
in
mov
dec
fidivrs
lahf
repz
popa
cmp
push
les
ljmp
loope
in
cli
out
adc
mov
mov
mov
or
push
fstpt
mov
cmpsb
mov
stc
xchg
mov
out
jge
push
push
and
gs
push
jbe
shlb
mov
cli
inc
in
neg
or
mov
jmp
or
or
adc
mov
lea
mov
ffreep
xor
or
and
out
jg
inc
rorb
mov
bound
pop
clc
mov
push
pop
adc
lock
inc
jg
adc
test
sahf
pop
or
sbb
dec
popf
mov
test
adc
pop
xlat
jl
mov
into
sbb
fmulp
repnz
mov
or
dec
and
mov
stos
adc
cli
push
clc
test
inc
hlt
out
cmp
jp
fmull
cwtl
xchg
pushf
and
cmp
add
je
push
mov
or
out
inc
popf
daa
clc
xchg
mov
loop
add
xchg
scas
shl
xchg
rcll
push
mulb
pop
adc
inc
or
orl
notb
out
adc
mov
ffree
ja
pop
adc
mov
sub
xadd
or
aam
mov
loope
outsb
adc
push
jge
ds
pop
sub
negl
mov
bound
and
ja
test
cltd
shrb
push
jno
movsb
mov
and
mov
mov
or
sub
dec
sbb
and
aad
orb
out
lods
push
mov
mov
pop
leave
cmp
xchg
and
adc
cmp
sub
fstpt
and
cmp
adc
mov
jo
add
push
outsb
int
lods
pop
or
dec
mov
es
imul
inc
mov
clc
loope
pop
push
sub
mov
lods
mov
mov
das
fcmovnb
mov
pop
gs
cltd
repz
dec
dec
pop
sub
adc
scas
ror
pop
xchg
aad
stc
add
mov
int3
cmp
ret
add
pop
jnp
dec
in
or
mov
cli
push
aam
xchg
xchg
inc
mov
lcall
fwait
sbb
cmp
rclb
sete
std
or
fcoms
movsl
xor
jge
xchg
fldenv
jns
inc
cwtl
add
ds
cmc
mov
inc
inc
das
rcl
in
xorb
dec
inc
and
inc
arpl
or
push
xor
ss
or
push
daa
addr16
xchg
mov
pop
push
xchg
sahf
jle
sarb
daa
sub
loop
loope
ja
sbb
jne
in
lret
aad
testb
dec
inc
or
and
out
cltd
add
and
shrb
push
mov
mov
mov
adc
push
into
ljmp
jae
inc
add
pop
adc
nop
dec
or
pop
or
sbb
test
mov
add
sbbb
push
rclb
sbb
dec
xchg
clc
dec
shlb
fidivs
fcoms
aam
xor
jns
pop
sub
scas
clc
cli
mov
and
bound
dec
fildl
jno
pop
lret
xor
xchg
mov
outsl
mov
sbb
sub
cli
daa
dec
xchg
sbbb
xchg
mov
pop
lcall
ffreep
inc
jo
fs
xchg
inc
and
sti
in
jmp
jl
pop
shll
or
adc
and
addb
mov
or
xchg
mov
mov
stos
jns
or
lret
or
sub
sbb
mov
adc
fiaddl
dec
call
xchg
ret
dec
jne
adc
icebp
or
and
add
and
test
test
popf
popa
test
int3
pop
aaa
cmp
loope
mov
enter
push
xchg
xchg
mov
push
fnstcw
push
dec
inc
jmp
sub
jmp
clc
mov
sarb
fwait
jecxz
mov
lea
sbb
and
fscale
pop
in
cmp
sbb
mov
sbb
ljmp
repnz
inc
mov
or
fstpt
sub
pusha
fstps
adc
subb
dec
lods
and
cmp
jbe
inc
mov
fsubl
fisubrs
or
scas
or
stc
cmpsl
push
std
sbb
scas
fldcw
arpl
push
jo
in
cld
loop
jl
jecxz
jp
jns
pop
in
pop
add
les
dec
xchg
pop
push
dec
cwtl
inc
dec
lods
lret
sbb
push
adc
or
xor
sub
aam
test
inc
rorl
pop
scas
sbb
inc
js
mov
fwait
dec
cmpb
js
mov
jne
movsl
scas
repnz
sub
das
clc
xchg
pop
arpl
mov
push
push
mov
hlt
in
fprem
sub
cmp
cmpsb
sub
sbb
repnz
int
ret
pop
test
jnp
gs
push
out
cld
repnz
xor
or
leave
mov
outsl
jle
adc
ret
xchg
ja
add
pop
cmp
push
push
mov
stos
mov
lret
or
lea
lods
jmp
std
rclb
loopne
js
je
inc
call
aas
pop
icebp
push
inc
aad
hlt
popf
invd
inc
leave
sbb
xlat
loopne
loope
sub
jmp
push
sti
testl
push
fs
subb
lds
sbb
cmp
mov
inc
inc
xchg
inc
pop
outsl
loope
cld
mov
jmp
mov
jns
xchg
clc
repz
mov
jl
lods
out
sub
lret
mov
sar
jo
xor
pop
inc
nop
mov
add
mov
mov
or
mov
int
sub
rol
movsl
pop
mov
jbe
push
sahf
ljmp
js
ljmp
mov
mov
xor
xor
popf
shrl
adcl
push
xchg
gs
sbb
movsl
repnz
mov
mov
lods
insb
pop
mov
mov
push
les
lcall
ficomps
nop
dec
inc
call
or
sub
add
sub
sub
sub
lds
push
pop
pop
push
mov
sahf
and
popa
jae
xchg
shll
loope
pusha
jg
xor
mov
inc
and
cmp
icebp
addl
xchg
jae
and
clc
movsb
outsl
sti
int
rcrl
nop
lret
sub
sahf
int
clc
and
jnp
fyl2x
loop
rcrl
int3
or
and
data16
sub
inc
ret
mov
dec
and
mov
add
add
sti
mov
xchg
sbb
sbb
inc
add
fwait
and
xchg
or
cmp
aam
cmpsl
mov
jg
sbb
outsl
and
mov
stos
xchg
in
enter
sbb
xor
jg
jge
clc
pop
aaa
into
cmp
xor
cmpsb
ss
and
sub
iret
aas
inc
je
jmp
xlat
rcrl
pop
stos
mov
outsb
mov
dec
out
cwtl
pop
mov
sbb
or
adc
clc
mov
aas
xchg
fcmovbe
lds
push
cmp
mov
cmpsb
xor
dec
rcrb
mov
and
mov
cwtl
call
je
rclb
movsb
lods
lret
mov
mov
sti
pop
shrb
fnstcw
clc
js
daa
xlat
sti
push
sbb
jnp
cmp
idivb
dec
adc
hlt
add
mov
fadds
sbb
je
cltd
arpl
lods
pop
mov
fisubl
push
mov
cmp
mov
sub
sbb
jp
push
clc
fwait
cltd
fcompl
outsl
adc
test
add
in
adc
push
in
mov
push
fsub
sbb
stos
pop
in
push
jmp
or
bound
sbb
xchg
js
movsb
inc
mov
and
fs
xchg
mov
pusha
push
fldl
mov
push
cmp
outsl
jnp
jns
push
add
inc
ffree
js
sub
fwait
lock
scas
dec
adc
pop
sub
stos
push
popf
imul
sbb
fs
push
fistpll
add
or
es
xchg
push
adc
ds
iret
mov
das
xor
in
rclb
aaa
outsb
pop
xchg
cli
mov
jp
ljmp
sahf
mov
push
movsb
mov
mov
jne
mov
cmp
xor
adc
bound
ror
cmpb
iret
push
rcrl
jmp
rcrb
inc
pushl
lcall
add
ret
loope
in
scas
lds
fstl
sbb
test
test
cli
jg
stos
in
push
in
int3
pop
push
xchg
and
sub
negb
loopne
sbb
adc
or
mov
jmp
push
pop
mov
cmp
xor
cld
test
icebp
mov
sub
fdivl
test
xor
or
inc
test
add
out
cmp
fs
imul
gs
adc
gs
rcll
mov
pop
and
push
lods
ret
or
lret
inc
push
addb
or
insb
arpl
xchg
ja
mov
adc
addr16
shlb
or
jnp
arpl
xor
rorb
add
dec
inc
rcrb
and
dec
stos
cmp
cmp
pop
and
pop
mov
jg
les
dec
mov
lock
rcll
push
bound
stos
cmpsl
inc
fdiv
inc
cmp
xlat
aas
ja
int3
test
and
pop
pcmpgtb
in
or
and
and
xchg
leave
outsb
stc
rorb
dec
pcmpeqw
cs
cmp
addr16
push
mov
jbe
addr16
sub
xchg
rcr
xor
sub
roll
add
dec
adc
adc
add
push
xlat
cld
fisttpl
mov
xor
jbe
dec
and
mov
cltd
mov
push
gs
lret
sbb
xchg
je
push
arpl
add
xchg
mov
mov
addr16
hlt
stc
dec
inc
aas
sbb
xor
pop
jo
lock
pop
or
jbe
mov
jg
popa
dec
out
rcll
fcomps
sbbb
mov
add
addl
fnsave
pushf
out
jp
pop
cmc
sub
jge
movsb
frstor
lods
fwait
cmp
push
std
movsl
lds
xor
test
testb
test
lock
out
inc
mov
std
cmp
or
leave
test
pop
iret
arpl
sbb
out
cli
cmpsl
mov
push
pushf
mov
call
loop
stos
movsl
jl
inc
ja
mov
in
imul
pop
hlt
fyl2x
xor
sbb
pop
call
mov
into
dec
pop
xchg
icebp
sbb
mov
or
push
push
xchg
xchg
adc
cltd
in
insl
pop
out
mov
inc
in
cltd
lcall
ja
dec
mov
mov
jne
aad
addr16
and
adcb
jo
cmp
jmp
jmp
dec
mov
push
sti
or
inc
or
pop
fistps
out
adc
loop
inc
dec
aaa
cmc
stos
std
andb
cmpl
sbb
aad
or
and
in
xchg
mov
adc
nop
incb
ret
pop
repz
pusha
sub
or
add
push
hlt
adc
sub
ret
jno
shll
ficoms
cmc
inc
es
lret
inc
movsl
sub
mov
pop
lret
dec
jle
fstpt
ja
fwait
mov
dec
gs
xor
mov
pop
icebp
cli
sbb
mov
and
and
pushf
mov
stos
aad
adc
push
sub
pop
inc
adc
js
sbb
pop
sub
aaa
insl
mov
sar
mov
ret
jg
push
aas
test
ret
push
repnz
mov
out
jp
cmp
adc
icebp
inc
scas
jbe
dec
mov
bound
push
and
repz
test
cli
andl
int3
je
les
jne
fisubrs
test
push
popa
ja
mov
cmpsb
push
outsl
enter
push
bound
testb
add
addr16
jecxz
mov
mov
repz
push
cli
xchg
dec
jne
mov
dec
emms
xor
adc
inc
pop
jno
dec
sub
jb
add
sub
and
cmpsl
inc
aas
lods
scas
loopne
or
xchg
data16
xchg
or
sub
pop
loope
lahf
xor
pop
push
cli
movsl
addr16
cmp
in
repnz
sbb
and
and
arpl
jb
subl
gs
arpl
and
pusha
cmpsl
fldenv
clc
xchg
xchg
and
and
cld
jno
jg
mov
outsb
lea
xor
ds
adc
add
sub
ffree
addb
mov
subb
pop
stos
cltd
mov
or
push
adc
out
fwait
push
mov
or
fsts
cmp
add
mov
or
pop
pop
in
loope
test
pop
push
in
pop
movups
pop
xor
fdivr
xchg
fisttpl
xlat
scas
repz
dec
mov
cld
adc
cmp
mov
fstps
sahf
ret
adc
or
and
test
mov
negb
add
loopne
xchg
mov
mov
jae
daa
fmull
cmp
add
aad
inc
jae
jb
xchg
aaa
mov
ret
ret
xchg
mov
aad
hlt
mov
std
lds
loopne
push
add
daa
insb
idivl
pop
das
push
mov
dec
mov
mov
or
xchg
mov
out
sahf
cmpb
enter
adc
das
roll
cltd
cmp
leave
lods
stos
pop
inc
insl
ficoml
filds
adc
xchg
or
adc
inc
push
repnz
out
mov
scas
jns
sbb
sub
dec
mov
fdivs
bound
mov
mov
xchg
jns
xchg
mov
scas
mov
mov
xchg
xor
pop
aad
mov
mov
add
repz
push
jle
push
cmp
inc
adc
cs
push
test
dec
les
cltd
mov
cmp
xor
mov
xor
bound
push
cmp
mov
shlb
ret
iret
cmp
pusha
ds
jl
push
test
sbbl
jo
push
mov
xor
ljmp
xchg
ret
xchg
or
xchg
xlat
rorb
dec
add
lea
adc
dec
sahf
shll
rolb
sbbl
or
mov
fsts
jo
or
mov
cli
ja
xchg
fwait
and
hlt
jne
aaa
cmp
pop
mov
loopne
inc
ljmp
push
dec
jmp
je
mov
xchg
ret
loop
adc
cltd
test
sbb
mov
in
in
add
icebp
bound
xor
inc
nop
loopne
aas
std
add
int3
fldt
mov
aaa
outsb
cmp
pop
mov
dec
sub
loop
cs
mov
cltd
out
fmul
test
xchg
mov
test
in
mov
mov
xorl
jp
in
imul
jp
dec
pandn
shll
lods
jp
pop
push
gs
or
js
xor
arpl
and
into
adc
mov
sbb
scas
add
mov
dec
movsb
add
call
xor
ret
mov
fsub
mov
testb
pop
dec
out
out
add
fcomi
inc
xlat
lds
in
cmp
fidivrs
sbb
push
andb
or
jne
add
pop
jo
mov
sub
sbb
cmp
dec
cmp
mov
lret
mov
outsl
scas
pop
cmp
add
out
ret
cmp
iret
or
insl
notb
mov
sub
push
lret
push
pop
ljmp
push
rcl
lds
rolb
mov
xor
inc
jns
sub
divb
jo
mov
push
sub
sub
sbb
jg
aam
in
cmpsl
pop
mov
mov
jo
dec
cmp
jne
cmp
das
test
pop
mov
pop
jge
lcall
cmp
cmpsb
add
inc
ror
push
icebp
add
pop
dec
jno
out
add
jmp
adc
jo
fcomps
push
leave
test
jb
mov
adc
push
push
dec
int
shrl
into
out
aas
jo
inc
cs
push
shr
gs
sbb
cmp
mov
jmp
mov
mov
testb
leave
xor
cmp
mov
push
pop
xchg
testb
mov
add
mov
insb
sbb
in
add
xor
sbb
sbb
push
xor
mov
js
enter
jae
int
cli
add
icebp
pushf
repz
mov
gs
pop
push
cmpsl
jle
test
in
scas
jle
add
or
dec
sub
and
push
lods
dec
mov
jge
xlat
mov
cmpsb
aam
lahf
pop
push
in
jmp
or
mov
outsb
in
inc
test
loop
xchg
data16
bound
test
cmp
jge
adc
xor
orb
movsl
jns
jmp
xchg
ficompl
jl
subb
addb
xchg
xor
mov
jl
lock
or
ret
jae
int
faddl
and
arpl
adc
pop
jmp
push
mov
fisubrl
mov
or
into
xor
push
cmpsl
fstpt
jecxz
xchg
cmp
push
add
jmp
gs
add
pop
sub
xlat
outsb
mov
jo
pop
mov
addr16
jp
push
mov
jg
rorb
mov
mov
mov
or
or
inc
fsub
mov
inc
push
push
in
shll
mov
inc
mov
cmpsl
or
leave
std
ljmp
inc
and
inc
xor
sbb
xor
stos
mov
icebp
mull
sbb
and
adc
nop
pop
cwtl
add
xchg
movsl
dec
in
pop
jne
pop
mov
push
mov
push
jns
cmp
cmc
or
test
push
push
lret
pop
mov
xchg
in
js
push
sub
dec
mov
repnz
dec
rsqrtps
aaa
xchg
adc
mov
dec
les
sti
mov
xacquire
lods
shrl
or
add
jno
mov
ret
lahf
jo
push
mov
cmp
imul
ja
ja
adc
ja
lock
xor
inc
bound
in
enter
ljmp
sbb
clc
sbb
addr16
mov
adc
movsb
xlat
and
xchg
sub
or
cli
mov
les
roll
jno
fadds
in
push
xor
jo
mov
mov
out
mov
xor
movsl
and
cmp
imul
sub
fsubl
push
inc
nop
jns
lods
cmp
imul
test
pop
sbb
cmpsw
inc
or
mov
cmp
in
push
push
movsb
jmp
ret
lret
test
add
mov
inc
cmp
sbb
jne
lea
push
movsl
mov
ret
sub
sti
jno
push
imull
popa
test
push
mov
lods
mov
jecxz
loopne
pop
inc
inc
mov
sub
hlt
sti
mov
inc
jl
je
pop
imul
sti
push
mov
in
out
es
call
mov
cltd
sbb
mov
into
jle
mov
mov
sub
xchg
vpackuswb
clc
inc
mov
mov
inc
xor
adc
dec
notb
ja
push
es
mov
inc
xchg
lret
pop
scas
addl
test
inc
cmp
sbb
adc
push
in
jmp
rolb
mov
jmp
nop
fmuls
xor
insb
arpl
fisttpll
cmp
decb
sbb
outsl
xchg
xor
sti
jle
mov
mov
mov
ds
negb
mov
movsl
jl
and
aaa
negb
push
add
sub
inc
test
popf
ljmp
and
jae
jmp
dec
orb
dec
ret
imul
or
loopne
sbb
xchg
inc
or
into
jae
add
ja
data16
pop
add
test
inc
mov
pop
mov
add
adc
push
loope
mov
fsub
fstl
jg
orl
lret
lock
movsb
aad
jo
adc
in
repz
fwait
aaa
push
stc
orl
lahf
cld
jne
xchg
loopne
jno
das
mov
mov
xor
call
daa
and
leave
push
daa
cmp
lret
int
mov
andb
push
inc
mov
mov
je
mov
push
sbb
ljmp
lock
mov
pop
int3
repz
mov
xchg
pop
jge
cltd
inc
or
and
xchg
lcall
cmovb
inc
test
dec
insb
loop
add
outsl
mov
js
into
or
arpl
sbb
jns
xlat
sarb
jle
fcmovnbe
jns
push
xchg
lock
xchg
dec
sub
mov
xchg
mov
icebp
pop
call
mov
pop
inc
mov
dec
add
test
sub
std
sub
xchg
mov
sub
int3
popa
loopne
jo
insb
dec
jae
push
cli
mov
test
jl
sbb
rclb
dec
mov
fisttps
lods
jo
popa
gs
or
aaa
dec
push
adc
cmp
push
push
stc
xchg
jns
test
xlat
int
sahf
movsl
sarb
int
mov
shlb
adc
insb
cmp
mov
mov
and
cltd
add
push
add
pcmpgtb
push
jno
jmp
inc
psrlq
xchg
pop
xor
repnz
xchg
imul
clc
ljmp
inc
jecxz
cwtl
inc
fcompl
fisubl
popf
mov
in
or
mov
push
lahf
xchg
pop
movsl
sbb
mov
popa
mov
les
pop
mov
js
cltd
aas
inc
jmp
aam
call
mov
and
cs
jp
lock
push
scas
arpl
sbb
dec
lahf
xchg
sub
or
out
std
or
xchg
inc
add
icebp
out
jne
or
fimull
ss
pushf
adc
pop
jns
mov
pop
shl
movl
pop
pop
and
arpl
jae
imull
mov
insb
cmp
xor
or
sti
mov
pop
faddl
push
dec
outsb
dec
in
mov
inc
mov
mov
ds
push
jecxz,pt
and
in
pop
hlt
sahf
or
sahf
ret
mov
lcall
or
xchg
add
pop
push
inc
lock
mov
jnp
mov
sti
ljmp
ss
test
adc
push
fdivr
push
push
jns
sub
loop
adc
pop
sub
xor
xchg
clc
mov
mov
jae
mov
fnstsw
mov
cmpsl
xchg
and
adc
xchg
fadd
pop
and
jle
push
xchg
test
pop
mov
pop
scas
in
aas
inc
xchg
mov
ljmp
add
jae
ret
mov
js
pop
jge
cs
mov
xor
xor
das
pop
xchg
repnz
sub
subb
xchg
scas
fimuls
mov
fmuls
scas
int3
fmuls
test
aad
mull
jns
mov
cmc
and
iret
xor
pop
fs
jnp
mov
lock
cmp
xchg
out
lds
add
mov
mov
push
push
xchg
std
test
sub
jno
out
mov
repz
imul
ss
mov
scas
jns
mov
ds
inc
jb
movsb
notl
mov
aas
mov
pop
hlt
inc
jae
icebp
imul
cmpsb
xchg
and
push
pop
fimuls
sbb
inc
push
jns
test
xor
in
jnp
imul
out
pop
cmpsb
pop
ljmp
call
popf
add
pop
add
xchg
mov
dec
xchg
jge
push
in
outsl
pop
add
mov
add
sbb
stos
enter
fwait
mov
mov
push
out
jae
fwait
jecxz
push
std
pop
jo
int
fs
mov
xlat
test
xchg
lods
mov
insb
push
jg
jmp
jmp
or
push
ja
mov
inc
xchg
xchg
cmp
push
inc
pop
or
data16
arpl
add
adc
lahf
fsubr
xchg
add
es
imul
and
sbb
call
inc
sahf
sbb
sbb
or
lds
add
sarl
in
cmp
jge
or
xor
push
sub
adc
cmp
xor
xchg
mov
push
jg
mov
je
imul
stos
idivb
xchg
add
fadd
cwtl
sub
insb
leave
jb
jnp
hlt
int3
pop
inc
adc
dec
push
cmp
mov
out
or
rolb
dec
jecxz
scas
jne
cmp
and
in
dec
cmp
in
adc
loope
xlat
xor
adc
repz
xor
call
jo
sub
cwtl
in
call
aam
fisttps
inc
inc
dec
sub
sbb
cmp
mov
mov
inc
push
int
mov
outsb
adc
xchg
mov
insl
aaa
xor
shrl
sbb
nop
mov
inc
sbb
or
imul
aam
xor
popl
pop
pop
xchg
xlat
dec
mov
push
stos
or
stc
insl
daa
xchg
xchg
pop
imul
add
dec
das
fs
cmp
cltd
pop
inc
and
pop
pop
scas
mov
jl
adc
push
xchg
out
lea
inc
mov
fildll
pop
mov
cltd
stc
inc
or
jmp
sub
adc
repz
int3
inc
and
ret
sub
int3
or
add
stc
xor
mov
and
inc
mov
dec
mov
sbb
inc
xor
or
xchg
cmp
push
outsl
push
lock
sub
sbb
inc
shll
shrb
imul
icebp
leave
movsb
in
add
out
inc
shl
and
scas
inc
lahf
inc
cwtl
hlt
fisttpl
call
xor
pop
pusha
bound
div
cld
scas
xor
push
dec
ds
dec
cmpsl
icebp
mov
sbb
mov
ss
jg
shlb
sbbb
push
inc
and
mov
jmp
mov
inc
movsb
ljmp
add
mov
insl
mov
divb
push
mov
daa
or
add
mov
mov
inc
mov
lret
arpl
lret
mov
add
push
pop
leave
jp
xchg
add
fsubp
mov
inc
xor
adc
cmpsb
and
xlat
fimuls
loope
out
insb
xor
jnp
adc
cmpsb
aad
enter
sahf
dec
lret
fimuls
ss
test
sub
sub
loop
add
mov
xchg
repz
pop
int3
adc
xchg
inc
jge
loopne
sbb
pop
scas
insb
subl
inc
and
inc
out
mov
lods
mov
dec
jle
push
push
mov
inc
les
arpl
lahf
push
xorl
sub
xor
mov
leave
jg
inc
add
adc
lcall
mov
cmp
insb
mov
add
cmp
jbe
pop
test
rcl
repz
adc
sti
sahf
add
jp
jno
mov
xor
hlt
mov
xor
mov
cmpsl
push
push
out
jmp
lock
pop
int
in
xor
mov
pop
clc
adc
loop
js
mov
sbbl
movsl
flds
fwait
daa
pop
shlb
pop
xor
inc
inc
inc
dec
mov
cmp
addb
cld
shl
mov
mov
mov
mov
mov
ljmp
imull
inc
popa
push
movsb
and
pop
aad
or
cld
movsb
loop
push
mov
rorb
dec
repz
int3
cwtl
mov
sarb
jl
pop
mov
push
mov
addb
push
int3
data16
add
jmp
out
out
sbb
add
mov
mov
inc
mov
dec
cmp
pop
insl
mov
cmpsl
iret
push
out
mov
xor
adc
pop
fcoml
pop
daa
pusha
test
loope
jle
inc
fdivr
jge
rcll
cmp
pusha
std
push
hlt
test
pusha
cli
popf
xchg
xchg
and
fs
mov
in
add
and
addb
add
lret
fstpl
push
xor
mov
xor
repnz
mov
adc
into
popf
rcll
hlt
pop
pop
popf
push
lahf
sbb
xchg
jbe
ficoms
push
les
add
xchg
add
or
sbb
xor
xor
aam
movsl
movsb
xor
or
xchg
ljmp
repz
push
repz
inc
lret
int
xchg
clc
cli
sub
ret
xchg
jle
test
leave
jbe
push
lds
testl
out
in
mov
mov
cmc
sub
jns
fs
fbld
sub
in
or
mov
lea
sub
or
pop
sub
scas
inc
jle
or
pop
cmc
inc
push
push
dec
sub
push
push
mov
adc
sbb
jmp
pop
rclb
inc
fisubs
scas
pop
or
jecxz
popf
ret
or
clc
sub
inc
push
in
ss
xchg
bound
insb
test
xor
fsubrl
ja
in
add
and
sarb
pop
inc
or
jne
sar
movsl
pop
adc
loop
mov
shl
movsl
ucomiss
xchg
add
mov
pop
cmp
mov
jg
push
test
or
daa
jmp
jmp
pop
sbb
dec
jbe
add
cltd
js
cmp
das
dec
jno
push
leave
jae
pop
cmp
lret
jmp
test
sub
xchg
and
lods
loope
sub
cmp
sub
lods
roll
or
or
stc
lock
rclb
and
lods
ljmp
enter
aas
pop
xor
mov
jno
mov
popf
inc
dec
mov
push
jp
in
inc
jnp
lock
add
rorb
xchg
mov
mov
sbb
stos
xchg
pushf
cmp
mov
hlt
aaa
xor
mov
mov
xor
mov
les
xor
push
xor
lock
push
xchg
test
fisttpl
and
cli
leave
jnp
fwait
pusha
call
insl
mov
in
popa
jae
decl
repz
les
adcl
push
dec
pop
jae
in
push
imul
ljmp
sub
and
movsl
sbb
xchg
inc
jl
mov
cmc
scas
mov
fldenv
sarl
sbb
je
add
adc
jg
pop
loope
mov
mov
idiv
add
dec
dec
xor
stos
clc
out
lds
push
cltd
xlat
pop
scas
std
jle
push
push
jns
dec
cmc
hlt
and
xchg
inc
sbb
xor
shll
testl
xor
test
sub
dec
jmp
add
sub
mov
in
fst
insl
nop
jl
dec
pop
dec
test
mov
pop
cmp
mov
jnp
adc
xchg
xchg
inc
mov
sbb
mov
in
test
inc
lahf
mov
aas
mov
pop
dec
push
inc
sbb
imul
inc
adc
jle
jo
pop
lds
pusha
mov
jge
and
push
imul
xchg
aas
test
test
push
lret
mov
in
mov
inc
in
lods
sbb
inc
and
xchg
mov
dec
add
cmp
enter
mov
push
mov
shl
jb
lods
mov
cmpl
imul
push
hlt
cld
imul
cmc
std
loopne
subl
std
push
test
bound
adc
fnstsw
call
lods
adc
adc
lahf
jp
fbld
inc
in
sti
mov
test
sbb
inc
aas
mov
and
xchg
cmp
lcall
push
shrl
in
pop
mov
cmp
mov
fcmovnb
repnz
mov
cs
je
xchg
push
dec
mov
mov
push
mov
jns
pop
insb
daa
mov
jns
push
jb
jne
dec
mov
daa
jge
xchg
mov
repnz
mov
push
dec
scas
data16
leave
add
push
dec
lahf
lcall
iret
aam
push
inc
loop
data16
xor
mov
fs
cmpsl
push
sub
lods
push
repnz
cli
sub
cmpb
test
and
pop
pop
imul
dec
test
cld
xchg
sub
arpl
mov
inc
fisubrl
insl
xchg
or
push
hlt
pop
adc
jo
out
xacquire
repz
cmp
inc
notl
cmp
mov
cmp
andl
pushf
js
jp
fsubr
and
iret
lcall
cmp
push
adc
mov
pop
fimuls
call
push
ds
mov
or
andl
add
cmp
xor
push
pusha
mov
jo
mov
sbb
sub
daa
pusha
test
clc
push
cmc
shll
mov
pop
fmuls
fwait
dec
or
es
push
fsubrs
mov
inc
mov
push
dec
aas
xchg
inc
outsb
mov
jns
cmp
enter
or
pop
loope
sbbb
sub
mov
cmp
jnp
test
into
cltd
ss
fxch
shl
pop
cmp
arpl
cmp
adc
sbb
jns
cmp
bound
push
out
pop
adc
and
pusha
mov
mov
mov
sub
hlt
sub
shl
sub
push
roll
insb
mov
pop
dec
imul
xchg
xor
pop
outsl
mov
sbb
xor
mov
and
sbb
cld
mov
clc
adc
loopne
idiv
dec
popf
and
mov
inc
lock
mov
out
mov
xchg
stc
jge
jb
lods
lahf
mov
mov
sub
push
and
out
cmpsl
or
pop
shll
push
iret
movups
mov
dec
mov
lret
xchg
das
pop
loopne
dec
pop
mov
pop
aaa
leave
sub
inc
lcall
gs
pop
mov
or
push
fcompl
xchg
cmpsl
adc
mov
scas
js
pop
jae
pop
adc
frstor
scas
ret
out
fsubs
adc
or
addr16
test
cmp
fisubl
add
mov
maskmovq
dec
or
and
sbb
inc
ffreep
dec
and
fldenv
cltd
fiadds
imul
pop
mov
aam
loop
in
sub
mov
sub
into
call
hlt
mov
xchg
sbb
mov
cmp
add
pop
lods
stos
mov
stos
xor
insb
jo
xchg
fwait
sub
outsl
lcall
add
pop
mov
movsb
mov
mov
bound
fistpl
addl
mov
push
dec
ss
fildll
mov
push
aas
or
xchg
int3
inc
fsubl
mov
outsb
sub
xchg
pop
jae
and
mov
shll
push
int3
scas
or
add
inc
clc
and
test
mov
jb
jge
dec
movsb
fsts
jb
push
add
cmpsb
arpl
clc
and
in
int3
testb
jae
xor
roll
lret
mov
adc
std
jae
push
jmp
jecxz
push
movsl
add
jmp
into
add
call
xchg
or
stc
mov
shlb
push
mov
loope
xor
mov
fldenv
test
lret
ss
repnz
loop
push
insb
push
in
shrl
dec
fldt
jno
cmpsl
aam
adc
push
sbb
orl
or
fwait
lcall
out
add
in
cli
adc
cmpb
adc
ja
cmp
fucomip
pusha
movsb
pop
jo
and
xchg
adc
xorl
aad
dec
fisubrl
sub
sti
loop
xchg
xor
xorl
add
xchg
xchg
ljmp
push
mov
mov
mov
jae
mov
cmp
xchg
lods
xor
clc
das
add
push
mov
mov
fsubr
fwait
mov
cld
xor
adc
das
js
inc
or
ds
jb
daa
sbb
xor
mov
inc
aas
mov
mov
dec
dec
fstpt
data16
fidivl
jg
push
popf
imul
add
cltd
push
mov
enter
jl
dec
push
clc
dec
scas
out
lds
cmp
cltd
xor
leave
mov
push
push
xlat
sub
repz
fs
decb
shll
or
orl
jns
std
jne
add
int
xor
and
ja,pn
lret
leave
imul
icebp
hlt
mov
scas
pop
inc
mov
repz
je
fs
inc
pop
push
xor
push
push
xor
xchg
test
sub
cmp
out
mov
mov
pop
cmpsl
inc
adc
xlat
xchg
and
xor
sub
pop
ret
xchg
mov
mov
jbe
sub
lret
xchg
and
cmc
sbb
dec
jp
pop
hlt
mov
dec
scas
movntq
sti
subb
mov
xchg
cmpb
xchg
ljmp
add
shrl
fdivl
lods
pop
cs
ja
sahf
mov
test
aas
inc
leave
out
jno
xchg
jmp
add
divb
pop
hlt
js
add
aaa
cmpb
addl
in
mov
sbb
shlb
push
sbb
pop
inc
lods
insl
jp
addr16
pop
adc
mov
ds
enter
out
mov
js
sbb
les
push
cmp
in
cltd
mov
mov
push
or
dec
and
push
nop
das
add
mov
mov
sub
icebp
pusha
jae
inc
push
mov
adc
lea
test
jne
inc
cmpb
xor
add
pushf
testb
rorb
jl
loopne
scas
mov
movsl
in
out
rcrb
je
ss
and
push
scas
sub
pop
test
test
dec
jmp
xchg
fxch
push
nop
or
in
pusha
iret
mov
sbb
or
xchg
or
lds
daa
inc
adc
cltd
fsubr
fwait
jp
xor
push
dec
sub
sbb
xchg
lahf
rol
loope
push
mov
outsb
inc
xchg
push
xor
aas
sub
push
sti
dec
inc
push
mov
push
adcl
pusha
cmp
or
inc
xlat
xor
fnstcw
push
stos
rcl
jo
jns
sub
stos
mov
fcmovnu
and
test
ja
addr16
outsb
test
xor
pop
ret
ss
idivl
xchg
into
in
add
pop
stos
cli
loope
xor
mov
pop
push
pop
pop
outsb
jl
faddl
mov
or
jmp
orl
movsb
mov
lods
imul
add
xchg
and
rcll
lahf
imul
mov
leave
rcl
testb
pushl
out
iret
xchg
iret
shr
negb
cmovns
push
cmpsb
testl
jl
sub
mov
jo
insb
subb
ja
in
mov
mov
addl
dec
push
push
pusha
loope
push
pusha
popa
mov
jmp
add
fucomp
cwtl
in
int3
es
cwtl
jnp
insb
fldcw
mov
loope
lcall
and
ret
add
movsl
cltd
test
xor
test
push
adc
fnstsw
push
lods
getsec
dec
sub
fs
leave
les
mov
mov
cli
jge
push
in
xchg
cmp
js
fld
frstor
sub
mov
and
jnp
in
imul
xor
cmc
lret
stos
ret
mov
mov
lret
and
push
fwait
lcall
xchg
sub
push
adc
test
or
insb
std
loop
xchg
mov
mov
mov
call
mov
xchg
dec
and
popf
aad
outsb
stos
fistpl
sbb
xor
popa
or
push
stc
sub
stos
fldz
in
stc
mov
pop
mov
mov
aad
push
cmpsb
pop
imul
mov
pop
hlt
jo
fiaddl
fiaddl
mov
dec
mov
in
outsl
int
or
lds
imulb
cli
adc
push
icebp
in
or
cmp
into
adc
iret
sahf
add
jb
pop
fsts
inc
xchg
ret
ret
in
inc
lret
ficomps
jl
cs
dec
jecxz
in
cli
loope
or
pop
fisttps
jns
mov
mov
push
dec
push
jnp
pop
mov
fwait
popf
add
push
push
cmpsb
das
in
and
scas
cld
adc
add
aaa
lock
ja
arpl
mov
je
sarl
sub
cltd
jl
lds
adc
cmp
push
xchg
hlt
aam
fimuls
jmp
sbb
fs
mov
loop
rcrb
das
mov
shr
dec
lret
shll
imul
or
or
sbbb
pusha
xchg
xor
loope
bswap
movsb
bnd
dec
outsb
xchg
inc
push
pop
mov
leavew
dec
and
sub
sti
push
pop
cmp
test
lods
adc
dec
fbstp
xor
dec
and
mov
aam
mov
mov
insb
or
cli
loop
cmpsl
popl
test
popf
xchg
mov
add
push
loop
int3
and
push
xchg
mov
inc
jno
mov
jns
inc
nop
pop
jb
mov
push
push
cltd
xor
jp
cld
lds
dec
and
cltd
data16
and
sbb
and
testb
pop
dec
or
fists
lcall
leave
cld
sub
out
dec
push
dec
jg
repz
mov
arpl
ror
test
fcmovu
jmp
adc
test
in
adc
scas
out
ljmp
sarl
lret
mov
pop
jns
popf
lock
int
dec
nop
data16
ja
stc
mov
mov
push
mov
enter
xor
outsb
jl
int3
mov
add
rcrb
int
dec
xor
jo
fiadds
mov
mov
inc
aad
mov
mov
mov
stos
int
dec
rcll
andl
cmpl
in
add
scas
xor
lods
mov
jb
out
cmp
mov
mov
nop
sbb
adc
sbb
mov
mov
enter
hlt
icebp
frstor
xor
push
shll
sub
stos
mov
dec
xor
adc
add
mov
xor
mov
or
jmp
cmpsl
pop
jmp
mov
add
inc
pushf
or
rorl
pop
popf
pop
mov
push
cli
jbe
pop
pusha
mov
push
push
stos
adc
push
adc
stc
jl
dec
adc
jbe
daa
jno
push
sbb
stos
xchg
push
mulb
lcall
xor
movsb
jl
les
inc
aam
negb
or
mov
addr16
xchg
das
inc
sarb
push
pop
jmp
sbb
push
aas
xorl
data16
aas
scas
lret
imul
popa
ljmp
je
cmpsl
add
lock
push
inc
clc
and
inc
mov
pop
lcall
inc
sti
sbb
fistl
cmpsb
xor
xor
inc
enter
fnstenv
out
xor
hlt
pop
xor
sahf
cwtl
pop
lods
and
insl
xchg
ret
jb
lahf
shl
xchg
add
pop
add
inc
shll
popf
fcmovb
es
push
and
xor
push
dec
inc
aas
int
push
cmp
cmp
cltd
mov
cmp
aam
and
out
ljmp
call
sahf
push
push
test
inc
mov
xchg
mov
ds
sbb
mov
push
std
sub
push
adc
sbb
lods
mov
ds
pop
pop
or
aam
mov
xlat
js
xor
lahf
inc
lcall
mov
and
mov
fwait
les
jne
adc
cmpsb
dec
mov
les
cmp
xchg
movsl
fldcw
add
int
xchg
jmp
ret
mov
jmp
jnp
rcl
mov
cmpsl
add
vmread
fdivrs
popf
mov
mov
jae
lahf
push
mov
fsubl
aad
pop
cmp
xchg
mul
lods
loopne
jo
push
and
aad
mov
sahf
push
pop
mov
or
int3
jne
outsl
ljmp
es
add
pop
xor
mov
in
mov
arpl
xor
push
jo
push
dec
adc
xor
in
xor
cmp
and
jecxz
subl
ds
mov
push
cld
jg
out
add
adc
sti
xchg
outsl
sbbb
loopne
movsb
push
mov
pop
push
fwait
mov
or
outsl
mov
push
push
sti
lods
pop
inc
into
adc
sbb
lods
cmp
xchg
jno
push
sub
push
je
cld
mov
fadd
insl
mov
mov
inc
mov
mov
adc
out
rol
jnp
push
mov
aaa
dec
sahf
jl
in
mov
es
cli
pop
je
cbtw
mov
aad
int3
and
xor
mov
mov
and
mov
es
aas
cmp
cmp
push
loopne
icebp
and
dec
pop
push
imul
mov
data16
push
cld
xor
outsb
xchg
sbbb
pop
sub
das
mov
pop
inc
jns
sub
mov
frstor
cwtl
rol
outsb
out
or
stos
and
mov
xor
or
mov
aam
aam
mov
cmpsl
jnp
cltd
leave
pop
inc
addr16
jnp
xlat
mov
cmp
or
pop
loop
or
adc
push
dec
sub
xlat
out
fbstp
mov
std
mov
add
mov
lds
enter
or
mov
or
adc
push
or
mov
sbb
iret
mov
adc
fdivrl
jge
int
inc
js
xor
lods
loopne
dec
fstpt
insb
xchg
xor
and
pop
mov
repnz
mov
das
int3
faddl
adc
xor
aaa
cmpsb
movsb
out
rcr
addr16
mov
cmp
dec
mov
cmp
ljmp
sbb
movsl
stos
pop
aas
inc
aad
nop
jo
lret
out
test
imul
imul
jns
dec
out
mov
mov
sub
push
jge
subb
outsb
inc
mov
sub
inc
iret
iret
punpckhdq
cmpsb
aaa
ss
test
inc
stos
int
pop
mov
pusha
outsb
enter
addb
dec
data16
sbb
sbb
xchg
nop
xlat
or
dec
shlb
cmp
dec
mov
dec
cmp
lret
daa
mov
push
mov
loop
pusha
and
ljmp
cltd
aad
ds
stos
mov
jmp
lahf
push
and
lret
pop
int
lock
repnz
shrb
sub
shlb
cmp
ljmp
sub
mov
repz
jg
dec
push
negl
mov
pop
in
cmp
pop
pop
aaa
lahf
popa
out
jbe
in
je
cld
adc
mov
int
inc
ja
enter
repnz
jge
jns
mov
and
stc
xor
adc
push
mov
enter
loope
mov
icebp
jne
dec
fcoml
mov
jge
or
mov
xlat
mov
cmp
xchg
lret
fstl
fldt
xorps
xor
push
in
adc
aam
push
jo
or
xchg
into
in
in
mov
push
jmp
popa
out
push
dec
add
mov
jne
sti
pop
xor
inc
and
sahf
dec
jp
or
add
sub
jno
adc
rol
xchg
xchg
and
xchg
or
test
fdivrs
aas
xor
fdivl
mov
xorl
insb
inc
dec
fisubl
int
mov
cmp
xor
imul
or
rcrl
mov
cmp
mov
inc
inc
xor
inc
mov
ds
loopne
popa
jno
bound
loope
mov
push
mov
inc
test
sbb
mov
imulb
add
pop
sbb
fstps
aaa
insl
gs
lock
sti
nop
insl
mov
out
jb
sub
pop
mov
adc
push
xor
mov
in
push
icebp
push
aad
ja
add
push
inc
xchg
movsl
mov
xchg
push
dec
in
daa
stos
icebp
dec
or
jns
mov
sub
or
mov
and
ds
mov
pushf
lahf
ds
aam
push
ja
scas
or
adc
pop
lcall
aad
daa
je
std
mov
add
mov
sub
stos
push
loope
mov
cs
cmpxchg
mov
iret
push
xchg
leave
cmpsl
and
push
or
pop
mov
int3
cmc
icebp
add
loope
push
stc
cmp
mov
xlat
lock
faddp
inc
in
inc
insl
in
outsl
or
sub
xchg
lds
adcl
rclb
and
push
shr
cmp
pop
and
js
lods
or
mov
into
mov
mov
xor
and
data16
push
leave
xor
push
outsb
shlb
mov
cs
je
xchg
sbbl
mov
cltd
sub
jmp
and
mov
sbb
in
pop
inc
pop
fcmovne
pop
cmp
xor
clc
cmp
jl
cmpsl
loope
dec
pop
push
lret
les
sahf
andl
mov
mov
lcall
aas
mov
clc
pop
xchg
imul
pop
jp
push
cli
daa
sub
cmpsb
xbegin
or
cmp
lret
and
jb
cmp
cld
repnz
jbe
add
cmp
add
push
gs
and
inc
popa
outsb
mov
mov
mov
ja
jb
daa
nop
sahf
pushf
fisubs
and
sbb
xor
jbe
test
out
and
push
icebp
push
lcall
enter
ds
pop
hlt
adc
and
adc
xor
test
sbb
push
fwait
add
test
imul
pop
jle
fwait
lret
xchg
test
popf
leave
adc
repnz
inc
push
mov
mov
pop
push
fstpl
add
mov
pop
xchg
subl
sar
pop
dec
push
test
mov
shl
mov
mov
pop
ja
mov
push
test
push
or
xor
xor
out
fcomp
sbb
dec
idiv
insl
in
and
icebp
movsb
fdivs
jae
and
imul
jae
mov
xchg
add
cs
jmp
test
mov
shll
add
movsb
ficoml
out
movsl
sub
push
ret
xchg
jp
rolb
std
loope
and
dec
lret
movsl
xlat
pop
inc
jmp
shll
ficompl
imul
cmp
in
mov
cmpsb
and
fisttpl
cmp
jp
pop
loopne
mov
aas
cmp
jmp
jmp
sub
pop
int
stos
pop
and
jnp
sbb
dec
sub
pop
stc
mov
movsb
sub
inc
adc
mov
test
sub
mov
jmp
movsb
lret
xor
lcall
xchg
ror
inc
pop
int
sub
out
pop
scas
or
mov
xor
aad
dec
jbe
cmp
push
inc
sbb
dec
fcoml
pop
scas
lret
cmp
adc
mov
fbstp
inc
pop
pop
xor
test
adc
lods
xor
mov
xchg
fmull
pop
mov
fldl
mov
fildl
pop
in
in
push
jge
fwait
mov
mov
ja
dec
sbbl
loope
jbe
jmp
push
pop
and
or
adc
repz
and
mov
rol
cmp
mov
rcrb
fdivs
dec
push
daa
mov
outsb
and
push
sbb
popa
push
cmp
jo
mov
out
notb
fs
or
pusha
jbe
mov
sarl
mov
pop
inc
jecxz
adc
jg
add
mov
andl
loopne
lds
jo
mov
ja
mov
adc
test
popf
xchg
push
pop
insb
in
frstor
fistps
inc
lret
into
sbb
mov
sub
call
adc
mov
sti
xchg
aad
jae
cmp
mov
adc
arpl
inc
cmpsl
add
pusha
pushl
enter
jmp
push
push
jb
lret
fstpt
push
or
fs
testb
cmp
pop
fs
pop
cmpsl
or
push
adc
mov
roll
push
xor
push
inc
pusha
xor
popf
mov
popf
mov
shll
pop
push
rorb
cmp
into
scas
mov
inc
out
sub
mov
loop
pop
pop
jb
int3
sbb
xchg
xchg
xchg
pop
mov
fiaddl
pop
scas
inc
call
pushf
pop
push
loope
and
insl
mov
call
lock
fidivs
xchg
sti
cmp
prefetch
add
pop
jnp
and
xchg
or
lock
jecxz
pushf
fcomp
xchg
test
jge
icebp
cmpsl
inc
pop
lods
mov
inc
cwtl
pop
inc
cmp
xchg
add
loop
xor
mov
pop
cmp
xchg
pop
test
xchg
cli
xor
mov
pop
fstpl
pop
inc
mov
adc
and
add
arpl
jno
std
out
je
xchg
jne
fstl
sbb
add
fldenv
and
enter
jae
jecxz
push
xorl
add
mov
mov
lea
decb
out
mov
mov
popf
loopne
test
jecxz
push
push
push
add
or
pop
xchg
in
or
inc
shrb
into
insl
sub
add
in
je
xor
inc
xchg
adc
in
mov
das
push
mov
adc
iret
push
aas
push
push
fcom
mov
xor
add
mov
lds
jb
adc
lock
pop
and
xchg
mov
mov
ret
or
and
add
push
pop
add
out
inc
adc
pop
sti
adc
js
xchg
sarb
lret
sub
xchg
ja
cwtl
push
add
data16
jg
ss
mov
sti
nop
outsl
cmp
xor
mov
mov
dec
pusha
and
sbb
in
push
push
mov
mov
cmc
pop
xor
ljmp
pushf
xchg
std
out
xor
lret
mov
jns
movsb
mov
mov
std
or
mov
hlt
movsl
push
or
xor
cld
mov
mov
sub
inc
mov
mov
outsl
and
xlat
mov
mov
push
cmp
fnstenv
push
ss
cmp
and
pop
in
sub
push
test
and
sub
mov
mov
lcall
outsb
or
inc
push
sub
mov
add
mov
adcl
scas
xlat
inc
dec
imul
nop
dec
cmpsl
jle,pt
mov
push
std
mov
mov
fimull
fisttpl
je
pop
mov
push
add
outsl
ja
repnz
push
cmp
inc
loope
sti
push
call
jb
xchg
add
outsl
nop
imul
sahf
cld
inc
mov
pop
bound
mov
pushf
inc
inc
repnz
popa
mov
jae
bound
dec
push
add
sti
test
lock
fcmovnb
mov
sub
out
adc
jno
sti
push
testl
cld
insb
cmp
mov
jecxz
imul
mov
mov
rcr
xchg
arpl
mov
sub
inc
push
in
push
push
or
imul
or
jnp
jae
xor
jl
xchg
lock
iret
ljmp
adc
dec
sahf
dec
incb
ret
pop
fldenv
mov
out
sahf
test
pop
adc
or
cmpsl
mov
inc
inc
jo
push
cmp
mov
jp
loop
xchg
pop
push
dec
lret
mov
sbb
inc
xchg
pop
jecxz
leave
sub
js
out
mov
xlat
imul
imul
andb
imul
inc
stos
pop
mov
or
mov
stos
dec
lea
xchg
sub
nop
data16
push
aam
orb
push
dec
add
sub
xchg
pushf
pushl
pusha
or
add
and
call
in
mov
pop
and
lahf
xor
or
call
hlt
cmp
mov
notb
fisubl
orl
outsl
xchg
fdivrs
popf
add
mov
lds
pop
ljmp
mov
outsl
mov
movsb
sbb
scas
out
fcmovnbe
aam
aad
push
add
pop
adcb
inc
fimull
cli
xchg
add
cmp
lahf
insb
ljmp
mov
icebp
dec
inc
es
mov
sbb
rorb
out
sbb
das
mov
adc
hlt
mov
movl
lods
test
and
stc
in
in
inc
push
and
push
mov
sti
call
mov
mov
or
stos
ficoml
push
pop
ret
add
adcl
mov
lds
ret
loopne
push
pusha
pop
fdivs
pop
lret
mov
dec
dec
lods
scas
scas
imul
insl
pop
sub
outsl
dec
cwtl
pop
xor
les
mov
mov
xor
adcb
inc
dec
mov
xchg
ss
loope
int
push
sub
add
dec
mov
inc
out
cmpsl
sbb
xor
cmp
mov
sbb
and
int3
js
repnz
gs
pop
mov
cli
mov
mov
mov
xchg
js
rclb
rcr
scas
mov
jg
or
cmc
cli
mov
pusha
rol
movsb
add
jmp
sub
adc
pop
push
jae
mov
inc
mov
push
out
je
les
test
jmp
test
cmp
cmc
xlat
fcoml
jbe
out
lret
roll
out
arpl
imul
or
lea
pop
mov
es
sub
test
add
in
dec
clc
ljmp
in
mov
fldenv
xchg
inc
cmp
pop
jmp
or
inc
int
and
mov
adcl
stos
lea
sbb
je
cmp
jbe
sbb
lods
push
mov
outsl
dec
addr16
xchg
icebp
rolb
jge
dec
jle
js
xor
cmpsb
out
inc
aas
mov
jae
mov
sbb
and
das
mov
sarl
jne
cltd
mov
mov
cmp
lock
pop
jo
add
sub
out
push
jmp
add
pop
jle
rcll
add
sbb
mull
mov
cs
xchg
int
inc
inc
mov
pushf
jecxz
test
adc
ljmp
es
xchg
cmpsb
shrl
mov
mov
cmp
or
imul
xchg
adc
cmp
push
mov
enter
and
fidivrl
es
cmp
push
fidivrs
mov
jns
mov
adc
rcl
mov
push
cmp
sbb
into
xor
mov
lea
sub
or
popf
por
cmp
cmp
clc
imull
adcb
fistl
out
in
sbb
jge
mov
andb
aad
test
pop
scas
and
outsb
jle
movd
sub
cmc
push
test
add
push
cmpsb
cmpsl
or
test
lahf
mov
mov
imul
mov
out
hlt
jl
gs
sbb
cmp
lcall
push
mulb
or
sbb
les
inc
dec
cmp
pop
shll
rcll
je
std
test
adc
push
cmpl
inc
lds
lret
orb
cmp
add
out
jge
jg
scas
cltd
loop
xor
lret
xchg
insb
jae
fsub
scas
dec
es
data16
mov
mov
sbb
jns
push
loope
or
sti
and
loop
mov
pop
sbb
mov
les
dec
jno
leave
inc
mov
test
out
ljmp
xchg
jb
mov
cmpsb
sbb
mov
xchg
pop
popf
cli
pop
mull
sub
in
cmp
push
pop
add
ja
std
fcoml
mov
bswap
mov
dec
or
push
lahf
adc
and
cs
dec
add
inc
rorl
movsl
cmpsl
xor
or
cwtl
inc
push
xchg
fs
or
in
gs
inc
flds
addr16
dec
xorb
scas
adc
mov
adcl
cmp
rcl
adc
outsl
inc
fstpt
aam
stos
xchg
lcall
lds
fsubr
rorb
arpl
xchg
stos
cmpsb
xlat
mov
jecxz,pt
jle
insb
test
aas
mov
test
pop
push
jae
xchg
imul
frstor
jnp
push
lahf
aam
push
les
pop
loope
xor
and
sar
push
cmc
data16
jecxz
pop
add
aam
outsl
pushf
or
stc
js
int3
imul
push
cltd
fstpt
fcompl
insb
popf
push
inc
inc
jns
enter
mov
and
bound
inc
add
push
push
xchg
mov
mov
hlt
cmpsb
push
mov
push
aas
mov
mov
std
xor
fcmove
rol
lcall
shlb
outsl
hlt
sbb
cmp
cmp
dec
mov
push
mov
mov
sbb
orl
adcb
mov
into
es
sahf
push
cmpsb
stos
sarb
xor
or
pop
cmc
mov
mov
mov
mov
push
inc
inc
movzwl
addr16
or
cli
shll
jg
aas
inc
loope
insb
xlat
mov
scas
lds
or
cmp
fdivrs
cwtl
xchg
loopne
out
sub
out
jmp
testl
sahf
cli
xor
mov
xor
pop
lods
push
fstps
sbb
addr16
dec
stc
sbb
addr16
in
push
in
inc
dec
and
fsubl
imul
pop
lock
jae
in
sub
and
mov
cmp
inc
pop
push
add
test
adc
loope
push
xor
and
xchg
iret
dec
mov
xchg
lds
xlat
aaa
sub
mov
mov
arpl
mov
pop
stc
xor
cmp
and
je
mov
fsubl
jae
scas
dec
call
jno
cli
jne
stc
mov
mov
xor
sbb
pusha
dec
mov
xchg
sub
mov
inc
jbe
xor
cwtl
mov
idiv
pop
cmp
cmp
mov
jo
jo
jg
jecxz
adc
inc
sti
pop
nop
in
cld
andl
cli
cmpsl
mov
int3
call
popa
pop
dec
mov
fwait
inc
jne
and
dec
mov
sub
cld
hlt
xchg
inc
push
dec
or
fimull
loope
aaa
mov
andl
clc
jmp
dec
das
les
jns
mov
jns
mov
andb
inc
inc
cli
pop
les
jno
cmp
es
cmpsb
test
xchg
jmp
pop
enter
or
leave
lods
jecxz
adc
add
and
pop
jno
mov
shll
push
daa
fisubrs
shl
hlt
push
or
jo
xor
and
imul
inc
xchg
js
or
inc
xor
or
cmp
icebp
mov
cltd
sub
mov
mov
pop
test
pop
mov
cmpsb
dec
mov
stos
shl
mov
jno
inc
lcall
and
aaa
cmc
cmp
ja
sbb
mov
add
dec
aad
lds
into
push
jo
addl
sub
pop
test
sbb
ljmp
arpl
into
push
add
xchg
sbb
mov
mov
cmp
dec
mov
mov
pop
push
das
addl
jne
mov
cmp
in
rol
repnz
cmp
sbb
ret
retw
in
inc
add
push
inc
test
xor
gs
imul
pop
pushl
add
sahf
out
lods
cmc
or
movsl
js
xor
push
test
pushf
sti
in
xchg
push
insl
orb
add
jno
fstpt
les
sub
and
xchg
std
js
pushf
xor
ja
mov
and
scas
shl
jne
das
mov
add
ljmp
out
push
test
sub
rcll
out
xor
or
sub
lret
adc
pop
jb
mov
insb
lods
sahf
rolb
adc
ljmp
vcvttsd2si
int
aas
cmpsb
test
pop
pushf
in
das
push
mov
in
imul
adc
mov
pop
je
xor
int3
test
dec
mov
lcall
imul
cmp
cmp
or
scas
xchg
mov
adc
ljmp
shlb
hlt
stc
out
sbb
push
ret
pop
jno
aad
mov
xchg
icebp
or
xchg
sub
bnd
insl
jno
add
mov
pop
cmp
ret
fwait
shll
inc
cwtl
outsl
mov
sbb
popl
es
xchg
sbb
outsb
mov
xor
imul
sbb
pop
xor
pop
sbb
nop
push
cmp
call
scas
leave
cmp
push
and
repz
mov
fsts
xor
lods
rcrl
shll
mov
mov
dec
lahf
push
sub
cld
test
adc
pop
sbb
inc
mov
gs
shll
hlt
mov
jbe
filds
mov
adc
sub
in
push
ljmp
adc
pop
sarl
or
fsubl
dec
lret
test
or
jae
int
cli
sbb
xor
fistpl
in
gs
imul
mov
das
vpmaxsw
inc
sahf
cli
add
mov
into
ret
jbe
aas
leave
jns
cld
push
sbb
inc
pop
mov
mov
inc
or
ds
cld
cs
cmp
dec
stos
rorb
add
sbb
popf
mov
dec
pusha
mov
mov
jg
or
in
lret
push
add
subl
mov
clc
push
imul
rcll
or
pop
std
ret
jecxz
sbb
call
orb
mull
sub
in
pop
ljmp
stc
xchg
movsb
mov
scas
test
cs
mov
loopne
les
cmp
push
and
shll
adc
arpl
cli
pop
iret
in
sub
mov
mov
test
hlt
jmp
fidivrs
aas
imul
icebp
and
into
inc
fwait
scas
cltd
daa
sub
addb
bswap
push
cmp
mov
aam
aaa
std
dec
orl
or
int
push
rep
fcoms
add
mov
daa
inc
pusha
jae
cmpl
inc
push
ds
fsubrs
push
inc
jmp
lods
popa
ljmp
and
stc
pop
mov
arpl
aaa
add
pop
shrb
ret
bound
ret
xchg
jecxz
pop
sahf
cmp
mov
inc
stos
fistpl
mov
cmp
cmp
imul
push
cli
es
test
rolb
mov
fbld
arpl
xchg
cmp
in
pop
sub
and
imul
insl
xchg
cmp
dec
pop
cmp
loope
jg
dec
test
out
std
lods
dec
sbb
xchg
mov
cld
in
fcoml
mov
orb
test
mov
aam
call
push
bound
xchg
pop
sahf
movsl
cltd
mov
notb
popa
cmpsb
fistpll
scas
fmuls
xchg
sub
sub
sbb
pop
rclb
adc
lock
cmpsl
aas
stos
lea
mov
xchg
ss
fnstcw
popa
outsl
push
sbb
test
insb
and
adc
push
mov
sub
loop
or
mov
call
cmpsb
cli
jecxz
pushf
or
jne
adc
pushf
popf
pushf
in
dec
add
push
pop
aam
fdivrl
cli
testb
adcb
add
inc
adc
fnstsw
out
mov
ret
les
xchg
sahf
and
pop
mov
jp
sbb
shll
or
xor
lods
push
jbe
cmp
aad
fadds
push
mov
and
lock
sub
imul
pop
scas
idiv
sarl
pusha
ret
cli
cs
jmp
aaa
sub
ja
or
mov
scas
ss
dec
lahf
fstpl
push
jns
xchg
negl
sbb
icebp
jnp
sbb
adcb
fwait
ja
aad
ret
repz
jmp
jbe
divb
mov
cmp
pop
mulb
dec
out
dec
dec
jno
mov
jns
dec
cli
push
jns
lods
mov
add
jnp
add
mov
in
movsb
into
js
sub
xlat
and
test
ret
xor
lahf
scas
pop
fistps
outsl
dec
dec
es
mov
dec
leave
or
cmp
cmpsl
xchg
adc
test
jl
xchg
sub
pop
in
ret
test
inc
push
cmp
pop
inc
aam
or
or
dec
push
ret
pop
mov
fsubrs
rorb
cmp
add
xor
fsub
arpl
sub
hlt
dec
adc
aas
xor
fs
pop
inc
ret
or
nop
lcall
fsubr
leave
xorb
stos
mov
inc
sbb
sub
sahf
mov
clc
or
jo
and
pop
test
add
test
int
mov
jg
pop
out
hlt
dec
rorb
mov
and
mov
icebp
xor
dec
cmpsl
ret
mov
aas
addr16
jno
add
pop
pushf
in
xchg
test
dec
ret
rolb
mov
xchg
add
cmp
push
mov
push
adc
rolb
mov
xor
cmpsb
stos
cld
ret
jae,pn
es
jae
mov
pop
popa
mov
inc
out
sub
scas
jecxz
mov
int
push
stos
stos
ja
cs
mov
or
inc
lods
pop
subl
jnp
adc
mov
fnstcw
lcall
cmp
out
fs
push
fsts
loopne
mov
lahf
mov
cmpsl
pop
mov
mov
mov
cmp
inc
in
pushf
aas
pop
subb
dec
aas
xchg
sub
cmpsb
int3
leave
loope
loop
xchg
leave
int3
xchg
cmpsl
jl
scas
stos
dec
movsb
dec
shrb
jl
stos
pop
mov
and
push
jbe
or
out
sbb
cld
mov
jle
adc
and
mov
push
daa
jne
jmp
clc
mov
sarb
je
mov
sbb
xlat
and
aad
gs
pop
xchg
ss
jae
mov
movsl
jle
mov
stos
xchg
xchg
aaa
pop
pop
pop
cmc
mov
std
sbb
out
dec
out
xor
ficoms
jo
lret
xchg
movsl
mov
lods
hlt
outsb
or
sub
ficoms
mov
xchg
fisttps
pop
dec
sahf
loope
jo
stc
xlat
sar
popa
rcll
in
mov
dec
jnp
lret
out
xchg
sub
es
out
out
or
js
mov
fidivs
aad
addb
rolb
cs
mov
sbb
daa
arpl
or
push
shlb
mov
outsl
in
xchg
ret
adc
test
lock
divb
jbe
rcr
mov
outsl
jmp
adc
rorb
xor
cs
rclb
pop
dec
dec
cmp
push
push
jne
js
lods
and
cltd
outsl
ss
add
inc
xor
fld
cli
cli
sbb
int3
fisubrl
jg
cmp
dec
ficompl
mov
xchg
fsubr
mov
xor
fadds
mov
pop
leave
insl
mov
pop
into
sub
leave
sahf
add
jo
or
mov
inc
int3
addr16
imul
stc
mov
xor
loope
in
push
push
daa
jg
pop
pop
int
inc
nop
add
cmc
inc
push
mov
mov
test
push
mov
ret
test
mov
mov
pop
push
cmp
and
out
jp
dec
dec
jae
rcr
aad
lret
int3
js
repnz
lds
mov
leave
iret
loop
hlt
dec
cmp
std
jle
outsb
xchg
mov
cld
fcompl
and
or
dec
popf
xchg
jmp
sarl
push
pop
popf
pop
imul
cwtl
lret
fsts
push
ljmp
test
xchg
fiadds
cmp
cltd
cmp
in
sbb
jl
mov
xchg
jnp
xor
cmp
jbe
insl
ficoms
inc
and
xchg
loopne
lahf
cmc
or
sbb
mov
outsb
xchg
lock
out
adc
out
sbb
shl
push
add
ds
mov
repz
stos
adc
jle
mov
flds
jno
stc
inc
shl
push
jno
dec
rclb
int
xor
sub
cmpsl
std
imul
mov
rclb
mov
popf
ja
int3
add
and
mov
pop
inc
iret
mov
fcmovnbe
xlat
add
add
andb
inc
fidivs
test
cmp
xchg
mov
pop
dec
cmp
inc
cmp
xor
jae
int
push
out
add
pop
fcomps
xor
test
jo
pop
in
bound
scas
into
xchg
fdivl
xor
jbe
inc
in
fsubrs
add
imul
mov
xor
pop
scas
loopne
movsl
ret
or
xchg
addr16
mov
mov
lock
pop
pop
or
or
cwtl
mov
mov
es
adc
rorl
jno
repnz
or
dec
test
mov
jmp
inc
pop
sbb
arpl
rcll
push
pop
hlt
push
aad
sbb
lahf
mov
jp
xor
aas
sahf
incb
cmpl
scas
lret
push
mov
daa
mov
xchg
lahf
sub
js
sbb
int
imul
sbb
cmp
shl
in
clc
daa
mov
mov
jmp
push
sbb
aas
xchg
pushf
mov
pop
lea
cmpsb
movsl
insl
pop
imul
mov
mov
push
ljmp
jecxz
rcrb
test
das
mul
fstps
and
into
std
cs
repnz
mov
push
sbb
jle
faddl
lods
int
loopne
ret
hlt
sub
mov
rclb
mov
dec
cmpsl
les
pushf
mov
addr16
add
rorb
js
out
cmpsl
icebp
js
sub
mov
daa
lods
stos
psllw
dec
ss
sbb
nop
jne
pusha
cmp
repz
and
push
jmp
mov
inc
sahf
jge
push
stos
pusha
sbb
fistpl
fistpll
add
add
adc
push
ljmp
adc
jb
cmpl
xchg
push
cmp
push
addr16
mov
jl
mov
mov
and
and
cmpsl
push
punpckhbw
push
xor
sub
add
cmc
mov
mov
lea
add
sbb
sahf
and
decb
stc
call
data16
and
jle
loop
jl
dec
aad
xlat
sub
jo
adc
mov
sbb
push
popa
mov
inc
jmp
scas
popf
and
push
insb
push
sahf
push
push
movsb
leave
iret
pop
dec
and
pop
jg
push
dec
fists
aad
loope
sbb
in
ljmp
mov
das
adc
jo
jp
push
cmp
mov
jecxz
mov
sbb
inc
adc
cld
mov
out
mov
push
mov
pop
bound
mov
xorb
scas
insl
mov
fxch
xchg
sub
cmc
lods
mov
inc
jmp
lea
mov
sub
xchg
inc
sbb
sub
in
push
je
rolb
arpl
add
adc
and
test
mov
or
mov
loope
pop
lods
aas
fstpl
movl
in
ljmp
adc
fs
in
out
es
mov
sbb
dec
arpl
or
jbe
outsb
mov
repz
dec
test
sbb
data16
xchg
cmp
inc
jo
or
mov
push
xlat
dec
js
cmpsb
jo
add
xor
and
xchg
lds
add
add
lea
adc
jecxz
imul
lds
mov
int3
mov
push
gs
push
jo
pop
outsb
pop
mov
xchg
daa
inc
out
push
aas
jno
aaa
xor
mov
in
lcall
pushf
pop
test
mov
inc
add
lcall
fwait
das
lcall
fdivrp
stos
ds
xchg
and
lea
adc
fsubr
cltd
lds
arpl
stc
in
jp
sbb
or
and
xor
lds
aam
jecxz
lret
inc
xor
bound
cmp
imul
out
cmp
add
cmpsl
icebp
jle
test
jmp
loope
xchg
pop
insl
mov
sub
flds
pop
imul
push
jecxz
pop
inc
cld
mov
arpl
int3
es
push
mov
sbb
rcrb
or
jecxz
outsb
mov
fcoms
mov
add
add
xchg
pop
jecxz
dec
outsl
add
xor
pop
cmp
xor
pop
push
push
lcall
lods
inc
mov
sub
ret
cwtl
ret
jo
popf
imul
jo
int
gs
mul
aaa
es
aaa
sbb
xchg
adc
mov
push
enter
push
repnz
xchg
pop
pop
insb
xor
sti
cmpsb
xor
in
insl
or
mul
or
push
iret
cli
cwtl
and
jp
xor
call
cmp
mov
es
sub
cltd
imul
dec
lock
pop
mov
mov
dec
mov
adc
xchg
xchg
or
cmp
lds
pop
xor
fwait
dec
sbb
fistpl
sbb
cmp
popa
cmp
cmc
jge
test
or
add
orb
sub
or
std
push
mov
cmp
cmp
ds
loope
sbb
std
outsl
in
lea
mov
add
jb
fldenv
jle
mov
pop
mov
testb
outsl
pop
adc
jg
cs
sbb
or
cld
sub
xchg
sub
sub
mov
rcrl
xchg
inc
pop
movsb
pop
lea
xchg
xchg
or
pop
lea
dec
adc
cmp
std
cs
jge
sub
jg
sub
xchg
mov
push
mov
and
scas
daa
pop
cmp
mov
lea
out
dec
dec
pop
stos
rclb
mov
push
lret
scas
mov
jp
push
jnp
popl
mov
lods
inc
mov
or
mov
dec
lahf
xchg
pop
lods
jae
jge
pop
pop
pop
sbb
sbb
inc
mov
mov
pop
jg
mov
repnz
adc
pop
inc
xor
and
je
push
mov
int
jle
xlat
lods
das
push
out
popf
add
jno
xchg
imul
push
and
out
fucom
sbb
pop
and
mov
stos
dec
pop
sar
std
push
cltd
pop
lret
jmp
mov
or
inc
sti
test
stos
xor
scas
das
add
or
test
scas
sarl
jb
bound
lea
in
inc
lods
xchg
jge
repz
pop
xor
imul
imul
mov
cmp
or
lret
xchg
pusha
mov
pop
jno
lock
shlb
es
or
cmp
jns
mov
push
sub
push
mov
mov
add
dec
xchg
rcl
outsb
xchg
inc
mov
sbb
out
dec
and
in
je
sbb
cmc
jle
and
or
push
cli
mov
hlt
pop
jle,pn
subl
movl
xor
pusha
add
aaa
xor
xor
dec
fidivl
jecxz
jns
inc
pop
rol
mov
and
fbld
test
xor
dec
push
mov
push
cmpb
dec
cwtl
imul
cmp
jmp
push
xor
push
jae
aad
dec
shlb
pop
cmpsb
push
push
inc
fmull
add
leave
pop
xchg
cwtl
sub
movsb
pushf
and
or
or
fildl
hlt
in
push
push
cld
out
pop
and
or
bts
sahf
iret
packsswb
js
subb
lcall
jo
mov
jl
cli
movsb
iret
jae
dec
call
inc
test
push
cld
dec
jo
hlt
jle
icebp
jg
cmp
roll
xor
push
fwait
push
fiaddl
xor
fmuls
push
faddp
push
mov
call
dec
dec
dec
test
push
inc
dec
xchg
inc
jge
addr16
inc
mov
mov
mov
lods
in
mov
aas
dec
jge
lock
push
loope
pop
fwait
imul
push
jo
dec
fisttps
movsb
stos
movsl
pusha
cmp
cltd
adc
popa
aam
add
xchg
add
repz
lods
inc
sbb
cmc
das
dec
mov
repnz
dec
adc
cmp
movsl
outsb
nop
cwtl
es
loop
sub
in
jno
cmp
cmpsl
sub
shlb
mov
int
andl
les
sbb
add
movsl
add
hlt
ja
xchg
in
mov
cltd
in
lahf
push
in
rorb
test
xor
dec
ret
sbb
sbb
sub
lret
mov
fisttpl
mov
inc
and
jo
xlat
fs
push
pusha
out
fisttps
cmp
inc
jge
jg
cli
sub
adc
jle
add
lret
or
xor
cmp
sub
push
push
repnz
xchg
xor
add
jns
sub
sbb
mov
or
fwait
repz
pop
ja
call
xchg
xor
shr
popf
arpl
cmp
sbb
repz
xor
insb
mov
inc
pop
jle
inc
daa
lret
mov
sbb
scas
lock
xchg
outsb
ret
shll
jno
push
ret
daa
and
adc
fsubr
mov
dec
gs
lahf
fsubrs
outsb
popf
aad
sbb
mov
adc
xchg
sbb
cltd
cmp
dec
cmp
add
es
in
dec
xchg
or
stc
in
mov
fwait
push
xchg
int3
jge
mov
add
jno
push
mov
in
mov
add
insl
je
data16
call
cmp
xor
mov
hlt
mov
jmp
mov
pop
push
xchg
imull
xchg
lret
jmp
les
ljmp
xor
ficoml
cmpsb
cwtl
scas
mov
subb
mov
jmp
fs
push
aad
cmp
pushf
jnp
testb
pop
xchg
in
push
dec
clc
fdivrl
and
outsl
xor
rcrl
jge
loope
dec
mov
xchg
cmc
pop
dec
xor
pop
lods
addr16
fld
pusha
dec
xor
mov
lods
inc
mov
sub
test
add
fwait
sbb
inc
sub
mov
pop
or
int
test
push
push
lods
inc
in
xchg
xor
adc
cmpsb
mov
movsl
cmpsl
fsubrs
js
dec
push
xor
ds
pop
imul
cmpsl
fucomp
xor
sub
sub
pushf
mov
movsl
mov
or
push
aas
sub
mov
ret
pop
adc
jl
mov
inc
sub
mov
es
out
aas
jp
pop
vcvtdq2ps
cmpsl
mov
rolb
push
shlb
sub
inc
and
or
jae
jge
data16
loope
rcll
std
and
dec
push
add
jbe
xor
xor
xor
aam
icebp
adc
fwait
insb
andb
fs
mov
dec
repnz
ret
push
es
les
jne
mov
out
inc
dec
out
pop
adc
dec
xchg
out
sbb
xchg
leave
mov
outsl
jno
adc
mov
xchg
push
dec
jge
sar
mov
test
nop
xor
inc
xor
mov
pop
and
mov
loopne
lcall
push
mov
js
out
dec
jnp
bound
xchg
out
cmpsb
mov
jg
add
test
jg
jne
dec
scas
outsl
jl
jge
aaa
pusha
les
add
jno
fcoml
aaa
out
inc
pop
xlat
scas
cli
cld
or
adc
enter
loope
push
fdivp
dec
lods
call
xor
adc
jnp
xchg
mov
lods
fdivrl
ja
push
cwtl
bound
stos
sti
adc
xchg
sbb
pop
sbb
mov
jno
mov
nop
mov
or
testb
std
mov
adc
xor
loop
dec
fdiv
lock
in
test
in
daa
rclb
mov
lods
movl
cwtl
push
cmp
cwtl
test
les
cmp
sbb
mov
lds
push
mov
andl
push
pushf
je
notb
lods
imul
hlt
xchg
pop
mov
addb
stos
and
iret
sub
mov
sub
mov
sub
loop
add
cmp
jl
int3
pop
and
xchg
mov
aad
inc
test
sub
inc
shrb
jb
dec
xchg
add
inc
lods
popa
test
push
or
xor
std
in
mov
push
fiaddl
test
dec
rcll
lahf
icebp
jb
xchg
cwtl
xchg
cltd
jg
cmp
add
test
mov
push
outsb
punpckldq
adc
xlat
out
in
mov
adc
or
cs
inc
ss
stc
jp
add
sbb
out
movsl
pop
inc
fstp
push
mov
movsl
mov
jns
ficomps
rcrb
xchg
ljmp
jo
into
xor
fldcw
pusha
icebp
out
aas
pop
clc
imul
lds
cmpsb
sub
xor
fwait
jnp
sti
shr
rol
add
leave
pop
shrl
and
dec
fistps
sub
adc
and
fwait
xchg
add
and
in
shlb
lcall
mov
dec
pop
inc
pop
mov
out
ss
mov
jno
xor
xchg
fstps
vpavgw
shlb
sub
push
imul
cltd
xchg
fidivrl
push
xchg
hlt
add
aaa
sub
add
int
and
popf
mov
sbb
sbb
push
mov
pop
fwait
mov
sbb
mov
adc
jg,pn
adc
in
into
sub
enter
pop
dec
mov
loope
sub
lahf
pop
imul
in
fwait
cld
jg
test
sahf
push
rorb
call
cmpsl
push
push
sub
test
pop
sbb
cmp
sbb
shlb
leave
sub
bound
inc
popa
add
movsl
repnz
mov
loopne
inc
out
std
int
cli
dec
cltd
add
data16
push
or
scas
frstor
sarb
and
nop
xor
or
sub
cld
mov
in
adc
mov
sub
and
jbe
je
mov
outsl
adcb
sbb
add
lods
mov
mov
mov
fwait
xchg
or
or
data16
add
enter
cli
push
xor
xor
xchg
inc
psubsb
in
cltd
cmp
or
mov
cli
lods
in
dec
repnz
roll
jle
aam
xor
fistl
std
adc
fisubrl
movsl
and
ret
mov
jmp
out
fs
mov
dec
cli
into
fildl
mov
dec
mov
mov
xchg
push
pop
lock
fdiv
std
fiadds
or
shl
orl
mov
pop
out
fnstsw
xchg
mov
repnz
cmp
and
arpl
inc
pop
pop
push
mov
mov
scas
pushf
imul
pop
imul
dec
and
fidivl
cmp
adc
test
adc
or
inc
pop
shl
sub
inc
movsb
xor
fldz
and
sub
xor
fnsave
aas
out
and
clc
pop
inc
test
insb
sar
inc
cmp
data16
jns
inc
cmp
and
pop
and
mov
and
jg
jge
jge
rcrb
lock
dec
fdivr
mov
jmp
addl
push
inc
jae
aad
push
fcmovnbe
cwtl
insl
popa
push
cmp
or
shlb
adc
bound
bnd
cli
movntps
fisttps
and
ror
jg
mov
imul
dec
mov
cmp
pop
leave
daa
pop
jp
push
push
or
loope
jp
ret
shlb
in
xchg
and
fcmovb
or
fisttps
add
aam
mov
in
adc
push
jnp
call
loop
and
push
adc
adc
pop
jge
aad
mov
es
xlat
inc
sub
imul
jge
cmp
sub
push
mov
mov
mov
jo
dec
xchg
scas
cmp
add
cmp
xor
shrb
mov
mov
inc
jnp
flds
mov
in
popa
xor
les
mov
mov
imul
jnp
inc
insb
pop
repnz
xchg
pusha
jge
ja
repnz
shll
pop
adc
or
int
mov
xchg
mov
xchg
push
pop
mov
int
xor
les
aad
fistpl
pop
pop
cmp
mov
ret
addb
fwait
or
or
push
pop
xchg
cwtl
mov
mov
aaa
adc
arpl
ss
jg
mov
iret
lret
dec
jecxz
mov
neg
mov
xchg
test
inc
testl
out
push
ret
or
adc
jl
rorb
push
pop
cmpsl
or
test
cwtl
xor
in
lea
sbb
or
movsb
dec
pushl
addl
or
pushf
xchg
daa
mov
sbb
xor
aas
and
out
cmpsb
jg
das
cwtl
adc
in
roll
mov
push
mov
ficomps
push
and
lret
mov
movsb
sbb
into
rdpmc
cmpsb
inc
inc
jno
xchg
or
or
dec
sub
cmpl
call
lahf
ljmp
into
out
dec
lret
mov
pop
sub
sti
mov
cwtl
outsb
aas
addb
sti
or
jecxz
arpl
fmull
aam
repnz
js
popa
lret
inc
xor
into
mov
scas
inc
cmpsb
sbb
mov
outsl
sub
bswap
fwait
stc
xchg
push
lock
and
jb
fbld
xchg
ret
xchg
push
sub
mov
and
scas
repz
and
adc
fdiv
ret
int
sub
mov
pop
xor
sahf
and
test
pop
pop
sbb
fcmovnbe
dec
js
arpl
xchg
inc
int3
rcrb
stos
mov
bound
cmp
out
xor
test
push
push
push
cmp
mov
cmpsl
pushf
push
jge
adc
loopne
cmpb
jno
lock
dec
add
push
or
push
sbbl
sahf
push
mov
cwtl
in
mov
mov
sbb
dec
jge
dec
out
mov
movsl
js
jmp
jns
sbb
sbb
xor
icebp
rsqrtps
mov
outsb
imul
aaa
or
push
call
jne
mov
xor
fwait
and
add
push
imul
add
mov
fidivrs
xchg
cltd
pop
pop
icebp
pop
es
jae
test
xorl
jmp
sbb
mov
mov
cmpsl
mov
mov
fidivl
or
aad
sbbb
aaa
dec
mov
test
adc
jg
fsubl
push
mov
push
mov
pop
fdiv
push
push
xor
ret
leave
mov
sahf
arpl
icebp
mov
add
jg
mov
pop
pop
lret
or
push
jp
mov
jnp
out
leave
or
in
into
ret
lea
lahf
ss
xchg
das
sub
pop
mov
cmp
sbb
in
mov
xorb
push
iret
jmp
filds
cmp
mov
jle
mov
pop
xor
jne
add
mov
shll
pop
test
pop
xlat
xor
lock
push
jp
jns
test
and
lods
scas
lds
inc
pop
lcall
mov
test
mov
mov
push
push
sbb
ja
fnsave
xchg
jne
mov
push
std
sbb
jnp
sub
call
and
mov
sbb
xchg
jbe
test
cltd
cs
ljmp
or
adc
andb
cmpsl
pop
fisubrs
xchg
leave
pop
push
sar
leave
cli
dec
jp,pn
fs
gs
cld
fsub
mov
cltd
fbstp
mov
sbb
xor
sbb
dec
mov
jmp
daa
hlt
mov
mov
jp
roll
adc
add
outsl
xor
test
sbb
lods
loope
sti
movsl
add
mov
mov
outsb
lcall
xchg
sub
mov
aam
xchg
cwtl
ljmp
in
push
push
mov
jne
das
int
jg
cmp
int3
xchg
dec
sub
aam
or
test
pop
push
fistpl
mov
sub
aaa
fistpl
mov
leave
xor
fists
push
test
inc
sbb
pop
or
pop
mov
cltd
and
sbb
std
imul
icebp
mov
xchg
enter
push
dec
push
jmp
mov
movsl
cmp
test
xchg
mov
adc
sbb
lock
scas
cmpxchg
mov
adcb
add
xchg
roll
adc
dec
lods
stos
xlat
or
je
xor
sbb
adcb
dec
inc
inc
add
lea
sbb
mov
cmpsb
outsl
mov
adc
ja
cmp
add
xor
jo
jbe
dec
add
mov
jp
mov
mov
mov
mov
outsb
ja
add
fs
std
in
ja
fbstp
inc
mov
pop
lds
je
sub
leave
dec
dec
dec
bound
jae
std
bnd
inc
push
sub
cmp
mov
cld
push
int
push
mov
push
mov
jmp
loopne
jecxz
push
sbb
mov
mov
push
mul
nop
mov
scas
rorl
insl
scas
mov
stos
push
xchg
pop
or
test
push
sub
mov
or
lock
pop
adc
adc
addb
and
lods
sti
xchg
lods
cmp
xor
push
aam
pusha
cs
jle
adc
cltd
pop
add
repz
dec
clc
loop
cmp
jbe
out
sub
cmp
sub
outsl
into
jno
and
rcrl
pop
andl
push
push
es
or
mov
mov
lds
adc
mov
clc
and
cmp
fwait
dec
push
aaa
pop
out
into
popf
adc
es
insb
loop
jl
int
adc
movsl
mov
mov
into
dec
sbb
sahf
test
jne
cmp
movsb
gs
andl
jl
mov
shll
es
adc
mov
cwtl
js
enter
fldenv
xchg
sbb
pushf
or
cld
repz
xchg
cmpb
inc
cmpsb
into
xlat
lods
dec
xor
arpl
jp
iret
xchg
cmpsb
sbb
lea
and
rcl
outsb
sub
mov
arpl
in
nop
aam
ljmp
out
sbb
mov
ss
sti
popa
addr16
cmp
mov
sarb
shll
and
fwait
inc
loop
mov
sarb
iret
add
data16
fcoml
mov
sahf
mov
daa
fldl
iret
fcoml
cltd
pop
ret
mov
sub
jno
push
bound
in
stos
sub
sub
les
lcall
out
or
hlt
ds
push
fcomps
in
add
dec
inc
push
jl
jne
dec
leave
ss
fldt
mov
push
push
nop/reserved
push
inc
movsb
cmp
repnz
mov
fdiv
es
sti
push
xchg
cmpsb
cmp
popa
cmp
cmpsb
je
pusha
into
add
cli
mov
dec
push
and
cmp
das
add
je
mov
inc
jne
bound
pop
addr16
fimuls
rcl
xchg
nop
call
imul
es
into
repnz
push
notb
int
xor
mov
xchg
in
frstor
in
mov
insb
xor
push
push
cltd
out
clc
inc
call
push
fiaddl
test
lods
pop
push
outsb
movsb
sub
sarl
jmp
lahf
ja
mov
icebp
push
jnp
mov
mov
scas
cmp
pop
xor
clc
in
sbb
dec
aaa
lea
ljmp
pop
xor
cmc
push
popf
and
stc
cmpsb
add
xchg
pop
je
add
dec
adc
mov
lods
dec
test
testl
xchg
sti
stos
pop
daa
mov
fistpl
movb
js
out
das
test
jp
add
jp
cld
imul
ljmp
out
stos
add
shrb
aam
dec
dec
mov
test
cmc
inc
inc
or
clc
popf
adc
gs
bound
mov
sub
or
mov
loope
dec
fistpl
mov
je
stos
das
aad
sbb
dec
ljmp
rclb
cmp
gs
or
pop
fdivs
push
inc
mov
js
aam
sub
inc
push
outsb
shll
sub
ret
dec
je
test
pop
test
inc
xor
call
mov
fsubs
xchg
add
jnp
mov
addr16
cmp
outsl
cli
popf
xor
push
pop
lds
test
jns
es
or
scas
in
sub
pop
imul
add
pop
mov
inc
or
sbb
xchg
pop
sbb
lock
aam
adc
inc
mov
popa
and
sbb
mov
push
mov
nop
in
dec
xor
mov
imul
icebp
dec
mov
jmp
and
jne
inc
movsb
mov
push
clc
or
jbe
jne
push
movsb
cmp
fprem
mov
jae
xchg
outsl
mov
sti
jmp
pusha
aad
and
loopne
sub
repnz
imul
lcall
loope
imul
movsb
into
test
inc
sub
push
fwait
scas
jne
inc
out
lods
mov
js
pop
in
adc
sub
jecxz
or
mov
cltd
lret
xchg
pushf
lods
lcall
arpl
mov
mov
push
leave
pop
shrb
cmpsb
in
les
mov
out
or
hlt
pop
or
test
rclb
inc
jecxz
out
lahf
ljmp
jne
adc
add
xchg
out
cli
mov
dec
xchg
popa
mov
cmpl
xchg
outsl
cli
nop
inc
jge
lods
jo
adc
iret
jne
ljmp
mov
and
cmpsl
mov
lods
ret
push
es
ljmp
gs
out
test
jp
cmp
popf
lea
inc
add
or
mov
or
fsqrt
lods
rcl
rorl
add
out
jb
sub
out
and
mov
sbb
dec
scas
mov
in
mov
inc
lds
jne
fldcw
test
in
or
sub
movsb
jge
mov
or
sbb
cmc
push
dec
pop
shll
repz
xchg
sbb
sbb
sub
push
insl
or
popa
test
xorb
ss
test
fiaddl
iret
sti
cmp
inc
push
pop
push
or
out
mov
idivl
dec
in
sbbb
xchg
xchg
jbe
xor
iret
test
xlat
test
inc
in
sbb
hlt
daa
pop
and
cs
aaa
jns
sub
mov
aaa
adc
mov
into
add
xchg
adc
and
repnz
ja
adc
aad
jnp
mov
dec
adc
adcb
idivl
mov
movsl
test
xlat
cmp
imul
adc
cmpsl
pop
pop
insb
inc
xor
mov
sbb
or
mov
mov
js
pop
dec
ret
push
jns
fs
arpl
gs
les
jb
out
lock
arpl
hlt
jmp
mov
movsb
sbb
fwait
int
lds
sbbb
clc
out
mov
popf
mov
iret
gs
sub
cmp
xlat
jg
cmp
mov
leave
ljmp
imul
lret
xor
adc
imul
arpl
push
mov
mov
dec
ja
cmpsb
scas
mov
sbb
xor
sahf
dec
dec
sbb
dec
mov
iret
sahf
add
jns
inc
push
std
sarl
test
pushf
iret
xchg
mov
das
test
cmp
inc
sub
out
add
sahf
mov
or
mov
sbb
cltd
sub
into
repz
loopne
sbb
inc
mov
or
mov
sbb
push
push
mov
mov
pop
sbb
jo
sbb
inc
jge
and
jb
mov
and
out
enter
jne
rcrl
pop
sbb
jle
out
stos
roll
push
pop
push
les
add
mov
inc
adc
push
cmp
xlat
icebp
or
aaa
lahf
mov
xchg
mov
inc
mov
into
call
lds
xchg
out
adc
sbb
and
inc
push
cmp
in
and
push
push
fadds
outsb
adc
leave
or
shrl
aas
ret
lds
sahf
sub
mov
sarl
push
mov
insb
aad
orb
jp
mov
sarb
js
xor
adc
xor
cltd
lret
cmp
test
insb
std
jmp
mov
or
or
and
test
insl
mov
insl
int3
add
pop
sub
in
inc
test
clc
pushf
negl
add
in
ja
iret
popf
jns
das
jns
enter
add
fsubrp
in
dec
sti
out
enter
pop
rcl
out
std
les
sbb
xchg
cs
mov
push
adc
scas
enter
lods
int3
aam
stc
add
lods
cmp
cmp
xchg
or
xchg
pop
int3
sbb
jo
gs
lcall
les
add
pushf
pop
jae
sbb
sub
and
aas
inc
in
call
call
jp
add
add
idivb
push
push
std
xchg
outsl
xlat
jae
movsl
inc
insl
stos
clc
jb
sbb
div
xchg
test
sarl
addr16
stc
loopne
ja
in
les
dec
jne
mov
xor
jp
repz
mov
insb
inc
std
jl
mov
mov
aam
cltd
xor
repnz
imul
adc
sub
rcrb
sub
out
cmp
jo
call
stos
imul
loopne
ss
add
inc
jl
subl
shll
or
addb
in
sub
cmp
mov
xchg
mov
js
out
and
push
push
into
cmc
mov
pop
xchg
add
sahf
rolb
jge
mov
mov
jge
sbb
sub
add
shll
jg
inc
xorb
cmc
dec
sbb
jmp
jle
in
xchg
test
dec
inc
dec
ss
shl
cmp
dec
cmpsb
fcomps
mov
stc
push
jns
xlat
adc
sbb
cmpsl
mov
dec
dec
lods
aam
pop
sar
out
loopne
daa
test
je
add
leave
jge
sbb
cmpsb
std
ret
cmp
outsl
xchg
xor
or
rclb
mov
xor
jbe
adc
popf
movsb
cmc
push
add
cmp
movsl
negl
push
pop
and
fcompl
gs
mov
dec
es
in
sbb
aam
xor
out
xchg
aam
xor
es
sbb
loop
test
xchg
adc
outsb
mov
outsb
lds
test
cmp
int
xchg
xor
aas
sahf
mov
loopne
addr16
mov
sti
rcr
pop
in
shll
fs
repz
or
int
dec
or
mov
adc
hlt
adc
sbb
lods
aas
or
loop
fistpll
sbb
loopne
aam
loopne
adc
scas
clc
or
in
pop
jae
mov
sbb
inc
push
movsl
mov
inc
lea
call
mov
movsb
fcmovu
pusha
ret
mov
outsl
jbe
push
jbe
in
mov
int3
and
faddl
dec
sub
mull
outsb
xchg
mov
imulb
imull
clc
dec
mov
or
shrl
gs
pop
xor
test
pop
outsl
je
push
fistpll
jb
imulb
ret
daa
loop
inc
aaa
lods
mov
mov
test
sbb
test
add
rclb
test
sub
testb
jb
ss
fistpl
sarb
and
cmpsb
push
push
imul
pop
add
inc
sub
and
mulb
js
or
jmp
push
push
add
cmpsl
dec
xchg
outsl
movsb
mov
stos
sub
mov
xchg
inc
jbe
jl
dec
cmp
push
jo
shrb
and
xlat
nop
pop
ja
fisttps
and
std
mov
test
xor
pop
sahf
xor
cld
enter
iret
clc
cld
adc
mov
sub
sbb
hlt
inc
rclb
clc
ficompl
imul
std
rcl
xchg
shll
push
mov
xchg
mov
fiaddl
in
cmpsb
xchg
test
push
dec
sarl
into
adc
lret
ds
iret
cmp
xlat
xchg
mov
stos
mov
and
sbb
xlat
outsb
inc
mov
ds
sbb
sub
js
fcmovne
stos
sub
fdivrs
xchg
aad
xchg
jg
cs
jp
gs
dec
hlt
or
xchg
pop
cmp
addr16
adc
es
push
mov
mov
push
pop
mov
fimull
push
ja
sbb
jne
cmp
inc
xorb
mov
inc
in
adc
and
dec
xor
imul
jg
std
add
push
js
mov
mov
ljmp
sbb
gs
mov
fidivl
sti
add
scas
xchg
insl
xor
cli
inc
mov
mov
inc
call
jnp
test
push
mov
leave
sub
add
repz
ja
mov
scas
loopne
ret
mov
int
cmp
jnp
shrb
pop
test
mov
repnz
out
push
aaa
jns
push
adcb
xchg
jbe
mov
push
cmpsl
inc
mov
call
mov
jbe
ss
cli
push
pop
fcmovb
jnp
std
rolb
test
inc
mov
mov
add
and
adc
aaa
mov
xor
test
add
stc
mov
cmp
arpl
mov
push
mov
fsqrt
adc
iret
lods
adc
je
insl
add
sbb
loopne
inc
mov
ss
xchg
xor
mov
mov
lods
nop
mov
mov
repz
insl
adc
cwtl
jp
js
xor
lcall
scas
xchg
jecxz
negl
dec
add
inc
mov
ficompl
cmp
nop
adc
mov
push
adc
les
push
scas
sub
data16
cmp
popa
test
mov
das
aad
pop
jns
into
and
jne
pop
mov
sub
out
ror
or
or
mov
js
xor
pop
dec
movsl
dec
lahf
mov
out
mov
aaa
dec
fucomi
movsb
stos
adc
inc
test
and
sbb
aad
fsin
push
cmp
jmp
dec
inc
mov
push
add
orl
mov
pop
sbb
jg
insb
or
jbe
or
filds
sti
mov
push
mov
idivb
clc
ret
jle
push
aad
sub
cmp
pop
daa
test
or
frstor
push
in
stos
into
sbb
out
mov
pop
aas
fsubrs
je
xchg
daa
sbb
stos
sbb
lcall
pop
mov
mov
jge
jnp
test
in
es
and
pusha
mov
hlt
cmpsl
jl
ja
jb
ja
pop
out
loop
clc
fs
in
insb
in
pop
mov
and
loop
jmp
pop
push
int3
xchg
cmpsb
add
lds
push
dec
mov
pop
pop
or
cmp
adc
out
movsl
mov
pop
imul
mov
std
iret
and
popf
cli
mov
jge
loope
jo
mov
movsb
add
cmp
add
sbb
in
pushf
jmp
in
scas
mov
popf
push
jle
aad
pop
and
adc
inc
setnp
xchg
popa
pop
add
adcb
push
push
sarl
inc
adc
inc
pop
fiadds
cmc
mov
inc
mov
movsb
es
fs
jbe
jno
mov
mov
xchg
bnd
rcrb
fldl
ja
dec
imul
lock
jp
adc
xchg
cmp
pop
fwait
xchg
movsl
fcmovnb
test
pop
jl
push
sub
in
and
jno
int
lds
rcrb
sahf
xchg
iret
xchg
inc
pop
sub
les
pop
imul
les
xor
jl
or
out
cwtl
cld
daa
adc
or
add
fdivs
sbb
push
fildll
ret
aas
pop
out
or
jg
jns
mov
imul
mov
int
lock
hlt
mov
xlat
pop
push
arpl
ret
xchg
mov
xchg
push
stc
outsb
cmovg
jbe
popf
jge
adc
xor
mov
pop
xchg
or
nop
inc
adc
mov
rclb
leave
jbe
sbb
jge
cmpsl
xchg
movsl
int3
mov
mov
mov
inc
lods
popf
pushf
sbb
push
es
and
cld
cmp
sbb
test
or
enter
scas
sbb
add
mov
jne
push
cmp
shl
int
or
shlb
xor
fwait
sahf
cmp
repnz
and
dec
adc
mov
sub
loopne
push
dec
lahf
mov
inc
lcall
stos
cltd
dec
add
mov
mov
sbb
pop
gs
pushl
cmp
jle
adc
push
stc
icebp
add
jne
into
adc
pusha
fidivl
int3
xchg
ret
dec
cs
fs
mov
xchg
mov
xchg
in
mov
pop
cmpsl
xchg
or
pop
push
add
pop
imul
pushf
pop
xorl
mov
adc
mov
sbb
inc
push
mov
push
test
push
pop
iret
add
sbb
add
mov
xchg
jg
mov
inc
pop
lods
imul
push
nop
push
arpl
aas
jmp
xor
fwait
and
xor
out
mov
rolb
lock
dec
or
int
add
fdivs
sbb
push
lea
or
cmp
ja
mov
pop
adc
insb
inc
lods
pushf
and
icebp
xchg
dec
push
sbb
test
es
repz
ja
stos
xchg
lea
sbb
mov
mov
push
fisubl
hlt
cmpsl
arpl
addl
xchg
movsl
daa
mov
mov
sbb
pop
sbb
inc
sbb
insl
mov
sti
pop
or
lahf
scas
sbb
add
jp
cltd
aaa
pop
sahf
sub
push
and
xor
xlat
fsub
mov
push
push
test
movl
flds
out
and
mov
pandn
pop
fisubrs
xor
inc
popa
cmp
jbe
lcall
fldt
mov
lahf
xchg
out
push
dec
lret
dec
orb
ds
or
sarb
test
movsb
mov
push
jl
pop
jge,pt
inc
xor
lods
jbe
sahf
sbb
ret
in
mov
das
testb
xlat
jae
dec
inc
adc
mov
mov
into
cmp
cmc
je
push
repz
xchg
out
inc
outsl
push
or
addb
add
inc
add
cmp
insb
xor
mov
xor
ret
daa
lret
fucom
fimull
xchg
aad
mov
jae
arpl
jmp
pop
fs
mov
mov
fists
lcall
xor
push
jbe
rcll
mov
scas
into
push
aad
mov
fmull
and
lahf
xchg
outsl
imul
dec
cld
mov
fwait
adc
sub
jp
cltd
xchg
cmpb
inc
sub
xchg
imul
cs
notl
mov
pop
mov
sbb
movsl
add
mov
subl
pop
stos
inc
rcrb
sbb
fisubl
xchg
frstor
in
xchg
push
popa
inc
test
xchg
xor
adc
xor
mov
inc
pop
xchg
inc
dec
mov
mov
pop
dec
or
mov
gs
pop
sbb
into
xchg
fwait
jp
mov
jno
testl
lods
push
call
push
xlat
out
outsl
dec
daa
std
mov
hlt
dec
dec
mov
pop
jl
mov
mov
mov
cs
pop
pop
out
adc
add
in
cld
fnsave
dec
xchg
and
inc
cld
js
jmp
imul
rolb
icebp
popa
push
scas
into
xchg
daa
push
push
xor
pushf
jne
enter
push
inc
lret
jns
dec
ret
jno
push
jb,pt
mov
mov
outsl
pop
cmp
pusha
adc
inc
pop
cmp
fisttpll
xchg
jmp
xchg
push
mov
mov
scas
mov
adc
add
inc
lret
inc
jecxz
inc
dec
in
jne
or
xchg
das
icebp
adc
ret
or
mov
scas
xchg
ror
or
dec
ret
out
jb
shrl
fists
nop
pop
andl
add
sahf
cmp
push
inc
out
mul
loope
push
mov
popa
xlat
mov
ljmp
ss
fwait
xorb
and
xchg
inc
nop
jle
in
fsubrl
or
iret
lock
rol
jbe
cwtl
jnp
inc
ja
movsl
sahf
pop
pop
xchg
mov
jecxz
icebp
cs
mov
inc
js
fidivrl
mov
cmp
jns
loopne
sub
and
outsb
push
jno
mov
out
jp
jno
add
lcall
and
imul
cli
jg
push
jae
push
add
or
inc
add
jae
inc
jo
hlt
and
shrb
push
leave
adc
push
loope
outsb
adcl
push
int
mov
xor
sub
fwait
sbb
or
es
enter
adcl
mov
sarb
stos
outsb
cwtl
call
inc
add
rcl
jge
ss
orl
out
xchg
ja
cli
fdivl
and
sub
mov
addr16
lret
test
cmp
adc
inc
cmp
pop
popa
sbb
outsl
xchg
movzwl
mov
fwait
xlat
bound
xchg
dec
mov
mov
mov
fidivrs
mov
in
mov
sbb
dec
js
mov
fbld
jno
inc
push
cli
ljmp
and
jmp
sti
jmp
xchg
mov
imul
and
push
imul
notl
jne
jb
xor
pop
pop
popa
xchg
jnp
repnz
jl
arpl
jp
bound
mov
or
ja
loopne
pop
loop
rorl
xchg
lret
divl
mov
popf
out
lea
add
sahf
push
leave
pop
movsb
leave
mov
cmpsb
adc
fistl
enter
inc
in
pop
pop
rcll
sbb
mov
fsubrs
add
nop
test
inc
dec
lahf
data16
inc
js
clc
or
jb
push
ficomps
lods
push
cmp
pmaxub
rcrl
mov
cmpsb
or
inc
loop
dec
lahf
and
jp
dec
js
push
mov
imulb
in
xchg
add
jo
cmp
jne
insb
out
stos
cmp
mov
push
out
mov
ficoml
imul
cs
es
negb
xlat
adc
orl
les
out
sub
xchg
call
xchg
inc
and
pusha
dec
cmpb
mov
loope
mov
mov
scas
push
inc
loop
jns
mov
repz
sbb
mov
mov
hlt
lret
inc
mov
push
aas
mov
jecxz
mov
pop
cs
in
jne
cwtl
popa
sahf
cmp
faddl
mov
add
ljmp
fldenv
pop
mov
jae
ja
pop
movsb
out
adc
outsl
jne
adc
inc
test
sbb
or
add
or
fwait
push
cmpsb
adcb
daa
pop
dec
aas
cltd
xchg
pop
negb
dec
rol
dec
lret
int3
inc
icebp
jne
mov
sbb
out
push
mov
mov
ret
rorb
xor
jbe
cmp
jmp
mov
lods
xchg
sbb
pop
sbb
ret
add
lea
mov
cltd
test
imul
jns
and
adc
xchg
xor
testb
sbb
shll
or
mov
cmpsb
pop
add
mov
mov
js
and
push
and
pop
xor
fcom
or
or
lods
mov
cmpsl
clc
add
inc
adc
sub
mov
sarl
mov
fucomip
cltd
or
push
out
cmp
dec
lea
lahf
hlt
scas
jmp
xor
leave
mov
rolb
sbb
lods
mov
or
mov
push
dec
lret
push
loope
insl
sub
xor
bound
movsb
mov
cmpsb
ss
mov
movsl
sub
insb
loopne
repnz
rcll
or
cli
pop
lret
sub
inc
xor
rcr
shr
mov
mov
add
clc
sahf
adc
rcrl
mov
xchg
fwait
mov
push
sbb
popf
inc
pop
adc
xor
inc
sbb
inc
xchg
mov
xchg
cmpsl
xor
repz
sbb
loope
arpl
fldt
bswap
pop
lahf
push
repnz
mov
xchg
add
mov
pop
and
or
fldt
sub
lret
pop
sbb
and
mov
or
mov
cmpsb
mov
push
in
jns
ljmp
push
inc
stos
loope
cltd
movsl
lods
ret
icebp
mov
xchg
test
fldenv
xchg
inc
int
loop
addr16
out
mov
mov
inc
daa
out
cld
dec
dec
dec
stos
pop
mov
divb
jp
xchg
in
in
mov
enter
dec
sahf
pop
call
and
js
ja
inc
mov
add
sub
sub
add
inc
les
inc
jae
add
aam
cmp
in
repz
pop
pop
and
adc
repnz
cli
inc
fsubl
cwtl
lret
es
bnd
fstl
andl
pop
push
iret
cmp
adc
into
addr16
add
push
nop
mov
mov
sub
pop
add
mov
ds
sbb
pop
xor
jle
lea
push
mov
and
sbb
sarb
in
inc
sbb
adc
adc
jg
dec
inc
xchg
jg
fidivrs
jbe
mov
adc
sbb
test
cld
sub
sbb
fidivl
jmp
in
or
iret
out
add
out
in
sahf
dec
sub
call
dec
inc
push
aad
xchg
iret
fisttpll
fadds
adc
cmp
jle
in
add
fwait
shll
out
nop
jp
push
addr16
and
mov
sbb
mov
add
sbb
inc
xorl
jnp
js
das
ret
loope
sub
or
lahf
cli
fcmovb
pop
sarb
xor
xchg
pushf
sub
sbbl
inc
subl
call
cwtl
fs
xor
push
push
out
dec
dec
mov
pusha
and
ja
lds
adc
test
test
inc
mov
inc
lea
js
mov
push
jge
loopne
inc
inc
mov
sub
leave
movsl
add
xchg
mov
cli
xchg
cmp
rclb
xchg
mov
xor
push
in
push
fmul
jnp
outsl
sbb
adc
dec
pop
insb
mov
adc
adc
lods
dec
out
insl
inc
jne
stos
xor
sub
sbb
push
jp
daa
ja
into
ficompl
cld
test
or
ss
mov
jmp
insb
icebp
hlt
insb
add
lret
xorl
mov
push
inc
cmp
and
shrb
in
adcl
data16
mov
and
aas
push
sbb
aas
mov
jnp
push
outsl
mov
repz
mov
fidivrs
xorl
xchg
mov
xchg
sbb
ja
jb
mov
or
les
jbe
sub
daa
push
cmpsl
fimuls
jne
popf
mov
fs
inc
dec
loopne
dec
cltd
mov
fwait
mov
push
mov
and
mov
shll
or
out
aas
add
sub
xrelease
pop
icebp
aad
ljmp
decb
push
jo
add
lret
stc
mov
mov
lods
je
inc
xlat
sbb
sub
aad
cmpb
int3
out
mov
es
jg
push
inc
mov
addr16
lea
xchg
and
ljmp
clc
ja
dec
loope
lcall
js
mov
movsl
cmp
dec
mov
inc
and
sbb
xchg
test
mov
aad
stos
js
dec
xor
or
pop
rclb
mov
sub
cmp
mov
es
mov
xor
out
or
xor
adc
fcmovnbe
imul
sub
aas
das
push
or
mov
out
adc
sbb
mov
mov
dec
jge
in
mov
sub
and
push
mov
jno
lods
orl
xchg
xchg
dec
mov
cmp
sub
pop
fsub
stos
sti
test
mov
add
fsub
test
lods
daa
adc
sbb
in
mov
pop
cli
add
mov
jae
cmp
out
loope
mov
mov
stc
mov
arpl
sub
clc
scas
push
add
dec
lcall
fiadds
outsl
mov
mov
cwtl
xlat
sti
xor
mov
mov
xchg
aaa
and
pop
cltd
rcrl
pop
arpl
arpl
cli
push
loope
lret
mov
rcrl
mov
dec
popa
data16
push
push
roll
pop
pop
stc
aam
or
cmp
les
cmp
inc
cmp
lcall
and
cmp
xor
push
cli
inc
adc
or
jp
mov
nop
subl
cwtl
dec
jb
mov
jnp
aam
dec
das
fs
dec
imul
dec
add
mov
push
push
jl
dec
sti
cmp
mov
dec
out
cmp
shlb
test
jnp
and
call
mov
sub
push
sahf
insl
cmpsl
and
fimull
push
jbe
and
enter
iret
xchg
or
lds
xchg
mov
mov
jg
add
adc
jl
adc
add
mov
xorl
sub
lds
scas
sub
popa
pop
add
or
mov
xor
sub
or
cmc
lcall
lods
imul
cmp
lret
jb
jle
mov
test
jle
xchg
movsb
addr16
stc
pop
inc
pop
mov
push
xor
inc
xchg
adc
push
loopne
jo
pop
ret
sub
imul
into
sti
pop
fs
lahf
xchg
or
xchg
neg
ficoml
mov
mov
and
pop
faddl
loope
sarb
jne
aam
mov
mov
sbb
daa
mov
push
lcall
inc
and
pop
mov
jb
sub
mov
add
sub
gs
xchg
push
xchg
outsb
fiaddl
stos
push
sbb
sub
int
push
push
cmp
cmp
lret
sbb
jno
cli
mov
repz
xchg
stos
and
mov
pop
imulb
shl
fnstsw
test
repnz
insb
jp
xchg
cmc
call
sbb
clc
push
dec
loope
ror
test
jl
lods
adc
std
stc
mov
inc
rolb
jno
sbb
pop
xchg
jmp
lahf
out
cmpl
push
out
cmp
or
adc
cmc
jns
add
cwtl
xchg
orb
jp
decb
sbb
out
pop
call
test
lock
xchg
loop
push
mov
pmulhuw
bound
divb
popf
enter
jp
xchg
push
cmp
mov
jp
or
jmp
or
lret
loope
pop
clc
xor
into
dec
cmp
mov
push
xchg
adc
imul
jbe
sub
cld
inc
inc
test
outsb
pop
cmp
out
stos
mov
and
cmp
jb
sub
xor
cmp
push
in
pop
scas
int3
fsubs
fdivl
je
fiaddl
loopne
xchg
and
add
dec
xchg
push
mov
outsl
ds
cmp
jg
pop
mov
arpl
mov
pop
jp
or
int3
xchg
stos
aas
int
and
sbb
pop
sarl
or
dec
dec
scas
push
push
addr16
gs
add
xor
inc
mov
adc
out
push
loop
in
add
jle
add
mov
outsb
inc
xchg
imul
bound
lods
cmp
xor
arpl
ds
rorb
stc
cwtl
jmp
cmp
lea
jno
jno
and
addr16
push
test
mov
aaa
lret
fwait
scas
pop
inc
pop
lock
clc
loop
jns
lods
outsl
in
icebp
mov
scas
sbb
jno
jns
sub
xor
push
pop
jp
jmp
movsl
inc
jnp
aam
lahf
aas
add
xor
or
repnz
incl
push
inc
das
and
call
mov
sbb
sbb
pop
sbb
xchg
loop
cmpsl
out
mov
pop
das
nop
addr16
test
pushf
jne
add
xorl
shll
inc
mov
sbb
pop
pop
inc
sub
cltd
sub
aad
ffreep
pop
popa
mov
jge
jmp
sub
sub
jns
mov
lcall
imul
dec
dec
les
das
das
cmp
mov
push
out
add
push
jbe
mov
push
add
fsts
jno
sbb
cmpsl
sub
push
clc
adc
mov
and
dec
xlat
xchg
fst
xchg
mov
std
ret
push
xor
lea
aaa
mov
out
in
ret
xchg
and
mov
add
hlt
jecxz
add
pushf
rcrb
repz
lret
jmp
aad
nop
push
aas
adc
imul
les
cmp
xchg
fs
push
call
xchg
pmuludq
mov
pop
rolb
pushf
inc
push
cmp
lcall
outsl
out
sbb
add
cmp
or
rcrl
push
push
in
movsb
pushf
push
pop
ja
dec
sahf
sbb
push
inc
loopne
mov
mov
pop
nop
ja,pn
test
mov
cmpsl
into
mov
ficoml
in
in
jbe
lret
sarl
sbb
mov
mov
pop
mov
push
push
mov
push
scas
cltd
mov
enter
dec
fmull
lahf
imul
jae
rcrb
add
ja
xchg
fildll
mov
outsl
xchg
pop
les
stos
lahf
fcoms
icebp
cmp
dec
push
dec
cmpb
inc
into
add
das
mov
jno
cmpb
enter
sti
adc
in
mov
or
push
mov
test
sub
cmp
divl
arpl
aad
pop
cmp
jnp
lret
leave
js
test
mov
mov
movsb
mov
inc
mov
mov
xor
imul
out
cmc
push
fnstcw
push
mov
into
push
inc
loope
je
sbb
cmp
das
push
pop
cs
adc
ja
pop
pop
scas
gs
sub
jle
mov
dec
fbstp
mov
pop
pop
push
lea
add
pop
int3
insl
fldenv
sti
scas
scas
lret
push
xor
roll
sub
ficoml
mov
add
jne
or
cmp
xchg
in
push
sbb
les
or
jp
mov
test
in
jp
push
inc
lds
adc
out
or
push
lret
data16
outsb
lds
movsb
cld
fdivrs
and
aas
lods
xor
jle
lods
inc
test
loope
test
and
js
jp
test
cmpsl
jmp
das
sbb
aam
and
jbe
pushf
roll
xchg
and
sbb
mov
in
cmpb
mov
fidivl
jl
fidivrl
insl
mov
xchg
or
std
mov
xor
jne
push
pushf
lret
daa
test
popf
cmpsl
mov
sbb
push
ljmp
test
mov
pop
aad
jecxz
loop
sub
jge
cmp
repz
ja
movsl
adc
mov
dec
xor
lahf
cs
addr16
arpl
lods
xchg
hlt
loop
push
sub
mov
mov
hlt
movups
dec
push
lods
ret
fwait
cmpsl
inc
aam
cmpsb
nop
add
inc
loopne
mov
addr16
movsl
jp
mov
push
ljmp
adcl
or
or
adc
pop
leave
repz
movsl
jecxz
lods
nop
repnz
cld
enter
cmpsb
imul
outsl
jne
je
sub
dec
inc
sub
aam
inc
dec
out
and
mov
sarl
incb
fdiv
pop
fsub
jnp
xor
lcall
cs
pop
mov
or
cld
dec
lods
pop
xchg
pop
fcomi
and
jl
adc
jbe
out
dec
sub
add
or
xchg
cltd
xchg
ret
or
jbe
fisttps
dec
repnz
push
and
pop
lock
aad
cmp
sub
mov
cli
jmp
sub
xor
repnz
into
aas
xchg
dec
mov
stos
loope
mov
jb
insb
pop
adc
or
adc
pop
repz
sbb
arpl
add
mov
jg
mov
xchg
inc
lcall
mov
jbe
push
mov
dec
xchg
ljmp
xor
push
int3
js
dec
xchg
push
jmp
mov
lods
enter
mov
fwait
push
out
xor
push
dec
pusha
and
ret
dec
pop
sahf
mov
imul
mov
imull
xchg
sbbb
cmp
daa
push
loope
inc
sbb
mov
insl
gs
push
mov
out
sbb
jle
lock
mov
lods
mov
pop
mov
add
mov
sub
outsb
aaa
adc
call
cmp
cld
sbb
sub
adc
inc
xor
das
int
push
fistl
outsl
adc
stos
stos
add
mov
popa
cmpsl
xchg
inc
enter
push
ror
jmp
fld
xchg
inc
fwait
insb
xor
aaa
add
rcll
sahf
mov
pop
push
mov
orb
push
jnp
fld
jmp
decb
sbb
lret
sbb
add
or
and
pushf
xlat
fwait
aad
push
scas
dec
mov
inc
ror
movsl
ret
pop
pop
push
insl
jae
rorl
hlt
cld
pop
and
shll
jmp
aas
ja
xchg
sahf
pop
cmp
leave
pop
aam
xor
xchg
in
push
pop
jns
fidivl
lret
inc
rolb
cmpsl
mov
mov
test
pop
divb
or
stos
pop
mov
xchg
mov
add
inc
adc
cwtl
push
mov
fwait
push
add
and
mov
and
jl
and
push
arpl
push
pop
push
mov
mov
mov
in
rcrb
pop
jmp
mov
lret
push
std
sub
push
repz
push
dec
out
or
popf
or
imul
js
dec
shlb
sub
xchg
inc
sub
out
rolb
hlt
aam
pushf
divl
pop
lahf
sub
bswap
outsl
test
xor
in
cmc
repnz
mov
push
sbb
adc
xor
jecxz
jbe
push
cltd
insb
scas
adc
lods
cmp
push
sbb
adc
imul
cmc
test
lods
roll
lret
mov
outsb
adcb
sbb
xchg
add
and
loopne
inc
push
sbbl
gs
les
sbb
sahf
push
sub
in
cltd
inc
nop
das
and
imul
test
out
fmull
out
rcrl
jecxz
repz
pop
xor
and
sbb
jne
lret
or
push
xor
xchg
std
icebp
incl
pop
xor
aad
push
add
cmpsl
push
cmpb
out
mov
mov
sub
dec
int
aad
inc
push
xor
inc
popa
mov
fiaddl
inc
es
jmp
inc
addr16
imul
testl
xor
sub
nop
ret
add
pusha
shlb
xchg
test
sti
out
jnp
xchg
mov
dec
ljmp
rcl
icebp
pop
pop
sbb
xlat
es
int3
outsl
enter
mov
pshufw
push
dec
fwait
test
nop
fcmovb
repnz
cmp
orb
fs
mov
incb
aam
or
test
ficoms
cmpl
outsl
sub
fnsave
inc
xchg
cmc
ret
ret
bound
xor
sub
fwait
inc
sbb
in
mov
ljmp
push
les
pop
xchg
lock
out
and
mov
cmp
aad
bound
xchg
outsb
mov
sub
inc
orl
loop
fnstsw
push
shr
ret
jl
and
cli
push
icebp
enter
inc
jnp
pop
adc
cld
push
dec
out
std
mov
in
inc
pop
aas
arpl
fimuls
icebp
mov
cld
or
lea
test
icebp
lret
dec
ds
mov
sub
repnz
xor
gs
pop
push
lret
les
jno
icebp
lock
clc
jno
ffree
jb
and
add
cmp
cmp
and
pop
or
add
lods
pop
cs
jnp
popl
inc
adc
fcoml
cld
xor
and
ja
cmp
scas
stos
js
jbe
inc
pop
cmpsb
insl
sbb
out
jne
push
stc
mov
jnp
shl
fs
mov
outsl
lea
out
mov
push
xor
inc
pop
mov
cld
in
mov
mov
jmp
aad
in
lcall
int3
mov
pop
jp
add
incb
mov
add
inc
clc
mov
sbb
imul
push
test
filds
jbe
gs
pusha
sub
and
scas
cmp
mov
movsl
lds
scas
mov
mov
ljmp
cli
sub
pop
inc
mov
inc
sbb
sbb
cwtl
xor
mov
mov
dec
pop
and
jmp
sbb
xor
divl
das
rorb
insb
inc
xchg
cli
stos
je
sub
add
stc
cmp
push
ficoml
cmp
addb
dec
add
mov
push
in
jecxz
pop
hlt
mov
push
sbb
add
or
lahf
scas
push
push
or
andb
push
push
or
sub
mov
xor
mov
clc
aam
in
rcll
daa
ljmp
scas
sub
mov
mov
push
in
mov
repz
shll
mulb
lret
cmp
mov
cmc
dec
arpl
fmulp
jp
inc
push
add
jne
cs
repnz
sub
andb
icebp
pop
test
inc
js
in
aad
mov
jmp
test
cmp
pop
push
lds
mov
and
add
sbb
pushf
push
ficoml
or
xchg
movsl
or
sub
jmp
lea
and
dec
xor
scas
cli
gs
add
sarb
int3
mov
test
rolb
inc
jne
lock
je
sbb
and
shlb
inc
mov
and
movsl
and
mov
dec
mov
sbb
adc
sahf
dec
mov
sbb
pusha
mov
notb
test
push
fwait
leave
sbb
mov
inc
pop
cmpsb
loopne
es
aaa
in
mov
outsb
cli
movsb
es
lock
pusha
sbb
popa
pop
test
hlt
int
cmp
sahf
or
call
adc
lea
stc
sub
stos
pop
pusha
int3
pop
pop
sub
adc
xor
inc
enter
pop
jle
daa
inc
scas
js
and
mov
or
adc
sub
inc
mov
imul
fsubrs
cmp
rorl
insl
push
out
add
imul
ret
pop
dec
scas
or
xchg
inc
dec
cmp
jbe
add
das
out
mov
jns
data16
fwait
jne
frstor
xchg
mov
add
repnz
call
ja
jno
pushf
cmp
mov
mov
push
push
fistpl
negb
lahf
pop
fnstsw
sbb
jle
pop
xorb
pop
subb
mov
inc
mov
xchg
push
lret
pop
leave
push
xor
ds
ds
sbb
jg
cmp
cs
xor
hlt
arpl
addb
push
jne
push
sub
sbb
xchg
stc
push
or
push
mov
lret
mov
mov
cltd
ljmp
sahf
testb
into
lret
icebp
sbb
add
pop
jmp
xor
cvtps2pi
mov
popa
fdiv
push
pop
sti
inc
jne
jp
aas
lret
push
mov
popf
sub
lea
sbb
xchg
xchg
lcall
mov
test
fmull
sub
test
inc
stos
xor
push
jo
pusha
testb
cld
call
dec
push
jmp
xchg
mov
mov
jbe
pop
stc
std
and
add
es
mov
dec
call
test
ja
testb
mov
arpl
push
jne
stos
xor
rclb
adc
aaa
cmc
clc
lahf
jl
data16
xchg
mov
aam
mov
repz
push
loopne
aam
sti
test
lods
jle
arpl
fwait
js
dec
ljmp
ret
xor
sahf
jnp
mov
push
mov
or
lds
push
rcll
sub
mov
jns
arpl
shl
shlb
xchg
rolb
cwtl
jg
and
inc
in
arpl
sub
fiaddl
pop
lods
mov
sbb
enter
daa
add
repnz
or
gs
out
xor
jb
adc
lods
and
xchg
jmp
fsts
xchg
icebp
push
hlt
pop
xor
ja
sub
ret
add
pop
xor
mov
test
and
adc
and
repnz
add
and
push
push
xor
sub
sbb
in
push
cmp
xor
pop
or
cs
lahf
mov
xor
adc
mov
ret
aad
xchg
int3
jb
add
dec
push
ljmp
ds
cmp
mov
lret
andb
lock
fimull
or
movsl
cmp
inc
add
dec
jbe
fwait
aas
cmc
adc
jmp
cmp
jne
mov
test
sbb
cmp
dec
daa
jecxz
js
dec
cmp
xchg
xchg
clc
pop
scas
sbb
xor
pusha
int3
mov
xchg
and
int
out
dec
les
movsl
mov
or
sub
insl
jnp
pop
push
jne
imul
jmp
adc
pop
inc
fistpl
stos
mov
or
jns
fwait
inc
add
dec
dec
inc
pop
sub
mov
sbb
or
jb
lods
je
xchg
daa
dec
loope
gs
mov
in
ja
push
jp
ja
aas
jnp
fwait
loop
and
xor
mov
mov
cmp
cld
lret
adc
scas
gs
fucomp
pop
pop
dec
fidivl
sbbl
and
mov
push
sbb
inc
stos
add
sbbl
pop
enter
lahf
add
mov
cmp
cmp
jl
sub
fs
outsl
adc
cmp
xchg
sub
push
inc
pop
jno
dec
hlt
sub
in
or
add
shlb
fistps
sbb
insb
inc
pusha
dec
xchg
and
lock
inc
lret
sbb
stos
mov
leave
lds
movsb
repz
lret
clc
cmp
cwtl
fs
cli
insb
fildl
cmp
mov
adc
inc
pop
cli
mov
dec
mov
add
ljmp
push
xchg
sbbl
or
cmp
mov
pop
test
lahf
mov
and
mov
hlt
das
sub
pop
js
test
faddl
jg
jecxz
push
std
je
daa
and
inc
sbb
mov
es
jno
test
imul
sbb
fiaddl
sbb
sarb
jmp
fbstp
xor
add
lret
hlt
aas
imul
cmp
pop
pop
xchg
jbe
push
sub
aas
adc
stos
mov
imul
out
jmp
pusha
mov
rcl
xchg
cld
pop
ljmp
sbb
jp
ds
test
jge
icebp
sub
dec
addr16
pop
jl
sbb
hlt
add
test
outsl
daa
pushf
je
cli
stc
int3
pop
das
adcl
or
aam
sub
adc
pop
movsb
lods
mov
xor
xor
lods
jns
div
ja
and
push
cld
cmp
lods
xchg
and
incl
and
shlb
mov
and
xchg
pop
addr16
inc
fwait
mov
repz
xchg
and
notl
xchg
sub
push
and
jmp
jle
mov
and
jne
mov
sbb
sbb
imulb
pop
rorb
jmp
ret
cs
lret
jo
cli
or
xchg
xchg
sbb
cltd
and
stc
aam
arpl
out
cmp
xor
enter
out
ret
push
sbb
jg
push
mov
mov
push
mov
and
and
sbb
ds
add
inc
pushf
mov
call
mov
xchg
inc
jbe
xlat
nop
jne
jns
cmc
jno
aas
jbe
sti
pop
fwait
add
adc
arpl
repnz
cwtl
jo
enter
je
add
sbb
or
mov
cmp
ljmp
pop
fldcw
ret
call
repnz
xchg
jmp
outsb
aam
incb
rcrb
push
lods
shlb
mov
popf
repz
dec
jae
or
ljmp
mov
pop
lret
les
sbb
xchg
mov
add
or
insl
out
jnp
jbe
jl
lods
jbe
or
cwtl
ret
fidivrl
mov
cmp
or
inc
js
lcall
inc
bound
sbbb
aad
das
fadds
icebp
and
mov
mov
jl
push
add
imulb
pop
jg
fcom
sbb
popf
sbb
lea
and
mov
rorb
push
dec
testl
add
data16
dec
arpl
fistl
push
xchg
popa
cli
inc
xchg
sbb
mov
cld
rcll
shlb
loopne
cwtl
ret
rorl
mov
leave
or
xchg
lret
push
xor
jecxz
fisttpll
jl
push
movsb
pop
leave
inc
outsl
inc
cmpsb
addr16
ss
jae
xchg
adc
leave
sub
daa
or
es
push
xor
xlat
scas
sbb
fnstcw
stos
fstpt
pushf
stos
and
mov
push
pop
inc
iret
jle
push
sbb
lcall
ljmp
xor
adc
pushf
jg
fisttps
ja
jmp
loopne
fdivrl
or
mov
push
dec
or
xchg
push
js
or
dec
mov
vcvtps2dq
testl
inc
jns
or
out
push
rcr
add
dec
bswap
jne
pop
scas
ret
movsl
dec
xchg
in
repnz
vpsubusb
mov
dec
int
mov
in
pop
int3
test
insb
jmp
pusha
aaa
jne
mov
mov
mov
fists
fisubs
jae
leave
jg
hlt
vmovq
nop
scas
pop
sub
loope
sub
inc
cmc
cld
sbb
aaa
dec
scas
jmp
rcrb
shl
jns
add
dec
repz
aad
and
inc
inc
push
insb
fisubs
cld
mov
cs
testb
roll
cld
jge
mov
ficoml
ret
lods
std
cmpsb
orb
cmpsb
sahf
clc
push
cmp
fidivrs
arpl
out
push
insl
add
mov
aad
mov
mov
fadds
pop
and
dec
adc
xchg
jae
nop
rclb
cmp
mov
arpl
sub
jns
aad
sbb
mov
sarl
sub
add
sbb
aas
xor
jno
mov
icebp
cmp
out
repz
xlat
add
lret
fidivrs
xor
cmp
jno
ds
sub
pop
xchg
sbb
pop
sub
aam
add
adc
ds
pop
adc
loope
inc
push
lods
insl
sahf
cmp
mov
cmp
mov
iret
cld
ret
cmp
loop
insb
cs
jle
fldcw
enter
xchg
ja
dec
orl
das
cmpsb
dec
outsb
sbb
adc
mov
xchg
scas
js
mov
andb
add
stc
adc
fidivs
sarl
mov
rol
adc
jae
jno
lods
push
stos
lret
add
mov
repnz
dec
and
cmp
int3
js
je
in
xor
mov
pop
scas
insl
lods
das
movsb
push
xor
in
sahf
mov
jnp
dec
or
popa
call
mov
roll
cld
fisttps
int
test
fbld
jne
clc
fstpl
xor
cltd
test
sub
aad
icebp
scas
cwtl
sub
js
enter
mov
dec
xchg
mov
decb
sbb
xor
sbb
fwait
lcall
stc
je
int3
dec
in
cmpsb
pop
pop
imul
xchg
jne
shrb
inc
sub
fldt
pop
cs
movsb
sub
cmc
cltd
sbbb
adc
ss
mov
sti
cltd
push
arpl
mov
lcall
lock
xlat
xor
mov
cmpsl
adc
xchg
mov
cli
dec
or
adc
fnsave
xchg
xor
sub
mov
out
push
aas
gs
mov
nop
push
xor
xchg
dec
sub
jl
push
jecxz
xchg
bound
adcl
shrl
jg
and
sub
mov
xor
mov
and
cmp
fs
or
ret
hlt
mov
fmuls
adc
xchg
add
mov
cli
adc
push
push
subb
call
call
sti
cmp
clc
stos
xchg
add
or
fistpl
xchg
fs
sub
hlt
ficoms
test
call
push
mov
imul
in
out
or
daa
imul
cmpsb
insb
test
jmp
push
push
pop
jle
push
flds
or
lcall
and
ss
psubw
mov
sbb
cmp
xor
es
xor
lret
or
mov
aam
stc
adcb
test
mov
sarl
mov
dec
daa
call
or
imul
mov
les
xlat
cli
in
imul
inc
insl
xor
push
cwtl
les
lea
push
push
aad
or
cmp
sub
loop
inc
insb
sti
imul
push
sub
jmp
aaa
pop
push
fistpll
stos
movsb
insb
add
stos
sub
mov
xor
mov
jle
je
rcrb
in
sub
mov
pop
pop
rorb
sub
adc
lahf
addr16
popf
xchg
int
mov
scas
add
pop
sub
les
pop
dec
jl
cmp
mov
repz
mov
call
ret
in
fistl
rcr
les
xchg
fstpt
fidivl
xor
insl
push
movsb
pop
sbb
push
mov
push
out
or
mov
mov
cmp
cli
leave
cmp
jbe
mov
push
loopne
xchg
sub
add
movsb
pop
mov
das
roll
sti
jo
loopne
push
std
popa
mov
push
or
push
into
lds
mov
jp
cli
fdivrs
push
mov
imul
jns
sub
dec
mov
imul
mov
insl
or
fwait
xor
adc
dec
xchg
push
and
inc
push
idivl
mov
jge
icebp
cmp
insb
leave
pusha
pop
push
jno
lods
mov
mov
adc
xchg
push
arpl
repnz
insb
or
sub
and
sub
xor
mov
nop
pusha
decl
mov
sahf
adc
mov
sub
stos
test
fstps
sub
test
and
pop
mov
or
data16
divb
shl
fnsave
or
pushf
inc
rol
lods
rcll
lret
cmp
xor
mov
xor
mov
mov
test
adc
pop
mov
mov
sbb
sbb
iret
jg
hlt
lahf
in
clc
data16
lods
pop
repz
fcomps
xor
in
jg
insb
fistl
lock
out
shr
outsb
jge
pop
in
gs
mov
int3
pop
xor
ds
sbb
adc
cs
aad
xor
movsl
push
inc
movsl
or
repnz
mov
pusha
lcall
mov
and
or
paddusb
les
lds
cmc
jb
jp
notb
cwtl
jns
push
addr16
sbb
cli
and
ds
push
inc
popf
inc
or
movsl
sbb
pusha
out
mov
pop
pop
mov
in
cbtw
xchg
shlb
sarb
rcl
add
dec
gs
push
stc
sub
lds
jns
out
ds
dec
push
aad
cmp
cmp
xchg
cs
cmpsl
in
lods
pop
mov
ficomps
into
ficomps
cs
or
jbe
xlat
cld
jp
daa
andl
bound
aam
fnsave
push
sbb
xchg
stc
loop
jbe
ficoml
jae
xor
outsb
bound
testl
icebp
outsl
xchg
fadd
lea
cltd
mov
mov
imul
jp
popf
or
subl
sub
in
addl
add
je,pt
clc
xor
imul
scas
mov
or
jge
es
push
loopne
and
xchg
sbb
jp
inc
call
sbb
imul
enter
jne
clc
or
sbb
out
insl
sub
xlat
cmpsl
sub
sbb
jl
arpl
int3
addr16
loope
test
and
lahf
add
mov
jbe
mov
fs
pop
mov
lods
lret
int3
push
xchg
jle
add
loop
fidivl
pop
lcall
cmpsb
xor
sti
in
or
push
xchg
mov
add
sbb
daa
and
icebp
and
xor
cwtl
arpl
jmp
and
sbb
out
mov
sbb
dec
stc
movl
rclb
push
inc
xchg
sbb
fldl
sub
pop
and
push
loope
dec
ficoms
into
push
xor
movsb
and
addr16
outsb
mov
pop
pop
jnp
mov
inc
loop
jb
mov
push
sub
iret
adc
cmp
xor
mov
and
cwtl
je
push
arpl
push
hlt
add
cmp
push
daa
add
rcr
jle
mov
test
pop
push
push
add
xor
push
mov
sbb
pushf
inc
xchg
sbb
ret
jl
jecxz
in
push
pop
mov
je
pusha
scas
leave
mov
call
nop
push
shll
jne
push
xor
or
dec
add
push
in
mov
gs
dec
add
jnp
test
pop
loope
mov
jmp
shrb
lea
cltd
adc
mov
scas
cltd
dec
cmp
dec
repnz
sbb
dec
lods
mov
jmp
sub
jle
repz
stc
jp
inc
inc
push
stc
jle
call
push
xor
das
out
cltd
push
cltd
inc
pop
push
push
ss
adc
or
not
ljmp
lods
cmpsl
lret
mov
cmpsl
loope
dec
and
xchg
mov
lods
pop
fidivrs
add
aam
ret
enter
scas
dec
loope
repnz
sbb
xchg
xchg
inc
adc
sub
cwtl
inc
sub
scas
dec
push
adc
lahf
pop
adc
jnp
pusha
mov
popf
sbb
pop
adc
inc
dec
cmp
pop
andl
cli
int
mov
jle
jmp
dec
addl
and
dec
mov
arpl
movsb
and
mov
push
sbb
hlt
inc
test
push
loope
in
jg
adc
inc
pop
or
pop
lahf
xchg
cmp
and
mov
add
fiadds
pop
lea
adc
out
insl
js
scas
sbb
mov
push
fcom
cmp
mov
mov
xchg
mov
lods
adcl
lds
mov
das
dec
into
jnp
cli
jg
cmp
or
jl
jge
push
cmc
pop
ljmp
popa
add
inc
add
ficomps
inc
js
jb
jmp
inc
or
sbb
pop
in
cli
enter
xchg
adc
mov
sahf
jbe
adc
pop
dec
inc
in
fmull
mov
es
es
int
std
std
cs
jnp
out
int
add
test
adc
inc
fbstp
sub
fimuls
and
sub
mov
mov
pop
fwait
sub
add
mov
leave
push
dec
push
sub
rcrb
xlat
insb
dec
lahf
mov
repnz
add
jmp
popa
test
mov
mov
and
cmp
jle
sbb
inc
xor
aam
lea
inc
in
push
jmp
mov
add
jl
mov
gs
cmp
ret
xor
mov
icebp
cld
sbb
ja
mov
adc
dec
mov
cs
or
clc
ja
push
pusha
mov
jne
jp
scas
es
sub
icebp
stos
mov
rol
cmp
adc
rolb
sbbb
jmp
daa
stos
push
sub
cld
loop
leave
aas
sub
jnp,pn
push
or
pop
loope
inc
xchg
sbb
push
adc
pop
rcl
sbb
test
out
out
push
inc
imul
outsl
subb
cmp
push
inc
push
in
fnstenv
fstpl
and
mov
cmpb
cli
test
inc
je
jae
mov
cwtl
lret
push
xor
pop
lea
xchg
sbb
add
idivb
pushf
fbstp
or
cmp
cmp
inc
stos
mov
add
ficoms
lcall
fsubrp
cmpsb
fisttps
push
dec
imul
in
sbb
pop
sar
jbe
call
xchg
aad
cmp
pop
test
and
test
flds
or
stos
pop
jmp
imul
xor
lahf
sub
dec
jbe
sub
scas
push
inc
lods
mov
adc
pop
js
dec
imul
pop
and
dec
cld
shlb
mov
push
ds
pusha
sti
fmuls
aaa
dec
fwait
sbb
iret
sub
pop
xor
int3
std
les
xchg
inc
data16
adc
inc
lea
call
push
in
je
and
les
xchg
enter
lcall
cmp
hlt
push
outsb
xchg
hlt
dec
sbb
push
lock
testl
clc
roll
les
in
aaa
mov
mov
or
scas
mov
cmp
adc
cwtl
dec
mov
test
pop
scas
or
popa
jbe
andb
in
cmpl
je
in
mov
clc
lcall
frstor
movsl
fcomps
fwait
repz
ret
fidivrs
je
xor
addr16
and
jno
outsb
ret
shll
adc
cmp
cmp
inc
aam
popa
insl
fdivp
repz
adc
mov
cmp
lds
jmp
mov
jns
outsb
sbbl
leave
and
movsl
outsb
pop
adc
xchg
sbb
rcr
mov
lods
stc
jae
pop
jl
lea
fcmovbe
repnz
in
imul
add
stos
cli
jge
popa
adc
test
movsl
call
xor
fstpt
add
mov
lock
xchg
dec
adc
enter
push
popa
xchg
jne
js
pop
jnp
inc
push
iret
sbb
adc
enter
popf
or
leave
xchg
cmpsl
sahf
mov
cld
mov
dec
hlt
jp
out
lret
popf
cmp
fsubl
mov
adc
cmpsb
pop
push
or
sub
lea
arpl
fadds
test
mov
ds
rcll
adcb
pushf
add
cmc
out
fwait
add
push
jl
idivb
lcall
out
aaa
addl
sbb
or
outsl
push
jecxz
jecxz
xor
in
rol
shl
sbb
and
pop
mov
xor
cmp
add
push
adc
pop
in
sbb
mov
cmp
int
fnstenv
insb
fs
icebp
xor
fstl
sub
fs
out
and
mov
mov
aad
loope
test
mov
ja
and
pop
sahf
in
scas
fsts
pop
loope
std
je
push
inc
adc
ja
dec
fwait
out
ss
mov
dec
xor
or
jbe
cmp
jp
jnp
mov
imul
push
and
gs
sbb
in
xlat
dec
dec
scas
add
mov
loop
adc
daa
int3
out
mov
stc
inc
pop
inc
pop
xor
cmp
or
out
xlat
cmp
jg
add
in
cltd
outsl
mov
ja
or
mov
movsl
jae
mov
pop
mov
ret
fwait
dec
popf
aaa
xchg
cwtl
mov
fwait
insb
xor
loop
fnsave
addl
leave
or
adc
adc
dec
lods
cmc
fdivrs
mov
aad
sbb
push
shr
iret
aaa
scas
cmp
cmp
xchg
fisubl
jns
push
cltd
rcll
cmpsl
pop
stos
lea
iret
or
push
imul
push
mov
cltd
inc
inc
cs
pop
mov
addr16
repz
xor
out
repnz
or
pop
pop
icebp
or
and
ja
add
rcrl
sbb
aam
xor
push
iret
xor
rclb
fldt
fnsave
data16
mov
lahf
pop
fadds
mov
or
incl
ja
inc
ds
cwtl
std
out
mov
mov
fimull
add
ja
into
xor
hlt
xorl
push
sub
jns
repnz
lea
mov
lret
ljmp
rcl
lret
cltd
mov
loope
jb
test
sahf
ror
mov
push
bound
fistl
lods
cmp
dec
cld
cltd
mov
mov
add
add
outsb
dec
xchg
sbb
outsb
or
mov
pop
popf
jae
inc
mov
mov
jmp
ficoml
adc
and
xchg
daa
les
mov
sub
or
sbb
mov
repnz
pmaxub
cltd
sbb
fsub
dec
in
push
dec
shlb
xchg
or
in
arpl
pop
inc
cld
bnd
xchg
outsl
push
xorb
xor
xchg
inc
imul
mov
mov
lods
insb
cmp
sbb
mov
adc
mov
pop
jmp
mov
shrb
sti
lret
jb
push
sbb
sub
or
push
add
gs
xor
mov
or
jnp
jne
push
mov
or
repnz
cmc
push
pop
insb
sbb
xor
fscale
xstore-rng
cmpsl
inc
jne
mov
push
pop
ret
and
loopne
push
rol
ss
loop
and
lcall
ret
nop
or
push
mov
std
dec
cltd
bound
adc
fdivr
in
ficompl
sub
add
sub
push
icebp
test
mov
sbb
sub
mov
push
or
aaa
push
mov
in
dec
clc
cld
test
adc
xchg
xor
pop
adc
mov
jne
lds
cmp
sub
cmc
xchg
inc
addr16
outsb
insb
daa
inc
xor
mov
clc
mov
aad
mov
sarb
pop
cmp
inc
movsl
loopne
add
es
push
add
rep
xchg
inc
movsl
mov
or
fdivl
rcrl
cli
cmp
popw
aad
jns
mov
or
or
pop
jb
cs
in
outsl
or
push
mov
pop
daa
fisttpll
xor
mov
sub
scas
and
in
mov
aam
pop
arpl
or
xchg
mov
in
mov
dec
aas
add
add
push
add
sbb
in
lahf
mov
jbe
out
rclb
push
stos
or
sahf
pop
adc
imul
into
faddl
push
rcll
push
lret
adc
in
push
or
leave
pushf
jno
cmp
cmpsl
sub
ss
divl
mov
in
adc
cmp
cmp
movsb
and
ret
cwtl
mov
cld
mov
pushf
sahf
adc
test
mov
inc
fsubrs
push
adc
mov
test
pop
inc
add
push
stos
add
xlat
imul
repz
inc
inc
out
jno
fs
inc
xchg
lcall
jmp
pop
xor
jns
xchg
xchg
mov
mov
test
push
test
dec
sahf
cmp
pop
iret
movsl
movsl
fildl
test
lret
je
scas
push
aaa
int
fidivrl
pop
mov
fdivrl
fidivrs
inc
or
fdiv
mov
in
sahf
pop
xorb
insb
repnz
sub
mov
mov
cmp
xchg
sub
ja
cld
pop
cmp
cmp
in
add
cs
test
xchg
lods
es
push
hlt
test
sbb
rcll
sub
mov
dec
push
dec
fcomps
jge
pop
in
and
ss
hlt
ss
dec
push
adc
icebp
icebp
jle
std
xor
ret
or
icebp
sbb
sti
mov
cmp
fisubs
ja
jp
pushf
jno
push
mov
mov
cltd
imul
and
stc
or
mov
ja
mov
push
or
push
les
adc
push
jne
rcll
push
mov
mov
inc
pop
push
in
or
adc
pop
test
pushf
clc
cmpsl
out
push
jp
jbe
mov
out
push
inc
sti
jnp
cmp
dec
adc
adc
insb
out
aad
jo
iret
sbb
mov
mov
imul
pop
inc
xor
loop
insb
mov
jnp
and
out
fsubrl
test
imul
test
stos
in
pop
lea
sub
sub
fnstcw
cmc
lret
inc
or
xchg
int
pop
and
ror
lea
sub
out
in
xchg
arpl
dec
pop
pop
notl
mov
and
pop
std
fwait
ret
add
lods
push
rorb
insl
dec
and
mov
dec
or
mov
mov
jge
out
pop
mov
daa
sub
cmp
pop
ljmp
add
stos
ljmp
mov
fildll
dec
adc
inc
xor
xchg
hlt
sahf
cs
dec
js
mov
mov
dec
cld
icebp
push
xor
add
mov
pop
xor
lods
roll
imul
insl
dec
stos
sbb
lahf
adcb
outsl
test
imul
call
js
push
sbb
xor
pop
jp,pn
int
aad
add
mov
and
decb
mov
mov
sbb
cmpsl
aaa
xlat
push
addr16
or
and
mov
pusha
lea
mov
sub
inc
mov
or
subb
xlat
pop
adc
ss
pop
fldl
mov
push
cli
jmp
mov
daa
repz
sbb
test
push
mov
cmpsb
sub
add
xor
inc
ret
or
jno
jbe
enter
xlat
jg
xchg
jmp
mov
pop
jge
aaa
call
jge
add
in
ret
sbb
jle
shrb
fdivrs
xor
mov
pop
mov
cmp
push
fisubrs
and
cmc
jae
inc
sarb
jmp
mov
mov
sbb
repnz
and
and
clc
inc
fwait
addr16
mov
adc
xlat
int3
inc
idiv
leave
or
insb
fistps
xchg
pop
loopne
fxch
insl
jo
jle
je
xlat
pop
push
stc
stos
mov
sbb
test
jbe
orb
or
aas
outsl
outsb
add
mov
xor
pop
sub
outsl
and
pop
lds
dec
mov
test
mov
add
pop
mov
push
scas
icebp
xor
fstl
cltd
mov
clc
mov
lods
and
add
mov
jne
and
aaa
push
and
sbb
sub
addr16
push
test
das
sti
cmp
arpl
sub
leave
xchg
int3
hlt
sti
xor
push
lods
sbb
xchg
das
icebp
call
or
int3
and
scas
pusha
repnz
adc
aad
mov
es
xor
push
add
int3
data16
rorl
dec
push
mov
sbb
in
test
pop
pop
inc
push
mov
enter
xor
stc
je
mov
call
mov
push
lahf
outsl
out
inc
sub
mov
jecxz
js
jb
add
fs
mov
jmp
cmp
lods
nop
jmp
out
hlt
fisubs
push
sbb
stos
arpl
push
mov
jno
mov
shrl
data16
insb
sub
insl
mov
dec
push
and
pop
jp
outsl
sbb
lds
aaa
call
scas
jmp
jo
insb
push
adc
jo
icebp
jne
jmp
ret
mov
adc
daa
lcall
add
mov
mov
nop
fisttpl
xchg
or
out
addr16
mov
in
dec
shll
jnp
cmp
int
mov
push
inc
stos
push
or
or
xchg
adcb
pop
add
pop
mov
pop
fistpl
or
xor
clc
xor
and
cmp
push
mov
cwtl
jp
xchg
hlt
repz
or
xchg
pusha
movsb
jp
inc
pop
jnp
mov
outsl
aam
xor
add
ret
xchg
call
loop
pop
into
sub
les
addr16
xor
inc
push
add
and
and
jo
sahf
shrb
popf
or
sub
add
adc
jmp
lock
icebp
cmp
movsb
ljmp
cmpsb
sbb
cmp
xchg
stos
sub
jnp
sbb
jmp
sub
mov
mov
or
sub
ror
fdivr
push
in
mov
fistl
loope
add
pop
mov
cwtl
lret
push
pop
mov
ds
cmp
lret
or
mov
inc
insl
fidivl
dec
push
push
sub
and
lock
test
jns
stos
push
or
test
adc
in
ja
roll
idivb
xchg
cmc
push
jb
xchg
enter
mov
das
iret
pop
movzwl
aas
or
decl
arpl
mov
loop
pusha
ret
xorb
mov
das
jg
insb
repnz
cwtl
jp
or
and
inc
stos
mov
jge
daa
call
sbb
in
in
mov
stos
stos
mov
inc
mov
faddl
pusha
push
lods
shlb
addr16
inc
push
nop
cmc
or
nop
xor
push
ficompl
test
and
inc
aaa
adc
outsb
aam
inc
cmp
js
mov
fwait
mov
mov
cmpsb
sub
or
mov
adc
sar
mov
mov
sahf
in
mov
cmp
bnd
aaa
add
cli
loop
in
jle
push
cmp
filds
adc
shrb
lahf
cmpsb
out
inc
insb
dec
loopne
stos
call
les
jo
rorl
int3
sahf
jns
out
xchg
popa
xlat
jnp
movsb
sbb
mov
and
xor
xor
fcompl
cmpsl
inc
pushf
mov
xor
outsb
bound
xlat
mov
and
scas
pop
xchg
cltd
aad
ret
mov
inc
pop
cmc
mov
lahf
ss
dec
dec
add
pusha
mov
mov
jo
imul
aaa
adc
adc
ret
xor
scas
mov
or
insb
inc
jb
mov
adc
sbb
in
ja
ret
loope
fcmovnu
dec
adc
out
jns
repz
stos
lea
cmpsb
add
ljmp
lock
es
mov
insl
mov
mov
cld
aas
gs
test
ja
mov
cmp
xor
scas
cmp
pop
jg
inc
fcmovne
pop
repnz
dec
mov
xchg
or
pop
in
xchg
mov
jle
adc
sti
sub
push
scas
dec
adc
aam
popa
clc
sub
mov
aas
push
inc
add
and
fildll
rclb
ljmp
jl
adc
dec
js
inc
adc
pop
cs
lea
jle
mov
jo
jge
pop
stos
xchg
fs
call
mov
inc
das
push
je
mov
stos
push
push
repz
pop
test
push
mov
mov
or
dec
and
xor
std
das
mov
fnstsw
jge
clc
mov
jmp
sbb
pop
outsb
xor
gs
arpl
jo
dec
cmc
mov
test
js
ja
xorl
push
mov
jbe
int3
jae
cli
jae
sub
push
rclb
adc
bound
and
push
ret
ficoml
stos
jl
xlat
add
add
in
mov
sub
out
add
push
adc
arpl
xor
jbe
jbe
push
cmp
arpl
repnz
cld
cmp
leave
lea
mov
pusha
and
cwtl
mov
xor
icebp
mov
jnp
sub
jae
shld
clc
dec
mov
loope
movsl
mov
xchg
nop
fisttps
sub
cwtl
push
xchg
popa
mov
mov
addr16
lret
inc
push
aad
and
xchg
jl
or
mov
inc
or
out
cld
in
xor
ss
mov
or
repz
xor
movsb
inc
and
push
ja
mov
cmp
test
mov
out
mov
hlt
adc
repz
sub
lcall
cmc
shrd
xchg
inc
daa
xorb
xor
add
test
fsubrl
xchg
std
lods
push
out
pusha
in
bound
inc
insb
out
jp
cmp
inc
or
jg
push
insl
imul
sbb
mov
mov
mov
dec
cmp
cli
sahf
int3
push
lods
inc
push
pop
aad
cmpsl
xchg
gs
mov
clc
cmp
mov
subl
in
mov
pop
out
sub
jnp
push
push
and
sub
in
xadd
int
pop
mul
xchg
not
loop
inc
addr16
mov
push
lods
fistpl
aas
fstpl
aas
or
lea
xor
jnp
sub
mov
xor
rclb
mov
pop
les
cmp
sbb
repz
ljmp
xor
jp
dec
icebp
jp
pop
int3
scas
pop
cmp
sub
xor
movsb
pop
insl
xchg
lret
mov
jge
loope
mov
xchg
jo
movsb
xor
cmp
adc
pop
test
add
div
xchg
negl
mov
movsl
push
test
scas
and
sub
cmp
test
dec
int3
pusha
xchg
subb
sti
sub
xchg
test
pop
cmp
in
in
nop
mov
pop
sub
gs
pop
icebp
pop
je
hlt
in
and
xor
sub
mov
test
mov
sahf
mov
mov
mov
inc
dec
adc
popa
pusha
adc
pop
int
xchg
into
adc
mov
lret
insb
daa
adc
or
add
outsl
inc
outsb
add
mov
push
leave
fidivl
mov
dec
aaa
pop
imul
mov
mov
xorb
xlat
divb
mov
xchg
cmp
dec
fwait
int3
adc
lahf
mov
mov
aas
sbb
mov
push
das
or
pop
mov
stc
mov
jl
cmc
mov
add
roll
jne
sbb
aad
imul
int3
ljmp
imul
fisubl
jg
sbb
scas
or
lock
mov
into
adc
lret
mov
xor
inc
xchg
add
add
out
dec
mov
push
lret
mov
lret
xchg
movsl
pop
jnp
jbe
jg
hlt
filds
in
jecxz
inc
pop
nop
loop
subl
lock
movsb
adc
jbe,pt
or
pusha
push
and
out
addl
bound
add
push
and
cmpsl
dec
xchg
int3
divl
scas
js
mov
push
in
sti
lahf
jo
pop
push
and
mov
add
pop
lods
repnz
repz
pushf
xchg
into
push
push
mov
insl
inc
call
lcall
inc
mov
lods
popa
hlt
dec
adc
test
jmp
cmc
cmp
push
cld
sbb
outsl
mull
call
push
mov
dec
lods
add
fstpt
fucom
imul
lods
xchg
call
inc
mov
lods
sbb
pop
insl
adc
lods
ljmp
jns
ja
or
cmp
movsb
je
pop
mov
cld
outsl
mov
dec
mov
setno
cltd
xchg
or
testl
aad
lahf
lds
popa
mov
out
dec
lea
jecxz
test
jne
add
mov
pushf
dec
push
sbb
push
fidivrs
inc
leave
dec
push
dec
into
lods
psllq
sbb
mov
repz
push
sbb
rcl
cld
jge
add
mov
push
addl
enter
fwait
cmp
test
push
mov
mov
test
ret
test
lret
mov
mov
xchg
inc
pop
cmpsl
shlb
ret
sbb
arpl
lock
lret
sbb
xchg
in
jge
pop
not
sarl
mov
jle
fisttpll
xchg
negb
cli
sub
sbb
inc
ja
ret
js
inc
inc
lret
dec
das
cmp
aas
lcall
xchg
xor
fidivrl
adc
out
cli
test
push
sbbb
sbb
pusha
xchg
and
cmp
inc
push
adc
xchg
jnp
rcr
pop
mov
stos
iret
cmpsb
dec
jp
jnp
inc
push
ljmp
and
lods
dec
fdivr
int
lea
pushf
hlt
jl
pop
cmp
mov
add
add
in
xor
push
push
sbbl
data16
and
movsb
imul
ja
scas
cs
mov
and
jo
int
sbb
xchg
mov
xchg
shr
cmp
mov
fwait
repnz
pop
popa
dec
loope
outsl
cmp
fs
xor
ja
pusha
adc
data16
cmp
and
andb
cli
test
test
inc
stos
bound
in
dec
sub
popf
pop
dec
aas
or
sub
cs
pop
movsb
out
or
and
adc
repnz
imul
mov
jg
insl
in
scas
sbb
cmp
repz
mov
dec
xor
or
lea
negl
sub
cmp
stos
mov
in
mov
sub
mov
scas
cmp
sbb
movsl
fwait
jg
jl
push
pop
push
jl
push
pop
cs
pop
xor
mov
jno
aas
mov
ret
sub
jge
lods
out
incl
mov
mov
sbb
dec
test
push
jbe
cmp
lods
sub
ss
fs
cmpsb
movb
mov
push
outsb
or
mov
lock
std
scas
push
xchg
jnp
push
jae
dec
jbe
repnz
shrb
stos
div
lods
xchg
movsl
sub
imul
movsb
mov
dec
sbb
loope
push
jbe
jae
sbb
outsb
or
out
nop
cld
pop
adc
inc
mov
arpl
std
faddl
sarb
push
add
dec
pop
mov
faddl
adc
push
pop
xchg
dec
xchg
insb
adc
cmp
test
jl
pop
movb
test
inc
imul
out
lret
or
adc
insl
loop
bound
cld
int
add
sbb
mov
add
dec
cltd
sub
cmpsl
lds
add
addr16
aaa
daa
icebp
mov
scas
sbb
mov
sahf
adc
dec
jae
std
ja
aaa
lret
or
xor
xor
dec
cmpsb
mov
nop
daa
pop
jne
orb
or
or
les
pop
scas
push
pushf
mov
daa
xchg
test
mov
push
mov
in
or
js
out
outsb
stos
inc
adc
ret
pop
sub
leave
popf
mov
lock
rclb
iret
add
sbbb
sbbl
jg
xchg
fisubrl
outsl
loope
das
sbb
mov
out
and
dec
gs
inc
out
js
or
sbb
cltd
xchg
and
cmpsl
fdivrs
cmp
mov
lods
add
mov
cmp
cmp
lods
dec
aaa
mov
dec
aas
push
adcb
pop
js
pop
sar
fistps
flds
dec
inc
dec
xlat
jae
mov
scas
xchg
inc
outsl
mov
pop
sub
pop
aam
rcrb
push
les
sahf
dec
stos
mov
and
xchg
popa
push
dec
lods
test
pop
xchg
mov
jg
adc
repnz
sbb
sub
sub
mov
push
adc
pusha
dec
sbb
pop
inc
movsl
xor
es
clc
jne
pop
pop
jne
xchg
faddp
mov
jecxz
fwait
lcall
push
inc
mov
dec
in
push
lret
daa
repz
or
jae
mov
push
call
loopne
cli
aaa
movsl
or
and
push
movsl
jb
add
jp
push
lea
xlat
out
mov
das
push
fldenv
jmp
mov
cmpsb
gs
fs
add
inc
mov
push
dec
lods
add
jecxz
mov
lods
xchg
jb
jp
jb
sti
mov
cli
das
in
jle
fiaddl
add
fs
fstl
imul
enter
outsl
out
into
aaa
push
loopne
xor
mov
inc
mov
adc
scas
pop
push
filds
insl
xchg
in
bound
ror
icebp
add
pop
paddq
mov
mov
data16
xor
cs
sub
stos
and
push
mov
cs
or
pop
in
jnp
jb
xchg
and
loop
rcl
mov
xlat
mov
cld
mov
xor
pusha
pop
stos
lcall
in
fldcw
sti
jo
lds
loop
sarb
dec
or
pop
cmpl
lcall
push
and
fucom
insb
xor
sti
call
jmp
fiadds
sub
xchg
jno
push
mov
aam
hlt
cmpsl
clc
into
pop
jns
push
arpl
inc
and
shr
stc
idiv
insl
pop
repz
int
adc
loop
mov
mov
sahf
mov
sub
enter
push
pop
fsubrl
or
or
xchg
mov
inc
movl
imul
mov
ja
icebp
in
lahf
add
mov
jge
add
jecxz
es
jns
fbstp
dec
or
adc
push
push
xor
testl
adc
gs
repz
incl
inc
pushf
cmp
push
std
dec
mov
mov
addb
or
inc
jb
in
mov
fistl
sbb
movsb
push
orl
and
mov
mov
adcb
rcrl
daa
pop
pop
mov
sbbl
in
lahf
mov
popf
testl
test
outsl
or
jno
pop
sub
mov
adc
aam
outsl
test
out
dec
hlt
arpl
cmp
push
fbstp
add
pop
addr16
jbe
jmp
cmc
mov
in
shlb
bound
in
dec
sarb
testl
inc
sti
or
lahf
jb
push
out
movsb
xlat
leave
or
cmc
xchg
repz
and
insl
pop
xor
cmpsl
cli
jne
jb
push
std
mov
rorb
jne
aam
and
incb
mov
and
add
mov
pop
mov
ret
iret
mov
arpl
push
or
pushl
andl
outsl
xchg
push
js
mov
ja
cmp
jmp
adc
mov
mov
mov
jo
insl
xor
call
sbb
cltd
jge
add
jae
cmp
add
scas
jns
inc
sbb
inc
jle
jns
not
xor
shlb
or
daa
mov
sub
sbb
jl
jg
adc
ljmp
js
sarl
mov
dec
push
imul
jge
movsl
push
lea
ss
mov
dec
loopne
pusha
imul
pop
push
sub
inc
shl
mov
pop
aaa
jno
fisubrl
test
rcrl
arpl
insb
or
sub
les
mov
mov
cmp
sub
flds
test
cmp
and
outsb
ljmp
jae
sbb
ss
aaa
das
out
enter
jae
jecxz
xchg
test
aad
fistl
call
sub
shlb
dec
adc
xor
pop
sbb
mov
pop
mov
icebp
push
cld
lods
repz
push
jne
into
rcl
lret
xor
mov
push
fisubs
addl
adc
lret
push
sub
jp
dec
popf
xor
mov
xchg
cmp
shll
cld
push
ret
movsl
std
mov
in
dec
in
xor
xor
lahf
fwait
insb
sub
pushf
ror
pop
sti
inc
sbb
inc
pop
push
mov
dec
xor
mov
fiadds
push
fidivs
sbb
inc
mov
in
out
xor
mov
dec
jae
mov
adc
cltd
pop
xor
mov
fdiv
and
data16
dec
fsubr
imul
and
lods
aaa
xlat
mov
repz
rclb
dec
les
icebp
fildll
shlb
pushf
out
adc
xor
cmp
repnz
movsl
cmc
cld
imul
cli
jecxz
inc
mov
inc
add
cltd
jecxz
or
int3
ret
leave
aaa
mov
imul
cmpsl
std
movsl
in
ficoml
nop
jns
bound
adc
add
das
mov
notl
es
inc
int
cmpsb
adc
mov
pop
jne
movsb
rolb
outsb
insb
out
lods
push
testl
mov
ds
sbb
push
lods
xor
dec
andb
xchg
in
shrb
xor
loop
or
adc
das
or
rol
ret
adc
sarl
rdmsr
inc
adc
mov
xchg
loopne
inc
sub
dec
mov
imul
jge
cmp
mov
dec
add
add
cwtl
rcrl
push
sbb
push
jno
pusha
lods
sbb
xchg
aad
cmp
xchg
jno
pop
jmp
sbb
std
sub
ja
cmpsl
out
push
inc
mov
pop
fistpl
adc
pop
mov
lds
dec
push
cmp
mov
daa
loope
mov
sbb
xchg
dec
mov
adc
lret
aaa
xor
jns
inc
push
pop
fldcw
push
gs
xor
imul
pop
mov
push
xchg
inc
ret
xor
pop
cmc
insl
leave
loop
mov
into
push
test
popf
out
addl
inc
pushf
xor
sbb
out
mov
push
dec
scas
iret
mov
pop
cmp
xor
sub
push
xor
shr
out
sti
sbb
jecxz
push
popa
and
lret
scas
ret
mov
cmp
sbb
mov
push
jo
shlb
loopne
mov
insl
mov
lahf
adc
mov
mov
das
and
xor
jns
xchg
sbb
pop
mov
fadds
xor
stos
or
data16
push
movsb
lods
mov
push
add
and
inc
ret
popf
inc
mov
repz
call
mov
jo
mov
mov
pushf
jg
sub
lods
cli
pop
xchg
mov
insl
jg
scas
push
not
sub
out
mov
add
in
inc
xchg
or
pop
mov
and
push
enter
fbstp
xchg
ja
jle
xor
sbb
cmp
push
push
lret
and
push
push
je
dec
or
mov
jl
sahf
das
or
fldcw
mov
fisttpll
js
js
mov
jo
outsb
push
iret
cmpsb
cmpsl
push
and
popa
cli
adc
mov
pop
fs
push
mov
loope
adc
xchg
mov
int
inc
and
xchg
int3
xorb
test
push
clc
fstl
dec
test
lds
inc
inc
aad
xor
popa
into
sub
stc
icebp
push
jge
sub
xchg
flds
outsb
test
cmp
fwait
inc
aaa
pop
mov
push
mov
out
sbb
sbb
or
call
shlb
lea
mov
pop
pop
xchg
ds
lcall
int
dec
push
xchg
push
cmpsl
lcall
jg
xchg
aam
push
adc
movl
out
lcall
mov
gs
fisubl
mov
stc
jbe
mov
mov
lcall
iret
mov
ret
dec
adc
sub
and
cmp
jge
gs
jge,pn
scas
jmp
sarl
rcrb
bound
or
call
fnstsw
dec
cmp
inc
aaa
dec
mov
xlat
add
fs
jo
push
insl
pop
insl
roll
sti
clc
add
xor
into
and
jns
xor
subb
jp
popa
repz
push
rorb
mov
sbb
adc
out
xchg
ljmp
mov
fstl
fcomps
scas
inc
fstpt
aam
xor
call
mov
enter
xchg
cmp
movsb
mov
repz
add
loope
fadds
adc
push
iret
pop
mov
xor
jmp
xor
in
cmpsb
xcrypt-ecb
cmpsl
dec
addr16
lods
jle
jl
cmpb
test
icebp
mov
sub
faddl
sbb
lret
rcl
cli
adc
fildll
fwait
jae
or
adc
push
ret
sbb
int3
fdivrs
clc
rorl
insl
xchg
dec
and
jno
mov
or
xlat
mov
aas
inc
stos
shlb
sbb
mov
pop
jecxz
fwait
negb
and
lock
pop
test
cmp
pop
fistl
inc
jae
loop
das
mov
dec
rol
insb
cltd
jg
xor
push
cmp
push
pop
xlat
sub
rcrl
sub
cld
mov
or
subl
or
xchg
in
adc
pop
cmpsl
xchg
xor
and
push
aad
sub
dec
stos
xor
ds
sahf
sub
mov
fsubs
cmp
pop
xor
mov
sbb
xchg
sub
mov
xor
jno
add
test
xchg
jecxz
cmp
into
lea
mov
dec
lods
in
or
mov
xchg
mov
outsb
clc
lahf
xor
cmc
fwait
cmp
enter
addr16
xchg
jp
mov
fimull
les
loop
pop
inc
adc
int3
inc
out
jo
jp
pop
mov
or
pop
fcoms
sbb
popf
jg
pop
mov
fwait
insl
xor
mov
in
rorb
pop
cmc
lock
sub
movsl
and
sar
mov
push
dec
loopne
pop
popa
sbb
call
fstl
rcrl
jge
jnp
test
and
bnd
dec
outsl
cs
xchg
jnp
add
dec
sub
sbb
adc
cmp
mov
pop
push
xor
push
fsubr
mov
jp
cmpsb
int3
fiaddl
mov
insl
add
cmp
cmp
aam
std
leave
gs
xchg
add
addr16
push
mov
pop
jbe
or
push
jge
push
loop
outsl
frstor
fwait
xchg
xchg
fidivrs
mov
je
push
xor
leave
mov
cmp
push
mov
inc
xchg
jbe
scas
jp
out
push
push
idiv
cs
jge
pop
ljmp
dec
pop
inc
iret
insl
fwait
mov
and
cmp
loop
xchg
mov
int3
iret
dec
adc
inc
mov
sbb
das
loope
and
mov
jns
sbb
movsb
test
cmp
fcmovbe
cmp
idivl
in
ret
repnz
fadd
dec
bound
adc
call
outsl
add
insb
mov
cwtl
cmp
lock
fwait
nop
enter
push
nop
icebp
cli
jle
cli
rcrb
aas
mov
in
sar
mov
insl
pop
and
jmp
sbb
fsubs
add
sub
mov
adc
out
cli
ss
pushf
push
xor
adc
mov
test
jno
outsl
ljmp
mov
mov
cmp
inc
mov
popf
jmp
outsl
mov
cmovno
sub
dec
sub
jne
rolb
scas
mov
jl
cli
jno
shl
out
push
imul
loope
xchg
sarb
mov
iret
sub
data16
add
push
xor
xchg
in
aam
test
push
adc
adc
lods
dec
ja
add
mov
cmc
inc
pop
push
inc
inc
xchg
pop
add
jo
movsb
mov
push
adc
enter
adc
xchg
lret
iret
cmp
ret
fwait
add
xchg
jp
push
jge
aas
add
arpl
stos
mov
pop
push
cltd
push
das
in
stos
jae
cwtl
jle
cltd
push
shufps
sub
in
dec
ss
xor
push
cmpsb
mov
sahf
fadd
dec
jle
std
dec
lea
cmc
repnz
push
repz
xchg
add
jnp,pt
mov
fldl
adc
add
scas
mov
imul
pop
inc
sub
pop
mov
negl
add
push
out
pop
loop
js
mov
mov
into
inc
enter
insb
jp
push
sbb
jnp
cwtl
push
sbb
or
stos
jb
dec
mov
sub
add
adc
inc
dec
mov
add
xchg
push
shlb
cs
pop
cmp
adc
cmpsl
clc
and
shlb
std
and
sub
xchg
xchg
mov
mov
sub
jb
mov
test
xlat
ficomps
cmp
mov
cmp
jg
lods
jae
rclb
into
dec
xor
ds
jae
dec
ds
dec
mov
mov
js
cmpsl
cmpsl
inc
repnz
add
push
or
jge
imul
jo
jb
lods
add
and
mov
hlt
adc
mov
repnz
jp
jb
push
clc
stc
repnz
addl
loop
std
inc
insl
outsb
adc
icebp
jle
add
adc
ds
dec
adc
std
jmp
add
lods
lret
leave
imul
rcr
into
dec
shrb
bound
mov
push
das
jecxz
outsl
fst
sti
icebp
fisubl
mov
xor
sub
jmp
cwtl
push
pop
jnp
or
cmp
add
fimuls
addr16
pop
in
cltd
test
add
cwtl
and
ret
push
jns
sub
sub
je
dec
adc
ficompl
pop
cli
in
xchg
pushf
jge
pop
jne
jne
leave
mov
cmp
jecxz
testb
js
or
cmp
add
pop
cmp
add
push
rcrw
in
stos
daa
cmp
in
fbld
xchg
pop
or
gs
mov
and
lret
lock
cmp
adc
jle
dec
adc
ficompl
movsb
mov
or
adc
mov
fs
bound
scas
jno
scas
add
and
sbb
lahf
pusha
hlt
aam
pop
les
or
ds
loop
shlb
inc
pop
mov
jl
mov
inc
xchg
cmp
mov
adc
out
sbb
mov
lret
xchg
xchg
dec
out
sbb
dec
hlt
adc
lds
lock
test
lahf
loope
in
lods
mov
push
dec
mov
repz
or
mov
je
push
mov
or
out
xor
lret
push
fildl
enter
data16
push
lock
adc
iret
jne
in
aad
push
mov
or
bound
loopne
xor
jb
repz
call
sbb
nop
rcrl
xchg
mov
test
lcall
dec
xchg
test
mov
cmpsl
push
inc
mov
dec
fildll
mov
stos
mov
fisubs
dec
mov
popf
add
mov
fdivrl
hlt
mov
hlt
jle
jg
movsl
or
nop
jnp
add
push
insb
mov
dec
out
popa
notl
outsb
mov
xor
fsts
mov
cmc
adc
dec
fmul
test
lret
xor
inc
inc
push
cltd
in
imul
add
ljmp
std
mov
jp
or
dec
popf
sbb
mov
ret
pop
sub
adc
and
dec
rorb
lods
mov
inc
lock
ret
imul
jb
inc
sub
cli
sbb
test
shl
aad
shlb
mov
ljmp
inc
outsb
shlb
pop
inc
scas
and
call
iret
cmp
clc
xchg
sub
iret
mov
inc
popl
mov
imul
iret
pop
xchg
inc
cmp
incb
test
xor
mov
cmp
roll
xchg
repnz
sub
stos
sti
outsb
loopne
mov
pop
sahf
test
add
lods
lock
and
loop
fstp
add
shrb
rcll
lcall
lret
xchg
clc
clc
cmp
mov
rol
push
nop
cmp
mov
or
mov
in
jno
jg
sbb
fstl
stos
cli
adc
add
faddl
and
pop
and
sarb
pop
lods
dec
add
push
sub
add
xor
adc
pop
loop
pushw
cwtl
in
negl
cmpsb
sbb
lcall
outsl
mov
jecxz
or
ficomps
shrl
pop
mov
jge
and
inc
adc
in
int3
leave
cmc
lods
push
sub
ret
ljmp
fsub
adc
imul
ds
ret
xchg
inc
adcb
add
mov
jne
sahf
mov
es
mov
out
jl
cmp
sub
fisubs
sbb
jmp
mov
mov
fucomp
push
jmp
jno
push
imul
mov
mov
xchg
out
jae
into
cmpsl
push
nop
or
in
cmp
push
iret
sbb
ret
mov
cmpsl
outsl
mov
outsb
leave
mov
cmp
bound
cmp
imul
pop
mov
enter
je
push
mov
inc
xchg
push
jne
add
js
sti
lret
fldt
dec
mov
jge
mov
jl
data16
cmp
jbe
add
test
es
xchg
leave
xor
mov
add
adc
ret
mov
cmp
cmpsl
dec
inc
push
sbb
shr
es
mov
dec
xchg
lock
mov
lods
shlb
addl
pop
out
cmp
xchg
std
cmp
stos
cmpsb
cwtl
adcb
mov
sbb
adc
sbb
xor
das
or
fwait
cld
push
in
int
fimull
imul
mov
stc
les
repnz
mov
lret
inc
arpl
sub
cwtl
mov
test
pop
test
sbb
adc
sbb
mov
ret
add
dec
cwtl
sub
push
cmp
mov
imul
or
cmp
aas
jns
shl
pop
jmp
sub
mov
sub
hlt
dec
and
imul
pop
xlat
lret
push
push
pop
pushf
ror
xchg
sar
out
inc
sub
mov
clc
jbe
jne
outsl
aam
cmp
dec
jne
mov
scas
stos
sub
or
inc
aas
fs
out
mov
cmp
lds
push
mov
mov
jae
bound
mov
jb
andb
sti
xchg
mov
ret
jle
mov
sti
cmc
push
dec
inc
test
or
lret
xor
xor
adc
test
inc
sub
mov
outsb
test
mov
dec
push
ret
or
inc
push
stos
lock
push
mov
sub
sahf
jg
hlt
cmp
cli
xor
sti
push
xor
fildl
mov
jle
fidivl
dec
cwtl
loopne
ds
fwait
pusha
ljmp
or
movsb
mov
adc
loop
push
push
pop
pop
xor
xchg
rol
add
ficoml
sbb
push
fists
mov
xchg
or
dec
push
push
pop
xor
sub
data16
and
hlt
add
test
mov
dec
fs
out
je
faddp
dec
test
imulb
mov
jmp
push
ja
sbb
dec
comiss
xchg
mov
mov
mov
sub
adc
cmpsb
ss
mov
mov
mov
das
mov
rcll
nop
pop
ret
leave
xor
push
cli
mov
fpatan
inc
pop
dec
arpl
adc
dec
mov
push
movsb
mov
adc
xchg
push
mov
fcoml
lret
mov
jne
je
aas
mov
pop
pushf
je
filds
sub
lret
aam
out
ret
mov
jp
mov
gs
jo
in
mov
or
lock
mov
in
mov
lahf
xchg
pushf
mov
push
cwtl
cmpsl
push
pushf
cltd
ret
dec
and
inc
lods
dec
leave
add
fldt
pop
xlat
push
pop
push
into
push
dec
into
inc
ja
dec
ja
jbe
adcb
jge
mov
mov
outsl
sbb
dec
adc
int
cmpsl
jbe
pop
les
sbb
loopne
test
sbb
sbb
sub
ror
fdivrl
pushl
dec
loopne
add
das
cmc
addr16
jmp
mov
mov
movsb
pop
outsb
sub
shl
push
mov
xor
or
push
mov
pushf
mov
and
lahf
jecxz
fidivrs
outsl
mov
mov
prefetchw
or
inc
sub
cmp
mov
mov
xlat
bound
xor
jnp
ss
loopne
notb
push
jecxz
mov
cli
dec
mov
lahf
pop
outsb
mov
shlb
push
out
xor
mov
sbb
ja
test
lcall
mov
popf
int3
aam
arpl
or
sti
test
pop
in
adc
hlt
mov
loop
fldenv
sbb
leave
xlat
sbb
movsb
xor
and
mov
icebp
add
cli
and
pusha
stos
aad
icebp
repz
inc
jae
xlat
push
sbb
jo
sahf
enter
in
int
loop
mov
cmpsb
cmpsb
in
sbb
roll
xor
into
xchg
out
xchg
and
lds
push
jg
mov
mov
int
adc
xor
lea
in
ja,pt
movsl
push
pop
test
pop
lret
mov
push
lret
cmp
into
sbb
push
mov
adc
scas
orb
push
lock
mov
das
cmp
jbe
add
mov
lea
lods
push
loopne
rclb
pop
pop
push
cwtl
lret
mov
loop
inc
cmp
push
xor
jp
add
lea
cld
stos
pusha
mov
add
push
add
popf
push
leave
and
jge
in
pop
jp
dec
ret
scas
les
lds
mov
popa
fwait
rcll
mov
into
adc
push
ret
pop
mov
mov
cmp
xchg
adc
sub
push
jb
es
shll
movsl
sub
cmp
es
add
int3
jmp
out
jecxz
outsb
movsl
insb
xchg
xchg
aam
clc
stos
clc
xchg
test
nop
xchg
cmp
mov
frstor
ret
dec
scas
call
sbbb
adc
out
clc
fnstsw
push
cs
cli
push
enter
lret
lahf
imul
fsubs
push
fs
jmp
cmp
in
mov
cmp
pop
pop
daa
jne
cmp
jns
inc
aas
pop
dec
jl
daa
cli
adc
adc
mov
aad
push
xor
adc
mov
shlb
pop
inc
ret
and
jnp
dec
inc
dec
jecxz
sub
mov
adc
and
int
mul
add
mov
push
adc
xchg
nop
out
and
icebp
pop
sub
xlat
xor
add
pop
mov
outsl
xor
push
js
sarl
cmp
mov
out
fiadds
jle
lea
push
cmp
loopne
rcll
sbb
fdivrs
mov
sbb
mov
adc
jno
cmp
adc
negb
notb
loope
pusha
pusha
lahf
xchg
pop
adc
adc
and
sub
push
into
xchg
add
sti
or
and
add
clc
int3
mov
push
sub
mov
sbb
mov
mov
mov
es
nop
adc
fstpt
dec
adcb
out
fidivrl
cltd
les
inc
xor
mov
movsl
xor
int3
cli
sbb
fnstsw
mov
je
sub
int
add
iret
or
lods
mov
cmc
or
xchg
outsl
inc
xor
sub
out
adc
out
scas
in
std
mov
cmp
lea
cmpsl
and
sahf
mov
repz
inc
fldcw
bnd
cmp
ret
scas
rclb
sub
add
stc
cmp
popa
sub
cwtl
not
dec
pop
divl
and
into
inc
inc
stos
pop
imul
or
icebp
mov
int3
ljmp
or
jo
scas
out
xchg
mov
xchg
dec
xlat
add
loope
mov
lods
mov
sub
sub
jb,pn
xor
xchg
cwtl
mov
jl
mov
pop
les
cmp
pop
add
adc
adc
repz
inc
out
aas
adc
or
je
sbb
aad
mov
pop
or
dec
les
pop
movsb
pop
push
lods
ja
sub
loopne
lods
jns
insb
xchg
jb
sbb
sub
or
leave
jns
cld
dec
jnp
ds
mov
dec
sbb
xchg
jle
mov
jl
pushf
aas
aas
sub
cs
inc
lea
dec
mov
out
jp
jo
cmp
and
mov
mov
lret
jnp
mov
add
mov
mov
in
fwait
lea
jecxz
setno
rolb
xchg
cmp
add
loop
addb
lods
inc
jp
xor
mov
and
cwtl
fbstp
cld
mov
rorl
mov
inc
outsb
mov
scas
shll
cltd
insl
or
jo
jecxz
arpl
jb
or
add
test
cld
sbb
nop
enter
jecxz
imul
imul
mov
dec
sbb
mov
mov
stc
iret
mov
xor
dec
jo
push
lea
lret
adc
fucomi
dec
jns
stos
inc
into
out
mov
xor
sub
icebp
xor
cltd
pusha
mov
fmuls
cwtl
das
loopne
clc
cmp
mov
dec
jmp
jmp
clc
cmp
insb
inc
inc
sbbl
mov
repnz
or
mov
pop
loopne
jg
sahf
testb
sti
push
movsb
ss
xchg
daa
push
popf
das
dec
enter
mov
mov
insb
mov
mov
scas
popa
xchg
jmp
das
adc
mov
dec
data16
cld
leave
aad
and
ja
loopne
fadds
mov
jnp
mov
cmp
xchg
sub
out
fstpl
testl
push
dec
incb
sub
filds
in
iret
or
pop
sub
push
mov
pusha
sub
or
fwait
testl
mov
xchg
into
xchg
jecxz
mov
aaa
mov
and
hlt
xchg
sub
fwait
leave
call
add
mov
fmuls
or
filds
cmc
mov
jne
andb
lds
jl
gs
out
and
out
sbb
add
out
pop
ss
adc
or
xlat
int3
jb
add
ret
sbb
and
fildl
pop
cli
sbb
fxam
cpuid
sbb
adc
inc
sbbb
movsl
lret
aas
out
cmp
addr16
mov
mov
mov
jno
ljmp
mov
sti
mov
sub
xlat
rolb
stos
pop
aam
adc
pop
sbb
in
cmpsb
call
sub
pop
cs
pop
jmp
mulb
inc
inc
sub
addb
sarb
lock
insb
aaa
pop
sub
jae
pop
mov
add
test
mov
int
push
sbb
aas
cmp
fsts
aad
aaa
mulb
push
mov
sbb
add
test
aam
or
in
jne
rorl
adc
les
subl
cmp
jno
push
test
aaa
insb
mov
int
xlat
leave
stos
das
pop
push
sbbl
std
push
cld
mov
adc
mov
xchg
pushf
push
test
repz
mov
fsts
sub
pop
sbb
sbb
xchg
nop
adc
add
sti
fistpll
push
sub
roll
xchg
push
jb
jg
jae
add
cmp
rcrl
popa
sub
sbb
andb
lret
inc
push
xchg
loop
cs
push
shrb
dec
popf
cmp
add
cwtl
pop
or
and
sub
repz
loope
icebp
lahf
mov
stc
adc
cmpsl
push
cmp
sbb
je
ja
lods
mov
inc
hlt
dec
cmp
dec
cmpsl
dec
fildll
ja
lret
clc
push
fsubrs
cli
outsl
repz
cmp
mov
or
mov
hlt
and
add
dec
adc
pushf
lcall
mov
repnz
outsl
xchg
xchg
leave
fldcw
push
add
jge
stos
xchg
push
push
pop
mov
jbe
dec
push
xchg
inc
lods
mov
or
sarb
and
insl
fbld
push
pop
mov
pop
out
and
cmp
out
jmp
loop
inc
jnp
cltd
mov
ljmp
fs
adc
test
mov
xchg
ds
pop
fs
dec
cltd
out
sbb
push
imul
mov
rcrb
push
popa
adc
mov
sbb
jns
pop
pop
mov
jmp
push
movsb
cmpsl
sarb
lret
dec
mov
push
push
mov
ds
jae
jb
cltd
icebp
or
or
loope
in
cmp
xor
xchg
maxps
xchg
jmp
or
adc
stos
and
push
test
inc
inc
out
jns
add
fadd
cmpsl
mov
jnp
aas
xchg
xlat
add
push
stos
sub
icebp
popl
inc
add
stos
fildll
scas
rorb
mov
hlt
add
mov
cs
push
jb
dec
xor
mov
arpl
stc
xchg
gs
in
xchg
es
pop
js
add
or
sarl
pushf
mov
push
loopne
loope
fisubrs
xor
fcomp
imul
fldt
insb
loopne
pop
jae
cltd
stc
cmp
lods
cwtl
js
jle
mov
sbb
shr
push
fwait
mov
pop
clc
or
add
xchg
repz
cmpsb
sub
mov
iret
mov
sub
daa
mov
mov
out
pop
int3
sub
pop
dec
sbb
nop
nop
fistps
push
adc
movsl
fldenv
int3
js
out
push
sti
mov
stos
aad
iret
popa
lods
dec
mov
in
leave
jmp
lds
xchg
cltd
test
aam
fistpll
pop
xchg
jb
xor
shlb
cmc
xchg
sub
js
and
shl
push
stos
cmp
sbb
mov
xchg
mov
cmp
pop
enter
jecxz
mov
ss
outsb
mov
call
in
stos
repnz
jae
shll
int
mov
inc
or
sbb
testl
es
lock
pop
das
ret
shlb
or
xor
fnstenv
mov
and
shlb
pop
dec
std
sub
addl
jae
xchg
push
scas
mov
push
mov
leave
stos
enter
dec
add
test
repnz
int3
rcrl
and
sbb
ja
daa
mov
scas
aad
imul
in
mov
cld
aam
mov
ljmp
push
ret
mov
addr16
adc
out
out
fidivl
jns
push
pop
xchg
xor
cmp
out
push
iret
mov
and
popf
mov
inc
pop
lahf
sub
sbb
shlb
dec
imul
mov
cmc
out
jo
out
mov
movsl
pop
xchg
fs
mov
and
or
lea
nop
xor
jle
aam
bound
push
mov
mov
xchg
xchg
mov
popa
rorb
aam
jno
in
mov
fsubrs
push
mov
pop
push
push
or
jne
sbb
arpl
mov
shrl
adc
pop
in
int3
arpl
inc
cmc
push
sbb
sub
popf
mov
and
test
pop
fs
in
fiadds
cwtl
imul
sbb
mov
insl
insb
lea
mull
mov
repz
push
push
pop
add
mov
jp
dec
jnp
pop
out
pop
je
mov
call
int
aaa
and
sub
push
cld
pop
sbb
mull
sub
sbb
ror
jl
imull
andb
imul
jae
ret
push
pop
and
push
in
jne
arpl
push
fdivs
or
arpl
sti
jecxz
push
je
add
shrb
jecxz
ljmp
adc
add
inc
sub
jno
clc
xlat
sub
cmp
add
ds
leave
inc
sub
fwait
dec
mov
movsl
lret
pop
cld
inc
mov
std
and
ret
jmp
shl
lock
in
imul
mov
mov
daa
scas
sti
xor
arpl
aaa
adc
jge
daa
jecxz
stos
xor
mov
bnd
movb
clc
dec
cld
jb
aam
inc
sub
into
push
daa
cwtl
pop
add
push
pop
add
lea
loop
int3
inc
push
mov
push
dec
lea
add
mov
lds
fstl
test
adc
fcompl
leave
inc
nop
outsb
pop
add
jecxz
adc
pop
faddl
dec
gs
clc
push
outsl
out
xchg
repz
jae
xchg
jmp
cmp
sub
xchg
dec
inc
pop
mov
rorb
add
sbb
xchg
ss
or
pushf
jns
xchg
sbb
jo
loopne
adc
imul
shrl
jo
insl
lods
jbe
or
xchg
sub
pop
push
sub
xchg
ret
and
cmp
pop
into
dec
push
jns
mov
and
mov
lods
loopne
or
cmp
mov
push
inc
in
xor
enter
fidivs
idivl
fwait
bound
push
cmp
sbb
xor
or
inc
stos
dec
sarb
mov
or
lods
sbbl
cld
push
adc
adc
shl
push
sbb
mov
clc
mov
aad
or
ss
stc
xchg
pusha
in
adc
push
sbb
adc
in
and
ja
bound
mov
adc
jle
cwtl
shl
daa
add
lcall
pop
jno
andb
pop
and
fcomps
aad
sbb
fcmove
test
sub
shrb
insb
or
lcall
dec
test
push
cmp
shrb
imul
imul
idivl
enter
xor
jle
ret
sbb
pop
leave
clc
inc
mov
adc
xchg
xor
jge
xor
and
push
mov
and
xchg
mov
or
sbbb
push
scas
adc
sbbb
sti
mov
pop
and
pop
adc
or
pop
sahf
loop
pop
lahf
roll
pop
sti
fidivrs
mov
jns
inc
stos
cmp
mov
sub
xor
xor
mov
aad
clc
in
test
sbb
pop
ljmp
fwait
aas
cmp
inc
or
notl
adc
sub
std
data16
pop
xchg
mov
pop
loop
loopne
push
pop
and
cmp
jb
push
push
inc
xchg
add
insb
add
push
cs
xlat
cmp
xor
dec
xlat
mov
jnp
clc
lock
and
ljmp
rorl
fwait
popa
cmp
mov
addb
pop
sub
push
cmp
and
cmp
mov
std
or
xchg
movsl
jmp
mov
sbb
decl
iret
lcall
cmc
cmp
faddl
and
lea
movsl
aam
es
xorb
addr16
adc
mov
cmp
xchg
push
xchg
jo
mov
or
addr16
mov
insb
movntps
cs
add
mov
cmpsb
je
subb
mov
push
mov
repnz
fdivr
xlat
jecxz
and
add
das
push
and
mov
dec
dec
test
adc
mov
das
mov
test
xor
arpl
add
sbb
adc
sbb
stos
or
jno
push
ret
incl
cmp
jmp
xor
outsl
sub
jmp
cli
xchg
push
add
shrd
sbb
cmp
adc
rcrl
lcall
add
cmpsb
out
and
mov
out
inc
test
fs
lea
cmc
pop
sub
sub
mov
and
scas
repz
or
sar
dec
fdiv
pop
int
adc
and
xor
fcomps
jmp
or
jns
scas
int3
sub
add
add
or
scas
sbb
jg
pop
or
mov
hlt
loope
mov
mov
out
in
push
jg
cmp
jl
mov
push
mov
fistl
jbe
cmp
leave
fistpll
out
dec
lret
cld
sbbl
jle
xor
movsl
push
sahf
stc
or
push
divl
out
push
call
loope
sub
out
enter
loop
xchg
lea
cld
or
or
lret
out
in
mov
xchg
popf
or
lret
push
and
int3
faddl
leave
loopne
enter
pop
inc
push
inc
inc
stos
dec
pusha
add
add
push
pop
das
sahf
pop
imul
sbb
jecxz
pushf
push
cmp
push
push
aas
dec
xchg
adc
inc
mov
and
mov
enter
adc
pop
std
imul
cli
mov
cwtl
iret
ja
and
cmp
dec
aad
jbe
cmpsl
ss
dec
imul
push
aaa
dec
xor
xchg
add
sahf
in
dec
pushf
lret
inc
jmp
and
jmp
cs
cli
and
int3
insl
jbe
cmpsb
aaa
mov
in
and
stos
stc
mov
gs
popf
cmpsb
scas
cmp
xor
xor
shlb
push
or
fwait
sbbl
push
push
jmp
cmp
inc
das
push
sar
push
jecxz
mul
push
in
add
imul
insb
cwtl
and
sub
loope
pushf
jl
dec
sbb
out
mov
xlat
mov
je
filds
or
xchg
or
cld
mov
scas
cmpsl
sbbb
push
lahf
add
adc
lea
sbb
mov
imul
pusha
pop
mov
pop
in
mov
add
cmp
pop
ret
int
jg
mov
xor
movsb
testl
sub
dec
pop
sub
pop
fldt
push
sbb
popa
mov
adc
mov
inc
sub
ljmp
push
mov
aas
adc
outsb
fmull
mov
test
out
daa
mov
xchg
or
in
or
fs
dec
test
cwtl
and
loop
mov
jae
add
pop
mov
sub
repz
mov
push
push
mov
shlb
adc
pop
mov
jge
cmpsl
outsb
mov
aas
out
sub
jns
sbb
aad
add
dec
push
or
outsl
xor
lods
cmp
fists
adc
fucom
pop
outsb
flds
sahf
loopne
push
lahf
mov
out
hlt
dec
insl
inc
sahf
mov
shl
xor
pop
jbe
jns
mov
xor
popa
jo
call
cmc
push
mov
clc
fadds
jns
aad
add
jne
mov
loopne
fistps
aam
pop
xor
loope
or
mov
movsb
inc
cli
ret
stos
xor
jnp
push
mov
add
lea
testb
fldenv
jmp
jmp
pop
out
addl
sarl
xchg
add
sbb
push
jp
pop
push
popf
push
adc
lcall
sbb
icebp
sbb
cwtl
sbb
jp
pop
fwait
mov
pop
push
mov
push
add
shlb
dec
js
jne
int3
add
mov
movsb
dec
popa
mov
mov
add
scas
into
cmp
cmp
imul
or
cs
push
sbb
xchg
nop
and
popl
rcrb
mov
mov
lret
adc
push
xor
jl
pop
fnstenv
jne
cmpsb
daa
cmpsl
test
add
xchg
into
mov
pop
mov
sahf
jb
rcrb
xor
pop
xor
inc
arpl
jnp
in
inc
insb
dec
cmpsl
push
dec
mov
ljmp
dec
and
std
nop
aad
popa
ret
dec
pop
xchg
add
pushf
dec
std
ljmp
mov
rorl
pop
out
enter
mov
add
stos
lea
adc
insb
push
mov
xor
punpckhdq
and
sub
enter
call
push
lahf
addr16
iret
mov
jbe
inc
mov
mov
das
ficompl
or
push
push
mov
xchg
xor
jnp
xor
pusha
jno
fidivs
xchg
aad
clc
stos
iret
rorb
add
pop
cli
xchg
pop
inc
push
pop
rolb
outsb
cmpsb
mov
pop
lea
cmp
test
add
clc
enter
popf
nop
fsubrs
jp
test
dec
dec
add
enter
add
in
aad
xor
push
rcr
loopne
cmp
orl
pop
gs
es
in
movsb
sbb
pop
dec
rorl
push
int
xchg
jmp
sub
pusha
gs
inc
sbbb
lods
cmp
mov
test
xor
popf
dec
fiadds
sbb
js
pop
inc
testb
mov
jb
cmp
add
enter
fnstcw
add
inc
xchg
add
and
sbb
xchg
cltd
aas
popf
xchg
arpl
jl
jp
mov
inc
inc
aaa
inc
aaa
push
les
adc
loope
fsts
mov
fucomi
lds
in
add
xchg
cmp
xchg
fwait
rcrb
sbb
or
test
dec
mov
icebp
push
rclb
int3
movsb
in
loope
movq
leave
dec
cltd
add
pop
repnz
imul
mov
cwtl
enter
out
jb
cli
mov
pop
hlt
sbb
pushl
ljmp
loop
ljmp
dec
xor
aaa
and
sub
repnz
xor
cmpl
repz
lods
mov
aas
int
loope
add
push
in
xchg
mov
jg
jns
pusha
adc
call
and
mov
xchg
dec
add
iret
or
push
nop
aaa
push
cmp
popa
or
xor
or
sbb
sbb
imul
push
fcomp
inc
fwait
push
leave
popf
xchg
loope
sbb
xor
lret
cmpsl
jns
pop
cli
mov
pop
ret
xchg
in
iret
pop
and
sub
adc
push
add
es
sbb
adc
nop
mov
and
hlt
icebp
lret
imul
shrl
lahf
dec
ljmp
stos
sub
sub
sbb
sbb
push
push
ljmp
push
mov
mov
in
hlt
repnz
icebp
pop
stc
pop
and
and
gs
fisubrs
je
jp
push
pop
mov
jmp
cmp
out
lcall
xor
or
fsts
test
cwtl
dec
push
inc
mov
push
aad
movsl
ljmp
push
adc
xor
lds
cmp
push
xlat
daa
iret
mov
leave
jbe
pusha
mov
into
scas
push
ja
aad
cmpsl
insl
in
int
mov
or
cmp
dec
mov
dec
push
add
repz
sbb
aaa
ljmp
xchg
sbb
imulb
loopne
jmp
nop
cmp
inc
das
lds
jmp
ror
das
mov
in
es
mov
jno
mulb
jns
pop
dec
add
in
jno
rcrl
xor
pop
popa
lds
pop
cmp
jecxz
decb
ja
mov
in
daa
testl
push
sar
dec
ret
mov
movsl
mov
lret
sub
ljmp
lock
das
std
in
mov
lock
nop
push
cmp
jl
movsb
dec
fsubr
movsb
into
pop
int
repz
jl
sar
jae
jns
pop
add
rcrl
inc
fcmovne
mov
int3
dec
leave
mov
fisubl
dec
mov
fs
xchg
loop
pop
xchg
push
lds
ljmp
mov
dec
cmp
lock
cmp
push
inc
jg
fiaddl
xchg
xchg
mov
call
sub
add
ljmp
arpl
cmp
mov
mov
pop
and
mov
push
mov
cs
lret
imull
or
mov
jo
mov
or
mov
imul
xchg
pop
inc
mov
or
das
sbb
in
cwtl
fcomps
enter
jae
je
add
lret
pop
stc
push
movl
or
lret
call
movsb
and
jmp
int
test
xchg
xchg
in
rcl
xor
out
and
pop
xchg
push
sbb
inc
bound
sahf
das
ja
sbb
sub
popf
lcall
ret
outsl
cltd
and
sbb
insb
addb
sbb
repz
loop
insl
bound
lret
pusha
psubd
or
jecxz
mov
add
scas
fdivrs
jecxz
mov
mov
scas
push
jns
ret
mov
loopne
aaa
mov
sbb
sbb
mov
test
loopne
repnz
mov
mov
loopw
inc
jmp
addl
xchg
cwtl
imul
sti
pop
cs
jns
inc
inc
or
lods
add
fldenv
pop
sbb
mov
loopne
gs
mov
cmc
fmull
xor
cmp
pop
jb
xchg
sar
outsl
pop
sub
or
int3
out
push
pop
jnp
fdivrl
lret
push
dec
ret
mov
pop
pop
enter
mov
push
pushf
insb
fistpl
sbb
loop
xor
cwtl
int3
mov
mov
jne
insb
jb
shll
test
das
push
add
ds
sub
or
enter
xchg
aaa
push
lcall
or
fwait
aaa
lock
adc
dec
pop
mov
jno
sarb
dec
insl
pop
xchg
push
sbb
arpl
mov
gs
cltd
rolb
inc
data16
aam
test
mov
fadds
loop
and
adc
mov
xor
jns
arpl
notb
pop
xor
repnz
inc
test
or
adc
idivl
fcmovnu
invd
imul
fistl
sub
mov
fldenv
in
lahf
sub
imul
fs
inc
bound
sbb
mov
inc
xchg
sbb
lret
cs
pop
mov
pop
das
fisttps
pop
sbb
inc
popa
test
loopne
lret
mov
xor
push
mov
mov
loopne
inc
test
ds
sbb
lods
iret
xchg
inc
arpl
jge
pop
pop
je
push
pop
push
nop
fidivrl
push
icebp
cmc
xor
sahf
pop
call
dec
int3
mov
fdiv
jl
popa
cmp
test
mov
jg
jecxz
or
sub
or
mov
ja
xchg
mov
test
xor
or
adc
les
popa
lea
ja
pop
adc
or
or
movsl
das
sub
jb
cmp
testl
mov
pop
int
sbb
dec
in
lahf
lret
int
ja
ss
shrl
clc
fsub
cmpsl
jl
cli
jmp
loope
inc
cmp
enter
or
and
xchg
mov
js
test
mov
into
adc
mov
filds
push
rcrl
enter
out
dec
sub
pop
jnp
push
test
push
aaa
ret
mov
pop
and
test
dec
cmp
test
dec
cld
jge
adc
ficompl
aaa
ja
shr
xchg
dec
sbb
pop
lods
xor
sbb
popa
out
xchg
mov
lahf
or
shll
int
cmp
or
and
xor
bound
cmp
in
insb
mov
cld
pusha
and
sbb
aaa
out
mov
jns
ss
stos
filds
popa
jl
and
mov
icebp
call
in
cld
out
or
sub
pop
cmpsb
or
aam
out
ds
or
maskmovq
notl
cltd
add
mov
inc
pop
leave
cltd
cmp
push
sub
repz
mov
push
and
loop
jmp
mov
and
xor
push
xor
push
lcall
roll
push
xchg
out
cld
push
gs
xor
mov
test
ljmp
leave
add
sub
ret
jmp
inc
shr
pop
jl
jns
cltd
mov
sub
sti
sbbb
jle
in
jns
xchg
push
lahf
sahf
jmp
dec
dec
mov
push
les
push
mov
add
scas
push
jl
enter
in
sub
insb
jns
pop
cmpsb
xchg
push
dec
stc
xchg
decb
cmp
in
icebp
jmp
sahf
enter
out
add
dec
push
push
mov
dec
push
incl
mov
mov
adc
stos
rorb
xor
cmpsl
mov
pop
rorb
xchg
cmpsl
int
test
xchg
lahf
jae
lret
in
push
hlt
adc
jmp
mov
mov
dec
sub
sti
pusha
lds
mov
jl
addr16
adc
mov
xor
pop
jg
mov
js
in
push
mov
dec
je
xchg
xchg
mov
inc
arpl
xor
adc
sbb
cmp
icebp
aaa
adc
cmp
scas
push
mov
and
dec
cli
out
arpl
mov
push
push
call
jae
test
xor
pop
add
and
cli
sahf
xchg
sbb
mov
scas
push
xor
or
pop
add
test
xchg
sbb
jmp
sbb
test
dec
xlat
xchg
cmpsb
pop
push
dec
jno
and
movsl
xor
inc
stc
mov
sti
inc
faddl
adc
daa
cltd
sbb
push
push
push
int3
push
cs
repz
mov
xor
or
fs
popf
mov
lret
out
ja
xchg
adc
test
les
jnp
dec
jge
sbb
cmp
idivl
jmp
shll
fwait
or
cli
cld
aam
fstl
popa
fistpl
imul
fdivs
xchg
out
sbb
mov
xchg
inc
test
dec
mov
aad
movsb
sti
jns
sbb
rcll
xor
out
adc
shll
in
mov
repz
jl
pop
push
ljmp
ret
aas
shrb
and
xlat
push
xlat
cwtl
movsb
push
sbb
inc
mov
inc
cmp
mov
cs
xchg
mov
dec
std
popf
push
loop
scas
test
cli
xchg
sbb
icebp
lret
and
test
jg
ja
xor
sti
xor
sbbb
decl
add
add
test
mov
pop
and
mov
sbb
data16
sbb
xchg
int3
mov
pop
and
subb
inc
lds
movsl
inc
xchg
cwtl
fimull
mov
sbbb
clc
dec
lea
cmc
andb
lcall
lods
xor
gs
mov
dec
outsb
xor
cltd
into
mov
push
xchg
int3
or
xchg
addr16
and
lcall
dec
call
dec
outsb
loope
sub
xor
sti
mov
or
xchg
testl
fcompl
je
shrl
insl
jnp
pusha
adc
addr16
jo
repz
lds
cwtl
mov
insb
mov
mov
sbb
xchg
imul
pop
mov
rcl
shrl
popa
unpckhps
dec
push
into
rolb
dec
cmp
cmp
xchg
or
in
dec
insl
pop
outsb
push
or
or
xor
xor
stos
sub
jle
enter
mov
jnp
ja
jmp
arpl
pop
sub
dec
inc
popl
ljmp
cmp
pop
test
outsb
xor
dec
jg
mov
icebp
lcall
mov
xchg
ss
and
enter
das
lcall
jmp
aam
roll
xchg
xchg
sub
cmp
out
mov
stos
les
les
ljmp
movsb
and
add
call
or
sub
push
cmpl
cmc
push
mov
cmp
imul
mov
jns
dec
sub
repnz
aam
pop
push
xchg
or
jge
and
jbe
scas
pop
shll
xchg
es
pop
mulb
mov
pop
lock
xor
xchg
add
mov
or
fsts
lahf
aaa
icebp
xchg
rolb
adc
in
push
push
roll
cs
mov
int3
scas
out
notb
inc
sbb
fistps
imul
ret
lods
mov
ja
mov
pop
jle
jle
add
or
scas
or
jge
loopne
jmp
mov
jnp
xor
xor
ljmp
nop
sub
rcrl
dec
addr16
and
int3
pop
mov
cmp
mov
mov
jae
repz
mov
and
and
push
ficoms
pop
jo
lds
imul
xchg
mov
enter
cmp
popa
test
js
int
jae
das
inc
hlt
loopne
push
mov
in
push
or
push
pushf
sbb
inc
in
shll
icebp
stc
push
add
repz
xchg
push
or
mov
lret
and
add
arpl
add
push
pop
mov
push
test
enter
lcall
gs
loope
or
out
mov
push
addr16
jmp
mov
mov
jl
arpl
inc
jbe
decb
or
push
push
push
jle
mov
cmp
jecxz
pop
mov
out
shlb
add
es
clc
dec
push
push
push
push
adcb
fiaddl
ljmp
movsl
iret
mov
lds
aad
add
loope
cld
lcall
aam
cmp
jo
xchg
xor
adc
ror
rorb
loopne
jno
orb
icebp
pop
sbb
scas
dec
mov
shll
jb
dec
sub
push
enter
idivl
push
test
xor
je
repz
je
fildl
mov
int
and
dec
mov
adc
pop
fcmovb
sub
mov
or
stos
sub
jo
cmp
mov
adc
rclb
mov
xchg
mov
lret
xchg
movsl
roll
lcall
rcl
pushf
cmp
mov
in
jmp
js
int
clc
sub
xchg
dec
jnp
bound
andl
sub
repz
cmc
mov
xchg
repnz
push
xor
dec
pop
das
inc
and
pop
inc
int3
fcoms
in
jnp
pushf
in
jl
ljmp
fsub
ret
jnp
int
fcomi
adc
xchg
xorb
sbb
mov
xchg
or
in
lret
and
arpl
dec
cmc
push
mov
dec
mov
lods
dec
mov
into
shll
lods
adc
outsl
negl
pop
push
adc
ret
jge
icebp
adc
push
dec
dec
test
sub
mov
add
leave
int
or
hlt
mov
or
test
fldt
adc
mov
lret
xchg
imul
cmp
int3
in
movsb
mov
sbb
loopne
addl
add
jno
mov
jg
std
fisubl
add
idivl
xchg
xor
call
cmp
jl
data16
in
mov
bound
mov
mov
in
enter
stos
pop
addr16
xor
mov
or
into
mov
and
cmp
scas
sbb
lods
cmpsl
mov
mov
push
std
scas
pop
fdivrs
xchg
aam
and
mov
adc
sub
inc
xor
cmp
pop
aaa
scas
sub
ret
xor
push
and
repz
cmc
mov
xor
dec
lods
cmp
inc
cmc
adc
ja
sbb
dec
add
test
pushw
mov
mov
cmp
aad
in
nop
cmp
push
mov
pop
inc
shll
repz
inc
xchg
sub
pushf
shlb
jae
scas
mov
fimuls
hlt
out
sbb
and
cmpsl
lock
or
fs
cmpsl
leave
addr16
push
sub
jecxz
pop
idivb
aas
mov
sub
mov
dec
dec
jl
scas
adc
mov
clc
pushf
ss
lds
jne
mov
cmp
and
mov
fstpt
sahf
cmp
xchg
loop
dec
inc
hlt
pop
push
sahf
sbb
loopne
jge
pop
sar
mov
insb
adc
push
shrl
add
mov
dec
inc
cmpsl
push
iret
mov
sar
subb
call
sahf
push
nop
mov
mov
and
xchg
push
cmp
outsb
sarl
cwtl
pop
push
cmp
cltd
clc
push
ja
cmpsb
sbb
std
push
pop
push
or
popa
jecxz
lret
shlb
pop
fcmovnbe
mov
jo
dec
mov
jnp
cmp
xor
mov
cmp
inc
sbb
push
xor
frstor
add
mov
lret
pushf
cs
sub
enter
push
mov
cmp
fwait
std
fsubl
ljmp
es
mov
jns
mov
nop
ds
les
int3
imul
xor
hlt
jnp
xor
and
rcrb
pushf
je
adc
mov
cmpl
incb
sbb
xchg
addl
popa
mov
pop
aad
jbe
mov
movl
push
mov
pushf
push
movsl
dec
cli
sub
mov
add
test
out
xchg
pop
rcrl
xchg
test
lock
push
and
pop
int
xor
sbb
inc
ljmp
mov
mov
adc
dec
frstor
xchg
pop
dec
test
dec
dec
xchg
inc
sub
sub
sbb
xchg
or
aad
scas
jae
loope
sbb
xlat
ret
mov
xlat
outsb
imul
add
pop
mov
sti
pop
scas
jno
in
mov
mov
sbb
mov
test
xor
push
inc
das
or
add
jl
lret
stos
loopne
xor
and
add
cld
jnp
mov
andl
shll
pusha
adcl
mov
fsubrl
xor
xchg
add
insb
pusha
cmp
mov
sbb
xchg
stos
add
sub
jne
sub
dec
mov
inc
sbb
dec
mov
dec
sbb
pop
sbb
test
or
mov
out
mov
cmp
fdivr
push
and
dec
int
sbb
aas
dec
and
or
xor
cld
lret
adc
mov
or
int3
cmp
aaa
jbe
cmp
sti
in
call
adc
addr16
inc
xor
and
nop
cmp
in
test
xor
push
fisubrs
call
push
scas
scas
dec
call
stos
loopne
jae
xor
mov
call
test
pop
sub
and
sbb
test
xchg
mov
rcrb
stos
je
mul
xchg
outsl
adcl
aas
movsb
repnz
outsb
sub
pop
fwait
dec
bound
lea
imul
sbb
or
cmpl
xchg
imul
adc
arpl
addl
cs
mov
inc
movsl
or
mov
mov
decl
addb
pop
dec
out
imul
lea
ret
les
push
flds
xchg
sub
push
mov
or
andb
xchg
pop
repz
movb
or
xchg
lret
push
lea
les
cmp
loope
sbb
data16
shrl
mov
popa
shr
adc
std
inc
fdivs
sbbb
lds
inc
js
jnp
xchg
repnz
xchg
nop
dec
cmpsb
mov
lock
add
repz
insb
out
mov
inc
or
lods
fnsave
dec
dec
mov
cmpsl
sbb
into
sbb
mov
arpl
dec
les
push
jecxz
movsl
out
data16
ljmp
dec
adc
test
hlt
inc
mov
jmp
xchg
mov
loopne
jmp
test
inc
push
fsubrp
inc
mov
fwait
push
popa
jno
push
dec
loop
push
enter
mov
push
leave
lcall
push
pop
xchg
inc
pop
fildll
in
cmpsl
test
cmpl
cwtl
pop
add
adc
repz
pop
xchg
cmpsb
adc
das
adc
ret
mov
imulb
pop
dec
xchg
sub
push
cmpl
mov
add
jns
sbb
or
mov
cmp
cld
stos
pop
push
icebp
mov
jmp
inc
mov
ss
loopne
dec
fdivs
sub
adc
mov
push
bndldx
push
bound
es
fdivrl
sub
insb
insl
notb
dec
jo
bound
jge
dec
ret
fmulp
push
ficompl
add
inc
scas
xor
repz
in
pusha
cli
mov
into
imul
sbb
mov
inc
inc
aad
mov
jg
ret
aam
adc
iret
pop
enter
push
mov
jle
jg
das
call
les
mov
ret
cmpb
fildl
jge
adc
xchg
into
fsubs
aaa
inc
in
pandn
lods
outsl
xchg
mov
mov
outsl
add
jp
call
cmp
and
pop
push
lcall
inc
call
cmp
jg
xchg
adc
ljmp
and
push
or
jnp
add
jl
jg,pn
jmp
dec
gs
enter
inc
inc
xchg
in
and
test
add
sbb
and
jb
mov
xchg
dec
mov
in
pop
pop
dec
loope
fistpll
mov
push
sbb
adc
push
dec
jae
aam
shll
inc
adc
pusha
inc
call
adc
add
or
xchg
mov
arpl
cmpsb
sbb
xchg
cs
cmpsb
inc
cld
mov
lret
mov
ja
bound
lods
ror
sub
repnz
cmp
xchg
out
pop
dec
add
aad
sbb
sub
inc
mov
iret
lcall
sbb
and
push
lock
or
les
xchg
nop
adc
jle
out
xchg
mov
inc
or
call
outsb
dec
addr16
data16
jae
push
lret
popf
push
das
push
cmc
add
lock
pushf
pop
dec
out
sub
lret
cmp
fs
push
pop
inc
stos
movsb
lods
int3
fstps
push
outsl
loopne
out
xchg
add
jmp
mov
xchg
lods
mov
scas
insl
mov
lret
dec
sbb
cmp
dec
push
movsl
pop
push
popf
test
aad
fs
pop
loopne
out
sbb
dec
mov
lahf
das
xor
cmpsl
pop
dec
es
dec
outsb
xchg
aam
lret
add
mov
dec
es
or
jmp
in
pop
pop
dec
lods
ficoms
pop
ljmp
das
ret
sti
inc
mov
push
pusha
sti
jno
fldcw
adc
or
mov
insl
jge
mov
dec
cmp
insb
push
mov
xor
lret
push
mul
outsb
stc
mov
and
imul
add
loop
movsl
addr16
fimull
fcomip
sub
mov
xchg
movsl
arpl
in
pop
addl
push
cmp
mov
sub
mov
jb
push
mov
push
orb
leave
lcall
jo
test
arpl
push
mov
push
mov
mov
bound
fninit
movsb
push
dec
add
mov
jbe
pushf
std
jge
mov
jo
cld
fdivl
lret
mov
mov
mov
dec
xor
xchg
adc
and
xchg
sbb
push
mov
int
mov
imul
out
and
ja
mov
cmp
ret
push
inc
leave
stos
call
mov
or
inc
pop
pop
scas
ss
cmp
mov
je
xor
mov
dec
cmp
in
aam
imul
jns
faddp
out
or
pop
pop
cs
sbb
ret
imulb
push
addr16
sub
sub
push
loopne
jecxz
mov
push
ss
push
xchg
mov
or
bound
xchg
popf
sub
lods
mov
inc
cld
or
or
jle
mov
jo
inc
jno
adc
pop
das
cmp
xchg
and
pop
add
rorl
cmp
push
mov
mov
iret
mov
daa
loop
and
jne
int
and
sbb
inc
mov
mov
adc
xlat
add
sbb
cli
enter
pop
cmp
sbb
fstpl
gs
dec
lds
lock
daa
not
add
xor
cli
test
jo
sub
add
inc
sete
pop
mov
xchg
nop
xchg
adc
dec
lds
shr
xchg
in
mov
mov
cmp
ret
lcall
in
loop
jp
loop
cmpl
xchg
mov
dec
aam
popf
push
cmp
fwait
add
dec
push
pop
shlb
adc
je
or
jle
bound
sbb
and
add
fldcw
enter
xor
push
sbb
sahf
pop
mov
sbb
repnz
add
sbb
dec
cwtl
jl
lds
addb
ds
testb
mov
arpl
mov
insl
adc
xchg
push
add
lea
and
rorl
adc
sub
aas
cmp
popa
lds
mov
lds
mov
add
ret
movsl
push
cmp
jge
sub
repz
movsl
fistpll
xchg
mov
push
add
xchg
mov
test
ja
sti
inc
mov
dec
cmp
fistpll
sets
cmp
jne
sub
pop
js
test
shr
sub
jae
cmpsb
sub
out
cmp
lods
and
arpl
scas
subb
pop
int
or
repz
jno
push
dec
sahf
incl
das
les
jmp
dec
in
push
xor
shlb
and
int
sbb
in
stos
mov
sbb
bound
push
lods
iret
jno
mov
mov
loope
mov
mov
outsb
jbe
adc
cmp
jge
es
jae
lahf
cli
push
lret
xchg
gs
mov
sbb
push
popa
stos
les
in
inc
mov
into
outsl
pusha
adc
add
xchg
test
arpl
push
repnz
shl
ret
rcr
cmp
mov
hlt
repnz
rclb
negl
es
xchg
and
sarb
clc
jle
ret
call
lock
jge
outsl
pop
ret
cli
mov
jb
in
and
jl
pop
xchg
les
pushf
ret
jl
cli
fstl
frstor
scas
es
inc
push
sbb
dec
ret
jl
and
ret
mov
push
imul
xchg
xor
dec
sub
inc
and
mov
lds
loopne
pop
jp
ljmp
aas
and
mov
ja
xchg
jl
dec
mov
arpl
push
dec
adc
es
jne
xor
push
xchg
pop
js
jnp
ret
inc
adc
or
iret
cli
push
das
mov
dec
pop
loopne
jbe
mov
into
jae
xlat
data16
ret
mov
add
xchg
mov
mov
pop
call
lock
sub
push
outsl
pusha
push
cs
ss
xchg
scas
jmp
ljmp
dec
iret
dec
popa
test
hlt
mov
movsb
jecxz
lret
or
jb
xchg
xor
div
dec
out
pop
rclb
inc
mov
mov
in
mov
mov
out
testl
repz
push
and
cmp
add
mov
sub
repz
mov
clc
in
dec
mov
fidivrl
andb
push
add
mov
xchg
inc
out
jno
loop
rcr
mov
test
les
iret
sbbl
jge
adc
adc
dec
cs
cli
push
clc
adc
lret
inc
push
inc
test
mov
cmp
test
dec
mov
enter
adc
mov
mov
mov
and
push
addr16
cltd
enter
mov
xor
insb
adc
arpl
push
fcomps
and
ljmp
adc
mov
mov
mov
packssdw
push
in
push
cli
setno
pop
div
jle
ds
jle
or
mov
roll
jno
and
fninit
mov
ss
scas
call
pop
xchg
dec
popf
xor
sub
popa
aad
dec
sti
dec
sbb
fsub
sub
jae
cmp
cld
cld
xchg
ja
mov
fnstsw
out
sbb
jg
enter
test
pop
ror
push
inc
dec
xchg
mov
cmpsb
and
imul
and
jo
sub
clc
cmp
fbld
ss
xchg
pushf
les
push
imull
or
add
jecxz
lods
out
iret
data16
cmpsl
stc
lds
repz
adc
push
jecxz
inc
imul
shlb
loope
inc
sub
xor
sti
sub
pop
pmullw
xor
gs
frstor
aaa
fmuls
ret
cmp
imul
loop
ja
push
shlb
scas
lods
ffreep
mov
dec
mov
mov
dec
push
pop
dec
inc
pop
jp
stos
mov
jmp
jno
dec
add
cmp
sub
std
pop
stos
loop
ljmp
aaa
mov
std
das
xchg
pop
ret
mov
dec
ljmp
push
das
pop
lahf
ss
adc
pop
jns
cli
dec
daa
jecxz
mov
rcrb
xor
loop
into
dec
push
leave
dec
ret
jbe
jge
inc
jbe
xor
sbb
in
stos
adc
ficoms
adc
in
mov
outsb
ljmp
in
sbb
ret
pop
cli
lea
iret
ficoms
add
icebp
les
popf
cld
inc
insb
adc
or
inc
ljmp
cmp
mov
sbb
mov
fwait
xlat
push
dec
fstl
int
dec
stos
or
adc
lcall
cli
shlb
pop
xor
loope
jne
push
push
dec
sub
hlt
daa
jmp
push
dec
rcrl
fwait
inc
ja
je
stos
inc
jno
lret
adcl
lret
gs
push
sahf
xchg
pop
lds
out
mov
clc
dec
cld
push
sbbl
fcomi
mov
sbb
mov
ds
sub
cmp
or
lret
xchg
mov
outsb
inc
and
lods
gs
fisttpl
mov
xchg
cs
xchg
ljmp
iret
ds
xchg
add
xchg
lcall
pop
push
xchg
push
inc
push
je
fs
out
xchg
mov
xor
xor
rolb
imul
push
lock
dec
cmp
add
ja
pop
ret
leave
sbb
inc
rcrl
aad
sbb
enter
inc
push
lret
aam
loopne
mov
inc
xchg
mov
cld
pop
fisttps
push
test
sbb
add
dec
sbb
mov
loop
lea
mov
lahf
add
sbb
mov
in
push
pusha
cmp
addb
push
xchg
xor
int3
pop
bound
xor
cwtl
push
mov
inc
jmp
adc
or
mov
test
mov
daa
jns
mov
and
mov
into
cmpb
popa
aad
dec
ret
or
fs
pop
sub
negb
mov
fcompl
out
push
imulb
push
lock
leave
mov
pop
insl
fidivs
shll
push
mov
dec
adc
sub
or
loop
sbb
cmp
jge
std
jno
jecxz
push
dec
xchg
roll
outsl
int
fdiv
imul
fsubrl
fistpll
pop
push
xorb
sbb
pop
inc
pop
xchg
ret
fsubl
enter
or
pop
out
in
jbe
adc
xchg
push
fwait
add
aam
mov
test
nop
jl
mov
xorl
jge
daa
imul
xor
jg
xlat
mov
arpl
sbbl
insb
jle
stc
ret
xor
jl
xchg
out
sbb
cs
push
pusha
popf
outsb
aad
iret
inc
jp
xchg
pop
pop
jo
int
mov
mov
cld
or
xor
xor
pop
les
outsb
xor
sarl
enter
test
push
jb
add
pushf
jp
ja
push
xor
xchg
mov
data16
inc
add
leave
mov
push
jmp
pop
lea
ficoms
push
mov
xchg
dec
xchg
push
cmpsb
push
lcall
xor
out
pop
push
pop
imul
popf
inc
sahf
mov
mov
xchg
pop
fs
push
in
das
mov
in
adc
xchg
cmp
push
xchg
cmp
xor
jecxz
xor
cmp
add
pop
add
dec
pop
cmp
push
pop
out
rcll
icebp
mov
or
mov
dec
lds
es
xor
jg
mov
xchg
es
fst
mov
cmp
sub
mov
xor
pop
je,pn
and
pmaddwd
xor
inc
jle
jmp
push
mov
nop
movsl
ja
cmc
sub
add
xchg
shl
outsb
inc
xchg
bound
and
add
sti
ss
cmp
rcrl
or
sbbl
rcll
addr16
nop
inc
xchg
outsb
jle
ret
cmc
jnp
push
cmpsb
idivl
aad
adc
mov
cli
stc
cmc
aad
popa
das
add
or
aaa
cltd
test
subb
inc
mov
push
fsts
loopne
cmp
cld
scas
cmp
pop
pop
or
nop
mov
jb
in
inc
mov
and
and
test
cltd
lahf
in
mov
xchg
ss
mov
mov
addr16
das
push
fnsetpm(287
cmp
sti
outsb
leave
call
pushf
data16
lea
mov
in
mov
in
rcrb
xor
jne
cld
test
adc
lcall
xor
daa
mov
loopne
mov
mov
xor
mov
push
add
jp
bound
xor
outsb
inc
mov
stos
sub
push
fsts
xchg
sbb
dec
lods
xchg
xchg
xchg
outsl
cwtl
paddb
test
in
mov
xchg
push
sub
std
dec
shrb
xlat
sub
mov
test
testb
mov
and
pop
add
ds
xor
mov
mov
xor
jecxz
jo
cmp
adc
repz
dec
adc
xor
repz
adc
insb
ficomps
aad
jge
call
addr16
aaa
mov
inc
dec
jbe
movsl
pop
push
popa
leave
push
ds
xchg
jge
cmp
rcrb
push
mov
sub
push
repnz
fldl
mov
mov
or
add
or
mov
jecxz
mov
xor
decb
sbb
je
xor
stos
inc
popf
jo
or
dec
push
ret
adc
add
shrb
xchg
std
adc
sub
loop
mull
push
stc
movsl
cmp
cli
xor
je
xor
sahf
cli
test
int
mov
inc
push
daa
jo
jnp
fnsave
out
mov
lock
lods
sahf
cmp
popf
orl
and
movsl
inc
test
cmp
fisubrl
aad
adc
bound
push
inc
je
sbb
in
ja
in
push
add
adc
push
fmuls
es
ljmp
lds
cmpsl
xor
ds
cmp
xor
jle
pushf
loop
inc
movsb
clc
jae
add
dec
je
and
lret
lea
mov
add
pop
movsb
negb
inc
jae
loopne
push
in
aad
fistpll
lret
mov
pop
pop
push
or
mov
add
ja
mov
and
outsl
dec
movsb
repnz
dec
mov
js
insl
sbb
dec
fidivl
add
iret
add
insl
aad
sbb
xchg
pushf
jmp
aad
push
sbb
inc
imul
clc
xchg
scas
mov
push
mov
mov
ficoms
inc
sub
or
into
fmuls
dec
sub
shlb
lods
lods
push
fldcw
adcl
mov
insl
adc
jmp
and
cmp
aaa
orl
sub
cmpl
out
clc
mov
jne
div
push
and
out
aam
outsl
cmpxchg
in
fsubrp
scas
xchg
dec
fistpll
cmp
mov
push
jle
imul
jae
or
shl
ficoml
xchg
sub
cwtl
add
and
mov
outsb
adc
shll
ficoml
cmp
add
cmp
pop
sbb
repnz
stos
or
call
addr16
add
xor
xchg
and
push
mov
push
xchg
shll
or
push
xor
loop
bound
aam
dec
xchg
leave
jl
mov
movsl
xor
pop
xor
or
and
popa
lds
les
sbbl
lock
pop
shll
add
loop
clc
leave
mov
imul
mov
adc
pop
das
or
shrl
fcmovbe
and
sti
leave
xor
sbb
mov
pop
xor
gs
mov
xchg
mov
xor
mov
push
pop
lea
sbbb
or
out
and
sbb
test
mov
enter
and
mov
sub
sbb
mov
pop
mov
xchg
in
jns
pushf
das
pop
testb
cld
mov
pop
cs
inc
insb
fcmovnu
jno
or
xchg
or
sbb
idivb
xor
pop
cmpsb
fwait
testb
int3
xor
negb
ret
mov
mov
sub
je
fidivrs
xor
jle
dec
test
xchg
cs
xchg
mov
mov
pop
je
sahf
sarl
mov
xor
fimull
subl
iret
ja
pop
mov
fistpll
imul
fadds
adc
ja
adc
mov
sbb
test
stc
or
add
add
cmp
and
xor
bound
fadds
cs
mov
jmp
adc
into
repnz
and
sub
ret
sbb
push
mov
ljmp
xlat
cmp
scas
sub
xchg
xchg
enter
movsl
loopne
xchg
jecxz
cmc
adc
xchg
push
inc
jns
and
jo
rclb
sub
daa
movsl
add
dec
mov
jecxz
repnz
mov
add
inc
movsb
lods
mov
std
div
arpl
mov
shl
xchg
push
pop
int
dec
push
sub
clc
ja
sub
movsl
or
mov
mov
pop
or
fwait
data16
insb
pop
ljmp
fmull
push
out
cmp
and
inc
jge
addr16
inc
pusha
ror
mov
fists
mov
dec
sti
jecxz
lret
xor
dec
ja
decb
pop
mov
lcall
add
push
psubusb
cwtl
pop
addr16
or
mov
aas
out
int
sbb
lock
adc
loope
pop
ljmp
inc
jmp
inc
and
fidivrl
lods
bound
push
adc
insb
jl
popf
mov
xor
add
loop
lea
pop
push
loop
sub
lret
add
jmp
adc
jns
dec
cld
scas
scas
fmul
jecxz
add
gs
sub
movsb
inc
pop
push
fsubr
popa
and
jae
jl
shrl
add
bound
subb
mov
fmull
lds
test
push
je
out
and
nop
int3
imul
mov
or
xor
fldt
pop
push
sub
movhps
dec
push
adc
arpl
in
jbe
cmp
test
jle
shrl
cmp
scas
arpl
aad
shrl
pop
rcrb
pop
xchg
js
inc
inc
mov
cli
mov
xchg
mov
inc
lock
rcll
cmp
in
or
sub
and
cmpsb
stc
ds
leave
xchg
or
daa
sarb
add
clc
pushl
xlat
push
les
cmc
push
sbb
inc
cld
and
adc
push
mov
inc
add
loop
out
sti
loope
xchg
xor
push
iret
push
push
dec
in
lods
adc
mov
xor
fisttpll
add
in
scas
pop
ja
bound
aaa
in
popa
cmpsl
adc
jo
sbb
rcll
adc
add
bound
outsl
inc
xor
cmp
pop
sbb
outsb
sarl
pop
pop
push
mov
inc
mov
out
ss
lcall
jae
mov
and
test
lods
sbb
mov
cwtl
push
lret
hlt
sbb
jmp
shlb
push
ja
jp
test
mov
mov
das
mov
mov
xchg
inc
add
mov
xor
cltd
lea
mov
jbe
fisttpl
sub
push
popa
rolb
movsl
in
or
pop
inc
shll
adc
mov
mov
cmp
cmpsl
sti
sahf
pushl
xchg
or
enter
popa
cwtl
push
clc
andb
or
gs
xor
out
xor
xor
je
in
mov
pop
xor
add
ljmp
adc
sahf
xor
sahf
pop
enter
jbe
imul
mov
xchg
dec
loop
mov
pop
cmpsl
xchg
xchg
adc
orl
rcr
dec
repz
cmp
xchg
je
mov
add
mov
mov
jp
scas
add
or
xlat
mov
hlt
jnp
xchg
repz
xor
sub
repz
cmp
out
pop
mov
pop
jge
push
mov
aad
xchg
or
cld
adc
out
push
movsl
mov
jmp
or
push
je
dec
sbb
xlat
fwait
xchg
stos
in
pop
fstps
push
mov
adc
iret
or
hlt
js
mov
sub
or
aad
fldenv
insb
iret
lods
ja
cmp
ret
jo
lock
in
mov
pop
cmp
push
push
daa
pop
movsb
sti
subl
add
lcall
xchg
in
inc
mov
fcmovb
into
xchg
int
adc
lcall
pop
jbe
inc
push
mov
dec
sar
adc
jecxz
lahf
jge
push
pop
push
sbb
ljmp
iret
sar
mov
cmc
in
jae
movsb
inc
lods
cli
push
pop
fists
cmp
movsb
scas
cmc
fnstsw
stc
jmp
movsb
mov
jne
aaa
pusha
es
lahf
pusha
jmp
jecxz
add
aas
add
mov
data16
add
dec
loopne
out
dec
jbe
outsl
mov
dec
inc
fidivs
add
pop
test
cli
stos
push
aas
pop
xor
fldcw
or
ljmp
and
and
repz
jge
pop
add
xor
inc
mov
loope
cmpsb
xor
repnz
add
ds
lods
push
int3
or
sub
jge
iret
repz
sub
popf
adc
pop
or
popa
scas
lahf
mov
lea
add
loopne
push
xor
push
xchg
loope
push
loop
sub
fisubrs
push
mov
dec
adc
je
pop
mov
lods
dec
cmp
pop
lcall
ret
int3
fstpl
jns
shl
push
add
mov
or
xchg
cmpsl
shlb
ficomps
test
pop
fisttpl
shrl
adc
dec
or
jbe
scas
sbb
nop
movsl
add
mov
sti
mov
shrb
fnstsw
push
addr16
sbb
xlat
or
push
mov
test
mov
jno
lret
cs
push
pusha
nop
adc
cmp
xor
push
test
stc
dec
push
dec
add
push
addl
cwtl
push
sub
add
xor
sbb
arpl
fwait
clc
add
xor
sbb
aad
lea
inc
sub
push
xor
repnz
orl
push
push
dec
sbb
pop
fcmovb
jmp
hlt
mov
call
inc
mov
push
stos
xor
rcrl
arpl
xchg
jno
fisttpl
mov
inc
insb
dec
xchg
cmp
lahf
test
jo
sbb
fucom
addr16
jecxz
imul
pop
and
jne
cmc
scas
jmp
test
rcrl
les
xchg
mov
pop
inc
ljmp
cmp
roll
pop
je
inc
pop
orl
xor
jb
fisttpll
jecxz
fadd
pop
push
pop
insl
sar
dec
mov
xchg
or
fiaddl
clc
int3
int
in
shll
dec
pop
pusha
pop
cmp
push
pushf
iret
in
inc
xchg
mov
rorb
mov
jp
jmp
jb
neg
pop
jb
sbb
mov
push
inc
dec
pop
loopne
push
cltd
rolb
sub
or
adc
ss
pop
pop
jle
fst
pop
adc
cmpsl
adc
dec
adc
mov
into
lods
mov
js
mov
pop
ljmp
dec
add
inc
cmpsb
outsb
mov
stos
into
mov
inc
jecxz
push
shll
stc
mov
ret
dec
insl
fwait
jo
ja
nop
rorb
adc
rol
pop
xchg
push
mov
mov
push
push
and
mov
out
in
subb
pusha
xor
inc
iret
mov
pop
insl
xchg
nop
ljmp
mov
lea
xchg
movsl
dec
subb
push
and
xchg
or
cltd
into
mov
idivb
cmc
ss
or
xchg
inc
mov
enter
mov
xchg
ficomps
negl
and
inc
insl
jmp
mov
mov
push
jle
loopne
cmp
ja
std
lods
test
jo
sbb
xchg
nop
je
cmp
rorl
adc
jp
shl
jno
enter
shlb
mov
xor
cli
test
int
mov
push
stos
push
adc
in
cmp
das
gs
mov
scas
das
lds
lock
mov
std
out
sub
dec
out
cmp
jecxz
mov
aam
in
in
or
in
jnp
sub
push
popa
xor
outsb
pop
mov
dec
repz
loope
shlb
out
cltd
sbbb
add
faddl
out
push
sbb
in
imul
cs
test
push
movsb
sub
rcrb
jb,pt
dec
rol
dec
push
dec
filds
leave
dec
xchg
xchg
iret
sbb
cs
arpl
mov
adc
out
leave
xor
xor
aad
dec
dec
repz
ds
mov
sbb
sbb
test
sbb
cltd
fnstcw
lea
sub
repz
jns
mov
xor
dec
mov
pop
sub
sbb
leave
xchg
add
pushf
and
or
push
out
jecxz
xor
xchg
push
out
adc
mov
jb
mov
pop
fwait
ja
pop
push
mov
gs
and
aaa
xchg
call
push
subb
mov
cltd
lods
sbb
dec
lea
ljmp
lret
sbb
cmpsb
aad
cmp
mov
mov
mov
mov
xchg
repz
enter
ret
or
mov
pop
sub
jno
push
sub
xor
leave
ret
daa
or
movsl
xor
jo,pt
inc
sbb
ret
mov
sub
dec
daa
push
inc
push
xchg
jmp
sub
aam
sub
mov
cmp
lock
pop
insl
clc
add
jbe
out
jae
sub
sub
les
ds
push
mov
or
test
scas
sbb
mov
addb
jae
fidivl
or
jmp
add
xor
cltd
push
adc
stc
sbb
test
mov
xor
ret
into
lods
inc
bound
jbe
mov
or
pop
aad
nopl
in
dec
push
popf
ret
icebp
mov
sub
inc
push
shl
jmp
pushf
enter
adc
cmp
pop
sub
ret
add
push
add
mov
data16
sbb
insl
xchg
pop
pusha
fwait
std
dec
pop
test
cli
in
loope
xchg
push
mov
ss
mov
lahf
fcoms
pop
mov
out
mov
sub
push
ljmp
lds
add
and
daa
inc
dec
cmp
dec
xor
xor
data16
sbb
inc
repnz
movsb
ret
push
xor
rcr
pop
cmc
aam
cmp
pusha
sub
push
push
aas
or
pop
popa
shll
hlt
push
rcll
pop
mov
fcom
fwait
xchg
xor
mov
push
fldl
jne
in
fdivrp
mov
and
pop
clc
mov
adc
lcall
add
mov
popf
push
lret
pop
std
push
mov
pop
stc
clc
icebp
aas
in
scas
addr16
xor
ljmp
or
int3
and
jecxz
mov
into
sbb
fisttpl
roll
fidivrs
adc
popa
and
xor
popf
nop
cmp
daa
jmp
jns,pt
call
popa
subl
push
pop
adc
push
rolb
cmp
or
mov
jmp
pop
mov
bound
cmp
rol
out
cmp
jle
je
xchg
lcall
jg
cld
test
in
dec
mov
mov
lods
hlt
pop
lds
adc
scas
dec
fildll
js
or
jb
jns
repnz
or
sub
jo
rcrl
or
inc
xor
pop
push
inc
xchg
jecxz
test
out
mov
push
cmp
fcompl
enter
rcrb
cmp
shrl
or
jle
add
iret
mov
sub
rol
nop
cmp
xchg
mov
adc
xlat
lods
pop
stc
mov
xor
sbb
repnz
and
into
dec
lret
mov
adc
scas
pop
xchg
ficomps
dec
jne
mov
push
imul
xchg
inc
fwait
out
inc
push
inc
subl
xchg
add
rcll
aas
sbb
jo
ja
xchg
popf
sub
sub
mov
sti
mov
in
mov
mov
jmp
mov
in
rcrl
bound
pusha
xchg
xchg
bnd
mov
scas
in
fcmovb
lds
push
idiv
xor
popf
addr16
jle
test
mov
icebp
cld
mov
mov
inc
jbe
loopne
or
mov
mov
push
push
jno
js
and
ds
fisttpll
out
pop
rdtsc
inc
sbb
popa
cmpsb
lea
sbb
dec
ds
xchg
sti
test
out
in
and
push
imul
lods
lock
pop
les
xor
xor
lahf
imul
jecxz
pop
ja
add
call
mov
xchg
rclb
sarl
ljmp
sub
xchg
lret
cmpsb
mov
adc
inc
push
arpl
push
std
add
jmp
or
dec
or
subb
or
inc
sub
mov
repnz
jns
inc
adc
icebp
pop
push
xor
jne
lock
add
mov
adc
adc
mov
and
xor
ss
mov
inc
sub
inc
add
clc
lods
addr16
and
jo
rcl
pop
cld
mov
rcll
push
mov
mov
nop
es
adc
aaa
arpl
clc
jne
or
leave
cmp
pushl
adc
lods
mov
imul
mov
xchg
aas
sub
pop
xor
pop
popa
jmp
imul
ret
in
loope
sbb
push
push
int
adc
ja
ret
lock
je
bound
into
mov
loope
push
loope
test
stos
adc
flds
sbb
jmp
lods
outsb
outsb
xchg
loope
jle
jb
mov
mov
xor
sub
pushaw
jge
mov
mov
ja
outsl
cmpsb
mov
mov
lods
data16
fwait
or
out
outsl
les
mov
fucomi
mov
or
sbb
ja
dec
jge
push
into
mov
in
ret
push
or
mov
das
cmc
mov
dec
push
sbbl
enter
fdivrl
mov
rorl
fsub
decl
in
nop
enter
sub
mov
cwtl
jle
aas
dec
lcall
pushf
cli
popf
xchg
inc
jg
adc
xchg
inc
push
xchg
push
das
mov
mov
out
adc
cmovns
movsl
loopne
ja
nop
xchg
mov
and
icebp
and
inc
push
fildll
loop
addl
jb
leave
jno
or
roll
mov
aas
cltd
xor
pop
dec
fcoms
pop
lea
pusha
mov
push
sarb
movl
pop
cmp
fnsave
dec
pop
loop
repz
iret
cmpsl
push
orb
gs
nop
pop
adc
rorl
mov
mov
movsb
aas
mov
adc
inc
in
leave
shlb
divb
rolb
or
push
imul
sub
and
imul
rcl
xchg
shll
mov
outsb
loope
add
mov
mov
mov
mov
lds
push
jae
lock
lds
push
iret
addr16
mov
sbb
push
xchg
lret
dec
jl
aaa
dec
sbb
inc
rcll
adc
jne
popf
repz
fcomps
or
mov
rcl
cmpsb
fdivl
bound
rcr
out
lahf
sti
and
and
xchg
sub
pop
cmp
enter
mov
cmpsl
sbb
lret
push
xchg
addl
add
xchg
adc
mov
mov
adc
ljmp
inc
sbb
xchg
test
data16
and
stos
inc
insb
addr16
or
mov
in
lahf
shl
aas
mov
push
div
push
pop
lahf
xor
cwtl
mov
or
adcl
xchg
fwait
jle
fxtract
out
test
sub
sbb
or
push
shrl
jle
jge
adc
gs
les
daa
pushf
dec
xchg
jecxz
xor
sbb
insb
scas
imul
enter
out
cmp
int
cmp
inc
fwait
inc
movsb
cld
ret
inc
int
ror
mov
or
jmp
cmpsl
popa
cmp
loope
outsb
xchg
or
xchg
pop
sub
xchg
cmp
mov
fsubrl
sub
iret
and
mov
xor
lcall
into
dec
das
pushf
adc
fsubl
cld
loope
push
scas
pop
or
jns
inc
xchg
lahf
and
xor
mov
in
ficoml
jg
and
es
push
enter
stc
dec
cmp
add
adc
or
mov
xorl
xchg
repz
add
in
aam
jecxz
mov
gs
js
in
sti
jbe
jne
and
nop
push
roll
push
iret
out
int
or
push
inc
push
push
mov
ficompl
and
xchg
popf
je
or
push
xchg
and
add
rorb
cli
inc
inc
loopne
js
inc
lods
add
cmp
inc
push
lds
mov
cld
stc
out
stc
movsl
mov
outsl
arpl
aaa
pop
rcr
jecxz
jp
lods
mov
out
js
mov
xor
jo
mov
inc
adc
inc
xchg
aad
js
stos
lods
fdivrs
jno
fcomip
test
out
lret
daa
sarl
loope
xor
ss
xchg
mov
lea
int3
jmp
dec
or
or
mov
mov
dec
loope
xchg
dec
mov
outsb
nop
dec
mov
dec
pop
sbb
mov
jge
jp
cmp
cmp
pushf
iret
popf
das
rorb
mov
shll
dec
or
inc
mov
mov
mov
mov
pop
pushf
imul
xor
lret
lret
jbe
ret
dec
xchg
sar
test
xor
adc
jnp
pop
outsb
fistl
loopne
stos
insl
or
stc
push
xor
mov
fbstp
push
jnp
cld
rolb
ljmp
stc
call
push
inc
pop
mov
scas
push
xchg
jle
or
mov
and
push
int
sub
repz
xlat
ljmp
adc
xchg
aas
sbb
jne
mull
mov
add
pusha
or
inc
cmc
rorb
aam
cwtl
mov
jmp
loopne
fs
hlt
sbb
aad
cmp
xor
jns
cmp
insl
pop
push
push
scas
and
test
es
popf
cmc
jge
into
jb
mov
aas
popa
outsl
or
je
scas
pusha
jge
inc
mov
das
daa
push
stos
mov
adc
ret
push
jl
mov
xchg
les
popa
fldt
dec
mov
shl
call
mov
aad
dec
out
or
iret
dec
into
dec
std
xor
jb
les
sub
xchg
xchg
and
sbb
push
js
in
dec
out
aaa
dec
ss
sub
pushf
test
mov
push
xor
jbe
or
sbb
ja
add
pop
sbb
mov
inc
and
das
fcoms
cmp
rcll
sbb
cs
dec
shlb
cs
xorl
inc
ret
adc
and
mov
in
aas
mov
mov
xchg
sbb
pop
adc
nop
jo
cmp
adc
mov
xchg
inc
daa
push
mov
rsm
dec
popa
aaa
or
in
jecxz
pusha
scas
and
mov
inc
pop
sahf
cmpsb
jo
ja
mov
insl
or
mov
adc
stos
fs
lods
push
mov
add
or
fdiv
fs
enter
sub
jp
adc
fidivs
sbb
cmpb
fdivrs
sub
pop
mov
add
or
loope
pop
mov
clc
ljmp
adc
and
sbb
adc
mov
jne
out
or
xor
in
mov
jp
sbb
xorl
ss
jns
xchg
inc
pusha
leave
or
mov
enter
rcrl
add
loop
mov
fadd
ljmp
jbe
push
dec
call
sbb
dec
ljmp
jl
push
adc
jne
popa
pop
add
mov
dec
int3
stos
movsl
jne
je
lret
add
ljmp
popf
and
inc
pusha
add
mov
clc
pop
stos
popf
ljmp
fisttpll
mov
mov
loopw
aaa
lods
out
push
sahf
insb
cmp
mov
rorb
adc
imul
movsl
fucom
rcll
rcrl
mov
fldl
repz
inc
push
inc
jne
into
xchg
adc
outsl
jmp
or
gs
test
outsl
aam
mov
shrb
inc
sub
mov
aad
jae
push
cmp
jno
cmp
repnz
cltd
or
cmp
mov
cmc
jmp
mov
lea
mov
rcll
xchg
rorb
mov
and
push
jg
jge
mov
mov
inc
out
cmp
js
sbb
pop
clc
js
gs
fisubl
cmc
sub
arpl
add
cltd
sbb
inc
popf
xchg
fsub
rorb
stc
stc
xor
fmuls
es
add
mov
and
mov
jne
ret
pop
fwait
and
pushf
or
and
cmpb
daa
adc
inc
ljmp
mov
xor
xor
jmp
and
mov
dec
stos
push
push
mov
pop
pop
xor
mov
push
add
cmp
and
xlat
pop
in
and
dec
clc
fimuls
add
pop
mov
xchg
sbb
adc
dec
mov
jae
xchg
pop
dec
mov
scas
jnp
data16
push
mov
inc
adc
rclb
out
mov
push
inc
jns
mov
mov
in
bnd
je
jne
jle
adc
pop
fdiv
or
in
scas
clc
aad
js
scas
jg
pop
mov
shll
inc
mov
pop
movsb
cs
rorb
sar
stos
out
push
cwtl
fisttpll
cli
cmp
icebp
movsb
sahf
into
mov
sbb
rol
lock
scas
ds
insb
sbb
jle
loope
pop
mov
negb
mov
in
push
mov
push
hlt
ffree
bound
inc
cmp
add
or
insl
dec
adc
push
dec
pop
push
lret
jno
out
insl
fdivs
inc
in
push
mov
movsb
int3
repnz
xchg
cld
cmp
push
adc
sbb
cmp
and
add
rcrl
repnz
mov
mov
in
dec
push
aaa
add
call
sbb
stc
sbb
in
hlt
data16
jns
cmp
xchg
and
pop
dec
bound
stos
xchg
out
sbb
mov
adc
or
jb
dec
dec
hlt
cs
push
add
inc
and
jmp
xchg
fldenv
or
cmp
fwait
sti
jmp
jbe
push
insb
stc
xadd
stc
sti
cwtl
pop
or
xlat
dec
inc
outsb
popf
lods
jle
stc
fsubrl
pop
jle
or
rcrl
fsubl
shll
jl
push
mov
clc
repnz
jecxz
sub
int3
pop
test
std
in
inc
sbb
inc
sub
pop
fsubs
push
mov
iret
push
inc
dec
and
pop
inc
out
in
xor
sbb
fiaddl
pop
mov
pushf
js
fs
rorl
andb
out
sub
mov
movsl
enter
test
dec
repz
sti
jp
inc
sbbb
adc
sub
mov
int
int3
add
das
xor
setge
clc
pop
fidivrs
jmp
push
pop
mov
lret
inc
mov
mov
adc
stc
xor
dec
and
lret
push
imull
cmp
stos
lcall
pop
and
mov
movsl
loopne
aad
aaa
pop
sbb
adc
push
sbb
xlat
ja
lds
sub
jns
movsl
xorb
push
xlat
mov
fisttpl
fs
loope
mov
jge
cwtl
sbbl
mov
andb
xchg
pop
xor
mov
mov
mov
adc
into
jns
int
pusha
fisubrl
cmp
mov
divl
mov
movsl
adc
sbb
push
dec
mov
in
jne
push
repnz
cli
insl
stc
sub
xchg
out
cmpsl
sub
hlt
push
cmp
fxch
aaa
dec
daa
jl
and
mov
jp
dec
inc
pop
test
mov
sahf
stos
or
js
sub
outsb
jge
imull
insl
push
inc
dec
data16
sbb
hlt
pushf
repz
pusha
adc
push
xchg
xor
and
out
test
idivb
es
pop
mov
inc
mov
ds
push
jnp
or
add
push
rorb
xchg
lret
adc
mov
mov
xchg
xchg
mov
jmp
mov
mov
enter
pushf
pushf
fs
stc
xor
adc
insl
int3
std
or
mov
int3
addr16
ljmp
movsb
push
push
and
cmc
rolb
inc
add
in
mov
push
mov
mov
xchg
adc
enter
orb
xchg
cld
adc
jo
stos
out
sbb
mov
je
sahf
in
xchg
mov
jnp
jge
lcall
inc
and
xchg
or
push
shll
cltd
jno
dec
cmc
dec
mov
and
inc
loopne
fdivl
cs
xor
fs
rcrb
jo
dec
sahf
loop
xor
stos
jle
into
add
inc
mov
push
out
movsl
fwait
jp
xchg
push
out
or
lods
dec
jb
xor
and
push
jo
insl
mov
mov
lea
lahf
out
pusha
mov
xor
or
mov
ja
sbb
lods
stos
aad
mov
mov
pop
lds
push
mov
add
dec
cmp
addr16
sti
and
jb
mov
cwtl
adc
je
cmp
gs
sbb
shlb
sub
inc
outsb
cmp
dec
pop
xchg
mov
and
xor
dec
fsubl
repnz
dec
mov
das
aad
lcall
fs
pop
xor
popa
iret
push
mov
pop
fists
mov
mov
sbb
mov
xchg
gs
push
popa
inc
lods
out
xor
test
pushf
fisubs
push
mov
adc
push
loop
dec
pop
adc
std
sub
jns
adc
or
sarb
xchg
push
sbb
add
add
dec
jae
add
lds
inc
pusha
pusha
xchg
mov
push
popa
popa
pop
jge
jae
jl
mov
repz
jbe
add
mov
jecxz
movl
dec
fwait
mov
and
dec
fs
test
lods
jnp
jns
xor
mov
xor
sbb
out
pop
add
cmpsb
xchg
xor
out
push
xchg
push
shrb
sub
add
daa
xlat
popa
fs
hlt
xor
arpl
jl
arpl
or
daa
xchg
lahf
lcall
mov
mov
cmc
dec
rcr
jecxz
inc
fcomi
sbb
sub
inc
ret
fwait
add
mov
insl
sub
sub
and
mov
push
outsl
and
pop
in
rcrl
test
jmp
sbb
notl
jg
ret
rcrb
sub
daa
je
into
inc
mov
xor
mov
xchg
repz
cli
repz
in
xchg
int3
or
mov
xor
jmp
xchg
push
cmp
add
ret
jne
adc
push
xchg
shlb
or
adc
js
dec
in
jle
imul
push
mov
push
arpl
add
out
adc
inc
inc
in
xchg
xchg
data16
push
pop
inc
mov
stos
lods
mov
mov
mov
movb
aad
nop
xchg
xlat
call
lahf
call
out
xor
pop
es
push
mov
mov
jb
mov
dec
aaa
inc
sbb
fs
or
or
cmp
repz
ljmp
add
mov
pushf
insl
nop
and
js
push
mov
jg
repz
js
inc
mov
jle
pushf
outsb
fs
cmp
xchg
inc
addl
xchg
inc
test
shrl
xchg
popf
in
inc
scas
loope
cmp
xor
bound
popa
mov
xlat
dec
adc
jne
xor
test
pop
test
mov
scas
cmpsb
fcoml
sbb
iret
arpl
push
fldl
btc
repnz
mov
jge,pn
adc
sahf
rorb
dec
call
idivb
mov
dec
jno
xor
push
pop
out
lret
ret
push
fcmovne
testb
push
pop
pop
ret
fnsave
out
out
xchg
orl
leave
and
es
pop
cmp
lods
jg
fwait
push
inc
roll
mov
js
adc
ja
mov
int
out
repnz
cmpsl
mov
jl
mov
xor
sub
arpl
jmp
fdivr
dec
dec
push
insl
cli
sub
jb
pop
out
clc
and
inc
mov
cmc
xchg
push
enter
sbb
imul
in
dec
add
enter
fistpll
mov
sbb
cwtl
imul
jb
jge
push
xor
pop
das
into
mov
sub
cli
jbe
xor
inc
sub
shl
inc
mov
rolb
jecxz
pop
mov
scas
je
add
cmp
mov
negl
sub
mov
mov
xchg
xchg
jae
int
mov
xchg
jecxz
test
mov
or
sub
jbe
in
fidivl
pushf
inc
mov
sbb
cli
sbb
dec
std
pop
and
xchg
and
mov
dec
and
loopne
cltd
test
loope
cmpl
je
xchg
xchg
jmp
mov
push
aad
stos
inc
insl
ja
mov
je
lds
dec
pop
test
test
or
mov
call
jmp
push
idiv
cmpsl
adc
insb
pop
lds
lcall
test
je
sahf
push
outsb
xchg
push
arpl
jmp
push
es
and
imul
in
in
inc
lods
in
push
ret
adc
cmpsl
cmp
pop
push
popa
push
inc
test
and
sbb
cmpsb
mov
inc
insb
mov
mov
dec
rorb
dec
aaa
push
cmp
sbb
shrb
lds
jnp
mul
loopne
mov
stos
mov
pushf
push
push
mov
out
ss
xor
xor
xchg
xchg
dec
add
outsl
mov
call
outsl
inc
in
jle
mov
mov
mov
xchg
roll
ret
cmpsl
out
cltd
and
xor
dec
enter
inc
jmp
test
push
or
out
push
test
lods
cltd
cmp
push
push
fcoms
hlt
outsl
rorb
jbe
inc
test
addb
gs
in
inc
sub
in
inc
xchg
popf
in
into
and
mov
cmpsb
test
mov
push
mov
daa
insb
xlat
sub
pop
adc
mov
xchg
sahf
add
outsl
outsl
or
xchg
addr16
cmpb
cwtl
dec
xor
push
or
lock
adc
fcomp
or
das
pop
test
sahf
cli
mov
imul
jge
add
and
jmp
pop
dec
or
mov
mov
std
mov
mov
clc
cmp
push
or
pushf
pusha
xor
xchg
and
mov
gs
ljmp
and
xor
mov
xchg
mov
sbb
push
jl
sub
and
std
flds
sbb
mov
jle
out
cld
lock
cld
mov
shll
ja
ret
mov
std
push
arpl
icebp
jg
int3
mov
lret
aaa
cmp
mov
sbb
jg
jl
nop
adc
les
or
push
andb
jmp
scas
andb
inc
add
push
aad
cmp
mov
cld
pop
repz
xchg
and
insb
mov
pop
sub
int
xchg
inc
sub
xor
fisubrs
in
fs
lea
fistpll
adc
pop
dec
pop
xorl
sub
sahf
mov
daa
cmp
leave
push
imul
cmpsb
mov
mov
fcoms
out
push
dec
scas
in
sbb
sbb
outsb
jae
filds
mov
mov
das
in
in
cld
sbb
jo
push
stos
inc
cs
stc
ja
xchg
cmp
aad
out
cltd
add
movsb
test
push
cmp
shl
movsb
cmp
sbb
lods
sub
xchg
test
out
sti
adc
cmp
cmpsl
push
rcrl
pop
cmp
les
xor
loopne
or
lods
mov
adc
shrb
sub
sar
or
das
pop
cli
or
sahf
mov
movsb
mov
shr
jp
dec
mov
int3
das
test
das
hlt
pop
pop
xor
out
add
lds
xor
out
gs
dec
jb
inc
std
es
jp
in
mov
lock
cmp
pop
pop
adc
add
int3
sarl
test
imulb
pop
inc
mov
dec
lret
push
push
nop
inc
add
fwait
xor
push
test
push
or
dec
daa
cmp
in
mov
ret
test
cld
add
fdiv
filds
pushf
mov
movsl
icebp
sahf
mov
jbe
cmp
adc
movsb
pop
xlat
fsubrl
cltd
addr16
insl
dec
sbb
inc
stos
xchg
push
test
push
add
and
into
mov
xchg
dec
loope
icebp
mov
sub
jge
push
in
test
imul
inc
fisubrl
mov
mov
iret
nop
es
and
sub
jg
pop
sti
and
xchg
add
pop
popa
sub
cmp
lcall
mov
or
xchg
test
jp
daa
jecxz
shlb
mov
repnz
jl
and
pop
outsl
movsb
xor
inc
lahf
decl
sbb
mov
xchg
test
mov
mov
jne
or
hlt
lret
data16
sub
xor
decb
stc
jecxz
addr16
mov
push
subl
fildll
dec
movsb
je
push
sub
test
loope
sbbb
mov
xchg
ljmp
scas
mov
mov
rclb
ret
aaa
mov
mov
xor
push
sbb
sub
test
popa
cwtl
in
inc
xor
mov
mov
adc
in
push
push
sub
fsubp
pop
push
aam
sub
mov
mov
and
xor
adc
xchg
mov
sub
cmpb
push
cmp
sarb
out
cld
std
cmp
pop
mov
xor
scas
out
je
test
pop
xchg
mov
mov
and
in
ljmp
test
int3
daa
jp
add
sub
or
lea
mov
daa
andb
popa
sbbl
js
and
pushf
movsb
cmpsb
lcall
pusha
xchg
jle
jb
lea
or
mov
insl
xchg
cmpsb
add
cmpsb
dec
cmpsl
jns
enter
push
jbe
imul
inc
shl
dec
sub
lods
loop
push
or
mov
fucom
sub
scas
sub
into
and
xchg
arpl
in
xlat
lds
sbb
mov
arpl
decb
xor
mov
lods
ss
roll
inc
lret
jb
std
mov
mov
lock
dec
add
or
add
sub
add
arpl
pop
mov
and
outsl
dec
jo
data16
pop
sub
out
loopne
xchg
dec
std
cli
rcr
lret
jl
add
movsl
ljmp
imulb
jo
xchg
shll
std
in
sbb
lea
or
ds
outsb
pop
xor
mov
fcmovnbe
pop
js
pop
dec
sbb
dec
mov
out
jae
dec
lea
test
cmc
insl
jae
rcrb
add
mov
pop
sar
inc
out
shrl
pusha
sub
pushl
push
xor
xchg
orb
add
xchg
cmpsb
pop
xchg
inc
dec
sub
sub
rcll
pop
in
or
repz
fwait
pop
and
push
fxtract
adc
cltd
push
in
xchg
lret
test
aad
push
imul
jmp
enter
and
inc
mov
sar
fstpt
pusha
mov
nop
loop
jns
cmp
push
in
loope
inc
cmp
fsubp
sbb
cltd
lret
sti
addr16
cmp
les
std
or
addl
cwtl
mov
mov
imul
mov
fsts
in
pop
incl
negb
aaa
loope
inc
pop
lret
mov
cmpsl
jge
lea
mov
jmp
rcrl
xchg
fsubs
outsl
rcrb
and
jns
and
pop
sbb
mov
stos
adc
test
insb
adc
sbb
adc
into
leave
sbb
movsl
or
test
idiv
test
test
imul
ds
mov
lock
inc
repz
push
cmp
inc
subl
sub
mov
xor
outsb
ljmp
or
popa
pop
shl
xor
cmpsl
icebp
js
jns
sbb
cs
mov
push
nop
bound
sarb
outsl
ret
pushw
mov
cmp
jo
mov
pop
dec
test
out
or
adc
cmp
jae
enter
pop
mov
mov
jmp
sub
mov
std
lcall
and
add
and
xor
xor
aad
lods
mov
jmp
pop
sbb
inc
out
nop
jmp
sub
cmpb
pop
or
sbb
in
test
dec
cli
sbb
cwtl
iret
push
test
inc
mov
nop
mov
cmc
out
add
sub
mov
mov
outsl
xor
jle
sbb
cmpsb
add
mov
mov
mov
loop
cmp
insb
icebp
sbb
fnstcw
fs
divb
mov
je
push
inc
addr16
push
repz
cmp
xor
mov
loopew
or
jae
ret
adc
xchg
ss
push
hlt
mov
movsl
cs
test
mov
bound
adc
sub
and
dec
repz
sub
ficomps
cmc
push
fsts
sbb
or
jmp
push
cmpsb
xchg
dec
shll
enter
popa
mov
pop
cmp
mov
mov
mov
xchg
andl
and
int
aaa
push
mov
scas
mov
fmull
into
sbbb
mov
xor
pop
and
push
cmpsb
rcrl
test
loope
jg
fimuls
or
sbb
mov
andb
rclb
cmp
hlt
loop
xchg
out
rcl
stos
sbb
or
stos
scas
dec
popa
push
mov
sub
gs
loopne
or
pop
sbb
addr16
cmp
dec
roll
ja
loopne
rclb
js
stc
popf
ficoml
push
xchg
sub
icebp
adc
ficompl
push
mov
out
sbbl
or
pop
sub
icebp
add
repnz
and
push
inc
sti
jns
xchg
sbb
inc
leave
jecxz
stos
sahf
out
je
pop
aad
lods
jle
xor
iret
fwait
or
jle
clc
in
mov
xchg
test
cwtl
push
in
shl
pop
cmpl
sbb
addr16
inc
pop
mov
adc
je
loope
mov
xchg
push
pop
pop
bound
aam
mov
cli
jl
adc
mov
adc
add
mov
out
xchg
jne
outsl
ret
fwait
out
xorl
and
stc
push
and
cmpsb
test
loope
ljmp
negl
jo
outsb
mov
xchg
dec
pop
mov
sbb
and
cld
cli
xchg
jge
aam
or
mov
mov
nop
in
mov
repz
mov
push
int3
sbb
stc
iret
xchg
aam
jmp
pop
movups
mov
pop
xchg
fmulp
mov
sbb
jne
xchg
outsb
push
test
in
out
icebp
adc
jle
leave
mov
mov
insb
jg
aas
insl
bound
or
add
imul
xchg
outsl
lea
mov
loope
ljmp
aad
ret
fmuls
lds
in
xlat
add
mov
push
push
xor
stos
js
push
push
in
std
in
xchg
shlb
jns
flds
or
les
cmp
dec
or
lahf
and
xor
in
mov
push
sti
loop
pop
loopne
sahf
cld
mov
mov
add
xchg
mov
pop
inc
mov
and
xor
jp
mov
lods
adc
andb
jge
das
mov
lock
add
aaa
xor
cmc
or
les
lahf
adc
sbb
movsb
sub
mov
lds
bound
push
movsb
jge
leave
cld
fwait
int3
cmpsl
xchg
jo
push
movsl
out
add
sbb
in
sub
scas
cmp
mov
fmull
mov
cwtl
xlat
les
add
adc
jne
inc
or
shlb
xchg
xor
jno
frstor
mov
pop
pop
or
test
xchg
jmp
xor
pop
sahf
adc
lods
vrsqrtss
mov
into
ret
mov
mov
leave
call
shlb
pop
loop
jne
cmp
outsl
in
cmp
enter
pushl
and
aad
jae
in
mov
scas
leave
jnp
out
mov
cmpsl
cmpsb
push
inc
mov
jns
xlat
lret
or
pop
mov
fsubrl
fs
andb
cs
dec
mov
test
mov
lret
rolb
cmp
mov
lea
jg
ja
pop
fldcw
xchg
or
les
add
add
jecxz
imul
push
mov
sbb
pop
pop
pusha
adc
into
je
mov
inc
adc
mov
dec
cmp
cmp
xor
in
xor
popf
aad
jg
into
lcall
xchg
jnp
mov
jo
jmp
ret
xor
insl
outsb
movsl
dec
cmp
push
leave
and
fadds
orb
xchg
jl
sub
cltd
jmp
roll
inc
pop
test
aaa
call
mov
xchg
cltd
shll
stos
xor
test
aam
nop
adc
mov
jg
mov
push
movsl
arpl
xchg
mov
cld
daa
push
mov
push
push
lahf
rolb
jmp
rcrl
into
adc
xor
out
idivb
aam
ret
push
pusha
mov
mov
insb
add
and
inc
mov
clc
imul
out
cmp
lods
push
ss
xchg
out
sbb
mov
fbld
jb
lea
fldenv
mov
cmpsb
or
insl
les
sti
sub
pusha
icebp
hlt
pop
jns
outsl
adc
std
shl
fistpl
ret
les
or
mov
jmp
mov
sub
pop
pusha
add
adc
stc
js
cld
inc
repz
and
gs
jns
scas
push
adc
pushf
or
data16
stos
push
lock
push
mov
mov
lret
and
push
and
popf
inc
xor
int
xorw
gs
inc
enter
and
mulb
insl
out
movsb
jo
imul
jne
dec
xchg
enter
and
ss
rcll
pushf
cmp
inc
stos
in
inc
mov
and
pop
and
jnp
push
scas
arpl
mov
mov
xchg
imul
int3
push
rcrl
jbe
daa
imul
inc
pushf
lock
add
pop
cmp
cmp
fidivs
xchg
mov
dec
fnstenv
sahf
test
mov
insb
sub
aam
pop
xlat
lods
sbb
lret
and
mov
push
adc
xchg
sub
mov
test
jne
sbb
lret
movsb
mov
insb
dec
or
arpl
outsb
xchg
sarb
push
adc
fmuls
cmpsl
mov
xor
jbe
sbb
add
js
xchg
add
cmpl
rorb
mov
in
cmpsb
xchg
and
add
adc
enter
inc
xchg
xchg
hlt
lea
or
and
orl
and
mov
and
pop
lcall
pop
fsubs
sub
sub
out
dec
sarb
xor
jne
ss
mov
inc
push
mov
and
dec
sub
sub
adc
scas
ja
adc
or
leave
cmp
jno
pop
cs
jg
sbb
sub
push
jmp
push
fdivs
pusha
lret
nop
aad
dec
fisttpl
fdivp
mov
and
xchg
or
jbe
mov
add
xchg
sahf
mov
and
mov
sub
inc
lret
xlat
cmp
lods
jb
cmc
inc
test
jnp
sbb
in
popf
lahf
xlat
inc
stos
popf
lock
je
jp
add
pushl
int3
dec
imul
btc
mov
shrb
cmp
lea
popf
jp
enter
ret
cmpl
add
ljmp
jb
pop
js
das
jns
unpcklps
fcmovbe
dec
mov
ret
lret
movsl
inc
cmc
mov
adc
or
bound
lods
push
dec
adc
cmp
sub
pushf
icebp
fdivs
fildl
or
push
movsl
sub
mulb
ljmp
aaa
mov
fcomps
orb
icebp
mov
xor
push
dec
sahf
aas
sub
pop
jmp
lcall
test
in
clc
jecxz
faddl
dec
or
dec
repz
mov
or
pop
mov
mov
adc
or
add
or
mov
jg
jno
jbe
sbb
fidivs
add
xchg
cmc
xchg
jle,pt
push
test
xlat
js
shrb
andl
push
push
adc
std
lcall
out
pop
dec
adc
imul
and
test
add
lds
mov
inc
sub
mov
ret
cmp
icebp
out
data16
dec
sub
or
push
or
aad
dec
inc
stos
lds
xchg
call
mov
mov
push
in
loop
push
mov
cltd
decb
iret
das
jecxz
movsb
dec
dec
mov
loop
je
dec
imul
sbb
mov
adc
mov
pop
sbb
rcrb
and
mov
test
popf
popf
arpl
loop
pop
push
jmp
add
push
jge
sbb
inc
sub
movsl
stos
shlb
adc
out
rcr
fistpll
adc
mov
xchg
cmp
daa
jb
shll
rol
cmp
popa
test
sbb
mov
mov
push
rcrb
mov
add
pop
or
xlat
mov
mov
nop
in
mov
stc
sub
in
ret
pop
adc
mov
pop
aad
mov
hlt
lds
rcrl
dec
push
dec
mov
mov
pop
out
lret
fucomp
push
add
sub
andl
loope
and
addl
and
data16
clc
pop
adc
xor
negb
das
jg
int
and
decl
ret
and
jae
hlt
shlb
cmc
lea
xchg
pop
inc
pop
add
in
fidivs
inc
ss
leave
mov
fs
scas
scas
or
pop
xchg
rclb
fs
repz
mov
in
xchg
xchg
xchg
pop
add
cwtl
in
cmp
shl
fmuls
jmp
cmp
call
test
sub
jae
mov
nop
imul
mov
mov
pop
pop
inc
ds
lahf
in
mov
aam
push
mov
aad
stos
lcall
nop
jb
mov
jns
enter
cmp
jecxz
sbb
das
aaa
xor
xor
mov
lds
and
add
mov
mov
mov
dec
xchg
lret
mov
pop
mov
scas
int3
aad
and
xchg
xlat
test
mov
cld
lods
lret
xchg
mov
xchg
xbegin
push
jbe
mov
jmp
bound
loopne
inc
mov
popf
nop
inc
fnsave
or
sbb
jle
test
sub
inc
cltd
cltd
lcall
xchg
gs
mov
sbb
inc
jmp
sub
xchg
xorb
imul
jg
ljmp
jge
leave
dec
mov
xor
aaa
push
fsub
push
mov
push
dec
fwait
nop
mov
jp
jg
and
add
jne
push
shl
or
shrl
and
or
cmp
nop
cmpsl
push
scas
mov
jp
lods
adc
lods
ss
icebp
xor
jae
adc
bound
stos
inc
outsl
xlat
sbb
ret
in
dec
dec
mov
sub
xlat
push
sbb
cli
mov
mov
mov
cmpsl
int
jnp
nop
jbe
or
ret
shrb
popf
lods
sbb
test
xchg
xor
sub
lock
xor
jg
mov
nop
les
mov
mov
ds
inc
add
test
mov
jp
pop
ret
and
lret
add
xor
daa
pop
lcall
push
adc
movsb
into
add
insb
lock
jne
mov
pop
rep
out
ret
cltd
lods
jg
clc
and
adc
hlt
mov
xchg
loop
lcall
daa
xlat
mov
pop
dec
imul
mov
pop
negb
cmpsl
das
dec
cmp
sbb
dec
push
cmp
adc
scas
outsl
stos
popa
aas
imul
sbb
shll
cmp
in
or
repz
xor
push
repz
loope
stc
insl
neg
add
imul
mov
das
add
jae
push
jo
push
mov
push
sbbl
cmp
in
arpl
gs
jge
sbb
pop
sub
stc
icebp
daa
out
or
mov
das
test
mov
mov
dec
adc
jp
outsl
fs
xor
lods
pop
mov
enter
inc
jl
inc
jl
and
cltd
sub
ja
add
sbb
sub
loop
aad
cmp
pop
jbe
cmpsl
xchg
dec
mov
adc
adc
popa
into
pop
sarl
cmp
dec
mov
pop
xchg
sbb
sarl
mov
sub
mov
add
inc
std
pop
ret
test
fs
mov
mov
mov
sahf
mov
into
out
stc
shl
and
fwait
outsl
cmp
jno
inc
push
push
inc
sbb
test
mov
movb
rorb
arpl
sar
sub
pusha
cmc
mov
push
movsb
sbb
lret
mov
stos
inc
hlt
push
jmp
dec
adc
pop
jbe
mov
std
imul
sbb
adc
mov
in
call
jp
push
jecxz
mov
cmpsl
imul
mov
dec
popa
pop
add
push
mov
push
or
ja
jle
int
add
jns
xchg
cmp
xlat
in
shlb
mov
sub
into
dec
xchg
in
aas
xor
pop
xchg
popl
sub
inc
cmc
leave
jmp
testl
mov
xchg
scas
arpl
jecxz
sbb
pushf
adc
sbb
cmpsb
hlt
xor
sub
aaa
xor
pop
push
inc
fs
xor
add
inc
fnstcw
nop
test
cmp
lcall
pop
push
adc
mov
out
aad
pop
xchg
ret
jge
jne
repnz
jcxz
pop
insb
mov
icebp
dec
inc
lock
in
daa
push
arpl
ficoms
mov
mulb
fs
lea
shrb
xlat
sbb
popa
inc
sbb
lods
pusha
push
xor
inc
in
bnd
mov
dec
or
and
or
jae
mov
jge
lods
cmpsb
cs
mov
nop
loope
sub
clc
das
inc
jne
aad
pop
daa
sbb
jno
cmp
pop
rcrb
sub
test
pushl
push
cli
xchg
pop
cmp
jp
cmp
xchg
mov
shlb
lods
andb
imul
aam
or
dec
adc
adc
sub
pop
fcoml
subb
sbb
insb
scas
push
int
bound
enter
loope
push
jbe
sahf
sbb
push
and
nop
push
sub
mul
js
jmp
pop
popa
test
sbb
insl
lret
ja
rol
xor
xor
add
je
fisubs
jnp
push
out
std
nop
imul
push
rorb
lds
sbb
mov
cltd
fdivs
xlat
jg
add
psrld
xchg
push
mov
cs
adc
out
pop
jmp
jle
or
xchg
or
dec
jnp
pusha
iret
mov
das
inc
xor
mov
popa
cmp
mov
aam
jg
jp
jnp
popf
loope
mov
loop
jae
out
sub
xor
xor
ss
dec
push
pop
cli
out
or
frstor
ja
xchg
xchg
sbb
loop
icebp
mov
in
int3
jmp
xchg
mov
ret
push
nop
inc
lds
loopne
sbb
jo
aas
rorl
xor
scas
add
lods
cltd
dec
sub
imul
lahf
pop
add
mov
ds
fisubl
sbb
jo
mov
arpl
pop
cld
sbb
mov
and
sbb
push
jno
nop
xor
fisubrs
stc
dec
ret
push
or
fcmovnb
cmp
inc
adc
ljmp
inc
inc
cmp
iret
lods
jae
dec
lods
test
add
aam
sbb
mov
or
xchg
outsb
dec
mov
mov
inc
xor
out
mov
sbb
loopne
jmp
pusha
jp
cli
sub
jp
sub
shrl
repz
stc
mov
xor
aaa
xor
cmp
sbb
inc
pop
jno
mov
cltd
jg
sub
adc
push
lret
jne
icebp
arpl
pop
mov
adc
add
push
adc
and
ds
xor
push
mov
call
or
pushf
cmp
dec
add
xchg
xchg
push
mov
fstpt
adcb
enter
andl
sahf
jl
movsb
mov
dec
dec
mov
push
or
inc
inc
in
pop
and
mov
and
test
cmp
xor
xorl
lret
jge
lods
lahf
push
and
cmp
inc
aas
xor
mov
sbb
mov
aad
dec
pop
les
lods
sti
push
jo
xchg
in
and
js
lret
addr16
movsb
enter
push
je
mov
push
dec
rcl
andb
inc
lea
mov
add
mov
push
daa
jns
daa
dec
mov
dec
scas
pop
mov
dec
lret
jae
or
push
mov
adc
iret
mov
push
jp
jp
loop
std
outsb
aad
sub
cwtl
jno
sub
out
push
lds
and
mov
pmaxub
pop
pop
push
icebp
jmp
mov
loop
adc
cli
adc
push
ja
push
and
scas
mov
push
cmp
pop
xchg
inc
jg
dec
push
sbb
jl
mov
dec
sbb
bnd
cmc
mov
mov
andl
jnp
insb
inc
push
repnz
jp
add
sbbl
das
fstpt
inc
les
xchg
shrl
cmpsb
aam
rcr
je
mov
xchg
mov
pop
outsl
pushf
insl
icebp
xchg
or
int
lea
mov
ret
mov
mov
lds
pop
xchg
dec
sbb
mov
sub
push
ljmp
lods
int
sahf
call
ljmp
push
inc
pop
in
cmp
fwait
jle
lahf
mov
mov
imul
das
aad
subb
hlt
pop
repnz
insb
mov
mov
test
jge
je
std
push
sti
adc
nop
mov
cmpsb
jle
lock
cmc
loop
stc
sub
jge
and
js
inc
rcrl
adc
fcomps
add
outsl
xlat
sbb
out
mov
jmp
mov
jae
lods
mov
adc
cmc
mov
sub
scas
dec
cltd
pop
ret
mov
lret
pop
ds
push
popa
ficoml
int3
sti
hlt
inc
loope
xchg
call
mov
cwtl
daa
in
aas
movsl
sbb
fiaddl
sbb
cmp
out
mov
xchg
and
or
mov
stos
xorl
mov
js
pop
insb
xchg
mov
jb
call
xchg
lods
clc
pop
or
insb
into
sub
mov
scas
cmp
repnz
imul
test
mov
stos
fwait
aam
iret
enter
mov
popf
mov
xchg
jmp
addr16
pop
iret
xchg
fistl
adc
imul
fs
xor
lret
push
movsl
js
outsl
test
aas
xchg
outsb
cmp
pop
rorl
sub
lahf
pop
cmp
aam
lock
cmp
jbe
sub
cld
out
or
sub
movsl
mov
test
jmp
mov
cmpsb
push
out
iret
or
ret
repz
shll
rclb
out
mov
push
xor
add
dec
sarb
push
lock
push
inc
jne,pt
lock
pop
iret
shl
nop
mov
repnz
rcrb
inc
jnp
sbb
js
and
cmpsb
dec
out
and
dec
xor
pop
pusha
or
insl
or
inc
add
sbb
pop
or
orl
mov
adc
mov
mov
scas
mov
add
mov
pop
dec
push
mov
loop
adc
ds
or
arpl
shr
jmp
aas
pop
outsl
xchg
mov
scas
test
fisubrl
int
insl
sbb
push
mov
sbb
sbb
push
loope
cmpsb
and
adc
mov
pop
js
shll
imulb
ja
or
xor
loop
fwait
lret
stc
push
xchg
and
cmpl
dec
xchg
mov
push
pushf
sahf
sbb
punpckldq
push
out
ret
mov
inc
and
add
pushf
dec
mov
mov
stos
repz
jl
cld
push
es
sub
xor
ljmp
cmpsb
pop
sbb
push
sbbl
daa
cmp
das
xchg
jge
push
inc
dec
cltd
leave
xor
call
mov
loopne
push
jo
in
jb
and
inc
ds
int3
call
pop
rclb
cmp
add
adc
push
insl
push
mov
int3
aad
dec
add
push
js
pop
mov
and
ljmp
cmpsl
cs
test
or
xchg
pusha
test
xor
xchg
xor
or
cli
adc
sahf
out
xchg
loope
lret
imul
sub
ljmp
jmp
cmpsl
aaa
pop
ds
mov
xchg
mov
scas
pushf
jge
idivb
femms
jno
fstpl
xchg
sbb
jne
mov
fidivl
std
dec
int3
fdivl
inc
mov
clc
in
adc
pop
pop
mov
or
mov
adc
xchg
aaa
mov
push
mov
fmuls
neg
xor
jno
jmp
scas
xchg
mov
and
push
nop
sub
jo
gs
mov
mov
push
inc
insb
in
push
outsl
popf
out
mov
or
lcall
ljmp
lahf
clc
xchg
pop
inc
jl
pop
mov
and
rcrl
loop
in
sub
adc
subb
lods
pop
imul
rcrl
enter
push
jne
mov
mov
xor
push
in
push
es
pop
popa
push
shr
movsb
push
adc
jmp
dec
fcoml
andl
cmpsl
pop
mov
leave
xchg
mov
pop
out
inc
push
lret
insl
xlat
or
and
add
insb
call
adc
in
sbb
sbb
sub
jle
fnsave
cmpsl
scas
stc
orl
xor
or
cltd
dec
cmp
xchg
push
repz
xor
adc
test
xor
dec
inc
mov
ss
std
in
adc
lods
xor
dec
dec
inc
add
xchg
in
or
ret
and
in
pop
out
mov
aaa
test
sbb
ja
sub
iret
adc
mov
outsl
or
jo
push
pusha
lret
xchg
in
jmp
pop
mov
pop
in
ds
ljmp
mov
cld
out
loopne
in
aad
sbb
ds
mov
push
cmp
add
add
dec
mov
cmpsl
cmp
fisttpl
pop
sahf
inc
leave
lret
add
test
mov
ss
jge
ja
sbb
jo
lret
sub
mov
push
pop
sub
mov
lret
add
call
cmpsb
subl
ret
mov
outsl
or
push
mov
mov
mov
pushw
push
mov
cmpsb
jmp
add
std
ss
cli
push
ja
xor
push
dec
mov
jmp
ret
pushf
dec
iret
hlt
loop
xorb
xchg
push
sarl
in
repz
stc
inc
into
mov
scas
leave
rorb
icebp
rcl
mov
sub
pop
or
dec
push
add
pop
int3
fidivs
mov
stc
jecxz
mov
lret
sbb
fadds
aaa
mov
or
imul
sbb
mov
xchg
ret
ljmp
cmp
gs
or
mov
icebp
lret
ds
inc
sub
and
xor
rol
dec
fisubl
jns
xchg
push
jnp
fidivs
loopne
call
mov
stc
sbb
push
push
call
mov
xchg
call
jg
lods
scas
pop
fistl
fidivrs
lds
mov
orl
add
xlat
xor
mov
pop
inc
out
and
jl
dec
stos
popf
not
mov
mov
cmpsl
pop
mov
pop
mov
cmp
jmp
cli
mov
lahf
hlt
call
mov
push
ret
ret
push
addr16
pop
imul
xchg
jae
stos
testb
or
adc
dec
mov
movsb
pop
xchg
push
pop
mov
hlt
lahf
ds
push
testb
mov
popf
es
xlat
sbb
add
push
add
out
in
movsl
jge
popf
addr16
test
pop
fisubl
push
addr16
mov
dec
out
push
push
mov
outsl
cmp
and
xor
mov
xor
xchg
leave
pop
or
leave
je
int3
pop
xor
insb
sub
jmp
dec
stc
call
outsl
push
nop
sbb
cmp
push
or
dec
xor
std
cmp
xchg
jp
pop
sahf
std
add
test
jp
je
inc
repz
mov
cmp
cwtl
stc
add
dec
out
es
in
js
push
fldcw
jne
in
or
andl
out
cmp
xor
clc
inc
pop
mov
xchg
add
xor
sub
jns
leave
movsl
adc
and
lret
ret
ja
sub
fdivp
ret
sub
jbe
rol
mov
repnz
jmp
xor
mov
xchg
push
push
cltd
mov
fidivrs
inc
xor
in
movsl
and
daa
aas
fisubrs
bound
push
fcomi
mov
cmc
xchg
xchg
sbb
push
cmpsb
mov
inc
arpl
addb
jmp
pop
xlat
pop
cs
ljmp
mov
js
add
mov
dec
dec
xchg
jne
nop
mov
xchg
push
lret
shll
cmpsb
jno
push
mov
insb
cld
xor
in
xor
clc
aaa
jg
push
xlat
fsubr
fs
dec
lret
sub
fsubrl
push
loope
pop
inc
add
dec
push
sub
bound
fsubs
xchg
dec
enter
inc
clc
sahf
add
xor
xchg
or
adc
or
mov
adc
loope
nop
sbb
das
mov
pop
arpl
push
mov
aas
adc
push
mov
jne
shrb
outsl
inc
enter
rcrb
cld
or
fmull
enter
in
arpl
std
dec
mov
das
jb
bound
or
icebp
xchg
mov
fcomps
clc
ja
dec
dec
xor
jmp
or
sbb
dec
cmp
mov
push
adc
cli
dec
dec
cmpsl
jb
mov
push
cli
mov
mov
roll
popa
or
das
add
jg
aas
movq
mov
pop
repz
fcoms
test
xchg
cwtl
lahf
jle
sub
mov
dec
or
xor
fs
lods
add
ret
add
int
or
jb
in
xor
sbb
pop
dec
or
outsl
cs
ret
xchg
pushf
iret
pop
or
nop
aas
add
hlt
add
cmp
repz
notb
mov
movsl
insb
jg
stos
je
pop
mov
js
sbb
jbe
inc
push
xchg
xor
and
bound
stos
sbb
jb
mov
jl
sti
push
jbe
pushf
je
sub
or
adc
pop
wrmsr
test
std
or
in
sbb
sbbl
loopne
sub
cmp
jns
pop
sbb
push
jns
and
bnd
or
sbb
xor
mov
jge
mov
fwait
jne
xor
outsb
ss
push
mov
pop
into
cmp
xchg
mov
and
sti
sub
movsl
int
imul
xchg
add
push
jp
mov
inc
mov
in
or
inc
inc
mov
sub
sbb
loope
mov
mov
and
cltd
push
pop
xchg
ljmp
mov
mov
adc
pushf
sub
jnp
icebp
lret
iret
pop
bound
xchg
fs
cmc
jg
cmp
fadd
ds
vmwrite
in
xchg
sbb
loopne
lahf
fsubs
dec
fstpl
adc
es
mov
das
cltd
call
mov
pop
mov
xchg
hlt
xlat
xchg
data16
adc
sub
dec
cs
imul
cltd
ret
jg
sbb
stc
popf
push
pushf
mov
add
in
sbb
sub
pop
jnp
inc
xlat
data16
pcmpgtd
or
inc
cmp
popa
push
jge
pop
lahf
xchg
add
mov
xor
shl
jecxz
inc
or
xchg
or
shrl
rorl
lock
xchg
mov
xchg
jecxz
stos
mov
mov
add
mov
adc
lock
mov
mov
test
outsl
fldcw
pop
mov
aaa
push
sbb
fisttpl
test
push
xor
movsb
out
mov
add
out
mov
das
pop
push
lret
cmp
sahf
jmp
mov
hlt
adc
or
xchg
lods
daa
leave
mov
cld
mov
and
xlat
or
in
jge
push
into
inc
cmp
leave
shl
call
xchg
pop
or
scas
shll
lds
lcall
and
dec
pop
push
sti
fs
jno
aaa
in
sbb
scas
call
pop
das
sub
cld
mov
mov
mov
setb
scas
shrb
push
sub
aaa
test
mov
xor
daa
aad
sarl
jae
mov
add
lock
mov
inc
ss
xchg
xor
jbe
mov
mov
ljmp
jg
xchg
lods
dec
shll
add
les
das
mov
adc
and
sbb
sbbl
jbe
test
bnd
cwtl
and
gs
mov
xor
xlat
sub
jmp
inc
mov
test
enter
mov
mov
sbb
scas
mov
bound
pushf
ja
pusha
int3
pop
mov
test
negb
not
pop
adc
pop
aad
nop
or
pop
lret
aaa
clc
push
test
mov
sbb
mov
push
imul
jae
cmp
psubusb
mov
jb
iret
jg
sub
imull
ret
lcall
xor
cmp
jmp
pop
lock
cmp
fcoms
jo
adc
repz
pop
imulb
adc
or
js
popf
sbb
loope
mov
clc
dec
cmp
icebp
icebp
call
cmpsb
clc
dec
push
inc
loope
enter
test
sbb
inc
popf
in
or
pop
or
enter
outsb
mov
jecxz
jge
insb
cmp
stc
dec
xchg
je
sub
xchg
mov
hlt
out
mov
pop
jmpw
addr16
fs
insb
scas
push
push
icebp
dec
add
dec
add
sahf
sbb
lret
jne
leave
cmp
sbb
cmpsb
xchg
sub
pop
push
push
lea
rolb
fistpl
imul
xchg
jbe
in
push
in
cmp
in
mov
jo
mov
lret
out
imulb
push
mov
sub
sub
dec
push
sbb
and
mov
lret
inc
pop
ja
hlt
mov
mov
das
xchg
push
loopne
cltd
gs
xchg
cmp
adc
call
dec
jmp
jns
xorl
enter
arpl
push
xchg
fadd
pop
add
pop
or
lods
mov
sub
xchg
jbe
adc
test
pop
cmpsl
lret
loope
fs
or
call
dec
mov
cwtl
inc
dec
mov
xchg
cs
movsl
shr
mov
aas
xchg
das
aaa
rclb
sub
inc
xchg
pop
ljmp
into
sbb
or
pop
inc
jmp
push
iret
pop
gs
and
mov
adc
jmp
adc
pop
adc
cmp
and
mov
sbb
inc
popa
xchg
in
inc
pop
data16
xchg
xchg
js
mov
and
jp
push
pop
sub
sub
inc
daa
addl
sti
out
dec
xchg
and
cli
mov
cmc
insl
xchg
and
xchg
sahf
loopne
fildl
mov
bound
and
push
or
sbb
iret
mov
xchg
push
fbstp
inc
pushf
mov
fildl
cs
jge,pt
cmc
xchg
xchg
jns
loop
int
daa
inc
jbe
mov
and
scas
mov
sub
imul
in
cmp
fucomip
pop
sbb
mov
jmp
lea
adc
hlt
and
adc
jne
dec
and
push
push
xchg
outsb
mov
out
out
mov
pop
mov
ljmp
xchg
ret
sti
in
inc
jmp
subl
ret
rorl
xor
test
sub
pop
int3
repz
xchg
insb
mov
sub
pop
mov
iret
add
cmp
loopne
jo
je
inc
loope
mov
mov
adc
jg
xchg
pop
jmp
orb
shrl
jle
lret
dec
incl
jmp
dec
jo
out
repnz
test
fdivp
lret
int3
xchg
jg
scas
rclb
enter
into
lret
pop
loopne
push
adcl
jbe
lods
mov
mov
or
data16
and
shll
ret
cmp
jl
or
or
repnz
cmpl
lods
fcomps
stos
lret
pop
es
test
cld
popw
jae
mov
fwait
inc
and
lcall
sub
sub
lds
cmp
adc
mov
inc
jecxz
rcrb
repz
or
add
popa
lcall
add
gs
add
data16
jge
iret
mov
fmull
adc
pop
fs
inc
mov
daa
mov
dec
mov
mov
sbb
popa
dec
mov
nop
adc
fistpl
lods
xor
add
jno
ja
push
mov
push
pop
mov
pop
pop
dec
cmc
roll
fimuls
movsb
lcall
out
mov
pop
lock
das
mov
dec
mov
adc
frstor
pop
push
cli
dec
call
loopne
das
sbb
or
mov
idivl
push
push
pop
outsl
cli
mov
or
jbe
jge
sbb
xchg
xor
xor
jg
scas
cmp
sub
sbb
filds
adc
sub
mov
cmc
cli
in
mov
push
mov
and
lods
push
lret
mov
rcl
cmpsl
xchg
stos
push
mov
mov
sub
or
movsl
push
ja
xchg
lcall
cs
out
testl
clc
lock
add
rcr
jmp
jno
push
sbbl
xlat
xchg
sbb
push
xchg
and
sbb
xchg
xor
ljmp
jb
rol
cli
arpl
fnstenv
lods
push
insb
mov
mov
xor
jp
bound
lds
ja
inc
fs
push
enter
lahf
js
inc
or
inc
add
inc
jnp
lds
sub
cmp
setle
xchg
pop
addr16
sbb
outsb
test
adc
sub
es
fstps
fwait
loopne
jne
or
push
push
pushf
jo
daa
test
mov
shrl
jmp
and
cld
xchg
jno
fildll
sbb
xor
das
sarl
jmp
xchg
jb
add
adc
popf
sub
or
jnp
adc
or
jmp
popa
pop
daa
loope
add
fisttps
fwait
into
sub
and
lds
dec
adc
pop
dec
dec
cmpsb
xorl
enter
push
dec
les
xchg
sub
sbb
js
adc
jmp
sub
push
mov
fwait
jmp
rcl
data16
aaa
mov
bound
xchg
inc
movsl
loopne
and
lods
repnz
lcall
rcr
repnz
mov
mov
cmp
lea
popa
mull
mov
push
fwait
test
adc
jb
adc
loope
inc
vsqrtps
mov
dec
sti
fdivrp
dec
xchg
push
push
xchg
mov
movsb
xor
aas
mov
mov
add
add
jne
stos
mov
xchg
jl
cmp
stos
sbb
mov
shlb
daa
hlt
cmp
push
fbstp
insl
cmp
jge
jo
outsl
mov
pop
xchg
add
or
lock
fsubrs
mov
inc
mov
outsb
xor
mov
jb
sbb
mov
mov
cmp
mov
dec
pusha
mov
bound
adcb
inc
xor
xor
rcrb
push
adcb
fisttps
lret
cli
out
lret
mov
pop
pop
nop
clc
pop
push
int
adc
adc
mov
movsb
sbb
imul
dec
fcoms
sarb
cmp
push
icebp
test
in
jnp
push
fcmovu
lcall
das
xchg
push
adc
int3
xchg
and
aad
sbb
or
jge
leave
dec
mov
mov
cli
push
push
lret
sarl
mov
xchg
ss
fdivs
push
les
lea
jns
rorb
push
adc
mov
jle
sub
sbb
cmc
je
adc
and
dec
xchg
adc
je
sbb
mov
in
fxch
pop
and
lahf
and
mov
add
lods
cmp
out
lea
aam
dec
cmp
arpl
idivl
push
mov
jb
sarl
roll
pop
sub
inc
sbb
imul
sar
lret
fsubs
or
je
cmp
rolb
jb
lahf
pusha
sbb
mov
push
lahf
mov
pop
xchg
call
ja
mov
jmp
inc
mov
sub
adc
clc
push
out
iret
sbb
jge
jno
jp
pop
jo
fisubrl
or
inc
pop
vmovupd
lods
cmp
dec
mov
mov
cs
imul
adc
out
fstps
jo
daa
dec
mov
and
xchg
ds
jle
es
dec
adc
push
test
pop
lds
mov
scas
cmpl
mov
xchg
mov
and
jge
inc
mov
scas
cmp
push
std
ret
fstl
aas
subb
jmp
outsb
jmp
sahf
movsl
xchg
addr16
dec
mov
leave
in
adcb
aas
xchg
aad
repnz
sub
xor
shl
inc
jne
sbb
add
cwtl
or
fs
test
es
cmp
push
int
pop
add
jo
divl
mov
aad
push
jecxz
test
jo
adc
lds
out
push
jb
sub
mov
jno
sub
pushf
ljmp
enter
lock
adc
repnz
push
lds
pop
outsl
xchg
dec
testl
xor
mov
pop
sub
cmp
int
movsb
cld
adc
pop
mov
fstpt
insl
xchg
lods
or
and
rcrl
cld
push
sbb
arpl
js
adc
loop
xor
addr16
in
sbb
es
dec
iret
xchg
icebp
inc
and
mov
stos
out
xor
mov
jns
aad
dec
out
enter
mov
enter
and
sub
inc
test
add
fnstsw
xchg
dec
pop
jmp
test
fdivl
mov
stos
jle
sbb
fs
sbb
mov
daa
mov
fdivp
or
or
jbe
cmp
inc
pop
jae
sbb
cmp
jns
push
sub
mov
outsl
ja
fildll
fstpl
dec
inc
sbb
lahf
cmpsl
std
mov
inc
fstpt
dec
add
pop
jbe
lea
sub
cmp
scas
int3
sbb
pop
ret
dec
pop
pop
lds
cmp
ds
xchg
inc
daa
dec
stos
sub
xor
xchg
out
xchg
outsb
repnz
pushf
sub
aaa
push
stos
mov
jmp
sbb
adc
mov
into
sub
add
push
mov
loope
insb
pop
outsl
jae
mov
and
in
jnp
stos
idivb
mov
fidivrs
lcall
cmp
cli
jno
out
adc
add
gs
add
repnz
lds
cmp
mov
fisubl
inc
movsl
pop
push
and
lret
lret
xor
sub
sub
jp
or
inc
or
js
jns
cmpsl
jae
inc
ds
scas
mov
subb
mov
data16
jmp
add
sbb
xor
stc
adc
hlt
jmp
mov
lahf
cmp
out
ja
gs
mov
pop
fsubs
lods
mov
jnp
std
jnp
push
sbb
je
loopne
loop
add
addr16
cli
popf
or
xchg
outsb
push
xor
daa
mov
jae
pop
xlat
outsl
pop
shlb
mov
mov
or
outsb
or
adc
call
add
add
addr16
mov
outsl
add
clc
nop
pushf
inc
push
insb
mov
fbld
jmp
xchg
lret
bound
test
xorl
or
out
and
push
or
jae
rorl
lock
in
bound
inc
les
aam
dec
mov
sbb
lret
lcall
fisttpl
cli
lret
cmp
jg
xor
std
pop
adc
je
shl
mov
clc
inc
mov
test
dec
sbb
orl
das
jns
daa
ffreep
aaa
imul
mov
jp
cld
inc
cmc
loope
jo
enter
pop
imul
xor
mov
into
addr16
jmp
push
and
jl
inc
sub
out
mov
in
adc
sbb
aas
cmp
sbb
hlt
dec
pop
jle
loope
ret
jl
je
iret
jecxz
inc
adc
lods
iret
stc
roll
sub
in
ret
sahf
xor
xor
popa
cmp
dec
mov
outsb
xchg
sbb
sub
jle
push
mov
shrb
mov
clc
xor
jno
shll
add
cmp
add
addb
inc
fcomp
dec
cmpsl
fcomps
or
xchg
lods
jmp
pop
je
shl
cltd
cltd
jl
scas
sbb
jb
sub
imul
push
jb,pn
pop
loop
mov
cmp
jno
add
mov
mov
sbb
loope
inc
insl
sarl
and
adc
mov
pushf
cmp
andps
icebp
dec
mov
pop
mov
push
inc
push
js
neg
movsl
in
sub
js
mov
pushf
aaa
dec
sbb
cld
fs
jns
mov
lods
cmp
loope
fisttps
and
frstor
xchg
mov
push
aad
lcall
add
sahf
push
mov
repz
inc
lahf
mov
fs
inc
jnp
mov
mov
xor
lock
add
sub
lea
movsb
jne
xchg
pop
cmp
inc
dec
andl
mov
cmp
xlat
mov
je
push
fisttpll
and
or
dec
movsb
rorb
jge
jne
push
xor
push
jbe
out
hlt
cmp
insb
mov
pusha
movsl
pop
movl
movups
int
test
iret
ret
js
lcall
call
cmp
cmp
cwtl
cmp
lods
lds
loopne
negl
inc
push
dec
sub
mov
cmp
bound
sar
jge
stc
repnz
inc
push
mov
ret
aam
iret
in
push
cltd
xchg
mov
es
xchg
jns
sub
sahf
repz
mov
inc
ret
lea
inc
mov
and
push
loop
xchg
jne
sbb
rcr
jae
add
cmp
inc
add
ret
mov
xor
addr16
pop
xchg
cmpsl
or
stos
lds
out
cs
adc
in
fisttpl
cmp
enter
adcl
xchg
pop
xchg
dec
and
cmp
sbb
fadds
in
lods
loop
in
es
sub
movsl
subl
lahf
hlt
and
lds
in
xor
xor
clc
shrb
jg
xchg
sahf
mov
data16
cmp
jne
lds
push
inc
sub
push
jg
out
dec
imul
cltd
lock
sbbl
xchg
add
adc
inc
sbb
fmul
mov
xchg
ret
add
cli
jmp
inc
test
ret
mov
les
pop
xchg
dec
sahf
cld
mov
sub
pop
xchg
push
rorb
or
in
movsb
pop
lret
pmulhuw
mov
sti
int3
in
in
push
jmp
mov
jp
das
addl
dec
leave
sub
xor
push
sbb
jmp
es
cs
jno
push
insb
aaa
movsb
sbb
jne
or
hlt
jb
or
aam
out
sbb
adc
cld
jle
es
test
pop
jp
mov
pop
jne
pop
push
enter
sub
adcl
pop
xor
jecxz
jae
add
data16
xor
in
dec
dec
add
icebp
or
adc
mov
pop
lods
ja
xor
inc
push
js
pop
jns
lret
mov
mov
call
arpl
arpl
cmc
mov
mov
clc
push
adc
loopne
sarb
add
call
test
andl
adc
push
push
inc
in
jno
jecxz
push
imul
lret
push
lahf
subb
test
sub
not
mov
add
jmp
inc
mov
sti
jae
out
mov
xor
cld
xor
push
sbb
xchg
xchg
enter
das
adc
rcr
sub
call
clc
cmp
xchg
push
push
fldt
jp
lahf
jle
ret
dec
cld
rol
adc
mov
xchg
or
mov
add
pop
pop
mov
mov
jl
fiadds
insb
xor
dec
cmpsl
ret
cmpsl
cmp
iret
push
fdivrl
cmp
jg
pusha
notb
push
add
pop
rcrb
ja
rcll
dec
test
cmpsl
fcoml
leave
cmp
fstpt
ret
adc
adc
dec
lods
fdivrl
adcb
lahf
ja
cmp
mov
sbb
mov
xor
inc
leave
int
add
push
cmp
shlb
cs
dec
xchg
fbstp
sbb
das
add
sbbl
xor
cli
repnz
adc
xor
push
fsubrs
loope
fxsave
xchg
sbb
adcb
loope
mov
xchg
pop
into
inc
daa
dec
sub
aad
push
sahf
inc
ret
pop
incl
out
adcl
sbb
loop
imul
mov
xchg
ds
aas
push
leave
adc
andb
jbe
cmpsb
aad
in
inc
rorb
test
inc
push
icebp
leave
aas
std
and
jno
filds
push
mov
out
lds
mov
wrmsr
leave
jl
adc
xchg
pop
xchg
test
add
dec
push
jg
push
testl
std
or
sbb
lahf
hlt
push
inc
mov
cmpb
imul
dec
mov
adc
outsb
lods
fwait
mov
mov
leave
lcall
pop
arpl
loop
and
cmp
movl
popf
sbb
jmp
mov
sbb
pop
or
inc
or
jo
jmp
in
cmp
add
loop
into
negb
lock
pop
and
xor
xchg
in
sbb
aaa
mov
xor
shlb
shr
shll
sbb
inc
xchg
jmp
outsl
mov
stos
push
mov
insb
or
adc
sbb
sbb
pusha
push
or
mov
sub
cmp
sbb
or
xor
fidivrs
pop
loope
inc
xchg
or
xlat
cmp
das
rclb
mov
lods
mov
test
jae
or
ud2
scas
mov
jbe
push
push
sbb
dec
push
cmp
fildl
std
or
test
aaa
inc
push
movsb
mov
repz
stc
pop
dec
idivl
add
jae
xor
inc
scas
testl
mov
outsb
jb
and
outsb
popa
ljmp
negb
scas
xlat
shll
mov
cmp
add
mov
pop
cmp
add
pop
push
xor
outsl
xor
enter
or
cs
imul
fstps
dec
mov
sbb
mov
lret
arpl
outsb
shlb
mov
fimuls
jge
cmp
test
jns
aaa
cld
push
mov
jecxz
sti
pop
in
out
pushf
pop
in
pop
push
insb
push
inc
in
out
xchg
and
mov
outsl
inc
xchg
sbb
int
lds
out
data16
dec
dec
insb
out
fwait
mov
mov
xchg
shrl
arpl
outsb
mov
dec
jne
mov
adc
fs
inc
add
out
jno
push
subb
lea
fdivp
push
or
adc
jl
in
sbb
or
test
dec
mov
jmp
pop
in
in
push
xchg
pop
pop
mov
jae
movsl
and
sbb
aaa
sub
dec
fwait
cltd
mov
push
popa
and
mov
fisttpll
mov
pushl
cwtl
push
push
ds
push
inc
mov
push
xor
std
push
dec
js
push
jae
mov
fiadds
ret
xor
jge
shlb
mov
sahf
loope
push
lcall
ss
scas
mov
xchg
or
insl
out
xchg
or
je
hlt
daa
jg
add
in
sub
sub
loop
flds
or
mov
mov
mov
inc
lahf
in
shl
adc
aaa
fnstcw
test
stos
add
scas
and
add
jns
fisubrl
jmp
inc
fstpl
popf
pushf
ja
xor
and
je
and
mov
push
jbe
popf
fisubrs
or
mov
rcrl
or
insb
nop
sbb
mov
push
adc
dec
and
aas
lcall
lret
jmp
aam
repz
mov
test
sbb
or
xlat
or
hlt
cmp
pop
pusha
movsl
std
dec
pop
scas
mov
loop
negb
lea
inc
or
jg
add
fwait
bound
in
stc
xchg
popf
inc
imul
push
dec
je
mov
daa
das
mulb
popl
je
mov
mov
adc
test
mov
xchg
adc
push
jno
subl
call
les
insl
pop
jne
popf
hlt
imul
mov
cmp
push
ds
push
in
mov
cmpsb
data16
sub
call
adc
add
dec
cmpl
int3
rorl
hlt
stos
mov
repnz
scas
ds
loopne
outsb
jmp
pop
inc
outsb
ja
jae
insl
cmpsb
xor
mov
into
cmpsl
xchg
sub
out
mov
mov
es
mov
push
ja
in
test
pushf
in
imul
lret
mov
push
fwait
test
loopne
fstl
sbb
pop
inc
test
clc
dec
movsb
push
repnz
sub
lcall
scas
movl
mov
cmp
ret
mov
xlat
sub
imul
fnstcw
cmpsb
imulb
int
bound
inc
arpl
and
jo
popa
aad
inc
std
jg
cmpsb
mov
loopne
sar
dec
and
xor
iret
std
xor
or
outsl
mov
out
mov
repnz
loopne
mov
mov
popf
test
jae
xchg
inc
dec
cmpsl
mov
adc
pop
rcrb
dec
dec
mov
in
xchg
out
test
stc
mov
xchg
pop
aaa
sti
and
dec
xchg
push
call
and
movsb
aas
enter
lahf
ja
bound
shlb
jo
sub
jmp
dec
addl
int
cwtl
stos
jno
out
xchg
fwait
insl
mov
jns
dec
imul
push
repz
jg
xorb
jns
xor
xor
jbe
fistps
stos
xchg
fdiv
insl
popf
pop
int3
mov
cmp
inc
xchg
sbb
stc
cmp
mov
cli
addr16
pop
and
outsb
inc
dec
xor
clc
mov
push
ss
jne
mov
test
dec
ja
mov
jb
and
xchg
dec
pushl
xchg
aas
mov
inc
xor
in
xor
ror
gs
sbb
push
in
inc
xchg
cmp
dec
jmp
int
mov
iret
sbb
enter
add
lods
movsl
test
je
in
jbe
rcrl
rorb
sbb
mov
in
pop
mov
dec
sbb
xor
dec
or
and
cmp
sbb
shl
and
xchg
xor
ss
push
outsl
aas
arpl
in
aas
jb
inc
mov
sbb
imul
fucomip
insb
fsubp
and
pop
cmp
mov
sbb
dec
xor
pop
pop
loopne
jge
sbb
mov
cmp
jbe
out
cmp
ret
jno
ljmp
push
mov
and
pusha
in
add
mov
in
dec
adcl
in
mov
push
push
cwtl
imul
int
and
and
push
movsb
mov
out
xchg
fcoml
cmp
ja
mov
rorb
xchg
adc
fidivrl
scas
fsubs
or
clc
mov
sub
add
xchg
lret
iret
nop
pop
cs
jne
add
mov
sub
adc
push
jns
pop
inc
insl
xchg
mov
xchg
shrb
test
xchg
cmpsl
lcall
movsb
add
push
into
fsubrs
ss
insl
jnp
xchg
mov
js
mov
cmp
das
divl
std
out
push
pop
push
dec
mov
mov
sbb
scas
push
cld
in
jbe
mov
pop
rcl
inc
loopne
jb
sbb
sub
xor
mov
in
lods
out
mov
jmp
out
cmpsl
lods
sbb
cmp
jno
push
rcrl
aam
inc
lods
lret
inc
mov
dec
mov
dec
xor
cmc
cmp
jg
nop
mov
in
loop
in
nop
sub
and
jb
mov
xor
icebp
test
not
into
and
clc
loopne
inc
xchg
sub
loope
sub
and
push
jg
adcb
lret
xor
scas
pusha
mov
lods
mov
sahf
jecxz
aad
add
push
mov
lahf
push
popa
sbbl
je
retw
inc
mov
ss
dec
inc
sbb
sahf
add
xor
ja
lcall
loopne
sub
lock
js
mov
repnz
test
cmc
push
mov
xchg
mov
mov
or
fdivs
ljmp
lahf
mov
and
dec
sub
add
pop
dec
xchg
push
cmp
xchg
push
fsts
or
lods
mov
pop
lock
jcxz
arpl
or
aad
sub
cs
or
popf
xlat
push
mov
les
dec
or
outsb
sub
cmp
xchg
add
rcr
dec
mov
xor
in
xchg
jns
test
dec
std
adc
dec
jge
leave
inc
push
insl
inc
push
adc
in
jo
daa
xor
sarb
dec
cmp
testb
inc
push
insb
iret
rclb
inc
xlat
pop
dec
mov
mov
movsb
js
scas
outsb
stos
fdivs
push
bnd
fsubs
pushf
popa
xchg
jno
ja
mov
mov
sarb
and
mov
ret
mov
push
jecxz
adc
push
cmp
sbbl
xchg
addr16
push
ror
das
mov
xor
push
lcall
push
lret
daa
adc
ljmp
addr16
daa
mov
adc
out
push
and
into
out
jecxz
cli
adc
sub
into
mov
imul
jecxz
jle
push
mov
sub
out
mov
add
popa
fiaddl
in
das
cmpsb
ja
mov
inc
adc
and
lds
cmp
stc
aas
sahf
cwtl
rclb
mov
inc
cwtl
neg
rcr
pushl
out
mov
xor
xor
push
pop
push
mov
repz
sahf
inc
dec
test
repnz
jns
inc
nop
out
push
pop
sub
cmpsl
jb
pushf
arpl
push
inc
inc
lods
or
stos
push
add
mov
outsb
sahf
dec
jno
mov
inc
or
imul
inc
lahf
jge
pop
mov
xchg
icebp
div
fs
push
cltd
or
sti
stos
or
dec
out
push
lahf
pop
addr16
repnz
rcr
rcr
xchg
mov
mov
mov
lret
dec
and
lds
mov
jb
mov
jo
div
je
mov
dec
xchg
jnp
inc
mov
or
xchg
popf
xchg
xor
mov
divl
ret
fcomi
es
mov
mov
lahf
fstpt
loopne
mov
pop
push
ud1
inc
mov
sti
xor
pop
xchg
push
push
repz
or
or
jno
cmpsl
leave
pop
pop
psrld
pop
dec
rorl
jae
mov
outsl
rcrb
arpl
add
fisttpl
divb
mov
imul
mov
pop
aad
insl
fcoml
xchg
outsl
or
and
pop
dec
mov
cs
repz
sub
mov
push
adc
jno
sbb
jge
gs
mov
inc
aad
mov
mov
mov
fsubrs
mov
and
sbb
push
mov
je
icebp
ja
push
dec
jge
and
jb
mov
push
pusha
iret
mov
cwtl
fnsave
fdivrs
xchg
je
mov
xor
push
jp
xchg
mov
cltd
push
xchg
jmp
cltd
or
insb
jl
pop
jo
adc
mov
jno
outsb
movsb
data16
notb
shl
aam
xor
sbb
into
push
in
push
sbb
imul
es
lahf
dec
jne
jbe
ja
dec
int3
push
xor
popf
inc
or
cmp
jno
shll
mov
in
push
pop
xchg
imul
rclb
mov
ret
or
dec
push
jae
xchg
jns
hlt
inc
ja
loope
aam
xchg
mov
sbb
or
sub
sbb
arpl
xchg
cli
dec
and
sarb
int
or
pop
cmp
leave
mov
inc
dec
addb
mov
loope,pt
notl
dec
insl
fcomp
mov
adc
clc
mov
push
cwtl
push
jl
dec
mov
sarb
dec
repz
aaa
fs
aas
or
cmpsb
out
mov
in
in
cmp
add
lret
or
jmp
jge
into
fstps
xor
insb
jo
jb
pop
stos
ljmp
cmp
fs
mov
pop
or
ljmp
dec
push
jge
jge
and
jno
sub
repnz
pop
sarl
lret
jp,pn
push
enter
test
jmp
push
dec
sub
push
mov
xchg
imul
filds
jg
push
dec
scas
mov
mov
loop
cmp
mov
mov
mov
pop
sub
dec
xor
dec
mov
insl
ss
mov
out
dec
inc
gs
push
rolb
lahf
addb
int
dec
sbb
sbb
jp
or
callw
pop
add
sbb
pop
ljmp
in
fmul
jmp
nop
data16
and
add
aaa
lcall
pop
push
inc
and
das
add
jl
xchg
push
adc
pop
fst
mov
and
mov
xor
xor
cltd
jp
lcall
jne
sub
insb
fldl
mov
push
sbb
movsl
and
push
sub
shl
inc
mov
jp
sub
ds
gs
push
pop
outsb
xchg
pop
sub
or
mulb
sti
imul
xor
sub
leave
jmp
or
int3
sbb
mov
sti
sub
mov
adc
mov
scas
fidivl
aaa
lds
sti
inc
loop
and
sub
pop
and
int3
stos
div
js
repz
cmc
ss
jp
aad
push
pop
xchg
jge
lods
jp
jp
into
xor
dec
lcall
mov
jmp
fiadds
f2xm1
adc
or
mov
adc
mov
in
push
dec
cwtl
and
stos
jbe
inc
subb
sub
jbe
mov
dec
jmp
das
push
mov
lret
cld
xchg
loop
fldenv
hlt
or
dec
mov
decl
dec
test
jnp
sbb
push
push
test
mov
xchg
mov
cmpsb
xchg
or
fwait
xor
push
stos
push
aaa
lahf
sahf
mov
ds
xor
pop
mov
xorl
js
es
aad
lods
fstps
adc
and
in
add
out
test
outsl
call
jns
cli
sbb
mov
lret
cmpsl
mov
sub
fidivrs
test
add
aad
adc
lods
xchg
addr16
or
loop
aas
cli
jae
fs
adc
add
push
cwtl
pop
add
adc
mov
insb
or
mov
inc
mov
pop
int3
mov
cmp
lods
vprotq
sti
xor
or
aam
adc
test
lods
lea
mov
lds
aam
lods
mov
and
mov
jnp
add
inc
stc
fildll
cmp
jns
dec
mov
cli
lods
lcall
mov
mov
movsb
adc
dec
sub
mov
push
iret
sti
imul
mov
aad
fdivs
test
sar
xor
arpl
mov
add
dec
scas
pop
pushf
xchg
inc
int3
pop
mov
adc
lods
sahf
adc
cltd
xor
sbb
jno
pop
and
dec
data16
in
daa
repz
jecxz
fwait
and
shlb
push
sti
mov
aaa
repnz
icebp
bound
aam
popa
add
or
mov
push
movsb
insb
lahf
xor
add
ljmp
inc
aad
mov
nop
test
pop
shl
loope
lret
leave
loop
in
mov
out
xchg
mov
fisubrs
sub
mov
stc
insl
sbb
into
dec
mov
add
in
add
jle
inc
movsl
call
xchg
mov
insb
les
movsb
add
mov
pop
jns
push
cwtl
daa
dec
mov
push
jg
and
sub
cmp
icebp
xchg
pusha
popa
das
add
or
sbb
out
test
sub
loope
ja
mov
je
and
and
js
fidivl
call
push
dec
lods
mov
pop
stc
push
out
imul
movsb
cmp
shrb
sub
sbb
add
jg
lock
pusha
jnp
mov
sub
jne
fcoml
mov
xchg
jae
cs
jp
rcr
in
imul
out
jb
sbb
enter
xchg
loopne
repnz
addl
ljmp
mov
icebp
icebp
mov
fimull
jae
mov
pop
mov
fisubrs
mov
sbbl
mov
orb
in
and
popf
clc
inc
inc
dec
mov
inc
test
and
sbbb
mov
rorl
add
pop
fimull
push
cltd
sti
cmp
ljmp
loop
pop
outsb
arpl
mov
sbb
sti
in
call
jge
xor
cmpsl
fs
cmp
cmpsb
adc
mov
or
and
adc
lcall
push
push
inc
inc
mov
cmp
adc
pop
dec
pop
pop
sub
into
sub
cmc
sbb
lea
imul
pop
jne
scas
add
data16
cwtl
bound
sbb
mov
push
popa
mov
or
repnz
mov
stos
in
movsl
in
pop
jb
mov
inc
sbb
mov
jo
xchg
dec
fsubrl
dec
or
cmpsb
loopne
push
jmp
shrb
xchg
mov
jmp
cli
test
lcall
sub
push
js
push
bound
xchg
rorl
xor
sub
repz
xchg
push
rcrl
ret
jbe
inc
pop
outsb
popf
rcl
sti
data16
fs
jo
cltd
jl
popf
lret
push
aam
out
inc
mov
mov
sbb
sbb
movsb
aam
mov
pop
mov
shll
mov
push
pop
popf
or
in
xor
cwtl
ret
std
and
or
dec
aad
lahf
test
loope
xor
cmpb
sahf
adc
popa
inc
sub
neg
dec
sub
outsl
aad
imul
inc
scas
and
inc
or
notb
push
pop
mov
jecxz
xchg
jg
ljmp
jp
subl
xor
loop
pop
cs
xor
lock
xchg
imul
add
pop
push
lods
addr16
shrl
sti
or
into
cmp
and
test
jmp
test
out
out
ds
sbb
pop
mov
hlt
out
fdivp
push
xchg
push
or
or
sbb
popf
sahf
rcrl
jne
iret
or
aad
jno
jnp
adc
pop
jl
push
or
mov
jae
push
adc
hlt
mov
or
fnstcw
cmpb
nop
xchg
inc
sahf
lahf
incl
and
sbb
add
inc
and
pop
cmp
pop
mov
repnz
mov
cli
push
push
push
pop
mov
xchg
popa
mov
imull
add
xchg
pop
sti
scas
out
cltd
mov
daa
jbe
mov
xor
xor
mov
xor
push
hlt
pushf
outsl
pop
and
int
into
loop
mov
clc
fisttpl
cmp
outsl
lods
cltd
cld
iret
aas
mov
inc
push
mov
xor
mov
xchg
out
sub
or
das
jne
not
xchg
mov
ja
and
pop
lds
adc
rcll
std
push
sti
aas
adc
aas
nop
sbb
add
dec
adc
sti
sbb
daa
mov
test
mov
mov
cltd
mov
fstpl
jns
iret
dec
cmp
aas
lock
add
xchg
mov
loop
push
push
ret
xor
push
inc
or
jecxz
push
outsb
xchg
mov
xchg
movsb
sub
popa
inc
pop
lods
ret
and
lods
arpl
xchg
rcr
mov
sbb
mov
jl
sbb
mov
test
aas
mov
xchg
mov
je
adc
orl
in
mov
daa
pop
mov
sbb
jmp
lock
mov
inc
inc
pop
movsl
js
jp
ljmp
loop
cwtl
mov
sbb
inc
xchg
insb
cmp
ret
add
leave
sahf
pop
inc
xchg
outsb
push
cwtl
xchg
adc
cltd
shll
call
fs
xor
repz
sbb
jno
add
and
cmp
adc
cmp
xchg
push
cmp
inc
sbb
mov
add
shll
addb
dec
mov
in
das
inc
lods
icebp
jmp
stc
or
mov
inc
pop
add
mov
cmpsl
call
add
mov
xor
int
xor
insb
push
cmp
and
lods
addr16
aas
adc
and
jb
mov
push
mov
std
sbb
add
sub
mov
adc
or
ja
loopne
pop
je
test
sbb
popa
in
jns
inc
pop
mov
or
movsl
stc
pop
scas
cmp
imul
adc
fnstcw
insb
inc
ds
sbb
push
adc
and
push
and
scas
sbb
loope
xchg
out
cwtl
xchg
fcmovb
pop
inc
cmp
push
add
es
stos
mov
sub
aad
out
dec
pop
je
and
mov
push
fistps
mov
out
fistl
push
call
aas
aas
sub
inc
das
out
pop
mov
in
fnsave
les
mov
or
mov
xor
sub
dec
and
and
das
insb
sbb
pop
dec
repz
push
loope
in
mov
test
out
pop
mov
mov
nop
jnp
push
repz
pop
cs
divb
and
int
icebp
cltd
inc
lea
movb
jle
pop
or
sub
sti
pop
sub
in
xchg
add
popa
mov
mov
mov
shll
push
js
add
cmpl
inc
in
pop
xchg
lret
divb
cmpb
rorb
lods
sub
test
in
aad
movlps
jmp
or
cmp
loope
push
ds
lcall
dec
jo
push
push
adc
lcall
lock
jne
jno
push
out
shll
jo
fwait
mov
repz
mov
or
mov
test
mov
push
or
mov
lret
sarb
mov
iret
arpl
lret
adc
adcl
fildll
push
add
popa
mov
cs
add
sbb
adc
sub
xchg
push
xchg
cmp
and
adc
negl
out
scas
mov
mov
js
pop
mov
xchg
fdivrl
popa
jecxz
mov
nop
jle
inc
inc
pop
ja
fistps
xchg
stos
cli
shll
push
or
sbb
lea
imul
pop
repnz
int
popa
xchg
out
push
jnp
or
gs
aad
andl
push
xchg
lds
gs
rcll
and
sbb
ljmp
dec
aad
or
push
data16
pop
rcll
stos
hlt
mov
push
xorl
repz
cmpsl
pop
cmp
sub
jp
addl
movsl
xchg
xrelease
xchg
pop
nop
or
sbb
add
arpl
lock
dec
mov
push
push
out
and
subl
int3
test
push
xchg
push
paddb
push
scas
mov
mov
mov
add
outsl
pop
mov
into
cmp
push
xchg
and
fs
popw
xor
jbe
cs
in
lret
mov
sub
xchg
sbb
addr16
mov
aam
icebp
int3
fiaddl
test
gs
xchg
inc
sbb
lcall
shrb
sahf
push
lods
fisubrs
scas
fsubr
mov
stc
mov
mov
push
lcall
and
loopne
stc
mov
pop
lahf
cs
xor
fcoms
imul
testb
shlb
das
movsb
adc
int
loop
lea
std
test
and
push
sbb
or
rorb
xor
mov
jmp
xchg
cmpsb
sbb
fiaddl
or
sbb
mov
jecxz
dec
in
mov
mov
ficoms
push
mov
fcmovnbe
cmp
xor
mov
in
pop
or
or
pop
and
inc
popa
ja
leave
ja
mov
xorl
adc
inc
or
dec
lods
xor
loopne
aam
nop
outsl
add
imul
popf
ja
mov
jbe
jg
imul
jge
adc
fwait
add
fsubs
dec
cmp
icebp
sub
dec
cld
or
pop
ret
test
jge
pop
sbb
pop
inc
ror
test
scas
sar
fdivp
xor
mov
mov
and
pop
pop
pop
std
out
subb
and
in
lahf
xlat
cmp
js
pushf
and
pop
sub
movsbl
inc
mov
test
or
ret
pop
in
pop
jl
or
dec
xor
idivb
mov
mov
testl
or
into
pop
xor
xor
adc
fs
xchg
popa
mov
aas
cld
sub
add
or
pop
cmp
sub
repz
fstpl
inc
xor
add
push
lret
sbb
cmp
int
sub
mov
rorl
and
mov
jg
cmp
fwait
ror
dec
movsb
jno
pop
xlat
adc
adcl
insl
xlat
xor
push
push
fistpll
mov
mov
sub
jns
out
add
jo
sub
pop
mov
imul
mov
push
mov
inc
enter
stos
mov
push
ljmp
or
stc
jbe
mov
sbb
fildl
nop
mov
nop
xchg
mov
mov
jg
pop
aad
aad
jae
cmp
test
mov
jo
jp
rcll
or
pop
jae
xchg
ret
and
lret
repnz
rclb
mov
sahf
insl
lcall
hlt
cmp
sub
add
add
add
fst
inc
rcrl
fisttps
sub
repnz
lcall
adc
mov
inc
mov
cmp
stc
jbe
push
pop
adc
iret
add
jo
jbe
lds
gs
rdmsr
jb
and
icebp
jno
push
imul
xlat
mov
cmpsb
jecxz
mov
imul
popf
lcall
dec
lret
sub
pop
inc
mov
mov
es
mov
mov
fldenv
mov
iret
push
lret
push
cwtd
int3
dec
mov
pop
mov
or
add
mov
and
in
pop
mov
sub
pop
mov
xchg
cmp
and
ss
clc
imul
dec
mov
fcomi
push
ja
add
mov
or
jns
xchg
mov
pop
daa
lret
nop
mov
sub
add
les
ja
mov
out
mov
fs
sbb
or
jns
ret
arpl
test
mov
stc
cmc
dec
arpl
sti
adc
shll
push
out
push
hlt
aad
and
ret
ja
or
in
and
adc
mov
mov
cmp
xchg
rcr
leave
lds
pop
fucomip
jmp
mov
imul
dec
js
jp
les
cld
pop
repnz
shlb
lods
fcmovnbe
aas
out
mov
mov
xor
pop
into
lret
rclb
mov
incl
stos
mov
scas
adc
mov
outsl
int
add
movb
movsl
cld
lahf
push
lock
dec
cmc
outsl
in
inc
or
pop
inc
inc
mov
bound
lret
mov
and
xor
stc
sub
andl
mov
aas
adc
fwait
in
push
and
cmp
call
mov
fbld
add
aam
xchg
idivb
mov
lahf
dec
dec
imul
push
xchg
lret
jmp
loope
jg
fs
icebp
aad
xchg
sbb
mov
das
lret
in
sbb
dec
xchg
adc
xchg
enter
pop
les
imul
mov
fcomps
xor
and
test
pusha
test
into
xor
mov
cld
lahf
inc
cmp
push
pop
je
mov
in
push
sub
jg
sahf
mov
sbb
mov
arpl
dec
or
pop
mov
popf
inc
jp
dec
ljmp
ljmp
cmp
fimull
mov
sub
adc
xorl
jo
adc
rcrb
ss
mov
adc
mov
pusha
movsb
sbbl
fisttpl
pop
mov
push
jg
outsb
mov
fs
nop
aad
cli
pop
dec
lret
andl
lods
pop
int
cmpsb
push
push
out
xchg
cmpsb
roll
out
je
jecxz
push
pop
xchg
call
hlt
rorb
jmp
outsb
xor
mov
mov
sub
mov
mov
sub
movsb
mov
fisubrs
xor
cmp
xor
repnz
call
out
xchg
xor
lret
jne
rolb
insl
stc
aas
inc
ret
mov
dec
adc
xchg
sbb
ret
fiadds
adc
sahf
leave
js
adc
std
enter
notl
fwait
sub
cmp
sti
out
dec
and
movsl
loope
jnp
rcl
and
rclb
outsb
jecxz
icebp
cmp
adc
mov
fmulp
aaa
mov
ljmp
xchg
or
push
push
and
and
xchg
jmp
and
addl
ljmp
mov
and
jmp
mov
or
mov
stos
sarl
pop
push
adc
daa
xchg
test
mov
cmp
mov
jecxz
lcall
lea
or
out
push
in
pop
and
data16
jp
push
lahf
xor
aam
push
lods
xor
shrl
popf
xor
xor
cld
jmp
imul
lods
fsubs
xchg
int
aas
ror
mov
sub
lds
in
addr16
and
js
insl
sarl
mov
push
dec
stc
mov
cmp
push
inc
push
enter
or
mov
mov
mov
pop
bndldx
or
orl
adc
xor
dec
aam
jmp
mov
out
std
js
scas
aaa
lods
or
xchg
cmc
popf
rcrb
sub
subl
push
add
mov
js
add
mov
xor
cmpsl
sbb
push
orl
dec
jo
mov
cmpsb
inc
stos
mov
pop
in
pop
adcb
push
and
push
and
test
and
pop
mov
or
stos
bound
dec
inc
jmp
cld
pop
ja
jle
sub
fimuls
sub
filds
int3
or
lods
push
xchg
jg
cmp
inc
shrl
mov
xor
int
loop
dec
clc
add
into
dec
mov
repnz
inc
ljmp
pop
sub
jge
bound
lock
in
cmp
pop
fldcw
movsl
or
push
es
lds
sti
stos
jno
dec
pop
insb
test
sbb
cmp
add
xor
mov
pop
arpl
int
xor
rorl
pusha
enter
cld
sub
je
rcl
push
xchg
je
dec
imul
mov
ficomps
das
stos
adc
sbb
pop
push
push
bound
lret
sahf
mov
and
dec
aam
or
adcb
or
int3
xchg
pop
cmp
out
test
outsl
adc
mov
lret
bound
sti
mov
jge
call
mov
xchg
push
dec
insb
and
test
push
pop
mov
cmc
push
in
fadds
mov
cli
pop
jmp
dec
mov
xor
cmpsl
mov
dec
jnp
aam
arpl
fsubrs
sti
mov
inc
mov
xchg
addr16
xchg
sub
xchg
js
pop
loopne
in
dec
cmp
je
ds
xchg
jg
fbstp
xchg
mov
scas
and
lret
add
sub
push
scas
jne
movsb
xchg
cmp
push
jmp
xchg
lods
mov
lret
sbb
xor
shlb
cltd
movsb
jecxz
sbb
imul
adc
mov
loop
xchg
or
and
data16
dec
int
xor
cmpl
mov
sbb
out
sbb
cs
int
or
out
sarl
ret
ds
enter
popf
lds
lods
aas
popa
lret
and
aad
filds
lret
sti
mov
sub
inc
dec
fnstcw
xor
imulb
push
xor
jo
out
sbb
jne
test
repz
push
outsl
mov
insl
dec
or
xchg
fs
test
mov
in
jbe
cmp
loope
inc
xchg
lret
test
call
iret
mov
push
rcll
mov
push
xchg
pop
iret
adc
or
push
rcrb
subl
inc
mov
mov
sbb
sbbl
loopne
sbb
jo
fwait
cwtl
sbb
lret
out
mov
sbb
jge
mov
push
add
mov
repz
gs
push
pop
mov
in
shrb
cmp
data16
ljmp
imul
fldenv
adc
dec
jg
xchg
or
cmp
aad
jne
cld
out
sti
dec
mov
cltd
sbb
shr
stos
dec
or
inc
mov
jno
inc
mov
insl
sub
pop
or
stos
or
adc
stos
outsb
push
out
inc
push
in
push
push
jge
jg
cli
sub
cmc
popa
pop
cmpsb
lea
push
push
icebp
mov
nop
jmp
add
dec
cmp
sub
out
mov
jbe
mov
sbb
sub
leave
mov
adc
fimuls
cwtl
jno
lock
insb
stc
out
jbe
cmp
aad
push
loope
lcall
dec
mov
dec
fwait
ja
dec
pop
out
enter
or
and
cli
es
mov
jmp
pusha
rsm
and
pop
push
adc
inc
data16
inc
scas
jne
push
jbe
loopne
xchg
in
cs
push
add
shll
insb
mov
xchg
dec
pop
scas
sub
outsb
std
xor
inc
xor
daa
call
fsubrp
lret
lahf
sbb
ds
jl
outsb
int3
xlat
jl
pusha
rcll
jns
leave
inc
mov
lret
int3
dec
scas
stos
lods
notb
dec
fbstp
and
or
or
inc
out
xchg
inc
dec
jg
in
jo
insb
push
ficoms
shlb
test
push
rcrb
inc
rcll
das
in
out
gs
sub
insl
mull
mov
pop
push
mov
test
out
push
popf
cmp
mov
jmp
bound
xchg
pushf
mov
jmp
push
fs
or
pop
fildll
mov
push
and
push
lcall
lods
sbb
pusha
xchg
lea
sti
mov
int
xchg
jecxz
xchg
cmp
mov
movsb
scas
loopne
or
adc
into
in
pusha
cmp
js
inc
iret
push
or
mov
dec
stos
sbb
adc
sub
pop
loope
push
outsb
sub
inc
push
xchg
shlb
sub
cmp
ljmp
pop
inc
outsl
in
in
jecxz
mov
add
imul
jbe
not
or
std
aam
push
xchg
aaa
cs
addr16
push
dec
daa
cs
push
dec
loopne
js
or
sub
aad
xor
scas
fs
adc
nop
mov
or
sahf
pop
out
jmp
mov
xchg
sub
int3
sub
jae
xchg
mov
icebp
cs
xchg
push
lods
mov
pop
and
jmp
dec
clc
dec
rolb
in
fidivrs
xchg
dec
pop
xor
pop
push
sbb
mov
cltd
out
mov
jo
cltd
pushfw
mov
add
mov
push
mov
xor
aaa
dec
mov
stos
mov
cmp
or
xchg
ret
and
dec
xchg
and
jns
cwtl
dec
adc
cmp
add
xchg
movsb
add
add
or
push
enter
ds
lcall
xor
into
sub
test
sub
in
in
dec
lods
sbb
xor
dec
fdivs
or
movsb
cld
and
add
lahf
dec
sub
sarb
cmp
scas
fdivr
cli
pop
imul
pop
sub
in
pop
fisttpl
mov
addr16
mov
aaa
inc
fwait
inc
std
jg
and
out
inc
push
ret
cld
pop
sub
mov
add
push
or
cltd
pop
add
sub
adc
call
test
out
shll
fnsave
mov
outsb
lahf
cmp
lea
or
int3
std
sbb
sub
repnz
out
sbb
dec
pop
mov
mov
adc
inc
sbb
mov
rolb
loopne
icebp
outsl
test
and
or
dec
icebp
push
inc
mov
jle
lods
bound
loopne
stos
mov
aaa
or
mov
xchg
iret
cwtl
add
pushf
xor
add
dec
nop
pusha
repnz
andb
pop
jl
fsubs
cmp
push
push
mov
fadds
xchg
inc
cmp
mov
lock
dec
xlat
pop
ljmp
in
arpl
clc
std
daa
push
fisttpl
mov
test
xor
jbe
sbb
fcoml
js
int
and
cmp
js
in
scas
cmp
adc
mov
xchg
dec
jae
cmp
add
sbb
or
mov
das
or
sub
sub
sbb
push
insb
mov
xor
fsubrl
adc
das
cmp
movl
hlt
pop
scas
lods
xchg
testl
les
outsl
mov
lods
aas
pushl
adc
cmp
scas
inc
sbb
dec
and
dec
insl
mov
lods
ja
inc
fs
fbld
mov
int
xorl
or
mov
xchg
push
sti
add
or
mov
nop
hlt
nop
incl
or
mov
sbb
add
xchg
lret
adc
lahf
sar
scas
fisubl
inc
in
mov
dec
ss
mov
push
cwtl
dec
mov
jae
push
adc
test
mov
ret
mul
cmc
jge
pop
iret
ret
sbb
sbb
xlat
cld
shrl
adcb
lock
int
jge
pop
jmp
jb
sbbb
jp
push
es
in
loope
or
in
rorb
insb
ret
in
push
xor
insb
inc
aaa
pop
shr
sbb
dec
mov
jge
loop
mulb
movsl
hlt
cmp
aad
cmp
xchg
or
es
mov
push
enter
sahf
ss
adc
test
in
push
enter
stc
jae
test
or
ds
mov
cmp
xchg
gs
inc
fists
inc
fwait
sub
mov
cmc
ja
pop
inc
mov
cmp
cwtl
in
inc
mov
inc
mov
sarb
arpl
in
inc
adc
cmp
push
xchg
fwait
dec
lret
fildl
jne
jnp
pop
adc
dec
pop
pop
mov
and
test
adc
push
fistps
outsl
and
mov
push
mov
stc
xchg
adcl
xlat
mov
popf
push
and
or
pop
dec
out
inc
mov
sbb
sarb
xchg
call
out
cmp
cmp
shlb
inc
push
jne
ret
mov
push
out
sbb
pushf
mov
add
add
mov
pushf
clc
jne
fmuls
es
dec
mov
sub
popf
rclb
cmp
inc
push
fidivrs
jp
icebp
mov
jmp
xchg
arpl
or
or
pop
pop
mov
mov
dec
push
jo
mov
mov
push
xor
aaa
cmp
pusha
bound
or
jl
cmp
or
sbb
cmc
stos
lds
lds
adc
xchg
aaa
std
sub
mov
fwait
mov
mov
andb
lock
loopne
cli
jns
test
repnz
jge
add
push
mov
fld
pop
xchg
cwtl
cli
pushf
mov
ss
adc
cmpsb
mov
mov
sub
popa
scas
inc
aas
in
shlb
sub
lds
add
pop
push
fwait
idiv
fmulp
addr16
jg
adc
push
or
add
jg
sub
dec
icebp
and
cmp
aad
or
sbb
sti
enter
add
pop
es
pop
adc
sbb
ss
add
push
out
jle,pn
stc
inc
xchg
and
lret
pop
repnz
jns
add
add
mov
xor
scas
xchg
lret
mov
cmp
push
or
jbe
insb
cmp
xchg
xor
pop
push
aad
fcmovnb
push
mov
pop
loope
adc
cmp
shl
xorl
in
popf
in
mov
sub
mov
scas
or
fsubp
incb
or
movsb
js
dec
cmp
pop
jg
xor
jecxz
and
negl
fcmovb
movsl
cmp
mov
mov
cs
out
xchg
lock
dec
push
dec
fnsave
sub
adc
nop
repz
lret
xchg
call
out
cld
cmp
lds
pop
mov
insb
cmp
movsl
inc
subl
inc
int3
and
inc
inc
jge
notl
in
jns
mov
testb
sub
or
xor
inc
lods
sti
sub
fwait
divb
push
sbb
push
andb
push
cmp
jbe
jno
and
test
fildl
sbb
cmpsw
xor
add
shll
mov
push
pop
sbb
mov
lcall
add
mov
jne
sub
pop
int
test
cwtl
mov
pop
inc
push
sub
pop
call
aaa
cmpsb
or
nop
lds
cld
xor
cmp
in
pusha
push
push
in
xlat
daa
mov
push
sbb
adc
aam
jbe
loopne
ret
jb
adc
push
test
mov
in
jmp
cmc
mov
jge
push
call
jecxz
lret
popf
loope
push
out
xchg
jecxz
outsb
adc
fdivrp
mov
sbb
mov
and
push
and
push
ret
pop
lahf
in
ret
sbb
adcb
mov
adc
xchg
hlt
enter
lahf
aam
insb
mov
cmpsb
cmp
aad
mov
inc
dec
mov
pop
icebp
cld
incb
sti
imul
mov
jg
cli
inc
call
pop
inc
mov
lcall
push
int
idivb
inc
out
pop
push
mov
sub
leavew
orb
imul
xchg
push
test
or
fnstenv
call
mov
mov
cli
enter
xchg
adc
fnstenv
push
sbb
mov
jecxz
mov
sahf
stos
rolb
cmpsl
icebp
jnp
rcll
and
adcb
jno
mov
loop
push
xchg
movsb
inc
fwait
mov
decb
bound
adc
sahf
jae
jb
sbb
mov
cmp
sbb
inc
sub
mov
into
test
push
inc
rorl
int3
and
cld
pushf
fimuls
dec
push
jb
pushf
dec
pop
mov
pop
xchg
in
cmpsl
aam
ret
dec
inc
inc
in
adc
and
pop
es
ds
aam
int
or
andl
sub
cmp
xor
sub
aam
sbb
dec
out
test
aad
mov
js
inc
insb
movsl
adc
fisttpl
cmp
xchg
dec
repnz
je
add
pop
sub
mov
in
pusha
lds
sub
xchg
or
mov
mov
and
clc
les
test
push
shr
sbb
fdivr
mov
loopne
idivl
mov
push
push
pop
and
push
cmc
imul
imul
xorb
iret
nop
add
lods
ss
sahf
les
xchg
mov
cmpsb
rcr
jp
inc
sbb
xchg
daa
pop
insl
das
es
inc
inc
jmp
test
mov
movsl
pop
jo
xor
mov
mov
mov
dec
dec
fisttps
xchg
push
cmp
lea
add
lcall
sbb
sbb
gs
inc
cltd
aas
jg
test
ror
jne
xor
hlt
rcrb
mov
ret
pushf
scas
xor
sub
push
xchg
mov
lret
mov
pusha
orl
pusha
test
mov
stc
mov
pop
pop
push
push
movb
cmpsl
push
sub
jno
cld
dec
int
sub
in
test
sbb
in
movsb
out
pop
pop
mov
popf
and
inc
js
mov
stos
push
test
cmp
xchg
jno
repnz
push
call
inc
jae
fisubl
out
jo
xor
cmp
and
out
cwtl
add
shrb
jmp
jno
outsb
cmp
pop
stc
or
fwait
subl
arpl
push
pop
mov
push
test
std
aas
negl
xor
fisttps
or
dec
pop
mov
inc
jl
xor
lahf
push
arpl
leave
sub
adc
call
push
jecxz
jnp
dec
call
inc
ret
js
push
and
mov
inc
fmulp
add
outsb
cmp
rcrl
add
dec
xchg
pop
mov
cld
lret
dec
repnz
in
nop
dec
or
test
or
add
fidivs
negb
mov
pop
lds
aaa
imul
or
imul
push
add
xchg
or
xor
ss
jae
aam
aas
inc
xor
ret
cmp
pop
mov
scas
xorb
cmp
xor
or
pop
rclb
and
sbb
cmpsw
push
cmp
sti
inc
dec
add
imul
jns
add
jecxz
int
loopne
dec
test
xor
movsb
and
xor
add
les
arpl
jo
mov
sub
imul
add
inc
and
rcrb
dec
shrb
int
test
cmovo
jo
pushf
sub
sub
sarb
mov
repnz
notb
fdivr
call
jnp
fimull
pop
pop
mov
movsb
inc
xchg
test
pop
pop
outsb
out
xchg
jnp
lahf
je
push
push
sbbb
aas
faddp
in
sub
cmpsl
jle
xchg
outsb
cmp
sub
cmpsb
outsb
xor
or
add
test
cli
push
xchg
dec
pop
mov
in
loope
mov
nop
lret
cld
jecxz
mov
and
mov
decb
xor
sub
fdivs
push
or
mov
push
and
jae
mov
jecxz
or
gs
or
mov
jl
cmp
or
pop
dec
in
jne
jnp
js
pop
mov
lcall
cmp
fiaddl
aam
rcr
scas
sub
bound
je
and
je
xor
jg
adc
out
test
psadbw
add
lahf
jle
pop
mov
jns
call
and
push
sbb
mov
inc
fdiv
dec
pop
jg
add
sar
inc
jl
mov
out
push
add
lock
aaa
push
pop
andb
jl
sub
orb
add
in
lods
xchg
cmp
rcr
inc
outsb
pop
and
inc
sahf
jbe
fwait
adc
lods
pop
push
test
mov
xchg
jnp
les
pop
out
shll
fldenv
cmpsl
cmp
das
int
or
mov
es
mov
push
add
add
adc
push
sbb
scas
es
stos
and
outsb
testb
ret
std
cmp
das
mov
push
repnz
sbb
loope
inc
and
push
jl,pt
adc
out
adc
add
push
inc
sbb
iret
cmp
sarl
clts
jmp
adc
adc
xlat
cmpsb
push
ljmp
test
push
outsl
sarl
outsb
inc
fwait
aad
dec
pop
mov
adc
aam
pop
or
push
insl
lds
or
mov
sbb
dec
int3
xor
xor
cs
lcall
imul
push
les
notl
mov
int
lret
std
je
mov
movsb
cmp
pushf
jae
setbe
and
adc
jo
cltd
mov
outsb
mov
push
lods
push
xchg
lods
xchg
add
dec
out
sar
into
xor
outsb
imul
xchg
fistl
dec
sbb
pushf
pop
test
cmp
cmpl
inc
ret
subb
sahf
les
inc
imul
jae
add
cli
icebp
pop
andl
les
out
push
rorb
xchg
jb
andb
sub
into
cli
inc
js
ret
popa
mov
ljmp
cmp
add
in
inc
stos
add
cmp
mov
xor
jo
cmpl
ja
cmp
cltd
test
dec
sbb
add
or
cltd
jg
inc
mov
sbb
or
lret
clc
lods
xor
insb
lock
movb
inc
xchg
aam
ss
js
sti
sbb
and
push
imul
dec
ja
jnp
fs
and
adc
pop
stos
jg
test
xchg
out
fnstenv
lds
jecxz
push
aad
ja
sti
icebp
hlt
lahf
xchg
dec
sub
xor
dec
xchg
pop
adc
mov
xor
insb
jno
or
or
inc
jmp
dec
imul
cld
cs
ljmp
sar
fs
pop
sbb
int3
out
or
xor
pop
dec
lcall
mov
mov
xchg
jmp
aad
fs
pusha
mov
sub
pop
xchg
repnz
add
mov
xor
and
mov
cmc
xchg
pop
add
sbb
and
adc
into
mov
cli
add
rcrb
cmp
pop
fdivs
mov
int
stos
xor
xlat
push
mov
sbb
xor
xlat
test
sbb
ficoml
outsb
ja
jge
xor
push
adc
sbb
xchg
aas
pop
xchg
stos
sub
int3
in
xor
lret
cwtl
push
lret
jb
mov
mov
xchg
xor
scas
xchg
jg
leave
add
pop
scas
imul
outsb
leave
xchg
mov
and
or
imul
call
insb
lret
sbb
std
outsb
fadds
push
jno
ret
mov
pop
pslld
cmpl
push
push
sub
add
cwtl
popf
in
sahf
pusha
and
sbb
repz
pop
subb
cmc
test
jne
sub
sbb
fistpll
gs
push
stos
xchg
in
jle
test
jmp
mov
inc
inc
mov
ror
int3
add
repz
das
inc
or
mov
jne
xchg
xor
lock
mov
jle
js
out
lods
pop
dec
push
cwtl
mov
hlt
sub
sbb
stos
sub
scas
xchg
enter
cs
flds
insb
sti
pop
cli
xor
cli
and
and
sub
mov
push
stc
mov
or
xor
jns
loope
mov
mov
jge
fcompl
or
je
outsl
insb
push
addr16
das
jp
nop
pop
pusha
lock
insl
scas
outsl
push
lret
pop
xchg
xor
repnz
mov
add
ss
fsts
mov
ror
mov
jno
cwtl
mov
sbb
jle
les
xchg
icebp
ja
cmpsb
push
aam
xor
shlb
cmp
bound
out
in
xor
in
movsl
ret
scas
cmp
push
inc
mov
push
nop
xorb
mov
jbe
push
xchg
adc
pop
ret
mov
jle
mov
jbe
js
and
fdivrp
aas
test
jae
and
fstps
sbb
push
insl
mov
rorb
sti
mov
in
ret
sub
mov
rclb
push
dec
adc
insb
fcomps
mov
and
test
and
mov
out
mov
pop
outsl
es
in
or
sub
sbb
mov
cs
cmp
pushf
mov
xchg
enter
sub
jp
xor
lds
aam
mov
xchg
pop
pop
stos
dec
iret
hlt
pop
cmp
jge
xor
cmp
bound
dec
in
push
orb
dec
imul
push
movsb
bound
aad
mov
adc
cmc
adc
mov
lock
fsts
mov
js
das
pop
lcall
ret
mov
js
cs
inc
popf
jle
nop
mov
sbb
push
xchg
adc
ror
aaa
movsl
out
add
cli
dec
cmp
fiadds
icebp
shlb
jno
dec
inc
movsl
cltd
xchg
ficoms
xchg
arpl
adc
std
mov
out
or
mov
jp
aaa
or
in
add
adc
lret
cli
repnz
std
sub
test
and
jle
or
std
jle
jo
mov
mov
std
cmpsl
je
and
add
push
dec
push
cli
mov
add
push
dec
xchg
and
mov
adc
inc
cmp
inc
adc
push
sti
inc
push
sub
dec
int3
aas
add
xor
inc
cltd
aam
dec
xchg
sub
and
add
frstor
lcall
push
mov
xor
dec
es
addb
xchg
aas
je
lcall
jecxz
shlb
js
or
sarl
dec
or
sub
bound
pop
add
push
mov
dec
sahf
xor
and
outsl
mov
popa
jp
pushf
jnp
call
pop
sbb
es
rcr
mov
ss
mov
mov
xchg
mov
jae
scas
clc
filds
in
hlt
fcoms
leave
sub
pop
jecxz
mov
and
loopne
sub
stos
fstl
lods
mov
inc
bound
cmp
movsb
cmp
mov
outsl
cmpsl
pusha
cmp
lds
pop
out
xchg
and
andl
inc
lret
or
or
cmc
or
call
sahf
cmc
xchg
mov
mov
inc
sub
push
dec
subl
in
stos
mov
sbb
mov
hlt
arpl
bound
mov
lret
add
mov
mov
sbb
xchg
out
push
in
sub
jo
insb
push
mov
inc
dec
mov
pop
lret
out
out
test
testb
jbe
sub
sub
aam
call
cmpsb
das
call
xlat
mov
orl
mov
push
out
cld
lret
lea
mov
shlb
mov
lods
mov
in
jecxz
or
dec
fs
std
push
push
movsb
rol
in
cld
push
xchg
in
ret
nop
nop
movsl
push
mov
or
mov
pop
sub
cmp
jnp
testb
adc
insl
sbb
pop
ds
popa
mov
jb
mov
mov
mov
inc
push
orl
xchg
and
xchg
xchg
les
sbb
add
mov
in
and
std
xchg
xchg
outsl
lahf
dec
stc
fsubs
sbb
inc
fnsave
mov
sub
in
cwtl
imul
and
std
lahf
ljmp
in
ret
je
fs
call
inc
sbb
sub
mov
cld
jge
stos
jnp
into
sub
jns
fldt
sub
or
in
mov
shl
cmp
jl
sub
adc
dec
jno
out
mov
dec
into
movsl
xchg
pop
jp
pop
outsb
pusha
push
sub
loope
sbb
call
bound
test
pop
and
mov
mov
add
fidivrs
cmpsb
cmpsl
popf
imul
out
imul
in
adcb
add
test
adc
stos
lcall
dec
pop
cmp
scas
add
add
mov
jg
arpl
or
cmpsb
hlt
mov
cld
jle
push
stos
cmpl
mov
jbe
and
xor
jne
jnp
ss
aad
jo
ret
stos
dec
js
int
shrl
and
scas
rol
stos
dec
jp
imul
sbb
hlt
outsl
adc
add
fsubs
mov
faddp
push
stos
jne
mov
jno
inc
movsl
xchg
mov
dec
outsb
adc
test
cmp
dec
and
mov
jge
mov
and
add
stos
add
data16
pop
loopne
movsb
imul
xchg
mov
add
adc
xor
pop
sbb
and
pop
jbe
and
mov
mov
adcl
std
push
mov
cmpsb
fbstp
inc
arpl
les
sub
js
push
pop
inc
xor
xor
mov
push
sub
dec
pop
cmp
mov
out
sbb
xor
xchg
in
and
popf
cld
fldt
add
mov
test
push
mov
pop
push
xchg
or
jge
iret
in
cltd
pop
lock
out
aaa
sbb
fwait
jl
fistpl
xchg
cmp
xor
das
pop
inc
or
and
inc
xor
fisubrl
frstor
mov
cmp
pop
push
pop
pop
sbb
idivb
dec
sub
sti
out
fbld
std
cs
enter
insl
sub
mov
out
adc
inc
out
adc
outsb
in
push
and
add
pop
xor
out
push
inc
shll
hlt
es
mov
lds
nop
nop
push
loop
clc
test
jecxz
test
in
mov
lds
clc
lret
pop
dec
sti
fistpll
scas
pop
sub
and
and
and
mov
enter
xchg
push
loop
lcall
add
test
mov
mov
mov
es
jns
xchg
xchg
mov
mov
mov
repnz
je
jne
push
jne
scas
flds
movsb
jge
vorpd
lock
mov
add
sbb
pop
movsl
icebp
test
out
cmp
sbb
or
insb
xchg
xchg
xchg
in
push
aas
and
jge
fcom
and
sbb
subb
aam
jo
aas
cmp
add
int
sub
cmpl
jecxz
dec
in
pop
push
sbb
jecxz
mov
pop
mov
push
mov
cmp
push
cmp
cwtl
jp
xchg
lahf
jl
cmp
mov
pop
add
pushl
sahf
stc
es
pushf
leave
cmp
or
sbb
cmp
insl
mov
or
int
add
and
dec
inc
and
adc
push
xchg
fisttpl
sub
scas
cld
int3
add
imul
imul
mov
pop
sbb
mov
aad
lds
jl
sbb
cmp
test
xor
xor
outsl
fisttps
rcrl
inc
aam
cmpsl
xchg
xchg
shlb
push
lods
loopne
or
jb
add
xlat
jecxz
or
popa
inc
jle
or
scas
pushl
into
pop
ljmp
fisubs
inc
jbe
fsubl
mov
sbb
sbb
loope
rclb
sub
pop
mov
xor
daa
js
repnz
mov
lock
xor
jle
or
fadds
jae
int3
pop
inc
push
loop
and
cltd
xor
stos
jecxz
push
loope
adc
mov
cld
mov
push
sub
dec
out
les
mov
scas
push
test
push
mov
nop
faddl
imul
add
sub
jge
pop
mov
jb
sahf
cwtl
push
mov
je
movsl
mov
fildl
and
int3
push
mov
jb
sbb
adc
cmp
sub
push
push
jb
ret
or
dec
sbb
and
inc
jge
je
test
push
hlt
mov
mov
xor
mov
add
jnp
test
cmc
jb
xchg
mov
into
xchg
std
daa
hlt
mov
sbbl
pop
fwait
in
repnz
fbld
dec
bound
dec
incb
mov
ja
add
sti
loop
in
sub
in
and
push
lea
rorb
xchg
pop
test
adc
in
iret
inc
stos
sbb
lcall
fstl
aam
adcb
xchg
mov
xor
adc
aad
sbb
fcmovbe
pop
inc
dec
xchg
sbb
notb
mov
mov
pushf
aas
xchg
or
stos
or
call
jnp
mov
push
mov
inc
test
dec
sub
jno
adc
sbb
enter
ffreep
cmp
and
jmp
frstor
mov
pop
test
mov
mov
leave
jns
pop
jmp
adc
fmuls
jno
scas
fsubl
or
ljmp
push
stos
stos
sbb
lahf
inc
sub
jle
jecxz
lahf
dec
lds
int
and
cmp
test
iret
std
js
xor
or
loope
xor
dec
shl
aas
outsl
adc
xchg
and
or
idivb
ds
imul
gs
mov
mov
stos
inc
fildll
push
test
xchg
xchg
cmpsl
lods
xor
fistps
test
jns
insl
lret
jno
sahf
movsl
daa
inc
mov
sbb
sbb
popf
jmp
sub
cmpsl
inc
leave
hlt
pop
xor
ja
in
pop
inc
jge
xor
add
xorb
fwait
test
inc
and
cmp
adc
shl
std
rcrb
xchg
jo
dec
sbb
mov
lods
adc
pop
shrl
sbb
dec
lcall
jbe
imul
rcrl
mov
lock
inc
imul
inc
ret
mov
dec
clc
repz
jb
jbe
xor
inc
out
xchg
lds
xor
ja
pop
dec
fs
inc
fsubrs
push
fcoml
mov
xor
in
cmp
out
mov
jp
mov
insl
je
inc
int3
push
inc
pop
jl
sti
xor
mov
repnz
jae
ficoms
scas
pop
jnp
aad
clc
add
call
dec
repnz
or
lahf
pop
cmp
push
repnz
mov
std
or
lcall
pop
xchg
lods
jno
sbb
test
rolb
jbe
pop
gs
popa
adc
sub
scas
add
pop
sub
sbbb
adc
push
pop
or
pop
inc
mov
mov
sar
adc
int3
loope
push
out
xchg
mov
sub
popa
dec
sbb
mov
cmpsl
rolb
lea
push
loopne
loope
lret
sub
pop
rolb
ret
into
xlat
push
loop
mov
or
sbb
mov
flds
push
mov
adc
sahf
inc
imul
fcomp
cli
fbstp
in
mov
call
in
ja
dec
push
lods
imul
mov
or
sbb
xor
mov
div
lret
mov
xchg
int
ret
or
notb
ljmp
int
test
pop
mov
mov
push
xor
sub
fsubs
rcrb
int3
cmp
bound
or
dec
pop
mov
jg
std
push
jp
adc
nop
cli
sbb
cs
cmp
gs
push
lcall
xlat
inc
cmp
loope
movsl
or
mov
movsl
mov
sar
popa
enterw
jne
in
pusha
lock
rcr
fcoml
sar
dec
les
inc
mov
cli
addb
aad
mov
mov
and
and
or
repz
jle
shlb
icebp
repnz
out
push
push
hlt
add
andl
mov
aaa
das
jmp
adc
or
inc
add
test
cltd
cmp
add
arpl
sub
push
insb
out
xor
daa
out
enter
sbb
pop
dec
push
loope
mov
hlt
sti
mov
out
mov
push
jmp
mov
outsl
dec
sarb
jecxz
aad
aaa
dec
pop
xchg
popf
bound
loopne
add
cs
cmp
or
mov
mov
adc
outsb
arpl
and
lret
push
mov
mov
mov
cmp
jmp
aas
daa
dec
mov
pop
pop
std
sarl
sub
outsb
loopne
mov
lea
inc
sbb
add
cmp
lea
adc
push
mov
loope
repnz
mov
adc
adc
pop
je
ffreep
add
xor
int3
lret
popa
mov
ret
repnz
jnp
outsl
test
push
ret
push
dec
fisubrl
pushf
mov
dec
call
fnstenv
outsb
jno
mov
jmp
add
xchg
or
mov
movsl
mov
fidivs
leave
push
cli
fldt
repz
xor
test
pushf
ret
sub
out
imulb
and
cmc
push
fsubrs
test
outsl
cli
aas
mov
xor
cmpb
jle
call
ret
pop
push
lcall
insb
jl
fdivl
xlat
mov
xchg
xchg
sahf
push
cmp
jle
sub
pop
mov
iret
shlb
roll
fbstp
rorl
sbb
cmpsb
ja
outsb
imul
cli
pop
hlt
adc
push
scas
int
addr16
push
push
mov
notb
rcr
lds
dec
pop
adc
dec
outsb
repnz
ret
cld
jl
inc
test
or
aad
mov
sbb
out
cltd
lea
lock
fstl
enter
hlt
adc
popa
mov
inc
cmp
jno
cs
cld
inc
outsb
xchg
push
popf
je
mov
push
popf
gs
mov
jmp
lock
lahf
nop
inc
test
stos
jae
ja
js
and
fsts
daa
push
adc
popf
jle
inc
cli
fs
fmuls
cmp
jo
les
mov
es
xor
and
fcoml
out
lds
and
jecxz
je
shlb
jmp
mov
fisttpl
repnz
out
mov
cmpsb
cld
push
int3
out
cld
cmp
push
sahf
es
mov
and
mov
adc
adc
sub
jno
aas
add
jl
mull
sbb
add
andb
in
xor
int3
xchg
or
insb
inc
dec
lahf
test
dec
out
or
lcall
fwait
push
sbb
xchg
push
enter
xchg
fistpll
inc
jns
data16
stos
mov
int
cmpb
push
in
data16
mov
test
jns
cltd
dec
into
or
sarl
cmp
push
out
movsb
mov
push
ss
psubb
lcall
mov
dec
mov
fildl
mov
cmp
popf
push
pop
inc
jno
js
popa
jnp
push
jp
ja
scas
out
lahf
cmp
xchg
int3
xor
xchg
sbb
std
rolb
imul
sub
test
jle
imul
mov
test
mov
or
stc
pop
test
int
and
decb
dec
pop
mov
jbe
xlat
sub
cltd
lea
out
xchg
cmp
lcall
call
les
dec
push
out
cmpsb
lret
into
jle
cmpsb
cmp
cs
dec
sar
mov
and
pop
shrl
jge
ds
int
sti
aam
or
cmpsb
lds
and
shr
jmp
pop
in
fwait
call
leave
sub
aaa
cmp
andb
jno
push
adc
inc
xor
mov
jle
jl
shr
cltd
cmpb
adc
out
orl
mov
addr16
enter
outsb
add
mov
xchg
and
cltd
testl
lahf
cs
cmpsl
dec
dec
jne
cltd
and
lcall
add
dec
repz
jge
fadd
divl
loope
les
pop
dec
adcb
add
push
js
sub
lock
mov
sbb
mov
cmp
lret
xor
cmc
xchg
mov
jno
jns
pop
jle
xlat
add
mov
imul
jmp
lret
inc
xchg
xchg
push
mov
lea
scas
gs
sahf
fldl
cmc
xlat
jp
les
stc
and
mov
stc
icebp
add
inc
add
test
adc
arpl
popa
outsb
scas
ficoms
outsb
jecxz
mov
mov
inc
add
mov
test
cmp
push
ja
inc
js
jg
inc
mov
outsl
js
sub
repnz
cltd
or
loop
mov
jecxz
push
dec
stos
xchg
add
mov
pop
in
sbb
push
inc
adc
and
mov
lds
or
xchg
cmp
fisttpll
adc
mov
adc
cmp
fs
or
sbb
test
cmp
sti
adc
int3
push
inc
dec
xor
ds
adc
movsl
and
mov
or
or
stos
sbb
loopne
push
rolb
mov
mov
adc
cs
and
mov
nop
adc
icebp
fdivrs
sub
cmp
xlat
enter
xor
push
sub
xchg
cwtl
aad
mov
loop
sbb
push
cmc
dec
es
mov
cltd
mov
in
mov
stos
push
lock
xchg
stc
sbbb
test
mov
dec
add
popa
and
push
stos
and
push
in
lahf
icebp
andl
jno
or
mov
xchg
in
push
popa
xchg
aas
cwtl
test
cmp
je
out
loope
stc
pop
movsl
mov
xlat
adcl
jne
hlt
or
sub
pop
ret
sub
pop
arpl
mov
shll
ficoms
mov
fisubs
xor
adc
push
jmp
cmp
testb
int3
hlt
jae
clc
test
inc
inc
cmp
sub
mov
jno
aam
jno
call
push
mov
or
cs
push
push
push
lods
add
adc
sub
fdivr
out
sub
xchg
cwtl
push
ret
or
sub
stos
jb
add
fldenv
adc
inc
or
add
gs
loopne
xor
cs
sbb
nop
notb
test
les
xcrypt-cfb
cmpsl
pusha
mov
jae
iret
or
xor
fs
test
incb
and
jmp
in
mov
call
fdivs
cmpsb
and
test
adc
mov
imul
sbb
jle
shl
mov
lahf
lcall
es
stc
xchg
enter
add
call
clc
jno
fisttpl
insl
sbb
fs
adc
daa
aas
cmp
xor
push
fwait
dec
cmp
imul
test
pop
xor
inc
cmpsb
add
or
scas
les
pop
arpl
pop
and
dec
shrl
int
sbb
mov
nop
xchg
jmp
xchg
fiadds
sub
ror
cmp
xor
and
and
outsb
jmp
and
push
outsl
iret
mov
mov
mov
lock
xchg
popf
notl
push
inc
lods
lods
sahf
jge
jecxz
popa
push
sbb
pop
cs
test
mov
scas
mov
dec
mov
and
push
and
das
jmp
in
cli
cltd
inc
cmp
xchg
fldcw
stos
mov
movsl
push
lret
roll
jne
fistl
xor
pop
dec
cmp
movsb
jb
sub
repz
push
sub
fidivrs
mov
icebp
pop
lds
daa
test
fcompl
data16
push
mov
in
fbld
sbb
mov
sbb
rcrb
mov
fwait
scas
mov
pop
mov
sbb
pop
cmp
popf
das
scas
cmp
sbb
sbb
dec
shl
mov
sub
mov
pop
std
iret
and
adc
pop
push
adc
rcrl
sahf
push
pushf
push
bound
mov
jle
sbb
sub
stos
xor
xor
cmc
xchg
ja
pop
xor
lcall
xor
jl
outsl
loop
add
jbe
mov
push
xchg
aad
mov
ror
mov
add
xor
add
in
cmp
rol
imul
or
and
stos
mov
mov
ja
fiadds
mov
sbb
sarl
gs
out
outsb
lahf
mov
xchg
add
subl
push
lods
les
dec
in
je
les
je
arpl
mov
jno
sbb
cmp
shll
out
push
mov
mov
add
mov
xchg
jecxz
jg
pop
insl
mov
mov
or
adc
xchg
addr16
inc
ret
dec
mov
sbb
mull
in
shll
cld
dec
push
mov
push
pop
loop
repz
sbb
mov
mov
cmp
es
stos
inc
push
or
push
push
sbb
repnz
jle
pushf
pop
es
sub
sti
fwait
mov
stc
imulb
cmpsb
inc
imul
add
adc
les
rcll
xchg
push
rolb
pop
xlat
add
in
mov
sbb
pop
roll
xor
mov
xchg
push
sbb
cli
mov
imul
mov
lcall
dec
jbe
add
bound
jno
movntps
cmp
in
insl
add
lods
cmp
mov
dec
lods
xchg
jle
dec
test
std
push
movsl
test
add
inc
mov
bound
leave
movsb
les
inc
daa
inc
sub
daa
cld
out
mov
cmp
xchg
dec
mov
aad
mov
sub
mov
arpl
and
ljmp
pop
pop
pop
loop
xor
jae
and
mov
sub
fnsave
push
sarl
insb
mov
pop
adc
cmp
add
push
test
aas
mov
bound
mov
test
jg
cs
pop
or
add
fsubs
mov
int
adcl
dec
mov
dec
xchg
pop
push
inc
sub
das
or
pop
inc
rorl
data16
mov
test
stos
push
mov
dec
or
pop
es
out
enter
mov
addr16
movsb
xor
mov
loopne
adc
mov
into
dec
dec
inc
cmp
xchg
jns
lret
pop
mov
mov
pop
jecxz
in
jne
inc
arpl
in
pop
sbb
addr16
xor
fldl
jecxz
sbbb
adc
loopne
or
js
cmpsl
add
or
add
or
jecxz
sub
pop
aam
pop
aaa
lcall
mov
sbb
pop
pop
jns
add
push
or
in
mov
scas
mov
xchg
mov
pop
add
mov
mov
xor
orl
sti
and
loop
mov
cmc
pop
lea
arpl
push
cmp
lock
jb
insl
pop
inc
imul
sbb
pop
xchg
jecxz
inc
out
das
add
subl
mov
stos
popa
dec
push
enter
out
and
cmp
popl
jo
lds
xchg
ret
adc
fimull
xchg
aaa
aam
je
mov
in
call
arpl
inc
jmp
fbld
cvtdq2ps
mov
movl
int
loop
adc
inc
lcall
sbb
cmpsl
or
mov
ss
mov
dec
cmp
jno
fimull
mov
mov
pop
int3
adc
enter
pop
subl
inc
lret
mov
inc
loop
fnstenv
dec
sbb
xchg
ljmp
push
mov
fiaddl
inc
fwait
mov
fidivs
push
rcr
dec
mull
and
out
frstor
or
fwait
or
sub
mov
and
insl
jg
sub
push
rcr
mov
sar
pop
sbb
mov
add
sahf
xchg
lret
dec
mov
outsb
fmuls
pop
mov
pop
call
ret
dec
xchg
push
adc
cmpsl
hlt
add
xlat
adc
cmp
mov
xor
dec
insb
inc
mov
or
mov
test
and
pop
out
out
dec
fcomip
pop
movsl
and
fbstp
inc
int
rorl
dec
movsl
mov
push
push
xchg
movsb
fstps
ret
cmp
inc
ficomps
sbb
fld
and
rcrb
add
fiadds
xor
sbb
mov
lahf
add
ljmp
out
mov
ret
adc
push
push
ss
jl
movlps
test
fs
popf
fstpt
mov
push
aam
imul
lret
push
pushf
dec
xor
cmpsl
and
push
adc
minps
cmp
ret
mov
rorb
mov
mov
push
outsb
lods
pop
negb
in
mov
loop
clc
call
jae
inc
sbb
xor
jae
pop
push
xrelease
in
ficoml
mov
push
nop
and
or
scas
lcall
or
scas
fldenv
clc
adc
outsl
test
scas
jb
out
scas
dec
mov
jecxz
push
outsb
adc
mov
pop
jne
add
mov
add
movsb
js
adc
ljmp
adc
pop
adc
adc
out
cmp
lret
xchg
push
or
gs
push
dec
jnp
pop
cmovns
mov
jecxz
ljmp
frstor
bound
cmpsb
aad
scas
and
or
lods
int
mov
aam
adc
pop
jb
jns
jae
adc
stc
ror
lock
xchg
shrb
push
xor
mov
mov
dec
jl
movsb
sbb
adc
popf
xchg
xor
pusha
mov
xchg
inc
xlat
cli
xor
stos
loope
aad
push
push
mov
adc
cmpsl
inc
fsubrp
cmpsb
mov
idivb
xchg
dec
shr
in
lahf
xchg
and
out
pop
adc
mov
test
std
out
addr16
jecxz
mov
in
rolb
pop
xchg
mov
inc
jae
cmpsl
test
out
jle
insl
jne
dec
ja
push
imul
sub
mov
mov
and
push
push
call
cmpsb
sub
ret
ret
cli
mov
mov
popa
out
add
lods
mov
or
or
jmp
test
fmull
mov
fstl
pusha
pusha
hlt
call
mov
incl
mov
hlt
dec
jecxz
rol
incl
addr16
pop
and
out
aas
xor
fsubs
adc
mov
add
add
daa
lods
sbb
lds
ret
xor
push
and
adc
mov
aam
cs
stos
xchg
imull
ljmp
jno
add
aad
push
test
aaa
ret
and
popa
arpl
mov
pushf
insl
insl
fwait
cmc
imul
loope
fcoms
jnp
xor
dec
jb
pop
lods
dec
ja
and
pop
dec
xchg
sbb
add
clc
imul
lcall
lahf
cli
pop
pushf
cmp
or
shl
or
mov
int
pop
pop
pop
adc
and
sbb
mov
mov
xchg
imul
stc
sbb
mov
pop
aas
sub
push
mov
fcoml
clc
push
push
inc
rcr
imul
mov
push
fsubrl
rorl
mov
cmpsb
push
fwait
sahf
sbb
xchg
bound
pop
cld
mov
jp
rcrb
jne
lock
cmp
cld
add
cmp
push
aam
cwtl
repnz
push
test
xorb
fldcw
aad
add
jecxz
insl
push
cmc
call
dec
xchg
and
push
cmp
push
pop
lcall
sbb
sbb
inc
stos
push
lahf
movsl
loope
sbb
leave
sub
sub
adc
push
stos
inc
mov
lods
adc
cmp
sub
mov
stc
pusha
sbb
add
jo
mov
arpl
sub
and
lcall
addb
or
movsl
mov
adc
mov
in
out
scas
pop
test
ss
xchg
pop
popa
jmp
dec
pop
mov
jno
mov
dec
xchg
jle
and
lds
xlat
xor
test
test
push
jecxz
in
arpl
xor
inc
test
fwait
imul
popa
icebp
push
jmp
mov
test
in
xorl
mov
mov
jecxz
scas
ret
outsl
cmpsl
xchg
sub
in
xor
mov
jnp
pushf
les
int
into
mov
andb
aam
data16
das
sub
dec
cli
adcl
pop
mov
and
data16
xchg
lea
and
test
rcll
mov
ja
mov
xchg
sbb
and
dec
jle
shr
cld
loop,pn
push
popa
mov
pop
lret
sub
fcmovnbe
mov
mov
sbb
push
stos
leave
stc
pop
into
sub
dec
adc
jge
test
xchg
dec
push
fwait
cmp
sarl
pop
ficompl
psrlq
sub
mov
pop
xor
mov
rorl
out
jb
imul
mov
add
bound
sub
jb
inc
aam
das
dec
dec
loop
or
and
mov
dec
lret
sub
inc
inc
jno
cmc
push
in
jmp
push
or
cld
sti
inc
mov
bnd
inc
ja
or
lret
or
adc
aam
xchg
sbb
sbb
adc
ret
pusha
or
mov
call
fbstp
addb
add
or
mov
sbb
fs
mov
mov
leave
in
jg
dec
jmp
in
stos
jl
inc
cmp
mov
rolb
nop
sub
xchg
push
xor
pop
clc
jl
in
nop
xchg
jl
xchg
arpl
lock
fnsave
movsb
lock
jns
aas
fldt
ret
repz
mov
jg
mov
push
sti
in
jle
push
jo
cmp
sbb
clc
imul
adc
ret
fstps
fidivrl
mov
cmpsl
pop
xchg
lea
cli
jnp
aas
jnp
pop
orb
pop
cli
test
sbb
add
xor
movsl
mov
xchg
outsl
bound
add
push
push
xchg
push
xor
and
xor
lea
call
jo
pushf
aas
clc
dec
and
rcrl
divl
ret
sub
lds
mov
rcr
and
enter
fwait
les
sub
mov
push
ja
sbb
mov
mov
sub
and
jg
add
leave
pop
push
inc
and
adc
pop
push
stos
mov
int
pushf
ss
add
xchg
das
xchg
sub
xor
mov
daa
mov
movsl
cmp
push
push
in
stos
imul
sbb
lods
lret
mov
iret
jle
mov
lock
pop
or
dec
cmp
dec
imul
dec
loopne
jmp
xor
daa
shll
mov
cwtl
adc
sub
pop
decl
popa
shrl
sbb
aam
cmp
movsb
cli
or
test
xor
lea
or
cmp
xor
sti
int
inc
incb
mov
xchg
sti
cmpsb
lcall
les
out
pop
lea
es
cltd
mov
roll
sbb
into
xchg
jo
into
je
xor
xchg
test
notb
and
outsb
mov
push
movsb
cltd
cmp
push
or
jg
movb
pop
adc
sbb
xchg
jge
shll
shrb
leave
scas
cmpb
rcrb
mov
loop
or
pusha
in
and
pop
outsb
ljmp
insb
dec
es
outsl
mov
testb
inc
sub
add
pop
add
pop
push
imul
popf
xchg
or
in
imul
pop
inc
mov
loop
inc
adc
in
pop
and
xor
xchg
test
loopne
insl
inc
and
outsb
fs
fdivs
data16
sbb
or
lret
inc
cmp
sbb
fwait
out
jne
jbe
decb
ror
rcr
imul
pop
test
dec
pop
add
lods
aam
mul
cmpl
out
sbb
aam
jno
sub
pop
and
and
dec
daa
pop
daa
adc
pop
dec
test
push
sbb
lcall
mov
and
xchg
mov
jmp
icebp
bound
fwait
mov
rcrb
lret
aaa
sbb
push
push
lahf
mov
imul
mov
int3
imul
loope
or
js
mov
fdivrs
dec
mov
in
leave
arpl
gs
xchg
in
mov
xchg
mov
sbb
shll
popf
std
fstps
hlt
dec
dec
or
pop
push
divb
sub
imul
cmpsb
test
pop
inc
dec
sbbb
jmp
jg
sub
jg
ljmp
sub
sar
or
dec
cmp
aas
addr16
sub
push
icebp
dec
clc
clc
sti
dec
lret
shl
push
or
inc
icebp
push
mov
cltd
jmp
sbb
push
pop
outsb
or
mov
enter
rcll
cltd
xor
leave
jg
mov
jg
test
push
bound
jb
mov
ficoms
xchg
shrb
movsl
pushf
dec
inc
loopne
mov
pusha
out
scas
jmp
jge
jmp
jae
mov
pop
rol
cs
icebp
xor
xchg
or
lds
arpl
mov
rcrl
add
pop
mov
js
or
mov
xchg
cld
mov
jmp
inc
fimuls
push
jge
mov
mov
shr
cli
in
mov
rcll
scas
sti
jmp
mov
xchg
mov
mov
outsb
fcoms
sbbb
inc
rcll
mov
idivb
sbb
mov
sub
clc
fcmovne
fld
out
adc
sub
in
clc
jmp
insb
sbb
iret
sbb
xorb
jns
cld
mov
inc
inc
aaa
pop
aam
inc
pop
dec
adc
imull
jecxz
sub
pop
push
cli
add
idivl
lds
mov
icebp
es
mov
leave
fbstp
inc
mov
mov
mov
mov
xchg
imul
out
add
clc
loope
pop
mov
xor
push
cmpsb
jg
outsl
add
add
repnz
vcvtps2pd
xor
loopne
sub
jg
jle
outsb
and
jae
push
dec
and
in
sub
pop
xor
inc
mov
lret
cmp
sbbl
imul
int3
sarl
test
sbb
mov
or
rorl
cmp
fmuls
or
stos
scas
xchg
bound
push
nop
testb
lds
adc
lahf
adc
push
cmp
xor
add
pop
aas
imul
inc
shl
dec
insb
add
cmc
push
push
mov
or
xchg
xlat
es
sub
adc
in
jae
xor
inc
jle
jno
cmc
jp
jo
jae
xor
int3
cmp
sbb
out
xchg
pop
pop
and
les
jno
outsl
lock
xchg
aaa
jns
and
lock
push
dec
pushf
fstpl
pop
mov
add
popa
adc
stos
push
bound
mov
iret
sbb
xchg
push
mov
lahf
sbb
shlb
adc
mov
pop
jge
clc
sbb
add
popa
cld
push
outsl
in
mov
or
and
clc
sbb
rcl
cltd
movsb
and
and
cmp
loop
pusha
add
mov
int3
mov
sbb
adc
popf
ljmp
sub
aad
mov
lahf
mov
mov
jl
push
popf
xchg
mov
push
sbb
daa
mov
insl
loopne
fstpt
addl
mov
addr16
push
jecxz
mov
adc
mov
jl
pop
mov
sbb
es
mov
or
loopne
jmp
mov
jne
add
clc
and
adc
sub
fld
out
or
and
mov
hlt
pop
xchg
outsb
inc
nop
pop
sub
test
arpl
add
sarb
bound
mov
in
push
mov
shr
push
lock
pop
mov
ja
movsl
sbb
stos
iret
ja
pushf
inc
or
mov
ds
mov
sti
aaa
jo
psrlq
xchg
sub
aad
test
outsb
cmp
aad
daa
inc
test
add
add
xchg
shrl
adc
pop
mov
mov
dec
xchg
cmpb
mov
pusha
mov
cmp
fdivs
adc
insb
vmovsd
dec
ret
mov
dec
inc
insl
push
mov
lods
lods
push
fidivrl
pop
xor
repnz
pop
mov
pop
jne
sti
mov
jle
icebp
cmc
lock
cmc
sbb
xchg
add
or
and
jmp
add
aas
or
imul
das
cmp
mov
and
mov
lret
imul
mov
sbb
imul
cli
xlat
inc
mov
hlt
xchg
mov
add
popf
aad
enter
dec
imul
imulb
mov
xor
fldt
pop
sbb
sbb
fwait
sub
add
jg
roll
push
sti
and
fidivrl
jmp
adc
pop
mov
data16
les
out
nop
mov
nop
divl
pop
adc
pop
mov
inc
xchg
xchg
shlb
lock
jp
and
mov
sahf
add
lret
mov
mov
add
mov
xchg
inc
test
scas
mov
notl
cmp
mov
pop
dec
sub
push
cmpsl
scas
cmp
or
in
and
fistps
nop
or
popa
sbb
add
bound
cmpsb
ljmp
popa
adc
xor
dec
test
notb
fdivrl
xchg
mov
jp
or
pop
fwait
adc
push
scas
js
andl
out
jno
popa
dec
test
jecxz
mov
or
bound
stc
stos
call
sub
add
data16
sbb
ret
outsb
faddl
cmpl
xchg
fistps
sahf
ss
cwtl
in
sub
addr16
xchg
pop
lret
mov
lods
add
enter
push
xchg
sahf
dec
mov
xchg
push
push
mov
je
in
mov
lock
adc
and
mov
push
in
xlat
jmp
insl
mov
pop
jne
sti
fs
cli
push
out
mov
popa
outsb
js
call
mov
mov
inc
pop
push
push
movsl
lret
mov
push
stos
cmp
addb
pop
aad
loop
mov
andl
xor
inc
ljmp
dec
fstps
cli
sub
popf
int
insb
pop
sub
mov
jge
test
ret
push
stos
cld
repz
gs
lock
jo
jne
jg
adc
into
addr16
gs
cmpsb
pushf
jne
lahf
dec
cmpsb
clc
mov
test
sub
sub
sbb
leave
es
jge
xor
lahf
insb
imull
xor
mov
jbe
push
xchg
insl
xchg
mov
xchg
stos
lret
cwtl
adc
xchg
orl
in
mov
fnstcw
xchg
and
inc
mov
cmp
rol
nop
or
fmulp
arpl
sub
push
jae
push
mov
jge
pop
pushf
xchg
mov
xchg
cld
in
rcrl
lods
int
adc
stos
mov
cmc
pop
push
cmovb
repz
inc
pop
adc
rolb
jae
sar
mov
push
popl
pop
dec
movsl
or
push
push
lds
lods
push
jbe
es
cld
fidivs
jle
mov
sub
mov
push
sbb
mov
idivl
lret
fs
ljmp
je,pn
popa
mov
sub
call
inc
xchg
pop
cmp
push
adc
push
cmp
or
push
inc
adc
jge
out
xchg
mov
pusha
insl
lock
test
lret
push
testl
and
dec
and
inc
mov
dec
jne
xor
inc
out
icebp
push
bound
ds
mov
lods
and
mov
or
outsb
mov
add
nop
call
push
cmp
ret
mov
jno
pop
insl
xchg
and
pop
pop
imul
fldcw
nop
pop
dec
sbb
push
pop
mov
pushf
in
mov
out
lret
pop
loopne
push
cwtl
aam
nop
dec
pop
mov
jbe
movsl
fdivs
leave
icebp
sub
push
lgs
popf
nop
daa
jae
pop
and
sarb
cmp
xchg
xlat
jo
mov
lret
aas
xchg
and
mov
jle
push
pop
inc
repz
push
sub
push
mov
or
nop
ror
cmpsl
rorb
fisttpll
mov
dec
xchg
ret
inc
sub
or
sbb
mov
push
fmuls
mov
cwtl
inc
pop
sbb
inc
andb
loop
add
push
lret
push
cli
pop
mov
outsb
xchg
push
cmp
cmpsl
mov
pop
insl
sbb
push
sub
lock
lahf
test
mov
mov
mov
xor
jge
shll
xchg
ficoml
xlat
into
xor
daa
aaa
aaa
push
mov
push
xchg
pop
pop
push
movsl
cmp
mov
mov
fwait
jmp
pop
out
mov
xchg
xor
inc
adc
jp
popf
mov
fidivs
scas
lahf
notb
cmp
cmp
pop
mov
add
jp
je
pop
outsb
loope
add
sub
test
jl
sbbl
test
xchg
jo
mov
sub
stos
add
add
and
cmc
push
mov
call
aam
adc
clc
mov
in
movsb
jge
fwait
movsb
mov
dec
push
and
and
and
sub
les
arpl
cs
jo
jae
inc
sbb
hlt
test
sbb
push
das
cmp
aas
xchg
mov
mov
xlat
inc
mov
stc
orb
data16
insb
sbb
repz
andb
out
pop
add
mov
or
aaa
adc
into
sbb
sub
adc
test
insb
mov
xor
and
dec
add
cli
mov
mov
into
mov
loop
pop
sbb
jb
ja
aam
mov
sahf
sarl
dec
pusha
repnz
push
lods
and
jae
lds
and
fsubl
adc
cli
push
ret
ja
dec
std
movsl
mov
and
aad
and
cmp
mov
jl
adcl
data16
sub
insl
daa
pop
xor
sbb
cmp
mov
xchg
mov
faddl
ja
mov
lahf
and
sbb
mov
adc
mov
inc
cmp
insl
out
insb
loopne
rcl
push
rorl
testl
outsb
cld
cmp
ljmp
sbb
mov
cmovs
popf
mov
mov
cmp
dec
clc
xor
sub
mov
cs
fsubp
inc
lret
mov
add
xchg
xchg
movsb
xor
loope
xlat
sbb
test
jge
aam
repnz
pop
into
mov
add
js
add
mov
sbbb
jmp
adc
enter
aam
inc
fnstenv
xor
sar
orb
push
cmp
out
cmp
xchg
js,pn
cwtl
or
sbb
mov
imul
aaa
insb
and
xor
outsl
sarb
xor
shrl
jnp
cs
and
jb
out
loop
mov
or
icebp
aam
outsb
sti
out
movsb
pop
pop
and
jno
bound
cmp
xchg
fwait
xor
mov
push
mov
xor
pop
out
jecxz
pop
xchg
int
xlat
dec
dec
ljmp
fbld
out
xchg
xor
out
fcmovbe
clc
or
jno
jp
push
mov
jmp
sbb
and
cmpsb
je
sbb
xchg
iret
xchg
lods
cmp
sbb
xchg
test
jmp
addr16
dec
jmp
pop
mov
int3
jmp
inc
inc
mov
jg
outsb
pusha
imul
jge
xchg
jnp
adc
shlb
imul
scas
jno
and
test
repnz
jl
nop
hlt
mov
adc
cmpsl
out
movsl
xor
xor
leave
xor
out
cmp
add
in
xor
mov
dec
adc
cs
xorl
or
push
sahf
ds
push
jae
push
push
fimuls
push
arpl
lods
das
jns
inc
ss
ror
int
lds
cli
xlat
mov
ficoms
mov
aam
pop
in
add
sub
cmpsb
mov
rolb
adcb
xor
pop
clc
or
sbbb
mov
mov
jecxz
or
dec
cmp
mov
iret
mov
adc
push
dec
pop
rorl
rol
push
dec
or
cwtl
mov
and
scas
fwait
push
gs
fnstcw
int3
inc
iret
pop
std
mov
mov
push
imul
push
mov
out
repz
je
das
scas
and
popa
and
lcall
cmp
adc
js
mov
xchg
test
popf
bound
and
push
int3
sbb
pop
or
mov
cmp
jae
push
cmp
scas
test
push
sbb
stos
mov
mov
adc
mov
enter
mov
mov
ret
orl
or
ja
or
ljmp
add
lds
jbe
or
xchg
mov
fistpl
jbe
jo
fldl
les
icebp
repnz
clc
mov
imul
notl
fucomip
adc
mov
cmpsl
push
dec
push
shlb
sete
outsb
mov
adc
clc
in
bound
cli
pusha
sub
xor
iret
dec
popa
aad
pop
mov
rcll
xor
fisttpl
outsb
mov
or
rcrl
and
outsl
mov
pop
lock
push
or
dec
insb
test
pop
jp
les
cwtl
inc
mov
test
jo
jle
jne
aas
adc
xchg
loop
push
xchg
hlt
cld
xor
jge
aas
orl
dec
enter
or
lret
stos
mov
push
add
pop
adc
mov
xchg
inc
out
sbb
jae
sub
and
das
mov
mull
mov
pop
repz
and
pop
mov
aas
test
jg
lret
in
test
cwtl
mov
or
int
and
add
cld
inc
inc
insl
int
or
aam
push
cli
jmp
jp
push
mov
add
sbb
pop
js
shrl
mov
pop
clc
call
xlat
dec
sbb
or
popf
clc
adc
inc
movsb
enter
or
sbb
in
cltd
iret
cltd
scas
adc
sub
xor
jno
xchg
sub
sub
push
rcl
repz
lret
fildll
jbe
or
mull
lock
and
mov
shl
mov
push
rcl
ret
mov
xlat
xor
mov
sub
loopne
mov
cmc
int3
mov
cmpsl
dec
push
mov
shrb
push
pop
add
mov
ror
shll
pop
insl
mov
add
add
in
pop
test
lahf
jl
dec
or
cmp
int3
and
sbb
add
outsl
pop
addr16
fdivr
mov
outsb
mov
jl
push
insl
je
push
jg
pop
inc
cmp
and
mov
xlat
push
push
pop
aad
push
sub
in
push
leave
push
movsl
enter
out
mov
leave
div
jns
adc
movb
push
jge
lahf
jae
xor
bound
pop
mov
lea
cmp
mov
lods
cmpsb
add
shlb
mov
lock
jecxz
push
outsb
xor
fstpl
fbstp
ljmp
pop
sub
insb
xlat
push
outsl
gs
xor
xchg
inc
in
jne
rorl
xor
nop
arpl
shr
sbb
xchg
cli
cmpsl
sub
push
mov
sbb
push
cmp
gs
shlb
and
inc
sti
cs
pop
mov
sub
inc
xor
mov
rcll
cmpsl
add
sub
int3
mov
fadds
lret
add
jmp
test
pop
aas
subl
xchg
mov
dec
cltd
aam
jo
loop
dec
cli
fwait
adc
or
cmp
push
inc
mov
push
mov
xor
adc
pop
push
xchg
aas
xor
lods
xor
testb
push
cli
xchg
fnstenv
add
pop
rcrb
pop
call
lock
inc
inc
pop
mov
shrb
or
sbb
sub
lock
sbb
int3
roll
sbb
out
pop
cmp
jns
mov
mov
fstps
sahf
das
mov
cmp
sahf
loop
xchg
test
cmp
mov
es
xchg
mov
sahf
sbb
lret
dec
cmc
pop
inc
aad
push
outsl
xchg
mov
cmp
enter
xor
scas
rcll
inc
icebp
sbb
inc
mov
stos
jne
pop
push
add
test
jmp
add
imul
leave
add
inc
cmpsb
adc
xchg
loope
xor
ficompl
js
fldcw
fiadds
into
sahf
popf
jo
mov
xchg
pop
out
ljmp
stos
outsl
dec
andb
jb
xchg
push
mov
add
rcl
pop
shrl
and
test
mov
loope
pop
pop
pop
inc
movsb
push
push
test
mov
es
outsb
and
jl
cmp
dec
add
mov
icebp
pop
jns
sahf
mov
popa
sti
daa
adc
cmp
push
stos
cli
and
jnp
dec
sub
test
orl
sub
lock
mov
dec
pop
mov
out
inc
push
js
xorl
jbe
pop
bound
loop
xor
add
imull
lods
pop
add
sbb
pop
nop
data16
loope
mov
sub
lock
sub
clc
popa
ss
add
push
ret
notb
jle
jmp
pop
xchg
mov
sbb
cmp
fbstp
mov
fwait
stos
push
mov
xlat
out
mov
xorb
pop
push
lret
pop
test
int
or
sahf
and
mov
call
sahf
xchg
fstps
jb
jb
hlt
notb
xchg
fs
loope
lea
push
xor
cmp
ret
aad
sbb
insl
inc
das
cmpsb
xchg
fistpll
xchg
pop
and
xor
das
adc
mov
or
or
dec
inc
cmpsb
mov
arpl
das
add
das
cwtl
lret
ljmp
xlat
or
cmp
repnz
popa
mov
pop
cmpsl
inc
xor
cmp
je
dec
pop
xor
mov
pmullw
sub
js
pop
adc
repnz
mov
mov
stc
push
stos
or
std
sub
push
xchg
push
jns
es
lods
enter
or
leave
aas
xchg
arpl
jmp
add
or
rolb
pop
add
stos
pop
pop
sbb
xchg
pop
out
movlps
aad
fcmovb
or
cmp
dec
lods
inc
fsubrl
popa
std
xchg
pusha
xor
push
fnstenv
cmp
int
jo
cmp
pop
dec
mov
ja
or
sqrtps
inc
push
adc
aad
inc
add
dec
stos
and
jmp
inc
lcall
addr16
mov
dec
push
adc
lods
adc
cmp
adc
pop
clc
jmp
sbb
outsb
sub
jl
test
aad
arpl
notb
lock
iret
out
loope
xlat
clc
es
das
cmp
das
push
rcrl
pop
addr16
xor
push
test
inc
cs
lret
fdivrl
bound
mov
mov
adcl
loopne
pop
pop
cmc
loope
and
jp
cmp
pop
sbb
pop
lods
daa
scas
rcrb
xchg
in
xor
push
jecxz
enter
clc
mov
push
add
xchg
mov
ja
es
cmpsl
push
jecxz
sub
xchg
bound
lea
push
or
es
mov
repnz
jge
mov
sub
popa
dec
cld
fmuls
xchg
fildl
flds
andb
adc
test
sub
xor
dec
js
mov
mov
adc
lods
mov
dec
fbld
or
out
rolb
sbb
test
xlat
sbb
xchg
sub
jle
adc
repz
aas
testl
mov
ffree
xchg
flds
xor
ret
adc
jmp
pushf
dec
xchg
pop
mov
aad
call
pop
ret
pop
sbb
pop
push
pusha
int3
aaa
sbb
inc
xor
std
dec
pusha
cltd
call
aam
xor
sbbb
popa
jmp
dec
mov
outsl
shl
xor
hlt
adc
icebp
xor
aas
mov
test
sbb
aam
ds
xchg
int3
pop
jg
xchg
cwtl
mov
add
jmp
int
aam
mov
fstps
and
mov
lea
std
xchg
sbb
jp
popf
jp
incl
dec
test
jl
call
mov
inc
pop
fld
jge
loope
shll
mov
jle
mov
sbb
inc
clc
pop
inc
pop
pop
out
xor
lds
mov
aaa
movsb
xor
pop
push
cltd
stos
fwait
divb
xchg
popf
or
xor
ret
mov
loopne
sub
fisubrs
inc
xchg
std
sti
inc
lcall
mov
and
jbe
mov
mov
cmc
cld
outsb
jmp
inc
imulb
mov
xor
cmp
cld
mul
and
xchg
jno
cmp
add
pop
out
aad
mov
call
gs
inc
xor
addb
and
dec
mov
pop
jmp
loope
in
mov
or
cltd
or
cmpsl
mov
pop
int3
hlt
ficomps
scas
jle
xor
int3
roll
add
pop
je
and
insl
adc
push
adc
leave
cmp
cmp
jns
mov
test
mov
cmpsb
gs
outsb
inc
lods
stc
and
ds
sub
test
push
cmpsl
neg
cmp
inc
add
pusha
lahf
pop
mov
pop
sti
lods
popf
icebp
xchg
cmpsb
push
mov
cld
int3
gs
xor
mov
mov
dec
xchg
push
pop
adc
jnp
and
bound
add
mov
imul
add
js
push
xchg
in
fidivl
jbe
repnz
repnz
sub
imul
and
test
divl
adc
lcall
mov
dec
dec
je
addr16
and
mov
imul
mov
dec
pop
xchg
in
divl
adc
add
lds
in
mov
xor
insb
fisubl
or
gs
pushf
sbb
jb
cmc
cmp
adc
lea
jb
int
shl
and
sub
bound
add
insb
fdiv
adc
aam
dec
fbld
lret
std
mov
insb
shrb
dec
mov
and
ror
test
jae
and
aam
mov
out
test
dec
fiaddl
lods
push
jmp
dec
push
add
push
iret
mov
aad
mov
fistl
test
or
cli
mov
in
aaa
gs
lea
or
mov
cmpsl
cmp
xchg
push
nop
aas
adc
fiadds
rcr
jmp
fmull
lods
lret
ds
mov
inc
and
jl
imul
cmp
test
movsb
ljmp
push
push
das
movsl
decl
sub
sbb
mov
push
ja
int3
jae
mov
xchg
gs
outsb
insl
or
out
xchg
inc
iret
fstps
lods
divl
aad
mov
stc
jp
adcb
imul
je
sub
test
sahf
mov
inc
lods
push
jo
adc
cmp
pop
icebp
ret
loopne
mov
xchg
mov
sahf
aam
sub
mov
loopne
in
cmp
jne
jbe
iret
inc
fwait
insb
mov
cltd
push
push
imul
dec
xor
jns
mov
aaa
sub
sbb
jl
cmp
loopne
sbb
pop
jo
das
and
imul
and
inc
xchg
pmaxub
pop
arpl
leave
pop
or
sub
insl
push
xchg
dec
sub
mov
mov
or
lcall
jg
fsin
mov
data16
test
ret
push
daa
xor
mov
or
loop
gs
or
rorl
push
mov
lea
rcr
add
and
adc
xchg
dec
orb
leave
ret
popw
fdivl
cmp
dec
iret
pop
cli
inc
icebp
xor
cmc
push
setno
jae
inc
cmp
movsb
cmp
insb
icebp
out
shll
icebp
cmpsb
out
and
inc
std
pop
pop
mov
dec
sbb
sub
out
adc
jecxz
scas
jbe
and
push
sbb
jmp
xor
cmpsb
pop
inc
sbb
pop
ret
dec
mov
or
push
icebp
shl
mov
fucom
lock
xchg
clc
dec
push
ror
pop
scas
add
and
push
mov
fs
sub
test
nop
dec
adcb
js
xchg
jo
sbb
clc
push
ret
scas
dec
add
sbb
and
xor
pop
sbb
xchg
std
jl
pop
jne
cmp
sbb
fsubl
jo
mov
pop
lret
cmp
cmc
mov
sub
lods
out
cmp
test
inc
or
fcmovu
dec
movsb
sar
cmp
jp
icebp
std
out
movsb
push
mov
jp
cmc
and
add
cmp
jle
push
or
fisubrl
test
mov
lock
xchg
and
sbb
push
add
loopne
or
sub
xor
push
idiv
xlat
and
fs
scas
ss
inc
imul
popa
je
aas
sub
ret
mov
ret
adc
cmpsl
fiadds
movsl
pop
clc
push
es
mov
push
add
dec
sbb
sti
mov
sub
push
in
and
ror
inc
fbld
iret
aad
lret
push
jl
jge
int3
popf
test
mov
jmp
popf
or
faddl
cltd
jge
mov
push
ja
xchg
adc
sub
push
xor
mov
ds
mov
iret
fdivl
outsl
sahf
adc
rorl
lcall
jmp
outsb
insb
inc
mov
das
std
xchg
repnz
or
vmread
cmpl
cmc
or
es
aas
jbe
inc
sbb
out
push
inc
addr16
dec
push
leave
dec
paddsw
add
les
fwait
sub
jmp
scas
ficompl
mov
notb
imul
sub
push
loope
lret
outsl
push
mov
push
jle
mov
xor
mov
int
call
inc
pop
push
clc
stc
imul
imul
adc
nop
push
fsts
pop
mov
aas
xor
xchg
iret
dec
ffree
xor
sub
jecxz
sbb
int3
xor
xor
insb
mov
pusha
aam
adc
pop
cmpsl
xchg
into
ficomps
mov
or
je
pop
jo
mov
xchg
add
sbb
mov
push
fsubl
push
mov
or
xchg
insb
push
sub
shlb
and
add
pop
fadds
xor
inc
jl
jg
inc
arpl
incl
adc
mov
xchg
fbld
push
in
or
or
les
addr16
push
cmp
mov
sub
lods
dec
mov
arpl
cltd
lods
lret
lods
ret
test
repz
mov
loope
xor
orl
jne
mov
popf
dec
cmp
flds
into
mov
jg
mov
xor
popa
push
push
cmpsl
adc
fistl
nop
dec
jle
sbb
xlat
add
scas
rcrl
mov
jl
mov
scas
push
dec
inc
fildll
bound
int
lcall
lods
cmpsb
scas
scas
xor
in
stos
rolb
mov
push
mov
lods
cmc
push
notrack
mov
daa
repnz
in
ljmp
mov
mov
rclb
adc
xor
xor
sub
push
jnp
es
sub
scas
mov
pop
push
int3
xchg
in
mov
inc
jge
inc
cmp
lds
mov
add
clc
cmp
ret
ljmp
xor
jecxz
rorb
push
loop
stos
push
and
mov
icebp
sub
lret
idiv
cltd
xor
dec
jg
stos
pop
xor
loopne
sub
fmull
push
daa
shrb
push
or
in
mov
dec
pop
add
aad
dec
mov
mov
cmpsl
fmul
add
div
dec
insl
xchg
add
push
dec
adc
mov
sbb
movsl
ja
ja
or
mov
and
or
add
push
dec
adc
test
pop
into
data16
cmp
mov
mov
fs
mov
mov
jnp
pop
orl
dec
push
mov
shlb
jmp
xor
push
jmp
inc
push
fs
hlt
rep
fldt
pop
mov
pusha
ja
scas
fisttps
mov
es
mov
insl
fsub
mov
rcr
push
push
int
add
int
fs
sub
bound
pcmpgtb
cmp
push
or
push
cmp
mov
push
pop
mov
test
mov
jl
fldcw
aaa
jo
aad
notb
xchg
jmp
in
fidivs
popa
mov
and
out
or
loopne
test
push
int
fs
push
add
cld
dec
imul
pop
call
push
sbb
or
xchg
or
add
pop
ret
fidivrs
cld
ja
fildll
push
test
addb
xchg
mov
sbb
push
rcll
addr16
fisubrs
mov
xchg
push
inc
push
ljmp
push
jle
scas
jecxz
mov
sub
ljmp
call
rol
imul
pop
xlat
xor
scas
scas
inc
adc
lret
push
addl
stc
cwtl
loopne
fidivs
mov
outsb
xchg
cmp
popf
mov
loopne
mov
fdivrs
add
cs
jmp
mov
and
push
cmp
stos
pop
pop
and
or
pop
cld
mov
cwtl
fucomp
das
sarb
adc
jae
jg
scas
aam
in
mov
adc
xchg
adc
ror
push
icebp
in
notl
aaa
or
addb
call
cmpsl
lods
or
xor
dec
jbe
je
push
jg
in
fistpll
bound
mov
jmp
rcll
mov
pop
ret
lcall
bound
ret
ret
dec
out
mov
flds
jns
mov
and
les
xchg
fisubl
and
cmpxchg
jg
je
ljmp
stc
out
std
mov
dec
inc
pop
xchg
jae
jge
cmpsl
std
jae
pop
xor
push
popa
scas
mov
insl
dec
into
test
pop
je
sbb
sbb
push
call
xlat
imul
sbbb
adcb
xchg
mov
add
mov
pmaxub
adc
xor
sti
jl
mov
push
pushf
push
js
and
push
cli
cmc
pop
sub
jne
movsb
insb
jne,pt
leave
sti
jle
cmpsb
out
lret
stc
jl
mov
jnp
stos
pop
nop
cmp
dec
xor
arpl
xor
push
fsubrs
rcrb
jbe
ss
fisttpll
mov
loopne
xor
xor
out
sarb
in
mov
fdiv
rorl
dec
dec
add
cmp
sti
js
lock
xor
xor
sub
cmpsb
icebp
lods
pop
test
fnstsw
inc
or
inc
xor
lahf
push
lahf
notb
inc
inc
lret
sbb
dec
mov
add
test
nop
sub
stc
nop
jge
scas
xchg
cltd
mov
outsb
aam
adc
inc
pop
loope
lds
and
jb
mov
push
mov
ds
out
iret
fildl
inc
mov
dec
data16
ja
test
lods
adc
jne
andl
vpsadbw
mov
mov
adc
mov
icebp
adc
enter
dec
frstor
ss
xor
mov
es
cltd
add
in
test
and
pop
cmc
shll
dec
or
cmp
xor
ja
into
cmp
pop
jl
fistl
mov
sub
jl
push
xor
lahf
cmc
sub
jns
pop
and
xchg
clc
dec
mov
filds
lods
call
fiaddl
test
icebp
push
xor
xlat
inc
cmpsb
rclb
mov
fists
sbb
in
xor
dec
pop
add
pop
jbe
cmp
inc
call
mov
xchg
add
daa
jo
push
jns
call
ficoml
insl
outsl
sub
push
inc
pop
sbb
in
pop
movsl
sub
and
andl
sti
lods
into
test
cmpsb
pop
push
inc
cltd
jg
or
jne
xor
mov
mov
mov
xchg
es
shlb
xor
lods
mov
mov
rcl
icebp
or
lret
xchg
pop
popf
or
xchg
andl
xchg
jl
sbb
mov
lret
data16
pop
test
mov
mov
lea
into
push
nop
insb
mov
sub
or
sbb
add
mov
cs
mov
push
jl
add
lcall
jne
add
and
sub
push
loopne
and
mov
ss
mov
rorl
call
je
dec
cmp
push
jecxz
cmp
add
and
jo
enter
lahf
ds
lods
test
xchg
popl
gs
mov
idiv
clc
or
data16
cmp
leave
add
or
dec
sub
fldt
mov
inc
xchg
xchg
lods
xchg
lcall
out
test
sahf
cli
inc
addr16
mov
gs
adc
aas
mov
ja
test
lea
xor
aam
test
fwait
mov
inc
imul
push
enter
inc
out
call
shrl
pushf
outsl
test
shrb
scas
loopne
int3
xor
lret
shrl
jmp
push
sti
test
jge
sbb
pop
xor
movsb
sbb
cld
xor
adc
mov
pop
mov
push
mov
push
push
in
dec
adc
inc
jae
mov
les
mov
js
insb
mov
int3
push
dec
mov
jb
push
in
cmp
into
cmp
popa
cmp
sbb
loopne
cmpsl
in
mov
push
cld
mov
add
fimuls
fstpt
push
bound
rclb
out
add
jns
pusha
fmul
test
loope
adc
pushf
mov
adc
rcrl
int
mov
push
cmc
inc
xchg
mov
aam
mov
lret
xchg
mov
jns
dec
je
movsb
dec
cld
lcall
sbb
data16
in
or
push
jle
mov
aaa
repnz
push
mov
outsl
jbe
add
dec
je
cmc
loop
decl
inc
shrb
xchg
insl
mov
fisttpl
cs
push
mov
lea
sub
pop
cwtl
mov
mov
nop
pop
dec
repnz
pushf
cmc
cmp
inc
andl
leave
mov
push
jae
mov
ret
lahf
adc
cmpl
xor
outsl
dec
lret
pop
sub
dec
jnp
popf
sahf
xchg
roll
mov
adc
xchg
stc
push
push
mov
fs
sub
addb
out
or
push
jmp
or
lock
pop
pop
pop
mov
fcmovnb
jns
mov
mov
bound
insb
mov
mov
add
cmp
dec
scas
fistps
dec
movntps
adc
gs
aas
clc
jge
xchg
cmp
push
xchg
js
negb
jmp
lea
inc
mov
popl
pop
addr16
repz
nop
ljmp
test
sbb
sub
push
mov
mov
and
lret
adc
sbb
idivb
pusha
adc
fldt
or
rcl
iret
jnp
dec
pop
sbb
popa
and
and
stc
movsb
sbb
add
fsts
pop
xchg
orb
mov
mov
insl
aaa
xchg
inc
jge
shlb
in
jle
inc
daa
mov
mov
or
mov
ss
mov
mov
shrb
notb
or
ret
jl
shrb
outsb
dec
int3
xchg
es
xchg
adc
jb
lea
xor
out
data16
js
add
sub
push
add
rcll
cmpsb
notl
mov
xor
das
mov
mov
push
shlb
xchg
cmp
cmpsl
int
jae
aaa
in
jmp
dec
test
test
fcompl
mov
lret
sub
std
outsl
loop
std
jmp
mov
sahf
push
into
sub
orb
stos
rorl
inc
shr
mov
sub
loope
xlat
cmpl
fwait
fs
imul
scas
test
add
or
xor
and
inc
sbb
xor
pop
dec
sti
adc
xchg
cld
aaa
int3
push
cmp
jo
jb
jnp
ds
hlt
mov
inc
scas
out
addb
shlb
repnz
pop
pushf
ss
cmc
lret
and
jg
fwait
out
test
call
outsl
sbb
popa
jmp
adc
mov
sub
movsb
mov
push
dec
mov
je
es
notb
jne
mov
push
push
jbe
test
mov
out
push
insb
dec
in
loop
fisubrs
ss
shrb
mov
outsl
xchg
out
scas
fwait
cmp
data16
pop
xchg
xchg
pop
addl
mov
bound
sbb
jge
sub
push
inc
sub
fdivrl
mov
add
mov
adc
loopne
je
mov
mov
daa
ja
pushf
jle
ret
xchg
dec
xor
xlat
arpl
xchg
test
in
cltd
push
jmp
mov
je,pt
arpl
mov
ret
rcrl
sub
dec
loop
inc
pop
test
rorb
roll
sub
cmpsl
es
cmpsb
xor
cmp
ja
out
fisttps
adc
push
or
in
insl
pop
mov
or
fdivl
loop
xchg
push
mov
pushf
mov
mov
jae
mov
jp
sbb
cmpsb
cmpsb
movsl
mov
out
arpl
push
fcomp
hlt
test
bound
add
xchg
cmp
dec
into
imul
jg
inc
pop
ret
psrad
or
sbb
sub
out
lahf
inc
mov
and
and
leave
lcall
mov
lods
cmpsb
cmp
negb
or
add
pushf
or
inc
pusha
mov
inc
or
jecxz
push
sahf
addr16
pop
pop
sbb
stos
and
cltd
mov
sti
es
dec
in
popf
out
fsts
mov
lods
mov
sub
push
xchg
lods
out
or
pusha
stc
std
fiadds
mov
xchg
jno
out
xorb
loopne
sub
adc
loop
and
xlat
divl
cs
push
std
mov
xor
sub
mov
arpl
jle
andl
inc
inc
xchg
sbb
mov
movsl
sub
and
loope
test
shlb
adc
inc
mov
push
lea
sub
xor
cmp
push
out
jnp
mov
jbe
jbe
arpl
or
je
repnz
js
push
jmp
lods
jg
aam
and
cmp
enter
stc
pop
mov
imul
in
xchg
cmp
dec
sub
incl
cmc
aam
pop
mov
je
adc
stos
test
add
sub
mov
xor
test
xor
in
push
shl
loopne
and
mov
pop
pusha
fadd
aad
jno
inc
cmp
popa
ljmp
push
andps
and
aad
fdivrs
bswap
test
test
push
jmp
shll
arpl
push
leave
in
gs
out
mov
adc
add
sti
jmp
add
pop
or
lds
insb
movsb
aad
cltd
mov
cmpsl
xchg
shll
and
xchg
or
ret
lods
xor
cmp
scas
int
or
ret
xor
or
and
ljmp
rclb
fs
pop
push
aad
or
push
dec
in
insl
cmp
int3
jne
insb
fwait
pop
dec
out
mov
add
andb
add
sub
dec
fwait
push
leave
test
sbb
inc
lahf
rorb
adc
je
popf
pop
push
cltd
stc
inc
outsl
push
jae
imul
xor
xchg
pop
nop
and
lock
je
mov
arpl
pop
aaa
jns
pop
pop
jge
mov
ret
lcall
loope
or
mov
ret
mov
loopne
movl
int3
sub
or
daa
dec
mov
push
xor
push
mov
pop
mov
out
dec
sbb
lret
mov
hlt
jp
in
dec
fcomp
std
dec
xor
mov
xchg
test
icebp
add
mov
mov
xor
mov
aaa
sbb
aad
push
sbb
test
lret
push
popa
xor
pop
mov
lret
pushf
rorb
test
and
add
stc
add
mov
cmp
mov
std
faddl
mov
mov
inc
arpl
push
or
bound
xchg
jnp
les
mov
mov
cltd
fwait
jge
daa
test
fisubs
inc
lea
sub
sbb
sub
lret
jnp
imul
shl
xor
mov
inc
pop
hlt
or
test
out
jge,pn
adc
jne
mov
fildll
rolb
insl
clc
jno
cmp
and
in
mov
mov
mov
xor
out
pop
push
xchg
nop
sti
bound
sbb
in
stc
jle
andb
sarb
aaa
fcoms
repz
inc
leave
movsl
test
xor
push
jb
aad
jmp
mov
pop
inc
gs
sahf
and
in
ja
cmp
inc
hlt
or
sub
subb
shr
sbb
jbe
out
popa
add
in
cmpsl
dec
lea
repz
rcrl
fstps
ss
ljmp
and
outsb
mov
rorl
mov
cltd
add
adc
jb
mov
sub
xchg
xorb
jmp
fsubl
dec
and
js
mov
out
mov
or
cmp
cmp
pushf
aas
adc
push
lea
push
aaa
pop
sahf
mov
mov
scas
aad
inc
ds
hlt
inc
pop
fwait
cmpsb
pop
push
call
mov
das
lock
xor
fistpll
sub
gs
push
fadds
cmp
ja
mov
dec
lods
pusha
das
add
jg
ret
cmp
mov
loopne
pop
lret
jg
aam
in
je
jnp
cltd
rol
hlt
pop
sbb
scas
dec
push
mov
addr16
pop
jo
outsl
adc
xlat
fisttpll
ss
push
and
mov
add
sbb
cmc
ja
lods
xchg
btsl
cmp
jecxz
scas
push
jl
xor
out
sbb
cmp
lahf
xor
rorb
cmp
add
xchg
imulb
add
add
ret
es
push
notb
dec
and
sti
lahf
sub
xor
ret
bound
xor
mov
xor
lods
ds
test
lret
cmp
imul
pop
push
push
ds
jno
iret
xchg
pop
jp
stos
es
call
push
cld
test
sub
or
mov
push
idivb
xchg
in
ret
fcompl
xor
ret
test
xor
mov
cld
adc
ja
shr
adc
loop
add
imul
imul
or
mov
out
popf
fcompl
push
fwait
sub
test
fwait
cmp
sub
ret
lods
pop
cmp
mov
sbb
dec
add
or
xor
ja
mov
mov
loopne
mov
push
dec
js
jge
xchg
pop
pop
nop
mov
mov
mov
and
test
aad
push
cwtl
test
pop
stc
dec
out
xchg
enter
pop
call
notb
addl
push
dec
inc
movsl
out
jo
sbb
scas
adc
mov
inc
sti
shll
sub
xor
scas
pusha
ljmp
add
jp
mov
and
xchg
adc
sub
out
das
push
ljmp
cmp
lret
repnz
mov
sub
mov
hlt
leave
stc
mov
or
aaa
loope
movsb
mov
cwtl
popl
lock
push
fcoml
jge
test
mov
push
xchg
in
mov
pop
pop
mov
xor
sub
jns
xchg
and
jp
adc
out
dec
das
loop
lods
popf
pop
xchg
mov
jno
push
pushl
or
pop
lret
test
add
andnps
push
aam
nop
nop
testb
pop
add
pop
lds
push
out
cli
push
mov
jmp
mov
outsb
xchg
mov
dec
scas
xchg
sahf
loopne
jns
sub
xchg
pop
xor
mov
out
fidivs
cmp
pusha
lock
jnp
lock
loop
sar
rorl
ja
add
ret
shll
outsb
inc
add
leave
gs
loope
push
push
imul
lret
in
fdivrl
pushf
add
sub
cld
arpl
stc
push
imull
repnz
mov
enter
cwtl
push
mov
and
loop
and
popa
pop
jno
fsubl
inc
sti
sbb
ss
inc
jg
out
movsl
lahf
xor
movsl
adc
ret
dec
jl
add
add
cmc
loope
in
sarb
adc
daa
push
mov
cmpsb
xor
lods
add
stos
data16
mov
roll
ret
stos
scas
inc
adc
xchg
hlt
adc
rclb
mov
xor
add
sbb
jle
in
dec
cmp
cs
loop
popa
pop
ret
or
mov
repnz
xchg
sbb
pop
add
shl
fwait
sti
loop
add
jne
xchg
int3
addr16
mov
mov
cmp
popf
stc
and
test
clc
pop
mov
jne
in
std
aad
jle
imul
inc
std
mov
mov
mov
or
push
shlb
add
jl
ficomps
imul
jnp
jmp
xor
and
or
loop
jl
sbb
mov
pop
outsb
shlb
pop
mov
and
cwtl
in
jno
pop
dec
sub
in
movsl
cmp
int
pop
repz
push
jg
push
mov
js
icebp
repnz
mov
push
mov
cli
jne
movsb
or
ja
jb
sbb
pop
add
test
pop
es
pop
add
sbb
push
push
adc
fistps
dec
cmpl
pop
aaa
xor
mov
popf
add
add
aad
add
cmp
loope
inc
add
mov
mov
mov
push
call
or
add
outsb
adc
add
push
add
es
in
test
imul
mov
scas
mov
add
sti
loope
pop
xchg
je
popf
jmp
sub
je
mov
cmc
je
std
push
int3
jno
xor
cmpsl
out
push
mov
adc
out
sbb
or
lock
mov
add
mov
jno
or
les
jg
pop
fnstenv
sub
aaa
pop
sti
sbb
movsb
fcmove
stc
xchg
adc
gs
inc
cli
xor
and
bts
and
adc
jae
jmp
jb
rcrl
lret
inc
mov
mov
pop
xor
push
imul
mov
xchg
adc
sub
adc
cmpb
add
inc
or
xchg
outsb
shll
cli
mov
sub
clc
rolb
cmp
inc
xchg
into
or
xlat
clc
or
xor
loopne
lret
iret
mov
jae
fdivs
cmpb
cs
xor
mov
hlt
and
push
pop
jbe
cmp
pushaw
lea
filds
insl
imul
xlat
dec
push
add
xchg
and
xor
pushf
shl
push
mov
out
mov
jb
adc
push
xchg
fbld
xchg
and
cmpsb
push
mov
mov
mov
mov
ret
push
out
fidivs
xor
adc
jbe
and
inc
cmp
shlb
scas
sbb
cmp
sbb
inc
push
jle
inc
fwait
xchg
shl
insb
enter
or
adc
in
adc
pop
stos
jp
mov
mov
in
out
addl
pop
cmp
mov
push
mov
mov
push
dec
xlat
ffreep
xor
int3
jle
pop
jns
adcl
xor
clc
rorl
xor
adc
pop
ss
jmp
aas
push
bound
sbb
add
fwait
mov
and
inc
add
test
fistpll
add
pushf
stc
inc
popa
ret
call
jae
scas
xor
sahf
xlat
or
xlat
xchg
jmp
cmpb
ljmp
fisubs
pop
mov
das
repnz
pop
sbb
xor
jmp
pop
sub
inc
jns
enter
push
mov
inc
aas
mov
inc
mov
sahf
mov
out
rcrb
aam
rcrb
xor
insl
lods
dec
movsl
push
mov
pop
iret
xchg
cmpsb
mov
adc
pop
test
pop
push
adc
enter
lds
push
movsl
bound
mov
ds
addr16
aam
cmpb
idivb
in
fwait
addr16
sahf
out
std
dec
mov
push
mov
sub
push
cs
push
xchg
xchg
sbb
push
push
rclb
mov
jg
sub
cmp
add
push
out
addr16
out
xor
shr
dec
in
jle
int
pop
jno
scas
daa
sub
mov
scas
pop
adc
ret
movsl
adc
mov
pop
xstore-rng
cmpsl
lret
cmpsl
in
fcompl
loope
cmp
iret
and
adc
adc
nop
test
stos
xchg
divb
ljmp
jmp
push
xchg
mov
iret
xor
ret
push
arpl
add
faddp
or
pop
imul
test
int
call
pop
aad
jmp
inc
jno
gs
jb
sbb
aam
cmc
mov
out
push
fcmovnu
cmp
imul
mov
sbb
xchg
gs
aam
ss
lods
push
mov
pop
lea
aas
shll
mov
iret
sub
lods
rclb
cs
xor
xor
sub
aaa
inc
out
mov
arpl
in
cld
push
xor
mov
dec
iret
dec
jnp
mov
bound
sbb
hlt
andb
in
or
pop
outsb
dec
stos
and
pushf
repz
fistpl
inc
arpl
cltd
cmp
fnstcw
add
in
jno
push
xrstors
inc
lock
aaa
cld
into
call
test
xchg
movntq
imul
mov
jge
and
loope
mov
mov
dec
jb
push
mov
pop
stos
jp
mov
jne
je
jge
mov
fidivrl
arpl
add
sbb
leave
or
mov
jmp
dec
daa
movntps
pushf
fcmovne
jg
fidivrl
adc
cmpsl
pop
push
dec
push
fxam
in
hlt
adc
push
icebp
pop
lock
enter
and
dec
testl
aad
pop
mov
mov
push
cmp
xchg
addb
xlat
test
sub
fwait
dec
gs
js
dec
cltd
rcll
fimuls
fwait
clc
into
pop
mov
cmp
lea
movsb
ljmp
mov
pop
movsl
in
xchg
sti
lcall
mov
cld
jle
cltd
xchg
orl
call
xchg
cwtl
jns
out
mov
ljmp
popa
and
sbb
jne
lcall
add
and
repnz
int3
movsl
lods
add
add
mov
gs
cmpsl
pop
cs
clc
jns
adc
cli
inc
dec
adc
test
jo
jns
jle
lahf
je
push
push
mov
and
push
and
dec
mov
jecxz
iret
add
mull
cmp
mov
lea
hlt
loop
sbb
mov
scas
lea
mov
test
xchg
jb
repz
fcoms
punpckhbw
dec
repz
cld
stc
hlt
daa
xor
and
jg
mov
cs
sahf
std
addr16
jmp
sub
sub
jmp
jmp
xchg
mov
lds
pop
imulb
or
arpl
adc
shl
mov
or
cmp
pop
push
mov
icebp
xor
push
or
mov
cmp
in
push
mov
subb
sub
mov
and
adc
jmp
xor
fstpl
and
cli
mov
adc
es
in
xchg
and
scas
clc
mov
call
ja
dec
xchg
lds
inc
cmp
push
dec
add
addl
aam
ds
and
push
out
pop
xchg
and
xchg
dec
adc
mov
inc
pop
ficoms
mov
jmp
jae
das
mov
cmpb
mov
xchg
test
mov
adc
mov
and
movsl
aam
cli
mov
sbb
repnz
mov
push
mov
push
imul
mov
jnp
lods
sub
loopne
fwait
insb
cwtl
in
push
addr16
loopne
imul
mov
mov
es
pusha
adc
imul
and
imul
cmp
shll
mov
lods
je
inc
lods
cltd
xor
cltd
jg
enter
sub
and
jmp
test
stos
iret
xchg
add
pop
dec
lock
mov
or
popf
outsl
out
or
xchg
insl
add
add
enter
mov
mov
pop
ja
sub
ror
pop
nop
outsl
jne
or
add
dec
push
mov
mov
push
leave
xor
push
cmp
push
sbb
cmc
in
xor
popf
mov
xchg
out
jmp
ss
int3
mov
outsb
cmp
fiadds
add
imul
movsl
dec
adc
push
mov
xchg
cltd
jns
nop
cmc
jnp
je
gs
xchg
xor
or
testb
out
mov
push
dec
dec
in
rclb
xchg
or
cmp
dec
notl
adc
aad
sub
cmp
or
dec
popf
adc
mov
sub
sbb
dec
mov
cli
loop
out
dec
or
test
pop
cmp
pushl
adc
aaa
pop
add
insl
lcall
sbb
or
cmp
imul
add
stos
mov
xor
pop
scas
imul
jb
loopne
test
stos
jle
stos
cmp
xchg
jmp
mov
icebp
inc
negb
inc
ljmp
sbbl
cmp
inc
dec
mov
rolb
or
push
loope
in
sub
adc
or
xor
or
mov
jmp
mov
in
imull
jmp
fs
out
adc
lock
cwtl
mov
cltd
jmp
push
out
and
and
icebp
insl
cmp
mov
test
negb
daa
xlat
mov
fwait
dec
test
jae
cmp
cmpb
insb
arpl
rcrl
inc
mov
lret
push
outsl
aas
cltd
jbe
inc
lahf
rcpps
sbb
scas
and
dec
mov
pop
in
imul
push
int3
imul
adc
test
test
pop
xchg
xchg
mov
imul
jecxz
or
loope
testb
inc
cli
fists
ja
test
or
push
pop
imul
aad
or
mov
fsts
pop
jne
addr16
aas
out
fbstp
xchg
jg
jp
sbb
cld
and
sahf
pop
pop
aaa
out
sarb
or
stos
iret
sub
xchg
cmc
pop
xchg
stc
dec
xchg
push
add
cmp
cmp
jg
jne
aam
fwait
lea
or
mov
dec
sti
icebp
outsb
fsubl
fucompp
or
inc
subb
push
adc
iret
mov
fldt
enter
inc
xchg
sbb
imul
push
icebp
lods
lcall
inc
xchg
fmul
add
aaa
xchg
insl
jae
push
test
push
fisubl
test
pop
sbb
cmp
pop
fucomi
adc
lret
pusha
es
mov
in
imulb
fisubl
sub
mov
inc
cwtl
loop
incb
cs
add
push
dec
jae
cwtl
jo
mov
mov
leave
add
mov
icebp
jne
icebp
inc
jbe
inc
test
mov
movsb
jecxz
clc
lods
popl
sbb
in
mov
movsl
adcb
sahf
in
insl
fdivs
cmpb
push
shl
and
popa
fcmovne
jecxz
push
and
pop
nop
mov
mov
aad
fsubrl
popa
pop
mov
ret
lahf
insl
jl
push
in
imull
movb
fcompl
fldcw
ja
stc
or
sbb
xchg
cmpsl
jg
aas
lea
dec
aad
cmp
sub
inc
xlat
aam
movsb
popa
sub
adc
pop
xchg
int3
stos
xor
cld
ss
or
jne
cmpsb
in
bound
cmp
jnp
mov
push
dec
imulb
cmpsb
in
fsubl
adc
loop
sub
in
rolb
fptan
test
test
fstpt
jg
jle
iret
mov
enter
jns
outsb
aas
inc
nop
mov
gs
and
sbb
rcll
mov
fadds
add
mov
in
dec
repnz
scas
add
xlat
add
mov
or
gs
xchg
andl
test
loopne
jecxz
aad
sub
push
or
mov
std
ljmp
pop
jbe
ljmp
cmp
cld
add
xor
push
test
ret
gs
es
add
icebp
ljmp
sahf
add
out
and
mov
mov
je
mulb
pop
test
dec
lock
adc
jle
ret
pop
lea
pop
or
pop
js
shl
or
jns
pop
inc
mov
mov
mov
fidivrs
outsl
dec
mov
or
cwtl
sub
dec
xor
push
pushf
xchg
push
in
daa
pusha
pusha
cmpsb
xchg
adc
aam
lcall
orl
fdivrs
mov
jg
in
jns
les
test
ret
jmp
pop
and
push
jp
mov
push
cs
cmp
cwtl
add
mov
adc
dec
jns
adc
cmpl
movsl
or
mov
lret
test
inc
cwtl
sbb
cs
iret
jmp
jns
icebp
clc
hlt
sbb
pop
mov
add
dec
sbb
ficoml
jmp
roll
aaa
cltd
ss
das
daa
sbb
into
mov
xor
jne
or
jle
pushf
addr16
leave
jg
cmp
jge
jnp
xchg
fistl
das
les
into
ja
inc
jno
sub
fsubp
movsl
movsl
xor
adc
xor
mov
fbstp
and
in
dec
mov
mov
shlb
xor
sbb
xchg
shll
rol
cld
and
cmp
or
das
jecxz
insb
lcall
push
fnsave
add
jecxz
lret
sti
push
xor
mov
inc
or
or
mov
arpl
cs
sbb
jecxz
lods
sbb
shll
loop
adcb
push
mov
sbb
jl
fs
adc
aas
mov
push
dec
lcall
add
jmp
push
sar
jecxz
inc
mov
dec
stc
inc
xor
and
mov
inc
add
and
add
icebp
mov
jnp
sbb
dec
ss
adc
jecxz
repnz
dec
or
pop
push
add
les
into
pop
mov
or
xchg
popa
adc
out
rol
mov
sbb
test
pop
shrb
mov
mov
xor
and
das
call
and
pop
imul
std
cmp
push
data16
mov
data16
loope
xchg
mov
cmp
inc
cmpsb
cld
out
lods
das
push
push
push
dec
icebp
insb
cltd
fdiv
mov
popf
and
jmp
imul
or
add
sub
push
cmpsb
rcrb
mov
pop
jae
push
lcall
cmc
cmc
jle
outsb
ret
push
cmp
mov
imul
mov
pop
fistps
in
mov
and
xchg
xchg
xchg
jl
aas
pop
xchg
mov
push
adc
rcrl
mov
and
insl
shlb
lret
testl
push
xor
or
jns
dec
xor
mov
scas
dec
icebp
arpl
out
adc
lcall
mov
mov
xchg
aas
push
inc
fldcw
stc
inc
movsl
test
fstl
push
sub
insl
iret
test
data16
mov
and
cmpsb
mov
pop
or
lock
in
jbe
lods
xor
cli
and
sti
mov
out
mov
mov
cs
mov
ficompl
jle
jno
fwait
push
lock
daa
or
xchg
lods
pusha
insl
jno
jb
inc
dec
push
test
pop
sbb
dec
leave
adc
adcl
mov
dec
repnz
nop
push
into
rol
cld
pop
es
sub
mov
xor
outsb
xor
stos
fstpt
mov
scas
rorb
xchg
enter
xchg
mov
test
das
or
out
jecxz
mov
adc
hlt
or
cmp
inc
subl
mov
xchg
xor
xor
push
leave
imul
rorl
xor
in
lds
jns
pop
jmp
xor
out
sarb
xchg
jge
sub
insb
dec
or
pop
jge
mov
and
dec
pop
sbb
sub
jbe
pop
pop
test
sub
daa
or
jle,pt
adc
push
adc
push
mov
lahf
hlt
js
jbe
aas
add
xchg
mov
jnp
dec
clc
mov
or
insb
pop
pop
cwtl
or
add
jnp
ja
or
sbb
or
inc
push
cli
mov
jecxz
incb
sbb
jns
mov
js
test
adc
fistpl
loop
addr16
in
jle
mov
mov
gs
lret
aas
add
lahf
aaa
dec
pop
frstor
push
dec
push
arpl
sar
jmp
dec
cmp
ljmp
daa
daa
fcomp
das
dec
xchg
add
fildll
mov
mov
lret
mov
or
mov
jg
out
mov
lds
add
jns
cmp
cmp
aaa
stc
jbe
xchg
loopne
and
std
cli
xchg
push
xor
int3
popf
dec
or
inc
pop
inc
scas
or
dec
arpl
sub
pop
mov
int
leave
mov
js
pop
out
int3
add
popf
jle
lea
add
cmp
pop
imul
cwtl
mov
sbb
sub
les
sub
pop
sub
adc
mov
clc
imul
test
mov
pop
test
inc
xchg
arpl
insl
rcl
leave
adc
mov
sar
ljmp
pop
xor
mov
cmp
xor
pop
fcmovnbe
insb
jo
mov
sub
xchg
xor
add
xor
lods
daa
aad
push
push
sbb
in
data16
sbbb
and
repnz
jne
iret
repnz
cmc
sub
xchg
dec
mov
jo
adcl
jns
arpl
pop
sahf
cmp
dec
cmp
ja
pop
xchg
cltd
js
sbb
arpl
or
mov
loope
pop
lret
movsl
out
in
fistpll
pop
and
out
pop
ss
xchg
lods
xchg
test
jnp
sub
jg
iret
hlt
xor
fstpt
fwait
addr16
lret
addb
push
outsl
mov
pop
inc
mov
push
std
xchg
push
xor
mov
dec
jae
add
mov
adc
push
arpl
lock
inc
psrad
xchg
mov
jmp
adc
cltd
lahf
fcoms
adc
roll
popa
jge
addr16
movsl
scas
fdivs
sbb
cld
adc
fildl
imul
es
dec
jl
aad
int3
arpl
cld
add
in
inc
and
mov
sahf
imul
ret
fsubrs
leave
jge
or
shlb
push
imul
jns
mov
cs
and
call
cs
jae
push
add
adc
jl
imul
insb
xor
dec
cmp
pop
in
sbb
in
jge
or
cwtl
hlt
call
mov
out
dec
fsubl
jno
cwtl
jb
mov
mov
or
cmc
mov
xor
adc
clc
cmc
stos
push
in
pop
and
xchg
lret
lcall
out
or
clc
in
movsl
push
add
xor
or
jmp
mov
push
mov
dec
add
jno,pn
jg
test
mov
push
pop
adc
mov
or
ja
stc
inc
push
add
mov
pop
outsl
mov
pop
push
sti
arpl
fldt
je
or
ljmp
add
pop
mov
add
sub
popa
push
push
jo
pop
out
and
bound
es
fstpl
imul
xchg
mov
aas
add
sub
mov
add
jmp
mov
es
shr
ss
lds
jno
roll
jge
iret
xchg
movsb
lods
and
fucomp
in
and
jns
mov
inc
mov
je
dec
insl
jne
mov
mov
inc
frstor
jbe
and
and
stos
jno
sub
mov
sub
pop
push
xchg
sub
ret
push
push
jo
sbb
jbe
aam
or
push
sbb
add
mov
pop
or
scas
push
fs
nop
jns
add
in
inc
inc
sbb
jmp
pop
adc
ds
ror
lock
xchg
dec
adc
icebp
out
mov
lods
popf
insl
mov
mov
rorb
out
mov
ds
rclb
addr16
add
xchg
mov
cmp
lret
aam
jge
xchg
xchg
and
frstor
imul
daa
fs
cltd
and
sub
pop
into
adc
cmpsb
mov
or
mov
mov
jg
ljmp
clc
push
imul
xchg
cwtl
inc
push
clc
xchg
push
insl
fadd
in
mov
in
je
pop
aad
lahf
das
xor
mov
and
loope
std
sub
mov
fsubs
in
repz
lds
mov
or
mov
fdivs
adcb
mov
cmp
outsb
dec
mov
dec
repz
int3
mov
xchg
push
mov
iret
and
nop
dec
loopne
bswap
popa
sub
xchg
pop
fs
popa
jle
push
inc
lods
dec
out
dec
cwtl
xchg
int
scas
jl
dec
and
daa
scas
dec
bnd
xchg
xchg
leave
sbb
cmp
ret
jmp
dec
mov
imul
scas
repnz
xchg
paddusw
in
cmp
int3
adc
mov
int3
xor
cmp
clc
in
jb
in
adc
cld
iret
or
out
clc
sbb
push
push
repz
mov
add
int
in
push
or
in
cli
rolb
mov
pop
mov
mov
and
jns
pop
sub
ret
cs
xor
cld
sahf
dec
mov
orl
rorb
pushf
cmp
mov
ss
dec
jp
popa
add
dec
enter
add
shll
add
dec
sub
adc
ja
mov
icebp
adc
test
xlat
cmpl
add
jo
or
loop
out
ret
xacquire
jb
loop
jmp
mov
xchg
lahf
stc
pop
push
fs
mov
jp
loop
repz
xor
mov
mov
lea
sbb
pop
pushw
loop
xor
int3
je
les
adc
or
lret
xor
push
xchg
inc
and
cmp
adc
mov
popa
pushf
mov
push
mov
das
fldt
and
add
js
lods
int
les
imul
push
repz
xor
daa
iret
pop
cmp
sti
out
jmp
in
clc
cmp
cmp
mov
pop
cmp
repnz
dec
dec
outsl
push
test
out
stos
fidivs
daa
je
sub
jb
xor
or
js
mov
pop
or
sbb
int3
out
jl
inc
push
jae
mov
fildl
inc
popf
scas
fsts
inc
es
ljmp
jl
arpl
into
or
add
testl
or
insb
jno
cmp
add
xchg
enter
push
xchg
add
pop
stos
icebp
out
lret
jne
iret
fcomps
fidivrl
inc
out
inc
icebp
pop
shll
int3
add
repz
sbb
out
out
adc
and
push
pushf
sbb
subb
cmp
outsw
stos
add
aas
nop
stos
add
inc
shlb
pop
int3
jp
push
repnz
dec
sbb
call
adc
test
adc
xor
push
and
repz
out
jmp
int
xchg
cmpsl
mov
fbstp
cwtl
out
adc
mov
cmp
cld
loopne
into
and
xor
ja
sbb
pop
adc
jecxz
mov
mov
jle
dec
pop
dec
mov
adc
mov
ss
push
jnp
push
adc
pop
and
hlt
sbb
test
mov
ljmp
cmp
cmp
mov
iret
shlb
jbe
movsl
sar
push
or
sub
mov
and
xchg
push
and
sti
pop
mov
pop
dec
pop
mov
mov
mov
pop
push
or
and
int3
enter
ljmp
test
pop
jecxz
div
ljmp
jne
mov
mov
in
cmpsb
mov
xor
dec
test
push
lret
push
imul
adc
ror
sbb
xchg
nop
push
sub
or
ja
mov
out
lds
cld
and
sub
jecxz
fnsave
mov
xchg
inc
pop
fstpt
stc
mov
jne
call
mov
cmp
mov
mov
out
inc
inc
outsl
int
movsb
sub
jb
mov
cmp
stc
ja
mov
xor
movsb
sub
mov
ljmp
or
addr16
mov
shlb
mov
lcall
lods
mov
imul
mov
test
xor
lock
arpl
je
movsl
push
xchg
ficoml
push
iret
sub
nop
xor
xchg
inc
into
daa
call
xlat
xorl
sub
popf
push
outsl
roll
repz
xchg
insb
aam
ja
mov
fidivrl
dec
xor
aad
xchg
imul
idivl
lods
jns
dec
out
fdivrl
inc
test
shlb
std
and
push
adc
push
add
cmp
stos
lock
in
outsl
cmp
ljmp
movsb
repnz
mov
cwtl
mov
mov
daa
ret
fidivrs
push
dec
lds
mov
cmp
mov
push
scas
data16
out
xchg
roll
lods
sbbl
cmp
xchg
dec
pop
outsl
aad
pusha
xchg
jns
jp
and
int3
fildl
movsb
stos
insl
sbb
divb
xchg
loopne,pn
mov
mov
pop
cmc
in
imul
mov
ficoms
lock
fldenv
mov
inc
call
inc
das
jae
or
jecxz
mov
test
stc
insl
adc
iret
outsl
in
cmpsb
jmp
mov
negb
mov
xchg
sarl
test
inc
out
mov
outsl
stos
lret
in
jg
jecxz
movsl
and
adc
in
mov
pop
scas
pop
outsb
mov
je
pop
sbb
imul
sbb
roll
rolb
xchg
std
mov
jno
cld
movl
inc
in
pop
dec
jge
lods
scas
xor
xchg
push
fs
xor
push
sub
int3
mov
ret
pushf
add
imul
mov
push
es
dec
dec
cmp
add
fsubl
lods
adc
sarb
data16
mov
jb
dec
aam
adc
movsl
and
push
repz
mov
or
sbb
jmp
lcall
xor
loopne
mov
or
or
mov
cld
cli
sbb
mov
mov
js
sahf
pushf
pop
push
xlat
call
insl
stos
lcall
xor
int
icebp
cmp
scas
xchg
mov
sub
or
sbb
pushf
mov
aas
or
pop
push
or
je
sbb
xor
push
test
push
je
ret
mov
add
pop
mov
pop
icebp
mov
je
aad
dec
sub
mov
dec
pop
mov
mov
out
lea
leave
mov
lret
int
and
out
push
movsb
pop
pop
push
or
pop
lret
pop
cmpsb
cmp
mov
xlat
xlat
or
jl
movsb
push
es
jg
and
rclb
adc
inc
scas
outsl
shr
sub
mov
mov
rcr
and
popf
ret
cltd
into
jns
xlat
cs
fdiv
mov
or
inc
or
dec
lock
xor
les
addr16
ja
dec
daa
xchg
cmpsb
inc
lea
jae
rorl
jns
jle
mov
leave
icebp
sub
push
test
pop
mov
insb
mov
push
inc
inc
shlb
pop
cli
mov
cmp
jmp
and
and
icebp
scas
mov
fs
or
fs
jmp
push
adc
xor
decb
mov
subl
dec
movsb
and
push
popf
mov
loopne
and
outsb
cltd
push
lcall
in
sbb
add
out
into
in
pushl
and
das
orb
addl
mov
jl
add
and
sbb
lods
mov
fwait
jle
push
pop
sarl
enter
jae
pop
gs
sbb
inc
aam
inc
and
lock
jns
push
xor
fnsave
in
lret
ljmp
sbb
xchg
fisttpl
mov
nop
mov
js
enter
cmpsl
mov
shrl
les
pop
pop
repnz
lret
popa
stos
mov
push
imul
sbb
movsb
xor
sub
mov
shlb
push
xchg
out
add
outsb
dec
std
mov
inc
pop
stos
stc
cld
inc
inc
mov
sub
sbb
sub
pop
mov
mov
movsb
repnz
mov
ret
inc
outsw
xlat
lods
jmp
xchg
std
fwait
push
ljmp
ss
jae
roll
fisubrl
sub
pop
test
mov
adc
push
es
inc
decb
push
or
aaa
add
sti
xchg
cmc
mov
cli
xor
jl
and
add
xor
sbb
pop
pushf
push
inc
int3
daa
add
fcompl
pop
cmp
xchg
les
pop
loopne
call
lret
push
push
jp
ds
loop
mov
into
js
mov
fsubrl
repnz
inc
sub
mov
xchg
push
jle
pop
mov
adc
bound
sbb
call
lock
pop
xchg
loopne
mov
daa
pusha
dec
lahf
dec
outsb
sbb
fwait
adc
popa
lea
enter
jmp
ror
or
sub
jge
or
mov
ss
adc
out
dec
mov
stc
dec
inc
add
jno
mov
fs
call
loope
ljmp
xor
inc
cmpsb
iret
or
addr16
sub
loopne
add
cld
sub
add
sub
cmpsl
cmp
or
mov
sbb
add
lods
and
fdivrs
out
jnp
ret
sbb
sbb
aad
push
fimull
xor
push
lahf
addr16
or
inc
dec
outsl
pop
into
mov
bound
mov
jl
shl
pop
test
mov
lea
rcr
fstl
pop
and
push
or
sti
shr
or
fadd
test
sub
cmp
out
cmp
icebp
sbb
clc
pop
into
loope
pop
js
xchg
inc
add
in
push
aad
mulb
fmul
add
dec
jle
sub
jecxz
pop
ds
xor
int3
or
jecxz
xor
test
fstl
inc
in
hlt
xorl
jbe
stc
pop
sbb
cmp
aaa
ret
fcmovb
imul
mov
std
mov
push
test
ret
sbb
pushf
push
roll
and
inc
movsb
sbb
dec
and
mov
adc
mov
psadbw
ret
aas
in
mov
add
movsb
in
pop
inc
cld
loope
pushf
insl
mov
add
aad
ficomps
jns
aaa
rorb
mov
pop
jle
dec
xchg
inc
cmc
push
movsb
lret
push
push
push
into
lcall
data16
xchg
jecxz
adcb
arpl
add
mov
cmpb
xchg
in
inc
aad
shlb
sub
mov
rcll
repnz
test
mov
cli
sub
popf
xor
gs
or
es
fmull
pop
push
mov
aam
movsb
dec
fcmovne
popa
and
scas
lcall
int
ficomps
rcll
fldcw
data16
roll
pop
rcrl
insl
pop
dec
into
pop
pushf
and
popa
dec
and
dec
in
jo,pn
mov
ljmp
leave
enter
mov
push
addr16
fimuls
out
leave
es
and
sub
push
push
adc
fisttpl
rcll
std
insl
cltd
dec
mov
dec
dec
add
mov
push
repnz
push
cltd
and
add
jg
test
xchg
push
sub
jle
lret
add
pop
pop
sub
mov
repnz
xlat
inc
push
ja
add
inc
jns
int
fisttps
fsubrl
pop
mov
or
jmp
push
push
ja
xor
and
cli
cli
adcb
data16
cmpsb
cmp
pop
mov
stos
outsl
int
pop
or
es
mov
arpl
adc
mov
popa
cli
ss
jp
or
scas
push
or
cmp
pop
push
imul
jo
xor
sbb
dec
jne
inc
into
fisttps
and
pop
dec
ss
mov
pop
xchg
fldz
bound
inc
dec
sub
ret
push
jl
stos
in
mov
repz
mov
test
or
add
sub
dec
out
lcall
ss
and
ret
mov
int3
mov
xchg
shld
shlb
cmp
in
stos
inc
fimuls
loope
inc
xor
pop
pushf
add
stos
jo
cltd
jo
outsl
ja
or
jnp
inc
inc
out
fcoms
or
sti
push
or
cmp
jnp
jg
rcll
mov
xor
dec
into
repz
arpl
mov
or
outsb
call
mov
cmp
shrl
inc
ja
dec
shr
insb
std
test
adc
sahf
mov
loope
pop
mov
bnd
mov
inc
addr16
mov
mov
xchg
and
jl
pop
nop
cmpsb
les
out
xor
xchg
inc
and
loopne
jns
shrl
call
ljmp
fsts
popf
insb
iret
inc
lret
push
adc
push
popa
mov
sub
add
adc
xchg
xchg
aad
add
sti
and
test
sbb
addr16
cmpsl
sbb
mov
into
in
inc
mov
mov
push
in
mov
or
xchg
adc
test
hlt
shll
cs
mov
enter
mov
xor
sub
aam
inc
in
pop
jecxz
fmull
push
fimuls
inc
jnp
adc
add
cld
fists
jecxz
xchg
insb
inc
test
insl
xchg
aaa
adc
es
lahf
dec
out
or
mov
xorl
mov
sbb
mov
test
mov
stos
arpl
fmuls
xchg
mov
xchg
fildll
add
into
cmp
pop
jb
cli
aam
jbe
push
rorl
clc
test
cwtl
dec
daa
jmp
sti
cmp
lret
pusha
inc
int
lret
outsb
or
jl
les
push
lods
adc
xchg
scas
dec
negl
pop
xchg
xlat
ss
push
cmp
mov
push
fwait
pop
fxch
cs
jp
sarb
mov
add
cld
lods
aam
shll
inc
leave
repz
pop
out
dec
jb
mov
jecxz
ret
push
inc
push
inc
movsb
and
jecxz
add
xor
int3
cltd
inc
shlb
jmp
in
fucom
lret
fnstcw
inc
es
push
push
divb
pop
push
out
xchg
dec
repnz
js
mov
out
inc
rcll
mov
mov
cmp
mov
sbbb
xchg
arpl
mov
sub
ljmp
scas
pop
popa
jo
add
xor
enter
cld
xchg
movsb
pop
fnstenv
jmp
push
daa
and
adc
cmpsb
xchg
inc
rcll
mov
lods
dec
aas
sbb
push
cmpsl
into
out
adc
mov
clc
cmpb
jnp
jno
test
xor
std
sti
cmp
jae
mov
inc
out
jmp
pop
mov
jmp
lret
mov
sbb
hlt
call
xchg
dec
push
or
test
rorl
popf
cmp
mov
mov
and
sub
jmp
inc
push
outsb
sahf
sub
or
inc
ljmp
loop
mov
les
fs
and
xor
cmp
mov
sub
icebp
add
jno
loopne
mov
xchg
out
dec
xor
xchg
leave
mov
call
fs
pop
push
outsb
jle
sub
pop
fwait
push
ds
repnz
call
and
test
iret
sub
push
inc
dec
cld
dec
mov
xor
dec
pop
pop
inc
jnp
dec
jo
pop
add
sbb
lds
arpl
sbb
sub
scas
out
insl
in
inc
leave
adc
push
movsl
fnsave
cmpb
and
pop
pop
add
test
and
lahf
movl
jle
mov
loopne
mov
pop
or
and
push
sbb
loope
stos
jno
dec
sub
pop
mov
fisubs
into
repz
mov
negb
mov
sarl
leave
adc
push
insb
lods
scas
push
adc
ja
sub
add
scas
sub
es
add
lret
push
repnz
cs
lret
push
mov
lods
pop
xlat
pusha
jo
inc
xchg
test
popf
sbb
jmp
loopne
fdivs
inc
sub
in
mov
outsb
addl
push
push
cmpb
cmp
sub
jp
insb
add
add
mov
cmp
cld
push
int3
test
add
pop
xor
mov
subb
in
push
orl
fiaddl
aad
cmp
sahf
xor
jp
enter
pop
call
jb
ljmp
jae
test
cwtl
xlat
inc
adc
shll
inc
adcl
iret
mov
mov
clc
lods
inc
movsb
cwtl
daa
mov
xorps
dec
xchg
mov
adc
jb
xchg
pop
bound
aaa
mov
jns
jge
bound
or
xor
jnp
scas
sti
xor
jne
xor
add
ror
jge
xor
mov
pop
bnd
xchg
sbb
aad
sbb
ret
or
push
push
or
sbb
daa
sbb
mov
gs
movsb
insb
cmpl
xchg
jo
pop
jne
aas
and
lods
dec
pop
mov
or
cmp
ss
pop
mov
pop
jle
outsl
xlat
jnp
repnz
sbb
cmp
movnti
push
xchg
fwait
mov
lock
std
mov
js
lret
int3
mov
decb
cmp
adc
ljmp
inc
fs
inc
or
push
lahf
not
idiv
and
jg
mov
inc
sarb
popa
inc
inc
jno
jp
stos
push
add
stc
ror
leave
or
jl
int3
ja
and
inc
int
ljmp
mov
incl
loope
out
aaa
sti
cmpsl
aad
stc
xchg
mov
xchg
jg
push
mov
lods
sti
pop
mov
notb
or
mov
fildll
xor
in
xlat
lods
aam
rcll
mov
lods
lcall
add
rclb
push
cmc
incl
pop
lods
lock
out
push
stc
jns
out
xchg
jbe
push
jge
out
test
jg
mov
shlb
mov
fsubrl
pop
pop
pop
and
dec
sbb
mov
push
in
cmp
negl
insb
xor
push
sbb
inc
cs
cmp
jne
jl
pop
pop
and
pop
not
scas
test
lcall
lret
cmc
adc
mov
or
inc
add
orb
cmpsl
pop
mov
cmp
sub
mov
adc
out
xchg
dec
xor
inc
add
insb
in
cmc
sbb
adc
and
fs
mov
shlb
je
xor
into
loope
lods
dec
insl
sub
sub
lea
or
push
aam
fdivrs
dec
lcall
loop
adc
jp
mov
xchg
shrb
cmpsl
xchg
in
inc
and
cs
mov
pop
pop
and
xlat
imul
into
push
push
adc
push
xchg
imul
xchg
shll
add
push
repnz
stos
inc
fisubrl
int
add
cmp
call
aad
cld
add
lds
int3
dec
jnp
mov
es
lea
jge
outsl
ret
dec
in
jb
fcoms
xchg
jp
jne
adc
mov
aas
inc
jl
out
leave
mov
bound
adc
rcrl
or
cmp
movsb
cwtl
sbb
pop
pop
cmp
insb
and
cmp
mov
add
outsl
cmp
loopne
cmp
mov
xchg
sahf
icebp
mov
shll
jae
xor
push
fsubrs
pusha
lods
fists
jne
loop
lds
sahf
orl
xchg
addr16
jae
add
xchg
ret
sbb
jns
xchg
sahf
xchg
lock
or
sub
sbb
jge
xchg
cmc
ss
dec
lret
cmpsl
rcl
shll
xchg
adc
call
add
ret
or
or
dec
stos
push
mov
and
mov
or
jge
sti
dec
mov
rcll
mov
cli
ljmp
and
movsb
daa
cld
ja
adc
xchg
pusha
sub
or
out
pusha
push
adc
mov
gs
xor
das
xor
push
dec
mov
dec
lds
xchg
pop
jbe
lea
subb
sbb
jb
movb
je
mov
jl
lahf
push
and
xchg
stc
stc
mov
xchg
adc
clc
or
loopne
dec
mov
push
push
or
dec
mov
jno
mov
add
scas
movsl
mov
adc
push
xchg
aas
or
call
adc
xor
clc
sbb
rcl
fisubrl
lcall
dec
pop
sbb
inc
imul
pop
xor
repnz
aad
loopne
aaa
and
inc
cltd
sbb
cs
sub
add
outsl
mov
rolb
cmc
xor
or
mov
xchg
jbe
hlt
in
mov
je
mov
shlb
scas
mov
and
sub
test
jle
mov
cli
jecxz
fisttpll
pop
loopne
out
sbb
add
pop
xchg
in
lea
outsl
ljmp
inc
movsl
or
sub
scas
adc
fwait
xchg
std
mov
pop
cmpsl
je
jno
rclb
dec
push
pop
push
push
clc
jns
add
enter
data16
sbbl
lock
inc
pop
mov
jbe
add
imul
adc
xlat
mov
dec
mov
aam
mov
mov
stc
test
lret
mov
sbb
fisubs
mov
stos
mov
add
arpl
lds
test
inc
lret
lret
fldenv
sub
setne
out
mov
imul
aad
dec
jp
cmp
fimuls
nop
sub
jle
mov
enter
into
mov
push
gs
push
imul
movsb
sti
test
daa
sbb
sbb
fisttpl
psubb
stos
enter
sti
cwtl
add
cltd
rcrb
es
adc
jne
xchg
out
adc
scas
insb
xchg
mov
hlt
dec
pop
out
aaa
shlb
inc
jbe
bound
cli
jge
sub
cld
mov
inc
inc
ret
scas
stc
add
fidivs
into
push
scas
ljmp
repz
cmp
subw
fcmovb
out
sar
aad
dec
sbb
dec
int3
out
push
call
sub
sub
inc
sahf
dec
sub
adc
mull
in
imul
aam
stos
sbb
xor
pop
push
out
mov
gs
test
test
test
xor
call
jg
call
inc
nop
or
pusha
fs
insl
and
add
sbb
fwait
pop
mov
mov
movsb
hlt
ret
inc
adc
shl
dec
out
scas
and
inc
mov
cld
jl
orl
fwait
iret
jge
pop
data16
and
mov
xchg
push
mov
mov
ljmp
adc
cmp
ljmp
out
movl
imul
lret
pop
int3
cmp
or
lahf
outsl
pop
leave
cmpsl
dec
jle
sbb
add
mov
testb
pusha
push
dec
jle
and
mov
cs
lret
int3
mov
stos
mov
adcl
aaa
test
and
leave
dec
jbe
jnp
and
stc
jb
dec
push
js
push
jge
push
push
repz
mov
notl
ret
out
or
lock
add
push
sub
mov
pop
cli
push
cli
fidivrs
fistps
sub
addr16
aam
mov
add
iret
shlb
js
gs
mov
loop
xchg
lds
movsl
out
add
fists
dec
cs
and
ja
decb
xchg
add
xor
sub
loop
test
and
test
jecxz
lea
shlb
fdivrs
xor
mov
and
aaa
imul
fiaddl
sarl
out
test
cmp
mov
clc
notl
imul
lahf
cmp
out
xlat
xor
jb
dec
inc
sub
mov
pushf
sbb
in
dec
outsb
and
sti
cmp
andl
add
add
push
je
test
mov
ja
or
sub
push
jno
pushf
sbb
outsb
mov
pop
sbb
xor
jmp
jmp
pop
ret
pushf
lods
inc
ja
call
cmpsl
imul
das
and
push
pop
cmp
sbb
outsl
in
call
adc
ret
data16
enter
jne
push
cs
sub
test
test
mov
add
mov
lret
pusha
lahf
jecxz,pt
jmp
xchg
inc
push
sub
pushf
shrl
cmp
lea
add
inc
push
mov
adc
lcall
out
popa
lea
sbb
test
cmp
test
lods
lds
das
inc
mov
test
lock
shl
sahf
in
test
aaa
and
push
movsb
sbb
dec
cmpsl
add
js
dec
fidivs
dec
sub
push
ja
xchg
cmp
mov
mov
dec
leave
mov
test
jg
imul
imulb
cmc
std
fidivs
sbb
arpl
sub
add
inc
mov
les
sbb
mov
jns
jp
roll
clc
and
or
scas
xchg
cmp
or
mov
and
push
fs
pop
in
loopne
das
mov
pop
mov
jp
xor
xchg
push
jmp
lret
test
popa
mov
lods
int3
inc
pop
xor
pop
sub
and
lcall
fistl
push
push
pop
push
xchg
jecxz
stc
loop
inc
jno
lret
ret
lret
loop
jbe
cmp
or
inc
movsl
pushf
add
push
dec
pop
dec
jl
cld
arpl
out
sub
jl
and
inc
or
movsb
fnsave
mov
je
in
fwait
xorb
bound
cwtl
push
mov
pop
roll
scas
mov
les
sub
jp
fildl
icebp
int
movsb
fwait
ret
mov
int
neg
sbb
daa
inc
fwait
and
push
rorb
xor
mov
sub
sbb
call
mov
fisubl
lods
out
outsl
mov
jle
push
out
inc
add
xlat
sbb
jecxz
inc
cli
enter
cmp
sbb
xchg
aad
fincstp
jecxz
xchg
cmp
and
pop
adc
or
cmp
lcall
xor
jl
or
fdivrp
cwtl
repnz
jbe
mov
push
pop
shl
lret
adc
pushf
int
aaa
dec
lret
mov
out
dec
mov
lret
stc
mov
push
jbe
xor
dec
or
fdivrp
adc
test
js
add
inc
das
test
jnp
in
hlt
pushf
dec
inc
fldcw
das
pop
pushf
subb
pop
out
insl
adc
jns
loope
js
jne
pop
and
pop
mov
bound
mov
xchg
jecxz
push
sub
enter
sub
xlat
push
lret
and
inc
lea
xor
ljmp
mov
iret
daa
pop
xchg
sbb
push
push
loopne
nop
adc
adc
push
in
jnp
jp
dec
lret
bound
lret
js
in
adc
xchg
push
pusha
sbb
xchg
push
fbstp
sbb
xchg
mov
in
xchg
pop
inc
add
fcmovbe
sub
adc
add
test
xchg
sub
and
jno
sahf
xchg
inc
fadds
xor
xchg
add
push
in
bound
or
test
jmp
mov
cmpsb
jae
xchg
adc
dec
ds
xchg
xchg
rolb
mov
mov
push
shl
icebp
and
mov
xor
sbb
lock
fists
call
fwait
sub
ljmp
in
xor
push
push
mov
bound
adc
out
inc
scas
scas
cmp
jo
xchg
stc
fstl
call
das
or
loop
xchg
movsl
jge
cmp
jle
fisubrs
sbb
mov
stc
scas
xchg
mov
adc
lret
fcoml
xchg
enter
js
std
clc
loopne
popa
xlat
cmp
pop
and
mov
adc
mov
push
cmpl
aaa
lcall
push
or
pop
fidivs
dec
xchg
sarl
xor
stos
mov
js
enter
and
in
xor
ret
lock
mov
lods
xchg
pop
mov
xor
outsl
jmp
or
jns
test
scas
bound
stos
xchg
mov
mov
inc
mov
and
dec
movsl
sbb
dec
or
outsb
mov
inc
sbb
data16
daa
mov
inc
test
xlat
sbb
and
sbb
push
push
mov
jae
mov
fxtract
push
mov
add
icebp
int
dec
fiaddl
fstpt
movsb
pop
jnp
inc
cmpsb
lcall
cmp
fldl2t
sti
mov
lods
ja
mov
mov
out
ss
push
sbb
frstor
jne
sahf
mov
dec
mov
mov
sbb
bound
jno
rcll
xchg
inc
sbb
and
test
and
cmp
add
iret
or
loop
or
add
js
ficoms
sbbb
cli
mov
mov
or
xor
insl
sub
pop
mov
sti
push
inc
adc
push
add
fsubrs
adc
aad
jmp
pop
add
arpl
mov
push
xchg
je
mov
push
jmp
scas
stos
xchg
mul
icebp
aaa
mov
fdivr
mov
mov
call
aad
add
dec
insb
lock
cmp
test
xor
add
lea
mov
pop
xchg
lret
lea
out
mov
inc
in
test
lods
loope
jp
jl
les
js
add
fdivrp
adc
push
adc
ss
lea
xor
ror
in
add
pop
sti
fmull
aas
mov
mov
test
sahf
dec
lods
lcall
add
ret
and
loop
adc
or
cmpsl
lret
lcall
int3
jno
push
pop
adc
pop
jp
and
mov
shlb
ljmp
addb
shlb
jmp
push
js
inc
cs
clc
loopne
test
push
fadds
sahf
popa
mov
dec
mov
inc
push
mov
push
enter
rclb
fdivrs
addb
pop
xor
mov
sbb
cmp
test
mov
cmp
out
andl
mov
je
orb
data16
mov
int
in
pop
out
add
outsb
lea
shl
mov
push
std
xor
shlb
push
leave
fdivl
in
sub
nop
repnz
push
das
cli
push
mov
clc
cli
mov
push
insb
mov
sbb
mov
xchg
dec
xor
fs
outsb
lock
jp
jg
add
mov
mov
xchg
pop
push
mov
jle
and
shll
xor
clc
dec
mov
ret
push
imul
mov
lea
mov
ret
jne
jmp
shlb
sti
dec
rorl
gs
xor
cmp
jo
fsubs
int3
in
into
jg
mov
lret
sub
and
daa
addl
cmpsl
jno
fxch
pop
inc
scas
push
imul
out
out
leave
ja
insb
lcall
jnp
mov
data16
pop
test
mov
lsl
pop
push
std
push
lret
int
notb
xor
xorl
or
pushf
out
inc
pop
push
inc
aaa
rcrb
mov
std
xchg
push
jge
or
xchg
xor
shl
int
xlat
mov
lcall
xor
pushf
add
imul
mov
aaa
sbb
cmp
arpl
or
ret
inc
ss
bound
testb
addr16
mov
dec
lea
setle
les
mov
hlt
jo
pop
push
pop
lret
andl
or
ljmp
jno
cmp
push
aad
xor
mov
into
mov
shll
sahf
push
fs
adc
shlb
ror
jns
push
in
xor
aaa
mul
or
mov
lcall
jge
pop
sub
xchg
sbb
nop
and
jne
int
notb
hlt
imul
scas
out
negl
xor
subb
add
jo
jne
mov
idivb
cmp
cmp
in
cmp
xchg
rorb
xor
mov
aad
jecxz
mov
cmp
notb
or
or
cmpsb
scas
inc
gs
bound
lret
add
mov
stos
or
jmp
das
mov
pop
jecxz
xor
push
cmp
daa
outsb
ds
in
into
push
std
xchg
inc
in
pop
or
in
jo
push
dec
fcomip
jne
add
lods
mov
or
adc
mov
push
xor
insl
test
sbb
and
ret
jb
mov
inc
xchg
sub
fisubs
sub
bound
pushf
dec
mov
lret
cmc
mov
cmp
mov
cmp
jne
xor
inc
stos
loopne
pop
adc
in
cmp
inc
and
adc
and
push
dec
ljmp
cmpl
mov
and
aas
or
loope
inc
push
scas
cltd
sahf
in
mov
pop
iret
aam
dec
mov
jmp
inc
cmpsb
cmc
negl
test
popf
out
out
or
cmp
push
repnz
dec
mov
push
test
out
and
dec
xor
or
adc
inc
add
vpsubw
dec
ja
lea
mov
pop
jae
sbb
dec
mov
outsl
sbb
into
popf
test
push
aaa
lds
xchg
out
dec
pushf
jp
jnp
pop
dec
cmp
xlat
arpl
lods
popa
mov
add
in
mov
test
add
dec
shll
out
enter
popa
dec
sbb
sar
xchg
shrl
adc
lret
in
test
or
orb
mov
jns
shrb
into
ret
fwait
stc
jae
push
cmp
leave
sub
repnz
xor
and
hlt
add
mov
push
push
xchg
nop
outsl
mov
out
fcmovnu
fists
jecxz
pop
sbb
pop
add
ss
fsubl
mov
in
hlt
mov
cmp
cmp
pusha
and
clc
pop
data16
pop
add
sub
inc
sbbb
test
dec
adc
xchg
es
inc
test
out
cltd
das
stos
les
shr
in
pop
mov
rolb
push
cmp
inc
add
pop
outsw
movntps
clc
sahf
aad
inc
sti
cli
dec
fwait
mov
pushfw
and
jne
scas
inc
mov
inc
sbb
jle
inc
push
jo
in
adc
and
mov
enter
call
loopne
sbb
std
lock
outsl
gs
vunpckhps
test
ficompl
mov
frstor
mov
sbb
dec
shll
out
or
fldl
xor
push
cmp
push
jae
jp
inc
sbb
cmp
js
pop
hlt
adc
cmp
fistpll
cmc
lret
cmpsl
dec
aad
ss
into
sbb
jg
sti
lret
clc
cmc
mov
outsl
add
sbb
inc
and
das
cmp
xlat
cmpsl
enter
adc
dec
mov
inc
adc
or
adc
scas
das
mov
ret
cld
stos
aam
popa
sbb
fadds
push
sub
fisttpll
hlt
mov
jecxz
pop
mov
loope
push
sbb
cld
js
xchg
arpl
and
push
mov
jnp
pop
mov
rorl
xor
add
dec
push
jle
xchg
xor
or
xchg
mov
and
mov
pop
cmpsl
movsl
or
repz
cmpsb
inc
outsb
inc
add
mov
pop
jge
in
lea
ja
jg
add
or
mov
fisttps
and
insl
push
repnz
mov
pop
xchg
ljmp
imul
mov
out
sbb
mov
pop
imul
stos
stos
cld
les
jb
loope
push
rol
fwait
movsb
rcrb
jg
jl
fadd
into
sbb
mov
jne
ret
lret
cltd
lahf
and
sub
nop
adc
mov
not
stos
mov
jmp
sbb
xlat
ret
xchg
out
adc
cwtl
jo
xor
enter
push
enter
shrb
scas
xchg
push
popf
lret
mov
outsb
cs
sbb
xlat
adcb
in
aam
mov
sub
jns
push
mov
inc
xlat
jb
jae
cmp
scas
mov
inc
push
pop
aad
cmp
aas
sbb
adcl
add
add
lea
je
mov
xorb
mov
xchg
les
pop
pop
cltd
rcr
jne
pop
xlat
mov
sbb
dec
in
jbe
mov
jg
pop
push
xchg
pop
arpl
lea
cmc
add
adc
mov
es
dec
fildl
pop
and
inc
out
push
xchg
fucom
xchg
mov
scas
aaa
jecxz
insb
adc
inc
hlt
pop
cs
or
push
jo
mov
icebp
std
push
fimull
jb
push
adc
sub
inc
dec
lcall
ja
cs
mov
push
mov
mov
out
decl
inc
aas
jno
stos
mov
repz
cmp
std
or
daa
sub
push
andb
cltd
out
pushf
mov
push
lcall
mov
pushf
inc
fs
push
xchg
xchg
pop
addr16
aad
xor
and
ret
movsl
push
push
push
lret
adc
fistpl
stos
std
aaa
imul
ret
sbb
xor
movsb
sahf
daa
lods
fbld
cmpsl
xor
sub
xorb
push
sbbb
lret
jl
add
mov
jmp
and
int3
rclb
loop
mov
and
mov
js
bound
xor
mov
bound
fs
inc
cmpps
fidivrs
xor
cld
inc
dec
sarb
pop
cmp
mov
movsl
lret
push
stos
cli
stos
mov
push
add
pop
nop
push
pop
ret
adc
sub
loop
insl
inc
push
lds
faddl
dec
add
xchg
pop
loop
enter
xor
push
lock
icebp
inc
dec
into
cld
adc
push
xor
xchg
dec
ss
add
push
movsl
in
scas
insl
fidivrl
or
pop
xchg
fildll
dec
aam
jnp
dec
addr16
fildll
mov
add
lock
mov
pop
xor
sub
lods
mov
std
jmp
sar
or
ret
xchg
jnp
daa
ds
jle
lock
lock
jb
mov
rcll
pop
sbb
push
ss
push
les
pop
test
add
mov
loop
mov
dec
inc
test
xchg
pop
push
push
in
call
add
and
dec
push
movsb
inc
testb
lds
mov
dec
xor
jns
or
mov
and
test
jbe
je
xchg
rcll
push
push
xchg
sti
pop
jno
aad
mov
push
sbb
sub
and
frstor
mov
dec
pushf
movsl
out
sub
mov
lea
mov
inc
das
js
pop
sbb
mov
in
pusha
add
push
cmp
jge
cmp
movsl
mov
aas
mov
adc
cmp
pop
jno
xor
into
jmp
pop
mov
shlb
loopne
insb
js
pop
std
lret
fnsave
fld
fwait
aad
pop
mov
sbb
shrl
fsubs
adc
pop
push
xchg
bound
push
xor
repnz
sbb
popa
enter
gs
and
movzbl
cwtl
push
pushf
jle
popf
mov
rcr
cli
out
add
scas
jb
loop
mov
fs
mov
stos
inc
cmp
insl
dec
inc
in
scas
mov
fmuls
adc
test
cmp
pop
in
mov
mov
dec
xchg
icebp
cmpsl
jnp
cmp
in
fnstsw
cmpsl
test
test
dec
gs
ss
mov
gs
loope
push
int
mov
das
loope
jo
xchg
jnp
mov
push
add
mov
or
inc
fldl2t
loop
es
shll
stos
insl
lcall
push
rol
test
pop
jno
les
imul
repz
mov
cld
mov
add
nop
or
test
clc
inc
lea
cmc
dec
mov
mov
stos
jno
push
or
mov
ja
lods
cmp
push
dec
mov
gs
bound
push
push
pop
sti
jbe
push
mov
movsb
add
inc
test
jbe
insb
adc
sbb
dec
dec
cltd
loopne
fsubs
pop
inc
js
mov
jns
pop
mov
adc
cmpsl
and
dec
lds
dec
test
xchg
adc
mov
push
xchg
fisttpl
or
jae
dec
mov
stos
add
insl
out
dec
mul
xor
rclb
das
mov
push
ds
xchg
push
or
and
and
jno
mov
lds
mov
mov
sti
inc
test
jl
stos
loope
mov
fdiv
lea
lods
xchg
mov
test
or
push
inc
jecxz
adc
add
pop
iretw
xor
push
xchg
jecxz
lea
add
js
sbb
dec
add
dec
mov
int
add
push
dec
mov
mov
and
imul
mov
cmp
out
pop
dec
rcrb
mov
jnp
cmp
pop
add
mov
je
fcmovb
mov
or
cld
jns
data16
inc
inc
mov
outsb
and
adc
rcrb
fidivl
out
inc
leave
inc
mov
outsb
outsb
popf
xchg
loop
inc
push
int
int
mov
adc
mov
test
mov
mov
xchg
xchg
repnz
lock
or
sarb
mov
add
mov
cmp
inc
mov
enter
push
fs
lret
test
andl
inc
inc
sbb
cmc
inc
push
push
dec
lea
mov
mov
adc
inc
jmp
daa
xor
cmp
aaa
xor
xchg
xor
mov
mov
shll
cmpsb
scas
xor
loopne
mov
jns
mov
mov
xor
outsb
jg
push
sub
and
aam
scas
push
inc
mov
inc
aam
xor
ljmp
sarl
inc
popa
jb
sbb
pop
add
mov
pop
aas
in
adc
test
mov
mov
mov
mov
mov
sbb
cmp
sub
adcb
popa
push
pop
push
push
sahf
push
out
scas
das
or
dec
bound
sti
push
movsb
mov
pop
lods
icebp
jle
in
sub
xchg
pop
dec
pop
out
add
out
or
cmp
lods
mov
popa
daa
xor
mov
in
xchg
dec
insb
fildll
pop
fst
mov
xchg
jne
loop
mov
jge
lods
sub
or
cmpsl
mov
divl
nop
cli
jg
test
cltd
int
mov
cltd
testl
push
or
ss
jle
push
adc
lock
cs
ljmp
test
loop
xor
stc
std
outsl
addr16
or
push
outsl
mov
dec
pop
cmc
xchg
das
and
adc
dec
decl
sbb
icebp
ltr
loopne
jo
mov
cmp
jno
push
lods
mov
pop
jbe
pop
mov
lea
fldcw
lahf
sub
add
push
sub
sahf
cs
adc
xchg
out
push
shlb
mov
test
xchg
andb
mov
insb
dec
or
mov
pop
ficoml
or
pop
jnp
xor
add
movsb
inc
test
mov
pop
sub
dec
in
adc
sub
out
xor
xchg
das
xchg
insl
leave
pop
jae
ljmp
sub
lds
mov
xor
sbb
movsl
addr16
sarb
xlat
and
leave
loop
inc
jecxz
xchg
dec
bound
lret
push
lret
cmp
shll
push
and
xor
dec
repnz
mov
and
stos
pop
or
aad
xchg
xchg
lods
out
fcmovu
repz
out
push
fdivs
jo
lds
xor
icebp
push
sub
jnp
in
jnp
sarb
lods
jle
jb
out
aam
cs
push
lock
in
adc
out
add
push
movsb
nop
cmp
or
adc
fsubl
shlb
dec
or
ds
insb
pop
mov
es
mov
mov
insl
sub
mov
pop
push
xchg
scas
cmpsl
sub
xchg
jecxz
pop
mov
jmp
ljmp
cmp
jge
addl
inc
mov
dec
ss
sub
mov
fwait
mov
inc
mov
es
xor
push
jne
in
lahf
test
rclb
pop
ret
jo
push
out
jae
inc
dec
lcall
sarl
dec
ret
rcl
cmp
xchg
loope
out
sbb
jb
push
mov
mov
sub
je
pop
xchg
fidivl
fs
push
ljmp
adc
shl
jbe
not
imul
mov
ret
clc
mov
pop
test
mov
popa
pop
loop
mov
mov
iret
adcb
leavew
adc
test
sar
push
loope
out
ret
popf
je
xor
xor
push
add
fldt
cmp
or
jle
addr16
mov
pop
xchg
cmp
adc
gs
jg
sti
push
xor
push
ja
fsubrl
push
mov
and
test
hlt
ficomps
xor
mov
dec
jg
lock
jle
sbb
shlb
lea
adc
push
cwtl
ret
jmp
out
insl
push
jae
je
or
mov
xor
rol
hlt
mov
addr16
sub
jb
aas
fs
add
push
sbb
hlt
sbb
fisubs
or
sbb
add
test
mov
xor
andb
pop
shll
xchg
fidivrs
xchg
or
repz
push
cmp
push
pop
aam
jbe
mov
jae
call
mov
add
and
and
pop
mov
jmp
sbb
sarb
imul
mov
mov
mov
mov
fidivrl
mov
fcmovbe
sub
lret
pushf
loop
sub
jb
out
subb
xchg
cld
push
xchg
stos
pop
aaa
or
loope
xor
add
mov
dec
lock
or
out
sub
jnp
pop
push
pop
xor
pop
fsubs
popa
xor
add
les
das
mov
or
vmulsd
cmp
dec
mov
les
in
add
mov
ds
push
cmp
mov
jnp
fldlg2
rcr
mov
xor
out
cli
lahf
lret
scas
jg
or
outsl
sbb
inc
adc
lock
mov
and
jne
lcall
movsl
push
aas
pop
dec
std
mov
mov
mov
inc
push
push
ja
xor
xor
pop
sbb
sub
sub
mov
mov
cmp
dec
jno
mov
fbld
hlt
xchg
loop
mov
mov
pop
push
xor
xchg
ror
daa
insb
lcall
imul
push
inc
out
xor
movsl
adc
es
xchg
shrl
jbe
inc
cmp
jp
jmp
loope
icebp
mov
cmp
addr16
into
add
xor
cmpsl
sub
or
orb
iret
in
lods
sub
add
fisttpl
lret
test
loop
in
ficompl
and
rcll
fs
lahf
pop
cmpsl
imul
and
inc
ffree
test
pop
push
mov
xlat
call
lahf
xchg
cmpsl
loopne
jb
mov
es
sub
mov
mov
js
das
stc
cmp
ss
xchg
stos
adc
sbb
stc
negb
fstpl
jns
cmp
das
xchg
or
add
jmp
icebp
push
loop
xlat
ja
xor
call
mov
in
shll
xchg
mov
mov
cmpsb
repnz
jbe
mov
cmp
repnz
loop
mov
call
icebp
fcoml
jnp
pop
rcl
mov
sahf
mov
in
outsl
test
mov
mov
out
pusha
jnp
stos
mov
jns
ret
mov
xchg
sbb
adc
mov
pop
cmp
testb
jl
and
sub
outsl
xor
jne
sub
xchg
or
jg
adc
mov
test
mov
out
ljmp
cmpl
popf
pop
sbb
popf
cli
push
scas
sbb
dec
dec
es
or
xor
sub
movsb
loopne
ret
jle
inc
mov
jo
sbb
lods
out
es
ret
xor
lds
jae
xchg
out
in
sbb
sbb
jecxz
jmp
in
pop
pop
dec
and
fildll
mov
jb
outsb
out
insb
jmp
jle
ljmp
xchg
mov
adc
mov
cmc
pop
mov
arpl
adc
and
xchg
addb
sarb
ja
les
mov
inc
inc
xlat
pop
cld
mov
mov
das
sbb
adc
jecxz
xor
iret
divl
mov
rcr
sub
push
daa
mov
xchg
aas
lret
jns
data16
and
test
enter
dec
jmp
jmp
sbbb
push
loopne
add
pop
imul
pusha
pop
mov
xchg
push
lock
das
incl
orb
jnp
jne
mov
lock
test
adc
inc
mov
int
inc
push
dec
mov
sbb
xor
xor
enter
lret
iret
jg
push
or
pushf
shl
fdivr
and
fmuls
test
es
add
inc
aas
pop
push
cwtl
stos
mov
cmp
xchg
fwait
dec
pop
jbe
push
add
sub
jmp
mov
aaa
mov
or
nop
pop
insb
inc
add
aad
imul
stc
fistpl
mov
int
jge
xor
mov
mov
aad
or
inc
mov
cs
ficoms
mov
sub
mov
out
fidivrs
push
cld
lahf
xor
or
pop
ret
xchg
cmp
inc
xchg
xor
lds
xchg
mov
popf
insb
dec
stos
hlt
filds
and
add
gs
or
xchg
rcll
dec
dec
into
inc
repz
dec
les
push
mov
xlat
xchg
out
cmp
loop
out
data16
je
in
mov
mov
fisubrl
insl
es
xchg
cmpsb
jne
jle
out
stos
loopne
enter
cmpb
sarb
fs
xor
or
xchg
jecxz
inc
push
insb
inc
std
xlat
mov
push
sbb
pushf
xor
mov
xor
inc
divps
je
adc
mulb
ret
dec
arpl
mov
xlat
pop
cmc
ret
ljmp
movsl
xchg
ljmp
not
xchg
mov
fst
xchg
inc
inc
or
shl
mov
and
cli
inc
fisttps
daa
xchg
dec
rcll
insl
scas
incb
call
xchg
cmp
cwtl
fsubrs
jge
xchg
jle
sub
or
jae
ror
jp
push
inc
mov
push
sbbl
or
xchg
xlat
dec
push
cwtl
dec
inc
inc
lds
insl
dec
mov
loop
sti
clc
sub
dec
jecxz
jnp
ret
lds
cmp
pop
mov
sub
dec
insb
mov
pop
cs
xor
bsf
mov
mov
xor
cltd
or
in
cmpsb
das
inc
in
popf
push
push
pushf
sti
xchg
ds
outsb
add
hlt
adc
stos
insb
add
out
enter
mov
mov
xchg
imul
addb
repz
shlb
jae
in
mov
outsb
sbb
out
xchg
push
jbe
jp
pop
push
mov
andb
std
stos
cmpsb
mov
ss
cwtl
iret
xor
cmpsb
cs
push
sbb
and
push
es
shrb
and
and
fisttps
and
out
and
fildll
gs
jb
lahf
cmp
xor
jno
and
inc
xor
shrl
inc
pushf
sbbl
fsubrl
aam
enter
mov
lds
clc
imul
outsb
ja
gs
inc
insb
xchg
mov
sbb
fildll
add
pop
push
in
mov
lcall
jp
cmp
in
mov
xor
mov
mov
mov
jle
dec
jbe
rorb
movsb
cli
push
pop
test
cli
jle
push
adc
inc
inc
andb
aaa
mov
and
insl
jge
cmp
fwait
sbb
stos
dec
xor
test
inc
mov
out
icebp
int
ret
jae
dec
adc
jne
lock
add
andb
push
xchg
mov
lods
mov
mov
push
and
dec
imul
xchg
and
mov
popf
cmpsl
out
jo
in
lods
call
mov
push
mov
fwait
lret
mov
lds
in
pop
push
in
dec
xchg
sbb
and
ljmp
lret
cmpsl
es
icebp
or
push
or
sti
add
test
push
ret
lock
sbb
cltd
jb
jl
sti
ljmp
mov
movsb
push
decb
scas
and
mov
or
xor
aas
xchg
jmp
out
pop
mov
sbb
jo
sar
test
insl
jne
movsb
ss
ret
divb
ljmp
out
adc
out
in
mov
push
pop
icebp
cmc
test
insb
in
ror
fmull
xchg
mov
adc
scas
push
rolb
insl
jp
or
push
loope
inc
ret
xor
xor
push
pop
je
mov
lds
mov
lods
in
and
mov
sub
loop
clts
mov
mov
push
dec
mov
lock
sbb
repnz
inc
test
adc
sar
pop
pop
shlb
out
push
push
aam
xor
ljmp
or
xchg
mov
and
mov
mov
push
pop
cmp
adcb
dec
test
into
mov
shl
sbb
xchg
mov
or
xor
mov
inc
pop
ja,pt
jae
push
shlb
lds
fsubrs
rcrl
pop
push
in
jnp
sbb
dec
out
shl
push
ss
jg
sub
shrb
push
movsb
loope
mov
and
sbb
rorl
push
mov
add
xchg
sahf
sub
dec
int3
xchg
inc
or
or
stos
imulb
jo
stos
or
dec
xchg
js
in
bound
sub
ds
jge
lret
xor
lcall
mov
cmp
pop
or
test
and
mov
in
idivb
out
dec
pop
xchg
adc
or
sub
stc
pop
hlt
lock
leave
and
sahf
call
add
xchg
mov
out
ss
sub
ljmp
test
mov
dec
mov
mov
adc
and
adc
push
pop
push
ss
inc
mov
arpl
inc
movsl
icebp
or
and
lock
aaa
std
mov
fistps
ljmp
jbe
scas
xchg
insl
inc
pushf
test
pop
sbb
jmp
adc
test
jne
dec
pop
jne
stos
sahf
mov
lcall
sti
in
nop
fsts
jno
cmpsb
push
cmp
mov
mov
sub
and
mov
push
test
pop
andl
js
xchg
cmp
mov
enter
xchg
adc
mov
xlat
lret
dec
add
pusha
inc
or
ffree
sub
je
outsl
out
sub
lcall
sub
bound
inc
cld
pop
lea
adc
cmp
adc
insb
dec
stos
pop
outsl
inc
sub
sbb
push
ljmpw
cli
aas
add
dec
sarl
mov
fildll
out
lods
adc
and
xor
lret
mov
daa
jnp
lds
fwait
adcb
or
sarb
mov
sub
adc
das
or
inc
or
in
pop
xchg
imul
jns
dec
pop
xor
add
in
fisttpl
daa
pop
adc
jb
stos
orb
dec
adc
dec
or
test
sti
push
ljmp
int
jno
add
cmc
nop
test
jbe
xor
cmpsb
fbld
das
xchg
mov
fldcw
into
out
movsb
call
imulb
add
jle
push
mov
dec
insl
jmp
test
mov
mov
push
je
int3
les
lods
out
mov
xor
mov
add
jg
mov
out
inc
mov
movsb
mov
mov
add
bound
mov
dec
dec
loope
mov
stc
lock
push
and
repz
mov
stos
xchg
jbe
pop
pop
jns
fiadds
push
cs
popf
es
mov
insb
jp
dec
or
and
cmp
or
stos
or
insl
adc
push
arpl
lods
sbb
iret
cltd
aas
lds
rcll
push
imul
jno
pop
movsb
dec
test
shrb
mov
popf
fbld
loop
ret
lock
or
mov
lea
jecxz
negb
xchg
xor
cmp
call
and
dec
int3
mov
xor
std
movsb
sarl
add
xchg
leave
cmp
push
sbb
push
sub
jb,pn
testb
negl
popa
mov
jl
bound
xchg
adc
mov
jecxz
or
or
aas
cmp
cld
jb
lods
hlt
mov
roll
ds
push
pusha
out
outsl
inc
mov
jl
dec
mov
sbb
lcall
stos
pop
ret
fbstp
mov
dec
xchg
loop
or
pop
add
jl
das
mov
cmp
and
jmp
mov
mov
pop
jmp
or
add
push
filds
popf
pop
int
and
and
xchg
xchg
adc
and
dec
inc
xchg
xlat
outsl
jmp
adc
xor
rcl
or
in
lret
out
mov
mov
aad
cmp
ds
cmpsb
jge
ss
add
iret
xorb
int3
mov
mov
enter
lret
jae
jnp
lcall
mov
sahf
pusha
in
or
adc
jecxz
bound
sub
or
jg
bound
int
adc
adc
insb
rcl
aad
scas
cmp
in
in
jp
mov
inc
inc
cmp
out
xor
div
cmpsl
into
scas
push
and
add
sbb
and
or
iret
into
leave
jmp
aad
outsl
dec
xchg
lock
enter
push
insb
add
dec
test
inc
mov
sub
loop
in
and
xchg
enter
out
adc
and
mov
fucompp
push
xor
js
out
mov
jle
cwtl
fsts
out
into
xchg
adc
xchg
jecxz
aaa
pop
div
adc
ret
push
sahf
repnz
cmp
lock
push
xor
rclb
sub
imull
dec
xchg
mov
mov
into
ret
bound
or
repnz
inc
xchg
aad
in
adc
dec
mov
and
adc
pop
push
je
stos
pop
in
nop
movsl
incl
pushf
mov
push
adc
imul
out
fidivs
xchg
sbb
xchg
cmp
addl
jecxz
out
lret
jge
lret
outsl
and
js
xchg
or
stos
fisttpl
mov
pop
pop
dec
sub
jp
test
ss
call
stos
mov
icebp
mov
leave
and
mov
subl
mov
push
into
jae
push
or
xchg
mov
bound
mov
push
iret
sbb
sub
and
mov
push
imul
ucomiss
mov
cmpsl
sbb
xor
sbb
inc
lea
icebp
mov
adc
pop
inc
or
mov
dec
cmpl
aas
sub
enter
fdivrs
push
loopne
push
jnp
inc
daa
das
mov
xchg
cmp
push
inc
sti
lods
test
into
jbe
pop
test
lds
mov
dec
popl
lods
pop
int
mov
and
xchg
inc
movsb
lods
sub
test
sbb
cmp
adc
mov
jge
lods
jno
inc
test
lods
insb
mov
sbb
into
cmp
lea
mov
pop
das
sbb
out
aam
fsubrl
leave
inc
ret
dec
movsb
sub
icebp
std
pop
lods
sub
aas
mov
sbb
shrl
mov
popf
iret
add
push
pop
std
movsb
shlb
ret
int
loopne
xlat
in
sub
mov
pusha
orb
std
sub
fs
sub
lahf
xchg
sbb
or
shlb
icebp
daa
mov
sub
not
add
and
jp
insb
or
mov
mov
mov
insb
mov
sub
dec
iret
cs
xor
sub
cmpsl
fcmovu
es
xchg
xor
inc
nop
sbb
or
sahf
sbb
or
sub
cs
sbb
xchg
ds
in
fidivrl
in
hlt
insl
sub
ficoml
lea
lcall
iret
shl
addr16
lret
sbb
pop
sbb
inc
lds
movsb
aas
pop
xchg
push
mov
insl
mov
shl
out
insb
iret
into
movsl
inc
in
test
lret
out
insl
or
sarl
mov
cmp
pop
mov
or
xchg
jg
ja
inc
jnp
and
mov
mov
add
jp
xchg
and
mov
adc
add
lds
data16
and
sub
mov
xlat
aas
cmp
cmp
xchg
push
std
clc
push
and
and
pop
add
push
sub
incb
je
pop
ds
mov
outsb
sbb
jnp
or
insl
mov
lds
pop
and
call
inc
jnp
inc
rclb
mov
je
cmp
pop
movsl
sub
jo
rcrb
mov
and
and
push
jmp
test
lds
mov
movsb
dec
insb
cmpsl
cli
inc
movsb
sub
mov
je
add
frstor
cmp
and
ja
inc
popf
pop
push
or
dec
xorb
xchg
fisubl
test
hlt
cmpsl
mov
js
ficomps
sub
mov
pushf
fidivrl
mov
mov
xor
push
mov
sti
add
cmpb
in
filds
dec
pop
addl
cmp
adc
sbb
push
cli
mov
inc
fistpl
mov
bsr
lcall
shlb
jp
mov
cltd
aad
pop
lea
xchg
pop
sbb
in
or
pop
mov
cmp
int3
cmpsl
mov
lods
add
push
bound
pop
movsb
cmp
movsl
sbb
jmp
inc
cmc
imul
paddusw
aaa
jbe
cmp
xor
outsl
xchg
xor
inc
jmp
jb
and
pop
inc
push
cld
pop
test
in
dec
shll
mov
lcall
ret
cmpsl
sbb
inc
hlt
inc
idivb
test
xor
aad
xchg
jno
lret
mov
out
add
sahf
sub
push
xchg
in
xchg
dec
sub
mov
jmp
sub
cmp
shl
daa
mov
sbb
add
push
pop
mov
dec
repnz
add
call
push
sub
mov
shll
xlat
mov
xchg
xchg
cmp
clc
inc
push
cmpb
xchg
inc
xlat
jne
nop
insl
int3
lods
iret
xchg
add
fsubs
mov
lahf
xchg
mov
mov
and
inc
add
mov
outsl
or
fidivl
mov
je
mov
xchg
scas
mov
repz
sbbl
bound
pop
bound
mov
icebp
cmpsb
mov
call
xor
xor
add
jl
dec
mov
sti
and
fists
xchg
adc
jecxz
mov
mov
cmpsl
mov
and
stos
insl
frstor
lock
aad
sub
stos
and
mov
jle
clc
leave
lock
enter
sbb
out
inc
je
xchg
rolb
sub
js
in
sbb
lret
fdivr
pusha
xchg
shrl
lcall
adc
xchg
push
mov
fidivl
and
sub
or
lds
movsb
lods
sub
add
popf
mov
push
push
jge
fistl
testl
xchg
scas
filds
repz
xor
jle
insb
add
cmp
sub
jnp
cs
sbb
icebp
clc
xchg
cmpsl
cmpsb
or
scas
std
movsl
inc
into
sti
shll
hlt
scas
sbb
cs
fildll
int
or
and
mov
aaa
cmp
adcl
push
add
insb
add
hlt
add
jbe
insb
pop
add
inc
mov
jp
mov
inc
lods
stos
mov
nop
pop
add
movb
inc
xor
fdivrp
sti
jg
popf
cmpl
imul
mov
sub
adc
je
xchg
movsl
cs
insb
leave
dec
insl
fidivs
popf
stos
xchg
xor
jb
mov
ficomps
push
xchg
inc
or
cmc
xor
insl
sbb
mov
call
repnz
push
sti
rcl
pop
inc
scas
data16
mov
nopl
call
or
pop
roll
ja
push
or
or
shll
orb
sbb
cmp
inc
pop
ficoml
lds
mov
inc
icebp
xor
lcall
pop
push
mov
in
clc
dec
xchg
inc
das
sahf
xchg
insb
pop
mov
add
pop
mov
out
mov
mov
or
lret
inc
mov
scas
jno
or
dec
fists
xchg
mov
inc
arpl
xchg
in
inc
dec
mov
sbb
mov
es
mov
shl
stos
xor
jge
iret
mov
mov
xor
jp
sbbl
shl
push
push
mov
shl
bnd
fsubl
xchg
shll
inc
and
sub
adcb
daa
push
outsb
mov
jmp
adcl
mov
in
sti
push
mov
xor
outsl
jecxz
push
adc
arpl
xchg
test
mov
and
incb
int3
js
mov
xchg
and
mov
out
pop
bnd
cmpsb
test
lret
mov
jp
lret
incl
ja
jae
jp
addr16
sbb
xchg
xchg
sbb
mov
test
fs
jns
std
pop
cld
pop
mov
add
outsb
outsb
fmull
clc
mov
xor
dec
rcrl
in
dec
loop
xchg
loope
or
or
sub
dec
mov
xchg
sub
lret
bound
dec
pop
outsb
sbb
lds
inc
and
inc
xor
stc
out
repnz
xchg
out
mov
mov
dec
mov
jge
mov
sarb
add
xchg
xor
mov
arpl
push
mov
mov
sbb
mov
sub
cmc
lret
les
addr16
pushf
or
mull
mov
incb
mov
xor
dec
inc
scas
jne
cwtl
or
mov
cmp
mov
std
cmp
inc
jno
cwtl
pop
mov
pop
cli
lods
ret
jns
roll
pop
lahf
or
mov
enter
int
ret
cs
xchg
mov
xchg
pop
aaa
inc
icebp
mov
cld
dec
adc
jmp
mov
mov
shrl
imul
cmp
push
add
mov
cmpsl
in
and
sbb
addr16
push
cmp
pop
sbb
cmc
testl
mov
sbb
pop
pop
lret
loopne
aam
cmp
cwtl
les
sbb
lods
mov
sbb
mov
xchg
add
pop
fdivs
iret
repz
jecxz
and
aaa
es
push
push
push
xchg
xchg
pop
negl
sbb
int
or
push
mov
movsl
and
mov
out
nop
push
jecxz
shl
ficomps
jmp
popl
cmp
jbe
sbb
mov
cmp
push
sbb
loop
sub
xor
loop
push
mov
mul
lcall
mov
jae
add
mov
ret
push
xchg
in
popa
aas
mov
inc
jae
cs
xchg
xchg
dec
lods
mov
jne
mov
vpcmpeqb
push
call
repnz
es
push
push
jmp
es
inc
lds
mov
xor
fistl
cmp
ret
or
or
cmp
mov
and
push
inc
addr16
cli
push
out
fidivs
dec
data16
and
xchg
fstl
ret
and
mov
xchg
jg
into
mov
call
shrl
and
addr16
imul
test
or
adc
adc
or
loop
add
and
push
stos
stos
iret
mov
leave
lea
mov
jns
mov
pusha
cmp
mov
ja
add
fldenv
cmp
das
mov
jl
inc
sbb
lret
int3
loop
and
aad
jbe
cmpsb
inc
repz
xchg
adc
mov
dec
nop
push
pop
xor
lret
inc
mov
pop
jo
mov
pop
jmp
xor
loope
cmp
test
inc
push
mov
test
adc
out
adc
sbb
and
cmpsl
pop
mov
push
movsl
sbb
das
mov
cwtl
call
std
test
lods
cmpl
cmp
and
sub
icebp
jbe
mov
mov
shl
mov
fwait
sub
lea
repnz
andb
test
leave
xor
xchg
call
lret
std
mov
out
sar
adc
dec
shl
mov
dec
fs
pop
inc
icebp
hlt
sub
mov
in
push
inc
pop
sbb
movsb
jge
sbb
add
ja
gs
je
repz
psraw
sahf
loopne
jnp
xor
dec
and
and
ss
fadds
pop
mov
jl
popa
pop
loopne
scas
jns
sbb
addr16
cmp
jg
aad
add
adc
inc
mov
adc
sub
sub
or
rorl
mov
adc
sub
mov
inc
cmp
add
addr16
push
push
testb
fsubrl
jmp
cmp
dec
pop
pop
fadds
cmp
sbb
xor
es
scas
lock
rcrl
fiadds
pop
add
fs
pop
jecxz
pushf
xor
sahf
jne
pop
dec
lahf
fsts
sbb
add
insl
int
push
stos
mov
loop
mov
and
or
push
push
out
outsb
ss
mov
addl
fcomi
xor
inc
dec
inc
or
jbe
and
lcall
fisubl
les
add
push
mov
rclb
xor
sub
inc
dec
fldcw
sbb
popa
pushf
or
inc
xor
sbb
lods
push
mov
repz
cltd
dec
jns
mov
rcl
jp
mov
cmpsl
repz
sbb
and
repz
jecxz
mov
inc
int3
out
ds
push
in
pop
add
add
adc
jle
jbe
xor
out
add
outsl
pop
jns
mov
stc
push
and
xchg
pop
xor
pop
jle,pn
outsl
sbb
scas
jmp
int
add
xor
xchg
sbb
adc
hlt
sbb
dec
sub
movsb
push
insb
idivb
pop
sub
outsl
rcr
mov
push
mov
and
jo
shll
mov
int3
arpl
inc
mov
movsb
imull
lahf
shlb
xchg
xchg
aaa
pop
out
aad
outsl
fwait
sbb
outsl
sbb
popa
mov
test
sbb
mov
mov
lahf
out
in
jmp
outsl
and
icebp
xor
out
xor
in
adc
push
shlb
jecxz
cmovl
out
jl
aad
cli
push
add
jo
cmp
sbb
kmovb
mov
cld
pop
fisttpl
and
adc
clc
push
mov
xchg
lcall
jle
mov
test
pop
scas
test
cmpsl
mov
push
mov
fiaddl
in
and
push
rol
pop
std
imul
sti
hlt
scas
sbb
sub
das
outsb
push
js
mov
les
addl
xor
push
inc
sub
or
push
sub
inc
lahf
xor
mov
xchg
sbb
or
push
cmp
lods
into
mov
xor
loop
sub
cmpsl
or
jbe
lcall
fcomi
pushl
pop
jb
inc
ret
mov
jae
aam
mov
and
push
leave
das
movsl
jp
add
mov
fnstsw
popa
dec
xchg
cld
jno
sti
ljmp
test
test
add
js
cmc
aas
cli
add
adc
fs
push
js
xchg
or
arpl
mov
cli
lret
int
out
and
xchg
inc
push
mov
jl
jbe
mov
fnclex
enter
push
adc
iret
iret
push
mov
es
push
in
aas
mov
xchg
pop
fdiv
xlat
mov
int3
or
adc
cmp
inc
add
cmp
das
or
and
xchg
out
add
jne
xchg
push
test
lcall
mov
inc
icebp
in
daa
arpl
out
js
and
gs
push
xor
jge
sbb
mov
sti
outsb
xchg
jbe
and
repnz
mov
in
jne
ret
jno
mov
dec
fdivrl
pop
pop
cmpsl
pop
inc
sahf
movsl
dec
in
mov
mov
lea
int
jmp
scas
jp
and
repz
mov
or
or
fldl
pushf
cmp
jo
sub
roll
fnstsw
scas
popf
xchg
push
aad
and
daa
inc
leave
push
movsl
mov
sti
icebp
or
fstl
movsl
add
insb
into
pop
dec
push
mov
push
repz
xchg
idivb
movsb
movsb
mov
fildll
xchg
out
test
jg
add
imul
pushf
lea
xchg
jno
bound
cmp
mov
mov
rcrl
lahf
sti
xorl
adc
sub
xor
jno
loop
mov
shll
sbb
mov
dec
adc
out
ljmp
jne
stos
add
pop
fdivrs
pop
jmp
or
mov
or
jle
inc
jo
xor
clc
push
jno
push
mov
out
scas
jmp
icebp
adc
xchg
repnz
ljmp
pop
dec
inc
xchg
or
push
xorl
mov
pop
iret
jp
xor
bound
out
jg
jns
dec
cmp
test
mov
gs
ljmp
out
std
iret
stc
or
imul
xor
xor
xor
mov
mov
inc
lods
push
inc
xchg
imul
jg
dec
cs
in
xor
in
lock
mov
loop
mov
mov
ret
js
jb
add
in
cmp
test
sub
mov
adc
stc
aaa
pop
inc
dec
scas
js
stos
xor
loop
movsb
pop
out
mov
inc
lidtl
mov
push
stos
sub
roll
pop
sub
mov
and
inc
out
cmc
inc
jge
push
pop
and
data16
es
insl
daa
cmp
adc
daa
scas
loope
popf
hlt
outsl
dec
mov
stos
sbb
sbb
push
lds
test
add
or
mov
inc
sub
ret
pop
mov
push
xor
sbb
fisubl
dec
push
mov
mov
hlt
jecxz
xor
mul
dec
sti
out
cmc
loopne
sahf
imul
xchg
cmp
jno
js
dec
je
cmp
dec
dec
push
lahf
sahf
add
hlt
bound
lods
pop
adc
ret
jb
std
fsubl
jae
cmp
jns
adc
cli
adc
sbb
clc
jae
push
pop
and
call
adc
pop
or
std
das
jae
push
mov
inc
dec
outsb
jae
hlt
mov
repnz
jg
rcl
in
jecxz
xor
mov
adc
int3
sbb
xchg
sbb
stos
fsts
xor
cmc
sub
popa
outsl
lcall
pop
das
push
xchg
mov
adc
or
push
out
pop
mov
mov
lock
push
xchg
push
daa
xchg
rclb
loop
mov
jg
and
and
test
es
stos
jbe
dec
push
inc
loop
or
sub
aad
cmp
aad
cmpsw
xchg
fpatan
sti
stos
cmp
test
rclb
out
push
push
dec
fldl
mov
fmul
push
cmp
dec
cmp
mov
mov
dec
adc
inc
jp
leave
shlb
aam
subl
mov
arpl
enter
push
xchg
mov
pop
xlat
or
loope
hlt
cmc
orb
xorl
mov
dec
fstl
mov
dec
mov
enter
fsubrs
js
mov
jns
int3
stc
xor
xchg
imul
subl
inc
mov
sahf
rcrl
add
mov
test
clc
jo
or
or
mov
out
int
push
sar
addr16
into
lcall
loopne
mov
jmp
xlat
mov
push
cmp
icebp
rol
mov
fwait
pop
mov
or
cld
ret
mov
repnz
ljmp
cltd
jmp
add
in
fs
jmp
fcomi
pop
cmc
push
in
lods
lock
lea
lods
xor
leave
movb
dec
fs
clc
xchg
mov
cwtl
lahf
and
dec
ja
lods
data16
pop
cli
cmp
fistl
push
add
pop
rorb
mov
fwait
mov
das
iret
pop
lock
mov
jmp
lds
push
insl
mov
sbb
jb
pop
fistpl
and
das
fsubs
adc
mov
sbb
and
adc
pop
std
and
andl
adc
jns
pop
sbb
xor
in
orl
mov
ror
adc
sbbb
subb
js
jecxz
gs
pop
jmp
ljmp
ss
repnz
cmc
imulb
cld
in
sub
mov
mov
out
or
repz
mov
add
inc
sub
fwait
cmp
and
insb
std
jb
or
xchg
iret
rcl
and
push
sub
mov
test
cltd
xchg
mov
push
jnp
in
jns
int3
cmc
lahf
push
mov
xor
cs
out
add
adc
pop
pop
pop
int3
jle
stos
ret
mov
loop
dec
push
add
adc
mov
push
cmc
pop
lea
cltd
jb
test
enter
push
inc
pusha
shl
enter
std
sar
ret
btc
jbe
mov
leave
imul
imul
jns
push
cld
pop
mov
leave
dec
shlb
pop
push
in
mov
xor
testl
outsl
in
scas
jo
das
inc
insl
or
sbb
scas
cmp
das
push
pop
push
mov
popa
push
dec
js
shrl
sub
push
jmp
cltd
rcl
adcl
or
push
mov
adc
adc
iret
movsb
jbe
stos
inc
inc
fildll
cmp
in
jecxz
stos
clc
out
loopne
mov
or
push
jae
clc
mov
in
adc
sub
sbb
mov
lds
mov
stos
ds
adc
xchg
or
out
inc
pusha
test
bound
out
sub
inc
sbb
in
adc
dec
in
das
ficomps
movsl
decb
mov
add
xor
adc
cmp
aad
lock
push
inc
je
lret
insl
aad
andl
adc
push
sbb
sub
mov
mov
les
xchg
push
or
shrb
pop
sub
sub
pop
sub
sbb
mov
int
dec
sub
cmp
rclb
xchg
les
and
xchg
sar
mov
bound
in
sbb
lahf
jns
popf
testb
add
dec
sbb
cmp
repz
scas
stc
and
lock
cmp
shll
sarb
aam
ss
cmp
out
int
ss
out
hlt
mov
jecxz
xor
icebp
push
ss
not
cwtl
mov
fsub
push
ss
sub
hlt
push
leave
pop
dec
push
and
call
pop
je
push
dec
cli
sti
xchg
push
arpl
fldcw
cmpsl
pop
es
and
cmp
or
dec
adc
sbb
lds
mov
push
push
fldcw
xchg
push
mov
cmp
dec
pushf
rcl
inc
dec
sti
lret
aam
fiaddl
sub
lods
mov
imul
or
mov
fmuls
jle
and
out
sbb
iret
sbb
pop
sub
call
movsl
imul
ret
xchg
jmp
xlat
fs
icebp
or
gs
hlt
cmp
shlb
sub
shl
mov
sub
dec
je
jne
and
insl
and
fsubrl
mov
sbb
out
cmp
pop
insl
add
or
rclb
loope
outsb
imul
outsl
test
ss
incl
inc
leave
adc
pop
mov
cs
out
mov
and
inc
inc
dec
into
xor
xchg
leave
cs
push
cwtl
repz
xchg
push
loop
cld
mov
jge
push
xlat
sbb
clc
ds
jmp
add
inc
xchg
push
mov
stos
push
push
adc
into
fwait
sbb
push
stc
test
sbb
dec
out
mov
lods
mov
push
xor
xchg
enter
inc
push
mov
mov
xchg
adc
testb
out
push
adc
stos
enter
push
mov
ss
xor
mov
jmp
jmp
daa
test
pop
xchg
sbb
dec
daa
leave
popf
and
jp
or
loopne
cli
imul
adc
insb
jno
and
pop
add
dec
jo
cmp
mov
loop
insb
cs
push
dec
push
cmp
movsl
sbb
jb
addr16
and
dec
sub
pop
loope
cmp
cmp
out
mov
addr16
and
sub
cmp
xchg
xlat
jecxz
sub
mov
pop
inc
fldenv
incb
sbb
inc
bound
test
ret
cmp
popa
xchg
movsb
mov
or
xchg
sub
das
and
cli
fstp
xor
fs
adc
mov
mov
out
mov
lds
mov
add
mov
mov
add
insl
add
loope
dec
pop
adc
mov
push
sbb
and
dec
out
push
xor
mov
jo
mov
add
and
ja
cli
dec
mov
fistl
mov
rcrl
shll
pop
call
lret
push
test
call
or
xlat
cltd
push
inc
xchg
stos
cmp
mov
push
push
jmp
aaa
xor
xor
test
cs
add
xacquire
add
test
mov
decl
mov
jbe
xchg
ret
xor
mov
cmpl
int3
int
push
inc
popa
sbb
aaa
into
jns
rcr
bound
adc
push
and
jo
in
adc
repnz
or
adc
lods
pop
jle
cwtl
fmulp
xchg
popf
cmc
xor
mov
push
je
inc
inc
sbb
or
mov
inc
add
adc
add
xchg
push
mov
jo
pop
testl
push
out
mov
mov
xor
sbb
xor
subl
cld
dec
std
pop
pop
jp
cmp
jo
push
xchg
or
add
ljmp
jb
leave
ja
inc
or
ds
lahf
and
loope
inc
add
insb
je
mov
sbb
cmp
fstps
mov
pop
sbb
mov
push
ffreep
add
push
mov
cld
stos
jmp
dec
testb
sub
dec
sbb
adc
mov
mov
inc
mov
aad
xchg
in
sub
in
cmp
loop
and
and
sbb
sbb
xchg
test
scas
clc
cmp
sahf
cmp
lock
or
shlb
outsb
xchg
pop
addr16
ret
iret
jns
ret
lahf
call
inc
mov
sarb
sti
pop
lods
mov
loopne
ret
nop
sub
jno,pn
fstps
or
fisttpl
cmpsl
cli
ror
and
cmp
cltd
push
xor
ret
sahf
adc
out
mov
pop
sbb
inc
fwait
and
pop
or
ja
push
jl
test
js
cmp
fsub
arpl
in
adc
add
or
xor
adc
iret
adc
sahf
test
cmc
daa
icebp
jae
pushf
inc
mov
pushf
sbb
imul
lds
push
ds
cmp
idivl
mov
shlb
inc
lcall
movsb
pop
mov
orb
jbe
push
filds
stos
lahf
cltd
lahf
xchg
push
pop
aas
and
aas
sbb
cli
icebp
scas
sbb
dec
xor
addb
sbb
les
inc
inc
out
fwait
dec
dec
dec
rcr
xchg
lods
inc
stos
and
jnp
jnp
lock
cmpl
cwtl
mov
jae
and
lods
mov
xchg
repz
mov
in
cli
adc
insl
fwait
mov
jb
insl
mov
pop
xlat
jb
adc
ja
dec
ret
stc
mov
push
mov
xor
xchg
insl
gs
mov
out
xchg
inc
daa
shll
cmpsl
add
loop
cltd
mov
pop
pop
out
repz
fildll
xchg
mul
out
inc
stos
jmp
sub
mov
into
hlt
scas
fiadds
pop
xchg
mov
lds
divb
mov
pop
test
or
xor
dec
int3
fld
inc
jns
cmp
adc
sub
cmpsb
fcmovnb
shll
sbb
mov
scas
dec
add
ret
repnz
pop
aaa
outsb
imul
cmp
push
int3
loop
pop
in
test
jl
mov
call
imul
repnz
je
dec
or
mov
rcrl
cwtl
cmc
out
imul
std
cmp
pop
es
incb
fldcw
test
cmp
or
mov
icebp
sub
les
xchg
rcr
jge
xchg
test
xor
push
cs
xlat
rcrl
add
lcall
das
mov
ret
and
test
sti
push
mov
mov
mov
sub
inc
mov
push
ja
cwtl
and
ds
rorb
clc
int
sbb
movsb
pop
insl
leave
js
mov
add
ljmp
jno
sbb
xchg
lcall
clc
fnstsw
lahf
into
mov
outsl
cmp
sbb
mov
inc
das
pop
sub
outsb
xchg
aam
mov
rcrl
jmp
mov
orb
cmp
add
dec
adc
imul
dec
jbe
loope
aas
pusha
pop
idivb
mov
sti
nop
clc
cmp
jle
dec
pop
lret
popf
ret
ss
lods
dec
mov
icebp
test
or
push
ja
mov
xor
jbe
mov
in
cmp
push
inc
cmp
xchg
cmp
and
imull
js
push
mov
pop
call
jge
xor
sahf
nop
fcoms
lea
inc
enter
jmp
nop
fisttpl
or
fildll
loopne
cld
ret
xchg
iret
rcrl
xchg
inc
sub
in
movsl
jae
inc
nop
test
sub
mov
and
jg
fldenv
dec
and
jne
mov
mov
loopne
adc
movsl
mov
clc
jl
fisttpll
sbb
cmp
shlb
dec
into
mov
push
loop
sbbl
shr
dec
popf
xor
inc
rorb
inc
mov
stc
pop
and
add
dec
mov
or
call
cmpl
cmp
lret
add
ret
sub
cmpsb
lea
test
adc
fwait
xchg
dec
shlb
dec
add
repnz
fs
xor
xorb
movsl
mov
ret
bound
xchg
lods
in
and
sub
cmp
or
cwtl
adc
mov
jg
stos
cs
repnz
cs
add
outsl
cld
mov
jmp
mov
pop
push
mov
ficoms
out
gs
movsl
mov
and
lods
inc
nop
push
and
and
inc
popa
push
sbb
jnp
pop
movsb
sbb
fwait
mov
lret
xor
dec
mov
mov
adc
push
call
add
daa
or
pop
into
mov
pop
cli
movsb
imul
popa
bound
jp
sbb
jmp
pop
stos
xchg
pop
ret
jl
icebp
xchg
out
inc
ljmp
dec
push
mov
pop
test
jo
jns
ss
movb
clts
shrb
lret
mov
xchg
push
fwait
shrb
imul
mov
push
lret
daa
sbb
out
push
js
pop
xor
jl
mov
pop
loop
sarb
sub
out
testb
xchg
sub
hlt
jne
mov
aas
stc
jmp
out
push
adc
jp
mov
test
ja
fdivs
psllw
sbb
das
insb
sbb
lea
into
aam
fistl
cmpsb
aam
rorb
in
and
mov
add
stc
loopne
lret
iret
add
je
mov
shll
xchg
and
mov
mov
cmp
into
and
xchg
jmp
add
pop
jge
enter
shrb
ljmp
add
and
or
add
daa
or
xor
push
push
inc
je
inc
into
dec
aam
cmp
lahf
add
cltd
inc
imul
les
sub
cltd
xlat
mov
mov
mov
nop
fadds
test
cli
xchg
pop
push
rolb
or
adc
pop
mov
inc
lods
pop
xchg
push
dec
and
test
and
enter
es
shll
and
xor
or
sbb
xchg
jl
xor
xorl
ss
cmpsb
ja
mov
fsubs
lahf
lods
push
daa
push
cmp
dec
cwtl
jb
add
sub
mov
lahf
popa
push
fwait
mov
icebp
xchg
outsl
in
jns
push
jg
mov
cld
in
sarb
dec
scas
sbbl
pop
int3
xor
mov
mov
dec
xor
xchg
and
rcrb
call
cmp
pop
pop
adc
test
mov
mov
inc
jg
sub
add
in
pop
inc
arpl
arpl
inc
pop
push
ja
jg
sub
jo
shll
dec
daa
loope
jnp
mov
jbe
adc
stos
and
scas
rcr
movsb
mov
testb
jmp
outsb
mov
mov
pushf
xchg
and
xchg
notl
add
jp
jb
shr
enter
and
mov
jb
mov
cs
xrelease
jns
xchg
aam
ss
sbb
mov
xchg
sub
mov
sti
incl
das
mov
bound
std
test
testb
mov
cltd
popa
pop
js
or
ror
or
pop
int3
cmp
mov
inc
push
and
es
das
scas
aas
lcall
sub
xchg
incl
ret
cmp
cwtl
int3
in
lock
lret
pop
pushf
sbb
je
pop
xor
loopne
aas
ds
out
test
shll
rolb
iret
push
mov
mov
shll
xchg
inc
add
cmpsb
or
imul
adc
lods
mov
out
loopne
jmp
cmc
mov
outsl
mov
mov
aam
jbe
jp
jns
jo
dec
fsub
std
insl
push
leave
repnz
test
mov
icebp
mull
outsl
push
xor
push
xor
xchg
or
ds
imul
sbb
cmpsb
ret
jge
test
mov
fucomp
lcall
xor
pop
mov
adc
push
out
scas
mov
incl
stos
lahf
cmp
push
or
or
leave
call
jo
icebp
pop
sti
movsw
in
in
jbe
jle
in
push
add
adc
adc
cli
mov
and
sub
loope
decl
mov
std
repnz
fisttpll
dec
xor
addl
jl,pn
mov
lahf
sub
adc
notb
dec
movsl
int3
pop
or
mov
add
fs
fldcw
sar
dec
xchg
sub
cmp
sub
cmp
int3
and
mov
inc
shl
sbb
dec
das
add
mov
and
fwait
inc
mov
dec
repz
cmc
in
push
cwtl
adc
dec
pusha
icebp
fisttpl
mov
mov
xchg
add
pop
add
icebp
addr16
dec
fstps
xor
jb
sar
les
and
mov
jb
sbb
cmp
into
ja
out
push
dec
mov
sub
insl
insb
jo
daa
repnz
sbb
push
gs
imul
lcall
mov
pop
pop
mov
mov
fwait
leave
std
adc
fisubl
xchg
xor
sub
jge
pop
push
jb
insb
xchg
cmp
in
xor
pop
mov
pop
aam
iret
sbb
xchg
sub
cmp
mov
or
aam
ret
or
ret
sti
jl
fistpll
lret
and
and
dec
xchg
push
mov
aad
bound
insl
push
push
sub
imul
add
cmc
mov
dec
in
mov
push
gs
sbb
pop
mov
stos
sub
and
fs
or
jae
pop
lret
xor
pusha
adc
data16
push
xchg
or
pop
mov
seto
mov
push
add
loope
or
fbld
xchg
call
or
hlt
mov
pop
pop
mov
data16
testb
in
xor
jbe
int
xchg
mov
pop
jno
mov
or
jbe
xchg
rcrl
insb
mov
lcall
mov
jecxz
rclb
dec
pop
or
test
test
add
lods
sub
testl
in
mov
pushf
xorl
imull
popa
mov
outsb
cmp
hlt
pusha
inc
dec
std
fsubrs
sub
cmp
or
xchg
xchg
jbe
icebp
popf
xor
clc
push
aad
pop
fs
pop
cmc
popa
loopne
xor
jge
xchg
sahf
jp
cmpsl
xchg
out
das
enter
pusha
xor
nop
stc
inc
adc
add
leave
out
out
xchg
mov
xor
jl
sbb
push
add
add
inc
dec
mov
lahf
jae
add
jg
mov
aas
test
push
push
mov
xchg
xchg
add
jecxz
or
jp
mov
fimull
test
sbbb
dec
cmp
pop
jp
fcomp
or
adc
mov
out
xor
mov
dec
in
pop
cld
jge
and
cmp
stc
pop
arpl
push
cmp
in
sub
xchg
popa
test
sti
ret
bound
mul
or
push
add
shrl
adc
imul
mov
sbb
xor
clc
xlat
mov
aad
xchg
dec
ret
dec
jns
loop
mov
xchg
stos
leave
mov
pop
ja
sbbl
shll
mov
test
pushl
mov
fldl
es
push
xchg
pop
adc
stc
pop
inc
sbb
mov
fcompp
pop
scas
dec
sub
adc
pusha
fcompl
cmpb
loop
add
cmp
in
push
rclb
mov
inc
sbb
sbb
aad
sti
fs
jge
imull
nop
push
and
push
loopne
mov
xchg
je
insb
test
sub
cmpsb
pop
mov
mov
cmp
dec
adc
rolb
ljmp
xor
ret
insb
add
lcall
mov
std
mov
or
cmp
aaa
sub
and
sub
pop
out
add
daa
add
adc
mov
cmp
es
xor
popl
sbb
outsb
lret
or
mov
iret
ljmp
pop
jecxz
fstpl
sub
mov
xorl
sub
dec
lcall
jecxz
mov
call
out
mov
push
jno
mov
int
dec
outsb
inc
int3
daa
arpl
and
lcall
test
push
xor
out
sub
outsl
push
dec
pop
mov
in
xchg
and
dec
jmp
test
clc
repnz
scas
jne
and
pop
test
dec
sahf
xchg
std
in
add
push
dec
cmp
sub
ja
lcall
mov
and
push
xchg
add
pop
and
dec
add
ja
dec
test
dec
repz
shrb
out
inc
sbb
fisttpl
mov
shll
nop
les
roll
out
pop
push
push
movsb
jle
loop
fnstsw
scas
imul
mov
lods
enter
xchg
xchg
orb
xor
aas
xor
xor
add
orb
mov
arpl
ret
movsl
out
clc
pop
pop
xchg
je
into
xorb
insb
add
xor
xchg
push
inc
mov
imul
and
push
and
add
movsb
in
xchg
jle
pusha
mov
mov
sub
lock
imul
pop
or
repnz
add
inc
cmp
test
jecxz
mov
jae
jge
cld
xchg
inc
aad
push
jae
adc
adc
enter
mov
jl
inc
int
lret
jae
xor
mov
ds
loop
pop
mov
arpl
fdivrl
xchg
adc
or
add
sbb
mov
or
push
adc
stos
and
stos
pusha
dec
test
cld
test
inc
mov
mov
push
scas
daa
inc
je
aaa
sub
sbb
sti
mov
jmp
pushf
push
push
cmp
nop
lods
movsl
adc
lcall
sbb
push
ljmp
lods
mov
mov
push
stc
mov
lds
push
adc
xchg
mov
pop
lds
fistpll
dec
insb
mov
popa
cmp
or
daa
nop
loopne
push
xor
scas
xor
movntq
out
scas
push
in
dec
jl
xchg
pop
hlt
xchg
es
cmc
pop
fsubl
outsb
xor
cmp
aaa
dec
fcompl
mov
xchg
movsb
cmp
xlat
cmp
sbbb
lods
inc
lahf
xor
bound
lods
push
loop
sahf
push
pop
loopne
cmpsb
fwait
test
fwait
call
jnp
fucomi
jmp
pop
incb
fcompl
inc
inc
or
mov
cmp
push
push
bound
push
loopne
insl
insb
js
lret
scas
mov
mov
mov
sbb
lods
dec
add
xchg
adc
cld
sub
pop
mov
xor
push
dec
mov
gs
loop
ds
dec
int
sbb
add
jp
adc
in
aad
sub
lods
cwtl
xchg
out
call
stc
cmc
ljmp
jns
sub
in
imul
push
xchg
inc
scas
test
cmp
cmpsl
and
addr16
jae
add
std
xor
and
test
and
mov
inc
add
lcall
loop
mov
mov
test
mov
cmp
lods
icebp
cmpsb
lock
jecxz
cmp
dec
in
jbe
adc
daa
add
mov
push
xchg
sub
push
xor
jb
push
rcll
mov
sub
int
in
cmp
xor
fnsave
je
add
add
push
iret
push
dec
xor
jle
in
cld
cmp
adc
repz
xor
push
push
out
lea
sbb
xor
xchg
rclb
mov
push
enter
xchg
cmp
inc
lock
out
push
leave
and
ficomps
test
push
add
jno
or
outsl
inc
loopne
in
subb
aad
clc
std
in
mov
or
dec
ficoml
aam
mov
fists
add
push
xchg
hlt
dec
cmp
or
loopne
into
adc
pop
cmp
imul
pop
push
shlb
add
push
push
lock
pop
sbb
arpl
add
jnp
fs
call
and
int3
dec
mov
fcmovnu
ds
mov
pop
mov
cli
and
icebp
and
fildll
divl
lret
sub
jae
arpl
adc
fs
sub
ljmp
gs
movsb
mov
mov
push
xor
xchg
pusha
jne
pop
or
xor
dec
fwait
xchg
xorl
and
iret
test
and
enter
in
or
nop
cld
cltd
addr16
mov
adcb
icebp
inc
popa
fucomip
and
jecxz
cli
sbb
test
fimuls
adc
dec
movsl
jnp
add
ficoml
outsb
xor
mov
pop
repnz
out
or
jl
xchg
es
jle
popa
in
fwait
xor
dec
insl
adc
push
push
aam
cmp
shrb
jecxz
dec
add
inc
sbb
lcall
xlat
or
cltd
push
dec
inc
mov
pop
mov
pop
les
rclb
imulb
lods
shlb
inc
lods
pushf
ret
cmp
xlat
rcrb
pop
adc
add
jle
xchg
sbb
daa
mov
divb
inc
mov
xchg
in
mov
ret
xchg
call
or
jge
aas
sti
mov
jmp
adc
jl
pushf
das
testb
mov
sbb
fdivrs
mov
fnstenv
cmp
mov
push
mov
sub
pop
stos
cli
rorb
dec
loope
cs
stos
lods
shrb
and
movsb
push
xor
push
out
ret
clc
popf
inc
pusha
dec
jae
push
repz
mov
jbe
or
xor
mov
push
add
sub
jo
cld
mov
dec
cmp
pop
popf
je
incl
ret
inc
cmp
adc
pop
fs
imul
fs
cmp
test
outsl
and
and
and
dec
cmp
scas
outsl
or
fstps
clc
call
push
sub
lret
das
ret
sub
jmp
fs
jne
push
cmpsb
cmp
pop
push
sbb
insl
cmp
fcomps
mov
mov
mov
std
cmp
add
adc
inc
cmp
dec
xchg
cs
mov
ret
xor
jbe
cwtl
inc
or
lds
mov
mov
lods
imul
psubusb
xor
es
jo
add
ret
xor
xor
jl
bound
jb
pusha
dec
and
sbb
inc
iret
xchg
and
in
and
lret
mov
jmp
adc
and
sub
int3
pop
daa
add
stc
lcall
scas
xor
push
fstps
xchg
cmpsl
rcll
xchg
cmp
daa
pop
gs
ljmp
sahf
mov
xchg
and
lods
je
pop
add
or
sub
mov
push
push
pop
cs
test
ljmp
jns
fbld
in
pop
sbb
jp
xchg
mov
arpl
xchg
pop
jmp
sbb
mov
in
mov
push
out
pushf
iret
xor
stos
mov
lahf
cmc
aas
mov
jae,pt
mov
sub
mov
mov
xchg
pop
sbb
lahf
movb
pop
xchg
dec
xchg
mov
jnp
loop
dec
mov
fsubs
mov
xchg
pushf
data16
loop
mov
arpl
dec
pop
mov
add
mov
inc
dec
mov
nop
lods
test
sbb
sbb
popa
lret
shll
insb
nop
out
mov
mov
sbb
push
sub
cmp
int
lds
decb
push
aaa
in
aam
es
ljmp
xchg
cmp
jle
add
inc
gs
mov
add
and
fistpll
fimull
or
cmp
mov
lock
fmuls
popf
std
adc
push
imul
test
jnp
sbb
mov
and
sahf
enter
pop
mov
cmp
pop
push
push
ds
leave
jmp
sarb
inc
cmp
movsb
xorb
xchg
push
lds
lahf
insl
test
in
xor
mov
enter
loop
es
pop
cwtl
and
cmp
sub
adc
stos
lcall
in
push
sbb
cs
dec
pop
sub
adc
pushl
add
dec
xlat
cwtl
shrl
adcl
cmc
push
jne
mov
sbbl
xchg
inc
xor
aas
icebp
mov
adc
test
fstps
and
je
fisttpl
add
mov
int3
xor
cmp
movsb
inc
pop
loope
sub
jb
into
or
imulb
push
dec
in
aad
jae
jbe
pushf
push
sub
push
sbb
les
or
stc
sub
push
mov
es
fdivrs
pop
repz
pushf
adc
or
cmpl
test
xor
popa
xor
cmp
fwait
inc
pop
pop
xchg
shlb
call
fucomi
daa
pop
test
insl
fwait
sub
mov
jo
mov
fcomps
inc
cld
das
scas
push
jnp
fdivrs
out
jo
decl
mov
daa
adc
cld
sub
lods
iret
mov
mov
mov
jae
ret
out
ljmp
adc
ret
jmp
sbb
xor
dec
cld
xor
add
pushf
pop
add
clc
int3
neg
call
outsl
lods
and
pop
cltd
dec
push
sbb
add
bound
and
sub
lds
inc
adc
inc
clc
mov
out
mov
dec
jp
push
xchg
push
mov
test
loope
jne
dec
test
xchg
push
stc
pop
rcrb
subb
jmp
jns
lahf
mov
lods
es
lea
fisttpl
mov
into
stc
icebp
fdivrl
scas
xor
jp
ljmp
imul
jg
pop
pusha
ljmp
xchg
and
xchg
push
stos
rorb
pop
pushf
mov
mov
outsb
cmp
mov
pushf
mov
push
mov
xchg
bound
xorl
js
jae
outsb
sar
mov
dec
out
bound
sbb
or
rol
lods
or
daa
out
test
and
xlat
add
out
ja
jae
mov
fldcw
lcall
in
int3
pop
cltd
sarl
and
or
andl
insl
cli
and
insl
jp
pop
add
sbb
pop
inc
rcrb
leave
mov
fimull
pop
shll
lcall
or
sub
out
add
jb
mov
cwtl
cld
pop
mov
cmp
pop
in
lods
rorl
or
mov
pop
lret
je
cmp
add
mov
sbb
pop
sbb
aad
loope
pop
std
ss
and
repz
stc
push
mov
mov
cmp
jnp
or
xchg
clc
cmpsl
push
sub
cmp
out
rolb
adc
fs
cli
mov
and
cmpsl
aam
popf
cmpsb
aad
addr16
inc
add
pop
jp
push
ret
add
or
adc
ss
out
sub
leave
cli
adc
push
in
stc
push
lods
inc
mov
adc
jge
rcrl
xor
dec
pop
call
jg
ljmp
mov
stc
int
jno
add
dec
fnstcw
aaa
sbb
push
sbb
push
push
sbb
sbb
jae
jle
push
adc
dec
sahf
add
mov
mov
lcall
adc
xchg
mov
add
in
push
adc
rolb
and
pop
fistpl
mov
pop
je
daa
mov
sub
bound
adc
jp
repnz
pop
lcall
daa
loopne
sub
push
dec
jmp
stos
push
cmp
outsb
jne
es
ss
jp
add
jns
mov
jb
pop
and
push
rol
es
push
pop
scas
xor
jge
mov
notb
stos
mov
lods
lret
ljmp
sbb
mov
sbb
int
xor
add
and
jmp
daa
push
loop
push
aam
mov
fs
stos
jmp
push
loope
rol
mov
pop
daa
dec
in
or
int
daa
dec
outsb
stos
sbb
add
lods
push
jae
sbb
shl
mov
cmp
xchg
les
jo
ret
fists
icebp
add
lret
add
fwait
jnp
pushf
test
pop
inc
mov
cwtl
mov
pop
jae
sbbl
xchg
sub
jb
jo
ss
roll
shr
mov
inc
loopne
xchg
fucom
pop
aaa
jl
popa
xchg
lret
sbb
dec
aas
sub
xor
push
mov
inc
lahf
jle
add
pop
xchg
test
push
cmp
hlt
mov
add
sub
lea
ja
cmp
dec
cmp
adc
adc
mov
jne
outsl
inc
adc
cs
ljmp
fisubrs
sbb
adc
adc
pop
mov
insb
push
in
and
inc
dec
repnz
dec
inc
and
xchg
jbe
popa
jg
lock
stos
adc
fsts
popa
pop
lods
ret
shl
mov
stc
mov
pop
and
int3
flds
fldcw
insb
inc
mov
add
test
movsl
jno
mov
insl
pop
push
pop
scas
lcall
fimull
into
inc
aas
xor
mov
fimuls
push
xor
repnz
test
fdivr
jl
inc
and
push
dec
mov
and
jmp
testl
loop
or
add
popa
dec
adc
xchg
xchg
loop
xor
and
ds
add
dec
test
fmul
xchg
das
adc
xchg
sub
adc
push
je
cmp
popa
nop
arpl
rcrb
jbe
test
dec
scas
pushf
inc
add
rol
cs
or
pusha
neg
and
dec
sbb
mov
cmc
aaa
inc
popf
jmp
push
mov
pop
sbb
dec
jae
xchg
adc
add
fs
test
rcr
mov
out
sbb
pushf
mov
ss
add
sbb
jg
jne
lds
xor
add
pop
leave
int3
pop
jle
faddl
icebp
std
out
push
mov
pop
xchg
repnz
ss
pop
jp
jecxz
pushf
out
mov
and
mov
push
hlt
lahf
and
stos
icebp
out
sub
jp
popf
push
rcrb
std
push
and
setle
xchg
mov
push
adc
adc
sbb
push
jbe
test
and
mov
mov
sbb
cmp
data16
inc
push
mov
aaa
mov
inc
popf
inc
arpl
jecxz
cmp
stc
das
fisubrs
pop
insb
push
jmp
in
pop
lret
mov
incl
loopne
mov
sahf
dec
rorl
rcrl
xchg
adc
mov
shrb
outsl
aam
fidivs
fisttps
insl
cli
in
loope
sub
mov
pop
ret
sti
cmp
clc
mov
pop
cli
xor
and
outsl
and
pop
es
test
mov
inc
sub
fsts
pop
and
xor
dec
mov
mov
scas
inc
ljmp
repz
xor
add
lods
sbb
mov
xor
imul
xor
mov
ret
dec
jae
bound
or
xchg
outsb
faddp
adc
pop
or
sub
xor
cmpsb
mov
xchg
push
mov
and
mov
adc
mov
test
dec
adc
dec
push
aaa
xor
cmp
incb
xchg
mov
xor
insl
cmpsb
inc
adc
clc
mov
pop
mov
pushf
andl
mov
xor
aad
sbb
imul
lods
cmc
push
and
das
push
divl
pop
mov
out
sbb
adc
push
dec
into
xlat
xchg
mov
std
push
call
sub
and
inc
mov
andl
xchg
push
fwait
mov
fs
call
fdivrs
lahf
outsb
enter
jg
cmpsb
sbb
cmpsb
cltd
jl
adcb
setne
imul
xchg
xchg
push
push
jge
shrl
pop
add
add
cmp
sbbb
adc
mov
mov
pop
loope
enter
dec
into
xchg
dec
xchg
mov
pop
fldcw
cmp
sbb
or
and
xchg
sbb
ja
jns
mov
and
andb
add
jmp
push
mov
mov
xor
jg
cmp
fidivs
mov
cltd
sarl
idivl
repnz
test
xchg
std
test
push
lods
les
es
mov
xor
hlt
inc
inc
mov
jp
inc
ds
mov
sub
xchg
test
adc
roll
jne
push
jb
xchg
jns
negl
xchg
lea
sbb
jg
cmp
xchg
inc
inc
xor
jge
or
insl
push
pop
aaa
and
jne
xchg
imul
lods
dec
mov
fdivl
fbstp
jp
sbbl
mov
or
aam
push
or
cli
xchg
adc
scas
sub
lret
cmp
pop
data16
lds
mov
sbb
jb
lock
sbb
push
inc
rcrl
and
sti
add
mov
mov
mov
movsb
aaa
cmpsl
lods
imul
xchg
mov
adc
out
adc
into
sbb
or
aas
ret
in
push
jae
fs
fwait
stos
dec
lods
insb
loopne
or
repz
fidivs
lea
jbe
xchg
or
mov
push
pop
add
into
fsubrs
mov
scas
add
pop
gs
pop
cmp
mov
jo
push
push
dec
mov
les
mov
js
or
inc
fdivrl
pop
add
out
data16
pop
mov
pop
mov
es
push
add
mov
xchg
jns
outsb
and
out
and
in
cmp
shlb
cmp
adc
inc
cmc
xor
sti
sbb
sub
mov
outsl
dec
push
lods
sti
cmpsb
roll
mov
int
int3
inc
scas
div
sahf
lcall
cwtl
push
in
fdivs
inc
aaa
dec
int
and
movsl
or
push
inc
loope
xor
aad
sti
adc
push
addr16
adc
adc
add
mov
jne
mov
lock
int3
pop
inc
and
mov
fnstsw
clc
andl
das
movsb
incb
pushl
xchg
sahf
sub
xchg
pushf
dec
mov
push
pop
dec
jmp
mov
ljmp
std
das
out
mov
ljmp
out
in
lea
mov
mov
loop
aas
cmc
mov
call
lea
push
add
decb
ljmp
hlt
shrl
in
mov
mov
push
jl
xchg
sub
clc
push
or
or
jecxz
rcrb
into
add
jg
imul
or
and
mov
push
jmp
sti
orl
incb
enter
xor
push
xchg
outsl
js
inc
jmp
add
stos
shlb
cli
fstl
push
sbb
ja
ficompl
rorb
mov
movsb
xchg
adc
int3
cmp
adc
adc
je
movsl
sub
sbb
rcrb
nop
sub
movsb
inc
in
xchg
jecxz
jae
or
inc
cmp
cli
jno
pop
ljmp
push
out
inc
scas
and
fmul
imul
cmp
das
mov
inc
inc
gs
pop
xchg
cwtl
add
mov
pop
mov
dec
sbb
dec
jg
stc
xor
in
adc
mov
and
inc
mov
push
mov
call
nop
into
inc
inc
adc
ljmp
dec
jp
mov
fs
nop
pop
mov
xor
pusha
lahf
mov
jge
sbb
dec
out
pusha
ss
lock
insl
dec
lock
cmpsl
jl
mov
or
int
cmp
mov
rorl
mov
sbbb
negb
loop
mov
push
adc
out
lods
push
mov
mov
xchg
xchg
adc
lds
or
in
jg,pt
leave
lret
fwait
mov
and
and
loope
jecxz
mov
add
shll
sub
mov
xor
xor
fnstsw
or
dec
mov
add
cwtl
lock
sti
int3
dec
xor
aaa
out
jnp
in
mov
push
mov
rcr
scas
test
inc
aaa
cld
insb
movsb
mov
jb
push
loop
mov
mov
mov
or
push
and
pop
cs
dec
imul
es
ret
aaa
xlat
daa
lds
aad
mov
fwait
pop
mov
mov
mov
xchg
fs
jne
into
jnp
xor
jnp
outsl
shll
push
test
xchg
cli
jmp
mov
and
aam
test
mov
fwait
inc
in
sub
sub
cmp
pop
shll
bnd
dec
mov
xchg
test
fldcw
mov
push
sbb
xchg
nop
xchg
je
test
cmp
add
adc
jg
and
jecxz
add
or
adc
xor
adc
lret
jmp
inc
mov
movsb
sbb
inc
lahf
dec
dec
in
and
add
pop
jecxz
out
repnz
popf
pop
cmc
mov
jp
sub
jmp
xor
lock
ret
fnsave
and
mov
aam
xor
push
cmp
je
inc
push
repnz
or
lock
subl
cmc
jno
sub
mov
pop
ja
xchg
ret
out
cmp
jge
sub
cmp
pop
outsl
lods
inc
dec
imul
sub
adc
sti
mov
fs
cwtl
adc
lcall
int
loop
mov
or
push
pop
test
testb
mov
adc
jge
jge
aas
out
roll
lods
inc
in
sbb
fs
testl
stos
xchg
fstpl
stos
adc
adc
and
or
scas
sbb
jb
mulb
bound
jmp
imul
movntq
int3
ucomiss
je
movsb
push
shrl
push
into
mov
ret
std
cmp
and
loope
mov
jo
xchg
mov
fwait
xchg
mov
pop
aad
pop
cmp
bound
popf
andb
stc
popl
mov
sub
xorb
addl
push
fbstp
fiadds
rolb
cmp
xor
test
shl
inc
sub
xor
into
push
and
neg
cs
push
movsl
notl
push
cli
mov
jae
imul
push
push
pop
sarb
divl
inc
xchg
add
shlb
test
sub
mov
lret
pop
lods
xor
cmp
je
rcl
sub
int3
ret
sub
xchg
dec
jno
mov
fwait
jne
jno
stos
jmp
test
inc
inc
jle
sub
mov
insb
ds
repz
cmc
out
pop
add
dec
jl
xor
aas
sbb
xor
stos
ret
popf
clc
les
xor
in
sbb
inc
xchg
pop
pop
cmp
and
jecxz
test
pushf
enter
xchg
popf
test
push
cmc
jne
std
jne
dec
out
out
pop
clc
out
rcrl
scas
in
dec
dec
popa
xor
mov
mov
in
jmp
mov
sbb
int
xchg
nop
xchg
or
xor
movsb
cmp
sbb
xchg
mov
cld
xor
loopne
push
inc
imul
lods
mov
jae
mov
xchg
lds
incb
fstps
leave
inc
mov
xchg
sub
in
push
stos
sbb
clc
arpl
pop
insl
sbb
pop
adc
out
and
xor
pusha
inc
xchg
movb
mov
push
adc
pop
dec
lock
jnp
fadd
test
xlat
adc
xor
add
inc
mov
lea
push
aam
cwtl
mov
pop
in
es
pop
mov
addr16
inc
rcrb
add
lret
out
jb
sub
cmp
in
dec
lahf
push
mov
lods
ljmp
or
xchg
push
in
xor
mov
in
and
out
dec
cmp
xor
or
mov
lret
jo
cmp
xor
icebp
adc
mov
dec
insb
mov
jmp
mov
mov
lds
mov
data16
idiv
ret
add
jle
jmp
test
stos
loope
or
lock
roll
mov
mov
pop
xchg
dec
mov
sub
pop
aad
xchg
adc
aaa
lods
mov
dec
mov
jne
sbb
fimuls
sbb
sub
jp
sub
xchg
or
cmc
cmp
inc
enter
push
shl
ja
in
test
sub
int3
dec
rorb
mov
or
repz
mov
adc
push
mov
cwtl
dec
dec
push
clc
or
mov
cmp
aam
mov
adc
adc
out
push
adc
in
jns
out
out
add
push
inc
or
imul
test
into
mov
loopne
cmp
pop
pop
cmpsb
flds
jnp
test
mov
aaa
add
outsl
sbb
xor
enter
aad
xor
in
fsubrs
or
sti
cmp
je
rcll
mov
sbb
stc
incl
mov
das
jl
push
push
mov
aas
cmp
add
adc
and
xchg
jb
outsb
int
lret
xchg
mov
pop
stc
test
pop
xchg
mov
sub
sahf
insb
add
dec
push
push
out
in
mov
pop
jbe
minps
cs
stos
jb
je
sub
push
add
dec
clc
ja
cltd
push
xor
adc
jne
inc
fisttpll
xchg
mov
add
outsb
arpl
bound
jecxz
cmp
cmp
imul
adc
rclb
stc
cld
insl
adc
and
cld
jmp
sub
xor
mov
fbstp
or
push
lahf
jg
adcb
push
mov
lods
int
int3
lcall
mov
js
cmp
sarb
sub
xchg
push
xor
movsl
push
xor
cmp
cmp
inc
in
loop
pop
add
xchg
sbb
cmp
push
arpl
mov
imul
mov
fs
push
push
out
enter
mov
mov
js
in
out
fmulp
cwtl
test
mov
jo
or
xor
mov
add
add
leave
mov
pop
and
dec
es
mov
ret
setnp
xchg
sti
pop
mov
clc
mov
jecxz
or
aad
inc
int
push
pop
stos
ds
or
add
xor
out
leave
adc
push
lret
jae
or
add
stc
call
mov
dec
loop
add
jns
jle
xchg
xchg
sbb
mov
out
les
xchg
pop
cli
daa
pop
inc
fdivr
xchg
loop
cmp
leave
stos
ret
out
push
mov
mov
jb
pop
cmp
rclb
das
cmp
ret
sbb
fildll
push
push
shll
jge
dec
cmp
icebp
stc
call
push
aas
negl
cmp
push
out
dec
test
and
and
stc
cmp
adc
push
pushf
pop
jbe
clc
ljmp
std
mov
or
aas
lock
and
fsubr
les
jge
rcr
sbb
pop
mov
and
rorb
loope
loope
or
jbe
and
mov
std
jbe
outsb
test
mov
xor
and
dec
sbb
mov
cmpb
lds
and
into
and
jmp
mov
sbb
dec
rcrl
inc
mov
push
les
inc
outsb
mov
decb
mov
scas
clc
popf
scas
out
mov
int
sbb
jp
es
test
int3
sub
or
jne
push
call
lods
xorb
test
sub
ret
add
and
or
popa
mov
ljmp
and
in
adc
in
lret
jnp,pt
jecxz
jmp
and
popf
push
xchg
pop
inc
jns
or
mov
ds
push
xlat
mov
sub
ds
pusha
add
jmp
loop
clc
cmp
int
mov
push
inc
pusha
out
sub
js
or
and
outsl
loop
call
call
mov
sbb
add
mov
inc
out
sub
inc
test
sub
aam
add
cld
rcrb
nop
fldenv
pusha
jne
sbb
lods
ds
xor
sub
daa
pop
push
and
mov
push
adc
jp
movsl
les
xchg
mov
inc
dec
clc
and
mov
mov
les
sbb
hlt
mov
adc
push
stos
mov
sbb
fisubs
int
ret
lds
dec
pop
mov
lds
jecxz
es
dec
adc
mov
hlt
xlat
xchg
mov
pop
inc
lea
xchg
mov
pushf
inc
popa
jg
lods
and
aaa
or
cmp
mov
mov
xchg
call
sbb
push
hlt
ficompl
jecxz
mov
jae
mov
inc
notl
cmp
mov
dec
das
loop
ja
xchg
cli
sbb
cwtl
pop
fidivrl
push
add
inc
icebp
mov
popa
xor
enter
mov
std
jp
jle
fisttpl
test
and
popw
es
dec
sub
mov
xchg
movsb
je
fisubrs
je
push
popf
addl
outsl
into
mov
rcrb
dec
add
arpl
idivl
xchg
mov
inc
icebp
sub
movsl
call
cmp
lcall
out
cmp
push
inc
mov
stos
popa
fcmovbe
inc
inc
gs
movsb
andl
cwtl
jecxz
fildl
sarl
xchg
xchg
inc
andl
test
cmp
pop
inc
add
test
push
pusha
loopne
adc
lret
aaa
scas
sbb
rcrl
mov
loop
cmpsb
test
cli
cmp
aaa
inc
das
insl
je
jns
test
cmp
aad
call
dec
pop
cltd
into
pop
in
ljmp
cmpsb
xchg
lcall
add
xchg
negb
test
outsl
dec
test
adc
mov
add
outsb
jge
mov
push
test
or
out
adc
lea
enter
jbe
or
pop
loop
sarl
adc
movsl
mov
adc
cwtl
pop
insb
or
iret
jl
xor
jb
rclb
mov
jle
sbb
out
mov
mov
in
dec
adc
mov
adc
pusha
aaa
stos
clc
je
push
repz
jmp
push
aas
push
pop
xchg
cmc
pop
inc
cmp
or
icebp
int3
mov
iret
lods
push
leave
in
mov
sbb
andb
pop
decl
leave
push
das
loopne
jns
sbb
cmp
and
cmpsl
mov
push
push
inc
lds
cmp
xor
stc
frstor
mov
addr16
mov
arpl
flds
in
ror
sbbb
dec
in
mov
fstpt
sub
or
sbb
out
subl
icebp
push
aad
sub
and
jnp
sbb
in
rorb
jbe
mov
mov
ficoms
ja
lret
loop
mov
icebp
mov
pop
or
cmc
inc
or
xor
lret
pop
sub
fisttps
loopne
pushf
mov
daa
cmp
fwait
pop
jo
cmp
in
int3
gs
cs
mull
loopne
decb
cwtl
jb
sbb
push
mov
shrb
and
inc
push
sarl
outsb
dec
ljmp
dec
rcl
in
jne
and
adc
clc
pop
add
dec
sbb
or
add
sbb
insl
dec
sub
stos
repz
cmp
shrb
into
and
fmull
sub
xlat
lret
mov
add
outsl
lods
sbb
jnp
mov
or
cltd
mov
cwtl
cli
inc
enter
mov
pop
lods
mov
cmc
std
xchg
fidivl
add
and
mov
cmp
sub
insl
es
and
data16
aam
pop
lods
xchg
dec
adc
dec
sbb
mov
in
cmpsl
add
inc
ret
xor
mov
sub
pop
lahf
dec
push
ds
mov
scas
xchg
test
movsb
adc
test
add
sub
dec
js
push
and
jge
xor
imul
pushf
mov
fistps
lret
adc
cs
pop
pop
jne
mov
cmp
add
adcl
push
lahf
jecxz
ffreep
pop
fsts
jne
or
repnz
or
push
into
xchg
push
lcall
adcl
jae
stc
in
mov
and
xlat
mov
and
and
mov
push
mov
movsb
fcomps
test
adc
mov
ja
fsubs
out
ljmp
into
pop
into
mov
add
popa
sbb
dec
iret
mov
mov
aad
sbb
push
std
cwtl
int3
lock
adc
pop
mov
or
mov
scas
ds
xchg
repz
inc
std
sbb
pop
xchg
nop
push
icebp
rolb
fs
mov
mov
cld
stc
sbb
jo
cmp
xchg
cmpsb
lea
ffreep
insb
jl
xchg
test
add
ja
jb
or
mov
push
mov
insl
pop
lahf
nop
lcall
mov
dec
out
sti
inc
mov
lods
into
test
imul
imul
adc
cmp
adc
aad
jae
std
loope
les
dec
xor
enter
std
fdivs
icebp
in
lods
lret
dec
sub
insb
push
pop
xor
les
dec
sub
aam
popa
jnp
sub
stc
insb
mov
movzbl
add
and
mov
rcll
lds
test
xlat
rclb
inc
lods
call
and
enter
jecxz
adc
punpcklbw
push
sub
add
stc
aad
lcall
sti
xlat
pop
stos
das
bound
nop
pop
test
pop
imul
enter
inc
pop
jle
push
fisttpl
adc
loop
cmpsb
cs
cmp
cmc
jnp
mov
sub
mov
xor
cs
in
cmp
test
cmp
test
pop
loopne
aam
je
cmc
outsb
leave
inc
sbb
xor
xchg
in
xchg
and
pop
jle
xchg
xor
push
clc
hlt
xor
cwtl
xchg
jno
fdivrs
imul
loopne
movsb
lahf
adc
sub
fxam
shll
jns
outsb
bound
dec
ss
inc
xor
movsb
sub
pop
adc
loop
jge
jmp
out
imul
in
out
aam
mov
out
cmp
add
ret
push
test
test
roll
movsb
mov
jb
les
sbb
in
stc
imul
fldenv
inc
jnp
sbb
idivl
cmp
cmpsb
jp
rclb
inc
aad
xor
inc
jmp
aaa
addb
sbb
leave
mov
aam
cmc
push
cltd
push
cmp
push
jg
mov
mov
add
dec
sub
cmp
mov
mov
or
imul
adcl
mov
mov
mov
js
cli
xchg
lcall
scas
sub
dec
xchg
mov
inc
in
and
adc
dec
sub
ret
mov
sbb
insl
mov
fisubrs
rorb
push
in
addr16
jp
pop
jp
clc
fs
cmpsl
mov
mov
and
or
mov
icebp
test
loop
scas
roll
roll
fchs
cmp
push
mov
mov
and
aaa
test
mov
insl
loope
addr16
push
adc
xor
add
or
addl
push
shlb
mov
fimuls
clc
inc
sub
mov
rolb
mov
mov
push
xchg
icebp
pop
in
dec
jmp
mov
out
cmpsb
aam
lret
jns
pop
out
sbb
push
int
mov
pop
xchg
sbb
sub
lcall
mov
mov
push
es
sub
pushf
data16
fsubrs
inc
mov
jg
mov
add
prefetchwt1
or
arpl
adc
cmp
jmp
add
or
push
inc
pusha
cmp
lret
aas
andl
inc
icebp
and
xlat
push
outsb
lahf
test
dec
add
adc
cmpsb
sbb
in
fisubl
and
mov
inc
in
sar
inc
rol
das
mov
js
jb
enter
iret
shl
pop
xchg
pop
dec
mov
mov
jmp
and
cmp
aaa
insb
jmp
rcl
lods
lahf
cld
into
xor
popf
adc
in
cli
push
adc
mov
inc
js
ret
ret
pop
mov
les
mov
and
cmp
fistl
insl
aam
xor
xor
mov
negl
jbe
js
cld
pushf
xchg
pop
xor
push
inc
sarl
std
int3
std
push
lods
dec
std
push
negb
mov
stc
sbb
sub
iret
mov
lea
jmp
mov
xor
popf
dec
cmp
movb
mov
sub
or
mov
leave
addr16
imul
add
or
rcll
jo
sub
aaa
xchg
rorl
bound
xchg
pop
push
imul
xchg
pop
jae
leave
ret
mov
xlat
lcall
fs
test
xor
das
and
and
test
rcrb
mov
stc
or
push
sbb
cli
push
jg
push
jle
movsl
xor
adc
mov
mov
push
imull
cmp
push
std
lds
lock
cmp
jnp
push
mov
add
add
sbb
rorl
push
cmp
shrl
pop
ja
mov
test
push
fxch
mov
rcll
push
xchg
mov
xor
sarl
push
cld
mov
adcb
mov
jp
xlat
idivl
jno
xlat
inc
jo
flds
cmpsb
ds
cmpsb
jg
into
fucomi
mov
cmp
aad
and
pop
mov
cli
cmovge
xchg
data16
mov
pop
outsl
push
in
inc
push
xor
inc
jg
or
sti
mov
lahf
daa
sbb
inc
lods
icebp
jge
rcl
inc
test
cmp
out
xor
xchg
mov
fs
movsb
push
cmp
stos
loop
out
add
mov
push
movsl
xlat
jmp
and
rcll
lea
and
in
xchg
mov
cli
ds
bnd
aam
pop
mov
mov
dec
or
dec
or
jmp
imul
fdivrl
aam
orb
lds
js
mov
sub
nop
mov
add
sbb
test
cmp
xor
pop
push
push
repz
adc
ljmp
cld
lods
inc
push
mov
jns
aad
push
mov
mov
sti
int3
xchg
jne
fstpl
sub
dec
xchg
push
std
in
fildl
bound
jecxz
mov
inc
sarl
mov
pop
movb
cmpsb
js
movsb
movsb
pop
mov
dec
and
dec
stos
call
jno
sti
push
stos
mov
inc
push
orl
xchg
cmp
cmp
xorl
add
xor
in
test
mov
mov
lret
imul
pop
add
push
mov
push
mov
sbb
xor
adc
sti
fidivrl
iret
lcall
enter
pop
xchg
mov
sub
test
bound
lret
inc
mov
aam
sbb
xchg
dec
or
loop
jns
dec
pop
and
fstpl
daa
in
mov
mov
aas
sub
lods
icebp
xchg
ss
cmp
mov
inc
js
fisubrs
xchg
jp
cs
ljmp
cmp
test
lods
test
push
xor
dec
sub
stos
pop
in
sub
insl
nop
sbbl
xor
out
xchg
lea
out
loop
hlt
or
ja
cmp
and
push
xchg
mov
and
push
subb
negb
clc
call
inc
jp
cli
shll
loop
sahf
adc
jo
imul
mov
cmp
leave
call
jb
inc
enter
movsb
insb
ret
into
idivb
subl
ds
sbb
mov
inc
ljmp
cmp
fsubp
lods
mov
xchg
push
and
loop
js
stos
scas
mov
adc
jg
mov
push
clc
dec
dec
push
mov
ds
repnz
jb
pop
mov
outsl
stc
mov
inc
push
fwait
cmp
push
jmp
and
push
sbb
push
pop
mov
ja
mov
push
fisttpl
outsb
mov
cmpsl
int3
push
pop
pop
sbb
mov
fcomi
out
jae
dec
test
dec
push
fcoms
rclb
pop
xchg
sahf
inc
cmp
sahf
xchg
mov
cmp
rolb
popa
sbb
cld
xor
repnz
idiv
jmp
xchg
fs
insb
pushf
inc
hlt
jmp
cmp
lods
test
aad
cli
mov
push
mov
hlt
push
mov
arpl
mov
loope
hlt
icebp
rcl
pop
out
ljmp
js
jno
rclb
ds
or
ljmp
bound
mov
out
lods
mov
cld
movsb
idivl
inc
in
pop
jmp
adc
mov
push
in
mov
scas
adcl
pop
nop
mov
mov
data16
adc
pop
orb
jmp
fcmovu
push
push
push
aaa
push
xor
popa
push
xor
out
pushf
icebp
mov
mov
scas
push
inc
pop
pop
sub
fwait
test
in
lret
enter
mov
mov
fs
outsb
inc
in
mov
jns
sbb
dec
mov
cwtl
sbb
lods
inc
lret
dec
ja
inc
jo
mov
xor
out
inc
iret
push
mov
ja
xcrypt-ctr
cmpsl
sbb
fs
int
lcall
mov
loopne
imul
cltd
mov
insl
incl
dec
notb
mov
inc
loopne
shll
xor
jne
dec
add
dec
in
xchg
fldenv
aas
push
stos
and
lods
jne
sub
pop
mov
lods
mov
jns
adc
test
dec
xor
test
push
inc
fsts
or
jno
pop
test
push
sub
dec
ret
xchg
cmpsb
cmp
inc
lods
xchg
ja
test
les
dec
les
sahf
mov
or
aas
or
aaa
mov
push
in
or
lret
pop
shll
addl
out
test
lcall
ljmp
insb
cli
scas
imul
cltd
jmp
in
sbb
leave
out
out
xor
stc
jmp
mov
inc
mov
push
sub
lcall
mov
mov
jge
hlt
and
adc
sarl
mov
inc
inc
mov
insl
lods
imul
mov
cmpsl
or
lahf
dec
or
push
out
add
addr16
inc
es
or
iret
test
xorl
inc
or
adc
enter
jle
add
xchg
insb
cmp
sbb
sahf
and
jno
pop
fsubrp
js
repz
test
test
seta
addr16
cmc
push
mov
clc
pop
push
in
popa
mov
or
push
sub
mov
xlat
mov
sub
lock
cwtl
and
orb
mov
js
jp
mov
xor
call
sahf
xchg
push
les
fwait
jb
rclb
sbb
cmp
in
push
push
lods
scas
imul
mov
nop
in
dec
out
jbe
adc
stos
rcll
adc
addr16
cmpsl
or
jecxz
sbb
movb
stos
shlb
sbb
adc
jno
in
pop
add
sub
popa
jb
xchg
and
outsl
push
cmp
popf
scas
daa
push
mov
aam
sub
mov
add
jge
jl
clc
icebp
clc
mov
adc
cmp
data16
pushf
js
jns
xchg
mov
loope
push
lods
adc
enter
dec
or
push
out
cld
and
or
mov
sub
inc
aam
in
stc
fnstsw
add
icebp
jl
movsb
lret
insb
dec
fs
outsb
int
loop
push
sbb
mov
aad
cmp
insl
shrb
sarl
jl
dec
inc
dec
add
rcl
out
jecxz
cmc
xchg
cmp
and
inc
sub
or
lea
lret
addr16
test
xor
scas
dec
sub
cmp
cmp
fstps
sbb
iret
pop
clc
cmpb
std
xor
xor
lds
test
dec
sahf
rolb
inc
int3
sbb
rorl
adc
in
or
and
push
js
push
icebp
xchg
mov
xchg
jae
mov
in
hlt
jb
int3
mov
pop
mov
mov
push
lret
in
jmp
movsl
inc
rolb
les
das
mov
and
dec
sub
jl
fidivrl
jo
aas
or
mov
sahf
ds
inc
ss
test
inc
sub
jp
stos
and
and
neg
lret
xchg
fisttpl
sbb
test
inc
mov
rcrl
js
sub
fnstenv
mov
cmp
adc
mov
aaa
iret
jnp
dec
sbb
mov
pop
movsl
inc
scas
lea
inc
dec
push
es
pop
xchg
idiv
arpl
mov
mov
inc
lods
sub
jne
leave
lods
repz
aas
xchg
inc
cmp
jecxz
stc
sub
sub
jp
push
mov
mov
in
cmp
es
xchg
xchg
push
mov
movsb
pop
mov
nop
cmpsl
loope
xor
shrl
das
dec
cmp
out
push
enter
imul
cmp
mov
inc
or
dec
sub
inc
adcb
mov
daa
insb
sub
mov
add
sub
ss
repnz
fldcw
add
mov
test
jge
mov
cmc
imul
es
and
mov
ljmp
subb
cmpsl
cmp
enter
jl
leave
mov
pop
ds
sar
cmp
gs
xchg
fwait
inc
sbb
jp
leave
add
fsubrp
inc
cmp
jecxz
mov
or
pop
xchg
bound
xchg
pop
push
addb
or
fisttps
xor
pushf
sbb
test
mov
mov
inc
jecxz
test
rcl
ljmp
xchg
bound
adc
push
shlb
std
cwtl
push
in
sub
xlat
xor
out
dec
and
add
pop
gs
mov
test
lahf
pop
and
jp
add
sahf
mov
movsl
mov
pop
in
or
outsl
repnz
sahf
jp
jnp
fwait
enter
dec
lea
fsubs
mov
fisubrs
add
js
icebp
dec
and
push
xchg
or
sbb
adc
push
cmpsl
daa
jno
and
orl
pop
fidivrs
cmpsl
cmp
cmp
repnz
jb
cmp
sub
jle
mov
adc
xor
xlat
add
xchg
pop
ret
mov
pusha
ret
das
adc
int
loop
adc
mov
inc
inc
cld
filds
leave
jnp
fldt
sti
pop
jne
dec
xchg
movsl
pop
fldenv
loop
movsb
push
xor
aas
jecxz
inc
mov
dec
or
jmp
fistps
jmp
stos
cmc
ret
test
insb
pushl
mov
sub
repnz
inc
mov
pop
sbb
fwait
mov
push
mov
imul
gs
cmp
lret
push
xchg
dec
in
jle
cltd
mov
or
fisttps
insl
mov
cli
outsb
sbb
add
test
rolb
fildll
ja
pop
cli
roll
fisubs
mov
fcomps
mov
icebp
sti
cmpsl
dec
icebp
cmpsl
es
fiadds
cmp
pop
icebp
gs
fs
sub
add
dec
ja
fdiv
cmpb
test
imul
mul
fsts
or
stos
fstl
pop
or
sub
inc
push
enter
imul
add
nop
stos
popf
push
cmp
pop
cltd
sar
outsb
imul
je
loope
or
lock
mov
imul
push
sti
sub
xchg
lock
mov
out
jmp
insb
lods
cmp
jge
fs
stos
cmpsl
daa
xchg
ja
in
mov
xor
out
adc
sub
sub
shlb
sub
imul
loop
mov
xor
xor
js
aas
push
lods
repz
dec
lcall
xchg
pop
into
cwtl
outsb
int
or
mov
push
cmc
iret
aas
mov
pop
imul
mov
insb
pop
cmp
pop
push
mov
popa
idivb
or
outsb
daa
lds
je
jne
xchg
loopne
pop
mov
repz
repnz
push
push
rcrl
push
cltd
into
mov
jle
out
dec
cmc
mov
mov
xor
aaa
dec
ret
cwtl
push
mov
sub
or
cmpsl
js
pop
add
cmp
rcrb
leave
insb
pop
xor
push
cmpb
adc
in
aad
pop
or
sub
cmp
lahf
cmp
in
jge
lahf
std
cmpsl
add
jge
pop
add
fdivl
dec
jne
and
xchg
adc
push
or
cwtl
jecxz,pn
adc
xchg
mov
fxch
fs
mov
cmp
jae
fcoml
lds
repz
in
inc
mov
mov
mov
add
push
je
sub
cmp
repnz
pop
jl
jp
or
pop
mov
add
into
sbb
stos
xor
mov
loop
movl
ficomps
inc
xlat
popa
adc
fs
mov
xor
xchg
aaa
pusha
neg
aam
js
xchg
add
jmp
popa
jbe
and
pop
bound
aad
ss
orl
pop
shll
xor
lret
imul
popl
or
push
lea
lret
sub
out
test
add
cmp
popa
hlt
out
mov
mov
loopne
test
movsb
fstl
push
inc
sbb
push
jmp
and
mov
mov
sar
stos
subl
mov
mov
or
inc
mov
leave
jp
cmp
adc
cmp
clc
pop
pop
clc
lret
fidivs
or
or
mov
pop
jl
imulb
js
sub
push
mov
adc
or
loopne
outsl
push
and
mov
sub
negl
adcl
or
aaa
fnstsw
pop
mov
shl
and
xor
vmread
outsl
icebp
inc
aam
gs
sbb
testb
push
adc
ret
mov
fidivrl
pop
daa
xor
imul
cmp
add
push
cmp
and
das
mov
aam
jo
jae
pop
movsl
clc
fidivs
rcrl
sub
push
dec
cmp
xchg
push
nop
inc
setns
pusha
lahf
add
aas
addr16
pop
cmpsl
pop
xlat
in
adc
loope
xchg
ficoms
sbbl
cmp
cmp
loop
dec
aam
push
outsl
jl
mov
bound
insl
enter
dec
mov
and
xor
nop
xor
fistpll
and
data16
jb
dec
repz
push
or
jno
fsubrp
mov
push
dec
pop
lods
sub
outsb
or
lcall
xor
sarb
dec
scas
and
imull
stos
xlat
insl
xchg
hlt
andl
rol
jl
push
or
loopne
mov
push
test
cmc
inc
nop
jmp
xlat
cmp
repnz
and
push
jno
notb
mov
in
subb
xchg
mov
push
ret
or
jl
jns
popf
or
add
inc
adc
in
out
repnz
push
out
mov
cld
movups
xchg
andl
push
xor
sub
lods
pop
jbe
fsubr
cmp
lods
dec
push
repnz
mov
and
add
and
pop
dec
fwait
imul
negb
jo
cld
out
clc
dec
aad
xor
sub
push
and
adc
mov
push
data16
outsb
adc
in
shrl
ljmp
xlat
jbe
shlb
sub
in
dec
in
iret
xor
nop
data16
rolb
insl
sti
xchg
xchg
or
ds
adc
jnp
xor
into
fcmovnu
mov
jecxz
out
rcll
and
jns
mov
ljmp
dec
fistpll
dec
dec
in
fcomps
xchg
cs
aam
lods
sbb
test
xor
xchg
or
icebp
jmp
fnstsw
into
mov
mov
and
je
xchg
popf
inc
repnz
mov
xchg
mov
outsl
sbb
cmpsb
xchg
das
jle
mov
jae
xchg
cltd
mov
push
or
xchg
dec
cmpb
add
inc
jle
mov
adc
xchg
popa
fdivrl
sub
jp
and
push
mov
sbb
mov
cmp
int
pusha
adc
mov
rol
push
mov
inc
adc
pop
add
cmpsl
repz
push
in
mov
outsb
dec
fistpl
clc
cld
test
mov
mov
push
mov
leave
sub
scas
add
inc
or
test
jmp
and
fs
mov
mov
or
popa
dec
in
mov
mov
outsb
aaa
mov
add
mov
nop
lahf
cmp
mov
xor
push
xchg
cld
inc
inc
std
in
test
pop
sub
std
mov
iret
mov
nop
mov
dec
adc
aas
xchg
xor
lret
add
enter
mov
dec
scas
gs
jmp
pop
cs
cmc
mov
fisubrs
imul
or
mov
and
pushf
mov
push
mov
imul
pop
xchg
mov
imul
inc
inc
fwait
int3
insl
cwtl
fbld
mov
sub
fisubrl
jl
fwait
ljmp
lds
and
leave
push
sub
push
jne
inc
add
sbb
idivb
pop
push
nop
leave
sarb
sbb
add
or
jae
outsb
cmp
ret
jmp
xor
jne
add
xchg
mov
dec
out
lods
xor
or
ja
sub
fs
xor
pop
add
mov
repz
insl
sbb
pcmpeqd
scas
cli
sub
mov
addr16
call
xchg
jmp
jmp
xchg
cmp
in
mov
bound
push
negb
and
negl
cmp
popf
inc
insb
push
dec
aaa
pop
and
dec
clc
mov
lret
lahf
jecxz
ja
xchg
addr16
mov
pop
or
lret
mov
mov
je
add
add
into
stc
xor
inc
push
pop
jae
and
faddl
arpl
or
insl
subb
adc
mov
inc
orb
lods
scas
mov
push
scas
mov
cmp
mov
xchg
adc
lret
or
or
loope
mov
lods
nop
inc
xchg
shll
mov
lcall
js
dec
xor
mov
xchg
pop
sub
dec
jns
shlb
mov
repz
js
mov
inc
xchg
repz
pop
cwtl
dec
jno
cmpsb
and
cmc
xchg
insl
adc
xchg
adc
lods
subl
loop
push
out
js
mov
or
or
mov
mov
imul
outsb
lcall
cmp
xchg
jo
aam
clc
cs
sub
xchg
test
jl
adc
xlat
mul
cwtl
fwait
add
addb
or
lahf
sti
pop
fcoms
int
loope
iret
clc
aaa
inc
cmp
dec
xor
or
dec
jge
cmp
ds
imul
xchg
imul
cmp
data16
loop
or
and
xchg
jo
fwait
inc
mov
push
nop
dec
fcompl
add
das
pop
xchg
jnp
cmp
and
shll
cmpsl
add
negl
fstpl
mov
stc
scas
cmpsb
out
les
lcall
aaa
xchg
jge
pop
sub
mov
adc
jbe
dec
push
jno
push
lahf
aam
pop
orl
jns
int3
inc
jmp
push
repnz
cmp
ficompl
rorl
inc
pop
sub
xchg
sub
outsl
jno
sbb
les
mov
enter
and
stos
jmp
mov
jae
loopne
xor
bound
outsl
pusha
stc
addr16
push
dec
xchg
mov
jg
pop
iret
xchg
cmp
and
cwtl
lock
cmp
fisttpl
bound
fcmovne
aas
pop
int3
add
pop
ss
jmp
cmp
aad
jl
into
cmpsb
sti
cltd
pop
gs
adc
mov
iret
and
mov
shl
repz
aas
scas
mov
shll
adcl
arpl
js
scas
jo
adc
leave
arpl
push
ffreep
pop
dec
dec
imul
ficoms
push
add
push
pop
movsl
aam
add
sbb
arpl
cwtl
jg
inc
inc
push
pop
cs
add
mov
mov
push
add
stos
movsb
pop
push
orb
add
loopne
aam
les
test
fldl
xor
sahf
add
adc
jbe
jle
xor
inc
lcall
cmpsb
mov
imul
xchg
push
and
pop
ja
sbb
mov
sbbl
mov
lods
lea
pusha
dec
xor
jno
adcb
scas
pusha
adc
inc
and
dec
xor
mov
mov
cmp
mov
push
jle
xchg
movsb
popf
cli
sub
rdtsc
xchg
daa
out
scas
stos
shll
insl
push
scas
dec
lds
mov
insl
or
cld
and
mov
cmpsb
aaa
adc
and
fdiv
xchg
and
insb
inc
jg
adc
xlat
xchg
sub
jle
imul
pop
and
aad
dec
enter
add
fcmove
pop
lea
push
or
mov
into
or
nop
mov
jge,pn
imul
into
sub
jne
mov
pop
inc
jns
adc
push
scas
inc
aam
sti
test
jmp
rcll
test
mov
orl
dec
mov
add
sub
cmp
mov
in
xor
add
loopne
es
xlat
scas
pop
adc
xor
xchg
pop
mov
xchg
loop
pop
pop
data16
fidivl
jg
xchg
ret
sti
loope
or
in
fmulp
mov
fwait
pop
pop
jno
pop
loop
mov
and
fsubr
lret
pop
leave
and
clc
mov
dec
mov
dec
pusha
jecxz
test
adc
xor
dec
xor
popa
mov
std
inc
in
sbb
ret
sub
mov
pop
xor
xor
adc
cld
sub
mov
xor
aaa
mov
addps
dec
mov
int3
add
fildl
js
test
enter
mov
xchg
cmp
ljmp
addr16
loopne
xchg
mov
out
mov
jns
mov
cmp
inc
pop
xchg
stos
je
add
pop
sub
mov
ljmp
cmpb
scas
sub
out
fldenv
enter
add
pop
sbb
mov
rorb
pop
stos
adc
jecxz
outsl
push
jp
aad
or
ret
add
mov
xor
lods
xor
and
scas
jno
insl
pusha
out
lret
jmp
test
sbb
mov
jg
or
cmc
jle
icebp
clc
cmp
nop
lret
mov
dec
in
dec
sub
push
mov
push
and
fimull
in
cld
add
idivl
es
mov
test
fcmovne
lret
out
repnz
inc
stos
lret
pop
test
mov
inc
out
fxch
testl
adc
and
call
mov
xor
jns
cmp
stos
movsl
pop
cld
cld
dec
repz
xor
sub
mov
adc
adc
popf
pop
imul
repz
push
ja
mov
push
fwait
jmp
fnstcw
add
dec
sub
cmpsb
push
pop
xor
je
mov
pop
out
push
push
das
pop
adc
jge
mov
dec
fldl
fdivl
lods
xchg
scas
xchg
mov
xor
cmp
dec
push
pop
aaa
lods
cmpl
scas
rcl
inc
adc
inc
inc
xchg
fsubrl
call
fcompl
imul
rorl
iret
stc
cmp
roll
mov
mov
xchg
mov
test
xchg
sbb
sub
movsl
mov
ss
cmp
popf
shrd
dec
push
pusha
push
sbb
jo
adc
cmp
or
push
cwtl
pop
mov
js
mov
and
stos
mov
add
jle
adc
movsl
pop
jg
fmuls
test
sbb
shlb
pop
lahf
cmpsl
in
lods
mov
mov
sub
sbb
adc
dec
in
push
neg
mov
push
test
out
iret
je
push
adc
les
movsb
inc
mov
clc
lock
inc
es
loopne
push
clc
addl
push
fsubl
sbb
cli
dec
jge
lds
dec
lods
das
jne
sahf
shll
arpl
pop
das
lret
fcoms
xchg
jle
movsl
ret
out
sbb
dec
add
xchg
out
ja
icebp
xor
mov
insb
jl
jmp
loopne
mov
lds
stc
push
mov
jl
cmp
clc
cs
xchg
or
xor
jge
sbb
dec
out
test
add
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
add
add
push
add
add
or
add
add
add
add
addb
add
add
add
nop
add
add
adc
adc
add
or
dec
add
dec
add
dec
add
dec
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
test
mov
add
add
add
dec
add
in
repz
dec
push
add
cwtl
test
add
cmpsl
cmpsl
add
mov
add
incb
gs
add
stc
mov
mov
ret
add
xchg
mov
popl
add
xchg
mov
ret
add
mov
add
rolb
jno
add
in
jge
xlat
xchg
test
aad
xchg
pop
cmp
addr16
add
push
sub
test
xchg
addl
xchg
mov
lds
pop
add
ljmp
rorl
nop
add
movsl
cltd
add
in
add
insb
push
add
mov
jmp
push
daa
add
pop
add
and
mov
xchg
jl
in
stos
xchg
add
das
add
les
add
add
xchg
sub
push
xor
add
les
add
add
in
add
lock
pushf
inc
pop
add
movsl
mov
clc
mov
add
mov
add
sarb
add
sarl
add
rol
add
out
call
add
lods
test
repz
scas
add
lret
mov
test
add
lret
stc
int
add
loopne
add
std
cld
add
lea
mov
je
add
mov
std
leave
lods
add
ret
stos
add
ret
add
loope
add
les
add
test
jmp
mov
add
mov
add
rol
add
jmp
add
mov
mov
add
fmulp
add
fadd
add
repz
cld
cli
add
cmpb
xchg
add
xor
add
out
add
call
fiaddl
jmp
add
in
loope
clc
call
in
push
call
add
aaa
add
mov
scas
add
cmpsl
add
shlb
add
ret
cli
aam
add
aad
add
aam
add
aad
add
aad
add
aam
add
xlat
mov
add
fnstcw
add
loope
add
loope
add
jecxz
add
in
add
in
add
out
add
bnd
add
cli
testb
cmp
add
lcall
fdivl
mov
add
int
add
mov
cli
xlat
mov
add
shlb
lock
add
faddp
add
fadd
add
add
fmulp
add
hlt
jmp
std
repz
pop
inc
add
imul
mov
xchg
cmpsl
mov
mul
lret
add
out
add
in
fiadds
std
cmc
in
add
lret
lahf
add
pushf
addb
call
flds
imulb
fs
into
cltd
add
shll
add
stc
repz
mov
ja
dec
xchg
call
lea
rclb
add
cld
testl
cld
out
add
dec
add
push
add
incb
aas
inc
sbb
inc
dec
and
pop
insb
inc
add
xor
jns
popa
add
and
mov
lahf
and
inc
mov
add
jb
sbb
add
push
add
je
mov
mov
div
testl
daa
lock
fwait
test
add
mov
add
xchg
scas
add
stc
add
push
push
add
mov
inc
inc
dec
add
cmp
add
in
cltd
mov
incb
scas
mov
add
xor
mov
mov
cmpsb
test
add
xchg
lret
int3
clc
add
in
stc
add
std
std
add
cli
cli
add
repz
in
in
add
data16
add
add
incb
add
add
add
add
sub
and
adc
pop
adc
adc
adc
adc
adc
adc
adc
incb
add
add
add
add
push
push
pop
pop
pop
pop
push
push
push
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcll
add
add
pop
outsl
mov
addb
mov
test
incb
add
add
add
add
pushf
je
jg
scas
mov
mov
sbbl
test
add
add
add
jmp
xor
lcall
mov
dec
sbb
add
stos
push
je
arpl
in
in
jmp
mov
lahf
mov
sbb
add
pop
xor
in
out
loope
aaa
xor
sbbl
sbb
stos
cmp
inc
sbb
aas
popa
outsl
in
loope
jmp
mov
andl
add
aaa
jb
xor
add
jp
jecxz
loop
aaa
lcall
lea
incb
add
add
add
cltd
cltd
lret
int3
push
jecxz
out
xor
mov
incb
add
add
scas
dec
jns
cmp
call
popf
mov
sbb
cmp
fs
scas
jnp
pop
sbb
ret
inc
dec
ds
mov
mov
sbb
inc
dec
push
nop
jns
cmp
inc
xor
xchg
insl
push
inc
and
call
mov
sbb
inc
dec
ds
addr16
pop
cmp
daa
out
add
test
dec
sbb
xor
inc
inc
push
fs
nopl
pop
nopl
call
test
nop
dec
sbb
in
or
push
ss
cmp
cmp
push
pop
daa
inc
sbb
fcom
jg
cmpsb
nop
xchg
nop
dec
sbb
in
pop
inc
inc
push
aas
dec
pop
pop
cmp
dec
push
ds
sbb
mov
xchg
xchg
xchg
dec
sbb
in
add
dec
inc
inc
inc
jae
inc
mov
and
fnstenv
mov
mov
xchg
xchg
dec
sbb
in
repnz
andl
imul
sub
xor
xchg
dec
sbb
in
repnz
ret
jo
jo
ja
pop
push
pop
adc
aam
cmpsl
mov
jbe
xchg
dec
sbb
in
repz
push
iret
iret
les
push
xor
fstp
xor
xchg
dec
sbb
push
repz
repz
clc
stc
int3
lret
lret
inc
outsb
mov
lcall
xchg
xchg
dec
adc
add
out
out
out
repz
testb
sub
push
popa
mov
mov
js
mov
adc
add
add
add
imul
lock
out
cmc
xlat
xlat
lcall
js
or
adc
add
add
add
push
or
div
out
rcrl
outsl
mov
jp
mov
incb
add
add
add
add
or
gs
and
lods
jge
jl
fs
arpl
add
cli
push
jno
cltd
cltd
les
mov
jl
mov
enter
jno
cltd
cltd
les
mov
ret
incb
add
enter
sti
cld
cld
std
std
std
std
loopne
loopne
ret
enter
rol
mov
xchg
add
add
add
incl
add
incb
add
incb
add
incb
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incb
add
incb
add
add
add
add
and
add
add
or
test
add
add
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
push
inc
sub
fdivrl
xor
push
mov
pop
add
mov
sub
mov
mov
mov
sub
mov
sub
mov
add
jg
movzwl
push
add
popl
call
add
and
pushf
movsl
jp
mov
pop
call
push
dec
adc
div
fs
xchg
adc
pop
sub
and
add
or
cmp
jne
call
les
cs
pop
gs
jp
jbe
pop
out
sub
aam
je
clc
push
dec
jbe
orl
dec
dec
sbb
mov
fldl
jns
mov
mov
ds
out
jb
subl
jge
aam
and
sub
mov
mov
mov
push
mov
sub
jle
xor
lods
rcr
je
out
sbbb
clc
cmc
into
ds
adc
in
scas
cmc
movsb
xchg
pop
pushf
and
fmuls
orl
imul
cmp
jmp
das
sub
lcall
leave
sub
rcr
xor
ret
sbbl
xlat
cmp
lcall
mov
adcb
pop
jle
inc
xor
out
jp
sbb
xor
int3
repnz
xlat
aaa
out
adc
stos
pop
push
fimull
lods
shll
pop
xchg
leave
mov
xor
jbe
incl
movsb
mov
sbb
in
pop
ffree
sub
push
push
fimull
lods
sarl
nop
cwtl
pop
adc
and
mov
out
inc
shll
cli
adc
imul
lods
shrl
lods
rcrl
xor
inc
xchg
mov
out
cmp
sub
jp
faddp
je
inc
aas
xor
popa
inc
xor
mov
fildll
jg
mov
mov
xchg
mov
pop
sahf
pop
push
and
aaa
inc
or
movsl
sarb
cwtl
push
mov
cmp
popf
cmp
inc
lods
shll
mov
sbb
pop
je
jb
lock
lds
ljmp
ret
addl
pcmpeqw
sbb
sbb
mov
in
dec
jge
das
mov
std
adc
call
xlat
div
jb
outsl
das
lahf
je
adc
pop
sbb
pushf
cmp
repz
icebp
notb
je
xchg
data16
jnp
cmp
loope
hlt
hlt
and
insb
lds
out
xor
repnz
xor
cmp
jle
loop
jo
adc
test
or
push
mov
mov
dec
push
inc
int3
icebp
sbb
in
insb
cmp
jp
adc
cmp
push
call
cmp
mov
jp
push
test
inc
adc
xchg
pop
orb
es
xchg
adc
outsb
mov
es
mov
pop
cmp
mov
fimull
clc
test
ret
das
mov
mov
mov
ret
push
pop
sbb
lret
jns
fiaddl
ret
das
lahf
jp
mov
ret
push
pop
cmp
fisttps
es
adc
rorl
enter
lods
hlt
or
es
add
or
mov
mov
dec
lret
and
mov
clc
cmp
adc
sbb
mov
jne
jb
ss
mov
cltd
es
add
pop
out
adc
push
out
adc
es
xor
out
adc
es
movsb
aad
in
adc
es
jmp
repz
es
stos
mov
ret
mov
xchg
out
adc
es
js
ret
ret
adc
cwtl
xlat
mov
jo
in
icebp
insl
and
icebp
insl
or
sbb
xor
ret
adc
addr16
mov
push
jo
je
ret
adc
pop
repz
out
adc
call
cmp
es
popl
inc
mov
inc
repz
repnz
adc
icebp
fildll
clc
xor
outsb
repnz
dec
xchg
ret
movsb
sbb
xor
or
out
adc
out
adc
cwtl
not
mov
push
mov
sbb
push
pop
cwtl
mov
mov
jo
in
icebp
insl
dec
xchg
ret
mov
jb
pop
mov
aam
stos
mov
ret
jns
adc
mov
or
ret
stos
mov
ret
adc
daa
ret
adc
fld
adc
es
adc
es
nop
je
pop
nop
sti
push
jo
xchg
and
mov
pop
imul
sbbl
xchg
xchg
sub
iret
mov
out
sti
pop
imul
add
sbb
xchg
sub
push
test
loope
push
xlat
push
enter
jo
and
pop
imul
dec
lret
in
cmpsb
mov
sahf
hlt
xchg
jge
jnp
mov
ret
adc
out
mov
out
and
pop
imul
jle
or
cld
jp,pt
mov
ret
adc
out
mov
and
pop
imul
jle
jo
mov
mov
adc
and
imul
xchg
ret
adc
sub
push
inc
sub
xlat
push
enter
jo
and
push
and
xchg
es
adc
xorb
push
mov
decb
into
call
nop
jns
adc
sub
or
xchg
and
cmp
rorb
jmp
jns
adc
sub
or
xchg
and
xlat
mov
and
inc
pop
ret
adc
es
fdivrl
dec
mov
mov
ret
adc
lea
mov
ret
adc
aaa
push
sbb
into
push
mov
rclb
imul
adc
mov
adc
ret
adc
jno
adc
adc
mov
popa
sbb
icebp
lds
xchg
ret
fldl
dec
adc
call
adc
in
stos
int3
insb
stc
push
cld
pop
push
out
faddl
dec
push
cld
out
lret
test
xor
xor
or
inc
bound
in
mov
ret
dec
lret
pop
rcll
and
leave
in
xchg
jbe
clc
imul
xchg
or
fxch
mov
fidivrs
xlat
roll
ret
adc
es
adc
es
adc
es
adc
es
adc
es
adc
es
adc
es
mov
es
cwtl
xchg
ret
aam
es
adc
es
adc
retw
lock
aam
adc
jb
adc
es
adc
es
adc
es
adc
es
movsl
aaa
mov
fisttpll
lods
clc
hlt
inc
out
sub
sbb
mov
pop
imul
mov
shlb
and
adc
xchg
mov
stos
iret
insb
add
xchg
stos
mov
and
or
mov
xchg
call
jmp
pop
push
dec
sbb
lds
cmpsb
jp
ret
shlb
ljmp
repz
test
popf
ss
and
vpor
or
sti
aas
insb
sbb
adc
pop
ret
stc
enter
mov
gs
rclb
cmp
pop
enter
in
data16
mov
in
rolb
ja
fs
mov
ret
in
cmp
in
incl
jne
mov
xor
les
mov
fwait
hlt
fisubl
pop
push
jb
repz
xchg
mov
or
mov
jge
and
das
leave
xor
lods
loop
adc
add
mov
adc
pop
cmc
pop
fildl
movsb
fisubrl
dec
cmp
insb
cmp
inc
inc
and
push
mov
mov
pop
mov
rcrl
inc
pop
sbb
fs
hlt
jne
add
inc
push
pop
dec
ds
inc
add
in
js
rolb
adc
dec
loope
add
in
push
sub
lods
ja
inc
and
xchg
add
jmp
lahf
mov
aad
cmpsb
mov
sahf
je
loop
push
call
enter
inc
mov
lds
out
pop
fs
cmc
stos
ja
xchg
cmp
jb
das
lret
jp
xor
in
pushf
hlt
shr
mov
fwait
xchg
pusha
stos
daa
pushf
int
pop
fwait
adc
adc
jb
adc
xor
push
mov
les
fdivp
jbe
icebp
add
dec
in
inc
sub
or
cwtl
mov
das
cmpsb
es
sbb
pop
mov
inc
in
inc
out
mov
mov
dec
and
xchg
push
mov
lret
les
hlt
push
inc
mov
or
int
cli
push
jge
rclb
fldcw
fistl
rclb
cmp
fs
inc
je
dec
cld
stc
outsl
cmpsl
xor
push
mulb
push
ret
dec
cltd
decb
adc
sub
test
mov
pushw
jg
shrl
es
fucomp
aaa
jae
int
inc
mov
pop
mov
popf
in
mov
lahf
mov
fcom
add
dec
push
hlt
lds
in
out
and
subl
in
sbb
push
xchg
cld
adc
add
add
or
add
add
add
dec
add
dec
add
add
lods
adc
cmp
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
adc
hlt
stos
adc
cwtl
lods
adc
mov
adc
movsl
lods
adc
mov
add
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
lods
adc
add
add
fsubrs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
add
cmc
std
and
add
add
lahf
adc
add
ficoms
lcall
dec
jbe
sub
add
jg
push
fstl
test
addb
fstpt
repnz
xor
jecxz
test
lods
and
sti
jo
loopne
mov
popf
sbb
andb
mov
shlb
jge
int3
jns
or
dec
mov
push
sbb
ljmp
arpl
push
push
add
and
push
shrl
add
fwait
xchg
push
adc
mov
or
addps
mov
xor
push
dec
sbb
xchg
cmpsb
out
xchg
aam
add
jp
mov
mov
stc
int3
fldt
mov
roll
addb
mov
jge
xor
xchg
loop
in
pop
lret
adc
adc
sub
notl
into
xor
jecxz
mov
adc
popa
pop
neg
cmp
fdivr
aam
in
inc
arpl
and
cmp
scas
imul
jg
or
xchg
sbb
sbb
loopne
ja
jbe
mov
int
shlb
or
jmp
rcrb
sbb
xchg
lods
cmp
jne
sahf
adc
lock
jp
leave
inc
push
pop
xchg
cmc
addl
in
lahf
xchg
movsb
mov
imul
or
push
push
jmp
xor
addl
adc
out
loope
jnp
sbb
hlt
xchg
xchg
lea
fdiv
xchg
nop
pop
scas
out
in
sub
dec
lods
pop
or
lret
loope
xchg
in
out
testl
lock
jecxz
ret
aam
les
cmc
cmp
mul
cmpsb
cmp
out
mov
loopne
int3
pushf
icebp
inc
xor
sbb
into
in
movb
gs
mov
adc
xlat
mov
sbb
cltd
hlt
mov
pop
jmp
xor
push
xchg
sub
lds
jb
and
or
mov
jns
dec
sbb
jne
flds
pop
push
push
scas
out
xor
rol
mov
cmpsl
push
jl
pop
testl
lods
imul
enter
pop
add
ret
daa
mov
cltd
mov
scas
jp
xchg
push
sub
xchg
push
add
out
inc
enter
cmc
or
dec
push
test
mov
rcll
xor
push
mov
fidivrl
fwait
call
test
xchg
les
push
pop
aam
pusha
sahf
pop
or
nop
pop
jmp
mov
and
push
andl
cld
xor
in
sub
ja
das
and
rcrb
iret
imul
gs
jae
movsb
test
xor
sbb
pop
push
push
iret
xchg
lahf
je
shlb
ja
aaa
and
lret
add
or
in
sbb
fidivl
out
lahf
ds
test
dec
xor
cmp
aas
in
mov
pop
arpl
sbb
inc
mov
data16
dec
mov
mov
add
cmp
ljmp
ficoml
in
in
jne
test
sub
cltd
fiadds
xchg
sahf
or
mov
bound
sbb
dec
jecxz
and
fs
lret
outsl
mov
sbb
push
inc
lods
pop
in
add
loopne
xchg
shr
sub
xor
cmpsb
mov
cli
xchg
pop
mov
mov
sti
cmpsl
ret
sub
bound
aam
pop
enter
push
xchg
data16
jecxz
jbe
aaa
mov
push
sub
inc
fstl
mov
jb
test
leave
daa
outsb
mov
pop
push
out
and
jmp
inc
dec
push
xor
add
add
lret
adc
lret
fmull
lds
mov
mov
or
sti
imul
jno
fs
inc
cmp
mov
rcr
mov
or
adc
in
ja
pop
push
lds
push
test
mov
imul
dec
cmp
sub
add
sarb
mov
push
lds
jb
data16
cmp
inc
inc
or
and
adc
pop
out
sub
push
xchg
sbbl
stos
add
dec
sbb
dec
mov
xor
push
dec
mov
xor
dec
fildll
mov
loop
push
in
int3
lret
add
stc
xorb
outsl
movsl
or
xchg
adcb
in
insb
push
pop
inc
call
and
mov
loopne
testl
add
mov
mov
les
repz
mov
jge
pop
insb
and
pop
sti
add
andb
or
mov
leave
ficompl
mov
ljmp
adc
scas
in
cs
das
in
das
add
imul
loope
pop
sub
jecxz
adc
std
lea
shrb
out
jae
int3
adc
fadds
adc
adc
lods
loope
jg
pop
test
jne
cld
cwtl
xor
jl
add
cmp
fbstp
int
cli
cltd
xor
mov
lea
fcmovnb
nop
fsubr
ds
xor
add
adc
and
movsl
pop
iret
scas
or
lret
xchg
lea
out
sub
dec
mov
ss
std
ds
xor
cmpsb
and
imul
jbe
xchg
in
enter
or
pop
fisubrs
adc
and
pop
loopne
in
mov
pop
dec
fcmovbe
jo
push
sub
jae
mov
int3
into
aam
push
jno
out
mov
lods
xchg
movsl
loopne
push
pop
push
int
decb
push
push
add
add
hlt
in
pop
adc
push
jg
mov
ja
cld
orl
loop
mull
jbe
into
lods
cli
hlt
lea
or
les
inc
lret
mov
divb
dec
dec
int
lods
jge
dec
cmp
dec
or
inc
outsb
mov
gs
adc
clc
aam
sbb
loop
and
in
lea
jmp
mov
decl
clc
add
jnp
jge
gs
cli
jmp
inc
cs
xchg
adc
jno
pop
pushl
out
lcall
mov
push
imul
popf
jo
lea
or
mov
mov
cmpsb
jg
sub
pop
mull
cmp
cmp
fnstenv
iret
mov
lahf
xor
cmpb
inc
lret
xchg
les
mov
jecxz
cwtl
cmp
ret
jne
repz
jae
sahf
hlt
push
loop
shl
inc
add
xor
sahf
push
push
int
pop
push
bound
test
out
arpl
ja
or
and
sub
aaa
push
test
adc
dec
repz
mov
call
lret
or
sbb
out
movups
cmp
rcrl
push
leave
data16
mov
out
call
arpl
xor
sbb
lret
dec
mov
dec
data16
xchg
lahf
jbe
insl
dec
adc
mov
aas
sub
subb
inc
xor
movsl
mov
inc
pop
add
adc
pop
mov
pusha
ja
mov
lods
xchg
outsl
mov
lock
xor
xchg
repz
ljmp
add
fadds
xchg
pop
enter
je
lret
ja
adc
sarb
repz
dec
jp
mov
out
pop
popf
scas
imul
adc
pushf
mov
xor
cmpsb
sti
push
popf
mov
out
ds
mov
stc
mov
pop
cmp
aaa
inc
mov
test
xor
leave
aas
cld
aad
cmp
pusha
mov
sti
in
xlat
xchg
xchg
mov
jae
testl
or
push
out
jmp
and
out
xchg
inc
push
cli
xor
sbb
nop
cmp
je
ss
pop
cmc
stc
mov
ret
adc
jns
out
out
pop
cmp
lds
jne
mov
cmp
or
std
mov
mov
in
mov
pop
aad
gs
push
mov
rol
fisttpl
inc
loopne
pop
in
imul
cltd
nop
aam
inc
add
jecxz
scas
dec
andl
addb
fcmovnb
sub
push
jbe
in
testl
test
out
push
mov
dec
or
mov
mov
jnp
enter
xchg
jle
fmull
in
push
divps
cltd
int3
cmpsl
sti
je
mov
and
inc
mov
adc
fst
push
bound
or
dec
stos
sub
push
arpl
cli
cmp
sbb
imul
js
sub
sub
cld
clc
cmp
push
mov
jo
sub
adc
lods
add
sbb
sbb
jo
outsb
xlat
jmp
in
sbb
push
add
cmc
cwtl
push
clc
lods
ret
dec
sbb
lea
push
les
xchg
and
xchg
sbb
lods
cmpsb
pop
repnz
jmp
sahf
dec
pusha
mov
into
insl
add
js
push
pop
dec
int
pop
push
iret
dec
mov
out
fdecstp
loope
clc
loope
cld
xor
rcll
and
setb
cltd
jecxz
pusha
cmp
call
fisubrs
xchg
loopne
pop
lahf
and
mov
mov
mov
add
push
loop
xchg
mull
push
pop
pop
rcrb
inc
mov
or
jp
sub
xchg
aam
mov
lcall
pop
mov
push
xchg
adc
je
push
pop
pop
ret
jge
push
loopne
add
dec
mov
mov
sbb
cmp
insb
les
sti
mov
ret
stos
es
ds
push
in
mov
mov
add
cmp
xor
mov
inc
push
sarl
repnz
testb
xchg
lods
fistpll
in
sti
popf
xchg
xchg
mov
add
push
add
iret
shlb
push
fdivrl
fs
lret
sti
icebp
lea
movb
add
out
sub
in
ret
dec
mov
mov
loope
mov
push
in
or
test
sbb
shlb
lds
cmp
aas
test
mov
ja
add
scas
cld
fsubs
lods
imul
pop
push
mov
jae
mov
nop
aam
call
xchg
sahf
xchg
aam
outsl
leave
jg
bnd
ds
jecxz
out
fidivrl
enter
dec
adc
or
fisubrl
int3
inc
cmp
pop
test
jne
mov
pop
adc
cmpsl
fucomp
into
and
xorl
sub
xor
cmpsl
outsl
mov
dec
mov
xor
cli
ja
int
pop
subl
sub
rorl
pushf
clc
sub
daa
test
xchg
jge
out
pop
out
xor
in
data16
or
addr16
sbb
inc
mov
cmc
and
sbb
pop
pop
mov
fldcw
pushf
xchg
popf
scas
gs
cmpsl
mov
rclb
or
mov
sbb
cmp
arpl
les
sub
out
cmp
mov
mov
add
and
jae
jmp
je
push
imul
stc
loopne
cmp
insl
cmp
adc
into
int3
mov
pop
pusha
pop
push
push
imul
sbb
movsl
dec
push
or
xchg
sbb
outsl
scas
stc
fsubs
or
je
std
push
clc
flds
push
dec
xchg
push
repz
add
bnd
mull
jle
xchg
sbb
sbb
lcall
out
mov
adcb
ficoms
mov
push
or
adc
dec
in
sbb
pop
rcr
outsl
sbb
sbb
add
sbb
cltd
sub
xchg
movsl
test
shr
adc
jl
popa
mov
mov
pop
and
pop
push
push
cmp
idiv
mov
cld
stc
sub
fnstcw
fnsave
rclb
push
in
cmp
sbb
cmp
and
push
dec
ja
jp
mov
inc
and
aaa
mov
pop
pushf
test
jb
push
je
pop
inc
lahf
enter
ljmp
int3
cltd
test
mov
ljmp
hlt
aas
push
mov
call
fcomi
insl
mov
cmp
add
out
add
std
frstor
mov
inc
dec
xor
les
adc
ror
pop
stos
jmp
outsl
or
pop
mov
add
fs
es
test
sahf
cmp
loop
mov
jle
cs
je
scas
in
mov
arpl
movsl
ja
popf
mov
std
sbb
mov
rcl
xor
jae
fwait
lahf
cmp
ret
jg
dec
sub
add
add
fisttps
sbb
rcll
popa
jns
fldcw
inc
adc
jae
lret
data16
push
dec
bound
sub
pop
lret
cmpl
pop
mov
lds
dec
mov
imulb
sbb
push
fildll
shll
and
xchg
aas
in
xchg
mov
insl
push
dec
dec
lods
jne
ret
sahf
or
xor
xor
push
nop
daa
lret
pop
mov
push
insl
sbb
xchg
push
pushf
mov
andl
int
addr16
testl
negl
xor
shlb
cmp
xchg
push
cwtl
mov
std
loop
dec
lcall
cmpsb
fdivrl
jbe
sbb
addr16
lods
in
sub
push
test
mov
mov
sub
shlb
enter
push
idiv
ds
cmp
adc
pop
int
sbb
shl
aaa
sarb
sbb
push
shrl
enter
jbe
test
cmpsb
iret
push
lret
pop
sbb
or
sub
mov
ret
lret
or
pop
or
scas
hlt
dec
cmpsl
push
lds
add
popf
add
jl
out
js
mov
add
ds
lahf
and
aam
and
fcmove
xor
shl
jbe
xor
mul
inc
test
cs
hlt
stos
push
mov
push
mov
shll
mov
adcb
fmull
mov
dec
pop
sarl
leave
ds
xor
add
inc
lret
jbe
jmp
shll
mov
cwtl
mov
pop
ss
or
cmp
sub
push
test
nop
dec
xchg
mov
and
inc
push
mov
int3
push
adc
xchg
jne
stos
out
addb
push
or
push
push
outsb
dec
iret
lods
add
push
pop
jnp
mov
outsl
mov
pop
sbb
in
cmp
shl
mov
fstl
dec
ret
movb
and
sti
and
mov
sbb
movsb
sub
dec
clc
stos
hlt
lods
mov
mov
das
popf
jecxz
dec
xchg
inc
sbb
insb
jb
cmpsl
pop
fcompl
add
mov
outsl
pop
xchg
push
cmp
fildll
sbb
in
inc
dec
dec
insl
and
xor
dec
sub
out
and
ja
or
adc
in
dec
stos
dec
mov
aas
push
mov
or
incb
xchg
mov
arpl
cld
call
jns
sbb
cmpsl
call
js
sub
mov
push
jno
jp
sbb
sub
xchg
ds
cmp
testl
imulb
sbb
imul
in
aaa
or
aas
std
clc
xorl
jae
mov
in
lret
popf
cmp
aas
notl
test
cmp
pop
in
dec
lods
scas
add
bound
loop
cmc
and
mov
leave
stos
sti
cmc
in
test
mov
jnp
add
xchg
and
push
aas
cwtl
add
xchg
out
les
addr16
inc
push
scas
pop
jle
and
sahf
inc
xor
add
mov
or
and
xor
cld
xor
cmp
inc
gs
pushf
mov
sbb
xchg
ja
daa
pop
cs
into
into
or
jne
mov
ds
and
scas
sbb
add
inc
daa
or
adc
aas
es
arpl
aaa
out
lods
repz
add
mov
pushf
cs
into
cltd
lds
test
mov
nop
bound
ds
in
jmp
sub
sub
icebp
mov
das
repz
add
mov
lea
clc
cmc
into
xor
mov
pop
iret
pop
lret
enter
sbb
pop
push
int3
pop
jp
sub
inc
pop
jle
mov
xlat
pop
lock
inc
mov
lods
or
je
or
ret
std
and
jne
inc
push
cmp
fxch
mov
test
out
push
xor
ljmp
out
inc
lods
pop
cmpsl
push
add
sub
mov
aad
cwtl
es
xchg
pop
cmp
pop
pop
ja
das
lret
cmpsl
mov
pop
rcll
cmp
lock
adc
lods
xchg
xchg
cwtl
cmc
sub
out
js
xor
cwtl
pop
dec
mov
push
cmpsb
mov
sbb
mov
fadd
shrl
pop
sahf
sbb
push
pop
sub
inc
scas
lods
mov
aas
lea
clc
nop
inc
mov
icebp
lods
int
lock
xchg
js
ror
push
mov
add
pop
shufps
xchg
cmc
cwtl
cmp
lret
repnz
hlt
cmp
inc
rolb
sbb
push
js
jp
jg
je
mov
jns
dec
jecxz
int3
inc
mov
movsl
outsb
pusha
dec
push
leave
or
pop
inc
dec
lret
aad
cmp
fwait
insb
leave
jb
cmp
sahf
pop
mov
and
adc
mov
cmp
add
sbb
xor
fnstsw
cmp
jo
movzbl
ds
ds
cmc
std
xor
pop
adc
sbb
sub
pop
sub
xor
repnz
aad
scas
popf
push
mov
cmpsb
sbb
adc
cmp
push
aad
pop
ds
mov
mov
mov
mulb
ljmp
out
and
xor
cwtl
fimull
fcmovb
movsl
push
pop
ret
in
mov
leave
mov
and
shl
jge
push
leave
mov
bound
xchg
enter
pop
mov
sbb
mov
call
test
test
imul
jge
data16
sti
cmp
sarl
xchg
bound
add
cmp
into
push
push
test
ja
aas
out
mov
ret
push
jp
jnp
mov
sar
lods
scas
cli
xchg
cltd
out
pop
adc
lcall
cmp
and
sti
shll
aam
fwait
jl,pt
shll
jb
jmp
faddp
adc
mov
cli
mov
aaa
push
inc
cmc
sbb
inc
inc
jne
xchg
stc
daa
sub
fldt
or
adc
mov
test
dec
dec
rolb
sbb
adc
lds
mov
push
icebp
subl
gs
lahf
push
mov
scas
sarl
enter
mov
cld
pop
jle
fldenv
pop
pop
test
cmp
arpl
xor
leave
cltd
stos
ficompl
fsubl
adc
cmp
add
je
pusha
sbb
fcomi
sbb
sbb
or
cmpsl
mov
rcl
or
xlat
addr16
pop
dec
out
mov
repnz
adc
xor
xchg
scas
mov
pop
pop
mov
shll
fadd
js
mov
insb
mov
lods
xchg
aaa
sub
push
stos
push
pop
xchg
mov
jns
mov
and
mov
ja
icebp
adc
or
rol
mov
pop
lds
adcl
inc
push
andl
or
pop
out
and
dec
jns
cmc
test
xchg
pop
aad
fadds
popa
testb
lret
imul
lods
sub
ror
mov
jno
lods
iret
xchg
cltd
jmp
bound
arpl
dec
stos
mov
xor
xor
inc
mov
popf
repnz
imul
dec
xor
daa
rorl
pushl
cwtl
cmp
enter
push
lea
xchg
inc
xchg
out
cmp
mov
dec
jp
int3
fisttps
push
lcall
adc
shlb
adc
inc
notl
mov
gs
in
pushfw
enter
shr
mov
pop
push
adc
inc
inc
cwtl
pop
nop
dec
lds
dec
mov
aaa
cltd
or
and
and
xlat
jecxz
aaa
add
insl
enter
sbb
xchg
loop
dec
cmc
pop
je
xlat
aaa
movsl
inc
or
hlt
imul
out
aaa
mov
sbb
lods
ret
pop
das
xlat
add
or
dec
add
popa
add
scas
pop
xor
test
into
mov
hlt
sub
push
sbb
cwtl
xchg
pop
aad
mov
mov
adc
sbb
sub
adc
data16
sub
loop
pop
add
xchg
lods
cwtl
jnp
pop
adc
ljmp
pop
pop
jmp
dec
shrb
hlt
movb
mov
ljmp
fidivs
jl
xchg
dec
mov
ss
or
xchg
jbe
lods
mov
stc
inc
ret
dec
hlt
inc
or
rcll
sbb
push
push
test
jns
sub
mov
mov
shlb
and
push
lea
imul
mov
adc
notl
sub
rolb
not
xlat
mov
in
mov
popf
dec
fsubs
popf
incb
aas
push
xor
fnstsw
sub
or
int
jg
addr16
cwtl
mov
and
xchg
cmp
int
xor
mov
or
je
push
cmp
mov
dec
inc
or
shrl
dec
sbb
pop
cmp
rorb
loopne
mov
adc
testl
sub
addb
push
jp
clc
pavgw
js
fdivrl
push
ljmp
or
jo
outsb
mov
pop
jl
push
imul
push
xchg
out
adc
insb
sub
inc
and
icebp
mov
pop
xor
dec
cmp
xchg
sarb
int
aas
xchg
jmp
out
mov
and
popa
mov
aad
das
scas
icebp
xchg
rcl
jns
fs
pop
stos
pop
mov
dec
xchg
jnp
test
icebp
fcoml
negl
inc
shlb
jecxz
ds
push
iret
decl
pop
repnz
push
insb
jmp
fdivr
mov
sub
xchg
call
cmp
out
mov
add
jae
add
jo
pushf
inc
cmpb
pop
cmp
mov
sbb
push
decl
push
jl
mov
pop
push
cli
lods
mov
push
ljmp
bound
ja
insb
sbb
data16
add
push
mov
fcoms
clc
xor
jno
movsb
add
jne
push
in
pushl
andb
dec
push
xor
inc
fs
sub
movl
and
scas
push
icebp
jbe
push
jecxz
add
cmp
mov
mov
jae
in
mov
lods
inc
inc
bound
leave
addr16
push
pop
inc
fwait
push
gs
push
pop
sti
arpl
lods
cwtl
int
sbb
mov
ss
jge
inc
inc
les
xchg
mov
mov
popa
stc
mov
std
dec
adc
jb
pusha
out
outsl
sub
movsb
mov
xchg
inc
shrb
adc
int
cmpsl
inc
push
inc
pop
mov
movsl
rcrb
testb
fdivr
insl
jmp
lds
cld
dec
lea
bound
jno
push
arpl
bound
xchg
or
pop
pop
jge
call
addl
std
dec
ja
xchg
sbb
stos
sarb
pop
in
and
scas
popa
cmpl
adc
repnz
fistpl
mov
pop
cmp
pop
lcall
adc
mov
movsb
int
insl
inc
imul
pop
les
outsl
jbe
mov
jno
insb
inc
jp
inc
sbb
pushf
mov
lret
xor
cwtl
ja
arpl
xchg
aad
mov
shrb
inc
pop
sub
icebp
fildl
jo
insl
popa
xor
hlt
mov
inc
out
jbe
push
cmc
jecxz
and
mov
mov
sub
inc
cld
test
lods
sahf
adc
push
mov
int3
mov
into
hlt
mov
es
fdivr
xchg
arpl
mov
lods
and
fdiv
dec
test
sarl
sub
das
insb
arpl
cmp
arpl
out
jmp
add
sub
outsl
cmp
jmp
ja
fidivrl
jnp
dec
aaa
in
or
sarb
jno
lea
out
ja
mov
cltd
pop
inc
imul
insb
mov
into
lahf
dec
mov
xor
adc
hlt
inc
dec
adc
xor
pop
bound
add
pop
je
fxch
jns
jmp
repz
push
push
insl
push
sub
sub
xor
mov
loope
cmp
sahf
push
rcrb
pushf
xchg
int3
fcomps
into
jns
xor
push
shrl
lods
cld
inc
xorl
call
outsb
mov
xlat
je
xlat
push
mov
pop
dec
jae,pt
das
fcoms
fdivl
jecxz
lods
mov
in
out
cltd
clc
bound
cmp
mov
xlat
dec
mov
jmp
out
xor
lcall
cmp
or
pop
fistpl
shlb
push
ljmp
aad
pop
mov
mov
mov
cmp
xor
int3
push
cmpsb
pushw
shll
les
sub
xchg
or
push
loope
stos
xor
add
test
mov
sub
push
sbb
fstps
add
adc
je
push
push
mov
out
loop
repnz
lea
jmp
in
mov
pop
scas
jl
xor
iret
xchg
mov
js
jge
lea
add
inc
and
jg
adc
shlb
jp
in
je
push
mov
jbe
or
cmp
nop
popf
jnp
fadd
test
push
sub
push
dec
movsb
fcoml
repz
fists
and
notl
adc
arpl
mov
loopne
sbb
popf
pop
sbb
mov
dec
xchg
inc
decb
mov
dec
orb
sbb
out
add
cwtl
add
xchg
sub
in
push
xor
or
test
subb
lods
subl
rclb
lcall
and
sbb
jl
out
dec
jle
sti
and
mov
data16
aad
pop
popf
xlat
js
push
pop
push
je
pop
iret
or
cmpsb
in
dec
repz
xlat
shlb
popf
sub
mov
es
icebp
shl
stos
das
sahf
jge
pop
mov
addr16
test
out
into
xchg
gs
inc
lods
add
xorb
jno
daa
mov
das
adc
add
xchg
adc
fs
stos
das
adc
sbb
add
iret
pusha
xchg
mov
cmp
mov
mov
test
add
bnd
mov
jmp
ljmp
inc
xchg
xchg
xchg
xor
lods
stos
mov
adc
or
adc
mov
cwtl
mov
clc
fisttpl
inc
sub
pop
inc
jno
dec
insl
stos
fisubrl
hlt
scas
cmc
dec
subl
add
sbb
outsb
or
and
jg
loope
inc
mov
jo
insl
jne
mov
test
ret
notl
push
mov
inc
pop
mov
cmp
fbld
sahf
mov
call
sbb
and
or
in
sti
push
inc
pop
lahf
mull
xchg
sbb
mov
pop
sub
fdivrl
stc
fsave
jae
pop
cmpsl
inc
js
and
mov
jo
popa
xor
dec
addr16
lds
popf
mov
cmc
data16
push
bound
lcall
sbbl
xchg
pop
mov
addr16
push
cmc
xor
mov
sbb
pop
pop
jmp
mov
adc
insl
movsb
xlat
xlat
cmpl
movsl
and
mov
pushf
sub
lea
cmpsl
xchg
shlb
aaa
jge
sub
and
ja
mov
cmp
lock
or
call
movsl
pop
xchg
sbb
mov
call
cwtl
leave
pop
mov
call
insl
ja
add
fadd
lods
ljmp
add
pusha
jmp
js
sbb
inc
jbe
jnp
popf
adcb
ficoms
or
push
fisttpl
xor
mov
dec
test
push
cmp
mov
int
mov
mov
xchg
xchg
push
inc
test
lods
xor
in
rcl
cmp
pop
aaa
mov
test
cwtl
pop
cmp
sbb
jo
xchg
xchg
xchg
popf
push
add
mov
fisttps
mov
mov
loopne
or
pop
aaa
repz
mov
dec
addr16
std
pop
and
insl
jnp
jp
insl
jmp
not
push
xor
jecxz
in
test
or
sub
lret
adc
daa
push
into
xchg
ss
push
pop
movsb
push
jle
jp
aam
mov
inc
adc
stos
push
mov
fisttpl
adc
loop
dec
push
push
mov
pop
mov
leave
roll
push
loopne
fmull
cmpsl
cltd
pop
mov
mov
jp
mov
insb
aaa
mov
imul
jae
shll
adc
dec
pop
and
jp
test
popf
xchg
or
outsl
cld
mull
jecxz
xchg
cmp
pop
fwait
sub
pushf
sti
mov
jnp
jae
ljmp
dec
jg
out
dec
push
sti
push
or
dec
and
divb
outsl
push
push
cmp
inc
lahf
mov
loope
sbb
pop
mov
or
ret
xor
ss
fwait
jo
cwtl
arpl
cmpsl
adc
jg
das
jle
cmpsl
and
mov
test
or
pop
in
xlat
dec
bound
and
xor
cld
jae
arpl
aaa
xchg
mov
stos
mov
popa
movsl
sbb
fstps
ret
stos
call
fnstenv
inc
adc
inc
dec
and
dec
fmul
in
and
imull
les
imul
inc
fbld
cld
or
mov
leave
or
mov
adc
dec
cmpsb
pushf
testl
sbb
ljmp
and
insl
sti
push
sub
mov
mov
mov
push
inc
jecxz
pop
and
jo
addr16
mov
push
sbb
out
xchg
jge
xor
adc
pushf
cmp
sbb
jb
jbe
subl
adc
and
jo
dec
loope
inc
fwait
andb
notl
daa
fcomps
mov
sub
sub
adc
pop
ret
sahf
sub
cld
sbb
ret
xchg
fdivs
cmp
lods
push
push
push
xchg
xchg
pop
add
loope
xchg
sub
test
loopne
jne
testb
nop
mov
xor
push
mov
ficoms
or
jl
xchg
mov
xchg
icebp
lds
pushf
clc
sub
xchg
ss
int3
add
aaa
movsl
ds
fwait
in
addr16
xchg
js
data16
fwait
jecxz
sbb
inc
scas
jne
xchg
das
sub
ja
or
mov
and
dec
add
movsl
mov
add
cmp
inc
fdivs
xchg
sahf
dec
add
xor
and
pop
cmp
push
call
jns
pop
xchg
insl
arpl
inc
js
add
jmp
mov
cmp
or
movsb
pop
lea
pop
lods
orb
cwtl
sahf
sub
arpl
and
lods
jno
repnz
outsl
scas
dec
aam
enter
inc
gs
int3
nop
xor
cmp
lcall
loop
bound
sahf
faddl
pop
mov
or
sti
jne
test
push
int3
jge
call
push
pop
scas
mul
repnz
les
add
in
psrlq
mov
jmp
mov
in
jge
repnz
mov
xlat
stos
pop
in
xchg
adc
or
out
jns
outsb
int
xor
jo
test
cmpsl
jecxz
ds
mov
addb
push
mov
xchg
sub
mov
ds
iret
dec
or
lds
popf
in
xor
mov
cmp
lcall
scas
or
call
xchg
cli
cmp
inc
cmp
push
addr16
jns
out
jb
lods
or
pop
out
fwait
lods
cwtl
inc
or
dec
push
xchg
dec
sub
mov
clc
stos
lods
and
in
sti
lock
cmp
push
out
ss
repz
aad
add
int
mov
mov
ffreep
adc
ret
mov
jno
repnz
repnz
das
lea
lahf
sbb
cmp
pop
add
mov
aam
clc
sbb
push
mov
outsl
cmp
out
and
xor
aas
fdivl
adc
ja
and
xor
cmp
gs
add
in
aaa
out
rcrl
add
insl
in
fldcw
enter
mov
jge
arpl
int
push
dec
clc
adc
pop
push
lahf
xor
lret
mov
out
pop
je
shlb
pop
dec
cmp
pop
jecxz
mov
ljmp
mov
int3
add
outsl
es
in
aam
imulb
fdiv
stos
dec
inc
movsb
push
xchg
popa
cwtl
lcall
lds
inc
pop
inc
ss
lahf
dec
cmp
lret
cmpsb
jbe
mov
nop
xchg
je
inc
and
xchg
cltd
inc
ljmp
xchg
dec
insl
xchg
in
inc
mov
cld
mov
std
jbe
push
pop
xchg
sub
jnp
or
jle
mov
neg
xor
jo
add
cmp
mov
or
cwtl
sub
xor
pusha
sub
std
pop
repnz
xlat
rol
or
pop
push
out
push
push
popf
fstl
push
ss
rorb
push
sti
add
mov
mov
and
inc
mov
ja
mov
imul
xorb
or
clc
aaa
adc
int
test
fldt
rcrb
inc
and
call
inc
cli
loope
mov
jmp
loop
dec
cmp
sub
sub
jbe
cld
jb
xchg
insl
pop
addr16
lock
dec
inc
dec
mov
push
imul
pop
dec
aaa
int
das
clc
jns
pminsw
or
mov
nop
je
popf
out
mov
jne
iret
adc
sbb
lds
and
aad
inc
dec
inc
cli
sub
pop
or
or
and
aad
std
pop
rolb
decl
mov
pop
push
in
dec
lret
sub
gs
ljmp
lret
idivb
inc
mov
hlt
and
jne
mov
scas
push
iret
rol
pop
jecxz
mov
fistpll
jae
mov
idivb
insl
fldl
mov
jne
lret
aaa
fwait
imul
adc
or
dec
or
mov
sahf
add
arpl
je
jp
hlt
jnp
xchg
int3
mov
or
ret
xchg
int3
outsl
cmpl
jne
xor
outsb
xchg
pusha
jge
jg
fcomi
pop
sbb
adc
js
add
int
movl
sub
or
add
mov
in
dec
xchg
push
shl
faddl
xchg
xchg
mov
pop
mov
cmp
dec
fisubrl
dec
sarb
outsb
loop
popa
scas
cmp
and
pop
push
xchg
aaa
mov
xor
push
orl
insl
cld
arpl
adc
outsb
shr
and
and
lds
mov
add
mov
sub
or
push
test
loopne
outsl
or
shll
mov
jo
xchg
mov
aaa
mov
cmp
lock
mov
fidivrl
mov
push
sahf
mov
or
mov
and
inc
insb
inc
addb
cmp
mov
mov
out
cmp
fiaddl
mov
mov
imul
gs
pop
mov
push
insb
push
pop
adc
jge
sahf
push
adc
nop
pop
sti
mov
mov
test
test
test
and
test
jle
inc
adc
adc
sub
xchg
mov
inc
imul
lret
mov
mov
outsb
cltd
out
xchg
movsb
fcomip
fcoms
mov
subb
or
xor
cmpsl
mov
jecxz
push
xor
cwtl
mov
sbb
mov
fmul
iret
mov
je
xlat
cmp
mov
xchg
jg
mov
testl
shlb
mov
xor
daa
push
cmp
aad
adc
mov
sbb
xchg
cmp
sbb
insl
mov
xchg
mov
xchg
fistps
pop
cltd
or
mov
mov
enter
and
bound
adc
xchg
mov
sahf
in
sub
ss
mov
mov
add
xchg
and
subl
aaa
int3
adc
sbb
sub
xchg
mov
jne
push
jle
jne
cmp
arpl
pusha
pop
mov
pop
out
lahf
jns
inc
ja
push
inc
popl
fwait
in
out
jno
push
aas
mov
or
daa
out
fdivrs
ljmp
mov
pop
test
cmpsl
xchg
inc
repnz
rcr
pusha
adc
icebp
nop
sub
pop
stos
jnp
ret
cmp
jecxz
out
pop
aas
out
push
aas
test
or
jno
outsl
inc
sub
pusha
out
out
repz
in
ficompl
subb
mov
mov
adc
jno
mov
nopl
inc
pushf
mov
imul
inc
and
aaa
lock
insb
call
icebp
or
xchg
cmpsb
ret
push
enter
fwait
lds
push
into
roll
imul
xor
xor
insl
ret
pop
cmp
cmpsl
xchg
push
dec
imul
dec
cmp
dec
in
pop
mov
clc
les
test
or
sbb
sub
jle,pn
fsubr
mov
loop
clc
jo
shlb
jmp
hlt
cmp
loope
aam
cld
mov
push
int
ljmp
or
outsl
pusha
and
jl
cmp
jl
jp
sbb
out
cmp
or
cltd
push
les
mov
pop
fisubl
push
arpl
xor
repnz
ds
int3
pop
sub
lea
push
jmp
ljmp
mulb
lret
inc
sahf
mov
sub
fs
sbb
gs
jae
int3
xchg
dec
mov
dec
sbb
loope
and
push
addl
sbb
lret
lea
inc
dec
scas
cmpsb
loopne
inc
icebp
add
jge
push
xor
ret
sbb
sti
mov
inc
push
and
mov
mov
or
add
or
jo
ret
les
pop
pop
adc
fisttps
adc
push
sub
insl
rcr
mov
jecxz
insb
pusha
fcomps
cmp
push
cmp
inc
push
fsubrp
es
sbb
mov
icebp
jae
int3
lods
xorb
dec
mov
xchg
fstl
xor
mov
mov
mov
popf
mov
pushf
sub
imul
dec
mov
scas
ds
cmp
cmp
adc
outsl
aaa
and
mov
xlat
dec
stc
mov
pusha
or
jmp
mov
or
push
sti
xor
ja
xchg
push
jmp
pop
or
sub
push
out
pop
lock
sub
pop
inc
idiv
iret
xor
pushf
or
lea
push
sub
outsl
in
sbb
or
popa
add
add
in
std
push
xchg
sbb
lods
mov
mov
push
mov
cmp
or
push
idivb
mov
stc
add
scas
cmp
push
xchg
outsb
fwait
rcll
stos
imul
shll
dec
push
imul
xor
pop
out
add
mov
fsubrp
jnp
cmc
mov
jp
jp
lds
mov
aaa
aam
dec
gs
bound
das
or
xor
mov
adc
inc
xchg
fiaddl
pushf
cli
pop
dec
aaa
ret
pop
xchg
pop
mov
jmp
xchg
test
inc
cli
xor
push
mov
jae
lahf
push
pop
sti
lret
daa
inc
leave
cmp
aam
jge
add
dec
jo
xchg
mov
iret
jecxz
jp
mov
aaa
dec
inc
adc
rol
pop
mov
int3
or
sbb
in
test
pop
out
inc
rcr
jl
mov
jg
clc
sub
adc
pop
xor
pop
cmpsb
xchg
lcall
xor
xchg
in
mov
es
fnsave
mov
adc
testl
lods
in
add
mov
jo
sub
es
adc
jl
sub
cld
out
jecxz
dec
cmp
xchg
adc
movsb
insl
dec
push
adc
movsb
push
push
xlat
add
fstp
fcoml
jecxz
imul
push
out
sbb
dec
pop
dec
imul
je
mov
inc
jbe
adcb
sbb
jmp
xor
pop
sbb
pop
lcall
mov
xor
mov
lret
repnz
pop
cmp
clc
mov
in
shlb
jbe
icebp
addl
add
fildll
add
rol
sbbb
lods
test
repz
sbb
adc
jbe
stos
test
pop
into
mov
push
lock
ljmp
mov
or
mov
test
int3
loopne
stos
pop
hlt
sub
dec
inc
ret
mov
clc
enter
and
loope
inc
xchg
js
popf
divl
stos
jp
dec
sarb
lahf
test
int
jl
xor
jbe
add
aas
ret
imul
sub
cmp
int
aad
ret
imul
out
or
xchg
aam
mov
jmp
lds
pop
sbb
ret
inc
mov
sbb
ss
ret
fsub
sub
in
jmp
cmc
push
fisubl
test
cltd
sbb
imul
jnp
adc
jnp
jmp
mov
pusha
fcoml
mov
mov
loope
test
clc
xlat
jne
rclb
xor
in
stc
and
cmp
test
jg
arpl
cmc
and
dec
mov
lea
lea
mov
pop
stos
mov
ss
subl
movsb
nop
jne
rorb
orl
xchg
test
pop
aas
scas
xor
cmp
cmpsb
sbb
aas
sub
adc
addr16
inc
insl
ljmp
or
xor
xor
mov
pop
lea
arpl
adc
mov
sbb
xchg
inc
mov
and
loopne
cmp
jno
mov
sub
cwtl
mov
add
pop
enter
or
imul
add
sub
rorb
mov
je
ror
pop
sub
hlt
js
stos
pop
push
and
and
or
cwtl
dec
pop
repz
ret
in
imul
push
lret
rcrl
lret
mov
popf
mov
sbb
cli
mov
dec
fmuls
es
sub
xchg
add
mov
nop
ljmp
inc
das
inc
jns
test
sub
mov
xor
cs
iret
adc
xchg
stos
jo
out
dec
adc
jecxz
sbb
clc
and
pop
mov
cmp
push
ret
sbb
mov
cmpsl
cld
hlt
popa
inc
mov
xchg
push
jle
es
cmp
out
insl
sbb
pusha
sbb
mov
sbb
cwtl
xlat
inc
dec
jg
lahf
jle
cli
xchg
xor
mov
jnp
mov
jae
nop
mov
sub
loopne
xor
push
nop
in
lret
and
add
int3
imul
in
std
mov
jg
xchg
mov
push
lahf
stos
mov
mov
aam
sub
pop
xor
div
lods
pop
xor
and
pop
aad
fildll
ja
ljmp
mov
jno
inc
xor
dec
lret
ljmp
bound
xchg
lods
shlb
popf
jno
xor
mov
pop
mov
mov
mov
xchg
jb
daa
addl
and
adc
fisttpl
out
lahf
xchg
mov
push
outsb
push
xor
ret
mov
mov
loopne
clc
pop
std
into
dec
adc
fistpl
test
jnp
mov
pop
jno
mov
push
testb
adc
mov
dec
cld
test
cmp
mov
scas
add
add
pop
jbe
pop
aaa
daa
mov
outsl
fsubs
xor
fcompl
xchg
movsl
in
int
adc
xor
test
mov
inc
lcall
xor
push
push
inc
lods
or
pop
lret
mov
out
inc
xor
mov
cwtl
scas
xlat
into
xor
test
pop
rcrl
add
cmp
nop
add
and
dec
shrb
out
nop
aaa
xchg
mov
mov
out
loopne
xor
pusha
das
mov
inc
dec
scas
lods
lods
lds
push
int
enter
aas
imul
xlat
ja
mov
dec
mov
mov
sub
push
add
add
std
sbb
test
loope
mov
out
sub
inc
add
pusha
mov
sbb
inc
xor
sar
pusha
repnz
rorl
mov
ds
sub
mov
xor
xchg
test
or
sarb
sub
mov
fbstp
in
test
inc
adc
pop
push
lock
in
push
outsl
data16
cmpsl
and
popf
inc
xchg
pop
fmuls
out
leave
pop
push
xchg
ljmp
push
rorl
push
lods
out
cmp
std
or
jno
jl
andb
es
in
and
icebp
leave
les
ret
out
or
das
js
movsb
xchg
cmpsb
fs
mov
jge
push
add
into
je
clc
xchg
xor
add
ret
add
xor
xchg
sub
xchg
stc
and
frstor
popa
cmc
scas
xchg
pushl
pop
cmp
sub
mov
test
stos
sbb
sbb
movsl
add
mov
xchg
push
mov
scas
and
push
dec
ljmp
js
mov
pop
mov
push
inc
push
cmp
jg
dec
fildl
push
icebp
dec
cmp
stos
test
jbe
mov
pop
daa
stc
andb
movsl
sub
adc
jae
jle
scas
jecxz
sbb
rclb
inc
dec
jne
or
xor
lods
arpl
std
xorb
hlt
push
cmpsl
icebp
xor
cmp
ja
mov
mov
or
ret
adc
inc
outsl
stc
xchg
pop
dec
ss
pop
push
jbe
dec
mov
cli
mov
xor
push
jecxz
dec
mov
sbb
das
add
insb
or
jne
enter
inc
pop
push
inc
stc
sbbl
xchg
shrl
hlt
or
mov
cmpb
xor
int3
outsl
in
sub
mov
cli
out
add
adc
or
jl
sahf
jae,pt
dec
push
push
orl
std
sbb
mov
stos
mov
in
pop
rcll
adc
mov
push
push
inc
push
mov
pop
pop
test
add
loop
push
pop
mov
pop
mov
or
xchg
cmp
sub
in
je
mul
fwait
cs
mov
negl
pmuludq
int
lret
sbbb
or
shlb
mov
cmc
aaa
xchg
sub
ficomps
lods
push
dec
or
mulb
mov
and
push
out
or
mov
jbe
into
xor
mov
bound
mov
adc
or
push
push
mov
mov
or
vmread
loop
push
pop
fcoml
cmp
stos
add
jb
jae
rcl
push
dec
aaa
mov
sti
ficompl
fists
sub
clc
int
push
adc
add
pop
int3
hlt
or
imul
lcall
cmp
mov
sti
nop
mov
fists
sbb
sub
xor
adc
repz
cmp
cmp
nop
mov
cmp
push
fs
jae
pop
enter
xor
mov
hlt
mov
aaa
lods
mov
inc
xchg
ret
push
push
mov
test
leave
push
adc
loopne
jmp
lock
push
lret
das
fwait
inc
add
xor
inc
test
jne
dec
scas
mov
and
mov
clc
lret
push
out
adc
fcomps
shll
push
mov
push
cmp
ret
lods
loopne
enter
hlt
push
lock
xor
test
cmp
or
xchg
pop
mov
sub
imul
add
test
dec
sub
roll
scas
push
sub
or
jne
mov
push
jbe
lds
mov
mov
stos
lcall
popf
inc
div
aaa
cwtl
insb
jp
ljmp
inc
mov
movsl
xlat
mov
mov
test
pop
pop
xchg
mov
ljmp
adc
fidivrl
in
out
popf
jnp
fimull
hlt
sbb
sub
xor
das
bound
ret
out
lcall
hlt
add
test
mov
test
adcl
outsl
shll
aam
lret
and
sahf
add
aam
loop
xchg
cmp
fwait
sbbl
movsb
leave
push
testb
popf
pop
out
xchg
arpl
roll
push
dec
mov
add
cs
bnd
stos
stos
push
nop
cmp
inc
sti
aaa
sbb
jl
mov
jp
lcall
mov
mov
rcrb
mov
jp
add
sbb
into
out
sbb
mov
xchg
adc
inc
jno
mov
fldenv
adc
mov
filds
dec
cmc
jb
daa
dec
out
into
pop
and
scas
iret
inc
cmpsb
xor
rcrb
mov
cwtl
out
aad
sub
lods
sbb
movsl
jp
cmpsb
xchg
mov
lret
and
inc
je
les
cmpsl
cld
cmc
jmp
gs
icebp
xchg
mov
adc
data16
insl
in
mov
pop
je
mov
frstor
push
mov
imul
imulb
pushf
mov
int3
add
shlb
dec
inc
lds
aam
outsl
xor
xor
push
xchg
cwtl
xlat
lds
mov
hlt
iret
enter
in
sbb
fnstenv
mov
dec
adc
pmuludq
ja
mov
subl
pop
pop
fcoms
mov
mov
jg
int3
rorb
mov
mov
xchg
mov
xchg
cmp
and
dec
jmp
pop
rcr
call
mov
out
daa
int
xchg
mov
fs
sbb
gs
ss
fmulp
jp
pop
mov
pop
pop
and
outsb
outsb
rcll
mov
xchg
jns
push
jns
inc
pop
mov
iret
and
dec
push
push
mov
push
ja
arpl
outsl
movsb
cmp
dec
jb,pn
xchg
cs
pop
mov
in
xchg
mov
cmpsb
xor
daa
mov
lds
sbb
push
das
je
sti
inc
daa
pop
adc
adc
dec
lea
shl
xor
xlat
mov
xchg
out
or
dec
dec
rcrb
and
mov
ds
outsl
scas
scas
inc
xchg
insb
mov
rclb
mov
push
push
xor
sbb
clc
jns
pop
sub
negl
jle
test
add
jg
fucomip
stc
ret
mov
ret
push
loope
xor
lcall
mov
xchg
sub
mov
mov
cld
insb
sti
jp
aas
cmp
lret
cld
shll
mov
push
lock
dec
movb
scas
fwait
leave
lret
and
test
push
push
icebp
add
pusha
sbb
add
xor
les
sbb
arpl
mov
fldcw
xchg
inc
aas
loop
xor
and
xlat
xchg
xor
lcall
arpl
shrb
lret
mov
xor
push
rcrl
pop
sarl
push
add
cli
xchg
and
mov
sbb
jmp
std
sub
mov
xor
sbb
xchg
pusha
mov
push
stc
push
jg
je
lods
int3
sbb
inc
outsl
jnp
xchg
inc
sarb
cltd
and
fcmovne
ds
push
aas
aam
cld
test
stc
xor
dec
fst
and
mov
dec
push
roll
mov
sbb
mov
ss
fs
ds
scas
or
inc
std
es
fidivrs
inc
cmc
sbb
add
loopne
xchg
addr16
enter
push
cwtl
sbb
xchg
shlb
xor
push
in
and
cld
and
jmp
sub
fldt
xor
imul
mov
fcmovbe
aad
push
jmp
push
sbb
and
pop
test
out
jg
jnp
movsl
jnp
fadds
jb
sar
stc
xchg
mov
cmp
andb
mov
push
mov
xorl
pusha
cld
rcll
xchg
repz
sbb
cld
sub
inc
ret
pop
sti
cmp
sub
pusha
fwait
cld
xor
mov
push
sub
push
ljmp
push
or
jmp
lret
or
cmp
add
sub
ss
jae
mov
xchg
or
mov
and
mov
xorb
jne
and
inc
mov
push
shl
mov
push
and
push
cwtl
sub
int3
orb
push
movsb
iret
jne
and
fbstp
or
push
stos
xchg
push
sbb
add
fwait
mov
out
or
sbb
scas
movsl
sbb
mov
cmp
adc
insb
inc
adc
push
pop
mov
leave
frstor
mov
imul
sbb
scas
lds
inc
mov
int
cld
mov
arpl
fstl
fstpl
leave
ss
ds
imul
les
push
pop
je
pop
inc
daa
in
and
mov
pop
rol
sbb
fpatan
mov
add
es
das
ret
aaa
sbb
stos
sub
xchg
push
mov
inc
imul
in
ljmp
jg
filds
push
mov
lods
adc
inc
mov
pushf
mov
jo
dec
xlat
dec
push
mov
hlt
out
icebp
int
mov
iret
and
jo
aad
add
test
popf
daa
mov
popf
or
push
xorb
push
cld
jo
mov
lcall
das
arpl
mov
dec
sbb
jmp
pop
mov
bound
inc
xor
outsl
popa
mov
xchg
adc
mov
fbstp
jo
mov
push
enter
mov
lock
cli
xor
fsub
pusha
dec
aad
pop
dec
pusha
enter
std
inc
ds
xor
js
mov
int
cltd
pusha
js
inc
dec
ja
test
cmp
roll
shrb
std
movsl
pop
lcall
jmp
enter
push
in
pop
shl
cmp
jbe
mov
sti
mov
sub
and
xchg
jae
ja
mov
sbb
xchg
add
and
loopne
stos
call
pmullw
xor
mov
mov
xchg
jb
sub
lock
icebp
push
jnp
cmpsb
rcrl
jne
stc
lods
aaa
dec
push
sti
fisttpll
inc
cs
inc
jb
in
cmovp
push
std
jle
cmp
push
inc
xchg
push
inc
sbb
cmp
mov
xchg
in
xor
mov
loop
xor
pop
xchg
popf
cmp
or
xor
or
dec
cltd
dec
xlat
sub
outsb
mov
shll
mov
fsts
push
and
or
sub
lods
lea
loopne
cmp
out
push
outsb
aam
push
mov
out
jge
pop
pop
test
push
pushf
out
mov
fsubl
adc
test
mov
test
adc
dec
xlat
clc
push
add
iret
jbe
pop
push
push
fnsave
shll
inc
cmp
cmpsl
mov
mov
fistl
iret
sub
jmp
xchg
shll
cmp
outsb
cli
xor
pop
xchg
pop
xchg
insb
push
popf
push
aam
push
dec
jecxz
std
jne
leave
in
jae
mov
or
rcr
cmp
dec
sarl
mov
adc
clc
mov
push
and
sti
cmp
scas
mov
leave
cmp
mov
push
mov
es
or
mov
ficompl
cli
xchg
jmp
lods
push
repz
xor
xchg
pop
and
mov
es
cmpsl
sbb
cld
xchg
pop
insl
xchg
pop
cmp
push
int
or
dec
sbb
mov
inc
cmp
out
pushf
mov
outsl
mov
lret
leave
adc
outsb
inc
fimull
mov
lcall
push
subl
cmp
dec
adc
cmp
stos
das
push
fsubl
lret
fimull
xor
push
scas
adc
push
movl
icebp
sbb
rcrl
testb
jge
xlat
adc
sub
fs
icebp
lret
data16
aas
mov
orb
mov
pop
nop
mov
fcoms
data16
mov
addb
test
push
add
ja
nop
sbb
sbb
xchg
sbb
pusha
sti
in
hlt
inc
jae
push
or
mov
push
mov
push
jnp
movsb
cmp
pop
mov
mov
jge
test
adc
mov
aaa
test
lcall
sub
popf
inc
jae
pop
outsl
iret
shrb
mov
les
pusha
push
gs
stos
jl
mov
mov
nop
je
sbb
rcll
nop
mov
mov
fiaddl
in
daa
roll
inc
fs
add
mov
icebp
jns
add
leave
and
inc
orl
or
daa
xchg
and
xlat
subl
jae
aad
push
push
or
pop
dec
rolb
dec
inc
jmp
das
and
cld
mov
pop
mov
adc
adc
xor
test
addr16
sbb
movsl
popa
lods
inc
mov
xchg
fcmovnbe
push
add
or
loope
aas
adc
rclb
daa
mov
cwtl
pop
push
mov
nop
daa
add
fstps
outsb
aam
movsl
jo
ret
mov
dec
and
xlat
imul
int3
add
xor
das
cwtl
pop
sbb
pusha
test
add
pop
pop
mov
sbb
dec
scas
xchg
popf
and
ds
dec
rolb
icebp
in
test
push
push
fidivs
lea
dec
dec
ret
cmp
fcoms
push
cwtl
idivb
inc
sti
adc
adc
test
cli
cmpsl
pop
mov
or
xchg
inc
sub
mov
arpl
lods
movsb
insb
push
jmp
cmp
aam
jns
pop
popf
inc
movq
push
pop
dec
pop
push
stos
inc
cmp
push
out
sahf
jg
sbb
test
xchg
xchg
sub
push
rcrb
sbb
cmp
pushf
adc
mov
jle
pop
or
mov
jbe
sti
jne
sub
xor
out
divb
mov
push
sub
int
int
mov
push
addr16
sub
ss
std
in
test
mov
pop
loopne
fwait
add
in
or
push
or
push
inc
jle
orb
fildl
into
inc
add
dec
pushf
sub
je
push
aad
hlt
push
lds
leave
adc
lret
sub
xchg
mov
pop
add
sub
test
jle
xchg
mov
xor
mov
mov
sti
push
sbb
dec
sub
pop
jns
arpl
nop
jle
fcmovnb
sub
push
mov
fimull
gs
xchg
insl
pop
inc
sub
fsts
xacquire
addr16
jne
jae
int3
cs
in
mov
pop
sbb
fldz
cmp
inc
mov
add
fs
mov
cmpsb
mov
repz
lock
bound
mov
lret
repz
popa
test
push
daa
cmp
cwtl
int3
push
rcr
das
imull
mov
add
fstl
cmpsb
add
in
cmp
cmc
fwait
jg
inc
cmpsb
xor
push
cmp
push
push
cmp
pop
aas
and
cmc
popa
add
mov
ljmp
inc
fsts
outsl
mov
test
pushf
shlb
shrb
fdivrs
mov
repz
dec
push
xorl
mov
sub
hlt
adc
xchg
sub
negb
lret
cmp
adc
fstps
stc
mov
loop
in
rclb
mov
jb
loop
pop
lods
dec
out
hlt
or
insl
and
mov
xchg
fxch
or
movl
inc
sub
cltd
xchg
inc
mov
popl
jne
xor
cmpsb
cmp
call
xchg
jl
imul
ret
dec
or
daa
repnz
inc
jno
outsb
sti
or
aaa
aaa
push
ljmp
add
mov
mov
push
pop
or
mov
pusha
ret
inc
cmpsb
mov
cmpsl
or
jno
fadds
test
pop
mov
lahf
cli
popa
jg
mov
movsb
add
xlat
or
ja
test
imul
sbb
repnz
ds
pop
and
cmp
popl
cmpsb
inc
hlt
iret
inc
xor
adc
test
popf
popf
jnp
cs
push
mov
or
dec
out
ljmp
inc
push
int3
push
pop
cmp
loop
dec
jbe
inc
xchg
ss
rcll
sub
xchg
leave
lea
hlt
outsb
sbb
mov
mov
pop
ret
cmpb
xchg
jg
inc
jmp
xlat
xor
es
mov
sbb
inc
pop
cwtl
aad
cmp
xchg
pop
xchg
mov
xor
in
neg
pop
mov
sarl
or
inc
imul
test
stos
std
pop
jle
leave
popf
fdivl
add
imul
in
shll
jne
es
ret
lods
lret
jmp
mov
lea
inc
jg
and
pop
or
mov
cmpsl
mov
or
and
cmp
sbb
testl
imull
pop
rol
test
imul
jg
das
repnz
movl
insl
and
xor
cmp
jp
nop
popa
adc
test
in
add
adc
mov
jns
sub
jge
xor
jae
sbb
cmp
popf
lahf
mov
lret
jl
ja
lods
mov
nop
andb
adcb
xadd
jmp
or
lods
add
scas
pop
rclb
aam
push
ret
mov
clc
mov
popf
scas
cli
test
les
jge
insl
test
or
int3
jbe
xchg
mov
add
mov
and
cmp
roll
adc
push
mull
mov
inc
arpl
inc
pop
in
movsl
xor
aam
test
or
push
add
outsl
in
nop
xchg
push
div
iret
jne
popa
hlt
lods
fs
fmul
dec
xor
dec
lret
add
ret
mov
imul
push
in
orb
int
daa
add
in
into
int3
push
fnstcw
jp
xchg
int3
js
dec
jae
and
insb
pop
xlat
je
mov
scas
andb
and
in
in
dec
xchg
test
cmp
pop
adc
gs
out
dec
mov
fdiv
inc
mov
xor
movsl
fwait
pop
push
stos
mov
test
jnp
and
cmp
ret
imul
nop
push
in
cltd
push
call
xchg
out
imul
lods
in
adc
es
mov
aaa
mov
mov
nop
adc
cltd
nopl
rcr
inc
into
xorl
scas
pusha
adc
negl
lock
push
mov
xlat
frstor
testl
cmpsb
cmc
mov
popf
hlt
outsl
pop
hlt
push
mov
mov
adc
popa
ds
adc
pushf
xor
int
mov
adc
dec
push
jb
mulb
mov
push
pusha
fidivl
inc
dec
push
or
lret
mov
out
and
jno
push
push
punpckhwd
rcll
loop
movsl
mov
mov
cld
jno
sarl
cltd
mov
jg
and
inc
insb
mov
outsl
pop
sti
imul
imul
pusha
cmpsl
and
mov
adc
rcl
cld
jle
out
movsl
scas
test
gs
xchg
lods
arpl
mov
das
sbb
xchg
insb
jp
aad
mov
mov
test
push
cli
loope
push
and
repnz
cli
or
xor
aad
addb
leave
xchg
arpl
jns
jne
cmp
pop
fs
cli
and
jp
dec
sub
out
ds
sub
mov
push
cmp
jp
negb
stc
sbb
jl
lret
sub
movsb
mov
mov
jbe
insl
pop
dec
arpl
mov
ret
inc
pop
mov
adc
std
in
mov
insb
inc
clc
clc
icebp
lock
aas
test
cmp
jb
sub
push
push
insl
sub
xchg
js
add
mov
std
mov
subb
push
jmp
xchg
popf
dec
imul
jge
sti
jb
xchg
or
mov
mov
xorb
cmpb
cmc
arpl
xchg
xor
sbb
cmp
scas
and
das
lret
adc
xor
int
fwait
leave
jmp
push
lods
cli
adc
xchg
cmpsb
pop
mov
lcall
dec
inc
pop
adc
and
or
rorl
int3
subl
cltd
sbb
scas
ret
adc
jo
xchg
push
clc
pushf
jg
or
aas
testb
mov
dec
pop
mov
ror
push
xchg
xorb
jp
cmpsb
incb
xchg
xchg
xor
xor
push
jno
mull
jg
loope
movsl
cmc
sub
jp
push
pop
push
fsubrs
pop
jmp
jmp
pop
jle
fiadds
and
inc
mov
jge
ja
sti
inc
mov
pop
sahf
call
mov
js
stc
pop
add
mov
xlat
mov
cwtl
push
shll
fcoms
mov
bound
lea
mov
lock
or
xchg
mov
inc
add
fnstenv
into
mov
xchg
sbb
jns
fidivrs
inc
in
pusha
mov
out
stos
jne
in
subb
jp
inc
mov
adc
mov
add
dec
and
addb
and
pusha
loopne
pandn
outsl
sbb
hlt
pop
mov
jo
mul
movsl
aam
inc
dec
push
mov
jbe
and
add
dec
xchg
scas
xchg
pop
jl
xor
out
add
aad
ja
fldt
pop
ja
cmp
clc
jnp
xlat
shlb
adc
mov
popa
jmp
cmpl
andb
sbb
cmpsl
cmp
loopne
fidivl
add
or
cli
insb
insb
fwait
aas
stos
jnp
push
xchg
bnd
xchg
xchg
adc
xor
cmp
mov
hlt
hlt
mov
idiv
inc
mov
mov
mov
hlt
add
xchg
andl
dec
xlat
movzwl
push
fs
pop
into
inc
imul
inc
add
lods
arpl
pushf
jno
das
imul
add
xor
inc
sub
add
adc
mov
inc
in
test
lret
bnd
mov
xchg
lods
jmp
call
pop
lods
scas
cmpsb
jbe
js
cmpsb
daa
adc
xchg
xchg
mov
dec
sbb
into
stc
and
or
xchg
popf
mov
inc
mov
mov
test
sbb
sti
loopne
lcall
and
push
ds
push
jo
aas
bnd
jne
and
add
daa
xchg
clc
adc
add
ret
in
leave
push
xchg
add
adc
and
cwtl
inc
inc
popf
mov
pop
fcmovnb
mov
add
mov
adc
mov
cmpsb
lea
xchg
jbe
cmp
jle
ss
xor
gs
mov
inc
jl
fistpl
xchg
ljmp
ficomps
xor
fwait
or
jnp
pop
test
or
dec
push
out
xchg
adc
sbb
cmpsb
hlt
jb
mov
addl
inc
mov
insl
cmp
jge
push
jo
lds
addr16
mov
cmpsl
xor
lds
addr16
ds
ficoml
cld
jg
push
shrb
sub
out
xchg
ret
out
jne
cmp
or
or
mov
pop
iret
loope
repnz
push
pop
rcrb
lahf
mov
into
fisubrs
fxch
mov
xchg
xchg
int
xor
outsb
imul
mov
je
jbe
push
rcl
scas
adc
daa
and
add
mov
sbb
inc
cld
lret
sub
mov
jecxz
and
test
or
dec
scas
outsl
xor
or
mov
lods
push
dec
xchg
dec
ret
cs
dec
and
shrl
pop
out
repnz
dec
nop
movsl
lods
mov
sarl
aaa
dec
in
das
lock
fnstenv
dec
adc
jg
std
jno
pop
cmp
pop
stos
loopne
mov
xchg
cmpsb
dec
insl
ss
add
mov
test
das
stc
xchg
jmp
cmp
sub
aaa
push
adc
jl
xor
mov
das
adc
in
cld
xor
mov
mov
idiv
push
shrb
push
xor
das
pushf
push
cld
push
sbb
loopne
and
popf
jo
mov
jl
inc
lret
jne
mov
je
xor
mov
lret
in
movsb
inc
insl
cmp
loope
xchg
lods
pop
cld
outsl
mov
adc
testl
xchg
and
jl
les
stc
xchg
cmpsl
shrl
or
hlt
pop
cmp
into
mov
leave
jo
push
fwait
inc
test
dec
xor
and
jno
aaa
cli
in
jle
in
inc
and
adc
mov
inc
dec
cmc
inc
pop
and
or
and
jge
jg
rol
lods
lds
lea
popf
imul
leave
rdtsc
cmp
pusha
int3
ret
cmpsb
adc
ret
xchg
xor
fstl
mov
scas
xchg
or
xor
loop
aaa
push
arpl
add
fadds
popw
xchg
xor
in
imul
pop
lea
lds
push
dec
fwait
push
pop
adc
cmp
and
rcrb
rcrb
test
add
pop
clc
js
popl
cli
push
scas
daa
push
lea
sbb
sbb
fwait
adc
adc
repz
xchg
add
mov
rorb
push
cmp
mov
or
xorl
scas
call
cwtl
popa
mov
cmc
sbb
pop
mov
ljmp
aad
dec
insl
or
jne
cmp
in
or
cltd
out
andl
sbb
addb
lahf
jae
mov
fsub
ret
in
mov
mov
out
mov
jns
test
jo
xchg
ss
mov
insl
stos
or
mov
enter
push
scas
sbb
and
push
je
pop
dec
jg
xor
sub
xchg
cmp
movsb
hlt
je
add
cwtl
sub
push
pop
cli
enter
cld
out
mov
in
mov
xchg
xor
repz
jecxz
push
ret
fidivrl
ret
fwait
movb
lcall
sarb
or
cltd
pop
sub
pop
xchg
mov
scas
sub
fidivs
lahf
fimull
cmpsl
mov
aad
inc
out
cmp
cmp
fbld
push
pop
jmp
or
stc
gs
add
jns
imul
gs
addr16
push
loope
sub
decl
leave
lods
push
mov
andl
sbb
sbb
adc
ss
gs
xchg
jae
inc
jg
call
cmp
mov
sbb
adc
inc
or
sahf
jle
jae
mov
xchg
fs
lret
push
pop
mov
outsl
pusha
mov
jno
in
jmp
jmpw
ss
sbb
or
imul
pop
mov
sub
adc
push
push
in
mov
leave
push
aad
jecxz
cmp
xor
mov
mov
mov
int3
out
fs
mov
imul
xchg
in
xchg
jp
sbb
dec
je
je
mov
sar
jp
inc
jns
arpl
es
shrb
mov
nop
mov
dec
lea
and
fstpl
inc
shll
dec
mov
loopne
dec
stc
xchg
jae
pop
cmpsl
jno
xor
xlat
pop
loop
popa
sub
jnp
mov
ret
mov
call
push
in
std
scas
inc
jnp
stos
mov
push
sub
xor
adc
in
adc
jecxz
mov
lcall
mov
jl
mov
push
sub
mov
xchg
mov
push
imul
and
jbe
push
lea
or
arpl
adc
js
inc
aam
cmpsb
lock
fwait
or
sub
jg
add
or
enter
and
imul
in
repnz
jmp
push
and
aas
test
mov
aaa
cmpsl
divl
adc
pop
int3
cmc
dec
repnz
shr
xorl
inc
sti
push
mov
loope
and
mov
rorb
or
pop
push
decb
or
push
leave
popa
mov
jge
cmp
push
stc
mov
je
sbb
adc
orb
out
xchg
lea
add
in
mov
pop
push
and
mov
or
popa
outsb
lea
movsb
mov
test
popf
pop
jo
adc
std
icebp
cs
and
jp
sub
leave
and
cmc
cmp
daa
xor
sbb
add
add
aas
push
cmp
mov
data16
ss
movsl
sbb
jecxz
lahf
push
iret
dec
push
mul
daa
jmp
sub
inc
mov
cwtl
inc
stos
push
mov
sbb
pop
out
mov
or
stos
inc
lods
add
jg
pop
adc
mov
repz
xor
popf
fcomp
inc
jb
xchg
cmp
push
lcall
pop
pop
xchg
mov
and
mov
jle
pop
xchg
push
jl
in
fimuls
push
adc
fidivrs
lret
jne
mov
mov
nop
xchg
or
leave
sbb
mov
lods
push
in
shll
jo
loope
inc
sub
push
cmp
mov
popa
xchg
cmc
icebp
movsl
dec
insl
lods
mov
mov
fbld
adc
lods
gs
cs
stc
ja
cmp
ja
jg
fadd
inc
xchg
sbb
ret
loope
arpl
rep
clc
fisttpll
lods
push
cmpsl
ss
insb
fadd
xor
test
loopne
test
insb
sbb
popf
cwtl
jg
push
test
test
xlat
mov
mov
push
fcmovnbe
xchg
test
pop
test
cli
push
add
sbb
add
jecxz
push
insb
ret
sub
dec
pusha
xchg
sbb
push
fstpt
shlb
push
mov
in
outsl
mov
mov
andl
mov
ret
pop
aam
insb
bound
in
outsb
xchg
lock
roll
mov
pop
rcrl
ss
cmpsb
cmpsb
mov
jns
xor
jb
mov
data16
cmp
adc
imul
and
mov
and
pusha
sbb
mov
rorl
sbb
dec
and
aam
mov
pop
jae
and
adc
lock
loop
lea
push
test
push
clc
mov
push
inc
ja
into
cmpsb
pushf
insl
dec
mov
cld
leave
popa
jae
loopne
cmpxchg
iret
fistpl
jecxz
jnp
cs
or
xchg
pop
xchg
xlat
js
adc
out
inc
pop
xor
sub
mov
addr16
add
xlat
mov
sub
mov
es
xlat
cmp
shl
push
and
xchg
and
pop
jmp
mov
jnp
xchg
loopne
sahf
and
clc
push
jo
mov
insb
xlat
popf
repz
loop
adc
inc
mov
inc
stos
pop
inc
or
addr16
xor
push
test
out
rcll
enter
test
dec
outsb
ficompl
cltd
ss
addr16
ja
xchg
cltd
insb
data16
add
fdivrs
les
push
xchg
je
mov
pop
or
pop
rcrb
mov
neg
lret
inc
push
jnp
cli
jecxz
and
outsb
test
mov
cmp
call
shlb
gs
cmp
ljmp
iret
adc
push
jo
mov
psubq
shrl
pop
jne
lahf
out
cmp
inc
sub
or
aaa
je
std
frstor
inc
out
cltd
in
fwait
sub
int
xchg
aam
fimuls
in
sub
push
mov
jge
std
xor
jmp
jne
loope
adc
sub
push
sbb
xchg
ljmp
xchg
xlat
sti
xorb
icebp
sub
and
push
imul
jo
sbb
out
int
pop
mov
jmp
call
test
in
mov
dec
inc
mov
or
je
cmp
int
sub
dec
dec
add
sbb
mov
bound
out
out
pop
les
add
mov
inc
int3
scas
cltd
data16
aas
es
outsl
and
lcall
lretw
shr
fdivs
cltd
pushf
dec
sub
test
cmp
repnz
icebp
dec
xchg
mov
or
bound
or
test
mov
pop
push
dec
scas
mov
push
dec
nop
cwtl
or
and
rclb
jl
ljmp
test
dec
push
pop
or
mov
add
jns
test
mov
lock
std
xor
in
addr16
int
push
js
mov
fists
mov
jo
int3
inc
sub
test
in
sbb
call
xchg
adc
xchg
xor
gs
xchg
cmp
pop
jp
adc
loope
outsl
mov
add
add
sub
lods
in
dec
mull
mov
inc
loope
inc
push
shr
xor
jb
cmp
lods
cltd
js
leave
and
loope
xchg
aad
cmp
movsl
mov
cmp
cmc
adc
out
inc
or
sahf
mov
call
out
mov
and
cmp
xor
lea
jp
mov
mov
cmp
pop
lds
mov
cmp
xchg
cli
in
pop
push
push
sbb
push
xchg
mov
test
lcall
sbb
lret
loope
imul
pop
das
xor
add
ja
jne
ja
jnp
add
sub
push
pop
and
popa
pop
xlat
push
and
push
add
ja
mov
cmp
stos
lds
jmp
movsb
mov
addr16
dec
mov
in
orl
pushf
mov
pop
arpl
mov
jp
push
mov
lea
push
dec
push
addr16
jb
xor
push
outsb
and
inc
lods
adc
jns
sahf
xchg
insb
iret
and
outsb
aaa
ret
lea
ucomiss
ret
and
fsubrl
mov
aas
and
movsl
inc
dec
orl
pop
arpl
pushf
cmp
hlt
cmpsl
out
hlt
mov
fistpl
or
xor
cmpb
and
sbbl
hlt
inc
gs
xchg
cld
das
pusha
jbe
aas
je
scas
mov
push
jo
lahf
out
inc
inc
xor
cmc
test
adc
ja
adcl
jp
mull
or
pop
dec
sbb
adc
leave
pop
and
sub
mov
xchg
and
out
out
dec
adc
dec
pop
or
xchg
out
lods
enter
rcrl
adc
mov
adc
cli
cs
test
xchg
pop
mov
pop
jb
cmc
int3
pushf
cs
imul
sarb
sbbl
xchg
adc
addr16
aas
mov
or
stc
push
sbbl
adc
dec
jmp
pop
out
stos
lret
jns
test
cmp
pop
lret
adc
sahf
es
fdivrl
jo
push
sub
and
xchg
mov
add
sti
jb
push
adc
popf
sub
pop
ret
sub
dec
jns
mov
ret
jno
imul
mov
dec
insl
push
add
jne
mov
or
mov
cmp
outsl
movsb
in
inc
hlt
sbb
addr16
movsb
out
sbb
pushf
sbb
xor
fucom
xor
mov
ficoml
dec
jne
mov
inc
scas
call
pop
test
loopne
xchg
test
flds
outsl
dec
pop
test
subl
adc
or
andl
and
insb
push
popf
fimuls
loope
add
ror
jno
lcall
outsb
push
cmpsb
shrb
xor
pushf
jge
pop
int
xchg
stos
push
rcr
mov
push
js
pop
cld
mov
push
and
stc
mov
dec
enter
cld
in
and
jne
mov
cmpsb
pop
adc
jno
fwait
repnz
jns
sub
and
jecxz
push
adc
popf
ljmp
call
fwait
leave
imulb
fists
ret
adc
adc
sbb
lcall
sub
outsl
dec
mov
ret
mov
es
test
clc
sbbb
cmpsb
insl
imul
rorb
or
adc
arpl
and
fbld
adc
int
int3
ret
test
popf
jno
fcompl
icebp
xor
rol
add
mov
or
xchg
and
adc
into
xchg
adc
sahf
xor
insb
aas
int
iret
aaa
in
js
jns
mov
sbb
push
xchg
or
ss
movsb
es
xor
je
fsubl
xor
mov
mov
sub
repnz
add
leave
lahf
ret
rcll
sub
mov
fldcw
scas
dec
inc
push
in
push
pop
mov
push
pop
adc
mov
jmp
sub
in
clc
and
pmulhw
jb
int3
out
imul
adc
andb
jp
push
jl
mov
sub
and
in
xor
out
mov
out
jmp
pushf
inc
mov
dec
push
cmc
mov
daa
mov
lock
pop
ds
mov
mov
dec
and
push
add
daa
mov
pusha
sub
pop
jae
shll
cmp
jno
test
cmp
lret
or
or
xor
movsl
aas
fistpl
add
rclb
sub
xor
pop
outsl
rcrl
sbb
lahf
or
or
cwtl
data16
ja
push
hlt
rolb
icebp
jle
aad
mov
sbb
cmp
and
cmp
sub
shlb
jb
lcall
cmpsl
fsubrl
pusha
cs
cmc
hlt
sub
aaa
icebp
loop
in
mov
add
add
inc
daa
push
adc
mov
std
and
fs
inc
dec
scas
mov
adc
ss
mov
xor
lods
stc
mov
out
jmp
int
dec
insb
addb
rolb
repnz
mov
adc
movsb
ljmp
icebp
inc
outsl
movb
dec
and
push
sbb
cmp
mov
mov
mov
nop
out
hlt
sub
sub
out
arpl
mov
out
push
dec
xchg
jle
xor
dec
cmp
jns
ja
pop
call
fmull
shll
mov
addr16
clc
mov
jne
and
jge
mov
adc
mov
push
es
mov
insl
sbb
cmp
mov
sub
mov
outsl
cmp
fs
outsl
pop
push
gs
push
xor
gs
and
xchg
sbb
in
fcmovnbe
adc
ljmp
cmp
daa
inc
push
fmuls
aaa
mov
pusha
push
mov
xchg
dec
dec
pop
jb
stc
cmp
rcrl
mov
mov
push
push
sub
mov
inc
jge
push
lcall
js
cmpsl
dec
lods
cmpsb
mov
arpl
dec
jnp
outsb
enter
sub
sbb
cmpxchg
or
jb
dec
cmp
iret
lods
pop
mov
mov
ret
aam
jb
add
xchg
addb
outsl
popl
adcb
sbb
flds
bound
iret
jl
or
dec
cmp
repz
cmp
sub
or
test
ret
jne
movsl
out
fwait
shrw
insl
mov
movsb
mov
jmp
hlt
xchg
in
jecxz
or
ds
data16
rolb
leave
sbb
scas
fisubl
inc
mov
les
js
inc
mov
shll
jne
or
cmpsb
jmp
mov
cmc
xor
test
pop
pop
fnstenv
cmp
jae
pop
mov
cmp
movsl
aaa
or
jno
pop
mov
ss
push
pop
fsts
cld
dec
lods
push
cmpb
or
lcall
and
add
gs
imul
sub
inc
data16
stos
jmp
mov
aas
push
arpl
xchg
lock
xchg
xor
inc
xchg
push
call
mov
shrd
lea
js
adc
pop
out
mov
pusha
jns
mov
dec
xor
testb
adc
pusha
dec
jmp
lock
adc
cmc
dec
lahf
inc
lods
add
dec
pop
sub
jno
popf
test
js
add
add
sarl
inc
mov
mov
imul
or
call
xchg
mov
cmp
and
cltd
cltd
repz
int
pop
dec
imulb
test
sbb
sti
test
insb
test
int3
cmpsb
into
fnstcw
lock
jg
mov
mov
cwtl
imul
adc
fcom
pop
test
das
pop
out
mov
testl
cmp
cmp
xor
std
jnp
test
std
insl
xchg
fisttps
jb
or
je
scas
ficoms
fisubs
sbb
ror
cmp
bound
roll
cmp
add
push
pop
sub
gs
ds
and
std
hlt
sub
xchg
add
cmpsb
or
scas
jnp
mov
sub
pop
xor
add
jbe
out
dec
xchg
fstpl
int
fs
adc
lret
loope
mov
cmp
rcll
xchg
les
int
pop
popf
icebp
shll
inc
gs
data16
pop
jmp
cmpsl
sub
xchg
jno
sahf
push
aam
bound
out
xlat
adc
mov
inc
filds
out
iret
xor
mov
adc
or
idivl
sbb
and
aaa
mov
fwait
repz
push
insb
jmp
ss
xor
cmp
lock
adc
repnz
rolb
mov
testl
pusha
lock
pop
sbb
jnp
cmp
aas
xchg
xchg
fisubrl
xor
aas
add
dec
pushf
pop
leave
andl
fmuls
sbb
and
mov
sbb
mov
shl
jb
xor
std
mov
or
ffree
inc
ss
adc
add
xchg
in
sahf
mov
cmp
xorl
lds
pop
lods
out
cmp
js
xchg
mov
ss
fwait
xorb
rcrl
cmc
cmp
jo
les
fistpl
push
pop
mov
xchg
mov
lods
ret
enter
lahf
negb
fdivrl
incb
je
lcall
in
mov
add
dec
mov
cs
mov
mov
and
je
mov
dec
sub
shlb
push
adc
aaa
sar
lret
fs
mov
xchg
cwtl
or
aam
aad
jne
out
push
adc
ja
push
mov
jne
add
add
add
push
fwait
xchg
adc
push
and
mov
xchg
cmp
dec
mov
xchg
mov
or
jb
out
fstp
cmpsl
enter
test
out
xchg
sub
jno
pushf
mov
enter
cli
mov
mov
sbb
movsl
inc
daa
mov
mov
pop
sbb
inc
fs
bound
dec
out
mov
cwtl
inc
hlt
sub
mov
lret
xor
adc
mov
repnz
jnp
jbe
scas
inc
in
push
add
push
mov
push
scas
cmpsb
jns
jo
repnz
loopne
pushl
dec
stos
dec
mov
out
mov
pop
mov
mov
xchg
pop
pop
ljmp
pop
fldcw
jl
xor
out
sub
inc
scas
fxch
roll
movsl
mov
inc
jo
dec
cwtl
sub
outsb
mov
in
in
ss
lcall
push
outsb
or
lret
add
cld
scas
aad
mov
hlt
js
pop
mov
notb
psllw
jg
push
jbe
jmp
in
idivb
pop
jge
add
popl
fwait
pop
mov
jl
jmp
xchg
int3
sub
mov
cmc
sbb
lret
mov
enter
pop
cmp
outsb
clc
add
xor
and
roll
aas
push
pop
push
dec
out
sbb
cmp
popf
xor
pop
test
inc
mov
bound
in
test
mov
pop
jnp
jno
loop
std
pop
pop
leave
mov
cmpl
test
mov
pop
add
mov
aaa
push
xor
dec
testl
inc
sbb
ds
sbb
mov
sahf
stc
add
out
and
add
mov
sub
xchg
or
aas
add
or
popa
mov
inc
or
push
cmpsl
pop
pop
jp
mov
imul
stos
call
add
mov
adcl
inc
adc
roll
sbb
rolb
cmp
test
xchg
sub
in
sub
imul
nop
xchg
push
or
sbb
fidivrs
loop
push
inc
js
outsl
out
cmpsl
daa
inc
and
out
pop
fmull
lcall
jbe
repz
ljmp
cmpl
lds
mov
jecxz
in
mov
xlat
pop
and
jle
xchg
or
add
adc
fdivr
pop
pusha
ljmp
xchg
inc
fsubrl
out
push
sbb
in
mov
push
gs
psrld
push
sub
jl
lods
pop
aad
mov
fnstenv
cld
lods
jno
sub
sub
sub
loop
and
in
lahf
cli
pusha
sbb
jecxz
push
cmp
std
sti
enter
and
jne
ds
pusha
adc
jge
xchg
scas
enter
jo
pop
push
mov
scas
cmp
add
imul
pop
mov
stos
or
dec
inc
xor
mov
mov
cli
mov
in
push
sub
push
add
adc
mov
cwtl
out
push
push
cmpsb
sbb
pop
das
aaa
sub
je
xchg
sti
lret
in
and
sbb
clc
inc
ss
mov
cmp
test
lea
movsl
into
es
fs
fidivrl
mov
dec
pop
out
rclb
push
jg
std
sub
leave
dec
es
fstps
hlt
test
rorb
push
sbb
mov
inc
das
insb
popa
sbbb
int
mov
mov
xor
or
pop
sub
test
sar
pop
scas
cmp
popf
sbbb
add
push
dec
pusha
sbb
lahf
in
rcl
sub
mov
sbb
movsl
push
cwtl
push
fdivs
jb
mov
push
in
inc
cmp
in
cld
jne
xchg
lods
stc
inc
imulb
enter
jge
mov
adc
jb
stos
aas
and
and
pop
and
pop
das
in
stos
jnp
vmread
xchg
fwait
arpl
mov
shlb
notb
outsb
ret
mov
add
es
jg
popf
rorb
mov
and
jge
cmpb
push
adc
jl
push
test
call
mov
aas
or
and
sub
rorb
inc
xor
mov
flds
mov
add
sahf
sub
inc
push
ja
push
mov
push
aam
jbe
jbe
mov
mov
sbb
sbb
dec
add
fsub
cmp
fdivrl
xor
sbb
pusha
jnp
mov
popf
cmp
xchg
mov
dec
dec
jae
outsb
and
scas
jns
dec
into
xchg
sbb
sbb
cwtl
lret
sbb
mov
push
out
sub
out
jge
sub
sarl
xchg
cmp
jo
or
test
jmp
and
out
stos
bnd
testl
push
inc
sbb
cmc
dec
lcall
or
fdivr
xor
or
sub
mov
adc
mov
add
push
lods
lret
rcrb
fstpl
mov
fdivr
lods
mov
sti
add
sub
ja
sahf
adc
das
add
inc
cli
sbb
adc
mov
jp
hlt
or
rcl
xor
ljmp
push
sbb
movsb
jp
ljmp
inc
fnstsw
daa
in
lock
out
pop
idivl
or
push
hlt
test
sti
cwtl
outsb
aad
test
repz
dec
aam
aas
loope
xchg
cmpsl
leave
or
lods
cmp
mov
sbb
pop
dec
lods
addr16
mov
cmpsb
pop
test
pushf
sub
cmpsl
data16
pop
rorl
icebp
xchg
or
push
adc
mull
test
or
push
aas
add
std
test
or
jg
faddl
mov
dec
mov
fidivl
pop
sub
pop
in
or
jl
andl
inc
jge
mov
add
xchg
xor
cmp
add
outsl
fdivl
inc
fiadds
add
mov
ds
jecxz
xchg
lss
ror
push
xor
cmpsl
jmp
dec
inc
shll
icebp
rorl
xor
push
inc
xchg
xchg
push
outsb
shlb
insb
lds
jecxz
lret
lahf
sbb
inc
jecxz
popf
rcrl
cmp
push
push
sbb
inc
scas
movsb
call
jbe
push
mov
xlat
push
loopne
dec
push
pushf
arpl
pop
jne
in
push
xor
jl
stos
cmpb
sub
stc
jle
movsl
xchg
and
sbb
push
xor
pop
outsb
adc
and
bound
or
dec
xor
fnsave
adcl
lret
fimull
insl
xor
or
jmp
addr16
shr
pop
call
inc
loope
pop
loop
shrl
mov
sbb
inc
daa
dec
outsb
cmc
inc
xchg
mov
lret
adc
cmp
arpl
cld
push
xchg
mov
cli
mov
add
aam
shlb
jns
insb
decb
int
mov
jnp
out
out
popf
push
mov
inc
sbb
sbb
fmul
addr16
lds
jle
call
ret
fisubs
gs
les
jecxz
test
jb
mov
ficoms
xchg
sar
push
add
nop
sbb
imul
test
or
je
scas
push
jmp
add
mov
xchg
cmp
or
js
jmp
ss
in
fs
and
lods
pop
push
mov
arpl
fcmovnb
cmp
lret
lods
or
sub
loope
les
push
and
dec
repz
push
repz
popa
test
mov
les
mov
cmp
adc
call
jb
cwtl
icebp
decb
mov
mov
push
cwtl
fs
repz
es
cmpsl
mov
rcrl
xchg
xor
mov
fstps
fnstcw
out
pusha
push
nop
aam
inc
sbb
mov
or
push
xor
xor
dec
and
sti
or
das
or
inc
xor
xor
sbb
nop
mov
cmp
dec
push
inc
pop
call
mov
mov
scas
lahf
add
mov
arpl
cmp
add
loopne
and
dec
cmp
dec
cmpsl
adc
in
fwait
outsl
adc
mov
pop
push
movsb
sbb
inc
movsl
sbb
pop
movsb
jg
cs
mov
jp
ret
xchg
stos
lcall
cmp
cwtl
inc
pop
adc
inc
jge
jp
inc
gs
jg
add
loopne
and
mov
add
and
out
lds
dec
insl
mov
sub
push
or
movsl
inc
and
push
pop
sbb
ds
repnz
jmp
ss
ss
push
test
push
inc
icebp
pop
fmuls
and
xchg
adc
aam
test
out
push
mov
mov
dec
cmp
fisttpl
aas
sbb
cld
mov
mov
andl
scas
inc
lahf
mov
fmuls
sbb
push
sub
or
and
pop
lods
mov
dec
sbb
sti
shlb
cmp
or
std
mov
addr16
sub
adc
inc
adc
rorb
push
jo
fisubrs
out
int3
xchg
gs
xchg
enter
xor
mov
cmp
popl
mov
cwtl
adc
lret
lock
pop
fwait
xchg
pop
into
jmp
int
enter
js
icebp
into
std
push
hlt
aas
pop
rorl
ret
mov
xchg
shll
jo
xchg
into
mov
aas
jno
aas
cli
dec
inc
aaa
mov
adc
ss
push
sbb
es
ds
or
sbb
out
out
adc
ret
pop
fdiv
add
stc
and
sbb
pop
lret
lock
push
ret
xchg
jnp
ret
xchg
mov
adc
fsubr
jb
inc
and
adc
push
pmullw
mov
ret
pop
loop
and
or
jbe
dec
mov
sti
insb
fldlg2
mov
addl
inc
incb
dec
sahf
cmp
xor
icebp
add
fwait
push
pop
cmp
sbb
mov
jns
cmp
xchg
pushf
mov
iret
jp
subb
mov
mov
xchg
add
daa
data16
add
dec
sub
fildl
pusha
adc
dec
mov
push
add
cmpsb
adc
out
sub
pop
aaa
jg
or
dec
fldt
and
ret
sbb
pop
mov
dec
jne
mov
insb
adc
stos
mov
lods
mov
fst
jecxz
jmp
or
int
dec
mov
adcl
loopne
std
xchg
cli
adc
lea
xor
add
inc
in
adc
mov
xchg
adc
iret
push
xor
push
les
or
pop
or
insb
push
leave
aad
flds
jnp
popa
push
call
pop
push
sbb
and
push
clc
push
je
andl
es
mov
mov
and
fbstp
push
imul
aad
sub
cmc
mulb
cmp
rolb
sbbb
dec
insb
mov
sbb
out
shl
pop
repz
mov
scas
xor
adc
dec
sub
pushf
testb
push
test
jmp
mov
bound
in
pop
mov
jle
mov
xchg
mov
push
nop
out
aaa
lret
pop
adc
jle
fsqrt
popa
pop
inc
mov
aad
cmp
adc
jmp
ret
sub
push
loope
cmp
pop
out
push
xor
mov
arpl
lds
xor
inc
repz
scas
mov
imul
das
in
add
insb
ret
jns
imul
test
xchg
adc
push
movsl
xor
push
jl
stos
jbe
hlt
mov
fdivl
sbb
push
fwait
in
mov
push
int
int
mov
cld
std
jne,pt
movsl
pop
stos
lea
mov
sahf
mov
shlb
insb
mov
dec
mov
repnz
cmpsl
loop
or
loopne
aas
pop
xor
mov
push
sarb
xor
mov
xchg
jb
pop
mov
xchg
adc
bound
mov
mov
in
pop
aam
nop
add
cld
sbb
mov
aad
call
mov
out
sbb
stc
xchg
pushf
xchg
imul
stos
cwtl
dec
pusha
dec
or
sahf
nop
xor
add
jmp
jns
sub
add
shrb
stos
add
mov
out
rcr
pusha
or
mov
adcb
push
and
pop
sarb
clc
popa
sbb
adc
data16
sub
add
inc
rolb
cmpsb
adc
inc
scas
roll
inc
pop
sub
sbb
dec
lds
das
mov
in
sub
add
mov
cs
fcomps
gs
mov
mov
lret
fcmovnbe
sbb
nop
and
mov
scas
mov
shll
in
jle
xor
cmp
add
imul
dec
dec
push
daa
scas
testl
sti
jmp
cmpsb
test
bound
add
addr16
ret
mov
mov
adc
adc
insb
mov
push
adc
popf
in
adc
lret
cmp
fsubrl
push
push
sub
stos
adc
and
pusha
aas
in
int
push
xchg
push
add
add
jmp
cmpsb
add
imull
pop
fmul
js
out
sub
sub
xchg
mov
and
loope
mov
ja
mov
pop
fldenv
push
fnstsw
nop
and
pop
int
pop
jbe
ret
pop
loop
jecxz
pop
lcall
mov
and
lods
mov
stos
pop
aaa
mov
push
dec
cld
test
mov
jbe,pn
or
pop
jmp
movsb
jne
push
ss
mov
sahf
in
mov
xor
loope
push
mov
jge
dec
in
mov
jnp
test
roll
addb
sbb
pusha
jg
jp
es
in
mov
pop
orb
cmp
call
jg
clc
jmp
add
cmp
test
out
sub
jno
insb
ss
mov
push
mov
dec
sub
pop
jo
shll
nopl
faddp
pusha
sbb
mov
lods
jnp
dec
pop
pop
cmc
xchg
lret
mov
pusha
icebp
xchg
dec
nop
insl
mov
cmp
mov
hlt
add
cmp
or
push
je
push
mov
or
jl
dec
adc
pop
adc
xor
xchg
daa
mov
sbb
aad
sub
mov
popa
addr16
inc
sub
mov
mov
mov
add
ficoms
pop
leave
add
push
or
pop
pop
sub
ds
xchg
dec
subb
or
mov
sbb
aaa
incb
add
popa
call
in
es
lods
pop
les
inc
outsb
movsb
mul
cmp
adc
insl
jae
enter
sbb
inc
jae
cs
pop
cltd
sbbl
ficomps
xchg
xchg
arpl
nop
mov
lock
and
std
and
sbb
mov
fwait
lcall
dec
loopne
lret
adc
lret
fstl
and
iret
add
scas
xchg
imul
jp
fbstp
and
mov
inc
sti
cmp
ja
lret
xor
and
xchg
sub
jg
cld
push
xchg
fbstp
lods
lcall
adc
mov
pop
push
dec
les
mov
push
dec
iret
cwtl
popf
mov
xlat
and
push
sbb
push
mov
in
popa
adc
push
nop
sbb
lea
xchg
inc
mov
dec
sub
or
jl
repnz
xlat
pop
js
mov
pop
and
mov
and
hlt
pusha
sub
sar
mov
dec
rcll
mov
mov
and
dec
out
fnstcw
ljmp
lret
lods
push
xor
inc
push
push
jne
push
hlt
fs
or
bound
aam
pop
out
ds
sbb
cli
scas
pop
dec
imul
mov
push
pop
divl
ffreep
pop
jge
xor
or
ja
loop
mov
lret
cmp
in
sbb
add
mov
in
sarb
into
xchg
testb
cmc
cmp
add
stc
pop
ljmp
add
lods
add
xchg
pusha
pop
sbb
add
adc
jo
pop
repz
push
and
or
xor
or
inc
dec
sbb
add
decl
outsb
mov
outsl
clc
int3
std
jmp
mov
sbb
dec
stc
pop
ss
xchg
roll
push
push
jns
and
cld
mov
sub
mov
out
sub
sbb
test
mov
adc
jns
jno
jno
cmp
fs
mov
dec
enter
popf
lahf
test
fistl
daa
mov
lock
inc
mov
icebp
out
sub
leave
mov
shll
insl
cmp
pop
mov
into
mov
fucomip
test
stc
sub
fnstsw
xchg
icebp
cli
fcoms
in
shrb
xor
or
xchg
push
mov
shll
stos
xchg
call
sub
arpl
mov
ret
iret
jge
pop
inc
sub
in
mov
inc
cmpsl
jnp
cld
pop
mov
aaa
jae
inc
pop
jbe
nop
setb
es
outsl
das
or
fcompl
adc
xor
add
jmp
inc
dec
push
fldl
sbb
mov
push
repnz
mov
stos
dec
insb
and
rolb
mov
fiadds
std
mov
pushl
stc
fistpll
fcomip
push
cmpsb
pusha
jmp
inc
call
std
jnp
mov
sub
scas
push
jle
cli
inc
notb
enter
jmp
hlt
xor
testb
add
xor
sbb
sbb
pop
cwtl
mov
mov
mov
outsl
sti
movsl
mov
lods
and
cltd
lds
cmp
lcall
in
bound
push
xchg
out
adc
test
shl
mov
dec
inc
inc
cs
xchg
fs
inc
fstps
mov
add
inc
push
sub
lea
test
dec
cs
out
mov
cltd
into
fmull
dec
lret
jmp
fwait
into
sub
mov
iret
sbb
aaa
leave
subb
and
pop
insb
scas
hlt
xor
bound
mov
push
js
pop
or
cltd
addr16
adc
out
sahf
scas
pushf
xlat
push
cmp
ljmp
push
push
add
mov
mul
push
jg
dec
int3
mov
add
rcrl
lret
pop
cmp
mov
and
push
add
adc
ret
cmp
adc
mov
sub
daa
xor
mov
inc
ljmp
and
xor
aas
mov
xor
cmpsl
and
mov
cmp
sahf
imul
dec
out
or
xchg
push
mov
mov
push
cmp
jno
mov
leave
sbbb
stc
aaa
lea
sbb
outsl
out
dec
in
je
jecxz
mov
lea
push
jo
push
mov
mov
lret
pop
jbe
jmp
pop
push
push
test
xor
sahf
lds
pop
adcl
repnz
mov
imul
pop
xchg
mov
int3
dec
enter
jge
adcb
loop
arpl
xor
or
ds
lea
lods
mov
xchg
or
fildl
jle
sub
inc
sub
pop
insl
lock
and
cmp
cwtl
rol
mov
loopne
std
and
mov
les
adc
mov
mov
mov
push
jnp
movsb
jae
xchg
aas
loope
push
daa
shlb
or
jne
mov
and
leave
adc
mov
sarl
add
pop
push
movsl
in
das
ljmp
jnp
or
dec
lcall
xor
xor
mov
int3
fsubs
mov
mov
add
mov
stos
jbe
push
pushw
add
call
add
rolb
mov
rorl
mov
test
xchg
push
push
imul
adc
cmp
sbb
mov
jnp
repz
cmpsb
cmp
jg
shld
dec
pushf
lds
cmp
stc
aam
or
mov
push
aad
movsb
jns
repz
ficomps
inc
push
addr16
psubusw
mov
fucomip
cmp
repnz
notl
ja
pop
dec
ret
roll
popf
icebp
prefetch
or
sbbl
or
ret
xor
stos
test
xchg
out
add
push
sub
ret
imul
scas
hlt
notb
inc
inc
subb
mov
mov
push
das
popa
repnz
mov
xlat
push
int3
sbb
into
out
sub
cmp
aaa
test
cmp
ja
clc
movsl
imul
pop
mov
push
cltd
push
lea
xchg
sbbl
push
and
sbb
dec
daa
mov
adc
nop
bound
push
cs
popf
in
sbb
inc
push
sub
push
push
inc
and
sahf
sbb
xchg
in
andb
lea
xor
xchg
mov
dec
cmp
xchg
and
lea
mov
in
hlt
js
xchg
bnd
loopne
stos
pop
xchg
mov
inc
xor
or
in
add
xchg
test
loope
push
aas
or
cmp
sahf
aaa
arpl
sub
pop
dec
in
dec
mov
cmp
cmp
sub
data16
or
movsb
jmp
scas
daa
add
insb
loope
shrl
xor
pusha
arpl
adc
fs
insb
sbb
imul
lcall
dec
mov
cmp
stos
int3
mov
das
fs
pop
notl
push
pushf
aas
xchg
pop
pop
xor
adc
cld
push
push
adc
push
ror
pop
inc
dec
sarb
dec
leave
pop
xchg
int
lods
cmp
sub
mov
in
jmp
lret
sbb
ret
imul
add
sub
and
ret
mov
insl
mov
jo
into
mov
lahf
mov
lahf
add
jb
ret
mov
sub
in
clc
xchg
shll
jmp
add
popf
ror
iret
dec
jno
in
stos
aaa
insb
shlb
repnz
negl
add
and
mov
xorl
cli
sbb
sbb
testl
mov
pop
gs
sub
push
iret
test
mov
dec
dec
mov
ja
push
insl
dec
hlt
jp
sub
in
addb
popf
cltd
push
pop
adc
cmpsb
pop
xchg
cmpsb
mov
aaa
clc
xor
or
imul
pop
in
jle
dec
subb
or
cmp
fsubrl
push
outsl
out
shrl
mov
loope
inc
or
stc
push
push
divl
pop
ficompl
out
mov
je
pop
inc
cli
add
pop
dec
jns
mov
iret
inc
add
jge
sti
sbb
mov
xchg
divb
or
xchg
mov
sub
adc
cmp
xchg
movsl
adc
jno
mov
mov
fadd
lea
repnz
dec
cmp
fnstcw
push
clc
sub
mov
fldcw
mov
mov
out
lret
int
in
nop
and
cmp
dec
cmc
data16
inc
push
lret
arpl
mov
imulb
mov
sti
leave
adc
stos
inc
ret
mov
cmp
mov
or
filds
shl
sub
mov
push
jnp
and
arpl
sub
scas
mov
aam
daa
ret
icebp
inc
sarb
pop
add
dec
imul
mov
cmpsl
dec
aas
daa
scas
lcall
cmp
and
and
in
push
push
shrb
jbe
inc
out
push
cmpsl
dec
sahf
loop
mov
mov
jne
mov
imul
mov
inc
cs
xchg
adc
js
xchg
mov
lods
call
int3
aam
cli
repz
insl
push
jl
cmp
sbb
pushf
adc
fcmovne
pop
and
mov
mov
push
fstps
dec
stos
js
cmpsb
nop
scas
add
sub
bound
pop
xlat
cwtl
xor
inc
cwtl
lock
stos
bound
mov
xchg
and
lret
test
cwtl
sub
jle
add
xchg
jmp
xchg
jge
and
addr16
cmp
jae
cmp
testl
imul
pop
xchg
into
cli
sahf
fistpll
out
pop
cltd
rcll
fwait
mov
loope
imul
lock
mov
mov
xor
repz
cmp
sub
xor
or
cmp
les
gs
xchg
imul
pop
sbb
and
add
cmp
jmp
sbbb
xor
jmp
jecxz
aam
in
pop
or
pop
adcb
mov
es
xor
jl
mov
out
mov
mov
adc
cmp
int
mov
pop
sbb
sti
cmp
adc
push
xchg
xor
inc
jno
sbb
jp
fsubrp
mov
fbld
mov
push
in
mov
push
stc
test
xchg
stc
inc
mov
or
bnd
cs
in
dec
jge
mov
cld
adc
xchg
sbb
aas
fisubl
push
and
mov
or
hlt
mov
test
lcall
imul
imul
out
pusha
mov
js
imul
cmp
outsb
pop
dec
roll
out
test
mov
mov
fs
mov
adc
add
add
mov
test
add
jne
movsl
es
and
pop
popa
adc
ret
scas
xor
pushf
in
and
pop
push
pop
cli
ds
and
cmpsl
popf
mov
test
dec
test
and
push
inc
mov
xchg
lods
jmp
cmp
cmpsl
sahf
pop
push
les
pop
pop
xor
inc
cltd
andl
or
mov
sbb
out
xchg
repz
stos
ljmp
pop
cmp
or
fwait
gs
xor
aad
jecxz
adc
sbb
outsb
ds
inc
popf
sub
outsb
mov
insl
inc
lock
add
out
lods
arpl
push
inc
movsl
pop
pushf
add
pop
mov
out
lret
mov
sub
pop
mov
aad
rcll
call
aam
push
ret
jmp
mulb
cld
sub
dec
mov
data16
leave
fs
cltd
jmp
pop
add
and
dec
push
push
outsl
xor
dec
jbe
xchg
mov
adc
ret
jne
sbbb
xchg
sbb
roll
inc
hlt
mov
lahf
lret
lret
inc
stos
and
xor
out
dec
and
push
andl
sub
adc
lea
sub
push
lahf
and
test
dec
into
and
int
int3
pop
pop
scas
idivl
push
mov
add
or
arpl
xor
lahf
std
scas
fdivrl
insl
jbe
add
inc
clc
sbb
jp
mov
ss
adc
nop
inc
push
inc
dec
mov
inc
cs
xchg
mov
into
sahf
inc
xchg
test
mov
sbb
mov
jno
push
cmp
or
mov
out
pop
dec
lret
aad
mov
cmpsl
xchg
loop
push
ficomps
adcb
sbb
arpl
std
push
jecxz
push
test
xcrypt-ofb
cmpsl
stos
sub
addl
adc
mov
dec
sbb
bound
ret
out
sub
push
test
cmp
into
mov
lods
mov
pop
and
inc
andb
push
popa
imul
insl
inc
jle
cwtl
imul
rcr
mov
mov
inc
jmp
mov
and
xchg
in
jb
inc
sti
sarl
les
enter
inc
and
pop
pop
dec
movsb
ljmp
aas
in
clc
sbb
mov
dec
je
pop
xor
sub
jle
jne
adc
sbb
sahf
mov
vpaddusb
pop
mov
and
pop
pop
xchg
mov
insl
mov
push
movhps
into
pop
lea
nop
pop
decl
jno
push
adc
mov
sub
pop
rcrl
fdivrl
fdivs
rcl
mov
les
sub
or
sub
inc
mov
cld
cwtl
mov
mov
mov
je
int
sbb
add
movsl
push
fwait
insl
pop
sub
dec
fsincos
add
in
dec
mov
test
cmpsl
shrl
ss
ret
bound
xchg
adc
push
cmpsl
movsb
call
into
lahf
mov
jo
stos
int3
cmp
addl
adc
test
testl
jnp
sbb
mov
and
bound
rcll
cs
mov
add
cmp
mov
mov
push
inc
push
dec
stos
iret
push
mov
xchg
push
lahf
test
xchg
pop
cwtl
addr16
push
adc
out
mov
sub
enter
mov
rcrl
in
inc
pop
test
cmpsb
rorb
pop
mov
jmp
imul
jg
jp
push
push
lock
test
cmp
add
js
iret
inc
push
mov
xor
adc
xlat
lds
stc
outsb
cmp
mov
xchg
mov
mov
add
or
mov
shr
pop
outsb
xchg
aaa
aaa
or
push
sbb
push
mov
mov
fistpl
rep
jmp
inc
ja
fldt
push
lods
inc
push
sbb
in
fucomp
out
inc
out
addr16
mov
int3
or
and
add
popa
cmpsl
ljmp
int
dec
push
or
loop
test
and
data16
pop
xchg
push
jae
mov
cmp
add
lret
inc
pop
xchg
and
push
cmpsb
adc
shl
int3
xlat
outsb
inc
push
push
lcall
dec
mov
xchg
fmul
imul
fmull
cli
sbb
hlt
push
nop
ret
sarl
stos
ss
das
loope
stc
cwtl
cmp
push
cmp
movsl
and
fistpll
repz
mov
push
dec
frstor
push
xchg
daa
or
xchg
jb
hlt
cmp
add
sarb
lahf
xchg
xchg
push
pop
xchg
or
mov
fnop
out
mov
imul
in
mov
inc
and
xor
push
cltd
dec
arpl
push
and
out
lea
ds
inc
leave
inc
js
mov
xor
xorl
cmpsb
mov
imul
fucomi
xor
dec
pop
jbe
jl
push
jge
mov
mov
shrl
insb
push
mov
out
add
pop
das
cwtl
rcrl
loopne
xchg
cmpsb
fldl2e
enter
stos
cwtl
sub
mov
push
mov
mov
int
mov
cmp
xor
xchg
xchg
adc
cmp
jg
add
mov
test
jo
jg
imul
sbb
clc
xchg
xchg
mov
jb
je
adc
pushf
jno
insl
sub
lcall
sbb
fnsave
aaa
and
sti
in
sub
ficoml
inc
fimull
leave
inc
cmp
test
xchg
cmp
pop
hlt
push
scas
push
pop
mov
out
pop
mov
repnz
notl
ljmp
push
in
dec
sbb
xchg
mov
pop
dec
fsts
movsb
cmp
ret
xor
fidivl
jae
jl
aas
subl
test
xchg
rcrb
test
xor
ret
into
adc
mov
fisubl
push
xchg
in
dec
arpl
xchg
dec
orb
int
loope
cmpsb
or
jg
mov
rolb
xor
ret
lret
jae
je
inc
adc
sbb
cs
xor
test
cmpsl
push
bound
or
mov
pusha
mov
nop
mov
lds
dec
sahf
aam
sti
sub
pushf
inc
or
imul
jg
add
sub
jo
push
mov
and
jo
push
dec
cmp
popa
gs
inc
xor
xor
out
loope
mov
iret
mov
pop
orl
lcall
add
dec
repz
and
sub
into
clc
scas
sub
es
sbb
aam
pushf
out
imul
fsubrs
inc
nop
or
sub
pop
pop
inc
ret
mov
dec
pop
xor
test
mov
adc
xor
push
mov
or
inc
sub
push
add
xor
into
or
xor
mov
mov
test
loop
addr16
std
dec
scas
fsubrl
pop
jne
mov
int3
mov
fstl
mov
cmc
mov
push
push
mov
mov
out
or
mov
sub
push
rorl
pop
iret
add
mov
push
pusha
jmp
push
fwait
mov
mov
fldcw
pop
pop
cmpsb
sbb
jo
repnz
xor
into
fs
fistps
loop
mov
dec
dec
popf
in
loope
ljmp
data16
fbstp
out
imul
pop
lea
dec
jg
nop
push
pushf
mov
fstps
sti
jne
fcoms
outsl
jecxz
icebp
nop
mov
in
ss
aam
movsb
js
xchg
repnz
and
xor
sbb
sub
mov
adc
push
add
leave
or
dec
enter
addr16
cld
and
movsl
dec
out
pop
std
dec
aad
sub
out
popa
jnp
cltd
inc
sbb
fcoml
inc
les
jno
mov
inc
jl
inc
or
cmpsb
movsb
dec
dec
les
add
fld
inc
testb
jg
stc
or
sbb
xor
push
cmp
or
pop
rcl
jbe
pcmpgtw
adc
mov
pop
lret
pushf
mov
mov
jno
xchg
ljmp
aam
push
leave
cmpsb
cli
mov
ret
imul
sub
stc
daa
add
outsl
cmp
sahf
cs
jecxz
xor
insl
cwtl
mov
mov
xor
stos
cmp
orl
das
out
in
jmp
cmp
sbb
test
jecxz
sbb
mov
mov
scas
movsl
cmp
xor
ljmp
push
mov
gs
gs
in
test
scas
mov
sub
shll
pop
lahf
and
sbb
pop
pop
shll
mov
xor
shrd
sbb
sti
sub
dec
and
sbb
das
lret
inc
sbb
xor
jecxz
popa
mov
inc
mov
aad
push
adc
dec
lahf
test
or
sub
xorl
add
add
xchg
or
cltd
in
test
mov
nop
inc
fst
push
and
cmpb
and
dec
mov
jno
pop
push
cmp
cli
je
mov
sub
in
mov
cmpsb
cli
jecxz
push
loope
icebp
lds
out
sub
sbbb
ficoml
pop
xchg
js
rolb
xchg
js
lret
ds
sbb
icebp
loope
repnz
jl
js
push
aas
lock
dec
unpckhps
xchg
dec
push
std
sbb
push
cmp
cld
adc
mov
movsl
cmc
sete
push
pop
into
scas
xchg
mov
cmpsl
ljmp
dec
inc
mov
les
xchg
sub
das
add
mov
pop
or
sar
push
imul
xor
or
mov
adc
cmpsb
sbbl
popf
inc
and
jno
lea
aad
lods
repz
daa
dec
sahf
jno
jmp
insl
mov
jae
jp
scas
jecxz
jecxz
jp
xchg
inc
jns
fwait
das
fmuls
inc
sub
jge
sbb
ja
adc
pop
xchg
sub
xor
add
orl
mov
aad
loope
or
enter
andb
das
mov
pop
aam
xchg
push
test
push
jns
add
sbb
mov
inc
inc
push
add
or
mov
sub
movsl
jecxz
xchg
fsubrs
sbb
pusha
lods
push
je
arpl
push
out
xor
jecxz
bound
xchg
xchg
xchg
pop
lods
testb
aaa
cmp
lcall
daa
enter
inc
sub
repnz
lock
out
es
loope
out
hlt
pushf
xchg
cld
in
cmp
repnz
js
mov
pop
jae
add
in
push
mov
jmp
sbb
push
mov
xor
sbb
cmp
sub
and
das
pop
adcb
push
subl
call
sub
cmpsl
push
or
xchg
adc
pop
pop
lea
iret
adc
jae
test
adc
jbe
pop
loop
ret
and
mov
test
xchg
mov
inc
sbb
dec
fists
sub
outsl
lret
sbbb
clc
push
loopne
fwait
pop
mov
loop
ret
loopne
cli
add
or
jge
jno
bnd
push
icebp
push
mov
fs
int
ret
sahf
rorb
ja
shrb
stos
movsb
or
mov
imul
fldenv
lea
int
sub
les
sub
sub
psubd
cmp
and
nop
loop
sti
mov
test
das
sub
popa
jmp
xor
cltd
in
test
lock
cmpl
inc
push
pop
mov
jo
push
ss
xor
lods
pusha
movl
jle
pop
mov
mov
push
xlat
enter
lcall
data16
xchg
add
std
push
or
and
test
jmp
mov
push
das
movntps
fisubrs
sbb
stc
pusha
jmp
adc
mov
sub
add
not
fst
enter
imul
insl
sbb
imul
aaa
jmp
mov
add
fstpt
negl
lret
test
scas
cmpsl
mov
in
aam
lcall
call
pop
jo
mov
mov
lret
jg
imul
ficoms
call
adc
daa
xchg
pop
inc
stos
lods
xchg
push
imul
jb
pushf
ds
sub
jne
inc
push
aaa
adc
sbb
dec
movaps
jmp
xchg
popa
das
jle
inc
mov
stos
out
adc
push
sarl
popf
jo
fisubs
std
sbb
jne
add
add
mov
inc
and
sbb
fs
loopne
scas
xchg
mov
xchg
sbb
outsb
call
mov
xchg
leave
dec
adc
ds
mov
push
cld
pop
leave
sub
add
ljmp
sbb
mov
ds
jmp
imul
shll
ret
pop
lock
pop
mov
sbb
pop
xchg
inc
ja
inc
push
stc
pop
add
fisubrs
ja
sub
negl
sbb
bound
imul
xchg
jb
mov
jnp
cli
sbb
in
jg
sbb
ljmp
inc
pop
jl
pushw
cmpsb
push
mov
adc
add
cwtl
pop
lds
or
in
into
mov
add
xor
into
scas
pop
test
sbb
push
jno
xor
push
pop
mov
lret
and
sub
out
lcall
in
adc
mov
mov
mov
popf
test
pushf
imul
ljmp
ror
xor
jbe
fs
inc
ror
xchg
dec
sub
push
pop
daa
pop
mov
xchg
inc
cmc
push
icebp
xor
in
jle
push
cmp
cld
jno
jns
cmp
insl
ss
mov
out
and
xchg
hlt
mov
xor
xor
and
sbb
and
jae
jno
loope
add
repnz
sub
mov
adc
inc
xor
ret
clc
jnp
and
xchg
insl
or
push
fistpl
inc
sbb
adc
push
jnp
and
sub
or
mov
xor
push
in
dec
lahf
xchg
xchg
test
or
lret
push
mov
repz
sub
jno
push
ljmp
call
addr16
xlat
iret
test
stos
xchg
adc
mov
push
mov
and
mov
mov
push
ret
ret
mov
mov
mov
cmp
imul
jle
shlb
not
aam
jp
lods
or
pop
cmp
ja
outsb
push
dec
inc
inc
pop
sbb
test
sbb
stos
pop
jg
movb
mov
cmp
out
jbe
jle
je
mov
xor
lret
inc
mov
and
popa
ret
or
aas
push
outsl
es
mov
sbb
loopne
and
dec
push
nop
adc
inc
lahf
adc
mov
shrb
mov
sub
insl
ret
jnp
dec
mov
xor
cmp
insl
stos
nop
cmp
div
in
ret
mov
lods
xor
mov
sub
mov
and
gs
cwtl
mov
adc
push
xorl
adc
xor
shrb
je
stc
adc
sbb
pop
dec
ja
jl
aas
and
movsb
or
stos
sar
out
ljmp
xchg
imul
fcmovnb
cmpsb
xchg
and
scas
add
scas
in
shr
cli
cmpsb
jg
lods
jg
int
push
shrb
das
leave
xor
mov
cwtl
out
jne
mov
imul
lods
aaa
mulb
dec
xor
jge
and
ret
insb
filds
pop
cs
jae
dec
popf
jae
xorl
pop
dec
mov
pop
nop
ret
out
add
sbb
pusha
out
and
imul
sub
adc
iret
or
mov
into
jo
mov
cmc
hlt
mov
sub
out
test
inc
xorb
and
in
mov
mov
into
pop
test
and
lret
ds
sarl
shrl
fiadds
xchg
xchg
test
add
outsl
outsb
stos
mov
pop
push
lret
jg
cld
outsb
int
inc
les
in
popf
adc
and
orl
pop
in
inc
loopne
mov
jbe
push
mov
sub
enter
pop
fnstcw
clc
mov
mov
jno
adc
bound
es
stos
xlat
imul
bound
jno
loope
dec
out
xor
dec
clc
inc
mov
mov
insl
fwait
in
and
fdivr
clc
cwtl
pushf
sahf
cld
mov
mov
cmp
stos
rcll
in
cmp
rclb
mov
lahf
jo
inc
lds
inc
xor
pop
or
adc
sub
in
aaa
and
shll
and
ret
fdivrp
pop
leave
std
push
xchg
aas
and
cltd
pop
stos
cmpsl
xchg
mov
mov
cmc
push
mov
cmp
and
dec
xchg
pusha
ret
sub
add
popf
jb
ja
xor
xor
sti
xchg
push
aad
jbe
dec
jp
jg
sbb
ds
aad
pop
shlb
push
imul
aas
xorb
arpl
push
push
stos
jg
or
xor
out
jb
mov
and
idivl
int
out
ret
cwtl
sub
push
in
fidivrl
andb
xor
jp
mov
jp
int
push
sbb
dec
jnp
jmp
lds
sub
adc
call
jle
outsb
sahf
dec
jle
fdivp
inc
lea
ret
dec
jge
mov
imul
xlat
nop
sbb
movl
fcoms
fsubl
or
ljmp
jne
xchg
and
imul
ficoms
mov
inc
inc
mov
jbe
mov
xchg
clc
or
lock
fidivrs
adc
outsl
xor
sub
pop
lahf
shlb
add
mov
iret
in
inc
rcrl
scas
push
jecxz
loopne
sub
scas
int3
call
sub
ljmp
inc
insl
add
adc
leave
or
sbb
mull
jmp
xchg
icebp
gs
ja
mov
jge
fisttpl
call
mov
push
fucomi
push
mov
aas
pop
int
mov
lcall
fwait
or
cmp
mov
and
or
scas
shl
mov
cwtl
into
outsl
mov
aaa
add
lret
jae
js
jle
lods
hlt
mov
dec
aas
and
movb
cmp
push
dec
sub
hlt
push
adc
xchg
loopne
mov
inc
lcall
aam
cld
adc
push
cltd
sbb
addr16
subl
hlt
fsubrs
daa
or
xor
cmpl
out
mul
in
xchg
ljmp
lret
scas
je
xor
cmc
nop
xor
add
sbb
pop
jno
cmp
rcl
sub
mov
xchg
push
pop
arpl
jg
mov
or
outsl
fdivrl
icebp
sbb
testl
loopne
and
dec
lea
mov
adc
into
or
icebp
pop
pushf
push
cmp
lret
mov
xchg
pop
xchg
adc
or
pop
arpl
adc
push
xor
xlat
sub
push
js
push
sub
aaa
std
stc
pop
jb
into
movsb
in
mov
lahf
mov
addr16
mov
push
mov
inc
cld
cld
bound
or
stos
pop
cs
xlat
rolb
mov
or
jno
aas
dec
jecxz
das
sub
mov
adc
pop
cmp
decl
jns
add
sbb
adc
adc
push
inc
dec
inc
mov
test
xchg
testb
scas
push
sbb
into
pop
rorb
out
daa
xchg
out
jmp
xchg
cmp
xchg
or
jge
xchg
stos
cwtl
mov
je
arpl
test
loop
aaa
xchg
xchg
pusha
test
jbe
push
int3
fs
mov
lret
sbb
scas
jge
divl
mov
cs
jne
cld
test
push
pushf
nop
andb
out
call
hlt
sarl
mov
je
inc
popaw
icebp
jl
pop
push
sbb
divl
mov
mov
sub
in
lds
ss
pop
xchg
repz
xchg
mov
pop
imul
dec
pop
roll
into
push
jns
je
fwait
xchg
fdivp
sbb
sub
xchg
cmp
pop
cltd
adc
push
imul
dec
mov
inc
outsb
fbstp
mov
movsl
cmpsb
bound
pusha
sbb
mov
scas
movsb
xor
push
mov
stos
mov
sbb
insl
jle
decb
jns
inc
out
orl
jns
xor
lret
scas
aas
inc
and
cmpsl
fmull
pop
inc
enter
jmp
xchg
call
js
sbb
and
mov
jb
add
jle
mov
fwait
pop
dec
xor
mov
mov
xchg
lods
adcl
jae
xchg
add
dec
dec
or
sbb
ret
jae
or
cmpl
pop
pop
ret
insl
fisubl
out
jae
or
xor
scas
mull
push
cmp
pop
dec
dec
add
jnp
cli
int
outsb
ret
cmpsl
dec
adc
mov
jge
add
repnz
lret
sub
outsb
into
fimull
bound
mov
sti
rcl
stc
lock
stos
or
or
pop
and
sub
test
rorl
gs
jmp
dec
gs
je
jecxz
sbb
xor
insb
nop
sarl
pop
cmp
xor
mov
mov
inc
fs
xchg
mov
out
mov
mov
and
adc
sub
inc
push
pop
add
adcb
hlt
mov
ja
mov
dec
arpl
cmp
iret
inc
add
pop
pop
packuswb
ret
push
fidivrl
dec
cmp
movsl
cmpb
in
stos
bound
hlt
cmpb
mov
xchg
jbe
cmc
cmp
fldl
and
ss
lret
lea
inc
popa
push
sbb
sub
jmp
dec
popa
push
adcb
clc
gs
popa
or
js
sarl
jno
xor
inc
xor
movsb
inc
je
dec
shll
movsb
aad
mov
dec
fcmovb
lods
push
jg
cmp
addb
roll
mov
lods
test
mov
pop
shlb
sub
mov
push
push
sbb
cmp
shlb
and
mov
fdivrl
decb
jo
add
jmp
daa
push
aas
mov
lahf
data16
add
inc
jg
and
icebp
dec
and
jo
cltd
cmp
xor
adc
push
sbb
sub
fnstenv
rclb
ret
mov
xor
pusha
sarb
jae
or
xor
cmpsb
notl
cmpsb
cmp
mulb
mov
cmp
enter
test
jne
xor
cmp
ja
jp
aas
mov
jae
rcrb
xchg
test
cmp
dec
xchg
sub
fldcw
add
dec
xor
aaa
mov
loopne
sbbb
stos
jmp
rorb
xchg
fs
lock
xor
adc
inc
push
lea
lcall
hlt
ja
daa
cmp
xor
int3
int
sub
pop
fs
lahf
xchg
jo
cmp
testb
pop
lret
scas
loopne
pop
push
xchg
jmp
mov
enter
sbb
jge
jg
not
pop
mov
inc
fbld
or
jg
mov
xor
push
mov
adc
out
mov
pop
push
jno
add
mov
outsl
lods
int3
loopne
hlt
sbb
adc
mov
stc
cmp
push
mov
in
loopne
adc
les
ja
sarl
mov
negb
mov
dec
out
ds
cmp
jg
fdivrs
insb
psllw
enter
hlt
jmp
push
push
mov
loope
mov
inc
sbb
cltd
xchg
out
dec
gs
jb
add
roll
inc
and
cs
test
ror
shll
bound
loope
fld
ficomps
js
sbb
mov
subb
jge
sub
or
push
movsb
fdivs
andb
je
adc
push
bound
mov
inc
dec
push
xor
sbb
in
inc
lods
jecxz
cmc
jle
mov
or
mov
push
inc
cld
xlat
fisttpl
mov
dec
mov
ficoms
xchg
mov
mov
mov
out
or
mov
int3
sarb
loop
dec
pushf
jecxz
add
in
es
int3
out
dec
push
jns
xchg
mov
jne
and
cld
adc
mov
lret
rol
addb
stc
aaa
cli
cmpsb
pop
cmp
sub
inc
mov
scas
inc
lea
in
popa
add
rcrb
push
test
imul
mov
fcmovne
push
bnd
fmuls
ljmp
or
xchg
ret
mov
shl
push
mov
je
nop
je
mov
fwait
jb
jnp
dec
mov
out
mov
daa
push
daa
add
les
loopne
roll
and
jg
rcrl
mov
or
vmovups
mov
mov
mov
negl
repz
sahf
outsb
js
pop
sub
add
inc
orl
insl
push
mov
lea
shrl
in
cmp
cwtl
jo
int3
push
ja
pop
into
je
cli
and
inc
dec
push
push
jl
cmpsb
pop
xor
add
or
mov
pop
repnz
ret
jnp
lock
lock
inc
mov
test
push
and
and
jnp
rcl
popa
xchg
std
sub
jg
cmp
dec
inc
loop
xchg
pop
rclb
in
scas
push
cmc
and
add
sbb
cmpsb
mov
mov
lds
lods
and
adc
bound
cmovns
push
jo
arpl
mov
shlb
stc
arpl
lds
nop
repz
xor
jecxz
fdivl
out
or
lcall
repz
jmp
mov
test
push
repnz
cmp
sub
push
lods
rcr
and
insb
test
ret
mov
insl
and
sti
and
cli
sbb
xchg
insl
push
dec
mov
pusha
out
clc
sbb
inc
xchg
repz
aaa
push
andb
pop
xchg
pop
lods
xor
idivl
js
push
adc
shrl
mov
int3
call
loope
sub
sub
aam
addr16
mov
or
int3
scas
xor
in
ds
popf
popf
adc
loop
out
xor
sub
daa
inc
push
fs
mov
mov
fstpt
addl
lahf
movsl
ficoms
aad
fnsave
in
lock
gs
popa
dec
cmp
imul
pop
lock
adc
pop
mov
sub
repnz
jle
mov
push
pop
clc
icebp
push
pop
sbb
xor
out
lods
or
rol
outsl
mov
insb
ret
inc
rorb
fiadds
pop
mov
loopne
adc
outsl
dec
cs
jae
inc
xchg
shrl
sbb
test
mov
add
insb
inc
sub
mov
cmp
sbb
test
pop
test
ss
add
cmp
mov
jae
add
xchg
mov
cs
xchg
jo
xchg
mov
xchg
in
add
inc
hlt
fistpll
stos
jge
cmpsb
pop
adcb
popf
cld
inc
andb
sub
sub
or
pop
cmp
mov
jmp
or
pop
and
pop
stos
ljmp
call
xchg
push
or
outsb
push
push
add
jne
lods
shr
pushf
sahf
push
inc
test
stos
nop
das
ficoms
insb
xor
mov
add
outsb
sbb
jl
lds
mov
das
leave
xchg
jo
sahf
dec
xor
jne
movsl
fstps
mov
out
push
or
sarl
mov
sbb
mov
and
leave
js
insb
mov
mov
push
stos
jmp
scas
stc
test
in
jle
jl
and
and
or
nop
xchg
jne
dec
push
clc
sbb
mov
mov
int3
in
cmp
push
mov
pop
in
inc
repz
dec
ds
je
scas
and
pusha
cmp
lret
insl
sub
xor
int
outsb
sbb
sahf
scas
push
jmp
repnz
and
aam
das
xchg
in
and
lods
gs
mov
stos
add
lret
jl
jne
mov
leave
test
test
push
addr16
push
fwait
loopne
mov
clc
xor
sub
jmp
add
xor
mov
mov
push
pusha
xor
test
xor
in
pop
dec
cmp
lds
ror
cld
add
pop
xor
mov
scas
sbb
rcl
test
lock
mov
int
movsl
cmp
mov
and
push
xor
call
mov
std
or
clc
rol
lret
mov
xor
ja
adc
insb
in
dec
jo
dec
xor
not
popa
popa
mov
int
enter
xchg
mov
xchg
mov
pop
mov
call
xchg
gs
popf
pusha
or
pop
rcrl
push
and
pop
cmp
rcl
pop
repnz
or
rclb
sbb
push
xor
or
adc
out
pop
fdivrl
push
mov
sti
and
inc
adc
ds
dec
je
or
out
mov
dec
jp
les
adc
add
out
insb
add
inc
xlat
and
pop
addr16
and
gs
ds
or
shlb
out
xchg
fldcw
fisubs
add
jle
nop
mov
sub
pushf
push
lahf
fwait
scas
xor
sub
push
xor
jnp
sbb
mov
in
and
dec
xor
jnp
out
push
out
js
sub
xchg
into
mov
aas
hlt
jg
jne
or
cmp
adc
popf
xor
push
jecxz
shrl
sahf
std
mov
into
fs
sbb
fsubrl
stos
xchg
or
xor
xchg
in
imul
shr
leave
out
imul
push
push
jae
test
jnp
inc
mov
rclb
scas
push
add
mov
rcrb
sbb
or
fiadds
loop
fisubrl
mov
es
cmpsb
fxch
push
mov
repz
dec
repz
ror
and
cmc
pop
xor
subb
xchg
pop
aaa
cmp
inc
mov
fisttpll
cwtl
and
xchg
push
cltd
icebp
xchg
push
ret
push
stc
push
test
push
js
jl
pop
or
rcll
in
ret
scas
mov
push
sub
mov
mov
adc
pop
fstl
roll
mov
xor
jae
es
gs
xchg
sub
rorb
mov
xchg
mov
or
stc
cmpsl
sub
repz
rcrb
jns
in
xchg
xchg
xor
ds
mov
scas
adc
test
push
shrl
out
out
lds
out
cmp
pop
outsb
std
testb
and
push
cmp
adc
insb
push
pop
adc
imul
mov
adc
jne
or
push
xchg
xchg
mov
je
xchg
xlat
xchg
shrb
daa
pushf
pop
jbe
cwtl
push
aam
add
mov
clc
lahf
clc
inc
cmp
add
cld
adc
xor
xchg
lcall
scas
jp
cmpsb
sub
lret
jge
xor
insl
sbb
adc
movsb
stc
push
enter
loope
test
cld
inc
dec
and
das
dec
xchg
dec
popf
pusha
sti
hlt
dec
adc
ret
push
inc
dec
dec
call
fisubrl
push
pop
repz
notb
shrl
xchg
xchg
mov
xchg
daa
add
sahf
and
popf
fwait
and
xor
loopne
in
dec
ret
fsubr
aaa
xchg
add
inc
dec
mov
xchg
mov
dec
dec
mov
cmp
js
fs
ss
xchg
call
jo
inc
test
lret
mov
sub
jns
rorb
cmpsb
push
cmp
lahf
jno
mov
add
pusha
pushf
mov
push
fidivrs
lds
sub
xor
das
pop
dec
ret
lods
adc
fmull
mov
cmpsl
add
fdivl
add
sub
and
jae
repz
jl
ficomps
push
testl
jle
jecxz
fwait
xchg
enter
es
imul
and
cltd
push
adc
ret
xchg
or
and
push
cmp
pop
mov
stos
xchg
cmp
hlt
addl
out
add
cmp
ret
dec
lret
arpl
outsb
inc
push
arpl
loop
cmp
push
inc
inc
int3
stos
pop
ljmp
in
xchg
pop
jp
mov
xor
xchg
lret
sub
mov
add
adc
push
fwait
and
cs
cmp
dec
add
jne
lahf
test
or
ret
pusha
test
in
sbb
scas
iret
jl
sub
add
mov
push
mov
and
test
fld1
cld
je
sahf
cwtl
mov
add
inc
flds
cld
push
js
dec
sbb
xor
add
adc
mov
in
orl
dec
sti
das
rcrl
dec
fiadds
test
or
sub
push
adc
das
jnp
cmp
push
nop
daa
add
mov
lret
push
xchg
mov
dec
dec
outsb
and
inc
push
sbb
and
sbb
idiv
bound
mov
xchg
mov
mov
adc
mov
cld
or
js
mov
cmpsl
in
sti
inc
push
loope
or
add
and
rcrb
jmp
popf
int3
ja
dec
sbb
rorl
adc
pop
mov
inc
lret
fldt
xor
dec
adc
aam
xchg
adc
and
mov
sbbl
or
repz
adc
pushf
jl
dec
or
sub
lock
andl
mov
in
cmp
aas
lahf
out
push
fdiv
and
add
lret
mov
cs
imul
loop
clc
cmp
sbb
test
inc
mov
jae
pop
lods
jl
xor
inc
repz
dec
push
dec
mov
xchg
subb
push
cmpl
cwtl
insl
es
xor
dec
jl
andb
outsl
pop
cmp
dec
jne
cmpsb
and
pusha
adc
push
mov
adc
std
cmpsb
jp
push
mov
test
ret
inc
mov
hlt
sahf
sub
mov
xor
jecxz
xlat
popa
pop
bound
dec
in
dec
lcall
jecxz
ljmp
push
jbe
jne
push
jbe
popa
inc
adc
xchg
dec
cmp
sbb
or
add
pop
int
scas
popf
cli
jns
jmp
into
adc
pop
cwtl
and
fucomip
pop
inc
pop
lcall
cwtl
push
xor
into
mov
cmp
dec
rep
jb
lahf
cmpsb
push
xchg
jbe
adc
call
aaa
ljmp
into
std
sub
cmp
aam
lods
sbb
stos
out
inc
test
out
fnstenv
or
sub
test
and
scas
hlt
or
mov
lret
ds
mov
add
out
cmp
and
int
iret
push
push
jl
adc
inc
lods
mov
mov
sub
repz
add
cmp
jo
add
filds
movsl
jmp
add
sahf
gs
rorl
jmp
xor
loope
mov
adc
adc
mov
subl
add
rorl
sub
pop
jne
cmp
push
and
subb
push
xor
inc
push
pop
sub
or
mov
callw
mov
add
aam
dec
pop
dec
cld
jp
pop
mov
iret
mov
call
push
in
mov
cmp
das
add
lods
sahf
out
lret
adc
xchg
movsl
jb
xchg
in
xor
cwtl
adc
stc
lods
xor
dec
or
enter
cmpb
push
and
and
inc
sbb
adc
shll
inc
testb
cwtl
inc
mov
xchg
fs
shrb
repz
or
mov
shrb
out
sarb
jbe
push
mov
and
or
push
jae
stc
pop
mov
push
icebp
or
aas
dec
into
ret
lret
out
jo
jmp
stos
xchg
dec
cmpsb
frstor
add
stc
add
iret
insb
jl
iret
lahf
stos
sub
notb
jo
xchg
dec
mov
lods
lcall
dec
add
xchg
rorl
icebp
hlt
sub
mov
cmp
sub
sub
xor
push
movsl
pop
and
lret
add
fisttpl
ficoml
enter
inc
or
sbb
dec
call
xchg
xchg
cltd
pop
jno
aas
or
xor
scas
add
mov
add
pop
mov
sub
cmp
imull
mov
mov
mov
lret
mov
in
xchg
sub
cmp
mov
mov
xchg
xchg
movsb
sub
mov
and
pop
lock
cld
cmp
outsb
jno
cli
fdivl
aad
inc
mov
dec
pop
es
out
and
mov
adc
jmp
movsl
lods
or
add
push
dec
xchg
mov
lcall
mov
mov
in
jmp
sbbb
cmc
jbe
mov
ficomps
push
aad
xchg
ja
ljmp
push
ss
cmpsb
ja
out
mov
jbe
ret
xlat
hlt
nop
push
sub
repz
leave
das
aas
push
dec
xchg
lods
mov
sti
fcmovnu
insl
xor
cmc
test
mov
lock
test
pop
sar
fildll
es
loope
mov
aaa
jle
sub
jmp
cmp
imul
fadd
stos
outsl
cmc
mov
movsl
adc
pop
mov
daa
data16
mov
inc
cmpsb
and
imul
test
xor
test
popa
xor
pop
sbb
imul
outsl
inc
icebp
cli
lock
out
push
dec
xchg
out
scas
aam
subb
fmul
lods
push
test
pop
xor
jl
add
les
fimull
fwait
mov
fistpl
xchg
fdivrp
pop
mov
push
pop
jne
test
xchg
lcall
lods
sbbl
sahf
aas
cmp
and
je
jmp
sbb
sbb
in
pop
enter
inc
popa
popa
insl
pushf
jnp
jmp
jb
pusha
mov
faddl
cmp
fcomi
popa
lcall
ret
adc
jmp
mov
and
and
dec
mov
jnp
call
outsl
dec
adc
push
daa
inc
movsl
stos
jle
ljmp
inc
dec
push
xor
decb
jo
mov
dec
addr16
pop
rcl
xchg
inc
out
in
or
lahf
sub
mov
out
mov
add
xorl
inc
mov
gs
push
mov
rcrb
push
fs
aam
jp
cmp
neg
sbb
inc
sbb
mov
andb
insl
lock
outsb
addl
pop
xlat
aam
adc
push
adc
adc
sbb
cmc
fsubs
dec
movd
inc
arpl
lods
inc
and
push
pop
aad
nop
test
jecxz
push
jb
ds
push
adc
pop
mov
dec
mov
orb
and
nop
lods
gs
hlt
cwtl
je
and
repz
rcr
dec
js
sub
mov
sub
dec
push
sub
dec
cltd
and
fs
leave
insb
pushf
xor
mov
adc
jne
cmc
bound
shl
mov
leave
mov
sbb
inc
lds
pusha
lock
push
movsl
inc
mov
out
mov
sbb
clc
push
or
bnd
push
out
add
aad
sub
test
push
push
mov
ret
dec
or
mov
dec
outsb
inc
pushf
shlb
dec
dec
out
std
jns
sahf
cmp
stos
in
inc
or
or
stc
int3
cmp
repz
inc
xor
rorl
xor
out
push
jp
insb
cli
dec
adc
fwait
data16
mov
rclb
outsl
cmp
mov
fdivrl
pop
inc
cmp
add
scas
das
outsl
dec
stc
mov
push
inc
imul
addr16
mov
flds
xchg
es
xor
add
sbb
mov
loope
js
jl
aaa
orb
popa
arpl
jb
and
ret
jbe
subb
push
pop
aaa
imul
fcoms
out
mov
push
cmp
xchg
sub
mov
cld
sub
pop
jmp
popf
je
pop
pop
jne
ret
cmp
jae
mov
popa
les
push
dec
lret
sub
sahf
inc
xor
inc
push
dec
popf
push
jne
jo
mov
mov
ss
js
jne
outsb
xchg
cmpsl
and
sarb
das
movsb
call
in
test
mov
or
test
xor
sub
fisubs
jmp
adcl
daa
shl
imul
test
roll
shrl
push
and
fisubrs
pop
call
adc
loop
enter
jle
arpl
dec
rcrl
push
fld
mov
xchg
clc
mov
leave
test
les
pop
inc
pop
insl
addr16
mov
and
or
sub
cmpsl
adc
or
push
or
int3
mov
or
out
ficomps
adc
sub
pop
movsb
add
in
xor
pop
je
in
repz
dec
int
xchg
cli
sub
or
hlt
adcl
test
add
out
lods
jb
cmp
push
repz
fsub
or
xchg
mov
pop
clc
cmp
clc
adc
adc
lods
hlt
mov
ret
or
jecxz
sub
jae
mov
and
icebp
cmp
andb
mov
sub
push
out
std
div
add
incl
js
xchg
into
xor
nop
push
inc
xchg
xchg
jmp
push
cmp
arpl
fdivs
push
jmp
mov
xchg
out
popa
aas
cmp
ja
ja
out
xchg
add
cmp
dec
aam
dec
dec
xchg
push
inc
addr16
outsl
loopne
jecxz
int
xchg
xchg
dec
inc
fdiv
jno
xchg
pop
sub
lret
mov
sahf
pushl
cltd
pop
mov
add
les
sbb
imul
ss
int3
sbbl
mov
push
in
inc
lcall
stos
loopne
in
pop
lcall
xlat
lock
je
sub
pop
mov
mov
pop
push
add
scas
fbld
pusha
loopne
mov
daa
pop
inc
pop
mov
repz
pop
pop
sbb
icebp
fcmovnu
and
ds
dec
xchg
pusha
xor
sbb
pushf
mov
test
pushf
push
mov
shlb
push
jg
push
push
lds
icebp
mov
stc
and
mov
lea
xlat
jno
ja
jge
adc
dec
hlt
loope
imul
cs
xor
mov
inc
dec
ja
or
or
sbb
or
xchg
std
mov
stos
sub
sbb
xchg
xchg
pop
clc
jo
pop
orl
mov
and
fimuls
ffree
jns
dec
jle
sub
rorb
fsubl
mov
in
jle
mov
mov
movsb
incl
sbb
fiadds
xorb
pop
enter
inc
aaa
mov
sub
loop
iret
fabs
lahf
test
mov
pop
fisttpll
pop
mov
push
sbb
in
in
push
adc
fcmovnu
std
xchg
xchg
push
std
mov
fdivrp
mov
inc
ss
mov
scas
in
cmc
jmp
mov
mov
sti
hlt
jg
into
cmc
xor
add
mov
sub
arpl
bound
cltd
lret
fwait
push
cmp
aaa
cltd
hlt
adc
into
loopne
sbb
mov
xchg
loope
fcomip
jge
dec
movl
ret
fsubrs
idivb
leave
mov
inc
shrb
pop
ja
sti
stos
push
in
pop
iret
gs
ljmp
ss
jns
outsl
fadd
sahf
ljmp
stos
loopne
data16
adc
repnz
addl
add
add
nop
hlt
inc
hlt
nop
mov
cmpsl
cs
cmpsl
cwtl
cmpsl
rorl
fistpll
adc
data16
jge
mov
push
popa
in
mov
out
lahf
fcomps
sti
pop
inc
xlat
dec
cmp
jecxz
mov
jae
movsb
push
stos
dec
mov
lods
xchg
cli
xlat
pusha
paddsw
jmp
push
out
pop
mov
push
ss
lahf
xor
jb
lds
jb
xor
in
pushf
push
gs
cmc
aas
xchg
mov
data16
push
adc
aam
cltd
fisttpl
movsb
jbe
es
lret
mov
mov
and
outsl
sbb
cmp
jl
xchg
xor
mov
iret
xchg
std
push
lret
ja
and
mov
iret
inc
test
or
inc
inc
int3
loope
jg
mov
fs
scas
pop
sti
dec
les
push
aas
mov
aam
sbb
add
loope
cmc
xchg
sbb
mov
scas
lods
decl
sbb
mov
in
or
push
popw
mov
sbb
pushl
push
xlat
jecxz
pop
push
lods
lds
mov
cmp
jnp
out
mov
adc
aaa
cmp
dec
jmp
push
pop
mov
mov
mov
cmpsl
movsl
or
cld
push
idivl
test
add
push
sub
sub
ret
jo
mov
iret
cs
adc
xchg
mov
dec
push
mov
dec
push
rcll
mov
dec
shll
jae
rclb
cmp
pop
xchg
xchg
add
shrl
xchg
push
mov
cmp
fbstp
xchg
or
xchg
mov
adc
testl
mov
or
xor
or
jo
imul
lods
xor
adc
movsl
inc
sbb
xor
or
jne
push
or
cltd
test
pusha
push
mov
mov
scas
push
pop
ret
cltd
arpl
jns
and
sub
sbbb
cltd
je
sbb
add
mov
push
rcrb
sub
cltd
cmpb
ds
push
xchg
push
jo
aad
jo
lds
lahf
mov
lods
aam
sbb
adc
push
add
das
js
jb
cmpsb
mov
int3
xchg
xor
daa
pop
jl
sbb
outsb
pop
ret
nop
xor
jno
dec
or
loopne
addr16
jmp
mov
das
sub
sar
inc
cmp
insb
loope
and
or
jne
sahf
dec
cwtl
aam
pop
sahf
out
psubw
mov
mov
cmc
arpl
addr16
dec
jne
jbe
jns
add
mov
pop
jecxz
ret
mov
arpl
pop
popa
out
push
push
xlat
xchg
pop
and
mov
adc
fistpll
mov
je
xchg
into
mov
jecxz
out
loop
mov
push
xchg
stos
xlat
or
subb
or
jns
jbe
mov
cwtl
xchg
nop
popf
clc
mov
adc
daa
repz
inc
add
sti
xchg
inc
sarl
xchg
jns
and
fdivr
or
sub
fbstp
xchg
into
icebp
roll
push
push
or
insl
std
std
arpl
sbb
mov
jne
push
in
insb
inc
xchg
xchg
jecxz
add
or
xor
sbb
sahf
repz
sti
fldenv
idivl
mov
fwait
mov
jb
stc
dec
pop
pop
frstor
sub
mov
pushl
mov
sub
scas
arpl
adc
cltd
mov
test
xor
xor
xchg
fldl
adc
jp
les
jo
ja
inc
js
and
dec
xchg
ds
leave
std
iret
aas
fcoml
push
imul
mov
pop
dec
leave
sub
jmp
or
cmp
dec
punpckhbw
mov
or
arpl
pusha
cmp
lea
movsl
pop
xchg
fcmovnbe
and
nop
cltd
mov
test
jge
push
jae
sbb
xor
aaa
pop
push
aas
pop
das
cmp
test
push
fadd
sub
xor
nop
lock
xor
adc
jl
inc
push
loope
fstpl
and
push
inc
add
xor
aad
mov
sbb
mov
int
jns
addr16
push
mov
in
shl
addb
popa
dec
inc
mov
push
mov
sbb
js
ds
loop
adc
push
lret
pop
adc
in
sarb
lds
ljmp
and
add
jo
sub
lock
aaa
cmp
in
ret
jmp
gs
dec
mov
jge
adc
mov
test
loop
push
add
xchg
jmp
mov
imul
sub
outsb
scas
fmul
out
fiadds
adc
popf
xlat
mov
clc
in
add
dec
iret
or
and
shl
and
mov
cltd
das
js
fwait
dec
jae
scas
cmpb
stos
xorb
inc
jb
cmc
cs
divb
pop
jle
push
sub
lret
add
out
mov
cmpsl
adc
push
in
push
inc
adcl
mov
jb
or
jns
or
mov
int
mov
cmp
mov
lods
std
push
jmp
or
xchg
jp
daa
push
and
cmp
mov
and
ja
or
cmp
cmc
int3
pop
shr
pop
fwait
push
jg
jb
inc
dec
test
scas
js
push
in
shlb
sti
iret
sbb
loop
xchg
cmpsb
jmp
int
xchg
pop
and
pop
add
push
sbb
test
jne
push
sbb
fcmovnb
xchg
jg
jns
gs
push
adc
ss
jae
or
test
xchg
loope
movsb
call
sub
scas
sub
mov
negl
jno
push
sahf
jo
mov
cmp
and
fisubs
int3
jb
scas
ror
jns
xchg
inc
mov
and
idiv
xchg
inc
popf
mov
outsb
es
sub
arpl
mov
pop
mov
or
xor
mov
scas
mov
fs
ds
test
inc
pop
ja
dec
dec
adc
out
rcrl
sbb
inc
movdq2q
or
push
fbstp
das
cmpsb
inc
sub
pop
call
lods
je
out
sub
adc
jae
cli
jg
inc
test
or
jmp
lret
xchg
stos
ret
fs
aas
arpl
daa
push
mov
addb
jmp
sub
xchg
mov
sbb
mov
add
fcoml
shl
test
sbb
push
js
movsl
cmpsl
int3
int3
jp
dec
mov
jmp
jecxz
movsl
ljmp
or
aad
subl
fwait
xchg
sub
call
pop
jne
loop
dec
push
xlat
addr16
je
sbb
cmp
fmuls
xchg
pop
pop
sbb
in
lahf
out
lods
aad
add
int3
push
mov
loopne
clc
leave
out
cmp
int3
inc
ljmp
push
outsl
lret
out
sti
insb
subl
and
pop
testb
adc
in
xchg
xor
xchg
xor
outsl
jno
xchg
es
outsb
mov
mov
popl
jbe
fsubl
and
fcom
sbb
cmpsb
ss
insb
out
out
xchg
mov
ja
xchg
cmc
mov
mov
jo
test
cmp
popf
xor
outsl
pop
push
mov
xchg
pop
fidivrl
dec
mov
push
out
test
push
cmp
or
data16
adc
outsl
int3
or
pop
mul
daa
mov
insl
dec
push
movsbl
add
or
enter
test
dec
lret
int
insb
dec
fldcw
sbb
enter
pop
inc
push
mov
cltd
les
sbb
dec
es
stos
daa
movsl
jns
and
inc
lods
push
pop
xor
leave
dec
adc
in
push
push
clc
cwtl
xchg
mov
jge
xor
pop
push
mov
pusha
add
push
in
stos
repz
jp
or
jb
cmp
xlat
add
pop
cltd
idiv
or
mov
test
add
out
xorl
sahf
icebp
jbe
pop
aas
incb
in
lret
mov
ss
jmp
lret
xchg
mov
cli
repz
and
gs
pop
cmpsb
js
pop
push
enter
mov
push
scas
or
xchg
mov
test
xor
ret
in
sub
adc
push
addr16
rorl
jne
xor
in
xor
popa
shlb
sub
mov
fsubl
sbb
lea
pushf
jg
jp
cld
mov
pop
lods
insl
sub
sbb
fisttps
push
push
pop
cs
sub
push
loop
push
cmpsb
and
jle
cli
int
sbb
les
in
add
dec
jl
fadds
or
lret
ds
add
insb
inc
add
std
andl
lods
stos
insl
push
cmpsb
out
test
bound
push
int
popf
inc
pop
incb
sti
ljmp
cmp
daa
hlt
push
sub
xchg
mov
pop
and
xor
sbb
cld
imul
sar
cltd
inc
xor
xchg
jnp
popl
loopne
push
out
lods
cld
aam
jl
xchg
push
xchg
jne
xchg
bound
pop
xchg
pusha
lods
dec
in
int3
or
movsl
sub
mov
je
dec
cmp
and
jmp
add
push
das
nop
js
faddl
es
int3
in
sbb
or
sub
jge
xor
sub
sbb
add
lock
lcall
or
outsb
inc
push
incl
mov
mov
insl
adc
mov
repnz
fwait
nop
in
stos
addr16
xor
sub
popa
clc
cmp
dec
lods
dec
int3
sahf
pop
adc
or
add
push
enter
cmp
aad
shlb
das
stos
ret
sub
inc
fsubrs
jne
lahf
or
mov
or
ss
mov
push
sbb
out
iret
flds
cld
sub
ret
lahf
or
and
sahf
dec
shlb
jb
pop
mov
mov
in
xchg
xchg
shlb
cli
aas
pop
inc
icebp
outsl
lahf
and
mov
and
fstp
xor
aam
cs
fldenv
lcall
testb
icebp
cltd
mov
out
sub
aam
xor
dec
es
jp
mov
out
xor
stos
push
add
push
movsl
arpl
cmpsb
lret
jnp
aaa
push
mov
add
pop
inc
cmp
jg
cltd
inc
or
in
pop
jp
pop
fldt
aad
test
mov
insl
or
mov
mov
mov
mov
outsl
or
es
xchg
push
add
scas
call
xchg
pop
dec
mov
adc
out
mov
inc
mov
cmpb
jae
int3
fsubrs
nop
xchg
and
dec
sbb
pop
sbb
imul
pushf
aam
inc
fdivr
loop
push
lock
push
and
push
fisubl
dec
adc
sbb
xor
enter
icebp
daa
jl
xchg
lods
in
add
inc
xchg
cmp
push
sub
pop
inc
mov
cltd
icebp
xor
push
dec
cli
outsl
inc
cs
mov
fidivl
adc
mov
dec
aas
jl
sahf
mov
xor
mov
andb
or
ret
or
or
jae
es
cmp
lret
push
cmp
push
jmp
push
add
add
popa
lds
stos
or
fs
ja
ljmp
xor
dec
jno
xchg
dec
or
test
xchg
dec
sbb
and
ret
adc
mov
aad
aas
and
push
jo
stos
sbb
inc
pop
mov
xchg
pop
out
cmp
test
mov
pop
mov
mov
pop
lret
mov
mov
nop
repz
data16
popf
lock
xchg
jle
stos
mov
mov
test
lods
xchg
stos
clc
mov
jecxz
cmpsl
jne
push
mov
jl
loop
lret
movsb
cld
js
insb
xchg
lods
dec
repz
mov
ficompl
mov
test
cmp
sarl
jmp
adc
adc
outsb
iret
stos
dec
sbb
cmp
in
frstor
cmp
movsl
es
imul
xor
in
into
in
loope
aad
inc
xchg
punpcklwd
jecxz
xchg
push
arpl
pop
fdivl
mov
xor
ljmp
xorb
enter
cmp
inc
scas
cltd
xchg
cmp
fiaddl
popa
repnz
jo
jl
cmp
xor
int3
add
ja
je
add
fistps
or
mov
cmp
jb
cmc
in
mov
shrb
or
int3
sub
push
outsb
popa
dec
add
dec
adc
or
push
jl
and
jb
xchg
adc
inc
and
lret
pop
push
insl
jno
cmpsl
ja
insl
inc
ficoml
mov
pop
xlat
movsb
sbb
dec
lret
test
cltd
inc
dec
outsl
dec
pop
faddl
xchg
es
test
xchg
fdiv
mov
push
or
mov
pop
jle
push
data16
imul
je
flds
xchg
pop
cld
dec
iret
movsl
cmc
leave
daa
lret
dec
xor
pop
je
jle
add
inc
testl
lcall
stos
or
mov
cld
cli
jp
and
notl
jmp
xchg
inc
movsl
fadds
insl
out
roll
or
or
xchg
icebp
mov
imul
add
push
popa
icebp
call
mov
je
stc
fstl
inc
jmp
scas
and
mov
sbb
and
shlb
repnz
leave
pop
nop
push
or
mov
mov
jnp
adc
insb
in
inc
push
sub
add
fnstsw
test
in
xor
sbb
mov
mov
ja
cmp
or
scas
rorl
cli
jg
mov
and
adc
sub
xchg
pushf
adc
sbb
repnz
add
fiaddl
stos
push
adc
cwtl
stos
jo
repnz
aad
xchg
push
jmp
inc
aaa
shrl
frstor
cltd
sbb
mov
in
jae
lahf
mov
aad
push
out
jo
popa
sarl
mov
daa
ficoml
cmp
pop
pop
xchg
aad
mov
in
jns
cltd
sbb
xlat
sti
mov
divb
add
pop
or
lcall
mov
and
loop
cltd
imull
dec
es
xchg
std
jnp
ss
std
shlb
roll
or
in
fs
arpl
les
lcall
je
in
mov
popfw
dec
in
xchg
or
sbb
mov
xchg
cmp
fildl
out
repnz
movsl
mov
leave
xchg
cmp
mov
xchg
imul
sub
ret
insl
jmp
cmpsl
adc
add
push
adc
jae
movsb
xor
mov
scas
cmp
mov
ret
rcrl
incl
adc
test
inc
adcl
dec
dec
in
or
stos
pushf
mov
cmc
divb
fyl2x
pop
and
fdivrl
ret
lret
adc
adc
xchg
xor
cmpsl
lahf
int
ss
push
fists
inc
adc
lahf
gs
cs
and
pop
in
mov
out
lcall
mov
mov
scas
xchg
pop
mov
cmp
xchg
filds
or
std
aas
cmpsb
lods
xchg
leave
outsb
pop
lods
cld
push
out
mov
cmc
cmp
fwait
cld
insb
sub
imul
in
mov
movsl
loope
add
add
jnp
sub
adc
dec
push
cmp
mov
and
test
mov
jmp
cmpsl
jnp
cmpsl
mov
add
sbb
lret
push
add
push
ds
icebp
sti
lock
aam
xor
push
cmc
inc
jns
sub
daa
icebp
mov
and
fldl
out
and
in
test
jl
bound
jno
inc
mov
add
test
cli
sbb
xor
xchg
movl
mov
xchg
pop
in
lock
xchg
sub
inc
lods
into
out
mov
rol
leave
jae
lods
mov
pop
aas
iret
lret
inc
insl
xchg
add
cmpl
stc
ja
xchg
fnstenv
lret
sahf
andl
out
mov
add
push
and
cmp
div
cmovl
adc
push
jo
jns
dec
andl
push
jbe
rcrl
cmp
xor
loope
lods
ret
mov
mov
int3
jle
xchg
inc
pop
test
or
jbe
aas
loope
popf
mov
dec
out
inc
add
stc
sbb
add
pop
mov
je
aad
push
loope
push
stc
in
xchg
mov
arpl
sbb
add
in
lcall
jp
lock
lea
lret
dec
test
scas
fs
out
outsb
dec
scas
call
jo
insb
cmp
shrb
leave
nop
and
testl
in
in
pop
or
jmp
insl
sub
dec
cmp
mov
scas
or
mov
or
jo
out
out
in
stc
sub
in
xchg
push
rcrb
push
add
add
mov
lea
cltd
int
in
or
in
lahf
mov
cli
lock
add
aam
test
loopne
je
jge
pop
jns
pop
inc
mov
xor
aas
stos
sub
add
clc
sahf
ret
into
inc
sub
pop
mov
test
cli
outsb
add
insl
mov
sbb
inc
je
jg
mov
bound
cmpsl
lods
add
jae
enter
imul
inc
imul
cmp
push
sbb
xor
xchg
mov
add
out
mov
inc
sbb
ds
in
leave
push
ret
mov
ss
and
fdivp
jb
std
in
xchg
dec
mov
sahf
inc
ja
pop
mov
and
movsb
push
adc
cld
pusha
inc
or
stos
jl
pop
ret
jae
xorb
or
sub
sub
lds
rcr
sbb
xchg
enter
jmp
sub
mov
fldt
mov
push
dec
rdpmc
sub
das
dec
les
lea
mov
aam
jo
outsb
arpl
dec
dec
mov
mov
ja
pop
push
fbld
jne
xchg
or
pop
cmp
dec
mov
jl
and
outsb
push
push
pop
popf
adc
sti
jne
int
pop
sbb
loope
sub
pop
fstl
mov
pop
add
jmp
cmp
sbb
jbe
mov
lods
push
cmp
outsl
in
push
push
pop
and
sub
adc
jge
push
repz
xchg
je
push
mov
push
in
hlt
push
cmpsb
add
iret
fsubrl
pop
lock
ror
cli
mov
cmpsl
mov
jp
pusha
xor
cmp
pop
out
jmp
in
out
fiadds
lret
sbb
or
or
sub
dec
push
loopne
popf
push
cwtl
cmp
mov
mov
hlt
into
out
cmp
ret
sbb
lea
out
mov
or
xor
inc
addr16
adc
leave
xor
stos
xlat
sub
cwtl
mov
aaa
push
push
mov
std
aam
imul
xchg
decl
into
add
xor
mov
mov
movl
sbb
pop
xchg
cmp
pop
sub
std
cli
xchg
xor
pop
fs
in
mov
je
adcb
aaa
push
mov
jecxz
fld
pop
lret
xor
into
adc
daa
lods
mov
sub
daa
jg
stc
paddw
in
adc
mov
sub
mov
fiadds
push
mov
jb
shll
pop
sahf
pop
mov
repz
or
xchg
pop
mov
pusha
idivb
stos
add
pop
add
xor
daa
idivb
push
mov
shl
cli
sti
loopne
xchg
sub
in
fistpl
outsb
lods
pop
push
mov
mov
lret
or
add
lds
jp
inc
sub
sub
movsb
pop
push
inc
aaa
mov
jns
je
cmp
cmp
frstor
mov
sbb
inc
in
divb
adc
ret
movsl
push
sahf
pop
xor
cwtl
xlat
shll
int
push
test
adc
fmuls
bound
inc
fiadds
or
mov
loopne
jae
pop
inc
aam
lret
xor
into
aaa
adc
pop
adc
insl
sub
sub
dec
enter
sub
scas
jne
pop
mov
in
out
outsl
push
push
stc
enter
dec
pusha
mov
iret
jp
push
outsb
adc
mov
movsl
fiadds
xor
push
cld
sahf
sbb
pop
clc
aas
xchg
push
adc
xchg
jmp
shrb
xor
arpl
test
push
popa
out
mov
lcall
scas
daa
jb
in
or
inc
fsubrl
mov
addl
cmp
inc
ss
and
idivb
xchg
or
popf
xchg
lock
aaa
inc
cmp
shrb
mov
in
lea
enter
xchg
push
leave
sbb
sti
cmpsl
push
push
fldenv
test
dec
adc
xor
sbb
stc
cmp
xchg
fisttpl
pop
xlat
pop
mov
or
pop
cmpsb
push
leave
fstps
jle
xchg
xchg
fdivrl
sahf
hlt
leave
xlat
lods
repnz
cmp
aaa
popf
lea
rclb
int
cmp
movsl
push
inc
xor
lret
imulb
sbb
rol
cwtl
mov
imul
xchg
inc
mov
mov
mov
in
dec
cld
mov
hlt
shrb
cmp
and
jle
lods
adc
std
loope
cmp
inc
xlat
test
push
push
pop
adc
pop
jecxz
aas
mov
xchg
or
rol
adc
divb
xchg
inc
repnz
push
and
push
pop
stos
push
jne
dec
movsb
inc
loop
ds
xchg
xor
dec
and
jnp
out
pop
mov
inc
lahf
jns
std
sub
xor
bound
fwait
cmc
enter
or
icebp
jge
sub
adc
mov
enter
aas
sar
mov
pop
popf
cmp
jle
sahf
xlat
out
in
push
add
ljmp
or
incl
rorl
cwtl
arpl
mov
jmp
lods
add
jns
aas
push
cmp
mov
fxch
fwait
sub
xor
add
sbb
test
outsb
mov
les
das
mull
ffreep
sub
and
add
loop
push
xor
push
push
pop
insb
add
cs
sub
push
adc
idiv
sti
inc
pop
mov
xlat
jne
push
sbb
mov
int
xor
orb
sub
inc
aad
inc
mov
jnp
es
cmp
xlat
cltd
clc
push
stos
into
push
hlt
adc
stc
push
shll
push
dec
repnz
sub
adc
jnp
inc
xorl
sub
fs
arpl
adc
arpl
adc
fmul
xchg
flds
inc
or
inc
testb
lods
xchg
pusha
push
xchg
mov
and
int
pop
mov
call
hlt
in
leave
xor
push
jae
shll
movsb
test
out
dec
dec
push
aaa
imul
cmp
cmp
mov
xlat
xchg
mov
cmp
cmpsb
pop
xchg
fcmovnu
push
andb
stos
mov
jnp
das
or
cld
out
jmp
lahf
mov
sti
and
ret
aad
mov
lret
mov
jbe
aas
mov
mov
xchg
test
ret
lods
test
iret
jl
arpl
xchg
std
pop
add
in
sahf
int
lods
lds
testl
jno
sahf
test
int
or
push
call
push
add
jl
hlt
xchg
pop
pop
adc
xchg
test
sub
mov
cmpsl
test
in
je
jge
dec
loop
mov
sbb
in
lds
in
mov
xor
inc
aad
test
jecxz
cli
inc
loopne
inc
mov
jg
jecxz
aad
jge
mov
hlt
arpl
jp
mov
out
sarl
inc
lods
and
dec
jo
into
cmp
pushw
iret
int
jmp
xchg
out
lahf
adc
shll
aam
aam
cwtl
ret
xor
jecxz
dec
jl
xor
mov
and
lcall
dec
mov
dec
enter
mov
push
jp
add
mov
out
cmc
push
icebp
sbb
push
or
mov
repz
jle
scas
and
and
cmp
dec
movsb
insb
dec
mov
sbb
cmp
push
pop
ss
ljmp
arpl
nop
cmpl
mov
or
mov
cmovo
lock
out
mov
jns
and
dec
into
jb
push
sbb
and
sub
shlb
aam
imul
xor
and
dec
cwtl
ds
push
mov
mov
sub
sbb
faddl
pusha
mov
loope
jmp
cmpsb
xchg
and
ret
mov
mov
add
mov
pop
out
pop
js
cwtl
jno
dec
sarb
loope
movsb
icebp
popl
fsubr
jne
sub
and
jl
mov
inc
fs
pop
mov
dec
repz
fstpl
repnz
or
mov
iret
push
and
ljmp
xlat
sar
incb
adc
mov
and
xor
cmp
imul
xor
js
std
dec
xchg
inc
lea
mov
sub
pop
sub
stc
aam
ljmp
xor
push
jno
shlb
add
loopne
stos
enter
mov
mov
sub
in
mov
pop
xor
negl
shrl
cmpsb
pop
gs
aas
aaa
add
jne
push
popf
scas
add
adc
add
int
mov
lock
rcll
and
pop
outsb
adc
cmp
dec
push
rclb
addr16
fisttpll
mov
jae
xorb
cmp
cltd
mov
mov
icebp
dec
or
sub
cmp
imul
cld
cld
sahf
jl
insb
mov
xchg
push
mov
imul
lods
sbb
fstpt
push
into
add
push
pop
mov
push
sub
cwtl
test
jns
frstor
cmp
sbb
cs
pop
add
inc
icebp
loop
dec
xchg
xorb
push
aad
jns
cmp
ljmp
mov
inc
std
xor
xor
adc
lahf
inc
lret
movsl
jle
lcall
repnz
das
push
xbegin
mov
push
cmp
cmc
pop
ret
pop
or
movsb
repnz
ja
fadd
scas
sub
adc
lock
and
xor
ljmp
aam
std
nop
pop
jo
into
lea
es
lcall
icebp
int3
lods
pusha
pop
or
in
dec
shl
dec
lock
loope
push
in
incl
clc
lcall
dec
jbe
xor
and
dec
add
sbb
sbb
cmpsl
mov
nop
loope
jns
pop
insb
shl
iret
cmp
icebp
dec
loopne
pop
xor
inc
test
or
cmpsb
sbb
mov
xor
mov
lds
add
sbb
pop
xor
dec
test
leave
sbb
fimull
xchg
hlt
std
inc
sbb
leave
pop
pop
cmp
or
sub
push
test
mov
cmp
xor
and
add
xor
and
test
sub
insl
sbb
dec
stos
fbld
jle
pusha
fs
adc
and
inc
xlat
sub
scas
add
push
cmp
pop
in
nop
push
mov
lret
push
aaa
mov
cmp
iret
jmp
fs
jno
stos
sub
mov
sahf
out
int
divb
aam
imul
scas
cld
mov
pusha
call
mov
ret
addl
pop
lret
sbb
cmp
iret
addl
enter
jl
pushf
and
add
les
int3
xlat
sub
pop
icebp
xor
and
mov
inc
sbb
xor
xor
shlb
scas
imul
add
mov
movsl
clc
dec
xor
mov
repz
xchg
jo
iret
bound
inc
pop
mov
popa
inc
or
push
adc
pop
mov
mov
cmp
pushl
int3
sub
jle,pt
lods
test
push
inc
pop
fwait
jl
sbb
icebp
aad
iret
adc
shl
pop
insb
adc
stc
mov
andl
push
push
pop
jb
sub
bnd
and
jp
bound
mov
adc
xchg
ss
add
movsl
jne
ret
je
or
push
scas
push
inc
xor
and
test
and
aaa
out
lahf
xchg
mov
and
dec
and
adc
bound
pop
jp
bound
daa
cmp
xchg
scas
or
dec
loop
and
popa
or
sbb
pop
add
stos
and
fwait
push
pop
or
or
xor
inc
sbb
fadds
hlt
or
jp
fadd
mov
mov
push
ss
mov
cld
or
add
in
shll
repz
inc
insb
outsl
xchg
int3
jp
sbb
cs
mov
daa
into
sub
test
ror
movsl
out
mov
es
iret
push
scas
ret
ret
xor
xchg
sarb
fnstenv
imul
mov
mov
sub
mov
inc
test
outsl
xchg
or
dec
icebp
mulb
jl
in
imul
sub
mov
cltd
jb
cmpsl
cmpsl
pop
fmul
sbb
bound
cwtl
dec
pushf
push
jl
mov
jns
outsl
ret
xchg
iret
or
adc
lret
mov
dec
fs
pop
or
adc
pop
dec
int
pop
add
cmp
mov
clc
mov
add
jno
dec
adc
xchg
cmpsb
and
inc
dec
ds
sub
dec
in
lret
cmpsb
repz
addb
popf
xchg
jle
push
sub
mov
mov
mov
ja
add
outsb
jl
or
fdivrl
add
xchg
loope
fnstsw
rcl
roll
xchg
je
js
lea
enter
arpl
push
sti
fldenv
jecxz
sub
scas
mov
xchg
lcall
ss
pop
sbb
mov
mov
jle
mov
and
pop
shll
mov
inc
push
and
mov
cmc
ret
orl
cwtl
mov
rcr
mov
inc
mov
int
inc
int3
push
pop
xchg
outsl
lret
cltd
inc
fildll
in
cmp
int3
sbb
adc
into
pop
test
shll
data16
jle
test
mov
push
test
pop
sti
push
sbbb
ljmp
ret
in
js
dec
clc
and
pop
push
mov
pop
push
inc
jecxz
in
out
or
and
int3
arpl
mov
ds
adc
dec
inc
ret
cmpsb
mov
jl
mov
inc
jbe
sub
mov
sti
in
popa
sub
or
sub
cwtl
mov
jl
cmpsb
loope
loope
ficoms
xchg
div
sub
xor
mov
insl
jno
cmp
frstor
lret
cmp
cld
add
inc
mov
les
fwait
cmp
add
int3
test
sub
and
mov
inc
inc
loope
pop
shlb
mov
dec
sub
into
push
lahf
clc
ljmp
inc
sub
jae
sub
lods
sahf
jl
xlat
lea
mov
jno
cmpsb
xchg
and
addr16
sbb
xor
push
icebp
add
pop
xor
jmp
push
js
sbb
mov
xchg
fucomi
dec
arpl
out
cmp
jne
test
fidivs
xchg
les
lods
inc
lcall
mov
imul
cmpsb
negb
push
ret
pop
cmpsb
shlb
ret
pushl
jo
push
push
pop
test
jnp
inc
pop
enter
xor
push
and
jmp
xor
push
jne
test
aas
push
out
imul
cld
lahf
test
push
test
sbb
ffreep
iret
cmp
pop
add
out
dec
push
pop
aas
and
out
pop
pop
insb
push
mov
push
inc
sbb
shlb
sub
cwtl
adcl
aas
pop
in
push
rorl
out
mov
push
add
call
je
nop
testl
jmp
sub
out
push
cmp
inc
ds
mov
ja
pop
leave
jb
in
jle
aad
hlt
int3
negb
mov
or
and
or
jle
in
aad
leave
jbe
cltd
adc
sti
inc
ret
or
sti
jg
add
mov
test
inc
mov
pop
mov
pcmpeqw
mov
fidivrs
push
inc
add
inc
lret
add
mov
sbb
xchg
and
push
mov
dec
flds
fldl
int3
adc
adc
xchg
cmc
out
dec
xlat
ret
cmp
fs
sarl
shr
and
adc
shrb
and
or
shll
pop
scas
mov
dec
or
aas
in
inc
faddl
jecxz
adc
je
pushf
cmp
xchg
dec
xor
mov
lret
xchg
xchg
mov
jbe
cmc
enter
lret
fwait
stos
inc
imul
adc
or
dec
cmp
xchg
sbb
pusha
mov
inc
or
decb
jne
pop
mov
in
adc
inc
stc
add
add
outsl
int
sbb
pop
pusha
cli
pop
cmpsb
sub
inc
fists
iret
in
jmp
jp
loopne
pop
push
jmp
popa
mov
stc
mov
or
pop
lret
popa
pop
pop
cmp
sarl
mov
inc
in
add
xchg
nop
aam
xchg
xchg
movsl
mov
and
daa
cmpsl
into
mov
jae
fstpt
mov
xchg
push
push
arpl
ds
jl
mov
out
pop
scas
or
jmp
or
or
fidivs
icebp
mov
cmp
push
orl
sbb
push
scas
adc
outsl
xchg
sti
add
jnp
ljmp
mov
jno
sarl
jne
cmpsl
pop
data16
adc
mov
test
pop
lods
cmp
xor
and
shlb
mov
mov
mov
daa
dec
and
adc
cmp
jne
sbb
cmp
out
cmp
jmp
jo
jno
lods
add
cmp
jmp
or
insl
push
dec
hlt
popa
cmp
jnp
jecxz
or
js
sbb
clc
inc
xchg
push
sahf
mov
adc
and
xor
fisubs
aad
sub
cmp
loopne
stos
dec
inc
jae
adc
scas
inc
and
adc
aas
mov
dec
add
xorl
sahf
addb
pop
jo
mov
push
cmp
sti
add
push
daa
sub
outsb
es
mov
mov
aaa
mov
cmp
sbb
std
outsl
inc
enter
addr16
or
addr16
icebp
lock
les
xchg
pop
sarb
jg
imul
sbb
pop
sti
push
pop
rcrl
mov
sub
ljmp
add
testl
xor
jnp
add
push
das
mov
and
jo
aad
sub
cwtl
fxch
aad
fidivl
negl
pop
sbb
je
stos
cmp
fmull
jbe
clc
dec
dec
mov
inc
and
mov
das
test
mov
mov
movsl
pop
cmpsl
cmc
adc
cmpl
dec
jnp
xor
push
out
out
andb
movlps
xchg
add
cmp
pop
inc
pop
cmp
enter
int3
add
movsb
xor
out
mov
ret
movsb
xor
loopne
or
dec
push
push
jge
pusha
sbb
fcoms
adc
sbb
movsl
mov
xor
jle
stc
push
and
adc
sti
adc
addr16
and
aas
pop
out
in
pop
lods
dec
inc
jo
xor
adc
jl
mov
pop
push
movl
adc
popf
sahf
mov
add
jp
fdivrs
xchg
cltd
cmp
cmp
cli
sub
fmuls
lods
mov
rclb
or
mov
jge
scas
ss
cmpsl
sub
jnp
stos
push
arpl
add
rcl
pop
enter
push
mov
loope
push
filds
aam
mov
dec
push
imul
loope
lcall
loop
call
into
and
scas
test
fldl
xchg
outsb
in
and
in
in
lock
stc
adc
pusha
mov
mov
ret
int
test
fisttpll
insb
test
outsl
jp
push
popa
and
int
sub
aam
aam
int
test
cmp
add
clc
scas
jne
test
nop
out
fbld
sub
imul
add
andb
loopne
lds
xlat
scas
loopne
movsb
mov
sbbb
out
es
mov
mov
push
xchg
insb
pushf
sbb
mov
hlt
es
cwtl
push
cmp
fildl
dec
cmp
clc
xor
outsl
sub
bound
pop
idiv
xchg
pop
popa
popa
adc
insl
mov
xor
js
mov
push
sbb
mov
add
dec
dec
adc
xor
inc
lods
out
fs
subl
data16
popa
xor
sbb
jnp
sbb
dec
ret
mov
and
mov
xor
sub
mov
xchg
repz
lods
jne
scas
adc
mov
scas
mov
shll
lock
xor
jmp
stos
fcmovnbe
fnstenv
sub
insl
dec
push
adc
lods
cmp
inc
test
push
pop
stos
sbb
xchg
adcb
mov
push
scas
xor
mov
xchg
cmp
and
lret
daa
dec
jp
pusha
mov
arpl
lods
jecxz
add
mov
es
xchg
pop
add
ds
test
shrb
test
roll
call
ret
mov
divl
mov
sbb
dec
xor
or
xor
scas
mov
or
jmp
adc
pop
inc
jae
insb
xor
ficompl
jg
xorl
or
lcall
pop
sbb
mov
outsb
lahf
ret
sub
jl
iret
xchg
movsl
and
push
xor
int
pop
into
add
mov
xorb
ret
add
jnp
and
mov
pop
dec
ja
dec
fucomi
jge
adc
or
xchg
daa
pop
adc
aaa
mov
push
gs
fucomp
pop
insl
dec
out
aad
or
mov
adc
mov
out
lock
lret
pop
ror
cltd
aaa
stos
sbb
inc
testb
pop
call
out
push
sub
pop
ja
test
lods
cmp
push
imul
mov
inc
sub
shl
mov
jle
int
add
dec
or
pop
enter
mov
pusha
adc
stc
dec
mov
fisubs
cmp
nopl
test
loope
jo
adc
and
xchg
scas
fs
mov
jne
cmp
xchg
outsl
pushf
lock
add
jne
jne
pop
mov
jg
xor
aas
std
repz
jecxz
fstps
into
mov
outsb
mov
mov
and
jmp
mov
cmp
xlat
push
xchg
rcll
mov
mov
sub
jns
gs
lods
imul
mov
pop
stc
das
and
test
lock
stc
idivl
sahf
icebp
les
sbb
outsb
movsl
enter
int3
stos
cmc
repnz
push
mov
fcoml
push
sbb
jge
int3
xchg
cli
lock
je
neg
inc
sbb
cld
dec
punpcklbw
dec
mov
xlat
push
jae
pop
data16
into
lret
lahf
fsub
sub
mov
pop
fidivl
mov
sahf
mov
mov
lcall
mov
test
inc
cmc
cmp
lds
lock
mov
mov
mov
jns
push
push
test
addr16
stc
movsl
mov
jp
enter
push
mov
ja
in
int3
mov
or
fwait
cmp
mov
push
sbb
testl
xchg
adc
xor
fwait
pop
repz
out
gs
jnp
mov
and
inc
xor
cmp
loope
push
cmc
adc
sbb
xchg
mov
pop
mov
pop
jmp
or
push
pop
adc
push
movsb
adc
stc
ret
cltd
add
sbb
dec
push
mov
test
shll
inc
in
cltd
cli
sbb
loope
unpcklps
dec
xchg
iret
mov
sbb
xchg
mov
mov
adc
pusha
mov
mov
daa
je
cmp
xchg
test
loope
or
mov
mov
push
sub
push
test
clc
or
sub
insb
sbb
mov
data16
push
int
insl
sub
nop
push
xor
sbb
mov
pop
out
test
mov
cltd
jns
pop
pusha
jmp
cmp
lds
movsb
arpl
and
repz
dec
xchg
fs
mov
scas
icebp
inc
mov
lods
shrb
sbb
es
fsubrp
add
push
xchg
pusha
cld
rcrl
fmuls
xchg
aas
js
mov
jno
shl
and
adc
cmp
cld
rcr
sahf
insb
inc
test
jp
add
inc
mov
pop
mov
dec
xchg
repnz
in
adc
jo
jecxz
fs
fimuls
and
movsl
mov
cmpl
sbb
jbe
pop
icebp
xor
or
dec
mov
xchg
push
ror
push
gs
mov
dec
shr
insb
sub
sbb
mov
mov
movsl
pop
sbb
lock
push
mov
jns
xor
in
inc
pop
jb
add
sbb
cmpsb
loope
mov
loop
mov
or
fs
mov
lcall
rorl
and
les
je
popa
mov
fadds
cmpsb
mov
push
incl
lahf
push
push
cmpxchg8b
mov
mov
push
sbb
push
xor
xlat
insb
insb
popf
or
sub
sbb
jp
mov
int3
stc
push
add
push
lea
mov
cli
mov
or
jp
sbb
adc
sbb
ja
clc
push
pushf
cwtl
insb
leave
mov
mov
sub
inc
lods
dec
pop
shll
arpl
gs
rcrl
adc
sub
cs
xor
inc
js
cmp
jne
test
in
lcall
scas
lods
xlat
stos
stos
je
mov
push
push
addl
sahf
jmp
das
jle
out
das
jo
repz
icebp
mov
or
pushf
dec
xchg
aam
cmpsb
leave
mov
jns
icebp
dec
and
hlt
insl
push
xchg
es
pop
in
mov
jl
mov
pop
jmp
mov
push
lock
jmp
test
icebp
jnp
sub
adc
fsubl
xor
mov
les
xchg
lret
pop
or
sub
xor
lahf
jle
xchg
mov
sub
in
cmp
or
or
jge
sub
out
lock
push
and
mov
cmp
and
out
daa
bound
dec
in
loop
mov
popa
cmp
or
xchg
sbb
mov
pushf
pop
pop
push
adc
add
imul
inc
cmpsb
pop
das
ljmp
push
xchg
clc
inc
outsb
popa
lock
les
dec
lcall
sbbl
stos
out
stc
push
lock
iret
cs
ja
test
inc
insl
add
lcall
shrl
test
inc
cmp
ret
fwait
sti
incl
pop
arpl
es
or
or
mov
lea
ds
cmp
push
lcall
sub
xchg
fmuls
faddl
xchg
push
cmp
jmp
mov
mov
inc
mov
cmp
inc
mov
in
sub
mov
sbb
dec
add
jae
or
mov
push
dec
iret
push
pop
mov
mov
out
in
inc
cs
lcall
cmp
and
imul
inc
fs
popa
lods
inc
lahf
sbb
call
dec
aam
add
sub
and
cmp
sub
aas
mov
sbb
xchg
shll
repnz
mov
es
mov
pop
pop
cmp
mov
jb
fwait
pop
sub
dec
adc
imul
mov
rolb
sti
testb
push
fwait
sub
push
mov
mov
jno
or
pushl
movsl
call
pop
push
lods
lds
mov
mov
fstl
and
add
clc
sbb
flds
or
jg
ficompl
xchg
mov
inc
negl
loopne
or
in
add
stos
inc
popa
lahf
pop
xor
xchg
paddq
aam
std
jne
push
aaa
cmp
sub
insl
sbb
lret
cli
jg
mov
ds
inc
cltd
fimull
lahf
pushf
mov
xchg
pushf
adc
out
xchg
cmp
je
mov
mov
insb
xchg
pop
repz
fs
sub
in
push
outsb
stos
mov
cs
popf
add
cmpsb
xor
push
jp
loope
cmc
mov
addr16
cmp
mov
fisubs
xchg
stos
iret
sub
shll
leave
cmp
in
outsb
fdivs
ret
jmp
dec
adc
cmp
jae
lods
mov
pop
mov
and
xchg
repnz
mov
inc
sub
cmp
neg
in
adc
gs
lods
mov
inc
leave
inc
lods
adc
mov
and
fisttps
loop
cmp
and
cmp
iret
push
push
lret
mov
xchg
cld
and
mov
jecxz
and
shll
cmpsl
mov
xlat
mov
leave
mov
out
in
addr16
inc
mov
or
mov
add
cwtl
sub
pop
leave
movsb
jmp
and
adcb
push
push
jne
imul
or
adc
cld
sub
test
jo
ret
stc
fwait
xchg
fwait
shll
scas
pop
lret
daa
out
inc
dec
push
sahf
inc
les
movsb
add
jno
out
inc
popa
jbe
mov
mov
mov
jae
mov
add
faddl
rol
movswl
out
push
and
fcompl
inc
lds
inc
xchg
daa
and
les
or
xchg
rorl
jo
movb
jno
arpl
in
std
pop
clc
jae
cli
cmp
repz
insb
arpl
mov
stos
push
cs
xchg
stc
es
in
roll
cmp
mov
lret
fstps
adcb
shll
mov
mov
sarl
pushf
cmp
outsl
push
inc
pop
lret
out
pop
enter
ret
sbb
pop
adc
outsl
mov
aaa
ret
pop
inc
icebp
sub
dec
jne
and
fldenv
jb
pop
and
cmc
xor
cwtl
and
movl
dec
dec
fxam
pop
not
dec
mov
out
jge
mov
adc
xchg
int
stc
movsl
mov
dec
in
jp
mov
int
cltd
shl
nop
mov
xchg
inc
leave
icebp
jns,pt
fnstcw
cld
loope
imul
jle
stos
push
lret
ret
pop
notb
push
je
mov
sbb
jecxz
mov
addr16
orl
dec
jp
or
outsl
and
jmp
sbbl
mov
bound
lods
sbb
sub
jmp
pusha
mov
push
test
pop
lea
mov
cmp
add
adc
enter
into
lcall
lds
push
lahf
repz
mov
gs
mov
push
mov
sbb
dec
sbb
pop
sub
fs
ljmp
add
stc
pop
imul
lea
cmp
test
mov
sti
jo
xchg
ficompl
stos
dec
mov
jp
enter
out
je
ret
imul
dec
inc
fiadds
int3
and
sbb
inc
fldt
outsl
in
sub
movsb
icebp
decl
ficoms
incl
nop
xchg
add
sub
testb
arpl
or
push
inc
leave
jnp
xchg
jmp
push
aaa
imul
ret
xchg
sbb
mov
sub
inc
loopne
aam
test
adc
bound
pop
popa
adc
mull
push
or
lea
bound
popf
in
jle
mov
clc
xchg
mul
dec
xchg
daa
mov
jl
push
xor
daa
ds
fisttps
nop
adc
pop
orl
push
cmp
std
pop
in
and
hlt
mov
aas
push
add
int
aad
pusha
push
lcall
adc
jno
outsl
mov
sub
adc
mov
jle
jle
push
hlt
arpl
btc
dec
jns
cmp
cmp
mov
mov
loop
int3
and
xor
push
push
push
iret
mov
jge
pop
xor
or
fsubrs
mov
dec
roll
jb
mov
incl
mov
clc
jmp
ds
xchg
xchg
ja
mov
dec
jge
add
sub
fstpt
arpl
xchg
adc
cmp
push
xlat
daa
mov
pop
adcb
lock
xchg
scas
push
fs
mov
stc
jge
jge
or
dec
sbb
pop
fldl
sub
mov
repnz
sub
jnp
std
ja
inc
and
inc
mov
repz
or
sbb
cmp
jge
jmp
jbe
das
xor
lods
cmpsl
xor
flds
xchg
mov
rcl
and
rcl
xchg
adc
inc
imul
and
pop
dec
iret
and
xor
jl
testb
shll
xchg
loop
mov
pop
std
inc
push
shl
rcl
cmp
movsb
adc
xor
push
mulb
out
push
out
repz
adc
rorb
mov
mov
add
popa
shrl
stos
int3
mov
lcall
adc
daa
pop
aaa
ret
mov
fcmovbe
repz
jle
test
push
dec
add
test
lods
cmc
mov
fwait
inc
xchg
push
hlt
clc
mov
daa
pcmpgtb
aas
sbb
repz
sub
movsb
xchg
mov
aam
call
ds
outsl
dec
dec
in
pusha
xchg
xchg
jecxz
stos
sbb
lret
daa
loope
loop
push
lret
repz
jbe
jecxz
sbb
shrb
int
faddp
cmpsb
or
neg
jns
jecxz
leave
or
jbe
lahf
mov
ss
pop
pop
inc
mov
stos
sub
inc
mov
psrlw
sbb
dec
cmp
fsubrs
pop
lcall
inc
and
enter
addl
push
daa
cmp
inc
lds
pushf
mov
adc
add
decb
mov
push
insb
push
push
arpl
push
sub
lcall
stos
mov
lret
sub
fs
jno
mov
mov
je
cmpsl
inc
test
shlb
hlt
xor
dec
push
psubsb
sub
out
jbe
push
cmpsl
pop
lock
push
mov
pop
faddl
inc
test
daa
mov
cmp
and
nop
ret
shll
incl
rcr
lock
and
inc
xor
lock
push
xchg
push
mov
push
test
int3
stc
add
or
push
adc
gs
and
inc
inc
and
add
pusha
std
push
in
dec
or
cmp
mov
pusha
mov
pop
out
xor
jecxz
mov
aad
mov
pop
insb
lret
nop
jnp
iret
je
aaa
aad
dec
scas
pop
dec
cltd
cmpb
movsb
jmp
data16
xchg
cmp
dec
into
adc
xchg
outsb
cmp
int
push
inc
mul
cs
sarb
sub
push
imul
push
ficompl
push
and
mov
aad
jno
sarb
mov
repz
dec
sbb
jno
xlat
or
cmp
xor
insb
xlat
jg
xchg
cs
sbb
in
sarl
scas
repz
or
int3
ja
add
fwait
js
insb
in
ficomps
enter
jns
jle
lahf
lock
xor
inc
cmp
aad
pop
mov
jl
out
inc
sub
mov
mov
sub
sub
lock
movsb
mov
mov
cmpsb
mov
std
dec
pop
imul
fisubrs
sbb
jmp
sub
outsb
mov
jb
or
into
into
ficomps
mov
rcrl
fs
scas
iret
mov
pop
mov
inc
insb
fsubl
scas
sar
scas
mov
jmp
inc
popa
shlb
jbe
mov
pop
pushf
sub
inc
jbe
loope
orb
add
arpl
out
inc
jns
add
pop
int3
inc
in
aaa
dec
cld
push
mov
int3
xchg
sti
sub
lahf
popl
adc
ret
sti
dec
jbe
add
stc
mov
jl
subb
push
xor
or
and
and
inc
push
cmp
xor
icebp
stos
into
push
out
fmulp
add
push
and
inc
cwtl
xchg
pop
jl
and
xor
mov
data16
mov
outsl
adcb
fisubs
imulb
popf
jmp
push
push
aas
addr16
aaa
leave
push
xor
jnp
stc
xchg
daa
dec
xor
stc
stos
push
xchg
stos
mov
clc
das
aad
push
loope
js
sbb
pop
pop
dec
mov
xchg
sbb
cmp
sahf
and
mov
cmc
ret
and
inc
push
cmp
cmc
jmp
cwtl
and
pop
in
stc
mov
jl
jecxz
imul
push
cltd
mov
mov
push
loop
add
add
insb
and
arpl
inc
mov
sbb
imul
into
jb,pt
push
ret
pop
xchg
sti
aad
mov
ss
xchg
cmp
push
fs
push
dec
dec
js
mov
jno
add
adc
cmpsl
stc
ljmp
out
lock
mov
sub
int3
cmpsl
add
push
sbb
cli
xor
ret
sbb
lahf
lahf
adc
imul
adc
in
je
adc
push
js
inc
mov
push
mov
movsb
xor
add
and
xor
call
stc
into
lock
in
xor
nop
pushf
cmpl
mov
xchg
pop
sarl
std
shr
sbb
mov
mov
movsb
xchg
scas
inc
push
pop
stos
and
je
adc
jnp
imul
jmp
and
and
cmp
out
ss
insb
fdivl
fistl
jbe
arpl
aad
addr16
iret
cmp
cld
adc
mov
and
or
mov
mov
cmp
inc
aaa
push
outsl
pop
mov
add
xchg
mov
aaa
repnz
jp
pop
inc
and
mov
lods
jb
mov
ret
imul
add
lds
rolb
lret
aad
pushf
lds
xor
loope
cmp
pop
out
cmp
imul
sub
test
sbb
cmp
cltd
adc
stos
faddl
dec
dec
cmp
rorb
pop
pop
int
dec
in
in
jb
adcb
leave
lock
mov
jae
add
xlat
or
xor
mov
dec
inc
jmp
push
or
pop
out
push
leave
movsb
jbe
mov
aaa
xchg
xlat
push
adc
jmp
stc
ljmp
mov
das
adc
enter
xchg
xchg
call
ret
mov
fsubl
psrld
fildl
aaa
lock
cli
mov
cs
mov
mov
orl
out
push
lcall
xor
xchg
push
cmp
adc
sbb
addl
arpl
loopne
roll
sbb
insl
inc
sbb
or
aam
cltd
pop
call
sub
insl
movsl
pop
sub
jbe
xchg
mov
scas
mov
xchg
inc
dec
xchg
popa
in
test
pop
pop
sbb
pushf
sti
shr
lcall
push
add
mov
mov
movsb
lea
imul
fs
mov
in
push
xchg
addr16
test
insb
sarl
ja
add
jnp
and
cmp
pop
sti
icebp
insl
mov
or
nop
movsl
mov
cli
arpl
and
ret
stos
cli
pusha
insl
pop
das
mov
ror
lock
fsub
mov
lock
fcoml
cmp
xor
push
lods
out
lahf
mov
push
mov
mov
lret
or
in
adc
xor
leave
rclb
in
dec
sub
pop
loop
mov
out
addr16
fdivrs
cld
movsl
jp
ret
imul
mov
jb
and
push
cmp
sub
pop
pop
sbb
xorps
sub
repnz
ljmp
fwait
jnp
sbb
xchg
mov
pop
push
and
outsb
and
xchg
or
and
and
movsl
push
inc
push
lcall
xor
movsb
add
xor
push
arpl
xor
hlt
jae
test
rorb
push
js
xchg
movsb
hlt
xchg
aad
int3
inc
inc
or
rolb
jle
in
and
add
imul
cli
outsb
mov
jmp
and
stc
add
and
rolb
ljmp
cpuid
pushf
ds
dec
out
sub
dec
fwait
mov
repnz
xchg
les
lret
stos
adc
ret
popa
xchg
notb
xlat
jecxz
cmpsl
push
mov
imul
jge
ret
xor
repz
pusha
stc
add
lods
sbb
cmpb
and
ljmp
xlat
gs
pop
ljmp
in
lods
imul
mulb
imul
test
loopne
add
stos
push
sbb
mov
adc
je
aam
aad
adc
test
popaw
imul
frstor
xchg
cld
test
test
push
lods
xchg
sbb
adc
and
ds
popf
pusha
xchg
mov
icebp
and
lret
adc
cmp
sbb
ja
js
call
dec
std
fs
leave
mov
ret
insb
test
xor
or
dec
andb
or
enter
nop
leave
iret
mov
jge
mov
cwtl
pop
push
cs
mov
iret
clc
dec
jae
cmp
mov
sub
push
ss
jbe
pop
cmp
lahf
imul
test
dec
pop
repz
std
cld
pop
scas
mov
and
jl
lds
fsubr
aad
sbb
jmp
jns
inc
push
les
ss
sub
cmpsb
and
imul
movsb
jmp
pop
xor
call
mov
jne
in
loope
dec
xor
xorl
cmc
inc
decb
or
scas
add
mov
movsb
int
shll
mov
mov
fcmove
sbb
lcall
pop
repnz
inc
mov
pop
ret
sbb
cltd
jge
sbb
add
pop
and
add
imul
and
and
cmp
dec
mov
nop
jo
imul
xchg
and
inc
popa
dec
aad
lods
adcb
frstor
jecxz
scas
ret
lret
mov
xlat
and
lret
mov
push
je
sub
xor
xchg
ret
and
adc
push
xchg
ja
adc
in
cmp
cwtl
imul
loop
adc
iret
jno
loopne
call
clc
lds
fs
mov
xchg
and
mov
pop
sub
divb
loope
in
push
stos
sahf
sbb
jg
jb
pop
mov
popf
std
sbb
mov
shll
cmp
imul
sahf
cmp
shlb
addr16
aas
inc
cmp
lea
in
cwtl
cmp
jne
pop
dec
mov
mov
push
test
push
pusha
test
mov
mov
or
out
negb
mov
loopne
jbe
clc
clc
into
xlat
add
mov
popf
pop
repnz
jmp
idivb
mov
outsb
notb
test
into
test
cld
stos
pop
adc
and
sub
push
sub
mov
sub
cmp
stos
insl
into
fistps
fnstsw
imul
pop
adc
das
clc
jb
cmp
jno
pop
repz
ss
mov
fs
icebp
inc
or
outsb
rorb
test
sbb
sub
bound
cli
je
adc
stos
sub
cs
push
mul
addr16
cmpl
lahf
mov
push
pop
jmp
popl
cmpsl
adc
cmpsb
sbb
test
je
rorb
ja
inc
mov
xchg
repz
xlat
xorb
shlb
in
jmp
lret
sti
pop
addl
test
or
aam
inc
lahf
sbb
mov
mov
ljmp
fwait
jmp
mov
add
pop
cmp
pop
or
cmp
push
mov
or
cld
or
push
pop
clc
jecxz
mov
add
jbe
add
aam
fdivr
dec
adc
push
faddl
jl
je
movsb
sahf
cs
jb
popf
repz
arpl
cli
mov
xchg
out
inc
mov
jecxz
push
pop
loope
mov
or
pop
fistpl
xchg
in
mov
jl
cmp
inc
xor
mov
roll
pop
movsb
shlb
xor
popaw
rol
clc
mov
and
dec
jle
xchg
insl
test
cmp
sub
aas
subb
pop
mov
scas
dec
and
xchg
push
call
sub
mov
pop
jb
repnz
insl
dec
add
mov
xor
dec
sbbl
and
ficomps
rcl
popf
mov
push
pushf
fwait
lahf
mov
cmp
daa
addr16
sar
loopne
inc
clc
mov
fstps
ja
repz
stos
dec
lahf
pusha
lret
or
inc
add
push
outsb
mov
inc
push
and
xchg
ljmp
push
shr
mov
adc
xchg
into
scas
pop
loopne
imul
fistps
call
cli
xchg
mov
inc
add
xchg
rcrb
js
je
dec
loop
lret
das
jp
xor
adc
xchg
dec
pushf
pop
xchg
or
daa
jmp
sub
mov
cli
mov
add
loopne
jp
dec
add
mov
lds
call
scas
or
push
adc
dec
lods
rolb
add
push
repz
mov
std
je
stos
sub
ret
cmp
or
jb
in
pop
std
cli
xor
adc
or
xor
shlb
fwait
lret
loopne
stc
push
inc
mov
ljmp
test
movsl
xor
sbb
push
mov
jle
cmc
aad
clc
adc
out
rorl
sahf
fwait
pushf
xorl
xor
ret
nop
mov
dec
div
push
nop
sub
cltd
jne
lock
and
pop
lods
inc
dec
hlt
push
call
mov
lock
mov
stc
and
mov
stos
mov
in
jne
inc
stc
lcall
push
daa
mov
sbb
outsb
in
fistps
hlt
aad
shl
sub
popf
sti
popf
mov
or
outsb
sub
mov
sbb
cs
ficoml
pop
popf
mov
jbe
inc
cmp
add
andl
jb
sub
pushf
or
and
mov
pusha
out
xor
mov
push
push
leave
cmpsb
dec
and
mov
cmp
push
lret
add
bound
mov
cmp
mov
mov
xchg
roll
pop
and
outsl
pop
and
adc
dec
xchg
sahf
add
push
adc
call
xor
pop
stos
add
push
mov
mov
lcall
fisubs
adc
pop
aaa
std
movsb
imul
push
sbb
sub
lock
push
jg
in
push
jp
adc
sahf
lea
dec
adc
aas
ficoml
sbb
xchg
or
lret
pop
sub
cmp
pop
xchg
fisubs
js
stos
mov
jmp
xor
sbb
dec
mov
stc
mov
lds
idiv
test
mov
or
xor
mov
pop
in
or
pop
nop
sbb
loope
cmpsl
cwtl
xchg
popa
gs
and
test
and
add
or
cld
int
ss
push
nop
or
pushf
shrb
pop
aaa
cmpl
iret
jbe
push
dec
add
xchg
xchg
mov
push
je
cmp
popf
je
jb
adc
aad
out
push
lcall
xor
xor
mov
add
cmp
in
sbb
pop
jmp
push
lock
jnp
mov
mov
mov
sbb
dec
inc
outsb
or
or
aas
xor
ljmp
jle
stos
leave
dec
sub
pop
pop
inc
dec
into
push
dec
sbb
mov
outsl
orl
das
lcall
push
push
lods
cwtl
jnp
push
mov
repz
icebp
pop
aam
sbb
pop
jecxz
out
mov
xchg
les
add
xor
lds
jmp
dec
or
mov
dec
pop
sbb
and
push
lahf
jns
push
xchg
iret
xor
push
insl
push
insb
mov
repnz
and
pop
xchg
cwtl
add
inc
cmp
iret
ret
fbstp
inc
lret
pminub
leave
fs
pop
jmp
ret
xchg
ret
or
mov
lret
movsb
rol
mov
jbe
stos
in
sbb
fisubrs
inc
sbb
fcoms
rclb
fcoml
fnsave
outsl
sub
pusha
push
mov
jmp
adc
out
insb
into
xchg
inc
std
inc
in
dec
xor
or
mov
pop
stos
cmc
or
jae
xor
addr16
pop
pushl
add
xor
mov
in
mov
jmp
aad
cmp
jnp
addb
and
out
lret
push
enter
pop
and
sub
in
mov
add
xor
outsl
icebp
js
das
inc
icebp
push
inc
pusha
mov
xchg
sbb
jno
or
shrb
sub
jb
scas
popf
rol
sub
pop
pop
mov
and
jae
add
cmp
test
dec
mov
or
imul
or
scas
mov
test
in
sbb
inc
mov
ja
repnz
mov
mov
int3
std
mov
clc
xchg
stc
xchg
inc
jbe
mov
sbb
dec
int
mov
xor
aas
mov
xor
push
dec
inc
xor
push
insb
lods
cs
jg
xor
mov
arpl
adc
mov
adc
jle
mov
pushf
cmpsb
arpl
mov
cmp
mov
xchg
in
arpl
or
call
pop
push
pop
inc
mov
push
jmp
push
mov
sarl
int
stc
rcr
dec
dec
mov
xchg
fnstcw
sbb
addr16
xchg
repz
icebp
imul
push
mov
aam
jb
dec
lods
in
fisttpll
lahf
stos
mov
jecxz
cltd
mov
jns
and
int3
inc
dec
jae
cltd
inc
dec
stos
push
ficoms
and
add
mov
mov
xchg
jb,pn
aas
sub
jl
negb
jge
repnz
mov
out
cs
shrl
mov
jmp
movsl
push
repnz
dec
mov
xchg
adc
movsl
adc
jnp
adc
add
adc
lahf
add
sahf
or
mov
add
push
outsl
dec
mov
in
scas
insb
cld
ret
lds
test
nop
fwait
out
dec
cmp
dec
xor
jl
jge
repz
out
lahf
shll
mov
sbb
ret
shr
xorps
mov
mov
mov
aas
lret
fidivrl
push
iret
xchg
insb
cltd
cmp
mull
mov
jb
push
jne
shrl
stc
in
or
icebp
push
test
jle,pt
loopne
lcall
lods
pop
or
mov
nop
pushf
dec
pop
jne
orl
in
jmp
jae
repnz
enter
popf
ss
mov
mov
orl
loopne
arpl
gs
and
lea
dec
push
push
jae
adc
inc
ja
and
push
adc
loopne
or
test
loope
jne
mov
push
stc
push
push
pop
cmp
push
shl
frstor
inc
xchg
inc
sarl
test
inc
cmp
add
call
jae
jl
insb
cltd
jne
xlat
pop
cltd
and
rcrb
arpl
data16
rcll
stos
and
xor
mov
adc
btr
rorl
test
cmp
jns
or
fnstsw
cmpsl
xchg
sub
add
sbb
addr16
aaa
xchg
cmp
out
add
mov
pop
inc
mov
sti
js
std
ljmp
cmp
xlat
lahf
xchg
or
repz
dec
in
sub
and
sbb
inc
scas
loope
add
fisubl
dec
fbstp
cltd
ljmp
sbb
popa
mov
hlt
mov
cmp
jae
negb
xchg
xchg
int
das
pop
xchg
adc
imul
mov
add
cmpsb
jne
ret
and
jmp
xor
cmp
insb
cmp
xor
hlt
inc
iret
sub
add
das
xchg
xchg
xor
cli
outsl
jns
imul
shrl
fstpl
imul
xlat
inc
pop
fdiv
dec
push
or
inc
repz
addr16
popw
mov
aaa
outsl
and
popf
test
clc
ja
pop
push
push
jb
ja
xor
je
xchg
lcall
xor
sar
add
and
ljmp
and
in
lods
fsubrs
inc
popf
popa
fmul
popa
les
jae
sbb
push
cwtl
lret
stos
shrl
and
sub
imul
jo
or
std
in
loope
dec
std
fildll
inc
lods
mov
repz
mov
and
fiaddl
jle
dec
stos
xor
sbb
adc
sub
out
cs
xor
inc
xor
jbe
mov
sub
jns
add
insb
repz
call
pusha
je
sub
daa
adc
mov
pop
daa
insl
mov
mov
xor
pop
popf
pop
pop
push
and
inc
mov
xchg
and
xorl
adc
rcr
sarb
add
aas
pop
insb
lock
rclb
in
sub
mov
dec
rcl
repz
fisubrl
ds
inc
jmp
into
pop
fstpt
es
in
inc
pop
mov
cmp
movsl
inc
adc
inc
jne
out
adc
sbb
or
int
add
jle
jecxz
shll
shr
mov
dec
xor
imul
int
inc
out
inc
cwtl
imul
push
repnz
and
cmp
push
mov
dec
dec
xchg
xor
dec
inc
or
insb
test
jnp
mov
int3
pop
jecxz
push
shl
jecxz
leave
insb
aas
std
sub
xchg
repnz
dec
ja
pop
inc
jl
mov
push
jl
push
jg
inc
cmp
testb
jne
adcl
repnz
adc
ljmp
pushf
inc
and
in
add
mov
adc
sbb
cmpsl
xor
test
mov
mov
cmp
cmp
push
adc
sub
fwait
xchg
iret
ljmp
rorl
cltd
stc
xor
inc
push
jmp
lcall
orl
mov
aam
ficompl
push
popf
push
push
das
mov
xor
xchg
jmp
cli
jge
dec
dec
xor
cmp
testl
movsb
shlb
nop
sub
mov
adc
mov
or
xor
sbb
std
jle
in
cmpsl
seta
cmp
mov
or
and
popf
pop
pop
and
lea
test
inc
xor
push
fcomps
push
insl
pop
cmp
mov
lahf
into
jle
pop
jle
sub
add
in
sub
or
call
sub
add
or
out
cli
jnp
cmp
push
test
adc
std
aad
rcl
iret
dec
int3
pop
loop
mov
fisubs
sub
mov
faddp
cmovg
xchg
xor
imul
jno
and
std
mov
jp
lods
out
inc
fwait
cmpsb
sub
xchg
xchg
cmp
dec
outsb
sub
push
std
daa
pop
mov
shlb
adc
push
push
enter
cmc
or
pop
or
inc
scas
xlat
xchg
jbe
test
fisubl
into
mov
cltd
int
xchg
pop
inc
inc
xchg
adc
xchg
insb
enter
push
mov
xchg
sub
ss
mov
or
imul
xor
mov
mov
adc
fsubr
jb
shlb
cmc
dec
out
cmpb
lock
bound
jp
dec
mov
add
aaa
xor
sahf
jb
and
subb
out
out
push
mov
lods
jne
lods
popf
es
cmc
inc
pop
pop
out
jl
sub
push
pop
cmpsb
popa
mov
sbb
loopne
imul
fidivrs
mov
or
bound
adc
mov
pop
enter
dec
test
fmul
js
pop
test
repnz
ja
and
add
xchg
outsb
roll
pop
movsb
out
cltd
xlat
xor
push
xor
fnstsw
je
leave
lea
iret
out
cli
add
lret
inc
xlat
insl
mov
mov
pop
dec
inc
enter
movsl
lahf
mov
jb
mov
das
dec
andl
dec
in
in
dec
lret
add
stos
daa
push
out
cmp
xor
fimuls
pop
pop
sub
push
mov
lea
sub
fstpt
pop
lods
jb
fs
or
xchg
or
repnz
cmp
pop
pop
cmp
or
inc
push
stos
repnz
cmc
push
ljmp
leave
insl
add
lret
pop
and
test
ljmp
aas
xchg
das
xchg
in
mov
jns
daa
sahf
ss
mov
add
push
ja
test
jle
jle
aas
inc
dec
inc
push
mov
sbb
add
push
scas
ljmp
adc
push
dec
shr
call
mov
cmp
repz
fdivrs
cmp
mov
push
cmpsb
or
adc
mov
int
test
imul
out
insb
sbb
xchg
mov
aad
aaa
push
jl
fstps
mov
or
and
hlt
daa
arpl
dec
pop
xchg
push
into
std
inc
pop
aam
and
adc
frstpm(287
dec
or
jmp
mov
xchg
dec
add
push
out
pop
das
cltd
vmread
pop
idiv
mov
fadd
shrl
pop
jg
push
xchg
es
sbb
push
dec
xor
clc
and
sub
fisubrs
mov
fisubs
fimuls
push
jmp
les
mov
pop
lfs
mov
inc
or
repnz
in
mov
imul
mov
test
jo
test
in
mov
adc
scas
mov
ret
sbb
in
dec
push
js
pop
test
xchg
lods
add
xchg
jb
and
xchg
push
int3
ds
mov
xchg
cli
jae
pop
sbb
repnz
psllq
and
push
arpl
data16
in
rcr
movsb
sub
aad
ja
ret
pop
pop
fisubrs
int
adc
bswap
gs
mov
xchg
lods
pop
pushw
push
mov
jp
shl
cs
jnp
imul
inc
test
lods
sub
int3
mov
cmp
mov
cmpsl
mov
jl
cmp
cwtl
adc
in
cld
xchg
outsb
pop
mov
icebp
sub
les
pop
mov
test
xchg
in
dec
nop
and
push
lret
outsb
popa
xchg
sti
bound
xchg
inc
out
daa
mov
pop
cwtl
or
jbe
cmp
sub
mov
jge
adc
or
ljmp
xchg
call
cmp
sbb
add
mov
rolb
mov
movsb
mov
add
adc
data16
mov
push
enter
xorb
push
cmc
in
lret
popa
jle
mov
ret
ljmp
scas
jge
add
pop
in
dec
jg
push
cmp
js
mov
in
jl
pop
dec
sbb
pop
push
popf
cmpsb
cwtl
pop
loope
xor
push
and
fmul
or
fstp
ss
bound
dec
push
stc
test
loopne
jle
pop
xchg
and
insb
mov
test
in
clc
xchg
test
mov
jb
dec
lock
xchg
xchg
int
mov
mov
lret
ret
mov
insl
xchg
psllw
push
push
xchg
push
mov
into
or
or
push
loope
pusha
int
out
call
pop
xlat
test
dec
xlat
out
push
cs
xchg
fisttps
flds
inc
push
cltd
xchg
push
mov
jno
in
pop
push
and
andb
cmp
sbb
sub
nop
loope
jo
xchg
scas
lahf
mov
xchg
fisubs
test
inc
or
dec
pop
jmp
adc
ret
push
or
jnp
rolb
enter
jge
cli
shll
test
add
popf
adc
mov
or
int3
xchg
adc
xlat
mov
xchg
lahf
int
cmc
icebp
movsb
push
mov
pop
jmp
int
icebp
rol
or
sbb
outsb
pop
mov
xchg
gs
or
aas
daa
and
push
aaa
add
adc
push
idivb
inc
xor
stc
outsb
lret
fcmovnbe
in
test
fsubs
cwtl
sahf
cli
push
xor
cmp
pop
ds
mov
nop
fdiv
mov
inc
pop
test
mov
pop
loop
inc
push
inc
negb
push
call
dec
sbb
cld
fnsave
and
cmp
les
out
push
jp
rolb
ret
mov
int
push
in
movsb
or
xchg
imul
inc
leave
jge
add
leave
push
fsubr
mov
adc
mov
jmp
xchg
dec
into
stos
stos
sbb
push
mov
cmpb
idivl
xchg
mov
stos
fdivrl
adc
ficoml
jne
push
sysenter
scas
test
sub
mov
rol
fmul
popf
in
idivb
outsl
add
filds
push
test
xor
add
mov
mov
out
hlt
mov
sub
repz
pop
ja
mov
mov
sbb
stos
push
clc
cwtl
xchg
icebp
xor
jmp
aas
sbb
and
out
loope
push
adc
adc
cmp
or
dec
lods
mov
xchg
mov
sahf
fwait
jbe
neg
mov
das
in
pop
in
lods
popf
mov
pop
or
out
in
jg
sub
ljmp
cmc
add
lret
enter
aaa
xchg
mov
aad
mov
adc
pop
mov
adc
mov
fists
dec
jns
daa
jmp
fwait
xchg
cmp
mov
push
pop
add
and
rcr
xor
or
sahf
cmp
push
and
out
iret
push
inc
lods
cmp
lea
and
lret
push
pmaddwd
iret
pop
aam
shl
arpl
fcomps
and
shlb
mov
sahf
xchg
fldcw
cli
cmc
mov
pushf
xor
out
mov
push
inc
push
rcl
stos
sub
mov
jg
xlat
rorl
cmpsb
ljmp
cmp
mov
sbb
add
dec
mov
es
loop
into
mov
imul
mov
cwtl
adc
jno
ja
mov
push
sbb
insb
jle
xchg
dec
cmp
xor
push
dec
dec
jle
mov
ret
cmp
sub
icebp
sbb
es
iret
test
sbb
cmpl
lcall
add
jmp
mov
std
push
push
sub
pop
scas
insl
pop
out
jmp
in
lret
std
out
mov
and
lds
outsl
add
stos
inc
sti
and
adc
aad
fnsave
push
insl
push
rorb
leave
rorl
clc
cmp
jae
nop
movsb
inc
mov
pushf
js
ficoms
pop
subl
xlat
sub
add
mov
pop
lret
loopne
xchg
in
cwtl
add
adc
stos
aam
outsb
out
push
testb
mov
mov
call
or
xchg
inc
les
fimuls
xor
pop
add
mov
push
das
outsb
cmpsl
ss
adc
icebp
adc
popf
push
pop
rcrl
sub
sahf
nop
jne
push
das
pop
xor
fcompl
cmpsb
mov
loopne
add
xchg
push
fisubs
push
jae
push
xchg
in
dec
mov
in
jl
shll
arpl
xor
sbb
cmc
arpl
mov
and
outsb
pop
and
and
push
sti
push
lds
mov
add
repz
lds
and
push
insb
add
xacquire
je
shlb
xchg
jl
movsl
dec
inc
ret
lcall
xchg
push
sbb
mov
dec
or
cltd
movsb
addb
imul
int3
and
pop
and
pusha
mov
rcll
std
cmp
or
lcall
jmp
mov
cmp
dec
or
fisubrs
cmpsl
mov
pop
dec
loop
sbb
les
push
jns
sub
xchg
inc
cmpsl
sbb
mov
out
fnstsw
cwtl
aam
xchg
jge
dec
mov
les
adc
pushf
jl
popa
pop
xchg
xchg
jecxz
push
jae
lds
inc
cmp
lds
lods
in
out
lret
ds
popa
fidivs
mov
mov
add
add
cmpb
add
lds
cmp
xor
scas
adc
and
fwait
push
push
stos
sub
mov
sbb
cwtl
outsb
mov
push
out
imul
cmp
lcall
aaa
push
push
test
stos
jg
cmp
movsl
jns
leave
cmpsb
je
jne
imul
xor
leave
imul
les
pop
pop
add
scas
ljmp
xchg
xor
xor
jb
adc
mov
sub
stos
dec
daa
clc
flds
dec
xchg
addr16
gs
rorl
mov
fwait
xchg
imul
jmp
fildl
mov
stos
lret
ja
pushf
enter
push
cwtl
xchg
pushf
imul
sub
and
inc
lahf
cld
repnz
sbb
aaa
inc
out
fcomps
and
shlb
outsl
sbb
mov
in
aaa
inc
cmp
jns
mov
repnz
mov
addr16
inc
cmp
fsin
adc
orb
repz
xor
inc
fcom
ja
jae
in
push
test
sub
cltd
jb
ficoml
or
ret
mov
daa
push
rcrb
mov
mov
mov
add
mov
dec
lret
inc
pop
adc
sbb
idivb
mov
mov
in
aaa
jge
hlt
aas
mov
lock
mov
inc
imul
ds
sarb
out
xchg
outsl
mov
inc
cli
pop
dec
mov
xchg
pop
hlt
push
fidivrs
stos
fsubr
int
push
fneni(8087
popf
push
mov
subl
fs
add
mov
inc
test
scas
repz
data16
or
dec
jns
ret
cltd
jo,pt
bt
mov
mov
dec
pop
sbb
sbb
xor
lea
mov
mov
sbb
jne
mov
leave
xchg
das
push
inc
pop
out
mov
ss
mov
mov
out
test
rorb
push
pop
nop
rcll
dec
xchg
or
dec
or
les
stc
mov
dec
lock
mov
addr16
pop
xchg
cmp
aaa
pop
int
rorl
mov
mov
mov
rcrl
lds
hlt
stc
daa
mov
add
jnp
xor
jmp
push
jne
ret
aad
shrb
sbb
pop
and
out
jne
push
adc
xchg
fnstenv
shrl
pushaw
rol
mov
std
loope
jge
out
pop
loopne
mov
jge
insb
and
cli
pushf
mov
mov
test
mov
es
push
pop
inc
movsb
mov
xlat
stos
push
fldenv
add
cmovbe
mov
jnp
xchg
sbb
rol
lods
cmp
daa
lret
sub
adc
test
cmp
xor
push
aad
pop
bound
je
imul
sarb
in
stc
data16
jne
outsl
sti
sbb
out
xchg
jbe
sahf
cmpb
xor
jae
test
nop
add
sbb
add
lcall
pop
adc
inc
int
in
push
mov
jp
xchg
cld
sub
aas
iret
and
add
xchg
push
dec
insb
nop
xchg
js
or
push
lods
jo
dec
mov
out
das
inc
push
add
xor
stc
push
xor
pop
inc
icebp
imul
mov
sbb
pop
jno
jmp
dec
das
sub
inc
shrb
mov
lock
mov
cmp
imul
mov
mov
sbb
cmpsb
ljmp
push
mov
mov
push
fsin
pop
pop
xchg
rcl
loopne
jge
mov
jmp
mov
in
aam
inc
dec
int3
adc
mov
incl
mov
jbe
mov
xor
movsb
jo
stc
mov
inc
fwait
lret
or
in
adc
icebp
mov
adc
jmp
in
sti
insb
mov
cmp
adc
fwait
in
inc
or
lock
mov
push
scas
lcall
jbe
int3
push
lretw
addr16
jl
jg
push
loop
push
rep
inc
inc
in
addr16
insb
add
scas
roll
adc
test
ret
pusha
std
fstpl
cmc
xchg
sbb
rol
inc
ds
sub
mov
sbb
push
mov
rdmsr
mov
je
sbb
fldl
cmpsb
gs
je
xchg
sarl
adc
imul
mov
mov
sahf
into
xchg
fisubrl
dec
jge
fs
lock
jbe
add
push
popa
jmp
push
repnz
daa
cwtl
enter
iret
stc
cli
sub
shrl
jnp
mov
adc
fistpll
fisubrl
sbb
movsl
fldl
insl
jl
jle
pusha
inc
mov
js
out
or
into
enter
iret
loopne
pop
cmp
sar
pusha
cmp
mov
fwait
mov
ljmp
pushw
push
mov
cltd
add
push
outsb
lods
jb
test
arpl
sub
dec
jmp
dec
mov
test
addr16
insl
dec
outsl
push
xor
jecxz
fcoms
int3
jle
lds
cwtl
jno
pop
or
jno
outsb
xor
mov
inc
mov
pop
pop
mov
ror
fiadds
xchg
push
push
repz
dec
push
mov
cmp
xchg
pop
pop
ret
sub
enter
xor
xlat
fucomip
jle
movsb
or
xor
sub
dec
xchg
je
test
sahf
loope
insb
hlt
ja
ds
pop
inc
sub
loop
xor
flds
push
push
es
dec
dec
mov
dec
inc
xchg
xchg
loop
add
ret
cs
jb
scas
out
mov
mov
jge
imul
and
adc
mov
out
sub
and
ret
pop
adc
insl
fistps
push
inc
xchg
lods
adc
orb
aam
imul
or
call
push
cmc
or
sbb
rcl
lods
sub
cs
xlat
loop
ljmp
mov
add
xchg
mov
jecxz
xchg
ret
mov
lods
loop
insl
fidivrs
jle
jmp
push
dec
jns
mov
pop
jle
loopne
jns
add
dec
pop
mov
add
daa
lcall
inc
jae
and
dec
jmp
fwait
adc
scas
fstpt
inc
cli
push
jmp
inc
mov
in
sbb
dec
cmp
popf
imul
xchg
cli
cmp
cmp
lods
sbb
pop
cld
pop
pop
pop
ds
inc
mov
mov
cmp
adc
mov
jmp
add
jge
jbe
std
jns
outsb
or
fcoms
and
pop
xor
inc
sbb
lret
or
es
xor
arpl
pop
mov
in
mov
inc
bound
lcall
fsubl
or
stos
xchg
xor
adc
pop
lods
or
xchg
sti
adc
push
les
pop
notl
stos
pop
pop
test
and
push
jecxz
xor
test
mov
cmp
incb
lret
repz
mov
push
in
cwtl
cmp
xlat
pop
ljmp
pop
les
push
jmp
jmp
shlb
es
mov
fstps
sahf
xlat
in
dec
pusha
std
out
in
mov
pop
inc
repnz
push
jge
rclb
inc
mov
popf
out
repnz
mov
iret
shll
shlb
or
mov
or
push
or
jmp
sub
mov
outsb
mov
push
dec
inc
or
nop
imul
loopne
push
jge
mov
sahf
add
cs
sub
cmc
addb
jne
repnz
insb
lds
in
scas
push
and
cmp
loop
pop
xchg
push
mov
pop
jae
mov
daa
in
outsb
pop
stos
mov
xor
adc
rcrl
sbb
xchg
cmpsl
pop
add
fbstp
jl
cmp
scas
pop
mov
testb
lea
cltd
leave
mov
rcrb
filds
pop
mov
rclb
loop
out
inc
lock
aam
push
xchg
loop
repz
cmc
jno
jge
in
bound
inc
std
je
out
int
cltd
repz
addr16
mov
mov
into
add
sub
push
sti
sub
or
inc
or
xchg
sbb
xor
cmp
fwait
sarl
inc
cmp
int
fldt
aaa
int
sbb
xchg
call
mov
in
mov
push
add
or
sbb
mov
leave
mov
jle
mov
and
pop
inc
dec
dec
je
daa
aad
lds
push
jae
xor
daa
jns
and
sahf
test
mov
xor
test
add
imul
add
lret
sbb
pop
std
icebp
enter
test
pop
imul
je
jl
aaa
or
ss
lahf
jae
mov
js
andl
movsb
dec
mov
in
jae
in
loopne
insl
out
lahf
aas
out
pop
mov
sbb
jmp
sarl
cmpsb
ds
andl
sbb
loop
xchg
into
mov
pop
jne
cmp
stc
ret
xorl
cmp
mov
fisubrl
ret
rcrb
fmuls
fwait
rep
shrl
or
dec
xchg
mov
rolb
lret
movsb
test
stc
popa
sub
lods
aam
adc
aam
sti
dec
ss
add
mov
repz
fadds
mov
call
inc
push
mov
jp
dec
ja
mov
jne
inc
lcall
sbb
adc
lods
xor
lcall
dec
cwtl
adc
aas
sti
test
loope
int
inc
push
enter
mov
mov
test
test
push
xor
mov
std
adc
jae
pop
loope
dec
cli
gs
sbb
xor
shrb
in
pop
mov
lods
mov
testl
xor
jp
cmp
mov
sbbl
add
lahf
mov
pop
mov
mov
adc
sub
mov
call
pusha
mov
xchg
jne
in
pop
es
pop
xor
mov
and
jo
adc
std
jle
push
sbb
stos
cmpsl
push
loop
shl
sub
jl
add
xor
inc
cmpsl
sarl
xchg
mov
pop
or
mov
lock
enter
mov
cwtl
aaa
mov
imul
pop
sub
bnd
and
out
jb
cmpsb
inc
std
and
cmc
movsl
xchg
add
icebp
xor
pop
add
loope
inc
dec
cs
cmp
xlat
es
cmc
aaa
sub
jmp
or
dec
lret
inc
xor
bound
fcoml
je
test
cwtl
push
xor
xchg
jae
popf
xor
pop
loop
or
cmp
cmc
leave
sbb
xchg
adc
xchg
mov
dec
repnz
cmp
jmp
mov
jmp
xlat
push
in
sarb
dec
imulb
xor
test
dec
daa
or
je
fwait
or
pop
push
bound
mov
int
vmovshdup
adc
jb
xchg
mov
mov
test
enter
lea
push
adc
daa
addr16
adc
pop
fstpt
xor
ret
ret
jle
push
or
int
jp
sahf
dec
cltd
xlat
and
pop
sub
sbb
pop
cltd
scas
fsubs
int3
into
dec
cs
inc
cs
insb
pop
flds
sub
xor
push
lahf
mov
in
sbb
sub
xchg
mov
out
das
repz
cmp
cmp
mov
fcomps
jo
mov
cmp
mov
xlat
ljmp
push
dec
pop
push
mov
xchg
dec
fidivrl
movsl
shl
idiv
mov
popf
adc
xor
or
into
mov
sbb
in
sbb
lret
xchg
sbb
and
inc
cmpsl
dec
jns
repz
sbb
dec
and
dec
mov
add
sbb
sbb
mov
mov
pop
inc
cmp
rcl
in
cmc
leave
jmp
mov
cmc
cmp
jmp
add
xor
fwait
jae
pop
outsb
add
loop
inc
shrl
push
mov
iret
outsb
fwait
jne
sahf
jle
cltd
dec
mov
aaa
test
es
cmp
mov
push
ret
jo
les
mov
sub
popf
insb
fnstenv
push
in
es
inc
pop
outsl
loop
enter
cli
mov
dec
rcrb
out
pop
arpl
les
movsb
dec
scas
popf
call
jmp
pop
in
jnp
test
and
xlat
stos
cli
js
xor
andb
mov
push
mov
cltd
lock
mov
movsb
or
xchg
xor
inc
add
cmp
hlt
imul
xor
fdivr
xor
dec
aas
outsl
dec
shrl
mov
and
in
mov
dec
out
inc
in
dec
lcall
aas
shll
mov
roll
fstpt
lahf
push
sub
jno
mov
fsubp
push
fwait
std
repnz
int
dec
frstor
add
push
pop
mov
data16
cmc
data16
xchg
and
fnsave
fstpt
cs
data16
cmp
push
es
adc
push
cld
cmp
ds
lahf
mov
mov
out
fmulp
mov
jmp
aam
sub
mov
add
cmpsl
imul
fstpt
pop
mov
xorb
xor
data16
daa
scas
sbb
jne
popa
adc
das
jle
lock
sub
cmc
push
xor
outsb
fstps
imul
xchg
pop
rcrl
or
mov
int3
cmp
loope
cmp
adc
fdivrl
std
xchg
mov
xchg
inc
les
jp
aaa
cmp
sub
daa
mov
ja
inc
xchg
jnp
adc
test
pop
int
fnstenv
jae
lock
pop
mov
imul
icebp
cmp
pop
jge
ror
inc
add
jle
add
xchg
inc
pop
mov
push
ret
jle
imul
call
cmp
fs
popa
push
lret
in
cltd
stos
fs
cmp
iret
xchg
inc
jo
pop
imul
cmp
xchg
push
xlat
mov
jno
xchg
push
pop
mov
mov
push
repz
fwait
pop
das
jp
mov
daa
inc
pavgw
mov
xchg
inc
mov
or
jne
dec
cmpsl
pop
push
sbb
leave
push
xchg
mov
pop
push
pusha
cmp
std
xchg
or
out
dec
bound
stc
mov
outsl
fwait
cmp
imul
insl
fwait
adc
fsubrs
and
mov
sub
and
into
shrb
sbb
test
ret
imul
je
fldl
lret
or
test
xlat
and
xor
dec
scas
jbe
xchg
cmpsl
mov
jo
sub
adcb
rcrl
jmp
movsb
or
js
int
inc
stc
les
bnd
sbb
xchg
fs
mov
fldcw
inc
xchg
mov
das
lcall
in
lds
add
in
sub
out
lds
mov
add
push
sbb
sub
pop
adc
or
ffree
xor
cmp
inc
mov
jo
jp
and
jl
mov
or
dec
jp
and
ret
or
pop
enter
inc
adc
inc
in
ljmp
mov
xchg
xor
and
push
adc
fcomi
dec
jbe
insl
in
into
notl
insw
jge
nop
insb
xchg
ds
jl
out
add
cli
xchg
es
add
jnp
push
jb
mov
repnz
out
mov
insb
push
push
enter
lds
pop
and
ss
test
leave
imull
pop
stc
jae
addb
xor
inc
cmp
imul
mov
sub
imul
xchg
out
pushf
jecxz
sub
xchg
into
sbb
xlat
cmpsb
iret
dec
jecxz
stos
fldl
cmp
jp
ss
sub
sbb
or
lock
lock
cmc
sarl
or
mov
sbb
jbe
adc
daa
pop
mov
outsl
mov
push
aaa
inc
xchg
rcrl
das
mov
int
xchg
mov
sbb
negl
cmp
xchg
movsl
lods
push
inc
xchg
out
push
mov
mov
mov
inc
mov
adc
cmp
aam
mov
fsubs
hlt
and
int3
dec
lcall
icebp
cld
push
push
out
ds
jbe
mov
push
pop
push
insb
es
jo
jno
or
stc
jae
xchg
dec
mov
popa
scas
or
dec
sub
cmpsl
dec
sbb
add
push
mov
jl
sub
lcall
leave
push
insl
or
sub
adc
push
push
mov
cmpsb
xchg
test
mov
mov
lcall
decl
jns
add
aad
mov
jmp
mov
mov
fsubrs
jg
or
into
sub
cwtl
dec
icebp
mov
push
add
mov
lret
xor
sbb
cmp
jge
cmpsl
jnp
stos
xchg
pushf
add
mov
sub
lock
fnstcw
movsb
std
mov
loopne
jecxz
adc
leave
mov
jns
jecxz
stc
cmpl
jbe
jno
jecxz
push
or
mov
and
lds
xor
rcl
test
cmp
inc
mov
sub
mov
jns
mov
push
lahf
pushf
test
cmp
pop
aaa
fistl
nop
jmp
mov
fisttps
aam
sub
or
out
divl
mov
mov
out
loopne
fsubrs
inc
lahf
sbb
mov
imul
mov
repnz
ss
scas
aam
sbb
cmp
mov
leave
loop
xor
rorl
or
sbb
pcmpgtd
adc
nop
or
andb
sub
xchg
xchg
xchg
push
out
push
adc
cld
dec
or
xchg
into
bound
xchg
outsb
adc
lds
ret
push
cltd
test
and
sbb
das
cmp
loop
iret
mov
adc
inc
sub
push
mov
fsubs
cltd
mov
insb
xor
test
ja
add
sbb
and
imul
fwait
icebp
inc
ds
push
fdivrs
imulb
movsb
daa
xor
xchg
fnop
add
pop
test
xchg
mov
sarl
cmp
jnp
cld
mov
xchg
mov
imul
cs
scas
inc
cmp
cmp
mov
insb
pop
jae
and
adc
jl
cmp
pop
sbb
xchg
mov
leave
in
test
pushl
cmp
shrl
sub
ss
sbb
mov
sti
sarl
in
nop
addr16
mov
out
push
jle
pop
and
sub
sbb
out
mov
jae
add
push
ficompl
or
imul
aam
mov
loopne
add
adc
adc
cmp
pop
imul
out
int3
mov
leave
in
daa
sahf
cmpb
in
lds
sbb
fistpll
popa
repnz
adcb
jle
adc
add
sub
push
and
push
dec
sarb
jl
fldt
insl
repz
sbb
lods
cmp
sub
rol
mov
jl
and
pop
lods
mov
xchg
rcll
pop
daa
scas
xor
push
adc
add
xor
cmpsb
or
pop
add
ds
add
ss
sub
fstpt
div
lcall
mov
mov
in
and
nop
fs
xor
hlt
in
rcr
push
fsubr
mov
pushf
pop
hlt
and
pop
rorb
push
outsl
sub
adc
mov
clc
dec
push
arpl
and
testb
add
adc
mov
stos
push
andb
out
cs
lret
cs
cs
adc
pop
pop
rcrb
and
outsb
insl
add
scas
push
dec
pop
cmp
dec
adc
fidivrl
je
or
into
pop
mull
mov
and
pop
jle
lret
test
hlt
jnp
es
imul
lret
je
dec
je
mov
es
aaa
dec
daa
jle
sbb
fidivrl
pop
std
addr16
jb
stc
in
in
sub
and
mov
scas
mov
cmpsb
or
adc
test
adc
jl
pop
and
or
jb
fs
or
scas
cmp
mov
mov
xlat
jb
inc
jle
inc
in
dec
iret
imul
jo
stc
dec
jo
ja
pop
inc
sarb
and
xchg
sub
orl
ss
fucomip
shrb
or
or
xor
imul
jl
push
ja
dec
fildll
and
fucom
inc
push
fs
xlat
push
mov
dec
and
mov
push
es
mov
data16
sub
mov
call
pop
inc
and
cmp
cmpsb
lds
ljmp
out
mov
int
add
rolb
cmp
mov
cmp
arpl
xor
add
lods
pop
in
stos
jl
lahf
cs
pop
gs
add
mov
xor
inc
mov
jle
imul
mov
out
jbe
cltd
jo
repz
xchg
cmpsb
nop
push
adc
hlt
mov
popa
es
jb
popa
mov
xor
xor
add
xor
xchg
in
jecxz
icebp
mov
sbb
addr16
or
xor
mov
loope
cmp
lret
pop
icebp
out
push
call
jmp
stos
outsl
je
inc
iret
lret
mov
shr
jg
jns
and
mov
pop
mov
scas
and
dec
test
mov
mov
or
ret
push
sub
mov
jmp
mov
arpl
int3
outsl
cs
push
dec
sub
mov
das
sbb
daa
cs
aas
xor
sbb
dec
push
mov
push
loopne
cld
add
xlat
push
pop
push
push
stc
sub
popa
sbb
movsl
mov
pop
add
sti
cmpsl
xchg
or
or
cmc
mov
popf
sbb
into
xor
jne
sub
push
or
dec
add
cmpsb
in
shlb
cmpsb
xchg
ret
aad
push
xchg
into
inc
jmp
push
roll
subb
cmc
and
out
mov
mov
sub
popf
and
loop
stos
popa
addl
out
cmp
lea
cmpxchg
mov
stos
adc
pop
bound
and
mov
test
mov
push
mov
movsb
cmpsl
movsb
das
popf
mov
add
jbe
mov
stc
mov
fisttpll
std
mov
mov
pop
or
push
sti
pop
inc
mov
mov
lahf
dec
ret
sti
aaa
ret
ljmp
int
jnp
pushf
sbb
negl
mov
mov
ret
lret
or
cmp
pop
rclb
js,pt
andl
xor
jg
outsb
insl
cs
jl
or
jg
pop
icebp
jo
dec
jge
aaa
in
mov
movsl
int
outsl
ja
mov
outsl
inc
hlt
mov
cmp
xchg
xchg
aaa
pop
sub
push
jl
xor
fisttps
jl
mov
add
jae
xor
push
shll
mov
sub
pusha
xor
divl
dec
xlat
mov
fdivs
or
arpl
aad
mov
add
push
xor
push
cmc
xchg
jo
out
xchg
sti
xchg
cli
xlat
and
pop
mov
lds
push
loop,pn
outsb
cmpsl
lcall
orb
cmp
ficomps
xchg
imul
push
and
sbb
mov
dec
jmp
mov
and
xchg
test
push
jl
sbb
popf
addb
std
xor
mov
negl
xchg
inc
in
int3
loope
push
bound
sub
lahf
add
sbb
mov
sahf
cltd
das
dec
add
fbstp
sbb
lock
xchg
fdivr
sarl
inc
dec
incl
xlat
popa
mov
iret
and
rcll
pop
pop
pop
rcrb
pop
lods
or
push
ds
inc
mov
fstl
ja
xchg
outsb
test
pop
or
stos
or
or
fbld
cli
add
or
in
std
dec
adc
inc
and
stos
gs
jne
jo
push
loope
xchg
xchg
aam
xchg
cli
popa
push
fistps
push
sahf
fldenv
add
mov
adc
cli
ss
dec
shll
insl
sub
mov
add
movsl
push
test
aam
cltd
push
shll
out
notb
scas
xor
imul
inc
mov
mov
stc
cmp
clc
ljmp
rorb
aas
push
push
adc
mov
sub
or
xorb
into
sahf
cmp
cmp
or
cld
shrb
test
sbb
xor
adc
in
sbb
inc
mov
jb
push
out
imul
sub
leave
and
int3
fadd
jecxz
cmpl
fdivs
xor
fidivrs
dec
out
sar
out
cmpb
xchg
mov
cwtl
call
adc
stc
jnp
mov
data16
mov
and
push
sub
sbb
shll
inc
sbb
sti
test
push
adc
adc
dec
inc
repz
fldenv
push
xchg
inc
js
push
xor
lea
push
lds
mov
cmpsl
popf
sub
jb
xchg
ret
cmpl
and
mov
mov
add
xor
pop
mov
mov
aad
pop
mov
and
shll
sub
sbb
sub
out
inc
out
es
dec
shll
mov
out
push
shlb
clc
adc
sbb
inc
test
or
cmp
aad
scas
xchg
push
dec
inc
and
gs
negl
or
filds
fiadds
out
push
aad
imul
data16
test
add
inc
negb
rcrl
or
jnp
xchg
or
lea
aam
popa
xor
call
and
add
fdivl
mov
sbb
out
jno
and
push
addr16
pop
push
daa
and
mov
roll
movsl
jae
insl
xchg
loopne
xchg
nop
dec
dec
shlb
cltd
dec
movsl
sub
adc
cmove
push
jp
mov
aas
add
mov
dec
aaa
sub
pop
loope
cmp
jb
aad
pushf
add
and
dec
lds
dec
inc
jbe
push
push
pop
mov
add
cmp
sub
dec
xchg
pop
sub
push
stos
call
sub
ja
mov
jl
fsts
pusha
push
subb
mov
sbb
addb
in
pop
ljmp
adc
cmp
lods
dec
xor
lods
jo
jnp
or
mov
push
ds
rcrb
loop
mov
pop
fiadds
cmpsl
adc
mov
shlb
in
insb
sbb
sbb
sub
test
sbbb
mov
fs
jmp
and
stos
xchg
mov
pop
repz
in
push
adc
cmp
dec
adc
cmp
in
jnp
shlb
push
pop
out
out
xchg
cmc
arpl
scas
sbb
pop
add
fwait
imul
icebp
dec
push
mov
out
imul
add
push
xor
fstpl
sbb
cmp
mov
lret
cmpsl
xor
mov
lods
les
ds
mov
sarb
out
push
dec
aam
test
fldt
out
or
iret
bts
inc
cmp
mov
outsl
push
pop
lods
mov
dec
out
xlat
imul
arpl
out
inc
shll
shr
cmp
sub
rcrl
jns
push
inc
enter
dec
divl
sbb
fcom
sahf
mov
xor
adc
iret
sbb
cmp
aas
sar
adcl
ret
mov
pop
sarb
inc
aad
lret
pop
test
lods
sbbb
inc
clc
add
xorb
arpl
sbb
outsl
or
jns
aam
cmp
jmp
scas
movsl
loop
xchg
neg
fsts
arpl
push
enter
jnp
in
movsl
push
dec
jge
cmp
pop
ficoms
popa
shlb
push
mov
mov
in
inc
and
outsl
enter
jmp
adc
in
call
cmp
dec
xor
dec
iret
out
setle
in
test
faddl
sbb
or
jg
jmp
push
fwait
mov
pop
inc
push
scas
fiaddl
jne
mov
mov
fwait
ss
push
loop
arpl
mov
test
xor
incl
push
ficoml
push
or
je
aad
mov
aas
mov
or
push
dec
xchg
pop
mov
ss
in
or
popf
xchg
fwait
in
sbb
test
lods
fmull
lods
imul
dec
mov
leave
mov
dec
fcomps
test
cmpl
xchg
add
mov
push
push
test
pop
ljmp
or
mov
jp
lock
ljmp
xrelease
pop
jo
in
sub
mov
call
and
or
out
xchg
jae
cwtl
insb
sbb
jmp
loop
inc
jmp
stos
cmp
in
jno
fwait
sub
xchg
divl
outsb
lea
std
sbb
push
lods
lock
sub
lods
mov
push
jle
xor
dec
lea
data16
add
push
iret
pop
mov
pop
adc
jge
loopne
sbb
aaa
sbb
dec
xchg
gs
inc
jg
ficomps
mov
loope
outsb
push
test
lods
ljmp
dec
push
rorb
cmp
pop
cltd
clc
push
cmc
les
sub
pop
enter
add
adc
fstl
jno
fadd
mov
popf
push
decb
jl
xchg
pushl
jp
jb
sbb
or
pop
lock
test
sbb
shll
adc
loopne
sbb
arpl
les
add
pop
sti
nop
xor
jge
sub
sti
call
mov
pop
mov
rcrl
scas
jne
sub
lcall
lods
ja
pop
ja
pop
mov
subb
cmpsb
mov
ss
cwtl
add
aaa
fs
mov
pop
mov
push
adc
mov
cmpsl
sbb
les
mov
popf
mov
push
add
adc
leave
iret
stos
test
inc
dec
inc
add
stos
ficomps
jne
in
shll
fwait
cmp
sbb
inc
and
mov
fmuls
xor
enter
int3
adc
push
ja
addr16
out
adc
lahf
mov
mov
mov
dec
decb
icebp
adc
in
add
cwtl
sbb
dec
cld
adc
push
idiv
sub
lds
xor
xchg
add
fstps
les
fidivrs
xlat
aad
xlat
mov
mov
adc
in
mov
add
mov
insl
cmp
mov
out
popa
xlat
xchg
push
in
cmp
xchg
xchg
test
ret
pop
mov
sub
mov
jnp
or
adc
mov
jo
fdivs
mov
sub
push
fnstsw
jns
cli
add
daa
negb
mov
in
aaa
push
fimuls
dec
mov
mov
sub
pop
mov
cmp
mov
jne
in
iret
and
sti
pop
inc
push
mov
movsl
fsubp
jl
int3
bound
push
mov
jae
pop
sub
sub
mov
mov
repnz
notb
sub
lods
xchg
dec
add
adc
test
lret
cmp
xlat
jo
jne
xchg
jnp
lret
xchg
stos
push
fs
dec
fwait
test
sahf
adc
std
pop
jns
jge
push
push
stc
iret
imul
aam
inc
xchg
or
or
cmpsl
xchg
jb
pop
jmp
inc
dec
jb
mov
cmp
fwait
mov
jbe
jns
push
sahf
mov
and
mov
out
jnp
sti
cs
pop
pop
inc
dec
lahf
add
xlat
stos
ja
iret
pop
jno
lock
sahf
pop
mov
xor
add
in
push
sub
xor
adc
popf
xor
cmc
maskmovq
testl
scas
mov
pop
pop
aaa
xchg
out
orl
dec
data16
adc
add
dec
jo
in
cmp
and
sub
or
repz
inc
mov
cmp
decl
inc
push
outsl
sub
sbb
push
pop
cmc
addr16
cmp
mov
mov
into
mov
or
mov
stc
lods
and
aam
pop
orb
inc
mov
mov
or
dec
mov
xchg
jg
scas
xor
push
pop
sub
cmp
jb
cmovle
push
fsubl
dec
aad
and
mov
insb
sbb
pushf
lcall
mov
cmp
xor
mov
mov
or
xchg
rolb
push
jge
sub
bnd
push
cwtl
dec
inc
pop
xor
lcall
pop
mov
mov
mov
and
inc
out
mov
fldl
inc
add
xor
sub
lahf
sub
or
xchg
jg
fsubl
dec
lods
sbb
push
sbb
adc
loop
test
inc
inc
push
ss
cs
cmp
mov
add
push
mov
push
mov
and
mov
in
outsb
lret
and
push
mov
lret
enter
outsb
dec
dec
mov
dec
jl
adc
mov
sbb
out
pop
sub
test
sbb
jg
mov
leave
int3
mov
jg
add
mov
sub
pop
jae
push
dec
fsubs
jl
add
aam
jle
inc
adc
dec
lods
cmp
mov
sbb
jle
cmc
cmp
stc
push
mov
jecxz
faddl
jmp
sbb
loop
inc
push
sahf
fistpll
shlb
icebp
insb
mov
sub
inc
iret
mov
mov
push
xchg
into
out
movsl
cmp
insb
std
subl
test
icebp
cmc
lahf
xchg
movsl
dec
cmpsl
shll
jle
cld
int
in
pop
push
mov
xchg
xor
xor
mov
int
stc
add
adc
xchg
mov
or
dec
sub
sub
mov
inc
icebp
xor
insl
dec
mov
popf
push
notb
lret
mov
lods
xor
mov
addl
enter
out
or
adc
daa
push
xchg
cmp
or
mov
in
es
sub
out
and
pop
cli
xor
out
pop
jnp
std
lods
adc
push
es
add
mov
roll
adc
lds
mov
sub
fwait
aam
ret
int3
stos
adc
cmovnp
lret
mov
push
hlt
sarb
mov
lods
jl
pop
ss
cmpsl
and
ljmp
push
scas
xor
mov
inc
mov
fwait
insb
push
loopne
fnstcw
das
sub
sub
mov
out
cmp
adc
nop
push
loop
jg
jge
and
xchg
loop
mov
inc
xor
rol
jne
jp,pt
adc
add
lods
cmc
xor
test
cli
sti
or
lcall
fwait
insl
jle
dec
pop
test
cmp
and
mov
lret
inc
xor
nop
cmp
mov
orl
notl
sahf
inc
jge
jmp
xchg
xchg
push
out
lcall
inc
ficompl
rclb
adc
jle
movsb
fdivl
mov
mov
adc
mov
sub
daa
mov
pop
push
gs
das
inc
sar
mov
dec
xor
mov
decl
test
stc
movsb
cmc
pop
add
jmp
and
or
add
xor
outsb
clc
fisubs
fwait
out
pop
inc
xchg
pop
jmp
add
xlat
cwtl
xchg
add
scas
xorps
mov
adc
fstpl
sub
adc
cmp
xor
ds
lods
and
in
fdivl
mov
xor
daa
mov
mov
push
pushf
fstps
adc
cwtl
imul
loop
and
cs
lahf
in
or
and
div
or
xchg
movsb
or
or
data16
imul
cmp
cmp
pop
btc
add
mov
stos
push
test
xchg
icebp
shll
insl
add
mov
jp
or
out
xchg
mov
cmp
pop
push
dec
lret
sti
add
movsl
or
or
in
fldcw
enter
xchg
test
xchg
hlt
out
cmp
push
repnz
xchg
dec
aam
sti
jmp
ret
lods
xchg
cmp
jmp
aad
xlat
xor
cmp
dec
pop
push
sub
inc
jecxz
jg
mov
xor
sbb
shrl
js
and
dec
cmp
or
mov
mov
lret
stc
movb
xchg
sub
dec
cmpb
nop
scas
rcll
or
cmpsb
dec
fcomip
and
jo
mov
mov
or
sbbl
enter
aas
call
addr16
adc
adc
in
cmp
out
mov
imul
into
jno
or
scas
xlat
test
lret
xor
xchg
fistps
cmp
xor
xchg
or
pop
into
jmp
loop
cs
xor
cmp
testl
sti
mov
je
shrb
gs
gs
xchg
hlt
xchg
sti
mov
mov
call
in
jg
inc
cmpl
mov
in
arpl
xor
lds
mov
cmc
pop
ss
int3
pusha
mov
pop
push
stos
push
sbb
ret
cli
mov
data16
fcomps
xor
call
and
scas
das
cmp
cmp
jmp
jnp
aas
pop
mov
pushf
dec
sbb
notb
loop
add
adc
fs
iret
pop
xor
ss
cmp
jnp
push
fdiv
test
movsb
pushf
ret
notl
lock
and
mov
or
or
iret
mov
pop
lret
and
inc
pop
sub
inc
out
and
xchg
rcl
xor
imul
lock
mov
push
jmp
push
aad
imul
pop
out
fldt
jl
jmp
mov
inc
lret
cwtl
into
jae
sbb
jecxz
inc
imulb
scas
pop
outsl
mov
xchg
fadd
mov
jmp
lret
adc
cld
test
vorps
leave
lods
inc
pop
and
hlt
inc
clc
cmpsl
pop
push
and
clc
test
sub
dec
pop
int3
test
outsl
imul
cmpsb
jb
aam
xchg
push
pop
mov
pop
pushf
mov
cmc
jp
cltd
andb
int
repz
or
lods
push
sbb
or
mov
dec
or
push
out
xlat
jge
ret
ficoml
sbb
mov
mov
daa
movsb
cmp
dec
pop
repnz
push
repz
out
test
fmulp
pop
test
pop
mov
fdivl
or
dec
inc
stos
jp
cmp
mov
inc
pop
cmp
mov
push
dec
jbe
bound
mov
mov
xorb
sarb
vpand
adc
xor
xor
outsl
mov
sahf
add
push
aaa
movsl
rcrb
mov
adc
aas
jnp
pop
lret
out
insl
jb
mov
jmp
pusha
jmp
cmp
or
ja
mov
fstpt
and
sbb
push
bound
jo
jle
loope
jp
mov
arpl
mov
xor
cmp
mov
xor
mov
push
xor
mov
arpl
dec
out
dec
jle
int3
inc
movb
push
sbb
jecxz
icebp
push
push
out
imul
sahf
leave
push
mov
or
je
mov
jae
inc
dec
iret
jns
pop
pop
adc
movsl
cmp
adc
mov
insb
xor
push
pop
fcompl
push
lcall
ds
xor
and
pop
mov
push
js
pop
push
repz
loopne
popf
rcll
inc
ret
xchg
jmp
scas
std
repnz
add
inc
rorb
cltd
cmpsb
out
je
pop
andb
pushl
mov
push
sbb
jne
xchg
sahf
mov
sub
pop
pop
and
xlat
inc
roll
push
dec
jo
mov
mov
fldt
ljmp
in
movsb
add
add
inc
mov
stc
push
shrl
push
add
repz
ja
inc
jnp
or
inc
add
jns
jmp
leave
dec
mov
push
push
push
enter
daa
mov
cmp
prefetch
or
out
mov
mov
sbb
test
bound
or
dec
and
xor
inc
fildl
sbb
sbb
cmp
adcl
sbb
mov
mov
and
ss
sbb
addr16
jg
pop
out
divb
mov
inc
je
add
pushf
lock
in
or
jae
fsubrl
pop
fisubrs
test
push
das
imul
mov
and
xor
mov
icebp
adc
adc
test
mov
or
mov
add
test
mov
inc
jge
data16
xor
mov
add
pop
gs
out
push
push
and
outsl
test
add
jmp
xor
fs
mov
sti
xchg
jge
hlt
ljmp
add
pop
jg
add
ljmp
repnz
add
icebp
adc
sbb
push
shlb
jnp
inc
cmp
add
jg
mov
push
xchg
cmp
pop
sbb
jecxz
inc
ljmp
insl
push
bnd
lods
mov
lret
cmp
icebp
mov
inc
imul
pop
adc
xor
add
test
mov
lahf
mov
btl
mov
dec
mov
insb
cmp
stos
test
repnz
cltd
scas
mov
insl
jbe
cs
test
bnd
adc
in
xchg
lock
jae
mov
cli
inc
pop
xor
inc
aam
cmp
out
mov
or
lods
inc
popf
lds
or
push
jg
lcall
in
iret
push
into
xor
push
out
jbe
mov
or
adc
xchg
cmp
daa
inc
add
out
xchg
lcall
imulb
frstor
sub
sub
cmpsl
lods
xchg
pop
mov
sahf
xchg
xor
es
dec
cltd
push
shrl
lods
pop
imul
xchg
scas
inc
jnp
fnstsw
js
into
movsb
xchg
test
dec
das
xor
jo
xchg
jo
movsb
aaa
xor
and
add
pusha
nop
lds
xor
xor
idiv
ljmp
int3
imul
inc
daa
and
push
sbb
je
lods
dec
lahf
popf
dec
or
lcall
cmpsl
leave
aam
or
xor
test
frstor
arpl
addr16
push
mov
mov
lock
xchg
adc
and
cli
lds
cwtl
fistpl
push
xchg
xchg
mov
imul
test
inc
xor
pop
mov
mov
test
dec
mov
lret
in
test
repz
mov
sub
mov
lea
push
leave
mov
xchg
addb
inc
js
inc
popf
sub
xor
sbb
popf
dec
test
lahf
inc
mov
jg
xor
dec
add
imul
incl
lea
mov
outsl
cmpsb
add
mov
mov
iret
lods
icebp
add
pop
xchg
scas
fxam
xchg
lea
addr16
adc
xorl
test
sub
ljmp
lret
mov
es
stc
shlb
ret
decl
aas
push
adc
dec
sub
pop
sti
adc
jno
inc
jge
sub
adc
fucomi
popf
jns
loopne
cmc
mov
mov
jae
negl
mov
add
aad
inc
scas
rcrl
xor
xor
mov
and
add
dec
inc
xlat
ja
add
and
or
xor
ds
push
xor
jo
punpckhbw
add
std
ljmp
inc
int3
andl
fidivl
or
and
loop
mov
cmpsl
bound
stc
mov
out
or
sub
cmp
inc
pop
pop
test
push
in
sbb
stos
or
mov
jae
jecxz
shlb
fs
shrb
fs
xor
inc
scas
mov
jg
cltd
cmc
cli
inc
andb
ret
xchg
add
and
push
push
or
rcrl
add
and
movsb
mov
xchg
scas
lahf
punpckhdq
mov
out
out
ret
or
push
popa
jae
jb
cmp
iret
fadd
aas
shll
push
adc
out
push
cli
in
add
js
add
xchg
roll
addr16
mov
rorb
cli
vpcomuq
mov
xor
push
and
xchg
imulb
enter
pop
jo
stos
mov
push
jo
cmp
sub
out
inc
dec
mov
int3
popa
push
xor
cmp
add
xor
sbb
roll
push
scas
xor
rcrb
jo
lods
std
sahf
xor
mov
idiv
inc
jne
sbb
rcll
insl
loop
xchg
inc
sub
jp
or
push
stos
adc
push
sbb
push
in
mov
and
jg
jecxz
int3
daa
push
daa
test
ret
clc
cld
adc
adcb
data16
jnp
das
lret
push
xchg
mov
ficoms
test
jo
push
test
fmuls
or
rorl
dec
jp
cltd
imul
cmp
mov
addb
nop
pop
mov
push
xor
mov
call
int3
dec
clc
lret
iret
pop
xchg
and
lret
jl
mov
gs
xor
push
sbb
dec
xlat
jno
daa
scas
lds
stc
inc
addb
movsb
enter
jb
mov
rolb
mov
add
and
dec
or
pop
andb
push
push
inc
ret
notl
test
inc
push
mulps
xchg
scas
inc
mov
pop
sub
lahf
faddl
add
mov
arpl
inc
repnz
out
jbe
pop
or
jo
push
inc
pushl
jno
jnp
mov
cmp
aaa
inc
sub
in
out
or
lret
mov
jne
lcall
ljmp
mov
pop
bound
mov
movsb
icebp
pop
test
cmp
cmp
sub
ljmp
cmp
cld
stos
mov
out
xor
cmp
push
and
not
jnp
shll
xchg
adc
push
nop
iret
push
fmul
loopne
hlt
aas
dec
movsl
fcmovne
xchg
pop
add
mov
adc
sub
popf
mov
sub
lret
jnp
pop
mov
gs
jecxz
mov
jmp
push
dec
lcall
xchg
ss
shrl
aas
sub
mov
push
inc
test
pop
shlb
pop
push
fsubr
dec
fcomps
xor
mov
in
stos
dec
nop
add
jb
mov
repnz
mov
scas
inc
xchg
push
int
divl
sti
jge
cmp
lods
or
cmc
push
mov
out
jecxz
cmpsl
xor
xchg
leave
mov
ret
push
fnstcw
mov
push
lds
sub
pop
ss
add
and
xor
les
icebp
fwait
movsl
add
push
pop
sub
fdiv
repz
in
mov
xlat
cltd
test
test
cmpsb
imul
mov
jmp
fcoms
jb
or
mov
xchg
jmp
int3
scas
pushf
imul
mov
aaa
orb
cs
inc
jb
sub
test
pop
lods
jne
nop
inc
sbb
inc
or
shlb
cmp
and
pop
stos
push
rolb
push
idiv
jae
dec
and
xor
out
scas
das
xchg
mov
test
dec
aaa
fmuls
lods
aaa
iret
jns
data16
and
jo
cli
orl
or
repz
push
jne
popa
sub
xchg
stos
mov
out
cmp
imul
inc
clc
fisubrs
and
decb
pop
or
mov
outsl
fisttpll
mov
test
inc
xchg
sub
jb
push
and
jnp
push
sbbl
scas
cmc
es
xor
loop
mov
sbb
mov
shll
sub
xchg
sbb
lea
loope
and
mov
fadd
ss
lcall
inc
push
add
jne
xor
cmp
xchg
pop
shll
adc
pop
sbb
mov
cmp
lret
out
push
mov
push
sti
je
ret
js
ffreep
cli
pop
xchg
inc
inc
cmp
mov
xorb
daa
je
pop
jle
mov
inc
mov
leave
cmp
scas
stc
lcall
cltd
mov
inc
inc
inc
xchg
loopne
mov
and
pop
and
xlat
pop
dec
xor
mov
add
mov
cmp
adc
int3
in
pushl
inc
addb
add
adc
dec
cmc
jbe
lahf
nop
out
adc
inc
fisubrs
dec
icebp
add
imul
bound
jge
inc
pop
pop
sbb
es
movsl
mov
inc
in
push
xchg
movsl
xchg
in
jmp
cmp
lds
cs
inc
cmp
cmp
adc
daa
fdivl
cmpsb
sbb
aam
mov
jnp
add
mov
or
xor
jnp
pop
sbb
sbb
mov
or
popl
out
inc
cs
jmp
les
ja
mov
push
fwait
mov
push
cmp
push
mov
lret
cmpl
out
test
daa
sahf
adcb
das
inc
cs
or
movsl
cltd
lret
jae
pop
sti
pop
in
or
mov
mov
sahf
nop
je
inc
mov
gs
lds
mov
sbb
xchg
and
jno
mov
jo
mov
lods
xchg
jb
iret
add
adc
repz
jne
repnz
mov
adc
mov
or
sbb
inc
or
and
jecxz
or
repnz
jmp
dec
push
xchg
scas
fisttpll
ficoms
adc
sbb
ret
jp
inc
mov
mov
lcall
insl
sbbl
and
icebp
fadds
hlt
pop
testl
out
sbb
cmp
push
add
fiaddl
cltd
into
les
add
and
add
addr16
push
sbbb
dec
in
fdivrs
popa
mov
lock
cwtl
nop
js
aad
cmp
sub
and
jecxz
push
sbb
or
cmp
arpl
loope
mov
scas
push
sarl
sbb
xor
xchg
dec
movsl
rclb
nop
jmp
sbb
or
mov
mov
and
push
jb
push
jne
mov
sbb
nop
stos
leave
mov
push
xor
or
push
adc
fs
and
cld
add
or
popf
xor
mov
push
stc
sbb
int
xchg
cltd
sub
pusha
ds
and
icebp
out
gs
push
jecxz
xchg
sub
inc
aaa
pop
jp
or
cmp
bound
into
or
sub
mov
lods
das
inc
mov
dec
pop
loopne
stos
sub
adc
dec
ret
out
arpl
xor
sbb
and
iret
sbb
mov
mov
sbb
cmp
inc
xchg
movl
jae
dec
and
repnz
inc
push
add
jg
pop
sarb
mov
inc
shlb
or
mov
fisubrl
call
ret
test
int3
popa
cmpb
imul
xor
adc
jp
andb
mov
dec
es
inc
stos
pop
push
xor
popf
push
mov
mov
mov
xchg
adc
adc
mov
sbb
std
mov
rorb
jns
mov
mov
xchg
in
movl
or
sahf
pushf
adc
dec
fadds
loope
data16
test
loopne
pop
jp
fwait
shlb
xchg
mov
and
mov
nop
shll
xor
sub
test
cmp
mov
std
inc
fld
cmp
jle
or
sbb
mov
adc
or
and
loop
sub
ja
aas
add
or
leave
into
xor
jecxz
push
push
mov
push
mov
jns
out
mov
test
fdiv
jg
ret
xchg
mov
xlat
dec
sahf
imul
lret
nop
lcall
insb
subl
push
mov
mov
sbbb
std
ss
mov
pop
insl
test
outsl
pop
rclb
lods
add
mov
aas
push
dec
in
fmuls
ljmp
popl
loopne
push
negl
in
fadds
pop
nop
ljmp
mov
mov
rcr
mov
mov
int
lds
xchg
ret
sub
mov
in
dec
scas
push
in
add
inc
in
push
packuswb
or
jbe
inc
xchg
shlb
inc
jle
dec
lret
push
adc
xchg
adc
adc
mov
sbb
and
enter
loope
ljmp
mov
jnp
inc
leave
add
jmp
sbb
mov
ss
push
inc
push
sub
cmp
or
rcll
cmp
or
jo
xchg
inc
jbe
sbb
lret
cs
fistl
fdivp
xor
sub
test
sbb
jo
int3
js
inc
repz
pop
push
xchg
scas
loop
and
loope
jg
push
daa
mov
push
sbb
inc
jb
push
adc
je
mov
jns
aad
es
xlat
testl
jae
lahf
xchg
rolb
popa
stos
mov
fisttpl
in
int3
sub
mov
fimull
mov
xor
pusha
jp
cmp
loop
arpl
pop
jecxz
hlt
dec
jge
lcall
xchg
clc
push
pop
das
les
jo
adc
sbb
loope
rcl
mov
cmp
and
stos
in
inc
sbbb
dec
mov
xchg
push
out
fstpt
cmp
xor
rorb
mov
mov
xchg
pop
or
push
pop
insb
outsl
sub
mov
dec
mov
and
aaa
jnp
ljmp
mov
lcall
mov
out
rorl
jno
and
js
cmpsl
clc
out
cld
dec
inc
mov
mov
push
clc
add
popa
clc
inc
xor
lods
gs
outsb
mov
or
sub
mulb
mov
push
fs
adc
push
cltd
inc
inc
sub
push
out
mov
mov
outsb
jae
rolb
cld
cltd
jo
jmp
jle
rclb
push
jl
repnz
aaa
sti
xchg
loope
sub
xor
lret
pop
fistps
in
jge
notl
jg
xor
or
mov
sub
outsb
dec
inc
jae
push
xorb
scas
mov
adc
xchg
test
lods
push
ret
rorl
je
cmpsb
mov
repz
adc
mov
ficompl
sarb
mov
adc
nop
test
int3
fistps
fistps
mov
in
cmp
jo
arpl
pusha
or
pop
sbb
lcall
mov
cli
sub
aas
int
add
adc
xchg
add
xor
pop
and
dec
jg
movsl
aad
xchg
inc
ret
pop
dec
out
cmp
cmp
es
out
jg
cli
arpl
imul
arpl
jb
vprotw
xchg
xchg
pop
xchg
hlt
pop
movhps
aam
push
xchg
mov
or
mov
cmp
inc
jno
out
out
adc
fwait
idiv
pop
movsb
gs
sub
pop
cmpsl
mov
mov
mov
adc
mov
push
push
xlat
push
push
faddl
incl
dec
outsl
repnz
pop
aas
and
pop
push
ret
lret
ss
cmp
mov
sti
repnz
sub
dec
inc
arpl
sti
adc
loope
add
out
dec
mov
mov
cmc
xchg
push
ss
mov
rcrl
mov
sbb
sti
mov
xchg
sub
dec
popa
sbb
aad
mov
lea
je
jns
adc
push
int
aas
xor
push
xchg
fdivl
cmp
mov
loopne
or
xchg
sbb
gs
sbb
jecxz
scas
les
and
xchg
lock
mov
rcrb
inc
inc
and
mov
mov
cmp
or
pusha
mov
lret
mov
in
adc
push
mov
sbb
xchg
jl
xchg
cmpsb
sub
jnp
xlat
cld
lcall
testl
mov
pop
and
ljmp
adc
jae
cmp
cmpsb
cmpsl
jb
cmp
fwait
mov
mov
adc
jecxz
cs
sbb
mov
test
arpl
xchg
cmp
sahf
dec
addr16
flds
mov
movsl
nop
jne
sub
popf
fnsave
fsqrt
icebp
mov
aas
or
rolb
and
fwait
loopne
cmp
jle
add
sub
ret
insb
lods
jge
movsl
inc
loop
adc
mov
pop
pop
daa
popa
lock
sub
adc
lods
enter
xchg
sub
orb
arpl
xor
jns
mov
mov
outsb
sub
sbb
lock
leave
leave
push
pop
ljmp
jg
mov
mov
ja
je
push
push
mov
ljmp
push
sub
push
pushf
mov
test
add
fsubs
add
inc
inc
add
pop
xlat
dec
ljmp
das
mull
and
out
xorb
aam
into
mov
outsl
dec
lods
lods
ja
dec
pop
js
jg
and
xchg
out
or
mov
imul
mov
mov
mov
xchg
sbb
mov
or
mov
pop
adc
fwait
and
ret
mov
cwtl
push
in
ja
imul
lock
push
pop
fsts
fsubp
xchg
add
sub
lock
cmpsl
shl
sbb
out
out
scas
lods
fbld
icebp
inc
xor
shl
add
cmp
dec
xor
inc
push
ljmp
jmp
int
and
faddl
leave
inc
sbb
les
aaa
gs
xchg
imul
lods
add
jmp
push
xchg
pusha
push
negb
mov
inc
mov
sbb
and
mov
fcompl
out
xchg
xlat
lret
dec
es
inc
int3
andl
das
sbb
pop
pop
and
lods
std
add
mov
sbb
cli
jge
outsb
add
ficoms
negb
out
sub
and
or
mov
insl
dec
xchg
jne
repz
and
ret
dec
hlt
pop
imul
sub
loope
add
adc
jle
aad
in
inc
daa
adc
aam
outsl
fs
sub
lds
ljmp
pop
js
cmp
mov
add
sbb
jge
sub
adc
inc
pop
out
and
cmp
add
cmp
cmc
adcb
pushf
rolb
leave
mov
and
repnz
mov
xchg
and
dec
fdiv
or
xor
movsl
dec
addr16
outsb
lea
inc
sub
pop
cs
imul
or
hlt
fiadds
cwtl
xchg
int
pop
and
hlt
loope
ljmp
fdivrs
cmovs
imul
in
rclb
mov
sbb
jmp
xor
rcrl
cltd
es
or
xor
icebp
mov
push
pop
popf
fnstsw
cld
stos
scas
xorb
inc
sbb
les
lret
sub
mov
sti
fwait
push
pop
or
lret
jecxz
movb
std
rcrl
loopne
outsb
into
int3
daa
xor
hlt
cmpb
xchg
jp
mov
dec
or
sbb
cmp
adc
pop
lahf
sub
adc
cli
pop
sbb
daa
push
xchg
movb
fistpl
mov
cmp
shrb
pop
loopne
pop
jmp
sarb
jg
std
cwtl
jb
loop
cmp
fildll
mov
movsl
scas
pusha
cmp
mov
notb
data16
pop
cmp
shr
pushf
cmp
lods
es
aas
cltd
cmp
orl
mov
rorb
add
lcall
rorl
and
lcall
in
jae
mov
cwtl
xchg
and
dec
adc
mov
out
dec
outsl
es
ret
cmc
lock
aas
add
mov
mov
mov
addl
repz
les
cs
or
ss
add
cmpsb
jmp
ret
jp
loop
jecxz
or
sti
lods
test
mov
gs
pop
aad
cltd
pop
and
ss
enter
mov
mov
adc
jbe
and
inc
push
and
stos
fmul
idiv
in
stos
cmc
or
jns
xchg
out
test
stc
lock
lret
jno
andb
inc
push
out
dec
std
andb
sbb
cli
and
scas
mov
xchg
enter
mov
icebp
xchg
xor
adc
pop
fistpll
xor
pop
jl
adc
jnp
fisttpl
add
movsb
xlat
stos
jmp
iret
push
enter
xchg
add
push
dec
jmp
and
repz
loopne
aad
jns
idiv
adc
pop
adc
test
sub
push
lods
lea
xlat
fnstcw
rclb
sarl
js
mov
and
insl
mov
cmp
es
push
dec
roll
out
pop
cmpsb
sub
mov
mov
scas
mov
ljmp
lods
test
bound
cmpsb
push
clc
xchg
mov
mov
repz
xor
fcoms
pop
add
cmp
mov
lods
mov
pop
sub
mov
pop
test
andl
fwait
ja
jmp
movsb
outsl
sub
mov
pop
dec
cwtl
shr
xlat
sti
sbb
pop
test
fcoml
xchg
cld
mov
out
mov
jbe
push
mov
orl
ret
pop
in
sub
cmp
cmpsl
xchg
jne
daa
sahf
mov
stc
mov
scas
shll
sbb
lods
fstpl
adcb
xor
movsb
test
ret
and
inc
xor
movsl
sub
movsl
add
out
and
xchg
cmp
movsl
and
cltd
sbb
adc
imul
xor
in
jns
call
xor
stos
or
mov
lods
pop
pop
pop
xchg
jns
cmpl
aaa
xchg
divb
mov
mov
mov
lcall
mov
xchg
mov
pop
dec
mov
addl
movsb
mov
and
sbb
or
dec
lahf
pop
rorb
int3
shlb
gs
fdivrs
pop
es
test
push
mov
cmpl
sti
inc
mov
arpl
xor
loope
outsl
bound
mov
movsl
push
mov
outsb
jmp
lahf
mov
inc
cmc
mov
xchg
jae
sub
das
test
pop
ljmp
imul
lret
jg
and
pop
mov
xlat
adc
orl
mov
repz
das
xchg
test
sub
scas
mov
add
inc
enter
ret
lret
push
fsubrs
mov
iret
pop
push
adc
cmpsl
jl
jbe
or
sub
movb
clc
xchg
add
dec
cmpb
pusha
jge
mov
mov
cs
sbb
jae
gs
push
scas
insb
loope
nop
mov
mov
and
jmp
popf
fbld
inc
xchg
test
ja
mov
out
sub
pusha
mov
adcl
or
jb
xchg
mov
gs
stc
adc
mov
lret
dec
and
mov
lea
mov
scas
cli
dec
leave
xchg
pop
repz
movsl
or
sbb
lret
xor
data16
add
adc
pop
add
leave
push
imul
jl
mov
std
mov
cmp
xor
idivb
dec
add
nop
test
adc
inc
mov
mov
mov
addr16
call
jp
test
inc
sbbb
dec
rol
dec
xchg
inc
push
call
pushf
cmp
add
mov
arpl
addb
mov
out
add
lock
lock
adc
fucomi
lret
in
movsb
aas
cli
aas
jne
inc
in
sbb
xchg
inc
addr16
cs
add
lret
cmpsb
lcall
orb
rorl
lret
cmc
cmp
sahf
and
add
fistps
mov
mov
dec
xchg
dec
xchg
int3
fwait
mov
mov
int3
or
add
adc
loop
mov
es
xchg
dec
sarb
repnz
pop
xor
bound
push
repnz
es
sub
push
push
imul
xchg
xor
or
imull
mov
lret
iret
rorl
stos
stc
ret
and
int
pop
xchg
fstps
sahf
cmpsb
int
mov
sarb
addr16
aaa
in
test
int
mov
andl
leave
adc
mov
out
push
xchg
push
ror
nop
dec
xor
mov
mov
xor
add
or
or
aaa
dec
jp
sub
arpl
aam
mov
sti
push
testb
nop
and
sbb
in
push
mov
xchg
data16
and
std
cwtl
cmp
dec
inc
mov
inc
cs
xor
push
ja
mov
lret
push
lahf
rolb
test
dec
lods
or
test
fstps
jl
ss
outsl
gs
pop
sbb
jne
pushf
repnz
or
lds
clc
xchg
jne
jp
cwtl
cmp
out
mov
loope
fldl
fstpl
sbb
test
cmpsb
in
into
xchg
leave
cmp
jl
stos
inc
xchg
xchg
fists
cltd
cmp
daa
movsl
jbe
xor
jmp
sti
mov
imul
adc
push
and
pop
pop
mov
adc
xor
cli
ljmp
jae
es
or
cmp
add
mov
pop
push
push
add
or
jle
mov
ja
popf
xor
mov
daa
cmp
mov
jns
arpl
mov
sub
mov
push
bound
mov
mov
push
clc
nop
xor
push
nop
aas
mov
sbb
adc
mov
mov
shl
cmp
jl
sbb
shlb
xor
mov
pusha
imul
movsl
repz
add
or
sbb
xchg
movsl
ja
test
cmpsl
in
test
cmpsb
cmc
and
les
sbb
nopl
cmp
inc
fwait
fwait
aad
lret
sub
iret
out
adc
jo
in
filds
outsb
mov
lods
xor
int
add
inc
fs
lahf
icebp
jmp
inc
xchg
andl
in
jb
out
filds
mov
mov
inc
stos
lret
jp
rcll
leave
cmp
pop
js
inc
insb
std
mov
sbb
pusha
sub
leave
cmp
fnstenv
lock
inc
imul
fsubr
les
sub
xchg
movsb
mov
je
and
jae
rclb
adc
sub
lea
xor
out
jnp
xor
jg
jno
xor
in
cmp
mov
cltd
das
add
dec
dec
mov
fwait
out
pushf
xor
stc
push
shll
pop
adc
inc
out
sub
dec
dec
sahf
pop
jns
popa
sbb
mov
insb
jg
mov
lret
mov
mov
lods
shl
adc
or
inc
xchg
ret
add
ds
sub
pop
jle
out
or
mov
mov
stos
jg
inc
adc
inc
mov
shr
vpsubb
out
adcl
pop
sbb
and
mov
dec
out
and
sbb
pusha
or
push
inc
sub
call
pushf
xchg
adc
adcl
mov
pushf
ret
mov
jmp
repz
push
stos
and
mov
inc
jo
adc
ret
das
mov
sbb
adcl
xchg
dec
or
rolb
dec
or
shlb
out
mov
add
push
inc
cmp
in
adc
mov
xor
mov
lea
lods
mov
pop
iret
loope
mov
scas
fistl
mov
xlat
xchg
inc
jle
jmp
fisttpl
cltd
test
pop
lods
add
and
xchg
pop
jmp
adc
push
in
push
fimuls
jns
sarb
xor
out
inc
into
cmc
lahf
mov
mov
aam
iret
jbe
push
mov
leave
imul
pop
negb
testl
and
cld
fsub
cmp
inc
scas
and
lcall
cltd
outsl
leave
pop
pop
jnp
fdivrp
repnz
add
push
push
xchg
arpl
cmp
fistpll
or
sbb
bound
pop
mov
pop
dec
or
inc
and
push
inc
insb
call
mov
sbb
rorb
hlt
pop
xor
jne
add
aad
out
adc
mov
mov
mov
sbb
mov
movlps
test
sbb
decl
lahf
jl
dec
mov
inc
and
stos
shrb
in
lods
pop
pushf
push
aaa
or
imul
mov
dec
int
add
adc
jnp
int3
subb
cmpsl
mov
and
jno
loope
jg
ljmp
and
sti
out
inc
fdivl
cmp
dec
pop
sub
outsl
mov
inc
pusha
jno
faddl
and
mov
pusha
jns
test
pop
cld
iret
push
xchg
ljmp
lcall
mov
push
gs
push
cld
aam
lret
ss
shr
inc
push
rclb
aad
ljmp
rcr
idivb
xchg
fwait
mov
cmc
popf
add
out
pop
imul
aad
mov
adc
popf
test
pushf
jnp
push
lret
lcall
mov
cmp
adc
add
les
gs
lcall
inc
or
iret
es
scas
mov
mov
pop
fstpt
cwtl
rcr
lods
fxch
adc
jmp
and
stc
xor
lods
cmp
xlat
push
xchg
sahf
sbb
test
jb
test
std
mov
sbb
ret
out
lea
inc
push
mov
cmc
jp
in
mov
in
pop
xor
scas
ffree
jnp
cmp
loopne
xchg
push
push
xchg
imul
loopne
dec
push
out
mov
sahf
pop
fucom
cld
mov
and
roll
rol
mov
fwait
jl
xchg
ss
xor
stc
ret
outsb
inc
aas
jl
out
pop
daa
mov
dec
dec
xchg
xchg
dec
insb
xchg
daa
sbb
cmp
cli
out
mov
jmp
popa
rcrb
sti
and
pop
stc
lcall
mov
std
out
cltd
and
fcmovnb
inc
call
outsb
xor
adc
sti
dec
movsb
in
pop
in
mov
sbb
pop
pop
in
shr
cld
or
adc
mov
int3
mov
cwtl
mov
sub
repz
inc
outsb
rorb
adc
dec
mov
mov
sub
inc
push
inc
or
push
cmp
inc
push
daa
das
mov
and
scas
fcompl
inc
push
rolb
movsl
out
adc
fsub
notl
xlat
test
test
cmpl
mov
out
and
xchg
xlat
int
popa
or
test
xor
pop
nop
mov
cli
loope
mov
js
dec
push
js
adc
push
add
mov
dec
dec
push
or
xor
mov
leave
mov
mov
push
sbb
push
add
pusha
stc
sub
loop
fwait
lcall
or
js
xchg
test
pop
dec
lret
mov
ds
popa
adc
push
pop
sbb
std
aad
jmp
push
push
mov
xor
inc
int3
lret
jecxz
pop
push
or
xchg
pusha
arpl
jno
in
je
mov
movsl
ror
and
add
cmp
int
out
aam
mov
inc
push
mov
jge
pop
fldl
sbb
sbb
adc
and
adc
push
sahf
pop
add
sbb
aam
addr16
adc
in
rcr
js
test
cld
mov
inc
push
cwtl
popf
or
int3
lret
push
mov
cli
or
push
sbb
mov
scas
test
mov
push
xchg
jb
notb
jle
mov
test
out
shl
test
cmc
dec
cmp
xchg
sbb
cmp
fcoms
add
test
flds
testl
ljmp
inc
sti
sbb
pop
jl
dec
or
sbb
adc
cmp
push
nop
dec
jno
sahf
mulb
cld
push
jl
xchg
lods
ret
fwait
add
pop
pop
rsm
test
ret
adc
lea
ds
jae
adc
loop
cwtl
int
push
pop
adc
xor
cmp
loope
shlb
jnp
nop
jae
hlt
mov
sbb
push
lods
js
cmp
imul
mov
dec
cltd
sti
aam
les
jle
icebp
test
jo
push
or
mov
in
fmuls
lcall
xchg
mov
arpl
add
xchg
jb
mov
in
push
push
mov
les
lret
and
test
inc
cwtl
call
imul
shr
popa
jl
jge
push
pop
mov
mov
aas
inc
loopne
jg
xchg
nop
jmp
sar
and
push
pop
xor
push
pop
inc
pop
ss
adc
outsl
lahf
pop
mov
call
scas
shrb
repz
xchg
test
stc
ljmp
shl
loope
dec
aas
out
inc
push
sub
scas
add
push
pop
sbb
add
inc
inc
xchg
jmp
dec
out
add
add
cmp
push
ret
aaa
mov
cwtl
sahf
add
out
lock
sti
xor
mov
xor
mov
jg
push
mov
cmp
jmp
sbb
in
aas
inc
outsl
cmp
xor
dec
adc
cmp
dec
pop
fstl
cmp
fdivs
xchg
mov
lret
fwait
inc
jnp
mov
pop
mov
xchg
xchg
aas
fisttps
jne
cmp
enter
cs
lret
stos
pop
mov
jne
mov
rcrb
push
lock
stos
lcall
aaa
mulb
lret
cmpsb
xchg
xor
popa
out
test
addr16
popa
test
loopne
fwait
movsb
enter
push
cmp
sbb
jne
stos
add
popf
cwtl
jmp
lcall
cmp
cmpsl
inc
std
xchg
lea
test
nop
stos
test
inc
mov
addr16
outsl
cld
mov
dec
dec
push
xor
das
fs
mov
lds
or
ret
jge
out
pushf
adc
mov
and
call
dec
stc
cltd
mov
sbb
pop
in
add
imul
push
lret
daa
movsb
jle
std
xchg
adc
fwait
outsb
pop
mov
out
mov
or
imul
add
bnd
outsb
in
sub
movsb
add
sahf
push
adc
sub
aas
bound
jb
cli
mov
mov
and
daa
in
outsb
sub
or
repnz
in
cmp
out
mov
aam
mov
hlt
add
cmp
test
lods
dec
ret
sbb
dec
idivb
dec
mov
out
jl
je
sbb
pop
lahf
bswap
mov
mov
lods
ljmp
cmpsl
mov
fdiv
sti
sar
inc
fsubrs
dec
or
enter
js
mov
cltd
cmp
mov
test
shll
or
lds
xchg
hlt
mov
mov
ja
sbb
sahf
and
in
sbb
ret
ljmp
scas
js
lock
sbbb
into
pop
mov
pop
xor
jns
mov
enter
dec
je
sbb
clc
neg
xchg
inc
sub
add
lods
mov
sub
pop
popf
movsb
inc
cmpsl
gs
jnp
jo
lahf
into
adc
dec
jecxz
test
iret
inc
mov
pop
into
or
into
aas
sub
adc
xchg
dec
dec
jecxz
sub
lret
icebp
push
lret
sbb
jmp
jb
pushf
test
or
push
jecxz
xor
sbbb
push
int
sub
nop
sbb
jb
jge
sub
pop
data16
xor
xchg
adc
mov
lahf
inc
mov
fistpl
mov
filds
inc
in
cmpl
pushf
jmp
sub
enter
sub
jmp
xor
dec
outsl
idivl
addb
js
xchg
push
cmp
pusha
sub
push
out
stos
pusha
iret
lods
xchg
mov
in
adc
loope
mov
ss
cmp
add
mov
cmp
aas
xorl
fbld
xlat
mov
inc
cmpsl
rorl
imul
sti
out
arpl
aad
rorb
cmp
lahf
pop
addl
and
gs
adc
xchg
imulb
pushf
sbb
je
jns
mov
scas
repnz
push
lea
loopne
add
cmp
jo,pn
and
push
jo
cld
lock
mov
sub
xchg
or
out
ds
ja
push
xorl
jle
add
mov
cmp
dec
mov
mov
cmp
jno
add
and
adc
dec
jecxz
out
mov
stc
loopne
push
xlat
lock
aaa
inc
sub
sub
jno
xor
test
mov
mov
xor
cltd
sub
or
dec
aam
jnp
push
ljmp
shrl
pop
cltd
add
xchg
mov
xchg
inc
xchg
jbe
popf
and
ficoml
scas
pop
in
jmp
movsb
lcall
and
mov
cld
popf
cmpsl
mov
xchg
jp
inc
push
mov
inc
lods
mov
enter
push
push
in
das
push
jecxz
xor
jno
fs
jg
mov
lret
int3
add
pushf
fs
mov
sbb
pop
sub
cmpsl
dec
mov
sbb
mov
xchg
cs
ror
inc
jg
jnp
lahf
jmp
push
or
aas
or
xor
sbb
xchg
outsl
cmpsb
xchg
sub
sub
adc
lfs
fisubrl
ja
jbe
mov
sub
jo
clc
into
mov
jo
fs
sbb
mov
mov
arpl
cld
loope
rorl
sbb
lret
in
je
test
lahf
jl
scas
mov
lods
cmp
or
mov
aas
mov
lock
inc
mov
loopne
into
xorl
mov
sub
das
pop
pushl
fnsave
cmc
mov
adc
or
nop
mov
bswap
xor
ja
push
push
pusha
cltd
xorb
dec
lahf
cmp
dec
jne
push
xchg
push
rorl
mov
and
test
cmp
or
jge
pop
repz
lret
or
pop
out
call
lods
push
std
and
pop
jge
stos
jne
cmp
fucomi
sub
stc
xchg
scas
hlt
bound
jb
bswap
mov
xchg
pop
mov
adc
gs
push
cli
and
addb
cmc
into
inc
add
lock
pop
fstpt
dec
adc
xchg
lahf
popa
xor
push
cmp
out
and
pop
dec
push
outsb
imull
mov
in
repnz
int
arpl
shrl
mov
arpl
push
movsb
int3
fimuls
dec
je
or
cli
fcmovne
jp
cwtl
ds
addb
mov
mov
out
dec
pop
mov
stc
mov
rcll
loopne,pn
jb
clc
push
xor
inc
mov
adcb
adc
rcl
in
pop
pop
cmovb
pop
out
dec
movsb
aad
lcall
add
rorb
xchg
js
frstor
sarl
push
adc
sarb
cmc
lock
xlat
cmc
popf
sti
push
mov
push
xor
xchg
cld
adc
cli
mov
mov
cmc
xchg
ljmp
popf
xor
js
add
lret
leave
lcall
dec
xor
push
fstl
loopne
mov
arpl
push
out
pop
pop
pop
sub
cli
jmp
push
iret
pop
xchg
jo
pop
push
sbb
std
lahf
incb
jmp
insb
dec
mov
int
lods
clc
or
xchg
sub
test
cmp
and
pushl
mov
bound
mov
xor
sub
into
lcall
test
push
dec
aad
lds
adc
jnp
mov
inc
movsl
mov
sahf
and
jp
sti
jl
mov
sahf
ficoml
fldcw
inc
int3
cmp
jg
js
push
pop
shrb
xor
cmp
mov
push
inc
nop
jo
sbb
xchg
cli
add
fldenv
call
das
dec
pop
sub
xchg
insl
mov
das
mov
adc
xchg
xor
xor
add
lcall
push
xor
inc
test
out
enter
add
push
aam
repz
movsb
fsubrs
add
movsb
test
enter
test
pop
std
xchg
pop
in
lcall
lea
stos
fwait
cmp
xchg
aam
jl
jl
mov
jb
lret
arpl
lcall
mov
mov
fisubs
mov
and
hlt
ss
adc
call
sbb
movsb
sahf
call
stc
jge
dec
call
pop
add
in
pushf
xor
push
in
mov
add
add
and
push
pop
lcall
jmp
lods
lret
sbb
lods
cwtl
fcmove
dec
dec
leave
push
lcall
cmpsl
pop
cmp
mov
testl
sarl
and
fwait
stc
bound
int
pop
scas
dec
movsb
xchg
roll
and
push
hlt
in
and
push
add
lods
ret
xor
mov
fwait
xchg
pop
mov
mov
xchg
bnd
mov
mov
cmp
ficoms
and
mov
add
or
lods
test
addr16
stos
push
sub
pop
xlat
or
arpl
stos
test
in
or
sbb
out
jb
pop
test
xchg
or
or
or
enter
pop
push
cwtl
or
cmp
es
push
push
xchg
clc
push
jns
push
pop
dec
mov
jl
sbb
iret
jge
push
outsl
mov
mov
sub
daa
mov
rol
add
loope
mov
cmp
adc
sbb
mov
adc
dec
or
mov
push
pop
pop
mov
pop
adc
sub
ss
subl
xor
fbstp
and
pop
sbb
dec
sub
test
mov
inc
push
js
jl
cmp
xchg
jp
pusha
inc
mov
dec
stos
sahf
xorl
cmp
xchg
test
lea
sbb
aam
xchg
or
pop
cwtl
push
icebp
cmpsb
loope
fbstp
and
arpl
adc
dec
andl
call
mov
lds
push
or
adc
jb
push
inc
sub
test
sub
push
js
push
lds
lret
mov
test
fs
lret
jge
das
lret
mov
add
jae
push
in
pop
push
dec
orl
ret
inc
out
xor
in
out
or
sbb
fnstsw
stos
fnstsw
jle
mov
fisttps
adc
aas
enter
leave
mov
cwtl
mov
mov
xchg
out
add
or
scas
or
xor
mov
pop
mov
fs
cmp
or
cmp
clc
cmp
push
sahf
xchg
movb
and
inc
xor
nop
repnz
xchg
mov
ror
leave
mov
push
imul
sbb
daa
adc
or
inc
fildll
cmpl
sub
out
fstl
in
push
xchg
adc
mov
or
adc
aam
repz
repz
pop
in
sbb
scas
pop
cmp
imul
sbb
mov
pusha
push
fdivrl
ljmp
not
sub
lds
mov
cmp
ret
fmull
or
and
dec
cmp
je
xchg
mov
sbb
stos
nop
test
aad
xchg
and
add
or
repz
mov
cmp
sub
or
inc
mov
gs
or
cmp
jl
inc
bound
rcrl
mov
mov
outsl
imul
pop
mov
int
dec
arpl
xchg
stc
cs
cmpsl
out
sbb
fidivs
in
popl
scas
in
daa
add
push
and
mov
push
adc
cwtl
or
mov
push
test
lock
sbb
add
jp
stos
mov
xchg
mov
in
adc
adcb
out
cwtl
stos
mov
dec
sub
fdivs
sub
lods
jg
jo
shrb
mov
pop
arpl
add
cltd
int
pop
jo
jge
pop
arpl
leave
fsubr
in
out
xor
shll
inc
icebp
pop
lret
test
lahf
fnstsw
hlt
xchg
movl
cmpsb
ret
je
xor
cmp
pusha
adc
loop
cmp
call
push
pop
ret
or
insl
lahf
mov
enter
lds
xchg
mov
sub
dec
xor
loop
dec
das
shrb
push
pop
nop
sub
cmpsl
pop
jne
or
lret
mov
ljmp
cltd
lea
out
push
into
add
pushf
mov
lods
push
adc
adc
shr
add
ret
ret
pop
rorl
rcl
imul
lods
bound
addr16
push
mov
cmp
and
subl
adc
inc
adc
mov
cmp
cli
and
call
mov
jns
lea
loopne
sti
inc
jb
push
addl
jo
xchg
lret
sub
dec
gs
sbb
inc
stc
or
dec
pop
sub
pusha
xchg
scas
cmp
mov
mov
pop
sub
sbb
fwait
dec
xor
mov
fsubl
insb
mov
cmpsl
mov
add
push
and
aam
insl
sub
push
xor
stos
jb
hlt
add
mov
daa
mov
inc
dec
mov
mov
clc
pop
xchg
jmp
lret
fwait
inc
mov
xchg
and
jnp
call
mov
divl
or
jg
rcrb
sbb
push
fcmovnbe
xchg
or
xor
cmp
std
cld
xchg
pop
cmp
adc
push
and
roll
repnz
dec
lock
and
push
push
ja
lahf
sti
psllq
mov
mov
inc
js
jb
pop
push
xlat
dec
mov
ljmp
cmp
pushf
enter
cmc
sbbl
ret
es
push
scas
add
xor
mov
inc
inc
popa
push
mov
add
xchg
jno
xorl
lret
and
jp
cmp
mov
loopne
shrb
stos
mov
enter
inc
inc
popa
xor
cmp
inc
aad
jecxz
ja
aad
push
jg
lcall
inc
sub
dec
cmp
sub
pop
adc
fimull
dec
in
test
xchg
cmp
sbb
adc
aam
aam
mov
mov
jmp
lahf
push
jae
loop
lret
pop
lods
insl
or
mov
pop
sbb
xchg
adc
xor
dec
shlb
jnp
dec
jo
push
pop
jbe
xchg
outsl
dec
ret
sub
call
inc
test
xor
xor
mov
fistpll
xchg
ret
rorl
mov
pop
out
sbb
in
aam
pop
insl
sub
add
dec
or
push
pop
imul
decl
loopne
adc
jecxz
jle
loop
push
pop
mov
mov
xchg
nop
xor
sub
xchg
and
cwtl
and
jg
sub
enter
out
dec
jge
sub
jl
push
aad
jle
addr16
test
test
dec
mov
call
int3
or
loope
nop
scas
sahf
out
into
in
xchg
jge
adc
adc
mov
adc
adc
imul
rorl
pushf
shl
mov
mov
aaa
cs
imul
fwait
cmp
in
imul
and
inc
gs
or
pushf
dec
aas
inc
push
pop
int
je
movsb
rorb
addr16
push
adc
xor
mov
je
repz
out
or
add
push
ret
sbb
xchg
push
loope
xchg
outsb
adc
popf
jne
sub
outsb
sbb
mov
cli
jno
arpl
xor
push
out
test
iret
pop
scas
xchg
inc
and
imul
cmp
jmp
in
xlat
movsl
sti
pop
bound
push
mov
std
rcl
repnz
in
outsl
mov
and
cltd
jb
mov
popa
mov
xor
add
jo
sbb
mov
xchg
mov
ljmp
iret
pop
mov
les
into
mov
jno
out
xor
in
dec
fstl
mov
jle
mov
in
les
push
insl
jmp
ficomps
inc
pop
push
or
gs
lret
not
pop
es
adc
int
lds
outsl
sub
cmp
jmp
cmpsl
repnz
push
sub
add
iret
sbb
cmp
std
adc
shll
jmp
lods
mov
cltd
mov
adc
scas
cmc
bound
sub
insl
lock
push
insl
jmp
mov
or
push
cmc
xchg
fwait
pop
push
in
addr16
sarb
fimuls
and
adcl
not
sbbb
push
push
out
cmp
inc
sbb
enter
jp
push
imul
in
aaa
imul
xor
mov
fmul
movb
popa
loopne
sub
add
pop
imul
push
xchg
fwait
into
mov
int
mov
iret
fildl
mov
mov
into
dec
sbb
jg
nop
cmc
in
cmp
insl
call
add
jmp
stos
arpl
xchg
sahf
mov
sbb
jbe
je
lret
test
pop
pop
pminsw
sub
cmc
shrl
jb
sub
and
in
sub
mov
sbb
fs
inc
ret
iret
lds
pop
inc
mov
out
mov
sbb
xchg
adc
adc
fbld
daa
pop
jnp
sbb
xor
adc
mov
fidivl
mov
movsb
inc
mov
imul
mov
mov
sub
gs
mov
popf
lods
ss
dec
outsb
fstpl
add
fstps
sub
sub
sbb
or
test
inc
out
lock
pop
adc
pushf
les
add
lcall
mov
je
mov
dec
imul
repz
lods
mov
xchg
jmp
sahf
or
xor
bound
xor
push
outsl
leave
dec
fwait
dec
adc
mov
push
lods
or
pusha
subb
mov
and
mov
pushf
push
jno
xchg
and
mov
test
jl
daa
iret
pop
mov
movsb
jp
outsl
std
xorb
push
push
test
ror
rorl
dec
mov
xor
mov
pop
push
and
bnd
shll
dec
sub
and
out
fsub
ss
inc
ret
sbb
int3
and
ret
sahf
popl
out
daa
lret
pop
fwait
pop
fucom
aam
loop
pushw
or
mov
fistpll
or
jle
mov
dec
xchg
faddp
imul
sbb
pop
sbb
and
push
xchg
pop
push
outsb
mov
rcll
lahf
stos
js
and
mov
jne
es
decb
xchg
push
mov
or
push
mov
or
adc
cs
mov
dec
in
int
fisubl
and
popa
stc
hlt
loop
xchg
jns
push
int3
or
fsts
xchg
movsb
adc
mov
loope
dec
in
dec
add
psubq
popa
cmp
or
rep
push
stc
pop
lods
sbb
xchg
ret
out
cmp
and
hlt
ret
loope
iret
push
sbb
ret
cwtl
mov
mov
data16
mov
into
push
push
mov
pop
sbb
jns
add
adc
popf
push
inc
jmp
addr16
add
push
xchg
dec
sub
or
and
fs
clc
jle
jecxz
cmp
stos
sbb
lock
sub
pop
sub
test
mov
sub
call
dec
movb
or
lds
lret
scas
dec
adc
ret
test
aas
fbld
mov
mov
out
jmp
cmpsl
lret
loope
inc
psubusb
push
sub
push
ja
fsubrl
out
mov
mov
dec
sbb
lods
enter
inc
fsts
std
mov
cli
lret
pop
iret
repnz
xor
pop
xchg
mov
daa
rcrb
mov
mov
in
into
cmp
fidivrl
xor
xchg
jl
pop
aam
pusha
mov
loopne
mov
or
push
repz
adc
push
pusha
lods
popf
inc
mov
iret
xor
fnstcw
icebp
xchg
cmp
push
nop
xor
mov
jnp
cmp
mov
pop
cmp
jbe
insb
int
lea
popa
pop
shll
mov
mov
stos
sub
enter
sbb
stc
jno
nop
xchg
mov
hlt
jecxz
and
mov
movsl
pop
into
pushf
fisubrl
push
scas
pop
and
add
dec
popf
adc
xor
cmp
pop
push
fsts
aas
push
fsub
add
in
out
adc
mov
xchg
jecxz
jmp
je
xchg
mov
add
sbb
dec
sbb
das
lock
mov
popf
inc
loop
lahf
mov
shl
mov
movsb
push
mov
sbb
jmp
mov
fdivl
pop
pop
scas
jmp
lcall
cld
hlt
sub
sub
or
out
fdiv
inc
pop
xchg
shll
sub
jno
das
test
ljmp
sbbl
or
out
mov
es
clc
dec
xchg
test
xchg
push
adc
pop
in
aas
push
pop
push
mov
negl
push
je
notb
fldenv
loop
xor
addr16
mov
lahf
cmpsl
inc
dec
out
loop
rcll
xlat
lret
jno
idiv
xor
add
and
popa
pop
ljmp
les
je
aam
push
lret
pushf
movsb
in
in
jbe
add
arpl
sbb
dec
dec
mov
mov
pop
jp
out
pop
cmp
ss
mov
subl
adc
rcrl
jae
scas
out
cmp
push
cli
inc
mov
jle
pop
push
mov
mov
repz
out
fdivrp
dec
lods
sbb
xchg
js
dec
dec
sub
icebp
dec
mov
repnz
mov
int
sahf
int
jmp
cmpsb
xor
shr
rolb
aaa
dec
or
or
or
inc
mov
loope
xor
push
push
xor
test
push
rolb
push
ljmp
mov
mov
cmp
movsl
aas
add
out
and
lds
cmpsb
cmp
ret
cmp
test
sub
shl
mov
mov
cmp
cmc
ja
or
movsb
lret
xorb
sub
movsl
cmpsb
mov
mov
mov
loopne
add
test
push
jp
mov
xor
outsl
add
jo
std
outsl
shl
ds
enter
cwtl
call
stos
xchg
jns
xchg
subl
shrb
and
outsl
jbe
sbb
bound
dec
je
inc
xchg
sbb
xchg
jp
sahf
test
cmp
gs
adc
cmp
pop
xlat
push
sbb
cmpsl
sahf
int
shrb
push
loop
xlat
mov
xor
push
fistpll
cmp
add
sbb
frstor
daa
ja
cs
pop
mov
imulb
in
pop
repnz
test
fstpl
inc
hlt
xchg
repnz
mov
sbb
ror
or
add
sbb
incl
mov
push
lret
nop
outsb
daa
mov
adc
jle
std
mov
fwait
xor
mov
xchg
ret
and
out
jae
inc
out
movsb
das
inc
jo
add
roll
test
jae
addr16
mov
mov
cmp
mov
mov
aad
dec
mov
fmul
sub
and
push
push
or
mov
int
cli
xchg
mov
movsl
pop
insb
and
stos
loope
fdivl
data16
xchg
push
pushf
aas
ja
cmp
fsubs
rorb
ss
jns
push
jge
xchg
js
dec
mov
movsl
and
add
jmp
xor
jns
fldt
negl
adc
fcompl
loopne
sub
popf
pop
lods
int
mov
out
movsl
dec
or
out
sbb
or
les
mov
lock
mov
test
js
in
lods
rorl
test
dec
aam
adc
pop
dec
dec
mov
ret
test
daa
push
repz
jecxz,pt
repnz
arpl
sahf
les
mov
addr16
lock
jbe
mov
inc
push
sbb
dec
rorb
and
sahf
insb
or
inc
mov
adc
inc
push
adc
rcl
xlat
shrb
lock
pop
popf
pop
je
cwtl
loope
pop
push
cs
sub
adc
test
cli
subl
mov
insb
sbb
xchg
dec
sub
dec
out
jmp
ds
fcoms
repz
pop
or
fstpl
add
jno
adc
push
push
jg
pop
loope
jmp
repz
sub
lret
scas
and
dec
outsl
ja
sbbl
stos
in
das
lret
mov
mov
mov
andl
adc
test
push
add
sbb
sub
sub
lcall
cltd
jb
push
xchg
movsl
mov
cmpsl
push
ss
cmc
push
iret
mov
xchg
popl
inc
adc
push
adc
mov
test
rep
int3
add
fnsetpm(287
push
dec
jge
in
add
mov
aad
push
adc
xchg
lcall
in
xchg
cmc
sub
std
pop
rdmsr
inc
fnstenv
and
int3
movsl
cs
inc
mov
mov
jns
and
xchg
inc
inc
push
test
out
jmp
sub
pop
xchg
insb
cmp
xchg
sub
jle
mov
jb
and
popf
xor
adc
in
mov
mov
xor
lahf
or
outsl
mov
jge
out
testb
stc
stc
popa
lea
push
or
fidivrs
sub
int3
popa
mov
cli
inc
mov
cmc
cltd
addr16
cs
cwtl
gs
pop
aaa
push
sbbb
sub
into
sub
test
add
jno
push
loopne
mov
lcall
add
push
adc
xchg
mov
in
and
test
ja
mov
scas
mov
mov
pop
shrb
fildl
addb
or
mov
in
das
test
ret
aam
adcl
fidivrs
add
jp
dec
mov
lret
lock
decb
cmp
or
mov
lahf
call
jg
es
in
iret
sahf
and
xorb
jmp
jmp
ficoms
jae
inc
adc
mov
push
cltd
repnz
sbb
sbb
rcrb
test
jnp
xchg
outsl
add
outsl
movsb
jmp
xchg
stos
jge
mov
adc
not
rcr
arpl
popf
mov
dec
insl
jle
push
pushl
mov
loope
dec
pop
adc
call
outsb
jle
jb
movswl
in
xchg
loopne
out
aaa
aas
fldl
adc
mov
addr16
pushf
pop
ss
nop
jne
push
iret
arpl
and
xchg
daa
inc
push
nop
cs
mov
pusha
adc
cmp
cmpsb
gs
lea
push
into
mov
std
cmp
add
or
std
rorl
out
dec
and
sbb
push
sub
mov
xor
mov
push
repnz
jb
dec
imul
pop
stos
gs
lock
jmp
cwtl
fs
inc
adc
pop
sbb
push
xchg
int3
pop
in
sub
xor
cmp
sti
dec
cmc
adc
xchg
test
inc
in
adc
jno
cmpsb
aam
popa
xchg
mov
push
pushf
data16
jns
in
scas
jb
ror
scas
xor
stos
ret
rcrb
scas
scas
pop
or
adc
rorl
orb
cmp
add
add
and
iret
inc
cwtl
sti
mov
cmp
cmpsb
lret
ljmp
std
pop
rcll
aaa
and
aad
out
packssdw
stc
jmp
fisubrs
into
into
out
pop
and
mov
or
out
bound
cmpsl
aam
xchg
add
outsl
data16
cmpsl
mov
jp
lret
inc
inc
mov
and
adc
je
leave
test
in
aaa
mov
jmp
mov
pop
test
pop
add
or
mov
pop
jo
jns
adc
mov
and
jmp
arpl
lahf
sub
sahf
and
push
or
or
add
sub
jo
add
ss
dec
dec
adc
or
outsb
push
mov
dec
cs
roll
test
pusha
sub
lock
push
mov
xor
sbb
and
test
and
mov
je
pusha
ljmp
inc
jl
subb
xchg
inc
repnz
mov
imul
scas
push
jmp
ret
pop
push
cwtl
xor
popf
jne
cmpsl
ljmp
mov
icebp
sub
fmul
pop
lahf
in
arpl
fwait
pop
inc
adc
in
out
shlb
sbb
sub
inc
lcall
aad
jl
sub
sub
mov
adc
popf
movsl
jge
loopne
repz
stc
sbb
fwait
pop
loopne
and
data16
scas
scas
lods
pop
iret
mov
pop
shr
int3
xor
mov
nop
sarl
xlat
lcall
mov
mov
mov
jae
xchg
in
push
adc
std
push
inc
xor
pop
and
dec
stc
aad
mov
rcr
pop
es
mov
ss
aaa
idivb
daa
jle
aam
mov
inc
and
out
adc
rclb
les
or
xor
sub
push
adc
dec
mov
mov
insl
mov
add
push
mov
pusha
xor
sbb
inc
mov
and
dec
or
ret
push
sub
jmp
scas
add
js
pop
loopne
mov
das
adc
sbb
pop
scas
inc
daa
out
int3
ja
mov
insl
repz
loop
mov
sub
clc
in
into
fs
add
bnd
notb
and
call
sbb
jg
add
call
lcall
push
push
insb
test
into
inc
faddl
arpl
fcompl
dec
dec
loope
adcb
or
add
cmpsb
popa
xchg
and
push
and
and
js
cmpb
fistl
add
adc
cli
lahf
mov
adc
jo
and
outsb
jge
sub
and
es
push
cli
sub
ret
or
daa
push
fwait
push
inc
loop
adc
push
pop
mov
jle
jns
pusha
mov
lock
mov
xchg
jmp
lahf
lcall
push
pusha
pop
inc
bound
aas
and
and
xor
mov
mov
es
loop
sbb
sbb
jne
sbb
add
or
cmpsl
add
mov
dec
jo
insb
jo
cmp
xchg
cli
in
push
dec
cld
cmp
cli
sub
sub
cmp
mov
mov
cmp
sub
dec
test
sbb
jecxz
loopne
xor
or
pop
pop
add
mov
popa
faddl
xor
stos
in
ja
mov
or
ss
add
stos
negb
ss
xor
push
pop
sbb
and
inc
cmc
rolb
xchg
xchg
adc
leave
leave
insb
push
xchg
addr16
movsb
in
and
adc
mov
or
sub
jmp
out
add
push
imul
and
iret
push
cmp
mov
in
int3
push
jbe
scas
fs
lret
jae
adcl
mov
cmp
jns
mov
das
vpcmpgtd
imul
shl
ret
in
movsl
shld
daa
pop
out
pop
jae
sbb
fwait
jmp
testl
xchg
repnz
mov
sub
or
pop
fwait
aam
mov
inc
icebp
jge
adc
inc
inc
nop
test
cmp
push
mov
xchg
es
mov
pusha
test
into
in
cmp
pop
dec
push
lods
inc
subb
cmpsl
cltd
and
mov
stc
cld
cli
gs
sub
hlt
imul
hlt
cmpsb
sub
inc
mov
call
sbb
insb
xchg
jmp
ja,pn
dec
add
shr
cwtl
lds
filds
push
imul
pop
clc
xchg
pop
xchg
pop
cmp
mov
sbb
and
jno
adc
xlat
sub
jge
ds
sub
mov
add
mov
in
xchg
rolb
xchg
popa
pop
into
aas
jl
lahf
cmpsb
and
push
gs
fisttps
lds
pop
push
jmp
std
enter
sbb
and
push
call
inc
clc
jmp
cmp
pop
or
push
aaa
xchg
and
jb
je
loope
and
dec
mov
int
jns
xchg
xchg
inc
call
jnp
rorb
or
jmp
push
lods
ljmp
std
sbb
shl
into
cmp
cmpsb
stos
pop
push
lods
xchg
mov
push
mov
addl
mov
fisubl
stos
loope
pop
mov
mov
pop
movsl
cli
es
jae
aaa
cmp
aas
xorb
imul
fbld
clc
sbb
rolb
testl
xor
lret
pop
iret
sub
dec
cmp
sub
pusha
jge
lahf
mov
out
cmp
sbb
lret
inc
fwait
sbb
sub
adc
sbb
inc
into
push
adc
xlat
es
and
leave
fucom
call
in
lcall
inc
mov
idivl
and
mov
lcall
mov
mov
adc
inc
in
jg
add
lcall
pop
inc
sub
fwait
movsb
out
sub
push
bound
fldl
xor
test
andl
mov
cmp
test
mov
std
cmpsl
lret
ret
mov
mov
pop
scas
or
dec
pop
outsl
mov
jbe
pop
jmp
stos
push
and
and
aas
add
cwtl
cli
pushf
push
mov
stc
pop
mov
push
pop
insl
inc
add
fistps
out
jmp
mov
jb
lret
stc
push
push
jge
jb
mov
pushl
sub
lret
xlat
add
jae
sbb
aas
in
leave
into
cs
in
mov
mov
out
in
and
sbb
sub
dec
xchg
movsl
jge
xor
add
mov
jae
xchg
mov
sbb
ss
sahf
aam
sub
jl
push
addr16
leave
pop
pop
ds
inc
jae
arpl
or
in
mov
add
stc
les
lret
xlat
mov
mov
scas
mov
and
in
inc
xor
push
and
dec
xchg
imul
xchg
sahf
fnstcw
insb
mov
loope
sbb
fiadds
sbb
push
add
cmp
idivb
or
mov
or
pop
iret
xor
sub
or
and
jp
sahf
xchg
aas
mov
xchg
adc
insl
adc
jmp
pop
lock
sub
jb
xor
dec
xor
mov
fcmovu
filds
in
or
inc
test
dec
ffreep
rcrl
cmp
dec
idivl
sti
mov
and
sub
and
add
pop
pop
aas
push
jmp
push
roll
stc
push
cmp
inc
pop
fistpll
pusha
movsl
adc
mov
fistl
adc
std
jno
sahf
insb
mov
push
mov
dec
cmp
aaa
ret
inc
lret
ds
sub
add
mov
fsubs
inc
cmp
fwait
xor
cmp
push
mov
test
in
adc
cmp
stos
mov
push
std
or
sar
cmc
in
sbbl
les
dec
cmp
adc
pop
gs
dec
pop
mov
outsb
icebp
inc
incl
fstps
xor
mov
sub
jmp
cmp
push
xchg
cmc
out
push
xor
dec
dec
std
xchg
das
sub
dec
xor
out
xor
cli
xor
lock
push
cmp
test
pop
mov
xor
cld
add
xlat
xor
pop
and
aaa
fwait
xor
loope
jne
xchg
js
es
xchg
test
mov
dec
pop
xchg
push
mov
mov
push
push
or
stos
ljmp
push
jg
dec
ljmp
sahf
adc
xchg
ss
das
addl
sbb
sbb
ficoms
stos
push
scas
adc
clc
scas
xchg
sbb
insl
dec
inc
mov
cmp
jg
fwait
sbb
ret
lret
hlt
ficomps
roll
mov
gs
ljmp
mov
mov
sahf
imul
shlb
cmc
and
jg
xor
jnp
ret
xchg
push
insb
mov
add
sbb
je
jmp
mov
dec
push
insb
or
or
fsts
enter
xchg
dec
mov
mov
pop
mov
xchg
in
insb
pop
ret
ret
jl
jne
cmc
push
jge
dec
hlt
or
add
and
push
xchg
cmpl
push
add
mov
inc
data16
das
xchg
mov
clc
fidivs
test
push
push
stc
adc
int
sub
push
jne
jp
xorl
push
xchg
sarl
sub
ja
not
daa
dec
call
dec
jp
dec
xchg
mov
push
xor
lea
add
hlt
mov
shl
push
mov
pop
or
sbb
je
scas
imul
jge
xor
ss
or
cmp
imul
fisttps
rolb
je
xchg
sbb
into
lods
stos
push
jg
or
sbb
ja
xor
js
ficompl
out
mov
je
jmp
adc
das
addb
dec
mov
add
fisttpll
mov
sub
dec
add
std
mov
loop
push
hlt
mov
sub
clc
sti
imul
std
pop
ja
outsl
add
sbb
lahf
sub
dec
int3
pop
in
inc
jp
imul
jl
imul
add
pop
sbb
nop
xlat
jne
xchg
or
jg
push
inc
mov
ja
cmp
lods
insb
dec
jecxz
and
into
xchg
dec
sarb
int
and
sub
mov
lcall
mov
cmp
mov
mov
ret
pop
mov
ljmp
hlt
int
scas
sahf
inc
lret
xorl
sbb
addr16
ja
mov
mov
cs
hlt
incb
repz
mov
loopne
push
or
push
sub
xchg
popf
int3
out
clc
xchg
and
repz
scas
divl
cmp
testb
cmp
cmp
cltd
mov
pop
out
fwait
ja
and
test
lcall
orb
mov
sbb
and
xor
mov
add
add
or
daa
fstpl
adc
sub
pop
mov
cltd
in
fldt
je
jmp
pusha
mov
cwtl
mov
mov
outsb
cli
dec
aam
std
jne
out
ficoms
or
xor
mov
pop
cmpsb
in
mov
push
xlat
jl
mov
orl
dec
in
dec
insb
ret
pop
cmp
notb
inc
inc
clc
out
aas
mov
mov
jbe
shl
inc
fisubl
and
cmp
fldenv
sub
std
pop
adc
ficoml
lahf
mov
pop
mov
xchg
add
sub
repnz
mov
cmc
repnz
mov
dec
inc
dec
fdivr
call
jnp
lock
push
div
fldenv
ja
pushf
pop
jecxz
dec
popf
mov
int3
xor
ror
les
xchg
adc
mov
add
or
lret
outsl
inc
cmpsl
and
arpl
push
and
scas
subb
sub
mov
sbb
and
or
mov
shrd
pop
sbb
lret
out
lods
inc
fwait
or
arpl
jb
adc
xor
jnp
sub
pop
jbe
cld
or
dec
or
aas
mov
sbb
jnp
lds
in
sub
xor
jnp
mov
add
pop
mov
movsl
int
lods
outsb
and
rclb
inc
xor
loopne
xor
adc
or
jl
mov
add
pop
idivb
inc
adc
lret
das
ds
aam
xor
test
mov
idivb
push
jmp
jg
mov
mov
push
cwtl
mov
add
rorl
pop
data16
insb
push
xor
insb
mov
cltd
cmp
and
hlt
add
pusha
nop
xchg
outsl
test
fcmovu
das
les
fisttps
cmc
jnp
dec
mov
push
ljmp
xchg
addr16
out
dec
push
divl
and
sbb
add
or
xor
xchg
rcrb
xchg
daa
lods
dec
add
movsb
ja
sbb
adc
jno
adc
jle
mov
xor
pop
pop
add
jge
push
fisubrs
dec
jno
lret
arpl
int
lods
cmp
xchg
cmc
pusha
sarb
dec
jo
sub
fs
cmc
aam
add
rorl
lret
cmp
test
loopne
mov
adc
ret
lds
mov
dec
pop
data16
mov
sbb
dec
mov
inc
adc
lds
sbb
in
pop
rcr
js
mov
push
rclb
neg
movsb
pop
in
dec
push
or
add
jb
mov
les
iret
adc
or
jp
out
arpl
jmp
int
pop
xchg
cltd
sub
push
mov
mov
xor
int
popf
mov
mov
add
pop
mov
mov
mov
mov
mov
hlt
add
arpl
scas
fsubrs
mov
out
add
test
pop
lods
dec
imul
xchg
inc
add
adc
xchg
dec
iret
dec
lahf
mov
xor
lret
ljmp
repz
push
rcrl
mov
push
adc
out
int3
in
or
ljmp
cmp
xchg
repz
mov
jp
adcl
stos
mov
dec
subl
push
cmpsl
movsl
sti
push
sbb
roll
jp
push
in
mov
push
push
pop
je
bound
lret
or
cmp
push
insl
jp
xchg
xor
xchg
test
arpl
adc
lahf
sub
loopne
push
outsl
push
and
or
sub
out
mov
xor
pop
sbb
dec
ljmp
daa
lds
repz
enter
inc
aas
lods
push
cltd
xchg
shlb
test
ja
in
cli
push
cli
ret
mov
jo
and
jo
mov
push
xchg
mov
int3
aaa
xor
push
sub
cld
push
inc
in
shl
mov
add
xchg
mov
mov
shrl
shr
repz
fcomp
scas
lods
mov
lret
sub
shlb
test
stos
and
ja
leave
dec
ja
xchg
sub
mov
cmc
and
push
xchg
insl
inc
cs
xor
fsubl
sti
mov
lds
dec
jns
enter
jns
jae
jge
addr16
inc
fists
adc
mov
ror
xor
test
aaa
or
insl
push
add
push
adc
mov
cltd
int
mov
or
fyl2xp1
fscale
out
and
jge
hlt
out
pop
push
shlb
movsl
adc
jb
adc
add
neg
cld
and
inc
dec
jno
mov
xor
xchg
dec
aaa
lods
xchg
iret
imulb
std
push
push
or
dec
movsl
cmc
fisubs
xchg
mov
and
movhps
add
movsl
xchg
repz
pop
jle
mov
mov
fucomp
roll
inc
cmp
mov
adc
jae
jecxz
inc
fisubrs
fisttpll
int
movsb
add
mov
popf
not
dec
stos
test
add
test
sbb
and
aam
xor
pushl
fcomps
stc
fdivrs
cmpl
add
pop
dec
loopne
adc
loopne
fucomi
pop
imul
jae
xchg
or
jp
cmpsl
test
aaa
mov
xchg
repnz
vpor
mov
or
iret
int3
ret
movsb
and
addr16
sbb
test
jge
and
jecxz
insl
mov
xchg
ja
loopne
sub
repnz
jne
sbb
out
push
xchg
mov
sub
rolb
stos
mov
outsl
add
adc
ficompl
ret
xor
push
push
icebp
ficoml
jp
or
aam
push
cmp
sub
xchg
or
xchg
mov
jecxz
jecxz
xchg
jecxz
daa
adcb
sti
out
insl
jbe
mov
stos
adc
pop
repnz
and
std
xchg
push
shlb
or
or
in
mov
add
mov
aaa
mov
lods
jg
inc
cmpsb
mov
jns
adc
leave
adc
incl
mov
mov
xor
pop
jns
or
pop
dec
and
sub
jb
pop
out
jp
sarb
ret
aam
xor
dec
scas
mov
ffree
and
icebp
push
push
cmp
js
sahf
or
mov
negb
jns
enter
pusha
je
lds
imul
imul
push
fdiv
jbe
icebp
mov
xor
scas
mov
jae
iret
ljmp
lods
mov
cmp
pop
push
add
xchg
add
out
sbb
in
loopne
inc
pop
daa
push
sub
jo
inc
pop
mov
out
shlb
std
jbe
arpl
ret
nop
hlt
mov
pop
cmp
hlt
addr16
mov
cwtl
data16
dec
cmp
addr16
sub
pop
or
mov
mov
cmp
lea
cmp
cmp
mov
insl
sti
cmpsl
jmp
cltd
popa
cmp
int
fldenv
push
or
arpl
cmpsb
mov
lret
sub
nop
sarl
imull
les
outsb
fstp
dec
test
and
jb
sti
mov
sarb
adc
inc
in
popf
adcb
and
dec
addl
cmp
sub
fildl
jp
je
and
loope
imul
push
jle
jnp
scas
xor
or
push
cmpl
mov
daa
mov
aas
jb
stos
xor
std
lock
inc
inc
lret
mov
add
jnp
cmp
outsb
ror
pop
scas
aas
clc
sbb
repz
ss
xchg
lock
pushf
jl
imul
inc
sbb
ret
xor
add
roll
jge
xlat
dec
jl
or
xor
jo
adc
ret
outsl
sbb
js
jne
popa
cpuid
or
push
mov
fistps
or
push
mov
add
add
in
dec
jl
enter
pop
in
jp
cld
iret
adc
xchg
push
dec
in
jle
sub
shll
or
ficompl
mov
sub
repz
jno
mov
push
or
mov
clc
pop
jbe
scas
cmp
inc
out
stc
inc
sbb
dec
out
cmp
add
mov
movsl
mov
test
add
fucompp
mov
in
stos
mov
stos
popf
lret
into
mov
fdivrl
xor
sahf
testl
jge
inc
sub
cwtl
add
xor
sub
add
jnp
pop
and
lret
scas
int
inc
xor
movsl
arpl
sbb
cmc
sbb
dec
jle
fwait
or
sub
or
ror
fisubrl
and
cli
std
cld
push
add
push
stc
add
sahf
adc
iret
outsl
pushf
cwtl
int
nop
sti
sbb
dec
lock
or
flds
mov
in
xchg
jmp
ljmp
xchg
fbld
sub
mov
cld
and
fldt
xor
add
mov
pop
push
jae
inc
lahf
cmp
cmc
push
or
fcmovnb
mov
cld
or
cld
sub
outsb
or
int
dec
sub
iret
ja
lret
sub
lods
stos
push
stos
outsb
mov
in
fcmovb
popa
add
mov
fnstsw
fcmovnbe
sbb
xchg
sub
pusha
sub
xor
mov
ljmp
int
sbb
jecxz
mov
dec
mov
and
fisubl
add
xor
xchg
xchg
ficoms
adc
xor
sbb
je
lcall
adc
dec
cmp
lret
mov
rolb
jne
jl
outsl
mov
pop
and
sbb
inc
push
dec
sub
add
lds
xor
sub
xchg
push
dec
mov
and
int3
std
cld
int3
aaa
pop
dec
mov
xor
push
fsubs
inc
int3
push
push
lea
lock
add
sub
add
scas
mov
push
inc
jo
and
lahf
xchg
daa
movups
xchg
in
mov
jge
add
repz
in
jnp
cmp
int3
xchg
leave
mov
ss
cld
push
pushf
pop
loopne
or
mov
adc
scas
in
aas
not
xchg
dec
push
pop
push
in
push
rcl
push
inc
or
xchg
scas
sub
sar
cmp
inc
xor
or
loopne
sahf
repz
mov
rorb
dec
sub
jl
mov
xor
orb
mov
mov
jnp
mov
rclb
xor
adc
daa
addb
mov
cmpsb
push
mov
adc
cmc
aad
rol
push
jg
aas
mov
and
or
lods
add
pop
pusha
push
in
mov
aas
adc
jp
mov
or
pmullw
test
out
sti
movsl
cltd
pop
jecxz
mov
sbbl
loop
mov
mov
in
repz
ss
incl
push
mov
inc
and
gs
fsts
xchg
ja
lahf
jge
outsl
call
dec
movsl
mov
inc
outsl
pop
test
in
push
rcl
inc
loop
xchg
movsb
add
in
inc
push
xchg
cltd
movsb
xchg
orb
testb
jne
stos
pusha
movsl
xlat
dec
sub
sub
cmp
int3
loope
shll
jl
cmp
arpl
add
sub
cmpsl
mov
and
adc
inc
or
loop
adc
fdivs
aas
popa
adc
jnp
repz
jle
imul
inc
mov
fstps
and
push
daa
shlb
mov
insb
dec
add
mov
or
or
and
dec
sbb
dec
scas
loopne
mov
js
cwtl
adc
and
test
fs
hlt
mov
es
or
jecxz
loop
sub
cmp
jo
or
dec
or
mov
out
jb
adc
pop
das
lahf
std
jo
jge
js
mov
add
pop
pop
mov
lock
and
push
lcall
sbbb
scas
pushf
or
imul
mov
sahf
inc
std
in
push
add
xor
mov
mov
cwtl
jnp
icebp
bound
dec
daa
or
fistl
push
xor
push
mov
popf
mov
and
mov
jns
loop
push
and
in
gs
daa
addr16
ljmp
shll
hlt
aas
adc
or
popf
add
sahf
and
fwait
fs
ja
mov
xor
divl
inc
push
jb
jle
and
pushf
mov
pop
push
mov
lret
imul
xchg
mov
orb
adc
mov
addps
jmp
pop
pop
push
cld
adc
push
loop
jmp
jmp
mov
sbb
cs
or
fs
jmp
jmp
icebp
sub
aas
dec
xchg
add
out
add
jb
int3
add
in
loope
dec
xchg
push
pop
push
xlat
fdivrs
pop
in
pop
daa
inc
or
or
bound
jmp
iret
add
mov
loop
int
mov
dec
adc
fcompl
or
push
ja
jae
aas
jne
loop
lods
pop
pop
push
idivl
adc
mov
movsl
mov
xchg
or
cmp
inc
fmul
add
xor
pop
or
cmovne
and
or
dec
out
xchg
mov
mov
bound
push
push
je
push
std
adc
pusha
dec
dec
outsb
dec
dec
loope
pop
jo
xchg
aam
imul
cmp
pop
in
inc
ja
lahf
pop
push
imul
mov
cs
sub
imul
sbb
movsl
out
push
fildl
pusha
aaa
pop
dec
popa
leave
cmp
jl
cmp
add
sar
sbb
pop
mov
dec
push
pop
mov
mov
fsub
xchg
stos
mov
mulb
cltd
aas
daa
jno
je
fnstenv
cli
push
push
inc
popf
pop
push
es
out
jmp
movsl
fildll
int3
repz
or
dec
mov
inc
mov
inc
int
push
xlat
loop
push
stos
jo
jns
cmp
xchg
cmpsb
fistps
mov
add
repnz
mov
dec
aam
in
insl
jbe
sahf
lahf
pop
arpl
inc
hlt
pop
and
outsl
pop
sti
leave
lea
cltd
call
mov
xor
fwait
lret
push
in
fdivrs
ljmp
aas
jno
hlt
sub
sbb
sub
mov
push
js
and
lcall
mov
jno
jge
inc
or
mov
inc
jp
pusha
dec
outsl
cmp
and
fwait
ror
mov
test
scas
cmp
out
js
xlat
scas
rcrb
frstor
arpl
ja
jno
shrb
push
je
jne
mov
pop
enter
dec
mov
xchg
push
loop
adc
in
iret
jmp
jle
sub
push
push
aaa
aad
add
jge
push
sub
mov
scas
pop
fs
lods
jmp
lock
inc
cmp
leave
fdivs
arpl
jmp
mov
repz
adc
pop
xor
mov
sub
pop
xchg
or
scas
cmp
cld
push
mov
outsl
leave
mov
mov
popl
adc
adc
jmp
sbb
insb
push
pop
lods
jge
dec
xchg
mov
scas
divb
aam
repz
sub
push
and
test
and
xlat
xor
pop
xor
subb
cmp
popa
push
stc
test
lods
test
sub
movsb
icebp
lcall
fwait
adc
clc
cmp
loopne
enter
dec
jle
sbb
jmp
shrl
push
repnz
test
mov
or
scas
mov
adc
xchg
sti
test
jge
and
cmpsb
hlt
inc
pop
adc
rcll
lock
enterw
cmp
sbbb
lret
pop
push
ror
test
dec
sub
int3
fidivl
call
inc
xlat
mov
cmp
or
dec
in
cld
loope
pop
jg
cmp
pop
stc
rol
sub
or
pop
pop
push
adcb
mov
gs
clc
inc
and
call
sub
sub
fstpl
sub
push
fistps
mov
push
inc
subb
lret
test
stos
jge
rclw
push
sub
fs
xchg
push
test
lcall
jge
loope
xor
pop
or
xor
lret
ret
push
add
inc
push
lcall
in
outsb
mov
scas
addb
jnp
xor
stc
and
fistpll
xor
xor
push
and
daa
mov
pop
lea
mov
mov
mov
mov
leave
jns
in
sub
mov
lods
inc
cmp
cmp
dec
jge
push
out
mov
out
inc
dec
inc
test
xchg
xchg
pop
cmp
outsl
xchg
and
stos
aam
in
ljmp
mov
jne
mov
xor
ja
push
sbb
imul
xchg
inc
xchg
sahf
xchg
pop
mov
xchg
mov
cltd
pop
pop
movsb
push
lret
or
xchg
outsb
mov
repz
inc
or
adc
mov
adc
jbe
cmp
sbbl
in
lods
and
mov
xor
adc
in
push
mov
out
es
cmpsl
xor
out
xor
jp
es
mov
sub
add
pop
or
sub
clc
xlat
and
mov
sbb
test
pop
sbb
xchg
and
rolb
and
insl
and
mov
xor
test
mov
adc
push
pop
xlat
int
in
lods
inc
cmp
sbb
push
inc
jecxz
imul
mov
dec
and
inc
addr16
lret
add
rcl
sbb
fisubs
add
aaa
fists
test
fsubr
xor
loopne
or
push
cmp
aaa
mov
in
sub
inc
nop
popa
jl
cmp
mov
mov
inc
scas
mov
push
ljmp
mov
addl
jge
pop
sub
pop
cmp
add
inc
inc
add
sbb
test
push
inc
xor
mov
ret
and
mov
dec
aam
pop
movsl
pop
je
xor
dec
xchg
in
or
fbld
and
insl
pop
lock
aam
xchg
popa
rorl
faddl
jg
adc
fwait
mov
push
cs
repnz
xchg
int3
and
mov
mov
jmp
aaa
or
lods
mulb
lret
pop
sbb
mov
repnz
push
lahf
cmp
popf
out
xchg
sbb
sbb
enter
inc
jecxz
nop
fcos
std
fildll
push
sub
jecxz
mov
sbbb
outsb
jecxz
mov
imull
shld
pushf
movsb
ljmp
insl
imul
push
aam
stos
das
mov
mov
or
and
sub
addr16
push
mov
inc
fdivl
addl
sub
adc
xor
cmc
ja
jae
jnp
movsl
in
fwait
push
mov
and
jbe
xchg
dec
mov
lret
mov
cmc
imul
shll
adc
ret
sahf
jge
aas
pop
xor
test
xor
or
inc
into
andb
pop
inc
lcall
sub
call
mov
daa
ret
dec
ret
filds
sbb
push
xchg
add
jno
std
mov
cltd
pop
call
je
jl
test
mov
clc
les
lcall
jnp
push
xchg
call
mov
mov
jg
mov
sub
mov
cmp
insb
or
loope
adc
or
adc
jae
mov
rorb
inc
or
pop
mov
int
add
cmpsb
inc
jge
adc
push
mov
fimuls
cs
jo
push
and
push
pop
cld
mov
xor
dec
jae
loope
fsubrl
shrl
dec
test
add
add
mov
test
mov
ret
push
push
pop
int3
ja
fcmovu
and
jecxz
cmp
jo
jp
in
pop
imul
jae
ss
xchg
push
sbb
mov
fs
not
in
push
jg
cmp
insb
lods
shl
int3
out
loopne
ds
ss
push
out
jno
inc
xor
xchg
cli
jge
pop
notl
popf
jecxz
insl
lea
fs
clc
ja
sti
pop
lahf
out
leave
fcompl
out
xorl
fsubs
dec
xor
loop
aas
lods
xchg
jg
adc
hlt
insl
out
out
cmpsb
cmp
inc
xchg
in
xor
mov
les
inc
pop
popa
mov
inc
enter
xchg
and
out
mov
enter
mov
push
inc
aas
out
add
gs
hlt
mov
cmp
jmp
add
xlat
lcall
mov
leave
imul
andl
xchg
insl
inc
mov
daa
mov
jle
ja
lock
fistpll
mov
dec
imul
mov
shld
lahf
or
nop
andb
fadds
je
stos
in
jle
jne
mulb
ss
jge
subl
mov
xchg
fcompl
mov
xchg
lock
dec
mov
pop
jbe
inc
cwtl
xor
mov
xchg
pop
int
sbb
mov
ja
cbtw
mov
add
enter
mov
fnstcw
adcb
push
les
enter
push
inc
test
in
lds
ja
push
shlb
call
xchg
pushf
xor
in
cmp
in
dec
testb
jno
xor
sbb
and
xchg
cld
fimull
and
dec
imul
mov
sub
and
mov
xlat
mov
dec
pop
mov
mov
push
sub
pop
loop
sub
push
adc
movsb
std
jp
mov
add
xor
cwtl
ljmp
es
daa
push
xchg
mov
xchg
or
push
mov
divl
mov
jmp
fistpl
xor
cmp
and
mov
push
movsl
mov
fwait
jge
jb
rclb
test
inc
push
pop
sbb
test
or
inc
xor
pop
fcoms
jno
scas
cmp
inc
lcall
push
or
xor
arpl
sub
cli
in
xchg
mov
mov
popf
mov
push
dec
in
push
fwait
int3
xor
jb
sbb
dec
pop
loop
xor
push
movsl
add
adc
cmp
ss
icebp
pop
adc
pusha
pushf
xor
test
xor
loopne
or
inc
sahf
gs
sbb
mov
mov
in
jl
push
mov
adc
outsb
inc
dec
js
or
cmp
xchg
int3
fucom
add
into
or
lahf
xlat
or
dec
push
mov
push
popf
ss
stc
repnz
mov
sahf
xor
jne
orb
fsubrs
jg
test
rolb
push
add
and
sbb
daa
mov
push
mov
aad
cmc
mov
dec
mov
xchg
ss
mov
testl
pop
jns
repz
sbb
mov
and
nop
ljmp
xchg
call
add
test
push
repnz
ret
lock
and
add
jl
das
mov
fldcw
xchg
sbb
dec
movb
push
mov
pop
dec
or
inc
addl
inc
out
sbb
pop
out
cmp
out
xor
cmp
mov
inc
rcrl
push
sub
repnz
xchg
or
fbld
cmp
fsubrs
or
rclb
push
std
pushf
test
nop
dec
adc
mov
shlb
cmpsb
mov
jno
aad
mov
jbe
sbb
dec
push
pop
jmp
sub
lods
push
mov
inc
lods
je
lcall
or
gs
jo
mov
mov
jmp
jno
mov
cmp
jg
das
stos
cmp
ss
repz
roll
rcrl
loop
pushf
inc
lcall
movsb
outsl
sub
inc
sub
sbb
aas
ljmp
dec
imul
mulb
add
fsubl
fwait
mov
out
decb
shlb
rclb
jo
popa
lret
jecxz
lods
dec
dec
and
int3
or
popa
mov
jb
inc
inc
mov
mov
lods
jg
rcrl
dec
in
dec
loop
ljmp
push
sub
rolb
push
out
cmp
aam
pop
icebp
and
dec
mov
sub
fucomi
mov
sub
out
shrb
mov
sbb
xor
sub
nopl
mov
gs
xor
nop
sbb
sarb
jnp
xchg
sub
stos
push
mov
rcrl
mov
rcl
push
cmpsl
sbb
xchg
cmp
xchg
cmpsl
int
mov
cmp
scas
rcrl
in
mov
hlt
jno
call
sub
ds
xchg
mov
out
cwtl
mov
sub
sti
roll
inc
xchg
sarl
xchg
fucom
stc
cmp
mov
inc
fadd
aad
cmp
adcl
or
mov
stos
stos
jp
mov
mov
or
lea
add
in
jmp
sti
call
dec
and
dec
push
adc
loop
pop
inc
cmpsb
fdivs
push
jp
mov
jle
push
shll
out
ret
scas
mov
fsub
dec
iret
ljmp
scas
mov
adc
push
pop
andb
call
aam
out
xchg
aad
cwtl
mov
jo
cmpb
sbb
or
inc
shrb
fistl
cmp
push
cmp
sti
pop
sbb
cli
pop
adc
adc
scas
lahf
shr
sti
int
les
filds
stc
and
cld
xor
xchg
cli
in
push
inc
shr
mov
lea
in
jne
mov
jbe
push
sbb
test
stos
xchg
cmp
add
mov
enter
push
outsl
enter
into
mov
xchg
add
in
adc
js
jl
out
sbb
xchg
dec
movsl
mov
int3
sahf
push
sub
push
or
or
fwait
daa
repnz
jno
jl
imul
imul
xor
xchg
cmp
inc
testl
mov
imul
cmpsb
inc
movsb
push
scas
xchg
sbb
pop
lcall
or
jecxz
xchg
jmp
sub
lock
sbb
outsl
dec
int
imul
out
pop
or
out
outsl
mov
aad
js
xor
sbb
mov
lret
mov
or
pusha
dec
xacquire
add
xchg
mov
es
inc
dec
ss
sbb
jbe
xchg
pushl
add
xor
sub
aas
mov
daa
xlat
dec
pop
les
inc
inc
xchg
mov
add
mov
sahf
call
ret
stos
mov
mov
mov
xlat
das
sti
jo
xor
mov
jle
sbb
jns
push
sub
fcompl
out
iret
negb
dec
sahf
int
fdivr
and
rcrl
movsl
mov
enter
inc
mov
cmc
imul
sti
decb
imul
aad
xchg
lcall
inc
out
lret
inc
mov
movsb
dec
ljmp
sbb
cmp
lds
lret
lock
mov
stos
jno
push
ret
fucomp
cwtl
sbb
clc
cmp
dec
push
mov
push
sub
fbstp
out
push
dec
outsb
out
sarl
pop
rol
fcoms
add
out
xchg
adc
dec
mov
and
out
int3
dec
imul
ss
arpl
xchg
imul
push
sub
imul
or
sahf
clc
and
cmpsl
adc
std
test
test
jbe
add
xchg
adc
lahf
movsl
mov
test
xor
or
jbe
ss
fldt
movsb
cmp
adc
mov
mov
sbb
push
ret
jns
lret
mov
sub
cwtl
jmp
jno
add
jecxz
lret
xlat
cmpsb
fidivl
in
sbb
or
out
into
xor
push
inc
xchg
in
ljmp
dec
stos
cmp
in
xchg
cltd
inc
lretw
sbb
mov
icebp
fisubs
inc
add
lret
cmp
xchg
test
sbb
arpl
adc
fwait
jmp
cs
cmp
and
mov
jle
dec
shll
out
pop
pusha
cmp
je
mov
inc
xor
sahf
add
mov
std
fistl
push
jge
pop
adc
xor
scas
mov
test
insl
dec
scas
and
push
rcrl
cltd
jp
and
sbb
xor
repz
sub
sbb
xchg
inc
test
pop
sahf
jns
cld
icebp
pop
jns
mov
lea
pop
xor
pop
sarl
dec
xchg
fwait
jl
shll
xchg
cmc
cmpsb
cld
fidivrs
decb
je
out
loope
sbb
mov
mov
mov
cmp
jns
push
test
stc
mov
xor
mov
cmp
pop
nop
ret
sbb
enter
sub
add
fld
pop
fsubs
pop
xchg
dec
daa
sbb
enter
xor
xchg
inc
xor
sbb
jo
push
mov
jmp
adc
add
add
dec
mov
mov
icebp
add
jns
pop
ds
pop
mov
lret
fnsave
pop
testl
pop
xchg
push
push
push
in
inc
adc
enter
xor
push
cltd
add
fiadds
cltd
fmuls
fmuls
push
mov
pop
loop
mov
arpl
mov
in
shl
aad
outsb
bound
rol
mov
cmp
in
into
push
xlat
into
popf
mov
mov
adc
xchg
push
in
or
sbb
loope
ljmp
xor
rorb
in
aas
xchg
lods
test
xchg
mov
negl
adc
movsb
sahf
pop
daa
jns
mov
jmp
testb
cld
outsb
incl
jo
dec
gs
lret
fdivrl
mov
or
mov
and
ret
and
popf
dec
xlat
nop
jnp
dec
insb
shlb
cmp
sarb
andl
pop
cmp
or
pop
ljmp
dec
incb
add
cwtl
ret
imul
stos
call
shr
cltd
stos
pop
dec
aaa
push
lcall
push
add
fidivrs
fpatan
repnz
add
imul
or
add
xchg
rorl
push
add
inc
loopne
rorl
filds
mov
adc
add
mov
inc
xchg
lds
mov
adc
fs
js
mov
sbb
pop
and
or
stos
mov
and
addb
incb
cmp
ss
popf
push
push
push
xchg
sahf
daa
cmp
mov
mov
xor
aam
jb
pop
jb
gs
xchg
cmc
dec
mov
lret
jmp
call
lock
xchg
loop
xchg
push
rorb
inc
in
and
dec
sub
cmp
outsl
inc
pusha
imul
das
xchg
jns
bnd
jae
inc
out
sub
ds
inc
sbb
decl
lahf
cmc
dec
cmp
jle
les
mov
inc
mov
push
and
scas
jle
jmp
in
push
out
outsb
andl
out
lea
into
out
dec
in
xor
fwait
dec
push
jnp
cmp
xchg
cld
or
mov
pop
sbb
pop
add
sahf
mov
rolb
mov
cwtl
mov
psraw
out
push
loope
inc
push
or
mov
ret
shrl
pop
arpl
sti
adc
fildll
add
inc
xchg
fists
ret
cmpsl
mov
outsl
sub
inc
add
cs
pop
mov
das
xchg
out
dec
out
pushf
adc
ret
adc
mov
hlt
lock
xchg
jecxz
shl
sub
daa
je,pn
mov
insb
sbb
iret
lahf
inc
movsb
jnp
dec
hlt
sti
adc
push
lret
inc
sbb
xchg
enter
shl
add
add
dec
cmp
jg
pop
cmp
repz
cmp
into
std
in
inc
sbb
lcall
jne
pop
scas
sbb
popf
dec
movb
push
push
loop
jnp
in
push
push
sub
sbb
xlat
mov
ret
cld
xchg
mov
add
in
cmp
enter
sti
adc
sti
in
add
jmp
xchg
test
jge
int
xor
mov
mov
xchg
mov
addr16
rcll
or
lods
out
xchg
orl
dec
iret
jbe
sbb
ret
fisttpl
mov
push
ds
std
adc
aad
pop
movsl
dec
inc
jnp
or
arpl
cmc
int
push
push
and
mulb
outsb
adc
or
dec
es
lahf
xchg
jnp
cli
shr
dec
test
mov
inc
sbb
adcl
xchg
cmpsb
dec
dec
ja
lock
sub
adc
cld
xor
sub
jl
push
dec
mov
add
or
stc
pop
aam
lods
movsb
pop
cld
ja
mov
or
sub
loope
clc
xor
lods
or
cmp
mov
add
inc
js
dec
arpl
xor
sub
daa
dec
cs
adcb
aas
adc
aaa
lahf
xchg
jns
and
inc
push
nop
cmp
jne
jbe
or
cmp
out
lret
cld
pop
sub
xchg
xchg
test
and
fisubs
outsl
jae
and
push
ret
inc
jbe
push
popl
add
mov
in
or
repnz
fsubrl
in
cmpb
jne
repz
lea
cmp
shrb
sbb
mov
adc
sub
icebp
xchg
mov
or
lods
pop
frstor
das
loopne
push
cwtl
loop
cmp
mov
adc
pop
clc
cmp
inc
stc
inc
shll
jmp
out
pop
movsb
mov
das
push
jp
dec
add
mull
xchg
mov
rclb
into
sub
into
jge
outsl
dec
cmp
cmp
ja
jae
movsl
mov
sti
jnp
xor
xchg
fisubrl
call
xor
jne
lds
mov
and
dec
add
es
push
cs
roll
mov
mov
pop
mov
push
pop
or
outsb
idivl
pop
scas
push
adc
out
cmp
or
stos
xor
xchg
repz
shl
add
popf
xchg
xchg
imul
in
out
sbb
xchg
sub
movsb
mov
iret
pop
push
and
adc
xchg
imul
jo
xchg
cld
loop
jmp
stos
cltd
int3
loopne
xchg
cmpl
fs
clc
mov
pusha
jno
push
sbb
or
mov
aas
push
adc
xor
add
fdivrl
lods
push
fstp
jl
aaa
push
stos
or
mov
mov
mov
cmp
imul
xchg
inc
fmull
mov
fwait
insw
icebp
cmp
push
mov
sbb
call
jns
shlw
scas
int
cli
mov
aas
xchg
dec
lcall
dec
push
js
inc
cmp
or
inc
iret
pop
dec
test
loop
stc
popa
pop
xchg
sub
in
test
popf
ficoml
sub
insl
push
pop
xchg
mov
fcomps
push
mov
addr16
push
or
ret
ljmp
int3
mov
push
inc
outsb
xchg
insb
pop
xor
ja
pop
and
out
xchg
aas
fcmovbe
jecxz
pop
call
push
mov
add
inc
cmp
mov
ret
xor
jno
mov
mov
cmpsl
mov
mov
cmp
and
addl
pop
cli
pop
dec
adc
or
xchg
mov
sbb
jg
outsb
mov
cmpsb
stos
xchg
adc
and
jae
and
ret
ss
jmp
dec
daa
and
es
pop
mov
rorb
sub
or
cmpsw
pushf
cld
add
mov
arpl
clc
clc
and
ficoms
sub
and
sbb
sbb
sahf
and
movsl
cmp
inc
or
in
test
shrl
jbe
int3
outsb
mov
pusha
lret
sahf
lock
inc
fadds
lods
mov
sub
mov
sub
mov
pop
inc
shl
add
cltd
mov
insb
push
add
nop
iret
test
mov
int3
outsw
sbb
lcall
test
mov
dec
push
cmp
jmp
mov
and
xorl
mov
or
dec
fwait
inc
push
nop
pop
in
xchg
cltd
add
int3
outsl
lahf
in
sbbb
xor
push
pop
push
add
mov
dec
push
clc
jg
rcl
scas
insb
js
stos
insl
stos
mov
rcrb
xchg
push
jg
dec
shr
insb
aad
cmp
loop
popa
movsb
jl
add
or
loopne
cli
icebp
adc
outsl
aaa
sbb
add
inc
fwait
inc
aas
sbb
mov
dec
negb
outsl
daa
jns
add
call
pop
mov
adc
mov
mov
cmc
fcompl
cmpsl
cmp
mov
cmp
mov
xchg
and
nop
mov
pop
fldt
scas
sbb
insl
addr16
dec
mov
mov
push
push
push
pop
and
lcall
inc
jne
mov
cmp
and
sub
mov
mov
adc
add
jge
push
xchg
cmp
jecxz
jbe
cli
mov
jns
pop
jmp
dec
scas
or
sub
mov
jnp
xchg
stos
fcoml
sbb
cmp
movsb
movsb
jmp
jmp
cli
xchg
lret
dec
pop
flds
push
adc
cmp
jae
fadd
aad
mov
xchg
test
mov
fldenv
xor
mov
dec
adc
loop
xor
testb
cld
ret
push
dec
aad
cmp
jo
es
mov
ret
push
mov
rolb
mov
pusha
pop
xchg
jb
sbb
iret
sbb
repnz
mov
fsubrp
dec
or
pop
repnz
iret
xorb
lahf
jns
call
xchg
call
mov
scas
loop
out
js
stc
loopne
imulb
mov
stos
les
cmp
test
jno
lret
out
mov
xlat
popa
mov
pushf
orb
das
jnp
test
push
mov
mov
cmpl
sbb
cwtl
or
call
in
xor
mov
xchg
pop
xor
hlt
pusha
ss
cmp
jg
push
int3
daa
push
xchg
stos
in
int3
inc
mov
mov
push
rolb
mov
lret
std
jecxz
push
or
dec
jle
push
icebp
or
inc
mov
ds
daa
fs
dec
test
lret
push
stos
cmp
xchg
mov
bnd
subb
fnsave
cli
xlat
and
and
hlt
adc
fbld
xlat
call
rolb
fcmovne
dec
imul
push
cmp
mul
xor
pop
je
or
mov
inc
mov
outsb
stos
lret
jecxz
popa
repnz
sbb
xor
inc
xor
pop
mov
xchg
stos
adc
mov
xchg
pop
movb
adc
icebp
test
std
cmc
shlb
sub
mov
out
jnp
mov
fadd
jo
jl
imul
cmp
jbe
lcall
inc
mov
ret
jle
cld
pop
hlt
pop
mov
or
xchg
mov
daa
push
xchg
cmpsl
xchg
shrb
arpl
int
lds
cmp
popf
cmp
add
cmpsl
nop
mov
xor
test
sbb
adc
repz
lock
das
fcmovu
sbbl
decb
dec
dec
sub
jmp
jge
add
mov
sub
and
jne
cwtl
aad
test
jecxz
daa
xchg
mov
jbe
add
inc
and
outsb
inc
fists
adc
call
push
bound
stos
fisubrl
cmp
stc
loopne
push
sbb
or
xchg
or
sbb
mov
jae
mov
dec
rolb
xchg
insl
jne
and
jmp
dec
cmp
fwait
lods
lock
flds
mov
inc
push
cmc
jp
sbb
jne
mov
popa
pusha
js
aaa
imul
sbb
sub
popa
int
sbb
push
xchg
icebp
jecxz
pop
sub
popf
inc
inc
push
stc
in
pop
scas
pop
pop
cmc
xchg
cmp
add
jg
out
mov
and
cltd
ds
xchg
mov
push
jg
and
cwtl
lret
movsl
in
dec
xor
sbb
mov
mov
std
mul
fdivs
cmp
sub
xor
addr16
in
ret
out
rorb
repnz
dec
gs
pop
jbe
test
jl
ss
outsl
sub
push
stc
lods
cmp
pshufw
sub
hlt
jp
jnp
or
sbb
das
mov
add
in
out
push
pop
loopne
push
cltd
push
mov
adc
push
mov
push
sbb
lods
mov
adcl
fbstp
stc
cmp
pop
and
jg
adc
jnp
cli
je
stos
sub
ficomps
xor
cmp
ja
cmp
cltd
inc
sbb
loope
test
ss
inc
and
push
dec
xchg
jbe
mov
xor
rcrb
mov
gs
add
sbb
pop
repz
push
cmp
push
xchg
push
jle
andb
subl
adc
and
xor
adc
xor
test
call
and
xor
aad
push
dec
lret
insl
jl
mov
mov
rcrl
jl
ret
xchg
ljmp
adc
dec
sbb
insl
pop
mov
add
je
outsl
or
sub
cli
mov
aad
xchg
add
push
or
add
sbb
or
jbe
xor
loop
adc
std
dec
jae
arpl
jnp
inc
cmp
mov
ljmp
loop
sub
addr16
pop
fbstp
nop
fisttps
dec
mov
cmc
xchg
lods
icebp
pushf
int
push
pop
adc
push
bound
mov
test
test
js
push
scas
add
push
cmpsb
fsub
nop
sbb
xchg
bound
test
mov
add
pop
lcall
jae
adc
std
fwait
mov
mov
mov
aam
mov
es
xchg
pop
push
xchg
sbb
mov
xor
xor
ljmp
js
adc
out
add
insl
cmp
cs
xchg
fwait
ljmp
mov
push
xchg
out
sbb
mov
mov
sub
lods
call
fdivrs
aas
ds
xchg
lods
adc
push
adc
pop
shr
fs
movsb
cmp
adcb
pop
stc
fwait
nop
lods
imul
cmc
xor
push
xchg
stc
cltd
int3
iret
popf
xor
mov
dec
sbb
popa
inc
ds
cmp
dec
shrb
pop
mov
mov
push
clc
cwtl
ja
xchg
in
or
cmp
inc
mov
mov
adc
cmpsl
dec
sub
mov
mov
mov
inc
pop
add
jmp
dec
cmc
and
gs
fadds
push
lret
lock
jno
rcl
aas
jp
imul
cltd
mov
cmpb
mov
inc
and
inc
xchg
jbe
lods
mov
and
adcl
dec
std
or
dec
pop
mov
inc
xchg
xlat
dec
daa
test
imul
sbb
mov
fnstcw
sub
jb
mov
inc
das
loopne
mov
push
out
notb
and
es
or
cmp
mov
aad
lea
iret
mov
cmp
stos
pop
or
dec
dec
add
call
iret
mov
mov
push
scas
test
push
inc
xorl
sarb
sub
fldcw
shlb
aad
add
js
add
mov
mov
insb
test
cs
pop
sbb
stos
mov
add
inc
xchg
mov
and
xor
aam
jns
out
mov
xchg
rclb
mov
popa
push
lahf
in
mov
mov
ret
or
and
popa
adc
lods
mov
mov
xor
jo
xor
xchg
orb
adc
aad
push
dec
ret
jp
lock
sbb
bound
pop
add
lods
nop
dec
test
pop
scas
dec
rcrb
fisubrl
and
mov
or
push
xchg
xchg
mulb
mov
jno
insw
js
xchg
jno
mov
push
imul
push
bound
lahf
fidivrs
out
pop
xchg
cmp
sub
xchg
inc
fsubrp
mov
push
ret
nop
test
out
int
dec
mov
adc
or
push
push
icebp
mov
sbb
or
pop
cmc
cmp
std
ja
pop
insl
cmp
loopne
jns
shrl
mov
mov
cs
enter
nop
jo
xchg
and
pop
jne
icebp
or
mov
dec
push
jns
jns
pushf
jmp
leave
popa
das
push
dec
aam
push
jo
cmpsb
push
dec
dec
xorl
mov
cmpsl
popa
add
adc
dec
popa
push
outsb
aaa
rcr
xchg
inc
aam
ss
adc
add
in
or
mov
and
inc
sbb
mov
sub
dec
es
add
cmp
mov
pop
std
xor
outsl
sbb
or
pop
mov
inc
int3
mov
or
jge
ljmp
int3
xor
outsl
arpl
cld
and
ficoms
inc
xchg
mov
xchg
sarb
imul
insb
inc
jb
pusha
insb
inc
xchg
add
dec
loopne
cwtl
cmp
adc
xchg
xor
icebp
cld
test
mov
movsl
add
repz
push
lock
and
cld
enter
pop
fcoml
pop
ret
cmpb
adc
out
jge
xorb
xchg
stos
mov
add
orb
or
xor
std
add
cli
and
mov
adc
push
cmp
mov
xchg
adc
pop
sbb
cmc
out
es
mov
or
sbb
xchg
xchg
add
push
and
adc
push
and
lcall
cmp
das
nop
xor
leave
into
mull
dec
inc
dec
repz
les
push
push
imul
adc
outsl
cmp
leave
jmp
push
cmp
mov
rcll
loope
outsb
jno
push
popf
aad
dec
and
push
aas
dec
lret
adc
aad
inc
jne
movsb
fnstsw
test
addr16
arpl
aad
or
cmp
dec
push
jmp
out
push
outsl
mov
outsb
jmp
loopne
xor
mov
and
call
pusha
ret
adcb
int
sbb
mov
arpl
jno
push
jne
bound
aam
out
sub
xchg
repnz
sahf
out
pop
mov
add
or
enter
sub
mov
cmp
cmp
negl
mov
inc
sbb
jns
xchg
inc
movsl
gs
pop
mov
test
lods
add
xchg
push
dec
sub
adc
aam
int3
lret
pop
test
les
jge
mov
ljmp
hlt
stos
xor
call
rcll
stos
mov
xchg
cmpsb
xchg
inc
and
fildl
jmp
or
xor
fistpl
add
out
scas
in
mov
lds
jb
shrb
ret
int3
xchg
mov
adc
mov
fcompl
pop
mov
ss
cmp
std
cmp
imul
add
push
or
test
cmc
enter
lahf
mov
negl
inc
xchg
add
call
in
hlt
xchg
scas
sbb
or
inc
or
jne
mov
lcall
in
jo
lret
rcrb
sbb
pop
aaa
and
push
xchg
nop
mov
insl
cmp
adc
cmp
jns
sahf
push
test
mov
jg
xchg
lods
aad
dec
push
out
mov
push
cmp
mov
jmp
xor
aas
and
pop
lret
dec
xchg
add
pop
xchg
ret
mov
pop
pop
mov
sub
lret
jbe
pop
cmpsb
or
mov
push
mov
inc
adc
sbb
ret
mov
test
es
sub
in
mov
mov
jmp
clc
mov
stos
xchg
jl
les
std
xor
addb
mov
xchg
mov
and
sbb
xchg
lahf
mov
test
insl
sub
aas
lds
add
nop
gs
push
xlat
sub
pop
ljmp
movsb
dec
insl
fbld
xchg
sub
ljmp
push
xchg
push
cmpsl
lahf
fwait
cmpb
and
cmp
push
test
add
sub
sti
sub
push
data16
mov
dec
xchg
jo
and
out
adc
call
cltd
in
test
adc
jl
fstpl
push
aad
movsl
pop
fdivrl
std
adcb
mov
mov
lcall
sub
mov
iret
xor
jl
ret
sbb
pop
xchg
sbb
xor
mov
and
sub
cmc
fwait
loop
dec
inc
pop
and
dec
scas
xor
dec
movsl
fsts
es
fisubs
neg
lods
inc
add
out
xchg
xchg
mov
sbb
rorb
out
xor
leave
sbb
jge
dec
cmp
lret
rcr
test
icebp
sbb
call
sbb
popa
sub
out
aad
and
mov
mov
fldenv
push
xor
add
in
push
adc
addr16
aad
push
repnz
add
pop
aad
mov
sub
xchg
enter
mov
dec
fcoms
sti
int3
fisubs
loop
addl
push
bound
add
pop
pop
xor
adc
es
data16
jge
cmp
dec
pop
cvtps2pd
push
sbbl
divb
pushf
adc
ret
pusha
sbb
add
inc
add
cmp
adc
in
mov
and
add
lods
push
movsl
scas
pop
xchg
andb
mov
push
adc
push
mov
and
pop
cmp
cli
lahf
and
es
xor
mov
repz
add
pop
out
mov
pop
sbb
hlt
loope
scas
inc
sub
cs
push
sub
test
or
andb
push
lods
leave
stos
pop
push
popf
xchg
insw
push
outsb
adc
aaa
cmc
pop
scas
adcl
roll
xchg
jns
mov
std
sub
dec
push
pop
sarb
fmul
xchg
fstl
xorl
ljmp
cltd
push
push
lahf
cld
fsubrs
push
jmp
jg
out
fsubs
popf
out
enter
rcrl
or
outsl
and
bound
je
sub
adc
and
xchg
lret
scas
ror
je
sbb
pop
jo
mov
cmp
notb
and
mov
adc
testb
push
pop
rcr
mov
dec
les
or
jl
aam
lret
add
adc
lock
enter
xchg
xchg
and
out
das
bound
push
leave
sub
lea
cli
jo
pop
leave
addb
jge
xchg
into
fcmovne
add
pop
mov
cwtl
sti
ror
add
mulb
sub
xor
lea
adc
outsb
popa
flds
imul
outsb
adc
push
cmp
mov
in
sub
mov
or
hlt
mov
nop
push
aas
push
or
insb
repz
cli
sub
xor
xchg
mov
in
mov
pop
movsb
or
stc
mov
push
cmpsb
adc
rorb
sbb
cli
add
cmpl
xor
mov
int
rep
cld
filds
stc
xchg
jbe
repz
inc
mov
cmp
mov
pushl
jb
push
cli
jae
mov
inc
pop
mov
cs
loopne
pop
dec
fwait
lcall
add
jg
lea
mov
jg
sub
push
pop
daa
mov
pusha
mov
mov
or
lret
test
out
out
pop
mov
fmull
in
test
xchg
mov
pop
cmc
cs
scas
mov
mov
aad
xor
dec
out
push
loope
rol
xor
imul
mov
fstl
add
and
cmpsb
popa
ret
aam
stos
lret
pop
xor
cltd
mov
jp
sub
out
movsl
imul
lahf
adc
xchg
pop
add
aad
insb
lds
inc
ja
sbb
cltd
movsl
mov
xchg
int
jl
add
and
movzbl
add
mov
pop
lret
ss
jmp
sub
lods
and
clc
je
xor
sub
inc
pusha
push
repnz
imull
pop
xchg
aad
out
lahf
dec
mov
xchg
loop
cmc
sub
xchg
loopne
add
jmp
out
pop
cmp
int
je
imul
mov
add
sub
rcll
mov
hlt
and
mov
or
xchg
loopne
je
mov
iret
dec
out
dec
sbb
int
and
dec
cli
outsl
xchg
aad
inc
push
mov
icebp
xchg
xor
mov
push
inc
mov
shrb
test
mov
movsb
les
mov
xchg
gs
loop
jb
and
enter
xchg
sahf
sbb
mov
mov
es
push
ja
test
adc
aam
insb
or
in
imul
cwtl
fiaddl
je
jne
xchg
sub
rcrl
dec
mov
repnz
push
sub
test
jmp
rorl
in
pop
loopne
jmp
loopne
pop
in
inc
push
jns
mov
xor
imul
fstl
jns
sbbl
jns
andl
inc
rolb
rcrb
mov
pushl
xor
dec
mov
in
dec
lods
dec
mov
lcall
mov
data16
cs
pop
and
call
mov
fs
popf
rclb
push
jl
jo
pop
inc
jno
lcall
cli
jnp
jecxz
lahf
and
dec
jbe
movsl
jbe
inc
int3
call
mov
lods
push
add
inc
insb
dec
pushf
jl
push
cmp
lock
pop
je
mov
les
popa
ja
pop
inc
xor
dec
aas
in
jmp
mov
sub
push
popa
fs
lods
xchg
inc
push
popa
xor
es
xor
sub
stos
lret
aas
sbb
adcb
add
push
add
faddl
dec
ds
mov
repnz
mov
fildll
pop
dec
mov
sbb
xorb
push
int3
xor
sbb
and
stc
jb
inc
dec
daa
push
es
jecxz
dec
xorb
mov
int3
ret
call
int
aam
sub
sbb
sub
repnz
jb
lret
xor
call
sbb
test
cld
sar
jecxz
push
inc
aad
xchg
cmp
or
cmpsl
popf
mov
std
dec
push
rorl
pop
ljmp
repnz
fwait
int
ds
mov
mul
pop
cli
enter
add
shll
ret
in
add
std
in
xor
hlt
jns
jecxz
mov
or
ret
xor
add
out
in
testb
inc
jno
push
xchg
sbb
jb
xchg
out
out
insb
push
dec
sbb
int
jmp
not
sbb
mov
outsb
mov
add
lock
mov
mov
and
mov
repnz
cmc
lea
lcall
out
test
je
push
mov
or
rorl
pop
arpl
sarb
mov
or
cmp
fisttpll
xchg
arpl
mov
xchg
and
pop
test
ficomps
fucomip
sub
inc
add
mov
sub
ss
hlt
pop
jmp
cmpsb
xchg
movsb
loope
in
mov
fisubs
dec
rcr
push
cmp
pop
xchg
das
push
rorb
or
out
lods
lods
xor
pushf
lcall
mov
rclb
push
dec
icebp
ds
mov
pop
int
lods
mov
mov
imul
and
sub
sub
push
add
cld
jecxz
mov
lcall
movsb
mov
dec
jae
mov
and
pop
xor
inc
push
push
popa
jb
pop
es
lds
or
jle
imul
fmuls
push
arpl
lods
push
out
cs
leave
push
add
in
andb
pop
sub
addl
push
sub
ja
in
fmul
inc
fsubl
pop
pop
dec
dec
sbb
mov
repnz
insb
jmp
in
out
jmp
mov
cli
or
bound
xchg
insl
mov
sbb
rclb
es
push
inc
test
inc
dec
mov
inc
and
mov
aad
inc
dec
cltd
enter
ds
jb,pn
stos
mov
lcall
mov
jae
cmpb
and
mov
rorb
mov
xchg
inc
fidivl
inc
cltd
xbegin
movsl
xor
inc
pushf
mov
data16
subb
and
jmp
and
lea
jnp
pop
iret
fisubs
mov
out
jae
pop
adc
pop
inc
lods
push
mov
sbb
inc
pop
int3
and
xchg
xchg
lahf
or
ret
pop
add
lret
add
cs
enter
hlt
push
in
out
mov
dec
sub
addl
mov
pop
mov
pop
xor
push
pushf
push
roll
in
xchg
insl
es
fimuls
mov
aaa
lods
adc
or
out
imul
fs
in
jbe
add
or
lret
rclb
and
mov
mov
gs
sub
sub
xchg
icebp
sbb
jne
fiaddl
inc
stc
insb
pop
or
or
test
xor
repz
int
shrb
xchg
addr16
scas
pop
sub
mov
pop
aad
jnp
insl
dec
dec
adc
jno
push
cwtl
sbbb
xchg
daa
movsl
cmp
pop
cmpsb
jae
and
mov
sub
cmpsl
xchg
incb
test
mov
sbb
cmp
ja
fcoml
cmp
movnti
out
mov
fidivrl
fstps
xor
jo
mov
cmpsl
xchg
sbb
jbe
push
jle
test
dec
push
add
fnstsw
cmp
jmp
adc
cmp
ret
fwait
dec
add
lcall
add
push
mov
jae
call
iret
sbb
inc
jl
mov
xor
int3
in
pop
push
xlat
xor
dec
imul
dec
jl
xor
push
out
ret
add
dec
popf
rorl
pop
jae
cmpsl
xchg
inc
fdiv
sbb
xor
cmp
lds
decl
add
mov
sahf
fs
push
sbb
xchg
cli
js
mov
shr
pop
sbb
push
in
repz
andl
xor
movsb
and
popa
pop
lea
nop
xor
cmp
mov
xor
inc
sub
mov
push
repnz
push
push
cmpsl
movsl
pop
imul
mov
sbb
adcl
daa
push
test
cmp
push
and
mov
mov
mov
sbb
dec
fisubl
xchg
sarl
add
in
lods
pop
lret
push
int
flds
jns
mov
addl
xor
push
out
xchg
out
popf
mov
jbe
mov
sub
rolb
les
sarl
xchg
xor
fimuls
mov
adc
mov
ret
adc
add
fisttps
xor
mov
sbb
mov
jo
mov
jb
add
jmp
cmpsb
out
mov
fdivp
jb
mov
into
popl
mov
bound
ret
push
sbb
adc
jnp,pn
fidivs
repz
push
inc
out
rcrb
stos
out
sbb
mov
mov
or
shrl
clc
or
iret
push
pushf
jge
lods
cmp
or
mov
stos
mov
jl,pn
mov
lods
imul
cs
mov
imul
pop
add
push
scas
sbbl
aam
mov
arpl
fcomip
jge
popf
dec
mov
jmp
sub
shll
xchg
das
cmp
add
out
insb
push
mov
or
bound
inc
enter
or
fsubrl
ja
sub
sub
jae
cwtl
mov
test
insl
cmp
mov
sbb
data16
rcll
xchg
pop
out
sub
xor
mov
cld
out
add
cmp
scas
cli
dec
es
enter
add
add
dec
cmp
xlat
repz
jae
ret
dec
pop
iret
adc
jl
push
mov
sbb
sar
fstp
inc
push
dec
cmpsb
faddl
xor
mov
mov
shll
dec
jns
andnps
xor
sub
sub
pop
jo
cli
cmp
pop
or
cmp
les
adc
cltd
add
je
addr16
xorl
inc
sub
in
inc
mov
or
xor
push
jb
repnz
pavgw
adc
sub
mov
pop
ret
pop
adc
imull
sub
mov
std
fstpt
mov
mov
dec
rolb
movsl
sbb
mov
add
push
sub
adc
out
sub
divb
fwait
add
int
add
aam
dec
sub
call
test
dec
pop
mov
aas
scas
outsl
mov
fwait
push
and
fcompl
cmp
out
nop
xor
divl
lock
in
mov
lcall
push
js
cld
sbb
in
push
gs
xorl
arpl
jbe
push
sub
or
or
insb
inc
xlat
adc
push
test
fsub
fucom
jge
fistl
add
sub
fldt
add
test
jmp
enter
adc
pushf
shrl
jae
lods
leave
mov
insb
sub
imul
mov
pop
outsb
cwtl
mov
jbe
add
push
call
sub
test
lret
adcl
mov
pop
xlat
iret
sbb
add
xchg
adc
push
adc
sub
push
pop
dec
xchg
or
movsl
sub
push
pop
xchg
std
arpl
push
imul
or
sub
xor
sub
orb
cmp
xor
jp
pop
jecxz
cmp
faddl
mov
fmuls
pop
mov
sahf
mov
scas
pop
dec
cs
sti
cltd
mov
in
fidivrl
push
pop
sahf
xor
rol
dec
xchg
inc
or
adc
dec
xor
jp
adc
pop
pop
pop
mov
or
test
or
cmp
push
push
repz
push
inc
in
pop
mov
addr16
std
enter
inc
sub
or
ret
cli
lcall
lea
jmp
cltd
push
cmp
add
dec
cld
push
inc
aam
cmp
loop
push
adc
scas
dec
cmpb
pop
cmp
or
cmpl
movsl
imul
jno
ljmp
das
sarl
adc
sub
and
sub
arpl
test
outsb
fld
and
and
push
jb
jne
lea
movsl
pop
rcll
and
lea
jecxz
pop
ficoms
out
or
fstpt
sub
sbb
icebp
dec
repnz
mov
lcall
bound
ret
outsl
imul
mov
lret
mov
jne
inc
cmp
push
jmp
pop
test
inc
outsl
pop
mov
addr16
into
dec
lods
imull
push
push
pop
dec
sbb
mov
cmp
mov
push
loop
push
push
out
cld
lea
fdivrp
stos
xchg
adc
push
adc
cmp
aaa
ret
xchg
mov
lret
pop
cwtl
inc
push
mov
je
das
pushf
inc
push
dec
mov
mov
lahf
mov
rcrb
enter
cwtl
and
mov
int
dec
sbb
mov
icebp
shll
jge
insl
jmp
cmp
jp
jbe
xor
cmp
add
aas
add
inc
decb
fistpll
sub
adc
dec
cmp
xchg
xor
xchg
adc
roll
jge
pop
pop
stc
into
jp
jb
mov
lret
push
mov
repz
mov
orl
es
test
cltd
dec
lods
fistpll
sbb
jecxz
push
or
sbb
sub
repnz
and
cmpsl
add
movsb
or
ficomps
jl
dec
sbb
shll
inc
das
repnz
out
inc
mov
sbb
fmull
jnp
xor
stc
out
lret
repnz
stc
dec
movsb
cwtl
push
xchg
jae
into
push
push
xchg
or
jne
adc
adc
adc
int3
pop
jae
and
mov
leave
fldt
icebp
pop
cmp
fistpll
mov
ret
pusha
das
into
mov
xchg
in
sub
jno
xor
add
inc
jbe
and
enter
out
int
mov
and
shll
shlb
jae
adc
sbb
xchg
and
xchg
outsl
push
jno
jb
movsl
jnp
inc
ret
xchg
xor
cmc
push
jg
cmc
mov
or
cmc
out
adc
mov
mov
mov
sbb
xor
call
sbb
in
push
push
jecxz
icebp
out
add
out
or
outsl
sub
push
std
mov
mov
mov
xchg
shl
testb
pop
pusha
or
mov
jns
aas
xor
or
cmp
rorb
mov
cld
testb
lds
pop
push
pop
fsubrl
es
scas
mov
mov
daa
sub
sahf
imul
sarl
push
sti
lret
cmpsl
ficompl
arpl
push
xorl
sub
int3
inc
pop
les
icebp
push
mull
pop
pusha
push
dec
jns
xor
pop
icebp
jmp
iret
adc
popf
outsb
cmpsb
pop
addr16
xor
xor
push
pop
clc
into
cli
sahf
stos
dec
dec
out
cld
adc
outsl
push
test
ret
inc
rcll
cmp
jbe
mov
insb
push
scas
adc
push
fisttpll
test
mov
xchg
loope
pop
fwait
movsl
mov
outsl
and
je
inc
rcll
sti
mov
cmp
pop
xor
stc
push
mov
jae
in
aam
push
sub
shlb
and
push
xor
mov
shr
stos
and
cld
stos
outsl
aam
push
mov
inc
in
cld
push
xor
jae
and
andb
mov
cmpsb
xchg
cmp
sbb
push
repnz
lods
sti
mov
xlat
outsb
push
dec
inc
fmulp
sbb
data16
xchg
jb
loop
fnstenv
push
mov
jge
mov
lods
xor
pop
lahf
mov
shl
adc
mov
loope
adc
cmp
or
pop
movsl
sub
roll
loopne
sbb
xor
out
arpl
mov
icebp
stos
sub
pandn
arpl
mov
scas
xchg
test
sbb
and
das
jno
add
adc
adc
adc
cmpsb
cmp
mov
iret
or
and
pop
jl
ljmp
in
and
xchg
mov
mov
out
fisubrs
mov
in
cmp
adc
fcomp
rcl
sub
cmp
in
push
fcmovbe
and
add
outsb
sub
or
sub
push
inc
xor
dec
cs
nop
pop
pop
ret
inc
lahf
jno
popa
pop
add
sub
and
aas
push
push
lret
or
mov
xor
sarb
mov
jecxz
outsb
dec
adc
out
inc
jg
dec
icebp
xor
mov
cld
pop
enter
in
call
inc
add
xor
jne
int
test
push
mov
insb
fstl
mov
xor
and
adc
pop
jecxz
lods
sbb
fists
sub
sub
fcoml
rcr
jl
mov
add
mov
pop
xor
imul
and
sub
pop
cmp
sbb
jbe
jne
jl
jae
out
ja
orl
and
pop
inc
adcl
push
and
std
dec
test
adc
into
repz
movsl
sbb
mov
and
idivl
fisubs
adc
pop
orb
das
mov
jne
pop
mov
lock
sub
popa
call
imul
sbb
inc
test
bswap
pop
rcll
jp
sbb
arpl
pusha
adcb
xchg
lahf
test
jl
mov
ss
ss
scas
inc
lcall
mov
mov
add
cs
jbe
jb
add
push
sbb
hlt
xor
loop
ljmp
push
subl
jg
daa
inc
movsb
inc
or
sub
sar
xchg
dec
mov
pop
out
jecxz
xchg
pushf
jae
test
cwtl
fistpl
in
push
mov
ljmp
pop
aad
cmpsb
es
movsl
sub
fildll
cmp
pop
mov
aas
sbb
pop
fs
jl
sub
adc
mov
call
adc
push
pushf
sub
mov
sarl
fidivrl
add
xchg
stc
adc
or
jne
pop
jb
clc
inc
or
scas
ret
push
mov
jl
call
aas
sahf
xchg
pop
mov
mov
sub
and
stos
push
inc
pop
jnp
cld
inc
xlat
ja
adc
fs
cli
rcll
js
mov
cmpsb
inc
lods
dec
mov
add
outsl
or
and
adc
sbb
loopne
mov
scas
inc
add
sub
repz
shlb
ds
lds
add
mov
add
adc
sbbb
das
stc
sub
cmp
and
rorb
pushf
es
test
rcll
push
shlb
add
outsb
mov
lea
scas
cmp
mov
lcall
cmp
aam
fmul
ficomps
fstpl
cmp
loopne
mov
sub
ret
pop
push
sbb
sub
enter
movsb
mov
pop
mov
add
dec
inc
imul
xchg
dec
add
cmp
adc
mov
cmpxchg
inc
test
cmp
and
xchg
mov
lods
test
mov
mov
repz
cmp
push
jl
lock
loopne
mov
stos
gs
cmp
pop
lahf
ret
iret
gs
cmp
out
push
sbb
inc
or
inc
adc
push
push
push
pushf
lock
push
cmp
loope
arpl
int3
imul
repz
dec
in
jbe
ss
xchg
pop
sub
dec
enter
mov
pop
sbb
jno
cmp
pusha
jle
pop
cmpsl
gs
rol
sbb
or
fs
iret
cmp
and
xor
push
adc
pop
sub
cmpsl
mov
or
sbb
shll
or
dec
mov
out
pop
ret
aas
dec
clc
mov
jmp
inc
inc
cld
jb
mov
out
mov
pop
add
sub
push
outsb
loop
and
mov
insb
jnp
push
das
sbb
fiadds
push
adc
dec
movsl
testb
mov
sbb
and
inc
adc
add
stos
js
in
or
adcb
aam
out
push
outsb
in
out
cmp
leave
divb
repz
inc
mov
dec
push
stos
jbe
xchg
pop
fwait
pusha
pop
daa
arpl
movsb
pop
stos
mov
sbb
dec
pop
jnp
mov
pop
sub
cmp
fbstp
pushf
xchg
inc
jmp
das
stos
nop
xor
vucomisd
or
push
aas
jg
js
mov
mov
inc
insl
fdivrp
push
loope
add
es
mov
enter
ror
out
jmp
sahf
fistpll
cmp
cmp
lods
cli
scas
loop
out
aad
test
sahf
bound
add
sahf
cmp
mov
push
inc
mov
cmp
push
clc
add
loop
mov
in
mov
sti
mov
cli
sub
pop
xchg
leave
dec
mov
mov
cmp
iret
mov
loopne
fcos
cmp
fstl
insb
mov
adc
mov
mov
and
repnz
in
movsl
jbe
cs
pop
cmp
mov
and
and
mov
stos
imull
mov
xor
jle
roll
dec
push
sbb
xchg
sub
sbbb
fsubs
push
loopne
xchg
jne
fcomps
sub
outsb
pusha
dec
mov
jle
push
xchg
or
int
ja
cmc
jl
or
xchg
inc
mov
cmp
mov
pop
test
arpl
cltd
popf
jmp
sahf
lret
sbb
clc
ret
sahf
jecxz
call
adc
icebp
mov
push
dec
xchg
pusha
cmpsl
mov
lds
movl
je
mov
cmp
leave
fsubl
sbb
cmc
data16
adc
or
movb
mov
les
sbb
int
lods
mov
lock
or
jmp
mov
gs
mov
cmpsl
push
lret
sub
rcrl
mov
mov
jmp
fldenv
test
xor
int3
sub
sub
mov
fidivrl
test
js
mov
lds
outsl
sbb
mov
pop
and
cltd
nop
add
cmp
data16
inc
sbb
hlt
pop
cli
in
test
das
enter
xchg
outsl
xor
xchg
addr16
cmp
pop
lret
xor
movsb
jo
xchg
or
push
add
cmpsb
sbb
jp
in
cli
push
sbb
mov
das
test
pop
popf
sbb
cwtl
and
xchg
fmull
lea
sub
pop
dec
xor
xlat
xchg
jns
call
test
divb
lds
mov
mov
ss
aad
push
lods
mov
imul
dec
cmp
jno
add
cmp
fstpl
sbb
jne
pop
imul
mov
shll
mov
jae
jb
rcrb
das
adc
dec
cmp
dec
xchg
push
aaa
movsb
stc
xchg
mov
add
test
xlat
pop
je
jmp
mov
sub
popf
xchg
int
out
mov
mov
push
adc
fisttps
sbb
adc
fisttps
call
xchg
xchg
mov
aad
popa
jnp
sub
outsl
shll
es
rol
js
scas
mov
jge
ret
test
and
and
outsl
lret
mov
mov
inc
jo
lods
lret
mov
sbb
pop
sbb
outsl
mov
xor
mov
iret
shlb
pop
xchg
push
call
mov
sub
inc
cltd
rcrl
inc
jmp
jbe
sbb
jge
and
repnz
adc
inc
lcall
out
sbb
push
xchg
or
pop
rcll
sbb
imul
mov
mov
ljmp
sub
icebp
std
repnz
testb
out
cmc
or
and
in
inc
adcb
xor
pushf
cmp
scas
mov
imul
mov
test
dec
icebp
dec
dec
sahf
outsl
pushf
mov
clc
lea
and
jmp
imul
mov
fcompl
lcall
imul
dec
mov
or
push
adc
shl
cmpsl
jmp
nop
xchg
js
int3
push
imul
xchg
push
test
or
or
or
and
pop
jno
test
inc
out
js
and
outsl
xorl
xor
mov
insb
popf
add
fsubrl
loopne
test
fcoml
icebp
shlb
test
mov
das
faddp
pop
adc
pushl
bndldx
int
iret
pop
or
popl
les
movsb
mov
popa
gs
push
sbbb
push
jmp
xlat
push
jge
xchg
jge
loop
nop
and
fidivrl
push
dec
imul
pop
lahf
sub
jp
aad
in
cmp
sub
jle
mov
adc
addr16
es
lock
mov
or
dec
sbb
xor
or
mov
mov
int3
and
adc
stc
mov
inc
ljmp
das
movsl
xchg
test
pop
cwtl
pop
xchg
daa
add
mov
shlb
sub
out
nop
arpl
popf
adc
jle
dec
lods
sbb
push
mov
pop
dec
in
cmp
add
pop
pop
int3
fstpt
sub
jge
or
pop
ljmp
dec
ljmpw
xchg
cltd
adc
fcomps
mov
fistpl
enter
cmp
dec
test
mov
xor
cmovne
jmp
sahf
mov
mov
ret
cltd
shlb
pusha
xchg
rorb
aad
ficoms
xchg
xchg
lods
out
push
ja
jecxz
inc
daa
push
outsl
stc
pop
ljmp
xor
lds
xchg
or
and
test
ret
loop
inc
fcoml
push
in
lret
mov
pop
test
push
insb
ljmp
mulb
pusha
daa
scas
repnz
add
cmp
scas
mov
or
mov
dec
nop
pushf
xor
mov
pop
test
mov
jl
pop
jae
push
and
xchg
cmp
xor
ss
js
std
mov
xchg
popf
mov
jg
andl
fsubl
adc
dec
adc
adc
mov
in
scas
sub
popa
loop
jb
icebp
iret
enter
out
lock
ss
adc
addb
mov
dec
popf
cmc
lret
mov
push
mov
out
cli
clc
fldcw
sbb
ja
xchg
sub
cs
leave
aaa
lds
push
nop
rcrl
aam
imul
lds
mov
xchg
dec
stos
add
nop
sub
mov
call
fstpl
or
data16
test
push
and
mov
push
push
js
and
loope
or
lahf
jns
sbb
sbb
or
jl
addb
inc
orb
pushf
imul
in
xchg
imul
stc
repnz
lods
xor
call
cmp
out
push
pop
push
mov
or
test
shlb
mov
aam
jp
mov
pop
sub
jne
ljmp
dec
dec
add
icebp
mov
pop
ficompl
jmp
xor
mov
adc
test
sahf
xchg
inc
xchg
ja
mov
out
jb
mov
sbb
xor
testl
mov
add
dec
stc
cmp
int
pop
mov
in
aaa
adc
lods
cmp
mov
aas
mov
test
dec
icebp
xchg
shr
cld
push
or
stos
pop
inc
jmp
ret
dec
xchg
dec
data16
push
addr16
jno
push
mov
cmc
cmp
sbb
xor
inc
es
dec
sbbb
rolb
jle
jno
xchg
ret
incl
in
outsl
cs
pop
cmp
lods
xor
inc
ds
mul
mov
lcall
push
xchg
mov
sub
mov
sub
dec
addr16
arpl
sub
jnp
lock
sbb
into
lret
inc
inc
xlat
push
lcall
das
loopne
insb
add
jp
cmpsb
fimuls
jl
inc
sahf
sbb
les
jecxz
sbb
stc
loope
out
adc
in
jmp
filds
lods
pop
lods
sub
sub
or
pop
push
jg
xchg
mov
rcll
adc
in
cmp
inc
dec
mov
cmpsl
or
jae
xchg
cwtl
xor
xorl
cmc
fmul
cmp
fmuls
repnz
jg
movsl
mov
xchg
repnz
dec
filds
dec
cmp
add
cmp
jns
cld
xor
mov
sub
nop
sub
popa
incb
icebp
sub
movsl
cwtl
pop
mov
push
mov
jg
mov
sbb
stos
test
dec
inc
inc
pop
xchg
cmp
jp
inc
das
shrl
shrb
push
xchg
mov
push
fwait
pop
and
jmp
push
test
cmp
xchg
cmpsl
stos
imul
jne
xor
addr16
mov
outsb
add
mov
adc
jecxz
cmc
pop
pop
adc
dec
mov
js
sub
subl
xor
cmpsb
idiv
inc
pusha
stos
dec
mov
movsl
pop
pop
ljmp
jecxz
scas
inc
sub
in
in
cli
cwtl
std
xchg
push
sbb
cmp
add
push
xor
dec
and
dec
sub
cmp
cmpsb
sbb
or
ret
mov
dec
mov
fsubrl
aaa
and
xchg
pop
in
cmp
and
jbe
sub
push
repnz
lea
cmp
dec
mov
scas
cmp
pop
stos
dec
leave
xchg
add
jae
pop
adcl
pop
cs
xlat
dec
jmp
fidivl
cltd
repnz
cmc
iretw
icebp
in
les
imulb
cltd
lods
add
push
mov
add
push
test
add
jne
je
shlb
in
push
cmp
xor
imul
out
test
sub
mov
jne
push
lea
pusha
mov
dec
out
xor
loop
je
inc
lods
xchg
pushf
push
sbb
inc
mov
std
cli
adc
leave
jnp
push
mov
aad
mov
xor
xlat
or
sti
xchg
add
movsl
daa
jp
pop
stos
imull
and
dec
hlt
mov
pop
pop
fld
push
repnz
in
or
je
mov
sbb
je
lcall
push
cmpsl
data16
push
mov
jbe
push
sarb
pop
loopne
pop
cmp
andl
int
ja
mov
inc
insl
rorl
psubsw
jle
and
xor
sbb
mov
or
mov
adc
sub
push
in
xor
out
or
xchg
stc
mov
je
sub
in
pop
or
stos
mov
inc
add
enter
xchg
fucomi
aaa
mov
ss
rorl
std
sbb
ljmp
mov
and
insb
xchg
dec
filds
jmp
push
negl
stos
push
out
mov
jno
test
pop
push
int3
jecxz
repz
jnp
cmc
testl
outsl
test
cmp
adcb
sub
es
insl
or
lahf
lret
in
jle
out
push
and
and
add
mov
sbb
inc
adc
and
add
test
pop
sahf
mov
stc
and
mov
out
iret
notb
out
clc
xchg
stc
push
das
rdpmc
clc
mov
push
jmp
mov
jle
adc
rorl
jmp
xor
mov
xchg
jne
mov
mov
adc
cld
sbb
icebp
jb
adc
fst
fs
fwait
rclb
scas
lahf
xchg
push
test
xchg
dec
mov
xlat
mov
dec
and
adc
push
push
imul
xchg
es
shll
in
or
iret
mov
mov
rorl
mov
imul
outsl
inc
jle
rcll
inc
push
in
xorl
clc
leave
je
dec
fcoml
add
aas
call
aaa
js
mov
mov
das
cmpsb
movsl
add
sub
sbb
mov
cltd
push
mov
xlat
cmpb
clc
sbb
pop
and
outsl
xor
mov
hlt
fldl
das
test
mov
scas
divb
adc
xchg
outsb
jg
push
fwait
sti
test
ja
mov
fldcw
ljmp
ss
xchg
out
mov
into
dec
fists
cltd
pop
mov
xchg
jl
mov
jo
jle
cmp
dec
cmp
mov
jnp
sub
sahf
xchg
push
xchg
mov
outsb
stos
pop
inc
or
imul
mov
cld
ds
push
js
movsb
ret
and
xor
fdivrl
ret
dec
dec
mov
inc
xor
lods
push
or
lahf
dec
andb
lock
xor
negl
aaa
mov
mov
pop
mov
ret
and
test
sar
imul
push
idivl
hlt
pop
loope
aaa
pushf
nop
mov
cltd
mov
push
jae
insl
add
loop
mulb
in
adc
mov
cmp
xchg
xchg
jb
jae
test
cmpsb
cmp
fsubrp
mov
lcall
stc
dec
stos
sub
hlt
and
sbb
out
sbb
xchg
ss
mov
sbb
or
push
mov
push
pusha
stos
jg
xchg
or
jnp
js
fsubl
xlat
pop
lahf
shll
add
and
dec
dec
xchg
pop
mov
test
out
std
lea
mov
popa
cs
movsb
repz
gs
jae
pop
sub
xor
dec
xchg
aad
ljmp
dec
inc
xchg
arpl
lret
push
pop
push
and
xchg
push
mov
les
jnp
notb
mov
and
lcall
stos
inc
inc
sub
lds
das
jmp
sbb
cmp
push
jmp
scas
xchg
mov
inc
push
sub
mov
stos
decb
mov
add
xchg
mov
cltd
mov
xor
ljmp
and
addr16
int3
insb
es
sub
xchg
and
xchg
fsub
xor
imul
pop
jecxz
popf
call
dec
scas
add
dec
negl
ljmp
jo
ja
in
stos
repz
pop
pop
xor
enter
incb
je
cmp
mov
and
int
inc
push
push
imul
shl
ja
jge
cmovne
mov
or
int
sbb
addb
ljmp
cmpsl
setb
add
repz
rol
or
lcall
jp
add
out
iret
cmp
in
pop
cld
mov
roll
pop
mov
or
addr16
call
jbe
lcall
imul
mull
test
xor
mov
mov
ss
addl
cmp
push
push
pop
test
in
or
mov
stos
cmp
stos
and
pop
sub
pusha
push
aam
pop
add
imul
xchg
out
jno
pop
aad
mov
pushl
movsl
pop
and
or
sub
testl
movsl
xchg
or
nop
ret
rcl
jg
inc
xchg
ss
sub
lcall
out
add
cmp
lret
jp
fst
sbb
cmp
add
adc
push
pop
out
bound
sub
sbb
testb
cmc
inc
aaa
cmp
mov
ss
inc
dec
inc
inc
push
les
dec
popf
fisttps
push
aas
dec
xchg
or
mov
mov
in
mov
jl
pop
mov
sbb
cli
xchg
inc
mov
jl
aad
iret
fmul
lds
jae
sub
imul
pushf
pop
inc
insb
adc
add
sub
insl
in
psrlw
aaa
rol
xchg
adc
test
inc
push
inc
loope
aaa
xchg
fistps
cmpsb
dec
cmp
cltd
pop
cmp
inc
sub
aas
and
mov
dec
or
mov
and
jmp
pop
scas
inc
and
mov
pop
pop
es
add
clc
out
sahf
aad
icebp
ds
pop
pusha
insb
add
inc
add
mov
dec
rol
xor
push
inc
test
outsb
roll
dec
arpl
stos
cmpsb
cs
std
loopne
xchg
push
add
repz
dec
rcll
xchg
and
notl
fbld
lea
mov
cmp
stos
cmp
or
push
jmp
cltd
sub
xchg
pop
push
jns
xorl
xchg
jne
cmc
loope
rcrl
inc
and
cmp
notb
mov
push
jge
rorb
ret
xor
mov
cmpl
es
out
mov
add
ss
adc
mov
sub
loope
cmp
insb
ret
sub
dec
aas
lahf
nop
stos
ss
dec
popa
xchg
test
sub
mov
sub
scas
adc
jmp
lcall
xchg
cmp
jp
das
popa
push
bound
push
pop
movsb
gs
inc
jae
adc
pop
imul
sbb
icebp
cmp
mov
mov
mov
cmp
stos
adc
movsb
notl
mov
fcmovnbe
mov
sti
adcl
les
dec
push
insb
xor
outsb
mov
cli
cltd
push
sahf
and
clc
dec
xor
addl
insb
or
dec
pop
mov
into
jle
aad
mov
sub
add
ret
pop
push
push
rorl
jecxz
mov
sub
popa
inc
cmp
outsl
data16
aam
hlt
sbb
clc
xor
or
inc
mov
mov
enter
sbb
mov
jo
popf
sbb
sarb
mov
sahf
xor
mov
lahf
jp
jnp
sbb
es
out
int
popf
pushf
fimuls
dec
arpl
xchg
mov
pop
pop
cli
mov
xor
insl
sahf
movsl
adc
das
ja
and
std
xchg
aad
xchg
fisttpll
add
and
popa
xor
loopne
cmpsb
sub
out
aas
out
in
pop
push
outsl
add
push
scas
popa
dec
xor
xlat
or
cmp
iret
repz
push
jmp
ret
dec
sub
dec
fistpll
push
daa
scas
add
xor
pop
jmp
pop
sbb
pop
mov
aam
xchg
rcrb
adc
xor
xchg
or
jg
jns
push
inc
sbb
stc
out
push
mov
pop
add
cmp
or
cltd
push
push
fcom
sbb
push
sub
ds
or
es
sub
push
sub
push
push
mov
pop
inc
push
push
xchg
sub
test
ja
imul
and
mov
jmp
iret
stos
es
and
lret
push
shr
lret
insl
adc
testl
pop
bswap
mov
jle
data16
iret
dec
rcrl
push
dec
test
sahf
xor
and
jnp
adc
mov
in
enter
cmpl
and
mov
xorl
and
mov
lcall
cwtl
and
outsl
fnsave
jbe
imul
xchg
push
movl
inc
inc
cld
jno
add
mov
hlt
mov
stos
xchg
jbe
adc
push
inc
push
push
sub
push
mov
dec
cmp
push
pop
pop
movsb
jl
pop
test
cmp
and
sbbb
out
inc
adc
movsl
out
std
xor
out
shrl
in
sti
out
dec
sti
dec
into
mov
loopne,pt
sub
sbb
add
sbb
movsl
lds
repz
and
fscale
xor
sbb
push
mov
ret
divb
xchg
movsl
mov
mov
add
nop
repnz
jnp
je
loope
mov
out
lret
das
add
cmp
cmpsl
and
pop
push
pop
or
inc
adc
push
jl
imul
jmp
loopne
stc
test
inc
mov
repz
gs
int3
sub
loopne
jmp
xchg
mov
arpl
adc
inc
outsb
mov
dec
jo
iret
fsts
jg
loopne
xchg
or
jbe
lea
pop
pop
movsb
mov
xor
sti
push
repnz
inc
xlat
rolb
mov
or
pop
imul
lret
sub
add
pop
cld
icebp
cld
push
lcall
jle
clc
test
cli
aam
lret
adc
movsl
dec
or
mov
test
xor
imul
daa
sahf
lcall
ds
jle
lret
pushf
and
adc
jnp
mov
shld
jp
mov
mov
arpl
repnz
xchg
mov
or
pop
mov
dec
jl
jecxz
pop
int
xchg
les
mov
push
adc
mov
pop
stc
inc
xlat
mov
push
mov
daa
pop
pop
mov
mov
lods
or
gs
and
cmp
cmp
xor
sub
aam
in
test
iret
pop
in
int
pop
jmp
ss
xor
mov
add
push
adc
add
lahf
addr16
sarl
push
add
jmp
jg
sub
sbb
mov
mov
push
ljmp
scas
pop
mov
insl
rcrl
fwait
or
sbb
fcoml
or
js
and
mov
and
xchg
js
adc
in
movl
out
into
and
in
dec
popl
clc
into
pop
jno
inc
mov
repnz
cmp
shr
xor
push
decb
shll
inc
mov
pop
stos
sbb
and
neg
popf
xchg
jle
lock
xchg
mov
dec
out
adc
inc
lahf
lock
stos
aad
popa
fsubp
cmpsb
into
test
push
repz
dec
mov
pusha
pop
jb
adc
sub
pop
inc
jmp
pop
in
xchg
and
mov
push
inc
imul
fdivl
dec
mov
push
repz
popa
xor
ss
jns
insb
xchg
divb
add
outsb
dec
ds
jo
aam
fnsave
mov
arpl
out
jnp
xchg
push
lods
push
and
dec
mov
mov
xor
pop
or
sub
xor
aad
add
test
mov
test
idivb
dec
xchg
mov
cmp
fisttpll
int3
push
sar
jo
mov
bound
inc
fildll
push
sarl
xor
out
xor
sbbl
hlt
mov
std
sub
ljmp
dec
loopne
sbb
shlb
fldl
out
arpl
cmc
sub
shr
xchg
hlt
cmp
ss
je,pt
loopne
jb
and
fs
mov
or
sub
pushf
lret
cmp
imul
pop
jbe
xor
popf
adc
sub
push
mov
pop
sbb
pusha
mov
ljmp
mov
push
adc
adc
mov
xor
repz
mov
fdivs
test
outsl
adc
pop
lret
adc
and
dec
xor
mov
mov
xor
repz
std
push
add
cmp
dec
imul
mov
cmp
cmc
cmc
jecxz
aad
mov
ficoml
rcll
imul
mov
mov
and
std
sbb
mov
loope
xchg
cmc
cmp
mov
xor
psllq
mov
cmp
dec
rep
insb
inc
sub
fiaddl
addr16
in
pop
inc
xor
cmp
add
xchg
jns
xor
and
and
dec
test
push
fisttpll
ror
sbb
lret
push
inc
adc
mov
stos
ljmp
in
cmp
inc
add
das
cmpsb
ret
add
adc
add
push
jecxz
xor
jns
sub
cwtl
into
jmp
inc
jp
insb
addr16
lcall
lods
std
sbb
imull
int3
hlt
add
xor
xchg
mov
cwtl
lea
aad
add
xor
mov
push
lea
and
std
nop
call
dec
test
pop
outsb
and
enter
frstor
dec
mov
jg
and
add
jg
mov
mov
jnp
rsqrtps
mov
pop
notl
push
outsl
daa
pop
sbbl
pop
aad
cmp
or
aam
and
xchg
fisttpl
rcl
cmp
sub
jp
cmpsb
mov
xchg
lahf
cmp
and
add
adc
hlt
in
les
pushf
cmp
inc
mov
ds
mov
add
in
xor
xchg
nop
xchg
xor
daa
test
imul
and
push
inc
fistps
lahf
sarb
subb
mov
cmpsb
addl
in
movsl
pop
jb
jns
xor
cmp
dec
pop
inc
sahf
dec
adc
movsl
push
xorl
push
push
sbb
push
out
lcall
popa
push
scas
ret
xor
ss
bound
add
xlat
push
add
pop
jmp
idivb
xchg
xchg
and
cmp
mov
lods
xor
mov
mov
ret
ja
ljmp
into
xchg
push
divb
jbe
push
mov
nop
popf
test
lahf
xchg
sbb
push
js
adc
mov
call
mov
fxtract
movsb
std
fistl
lahf
aas
ret
movsb
rcrb
sbb
test
mov
mov
icebp
and
insb
mov
leave
push
push
je
push
and
in
sub
pop
icebp
xchg
lods
fistpl
or
pop
or
sub
jns
mov
inc
and
mov
xchg
rcr
icebp
fsubr
jecxz
sbb
std
fwait
push
dec
int
test
in
xor
cmp
int
push
inc
stos
test
loopne
adcb
roll
ss
xchg
push
ret
jg
xchg
or
sbbl
push
push
mov
jmp
push
or
out
mov
test
mov
int
shl
xlat
mov
fistpll
add
pop
outsl
js
stos
adc
jmp
stos
and
in
or
mov
jbe
stos
dec
xchg
adc
loope
ja
shrb
into
cmp
lods
rorl
mov
out
xchg
xchg
andb
inc
push
sti
adc
sahf
cmpsb
mov
cmpsl
mov
data16
mov
insl
mov
cs
addr16
cmp
lret
test
mov
push
jmp
push
test
lcall
xchg
add
imul
mov
loop
stc
and
imul
gs
or
jle
loope
sub
mov
mov
lods
xor
push
and
pop
les
adc
push
mov
or
enter
xlat
fnsave
mov
dec
pop
insl
mov
and
jecxz
and
les
rolb
mov
imul
lret
jno
and
sahf
nop
imull
mov
rorb
out
enter
adc
sub
jb
push
jp
fcoml
mov
jle
cmpsl
jecxz
mov
dec
fdivrs
sahf
push
fcompl
adc
xchg
shll
jle
filds
outsl
mov
mov
jg
cmp
mov
push
jae
jge
inc
outsl
mov
or
pop
sbb
adc
push
sub
push
pop
cmp
aad
pop
xchg
cwtl
xor
ss
mov
pop
clc
orb
dec
leave
mov
adc
fcmovnb
mov
in
std
insb
imul
jb
xor
int
mov
testb
jne
fs
sbb
jo
fdivrs
into
or
xchg
cmp
mov
rcrb
cmpsl
rclb
pushf
lahf
push
into
pop
lods
das
push
adc
push
sbb
mov
mov
rorl
mov
insb
clc
pop
mov
mov
ja
xchg
mov
jmp
mov
xchg
test
out
outsl
das
out
and
mov
sti
cmp
mov
mov
rcl
imul
jo
lahf
in
sub
cmp
fdivl
ss
negl
cmpsl
enter
jmp
cmp
fwait
push
inc
insl
ret
mov
hlt
adc
inc
sti
dec
add
sub
mov
pop
pop
dec
inc
lret
mov
add
aam
cwtl
ja
shl
cwtl
enter
mov
sub
movsb
mov
fcomps
cli
ljmp
cmp
lods
xchg
jecxz
mov
adc
rcrb
and
and
mov
push
scas
rolb
rcl
xchg
aam
inc
lds
mov
sub
push
mov
and
adc
add
cmp
rcl
lea
iret
fnstsw
adc
or
and
jne
movsl
insb
pop
mov
jle
mov
aad
xchg
imul
jno
push
fs
incb
inc
xor
or
mov
repnz
out
ja
jne
imul
xchg
test
sbb
lcall
popa
adc
mov
adc
push
lahf
mov
adc
add
rorl
out
mov
xchg
fmull
mov
cmc
cld
sbb
mov
clc
out
add
into
cmc
ja
mov
test
clc
mov
jno
inc
dec
and
pop
lods
mov
push
stc
sbb
repnz
jl
mov
pop
or
mov
scas
mov
jbe
movsb
push
stos
mov
add
inc
jae
mov
adc
pusha
or
lods
xlat
inc
add
iret
dec
addr16
enter
fstps
lds
mov
push
loop
cli
add
xlat
xorl
push
imul
xchg
xor
mov
and
fwait
les
sbb
add
mov
cmp
insl
mov
ss
cmpsl
mov
popf
add
or
in
pop
push
adc
or
inc
or
loope
out
adcb
fmul
mov
hlt
lcall
push
lret
imul
xor
test
inc
push
xchg
gs
pop
mov
fistpll
push
fsubrl
or
cmp
pop
js
cmc
cwtl
or
adc
test
xchg
sahf
mov
out
fmuls
inc
gs
add
or
jge
js
aam
cld
inc
jmp
icebp
ret
dec
sbb
mov
shll
jnp
or
or
or
sub
xchg
dec
dec
or
imulb
push
in
jmp
test
and
lods
arpl
inc
sub
adc
jle
inc
rorb
xlat
fisubrl
lcall
mov
pop
xor
xor
stc
mov
jmp
in
insl
jmp
pop
out
test
xor
outsb
jecxz
xlat
mov
test
adc
xchg
mov
fstpt
push
ret
inc
addb
shrb
fdivr
jno
addps
xor
mov
roll
daa
cmp
stc
push
inc
in
pop
repnz
fadds
gs
push
cmp
inc
out
cmp
xchg
mov
test
mov
shl
push
xchg
xchg
rorl
xor
cmp
loopne
stc
pop
pop
call
inc
sbb
lods
rcrb
or
insb
repnz
test
xchg
hlt
pop
ljmp
jae
rcrl
inc
in
push
adcb
fwait
cmp
sub
and
je
jo
clc
je
mov
in
xchg
dec
fcoms
mov
push
dec
push
cmpsb
push
fsub
pushl
cmp
mov
inc
int
sahf
imul
mov
daa
xor
loope
mov
lods
and
mov
in
sbb
xchg
addr16
rolb
cmc
push
std
pop
les
xor
daa
popa
les
dec
xchg
mov
xor
scas
adc
xor
jecxz
pop
push
sub
or
mov
call
sbb
cmp
mov
adcb
out
outsb
adc
xor
in
xchg
push
xor
je
int
in
mov
call
sub
mov
mov
jle
insl
jne
imul
sub
or
push
clc
mov
jae
clc
jb
sub
mov
mov
jp
sub
aas
dec
enter
shll
dec
in
xchg
imul
adc
cmp
jge
pusha
and
loope
in
out
xchg
adc
mov
insl
fmuls
sbb
or
jo
inc
push
in
mov
inc
ret
jge
lods
xorl
mov
rcl
pop
and
test
arpl
dec
jle
or
rcrb
sbb
fsub
sub
sti
jo
jl
lea
pop
addl
insb
inc
xor
int3
aad
fsubs
sahf
scas
enter
push
andl
in
push
mov
rcrl
inc
sbbb
xchg
les
lods
dec
movsl
or
or
mov
test
or
lret
insb
jnp
loop
lret
add
out
in
xchg
xor
and
ss
dec
xor
mov
lods
pop
jecxz
or
and
stos
inc
lods
adc
xor
test
das
lcall
aaa
fwait
add
mov
js
xlat
jns
sbb
mov
js
ret
cmp
loopne
push
lret
daa
fs
mov
dec
aad
outsb
scas
xor
addb
add
jge
lahf
cli
movsl
in
popa
dec
cmpsl
sti
cltd
gs
adc
out
push
push
or
outsb
xchg
cmpsl
mov
sub
lods
nop
mov
jg
loope
addb
adc
nop
addr16
pop
adc
pop
pop
loop
fcom
inc
stos
ja
ror
or
add
mov
mov
add
cmp
pop
add
adc
stos
cmpsb
loope
dec
mov
mov
xchg
and
int3
rcrb
aas
je
add
jge
sub
pusha
sub
lahf
inc
mov
dec
sbb
inc
sub
jecxz
push
sar
addr16
outsl
fdivs
loope
add
push
rcll
popa
in
pop
mov
iret
fists
jae
cltd
lahf
or
sub
mov
std
sbb
inc
or
cli
cmp
fisubrl
and
dec
and
jmp
loop
push
sbb
lods
xchg
push
mov
and
scas
mov
ljmp
imull
inc
ficoms
leave
in
cltd
std
xor
jne
dec
lret
add
jecxz
cli
and
repnz
inc
mov
fstps
sbb
daa
popa
in
cmp
arpl
stos
stc
dec
outsb
mov
bound
sub
pop
cmpsl
pop
inc
call
and
xchg
and
bnd
pop
test
lea
loopne
addb
out
ss
das
dec
cmpsl
cmpsb
adc
xchg
imul
inc
cld
inc
mov
cmp
icebp
inc
mov
dec
jmp
jg
je
lret
xchg
jne
andl
cmp
adc
jae
mov
jmp
data16
pop
mov
jno
mov
sbb
push
test
ljmp
int
fimuls
stos
lods
dec
sub
imul
pop
sub
fcmovbe
sub
xchg
call
lcall
and
aaa
add
xchg
sub
scas
in
mov
scas
mov
mov
adc
loope
sti
loopne
sub
lcall
lahf
xchg
ds
add
nop
stos
adc
lea
jle
nop
push
ljmp
or
bound
lods
dec
mov
adc
dec
shrl
leave
or
pop
adc
jle
xchg
cmp
push
or
xchg
in
dec
adc
sub
pusha
mov
hlt
loope
jnp
pop
rcrb
ret
insb
push
movsb
icebp
inc
add
push
and
jns
mov
out
sbb
sbb
sbb
xchg
out
xor
dec
xabort
pop
adc
das
stos
psubsw
xchg
lret
mov
cmp
gs
or
xchg
lods
dec
and
inc
es
mov
adc
sahf
jnp
push
fwait
pusha
fisttpll
jge
mov
out
jns
mov
cltd
add
mov
xor
ficompl
jnp
lret
dec
mov
scas
mov
lgs
cmc
je
xchg
dec
shrb
mov
rclb
adc
jnp
ffreep
out
pop
idivb
sub
jbe
push
xchg
fcom
dec
pop
sahf
test
cmp
fistl
fsubrs
lahf
dec
push
jecxz
dec
rorl
sbb
dec
sub
pop
sub
arpl
fmul
jmp
test
lea
sbb
jb
mov
sub
nop
pop
in
std
mov
xlat
cmp
mov
fisubrs
mov
xor
mov
lods
rorl
std
lahf
les
add
push
mov
test
fldcw
in
mov
xchg
or
pop
pop
dec
fcoms
dec
imul
pop
mov
outsl
jmp
cmpsl
in
shlb
push
daa
imul
cmp
fsts
mov
jmp
pop
fwait
gs
int
cli
addr16
cs
xlat
sbb
clc
mov
jl
out
sahf
jmp
mov
outsl
pop
push
push
inc
mov
in
dec
negb
out
xor
adc
les
lea
add
fidivs
inc
imul
cs
xchg
jae
push
sub
dec
pmulhuw
inc
cld
cmc
mov
decl
add
sub
repz
add
and
jbe
out
jno
aam
xor
pop
cmp
icebp
inc
cmpsl
push
pop
test
adc
pusha
push
hlt
add
sub
xlat
sbb
ja,pt
add
enter
lahf
imul
xor
popf
cmpsl
xor
and
lcall
mov
xchg
dec
or
lds
addl
out
movsl
xchg
daa
inc
test
dec
sub
mov
or
das
stc
mov
dec
pop
ret
mov
fsts
shlb
ret
mov
loop
js
xchg
popa
inc
mov
mull
pop
mov
add
push
icebp
pop
loope
inc
and
pusha
jp
es
sbb
dec
inc
mov
push
sahf
repnz
adc
mov
lahf
fstpl
mov
and
into
add
push
out
loope
add
push
push
or
lcall
mov
shlb
push
add
jecxz,pt
sbbl
and
popf
xchg
pop
mov
push
lret
arpl
push
shll
test
xor
into
pop
imull
cli
adc
std
xor
in
mov
scas
and
popf
subl
dec
xlat
data16
and
xchg
in
jb
shlb
ljmp
xchg
mov
jle
jmp
out
inc
lcall
mov
shlb
xchg
dec
or
sub
cwtl
stos
fiaddl
xchg
xchg
mov
fldcw
clc
pop
jns
out
mov
gs
arpl
lods
scas
xor
mov
mov
addr16
xor
outsb
jmp
mov
pop
test
push
rcr
fwait
jnp
push
cld
stc
push
jge
pop
add
inc
mov
std
loope
dec
cwtl
push
push
mov
adc
pop
scas
ljmp
cmpsl
in
sbb
jle
adc
pop
dec
inc
popa
sarb
and
sub
pusha
ss
sub
cmp
mov
aaa
add
lret
sbb
mov
cmp
push
jmp
adc
jno
dec
xor
jg
cwtl
jge
add
push
loope
shll
outsl
push
dec
push
test
mov
cwtl
test
sub
inc
push
adc
mov
into
hlt
inc
pop
cwtl
orb
sub
xchg
mov
repz
inc
lods
test
fadds
adc
or
inc
in
loop
or
xchg
sbb
mov
mov
add
add
jle
aam
orl
popa
cwtl
aas
sbb
cld
pushl
push
add
std
arpl
mov
xchg
cs
pop
nopl
in
addr16
sarb
jmp
inc
push
sub
mov
repz
cwtl
cmovne
add
hlt
bound
icebp
push
mov
sub
dec
stc
sbb
push
call
xor
or
leave
xor
fwait
outsl
pushf
outsb
das
cmp
cmp
inc
push
mov
shrl
movsl
popf
pop
out
inc
xor
test
jbe
jmp
mov
dec
xor
inc
pop
or
jp
out
mov
testl
sub
js
mov
das
sbb
inc
inc
adc
push
push
loopne
insl
sbb
out
sub
cmp
aam
sub
punpcklbw
scas
movsl
je
fnstenv
nop
js
fisttps
and
inc
int
xor
adc
push
jne
sbb
mov
sub
and
std
add
leave
xchg
rorl
outsl
add
loopne
lds
in
or
ret
cld
packsswb
mov
dec
sbb
mov
cld
pop
and
jnp
pop
icebp
mov
xchg
pop
xchg
jo
mov
pop
lcall
test
leave
fldcw
insb
in
mov
ds
fcmovnb
mov
cli
mov
les
stos
scas
out
cmp
js
jbe
mov
jnp
rcrl
les
enter
outsl
pushl
or
pop
sub
dec
xor
mov
mov
add
addr16
adc
cmc
out
insl
add
pop
ss
outsl
icebp
inc
stos
mov
aaa
sbb
lea
xchg
push
in
add
mov
add
and
inc
shll
ret
sbb
insb
fwait
shll
scas
mov
pop
and
sbb
in
outsl
inc
fdivp
dec
or
stc
push
push
inc
inc
sbb
xchg
or
addr16
add
faddl
pop
insl
sub
add
es
imul
shlb
sti
insl
ret
dec
aas
xor
bound
mov
data16
inc
ffree
es
sub
hlt
and
sahf
mov
test
cltd
jns
in
ret
es
enter
mov
mov
sbb
and
sub
int
lock
push
sbb
dec
retw
dec
adc
jb
cmp
adc
fiaddl
cmpsb
jmp
fadds
jle
sbb
jg
xor
push
xchg
mov
mov
xchg
dec
adc
dec
and
fwait
mov
mov
or
xchg
pcmpeqd
mov
and
inc
mov
add
jmp
mov
sbb
pop
push
repz
add
mov
loopne
add
fistpll
cmp
sub
shrb
mov
mov
push
pop
cmpl
add
pop
xor
mov
dec
mov
arpl
xchg
mov
dec
addr16
popa
test
inc
push
pop
loop
xchg
shl
xchg
aad
pop
cmpb
cli
nop
mov
push
std
jp
sub
inc
insb
and
adc
pop
shll
lods
cmp
and
xchg
je
jo
jo
cld
lods
xchg
addl
in
cmpl
mov
or
push
add
push
ret
jbe
das
insl
mov
mov
push
pop
test
ficoms
mov
jl
popa
fwait
dec
outsb
ja
pushf
mov
jecxz
loopne
fstl
sbbb
cwtl
andb
jmp
cmp
sahf
loop
mov
mov
jno
xchg
mov
lret
add
mov
call
in
cltd
add
lret
push
lods
lea
std
add
cltd
push
cmp
mov
dec
test
mov
nop
stos
rcrb
adc
and
hlt
lods
xchg
les
adc
lods
adc
jae
mov
cmpsb
pmaxsw
pandn
or
int
popa
pop
or
hlt
and
out
push
push
sub
aas
adc
and
push
mov
popf
push
mov
sbb
xchg
sbbl
mov
dec
fs
lea
lcall
or
sti
fsubrs
push
mov
pusha
dec
mov
or
mov
mov
dec
push
ret
add
mov
fucomip
jne
and
pop
negb
mov
fsub
inc
cmpsl
mov
fldl
fisubrs
test
sbb
xchg
xchg
mov
icebp
pop
test
mov
mov
movsl
addr16
fmuls
adcl
imul
xchg
jae
test
jnp
inc
repz
ljmp
or
je
add
jl
pushf
inc
in
dec
and
ljmp
sub
jle
dec
pop
ret
imul
dec
push
jmp
outsl
dec
xchg
int
cmp
xchg
rcr
sarl
xchg
mov
dec
out
jl
ss
mov
inc
test
dec
jns
mov
test
xchg
leave
jno
push
das
cmp
pop
call
xlat
pop
pop
xor
addr16
push
lahf
jmp
lods
clc
sbb
or
pop
inc
inc
sbb
jns
pop
jg
sbbl
rep
shrl
test
sbb
mov
lods
sbb
fwait
out
arpl
andl
cli
add
push
cmp
js
repz
sar
int3
les
inc
xchg
inc
inc
jnp
mov
dec
mov
repnz
pop
mov
jecxz
pop
filds
stos
jne
testl
inc
test
loopne
mov
add
scas
gs
or
out
movsb
mov
mov
push
orb
loop
es
xchg
inc
adc
testl
xchg
cmp
pop
jg
imul
adc
dec
out
popa
insb
jecxz
test
and
xchg
ja
xlat
dec
inc
nop
pop
push
sbb
or
mov
add
and
cltd
lods
push
fstpl
lret
dec
jns
out
mov
imul
add
lods
pop
out
outsb
push
add
fdivr
js
and
in
mov
rcrl
insb
dec
aaa
insl
daa
mov
inc
ja
lahf
mov
jb
jp
es
or
ficompl
popa
add
and
and
adc
in
dec
xchg
or
sahf
cmp
mov
or
xchg
sahf
add
sbbl
iret
pop
es
call
test
jg
sub
xor
pusha
mov
lret
lea
push
sbb
std
mov
push
cli
flds
jmp
fsts
push
loopne
mov
xchg
pop
dec
adc
loope
movsl
in
dec
ds
aam
dec
das
jg
mov
mov
xchg
dec
ja
dec
inc
fmulp
add
lahf
imul
add
mov
mov
or
cltd
mov
or
cmp
xor
xorb
cld
push
outsl
inc
xlat
xorb
mov
sbb
pusha
cld
mov
lret
pop
mov
movb
std
lds
loope
call
fisttpl
xor
cld
stos
push
idivl
cmp
cltd
mov
scas
rcrb
dec
movsb
mov
fisttpll
jns
cmp
fisubs
push
popa
jmp
lret
or
mov
lahf
ljmp
insb
ret
mov
cltd
out
adc
jmp
imulb
incl
jle
outsl
sarl
das
xchg
jg
mov
mov
xchg
push
imulb
stos
pop
mov
mov
mov
adc
sahf
and
xlat
pushf
repnz
insb
fidivs
in
test
ret
sbb
add
sbb
pusha
insb
popa
outsl
std
sub
xor
cwtl
aas
sub
cli
dec
gs
cmpl
and
sbb
mov
dec
hlt
jle
lret
enter
pop
scas
adc
sarb
out
mov
adc
push
cmp
pop
rcl
shrl
mov
add
call
das
hlt
movsbl
push
xchg
xor
scas
idivl
mov
aam
sbb
mov
mov
mov
mov
movsb
push
pop
inc
or
jae
testl
dec
or
inc
xchg
xchg
mov
adc
push
rcl
add
sbb
xchg
mul
imul
mov
inc
push
jecxz
pop
int3
xchg
lret
clc
sbb
inc
inc
pop
cmp
sub
push
inc
fnstcw
hlt
cmpsl
dec
in
fwait
scas
mul
jl
and
lods
add
insl
fwait
pop
jb
mov
in
pop
push
mov
sbbb
pop
jg
loop
test
xchg
or
dec
mov
inc
or
lret
xchg
jb
mov
rcll
xchg
pop
test
cmp
out
jnp
lds
sbb
xlat
movl
pop
jp
ret
and
ss
inc
xor
orb
ja
out
mov
imul
cmc
imul
popa
fstl
pop
or
sbb
std
mov
xor
ret
push
pop
cmpsl
ja
scas
ja
aad
outsl
stos
out
iret
mov
das
xor
cmpsl
out
int
movsb
jnp
add
xlat
les
mov
fists
lcall
and
jge
xchg
mov
daa
jo
push
adc
xlat
repz
fwait
call
sub
mov
sub
mov
pop
mov
into
data16
sti
sub
fimull
jb
jo
or
loopne
dec
inc
or
add
mov
adc
stc
jbe
aad
xor
xor
adc
rcrb
ret
mov
scas
push
mov
dec
scas
cmpsb
repnz
test
cmpsl
xchg
and
popa
xchg
xlat
or
jo
or
sub
mov
sbb
enter
mov
inc
mov
mov
add
out
adc
fnstenv
gs
das
mov
in
int3
loop
cmp
into
decl
je
aas
imul
and
les
popf
sti
mov
cmp
adc
and
sub
cmc
xchg
fwait
xor
jl
stos
clc
lcall
jecxz
int3
repnz
shrb
mov
out
xchg
arpl
xor
clc
xchg
repz
fldlg2
fmull
inc
sub
add
jne
nop
cmpsb
lods
mov
ret
xor
js
and
mov
xchg
sti
es
sub
popa
mov
push
shr
xlat
xchg
jns
xor
mov
mov
xchg
cmp
test
adc
cmpsl
arpl
jo
sbb
arpl
jae
xor
xchg
adc
ucomiss
xchg
add
mov
int3
jg
sbb
out
jb
sub
mov
pop
shrb
xchg
pop
dec
data16
mov
jnp
xchg
or
adc
test
lret
cmp
popf
enter
sbb
cmpsb
int
sub
sti
insl
push
push
in
pop
popa
shll
inc
xor
in
pushf
les
xchg
push
fdivl
xor
imul
aad
negl
push
rclb
ja
insb
fwait
and
and
xchg
mov
arpl
inc
aam
and
pop
jo
testl
enter
sub
inc
push
mov
imul
fdivl
imul
push
aas
pop
loope
mov
adc
xor
divb
inc
inc
aaa
mov
popl
mov
sbb
cmp
cmp
mov
addr16
mov
daa
and
enter
std
or
sbb
fldl
lock
lret
push
ret
and
das
xchg
jmp
xor
xchg
lret
jno
pop
std
pushf
inc
ds
rorb
addr16
mov
das
mov
add
dec
cmp
aaa
adc
fmuls
imul
stos
mov
pop
fldl2e
pop
lcall
xchg
inc
add
movsb
test
outsb
mov
dec
adc
js
mov
pop
js
sbb
popf
int3
shll
into
movb
push
or
mov
int3
adc
dec
inc
cltd
cmc
inc
test
push
fprem1
inc
and
and
xor
in
adc
dec
push
loope
mov
ja
jbe
int3
insl
xchg
cmpsb
fistpl
cmp
add
pop
dec
in
mov
outsb
scas
pop
aam
push
shrl
aam
push
lahf
jp
push
cmp
out
add
sahf
bound
lret
pushf
lahf
js
sub
gs
mov
adc
dec
movsl
mov
jns
fldcw
cs
adc
jle
sbb
in
loope
aad
mov
dec
clc
lahf
rcrl
fisttps
mov
adc
sub
inc
mov
xchg
cwtl
inc
out
dec
aam
adcl
lea
hlt
jne
and
mov
or
fldenv
xor
xchg
nop
or
pop
dec
sub
adc
ret
inc
fsubl
ss
mov
lods
popa
xor
adc
and
fimull
xchg
andb
push
lret
xor
dec
and
ja
jns
mov
ret
xor
lret
or
sub
sub
out
divb
stos
out
inc
out
xchg
mov
xchg
pop
xchg
test
dec
hlt
in
and
pop
gs
imul
push
mov
mov
lea
ret
dec
xchg
dec
ror
sbb
cmc
adc
push
cmp
test
cmp
inc
jb
das
sbb
mov
sbb
in
sbb
lahf
push
fmul
mov
mov
outsl
inc
xchg
jo
xchg
push
cli
sub
mov
push
mov
pop
loopne
in
outsb
repz
dec
push
jle
lahf
outsb
rcl
test
jae
aaa
aam
mov
movsb
adc
imul
bound
pause
push
mov
mov
xchg
int3
fisubs
das
jg
aad
incl
add
pop
idivb
and
sbb
leave
jo
movsl
imul
repz
ror
push
mov
add
xchg
das
je
mov
cmpsl
repnz
daa
jno
push
mov
rcrb
jecxz
jno
and
jg
stos
cli
mov
jmp
jl
or
js
es
or
mov
xchg
lcall
pop
dec
jge
test
mov
fwait
mov
mov
or
decl
lcall
xchg
cmp
cmp
cmp
push
dec
jbe
mov
and
pop
das
rcrl
mov
adc
xchg
pushf
mov
push
dec
push
cwtl
lret
mov
es
shll
add
and
dec
xchg
mov
push
adc
mov
sbb
and
mov
xor
or
push
aam
xor
and
sbb
lods
lea
in
xchg
push
pop
outsb
mov
pop
sahf
ja
inc
xchg
add
out
sbb
int3
rorl
cli
inc
push
insl
ss
pop
sub
mov
or
dec
xchg
add
inc
mov
loopne
jnp
jo
ss
dec
add
jae
cmp
mov
or
lods
add
jp
mov
jbe
push
rcr
mov
push
cmp
daa
jbe
xchg
scas
adc
jns
inc
sub
gs
push
mov
and
xchg
sub
lods
cmp
jno
fwait
cmp
fadds
sub
movsl
lods
fsubs
out
xor
mov
xor
testb
std
pop
lret
dec
inc
ja
repnz
fprem1
dec
test
push
mov
inc
aad
fadds
clc
fsubr
lcall
insl
jno
stos
jmp
loop
loop
cli
int3
cld
mov
or
adc
ja
cld
pushf
or
gs
pop
int3
cmp
loope
mov
mov
movsl
ss
or
shr
push
xor
ret
mov
idiv
sahf
cmp
frstpm(287
movsb
pushf
in
pop
push
fstl
aad
js
jle
sar
loope
testb
push
out
subb
hlt
xor
aad
enter
shrb
xchg
outsb
pop
mov
ret
and
push
out
jno
mov
inc
and
adc
inc
mov
xchg
and
inc
sbb
jb
jb
cli
sub
push
pop
int
push
xchg
mov
or
xchg
hlt
xchg
repz
ds
push
cmc
jge
mov
xchg
jmp
insl
loop
lahf
cmp
adc
pop
pop
fs
xorl
xchg
ds
std
xchg
out
xlat
loope
xchg
in
and
sbb
fidivs
pop
nop
test
add
cltd
nop
add
jmp
mov
and
pop
cmp
pusha
jl
ja
adc
and
adcb
or
jle
mov
divb
push
movsb
pushl
or
hlt
fs
cmpl
arpl
fnstcw
into
sub
cmp
fiadds
adc
jae
sbb
bound
xchg
mov
lods
std
aad
push
mov
int
enter
adc
cmpsb
or
xor
fisubrl
xchg
adc
out
xchg
test
xchg
pop
adc
hlt
int
jp
dec
jecxz
inc
shlb
js
lea
cltd
js
addb
aam
jecxz
sub
pop
sbb
outsl
adc
into
xor
mov
lock
rclb
stos
push
mov
pop
ss
sub
ss
ja
cmc
test
sbb
in
insb
push
xor
push
shlb
jg
push
cmp
out
in
add
sbb
mov
inc
mov
add
out
pop
inc
outsb
cmp
inc
lock
lock
rcr
push
mov
mov
pop
mov
fwait
lock
cmpsl
add
sbb
jge
cli
out
fnstsw
out
mov
xchg
mov
shl
cmpsl
push
mov
add
mov
in
sar
jecxz
loopne
pusha
aam
mov
dec
push
negl
add
xchg
mov
pop
fiaddl
push
jae
test
sarl
pop
lret
imul
imul
xorl
out
push
or
adc
mov
add
add
rclb
cmp
int
stos
xchg
mov
movsl
mov
iret
push
popf
push
lcall
lods
negb
cwtl
pop
pop
subb
mov
int
cmp
add
mov
rolb
insl
dec
cmp
loop
cld
push
mov
rcl
aas
mov
mov
and
add
outsl
movsl
and
popa
xchg
js
out
xchg
add
inc
aad
popa
fsubs
and
arpl
aas
inc
cmp
das
adc
in
cmpsl
ja
leave
sub
mul
arpl
push
add
add
inc
push
cmp
int3
fistl
jge
cmp
mov
sbb
push
stos
inc
loope
sub
add
mov
mov
rolb
call
push
jp
mov
push
cmp
mov
mov
push
sbb
xor
je
mov
leave
paddsw
cli
cmc
nop
lret
dec
dec
and
cltd
ret
testb
into
loope
shll
mov
mov
mov
outsb
xor
ja
lea
push
push
ljmp
in
pop
cld
lods
test
mov
cmp
ljmp
xchg
sbb
push
inc
jb
xchg
setb
push
insl
loope
sbb
aaa
push
arpl
cltd
sbb
xchg
cltd
push
mov
fldl
and
orb
out
addb
cwtl
aas
cld
and
push
or
inc
push
sbb
inc
les
test
int3
cli
dec
sarb
ljmp
cmpsl
xchg
sbb
fmull
loope
or
xor
ds
xchg
sub
popa
mov
addb
jno
fwait
push
rolb
or
gs
xchg
push
lahf
dec
fdivl
mov
in
insb
adc
or
cmp
cmp
fnstsw
repz
js
push
movsb
lods
inc
mov
add
cs
dec
mov
test
lahf
cmp
inc
js
mov
sti
insl
je
mov
fsubrl
popf
xchg
push
cli
fsubp
or
push
pop
inc
or
mov
and
fsubl
add
imul
cmp
sbb
ljmp
mov
clc
loope
jbe
mov
fmul
nop
and
push
mov
and
jg
std
shrb
mov
cld
and
popf
cmp
cmpsb
ljmp
push
jl
rolb
loop
fidivs
movsl
fs
out
aas
lds
adc
jne
mov
bound
test
fisubl
mov
scas
in
enter
adc
lods
adc
jo
xchg
jle
sub
pop
shll
test
dec
lret
pushf
xor
ja
mov
movsb
and
je
mov
add
das
xchg
push
cmpsb
mov
int
aaa
sub
add
pop
fs
mov
scas
xchg
cmc
sti
es
dec
in
inc
xchg
and
test
call
gs
scas
mov
test
mov
add
rorl
nop
push
push
jl
js
dec
mov
mov
mov
stc
mov
xor
push
lret
mov
cmpsl
arpl
fisubs
jmp
jl
inc
shlb
and
scas
xchg
jb
dec
bound
std
jge
ficomps
sbb
hlt
push
dec
insb
push
cmpsb
push
mov
mov
inc
xor
insb
mov
and
imul
out
push
jmp
loope
lret
aaa
push
jge
push
fs
inc
mov
inc
addr16
fidivs
sub
mov
out
ds
lcall
mov
push
dec
ja
cmpsb
fsubl
pushf
addr16
push
idivl
lds
and
in
sbb
sbb
iret
mov
cmp
and
test
sti
xchg
out
cld
add
xlat
stc
pop
cmp
jbe
ficompl
jp
idiv
ret
icebp
mov
arpl
pop
xor
jl
subb
nop
jbe
mov
inc
je
xor
inc
push
mov
fsubrs
aas
inc
in
pop
sub
jmp
stc
xchg
mov
out
sub
mov
hlt
jmp
push
imul
push
in
rorl
mov
adc
out
jl
and
enter
leave
adc
jbe
xchg
jp
enter
inc
adc
mov
sbb
inc
incl
std
xor
xchg
ljmp
mov
cmc
lock
jge
pop
lods
jg
pop
mov
dec
inc
fsubs
or
negb
arpl
jmp
pop
imul
cmp
mov
ds
in
shl
insl
add
imul
adc
sahf
inc
insl
dec
cmpsb
jne
adc
lds
mov
jle
lret
and
mov
in
aad
lret
pop
out
jae
lret
mov
adc
push
xchg
call
xchg
jb
inc
and
scas
xchg
mov
mov
loopne
insl
cmp
jg
jmp
jns
es
pop
inc
cwtl
xchg
and
cli
pusha
mov
nop
in
aad
insl
bound
push
inc
loopne
imulb
push
pop
faddl
pop
push
inc
xchg
adc
ficoms
fimuls
cmp
int3
daa
data16
dec
xchg
xchg
nop
in
xchg
cmpsb
sub
notl
xor
js
cli
dec
adc
mov
stos
popa
popw
xlat
and
lds
and
push
sbb
or
in
add
aad
xchg
in
bound
sbb
stos
jno
push
mov
aas
jo
jmp
fstpt
shlb
xchg
cmpsl
aad
outsb
mov
mov
xchg
insb
lea
mov
mov
or
cltd
dec
std
xchg
adc
rclb
adc
into
movsl
mov
sbb
dec
add
and
cmp
and
push
fs
out
repz
adc
push
ret
fdivrl
sbb
adc
in
out
test
sub
jp
xchg
bound
mov
jno
fdivl
notb
cmpsb
pusha
pop
in
aas
arpl
mov
mov
mov
and
add
pop
or
cld
cmpb
std
mov
jbe
pop
aam
or
je
sbb
inc
or
xchg
add
int
scas
pop
lcall
mov
jp
xchg
dec
mov
mov
adc
push
mov
sahf
pusha
push
jecxz
push
mov
jbe
dec
or
pop
cmp
enter
and
adc
aad
adc
test
mov
pop
subl
fs
push
in
and
push
dec
mov
xchg
mov
push
push
push
mov
arpl
adc
ja
xchg
lods
adc
dec
and
dec
jg
es
jl
push
stc
jbe
addr16
mov
sbb
mov
cmp
or
add
test
jmp
outsb
dec
jae
aam
inc
fsubs
sbb
or
cmc
mov
stos
ljmp
ret
jns
or
jns
ds
sahf
dec
xchg
jae
mov
das
lret
jmp
sub
or
mov
popf
pop
or
lret
xor
jl
scas
push
or
iret
pusha
pop
lea
mov
addr16
mov
sar
or
fidivrl
jno
push
xchg
mov
shrb
mov
loop
fs
rclb
add
dec
bnd
stos
pop
loope
and
pop
xchg
add
cmp
push
aad
das
ret
repz
gs
pop
int3
bound
jge
loopne
pop
sub
cmpsl
data16
loop
xor
push
adc
std
and
rorl
pop
nop
mov
hlt
jns
mov
xchg
icebp
sar
push
in
lock
mov
fsts
and
cmp
enter
jmp
cli
pop
fiadds
lods
jo
inc
inc
pushf
cmp
in
out
mov
aas
xor
mov
dec
test
xor
mov
inc
sbb
jge
adcb
int3
lcall
in
dec
aam
sub
ss
dec
mov
add
add
mov
push
jo
mov
jo
add
pop
mov
jb
adcb
pop
jo
out
leave
and
fs
xchg
ffree
mov
loopne
or
cmp
mov
leave
add
in
dec
adc
scas
xchg
mov
or
add
leave
add
jnp
xor
shll
int
fwait
mov
imul
mov
xchg
xor
cwtl
mov
mov
les
out
or
or
test
xor
lock
fsubs
bound
mov
adc
popf
icebp
hlt
pop
sbb
push
xor
sub
mov
xchg
mov
in
mov
dec
das
and
int
test
jo
push
mov
pop
dec
push
sbb
mov
mov
dec
cmp
sar
popa
imul
insl
inc
lahf
enter
xor
or
cmpsb
push
mov
loope
pop
mov
push
or
scas
stos
push
test
jge
cmp
mov
scas
pop
pop
jnp
aas
pop
movsb
scas
sets
cmp
cltd
andb
cli
arpl
movsl
inc
jg
imul
je
pushf
in
insl
and
imul
cmp
jecxz
inc
fwait
fwait
jnp
je
shll
movsb
jge
bound
mov
or
sub
popf
mov
loop
cltd
mov
inc
sub
popa
out
mov
ss
ret
jb
push
arpl
enter
sahf
pop
xor
out
xchg
cmp
xor
mov
mov
ds
pop
sbb
jbe
inc
mov
fiaddl
pop
add
mov
sbb
mov
outsb
test
mov
add
outsl
sbb
insb
out
iret
fcom
inc
dec
ds
ficoml
xchg
or
adc
push
fcomp
fnstenv
popf
insb
xchg
jne
push
cltd
and
xchg
cli
add
adc
adc
lea
push
push
sub
lds
mul
push
mov
xchg
pusha
leave
out
movsb
add
in
jae
into
jo
in
sub
or
adc
xchg
div
mov
outsl
sub
xor
add
ficompl
jnp
sub
aad
repz
sbbb
dec
fcmovnu
in
icebp
nop
mov
pusha
pushf
adc
cld
adc
clc
cwtl
sbb
xchg
arpl
popf
sub
dec
and
bound
ljmp
inc
aam
in
xchg
sbb
outsl
imul
sub
xchg
fldcw
loop
cmp
rolb
mov
mov
hlt
cwtl
xchg
sbb
mov
pop
out
pop
orl
dec
cmpsl
push
sbb
divl
and
lods
lods
cmp
sub
cmc
inc
jns
mov
add
xor
dec
subl
mov
test
sub
xchg
scas
subl
shlb
pop
pop
and
add
push
js
mov
into
xchg
mov
shll
adc
rcll
das
adc
ss
jne
outsl
sbb
sbb
les
xchg
cmp
leave
inc
mov
cmc
mov
jmp
js
xor
dec
fbld
loop
xor
mov
hlt
mov
mov
js
jmp
cs
nop
push
notb
adc
add
aaa
xor
es
push
lds
adc
mov
xchg
inc
dec
xchg
add
push
adcl
or
lock
xchg
jmp
sbb
mov
mov
add
ret
in
jge
push
lret
shll
xlat
sahf
xlat
xor
mov
push
out
in
mov
notb
repnz
movb
adc
or
test
cmp
xor
fs
dec
orb
inc
xchg
scas
mov
inc
lds
sbb
into
add
sarl
je
pushf
nop
sub
sub
inc
mov
push
pop
xor
test
mov
add
les
lods
bound
idivl
mov
cmp
lret
sbb
xchg
out
inc
sar
mov
cltd
xchg
fnstenv
pop
dec
jo
cmpb
jg
mov
ss
fiaddl
outsl
xlat
clc
mov
push
ret
repz
in
inc
and
mov
push
push
mov
push
adc
add
push
cmp
stos
xchg
add
sahf
sahf
sub
xchg
mov
popf
movsb
xorb
cmpsl
sbb
sub
jo
jnp
xorb
and
sub
pop
shrl
and
and
lcall
pop
cld
push
pop
daa
nop
dec
dec
jmp
int3
pop
sbb
inc
push
popa
ds
pop
imul
xorb
sbb
lods
lea
and
outsb
rcrl
mov
addr16
fisubs
mov
mov
int3
and
jae
push
mov
jl
mov
cmp
hlt
lods
loopne
sub
sub
sub
shl
xchg
add
icebp
hlt
lods
pop
test
mov
cs
es
xchg
jmp
sbb
lret
ss
in
ja
loope
pop
cli
leave
sti
rcl
int
dec
jbe
aaa
sbb
sbbb
jmp
mov
xlat
add
mov
push
inc
push
and
shlb
rclb
dec
jo
push
push
mov
mov
inc
mov
in
cmp
dec
mov
lcall
ret
adc
or
popf
loopne
test
fdivrs
pushf
push
leave
mov
pop
inc
mov
cmp
mov
movb
gs
adc
gs
xchg
jge
aas
inc
les
xchg
mov
dec
mov
shll
mov
pushf
adc
jl
test
fisttpl
jns
cmpsl
daa
or
daa
jno
sbb
xchg
sbb
nop
xor
add
stc
pop
test
inc
pop
repz
mov
adc
mov
fisubrl
clc
add
fcmovb
sub
add
mov
push
ds
add
bound
dec
cwtl
xchg
sahf
cwtl
adc
adc
jecxz
mov
out
out
or
fistps
add
inc
insl
push
inc
dec
inc
lcall
and
out
test
dec
jb
addr16
test
int3
inc
icebp
jo
into
inc
cwtl
lock
xchg
rcll
jge
push
push
pop
sub
jmp
mov
push
mov
cmp
repz
push
pushf
add
dec
addr16
adc
test
nop
faddl
imul
pop
xor
mov
add
xor
cmp
mov
hlt
lods
xchg
addr16
cmp
js
bswap
sbb
leave
nop
jmp
shl
scas
lds
mov
sbbl
push
pop
out
in
in
lret
js
loop
roll
fisttpll
xchg
mov
push
adc
rcl
xchg
lcall
ret
xor
test
mov
or
clc
xor
lret
nop
mov
les
adc
shlb
add
jp
loop
mov
sahf
or
xchg
lret
inc
and
cs
lods
cmp
pushf
adc
sbb
push
lcall
ficompl
stc
sahf
inc
xor
adc
cmc
loopne
cmc
xor
test
int3
rcr
nop
add
mov
test
mov
pusha
and
roll
lea
jns
mov
dec
xor
incl
sbb
mov
add
shrl
ss
push
insb
jecxz
sbb
fsubr
sbb
cmp
call
repnz
adc
adc
xchg
sbb
sarl
cmp
insl
dec
aam
or
xor
inc
lods
xchg
jnp
inc
sbb
add
pushf
dec
pop
std
fcom
nop
adc
ror
pop
jnp
es
sub
repz
inc
dec
push
push
adc
inc
in
inc
aam
cmp
xor
cmp
jno
jle
out
sub
mov
jae
push
or
cmp
icebp
add
ss
push
jge
push
mov
xchg
or
xchg
gs
sub
loope
jno
pop
es
iret
sub
stos
sub
fmul
fsubs
clc
pushf
data16
arpl
cs
dec
cmpsb
mov
dec
mov
xchg
push
sbb
pminsw
xor
pop
jns
imul
in
rol
add
mov
divb
fdivrl
mov
mov
dec
pop
push
adc
mov
mov
movsl
xchg
pop
push
dec
faddl
pop
idiv
aaa
bound
mov
xchg
push
sub
insl
push
das
push
je
push
push
fstl
stos
xor
test
mov
repnz
sbb
pusha
xor
add
xchg
lea
add
jg
lods
outsl
xor
fstpt
sub
out
insb
cltd
lcall
fwait
ja
mov
xchg
mov
int
negl
bound
clc
cmc
inc
push
outsb
or
nop
lods
loope
movsb
add
push
and
es
cmp
and
dec
in
pushf
insb
mov
cmp
fnstcw
jns
movsb
xor
dec
jnp
arpl
repnz
das
cmp
or
addr16
imul
ror
dec
or
repz
mov
mov
lock
fstps
in
movsb
mov
ret
cmp
push
jne
add
int3
jle
ficoml
shll
loopne
dec
std
in
mov
mov
in
jno
pop
mov
and
mov
lret
adc
test
sahf
pop
cmp
mov
int
loope
mov
loope
ret
es
sub
cwtl
rolb
pusha
out
or
leave
gs
data16
adc
dec
stc
nop
xchg
stos
clc
sub
push
lahf
mov
fidivrs
sti
push
add
xor
fucomi
mov
xor
popa
mov
adc
dec
dec
pop
or
cmp
sub
iret
xchg
xchg
lahf
pop
push
lret
rorl
cmp
mov
xchg
jl
add
push
call
sub
lods
inc
int
push
mov
adc
outsl
shrb
mov
push
inc
shld
sub
mov
dec
shll
ljmp
jnp
movsl
aaa
jl
or
cmpsl
mov
inc
mov
cmp
adc
movsb
xchg
jl
aad
ss
jg
lods
in
inc
das
ret
pushf
stos
mov
leave
lret
dec
mov
push
in
jns
jl
rcrl
fxch
push
sahf
inc
xor
cmp
pop
in
xlat
mov
cltd
int3
dec
adc
pushf
into
iret
add
xor
xchg
mov
sbbb
fld1
jg
stc
adc
mov
push
dec
dec
sub
mov
arpl
in
loop
adc
adc
insl
or
sub
adc
es
cmpsb
pop
adc
outsb
cmp
gs
dec
jmp
and
jl
inc
jae
mov
fnsave
lret
sti
test
push
cli
aas
dec
jle
sub
pop
hlt
imul
and
mov
lds
jmp
pop
orl
loopne
in
jne
fwait
movsl
xchg
fdecstp
push
push
enter
push
sub
call
mov
ljmp
cld
jp
fwait
push
and
repz
or
mov
xchg
xchg
lahf
mov
mov
inc
rcrl
sub
sub
xchg
and
popf
pushl
sub
loope
ja
shlb
push
adc
shl
adc
mov
mov
rcll
nop
aaa
outsb
jns
arpl
mov
cwtl
stc
xlat
jns
repz
sahf
out
xchg
sbb
pop
inc
imul
inc
pushl
mov
fcmovnbe
pusha
sahf
mov
or
inc
andl
jbe
sub
push
dec
out
mov
out
jbe
adc
ljmp
movsb
push
out
nop
lret
int
pop
subb
pop
cmp
pop
push
std
mov
pushf
mov
arpl
and
cmp
mov
lods
mov
add
mov
mov
out
enter
movsb
ljmp
test
mov
in
das
cmp
rcll
arpl
push
push
or
adc
sub
and
push
jae
jb
ja
sub
enter
adc
or
lods
push
cltd
and
icebp
out
sbb
xchg
push
or
and
addr16
jl
outsl
test
mov
mov
push
fs
push
add
jb
shl
popf
or
jmp
xchg
sub
mov
lcall
push
or
pop
cld
push
jne
mov
leave
sbb
sbb
adc
pop
or
sub
test
mov
push
movsl
negl
dec
out
pop
pop
mov
es
push
lahf
lods
shl
mov
jbe
jb
stc
xchg
movsl
stc
out
add
mov
cmp
insb
pop
sbb
cltd
push
xchg
repnz
sarb
sub
movsl
repz
sbb
out
push
xor
dec
mov
arpl
jo
aam
dec
outsl
dec
adcl
xchg
or
mov
xchg
jle
jle
scas
repz
iret
mov
push
sbb
dec
mov
pop
cmp
mov
out
jb
xchg
popf
std
mov
sbb
insb
or
pop
xor
cmc
mov
xor
pop
cmpb
xor
cmp
std
js
xor
add
int3
mov
cmp
sti
lret
mov
jbe
mov
enter
push
ret
imul
std
inc
jp
add
mov
mov
inc
cmp
out
or
loope
lods
mov
xchg
inc
jmp
out
push
repnz
push
or
mov
adc
inc
cltd
adc
sbb
mov
dec
cwtl
xor
mov
outsb
sti
inc
enter
push
aam
test
cmp
ror
lods
icebp
repz
repz
mov
mov
xor
inc
ljmp
cli
rcrb
cmpsb
rcll
mov
in
or
test
xor
mov
icebp
jecxz
icebp
pop
test
in
adc
pusha
xchg
int
ja
xchg
mov
repz
dec
pushf
mov
push
mov
shll
sub
mov
dec
adc
xorl
pop
frstor
loopne
or
xchg
push
or
add
mov
clc
clc
loopne
pushf
fnstcw
and
cmp
sub
push
ficoml
les
mov
arpl
push
xchg
push
push
cmpsb
or
push
or
add
int3
idivl
add
sub
jno
and
pop
dec
add
pop
scas
inc
stos
repnz
aaa
cs
dec
out
negl
das
cmp
cwtl
pushf
dec
mov
stos
jne
in
mov
dec
push
cld
jp
mov
xchg
lock
cmpsb
in
js
adc
into
inc
lea
shrl
sbb
push
scas
or
mov
stos
inc
filds
cmc
adc
shl
sbb
dec
in
or
sub
out
addr16
aam
dec
addb
das
mov
int
jo
or
sub
imul
sti
cmovnp
xchg
nop
cmp
pop
jno
cmpsl
js
push
bswap
pop
popa
mov
pop
test
gs
lock
lock
adc
or
aas
dec
out
cmpps
scas
mov
pop
push
cmp
sbb
cld
cmc
mov
pop
sub
test
and
add
dec
add
mov
daa
inc
scas
and
add
cli
ljmp
aad
and
test
vmwrite
sbb
mov
jbe
sub
dec
loopne
and
mov
int
inc
rol
cmpsb
adc
xchg
fstpl
mov
pop
in
mov
jo
pop
push
and
jno
add
orb
repnz
addr16
mov
or
jb
movsl
loope
shlb
push
jae
cli
dec
jmp
mov
push
aas
in
in
pop
adc
adc
jnp
sbb
mov
mov
adc
sub
mov
fnstcw
dec
and
and
int
out
lret
stos
push
pop
sbb
jg
add
bound
movsb
adc
mov
repnz
subb
pop
ret
fildll
fs
lock
das
sub
xchg
xchg
inc
pop
mov
mov
shlb
or
mov
dec
cmp
shrl
mov
push
sub
daa
add
xor
aaa
scas
loop
cmp
lock
mov
loope
jmp
mov
mov
add
mov
jne
adc
shrb
insb
sbb
outsb
sub
mov
test
mov
push
xchg
jp
sub
cmp
clc
ficomps
lock
push
test
jns
sarl
test
jl
dec
sbb
je
jmp
repz
dec
daa
cs
xor
mov
ds
cld
lcall
mov
mov
test
jmp
cld
shr
daa
adc
addl
jl
addr16
lods
test
adc
or
cwtl
or
aad
lods
movsb
int
sub
ret
add
fs
xchg
pop
in
mov
lcall
pop
cmp
stc
mov
bound
sbb
lock
or
jge
jge
mov
mov
push
icebp
sbb
sahf
aas
dec
popf
jbe
pop
lcall
add
rclb
mov
inc
lahf
cwtl
cmp
ret
lcall
in
in
imul
mov
insl
xchg
icebp
adc
mov
shl
jae
adc
ja,pn
out
and
or
into
push
addr16
push
push
insb
cmp
xchg
xchg
call
xor
sub
lods
arpl
insb
cmpb
xor
cmp
jno
rcll
test
fimuls
int
in
imulb
adc
shlb
std
sub
adc
push
and
les
jo
dec
nop
ret
sub
cli
add
jb
das
stos
sbb
add
fs
fnstenv
in
sub
add
sti
mov
out
fadds
enter
xor
loopne
mov
lods
outsl
scas
push
inc
mov
mov
jge
pop
ja
lahf
sbb
decl
mov
push
aad
pop
enter
cs
mov
xor
ret
mov
jnp
push
ficomps
add
in
inc
dec
or
jg
insl
xchg
movsb
mov
fsubr
in
scas
stos
fldl2t
mov
divb
adc
xor
insl
sbb
dec
stc
std
and
cmp
cwtl
icebp
cmp
adc
pop
sbb
rcr
or
jp
arpl
ja
clc
pop
negl
or
add
mov
cli
sub
add
arpl
inc
scas
test
add
mov
stos
add
fwait
add
rcrl
sbb
inc
lock
cmp
lcall
fcomip
stos
popf
add
xchg
dec
mov
loopne
insl
out
add
stos
and
out
in
lret
lret
pop
test
lahf
fwait
jge
in
movl
pop
add
adc
loop
add
call
inc
lcall
cld
push
xor
arpl
add
xorb
mov
mov
ret
cmpsl
rcr
dec
and
xchg
inc
pusha
andl
mov
cs
in
clc
in
pop
and
jle
popa
js
inc
insb
adc
pop
or
mov
pand
cmp
sub
fdivrs
inc
jne
mov
mov
inc
lods
test
xor
sbb
xor
xchg
mov
sub
fmull
mov
repz
out
cmc
insl
jg
pop
or
rorb
dec
loopne
add
jne
inc
imul
ljmp
pop
mov
pop
cmc
xchg
rcr
mov
pop
data16
xchg
mov
add
inc
push
and
pop
push
lea
cmp
in
mov
dec
inc
jbe
xchg
in
call
mov
outsl
mov
mov
adc
aam
jae
and
and
in
push
cmpsl
inc
filds
pop
fiaddl
fidivl
mov
xchg
add
xorl
scas
test
mov
int
jae
inc
add
mov
pusha
sbb
and
and
push
cld
push
xchg
adc
ljmp
jnp
xlat
cmpsl
sub
iret
in
sub
and
jbe
jno
jo
imul
mov
add
sbbb
jnp
push
pop
fwait
or
sbbl
pushf
not
fmul
idivl
hlt
aam
les
insl
jo
data16
dec
mov
sub
push
push
push
mov
push
mul
sub
sub
push
sub
inc
lret
push
push
mov
inc
inc
adcb
cmp
ficompl
push
mov
cmp
cmpsb
jne
imul
repnz
imul
and
xor
cmc
mov
repz
imul
mov
mov
das
inc
mov
cmc
xchg
mov
leave
pop
popf
push
ja,pn
pop
dec
les
sub
and
dec
fs
add
push
lea
fstp
mov
aas
mov
push
sbb
cmc
xor
xchg
add
cmpsl
popa
sub
and
div
inc
dec
jmp
sbb
out
lods
adc
sub
dec
sub
out
aam
test
lret
mov
lcall
sbb
stos
aad
xchg
inc
jle
jbe
roll
sti
dec
cmp
xchg
xlat
mov
xchg
or
fdiv
sbb
xor
pop
sub
or
mov
xchg
pop
jmp
test
ljmp
adc
pop
test
pop
xchg
out
repz
cmc
cmp
jecxz
jmp
xchg
cmp
xchg
push
lods
sub
xchg
sbb
push
pop
adc
or
std
pop
jae
inc
push
repnz
ret
std
sbb
push
or
je
enter
incb
pop
test
out
dec
cld
aas
jecxz
or
xchg
xor
ret
sbb
jmp
xor
pop
mov
mov
rorb
inc
daa
mov
mov
repz
dec
adc
popa
dec
xor
mov
clc
imul
add
cmp
adc
in
aad
stc
cmp
nop
stc
fwait
insb
mov
lcall
movsb
test
cmp
sub
sbb
pop
cs
out
push
cli
push
out
mov
jmp
sub
fdivs
sbb
mov
add
push
fstpt
mov
mov
jmp
inc
cmc
mov
sub
fistpl
push
lods
shr
enter
dec
popa
aad
add
cltd
jae
push
jle
imul
xlat
add
jp
mov
pop
rolb
mov
mov
xchg
push
mov
sbb
mov
movsb
popa
mov
jb
dec
loope
into
xchg
pop
jmp
cli
add
adc
jge
mov
js
pop
test
sahf
in
out
ret
adc
push
xchg
mov
cmp
adc
xor
dec
jno
in
push
xchg
cmp
pop
aaa
sti
adc
and
pop
dec
xor
scas
ret
and
or
ret
in
lret
lret
mov
and
popf
stc
or
frstor
and
add
xor
rolb
rcl
jecxz
adc
fistps
test
mov
shlb
xlat
dec
pop
sub
pop
xor
fcom
or
mov
xor
sbb
out
ret
cmp
in
pop
jno
daa
mov
daa
cmp
mov
xor
dec
mov
push
or
fmulp
stc
mov
pop
pushf
mov
push
call
mov
pop
cmp
mov
fiaddl
mov
mull
cmpsb
jecxz
xor
mov
lahf
testl
mov
shrl
lods
push
fildll
mov
sub
bound
cmpsl
jo
mov
out
xchg
adc
imul
pop
mov
pop
or
dec
add
shll
jne
xchg
or
lea
mov
push
xor
or
xor
test
and
aam
test
inc
xchg
outsb
mov
stos
cmp
and
les
pop
pusha
fsubrs
adc
lea
xor
divb
and
insb
enter
add
xlat
out
sarb
aam
hlt
sub
cmp
and
sti
jmp
data16
pop
pop
jecxz
adc
div
xor
movsb
jl
call
jnp
cmp
mov
movsb
divb
shrb
mov
pop
cmp
xchg
inc
mov
clc
cmpsb
adc
and
mov
adc
xor
jbe
xchg
inc
add
pop
fldcw
mov
xor
shll
nop
test
inc
jg
lods
adc
rcll
enter
mov
cmp
cltd
lods
int
movlps
and
inc
and
mov
lret
stos
fistpll
addr16
mov
xor
mov
nop
pusha
mov
push
daa
lds
sbb
xor
jns
rcll
adc
mov
call
mov
out
daa
shr
adc
outsb
sahf
push
ret
mov
jne
or
xor
xchg
add
or
cmp
in
rcll
dec
popf
incb
xchg
dec
adc
inc
push
push
pop
push
loop
xchg
popa
mov
mov
cmpsb
jae
call
shrb
lea
int3
sbb
and
sbb
faddp
mov
add
pop
nop
jno
dec
fwait
dec
add
add
loop
nop
and
cld
and
mov
inc
test
xchg
jno
arpl
adc
add
mov
test
pop
aas
fnsave
sub
add
xor
es
out
test
mov
add
xchg
inc
lcall
lahf
inc
pop
ret
mov
jecxz
inc
dec
xor
call
ret
out
aad
dec
jmp
loop
leave
jo
inc
outsb
push
popf
push
mov
inc
push
add
shr
leave
mov
inc
daa
outsb
ljmp
pop
jo
leave
mov
sub
repnz
mov
loop
jae
adc
fwait
push
cmpsb
or
loop
lcall
imul
js
rol
push
inc
ds
pop
ret
mov
daa
pop
or
dec
dec
lods
jp
out
push
lret
aas
inc
add
pop
fisttpll
jno
pop
push
in
out
pop
fsubl
mov
mov
aad
ljmp
pop
cli
lods
adc
mov
lds
sbb
add
mov
lea
jo
sbb
or
jbe
xor
push
mov
inc
ljmp
cmpsl
xchg
jge
dec
jmp
test
dec
addr16
outsb
fs
in
std
add
fwait
jge
ds
aaa
outsl
mov
mov
pop
xor
mov
movsb
pop
adc
adc
int
mov
fldl
insb
stos
push
cmp
clc
mov
jbe
int
aas
xchg
xor
jge
dec
cmp
aaa
pop
repnz
hlt
jo
arpl
loop
scas
pop
mov
adc
scas
pop
mov
mov
and
xchg
loopne
xchg
insb
out
and
arpl
fmul
testl
sub
push
sbb
mov
dec
inc
fdivrl
lret
xchg
mov
dec
jl
das
mov
in
pop
insb
hlt
aad
xchg
movsl
adc
mov
jns
dec
cwtl
test
lock
je
notl
xchg
in
add
bound
je
jae
xchg
mov
imul
xchg
mov
push
dec
cld
jecxz
inc
enter
out
adc
fcmovne
aas
cmc
xorb
mov
push
jns
pop
addl
sbb
movb
mov
lcall
inc
jmp
and
icebp
xchg
shlb
inc
shll
xlat
out
stos
jmp
pop
int
pop
adc
icebp
adc
scas
lea
mov
or
call
andl
jecxz
pop
sbb
mov
movsl
mov
hlt
fisubs
add
lret
push
mov
ficoms
xchg
les
mov
add
and
sbb
fnsave
xchg
mov
pop
cld
lahf
in
lret
mov
and
imul
cmpsb
out
daa
ficomps
in
pusha
lret
cli
fmuls
sti
loope
dec
mul
mov
arpl
dec
xchg
jg
lock
mov
out
pop
jne
ss
nop
xor
in
xchg
int3
cmp
push
pop
outsl
lcall
or
lret
push
sub
lds
adc
enter
ss
aaa
shl
lods
xchg
dec
jne
and
or
cli
ret
push
xor
shll
mov
xor
cmp
repz
cmp
shr
adc
std
nop
mov
mov
icebp
fstpt
dec
pop
mov
jae
stos
cmp
in
xchg
pop
std
fiaddl
movsb
out
mov
loope
filds
scas
mov
loop
xlat
les
add
lock
mov
inc
fsubrs
ret
enter
cmp
aaa
pop
sahf
pop
push
cli
loope
pop
or
jg
ljmp
sub
fistps
stos
xchg
je
inc
mov
pop
cmp
pushf
inc
pop
dec
mov
jns
test
mov
stc
ffreep
push
bound
push
xor
or
into
jmp
hlt
in
add
mov
addr16
inc
scas
pop
popf
movsb
pop
add
mov
push
xchg
popa
repnz
adc
ficoml
ds
lret
xchg
jp
inc
jecxz
adc
xor
sbb
mov
dec
jbe
sub
cli
movsb
test
cmpsb
mov
sub
test
pushf
fidivl
xor
rol
or
mov
outsb
or
cmpsb
lods
cmp
pop
xchg
jp
or
push
lds
sbb
jno
andl
movsb
fdivrs
push
xchg
inc
test
xor
add
mov
bound
mov
mov
repz
jmp
or
jge
or
stos
sub
and
or
cmp
push
cmp
aas
lds
push
xchg
lret
dec
jnp
call
lds
xlat
xchg
lret
in
inc
call
sbb
imul
mov
jo
es
sub
ss
sti
aad
stc
lock
mov
ret
push
xchg
out
xchg
inc
mov
mov
push
pop
mov
or
pop
cld
xor
pop
shrb
lcall
sbb
test
adc
lret
mov
mov
and
push
out
rorl
js
mov
mov
test
jecxz
outsb
sbb
mov
popf
addr16
push
pop
jmp
leave
das
mov
mov
and
sbb
out
in
out
ja
mov
andl
inc
das
nop
lahf
ljmp
inc
mov
addr16
nop
mov
in
jl
cmpsb
adc
rcr
cltd
lods
sti
push
gs
ja
fs
mov
sbbl
push
add
push
loop
lret
hlt
cmp
lea
cmp
outsb
xchg
rol
and
aam
insb
xor
mov
mov
fcompl
ret
xchg
fnstcw
movsb
push
mov
fcompl
out
aaa
out
mov
mov
sbb
push
bound
mov
jae
aad
out
sbb
insl
cltd
loop
xor
sub
push
add
adc
in
rcr
call
mov
in
adc
iret
loopne
push
shll
arpl
adc
xchg
xor
or
cmp
and
pop
xchg
mov
int3
data16
push
inc
sub
imul
dec
or
jno
mov
pop
inc
and
addl
or
mov
scas
pusha
fmulp
ret
sarb
imul
lods
sbb
sbb
popa
or
adc
inc
inc
ret
xlat
inc
lret
jp
enter
fs
mov
sbb
stos
arpl
xchg
sub
cmp
mov
xor
enter
dec
cwtl
and
fcmovnb
aas
jbe
mov
stc
das
js
les
mov
jbe
shl
pop
bound
mov
in
outsb
fnsave
cmp
dec
inc
aaa
fucom
mov
inc
out
push
sub
mov
adc
data16
add
inc
mov
lret
std
pusha
push
inc
je
dec
inc
sub
mulb
fs
fwait
insb
xchg
xor
shr
lods
or
cmp
pusha
xchg
ljmp
or
outsl
aam
bswap
mov
sub
xorb
stc
out
sub
out
out
in
pop
clc
and
ficomps
das
arpl
test
mov
fnstcw
pop
imul
mov
test
out
lcall
lock
test
jle
add
les
rol
push
dec
sub
jl
mov
dec
outsl
adc
inc
cmc
mov
dec
enter
or
mul
fistpl
loop
jnp
inc
aas
inc
add
mov
gs
adc
hlt
cmpsb
pop
inc
inc
pop
roll
push
cld
push
jae
loopne
adc
xor
ds
jne
fs
pop
and
mov
fiadds
mov
in
out
xor
pusha
fdivl
adc
sbb
push
or
mov
outsb
cmp
mov
xor
inc
lock
pushf
out
adc
pop
movsl
movsb
cmp
lds
xchg
adc
vpermq
test
loopne
pop
loopne
cmp
pop
roll
pop
or
movsb
es
lock
jne
cmp
scas
push
in
lods
pop
push
inc
aam
xor
popf
push
dec
sub
cmpsb
in
and
fimull
ret
sbb
js
lea
and
xor
adc
xlat
push
add
xor
fimull
xchg
test
in
fisubl
shlb
pop
and
mov
xor
int
mov
jecxz
push
shll
lock
mov
and
adc
xor
movsl
sub
jae
jnp
out
pop
outsl
cli
pop
divb
std
sub
dec
cmp
popa
jge
xor
and
push
or
jle
in
lds
push
repz
or
mov
pop
out
imul
cmpsl
dec
inc
xchg
movsl
insl
lods
cmovns
loope
inc
cmpsb
sub
pop
andb
adc
int3
push
mov
sub
pusha
mov
lock
repnz
inc
mov
lret
mov
dec
add
in
cs
fxch
mov
data16
jo
xchg
iret
sub
mov
cs
cmp
pop
push
pop
loopne
aad
jl
inc
ret
and
jmp
dec
push
aaa
mov
jns
sbb
push
icebp
sbb
mov
push
push
add
xor
inc
cmp
cmp
lds
mov
iret
mov
xchg
cmc
sbb
push
jle
mov
adc
add
sti
dec
sbb
mov
sbb
add
adc
mov
loopne
sbb
aad
dec
fldenv
scas
bound
push
push
sub
dec
andl
pop
aaa
add
mov
lds
and
test
sti
sbb
xchg
popw
jge
fcoml
in
movsl
mov
inc
gs
dec
mov
pop
test
scas
sahf
js
inc
inc
outsb
push
jecxz
lods
pop
mov
fisubs
loope
push
aad
ficoms
dec
mov
mov
mov
ss
notl
push
imul
xchg
fistps
out
addr16
mov
imul
stc
mull
outsb
clc
repnz
mov
jl
sbb
adc
adc
pop
mov
push
stos
xchg
pop
inc
fwait
pop
retw
sbb
ffree
mov
push
jmp
xor
mov
in
pop
loope
clc
sub
xchg
jae
dec
dec
dec
nop
rolb
ror
mov
ret
insl
push
test
lcall
adc
sub
push
mov
mov
arpl
scas
and
divl
loop
orl
inc
cmpsb
or
loopne
lret
js
mov
mov
movb
testb
lods
mov
mov
fistps
inc
clc
repz
lock
idivl
inc
inc
sbb
aaa
test
shll
or
adcb
and
movsb
jp
push
add
sarl
insb
sbb
in
sbb
jmp
sahf
iret
cmp
or
into
and
icebp
out
mov
pop
pop
test
mov
cmp
fdiv
adc
aam
mov
sbb
push
imul
sbb
rcl
into
fsubrs
ljmp
adc
xchg
mov
pop
adc
ljmp
mov
push
jns
into
cmp
xchg
mov
add
imul
lret
xchg
lahf
mov
and
xchg
lahf
push
jnp
call
and
shrb
test
das
imul
js
cmp
jge
mov
test
xchg
gs
adc
enter
mov
pop
jo
movsl
ret
xchg
in
jge
and
adc
add
addr16
shlb
mov
insl
jbe
cmp
push
test
bound
lods
movsl
sahf
and
nop
xor
adc
adcb
add
hlt
mov
bndstx
and
imul
dec
into
sbb
jge
mov
fidivs
mov
mov
jne
pop
and
int3
adc
pushl
dec
mov
jne
loopne
arpl
push
or
lahf
cltd
jo
pop
add
mov
ljmp
popf
aaa
out
cmp
imul
dec
pop
popf
pop
pop
mov
and
mov
repnz
mov
je
vpmulhuw
das
sbb
call
icebp
hlt
cmp
ljmp
inc
mov
cmp
cmpsl
stos
ja
xchg
sbb
sbb
movb
mov
enter
scas
into
aas
jo
and
mov
bound
int3
repz
mov
repnz
xchg
mov
pusha
inc
sub
mov
and
icebp
and
cmp
mov
xor
xor
into
pop
into
daa
daa
mov
aad
jecxz
sbb
loope
cmp
push
lds
clc
jo
xchg
loopne
add
cld
push
outsb
mov
push
xor
outsl
mov
lcall
punpckhdq
adc
inc
jnp
scas
lock
inc
rcrl
mov
dec
sub
xchg
or
and
inc
sub
mov
pop
pushf
hlt
outsl
push
fcmovbe
xorb
into
adc
mov
out
jnp
jae
push
mov
inc
inc
sub
push
xchg
xor
push
daa
fwait
lds
addr16
push
or
fisubs
mov
mov
cli
cli
popf
inc
in
subb
loopne
cmp
cmp
cmp
popf
sub
cmp
pop
xchg
adc
lea
sarb
sbb
out
sbb
lahf
roll
and
mov
sti
jmp
or
or
in
incl
pop
mov
push
lret
xor
cmp
frstor
imull
mov
jmp
jb
or
sbb
sbb
mov
xor
sarl
lds
inc
imul
iret
int3
xor
test
mov
lea
pop
cmp
cmp
pop
jp
xchg
sbb
pushf
xor
sbb
daa
fsubrs
mov
mov
imul
cmp
sbb
jecxz
loopne
ss
mov
jnp
jecxz
cld
pop
popf
pop
dec
pop
addr16
dec
sub
fimull
lods
adc
repz
jo
or
imul
js
loop
add
mov
sbb
jb
mov
push
mov
and
cmp
andl
in
sbb
stos
gs
xchg
inc
sub
mov
adc
je
mov
ret
jge
mov
or
mov
push
mov
jo
push
shlb
and
adc
imul
addl
lock
and
inc
xor
pop
and
rclb
ljmp
jno
lahf
jo
sub
sbb
mov
loope
cwtl
lret
data16
stos
push
dec
push
sub
pop
push
xchg
pop
in
mov
push
pop
sbb
mov
adc
adcl
mov
inc
stc
jb
lods
les
shlb
xchg
xchg
es
push
lcall
es
lret
adc
sti
lods
out
int
pop
lea
sub
jp
push
addl
xchg
pusha
ficompl
cmp
mov
rclb
adc
in
push
insl
sbb
mov
cltd
add
and
or
outsb
add
xorl
mov
gs
dec
in
xchg
adc
mov
adc
in
or
cmp
jno
pusha
or
pop
movsb
xchg
inc
out
jb
dec
mov
aad
subl
into
xchg
ja
pop
bound
test
in
lods
fcmovu
dec
fbstp
mov
add
mov
test
adc
cwtl
or
das
mulb
xchg
and
ficoml
sbb
call
jle
push
sub
movsl
outsl
leave
lret
lods
add
imul
xchg
cmc
in
mov
xor
mov
push
pop
aas
sbb
mov
mov
loop
mov
fxch
pop
aad
cmp
aas
inc
jo
xor
push
adc
jb
inc
popa
pop
fimuls
imul
test
mov
xchg
loopne
push
ds
adc
jo
mov
or
pop
mov
xchg
out
xchg
stos
ret
ficompl
lods
mov
mov
cli
daa
test
pushf
imul
add
push
nop
aam
mov
or
sbb
repz
cli
pop
sub
dec
and
cwtl
push
or
mov
cmp
cs
out
push
push
push
or
cmpsl
leave
arpl
sahf
jne
rcll
std
or
out
sbb
pop
popf
mov
push
iret
movsl
div
call
insl
adc
add
in
mov
insl
adc
sub
inc
or
out
cltd
loope
jnp
cmp
leave
adcb
pop
adc
das
shr
pop
adc
das
loope
in
les
addr16
sbb
push
scas
push
adc
push
dec
inc
das
lahf
jg
inc
aaa
mov
cld
sbb
inc
popf
cmp
add
rorl
xor
pop
add
pop
jmp
dec
xchg
lahf
jg
out
rorl
ret
nop
fsts
movsl
and
jmp
xchg
adc
mov
jg
xor
loop
std
mov
enter
or
les
test
fwait
pop
jl
cwtl
rcll
xchg
cmpsb
int3
and
pop
out
dec
lock
fwait
mov
iret
repz
repnz
sub
sbb
jge
pop
jno
mov
push
hlt
inc
sbb
into
push
cmp
lret
dec
adc
sbb
xlat
xchg
push
leave
icebp
mov
shll
daa
or
icebp
rclb
in
call
stos
or
fidivrs
mov
out
pusha
int3
loopne
jns
daa
out
add
fs
int3
inc
sar
out
add
mov
sub
jb
addr16
push
adcl
mov
pop
xchg
scas
call
jl
ret
pushf
pop
hlt
lcall
mov
jne
out
mov
jno
xchg
enterw
nop
imul
xlat
test
mov
and
xor
ret
mov
call
cli
adcl
aad
shll
mov
cltd
or
pslld
adc
fnstcw
aaa
jno
in
gs
dec
lret
fisttpl
ror
cmpsl
dec
and
in
mov
pop
icebp
ret
mov
ljmp
xchg
pop
adc
out
cs
and
adc
iret
mov
scas
mov
orb
push
jmp
popa
cmpsl
imul
push
inc
and
scas
repz
js
daa
icebp
imul
mov
sub
jg
sarb
xor
subl
adc
xchg
adc
in
cmpsb
shlb
and
mov
mov
stc
popf
jmp
movsl
imul
jp
in
add
outsl
lret
xor
call
loope
dec
push
daa
mov
cltd
js
mov
sub
jbe
xchg
test
outsl
pusha
xchg
mov
imul
test
ret
testl
pusha
push
push
mov
jg
push
in
xchg
pop
xor
adc
mov
sbb
lcall
add
add
sub
ret
sbb
imul
jecxz
stos
mov
jb
adc
sbb
pop
je
xor
push
pop
inc
cmp
js
xlat
add
cmp
sub
or
hlt
lods
int
sahf
in
add
ds
lods
shll
and
inc
les
sbb
inc
push
in
or
fucom
ss
aaa
dec
out
sub
out
jnp
stos
adc
push
pop
in
jge
int3
in
fmul
push
mov
iret
jmp
ljmp
dec
push
mov
push
cmp
xlat
jb
call
adc
mov
fsubrl
jecxz
les
jne
ror
bound
adc
imul
dec
clc
rorl
pop
cmpb
movsb
cmp
les
daa
rorb
jge
pusha
loopne
xchg
js
xor
push
ficoms
xor
data16
inc
xchg
add
lret
cmp
fcomps
aam
add
jo
pop
js
inc
pop
data16
xchg
sbb
mov
in
push
push
pop
adc
xchg
push
pop
out
dec
jl
xor
and
add
adc
jne
idivb
arpl
mov
pop
inc
lahf
cmp
icebp
out
arpl
push
or
sub
mov
inc
cs
fwait
dec
leave
cmp
orl
jnp
dec
fsubrl
or
dec
push
pop
cmp
dec
scas
inc
inc
negb
mov
fs
push
mov
jno
pop
js
cmp
pop
push
enter
popf
aas
sahf
repz
hlt
add
outsb
mov
xchg
rolb
jp
lret
dec
push
ret
jb
dec
jg
cld
lahf
mov
fwait
out
xchg
mov
xchg
in
mov
xor
mov
out
sbb
inc
xchg
lcall
stos
insl
mov
jae
fwait
or
leave
push
lret
mov
stc
sub
scas
push
or
cwtl
cmp
sbb
aam
cld
movsb
addr16
sub
sbbb
inc
push
aas
sub
dec
js
cwtl
stos
movsl
mov
das
cmp
and
adc
fcoml
push
cmpl
test
lods
fisubs
insl
jno
scas
std
jle
add
call
fisubrl
vmwrite
sarl
push
mov
outsl
push
repnz
addr16
jne
aam
mov
jne
cltd
fwait
cmp
sub
stos
stc
icebp
fcomp
jo
test
xlat
jmp
pop
adc
loopne
pop
pop
push
movsl
movmskps
inc
subb
adc
xor
mov
in
clc
sbb
aaa
jne
cmp
stc
or
lahf
mov
popa
push
or
xchg
fistl
mov
icebp
aas
pop
jg
test
mov
jl,pn
inc
pop
incb
dec
push
mov
mov
repz
mov
inc
fiadds
lcall
sti
cmc
insl
mov
mov
inc
mov
ja
aas
out
dec
push
fs
lods
test
out
icebp
out
sub
je
in
push
xlat
jecxz
loopne
mov
in
xor
push
shl
push
jp
xlat
sti
es
or
sub
imul
pop
mov
lods
cmpsb
mov
lahf
xor
inc
adc
outsl
test
pop
out
fcomps
mov
or
ficoml
push
xchg
or
jp
scas
js
mov
pop
bound
aam
aas
inc
mov
jmp
sbb
shl
pop
call
xchg
mov
dec
data16
test
loopne
in
mov
dec
jne
cmp
mov
fcmovb
push
pop
dec
fsin
cld
lock
cmp
add
cmp
pop
add
cld
insb
jns
out
lods
lods
aaa
adc
repz
test
fdivr
and
jge
or
pop
mov
add
or
sti
int
jae
jb
xchg
and
call
pop
dec
pop
aam
inc
add
ds
daa
stc
inc
scas
sbb
jae
imul
xchg
or
xor
repnz
sub
rcll
aas
pop
cli
dec
lahf
roll
inc
orl
mov
and
scas
mov
aam
bound
push
push
adc
mov
mov
popf
xor
imul
inc
cld
push
adc
inc
jbe
lods
push
pusha
and
mov
movsb
mov
pushf
sub
sub
inc
cmp
push
ja
loope
test
mov
adc
xchg
push
into
fwait
stc
lods
outsb
rcll
push
mov
push
adc
aaa
xor
add
sub
popa
sbb
jbe
test
push
jl
stc
jle
mov
test
fstp
xor
mov
test
cmp
test
add
clc
in
adc
jo
aaa
inc
cmp
pusha
jno
scas
inc
add
jg
bound
push
mov
aad
mov
fwait
repz
xor
loop
lcall
dec
pop
jne
fsubrs
popa
mov
pushf
ja
test
insl
leave
xor
dec
dec
mov
jle
jne
sarl
and
xchg
push
inc
cs
jl
push
cmpsb
leave
pop
arpl
mov
xchg
jne
cmc
pop
add
aaa
cltd
xor
or
push
add
das
jno
lods
or
mov
push
dec
aas
mov
mov
fwait
xor
in
jne
dec
enter
push
cmp
outsl
js
lret
mov
dec
sub
ss
lahf
push
rcl
and
movsl
and
mov
cmp
push
and
jle
rorw
sub
ficoml
pop
sarl
cmp
jae
flds
jno
roll
pop
in
jnp
add
bound
test
and
decl
add
call
cld
push
das
inc
jnp
jae
out
xor
adc
mov
mov
daa
jb
push
add
lcall
sbb
test
fld
fadds
xor
adc
out
cld
jle
sub
add
roll
in
jle
xor
jae
icebp
mov
roll
jp
jnp
cld
lock
mov
mov
gs
mov
bound
or
arpl
rcl
mov
into
test
ja
jo
lods
dec
inc
push
jnp
cs
mov
add
je
xchg
add
pusha
dec
push
das
lcall
add
aam
pusha
pop
arpl
jns
cmp
sbb
dec
push
jns
inc
pop
push
cmc
subl
pop
fwait
ret
or
ja
cmp
in
shl
dec
inc
rcrb
mov
out
mov
sub
or
rcll
lahf
jnp
mov
mov
popa
aaa
jb
test
mov
jl
shl
in
loope
push
fcom
inc
stos
adc
es
push
and
adc
or
jbe
lret
test
cld
xor
cmp
cmc
insb
sarl
cld
sarb
mov
in
ds
pop
popf
and
das
mov
fidivl
in
lods
shr
and
rcll
test
mov
xchg
stos
cwtl
sub
loope
adc
push
sbb
out
or
dec
insb
lods
ret
std
test
inc
pop
out
and
shr
mov
cmpsl
das
xor
mov
mov
stc
addr16
add
mov
add
outsl
imul
mov
arpl
xor
pop
lret
mov
inc
sbb
sbb
ret
push
pusha
imul
cmpsl
and
out
push
or
or
mov
outsl
add
data16
fst
mov
andb
repz
daa
push
mov
adc
cmc
lods
int3
aam
xchg
lods
ficompl
aaa
push
aad
add
in
stc
mov
sub
cmp
incl
dec
dec
inc
pop
pop
push
movsl
je
lea
or
sbbb
pop
mov
jg
repz
enter
lahf
fsubr
sarb
cld
jge
mov
mov
mov
lock
leave
fidivl
or
sub
adc
pop
test
or
adc
adc
mov
xchg
xchg
movsb
out
xchg
scas
mov
cmpb
push
sub
sbb
jl
xor
fnsave
pop
sahf
movsb
or
in
jb
jae
movsb
stc
fsts
mov
rorl
adcl
mov
test
pusha
lcall
repnz
sti
nop
je
insb
mov
sub
in
js
popa
scas
test
nop
es
adc
cwtl
mov
stos
push
pusha
outsb
jge
daa
xchg
push
sahf
pop
xchg
loope
mov
adc
and
into
ret
push
lds
in
jmp
movsb
jecxz
cld
ja
dec
add
int3
jbe
rcl
xor
xchg
mov
ret
inc
insb
scas
sete
push
pop
test
or
in
push
mov
call
cltd
jmp
xchg
jns
gs
int
insb
add
stos
shl
int3
cmpsl
cmp
dec
scas
pusha
dec
ret
jmp
fists
push
cmp
xchg
dec
aad
stc
jmp
aam
xor
loopne
les
testl
ret
daa
or
inc
push
mov
out
xchg
push
sub
popf
jo
idivl
jns
mov
stos
rorl
adc
insl
xor
fcomp
lea
jo
lret
mov
inc
out
aas
jbe
sub
push
mov
cmpsl
pop
hlt
andl
stos
pop
dec
test
push
xchg
rorl
fcmovnbe
loop
js
mov
jae
fchs
xchg
ficoms
sbb
cmpsl
or
cmpsb
or
add
sbb
push
and
test
add
mov
inc
fcmovne
xchg
int3
sahf
fsubs
adc
dec
xchg
out
bnd
clc
lods
cmp
std
fldt
cmp
push
sub
xchg
inc
gs
std
je
orb
sbb
fs
stos
inc
push
shrb
cmp
shll
cltd
mov
inc
addl
ljmp
or
enter
cmp
mov
xor
jb
out
int
cs
sub
and
mov
add
mov
lahf
je
jo
sub
mov
inc
fwait
lahf
mov
jns
cld
fists
pop
mov
cwtl
cld
ja
push
repz
in
rcrl
fistpll
pop
or
into
pop
leave
shrl
jns
push
dec
scas
dec
xlat
mov
ffreep
mov
cmp
push
add
pop
faddl
out
or
aam
jno
pop
ret
jno
adc
mov
mov
daa
pop
or
movsl
das
mov
push
and
mov
mov
cltd
imul
js
ret
dec
dec
jmp
fs
int3
hlt
mov
movsl
pop
sbb
mov
xlat
pop
dec
pop
inc
xchg
push
xor
std
mov
xlat
dec
in
mov
mov
mov
inc
dec
cli
cmp
ss
xchg
jecxz
fldt
push
loopne
test
cmp
lret
je
sti
or
repnz
mov
outsl
ljmp
pop
aas
sbb
cmpsl
xor
xor
test
das
mov
pop
mov
xor
ret
mov
mov
cmp
addr16
pop
jge
jne
pop
lds
hlt
mov
or
outsb
popa
lods
cwtl
out
inc
jo
hlt
call
xchg
fistps
mov
lea
mov
mov
fidivs
test
or
rcll
push
popf
cmpsb
imul
xchg
mov
fistpl
add
aad
lahf
inc
int3
fdivs
lods
ljmp
and
lcall
ror
add
nop
mov
xchg
aam
mov
push
cmpsl
and
aaa
sbb
call
jne
ret
xchg
shl
jb
adc
and
or
push
in
cmp
clc
jecxz
rcr
stos
pop
call
daa
clc
push
pop
insl
or
rorb
push
sarl
pushf
cmp
xlat
movsb
jg
mov
add
xchg
push
in
inc
adc
or
jo
dec
jg
popf
insb
jmp
sub
int3
into
cmova
aaa
in
lret
mov
xchg
in
adc
mov
mov
insb
pushf
inc
icebp
cmpb
sub
or
xchg
xlat
out
je
push
imul
mov
pop
jno
cmp
or
push
arpl
cmp
sbb
mov
cltd
sub
jp
xchg
arpl
mov
test
je
mov
orb
mov
leave
jg
push
cmp
and
test
mov
into
inc
mov
and
fiadds
xchg
aaa
mov
loopne
fmulp
mov
out
cs
xor
andb
pop
int
pusha
xor
mov
bound
ss
jmp
jno
iret
enter
mov
sbb
dec
xchg
cltd
push
jno
xchg
enter
push
sbb
add
fisubl
lahf
movsl
dec
int
mov
sbb
push
mov
test
jne
cli
xchg
xchg
and
lret
lret
pop
sub
or
idivb
les
or
int3
adc
sub
pop
or
dec
fldcw
in
imul
int3
and
daa
push
adc
push
pop
into
out
add
lods
xchg
cmp
je
lods
xchg
jmp
loope
fstps
popf
repz
hlt
cmp
mov
in
mov
pusha
xor
and
mov
inc
pop
jne
mov
jnp
jae
mov
cmp
js
mov
inc
aad
loop
push
or
arpl
icebp
or
out
push
push
sub
popa
jo
mov
scas
sbb
xchg
inc
test
cmp
pop
jno
shr
pop
cmp
movsb
add
or
xor
xchg
and
xchg
add
cmp
outsl
xchg
or
xchg
sub
in
and
daa
xchg
aas
arpl
sub
outsb
pop
xchg
pushl
mov
es
pop
jmp
cmpsb
jbe
pop
mov
push
aad
add
sub
fadds
cwtl
sbb
jecxz
fsubr
aaa
and
shlb
sbb
popa
mov
stc
cmp
leave
sub
repnz
adc
fstl
es
popf
shlb
cmp
mul
cmc
fsubs
and
js
es
adc
clc
adc
imul
shlb
das
cmp
fisttps
inc
clts
adc
lock
push
idivb
dec
lock
in
scas
push
add
cmp
mov
rorl
ja
pop
lahf
aam
mov
cmp
jbe
xor
jle
push
inc
mov
mov
sbb
lret
and
rep
or
push
pop
enter
push
andl
mov
cwtl
cli
sbb
jo
xchg
push
lds
dec
push
leave
outsb
sub
jg
pop
adc
xchg
dec
addr16
shlb
pop
stc
imul
hlt
ror
lods
sbbb
xchg
mov
or
dec
rol
cltd
dec
test
repz
mov
push
xor
in
out
pushf
and
jb
jmp
mov
lret
push
mov
ret
xchg
ret
lods
adc
jp
sub
test
add
inc
movsl
hlt
out
pop
and
cmp
out
outsl
sbb
dec
jg
cmp
pop
fwait
sbb
push
stc
push
dec
sub
pop
push
xchg
filds
jnp
and
ret
add
dec
xlat
enter
out
fistps
lret
mov
fildll
movd
adc
lcall
adc
or
rcrb
sbb
stos
ljmp
lcall
mov
cwtl
cmp
and
or
lret
shrl
xchg
ljmp
clc
inc
jle
adc
out
dec
les
add
push
shlb
pop
inc
dec
adc
ret
addl
fisubl
mov
inc
js
mov
cmp
mov
lret
fsubrl
or
mov
daa
out
mov
stc
add
and
repz
es
imul
repnz
ficompl
sbb
call
xchg
adc
test
or
dec
add
inc
sahf
ret
add
dec
jns
mov
mov
minps
sub
test
pushf
cmp
pusha
pop
repz
cmp
dec
out
xchg
pop
push
pop
lock
aad
add
jne
pop
lods
and
mov
loopne
icebp
push
mov
add
test
insb
and
and
jg
cs
aad
add
mov
mov
jb
mov
popf
jle
ja
leave
sbb
and
push
jne
rcrb
add
sbb
pop
jge
mov
ficoml
stos
adc
push
enter
int
jno
lds
loopne
call
enter
jecxz
les
or
cltd
mov
shl
fisubrl
mov
dec
fsubrl
add
in
inc
xor
xorb
xchg
mov
or
call
sub
jle
push
mov
xchg
es
stos
inc
decl
xor
jecxz
pushf
cmp
inc
or
pop
insl
das
addr16
dec
std
inc
cld
pop
add
or
mov
mov
jnp
mov
enter
inc
xchg
js
mov
lods
aam
pushf
lret
cmp
pop
fwait
lahf
mov
testl
cmp
inc
xchg
mov
cmp
mov
mov
stos
cmp
mov
stos
jp
cmp
rclb
dec
inc
push
mov
loop
movsl
sbb
aam
sub
cltd
lcall
xor
pop
xchg
rorl
and
adc
call
decb
push
adc
jae
je
fisubrs
push
mov
lahf
call
icebp
leave
dec
mov
into
shll
sub
xlat
int3
add
push
outsl
mov
call
out
addr16
push
aad
sarb
adc
pop
add
mov
pop
aad
test
xchg
cld
lods
or
sbb
push
popa
mov
push
enter
sub
test
je
mov
jns
leave
mov
jns
insl
add
test
iret
fnstcw
mov
movsb
lea
inc
inc
cwtl
rol
out
and
sahf
or
enter
xor
cltd
cmp
sbb
sbb
xor
test
in
cmp
and
xchg
fsts
sub
pop
jmp
int
pop
in
shll
in
lret
negl
adc
std
jg
xchg
sub
inc
leave
js
cmp
cltd
cmc
imul
push
dec
test
xchg
push
or
out
adc
lret
clc
sbb
scas
mov
pop
mov
setne
jge
pop
lds
es
pop
pop
jno
cmp
pop
inc
ret
jno
stos
mov
cmp
ds
fnsave
xchg
pop
xchg
inc
ret
imulb
mov
jne
push
sbb
imul
sub
das
cmpsb
icebp
xor
inc
cs
rcll
pop
stos
cwtl
sub
sbb
adc
push
cltd
mov
xor
into
sub
or
cli
arpl
push
mov
cmpsb
enter
mov
dec
out
sahf
and
int3
lahf
cmp
repnz
jge
jno
in
add
ret
aaa
fnsave
cmp
flds
rclb
in
in
ljmp
test
imul
ret
mov
add
pavgb
dec
xor
out
mov
or
mov
jg
test
mov
mov
sti
xchg
and
dec
lds
orl
and
and
xor
mov
das
push
push
push
out
pop
aad
enter
es
mov
push
out
jne
xor
push
shlb
and
out
add
mov
stos
and
pop
xchg
jae
cmp
mov
mov
inc
outsl
sbb
sub
sbb
pop
in
aas
and
adc
sahf
int3
mov
rorb
mov
enter
loop
dec
es
cmc
out
pop
lods
pop
scas
and
add
and
xchg
pop
adc
jo
les
xor
cbtw
xchg
inc
aam
imul
push
push
repnz
add
xchg
mov
ja
lock
nop
lahf
push
out
hlt
addr16
jno
lea
out
iret
int
add
jg
xorl
cs
cld
mov
mull
lods
notl
test
les
rcrl
test
daa
adc
jg
adcl
aam
pop
mov
ja
aad
push
imul
aad
add
jmp
mov
out
sub
lret
int
adc
ss
xor
movsb
mov
inc
xor
lret
fwait
lds
xchg
sub
cmp
pop
mov
bound
mov
mov
int
inc
sbb
lock
fbstp
mov
imul
into
sub
ljmp
jp
sbb
ret
lock
lret
je
lds
lods
aaa
lock
jl
pop
mov
aas
je
adc
sahf
stos
outsb
xchg
clc
aaa
test
push
and
iret
mov
adc
inc
fs
pop
jb
inc
and
mov
aam
out
push
cmp
divb
xor
out
xchg
mov
cmpb
roll
mov
ds
adc
fs
xor
cmpl
mov
les
sti
mov
pop
jge
adcl
daa
iret
in
or
ljmp
into
filds
loop
into
sbb
cmp
test
popf
push
jno
add
jge
push
pop
cmpl
mov
fsub
xor
scas
ficoms
mov
ss
push
mov
add
or
movsl
lcall
mov
cmpsl
out
sub
call
sub
mov
jo
cmp
clc
shrb
inc
lret
add
mov
popf
and
pop
adc
es
fxam
fs
mov
mov
dec
push
clc
sub
cmp
test
sbbl
dec
mov
mov
sub
and
mov
iret
mov
push
gs
das
sbb
in
pop
add
add
cmp
repz
fs
rcrl
cmpsb
pusha
mov
lahf
mov
lahf
xor
push
cmpsb
icebp
push
mov
cmc
or
cmp
jnp
nop
outsb
push
scas
mov
andl
xor
mov
xchg
lods
fs
lds
stc
xor
fcoms
ret
cmp
pop
iret
mov
cwtl
bound
mov
inc
push
cld
or
inc
or
mov
xor
ret
inc
das
cmp
adcb
adc
inc
dec
jmp
lahf
sti
mov
andb
mov
push
jnp
jl
es
ds
popa
test
push
pop
push
pop
mov
and
pushaw
sub
call
push
insl
mov
adc
mov
xchg
inc
inc
ljmp
or
repz
and
pop
sbb
xor
dec
out
cld
pop
and
aas
fldcw
repz
hlt
outsl
mov
das
jb
push
mov
nop
in
xchg
mov
lret
or
xor
pop
and
mov
repnz
loope
in
outsl
mov
mov
dec
dec
xchg
push
pop
mov
adc
adc
pop
adc
addr16
xor
pop
stos
xor
outsb
sbb
cmpsl
xchg
arpl
pusha
rol
mov
jmp
and
mov
lcall
imul
clc
jae
sub
add
cmpsl
ss
sbb
adc
sbb
add
mov
xchg
out
jge
lcall
leave
sahf
mov
pop
inc
mov
cs
fmuls
lcall
add
movsb
in
inc
fnstsw
shll
test
sbbl
aad
mov
lds
sub
mov
jecxz
in
push
sbb
fcoml
sbb
aas
hlt
jmp
push
pusha
ljmp
xor
lds
nop
xchg
push
sbb
cmp
pop
pop
sbb
inc
test
xor
or
punpcklbw
xchg
push
push
imul
cmc
mov
int3
ret
lods
dec
rcpps
adcb
mov
mov
addr16
lds
sbb
pop
or
inc
ficoms
inc
stos
xlat
jmp
jne
shlb
jl
std
popf
pop
aam
xor
sbb
or
pop
mov
sbb
fiadds
mov
sbb
fs
push
rorl
fldcw
mov
movsb
xchg
cs
mov
mov
repz
jo
fdivrp
int
fnsave
arpl
iret
sub
test
loopne
sahf
frstor
scas
imul
dec
sub
dec
sti
mov
bound
leave
cmpsb
mov
ror
pop
nop
xchg
addb
roll
repnz
xor
and
inc
gs
iret
sub
jno
lods
push
fsubr
scas
lret
push
mov
data16
insb
xor
lcall
mov
push
cmp
sbb
push
add
adc
aas
or
jb
idivl
cmp
adc
xchg
addb
mov
mov
cmpsl
jg
leave
popl
jb
add
jecxz
inc
xchg
in
or
sub
inc
push
inc
ja
or
nop
outsl
addb
push
jae
scas
cmp
inc
push
shlb
mov
movsl
mov
xor
cmc
imul
cltd
cmp
call
stos
leave
fcoms
mov
aas
fbld
mov
gs
orb
out
fbstp
or
orb
aas
inc
sub
xchg
inc
jo
add
fstpt
push
cmp
out
mov
in
fcmovu
js
adc
shl
popf
mov
ficomps
jl
push
or
imul
or
std
mov
adc
lods
mov
jnp
cmp
push
xchg
jp
shr
jb
and
repz
lret
pop
dec
inc
daa
pop
sarl
xchg
jp
ret
jnp
jns
push
jnp
out
int
cs
mov
ja
in
es
movsb
arpl
insb
ljmp
sbb
bound
dec
cmp
cmpsb
fistps
xchg
cld
jle
push
imul
inc
pop
mov
mov
mov
push
sub
mov
lret
ss
ret
aad
sbb
adc
jmp
or
sahf
push
aaa
sbb
mov
cmp
ret
and
repnz
test
or
dec
adc
fcoml
add
xor
pop
jp
sbb
leavew
xor
andb
xor
fmull
jnp
mov
inc
mov
jg
push
or
mov
xchg
in
dec
lcall
andb
loope
push
in
bnd
mov
xchg
mov
xchg
lret
ds
shll
or
mov
push
mov
jbe
sub
mov
loop
mov
mov
adc
insl
sti
sahf
in
es
adc
adc
mov
sub
test
movsb
xchg
sub
in
cli
sub
je
jne
mov
imul
cli
or
outsb
repnz
shll
push
xchg
iret
test
mov
rep
imul
out
pop
inc
dec
cmp
pop
and
daa
cmp
or
aam
xchg
jb
jecxz
fistpl
test
inc
mov
decl
add
and
fdivs
sahf
jae
les
add
jge
stos
mov
and
clc
sbb
mov
mov
cs
add
sbb
cmp
bound
outsb
lds
scas
xor
adc
sbb
arpl
xchg
sub
fstps
jge
mov
imul
fdivs
dec
dec
clc
jnp
or
std
push
insb
arpl
push
pop
fldt
outsl
and
xchg
out
push
fadds
inc
sub
pop
dec
fdivr
cld
sub
adc
arpl
add
adc
xchg
push
push
cwtl
outsb
xor
mov
nop
arpl
sub
push
sar
xor
into
push
daa
push
or
xor
imul
add
mov
shlb
mov
xchg
mov
xchg
daa
ficompl
mov
out
sub
jbe,pn
rorb
arpl
aad
jge
pop
loopne
lock
push
ret
jns
iret
push
das
js
aad
popa
jae
pop
pop
or
mov
cmpsb
xorb
mov
cmp
and
test
cmp
push
mov
pop
xchg
js
lea
out
shr
adc
aad
sub
dec
decb
popa
popf
adc
ja
mov
ret
and
cmp
mov
fsubrp
pop
aaa
inc
pop
pop
mov
rcrb
push
loopne
jecxz
outsl
popa
fucomip
movsb
sub
loop
cmp
sahf
popl
xor
jge
xchg
push
scas
dec
push
ss
aaa
xor
pusha
push
mov
mov
sub
mov
inc
loope
jp
jecxz
or
push
cmp
dec
pop
adc
arpl
test
mov
cli
sub
fsubrl
sbb
iret
clc
insb
test
out
scas
scas
add
pushf
push
dec
aam
arpl
or
lods
push
repz
aam
es
repnz
jnp
dec
sub
inc
out
mov
sub
outsb
mov
sar
nop
popf
test
mov
test
in
jae
sbb
in
repz
fldl
inc
push
xor
lds
push
es
stc
push
sbb
mov
cld
leave
in
xor
jge
cmp
xchg
gs
pushf
popf
and
xchg
jl
div
lds
jbe
bound
pop
test
fsubrs
push
mov
loope
das
add
cmp
jmp
push
lret
mov
aas
pop
xchg
pop
and
arpl
rcrl
push
add
push
pop
cmpsb
or
mov
jmp
sbb
pop
jge
fcoms
shrb
ret
imul
mov
inc
lret
push
mov
push
sbb
insb
imul
sbb
out
or
lcall
xor
insb
ds
pop
icebp
mov
ret
jb
ror
jp
mov
ja
xlat
adc
mov
mov
repz
cli
fwait
.byte
