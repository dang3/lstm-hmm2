jne
add
jo
jmp
xor
lods
xor
imul
inc
sbb
inc
out
pop
and
mov
add
je
pop
jmp
enter
clc
aam
inc
inc
cltd
imul
les
sub
mov
insl
icebp
jmp
lret
mov
test
cmpsl
in
pop
or
xchg
jmp
sub
add
xchg
mov
mov
inc
inc
sahf
xchg
fcmovnbe
lds
push
int3
es
sub
pushf
add
filds
xchg
enter
sbbl
jnp
sub
jb
sbb
cwtl
mov
inc
fadds
dec
cmp
mov
and
sub
sahf
insl
sarl
je
add
push
std
mov
in
call
lods
xor
adc
push
mov
mov
addl
insb
aad
adc
fnsave
ja
mov
lea
jae
jmp
lea
jae
jmp
call
mov
pop
ret
ljmp
lret
addb
xchg
pop
jno
test
adc
xor
or
sub
mov
xor
adc
das
add
or
sbb
cmpsb
adc
and
sub
jp
mov
add
sbb
je
xor
mov
and
jecxz
movsb
dec
aaa
inc
pop
cmp
and
push
jno
jno
inc
test
cmp
loope
loope
rolb
mov
pop
icebp
pop
inc
pop
or
jbe
add
stos
or
insb
mov
sbb
pop
das
ret
pusha
push
jmp
data16
push
call
mov
stos
fmul
xchg
or
mov
mov
and
push
push
out
clc
imul
iret
xchg
das
adc
pop
insb
cltd
pop
jo
pop
sbb
jno
and
dec
jbe
lret
xchg
mov
call
and
fmul
ret
cli
jmp
jecxz
xchg
movsb
mov
ror
lods
inc
aas
dec
add
js
sbb
pop
mov
sub
jle
xchg
iret
outsl
into
stc
loop
push
hlt
xlat
mov
inc
fisttpl
bound
mov
mov
ret
lahf
mov
inc
pop
stos
sub
mov
aaa
fisttpll
push
jmp
jmp
pop
icebp
cli
mov
mov
icebp
fcomps
and
fldz
fxch
out
sub
stos
pop
out
loopne
call
icebp
addr16
andb
fildll
cmc
mov
out
ljmp
jns
pop
jp
cmp
inc
scas
mov
xchg
mov
mov
jecxz
scas
clc
outsl
loop
neg
ret
dec
lods
insl
adc
jle
outsb
sub
dec
outsb
push
bound
inc
xchg
and
movsb
push
aaa
and
insb
stos
int
ja
repnz
cmp
xchg
ds
frstor
ja
and
data16
and
loop
loope
pushf
imulb
adc
popa
pop
sub
icebp
pop
xchg
repz
xchg
je
pop
arpl
pop
enter
and
aam
jb
and
jo
inc
in
mov
test
mov
cli
fucom
int
std
repnz
mov
mov
and
stos
mov
pop
mov
mov
aad
cmc
fsubr
cld
mov
mov
xor
call
mulb
int
push
in
xchg
mov
in
stos
adc
in
and
adc
inc
daa
cmp
pop
jne
sahf
cwtl
mov
cmp
js
out
flds
jl
mov
fs
jo
inc
adc
pop
cmp
jo
jle
push
dec
jp
push
popa
es
push
inc
mov
and
ja
cmpl
hlt
push
pusha
lea
jmp
push
movl
push
jmp
mov
pop
dec
pop
inc
arpl
jbe
adc
es
jb
cmp
mov
pop
sbb
xor
movsl
jb
fnsave
icebp
add
or
dec
rorb
fs
fcmovb
fcoms
fadd
call
icebp
jecxz
mov
dec
cmpsb
in
loope
loope
stos
push
mov
int
sub
addr16
gs
pop
jbe
pop
sbb
jo
xor
mov
lods
sub
imul
call
pop
add
insb
adc
xchg
xchg
mov
scas
out
int3
fwait
lds
enter
or
jo
or
loopne
sahf
mov
jg
lret
jge
test
sahf
push
add
fs
scas
test
mov
pop
add
ljmp
lcall
movsb
idivb
out
clc
repz
in
out
ret
call
lods
pop
push
xor
xchg
sar
cli
rorl
add
and
xchg
inc
fs
cmp
cmpsb
push
test
and
ucomiss
sub
pop
cmp
sub
jno
imul
push
mov
mov
mov
mov
lods
in
sar
aad
std
in
cli
leave
out
mov
lea
ret
mov
pusha
ror
pusha
call
cmp
push
sub
stc
clc
cmc
pushl
popl
pushf
bt
push
cmp
pusha
pushl
pushf
lea
ja
shl
shl
sub
lea
add
jmp
push
cmp
push
rclb
add
outsb
xchg
jg
daa
sbb
add
outsb
xor
lret
xor
inc
int
mov
scas
add
outsb
inc
cltd
cmp
scas
add
cs
jecxz
imul
cmp
jp
arpl
mov
xor
das
jle
pop
mov
cltd
cmp
test
push
cmp
adc
scas
add
xor
cltd
cmp
xchg
mov
cld
cmp
mov
sub
cmpsl
mov
pusha
cmp
mov
jo
scas
add
cs
lods
or
adc
cmp
push
mov
push
mov
cmp
adc
mov
add
outsb
ja
adc
jg
jne
scas
or
cs
push
stos
cmpsb
call
xlat
out
xor
xor
cmp
ret
loopne
pop
loopne
xor
xor
cltd
cmp
dec
test
das
int3
push
cmp
das
xchg
sahf
addr16
push
cmp
lret
ljmp
add
outsb
pop
aam
cmpsb
mov
xlat
cs
jmp
add
scas
add
outsb
ret
push
adc
pop
xlat
outsb
or
or
inc
jl
shlb
add
cs
lods
and
int3
jo
scas
add
scas
sub
adc
mov
cmp
sbb
mov
cmp
cmp
sub
mov
adc
cmp
push
push
pop
cli
or
scas
add
scas
and
shlb
scas
add
outsb
ss
lret
in
sub
das
mov
pop
lret
xor
or
jle
call
add
out
xchg
aam
fs
cmp
fs
insl
lret
inc
scas
add
outsb
cmp
stc
pushf
sub
test
cmp
jmp
add
dec
outsl
arpl
inc
jb
add
shrl
fldenv
into
rol
shl
cmc
lea
jmp
lea
movl
pushf
pusha
movl
push
jmp
pusha
lea
je
shld
aaa
or
clc
sub
push
xor
mov
rcl
shr
mov
sar
shr
sub
neg
mov
test
push
clc
or
pushf
pushf
lea
je
call
xor
arpl
pop
adc
add
jge
gs
aam
loop
xlat
lret
push
popa
push
movsl
jbe
fdivl
leave
cmp
pushf
xchg
out
cmc
fildll
repnz
popa
and
dec
addr16
lods
adcb
jecxz
mov
xchg
int3
dec
mov
in
lods
add
adc
bnd
jne
stos
repz
xor
icebp
pop
jge
ljmp
mov
into
mov
icebp
out
icebp
add
add
mov
and
jne
not
jmp
pushl
popl
bt
pushf
cmp
jmp
stos
pop
sahf
addr16
adc
push
jle
sub
gs
fwait
xorb
mov
mov
sbb
push
and
or
insb
movsl
cmp
sbb
or
jmp
mov
mov
mov
dec
dec
vmwrite
inc
push
unpcklps
adc
jne
pop
pop
ror
jo
dec
pop
rcll
notb
dec
in
andl
cld
je
push
imul
xchg
mov
pop
xchg
jnp
movsl
xchg
aaa
repz
xchg
cmpsb
ror
cmc
mov
xchg
popf
repnz
sbb
jns
add
jl
leave
pusha
call
lea
ja
push
imul
call
lea
jne
call
cmp
pushf
movw
call
jmp
jae
cmc
sub
push
lea
call
pushf
push
jmp
shr
call
jmp
adc
pushf
pushl
jmp
mov
jmp
rol
bt
movsbw
shr
mov
mov
rol
test
add
mov
call
call
add
pushl
pusha
mov
pushf
lea
jmp
movl
movw
lea
jge
push
push
pusha
mov
push
lea
jmp
movw
mov
pushf
mov
pushl
ret
pusha
jmp
push
call
rcl
shl
jmp
sbb
ja
jne
sbb
sbb
inc
add
fwait
dec
mov
testb
pop
inc
jnp
pop
inc
out
cmp
adc
push
mov
pop
mov
mov
popa
jb
xor
lcall
lcall
loop
fdiv
movsb
xchg
mov
jb
lcall
and
mov
xor
jecxz
in
out
testb
pop
and
insl
pop
pop
insb
loopw
testl
mov
push
arpl
pop
imul
ds
sbb
fxch
repnz
cltd
in
ror
xchg
shl
decb
ljmp
fldl
xor
push
mov
fdivl
xchg
mov
cmp
fsubl
lods
jl
pop
test
ss
aam
xlat
scas
leave
fiadds
test
push
or
js
push
out
xchg
adc
sbb
dec
mov
fcomip
scas
xchg
cmpb
shr
out
sti
or
add
jnp
shrl
rcrl
mov
mov
stc
pop
enter
iret
xlat
and
xor
loopne
scas
mov
stc
lret
cli
push
out
dec
test
mov
pop
pop
pop
inc
inc
lods
mov
in
cs
dec
repz
andps
icebp
mov
mov
pop
push
sbb
or
adc
mov
xor
xor
jl
mov
xor
outsl
insb
push
in
jl
pop
push
jne
pop
sbb
outsb
or
fistpll
push
push
rep
not
mov
mov
push
pushf
lea
jmp
push
lea
call
pusha
call
cmp
pusha
mov
pushf
lea
ja
pushf
mov
pushf
pusha
bswap
setg
mov
not
mov
movzbw
mov
mov
jmp
push
pushf
inc
pushf
pushl
shr
pushl
call
clc
bt
test
call
pusha
bt
pushf
sub
jmp
jmp
movb
bt
clc
add
clc
cmp
jmp
lea
jae
bswap
stc
ror
mov
mov
cmp
movzbw
push
mov
btr
not
jmp
stc
cmp
sub
call
and
daa
fs
stos
mov
xchg
mov
mov
shlb
ret
xchg
sub
dec
pop
sarl
and
pop
jp
jns
cmp
mov
add
and
jmp
xchg
filds
jge
jae
fimull
movlps
adc
or
xchg
repnz
lock
sbb
pushf
into
cltd
aas
in
sbb
mov
lods
movsb
sub
fdivp
fadd
mov
xchg
sbbl
and
pop
add
lahf
or
shll
mov
dec
outsb
popa
fneni(8087
push
outsl
jp
or
pop
mov
ljmp
fistpl
cwtl
faddl
fucomp
test
loop
rorb
pop
jno
dec
push
mov
fs
jne
setle
rcl
xor
ror
das
stc
mov
neg
add
or
shl
sar
cmp
mov
bt
clc
test
jmp
cmp
rol
bsf
bt
mov
cmc
jmp
call
call
insl
xor
arpl
shr
cmc
enter
xchg
xchg
sbb
sub
leave
or
pop
cmp
daa
icebp
fsub
repz
lods
xchg
shr
repz
push
test
or
mov
clc
popf
mov
inc
loope
shr
lea
mov
or
dec
dec
or
mov
cwtl
cmp
pushf
mov
mov
andl
mov
jg
push
inc
dec
insl
pop
gs
adc
sub
inc
bound
and
push
dec
inc
fdivrl
popa
adc
xchg
cmpsb
add
cli
jmp
out
bnd
hlt
mov
and
mov
aad
ja
test
sahf
push
push
inc
insl
push
xor
sub
ljmp
xchg
scas
icebp
jge
outsl
stos
rorl
rcl
xchg
sar
ret
imul
outsl
jnp
jne
mov
hlt
jbe
add
repz
shr
fdivr
mov
dec
pop
adc
inc
inc
jmp
xor
mov
call
lea
jne
pushf
movb
pop
bswap
push
movzbw
pushf
pushl
bswap
lea
pushl
mov
movl
jmp
mov
mov
xor
pusha
cmc
pushf
repnz
mov
movb
push
lea
jne
mov
btc
btr
bt
mov
bsr
sub
or
shl
mov
test
jmp
mov
pushf
movb
pushf
movl
pushl
ret
movb
push
movl
movl
mov
jmp
push
jmp
popa
adc
jge
or
or
add
xor
add
sub
or
loope
xlat
std
cmpsb
jb
insb
xchg
in
lock
jae
nop
enter
mov
pop
arpl
pop
aaa
cmp
mov
cmp
add
sbb
dec
inc
pop
popa
push
jge
sub
clc
add
inc
pop
or
adc
mov
add
pushfw
mov
sar
setbe
mov
test
stc
add
pusha
cmc
not
cmc
call
pushl
call
lea
jae
pusha
push
mov
push
lea
jmp
lods
lock
rorb
push
loope
xor
loop
push
push
lds
movsl
and
sub
jmp
stos
sbb
or
jecxz
sub
push
dec
inc
jbe
ss
add
test
fninit
xchg
add
inc
and
mov
sbb
ljmpw
sub
xchg
pushf
cwtl
insb
sbb
mov
int
or
mov
adc
icebp
inc
mov
aaa
popa
xchg
enter
pop
mov
push
mov
addb
jmp
add
repz
cmpsl
mov
mov
xor
sbb
pop
es
fptan
out
push
mov
mov
push
cmp
inc
mov
dec
mov
orl
push
dec
cwtl
xchg
cs
mov
push
mov
mov
add
pushf
adc
xchg
sub
pop
jnp
dec
sbb
dec
cmp
sub
ficoms
pop
jmp
hlt
dec
pop
adc
pop
jno
jns
dec
push
mov
pop
loop
mov
nop
pop
ja
lods
les
adc
or
fucomip
mov
lret
mulb
lret
sbb
xchg
mov
fwait
pop
jb
jl
sbb
sbb
insl
sbb
and
andl
pop
inc
and
fs
adcl
mulb
xchg
mov
mov
push
mov
jp
imul
push
pop
push
imul
sub
movl
dec
int3
mov
clc
xor
clc
cmc
pushf
test
repnz
jmp
push
jmp
mov
cmp
call
pushf
imul
call
stc
pushw
popfw
push
jmp
lea
je
add
inc
cmc
add
call
orps
js
sub
sbb
je
sub
jl
shrb
leave
in
aad
or
cmpsl
pop
jo
imul
pminsw
addb
rolb
gs
addr16
jle
inc
adc
push
test
lods
fs
pop
cmpl
and
xchg
loope
repnz
mov
inc
jp
pop
jge
jnp
rorb
stos
mov
sbb
cld
call
test
out
fcmovb
cwtl
and
loop
imulb
leave
pushf
lea
jmp
movzbw
movb
push
cwtl
call
movb
lea
jne
aam
sub
jmp
pushf
mov
inc
sub
shl
push
xchg
add
sub
pushf
mov
rol
mov
lea
push
stc
test
pusha
xchg
cmc
stc
jmp
sbb
pop
adc
addr16
outsl
jp
jle
push
pop
xor
jmp
mov
bound
cmp
push
aaa
test
lods
andb
cltd
repz
mov
test
inc
jnp
mov
mov
shr
dec
xchg
push
test
push
gs
push
iret
out
cmc
lods
pop
and
xor
sub
push
and
push
lret
push
and
add
dec
outsl
popa
fs
imul
add
cmpsb
jmp
je
push
pushf
lea
jmp
jmp
rorb
adc
sbb
or
and
sbb
inc
dec
imul
fistl
mov
das
dec
push
dec
out
lods
jmp
out
inc
lcall
leave
shll
cs
jbe
adc
xchg
mov
xchg
jbe
test
test
cmp
cmp
dec
mov
imul
in
or
fldz
lods
mov
lcall
inc
ret
adc
or
movzbw
mov
pushl
lea
jmp
jg
push
pop
adc
hlt
leave
loopne
int3
lea
les
data16
push
push
daa
jle
fsub
ja
lock
imul
mov
cmp
sarb
xchg
aaa
dec
jae
insb
testl
jmp
sarb
scas
int
sti
xchg
inc
sub
add
dec
push
jmp
test
lcall
pop
jle
inc
push
dec
pop
js
jl
dec
jnp
adc
mov
std
out
test
pop
sub
dec
and
xor
bnd
push
or
cli
lcall
repz
pop
dec
inc
push
dec
imul
out
inc
and
inc
mov
dec
sub
lock
xor
mov
jbe
pushf
xchg
push
icebp
test
sti
les
push
addr16
xchg
fidivrs
mov
lahf
sbbb
cmpsb
cltd
stos
scas
jmp
pop
fidivrs
add
xor
sahf
add
stos
cmp
mov
negb
cmp
sbb
rcr
in
test
test
push
cmc
shll
test
enter
mov
and
or
adc
and
jbe
jg
xchg
lea
adc
adc
sbb
inc
inc
add
and
out
xchg
mov
lea
imul
sub
xor
xchg
leave
shlb
lcall
push
inc
cmc
shlb
jge
jbe
bound
pop
cmp
shr
sub
xchg
mov
jbe
loop
stos
or
shrb
and
loop
jecxz
js
div
inc
xor
aam
lret
xchg
rcll
adc
arpl
push
into
lret
mov
xor
pop
jo
add
pop
xor
mov
xor
sub
test
cmpsl
loopne
test
test
aam
cmp
xchg
pop
inc
ja
jb
and
int
enter
hlt
loope
mov
jmp
pop
dec
push
fisubl
stc
and
mov
and
es
aad
insl
inc
push
repnz
bnd
mov
pop
cld
dec
ljmp
fildll
cld
sub
sub
aam
cmpsb
fwait
mov
imul
mov
and
icebp
add
lahf
pushf
in
jmp
cld
call
test
test
jb
in
or
push
stos
mov
pop
push
push
dec
inc
outsb
push
push
push
sub
outsb
dec
rorl
add
stos
lahf
out
push
or
or
ret
add
add
cmp
add
mov
cli
sbb
push
push
xchg
in
sub
add
jb
pop
popa
push
adc
sbb
add
nop
mov
lahf
lods
xchg
pop
adc
push
insl
je
js
and
pop
stos
inc
movsb
lahf
and
xlat
fisubl
adc
dec
mov
test
mov
iret
fcmovnbe
rcl
int
xchg
cltd
mov
shl
dec
dec
jg
sub
scas
testb
pop
xor
jle
ss
sub
inc
pop
inc
sti
push
lret
or
stc
fsubrp
sbb
aad
shl
jnp
jg
js
adc
adc
insl
stos
pop
xchg
inc
push
cmc
pop
bound
sbb
sub
and
or
and
sub
cmp
add
lret
neg
ror
cmc
mov
bt
pushf
pushf
mov
cmpb
pushf
lea
jne
add
neg
add
or
xor
das
mov
mov
shl
add
shr
clc
xor
mov
cmc
pusha
pushl
bt
test
jmp
orps
dec
jbe
dec
addr16
pop
outsl
bound
dec
jp
jo
mov
arpl
loopne
xchg
scas
or
not
cmpsl
mov
mov
outsb
std
stc
push
adc
sbb
pop
sti
pusha
pop
fldenv
sub
mov
mov
cmp
daa
js
and
inc
mov
clc
jns
sub
sbb
push
add
xor
or
or
inc
ds
inc
add
sbb
frstor
not
mov
movzbw
movsbw
bswap
pushf
mov
call
ds
adc
cmpsb
mov
repnz
fistps
sbb
sbb
inc
into
out
ja
aad
dec
jo
lret
std
shlb
and
mov
xchg
mov
imul
push
mov
ja
test
jne
jne
push
pusha
mov
enter
loope
adcb
mov
mov
ror
adc
cli
in
rcl
mov
pushf
pushf
pushf
pushl
ret
pusha
lea
ja
inc
inc
dec
dec
dec
inc
rcl
cmc
sar
shl
xchg
bsr
bt
mov
not
clc
add
test
mov
bt
bt
push
xor
push
sbb
mov
clc
sub
pushl
rep
mov
mov
pushl
pushl
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xor
cmp
call
cmc
mov
push
stc
bsr
push
btc
push
or
shrd
mov
add
mov
btr
mov
bt
or
pusha
movw
lea
je
pusha
movb
or
lea
jb
pusha
push
pushf
lea
je
bswap
btc
xor
lea
dec
rcl
seta
mov
and
shld
dec
mov
clc
setl
shr
cmp
adc
mov
cmp
clc
push
or
pushf
mov
lea
je
rcl
add
jb
adc
push
sub
bt
inc
xadd
btr
shr
not
mov
rcl
add
stc
neg
pusha
add
add
bsr
test
jmp
test
mov
das
ficompl
push
adc
cld
mov
call
sub
inc
fbld
bound
xchg
and
icebp
add
andb
adc
jmp
xor
mov
shr
cmpsb
mov
xchg
cmpsl
testb
popa
push
dec
pop
cmp
xchg
sarl
mov
mov
cmp
lcall
fdivr
addr16
xchg
cmp
in
sbb
mov
lods
xchg
mov
jno
mov
jae
mov
pop
shl
xchg
cwtl
rol
test
out
jno
xor
nop
sub
xchg
insb
jb
pop
dec
jp
jb
push
dec
loope
mov
into
stc
std
mov
or
jbe
call
cli
or
xor
ja
arpl
sub
sbb
sbb
data16
push
repz
fs
je
push
sub
cmc
cmc
cmp
movw
pushf
lea
ja
cmc
bt
imul
push
push
jmp
mov
lea
movsbw
movsbl
call
pushl
test
pushf
push
pushl
lea
je
btc
bts
mov
rcr
sbb
add
clc
mov
pushf
pusha
bt
call
lea
ja
stc
sets
bt
mov
sub
add
add
not
pusha
mov
cmp
stc
or
mov
jmp
sub
stc
cmp
lea
jo
push
pusha
lea
ja
cmc
ja
imul
bt
cmc
jmp
bound
push
cld
fidivrl
movsl
jmp
cs
xor
outsl
xchg
jno
jecxz
repnz
xor
push
out
bound
imul
outsl
jno
jb
repnz
out
push
sbb
subl
lock
jb
mov
pop
loopne
loope
loop
iret
dec
rclb
push
shlb
mov
seto
xchg
adc
arpl
mov
das
mov
xor
inc
ret
bound
adc
rclb
andb
add
loope
mov
jb
roll
and
and
outsl
loope
add
lock
xchg
xor
arpl
adc
pusha
bound
mov
or
bound
pop
loop
icebp
or
mov
and
xor
int
lret
inc
xor
in
jno
in
pushl
insb
or
data16
pop
push
jmp
loopne
pop
loope
inc
xor
push
mov
sarl
das
jo
insl
fistps
rorb
ljmp
dec
push
insb
and
call
loope
cmp
insb
loop
rcrb
xor
pop
lcall
scas
xchg
imul
loop
ret
mov
xor
push
adc
push
pop
mov
ljmp
popf
dec
ret
in
shrb
or
jno
das
pop
jecxz
fsubp
ljmp
sub
lock
xchg
mov
xchg
loope
scas
loop
loop
loop
loop
xor
jo
shll
loope
jmp
das
hlt
das
stos
xor
outsb
xor
ds
ljmp
jmp
sbb
outsb
xor
daa
adc
push
cmp
ja
jb
and
int3
lock
dec
and
pop
sub
xor
pop
rorl
scas
sbb
ds
dec
mov
loope
adc
inc
jmp
out
inc
out
pusha
push
ljmp
sub
imul
mov
popa
lcall
jle
data16
xor
cmp
or
vmovdqu
dec
out
mov
outsb
inc
je
lods
leave
jo
mov
ljmp
loopne
pop
outsl
insb
cmp
push
scas
or
pop
rcrl
mov
lock
fisubrl
xchg
icebp
mov
out
jb
jne
pop
xchg
xor
ret
mov
insb
sbb
mov
icebp
sub
xorl
xor
out
add
mov
out
das
pop
xor
mov
shll
int
fcoml
mov
fucomi
lock
data16
pop
scas
out
insb
int3
or
mov
imul
push
repnz
xchg
mov
mov
stos
cmp
es
pop
cmp
mov
in
pusha
mov
cmp
in
scas
loope
inc
mov
fnstsw
cs
loope
jne
jmp
lods
dec
xor
dec
xor
in
sub
scas
mov
dec
adc
leave
fcoms
test
insb
push
sahf
mov
ljmp
bound
cmp
icebp
sub
mov
xor
inc
js
mov
and
adc
out
cmp
pop
xor
dec
mov
jbe
cmp
add
rorb
push
sub
in
sahf
fcompl
sub
scas
sub
adc
stos
mov
dec
xor
movsl
pusha
fildll
imul
jg
pop
or
mov
outsl
lahf
cmp
sub
cmp
insb
sub
jl
sbb
jge
dec
xorl
cld
shrb
pusha
mov
mov
loope
ja
xor
push
in
out
insb
sub
bound
fmull
xlat
inc
in
inc
popa
cmpsb
adc
inc
scas
repnz
icebp
push
and
mov
push
add
mov
push
xor
repnz
mov
ret
sahf
scas
push
repnz
jb
xor
push
sahf
xor
pusha
fistps
scas
jb
mov
loopne,pt
das
sub
cmp
insl
fstp
stos
lods
scas
icebp
pushf
or
push
insb
loop
mov
mov
imul
pop
repnz
dec
jno
cmp
fldz
pop
push
loopne
mov
pop
xlat
push
scas
insb
clc
mov
imull
xchg
cmc
icebp
xor
mov
das
xor
fldenv
jae
into
cmpsl
dec
xor
xor
enter
mulb
loope
mov
add
sub
sub
bound
shlb
mov
addr16
mov
or
lcall
jp
push
pop
cli
push
inc
cmp
jmp
jecxz
xor
in
mov
ret
jno
jo
xorb
mov
pusha
jno
shrb
xor
loop
in
push
rcrb
outsl
add
xor
popa
ljmp
cs
sub
icebp
push
lods
xor
out
das
pop
shll
lock
shrl
mov
test
out
sbbl
add
pusha
in
adc
out
push
jmp
out
out
fistpl
push
lret
cs
mov
jae
repnz
jb
mov
dec
jno
out
mov
dec
cmp
sbb
or
in
fmul
mov
jl
pop
dec
cmp
sbb
or
jmp
lret
repnz
pop
dec
ds
push
out
fmulp
mov
jle
pop
dec
cmp
std
in
sub
leave
ret
call
xor
sub
insl
dec
dec
fstpt
jne
sub
insl
pop
jns
dec
mov
or
pop
mov
cmp
sub
xor
pop
jo
pop
pop
out
cli
jbe
and
roll
adc
in
mov
call
loop
lea
fs
sbb
in
outsl
rcrl
mov
add
jmp
fsts
ds
jae
sbb
insl
nop
jb
stc
test
gs
xor
pop
imul
jmp
mov
pop
in
pop
jo
repnz
movsb
data16
aad
xor
jno
cmp
fbstp
bound
dec
pushl
jb
test
pop
push
stos
cs
sub
in
pop
outsb
push
cs
scas
push
das
xor
mov
lock
xor
jno
push
xor
mov
push
jno
scas
push
fs
jo
dec
popa
gs
xor
push
test
call
sub
jmp
loop
mov
popa
movsl
loopne
xchg
xor
stos
or
out
lcall
roll
inc
iret
sub
dec
xor
imul
fs
xor
outsb
orl
outsl
sub
cmp
loopne
jae
in
push
xchg
push
mov
push
stc
cs
and
or
loop
mov
frstor
sti
xor
insb
cs
xor
and
and
sahf
lods
fchs
inc
scas
cld
or
jo
lock
mov
xor
repnz
and
movsb
fisubl
movsl
xor
out
and
cs
mov
cmpsl
push
daa
xor
test
call
test
xor
out
stos
pop
sub
cs
sub
insl
inc
sub
lods
or
popa
imul
stos
in
cmpsb
pusha
sub
push
scas
xor
out
mov
xor
insb
fisubrs
jno
scas
repnz
scas
pusha
movsl
aas
pusha
icebp
fwait
loop
repnz
ljmp
cs
fisubl
out
pop
cmpsb
push
out
fisubl
xor
out
push
stc
outsb
xchg
jl
sub
or
dec
pop
mov
sbb
stc
jle
std
jnp
arpl
pop
fcmove
shl
out
lcall
sti
lock
imul
or
mov
out
loopne
ss
cmc
xchg
imul
lcall
xor
mov
cmp
shrb
leave
outsb
jb
adc
sbb
add
cmpsl
repz
cmp
and
fwait
push
sarb
adc
push
je
cmp
mov
jecxz
mov
in
iret
hlt
push
insb
fimull
adcl
je
jmp
call
mov
or
pop
call
adc
pop
lea
pop
unpcklps
and
cmpsb
lods
mov
test
std
in
mov
hlt
jge
adc
sbb
sahf
aaa
and
mov
les
icebp
shr
aad
int
lods
mov
lods
aas
std
jle
push
add
mov
repnz
lea
js
push
push
push
lea
jne
shld
or
inc
cmc
mov
rcl
jl
mov
clc
sub
cmp
shld
mov
test
cmc
stc
pushf
sub
call
lea
add
cmp
not
ror
xor
sub
shrd
not
not
bsf
shr
rcl
mov
setno
movzbw
add
xor
add
xor
bt
push
mov
pusha
shr
pushl
cmp
movb
pushl
movb
lea
je
cmc
stc
cmp
pusha
call
push
jmp
mov
lods
call
call
fldl
jo
jl
push
int3
inc
jne
cmp
sbb
inc
push
mov
or
jo
inc
xor
inc
pop
push
sbb
or
aas
test
sub
hlt
jle
out
stos
scas
lds
xor
push
cmp
int
flds
xor
pop
insb
or
mov
add
mov
xchg
scas
sti
lods
test
cmc
ret
roll
pushf
scas
or
das
popa
jecxz
mov
push
pop
sbb
add
arpl
add
lea
jb
pusha
pusha
pushf
pushl
ret
cmp
test
cmp
call
add
test
jmp
fwait
outsb
into
inc
adc
out
enter
dec
and
sbb
sahf
lea
xchg
sub
ljmp
dec
xchg
pop
imull
dec
inc
pop
in
mov
loope
lds
dec
imul
inc
jp
jae
add
xchg
add
sub
in
jg
and
lods
inc
adc
pop
jp
jp
mov
lret
ficomps
adc
ret
add
rorb
icebp
fcomps
lods
lock
scas
sti
cmp
mov
mov
xchg
hlt
sti
cmp
mov
add
pop
dec
in
dec
adc
call
sbb
pop
popf
mov
stc
pop
jae
shlb
loopne
icebp
xchg
repnz
adc
dec
in
shlb
gs
imul
sbb
jl
push
push
xor
psubsb
scas
add
jmp
pushl
movl
jmp
clc
stc
add
pusha
lea
jmp
pushf
lea
jae
cmc
rcl
dec
mov
cmc
bsf
btr
mov
call
test
jmp
push
movl
push
jmp
mov
pusha
pushl
pushf
lea
jmp
jmp
sub
add
es
jnp,pt
and
add
push
insb
stos
imulb
cld
lcall
sar
jnp
mov
sub
mov
flds
mov
lods
repz
mov
pop
inc
jp
adc
mov
push
loope
jg
shlb
add
fmul
jo
push
jg
jae
aas
sbb
add
adc
cli
add
mov
out
lds
shl
xor
stc
mov
jmp
mov
push
inc
adc
push
inc
je
dec
jns
jno
popa
pop
inc
jl
out
add
add
mov
jne
aas
int3
or
test
imul
call
mov
hlt
mov
cltd
aam
dec
outsb
jp
sub
add
push
jb
idivb
mov
inc
mov
mov
iret
dec
pop
push
inc
fs
dec
or
inc
imul
adc
outsl
or
sub
xchg
jmp
bt
stc
push
mov
movb
clc
jmp
push
movsb
cwtl
inc
adc
pop
inc
push
sbb
aam
inc
sbb
pop
jb
push
and
inc
test
sub
pop
jb
jle
pop
and
ja
sub
popf
xchg
sbb
add
adc
or
xor
pop
gs
scas
movsl
repnz
jl
out
mov
jp
addps
or
jg
mov
ss
adc
xchg
xchg
andl
lods
or
mov
int
inc
loopne
mov
mov
cmp
cmp
popa
bound
jnp
movsl
pop
iret
sbb
sbb
or
cld
div
call
pop
stos
outsl
lds
sub
js
lret
push
pop
rcll
ret
fwait
sbb
aas
pusha
fs
add
dec
out
dec
jno
push
cmc
pop
adc
adc
sbb
popf
fists
data16
clc
test
stos
lret
mov
mov
imul
aas
adc
sub
inc
addr16
lcall
sbb
in
call
sbb
push
xchg
out
mov
lods
mov
inc
pop
sti
test
mov
enter
mov
mov
dec
cmp
out
stos
xchg
lcall
mov
cld
out
fadd
in
fcomip
mov
lret
mov
aam
shlb
sub
cmp
pop
add
add
add
add
add
add
add
mov
add
ja
add
mov
add
add
mov
fs
ss
xorl
cmpsb
arpl
mov
inc
in
ljmp
sub
or
bound
xor
dec
dec
bound
mov
or
or
jb
std
sbb
xor
jp
in
push
or
cmp
sub
xor
jne
popf
lea
bound
pop
xor
andb
ss
repnz
mov
repz
push
push
ret
xchg
inc
clc
in
mov
jo
scas
xor
arpl
movsb
mov
sti
mov
in
out
xor
inc
inc
push
xor
or
xchg
ss
aas
inc
repz
mov
lds
xlat
pop
imulb
push
xor
in
adc
push
jb
loope
xor
push
dec
imul
insb
push
and
xor
cmp
bound
hlt
lods
pusha
jne
aad
shrb
or
xor
mov
insb
cs
fisttps
and
in
xchg
xchg
push
sub
shlb
divb
jecxz
jae
jno
mov
gs
pop
fisubrl
shrd
movsb
dec
adc
xchg
icebp
inc
dec
ss
xorb
mov
cwtl
jle
inc
push
jb
mov
push
fimull
dec
inc
mov
lock
sub
inc
repnz
int3
jae
andb
sub
push
aam
out
mov
lock
xor
push
xor
and
jp
push
sbb
mov
les
jmp
and
filds
or
xor
out
enter
add
mov
aam
les
xorl
push
add
add
inc
lcall
inc
outsl
aas
push
mov
filds
repnz
push
sarb
cmp
outsb
push
xchg
push
mov
pop
pop
mov
push
jb
fimuls
popf
mov
dec
pop
sub
push
arpl
lcall
jmp
xor
cli
jns
and
jno
mov
in
xchg
pop
lds
repnz
sti
icebp
les
inc
pop
lahf
push
pusha
push
mov
dec
cmp
fnstsw
roll
mov
fists
xor
push
push
adc
push
icebp
sbbb
setb
push
push
inc
in
pusha
nop
insl
xor
push
test
subb
bound
stos
mov
loop
dec
cmp
mov
cli
fwait
or
add
cld
jecxz
mov
xor
pop
mov
pop
push
bound
rcrl
data16
pop
stos
fidivl
fbld
dec
sarl
andl
lock
aad
fisttps
fcomi
cmp
mov
imul
repnz
out
cwtl
sub
loop
in
icebp
xor
outsl
sub
gs
sub
mov
push
mov
mov
cmp
mov
xlat
aam
leave
shll
pushf
xor
loop
in
pop
jae
sub
inc
gs
mov
or
setbe
xor
mov
push
ret
outsl
jecxz
fnstsw
dec
xchg
push
outsl
stos
aaa
aas
arpl
add
mov
das
out
ljmp
or
add
cld
scas
sub
aas
dec
and
cmp
mov
cmp
fdivrs
push
std
shlb
push
pop
ljmp
add
mov
out
xor
adc
inc
xor
and
xchg
dec
outsb
cmp
inc
jl
xor
aam
loop
jno
ficompl
mov
inc
and
rcrl
arpl
rclb
sbb
dec
xchg
lock
or
popf
dec
hlt
mov
dec
fiaddl
pop
fistl
loope
jo
loop
mov
sbb
mov
cmp
xchg
sbb
and
sbb
jge
mov
addb
leave
out
inc
fidivl
std
pop
adc
out
aas
jmp
cmp
cmp
sbb
sbb
fs
mov
bound
adc
fxch
addl
mov
jnp
cmc
pop
xorl
es
mov
test
pusha
aam
push
mov
loopne
pop
repnz
mov
inc
test
cwtl
decl
push
sub
roll
push
push
out
jp
sub
scas
dec
sarl
loope
dec
stc
rcrl
or
push
jne
pop
int3
call
in
icebp
push
mov
jge
insb
ficompl
repz
sub
ljmp
pop
xchg
adc
cltd
imul
int
xor
imul
dec
inc
in
icebp
xchg
jb
loope
xorl
add
push
inc
sub
and
bound
repnz
sub
sbb
xor
mov
mov
arpl
xchg
loop
movsb
cs
bound
out
and
push
in
jo
push
lcall
movsb
pop
push
sbb
jo
out
inc
add
nop
dec
push
pusha
sub
stos
mov
xor
mov
jmp
imul
imul
xchg
pop
sahf
mov
nop
jno
repnz
mov
ljmp
ficompl
pop
push
leave
push
ljmp
sbb
inc
dec
and
aaa
cmp
out
lock
cs
loop
cmp
pusha
cltd
add
int
lea
jg
cmp
mov
dec
sbb
mov
push
loope
mov
dec
xchg
mov
cs
mov
jb
cli
sbb
dec
fwait
mov
dec
mov
lcall
or
in
mov
mov
cmp
xchg
lret
mov
je
pop
ja
lret
repnz
mov
imul
and
pop
push
xchg
loope
inc
sub
inc
out
addr16
stc
cmp
jp
leave
jb
dec
rcll
imul
in
mov
and
or
lock
push
adc
rcrb
das
jnp
cmp
sbb
ret
dec
repz
call
mov
jno
jge
push
adc
pop
mov
out
jb
or
jo
jle
sahf
cmpsb
inc
std
xchg
pushf
xor
pop
pushf
mov
adc
mov
outsl
mov
xor
xlat
testb
sub
aam
jae
push
mov
loopne
cli
mov
dec
xor
in
out
cmp
and
and
adc
aas
xchg
in
dec
inc
mov
pop
aaa
arpl
stc
xor
inc
fists
repnz
jb
jge
fdivr
mov
test
adc
jmp
shr
and
aam
jg
inc
scas
inc
test
lock
fcoml
add
pop
inc
subb
pop
pop
xchg
aad
shrb
inc
outsb
pop
insb
add
jb
stos
cmp
jecxz
and
mov
aas
cmpsb
in
adc
mov
repnz
jmp
xchg
mov
and
adc
icebp
jge,pt
das
xlat
dec
test
popa
mov
shll
dec
dec
std
or
dec
xor
jmp
test
mov
lcall
icebp
shl
testb
jbe
ficoms
adc
pop
lods
pop
std
add
mov
dec
mov
and
or
icebp
dec
adc
xchg
jp
inc
fnsave
push
sahf
bswap
repnz
dec
dec
popa
roll
pusha
leave
in
xchg
dec
scas
mov
sub
jl
sub
das
das
rolb
enter
jae
ss
jb
popa
inc
out
incl
stc
or
adc
outsb
fwait
and
push
ss
mov
dec
addr16
mov
sbb
shl
mov
ja
sarb
add
jb
fstps
sbb
outsb
pause
cmpsl
xlat
es
xor
pop
pop
mov
inc
and
add
imul
sbb
push
mov
cli
daa
out
cli
mov
inc
or
mov
cmpsb
mov
push
insl
cmp
adc
pop
in
js
mov
dec
xor
cmpsb
cltd
sbb
or
sbb
adc
ljmp
inc
jno
nop
pop
std
or
in
mov
xor
rcll
das
outsl
sub
sub
push
stos
in
mov
mulb
sbb
fsubrp
pop
push
xor
out
xchg
sbb
notb
cwtl
orl
loop
addl
addr16
icebp
cmpsl
sub
mov
mov
mov
popa
inc
outsb
jns
fidivl
push
pop
cmpsb
mov
push
shlb
les
dec
outsl
addr16
push
dec
pop
or
in
mov
xchg
ss
jecxz
jbe
lcall
shl
pop
repnz
std
filds
dec
push
xchg
lret
bound
aad
xchg
jg
shlb
adc
sub
mov
sbb
dec
jb
xchg
push
dec
sub
mov
or
xchg
mov
pop
push
es
in
dec
pop
push
adc
std
stos
push
cltd
xchg
push
call
rol
ja
rcrb
orl
sub
or
int3
sub
mov
xchg
dec
inc
jb
cmp
ret
mov
xor
and
xor
je
mov
imul
aam
jb
sub
pop
add
push
arpl
xchg
and
scas
dec
iret
test
pushf
push
xchg
pop
mov
mov
data16
bound
mov
mov
shrl
mov
loope
sti
and
sub
rorl
or
xchg
jo
out
fnstsw
in
adcb
cmp
cli
std
das
cmp
out
sub
call
xor
int3
in
repnz
imul
repz
push
divb
xchg
icebp
clc
lcall
sub
or
or
adc
sub
push
mov
jno,pn
push
mov
in
xor
cmp
or
mov
dec
push
icebp
mov
in
lret
nop
dec
or
sub
in
ljmp
pop
cmp
jg
xadd
lock
fcompp
shll
shll
pusha
dec
pop
movsb
xor
rcrb
outsb
sub
push
sub
inc
popa
sbb
and
cmp
cmc
sbb
jecxz
in
insl
cmpsb
mov
data16
sub
loope
pop
mov
pop
repz
xor
pop
sub
inc
ljmp
mov
bound
in
jbe
stos
subl
hlt
xchg
mov
subb
rep
xchg
in
repz
cmp
pop
push
push
lock
sbb
popa
xor
and
addr16
mov
jmp
fcoms
mov
lods
push
out
outsb
mov
imul
jbe
push
loopne
insl
imul
xchg
mov
cmp
fstl
jl
adc
out
insb
and
test
sub
mov
dec
xchg
jp
outsb
out
dec
rolb
cmovle
loopne
mov
popa
xor
mov
and
cmp
mov
lret
dec
test
fimull
mov
clc
movsb
or
mov
mov
jno
inc
mov
add
push
lock
dec
mov
int3
dec
push
ljmp
cmp
sub
cmpsb
jae
into
sahf
xor
scas
push
loop
sbb
mov
lcall
and
adc
inc
or
push
scas
les
xor
mov
outsb
jb
daa
inc
push
lock
fisubrl
out
mov
dec
jmp
fidivrl
mov
or
divl
mov
mov
mov
aad
lock
lods
scas
insb
mov
pusha
inc
popa
popf
pop
lock
popa
sbb
fdivl
loop
jb
mov
pop
outsb
clc
insb
mov
popa
sbb
cltd
inc
and
jb
std
cmp
dec
mov
inc
jp
insb
sub
sbb
in
repnz
movsl
ret
jb
mov
xchg
scas
pop
repnz
xor
inc
jno
inc
xchg
repnz
dec
push
std
shrb
xor
scas
insb
xchg
ds
push
mov
sarl
nop
outsb
sbb
shlb
xchg
mov
inc
orl
lods
mov
xlat
insl
push
fdiv
push
cs
and
inc
xor
loop
sub
rorb
dec
jge
jo
add
imul
repnz
inc
icebp
mov
sub
push
das
mov
or
in
mov
fimuls
subb
test
fwait
pop
jb
and
insl
inc
lock
inc
lret
sbb
add
cmp
push
push
mov
sub
ret
aam
push
dec
cmp
arpl
jo
mov
popa
ss
out
loope
pop
loope
sub
adc
das
loope
leave
jle
xor
aas
sbbb
ret
adc
jno
or
adc
or
rcrb
push
call
rolb
outsb
push
repnz
xchg
dec
aaa
or
and
push
scas
les
test
adc
cmc
jecxz
dec
sbbb
mov
bound
in
and
mov
add
mov
mov
ds
pop
addr16
shrb
addr16
lock
and
sub
and
mov
lods
adc
add
popa
data16
ljmp
bnd
push
lret
imul
push
pushf
repz
jbe
mov
icebp
jl
popa
jo
mov
jmp
adc
push
lock
inc
cmp
std
sbb
test
nop
out
jae
test
scas
xchg
popa
aaa
dec
loop
popf
adc
cld
mov
sub
dec
add
xor
xchg
and
rclb
sbb
sbb
pop
xor
in
xor
add
cmp
xor
lret
fsubrl
pusha
pushf
sbbb
or
pop
or
xchg
scas
data16
push
out
xor
jno
lea
xor
icebp
aas
push
xchg
addb
xchg
dec
cmpl
and
dec
test
rcll
dec
jno
inc
jp
mov
push
and
in
in
sti
pusha
mov
ljmp
xor
adc
jecxz
outsl
lds
dec
adc
lret
sub
lods
icebp
imul
jb
js
dec
sub
sub
mov
imul
outsb
mov
mov
dec
and
mov
call
aam
fwait
xchg
or
mov
aam
mov
add
cwtl
dec
cmp
adc
test
inc
lea
push
cmp
push
dec
imul
sbb
push
jecxz
sbb
xor
roll
xor
xchg
mov
test
mov
add
in
inc
xor
push
in
mov
mov
adc
lods
scas
iret
outsb
add
pop
mov
stos
leave
cmp
mov
mov
jg
dec
ret
stc
pop
or
adc
xchg
and
xlat
jo
icebp
push
push
mov
or
pop
pop
or
mov
push
or
and
aam
pop
sbb
xor
addb
repz
push
inc
pop
test
or
bnd
add
addl
sbb
xor
add
sub
outsb
test
mov
jnp
fists
fidivl
std
inc
adc
aam
jb
idivl
mov
xchg
data16
mov
out
test
cli
loop
outsb
pop
xor
add
and
pop
outsl
cmp
sbb
jno
es
mov
sarl
xlat
repz
push
push
aam
ficomps
sbb
push
xlat
mov
mov
jg
mov
fdivs
inc
sub
pop
jge
xor
movsb
sbb
xor
xchg
cmp
xor
insl
outsl
shll
ret
xor
repz
push
inc
push
sub
dec
pop
pop
std
aam
sbb
out
mov
repnz
outsb
add
cmp
mov
push
sub
dec
xor
jge
mov
cmp
mov
repnz
leave
mov
ss
mov
jp
inc
outsl
fstl
outsb
add
shl
pop
fs
out
mov
fldl
mov
xchg
sub
jae
or
sbb
push
xor
repnz
mov
fidivs
mov
and
sbb
mov
test
jb
std
sub
xor
push
fsts
jecxz
std
out
mulb
push
inc
icebp
jae
mov
out
xor
dec
or
push
pop
das
pop
enter
fldt
imul
jae
xor
in
and
sbb
jp
and
ljmp
ret
xor
add
scas
mov
pop
jmp
popa
in
dec
test
sub
in
push
cli
loopne
inc
cmp
pop
cmp
push
jmp
ffree
or
outsl
incl
movsb
imul
mov
sbb
fistps
dec
call
fidivl
bound
push
mov
mov
daa
adc
sbb
jae
dec
adc
in
inc
push
hlt
push
shr
std
popa
jle
out
inc
sub
pop
push
cmp
push
and
cwtl
push
rep
inc
lock
sti
ljmp
loopne
gs
add
insb
cmc
outsb
mov
pusha
pusha
add
or
push
ffreep
mov
mov
bound
lea
std
sbb
mov
imul
sub
adc
jecxz
outsb
sbb
jecxz
neg
and
pop
jnp
movsb
dec
pop
pop
call
sahf
and
insl
jmp
and
lock
fnsave
mov
cmp
add
lcall
movsb
lock
sbb
fcomps
sub
mov
fadds
sub
sbb
popf
stos
sbbl
jmp
fwait
sub
sbb
pusha
xchg
lcall
push
lods
xor
and
or
stos
lcall
clc
in
inc
cli
ret
pop
outsb
push
outsl
loope
int3
outsb
jo
xor
dec
imul
jno
mov
data16
lock
dec
sbb
out
jo
adc
subb
mov
aad
mov
pop
inc
fsubl
sub
push
sahf
mov
add
int3
and
scas
and
adc
pop
lahf
fnstenv
jecxz
sub
pop
lcall
lret
movsb
stos
push
call
mov
repnz
mov
add
inc
popf
pop
jae
lcall
insb
mov
outsb
pop
in
mov
test
xor
push
pushf
mov
dec
loop
mov
sub
andb
inc
add
push
mov
or
and
rcrb
loope
mov
clc
sbb
mov
bnd
lcall
or
add
in
nop
in
cmpsb
aad
and
or
in
mov
sub
lcall
jecxz
shlb
mov
dec
repnz
insb
cmp
outsl
fldenv
outsl
stos
fs
and
adc
dec
inc
and
or
fsubr
jmp
jns
sub
mov
lods
icebp
jle
add
cmp
mov
in
xor
data16
lcall
sub
mov
icebp
loop
mov
repz
ds
outsl
lds
inc
pop
lcall
insl
lahf
fisttpll
iret
pushf
test
cmp
clc
sub
sar
mov
or
dec
inc
or
outsb
mov
dec
add
and
sbb
insb
or
mov
out
aas
jb,pt
rcr
orl
or
add
mov
push
jb
add
mov
cmp
xor
sbb
push
out
pusha
mov
aam
dec
sub
sbb
push
sub
int3
fisubl
in
push
or
sub
mov
repnz
in
mov
movsb
inc
stos
fs
insl
and
jecxz
loop
xor
hlt
lcall
in
inc
aaa
out
push
imul
sub
mov
bound
test
int3
shrb
cmpsb
cmp
lahf
jae
cmp
sub
mov
push
pop
in
fimull
fstp
pop
mov
mov
jb
cmpsb
add
adc
aad
or
loope
sub
notb
mov
int3
testb
jae
icebp
adc
fdivs
fmul
ret
pusha
add
shll
jmp
rcrb
ret
or
in
sbb
pop
push
jno
push
mov
in
popl
mov
lea
adc
cltd
mov
pop
dec
adc
cmp
add
test
xchg
jb
das
outsb
mov
mov
in
fucomip
push
xor
mov
loop
push
jbe
popf
cwtl
fisubl
in
inc
xor
ret
jo
mov
mov
xor
xor
dec
pop
mov
jge
mov
shr
inc
ficoml
mov
add
sub
push
mov
ret
imul
loop
outsl
or
ja
lea
nop
es
ror
mov
lods
arpl
xor
ljmp
pop
or
mov
sub
loope
lea
sub
icebp
or
pop
gs
scas
sahf
in
enter
fs
sub
outsl
and
fdivr
cs
sahf
jecxz
stos
push
jb
cmp
dec
or
aaa
add
xor
mov
dec
push
adc
mov
adc
into
xor
outsb
das
xchg
mov
ss
add
pop
lds
lcall
mov
in
cld
repnz
test
aam
pop
adc
dec
lret
dec
sbb
ret
loope
dec
gs
fstp
mov
dec
mov
and
inc
lahf
imul
sbb
and
ror
jbe
cmp
addb
dec
fwait
mov
jae
pop
inc
mov
cmp
sub
scas
cmp
in
sub
decl
mov
xor
inc
add
mov
ja
js
and
stos
fs
jg
popf
and
out
push
outsl
mov
in
fsubrl
or
add
push
mov
sub
nopl
sbb
in
lock
fidivrl
insl
jle
sub
icebp
icebp
cmp
inc
push
xor
lcall
jno
push
in
iret
cmpl
add
nop
add
adc
push
iret
dec
jne
push
xor
inc
testl
xchg
inc
cs
sub
negb
inc
dec
ja
inc
gs
into
xor
push
int
fbstp
sub
mov
fisubrs
popa
popa
ljmp
test
pop
xchg
xchg
jno
push
mov
dec
loope
ljmp
fistpl
dec
add
ret
loopne
sbb
repnz
icebp
popa
mov
xor
out
fiadds
pop
int3
orl
inc
mov
adc
dec
jg
call
push
pusha
fstpt
es
test
test
out
cwtl
jns
loope
xchg
push
pop
xlat
sti
jnp
pop
in
mov
xchg
cmp
and
mov
in
repz
push
xor
jne
test
xchg
xor
vmovdqa
fs
into
loop
cmp
cmc
jbe
push
cli
scas
inc
loopne
ret
push
adc
jmp
sbb
lcall
jmp
mov
hlt
mov
outsb
jno
jmp
adc
push
sbb
jmp
mov
pop
push
xchg
mov
shrl
sub
cwtl
lret
jmp
pop
xchg
push
mov
xor
loopne
jg
jno
int
xor
push
in
push
outsl
jo
and
icebp
in
out
adc
adc
out
ljmp
inc
pop
popf
sub
loopne
push
mov
paddusw
outsl
ljmp
int3
sub
repz
shll
out
lock
dec
pop
lock
push
mov
in
insb
repz
ficoms
pop
dec
xor
jno
xchg
adc
add
dec
aam
fimuls
dec
mov
in
ljmp
pop
outsl
add
sbb
push
repnz
jnp
adc
dec
js
sub
jbe
imul
add
insb
pop
xchg
mov
inc
repnz
push
adc
fisubl
jmp
cmp
dec
adc
incb
rolb
test
out
lret
insl
inc
shll
cmp
pop
mov
ljmp
mov
sti
punpckhwd
outsl
mov
in
cmpsb
movsb
lock
jb
stos
mov
lock
add
push
push
push
pop
and
test
dec
loope
out
pop
fwait
shll
sbb
fistps
and
cmp
mov
pop
jb
in
dec
dec
cmpsl
loope
lahf
mov
cltd
xchg
and
mov
jecxz
dec
shl
xor
dec
dec
test
lahf
xor
dec
fstpt
push
fcoms
stc
or
dec
mov
pop
adc
cmp
inc
sub
std
repnz
pusha
imull
lcall
xor
adc
rcl
cmpsl
inc
jmp
xchg
sbb
jp
mov
add
dec
test
or
sub
and
mov
push
adc
xor
push
mov
es
or
push
bnd
popfw
fistpll
fwait
fs
or
in
stos
dec
outsl
ds
cmp
shl
bound
xor
jno
fs
and
push
pop
cmp
les
mov
jnp
sub
loopne
popa
imul
xchg
dec
out
mov
shlb
pop
push
in
out
inc
inc
xor
sbb
aam
ss
pop
repnz
fsubl
ds
xchg
popf
fcom
dec
lock
in
sahf
dec
fdivr
cmpsb
inc
cmp
jns
mov
dec
icebp
jb
xor
sub
and
pop
add
repnz
shrl
add
push
mov
jno
mov
mov
xor
xor
lock
xchg
repnz
jb
sbb
and
sbb
pop
shll
mov
xor
test
xchg
sub
movsl
lock
loope
mull
outsl
scas
outsl
icebp
push
jp
out
inc
jnp
popa
rorb
out
loope
repnz
loop
sbb
adc
mov
mov
jl
sub
push
aam
or
je
stos
mov
lods
jmp
and
outsb
jb
jno
dec
jo
outsl
jb
ljmp
aad
ficomps
mov
adc
in
dec
std
add
fldenv
aas
ret
shlb
hlt
addb
pop
fildll
push
cmp
sbb
sub
cmp
repnz
pop
aam
jmp
fs
out
add
loop
mov
and
enter
mov
jne
divb
or
test
pushf
jb
out
lea
mov
in
fnstcw
sub
lock
lock
ret
ss
sbb
mov
sub
mov
mov
sti
shl
add
in
stos
adc
in
mov
fs
aad
scas
lret
push
dec
push
iret
sub
jle
xor
cmp
nop
in
adc
or
mov
insb
jl
outsb
xorb
es
cmpsb
arpl
sti
push
int3
xor
scas
dec
mov
xor
push
sub
mov
sub
dec
sub
lods
andl
gs
jbe
cmp
lods
fsubs
fistps
es
das
lods
xchg
and
icebp
in
sub
adc
push
add
movsl
xchg
cmp
sub
push
nop
mov
inc
cltd
outsb
stc
xchg
push
dec
ret
cmp
cmp
jnp
jne
dec
loop
andb
fs
lret
enter
xor
fsubrl
sahf
clc
sub
mov
sub
icebp
jno
mov
add
out
adc
scas
and
xchg
aad
push
cwtl
loope
shl
mov
jp
mov
adc
repz
inc
loopne
or
leave
sub
mov
popa
sbb
ret
mov
ljmp
gs
inc
insl
xor
push
sub
mov
dec
pushf
and
xor
leave
test
push
mov
xchg
lcall
xor
mov
ds
mov
sub
dec
sub
ds
fisttpl
mov
sbb
sub
stos
divl
lock
cs
out
out
imul
rcrb
stos
push
lret
push
add
into
and
testl
mov
icebp
sbb
sbb
push
xchg
xchg
jno
mov
leave
fstpl
xor
sub
in
scas
ret
popa
fcomip
sbb
or
lcall
loop
and
mov
mov
notl
into
sub
inc
pop
cmp
dec
loop
iret
cmp
nop
shrb
push
and
in
jb
pop
push
dec
loope
popa
shlb
cmp
pminub
outsl
sub
push
shll
gs
xor
ljmp
popl
jp
hlt
jne
mov
mov
test
xchg
ficoml
ljmp
sbb
shrb
hlt
push
push
orl
inc
jecxz
dec
sub
ja
rorl
pusha
orl
mov
lea
shl
or
dec
dec
dec
repz
jbe
int3
inc
push
push
mov
shl
arpl
xor
jae
sbb
push
and
mov
cmp
xor
mov
gs
push
dec
jb
icebp
push
dec
xchg
lcall
inc
lock
ret
jmp
inc
ljmp
jbe
mov
push
push
out
push
and
lea
mov
mov
xor
or
sub
leave
setb
out
lcall
in
gs
in
data16
out
addr16
out
mov
jp
popa
in
sub
movsb
cs
jecxz,pn
sub
mov
test
ds
fs
jecxz
pushf
ljmp
lock
lret
sub
sub
xor
mov
andl
sub
sub
stos
fistps
xor
pop
mov
repz
int3
lahf
outsb
xor
shll
shlb
mov
cs
daa
xchg
loope
loop
sub
movsl
inc
or
sub
sbb
out
test
jne
pusha
ss
push
mov
test
or
or
sub
sub
lods
push
sub
stos
sub
stc
and
lods
mov
sub
icebp
popf
push
push
xor
jb
push
push
mov
xor
popf
push
push
xor
test
mov
push
movsl
sbb
out
pop
mov
cli
xor
cmpsl
mov
sub
int
push
pop
outsl
in
dec
push
icebp
lcall
mov
mov
and
xchg
push
out
and
push
jl
push
sbb
out
out
mov
pop
scas
icebp
mov
adc
cmp
xchg
pop
fidivrl
lcall
clc
popa
in
sbb
imull
shlb
mov
sub
into
jg
repnz
xor
icebp
ret
loop
cmp
into
nop
sub
into
lret
ds
mov
in
loop
cs
push
push
fs
and
loop
adc
mov
fs
outsl
repz
sub
sub
out
fs
fs
adc
addb
sub
lods
xor
out
cli
or
xor
imul
std
fmul
fstps
stc
add
or
daa
and
in
mov
sbb
sub
inc
mov
ljmp
push
rcrl
mov
pop
sub
pop
stos
inc
imul
subb
sbb
in
ficompl
adcl
adc
push
or
push
bound
pusha
fisubs
in
mov
ss
mov
sub
mov
and
mov
sub
sarl
icebp
or
insb
repnz
stos
cmc
loope
jmp
shl
mov
mov
mov
out
cmp
jle
sahf
leave
in
push
stos
cmp
fistl
ss
xchg
dec
call
orl
sbb
mov
sub
sub
inc
mov
cmp
notb
mov
fs
std
sub
jl,pn
dec
lock
fwait
xor
loop
adc
and
cmpsl
sbb
jge
lea
outsb
mov
push
fimull
enter
sbb
out
sbb
std
xchg
mov
pushf
lret
cmpsb
pop
sbb
out
insb
outsl
mov
pop
adc
mov
mov
jno
ljmp
imul
push
rcrl
cmp
mov
mov
iret
or
add
dec
adc
mov
fisubs
jmp
mov
bound
mov
xchg
cld
jecxz
xchg
fnstsw
cltd
sbb
adc
outsl
inc
and
pop
mov
add
cwtl
pop
mov
mov
mov
sub
cmp
sbb
and
dec
pop
mov
xchg
gs
mov
xorb
fmull
xor
mov
jmp
jmp
bound
mov
add
cmp
enter
push
xchg
mov
and
repnz
pop
cmpsb
fwait
and
in
addr16
jno
lods
cmpsl
mov
ret
mov
or
push
push
imul
insb
xchg
push
jbe
lds
ficompl
mov
jno
call
clts
mov
push
lock
mov
popa
jns
xchg
pop
in
popl
add
js
xor
rorb
adc
adc
idivb
xlat
in
push
clc
inc
imul
push
mov
add
inc
aas
sbb
shll
ljmp
xlat
lock
and
out
stos
mov
jno
in
sti
popa
cli
rcr
sub
xchg
icebp
jl
fstps
shrb
push
in
add
add
xor
mov
cmp
lods
pushf
pop
jb
in
cmpb
fldl
ljmp
in
aam
push
jbe
cmp
mov
rolb
mov
out
xor
push
imul
jo
xor
add
xchg
xor
add
push
push
inc
and
loop
imul
shlb
adc
mov
lcall
popf
or
and
pop
push
enter
dec
and
lcall
jbe
addb
xor
mov
rcll
aam
js
pop
or
push
shr
out
pop
lods
aam
push
sti
dec
push
jmp
mov
lods
xchg
xor
push
mov
aam
fnstenv
sub
lock
or
arpl
mov
popa
subb
aas
rorl
sbb
jae
lods
push
jb
fisubrl
xlat
and
repnz
adc
outsl
sbb
outsl
in
xchg
lret
stos
push
dec
test
aam
repz
mov
jo
hlt
jmp
inc
lcallw
mov
jno
cvtpi2ps
int3
push
push
mov
gs
jecxz
jp
dec
sub
mov
add
pop
sub
jno
repnz
push
ss
cli
arpl
jno
lcall
ljmp
outsl
arpl
gs
sub
movsl
pop
xor
insb
shl
out
into
mov
mov
repz
jo
repnz
mov
mov
dec
popa
add
xor
gs
enter
sbb
mov
xchg
and
lock
fnstenv
inc
dec
cmpsb
addr16
cs
mov
adc
cmpsl
bound
pop
fdivrs
fcomps
sub
cmp
cltd
mov
add
sub
mov
in
ret
mov
mov
adc
push
lret
sbb
js
rolb
aam
outsb
mov
mov
mov
repnz
push
rolb
movsl
addr16
fld
inc
push
dec
jecxz
ljmp
rcrb
pop
gs
lock
iret
aam
cmp
insb
xor
stos
mov
mov
icebp
mov
and
sub
pop
mov
std
shrb
aas
sbb
imul
repnz
fisubrs
loopne
cmp
cld
and
std
dec
push
test
inc
shrb
push
sub
or
inc
inc
aam
inc
or
sub
stc
shrb
sbb
sbb
mov
xor
mov
icebp
mov
mov
cld
fdivrp
xchg
push
mov
paddsw
jge
imul
sbb
or
stos
adc
add
gs
sub
jmp
push
or
mov
test
scas
imul
sub
sub
ja
add
mov
xchg
cmpsb
shr
imul
in
loope
in
xor
xchg
mov
pop
hlt
xlat
and
rorl
loope
scas
and
das
stos
hlt
imul
add
sbb
mov
fisubrl
xor
dec
dec
dec
mov
daa
mov
jmp
scas
xchg
mov
push
out
fstl
stos
out
inc
dec
adc
jo
xor
fsubp
jo
mov
rcl
push
pop
pop
xor
and
or
outsb
jmp
and
shrb
movlps
bound
mov
push
ret
adc
push
aas
inc
jg
pusha
push
icebp
mov
in
sbb
xchg
xchg
repz
inc
mov
pop
fsubrl
jae
jecxz
fisubrl
mov
loop
jmp
repz
dec
pop
pop
mov
dec
pop
es
jae
outsb
mov
adc
sub
in
adc
das
pop
cmp
fbld
xchg
xchg
mov
rol
push
push
lret
leave
push
enter
xor
scas
loopne
push
add
pop
or
mov
push
cld
or
adc
push
xor
and
dec
mov
adc
daa
dec
loop
sbb
sub
int
and
push
inc
outsl
in
sub
and
xchg
sub
mov
call
bnd
out
ret
push
pop
mov
in
adc
pop
loop
sbb
iret
std
sbb
cmp
pop
shll
xor
out
mov
insl
xchg
xor
cmp
sub
fisubs
mov
sub
loop
sahf
mov
adc
lds
int3
lds
movsb
and
push
mov
in
sbb
sbb
xchg
sub
outsl
xor
and
es
fwait
jmp
mov
inc
int
cmpsb
lods
push
sub
cmp
fisttpll
stos
bnd
jnp
mov
test
mov
stos
mov
sbb
mov
arpl
inc
sub
std
fdivp
mov
jg
or
loopne
scas
shl
mov
push
sbb
mov
clc
das
and
fdivr
arpl
aas
xchg
mov
and
jecxz
bound
dec
adc
popa
pop
repnz
ficoml
push
xchg
xor
scas
movsb
fistpll
and
xor
sub
pop
inc
clc
mov
dec
and
push
in
and
aad
and
mov
mov
dec
out
dec
aaa
adc
fs
scas
in
push
scas
lea
lcall
std
in
and
jge
loop
push
call
imul
xor
and
pop
mov
sub
sub
push
movsb
in
pop
xorb
add
out
cwtl
inc
dec
cmp
outsb
cmp
repnz
out
mov
in
lods
xchg
outsb
mov
mov
add
jae
int3
sbb
stos
mov
jmp
ljmp
por
orb
cmp
lcall
incb
cltd
jb
in
push
mov
or
movsb
and
imul
shll
out
pop
xor
mov
out
push
push
or
or
cmp
pop
loop
cmpsl
cmp
scas
jno
xchg
mov
jo
mov
inc
nop
adc
data16
adc
sbb
mov
push
lods
out
in
cmpsl
xchg
and
stc
push
pop
scas
sbbb
fsubl
jne
daa
scas
fidivl
repnz
out
jb
mov
xchg
jae
into
ds
mov
call
in
mov
int
and
push
xlat
dec
lods
sbb
insl
push
push
jae
and
jecxz
fmul
call
sti
int
ret
and
nop
notl
mov
dec
addb
jns
xchg
pop
shlb
out
and
jno
xor
cld
iret
sbb
sbbl
int3
pop
pop
je
adcb
jns
dec
jno
dec
add
rol
pop
inc
inc
rolb
test
int3
fimull
in
jmp
pusha
mov
subb
sbb
xor
add
mov
mov
mov
imul
inc
cs
sub
out
or
push
cltd
outsl
popa
sbb
scas
int3
mov
sahf
mov
inc
imul
mov
std
in
and
cmp
adc
dec
cld
and
aas
mov
stos
dec
mov
xor
in
push
sbb
pop
xchg
outsb
push
gs
push
sbb
xor
fcomps
push
pop
mov
ss
push
enter
lahf
icebp
mov
scas
sbb
dec
repnz
push
cld
es
mov
cmc
mov
int3
xor
in
mov
dec
pop
jge
push
cwtl
ret
or
jmp
mov
setne
stos
loop
and
ss
jp
mov
in
test
inc
push
repnz
pop
pushf
adc
es
dec
scas
shl
push
jno
outsb
pop
jge
push
cld
adc
add
loope
push
scas
mov
adc
test
dec
mulb
dec
fistps
xchg
in
scas
imul
sbb
cmpsl
pop
adc
pop
xor
mov
and
jb
jg
mov
pusha
mov
in
hlt
jb
sub
pusha
cmc
push
ljmp
add
sub
out
shrl
mov
out
pop
out
iret
sub
nop
pop
sub
shll
dec
adc
movsl
dec
mov
jmp
xor
cmp
popa
fdivs
ret
jmp
lahf
das
adc
adc
int
push
mulb
ds
aam
push
int
dec
enter
push
mov
push
inc
jnp
enter
lcall
pop
mov
repz
push
repnz
pop
add
adc
lods
jmp
add
push
popf
and
repnz
xor
xor
bound
icebp
inc
rol
popf
push
xor
pop
insl
scas
xor
gs
mov
sbb
in
xchg
cmp
imul
inc
shrl
out
cmp
and
mov
bound
icebp
insb
dec
fs
sbb
repnz
jnp
pop
jns
add
addb
pop
rcr
sbb
pop
popf
xadd
sub
and
in
push
bound
mov
sahf
pop
or
xchg
xor
adc
and
stos
aas
in
inc
cmpl
dec
fidivrs
mov
mov
mulb
insb
movsb
push
add
jne
out
loop
mov
or
dec
loope
or
dec
mov
imul
repnz
inc
loope
cmpb
mov
pusha
jno
cmp
sub
repnz
push
aas
sbb
dec
mov
pop
popa
in
xor
inc
call
mov
add
push
push
sub
pop
or
sub
cltd
and
test
sub
add
pop
icebp
in
xor
jl
jg
out
xchg
repnz
das
rcrb
inc
sahf
bound
pop
adc
stos
repz
shrb
bound
mov
inc
push
int3
cltd
mov
in
xchg
jns
or
xor
push
mov
or
adc
sbb
adc
xor
jecxz
jmp
into
stos
repnz
outsb
das
imul
ret
loopne
stos
outsb
mov
mov
movsl
mov
cmp
push
stos
mov
lea
inc
xor
jb
popa
bound
scas
sbb
mov
and
fnstenv
sahf
insl
mov
sub
mov
pop
pop
cs
cmp
cmpsb
fs
out
mov
aad
movsl
mov
sub
stos
or
push
shlb
movsl
jae
mov
test
scas
push
in
fisubrs
imul
add
mov
mov
mov
jp
int3
push
pop
mov
pop
mov
mov
xor
adc
cmp
xchg
scas
js
fcmovbe
inc
adc
jl
jl
pusha
jl
xchg
and
ljmp
in
pop
add
pop
cltd
pop
mov
out
sahf
rclb
sbb
icebp
inc
jns
or
cmpsl
mov
cmp
es
adc
push
or
mov
jp
dec
inc
fadds
xchg
imul
push
xchg
dec
jae
mov
scas
push
inc
lock
call
and
sub
out
sbb
aas
fnclex
dec
cmp
adc
lahf
xchg
xchg
fcmovnu
xchg
add
or
lea
popf
sub
mov
dec
in
xor
ret
mov
mov
adc
or
popa
fisubl
lock
clc
stc
jno
movb
out
pop
repnz
jle
lock
mov
sub
sub
adc
out
jmp
in
jmp
sub
nop
call
mov
sti
test
into
sarl
aas
int
fdivrl
pop
push
outsb
ret
icebp
pop
sbb
sahf
xchg
sbbl
mov
mov
mov
arpl
subl
decl
out
pusha
in
sub
int
shll
pop
jnp
xor
sbbb
add
xchg
mov
stos
addr16
mov
test
shl
mov
cmp
pop
inc
cmp
jb
ficomps
in
das
lcall
mov
fstpt
pop
cmc
push
mov
cmp
add
and
sub
mov
cwtl
adc
mov
insb
xchg
aas
xor
fcompl
xor
or
rclb
push
lret
sub
negb
cmp
jmp
sbbl
push
enter
pusha
push
cmpl
fs
sbb
das
int3
bound
mov
dec
xchg
cmp
mov
dec
rorl
push
xor
cmc
ret
fldcw
jl
cltd
jno
icebp
pop
jb
popl
or
mov
roll
xchg
in
xchg
pop
add
lods
or
in
dec
or
pop
fiaddl
sub
mov
sub
inc
pop
and
pop
mov
inc
xchg
sahf
cs
jae
mov
mov
xor
filds
das
sub
lea
dec
inc
push
cwtl
fldt
xchg
jb
out
push
pusha
mov
mov
in
leave
mov
ret
lods
xchg
dec
sbb
shlb
mov
cmpl
mov
xor
xchg
jle
jb
push
inc
dec
loop
and
adc
imul
add
mov
test
in
mov
data16
testb
enter
sub
cmp
xor
or
insb
fisubrs
xor
es
cmpsl
pop
add
add
cld
jmp
push
fisttps
adc
loopne
stos
push
push
ss
push
andl
cmovg
jb
outsb
mov
xor
shrb
xor
sub
push
cs
dec
push
and
cmp
jle
or
push
jae
mov
cmp
roll
adc
dec
jno
mov
rorb
insb
fcmovu
mov
insb
add
add
add
fisubrl
pusha
roll
add
loop
mov
inc
inc
out
sub
aaa
out
inc
sbb
push
xor
andb
pop
jnp
mov
dec
data16
stc
es
sahf
and
cmp
cmpsb
and
mov
jle
jmp
pusha
test
ljmp
mov
xchg
or
aas
adc
or
jecxz
pushl
xchg
cltd
push
scas
dec
iret
aas
fs
pop
and
dec
jp
add
sub
outsb
inc
ss
mov
jg
push
or
xor
and
mov
in
adc
jmp
adc
ss
push
aas
jnp
adc
test
leave
fwait
je
in
mov
fstps
sbbl
ja
xchg
and
das
mov
mov
aam
mov
and
loop
shlb
in
repz
decl
daa
add
loopne
xorl
push
jnp
ja
ss
sub
push
cltd
xlat
sahf
ja
pop
push
into
pop
push
cmp
imul
or
dec
add
fisubl
xor
xor
pop
pop
fdivp
and
das
or
dec
pop
adc
jb
rol
mov
mov
sbb
adc
dec
sub
dec
jecxz
notb
push
sub
push
fistpl
and
sub
xchg
cmp
push
pop
les
ss
push
and
js
dec
and
in
fimull
or
fistps
icebp
or
shll
popa
mov
pop
sub
ja
push
jb
add
rolb
add
cmp
xor
jl
fadd
mov
iret
sbb
outsb
mov
and
lods
adc
sub
pop
sub
sbb
fucomi
sbb
xor
add
jle
push
pop
fs
outsb
aaa
pop
inc
inc
dec
test
shr
xlat
cmp
popf
inc
pop
in
jb
and
enter
and
xlat
mov
data16
movb
rcrl
adc
jle,pt
inc
fnsave
inc
arpl
stos
pop
mov
inc
lahf
fldpi
popa
fwait
add
in
sub
call
aam
ret
mov
lret
inc
ss
fwait
imul
lret
push
repnz
jns
or
push
or
cmp
loopne
mov
rcll
outsl
loopne
jno
dec
cmp
popf
fstl
cmpsl
push
sbb
movsb
fwait
int
imul
loop
imul
jle
addl
cmpsl
lahf
cs
int3
adc
std
mov
adc
pop
insl
mov
imul
ja
add
fucom
pusha
cmp
lcall
leave
scas
xor
mov
push
cmp
addl
jo,pn
adc
mov
repnz
lcall
popa
push
xor
arpl
sbbl
push
test
test
into
inc
pop
jmp
popa
cwtl
cmp
stos
repnz
jecxz
and
or
jns,pt
pop
sub
mov
enter
and
inc
fs
lcall
fwait
xor
adc
cmp
les
jne
int3
push
sahf
add
mov
inc
mov
dec
adc
fwait
xchg
mov
subl
aas
add
lds
fisubl
sub
in
mov
pop
lret
outsl
jb
rcrb
lret
lods
jmp
int
adc
or
mov
lods
in
fiadds
repnz
adc
in
jl
xor
imul
sub
or
outsl
repnz
rolb
pop
jmp
inc
shrb
dec
nop
dec
cmpsl
mov
cmpb
xchg
ret
rcrl
shl
mov
jae
cmp
int
jge
push
dec
mov
adc
pop
adc
inc
fsubs
ror
and
fmull
inc
xor
mov
mov
pop
add
out
aas
loop
xor
in
out
mov
cmp
fs
faddp
pop
dec
imul
gs
sbb
xor
xor
out
sub
dec
ret
add
xor
inc
dec
inc
adc
inc
mov
add
popl
popa
xlat
and
mov
adc
sbb
outsl
push
aad
nopl
movsl
stc
xchg
in
xor
aas
dec
scas
gs
adc
push
pop
jbe
push
xchg
jmp
sub
and
pop
xchg
jne
xor
loop
in
scas
cmp
imul
inc
add
add
loop
adc
xor
loop
int3
mov
add
outsb
cmp
dec
xchg
adc
mov
int3
shr
push
lahf
inc
xlat
cli
in
mov
imul
jno
inc
fnsave
mov
adc
dec
orl
inc
inc
cmc
loop
xchg
jbe
jnp
add
cmp
xor
aad
adc
pop
jnp
dec
lret
fs
leave
shl
mov
call
add
enter
sbb
mov
icebp
andl
sti
roll
mov
js
push
pop
cmp
dec
imul
cmp
jno
ror
pop
lahf
subb
and
fwait
inc
adc
add
xchg
and
mov
repnz
jno
rorl
ret
lock
xchg
insl
mov
lahf
in
add
insl
mov
xchg
and
push
movsl
cs
int3
pop
icebp
iret
adc
icebp
lock
int
dec
scas
shll
dec
scas
fwait
push
leave
and
outsl
popf
sar
icebp
push
das
inc
loop
in
pop
icebp
andb
lods
gs
call
lcall
pop
ja
fstl
outsb
xor
dec
sub
lds
and
sbb
aaa
and
and
test
pop
lods
xor
movsb
xor
outsl
sbb
repnz
pop
sahf
pop
sub
sub
push
inc
inc
cmc
push
pop
icebp
bound
mov
imul
jb
xchg
sbb
inc
and
or
sbb
mov
pop
fsubrl
mov
push
daa
pop
gs
lcall
sbb
aam
lds
inc
xchg
inc
in
loop
out
add
bound
cmp
cli
test
rcrb
xchg
imul
pop
cli
inc
in
scas
pusha
out
stc
icebp
cwtl
pop
loopne
xchg
out
cs
push
cltd
jo
sarb
jmp
lock
in
repnz
scas
xor
aas
lock
and
int
dec
cli
pushf
mov
inc
fcmovnb
sub
fucomip
mov
sub
cmpl
mov
test
or
push
mov
in
cmp
addl
mov
cmp
dec
jnp
aam
mov
jno
or
nop
mov
mov
fmuls
loopne
and
dec
jb
xor
adcl
lods
or
bound
mov
insl
xor
stc
out
add
in
repnz
jp
add
lcall
adc
dec
mov
adc
mov
mov
xchg
xlat
xchg
jae
mov
aaa
mov
push
test
push
and
push
xlat
and
push
into
loope
lods
ret
cs
les
cmp
mov
in
repnz
gs
and
mov
jbe
out
mov
test
dec
outsl
pop
jno
sub
dec
mov
mov
push
cmp
ret
and
lcall
cld
outsl
or
or
andb
jb
xor
repnz
loope
sub
int3
mov
push
fimull
mov
sub
dec
sarb
lods
jae
out
cmpsl
pop
filds
out
loop
xchg
xchg
subl
mov
add
sahf
add
sarb
bound
pop
imul
mov
sub
xchg
xor
imul
dec
inc
data16
lock
mov
test
mov
dec
imul
or
in
pop
lret
cmp
ret
arpl
jle
jge
inc
scas
sub
inc
pop
mov
lock
xor
in
imul
mov
stos
repz
stos
and
aas
mov
xor
dec
pop
pop
cmpsl
into
ficomps
cmp
inc
imul
sub
mov
ss
stc
dec
jl
out
dec
loop
push
adc
xor
lea
pop
jge
std
jns
cmp
push
test
movsl
add
adc
loop
in
jmp
add
or
stos
shrb
decl
pop
lock
notb
xor
mov
cld
jne
sub
pop
in
push
insb
xor
fnsave
add
aas
xchg
cmpsl
sub
lcall
enter
and
enter
push
or
jecxz
inc
jae
in
sarb
outsb
push
push
orl
sbb
mov
pop
cmpsl
clc
jno
inc
fs
aas
daa
jp
fstps
fs
arpl
imul
mov
lahf
dec
scas
mov
sti
ret
movsb
insb
add
sbb
fimuls
lret
inc
fdivrs
and
lret
ret
adc
push
and
dec
icebp
push
test
add
cmp
lcall
sub
sub
xchg
dec
loopne
rcll
dec
bound
ret
out
aad
jb
push
cmpb
outsb
push
mov
and
cwtl
mov
add
jb
test
ds
push
ret
jmp
fnstenv
loop
push
movsl
shrl
daa
push
mov
mov
subl
dec
dec
sbbl
ss
dec
ret
popa
aam
push
pop
or
sub
pop
jno
inc
jb
pop
add
outsb
cs
adc
adc
hlt
pop
shl
push
sbb
pop
arpl
mov
and
iret
pop
fs
or
lahf
sub
and
mov
aas
popa
add
jb
mov
fsubs
jl
xchg
lret
lahf
push
sahf
scas
cmp
xchg
aam
outsb
jns
out
sti
pop
sub
in
into
out
mov
mov
sub
aam
inc
loopne
cmp
xchg
xor
and
insb
pop
xor
mov
jno
jb
in
and
loope
adc
loope
xor
out
xchg
shl
adc
fs
cmp
repz
shlb
stc
xor
test
sbb
repz
cmc
jecxz
into
popf
cltd
fs
scas
aaa
icebp
shl
dec
adc
mov
xor
int
imul
xchg
xor
jno
fstl
and
pop
push
or
jmp
insl
sub
sti
push
jb
mov
nop
push
jg
add
in
mov
inc
sub
mov
cmp
sbb
addr16
push
int3
out
mov
mov
xor
push
ficoms
daa
ret
and
in
negl
sbb
adc
in
test
mov
pop
rclb
inc
mov
cmpsb
jge
push
pop
cld
mov
adc
jo
shlb
adc
and
pop
inc
loopne
shll
adcb
cltd
cmp
rcrb
in
sub
aas
in
repnz
and
or
inc
inc
cmpl
out
sbb
mov
mov
cmp
nop
lcall
faddp
js
cmp
in
bound
lods
ds
bnd
psrld
icebp
mov
push
aad
sub
repz
xchg
sbb
out
lock
push
xchg
out
mov
out
inc
out
in
fisubl
adc
xor
or
rclb
in
mov
loopne
mov
adc
imul
cmp
mov
inc
cmp
fiadds
inc
popl
adc
push
ss
popf
filds
iret
push
xor
sbb
jecxz
xchg
aad
scas
add
pop
ret
xchg
in
shrl
iret
push
lahf
popf
xchg
icebp
fisttpl
sbb
shlb
sbbl
and
cmp
xor
cmp
fbld
in
das
inc
or
sbbl
lcall
and
dec
inc
outsb
jge
mov
and
outsl
int
outsb
out
sti
mov
lahf
out
cs
lods
sbb
xor
lock
mov
mov
sub
roll
stos
xchg
mov
dec
addr16
jne
out
test
cmpsb
mov
das
pusha
mov
sbb
ret
dec
pop
out
push
fsubl
ljmp
sub
mov
loop
jle
inc
fwait
jl
les
and
cli
pop
icebp
cmp
in
pop
lahf
je
rcrb
aam
dec
sbb
mov
push
fbstp
loope
cmp
jo
icebp
inc
pop
outsl
mov
mov
cs
pop
mov
or
jnp
xchg
movsb
call
test
loopne
adc
push
push
xchg
int
rclb
int3
jmp
ljmp
cmpsl
and
push
mov
je
aad
mov
popa
mov
push
icebp
mov
dec
mov
inc
stc
loope
xchg
stos
jmp
ds
mov
pop
mov
or
in
popf
cmp
fistps
pop
out
sub
push
repnz
xor
xor
in
repnz
in
out
add
sbb
dec
push
and
cmp
lahf
mov
in
sbb
aam
pop
xchg
sub
in
nop
mov
xor
xchg
and
sub
subb
loope
dec
push
inc
and
jno
sub
shr
loopne
loop
or
sub
adc
aaa
fbld
dec
inc
sahf
inc
adc
xchg
mov
int
jecxz
rcl
fbld
je
test
lret
dec
int
push
push
mov
mov
cmp
sub
fdiv
mov
and
into
and
adc
jns
mov
and
sbb
jb
mov
cltd
orb
mov
xor
sub
in
pop
jb
repnz
sub
sbbl
sbb
fcmove
jmp
cmpb
push
addl
push
leave
pop
ficoml
cmp
nop
popa
mov
add
or
int
jb
test
mov
call
dec
ljmp
popa
leave
pop
adc
repnz
dec
and
mov
jbe
shll
push
in
push
xor
dec
add
sbb
push
push
mov
mov
bound
das
or
add
icebp
lahf
mov
pop
dec
or
fstpl
xor
lods
xchg
ret
pop
enter
out
loop
push
fwait
mov
pop
sbb
sbb
xchg
dec
push
imul
push
sbb
mov
jg
or
addr16
jnp
mov
push
xor
adc
xchg
sbb
clc
cmp
push
mov
and
shlb
xchg
ret
data16
lret
and
dec
and
dec
pop
and
jnp
sahf
push
mov
inc
fs
mulb
shl
inc
cmp
repnz
jns
push
jb
adc
scas
subb
push
add
shl
sbb
mov
addb
pop
ja
out
nopl
inc
pop
lea
out
sbbl
sub
dec
xor
mov
mov
mov
lahf
shl
jo
sbb
push
dec
stc
push
push
add
mov
scas
xchg
mov
xor
mov
leave
outsb
popa
pop
push
icebp
jb
jae
lock
pop
pop
push
push
pop
sbb
lods
sub
jno
adc
push
sbb
cmp
push
pop
imul
les
mov
lock
es
push
ficomps
push
lods
dec
std
push
inc
sbb
cmpsb
adc
push
xor
fldcw
repnz
cmp
or
dec
pop
mov
outsb
cmpsl
push
push
add
pop
jne
leave
stos
mov
push
data16
aas
inc
inc
pushf
aas
dec
gs
push
repz
jecxz
out
dec
push
mov
adc
or
flds
xchg
pop
jp
mov
fs
dec
mov
add
arpl
dec
in
fisubrs
pop
fsubrs
imul
movsl
jp
inc
mov
adc
pusha
pmulhw
or
scas
xchg
lahf
aam
dec
cmp
andl
push
scas
adc
arpl
push
lcall
ss
leave
add
movsl
outsl
mov
or
inc
cmp
pop
repnz
xchg
outsb
out
cmp
inc
mov
daa
sar
pop
add
or
movsl
mov
push
ficoml
mov
lock
push
mov
mov
cltd
popa
addr16
imul
jno
jecxz
sbb
add
imul
mov
loopne
sub
iret
dec
les
arpl
or
xchg
mov
inc
push
push
icebp
sbb
sub
adc
in
loope
leave
jno
rolb
push
jecxz
outsb
or
das
sti
in
mov
mov
repz
pushf
sarb
inc
scas
iret
int
outsl
mov
mov
sub
mov
mov
dec
xchg
sub
mov
mov
xchg
push
scas
sub
and
rcrb
outsl
mov
and
add
in
addr16
test
pop
pusha
mulb
inc
gs
fstl
test
mov
dec
adc
add
or
lret
mov
out
mov
pop
mov
cmp
jl
pop
jmp
add
sbb
pop
cmp
mov
cltd
test
mov
lods
cwtl
mov
loop
rcr
loope
and
imulb
or
inc
in
sahf
shlb
and
into
inc
sub
dec
imul
jg
mov
aam
into
inc
cmp
lret
sub
sbb
in
xor
mov
xor
test
inc
cmp
cmp
lret
rol
push
xchg
pop
fcoms
lea
stc
jecxz
icebp
fbld
mov
inc
add
in
and
sbb
mov
inc
daa
sub
rol
hlt
lock
iret
xor
mov
lds
or
push
int3
add
mov
mov
jmp
mov
push
cmpsl
dec
pop
or
or
cmp
outsl
in
mov
cmp
push
inc
inc
lds
scas
push
inc
lcall
push
xchg
loopne
mov
ret
repnz
imul
rcrl
lods
inc
lcall
bound
insb
test
mov
inc
pop
mov
pop
push
stc
dec
xchg
xchg
push
add
out
icebp
mov
push
arpl
push
inc
sarl
mov
lods
cmp
sub
push
fiaddl
inc
jne
adc
add
dec
insl
test
loope
outsb
sub
outsl
negb
push
divl
mov
lahf
push
add
pop
xor
sub
lahf
cmp
jb
lahf
dec
lcall
shlb
xor
xor
sub
repnz
add
mov
out
adc
add
push
inc
les
std
popa
sahf
out
xor
mov
lcall
iret
les
or
cltd
fistl
cmp
outsl
scas
mov
cmp
mov
mov
loop
data16
insl
mov
scas
or
push
pop
lds
insl
mov
sti
fs
adc
xchg
mov
sbb
or
mov
jno
jnp
dec
and
xchg
pop
mov
sbb
scas
movsl
push
mov
fs
stos
shl
add
jge
test
mov
insl
pusha
adc
xor
push
call
inc
test
dec
out
mov
mov
sub
aad
jbe
pusha
cli
icebp
and
dec
cmp
xchg
inc
dec
test
shr
jno
lahf
cltd
pop
int
push
sub
orb
popf
in
sbb
call
fsubrl
jnp
xor
in
cmc
rcrl
stos
pop
pop
push
push
cmp
cs
ja
sub
adc
and
xchg
lcall
out
pop
xor
jo
div
in
daa
test
loop
xor
mov
rorb
mov
push
dec
bound
cmp
mov
inc
cmp
aad
push
int
faddp
mov
push
popa
fs
movsl
shrb
shlb
xor
add
mov
nop
das
push
outsl
shl
dec
es
test
ljmp
pop
in
xor
out
in
fdiv
dec
mov
mov
outsb
cmpsb
xor
imul
lcall
movsl
mov
int3
out
in
push
mov
cmp
loop
sbb
inc
mov
xchg
int3
shl
fstl
mov
mov
loop
es
stc
jmp
icebp
fcmovnbe
and
lock
sub
lcall
rclb
dec
cltd
dec
aad
repnz
inc
fiaddl
xor
popa
dec
pop
inc
loopne
roll
inc
push
out
or
loopne
sbb
stc
ds
nop
cmp
cmp
and
sub
mov
data16
fisubl
and
fidivrs
mov
filds
xor
mov
nop
daa
inc
mov
xor
xor
les
fdivr
sub
pop
and
push
and
jge
mov
jbe
ja
and
adc
push
lods
mov
cmp
mov
or
es
add
adc
sub
add
into
cmp
or
in
mov
repnz
jno
out
fsubrl
arpl
mov
scas
push
mov
lods
out
and
sbb
mov
mov
into
rcll
es
popf
mov
xchg
cmpsl
push
mov
insl
inc
int
pushf
adc
dec
repnz
mov
or
lcall
rcrb
and
mov
pminub
mov
or
dec
push
cmp
mov
mov
and
inc
push
jecxz
mov
jno
pop
add
popa
pusha
sub
inc
daa
fldt
sbb
mov
lcall
mov
stos
push
subb
fimull
push
sbb
inc
jge
fwait
and
into
gs
sub
mov
xchg
fstpl
fistpl
mov
xor
ljmp
push
icebp
loope
and
fwait
sub
xchg
sbb
mov
loope
mov
lea
call
fisubs
jb
std
adc
aas
les
loop
xor
fists
mov
fs
insb
push
xor
mov
daa
dec
in
std
sbb
in
cwtl
repnz
addb
mov
pop
dec
cmp
jno
aas
lods
pop
loop
repnz
mov
vpaddsw
mov
ret
imul
call
xor
out
adc
add
stc
xor
pop
adcb
pop
test
add
sbb
out
xor
sbbb
aas
adc
cmp
lret
mov
or
pushf
repnz
mov
outsl
negl
lret
ficompl
in
pop
into
cmp
sub
lods
sbb
ss
scas
das
add
out
std
icebp
or
ret
stc
testb
jmp
sub
xor
cmpsb
daa
mov
jo
mov
pop
cmc
pop
repnz
clc
int3
jmp
xchg
add
sbb
pop
jle
in
sar
outsl
mov
cmp
mov
xor
cmp
add
push
faddl
pop
ss
mov
sub
mov
dec
push
outsl
mov
roll
es
jecxz
outsw
repnz
ror
sbb
cmp
mov
push
hlt
data16
add
push
mov
ja
jno
xlat
cltd
ljmp
mov
scas
ds
arpl
jbe
aam
lcall
jecxz
pop
ljmp
mov
popa
je
pop
outsl
inc
cmp
in
inc
mov
sbbb
mov
mov
pusha
mov
push
sbb
inc
add
loop,pn
inc
cmpsl
inc
sub
mov
push
ds
addr16
fsubr
mov
dec
or
leave
pop
loop
repz
pusha
ficompl
dec
bound
add
sbb
dec
xchg
add
rcrb
add
xor
fwait
insl
pop
jle
mov
mov
adc
rolb
add
fstpl
push
inc
inc
aad
idivb
test
sti
pop
push
shll
fidivrs
push
jg
dec
jecxz
adc
into
fstl
popa
mov
mov
rorl
jecxz
add
xchg
push
adc
adcl
test
jle
cltd
aas
adc
or
xchg
imul
fsubl
dec
dec
pop
stc
sbb
popf
mov
jae
xor
loope
push
ret
and
outsl
jge
jecxz
outsl
mov
inc
mov
mov
mov
xor
mov
out
add
jae
out
mov
sub
jbe
jb
daa
jl
lret
call
inc
sub
sbb
fildll
dec
out
data16
lret
movsl
inc
xor
rorl
push
shl
aam
adc
pushf
sti
pop
out
addb
loope
pop
mov
cs
xor
push
jg
xor
cmp
jg
iret
lock
lea
lods
loope
sbb
mov
pusha
subl
sub
lret
xchg
or
pushf
or
fcoml
lret
nop
popa
and
lcall
fildll
mov
sub
xchg
flds
push
fisttps
xchg
loop
leave
mov
fistpl
sub
lahf
mov
lods
icebp
sbb
jne
out
mov
int3
adc
and
fs
mov
cltd
nop
pop
add
xor
pop
repz
rol
jecxz
add
cmc
pop
mov
inc
aad
push
mov
add
sbb
cmp
mov
repnz
in
mov
fstpl
xor
aad
jnp
mov
dec
mov
dec
sbb
std
loop
dec
dec
push
adc
in
sbb
in
xor
repnz
pop
pop
in
mov
mov
mov
ds
out
ret
sub
adc
mov
jno
or
subl
jno
stos
pop
push
inc
sahf
out
push
mov
sar
out
sarb
jg
negl
ss
mov
hlt
int3
scas
jecxz
scas
add
xchg
push
sahf
mov
das
sbb
dec
sub
rclb
cltd
fldz
mov
jle
dec
subb
into
scas
into
arpl
pop
lods
pop
mov
fidivl
xor
pop
and
arpl
inc
lods
mov
addl
arpl
pusha
ret
inc
scas
sub
loopne
ljmp
into
sbb
ret
std
mov
pavgw
scas
lret
pop
out
and
imul
push
push
jmp
pop
inc
stos
mov
jmp
ret
inc
cmp
mov
fcmovnu
pop
das
je
mov
stos
fcom
mov
inc
cmp
push
sub
xchg
loop
negb
shrb
popa
sub
mov
inc
add
or
and
lcall
mov
jl
jmp
bound
mov
dec
xor
and
xchg
pop
push
mov
scas
in
pop
adc
dec
push
ret
fdivrp
sti
bound
inc
stc
push
aad
adc
pop
and
inc
sahf
cwtl
mov
xor
sub
pop
mov
mov
loope
call
sub
pop
cmp
in
mov
mov
jnp
rorl
lahf
dec
fildll
add
arpl
and
repz
mov
sbb
in
push
pop
ja
pop
sbb
mov
popf
xlat
fnstcw
pop
test
outsl
sub
scas
fisttpll
out
rcrl
call
inc
push
mov
shr
mov
and
cld
sub
push
cli
jb
mov
in
ljmp
xchg
or
mov
xchg
and
xor
rolb
and
jb
mov
jb
aas
xchg
fisubs
in
addb
jno
in
xor
ficomps
dec
rclb
movsl
paddusw
mov
and
mov
push
xor
pop
mov
add
cmpsl
dec
adc
jno
in
adcl
xor
or
aad
and
mov
bound
adc
scas
jl
stos
loop
jb
or
jo
jne
jle
std
push
jge
jl
dec
mov
or
aas
cld
loopne
out
push
sti
jae
insb
lcall
sarl
add
mov
sbb
mov
ja
aas
mov
cmp
push
addb
mov
or
sbb
outsl
jnp
xor
push
sub
or
cmpsl
jle
test
pop
nop
leave
mov
mov
push
ss
in
inc
mov
xchg
stos
xor
cmp
adc
je
jne
jb
out
and
clc
cltd
fbstp
jl
inc
rclb
push
dec
pop
shl
dec
fidivl
inc
aam
xor
xchg
into
push
push
loope
and
xchg
sar
jb
jb
repz
jb
in
loope
out
jg
movl
mov
into
int3
dec
jns
push
ljmp
mov
testb
xchg
add
adc
inc
test
loop
fnsave
fistpll
adc
sahf
pop
mov
mov
sbb
dec
add
jno
movsl
adc
in
addr16
jl
stos
cmp
dec
add
fucomp
push
js
shr
and
and
mov
les
imul
inc
mov
imul
jnp
mov
in
mov
testl
sbb
test
sub
cmp
ror
pusha
mov
lods
out
lahf
sub
push
sub
push
lock
cmp
aad
repnz
ret
dec
push
xchg
mov
popa
jno
mov
lods
xor
test
adc
inc
loopne
data16
cmp
sti
jo
loope
pop
lret
mov
pop
sbb
cmp
sub
inc
push
adc
test
xor
mov
mov
xchg
push
popf
jp
fnstsw
jmp
repz
inc
subb
cwtl
dec
mov
cmc
mov
xchg
inc
std
mov
repz
jae
cs
jae
sarb
jno
xchg
mov
int3
pop
adc
dec
lea
cmp
push
shll
xlat
xchg
push
lods
aas
fucomip
add
sub
test
jbe
add
ljmp
aas
sub
adc
repnz
inc
xchg
adc
jo
aas
sub
inc
lock
orb
xor
test
fs
push
sub
lahf
std
add
push
imul
lret
inc
push
ljmp
addr16
xchg
lret
das
lcall
repnz
loop
mov
pop
sbb
outsb
mov
addb
popa
stos
or
push
mov
shll
and
jge
call
cmp
jns
inc
inc
ds
arpl
mov
int3
bound
adcb
and
mov
in
pop
into
cli
cmp
mov
pop
scas
sti
push
ljmp
clts
or
inc
sub
outsb
or
push
ficoms
into
jbe
rol
fdivp
mov
mov
jmp
sub
imul
push
jns
aaa
dec
cmpsb
ds
leave
mov
fnstsw
sbb
push
stos
lods
sub
andl
jo
adc
pop
subb
loop
xor
bound
cmp
ds
sub
dec
call
fbstp
mov
jp
insb
or
mov
inc
sbb
imul
call
outsl
jl
dec
or
out
mov
xorb
pop
pop
mov
lahf
ljmp
cs
aam
mov
push
pushf
push
scas
rol
mov
out
test
mov
das
sub
jg
mov
mov
inc
shrb
pusha
mov
add
sub
jmp
imul
sbb
push
outsl
push
lret
ljmp
dec
dec
mov
push
mov
push
mov
adc
out
sbb
insb
fidivl
pop
sub
call
das
push
xchg
sub
orl
aam
scas
add
cmp
xor
bound
jno
out
test
sub
push
dec
insb
cmpb
gs
push
sti
mov
adc
push
xor
mov
adc
in
cli
enter
ljmp
call
loopne
bound
es
outsb
mov
xor
adc
pop
imul
xchg
xlat
cmp
xor
add
dec
jae
cmpsb
lret
xchg
outsb
pop
outsl
xchg
mov
dec
push
jmp
ljmp
adcl
test
fcmovnbe
jns
ss
aad
sub
lods
inc
roll
je
jb
mov
sub
aas
xor
sub
insl
cmp
fimull
iret
stos
mov
sbb
xor
jo
pop
sbb
lock
pop
call
push
cmp
and
mov
jo
add
fmuls
xor
mov
aaa
pop
loop
mov
pop
add
mov
fldl
or
imul
push
xchg
in
dec
pushl
xor
xor
imul
push
lcall
mov
xor
addr16
mov
sbb
mov
lret
call
cltd
lods
sti
xor
inc
ret
clc
inc
cmp
dec
pop
popa
scas
mov
mov
jg
sarl
adc
stc
cmp
mov
or
or
pop
mov
test
push
int3
and
or
inc
adcb
add
mov
negb
icebp
adc
xor
inc
push
sahf
pop
xor
pop
xor
and
mov
cmp
push
mov
xchg
or
pop
pop
in
sub
xchg
shl
add
out
adc
cs
jmp
outsl
out
mov
inc
mov
mov
es
xchg
shrl
push
jmp
repnz
popa
and
fadds
lret
fs
push
lcall
inc
push
xchg
mov
mov
jmp
aaa
jb
mov
scas
out
aad
lret
ljmp
lcall
ret
cmp
popa
pop
mov
es
test
jb
and
jmp
push
pop
push
sub
test
add
jg
hlt
je
and
ja
outsl
push
inc
dec
and
push
stc
push
addr16
sbb
jno
shlb
popf
mov
hlt
mov
dec
outsl
insl
lea
outsb
mov
add
add
popf
sbb
jmp
sbbb
aas
mov
jle
mov
cmp
std
popf
xorl
pusha
sub
fmul
inc
jne
and
xor
int3
sub
shlb
stos
and
pop
and
jno
mov
lock
mov
push
sub
loop
cld
push
push
sahf
lcall
jns
aas
loopne
push
subl
outsl
int
cmp
sub
inc
nop
mov
push
pop
iret
les
cwtl
in
pop
and
ljmp
cvtpi2ps
sub
dec
int
dec
sbbb
xlat
mov
pop
and
sub
mov
in
mov
sub
in
jecxz
stc
insb
sub
mov
add
pusha
inc
dec
fmull
add
adc
xsaves
xchg
fcoms
je
add
lock
rcr
in
mov
and
mov
jmp
pop
and
ss
jl
pop
dec
cmp
mov
fs
xchg
out
sbbl
mov
inc
mulb
xor
inc
mov
and
out
popf
mov
fsubs
insb
xchg
mov
dec
sub
push
inc
push
lret
mov
mov
outsl
xor
scas
add
jmp
iret
dec
mov
imul
sub
inc
add
and
inc
dec
pop
ficompl
ss
mov
ret
cmp
adc
in
gs
leave
sbb
arpl
pop
add
pop
dec
and
sub
lods
or
icebp
aam
push
int
jo
out
xor
and
push
mov
cmc
out
loopne
sub
outsb
jnp
sub
adc
push
loopne
and
lcall
fidivl
inc
dec
aad
fistps
inc
addb
jecxz
sbb
clc
jbe
add
or
rcrl
inc
jo
push
jl
repnz
aam
sar
fistpl
push
mov
jp
jo
es
ror
push
pop
inc
icebp
or
int3
adc
out
pop
gs
and
cmp
cltd
out
or
sbb
insb
xor
push
daa
imul
lcall
dec
aam
imul
push
ds
stos
cmp
push
int3
adc
jb
movsb
movsl
pop
int
or
pop
pop
mov
into
sbb
xchg
in
adc
testl
mov
or
xlat
mov
pop
dec
xor
repnz
outsl
ficomps
rcl
gs
clc
mov
bound
lcall
pop
adc
insb
fmull
into
lea
sub
ret
gs
out
lret
inc
mov
daa
data16
out
lret
pop
les
add
inc
xchg
mov
dec
repnz
add
dec
xor
shlb
xlat
ljmp
xor
cmp
sub
cmp
aam
gs
xchg
mov
outsl
jg
in
fwait
popa
cwtl
push
adc
mov
mov
jmp
push
scas
sub
loope
push
mov
add
and
stos
int3
repnz
xchg
or
pop
inc
xor
cmp
sub
pusha
ljmp
mov
mov
lahf
and
shlb
mov
jmp
subb
rorl
jno
fwait
mov
mov
and
dec
repnz
xchg
push
sub
mov
cmp
es
sub
jge
mov
cmpsl
in
xlat
fisttpll
mov
cmc
lret
sub
push
add
ja
and
dec
mov
das
cmp
mov
mov
popf
scas
testl
std
cmp
mov
int3
xchg
in
mov
fstpl
movsb
call
mov
push
or
jg
std
adc
stc
pop
sub
lock
fcomip
dec
sbb
mov
pop
add
enter
leave
mov
pop
paddsw
nop
add
mov
xchg
pusha
icebp
inc
shrl
popf
into
icebp
das
dec
add
fbld
cs
outsl
mov
fisubl
pop
fstl
xor
xchg
into
inc
xchg
sbb
out
sahf
and
push
lcall
lahf
dec
jno
outsl
stos
call
orb
test
lcall
pop
jnp
sbb
jae
sub
lds
insl
jns
xor
add
or
xorb
mov
cli
sbb
mov
sbb
sbb
pop
mov
or
push
out
daa
xor
out
pop
mov
inc
icebp
inc
cmp
repnz
sahf
sbb
sahf
das
loopne
or
inc
clc
sbb
lret
scas
ljmp
jno
cltd
int
sbb
sub
mov
push
inc
mov
dec
vpsrlvq
sbb
and
lea
insb
lods
mov
in
out
sub
fmulp
push
jg
arpl
mov
mov
pop
inc
add
add
popa
ja
mov
jp
xor
lods
mov
xor
and
push
std
mov
and
sbb
in
lcall
pop
cwtl
rcl
adc
lahf
test
stos
ret
repnz
jmp
dec
xchg
in
sub
mov
sbbl
incl
xor
addr16
mov
push
gs
jnp
mov
pop
xchg
rcrl
or
in
int3
adc
and
iret
cli
divl
sbb
push
dec
sub
out
fists
sub
or
mov
lahf
jae
or
icebp
xchg
xor
std
inc
test
aad
push
sbb
ret
rolb
cltd
into
xlat
lods
inc
pop
cmp
pushf
nop
sar
lock
lret
jb
push
or
sub
or
aam
sbb
ljmp
mov
pop
subb
jo
xor
xor
push
mov
cmp
leave
xor
cmp
insb
xor
inc
push
pop
lods
push
lcall
outsl
aas
sahf
addr16
mov
xchg
fisubl
mov
in
stos
scas
lods
popf
xchg
dec
lret
das
out
loopne
hlt
pop
mov
cmp
popa
xor
xchg
pusha
mov
shl
lret
int3
lret
je
xor
mov
addb
mov
pop
stc
divl
pop
and
cmc
jp
fwait
mov
ficompl
pop
jo
nop
jg
adc
ret
lock
fstpl
and
popa
jbe
cmpsb
sub
out
sbb
inc
push
dec
mov
loope
adc
imul
aam
mov
les
and
xor
roll
lods
dec
xchg
mov
out
cmpsl
insl
fisttpll
loop
shlb
out
out
repnz
lock
xor
lea
inc
sbb
cmp
xchg
pop
ficompl
in
jg
adc
xor
movsl
std
ss
testl
dec
sub
sub
add
fs
bound
in
sbb
mov
inc
adc
fnstsw
inc
sub
movsl
imul
push
jnp
call
in
int3
cmp
and
pop
std
in
popa
xor
sbb
mov
sbbb
xchg
pop
sub
stc
fs
call
and
ret
mov
push
mov
push
jge
enter
lret
jl
jecxz
dec
push
push
mov
inc
outsb
lock
xchg
xor
enter
jns
mov
sub
sbb
in
lods
push
xor
cmp
in
repnz
fiaddl
out
mov
adc
les
mov
push
and
inc
stc
add
addr16
sub
out
fidivrs
mov
mull
or
xchg
shrb
jb
pop
and
out
adc
mov
xchg
fisttps
data16
mov
lret
loop
mov
jno
fstpt
fstpl
jae
rorw
lods
dec
dec
cmp
into
ficomps
loop
scas
fstpt
adcb
and
dec
lsl
rcll
add
cmp
cld
rclb
sub
cwtl
std
and
lea
push
in
push
cwtl
mov
stc
cmpsb
subb
mov
push
lret
or
xlat
push
faddl
jg
adc
pop
sbb
cmp
mov
fidivs
inc
dec
add
mov
addr16
mov
in
or
mov
loopne
icebp
imul
sub
in
or
aas
fcmovu
es
nop
dec
fwait
push
jo
sar
sbb
fdivr
and
mov
mov
push
inc
pop
ja
or
sub
outsl
sub
xchg
repz
test
ret
push
ss
cmc
shlb
jb
jnp
out
and
or
inc
out
sarl
mov
fists
dec
fbstp
sub
push
loopne
adc
cmp
sub
ljmp
xchg
sub
add
insb
dec
stc
push
or
inc
xor
in
insl
pusha
and
stos
sbb
in
outsl
xchg
dec
bound
loopne
in
stc
sarl
cmp
outsl
orb
xorb
das
xchg
or
and
xchg
and
std
push
mov
jmp
or
adc
fistps
xor
adc
out
mov
push
xchg
inc
mov
pop
movsl
pusha
subl
lock
loop
lea
dec
xor
or
adc
mov
xchg
mov
sub
ss
pop
add
jle
jo
shrb
dec
fisubs
inc
jne
jae
cmp
imul
aam
sbb
testb
sub
xchg
sbb
imul
adc
xlat
sub
mull
mov
pop
imull
call
push
add
xor
cli
outsl
mov
jns
push
or
shr
ljmp
cmp
int
sbb
cmp
frstor
xor
ss
outsb
outsb
shl
xchg
popf
pusha
jl
mov
mov
xor
scas
es
sub
xor
faddl
xor
adc
fadds
rorb
idiv
sbb
dec
dec
cmp
and
dec
call
in
aam
fwait
loope
lods
rol
popf
xchg
jae
adc
sbb
and
inc
fstpt
movsb
scas
stc
in
and
and
jge
fisubs
lahf
jnp
cmp
std
sub
ret
mov
arpl
pop
push
push
dec
mov
movsl
inc
addb
sbb
mov
sbb
push
xor
jae
inc
std
lcall
call
icebp
xor
insl
or
pop
fistps
add
addl
ds
in
icebp
ret
das
or
outsb
jne
out
scas
out
adc
pop
xor
adc
inc
mov
icebp
or
imul
test
mov
es
jmp
lahf
add
fidivrs
outsb
pop
sub
and
shlb
mov
popf
push
mov
ljmp
adc
in
loop
popa
aam
into
jecxz
lds
pop
pop
mov
rorl
repnz
in
rep
and
mov
and
ja
lock
int
pop
outsl
and
xchg
xchg
shlb
dec
ret
divl
xchg
push
lahf
inc
dec
jne
sbb
ret
jb
xlat
lods
jae
cmc
out
popa
out
popa
or
xchg
inc
inc
sbb
and
jge
imul
lret
or
inc
push
xchg
pusha
in
movsb
aas
in
scas
mulb
andl
subl
dec
dec
and
or
add
or
add
and
rcrb
ficoml
jb
xchg
push
imul
popa
jl
in
xlat
xor
push
jb
scas
push
nop
fs
push
adc
ljmp
fwait
ss
add
and
mov
rolb
mov
movsl
fadd
sub
add
inc
fisttpl
pop
sarl
ret
stc
and
out
popf
sbb
sbb
ret
add
fbld
sub
imul
inc
and
ss
mov
add
imul
out
seto
loop
in
jp
mov
mov
sbbl
mov
lea
mov
loope
push
repnz
inc
mov
imul
ja
aas
jecxz
push
push
sub
loop
shlb
in
sbb
scas
ja
mov
xchg
sub
stc
outsb
or
inc
dec
push
and
popf
xor
cwtl
aaa
mov
xlat
mov
jnp
sub
loop
mov
push
sbbl
push
sbb
sub
sub
inc
xor
adc
das
mov
arpl
inc
jne
inc
adc
mov
jae
icebp
and
imul
push
cmpsb
imul
aad
mov
sahf
repz
and
xchg
mov
in
push
mov
fsubs
scas
addr16
loop
and
call
adc
mov
mov
and
call
fidivs
cmp
sbb
sbb
sub
lret
xor
enter
aam
push
push
inc
or
push
adc
int
inc
mov
cmc
fimull
xor
pushf
outsb
iret
stc
jno
addr16
out
adc
rcrb
jno
and
pop
sbb
and
jg
dec
fcmovnu
push
fs
imull
outsb
push
sub
arpl
ret
aam
xor
and
sub
stc
fcompl
ss
int
push
dec
in
mov
pop
jl
mov
or
int
add
cmp
mov
loopne
leave
adc
popf
or
xchg
adc
mov
sbb
fnsave
dec
lret
bound
lock
jno
test
les
dec
fists
sbb
out
xchg
jae
or
push
sbb
bound
sub
fisubrs
roll
cmp
sbb
lea
cmp
cmp
sahf
lahf
mov
ret
sbb
rolb
inc
outsb
xor
mov
shlb
mov
shrl
mov
in
orl
cmp
rorb
test
pop
push
aaa
in
xlat
jp
sbb
pop
jge
insb
sbb
push
inc
mov
movsl
pop
iret
mov
xchg
cmp
lahf
sub
test
out
outsl
fsts
push
loope
pop
xor
mov
sbb
bound
xor
push
imul
pop
outsl
inc
lods
adc
es
xlat
pop
or
jp
sub
xor
pusha
jmp
test
inc
xor
rorl
push
cmpsl
aaa
xor
sub
popf
shll
xor
xor
repnz
subl
jo
jns
push
fmuls
addr16
arpl
imul
out
popf
xor
sbb
cmp
mov
icebp
xor
jno
fwait
aad
push
jbe
xor
add
ds
and
sti
out
inc
inc
sahf
adc
cmp
dec
bnd
loop
in
adcb
sbb
ss
out
inc
shll
outsl
subl
mov
jle
push
add
or
mov
inc
int
xadd
pop
lret
hlt
xchg
xchg
popf
inc
imull
xchg
inc
rclb
sub
pop
xchg
inc
fisubrl
in
mov
ret
pop
push
loop
or
mov
mov
sub
imul
sbbl
ljmp
imul
cmp
inc
jge
sbb
mov
jne
out
ret
cmp
and
fiaddl
inc
jo
inc
aam
jbe
lahf
movsb
sbbl
cmp
xor
shl
pop
scas
adc
les
xchg
mov
addb
sub
jbe
inc
test
div
push
nop
sbb
jno
lds
rol
std
push
lahf
pop
xor
daa
cmp
mov
movsb
mov
fcmove
jmp
test
cs
dec
data16
loope
cld
scas
xchg
adc
mov
out
lcall
sbb
adc
lret
dec
cmp
icebp
mov
push
rcrb
ljmp
push
mov
outsb
sti
dec
fistps
bnd
xor
and
les
inc
xor
fidivs
jo
sbb
jb
and
inc
ja
enter
ss
lock
aad
push
xchg
or
out
aam
sbb
jmp
sbb
inc
add
punpckhbw
lret
cs
je
push
xor
in
in
adc
mov
xor
les
jns
jecxz
test
and
ret
aam
std
pop
add
insb
sub
sbb
xchg
insb
insl
enter
jbe
cmp
loop
mov
jno
dec
pop
imul
es
ja
dec
or
addb
cmpsb
not
mov
jge
push
push
mov
sub
imul
int3
adc
mov
cmp
cmpsb
mov
loope
dec
std
mov
outsl
mov
fnsave
shl
nopl
sbb
sub
shr
loop
push
xchg
adc
lahf
sahf
xchg
out
out
jg
iret
inc
ja
add
es
push
push
lcall
xor
scas
fidivrl
lea
mov
rolb
pusha
ret
push
jb,pt
and
sbb
mov
lcall
push
test
mov
inc
daa
out
dec
ds
cmp
loop
or
cli
pop
mov
jmp
fisubrs
jle
in
or
mov
jmp
push
out
rcr
icebp
lods
push
mov
lahf
loopne
xor
mov
mov
mov
fsubrl
xchg
mov
sbb
push
mov
fs
out
fwait
mov
mov
pop
and
xchg
xor
aam
loope
stos
or
stc
mov
dec
adc
pop
add
lahf
cwtl
dec
loope
xor
mov
out
jnp
sahf
jb
outsl
repnz
andb
mov
sub
adc
or
lock
out
push
lea
cs
lret
ss
out
sub
xor
lods
pop
pop
jg
ret
push
call
popf
pop
xchg
and
adc
iret
xor
mov
das
mov
mov
adc
shll
int3
or
insb
push
adc
pop
jno
into
fs
mov
test
xor
in
add
lret
in
lock
test
sahf
xlat
xchg
or
lea
push
mov
lea
and
mov
mov
clc
ja
adc
inc
in
push
push
cmp
stos
imul
andl
sbb
xor
lcall
mov
sti
jmp
push
sti
fadds
xchg
cmp
jmp
sub
xor
ja
add
notb
in
shrb
imul
and
pop
orl
sti
push
ljmp
add
pop
jo
popa
dec
add
inc
sarb
lock
adc
and
push
test
dec
out
sub
mov
test
nop
xchg
mov
sub
xor
dec
mov
pop
adc
mov
arpl
inc
mov
es
xchg
adc
sbb
rcrl
enter
mov
and
xchg
pop
andl
mov
dec
push
sub
mov
test
lods
pop
jns
mov
repnz
or
and
outsb
pop
sub
and
std
adc
pop
leave
loop
push
gs
sub
nop
and
jecxz
push
into
sbb
imul
jecxz
mov
or
adc
lret
insb
sbb
and
test
mov
adc
mov
fbld
adc
add
iret
mov
jge
cmp
in
sub
xor
in
test
mov
leave
lret
xchg
pop
in
jne
insl
dec
sbb
test
lods
jbe
addl
lods
mov
mov
dec
xor
push
fstps
rorl
mov
sub
aam
mov
dec
inc
or
repnz
sub
popa
cmpsb
jle
leave
mov
mov
bound
add
mov
mov
mov
and
push
pusha
xchg
and
adc
mov
jno
in
sub
or
in
cli
bound
and
push
push
repnz
sbb
in
dec
stc
push
jno
in
jg
sub
xchg
jns
pop
and
mov
xchg
pop
daa
and
cmp
sub
jmp
imul
pop
cmp
xchg
jns
cmp
xor
adc
fs
and
stos
add
in
out
fsqrt
leave
fucomp
fiadds
bound
pop
fists
jno
add
xchg
jb
pop
sub
and
cs
or
dec
xlat
movsl
lock
rclb
xor
sarl
and
cmpsb
outsl
mov
imul
aad
imul
aad
movsl
pop
push
es
and
push
fwait
loope
sbb
lods
add
cs
add
push
lea
adc
arpl
loop
xorl
sbb
jne
movsb
jmp
mov
sub
lret
fldcw
stc
gs
adc
dec
xchg
clc
loopne
shlb
and
inc
sub
andb
sbb
mov
rolb
push
add
inc
fimull
push
clc
inc
stc
mov
repz
xor
lahf
fidivrl
imul
xlat
cltd
jb
jp
xlat
jmp
mov
xor
fs
insl
das
ror
ret
inc
push
and
addl
imul
add
cmp
dec
jmp
xor
cs
icebp
cmp
outsb
iret
out
pushf
es
in
in
jge
movsb
sarl
mov
lret
dec
add
idiv
data16
push
and
xchg
and
inc
pop
mov
pop
pop
sub
in
mov
mov
pop
and
repz
lock
out
dec
or
jno
inc
shrl
push
xor
xchg
sub
addr16
mov
int3
mov
mov
and
movsl
loopne
sub
jne
mov
jl
inc
testb
lret
outsb
xor
dec
loop
sahf
jb
push
fs
dec
loop
push
mov
push
pop
addr16
sub
lcall
sub
pop
movsb
xchg
sub
repnz
mov
mov
daa
dec
jg
or
in
icebp
jl
out
pusha
int3
cmp
dec
fistpl
add
es
shl
push
mov
shlb
mov
out
roll
lea
ljmp
mov
mov
pop
xchg
mov
sti
xchg
inc
cli
push
int3
xor
imull
es
sbbl
fwait
mov
pop
lahf
push
hlt
or
das
adc
add
sbb
push
jno
xor
cmp
outsl
dec
fcomp
xchg
xor
cmpb
jae
insb
outsb
test
sub
jno
outsb
xchg
ljmp
test
leave
in
ss
lret
stos
addb
mov
xor
mov
aam
add
mov
mov
or
or
push
mov
or
push
add
push
jns
sub
xor
push
jns
jno
mov
mov
pusha
xor
push
lods
sarl
sbb
rclb
mov
pop
dec
in
or
clc
jp
mov
mov
mov
mov
loope
xor
jb
andb
outsl
add
mov
or
outsl
or
and
outsl
repnz
sbb
push
inc
xchg
imul
cmpsl
movsl
and
sub
insl
jmp
pop
insb
xor
repz
and
sbb
cld
cmp
fs
data16
ss
and
push
rorl
mov
jo
mov
loopne
loope
addr16
paddb
mov
mov
insl
push
das
mulb
or
xor
cmpsl
sub
daa
sbb
clc
xchg
sub
ljmp
mov
stc
mov
adc
mov
pushf
or
dec
pop
sub
mov
adc
fwait
test
ljmp
and
push
aas
inc
add
and
inc
dec
dec
pop
pop
sub
loop
push
lret
push
and
popf
cmc
sub
sub
jno
lea
jbe
imul
inc
sbb
dec
test
in
fistpl
or
push
int3
aad
adc
dec
scas
das
mov
subb
cmpsl
push
lds
call
out
xchg
icebp
and
adc
push
cmp
xor
mov
adc
sbb
mov
in
lods
outsb
push
neg
sarl
cltd
push
xchg
inc
push
out
ficompl
adc
push
fcmovbe
repnz
into
dec
iret
shlb
mov
add
addr16
mov
cmp
jnp
xor
push
out
test
fidivl
pop
jo
dec
or
or
mov
das
push
mov
fiaddl
outsl
xchg
je
mov
xor
enter
int
add
push
inc
xchg
jg
jno
add
mov
int3
out
gs
mov
rep
push
dec
lcall
lahf
dec
add
sti
inc
in
add
mov
dec
pop
dec
mov
or
push
push
int3
loop
pusha
fdivrp
stos
jecxz
and
nop
mov
push
dec
xchg
jbe
xor
int3
sbb
inc
shrb
sub
icebp
test
stos
orb
xor
loopne
jle
mov
fnstsw
clc
js
es
fildll
imul
pusha
push
jb
inc
loop
adc
mov
cmp
dec
fs
notb
dec
xchg
jo
mov
cmp
mov
mov
pop
cmp
into
sub
sbb
shrb
push
push
pop
pop
sbb
repnz
fstp
add
in
outsb
add
scas
mov
mov
and
adc
push
int3
cltd
xor
cmpsb
jbe
mov
lods
xchg
movsb
stc
popa
scas
pusha
inc
mov
mov
sbb
aad
shlb
mov
and
outsb
dec
pushf
outsb
push
add
pop
jecxz
add
imull
gs
out
adc
adc
in
and
addr16
xchg
testb
adc
test
fidivl
cmp
push
jnp
lods
rorl
sbb
in
aam
push
xor
and
mov
das
outsb
fimuls
movsb
in
loopne
mov
sbb
inc
repz
add
jnp
sbb
daa
int3
movsb
mov
insl
xorb
add
insl
mov
in
insb
sbb
mov
cwtl
icebp
sbb
dec
pop
inc
push
lcall
mul
mov
fdivs
xchg
cwtl
ljmp
sti
push
xchg
lods
sbb
jno
jns
cli
pop
lods
and
cmc
shl
cmp
scas
adcl
sbb
movsl
dec
outsb
imul
inc
mov
adc
adc
inc
pop
mov
mov
int3
push
in
sub
lret
jbe
icebp
notb
push
repnz
stos
add
pop
push
inc
icebp
xor
scas
pop
jae
push
pop
jnp
das
or
mov
insb
out
dec
pushf
sub
lods
in
inc
jg
stc
and
loope
std
les
int3
xor
mov
test
int
ret
in
mov
sbb
popa
rcll
xchg
sub
jb
inc
xchg
out
jb
mov
push
in
popa
push
mov
ja
movsl
mov
xchg
push
loope
les
out
loop
and
repnz
data16
es
sbb
ljmp
aad
pop
sbb
fstl
and
push
repnz
mov
push
bnd
ds
outsl
ja
pop
sub
or
repnz
mov
lock
or
mov
mov
das
pop
add
repnz
jb
scas
lcall
adc
mov
ds
loope
push
aas
mov
repnz
inc
shl
push
inc
mov
fs
sub
inc
scas
in
jb
lods
cltd
stos
pusha
xor
sub
xor
jmp
mov
stos
inc
xor
push
jecxz
arpl
lahf
call
pusha
ljmp
dec
push
fnstenv
pusha
jmp
cs
imul
dec
pusha
call
mov
mov
adc
pop
loop
fildll
dec
push
add
cmp
mov
rclb
push
pusha
outsl
push
mov
shl
mov
filds
push
xor
mov
stos
outsl
icebp
jecxz
push
inc
jno
mov
insb
push
jmp
imul
jmp
sbb
jo
addr16
outsb
or
dec
mov
fiadds
push
sarb
cmpb
cwtl
daa
rcl
pop
inc
push
fwait
inc
data16
push
repnz
test
or
mov
push
dec
mov
push
ss
cmp
mov
adcb
adc
dec
add
arpl
dec
iret
pop
mov
outsb
xchg
loope
add
jmp
jno
je
pusha
push
jae
jb
addl
cmp
jecxz
fildll
dec
inc
mov
jg
pop
loope
repnz
adc
scas
push
xchg
nop
mov
push
mov
mov
gs
lcall
pop
mov
stos
movsb
pop
call
mov
loop
rclb
pop
jb
fdivl
loop
shlb
push
lcall
and
cltd
or
cmc
in
hlt
inc
pop
int
fs
push
xchg
push
fcmove
negb
mov
or
out
ret
fstpt
dec
sahf
add
xor
rclb
mov
mov
xchg
fsub
and
mov
pop
imul
mov
xchg
xchg
enter
cmpsl
mov
pop
add
dec
cmp
imul
arpl
adc
xchg
sahf
icebp
push
aad
adc
xchg
inc
aaa
rolb
scas
xchg
sub
push
jp
push
das
sbb
dec
into
jo
pop
scas
shrb
mov
lret
jmp
mov
repnz
out
jb
rorb
sbb
jae
pop
cmp
out
lcall
pop
mov
divl
subb
jp
imul
jo
sarl
repz
jle
lret
cmp
loope
sti
inc
cmp
arpl
mov
loope
bnd
addr16
add
or
inc
adcl
jp
mov
jno
xchg
mov
fdivrl
cltd
ds
xchg
out
iret
js
xor
ficoml
jecxz
stos
call
scas
sbb
bound
xchg
imul
sti
add
xor
fistpll
or
in
fsubrs
dec
movl
mov
xor
push
add
push
cmpsl
inc
push
lret
inc
dec
mov
out
std
push
inc
repz
ja
xchg
jp
icebp
xor
jo
lds
fbld
push
sbb
int3
scas
push
inc
in
out
push
add
push
scas
xchg
and
pop
arpl
icebp
outsl
jmp
loopne
push
arpl
in
jle
stc
rcr
jnp
popf
dec
imul
push
in
and
mov
roll
std
es
add
xor
sub
ficomps
xchg
dec
std
xchg
or
add
outsb
test
xor
cmc
push
pop
mov
sarl
or
out
out
leave
or
sarb
iret
or
cmpsl
das
jle
adc
mov
test
xor
xor
jbe
xor
cwtl
cs
shlb
orl
notb
aam
pop
jmp
jb
out
and
jb
add
movsb
dec
imul
xchg
mov
stos
je
mov
xchg
mov
cmp
jb
adc
dec
out
push
cmpsb
repz
imul
flds
cmp
sbb
in
mov
mov
mov
pop
loope
pop
outsl
jp
ficoml
fsubrs
sbbl
movsb
lock
sbb
aad
pop
mull
add
mov
adc
and
mov
xchg
flds
mov
jb
aam
rclb
rcr
stos
dec
push
sti
push
dec
pop
stos
push
inc
int3
xchg
sub
dec
loop
call
dec
lret
stos
std
jg
cmovp
out
xor
in
repz
shlb
repnz
mov
pop
in
ret
adc
outsb
mov
sub
lcall
inc
addr16
lret
movsb
bound
jecxz
push
sbbl
int3
lods
xor
mov
inc
mov
data16
xorl
aam
data16
pop
sbb
cld
out
lods
sahf
or
sub
dec
push
pop
mov
test
jmp
mov
loopne
jnp
leave
jne
jge
fisubs
int3
or
xchg
ljmp
je
xor
xchg
lock
outsb
jp
jle
scas
mov
inc
lea
sub
rcl
inc
lods
int
cld
ljmp
out
les
lret
and
jb
ljmp
cltd
scas
leave
push
sbb
mov
sub
pusha
xor
mov
cmpsb
sahf
adc
or
lock
ss
push
sub
stos
xchg
push
mov
stos
jl
add
lods
cli
in
adc
push
adc
aam
push
add
push
ss
adc
ds
mov
push
bnd
pop
push
jno
insb
mulb
hlt
dec
jne
jae
xchg
daa
cmpb
inc
mov
scas
sar
mov
ljmp
fidivrl
pop
out
ret
push
mov
lcall
je
roll
inc
aam
test
sarb
inc
jl
cmc
xor
out
and
test
sub
inc
add
add
add
int3
popf
and
pop
jae
repnz
outsl
mov
stc
inc
stos
jge
imul
lock
loope
xlat
leave
sti
aam
pushf
push
mov
add
pop
ds
push
inc
in
dec
decb
pop
subl
lock
and
dec
pop
popa
inc
sbb
fisubrs
loopne
cmpb
fistpll
xchg
jb
add
jecxz
xor
mov
xchg
insl
mov
xlat
jle
jb
cwtl
mov
lret
jmp
int3
imul
clc
clc
loop
lret
pop
mov
xor
sub
pop
icebp
xor
dec
push
ljmp
cmpsl
shlb
inc
sbb
xchg
adc
sbb
outsb
pusha
lds
mov
sub
xchg
dec
loopne
jge
fcmovne
loop
push
ret
lea
das
in
xchg
jno
jp
cmp
cmp
inc
inc
lret
clc
pusha
repz
mov
das
add
shlb
mov
imul
adc
push
sub
xchg
cs
jne
test
dec
repnz
mov
and
mov
ss
ds
aam
aas
scas
and
andl
cmp
jecxz
jmp
out
into
ljmp
mov
xor
cmp
push
sub
test
xor
dec
sub
out
jecxz
aas
js
mov
push
xor
shr
and
push
mov
mov
fnstcw
dec
mov
fldcw
subl
pop
das
push
icebp
add
cs
pusha
roll
xor
jb,pn
mov
inc
mov
dec
scas
rolb
ss
loop
les
in
mov
out
push
ret
out
jo
in
ficomps
pushf
inc
in
pop
inc
int3
movsb
aam
xor
mov
rclb
pushl
enter
push
adc
and
xchg
xor
sbb
insl
adc
push
xchg
xor
cmpsl
repz
lret
aas
mov
or
ret
in
sar
cld
mov
insb
push
loopne
lcall
mov
push
aad
inc
and
cs
lahf
repnz
dec
loop
std
movsl
mov
jecxz
pop
in
pop
mov
jmp
add
jno
dec
xchg
mov
lahf
pop
imul
mov
xor
pop
add
mov
adc
and
xchg
popf
mov
adc
adc
xor
and
and
adc
mov
data16
sub
repnz
call
sub
std
dec
imull
ja
jmp
test
xchg
jbe
fcmovnbe
dec
repnz
addb
pop
dec
lds
rcl
jmp
jb
xchg
or
aad
and
sub
aad
fs
mov
and
dec
std
mov
shl
cmp
out
mov
lea
loopne
fstpl
jecxz
pop
enter
fdivrl
mov
jno
sub
add
pusha
idiv
mov
pop
inc
shrb
mov
int
sahf
cmpsl
jmp
int3
inc
add
cmp
fsubrs
lahf
mov
popf
adc
ss
inc
xchg
sbb
adc
add
push
dec
xlat
xorl
in
xor
push
js
push
mov
pop
pop
ffreep
lock
fisubl
dec
cmp
loopne
inc
push
jb
fiadds
sub
cmpsl
ss
sahf
icebp
push
in
xor
push
or
fwait
out
insb
add
mov
and
loop
xchg
fbstp
into
test
fidivrl
popf
lea
add
in
shrb
mov
mov
ret
xchg
call
daa
imul
mov
pop
subl
and
bound
out
mov
fdivrp
jmp
dec
out
xor
mov
inc
lock
inc
and
fwait
or
in
xor
xchg
lock
adc
xor
mov
sbb
cli
jle
cwtl
in
jnp
mov
sbb
mov
push
insl
inc
mov
add
stc
jg
inc
outsl
gs
mov
push
xor
jne
adc
sub
sub
sub
outsb
sbb
das
nop
fiadds
aaa
outsl
fwait
int
in
outsl
sbb
out
jg
data16
jns
add
fmuls
lcall
push
cmpsb
daa
int
js
mov
out
imul
ret
aam
lock
adc
lock
cmp
sbb
cmp
aad
rolb
cmp
sub
in
in
mov
out
push
xor
sub
testb
rclb
or
icebp
push
lret
push
in
ljmp
ficomps
sarb
ja
push
jae
pop
mov
sub
xor
sub
lods
loopne
push
int
fisubl
xor
jb
out
dec
scas
mov
mov
inc
jmp
and
adc
subb
ja
cld
imul
sub
dec
xchg
adc
mov
mov
cld
cmp
leave
jo
rcll
xor
ja
hlt
pop
cmpsb
pusha
popa
icebp
aam
outsb
add
push
cli
cltd
push
ss
dec
sub
sub
inc
es
outsl
mov
and
jge
cli
and
xchg
pop
and
dec
pop
iret
adc
push
ret
push
mov
not
ljmp
daa
add
aas
push
es
rcrl
lret
dec
inc
pop
adc
xor
gs
or
loopne
and
jnp
lahf
dec
shl
and
sub
loop
xor
mov
filds
aam
xor
cmp
sub
pop
aaa
int
mov
repnz
and
add
sub
push
ret
inc
add
divb
hlt
dec
adc
xor
sti
push
xchg
add
out
mov
cmp
push
aam
sub
test
jmp
inc
dec
push
repz
aad
mov
push
mov
sub
jae
outsl
pop
in
xor
enter
icebp
bound
and
sarb
mov
test
loopne
and
xor
std
imul
jb
or
test
cmp
aas
mov
fs
cmp
sarb
movsb
xor
xor
loop
xor
xchg
inc
pop
pop
mov
pop
add
xor
xor
lock
mov
outsb
mov
sub
adc
imul
add
pop
movsl
push
adc
and
daa
mov
xchg
stos
dec
mov
mov
fs
cld
mov
ss
iret
adc
jmp
dec
add
nop
adc
shrb
pop
fbld
lret
or
add
aam
enter
pop
inc
mov
xchg
jmp
decl
add
jnp
adcl
lods
cmp
bound
adc
mov
push
or
stc
jle
pop
cmp
push
push
lods
mov
mov
ficomps
out
jge
add
int
push
add
mov
lahf
sub
scas
and
mov
sbb
pop
mov
scas
fcmovbe
outsb
mov
dec
sbbb
mov
rolb
icebp
fadd
imul
add
test
jne
ret
lods
lock
mov
into
fnstsw
and
adc
out
inc
xor
lahf
mov
sub
mov
pop
inc
sbb
repnz
and
sbb
jmp
push
in
andl
push
shrl
cld
in
stos
or
mov
jg
cli
push
sbb
outsl
xor
inc
inc
mov
dec
cmpsl
loope
mov
daa
cli
mov
pop
es
xor
xchg
and
out
iret
push
mov
push
mov
sub
xchg
jbe
push
fisubrl
xchg
sub
xchg
cmp
outsb
inc
adc
out
outsl
inc
mov
lret
adcb
push
aaa
imul
push
icebp
pop
and
addr16
mov
cmp
cmpsl
jo
cmp
xlat
add
fiaddl
xchg
repnz
outsl
mov
pop
stos
mov
mov
fwait
sub
pop
in
outsl
rcl
jecxz
out
je
pop
jp
mov
pop
shll
bound
pop
adc
sub
xchg
dec
add
inc
loop
inc
cmc
add
cmpsb
mov
mov
outsl
pop
sub
jns
sub
out
fwait
push
pop
js
dec
data16
sub
lcall
int
fs
push
push
cmp
outsl
push
push
iret
xor
mov
lods
lahf
roll
adc
inc
mov
push
loop
xor
out
popa
das
adc
call
mov
std
cmp
sbb
push
add
ficoms
lret
add
sbb
gs
dec
or
xor
in
fistpll
insl
or
scas
xor
lods
aam
jnp
cmp
push
and
das
icebp
rcr
lods
call
rcl
and
cmp
sub
pop
fistl
hlt
mov
out
xchg
dec
in
xor
sbb
in
mov
push
lret
push
imul
inc
or
outsl
xor
pop
xor
popf
cs
mov
cmp
pop
scas
push
mov
dec
sysret
mov
int
mov
in
pop
xchg
jbe
mov
testl
adc
std
ljmp
push
push
ja
dec
filds
xor
xor
inc
or
adcb
mov
jp
sub
es
mov
mov
xchg
add
cli
dec
out
sbb
sbb
mov
out
mulb
sub
sub
xchg
sbb
icebp
scas
jmp
loope
cld
lahf
pop
xchg
es
add
mov
outsl
rorb
repnz
test
mov
dec
sub
push
imul
pop
je
jae
cmc
dec
in
pop
pop
pop
push
mov
test
xor
pop
fildll
sbb
icebp
ja
or
mov
and
push
xor
sub
out
push
lock
lahf
push
push
lret
mov
and
mov
and
addr16
sub
icebp
into
jb
sub
ds
fucom
loopne
pushf
movsl
adc
outsb
inc
int3
in
in
xor
fs
sbb
push
push
xchg
xor
cs
push
repnz
pop
out
insb
filds
iret
push
mov
mull
in
es
imul
leave
inc
les
fisubrs
mov
fisubs
outsb
pop
icebp
lods
pop
in
idivl
and
arpl
xchg
inc
sbb
lds
out
imul
adc
fidivrs
popa
dec
push
and
faddl
aas
inc
sbb
pop
jl
lret
cmp
add
add
insb
cmp
scas
dec
outsl
sahf
or
repnz
and
sub
and
jge
xor
push
jno
enter
push
std
push
insl
daa
scas
jo
jp
add
lahf
nop
jo
ret
out
xchg
xor
shll
fildl
pop
cmp
neg
lock
mov
loop
sbb
das
add
adc
adc
jns
jae
xchg
cltd
test
sbb
shrl
lds
scas
out
push
pop
mov
or
imul
push
mov
sbb
sbb
sbb
insl
inc
xor
dec
mov
sbb
add
lahf
push
sbb
bound
lea
xor
repnz
mov
lods
lret
jmp
push
mov
push
mov
popf
pop
push
pop
adc
orb
push
in
movsl
outsb
insl
mov
sub
addr16
inc
out
cs
stos
adc
pop
lods
lea
insb
dec
movsb
pop
push
lock
bound
fsts
inc
leave
bound
push
xor
rcrb
test
in
fisttps
adc
sbb
xor
rcrl
mov
push
mov
push
cmc
pop
inc
sub
xchg
push
pop
dec
sub
mov
inc
rolb
push
neg
dec
jb
jge
lret
fcoms
pop
push
pop
mov
cmp
fidivrl
pop
push
fbld
xor
pop
inc
pop
sti
mov
ljmp
jno
outsb
mov
push
sub
pop
inc
or
and
xor
pop
iret
or
mov
mov
dec
jb
addr16
out
fcmovnbe
fldenv
lods
fldl
cwtl
jp
inc
dec
mov
sub
inc
ret
test
mov
dec
dec
adc
mov
pop
sbb
test
mov
or
push
dec
pop
mov
dec
xor
in
fists
dec
lret
scas
in
add
or
adc
pop
jl
inc
loope
dec
mov
inc
leave
adcb
jecxz
mov
orb
mov
in
fnstcw
popa
xor
xchg
jnp
std
enterw
addb
push
jge
xlat
jno
mov
popa
in
ficoml
jge
push
imul
mov
and
in
insl
testl
and
mov
jno
insb
es
adc
xchg
loope
gs
add
outsb
das
pop
enter
sahf
jns
lret
fildll
add
inc
dec
push
add
sbbl
je
push
flds
inc
dec
mov
vmovss
sub
sbb
in
into
cmp
jg
in
out
lcall
lahf
mov
ja
push
std
mov
insb
jno
jmp
xor
fldenv
inc
fwait
scas
clc
ja
cmp
cwtl
pop
xchg
pop
push
xchg
je
sub
in
or
dec
and
push
mov
rcr
pop
sti
rcr
lret
sbb
pop
outsb
inc
mov
repnz
adc
rclb
mov
stos
xor
xchg
and
dec
mov
roll
call
popa
in
outsb
aas
popf
adc
insl
sub
add
dec
scas
mov
mov
dec
repnz
sub
insb
es
inc
mov
pop
pushf
cmc
pop
or
mov
das
cmp
out
or
loope
pop
loop
out
push
mov
jno
inc
cmpl
push
in
pop
mov
data16
repnz
or
mov
out
sbb
cmp
nop
outsl
or
fisttpl
cltd
int
mov
jge
jne
push
rcrb
addr16
push
lahf
stos
sub
push
sbb
push
lock
mov
push
xor
out
shl
dec
popa
call
ffree
ss
adc
xor
fwait
and
fst
or
insb
jmp
loope
stos
xor
inc
push
xor
in
pop
mov
xor
into
sahf
test
sbb
jbe
frstor
mov
cmp
sahf
sbb
mov
or
dec
xor
cmovle
or
mov
imul
jnp
rdtsc
stos
imul
jno
ljmp
jo
lock
sbb
test
mov
out
ficoms
xor
push
sbb
scas
adc
add
jp
popa
call
push
jns
bound
jno
ret
adc
sbb
bnd
xor
pop
push
sub
fidivrs
mov
out
inc
imul
cmp
out
pop
in
icebp
scas
mov
pop
repz
repnz
xchg
sub
pop
icebp
jle
sub
das
dec
push
loopne
pop
sbb
or
mov
or
shr
mov
pop
sub
sbb
int3
mov
in
addr16
or
dec
jp
fdivrl
data16
dec
dec
xchg
and
sub
pop
cmp
loope
adc
or
mov
cs
pop
xchg
lret
push
leave
lahf
and
mov
dec
sub
mov
dec
mov
mov
xchg
sub
inc
adc
xor
sub
fstps
lods
aaa
inc
scas
xor
ljmp
xor
mov
int
dec
es
fidivs
iret
cmp
push
push
adc
inc
jb
mov
mov
pop
mov
push
jo
std
sub
outsl
sar
pop
jns
jno
jno
repz
push
loopne
dec
stos
xor
addb
adc
mov
ss
inc
jb
push
ljmp
push
add
out
fbstp
in
fwait
out
mov
out
scas
push
cli
ljmp
jecxz
lret
data16
out
inc
add
out
sub
adc
aad
cmp
ljmp
insb
xchg
es
sahf
bound
mov
mov
push
call
inc
incl
rclb
sub
scas
shlb
int
and
mov
xor
inc
ss
jmp
xor
push
mov
sub
mov
inc
cmc
jmp
dec
jge
out
inc
and
lahf
push
fidivs
out
push
sbb
loope
push
lret
aaa
test
mov
jb
dec
add
jbe
out
outsb
xchg
arpl
or
add
in
xor
sub
mov
mov
scas
imul
push
iret
repz
jle
bound
xchg
rcll
adc
mov
inc
push
rcll
test
pusha
ficoml
xor
lret
adc
out
xchg
aad
rclb
sub
adc
inc
push
inc
test
mov
or
push
jb
sbb
inc
scas
in
outsb
inc
dec
sahf
enter
outsb
inc
xchg
inc
out
push
sbb
imul
sbb
cmpsl
inc
fimuls
lahf
aaa
push
xchg
adcb
dec
loop
add
pop
lods
ret
loopne
xchg
push
jb
in
in
xor
pop
inc
mov
push
out
ljmp
fsubr
movsb
je
lahf
lret
scas
push
hlt
push
decl
or
loope
stc
pop
jge
inc
testb
out
shll
call
inc
das
cmp
sub
push
ftst
push
xchg
call
fists
cmp
shrb
outsl
sbbl
inc
aam
loopne
mov
mov
mov
sbb
aam
dec
test
lret
mov
dec
pop
dec
mov
add
in
outsl
loope
mov
sub
ret
mov
loope
imul
xlat
nop
es
mov
or
enter
scas
jno
jmp
sub
aas
inc
xchg
inc
or
inc
lea
mov
adc
pop
lcall
sbb
mov
outsb
or
pop
inc
and
lods
orl
jmp
jns
xchg
ffreep
out
jo
gs
outsl
orl
jo
jb
xor
lahf
mov
cmpsb
rcr
lret
call
outsb
fisubrl
mov
mov
lcall
push
testb
loopne
in
insb
jo
int3
mov
pop
shrl
or
mov
subb
pop
movsl
xchg
mov
adc
cmp
aaa
sub
push
dec
ljmp
lret
jo
or
xor
or
or
out
ret
sub
popl
xor
lahf
out
sbb
sub
xor
pop
sub
sbb
sbb
fincstp
push
and
or
sbb
dec
jecxz
sub
mov
mov
pusha
fisubs
or
stos
arpl
mov
sub
imul
cltd
jb
fs
adcl
pop
fs
pop
in
outsb
fmull
enter
inc
sbb
xor
jl
outsl
jle
fs
dec
in
aas
sbbl
rorl
jo
testb
in
sub
sarb
sbb
or
outsl
lods
shrl
push
mov
in
add
icebp
inc
cmp
outsb
stos
xlat
and
push
data16
xlat
fidivs
mov
sbb
divl
jle
sti
popf
jo
out
ljmp
jb
and
cmpsb
ficoml
or
pop
mov
lcall
push
xchg
test
mov
cs
lock
out
mov
dec
jbe
and
sbb
push
cld
repz
pop
push
inc
adc
rcll
mulb
addr16
aas
fcmovnbe
mov
sbb
inc
repnz
data16
scas
sub
repnz
mov
pop
out
in
xor
sbb
loope
rep
cmc
jno
sub
outsb
xchg
ja
add
add
xchg
insb
inc
inc
in
repz
popf
repnz
and
fs
pop
and
jae
lahf
jo
mov
outsb
jg
jb
dec
imul
out
out
lea
push
mov
mov
sti
inc
cltd
pop
push
jg
out
dec
lock
and
imul
inc
inc
fstpl
mov
fs
addr16
test
out
out
pop
xlat
lock
xchg
aaa
repz
lods
lock
outsl
sbb
or
adcl
xchg
fidivs
sub
rol
inc
xchg
or
mov
dec
push
mov
ss
into
test
je
icebp
jae
lods
push
pop
iret
dec
xor
inc
sub
fsubrs
push
ret
pop
ficoms
inc
out
xor
and
out
insl
bnd
and
mov
xor
push
or
outsl
imul
ficomps
gs
xchg
pop
ja
pop
dec
pusha
out
fisttpll
push
pop
lods
es
sbb
lret
adc
add
inc
mov
pop
jno
popa
int3
stos
push
jae
repnz
das
add
repnz
push
out
cmp
outsl
xchg
jecxz
sbb
pop
sub
outsl
in
outsb
sub
sarb
das
sbb
mov
cs
ret
rcll
hlt
or
out
push
mov
jb
inc
push
or
bound
or
sbb
ss
xchg
es
dec
aas
push
lds
bound
inc
lea
dec
jmp
fs
or
scas
les
mov
outsl
cmpsl
out
test
outsl
push
mov
jge
add
lds
and
ret
cltd
pop
dec
inc
push
push
cmp
callw
mov
outsb
sub
test
test
sub
cs
push
dec
pop
cmp
iret
mov
test
jmp
xchg
ljmp
push
rcll
pop
mov
sbb
imul
sub
sbb
and
inc
pop
ljmp
inc
pop
inc
and
mov
jb
sbb
out
test
mov
jae
adc
stos
or
mov
fsubs
outsl
outsb
sub
xor
jb
inc
jns
push
icebp
pusha
mov
dec
insl
sahf
mov
xchg
jge
pop
jmp
add
rclb
jb
pusha
sbb
out
xchg
adc
in
adc
insb
fisubl
add
shlb
adc
xor
or
adc
bound
push
bound
and
bound
es
mov
xor
xchg
sbb
push
ret
cs
je
xchg
xchg
jns
adc
lods
sbb
dec
insl
loop
mov
jno
in
bnd
push
orb
dec
jb
mov
jb
ljmp
pusha
sub
in
pop
sbb
inc
jg
jmp
repnz
push
movsb
dec
in
testl
and
shlb
adc
cmpb
cmpl
mov
adc
lret
push
inc
inc
mov
xorl
mov
xchg
mov
fwait
in
pop
push
mov
mov
in
outsl
mov
out
jb
and
xor
in
and
ret
push
in
jno
lock
and
ljmp
jb
aam
and
fimull
shrb
pusha
pop
sub
addl
xor
js
movsl
outsb
in
scas
pusha
xor
shlb
dec
adc
and
repnz
in
andl
daa
pop
push
test
cwtl
sub
jecxz
cmp
out
dec
jb
outsw
pusha
out
inc
andb
mov
pusha
mov
push
xadd
pop
and
movsl
push
in
mov
ret
mov
call
in
push
movsb
cs
ljmp
jmp
inc
push
lea
mov
enter
out
sub
push
adc
sub
xor
push
dec
add
xchg
xor
ja
cmp
cmp
push
andb
stos
test
dec
je
dec
movsb
pusha
or
sub
jb
ljmp
adc
jb
call
aad
insl
bnd
cs
insb
push
jle
jb
ljmp
xor
push
subb
imul
sub
pusha
push
daa
test
bnd
dec
test
popaw
jp
sub
test
gs
pusha
data16
ljmp
cltd
pusha
pop
out
push
and
pop
insl
test
push
orb
lock
or
add
aam
out
pusha
jo
aam
sub
jmp
push
inc
pusha
scas
jb
faddl
pusha
xchg
arpl
aam
pusha
scas
fs
or
jmp
or
or
pusha
addr16
or
pusha
push
clc
imul
pusha
imul
adc
adc
pusha
insl
xor
adc
pusha
lds
popa
mov
fidivs
rcrl
mov
push
push
sbb
fldcw
repnz
xor
iret
stos
dec
icebp
and
jne
dec
test
dec
loop
cli
sti
xor
sbb
bound
imul
pop
add
pushf
lea
ja
sbb
sub
bsf
add
bsr
inc
mov
call
cmc
rol
jmp
xchg
xor
movsl
adc
adc
aas
xor
cmp
addr16
dec
imul
mov
fs
pop
enter
adc
jbe
int3
cwtl
loope
cmp
jl
lahf
xchg
imul
add
sub
push
out
sub
or
jp
lds
sub
push
arpl
inc
jg
std
cmp
cmp
cmp
in
inc
cmp
fs
and
and
adc
sbb
and
or
push
mov
sub
aas
sbb
push
add
pusha
call
test
jmp
jmp
mov
mov
jmp
test
clc
pushf
cmpb
pushl
push
pusha
jmp
bswap
rcr
mov
rol
mov
ror
mov
jg
mov
bt
clc
not
cmc
jbe
pushf
ror
push
push
pusha
jmp
fldl
jo
pop
imul
sbb
add
sahf
sub
inc
insb
jb
pop
cmp
xchg
fidivs
aam
lock
sbb
jecxz
adcb
pop
aaa
xchg
ss
sub
sub
int3
add
test
movsb
rclb
cld
cmc
out
sub
dec
pop
mov
hlt
aam
rorb
js
aaa
jb
and
inc
outsb
inc
push
pop
push
jns
incl
in
in
sbb
push
mov
adc
das
adc
jns
push
inc
add
xor
push
out
jp
pop
jmp
xchg
call
jmp
cwtl
icebp
cwtl
sbbl
fucom
movsl
fxch
xlat
cld
movsb
test
and
push
out
in
xor
mov
out
mov
sar
mov
mov
inc
lock
dec
or
jl
pop
sbb
dec
gs
cmp
data16
enter
rclb
and
jbe
in
push
dec
js
js
pop
or
pop
sar
cwtl
mov
scas
ret
in
movsb
pop
add
push
cmp
push
repnz
les
cmpsb
outsb
mov
movsl
std
pop
mov
ja
jns
iret
adc
pusha
cmp
into
mov
jb
ds
sub
push
or
and
adc
aaa
add
sbb
cmp
fdivl
jmp
sti
rclb
sub
cmp
pop
xor
xchg
test
imul
popa
cmpsb
or
cmpsl
and
in
out
push
cld
mov
jl
aad
cmp
push
xchg
mov
stc
adc
js
add
jp
jne
mov
sub
xor
sbb
and
push
aas
sbb
scas
mov
push
fsubrp
cmp
xor
push
jnp
dec
xchg
lods
xor
loopne
mov
add
fcomi
xchg
movsl
fsubrp
loop
fcomp
xor
int
xor
sahf
movsl
arpl
cmp
or
and
pop
outsb
aaa
into
rorb
sbb
arpl
pushf
jmp
stc
imul
pusha
call
movzbw
rcl
rcr
push
cmp
movzbl
adc
mov
shl
or
lea
shl
push
add
bswap
push
jmp
addr16
mov
int3
std
call
sar
hlt
in
jae
mov
lock
das
adc
adc
insl
adc
add
cmp
mov
ffree
lcall
mov
sarl
xor
daa
loop
mov
test
ljmp
pop
roll
adc
sbb
dec
add
shl
xchg
rol
out
lods
mov
cld
repz
imul
loopne
jnp
adc
jp
adc
cmp
xchg
pop
mov
stos
sahf
lods
out
mov
and
pop
add
or
add
loope
sbbl
push
ret
lcall
sub
mov
inc
repnz
xchg
sti
in
mov
pop
mov
sbb
adc
jge
cs
loope
ret
aam
lret
mov
and
daa
jg
or
dec
pop
insb
ljmp
cmp
sub
cmc
stc
bt
clc
cmp
push
call
pop
dec
scas
mov
inc
jo
and
cmp
cmp
inc
pop
dec
mov
pop
mov
out
lret
mov
out
dec
mov
ret
dec
jo
xor
push
dec
add
pop
or
xchg
mov
addl
dec
jmp
cmp
imul
jp
cli
adc
movsb
or
xchg
cmp
push
or
xchg
mov
pop
ja
fmull
popf
jmp
ror
cmc
ljmp
cltd
cmpsb
incl
mov
cmp
jo
jnp
adc
sarl
outsl
xor
mov
push
loope
mov
clc
add
test
cmc
shr
std
shl
shl
rcll
test
adc
adc
sub
lea
je
bt
cmc
cmp
pushf
pushf
pushl
movb
lea
je
push
jmp
jmp
lea
ja
mov
inc
setae
dec
pushf
inc
jmp
pushf
lea
jne
bswap
not
cmc
mov
movzbw
sub
bswap
call
aam
outsl
lahf
adc
sbb
adc
sub
adc
loope
js
xor
sbb
dec
pop
ja
push
test
stos
std
out
ljmp
popf
push
inc
sbb
or
sub
dec
add
lea
in
fwait
push
xor
insb
add
sbb
xorb
lcall
push
js
repz
mov
mov
cmc
inc
push
mov
in
test
mov
movsl
mov
aaa
pop
inc
jae
ljmp
cs
repnz
push
lea
jne
bswap
lahf
movb
movsbw
push
cwtl
lea
lea
push
pushf
mov
pusha
movl
pushl
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
gs
xor
fs
insb
add
shlb
and
jae
push
jmp
lea
ja
stc
jno
pushf
imul
stc
bt
add
pusha
pushl
push
lea
jmp
test
test
push
mov
jmp
pushf
lea
call
call
add
add
add
add
add
add
mov
add
ja
add
mov
add
add
pop
dec
add
push
sub
adc
xor
arpl
jns
xor
sahf
loope
clc
loopne
pop
out
mov
rcrb
jbe
jne
or
mov
xchg
cmp
sub
or
into
jbe
in
push
imul
bndstx
sub
je
mov
jge
dec
pop
dec
ja
dec
js
je
push
pop
je
push
mov
or
les
inc
and
movl
pushl
ret
psubd
popf
adc
cmp
inc
dec
pusha
jns
add
aaa
adc
push
repz
jb
testb
dec
movl
scas
shr
cmc
push
rcll
sub
mov
mov
dec
jo
inc
xor
roll
xor
fwait
fwait
pop
mov
testb
pusha
outsl
scas
sub
push
push
jae
sub
mov
cmc
mov
in
mul
test
sbb
call
push
add
xchg
xor
pushf
adc
lock
out
lret
lret
test
adc
jp
js
ds
mov
inc
mov
es
xchg
push
adc
insb
jae
inc
mov
int
sbb
imul
pop
mov
push
pop
push
pushf
mov
jge
into
imul
mov
cmpsb
loope
shl
loope
in
repnz
mov
pop
jl
hlt
int3
dec
bsr
mov
pushf
cmpb
call
jmp
lea
je
jmp
and
mov
cltd
test
mov
or
pop
fisubs
enter
sbbb
cld
pop
mov
and
fldt
in
mov
ss
mov
iret
mov
iret
test
mov
stos
hlt
fstpl
sbb
pop
jecxz
bound
mov
sub
xchg
fcomip
push
cmp
push
je
inc
arpl
sub
sub
lcall
dec
pop
popa
mov
pusha
call
lea
jne
dec
mov
pusha
clc
cmc
add
pushf
movzwl
lea
sar
inc
xor
btc
mov
cmp
jmp
call
lea
jne
push
shr
clc
xor
pusha
pushf
bswap
clc
mov
jmp
or
pusha
bswap
movsbl
xor
lea
movsbw
pushf
mov
pusha
movzbw
call
mov
lea
jne
pushf
lea
call
pushf
call
lea
ja
jmp
imul
push
gs
imul
pop
jge
inc
push
sub
jmp
xchg
std
lcall
jecxz
cmp
xlat
cld
mov
leave
shl
cmp
nop
stc
cmp
adc
mov
sub
or
hlt
jmp
neg
icebp
fucom
jmp
mov
or
pop
push
inc
lea
inc
lea
pusha
cmc
push
pushf
sub
cmc
call
clc
jmp
add
test
test
mov
jmp
call
push
pusha
lea
jmp
sub
das
and
push
aas
or
sbb
jae
pop
push
mov
jp
bound
fistl
mov
mov
scas
mov
ds
xlat
pusha
add
xor
add
add
adc
add
add
out
dec
fwait
cmp
outsb
push
dec
jns
pushl
push
lea
je
cmc
cmp
jmp
jmp
lea
jne
lahf
movb
lea
mov
mov
push
call
inc
mov
adc
pushf
pushl
pushl
ret
push
cmp
and
mov
sbb
sub
lret
aaa
cmp
xor
and
cmp
xor
and
and
add
fadds
add
pop
imul
inc
adc
in
iret
loope
sbb
out
shll
xor
fistl
pop
outsl
outsl
or
sbb
pop
sbbb
jge
insb
jb
dec
push
jbe
add
mov
orb
cmc
out
hlt
jecxz
andb
lahf
mov
xor
add
leave
shr
in
in
mov
fsubr
enter
mov
sub
stc
into
dec
cmc
call
bswap
lea
mov
push
movb
jmp
lea
jae
shr
mov
xadd
mov
test
call
movzbl
setns
shl
setg
mov
bt
cmpb
push
lea
jne
mov
xor
sbb
test
neg
mov
dec
clc
add
cmp
mov
cmp
bt
push
test
push
push
lea
jmp
lea
jmp
cmp
or
and
or
std
repz
mov
or
psubsw
fcomip
dec
out
ljmp
ror
rcll
mov
cmp
push
imul
xchg
loop
sbb
jne
and
mov
stos
pop
aam
dec
outsb
push
add
xchg
mov
inc
push
pop
push
inc
sbb
or
mov
int
mov
pop
jp
push
sbb
push
or
push
adc
stc
jg
or
pushf
lahf
cli
fcmovnbe
lahf
andb
xchg
rcrb
int3
inc
scas
loope
mov
in
aad
or
inc
push
add
push
xchg
fcmovb
popf
cmp
push
xor
dec
in
mov
mov
sahf
inc
mov
push
lock
mov
loopne
xchg
data16
mov
xor
adc
or
sub
xor
cmp
adc
sub
push
movsl
pusha
xlat
pop
gs
push
call
aaa
xchg
bound
adc
adc
xor
fs
rclb
ret
pop
and
fdiv
inc
dec
std
in
lock
fxtract
in
loope
pop
inc
lea
sbb
in
test
adcb
fs
jne
stc
mov
pusha
jmp
mov
dec
xchg
adc
daa
adc
or
sbb
jns
sub
mov
xchg
mov
xchg
mov
js
mov
mov
mov
dec
xchg
in
imul
mov
fwait
rep
and
mov
adc
add
push
dec
mov
push
or
loopne
loopne
fisttpl
xchg
mov
cmp
in
cmp
std
jmp
dec
xor
pop
dec
dec
and
mov
xor
push
cli
cmp
mov
repnz
stc
in
adc
out
aad
sbb
clc
test
or
out
in
mov
out
push
icebp
out
xlat
nop
jp
cli
lds
pop
pop
adc
sub
sar
ds
push
aas
or
inc
jl
mov
cmp
jae
jmp
pop
out
lds
jecxz
jecxz
lea
aam
or
loopne
jb
dec
sbb
cmp
dec
jl
push
rsm
push
sbb
pop
lds
pop
mov
mov
lret
jnp
sbb
div
mov
xchg
cmpsb
in
mov
adc
out
daa
add
jo
dec
push
std
or
subb
and
mov
inc
insl
cwtl
or
in
sbbb
cli
loope
ficomps
inc
push
inc
jno
push
cmp
xlat
jp
std
or
fists
lds
mov
mov
inc
dec
imul
aam
je
add
in
mov
rcrb
and
xchg
ret
stos
test
loope
mov
sub
push
lods
xchg
mov
or
int3
icebp
xchg
lock
divl
jmp
dec
xor
push
clc
sahf
mov
fs
jae
jmp
out
mov
xchg
adc
outsl
jl
dec
jns
push
sbb
sub
in
stc
lahf
lds
xor
and
insb
dec
bound
dec
jl
inc
ffreep
jns
jge
push
dec
add
xor
sbb
pop
add
adc
jb
dec
clc
jmp
push
pusha
aam
daa
cmp
xchg
pop
adc
add
mov
into
in
dec
inc
stc
cmp
mov
dec
jg
fucomi
cmc
inc
addr16
shlb
lcall
fidivrs
pop
movsb
or
aas
push
je
dec
inc
mov
fcoml
cmp
cmp
gs
xor
cli
adc
jle
push
bound
data16
fwait
mov
ljmp
or
fdiv
mov
push
fabs
mov
mov
lcall
add
fs
jns
xor
mov
xor
mov
arpl
jae
inc
insl
inc
das
dec
or
mov
inc
xor
loop
lods
mov
lods
subl
rol
ss
test
je
sbb
push
and
not
lea
call
push
stc
sub
stc
cmc
repnz
push
pusha
lea
jne
shl
clc
pushf
setno
mov
test
jmp
cmc
pushf
stc
not
bt
call
cmp
add
jmp
mov
lea
ja
dec
inc
call
xor
iret
xchg
adc
cmpsb
test
leave
aam
call
pop
pop
jle
lahf
xchg
dec
jbe
repz
cmp
add
pop
jno
add
pop
and
cmp
outsl
adc
and
insb
inc
imul
ret
mov
addl
stc
into
flds
lahf
mov
stc
mov
ffreep
fcmovnbe
imull
call
rclb
pop
fsubrp
mul
stos
mov
popf
cmpsb
popf
sub
cmpsb
inc
mov
decb
and
js
cmp
push
jbe
inc
imul
sbbl
hlt
mov
push
dec
inc
and
inc
test
mov
xchg
insl
pusha
fnstcw
pop
loop
mov
rcl
sbb
push
popa
xchg
aas
jle
sbb
cmp
stc
scas
movl
jo
xor
dec
pop
ja
mov
push
push
cwtl
cmpsl
adc
mov
sbb
sahf
lods
or
mov
insl
sub
sbb
popa
cmp
loope
lds
mov
std
dec
jg
xor
cmc
ret
mov
in
out
aam
mov
inc
xchg
mov
mov
andl
sbb
xchg
fcompl
jns
lock
std
mov
int
inc
push
adc
jp
xor
pop
jne
jmp
dec
pop
repz
out
cltd
mov
out
jmp
mov
fmuls
xchg
xchg
and
push
fnstenv
jnp
cmp
lods
mov
ret
mov
subb
or
cmp
inc
inc
jge
das
adc
adc
add
repnz
mov
cmp
lods
mov
dec
cmp
dec
push
dec
pop
gs
popa
dec
or
test
sti
popf
xchg
popf
mov
add
pushf
pusha
pushl
lea
jmp
or
mov
push
sub
pop
push
xchg
lret
jecxz
mov
lds
inc
mov
rcll
cli
adc
adc
xchg
and
inc
pop
stos
les
in
cmc
scas
and
rcll
adc
mov
popf
les
mov
xchg
in
out
lret
lods
sbbb
icebp
nop
push
sub
or
les
cmp
clc
jmp
jmp
cmp
call
pusha
mov
pushf
mov
jmp
cmp
pusha
lea
jb
bt
cmp
cmp
cmp
push
lea
jae
sbb
dec
sbb
mov
mov
cmc
setb
mov
jmp
push
lea
call
cmp
push
pushf
push
sub
call
lea
je
pushf
push
pusha
lea
jmp
bt
add
mov
lea
jmp
push
repz
nop
adc
sub
sub
jl
nop
mov
push
inc
add
and
add
imul
push
insb
hlt
cltd
xchg
dec
cmp
xchg
mov
mov
adc
sub
mov
cmpb
stos
mov
adc
movsb
jecxz
rorl
cmc
add
jmp
fadds
sbb
and
jno
push
jl
js
jae
or
add
rorl
sbb
fdivrp
call
imul
hlt
pop
mov
jmp
js
adc
cwtl
mov
push
sub
cmp
popa
sahf
mov
jmp
int
int
cli
lods
add
into
sarl
rclb
mov
add
and
dec
dec
daa
pushf
add
mov
repnz
cmc
adc
adc
cmp
jnp
cmp
dec
jl
inc
sbb
stos
adc
imul
lahf
sti
popf
stos
sbb
aaa
mov
dec
push
cli
or
dec
in
loop
fnstsw
fists
call
xor
mov
es
and
addb
arpl
adc
add
jg
imul
push
dec
mov
and
or
call
add
pusha
pushf
push
lea
jmp
stc
add
pushf
pusha
mov
lea
jmp
cmc
cmpb
pusha
push
jmp
and
pop
addr16
push
dec
push
insl
cmc
cmpsl
test
sbb
cmp
fstpl
aas
dec
cmp
pop
xor
js
push
pop
popa
cmp
push
cmp
cmp
loop
jp
je
pop
push
xor
jl
xor
or
or
add
jg
push
inc
dec
outsl
lcall
dec
pop
sbb
jg
add
cmp
push
push
dec
cli
lret
xchg
lret
xor
pop
jl
cltd
mov
dec
arpl
ret
nop
add
gs
adc
repz
sarb
sahf
scas
push
xor
std
pop
sub
bound
push
push
shl
mov
shr
xlat
in
clc
rep
repnz
rorl
insb
jnp
stc
int3
mov
loopne
hlt
sti
mov
les
out
loope
adc
dec
or
inc
dec
or
cmovbe
imul
xor
push
sbb
dec
pop
bound
arpl
daa
iret
cmpsl
and
jb
add
jl
inc
sub
loop
mov
jae
hlt
test
mul
mov
fdivp
out
aam
mov
or
test
mul
cwtl
cmpl
rcrl
cmp
mov
cwtl
mov
das
adc
sub
ss
cli
lods
mov
sub
adc
pusha
pushl
movw
push
lea
jmp
pushf
bt
add
bt
cmc
test
cmp
jmp
lea
jg
call
clc
movb
pushl
popl
mov
test
cmp
pushl
push
call
pusha
call
rorl
push
das
adc
sub
jb
push
dec
jg
pop
sub
mov
mov
mov
js
mov
jge
das
rorl
push
cmp
fs
dec
repnz
ror
xchg
ret
pop
xchg
mov
fwait
sbb
sbbb
mov
subb
cmp
roll
add
sub
xor
pop
jl
js
jo
mov
cmpsb
mov
sti
mov
clc
call
pusha
lea
ja
clc
stc
pushf
clc
imul
pusha
pusha
stc
add
push
push
movb
movb
lea
jmp
or
sub
inc
sahf
adc
push
fwait
xchg
or
dec
shll
xchg
mov
cmc
lock
pop
scas
rcrb
arpl
sar
repz
sti
arpl
sbb
dec
inc
arpl
lock
arpl
mov
push
inc
hlt
pop
jo
or
xor
sub
lods
ljmp
mov
xor
loopw
xchg
inc
inc
addl
addr16
icebp
nop
arpl
push
and
out
outsb
jno
cmpsl
adc
ja
add
ffree
push
stc
sub
sbbl
arpl
xor
test
jle
ficoml
jp
out
lock
push
arpl
push
in
in
sbb
lret
mov
and
lret
adcb
addr16
jb
fmull
mov
inc
mov
mov
adc
arpl
or
mov
popl
push
jne
xor
popa
imul
imul
mov
xchg
sbb
jns
pop
mov
imul
movsl
jmp
int
adc
js
les
fucom
das
bound
sbb
mov
bound
loope
jb
loop
add
push
bnd
outsb
push
insb
cs
fisubl
sbbb
stos
mov
adc
stos
sub
pop
jne
repnz
fisubl
fdivs
pop
mov
add
imulb
bound
in
sahf
push
inc
push
push
loop
lahf
gs
add
jno
lods
inc
jl
push
sub
adc
sub
mov
or
jo
jmp
scas
jno
bound
lods
dec
jl
sbb
lods
xchg
nop
push
fdivrl
sti
test
jno
imul
gs
cmp
jl
scas
shrl
out
cmp
insl
mov
das
push
cmp
pushf
iret
adcb
sbb
add
adc
push
jle
sbb
mov
sbb
loope
pop
call
cwtl
shll
jmp
testb
push
dec
sbb
aad
scas
imul
sub
sahf
fldt
jmp
mov
dec
mov
jmp
push
call
push
push
fcompl
fisubrs
sbb
cmp
mov
push
jmp
xchg
insb
sub
push
push
les
out
out
mov
dec
push
cwtl
gs
dec
insb
repnz
or
and
stos
ficoms
sub
test
sub
rcrb
sahf
insl
cs
repnz
int3
push
in
mov
punpckhdq
jl
pop
jno
jmp
stos
insb
or
gs
or
bound
cmpsb
inc
loop
adc
cmp
in
xor
or
in
insb
loop
lock
sbb
icebp
lock
adc
mov
out
xor
out
and
pop
jo
outsb
sbb
jno
cli
in
add
lcall
push
out
mov
in
mov
inc
push
jmp
or
out
mov
and
andb
fcompl
dec
sub
mov
cmpl
scas
aas
mov
pop
scas
cs
jno
fildll
repnz
sub
adc
fidivl
scas
out
pop
dec
mov
out
jb
jge
jo
movsl
mov
and
push
mov
and
scas
push
xor
fidivrs
jle
out
adc
sub
or
jmp
popa
push
cmp
sbb
fwait
pushf
test
sti
scas
xchg
out
sub
inc
xchg
sahf
jmp
or
in
pop
adc
dec
psraw
das
push
pop
jno
pop
pop
insb
nop
lods
fdivrl
jbe
xchg
mov
jp
insb
lods
rcrb
cmp
adc
js
movsl
lcall
out
ret
ds
jmp
or
repz
fistl
xchg
lea
mov
lods
add
dec
pushf
out
xor
xor
xor
lea
add
or
outsb
pushf
enter
or
enter
loopne
add
and
sbb
xlat
sahf
aad
scas
and
or
pushf
neg
mov
in
dec
hlt
pop
pop
shrl
and
stc
repnz
sahf
jno
pop
rorl
shrb
sub
lcall
push
dec
sbb
cmpsl
pusha
leave
fstpt
test
nop
pushf
fiadds
movsb
sarl
cmp
mov
enter
mov
sub
mov
imul
dec
loopne
jns
loopne
das
sub
sbb
call
test
or
dec
jmp
dec
jecxz
loope
xchg
sarb
in
wrmsr
insb
mov
mov
maxps
mov
sbb
xchg
loop
sub
pop
inc
or
nop
jb
xor
imul
dec
out
loop
mov
pop
jp
jge
pop
dec
daa
imul
mov
jge
dec
out
test
sub
out
pusha
pop
shrb
test
xor
int3
cs
dec
cmp
ds
lock
insl
sarl
or
inc
jb
xchg
dec
xor
insl
and
jecxz
loopne
in
mov
sub
lods
lock
stos
lds
sub
rcrl
pushf
test
movsb
in
pop
addr16
inc
sub
std
mov
mov
mov
test
or
lods
pop
push
sti
jae
cmpsb
hlt
fisttpll
push
ffree
fcomi
ret
js
push
fcoml
je
iret
fimull
sti
in
xor
filds
push
mov
daa
cmpsb
lods
out
mov
add
sbb
cmp
dec
popa
or
push
sub
push
insb
sub
stc
adc
pop
sahf
sub
fsts
push
movl
or
rorb
scas
mov
jno
or
popf
nop
push
gs
cld
insb
cld
iret
mov
mov
sbb
leave
fs
aas
push
push
clc
dec
pusha
lods
outsb
push
iret
jno
fucomi
mov
out
sub
or
mov
inc
mov
sbb
out
fcompl
adc
dec
xchg
orb
subl
cmp
add
sub
sbbb
stos
jp
sub
mov
pop
js
aas
loopne
push
pop
gs
dec
scas
insl
jb
stos
leave
repnz
aad
insb
fildl
pop
fcmovnu
dec
leave
fistps
dec
sub
loop
fcomi
push
cmp
cmp
xchg
mov
pop
mov
xchg
jbe
jl
sub
les
sarb
adc
jb
repz
and
and
imul
mov
sbb
pop
push
dec
adc
adc
mov
or
push
jecxz
and
or
imul
xor
pusha
out
dec
sub
push
out
repnz
and
jge
mov
xchg
push
insb
in
adc
pop
ljmp
sub
stc
test
mov
and
sbb
out
cmp
mov
fmulp
mov
inc
sbb
pop
push
sarl
imul
loope
adcb
insl
loope
sbb
daa
xor
movsb
gs
pusha
cs
shll
xor
mov
lods
dec
dec
stos
loop
add
fptan
and
sbbb
push
shrb
stos
xor
fsubp
popa
das
dec
loop
push
lock
mov
mov
repnz
popa
scas
aam
and
xorb
ljmp
rol
shlb
scas
test
pusha
pop
mov
push
push
scas
cmp
inc
das
xchg
mov
aas
sub
xchg
sub
dec
xorl
popa
inc
mov
shlb
mov
mov
mov
xlat
xor
push
mov
popa
fisubrs
sub
scas
loop
xor
out
lock
mov
popa
mov
xchg
lea
push
xor
rclb
in
rcrl
movsl
push
in
and
out
es
out
daa
push
push
sub
xor
push
push
stos
ljmp
out
jmp
sub
lods
in
fisubrl
insl
xor
push
outsb
cs
out
fisubrl
push
outsl
xor
mov
movsb
jecxz,pn
repnz
pop
in
out
jmp
out
xor
jecxz,pn
repnz
cs
insl
fisubrl
out
jno
icebp
push
mov
mov
fucompp
push
insb
xor
out
mov
movsl
lods
mov
loop
fisubrl
shrb
data16
push
inc
xor
adc
repnz
rol
mov
xchg
xorb
push
inc
xor
adc
icebp
arpl
rol
mov
xchg
xorl
and
add
shlb
mov
nop
xorb
arpl
das
pop
ud0
scas
mov
outsl
pop
dec
ds
push
out
fmulp
mov
jle
pop
dec
cmp
std
in
mov
jge
shlb
mov
xor
mov
mov
pop
xor
or
jmp
lret
mov
jnp
adc
or
pop
ss
inc
lret
jb
dec
out
xor
ss
sbb
push
and
outsb
into
ljmp
std
out
add
sbb
aam
xor
div
dec
dec
movsl
pushf
and
or
repnz
jmp
int
adc
mov
ds
sub
mov
pop
sub
insb
xor
ds
sbb
adc
mov
aas
mov
mov
cmp
jns
cmp
pop
sbb
sbb
dec
int
pop
das
push
scas
stc
and
mov
sbb
outsb
xor
test
cmpsl
mov
sbb
adc
bound
lock
cmpsl
out
gs
sub
orb
lret
frstor
and
outsl
dec
sbb
push
ja
scas
adc
std
or
in
enter
out
bound
push
mov
lock
push
sbb
push
inc
push
mov
pop
xor
xchg
jns
adc
mov
push
jns
pushf
imul
imul
cmp
sbb
cli
ljmp
mov
pop
arpl
sub
or
jmp
test
pop
arpl
sub
or
call
test
mov
push
arpl
daa
pop
pop
mul
xlat
arpl
mov
xchg
xchg
push
arpl
es
push
mul
arpl
mov
xchg
xchg
push
arpl
and
aad
lds
gs
arpl
adc
hlt
in
arpl
mov
xchg
test
arpl
and
add
jecxz
push
ret
mov
xchg
xorl
sbb
stc
popa
into
arpl
test
into
imul
xor
add
pusha
mov
sahf
add
loop
fildl
icebp
pop
xorb
jno
mov
repnz
int
outsl
mov
mov
or
ret
push
xchg
icebp
and
sbb
add
cli
adc
sbb
sub
pop
insb
dec
fsubrl
popa
push
sbb
sbb
sub
into
sbb
in
jno
dec
scas
repnz
cs
pop
fucomi
outsl
jno
cmp
stos
out
sbb
jne
leave
cs
push
xchg
sub
xor
sbb
ret
icebp
mov
and
cmp
repnz
out
jno
dec
lock
push
jle,pt
addr16
add
pop
ds
lds
dec
out
mov
imul
lret
ss
dec
push
or
lods
movsb
jae
cmpsl
xchg
xor
fs
push
je
lret
loop
lods
push
test
repnz
sub
sub
stos
icebp
sub
dec
sub
insb
scas
repnz
mov
in
loopne
jo
ljmp
and
push
imul
push
subl
adc
shlb
out
mov
ljmp
push
push
xor
push
mov
push
push
mov
loopne
daa
and
push
insl
shll
daa
sub
xor
ljmp
imul
das
imul
xor
daa
adc
shlb
pushw
ljmp
mov
mov
xor
xor
mov
icebp
in
scas
mov
xchg
add
push
xor
jno
jb
daa
inc
repnz
push
js
repnz
mov
mov
xor
push
xor
push
in
xor
data16
push
inc
out
xor
jno
cmpsl
sbb
in
movsl
dec
push
sub
test
dec
stos
push
imul
sub
inc
in
and
inc
in
and
push
test
mov
fldt
out
test
jo
xor
add
lock
jno
jno
xor
icebp
push
cmpsl
jb
xor
repnz
lods
daa
nop
mov
ljmp
lods
in
sbb
out
std
sbb
mov
out
pop
addr16
out
pop
push
push
js
jmp
push
sbb
loopne
xor
insb
sbb
lods
out
shr
into
push
scas
and
rol
lods
sbb
inc
mov
out
sbb
shlb
out
std
sub
mov
xor
pusha
and
lods
stos
dec
movsb
xor
movsl
into
xor
sbb
lods
sbb
loopne
lods
or
sub
lods
iret
xor
cwtl
or
loopne
push
push
sub
lea
jmp
pusha
lods
mov
push
pusha
sub
push
sub
pusha
lods
lea
lods
je
sub
pusha
out
lea
out
je
scas
scas
out
fwait
and
shl
xchg
and
shl
xchg
and
shl
xchg
in
std
inc
mov
and
xor
mov
jecxz
cmpsl
cmpsl
xchg
cld
xchg
and
jmp
add
int3
outsl
adc
pop
dec
fs
gs
or
outsb
add
data16
xchg
xchg
xor
lea
cmpsl
out
push
mov
xor
cwtl
add
fsubrs
xor
js
push
inc
call
inc
imul
pop
jmp
pop
push
out
std
pop
ljmp
push
dec
jmp
jno
jmp
shrl
in
sub
mov
test
sbb
insl
shll
xchg
shlb
inc
outsb
sbb
out
mov
inc
outsl
sbb
repz
xchg
xor
and
xor
fwait
pop
jno
sbb
gs
out
inc
jo
in
mov
sub
lock
stos
pop
xor
icebp
rolb
lahf
fidivs
loopne
aad
sahf
mov
xor
xor
test
repnz
xor
ret
fs
inc
sub
jecxz
insl
xor
or
ret
jb
insl
mov
insl
js
out
imul
push
imul
ljmp
in
insl
test
lea
data16
mov
push
adc
insl
mov
dec
xor
out
pop
mov
pushf
mov
inc
xor
test
push
loopne
push
push
sub
lea
test
push
sub
lea
stos
je
sub
stos
lea
stos
je
sub
lods
lea
lods
je
push
pop
mov
jmp
es
shrb
insl
mov
and
mov
and
out
insl
in
mov
dec
jo
repnz
lock
insl
int3
mov
test
pop
push
loopne
push
push
jb
pusha
repnz
bnd
xor
mov
jge
ljmp
movsb
std
pop
movsb
mov
and
pop
and
data16
movsl
jge
shlb
daa
in
mov
call
std
pop
push
out
std
pop
jmp
es
jge
inc
cmpsb
and
mov
and
mov
jge
pushf
out
add
ljmp
ljmp
xchg
push
test
xchg
and
shl
xchg
and
shl
xchg
and
shl
xchg
and
shl
xchg
and
shl
xchg
and
mov
out
popa
imul
test
jecxz
xchg
outsb
add
aaa
and
inc
das
xor
fiadds
inc
in
sbb
sbb
shrb
out
mov
and
push
inc
and
insb
inc
jno
xor
in
sbb
and
shr
and
dec
jno
mov
xor
lods
sbb
fucomp
into
xor
sbb
out
sbb
xor
push
icebp
inc
popa
imul
xchg
icebp
ljmp
sub
shl
std
push
js
lea
cmpsl
out
lea
movsl
js
in
dec
and
cmpsb
rolb
and
mov
inc
and
sub
movsl
pusha
lea
repnz
out
xchg
inc
and
sub
movsl
pusha
lea
repnz
jno
std
bnd
std
bnd
std
bnd
std
bnd
std
bnd
std
bnd
std
bnd
std
bnd
std
bnd
std
bnd
std
bnd
std
bnd
std
bnd
std
pusha
xor
popa
xchg
push
xor
push
xor
xor
mov
out
std
sub
xor
sbb
jo
popa
jg
sbb
add
pop
push
add
mov
xchg
subl
mov
test
sbb
mov
incb
sbb
sub
lods
cmp
and
inc
movsl
sbb
cmpsb
std
push
js
cmpsl
pop
outsl
sub
out
movsb
test
xor
sub
and
popa
out
rclb
shrb
pop
repnz
imul
xor
imul
sub
lods
inc
sbb
sub
shl
std
test
push
repnz
xor
test
push
sub
out
dec
stos
lods
hlt
imul
rolb
call
les
je
js
sbb
dec
test
and
shl
fcmovnbe
mov
lret
sbb
jmp
shlb
push
mov
xchg
dec
bound
inc
ficoms
stc
inc
insb
add
loopne
out
or
xor
xor
mov
lods
sbb
shll
xor
out
jge
pusha
jb
lods
dec
repnz
das
out
jge
mov
jo
or
js
shlb
das
push
stos
xor
lea
dec
adc
sub
cmp
ljmp
push
xor
xchg
out
sbb
daa
shlb
stc
jno
in
push
and
das
aad
test
movsl
inc
xor
xor
pushl
jb
js
out
pop
outsl
sbb
ljmp
inc
out
out
mov
xor
xor
rolb
push
in
stc
arpl
jmp
fisubrl
xor
fisubrs
repnz
fldenv
jne
pushl
stos
fsubrp
and
mov
int3
jecxz
sub
lock
lods
cmpsl
jno
imul
es
call
adc
shrb
sub
push
mov
in
fs
mov
outsl
ja
gs
inc
in
sbb
jnp
data16
es
xchg
and
shlb
ja
jmp
rcl
and
js
sub
jg
ljmp
in
inc
xor
jecxz
mov
inc
lods
sbb
sub
shl
std
mov
jne
push
outsl
lcall
out
lods
dec
push
dec
jno
sub
rclb
jecxz
dec
lods
ja
imul
lea
push
jb
lea
movsl
in
js
das
subb
and
repz
dec
es
ret
cmpsl
leave
out
jmp
daa
xor
out
push
mov
cmpsl
lret
sbb
ljmp
push
push
lret
lret
xorb
mov
xor
into
and
cmp
dec
aas
outsl
ds
dec
std
xchg
sub
mov
aad
push
ljmp
xor
fwait
mov
gs
fs
push
les
lods
jl
dec
xor
jno
sbb
iret
jno
test
lods
rolb
and
push
jae
sbb
xorl
out
std
push
js
in
lea
cmpsl
in
cli
roll
and
std
push
js
sub
sub
push
movsl
or
mov
bound
mov
outsl
and
shl
std
push
js
scas
lea
cmpsl
in
jno
dec
out
cmpsl
fldcw
dec
cmpsl
cs
rolb
and
shl
std
push
js
shll
and
ret
shl
gs
cwtl
lea
lods
adc
jge
pop
xor
jno
data16
out
rolb
jl
cmp
push
repz
pusha
xor
sbb
add
and
shl
std
push
js
jo
dec
jo
jo
and
repnz
jno
cli
xor
and
rclb
adc
fildl
lahf
xor
jge
push
inc
bound
je
js
inc
lea
adc
out
mov
lock
sti
sub
mov
mov
push
stos
shrb
sub
push
inc
jae
imul
scas
insl
imul
cmpsb
shr
out
sbb
sbb
rcrl
pop
out
sub
ret
mov
stos
out
sub
fwait
pop
das
ss
shr
inc
shll
inc
in
and
shl
sbb
in
imul
in
fsubp
orl
test
sbb
cmpsb
rolb
and
shl
std
push
js
out
dec
daa
cmpsl
push
inc
call
out
std
pop
bound
push
mov
cmp
fs
out
je
out
add
lret
jmp
xchg
ljmp
out
fisubl
push
xor
mov
mov
popf
movsl
inc
mov
jb
ljmp
mov
mov
into
shlb
test
sub
pop
xchg
cmc
xchg
insb
dec
in
dec
and
insb
push
xchg
data16
call
pusha
xor
sbb
add
push
sub
xor
ja
mov
loop
in
into
out
inc
outsb
and
xchg
sbb
sub
mov
xor
ds
insb
sbb
jb
mov
insl
xor
inc
adcb
outsb
push
xor
leave
outsl
lret
in
bound
jno
stos
jnp
icebp
lea
stc
and
jmp
shlb
repnz
dec
popf
out
lret
mov
scas
xor
outsb
add
es
xor
std
push
js
and
jp
xor
inc
bound
je
js
inc
lea
cmpsl
and
fistl
rolb
cmp
sub
in
jo
imul
cmp
inc
mov
xlat
jmp
mov
addr16
call
sub
out
outsb
add
mov
out
and
lods
ds
out
out
or
lcall
lahf
jno
xor
out
shrl
sub
bound
add
movsb
stos
sbb
push
mov
outsb
or
outsl
lods
loopne
cli
xor
jno
fiaddl
ljmp
sub
xor
stos
sbb
dec
sub
in
dec
daa
jno
repnz
fs
sbb
sbb
sbb
sbb
sbb
imul
pop
in
adcb
pusha
sub
outsb
rclb
scas
cmp
outsb
pop
xor
imul
push
imul
xor
shll
sbb
push
test
insl
inc
push
shlb
xor
dec
mov
jno
insl
or
push
scas
lods
shrb
das
test
inc
fdivp
adc
sbb
sub
and
mov
lods
push
in
push
movsb
sub
jb
sub
xor
lods
push
mov
adc
rolb
nop
popa
mov
out
dec
or
outsb
jmp
pop
sub
daa
nop
fildll
nop
subb
xor
test
mov
fdivrp
addl
and
shl
std
pop
in
mov
mov
out
gs
jns
addr16
sub
jo
loop
leave
and
sbb
sbb
jb
js
outsl
inc
out
sbb
insl
pop
sbb
rclb
dec
dec
scas
out
mov
and
sbbb
add
test
jmp
xor
outsl
jl
outsl
pop
mov
xor
outsl
std
cmp
in
insb
mov
out
sbb
push
imul
shr
std
ljmp
jb
push
mov
scas
negl
add
outsb
mov
sub
push
icebp
inc
xchg
and
jb
into
std
jl
xchg
pop
xor
repnz
sub
jecxz
fucom
fs
in
inc
and
push
js
lea
cmpsl
push
inc
imul
push
clc
sbb
inc
out
std
push
js
fimuls
sbb
into
rolb
sbb
dec
jb
and
imul
ljmp
jb
js
insb
jle
mov
outsb
rolb
and
push
js
cmp
sub
sbb
or
and
shl
std
push
js
fisttpll
push
in
shlb
sub
shrb
inc
lret
jge
and
rcl
ljmp
dec
xchg
jecxz
pop
js
dec
lea
xor
jno
dec
sbb
outsl
ret
jecxz
sbb
frstor
and
shl
std
push
js
lea
cmpsl
out
rolb
and
shl
std
push
js
imul
jmp
or
sbb
insl
rolb
and
shl
std
push
js
out
lea
cmpsl
lock
jno
inc
icebp
and
shl
std
clc
mov
mov
sbb
inc
mov
jnp
test
and
icebp
lret
and
xorl
hlt
out
sub
js
xor
push
jno
movsb
sbb
and
inc
and
aam
scas
inc
out
shlb
xor
sbb
jmp
in
mov
test
out
test
sbb
sub
xor
loopne
stos
aam
jo
lcall
out
push
jb
in
es
ljmp
sbb
fucomp
push
jno
jmp
jmp
in
sbb
lods
dec
in
xlat
lahf
lods
mov
push
jecxz
cwtl
out
in
sub
and
es
mov
push
in
jmp
pop
sub
out
jb
xor
je
js
inc
lea
cmpsl
and
fistl
rolb
xor
pusha
fs
pusha
imul
imul
out
sbb
outsb
fcompl
pop
rclb
int3
shl
xor
jno
std
jb
js
outsl
pushf
mov
lea
mov
dec
jl
jb
insb
out
sbb
jo
sbb
rclb
dec
rolb
inc
insb
cmp
xchg
sub
jb
js
jno
mov
lea
or
dec
sti
out
sbb
imul
insb
jb
sbb
rclb
lret
rolb
inc
outsb
mov
es
stos
shrb
lea
mov
dec
jnp
data16
out
push
addr16
xor
stos
add
mov
and
std
inc
outsl
and
jne
sub
sub
jp
repz
js
scas
sbb
das
shlb
dec
popa
xchg
in
push
inc
and
pop
mov
cltd
jl
adc
and
push
pop
scas
inc
and
std
jb
dec
jnp
pop
mov
sbb
mov
jmp
mov
mov
xor
sbb
in
mov
rolb
and
shlb
or
cmpsb
ficoml
sub
xor
sub
xor
test
sbb
sbb
shrb
stos
js
sub
sbb
lods
inc
popa
test
xor
sub
shlb
jge
mov
dec
scas
mov
jae,pn
xor
lods
das
sub
xor
dec
jno
inc
icebp
and
out
jb,pn
es
repnz
jnp
cs
xor
jae
arpl
movsb
xor
bound
mov
sub
jae
inc
inc
imul
fldcw
scas
js
das
sbb
scas
shlb
or
xor
es
lret
jnp
out
sbb
in
es
sub
addl
out
jae
jge
shrb
in
rcrb
inc
and
sub
sub
out
xor
sub
jnp
out
sbb
push
jge
mov
addl
xor
jno
in
stc
push
and
jg
movsl
dec
jmp
enter
jl
fcompl
popa
sbb
loop
sub
or
pusha
cmp
dec
jne
or
sub
loop
sbb
pop
jb
cmp
jno
inc
dec
pop
sbb
insl
push
sar
popa
mov
sbb
jmp
pushf
sarb
sbb
or
or
xor
sarb
lods
pop
sub
scas
jno
mov
push
lods
cmp
bnd
or
popa
dec
xchg
mov
adc
jp
pop
dec
and
dec
jmp
pop
add
test
daa
push
jg
sub
sub
bnd
cs
jmp
and
cmp
pop
insb
test
subb
data16
jl
hlt
sub
bnd
mov
insb
pop
cld
jl
int3
fdiv
jl
sbb
sub
dec
pop
pop
jo
pop
pushf
cmp
repnz
dec
add
cmp
stos
ficompl
jl
cmp
dec
jo
scas
sti
pop
popa
jno
xchg
jns
out
in
sub
sub
jb
adc
mov
loop
imul
pop
xor
loop
cltd
xchg
pop
loopne
shll
out
cld
or
call
mov
outsl
pop
mull
jno
shrl
adc
lock
or
in
mov
das
pushf
out
lods
in
sbb
add
repnz
repz
cld
mov
inc
mov
jb
stos
repz
or
mov
lret
mov
mov
bnd
sub
cs
cmp
sbb
mov
jecxz
popa
mov
push
lret
pusha
mov
mov
jb
pop
lock
push
jmp
lret
sti
test
mov
inc
aaa
jb
sub
push
sbb
sub
dec
repnz
clc
insb
mov
add
repnz
dec
fidivrs
cmp
or
cmp
sbb
cltd
inc
xor
cmp
lock
xchg
jb
popa
push
jp
pop
dec
sub
icebp
rcrb
popa
les
mov
in
pop
aas
pop
mov
pushf
pop
jmp
inc
cld
sub
push
xor
sub
das
bnd
dec
mov
sbb
jnp
int3
push
jb
cmp
outsb
jno
ljmp
imul
push
sbb
sub
ss
dec
mov
or
cs
insb
adc
jge
jae
loop
push
dec
ret
sbb
movsl
sbb
sti
outsb
lock
lods
or
sub
inc
cld
mov
pusha
repnz
jb
in
pop
or
xor
mov
cmpsl
sbb
add
pop
repnz
or
or
sbb
icebp
push
sub
and
xor
xor
and
sbbb
pop
push
loope
jmp
adc
lock
insb
repnz
sub
fimuls
sarl
cld
outsb
dec
dec
sti
sahf
test
jb
lock
popa
inc
mov
out
popa
xchg
dec
sahf
repnz
and
mov
xor
mov
lods
fdivl
mov
mov
sub
repnz
loop
or
data16
push
imul
stos
insb
or
in
fmull
push
jb
jl
es
add
je
cld
stos
jnp
pushl
or
adc
jl
popa
aas
inc
xor
sub
fldcw
cmp
fld1
outsb
push
movsb
psrad
stos
push
loop
popa
jl
fcompl
mov
dec
sub
lret
outsl
scas
repnz
fyl2x
cmpsl
in
repnz
cmp
dec
or
outsl
repnz
outsl
and
es
fisubrl
xor
loop
and
das
and
mov
sub
stos
add
movsl
repnz
jecxz
mov
lock
sbb
sub
jg
movsl
cmp
inc
inc
shlb
popa
push
add
repnz
test
inc
fistpll
fbld
cmp
test
adc
jmp
repnz
dec
sub
mov
push
sub
insb
cmp
mov
data16
sarl
stos
repnz
jmp
jmp
sub
dec
pusha
jae
test
sbb
outsb
rdtsc
cs
ljmp
mov
sti
push
fnstcw
pop
scas
repnz
sti
fcmovnu
pushf
sbb
mov
mov
push
lea
dec
loopne
pushf
cmp
push
and
push
rorb
mov
add
inc
sti
leave
repnz
push
dec
sti
lods
repnz
test
bnd
cmp
mov
mov
push
iretw
mov
mov
mov
fs
in
jb
int3
pusha
push
sbb
dec
jno
outsl
sub
jae
pop
pop
repnz
pop
lods
lcall
inc
imul
movsl
je
or
pushf
movsl
sub
mov
sub
repnz
lahf
push
sbb
sahf
pop
out
or
scas
aad
sub
jle
sub
icebp
in
or
movzwl
bnd
and
notl
repnz
fisttps
outsb
or
enter
dec
pushl
xchg
pop
loop
cmp
jno
icebp
pop
sti
test
repnz
push
hlt
les
lods
mov
push
loope
jo,pt
xor
pop
call
iret
out
inc
sub
hlt
push
mov
mov
lods
orl
loopne
xor
mov
orl
pop
mov
jb
dec
sub
lods
subb
test
ljmp
mov
push
pusha
insb
out
out
enter
push
sub
insb
cmp
xor
repnz
insb
shrb
leave
icebp
iret
ret
jg
jl
leave
mov
mov
andl
daa
dec
dec
repnz
insb
rclb
cmp
in
jbe
ljmp
jno
repnz
xor
push
stos
lock
sub
cvtps2pd
bnd
push
add
adc
and
adcb
pop
insb
rcr
pop
inc
mov
and
xor
ds
repnz
sbb
popa
ljmp
mov
mov
daa
loope
pop
loope
pop
push
imul
insb
fdivr
stos
pop
icebp
fildll
daa
insl
or
mov
mov
cmp
adc
mov
push
loop
repz
cs
cmp
jbe
mov
lods
jbe
aam
mov
loopne
sub
or
scas
das
repnz
dec
pop
sub
loop
out
aas
pop
dec
fidivl
fildll
fucomip
loop
adc
es
mov
popa
inc
loopne
cmp
pop
int
shr
inc
aas
pop
dec
test
jo
fbstp
scas
out
sti
je
test
jmp
push
loope
mov
cmp
popa
outsl
out
dec
mov
inc
mov
popa
jns
jne
mov
push
push
loop
lods
pusha
aam
ljmp
scas
or
loop
repz
cmp
sbb
lock
sub
loop
lock
sti
jl
mov
cs
pop
cli
jb
dec
aas
mov
inc
push
sahf
std
push
jo
faddl
pslld
pusha
loop
cmp
cmp
cmp
repnz
loope
push
add
and
push
sub
add
sbb
out
out
pop
in
jo
inc
icebp
das
sub
dec
dec
xor
jno
jo
in
inc
repnz
mov
xor
cmp
lock
sub
nop
insb
xchg
leave
sub
loop
dec
sub
scas
repnz
jb
mov
iret
loop
adc
jno
xor
lock
insl
iret
loopne
int3
push
jb
adc
scas
mov
loopne
or
lods
addb
jl
test
adc
shlb
pop
mov
sbb
in
fimuls
lcall
ds
jmp
addr16
cmp
jbe
test
dec
cmp
pop
sahf
cmp
sti
push
insb
frstor
movsb
insl
loop
inc
mov
sub
push
sbb
std
push
cld
and
rorl
loope
cmp
cmpl
arpl
loope
mov
in
dec
popa
push
iret
lods
ficomps
xor
sahf
jg
in
fisubl
test
xor
fisubl
lock
loop
pusha
cs
loop
stos
xor
inc
push
pushf
mov
out
xor
mov
sbb
bound
outsl
pop
std
call
es
outsl
sbbl
loopne
and
sub
cs
xchg
xor
outsb
clc
ljmp
xor
and
int3
movsl
xor
das
pusha
insb
loopne
jno
jb
in
out
sub
imul
ds
jecxz
imul
movsb
out
pop
mov
push
sub
mov
inc
arpl
lods
cs
mov
push
mulb
xor
push
arpl
or
in
jb
jmp
popa
push
outsb
add
inc
in
mov
callw
mov
stc
je
xchg
in
imul
lods
shrl
mov
push
loopne,pt
mov
push
jo
outsl
mov
jb
outsb
inc
xor
sbb
xor
out
repnz
push
popa
and
push
lods
cmp
bound
imul
cmp
xor
pop
sub
divl
outsl
xor
lods
call
imul
scas
ljmp
aas
in
and
mov
cs
mov
jo
jb
sbb
xchg
cmp
shrl
mov
repnz
dec
jmp
bound
imul
pop
insl
outsl
mov
push
push
insl
out
pop
rcl
loopne
jno
test
into
and
sub
subb
xor
add
out
insb
js
jno
push
adc
mov
icebp
scas
outsb
dec
hlt
fimuls
inc
stos
out
sahf
mov
jbe
test
inc
outsl
popa
out
push
sahf
mov
cmpl
leave
and
addr16
cwtl
mov
insb
push
jg
out
inc
sbb
mov
dec
jno
pop
cs
mov
pop
popf
icebp
mov
cli
sbb
push
inc
insl
out
out
sub
outsb
or
mov
adc
and
loop
insb
aaa
data16
jle
pop
jp
jb
shrl
daa
imul
mov
cltd
jb
lret
mov
adc
inc
or
out
add
jno
sbb
pop
cmp
push
sub
xor
int3
in
clc
daa
mov
jno
jle
cmp
dec
adc
push
jl
push
arpl
inc
call
in
and
adc
fwait
jp
and
push
or
mov
sub
jecxz
std
leave
imul
insl
sub
mov
push
call
test
pop
sub
xchg
inc
out
push
pop
call
insb
shlb
pop
in
adc
pop
outsb
movsl
jno
imull
xchg
cwtl
in
mov
jns
sub
push
imul
addr16
mov
stos
jge
popa
xor
sub
mov
lock
movsb
data16
sub
sub
imul
jnp
xor
jno
xchg
outsb
pop
stos
dec
dec
and
inc
sbb
inc
out
or
or
sub
imul
inc
out
add
jno
jno,pn
fimull
push
dec
xor
out
lret
pop
or
cs
daa
fisubl
push
add
add
shl
pop
push
loop
cs
insl
mov
leave
push
call
lds
xor
cs
repnz
push
or
sub
xor
pop
lds
jno
lret
cs
push
into
xor
push
mov
mov
xchg
xor
mov
push
iret
cs
fisubrl
xor
xchg
call
ret
mov
push
arpl
dec
pop
clc
cmp
dec
cmc
lahf
in
dec
push
lret
arpl
or
adc
int3
loop
fistpll
arpl
cmp
sub
out
aad
cmp
adc
cmpsb
xchg
cmp
je
and
lret
arpl
sbb
fs
jp
imul
arpl
pushl
jle
outsb
xchg
adc
arpl
xchg
dec
arpl
arpl
jmp
insb
pop
and
push
pop
mov
mov
jnp
je
arpl
and
jbe
adc
xor
mov
imul
in
mov
ret
ds
cmp
cmpsl
mov
ret
icebp
test
and
repnz
fwait
push
cmp
mov
xchg
arpl
dec
sbb
mov
push
fistpll
inc
xchg
out
cmpsb
lock
jge
shrl
scas
add
xor
lcall
jns
out
ror
xor
cmp
arpl
cmpsl
adc
mov
lds
add
sbb
add
fdivs
mov
push
arpl
stos
jnp
mov
adc
mov
jne
dec
xlat
push
out
out
fisttps
outsb
scas
out
inc
cmpsl
dec
push
jge
fsubp
hlt
divl
filds
arpl
lea
add
mov
out
jp
adc
inc
arpl
fucom
fmull
sbb
lcallw
outsl
repz
xor
imul
imul
fmuls
ds
adc
push
and
dec
sub
cld
mov
scas
mov
and
rcrb
nop
pusha
roll
sbb
jp
and
arpl
outsl
jb
xor
in
imul
sub
or
popa
mov
outsl
adc
xchg
insb
cmp
mov
iret
xor
jmp
sub
into
outsb
test
fstl
xchg
arpl
int3
adc
xchg
inc
mov
add
repnz
sub
or
dec
sbb
loopne
jnp
xor
add
mov
mov
fildll
arpl
call
push
xlat
jbe
add
int
jo
adc
fists
lods
xchg
pop
dec
add
xor
sub
xor
and
fidivl
adc
jge
rol
push
popa
std
mov
sbb
faddl
push
lahf
cmp
call
sbb
sbb
mov
std
mov
xchg
xor
lea
arpl
adc
insb
sti
push
mov
test
cmp
inc
mov
pop
cwtl
push
xchg
inc
cmpb
ljmp
xor
fldt
out
arpl
test
leave
jns
adc
cmp
jno
xchg
sub
add
loopne
pop
addr16
cmc
sub
pusha
dec
lods
mov
mov
fs
out
arpl
cmp
mov
repz
dec
pusha
jle
imul
pop
movsb
sub
arpl
repz
lahf
sub
imul
adc
dec
inc
arpl
mov
xchg
scas
inc
lea
xchg
mov
sahf
outsb
inc
aas
adc
imul
mov
adc
out
dec
inc
inc
iret
nop
inc
fildll
sub
jns
loop
push
push
cs
cmpsl
iret
sbb
sbb
enter
jmp
xchg
mov
clc
insl
xchg
pop
add
push
mov
outsb
aas
insl
fwait
jle
jcxz
gs
jnp
arpl
add
mov
arpl
test
subb
and
std
aaa
jmp
or
mov
adc
scas
mov
bound
jo
cmp
dec
fbld
mov
mov
out
ret
fstpt
add
jno
test
arpl
loop
xchg
mov
lds
or
test
cmp
loope
enter
push
inc
mov
mov
imul
and
fbld
insb
jmp
mov
pop
gs
sub
xor
adc
stos
arpl
mov
imul
jg
adc
push
out
repz
and
sbb
jg
mov
and
inc
push
push
arpl
or
std
and
pop
and
repnz
lret
int
bound
arpl
add
scas
js
jbe
in
mov
scas
test
add
repz
js
arpl
cmp
sub
loop
mov
mov
pop
xchg
cld
fimuls
xchg
push
ja
cmp
adc
je
sbb
add
cmp
test
outsb
repz
pop
in
jmp
mov
and
and
jp
loop
repz
arpl
arpl
dec
sub
sbb
mov
jbe
xor
rcl
ret
xchg
insb
lret
in
scas
pop
in
arpl
inc
jmp
iret
xor
rcl
add
imul
ljmp
add
jo
jmp
mov
dec
imul
cmp
adc
fsubs
insl
fstpt
push
insb
push
aad
add
inc
inc
insb
cltd
leave
stos
cmp
jl
or
add
insl
dec
sahf
shlb
arpl
add
popf
hlt
xor
add
stc
in
aam
mov
xchg
test
push
arpl
gs
arpl
popf
pop
xchg
xchg
xchg
arpl
xor
or
xchg
enter
mov
mov
pusha
lea
call
call
call
bts
mov
xor
dec
jmp
dec
in
dec
pop
adc
es
dec
push
js
jl
add
fsubr
mov
jmp
in
out
rorl
lock
adc
mov
push
mov
repnz
test
add
push
mov
or
popf
pop
arpl
rorl
and
ficompl
mov
out
mov
pop
dec
inc
pop
inc
push
push
xor
sbb
or
xor
repz
shlb
std
pop
pushf
pop
adc
push
outsb
dec
pop
ja
pop
inc
fisubl
gs
imul
xchg
fs
xchg
jg
push
add
pop
push
pop
cmp
sbb
inc
pop
cmc
shrl
cmc
pop
jae
inc
data16
push
jl
ret
imul
xchg
cmpsb
sbb
clc
push
inc
sbb
int3
push
cmp
cld
movsl
xlat
sahf
jnp
out
cli
vpsubd
rol
call
mov
sbb
add
clc
stc
pusha
cmp
cmp
pushf
lea
jb
call
pusha
mov
pushf
mov
movw
pushf
pushl
ret
call
test
inc
pop
adc
xor
jo
inc
pop
dec
insl
push
adc
inc
call
pop
add
sub
mov
dec
mov
xor
ret
pop
mov
push
cmpsl
sub
cmp
inc
sub
lds
and
std
or
push
inc
adc
pusha
imul
fs
daa
adc
and
jns
xchg
fs
je
pusha
bt
stc
call
sbb
dec
pop
adc
xor
sub
pusha
dec
push
jns
or
pop
xor
push
inc
sbb
xor
das
pop
mov
fs
cwtl
ret
jno
inc
add
aaa
popa
test
adc
ret
lods
mov
repz
sbb
addl
or
or
cmp
inc
movsl
sbb
and
mov
pushf
mov
fdivrs
sub
aas
test
stos
xchg
push
jmp
xchg
push
adc
stos
xchg
mov
push
or
sub
add
dec
mov
xor
fistpl
fcomi
xor
add
dec
bound
in
in
int
nop
gs
cmp
lret
hlt
add
pop
jecxz
in
xchg
movsb
mov
mov
test
aaa
outsb
cmpsl
sub
adc
popa
pop
sub
add
dec
pop
jns
adc
push
insl
enter
adcb
add
add
inc
add
add
pop
lret
decl
movsbl
pop
pushf
pushf
pushl
ret
pusha
jmp
call
cmc
jl
pushf
test
sub
lea
jmp
pop
mov
pushf
pushf
lahf
movsbw
lea
jmp
test
and
pop
lret
test
xor
and
push
or
add
xchg
ljmp
ret
faddl
add
cmp
test
cmc
xchg
mov
dec
imul
inc
dec
or
pop
jbe
sbb
rcr
mov
jmp
fnsave
cli
add
xor
mov
loop
cmpsb
fcmovnbe
lods
mov
mov
and
xor
loope
ds
sub
vpsadbw
rolb
jmp
out
clc
jmp
dec
test
jp
lea
jne
pusha
pusha
jmp
push
imul
cmc
cmc
add
push
mov
push
pushf
lea
jmp
clc
test
call
add
movb
pushf
lea
jmp
movl
pusha
mov
pushf
lea
jmp
pushl
lea
ja
pushf
sub
mov
add
shl
add
add
shld
inc
rcr
rcr
mov
rcr
rcl
mov
pusha
repnz
call
pushf
pusha
jmp
mov
lea
jne
pushf
movb
lea
mov
cwtl
mov
pushf
lea
pusha
mov
pusha
push
movl
mov
push
pushf
mov
pushf
pushf
mov
movb
pushl
ret
pushl
sub
pusha
clc
clc
test
pushl
popl
pushf
test
clc
bt
cmp
pushf
call
mov
push
mov
pushl
pushf
pushl
ret
push
or
push
adc
xchg
lods
jmp
nop
mov
shr
rclb
popf
lcall
cmpsl
sbb
mov
pop
pusha
inc
cmp
fimuls
test
lds
cwtl
dec
xchg
xchg
stc
pop
loope
test
lods
mov
add
mov
cmpl
jmp
out
dec
jae
xchg
push
adc
fs
jne
inc
aaa
xor
xor
setae
and
mov
bt
not
sbb
add
rcr
mov
stc
pusha
cmp
pushf
test
jmp
sub
cmp
cmp
jmp
adc
push
adc
dec
push
dec
stos
mov
and
rolb
add
add
push
adc
or
insb
pop
sbb
in
ss
mov
shl
scas
sti
loope
pop
jb
jecxz
pop
mov
je
jg
xor
dec
mov
cmpsb
mov
insb
pop
inc
mov
repnz
aam
test
xor
pop
out
ret
mov
adc
fldl
sbb
push
push
repz
lahf
mov
out
cmc
fdivp
test
mov
lahf
movsb
mov
add
add
lods
in
decl
pop
rclb
repnz
mov
nop
mov
and
int
cmp
dec
int3
sub
shr
and
ret
clc
in
xchg
lea
jb
popf
sbb
and
movlps
mov
cwtl
outsl
dec
jbe
pop
data16
es
nop
inc
push
push
or
xchg
xchg
es
fcmovbe
mov
push
or
inc
pop
dec
data16
aaa
sbb
fs
dec
push
fs
je
in
pusha
pop
and
dec
lret
xchg
push
adc
pop
jl
jo
je
push
dec
je
jb
mov
leave
es
mov
adc
sbb
and
sbb
cltd
lock
addl
xchg
ss
leave
fmull
mov
inc
dec
mov
rclb
push
jmp
cmpsb
xchg
pop
dec
sub
inc
insl
inc
fisubs
adc
nop
xchg
addb
fcmovnb
out
in
lods
mov
imul
jbe
pushf
cmp
mov
lea
movzbw
jmp
cwtl
mov
rcl
xor
and
neg
add
rcr
inc
shl
mov
stc
bt
pushf
test
movb
call
push
inc
mov
adc
pusha
jae
jg
imul
sub
pop
addr16
dec
mov
sti
popf
or
neg
fcompl
fwait
stc
pop
aas
pop
scas
sbb
xor
cs
xor
iret
test
loope
lret
inc
pop
roll
adc
mov
repz
cld
xlat
in
ret
int3
repz
fstpt
push
pop
xchg
std
into
stc
mov
push
adc
fstl
repz
cmc
ljmp
jge
xlat
add
bound
pop
jp
pop
ja
inc
jbe
jnp
inc
push
or
stos
leave
jae
jp
jle
pop
or
sbb
cli
jne
inc
pop
inc
push
adc
push
pusha
and
cmp
icebp
ss
xchg
fucomp
add
jecxz
stos
mov
lret
add
adc
cmp
xor
cmp
sub
push
adc
push
movb
movw
inc
call
lea
je
pushf
cmp
sub
push
cmp
lea
jo
pushf
movb
lea
ja
push
push
jmp
lea
jb
clc
clc
pusha
stc
cmpb
pusha
call
inc
movzbw
bsf
mov
bt
cmpb
call
shr
test
mov
cmp
pushl
call
pusha
pushf
xchg
pushf
mov
call
movb
bswap
bswap
pushf
mov
jmp
pusha
mov
push
push
pushf
pusha
lea
jmp
neg
shld
mov
call
call
ret
push
adc
in
cmpsl
lcall
stos
mov
lock
cmc
xor
inc
pop
push
data16
mov
std
das
sbb
sti
adc
ret
fstpt
inc
cld
push
xchg
mov
fiaddl
xchg
scas
or
aaa
scas
and
xor
ss
int
dec
dec
fs
mov
cmpsb
cltd
fcom
les
loopne
lock
sahf
daa
xchg
xchg
add
inc
jl
mov
call
not
pushf
ror
pusha
call
lea
jne
pushf
pusha
pushl
push
mov
pushf
push
mov
jmp
lea
jae
clc
bt
stc
xor
pusha
pushf
lea
call
push
lea
jae
sets
inc
mov
pusha
mov
inc
pushf
pusha
jmp
rol
dec
inc
movb
stos
pushf
jmp
pushf
push
inc
movb
pushl
test
xor
test
mov
clc
test
call
in
sbb
dec
adc
xchg
mov
mov
jmp
mov
insl
xor
or
add
and
inc
loopne
aaa
loopne
add
jmp
std
stos
or
and
mov
enter
lock
dec
xlat
out
push
stc
pushf
xchg
lcall
outsl
mov
dec
sub
cmp
adc
add
add
jl
inc
imul
cmp
fwait
pop
xor
sbb
push
push
movsl
dec
adc
dec
ja
inc
jbe
jb
push
inc
push
dec
push
dec
rcrb
add
out
repz
sub
add
adc
andb
je
xchg
repnz
xchg
cmp
push
dec
adc
sbb
fsubr
mov
jb
shlb
test
and
into
add
shr
enter
mov
mov
push
jne
and
mov
add
dec
adc
cltd
fdivrp
mov
fcomi
fnsave
popa
imul
cmpsl
out
sub
xchg
cld
xchg
and
adc
aaa
push
push
dec
jae
lock
xchg
and
sub
daa
and
addr16
test
pop
add
add
mov
push
xor
mov
push
mov
cld
aad
das
jns
cltd
shrl
adc
push
jne
xor
aaa
or
add
bound
xor
pop
mov
stos
dec
dec
pop
js
and
insb
das
cmp
and
add
adc
js
lcall
clc
mov
pushf
call
bt
cmp
movb
push
lea
ja
adc
push
mov
sub
or
stc
lea
add
pusha
mov
rcr
inc
mov
pushf
repnz
pusha
pushf
pushl
lea
jne
lea
cwtl
pusha
lahf
movb
pop
lea
mov
pushl
push
pushf
setg
lea
pusha
call
loop
in
adc
push
arpl
bound
imul
inc
add
xor
inc
push
and
outsl
dec
push
pop
xor
pop
js
jnp
cltd
cmp
pop
sbbl
scas
icebp
mov
xor
jns
test
cmp
sbb
push
pop
or
ret
inc
or
out
sub
mov
fisubs
fisubs
hlt
pusha
ljmp
fxch
sbb
iret
add
cmc
ljmp
aad
shll
sub
sub
call
add
inc
gs
outsl
fs
gs
imul
add
ret
mov
jmp
rcrl
add
push
push
imul
outsl
inc
inc
sub
xor
lcall
or
mov
rol
or
in
and
mov
mov
and
mov
cmp
je
pop
dec
jp
jbe
push
jne
pop
dec
adc
jecxz
mov
aaa
dec
adc
sbb
popa
and
sbb
adc
xlat
and
mov
sbb
adc
push
cmp
pop
or
adc
push
cmp
jae
push
pop
pop
sbb
or
dec
in
add
and
inc
mov
stos
lods
sahf
xchg
jmp
jle
sub
stc
dec
adc
loop
in
aad
mov
lods
sbb
sbb
inc
xlat
and
ja
inc
cltd
xchg
shl
lret
mov
mov
insb
dec
pop
xchg
jbe
je
lods
daa
xor
cmc
loopne
and
mov
sbb
push
jns
popa
rcr
stc
fists
add
xor
mov
mov
or
jbe
lcall
repz
mov
in
ret
fcomps
or
ret
cmpsl
jmp
movl
call
push
inc
jmp
adc
pop
pop
push
mov
inc
jp
pop
add
pusha
jno
stc
out
ret
sub
shl
fmulp
andb
inc
xchg
shr
jge
sub
mov
or
mov
xchg
in
and
cmp
jl
inc
jg
pop
and
or
test
enter
jbe
and
pop
lret
faddp
loop
mov
xorl
mov
inc
dec
sub
sub
adc
jnp
hlt
movsb
add
mov
aam
aas
pop
hlt
frstor
adc
nop
xchg
sub
and
dec
nop
stos
pop
sub
leave
fiadds
cmp
mov
xchg
rol
cld
iret
in
repz
lods
js
sub
jmp
adc
loop
aam
subb
stos
ror
sub
call
sbb
repz
aaa
or
push
jnp
out
jle
pop
and
ss
push
jno
nop
test
pop
sbb
sbb
add
inc
push
repz
inc
ja
push
jns
jne
xchg
ret
sub
cmp
fsubrp
shlb
addb
pop
jnp
dec
jl
sub
in
jle
cmp
dec
adc
jg
jge
sub
add
jge
fstpt
pop
inc
jmp
je
fiadds
scas
sbb
push
jge
out
ret
call
mov
inc
jecxz
punpckhdq
mov
push
xor
adc
ja
lahf
mov
mov
data16
roll
jp
jb
cs
out
jle
and
in
int
cld
dec
adc
cmc
ret
lret
sahf
xlat
sarl
sahf
mov
les
shl
pop
popa
and
rsm
pop
mov
adc
and
adc
insb
dec
inc
jae
push
rcrb
inc
mov
adc
mov
mov
ficompl
mov
xchg
inc
aaa
sub
add
xchg
cmovl
aam
lahf
mov
imul
out
les
stc
in
lahf
ror
cmp
out
imul
and
gs
push
fsubrl
xchg
lods
mov
or
dec
push
jl
adc
arpl
ljmp
ret
jne
rcrb
push
movsl
popa
iret
lret
cmp
push
dec
lods
xchg
addb
add
loope
cltd
subb
cltd
leave
ret
in
les
jmp
sahf
imul
adc
mov
mov
xorb
shl
dec
jmp
lret
lds
lds
jecxz
dec
fisttpl
pop
faddl
jp
enter
push
arpl
dec
inc
js
sub
xor
scas
push
jecxz
dec
dec
inc
pop
ja
movl
movl
mov
pusha
pushl
ret
stc
cmp
jmp
mov
add
add
add
add
inc
push
add
popf
add
add
push
add
add
add
inc
push
add
add
push
lea
ja
push
pushf
bt
cmc
imul
push
push
add
movb
pushf
pushf
lea
jmp
bswap
mov
pushl
pushf
lea
ja
push
mov
call
call
aam
adc
pop
xor
dec
push
pop
fs
add
push
inc
push
sbb
orb
fildll
in
fbstp
mov
lds
ret
lock
loop
push
dec
or
fnstenv
gs
and
es
jmp
pusha
push
pusha
je
mov
mov
movsl
mov
sbbb
inc
jle
mov
call
call
clc
pushl
popl
clc
stc
call
pushf
inc
mov
mov
inc
setno
inc
pusha
not
pushf
mov
lea
push
lea
call
jmp
stc
stc
xor
pushf
pushf
lea
call
push
pusha
jmp
mov
pop
add
daa
push
aas
sbb
sub
pop
push
pop
xor
faddl
inc
sbb
mov
iret
lea
loopne
mov
inc
add
dec
pop
xor
imul
inc
mov
inc
lods
sbb
cmp
jns
test
xor
sarb
pop
data16
add
in
mov
inc
frstor
dec
jl
movsl
clc
mov
adc
inc
cmp
cli
iret
xchg
ret
or
mov
xchg
ret
xchg
or
imul
cmp
insb
inc
rcrl
add
or
ss
adc
adc
push
cmp
dec
imul
int3
xor
pop
pop
xchg
mov
stc
out
arpl
adc
jne
sub
inc
leave
loop
arpl
mov
jbe
sub
mov
ja
ds
jne
dec
adc
or
jl
and
add
cmpsb
jp
jle
sbb
mov
fisubs
jo
fucomp
mov
fcmovne
cmp
cmp
adc
inc
fs
or
cmp
push
cmpsl
scas
jmp
inc
push
or
cltd
gs
add
sbb
sahf
repz
cmc
scas
sub
sub
rcrl
cmp
xchg
mov
in
push
enter
or
sbb
cmp
fs
jb
pop
pop
mov
popa
hlt
mov
xchg
lcall
das
imul
rorl
inc
pop
pop
xor
test
sub
push
and
in
int3
cmc
mov
nop
leave
rcrb
add
stos
inc
popf
leave
xchg
dec
pop
jg
xor
ficomps
inc
jnp
cld
fistl
dec
aad
jne
lods
pop
xor
dec
push
or
cmp
push
leave
xchg
adc
push
xchg
dec
in
push
pop
jb
js
repz
mov
push
add
fadds
jge
test
mov
xchg
iret
ret
popf
inc
jg
add
xchg
out
fmuls
push
mov
xchg
rclb
es
dec
adc
mov
imul
pop
pop
test
dec
adc
aas
mov
xlat
xchg
jne
out
sbb
add
xchg
test
popa
jnp
dec
pop
inc
sbb
sub
xchg
fwait
mov
mov
xor
stos
pop
adc
cmpsb
mov
jae
sub
or
in
das
jnp
arpl
add
dec
cltd
push
dec
addr16
pop
aas
jl
es
movsb
rolb
push
sub
jns
mov
mov
mov
sub
fsubr
mov
pop
mov
mov
or
jle
and
xchg
xchg
xor
ret
dec
or
das
mov
jg
and
xchg
in
test
mov
in
adc
movl
dec
in
int3
popa
lahf
shlb
sbb
imul
jp
xor
xor
stos
loop
push
sub
int3
test
pusha
or
insl
jbe
push
lea
jl
jbe
mov
pop
and
sub
jns
test
sbb
and
mov
push
or
jne
dec
pop
inc
sbb
test
and
mov
sub
push
or
int3
sahf
inc
xchg
repz
es
pop
push
or
dec
lret
repz
out
sub
ffree
xchg
leave
bound
vpermt2pd
inc
in
mov
jecxz
in
mov
ja
dec
outsb
jbe
or
imul
and
dec
push
or
mov
fcomi
fmuls
cli
mov
sbb
xor
mov
lret
out
fcmovnbe
leave
popf
movb
jle
inc
popa
jp
cmpsb
push
dec
popa
ss
pop
add
xor
dec
sahf
mov
mov
sbb
je
or
sub
mov
sbb
push
and
pop
push
add
test
icebp
jmp
jne
sbb
add
stc
adc
stc
shl
cmpsl
sub
loope
scas
mov
jns,pt
mov
jl
push
lods
jne
dec
pop
inc
mov
lds
sbb
sub
popl
inc
jg
mov
test
push
je
jb
int3
lds
mov
ja
sbb
mov
mov
mov
movb
std
in
data16
loope
mov
lock
fisubs
and
inc
push
jae
inc
jle
icebp
pop
cwtl
aaa
xchg
icebp
ljmp
cwtl
in
out
rorl
lods
lret
mov
xchg
jmp
lcall
shll
loop
fisttpll
lcall
or
sbb
jle
leave
orb
dec
bound
imul
inc
sbb
testb
push
movsb
ret
cmp
fisubl
inc
bound
or
enter
inc
gs
add
xchg
into
xchg
mov
shll
push
push
cmp
jg
lcall
sbb
mov
sbb
addl
jo
arpl
arpl
int3
mov
shlb
lods
daa
pop
insb
cmp
and
sbb
test
xchg
lret
mov
ret
in
mov
and
jb
push
bound
xor
push
or
aad
call
add
data16
loope
sbb
push
ljmp
roll
dec
pop
ljmp
int
cmc
lods
and
xor
aaa
pusha
ds
push
jne
jle
sbb
js
jns
addr16
loope
push
pushf
insl
cmp
push
xlat
mov
aam
xchg
test
cmp
cmc
lret
add
or
fldl
in
int3
imul
inc
dec
adc
jnp
cmp
sbb
arpl
int
sub
lcall
scas
jnp
test
and
push
daa
popf
mov
inc
stos
int
iret
lock
jae
dec
pushf
aad
fdiv
ss
add
scas
push
push
nop
mov
into
out
lock
pop
hlt
mov
add
sbb
mov
jl
cmp
outsl
dec
push
movsb
sub
dec
pop
jb
pushf
ret
mov
mov
jne
es
push
or
jne
xor
push
push
push
cmp
pop
sbb
mov
int
mov
mov
lret
lahf
test
fisttpl
icebp
ljmp
mov
jnp
rcll
imul
in
lret
sahf
shlb
test
imulb
sub
and
pushf
cmc
inc
mov
mov
add
jbe
test
stos
mov
pop
imul
mov
stos
out
xchg
mov
jne
or
jb
pushf
cmc
push
out
call
loopne
call
fs
push
outsb
pop
cld
aad
sub
mov
orl
pushf
fnsetpm(287
mov
mov
xchg
mov
adc
mov
stos
cli
movsb
xchg
xor
es
shl
in
testl
dec
jb
cmp
mov
cmc
mov
outsl
xor
loope
jge
icebp
cmc
pop
sbb
mov
inc
mov
addb
mov
sarb
je
xor
or
jg
pusha
mov
in
inc
stos
and
cmp
pop
or
inc
push
push
push
fdivrp
stos
pop
ret
call
adc
jg
cld
inc
int
test
and
std
out
add
xchg
mov
push
out
dec
push
jbe
ss
xchg
in
jnp
cmp
dec
sub
pusha
rcr
lcall
shl
mov
fdivrp
into
mov
lret
mov
mov
rorb
add
xor
cmp
sub
sbb
push
or
lret
pusha
lea
je
stc
jmp
push
lea
jb
inc
jmp
bt
cmc
stc
add
pusha
mov
mov
pushf
lea
jmp
pushf
lea
jne
pushf
pushf
pusha
mov
stos
pushf
mov
pushf
lea
jmp
jbe
or
cmpsl
add
cmpl
jns
xlat
jb
loop
loopne
push
popa
cmp
dec
pop
bound
adc
adc
mov
add
pop
push
testb
push
punpckhwd
or
jno
jb
or
sbb
es
sub
nop
lcall
sbb
mov
fcmovbe
test
sbb
push
cmp
dec
js
or
push
add
jmp
sbb
xlat
cld
jbe
mov
lods
out
jl
add
pop
jge
dec
rcl
add
mov
iret
cwtl
cmp
cmp
or
or
add
sbb
inc
pop
push
ja
xlat
addr16
sub
push
mov
cmp
jp
jle
or
push
ja
jae
jae
add
xor
jp
dec
inc
xor
push
mov
neg
push
int3
gs
pop
inc
sbb
jo
and
mov
xchg
and
dec
add
data16
and
dec
or
xor
add
sub
aaa
adc
cmp
sbb
push
add
adc
nop
fwait
xchg
xchg
mov
lea
call
pushf
mov
adc
pusha
pusha
lea
jae
call
lds
cmp
popf
andb
fcmovne
sti
out
out
push
push
rcrb
add
out
sub
xorb
xchg
insl
jne
bound
or
xchg
xchg
pop
add
sbb
xor
mov
repnz
in
cmc
stos
pop
iret
cmp
adc
lods
cmpsb
ds
add
mov
popa
cltd
adc
adc
pop
das
or
inc
bound
jne
pop
dec
or
xchg
xor
arpl
adc
inc
pop
pop
add
push
not
bt
rol
movb
pushl
lea
jnp
inc
push
stc
pushf
shr
push
pusha
lea
je
push
jmp
pusha
clc
add
pusha
dec
pushf
call
pushf
pushl
mov
lea
jne
sar
test
shl
add
mov
shl
sub
pusha
pop
lea
clc
sub
test
cmp
cmp
pushf
pushl
popl
clc
pusha
cmc
test
cmp
pushf
pushf
movb
lea
ja
inc
pusha
add
ror
sub
dec
sub
add
bsf
xor
mov
neg
mov
or
pushf
mov
cmp
movb
clc
repnz
movw
push
call
jns
push
mov
mov
lea
je
push
cmc
pushl
add
call
call
lea
call
pusha
push
lea
jmp
not
adc
inc
shl
sub
mov
pushf
movzbw
shr
cmc
shr
mov
neg
movzbw
add
shl
bswap
add
test
adc
mov
jmp
pushf
shl
bt
cmc
mov
pushf
bt
repnz
pushl
call
pushfw
popw
cmp
ror
test
mov
cmp
add
jmp
jmp
cmp
call
jmp
rol
mov
pushf
inc
call
movl
lea
je
clc
push
bt
test
cmp
pushf
push
lea
je
cmc
bt
stc
cmp
pushf
call
pushl
movl
mov
mov
movw
mov
pushf
pushl
pushl
ret
dec
pop
in
adc
outsl
xor
push
cmp
pop
push
rol
int
sub
mov
or
aaa
pusha
sub
push
jne
jno
jne
insl
xor
iret
pop
or
hlt
leave
repnz
out
fcmovnb
fnsetpm(287
iret
mov
and
jecxz
jb
in
cmp
cli
mov
xchg
mov
inc
push
adc
leave
jnp
dec
push
addl
repz
adc
push
mov
in
rclb
add
imul
fidivl
add
and
dec
hlt
jmp
ljmp
lret
fcmovne
fadds
pop
jno
ja
test
push
inc
add
dec
inc
insl
pop
imul
pop
in
mov
xchg
or
inc
cmp
sub
add
leave
inc
repnz
mov
xor
jp
cmp
xchg
mov
fmul
xchg
mov
sub
jg
push
add
das
add
pop
cli
jge
and
hlt
test
or
js
addb
les
mov
outsl
add
les
xchg
lahf
mov
out
mov
into
ror
sti
mov
ret
ss
into
jecxz
inc
insb
dec
insb
jae
jg
or
pop
adc
add
js
or
es
stc
rcr
btr
mov
pusha
and
clc
add
js
add
pushf
pushf
movb
pushf
lea
jmp
mov
lea
jae
bt
jmp
dec
in
dec
cmp
es
or
popl
iret
clc
mov
mov
test
das
or
and
adc
adc
push
sbb
mov
sub
mov
mov
push
jg
mov
inc
lret
jae
sbb
arpl
pusha
ja
jnp
lds
int
ljmp
or
add
test
jmp
pushf
lea
jae
call
rorl
add
sub
pop
dec
inc
pop
addr16
inc
jbe
out
push
out
mov
mov
sarb
loopne
outsb
jbe
adc
les
inc
aas
jo
add
faddp
popf
xor
or
vpavgb
dec
push
mov
loopne
loop
cli
out
mov
jmp
jno
not
xchg
into
cld
stc
jmp
xchg
movsb
jecxz
out
cld
lret
call
shll
fisttps
cmp
pop
cmp
jne
cmp
cmp
clc
cmp
jmp
mov
push
movw
pushf
mov
pushl
ret
movl
inc
mov
push
pushl
lea
call
push
movb
call
call
push
push
pusha
movb
lea
call
push
jmp
movsb
std
aas
ss
aad
icebp
rcl
rol
xchg
addr16
fidivl
mov
test
cwtl
mov
sar
out
xorb
lock
scas
mov
xchg
cmp
cmpsb
stos
push
inc
in
xor
in
push
jp
aaa
sbb
jle
jbe
push
and
lahf
es
push
jge
inc
in
ss
add
cmp
or
bound
int
xor
push
pop
out
aaa
add
call
loope
rorl
mov
lock
repnz
push
push
mov
xchg
imul
add
jge
stc
sbb
test
jae
sbb
mov
ucomiss
or
leave
push
or
push
sub
dec
inc
jge
lock
jmp
out
aam
sub
int3
daa
cwtl
jl
in
scas
xchg
mov
fidivrl
cmp
xchg
mov
pop
cwtl
mov
xchg
xlat
lret
popa
jbe
aaa
lret
enter
jmp
enter
insb
int3
daa
cwtl
lea
inc
dec
push
jns
or
mov
loop
mov
popa
dec
popf
lock
negl
in
mov
push
or
stos
mov
mov
inc
pop
cmp
cmp
gs
push
or
mov
mov
mul
xor
shlb
fldt
jmp
mov
movsl
arpl
pushf
rol
enter
int3
jecxz
or
inc
bound
shlb
xor
insl
inc
jno
inc
dec
imul
fiaddl
ds
int
xchg
sub
or
adc
xor
jle
cmc
out
jmp
sbb
popf
lock
xor
sbb
or
or
fcompl
inc
xor
fcmovb
sub
dec
pop
mov
ffreep
mov
inc
loope
jnp
dec
sub
arpl
lods
push
daa
xchg
push
sbb
mov
rorb
sbb
cmp
neg
jle
xor
arpl
pop
adc
and
sub
sbb
xor
sbb
sbb
fadd
push
daa
xchg
dec
rcrl
sar
mov
push
je
sbb
fwait
mov
add
xchg
mov
adc
in
xchg
mov
ljmp
stos
mov
mov
jle
pop
and
dec
ja
sub
inc
dec
jo
lds
sub
mov
sub
sbb
fs
ja
dec
pusha
cmp
mov
aam
ret
cmp
push
aas
lar
inc
jb
push
outsb
push
inc
test
int3
dec
pop
jb
daa
push
xor
push
clc
shlb
dec
push
jle
xor
ljmp
sti
shll
stos
idiv
push
clc
add
aad
into
jmp
xchg
insb
jns
subb
cmp
xlat
mov
loopne
lods
mov
js
jns
lds
pushf
mov
adc
lea
push
pushf
pusha
jmp
jmp
mov
pusha
bt
add
pusha
mov
movzwl
stc
rcr
mov
call
inc
mov
xor
jae
imul
and
mov
inc
addr16
mov
popf
mov
fadd
imul
aaa
push
cmp
push
push
cwtl
icebp
int
jge
mov
cmpsb
jp
pusha
xor
es
ret
jb
xchg
add
test
cmp
push
std
and
pusha
xor
or
sahf
mov
push
pop
ds
inc
dec
mov
dec
jg
imul
pop
imul
jmp
lret
dec
bt
cmp
jmp
std
movsb
cwtl
xor
pop
push
pop
dec
jg
inc
dec
addr16
jnp
ja
pop
or
jnp
push
mov
sbb
dec
loopne
sbb
xchg
sbb
cmpsl
lret
jg
cmp
ficompl
mov
xchg
in
jbe
jle
lods
mov
nop
lret
dec
pop
add
test
std
lock
hlt
mov
xchg
mov
xchg
popf
sub
jl
or
sbb
jae
xor
stos
mov
stos
ret
aam
or
mov
push
fsubrs
popf
int
xor
or
push
dec
jp
data16
insb
imul
mov
dec
xchg
mov
mov
in
cmp
fsubrs
push
pushf
int
jae
jl
push
imul
add
push
outsl
jle
xchg
xchg
adc
xor
insb
sub
mov
jno
imull
push
fsubrs
mov
es
fs
push
fisubs
xor
add
sub
add
adc
aaa
xor
or
dec
or
push
ja
sbb
call
iret
shll
ljmp
ljmp
inc
fldcw
sti
les
shr
in
decl
call
add
jmp
mov
loop
out
fucompp
mov
dec
lock
xchg
cmpl
inc
pushf
pushf
bt
cmc
xor
jmp
xor
xor
inc
pop
and
inc
pop
jb
push
outsl
inc
push
pop
adc
jmp
out
mov
xchg
mov
loopne
jbe
mov
xor
jp
popa
xchg
jle
push
ljmp
mov
dec
ja
mov
xchg
out
cmpsl
mov
push
mov
or
or
xchg
ret
sar
loop
xchg
int3
stc
addb
pop
pop
push
mov
adc
in
xchg
mov
mov
mov
andb
pushf
pop
insl
jno
xor
add
and
lahf
mov
test
xor
adc
push
in
xchg
or
scas
or
sbb
push
jbe
adc
inc
mov
sub
movb
inc
popa
dec
sub
ds
push
jle
sub
out
sbbb
jmp
ror
xor
lods
and
jp
push
cmp
inc
jno
inc
sbb
fmul
in
jge
fs
jb
stc
push
cmpb
pushf
jmp
cmc
sbb
clc
mov
stc
add
clc
pushf
bt
mov
and
mov
movb
jmp
jae
push
jmp
jmp
inc
mov
cmc
push
pusha
push
sub
bt
clc
jmp
dec
clc
pushl
shl
jmp
pushl
mov
lea
jb
test
test
test
cmp
call
repnz
movsl
cs
push
insl
sub
or
jo
push
dec
jbe
jl
loop
iret
loope
mov
fmul
mov
xlat
xchg
sahf
cmc
loopne
mov
ror
pop
mov
push
test
adc
fmul
test
js
cmp
xchg
inc
mov
sti
out
loopne
cmpsb
mov
mov
cmp
movsb
xchg
cmpsl
aas
adc
jo
pushf
pushf
jmp
lea
ja
stc
call
push
paddsw
adc
test
sahf
mov
mov
dec
leave
pop
dec
ljmp
out
cmc
loopne
mov
push
or
pop
sbb
jae
inc
fwait
xchg
cmc
mov
movsb
std
aam
jne
fcomps
mov
lods
movsb
fsubs
outsb
mull
mov
lret
pop
inc
std
notb
out
addr16
push
nop/reserved
or
test
dec
cmpsb
push
cmp
cmp
push
mov
xchg
and
shll
jns
jg,pt
sub
dec
je
dec
jne
push
jnp
or
cmp
loopne
mov
lret
ret
dec
mov
xchg
lods
or
out
sbb
iret
mov
jecxz
sub
daa
addb
inc
cmp
sbb
push
and
je
jmp
cmp
pusha
mov
dec
and
out
pop
mov
cld
ffreep
xchg
sbb
mov
and
repnz
jg
dec
dec
in
mov
test
jp
pusha
inc
jle
js
cmp
loop
mul
mov
vpslld
jmp
mov
mov
fdivrs
push
mov
out
fsubrp
add
fildl
pop
add
add
mov
adc
pop
xor
adc
js
sbb
sbb
jo
ja
sbb
out
jecxz
mov
adc
ja
insb
fwait
xor
dec
sub
cltd
icebp
lea
jmp
xor
andb
jne
adc
dec
lret
jl
lods
inc
cmp
in
iret
popa
dec
sub
push
jae
push
sub
call
inc
jo
in
push
loope
mov
cwtl
sub
in
cmpsb
cs
dec
push
das
sbb
adc
or
testl
push
movb
and
call
lea
je
pusha
test
jmp
mov
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
call
lea
call
jmp
cmp
and
test
add
stc
jmp
call
hlt
add
sub
cwtl
mov
stos
out
sti
mov
mov
mov
inc
jns
mov
xchg
in
icebp
mov
mov
cmp
mov
fwait
les
sbb
jle
sbb
aaa
push
cmpsl
pop
xchg
in
push
push
push
jecxz
pop
pushf
scas
cmpsl
xchg
es
js
mov
rcll
mov
andl
call
rol
add
outsl
add
call
pop
pop
sahf
sub
mov
nop
or
ror
fxch
lds
mov
rcl
pop
or
ja
mov
dec
adc
mov
push
or
daa
js
mov
or
sbb
sub
sub
dec
sbb
aas
pushf
cmc
pop
add
pop
fs
mov
dec
pusha
lds
popa
jl
dec
dec
mov
sbb
inc
dec
inc
push
adc
and
xor
sub
inc
out
sbb
jmp
pusha
lea
ja
clc
sar
or
shl
sub
shr
add
rol
bt
mov
sbb
shl
shl
mov
cmc
bt
cmc
repnz
pusha
pushf
pushf
lea
jne
bswap
lea
jmp
sub
jmp
inc
sbb
sub
xchg
scas
mov
mov
cmpsb
into
test
inc
subl
stc
testl
insb
xor
loope
ret
push
lahf
test
xchg
pop
loop
push
test
sbb
jbe
mov
repnz
andb
sbb
push
mov
add
push
adc
jno
dec
push
cmp
and
sbb
sub
mov
jmp
adc
dec
popa
push
pop
popa
inc
push
or
mov
jae
ljmp
push
adc
dec
push
push
adc
adc
add
sub
xchg
stc
aam
rol
hlt
aad
icebp
aam
clc
idiv
lret
aam
int3
test
into
jle
outsl
sub
jo
adc
sbb
pusha
sub
sbb
push
imul
loop
hlt
add
loopne
lods
xchg
lret
xchg
les
add
dec
push
dec
mov
stc
push
clc
test
xchg
aaa
sbb
inc
ja
xor
inc
jbe
mov
dec
mov
adc
les
and
sbb
in
xchg
xor
leave
cld
cs
jns
pop
inc
push
adc
jns
sbb
std
pushl
mov
mov
mov
push
movb
pushl
ret
jmp
shr
rcr
push
rcr
movzbw
dec
shrd
mov
lahf
sub
bt
xor
ror
pusha
mov
lea
sbb
bt
lea
mov
bsr
mov
aam
bts
stc
mov
bt
shr
mov
clc
push
jmp
cmc
jmp
not
jmp
lea
call
call
call
lods
movb
test
xor
call
call
pushf
jmp
clc
push
imul
stc
stc
add
pusha
pushf
lea
jmp
call
lea
jne
call
sbb
aad
divl
ret
fsubrp
fdivs
outsb
gs
cmp
rcll
ja
jecxz
out
adc
add
sub
add
or
hlt
jge
cmc
jmp
pop
lock
cmp
out
and
xor
aaa
in
imul
popf
ja
sub
ljmp
cli
adc
dec
push
lcall
sbb
push
sbb
cltd
jp
jo
je
adc
pop
sbb
sub
sub
bound
cmp
imul
cli
push
frstor
pop
cmp
inc
mov
push
push
push
jle
arpl
rclb
jmp
fwait
fildll
inc
jnp
and
cwtl
stc
orl
dec
aaa
mov
mov
jecxz
xchg
xchg
daa
or
bound
sub
out
aam
or
jbe
lret
in
lret
repz
enter
xlat
xchg
xor
call
outsb
pop
jp
test
call
jmp
mov
mov
movl
movl
lea
jmp
shll
es
mov
sbbl
xchg
fcmovnbe
out
movb
xchg
cli
mov
jno
ja
jmp
adc
gs
inc
or
movsl
xor
lods
insb
jo
adc
mov
mov
loopne
fcompl
jle
pop
mov
out
mov
iret
imul
lcall
xchg
imul
ss
or
lcall
lods
mov
mov
mov
xor
mov
fs
jne
shl
rol
cmp
rcr
sub
jmp
call
bt
repnz
mov
lea
jae
jne
shl
ror
mov
rcl
shrd
btr
sub
bt
rcl
not
mov
mov
bt
test
stc
push
sub
jmp
add
inc
js
je
jb
arpl
jae
xchg
not
mov
lea
movsbw
call
fwait
ret
adc
and
jl
pop
push
jo
push
addr16
pusha
fstpl
js
ja,pn
sbb
ja
jg
out
popa
xchg
fstpl
pop
inc
push
dec
mov
fidivs
adc
cmp
jp
sub
inc
insl
ss
imul
mov
dec
xchg
gs
mov
fisubs
xor
stos
test
lret
aad
mov
inc
mov
fldl
es
cmp
jle
push
inc
push
xor
aaa
ja
dec
adc
jne
leave
jb
push
imul
imul
sbb
xchg
sub
dec
addl
mov
add
arpl
jmp
and
inc
adcb
sahf
test
out
pop
jbe
add
daa
lea
outsl
dec
xor
rcl
fcmovnbe
rclb
jae
push
mov
xchg
call
into
out
fsubr
fmul
fadd
loopne
nop
fwait
mov
mov
mov
aas
data16
and
pop
test
sti
mov
mov
test
xor
cmpsl
lods
lret
pop
jp
loopne
sar
scas
loopne
dec
xchg
mov
cs
sub
mov
pop
cli
sbb
stos
xlat
nop
mov
inc
inc
pop
nop
jg
pusha
push
jnp
add
sbb
lods
add
les
dec
jo
mov
out
aaa
add
aad
popf
mov
shl
into
shl
jmp
sbb
add
enter
gs
and
and
sub
lret
cmp
lret
mov
cmp
mov
jmp
lea
jne
setp
rcl
mov
shr
sub
shr
mov
clc
xor
pushf
add
not
adc
neg
shr
mov
test
push
test
mov
pushf
lea
je
call
sbb
insl
jp
jbe
jb
jp
add
and
inc
insl
cmp
std
fdiv
sti
push
aad
loope
push
pushf
sahf
jne
sbb
xlat
scas
adc
subl
enter
or
enter
clc
pop
mov
adc
pop
fnstcw
jg
xchg
stos
mov
cmpsl
sbb
push
xor
jp
adc
mov
fsubp
decb
push
mov
lcall
das
outsb
fld
fld
leave
fcmovbe
loop
sahf
xchg
mov
popa
out
sbb
outsb
cld
pop
xor
jb
mov
in
xor
loop
jb
subl
lock
std
std
xchg
xchg
fs
mov
ret
je
mov
lret
into
fucomip
cs
cltd
adc
sub
push
push
lcall
pop
jge
test
dec
and
aam
push
rolb
fsubl
adc
test
adc
iret
add
add
inc
mov
push
mov
sub
int3
pop
jb
or
enter
inc
adc
pop
pop
adc
sbb
js
sbb
xor
inc
push
inc
or
outsl
or
cli
mov
pop
inc
dec
sbb
push
movsl
sub
call
pop
add
inc
ljmp
push
xor
xchg
ljmp
mov
or
cltd
cmpsb
stos
xchg
mov
cmp
cld
into
or
mov
and
mov
mov
mov
jb
icebp
push
push
jbe
out
push
inc
pushf
lea
call
jmp
lea
jne
jmp
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
add
jns
jb
outsb
fs
outsl
add
inc
xor
inc
dec
dec
add
mov
sub
mov
sub
xor
data16
pop
mov
jmp
lea
ja
mov
add
sub
rcr
movsbl
push
lea
add
add
not
shld
shl
btr
mov
and
rcl
bt
jle
mov
stc
pusha
pushf
repnz
movb
pushf
pushf
push
lea
jne
pusha
movb
jmp
cmp
repnz
jmp
lea
jne
rol
stc
sar
shl
mov
bsr
xor
sub
sub
add
mov
pusha
cmc
push
pushf
sub
pushf
pushl
popl
cmc
jmp
pushf
seta
pushl
lods
stc
test
add
push
clc
jmp
lea
jg
pusha
movl
movw
pushf
movl
push
pushl
push
lea
jmp
cmp
xor
aas
jle
or
ds
cmp
jns
jecxz
and
push
dec
rorl
or
adc
ja
out
mov
xchg
push
lret
sbbl
cmpsb
icebp
in
stos
repz
nop
aad
movsb
rolb
pop
cmp
scas
and
pop
jmp
cmpsl
in
mov
je
enter
mov
sbb
or
pop
dec
inc
jns
gs
dec
pop
jns
fwait
and
adc
insl
sub
mov
pop
add
fs
push
faddl
pop
into
out
mov
xchg
in
and
inc
arpl
dec
push
push
ss
sub
sub
je
es
cmp
xchg
in
sbb
loop
leave
scas
mov
lods
mov
clc
xchg
cmp
dec
and
aam
mov
and
stos
dec
xchg
test
xchg
in
inc
orb
stos
testb
scas
lds
into
mov
push
push
pop
inc
push
inc
push
inc
sbb
imul
fdiv
data16
push
xchg
lods
lahf
mov
fwait
mov
pushf
int
adc
sbb
and
xlat
cli
shl
repz
xlat
faddp
fisubrs
adc
mov
mov
mov
adc
outsl
mov
stc
icebp
leave
xchg
dec
ljmp
sub
mov
inc
call
xchg
mov
test
mov
add
mov
je
les
imul
jge
jns
inc
jp
inc
mov
pop
adc
cltd
pop
mov
and
not
test
mov
pushf
repnz
call
cmp
push
lea
jbe
pusha
mov
xchg
pushf
push
test
add
pop
sbb
shrd
mov
shld
test
stc
pushf
add
bts
movl
inc
adc
mov
add
test
push
clc
cmp
pusha
mov
lea
jbe
dec
sub
btr
and
not
lea
mov
inc
bsr
sub
bsr
mov
shr
rcl
bswap
add
call
mov
pop
cwtl
cmpsl
stos
lahf
faddp
out
ljmp
mov
clc
push
lods
mov
mov
cmpsb
mov
xchg
test
xchg
mov
cmp
aaa
outsb
jmp
pushf
ljmp
loope
jecxz
jnp
sbb
out
rcl
popa
jae
mov
mov
mov
sub
addb
addr16
dec
adcl
shlb
in
lea
cmp
cmp
pop
xor
stos
xor
adc
das
loope
mov
sar
fucomp
mov
adc
into
pop
lds
dec
dec
inc
jg
dec
popa
pop
and
push
adc
push
sbb
rcrb
fs
ja
call
pushf
push
push
lea
call
test
cmc
cmp
jmp
pushf
jmp
pusha
pushl
movb
lea
je
bt
stc
cmp
sub
pusha
bt
cmp
pusha
pushf
jmp
mov
mov
test
fmuls
pop
insb
jo
sub
pop
sti
xchg
and
ja
jge
cli
adc
jb
cld
addr16
pop
add
jb
repnz
push
push
inc
pop
je
xlat
out
sbb
gs
clc
lods
xchg
and
test
push
outsl
lcall
add
fldt
hlt
ret
enter
in
fmul
xchg
sub
push
jl
lea
jne
call
sub
bt
cmp
pushf
jmp
jmp
push
testl
dec
push
outsb
inc
jbe
bound
push
adc
cmp
loopne
push
mov
mov
push
ds
pop
orl
sahf
cli
in
lods
mov
aam
cmpsl
clc
pop
pusha
in
or
sub
aam
cmc
push
fidivl
mov
std
inc
sahf
sbb
mov
add
add
sub
gs
adc
lahf
jmp
or
mov
hlt
push
js
sub
pusha
dec
jo
push
mov
xlat
adc
adc
push
push
cmp
xor
lret
cmp
lret
sub
and
xor
xor
sbb
sub
lret
aaa
cmp
xor
and
cmp
xor
and
and
add
lea
jne
movsbw
pusha
movb
pusha
not
jmp
jb
jne
adc
jl
inc
imul
cmp
push
xor
cmp
dec
mov
add
mov
call
mov
loopne
ror
push
call
cmc
mov
mov
pop
data16
or
ret
test
loope
lcall
lcall
fisubs
xor
stc
arpl
mov
adcb
in
lea
adc
jb
jb
fs
addr16
pushl
and
outsl
add
add
mov
sub
jmp
and
nop
adc
std
int
cmp
cltd
and
pusha
aam
adc
popf
fdivrp
mov
sahf
scas
out
shl
jmp
iret
loop
mov
mov
scas
outsb
cwtl
in
out
mov
mov
pushf
cmp
stc
scas
lea
std
sbb
rorb
lods
rorb
mov
scas
jno
sbb
fcmovb
popa
outsl
sub
or
pop
cli
and
xor
outsb
fildl
cmp
sar
loopne
xchg
int3
fwait
nop
leave
cs
loopne
jmp
push
test
ret
jp
sbb
sub
push
xor
jb
shlb
ljmp
push
cmp
mov
call
push
lea
je
cmc
jmp
rcr
mov
test
pusha
cmp
test
cmpb
jmp
mov
clc
bt
not
mov
push
cmp
bt
cmpb
pushf
lea
jne
or
bsf
bts
push
xor
sar
aad
sub
cmp
mov
clc
add
setns
mov
cmc
pushf
pusha
test
movb
mov
pushf
call
imul
shl
divb
sti
mov
lds
mov
fs
mov
xchg
les
stc
cmpsb
cld
test
mov
mov
xchg
iret
jmp
stos
mov
js
jnp
and
dec
test
lret
call
int
arpl
shr
mov
and
add
mov
repnz
xchg
aad
shl
ret
das
xor
add
adc
in
out
ficomps
cmpsb
mov
movsb
into
addr16
dec
leave
push
sub
lahf
mov
inc
enter
cmp
mov
aaa
daa
inc
outsb
jno
into
mov
cmp
je
jl
sbb
outsb
aaa
mov
mov
neg
sar
sub
fisubs
aam
mov
cmpsl
mov
je
adc
dec
mov
sbb
xchg
sbbb
in
push
xlat
hlt
out
rcl
ffreep
iret
cmp
movsl
in
mov
jbe
popa
mov
pusha
inc
lea
call
andl
sbb
lret
xchg
mov
mov
inc
shll
xchg
in
shr
and
aaa
jmp
loopne
rcl
cmp
enter
movsb
pushl
mov
repz
das
push
insb
sbb
js
call
mov
cmp
add
cmp
adc
sub
jle
jle
loop
sbbb
and
or
addb
push
scas
jne
mov
aad
push
xor
inc
fsub
push
movb
xchg
jns
sub
jns
push
pop
into
mov
mov
pop
pushw
dec
test
add
mov
shl
xchg
add
inc
icebp
add
je
xor
int3
and
sub
repz
fldt
or
mov
lcall
adc
icebp
dec
cmpsb
lahf
outsb
in
fnstenv
addr16
dec
dec
aad
xchg
jne
inc
loopne
ljmp
fdivr
jmp
shrb
mov
mov
xlat
xor
pusha
mov
out
mov
push
frstor
cmp
jbe
or
scas
pop
xor
aaa
imul
ret
icebp
push
nop
mov
call
jmp
pop
mov
das
out
sub
into
ret
pop
mov
jnp
adc
ret
dec
dec
and
lahf
sub
pop
arpl
ficoms
test
sub
pop
or
pop
outsb
jg
adc
into
mov
mov
mov
popa
sub
scas
xorl
add
sbb
dec
fbld
jnp
jge
jns
pop
jp
dec
pop
push
jns
cmp
pushf
cmp
not
stc
cmp
pusha
lahf
cwtl
lea
bswap
call
movw
movl
push
pusha
movl
pusha
push
pushf
push
lea
jmp
add
push
gs
fs
imul
adc
push
pop
dec
imul
imul
dec
or
cs
testb
icebp
mov
add
sub
ja
out
fisubrs
les
mov
xor
cmp
out
xor
adc
cmp
cs
adcb
dec
ljmp
mov
fdivrp
hlt
fistps
mov
arpl
mov
cltd
xchg
adc
lret
xchg
mov
xchg
mov
cli
repnz
xchg
aad
out
repnz
mov
cmp
cltd
sbbb
xchg
cmp
shlb
stos
mov
in
movsb
xchg
jle
pop
stc
scas
aas
mov
push
push
outsb
jns
pop
jbe
scas
leave
mov
xchg
mov
xchg
mov
mov
xchg
aad
fldl
scas
sub
fs
jmp
inc
mov
push
adc
insb
pop
inc
add
pop
cmp
xchg
mov
pop
fs
insb
js
lods
lea
in
leave
js
leave
in
insb
add
out
jle
lcall
xchg
ss
sub
test
lret
std
movsb
popa
ret
xchg
or
lcall
pusha
lea
jmp
test
add
pushf
lea
jmp
not
pusha
jmp
in
bound
push
push
gs
jge
rcrb
fidivl
inc
jae
lcall
arpl
xor
or
or
adc
xchg
xor
scas
xor
icebp
jno
mov
shlb
xor
lcall
xor
xor
shll
jae
mov
push
jb
lcall
mov
out
lcall
notb
jae
or
sbb
add
sbbl
in
xchg
add
jno
push
mov
add
lock
jp
insl
pop
test
or
inc
xor
jbe
lcall
ja
pop
inc
jp
cltd
push
daa
int3
loope
outsl
ljmp
fcomps
rep
stc
push
inc
lcall
data16
inc
dec
mov
in
aad
pop
cmpb
imul
aam
xchg
data16
mov
addr16
imul
sbb
mov
les
mov
inc
insl
in
add
jl
testl
stos
and
cmp
ficompl
lret
insl
cmp
xor
nop
jo
data16
pop
xor
test
bound
mov
insb
xchg
mov
push
push
sar
jno
mov
sub
arpl
gs
out
cli
pop
lahf
gs
aam
gs
push
roll
test
pop
test
and
or
cld
push
icebp
call
imul
in
ljmp
shr
dec
fdiv
ret
fildl
sub
pop
outsb
lret
xor
mov
push
adc
out
nop
test
in
cmc
sbb
push
ret
loop
cli
sbbl
xor
inc
loop
mov
mov
addr16
popf
shll
incl
test
enter
pop
imul
in
jne
jae
xor
test
out
test
mov
xchg
cwtl
pop
add
outsb
daa
pop
scas
adc
lods
adc
dec
filds
mov
nop
rcl
cmpsb
adc
inc
sahf
lea
pop
in
and
outsb
movsb
in
ja
sti
stos
arpl
lcall
cmp
add
lods
scas
sub
shll
popf
fwait
inc
fistl
sti
arpl
aam
jae
fbstp
add
mov
cmp
stos
sbb
inc
sbb
sbb
imul
fucom
sub
pop
lock
icebp
outsl
out
insl
test
lahf
adc
js
mov
xor
jb
xchg
ficomps
dec
push
lahf
out
cmp
sbb
sbb
dec
sbb
lahf
pop
push
mov
adcl
shr
mov
jae
test
fwait
lret
mov
test
jb
insl
cmp
mov
popa
jb
movsl
pop
inc
fidivs
pop
ss
into
hlt
dec
cmc
insl
cli
insw
dec
cmp
in
out
out
fisubrl
pop
cmp
je
loope
in
cmp
aas
stos
icebp
jp
push
std
or
mov
mov
je
mov
push
out
lock
fmulp
adc
xchg
inc
jo
pop
lcall
imulb
in
cmp
jo
fnstsw
data16
in
mov
aas
xor
xor
scas
pop
std
int
in
mov
loopne
addr16
or
ljmp
xor
xchg
stos
and
mov
mov
xor
pop
lock
push
add
inc
fwait
es
push
fidivl
or
lcall
push
cmp
shlb
adc
sub
cmp
repz
push
out
mov
test
lret
ja
fstpl
inc
xor
inc
gs
lret
das
test
inc
and
imul
jo
adc
loop
and
addr16
aam
add
sbb
cmpsb
cmpsb
push
push
adc
mov
add
cmc
bound
mov
in
sahf
pop
adcb
mov
mov
iret
into
cmp
fbld
fadds
adc
mov
xor
arpl
adc
imul
mov
jbe
out
push
xor
and
cltd
imul
inc
outsb
push
ljmp
xchg
add
push
arpl
or
addb
pushf
push
pop
mov
in
mov
ljmp
ja
inc
push
les
dec
mov
mov
pop
loop
xor
in
repnz
inc
push
pop
xor
arpl
lret
and
jecxz
xchg
icebp
sbb
lods
cwtl
sub
xor
mov
sahf
rcl
out
imul
jg
sub
inc
mov
sahf
popf
pop
arpl
fs
imul
mov
imul
das
repnz
cmp
popf
xchg
inc
outsl
cltd
and
in
sbb
stos
clc
pop
cmp
fsubrl
imul
in
push
outsl
cmp
add
out
mov
icebp
mov
rcl
mov
xor
cmp
aad
add
adc
stos
or
addr16
lcall
xchg
dec
loop
xor
jno
in
adc
test
jnp
and
inc
push
das
ljmp
push
fs
int3
out
arpl
int
in
jb
bound
ret
arpl
lcall
mov
fists
add
loop
test
aad
inc
bnd
lea
xchg
bound
pop
pop
jg
arpl
popaw
in
sub
cltd
push
adc
xchg
mov
xor
push
outsb
int
fidivs
cmp
mov
push
add
mov
xchg
pop
push
jg
and
add
sbb
and
bound
jno
cmpsl
bound
pushf
sub
sbb
nop
fdivl
es
fidivl
out
sbb
push
lods
add
cmp
pop
jl
fs
out
sbb
imul
imul
adc
push
jmp
dec
xlat
pop
push
push
sbb
pslld
cltd
xor
ret
loope
jno
pop
xor
repz
or
and
xor
mov
and
xlat
leave
ficomps
lock
pop
jae
cld
jnp
lret
lcall
jmpw
sub
leave
call
xor
out
inc
mov
jns
or
xor
jmp
and
notb
jmp
pop
push
and
sub
dec
pop
insl
in
cmp
pop
bound
ljmp
bound
mulb
lock
mov
cli
pop
mov
test
inc
shrl
mov
stc
loope
outsb
sub
test
add
push
xor
in
scas
add
adc
sub
stos
es
xchg
in
jns
dec
mov
aam
test
inc
ja
sbbl
mov
push
pop
mov
imul
adc
int
sub
push
mov
daa
mov
lods
push
sub
into
outsl
rcrb
lcall
insl
ja
clc
arpl
cmp
jge
adc
cmpb
dec
outsb
xchg
pop
insb
cwtl
in
mov
test
adc
cs
out
lods
pop
jmp
aam
hlt
js
bound
jecxz
ljmp
dec
mov
xchg
stos
jecxz
outsl
mov
sub
pop
imul
add
jmp
in
imul
in
cmp
loopne
stos
xor
mov
fists
lock
xorb
jb
and
in
fbld
jg
mov
xor
movsb
xor
stos
pop
jae
sarl
jne
sarb
leave
ret
insl
pop
sbb
rcrb
and
xor
test
sbb
jmp
addr16
fcomp
xchg
insl
add
daa
cltd
cmp
cmp
add
paddsb
loope
xor
imul
in
xchg
jno
out
stc
sub
imul
inc
bound
mov
das
push
rorl
dec
repz
mov
and
outsb
in
roll
lea
cmc
xor
mov
pop
insl
subl
cmp
roll
jns
in
push
les
ja
xchg
lret
mov
je
jns
shrb
sti
mov
push
cmp
repz
mov
aam
and
cli
push
push
das
in
dec
xchg
inc
aad
rorl
rorl
inc
scas
sub
push
pop
mov
inc
outsl
or
mov
cmp
push
imul
mov
sub
xchg
rcrb
dec
data16
test
push
flds
aam
pop
pop
jecxz
pop
insl
xor
sbb
pop
clc
lret
rclb
insl
test
stc
in
xchg
jle
mov
xor
inc
xchg
jae
mov
dec
mov
dec
mov
push
sub
ja
ret
cli
jne
cli
or
scas
outsb
push
cmpsl
scas
cltd
mov
test
lods
stos
dec
mov
cmc
scas
test
inc
cs
inc
scas
scas
insl
outsl
fsubr
lahf
sub
add
out
das
addr16
jmp
xchg
daa
in
push
mov
ret
lods
leave
mov
jno
dec
fld
adc
fwait
out
sub
test
add
lock
shlb
xor
fisubrs
pop
insl
movsb
and
ja
jns
aam
dec
mov
and
int3
mov
sub
sub
mov
outsb
jb
in
out
subb
sub
inc
je
je
sbb
in
pop
test
xor
enter
push
cmpl
scas
jnp
sub
repz
or
icebp
cwtl
mov
jp
mov
ret
and
mov
outsl
js
pop
fimull
pop
push
xchg
gs
repz
dec
fs
je
das
mov
aam
imul
arpl
mov
xchg
and
addr16
out
sbb
inc
add
push
test
mov
out
cmp
inc
ljmp
pop
mov
cmpsb
arpl
push
dec
addr16
je
add
adc
scas
rcrb
lods
jb
cmpsl
int3
icebp
push
aad
shl
bound
andb
pushl
xchg
aas
bound
mov
cmpsb
inc
pop
arpl
dec
pop
rcr
or
out
pop
out
jb
fistps
arpl
aam
arpl
lea
dec
repz
into
mov
dec
xchg
fists
cld
arpl
xor
mov
imul
mov
mov
popa
scas
out
lret
daa
arpl
or
inc
imul
dec
or
arpl
jbe
xor
inc
pop
fstpt
arpl
loope
jns
jle
dec
dec
pop
subb
scas
mov
ds
lods
stos
test
movb
lock
add
fwait
mov
or
cmpsb
repz
imul
arpl
pop
mov
mov
ds
dec
pop
stc
inc
sbb
out
outsb
and
test
push
jbe
iret
dec
jns
arpl
xor
jmp
dec
push
xchg
jle
sbb
outsb
arpl
das
jns
orl
sti
dec
add
fisubrs
outsb
pop
sbb
lea
pop
dec
aad
icebp
lret
add
fwait
icebp
sbb
add
adc
imul
arpl
iret
mov
or
inc
mov
ret
in
pop
imul
ret
adc
lea
aam
push
imul
out
arpl
cmpsl
add
or
cli
adc
dec
test
call
hlt
scas
mov
mov
pop
repz
push
aad
and
xchg
sub
and
xchg
arpl
mov
inc
mov
arpl
dec
adc
mov
lret
mov
jae
push
js
xorl
jg
fdivr
out
arpl
or
repnz
jne
pop
xlat
mov
cli
or
gs
sbb
ret
mov
arpl
nop
mov
adc
push
mull
add
jmp
lds
lods
outsl
add
arpl
lods
in
mov
jb
xchg
mov
xchg
in
out
out
imul
addl
inc
and
repz
pop
out
adc
add
sar
mov
std
arpl
in
add
clc
adc
popa
xchg
pusha
cmp
push
ret
adc
xor
imul
fsubrl
or
in
sub
jno
sbb
cmp
push
mov
jb
shlb
lock
mov
cmpsl
arpl
fstl
shl
and
cwtl
lock
fists
gs
mov
stos
add
adc
or
repnz
arpl
clc
xchg
cld
bound
add
and
adc
lahf
pop
jge
add
inc
push
scas
add
push
scas
adc
ja
stc
lret
push
mov
std
iret
push
dec
imull
arpl
xchg
add
arpl
popf
pop
mov
arpl
movsl
cli
mov
or
sbb
loope
and
mov
repnz
push
fstps
inc
cmc
sbb
cmp
push
arpl
cwtl
xor
mov
testb
pushf
arpl
jmp
int3
sub
bound
stos
push
or
in
jge
insb
adc
jle
mov
arpl
loop
arpl
mov
jbe
cmp
mov
fcomi
add
xlat
arpl
arpl
inc
in
or
xchg
or
add
mov
mov
xor
pop
out
movsb
addr16
imull
sub
mov
call
in
imul
xchg
leave
cld
xchg
in
cli
out
test
in
setl
add
les
mul
arpl
inc
ficompl
mov
jmp
add
sbbb
jecxz
arpl
scas
cmp
arpl
ja
clc
push
mov
jne
addr16
or
push
imul
lea
and
mov
ja
and
out
push
mov
ret
xor
xor
jecxz
ljmp
push
je
push
jecxz
xchg
push
xchg
sti
mov
mov
jns
enter
popf
mov
movsb
call
cltd
hlt
cmpsb
xor
mov
or
clc
stos
add
jns
arpl
dec
sbb
adc
movsl
arpl
or
or
into
mov
out
adc
je
mov
or
lahf
add
pop
pop
mov
std
popf
pop
arpl
sahf
nop
dec
scas
and
andb
push
xor
mov
xchg
cmp
jns
arpl
mov
gs
xlat
push
arpl
int
arpl
sbb
mov
jmp
scas
jnp
mov
cmp
arpl
sub
orb
cmc
lods
xchg
out
arpl
xchg
xor
jl
in
xchg
inc
mov
gs
bound
ljmp
aam
jo
dec
cmp
dec
aad
bound
scas
cmp
mov
in
mov
ja
movsb
jl
add
aad
lds
test
ja
push
xchg
xchg
jno
add
adc
in
sub
mov
mov
in
jl
ss
mov
out
push
inc
push
shrl
sbb
mov
mov
xchg
jp
jbe
cld
add
mov
insb
test
or
arpl
xor
push
arpl
ja
cmp
jecxz
insb
pop
inc
leave
mov
pusha
mov
jo
shr
arpl
call
xor
arpl
cmp
std
add
cmpsl
mov
and
and
inc
addr16
aad
inc
jmp
arpl
test
aaa
arpl
pop
add
arpl
lods
out
mov
add
jo
ret
arpl
sub
adc
out
jbe
mov
mov
int3
sbb
shrl
mov
iret
push
mov
icebp
outsl
mov
jo
adc
adc
call
out
lret
fcmovnb
or
mov
dec
jmp
rolb
sahf
mov
jne
xchg
stos
sbb
out
arpl
mov
xchg
adc
fwait
dec
lods
subb
aad
cmc
cwtl
inc
cltd
mov
es
jae
xor
adc
frstor
lcall
arpl
fs
pop
mov
test
fiaddl
mov
sub
jnp
arpl
jl
adc
inc
jg
sbb
les
and
and
or
adc
mov
arpl
mov
arpl
cmpsl
out
xor
mov
or
mov
leave
arpl
addr16
fstpl
jl
sub
ret
arpl
jbe
cmc
loop
push
test
aam
cs
popa
fidivl
fsubs
ficoms
add
in
adc
push
mov
arpl
dec
out
outsb
cld
cmpsb
in
or
lahf
and
bound
les
xchg
and
into
inc
push
cmp
mov
push
add
fwait
test
or
dec
notb
pop
jnp
dec
and
xchg
cwtl
enter
adc
add
inc
fildll
arpl
std
in
scas
cld
xor
or
and
int
mov
sbb
aas
inc
dec
ror
jp
push
insl
dec
mov
out
ss
test
popw
aam
hlt
jne
bound
fcoml
out
xchg
aam
int
cs
or
inc
pop
sti
fnstsw
push
cmp
jae
outsb
jge
in
push
mov
or
dec
and
insl
xor
xor
scas
xchg
mov
aam
insl
xchg
stc
xchg
xchg
add
add
test
add
dec
jae
pop
add
add
icebp
insb
add
shlb
adc
inc
pop
cmp
and
add
daa
pop
cmp
push
rorb
sbb
mov
jno
xor
insl
push
add
push
push
arpl
dec
adc
add
pop
mov
pop
das
fcmovbe
bound
mov
and
stos
ret
sub
addr16
outsb
dec
and
arpl
das
xor
sbb
cmova
jg
rcr
jmp
fisttpll
adc
lret
cli
jb
mov
sub
inc
adc
arpl
or
pop
pushf
or
add
addl
xchg
mov
jmp
add
ss
mov
jns
mov
mov
mov
xor
mov
mov
add
sbb
outsl
pavgb
push
arpl
andl
arpl
cmp
ja
sbb
pushf
xchg
in
cwtl
mov
adc
jmp
ret
fstpt
jp
nop
pusha
into
repz
int
pop
lods
jnp
or
je
arpl
fcomps
arpl
nop
push
jge
pop
rclb
push
mov
arpl
arpl
push
and
xchg
xor
xor
and
arpl
and
cmc
and
insb
jno
dec
arpl
rol
ss
sarl
cmp
inc
sti
nop
fcoms
arpl
mov
movsb
clc
add
pop
push
insl
subl
aad
pop
movd
mov
add
and
mov
push
es
arpl
push
or
push
repz
push
cmp
fdivl
repnz
push
jns
cmp
mov
inc
nop
jecxz
or
adcb
inc
push
add
stos
xchg
data16
sti
cmp
fdivs
insb
dec
out
cmpsb
dec
mov
fisttpl
ja
add
jno
arpl
mov
sbb
mov
add
push
in
mov
imul
lods
or
arpl
mov
add
sub
fnstsw
addr16
int3
jnp
ret
bnd
mov
std
bound
lahf
dec
inc
dec
stos
gs
insb
and
push
arpl
sub
push
mov
lahf
jmp
mov
insb
push
and
push
cld
jno
or
push
inc
insb
test
test
out
inc
fs
and
xchg
out
scas
rolb
int3
test
fidivrl
cmp
push
inc
mov
outsb
aaa
or
xchg
enter
fbld
pop
fcompl
icebp
jge
repz
movsb
clc
gs
jns
in
jl
mov
std
cmp
mov
arpl
hlt
xchg
mov
popf
jge
push
das
cld
shll
out
mov
jae
test
add
arpl
pop
clc
lret
repz
and
add
dec
mov
lahf
sbb
or
add
sbb
cmp
loop
pop
mov
mov
mov
xchg
arpl
adc
and
mov
push
cmpsb
mov
pushf
sbb
cmp
popf
dec
pop
cmp
adc
shl
jp
add
and
mov
pop
push
scas
movsb
xor
lahf
pop
or
inc
sub
lock
roll
loope
minps
icebp
xchg
mov
fldl
cli
ret
jl
xor
dec
arpl
sbbl
adcb
out
pop
dec
pushf
rorb
xchg
xlat
daa
inc
nop
inc
aas
je
int
and
jne
ret
inc
rorl
inc
cmp
stc
insb
inc
loop
lret
stos
arpl
mov
push
dec
jbe
pop
xor
out
xchg
push
arpl
cmp
inc
xorl
sub
arpl
jno
loop
mov
cmp
test
mov
ljmp
xlat
jno
shlb
adc
jp
adc
out
imul
cmp
xchg
adc
divb
insl
test
push
sub
enter
arpl
xchg
pop
les
sbb
arpl
data16
pop
jb
xor
xchg
ss
jns
or
scas
imul
out
das
jnp
mov
arpl
imul
xor
sahf
jg
out
pop
push
push
pushf
jne
test
push
out
xor
jae
mov
ret
cltd
mov
adc
arpl
aad
push
out
cmp
out
adc
frstor
push
outsl
dec
dec
jmp
mov
add
arpl
arpl
push
ljmp
xor
stc
xchg
cmpsb
fstps
add
movsb
xor
dec
fsubrs
cwtl
hlt
mov
jno
add
dec
cmpsl
jo
push
arpl
pop
xor
xchg
repnz
adc
arpl
mov
sbbl
dec
notl
outsl
jl
shlb
lret
lahf
packssdw
xchg
gs
in
lret
insl
sub
pusha
arpl
mov
push
pop
sti
es
push
sub
or
ds
arpl
push
pop
lret
jae
mov
daa
adc
or
fdivl
xchg
jno
rorl
dec
bound
dec
je
add
xchg
stos
fs
js
cld
aad
xor
in
mov
stc
loop
cmpb
inc
adc
jns
jge
lock
mov
enter
lret
mull
adcl
lods
jno
push
arpl
dec
lea
and
mov
mov
sbb
scas
push
jmp
arpl
sbb
das
xor
in
inc
cmpsb
add
xor
jo
adcl
ja
inc
add
add
ljmp
imul
sub
dec
bound
insb
or
std
pop
mov
and
mov
xchg
adc
ds
call
arpl
scas
jb
lcall
stc
xor
test
mov
lahf
mov
jae
cmp
adc
pop
loop
aas
jl
in
inc
jge
push
stc
arpl
mov
jp
fists
bound
sti
jo
cmpsl
jb
pop
lret
inc
repnz
orl
cmpb
imul
mov
xchg
cmp
and
pop
arpl
in
inc
out
subb
dec
scas
xchg
jae
rep
cmp
jb
and
add
les
ds
pop
scas
add
arpl
mov
sti
mov
inc
pushf
push
pop
push
add
out
shlb
push
rcrb
ret
pop
and
aam
inc
mov
xlat
fiadds
sarl
lcall
in
sub
arpl
push
imul
lods
adc
out
pop
cwtl
arpl
push
sub
inc
cmpsl
cmp
repz
push
aad
cmp
mov
movsb
xchg
ret
push
mov
arpl
repnz
imul
or
gs
roll
adcl
loopne
push
pop
xchg
mov
push
arpl
pop
sbb
lock
int3
mov
ret
add
dec
les
jnp
rcll
or
adc
shl
stc
test
lcall
push
cli
out
arpl
pop
int3
or
arpl
jne
enter
arpl
mov
xor
sbb
add
leave
xchg
arpl
sub
sub
push
or
iret
loop
inc
jmp
arpl
adc
bound
les
out
out
fisubl
js
scas
xchg
outsl
cld
lods
mov
mov
mov
cmp
or
clc
arpl
push
jnp
out
cltd
xchg
into
iret
cmp
outsb
push
test
push
or
xlat
movsl
fcmovb
add
dec
mov
xor
push
inc
mov
jno
pop
or
mov
adc
bound
outsl
icebp
incl
adc
fsubs
inc
sbb
scas
ret
push
loope
fwait
or
orl
addr16
push
gs
or
cmpl
adc
outsb
leave
mov
mov
push
test
aam
subb
mulb
in
ds
jecxz
or
add
push
or
aam
je
das
loop
scas
out
mov
jno
into
sti
mov
shll
loop
mov
repnz
pop
scas
repz
adc
adc
xor
in
rolb
fs
mov
aam
lret
jno
cmp
push
adc
dec
imul
mov
ljmp
inc
lock
aam
jmp
das
jmp
add
dec
in
in
or
stc
jmp
push
clc
pop
and
das
lds
jns
push
adc
repz
adc
shll
repnz
jne
xchg
mov
outsl
adc
ss
int3
out
adc
pop
or
xor
sarl
xor
lds
sbbb
xor
fisubrl
sub
pop
push
pop
add
or
mov
jo
das
into
lods
pusha
out
jg
outsl
les
mov
stos
pop
sub
aam
sub
xchg
dec
lock
repnz
cltd
pop
cmp
test
mov
out
scas
mov
outsl
pop
mov
xchg
adcb
push
xchg
cltd
adc
insl
mov
ljmp
sbb
sbb
pop
pop
popf
in
cmp
jb
jg
shr
push
into
adc
in
outsl
xor
inc
loop
cwtl
jecxz
or
inc
enter
mov
repnz
imul
mov
sbb
inc
imul
pop
mov
in
es
iret
divb
mov
movsb
cmpsb
xchg
pop
jmp
cmp
inc
push
aam
gs
mov
xor
lock
and
inc
out
sbb
jmp
xchg
cmp
or
lret
pop
xor
subb
xor
sub
and
arpl
out
std
xchg
call
fidivrs
add
xor
loop
in
lcall
jl
ds
mov
xor
mov
loope
insl
mov
push
lahf
mov
jns
xchg
sbb
jmp
cltd
dec
dec
pop
xor
xor
pop
pop
rcrl
inc
add
fdivl
jae
or
repnz
aam
push
cmovns
stc
inc
inc
lods
sbb
in
ja
dec
int
xchg
in
int3
dec
scas
mov
les
daa
imul
pop
jno
testb
add
ror
inc
insl
lock
in
loop
rcl
shll
out
mov
sbb
in
mov
or
fadds
xor
fs
xchg
sub
mov
aam
std
in
sub
xor
popf
ja
xchg
and
push
ficoms
scas
pop
stos
ret
mov
into
sub
in
or
outsl
push
xchg
fsubrs
outsl
or
push
add
mov
mov
pop
scas
pop
repnz
xor
outsl
fbld
jae
cltd
adc
enter
arpl
mov
lods
in
inc
fimull
mov
hlt
dec
daa
jmp
arpl
add
cmp
xchg
adc
icebp
sub
push
and
mov
ljmp
test
jg
or
jl
add
ss
pop
dec
or
gs
scas
jo
aam
rorb
push
jle
fcoml
adc
pop
mov
lock
mov
gs
mov
adc
fwait
or
les
clc
into
pop
subl
outsb
ret
cld
xor
aas
sbb
loope
or
test
arpl
jne
ret
arpl
or
cmpl
leave
xchg
stos
push
or
cmpb
arpl
fwait
int3
in
push
scas
push
fstl
lods
or
xchg
pop
inc
or
push
jmp
inc
xor
and
add
arpl
lahf
insb
adc
inc
clc
ds
and
push
dec
scas
mov
fcmovnb
jg
mov
sbb
adc
call
lds
aam
mov
les
jns
dec
pop
fcom
js
jnp
xchg
aas
jl
fbld
cmp
pop
mov
mov
mov
imul
xor
dec
mov
or
lahf
enter
jne
clc
in
sti
popa
inc
jl
dec
call
dec
sub
loop
jmp
cmp
mov
int3
sub
inc
in
mov
lret
lahf
shrb
aas
loop
sub
mov
or
addr16
lret
arpl
dec
push
mov
stc
adc
dec
pushf
push
lcall
inc
shlb
jl
andb
fisttpl
gs
out
in
sub
sahf
adc
dec
pop
push
push
xor
rcll
sbb
dec
ret
and
ja
outsl
pop
mov
arpl
js
and
repz
in
xchg
loopne
arpl
adc
lahf
popf
mov
punpcklbw
stos
push
lret
add
lret
push
loope
jnp
xchg
vxorpd
in
pop
and
mov
imul
lea
outsb
mov
xorb
pop
outsl
mov
in
test
arpl
push
arpl
or
jl
add
jb
push
out
sub
add
mov
mov
add
es
lahf
test
arpl
push
fmuls
fstpt
arpl
pop
sarl
das
cs
push
pop
adc
jno
mov
xchg
adc
xchg
arpl
test
cmp
cld
sub
pop
push
arpl
je
jle
pop
sbb
inc
stc
arpl
add
insb
lds
lret
clc
adc
icebp
rorb
das
mov
or
data16
cmpsb
addr16
ret
outsl
arpl
in
dec
push
pop
adc
insl
lea
xchg
mov
arpl
fidivrl
dec
inc
sub
push
imul
es
push
arpl
push
push
cmp
ss
inc
mov
cmpsb
inc
sbb
sbbl
insb
mov
sahf
sbb
or
xor
loop
ret
scas
mov
gs
dec
push
jb
inc
xorb
pushf
cmp
fdivr
push
sub
imul
das
pop
or
mov
push
pop
jb
mov
roll
arpl
or
sub
loop
aaa
sub
mov
cmpsl
sub
sub
mov
js
fstps
test
fidivs
fwait
arpl
push
addr16
popf
sbb
adc
icebp
push
out
cmp
mov
pusha
fs
in
subl
and
shlb
stc
xchg
jo
movsb
mov
inc
lock
push
hlt
push
pushf
ja
dec
mov
shlb
out
bound
arpl
jbe
add
fwait
cwtl
push
out
pushl
mov
call
leave
test
add
add
mov
lahf
push
rclb
mov
jecxz
xchg
push
ja
negb
sarb
and
adc
in
dec
insb
sub
sbb
and
pushf
add
loop
stos
ja
imul
sub
scas
mov
test
rorb
or
add
enter
xor
mov
bound
stos
push
push
outsl
jno,pn
iret
arpl
sbb
scas
inc
inc
subb
xor
jecxz
inc
xchg
push
insl
jge
nop
and
mov
outsl
push
gs
push
mov
jecxz
dec
ficoms
repz
mov
sub
xor
dec
xchg
or
cwtl
mov
fs
xchg
dec
mulb
adc
movsl
push
push
ds
inc
loope
add
aaa
push
xlat
mov
outsl
push
inc
leave
push
js
ljmp
xchg
or
popf
arpl
loop
sub
fdivrl
shll
rorb
sbb
dec
adc
xchg
lret
outsl
into
in
in
arpl
inc
mov
in
arpl
gs
test
data16
push
xchg
jno
xchg
jns
arpl
jmp
arpl
imul
cmp
out
bound
lret
out
jg
dec
popf
adc
push
jb
jnp
pop
arpl
cli
inc
and
dec
jns
movsl
lcall
outsb
sub
test
mov
arpl
cld
out
in
add
inc
arpl
mov
mov
pop
aaa
mov
xchg
push
add
xchg
mov
int
add
mov
pop
ret
imulb
mov
cmp
xor
popa
arpl
loope
xor
xchg
lcall
arpl
xchg
push
mov
pusha
negl
sti
or
sarb
ss
jb
mov
inc
sbb
movsb
mov
popf
ljmp
popa
xor
arpl
xor
clc
imul
cs
mov
int3
fwait
shll
push
sbb
imul
es
arpl
fisttpl
dec
and
fdivs
ljmp
lahf
lret
jp
jnp
arpl
rcl
dec
or
hlt
arpl
push
js
adc
out
mov
mov
test
mov
sub
push
and
pop
mov
add
in
arpl
dec
sub
add
adc
adc
xchg
sti
scas
pop
xor
mov
scas
in
imul
cld
fcmovnu
arpl
and
pusha
adc
lea
pop
adc
mov
jecxz
arpl
pop
test
test
push
insl
stos
jle
out
fiaddl
leave
push
popa
mov
shlb
dec
adc
sub
arpl
xchg
cli
lcall
scas
out
out
sbb
pop
lock
mov
out
lock
arpl
push
out
lods
mov
les
arpl
or
mov
inc
mov
sub
push
push
cwtl
mov
jns
cmpsl
add
adcl
or
push
in
cld
aas
cmp
insb
adc
pusha
and
push
mov
xor
arpl
xor
aas
mov
jecxz
lods
mov
inc
mov
loopne
in
cmp
shll
push
aam
or
jno,pt
adc
sub
inc
dec
arpl
pusha
xor
pop
add
bound
jbe
movsl
dec
popf
arpl
sub
dec
mov
mov
or
push
rcrb
addr16
mov
cmp
pop
repz
arpl
out
and
inc
add
arpl
fcoml
push
xchg
cmp
iret
std
insb
shlb
dec
cpuid
imull
add
add
xchg
jb
dec
xor
push
ljmp
sbb
scas
cmp
loop
push
popf
push
adc
arpl
push
scas
adc
xor
xchg
mov
sub
ss
mov
sub
rcr
lahf
in
iret
inc
imul
les
xchg
inc
push
sub
loopne
mov
scas
ret
cmpsb
push
sub
sub
cmp
ret
ds
jmp
dec
pop
out
mov
roll
mov
mov
ja
add
jbe
lret
push
rcrl
arpl
add
jg
bound
outsl
fwait
ljmp
jno
xchg
mov
shlb
in
cmpsl
mov
lea
iret
xchg
inc
push
in
inc
xchg
adc
out
ficomps
mov
push
push
mov
stc
mov
pop
fsubr
lahf
mov
jg
scas
aam
cmpsl
xchg
dec
mov
push
mov
cmpsl
push
add
jo
outsb
aam
insb
xor
and
lock
push
test
in
stc
ret
jmp
out
inc
outsb
adc
int
bound
mov
rclb
sub
pop
sbb
sbb
mov
sub
pop
das
pop
test
clc
push
test
loop
pop
inc
push
outsl
aam
out
fdivrs
sub
and
mov
aad
fcmovnb
sbb
int
es
adc
fs
jns
adc
ret
dec
or
mov
dec
jmp
std
jb
jp
outsl
mov
outsl
insl
in
or
sub
lods
pop
in
xor
enter
aam
lods
push
mov
xorl
xor
lcall
inc
push
aam
inc
cmpsl
aam
js
shlb
out
mov
lock
jg
push
sbbl
mov
imul
dec
les
push
inc
outsl
repz
adc
dec
sub
add
cmpsl
out
mov
add
data16
or
dec
lods
mov
mov
in
xor
nop
ja
repnz
leave
mov
lock
mov
adc
out
push
add
in
lcall
aas
outsl
lods
into
outsl
pop
scas
out
fdivrl
inc
jle
cmp
pop
imul
mov
pop
push
sub
pop
dec
jne
pushf
push
sub
fistpl
xchg
test
loopne
add
and
loope
int3
or
push
icebp
pop
jecxz
jbe
add
pop
push
push
bound
dec
jg
ljmp
int
je
and
push
scas
xorb
sub
leave
jnp
movb
xchg
sbb
or
dec
pop
idivl
loopne
int
jno
cmp
stc
add
xchg
xchg
pop
repz
arpl
insl
pop
mov
jecxz
xor
cli
or
xchg
sahf
insb
jge
mov
aaa
sub
cli
dec
and
inc
xchg
pop
pop
cmp
js
xor
mov
push
std
lock
push
sti
pop
fidivl
mov
mov
cmp
fwait
sub
adc
push
pop
xor
adc
push
xor
cmpsl
testl
or
arpl
push
shll
mov
sub
inc
mov
or
outsb
push
sbb
jmp
mov
push
iret
xor
inc
adc
ljmp
mov
adc
scas
jbe
mov
and
lods
data16
push
sub
sub
arpl
aam
mov
push
push
ss
stos
lcall
ret
mov
xlat
sbb
mov
jge
adcl
and
mov
cmpsb
cwtl
in
data16
andb
dec
xor
je
mov
insb
mov
scas
aam
mov
jbe
stc
in
cltd
ds
pop
inc
test
mov
adc
imul
popf
cmp
adc
repnz
out
mov
in
imul
xchg
test
repnz
movsl
arpl
scas
cmp
mov
into
mov
dec
arpl
fistl
xor
arpl
test
xor
mov
rolb
pop
aam
push
push
ds
bound
mov
movsb
enter
mov
jmp
ret
sbbl
sahf
dec
and
int3
pop
mov
and
pop
arpl
inc
enter
mov
in
cmp
arpl
xchg
sub
cmpsb
push
and
daa
lahf
es
jge
inc
dec
bound
aad
xor
aaa
hlt
cmp
mov
mov
movsb
arpl
mov
jne
or
test
sbb
arpl
push
inc
arpl
pop
pop
out
sub
filds
push
aaa
testl
mov
pop
arpl
push
xor
fsubl
aas
pop
add
inc
inc
jno
push
mov
mov
mov
push
shlb
push
xor
bound
movsb
popf
sahf
xor
icebp
mov
aad
test
mov
test
pop
imul
and
daa
outsl
add
cltd
arpl
js
cmp
add
cmp
inc
xchg
lret
mov
inc
arpl
aam
scas
mov
and
jmp
arpl
xor
andl
mov
pushf
mov
cltd
xchg
ret
scas
sarl
mov
addr16
dec
arpl
adc
sti
cld
pop
xchg
pop
into
fmull
cmpsb
loopne
jns,pn
arpl
mov
sbb
aaa
mov
repz
inc
mov
imul
xor
scas
int
xorb
imul
xor
inc
out
push
loope
inc
jecxz
and
inc
and
xor
int3
sub
lret
dec
push
pusha
std
sub
mulb
cmc
jecxz
pop
insb
sbb
pop
adc
jb
inc
and
fdivp
cmpsb
mov
imul
xor
out
pop
scas
arpl
push
xor
bound
outsl
pop
pushf
repz
mov
pop
das
inc
arpl
cs
inc
fstl
and
mov
xchg
pop
arpl
jno
or
arpl
adc
jge
jmp
jle
mov
add
stos
cmp
xor
sahf
jmp
or
mov
fs
loop
sti
fisttpl
adc
push
pop
sahf
and
fbstp
fs
xchg
adc
test
das
jle
mov
testb
loop
xchg
xchg
cmp
cmp
jb
pop
out
inc
je
mov
sub
lret
sub
or
pusha
fwait
shlb
mov
push
jg
jbe
bound
inc
or
cmp
je
gs
lds
btc
jo
inc
mov
push
cmp
addr16
pop
int
cmc
push
repz
or
mov
and
sbb
jl
fistpl
add
das
andb
dec
mov
ja
fsts
mov
test
jmp
push
es
dec
bound
cmp
insl
rorb
arpl
and
inc
sub
arpl
push
cmpsb
fwait
arpl
daa
cmp
xchg
push
push
ret
xchg
xchg
push
bound
int
das
and
mov
pop
jg
sbb
incl
cmpsb
mov
shl
push
into
ds
xchg
or
push
arpl
jno
psubsw
sub
jle
stos
rcrb
adc
xchg
stc
add
push
int
lods
or
or
lahf
add
popf
push
inc
in
xor
sub
mov
in
inc
adc
lahf
adc
icebp
jnp
int
aam
arpl
mov
adc
jne
or
push
mov
arpl
test
les
add
xlat
mov
pop
xor
das
int3
aaa
xorl
arpl
sub
pushf
inc
dec
sbb
arpl
adc
mov
movsl
jp
mov
adc
arpl
cmp
xor
cmpsl
mov
lds
arpl
sub
adc
ljmp
push
jo
xorb
mov
jnp
jno
and
adc
rcrb
in
arpl
pop
mov
mov
adc
hlt
sub
mov
mov
push
mov
pop
sbb
and
jg
mov
test
sbb
hlt
add
xlat
arpl
repnz
sub
xchg
icebp
mov
xor
addr16
dec
jne
arpl
jmp
in
test
sti
mov
bnd
push
mov
xor
and
cmp
inc
jno
dec
les
rcll
xchg
add
push
daa
adc
adc
push
ret
leave
bound
sub
addr16
sbb
pop
xor
and
call
mov
imul
mov
sbb
push
pusha
arpl
pop
notl
arpl
and
arpl
mov
push
int3
insb
loope
xor
cmpsb
push
sub
xchg
testb
jp
xor
cmpsl
stc
inc
pop
inc
nop
fnstcw
or
movsb
outsb
js
xchg
jo
test
sbb
mov
aam
fsubp
ret
pop
push
in
out
xchg
and
push
inc
mov
sub
mov
inc
lods
movsl
sub
jnp
lds
inc
adc
or
fistpll
insb
ret
jo
js
out
loopne
arpl
dec
es
fidivrl
arpl
cmc
push
adc
xchg
mov
cmp
add
imul
enter
mov
cmp
addr16
fists
xor
pop
mov
sbb
or
push
mov
mov
cs
mov
cmp
cmp
je
push
jecxz
pop
push
in
jl
xor
mov
clc
loop
aad
or
test
and
insb
shrb
dec
loop
es
mov
pop
roll
jno
mov
xor
js
arpl
pop
jge
outsb
aam
add
or
mov
cld
or
sub
jp
arpl
dec
outsl
out
out
inc
sbb
movsb
ret
cld
jno
sbb
mov
mulb
ljmp
push
pop
adc
mov
arpl
pop
mov
xor
inc
sub
imul
mov
test
mov
mov
int3
push
bound
jmp
add
xlat
sbb
es
push
arpl
ret
xor
mov
jmp
in
mov
fwait
fwait
add
jp
shlb
jl
cmp
arpl
push
hlt
jns
inc
arpl
test
out
movsb
mov
cli
mov
scas
arpl
and
pop
cltd
mov
nop
pushf
ret
sub
arpl
pop
sub
movsb
inc
mov
fwait
sub
jmp
fldt
addb
out
ret
cld
scas
dec
subb
shll
fstps
fs
pushf
or
cmp
aad
loop
rcll
imul
flds
shll
inc
mov
push
lods
adcl
jno
push
in
xor
sarb
pop
out
insb
jg
pop
jp
sub
test
ss
mov
push
xchg
xor
arpl
and
and
arpl
test
ja
data16
jnp
or
lret
sbb
xchg
lahf
scas
mov
repnz
test
arpl
cmp
into
dec
shl
mov
and
adc
or
andl
fmull
test
xchg
arpl
popf
pop
call
ret
cmpsb
int3
push
xor
bound
fld
sbb
dec
and
pop
lahf
mov
arpl
sub
les
xor
arpl
fs
dec
dec
push
arpl
call
subl
insl
lods
pusha
lock
arpl
test
aas
sbb
arpl
les
imul
mov
mov
cs
add
or
or
mov
push
ret
out
mov
inc
in
mov
dec
data16
sbb
sub
lcall
arpl
adc
push
mov
in
loop
into
lcall
inc
out
sysenter
xor
mov
jmp
repz
cmp
bound
jle
imull
mov
push
lods
cld
or
push
jecxz
cmp
sbb
jmp
call
mov
mov
sub
pushf
mov
jecxz
jns
add
xchg
test
fisubl
arpl
loopne
stos
or
js
fwait
add
sbb
pusha
xchg
arpl
ljmp
pushf
jl
arpl
push
dec
test
imul
iret
lahf
fiaddl
sub
movq
pop
xor
add
jb
psubd
iret
lock
sbb
fwait
hlt
shl
decb
pop
arpl
fildl
ss
mov
push
mov
add
lods
bound
orb
pop
or
nop
imul
dec
cli
shll
arpl
not
shll
mov
mov
ja
ljmp
mov
push
movsb
add
movsl
aaa
push
cld
imul
dec
scas
xchg
dec
fisubrl
out
inc
xor
mov
pop
data16
arpl
fmul
insl
packsswb
lds
arpl
aad
call
ret
sub
or
rorl
aaa
addr16
cwtl
xchg
pop
jmp
in
mov
enter
jns
add
xor
xchg
pop
fimull
xchg
stos
jo
push
jne
arpl
rclb
ljmp
cwtl
fldl
xor
out
stos
sub
adc
mov
pop
movsb
sub
into
popa
inc
addr16
mov
xchg
and
outsb
add
test
inc
arpl
jns
stc
pop
ljmp
loope
in
inc
aad
daa
andl
dec
sub
and
shll
out
mov
and
arpl
lahf
aas
mov
inc
xchg
cmpsb
add
jae
arpl
scas
xor
mov
sub
cld
fwait
adc
loope
pop
xchg
call
outsb
lea
fwait
jl
or
mov
fimuls
in
int3
push
sbb
gs
inc
arpl
outsb
xlat
jle
xor
arpl
in
out
imul
nop
dec
pop
sbb
sti
inc
popf
icebp
lahf
arpl
jl
cmp
jmp
test
mov
arpl
mov
cmp
sub
dec
movb
cld
add
test
out
subb
xor
lahf
into
cli
cmpsl
addr16
xorl
insb
add
push
jecxz
int3
xchg
mov
out
or
jnp
mov
adcb
arpl
add
fdiv
and
push
test
arpl
push
or
popf
enter
ljmp
cmc
mov
arpl
pushf
xor
jno
bound
scas
push
notb
adc
add
das
ss
cwtl
xor
test
sbb
js
mov
movsb
pop
mov
jbe
add
arpl
or
test
and
arpl
mov
inc
sub
inc
jp
mov
cwtl
xor
frstor
repz
std
sbbb
cmp
cmp
and
pop
out
sbb
and
arpl
jae
push
mov
sbb
std
in
jle
gs
outsl
bound
xchg
mov
repz
cmp
add
xor
sbb
pop
and
ds
scas
jo
xor
xchg
arpl
dec
leave
inc
jle
or
jp
rcrl
imul
xchg
xlat
test
loopne
arpl
stc
xchg
jg
mov
sub
mov
cmpsb
arpl
das
and
test
pop
cmp
ja
inc
out
arpl
mov
push
arpl
cmp
xchg
int
imul
jbe
arpl
adcb
xor
js
sbbb
hlt
jmp
pop
cmp
jge
in
push
pop
xorb
int3
enter
pop
adc
rorb
pop
dec
fstpl
outsb
arpl
sub
insb
cwtl
in
das
xor
adc
mov
repz
std
inc
fwait
adc
dec
xchg
outsl
out
and
sub
cld
sub
and
inc
lea
add
push
cmp
fimuls
adc
std
mov
xchg
mulb
mov
shll
push
into
pushf
jmp
inc
arpl
jl
mov
add
sbbb
mov
dec
jge
scas
iret
adcl
xor
fucomi
arpl
adc
add
adc
fmull
sbb
int3
sbb
sahf
lods
xchg
clc
cmp
lods
aam
into
ljmp
jmp
js
ljmp
nop
adc
imul
arpl
in
mov
iret
lret
clc
test
and
ja
sarb
pop
in
mov
movsb
xchg
in
mov
add
out
ficompl
mov
ret
lea
dec
mov
push
addl
xlat
lock
bound
movsb
jns
or
shr
ja
pop
pusha
mov
jecxz
ss
adc
out
xor
xchg
insl
fildll
test
lds
mov
inc
pop
jb
push
mov
test
imul
cs
cmpsl
xchg
inc
push
rcl
or
sbb
gs
cmp
test
aam
lds
dec
and
std
sbb
into
and
mov
add
lret
jle
ja
xor
fsubs
cmp
in
and
adc
call
pusha
jb
jo
js
pop
adc
xchg
in
outsl
ret
addr16
inc
mov
insl
in
xchg
cltd
in
ljmp
scas
into
add
adc
loopne
dec
ja
enter
push
in
data16
and
mov
stos
push
aam
pushf
sbb
std
cli
mov
dec
sbb
mov
cmp
push
nop
xchg
test
pop
or
loope
outsl
negl
and
out
int
out
outsl
fisttpll
scas
lock
int3
jne
imul
pop
dec
add
pop
fidivl
shl
insl
fnsave
rolb
sub
push
mov
ja
imul
xor
insl
outsl
push
adcb
mov
push
dec
jnp
pop
jge
outsb
push
add
fistpll
xor
jmp
push
repnz
and
cmp
inc
pop
fistpl
push
mov
add
cmp
inc
push
xor
sti
pushf
mov
dec
addr16
pop
imul
aam
fsubrl
in
loop
jg
mov
xor
ds
repz
lods
push
outsl
cmp
sub
sub
in
sub
scas
jmp
rcll
mov
in
cmp
je
imul
pop
cwtl
mov
adc
pop
mov
jnp
iret
repz
add
nop
in
fists
ret
in
bound
sar
or
out
sub
push
xor
out
inc
sub
jb
ss
fnstcw
lret
aas
scas
insl
adc
push
out
xor
adc
xchg
mov
pop
xor
xchg
mov
loope
lods
fs
dec
dec
bound
fimull
cmpsb
icebp
lods
mov
sbb
cmpsb
push
mov
jo
mov
aam
jns
jg
pop
push
or
stos
sub
repnz
mov
in
lahf
jno
mov
pop
loope
cld
and
push
out
mov
jb
or
das
lds
fisubrl
and
outsl
adcl
mov
inc
fsubrl
icebp
aaa
outsl
outsb
ljmp
jg
out
in
jno
jg
push
lcall
loop
adc
jb
push
aam
dec
xor
mov
mov
add
cmpsl
mov
imul
cwtl
inc
inc
sbb
inc
lods
arpl
mov
out
sub
push
pop
xor
push
rorl
cmp
jmp
pusha
mov
jo
imul
jno
xor
addr16
or
and
cltd
mov
jb
sbb
jecxz
outsb
xorb
mov
in
loopne
fwait
adc
test
ds
test
das
push
sbb
rcll
xor
scas
mov
mov
test
add
adc
sub
adc
dec
into
mov
jmp
or
cmc
adc
jae
mov
xor
mov
adc
pop
in
in
int
out
repnz
dec
xchg
scas
sub
repnz
xchg
lahf
inc
sub
xor
bound
cwtl
addl
jno
jb
ret
out
sub
icebp
cmp
fdivrs
jne
dec
shrl
jns
dec
arpl
stos
jle
pop
std
jmp
xchg
mov
les
or
rclb
inc
test
cli
pop
repz
call
repnz
mov
cwtl
sbb
dec
push
sbb
mov
jecxz
jle
lcall
sti
ljmp
mov
sbb
sub
add
adc
cmp
out
rolb
stc
xchg
inc
sbb
push
xchg
sarl
ja
aam
iret
adc
xor
je
fcmove
loopne
lock
pop
pusha
add
xor
cli
xchg
lock
fmulp
mov
push
sbb
jb
mov
ljmp
sbbb
mov
xlat
pop
int
and
xor
loopne
add
arpl
lcall
dec
out
xchg
in
aam
dec
lods
insl
cs
push
pusha
icebp
push
mov
scas
and
in
xchg
pop
add
fldl
cmp
sub
int3
jmp
out
in
loop
pop
fisubrl
ret
shlb
out
sub
cmp
inc
pushf
sub
adc
sub
jb
sub
adc
inc
add
push
movl
xor
loopne
shll
in
divb
aam
jne
sahf
fdivrl
mov
push
mov
cli
push
imul
fyl2x
add
pop
stos
push
in
push
inc
fdiv
cli
cmp
sub
and
xchg
add
pop
xchg
jl
mov
inc
add
push
pusha
cltd
repnz
push
in
dec
xchg
xor
arpl
dec
test
or
ja
fists
mov
and
mov
jle
mov
pop
jne
xchg
cmc
test
test
fbstp
cmp
fsubs
or
fldenv
into
nop
sub
repnz
mov
mov
and
jg
push
rcr
push
fisubrs
xor
push
or
push
push
jb
pop
std
jmp
jo
arpl
adc
sub
mov
sbb
jno
in
push
in
aad
aaa
adc
and
test
push
cmp
sub
arpl
xchg
fmull
add
push
leave
std
data16
test
mov
arpl
sbb
in
arpl
out
push
in
pusha
out
popa
xor
lods
fistps
sub
cmc
push
rcrl
adc
sbb
xchg
jbe
ds
lds
ljmp
in
sbb
adcl
push
add
arpl
and
or
xchg
or
iret
in
pop
arpl
xor
jbe
sbb
add
arpl
movd
arpl
ret
lret
add
inc
sbb
xchg
mov
push
cmp
sub
inc
arpl
or
jmp
dec
cs
arpl
push
loopne
sbb
jge
inc
push
movsb
mov
mov
roll
je
dec
lret
not
data16
adc
xchg
mov
sub
test
out
pop
aaa
xchg
es
mov
cmp
repz
xchg
movsb
outsl
notl
sub
sbb
sbb
outsl
push
and
scas
sar
inc
push
xchg
incb
arpl
xor
push
arpl
clc
mov
pop
js
outsb
sar
arpl
imul
sti
arpl
xor
bound
mov
cli
das
js
cmp
xchg
xor
clc
sahf
dec
in
pop
sub
sub
or
fsubrs
inc
add
mov
bound
out
lods
stos
arpl
leave
jno
movsb
or
arpl
aad
mulb
push
shrl
sbb
dec
stos
out
bound
mov
sahf
jno
fdivs
cs
mov
lods
test
sub
jne
push
mov
mov
fdivs
jmp
xchg
repz
insl
call
inc
arpl
adc
insb
mov
dec
xor
or
sub
addr16
fdivrl
arpl
mov
int3
adc
lahf
dec
mov
fs
and
mov
mov
pop
mov
sub
loop
cmpsb
add
popa
cmpsl
pop
movsl
mov
arpl
cmp
pop
cmc
jecxz
jo
jo
xor
pushf
dec
mov
arpl
jns
loope
adc
arpl
fldenv
mov
add
mov
iret
pop
mov
jp
xor
arpl
mov
ja
mov
out
jbe
imul
adc
loope
stos
mov
out
aad
je
sub
push
pop
push
mov
push
dec
adc
fs
shl
jnp
or
mov
je
cmp
mov
into
stc
ret
ficoms
arpl
inc
push
mov
or
inc
scas
cld
jl
outsb
mov
cmp
pop
mov
clc
insl
cmp
xor
rep
divb
addl
jbe
cmpsb
sbb
leave
mov
dec
dec
bound
stc
inc
daa
mov
in
push
arpl
jmp
repz
pop
pop
arpl
lahf
push
mov
mov
out
out
iret
arpl
fcmovne
mov
sub
mov
cmpsl
stos
mov
imul
popf
xor
xchg
cmp
cmpsb
mov
cli
pop
inc
xchg
lret
cwtl
imul
out
jns
bound
enter
daa
mov
pop
xchg
sub
jae
or
arpl
imul
mov
loop
xchg
test
cmp
or
je
and
mov
mov
shrb
imul
xchg
inc
negl
mov
jl
es
into
cmp
xchg
and
push
xchg
adcb
cwtl
inc
pop
mulb
jns
push
inc
push
push
jo
cmp
sub
mov
enter
xor
fdivrs
dec
imul
scas
arpl
mov
jecxz
and
in
xor
pop
push
mov
add
mov
bound
mov
fisttpll
lods
das
inc
sub
fstpt
or
sbb
mov
imul
mov
adc
leave
stc
arpl
mov
mov
push
jo
mov
sbb
and
adc
outsb
sarb
arpl
xorb
popf
jbe
and
add
out
mov
out
addl
jo
int
xor
ror
dec
mov
fidivrs
adc
and
gs
dec
arpl
xchg
test
add
fs
arpl
lods
or
lahf
movsl
mov
jb
fwait
outsl
pop
adc
jno
pop
inc
fmull
addr16
pop
push
inc
repnz
lea
lods
push
inc
sbb
rcll
fwait
adc
add
in
jo
insb
adc
and
inc
frstor
das
bnd
ds
mov
clc
leave
jg
add
arpl
jle
and
in
aaa
arpl
loop
idivl
push
lods
cmpsb
xchg
test
jno
lea
xorb
test
pushf
jp
sub
lret
add
mov
test
push
pop
ret
imul
aas
xor
pop
arpl
cli
xchg
inc
movsl
xor
push
mov
mov
imul
jnp
arpl
sti
out
mov
sub
call
out
add
std
sub
lods
outsl
cmc
je
daa
bound
test
shrb
and
arpl
cmpsl
daa
mov
call
jbe
jecxz
lcall
xchg
arpl
dec
cmpsb
fwait
jb
cmp
stc
push
shrl
arpl
inc
push
outsb
arpl
enter
xor
das
outsl
add
mov
push
js
sbb
arpl
loopne
mov
cmc
and
jo
inc
adc
and
pop
push
pushf
cmp
and
imul
mov
cmc
arpl
js
sbb
pop
mov
mov
lcall
arpl
pop
mov
mov
test
arpl
push
ret
out
xor
sti
jne
insb
jbe
imul
mov
mov
arpl
das
or
cmp
shrd
loopne
mov
lahf
shll
loopne
mov
pop
test
xchg
mov
and
jle
cwtl
dec
stos
or
sbb
ret
arpl
js
pop
jb
lea
mov
sbb
arpl
and
jnp
sti
adc
jle
push
clc
dec
mov
push
test
arpl
cmpsb
aam
jb
inc
mov
fisubs
fs
imul
int3
movsb
cmp
jmp
pop
insb
frstor
icebp
xchg
in
mov
arpl
pop
push
dec
sbb
xchg
sub
mov
sub
arpl
lcall
sub
ficomps
push
aam
dec
mov
shrb
arpl
sbb
sub
arpl
fsubrl
scas
mov
lret
leave
mov
push
push
cli
dec
arpl
and
ror
mov
div
in
inc
and
loop
sahf
arpl
lret
xor
cli
ret
jns
arpl
arpl
rolb
int
into
ds
xchg
mov
stos
and
sub
jl
xchg
xlat
pushf
xor
bound
or
pop
mov
mov
out
jb
arpl
popa
jnp
enter
sbb
jno
into
in
mov
je
and
or
insb
stos
pusha
inc
adc
push
jbe
hlt
xor
mov
pop
mov
repnz
sub
and
test
aaa
arpl
inc
daa
push
outsb
les
out
movsl
imul
rcrb
in
pop
dec
push
sti
xor
xor
orb
xor
in
mov
xor
xchg
or
mov
dec
and
and
outsl
push
rclb
sub
test
test
adc
test
dec
or
inc
push
sub
or
cmp
bound
in
scas
jnp
in
je
xchg
xchg
pop
fdivl
insl
xchg
add
fists
test
gs
xchg
into
out
movsl
mov
push
xchg
insb
bound
xor
les
mov
pop
orb
insb
shrb
add
sbb
cld
stos
xor
imul
out
popa
imul
cmp
cld
arpl
insl
lret
jg
pusha
imul
in
xchg
mov
fldl2e
shll
jb
in
cmc
cmp
inc
fcmovne
jecxz
cmp
pop
in
gs
loop
sub
jo
mov
xor
lcall
aam
icebp
sub
push
int
loop
mov
adc
lcall
push
scas
sub
xor
fsubrs
mov
loop
xlat
xor
rorl
add
int
and
ja
add
push
stc
pop
lock
cmp
lret
in
lret
push
into
movb
sub
outsl
adc
aam
ja
divl
sarb
data16
insl
into
mov
int
loopne
xchg
cmp
lcall
and
jb
cltd
xlat
aad
xor
mov
aam
int
and
lock
insl
imul
xabort
clc
and
jle
adc
and
in
jl
fdivl
mov
aas
lret
push
in
imul
jns
ja
aam
cld
stc
xor
outsl
in
pop
cmp
subb
lahf
icebp
jge
mov
or
insl
inc
cmp
push
pop
insl
ljmp
sub
or
test
add
daa
leave
mov
fidivl
enter
pusha
inc
bound
xor
cmc
push
xchg
test
jle
cld
mov
sti
mov
and
or
imul
sub
lret
pusha
sbb
mov
nop
in
push
inc
ljmp
add
sub
insl
outsb
sbb
dec
sbb
lret
inc
fwait
mov
add
jo
pop
or
lock
lea
insl
xor
loop
ss
cmp
pop
fcmovb
cmc
push
sbb
enter
ljmp
adc
and
ss
adc
push
mov
jmp
into
mov
pop
xchg
loop
jp
adc
arpl
jge
xchg
xchg
shrb
cmp
cmp
lods
ss
out
ss
sarl
cmp
push
out
add
pop
or
sub
dec
cmpsl
fidivl
push
shll
pop
lcall
ret
or
insl
sbb
or
or
xchg
imul
shll
or
inc
mov
in
cmp
jle
int3
mov
lods
jb
or
enter
mov
ret
popf
rcrl
dec
pop
sbb
and
jo
test
dec
cmp
pcmpeqd
and
aam
in
mov
lock
push
gs
mov
add
mov
mov
jb
fbstp
pop
insb
popf
stos
cmp
imul
pop
add
mov
addr16
jle
repnz
pushf
scas
arpl
sti
bound
add
cltd
jecxz
inc
pop
shll
fs
arpl
sub
sbb
dec
sub
pop
mov
aaa
jmp
arpl
shr
jnp
mov
mov
lret
inc
ljmp
sub
arpl
pop
cmp
adc
fbld
push
test
movsb
lock
lods
wrmsr
add
imul
out
xchg
mov
test
and
rcrl
push
dec
stos
jne
das
int3
and
sub
jl
lods
or
jp
pop
xor
or
data16
push
gs
call
imul
cmp
dec
stc
fistps
outsb
mov
cli
ret
jbe
jae
scas
imul
jnp
xor
sti
xor
mov
arpl
jne
pop
lods
jg
arpl
mov
or
add
insb
jge
mov
arpl
cmpsl
mov
cmpb
mov
add
test
insl
add
pop
out
pusha
sub
insl
fisttps
mov
add
xchg
cs
loopne
arpl
das
pushl
push
jno
iret
sbb
arpl
xor
pop
mov
mov
out
jns
xor
arpl
jp
cmp
cwtl
sub
nop
jns
hlt
fwait
imul
frstor
ret
and
xor
fdiv
mov
outsb
addr16
inc
mov
movsb
arpl
in
add
arpl
repz
dec
pop
mov
gs
leave
test
xor
out
push
mov
andl
mov
bound
xchg
lds
mov
jo
arpl
pop
and
or
xor
imul
lock
adc
dec
mov
nop
jno
lahf
lahf
push
adc
out
imul
fwait
xor
subl
aas
in
faddl
mov
roll
mov
test
leave
outsb
gs
jb
ja
pop
lret
in
pop
arpl
jecxz
mov
jo
push
mov
loope
add
arpl
test
hlt
adc
mov
jo
imul
dec
mov
aas
daa
ljmp
mov
add
add
insl
lea
scas
xchg
fdivs
fisubl
dec
lock
pop
mov
mov
jle
fcmovnu
arpl
leave
pop
and
mov
pop
out
pop
arpl
dec
into
test
mov
fsubr
loope
scas
mov
iret
les
imul
sti
add
shll
les
lret
and
sub
or
cmp
ja
test
imul
sbb
push
ljmp
aas
mov
dec
rol
fwait
push
mov
jns
xchg
sub
jmp
lds
lods
xorb
sub
insb
push
lret
clc
push
scas
mov
arpl
dec
out
and
in
add
jecxz
arpl
and
arpl
inc
popa
std
addr16
ja
inc
inc
add
ljmp
orb
arpl
mov
or
stos
cmpb
mov
das
and
std
test
mov
rclb
pop
inc
dec
mov
xor
jp
clc
ret
xchg
cwtl
add
push
dec
out
imul
adcl
inc
pop
arpl
out
push
and
xor
hlt
jp
stos
push
adc
cld
mov
add
aas
inc
add
xor
jnp
and
arpl
test
jnp
mov
les
roll
xchg
mov
notl
ficomps
pop
or
xchg
mov
arpl
dec
test
aam
sbb
js
and
xchg
mov
and
scas
xchg
jge
adc
sbb
mov
lret
xor
adc
leave
js
out
jmp
add
pop
or
push
int3
pop
mov
xchg
mov
andl
je
xor
or
nop
outsb
sub
jg,pt
inc
arpl
int
sarb
ss
and
movsl
xchg
adc
or
fists
arpl
out
fnstenv
arpl
subw
lahf
xchg
arpl
dec
es
pushf
arpl
rorl
xchg
or
sbb
test
loop
lock
scas
jno
and
in
mov
insb
pop
mull
test
pop
adc
enter
arpl
vaddps
xorl
jle
es
ret
mov
testb
jg
out
pop
arpl
pushl
int3
xchg
push
imul
test
pop
sbb
pushf
fstpt
sub
addr16
addb
mov
mov
outsb
dec
inc
cmp
arpl
les
adc
scas
push
stos
fiaddl
push
bound
sbb
push
dec
inc
add
and
cmpsl
rcll
jb
xchg
fistpll
dec
shlb
arpl
lret
sub
jmp
inc
rcrb
iret
push
arpl
mov
lahf
sub
arpl
sbb
adcl
inc
push
enter
mov
dec
fucomip
sub
mov
jle
push
arpl
es
push
bound
inc
xchg
mov
clc
xchg
ret
arpl
sahf
jge
fldenv
cli
mov
add
jle
pop
and
mov
jns
cmp
in
and
movl
ret
cmpsl
inc
xchg
fwait
pop
pop
popf
dec
daa
gs
mov
or
arpl
clc
jne
das
aas
inc
arpl
jp
push
cmp
inc
push
int
fwait
push
aam
mov
stc
arpl
push
adc
jbe
sbb
cld
addr16
or
jbe
int3
int
ja
dec
mov
insl
push
push
mov
cmc
aad
arpl
jg
dec
arpl
pop
insb
adc
les
mov
add
arpl
mov
xchg
xchg
xchg
adc
xchg
jecxz
add
repz
xchg
sub
jo
arpl
xorl
fsubs
pop
pop
cmp
js
movsl
arpl
cmp
mov
ljmp
iret
popf
call
test
pop
fldenv
adc
fisubl
fcoml
and
ds
or
dec
dec
jo
push
addr16
pop
test
inc
sub
sti
iret
imul
adc
mov
mov
bound
pop
in
and
add
push
notb
test
test
sbb
inc
rcr
testb
fsubs
fcomi
arpl
xlat
xchg
add
mov
push
in
imul
js
test
icebp
mov
mov
mov
mov
adc
add
enter
pusha
or
insl
mov
arpl
xchg
push
adcl
imul
push
jbe
bound
jns
xchg
cmp
mov
inc
rol
jno
cmp
outsl
xchg
ret
outsl
lret
js
arpl
lods
testl
mov
lret
inc
arpl
xchg
cmp
xchg
out
cld
dec
arpl
adc
arpl
lods
dec
lods
add
arpl
insb
mov
js
xor
aam
gs
pop
jecxz
arpl
or
inc
daa
cmp
arpl
cmp
mov
sub
jge
pop
movsl
fmuls
pop
clc
mov
xlat
pusha
arpl
repnz
dec
sbb
mov
fstp
adc
scas
jns
lcall
sbbb
cld
arpl
rclb
pop
push
mov
jmp
and
push
repnz
scas
aam
jae
int3
pop
shll
imul
push
jmp
cmp
dec
and
imul
add
andb
repnz
pop
sbb
and
loopne
fsubrl
data16
sub
mov
add
sub
xorb
stos
out
shlb
lcall
jecxz
jnp
scas
fldcw
mov
lods
les
in
mov
out
lds
adc
insl
xor
push
in
or
pop
imul
xorb
in
mov
stc
aam
push
push
lods
mov
mov
movntps
outsl
pop
imul
aam
push
cmp
imul
push
jno
and
jge
mov
arpl
aam
mov
les
or
ret
notb
cs
aam
sbbl
jno
xor
test
lcall
decl
xor
mov
imul
cmpsb
int
mov
push
fidivl
inc
xchg
ror
out
xlat
js
xchg
sub
mov
pop
jnp
in
loop
iret
out
popf
adc
dec
mov
dec
sbb
and
mov
dec
pop
cld
ror
insl
repz
or
ja
out
ljmp
sub
les
repz
xor
test
les
sub
dec
movsl
mov
test
lods
jg
out
or
test
dec
popf
repnz
xchg
scas
push
in
push
ret
push
sub
adc
packuswb
call
xor
daa
popf
sub
movb
insl
sub
into
out
mov
push
adc
icebp
pop
lret
test
xor
fbstp
inc
mov
pop
add
pmulhuw
pop
or
rcl
or
mov
or
js
and
add
testb
lret
andl
pop
out
pop
scas
arpl
or
xchg
xchg
mov
push
adc
push
arpl
js
and
mov
pushf
arpl
inc
jmp
xchg
fdivr
cmpsb
and
cmpsb
adc
outsb
cld
dec
pop
hlt
or
cmp
push
jns
arpl
in
testl
lahf
mov
pop
inc
arpl
pop
cmp
add
sbb
adcl
xchg
sarl
push
push
sbb
sti
popa
arpl
pop
cmp
bound
iret
sub
adc
stos
mov
shld
fsubrp
cmp
mov
dec
push
and
pop
or
arpl
pop
xor
inc
insb
outsb
popa
daa
in
fwait
cmp
fisttpll
shll
or
ljmp
arpl
es
and
jnp
add
jmp
dec
addr16
arpl
mov
out
add
inc
xor
push
icebp
push
mov
push
inc
sub
jmp
fs
fwait
arpl
jp
addr16
add
inc
inc
and
cltd
or
push
in
pop
insl
jo
inc
arpl
xlat
repz
dec
andb
pop
jg
inc
in
aas
push
sub
mov
and
inc
fimuls
std
xor
lahf
stos
xor
fwait
jg
dec
mov
nop
push
inc
jp
call
jle
test
dec
addb
push
arpl
push
add
xchg
jae
imul
sbb
mov
sti
dec
neg
arpl
xchg
clc
pop
arpl
pop
in
dec
xchg
mov
in
arpl
jle
in
cwtl
pop
aas
arpl
insl
verw
cmp
jbe
push
test
shlb
enter
mov
loope
add
scas
mov
adc
cli
ficomps
out
arpl
aam
mov
arpl
mov
pop
add
xchg
push
pushf
repz
call
xchg
std
dec
jnp
mov
outsl
pushf
mov
fwait
xchg
movsb
lret
cmc
outsb
outsl
jo
cld
adc
sub
jmp
adc
out
xchg
hlt
push
push
xorl
shrl
mov
shll
or
xchg
mov
je
outsb
insb
push
in
mov
enter
mov
xchg
arpl
ja
int3
add
mov
xchg
push
out
jp
arpl
jae
sarb
push
loope
arpl
dec
adc
arpl
jns
xchg
lret
xchg
shll
or
jae
push
cmpsl
inc
outsl
dec
dec
push
adc
mov
sub
adc
push
pop
sbb
das
push
and
lcall
lea
dec
lret
mov
pop
fs
gs
arpl
popa
outsl
sbb
add
xchg
out
mov
dec
cwtl
shlb
pop
xor
dec
and
std
arpl
sbb
mov
les
xor
loope
es
adc
adc
arpl
ret
arpl
inc
xchg
arpl
lods
shlb
mov
fstpl
nop
add
inc
rorb
xchg
mov
lahf
cmpsl
stc
lcall
pop
cltd
data16
add
mov
imul
aam
scas
sbb
push
loope
mov
xorl
sbb
xlat
jl
push
sahf
enter
daa
js
insb
sub
enter
lods
ljmp
cmp
mov
into
fs
adc
xor
popf
sbb
mov
imul
jno
dec
mov
icebp
fdivrs
fmull
pop
add
or
dec
or
cli
sub
test
pop
mulb
shll
clc
js
inc
out
pop
sbb
das
scas
sub
push
jo
sbb
out
div
ljmp
insl
ret
fisubl
pop
es
jmp
push
jo
lods
push
es
es
ss
hlt
xchg
lcall
clc
in
aam
mov
pop
inc
ficompl
xchg
daa
mull
xor
test
pop
pop
jno
push
notl
in
insl
sarb
pop
sbb
sbb
lods
inc
ljmp
in
popf
repnz
sub
lret
repnz
xor
inc
mov
std
in
imul
aam
sbb
push
arpl
lcall
xchg
sbb
pop
mov
mov
inc
cmpsl
xor
push
adc
in
mov
dec
out
xchg
rcr
jnp,pt
sub
push
sbb
mov
adc
lret
fiaddl
xor
in
insb
loop
out
outsb
dec
mov
stos
arpl
enter
sub
enter
jno
pop
dec
aam
push
in
fdivrl
cmp
into
jg
jle
arpl
pop
mov
in
insl
testl
xor
mov
pop
sub
xchg
inc
dec
sti
push
test
insl
jle
das
cltd
aad
jle
pushf
in
std
mov
or
sbb
aam
movsl
call
jno
in
shlb
or
adc
insl
xchg
inc
push
dec
mov
xchg
test
aaa
or
into
cmp
in
xor
lock
push
mov
pop
sub
ds
xor
xchg
out
adc
loop
lcall
addr16
inc
std
fsubrl
and
pop
cmp
fstps
jb
sbb
mov
inc
daa
loop
jae
bound
movsl
jno
jecxz,pt
into
xor
rcl
adc
jl
pop
stc
mov
push
cli
dec
pop
push
or
mov
scas
in
sub
fwait
in
pop
daa
lcall
aam
popa
and
xor
and
daa
jg
jl
inc
mov
icebp
push
ret
add
mov
xor
push
cmp
sub
shll
pop
scas
mov
mov
fs
add
sub
std
sbb
mov
jno
mov
fxam
repz
cld
fwait
outsl
repnz
insl
mov
fistps
das
test
inc
inc
in
cmp
insl
shlb
rcl
add
jne
pop
fst
sbb
or
inc
mov
stos
enter
lds
sub
adc
push
jmp
mov
je
xchg
movsb
push
fsub
in
lods
cmp
jmp
pop
testl
std
into
xchg
imul
daa
push
icebp
jp
mov
aaa
mov
je
add
out
xor
pusha
dec
push
movl
std
dec
pop
cld
daa
lret
mov
and
out
add
xor
mov
hlt
pushf
ret
and
xchg
lock
outsb
int
jl
sbb
cmp
add
jo
inc
out
aam
int3
in
ret
ss
sbb
jno
inc
xchg
movsb
aad
or
out
orb
aam
call
push
out
lret
jmp
insb
imul
jnp
and
movsl
je
pop
daa
jl
sub
subb
mov
aam
add
inc
and
in
add
gs
mov
iret
cmpl
dec
dec
sbbb
push
repnz
cmp
sahf
sarl
or
inc
add
and
into
ja
in
bnd
rcl
scas
adc
or
mov
fisubrl
test
into
add
fcoml
jns
lock
jne
pop
and
aam
jbe
test
lcall
pop
imul
sbb
pop
test
in
push
js
dec
dec
outsb
xor
mov
jae
in
cmp
ljmp
mov
adc
dec
or
scas
pop
adc
lds
cmpb
or
push
cs
and
jmp
shlb
daa
test
push
rsqrtps
dec
sbb
and
push
in
mov
in
jbe
test
adc
sbb
lods
stos
sbbb
jmp
sub
adc
mov
xchg
sub
pop
test
jmp
sub
test
mov
aam
mov
mov
mov
aas
fimuls
aam
add
ret
fwait
mov
out
sub
push
pop
mov
inc
dec
rorb
shlb
popf
fistpll
test
shrl
xchg
data16
seto
adc
stos
and
add
fwait
and
xor
repnz
inc
int
or
jmp
dec
aam
fnstenv
mov
mov
adc
mov
inc
addb
data16
outsb
in
insl
ret
sti
cmpsb
xlat
adc
test
inc
cmpsl
mov
cmc
sbb
jno
stc
outsb
frstor
xorb
outsl
mov
jmp
mov
and
lds
enter
in
xor
das
inc
jns
loop
in
aam
and
fisubrl
mov
dec
adc
mov
ja
cmp
xor
stc
into
adc
mov
push
push
mov
xchg
outsl
xor
stos
in
pop
sub
in
jp
sub
dec
dec
cs
jge
arpl
test
xor
aam
std
divl
dec
test
stos
xchg
or
sbb
es
jno
jnp
scas
mov
cwtl
fdivrs
scas
les
stos
clc
pop
lcall
std
jnp
mov
rcrb
fwait
jle
aaa
sbb
sbb
push
pop
out
pop
inc
dec
icebp
jns
cs
insb
addr16
sub
sti
ja
fs
fidivs
xor
xchg
push
pop
and
fisubrs
cltd
pop
ret
std
stos
and
mov
repz
add
pop
aaa
fisubl
repz
xlat
mov
test
adc
xor
mov
aad
xor
iret
jmp
outsl
mov
mov
fisubl
dec
xor
in
sub
xor
aam
mov
ret
xor
mov
das
or
enter
in
mov
repnz
adc
xor
jb
pop
call
scas
and
cltd
nop
out
lock
pop
das
aaa
icebp
outsl
fbld
cltd
lretw
mov
aam
inc
movsb
test
and
dec
das
xor
inc
lret
lret
cwtl
jb
in
leave
mov
iret
icebp
push
cli
dec
sbb
jno
repnz
xchg
stc
aad
push
mov
sub
dec
dec
xchg
push
pop
and
cmpsl
loop
mov
and
sub
in
inc
xor
sbb
out
xchg
stos
push
div
xor
insb
and
repz
aam
fcoml
mov
mov
inc
insl
insl
fdivs
pop
add
loopne
out
daa
dec
sbb
pushf
icebp
aam
out
mov
pop
in
arpl
aaa
aam
inc
mov
out
xlat
fnsave
xchg
xlat
movsb
sub
insl
push
pop
in
and
addr16
jno
push
xor
in
int3
mov
clc
es
sub
imul
cmp
add
repnz
mov
andl
hlt
lock
and
test
loopne
push
jno
jno
out
aam
lea
in
rclb
sbb
jnp
and
daa
mov
pop
dec
test
cmp
call
rolb
sti
je
xor
arpl
in
pop
out
sahf
push
fs
fs
insl
sbb
push
xchg
or
push
jmp
sbb
xchg
or
xor
mov
in
jbe
imul
jmp
icebp
xor
inc
in
inc
pop
test
mov
in
subl
insl
shlb
loop
jnp
pushl
rcrb
loop
jnp
les
inc
lret
dec
cmp
ret
scas
loopne
jno
sub
orl
jb
xchg
and
std
loop
adc
mov
shll
icebp
inc
xchg
mov
pop
lds
fdivr
mov
adcl
and
repz
xchg
jae
int3
movl
in
sub
xchg
pop
shll
jp
shrb
leave
mov
mov
insl
mov
and
adc
and
gs
pop
pop
and
pusha
imul
movsl
adc
into
js
rcll
add
or
cmp
in
or
int3
mov
push
aam
rcrl
mov
push
loop
in
and
add
inc
xor
push
movsb
in
push
dec
xchg
sbb
pop
adc
jns
out
js
ret
ficompl
lock
ret
sbbl
add
push
sahf
jp
xchg
push
mov
jae
and
mov
sahf
data16
jns
push
inc
repz
xchg
int
jno
jo
cmp
jnp
in
aad
or
subl
push
daa
or
out
mov
fsubrs
sbb
scas
daa
daa
push
lods
cmpsb
cmc
or
mov
cmp
hlt
inc
push
dec
cmpsl
cmpsl
pop
leave
xor
pop
lock
in
imul
out
jle
inc
sub
dec
pop
popa
int
outsb
sub
inc
and
les
mov
fiaddl
cmp
mov
adc
and
int
jge
mov
sbb
push
sbb
scas
sbb
in
outsb
lock
shrl
shlb
jmp
inc
scas
test
das
in
inc
sti
imul
mov
sbb
mov
push
fdivrl
mov
imul
in
loopne
mov
dec
bound
cwtl
xchg
test
dec
mov
stos
push
mov
mov
scas
sbb
addr16
push
aam
pop
pop
mul
cmp
adc
inc
imul
xchg
in
adc
dec
ja
xor
xchg
and
clc
rclb
ficoml
fidivrs
dec
jnp
pop
fisubl
sub
pop
push
sbb
or
xor
enter
or
pop
cs
in
or
dec
adc
fs
rorb
scas
sub
iret
ficoms
xor
pop
mov
or
inc
in
sub
inc
push
xor
ljmp
aaa
lods
loop
or
imul
jb
mov
mov
out
lcall
shrl
rol
xor
outsl
xchg
imul
jo,pn
xorl
movsl
cmp
mov
inc
divl
xor
and
enter
push
adc
loopne
add
dec
xor
mov
popl
fmul
movsb
js
cwtl
dec
jg
data16
xlat
jge
iret
mov
insl
push
rorl
push
sbb
mov
lret
or
adc
mov
es
or
adcl
bound
pop
and
mov
push
fcompl
mov
mov
out
cmpsl
and
jl
push
mov
bound
rcl
aam
pop
das
hlt
fstps
and
sub
aam
xchg
sbb
pop
subl
in
int3
cmp
or
dec
mov
jmp
xchg
add
sbb
sbb
fld
xchg
mov
pshufw
inc
ljmp
pop
mov
test
xchg
mov
ss
fs
inc
mov
pop
cmp
push
imul
es
in
jl
and
xor
inc
cmp
hlt
mov
pop
lods
outsl
fnstenv
pop
mov
xor
outsb
mov
stc
inc
insb
rcr
outsb
int3
into
insl
inc
nop
mov
sub
xchg
ret
outsb
ret
cmpsb
shrb
fdivrs
sub
dec
repnz
nop
pop
insb
add
or
jne
loopne
scas
in
in
cmpsb
mov
jecxz
out
insb
dec
lock
lea
mov
jb
js
mov
mov
dec
xchg
fstpt
cmc
lea
cltd
sbb
cmpsl
in
pop
sbb
aam
or
and
inc
dec
outsl
popf
xchg
aam
rorb
mov
clc
adc
loop
cmp
xchg
sbb
mov
in
lods
imul
aam
stos
sbb
je
repnz
repz
lahf
loop
ds
fimull
in
pop
clc
mov
outsb
aad
aam
fmul
jb
movb
rolb
dec
jo
in
cmp
and
dec
inc
sbb
outsl
int
aas
pop
in
mov
or
xchg
aaa
lret
push
ficoml
mov
push
mov
lods
ja
rcrl
clc
jl
sub
dec
test
dec
in
inc
pop
adc
mov
iret
test
rorb
lods
icebp
mov
add
out
test
lea
pop
icebp
cmp
mov
cli
les
mov
pop
fs
repz
cmpsb
lods
xchg
out
repnz
inc
shlb
leave
addr16
xchg
sub
inc
cmp
inc
das
mov
xchg
and
inc
mov
fs
fs
out
xor
stos
pop
mov
jmp
sbb
clc
insl
enter
adc
and
in
cmp
aam
lret
mov
xor
xor
sbb
popf
pop
ds
jmp
ja,pn
mov
icebp
mov
jb
sub
adcb
pop
in
xlat
call
sub
aam
nop
push
mov
test
ljmp
out
in
cli
stc
fstps
fiaddl
popl
xchg
push
in
leave
bound
ljmp
dec
xor
dec
test
jno
xor
mov
ffree
xor
int3
adc
push
push
jbe
push
negb
out
mov
ja
roll
dec
sbb
inc
xchg
stos
and
xchg
aam
adc
jnp
xor
es
in
sub
xor
cmp
jb
loop
jae
sub
xor
lds
mov
into
xchg
cs
adc
mov
xor
das
inc
lock
lcall
lahf
fiadds
adc
daa
ret
xchg
das
mov
jno
dec
dec
into
jns
add
push
mov
sahf
cmpsl
mov
aam
or
sub
je
dec
or
loop
push
ffree
xor
jo
fstps
cmp
pop
mov
lea
fidivl
es
sub
jo
in
cmp
loope
pop
inc
jb
adc
aam
cmp
inc
in
lea
gs
push
and
xchg
pop
arpl
pusha
adc
jne
leave
ficomps
data16
std
push
mov
out
in
int3
loope
and
fistps
pop
lahf
out
ds
inc
aaa
cmp
inc
xor
add
mov
mov
mov
loop
in
sub
sub
icebp
jb
inc
mov
and
xor
push
and
fs
push
lods
xor
adc
scas
shl
and
inc
imul
sbb
test
out
in
lea
add
fimull
loope
jbe
mov
mov
push
xor
loopne
inc
inc
ficoml
jo
mov
xchg
rolb
inc
push
in
ljmp
mov
push
or
jp
pop
add
mov
stos
in
aam
and
in
in
rcrl
push
aas
adc
cmp
repnz
push
fisubrl
cpuid
ret
inc
std
inc
aam
outsl
push
sub
pop
sub
call
and
cltd
pusha
test
loop
sbb
in
les
stos
add
lahf
xor
jge
xchg
call
outsb
push
add
xchg
dec
sbb
inc
jno
sahf
mov
jae
pop
xchg
cmpsb
push
xor
cmp
pop
ret
mov
dec
mov
adc
movsb
aam
outsb
arpl
push
lods
out
jno
jl
lret
sti
clc
in
push
aam
push
icebp
popl
pop
loop
outsl
inc
rcrl
pop
inc
or
inc
lds
xor
inc
mov
push
xchg
sbb
sub
fnstcw
jl
fsubp
cmpsb
push
cmp
or
push
xchg
mov
adc
push
outsb
out
mov
push
inc
xor
xor
dec
push
aam
in
push
pop
push
or
pop
mov
movsl
jp
jb
gs
sbb
dec
sbb
mov
mov
arpl
push
in
addr16
xchg
stos
xchg
and
pop
movsb
sub
jb
adc
icebp
or
pop
jb
pop
popf
sub
arpl
shl
leave
test
bound
and
mov
jmp
sti
shlb
sub
mov
dec
out
adcb
out
push
cltd
sbbb
mov
add
and
add
cmc
mov
popl
ja
imull
and
movsb
and
sbb
dec
arpl
fnstcw
les
popf
fadds
jbe
xor
aad
rep
addr16
hlt
or
inc
arpl
add
push
arpl
sti
pusha
inc
int
or
lahf
leave
jno
dec
arpl
pop
xchg
push
xchg
in
popf
push
and
dec
arpl
jge
ret
push
and
jne
das
jb
xor
and
orl
push
arpl
and
nop
adc
push
mov
jno
pop
arpl
mov
out
pop
pop
call
mov
mov
unpcklps
test
ret
mov
dec
pop
arpl
les
cmpl
mov
xchg
aam
out
lods
insl
fisttpl
sbb
cmp
and
adc
sbb
dec
sahf
movsb
int
sub
imul
cltd
arpl
mov
lret
adc
cmp
mov
xchg
inc
stc
scas
mov
or
jge
adc
xlat
arpl
and
mov
add
insb
ror
in
arpl
and
xchg
adcb
push
push
push
into
pop
arpl
cmp
mov
xor
fwait
int3
pop
lahf
outsl
mov
fsubl
stc
mov
ljmp
test
xorb
sbb
test
fdivrs
xor
ljmp
arpl
jnp
outsb
mov
into
lret
test
pop
ja
arpl
xor
inc
ret
addr16
inc
andb
adc
stc
arpl
call
pop
xchg
arpl
out
sti
cmp
in
les
lds
iret
add
pop
adc
rorb
pop
fmulp
pop
mov
add
jmp
outsl
shrb
inc
movsl
push
inc
iret
notb
xchg
cli
sub
or
sub
filds
mov
sbb
popa
insb
cmp
push
pop
sub
mov
data16
filds
jecxz
inc
imul
sub
les
arpl
addl
mov
rep
lahf
hlt
fmull
pop
lods
ds
mov
adc
sbb
fs
ret
ja
js
scas
test
iret
mov
lret
jne
sbb
stos
mov
xchg
inc
hlt
clc
shll
shlb
sub
and
fnstsw
das
popa
pop
or
std
push
hlt
xorl
mov
das
jl
popa
iret
mov
pop
xchg
imul
inc
inc
sahf
push
stos
std
xchg
js
mov
stc
arpl
cmp
pop
out
pop
push
arpl
adc
sub
das
push
gs
adcl
jp
out
fisttpll
rcll
in
stos
leave
mov
idivb
jcxz
mov
out
addl
fdivl
cmp
cltd
lods
adc
mov
xor
jae
or
sbb
or
push
dec
mov
mov
out
arpl
cs
adc
mov
xor
test
lods
push
adc
stos
into
repz
mov
scas
dec
rcrb
imul
xchg
test
push
and
out
mov
push
push
cmp
mov
push
jo
out
mov
mov
sbb
in
dec
pop
mov
or
orb
cmpl
arpl
jmp
xor
sbb
inc
xchg
push
xchg
shrb
xchg
shlb
out
xor
push
pop
lahf
ret
fs
sub
loop
adc
aas
mov
popa
sbb
inc
arpl
mov
push
cmp
nop
ror
nop
and
insl
ret
xor
aad
stc
lock
xor
mov
pop
inc
pop
jl
adc
out
lods
and
movsl
push
out
aam
mov
dec
in
mov
jl
or
out
arpl
mov
int
out
aam
pop
out
sub
mov
dec
mov
xchg
xor
xor
mov
add
xor
scas
lcall
mov
adc
dec
jge
push
inc
std
aam
fisttpl
sbb
and
mov
jns
pop
push
aam
push
push
sub
adc
pop
mov
inc
icebp
mov
pusha
xor
and
mov
mov
dec
jg,pn
mov
test
inc
pop
in
xchg
mov
stos
or
pop
xor
orl
cltd
xor
icebp
cmp
xor
mov
pop
pop
in
xor
dec
shlb
and
pop
xor
jmp
jb
test
je
cwtl
aad
in
jp
fcoms
sbb
cltd
or
fisubl
in
shlb
adc
scas
adc
cmpsb
arpl
sbb
cltd
add
mov
inc
pop
sarl
lcall
adcb
pusha
sbb
mov
dec
cmp
ljmp
sbb
jg
inc
adc
push
mov
sahf
mov
movsl
movsb
cmp
sub
jge
out
push
xor
loop
add
test
dec
outsl
nop
into
int
arpl
arpl
mov
pop
arpl
dec
iret
cltd
shlb
sbb
add
mov
and
pushf
push
popf
mov
arpl
fdivrl
mov
mov
arpl
dec
add
push
loope
jnp
lret
sbb
arpl
jmp
aaa
cmc
js
or
inc
dec
inc
xchg
daa
push
xor
lcall
mov
cmp
pop
loop
ficomps
mov
adc
ror
sbb
and
xor
mov
adc
arpl
jle
je
xchg
pop
arpl
cmp
arpl
add
jl
bnd
sbb
ds
jmp
sub
pop
or
mov
arpl
sbb
ret
aam
arpl
jno
adc
mov
jge
push
mov
mov
sbb
movlhps
es
or
jb
rorl
nop
aaa
inc
rorl
int
push
enter
jp
and
mov
xchg
mov
mov
mov
xor
sub
mov
dec
cs
pushf
add
lea
lods
inc
xchg
pop
xchg
jbe
mov
pop
push
cmp
out
iret
pushf
das
imul
or
arpl
pop
mov
inc
bound
jne
sub
lret
push
cmp
xchg
scas
arpl
jl
sbb
adc
outsl
xor
cmp
leave
arpl
ds
jnp
add
arpl
mov
cmp
xor
and
mov
cmpsl
xor
sub
les
hlt
dec
sub
ficoml
arpl
sbb
dec
out
jns
xorl
lods
repz
and
scas
pop
lcall
push
dec
and
push
push
cld
push
aas
mov
mov
fwait
or
shrb
arpl
data16
mov
arpl
inc
inc
ret
sub
sub
test
ljmp
pop
jecxz
jp
push
arpl
mov
cpuid
daa
mov
push
clc
sub
push
addr16
mov
dec
jp
mov
js
push
sbb
inc
push
sbb
push
pop
pop
dec
addr16
xchg
rolb
movsl
add
and
cwtl
jo
sub
dec
pop
pop
inc
enter
xlat
mov
dec
popa
sbb
mov
mov
adc
push
dec
mov
push
arpl
sahf
mov
stc
movsb
pop
enter
aas
cmpb
mov
ja
sub
or
mov
aaa
xlat
push
push
xchg
jg
leave
xchg
cmp
arpl
inc
call
arpl
cld
xchg
mov
xor
xor
cmpsb
arpl
and
arpl
out
xor
mov
arpl
popa
movd
push
dec
pop
inc
inc
pop
std
cmp
xor
add
pusha
iret
lods
and
mov
bound
out
rcll
lret
subl
imul
lcall
fimull
jae
inc
push
data16
jp
cmpsb
call
and
jmp
in
jnp
fmull
jno
mov
mov
jno
outsb
aad
arpl
sbb
iret
fiadds
cld
arpl
inc
cmp
mov
stos
fsubs
pop
into
data16
jne
out
movsl
pusha
arpl
dec
lods
insb
cmp
arpl
add
ljmp
mov
add
ret
in
arpl
mov
arpl
push
rorb
pushf
out
dec
aad
cmpsb
sbb
push
xor
cmp
pop
stos
push
es
mov
or
jns
rcrb
inc
pop
xor
inc
arpl
push
xchg
jmp
shlb
add
stos
mull
push
in
arpl
mov
cltd
mov
fwait
shrl
mov
lcall
je
in
fwait
out
adc
lahf
xchg
stos
mov
lods
outsl
aas
iret
gs
mov
inc
arpl
ljmp
xchg
ss
in
add
mov
imul
arpl
jne
xchg
jg
xor
xor
push
sbb
cwtl
adc
pop
or
lret
sub
xchg
ja
jbe
and
std
xchg
jae
insl
out
cmpsl
fldenv
sub
div
xchg
sub
sbb
mov
test
inc
add
fadds
lret
and
cli
bound
dec
mov
jmp
and
xor
xchg
shlb
outsl
in
cmp
arpl
jge
pop
xchg
pop
mov
mov
inc
mov
arpl
xchg
pop
mov
mov
jge
icebp
push
je
ret
imul
sbb
arpl
xchg
int
bound
sub
bsr
cwtl
sub
mov
dec
test
adc
mov
imul
sub
mov
inc
nop
icebp
popf
jge
jecxz
pop
lods
adc
xor
lods
dec
xor
add
clc
cmpsl
stc
push
std
mov
inc
out
arpl
xchg
mov
inc
icebp
jne
sub
les
sti
imul
aam
push
arpl
mov
sub
adc
pop
push
pop
fcomip
cmpsb
clc
inc
arpl
mov
ljmp
jp
arpl
loop
sub
jg
xchg
insl
fisttpl
cmpxchg
lea
mov
xchg
mov
fisubrl
js
aam
sub
pop
xchg
mov
and
stos
mov
bound
pop
inc
cmpsb
and
in
gs
ficoml
outsl
pusha
in
cltd
cmpsb
mov
out
fisttps
cmp
arpl
adc
shrb
add
pop
fstpt
lret
mov
add
xchg
inc
cmp
outsl
jl
sub
add
or
add
pushf
cld
mov
lods
arpl
or
xor
pop
inc
sbb
mov
mov
mov
lods
push
xchg
and
stc
jle
lock
xor
cmp
inc
arpl
cli
cltd
roll
dec
push
fisubrs
pop
orl
xchg
out
pop
test
cld
js
add
mov
arpl
jno
rorl
mov
cwtl
inc
pop
imul
arpl
pop
push
loop
mov
xor
jno
adc
cmp
arpl
leave
filds
push
bound
fdivs
aaa
mov
lcall
push
inc
or
mov
push
cmpsl
call
fwait
lret
arpl
mov
pop
pcmpgtw
fwait
arpl
fstl
stos
imul
lcall
fldenv
sbb
arpl
jno
arpl
cmp
mov
mov
sbb
add
pop
int3
mov
sbb
lds
push
cmp
pusha
jo,pn
inc
lods
jmp
add
ret
imul
arpl
repz
js
lods
jns
jle
jb
imul
test
pop
in
or
cmc
clc
faddl
and
aam
scas
xor
cwtl
sbb
jle
and
ja
cmc
icebp
xor
jae
xchg
mov
in
sti
nop
aam
push
ror
cmpsb
mov
insl
adc
in
cld
mov
mov
mov
and
aam
ret
adc
fstl
das
mov
aam
cltd
pop
lods
in
cli
iret
out
out
das
test
adc
xlat
push
add
aam
movsl
ljmp
repz
jne
test
hlt
imul
add
xor
adc
imul
imul
popl
sub
fs
out
icebp
in
hlt
mov
dec
add
dec
scas
out
es
xchg
xchg
or
mov
ja
test
pop
and
arpl
movl
insl
cmc
dec
test
and
in
push
lret
outsl
mov
mov
mov
jno
inc
or
insl
lock
aad
fnstsw
shlb
pushf
mov
mov
fs
in
lahf
adc
xor
bnd
jno
inc
in
in
rcl
jo
adc
xchg
mov
fisttpl
scas
cmp
mov
ljmp
ret
fidivl
shlb
add
push
sub
xor
insl
imul
jo
imul
xor
ljmp
sbb
cltd
push
sti
dec
mov
cltd
scas
jo
lods
add
mov
lcall
add
mov
xlat
xchg
les
xor
aam
mov
cmpb
in
inc
inc
inc
cwtl
jno
fs
rorl
mov
and
dec
aad
adc
scas
mov
lods
lret
dec
lods
xchg
cld
cmp
gs
cmc
repnz
mov
imul
or
popa
sbb
ja
test
lahf
in
out
jnp
dec
sarb
and
pusha
pop
movsl
mov
xor
dec
jb
in
mull
and
pop
pop
call
lcall
sub
cld
and
jno
repz
push
mov
imul
ss
in
movsb
dec
out
test
add
ja
lds
into
test
repnz
stc
roll
cli
imul
adc
or
push
mov
push
shl
movsl
mov
and
pop
mov
cwtl
pop
inc
daa
sub
jecxz
aaa
pop
cli
int
mov
cld
aam
fidivrs
jo
nop
add
jno
mov
mov
ficomps
popa
or
push
fsubrs
or
pop
push
out
adc
mov
stc
or
outsb
sub
dec
jo
mov
dec
js
aam
sbb
dec
xchg
dec
sbb
loop
out
pop
sub
hlt
outsb
stc
push
jmp
xor
lret
out
xchg
push
or
ret
es
leave
divb
pop
push
dec
cmp
and
arpl
jecxz
adc
popf
stc
adc
std
ss
imul
ds
out
mov
inc
dec
lock
xchg
cwtl
inc
in
inc
push
loop
das
orb
call
rcrb
imul
mov
add
push
lods
into
gs
loopne
xor
inc
popf
insl
jge
out
cs
loop
mov
adc
cmpb
jno
or
push
jae
sbb
icebp
push
sbb
test
xchg
push
dec
or
xor
fadds
and
jmp
ja
lahf
mov
mov
sar
test
pop
jns
cmp
popa
inc
xchg
arpl
add
popa
xchg
jmp
adc
cltd
inc
fidivs
sub
cs
pop
ret
filds
xchg
push
sub
int3
push
addr16
jo
imul
adc
mov
rcl
js
jnp
jecxz
in
test
movsl
fisubl
jno
roll
adc
jns
xorl
les
cli
dec
cmpsb
ret
xchg
sub
xor
fsts
push
lret
int3
pusha
push
jno
int3
hlt
and
test
jge
lcall
and
mov
pop
mov
jne
dec
jg
mulb
pop
cltd
adc
dec
cmovge
mov
cmpsl
imul
mov
decl
popl
mov
xchg
out
mov
movsb
push
arpl
dec
xlat
arpl
xchg
adc
inc
arpl
pop
inc
fisubs
push
out
inc
in
cmpsb
call
sahf
and
mov
push
xor
out
add
nop
shlb
xchg
sbb
fcompl
ja
nop
add
mov
push
add
and
inc
dec
pop
xchg
push
fisttpll
cmc
xor
cmp
lcall
dec
iret
ss
add
sarb
adc
xchg
push
push
fs
ret
sbb
arpl
push
adc
cmp
arpl
xor
cmp
or
jge
cmp
les
dec
arpl
sbb
and
arpl
sbb
ss
popa
mov
out
pop
xor
jge
lds
fs
pop
aam
xlat
stos
add
xor
xchg
js
jmp
lcall
inc
inc
out
add
xchg
rorl
addr16
add
arpl
mov
pop
arpl
test
test
aaa
xchg
inc
pop
popf
std
arpl
pop
xor
arpl
aad
mov
imul
lock
jnp
lds
imul
cmp
and
mov
xor
dec
jge
fists
mov
lahf
mov
outsl
shrb
repz
arpl
mov
in
mov
and
imul
pushl
outsb
outsl
ret
addr16
arpl
adc
test
and
aad
pop
sbbb
es
ret
pusha
push
arpl
mov
dec
aas
fcmovne
arpl
and
jge
adc
mov
and
out
sbb
andl
into
inc
clc
cltd
hlt
arpl
sbb
cmp
movsb
pop
mov
movsl
push
arpl
inc
add
mov
and
out
loopne
outsl
jnp
imul
dec
mov
sub
add
call
inc
or
ret
imul
int3
pop
mov
inc
bound
jns
and
dec
mov
int3
in
mov
pop
mov
and
add
xchg
in
fs
mov
arpl
add
mov
arpl
shll
arpl
jo
adc
into
aam
das
jno
es
mov
ds
pop
jecxz
mov
movsb
movsb
xor
push
push
cld
imul
adc
xor
mov
add
jge
xor
sbb
fstpt
inc
jb
xor
xor
and
data16
add
mov
and
movsb
sub
pop
mov
mov
and
cmp
movsb
adc
mov
addb
mov
sbb
stos
arpl
mov
lds
popa
sub
mov
dec
fnstcw
divl
xlat
cmp
inc
fsubs
adc
mov
aaa
fstl
dec
arpl
jbe
imul
pop
xrelease
orb
imul
arpl
xchg
ret
jg
ja
shlb
dec
stc
rcrl
push
push
pop
lods
scas
arpl
mov
sub
lahf
dec
jno
cmpsb
enter
outsb
cmpsl
aad
lock
pop
mov
rcrb
cli
add
cmp
cmp
inc
mov
or
push
ret
insb
dec
mov
mov
imul
arpl
xlat
call
and
add
dec
scas
and
divb
arpl
mov
jbe
pop
dec
jl
out
jmp
js
push
or
out
stc
pop
mov
loopne
arpl
pop
push
mov
mov
sbb
arpl
mov
dec
test
cmp
xchg
arpl
int
mov
arpl
inc
mov
in
cmp
insb
add
and
adc
push
outsb
pop
mov
fdivrp
jge
push
arpl
jmp
xchg
and
das
mov
jmp
ss
jno
xchg
mov
add
outsb
int3
mov
arpl
notl
sub
push
xchg
subl
loope
sbb
pop
test
push
addr16
dec
mov
cmc
mov
xchg
mov
pop
and
xlat
jmp
lret
je
xor
add
in
sbb
dec
stc
push
or
movsb
adc
push
push
and
sbb
bound
mulb
cmpsb
cmp
lret
test
xchg
jmp
pop
fists
cwtl
inc
adc
cli
pop
imul
jecxz
addr16
imul
divb
clc
rcl
sbb
mov
bound
push
adc
call
stc
imul
adc
insl
mov
and
test
arpl
fiaddl
andl
push
fnsave
fwait
cmp
icebp
nop
or
in
addr16
loop
test
fs
add
cmp
or
pop
fs
inc
arpl
mov
xor
fsub
std
xchg
or
mov
ds
cmp
aam
rcrl
sub
jne
outsl
pop
push
cwtl
fsubrs
sbb
int3
into
push
xchg
iret
bound
or
data16
bound
sbb
lods
push
addr16
jl
fisttpl
or
jge
imul
lock
add
fcomip
pushf
add
xchg
jne
cwtl
addr16
jecxz
arpl
fiaddl
xor
pop
xchg
xchg
cmp
scas
mov
xchg
inc
push
pop
or
push
in
pusha
icebp
add
xchg
std
fbld
int
jle
in
mov
push
out
in
outsl
cmp
ds
jg
nop
imul
int
arpl
lds
fildll
inc
imul
mov
xlat
inc
xchg
scas
dec
arpl
ret
xchg
xor
int
pop
arpl
sub
cltd
popa
pop
mov
arpl
aam
jl
mov
jmp
mov
ljmp
inc
popa
mov
jne
arpl
test
fwait
add
dec
rclb
mov
rcrl
out
cmp
cmp
ljmp
sub
wrmsr
mov
frstor
loop
dec
inc
pop
not
sbb
out
das
arpl
int3
loopne
pusha
mov
enter
mov
sub
aas
fistps
jns
inc
addr16
fwait
adc
mov
cs
stc
fsubs
out
addr16
mov
bound
stos
sbbl
addr16
std
add
pop
cld
lods
inc
fwait
jmp
and
rcrb
mov
stos
aas
cmp
jecxz
std
shlb
data16
or
arpl
test
xor
lods
aam
add
in
jmp
repnz
adc
outsb
bndstx
cmp
fmuls
je
in
jnp
mov
xchg
xchg
sahf
mov
arpl
inc
push
mov
aaa
leave
ret
and
sbb
push
add
sub
stc
jnp
outsb
addr16
mov
or
cmpsb
imul
lods
pop
fnstsw
sbb
rcrb
scas
jmp
xor
fisttps
and
adc
add
xor
bswap
imul
dec
scas
scas
out
imul
jmp
popa
xchg
bound
jb
pop
cmp
nop
inc
mov
fwait
inc
lods
push
mov
arpl
pop
jae
xchg
fdivl
push
std
xchg
lock
les
ret
push
outsl
scas
sbbb
gs
xor
adc
adc
jb
gs
push
cmp
adc
jnp
mov
hlt
and
cmpb
pop
inc
add
dec
scas
inc
xor
fs
call
shl
mov
arpl
loope
sbb
sbb
mov
xorb
dec
arpl
mov
mov
or
cmpsl
arpl
push
arpl
jb
cwtl
sub
xchg
clc
enter
movmskps
pusha
nop
and
inc
addl
mov
adc
lock
popa
jp
push
jle
cmpsl
xor
mov
add
aad
arpl
pop
subb
test
pop
enter
dec
push
or
insl
lret
hlt
out
pop
mov
push
xor
stos
pushl
and
xor
adc
cmp
mull
lret
xor
fisubrl
push
insb
incb
popa
mov
mov
inc
mov
push
pusha
arpl
jge
out
add
and
stos
jl
sbb
push
push
push
jo
dec
sub
es
inc
js
jno
hlt
outsb
jmp
stos
sti
cmp
inc
imul
js
push
mov
ret
addr16
cmp
scas
lock
clc
adc
fs
ret
fimuls
imul
fistps
fsubl
aam
mov
sbb
sbb
dec
dec
dec
movsl
lods
add
in
popf
jae
xchg
repnz
sahf
jno
add
in
in
dec
adc
cmp
aam
jo
sbb
push
cltd
or
and
jnp
test
jge
mov
mov
push
sub
ret
icebp
pop
test
xor
test
test
outsb
stos
push
push
sub
mov
test
test
cwtl
daa
mov
jmp
fwait
imul
and
insl
xor
mov
mov
lret
inc
aas
std
mov
mov
and
inc
dec
jo
fdivrl
push
les
aas
inc
mov
xor
mov
stos
add
lahf
lsl
xchg
dec
lcall
in
lods
sbb
dec
add
ljmp
cmpsb
icebp
cmc
mov
ja
mov
cltd
cmp
pop
mov
dec
cmpsl
ljmp
xor
or
inc
adc
xchg
mov
pop
icebp
inc
mov
test
dec
inc
push
or
sub
rol
stos
jo
in
call
push
jbe
fisubrl
cmp
into
sar
mov
icebp
aam
repnz
jmp
roll
shrb
sbb
and
lds
sti
add
stos
xchg
jle
outsb
add
push
sub
out
out
mov
out
outsl
sbb
in
mov
pop
mov
dec
jp
das
lods
test
subb
out
xor
in
sub
cmpb
popf
adc
cmp
loopne
dec
pop
push
cmovne
push
push
pusha
outsl
repz
push
mov
cmpl
inc
lods
loop
test
or
in
mov
dec
adc
icebp
rorb
outsb
mov
hlt
push
in
fcompl
push
adc
aam
sarb
int
insl
mov
mov
dec
ror
pop
les
push
adc
and
add
push
pop
jecxz
roll
dec
lea
mov
scas
jb
mov
mov
fiaddl
andl
push
mov
cmp
sahf
dec
adc
push
jge
mov
mov
adc
dec
shr
aam
mov
mov
mov
das
push
xchg
ret
cwtl
mov
ret
jo
cmp
add
cwtl
iret
cmp
mov
xchg
sbbl
fdivs
pop
into
insl
lcall
jg
rolb
xchg
push
aam
mov
inc
dec
arpl
les
jb
loope
loop
repz
mov
xchg
fldenv
push
outsl
dec
cmp
cmpb
cmp
aam
aad
clc
sub
sub
in
mov
inc
inc
stc
mov
sahf
cmc
mov
loop
jecxz
and
repnz
or
ret
or
cmp
xchg
adc
sub
scas
mov
mov
dec
pop
pop
sbb
decb
in
push
mov
icebp
jno
and
fwait
aam
scas
push
in
aaa
fstpt
cmp
aam
fs
xchg
sub
repnz
inc
arpl
repnz
xchg
stc
mov
pushf
and
add
xorb
cmp
ljmp
push
sbb
lahf
or
bound
or
mov
dec
push
mov
ja
pop
jae
adc
icebp
push
add
pusha
push
jo
negl
ljmp
jo
fnstcw
or
out
push
imulb
add
scas
mov
es
js
pop
int3
dec
push
sbb
lds
xchg
sub
mov
stos
addl
fistps
call
push
sub
inc
xor
insl
pop
daa
inc
xor
int
push
pop
test
pmulhw
pop
mov
les
daa
cmp
mov
dec
push
cmpsb
lret
sub
cmp
repz
pop
push
or
imul
enter
fbld
xchg
pop
inc
fsub
mov
push
inc
and
imul
call
sbb
out
lock
bound
subb
or
xchg
cmp
shrl
xchg
inc
in
xor
jmp
clc
in
ret
sub
ret
sbb
daa
mov
and
ret
mov
pop
cs
inc
pop
and
push
repnz
js
jb
inc
dec
push
inc
and
pusha
dec
out
jp
mov
out
in
lods
clc
pop
outsb
ss
cmove
fcmovbe
mov
insl
fimull
dec
cli
sbb
popa
and
rol
mov
sub
inc
sub
and
ss
jnp
sub
jb
cmp
add
rcrl
arpl
shlb
call
push
xor
mov
xchg
inc
out
push
bound
jb
mov
push
imul
jb
iret
notb
imul
les
dec
inc
ret
mov
sub
sub
mov
jo
int3
cmp
mov
test
lods
and
pop
cmpsl
inc
ja
icebp
inc
inc
and
sub
fs
push
lods
cld
mov
xchg
sub
dec
push
ljmp
scas
sti
jb
cli
mov
test
mov
insb
cltd
loopne
gs
mov
lds
push
clc
cmpsl
push
movsb
push
or
daa
daa
push
mov
inc
inc
in
mov
cmp
xor
mov
stos
test
out
lds
mov
pop
jmp
sarl
and
and
scas
or
push
adc
repnz
sbb
push
xchg
sti
or
adc
jo
mov
push
cmpsb
or
loopne
repnz
mov
rclb
adc
and
push
push
fcompl
rcll
adc
sub
shlb
aas
add
or
cli
mov
out
pop
mov
jne
lock
or
xor
dec
xchg
out
xor
dec
scas
jo
mov
imulb
push
push
mov
mov
sub
jno
in
mov
fnstenv
fdivr
xlat
xor
imul
pop
outsb
pushf
scas
push
stos
test
setle
imul
daa
stos
std
pop
inc
cmp
dec
mov
xor
sbb
hlt
das
fucomip
jae,pn
movsb
jg
xchg
bound
cli
sbbl
outsb
sub
test
and
sub
sub
cmp
lods
or
daa
sahf
cmpsl
adc
dec
imul
sub
cli
mov
aad
jo
les
inc
or
in
into
ret
cmp
mov
loopne
sub
adc
sbb
or
push
stc
pop
cmp
arpl
dec
nop
sbb
cmpsl
insb
in
or
pop
sahf
push
and
mov
lock
nop
fmulp
lods
stos
mov
imul
dec
xor
adc
sub
js
sbb
fimull
in
scas
loope
inc
jo
mov
fsubrs
xlat
addr16
icebp
add
test
xor
fdecstp
push
dec
pop
jo
pop
cmp
outsl
in
adc
dec
mov
push
mov
or
rorb
in
xor
inc
sbb
cmpsb
xchg
dec
xor
or
divb
cwtl
jmp
adc
cmp
sub
and
cmpsb
cmp
cmpsb
mov
ljmp
cld
and
mov
mov
mov
rcl
fbstp
cmc
fimuls
out
pop
mov
pusha
sbb
sbb
cmp
insl
jbe
imul
stos
ja
add
test
ss
jbe
lret
mov
imul
sbb
inc
adc
shl
ss
fldcw
fldt
insl
stos
sbb
xorl
jmp
jle
sub
and
js
and
ret
xor
test
mov
mov
out
push
call
aas
in
mov
sbb
in
push
mov
xor
rolb
aaa
and
leave
lods
fs
sub
xor
pop
and
jo
icebp
sub
jo
jg
clc
push
lods
inc
pop
sbb
xor
sub
addr16
popa
mov
out
mov
jle
jmp
imul
lar
cmp
aaa
mov
push
xchg
shrl
push
clc
or
sub
iret
mov
in
insb
out
clc
call
mov
add
notl
out
int
out
addr16
scas
pop
outsl
push
mov
dec
jge
scas
repz
pushf
cli
mov
out
and
xchg
imul
add
or
mov
xor
jg
movsb
sub
cs
mov
addr16
call
test
jno
popf
pop
mov
insl
lods
lods
inc
push
in
mov
inc
addr16
leave
ds
insb
cld
shr
xchg
jo
adc
hlt
or
cmpsb
push
fs
mov
push
iret
test
loopne
mov
sarb
mov
addr16
cld
das
fidivrl
sbb
lret
jo
sbb
test
ljmp
jnp
and
insb
sub
lods
pop
add
cmp
movsl
adc
aas
outsl
sbb
or
addr16
rorb
sub
sub
in
xor
clc
cmpsb
rorb
fs
cmpsb
cltd
das
lods
jg
test
outsl
icebp
aam
movsl
mov
add
ftst
outsl
mov
icebp
xchg
dec
xchg
add
addr16
inc
insb
push
int
out
scas
push
jge
sub
test
repnz
es
sub
test
lock
mov
xor
dec
out
sub
decb
push
xchg
jecxz
or
test
out
mov
push
fs
xor
adc
or
icebp
push
scas
xchg
sub
pop
push
imul
jecxz
inc
lret
sub
sub
lsl
imul
mov
or
pop
loope
out
cmpsl
jl
or
push
adc
ret
push
jo
xlat
or
mov
sub
push
and
add
lret
out
push
mov
jo
icebp
xchg
or
pop
sbb
fs
ret
lods
mov
mov
sub
push
xchg
sub
xchg
or
xchg
pop
cmp
das
inc
pop
pop
imul
inc
mov
mov
stos
insb
pop
fcomp
in
es
cmp
push
bound
sub
inc
xlat
cmp
inc
loope
push
imul
je
sbb
sub
into
imul
jl
sbb
and
mov
fcmovu
movsb
stos
mov
sahf
xchg
movsl
imul
pop
movsl
scas
push
inc
mov
jle
jno
mov
call
cs
jmp
fcmovnbe
jp
imul
shl
mov
sub
sub
mov
sarl
nop
mov
stc
push
repnz
pop
dec
cli
pop
andb
inc
lcall
cs
xchg
and
xor
bound
jl
mov
pop
pop
movsb
xor
pop
outsb
icebp
push
add
mov
test
mov
xor
sub
es
or
imul
xchg
outsl
scas
sub
cmp
nop
mov
mov
imull
outsb
stc
push
and
jmp
mov
sub
xor
push
in
sbb
xor
sub
sar
mov
sub
jb
icebp
or
and
fists
or
push
or
gs
movb
lret
mov
cmpsl
pop
sub
out
inc
gs
addr16
orb
out
loopne
push
or
pop
jecxz
ret
insb
cld
xor
outsl
lods
cmpsb
in
cmp
mov
xor
imul
add
icebp
repnz
sarb
cmc
mov
and
test
addr16
cmp
clc
mov
cmpsb
mov
and
mov
js
loop
pop
pop
and
outsb
adc
or
mov
js
test
out
movsb
jl
push
and
loop
repnz
mov
into
je
cmpsl
inc
in
fbld
inc
lods
in
imul
imulb
sub
dec
call
test
sub
jmp
sbb
or
test
mov
ret
or
mov
movsl
sub
dec
xor
jecxz
aaa
out
sub
jo
stos
lcall
idivb
pop
insl
or
xor
dec
sub
cmpsl
fisubs
out
loope
add
lcall
pop
adc
adc
push
daa
test
and
mov
andb
pop
outsb
or
sbb
movsl
scas
xchg
insb
inc
mov
push
push
in
enter
xlat
dec
or
stos
inc
pop
repz
mov
bound
imul
lret
mov
dec
imul
fldt
std
into
jnp
sub
test
fs
outsb
sbb
push
xorb
sbb
arpl
mov
sub
bound
in
ret
outsb
mov
nop
sbb
xchg
push
stos
mov
xor
jp
and
add
or
xchg
push
jecxz
fldcw
and
ret
xchg
push
or
insl
pop
hlt
loope
mov
insb
or
test
outsb
push
inc
jmp
jle,pt
cmp
lods
cmpsl
push
jns
jo
xor
cmp
pop
leave
test
sub
pop
aas
mov
xchg
enter
hlt
mov
xor
xor
dec
dec
sbb
mov
imul
or
push
xor
shrb
add
jnp
cmovno
xchg
insl
jo
or
gs
pop
test
gs
loopne
test
lahf
adc
cmp
clc
pop
xor
cmpsb
xchg
sbb
test
jbe
mov
shl
xor
xorb
xor
call
jle
out
and
jle
mov
sub
rcr
sub
pop
inc
nop
test
aaa
jmp
mov
call
sub
mov
sub
and
test
mov
insl
mov
lret
cmp
insb
test
movsb
jge
out
jmp
sbb
sbb
push
jo
sti
insb
loopne
in
mov
fucom
loope
push
xor
fstps
insb
sub
add
xchg
cwtl
test
inc
shlb
jecxz
ljmp
ds
clc
test
insl
push
test
mov
lret
jp
adc
and
mov
mov
cmp
imul
mov
jecxz
popf
sub
mov
adc
mov
push
stc
sti
out
out
push
or
bound
xlat
cltd
stos
scas
inc
cli
cld
das
jp
cmp
xchg
addr16
pop
je
mov
sub
xor
cs
fisubl
mov
in
loope
sbb
arpl
aad
popf
insl
repnz
sub
inc
test
stc
xorb
xor
or
xor
and
adc
clc
iret
dec
shrl
shrb
xchg
mov
insb
xor
pop
outsb
inc
lds
mov
xchg
push
xchg
jns
repnz
ds
cmp
lock
sub
mov
gs
stos
inc
std
scas
mov
jae
xor
sub
sbb
cmpsl
push
pop
fsubr
ljmp
sub
fimuls
out
sbb
cli
sub
mov
cli
inc
out
jl
push
sub
inc
mov
push
lahf
pop
add
pop
outsl
push
xor
cmpsl
test
fistl
or
cmpsl
insb
repz
jnp
das
mov
mov
mov
scas
xor
cmpsb
cmp
dec
aas
xor
pop
das
jo
inc
lds
mov
jb
cs
jbe
mov
mov
out
jecxz
pop
mov
loopne
fcomi
cs
fsub
jne
nop
and
addr16
xchg
mov
cmp
cmp
mov
adc
arpl
jo
in
call
dec
push
test
hlt
push
ds
loopne
xchg
stos
ja
pop
mov
lock
cmp
scas
jb
ja
push
repnz
mov
mov
push
mov
je
out
insl
pop
sbb
repnz
lea
fsubrs
jg
add
push
push
adc
sub
scas
outsl
push
add
mov
js
out
pop
cs
dec
cld
jb
xchg
jae
sub
mov
fistps
out
bound
push
outsb
icebp
xchg
xor
int3
inc
dec
lds
cmp
mov
mov
aad
xchg
ljmp
xlat
shl
or
mov
int
out
call
xor
lret
loope
test
stos
mov
repnz
dec
cmc
mov
gs
decb
lods
push
mov
fs
dec
push
leave
insl
repz
push
movsb
addr16
inc
lahf
js
fstpt
outsb
mov
stos
add
cli
test
push
shll
push
adc
and
push
lods
push
mov
into
lock
lods
stos
or
stos
mov
imul
dec
xchg
imul
daa
xchg
add
jmp
in
cmp
and
insl
stc
or
pop
in
in
out
insl
lret
fnstenv
pop
aaa
out
jno
mov
arpl
jmp
jmp
faddl
sub
sarl
iret
gs
mov
inc
xor
adc
insl
dec
sub
loopne
adc
jecxz
push
in
pminsw
jno
bound
shr
lock
jge
outsb
in
xchg
repz
mov
mov
xor
mov
sub
xor
es
inc
pop
push
inc
add
sahf
mov
ds
sub
sbb
jno
lret
mov
outsb
jo
imul
movsb
and
pop
arpl
xchg
ljmp
or
scas
pop
pop
in
lods
sarl
lret
lods
push
jecxz
nop
and
out
push
fs
mov
or
int3
mov
pusha
hlt
mov
enter
sub
mov
pop
out
adc
xor
out
dec
icebp
or
inc
fsts
pop
xchg
test
imul
test
xor
mov
icebp
or
es
cmp
addr16
pop
push
xchg
dec
push
cmp
cltd
xor
jg
out
xor
mov
inc
jnp
into
popf
cmp
das
shlb
mov
jp
fs
xchg
cmp
scas
xchg
out
outsb
inc
popa
push
inc
add
test
addr16
mov
lcall
stc
xchg
pop
ljmp
fnstenv
push
cwtl
jecxz
inc
out
fs
call
mov
fldl
into
insl
or
mov
mov
and
sbb
pop
inc
aaa
out
mov
cmc
or
ret
jmp
stos
inc
pop
mov
xor
ret
addr16
adc
wrmsr
ror
imul
mov
rorb
push
in
das
cmpsl
lods
inc
sub
mov
ror
pop
outsl
xchg
int3
into
jle
movsb
push
cmc
bound
out
cmp
sub
xchg
sub
pop
jle
lods
inc
xor
out
in
push
in
es
ljmp
call
xor
test
loopne
out
dec
scas
push
roll
in
mov
fnstcw
jno
xchg
insl
data16
sub
or
daa
and
dec
stos
arpl
je
or
xor
sub
hlt
cs
fdivr
pop
jmp
ret
and
dec
dec
stos
iret
sbb
xor
cmpsb
adc
int
mov
jno
fnstenv
xor
cs
ljmp
push
icebp
rcrl
dec
lods
jmp
xchg
xor
out
ljmp
mov
mov
dec
jo
xor
xchg
and
dec
mov
test
cmpsb
scas
push
xchg
ds
in
ljmp
sub
std
jmp
or
push
insl
cmp
aas
inc
mov
lret
cs
out
pop
mov
jle
mov
out
jns
imul
mov
ljmp
xchg
loopne
push
dec
mov
xchg
imul
shr
push
push
nop
int
outsb
dec
loope
and
or
lret
fimull
stos
loopne
in
push
xchg
pusha
mov
daa
mov
cmpsb
jp
insb
stc
das
pop
lods
imul
xchg
in
dec
mov
sahf
aam
insb
fldt
push
call
movsb
loope
mov
fnstsw
imul
pop
test
icebp
repnz
xchg
xchg
mov
es
test
insb
jecxz
clc
push
mov
imul
push
aas
xor
push
mov
mov
mov
pop
jecxz
mov
out
cmp
out
cmp
and
inc
test
imul
test
sub
jo
push
les
xchg
leave
jo
movsl
mov
les
fidivl
out
sub
in
pop
stos
and
aaa
insl
sub
out
popa
mov
mov
insb
cltd
test
daa
bound
stos
and
add
call
jl
xchg
test
outsb
imul
sub
dec
mov
pop
xor
jmp
sub
addr16
fucomp
push
inc
pop
repnz
test
nop
adc
add
daa
cmp
push
loop
out
in
dec
daa
insl
sub
cli
inc
insl
sub
mov
mov
lods
push
inc
mov
sub
outsl
xor
loopne
sub
sub
aad
mov
stos
jo
adcl
or
imul
push
addr16
mov
jb
je
mov
js
stos
sahf
shrl
sub
adc
out
push
je
jl
daa
add
adc
pop
out
jo
xchg
or
and
aad
imul
notl
pop
cs
loop
cmpsl
addr16
dec
add
sti
jo
movsl
push
aaa
jp
loopne
in
dec
fldcw
xor
push
clc
sub
rorb
imul
lock
movsb
jns
sub
or
mov
fmull
mov
stos
fcmovu
imulb
adc
mov
addr16
mov
movsb
xor
mov
stc
lret
fnstenv
sbb
dec
aaa
mov
decb
arpl
cli
cmp
testb
jmp
pop
jbe
lock
inc
neg
out
inc
fwait
sub
fs
or
mov
inc
push
lods
mov
cwtl
xor
notl
xchg
test
mov
add
jle
jmp
ja
imul
mov
into
stos
sbb
jns
arpl
adc
jo
xchg
push
jecxz
es
scas
int3
movsl
inc
inc
sbb
inc
cs
das
push
pop
jbe
adc
sub
sbb
mov
sub
and
aad
addr16
sbb
push
daa
daa
pop
sub
stos
jb
xor
adc
imul
movl
das
push
ret
add
mov
mul
insb
cld
fucomp
push
fdivs
pop
stc
mov
addr16
push
jecxz
inc
out
push
out
stos
shlb
fimull
lods
sahf
dec
test
lret
mov
cmp
ret
add
jno
xlat
lods
jp
repnz
call
xor
jmp
test
arpl
lcall
fldln2
push
xor
push
lods
push
test
mov
cmp
mov
shrl
pop
imulb
pushl
je
cmpsb
cmpsl
xor
jbe
and
xor
lock
outsb
mov
push
pop
sbb
into
insl
xor
sub
sbb
out
bound
aad
mov
cmp
movsb
fldt
mov
xor
mov
jge
pop
arpl
sti
push
pusha
aad
iret
mov
je
pusha
mov
stc
sahf
inc
ret
sbb
pop
jbe
xchg
mov
mov
imul
add
mov
pop
mov
pop
push
sub
and
cmp
lahf
hlt
sub
sub
and
insl
testb
fildll
push
jge
mov
add
dec
mov
inc
cmpsb
mov
sub
and
stos
test
ja
test
xchg
aas
or
flds
pop
out
nop
jno
fsubrs
pop
xor
lds
pop
and
mov
cs
mov
div
push
testl
pop
out
and
insl
jb
cmp
andl
mov
or
jbe
lret
test
outsl
ficompl
jmp
insb
enter
pop
outsb
je
mov
in
mov
mov
in
out
rorl
imul
lahf
xor
das
jns
sub
mov
cmp
aaa
neg
push
lds
out
inc
in
sub
cmp
dec
insl
xchg
stos
add
cmpsl
xchg
out
call
jmp
or
stos
out
stos
dec
fmul
out
out
ret
call
mov
xor
and
subb
xchg
test
or
mov
pop
cs
addr16
sbb
lret
daa
insl
leave
into
adc
mov
in
out
jno
mov
jbe
push
jecxz
add
adc
daa
int
imul
adc
xchg
subb
insb
lods
sbb
inc
mov
cmp
pop
or
mov
cwtl
mov
lods
fistpl
out
jo
sbb
sbb
cmpsl
call
mov
jecxz
loop
jle
sti
shll
sub
xchg
and
xor
stos
loopne
movb
arpl
das
stos
adc
out
enter
inc
mov
xor
pop
jecxz
cltd
movsb
gs
imul
xor
in
jmp
cs
xchg
adc
in
jmp
adc
push
out
inc
xchg
lret
sahf
mov
popf
stos
dec
movsb
and
popf
adc
lea
out
mov
sbb
bound
xor
sub
shl
adc
movsl
and
scas
sbbl
stos
push
mov
push
aad
adc
scas
stos
sbb
stos
sarl
das
fstps
scas
outsl
out
call
push
lock
cmp
movsb
out
push
repnz
clc
movsl
sub
xchg
in
jo
frstor
cmp
mov
lret
call
scas
insb
and
call
mov
das
es
das
lods
push
imul
call
mov
mov
jecxz
or
mov
xorb
add
sub
ret
rcrb
push
and
rorl
and
sub
or
scas
push
nop
mov
and
test
gs
outsb
mov
xchg
xor
das
jmp
pop
xlat
mov
addr16
and
cmp
into
rolb
stos
push
pop
cld
movsb
outsl
inc
out
jle
xor
ficompl
pop
lods
push
test
pop
mov
aas
loop
sub
cwtl
stos
mov
dec
out
cs
movsl
aaa
mov
lret
xlat
and
gs
fildll
and
inc
in
pop
jne
xor
or
out
lods
in
stc
test
push
in
xor
mov
test
hlt
adc
jmp
in
repnz
cmp
jb
icebp
and
cmp
outsl
dec
fyl2x
movl
push
int3
aaa
mov
jmp
test
mov
pop
mov
cmp
repnz
lods
push
lods
xor
dec
test
in
out
in
mov
addb
mov
test
and
jns
das
inc
add
push
mov
mov
cmpsb
jmp
xchg
jns
cmpsl
out
cmp
jp
fwait
daa
xor
pop
rorl
mov
in
jb
das
shr
sub
sbb
stos
adc
enter
movsb
test
jecxz
inc
push
mov
movsl
xor
sub
push
jo
mov
mov
jb
pusha
out
icebp
bound
subb
out
mov
xlat
mov
fucomp
es
movsl
fidivl
icebp
imul
cmp
mov
out
test
and
adc
mov
sbb
icebp
stc
loop
adc
and
xchg
push
cltd
stc
xor
push
push
jno
jbe
pusha
dec
imul
xlat
in
inc
dec
cltd
adc
scas
jle
out
outsl
pop
stc
test
jmp
stos
mov
lods
loopne
and
or
mov
xor
jle
loopne
insl
sub
aaa
call
inc
scas
ja
xchg
daa
sbb
adc
aaa
push
das
inc
dec
insl
sub
mov
mov
scas
cwtl
and
clc
and
test
sub
outsb
lret
scas
arpl
adc
jg
daa
sbb
xor
fistpl
aaa
and
cmp
insl
push
push
in
inc
test
inc
sub
scas
sub
insl
pop
pop
mov
jmp
adc
xor
push
adc
xchg
mov
test
dec
pop
cmp
icebp
adc
addr16
insb
cltd
into
sub
into
inc
out
insb
ss
jecxz
cmp
iret
ljmp
cld
bound
ret
mov
xor
push
popf
pop
mov
inc
test
jmp
rorl
xor
rorb
xor
mov
pop
mov
sub
pop
lods
lock
mov
es
ljmp
outsl
inc
add
mov
lods
lahf
stos
inc
pop
lods
dec
pop
mov
call
mov
notb
aas
insl
xchg
mov
stos
jbe
lea
push
xor
sbb
inc
ljmp
enter
adc
jmp
jp
repnz
insl
xchg
mov
mov
scas
xor
iret
out
imul
cmpsl
xacquire
imul
into
ss
add
push
jmp
loop
jle
xor
jp
mov
xor
jp
mov
and
xchg
cld
ret
mov
xor
popa
inc
fucomip
pop
pop
cld
jecxz
add
icebp
push
xor
pop
imul
aaa
lods
mov
add
test
mov
ffreep
mov
jge
xchg
out
das
mov
pop
popf
jge
sbb
icebp
stos
sub
shlb
mov
mov
push
sub
es
xchg
dec
lea
sahf
fsubrl
push
adc
pusha
bound
cmp
add
and
push
pop
test
cli
xor
lods
push
lods
mov
loop
dec
mov
shr
inc
add
jo
fstl
jg
xor
cmp
test
push
and
stos
inc
aas
dec
sub
mov
and
fcmovnbe
leave
push
jmp
cmpsb
dec
gs
mov
outsl
fidivl
sub
ret
out
or
adc
test
adc
sub
or
dec
out
jno
lret
or
jmp
insb
mov
mov
pop
push
in
fs
cmp
adc
sub
insb
xor
in
in
xor
and
lds
hlt
lods
push
push
rcr
mov
mov
sub
dec
clc
xchg
and
out
push
pop
jle
fs
int3
int
inc
pop
push
push
sbb
imul
xor
pop
push
xor
bound
insl
ret
icebp
daa
mov
sbb
icebp
push
pushl
icebp
mov
sub
push
std
stos
lret
and
out
add
mov
sub
and
orb
jbe
adc
repnz
out
and
cli
jmpw
cmp
addr16
imul
insb
out
addr16
mov
jge
fs
or
gs
xchg
out
scas
cs
in
inc
lds
dec
stos
out
lret
in
lcall
adc
scas
pop
inc
int3
out
lods
jle
mov
jmp
test
push
mov
jno
mov
ljmp
jne
pop
popa
mov
call
iret
call
mov
jge
sub
das
hlt
negl
pop
nop
outsl
xor
mov
xlat
out
jb
ds
gs
out
inc
stos
xchg
mov
int
out
test
leave
xor
movsl
lea
push
xlat
cs
in
push
adc
pop
outsb
xor
cld
or
call
adc
imull
fisttpl
cmpsb
push
fxch
xchg
and
das
inc
ja
lock
add
mov
jge
out
scas
daa
stc
mov
cmp
add
cmp
xor
mov
data16
sub
inc
scas
mov
pop
movsl
inc
and
xchg
inc
into
mov
icebp
adc
leave
out
sub
jno
out
cmpsb
nop
sbb
scas
add
jecxz
push
xchg
iret
mov
xor
ret
icebp
mov
lcall
jno
xchg
mov
and
inc
and
sbb
pop
scas
mov
aad
test
es
out
sub
ds
arpl
mov
mov
dec
lcall
xchg
mov
add
scas
sub
sbb
inc
imul
pop
mov
out
repnz
sahf
daa
mov
imul
idivl
out
fimull
stos
fs
cmp
mov
and
mov
mov
and
lahf
jo
test
stos
es
jo
popf
int3
inc
mov
mov
mov
mov
mov
addl
xchg
jo
in
jg,pt
dec
rorb
icebp
xlat
jle
or
xor
push
movsb
mov
sbb
test
jno
mov
push
stc
mov
out
mov
pop
sbb
divb
enter
add
pop
or
xor
mov
adc
sahf
cmp
inc
jns
outsl
add
test
push
pop
inc
imul
jg
bound
sarl
ljmp
mov
icebp
fs
test
push
out
adc
ret
cs
push
mov
outsb
pop
out
mulb
insl
pop
add
push
nop
mov
out
outsb
push
pop
add
addr16
adc
pop
mov
sub
xchg
cmc
xor
push
mov
mov
aaa
mov
sub
daa
xor
icebp
cmpsl
inc
cmp
cs
fidivl
sub
mov
and
pop
push
pop
mov
cmp
in
ja
andl
jo
stc
mov
and
sub
cmp
repnz
xor
sub
cltd
push
ljmp
mov
xor
push
fnstenv
mov
mov
add
cli
loop
jnp
ljmpw
je
pop
add
sbb
dec
aaa
out
fidivrl
mov
mov
ja
fs
cwtl
incl
mov
movsb
push
repnz
sub
adc
lock
xor
cmp
cld
imul
pop
adc
pusha
clc
pop
xchg
mov
imul
adc
pop
insl
cli
shlb
outsl
push
or
mov
add
xor
push
daa
inc
xchg
ss
jmp
ret
loopne
push
sti
out
mov
es
ljmp
sub
push
cld
jmp
popa
mov
fs
movsb
mov
in
std
dec
mov
sub
fisubs
mov
push
aas
cltd
sbb
xchg
and
xor
out
sbb
dec
insl
arpl
mov
ret
xchg
push
adc
lods
sub
cwtl
hlt
cmc
pop
fidivl
fiaddl
js
xor
and
push
out
fidivrl
sub
and
and
js
movsb
jb
mov
lock
into
ret
xchg
push
mov
in
xor
pop
imul
out
xlat
outsb
mov
sub
in
mov
xor
xchg
cmp
mulb
push
mov
loop
sbb
or
cmp
pop
cmp
fsub
mov
add
imul
pop
and
mov
icebp
dec
adc
in
scas
xchg
add
xor
sbb
pop
rol
stos
bound
pop
dec
scas
inc
fimull
out
sub
push
out
adc
xor
xor
and
ja
out
push
cltd
aaa
jb
push
out
pop
push
insl
xlat
mov
add
jne
xchg
and
or
push
sbbb
test
sti
adc
pop
fisubl
cmp
xchg
imul
into
mov
ljmp
xchg
loop
pop
scas
mov
cmp
jb
jb
cwtl
in
push
sbb
shrb
xchg
cmp
mov
add
pop
jne
ret
lock
xchg
shll
xlat
out
cs
mov
mov
call
or
mov
mov
mov
adc
out
ljmp
daa
pop
das
sub
xchg
loop
dec
in
inc
ret
jbe
pop
out
inc
sahf
push
mov
daa
cmpsb
jecxz
xor
push
mov
xchg
movsl
cmpsl
cmpsl
movsl
pop
sti
scas
stos
inc
mov
fnstenv
mov
imul
push
sub
dec
mov
dec
jge
ret
adc
stos
and
push
mov
and
call
out
scas
inc
jb
scas
push
mov
dec
xchg
call
cmp
xchg
lret
in
and
lock
rcrb
lret
test
je
sahf
in
pop
movsb
push
adc
cmp
call
xor
push
out
push
lea
inc
sub
jne
jo
cltd
xor
dec
sub
decb
stos
inc
cli
imul
bound
cmp
mov
aas
xor
xchg
mull
xor
aad
das
lret
sub
out
insb
outsl
pop
mov
jge
fildll
add
mov
outsl
mov
pusha
jne
xchg
or
inc
push
loope
jae
scas
push
mov
imul
lods
lret
xor
test
adc
int3
or
inc
cmp
cs
add
and
pop
xor
sub
ret
add
test
shll
cli
push
and
push
or
out
insb
inc
push
pop
mov
jmp
inc
scas
mov
jns
scas
push
xchg
outsb
mov
imul
pop
sbb
or
sahf
bound
ret
leave
pop
push
repnz
push
fnstcw
in
arpl
dec
lods
arpl
xchg
pop
in
sbb
and
mov
into
pop
aaa
insl
sbb
jmp
or
bound
push
mov
cmp
and
push
cmpsb
call
cs
adc
mov
nop
out
jmp
ds
out
xor
xchg
ljmp
lods
jo
cmp
in
push
mov
out
inc
adc
out
pop
mov
hlt
sub
test
jno
into
cmpsl
mov
fcomps
call
lret
xchg
bound
insl
imul
mov
or
fidivs
bound
mov
je
out
fistps
add
stos
jmp
xor
loop
mov
inc
lret
sbb
inc
in
bound
sub
add
popf
add
adc
xor
cmpsl
movsb
push
push
sub
push
cmpsb
fistpl
cmc
cmp
in
decb
mov
push
stos
out
test
push
fiaddl
pop
xchg
imul
adc
aaa
sub
lcall
arpl
cld
loopne
sbb
test
jge
out
cmpsb
ss
stc
mov
sub
jb
push
xor
fstp
sbb
out
push
cmpb
dec
out
fmuls
add
cmp
out
subb
into
lods
xchg
mov
xor
cs
mov
mov
loopne
push
sub
inc
sub
or
jo
out
das
inc
test
insl
mov
add
and
imul
mov
jo
sahf
inc
outsb
jnp
repnz
fiaddl
xchg
cmpsl
jo
popa
cmp
jb
xor
loop
sahf
repnz
in
negb
repnz
sar
inc
into
leave
mov
adc
stos
push
sarb
fisubl
fisubl
cmp
out
and
or
pop
ds
xchg
xchg
jno
and
out
inc
mov
in
cmpb
movsl
cmp
out
stos
cmpsl
insl
dec
je
push
add
ret
jns
imul
out
xor
mov
mov
xchg
sub
xlat
jecxz
fs
shrl
adc
adc
mov
jmp
test
out
das
mov
in
cs
out
cmp
aam
jp
mov
push
ja
arpl
sub
sub
stos
cmp
mov
inc
adc
es
xor
imul
scas
hlt
xor
push
out
negb
xor
lods
jo
push
aam
jmp
jmp
leave
scas
sub
inc
cmp
sub
fcomip
insl
iret
mov
aaa
cli
jo
cwtl
aad
es
cmp
ficompl
out
mov
sti
lret
addl
insl
andb
repnz
mov
pop
fnstcw
xor
cltd
mul
push
push
xchg
xor
sub
jle
cmp
sbb
jge
test
add
shrl
sub
adc
in
es
ja
xor
or
jmp
sub
sub
outsl
push
adc
mov
ficoml
xchg
jecxz
addr16
add
xchg
mov
mov
ljmp
in
imul
jb
xor
jecxz
jbe
pusha
pop
xlat
pop
adc
bound
iret
out
stos
lea
xchg
repnz
jmp
test
mov
jmp
pop
mov
xor
mov
jmp
test
scas
ret
icebp
ret
mov
mov
out
stos
enter
dec
iret
call
ljmp
and
movsl
scas
pop
mov
ds
jns
jmp
in
out
mov
jge
cmpsb
in
mov
insl
cltd
test
hlt
and
out
repz
adc
daa
icebp
outsl
out
cmc
xchg
add
xchg
push
in
add
movsl
sub
mov
outsb
insb
pop
sub
and
or
push
dec
mov
and
in
lret
ljmp
movsb
mov
inc
leave
push
jo
in
cs
and
jle
sub
push
leave
out
xchg
cmp
sbb
loope
mov
cmp
lahf
ljmp
in
imul
cmp
ja
cwtl
mov
fsub
aam
int
cmp
and
inc
cmpsl
repnz
pop
lock
clc
test
inc
bound
stos
addr16
push
cmp
sub
ja
cmp
dec
lret
push
mov
jmp
in
hlt
jae
les
out
out
stc
push
jmp
push
xchg
xor
pushf
jmp
lret
mov
mov
xor
mov
out
inc
mov
je
cmp
and
out
adc
out
in
or
test
sbb
mov
test
arpl
fstpl
insl
sbb
repnz
scas
or
dec
mov
cmp
push
sub
pop
xor
mov
add
sbb
jecxz
ljmp
sub
in
jge
out
jb
cltd
in
shlb
out
mov
daa
popa
mov
mov
mov
add
test
bnd
cmpsl
imul
jo
lea
and
mov
in
gs
or
jecxz
add
mov
js
test
stc
cld
sub
std
call
insb
insb
outsb
test
mov
sbb
mov
rorb
test
dec
imul
jbe
pushf
mov
xor
aaa
push
xchg
mov
popf
or
movsb
xor
hlt
lock
or
jno
push
mov
mov
pop
movsl
iret
mov
cmp
push
outsb
fcoms
or
out
out
mov
dec
mov
movsb
pop
loop
and
ja
ljmp
mov
sbb
rorl
xchg
sub
xor
pop
lods
or
jno
or
nop
out
sub
sti
or
push
jbe
imul
xor
push
xor
fsubrl
xor
xchg
cmp
stos
mov
mov
lods
and
lock
les
dec
dec
lods
push
imul
ja
out
xorl
cmp
dec
ja
adc
sub
or
ljmp
bound
int3
shlb
jno
cmp
es
out
test
push
mov
inc
sub
scas
es
xor
push
in
es
rcrb
ljmp
mov
or
adc
jne
sub
mov
add
inc
push
push
scas
inc
mov
in
sbb
sahf
cmp
imul
dec
call
icebp
jnp
push
xchg
sbb
stos
aam
test
and
xor
sub
push
add
jo
lret
xchg
idiv
and
xor
loopne
jecxz
jp
cmpsl
dec
pop
fs
movsb
dec
test
push
in
stc
sbb
mov
lea
mov
cmp
fs
call
push
fstpt
mov
bound
mov
mov
ljmp
loope
test
mov
iret
out
inc
jno
ficompl
fucomi
es
out
sub
add
sub
mulb
lock
inc
sbb
sub
xor
xchg
aad
xchg
jge
sub
cmpsl
and
fiadds
pop
xor
mov
mov
out
cmpsl
imul
pop
jno
sbb
mov
scas
fsub
inc
and
xor
pop
xor
xor
push
mov
pop
sub
inc
dec
cld
mov
cmp
jmp
add
pop
nop
inc
mov
sbb
mov
add
xchg
imul
popl
in
insb
push
repnz
nop
cld
mov
lahf
jge
icebp
addr16
add
cmpsb
jle
xchg
imul
xchg
popf
imulb
xor
addb
bound
mov
sub
inc
aaa
push
and
xchg
xor
xor
movsb
xor
mulb
inc
jbe
movsb
xor
mov
lods
push
das
xchg
jecxz
and
push
jno
into
out
and
push
lods
fidivl
repz
fisubl
in
inc
xchg
shll
lds
test
test
stos
mov
out
push
and
add
lock
dec
pushf
mov
xchg
xor
es
cmpsb
jb
xor
mov
cmp
out
ljmp
fldt
pop
loopne
sub
shlb
cmp
mov
pop
jae
mov
dec
clc
jp
ljmp
mov
int
daa
in
in
test
lods
mov
ljmp
cmpsb
repnz
jmp
dec
filds
out
sub
and
ja
in
xlat
sub
test
arpl
pop
test
repnz
sub
xchg
push
clc
aam
ret
out
das
jae
and
add
test
das
mov
lea
sub
scas
jo
loope
inc
hlt
xchg
aad
movsb
push
iret
fs
mov
adc
jae
insl
mov
movsl
xchg
add
mov
xchg
rcpps
push
shlb
repnz
push
insl
xchg
sbb
and
lods
icebp
pop
lods
jmp
inc
nop
push
out
xor
int3
repnz
nop
inc
addr16
std
mov
jge
jo
inc
movsl
adc
or
gs
xchg
lret
fldt
mov
out
sub
pop
test
cmp
add
mov
fcom
out
es
out
mov
cmp
lret
mov
pusha
loope
push
popf
mov
jno
push
jmp
movsb
cmpsb
and
and
push
cmp
inc
jecxz
je
cmpsb
test
inc
lock
pop
and
out
jmp
ja
lods
xchg
scas
out
jge
mov
adc
scas
daa
cmp
and
ret
xchg
lea
mov
add
adc
mov
out
cmc
jo
jmp
jge
stos
out
int3
push
add
popf
nop
insl
pop
and
aaa
insl
ficompl
scas
pop
imul
shll
imulb
fucompp
xchg
xor
nop
out
fs
daa
daa
insb
pop
mov
add
jle
ret
fstl
pop
jmp
jb
mov
push
mov
fimuls
sub
inc
out
pop
arpl
mov
repnz
arpl
pushf
and
push
aaa
out
outsl
jo
or
xchg
jbe
je
out
lcall
test
inc
mov
mov
and
out
mov
repnz
mov
outsb
in
add
imul
les
insb
lret
in
in
out
daa
add
cmpsl
movsl
inc
jecxz
cld
sub
jg
push
jb
xchg
mov
das
in
inc
std
fsubrs
pop
outsb
mov
subb
or
cltd
and
push
outsb
fisubrl
pop
daa
sub
test
fistl
mov
pop
xor
mov
add
xchg
and
out
out
daa
sub
mov
mov
sub
test
inc
adc
xlat
sbb
mov
sub
imulb
push
xchg
mov
push
or
out
leave
inc
pop
or
scas
mov
mov
aam
sub
es
jbe
loopne
mov
push
dec
icebp
mov
lock
scas
inc
pop
out
addr16
xor
sub
fldcw
xchg
add
cwtl
in
cmp
popa
mov
push
fisubl
mov
loopne
cmp
inc
scas
scas
jne
jo
mov
sbb
clc
push
cmpsb
imul
fstl
icebp
outsb
lock
push
test
ss
lcall
scas
cmp
data16
lahf
icebp
jecxz
fnclex
insl
pop
orl
jmp
mov
movsb
insl
mov
out
pop
sub
hlt
xor
and
ja
jo
or
jecxz
stc
push
xlat
push
insl
xor
arpl
xchg
dec
call
mov
fldt
xor
sbb
ljmp
out
stos
es
inc
mov
in
xchg
out
outsb
cmpsb
xchg
mov
jge
xchg
es
ja
lods
pop
ds
fisubrl
xor
ficoml
xchg
sub
push
mov
in
fs
and
pop
and
xchg
mov
out
xchg
mov
popl
mov
dec
jecxz
xor
outsb
jo
xchg
mov
mov
mov
sti
insb
pop
dec
test
and
fidivl
cs
sub
movsb
outsl
insl
bound
movsl
adcb
ds
stos
fs
call
ss
jmp
pop
sbb
add
cmp
ficoml
loopne
cli
push
imul
test
mov
xchg
pop
pusha
leave
jb
int3
xor
mov
loopne
dec
imul
dec
cmp
sbb
mov
push
push
cltd
call
sahf
add
push
int
cmpsb
mov
aad
es
jbe
push
cmp
mov
jecxz
add
aas
int
mov
and
mov
adc
and
adc
and
pop
and
sahf
mov
xor
aaa
and
cltd
pushl
pusha
cmp
mov
in
imul
cmpsl
and
shr
jno
mov
xchg
jns
dec
jmp
dec
hlt
and
mov
pop
cli
jl
lods
arpl
inc
adcb
pop
xchg
mov
das
xor
in
movsl
xor
push
imul
cwtl
subl
and
test
aas
push
movsl
pop
outsl
push
mov
lock
inc
mov
cmp
addb
insb
lret
pop
testl
inc
lock
out
daa
in
lods
arpl
mov
aam
lds
jle
jp
mov
or
pusha
inc
or
dec
nop
bound
lods
aas
mov
int3
shll
cmpsb
mov
xor
out
add
out
ljmp
sub
insl
aaa
mov
cmp
sub
in
repnz
cmp
xor
xor
and
cmpsl
cs
jg
lods
aaa
bound
jne
dec
cmp
in
inc
dec
lods
jmp
scas
div
hlt
gs
push
loope
into
lods
add
push
mov
or
pop
ret
jg
sub
dec
inc
arpl
shlb
hlt
gs
or
push
movsl
xor
cltd
fsubl
test
stos
sub
loop
jecxz
adc
ljmp
in
int
fisttpll
out
jmp
xlat
push
add
cld
insl
repnz
sbb
std
and
in
in
imul
jp
bound
in
pop
nop
out
jmp
stc
push
jecxz
sub
sub
int
mov
pop
or
mov
pusha
and
jl
popa
loopne
mov
mov
cmp
addr16
lcall
gs
push
std
mov
push
pop
jle
out
jb
sbb
mov
add
lret
insb
pop
cs
jbe
add
test
and
sub
inc
loop
test
push
stc
test
imul
cmpsl
mov
sub
loopne
imul
movsl
rclb
dec
and
call
cwtl
pop
jg
imul
test
mov
in
mov
mov
mov
mov
cmpsb
jb
jae
fmul
fstl
jmp
inc
fs
cmp
insb
bound
pop
sbb
sub
pop
jae
xor
jmp
divb
pop
call
mov
addr16
sub
pop
cli
in
sub
nop
inc
icebp
sub
cs
xchg
dec
xchg
and
mov
cmp
cltd
je
scas
es
sub
push
sub
sbb
es
cld
jb
or
nop
adc
jno
icebp
jno
adc
je
out
xor
out
and
ja
arpl
cmp
sbbl
imul
jb
xchg
andb
xor
out
mov
pop
push
and
push
cmpsb
mov
cmp
dec
jle
and
mov
in
insl
test
shr
ret
xchg
in
and
xchg
std
insb
cwtl
sub
je
mov
lea
es
pop
push
test
iret
loop
cmp
mov
out
movsl
mov
mov
int
out
arpl
cltd
mov
test
pop
pop
in
jecxz
out
data16
popa
dec
mov
bound
xorl
and
cmc
jge
test
scas
sub
cltd
ja
insl
rorb
jo
mov
test
inc
jmp
insl
xchg
clc
and
sbb
and
push
cmp
es
jecxz
push
sahf
dec
xchg
cmp
out
int
xor
aaa
sbb
mov
cmp
insb
xchg
xor
mov
popw
jmp
out
out
lock
bound
test
out
and
xchg
sub
clc
push
imul
shl
sbb
lods
or
push
leave
inc
push
dec
loope
inc
lods
test
jno
add
popa
shll
out
nop
or
fstpt
cmpsl
pop
jbe
stos
cmpsl
out
add
insl
ljmp
dec
stc
jmp
pop
add
scas
mov
rolb
dec
filds
inc
cmp
lods
stos
pop
lods
nop
out
sub
xchg
and
lods
arpl
in
cmc
jecxz
sub
inc
insb
xor
lods
xor
jo
mov
cmp
out
adc
test
aaa
and
es
call
insb
insb
inc
popa
fmul
call
outsl
cmpsl
xor
mov
and
insb
pop
insl
pop
ret
xor
aas
xor
sub
call
push
insl
push
push
mov
scas
push
mov
ss
clc
add
pop
pop
inc
test
scas
mov
and
icebp
and
out
and
and
cmpsl
jnp
imul
mov
in
cs
push
or
pop
bound
scas
mov
push
es
jp
loopne
jmp
inc
xor
mov
lahf
mov
mov
sub
cmp
mov
fs
in
sahf
scas
cmp
hlt
fidivl
inc
sbb
daa
ljmp
mov
in
es
mov
mov
cmpb
xchg
icebp
stos
in
lret
push
cmc
mov
cmp
scas
test
aam
sub
out
shl
inc
jo
addr16
mov
or
mov
iret
cmp
mov
inc
fsubrs
mov
out
repnz
xorl
xor
test
out
movsl
jl
sub
lods
lret
outsb
sub
or
jl
lds
push
cmpsl
mov
int3
jne
or
push
mov
add
or
mov
cmp
lods
and
mov
sub
test
xor
es
hlt
sub
cmpsl
outsb
adc
sub
cmpsl
imul
test
or
and
sub
test
call
lods
loopne
call
lods
insb
ss
sub
loopne
insl
sub
mov
call
cmp
es
sub
mov
scas
mov
xlat
je
jno
aad
enter
or
jmp
mov
jo
jns
imul
cld
daa
inc
test
cmpsb
cmpsl
xor
ljmp
test
jmp
movsb
xchg
je
daa
and
add
out
inc
daa
scas
sbb
inc
xor
shrl
aaa
cmp
imull
dec
sub
clc
sbb
test
mov
in
xor
fdivrp
xchg
lods
sub
out
push
push
test
and
fldenv
out
jno,pn
xor
nop
xchg
lret
sbb
jb
mov
sbb
ret
out
out
daa
inc
das
stos
imul
mov
mov
jle
lods
sbb
inc
mov
mov
mov
cli
xchg
repnz
push
jecxz
aaa
cmp
test
gs
mov
and
scas
jno
stc
shl
aam
in
pop
mov
js
mov
mov
test
sub
fs
or
notl
add
mov
icebp
add
mov
dec
adc
arpl
mov
insl
mov
sti
sarb
mov
xchg
repz
adc
es
add
and
xor
fwait
cmp
push
aaa
lods
jo
out
icebp
push
sbb
insl
push
ja
stos
bound
idivb
scas
imul
test
jmp
clc
pop
ja
in
inc
outsb
mov
xchg
js
cli
out
and
icebp
push
sbb
adc
in
arpl
lret
push
push
jmp
ljmp
cmp
int
jo
pop
fistps
inc
and
xchg
sub
cmp
bound
cmp
jmp
push
inc
cli
xchg
add
pop
stos
in
ret
lret
call
in
add
push
mov
scas
outsb
xlat
mov
xor
test
push
fldenv
xor
pop
mov
arpl
aas
cmpsb
mov
sub
ret
cmp
mov
mov
fnsave
mov
mov
mov
insb
int3
ja
daa
int
mov
and
pop
repnz
sahf
leave
cmc
test
in
call
lahf
test
mov
push
ficoms
scas
mov
sbb
push
xchg
jecxz
push
das
xor
xchg
adc
test
outsb
add
cmpsb
mov
xor
sti
mov
call
sub
push
arpl
loope
iret
xor
inc
pop
or
mov
and
test
cmp
into
sub
int3
jo
sub
mov
cmp
adc
xor
sbb
xchg
sub
ja
sub
adc
enter
out
mov
xchg
fisubrl
xor
fucom
sti
mov
stos
mov
xor
cmpsl
cs
mov
push
mov
and
hlt
push
test
xor
cld
call
cmpsl
lea
push
dec
sub
scas
xor
fistpl
clc
mov
and
mov
out
jns
push
or
mov
and
movsb
ljmp
scas
icebp
leave
repnz
mov
repnz
or
or
dec
add
aas
in
ret
push
adc
mov
js
cmpsb
push
fidivl
and
mov
inc
adc
jo
push
inc
mov
divb
repnz
clc
and
jb
cmpsb
mov
jp
lods
jmp
jmp
test
and
lahf
into
xor
fisubrl
or
jecxz
ljmp
and
xchg
movsl
and
insb
inc
lahf
mov
pop
jae
test
sub
out
jecxz
in
push
in
pusha
dec
icebp
sub
loop
dec
xor
push
enter
push
insl
in
xchg
fdivr
adc
xor
sbb
ds
insl
ret
jno
mov
xchg
pop
in
bound
cmpsb
test
mov
mov
pop
cmpsb
push
aas
xchg
std
jo
mov
mov
aad
xchg
imul
sti
mov
mov
sub
fs
add
into
pop
sub
xlat
sbb
xchg
xor
repnz
lods
mov
in
data16
xchg
sub
fstpl
in
adc
fcomps
bound
jmp
imul
arpl
sub
jecxz
jo
jbe
push
jae
push
add
into
stos
insl
xor
xchg
outsl
lods
and
xorb
ljmp
add
mov
outsb
lods
push
jno
push
popa
fisubrs
push
daa
lods
push
push
mov
in
jno
daa
adc
inc
in
aad
test
inc
mov
fldt
pushf
dec
mov
push
subb
repz
sub
mov
jle
xor
sub
jo
jl
sub
push
out
in
test
push
cmp
out
loop
daa
jge
bswap
call
out
jmp
insb
jmp
cli
add
scas
lods
stos
cmpsl
and
mov
mov
into
and
and
push
mov
push
rcl
stos
jb
mov
dec
add
mov
ficompl
adc
xor
lahf
pop
repnz
sub
pop
fidivs
xchg
fisttpl
add
icebp
dec
data16
inc
clc
lock
scas
xor
nop
jnp
xchg
sub
in
imul
in
call
imul
or
xor
xor
push
insl
subb
cmp
jno
hlt
adc
cs
mov
sti
xchg
jb
sub
and
xchg
push
bound
cmp
fldt
cltd
jb
add
stos
pop
call
adc
push
jmp
test
fimull
test
pop
lea
and
inc
sbb
andl
mov
hlt
xchg
insl
stc
fcmovbe
popf
add
int3
push
sub
xchg
jbe
and
jge
mov
cmpsb
lret
adc
jbe
push
and
inc
pop
int3
icebp
add
mov
and
cs
hlt
mov
addl
xor
stc
stos
jb
xor
mov
jb
ds
push
sub
push
sub
bound
sub
add
sub
std
push
icebp
lret
scas
aad
es
js
test
mov
and
cltd
xchg
sbb
mov
pop
add
les
jmp
sub
push
fldcw
outsb
loopne
xor
add
inc
sub
out
lahf
test
mov
push
cmp
jno
xor
add
mov
aad
inc
jae
mov
mov
stos
mov
mov
jae
imul
mov
imul
les
sub
out
push
pop
pusha
jge
imul
fbld
pop
or
aaa
push
push
pop
cmp
bound
insb
icebp
testl
stos
mov
inc
out
insb
inc
mov
lahf
lods
push
add
mov
loopne
jmp
aad
icebp
ja
loop
fldl
in
sti
mov
shr
lds
mov
mov
mov
and
push
push
hlt
sub
xor
fidivl
push
xor
cmpsb
pop
lock
xchg
movsl
sub
push
xchg
xchg
addr16
cld
and
hlt
push
push
lea
in
stc
lods
xor
test
bound
cs
pop
repnz
jle
xor
scas
fcmove
shl
push
mov
test
pop
mov
mov
and
cmp
mov
shr
mov
movsb
jmp
test
jp
out
psubusw
adc
jp
adc
and
fidivrs
mov
outsb
and
nop
and
and
dec
icebp
and
addr16
pop
cmp
mov
push
inc
mov
push
fld
imul
bt
push
dec
jecxz
addr16
mov
mov
adc
test
jge
mov
cli
pusha
jae
inc
cmpsl
cmpsb
inc
fcompl
jge
sub
stos
and
shrb
cs
daa
ljmp
pop
jns
mov
jecxz
mov
scas
mov
pop
es
jp
add
and
aam
sub
dec
std
test
das
mov
fsts
pop
or
sub
push
out
sarb
xlat
lea
mov
jo
or
out
push
mov
test
cmp
dec
jge
cmpsl
and
andl
jmp
inc
jne
test
push
mov
out
push
inc
cmpsb
xchg
aaa
xor
lret
fldl
lock
ficoml
push
jns
dec
dec
pop
or
or
jns
and
adc
fisttpl
lods
inc
fs
daa
mov
pop
aad
out
hlt
and
sub
mov
les
das
lds
movsl
inc
lods
cld
dec
gs
mov
fsubrl
lret
xchg
test
jg
in
mov
xchg
jo
sbb
je
out
sub
xchg
inc
mov
fstps
mov
mov
ds
out
mov
fildll
insl
push
and
cmp
sbb
ret
cmpsb
adc
mov
test
negl
mov
mov
shll
jp
sti
repnz
mov
sbb
repnz
pop
xchg
stos
movsb
and
pop
sbb
aad
rolb
xor
outsl
xor
mov
aaa
test
mov
mov
push
and
scas
mov
in
fldcw
sub
add
int
mov
pusha
sti
add
clts
sbb
es
aad
imul
xor
push
inc
and
cmp
xchg
mov
js
outsl
ficompl
cld
adc
mov
add
cld
in
jno
dec
push
jns
push
adc
jo
dec
or
xor
and
jl,pn
pop
pop
in
stos
jns
scas
daa
mov
lea
or
mov
in
shll
test
mov
jnp
sub
stos
mov
push
pop
outsb
adc
cmpsl
sub
lret
adc
or
xorb
icebp
mov
icebp
imul
fistpll
push
pop
cld
jle
and
push
faddp
mov
bound
cmc
movsl
repnz
jg
je
lahf
fcomip
imul
sti
insb
sbbl
xor
sub
adc
push
inc
insb
push
jmp
xor
stc
leave
test
stc
jmp
mov
sub
mov
inc
mov
scas
inc
ret
nop
shll
pop
roll
jl
mov
inc
adc
jmp
sub
inc
xor
fcomip
inc
cld
shl
xor
xor
faddp
pop
in
jmp
jmp
push
in
mov
fs
or
and
jge
jno
lods
xor
test
call
les
cli
fidivs
pop
mov
xor
sahf
jecxz
jo
sub
je
out
stc
or
adc
ds
sub
je
in
inc
push
imul
mov
out
int
jo
in
dec
jp
stc
pop
ljmp
test
xor
sbb
cmp
rorb
icebp
adc
and
sar
lods
push
dec
or
jb
iret
and
out
add
sub
cmp
inc
xchg
icebp
les
xor
jmp
out
sbb
cmpsb
jnp
scas
push
add
pop
sub
cmp
bound
or
sub
cli
test
xor
sub
in
inc
subl
or
insb
pop
ja
xchg
sbb
sbb
or
xcrypt-ctr
cmpsl
sbb
cmp
into
divb
push
sbb
out
fimull
nop
fldt
bound
inc
sub
xor
xchg
repnz
out
icebp
mov
mov
xlat
sub
ror
aas
in
mov
xchg
repz
fs
jmp
cmpsl
sub
sbb
push
xchg
notb
jo
sbb
in
adc
insb
mov
jb
je
hlt
repz
movsl
pusha
lods
outsb
imul
cmpsl
sub
loopne
sub
shrl
pop
psllw
push
cld
mov
and
pop
mov
scas
ljmp
mov
lods
cmpsl
addr16
pop
lahf
mov
lds
lods
and
ds
lock
pop
lods
inc
push
fnsave
sbb
movsl
cmp
xor
push
lock
in
pop
scas
jo
xchg
and
sti
int3
adc
inc
cld
fldt
lret
fstpl
test
imul
or
jns
mov
xor
mov
push
push
leave
into
insl
orb
mov
daa
loopne
test
stos
xor
das
mov
and
test
data16
sub
les
jno
mov
pop
movsl
fistpl
sbb
outsb
adc
jecxz
sub
push
adc
lds
es
lahf
sub
insb
arpl
psubb
ret
lea
out
popa
sti
orb
es
mov
clc
test
xor
cmp
bound
xor
fs
inc
or
xchg
sub
sub
push
mov
in
sub
insl
out
ljmp
sahf
cltd
sub
xor
aad
icebp
mov
repnz
pop
cltd
cltd
fldt
jmp
and
lret
aad
movsb
sbb
lock
out
stc
xchg
push
ja
loop
jl
divb
dec
and
mov
bound
sti
mov
mov
in
cmp
sub
xchg
mov
cmc
mov
xchg
mov
fiaddl
call
in
mov
and
lds
ljmp
xchg
push
shl
sub
call
push
cs
js
jmp
out
and
out
into
bound
pop
outsb
xchg
lea
mov
cltd
xor
popf
adc
stc
mov
dec
push
mov
push
out
es
imul
notl
jb
jns
out
add
dec
movb
inc
lock
pusha
lret
push
dec
pop
mov
fs
and
mov
cli
mov
add
frstor
xor
dec
push
imul
sub
push
imul
sbb
sub
stos
sbb
or
popl
and
pop
pop
cmp
and
outsb
jne
test
jmp
stos
repz
out
stos
add
and
repz
icebp
pop
inc
mov
mov
int
mov
ret
push
and
es
sbb
inc
stos
push
cmovae
jmp
in
ret
sub
add
and
mov
inc
push
das
inc
ret
es
sub
jae
push
add
popa
jne
mov
xchg
idivl
ljmp
push
loope
shll
pop
sti
nop
xchg
lret
xor
sbb
mov
and
mov
xor
mov
out
in
sub
push
sub
jne
in
pusha
xchg
insl
add
in
adc
mov
popa
mov
adc
jo
lea
dec
cmp
es
dec
jae
cmpsl
adc
hlt
xchg
in
icebp
bound
data16
scas
xor
cld
in
ficoml
mov
in
add
xor
mov
pop
cmp
add
rolb
jo
add
lds
mov
lods
xor
cmp
dec
and
cmp
xchg
dec
adc
adcb
insb
xchg
or
test
add
mov
push
imul
push
daa
out
xchg
shlb
jp
pop
push
mov
mov
jbe
in
arpl
outsb
ret
push
inc
jnp
rclb
sub
jo
in
mov
add
mov
xor
jo
inc
hlt
cmpsl
cmp
insb
push
jo
scas
fs
test
push
push
les
fistpl
inc
adc
mov
and
hlt
push
pop
sahf
jg
out
out
jecxz
daa
jbe
mov
cli
aaa
mov
popf
jecxz,pn
jp
sbbl
pop
in
es
out
jb
push
jmp
int
popf
adc
sbb
test
test
shlb
inc
push
jns
lea
out
lods
addr16
mov
sbb
inc
mov
aaa
imul
cmp
das
mov
stc
testb
scas
pop
stos
sbb
inc
mov
popa
cmpsb
xor
insl
ret
ds
push
iret
cmpsb
imul
iret
push
jp
and
jmp
cmp
nop
and
repnz
out
xor
fisubl
xchg
imul
insl
push
xchg
scas
mov
xor
stos
and
push
incl
cmp
mov
lea
add
outsl
out
fcmovnb
repz
decl
push
stc
pop
sub
sarb
mov
in
xlat
test
repnz
enter
cs
bound
aam
mov
mov
sub
fldt
add
outsl
int
cmpsl
scas
inc
xchg
or
mov
daa
and
imul
fisubrl
sub
dec
jns
movsl
mov
das
std
push
jmp
cwtl
cmp
mov
xor
imul
inc
xor
fildll
adc
iret
stos
pop
iret
cmpsb
es
jae
out
aad
pop
aas
pop
adc
sbb
mov
je
out
push
imull
out
adc
outsl
out
call
inc
mov
cld
xchg
and
hlt
stos
loop
cwtl
mov
stc
hlt
out
push
xchg
insb
pop
push
movsb
aam
lods
imul
into
mov
mov
xchg
cmpsb
jmp
inc
or
pop
pop
jo
movsb
lock
jo
fcmovne
inc
xor
inc
scas
or
jecxz
cltd
jmp
addr16
sub
fcmovne
lods
jmp
inc
lcall
imul
mov
mov
adc
int3
sahf
sub
and
stc
pop
insb
es
scas
inc
stos
push
shl
ret
ja
sti
test
insl
push
gs
or
es
mov
test
imul
ror
nop
mov
jnp
icebp
inc
je
sub
lahf
rcr
sub
mov
xor
push
rorl
addr16
dec
sahf
out
mov
pop
mov
push
mov
lods
stos
pop
and
out
es
jns
xor
cmpsl
sub
xor
mov
mov
sub
call
imul
xor
pop
test
cmp
sub
mov
push
pusha
pop
nop
aam
jp
fidivl
and
or
add
and
out
testb
orl
cmpsb
adc
pop
push
sub
outsb
mov
sbb
stc
test
or
xor
fldt
daa
es
jecxz
inc
mov
push
cs
and
pop
jno
sti
jbe
inc
addr16
insb
popf
jmp
sub
lods
lea
sub
mov
lods
jo
imul
insb
jl
call
sub
pop
repnz
jae
subw
push
idiv
pusha
loopne
test
test
es
cmpsb
daa
aam
cmp
mov
in
es
lods
jo
push
xor
jo
pop
sbb
sub
push
cmpsl
fildl
jle
mov
sub
mov
mov
ret
lret
xor
xchg
in
test
xchg
and
hlt
push
subb
jmp
jmp
imulb
int
shlb
or
jb
and
movsb
mov
stc
pop
lods
jbe
cmp
gs
cmpsl
xor
fldt
and
dec
test
lods
push
adc
jl
lahf
mov
sarb
test
fsubl
and
or
in
mov
jno
ret
out
sbb
test
andl
imul
dec
addr16
int
pop
xchg
iret
cmpsl
out
mov
imul
test
xorl
sbb
test
and
imul
sub
insl
movsl
mov
ret
addr16
jle
xor
mov
aas
imul
fstl
push
push
sarb
push
sub
addr16
nop
fstps
mov
clc
in
inc
lcall
inc
sbb
cwtl
sbb
push
call
push
push
add
cmpsb
insb
sbb
jo
andb
repz
arpl
jmp
and
jo
call
xor
jo
sti
xchg
data16
je
daa
imul
shlb
lods
imul
sub
add
dec
les
subb
jbe
push
data16
outsb
movsl
sbb
mov
hlt
and
sub
movsb
mov
int3
test
mov
and
outsl
and
add
filds
pop
sub
cmp
mov
int
mov
loope
mov
in
rorb
push
rol
outsb
insl
or
xchg
mov
pop
in
test
pop
shr
out
xchg
add
jmp
cld
test
pop
lock
jb
xor
sbb
or
stos
jecxz
lock
enter
pop
or
imul
pop
push
stos
imul
dec
mov
mov
mov
sbb
or
scas
arpl
xchg
inc
xchg
pop
and
jl
pop
inc
nop
inc
and
jmp
iret
test
sub
nop
inc
fsubr
lret
pop
insb
es
push
push
aaa
repnz
icebp
into
jecxz
sbb
push
push
lret
nop
mov
inc
jnp
lock
call
popf
clc
add
and
or
aaa
scas
lret
fistpl
jns
fs
test
test
in
and
push
lods
inc
mov
mov
and
lods
or
shr
xor
loop
sub
push
jge
jmp
dec
cmpsl
cli
in
or
loop
movsl
lods
shrb
outsb
fstpl
insb
inc
xor
fiaddl
out
aas
pop
mov
cmp
jecxz
inc
dec
pop
es
call
jns
jmp
push
aas
stos
mulb
das
adc
mov
and
lret
mov
pop
push
shr
xor
ds
stos
cmp
test
inc
stc
jecxz
xor
ret
out
scas
and
mulb
inc
adc
and
pop
test
ljmp
ja
out
lock
cld
fidivl
in
mov
mov
xchg
jmp
in
test
jl
or
addr16
mov
sarb
ret
push
xchg
cmpsb
into
mov
sub
out
in
stc
cld
jno
testb
push
loopne
sbb
push
lret
mov
mov
xor
jb
mulb
insb
jecxz
cltd
pop
das
inc
pop
lods
icebp
ss
ret
inc
movsb
mov
push
movsb
daa
push
lock
scas
fs
stos
jle
lods
cmpsb
cmp
out
cmp
aad
scas
mov
xor
xchg
jle
data16
out
xor
add
push
cltd
jae
xchg
aad
icebp
xchg
ret
sub
jae
insl
adc
out
push
stos
mov
adcb
cmpsl
sub
repnz
insb
cmpsl
fdivrs
stos
repz
sub
test
call
lea
push
ljmp
push
call
adc
cmpsb
and
ja
cmp
cs
jg
shll
jecxz
call
lods
imul
inc
repnz
out
sub
pop
lods
in
scas
push
ret
mov
test
arpl
sub
mov
imul
mov
fldenv
dec
arpl
in
lods
stos
inc
sbb
sarb
je
jnp
lods
xor
xchg
push
sub
subb
inc
xor
dec
out
xor
pop
shrl
dec
cs
xchg
test
arpl
sbb
mov
aaa
add
jmp
loop
lahf
xor
sub
add
push
and
cmc
and
call
and
xchg
out
inc
xor
mov
sbb
lods
dec
dec
mov
push
push
and
adc
stos
xor
scas
sbb
push
lods
adc
add
in
or
mov
call
icebp
shll
push
cmp
jmp
sub
sbb
add
and
push
outsb
jmp
lahf
ret
jmp
jle
xchg
jno
addr16
shrb
push
out
test
stc
dec
jmp
push
sub
sub
ljmp
push
cmc
scas
mov
cltd
stos
mov
and
stos
jns
push
das
scas
mov
mov
insl
sbb
dec
dec
xchg
test
in
add
cmpsl
imul
outsb
push
xor
cltd
mov
xor
dec
outsb
out
jmp
pop
in
iret
mov
fs
in
adc
movsb
pop
inc
mov
sub
int
jmp
jbe
addr16
cmc
les
movsl
pop
rol
ja
fldcw
insl
inc
scas
xor
inc
loopne
mov
insb
add
push
in
xor
cwtl
jo
outsl
and
add
enter
filds
outsb
in
or
pop
imul
and
stos
xor
and
jp
in
arpl
jmp
mov
int
jecxz
inc
cld
sti
test
sub
sbb
cmp
dec
xor
jnp
jmp
ds
xchg
xchg
ja
cmc
push
mov
enter
adc
icebp
bound
bound
inc
dec
fucomi
inc
popf
or
ret
mov
adc
xorb
inc
mov
adc
cmpsb
out
push
lcall
stc
cld
or
jge
mov
icebp
insl
mov
jge
cmpsb
push
push
mov
push
out
sub
movsb
fimull
jecxz
push
mov
or
insl
xor
and
outsl
icebp
mov
inc
pop
mov
and
imul
xchg
in
cli
movsb
out
jae
fldt
jle
xchg
aaa
pop
ljmp
adc
lods
cmc
sub
push
jbe
mov
lock
xchg
dec
xor
in
mov
push
dec
lock
xchg
jnp
fs
mov
arpl
pop
test
push
fucomip
xor
sub
sbb
nop
addr16
fcmovbe
xchg
jno
les
mov
mov
and
icebp
xchg
xchg
pop
pop
bnd
inc
subb
std
xchg
fs
rclb
jne
cmpsl
mov
xchg
cld
sub
clc
cs
pop
dec
dec
subb
call
inc
in
cmp
in
out
fidivl
add
push
outsl
xor
not
sub
gs
xor
mov
aaa
mov
add
das
insb
bound
sub
fimull
leave
jge
lock
sub
out
jmp
lock
lock
xchg
add
sub
out
bound
push
pop
jno
scas
dec
cli
out
inc
sar
scas
in
xchg
repnz
insl
fmuls
add
stos
add
fiaddl
testb
mov
fisttps
out
sub
mov
inc
mov
out
out
fdiv
hlt
jecxz
adc
xor
and
out
fs
push
insl
mov
pop
std
xor
cs
mov
in
in
dec
icebp
or
lods
into
fs
cmpl
cltd
jb
sub
daa
out
mov
in
xor
es
mov
xor
sbb
push
inc
repz
xor
in
insl
mov
dec
adc
mov
leave
fsubrs
scas
mov
fldl
sub
test
imul
test
and
jne
cmp
movsl
pop
cmp
es
insl
fucomi
imul
pop
sub
call
scas
out
inc
fimull
mov
iret
adc
push
imul
xchg
bnd
jge
scas
and
lods
arpl
jle
nop
scas
sub
test
pop
imul
outsb
rol
cmp
aaa
xor
xor
jg
scas
xor
fcomi
inc
cmp
outsb
out
jo
sub
int
sub
in
imul
mov
stc
mov
jle
xor
mov
cmpsl
movsb
fs
lahf
jnp
scas
into
mov
xchg
jno
xlat
out
insl
xchg
mov
test
mov
sub
loopne
ljmp
sbb
mov
pop
xchg
loopne
sub
sbb
test
mov
jmp
inc
int3
out
xor
xchg
xor
mov
inc
imul
movsl
stc
daa
dec
wrmsr
out
mov
divb
fstps
mov
push
and
xchg
xchg
stos
mov
adc
pop
pop
subl
mov
and
and
ret
xor
sbb
sub
daa
pusha
outsl
sahf
jg
scas
rcrb
or
in
pop
pop
in
in
daa
fwait
out
test
loopne
push
insb
dec
iret
mov
ljmp
push
mov
sub
or
loopne
mov
or
inc
stos
inc
ja
sub
scas
inc
shr
shll
sub
xor
test
push
in
mov
out
cmc
repz
mov
divl
xor
inc
jg
add
mov
push
sbb
sarl
add
mov
lock
das
mov
push
xor
dec
test
pop
shll
xor
push
push
jp
add
orb
mov
push
fldcw
and
add
xchg
add
adc
out
jl
jo
pop
test
inc
shr
mov
fcmovu
into
jo
clc
cld
das
mov
jl
in
pop
push
ss
call
mov
mov
or
xor
mov
or
sub
test
test
bound
xor
and
sub
push
test
test
jbe
push
and
test
xchg
or
jecxz
lods
inc
mov
mov
stc
mov
jb
push
mov
push
mov
and
mov
and
mov
rep
call
mov
sbb
divl
cmpsb
outsl
ret
notb
adcb
mov
scas
add
sub
pop
scas
jecxz
jns
mov
cmp
xor
cltd
jmp
inc
adc
push
push
call
cmpsl
sbb
sbb
inc
pop
adc
sbb
sub
inc
lahf
push
fildl
cmp
sub
pop
push
xor
sub
or
mov
inc
inc
je
jo
xchg
xchg
jo
fdivrs
stc
inc
sti
das
add
sub
push
outsb
jmp
loop
imul
sub
lea
inc
and
xchg
scas
mov
mov
bnd
fs
or
sub
jo
in
push
xor
aaa
arpl
xor
addr16
scas
dec
jno
js
sub
push
push
jb
add
fnstsw
mov
cwtl
jmp
sub
test
repnz
add
fisubl
and
mov
in
push
mov
add
rcll
stos
push
pop
in
xor
xchg
outsl
jo
add
out
sub
es
mov
call
gs
or
mov
icebp
bound
das
xor
inc
or
insl
fwait
shll
sbb
xor
lock
imul
inc
dec
push
das
mov
aad
inc
sarl
lods
xlat
daa
andl
fmull
bound
jge
xchg
and
test
insl
out
jp,pn
and
movsl
insl
sub
push
shr
data16
call
adc
test
or
repz
xor
lods
dec
repnz
cmpsb
nop
outsb
jo
fs
cmp
insb
ret
push
data16
cltd
jmp
add
xchg
leave
mov
mov
mov
test
add
mov
scas
xchg
scas
outsl
mov
push
or
add
ret
bound
rolb
scas
stos
fs
mov
cs
imulb
mov
inc
aaa
lods
hlt
in
aas
out
arpl
bound
lret
mov
imul
sub
repz
xchg
and
test
ja
sbb
sub
mov
dec
jbe
jno
or
pop
out
cltd
ja
es
push
testl
mov
std
test
add
test
and
out
sahf
lods
ss
mov
xchg
jb
jmp
mov
movsb
stos
addr16
dec
mov
xchg
lret
pop
push
cmpsb
sub
jbe
loopne
mov
push
in
inc
sbb
sub
ja
sub
mov
data16
jo
int
jmp
pop
mov
test
pop
movsb
imul
pop
push
movsb
lds
pop
aas
stos
clc
and
arpl
loopne
or
push
hlt
outsb
insl
cwtl
mov
inc
mov
sbb
out
enter
cmpsl
jl
and
insw
pop
test
fsubl
add
push
out
cmp
adc
imul
scas
dec
es
addr16
ret
or
fucom
out
imul
cmp
inc
pusha
aad
arpl
mov
pop
pop
push
cs
or
push
divb
cmp
inc
pop
add
jmp
adc
sbb
mov
cmpsl
push
xlat
sarl
mov
imul
add
cmpsb
ss
inc
jno
cli
and
inc
jae
bound
test
f2xm1
insb
inc
hlt
sub
mov
jo
imul
ja
push
sub
inc
xchg
and
xor
fstp
xor
cmp
sub
test
sub
aas
mov
int
cmp
mov
repnz
add
lods
inc
xorl
out
pop
movsb
fnsetpm(287
mov
xor
lret
mov
test
inc
and
stos
push
out
scas
int
mov
and
cld
movsl
loop
iret
push
data16
fcomip
rolb
jmp
out
or
dec
stc
mov
adc
mov
xchg
pop
ljmp
push
test
inc
ja
sub
and
scas
loopne
ret
adc
ficompl
cltd
mulb
add
mov
jge
out
call
mov
sbb
cld
in
das
xor
ljmp
xchg
jecxz
jp
push
pusha
aaa
mov
insl
aad
push
jmp
stos
stos
xor
call
subb
and
out
xchg
jno
sub
imulb
fiaddl
scas
insb
xchg
xchg
ja
arpl
mov
icebp
xor
stc
mov
inc
and
mov
daa
pop
out
out
out
loope
mov
sub
test
jmp
mov
sti
fnsave
fnsave
inc
lret
pop
movsl
push
divb
push
mov
sub
es
push
loop
icebp
inc
fistpl
xchg
das
inc
stos
xchg
cs
xchg
lret
sub
inc
clc
test
inc
test
pop
imul
mov
sbb
mov
jge
fbld
push
or
lods
pop
addr16
add
push
xor
test
movb
fiaddl
shlb
leave
sub
and
or
insl
push
pop
out
inc
iret
sub
xor
mov
aaa
data16
addl
pop
sti
dec
sub
cmp
mov
sbb
xor
test
out
ja
cmpsl
push
stos
pop
mov
jg
push
cmp
xor
and
test
mov
adc
stos
fstpt
rorb
pop
xchg
popf
imul
fsubp
insb
sub
ja
outsl
sub
jp
inc
fidivs
adc
adc
js
jno
xor
mov
mov
xor
cmp
aaa
mulb
mov
lret
jo
aaa
mov
sti
push
cmp
jo
push
rol
mov
lods
inc
loope
icebp
add
gs
sbb
cmpsb
int3
out
addr16
subb
adc
add
scas
inc
fimuls
or
jmp
movsb
in
imul
inc
pop
adc
pop
stos
xor
call
jnp
sub
cmp
jne
mov
pop
decb
xor
and
fcomip
ret
add
es
std
push
popl
call
imul
and
cmp
fucomp
mov
insb
sbb
enter
pop
dec
pop
add
push
in
fbstp
imul
pop
jns
out
int
stos
jo
push
cwtl
movsl
popf
jp
ficoml
inc
fwait
or
fimuls
fbstp
lods
jle
xor
sbb
outsb
int
jae
mov
xchg
add
or
int
pop
inc
cmp
jae
jmp
pop
cltd
or
xor
mov
pop
test
inc
mov
or
xchg
pop
icebp
push
stos
cld
test
inc
aaa
sub
shr
in
cmpsb
rcr
jmp
push
inc
sub
inc
sub
push
jmp
fcomip
gs
insl
repz
jbe
imul
imul
push
mov
push
rorl
sub
push
cmpsl
stos
inc
push
shr
sub
mov
outsl
nop
test
and
rcr
or
insb
lds
mov
repnz
hlt
and
stc
sbb
pop
add
stos
insl
jmp
mov
into
push
lock
xchg
pop
xor
lods
insb
sub
cmp
cltd
aad
stos
sti
test
xor
mov
jecxz
add
sub
cmc
dec
push
sub
xor
fidivl
test
pop
xor
inc
mov
insl
pop
mov
es
and
bound
mov
movsl
or
mov
out
push
jb
repz
ret
in
mov
sub
mov
stos
test
out
jecxz
sub
pop
push
push
adc
or
out
cmp
daa
test
gs
push
cli
adc
jg
addr16
and
jmp
pop
add
push
jnp
mov
add
hlt
stos
push
sahf
mov
jmp
call
cmp
push
adc
scas
in
xor
mov
mov
mov
push
push
test
test
outsl
and
mulb
push
fstps
push
mov
add
sahf
sub
hlt
inc
fnstsw
loopne
stc
push
inc
jp
repnz
mov
pop
test
out
repz
mov
popa
int
stos
lods
ja
shrb
aaa
icebp
ret
stos
movsl
and
clc
cmc
or
cld
pop
scas
scas
arpl
pop
sbb
es
ret
jmp
xor
jmp
push
mov
mov
mov
add
jno
mov
leave
movsl
push
push
fwait
popf
fisttpl
or
push
ds
push
inc
in
mov
bound
lods
inc
push
and
push
popf
repz
inc
push
and
sbb
insl
cmpsb
and
filds
jmp
add
xchg
cmpsl
sub
into
sahf
sub
lds
movsl
pusha
push
imul
push
push
sbb
outsl
jmp
fsubr
xor
sbb
mov
and
stos
outsb
jns
xchg
inc
mov
add
sub
cltd
ret
lock
xor
dec
adc
fidivrl
and
mov
cmp
jl
cmpsl
xlat
and
and
adc
aam
test
jg
lods
xor
inc
jecxz
ds
mov
jae
jnp
jb
stos
loopne
imul
mov
nop
cmpsl
out
popa
xchg
sbb
stos
and
cltd
cmpsb
das
sub
lret
stos
imul
or
in
es
aaa
insl
jns
fdivs
dec
sbb
outsb
cmp
lock
mov
jg
test
aas
jg
cli
pop
push
imul
imul
inc
idivb
and
mov
rcll
cmp
jb
mov
fbstp
mov
in
lahf
ret
fbld
repz
and
nop
dec
fs
push
mov
addr16
sahf
es
je
push
and
ljmp
arpl
inc
cld
divb
enter
lahf
jp
daa
test
mov
shr
addr16
iret
xor
pop
pop
adc
scas
test
jnp
sahf
pop
cmpsb
es
add
push
cli
and
div
das
les
loopne
add
mov
mov
xchg
outsb
insl
jmp
jp
mov
out
gs
int3
mov
sbb
ret
test
outsl
roll
or
and
xor
sub
in
adc
dec
test
stos
out
xchg
call
mov
xor
dec
outsb
insl
add
loope
lods
mov
test
inc
sub
icebp
cmp
jb
mov
repz
mov
outsb
push
xor
mov
pop
aad
pop
adc
mov
aaa
mov
movsl
sbb
sub
mov
cmp
push
scas
sbb
dec
jge
bound
movsb
mov
lods
out
inc
mov
aad
imul
insl
es
jecxz
sub
outsl
sub
stc
push
mov
mov
pop
outsl
icebp
test
lea
jecxz
pop
out
adc
xchg
out
pop
xchg
and
stc
push
icebp
mov
or
cmpsl
push
aad
scas
xchg
cmp
mov
jno
movl
scas
scas
ja
lods
adc
scas
push
sbb
jb
std
pop
jo
push
aad
int
aaa
xchg
insl
out
movsb
mov
jo
dec
jnp
in
xchg
in
inc
out
jb
stos
arpl
add
insb
xor
stos
aaa
adc
jb
push
mov
push
stos
push
repnz
mov
scas
das
imul
adc
and
xchg
fimuls
test
pusha
testl
jmp
xlat
pop
push
jno
cmpsb
mov
mov
icebp
test
cmp
or
test
fbstp
out
mov
movsl
push
pop
test
fs
jp
xor
pop
stc
sahf
ss
push
outsb
inc
outsl
stc
lods
mov
cs
xor
mov
test
mov
mov
test
das
adc
insl
xchg
gs
mov
mov
mov
jp
jmp
lods
sbb
xor
mov
test
das
push
sub
aaa
ljmp
rcr
mov
notb
xor
jo
int
jo
aam
jecxz
xor
cli
jno
or
xchg
and
dec
jmp
sbb
jle
and
test
call
jecxz
inc
xchg
data16
out
pop
jmp
addb
or
shrb
sti
shlb
stos
mov
jno
sub
leave
mov
mov
daa
fucom
mov
loope
mov
cmp
ret
les
mov
xor
sub
js
stos
adc
out
and
mov
push
pop
in
hlt
sub
out
test
xor
sub
cmp
push
inc
call
sub
cwtl
out
push
pop
in
insb
mov
cltd
push
test
in
sub
or
xor
stos
cmp
out
inc
sbb
cmpsb
es
mov
out
xchg
sbb
fucompp
cmp
sub
xchg
sub
movsb
test
jo
add
xchg
xchg
mov
rorb
mov
dec
ljmp
insl
icebp
pop
push
out
arpl
fisttps
mov
xor
push
push
arpl
loopne
repz
pop
mov
pop
fisubrs
addr16
mull
inc
jmp
mov
arpl
push
lock
xor
xor
xchg
imul
or
loop
bnd
fs
xor
orl
sbb
arpl
imul
out
mov
sub
mov
push
and
loopne
pop
inc
inc
ljmp
imul
arpl
add
mov
or
loop
lea
jl
les
arpl
jecxz
jge
xchg
ret
and
lods
lods
push
sub
fsts
daa
arpl
repz
movsb
insb
movsl
insl
outsb
gs
sbb
inc
or
faddl
adc
loop
roll
orb
cli
jmp
call
sahf
jo
mov
int
mov
and
dec
adc
mov
jae
or
adc
and
and
call
and
stos
adc
imul
sbb
cmpb
sub
pop
cltd
stos
in
imul
mov
arpl
repnz
fldt
arpl
dec
rolb
je
dec
arpl
sbb
rorl
sub
or
shl
arpl
lret
sahf
scas
and
je
scas
sbb
arpl
adc
pop
sub
lret
mov
outsl
aam
inc
push
dec
mov
jge
insw
imul
loop
mov
int3
push
xchg
xorb
mov
pop
cmp
dec
gs
mov
fisttpll
cmp
inc
jge
or
or
xor
test
aaa
arpl
jno
ds
xchg
mov
push
out
mov
test
fisubl
cltd
je
lds
idiv
sub
mov
lret
inc
cmp
sbb
and
adc
cmp
arpl
ds
arpl
pusha
dec
test
jne
mov
cmpsb
fldt
or
and
jmp
add
fwait
dec
jns
xor
cs
arpl
mov
inc
fists
xorb
repz
or
das
lds
xor
arpl
cli
pop
push
pop
bound
add
lcall
imul
fisttpll
mov
xchg
fdivs
inc
in
and
cli
stc
push
jno
movsl
push
sbb
in
mov
outsl
or
mov
roll
push
jl
test
add
pop
jmp
fstps
add
cs
loope
cmp
dec
aam
push
pop
data16
arpl
and
rcrb
arpl
sarb
mov
arpl
aam
cmp
in
scas
add
jno
lock
test
adc
stos
mov
gs
sub
shrl
xor
iret
lea
outsb
negl
ret
fisttps
sub
arpl
stos
sub
shlb
xchg
daa
or
push
sub
das
arpl
movhps
test
fisubl
sub
xor
sar
push
inc
cmp
jle
arpl
adc
scas
jecxz
add
inc
ret
ret
dec
imul
or
sbb
pminsw
xlat
pop
cwtl
jmp
aaa
jne
inc
cltd
add
mov
push
add
loope
mov
and
in
mov
push
ret
xlat
jno
pop
arpl
out
cmc
inc
push
ja
mov
arpl
int3
bound
stc
mov
es
in
aad
sbb
dec
arpl
and
rcll
insl
int
mov
fsts
popa
fiadds
adcl
sahf
and
or
in
bound
cmp
xor
inc
test
xor
add
outsl
lock
arpl
sahf
adc
leave
inc
incl
mov
cwtl
fldt
arpl
inc
mull
in
mov
xchg
insl
or
push
xor
xor
dec
xlat
fmull
arpl
cmp
inc
arpl
rclb
sbb
iret
mov
or
add
mov
xor
mov
dec
out
fsubl
cmpsl
arpl
iretw
bound
jno
int
aaa
add
loopne
lret
xor
inc
mov
lods
je
jno
sub
and
imul
sahf
xor
test
sbb
arpl
push
les
arpl
gs
jb
inc
add
xchg
dec
sti
imul
sbbb
sub
cmpsl
imul
popa
je
xor
mov
outsb
testl
mov
dec
mov
push
mov
das
roll
jp
pop
xchg
je
call
stc
mov
mov
lcall
adc
xchg
and
arpl
and
iret
mov
cmp
imul
ret
inc
cmp
mov
xchg
cwtl
bound
xlat
into
mov
xchg
ljmp
arpl
inc
pop
or
mov
cmpsb
arpl
repz
add
xchg
dec
push
fsubrs
lods
mov
in
pop
mov
cmpsl
inc
xor
lret
jecxz
arpl
test
outsl
repnz
arpl
mov
mov
stc
arpl
and
imull
or
and
aam
imul
mov
insl
ret
and
adc
je
cld
adcl
jbe
pop
pop
arpl
enter
std
outsb
dec
inc
mov
push
jmp
cltd
push
add
sub
jae
cmp
arpl
out
sbb
std
push
lds
andl
lret
mov
adc
mov
mov
adc
mov
imulb
jecxz
in
adcb
pop
mov
lcall
shlb
cld
out
stos
mov
xchg
fidivs
xor
addr16
ret
arpl
push
popl
mov
sub
shlb
test
push
shlb
add
and
sub
or
or
cmp
or
arpl
js
frstor
insb
push
xor
mov
arpl
loopnew
mov
arpl
scas
sub
arpl
addr16
or
push
xchg
imul
adc
adc
fsubrl
mov
pop
dec
push
bnd
or
lret
push
sti
sub
lods
mov
cmp
enter
push
or
int3
sar
pushf
insb
add
mov
imul
aas
inc
cmp
loope
or
arpl
sub
data16
and
dec
repnz
lret
jo
enter
mov
add
pushf
cmp
imul
or
inc
dec
arpl
cmpsb
fcmovbe
sbbb
cld
arpl
jnp
adc
bound
fisubrs
sbb
and
and
or
xor
fsts
repz
addr16
dec
cld
cli
jl
and
sub
or
out
movsl
mov
pop
cltd
fs
jb
ret
pop
jmp
cmp
mov
call
stos
push
dec
xchg
arpl
out
cmp
pop
popf
add
mov
ljmp
push
mov
cmovl
movsb
arpl
lret
repnz
lds
in
fstpt
push
push
xor
or
sbb
mov
arpl
insb
cmp
add
pop
icebp
rolb
arpl
iret
out
andb
or
add
arpl
or
jbe
inc
jnp
arpl
push
sub
pop
inc
jle
loope
push
js
adc
nop
xchg
push
mov
arpl
shll
push
je
in
ret
notb
imul
movsb
daa
lea
es
push
xchg
sbb
arpl
mov
sbb
arpl
mov
jg
arpl
into
outsb
push
and
lahf
insb
add
arpl
sti
fimuls
lret
aad
jnp
shlb
lea
adcl
call
stos
je
test
inc
dec
dec
mov
arpl
and
mov
cltd
pop
lea
push
mov
jae
aas
arpl
add
arpl
add
clc
lcall
outsl
pushf
flds
lret
arpl
mov
fneni(8087
mov
inc
addl
mull
and
jecxz
arpl
jne
mov
dec
xchg
push
les
mov
stos
jecxz
imul
aaa
ret
pop
stos
or
inc
nop
out
flds
mov
andb
insl
sbb
inc
arpl
sbbl
rcrl
mov
cmp
push
shlb
adcl
imul
das
outsl
cmp
sbb
aas
jae
lahf
insl
cmp
cmpsl
bound
xchg
push
iretw
mov
mov
insl
out
pop
sti
lahf
jg
into
arpl
in
arpl
xor
fwait
add
jb
fisttpl
outsb
adc
je
into
arpl
sbb
cmp
je
arpl
push
out
arpl
xchg
mov
leave
inc
mov
add
adc
inc
sub
fcom
mov
ss
dec
jne
fwait
outsb
mov
mov
popf
adc
arpl
mov
lods
lds
loopne
lahf
jmp
arpl
gs
sbb
jp
arpl
out
shll
adc
outsb
mov
xchg
cs
dec
sub
inc
arpl
cmp
jbe
and
arpl
mov
sub
stos
mov
mov
mov
mov
cmpsb
mov
in
enter
jmp
test
arpl
scas
cmp
pop
shll
arpl
adc
inc
mov
inc
jg
mov
ja
pop
fwait
outsb
jge
xchg
push
add
adc
mov
jle
ret
ds
imul
jge
movsb
icebp
cmpsl
insb
pop
fwait
push
inc
or
shlb
jecxz
sub
fbld
rcrl
js
pop
push
adc
notb
arpl
push
pop
loop
sbb
add
pop
xchg
add
mov
pushl
sub
jnp
inc
aam
dec
jmp
pop
arpl
jno
xorl
mov
mov
in
sub
cltd
mov
dec
out
jg
pop
jmp
mov
push
stc
add
arpl
xor
mov
push
andb
jmp
and
ds
mov
shlb
outsl
or
xor
outsb
leave
mov
add
test
lock
xchg
pop
ss
push
adc
adc
jbe
pop
fisubrl
cli
and
popl
jnp
and
imul
mov
arpl
mov
or
shll
push
stos
rcr
gs
arpl
pop
jmp
repz
inc
lahf
lds
sbb
mov
and
sub
and
push
rcr
insb
les
mov
arpl
pop
pop
adc
inc
xchg
xchg
add
scas
xor
ret
cmpsb
cli
ja
insl
lods
scas
ljmp
jle
jp
test
pop
mov
push
xor
test
and
xlat
arpl
gs
daa
in
jmp
cmpl
jns
movsb
jp
pop
mov
sub
leave
adc
cmc
nop
dec
inc
scas
out
into
dec
xor
mov
in
cwtl
es
lret
arpl
and
arpl
jle
push
fldcw
out
fistl
jno
loop
xchg
movsl
adc
popa
repz
pop
dec
imulb
imul
shlb
push
popa
sbb
xor
arpl
call
fmull
adc
jg
arpl
je
filds
test
bound
lret
imul
arpl
js
outsb
mov
dec
loopne
loope
pushf
xchg
cmp
sbb
xor
xor
inc
fcom
cmc
and
dec
xchg
and
sbb
addr16
pop
addr16
sub
inc
mov
inc
andb
arpl
fists
test
out
jge
inc
pushf
imul
arpl
iret
fsincos
ss
dec
pop
arpl
push
inc
cmp
int
adcl
sub
arpl
jo
mov
arpl
cmp
fmuls
les
lea
aaa
arpl
mov
bound
sub
pop
fldenv
add
arpl
repz
and
mov
pop
sbb
test
arpl
and
ret
mov
addr16
jae
cli
daa
int
call
sahf
sbb
inc
or
jb
cmp
sbb
das
mov
mov
push
gs
or
in
gs
add
xchg
sahf
outsl
xchg
fsubrl
lret
imul
jp
into
mov
scas
out
lcall
xlat
ja
movsl
arpl
cmp
arpl
xchg
fistpl
sbb
stos
sub
push
xchg
decl
add
lea
leave
cmpsl
repnz
push
jns
std
xor
imul
orl
mov
cmp
jp
sub
jl
dec
or
js
insl
jo
je
adc
xor
cmpl
jp
xlat
mov
cmp
test
cltd
add
outsb
mov
cmp
push
mov
test
inc
xchg
fbstp
jno
mov
test
arpl
movsb
jg
sub
daa
lds
push
pop
das
and
add
arpl
mov
cmp
push
daa
cmp
cmp
and
fidivrs
ja
jmp
bound
push
mov
test
mov
lret
cmpsb
iret
ficompl
lds
lock
imul
xchg
bound
jne
sti
jmp
fwait
and
out
bound
mov
push
and
lods
out
and
insb
push
in
pop
js
scas
ret
clc
sub
pop
ficoml
mov
ret
xor
jns
pop
inc
fs
xor
cmp
out
push
rclb
aas
arpl
adc
xchg
arpl
sbb
mov
inc
sub
jno
lds
fs
mov
mov
xchg
iret
mov
out
popf
cltd
arpl
dec
mov
jb
sub
arpl
add
mov
jmp
stos
xor
xchg
or
loope
insl
mov
fistpll
arpl
and
or
ffreep
insb
call
int3
dec
pop
in
fs
bound
dec
add
clc
inc
lock
mov
addr16
das
adc
pop
shll
xchg
mov
arpl
loop
imul
bound
imul
insl
sbb
xchg
lahf
stos
and
cmp
arpl
or
push
and
flds
outsb
jnp
jp
arpl
push
sbb
outsl
xor
addb
insl
movsb
dec
or
lea
or
sarl
loop
adc
ret
xchg
scas
xchg
cli
lcall
arpl
hlt
mov
arpl
jns
sahf
pop
or
arpl
dec
inc
into
dec
add
dec
jmp
or
push
imul
nop
gs
das
loope
sbb
jecxz
orl
arpl
ret
cmp
arpl
xchg
shlb
pushf
test
out
sbb
out
arpl
or
movsb
pop
es
cmp
addl
jle
xchg
adc
push
inc
aaa
adc
nop
cmp
mov
lahf
arpl
mov
insb
arpl
xchg
divb
dec
nop
arpl
inc
pusha
xchg
lcall
xlat
adc
arpl
cmp
jno
dec
inc
insl
insb
jg
ja
bound
scas
inc
push
inc
mov
lea
add
adc
jo
in
arpl
mov
add
xchg
scas
ret
ss
out
iret
push
arpl
nop
xchg
gs
xor
cltd
xlat
mov
mov
subb
sub
adc
movsb
adc
sti
jmp
jb
mov
jno
test
lods
xor
clc
mov
int
popa
pushf
cld
arpl
xchg
rclb
arpl
frstor
scas
xchg
pop
or
mov
cmp
lahf
and
xor
mov
rcll
lahf
pop
mov
xchg
imul
add
jecxz
jmp
test
iret
aaa
jmp
push
or
lcall
gs
mov
out
push
ds
arpl
mov
lods
pop
jle
cltd
cmp
mov
inc
call
cmpsb
push
xor
cmp
movd
add
cmp
jnp
idiv
out
xchg
jae
xor
xchg
insl
gs
and
mov
xchg
mov
test
mov
arpl
xor
sahf
arpl
sbb
cmp
mov
adc
subl
add
and
clc
or
mov
inc
add
push
push
imul
sbb
in
mov
fidivl
xor
mov
cmc
jb
test
inc
in
das
les
mov
fidivl
jmp
nop
fwait
xor
dec
inc
and
jl
and
aam
mov
lock
ljmp
jg
xor
movsl
imul
lods
inc
insb
imul
in
mov
in
insb
lea
cs
cmp
aam
in
push
add
xor
jecxz
lcall
push
and
xor
rcrb
mov
mov
push
out
jp
cmp
jno
insl
stos
ss
inc
stos
pop
ret
pop
cwtl
andl
lock
test
and
call
dec
push
fcmovb
inc
mov
cli
add
imul
and
sub
loopne
inc
push
xor
xchg
add
sub
js
repnz
push
jo
cmp
mov
add
fisubrs
jnp
jmp
sub
ja
std
in
or
push
jo
idivb
fcom
sti
lret
out
jne
adc
outsl
in
out
lods
cmpsl
ret
icebp
aam
xlat
lea
icebp
dec
mov
icebp
fistl
dec
mov
movsl
pusha
pop
mov
leave
jb
es
addl
ljmp
in
cltd
dec
push
in
ret
inc
xor
jbe
test
lea
add
cmp
cmc
mov
shrl
adc
icebp
xchg
pop
pop
xor
add
movsb
mov
repz
std
sbb
add
cmp
xchg
inc
sub
icebp
mov
push
insl
add
and
mov
jne
addl
sti
insb
pusha
pop
cwtl
std
cmpl
sti
in
scas
adc
es
mov
mov
mov
insl
xchg
aam
sbb
xorb
dec
sub
aam
lret
cli
sub
mov
pop
pop
shll
sbb
and
xchg
and
inc
aam
xchg
enter
lods
sub
pop
ss
nop
mov
push
icebp
shrl
pop
dec
int3
outsl
jb
push
jmp
in
leave
orl
xor
imul
push
shrb
xchg
inc
adc
sub
jno
mov
xchg
shll
mov
out
and
in
leave
ds
fstpt
ljmp
aam
jno
cmpsb
push
sbb
push
out
push
rorb
cs
add
inc
arpl
and
push
cmp
jb
mov
jbe
outsl
adc
in
icebp
push
insb
mov
xor
mov
insl
ss
out
mov
int3
pusha
mov
lret
outsb
push
push
sbbb
mov
adc
cltd
mov
aam
mov
dec
fmul
mov
mov
mov
mov
insl
push
cmpsb
out
sbb
js
in
cmp
popaw
repnz
lock
cmc
jno
cmpsb
push
mov
sbb
pop
push
ja
xchg
enter
je
sti
or
inc
sub
xchg
inc
dec
mov
jb
jne
rcl
inc
xor
sub
fidivl
ret
dec
js
inc
cmp
fucomp
imul
jno
dec
inc
ss
sub
popf
mov
in
sub
xor
outsb
lcall
mov
push
cs
mov
sub
pop
js
xor
stos
push
mov
cmp
in
enter
dec
repnz
repz
icebp
or
fst
cmp
mov
cld
outsl
in
sub
cmp
dec
mov
dec
insl
test
dec
adc
rorb
jmp
add
stos
xchg
lea
jmp
test
test
sub
rcll
bound
inc
insl
shlb
sub
inc
mov
or
adc
dec
cmpsb
nop
insl
jge
dec
jno
sti
rep
add
js
and
mov
inc
sub
cs
ds
bound
mov
xor
xor
cmp
and
bound
ror
adc
sbb
push
fs
cmpsb
pop
push
mov
mov
sti
mov
arpl
imulb
pop
arpl
out
fsubl
arpl
mov
inc
arpl
cmc
and
pop
dec
arpl
fcompl
das
lcall
pop
mov
dec
negl
mov
inc
aad
cmpsl
adc
lods
jb
add
mov
pop
outsb
xor
pop
arpl
mov
andb
push
add
jle
mov
inc
jb
imul
jmp
sbbl
dec
arpl
sub
push
lahf
pop
addr16
mov
jg
pushf
popa
arpl
add
adc
adc
inc
inc
mov
mov
sbbb
flds
into
mov
insb
push
icebp
call
outsl
sub
bound
popa
sti
test
sbb
sbb
arpl
push
cmpsb
inc
inc
xchg
mov
imul
pop
add
inc
xor
rcrb
out
cmp
cmpsl
fidivs
arpl
or
cmp
sbb
mov
divl
lret
mov
arpl
pop
and
std
outsl
int
xor
addr16
mov
adc
xchg
mov
cltd
xchg
bound
rorl
dec
jg
shl
sbb
outsb
das
movsl
sbb
daa
push
popf
or
push
adc
outsl
sbb
add
push
insl
lret
push
addb
xor
outsb
dec
arpl
cmp
push
sbb
stc
push
les
add
arpl
jae
iret
in
sub
pop
sbb
jne
enter
xchg
clc
push
lds
jle
xchg
outsl
gs
rcrb
inc
mov
mov
pop
arpl
or
adc
mov
pop
sbb
dec
das
xorb
cvtpi2ps
lret
mov
scas
ret
out
push
ss
int
xchg
loop
mov
jo
movsb
xor
adc
adc
cmp
imulb
mov
mov
jp
movsb
ror
call
rcrl
movsl
xchg
lds
aam
cmp
mov
pop
arpl
xchg
aaa
arpl
push
mov
das
arpl
sub
pop
in
inc
sahf
jecxz
sti
je
mov
lock
push
inc
or
push
pop
es
mov
add
inc
ljmp
push
adc
arpl
mov
stc
sbb
enter
inc
js
sub
push
xchg
lcall
xor
aaa
shlb
jl
push
arpl
mov
mov
test
aam
out
push
sub
fs
out
in
jae
arpl
or
mov
mov
fcmovnu
je
and
xor
aaa
andb
jb
jno
sbb
jnp
sbb
shrw
bound
lods
jge
push
push
sub
jae,pn
nop
out
pusha
sub
adc
rcl
js
stos
xorl
lcall
ljmp
loop
inc
add
push
insb
clc
orb
dec
xor
cld
sbb
mov
xor
pusha
and
xchg
push
xor
cmp
or
cli
or
mov
mov
and
stos
int3
arpl
rolb
xchg
repnz
or
stc
add
jg
push
loop
pusha
sbb
pshufw
push
mov
test
dec
lock
insl
push
mov
mov
testl
or
gs
leave
inc
sub
pusha
jmp
cmpsl
andb
xor
lret
mov
jg
inc
mov
into
popa
ret
arpl
jle
push
pop
lods
arpl
subb
adc
mov
shrl
enter
outsb
jl
cmc
arpl
fimull
arpl
add
shll
mov
jo
inc
aad
arpl
sub
xchg
test
arpl
pushf
sbb
cmp
push
insl
dec
mov
mov
and
push
out
lret
jmp
jo
dec
cwtl
es
or
arpl
xlat
mov
push
arpl
arpl
xor
arpl
iret
push
bound
ret
dec
xchg
lahf
ljmp
fnstenv
je
jae
inc
out
xchg
jp
and
mov
and
mov
adc
ret
fisubs
mov
insb
jmp
aad
mov
test
in
bound
sti
push
xor
dec
les
adc
frstor
aam
mov
shlb
nop
mov
jle
outsl
subl
je
cli
push
cmp
push
stos
dec
pop
adc
arpl
loop
and
push
sbb
pop
mov
xor
aaa
cmc
or
xchg
vaddsd
xor
ljmp
lret
scas
mul
inc
jo
arpl
xor
jbe
fdivrl
cmp
fisttps
add
mov
insl
imull
pop
push
lcall
imul
pop
add
imul
and
bound
cmpsl
fwait
mov
in
out
bound
fnsave
test
xchg
aaa
or
add
aam
arpl
pop
dec
dec
arpl
pusha
push
mov
mov
shlb
push
insl
mov
push
adc
jp
bound
arpl
mov
mov
arpl
sub
arpl
adc
mov
jo
push
add
pop
scas
xor
cli
sbb
dec
outsl
loope
jno
mov
pop
jmp
outsl
and
sbb
sbb
in
in
mov
jno
arpl
push
and
inc
cld
mov
jmp
ds
pop
sbb
pop
mov
dec
fs
arpl
add
arpl
in
js
mov
cmp
mov
stc
fbld
loopne
mov
mov
pusha
loope
call
push
test
flds
pop
xchg
mov
mov
bound
fdivs
push
ljmp
mov
push
jns
push
xchg
stc
inc
imul
out
rcrl
mov
jo
imul
in
outsl
mov
dec
addr16
push
sub
aas
arpl
shr
xchg
jecxz
mov
sbb
fstps
mov
xor
arpl
call
das
bound
cmpsl
stc
jno
scas
fsubl
movsl
arpl
stos
mov
arpl
mov
das
leave
xor
sti
pop
or
mov
int3
sahf
cmpsl
lcall
inc
push
xor
in
push
arpl
mov
fidivrl
aam
mov
or
arpl
xchg
mov
test
ljmp
mov
es
push
inc
inc
lea
out
dec
arpl
sub
add
jmp
outsl
and
arpl
push
add
repz
ror
dec
arpl
jmp
test
inc
lret
mov
xor
cli
test
loopne
pop
cltd
ds
mov
fimull
arpl
inc
test
jmp
aaa
sub
scas
inc
adc
ds
arpl
inc
fmull
sbb
imul
pop
mov
sbb
cmp
push
loopne
xor
shll
mov
or
pop
test
jae
iret
cmp
data16
dec
dec
nop
popa
shll
fdivr
arpl
aas
cli
test
shll
out
xorl
in
jmp
aam
jae
mov
in
push
fwait
cmp
jmp
push
mov
dec
jne
xchg
lock
insl
aam
inc
sub
mov
popa
cwtl
mov
jb
aam
mov
dec
stc
jnp
sub
das
out
pop
sbb
push
inc
push
lret
icebp
in
dec
shrb
push
push
mov
int3
and
inc
push
mov
mov
adc
jl
sbb
es
outsl
mov
das
insb
cmp
bound
pop
cmp
mov
xchg
js
ret
xor
mov
sub
dec
in
xchg
fimull
aam
call
pop
xor
xchg
jl
es
cmpsl
sbb
scas
enter
aaa
pop
loop
test
test
in
adc
popa
cmp
shll
je
in
loope
das
lods
scas
jecxz
das
loop
sbb
push
jno
aad
or
push
cmp
outsl
xchg
sub
ret
daa
ret
jmp
xchg
addr16
lods
addb
mov
sahf
in
repz
pop
dec
mov
cwtl
fcoml
mov
xor
andl
out
call
aam
insb
faddp
lods
jnp
add
lcall
icebp
mov
bswap
aam
sbb
mov
sti
ljmp
lock
ja
mov
in
in
xor
dec
leave
mov
cmp
mov
jns
mov
int
rcrl
xchg
gs
aam
fldl
mov
and
lods
aam
and
out
out
mov
and
push
pusha
push
xchg
int
xchg
mov
dec
jecxz
decb
sbb
dec
ss
leave
dec
lods
xor
add
adc
mov
outsl
xor
sub
in
cmp
and
cmp
dec
and
ret
into
js
stos
data16
dec
and
mov
out
mov
push
stc
adc
inc
outsb
scas
or
repnz
adc
push
jle
lea
movsb
jae
in
jp
fs
imul
cmc
adc
dec
inc
fsts
repnz
push
dec
push
je
push
and
or
pop
inc
sbb
sahf
aam
pop
pop
jge
scas
scas
mov
das
xchg
out
xor
push
xor
out
lea
pushf
adc
pop
subb
into
xchg
mov
nop
jae
push
cli
lahf
iret
std
movsl
stos
dec
jno
sbb
sub
mov
dec
gs
cmp
int3
lea
mov
movsl
push
push
in
mov
xchg
cmpl
insl
cmp
dec
dec
xor
rcrb
mov
xor
xor
out
ja
out
popf
ljmp
fnstenv
jp
in
push
add
dec
outsl
sub
insb
push
push
xor
jp
mov
dec
insl
adc
mulb
mov
mov
insb
dec
gs
push
mov
outsl
loopne
subb
flds
iret
mov
xor
pop
sub
xchg
adc
in
sub
or
aam
pop
sbb
dec
scas
xor
push
rol
aam
dec
sarl
ljmp
repz
int
sarl
in
jmp
mov
pop
dec
mov
sbb
hlt
ss
mov
dec
adc
push
call
add
cmpsb
aam
adc
sbb
jbe
ret
dec
fdivrs
adc
fcoms
mov
xchg
inc
aad
sub
addr16
aam
jge
push
dec
push
mov
fucom
pop
rclb
aaa
inc
adc
mov
lret
pop
dec
mov
mov
stc
sub
jne
popa
outsl
and
std
iret
fwait
imul
mov
int
push
jbe
outsb
sti
mov
bound
or
lock
das
mov
sarb
mov
cmp
push
ret
and
cmpsb
dec
rorb
aas
test
jno
cld
pop
dec
and
stc
mov
ficoms
jb
add
ret
adc
in
mov
mov
test
mov
lods
push
sbb
mov
scas
inc
jo
ja
std
xchg
sbb
cli
es
in
dec
sbb
xor
in
xchg
pop
push
adc
jno
shlb
cs
mov
in
aam
cmp
test
jge
popa
adc
push
jge
es
movsb
mov
mov
pop
xor
mov
and
push
in
hlt
sarb
ret
les
mov
push
in
jns
pop
cmc
mov
pop
xor
xchg
push
jns
sub
test
pop
rcr
cmp
pop
pop
out
es
ss
in
fisttpl
outsb
sub
sub
dec
sbb
std
int
mov
dec
mov
test
cmp
adc
push
hlt
aam
cltd
ret
movsl
push
push
or
arpl
fdivr
mov
ja
ffree
jle
xchg
lret
jl
mov
xchg
xchg
lods
sub
ss
jns
xlat
cltd
xor
adc
mov
add
aas
fcmovb
mov
push
adc
jo
inc
out
xchg
out
lcall
in
mov
add
mov
inc
inc
sbb
pop
jo
loop
lcall
mov
jmp
mov
outsb
xchg
mov
pop
in
ljmp
lods
cs
jle
repnz
icebp
fiadds
or
inc
xorl
loop
shlb
xor
es
push
imul
mov
ljmp
outsb
xchg
cwtl
jl
dec
sub
mov
aam
int3
mov
ds
pop
inc
pop
mov
lds
xchg
inc
xchg
mov
inc
aaa
jnp
lcall
insl
iret
jno
mov
mov
jmp
add
push
jbe
cs
xor
outsl
mov
xchg
fldcw
push
jns
shlb
or
and
jno
pop
and
sub
loopne
sub
push
dec
sub
mov
sub
mov
leave
inc
and
sar
scas
push
loopne
test
or
mov
push
mov
fwait
lods
sbb
insb
sbb
adc
dec
mov
push
mov
loope
add
loop
scas
and
mov
lahf
xor
add
inc
add
mov
mov
in
call
outsb
and
arpl
adc
bound
ja
insl
adc
les
pushf
jge
adc
arpl
rolb
inc
push
and
bound
adcb
bound
in
fldt
hlt
mov
jnp
out
sbb
mov
pop
and
xchg
adc
int3
jl
pushf
arpl
sub
cmc
fisubl
inc
and
push
in
xchg
movsb
xor
shrl
sbb
and
testb
lock
outsl
fs
mov
loop
andb
mov
mov
cs
addr16
dec
fnstsw
insl
add
mov
jp
xchg
inc
ja
mov
mov
test
add
add
es
lea
jno
lock
sbb
arpl
mov
jae
bound
and
mov
nop
lods
jle
jg
loope
adc
xor
pushf
dec
xor
arpl
inc
or
cltd
fnstenv
sbbb
out
jne
lock
xchg
rol
pop
jmp
andl
or
arpl
fdivrl
xchg
arpl
test
in
mov
out
pop
inc
rcrl
push
mov
outsl
mov
loopne
iret
cmp
jnp
arpl
scas
dec
xor
pop
outsl
je
mov
imul
xchg
sbb
jge
pop
arpl
iret
scas
arpl
scas
push
movsb
mov
int3
sti
pop
fcompl
add
cmpsl
les
inc
add
jg
dec
arpl
out
mov
adcb
shlb
lock
mulb
cltd
ss
cmp
inc
add
mov
test
stos
mov
arpl
cmp
sbbb
push
and
push
pop
mov
cmc
inc
cmp
pusha
shrb
outsb
out
add
fmul
inc
cmpsb
repz
loop
cltd
imul
xchg
sub
push
xor
bound
push
arpl
adc
xchg
arpl
stos
daa
push
mov
xchg
in
jno
jge
mov
ja
or
add
imul
push
pop
pop
stc
sbb
movsb
repz
sbb
inc
xchg
jp
push
push
arpl
lods
and
outsb
in
sub
bound
xchg
xchg
dec
loope
es
sub
cmp
adc
xchg
pop
mov
xchg
pop
arpl
xchg
jp
sbb
adc
into
or
shl
mov
pushf
mull
lea
jb
mov
arpl
sbb
inc
into
mov
shrl
add
movsb
orb
imul
dec
add
insb
nop
arpl
icebp
aas
dec
arpl
mov
mov
inc
cwtl
imul
mov
pop
push
cmp
adc
dec
sbb
cli
cs
mov
arpl
test
jl
pop
and
jecxz
adc
inc
arpl
ja
cli
push
sub
ljmp
pushf
sub
ret
push
lods
xor
out
stos
mov
in
and
mov
push
data16
imulb
pop
je,pt
scas
push
fcmovb
in
arpl
pop
inc
arpl
jmp
orl
cmpsl
xor
ds
adc
outsl
or
ljmp
icebp
mov
push
shll
xchg
shl
xor
mov
cmpb
sub
je
mov
jecxz
inc
mov
lock
pop
jne
movsl
int3
or
das
inc
das
xchg
in
cld
cmp
aas
push
xor
sbb
mov
xor
cmpl
xchg
xlat
jecxz
sbb
loope
test
or
cmpsb
jbe
in
bnd
iret
mov
pop
sbb
outsb
dec
mov
aam
sti
and
dec
cmp
sbb
iret
push
popf
push
or
jecxz
in
mov
into
mov
jecxz
sbb
mov
out
dec
aam
jl
add
arpl
push
sub
lods
mov
mov
pop
push
inc
aam
or
dec
test
pop
add
mov
test
ret
xorb
sbb
jecxz
and
mov
dec
adc
push
cltd
stos
arpl
sahf
mov
cmp
push
xlat
dec
mov
icebp
sbb
scas
imul
popa
mov
inc
scas
pop
jb
fidivrl
cmc
mov
aaa
test
xor
inc
dec
dec
cwtl
mov
addr16
sti
aad
int
fisubs
fwait
aad
clc
push
xor
mov
sub
dec
insl
insb
sub
je
adc
xchg
jmp
ja
out
orl
int3
xor
outsb
push
out
pop
jo
cmp
aam
fs
push
outsl
xchg
and
repnz
outsl
push
mov
jno
in
test
or
inc
fldenv
push
in
lods
xor
dec
rorb
adc
inc
pop
sbb
mov
push
inc
dec
push
adcb
insl
gs
out
add
in
jmp
sbb
js
sub
push
cmp
leave
mov
push
mov
and
mov
js
cmp
dec
sbb
xchg
js
dec
jae
fs
xchg
repz
jecxz
stc
and
fimull
imul
jle
jge
ja
add
stos
pop
js
adc
enter
jnp
out
fs
les
fsts
add
mov
xor
pop
pop
aam
sbb
jno
dec
dec
sub
mov
cld
mov
xchg
xor
stc
imull
adc
pop
bound
pop
mov
call
sub
push
sbb
pop
jp
popa
daa
mov
pop
mov
fsubrl
pop
and
pop
xchg
repz
and
adc
scas
and
outsl
test
das
enter
inc
movsl
lods
inc
outsl
adc
cmc
cvtps2pd
sub
sbb
adc
or
pop
xor
push
scas
sbb
and
das
adc
jo
mov
push
cmc
es
out
lcall
stc
xchg
int
cld
pop
sti
aam
fs
mov
cwtl
mulb
push
xor
mov
add
or
mov
add
xor
jb
jp
jge
inc
jg
rorl
enter
add
sbb
in
mov
addr16
push
inc
mov
sub
cltd
push
and
test
lods
mov
xchg
aam
rolb
outsb
lods
outsb
pop
inc
cli
jmp
push
sbb
sub
aam
dec
mov
cmpl
mov
or
lock
das
hlt
mov
xchg
scas
fiaddl
cmp
adc
cmc
rcrl
push
jno
outsb
repnz
pop
test
fldcw
add
adc
mov
sbb
outsb
adc
scas
dec
or
cmpsl
dec
bound
sbb
aaa
or
push
popf
loope
and
lea
mov
cltd
jne
push
inc
shrl
test
mov
lock
xor
jbe
aas
sub
in
mov
and
or
lods
jge
lahf
fcmovbe
clc
dec
inc
fistl
imul
aad
rcrb
loope
mov
mov
ret
sub
fisubs
je
cld
call
adc
mov
test
push
add
adc
into
sbb
mov
out
fidivrs
dec
cli
aam
fsub
in
insl
xor
sbb
push
movsl
mov
pop
insl
push
push
push
sbb
sbb
sub
dec
insl
xlat
or
jne
ret
or
pop
ja
sarb
jnp
std
movsb
ja
data16
ljmp
ds
sub
inc
mov
dec
lods
dec
shll
inc
add
dec
and
data16
mov
jle
shlb
daa
imull
hlt
pop
cmp
gs
mov
les
lcall
mov
mov
fbld
int
push
xchg
and
sbb
int3
inc
xor
jecxz
mov
or
adc
mov
xchg
jnp
testl
add
and
data16
xchg
mov
dec
ljmp
add
xor
or
xchg
dec
jmp
mov
xchg
jge
adc
cmpsl
ja
mov
lock
dec
mov
or
xor
sbb
mov
aam
dec
push
in
jl
cmp
orb
lahf
shlb
mov
loop
icebp
or
cli
or
add
mov
out
push
inc
lods
mov
sub
lahf
repnz
mov
mov
mov
aam
and
std
push
or
arpl
pop
outsb
bound
into
aas
jmp
pop
dec
sub
mov
xchg
in
mov
int
popf
imul
and
aam
inc
pop
dec
ja
sbb
xor
xchg
mov
mov
aam
gs
and
pop
sub
and
inc
cld
cli
xchg
jg
inc
sbb
push
xor
sub
jo
in
popa
pop
push
push
stos
xchg
out
pop
in
jmp
xor
xchg
push
jecxz
repz
lret
sahf
add
outsb
xor
out
mov
out
loop
js
sbb
ja
loope
pop
clc
push
jge
push
sbb
jge
add
imul
idivb
movntdq
mov
enter
nop
imul
call
mov
adc
filds
das
sbb
jecxz
mov
enter
mov
mov
inc
lods
fcomps
pusha
mov
mov
dec
pop
push
nop
iret
add
inc
jbe
out
insb
mov
dec
sar
mov
data16
dec
or
hlt
push
test
dec
pop
pushf
pop
cmp
outsl
push
cmp
dec
fidivl
ret
add
insb
jae
bound
sbb
lea
mov
lea
rol
lret
pop
add
ja
out
in
je
mov
cmp
test
xor
rcll
jge
movsl
push
push
in
jo
in
stos
ljmp
push
mov
mov
ret
sub
dec
inc
stos
ljmp
mov
jp
in
dec
or
dec
push
mov
push
dec
sub
stos
popf
out
xchg
int
fmuls
shlb
sub
push
dec
scas
inc
clc
inc
aam
jg
and
lret
and
push
das
adc
sbb
cmpsl
jmp
mov
cmp
sbb
fsubrl
daa
xor
pop
push
ret
aam
std
std
lock
add
into
mov
lret
mov
ja
gs
cmp
ds
jno
dec
mov
pop
jae
shlb
cwtl
push
dec
subb
or
mov
fsub
cmp
adc
adc
jb
aad
orl
push
sti
push
pop
lds
andl
sbb
inc
mov
mov
in
xchg
outsl
dec
or
mov
lret
jle
push
sti
xchg
xchg
mov
xchg
sahf
xchg
ja
and
in
imul
pop
jmp
es
push
mov
cmp
mov
dec
std
insl
mov
daa
das
scas
xchg
mov
nop
ret
xor
ficoml
arpl
mov
or
xchg
and
pop
add
test
inc
ds
cmp
add
nop
adc
aam
inc
sbb
sbb
movl
push
daa
divl
sbbb
xchg
pop
imul
outsb
test
or
adc
mov
shrl
and
outsb
xor
xor
aam
mov
cmpb
inc
ficoml
imul
or
mov
daa
or
dec
or
sbb
mov
sbb
cmpsl
inc
scas
aam
jge
mov
iret
les
adc
int3
xchg
mov
jle
adc
jnp
les
push
mov
add
mov
xor
sbbl
mov
ret
addr16
or
push
js
and
jno
jle
mov
popf
xchg
sub
pusha
jno
test
cmp
in
scas
lods
sub
inc
sbb
cwtl
jp
mov
jmp
xchg
stc
std
nop
jge
or
stos
mov
inc
add
popf
sub
out
dec
push
and
loope
fwait
dec
sbb
scas
scas
xor
jno
adc
scas
sub
inc
js
xchg
outsl
daa
mov
lahf
sub
pop
lock
jecxz
add
outsb
movsl
mov
adc
or
dec
pusha
or
lahf
xor
pop
push
pop
les
cltd
in
xor
out
adc
pop
fucom
jnp
loop
insl
icebp
xchg
lret
int3
push
or
xchg
pop
stos
jecxz
repz
adc
das
sbb
lods
mov
in
xchg
inc
imul
adc
jle
and
mov
mov
or
je
adc
data16
cmp
ret
lcall
mov
psrld
push
fistl
pop
mov
inc
jg
scas
adcb
pop
mov
outsb
cmp
fsts
sub
mov
sti
int3
mov
in
in
cmpsl
notb
cmpb
call
cltd
adc
addb
imul
bound
inc
test
lahf
jnp
pop
and
or
sarb
sbb
sbb
repnz
sub
aam
pop
push
pop
mov
test
mov
outsb
jnp
outsl
or
push
aam
add
imul
pop
movsl
xor
rcr
push
jb
push
add
out
push
mov
aam
insl
push
dec
xchg
sub
iret
inc
ja
out
sti
in
imul
imul
fistpl
in
and
insl
gs
scas
xor
cs
popf
lods
sbb
stos
cltd
scas
js
or
jmp
cwtl
loopne
xor
stos
stos
push
fdivrl
scas
xor
stos
outsl
dec
pop
jo
jp
out
andl
mov
rolb
mov
in
aam
push
mov
xchg
call
in
sbb
mov
mov
js
popa
dec
mov
xor
in
cmp
mov
iret
adc
xor
iret
fldl
popa
jnp
xlat
outsb
and
or
fsubrl
ja
jge
xchg
ljmp
sub
test
push
add
ret
add
mov
cwtl
dec
jo
lods
push
aam
add
dec
xor
arpl
push
xlat
movsl
popf
add
arpl
test
outsb
lods
mov
popa
pop
ljmpw
xor
ficoml
loop
test
movsb
mov
dec
xchg
mov
dec
xchg
std
jg
mov
push
insb
bound
insl
in
das
std
jp
test
shrl
pop
aam
scas
fsubrl
ljmp
std
inc
cld
test
cltd
inc
xchg
adc
icebp
out
cli
dec
in
imul
ret
dec
aam
add
xor
in
sub
outsb
jle
fiadds
jno
sub
ret
cs
cs
sti
jno
jbe
daa
in
xor
jo
in
ret
int
inc
sahf
sub
push
ja
addr16
sbb
sub
cs
loope
dec
shll
int3
cmpsl
in
fsubrl
jae
push
xlat
mov
repz
mov
mov
in
mov
sbb
cmp
mov
mov
insl
or
imull
push
sbb
adc
cwtl
adc
dec
fnstenv
fs
aam
pop
or
xor
add
out
outsb
inc
mov
adc
sahf
mov
inc
rcr
int3
inc
mov
das
in
sbb
ficoms
adc
aad
dec
lods
push
cmp
out
fs
mov
loopne
gs
sbb
and
push
fcomip
test
xchg
outsl
repz
xor
icebp
les
or
inc
dec
or
mov
in
adc
lods
imul
jo
stc
inc
test
push
out
decl
bound
imul
xlat
imul
imul
shll
loop
lods
cmp
les
inc
push
add
fsubs
push
cmc
pushf
mov
or
inc
addr16
mov
mov
pop
pop
arpl
sub
in
xor
dec
clc
ja
jae
std
arpl
lret
pop
fidivl
in
mov
mov
add
fs
xor
pop
dec
and
arpl
daa
jp
ret
into
mov
arpl
mov
outsl
out
adc
mov
mul
push
xchg
or
xor
imul
pushf
bound
js
mov
dec
jg
sbb
add
std
xchg
arpl
ljmp
xchg
test
mov
add
and
dec
fwait
pop
jb
sahf
test
insb
pop
inc
xchg
movsl
or
jae
inc
push
test
jbe
adc
add
shll
stos
or
scas
xlat
cli
cmp
fmuls
and
inc
pop
push
shll
xchg
add
inc
insb
xor
lods
cmp
mov
lahf
sbb
dec
jb
dec
inc
or
or
sub
filds
stc
fsubs
pop
add
lret
jecxz
cs
aad
lea
data16
cs
repz
arpl
xchg
mov
fwait
cmp
push
in
adc
push
and
mov
insb
jle
dec
imull
arpl
xchg
mov
clc
inc
xor
iret
data16
jno
xchg
inc
out
int3
ja
bnd
mov
push
dec
add
out
cltd
jne
jp
cli
mov
add
out
adc
add
jle
xorl
repnz
mov
dec
addr16
out
out
push
add
push
repnz
xor
add
rcrl
jge
and
cld
sbb
test
xchg
push
in
bound
aam
lea
jno
and
icebp
add
dec
imul
ffreep
ficompl
loope
mov
imulb
push
shlb
sbb
aam
cmp
cmpsb
mov
mov
sub
int
and
into
out
stos
aam
add
push
addr16
icebp
jp
mov
daa
mov
leave
mov
mov
test
jns
pop
jo
movsb
ss
cmpsl
rcrl
dec
sub
mov
and
mov
push
cld
outsl
dec
dec
inc
or
push
scas
or
repnz
sub
cmp
push
data16
pop
jmp
stos
in
mov
insl
ljmp
mov
leave
cs
sbb
in
stc
shll
in
std
push
add
push
mov
sahf
dec
cmp
adc
push
mov
es
adc
cmp
jns
movsl
adc
push
and
ret
xchg
push
and
xor
pop
push
in
xor
sub
outsl
mov
cmp
push
int
int
and
aas
pop
dec
addb
repz
ficoml
and
test
sub
clc
push
xor
lock
orl
xor
ja
sbb
stos
data16
and
leave
jp
ljmp
push
jns
xchg
loop
fcmovnb
adc
repnz
and
mov
sbb
push
and
push
and
je
pop
mov
and
in
adc
inc
dec
outsb
mov
in
in
inc
pop
mov
dec
pop
push
es
xor
jp
inc
sub
jno
hlt
mov
roll
mov
dec
inc
rcl
xchg
aaa
xor
repz
jno
stos
test
out
int3
sub
dec
fsubrs
pop
pushf
arpl
insl
in
and
loopne
imul
inc
nop
cli
adc
dec
icebp
jno
insl
sbb
and
push
mov
mov
inc
lea
and
inc
das
push
inc
push
loop
in
call
cmpsb
iret
daa
loop
push
insl
in
add
js
in
imul
xor
mov
shrb
test
lcall
out
jmp
dec
and
lea
aam
xchg
sbb
loopne
adc
fisubl
mov
sbb
pusha
jbe
sbb
mov
inc
cltd
dec
movsb
js
cmp
xchg
stos
aaa
pushf
pop
je
out
mov
pop
call
les
testl
add
xor
mov
or
int
out
pop
jno
sbb
cmp
xchg
inc
xor
push
movl
cwtl
pop
out
pusha
add
and
in
push
sbbb
jle
sub
lods
or
out
pop
xchg
mov
sbb
aaa
pop
jg
sbb
push
arpl
push
pusha
add
les
inc
xor
push
lods
into
push
out
out
test
mov
mov
cwtd
fwait
push
sbb
ret
icebp
push
push
in
orb
rcrw
mov
ljmp
inc
shrl
push
lock
dec
mov
push
mov
fs
loop
repnz
in
int
sub
in
pop
repz
or
rorl
inc
clc
mov
fadds
xchg
mov
mov
mov
aam
sub
and
add
cmp
shl
xor
sub
xor
loop
mov
nop
jb
fsubrs
in
xchg
dec
in
dec
or
repnz
shrb
mov
loopne
stc
xor
fs
stc
jno
fistps
shl
lret
jne
sbbb
sbb
mov
add
ret
push
leave
add
mov
cmp
jl
jecxz
jg
test
dec
push
and
lret
aad
in
mov
sarl
outsb
int3
ljmp
mov
mov
stos
std
in
ret
rol
push
mov
and
lahf
in
int
stos
sub
xor
testl
jnp
arpl
lcall
or
out
sub
cltd
push
outsl
pop
add
aam
lods
in
das
xchg
and
push
cmp
out
aam
das
in
jnp
pop
add
insb
out
cltd
jne
push
scas
in
loop
push
adc
mov
aad
pop
sbb
cmpsb
movsb
push
sbb
sbb
push
rcr
faddl
jmp
add
mov
push
pop
jae
mov
jp
mov
inc
out
sahf
push
dec
scas
mov
push
das
outsb
into
hlt
leave
cmp
ror
dec
addr16
inc
cs
cmp
rcl
popa
sub
mov
fisubl
les
sub
shrl
or
loop
fsubp
les
popa
in
shll
in
jne
and
cmp
lock
fistps
in
rcl
add
xchg
lock
in
movswl
loope
bound
dec
lods
das
popa
fimull
in
xchg
adcb
add
shl
push
imul
sub
inc
jb
mov
push
pop
cmp
fchs
dec
mov
cmp
jg
std
sti
pop
or
pop
mov
insl
xlat
test
mov
aam
pusha
lock
insl
cmpsl
adc
sub
xor
mov
push
in
jns
orl
loopne
cmc
jp
pop
cwtl
shl
cli
in
nop
xchg
dec
pop
mov
orb
nop
xor
jl
ret
ret
hlt
mov
aam
cld
add
pop
scas
cwtl
inc
aas
shll
fildl
sub
jp
aaa
and
into
jne
xchg
out
xchg
aad
dec
jnp
sub
aad
adc
int
in
add
divb
cwtl
jns
popl
push
sahf
scas
outsl
push
sbb
add
into
test
leave
xlat
mov
out
xchg
into
and
icebp
dec
into
in
or
loopne
call
mov
fsub
repz
cmp
imul
stc
ret
adc
ret
outsl
mov
sbb
jbe
push
cmpsl
loop
stos
aaa
mov
out
and
mov
into
loope
lret
sub
sbbl
push
out
push
jmp
insl
add
insl
and
jb
addr16
loopne
push
test
outsl
mov
shrb
or
inc
xor
sarl
mov
pop
mov
jl
or
mov
icebp
sbb
push
arpl
mov
fwait
fwait
arpl
das
dec
sbb
stc
pop
into
ficoms
pop
arpl
mov
cmp
fbld
jmp
je
ds
or
lods
cmp
addr16
dec
mov
and
jo
lret
pop
push
mov
sarl
jnp
bound
xchg
inc
and
pop
sbb
adc
cmp
jp
cmpsb
lds
jb
push
sub
pop
call
pop
mov
stos
mov
lret
nop
dec
les
xchg
out
mov
arpl
or
data16
in
inc
pop
mov
xlat
test
mov
arpl
lea
push
cmp
stos
mov
and
pop
push
frstor
add
mov
mov
adc
gs
mov
xorb
test
dec
mov
fwait
mov
pop
loope
lock
pop
sbb
xchg
arpl
or
aaa
arpl
pop
hlt
xchg
and
lods
arpl
mov
push
dec
and
fwait
pop
sub
xor
js
arpl
outsl
arpl
inc
popf
pop
mov
imul
fmull
insl
jnp
xchg
sbb
sub
mov
mov
jle
or
rclb
jmp
out
inc
inc
mov
jnp
mov
cmp
arpl
xor
lret
sub
mov
mov
mov
inc
leave
mov
arpl
iret
inc
sub
sti
push
arpl
xchg
pop
test
imul
addr16
in
sbb
cmp
dec
cli
call
cwtd
xchg
imul
sbb
insl
out
cld
bound
push
and
inc
mov
sbb
test
repz
pop
lds
arpl
mov
cmc
jo
lcall
mov
xor
call
loope
inc
add
xchg
mov
adc
imul
mov
adc
dec
cmp
repnz
loop
arpl
mov
in
arpl
dec
setbe
sub
inc
pop
xor
jo
cmpl
sahf
shl
in
std
fdivs
mov
arpl
das
push
arpl
mov
ret
adc
push
arpl
mov
or
stos
sub
dec
sub
arpl
mov
push
iret
arpl
loop
pop
adc
mov
xchg
sub
add
in
jo
cld
repz
loop
xchg
pop
mov
bnd
push
mov
icebp
mov
sub
push
shr
pop
jae
addr16
mov
cmpsb
sbb
mov
inc
arpl
sub
inc
add
adc
mov
scas
andb
pop
cmp
cmc
inc
and
inc
push
inc
push
cmp
jg
daa
imul
xlat
pusha
cmp
adc
inc
lcall
clc
arpl
in
and
ja
dec
arpl
xchg
lcall
adc
mov
nop
out
mov
cmp
movsb
mov
xor
jmp
xor
iret
jb
mov
stos
std
insl
or
sbbl
cmpsl
pop
mov
and
std
pusha
outsb
arpl
adc
call
shrl
in
pusha
inc
mov
or
mov
xchg
loop
dec
jge
arpl
imul
pop
mov
jmp
add
arpl
push
mov
lds
add
ss
mov
je
mov
movsb
call
arpl
ja
add
lds
iret
lods
cmp
mov
or
lret
pusha
icebp
imul
repz
inc
fldpi
mov
nop
cmp
jge
push
pop
ds
int
sbb
fistpll
cld
xor
pusha
adc
mov
xchg
dec
lahf
sub
movsb
push
jb
pushfw
sub
imul
addr16
ror
outsb
jo
xor
mov
push
fbld
stc
rcl
gs
add
cwtl
mov
shlb
inc
test
outsl
fnstcw
fwait
out
inc
scas
test
outsl
repnz
pop
sbb
movsl
push
add
mov
arpl
rcrb
int
jae
sbbb
push
dec
addr16
addr16
pop
arpl
jge
inc
mov
xchg
negb
cmp
icebp
ljmp
dec
enter
rcl
dec
arpl
adc
and
arpl
jnp
mov
cmc
pop
in
nop
xor
push
pop
jl
in
andb
sbbl
imul
or
add
jmp
mov
cmp
fdivs
insl
stos
arpl
sbb
arpl
test
addr16
arpl
push
mov
adc
inc
lahf
adc
jl
mov
mov
shlb
aaa
push
ret
and
shrb
clc
jp
jae
mov
xor
test
ja
inc
arpl
mov
int3
sbb
aam
sub
lds
mov
xchg
aam
push
test
pop
jecxz
jo
mov
arpl
jb
jle
fwait
inc
inc
pop
shll
xchg
test
push
jg
arpl
xor
mov
fwait
mov
xchg
xchg
jbe
adc
enter
push
mov
add
andl
jmp
jecxz
lret
ljmp
mov
mov
inc
xor
out
dec
push
aaa
inc
sbbb
aas
jmp
bound
bound
cmpsl
es
sahf
arpl
cmp
js
xor
mov
sbb
pop
out
inc
dec
inc
je
sarl
int3
push
bound
aaa
mov
add
arpl
xchg
movsl
sbb
push
inc
in
scas
inc
hlt
mov
es
aad
not
arpl
sbb
icebp
aas
fwait
sysret
dec
and
cltd
mov
pop
mov
addr16
bound
sub
jo
push
jmp
jne
inc
and
stos
loopne
or
sbb
arpl
imul
sub
lret
adc
add
xchg
xor
dec
icebp
cltd
jge
ficoms
mov
push
sub
repz
push
xchg
imul
arpl
stos
dec
mov
pop
mov
js
std
iret
lds
outsl
sbb
arpl
popa
pop
ret
and
lock
call
adc
xlat
ret
mov
add
cmpl
cmp
imul
mov
xchg
push
dec
pop
xor
lods
jno,pt
inc
add
xchg
inc
xor
in
xor
fistl
mov
jmp
xchg
jp
inc
mov
and
out
pop
add
enter
cmpb
xor
in
mov
jecxz
jmp
fucomip
ret
mov
mov
xchg
pop
fwait
out
andb
mov
nop
test
cmc
and
mov
outsl
lods
cmp
dec
hlt
arpl
and
dec
std
jns
push
pop
loopne
test
mov
aam
pop
imul
sahf
mov
popl
cmp
divb
dec
in
or
subl
inc
add
ja
rdmsr
add
arpl
test
ficomps
pushf
iret
or
jb
arpl
adc
aad
xchg
arpl
cmpsl
push
fadds
sbb
sub
subl
and
sub
lret
jg
arpl
lods
dec
outsl
cmp
jmp
mov
mov
fs
lret
mov
sbb
and
sub
stc
arpl
roll
int
inc
adc
arpl
stos
popf
jmp
insb
push
outsb
jg
in
imul
mov
fimuls
jno
fists
stc
data16
les
arpl
fwait
insl
mov
cwtl
and
inc
dec
and
arpl
and
push
daa
sub
xchg
ljmp
clc
mulb
lahf
or
sub
cmp
cmpl
out
dec
and
outsl
or
in
adc
insb
pop
cmp
mov
in
lods
dec
insb
jmp
cmpsl
mull
arpl
cmp
mov
enter
sub
sub
xor
arpl
push
xor
sub
inc
mov
into
fstpt
pop
push
xchg
add
out
iret
clc
cmp
jb
mov
daa
dec
xchg
repnz
mov
cmp
mov
arpl
aaa
mov
jmp
hlt
mov
lods
sbb
inc
insl
test
movsb
mov
and
in
out
mov
mov
outsb
lea
sbb
icebp
sub
cltd
push
mov
aad
sub
mov
test
mov
push
adc
scas
jb
push
iret
pop
xchg
add
push
inc
adc
loop
push
mov
and
inc
and
shll
mov
repnz
add
mov
cmp
push
and
in
popw
fsubr
sub
arpl
lock
out
pop
bound
xchg
std
data16
hlt
lahf
mov
lods
aad
inc
sti
pop
sub
ljmp
cwtl
loop
test
xchg
loop
arpl
push
mov
clts
divb
add
fsubs
push
arpl
dec
pop
stos
and
push
xchg
hlt
out
outsb
dec
add
jae
pop
xchg
arpl
test
inc
xor
xor
fildll
sti
nop
arpl
push
loope
lret
lods
push
inc
call
mov
pop
inc
and
fs
bound
jg
movsl
inc
xchg
inc
out
imul
imul
inc
xlat
movb
inc
scas
add
jo
sub
inc
stc
jnp
jns
add
jmp
ficompl
stos
add
add
dec
mov
sti
imul
adc
fwait
add
mov
cld
mov
es
out
jno
mul
out
stc
jns
dec
data16
add
mov
stc
cli
mov
movsl
add
mov
adc
repnz
lock
jb
ja
pop
sbb
jnp
pop
dec
mov
jo
aaa
cmpsb
into
aam
xchg
pop
or
arpl
loopne
mov
aas
imul
mov
push
sbb
es
mov
mov
or
mov
aam
push
jmp
adc
sbb
jle
jge
push
lcall
pusha
jne
aam
test
push
and
jns
rorb
repnz
mov
insb
push
jle
negb
dec
mov
out
mov
enter
mov
add
push
in
lcall
mov
jne
sbb
fs
add
std
inc
cmc
jae
xchg
dec
repnz
pop
push
sub
mov
outsb
ret
mov
lds
in
les
leave
out
aam
lahf
push
arpl
mov
int
inc
xor
pushl
subl
pop
stc
or
lods
fxch
and
jg
int3
push
sbb
sub
dec
aam
fcomip
in
fiadds
mov
iret
sub
aaa
mov
pop
test
enter
mov
pushf
xor
shll
cwtl
dec
mov
and
or
sahf
mov
movsl
push
ja
movsb
stos
pop
xorb
mov
mov
outsb
dec
xchg
pop
adc
test
jb
in
pop
in
and
loope
shl
cmp
or
mov
mov
dec
in
inc
icebp
rcl
mov
fdivr
nop
out
aam
inc
sbb
inc
mov
repnz
or
subb
test
dec
jbe
xchg
fwait
push
jb
jno
icebp
subl
jge
and
adc
sub
pop
mov
ret
xchg
inc
sub
in
push
xor
xchg
out
test
je
mov
and
ss
adc
jbe
fdivrs
add
in
scas
dec
pop
mov
inc
inc
xchg
mov
pop
add
sub
pop
out
int3
dec
xchg
sub
outsl
sbb
fimull
jns
shll
pop
aam
or
push
cwtl
mov
and
nop
mov
mov
mov
mov
inc
jb
ja
sahf
call
push
add
sub
in
int
inc
aaa
int3
mov
jno
fisubs
lods
insl
mov
in
in
out
dec
dec
dec
xchg
stos
cli
xor
mov
lret
dec
nop
aaa
pop
sbb
push
in
cwtl
sti
es
cltd
dec
out
fdivrp
shl
stos
add
mov
jb
push
pop
outsb
lock
push
mov
hlt
out
in
jge
ljmp
imul
mov
paddq
fsubl
ret
in
fisubrl
push
jge
movsl
xchg
in
int3
inc
mov
push
xlat
push
out
sub
stc
sarl
popf
xor
dec
shlb
imul
pop
dec
xchg
mov
mov
and
push
mov
int3
bsf
mov
out
outsb
pop
mov
lcall
jns
fwait
xlat
insb
xchg
jbe
dec
lret
outsl
and
stos
xchg
xchg
in
push
and
ret
sbb
mov
outsb
push
mul
inc
les
xor
stos
std
ficoms
std
ret
test
movsb
or
call
loop
cltd
mov
imul
xor
aam
fmulp
pop
sub
es
pop
cmp
pop
mov
jmp
xor
add
xchg
lods
cmpl
xchg
bound
out
pusha
pop
scas
cltd
mov
fs
sbb
or
jb
mov
mov
jo
lods
lcall
pop
aad
aas
xor
leave
test
push
cmp
pop
jle
and
in
bound
cmp
inc
mov
cmp
xor
imul
pop
or
ret
fs
popa
outsb
dec
in
add
or
js
hlt
xor
rorb
imul
subl
mov
or
mov
sub
imul
inc
push
xchg
cmp
and
test
sbb
pop
in
add
lahf
cwtl
ja
imul
int3
aam
jne
sub
repnz
mov
xchg
subl
in
shr
sbb
mov
xor
and
loope
js
and
xor
test
sbbl
jno
popf
mov
scas
add
sbb
ret
add
and
cmp
inc
es
in
lret
mov
sub
insl
in
sub
jns
aam
aas
or
insl
dec
lret
out
icebp
test
xor
loopne
sbb
pushf
inc
sub
lock
in
push
sbb
testl
fwait
lock
pop
sbb
repz
aas
xor
adc
shl
addr16
mov
in
dec
dec
sti
and
test
imul
pop
adcl
add
in
enter
jge
push
pop
pop
in
cmp
std
lods
hlt
outsb
aam
fisubrs
sbbb
push
dec
insl
adc
inc
pop
jle
aad
push
pop
shll
xor
int
fisubrl
cmp
fs
jb
sbb
xor
and
es
and
test
and
inc
xchg
push
sahf
pop
xor
adc
ljmp
jae
es
sbb
loop
mov
fnstenv
fbstp
ljmp
mov
es
jmp
pop
cmp
popl
push
mov
repnz
repnz
jo
xchg
push
pushf
stc
shrb
mov
aam
test
push
sarl
pop
lods
and
inc
iret
imul
test
lock
cltd
in
xor
inc
mov
push
mov
ljmp
xchg
outsl
mov
adc
mov
add
dec
ret
sub
xchg
cmc
lahf
push
adc
lcall
popf
sub
adc
subb
xchg
push
mov
mov
mov
leave
imul
adc
test
js
shll
pop
cmpb
pop
andb
jecxz
mov
loope
sbb
dec
arpl
stos
rcll
arpl
or
leave
arpl
inc
repnz
xor
jae
sarb
push
jno
cltd
lods
jne
xchg
cmp
addr16
fmull
mov
push
movsl
pop
call
lock
imul
jnp
xchg
out
and
dec
lods
push
cs
and
mov
sbb
mov
or
inc
pop
mov
xchg
fs
in
addr16
mov
fbstp
mov
sbb
out
inc
std
mov
lock
cwtl
arpl
stc
xlat
pop
arpl
outsb
add
or
dec
push
pop
imul
jge
outsl
mov
inc
out
andl
add
lret
cmpsb
test
pop
jbe
add
mov
inc
fldt
xchg
leave
add
push
inc
mov
ja
jle
arpl
shll
add
cli
arpl
stc
dec
add
mov
or
add
das
jge
les
xorl
cmpsl
arpl
ret
dec
int3
cmp
adc
push
inc
lods
das
bound
cmp
shrl
out
cmpsb
inc
fwait
arpl
ret
arpl
mov
inc
inc
push
mov
loope
imul
or
inc
push
xchg
arpl
outsl
adc
sub
pusha
clc
arpl
xorb
xor
mov
xchg
cmp
cmp
arpl
sub
ljmp
pop
insl
cvtdq2ps
repnz
arpl
arpl
xchg
fmull
sub
in
xchg
and
dec
arpl
lock
sub
enter
mov
pusha
add
pop
imul
dec
mov
and
lcall
or
pop
daa
adc
arpl
mov
cmp
stos
jge
ret
jae
mov
mov
testb
movsl
adc
sti
sahf
iret
jmp
rol
out
mov
cld
es
push
jp
mov
mov
xchg
arpl
shrb
arpl
dec
scas
repz
dec
lahf
jns
scas
clc
pop
xchg
adc
outsl
bound
cmp
bound
or
aad
cs
mov
xor
outsb
and
mov
pop
data16
pop
cli
addr16
jecxz
xor
pop
xchg
add
bound
adc
pushf
xchg
jno
jne
adc
movsb
add
sub
imul
push
lds
xorl
inc
testb
jmp
add
mov
sub
inc
jg
pop
cmp
lods
mov
mov
aad
lret
xchg
in
arpl
mov
mov
rol
xchg
mov
ds
leave
pop
xlat
dec
cwtl
and
nop
lods
dec
inc
dec
and
stos
xor
fldenv
ret
loope
arpl
xchg
pop
das
push
jb
loop
ret
jge
mov
mov
cmpsb
sub
mov
je
sub
fucomip
in
bound
jle
and
mov
xor
inc
loopne
sub
jno
call
mov
lret
sub
test
stc
jbe
rcrl
les
mov
fsts
daa
ret
repz
inc
arpl
and
test
ret
loop
cltd
imul
ja
popa
arpl
je
sbbl
mov
imul
mov
arpl
shrb
stos
add
mov
arpl
and
pop
mulb
pop
stos
sub
lods
shlb
mov
mov
sbb
arpl
cmpsb
add
jecxz
mov
int3
arpl
mov
cmp
ja
fbld
pushf
xchg
xchg
lahf
out
pop
pop
dec
push
cmc
cmpsb
movb
fs
inc
arpl
push
rcl
lea
int
dec
stos
mov
addr16
push
push
out
jne
pop
insl
data16
arpl
es
xlat
imul
cmp
jle
pop
std
icebp
adc
movsb
add
xchg
jmp
testb
arpl
and
rcrl
pop
xor
and
push
arpl
les
nop
mov
stos
push
mov
sbb
sti
out
dec
punpckhdq
mov
loope
mov
imul
add
icebp
and
ret
outsl
pop
imul
out
andb
mov
int3
arpl
push
or
jmp
arpl
scas
xorb
push
test
cmc
js
adc
push
xchg
push
add
pop
arpl
repnz
xchg
insl
mov
dec
imul
outsb
jnp
sbbl
add
xor
and
xlat
aam
lahf
push
movsb
repz
imul
pop
cwtl
add
fs
inc
dec
inc
sbb
dec
in
sub
jl
mov
mov
pop
pop
pop
loopne
arpl
push
arpl
mov
arpl
push
mov
imul
ds
enter
mov
pop
sbb
repnz
or
arpl
push
stos
adcl
or
outsb
xchg
nop
mov
sahf
xor
arpl
loope
das
iret
and
mov
push
jo
in
arpl
enter
xchg
and
shll
pop
arpl
mov
mov
lods
insb
jmp
out
push
std
push
aam
gs
imul
aaa
and
ret
cmp
arpl
jae
pop
xchg
xchg
es
mov
arpl
dec
out
add
pop
jne
mov
xchg
rcrb
xorb
arpl
and
or
js
arpl
sbb
mov
stc
sub
add
mov
fistps
outsl
or
in
arpl
es
lret
arpl
mov
stc
add
push
sub
push
outsl
inc
push
fisubs
jbe
cli
cmpsl
jns
arpl
sbb
inc
sub
cli
rclb
lock
sti
jnp
arpl
or
sub
jbe
arpl
xchg
adc
jle
test
arpl
sub
jge
arpl
dec
imul
adc
xchg
lds
iret
lods
arpl
popa
or
ljmp
shlb
cmp
arpl
add
sbb
and
adc
mov
lret
jmp
arpl
mov
pop
arpl
cmpsl
enter
gs
arpl
push
jge
arpl
sbb
imul
aas
int
add
jg
adc
gs
cld
cmp
arpl
jge
fnstsw
aam
push
in
pop
addl
add
gs
push
imul
push
imul
fisttpll
jl
arpl
push
negl
and
addl
jno
movsb
or
adc
shlb
movd
dec
arpl
add
cmp
frstor
test
pop
gs
lock
imul
cmp
scas
arpl
leave
jns
add
lret
bound
adc
rcrl
daa
addl
data16
cmp
add
inc
push
mov
sbb
arpl
aas
xchg
push
out
jae
jmp
arpl
sbb
dec
das
inc
cmp
ret
out
fsts
inc
mov
inc
xchg
insl
dec
mov
lea
arpl
sbb
adc
inc
adc
shll
mov
mov
fiadds
popf
dec
pop
out
jl
lods
add
mov
fbstp
pop
add
arpl
rcll
jmp
mov
push
cmp
lret
inc
arpl
push
push
sub
bound
and
push
push
push
jns
jo
outsl
xchg
outsl
addr16
pop
cmp
xchg
inc
adc
outsl
add
dec
xchg
mov
dec
stos
mov
jbe
adcl
or
push
sub
loop
mov
outsl
and
inc
shll
ds
andl
addr16
sti
dec
inc
stc
inc
mov
mov
cmp
cmp
jnp
adc
xchg
int3
xchg
push
pop
stos
inc
add
xor
or
xchg
inc
jmp
jecxz
scas
js
es
test
and
mov
xchg
stos
stc
and
aam
or
paddw
xchg
jno
push
push
mov
sbb
sub
ret
js
test
sub
xor
or
lock
adc
pop
pop
add
stos
mov
gs
stc
imul
int
mov
arpl
mov
jge
add
icebp
aam
test
dec
inc
pop
lds
sub
jns
loop
addr16
lea
loop
add
adc
pop
fs
js
adc
and
push
mov
push
and
fdivr
mov
cli
lea
out
enter
icebp
daa
aam
dec
cltd
or
push
repnz
or
ret
lock
xchg
xor
pop
out
repnz
pop
jno
cmpsb
pop
aam
adc
out
add
out
mov
pop
dec
mov
inc
or
aam
sbb
jnp
outsl
fdivl
sub
inc
ds
sub
xor
lods
sbb
addl
xlat
pop
int
inc
pop
insb
and
in
adc
cs
jae
jge
inc
sti
xor
pop
outsl
addr16
clc
fistpll
addr16
pop
mov
int
push
jp
stc
sbb
adcb
enter
adc
lahf
cltd
sub
je
xlat
xchg
jb
add
dec
add
in
jp
lcall
add
and
data16
mov
pop
push
dec
lcall
pop
mov
lahf
in
ljmp
mov
mov
std
cmp
push
sbb
mov
das
nop
rcll
mov
inc
pop
jmp
or
add
call
push
mov
les
mov
ret
fdivr
int
test
xchg
sub
cmp
sbbl
mov
sbb
movsb
ja
ret
fbstp
in
orb
fimuls
outsb
insl
into
mov
cmp
mov
popf
push
insb
aam
xchg
inc
out
stc
ss
dec
stc
lods
ljmp
cltd
push
push
jno
sub
and
inc
push
mov
cmp
outsl
inc
xlat
jle
and
jge
pop
js
jmp
in
xchg
ret
cltd
in
push
dec
imul
test
mov
pop
push
scas
outsb
aam
mov
jp
fdivrl
mov
dec
cmc
fadds
xor
push
sahf
ficoms
mov
stos
adc
and
aam
pop
dec
push
ret
cmc
pop
dec
jge
outsl
fwait
movsb
or
xlat
loope
ficompl
bound
shl
pop
adc
cmp
stos
call
dec
test
dec
inc
sti
popa
ljmp
into
pop
sub
int
mov
insl
fisubl
outsb
out
lret
rclb
outsb
mov
ljmp
mov
out
pop
mov
xor
fcoml
clc
int3
nop
cmpsb
call
addr16
mov
test
scas
out
push
mov
in
sahf
or
mov
and
lock
jle
movsl
jne
pop
lods
and
jnp
out
xor
scas
ljmp
addb
sub
stc
movl
lret
xor
inc
cwtl
fdivl
jno
mov
xor
movb
mov
outsl
cmp
add
xchg
sub
mov
dec
add
in
test
test
jno
scas
repnz
lods
insl
popf
sub
cwtl
insl
xor
cmp
fwait
std
ja
jo
mov
pop
leave
ds
outsl
push
cmp
std
push
xchg
loope
mov
jg
sbb
out
out
cmc
inc
and
inc
cmpsb
push
test
add
mov
push
aad
int3
inc
inc
mov
inc
pop
inc
sarl
xlat
adc
mov
cltd
popa
jle
pop
sbb
lret
aam
and
pop
loop
aam
jle
andl
out
push
test
in
push
enter
imul
or
mov
add
out
cmpsl
and
inc
xor
dec
add
cmp
jecxz
int3
cmp
push
cmpsl
mov
xchg
cwtl
les
aam
mov
aam
les
popf
or
add
dec
and
and
sub
imul
jnp
in
shlb
sbb
scas
sti
fnstenv
add
aaa
xchg
xor
dec
xor
fiadds
xchg
cltd
xor
jae
adc
lcall
inc
negl
sbb
cmp
jo
ja
push
jns
pop
shlb
not
int
pop
cli
sbb
int3
cmc
js
dec
inc
push
insl
sbb
cmp
stos
add
xor
sub
cmpsb
dec
add
in
mov
inc
in
sub
insl
popf
cmp
fs
call
imul
adc
add
lret
or
sub
das
cmpsb
adc
mov
xchg
aad
mov
rorl
xlat
pop
cmp
int
shl
add
insl
dec
gs
aam
fmull
pop
sbb
nop
in
mov
mov
movsl
pusha
fisubl
lcall
add
loopne
sbb
frstor
outsb
push
in
jo
addb
pop
repnz
aam
enter
aam
outsl
enter
in
cmpsl
inc
fistpl
cwtl
and
jns
loopne
sti
loopne
enter
in
pop
xchg
inc
js
jae
lds
cmp
pop
rcrb
aam
imul
cmpl
shll
mov
popf
rcll
and
jb
in
pop
adc
xchg
nop
imull
inc
out
pop
xorl
out
xchg
xchg
shr
leave
movsl
inc
pop
and
dec
inc
imul
mov
push
sub
ja
test
in
and
inc
push
fidivrl
fildl
loop
out
jmp
add
cltd
adc
aad
aad
mov
xor
dec
lret
inc
aam
ss
in
dec
add
sub
or
lcall
in
xchg
cltd
fstps
mov
in
arpl
pop
jge
fsts
ljmp
bound
adc
push
cmp
xor
out
imul
cmp
sbb
outsb
jl
in
pop
orl
xor
imull
aam
jns
lds
movsb
xlat
inc
repnz
sub
ljmp
xor
test
sub
stos
xor
xchg
xchg
dec
sub
push
loop
lea
sub
sbb
andb
out
push
in
pop
fmuls
sti
jo
test
push
inc
adc
xchg
mov
ljmp
mov
jo
xchg
cmp
mov
divb
sub
imul
and
sub
jo
mov
add
imul
pop
test
pop
dec
mov
mov
and
xor
das
sbb
dec
out
ds
sub
mov
ja
test
int3
pop
jne
aas
mov
loop
mov
scas
insl
sub
loop
int3
xor
in
pop
mov
jns
mov
fmuls
adc
ret
lea
jmp
mov
outsl
or
fdivs
or
stos
xlat
inc
fs
and
xchg
cmp
cwtl
jle
mov
arpl
and
arpl
fld1
cltd
push
mov
cmp
outsl
sub
out
jl
sub
arpl
xchg
xor
cmp
out
xchg
test
cwtl
inc
arpl
push
jge
xchg
iret
inc
add
cli
inc
push
pop
add
arpl
shll
jge
test
sbb
jbe
pop
cwtl
out
dec
dec
aas
test
sarl
add
leave
mov
sbbl
mov
icebp
mov
aad
movsl
leave
lret
dec
sub
bound
aam
fs
mov
push
push
add
xchg
imulb
arpl
xchg
bound
xchg
lods
dec
add
popa
add
lahf
sub
push
push
push
inc
cltd
mov
arpl
rorl
add
mov
loop
jnp
cmp
pop
fistpl
arpl
jle
mov
fmuls
data16
cmp
pop
arpl
imul
outsl
sub
adc
ret
dec
cmp
andl
mov
leave
sbb
incb
jmp
add
mov
cmp
mov
xchg
lea
jg
packsswb
xor
daa
sti
popa
push
mov
insl
out
pushf
das
outsl
or
testb
lcall
repnz
add
arpl
jo
jmp
bound
push
push
leave
sub
in
mov
or
scas
and
inc
popa
jecxz
arpl
adc
ret
aad
arpl
xchg
inc
out
dec
arpl
mov
rcr
pop
lock
loopne
cmp
pop
mov
mov
and
aas
not
push
inc
pop
movsl
add
sbb
jecxz
adc
jg
arpl
cli
add
leave
or
call
daa
inc
adc
xlat
ss
imul
pop
jmp
cmp
inc
xor
or
push
les
decb
std
sbb
xor
dec
insb
inc
sbbb
ljmp
rolb
or
push
mov
faddl
sahf
sub
scas
sbb
xor
scas
je
orl
pop
mov
cltd
adc
es
sub
stc
cmp
cld
cmp
xchg
das
and
pop
jmp
jo
ds
pop
shr
sahf
mov
arpl
or
push
arpl
or
stos
xor
jle
sub
ficoms
xor
push
lcall
fisttpll
in
rorl
and
push
or
cmp
push
andl
push
arpl
in
lock
xor
aas
mov
push
xchg
fisubl
mov
mov
xor
pop
arpl
je
push
lods
sbb
jb,pt
push
inc
daa
or
arpl
dec
ljmp
nop
lret
sbb
add
add
xor
lahf
xchg
mov
sbb
int3
lret
dec
outsl
scas
cld
add
test
inc
add
imul
push
mov
pop
jbe
cmp
lahf
iret
loope
mov
mov
outsb
pop
cltd
or
arpl
jno
push
mov
adc
arpl
lahf
xor
push
xor
sti
pop
jg
jle
outsb
jbe
test
mov
mov
jae
xor
mov
sub
arpl
pushf
mov
arpl
pop
aaa
cmp
mov
pop
dec
and
arpl
xchg
add
packsswb
popf
xchg
jae
xchg
stos
pusha
xchg
dec
cmp
arpl
les
jnp
jbe
aas
push
inc
mov
js
leave
xchg
rcrl
add
push
sbb
adc
cmc
andl
or
dec
loopne
and
mul
mov
xchg
dec
sub
scas
roll
nop
jno
insl
movsb
xorb
mov
shrb
pop
outsb
inc
movsl
push
imul
push
lcall
cmp
in
loope
fimull
pop
testb
mov
rcll
cmpsb
out
in
push
and
incl
mov
mov
in
sbb
cmp
or
mov
lock
mov
mov
pop
clc
xor
enter
adc
and
test
popf
push
in
lea
aam
sub
push
ja
jmp
jmp
loop
jnp
pop
out
out
jecxz
lea
jb
jbe
or
ja,pn
rorl
add
pop
sub
pusha
outsl
out
jb
sbb
ret
push
and
fcompl
lock
mov
add
imul
pop
aam
imul
mov
sti
inc
aad
loopne
mov
pop
arpl
loopne
and
fsubs
arpl
in
js
mov
cmp
arpl
imul
outsl
subb
pop
push
arpl
jbe
adc
popa
mulb
xchg
call
and
mov
imul
out
nop
out
arpl
cmpsl
addr16
add
clc
imul
sbb
arpl
dec
fstpl
fs
aam
adc
bound
in
add
mov
out
hlt
mov
sbb
fildll
lods
fsubr
arpl
sbbl
sub
gs
test
popa
and
adc
mov
jp
mov
add
add
mov
push
pop
arpl
xchg
les
fsts
sbb
push
cmp
ja
lock
and
and
xlat
fsubl
inc
int
xor
aaa
arpl
pop
fsts
mov
pop
loop
mov
inc
arpl
mov
cld
inc
cmp
arpl
jle
adc
fwait
xchg
and
jl
ret
push
ljmp
in
sub
lcall
imul
inc
cmpsb
mul
push
lods
ret
jnp
cmp
jo
cmp
movsb
adc
sub
cmpsb
arpl
jnp
push
jge
xchg
arpl
js
and
or
arpl
jne
xor
in
mov
dec
lret
adc
ljmp
adc
repz
lcall
das
pop
mov
jmp
out
pushf
outsl
and
int
test
into
and
or
push
sub
inc
andl
cwtl
mov
cmpsb
mov
arpl
lock
ret
mov
out
pop
fcompl
or
mov
stc
std
repz
ja
jecxz
imul
pop
nop
out
cmp
test
movsl
push
xor
sahf
jo
repz
cmp
xchg
in
repz
aaa
inc
testl
aad
and
or
mov
in
xchg
dec
out
xchg
jmp
cmp
adc
loop
or
mov
lret
arpl
dec
out
ljmp
or
cmp
add
add
es
mov
sub
inc
test
jle
comiss
xchg
push
inc
repz
or
ss
pop
cld
cmpb
mov
movsb
enter
xchg
fs
arpl
shrl
sbb
adc
cmpsb
rolb
dec
cs
xchg
rorl
add
jecxz
sub
mov
xor
adc
sbb
insl
fadds
pop
dec
jb
pop
add
les
jbe
leave
adc
jecxz
movl
cmp
in
jmp
cmpsb
test
ljmp
dec
pop
std
xor
repz
mov
arpl
xorb
repnz
scas
int3
loope
inc
outsl
cmpsb
ret
test
insl
adc
fstpt
jmp
shrb
out
and
std
mov
lret
mov
cmovno
xchg
cmp
inc
das
or
xchg
xchg
rclb
insl
jle
xchg
mov
hlt
jnp
rclb
popa
jl
dec
jmp
cmp
inc
pop
push
out
int
outsl
xor
adc
std
ret
out
hlt
mov
das
and
shl
clc
in
lcall
dec
sub
bound
adc
stos
arpl
mov
movsl
mov
arpl
push
xchg
aaa
xchg
ss
clc
push
mov
arpl
push
pushf
arpl
je
dec
cmp
arpl
pop
jmp
arpl
scas
in
push
mov
dec
mov
push
arpl
loope
jno
cmp
fisttpl
jge
lods
int3
sub
outsb
arpl
fdivr
bound
sbb
cmp
out
or
bound
or
xchg
and
adc
fbld
ss
lahf
push
loopne
mov
jne
xor
cmpsb
jmp
arpl
rep
popa
in
push
sti
xchg
in
mov
imul
xchg
mov
push
imul
ret
sbb
into
or
loope
popa
iret
ds
jae
xchg
gs
inc
arpl
pushf
push
mov
pop
sbb
and
shrl
mov
add
and
xor
mov
int
test
mov
and
mov
aaa
pop
stos
xchg
lods
loop
mov
sub
push
lds
mov
jl
orl
jecxz
and
bound
lods
cmc
push
push
and
lcall
cmp
push
and
leave
push
lret
cwtl
sub
inc
pop
add
dec
leave
out
xor
xchg
mov
in
cmpb
jg
lock
cli
or
ja
mov
and
push
in
cmp
ljmp
in
lret
gs
arpl
test
lret
lods
push
mov
fsub
jmp
arpl
out
push
cmc
sahf
push
test
sub
arpl
or
jmp
jae
aam
inc
xchg
mov
loop,pt
cltd
jp
xor
adc
dec
add
data16
add
push
arpl
mov
push
fcompl
loope
inc
dec
out
mov
or
mov
ret
adc
push
jecxz
out
cltd
iret
or
sub
sbb
scas
inc
insl
fists
xor
and
push
arpl
jnp
push
orb
xchg
xchg
xchg
in
arpl
fs
arpl
sbb
fwait
arpl
adc
arpl
xchg
pop
jno
stos
mov
ret
js
les
jbe
adc
sub
jno
shll
outsl
sti
int3
jge
in
jo
ret
test
inc
xchg
inc
arpl
cmp
fsubl
sbb
mov
xor
add
scas
xchg
pop
iretw
movsb
bound
lcall
stos
push
inc
push
adc
out
mov
outsl
jb
scas
cmp
push
add
test
xorl
outsl
gs
lcall
lock
jne
gs
pop
xor
mov
pop
dec
push
arpl
lcall
pop
mov
jne
push
movsl
mov
arpl
sub
xor
pop
cmp
lahf
negl
push
roll
stc
lret
mov
mov
into
jb
call
inc
mov
les
cs
add
mov
popf
pop
xor
shlb
addr16
gs
xchg
or
insl
out
imul
fistl
push
add
inc
cmp
nop
jo
xchg
movsl
mov
aas
popa
int
mov
pop
mov
gs
pop
arpl
decl
ja
out
mov
daa
sbb
fcompl
and
jecxz
sub
mov
loopne
dec
mov
pop
xchg
and
jb
jg
or
out
mov
mov
dec
ret
and
sbb
jne
cld
inc
fadds
push
push
or
or
pop
call
ja
jl
adc
add
cmp
ss
lods
arpl
inc
push
add
fidivl
cltd
lds
mov
xor
sbb
lock
mov
movsb
aad
push
sbb
xor
nop
pop
and
mov
inc
dec
jae
cli
dec
subb
mov
inc
jl
mov
xor
jo
fstps
and
repz
out
arpl
mov
mov
sbb
jbe
gs
outsb
xchg
xchg
inc
mov
daa
xchg
data16
mov
aas
jmp
mov
sub
arpl
loop
out
outsb
xchg
jl,pn
xchg
packssdw
aas
stc
testl
inc
xchg
insb
scas
arpl
mov
dec
sbb
ret
inc
mov
lods
sar
arpl
cmp
lods
jle
pop
arpl
mov
inc
mov
daa
fisubrl
cltd
jmp
clc
push
int
xchg
in
outsl
sbb
push
lock
int
xchg
test
jmp
push
aam
mov
xor
pop
int
test
addl
test
adc
mov
xchg
sub
add
fcoml
xor
jle
jecxz
int
xor
loop
mov
jne
nop
sbb
sub
and
out
dec
aam
xchg
xchg
or
inc
sbb
test
lret
mov
dec
test
sbb
cmp
sbb
jno
and
push
xor
mov
cmp
inc
lock
jae
loope
mov
arpl
mov
loope
push
icebp
sbb
cmpsl
scas
stc
popa
mov
movsl
cwtl
mov
jo
mov
movsb
in
sub
sbb
aam
jg
je
push
ret
dec
movsl
xchg
jl
xor
jne
test
dec
push
xlat
inc
aam
adc
cs
lods
sub
mov
or
test
inc
dec
sbb
insl
jns
inc
jno
adc
in
in
mov
dec
mov
dec
lock
aam
in
adc
sub
cmc
stc
fldt
test
icebp
or
shl
ljmp
jle
mov
orb
sahf
or
jl
and
add
jae
outsl
out
pushf
into
movsb
add
outsl
inc
push
mov
addr16
in
jecxz
adc
in
fwait
dec
mov
imul
out
adc
or
addr16
in
pop
mov
cmpb
push
push
test
in
insl
jp
sbb
mov
inc
ret
ss
in
loopne
cvtpi2ps
push
loopne
loop
adc
jb
in
inc
pushf
and
aam
cmp
out
mov
ss
inc
out
xor
and
je
nop
test
sub
icebp
daa
sub
out
repz
addr16
xor
int
cmp
or
push
sbb
push
out
xor
or
fwait
pop
mov
push
jnp
cli
inc
mov
loop
sarl
fldt
insl
add
scas
addr16
test
lods
mov
pop
and
and
aas
mov
clc
add
imul
in
jl
mov
push
xor
mov
ret
mov
add
xchg
test
mov
push
push
cltd
mov
inc
pop
jne
adc
lods
dec
scas
loop
sbb
pop
push
cmp
xor
aam
hlt
sbb
adc
dec
loopne
bound
mov
add
inc
outsl
mul
lahf
ja
mov
dec
sbbb
inc
in
mov
push
push
sbb
ficomps
xlat
in
sbb
sub
lods
loop
out
icebp
adc
inc
dec
jge
fs
lcall
dec
stos
pop
test
sub
out
and
push
or
in
insb
mov
push
sbb
in
lcall
neg
adc
mov
in
push
pop
std
out
mov
orl
les
aam
bound
imul
sbb
pop
mov
mov
push
add
rolb
shr
push
icebp
in
rorb
pop
aad
ret
int
inc
mov
push
cmp
jge
ret
cmpsl
mov
aam
push
jae
push
inc
pop
js
push
mov
cmp
icebp
add
mov
mov
mov
sbb
into
cli
xor
and
cmp
lods
outsb
lock
xchg
sub
xchg
je
aam
mov
dec
in
and
outsb
nop
mov
sub
mov
jnp
loop
pop
rol
mov
arpl
jge
push
and
or
enter
les
add
push
adc
arpl
mov
hlt
sahf
ds
pop
sbb
adc
cmp
sti
pusha
add
jle,pn
aam
adc
test
iret
mov
inc
fs
or
sbb
push
mov
dec
mov
jmp
insb
fiadds
lahf
jmp
mov
pusha
push
jno
in
cwtl
arpl
cmc
outsb
nop
adc
mov
aam
ds
inc
out
pop
cwtl
adc
arpl
pop
push
ja
aam
arpl
bound
outsl
cmp
shrb
leave
sahf
imul
xor
add
mov
insl
inc
or
dec
or
mov
jge
iret
arpl
dec
in
arpl
pop
or
loope
xchg
arpl
push
ret
subl
pop
pop
fs
mov
cmpsl
pop
mov
andb
sub
scas
sbb
ret
jb
and
arpl
call
inc
lahf
jp
xchg
out
cmovnp
xchg
mov
inc
and
jecxz
dec
pop
mov
fnstenv
out
rclb
cs
cmp
es
xchg
inc
fwait
out
movsl
arpl
pop
and
int3
jae
dec
push
mov
cmovb
xchg
mov
mov
xor
in
pop
mov
inc
sub
xchg
int
mov
jecxz
icebp
arpl
and
push
arpl
jmp
pop
test
loope
daa
sub
addr16
mov
pop
rorl
lods
in
into
or
xor
push
outsb
int
nop
and
call
outsl
ljmp
mov
xor
jmp
or
and
ss
jnp
xlat
push
cmc
pop
xor
xor
mov
mov
add
in
or
inc
sarl
mov
in
dec
push
paddusb
daa
jecxz
arpl
push
jle
iret
jo
popf
insb
cmp
jne
dec
jp
sbb
adcb
arpl
dec
iret
repz
lods
mov
sub
or
cwtl
or
lahf
cmp
inc
pop
push
lock
mov
ja
or
aam
nop
add
xchg
inc
cld
push
arpl
or
bound
push
arpl
lds
and
je
adc
pop
add
clc
sub
jmp
or
fwait
sub
imul
pop
arpl
jl
int3
fisubs
sbb
or
fwait
push
jecxz
xchg
xor
xchg
sti
loope
lret
lahf
mov
test
arpl
jl
jno
mov
arpl
imul
and
arpl
subb
aaa
cmpsb
cmc
add
outsb
lret
xchg
adc
cli
and
sbb
mov
mov
notl
outsb
inc
arpl
scas
pop
push
bound
cmpsl
repz
hlt
jo
sbb
push
jg
bound
in
inc
push
mov
dec
jnp
mov
fimuls
loope
adc
jno
mov
outsl
aad
bound
xchg
add
push
fldenv
popf
adc
arpl
jle
insl
or
jecxz
sub
lret
push
sahf
fisubrs
jo
xorb
pop
mov
push
loopne
sahf
push
inc
notl
popa
and
cli
stos
call
jne
fcoms
jno
add
pop
cld
pushf
pop
mov
out
dec
add
inc
ja
ljmp
mulb
test
or
fdivp
cld
lret
pop
arpl
insb
push
ja
cli
cmp
js
xor
add
or
hlt
insl
mov
pop
call
fstpt
mov
sbb
pop
cli
fwait
jg
shrb
sbb
xchg
or
mov
dec
cmp
shll
add
sbbl
mov
add
ljmp
repnz
das
push
cmpsl
ds
vpunpckhwd
daa
xchg
scas
sahf
pushf
pusha
add
and
loope
ret
mov
arpl
shlb
lds
popa
push
pop
sahf
push
inc
stos
xor
mov
out
outsl
bound
xor
sahf
data16
push
stos
test
xchg
push
adcl
into
jo
mov
inc
arpl
xor
andb
mov
sbb
lret
adc
push
stc
rcrl
scas
or
lret
mov
leave
mov
adc
sub
mov
pop
fwait
scas
lret
mov
lock
in
mov
adc
xor
lds
or
cmp
inc
mov
arpl
jecxz
or
dec
je
leave
xlat
cmp
xchg
ss
test
arpl
push
ds
mov
test
nop
jecxz
push
sbb
outsb
mov
cli
mov
out
imul
xlat
arpl
mov
jns
daa
pop
xor
insl
adc
mov
dec
jbe
dec
inc
cmp
imul
test
pop
xor
sub
add
sub
lret
ja
push
in
inc
or
cltd
xlat
cs
sub
pop
sbb
roll
dec
test
data16
fsubrs
mov
enter
inc
cmp
and
push
test
add
bound
jle
inc
push
stc
sbb
stos
pop
add
fstpl
ret
test
pop
movsb
mov
lock
loopne
ja
jne
inc
cmp
jge
js
dec
jp
jo
push
fisttpll
adc
add
scas
icebp
mov
inc
adc
mov
test
test
dec
imul
or
idivl
pop
mov
push
mov
jecxz
mov
arpl
lea
aas
lea
jmp
mov
mov
sub
push
jl
sub
xor
lods
mov
or
mov
ret
ret
add
jg
popa
imul
pop
arpl
xchg
pop
sbb
pop
arpl
mov
xchg
push
mov
call
push
sub
or
arpl
es
sbb
lret
cmpsl
shlb
jns
mov
mov
add
arpl
inc
sub
pop
lahf
mov
xchg
imul
cmp
pop
les
bound
sbb
mov
push
and
lret
or
imul
les
jae
inc
arpl
xchg
mov
arpl
in
lock
arpl
push
icebp
aam
push
aad
push
mov
pop
mov
and
inc
int
in
sub
mov
stos
int3
out
cs
popa
dec
mov
idivb
pop
inc
stc
loope
mov
lcall
dec
push
movsl
loopne
cmovo
xor
mov
outsl
bound
insl
pushf
pop
ja
mov
mov
popa
or
mov
and
xor
clc
test
js
jle
mov
adc
test
stos
mov
arpl
inc
mov
mov
add
stc
cmp
mov
mov
lcall
aas
or
js
in
mov
lods
push
rorb
mov
push
inc
inc
sub
xor
je
push
ret
pop
mov
sbb
push
xchg
xchg
shr
arpl
lcall
arpl
stc
cwtl
je
mov
fistps
mov
arpl
mov
sarb
fdivs
xchg
push
ret
arpl
add
cmpsb
push
pusha
js
arpl
or
mov
fs
xor
jno
add
bound
scas
arpl
mov
ficomps
mov
and
ficoml
lock
adc
arpl
stc
ret
cmp
arpl
pop
into
jnp
je
xchg
sbb
sbb
arpl
and
arpl
jp
jmp
cltd
dec
in
das
orl
jp
les
push
outsb
push
lret
shll
and
inc
push
push
sub
sub
in
jno
cmpsl
push
movsl
jns
jp
inc
addr16
mov
mov
cmp
loopne
sub
push
arpl
les
ljmp
add
mov
adc
mov
in
inc
xchg
arpl
movsl
xor
inc
arpl
fdivr
pop
add
popa
fnstcw
sbb
adc
nop
lret
arpl
mov
pop
ret
in
jae
arpl
je
cmp
push
jg
inc
arpl
xor
pop
jae
imul
push
pop
in
jne
jne
sub
sub
mov
bound
roll
fldl
sbb
sbb
imul
dec
adc
or
adc
mov
ret
loopne
pop
imul
adc
dec
push
arpl
pop
push
lret
imul
test
mov
mov
mov
ret
mov
loope
sbb
and
push
stos
xor
rcr
outsl
cmp
arpl
sarb
xchg
mov
mov
outsb
pop
dec
cmp
imul
movsw
push
push
repnz
sbb
arpl
je
test
arpl
lods
and
arpl
mov
jmp
das
sarb
arpl
xorl
and
dec
xor
imul
cmc
out
lea
mov
jg
int3
pop
pusha
xchg
dec
shll
jge
cld
out
cmp
lods
mov
imul
sub
xor
paddsb
adc
and
sub
or
xchg
and
lds
push
ja
fisubrl
pop
inc
movsl
lods
test
shlb
scas
pop
xchg
sub
lods
sbb
stos
push
and
insb
mov
mov
movsb
mov
in
pop
sbb
loopne
or
push
xor
scas
jo
fimull
xor
outsl
mov
daa
insl
lcall
mov
in
sbb
popa
bound
add
ljmp
dec
cmp
dec
mov
aam
cs
nop
mov
das
in
dec
mov
stos
aas
dec
cltd
mov
test
add
push
aad
pop
out
in
shlb
sbb
cmpsb
arpl
in
fs
icebp
cmp
lods
dec
pop
inc
aaa
icebp
mov
icebp
cwtl
mov
push
rolb
jno
sbb
dec
rcll
test
lock
mov
add
add
and
and
jge
jge
ljmp
data16
add
cwtl
fs
add
arpl
or
xor
cmp
scas
iret
xchg
adc
pop
int3
in
mov
and
icebp
testb
jecxz
xor
push
sbb
or
lret
xchg
fwait
std
xor
loop
or
mov
sub
or
test
lcall
dec
sbb
jbe
andb
sub
dec
fnsave
push
mov
scas
dec
movsl
sarl
fiaddl
in
jge
mov
shl
mov
imul
dec
push
loop
cwtl
and
iret
decl
add
or
out
xor
repz
inc
andb
sub
adc
notl
in
jns
mov
shll
ja
ljmp
adc
push
inc
mov
insl
xchg
fiaddl
mov
inc
dec
rcrb
in
rol
add
cwtl
or
in
pusha
dec
cmp
mov
xor
ljmp
data16
in
sbb
xor
repz
pop
mov
int3
test
xchg
inc
outsl
dec
jge
aas
lock
pxor
mov
data16
popf
ss
and
clc
push
out
push
inc
movsb
gs
test
jbe
call
add
ja
test
imul
ja
mov
xchg
jmp
xchg
cmpsb
test
mov
fwait
jb
mov
pop
sbbl
or
dec
mov
stos
pop
xchg
aam
imul
movsb
test
lock
ss
xor
icebp
sbb
outsb
pop
in
pop
cltd
xor
xchg
stos
imul
cli
fsubs
rcl
int
loope
xor
mov
mov
add
or
push
or
mov
xorb
xchg
sbb
jmp
jnp
bound
fmuls
arpl
mov
dec
ret
jl
push
arpl
xchg
and
arpl
lods
stos
and
push
arpl
fcmovnu
in
add
lret
imul
adc
mov
xchg
pop
mov
jle
xchg
insb
inc
mov
mov
dec
push
xor
xchg
sar
push
repz
xchg
shrb
sti
nop
or
lock
fs
push
scas
into
add
jnp
lods
stc
and
ret
dec
push
arpl
sar
dec
add
or
push
out
adc
cbtw
and
mov
push
fstl
cmpsl
bound
mov
es
pop
repnz
mov
and
cs
mov
popw
push
bound
mov
push
pop
rorb
mov
push
arpl
dec
or
fsubl
dec
popf
dec
rorl
imul
xor
lret
les
jo
imul
and
sti
addr16
jno
mov
pop
jmp
xor
push
aas
and
add
outsb
loope
xor
inc
pop
xor
lret
imul
testl
lcall
arpl
js
and
inc
bound
push
xchg
mov
sbbl
aam
sub
shr
jg
imul
les
push
fs
adc
and
int3
pop
out
or
ret
dec
arpl
mov
mov
adc
xor
sub
and
imul
sbb
jg
shll
add
and
loop
sbb
push
sub
mov
push
arpl
in
adcl
jne
dec
jl
fistl
sub
push
ret
inc
push
inc
jns
call
nop
es
int3
outsb
in
dec
arpl
inc
add
cmp
js
fstpl
fldt
jg
sti
outsb
pop
add
je
imul
stos
ja
mov
add
pop
movsb
adc
sbb
arpl
ret
jb
cmp
lods
push
sub
subl
test
fnstsw
scas
pop
in
cmpsb
imul
xor
aas
stc
shl
xchg
jns
addr16
inc
movsb
jecxz
push
xor
inc
loop
pop
push
xlat
add
negb
fiaddl
aad
stc
push
jnp
sbb
pop
jnp
xchg
arpl
orb
arpl
cmp
in
mov
cmp
pop
arpl
aaa
roll
inc
adc
imul
arpl
loope
std
arpl
xchg
push
fs
inc
xchg
add
ret
push
xor
mov
lret
mov
mov
push
adc
iret
mov
arpl
je
and
stos
das
add
lea
jns
adc
iret
in
sub
ljmp
es
mov
inc
mov
fldenv
daa
nop
lods
shll
cmp
adc
ret
push
sub
mov
xchg
adc
lret
ret
in
mov
icebp
outsl
movsb
out
int3
jecxz,pn
cmc
icebp
pushl
jmp
cmp
xchg
dec
mov
inc
in
lcall
das
adc
leave
pop
stc
mov
ja
jns
sub
and
or
pop
jno
shll
jmp
fidivrs
jno
xchg
in
inc
and
push
add
aaa
pop
into
insb
xor
stos
shl
sub
aam
mov
xor
adc
and
rcrl
in
std
pop
movl
daa
and
jo
push
xchg
insl
or
sbb
fsubr
leave
repnz
movsb
cmp
lea
imul
loop
repz
sbb
and
hlt
nop
aam
or
test
leave
sahf
sbb
xchg
xor
int
cmp
mov
daa
ljmp
xchg
inc
inc
icebp
bound
xor
outsb
jns
ja
popa
bound
cmp
inc
xor
test
test
jbe
jmp
lock
jmp
push
in
cmp
fnstcw
mov
repz
xor
or
imul
aam
inc
pop
iret
xchg
jbe
mov
out
add
shlb
mov
bound
mov
pop
cmp
sub
loop
lods
and
push
in
neg
test
xchg
mov
xor
mov
jae
lcall
jns
push
add
sbb
push
lahf
daa
hlt
aam
push
or
dec
sub
jp
movsl
mov
mov
mov
add
dec
addr16
adcl
add
pop
das
mov
or
data16
pop
mov
pushf
popf
cli
outsl
sbb
test
mov
scas
insl
mov
jno
aam
pop
nop
ljmp
rorb
mov
lcall
jo
mov
pusha
outsb
cmp
fldcw
mov
ret
mov
lret
lahf
pop
enter
les
adc
mov
jbe
jle
push
inc
in
int
pop
sbb
popa
mull
out
xor
pop
lods
sub
in
dec
nop
jg
ljmp
mul
mov
adc
in
xchg
scas
inc
imul
clc
test
add
loop
jb
jo
jle
adc
fidivl
sub
mov
adc
outsb
push
jl
cmp
jns
sbb
jle
das
test
gs
inc
into
lret
test
mov
inc
fbstp
push
sbbb
in
out
dec
lock
xchg
mov
push
lahf
arpl
fiaddl
fsts
push
dec
cmpsl
push
inc
in
mov
out
test
in
inc
idivl
push
sub
aas
dec
outsb
in
or
and
repz
xorb
jo
cmp
jae
xchg
in
test
aam
mov
dec
lock
inc
sbb
rcl
mov
or
aad
push
fisttpll
sbb
aam
gs
out
movsl
arpl
sbb
xchg
pop
mov
sbbl
mov
adc
sub
push
mov
iret
in
pusha
sub
mov
mov
pusha
cmpsl
jno
sub
in
sub
fisubrl
imul
in
orb
mov
icebp
mov
xchg
sub
sub
dec
movsl
jae
push
stc
dec
cmp
ljmp
stc
addr16
aam
lods
dec
daa
fsubrl
dec
fidivrl
stc
push
mov
mov
rclb
aad
or
mov
andb
outsl
imul
fisttpl
lock
inc
repz
scas
xchg
mov
add
pop
cwtl
mov
xor
in
test
adc
pop
or
out
sub
sbb
int3
clc
or
sbb
cmpb
iret
pop
xor
xchg
sbb
xchg
insl
gs
lods
jb
pop
jg
test
pop
cmp
sbbb
mov
sbb
adc
cli
and
inc
push
push
pop
mov
pop
mov
inc
popf
mov
test
xor
xor
adcb
repz
xor
test
pop
jnp
cli
stos
enter
cmc
fstps
insl
inc
iret
jecxz
xchg
out
stos
test
push
lods
mov
loop
push
xchg
jmp
pop
call
fstl
jns
dec
test
or
addr16
stos
xchg
push
sbb
mov
add
ficomps
push
pop
xor
lods
sub
insl
out
inc
sub
in
dec
sub
inc
dec
in
fldcw
cltd
inc
pop
mul
mov
mov
in
pop
popl
xor
push
mov
js
out
sbbb
pop
insl
loope
mov
aam
add
fadds
into
sub
into
test
aam
mov
mov
xchg
jo
in
lret
cmpsl
dec
outsl
jb
ja
mov
lcall
dec
ljmp
fiaddl
mov
jecxz
adc
mov
aam
daa
movq
jnp
mov
mov
add
push
adc
ja
fucomp
dec
mov
imul
in
push
or
jo
xchg
in
pop
adc
idivb
pop
ret
sbb
sub
jmp
or
jnp
cmpsl
in
repnz
or
jo
aam
stos
jns
inc
dec
pushf
daa
pop
loope
addr16
bound
cli
mov
adc
scas
fisttpll
in
xlat
dec
xor
repnz
add
movsl
xor
in
mov
fadd
sbb
insl
add
mov
or
sahf
jno
xchg
jl
mov
test
faddl
adc
xchg
pop
data16
lock
mov
add
mov
sub
loopne
jg
fs
add
push
or
dec
or
lcall
add
adc
mov
xor
mov
mov
cs
call
fsubr
jg
ljmp
repnz
int
sarb
loopne
mov
push
sub
xor
cwtl
add
push
add
scas
fwait
sbb
test
and
and
cmp
fnstenv
push
in
jl
ret
jg
insl
scas
sub
adc
sbb
leave
sbb
fnstcw
push
sahf
out
inc
inc
push
call
xor
aam
jae
lret
mov
or
inc
mov
ds
orb
sbbb
int
pop
or
xlat
push
loop
dec
insl
add
xor
fisttpl
std
in
jle
pop
push
sbb
cwtl
mov
sti
stc
mov
das
jnp
jns
jmp
ljmp
and
push
xlat
mov
cmpsb
sub
ja
mov
jo
add
popf
pop
and
shrl
lcall
and
fdivr
adc
in
push
jle
jnp
mov
adcl
imul
in
add
mov
mov
pushf
cs
dec
imul
aaa
leave
jg
sbb
xchg
sub
jle
loopne
jg
insl
scas
and
and
pop
xrelease
pop
les
mov
aam
test
push
ret
lock
mov
jno
push
cmp
adc
aam
fs
repnz
iret
pop
add
leave
or
cltd
push
outsb
sbbl
mov
daa
sub
cmp
push
arpl
pushf
push
test
arpl
add
pop
lret
fs
jae
mov
adc
dec
inc
pop
sub
xor
xor
arpl
or
arpl
xor
xchg
jmp
in
fists
movsb
sub
dec
arpl
mov
arpl
push
mov
popa
test
testl
scas
arpl
outsl
mov
jbe
repnz
inc
mov
ss
pushf
fwait
mov
fists
lock
xor
and
xchg
xor
and
cmpsl
arpl
sub
popf
fstps
push
xchg
jno
pop
xor
push
jmp
mov
xchg
add
sub
add
out
test
ljmp
test
daa
lret
inc
aas
imul
inc
xor
lock
lods
arpl
jno
jle
popf
arpl
in
mov
divb
pop
and
in
and
push
add
mov
pop
push
nop
js
inc
xor
push
adc
outsl
or
sub
push
in
push
bnd
jno
insb
repnz
mov
mov
sbb
cmpsb
adc
jno
pop
movsl
out
add
ljmp
arpl
adc
out
xchg
mov
jbe
sub
bound
adc
arpl
xchg
mov
push
mov
inc
push
into
sub
xor
daa
fisttpl
lret
dec
dec
imul
add
arpl
daa
arpl
inc
shll
scas
cltd
mov
push
es
nop
jl
push
bound
add
add
mov
mov
dec
dec
loop
pop
arpl
pushl
sbb
and
test
in
xor
push
arpl
mov
jno
cmp
inc
adc
sub
push
mov
xchg
jecxz
inc
pop
insb
xor
mov
mov
je
inc
outsl
jmp
ja
addr16
jo
pop
call
push
out
cmc
rcrb
je
movsl
arpl
fcoml
out
repnz
cltd
xor
jge
arpl
arpl
add
in
sahf
leave
pop
arpl
into
inc
in
cltd
daa
push
inc
adc
cmp
push
mov
lcall
dec
jl
into
repnz
jb
mov
cmc
dec
jl
sbb
insb
jmp
xchg
adc
addr16
andb
adc
xor
jo
jge
push
sub
aad
adc
arpl
and
aam
xchg
movsl
arpl
ljmp
adc
mov
xchg
add
push
adc
adc
sub
xchg
xor
dec
pop
imul
jp
insl
add
arpl
pop
into
and
xchg
je
shr
pusha
push
adc
add
dec
jl
xchg
fwait
pop
jno
pop
outsl
jecxz
push
xchg
dec
cmp
sub
pop
jp
cmp
xchg
xor
and
cmp
lock
movsl
cmp
imul
lds
sub
iret
and
das
push
inc
in
or
xchg
arpl
dec
loopne
nop
sahf
push
arpl
inc
xchg
shll
cwtl
cmp
pop
scas
xchg
dec
inc
add
lods
xchg
mov
mov
arpl
xor
push
sbbl
imul
mov
shlb
fmull
arpl
jmp
ds
fildll
imul
jle
divb
and
arpl
add
sbb
sbb
mov
adc
arpl
push
dec
incl
pop
in
push
out
inc
sbbb
and
popl
cli
arpl
insl
daa
movsb
jp
fildl
iret
lods
push
cmp
lods
dec
arpl
push
mov
bnd
arpl
push
aam
in
scas
imul
lcall
inc
xor
jecxz
xchg
out
push
arpl
in
test
je
xchg
and
addl
or
outsb
inc
pop
ds
into
xchg
add
nop
dec
mov
cmp
mov
test
or
dec
jno
jbe
hlt
jg
int3
xchg
xor
xor
jo
jmp
and
xor
arpl
loop
inc
xchg
shll
dec
fildl
js
rcll
xchg
in
pop
repz
in
ss
cmp
lods
mov
push
sub
push
test
arpl
push
sbb
les
xlat
mov
test
fdivl
insl
push
repnz
daa
lret
mov
inc
stos
mov
test
movsb
fldl
iret
fsubrl
sub
pop
imul
arpl
movsb
dec
jae
fisubrl
inc
repnz
and
xchg
add
push
repnz
imul
dec
adc
jecxz
leave
arpl
into
test
fistps
mov
mulb
repnz
outsl
fdivrp
or
xchg
jbe
daa
mov
xor
sbb
aaa
shl
insb
jmp
adc
mov
jg
aam
in
out
ss
repnz
mov
iret
push
in
arpl
cmp
sbb
and
scas
push
push
fs
mov
negb
push
jae
imul
fidivl
popa
shlb
test
mov
cmc
sti
xchg
or
cmp
gs
testl
jle
push
sub
pop
les
mov
add
shlb
lahf
imul
mov
xchg
pop
mov
jae
clc
icebp
jb
adc
cwtl
fwait
mov
push
dec
inc
clc
push
pop
pop
imul
hlt
xchg
test
bound
shll
arpl
sub
add
sbb
dec
fnstenv
mov
xor
inc
hlt
mov
push
dec
adc
mov
imul
dec
inc
divb
stc
scas
cmp
imul
popa
arpl
negb
xor
push
mov
and
arpl
add
arpl
jge
aam
popf
cmp
push
repnz
insl
sbb
and
or
cmc
sbb
cmovs
imul
cmp
xlat
push
adc
xorb
or
arpl
xor
arpl
cmp
lcall
cmp
arpl
or
punpcklwd
cmc
loop
cmp
pop
lods
push
jno
cmp
not
xor
pop
adc
in
cmpsb
cli
pavgb
cmp
push
lds
std
mov
orl
test
aam
dec
sub
sahf
xor
bound
insl
test
pop
out
arpl
add
ret
repnz
add
cmp
jo
dec
adc
cmp
dec
sub
clc
arpl
arpl
dec
jg
movsb
jae
sti
stos
loop
mov
xor
subl
dec
add
sahf
out
fldenv
xchg
sub
xor
aas
je
iret
outsl
push
adc
addr16
nop
pop
mov
jno
jno
push
jae
xchg
cld
push
sub
bound
scas
mulb
call
push
adc
sbb
arpl
cmp
adc
es
push
sahf
inc
xor
xchg
aas
push
addr16
repnz
or
fsubs
ret
imul
adc
fiadds
imul
add
mov
cmpsl
push
ljmp
pop
cs
ret
ret
ds
movq
std
cltd
js
sbb
jecxz
mov
arpl
cmpsl
repnz
rolb
and
adcl
xchg
imul
mov
ficoms
imul
inc
sahf
jmp
pop
add
gs
les
sub
in
cmp
sbb
pop
dec
xorl
arpl
hlt
sahf
out
arpl
out
pop
arpl
outsl
inc
and
mov
mov
out
cmp
loop
jmp
lcall
arpl
pop
popf
add
scas
hlt
cmp
scas
test
adc
mov
or
arpl
dec
into
xchg
sti
arpl
mov
int
jno
mov
dec
hlt
nop
adc
test
jp
cmp
sbb
in
in
mov
inc
bound
scas
stc
add
or
inc
add
sub
addr16
lods
pop
sti
out
xchg
add
loop
mov
mov
lret
pop
ljmp
addr16
daa
adc
mov
xlat
fisubl
call
dec
test
repnz
jle
pop
popa
and
and
sahf
mov
fdivl
pop
push
mov
orb
push
test
addr16
cmp
in
in
dec
arpl
cli
xchg
sbb
push
enter
pop
jb
je
outsl
xchg
pusha
dec
outsl
xor
mov
push
mov
imul
arpl
xchg
je
fildll
mov
push
ud1
inc
push
test
xchg
outsl
outsl
push
decb
out
leave
push
pop
lahf
xor
mov
add
pop
jbe
mov
jmp
subb
or
lods
mov
into
idiv
cmpb
js
cmpsb
pop
mov
test
push
adc
jecxz
cmp
les
push
pop
in
arpl
mov
xchg
lret
arpl
mov
xorb
fimuls
inc
xchg
shll
fstpl
push
xchg
std
xchg
or
sbb
rorl
popa
sub
arpl
repz
push
push
sub
jbe
je
cmp
cmpsb
arpl
xor
pop
jg
dec
leave
arpl
add
arpl
iret
jle
cmc
add
outsl
cli
insb
arpl
pop
pop
push
nop
movsb
xlat
iret
xchg
sub
xchg
ret
in
arpl
cmp
mov
jg
sbb
mov
in
mov
arpl
test
lods
in
ds
sbb
xchg
repz
xchg
hlt
js
push
sarb
pushf
dec
mov
inc
out
jmp
mov
jb
xor
mov
cmp
inc
jmp
cli
fidivs
in
fsts
fwait
loop
inc
outsl
int
lds
push
sub
lcall
adc
aad
imul
mov
push
push
jl
pop
int
out
jmp
sub
push
pop
push
stos
lea
or
jmp
shlb
insl
je
mov
push
loope
mov
mov
cltd
outsl
test
arpl
repnz
adc
push
lods
loop
dec
sub
xor
push
andb
test
and
int
fwait
arpl
mov
lds
mov
sar
cmp
imul
arpl
dec
addb
mov
sbb
movd
filds
xchg
inc
roll
mov
sbb
xchg
inc
jp
xor
sub
inc
adcl
push
out
push
add
add
dec
lahf
mov
subb
pop
mov
notb
xchg
sub
push
mov
mov
inc
mulb
mov
push
std
jno
push
cmp
or
into
arpl
jp
aam
jge
insb
lock
scas
insb
jecxz
sbb
jne
jb
stos
cli
adcb
add
pushf
push
lret
aad
gs
dec
dec
in
sub
cltd
mov
adc
xor
xor
push
add
loopne
psubd
hlt
pop
hlt
sub
cmp
push
or
or
test
xchg
pop
aaa
decl
sub
and
dec
sub
add
cltd
aas
mov
ja
push
iret
in
pusha
adc
add
jno
adc
and
in
fistpll
sti
iret
stc
mov
decb
or
add
iret
sub
decb
int
stc
mov
xor
adc
mov
push
add
je
into
cmp
aaa
add
filds
movsb
gs
iret
sbb
sub
mov
inc
jbe
inc
mov
xchg
movsl
push
rcrl
leave
mov
jg
fcoms
lds
and
stos
scas
push
lahf
or
xchg
sbbb
mov
push
aas
pusha
fildll
nop
iret
lods
mov
sti
sarb
pop
dec
les
push
outsb
add
rcr
cli
ror
pop
add
cld
add
mov
mov
imul
rcrb
mov
sub
subl
orl
sbb
push
notb
mov
push
jae
or
adc
jo
iret
popa
mov
xor
fistpll
jg
rorb
or
dec
mov
mov
mov
cli
mov
incb
xor
sarl
xor
jb
das
jge
sbb
stos
or
je
bnd
aad
push
xor
sahf
push
cmp
pop
shr
shrl
shr
shrl
roll
mov
jb
or
test
mov
push
mov
out
das
cld
push
scas
cld
outsl
cli
cs
out
imulb
repz
test
adcl
sahf
push
enter
jecxz
jae
add
mov
jb
xor
lahf
push
cmp
pop
push
ljmp
shr
shrl
roll
mov
pop
push
stos
aad
push
jmp
rcll
mov
mov
lock
add
lret
shrl
shr
shrl
movsb
mov
cmp
sti
repnz
mov
jno
mov
jmp
outsl
mov
xchg
das
sub
enter
jle
movsl
out
gs
in
movsb
movsb
fs
jecxz
call
cmp
fisttpl
sub
push
sbb
shlb
ud2
pop
jmp
lret
cmp
dec
pop
mov
push
mov
mov
and
mov
pop
scas
or
xchg
dec
jnp
or
fimuls
cmp
fcompl
dec
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
loop
mov
mov
adc
pop
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
ss
jg
cmp
cmp
scas
xchg
insl
adc
addr16
or
push
das
pop
pop
pop
out
add
data16
push
iret
insl
add
sub
mov
dec
stos
or
inc
in
jg
cmp
outsl
data16
xchg
insb
out
push
out
iret
pop
mov
mov
jg
xor
xchg
jns
cmp
add
incb
orl
xor
jmp
lret
test
cmp
dec
pop
iret
add
fiadds
sub
leave
inc
push
decl
push
add
xor
xchg
mov
or
add
cmp
dec
popa
scas
dec
sahf
sub
jmp
lret
gs
adc
ljmp
not
ja
mov
xor
push
repz
jg
inc
sub
or
jae
sub
cmpsl
sub
dec
hlt
test
xor
test
loop
imul
out
add
decb
sub
lea
or
iret
cmp
sahf
aaa
sbb
xor
xor
and
fistps
push
iret
pop
outsl
mulb
fs
mov
addl
jge
fsubl
xchg
adc
xor
iret
mov
sub
stos
ss
mov
aaa
or
jmp
clc
movsl
xchg
adc
frstor
push
sbb
mov
inc
mov
or
leave
adc
mov
ret
adc
xor
dec
mov
inc
rcl
push
sahf
shr
rcrl
out
shrl
mov
mov
xchg
andl
cs
cs
jb
mov
jle
sbb
js
and
mov
stc
lds
inc
jo
out
cmp
ss
data16
inc
xchg
cmp
ljmp
cmp
push
xor
push
leave
sub
dec
mov
loope
fs
das
pop
dec
cmp
dec
int
mov
lcall
cli
adc
pop
scas
add
stos
cld
mov
adc
inc
sub
cmp
and
loope
mov
in
mov
adc
jle
cwtl
jbe
jbe
ss
mov
iret
lock
in
fistpll
cmpsb
mov
leave
cltd
mov
mov
into
cltd
in
xor
push
aas
inc
or
fimuls
push
pop
pop
mov
sub
jp
dec
push
aaa
in
dec
jmp
enter
adc
pop
mov
loop
imul
icebp
pop
pop
fwait
push
sbb
dec
sbb
clc
sub
pop
or
push
mov
insb
stos
out
popf
lock
int3
scas
fistpl
iret
cli
mov
loop
lahf
hlt
dec
out
sarb
addr16
sub
xorb
mov
xchg
loop
fistps
mov
mov
cmp
dec
cmc
outsl
jecxz
dec
and
in
movsb
icebp
fucomip
mov
scas
dec
lahf
dec
insb
shl
and
fists
cltd
mov
xchg
xchg
jns
orl
mov
clc
mov
dec
repz
mov
mov
cld
imulb
mov
stos
fistps
xchg
mov
mov
leave
cmpsl
jg
xchg
mov
lods
push
insw
data16
and
in
inc
dec
lret
mov
mov
add
pop
cltd
fisubs
or
pop
jmp
and
in
movsb
loop
out
rcll
jmp
scas
pop
lahf
cmp
ret
mov
sbb
sub
aas
stos
ret
out
cmovnp
sub
xor
iret
stc
insb
frstor
and
insb
or
lret
stos
stos
call
mov
pop
repnz
shl
les
stos
jl
pop
mov
dec
repnz
mov
jb
xor
jno
cltd
jns
jns
jns
cli
inc
aas
mov
gs
enter
add
das
mov
cld
fs
push
mov
in
push
dec
sub
adc
jne
aam
push
push
mov
mov
xchg
addr16
fbstp
mov
in
jo
sbb
mov
xor
lahf
dec
and
in
movsb
jno
outsb
movsb
or
aas
jecxz
xor
fs
jg
adc
enter
sub
imul
mov
bound
jb
jo
adc
out
lret
movsb
cli
mov
test
inc
mov
out
cs
loopne
cmp
cmp
lretw
out
fucom
in
or
mov
push
cli
ret
add
jns
es
inc
mov
lock
frstor
xchg
fucomip
jmp
jbe
rclb
mov
mov
sub
and
in
scas
fs
and
dec
xchg
cmpsb
pop
mov
and
jle
mov
jb
push
loope
int
lret
push
and
into
cld
in
movsb
sbb
mov
push
mov
mov
popa
fisttps
jnp
mov
and
mov
mov
push
mov
inc
ffreep
iret
pop
mov
mov
jg
jg
jg
jg
jg
jg
jg
xchg
bound
popa
fisubs
icebp
pop
sbb
into
pop
mov
pop
test
outsb
stos
push
mov
lods
iret
mov
clc
outsb
test
sub
insb
hlt
sub
fildl
xchg
jb
pop
scas
and
in
movsb
out
fs
and
jo
in
mov
stos
mov
into
lods
xorb
jmp
stos
jbe
jbe
jbe
jbe
jbe
jbe
jbe
test
mov
shll
ret
lods
adc
xor
lock
mov
fildll
sub
jns
add
pop
test
push
jo
out
out
pusha
outsb
pop
sub
ljmp
in
mov
daa
mov
mov
mov
mov
mov
mov
cmp
jg
insb
scas
dec
stos
fdiv
or
das
push
outsl
mov
scas
mov
or
sub
in
jns
jns
jns
sub
test
mov
sub
push
sub
imul
daa
adcb
addr16
ret
out
cmpsb
xor
in
sbb
dec
sub
into
xor
jp
add
scas
jbe
jbe
jbe
jbe
sub
sub
stos
lock
daa
cmp
xor
xor
in
mov
jno
lock
out
and
jns
jns
pop
stos
jg
jg
jg
jg
jg
jg
jg
jg
sahf
dec
outsl
adc
mov
jo
repnz
ret
pop
addr16
push
outsb
shrl
lods
shrl
shll
in
shll
shll
in
dec
or
sub
xor
jb
into
and
sbb
shrb
sub
aas
icebp
iret
jno
das
scas
scas
mov
enter
push
jns
cli
jo
out
add
sub
jmp
push
cs
data16
and
jecxz
ret
pop
iret
in
insl
das
out
stos
inc
inc
stos
jmp
frstor
gs
push
xchg
xor
xor
gs
fs
and
mov
insb
adc
ss
sub
ret
jb
xor
mov
and
push
jmp
cmpsl
mov
jmp
scas
ss
mov
orb
jbe
jbe
mov
xchg
mov
outsl
aad
push
outsb
aam
push
daa
shll
xor
and
xor
iret
insl
iret
in
subb
push
out
mov
xor
imul
test
daa
fs
icebp
and
or
xor
inc
in
les
jg
jg
jg
jg
jg
jg
jg
jg
xchg
mov
xor
out
subb
jp
mov
pop
push
scas
insb
subb
dec
sub
rolb
dec
sub
movsb
sub
ds
out
sub
dec
lods
loope
mov
or
out
movsb
xor
outsb
loop
jb
das
or
in
subb
adc
imul
or
mov
xor
outsl
inc
les
test
jg
andb
sub
aas
insl
in
push
insb
aad
push
stos
aam
push
shlb
mov
push
daa
mov
iret
jno
fiadds
mov
xchg
push
pusha
outsl
mov
addr16
out
out
and
movsb
xor
fs
stos
and
in
fucomip
mov
xor
imul
repz
fcomip
dec
jb
das
rolb
push
push
jmp
inc
jg
xor
fs
xchg
xor
cs
add
addr16
jns
cmp
adc
cmp
sub
ror
sub
mov
mov
insb
sub
lcall
pusha
push
daa
test
push
push
mov
dec
push
mov
xor
stos
and
fimuls
loope
sub
in
fidivl
test
test
add
fisubrs
sub
jmp
shll
inc
insl
mov
mov
lock
jle
scas
fisubrl
sub
fiaddl
and
stos
or
push
or
lret
mov
push
ret
subb
test
mov
insl
jns
jns
or
jle
mov
pop
sub
lock
xor
stos
out
outsb
ljmp
adc
icebp
inc
outsl
jle
scas
bnd
pop
push
pop
or
jle
lods
ret
cs
data16
xchg
adc
stos
cmp
jns
pop
sub
repnz
jb
mov
das
jmp
out
sub
jno
or
fs
movsl
mov
out
and
fisubrl
mov
daa
scas
jno
in
push
insb
lret
stos
xor
insb
fidivl
ljmp
push
stos
jno
push
sub
mov
mov
fs
jbe
data16
push
outsl
jmp
cs
mov
xor
sub
sub
cmpsb
add
push
fs
or
das
add
fs
push
cltd
imul
jno
jmp
shll
ret
xor
es
add
inc
jmp
out
int3
fisubrl
add
inc
xor
sub
das
add
popa
sub
das
mov
test
daa
ret
add
xor
scas
loop
loope
push
inc
out
jmp
lods
cs
mov
ret
pop
xchg
insl
das
inc
stos
fs
in
fs
mov
xor
jmp
imul
sub
mov
xor
pop
imul
lock
or
in
out
mov
mov
jg
cmp
test
xor
outsb
push
loop
sub
push
push
test
inc
jp
fcomip
lods
dec
ljmp
dec
mov
out
gs
or
lods
lods
out
out
fdivr
sub
in
dec
dec
stos
rcrl
adc
xchg
mov
sub
dec
jno
scas
sbb
cmp
inc
in
xchg
sub
call
frstor
jecxz
adc
xor
mov
dec
out
and
inc
cli
jo
adc
dec
nop
sub
or
out
inc
movsb
inc
and
icebp
ss
inc
scas
fisubs
stos
inc
sub
push
mov
xor
inc
cmpsb
fisubs
shll
sub
outsl
movsl
lret
stos
scas
mov
jmp
imul
lea
lods
movsl
in
mov
sub
xor
loop
out
jmp
mov
jge
loop
stos
clc
shr
and
jle
jbe
in
out
mov
mov
ficoms
lock
add
scas
imulb
hlt
jmp
stos
adc
push
adc
out
fisubl
xorb
push
jge
push
iret
loop
out
ficoml
sub
and
das
iret
in
out
mov
dec
ucomiss
in
das
scas
stos
mov
xor
inc
out
in
sub
ljmp
data16
jns
or
inc
icebp
jge
mov
in
lahf
insl
stos
adc
into
cmp
mov
shll
add
pop
inc
jmp
sub
test
movsb
and
out
iret
outsb
adc
scas
mov
cmpsl
inc
fmull
shlb
cmp
test
or
scas
sahf
sub
out
addr16
push
and
sbb
pop
into
adc
int
ret
pop
inc
mov
and
cs
stos
dec
stos
push
subb
and
push
outsl
aad
push
sub
loop
ljmp
lea
call
mov
dec
xchg
dec
mov
loope
mov
or
movsl
insb
or
xor
shr
icebp
inc
dec
adc
xor
push
and
xchg
sbb
and
inc
sub
cmp
sbb
cmpsb
push
insb
pop
outsl
nop
nop
scas
mov
out
xlat
iret
lock
in
xchg
stos
mov
imul
jecxz
inc
mov
cmova
shr
cld
test
push
out
into
push
xor
add
pop
out
jb
and
sub
outsl
dec
jo
out
and
xlat
inc
call
icebp
adc
dec
sub
dec
or
xchg
lretw
fst
cs
xor
mov
insb
addr16
call
adc
leave
movsb
jmp
scas
out
das
or
in
sub
frstor
loop
cltd
in
or
scas
into
pop
out
sbb
stos
into
scas
push
scas
or
sub
outsb
in
out
mov
push
sub
cmp
mov
in
sbb
stos
int
push
lods
or
aas
lea
lods
in
cmp
mov
insl
sbb
stos
dec
and
aas
or
dec
jo
pop
sub
cmp
xor
data16
mov
and
dec
jb
icebp
sbb
or
sub
pusha
in
sub
test
mov
sub
push
or
dec
xchg
lods
adc
mov
daa
xchg
adc
cmp
cs
lods
pop
push
sub
xchg
fcoml
jl
fsubp
arpl
mov
or
dec
lods
loope
mov
fisubl
out
jb
das
loope
mov
or
imul
add
sub
test
dec
into
mov
out
fsubrp
xor
jno
lock
cs
scas
dec
in
loope
push
cmpsb
fisubs
lock
iret
outsl
and
lods
xor
xor
out
and
and
in
pop
dec
sub
xor
data16
dec
in
inc
cmpsb
call
sbb
bound
xor
dec
push
out
imul
jmp
imul
mov
gs
mov
movsb
test
jb
enter
jns
popa
in
jg
push
stos
mov
dec
in
lock
out
sub
pop
jmp
sub
mov
movsl
dec
test
repnz
dec
les
sub
test
jmp
gs
push
push
insl
push
sub
sub
xor
dec
and
push
and
jecxz
and
sbb
movsl
outsl
pop
sub
ljmp
test
gs
fidivs
lock
in
fiadds
lods
in
ret
push
jo
xor
repnz
out
mov
jecxz
mov
xor
mov
out
mov
ljmp
push
mov
push
test
lret
and
lods
insl
cs
dec
insl
loope
mov
or
dec
mov
adc
stos
inc
int3
es
mov
mov
add
push
mov
jmp
dec
gs
pop
inc
stos
mov
scas
loope
mov
or
out
movsl
out
pop
repnz
arpl
mov
or
in
push
push
jns
dec
push
out
pusha
daa
jns
stc
mov
inc
sub
mov
sub
ret
out
push
sub
inc
fs
into
in
mov
push
movsb
lods
int
das
sub
xchg
jmp
jecxz
or
sub
and
add
outsb
leave
out
lock
imul
sbb
xor
sub
jo
push
leave
test
test
movsl
or
mov
outsb
stc
dec
daa
lods
mov
es
loop
pop
call
enter
dec
lods
test
xor
outsl
nop
push
or
sbb
dec
int
outsb
fimull
into
ljmp
pushf
jp,pn
add
mov
gs
das
xor
jo
dec
stos
daa
jo
dec
mov
sbb
push
stos
icebp
loope
mov
mov
cmpsl
and
push
scas
out
addr16
push
mov
jle
out
subb
fisubrl
fldt
pop
lds
test
outsb
adc
push
mov
sub
cmpsb
outsb
dec
lea
loop
lods
outsb
lea
ret
mov
push
stos
xor
push
and
xor
test
bnd
iret
outsb
push
sub
cmpsl
dec
adc
jmp
sub
inc
jb
push
addb
jb
inc
xor
add
test
les
push
inc
hlt
sub
ljmp
insb
and
es
scas
mov
adc
scas
ljmp
xor
lods
adc
movsb
out
dec
xor
in
pop
xchg
push
stos
inc
mov
jp
mov
dec
jecxz
push
mov
lods
out
jmp
dec
ljmp
mov
icebp
xor
lret
xor
and
es
cmpsl
jg
jg
and
cltd
orb
lods
mov
dec
ljmp
inc
mov
leave
adc
mov
mov
cmp
iret
xor
out
mov
sub
out
pop
sub
loop
out
sub
fdivl
es
mov
leave
xor
xor
arpl
xor
popa
cmpsl
xor
add
call
data16
out
or
lods
and
inc
push
movsl
inc
dec
dec
les
sbb
stos
lds
and
es
and
dec
in
inc
insb
mov
adcl
xor
mov
popa
ljmp
andl
inc
in
out
or
lods
xchg
test
out
sub
out
aam
pusha
in
dec
stos
add
pop
lods
jb
inc
xor
add
movsl
and
sub
mov
jp
and
es
test
mov
daa
fildll
out
sbb
ljmp
pusha
movsb
jo,pn
cmpsl
es
jecxz
in
jmp
cmp
mov
cs
lea
lods
orl
lods
sahf
rolb
push
leave
cltd
shr
lea
lret
sub
push
push
hlt
push
clc
fimuls
scas
stc
daa
sbbl
xor
mov
mov
pop
out
jg
add
in
mov
in
loop
in
aad
inc
stos
or
sub
jp
ljmpw
fsub
jb
test
scas
into
jecxz
icebp
dec
scas
rorl
add
and
inc
enter
enter
out
pop
js
jmp
push
dec
lea
inc
sub
inc
into
data16
enter
outsl
jno
stos
lret
lock
or
insb
pusha
sub
out
mov
xor
addr16
imul
or
and
in
adcb
loope
mov
dec
pop
pusha
lock
out
sub
dec
out
movsl
mov
or
out
pusha
lods
push
out
int3
test
icebp
dec
into
pusha
scas
push
out
sub
dec
cmpsb
sub
mov
xor
dec
lods
loope
mov
or
out
movsb
outsb
sub
jno,pt
cs
out
js
dec
es
in
jecxz
vmovntps
sub
test
fadd
arpl
icebp
jnp
outsb
sbb
sub
out
lods
push
jmp
sub
lods
stos
cmpsl
mov
sub
out
inc
add
movsl
loope
in
xor
gs
movsl
in
scas
xor
inc
aam
outsl
lods
inc
jmp
ljmp
out
xchg
ds
xor
add
lret
mov
scas
dec
jg
push
sub
jmp
stos
test
in
sbb
sub
out
mov
push
dec
xor
cmp
insb
inc
push
les
popw
enter
jno
sub
jp
mov
push
in
mov
jmp
movsl
daa
sub
inc
inc
in
insb
inc
lock
in
and
and
insb
push
call
xor
lret
adc
dec
stos
int
movsl
jg
adc
out
push
inc
icebp
aad
jmp
cmc
push
add
fsub
movsl
inc
jecxz
xchg
out
mov
jmp
dec
add
mov
sub
addr16
sub
and
in
test
sub
sbb
call
in
xor
outsl
dec
or
fsubrl
inc
addr16
mov
int
add
lret
mov
jno
inc
into
mov
and
mov
inc
leave
ret
or
add
outsl
xor
addb
addr16
stos
inc
mov
fs
xor
popa
sub
lock
mov
push
das
stos
movsb
subb
scas
mov
inc
sub
lock
sub
shrb
inc
stos
outsb
repnz
sub
stos
in
jle
loop
test
jmp
push
cmpsl
push
xor
fs
and
dec
push
movsb
dec
outsb
and
into
mov
jb
scas
out
bts
stos
insl
cmpsb
scas
lods
leave
into
sub
shrb
shl
adc
sub
addr16
es
imul
cs
movsb
mov
lods
inc
repnz
mov
cmpsl
mov
into
lock
and
out
sbb
inc
or
inc
scas
push
int3
jmp
mov
and
sub
xor
stos
dec
mov
fisubrs
shrl
sub
jmp
sub
sbb
xchg
mov
and
mov
or
gs
push
inc
movsl
and
les
sbb
popf
inc
les
pop
mov
jp
pushf
out
sub
inc
dec
sub
test
adc
cld
cli
sbb
mov
enter
ljmp
jle
stc
fdiv
inc
adc
fwait
xchg
cmpsb
mov
out
xchg
imul
xor
sbb
push
dec
mov
add
xchg
cmp
scas
dec
mov
and
dec
pushf
sub
push
sub
leave
out
mov
pop
pop
cmpsl
fistpll
out
mov
add
mov
xor
outsl
out
push
jno
xor
dec
xor
xchg
dec
add
lahf
dec
je
push
inc
mov
jg
inc
ljmp
push
dec
xchg
stc
shl
and
mov
loop
push
mov
loope
out
insl
push
icebp
sbbb
lahf
sbb
jg
mov
repnz
jo
fidivrl
cmpsl
cmp
inc
dec
xor
adc
nop
dec
js,pn
bound
pop
dec
xor
and
dec
xchg
fnstsw
xor
testb
ss
add
daa
inc
pop
imul
push
lret
movsb
lock
xchg
ret
xchg
sub
iret
mov
loop,pt
pop
mov
cli
stos
jmp
shll
imul
mov
push
mov
and
pushf
push
push
fs
arpl
push
in
cmpsb
and
xor
iret
test
and
pop
lea
cmp
cmp
sbb
xor
inc
stc
lahf
dec
jge
lret
cmp
or
xor
jae
cs
xchg
iret
scas
xor
lods
movsb
iret
jae
pop
scas
dec
mov
cmp
dec
fstp
or
push
out
push
imul
cmp
movsb
fistps
inc
mov
loop
pop
cmp
cmp
adc
xor
nop
icebp
stos
cltd
insl
add
bound
negb
inc
decl
sub
into
adc
jne
xchg
add
and
inc
and
sub
ds
clc
ret
cmp
lret
mov
xor
addr16
pop
add
dec
mov
push
jl
mov
in
divps
mov
pusha
out
mov
stos
and
cltd
push
add
test
in
out
push
xor
les
mov
mov
sbb
into
xlat
push
xor
fisubrs
scas
cmp
testl
dec
mov
arpl
lock
int
and
or
push
inc
inc
rorb
adc
push
cmpsl
jno
mov
push
mov
jg
test
and
ret
das
int
push
fisubrs
in
mov
jns
shr
jmp
bound
jnp
arpl
loop
shr
xadd
push
movzbl
push
push
shrd
inc
cmp
mov
clc
shl
sar
mov
movsbw
mov
cmc
clc
mov
shl
clc
clc
or
xor
push
pushf
pushf
lods
shr
add
jmp
cmc
cmp
pusha
pusha
pushf
pushl
lea
jae
clc
cmp
cmc
stc
cmp
pusha
lea
jae
stc
cmp
call
lods
cmc
inc
pop
adc
insl
jl
pop
inc
pop
insl
push
adc
sbb
push
enter
mov
sbb
sbb
shl
fnsave
xchg
xor
push
out
xchg
jmp
mov
xor
mov
lea
loope
loopne
mov
stos
xor
mov
push
xchg
lea
push
pop
jnp
cmp
mov
sahf
test
enter
aam
shl
clc
or
cltd
mov
jmp
and
pop
adc
repnz
rol
xchg
sar
mov
xchg
mov
popa
icebp
lods
sbbb
sbb
cpuid
push
call
adc
push
mov
xchg
sub
cs
push
dec
push
int3
ret
jp
jae
mov
insl
xor
sub
sbbb
shrl
dec
pusha
lret
jno
jnp
rclb
jge
outsl
sahf
xchg
nop
adc
add
push
pop
push
jb
push
inc
push
jns
gs
imul
imul
mov
les
mov
lods
mov
mov
clc
mov
push
push
jne
jno
dec
popa
cmp
arpl
jne
cli
inc
pop
jbe
xor
dec
mov
jp
and
and
sub
insb
out
cmpsl
pop
out
push
jb
sbb
lret
test
addr16
and
mov
cli
cmc
cli
mov
ret
insb
sahf
add
mov
pop
popa
adc
sbb
sbb
push
add
adc
sarl
test
adc
cmp
and
imul
push
inc
jle
push
pop
dec
sbb
ror
dec
call
dec
stos
fdecstp
push
dec
mov
cmpsb
mov
cmp
dec
sub
es
push
xor
fld
jecxz
scas
enter
das
mov
adc
mov
into
in
repnz
test
lods
sub
gs
push
and
mov
scas
movsl
mov
lea
out
push
push
jbe
jb
es
imul
in
mov
lea
jmp
cmp
jmp
jb
push
xchg
push
pushf
dec
test
shl
jmp
pusha
lea
je
pusha
lea
jmp
mov
call
setp
call
call
pop
add
pop
adc
test
xchg
lea
shll
sbb
cli
ficomps
aaa
xor
jns
jae
mov
sub
popa
push
outsb
jns
xor
cmp
pop
loop
imul
cld
shll
nop
mov
adc
jbe
add
mov
icebp
mov
cli
cmp
pop
and
push
xchg
negl
mov
popa
mov
push
movnti
sar
enter
clc
int
stc
cmc
ret
mov
adc
cltd
push
insb
cmp
leave
daa
xchg
stos
insb
rcr
repz
cwtl
test
sahf
je
xchg
in
push
fnstcw
daa
mov
cmpl
xchg
js
pop
ja
mov
aas
ss
dec
fwait
xchg
xchg
ja
cmp
ja
jae
push
jo
dec
arpl
jl
in
mov
dec
iret
push
paddsw
pop
test
vpaddd
sbb
outsb
fwait
clc
mov
mov
shlb
mov
mov
test
mov
push
aaa
xchg
sbb
cmp
in
sub
jno
ja
outsl
mov
xor
notb
js
mov
mov
xchg
mov
pop
mov
fstpl
pushf
stc
add
pusha
lea
jne
call
push
dec
pushl
bt
push
rol
pushf
jmp
rorl
adc
push
cmp
xor
jmp
lahf
scas
fdivp
out
sbb
xor
pop
bound
sbb
dec
jle
dec
push
or
shll
into
icebp
mov
ret
in
clc
jmp
test
aas
inc
fnstcw
dec
xchg
shll
mov
in
jl
sbb
pop
adc
push
pop
adc
and
or
add
cmpsl
mov
jmp
dec
xchg
pop
sub
pop
adc
cmp
xor
add
pop
sbb
ds
pop
das
xor
sbb
sub
call
adc
rol
sbb
inc
js
xor
cmp
adc
mov
test
daa
pop
adc
fadd
enter
lods
add
cld
mov
push
or
scas
aaa
add
inc
push
jp
jb
jb
jb
imul
and
int
sub
js
je
out
rorl
je
shrb
mov
sbbb
out
scas
lret
movsb
pop
outsl
cmp
xchg
lods
xchg
outsl
dec
sbb
js
sbb
js
sub
dec
add
jne
mov
in
mov
jg
xor
jb
sbb
sub
shl
mov
insb
loopne
mov
in
stc
cli
shl
out
inc
or
lods
aas
inc
pusha
dec
pop
ficoms
pop
adc
or
xor
dec
jl
imul
xor
push
mov
insb
fstp
ja
fldt
stos
adc
sub
pop
ja
push
adc
and
pusha
js
dec
xchg
jl
cmp
push
insl
jne
jg
insl
shlb
dec
pop
inc
mov
fcmovnb
mov
aam
movsb
xchg
mov
inc
scas
cmp
add
mov
sub
xchg
fcmove
int
lods
mov
inc
ljmp
arpl
stos
cld
call
mov
xchg
in
aad
loope
mov
mov
cmpsb
rorb
xor
adc
jbe
dec
pop
or
imul
pop
jp
mov
adc
mov
sbbb
adc
pop
std
jb
leave
mov
xchg
add
mov
mov
adc
out
inc
in
flds
push
outsb
pop
cmp
cmp
jle
or
leave
mov
imulb
jo
loop
in
stos
sub
daa
pusha
jg
pop
sbb
fs
pop
sbb
in
int3
cli
add
add
call
mov
dec
push
adc
sub
push
adc
and
cs
xor
ds
add
sahf
test
or
lret
cmp
xchg
xor
cmc
mov
loope
loop
cmp
lcall
loope
mov
or
push
dec
pusha
mov
cli
pop
or
adc
sub
notl
testl
insl
cmc
mov
into
xor
ja
fmul
iret
mov
mov
mov
clc
or
test
rcl
dec
lea
je
jmp
xor
xor
pop
and
pop
out
int3
es
xor
cmp
mov
ljmp
cmc
int
jge
adc
dec
jns
push
inc
push
inc
insl
enter
enter
sbb
xor
xor
loope
test
inc
jbe
mov
mov
jmp
fisttps
jno
and
dec
nop
imul
sti
faddl
mov
test
loop
ficompl
in
mov
mov
pop
push
inc
or
loop
subl
ret
mov
xor
test
inc
xlat
ret
hlt
orb
xchg
mov
push
xor
xor
insb
das
insb
sbb
cmp
adc
in
clc
mul
in
ret
clc
out
rorb
jno
xor
pop
jl
push
jne
pop
inc
push
inc
mov
cmp
cld
jmp
mov
repz
icebp
in
cwtl
test
mov
xor
xor
inc
daa
clc
or
cltd
lea
mov
lretw
cmpsb
mov
nop
adc
jp
iret
xchg
stc
xor
ja
out
fs
inc
aas
push
dec
push
and
cwtl
xlat
and
lret
repz
stc
lret
add
sbbb
xor
outsl
pop
jnp
pop
push
ja
popf
sub
sti
out
mov
xchg
push
adc
cmp
sub
cmpsb
push
mov
pop
inc
push
mov
shl
jmp
enter
nop
mov
mov
movsb
push
cmpl
loope
icebp
ss
add
pop
sti
pop
rorb
std
out
cli
cmc
mov
lahf
andb
add
and
stc
cmp
pusha
mov
jmp
sbb
pop
mov
lcall
lahf
mov
mov
cmp
or
dec
inc
push
inc
loopne
in
ja
adc
jae
ds
mov
or
cmp
or
cmp
xchg
jecxz
mov
sub
add
pop
pop
das
jge
jnp
jae
pop
pop
mov
scas
repnz
push
enter
xchg
enter
add
mov
xor
pop
insl
dec
or
test
ss
mov
dec
fiadds
sbb
cvtpi2ps
sub
outsb
pop
dec
push
xchg
lret
sbb
cs
cmpb
push
cmpsb
push
inc
push
inc
push
and
je
pop
pop
jne
adc
sahf
andb
rcll
sahf
mov
inc
push
cwtl
adc
xor
clc
iret
data16
loopne
sub
lret
data16
imul
add
sbb
sub
pop
add
cmp
sub
jle
push
adc
cltd
mov
jmp
cld
icebp
into
cltd
movl
sbb
fidivs
jo
mov
mov
mov
out
and
sub
insb
xchg
and
test
nop
xchg
into
xor
mov
fmul
cmp
clc
mov
xor
cmp
push
dec
push
jle
pushf
sub
repz
jl
jo
outsb
clc
cmp
cmc
add
call
clc
add
pushf
lea
jmp
cmc
cmp
cmp
pusha
jmp
pushf
pusha
lea
jae
pushf
cmp
sub
pushf
pushf
lea
call
jmp
call
jmp
pushf
lea
jb
stc
pushf
cmp
pusha
pushl
movw
push
lea
jae
btc
mov
rcr
mov
cmp
bts
btr
mov
test
call
movl
lea
ja
pusha
stc
imul
bt
jmp
test
jmp
cmp
pusha
jmp
pushf
movl
lea
call
pusha
pushf
call
pushl
lea
ja
call
add
dec
gs
popa
addr16
outsl
js
add
add
xor
mov
bt
test
mov
jmp
pusha
movl
push
lea
jmp
fisubl
xor
subb
jae
test
pop
mov
lods
mov
add
ljmp
stc
mov
pop
das
dec
std
test
xor
dec
jno
inc
or
std
inc
aaa
add
scas
xor
xchg
cmc
jae
jle
lea
cmpsb
icebp
mov
cmp
repnz
ss
test
mov
jb
sbbl
inc
rorl
adc
mov
jecxz
mov
pop
mov
fcomip
loop
push
mov
pop
test
cmp
lcall
add
arpl
pop
movsb
or
pop
adc
fiaddl
jno
sbb
add
push
add
dec
push
xor
mov
pop
pop
xor
imul
jbe
adc
jecxz
test
mov
shl
pop
xor
cs
ficompl
or
mov
js
xor
jmp
xor
xor
sub
adc
scas
out
and
in
lock
push
sbb
scas
xchg
mov
das
in
xchg
sbb
das
mov
in
fcomps
test
jnp
nop
mov
setb
mov
cli
imul
add
arpl
insl
ljmp
test
lock
cmp
aam
push
fwait
lods
imul
mov
add
out
xor
cmp
mov
and
adc
cli
arpl
jno
add
cmp
mov
xor
sahf
aam
pop
test
stos
loope
sub
pop
in
xchg
add
dec
popf
cmp
inc
ret
adc
repnz
pop
fcomps
dec
cmp
and
cmp
mov
lcall
insl
loop
push
pop
shrl
pop
lret
leave
dec
xchg
cmpsl
outsb
fidivl
adc
scas
cmpl
loop
scas
insl
sub
loope
cmp
mov
jb
aam
add
lret
inc
xchg
lea
sbb
jecxz
pushw
test
hlt
cmpsb
shrl
jnp
xor
push
lods
xchg
jae
and
dec
or
pop
sub
xor
sahf
ja
or
clc
arpl
in
push
pop
mov
out
aam
pusha
fsubrl
iret
add
sbb
orl
mov
jg
ljmp
jne
pop
movl
and
inc
test
mov
icebp
dec
repnz
out
sbb
or
out
popa
das
iret
sbb
insl
sub
in
sbb
pusha
in
dec
cmpsb
aam
loop
loopne
or
mov
mov
mov
outsb
pop
outsb
aam
outsl
mov
movsb
sub
mov
xor
pushf
dec
pop
in
xchg
mov
jmp
or
add
adc
pop
ret
ja
xchg
stos
bound
popa
aam
adc
cmp
push
inc
push
pop
out
jl
or
mov
dec
lret
andb
mov
sahf
and
adc
in
xor
xor
call
adc
fisubrl
fsubr
jb
push
lods
lret
xor
loop
aam
mov
ljmp
shr
pop
cmp
ljmp
in
data16
push
lods
jns
mov
call
mov
jo
sbb
out
shrb
dec
inc
int
sbb
fisttpl
xor
fst
adc
fsubl
jnp
clc
lock
dec
outsl
int3
adc
cli
scas
ljmp
adc
std
out
xor
icebp
fnstenv
cmp
test
outsl
dec
stos
mov
enter
ss
shll
loop
insb
sar
adc
fistpll
in
popf
and
ret
mov
pop
scas
aam
mov
lea
jns
out
adc
pop
sbb
ljmp
push
int
shrb
loop
jecxz
mov
clc
mov
or
xor
test
xor
nop
mov
popa
pop
das
aam
imul
push
and
adc
lock
and
dec
in
fldenv
and
or
in
shrl
pop
xor
or
shll
mov
dec
rclb
push
or
add
push
outsb
insl
das
add
scas
sbb
test
dec
push
mov
andl
mov
xchg
adc
jecxz
pop
push
call
sbb
mov
in
aam
iret
out
loopne
test
push
add
xor
pop
xchg
scas
mov
testb
push
scas
push
xor
orl
rcl
fcmovnb
and
inc
mov
cmp
adc
jns
addr16
or
mov
mov
inc
mov
adc
inc
add
popa
inc
and
mov
inc
sahf
repnz
fldenv
pop
add
pop
jb
dec
xor
jo
test
xchg
cld
lock
clc
out
and
in
and
aam
mov
scas
add
mov
push
outsb
mov
adc
insl
ja
in
sub
out
into
cmpsl
icebp
mov
sbb
mov
in
push
ret
mov
dec
das
jecxz
js
cli
cs
push
shrl
adc
testb
sub
repnz
sar
bound
hlt
add
data16
ret
pop
adc
loop
aam
ret
lahf
inc
lock
sbb
pop
xchg
sbb
out
lret
imul
xchg
inc
jle
cs
jno
xorb
loop
lds
and
ret
sub
inc
out
mov
push
mov
fstpl
je
ret
xchg
jbe
mul
mov
std
cmp
xchg
int3
aaa
inc
or
scas
cs
rorl
lea
cmc
aam
sar
imul
and
cmp
mov
adc
jo
repz
dec
mov
stc
xchg
mov
popa
dec
xor
push
daa
out
fcmovnb
xorl
push
repnz
div
divb
inc
es
xchg
xor
test
push
jbe
jb
icebp
mov
ss
and
popa
divb
sub
pop
repz
adc
push
iret
inc
push
xor
xchg
insl
in
push
push
popa
inc
addr16
movsl
lea
test
ljmp
xor
stos
inc
cmpsb
mov
push
out
out
es
sarb
dec
mov
jo
push
dec
cld
aam
push
dec
scas
adc
pop
rorb
out
loop
rclb
scas
pushf
pop
xor
ja
pop
mov
outsl
and
leavew
out
dec
jecxz
xor
scas
in
call
jmp
in
out
mov
stos
stos
loopne
push
out
pop
push
scas
leave
insl
aaa
in
push
pop
frstor
mov
xlat
fidivs
loop
cmpsl
and
jb
test
repnz
jmp
pop
lock
push
dec
in
bound
push
push
xor
out
mov
in
leave
out
dec
daa
ljmp
sub
and
lock
sub
adc
push
sub
mov
outsl
sbb
mov
imul
xlat
mov
outsl
loop
pop
imul
or
jo
cmpsl
jno
test
sbb
das
in
xor
call
ljmp
pop
in
mov
imul
push
in
and
scas
icebp
sub
dec
movsb
dec
and
xor
lock
dec
xor
dec
mov
scas
pusha
xchg
xor
fbstp
loopne
cs
in
out
lret
and
inc
dec
shr
testb
and
sub
test
inc
insb
dec
daa
push
dec
or
gs
movsb
je
insl
xchg
insl
and
inc
insl
add
cmp
jmp
cli
mov
xchg
lods
inc
xor
imul
jno
aad
mov
aam
adc
adc
js
jae
inc
out
xchg
data16
cmp
mov
mov
aam
in
push
inc
mov
push
leave
cli
cwtl
dec
icebp
cmp
cwtl
out
int
mov
aam
test
in
popa
cmc
push
fimull
repnz
pop
xchg
mov
ret
sbb
adc
movsl
inc
inc
xor
inc
and
out
and
inc
jb
jle
mov
out
aam
inc
mov
jns
mov
push
jne
ljmp
loop
in
and
aas
out
shl
jno
std
mov
mov
bound
ss
test
adc
mov
lcall
sub
fildl
xchg
and
xor
call
or
add
repnz
cs
cmp
rdtsc
xchg
cmp
cmp
in
and
and
inc
mov
sahf
push
sub
fs
pusha
mov
xchg
mov
aam
xchg
dec
mov
jae
xor
fidivl
outsb
aad
shr
xchg
mov
xor
lds
sarl
scas
aam
push
out
ss
inc
adc
mov
testb
jle
ja
filds
outsl
jo
cld
or
sbb
jns
ficompl
dec
dec
mov
xor
cmp
pop
loop
xor
into
jle
lds
scas
add
mov
push
or
xor
into
fldt
pop
mov
sbb
pushf
js
rolb
xor
loope
lock
mov
xor
add
iret
inc
sbbl
xor
in
out
std
bound
in
jb
in
addr16
gs
fisttpl
push
hlt
bound
ljmp
and
mov
imul
in
call
ja
pop
pushf
aam
pop
pusha
popf
adc
push
loop
bound
bound
pushf
outsl
add
insl
and
mov
xchg
loopne
lret
xor
lcall
add
pop
scas
std
aam
and
lahf
push
pop
sbb
and
mov
push
ljmp
and
mov
push
sub
loopne
push
addl
push
pop
das
scas
dec
fs
outsl
push
jb
fiadds
cmp
sarl
mov
xor
popf
into
or
outsl
cwtl
in
int3
rorl
xor
dec
out
dec
add
xchg
or
pop
ret
and
cmp
subb
stc
cmp
adc
or
imul
mov
arpl
ret
inc
or
sub
mov
cmp
dec
daa
xor
cmp
insb
loope
int
dec
add
pop
push
outsb
insl
out
wrmsr
fidivl
cs
push
outsb
cwtl
fisubrl
das
fiaddl
in
popf
and
insb
ret
push
cmp
xchg
call
shr
and
ja
push
std
repz
in
jo
pop
mov
adc
and
fadd
xor
jne
mov
cmp
adc
pop
aam
push
cli
jae
dec
arpl
jge
push
imul
movb
add
add
pop
cwtl
push
jb
pop
ficoml
cmp
ss
sbb
in
subb
dec
out
arpl
jns
pop
ror
jnp
sarb
int
push
xchg
nop
mov
icebp
shlb
bound
sbb
insl
dec
call
lea
jecxz
push
test
lea
in
and
pop
fwait
mov
flds
xor
sbb
ficoms
inc
in
pop
mov
fwait
nop
fdivrl
es
outsl
jecxz
and
popa
jo
adc
call
outsl
sbb
out
jno
roll
push
inc
jmp
outsb
nop
push
jecxz
lock
push
test
aaa
push
out
mov
std
loop
enter
gs
mov
xor
push
lret
xor
add
test
mov
insl
push
xchg
arpl
in
sahf
lcall
lods
inc
test
mov
add
fstl
test
ss
xchg
test
nop
jl
repnz
fisttpl
push
and
dec
jbe
mov
and
bound
adc
in
loop
jle
cld
into
and
mov
and
xchg
xchg
dec
push
add
mov
push
dec
push
in
in
aam
inc
jmp
mov
push
mov
out
loop
jb
push
xchg
dec
cmp
inc
cmp
pop
xchg
jge
cmc
test
cmp
insb
or
mov
test
sub
out
in
pop
jmp
push
xor
mov
mov
fcomps
outsb
cmp
sub
into
fidivs
xchg
pop
adc
call
mov
pop
fnstenv
add
out
fisubs
fisubrl
xchg
in
dec
adc
into
aad
scas
sbb
fistl
jl
test
fcmovnb
adc
lret
pop
pop
cli
loope
lea
les
jmp
and
loope
mov
pusha
xor
scas
sbb
sahf
mov
pop
and
xor
jns
lea
out
mov
pop
dec
dec
cmp
mov
call
lcall
imul
andl
push
fcomps
sbb
imul
dec
mov
mov
xor
cmp
sub
adc
addl
ds
push
xchg
repz
imul
cmpl
mov
xchg
test
ljmp
ret
ret
out
jg
and
les
xchg
jl
lods
fld
scas
sub
xor
xor
cmp
sti
mov
fs
aam
pop
dec
adc
xor
mov
jnp
scas
push
xorl
xchg
loop
test
xor
adc
cltd
lock
fcmovb
rclb
in
movsb
fmuls
jo
inc
add
and
adc
push
dec
push
add
sbb
dec
lock
push
sti
sub
in
pop
jecxz
lret
xchg
loope
mov
stc
pop
daa
loop
jo
scas
aam
push
sarb
lds
es
and
lret
ss
in
xor
aaa
shlb
xor
out
loop
ret
jno
fimuls
or
dec
xchg
and
shlb
sub
cwtl
or
aam
out
sub
out
and
dec
mov
mov
addb
shll
xor
push
add
in
imul
inc
cmp
lcall
jg
cltd
dec
jne
cmp
cltd
icebp
leave
push
aad
rcr
cmp
aaa
dec
inc
push
dec
inc
adc
std
cmp
xor
and
movsl
adc
out
xor
out
insl
fsubs
clc
push
and
arpl
xor
stc
in
aam
shrb
iret
aad
push
sub
aam
push
fcomi
sub
mov
pusha
sbb
gs
inc
cmp
aam
faddl
inc
addr16
cltd
and
fsubrs
xchg
dec
jg
subb
shlb
rol
mov
ret
testb
adc
out
aam
les
out
sub
lcall
ljmp
mov
cmp
xor
and
xlat
mov
in
fistps
push
mov
xor
pop
cld
jnp
iret
sti
dec
lds
imul
fcomps
mov
addr16
mov
sub
lret
in
jno
andl
or
pop
sti
cmpsl
jne
mov
mov
insl
add
cmc
push
in
pushf
ret
sub
imul
es
adc
iret
outsb
mov
mov
fldcw
pop
aad
ret
cmp
jnp
dec
xchg
aaa
pushf
test
xor
mov
imulb
js
scas
sub
and
jmp
stc
and
jecxz
sbb
shr
loop
in
movl
repnz
jo
pushf
xchg
imul
dec
cmc
inc
test
outsl
sub
jecxz
xchg
pop
nop
scas
xor
psubb
loopne
notl
inc
or
loop
adc
cmp
lock
shlb
or
test
jmp
xor
xchg
sahf
or
adc
or
ret
sub
inc
or
push
mov
cmp
test
loop
inc
pop
int
jl
xor
jo
and
adc
xor
adc
and
jecxz
push
in
cwtl
sbb
clc
dec
movsb
dec
inc
lods
fisubrs
and
pop
fisubs
pop
add
add
sub
push
inc
mov
xor
stos
jo
cld
imul
push
add
sub
xor
in
arpl
idivb
mov
in
push
mov
adc
ljmp
pop
ss
mov
leave
sbb
xor
xor
in
imul
insb
loop
and
add
jmp
inc
mov
int
inc
and
in
lds
out
lock
les
sub
mov
mov
dec
repnz
into
add
xchg
outsl
icebp
xchg
cmp
test
xchg
push
mov
cmpsb
mov
sub
aam
dec
les
fcomip
das
push
xor
or
jmp
loop
add
mov
xchg
sub
ja
mov
neg
sbb
mov
fwait
js
scas
adc
loope
xlat
hlt
jmp
xchg
or
rolb
outsl
push
sub
pop
out
lahf
in
push
scas
aam
inc
lods
jns
in
inc
es
xchg
insl
fs
fsubl
lods
and
test
es
or
aam
and
fs
repnz
adc
repnz
mov
jg
aas
add
xchg
or
xchg
lret
int
lea
sbb
pop
adc
inc
test
adcb
xor
or
and
sub
aam
sbb
adc
sahf
cmp
sbb
and
js
scas
bound
adc
aam
cmp
sub
repnz
lea
lcall
test
out
in
jne
push
jnp
jecxz
push
mov
sub
dec
pusha
add
in
in
pop
aam
sbb
push
sahf
xor
inc
cltd
lock
mov
sub
pop
jb
ds
sbb
fadds
faddl
int3
xchg
shlb
imul
cmp
jl
sub
sbb
repnz
insb
int
test
cmp
int
push
dec
lret
repnz
in
and
sub
cmpsb
pop
push
in
push
jae
push
or
test
mov
xor
adc
cmp
xor
and
mov
adc
cmp
into
xor
jecxz
cli
dec
add
lods
in
push
ds
aas
int
outsb
push
jno
pop
ret
and
movsb
aam
sub
movsl
repnz
mov
push
js
dec
mov
in
fbld
cli
and
ss
out
jnp
push
mov
test
les
fstl
scas
xor
ficoms
or
loop
in
xchg
insl
test
or
sbb
adc
in
movhps
adc
sbb
shll
mov
dec
divb
movsl
push
ss
xor
sbb
cmp
out
ljmp
repz
adc
pop
add
out
push
daa
jle
iret
pop
cmc
loopne
push
gs
data16
mov
pop
and
imul
xor
shl
out
dec
jo
outsb
pop
xor
push
push
fistpll
xchg
dec
imul
sbb
lods
jg
fsub
sub
inc
sub
loop
inc
add
lsl
filds
out
add
and
cmpsb
and
pop
and
aas
out
pop
imul
insb
xchg
adc
adc
xchg
in
xchg
ret
mov
addb
inc
add
clc
out
hlt
push
lds
lahf
xor
ret
adc
push
pushf
das
jecxz
dec
fidivs
roll
hlt
sarb
cmp
adc
test
add
pop
jmp
mov
cs
mov
stc
icebp
adc
jbe
lret
in
sbb
lds
imul
popf
xchg
and
sarl
in
out
pop
test
mov
jo
leave
fidivs
insl
addr16
loopne
scas
fs
jno
xchg
inc
or
xor
jle
cmpsl
ret
push
jno
xor
pop
insl
and
in
push
pop
out
ret
dec
and
dec
sub
repz
bound
pushf
and
insb
push
test
add
fnstenv
fcmovnu
aam
push
jno
lahf
mov
mov
das
jnp
pop
adc
fs
cmp
sub
sub
js
xlat
aad
lret
fmuls
and
adc
mov
outsb
pop
push
lret
adc
push
test
inc
aam
push
mov
adc
roll
push
hlt
and
and
jae
add
repnz
std
bound
fcomp
and
dec
pop
lcall
mov
scas
ror
inc
dec
lods
out
lods
fsts
inc
stos
xor
sub
aaa
repnz
mov
aaa
shl
fs
pop
loope
or
leave
jmp
pusha
fidivrl
fsubp
roll
add
fdivrl
sub
jl
repnz
subb
lahf
popf
xchg
imul
incl
sub
data16
gs
xor
cmp
add
arpl
dec
test
hlt
insl
xchg
out
cwtl
ret
inc
jecxz
xor
push
jecxz
add
out
xor
sbb
out
int
mov
inc
sbb
imul
out
push
or
shll
sahf
and
jb
mov
sub
stc
insl
ficompl
mov
fisttpll
and
and
add
push
cmp
lock
xor
inc
cs
stc
sub
jmp
push
in
inc
or
jae
and
lret
out
es
push
jae
cld
stos
loop
cmp
mov
mov
push
cmp
pop
sub
lock
ret
adc
inc
lds
outsb
in
pop
divl
xchg
rcll
fistpl
loop
mov
or
les
mov
pop
into
push
inc
push
push
sub
aam
dec
sub
dec
out
repz
push
push
jb
and
aam
and
rolb
push
jb
jb
loopne
sbb
ja
xor
push
arpl
push
or
inc
inc
sub
ret
aam
repnz
jl
test
mov
sbb
outsl
xchg
test
push
inc
insb
mov
push
stc
push
xor
scas
sub
std
lea
sbb
xor
xchg
in
jno
bswap
push
and
cmp
mov
out
aad
inc
insl
mov
sbb
xchg
cli
stc
cs
popa
std
insl
fwait
sti
adc
fimuls
xchg
aam
ret
jnp
add
mov
cmp
sub
cli
mov
sub
lahf
add
mov
loope
adc
out
push
loop
out
dec
push
insl
push
dec
aam
pop
and
fisubrl
cwtl
shlb
sbbb
xchg
ljmp
pop
cs
arpl
mov
out
mov
push
xor
jle
mov
xor
mov
stos
mov
xor
scas
mov
lds
pop
loope
and
and
jb
aas
in
pop
dec
fidivrl
roll
jo
data16
bound
aas
jge
pop
imul
mov
iret
push
int
aam
and
std
in
pop
clc
repz
ss
mov
mov
gs
ret
insl
into
lcall
movsb
mov
mov
push
or
dec
ljmp
out
inc
xchg
aam
cld
sub
jge
xchg
rcrl
scas
xchg
pop
mov
dec
add
push
mov
xchg
je
cmp
data16
mov
add
in
das
iret
sub
clc
insl
push
pop
xor
sub
mov
jl
mov
cmpsl
push
faddp
adc
insl
jno
push
xor
mov
scas
ret
movsb
and
movl
pop
jge
and
inc
add
xchg
sbb
cmp
andl
loop
lcall
xchg
inc
and
xchg
scas
cmc
push
adc
pop
xor
out
fists
jo
dec
pop
mov
cli
out
pushw
out
sub
dec
sbb
cmpsl
pop
int3
repnz
inc
repz
loop
in
fmuls
popf
fcoms
and
mov
test
fnstsw
mov
push
xchg
outsb
daa
imul
es
adc
dec
lds
inc
cmpsl
cmc
addl
out
gs
jl
in
jbe
cmp
sub
dec
loop
outsb
and
adc
mov
xchg
int3
and
icebp
xlat
shl
pop
mov
jp
xchg
cmp
or
or
adcl
push
outsl
fimuls
mul
mov
in
cmp
test
xor
jns
fwait
aam
and
insb
rorb
push
outsb
aam
lds
in
add
push
push
adc
enter
adc
jmp
out
xchg
popf
xor
xchg
push
mov
or
inc
xor
jo
js
inc
cmpsb
add
and
mov
mov
data16
shl
mov
sbb
or
icebp
std
pop
icebp
aam
rol
sahf
loopne
sub
ss
loope
and
pop
adc
inc
in
mov
in
mov
push
dec
incl
insb
pop
pop
outsb
test
rolb
adc
in
imul
jmp
mov
pop
xchg
repnz
aam
inc
out
mov
jb
movsl
mov
movsb
push
cmc
xchg
lea
cmp
roll
rcrb
roll
sbb
ret
aam
push
icebp
gs
push
inc
jo
call
in
gs
stc
and
hlt
push
enter
xor
shrl
test
test
jecxz
aam
sbb
adc
add
movsb
push
pop
mov
jmp
push
mov
bound
fldt
mov
aaa
xchg
popf
adc
cmp
and
ret
frstor
dec
fs
je
cltd
sbb
adc
sbb
flds
inc
cwtl
in
pop
mov
push
mov
ljmp
sbb
pop
inc
xor
icebp
std
inc
sbb
repnz
pop
out
inc
scas
dec
inc
ret
movsl
sbb
arpl
xchg
lret
pop
movsb
cmpsb
in
sub
in
mov
call
adc
in
cmp
dec
lods
sbb
clc
pop
loopne
pop
jo
dec
add
ds
lods
push
inc
xor
fcom
push
push
out
dec
js
stos
into
cli
data16
fcmovb
in
and
in
shlb
inc
push
add
xor
push
mov
test
push
xchg
lret
out
add
jno
das
jmp
mov
xor
stc
ds
add
insl
mov
data16
sub
cli
out
cs
adc
aam
ret
loope
inc
in
out
in
cli
aas
insl
sbb
adc
lcall
push
mov
in
inc
add
pop
ljmp
pusha
jns
test
in
rclb
inc
mov
shll
aam
shl
pop
sub
es
push
xchg
xchg
imul
pop
jo
fisttps
cmpb
bound
subl
adc
in
sub
add
mov
out
ss
adc
jge
jp
push
xor
or
inc
bnd
repz
bound
xchg
fisubl
gs
mov
je
dec
lret
fsubr
dec
fucomp
aam
test
jmp
dec
fimull
lcall
xchg
stos
lea
xor
test
xor
pop
orl
mov
lahf
mov
loop
mov
mov
fidivrl
push
rcrb
incb
xor
aam
shll
xor
push
xor
mov
subl
jle
push
mov
arpl
cmpsb
jle
addr16
pusha
movsb
mov
dec
push
gs
and
xor
and
fsubrl
cwtl
mov
stos
mov
adc
sub
cmp
cmp
fs
add
pusha
cmp
sti
jmp
dec
lcall
pop
push
addr16
xor
dec
jmp
and
push
cmp
jle
dec
insl
sub
inc
push
jle
jno
aam
mov
dec
movsb
mov
addr16
mov
and
imul
lods
pop
xlat
jl
mov
mov
adc
aam
shl
scas
test
movsb
mov
add
mov
imul
cltd
xchg
mov
out
or
mov
lods
lret
call
mov
mov
movsb
stos
mov
push
adc
or
in
xor
mov
jbe
lahf
xchg
cmpl
adc
pusha
xorb
add
inc
push
dec
in
inc
push
push
xor
lret
out
jno
sub
flds
fisttpll
test
xlat
stos
mov
fwait
dec
fdivrs
int3
bound
aad
mov
clc
jge
or
imul
and
dec
adc
cld
hlt
push
mov
lret
leave
scas
xor
sub
pop
cmp
add
or
pusha
inc
jo
je
sbb
jmp
jecxz
add
mov
mov
push
stc
mov
stc
test
pushl
lea
je
cmc
call
mov
lahf
lea
pusha
movl
pushf
call
xchg
int3
xor
adc
pushf
lods
in
clc
jmp
mov
les
cmpsb
push
js
push
jnp
add
popa
pop
pop
cmp
or
fs
stos
pop
mov
xchg
lods
mov
rorl
adc
push
cs
mov
movsl
adc
lret
pop
push
adc
cmp
xor
jmp
jl
jbe
psubd
xor
pop
out
in
xchg
cwtl
mov
dec
mov
mov
fmul
loopne
jp
pop
add
sbb
add
pop
imul
sbb
jecxz
inc
loope
mov
mov
gs
sub
pop
mov
popf
rorl
daa
jo
test
adc
sbb
enter
lea
mov
mov
aaa
sub
pop
jle
jle
dec
daa
js
push
or
xor
cmp
push
stos
sbb
cwtl
xchg
stos
mov
test
sti
in
aam
sar
enter
mov
test
and
xor
push
mov
ljmp
pop
mov
ljmp
iret
mov
and
cmp
aad
cmp
pop
sbb
push
or
push
push
sbb
or
push
dec
bound
pop
hlt
or
pop
inc
dec
es
stc
int3
sti
xchg
fwait
mov
add
push
int3
addl
or
add
sbb
jl
jae
and
and
das
adc
cmpsl
loop
inc
out
cmpsl
xchg
mov
add
and
addl
jg
inc
push
cmp
cmc
push
out
pushf
add
int3
cmp
out
sbbb
add
aas
aad
ja
inc
or
xchg
les
adc
seta
js
sbb
das
sbb
xchg
sbb
scas
mov
adc
push
jecxz
data16
aaa
sbb
xor
inc
inc
sub
push
bound
in
pusha
dec
sub
movsl
out
xchg
mul
leave
jo
and
es
push
add
mov
and
cmpsl
mov
and
lret
stos
mov
push
cmp
dec
rcrb
int3
out
sti
dec
pop
jl
sarb
mov
daa
xchg
cmpsb
mov
push
mov
dec
add
mov
call
xchg
test
hlt
add
shr
outsl
ss
xor
adc
int
mov
adcb
add
icebp
out
mov
mov
lret
xchg
pop
jge
arpl
mov
cmc
stos
in
aad
insb
insb
stc
add
cltd
andl
int3
out
fucomp
repnz
stos
mov
pusha
sub
xchg
pushf
jmp
aam
mov
mov
mov
sub
daa
or
dec
pop
outsb
daa
adc
js
push
arpl
clc
test
inc
cmp
sub
clc
test
cmp
cmp
pushf
pushf
call
vbroadcasti32x8
subb
in
xlat
call
movsb
ffreep
dec
mov
fcmovnu
mulb
arpl
xor
dec
je
xor
ljmp
fidivl
inc
clc
ficoml
ds
push
mov
sub
loop
scas
mov
sub
imulb
mov
jnp
pop
js
sub
jnp
addr16
sub
sub
mov
js
std
call
xor
mov
bt
test
bt
xchg
sub
dec
bt
mov
clc
clc
sub
jmp
movzbl
mov
movb
pushl
ret
movzbl
add
lea
adc
sub
mov
cmc
movzbw
mov
pusha
sub
mov
pushl
popl
pushf
bt
clc
cmp
push
pusha
lea
jle
ja
shr
sar
cmp
sub
rcl
shld
cmp
cmp
add
shl
mov
bt
test
mov
push
repnz
pusha
pushf
jmp
push
lock
std
std
mov
dec
ret
jg
and
and
rcrl
pop
fnsave
xor
cmpsb
outsl
int3
popf
jge
test
dec
dec
and
aam
pop
rolb
fsubs
adc
test
push
mov
inc
push
pop
jecxz
xchg
push
xchg
mov
mov
in
adc
or
cld
sbb
inc
dec
adc
sub
pop
mov
hlt
leave
mov
fstpl
inc
inc
push
inc
push
or
xor
pop
inc
adc
ja
fdivrs
push
mov
std
lds
testb
or
out
mov
repz
mov
jg
cwtl
dec
fisttpll
adc
mov
in
add
cmpsl
mov
jb
incb
adc
add
adc
cmp
cmp
or
adc
sub
enter
outsl
pusha
gs
cwtl
pop
sub
pop
adc
push
push
inc
jnp
outsl
jbe
pop
inc
data16
cli
adcb
stos
cmp
popf
stos
popf
push
inc
pop
imul
jnp
mov
mov
addr16
push
pop
jp
bound
xor
push
add
dec
shlb
je
or
test
ljmp
push
add
seto
movb
push
mov
pushf
push
mov
lea
pushf
movl
call
pushf
lea
jae
pushf
clc
jmp
mov
movw
lea
call
jmp
andb
sub
pop
lea
jle
push
or
xor
add
sbb
push
mov
jae
and
jno
sub
pop
bound
jg
imul
inc
push
aam
rol
pushf
cmc
ffree
outsl
insb
jnp
cmpsl
xchg
loopne
pusha
insl
enter
push
fmul
iret
movsl
scas
lock
jle
jle
out
and
adc
mov
aam
int3
jmp
out
lock
iret
xchg
das
mov
inc
push
adc
pusha
pusha
lea
jb
pusha
pushl
ret
add
movb
push
mov
pusha
lea
jmp
or
aas
sub
pop
sub
sbb
jp
sub
push
or
daa
push
aas
and
cs
sarb
inc
outsl
bound
push
or
ja
popf
cmp
push
mov
or
jp
jge
into
mov
xchg
cmp
into
sti
iret
ljmp
imul
inc
dec
pop
sub
leave
xor
jmp
push
dec
leave
xor
or
shl
dec
jno
adc
inc
imul
and
enter
adc
test
lea
jnp
push
lea
je
pushf
add
pushf
cmc
pushf
lea
jge
cmp
pushf
lea
jb
push
mov
cmp
pusha
pusha
jmp
add
inc
sub
pop
ss
sub
dec
outsl
dec
pop
jg
inc
dec
movsb
mov
cmc
sti
in
test
in
or
jmp
ffree
ljmp
pop
ljmp
ror
xchg
jb
addr16
scas
xchg
mov
dec
adc
push
jle
inc
jmp
dec
cmp
cli
out
fbstp
or
mov
rol
clc
in
jmp
push
scas
aaa
gs
fcoml
or
and
jae
fcomp
jbe
push
inc
dec
jecxz
aas
js
xor
inc
or
push
pop
or
pop
push
xor
sbb
sub
cmp
mov
insl
stos
negb
mov
mov
xchg
lods
in
insb
fildl
ja
rolb
cmp
outsl
jno
mov
repz
lods
nop
test
lret
mov
in
je
jne
jne
inc
pop
roll
or
and
xor
xor
test
jecxz
pop
jge
out
dec
dec
int
or
xchg
mov
sub
cld
stos
movsl
out
xchg
scas
cli
std
mov
xchg
arpl
adc
sbb
cli
sbb
pusha
cmp
and
adc
xor
sub
adc
sbb
dec
jae
fsubrs
int3
xlat
hlt
jb
push
pushl
lea
jmp
pusha
pushl
mov
rep
mov
call
mov
call
mov
rol
mov
inc
bt
pushw
popfw
call
jmp
sbb
cmp
mov
bt
cmpb
pusha
lea
jne
btr
and
aaa
sub
sbb
cmp
mov
bt
shl
add
pushf
add
xor
mov
push
clc
test
call
jmp
jb
jne
adc
inc
je
dec
popa
je
je
pop
scas
add
aad
lret
or
add
mov
loopne
call
adc
and
xor
mov
mov
dec
pop
or
test
mov
fmull
sti
mov
or
cld
cli
and
pop
aam
test
mov
les
inc
mov
in
aad
aas
adc
sub
fstps
mov
rolb
nop
fwait
outsb
xchg
jne
push
movsb
fsubr
clc
fcmovnu
pushf
pushl
pop
mov
test
cmpb
movb
call
pushf
call
sub
jmp
repz
popl
jmp
mov
movb
push
jmp
movb
mov
pushf
mov
pushf
lea
jmp
repz
popl
btc
pushf
stc
movl
mov
bts
rol
rol
mov
call
call
push
add
push
mov
call
not
bswap
ror
neg
xor
bt
rcl
xor
shld
movzbw
mov
cmc
clc
bt
sub
pushf
jmp
stc
jmp
aaa
mov
bsr
mov
bt
clc
add
pusha
pusha
mov
push
pushl
pushf
pushl
lea
jmp
and
movsbw
jmp
rol
clc
stc
stc
sub
movw
push
movw
lea
jmp
mov
btc
stc
sub
mov
pushf
mov
jmp
push
mov
not
movsbw
movzbw
mov
movsbw
not
push
call
rcr
mov
stc
push
pushl
sub
cmc
rol
cmc
clc
pushf
not
jmp
test
shl
mov
clc
call
movl
mov
pop
mov
pusha
cmc
rol
test
stc
stc
cmc
sub
pushf
mov
pushf
pushf
lea
jmp
not
mov
push
pushl
call
push
mov
xchg
mov
pushf
mov
jmp
pushl
popl
bswap
movl
call
rol
movw
sub
mov
movb
push
movl
lea
jmp
mov
pushl
sar
mov
cmc
pushf
bt
add
jmp
mov
bt
stc
pushf
lea
jno
rol
stc
jmp
jmp
mov
bts
pushl
popl
pushf
bswap
stc
movl
movsbw
bts
pop
mov
bt
rol
call
movw
pushf
popl
pushf
mov
pushf
pushl
pushl
popl
push
push
mov
movl
lea
jmp
jmp
push
pushf
mov
xchg
not
movsbw
call
rcl
push
add
movsbl
pop
pop
not
inc
shld
bt
clc
not
neg
btc
pushf
clc
rol
rol
setne
pop
call
btc
mov
clc
pushf
pushl
rol
test
push
push
sub
pushf
pushf
movl
mov
lea
jmp
pusha
call
movsbw
movzbl
mov
jmp
sub
jmp
jmp
pushf
jmp
push
push
movzbl
push
sub
call
bt
or
jmp
mov
movsbw
jmp
adc
adc
stc
and
mov
push
dec
mov
bt
pusha
sub
cmp
pushf
stc
push
shr
jmp
rcr
bts
movl
pop
ror
mov
pushf
movw
call
pusha
pushf
push
mov
pushf
pushl
call
ror
jmp
lea
pushf
movzbw
mov
pushf
add
pushf
call
mov
call
jmp
mov
lea
call
mov
pushf
mov
push
mov
lea
jmp
jmp
clc
pusha
xor
pushf
test
clc
add
pushl
neg
cmc
not
pushf
call
mov
mov
pushl
ret
rep
dec
mov
inc
cmp
clc
shr
mov
cmc
cld
cmp
pushl
popf
mov
lea
jmp
mov
call
pushf
popl
lea
jns
pushf
pushl
popl
push
pusha
pushl
lea
jmp
stc
rol
pusha
mov
sub
pushf
pushf
push
lea
jmp
test
neg
not
lea
inc
shr
rcl
shl
and
bts
jmp
pushl
ror
movl
stc
mov
mov
movb
pushf
stc
rol
pushl
clc
clc
jmp
push
mov
movl
pushf
pushf
pusha
lea
jmp
pushf
popl
pushf
pushf
push
jmp
mov
rol
movsbw
ror
mov
mov
clc
pushl
mov
bswap
pushl
popl
cmc
btc
ror
movl
clc
cmc
mov
mov
call
rol
push
sub
pushf
lea
jmp
shl
daa
mov
not
sar
mov
jmp
pushl
push
add
mov
call
pushf
movb
push
xchg
call
cbtw
push
cmp
cwtl
pushl
stc
push
bt
sub
movb
jmp
btc
shl
mov
xor
add
push
jmp
cmc
sub
test
pusha
call
bswap
mov
not
call
jmp
pushf
push
movb
xchg
pushf
not
bswap
pusha
mov
call
pusha
mov
pushf
test
stc
test
add
push
push
movb
pushf
lea
jmp
push
jmp
pushf
repz
popl
bswap
movsbw
rcr
push
rcr
push
mov
mov
mov
bswap
call
repz
popl
bswap
clc
clc
push
ror
push
cmc
clc
push
cmc
movzbw
movsbw
pushl
push
cmc
bts
movl
push
mov
pushf
cmc
pusha
clc
rol
clc
stc
call
pop
mov
pusha
push
push
rol
bt
movb
bt
jmp
call
mov
not
lea
mov
not
push
jmp
pusha
mov
push
push
movb
push
lea
jmp
mov
call
lea
pusha
pop
repz
popl
movzbw
cmc
ror
movsbw
mov
rcl
bt
btc
mov
movzbl
bts
bswap
rcr
mov
movsbw
ror
stc
rcr
pushl
popl
mov
pushl
pop
lea
movl
movsbw
bts
btr
mov
push
cmc
clc
cmc
rol
add
jno
pusha
sub
pusha
movw
lea
jmp
mov
xor
cmp
sub
push
cmc
cmc
push
not
stc
jmp
lea
repz
popl
jmp
mov
pusha
pushf
mov
call
pushf
pushf
call
pushf
mov
setne
inc
add
pushl
mov
pushf
mov
push
movw
mov
lea
jmp
not
call
bswap
mov
lea
jmp
not
repz
popl
not
jmp
push
mov
push
pusha
pushf
lea
jmp
bts
jo
stc
mov
add
call
mov
pusha
call
clc
xor
cmc
cmp
test
bt
mov
pushf
cmp
jmp
sete
mov
pushf
pushf
pushl
movw
lea
jmp
cmp
sub
clc
clc
test
shl
pushf
mov
pusha
movb
pushf
popl
call
sar
push
mov
bswap
rol
neg
sub
jmp
movzbw
mov
call
pusha
inc
test
pushl
neg
stc
bt
rol
clc
sub
jae
test
sub
cmp
sub
pusha
clc
clc
sub
call
push
pushf
popl
push
pushf
movb
pushl
popl
push
movb
pushf
lea
jmp
push
call
and
jmp
pushl
popl
movw
pushf
lea
jmp
movzbw
mov
neg
mov
sub
mov
clc
sub
call
xor
stc
neg
mov
pushf
jmp
das
mov
stc
mov
test
sub
test
shl
push
push
call
push
pushl
decl
push
call
mov
repz
popl
movzbw
movzbw
push
cmc
bswap
jmp
call
mov
pusha
pushf
popl
pusha
mov
jmp
mov
mov
not
not
mov
pushf
call
shrd
neg
shl
mov
sar
mov
sbb
call
pusha
mov
pushl
push
mov
pop
mov
pusha
bswap
mov
lea
jae
mov
pushf
mov
lea
movsbw
push
mov
movsbw
bswap
call
sub
pushf
movl
lea
jmp
sar
setne
stc
mov
pusha
pushf
movb
sub
pushf
add
pushl
pushf
mov
pushf
popl
call
and
pusha
pushl
pushf
popl
movb
movb
call
movzbl
call
push
mov
mov
push
lea
jmp
call
pushf
sub
pushf
pushl
lea
jmp
push
pushf
popl
movw
movb
pushl
popl
movb
lea
jmp
movb
lea
jne
pushf
pushf
jmp
test
shr
rdtsc
push
sub
call
rol
jmp
movl
pushf
popl
pushf
call
ror
lea
pushl
popl
bts
clc
rcl
btr
push
pushf
cmc
pusha
mov
pushf
stc
mov
bt
rol
cmp
mov
clc
pushl
sub
movb
movw
pushf
lea
jmp
pushf
popl
std
push
xchg
mov
cld
lea
mov
lea
pusha
pusha
jmp
pushf
pusha
movb
xchg
not
movzbw
pushf
mov
bswap
mov
pushl
mov
mov
not
mov
lea
pushf
mov
jmp
repz
popl
btr
push
mov
ror
btc
push
mov
pusha
bswap
btr
mov
rcl
btr
pushl
popl
cmc
jmp
push
repz
popl
bts
cmc
rcl
rcr
mov
rcl
mov
rcl
mov
bswap
bswap
pushl
popl
rcl
movl
call
daa
push
mov
or
mov
clc
mov
sub
call
pushf
push
mov
mov
pushf
pushf
lea
jmp
pushf
popl
jmp
inc
jmp
clc
not
call
pushf
popl
call
lea
mov
lea
not
call
pushf
pushf
call
add
call
pushf
mov
pushf
pusha
call
pushf
pushf
mov
pusha
pushl
lea
jmp
bsf
xor
mov
pushf
add
jmp
movzbw
mov
pushl
test
push
push
add
mov
call
pushf
popl
call
pusha
cwtl
mov
pushf
pushf
mov
mov
jmp
pushf
jmp
call
sar
and
bt
mov
shr
shr
jmp
jmp
stc
test
shl
clc
stc
cmp
shr
clc
cmc
cmc
bt
or
stc
xor
pusha
pusha
push
jmp
pushl
popl
pushf
pushf
pushf
lea
jmp
clc
mov
pushf
call
ror
pop
mov
clc
btc
mov
rcr
bts
lea
mov
movzbw
bts
rcr
rcl
pushl
popl
call
mov
pushf
lea
jmp
aad
sub
mov
rcr
mov
cmc
clc
pusha
not
bt
cmc
pushf
add
ja
not
stc
jmp
bswap
lea
movzbw
mov
not
pushl
lea
pushf
push
pushl
push
mov
movsbw
movzbl
bswap
mov
call
mov
not
pushf
bswap
mov
movzbw
pushl
jmp
movzbw
movl
stc
mov
bt
mov
pushl
rol
pushl
jmp
sub
pusha
pusha
lea
jmp
test
bsf
mov
jmp
mov
lea
not
pushf
repz
popl
bts
mov
stc
pushf
mov
movsbw
rcr
movzbl
jmp
call
jmp
jmp
jmp
jmp
push
pusha
lea
jne
test
sub
pusha
xchg
mov
mov
movl
mov
mov
movb
pusha
pushf
pushl
ret
clc
btc
push
pusha
mov
pop
mov
pusha
pushl
popl
movsbw
call
pusha
pusha
xchg
lea
pushl
jmp
call
lea
jne
rol
call
push
stc
rcr
mov
pusha
clc
test
clc
add
pusha
mov
lea
jmp
push
pushf
pushf
mov
pushf
lea
jmp
test
push
adc
les
adc
popf
push
adc
mov
push
adc
cmpsb
push
adc
roll
push
adc
mov
push
adc
push
adc
mov
push
adc
mov
push
adc
lods
push
adc
mov
push
adc
mov
push
adc
push
adc
mov
push
adc
xchg
push
adc
mov
push
adc
les
adc
mov
push
adc
lahf
push
adc
mov
push
adc
cmpsb
push
adc
mov
push
adc
mov
push
adc
lahf
push
adc
mov
push
adc
cmpsb
push
adc
lcall
jecxz
push
adc
mov
push
adc
push
adc
xchg
push
adc
mov
push
adc
lahf
push
adc
mov
push
adc
xchg
push
adc
mov
push
adc
mov
push
adc
push
adc
sahf
push
adc
mov
adc
xchg
push
adc
cltd
push
adc
push
adc
movsl
push
adc
push
adc
scas
push
adc
mov
adc
lcall
ds
push
adc
lods
push
adc
mov
push
adc
mov
push
adc
xchg
push
adc
mov
push
adc
sahf
push
adc
lahf
push
adc
cltd
push
adc
push
adc
lcall
cmpsl
ret
mov
push
adc
roll
hlt
cmpsb
push
adc
pushf
push
adc
mov
push
adc
lds
adc
mov
push
adc
mov
push
adc
mov
push
adc
push
adc
les
adc
mov
push
adc
mov
push
adc
lahf
push
adc
lds
adc
push
adc
mov
push
adc
mov
adc
lods
push
adc
sahf
push
adc
mov
push
adc
lahf
push
adc
push
adc
push
adc
xchg
push
adc
mov
push
adc
sahf
push
adc
pushf
push
adc
scas
push
adc
cltd
push
adc
lahf
push
adc
push
adc
xchg
push
adc
xchg
push
adc
les
adc
push
adc
mov
push
adc
mov
push
adc
mov
push
adc
mov
adc
cltd
push
adc
lds
adc
sahf
push
adc
mov
push
adc
mov
push
adc
mov
adc
les
adc
lods
push
adc
mov
push
adc
roll
lcall
adc
xchg
push
adc
push
adc
roll
xchg
mov
push
adc
push
adc
cmpsb
push
adc
lcall
mov
lds
adc
push
adc
les
adc
cltd
push
adc
push
adc
xchg
push
adc
push
adc
mov
push
adc
push
adc
push
adc
lahf
push
adc
xchg
push
adc
lods
push
adc
cltd
push
adc
push
adc
roll
push
pushf
push
adc
scas
push
adc
mov
push
adc
push
adc
lahf
push
adc
cmpsb
push
adc
xchg
push
adc
push
adc
mov
push
adc
into
mov
pop
push
not
not
mov
pusha
mov
lea
mov
pop
mov
pop
jmp
repz
popl
btc
xchg
push
pusha
bswap
xchg
movsbw
mov
pop
stc
bts
pushl
popl
pushf
mov
pushf
movl
movzbw
call
jmp
cmpl
pushf
jmp
pop
lea
mov
push
mov
divl
movb
call
cmp
xor
bt
cwtl
clc
cmc
mov
pushf
sub
pushf
mov
pushf
movw
lea
jmp
cmc
push
sub
pushf
stc
pusha
add
jmp
bt
ror
call
stc
mov
lea
push
pushl
popl
pusha
movl
pop
movsbw
clc
rcr
mov
movb
bt
bt
jmp
mov
mov
pushf
mov
mov
lea
jmp
pushf
pushf
rep
neg
shld
pushf
rol
mov
test
btr
std
mov
cmp
cmc
call
pushf
pushf
popl
mov
push
mov
mov
pushl
popl
pushf
lea
jmp
push
pushf
pusha
mov
pushl
mov
mov
mov
call
mov
bt
cmp
pusha
test
sub
push
mul
pushf
push
mov
pushf
jmp
jmp
jmp
pushl
popl
mov
lea
jmp
cmp
sub
pushf
movb
pushf
lea
jmp
clc
pushl
rol
cmp
stc
bt
sub
cmc
bt
cmp
call
stc
add
call
mov
movsbw
call
movsbl
mov
bt
rcl
lea
mov
stc
bt
movsbw
pushl
popl
bswap
movl
pushf
mov
push
clc
pushf
call
inc
call
pushl
popl
mov
push
push
pushf
lea
jmp
call
pushl
popl
not
movsbw
rcl
push
pushf
stc
mov
clc
lea
ja
stc
rol
clc
bt
clc
sub
pushf
push
lea
jmp
or
pusha
pushf
lea
je
test
xor
cmc
call
add
movb
mov
pushl
pushl
push
pushf
lea
jmp
call
pushl
popl
pusha
test
add
push
stc
push
pushl
pushl
popf
movw
movw
movb
lea
jmp
call
pusha
pushf
pushf
popl
call
sub
pusha
mov
lea
jmp
mov
movzbl
movsbw
jmp
jmp
pusha
mov
movb
pushf
call
xchg
call
lahf
shld
mov
push
call
movsbw
push
mov
push
bswap
mov
call
pusha
pushf
mov
not
pop
mov
pushl
jmp
jmp
clc
das
shl
inc
lea
push
stc
mov
cmp
pushf
push
lea
ja
call
not
mov
movw
mov
rol
call
not
call
jmp
sub
push
pushf
mov
lea
jmp
not
repz
popl
pushf
mov
rcr
mov
rcl
mov
bts
pushl
not
pushl
popl
pop
movzbw
rcr
push
pusha
mov
pushf
cmc
bt
stc
rol
cmp
test
stc
sub
pushf
mov
push
lea
jmp
mov
push
push
pusha
mov
lea
jmp
shr
mov
shrd
movsbl
shr
sbb
mov
rol
add
pusha
lea
shrd
sar
mov
not
rcr
pushf
xor
inc
dec
test
shl
sub
shld
pop
pushf
add
xor
inc
sar
pop
not
add
movw
and
and
xor
sar
call
movw
mov
pusha
mov
push
lea
jmp
jmp
jmp
pushf
movl
pushf
popl
push
pushl
pushl
popl
pushf
push
push
lea
jmp
mov
pushf
lea
jmp
mov
jmp
pushl
popl
movb
lea
jmp
not
mov
pop
pusha
mov
mov
jmp
pop
pop
mov
not
pop
jmp
test
shrd
pusha
mov
pushf
pushf
popl
pushf
movb
pushl
popl
pushl
lea
jmp
pushl
popf
movb
lea
jmp
pushl
mov
jmp
call
mov
pushf
push
lea
jmp
lea
mov
not
pushf
repz
popl
btr
rcl
rcr
movsbw
mov
movsbw
call
jmp
mov
call
sub
call
pushl
popl
pushf
pushf
movb
movw
lea
jmp
pushf
push
pushf
xchg
movsbw
push
pusha
not
mov
movsbw
mov
push
jmp
movl
bts
jmp
jmp
call
sub
push
movw
push
lea
jmp
mov
mov
lea
lea
call
ror
stc
sub
jle
stc
xor
bt
clc
test
mov
pushf
movb
clc
pusha
sub
cmp
sub
jmp
pushf
popl
mov
jmp
sub
clc
call
call
mov
pusha
mov
call
pushf
popl
call
pusha
call
pusha
clc
stc
not
clc
bt
jmp
clc
jmp
pusha
mov
pushl
push
pushf
lea
jmp
test
pushl
add
pushl
mov
pusha
push
movb
pushl
lea
jmp
push
xchg
movzbw
mov
mov
pushl
cld
mov
call
movzbl
movzbw
shrd
clc
mov
cmc
clc
sub
pusha
call
shl
aas
mov
jmp
lea
pusha
mov
push
stc
pushf
rol
clc
pushf
sub
movb
push
mov
lea
jmp
clc
rol
pushl
test
sub
pushf
pushf
lea
jmp
push
pusha
xchg
not
pushf
pop
mov
not
call
call
jmp
repz
popl
lea
jae
btr
bts
cmc
push
clc
push
bt
movsbl
bt
push
call
mov
js
clc
sub
call
jmp
mov
push
push
pushf
popl
mov
pushf
pusha
pushl
popl
pushl
pushf
movw
lea
jmp
mov
jmp
mov
pusha
push
shl
push
call
mov
sete
pushl
movzbw
mov
movzbw
bswap
lea
js
push
lea
push
pushf
pusha
setp
repz
popl
movzbw
ror
btr
mov
xchg
not
pushl
pop
mov
btc
movsbw
rcl
mov
pushf
clc
btr
pushl
popl
movsbw
stc
xchg
xchg
movl
clc
stc
mov
pusha
movsbw
rcl
rol
stc
sub
sub
sub
bswap
cmp
movsbw
neg
bts
mov
xor
sub
cmc
bsf
jmp
call
pushf
jmp
sub
pushf
push
pushf
pushf
lea
jmp
pusha
pushf
inc
shrd
btc
lea
and
bt
mov
pushl
pushf
movb
movb
sub
movw
pushf
mov
movw
mov
pushl
lea
jmp
mov
jmp
rol
neg
sub
jmp
rol
mov
bt
sub
push
pushf
mov
pusha
mov
push
lea
jmp
pusha
mov
bswap
mov
movzbw
pushl
pusha
movzbw
mov
movw
mov
jmp
push
rol
push
not
movsbw
mov
pushf
pushl
popl
mov
movsbw
rcl
lea
push
rol
mov
bt
cmc
pushf
rol
pusha
sub
push
pushf
mov
push
lea
jmp
call
mov
mov
push
pushl
lea
jmp
pusha
pushl
popl
pushf
mov
lea
jmp
test
sub
pushl
lea
jmp
mov
stc
call
pushf
popl
pushf
pushf
pusha
pushl
popl
pushf
lea
jmp
lea
not
mov
push
pushf
mov
push
pushf
lea
repz
popl
stc
mov
rol
ror
bswap
mov
jmp
xadd
stc
shl
cmc
mov
setne
mov
test
sub
cmp
push
cmp
shl
pusha
lea
jns
pusha
mov
jmp
mov
call
cwtl
cwtl
xadd
mov
stc
pop
shl
setb
mov
call
jmp
test
xchg
cmp
mov
push
sub
jmp
push
pusha
clc
bts
bts
mov
pop
pushl
popl
btr
clc
bt
stc
movl
btr
call
push
push
mov
pusha
movzbw
movzbw
mov
not
lea
push
mov
pop
not
mov
not
pusha
repz
popl
pop
mov
not
jmp
sub
jmp
mov
call
pushl
pushf
mov
pushl
mov
pusha
pushf
pushf
lea
jmp
pushf
popl
call
cmp
mov
add
push
mov
movw
lea
jmp
movsbw
call
mov
pop
movsbw
call
movw
mov
movb
movw
pushl
ret
inc
and
pushf
mov
cmc
dec
sub
cmc
bts
stc
rol
movzbw
ror
not
stc
rcr
movzbw
ror
ror
stc
sub
call
rcl
and
mov
mov
sub
mov
pusha
sub
pushf
shr
pushf
lea
jno
pushf
mov
jmp
jmp
bswap
shrd
mov
cmp
jmp
sub
push
add
jmp
jmp
test
movsbw
btr
mov
xadd
xchg
cwtl
aam
pop
rol
daa
bswap
pop
xor
btr
pop
movzbw
lahf
btr
pop
movsbw
xor
pop
bsf
shr
popf
not
pushf
rdtsc
movsbw
mov
movzbl
movsbw
cltd
not
mov
lea
mov
pushf
movsbw
not
xchg
mov
pushf
bswap
movsbw
push
mov
pusha
movb
movb
pushf
pushl
ret
movzbw
lea
push
pusha
mov
push
pop
mov
movsbw
pusha
repz
popl
movsbw
mov
btc
bts
jmp
lea
mov
push
mov
pushf
push
mov
push
pop
mov
not
mov
call
inc
push
neg
call
shr
push
call
push
pusha
jmp
rol
sub
jmp
call
pushf
cmc
push
lea
jmp
mov
pushf
pushf
mov
pushf
pushf
lea
jmp
jmp
mov
push
lea
jmp
jmp
test
xadd
rcl
bswap
add
add
lea
shrd
sub
cmc
xor
mov
xchg
rol
mov
mov
add
dec
pushf
clc
mov
ror
jmp
jmp
xor
mov
inc
mov
jmp
mov
mov
jmp
xchg
jmp
mov
call
call
test
not
cmc
clc
cmc
movb
and
movb
pushl
pushf
call
push
pusha
call
pushf
mov
pusha
mov
pushl
call
xchg
mov
call
cmp
add
test
sub
mov
mov
movb
push
mov
push
lea
jmp
cmc
xor
cmp
bt
clc
sub
pushf
pusha
clc
movb
neg
jmp
pushf
pushl
mov
pusha
pushf
mov
mov
movw
lea
call
pushl
popl
push
lea
jmp
cmp
add
pushf
mov
pushl
lea
jmp
call
sub
bt
jmp
movb
stc
rol
test
cmc
clc
sub
pusha
pushf
pushf
push
lea
jmp
xchg
mov
lea
sbb
test
add
dec
adc
xor
neg
bt
shrd
bts
mov
jmp
rcl
mov
bt
pusha
movsbw
bt
mov
rcl
bswap
btc
pushl
popl
bswap
bt
movl
btr
not
mov
clc
jmp
movb
and
movw
pushf
call
pushl
popl
pushf
movw
mov
pushl
lea
jmp
cwtl
aad
lea
pop
push
xchg
seto
lea
xor
sub
btc
shr
bsr
lea
and
pusha
and
bsr
sub
lea
jns
push
movzbl
mov
push
pusha
jmp
bswap
push
mov
pushl
lea
jl
push
mov
call
push
jmp
call
call
jmp
repz
popl
mov
mov
stc
movzbw
mov
bts
bswap
movzbw
mov
not
ror
cmc
lea
pushl
popl
movzbw
movl
lea
bts
mov
movb
movw
call
or
or
xorb
pushf
call
bt
mov
mov
lea
pushl
popl
clc
movl
lea
mov
pushf
rol
cmp
pusha
pushf
sub
movb
lea
jmp
xor
bswap
sub
rcr
bt
movzbw
not
pusha
mov
ror
bt
call
lea
cpuid
cmc
sub
pushf
call
movl
cld
jmp
shl
not
ror
daa
mov
bt
jmp
pushl
jmp
pushl
popl
pushl
lea
jmp
push
sub
test
sub
clc
push
sub
pusha
mov
mov
pushl
pushf
lea
jmp
movl
movw
mov
mov
pushf
lea
jmp
call
mov
pusha
mov
lea
pushf
mov
bswap
not
mov
pop
pusha
pop
repz
popl
rcl
mov
btc
btc
mov
cmc
call
mov
jmp
call
not
clc
cmp
stc
xchg
movw
cmc
xor
bt
pushf
sub
lea
jge
pusha
mov
pusha
lea
jmp
pushf
call
pushf
sete
rcl
movzbl
clc
cmc
push
bt
sub
jmp
shl
rol
cwtl
test
mov
bsf
dec
neg
mov
cmp
stc
jmp
pushl
popl
pushf
pushf
pushl
pushf
lea
jmp
jmp
jp
pusha
push
xchg
movsbw
lea
mov
movzbw
pushf
push
mov
bswap
pop
mov
not
bswap
mov
movsbl
push
pushf
jmp
mov
movw
pushl
popl
mov
mov
movw
lea
jmp
jmp
shl
adc
mov
shrd
mov
shl
rcl
xor
not
sub
push
btc
rcl
jmp
mov
movsbw
mov
pusha
pushf
call
lea
pushf
jmp
mov
pushl
call
pusha
call
lea
mov
push
pusha
call
mov
movb
movb
movb
mov
lea
jmp
sub
rcl
add
mov
pushf
call
mov
mov
call
clc
add
cmc
add
pusha
call
mov
push
movzbw
mov
bswap
movzbl
repz
popl
jmp
ror
rcl
bt
adc
notl
sub
adc
mov
call
push
pushl
pushf
push
mov
bswap
movzbl
mov
movzbw
push
lea
mov
lea
movsbl
mov
mov
jmp
pushf
stc
add
pushl
push
pusha
push
mov
pushl
push
lea
jmp
lea
not
pusha
mov
bswap
mov
push
call
pushl
pushl
mov
jmp
pushf
push
lea
jne
bsf
shld
clc
xorb
pusha
not
mov
push
push
pushf
lea
jmp
pushl
popl
movb
push
lea
jmp
add
add
pusha
lea
jg
push
mov
pusha
pusha
lea
jmp
xchg
call
rcl
adc
mov
shld
pusha
bsr
mov
movb
push
not
pusha
call
pusha
lea
jne
rcl
mov
test
bt
mov
push
movb
pushf
mov
and
push
clc
pushf
push
cmp
call
btc
mov
jmp
not
repz
popl
ror
bswap
pushf
mov
jmp
push
xchg
bswap
push
mov
push
movsbw
push
pushf
jmp
pushf
mov
movb
call
movw
movsbw
mov
push
pushl
popl
cmc
movl
jmp
pusha
pusha
jmp
lea
jge
pushf
lea
jne
bsr
bsr
clc
pushf
mov
cmc
cmc
and
pusha
push
test
cmp
pushf
lea
jne
jne
bsr
add
add
xorb
mov
pusha
mov
mov
pushf
movl
pushf
mov
lea
jmp
movw
stc
mov
ror
rcl
mov
cmc
push
pop
mov
bt
pushl
popl
movzbw
cmc
jmp
clc
sub
rcl
shl
pushf
rcr
movzbl
push
mov
call
rol
cmc
movw
sub
pushf
lea
jmp
cmp
bsr
xor
sub
setnp
mov
jne
not
neg
movzbw
setne
movzbl
lea
inc
bsf
and
sar
mov
pusha
pushf
cmp
pushf
add
call
bswap
mov
movzbw
not
call
call
not
pusha
jmp
repz
popl
movsbw
rcl
push
bt
mov
push
bswap
lea
pushf
mov
btr
bswap
bswap
pusha
pushl
popl
pushl
pop
movl
pushf
mov
bt
rol
push
cmp
push
bt
sub
mov
lea
jmp
rdtsc
adc
mov
xchg
mov
xor
mov
mov
ror
bt
add
mov
pusha
clc
add
bt
bt
shld
pushf
mov
pushf
call
pushf
call
call
cmc
bt
sub
pushf
call
neg
rol
shl
mov
and
mov
cmc
clc
add
pusha
mov
push
pusha
pushf
lea
jmp
pushl
mov
not
call
movb
pushl
div
call
pushf
xor
not
dec
shl
sub
or
xor
cmc
bts
mov
not
shrd
pop
xor
shr
shr
shr
bswap
movzbl
mov
bsr
lea
mov
jmp
ror
not
mov
push
rol
pushf
mov
lea
rcl
push
not
not
mov
pushl
pushf
movl
clc
mov
mov
cmc
stc
push
pushl
rol
jmp
daa
daa
btr
mov
call
and
inc
clc
stc
mov
push
add
jmp
movw
pusha
mov
movb
push
lea
jmp
call
movzbw
bswap
pusha
mov
jmp
mov
call
clc
sub
call
not
bts
lea
neg
dec
jmp
call
test
mov
mov
jmp
call
push
mov
movb
pushf
jmp
call
pushf
call
pushf
mov
movsbw
jns
movzbw
movsbl
push
mov
call
push
push
pushf
jmp
mov
bswap
mov
push
mov
lea
pushf
call
call
add
add
add
add
orb
adc
add
add
add
adc
add
add
add
sgdtl
sbb
add
dec
adc
add
add
mov
add
jmp
adc
add
add
jo
add
xchg
adc
