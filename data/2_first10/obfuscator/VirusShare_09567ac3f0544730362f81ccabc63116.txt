call
in
add
sub
sub
add
imul
mov
add
sub
add
cmp
mov
mov
add
incb
or
ja
add
mov
or
shrl
rorb
adc
sti
insl
fldl
add
cmp
add
repnz
fidivl
rolb
pop
cmp
mov
pop
add
sbb
test
or
add
or
mov
pop
or
lret
insl
in
out
insl
adc
repnz
push
add
imul
mov
jbe
pushl
sub
mov
xchg
push
mov
mov
cmp
out
insl
or
sub
cmp
sub
es
insl
jnp
imul
leave
data16
outsb
sbb
mov
ficoml
mov
add
scas
push
ja
in
mov
lock
pop
sub
sbb
mov
out
ja
jmp
idiv
clc
sbb
mov
divb
dec
adc
adc
out
in
imul
pop
or
icebp
sub
adc
mov
jge
add
into
mov
mov
fdivl
fmull
add
add
in
jg
es
pop
add
test
je
cli
ffree
out
mov
leave
add
mov
push
add
lcall
pop
ret
or
mov
fucomi
notb
inc
adc
mov
addps
negb
xor
add
sbb
or
pop
nop
mov
faddp
sbb
mov
mov
sbb
add
cmp
add
fbstp
inc
rcrb
add
out
pop
fistl
pop
in
and
ret
or
sbb
sbb
fwait
jecxz
pop
adc
mov
sbb
or
mov
sbb
out
and
push
sub
shl
aas
pop
sub
mov
push
mov
insb
fwait
or
popf
sub
cmp
ljmp
pop
mov
sbb
mov
clc
or
mov
jnp
mov
mov
sbb
popa
adc
je
into
sbb
add
lock
mov
or
shl
inc
outsb
imul
call
sar
pop
or
push
inc
icebp
and
ret
adc
test
dec
mov
ljmp
cli
push
add
cmp
add
mov
imul
sbb
fldt
jbe
push
or
sarl
fidivrl
adc
lret
inc
out
shr
pop
loopne
pushf
rolb
jbe
or
shlb
lret
insb
lods
cmp
cmpsb
or
mov
push
out
lock
sub
pop
fdivs
fistl
sbb
add
cmp
push
mov
arpl
sbb
fcmovu
or
or
test
jnp
mov
adc
mov
cmpsb
add
into
jbe
clc
lcall
pop
dec
or
sbb
into
rcll
xor
sbb
fbld
push
jp
shrb
mov
imul
gs
movb
add
imul
rcrb
scas
adc
cmp
in
mov
sub
bswap
mov
shl
mov
fldpi
push
sbb
imul
insb
icebp
jne
cltd
xor
adc
inc
clc
popa
orl
je
jae
adc
mov
mov
adc
sub
and
add
jb
sub
pop
jmp
insb
int
stos
jo
lret
adc
mov
icebp
add
shlb
sub
inc
xchg
rorl
sbb
cli
or
dec
fldt
enter
rorb
adc
andl
dec
call
popa
and
sbb
add
lea
pop
mov
add
add
shl
call
or
mov
loope
jp
sbb
mov
cld
mov
in
pop
pop
lods
xchg
stc
and
clc
adc
mov
sbb
add
popa
push
sub
add
xchg
push
mov
add
fidivrs
add
or
sbb
sti
sub
adc
mov
xor
stc
adc
sbb
or
add
fsubr
add
mov
push
ret
push
jo
shlb
sub
jmp
xor
mov
mov
adc
or
sub
cli
dec
xchg
sbb
mov
or
mov
popa
roll
push
iret
mov
mov
push
cmpsl
mov
or
scas
mov
mov
aad
rol
adc
pop
push
push
mov
rcr
add
sub
mov
pusha
xor
aaa
sub
add
rolb
in
and
push
add
stc
add
mov
cmp
fistps
sbb
stos
addl
pusha
stc
mov
cltd
dec
adc
loop
inc
or
ss
jb
mov
push
addr16
pop
shll
sub
popa
mov
decb
js
sub
outsb
shl
or
mov
sub
lret
ljmp
mov
notl
loope
incb
popa
imul
negb
fcomps
push
mov
xor
ret
in
call
roll
adc
sbb
mov
ret
rorb
fistpll
or
rclb
mov
jb
rclb
nop
pop
inc
inc
jo
mov
adc
or
push
add
std
and
pushf
lcall
notb
ret
loopne
mov
cli
ja
insl
sbb
rcrb
dec
mov
push
pop
push
negb
push
xor
push
xor
cli
movsb
jne
rol
mov
adc
sbb
sbb
xchg
dec
cmp
movb
sbb
mov
adc
jno
xchg
pop
inc
mov
cmpl
pusha
imul
lods
mov
push
adcb
adc
cmp
int
rorl
add
sbb
or
jb
pop
scas
push
push
lret
ror
flds
sbb
idivb
hlt
rol
flds
or
or
stos
andl
add
push
out
hlt
mov
cmc
and
test
xchg
js
sub
mov
add
int3
sub
f2xm1
jbe
mov
jle
adc
sbb
adc
sarl
inc
inc
in
int
add
push
rcll
pop
push
pop
lcall
mov
sarl
int3
mov
pop
pusha
xchg
mov
adc
inc
jnp
test
jne
testb
sbb
lcall
cs
xor
sbb
xlat
mov
clc
push
inc
pop
sub
push
test
bound
cs
imul
in
rol
mov
mov
xchg
lret
jmp
sub
scas
lea
dec
mov
imul
call
push
jg
push
push
fstpl
adc
pop
rorl
test
dec
sbb
setnp
movsl
xchg
out
add
ss
mov
sub
insb
jb
dec
mov
clc
or
sbb
arpl
xchg
je
sbb
xchg
mov
aaa
adc
xchg
push
pop
push
mov
inc
subps
add
loopne
dec
test
scas
sub
lock
insb
lret
mov
adc
sbb
sub
lret
push
jp
inc
and
leave
mov
jnp
fisubl
mov
cmpsb
test
sub
or
or
cmp
cmp
add
shll
cs
or
push
or
imul
lods
mov
imul
mov
shlb
pushf
pop
das
dec
call
jl
cmp
enter
js
add
enter
ss
mov
mov
aam
mov
movsl
rol
test
cmp
mov
xor
mov
adc
ltr
sbb
insl
add
js
mov
imul
out
adc
mov
dec
or
jnp
inc
and
lret
into
jmp
aad
mov
jnp
mov
ss
test
jo
sbb
or
sbb
dec
or
dec
cmp
cmpsl
pop
dec
and
scas
movb
cld
inc
adc
lods
out
test
cmp
mov
lock
pop
mov
in
stc
push
inc
mov
movsl
rcr
call
je
mov
or
call
je
pop
in
stc
adc
icebp
call
icebp
push
jle
dec
sbb
test
shll
shlb
adc
lret
sub
dec
cwtl
pop
jge
int
imul
fildl
pusha
push
loop
xor
cld
adc
std
aad
lret
call
loopne
mov
ror
add
adc
inc
test
or
loope
test
pop
ds
or
inc
push
scas
daa
jne
or
add
sbb
xchg
add
push
cmpsl
or
rclb
insb
push
pop
inc
in
subl
xchg
fimull
mov
sub
adc
mov
pop
lret
xadd
dec
in
popa
out
sbb
fildl
loop
dec
push
or
test
repz
pop
test
mov
add
sbb
add
xor
test
sub
add
pop
icebp
inc
ret
inc
mov
outsl
push
dec
xor
mov
ret
int
add
pushf
scas
stos
lods
sub
add
testl
ror
xchg
jle
das
sbb
sbb
inc
push
inc
mov
or
adc
jmp
add
mov
sub
mov
or
imul
push
cmpsl
lea
in
dec
daa
nop
nop
mov
pop
repnz
add
in
clc
call
mov
dec
xor
mov
scas
lret
std
movsl
data16
inc
pop
xlat
pop
and
arpl
dec
adc
cmp
stc
or
pop
jl
pushf
push
dec
jl
add
sbb
push
mov
mov
add
lods
ds
jmp
or
cmovns
pusha
xchg
push
mov
addb
pop
inc
lret
sbb
lret
jbe
dec
sbb
fcomi
cmp
adc
pop
into
loope
pop
insl
cs
sub
popf
mov
ret
add
insl
shr
inc
push
adc
hlt
pop
lock
push
mov
daa
pop
ljmp
test
mov
push
xor
push
cli
xchg
in
xchg
push
ret
imulb
jmp
xchg
fcomp
mov
test
jns
push
subl
rcrb
lock
hlt
xor
or
inc
push
test
mov
xchg
int
xchg
ret
std
and
sbb
jae
or
pop
push
adc
add
es
fmuls
sbb
mov
sub
cmp
sub
loop
mov
pop
adc
jno
pop
in
jge
out
shrb
arpl
or
push
cli
mov
pusha
jo
jmp
data16
xor
mov
outsl
aam
cmp
inc
pop
inc
or
insl
lret
jmp
mov
std
ljmp
xchg
push
data16
adc
mull
rorl
xchg
sub
idivb
jge
pop
js
pop
pop
cmpsb
push
popl
and
adc
push
mov
mov
lret
jns
xor
cmp
mov
fisttpl
orl
push
clc
cmp
ds
xchg
sub
xor
adc
adc
ljmp
adc
popf
stos
cmc
outsb
pop
sbb
push
rcl
mov
fcoml
movsb
mov
sbb
sbb
push
rcll
fisttpl
lcall
sbb
push
push
sbb
xchg
add
push
mov
and
aam
cmpsl
or
and
fiaddl
mov
and
popl
test
sbb
rcll
push
push
lods
into
stc
dec
adc
movsl
mov
jne
sbb
xor
sub
and
adc
mov
cmp
frstor
stos
push
mov
mov
jge
fwait
jo
pop
fstpt
adc
xor
rcl
lcall
or
loopne
es
cltd
pop
xor
xor
push
or
int
jg
push
pusha
imul
enter
mov
sbb
lock
or
test
fsubrs
xor
ljmp
xlat
das
adc
sub
das
lcall
mov
sbb
pusha
pop
add
xor
inc
dec
or
loopne
outsl
shll
pop
mov
fsqrt
loop
jmp
sbb
dec
jo
sbb
dec
push
xchg
mov
push
mov
aam
sbb
ror
or
pop
mov
enter
and
es
pop
mov
xor
addl
dec
sbb
cmc
pop
clc
cmpsb
pop
cli
push
push
shll
inc
pop
push
and
pop
lcall
push
fwait
sbb
mov
mov
inc
bound
mov
dec
addr16
lcall
xchg
pop
or
cmp
imul
adc
lea
xchg
les
cmp
lahf
cmpsl
xchg
mov
fcomp
mov
adc
pusha
mov
or
mov
lds
scas
out
mov
dec
jmp
jo
pop
jmp
and
push
enter
sbb
push
or
inc
icebp
push
orb
scas
mov
ja
les
mov
sbb
push
add
enter
add
xchg
outsb
sbb
cs
sbb
adc
push
push
xor
and
cli
mov
inc
mov
inc
push
cltd
gs
andl
das
add
cs
xlat
push
or
pop
adcb
mov
sbb
jnp
int
in
xchg
sbb
adc
sbb
mov
fs
clc
in
rolb
aad
inc
shlb
jo
movsl
pop
dec
stos
add
jmp
mov
dec
xchg
lcall
pop
xor
movsl
push
push
lock
dec
push
cmp
or
pushf
adc
vfmadd132ps
loope
adc
push
sbb
subb
xchg
ljmp
jl
add
pop
sarl
pop
pop
dec
icebp
push
push
sbb
mov
shrl
test
loopne
push
lods
mov
mov
inc
xchg
ds
shrl
xchg
lods
add
test
xor
arpl
xor
ss
push
mov
xor
lock
dec
adc
pop
cmpsl
inc
ret
adc
push
mov
clc
jae
dec
mov
int3
test
mov
or
dec
push
jno
and
aam
dec
lods
add
shr
mov
xor
push
hlt
adc
or
pop
call
mov
adc
mov
icebp
mov
or
enter
xorl
inc
push
insb
push
adc
adc
sbb
call
leave
adc
xor
sbb
outsl
pop
adc
inc
inc
mov
into
pop
scas
sbb
sbb
pop
dec
pushf
push
cmp
xchg
mov
mov
xlat
jmp
pop
jge
cmpsl
sub
add
add
rolb
sbb
test
sub
mov
cli
add
mov
inc
mov
xor
test
and
and
fcompl
pushf
dec
insl
ja
sbb
add
aad
out
mov
mov
stos
insb
pop
and
test
mov
adc
mov
adc
pop
adc
pop
push
xor
lahf
bound
push
dec
popf
jp
test
inc
adc
cmpl
and
sub
inc
sbb
sbb
popf
cmp
mov
push
ficompl
call
cs
sbb
or
cwtl
js
and
lock
jge
rorb
dec
push
mov
push
adc
mov
ret
adc
outsb
leave
xchg
jg
mov
out
scas
push
jmp
mov
fwait
rorb
mov
push
jg
lretw
test
negb
jae
lock
cltd
or
aad
scas
or
pop
add
sub
scas
scas
shrb
xchg
xchg
or
push
cmpsb
and
outsb
shlb
les
push
dec
in
leave
pop
or
mov
or
dec
loopne
add
shll
test
cwtl
mov
push
add
movsl
lahf
jp
jge
ljmp
xchg
je
stos
inc
sbb
stos
sub
mov
ret
push
add
mov
push
adc
test
push
repnz
pop
movsl
xor
mov
vpcmpeqb
cmp
cmpsl
mov
call
mov
pop
bound
or
cwtl
or
dec
jae
inc
mov
sbb
mov
call
xor
pop
lods
sbb
lods
xchg
push
xorl
xchg
repnz
mov
mov
or
xlat
imul
pop
push
data16
lret
push
inc
push
add
mov
push
cli
push
loope
jne
cmp
mov
add
setb
pop
xchg
dec
andb
sbb
push
int3
aad
xchg
repnz
fsubrl
imul
push
xor
in
jo
test
shrb
rorl
popa
roll
bnd
jp
xchg
pushf
cli
cld
ret
add
cltd
jmp
xchg
mov
into
cmp
testl
js
lret
call
mov
cmp
xor
xchg
lret
adc
adc
in
sti
repnz
xchg
mov
xchg
enter
sbb
jo
mov
or
lahf
iret
mov
or
cmp
jo
in
and
add
inc
or
fcoml
insb
adc
or
in
pop
movsl
cs
sarl
jmp
inc
cltd
adc
or
or
push
push
push
jne
jmp
mov
mov
cmp
test
pop
sub
inc
roll
push
stos
jecxz
jbe
ret
adc
xchg
push
pop
add
cld
adc
ljmp
mov
push
jecxz
xchg
dec
pop
dec
cmp
ret
pop
cmp
ficoml
and
xchg
adcl
sbb
cmp
aad
test
call
bound
inc
jb
push
lret
xor
ret
aad
sbb
test
push
or
ja
arpl
icebp
mov
mov
sbb
loope
pop
or
ja
rclb
insl
and
lahf
add
inc
mov
add
adc
ss
outsb
inc
leave
aaa
pop
loope
xor
fidivl
sub
dec
popa
or
pop
cmpsb
lcall
jp
push
push
sbb
adc
or
push
mov
test
leave
movsl
rcll
fidivs
or
xor
nop
sarl
loope
xchg
rorb
push
and
xchg
out
xor
repnz
dec
push
out
lcall
push
mov
or
mov
pop
mull
into
cmp
dec
iret
cmp
or
shll
jno
loope
xchg
pop
push
mov
rolb
fimuls
sub
inc
in
add
test
iret
movsl
push
shrl
xchg
les
ljmp
inc
push
lret
add
aam
xchg
push
mov
pop
mov
lea
inc
ret
xor
jmp
stos
mov
sub
mov
aas
arpl
dec
pop
cmp
into
push
sbb
sbb
push
xchg
push
jns
jae
arpl
lea
ss
mov
mov
out
fadd
lods
push
dec
int
cld
xor
or
andl
sbb
lahf
or
mov
adc
mov
enter
pop
xchg
into
ss
fildll
or
lret
shl
fdivs
dec
lods
sbb
xchg
mov
pop
into
loop
decb
aaa
push
xchg
push
aad
cltd
call
pop
adc
push
call
lock
mov
lock
mov
mov
adcb
mov
add
add
jg
movl
aas
mov
shrl
cmp
push
mov
and
and
add
shl
sbb
loop
sub
test
movsl
xor
and
in
adc
cmp
es
dec
shrl
cwtl
add
adc
adc
adc
cmp
sub
ljmp
hlt
sub
dec
aad
push
xchg
jo
jp
subb
fs
or
pop
test
fcom
shl
push
icebp
std
inc
mov
push
add
xchg
add
push
and
push
sub
or
push
mov
pop
push
pushf
mov
xlat
and
sbb
cmp
rorb
cltd
ds
mov
je
ja
and
nop
and
fs
and
jecxz
add
jo
mov
sub
into
pop
sbb
roll
int3
push
or
add
loope
mov
sub
or
sbb
push
push
dec
or
push
rcrl
jo
sub
mov
rolb
xor
aas
or
and
xor
push
jmp
addr16
jae
mov
adc
test
fcompl
xor
roll
dec
push
lea
icebp
es
aam
push
xor
push
gs
into
sub
addl
or
xchg
mov
push
loopne
sahf
insb
push
mov
rclb
dec
push
jo
enter
and
mov
cli
or
push
ds
lcall
lock
jo
push
jnp
in
and
daa
jb
pop
xchg
sbb
outsl
push
popa
or
mov
test
lock
cld
cmp
cmp
test
xchg
push
sbb
xchg
lock
dec
mov
cmpsb
sbb
xor
sbb
add
movsl
mov
sub
xor
or
jns
mov
sub
mov
shlb
gs
test
cwtl
xor
jno
jb
jno
sbb
cmp
aad
enter
adc
adc
rcl
or
or
sub
mov
jnp
push
inc
push
jo
cltd
fildll
pop
arpl
cs
and
pop
push
jo
inc
shl
roll
dec
clc
pop
sub
hlt
and
pop
pop
into
and
xor
mov
push
shl
sub
pop
dec
addr16
xchg
pop
adc
xor
dec
test
mov
or
rolb
push
mov
xchg
movsl
ret
cltd
int3
push
imul
lods
push
add
ja
xlat
add
xchg
push
and
dec
add
fmull
or
xchg
jo
lret
or
into
std
outsb
cltd
inc
addl
aas
pop
les
sub
push
loopne
push
ljmp
test
mov
mov
test
add
sub
gs
adc
idivb
or
sbb
cmp
jne
jg
test
int3
jl
pop
into
les
rorl
sub
jb
push
sub
insl
aad
sarl
popa
mov
sbb
std
and
mov
inc
out
pop
jb
push
xchg
jo
test
dec
cmp
xor
dec
andb
xlat
pop
icebp
push
call
push
pop
or
pop
pop
and
adc
pop
jno
and
aaa
adc
inc
xor
cli
loop
add
dec
aad
and
xchg
lods
adc
or
pop
adc
mov
test
stos
pop
mull
inc
dec
xchg
pop
pop
jmp
xchg
aad
repz
dec
pop
nop
mov
mov
stos
adc
inc
pop
je
nop
jecxz
push
add
mull
adc
mov
mov
mov
adc
xchg
leave
cmp
sahf
out
add
add
int3
in
lods
inc
inc
sub
std
sub
sbb
push
call
loope
mov
push
shlb
addb
push
jl
shrl
rol
add
popa
lret
cmp
mov
repnz
shrb
es
rcrb
xor
shll
fadds
pop
mov
pop
nop
push
test
movsb
out
dec
push
jae
test
inc
cmp
inc
mov
dec
loope
mov
lea
insl
cmp
popf
or
adc
push
std
leave
jns
dec
xchg
loopne
sub
add
loope
adc
fmull
sbb
sub
cmpsl
xchg
aad
and
int
dec
lds
adc
mov
or
jp
ds
ret
xorb
adcl
mov
inc
add
inc
in
lods
fiaddl
xor
or
push
sbb
add
dec
adc
xlat
add
mov
insl
sub
daa
rcl
pop
push
sti
jp
arpl
sbb
and
xor
sbb
inc
push
icebp
arpl
adc
push
xor
inc
inc
jge
lea
popa
or
enter
sbb
mulb
lret
mov
cmp
inc
or
rorb
xchg
ret
mov
dec
roll
mov
xor
and
and
jp
add
xchg
leave
stos
sbb
adc
out
addl
mov
movsl
ret
movsb
gs
adc
xor
pop
lea
popa
mov
or
jmp
sub
adc
outsb
xor
int
sbb
aad
dec
pop
xchg
cli
sbb
es
push
sbb
ret
rcrb
xor
in
adc
add
popf
addl
xor
pop
dec
pop
pop
mov
pop
cmp
lds
pushf
addb
push
fnstenv
lret
inc
and
push
pop
xor
mov
jo
in
add
push
icebp
out
sarb
push
push
rclb
adc
inc
sub
pushf
or
xchg
pushf
inc
cmp
or
cmpsl
subb
xor
or
mov
push
mov
stc
pop
roll
push
add
cmp
aas
mov
pop
xlat
lock
add
arpl
sbb
inc
shr
push
les
aaa
rcrl
mov
outsb
sbb
add
clc
and
pop
ja
add
and
arpl
jmp
xchg
enter
mov
add
ficompl
daa
bound
aaa
pshufw
sahf
subb
clc
stos
add
adc
inc
xor
movsb
push
rol
push
cltd
push
mov
or
inc
inc
xor
popf
adc
lcall
sbb
push
in
rolb
hlt
test
add
icebp
and
les
push
shll
sbb
push
loop
dec
xor
fs
xchg
and
push
out
mov
sar
aad
mov
into
mov
sub
add
inc
mov
sub
rorl
mov
inc
fwait
aaa
arpl
fs
shlb
popa
inc
shll
roll
and
data16
sar
shrl
adc
pop
xor
mov
mov
pop
stos
mov
sbbl
jne
test
fsubr
pop
aaa
addr16
pop
jo
insb
insb
sbb
mov
add
mov
push
arpl
mov
scas
into
insb
mov
pop
test
ret
shrb
inc
push
sbb
push
jne
icebp
jb
mov
pushf
sub
dec
ljmp
les
sbb
sub
sbb
ret
jo
push
xor
aaa
push
test
mov
movsl
push
rolb
cmp
pop
sti
jl
xor
or
ret
int3
rol
insl
pop
inc
jno
and
or
inc
push
out
mov
mov
push
mov
mov
cmp
or
shrl
cmp
call
ret
shll
cmp
sub
or
fisubs
sbb
shlb
hlt
xchg
xchg
adc
in
push
dec
inc
inc
sub
out
xlat
mov
cmp
aad
mov
xchg
mov
inc
xor
mov
add
daa
shlb
add
jae
pop
in
loopne
pop
test
ret
add
js
adc
mov
dec
mov
inc
adc
mov
push
sbb
movsl
stos
push
call
bound
push
scas
lds
jne
inc
stos
jne
mov
sbb
int
and
add
cmp
push
mull
mov
mov
shlb
repnz
add
nop
push
jecxz
lock
sbb
cmp
mov
push
vunpckhps
pop
insb
pop
cmp
int
and
push
pop
add
dec
xor
xchg
push
inc
mov
push
mov
xchg
mov
inc
or
mov
push
xchg
ljmp
jmp
mov
mov
mov
lcall
sarl
inc
cwtl
sahf
xadd
ja
fwait
mov
shlb
icebp
push
sub
jbe
adc
jb
inc
sub
pushf
call
add
push
sbb
mov
xchg
add
xor
nop
pop
xor
mov
mov
cmp
inc
or
outsl
xor
mov
inc
aas
jbe
andl
jmp
and
dec
insb
mov
xchg
inc
jo
outsl
cmp
or
mov
xor
pavgw
adc
add
test
pop
inc
movsb
stos
pop
das
mov
adc
push
add
sbb
scas
mov
mov
jnp
stc
into
adc
stos
inc
sub
xchg
mov
arpl
adc
popf
mov
mov
bnd
sbb
orl
mov
push
add
add
scas
push
sbb
or
push
roll
push
jae
mov
daa
pop
imul
stos
mov
mov
jbe
icebp
stos
scas
push
push
jno
mov
stos
sub
inc
adc
push
imul
mov
test
cltd
and
xor
leave
cmp
mov
sbb
adc
jnp
js
push
inc
mov
xchg
push
clc
aad
es
mov
push
stos
add
je
psubsb
lret
ljmp
pop
jmp
cmpsl
es
aam
movsl
test
xchg
xlat
dec
adc
push
jno
nop
mov
cmp
sub
arpl
pop
test
adc
cwtl
jp
cmp
ret
xor
adc
daa
cmpsb
sbb
lret
int
lds
imul
stc
inc
jns
inc
movhps
ret
inc
icebp
push
xchg
jmp
add
mov
or
cmp
xor
sbb
je
adc
popf
ljmp
mov
sbb
loopne
popf
or
sub
das
rcrb
lret
or
add
pop
ret
jge
outsb
pop
xor
cmp
add
mov
xor
pop
xor
inc
xlat
mov
adc
push
adc
dec
int
or
xchg
xchg
sbb
cwtl
dec
add
out
mov
push
mov
loopne
rorl
pop
addl
mov
out
sbb
adc
loop
sub
pushaw
cltd
repnz
sub
inc
and
pop
lds
ds
mov
jo
sbb
adc
arpl
sub
sub
dec
and
or
into
je
loope
inc
dec
mov
sbb
fs
hlt
icebp
pop
cltd
es
fldl
adc
jmp
addr16
adc
icebp
shr
add
xchg
mov
inc
jo
sub
and
push
sbb
fbld
jae
jge
xlat
cmp
add
pop
sub
cmp
adc
jecxz
sarb
and
divb
xor
mov
sub
repnz
lcall
inc
mov
idiv
insb
cmc
aam
popa
adc
push
adc
popw
ret
push
xor
lods
andb
push
xchg
test
push
push
jne
xchg
mov
adc
popf
add
jne
imul
push
sub
adc
insl
and
cmp
inc
std
or
mov
push
cld
mov
pop
test
xchg
jmp
inc
mov
mov
pop
out
adc
push
push
inc
push
xchg
or
push
stos
test
jge
mov
and
into
mov
lds
roll
dec
mov
js
or
orb
add
mov
test
hlt
sub
sub
add
jae
jb
pop
rolb
sub
dec
or
jb
and
aaa
jnp
out
insb
adc
push
jo
cli
add
push
loopne
xlat
sbb
arpl
movsb
mov
pop
je
or
sbb
adc
dec
hlt
jb
and
add
ljmp
in
push
cmp
cmp
movsl
ljmp
adc
or
xor
sbb
sub
out
test
ljmp
stos
and
jl
push
push
mov
out
sbbb
mov
pop
pop
xor
xor
fistpl
add
popf
jnp
orl
xor
pop
inc
cmp
cld
and
es
xor
mov
jmp
sbb
xor
aad
mov
or
std
inc
imul
dec
test
inc
les
or
jno
sub
test
loope
cmovae
or
int
cmp
or
adcl
sub
adc
negb
push
push
arpl
mov
pop
adc
mov
shl
push
cmp
mov
sbb
mov
sbb
loopne
cld
mov
push
mov
push
rolb
insl
xorl
or
sub
mov
rcll
mov
es
xchg
mov
cs
or
xchg
sub
push
jl
call
ss
mov
lods
sub
mov
negb
or
xchg
rcrb
adc
test
popa
cli
dec
adc
push
cmp
cmp
psubd
sbb
mov
pushf
push
mov
adc
lcall
pop
inc
leave
push
sub
xor
mov
inc
mov
decl
in
mull
daa
xchg
adc
sti
loope
ret
jmp
sbb
mov
insb
int
sub
jbe
shll
push
xchg
ret
push
push
subl
add
enter
aad
push
dec
fst
mov
push
sbb
hlt
cmpl
outsl
shrb
push
inc
jne
orl
xchg
inc
pop
in
push
add
adc
jo
stos
adc
push
xchg
mov
scas
pusha
mov
adc
fwait
jmp
mov
adc
mov
jl
cmp
add
mov
cmp
notb
inc
pop
dec
leave
pusha
push
ret
int3
pop
cmpsb
subl
sub
test
je
les
orb
mov
push
cmp
dec
aam
stos
inc
dec
std
popf
pop
push
jne
lret
nop
add
test
popf
lock
addb
fdivrl
mov
ficomps
jnp
push
adc
je
and
push
and
sbb
cmp
stos
push
lods
add
mov
adc
popa
cmp
push
jae
inc
jno
add
dec
jbe
sub
xchg
xchg
stc
dec
lods
enter
jbe
test
stos
aad
pop
sbb
jne
or
mov
mov
fimull
ror
push
xlat
mov
or
mov
inc
mov
sbb
addl
pop
sti
call
jmp
inc
pop
cmpsb
xorl
aam
insl
xchg
or
adcl
cld
test
or
stos
mov
movsl
scas
mov
mov
and
sbb
notb
xor
add
jp
and
stos
inc
shll
lret
push
clc
ljmp
or
adc
ret
push
push
jp
mov
xor
shll
movsb
dec
cld
push
js
sub
or
sub
or
ds
fsubr
mov
add
sbb
xor
aad
inc
dec
push
add
loope
inc
fidivrs
aad
clc
add
sti
in
xor
push
xor
sbb
inc
push
jb
scas
pop
mov
and
xor
adc
add
sub
inc
push
flds
loopne
cmc
imul
lahf
mov
adc
mov
and
scas
mov
xlat
mov
scas
sbb
and
or
pop
je
mov
add
push
sub
in
push
inc
call
add
xor
adc
pop
cli
jle
jb
and
cmp
stos
jbe
pop
lfs
mov
or
sbb
cmp
sbb
lahf
mov
loope
mov
or
shlb
sbb
icebp
jle
clc
mov
icebp
add
bound
je
lock
pop
adc
pop
scas
mov
or
or
mov
les
inc
icebp
sbb
push
addl
mov
loop
push
push
push
sbb
mov
loop
push
xchg
aas
stos
push
adcl
js
mov
outsb
mov
daa
roll
rcrb
movsl
enter
cmp
in
pop
push
js
cld
lret
lods
stc
test
ret
enter
sbbl
adc
sbb
cs
leave
out
add
mov
leave
pop
jae
jne
add
repnz
rorb
int
sbb
or
mov
cmpsl
xchg
out
fimull
mov
adc
fcom
rorl
cli
xor
push
mov
mov
push
je
push
mov
sub
int3
fdivl
fwait
jne
adc
into
mov
sbb
sahf
lea
cmp
loope
push
out
out
enter
adc
shr
cmpsl
dec
push
lea
cmp
inc
scas
dec
sbb
iret
sar
ljmp
push
les
lret
test
jbe
adc
punpckhbw
xchg
pusha
or
sbb
orb
add
stos
lcall
adc
ficoms
sbb
or
adc
or
or
enter
lds
iret
je
lds
mov
or
push
xchg
add
xchg
xor
outsb
mov
mov
add
stc
xchg
pusha
notl
jnp
sbb
testl
lea
sub
int
or
jb
fcoml
jne
js
xchg
jo
sbb
mov
cltd
sbb
les
mov
mov
jne
bound
into
cltd
insl
out
mov
scas
sub
add
dec
push
mov
sub
es
cmpsb
mov
mov
add
or
mov
xchg
rolb
iret
jle
or
dec
fistl
xor
inc
aam
insl
cmp
xor
mov
mov
out
sbb
jbe
popa
cmp
sub
ljmp
or
or
pop
push
inc
push
mov
lret
pop
mov
shl
test
andl
add
aam
jno
mov
orl
xor
mov
push
xchg
pusha
and
adc
or
ffreep
stos
fcompl
or
xlat
pop
stos
push
loopne
test
shrb
mov
xchg
mov
xor
cld
cmp
adc
inc
mov
movsb
pusha
jo
xchg
inc
or
xor
push
xchg
xor
jnp
decl
push
imull
mov
inc
ret
and
adcb
dec
ret
inc
or
mov
pop
rclb
pop
cmp
pop
pusha
add
repnz
mov
loop
cmp
push
orb
rcl
shll
dec
push
cli
push
and
adc
xchg
rorb
add
stos
dec
xchg
ljmp
adc
sbb
dec
movb
ret
nop
dec
xor
push
inc
leave
or
push
push
or
add
loop
in
xchg
sub
outsl
adc
cmc
add
mov
popf
rcrl
mov
pop
add
emms
cwtl
adc
add
ljmp
ret
dec
stos
mov
xchg
cli
stos
addb
or
mov
jl
or
add
sub
pop
pop
fs
movsb
imul
repnz
push
cwtl
lcall
in
pop
dec
and
rorb
les
addr16
push
mov
xorb
sbb
clc
mov
call
sub
ret
jae
push
and
pop
cmp
rorl
jne
enter
sub
xadd
scas
fists
ljmp
add
xchg
out
sub
stos
adc
negl
ljmp
pop
xor
je
push
cmpsb
sub
shll
xor
jmp
insb
repz
pop
cs
xor
push
loopne
inc
mov
out
aad
sbb
sbb
adc
cmpl
test
inc
sub
subb
lds
shlb
js
or
out
push
inc
fs
and
cmpsb
stos
push
rorl
fsubs
push
add
lds
push
sti
sub
sbb
inc
add
sub
lcall
mov
inc
push
sub
push
rol
xor
or
pop
add
pushf
or
negb
push
pop
push
sbb
aad
jmp
add
data16
cmp
push
rcrb
and
es
xchg
jp
add
push
pop
sub
mov
ljmp
sbb
sbb
add
mov
mov
sbb
inc
inc
lods
enter
sbb
sub
sub
aas
lock
inc
pop
lds
jmp
or
adc
loopne
jg
nop
cmp
in
stos
or
test
cld
jo
pop
mov
mov
or
rcll
jo
cmp
out
mulb
jb
pop
sbb
dec
sbb
add
out
icebp
lds
or
mov
das
mov
add
loopne
sub
cmp
cli
mov
pop
jge
inc
addl
push
push
movsl
out
mov
dec
jo
pusha
add
lret
sbb
push
roll
adc
rcrb
les
xor
xor
xchg
and
cld
jmp
clc
sahf
pushf
xor
cmp
test
popa
insl
andb
xchg
or
ret
mov
shrl
sti
jnp
mov
mov
dec
push
movsb
push
ja
fldt
mov
mov
jb
cs
add
mov
into
lahf
mov
and
scas
js
pop
insl
push
xor
pop
push
out
mov
pop
add
add
sbb
nop
cli
inc
imul
in
push
popf
sbb
mov
xchg
orl
mov
mov
mov
sbb
leave
sbb
mov
rcl
aam
push
movsl
add
add
and
add
adc
jmp
jg
insb
loopne
xchg
sbb
add
fiaddl
icebp
pop
mov
pop
ljmp
push
and
or
adc
xchg
sub
fstl
fcmovbe
pop
add
push
add
lcall
rclb
mulb
dec
aad
push
and
jnp
add
add
jmp
add
shlb
cltd
xor
aam
sbb
enter
adc
sti
add
pusha
or
sbb
adc
jge
fcomip
sbb
out
sub
ret
add
push
test
sub
sti
outsl
cli
push
pop
adc
pop
push
adc
add
rcll
jbe
pop
lret
adc
push
or
push
pop
or
sub
cmp
sbb
push
sbb
jb
pushf
jae
aaa
jg
pop
insl
add
std
jl
insl
jns
and
stos
icebp
xchg
jmp
test
sbb
lods
sbb
xchg
cmp
and
pop
xor
icebp
add
jno
push
loopne
jmp
or
sbb
fsubrs
mov
mov
push
sub
inc
out
mov
xor
sbb
add
or
nop
mov
push
sub
repnz
push
mov
dec
cli
cmp
dec
push
jbe
leave
icebp
mov
mov
push
mov
sbb
sbb
sahf
lods
jmp
push
pusha
cmp
cmp
push
push
movb
add
sbbl
sbb
xor
xor
pop
insb
out
or
lret
and
aaa
iret
inc
add
dec
adc
pop
jecxz
lret
sbb
push
jl
or
add
inc
stc
lcall
jns
adc
into
mov
xchg
stos
mov
icebp
sbb
jno
inc
dec
pop
imul
rorb
mov
pop
enter
out
push
adc
bound
aam
into
in
push
mov
xor
adc
push
xchg
ds
sub
jmp
mov
fidivrl
pop
movsl
xor
or
or
clc
sub
inc
imul
pop
or
lock
lea
adc
jecxz
mov
clc
sub
xchg
jge
push
jbe
adc
sbb
sbb
lock
popa
inc
adc
cmp
outsl
cmp
pop
cmpsl
jg
sarb
push
add
jmp
or
mov
push
push
sarl
xchg
adc
inc
test
pop
test
xor
push
ljmp
inc
cmpsb
pop
sbb
cmp
faddl
dec
adc
and
xlat
push
mov
add
sbb
adc
mov
dec
cmp
ret
cmp
add
mov
sbb
mov
fsubrs
pop
loopne
mov
cmp
ficomps
aas
xchg
pop
jne
jp
dec
dec
inc
push
push
push
push
and
in
inc
pop
xchg
addr16
roll
mov
jge
iret
jmp
nop
add
icebp
dec
inc
add
adc
xchg
jno
inc
add
jge
mov
jmp
rcll
push
pop
out
or
xorl
bound
pop
lcall
adc
adc
rcl
xor
dec
pop
and
shl
adc
jl
out
mov
jg
and
enter
pushw
and
rolb
leave
mov
jo
lcall
xor
pop
repnz
inc
loope
sbb
out
or
leave
push
movsb
mov
cmp
push
fbstp
sbb
orl
inc
add
out
push
and
scas
jecxz
call
mov
adc
push
xor
scas
mov
mov
jnp
addb
daa
out
adc
jo
lret
push
push
stos
inc
sbb
cs
mov
push
pop
cmp
idiv
into
fmuls
sarb
and
int3
add
leave
push
inc
push
xor
or
popf
rolb
pop
cmp
clc
add
sbb
fiaddl
xor
push
lcall
inc
push
push
rorl
cmpsb
push
shl
push
lods
aam
dec
movsb
orb
or
and
push
roll
jnp
aam
lcall
adc
mov
or
fwait
into
les
cs
or
xor
xchg
arpl
mov
mov
lret
lock
adc
or
sub
pop
adc
in
xchg
mov
addb
add
cmp
pop
and
xor
jge
or
adc
fs
pop
push
adc
mov
lcall
sbb
test
inc
add
push
sub
jo
dec
shrl
dec
sbbl
adc
pusha
rolb
add
sub
mov
cwtl
adc
int
sub
popa
shlb
lock
push
push
out
inc
adc
lds
jae
cmp
dec
mov
add
cmp
add
jmp
sub
loopne
fstpl
in
xor
fcoml
pop
xor
in
xor
xchg
cmp
add
aaa
decb
stc
mulb
inc
dec
push
ror
cmp
or
jl
sbb
adc
or
add
inc
mov
lcall
push
addb
scas
mov
shll
inc
in
rcrb
cmpsb
scas
roll
aad
pop
mov
xchg
aam
mov
push
popa
mov
pusha
std
add
loopne
es
decb
and
push
pop
popf
mov
into
inc
movsb
dec
cmp
mov
pop
and
pop
pop
add
ret
inc
test
hlt
fimull
add
xchg
test
sbb
lret
inc
jae
mov
rolb
into
fldl
les
lock
es
adc
sub
push
mov
mov
test
xchg
sub
adc
nop
sub
vmaxss
push
sbb
call
sbb
hlt
shrl
mov
push
mov
inc
arpl
sbb
mov
and
scas
dec
sbb
sbb
repz
push
cmp
adc
cmp
into
out
xchg
inc
and
and
mov
cmc
cmpl
add
adc
pop
scas
mov
push
inc
loopne
add
insb
shr
push
dec
xor
stos
or
and
rorb
push
inc
ljmp
lds
push
je
sbb
adc
push
scas
repz
mov
xchg
in
push
mov
cs
das
call
xchg
jns
cmp
mov
mov
insb
addl
jbe
pop
jne
xorl
inc
jg
xor
sub
pop
mov
pusha
mov
adc
pop
inc
jge
imul
js
mov
push
push
jge
xchg
cltd
jg
push
mov
orb
ret
js
jo
cmp
xchg
mov
adc
loope
add
and
cmpsb
sti
and
test
ret
adc
xchg
call
mov
sub
and
add
pop
dec
add
sub
xchg
enter
iret
push
push
xor
pop
sbb
mov
movsl
inc
bnd
jae
mov
jae
inc
jns
push
pop
insl
test
testl
stos
add
sub
mov
add
leave
bts
mov
scas
or
mov
rcrl
or
jne
mov
push
fstpl
mov
cltd
ficomps
sti
je
or
ljmp
adc
mov
inc
mov
into
inc
add
push
adc
daa
pop
mov
cmpsb
xchg
enter
mov
xchg
adc
xlat
or
lret
int
add
mov
repnz
test
jne
xor
push
push
mov
push
out
push
pop
push
sbb
mov
xchg
pop
rcrl
push
out
mov
sbb
int
cmp
mov
xchg
shlb
ljmp
cmpsb
mov
in
aad
ficoml
popa
outsb
lock
rcrl
sbb
sbb
inc
lock
icebp
fbstp
cltd
mov
ret
mov
or
xor
add
push
push
insl
jmp
aad
mov
pop
pop
das
loope
les
mov
push
push
in
lret
xchg
mov
stos
pusha
inc
push
push
sahf
fnstsw
jno
fildl
mov
cmp
adc
sbb
push
popf
bnd
loopne
xchg
xor
jno
repnz
push
add
lcall
mov
dec
shr
punpckhbw
add
mov
sbb
or
lock
mov
adc
lcall
jo
jo
inc
jmp
sub
inc
push
test
sarl
pop
sub
mov
adc
and
mov
or
cli
inc
jmp
pop
roll
adc
adc
clc
sbb
lret
dec
push
adc
pop
movb
out
and
fisttps
or
test
adc
cmpsl
mov
sbb
test
mov
mov
pop
je
adc
mov
pop
pusha
add
dec
cli
add
adc
push
js
or
inc
lock
sbb
cmp
sbb
out
mov
jo
adc
shr
in
pop
xor
lret
add
cltd
outsl
cmp
movsb
enter
add
or
enter
cmc
mov
bswap
jmp
xchg
push
sub
xchg
cmpl
mov
rol
loopne
dec
sbb
aad
rcrb
jnp
es
lods
fwait
icebp
mov
xrelease
push
dec
bound
cmp
ja
es
sub
mov
call
sub
adc
push
in
or
push
pop
push
mov
fmuls
sbb
stos
adc
mov
xorl
lcall
loopne
push
mov
imul
sub
pop
loope
jno
push
push
test
cmp
jns
inc
loop
cmp
jno
mov
out
pop
xchg
and
dec
add
add
xor
hlt
test
mov
jecxz
push
xor
pusha
movsb
icebp
adc
mov
and
insl
and
or
into
in
inc
or
add
xor
xor
add
sbb
sbb
daa
loop
arpl
push
push
fsubrl
push
push
bound
push
push
or
cmpsl
mov
adc
cwtl
jne
mov
and
ds
push
fs
inc
xchg
or
es
fstl
cmpsb
andb
rcl
addl
sub
or
notb
xor
pop
sbb
push
jb
dec
loopne
or
ss
dec
fs
clc
rcr
cmp
mov
cltd
rcll
mov
mov
hlt
sub
adc
mov
or
test
cmc
xchg
push
jno
add
enter
loope
or
or
movsb
push
mov
ret
dec
loopne
jne
ret
mov
push
daa
popf
clc
push
pop
outsb
shl
out
rorl
sbb
lcall
ja
pop
scas
ret
mov
cs
int3
scas
and
call
aad
xchg
cmp
scas
mov
mov
xor
and
loopne
fimuls
out
add
sub
add
adc
loop
mov
xor
or
sbb
mov
je
add
push
cmc
adc
shll
adc
jo
pop
sub
jecxz
push
or
dec
bound
bnd
xchg
adc
add
ret
inc
sub
xor
add
inc
jle
add
mov
dec
fstpl
leave
or
scas
push
push
addb
adc
test
loope
mov
jmp
inc
inc
jmp
pop
test
enter
test
sub
mov
shl
dec
cmp
ret
cli
push
mov
sub
xchg
or
stos
jmp
pop
cwtl
sahf
movsl
sarb
inc
or
cmp
push
cli
test
rcrl
in
push
mov
les
orb
mov
lock
insl
lock
sbb
xlat
xor
out
adc
out
adc
js
stos
cs
in
inc
add
xchg
add
mov
sbb
aad
add
xchg
mov
cmp
jne
or
into
cwtl
call
pop
mov
add
xor
jno
lods
stc
pminsw
jo
jne
popa
push
add
ror
movsl
fsubl
add
mov
and
xor
mov
cmpsb
add
je
and
lret
jnp
add
jo
ss
push
jno
scas
jge
jno
sub
les
xchg
add
arpl
sbb
lods
imulb
mov
into
sbb
popf
leave
jmp
cmp
push
mov
dec
mov
and
adc
add
daa
cli
addl
lock
ret
lock
mov
or
fs
out
mov
adc
in
xchg
dec
lods
add
mov
sbb
xor
adc
xchg
xlat
sti
push
push
pop
or
and
mov
jae
pop
jge
pushf
add
sub
or
inc
ja
cmp
cmpsb
add
sub
inc
addb
and
sbb
sub
into
and
add
dec
lods
add
adc
push
enter
dec
shl
imul
jo
je
int3
sbb
mov
mov
pop
movsl
adc
pop
lret
enter
cmpsl
das
xor
in
mov
adc
push
jg
jne
mov
hlt
inc
in
inc
fwait
sub
push
rolb
insb
pop
stos
jmp
jmp
jmp
add
cmp
mov
dec
mov
mov
add
dec
pushf
jae
sbb
call
jne
rorb
push
adc
add
jb
and
test
loopne
sbb
and
pop
addr16
mov
mov
and
or
pusha
scas
fs
hlt
stos
dec
pop
cmp
subb
mov
jo
sbb
cld
mov
adc
sbb
mov
sbb
int3
mov
or
roll
jbe
pop
pop
cmc
test
aaa
mov
loopne
lods
add
mov
mov
push
cmp
mov
cs
mov
cmp
push
in
xor
in
xchg
mov
aam
test
sarl
in
push
lds
hlt
push
xor
clc
lea
mov
ffree
mov
sbb
lret
adc
sbb
stos
and
shrl
je
add
dec
dec
inc
add
jno
lcall
inc
xchg
stos
jbe
xchg
adc
stos
stos
adc
cmp
orl
and
jb
rclb
js
mov
push
lock
sbb
sarb
scas
fwait
test
lock
mov
addl
mov
push
pop
daa
or
sub
or
pop
stos
xor
stc
leave
adc
stos
dec
lds
daa
push
sar
mov
leave
loop
mov
addl
out
roll
sub
adc
mov
sbb
sub
mov
ja
push
jne
and
je
repnz
loopne
js
push
outsb
sbb
mov
cwtl
sub
das
fs
pop
dec
test
jb
or
hlt
cmp
cld
ljmp
cmc
xchg
add
cmp
push
test
add
pop
sbb
mov
xchg
xor
in
push
push
out
andl
movsb
or
or
cmp
rcr
add
scas
push
cmp
in
into
hlt
adc
and
inc
push
xor
lret
lock
push
add
push
jge
popa
sbb
in
clc
and
inc
sbb
test
stc
std
enter
jo
addl
mov
adc
pop
add
ret
testl
xchg
push
shlb
inc
xchg
adc
sub
push
sub
add
adc
mov
out
jbe
adc
jb
mov
xchg
roll
inc
repnz
adc
add
sbb
mov
add
mov
push
es
dec
scas
pop
xor
sbb
fsts
add
and
mov
xchg
pop
and
aad
cwtl
insb
loopne
sbb
sbb
dec
hlt
jmp
inc
daa
addb
test
add
push
mov
ret
push
cwtl
push
daa
inc
and
dec
pop
sbb
mov
call
add
jnp
lods
movsl
push
xchg
and
stc
mov
and
fisubs
shl
and
lea
jo
push
bound
addr16
shrl
xchg
out
adc
andb
xor
je
add
push
test
cmp
cmp
loopne
cmp
adc
mov
dec
adc
and
aam
xor
insb
sub
jo
bound
xchg
incb
repz
or
mov
and
shrl
sub
add
leave
movsb
aaa
mov
push
pop
jnp
stos
pop
xchg
sahf
push
pop
lock
mov
pop
mov
mov
jns
repnz
orl
jl
mov
mov
pushf
xchg
rclb
loop
add
test
mov
stos
shlb
shrb
lret
aas
pop
rorb
test
mov
ret
dec
add
sbb
pop
pop
test
or
xor
cld
xchg
ss
enter
jl
xor
insb
popa
enter
repnz
xor
stos
or
mov
push
int
data16
sub
pop
mov
movsl
push
js
mov
aam
push
es
adc
lock
sub
or
cmp
xorl
dec
jb
rorl
std
dec
sbb
or
push
mov
mov
leave
mov
sbb
dec
or
movsb
cmpsl
or
cmp
mov
add
pusha
pushf
cmc
add
js
adc
cmpsb
call
jmp
fstpl
fwait
icebp
popf
mov
jne
montmul
cmpsb
test
lea
fsubrp
pop
test
add
mov
and
rolb
cmp
ja
or
mov
loope
loopne
dec
sub
or
stos
dec
je
sbb
jae
xchg
xor
jno
out
xor
cwtl
cmpb
mov
add
push
push
sti
push
sbb
scas
or
push
pusha
shl
in
enter
and
fisubrs
push
rolb
pop
push
sbb
aad
shrl
add
jne
roll
lret
cmc
sahf
add
rolb
aad
daa
fdivs
shll
sbb
sbb
push
adc
push
and
push
push
jp
rorb
pop
insl
aad
push
shlb
sub
inc
sbb
lds
mov
xchg
pop
bound
inc
push
rclb
pop
leave
pop
aam
dec
inc
aad
push
int
ret
add
test
scas
sub
pop
roll
incl
push
inc
js
testl
adc
or
or
lret
loop
js
loopne
adc
inc
roll
push
jo
push
lods
push
es
test
ljmp
or
sarb
jo
xchg
call
sahf
dec
les
push
sbb
test
sbb
add
ficoml
stos
adc
stos
dec
rolb
fwait
push
sbb
loop
xor
jl
pop
add
popl
mov
ljmp
adc
inc
and
cli
jo
dec
scas
loopne
repnz
call
or
xor
push
pop
adc
add
ficoml
rorb
test
es
inc
fists
or
push
mov
or
std
dec
rcll
scas
adc
xchg
and
or
addr16
aad
and
or
mov
push
jb
lock
into
xor
mov
shl
adc
push
mov
add
mov
test
mov
fcom
fstl
mov
insl
jle
into
aam
push
repz
addl
mov
inc
fwait
lds
hlt
ljmpw
outsl
cmpsb
data16
scas
test
adc
add
push
inc
test
lods
push
rorb
adc
insb
and
sub
rorl
push
movsb
add
shlb
pusha
adc
pop
adc
arpl
sbb
mov
inc
loop
inc
test
add
jne
push
mov
mov
xchg
rcrb
adc
stos
push
movsb
add
sbb
adc
repnz
inc
xchg
jnp
sub
push
xor
or
sbb
int
sbb
adc
dec
loop
int
loope
xchg
icebp
mov
loop
pop
mov
mov
out
das
push
jne
inc
ret
bound
pop
gs
dec
call
inc
lods
popf
mov
cwtl
pop
mov
movsl
leave
sub
adc
adc
rcl
call
rclb
lahf
or
xchg
adc
and
std
pop
ljmp
push
or
or
push
sbb
imul
scas
inc
test
aad
data16
ljmp
adcb
movsb
adc
adc
rolb
inc
int
clc
sbb
mov
add
lds
ret
stos
loope
scas
pop
push
rcr
shl
or
data16
movsb
test
jb
inc
insb
push
xchg
pop
inc
rorb
inc
xor
push
jb
and
push
clts
ret
in
insb
inc
mov
xor
icebp
jecxz
cmp
pop
lds
cmpsb
dec
movb
lret
sbb
stc
or
sbb
sub
into
mov
adc
xor
cmpsb
lret
jns
push
push
pushf
push
add
cmpl
or
push
outsb
rcrl
jl
add
in
sbb
sbbl
out
ret
lret
es
push
outsb
outsl
sub
jle
xchg
movsb
xlat
out
push
ret
loop
and
aad
push
sub
shll
adc
push
testl
imull
leave
push
orl
inc
mov
mov
sbb
add
adc
xchg
or
sbb
inc
push
clc
insb
jle
jo
inc
lret
inc
push
push
dec
cmp
adc
inc
test
or
mov
notl
notl
loopne
cmp
add
and
push
mov
mov
test
mov
cmp
aam
pop
xchg
enter
dec
push
jo
test
mov
mov
lock
adc
xor
jl
sbb
jmp
lock
fimull
inc
jno
ret
iret
sbb
or
xchg
cli
push
cltd
jle
rcll
into
fsubrp
sbb
scas
sbb
sbb
out
addb
stos
add
je
lds
push
pop
sub
sub
and
in
inc
test
add
ret
mov
nop
adc
or
in
or
sub
ja
stos
sbb
lcall
xor
mov
je
sub
mov
add
jge
xchg
or
nop
ret
xor
push
cmp
sub
test
adc
movsl
jp
lret
lcall
ret
pop
cltd
xor
loop
les
sbb
rclb
mov
jb
ljmp
lret
jnp
cmpsb
push
sub
mov
xor
or
or
xchg
sbb
insb
cmp
push
sbb
lea
js
outsb
dec
inc
cmc
in
add
cmova
mov
mov
jo
or
adc
sbb
dec
inc
inc
jo
loopne
fmull
fsubl
in
sub
add
pop
hlt
inc
push
scas
jl
mov
mov
int
js
ret
popf
orb
clc
add
aaa
shrb
push
jmp
out
lock
cmp
aaa
and
or
sbb
push
mov
push
and
fisubrs
call
push
jecxz
or
lock
mov
xlat
and
cmp
jbe
xor
or
into
enter
add
ret
les
add
add
popa
mov
add
add
shrl
shr
and
cmc
xor
sub
xchg
xlat
ret
fs
push
das
js
and
repnz
add
push
pusha
add
shl
cmpsb
mov
fsubrs
push
pop
cmp
mov
xchg
enter
push
inc
shll
or
test
dec
mov
pop
and
jge
aam
testb
cmc
mov
sbb
adc
add
sbb
adc
dec
sahf
pop
aad
sub
out
push
jl
leave
lds
roll
lods
icebp
jo
sarb
pushf
imul
aas
cwtl
cwtl
push
mov
mov
add
push
mov
shlb
into
push
popa
inc
sbb
pusha
or
aas
mov
roll
cmp
sbb
xor
or
es
insl
out
shrb
cli
in
mov
js
xor
ljmp
add
xor
addb
lods
sbb
sbb
add
push
push
or
lods
sbb
mov
in
mov
push
in
inc
jae
mov
cmpsl
js
sub
hlt
push
stos
xor
dec
mov
in
dec
mov
adc
fadd
push
leave
pop
and
test
inc
ret
mov
out
popa
add
xor
stos
push
pop
mov
and
lcall
mov
push
pop
shr
fcoms
dec
sbb
add
xchg
push
cmpsl
dec
inc
mov
daa
sbb
xchg
shll
push
or
sub
jp
or
add
pop
addr16
loopne
stos
in
add
inc
add
negb
cmpsl
pop
movsb
std
pop
pop
movsb
inc
cmpl
inc
pop
sub
ret
push
add
ret
xor
jo
add
hlt
push
in
jp
mov
adc
cmovl
sub
icebp
ljmp
xor
leave
addr16
orl
cmpsl
out
xor
pop
jo
mov
iret
call
mov
orb
sub
fs
arpl
cmpsb
mov
xor
rcll
jecxz
les
push
sub
arpl
scas
sbb
pop
into
push
ds
xchg
rcrb
outsb
adc
imul
test
clc
push
add
shll
add
pop
mov
cltd
add
pop
dec
or
cmp
cltd
mov
jl
sub
push
movsb
sub
rcll
test
lcall
sbb
or
pusha
stos
mov
xchg
xor
rolb
adc
call
mov
add
xor
add
sbb
dec
xorb
into
movsl
orb
js,pn
push
push
xor
cmp
jne
push
pop
mov
mov
cmp
inc
and
inc
xchg
sti
push
and
sbb
stos
add
orb
iret
adc
push
sub
xor
stos
sarl
push
add
mov
add
int
cmp
inc
out
in
mov
dec
enter
fcoml
cltd
insb
push
subb
mov
int
push
sbb
xchg
test
adc
inc
pusha
sbb
xchg
jmp
pop
loopne
popf
ja
jnp
adc
stos
hlt
lcall
fwait
or
adc
adc
adc
pop
push
orb
xchg
insl
loopne
xor
xor
push
hlt
sbb
dec
lds
sbb
cmp
shl
ljmp
push
icebp
inc
scas
jle
push
rorl
aad
rclb
cwtl
cmp
lock
lahf
or
pop
in
mov
xchg
jmp
push
adc
jno
inc
push
loopne
xchg
cwtl
rorb
inc
mov
outsb
push
fnsave
adc
push
pop
push
cmp
and
aad
or
leave
mov
or
loop
imul
push
inc
shl
xor
inc
insl
mov
nop
xorl
pop
shll
dec
mov
fidivrl
xor
pop
push
in
addb
inc
movsb
test
sub
loopne
test
push
or
clc
adc
jbe
andl
mov
dec
in
add
int
in
pusha
enter
ja
ret
mov
adc
rorl
dec
in
lret
add
imul
add
sahf
xor
rcrb
add
add
cmp
adc
inc
xor
inc
and
inc
fidivrl
addr16
std
sub
mov
stos
cmp
adc
adc
inc
int3
and
adc
mov
adc
cmp
dec
sbb
les
pop
adc
mov
rolb
adc
test
mov
push
dec
xchg
jbe
sbb
sbbl
adc
flds
roll
mulb
rolb
xchg
shl
mov
or
sub
fnstcw
inc
xchg
ljmp
jbe
sbb
dec
mov
mov
push
add
scas
clc
xor
add
icebp
ret
cmc
sub
push
push
stos
shlb
add
xchg
es
rolb
mov
add
push
aam
jb
dec
outsl
xor
movsl
pop
mov
lods
mov
bswap
and
or
add
loopne
es
test
xchg
add
push
in
dec
or
daa
and
or
push
add
loope
cwtl
push
popa
sub
and
add
jns
addb
js
adc
adc
aaa
sub
fidivrl
push
xlat
and
adc
rorl
push
mov
pop
xor
cwtl
sbbb
mov
mov
pop
popa
inc
push
out
add
inc
mov
jmp
mov
loopne
dec
and
mov
ret
xor
jno
pop
in
inc
lret
inc
test
adc
jb
jmp
and
and
ficoml
sarl
stc
cmc
mov
mov
or
shll
cs
sbb
mov
xlat
mov
outsb
rorb
clc
rolb
add
push
and
mov
inc
push
mov
xor
inc
push
xor
daa
ret
je
xor
mov
xor
shll
mov
push
pop
push
push
test
xor
adc
sbb
xor
mov
push
mov
pop
jl
std
push
push
pop
sbb
daa
setno
or
and
mov
or
mov
or
and
inc
sbb
jae
dec
inc
adc
jb
sbb
mov
inc
cmpsl
mov
sub
or
lds
add
mov
sbb
lret
and
insb
mov
add
adc
pusha
sub
add
cmp
leave
icebp
jmp
or
pop
inc
pop
mov
mov
mov
adc
stos
pusha
sub
push
and
inc
leave
xor
movsl
push
adc
add
in
add
push
jns
daa
pop
lret
orb
pop
rorl
rcl
mov
rclb
sub
sub
incl
sar
dec
push
xchg
loope
cmp
and
and
push
pusha
mov
into
mov
jg
test
push
jb
and
push
push
jl
sub
cmp
jae
subl
test
add
aaa
push
push
add
mov
sbb
dec
mov
xor
aad
mov
loopne
in
mov
sarb
or
mov
sub
cmp
mov
dec
into
ljmp
stos
push
push
inc
bound
mov
adc
sub
mov
cmpb
imul
pop
sahf
xor
xor
sbb
lds
xorb
push
or
push
dec
mov
push
mov
cs
stos
and
or
or
out
ljmp
jnp
rorb
sbb
movsb
adc
xchg
andb
mov
into
lret
rclb
jb
sub
hlt
add
test
aad
pop
inc
icebp
dec
xchg
pop
std
aam
add
xor
mov
pusha
and
or
test
xchg
add
add
inc
test
cli
cvtps2pi
add
cmp
push
call
mov
aaa
mov
lock
testb
out
add
aad
leave
and
push
and
adc
sbb
add
sbb
mov
and
test
out
or
pop
inc
mov
pop
xor
mov
lcall
dec
insb
shrl
pop
pushf
mov
and
and
mov
dec
sbb
popa
and
adc
dec
sbb
pop
es
std
adc
pop
pcmpeqb
ret
dec
inc
push
push
sub
insl
xchg
jb
mov
ret
inc
rcrb
jge
ret
je
in
mov
and
and
sub
cmp
push
lret
dec
es
in
call
adc
ret
cltd
jb
or
enter
rcrb
out
inc
mov
call
aas
aaa
dec
inc
dec
adc
das
rorl
add
dec
mov
push
test
cmp
dec
mov
jne
sub
xchg
push
push
push
sahf
stos
pop
and
lock
cmp
lods
adc
add
push
cmp
cmp
sahf
sbb
ret
push
andb
rclb
sar
add
sbb
push
mov
je
ret
jg
js,pt
xchg
push
inc
in
lds
jb
testl
cs
or
and
insl
and
rcrl
xor
rcrb
je
xlat
or
mov
and
int3
sbbl
dec
aaa
pop
scas
shl
sbb
pop
inc
adc
inc
pop
add
or
arpl
sbb
sub
mov
mov
push
adc
enter
sbb
mov
sbb
pop
jp
xor
pop
call
inc
mov
mov
idivb
push
js
call
mov
inc
arpl
addr16
mov
inc
add
js
jo
push
loope
mov
mov
jp
or
rclb
xor
pop
sub
mov
insl
or
mov
mov
aam
ret
out
sbb
push
xor
push
push
dec
mov
cmp
mov
and
data16
push
scas
push
in
sub
in
movsb
sbb
or
or
les
sahf
iret
in
xchg
stos
jne
jl
sbb
add
sbb
loopne
lahf
sarb
std
fiadds
xor
sbb
repz
jne
mov
xorb
sbb
sbb
pop
add
and
jbe
and
into
ret
repnz
push
lret
cmp
ljmp
mov
cmp
lock
bound
cmp
cwtl
fisttps
xor
push
push
sbb
xor
in
enter
ret
daa
ret
rcr
or
add
add
mov
lock
push
adc
add
test
sbb
out
add
rcrb
popl
imul
mov
xorl
jns
sbb
inc
adc
orl
test
lret
or
daa
and
popa
or
mov
push
sbb
sub
jne
push
sub
jns
shll
xchg
pop
cltd
call
ja
cltd
jp
xor
push
dec
mov
aad
shll
jne
inc
test
lcall
add
cwtl
addb
inc
adc
rorb
pop
xor
pop
push
leave
icebp
push
inc
and
pop
jecxz
add
adc
hlt
sbbb
cmpsl
aam
cltd
push
jb
push
mov
ljmp
push
cmp
popa
mov
lds
add
mov
addr16
and
adc
pop
cltd
sub
cwtl
and
and
dec
pop
add
mov
fmuls
mov
or
adc
dec
adc
loopne
and
push
adc
cmp
mov
adc
loop
pop
mov
sub
jno
dec
sub
inc
loopne
xchg
test
add
mov
add
test
jp
or
lods
jno
mov
cltd
mov
mov
lret
cmp
inc
pusha
cmpb
or
sub
in
les
negb
enter
mov
sub
adc
out
ljmp
mov
xchg
pop
mov
in
or
mov
sbb
out
or
xchg
push
push
leave
vfrczpd
add
lret
jmp
ret
loope
push
inc
dec
sub
push
cmpsb
adc
lret
jo
pop
mov
pushw
sub
arpl
lods
sub
rcll
or
pop
adc
add
push
in
inc
nop
dec
add
pop
lea
mov
test
adc
jbe
sbb
rol
mov
pop
lods
rorb
inc
aas
enter
adc
test
stos
ret
addb
enter
bound
repnz
add
push
loop
push
xchg
push
iret
jl
xor
jae
pop
sbb
fdivrl
adc
pop
mov
xchg
mov
sub
shl
sub
inc
sti
aaa
jns
or
dec
lods
lret
in
adc
stc
mov
jo
sbb
fucomip
adc
and
sub
jne
inc
mov
mov
lret
inc
cmpsb
addb
push
add
lret
lds
mov
adc
and
mov
push
ficoml
add
shrb
or
call
or
xor
mov
and
aaa
rcl
shlb
add
sub
mov
mov
pop
push
mov
cli
adc
aas
and
test
sbb
push
or
mov
add
insl
hlt
push
ret
adc
push
push
es
sub
push
aam
mov
sbb
or
sbb
fidivs
mov
and
xchg
imul
or
outsb
sub
xor
mov
mov
dec
add
or
add
test
lods
loopne
ds
js
inc
jecxz
sbb
gs
ljmp
inc
pop
pop
les
rclb
rolb
or
adc
xchg
rorb
hlt
and
or
or
lret
out
sbb
mov
xorl
in
push
mov
jecxz
xchg
add
imul
adc
push
mov
add
add
insb
push
arpl
lods
daa
ret
mov
xchg
push
shll
push
addr16
and
mov
xchg
xchg
add
mov
pop
popl
in
push
jmp
cmp
push
or
adc
jo,pn
and
cmc
sub
rorl
or
repz
mov
sbb
scas
jb
mov
lcall
sbb
xor
xchg
jns
mov
in
out
lret
inc
add
cltd
push
push
movsl
add
aad
xor
xor
lcall
ret
sub
stos
daa
pop
jge
dec
push
data16
adc
bound
or
add
fdivs
jb
dec
and
pusha
push
movsb
inc
sahf
jae
mov
jo
mov
xor
and
mov
shlb
cmp
xor
cmpsb
insl
pop
sbb
mov
jno
cmp
dec
rorl
int
pop
push
add
push
imul
adc
lea
sbb
je
and
ljmp
inc
loop
mov
cmpsb
cmp
mov
ret
addb
mov
xchg
mov
add
mov
mov
mov
push
pop
or
xchg
ret
inc
enter
add
stc
push
push
dec
adc
adc
and
rcrb
xor
or
shrb
xchg
shrl
popa
imul
rclb
mov
pop
lea
inc
fs
notb
stos
pop
mov
sub
push
xchg
add
rclb
add
add
add
jmp
fsts
mov
inc
pop
iret
ror
xchg
loop
sbb
mov
insl
and
xor
add
pop
and
rolb
push
jmp
inc
sti
sub
sbb
push
pop
call
lock
jp
sub
movsl
adc
imul
pusha
xchg
adc
push
mov
rorl
pop
adc
int
sbb
dec
int3
mov
call
mov
push
dec
or
rclb
jmp
mov
pop
mov
fmuls
adc
fwait
lea
sbb
or
addr16
loopne
inc
sub
xor
mov
push
push
dec
xchg
add
das
add
xchg
adc
xchg
or
shrb
or
add
in
push
xor
aas
cmc
sub
add
subb
shrl
push
rorl
and
ljmp
adc
sarb
rorb
fcoml
jns
xchg
ret
push
stos
pop
push
xchg
mov
push
pop
sbb
ret
call
add
daa
pop
into
mov
mov
sub
dec
rorl
fcmovnb
jecxz
mov
scas
pop
pop
add
lock
xor
push
jnp
lret
les
sub
into
or
dec
and
cmp
or
push
pushf
adc
mov
adc
mov
les
pop
adc
xor
loop
push
mov
mov
add
fnsave
push
dec
inc
scas
rorl
fildl
ljmp
lds
rolb
or
inc
push
push
xor
ljmp
rorl
loop
rorb
xchg
sbb
adc
cltd
jmp
or
adc
cmpsl
xor
call
mov
out
int3
or
into
outsb
cmp
mull
andb
add
loopne
or
shlb
dec
sbb
inc
add
push
pop
and
aad
nop
aas
in
aam
add
add
stos
dec
xchg
pop
aam
push
ret
jmp
add
sbb
popf
sbb
jle
pusha
sahf
add
adc
xor
add
or
inc
rclb
loope
or
or
jo
sub
cwtl
or
xchg
mov
mov
sub
fcmovne
xchg
mov
push
push
daa
pusha
test
loope
loope
test
push
mov
enter
jb
pusha
mov
sub
into
pop
aam
adc
adc
into
add
or
cmp
frstor
adc
sbb
inc
or
adc
je
adc
adc
push
xor
or
push
dec
or
sbb
mov
ret
movsb
push
sub
lret
dec
add
adc
mov
pop
pushf
rcrl
mov
andl
dec
sub
pop
and
sub
mov
hlt
jo
push
push
adc
or
add
or
popf
sbb
mov
inc
push
inc
sbb
lar
add
jp
mov
xor
shlb
mov
adc
int3
test
add
shlb
add
ljmp
xor
addr16
adc
inc
sbb
mov
inc
or
rcl
add
sbb
sbb
lock
ljmp
add
loopne,pt
sub
xor
mov
sbb
shrl
mov
mov
je
sbb
cli
jbe
or
outsl
mov
pusha
and
mov
lock
test
adcb
cmp
std
xchg
xor
adc
arpl
push
push
test
dec
daa
aam
cmp
clc
xlat
add
pop
mov
fmuls
and
xorb
push
or
stos
push
leave
adc
push
cltd
testl
lcall
jle
popa
or
sub
cmp
add
or
adc
push
arpl
xchg
sbb
aam
and
lods
cmpsb
adcl
imull
mov
jmp
fdivrs
add
mov
subl
pop
and
inc
cmpsl
test
cmp
cs
adc
inc
xchg
stos
push
pop
push
xor
and
inc
or
fnstenv
ljmp
pusha
inc
outsb
push
xor
push
or
negl
add
loope
inc
es
movsb
push
xor
lds
push
sub
mov
stos
push
fisttpl
pshufw
pop
faddp
popa
cmpsb
sbb
mov
mov
sbb
jl
mov
xor
mov
out
xlat
lock
add
dec
adc
xchg
ficompl
jmp
jmp
dec
push
mov
out
adc
pop
push
push
sbb
test
int
push
daa
enter
pop
add
stos
mov
cmp
add
pop
je
sub
test
mov
lcall
test
add
pop
xor
push
push
mov
sub
mov
popf
jge
xchg
mov
mov
mov
jg
mov
sub
sbb
add
push
lahf
xlat
adc
xor
add
add
adcb
mov
test
fistps
push
cwtl
bound
adcb
cmc
ljmp
push
mov
sub
mov
in
push
nop
jmp
mov
push
jnp
adc
and
or
or
add
add
mov
mov
outsl
ret
push
sbb
add
add
bound
movsl
xchg
and
sbb
rclb
xor
xchg
add
lods
sbb
movl
aad
cmp
sti
xor
inc
add
inc
hlt
hlt
add
or
iret
dec
sbb
inc
dec
xor
je
loop
push
or
and
out
gs
push
lods
jae
insb
add
call
dec
adc
cmp
push
cmp
imul
shrl
fcoml
je
and
sbb
jb
ss
pushf
sub
add
pop
adc
xor
mov
push
call
mov
lds
mov
fistps
sbb
popa
cs
pop
xor
lret
xchg
inc
nop
test
pushf
jbe
orl
sub
pop
add
pop
push
add
or
and
sbb
fs
aaa
sbb
leave
adc
mov
inc
or
lret
fldenv
sahf
fadd
push
pushf
inc
je
or
out
inc
cmp
popa
jl
sbb
inc
xchg
push
cmpsb
push
stos
inc
mov
stos
inc
mov
js
js
or
push
pop
shll
push
or
adc
push
push
mov
push
out
inc
test
xchg
xor
adc
mov
movsb
int3
pushf
scas
ljmp
jae
inc
mov
add
roll
mov
lock
cltd
mov
lods
dec
xchg
mov
adc
das
sub
stc
loop
pop
push
jnp
ja
test
popa
movsl
mov
pop
sbb
test
adc
lcall
adc
push
movsb
or
jo
or
mov
add
inc
adc
mov
cmpb
out
sbb
pusha
xchg
push
jb
dec
and
arpl
imul
icebp
pop
or
jle
sub
jmp
mov
xchg
xor
inc
rcr
dec
adc
adc
lea
and
push
adc
push
aam
in
lcall
insl
in
sbb
pop
mov
enter
jp
fdivl
lods
or
push
dec
mov
sarb
aas
sbb
inc
lock
sbb
pop
or
lock
mov
pop
stc
ret
jb
sub
aam
pop
mov
cmc
xchg
ror
inc
in
mov
shll
inc
cmpsb
and
dec
fmul
xor
inc
add
and
lcall
push
sbb
shlb
sbb
sbb
xor
pushf
imull
imul
das
xchg
das
and
lods
push
and
sub
int
mov
stos
loope
adc
add
and
add
mov
sbb
push
les
enter
inc
nop
lods
dec
jno
add
sub
pusha
xor
or
jle
dec
xor
inc
xor
mov
popf
push
test
dec
jnp
push
pop
inc
decb
sbbb
ds
addl
add
ret
pop
or
or
icebp
inc
in
sbb
mov
div
xorb
add
pusha
dec
mov
int3
xchg
loopne
push
aam
and
sub
push
mov
mov
fs
lods
loopne
das
inc
push
mov
pusha
dec
mov
sbb
aam
add
pusha
push
lods
jb
sub
push
or
mov
sbb
pop
add
in
rcrb
int
dec
shlb
ret
push
addr16
orb
push
jne
outsb
mov
mov
cmp
adc
insl
cltd
test
or
dec
pusha
fadd
lods
sbb
aas
addr16
js
sub
ret
sahf
je
lods
push
pop
inc
lds
push
xchg
lock
or
lea
and
andb
mov
push
cltd
addb
inc
or
xor
popa
negb
inc
xor
notl
push
sbb
dec
xor
ficompl
mov
pop
rcl
nop
and
pop
mov
jae
or
ret
mov
add
add
adc
decb
sbb
or
movsb
xchg
adc
push
bound
adc
int
sbb
mov
cmp
xchg
dec
pop
stos
cs
pop
adc
xchg
mov
add
xorb
xor
mov
mov
mov
ja
movsb
bound
push
push
fiadds
hlt
add
jp
xchg
test
fistl
jge
cli
add
xchg
jl
sbb
add
or
and
js
add
inc
movsb
inc
shlb
rcll
mov
lcall
push
dec
jl
testl
push
adc
sub
xchg
pusha
and
sub
mov
insl
sbb
sbb
push
xor
mov
test
sub
lahf
sahf
mov
adc
ja
sbb
adc
dec
sbb
pop
add
int3
inc
mov
cmc
xor
fcompl
adc
lock
pop
scas
adc
rclb
push
rol
test
enter
cs
aam
fadds
cmc
adcb
lods
inc
out
cmpsb
lret
rolb
cmp
xchg
and
push
push
push
lods
jmp
icebp
cmp
adc
cmp
xchg
xorl
call
push
xor
aad
bound
cmpsb
daa
cmpb
mov
sub
jmp
movl
add
pop
sbb
cld
or
rol
test
mov
iret
lahf
loope
push
xor
sub
lret
mov
cld
stc
and
leave
push
test
insl
sti
out
lahf
aas
xchg
scas
lret
push
dec
loope
cmc
mov
cld
stc
repz
in
mov
scas
lcall
push
pushf
iret
lahf
aas
call
xor
and
in
lock
ja
enter
fdivrs
pop
push
cmpsl
insl
aas
jg
cld
ss
jg
gs
or
xlat
repz
lahf
mov
into
lds
sbb
pop
jg
cld
stc
push
sub
aad
xor
aad
xlat
pop
rorl
aas
push
sub
ret
push
test
dec
add
cld
stc
and
ja
ja
outsl
dec
andb
xchg
out
jg
iret
lahf
aas
insb
movsl
mov
rcrl
xor
sbb
cld
stc
repz
mov
sub
xorb
adc
test
lahf
aas
jg
inc
fdivr
ret
insl
es
clc
jecxz
xor
sub
repz
imull
in
jo
dec
pop
outsb
gs
mov
daa
jl
xchg
imul
addr16
dec
and
ss
inc
jle
cmp
mov
sahf
dec
push
push
and
stos
out
pop
cs
ja
dec
std
addr16
sub
imul
cld
stc
repz
ficoml
in
adcb
push
scas
xchg
icebp
iret
lahf
aas
jg
pop
insb
add
xor
stc
repz
mov
jge
push
adc
mov
add
xchg
aas
jg
pop
lock
jecxz
movsl
jg
fistl
mov
icebp
out
shll
push
cmpsl
dec
inc
push
cltd
xchg
lahf
aas
or
and
out
cld
stc
repz
xchg
dec
xchg
mov
in
push
andl
jg
jmp
dec
and
into
mov
stc
repz
out
and
in
xor
loop
shrl
jmp
jg
jns
fldt
movsb
push
inc
fimull
pop
inc
idivl
jg
repnz
lock
jg
cld
push
mov
pop
pusha
dec
inc
inc
ss
pop
mov
push
aam
call
pop
stc
repz
inc
imull
clc
mov
adc
lods
aas
jg
cld
outsl
push
sub
stos
xchg
ljmp
inc
xchg
out
lahf
cmp
addb
mov
cld
stc
pop
xchg
add
les
pop
mov
iret
lahf
aas
lea
pop
pusha
mov
popa
cld
stc
repz
dec
unpcklps
out
push
pop
test
mov
aas
jg
pop
pop
push
or
inc
stc
idiv
stc
repz
push
out
outsl
or
imul
jg
gs
pop
dec
push
in
jno
cmp
mov
xor
out
jbe
xchg
xchg
aaa
inc
push
jg
inc
inc
cld
stc
repz
sbbl
adc
pop
iret
pusha
inc
inc
loopne
aas
jg
in
jb
pop
fst
cltd
lods
inc
gs
enter
out
int
xchg
leave
orb
mov
push
aas
jg
cld
nop
imul
mov
xchg
jle
out
lahf
sbb
imul
xchg
mov
cld
stc
or
xor
inc
test
lahf
aas
fnstenv
xor
loope
xorl
rclb
das
jg
lods
inc
nop
addr16
cld
out
lahf
aas
and
mull
clc
lahf
pop
cld
stc
repz
sbb
sarb
cmpsb
jle
and
testl
outsl
sbb
stc
add
mov
stc
repz
xchg
ficomps
cmp
pop
sbb
push
lahf
aas
jg
aad
por
push
pop
mov
and
stc
repz
cmp
jmp
fcoml
aas
jg
cld
inc
mov
arpl
iret
shll
fstpl
ds
insl
push
xor
clc
test
jg
cld
stc
nop
dec
add
mov
mov
aas
add
xor
stos
sti
pop
iret
lahf
aas
jg
xchg
outsb
rorb
or
pop
xchg
cs
cld
stc
repz
pushf
pop
fs
inc
cmpsl
lcall
mov
aas
jg
clc
jno
mov
sbb
inc
aas
es
out
fucomp
xor
pop
iret
sub
cld
aas
jg
adc
push
inc
push
push
rcrl
aas
jg
cld
dec
repz
mov
in
push
test
jno
push
jge
mov
repz
scas
pop
mov
or
xchg
push
in
jg
cld
addl
out
mov
stos
cmpsl
dec
xchg
lahf
mov
jno
loopne
mov
cld
stc
repz
lods
lds
icebp
pop
popf
rol
in
out
aas
jg
lret
loop
in
into
lret
sub
loop
pop
xor
inc
imul
into
xchg
addr16
cld
stc
popa
mov
cmp
sbb
je
xchg
dec
outsl
lods
out
lahf
aas
xlat
cmp
pushf
jns
outsl
or
stc
repz
push
mov
lods
test
or
fcomi
cmp
shl
pop
inc
test
aas
jg
mov
fwait
mov
push
adc
cld
stc
repz
data16
adc
xchg
aas
jg
stos
fisttpll
test
icebp
or
in
or
ficoms
out
lahf
aas
xor
mov
ds
out
mov
sar
stc
repz
iret
lret
xorb
xlat
ror
lahf
aas
jg
dec
mov
xchg
movsl
test
pop
leave
pop
cld
stc
repz
jne
and
jo
xchg
pop
xchg
aas
jg
enter
hlt
in
into
pop
or
lock
pop
cmp
data16
jnp
adc
fmull
ret
or
xor
or
adc
iret
lahf
aas
add
xchg
fldcw
jne
cld
stc
push
jmp
std
sahf
loop
fst
in
lahf
aas
jg
mov
mov
dec
ret
pop
cmpsb
sub
repz
or
adc
das
ror
xlat
cs
jmp
cld
mov
test
dec
outsb
les
cmpsb
cltd
iret
popf
mov
iret
lahf
call
hlt
fsubrs
mov
stc
repz
punpcklwd
lea
push
mov
pop
inc
push
mov
xchg
sahf
cli
push
clc
push
repz
lahf
add
jl
arpl
mov
je
jg
cmp
cld
xchg
add
iret
sbb
lahf
xchg
sbb
rolb
or
jg
cld
stc
inc
jg
addr16
jns
out
and
ret
pop
cmp
popf
out
lahf
aas
cmp
cwtl
cmp
js
adc
cld
stc
repz
iret
js
scas
adc
pop
pushf
pop
push
nop
jmp
inc
int3
aam
adc
stc
repz
xorb
faddl
repz
add
xor
in
dec
mov
mov
or
repz
xor
inc
stos
sbbl
xchg
mov
pop
adc
push
jns
fs
cmp
and
xchg
sub
lahf
aas
jg
ds
cmp
test
fwait
lahf
add
out
testb
dec
push
ret
lds
aas
jg
inc
and
test
jp
aas
divl
jae
repz
rcrl
in
ret
fadd
xchg
mov
aas
jg
cld
pop
pop
fiaddl
mov
cs
lds
push
mov
repz
lahf
lods
ja
ds
jle
jmp
stc
jb
add
call
mov
outsl
out
lahf
aas
sub
dec
mov
movsl
inc
lods
dec
incl
adc
cld
stc
repz
mov
lea
dec
ss
pusha
or
jg
mov
loop
lret
mov
stc
or
stc
repz
bnd
xchg
sub
lahf
aas
jg
and
sub
sahf
and
push
loope
stc
repz
jmp
mov
and
inc
pop
aas
jg
cld
xlat
cld
cmp
mov
loopne
mov
cmpb
out
lahf
fs
add
mov
call
jnp
jg
cld
stc
inc
pop
ss
jl
insb
movsl
lret
xor
lahf
aas
lods
pushf
ret
rcr
pop
sbb
xchg
jle
cld
stc
repz
cmp
out
fimull
arpl
into
ror
lahf
aas
jg
jge
fcmovnbe
add
sbb
stc
repz
call
push
push
call
test
aas
jg
shll
sub
mov
pop
fadd
dec
addr16
leave
out
enter
shll
pushf
jns
lahf
aas
jg
pop
je
push
mov
pop
push
into
cld
stc
repz
ds
jmp
cmpl
adc
sub
mov
xor
out
lods
pop
dec
stc
repz
gs
cmpsl
mov
jmp
xchg
sbb
call
mov
or
xchg
cld
stc
xrelease
mov
push
jb
int
iret
lahf
aas
jg
nop
xor
mov
fcmovne
insb
aad
stc
repz
lahf
dec
pushf
scas
repnz
push
or
jg
xor
in
pop
or
push
cmpsb
stc
repz
push
negb
or
sbb
push
mov
sahf
int
iret
lahf
aas
stos
dec
sub
jb
mov
jecxz
cld
stc
repz
fs
jne
scas
aad
iretw
lahf
aas
jg
icebp
and
ja,pn
pop
rorb
or
xor
inc
jecxz
rorl
decb
pop
jle
push
call
jecxz
dec
stc
repz
lods
xor
imul
ljmp
lahf
pop
ror
push
inc
fildl
ljmp
mov
xlat
mov
or
leave
jg
cld
stc
mov
imul
mov
iret
lahf
aas
and
dec
enter
jo
mov
jecxz
cld
stc
repz
rorb
sbb
fxch
lahf
aas
jg
cmp
clc
hlt
or
xchg
add
or
repz
xchg
out
inc
jns
add
sbb
sbb
cld
stc
pop
xor
adc
push
popa
adc
iret
lahf
aas
lret
int3
clc
fistpl
int
pop
mov
leave
jnp
icebp
mov
inc
out
imul
test
scas
cmp
lea
lea
or
icebp
js
add
lahf
aas
jg
ret
pop
adc
push
daa
jp
mov
inc
sbb
cwtl
mov
cmpsl
negb
pop
lahf
cld
cld
xchg
fstpl
cltd
repnz
xlat
stos
out
scas
jg
cld
stc
mov
mov
dec
test
iret
lahf
aas
jmp
lods
outsl
jnp
cmp
cld
stc
repz
cmc
mov
jg
fucom
lcallw
jg
xor
pusha
test
dec
sqrtps
stc
repz
fsubs
sarl
aas
jg
cltd
ljmp
loop
mov
jg
stc
repz
sbb
pop
xchg
pop
addr16
cltd
adc
jne
jg
cld
insl
pusha
mov
cltd
inc
inc
into
xor
repz
lahf
aaa
lahf
in
dec
ss
pop
insb
mov
mov
cld
stc
or
xor
shll
xchg
icebp
les
aas
pop
sahf
aas
mov
scas
mov
stc
repz
lret
mov
inc
jne
loopne
mov
jg
cld
jg
sub
les
sti
pusha
lret
movsb
repz
lahf
lods
inc
addr16
les
pop
xchg
jg
cld
stc
test
mov
jnp
data16
ret
outsb
add
iret
lahf
aas
cs
jge
fs
push
xor
pop
lahf
jg
in
enter
popf
mov
xlat
in
repz
int
xchg
push
xchg
fsubrl
cmp
subl
les
mov
stos
popa
hlt
mov
mov
adc
out
lahf
hlt
pusha
xor
jns
das
fwait
pop
adc
out
jg
cld
stc
jmp
insb
push
call
push
sti
imul
or
xchg
dec
fmull
sub
imul
sbb
repz
mov
dec
push
jnp
mov
jmp
iret
in
cli
xor
mov
leave
xor
xchg
lahf
aas
jg
cli
mov
xor
ret
lea
andl
or
cld
pop
nop
ljmp
push
call
repz
lahf
fcoml
dec
out
enter
daa
test
jl
cld
stc
push
dec
add
insb
jnp
jl
in
aaa
outsl
sbbb
mov
xchg
inc
in
inc
and
out
fwait
jne
xchg
lret
stos
arpl
sbbl
fidivrs
add
enter
fdivrl
out
fwait
aaa
and
stos
adc
loop
loopne
fidivrs
xchg
push
dec
sub
sarb
and
add
push
shrl
repz
and
mov
mov
cmpl
aam
ds
adc
fs
fs
jg
out
lahf
aas
divl
cld
mull
hlt
shlb
cld
stc
repz
cmp
mov
movsb
xchg
je
mov
aas
push
cmp
in
out
or
xchg
sub
mov
lahf
aas
cld
mov
xor
xor
shlb
adc
out
xor
xchg
scas
pop
out
push
or
movsl
inc
cld
mov
sub
sbb
into
sar
cld
stc
pop
pop
push
and
arpl
or
push
aam
loope
lahf
aas
jg
call
add
xchg
inc
dec
cld
stc
repz
dec
push
leave
repnz
in
popl
jg
xor
jge
std
outsw
inc
pop
xor
repz
loop
sbb
inc
mov
aas
jg
cld
dec
sbb
fwait
mov
out
je
repz
lahf
call
adc
enter
push
std
jg
jge
ss
ja
dec
adcb
iret
lahf
aas
push
pop
inc
or
daa
push
cmp
dec
cld
stc
repz
mov
hlt
pop
nop
movsb
xor
sbb
subb
xchg
sub
popl
sbb
inc
in
xchg
sbb
outsl
icebp
push
repz
int
jb
fstl
mov
push
inc
out
lahf
aas
out
mov
jns
leave
jo
loope
jno
repz
mov
clc
or
push
mov
adc
ljmp
iret
sub
lret
scas
ret
jg
stc
mov
jg
cmp
int3
mov
movsb
xor
iret
sbb
out
cmpsb
divb
test
daa
aas
jg
cld
sub
sub
shrb
sub
push
repz
lahf
or
mov
fs
aam
cld
stc
ret
or
adc
stos
adc
mov
or
sub
popa
out
or
add
scas
cmpsl
mov
out
pusha
stos
sarl
out
mov
mov
cwtl
lods
dec
aad
pop
stc
stc
sbb
xchg
mov
sub
cld
test
and
scas
iret
lahf
aas
jg
push
inc
popa
jp
stc
inc
outsb
cmp
cmp
sbb
lcall
insl
cld
es
lahf
jg
shll
adc
jnp
ljmp
repz
std
mov
mov
pop
fcomip
pop
hlt
mov
add
mov
sbb
cld
stc
repz
out
xchg
sarl
aas
xor
cld
imul
jnp
inc
int3
pop
push
jmp
rcr
lahf
aas
jg
push
adc
popa
sbb
in
das
xchg
iret
icebp
mov
lods
cmpsb
insl
repz
sbb
fs
or
stc
xor
repnz
stc
mov
mov
pop
jg
cld
stc
lahf
dec
loopne
sarl
jne
test
push
out
lahf
aas
out
je
sub
cwtl
xor
gs
icebp
dec
lahf
jg
repz
mov
mov
outsl
adcl
add
cltd
and
test
sub
jg
repz
lahf
mov
mov
movb
cmpsl
cmpb
stc
in
not
jo
fdivrs
sub
lahf
aas
xchg
push
push
aaa
pop
adc
pop
cld
stc
repz
cmp
fsubrp
out
xchg
stos
dec
test
mov
aas
jg
insl
adc
in
pusha
sub
pop
sub
repz
das
dec
scas
push
lods
xor
jge
lahf
aas
pop
push
dec
fucomp
idiv
rolb
loope
lahf
and
cld
stc
repz
iret
dec
jns
loope
idivb
inc
jle
iret
stos
inc
rcrl
in
iret
lahf
aas
pushl
dec
sbb
or
loop
or
cld
stc
repz
mov
mov
std
push
push
movsl
ret
lahf
aas
jg
in
push
push
sti
lock
lea
fsts
add
iret
lahf
inc
inc
pusha
cmp
bound
cmc
xor
cld
stc
repz
test
out
cmp
dec
out
push
lahf
aas
jg
popf
xor
stc
fcmovb
cmp
ds
repz
mov
stos
pop
fnstenv
sbb
jg
cld
dec
fwait
xor
mov
cmp
repz
lahf
push
inc
fildll
popl
push
mov
mov
stc
icebp
jno
fdiv
xchg
enter
hlt
xchg
stos
loopne
adc
iret
lahf
aas
call
and
ljmp
cld
stc
repz
inc
jmp
nop
iret
lods
or
aas
mov
stc
stos
jge
xchg
flds
lahf
pop
mov
sbb
decl
dec
or
adc
std
loopne
xchg
dec
jno
loop
lea
iret
lahf
aas
aaa
std
xlat
cld
inc
les
out
adc
idiv
cld
stc
repz
push
push
sub
ss
cmpsl
addr16
lahf
aas
jg
dec
das
addr16
push
shlb
cld
stc
repz
jmp
jecxz
in
or
push
dec
xchg
jns
aas
jg
mov
mov
and
sbb
iret
insb
std
sbb
data16
add
mov
outsb
lret
cld
out
jle
pop
pop
jle
jg
xchg
dec
pop
cmp
out
lahf
sub
mov
lret
pop
lcall
cld
stc
pop
pop
mov
shll
notl
jle
xor
iret
and
or
xorl
cld
stc
push
sub
push
add
aas
jg
ljmp
aas
jle
fwait
and
pop
mov
stc
repz
inc
xchg
dec
mov
arpl
xor
jg
cld
jmp
mov
lock
xlat
sbb
sarb
repz
lahf
and
notb
lahf
addl
lcall
loop
xchg
cmpsl
xchg
push
pop
pop
push
mov
out
lahf
aas
cmp
and
leave
jecxz
addl
adc
je
jle
jle
outsb
add
or
sbb
jl
repnz
mov
add
fwait
aaa
pop
loop
xor
popf
mov
fidivrs
rcl
ljmp
xor
aaa
outsl
add
out
adc
mov
repz
sub
sbb
dec
jle
lock
mov
loopne
pop
xlat
je
lods
jno
iret
inc
adc
dec
int3
dec
stos
adc
mov
cld
jnp
out
ret
pop
jb
popf
clc
sbb
notl
dec
adc
inc
xchg
lahf
sahf
cld
mov
enter
mov
stc
repz
incb
jecxz
jg
or
cld
push
and
lea
xor
aas
jg
je
add
mov
test
pop
pop
jne
jb
mov
out
jl
lahf
aas
cld
jle
adc
add
jp
js
test
xchg
iret
je
lcall
jg
cld
sbbb
aaa
xchg
add
repz
lahf
inc
popa
mov
or
and
cld
stc
add
in
es
jle
add
pop
adc
sbb
out
lahf
aas
fwait
mov
fisubs
pushf
lock
fmull
in
mov
xchg
hlt
mov
add
aas
xor
and
sbb
pop
hlt
aas
aam
xchg
or
repz
lahf
or
mov
xchg
xchg
push
dec
jg
cld
stc
cmpsl
or
cwtl
jnp
int3
outsl
dec
stc
mov
rcrb
lahf
aas
dec
into
mov
out
inc
into
lds
fnstcw
aas
jg
leave
js
ss
pop
mov
or
out
lahf
lods
cmpsl
pop
add
sahf
mov
cld
stc
test
stos
or
jmp
fwait
lret
adc
out
lahf
aas
cli
neg
jp
rorl
cld
stc
repz
fnstsw
mov
xor
mov
iret
lahf
aas
jg
mov
xor
cs
loop
cld
stc
repz
add
push
inc
bound
inc
cmp
inc
jle
jne
in
iret
mov
cltd
lds
in
outsl
fidivrs
int3
loop
pop
jge
fdivrs
aaa
je
pop
jg
je
mov
adc
fidivrs
mov
jge
cmp
jecxz
mov
fwait
aaa
outsl
adc
push
push
out
push
mov
jb
loop
into
jle
ror
jmp
stc
repz
sub
adc
sbb
imul
aas
xor
jne
iret
lahf
jg
cmp
cmc
frstor
jl
push
cmp
cld
stc
repz
aam
push
pop
xor
mov
fdivr
mov
or
lahf
aas
jg
pop
ds
aad
and
push
jbe
mov
and
aas
push
mov
xchg
fisttps
or
aas
jg
cld
lock
out
imul
stos
xorl
lahf
pop
xchg
dec
push
dec
and
adc
sbb
jg
cld
stc
fsubrl
js
data16
pop
inc
lods
in
xchg
pop
test
icebp
ret
push
fldl
cld
stos
fs
fst
fdivrl
lahf
bnd
out
lahf
aas
aam
mov
call
cld
stc
repz
and
xchg
js
cmp
sub
lahf
aas
jg
movsb
hlt
lcall
mov
int3
cld
stc
repz
sub
jg
sub
jecxz
gs
mov
test
inc
fisttps
ret
call
add
out
aaa
jns
gs
jae
fistpll
xchg
aas
jg
cld
bound
popa
jbe
sbb
repnz
lahf
mov
loop
ljmp
cld
stc
pop
push
jne
mov
pushf
ret
lahf
aas
cmp
inc
adc
dec
fnstcw
adc
arpl
mov
loop
push
and
iret
lahf
aas
jg
cmpsb
push
mov
cmp
in
jl
out
or
pop
hlt
loop
ja
xorb
jbe
lahf
aas
jg
fcmovne
into
mov
fists
out
push
les
lahf
je
inc
mov
fcoml
push
fisttps
jmp
test
or
or
fsubl
add
mov
stc
repz
cmp
movsl
icebp
and
mov
jg
cld
popl
mov
mov
dec
and
mov
out
lahf
cmp
lcall
mov
scas
mov
xchg
aaa
outsl
test
iret
cmpsl
cmp
mov
pop
fwait
aaa
out
test
addr16
mov
sub
repz
js
jb
add
xchg
ja
push
push
in
outsl
fidivrs
dec
jp
nop
inc
jbe
stos
sar
loopne
fwait
stos
xorb
fs
cmc
cli
out
lahf
aas
pop
lock
out
and
mov
cld
stc
repz
adc
push
loope
xchg
mov
iret
lahf
aas
jg
push
mov
add
xor
loop
mov
repz
in
ficomps
push
push
aas
jg
xchg
sahf
lea
xchg
sbb
xor
stos
cwtl
test
sub
cmp
cwtl
cld
sahf
mov
jns
icebp
mov
xchg
mov
lret
add
outsl
fidivrs
mov
dec
pop
mov
inc
int
pop
stos
xchg
lahf
add
enter
mov
mov
or
or
ret
outsl
fidivrs
fwait
add
mov
out
fwait
aaa
dec
aad
in
jge
nop
sahf
mov
mov
add
leave
imul
lds
aaa
outsl
out
jecxz
int
pop
push
push
out
fwait
aaa
cmovne
je
cmpsb
xor
in
mov
inc
fidivrs
jle
cmp
xchg
lret
mov
into
jp
int
aaa
outsl
push
in
cmp
movsb
inc
inc
dec
fwait
insl
cli
enter
push
jl
int
pop
lock
and
jns
cmpsb
out
out
outsb
std
fs
ror
inc
mov
outsl
fisubs
push
cwtl
push
pop
cmpl
repz
inc
xchg
xor
leave
mov
mov
inc
lea
mov
xchg
cmpsb
cld
xchg
mov
add
scas
jle
scas
aas
jg
cld
and
fldl
pop
mov
ret
cmp
out
lahf
adc
or
mov
xor
stc
sbb
icebp
mov
mov
jae
out
lahf
aas
cmp
mov
sub
cld
stc
repz
cmc
mov
nop
xor
pop
inc
jns
rorb
out
int
cmp
fidivrs
int3
jns
adcl
xor
rorl
les
aaa
mov
js
mov
hlt
enter
das
adc
pop
repz
lahf
aas
pusha
pop
sahf
cmp
fwait
icebp
out
cld
cld
stc
repz
dec
int3
pop
push
and
inc
das
push
je
mov
push
xor
repnz
mov
and
sbb
fwait
aaa
outsl
fsubrp
jae
or
or
xor
cmpsl
jns
out
nop
cmp
dec
dec
inc
rcrl
push
pop
test
loopne
inc
fidivrs
cmp
cld
stc
repz
pop
mov
push
ret
cmp
lahf
aas
jg
and
loope
in
aaa
pop
inc
fdivrp
repz
cmp
hlt
in
or
inc
jecxz
cmc
int3
jnp
int3
xor
cld
cld
arpl
sub
xchg
outsl
fiadds
aad
pop
insl
idivl
mov
out
fwait
add
sub
js
js
jmp
fidivrs
cs
jge
jbe
insl
aas
sub
int
aaa
cmc
push
std
dec
shll
rep
in
hlt
sub
pop
cwtl
repz
sti
sbbl
mov
xlat
stc
and
jns
out
mov
leave
roll
inc
xchg
jle
jnp
mov
mov
aad
daa
pop
dec
dec
lds
aaa
xlat
aad
jns
lock
repz
rorb
movsl
jb
pop
test
mov
loop
push
inc
push
gs
in
jg
ss
fwait
aaa
roll
cmp
andl
or
in
mov
push
sbbl
push
mov
out
test
xor
in
pop
ret
aas
push
mov
mov
xchg
aas
sarb
out
sbb
pop
cmp
aas
add
repz
push
inc
push
les
lds
xor
pop
xorb
fidivrs
out
xchg
test
cld
lcall
and
mov
nop
pop
fidivrs
mov
pushf
ret
pop
iret
push
jns
in
fwait
aaa
outsl
sub
addl
jno
repz
sub
cmp
lcall
std
rcrl
dec
inc
imulb
popf
jnp
lret
mov
shll
es
pop
add
int
aaa
outsl
add
jg
dec
adc
mov
lcall
cs
scas
in
mov
je
mov
gs
mov
shrl
push
add
cli
mov
outsl
fidivrs
out
stos
pop
sbb
roll
lock
scas
jns
popf
pusha
repnz
ret
and
jns
mov
sbb
aaa
dec
push
daa
scas
lret
aam
aaa
icebp
cmp
adc
pop
mov
popa
ficoms
cmp
cmpb
outsl
fidivrs
and
mov
dec
pusha
cmp
out
fwait
aaa
and
rcrl
inc
sbb
or
jns
dec
sub
or
mov
shll
je
mov
lcall
mov
out
or
jne
stos
dec
push
lock
add
iret
aaa
outsl
fidivrs
scas
pop
push
mov
xchg
fidivrs
test
lret
sarl
jns
repz
sti
test
out
ds
lods
rcll
fwait
aaa
aad
inc
nop
dec
xchg
js
sub
push
mov
jp
push
es
mov
insl
xchg
fwait
aaa
outsl
fidivrs
cmp
stos
xor
mov
cmp
jns
out
or
sti
adc
ljmp
fidivrs
lds
add
xor
mov
repz
fwait
sti
sub
mov
or
mov
pusha
test
xchg
mov
cltd
out
mov
lods
xchg
dec
aaa
outsl
fcoml
jo
test
dec
sub
jecxz
jo
int
or
lahf
call
imul
mov
mov
adcb
into
ret
xchg
pop
aas
and
aas
sub
mov
pop
out
out
push
into
inc
in
lahf
add
lea
ret
fwait
ja
jmp
xchg
jb
int
loopne
pop
mov
push
test
inc
fidivrs
mov
mov
inc
or
pop
lods
int
aaa
outsl
push
mov
sbb
mov
scas
add
pop
push
xor
mov
mov
xchg
int
aaa
outsl
pop
insl
jo
cmp
mov
xlat
addl
rorb
lea
fidivrs
les
cmpsl
mov
movsb
das
dec
and
out
inc
ljmp
jmp
mov
stc
fsubl
jmp
out
mov
pop
mov
out
lahf
aas
std
vpermpd
or
fdivl
push
loop
in
mov
dec
lods
mov
fidivrs
jl
xor
mov
ret
sbb
insb
imul
and
int
aaa
stos
cmp
popf
push
jo
hlt
sbb
jg
jne
push
not
sub
scas
loope
sub
out
lahf
aad
jp
mov
lret
xlat
dec
jne
sbb
jg
cld
stc
jg
fs
dec
fidivrl
adc
xchg
xor
ja
iret
lahf
aas
mov
arpl
insl
cld
stc
repz
jae
int
sbb
xor
adc
iret
lahf
aas
jg
popaw
int
cmp
lret
cld
pop
ret
and
xlat
jmp
adc
mov
pushf
repz
adc
cld
test
scas
pop
pop
scas
in
iret
jb
daa
iret
lahf
aas
jg
fwait
push
mov
std
push
in
movsl
jecxz
cld
stc
repz
iret
sbb
mov
xor
jmp
jg
add
mov
sub
xchg
mov
iret
clc
dec
adc
push
sbb
cs
icebp
aas
jg
cld
add
adc
cmp
inc
fildll
mov
inc
xchg
aas
sbb
sbbb
int
js
stc
outsb
sbb
mov
push
aas
jg
cld
je
xor
pop
and
shl
mov
lahf
dec
push
sahf
test
ror
adc
stc
into
arpl
push
pop
das
sahf
fwait
ja
pop
push
mov
jns
out
rolb
ret
lods
ret
outsl
xchg
cmovns
xchg
and
outsl
fidivrs
cwtl
mov
ficoms
int
mov
in
cmp
daa
mov
jg
cmc
pusha
dec
dec
shr
or
push
loop
add
lahf
or
mov
fnstsw
mov
iret
lahf
aas
jg
xchg
adc
jp
outsl
cmp
adc
stc
repz
sub
push
outsb
es
push
jecxz
mov
shll
test
jo
leave
rorl
daa
stc
repz
xchg
fiadds
negb
push
sbb
pop
inc
fdivs
sbb
mov
aas
pop
xchg
lds
mov
cmp
jp
repnz
stos
sbb
push
cld
stc
repz
xchg
cmp
fidivrs
adc
xchg
jg
push
arpl
cli
pop
jns
fadds
clc
sub
pushl
test
iret
lahf
aas
jg
sar
mov
aaa
imul
test
cld
stc
repz
or
xchg
jae
iret
fbstp
out
add
dec
pop
repz
mov
in
outsl
fidivrs
mov
sub
inc
sub
mov
int
aaa
roll
repz
icebp
dec
sub
lods
fidivrs
and
xor
aaa
arpl
mov
addb
ficomps
push
and
xor
jns
dec
jp
sahf
inc
sbb
push
icebp
xchg
iret
sub
mov
sub
jmp
sbbl
push
out
fwait
aaa
test
and
stc
sbb
jns
xchg
jge
leave
test
mov
out
mov
mov
push
xor
fwait
aaa
mov
xchg
popa
jne
fidivrs
fstl
cltd
mov
lods
lods
dec
int
aaa
outsl
nop
pop
mov
jae
in
lock
sub
je
sub
sbb
and
sarb
sub
pop
cmc
cmpsb
dec
les
repz
inc
push
dec
push
fidivrs
test
aaa
outsl
fidivrs
push
dec
push
enter
adcl
in
xchg
scas
out
push
inc
lea
out
lahf
aas
jl
stos
mov
pusha
hlt
mov
in
popa
push
test
lahf
aas
jg
ja
jecxz
into
test
popf
push
sbb
out
push
ljmp
stos
push
xor
jg
cld
mov
loopne
data16
imul
push
push
das
mov
lods
icebp
pop
repnz
stc
dec
jl
std
pop
mov
jecxz
pop
jp
aad
iret
lahf
aas
mov
into
pop
rorb
fbld
cld
stc
repz
mov
pop
push
ja
or
rcrl
jg
adc
iret
lahf
aas
jg
aad
movsbl
jecxz
and
cld
stc
repz
ljmp
sbbb
out
add
decb
ret
sbb
dec
in
lahf
aas
lds
mov
icebp
mov
push
add
call
pop
pop
aaa
outsl
fidivrs
in
testl
rcr
out
fwait
lret
lods
test
xchg
jns
jg
imull
mov
push
sub
sbb
adc
add
adc
jmp
mov
xchg
jp
sahf
shll
or
fwait
aaa
outsl
fidivs
mov
mov
sbb
cmp
out
aam
jno
mov
sbb
jl
aam
jecxz
outsl
fidivrs
movsl
roll
test
mov
and
aad
rclb
inc
subl
xchg
into
and
fidivrs
lods
sahf
in
jb
pop
adc
fwait
mov
loope
lods
jo
adc
dec
lcall
cmpsl
pop
je
addl
or
out
lahf
aas
test
fnstcw
aaa
out
or
call
ror
int
daa
xchg
cmp
mov
repnz
xchg
inc
pop
mov
data16
nop
stc
repz
out
sub
sbb
mov
aas
jg
cld
jns
cmp
bound
loope
out
lahf
aad
rcll
out
stos
aas
add
clc
sub
cs
iret
sub
shr
cmp
adc
sbb
iret
lahf
aas
cwtl
dec
push
pop
xchg
adc
daa
aad
mov
jle
stc
repz
inc
call
gs
mov
mov
andl
int
mov
push
jg
repnz
divps
dec
int3
mov
out
lahf
aas
mov
outsb
repnz
hlt
push
cmp
jbe
and
adc
inc
clc
jge
iretw
lahf
aas
jg
xchg
daa
clc
xor
test
lods
ja
ror
jno
push
push
fstl
jb
fwait
repz
fwait
push
mov
xchg
hlt
jnp
dec
pop
mov
bound
popa
mov
jb
divl
inc
outsb
jg
shll
neg
xor
cld
stc
loope
lret
sub
inc
cwtl
lret
inc
mov
jp
out
lahf
aas
lods
ds
popf
push
je
scas
test
fsubs
js
fbld
pop
bound
outsl
ficoms
ja
out
lret
das
test
test
fwait
int3
inc
mov
mov
and
mov
fidivrs
mov
adc
pushf
mov
mov
scas
pop
push
orb
scas
or
adc
adc
add
and
xchg
jp
loop
lahf
shl
pop
lea
pmaxub
pop
iret
jp
adc
adc
cwtl
push
int
aaa
outsl
add
cmc
inc
pop
jle
adc
jge
repz
stc
mov
cmp
mov
xchg
mov
shl
out
fwait
insl
ljmp
cmp
mov
std
loope
out
leave
outsl
fidivrs
int3
sbb
iret
adc
add
enter
adc
lods
scas
call
mov
inc
sub
sub
add
fwait
aaa
outsl
fidivrs
cwtl
push
inc
pushf
sub
sbb
dec
enter
int
push
sub
lods
pushf
mov
pop
mov
inc
lcall
btc
fcmovnb
jg
cld
stc
or
add
dec
leave
mov
add
out
lahf
aas
push
adc
sti
int
icebp
imul
cmc
cld
stc
repz
jns
fwait
dec
nop
add
dec
push
aad
jg,pt
notb
adcb
repz
daa
add
add
imul
lret
fidivrs
repz
inc
sub
or
ja
out
fwait
push
adc
inc
mov
mov
push
push
aas
insb
mov
enter
pop
jl
das
jg
in
fwait
aaa
loope
dec
jne
mov
scas
int
jp
pusha
jge
jl
cmp
repz
aas
adc
addl
cmp
stc
stc
and
fsubrs
inc
dec
jae
sbb
sbb
out
inc
popf
les
repnz
fwait
aaa
add
cmp
sbb
out
sbb
dec
jl
aaa
std
iret
push
into
cmp
fwait
aaa
outsl
fisubrs
inc
sarl
testl
repz
outsl
jno
cmp
cmp
jge
int3
xchg
dec
cmc
jl
outsl
fidivrs
arpl
sahf
fwait
rorb
out
fwait
push
add
ret
xchg
mul
mov
jle
cld
sti
add
out
xchg
ja
sub
add
pop
jecxz
inc
imulb
cs
popf
out
xlat
out
cmp
int
aaa
fs
push
cld
xor
jnp
cmp
aas
jg
jo
call
imul
cmpsb
jle
lret
xor
out
lahf
dec
data16
mov
push
cmovge
cld
stc
stos
dec
mov
ret
test
and
mov
aas
push
xor
ret
imul
stc
loopne
rorb
pop
and
test
ret
fidivrs
fs
mov
lret
shll
push
ret
mov
pop
push
test
repnz
lahf
sbb
mov
mov
mov
and
hlt
testb
out
fwait
aaa
scas
pop
sub
xchg
sub
pusha
scas
ds
repz
jbe
xchg
add
fstps
and
iret
pop
xchg
xchg
call
repz
call
fidivs
jmp
jg
cld
outsl
push
and
addr16
cmp
pop
mov
repz
lahf
outsb
fdivrs
fstl
jae
mov
stc
push
test
mov
mov
jl
mov
int
aaa
out
decl
xor
and
movl
push
ss
xor
add
mov
mov
test
mov
xchg
insb
int
aaa
outsl
jne
jecxz
push
out
pop
mov
ret
stc
stc
test
or
fcomps
loope
xorb
add
or
xchg
aaa
jae
ljmp
cld
jmp
mov
cmp
sub
aas
in
lcall
pop
add
xchg
les
inc
ja
insb
inc
jecxz
addl
lahf
aas
jg
stos
mov
sbb
fs
dec
and
imul
mov
mov
pop
jp
add
sbbb
rclb
fnstcw
ffreep
jmp
iret
jge
shll
sahf
mov
scas
add
mov
cld
sbb
cmpsl
js
loopne
xchg
and
inc
push
mull
dec
in
mov
fwait
test
jbe
shlb
mov
push
sbb
mov
pushf
imul
out
fbstp
outsl
fiadds
lods
loop
ror
pop
out
repz
fwait
mov
popa
mov
popf
adc
xor
jns
and
lret
sbb
pop
and
push
out
fwait
aaa
cmpsb
xchg
cmp
aas
fwait
xchg
sbb
mov
mov
in
fcoms
popf
hlt
ret
out
fwait
aaa
aas
outsl
adc
sub
jg
je
int
pop
push
fwait
sbb
cmpsl
xor
insb
fidivrs
int
mov
data16
repz
sar
pop
sarl
pushf
fdivp
mov
xor
jg
cld
cmp
dec
mov
inc
sahf
sub
xor
out
lret
in
and
mov
fsts
jl
dec
mov
sbb
adc
sub
aam
mov
and
mov
popa
cmc
cs
inc
xor
xor
aaa
outsl
fiadds
xchg
test
inc
lcall
in
pusha
out
fiadds
sub
fidivrs
jg
push
inc
xchg
adc
adc
movsl
test
aaa
scas
sub
enter
mov
pop
aas
jg
cld
push
push
xchg
add
daa
pusha
push
jmp
repz
lahf
dec
or
mov
cltd
sub
jle
inc
stos
push
mov
mov
inc
lret
repz
dec
lahf
jecxz
xchg
faddl
aaa
outsl
inc
insb
dec
mov
mov
lods
mov
repz
test
imul
popa
movsl
cmpsl
mov
aam
sub
das
mov
repz
and
jmp
sbb
sbb
scas
xor
fwait
aaa
outsl
xlat
xorb
mov
cmpsb
jno
xchg
sbb
jge
repz
and
test
mov
dec
das
and
jg
pop
inc
fdivrl
negl
js,pn
outsb
mov
sub
mulb
pop
out
lahf
aas
loopne
repnz
inc
jbe
in
dec
cld
stc
repz
or
jge
mov
int3
push
in
scas
jb
arpl
xchg
das
push
roll
out
xor
xor
sbb
push
xor
mov
aas
jg
pop
pushf
sub
and
mov
repz
xor
mov
div
or
insl
repz
sub
sbb
lcall
cld
stc
xlat
mov
jle
lods
loopne
fsubrs
pop
imul
lahf
aas
jb
negl
pusha
je
cld
stc
repz
divl
fisubs
cwtl
mov
aas
jg
add
pop
jns
rorb
pop
je
enter
cld
xor
cwtl
mov
or
enter
and
aaa
lcall
adc
mov
test
movsb
mov
cli
adc
mov
sub
sbb
gs
fs
scas
add
mov
int3
inc
outsl
fiadds
loopne
ret
icebp
shll
or
xchg
clc
fdivl
cmp
out
ffreep
nop
fsubs
cmp
das
jmp
enter
iret
lahf
aas
cmp
mov
inc
hlt
cmp
push
cmp
repz
and
ljmp
jns
out
lahf
push
stos
call
jmp
xor
mov
mov
movsl
mov
ljmp
pusha
pop
popa
inc
dec
or
sub
pop
data16
out
iret
pop
cmp
std
sahf
outsl
fidivrs
movsb
shll
pop
dec
mov
dec
sub
mov
jne
movsl
mov
stos
out
fwait
aaa
adc
lock
push
outsb
fidivrs
push
inc
es
dec
aad
incb
mov
xchg
aaa
outsl
mov
sub
jnp
popf
push
adcb
aas
jg
pushl
ss
movsl
adc
and
push
aas
or
push
flds
adc
cld
stc
push
popf
push
dec
and
mov
cmpb
jle
iret
lahf
aas
pop
xor
cmp
dec
pushf
push
adc
mov
mov
mov
imul
sub
fmull
enter
jns
clc
xor
sub
push
pop
push
push
mov
and
inc
imul
int
loope
fwait
jae
lods
and
xchg
je
out
mov
push
ljmp
imul
mov
cmp
jns
mov
in
pop
mov
pop
sti
cmp
cmc
int
aaa
outsl
ljmp
adc
mov
js
out
xchg
mov
test
pop
pop
add
repz
sahf
mov
xchg
jnp
jns
sbb
cld
pop
or
in
pushf
jae
repz
push
cmpb
adc
cs
ss
cld
stc
lahf
xrelease
pop
lahf
push
cwtl
jno
cmp
xchg
das
scas
push
lock
mov
adc
mov
sbb
ja
andl
aaa
outsl
fidivs
adc
repnz
aaa
jbe
ljmp
mov
fidivrs
in
stc
dec
jno
mov
scas
loop
fwait
inc
sbb
push
pop
fidivrs
push
add
jle
xor
jecxz
int
aaa
outsl
xchg
mov
nop
sbb
insl
sbb
push
sbb
int3
sub
in
aaa
bound
jo
cli
inc
aaa
outsl
ficoms
jae
inc
cltd
mov
fimuls
out
fwait
stc
outsb
and
rcll
push
add
adc
xor
pop
ds
add
and
out
fwait
aaa
aaa
pop
mov
outsl
push
sbb
sbb
pop
inc
cltd
xchg
inc
test
xchg
add
jbe
fnsave
outsl
and
gs
ret
dec
insl
lods
fidivl
pushf
fld
mov
xchg
add
pusha
mov
imul
push
add
outsl
fdivp
lods
loope
lds
cmpsb
add
fcoml
das
mov
add
test
aaa
outsl
fiadds
sbb
lahf
leave
loope
repz
fwait
sub
mov
inc
repnz
mov
mov
ret
push
out
fwait
aaa
sbbb
inc
jg
push
add
sbb
jns
rol
mov
sti
pop
js
call
fwait
aaa
outsl
xchg
and
in
mov
mov
or
ja
cmp
adc
repnz
addr16
sbb
xchg
flds
pop
sarb
xchg
out
pop
xchg
push
mov
cmp
cwtl
not
mov
fwait
fwait
aaa
outsl
fidivrs
lret
push
leave
lea
scas
loop
cmp
or
sbb
dec
cmpsl
and
pop
ss
iret
lahf
aas
jg
sub
or
cli
subb
rorl
xor
mov
inc
into
adc
in
lret
and
loope
aaa
outsl
mov
aam
movsb
sub
repz
and
lock
inc
and
mov
fidivrs
imul
cmp
mov
mov
inc
ss
jmp
lahf
fdivrl
pop
stos
stc
cmpsl
flds
sub
fstpl
arpl
fdivr
pop
mov
xor
fwait
aaa
daa
mov
fistps
ret
add
mov
dec
sarl
test
int
aaa
outsl
pmulhuw
xor
sub
cmpl
push
iret
mov
cmp
fdivp
fs
cli
stos
jb
jo,pt
mov
repz
rolb
sub
repnz
pop
jmp
mov
fildll
enter
and
xchg
aaa
out
push
or
cmp
sbb
int
mov
scas
pop
adc
ljmp
arpl
lods
or
add
fwait
aaa
out
and
dec
xchg
xchg
mov
cld
loope
inc
jae
mov
clc
stos
or
iret
lahf
aas
jg
in
inc
dec
es
scas
test
daa
rol
sahf
cld
stc
repz
xchg
add
push
mov
cld
jge
lahf
aas
jg
stos
cmp
sub
add
add
repz
decl
mov
adc
mov
jg
cld
xchg
rclb
push
imul
fsub
mov
sub
inc
cmc
mov
rcll
or
test
pop
inc
xchg
cmp
pop
aam
dec
and
popl
outsl
lds
insb
ja
hlt
jp
into
sub
aas
jns
out
pop
xor
mov
leave
cs
nop
inc
outsb
fidivrs
in
cmpsl
and
fwait
aaa
outsl
mov
scas
adc
insl
das
xchg
mov
mov
xchg
push
imul
xchg
cmp
adc
jns
sub
cld
stc
aaa
cmc
xor
cld
mov
xchg
int
mov
imul
iret
xor
icebp
mulb
pop
xor
aaa
outsl
fidivrs
sub
lock
inc
enter
out
test
shlb
mov
push
sbb
repz
fwait
push
mov
out
insb
fstl
dec
inc
lea
in
lahf
mov
mov
repz
cltd
and
iret
or
sub
das
cmp
add
outsl
into
xor
fldcw
ja
pop
and
sarl
jl
das
jns
mov
dec
jle
and
mov
aaa
outsl
aam
cmp
inc
repnz
cmp
aas
cmc
enter
inc
dec
ret
int
mov
std
repz
lahf
cwtl
rcrl
xchg
xchg
or
sub
xchg
pop
cld
push
mov
lret
pop
cmpsl
repz
outsb
xchg
lahf
aas
sub
xchg
cmp
sar
stc
repz
pop
fwait
mov
or
ja
iret
lahf
aas
pop
mov
mov
cmp
cmp
inc
cmpb
out
push
mov
test
iret
lahf
aas
shlb
mov
xchg
cmp
lcall
repnz
ret
out
adc
lahf
aas
jg
loopne
bound
xor
int
stc
repz
fcoms
std
int3
jne
cmp
popa
cmp
aas
jg
and
xor
jne
ss
jle
test
repz
outsl
sti
push
ret
in
test
addr16
aas
jg
cld
push
mov
lock
push
fsub
out
lahf
adc
jno
dec
jns
and
int
push
aas
jg
jl
or
mov
inc
out
or
sbb
out
lahf
gs
push
testl
pop
mov
movq
inc
lret
out
lahf
sahf
cmp
mov
jle
cld
cld
stc
adc
mov
mov
je
repz
xor
outsb
sub
jg
cld
stc
call
push
mov
mov
out
lahf
aas
ds
pop
mov
into
test
ja
push
lds
dec
mov
iret
lahf
aas
jg
cmp
mov
ljmp
cld
sti
leave
out
mov
push
cmp
xchg
and
scas
lcall
pcmpgtw
sbb
sbb
xor
repz
pushf
call
mov
inc
das
push
sbb
and
jg
cld
jmp
inc
mov
imul
in
cmp
dec
adc
lahf
push
pop
arpl
flds
stos
and
push
aad
pop
mov
mov
outsl
fisubrs
xchg
outsb
mov
mov
jmp
xchg
fwait
lahf
ffreep
fcmovu
orb
mov
ds
call
aaa
outsl
fidivrs
and
cwtl
rol
sbb
repz
fwait
call
xchg
mov
sub
outsl
fidivrs
out
add
ds
cld
sbb
fwait
aaa
inc
dec
mov
stos
leave
je
pmaxub
sbb
fdiv
mov
sbb
int
aaa
outsl
test
ret
mov
inc
fstpl
cmp
popf
loopne
jns
out
pop
inc
sub
sub
mov
fiadds
pop
fnstenv
and
and
fbstp
clc
outsl
aad
outsl
mov
in
into
push
sbb
adc
pop
xlat
sbb
ds
stos
fnstsw
jae
mov
xchg
test
fwait
les
xchg
aaa
fists
js
push
das
lahf
ss
int
xchg
rcll
jecxz
outsb
enter
das
mov
in
xchg
xlat
pop
movsb
cmc
xchg
mov
sti
jl
and
inc
pop
int3
int
aaa
outsl
adc
pop
xlat
add
aam
clc
xor
out
dec
ret
in
mov
cmp
mov
fidivs
bound
out
jg
pop
mov
jns
out
fadds
insl
inc
mov
pushf
aaa
outsl
fidivrs
jl
or
outsl
mov
inc
out
in
out
fwait
nop
fwait
cmp
mov
inc
outsb
and
adc
inc
jns
add
mov
inc
testl
mov
inc
sub
mov
or
push
mov
aas
pop
add
xor
dec
lods
or
xchg
mov
repnz
jbe
sbb
pop
xchg
mov
outsl
jb
mov
mov
mov
rcrl
in
sbb
mov
push
jmp
xor
xlat
or
xor
stc
stos
adc
pop
lock
add
xchg
jle
mov
stos
sti
enter
aaa
movsb
xor
pop
push
add
out
cmpsb
divb
test
push
les
mull
pop
in
lahf
mov
or
add
aaa
fldenv
or
mov
mov
mov
add
and
mov
ljmp
mov
mov
cmpsl
mov
stc
stc
xlat
or
lcall
sbb
xchg
stos
mov
lods
addb
cltd
cmp
mov
xchg
lahf
scas
aam
mov
xlat
inc
outsb
cmp
cmp
cmp
insl
scas
out
sub
mov
ds
sub
push
iret
and
andb
add
push
scas
mov
mull
add
adc
das
mov
adc
adc
cld
stos
mov
jmp
or
push
jle
popa
sbb
out
aas
mov
iret
aaa
in
mov
mov
out
sbbb
aas
jg
cld
xchg
inc
jns
lahf
pcmpgtd
in
cli
mov
iret
lahf
daa
and
popf
mov
adc
mov
cld
stc
sbb
sbb
cmc
iret
lahf
sahf
jne
inc
mov
lret
dec
add
jge
repz
xchg
cli
mov
inc
rol
lds
aas
xchg
add
jle
xor
out
fwait
adc
inc
cli
cmp
cmpsl
scas
aam
outsl
fidivrs
xchg
call
es
mov
int
aaa
std
jne
fisttpll
sub
aas
cmp
pop
decb
call
das
or
iret
lahf
push
sub
jae
loop
test
bnd
cld
stc
sbb
mov
pop
pop
adc
adc
out
lahf
aas
lock
sbb
push
xchg
cld
stc
repz
mov
test
clc
push
xor
aas
jg
jae
add
mov
stc
repz
add
jo
sub
cmp
sub
int3
test
jg
dec
stos
sub
lds
mov
pushf
repz
cmp
adc
xchg
mov
mov
movsl
shr
ljmp
and
and
xchg
ds
stc
repz
mov
cmp
stos
jp
scas
ret
aas
jg
cs
sub
lahf
adc
xchg
pop
adc
or
out
pushl
mov
fisttpll
ja
sbb
outsb
ror
orb
mov
or
repz
sub
into
xchg
sub
lea
push
scas
das
fwait
aaa
outsl
fiadds
fdivr
xor
test
adc
or
out
cmp
mov
mov
push
psrld
add
cld
stc
adcb
stos
and
call
dec
pop
stos
sub
push
mov
xor
adc
xor
outsb
fidivrs
sti
loopne
bound
xchg
mov
stc
inc
dec
es
outsl
mov
out
and
ss
dec
jg,pt
xchg
or
imul
xor
cld
stc
roll
or
push
scas
pop
fistl
dec
xchg
push
lahf
loopne
or
loope
jns
ffreep
sar
rorb
cld
pop
ret
filds
cld
stc
roll
les
lea
jg
xchg
or
mov
fisubrs
cmpsb
or
xorb
xor
outsb
adc
rorb
xor
nop
adc
push
mov
push
movsl
mov
test
add
imul
xor
lret
stc
sbb
roll
lret
sub
and
mov
rorb
cmpsb
stos
pop
loopne
decb
lcall
push
lds
sub
and
xchg
insl
xor
cmp
inc
push
mov
insl
outsb
jno
shlb
test
fs
rolb
and
xor
rcl
fildll
mov
fiadds
out
pop
pop
adc
jge
push
fistps
bound
pop
ret
jbe
mov
dec
push
scas
insl
or
mov
and
fsts
or
inc
in
inc
adc
pop
push
jb
or
subb
addl
adc
push
mov
cmp
push
shrl
or
jnp
out
movsl
cmpsl
daa
orb
mov
outsb
lods
stc
pop
in
inc
cmpb
cmp
lods
inc
in
icebp
je
adc
inc
push
jg
adc
push
add
lret
sub
add
or
or
or
bnd
outsl
es
inc
jmp
sub
inc
insl
shlb
push
cmp
sbb
adc
push
push
test
jmp
lods
in
or
adc
inc
test
dec
push
mov
sub
sbb
or
les
and
push
cmpsl
stos
or
stc
cmp
adc
arpl
lahf
test
cmp
mov
aaa
ret
mov
in
and
or
jb
sub
adc
lret
int
inc
mov
xlat
mov
in
repnz
sbb
add
lret
inc
add
sub
sbb
add
sbb
rcrl
inc
lods
or
daa
add
push
mov
icebp
aad
jo
insl
fdivrs
cmp
mov
mov
mov
sarl
inc
ljmp
cmpsb
mov
and
out
pop
push
jge
mov
mov
pop
addb
sbb
fcmovnu
test
pop
addb
cmpb
add
dec
push
movsb
or
in
pushf
sub
push
ss
and
mov
in
add
inc
hlt
lahf
les
xor
adc
stc
mov
call
popa
out
sbbb
inc
rorb
das
aam
push
addr16
rcrb
mov
mov
xor
or
add
adcb
std
xor
mov
push
js
ljmp
sub
test
fwait
mov
loopne
adc
sub
push
mov
ss
jl
inc
dec
ljmp
jmp
and
fisttpl
orb
mov
shrl
ja
outsb
mov
or
cmp
lock
or
mov
call
lods
fildl
loop
pusha
faddl
out
sbb
push
pop
pop
mov
jno
test
repnz
ret
or
ret
out
pop
xchg
or
inc
inc
jge
xor
pushf
add
push
fisttps
repnz
fcmovbe
call
add
add
jecxz
loope,pt
roll
push
and
adc
adc
into
push
cmpsb
stos
rclb
xor
pop
xchg
sub
and
adc
rcll
xchg
adc
add
push
cmp
add
mov
or
sub
add
sub
pop
outsb
pop
arpl
add
imulb
movsb
lock
cwtl
jl
inc
push
fcompl
push
ret
incb
push
adc
mov
lods
or
pop
cmp
das
adc
addb
popf
mov
in
testl
and
fists
shl
sarb
add
jle
fisttpl
popa
rorb
jp
outsl
inc
pop
push
std
jl
or
stos
shll
and
push
stos
sub
push
inc
test
add
dec
fs
push
jae
cmpsb
mov
or
bound
add
jae
sahf
cmp
adc
bound
pop
out
shll
push
pusha
xchg
add
lds
out
inc
add
pop
daa
sub
rorb
adc
and
lods
enter
or
cs
stc
lcall
lahf
js
adc
or
push
sbb
sub
pop
pop
aam
dec
cli
rol
fadds
push
pop
add
cmp
sarl
int
adc
add
test
orl
mov
js
xchg
into
ficoml
lds
sbb
leave
jb
dec
add
add
imul
lods
imulb
xor
mov
das
add
inc
out
sub
mov
cmp
popa
cli
rorb
xor
fwait
rorl
je,pt
sbb
pop
dec
ret
push
or
cmpsb
repnz
imul
cmp
pop
nop
lret
or
adc
add
mov
add
sbb
push
xchg
pop
or
push
cwtl
push
mov
push
pop
fistpl
mov
pop
push
and
pop
push
popa
or
lret
in
and
or
jmp
xchg
loope
fdivrs
movsb
and
dec
push
adc
or
fcompl
vmwrite
pop
stos
movsl
inc
popl
or
sbb
addr16
pop
pop
repnz
lea
mov
mov
dec
dec
push
and
bound
lock
fiaddl
cmovb
pop
inc
mov
shrl
aad
cmp
clc
cmp
nop
jg
inc
sarl
pop
mov
fwait
xor
adc
les
cmp
xchg
adc
lods
mov
shll
jnp
sahf
add
rol
and
jnp
sbb
pop
fadd
push
inc
adcl
lcall
popa
lcall
fdivp
or
pop
push
dec
das
fwait
aam
push
adc
es
dec
inc
cmp
lcall
xor
sbb
push
mov
or
dec
aas
adc
adc
push
push
push
cmp
stos
cld
add
cmp
pusha
adc
xor
lods
or
cmp
cmp
ss
inc
add
sbb
push
cmp
mov
mov
sbb
push
jge
int3
mov
out
roll
mov
adc
test
nop
orl
sbb
jl
cmc
sbb
addr16
mov
mov
lock
ret
ljmp
push
inc
cltd
dec
cmp
inc
pusha
lods
mov
mov
insb
inc
je
and
or
out
inc
adc
call
rorl
and
decl
or
lock
icebp
and
add
pop
add
push
push
sub
adc
lret
movsl
insb
mov
inc
rclb
pop
add
sub
cmp
sub
dec
add
push
pop
pop
scas
or
inc
fdivrs
add
std
icebp
or
add
add
lea
bts
jb
pmaxub
push
data16
adc
mov
dec
shll
leave
and
add
movsl
sbb
std
ds
inc
xchg
rorb
push
cmp
push
add
push
mov
and
push
mov
pop
in
or
cmc
outsb
test
dec
leave
mov
int
notl
pop
lods
popa
sbb
scas
out
xor
jl
dec
inc
add
or
mov
test
lods
inc
jo
scas
mov
push
push
adc
inc
push
shl
lret
or
mov
sbb
push
movsb
sti
loope
out
mov
dec
idivb
mov
fistpll
data16
outsl
push
push
or
and
stos
call
or
xchg
icebp
mov
movsl
pminsw
insb
roll
xchg
nop
push
ss
add
push
sub
in
push
shlb
or
and
adc
sti
add
shll
test
pop
mov
int
dec
or
or
int3
push
mov
pop
jle
in
pop
xchg
xor
mov
inc
cmpsl
and
das
shlb
pop
adc
push
clc
dec
incb
gs
jbe
pop
out
sarb
call
push
jae
push
mov
push
jb
inc
mov
mov
gs
fwait
aad
pusha
rolb
and
ret
ret
push
insl
repnz
out
rcl
loope
sbb
jb
xor
push
ljmp
cmp
cli
add
add
lret
xchg
sub
adc
pusha
push
arpl
inc
mov
call
addb
push
pop
add
xor
ds
push
push
lea
movsb
push
adc
sub
pop
push
mov
jbe
lds
fadds
xlat
orb
xor
dec
jo
rcrl
int3
icebp
mov
mov
push
cltd
sbb
inc
push
push
mov
ja
mov
stos
shll
icebp
popf
adc
into
push
inc
and
jne
fs
inc
and
pop
ret
cmp
aam
push
sbb
xor
inc
dec
add
pop
jg
push
push
xorb
sbb
ret
fstpt
add
and
test
or
push
in
or
test
jno
mov
movsb
adc
mov
cmc
add
push
jnp
pop
mov
xchg
jns
ljmp
sub
pop
enter
cwtl
cmp
and
sub
gs
add
adc
ss
scas
add
fisubrs
loopne
pop
mov
repnz
mov
dec
sub
adc
test
out
inc
mov
lock
std
dec
call
mov
add
or
push
or
sar
push
mov
pop
add
xlat
xchg
out
add
push
test
enter
cmp
sub
push
mov
or
shll
addr16
cwtl
dec
outsl
mov
xlat
addb
add
call
add
lods
push
cmc
hlt
rorl
dec
enter
sbb
xchg
stos
xor
ljmp
dec
mov
add
mov
in
push
xchg
dec
dec
mov
lock
subb
fneni(8087
or
ret
fs
adc
lcall
orl
inc
mov
and
sbb
pushf
pop
ss
jp
mov
push
xchg
push
xchg
xor
adc
stos
pop
mov
hlt
inc
pushf
cs
and
cmpb
jne
outsb
mov
mov
ljmp
push
sbb
sub
xor
movl
push
xor
sub
xor
pushf
add
fstps
rclb
scas
xchg
inc
fs
ds
cli
out
mov
mov
add
clc
mov
jbe
mov
jmp
jne
cmp
push
in
loope
daa
movsl
and
fiadds
enter
fldt
mov
test
les
test
push
and
lret
lds
in
ret
popa
mov
movb
sbb
mov
imul
sahf
sbb
lret
push
bound
cmp
xor
mov
mov
lock
add
aam
push
adc
mov
or
adc
or
mov
pop
xchg
divb
push
andb
pop
ja
dec
add
aad
cmpsb
imulb
pcmpgtw
mov
pop
adc
imul
xchg
dec
shlb
fwait
je
add
iret
adc
dec
and
dec
or
push
stos
jne
subb
in
adc
adc
add
inc
je
sbb
pop
add
jnp
stos
xchg
inc
out
test
ljmp
push
cs
test
bound
add
rclb
mov
add
or
push
hlt
rcrl
lea
pop
fisttps
repnz
subl
mov
int
pop
push
fisttpl
mov
push
pop
lock
bound
add
rolb
lret
cmc
in
dec
fdivrs
push
sub
aad
int
je
ss
loop
enter
add
inc
cld
mov
ss
sbb
out
or
cs
pop
scas
inc
push
ret
inc
inc
loopne
sbb
pop
test
lods
inc
or
mov
mov
cmp
and
adc
cli
adc
xchg
hlt
cmc
add
or
cmp
add
sarl
je,pt
gs
andb
or
push
leave
xlat
dec
lret
mov
cmp
adc
sbb
lcall
jmp
adc
push
or
sbb
inc
rcrb
in
out
push
cmp
sbb
loop
add
cmc
sub
loopne
movsb
insb
cmp
and
push
add
add
testb
push
xor
rcrb
adc
fs
insl
mov
or
push
push
std
sub
xchg
vpunpckldq
jne
lret
mov
sbb
pop
sub
xorb
push
mov
addr16
or
inc
adc
iret
xor
mov
jo
jno
adcb
and
inc
nop
or
pop
push
push
mov
add
add
rcr
pop
mov
lock
bswap
or
pop
or
mov
fimull
inc
or
xor
mov
or
mov
jge
push
mov
mov
das
and
cmp
mov
ds
sbb
les
sbb
cltd
or
mov
sub
subb
pop
jle
leave
pop
hlt
and
mov
push
push
xor
jbe
mov
xchg
xor
inc
aad
add
ljmp
jmp
or
scas
adcl
xor
popf
push
cmp
mov
je
les
sub
or
jo
or
enter
arpl
push
mov
addb
inc
lock
pop
mov
xchg
and
loopne
push
inc
lahf
mov
push
daa
inc
xchg
fs
sbb
pop
adc
sbb
rcrb
es
subb
lock
mov
in
dec
add
out
outsl
popf
rorl
aam
daa
xchg
sbb
push
inc
sbb
rorb
push
and
and
adc
or
adc
into
jecxz
andb
add
imul
rorb
test
pop
xor
lds
add
rclb
or
cmp
push
inc
shrl
add
add
sub
mov
push
push
imulb
inc
call
adc
and
stos
mov
je
repnz
mov
adc
shll
sbbl
push
xchg
lds
pop
xchg
mov
push
mov
dec
mov
inc
or
mov
pop
add
es
inc
xor
std
sbb
and
and
or
push
mov
add
shll
mov
popl
xor
ljmp
ret
push
adc
in
adc
sbb
out
cmpsb
cmp
int3
stos
mov
inc
scas
pop
jo
lds
pop
mov
mov
sub
push
or
mov
inc
pop
sub
xchg
mov
or
inc
adc
jo
mov
mov
mov
adcb
int3
add
add
pop
ja
movsb
xor
sub
stos
lods
xchg
loopne
push
or
adc
sbb
add
sbb
scas
test
push
movsl
cmp
dec
rolb
ss
mov
loopne
pop
or
adcl
lods
mov
stos
fimull
push
mov
mov
enter
sub
dec
add
sub
mov
sbb
rorb
sbbl
cltd
and
pop
xor
push
not
in
mov
orb
arpl
lcall
je
jne
roll
fmuls
data16
imul
jl
shll
add
push
addb
lods
dec
loopne
sbb
dec
push
sbb
sbb
fmuls
shrl
ret
insl
fdivrl
cmp
ret
inc
aad
sbb
mov
lret
push
mov
cmpsb
das
call
addb
ja
mov
jg
shl
mov
leave
adc
xchg
js
imul
cltd
push
mov
out
pop
out
stos
add
push
adc
push
push
add
movb
sbb
mov
in
mov
add
mov
adc
sbb
mov
mov
push
mov
cs
or
stos
dec
push
fsts
xchg
int
and
xchg
popf
call
lcall
out
or
xchg
xor
cmpsb
stos
lcall
sbb
mov
adc
sbb
xchg
ljmp
ja
decl
pop
cli
andl
cli
or
lret
movb
in
mov
mov
mov
cwtl
xchg
fisttpl
aad
dec
movsb
sbb
int
add
loop
xchg
or
in
pop
push
lret
andl
sbb
cmp
test
dec
sbb
xchg
sbb
sahf
and
stos
push
inc
pop
mov
mov
cmp
and
adc
or
es
roll
add
jp
pop
movsl
ds
lds
outsl
call
add
and
cmpb
mov
mov
mov
stc
stos
pop
dec
out
dec
mov
inc
dec
shlb
cmpsb
mov
test
sub
call
fnstcw
mov
repz
out
inc
mov
or
testb
insl
shlb
jp
test
push
and
dec
pop
mov
adc
lds
inc
pop
cmpsl
rcll
cltd
push
je
add
cmp
push
out
xor
pop
out
lea
movsb
and
and
add
lea
inc
stos
inc
mov
mov
inc
test
shll
fildl
rcrb
out
jo
push
lods
mov
mov
ret
xor
ljmp
xchg
add
xor
mov
or
test
dec
das
pop
addr16
or
lcall
dec
add
add
mov
jo
insl
or
pop
lock
test
or
fdivrs
movb
adc
rcr
or
enter
push
sbbb
xchg
and
stc
or
fcmovnbe
push
rcl
add
cmpsl
cmpsb
test
inc
int
hlt
rcrb
mov
inc
push
add
inc
pop
and
sar
and
ret
lods
rorb
cmc
test
andl
add
xor
add
push
sbb
std
push
xor
add
es
push
xchg
addb
add
add
and
repnz
push
xchg
ret
mov
cmpsl
sarb
jo
xor
mov
or
sub
cwtl
jl
arpl
lea
or
adc
aam
sbb
jae
mov
int
jge
ja
in
inc
addb
mov
mov
pop
jno
mov
shlb
jmp
mov
and
repz
and
clc
sbb
mov
xchg
popf
add
add
sbbb
mov
xchg
in
mov
adc
dec
inc
sbb
andb
ret
or
mov
dec
push
jne
js
xchg
test
sbb
and
ret
xlat
sub
inc
cltd
add
inc
sub
sbb
add
mov
mov
sahf
push
push
ret
add
push
and
sbbb
shlb
adc
aas
jge
pop
aam
lahf
or
push
pop
int
rorl
ljmp
hlt
push
jb
xchg
mov
add
push
add
shlb
mov
icebp
sub
jecxz
iret
or
cmove
shlb
pusha
shr
dec
lea
lahf
cltd
out
jnp
nop
loope
add
aam
cmc
add
pushf
xor
push
push
jge
lods
xor
sbbb
add
cmpsb
mov
pop
inc
cwtl
or
int3
andl
lret
sti
dec
incl
push
cs
push
mov
inc
mov
leave
mov
enter
adc
cmpsb
and
pop
scas
xor
xchg
xor
adc
cmp
add
aam
inc
adc
inc
gs
add
add
sbb
push
pop
fmull
clc
ffree
pop
into
in
ja
and
mov
or
push
push
sub
and
cmp
lcall
jb
jb
jae
add
or
sub
push
lret
lret
mov
push
lcall
ret
xchg
sbb
imulb
pushf
mov
stos
jmp
pop
adc
stc
sbb
jmp
enter
sbb
iret
addb
sbbb
cmpxchg
lcall
adc
dec
jno
insb
pop
add
shlb
mov
ret
repz
push
xor
sbb
lcall
add
adc
mov
shlb
xor
inc
lock
cmp
dec
mov
sub
notb
adcl
mov
into
mov
test
loopne
out
add
movsb
cmc
cmpsl
ds
icebp
inc
xchg
add
mov
jo
push
movsl
adc
rclb
push
je
cmp
rclb
int3
scas
into
and
hlt
add
pop
add
stc
pusha
jmp
sar
add
pop
and
das
jb
push
mov
cli
shrl
or
dec
pop
leave
pop
push
stos
lods
mov
pop
leave
shrl
les
cmp
or
dec
sub
and
outsl
jl
mov
notb
cs
cmpsl
ljmp
cld
cmp
lock
mov
push
or
test
sub
sbb
sbb
cwtl
mov
lods
loope
sub
xchg
dec
push
dec
push
js
pop
lahf
jb
or
cmpsb
add
or
push
leave
sbb
adc
adc
mov
sbbl
cmpsb
push
add
mov
bound
mov
syscall
push
adc
icebp
out
adc
add
or
cmp
or
pop
inc
jmp
jecxz
icebp
test
and
inc
ficoml
cmp
jmp
sbb
in
xchg
adc
jnp
das
insb
stos
sbb
sub
cmp
push
push
or
add
pop
add
or
mov
pop
insl
repnz
push
or
mov
arpl
data16
insb
std
cmpxchg
push
cwtl
sbb
pop
sub
cs
adcb
stos
repnz
addr16
out
cmp
ret
inc
aad
or
jge
or
call
repnz
aam
mov
sbb
lahf
mov
enter
shll
push
adc
and
jne
jbe
dec
sub
stos
mov
sbb
or
aad
dec
stc
xchg
add
cwtl
shlb
mov
jb
xor
add
orb
inc
add
mov
loopne
xchg
filds
ja
ficoms
shll
sti
loop
add
test
cltd
js
roll
jne
scas
dec
movsb
sarl
jp
shlb
dec
orl
orl
dec
movb
push
sub
jns
push
push
enter
ja
sbb
fcoml
jno
inc
stos
test
or
inc
mov
fwait
lock
and
push
dec
inc
rcrl
nop
mov
mov
xchg
sbb
loop
sbb
sbb
sub
mov
and
or
mov
jmp
stos
lret
mov
ret
hlt
adc
inc
rorl
ljmp
add
inc
mov
sbb
add
pushf
push
shrb
and
inc
ret
mov
cwtl
in
fs
aad
and
cld
scas
jnp
mov
mov
xchg
xchg
dec
test
add
xchg
jb
cmp
mov
mov
xchg
dec
leave
xor
sub
testb
mov
jmp
pop
ret
cs
jge
add
call
call
and
ljmp
les
cmpsb
sbb
sbb
mov
or
aam
cmpsb
xchg
pop
enter
push
je
shll
xor
add
in
jmp
mov
leave
shlb
cmpl
les
and
lds
add
adc
dec
mov
sbbl
leave
inc
pop
pop
adc
jl
in
loopne
loop
adc
adc
push
into
mov
test
add
inc
out
push
mov
adc
adc
and
adc
jp
sub
rcrl
dec
popf
leave
pushf
ljmp
sub
pop
cmp
add
or
lods
dec
mov
add
ret
das
aaa
lods
adc
jle
add
addr16
xor
iret
scas
mov
shlb
mov
test
mov
adc
bswap
ret
adc
or
popa
mov
lds
sub
add
mov
fwait
adc
push
xchg
push
sbb
mov
inc
scas
fimuls
leave
mov
lds
rcr
addr16
scas
js
out
inc
fbld
push
sbb
repnz
into
mov
hlt
lcall
mov
dec
sub
push
sbb
mov
hlt
mov
aas
sbbb
or
pop
lods
roll
xchg
sbb
dec
push
and
iret
and
xor
mov
lods
jmp
sub
icebp
inc
lds
inc
cmp
push
pop
adc
inc
or
popf
push
adc
in
test
rorl
sahf
popf
add
and
sub
cmp
mov
sub
adc
cmp
mov
sub
rolb
push
test
inc
test
push
scas
and
push
xor
mov
xlat
enter
add
adc
push
arpl
nop
leave
pop
rclb
or
cmp
sbb
mov
ret
xchg
mov
mov
dec
scas
aaa
stos
push
call
mov
xor
mov
sbb
cmc
mov
pop
hlt
and
add
adc
adc
js
xor
pop
sti
mov
rcll
xor
jne
xor
ret
call
bound
pop
das
dec
cmp
orl
rorl
jo
inc
rcrl
dec
hlt
out
push
xchg
push
pop
cmp
sbb
movhps
rcll
push
or
add
scas
dec
jge
mov
aad
imul
push
inc
add
les
stos
pop
mov
cmp
push
es
add
pop
push
lods
inc
cmp
push
and
or
jecxz
dec
andl
and
xor
jo
and
xor
sbb
add
popa
or
std
or
aad
aam
push
scas
adcb
rclb
xor
or
dec
stos
loope
sbb
inc
inc
pusha
add
inc
aam
adc
jmp
je
mov
sub
sbb
xor
sub
push
mov
loope
rclb
dec
mov
mov
into
push
sbb
test
repnz
je
mov
jo
cld
xor
sbbl
pop
sbb
aam
mov
sbb
stc
or
fisubrs
test
and
mov
and
bound
adc
insb
mov
dec
repnz
jp
mov
adc
shll
sub
push
push
or
or
in
cmp
or
mov
rcll
inc
movsl
out
sbb
bound
pop
ret
popa
daa
sub
sbb
loop
cmp
mov
mov
js
andb
shrb
mov
add
test
pop
lds
adc
lcall
inc
sub
mov
add
adc
loopne
in
sahf
mov
pop
push
add
pop
pop
shlb
push
aaa
je
mov
inc
arpl
nop
cmc
push
nop
add
inc
mov
pop
push
lds
andl
jbe
pop
test
rorb
cmpsb
stc
inc
xchg
andl
dec
lock
mov
and
aaa
push
pop
cli
cmp
pop
subb
and
cld
sbb
clc
sub
or
add
sub
add
psrad
sarb
mov
or
and
xchg
cmc
neg
add
xor
aam
aam
jecxz
sbb
fadds
push
adc
inc
or
and
popa
cld
xchg
repnz
push
leave
call
push
or
out
or
mov
add
and
xchg
sub
adc
lahf
fcompl
cmovne
push
jo
lods
loop
xor
inc
xchg
push
das
fimull
adc
inc
sbb
pop
push
roll
js
or
sub
jo
lret
sub
mov
sbb
inc
les
inc
pop
push
daa
dec
mov
mov
push
add
and
and
sub
test
ljmp
sub
inc
xor
jb
and
jne
sar
inc
call
cltd
mov
arpl
and
cmp
rcll
ret
call
fld
add
adc
inc
les
and
hlt
addb
scas
and
aas
das
push
aad
lret
and
scas
xchg
adc
and
push
in
adc
and
xchg
push
sti
add
inc
push
push
sub
push
cmp
add
lcall
bound
inc
lods
sub
les
jge
add
aam
dec
je
sbb
push
push
add
xor
aad
inc
jge
mov
mov
add
add
mov
xchg
leave
call
push
xor
push
fwait
mov
inc
add
sub
add
push
call
aad
loop
mov
into
adc
ljmp
xchg
imull
test
arpl
pop
inc
sub
push
lcall
mov
add
pop
bound
or
jl
mov
xchg
mov
je
rcr
js
clc
sbb
jbe
xchg
push
ret
shlb
add
dec
push
test
or
rorl
sub
inc
sbb
loope
test
jge
loop
sbb
pop
notl
pop
nop
aad
adc
cmp
aam
dec
adc
std
repnz
sbb
adc
daa
sub
ret
push
data16
pop
inc
fistpll
dec
add
lods
xor
mov
mov
sbb
cs
pop
xchg
mov
pushf
test
add
pop
and
loopne
adc
stos
shrl
loopne
xor
inc
pop
in
push
xchg
dec
pop
fisttpl
in
stos
adc
popa
jo
mov
insb
ss
jecxz
jl
add
subb
lock
mov
or
xchg
xor
or
cmp
or
mov
pop
pop
loopne
fmull
mov
sub
xchg
dec
mov
add
sarb
addr16
inc
adc
int3
pusha
sbb
push
add
pop
insl
jns
add
and
push
leave
mov
mov
cmp
sbbb
xor
pop
movsl
mov
cmpsl
cmp
pop
push
fs
lds
rol
pop
mov
in
add
jmp
dec
or
push
shll
or
jb
pop
pop
hlt
in
add
xchg
mov
adc
ret
mov
xchg
fwait
cmp
add
mov
push
or
jns
push
xor
pushf
inc
daa
test
xor
repnz
jne
sub
imull
ljmp
test
cmp
sub
repnz
shll
movsl
or
clc
inc
test
int3
lret
std
cmp
test
rclb
loop
cld
imul
cli
test
push
fdivrs
push
jmp
ds
movsl
jb
in
aaa
pop
or
jle
or
push
leave
mov
push
clc
sbb
or
sub
mov
pushf
iret
scas
dec
cwtl
sub
sub
mov
lods
push
rcrb
mov
and
push
push
stos
xchg
xor
loope
movsl
add
pop
adc
or
fwait
subl
mov
scas
ljmp
cli
mov
and
stos
cmp
and
popf
mov
iret
sbb
icebp
or
dec
test
adc
pushf
je
inc
ret
adc
inc
aad
adc
xchg
push
push
sbb
cmp
leave
hlt
punpckhbw
push
cmpl
inc
mov
mov
mov
adc
aam
or
cli
enter
push
movsl
xor
sbb
adc
out
roll
cld
dec
sbb
sub
inc
adc
push
es
or
lcall
jmp
mov
pop
pop
mov
push
dec
sbb
pop
or
jne
dec
lock
outsl
cmpsb
sbbb
inc
leave
lds
and
stos
repnz
push
negb
mov
push
push
adc
pop
stos
adc
sub
and
out
ljmp
jmp
popa
or
sahf
mov
shrb
std
addl
or
test
add
ljmp
xchg
or
in
imul
mov
loop
test
fs
lods
cmp
dec
out
imul
and
push
push
push
clc
movb
cmpsb
mov
pop
mov
or
cmp
xchg
add
int
cltd
pop
daa
js
leave
inc
push
sbbl
mov
out
pop
dec
test
stos
pop
sbb
ljmp
jb
or
dec
push
stos
lcall
aad
shrl
daa
pop
adc
push
ljmp
or
ds
ud1
inc
adc
je
test
ret
pushf
inc
inc
xchg
das
into
jae
pop
jl
sbb
repnz
pop
in
les
andb
add
jo
je
stos
mov
movsb
jno
fiadds
adc
xor
mov
sub
xchg
push
rclb
icebp
pop
add
push
es
sub
add
or
roll
jo
adc
jb
nopl
jno
pop
icebp
mov
rcrb
xor
pop
push
cmpl
sub
xor
scas
pop
sub
jns
dec
daa
shll
sub
sub
out
and
mov
fsts
test
adc
dec
pop
in
cwtl
jae
nop
icebp
ret
adc
imul
ret
pushf
aad
loope
inc
mov
or
in
push
inc
mov
push
inc
jno
enter
adc
lods
testl
call
sub
pop
call
clc
popa
mov
push
or
mov
lret
sbb
inc
mov
ljmp
mov
sbbb
rol
imul
aaa
stos
adc
inc
mov
push
stos
add
or
lcall
adc
push
movsl
cmp
lcall
lds
rcll
sbb
mov
mov
ss
dec
insl
outsb
or
or
adc
mov
rol
dec
adc
inc
out
inc
and
mov
push
push
adc
xor
test
inc
xchg
sbb
sbb
ret
sti
pop
cltd
cmp
sub
lret
into
xchg
mov
test
add
push
jne,pt
imul
mov
and
mov
mov
xor
nop
mov
aad
sahf
lds
subl
mov
int
aam
push
das
push
sbb
test
subb
add
push
xchg
pop
adc
push
in
cmpb
add
add
dec
mov
test
inc
or
or
or
mov
cmp
sub
jb
lds
mov
inc
test
add
add
or
push
cmp
push
mov
adc
add
pmaxub
mov
pushf
inc
pop
jo
xor
ficoml
hlt
cmp
ficomps
rorb
xchg
stos
scas
scas
in
sbb
xor
sbb
mov
push
scas
xor
sub
mov
in
inc
addb
push
inc
icebp
cmp
pop
push
add
cmp
adc
push
sub
mov
mov
shr
adc
mov
daa
sbbb
dec
xchg
mov
or
or
mov
out
jns
pop
xor
xchg
in
or
or
sahf
test
icebp
xor
push
mov
shrl
push
insl
inc
cmp
movsb
shll
adc
pop
push
cmp
mov
nop
andl
mov
scas
add
cld
mov
lea
in
pop
push
jb
jno
push
jb
mov
jae
push
push
jp
adc
push
test
or
xchg
jae
mov
call
aad
repnz
jb
mov
enter
cwtl
mov
push
lcall
dec
testl
dec
pop
or
mov
subb
mov
cmp
and
push
notb
cmpsb
fildl
mov
add
and
push
ret
pop
stos
mov
jecxz
or
mov
fs
adc
push
adc
xchg
push
inc
sbb
mov
fsubl
ds
xlat
adcb
add
push
lret
adc
push
insl
push
or
dec
in
pop
adc
mov
mov
mov
lret
sub
or
rolb
lods
jo
shll
cmp
and
add
push
push
pop
mov
mov
push
movsb
adc
aaa
orb
ljmp
push
fcomip
jmp
inc
daa
sub
pop
sub
loope
loop
rcrl
mov
xchg
imul
jno
nop
rcll
adc
dec
fsubs
cld
icebp
subl
pop
in
inc
rorb
test
les
mov
mov
cmp
stc
rorl
ds
sbbb
rcrl
call
out
cli
jmp
ret
loopne
pushf
pop
push
adcl
icebp
cwtl
xorb
leave
pusha
pop
sbb
lods
in
outsb
mov
test
daa
mov
inc
aad
lea
pusha
mov
scas
sbb
enter
add
inc
mov
xchg
pop
jb
sbb
sbb
enter
push
lods
orl
xchg
sbb
mov
sbb
jne
stc
xchg
sbb
icebp
pushw
roll
andl
dec
in
pop
jne
iret
adc
pop
inc
xor
jae
loope
dec
cmp
xor
push
or
add
adc
insl
ja
push
adc
pop
aam
mov
push
push
cwtl
lds
jae
inc
ret
ss
jno
enter
es
lret
add
mov
and
xor
add
jb
mov
dec
je
in
cmc
adc
pushf
sub
sahf
call
push
adc
cmpsl
pop
mov
notb
pop
add
mov
pushf
sub
mov
mov
mov
mov
adc
jne
clc
loopne
push
icebp
notb
add
pushf
xor
cs
jb
int3
fldt
or
and
push
inc
push
test
xlat
and
test
enter
pop
xchg
xor
leave
ret
push
loop
mov
insb
pushf
fs
add
aas
loopne
mov
push
push
mov
incl
out
insl
not
mov
mov
movsl
mov
and
in
fadd
shl
lret
shll
decl
test
pop
test
jne
lahf
mov
in
popa
mov
push
adc
xor
mov
mov
jne
or
pop
sbb
stos
sbb
movsl
mov
mov
inc
mov
fs
cs
sub
lea
movsb
push
sub
pushf
testb
je
jbe
fstpt
inc
aam
add
pop
sbb
and
and
clc
out
repnz
imul
in
mov
std
in
jle
dec
cwtl
push
push
adc
pop
pop
ret
mov
jne
push
in
cmpl
test
jne
or
and
or
cwtl
sti
dec
mov
and
nop
and
mov
add
add
inc
sahf
out
sti
add
jo
push
add
add
sti
mov
add
inc
or
adc
in
fwait
nop
add
mov
in
testb
fnsave
sbb
sub
jg
add
pop
and
mov
call
jne
mov
in
pop
and
lea
addr16
mov
pushf
mov
cmp
cltd
sbb
push
jns
jmp
out
out
pop
test
pop
je
or
notb
repnz
outsl
and
mov
and
enter
mov
jmp
ret
jo
push
push
cli
mov
mov
fsubrp
sub
je
outsb
sbb
testb
sti
add
insl
fldl
sub
adc
daa
loop
mov
push
int
mov
mov
mov
pxor
xlat
xor
cmc
mov
ss
push
sbb
lea
movsb
in
subb
jle
sub
and
sbb
sarl
jno
pop
adc
jo
jle
cmp
inc
pop
in
mov
test
pop
cmp
cmp
cmp
cmp
inc
sbbb
popl
push
cmp
pop
push
out
fisttpl
iret
rcrl
js
pop
jmp
call
outsl
lods
cld
mov
or
jmp
xor
or
leave
mov
push
popa
adc
das
lock
push
sub
cmp
add
adc
jae
cmp
jne
out
adc
movsl
mov
jmp
or
pop
ficoml
sti
sbb
and
rcr
mov
pop
je
test
dec
movzbl
das
outsl
fwait
mov
fbstp
jmp
cmpb
or
jbe
inc
or
pop
stos
jmp
ja
xor
add
jmp
pusha
lods
divl
fstpt
sbb
je
fildll
mov
ret
je
cmp
je
inc
out
out
rcrl
cltd
pop
lea
add
jge
je
fildll
add
xrelease
int3
sbb
pop
sti
fcomip
data16
cmp
cmp
cmp
ret
cmpb
and
cmp
das
push
outsl
ja
jge
pushl
or
bound
std
aaa
jne
pop
lock
test
push
xor
add
mov
mov
sub
xor
push
push
ja
dec
sbb
js
cmp
dec
mov
mov
push
add
push
push
push
mov
sbb
jae
xchg
fdivs
fmuls
mov
fwait
das
daa
and
push
push
xor
cld
daa
adc
pop
les
shl
dec
sbb
es
jge
lods
add
jne
jecxz
or
add
dec
sbb
aaa
incb
adc
cmp
inc
cmp
in
in
mov
and
test
add
fs
das
mov
jo
adc
aad
jnp
jbe
into
or
andb
inc
inc
sbb
inc
push
xchg
mov
xor
testb
sbb
je
or
or
arpl
dec
mov
jmpw
gs
inc
xor
daa
add
pop
enter
xor
rcl
push
lods
test
pop
jne
inc
inc
jmp
xchg
sub
ret
inc
and
inc
cmp
or
jecxz
pusha
fmuls
xor
jecxz
or
mov
push
xchg
ret
shr
mov
dec
test
push
inc
mov
push
pop
inc
mov
jne
andb
push
aas
je
cmpps
sub
loop
pop
outsb
inc
cmp
cmovo
adc
add
fnsaves
cvtdq2ps
sti
push
stos
movl
mov
sti
pop
mov
dec
and
sub
xor
rcr
shlb
ss
add
xor
dec
xor
out
jnp
hlt
jmp
pop
inc
xor
pop
ljmp
pop
push
sbb
inc
or
daa
ret
push
mov
jmp
inc
or
jne
push
lahf
or
shrb
inc
sar
mov
add
mov
mov
xor
xor
je
mov
sbb
and
and
push
or
daa
pop
or
adc
mov
jmp
xorl
sti
dec
daa
jae
mov
cmp
mov
je
inc
cmp
in
push
outsl
sti
add
movl
lods
mov
sti
jmp
mov
fld
jbe
push
cmp
insb
loope
jno
pop
dec
in
dec
push
sbb
fisubrl
or
imul
sbb
loopne
lea
outsl
add
std
ret
andl
inc
add
push
ja
add
mov
push
lock
pop
cli
mov
cmp
mov
add
fimuls
jbe
clc
jl
pop
addr16
mov
dec
add
push
cmp
andl
mov
pusha
or
sub
mov
and
roll
xchg
mov
cmp
adc
xor
lock
loop
add
cmp
arpl
or
push
and
fiadds
rcrl
rcr
test
movsb
rolb
pop
mov
mov
mov
inc
add
inc
cmp
jl
pusha
push
loop
testl
cmp
dec
ss
in
pop
lods
push
das
enter
jmp
ret
dec
neg
sbb
popa
mov
jecxz
jp
or
or
ret
ds
pop
mov
jle
or
jne
or
add
addb
jl
dec
jge
jo
ret
pop
test
outsb
cld
mov
mov
adc
mov
fnstenv
jns
push
sub
sbb
sbb
fcoms
pop
pop
ljmp
pop
push
adc
jmp
arpl
popf
add
push
ficompl
int
fisubrl
es
les
sbb
mov
sub
adc
jmp
adc
outsl
pop
push
sub
jg
push
cmp
lods
inc
lret
adc
incl
pop
rcl
jbe
test
sub
popa
test
call
ret
int3
add
lds
xor
or
rorb
in
fmuls
push
das
testl
ljmp
adc
sub
jle
adc
push
push
inc
les
subl
adc
roll
mov
and
sbb
mov
pop
jl
jbe
adc
pushl
jge
jbe
push
or
ret
fs
cltd
fimuls
call
fildl
jns
push
ret
out
insl
jl
or
push
xchg
inc
mov
mov
or
or
dec
outsl
in
pop
fadds
inc
mov
or
pop
ret
push
inc
xor
pop
inc
xor
rorb
sahf
pop
or
mov
cmp
adcb
cmpsb
dec
adc
cli
ds
mov
mov
jae
or
popa
cwtl
jbe
mov
je
push
push
lea
test
pop
pop
inc
or
xor
and
add
outsb
sbb
sbb
ss
fstpt
mov
push
or
or
out
fsubr
ja
mov
jmp
mov
jmp
pop
inc
insb
mov
fidivrl
pop
push
xchg
fnstsw
sbb
sbb
add
push
or
ljmp
roll
jns
sub
mov
jge
push
clc
pop
ret
push
test
roll
in
movsb
test
xor
mov
inc
out
cs
aaa
or
mov
xor
out
cmp
insb
aaa
jmp
jo
adc
fcmovu
inc
xlat
test
jne
icebp
incb
sub
lcall
pusha
fnsave
adc
push
xchg
in
push
hlt
mov
cmp
push
jb
pop
mov
inc
pop
gs
sub
push
push
fbstp
cmp
clc
or
add
inc
loopne
aaa
mov
push
lcall
lret
into
adc
sub
iret
fnsaves
shll
adc
pop
mov
daa
cwtl
push
pop
daa
sub
sub
in
adc
mov
or
test
mov
pop
push
pop
movsb
sbb
pop
in
stos
xor
aam
push
insb
cmp
das
cmp
imul
jle
ds
push
pop
clc
call
mov
ljmp
or
adc
imul
addb
mov
fisubs
sbb
rcrl
sbb
add
adc
mov
mov
cmp
test
inc
jne
pushf
jb
movzwl
or
fildl
stc
add
add
inc
sbb
test
iret
mov
fmuls
push
add
cltd
cmpsl
mov
push
mov
jge
or
xchg
fists
add
pop
mov
je
inc
xor
push
call
or
test
mov
scas
pop
jae
and
mov
jg
cmp
rep
stos
mov
xchg
adcb
jge
gs
cmp
xor
scas
js
inc
call
aam
in
fstl
xchg
and
ds
sub
lea
sub
loope
fadds
lea
lret
aad
inc
outsl
add
add
sti
out
pop
mov
cld
mov
inc
inc
adc
pop
jg
cmc
inc
inc
cmpb
lret
test
push
pop
push
jge
jb
data16
jge
repz
int3
scas
push
mov
in
jle
mov
movsl
movsl
pop
mov
inc
jns
lahf
adc
addr16
or
pop
mov
dec
xchg
jb
push
cmp
dec
fstp
push
mov
jmp
or
add
lahf
outsb
add
push
jb
pusha
cwtl
jb,pn
push
movsl
pop
jle
xor
jo
subl
push
les
movsb
pop
andl
fnstenv
pusha
call
lret
mov
cmp
xchg
andl
push
mov
add
push
sbb
mov
int
add
push
and
rcrb
mov
in
pop
mov
add
clc
mov
adc
mov
push
mov
jb
mov
movb
and
aaa
fmuls
mov
cmp
sub
lea
inc
mov
shr
test
and
shrl
add
stos
inc
inc
mov
xor
rcrb
push
in
cli
mov
lea
push
mov
mov
or
std
sbb
push
push
push
xor
cmpl
dec
and
ljmp
add
lea
idiv
std
mov
adc
nop
jae
mov
je
and
mov
mov
inc
jb
add
jg
arpl
dec
enter
mov
mov
sbb
ja
and
and
inc
cmc
dec
dec
mov
or
push
inc
fistps
adc
rcl
mov
push
jge
mov
adc
or
push
jb
sbb
push
lds
mov
int3
bound
stos
aaa
pop
jmp
lea
push
ljmp
test
inc
leave
cmp
inc
std
lahf
push
jne
mov
mov
out
lock
outsb
subl
test
call
out
cld
and
lods
push
jns
mov
lea
or
std
jmp
imul
pop
sbb
inc
loopne
lock
out
jmp
mov
fsubrl
imul
test
daa
test
push
mov
push
cmp
or
or
inc
out
or
pop
push
cwtl
sbb
push
cmp
push
xchg
jl
loopne
and
add
xchg
cmp
inc
jne
int
and
adc
cmp
jl
inc
mov
jnp
jb
add
inc
and
rclb
mov
add
xchg
out
jnp
sbb
loope
pop
jl
outsl
outsb
inc
push
js
rcrb
xor
and
and
sub
ret
or
rorl
leave
std
cld
jle
test
idivb
aad
dec
lret
fisttpl
jbe
clc
fidivl
jecxz
cmpb
mov
mov
rep
jmp
push
sbbl
imul
pop
pop
test
sbbb
js
pop
jbe
nop
add
adc
add
mov
das
mov
fdivs
push
or
pop
xchg
cmp
add
and
pop
add
cmpsb
nop
and
inc
mov
aas
mov
pop
xor
shll
dec
pop
inc
cmp
sub
int
shll
mov
mov
call
shr
in
lock
or
xor
hlt
clc
clc
cld
pop
cmp
push
adc
repnz
or
lock
inc
mov
nop
popf
or
adc
adc
sub
mov
or
cmp
jg
or
adc
ja
add
fldenv
mov
repz
adc
mov
jmp
sub
or
add
pusha
insl
add
outsl
add
dec
push
mov
inc
mov
xchg
pop
mov
cmpsl
out
add
mov
daa
and
sub
pop
scas
inc
pop
sbbl
mov
mov
imul
imul
cmpsb
imul
out
xor
add
adc
sbb
cmp
ret
scas
mov
xchg
adcl
rclb
mov
mov
inc
pop
pop
or
add
push
loopne
fidivs
ljmp
mov
cmp
cli
pop
pop
nop
shll
jne
push
or
insl
and
and
xchg
rcrb
test
push
inc
push
cmp
xchg
imul
hlt
add
js
mov
rcr
fdivs
mov
mov
mov
mov
in
ljmp
mov
mov
cltd
addr16
pop
push
or
insl
lea
inc
jnp
add
jb
addr16
shll
add
jno
filds
ret
shr
jl
cld
imul
add
dec
mov
mov
mov
jnp
dec
dec
or
test
cld
testb
rcrl
or
iret
jbe
mov
jnp
dec
adc
add
dec
mov
jae
mov
clc
shr
lea
xlat
and
decb
sub
rcll
and
jmp
add
push
sub
pop
mov
sbb
aaa
fdivrl
push
adc
adc
add
jl
mov
or
sar
icebp
aas
mov
xchg
mov
inc
cmpsb
fcmovbe
mov
inc
testl
cmpsb
jbe
repz
mov
lret
sti
inc
ds
jbe
insb
fldt
cli
mov
push
mov
inc
push
mov
ds
in
push
mov
lds
dec
push
mov
lret
add
adc
fucomip
or
cmp
repnz
xor
mov
lock
or
pop
jae
mov
push
add
stos
gs
arpl
add
jge
dec
in
jle
paddd
mov
jae
lods
cmovbe
mov
mov
or
or
cmp
jmp
and
lea
sbb
push
rorl
test
test
jge
inc
xor
mov
inc
dec
push
jl
cli
dec
lods
fisttps
or
loope
add
push
xorb
inc
nop
inc
add
push
call
pop
xor
pop
and
push
or
cmp
fucomp
std
inc
adc
paddd
or
mov
inc
adc
andl
pop
out
jne
sub
jo
pop
adc
adc
hlt
adc
sbb
adcb
sub
lea
push
push
lcall
incl
sub
adc
add
lods
mov
in
data16
lahf
fsubl
subb
pop
cmp
dec
sbb
pop
push
xor
push
mov
out
sub
mov
jmp
es
mov
shr
push
or
pop
cmp
test
fdivrs
jae
mov
cmp
sub
decb
iret
jne
notb
lcall
out
jne
mov
cmp
es
add
pop
and
push
jnp
in
pop
inc
pop
or
aaa
jmp
es
in
sbb
push
or
jnp
push
test
insl
addl
pop
mov
outsb
sarb
pop
shr
jbe
movsl
and
dec
popa
xchg
push
outsl
sub
adcb
in
aaa
mov
jo
push
fldl
push
inc
or
mov
jne
in
pusha
stos
xchg
adc
sbb
jmp
and
or
je
mov
push
push
pop
pop
dec
jbe
ja
mov
or
pop
test
jl
shl
scas
fldt
and
or
jg
cs
icebp
jnp
incb
cwtl
aas
jle
pop
daa
cltd
sbb
and
dec
add
dec
and
adc
out
outsl
dec
pushf
shl
in
and
mov
decb
jne
push
shlb
or
xor
in
push
mov
xor
sbb
push
or
ss
sub
pop
xchg
dec
into
and
sarb
add
scas
jp
nop
test
and
icebp
inc
or
and
ror
mov
fs
decb
jge
les
or
mov
bound
leave
mov
cmp
jmp
punpckhwd
mov
jnp
rol
mov
push
mov
movsl
pop
jo
cmp
or
lods
add
jns
mov
cld
fimuls
or
ret
jne
push
xlat
ljmp
movsb
ljmp
mov
movsb
dec
xchg
in
inc
add
add
mov
sar
pop
jne
pop
mov
sbb
mov
xchg
sbbl
ds
cmp
je
pushf
shlb
push
inc
lret
pop
andl
xor
mov
imul
inc
adc
pop
and
shll
mov
sbb
adc
les
dec
and
sub
jle
incl
sbb
jmp
push
jno
inc
or
fcmovnb
jge
push
ret
aaa
imul
bound
andb
outsb
or
mov
shl
stc
insb
mov
jns
mov
addb
xchg
leave
add
and
add
nop
lea
dec
ja
xor
repnz
push
movl
lock
push
out
jmp
call
adc
push
or
add
jmp
mov
inc
pop
sbb
das
fs
inc
inc
mov
jno
stos
mov
or
push
pusha
mov
or
mov
mov
fsubrs
leave
cmpsl
fs
jno
sub
adc
inc
mov
addr16
mov
rcl
popa
fs
adc
in
imul
add
pop
icebp
jle
insb
mov
sarb
je
adc
adc
jnp
mov
add
cmp
pusha
xchg
int3
add
push
pop
insl
call
push
mov
jne
imull
mov
and
jno
jne
jmp
add
inc
inc
inc
dec
je
adc
fidivl
sub
add
xor
das
fsubrs
pop
sarb
or
ret
pop
je
cmp
dec
adc
out
les
cs
sub
sbb
mov
xchg
arpl
xchg
pop
push
add
sub
adc
jne
.byte
call
in
add
sub
sub
add
imul
mov
add
sub
add
cmp
mov
mov
add
incb
or
ja
add
mov
or
shrl
rorb
adc
sti
insl
fldl
add
cmp
add
repnz
fidivl
rolb
pop
cmp
mov
pop
add
sbb
test
or
add
or
mov
pop
or
lret
insl
in
out
insl
adc
repnz
push
add
imul
mov
jbe
pushl
sub
mov
xchg
push
mov
mov
cmp
out
insl
or
sub
cmp
sub
es
insl
jnp
imul
leave
data16
outsb
sbb
mov
ficoml
mov
add
scas
push
ja
in
mov
lock
pop
sub
sbb
mov
out
ja
jmp
idiv
clc
sbb
mov
divb
dec
adc
adc
out
in
imul
pop
or
icebp
sub
adc
mov
jge
add
into
mov
mov
fdivl
fmull
add
add
in
jg
es
pop
add
test
je
cli
ffree
out
mov
leave
add
mov
push
add
lcall
pop
ret
or
mov
fucomi
notb
inc
adc
mov
addps
negb
xor
add
sbb
or
pop
nop
mov
faddp
sbb
mov
mov
sbb
add
cmp
add
fbstp
inc
rcrb
add
out
pop
fistl
pop
in
and
ret
or
sbb
sbb
fwait
jecxz
pop
adc
mov
sbb
or
mov
sbb
out
and
push
sub
shl
aas
pop
sub
mov
push
mov
insb
fwait
or
popf
sub
cmp
ljmp
pop
mov
sbb
mov
clc
or
mov
jnp
mov
mov
sbb
popa
adc
je
into
sbb
add
lock
mov
or
shl
inc
outsb
imul
call
sar
pop
or
push
inc
icebp
and
ret
adc
test
dec
mov
ljmp
cli
push
add
cmp
add
mov
imul
sbb
fldt
jbe
push
or
sarl
fidivrl
adc
lret
inc
out
shr
pop
loopne
pushf
rolb
jbe
or
shlb
lret
insb
lods
cmp
cmpsb
or
mov
push
out
lock
sub
pop
fdivs
fistl
sbb
add
cmp
push
mov
arpl
sbb
fcmovu
or
or
test
jnp
mov
adc
mov
cmpsb
add
into
jbe
clc
lcall
pop
dec
or
sbb
into
rcll
xor
sbb
fbld
push
jp
shrb
mov
imul
gs
movb
add
imul
rcrb
scas
adc
cmp
in
mov
sub
bswap
mov
shl
mov
fldpi
push
sbb
imul
insb
icebp
jne
cltd
xor
adc
inc
clc
popa
orl
je
jae
adc
mov
mov
adc
sub
and
add
jb
sub
pop
jmp
insb
int
stos
jo
lret
adc
mov
icebp
add
shlb
sub
inc
xchg
rorl
sbb
cli
or
dec
fldt
enter
rorb
adc
andl
dec
call
popa
and
sbb
add
lea
pop
mov
add
add
shl
call
or
mov
loope
jp
sbb
mov
cld
mov
in
pop
pop
lods
xchg
stc
and
clc
adc
mov
sbb
add
popa
push
sub
add
xchg
push
mov
add
fidivrs
add
or
sbb
sti
sub
adc
mov
xor
stc
adc
sbb
or
add
fsubr
add
mov
push
ret
push
jo
shlb
sub
jmp
xor
mov
mov
adc
or
sub
cli
dec
xchg
sbb
mov
or
mov
popa
roll
push
iret
mov
mov
push
cmpsl
mov
or
scas
mov
mov
aad
rol
adc
pop
push
push
mov
rcr
add
sub
mov
pusha
xor
aaa
sub
add
rolb
in
and
push
add
stc
add
mov
cmp
fistps
sbb
stos
addl
pusha
stc
mov
cltd
dec
adc
loop
inc
or
ss
jb
mov
push
addr16
pop
shll
sub
popa
mov
decb
js
sub
outsb
shl
or
mov
sub
lret
ljmp
mov
notl
loope
incb
popa
imul
negb
fcomps
push
mov
xor
ret
in
call
roll
adc
sbb
mov
ret
rorb
fistpll
or
rclb
mov
jb
rclb
nop
pop
inc
inc
jo
mov
adc
or
push
add
std
and
pushf
lcall
notb
ret
loopne
mov
cli
ja
insl
sbb
rcrb
dec
mov
push
pop
push
negb
push
xor
push
xor
cli
movsb
jne
rol
mov
adc
sbb
sbb
xchg
dec
cmp
movb
sbb
mov
adc
jno
xchg
pop
inc
mov
cmpl
pusha
imul
lods
mov
push
adcb
adc
cmp
int
rorl
add
sbb
or
jb
pop
scas
push
push
lret
ror
flds
sbb
idivb
hlt
rol
flds
or
or
stos
andl
add
push
out
hlt
mov
cmc
and
test
xchg
js
sub
mov
add
int3
sub
f2xm1
jbe
mov
jle
adc
sbb
adc
sarl
inc
inc
in
int
add
push
rcll
pop
push
pop
lcall
mov
sarl
int3
mov
pop
pusha
xchg
mov
adc
inc
jnp
test
jne
testb
sbb
lcall
cs
xor
sbb
xlat
mov
clc
push
inc
pop
sub
push
test
bound
cs
imul
in
rol
mov
mov
xchg
lret
jmp
sub
scas
lea
dec
mov
imul
call
push
jg
push
push
fstpl
adc
pop
rorl
test
dec
sbb
setnp
movsl
xchg
out
add
ss
mov
sub
insb
jb
dec
mov
clc
or
sbb
arpl
xchg
je
sbb
xchg
mov
aaa
adc
xchg
push
pop
push
mov
inc
subps
add
loopne
dec
test
scas
sub
lock
insb
lret
mov
adc
sbb
sub
lret
push
jp
inc
and
leave
mov
jnp
fisubl
mov
cmpsb
test
sub
or
or
cmp
cmp
add
shll
cs
or
push
or
imul
lods
mov
imul
mov
shlb
pushf
pop
das
dec
call
jl
cmp
enter
js
add
enter
ss
mov
mov
aam
mov
movsl
rol
test
cmp
mov
xor
mov
adc
ltr
sbb
insl
add
js
mov
imul
out
adc
mov
dec
or
jnp
inc
and
lret
into
jmp
aad
mov
jnp
mov
ss
test
jo
sbb
or
sbb
dec
or
dec
cmp
cmpsl
pop
dec
and
scas
movb
cld
inc
adc
lods
out
test
cmp
mov
lock
pop
mov
in
stc
push
inc
mov
movsl
rcr
call
je
mov
or
call
je
pop
in
stc
adc
icebp
call
icebp
push
jle
dec
sbb
test
shll
shlb
adc
lret
sub
dec
cwtl
pop
jge
int
imul
fildl
pusha
push
loop
xor
cld
adc
std
aad
lret
call
loopne
mov
ror
add
adc
inc
test
or
loope
test
pop
ds
or
inc
push
scas
daa
jne
or
add
sbb
xchg
add
push
cmpsl
or
rclb
insb
push
pop
inc
in
subl
xchg
fimull
mov
sub
adc
mov
pop
lret
xadd
dec
in
popa
out
sbb
fildl
loop
dec
push
or
test
repz
pop
test
mov
add
sbb
add
xor
test
sub
add
pop
icebp
inc
ret
inc
mov
outsl
push
dec
xor
mov
ret
int
add
pushf
scas
stos
lods
sub
add
testl
ror
xchg
jle
das
sbb
sbb
inc
push
inc
mov
or
adc
jmp
add
mov
sub
mov
or
imul
push
cmpsl
lea
in
dec
daa
nop
nop
mov
pop
repnz
add
in
clc
call
mov
dec
xor
mov
scas
lret
std
movsl
data16
inc
pop
xlat
pop
and
arpl
dec
adc
cmp
stc
or
pop
jl
pushf
push
dec
jl
add
sbb
push
mov
mov
add
lods
ds
jmp
or
cmovns
pusha
xchg
push
mov
addb
pop
inc
lret
sbb
lret
jbe
dec
sbb
fcomi
cmp
adc
pop
into
loope
pop
insl
cs
sub
popf
mov
ret
add
insl
shr
inc
push
adc
hlt
pop
lock
push
mov
daa
pop
ljmp
test
mov
push
xor
push
cli
xchg
in
xchg
push
ret
imulb
jmp
xchg
fcomp
mov
test
jns
push
subl
rcrb
lock
hlt
xor
or
inc
push
test
mov
xchg
int
xchg
ret
std
and
sbb
jae
or
pop
push
adc
add
es
fmuls
sbb
mov
sub
cmp
sub
loop
mov
pop
adc
jno
pop
in
jge
out
shrb
arpl
or
push
cli
mov
pusha
jo
jmp
data16
xor
mov
outsl
aam
cmp
inc
pop
inc
or
insl
lret
jmp
mov
std
ljmp
xchg
push
data16
adc
mull
rorl
xchg
sub
idivb
jge
pop
js
pop
pop
cmpsb
push
popl
and
adc
push
mov
mov
lret
jns
xor
cmp
mov
fisttpl
orl
push
clc
cmp
ds
xchg
sub
xor
adc
adc
ljmp
adc
popf
stos
cmc
outsb
pop
sbb
push
rcl
mov
fcoml
movsb
mov
sbb
sbb
push
rcll
fisttpl
lcall
sbb
push
push
sbb
xchg
add
push
mov
and
aam
cmpsl
or
and
fiaddl
mov
and
popl
test
sbb
rcll
push
push
lods
into
stc
dec
adc
movsl
mov
jne
sbb
xor
sub
and
adc
mov
cmp
frstor
stos
push
mov
mov
jge
fwait
jo
pop
fstpt
adc
xor
rcl
lcall
or
loopne
es
cltd
pop
xor
xor
push
or
int
jg
push
pusha
imul
enter
mov
sbb
lock
or
test
fsubrs
xor
ljmp
xlat
das
adc
sub
das
lcall
mov
sbb
pusha
pop
add
xor
inc
dec
or
loopne
outsl
shll
pop
mov
fsqrt
loop
jmp
sbb
dec
jo
sbb
dec
push
xchg
mov
push
mov
aam
sbb
ror
or
pop
mov
enter
and
es
pop
mov
xor
addl
dec
sbb
cmc
pop
clc
cmpsb
pop
cli
push
push
shll
inc
pop
push
and
pop
lcall
push
fwait
sbb
mov
mov
inc
bound
mov
dec
addr16
lcall
xchg
pop
or
cmp
imul
adc
lea
xchg
les
cmp
lahf
cmpsl
xchg
mov
fcomp
mov
adc
pusha
mov
or
mov
lds
scas
out
mov
dec
jmp
jo
pop
jmp
and
push
enter
sbb
push
or
inc
icebp
push
orb
scas
mov
ja
les
mov
sbb
push
add
enter
add
xchg
outsb
sbb
cs
sbb
adc
push
push
xor
and
cli
mov
inc
mov
inc
push
cltd
gs
andl
das
add
cs
xlat
push
or
pop
adcb
mov
sbb
jnp
int
in
xchg
sbb
adc
sbb
mov
fs
clc
in
rolb
aad
inc
shlb
jo
movsl
pop
dec
stos
add
jmp
mov
dec
xchg
lcall
pop
xor
movsl
push
push
lock
dec
push
cmp
or
pushf
adc
vfmadd132ps
loope
adc
push
sbb
subb
xchg
ljmp
jl
add
pop
sarl
pop
pop
dec
icebp
push
push
sbb
mov
shrl
test
loopne
push
lods
mov
mov
inc
xchg
ds
shrl
xchg
lods
add
test
xor
arpl
xor
ss
push
mov
xor
lock
dec
adc
pop
cmpsl
inc
ret
adc
push
mov
clc
jae
dec
mov
int3
test
mov
or
dec
push
jno
and
aam
dec
lods
add
shr
mov
xor
push
hlt
adc
or
pop
call
mov
adc
mov
icebp
mov
or
enter
xorl
inc
push
insb
push
adc
adc
sbb
call
leave
adc
xor
sbb
outsl
pop
adc
inc
inc
mov
into
pop
scas
sbb
sbb
pop
dec
pushf
push
cmp
xchg
mov
mov
xlat
jmp
pop
jge
cmpsl
sub
add
add
rolb
sbb
test
sub
mov
cli
add
mov
inc
mov
xor
test
and
and
fcompl
pushf
dec
insl
ja
sbb
add
aad
out
mov
mov
stos
insb
pop
and
test
mov
adc
mov
adc
pop
adc
pop
push
xor
lahf
bound
push
dec
popf
jp
test
inc
adc
cmpl
and
sub
inc
sbb
sbb
popf
cmp
mov
push
ficompl
call
cs
sbb
or
cwtl
js
and
lock
jge
rorb
dec
push
mov
push
adc
mov
ret
adc
outsb
leave
xchg
jg
mov
out
scas
push
jmp
mov
fwait
rorb
mov
push
jg
lretw
test
negb
jae
lock
cltd
or
aad
scas
or
pop
add
sub
scas
scas
shrb
xchg
xchg
or
push
cmpsb
and
outsb
shlb
les
push
dec
in
leave
pop
or
mov
or
dec
loopne
add
shll
test
cwtl
mov
push
add
movsl
lahf
jp
jge
ljmp
xchg
je
stos
inc
sbb
stos
sub
mov
ret
push
add
mov
push
adc
test
push
repnz
pop
movsl
xor
mov
vpcmpeqb
cmp
cmpsl
mov
call
mov
pop
bound
or
cwtl
or
dec
jae
inc
mov
sbb
mov
call
xor
pop
lods
sbb
lods
xchg
push
xorl
xchg
repnz
mov
mov
or
xlat
imul
pop
push
data16
lret
push
inc
push
add
mov
push
cli
push
loope
jne
cmp
mov
add
setb
pop
xchg
dec
andb
sbb
push
int3
aad
xchg
repnz
fsubrl
imul
push
xor
in
jo
test
shrb
rorl
popa
roll
bnd
jp
xchg
pushf
cli
cld
ret
add
cltd
jmp
xchg
mov
into
cmp
testl
js
lret
call
mov
cmp
xor
xchg
lret
adc
adc
in
sti
repnz
xchg
mov
xchg
enter
sbb
jo
mov
or
lahf
iret
mov
or
cmp
jo
in
and
add
inc
or
fcoml
insb
adc
or
in
pop
movsl
cs
sarl
jmp
inc
cltd
adc
or
or
push
push
push
jne
jmp
mov
mov
cmp
test
pop
sub
inc
roll
push
stos
jecxz
jbe
ret
adc
xchg
push
pop
add
cld
adc
ljmp
mov
push
jecxz
xchg
dec
pop
dec
cmp
ret
pop
cmp
ficoml
and
xchg
adcl
sbb
cmp
aad
test
call
bound
inc
jb
push
lret
xor
ret
aad
sbb
test
push
or
ja
arpl
icebp
mov
mov
sbb
loope
pop
or
ja
rclb
insl
and
lahf
add
inc
mov
add
adc
ss
outsb
inc
leave
aaa
pop
loope
xor
fidivl
sub
dec
popa
or
pop
cmpsb
lcall
jp
push
push
sbb
adc
or
push
mov
test
leave
movsl
rcll
fidivs
or
xor
nop
sarl
loope
xchg
rorb
push
and
xchg
out
xor
repnz
dec
push
out
lcall
push
mov
or
mov
pop
mull
into
cmp
dec
iret
cmp
or
shll
jno
loope
xchg
pop
push
mov
rolb
fimuls
sub
inc
in
add
test
iret
movsl
push
shrl
xchg
les
ljmp
inc
push
lret
add
aam
xchg
push
mov
pop
mov
lea
inc
ret
xor
jmp
stos
mov
sub
mov
aas
arpl
dec
pop
cmp
into
push
sbb
sbb
push
xchg
push
jns
jae
arpl
lea
ss
mov
mov
out
fadd
lods
push
dec
int
cld
xor
or
andl
sbb
lahf
or
mov
adc
mov
enter
pop
xchg
into
ss
fildll
or
lret
shl
fdivs
dec
lods
sbb
xchg
mov
pop
into
loop
decb
aaa
push
xchg
push
aad
cltd
call
pop
adc
push
call
lock
mov
lock
mov
mov
adcb
mov
add
add
jg
movl
aas
mov
shrl
cmp
push
mov
and
and
add
shl
sbb
loop
sub
test
movsl
xor
and
in
adc
cmp
es
dec
shrl
cwtl
add
adc
adc
adc
cmp
sub
ljmp
hlt
sub
dec
aad
push
xchg
jo
jp
subb
fs
or
pop
test
fcom
shl
push
icebp
std
inc
mov
push
add
xchg
add
push
and
push
sub
or
push
mov
pop
push
pushf
mov
xlat
and
sbb
cmp
rorb
cltd
ds
mov
je
ja
and
nop
and
fs
and
jecxz
add
jo
mov
sub
into
pop
sbb
roll
int3
push
or
add
loope
mov
sub
or
sbb
push
push
dec
or
push
rcrl
jo
sub
mov
rolb
xor
aas
or
and
xor
push
jmp
addr16
jae
mov
adc
test
fcompl
xor
roll
dec
push
lea
icebp
es
aam
push
xor
push
gs
into
sub
addl
or
xchg
mov
push
loopne
sahf
insb
push
mov
rclb
dec
push
jo
enter
and
mov
cli
or
push
ds
lcall
lock
jo
push
jnp
in
and
daa
jb
pop
xchg
sbb
outsl
push
popa
or
mov
test
lock
cld
cmp
cmp
test
xchg
push
sbb
xchg
lock
dec
mov
cmpsb
sbb
xor
sbb
add
movsl
mov
sub
xor
or
jns
mov
sub
mov
shlb
gs
test
cwtl
xor
jno
jb
jno
sbb
cmp
aad
enter
adc
adc
rcl
or
or
sub
mov
jnp
push
inc
push
jo
cltd
fildll
pop
arpl
cs
and
pop
push
jo
inc
shl
roll
dec
clc
pop
sub
hlt
and
pop
pop
into
and
xor
mov
push
shl
sub
pop
dec
addr16
xchg
pop
adc
xor
dec
test
mov
or
rolb
push
mov
xchg
movsl
ret
cltd
int3
push
imul
lods
push
add
ja
xlat
add
xchg
push
and
dec
add
fmull
or
xchg
jo
lret
or
into
std
outsb
cltd
inc
addl
aas
pop
les
sub
push
loopne
push
ljmp
test
mov
mov
test
add
sub
gs
adc
idivb
or
sbb
cmp
jne
jg
test
int3
jl
pop
into
les
rorl
sub
jb
push
sub
insl
aad
sarl
popa
mov
sbb
std
and
mov
inc
out
pop
jb
push
xchg
jo
test
dec
cmp
xor
dec
andb
xlat
pop
icebp
push
call
push
pop
or
pop
pop
and
adc
pop
jno
and
aaa
adc
inc
xor
cli
loop
add
dec
aad
and
xchg
lods
adc
or
pop
adc
mov
test
stos
pop
mull
inc
dec
xchg
pop
pop
jmp
xchg
aad
repz
dec
pop
nop
mov
mov
stos
adc
inc
pop
je
nop
jecxz
push
add
mull
adc
mov
mov
mov
adc
xchg
leave
cmp
sahf
out
add
add
int3
in
lods
inc
inc
sub
std
sub
sbb
push
call
loope
mov
push
shlb
addb
push
jl
shrl
rol
add
popa
lret
cmp
mov
repnz
shrb
es
rcrb
xor
shll
fadds
pop
mov
pop
nop
push
test
movsb
out
dec
push
jae
test
inc
cmp
inc
mov
dec
loope
mov
lea
insl
cmp
popf
or
adc
push
std
leave
jns
dec
xchg
loopne
sub
add
loope
adc
fmull
sbb
sub
cmpsl
xchg
aad
and
int
dec
lds
adc
mov
or
jp
ds
ret
xorb
adcl
mov
inc
add
inc
in
lods
fiaddl
xor
or
push
sbb
add
dec
adc
xlat
add
mov
insl
sub
daa
rcl
pop
push
sti
jp
arpl
sbb
and
xor
sbb
inc
push
icebp
arpl
adc
push
xor
inc
inc
jge
lea
popa
or
enter
sbb
mulb
lret
mov
cmp
inc
or
rorb
xchg
ret
mov
dec
roll
mov
xor
and
and
jp
add
xchg
leave
stos
sbb
adc
out
addl
mov
movsl
ret
movsb
gs
adc
xor
pop
lea
popa
mov
or
jmp
sub
adc
outsb
xor
int
sbb
aad
dec
pop
xchg
cli
sbb
es
push
sbb
ret
rcrb
xor
in
adc
add
popf
addl
xor
pop
dec
pop
pop
mov
pop
cmp
lds
pushf
addb
push
fnstenv
lret
inc
and
push
pop
xor
mov
jo
in
add
push
icebp
out
sarb
push
push
rclb
adc
inc
sub
pushf
or
xchg
pushf
inc
cmp
or
cmpsl
subb
xor
or
mov
push
mov
stc
pop
roll
push
add
cmp
aas
mov
pop
xlat
lock
add
arpl
sbb
inc
shr
push
les
aaa
rcrl
mov
outsb
sbb
add
clc
and
pop
ja
add
and
arpl
jmp
xchg
enter
mov
add
ficompl
daa
bound
aaa
pshufw
sahf
subb
clc
stos
add
adc
inc
xor
movsb
push
rol
push
cltd
push
mov
or
inc
inc
xor
popf
adc
lcall
sbb
push
in
rolb
hlt
test
add
icebp
and
les
push
shll
sbb
push
loop
dec
xor
fs
xchg
and
push
out
mov
sar
aad
mov
into
mov
sub
add
inc
mov
sub
rorl
mov
inc
fwait
aaa
arpl
fs
shlb
popa
inc
shll
roll
and
data16
sar
shrl
adc
pop
xor
mov
mov
pop
stos
mov
sbbl
jne
test
fsubr
pop
aaa
addr16
pop
jo
insb
insb
sbb
mov
add
mov
push
arpl
mov
scas
into
insb
mov
pop
test
ret
shrb
inc
push
sbb
push
jne
icebp
jb
mov
pushf
sub
dec
ljmp
les
sbb
sub
sbb
ret
jo
push
xor
aaa
push
test
mov
movsl
push
rolb
cmp
pop
sti
jl
xor
or
ret
int3
rol
insl
pop
inc
jno
and
or
inc
push
out
mov
mov
push
mov
mov
cmp
or
shrl
cmp
call
ret
shll
cmp
sub
or
fisubs
sbb
shlb
hlt
xchg
xchg
adc
in
push
dec
inc
inc
sub
out
xlat
mov
cmp
aad
mov
xchg
mov
inc
xor
mov
add
daa
shlb
add
jae
pop
in
loopne
pop
test
ret
add
js
adc
mov
dec
mov
inc
adc
mov
push
sbb
movsl
stos
push
call
bound
push
scas
lds
jne
inc
stos
jne
mov
sbb
int
and
add
cmp
push
mull
mov
mov
shlb
repnz
add
nop
push
jecxz
lock
sbb
cmp
mov
push
vunpckhps
pop
insb
pop
cmp
int
and
push
pop
add
dec
xor
xchg
push
inc
mov
push
mov
xchg
mov
inc
or
mov
push
xchg
ljmp
jmp
mov
mov
mov
lcall
sarl
inc
cwtl
sahf
xadd
ja
fwait
mov
shlb
icebp
push
sub
jbe
adc
jb
inc
sub
pushf
call
add
push
sbb
mov
xchg
add
xor
nop
pop
xor
mov
mov
cmp
inc
or
outsl
xor
mov
inc
aas
jbe
andl
jmp
and
dec
insb
mov
xchg
inc
jo
outsl
cmp
or
mov
xor
pavgw
adc
add
test
pop
inc
movsb
stos
pop
das
mov
adc
push
add
sbb
scas
mov
mov
jnp
stc
into
adc
stos
inc
sub
xchg
mov
arpl
adc
popf
mov
mov
bnd
sbb
orl
mov
push
add
add
scas
push
sbb
or
push
roll
push
jae
mov
daa
pop
imul
stos
mov
mov
jbe
icebp
stos
scas
push
push
jno
mov
stos
sub
inc
adc
push
imul
mov
test
cltd
and
xor
leave
cmp
mov
sbb
adc
jnp
js
push
inc
mov
xchg
push
clc
aad
es
mov
push
stos
add
je
psubsb
lret
ljmp
pop
jmp
cmpsl
es
aam
movsl
test
xchg
xlat
dec
adc
push
jno
nop
mov
cmp
sub
arpl
pop
test
adc
cwtl
jp
cmp
ret
xor
adc
daa
cmpsb
sbb
lret
int
lds
imul
stc
inc
jns
inc
movhps
ret
inc
icebp
push
xchg
jmp
add
mov
or
cmp
xor
sbb
je
adc
popf
ljmp
mov
sbb
loopne
popf
or
sub
das
rcrb
lret
or
add
pop
ret
jge
outsb
pop
xor
cmp
add
mov
xor
pop
xor
inc
xlat
mov
adc
push
adc
dec
int
or
xchg
xchg
sbb
cwtl
dec
add
out
mov
push
mov
loopne
rorl
pop
addl
mov
out
sbb
adc
loop
sub
pushaw
cltd
repnz
sub
inc
and
pop
lds
ds
mov
jo
sbb
adc
arpl
sub
sub
dec
and
or
into
je
loope
inc
dec
mov
sbb
fs
hlt
icebp
pop
cltd
es
fldl
adc
jmp
addr16
adc
icebp
shr
add
xchg
mov
inc
jo
sub
and
push
sbb
fbld
jae
jge
xlat
cmp
add
pop
sub
cmp
adc
jecxz
sarb
and
divb
xor
mov
sub
repnz
lcall
inc
mov
idiv
insb
cmc
aam
popa
adc
push
adc
popw
ret
push
xor
lods
andb
push
xchg
test
push
push
jne
xchg
mov
adc
popf
add
jne
imul
push
sub
adc
insl
and
cmp
inc
std
or
mov
push
cld
mov
pop
test
xchg
jmp
inc
mov
mov
pop
out
adc
push
push
inc
push
xchg
or
push
stos
test
jge
mov
and
into
mov
lds
roll
dec
mov
js
or
orb
add
mov
test
hlt
sub
sub
add
jae
jb
pop
rolb
sub
dec
or
jb
and
aaa
jnp
out
insb
adc
push
jo
cli
add
push
loopne
xlat
sbb
arpl
movsb
mov
pop
je
or
sbb
adc
dec
hlt
jb
and
add
ljmp
in
push
cmp
cmp
movsl
ljmp
adc
or
xor
sbb
sub
out
test
ljmp
stos
and
jl
push
push
mov
out
sbbb
mov
pop
pop
xor
xor
fistpl
add
popf
jnp
orl
xor
pop
inc
cmp
cld
and
es
xor
mov
jmp
sbb
xor
aad
mov
or
std
inc
imul
dec
test
inc
les
or
jno
sub
test
loope
cmovae
or
int
cmp
or
adcl
sub
adc
negb
push
push
arpl
mov
pop
adc
mov
shl
push
cmp
mov
sbb
mov
sbb
loopne
cld
mov
push
mov
push
rolb
insl
xorl
or
sub
mov
rcll
mov
es
xchg
mov
cs
or
xchg
sub
push
jl
call
ss
mov
lods
sub
mov
negb
or
xchg
rcrb
adc
test
popa
cli
dec
adc
push
cmp
cmp
psubd
sbb
mov
pushf
push
mov
adc
lcall
pop
inc
leave
push
sub
xor
mov
inc
mov
decl
in
mull
daa
xchg
adc
sti
loope
ret
jmp
sbb
mov
insb
int
sub
jbe
shll
push
xchg
ret
push
push
subl
add
enter
aad
push
dec
fst
mov
push
sbb
hlt
cmpl
outsl
shrb
push
inc
jne
orl
xchg
inc
pop
in
push
add
adc
jo
stos
adc
push
xchg
mov
scas
pusha
mov
adc
fwait
jmp
mov
adc
mov
jl
cmp
add
mov
cmp
notb
inc
pop
dec
leave
pusha
push
ret
int3
pop
cmpsb
subl
sub
test
je
les
orb
mov
push
cmp
dec
aam
stos
inc
dec
std
popf
pop
push
jne
lret
nop
add
test
popf
lock
addb
fdivrl
mov
ficomps
jnp
push
adc
je
and
push
and
sbb
cmp
stos
push
lods
add
mov
adc
popa
cmp
push
jae
inc
jno
add
dec
jbe
sub
xchg
xchg
stc
dec
lods
enter
jbe
test
stos
aad
pop
sbb
jne
or
mov
mov
fimull
ror
push
xlat
mov
or
mov
inc
mov
sbb
addl
pop
sti
call
jmp
inc
pop
cmpsb
xorl
aam
insl
xchg
or
adcl
cld
test
or
stos
mov
movsl
scas
mov
mov
and
sbb
notb
xor
add
jp
and
stos
inc
shll
lret
push
clc
ljmp
or
adc
ret
push
push
jp
mov
xor
shll
movsb
dec
cld
push
js
sub
or
sub
or
ds
fsubr
mov
add
sbb
xor
aad
inc
dec
push
add
loope
inc
fidivrs
aad
clc
add
sti
in
xor
push
xor
sbb
inc
push
jb
scas
pop
mov
and
xor
adc
add
sub
inc
push
flds
loopne
cmc
imul
lahf
mov
adc
mov
and
scas
mov
xlat
mov
scas
sbb
and
or
pop
je
mov
add
push
sub
in
push
inc
call
add
xor
adc
pop
cli
jle
jb
and
cmp
stos
jbe
pop
lfs
mov
or
sbb
cmp
sbb
lahf
mov
loope
mov
or
shlb
sbb
icebp
jle
clc
mov
icebp
add
bound
je
lock
pop
adc
pop
scas
mov
or
or
mov
les
inc
icebp
sbb
push
addl
mov
loop
push
push
push
sbb
mov
loop
push
xchg
aas
stos
push
adcl
js
mov
outsb
mov
daa
roll
rcrb
movsl
enter
cmp
in
pop
push
js
cld
lret
lods
stc
test
ret
enter
sbbl
adc
sbb
cs
leave
out
add
mov
leave
pop
jae
jne
add
repnz
rorb
int
sbb
or
mov
cmpsl
xchg
out
fimull
mov
adc
fcom
rorl
cli
xor
push
mov
mov
push
je
push
mov
sub
int3
fdivl
fwait
jne
adc
into
mov
sbb
sahf
lea
cmp
loope
push
out
out
enter
adc
shr
cmpsl
dec
push
lea
cmp
inc
scas
dec
sbb
iret
sar
ljmp
push
les
lret
test
jbe
adc
punpckhbw
xchg
pusha
or
sbb
orb
add
stos
lcall
adc
ficoms
sbb
or
adc
or
or
enter
lds
iret
je
lds
mov
or
push
xchg
add
xchg
xor
outsb
mov
mov
add
stc
xchg
pusha
notl
jnp
sbb
testl
lea
sub
int
or
jb
fcoml
jne
js
xchg
jo
sbb
mov
cltd
sbb
les
mov
mov
jne
bound
into
cltd
insl
out
mov
scas
sub
add
dec
push
mov
sub
es
cmpsb
mov
mov
add
or
mov
xchg
rolb
iret
jle
or
dec
fistl
xor
inc
aam
insl
cmp
xor
mov
mov
out
sbb
jbe
popa
cmp
sub
ljmp
or
or
pop
push
inc
push
mov
lret
pop
mov
shl
test
andl
add
aam
jno
mov
orl
xor
mov
push
xchg
pusha
and
adc
or
ffreep
stos
fcompl
or
xlat
pop
stos
push
loopne
test
shrb
mov
xchg
mov
xor
cld
cmp
adc
inc
mov
movsb
pusha
jo
xchg
inc
or
xor
push
xchg
xor
jnp
decl
push
imull
mov
inc
ret
and
adcb
dec
ret
inc
or
mov
pop
rclb
pop
cmp
pop
pusha
add
repnz
mov
loop
cmp
push
orb
rcl
shll
dec
push
cli
push
and
adc
xchg
rorb
add
stos
dec
xchg
ljmp
adc
sbb
dec
movb
ret
nop
dec
xor
push
inc
leave
or
push
push
or
add
loop
in
xchg
sub
outsl
adc
cmc
add
mov
popf
rcrl
mov
pop
add
emms
cwtl
adc
add
ljmp
ret
dec
stos
mov
xchg
cli
stos
addb
or
mov
jl
or
add
sub
pop
pop
fs
movsb
imul
repnz
push
cwtl
lcall
in
pop
dec
and
rorb
les
addr16
push
mov
xorb
sbb
clc
mov
call
sub
ret
jae
push
and
pop
cmp
rorl
jne
enter
sub
xadd
scas
fists
ljmp
add
xchg
out
sub
stos
adc
negl
ljmp
pop
xor
je
push
cmpsb
sub
shll
xor
jmp
insb
repz
pop
cs
xor
push
loopne
inc
mov
out
aad
sbb
sbb
adc
cmpl
test
inc
sub
subb
lds
shlb
js
or
out
push
inc
fs
and
cmpsb
stos
push
rorl
fsubs
push
add
lds
push
sti
sub
sbb
inc
add
sub
lcall
mov
inc
push
sub
push
rol
xor
or
pop
add
pushf
or
negb
push
pop
push
sbb
aad
jmp
add
data16
cmp
push
rcrb
and
es
xchg
jp
add
push
pop
sub
mov
ljmp
sbb
sbb
add
mov
mov
sbb
inc
inc
lods
enter
sbb
sub
sub
aas
lock
inc
pop
lds
jmp
or
adc
loopne
jg
nop
cmp
in
stos
or
test
cld
jo
pop
mov
mov
or
rcll
jo
cmp
out
mulb
jb
pop
sbb
dec
sbb
add
out
icebp
lds
or
mov
das
mov
add
loopne
sub
cmp
cli
mov
pop
jge
inc
addl
push
push
movsl
out
mov
dec
jo
pusha
add
lret
sbb
push
roll
adc
rcrb
les
xor
xor
xchg
and
cld
jmp
clc
sahf
pushf
xor
cmp
test
popa
insl
andb
xchg
or
ret
mov
shrl
sti
jnp
mov
mov
dec
push
movsb
push
ja
fldt
mov
mov
jb
cs
add
mov
into
lahf
mov
and
scas
js
pop
insl
push
xor
pop
push
out
mov
pop
add
add
sbb
nop
cli
inc
imul
in
push
popf
sbb
mov
xchg
orl
mov
mov
mov
sbb
leave
sbb
mov
rcl
aam
push
movsl
add
add
and
add
adc
jmp
jg
insb
loopne
xchg
sbb
add
fiaddl
icebp
pop
mov
pop
ljmp
push
and
or
adc
xchg
sub
fstl
fcmovbe
pop
add
push
add
lcall
rclb
mulb
dec
aad
push
and
jnp
add
add
jmp
add
shlb
cltd
xor
aam
sbb
enter
adc
sti
add
pusha
or
sbb
adc
jge
fcomip
sbb
out
sub
ret
add
push
test
sub
sti
outsl
cli
push
pop
adc
pop
push
adc
add
rcll
jbe
pop
lret
adc
push
or
push
pop
or
sub
cmp
sbb
push
sbb
jb
pushf
jae
aaa
jg
pop
insl
add
std
jl
insl
jns
and
stos
icebp
xchg
jmp
test
sbb
lods
sbb
xchg
cmp
and
pop
xor
icebp
add
jno
push
loopne
jmp
or
sbb
fsubrs
mov
mov
push
sub
inc
out
mov
xor
sbb
add
or
nop
mov
push
sub
repnz
push
mov
dec
cli
cmp
dec
push
jbe
leave
icebp
mov
mov
push
mov
sbb
sbb
sahf
lods
jmp
push
pusha
cmp
cmp
push
push
movb
add
sbbl
sbb
xor
xor
pop
insb
out
or
lret
and
aaa
iret
inc
add
dec
adc
pop
jecxz
lret
sbb
push
jl
or
add
inc
stc
lcall
jns
adc
into
mov
xchg
stos
mov
icebp
sbb
jno
inc
dec
pop
imul
rorb
mov
pop
enter
out
push
adc
bound
aam
into
in
push
mov
xor
adc
push
xchg
ds
sub
jmp
mov
fidivrl
pop
movsl
xor
or
or
clc
sub
inc
imul
pop
or
lock
lea
adc
jecxz
mov
clc
sub
xchg
jge
push
jbe
adc
sbb
sbb
lock
popa
inc
adc
cmp
outsl
cmp
pop
cmpsl
jg
sarb
push
add
jmp
or
mov
push
push
sarl
xchg
adc
inc
test
pop
test
xor
push
ljmp
inc
cmpsb
pop
sbb
cmp
faddl
dec
adc
and
xlat
push
mov
add
sbb
adc
mov
dec
cmp
ret
cmp
add
mov
sbb
mov
fsubrs
pop
loopne
mov
cmp
ficomps
aas
xchg
pop
jne
jp
dec
dec
inc
push
push
push
push
and
in
inc
pop
xchg
addr16
roll
mov
jge
iret
jmp
nop
add
icebp
dec
inc
add
adc
xchg
jno
inc
add
jge
mov
jmp
rcll
push
pop
out
or
xorl
bound
pop
lcall
adc
adc
rcl
xor
dec
pop
and
shl
adc
jl
out
mov
jg
and
enter
pushw
and
rolb
leave
mov
jo
lcall
xor
pop
repnz
inc
loope
sbb
out
or
leave
push
movsb
mov
cmp
push
fbstp
sbb
orl
inc
add
out
push
and
scas
jecxz
call
mov
adc
push
xor
scas
mov
mov
jnp
addb
daa
out
adc
jo
lret
push
push
stos
inc
sbb
cs
mov
push
pop
cmp
idiv
into
fmuls
sarb
and
int3
add
leave
push
inc
push
xor
or
popf
rolb
pop
cmp
clc
add
sbb
fiaddl
xor
push
lcall
inc
push
push
rorl
cmpsb
push
shl
push
lods
aam
dec
movsb
orb
or
and
push
roll
jnp
aam
lcall
adc
mov
or
fwait
into
les
cs
or
xor
xchg
arpl
mov
mov
lret
lock
adc
or
sub
pop
adc
in
xchg
mov
addb
add
cmp
pop
and
xor
jge
or
adc
fs
pop
push
adc
mov
lcall
sbb
test
inc
add
push
sub
jo
dec
shrl
dec
sbbl
adc
pusha
rolb
add
sub
mov
cwtl
adc
int
sub
popa
shlb
lock
push
push
out
inc
adc
lds
jae
cmp
dec
mov
add
cmp
add
jmp
sub
loopne
fstpl
in
xor
fcoml
pop
xor
in
xor
xchg
cmp
add
aaa
decb
stc
mulb
inc
dec
push
ror
cmp
or
jl
sbb
adc
or
add
inc
mov
lcall
push
addb
scas
mov
shll
inc
in
rcrb
cmpsb
scas
roll
aad
pop
mov
xchg
aam
mov
push
popa
mov
pusha
std
add
loopne
es
decb
and
push
pop
popf
mov
into
inc
movsb
dec
cmp
mov
pop
and
pop
pop
add
ret
inc
test
hlt
fimull
add
xchg
test
sbb
lret
inc
jae
mov
rolb
into
fldl
les
lock
es
adc
sub
push
mov
mov
test
xchg
sub
adc
nop
sub
vmaxss
push
sbb
call
sbb
hlt
shrl
mov
push
mov
inc
arpl
sbb
mov
and
scas
dec
sbb
sbb
repz
push
cmp
adc
cmp
into
out
xchg
inc
and
and
mov
cmc
cmpl
add
adc
pop
scas
mov
push
inc
loopne
add
insb
shr
push
dec
xor
stos
or
and
rorb
push
inc
ljmp
lds
push
je
sbb
adc
push
scas
repz
mov
xchg
in
push
mov
cs
das
call
xchg
jns
cmp
mov
mov
insb
addl
jbe
pop
jne
xorl
inc
jg
xor
sub
pop
mov
pusha
mov
adc
pop
inc
jge
imul
js
mov
push
push
jge
xchg
cltd
jg
push
mov
orb
ret
js
jo
cmp
xchg
mov
adc
loope
add
and
cmpsb
sti
and
test
ret
adc
xchg
call
mov
sub
and
add
pop
dec
add
sub
xchg
enter
iret
push
push
xor
pop
sbb
mov
movsl
inc
bnd
jae
mov
jae
inc
jns
push
pop
insl
test
testl
stos
add
sub
mov
add
leave
bts
mov
scas
or
mov
rcrl
or
jne
mov
push
fstpl
mov
cltd
ficomps
sti
je
or
ljmp
adc
mov
inc
mov
into
inc
add
push
adc
daa
pop
mov
cmpsb
xchg
enter
mov
xchg
adc
xlat
or
lret
int
add
mov
repnz
test
jne
xor
push
push
mov
push
out
push
pop
push
sbb
mov
xchg
pop
rcrl
push
out
mov
sbb
int
cmp
mov
xchg
shlb
ljmp
cmpsb
mov
in
aad
ficoml
popa
outsb
lock
rcrl
sbb
sbb
inc
lock
icebp
fbstp
cltd
mov
ret
mov
or
xor
add
push
push
insl
jmp
aad
mov
pop
pop
das
loope
les
mov
push
push
in
lret
xchg
mov
stos
pusha
inc
push
push
sahf
fnstsw
jno
fildl
mov
cmp
adc
sbb
push
popf
bnd
loopne
xchg
xor
jno
repnz
push
add
lcall
mov
dec
shr
punpckhbw
add
mov
sbb
or
lock
mov
adc
lcall
jo
jo
inc
jmp
sub
inc
push
test
sarl
pop
sub
mov
adc
and
mov
or
cli
inc
jmp
pop
roll
adc
adc
clc
sbb
lret
dec
push
adc
pop
movb
out
and
fisttps
or
test
adc
cmpsl
mov
sbb
test
mov
mov
pop
je
adc
mov
pop
pusha
add
dec
cli
add
adc
push
js
or
inc
lock
sbb
cmp
sbb
out
mov
jo
adc
shr
in
pop
xor
lret
add
cltd
outsl
cmp
movsb
enter
add
or
enter
cmc
mov
bswap
jmp
xchg
push
sub
xchg
cmpl
mov
rol
loopne
dec
sbb
aad
rcrb
jnp
es
lods
fwait
icebp
mov
xrelease
push
dec
bound
cmp
ja
es
sub
mov
call
sub
adc
push
in
or
push
pop
push
mov
fmuls
sbb
stos
adc
mov
xorl
lcall
loopne
push
mov
imul
sub
pop
loope
jno
push
push
test
cmp
jns
inc
loop
cmp
jno
mov
out
pop
xchg
and
dec
add
add
xor
hlt
test
mov
jecxz
push
xor
pusha
movsb
icebp
adc
mov
and
insl
and
or
into
in
inc
or
add
xor
xor
add
sbb
sbb
daa
loop
arpl
push
push
fsubrl
push
push
bound
push
push
or
cmpsl
mov
adc
cwtl
jne
mov
and
ds
push
fs
inc
xchg
or
es
fstl
cmpsb
andb
rcl
addl
sub
or
notb
xor
pop
sbb
push
jb
dec
loopne
or
ss
dec
fs
clc
rcr
cmp
mov
cltd
rcll
mov
mov
hlt
sub
adc
mov
or
test
cmc
xchg
push
jno
add
enter
loope
or
or
movsb
push
mov
ret
dec
loopne
jne
ret
mov
push
daa
popf
clc
push
pop
outsb
shl
out
rorl
sbb
lcall
ja
pop
scas
ret
mov
cs
int3
scas
and
call
aad
xchg
cmp
scas
mov
mov
xor
and
loopne
fimuls
out
add
sub
add
adc
loop
mov
xor
or
sbb
mov
je
add
push
cmc
adc
shll
adc
jo
pop
sub
jecxz
push
or
dec
bound
bnd
xchg
adc
add
ret
inc
sub
xor
add
inc
jle
add
mov
dec
fstpl
leave
or
scas
push
push
addb
adc
test
loope
mov
jmp
inc
inc
jmp
pop
test
enter
test
sub
mov
shl
dec
cmp
ret
cli
push
mov
sub
xchg
or
stos
jmp
pop
cwtl
sahf
movsl
sarb
inc
or
cmp
push
cli
test
rcrl
in
push
mov
les
orb
mov
lock
insl
lock
sbb
xlat
xor
out
adc
out
adc
js
stos
cs
in
inc
add
xchg
add
mov
sbb
aad
add
xchg
mov
cmp
jne
or
into
cwtl
call
pop
mov
add
xor
jno
lods
stc
pminsw
jo
jne
popa
push
add
ror
movsl
fsubl
add
mov
and
xor
mov
cmpsb
add
je
and
lret
jnp
add
jo
ss
push
jno
scas
jge
jno
sub
les
xchg
add
arpl
sbb
lods
imulb
mov
into
sbb
popf
leave
jmp
cmp
push
mov
dec
mov
and
adc
add
daa
cli
addl
lock
ret
lock
mov
or
fs
out
mov
adc
in
xchg
dec
lods
add
mov
sbb
xor
adc
xchg
xlat
sti
push
push
pop
or
and
mov
jae
pop
jge
pushf
add
sub
or
inc
ja
cmp
cmpsb
add
sub
inc
addb
and
sbb
sub
into
and
add
dec
lods
add
adc
push
enter
dec
shl
imul
jo
je
int3
sbb
mov
mov
pop
movsl
adc
pop
lret
enter
cmpsl
das
xor
in
mov
adc
push
jg
jne
mov
hlt
inc
in
inc
fwait
sub
push
rolb
insb
pop
stos
jmp
jmp
jmp
add
cmp
mov
dec
mov
mov
add
dec
pushf
jae
sbb
call
jne
rorb
push
adc
add
jb
and
test
loopne
sbb
and
pop
addr16
mov
mov
and
or
pusha
scas
fs
hlt
stos
dec
pop
cmp
subb
mov
jo
sbb
cld
mov
adc
sbb
mov
sbb
int3
mov
or
roll
jbe
pop
pop
cmc
test
aaa
mov
loopne
lods
add
mov
mov
push
cmp
mov
cs
mov
cmp
push
in
xor
in
xchg
mov
aam
test
sarl
in
push
lds
hlt
push
xor
clc
lea
mov
ffree
mov
sbb
lret
adc
sbb
stos
and
shrl
je
add
dec
dec
inc
add
jno
lcall
inc
xchg
stos
jbe
xchg
adc
stos
stos
adc
cmp
orl
and
jb
rclb
js
mov
push
lock
sbb
sarb
scas
fwait
test
lock
mov
addl
mov
push
pop
daa
or
sub
or
pop
stos
xor
stc
leave
adc
stos
dec
lds
daa
push
sar
mov
leave
loop
mov
addl
out
roll
sub
adc
mov
sbb
sub
mov
ja
push
jne
and
je
repnz
loopne
js
push
outsb
sbb
mov
cwtl
sub
das
fs
pop
dec
test
jb
or
hlt
cmp
cld
ljmp
cmc
xchg
add
cmp
push
test
add
pop
sbb
mov
xchg
xor
in
push
push
out
andl
movsb
or
or
cmp
rcr
add
scas
push
cmp
in
into
hlt
adc
and
inc
push
xor
lret
lock
push
add
push
jge
popa
sbb
in
clc
and
inc
sbb
test
stc
std
enter
jo
addl
mov
adc
pop
add
ret
testl
xchg
push
shlb
inc
xchg
adc
sub
push
sub
add
adc
mov
out
jbe
adc
jb
mov
xchg
roll
inc
repnz
adc
add
sbb
mov
add
mov
push
es
dec
scas
pop
xor
sbb
fsts
add
and
mov
xchg
pop
and
aad
cwtl
insb
loopne
sbb
sbb
dec
hlt
jmp
inc
daa
addb
test
add
push
mov
ret
push
cwtl
push
daa
inc
and
dec
pop
sbb
mov
call
add
jnp
lods
movsl
push
xchg
and
stc
mov
and
fisubs
shl
and
lea
jo
push
bound
addr16
shrl
xchg
out
adc
andb
xor
je
add
push
test
cmp
cmp
loopne
cmp
adc
mov
dec
adc
and
aam
xor
insb
sub
jo
bound
xchg
incb
repz
or
mov
and
shrl
sub
add
leave
movsb
aaa
mov
push
pop
jnp
stos
pop
xchg
sahf
push
pop
lock
mov
pop
mov
mov
jns
repnz
orl
jl
mov
mov
pushf
xchg
rclb
loop
add
test
mov
stos
shlb
shrb
lret
aas
pop
rorb
test
mov
ret
dec
add
sbb
pop
pop
test
or
xor
cld
xchg
ss
enter
jl
xor
insb
popa
enter
repnz
xor
stos
or
mov
push
int
data16
sub
pop
mov
movsl
push
js
mov
aam
push
es
adc
lock
sub
or
cmp
xorl
dec
jb
rorl
std
dec
sbb
or
push
mov
mov
leave
mov
sbb
dec
or
movsb
cmpsl
or
cmp
mov
add
pusha
pushf
cmc
add
js
adc
cmpsb
call
jmp
fstpl
fwait
icebp
popf
mov
jne
montmul
cmpsb
test
lea
fsubrp
pop
test
add
mov
and
rolb
cmp
ja
or
mov
loope
loopne
dec
sub
or
stos
dec
je
sbb
jae
xchg
xor
jno
out
xor
cwtl
cmpb
mov
add
push
push
sti
push
sbb
scas
or
push
pusha
shl
in
enter
and
fisubrs
push
rolb
pop
push
sbb
aad
shrl
add
jne
roll
lret
cmc
sahf
add
rolb
aad
daa
fdivs
shll
sbb
sbb
push
adc
push
and
push
push
jp
rorb
pop
insl
aad
push
shlb
sub
inc
sbb
lds
mov
xchg
pop
bound
inc
push
rclb
pop
leave
pop
aam
dec
inc
aad
push
int
ret
add
test
scas
sub
pop
roll
incl
push
inc
js
testl
adc
or
or
lret
loop
js
loopne
adc
inc
roll
push
jo
push
lods
push
es
test
ljmp
or
sarb
jo
xchg
call
sahf
dec
les
push
sbb
test
sbb
add
ficoml
stos
adc
stos
dec
rolb
fwait
push
sbb
loop
xor
jl
pop
add
popl
mov
ljmp
adc
inc
and
cli
jo
dec
scas
loopne
repnz
call
or
xor
push
pop
adc
add
ficoml
rorb
test
es
inc
fists
or
push
mov
or
std
dec
rcll
scas
adc
xchg
and
or
addr16
aad
and
or
mov
push
jb
lock
into
xor
mov
shl
adc
push
mov
add
mov
test
mov
fcom
fstl
mov
insl
jle
into
aam
push
repz
addl
mov
inc
fwait
lds
hlt
ljmpw
outsl
cmpsb
data16
scas
test
adc
add
push
inc
test
lods
push
rorb
adc
insb
and
sub
rorl
push
movsb
add
shlb
pusha
adc
pop
adc
arpl
sbb
mov
inc
loop
inc
test
add
jne
push
mov
mov
xchg
rcrb
adc
stos
push
movsb
add
sbb
adc
repnz
inc
xchg
jnp
sub
push
xor
or
sbb
int
sbb
adc
dec
loop
int
loope
xchg
icebp
mov
loop
pop
mov
mov
out
das
push
jne
inc
ret
bound
pop
gs
dec
call
inc
lods
popf
mov
cwtl
pop
mov
movsl
leave
sub
adc
adc
rcl
call
rclb
lahf
or
xchg
adc
and
std
pop
ljmp
push
or
or
push
sbb
imul
scas
inc
test
aad
data16
ljmp
adcb
movsb
adc
adc
rolb
inc
int
clc
sbb
mov
add
lds
ret
stos
loope
scas
pop
push
rcr
shl
or
data16
movsb
test
jb
inc
insb
push
xchg
pop
inc
rorb
inc
xor
push
jb
and
push
clts
ret
in
insb
inc
mov
xor
icebp
jecxz
cmp
pop
lds
cmpsb
dec
movb
lret
sbb
stc
or
sbb
sub
into
mov
adc
xor
cmpsb
lret
jns
push
push
pushf
push
add
cmpl
or
push
outsb
rcrl
jl
add
in
sbb
sbbl
out
ret
lret
es
push
outsb
outsl
sub
jle
xchg
movsb
xlat
out
push
ret
loop
and
aad
push
sub
shll
adc
push
testl
imull
leave
push
orl
inc
mov
mov
sbb
add
adc
xchg
or
sbb
inc
push
clc
insb
jle
jo
inc
lret
inc
push
push
dec
cmp
adc
inc
test
or
mov
notl
notl
loopne
cmp
add
and
push
mov
mov
test
mov
cmp
aam
pop
xchg
enter
dec
push
jo
test
mov
mov
lock
adc
xor
jl
sbb
jmp
lock
fimull
inc
jno
ret
iret
sbb
or
xchg
cli
push
cltd
jle
rcll
into
fsubrp
sbb
scas
sbb
sbb
out
addb
stos
add
je
lds
push
pop
sub
sub
and
in
inc
test
add
ret
mov
nop
adc
or
in
or
sub
ja
stos
sbb
lcall
xor
mov
je
sub
mov
add
jge
xchg
or
nop
ret
xor
push
cmp
sub
test
adc
movsl
jp
lret
lcall
ret
pop
cltd
xor
loop
les
sbb
rclb
mov
jb
ljmp
lret
jnp
cmpsb
push
sub
mov
xor
or
or
xchg
sbb
insb
cmp
push
sbb
lea
js
outsb
dec
inc
cmc
in
add
cmova
mov
mov
jo
or
adc
sbb
dec
inc
inc
jo
loopne
fmull
fsubl
in
sub
add
pop
hlt
inc
push
scas
jl
mov
mov
int
js
ret
popf
orb
clc
add
aaa
shrb
push
jmp
out
lock
cmp
aaa
and
or
sbb
push
mov
push
and
fisubrs
call
push
jecxz
or
lock
mov
xlat
and
cmp
jbe
xor
or
into
enter
add
ret
les
add
add
popa
mov
add
add
shrl
shr
and
cmc
xor
sub
xchg
xlat
ret
fs
push
das
js
and
repnz
add
push
pusha
add
shl
cmpsb
mov
fsubrs
push
pop
cmp
mov
xchg
enter
push
inc
shll
or
test
dec
mov
pop
and
jge
aam
testb
cmc
mov
sbb
adc
add
sbb
adc
dec
sahf
pop
aad
sub
out
push
jl
leave
lds
roll
lods
icebp
jo
sarb
pushf
imul
aas
cwtl
cwtl
push
mov
mov
add
push
mov
shlb
into
push
popa
inc
sbb
pusha
or
aas
mov
roll
cmp
sbb
xor
or
es
insl
out
shrb
cli
in
mov
js
xor
ljmp
add
xor
addb
lods
sbb
sbb
add
push
push
or
lods
sbb
mov
in
mov
push
in
inc
jae
mov
cmpsl
js
sub
hlt
push
stos
xor
dec
mov
in
dec
mov
adc
fadd
push
leave
pop
and
test
inc
ret
mov
out
popa
add
xor
stos
push
pop
mov
and
lcall
mov
push
pop
shr
fcoms
dec
sbb
add
xchg
push
cmpsl
dec
inc
mov
daa
sbb
xchg
shll
push
or
sub
jp
or
add
pop
addr16
loopne
stos
in
add
inc
add
negb
cmpsl
pop
movsb
std
pop
pop
movsb
inc
cmpl
inc
pop
sub
ret
push
add
ret
xor
jo
add
hlt
push
in
jp
mov
adc
cmovl
sub
icebp
ljmp
xor
leave
addr16
orl
cmpsl
out
xor
pop
jo
mov
iret
call
mov
orb
sub
fs
arpl
cmpsb
mov
xor
rcll
jecxz
les
push
sub
arpl
scas
sbb
pop
into
push
ds
xchg
rcrb
outsb
adc
imul
test
clc
push
add
shll
add
pop
mov
cltd
add
pop
dec
or
cmp
cltd
mov
jl
sub
push
movsb
sub
rcll
test
lcall
sbb
or
pusha
stos
mov
xchg
xor
rolb
adc
call
mov
add
xor
add
sbb
dec
xorb
into
movsl
orb
js,pn
push
push
xor
cmp
jne
push
pop
mov
mov
cmp
inc
and
inc
xchg
sti
push
and
sbb
stos
add
orb
iret
adc
push
sub
xor
stos
sarl
push
add
mov
add
int
cmp
inc
out
in
mov
dec
enter
fcoml
cltd
insb
push
subb
mov
int
push
sbb
xchg
test
adc
inc
pusha
sbb
xchg
jmp
pop
loopne
popf
ja
jnp
adc
stos
hlt
lcall
fwait
or
adc
adc
adc
pop
push
orb
xchg
insl
loopne
xor
xor
push
hlt
sbb
dec
lds
sbb
cmp
shl
ljmp
push
icebp
inc
scas
jle
push
rorl
aad
rclb
cwtl
cmp
lock
lahf
or
pop
in
mov
xchg
jmp
push
adc
jno
inc
push
loopne
xchg
cwtl
rorb
inc
mov
outsb
push
fnsave
adc
push
pop
push
cmp
and
aad
or
leave
mov
or
loop
imul
push
inc
shl
xor
inc
insl
mov
nop
xorl
pop
shll
dec
mov
fidivrl
xor
pop
push
in
addb
inc
movsb
test
sub
loopne
test
push
or
clc
adc
jbe
andl
mov
dec
in
add
int
in
pusha
enter
ja
ret
mov
adc
rorl
dec
in
lret
add
imul
add
sahf
xor
rcrb
add
add
cmp
adc
inc
xor
inc
and
inc
fidivrl
addr16
std
sub
mov
stos
cmp
adc
adc
inc
int3
and
adc
mov
adc
cmp
dec
sbb
les
pop
adc
mov
rolb
adc
test
mov
push
dec
xchg
jbe
sbb
sbbl
adc
flds
roll
mulb
rolb
xchg
shl
mov
or
sub
fnstcw
inc
xchg
ljmp
jbe
sbb
dec
mov
mov
push
add
scas
clc
xor
add
icebp
ret
cmc
sub
push
push
stos
shlb
add
xchg
es
rolb
mov
add
push
aam
jb
dec
outsl
xor
movsl
pop
mov
lods
mov
bswap
and
or
add
loopne
es
test
xchg
add
push
in
dec
or
daa
and
or
push
add
loope
cwtl
push
popa
sub
and
add
jns
addb
js
adc
adc
aaa
sub
fidivrl
push
xlat
and
adc
rorl
push
mov
pop
xor
cwtl
sbbb
mov
mov
pop
popa
inc
push
out
add
inc
mov
jmp
mov
loopne
dec
and
mov
ret
xor
jno
pop
in
inc
lret
inc
test
adc
jb
jmp
and
and
ficoml
sarl
stc
cmc
mov
mov
or
shll
cs
sbb
mov
xlat
mov
outsb
rorb
clc
rolb
add
push
and
mov
inc
push
mov
xor
inc
push
xor
daa
ret
je
xor
mov
xor
shll
mov
push
pop
push
push
test
xor
adc
sbb
xor
mov
push
mov
pop
jl
std
push
push
pop
sbb
daa
setno
or
and
mov
or
mov
or
and
inc
sbb
jae
dec
inc
adc
jb
sbb
mov
inc
cmpsl
mov
sub
or
lds
add
mov
sbb
lret
and
insb
mov
add
adc
pusha
sub
add
cmp
leave
icebp
jmp
or
pop
inc
pop
mov
mov
mov
adc
stos
pusha
sub
push
and
inc
leave
xor
movsl
push
adc
add
in
add
push
jns
daa
pop
lret
orb
pop
rorl
rcl
mov
rclb
sub
sub
incl
sar
dec
push
xchg
loope
cmp
and
and
push
pusha
mov
into
mov
jg
test
push
jb
and
push
push
jl
sub
cmp
jae
subl
test
add
aaa
push
push
add
mov
sbb
dec
mov
xor
aad
mov
loopne
in
mov
sarb
or
mov
sub
cmp
mov
dec
into
ljmp
stos
push
push
inc
bound
mov
adc
sub
mov
cmpb
imul
pop
sahf
xor
xor
sbb
lds
xorb
push
or
push
dec
mov
push
mov
cs
stos
and
or
or
out
ljmp
jnp
rorb
sbb
movsb
adc
xchg
andb
mov
into
lret
rclb
jb
sub
hlt
add
test
aad
pop
inc
icebp
dec
xchg
pop
std
aam
add
xor
mov
pusha
and
or
test
xchg
add
add
inc
test
cli
cvtps2pi
add
cmp
push
call
mov
aaa
mov
lock
testb
out
add
aad
leave
and
push
and
adc
sbb
add
sbb
mov
and
test
out
or
pop
inc
mov
pop
xor
mov
lcall
dec
insb
shrl
pop
pushf
mov
and
and
mov
dec
sbb
popa
and
adc
dec
sbb
pop
es
std
adc
pop
pcmpeqb
ret
dec
inc
push
push
sub
insl
xchg
jb
mov
ret
inc
rcrb
jge
ret
je
in
mov
and
and
sub
cmp
push
lret
dec
es
in
call
adc
ret
cltd
jb
or
enter
rcrb
out
inc
mov
call
aas
aaa
dec
inc
dec
adc
das
rorl
add
dec
mov
push
test
cmp
dec
mov
jne
sub
xchg
push
push
push
sahf
stos
pop
and
lock
cmp
lods
adc
add
push
cmp
cmp
sahf
sbb
ret
push
andb
rclb
sar
add
sbb
push
mov
je
ret
jg
js,pt
xchg
push
inc
in
lds
jb
testl
cs
or
and
insl
and
rcrl
xor
rcrb
je
xlat
or
mov
and
int3
sbbl
dec
aaa
pop
scas
shl
sbb
pop
inc
adc
inc
pop
add
or
arpl
sbb
sub
mov
mov
push
adc
enter
sbb
mov
sbb
pop
jp
xor
pop
call
inc
mov
mov
idivb
push
js
call
mov
inc
arpl
addr16
mov
inc
add
js
jo
push
loope
mov
mov
jp
or
rclb
xor
pop
sub
mov
insl
or
mov
mov
aam
ret
out
sbb
push
xor
push
push
dec
mov
cmp
mov
and
data16
push
scas
push
in
sub
in
movsb
sbb
or
or
les
sahf
iret
in
xchg
stos
jne
jl
sbb
add
sbb
loopne
lahf
sarb
std
fiadds
xor
sbb
repz
jne
mov
xorb
sbb
sbb
pop
add
and
jbe
and
into
ret
repnz
push
lret
cmp
ljmp
mov
cmp
lock
bound
cmp
cwtl
fisttps
xor
push
push
sbb
xor
in
enter
ret
daa
ret
rcr
or
add
add
mov
lock
push
adc
add
test
sbb
out
add
rcrb
popl
imul
mov
xorl
jns
sbb
inc
adc
orl
test
lret
or
daa
and
popa
or
mov
push
sbb
sub
jne
push
sub
jns
shll
xchg
pop
cltd
call
ja
cltd
jp
xor
push
dec
mov
aad
shll
jne
inc
test
lcall
add
cwtl
addb
inc
adc
rorb
pop
xor
pop
push
leave
icebp
push
inc
and
pop
jecxz
add
adc
hlt
sbbb
cmpsl
aam
cltd
push
jb
push
mov
ljmp
push
cmp
popa
mov
lds
add
mov
addr16
and
adc
pop
cltd
sub
cwtl
and
and
dec
pop
add
mov
fmuls
mov
or
adc
dec
adc
loopne
and
push
adc
cmp
mov
adc
loop
pop
mov
sub
jno
dec
sub
inc
loopne
xchg
test
add
mov
add
test
jp
or
lods
jno
mov
cltd
mov
mov
lret
cmp
inc
pusha
cmpb
or
sub
in
les
negb
enter
mov
sub
adc
out
ljmp
mov
xchg
pop
mov
in
or
mov
sbb
out
or
xchg
push
push
leave
vfrczpd
add
lret
jmp
ret
loope
push
inc
dec
sub
push
cmpsb
adc
lret
jo
pop
mov
pushw
sub
arpl
lods
sub
rcll
or
pop
adc
add
push
in
inc
nop
dec
add
pop
lea
mov
test
adc
jbe
sbb
rol
mov
pop
lods
rorb
inc
aas
enter
adc
test
stos
ret
addb
enter
bound
repnz
add
push
loop
push
xchg
push
iret
jl
xor
jae
pop
sbb
fdivrl
adc
pop
mov
xchg
mov
sub
shl
sub
inc
sti
aaa
jns
or
dec
lods
lret
in
adc
stc
mov
jo
sbb
fucomip
adc
and
sub
jne
inc
mov
mov
lret
inc
cmpsb
addb
push
add
lret
lds
mov
adc
and
mov
push
ficoml
add
shrb
or
call
or
xor
mov
and
aaa
rcl
shlb
add
sub
mov
mov
pop
push
mov
cli
adc
aas
and
test
sbb
push
or
mov
add
insl
hlt
push
ret
adc
push
push
es
sub
push
aam
mov
sbb
or
sbb
fidivs
mov
and
xchg
imul
or
outsb
sub
xor
mov
mov
dec
add
or
add
test
lods
loopne
ds
js
inc
jecxz
sbb
gs
ljmp
inc
pop
pop
les
rclb
rolb
or
adc
xchg
rorb
hlt
and
or
or
lret
out
sbb
mov
xorl
in
push
mov
jecxz
xchg
add
imul
adc
push
mov
add
add
insb
push
arpl
lods
daa
ret
mov
xchg
push
shll
push
addr16
and
mov
xchg
xchg
add
mov
pop
popl
in
push
jmp
cmp
push
or
adc
jo,pn
and
cmc
sub
rorl
or
repz
mov
sbb
scas
jb
mov
lcall
sbb
xor
xchg
jns
mov
in
out
lret
inc
add
cltd
push
push
movsl
add
aad
xor
xor
lcall
ret
sub
stos
daa
pop
jge
dec
push
data16
adc
bound
or
add
fdivs
jb
dec
and
pusha
push
movsb
inc
sahf
jae
mov
jo
mov
xor
and
mov
shlb
cmp
xor
cmpsb
insl
pop
sbb
mov
jno
cmp
dec
rorl
int
pop
push
add
push
imul
adc
lea
sbb
je
and
ljmp
inc
loop
mov
cmpsb
cmp
mov
ret
addb
mov
xchg
mov
add
mov
mov
mov
push
pop
or
xchg
ret
inc
enter
add
stc
push
push
dec
adc
adc
and
rcrb
xor
or
shrb
xchg
shrl
popa
imul
rclb
mov
pop
lea
inc
fs
notb
stos
pop
mov
sub
push
xchg
add
rclb
add
add
add
jmp
fsts
mov
inc
pop
iret
ror
xchg
loop
sbb
mov
insl
and
xor
add
pop
and
rolb
push
jmp
inc
sti
sub
sbb
push
pop
call
lock
jp
sub
movsl
adc
imul
pusha
xchg
adc
push
mov
rorl
pop
adc
int
sbb
dec
int3
mov
call
mov
push
dec
or
rclb
jmp
mov
pop
mov
fmuls
adc
fwait
lea
sbb
or
addr16
loopne
inc
sub
xor
mov
push
push
dec
xchg
add
das
add
xchg
adc
xchg
or
shrb
or
add
in
push
xor
aas
cmc
sub
add
subb
shrl
push
rorl
and
ljmp
adc
sarb
rorb
fcoml
jns
xchg
ret
push
stos
pop
push
xchg
mov
push
pop
sbb
ret
call
add
daa
pop
into
mov
mov
sub
dec
rorl
fcmovnb
jecxz
mov
scas
pop
pop
add
lock
xor
push
jnp
lret
les
sub
into
or
dec
and
cmp
or
push
pushf
adc
mov
adc
mov
les
pop
adc
xor
loop
push
mov
mov
add
fnsave
push
dec
inc
scas
rorl
fildl
ljmp
lds
rolb
or
inc
push
push
xor
ljmp
rorl
loop
rorb
xchg
sbb
adc
cltd
jmp
or
adc
cmpsl
xor
call
mov
out
int3
or
into
outsb
cmp
mull
andb
add
loopne
or
shlb
dec
sbb
inc
add
push
pop
and
aad
nop
aas
in
aam
add
add
stos
dec
xchg
pop
aam
push
ret
jmp
add
sbb
popf
sbb
jle
pusha
sahf
add
adc
xor
add
or
inc
rclb
loope
or
or
jo
sub
cwtl
or
xchg
mov
mov
sub
fcmovne
xchg
mov
push
push
daa
pusha
test
loope
loope
test
push
mov
enter
jb
pusha
mov
sub
into
pop
aam
adc
adc
into
add
or
cmp
frstor
adc
sbb
inc
or
adc
je
adc
adc
push
xor
or
push
dec
or
sbb
mov
ret
movsb
push
sub
lret
dec
add
adc
mov
pop
pushf
rcrl
mov
andl
dec
sub
pop
and
sub
mov
hlt
jo
push
push
adc
or
add
or
popf
sbb
mov
inc
push
inc
sbb
lar
add
jp
mov
xor
shlb
mov
adc
int3
test
add
shlb
add
ljmp
xor
addr16
adc
inc
sbb
mov
inc
or
rcl
add
sbb
sbb
lock
ljmp
add
loopne,pt
sub
xor
mov
sbb
shrl
mov
mov
je
sbb
cli
jbe
or
outsl
mov
pusha
and
mov
lock
test
adcb
cmp
std
xchg
xor
adc
arpl
push
push
test
dec
daa
aam
cmp
clc
xlat
add
pop
mov
fmuls
and
xorb
push
or
stos
push
leave
adc
push
cltd
testl
lcall
jle
popa
or
sub
cmp
add
or
adc
push
arpl
xchg
sbb
aam
and
lods
cmpsb
adcl
imull
mov
jmp
fdivrs
add
mov
subl
pop
and
inc
cmpsl
test
cmp
cs
adc
inc
xchg
stos
push
pop
push
xor
and
inc
or
fnstenv
ljmp
pusha
inc
outsb
push
xor
push
or
negl
add
loope
inc
es
movsb
push
xor
lds
push
sub
mov
stos
push
fisttpl
pshufw
pop
faddp
popa
cmpsb
sbb
mov
mov
sbb
jl
mov
xor
mov
out
xlat
lock
add
dec
adc
xchg
ficompl
jmp
jmp
dec
push
mov
out
adc
pop
push
push
sbb
test
int
push
daa
enter
pop
add
stos
mov
cmp
add
pop
je
sub
test
mov
lcall
test
add
pop
xor
push
push
mov
sub
mov
popf
jge
xchg
mov
mov
mov
jg
mov
sub
sbb
add
push
lahf
xlat
adc
xor
add
add
adcb
mov
test
fistps
push
cwtl
bound
adcb
cmc
ljmp
push
mov
sub
mov
in
push
nop
jmp
mov
push
jnp
adc
and
or
or
add
add
mov
mov
outsl
ret
push
sbb
add
add
bound
movsl
xchg
and
sbb
rclb
xor
xchg
add
lods
sbb
movl
aad
cmp
sti
xor
inc
add
inc
hlt
hlt
add
or
iret
dec
sbb
inc
dec
xor
je
loop
push
or
and
out
gs
push
lods
jae
insb
add
call
dec
adc
cmp
push
cmp
imul
shrl
fcoml
je
and
sbb
jb
ss
pushf
sub
add
pop
adc
xor
mov
push
call
mov
lds
mov
fistps
sbb
popa
cs
pop
xor
lret
xchg
inc
nop
test
pushf
jbe
orl
sub
pop
add
pop
push
add
or
and
sbb
fs
aaa
sbb
leave
adc
mov
inc
or
lret
fldenv
sahf
fadd
push
pushf
inc
je
or
out
inc
cmp
popa
jl
sbb
inc
xchg
push
cmpsb
push
stos
inc
mov
stos
inc
mov
js
js
or
push
pop
shll
push
or
adc
push
push
mov
push
out
inc
test
xchg
xor
adc
mov
movsb
int3
pushf
scas
ljmp
jae
inc
mov
add
roll
mov
lock
cltd
mov
lods
dec
xchg
mov
adc
das
sub
stc
loop
pop
push
jnp
ja
test
popa
movsl
mov
pop
sbb
test
adc
lcall
adc
push
movsb
or
jo
or
mov
add
inc
adc
mov
cmpb
out
sbb
pusha
xchg
push
jb
dec
and
arpl
imul
icebp
pop
or
jle
sub
jmp
mov
xchg
xor
inc
rcr
dec
adc
adc
lea
and
push
adc
push
aam
in
lcall
insl
in
sbb
pop
mov
enter
jp
fdivl
lods
or
push
dec
mov
sarb
aas
sbb
inc
lock
sbb
pop
or
lock
mov
pop
stc
ret
jb
sub
aam
pop
mov
cmc
xchg
ror
inc
in
mov
shll
inc
cmpsb
and
dec
fmul
xor
inc
add
and
lcall
push
sbb
shlb
sbb
sbb
xor
pushf
imull
imul
das
xchg
das
and
lods
push
and
sub
int
mov
stos
loope
adc
add
and
add
mov
sbb
push
les
enter
inc
nop
lods
dec
jno
add
sub
pusha
xor
or
jle
dec
xor
inc
xor
mov
popf
push
test
dec
jnp
push
pop
inc
decb
sbbb
ds
addl
add
ret
pop
or
or
icebp
inc
in
sbb
mov
div
xorb
add
pusha
dec
mov
int3
xchg
loopne
push
aam
and
sub
push
mov
mov
fs
lods
loopne
das
inc
push
mov
pusha
dec
mov
sbb
aam
add
pusha
push
lods
jb
sub
push
or
mov
sbb
pop
add
in
rcrb
int
dec
shlb
ret
push
addr16
orb
push
jne
outsb
mov
mov
cmp
adc
insl
cltd
test
or
dec
pusha
fadd
lods
sbb
aas
addr16
js
sub
ret
sahf
je
lods
push
pop
inc
lds
push
xchg
lock
or
lea
and
andb
mov
push
cltd
addb
inc
or
xor
popa
negb
inc
xor
notl
push
sbb
dec
xor
ficompl
mov
pop
rcl
nop
and
pop
mov
jae
or
ret
mov
add
add
adc
decb
sbb
or
movsb
xchg
adc
push
bound
adc
int
sbb
mov
cmp
xchg
dec
pop
stos
cs
pop
adc
xchg
mov
add
xorb
xor
mov
mov
mov
ja
movsb
bound
push
push
fiadds
hlt
add
jp
xchg
test
fistl
jge
cli
add
xchg
jl
sbb
add
or
and
js
add
inc
movsb
inc
shlb
rcll
mov
lcall
push
dec
jl
testl
push
adc
sub
xchg
pusha
and
sub
mov
insl
sbb
sbb
push
xor
mov
test
sub
lahf
sahf
mov
adc
ja
sbb
adc
dec
sbb
pop
add
int3
inc
mov
cmc
xor
fcompl
adc
lock
pop
scas
adc
rclb
push
rol
test
enter
cs
aam
fadds
cmc
adcb
lods
inc
out
cmpsb
lret
rolb
cmp
xchg
and
push
push
push
lods
jmp
icebp
cmp
adc
cmp
xchg
xorl
call
push
xor
aad
bound
cmpsb
daa
cmpb
mov
sub
jmp
movl
add
pop
sbb
cld
or
rol
test
mov
iret
lahf
loope
push
xor
sub
lret
mov
cld
stc
and
leave
push
test
insl
sti
out
lahf
aas
xchg
scas
lret
push
dec
loope
cmc
mov
cld
stc
repz
in
mov
scas
lcall
push
pushf
iret
lahf
aas
call
xor
and
in
lock
ja
enter
fdivrs
pop
push
cmpsl
insl
aas
jg
cld
ss
jg
gs
or
xlat
repz
lahf
mov
into
lds
sbb
pop
jg
cld
stc
push
sub
aad
xor
aad
xlat
pop
rorl
aas
push
sub
ret
push
test
dec
add
cld
stc
and
ja
ja
outsl
dec
andb
xchg
out
jg
iret
lahf
aas
insb
movsl
mov
rcrl
xor
sbb
cld
stc
repz
mov
sub
xorb
adc
test
lahf
aas
jg
inc
fdivr
ret
insl
es
clc
jecxz
xor
sub
repz
imull
in
jo
dec
pop
outsb
gs
mov
daa
jl
xchg
imul
addr16
dec
and
ss
inc
jle
cmp
mov
sahf
dec
push
push
and
stos
out
pop
cs
ja
dec
std
addr16
sub
imul
cld
stc
repz
ficoml
in
adcb
push
scas
xchg
icebp
iret
lahf
aas
jg
pop
insb
add
xor
stc
repz
mov
jge
push
adc
mov
add
xchg
aas
jg
pop
lock
jecxz
movsl
jg
fistl
mov
icebp
out
shll
push
cmpsl
dec
inc
push
cltd
xchg
lahf
aas
or
and
out
cld
stc
repz
xchg
dec
xchg
mov
in
push
andl
jg
jmp
dec
and
into
mov
stc
repz
out
and
in
xor
loop
shrl
jmp
jg
jns
fldt
movsb
push
inc
fimull
pop
inc
idivl
jg
repnz
lock
jg
cld
push
mov
pop
pusha
dec
inc
inc
ss
pop
mov
push
aam
call
pop
stc
repz
inc
imull
clc
mov
adc
lods
aas
jg
cld
outsl
push
sub
stos
xchg
ljmp
inc
xchg
out
lahf
cmp
addb
mov
cld
stc
pop
xchg
add
les
pop
mov
iret
lahf
aas
lea
pop
pusha
mov
popa
cld
stc
repz
dec
unpcklps
out
push
pop
test
mov
aas
jg
pop
pop
push
or
inc
stc
idiv
stc
repz
push
out
outsl
or
imul
jg
gs
pop
dec
push
in
jno
cmp
mov
xor
out
jbe
xchg
xchg
aaa
inc
push
jg
inc
inc
cld
stc
repz
sbbl
adc
pop
iret
pusha
inc
inc
loopne
aas
jg
in
jb
pop
fst
cltd
lods
inc
gs
enter
out
int
xchg
leave
orb
mov
push
aas
jg
cld
nop
imul
mov
xchg
jle
out
lahf
sbb
imul
xchg
mov
cld
stc
or
xor
inc
test
lahf
aas
fnstenv
xor
loope
xorl
rclb
das
jg
lods
inc
nop
addr16
cld
out
lahf
aas
and
mull
clc
lahf
pop
cld
stc
repz
sbb
sarb
cmpsb
jle
and
testl
outsl
sbb
stc
add
mov
stc
repz
xchg
ficomps
cmp
pop
sbb
push
lahf
aas
jg
aad
por
push
pop
mov
and
stc
repz
cmp
jmp
fcoml
aas
jg
cld
inc
mov
arpl
iret
shll
fstpl
ds
insl
push
xor
clc
test
jg
cld
stc
nop
dec
add
mov
mov
aas
add
xor
stos
sti
pop
iret
lahf
aas
jg
xchg
outsb
rorb
or
pop
xchg
cs
cld
stc
repz
pushf
pop
fs
inc
cmpsl
lcall
mov
aas
jg
clc
jno
mov
sbb
inc
aas
es
out
fucomp
xor
pop
iret
sub
cld
aas
jg
adc
push
inc
push
push
rcrl
aas
jg
cld
dec
repz
mov
in
push
test
jno
push
jge
mov
repz
scas
pop
mov
or
xchg
push
in
jg
cld
addl
out
mov
stos
cmpsl
dec
xchg
lahf
mov
jno
loopne
mov
cld
stc
repz
lods
lds
icebp
pop
popf
rol
in
out
aas
jg
lret
loop
in
into
lret
sub
loop
pop
xor
inc
imul
into
xchg
addr16
cld
stc
popa
mov
cmp
sbb
je
xchg
dec
outsl
lods
out
lahf
aas
xlat
cmp
pushf
jns
outsl
or
stc
repz
push
mov
lods
test
or
fcomi
cmp
shl
pop
inc
test
aas
jg
mov
fwait
mov
push
adc
cld
stc
repz
data16
adc
xchg
aas
jg
stos
fisttpll
test
icebp
or
in
or
ficoms
out
lahf
aas
xor
mov
ds
out
mov
sar
stc
repz
iret
lret
xorb
xlat
ror
lahf
aas
jg
dec
mov
xchg
movsl
test
pop
leave
pop
cld
stc
repz
jne
and
jo
xchg
pop
xchg
aas
jg
enter
hlt
in
into
pop
or
lock
pop
cmp
data16
jnp
adc
fmull
ret
or
xor
or
adc
iret
lahf
aas
add
xchg
fldcw
jne
cld
stc
push
jmp
std
sahf
loop
fst
in
lahf
aas
jg
mov
mov
dec
ret
pop
cmpsb
sub
repz
or
adc
das
ror
xlat
cs
jmp
cld
mov
test
dec
outsb
les
cmpsb
cltd
iret
popf
mov
iret
lahf
call
hlt
fsubrs
mov
stc
repz
punpcklwd
lea
push
mov
pop
inc
push
mov
xchg
sahf
cli
push
clc
push
repz
lahf
add
jl
arpl
mov
je
jg
cmp
cld
xchg
add
iret
sbb
lahf
xchg
sbb
rolb
or
jg
cld
stc
inc
jg
addr16
jns
out
and
ret
pop
cmp
popf
out
lahf
aas
cmp
cwtl
cmp
js
adc
cld
stc
repz
iret
js
scas
adc
pop
pushf
pop
push
nop
jmp
inc
int3
aam
adc
stc
repz
xorb
faddl
repz
add
xor
in
dec
mov
mov
or
repz
xor
inc
stos
sbbl
xchg
mov
pop
adc
push
jns
fs
cmp
and
xchg
sub
lahf
aas
jg
ds
cmp
test
fwait
lahf
add
out
testb
dec
push
ret
lds
aas
jg
inc
and
test
jp
aas
divl
jae
repz
rcrl
in
ret
fadd
xchg
mov
aas
jg
cld
pop
pop
fiaddl
mov
cs
lds
push
mov
repz
lahf
lods
ja
ds
jle
jmp
stc
jb
add
call
mov
outsl
out
lahf
aas
sub
dec
mov
movsl
inc
lods
dec
incl
adc
cld
stc
repz
mov
lea
dec
ss
pusha
or
jg
mov
loop
lret
mov
stc
or
stc
repz
bnd
xchg
sub
lahf
aas
jg
and
sub
sahf
and
push
loope
stc
repz
jmp
mov
and
inc
pop
aas
jg
cld
xlat
cld
cmp
mov
loopne
mov
cmpb
out
lahf
fs
add
mov
call
jnp
jg
cld
stc
inc
pop
ss
jl
insb
movsl
lret
xor
lahf
aas
lods
pushf
ret
rcr
pop
sbb
xchg
jle
cld
stc
repz
cmp
out
fimull
arpl
into
ror
lahf
aas
jg
jge
fcmovnbe
add
sbb
stc
repz
call
push
push
call
test
aas
jg
shll
sub
mov
pop
fadd
dec
addr16
leave
out
enter
shll
pushf
jns
lahf
aas
jg
pop
je
push
mov
pop
push
into
cld
stc
repz
ds
jmp
cmpl
adc
sub
mov
xor
out
lods
pop
dec
stc
repz
gs
cmpsl
mov
jmp
xchg
sbb
call
mov
or
xchg
cld
stc
xrelease
mov
push
jb
int
iret
lahf
aas
jg
nop
xor
mov
fcmovne
insb
aad
stc
repz
lahf
dec
pushf
scas
repnz
push
or
jg
xor
in
pop
or
push
cmpsb
stc
repz
push
negb
or
sbb
push
mov
sahf
int
iret
lahf
aas
stos
dec
sub
jb
mov
jecxz
cld
stc
repz
fs
jne
scas
aad
iretw
lahf
aas
jg
icebp
and
ja,pn
pop
rorb
or
xor
inc
jecxz
rorl
decb
pop
jle
push
call
jecxz
dec
stc
repz
lods
xor
imul
ljmp
lahf
pop
ror
push
inc
fildl
ljmp
mov
xlat
mov
or
leave
jg
cld
stc
mov
imul
mov
iret
lahf
aas
and
dec
enter
jo
mov
jecxz
cld
stc
repz
rorb
sbb
fxch
lahf
aas
jg
cmp
clc
hlt
or
xchg
add
or
repz
xchg
out
inc
jns
add
sbb
sbb
cld
stc
pop
xor
adc
push
popa
adc
iret
lahf
aas
lret
int3
clc
fistpl
int
pop
mov
leave
jnp
icebp
mov
inc
out
imul
test
scas
cmp
lea
lea
or
icebp
js
add
lahf
aas
jg
ret
pop
adc
push
daa
jp
mov
inc
sbb
cwtl
mov
cmpsl
negb
pop
lahf
cld
cld
xchg
fstpl
cltd
repnz
xlat
stos
out
scas
jg
cld
stc
mov
mov
dec
test
iret
lahf
aas
jmp
lods
outsl
jnp
cmp
cld
stc
repz
cmc
mov
jg
fucom
lcallw
jg
xor
pusha
test
dec
sqrtps
stc
repz
fsubs
sarl
aas
jg
cltd
ljmp
loop
mov
jg
stc
repz
sbb
pop
xchg
pop
addr16
cltd
adc
jne
jg
cld
insl
pusha
mov
cltd
inc
inc
into
xor
repz
lahf
aaa
lahf
in
dec
ss
pop
insb
mov
mov
cld
stc
or
xor
shll
xchg
icebp
les
aas
pop
sahf
aas
mov
scas
mov
stc
repz
lret
mov
inc
jne
loopne
mov
jg
cld
jg
sub
les
sti
pusha
lret
movsb
repz
lahf
lods
inc
addr16
les
pop
xchg
jg
cld
stc
test
mov
jnp
data16
ret
outsb
add
iret
lahf
aas
cs
jge
fs
push
xor
pop
lahf
jg
in
enter
popf
mov
xlat
in
repz
int
xchg
push
xchg
fsubrl
cmp
subl
les
mov
stos
popa
hlt
mov
mov
adc
out
lahf
hlt
pusha
xor
jns
das
fwait
pop
adc
out
jg
cld
stc
jmp
insb
push
call
push
sti
imul
or
xchg
dec
fmull
sub
imul
sbb
repz
mov
dec
push
jnp
mov
jmp
iret
in
cli
xor
mov
leave
xor
xchg
lahf
aas
jg
cli
mov
xor
ret
lea
andl
or
cld
pop
nop
ljmp
push
call
repz
lahf
fcoml
dec
out
enter
daa
test
jl
cld
stc
push
dec
add
insb
jnp
jl
in
aaa
outsl
sbbb
mov
xchg
inc
in
inc
and
out
fwait
jne
xchg
lret
stos
arpl
sbbl
fidivrs
add
enter
fdivrl
out
fwait
aaa
and
stos
adc
loop
loopne
fidivrs
xchg
push
dec
sub
sarb
and
add
push
shrl
repz
and
mov
mov
cmpl
aam
ds
adc
fs
fs
jg
out
lahf
aas
divl
cld
mull
hlt
shlb
cld
stc
repz
cmp
mov
movsb
xchg
je
mov
aas
push
cmp
in
out
or
xchg
sub
mov
lahf
aas
cld
mov
xor
xor
shlb
adc
out
xor
xchg
scas
pop
out
push
or
movsl
inc
cld
mov
sub
sbb
into
sar
cld
stc
pop
pop
push
and
arpl
or
push
aam
loope
lahf
aas
jg
call
add
xchg
inc
dec
cld
stc
repz
dec
push
leave
repnz
in
popl
jg
xor
jge
std
outsw
inc
pop
xor
repz
loop
sbb
inc
mov
aas
jg
cld
dec
sbb
fwait
mov
out
je
repz
lahf
call
adc
enter
push
std
jg
jge
ss
ja
dec
adcb
iret
lahf
aas
push
pop
inc
or
daa
push
cmp
dec
cld
stc
repz
mov
hlt
pop
nop
movsb
xor
sbb
subb
xchg
sub
popl
sbb
inc
in
xchg
sbb
outsl
icebp
push
repz
int
jb
fstl
mov
push
inc
out
lahf
aas
out
mov
jns
leave
jo
loope
jno
repz
mov
clc
or
push
mov
adc
ljmp
iret
sub
lret
scas
ret
jg
stc
mov
jg
cmp
int3
mov
movsb
xor
iret
sbb
out
cmpsb
divb
test
daa
aas
jg
cld
sub
sub
shrb
sub
push
repz
lahf
or
mov
fs
aam
cld
stc
ret
or
adc
stos
adc
mov
or
sub
popa
out
or
add
scas
cmpsl
mov
out
pusha
stos
sarl
out
mov
mov
cwtl
lods
dec
aad
pop
stc
stc
sbb
xchg
mov
sub
cld
test
and
scas
iret
lahf
aas
jg
push
inc
popa
jp
stc
inc
outsb
cmp
cmp
sbb
lcall
insl
cld
es
lahf
jg
shll
adc
jnp
ljmp
repz
std
mov
mov
pop
fcomip
pop
hlt
mov
add
mov
sbb
cld
stc
repz
out
xchg
sarl
aas
xor
cld
imul
jnp
inc
int3
pop
push
jmp
rcr
lahf
aas
jg
push
adc
popa
sbb
in
das
xchg
iret
icebp
mov
lods
cmpsb
insl
repz
sbb
fs
or
stc
xor
repnz
stc
mov
mov
pop
jg
cld
stc
lahf
dec
loopne
sarl
jne
test
push
out
lahf
aas
out
je
sub
cwtl
xor
gs
icebp
dec
lahf
jg
repz
mov
mov
outsl
adcl
add
cltd
and
test
sub
jg
repz
lahf
mov
mov
movb
cmpsl
cmpb
stc
in
not
jo
fdivrs
sub
lahf
aas
xchg
push
push
aaa
pop
adc
pop
cld
stc
repz
cmp
fsubrp
out
xchg
stos
dec
test
mov
aas
jg
insl
adc
in
pusha
sub
pop
sub
repz
das
dec
scas
push
lods
xor
jge
lahf
aas
pop
push
dec
fucomp
idiv
rolb
loope
lahf
and
cld
stc
repz
iret
dec
jns
loope
idivb
inc
jle
iret
stos
inc
rcrl
in
iret
lahf
aas
pushl
dec
sbb
or
loop
or
cld
stc
repz
mov
mov
std
push
push
movsl
ret
lahf
aas
jg
in
push
push
sti
lock
lea
fsts
add
iret
lahf
inc
inc
pusha
cmp
bound
cmc
xor
cld
stc
repz
test
out
cmp
dec
out
push
lahf
aas
jg
popf
xor
stc
fcmovb
cmp
ds
repz
mov
stos
pop
fnstenv
sbb
jg
cld
dec
fwait
xor
mov
cmp
repz
lahf
push
inc
fildll
popl
push
mov
mov
stc
icebp
jno
fdiv
xchg
enter
hlt
xchg
stos
loopne
adc
iret
lahf
aas
call
and
ljmp
cld
stc
repz
inc
jmp
nop
iret
lods
or
aas
mov
stc
stos
jge
xchg
flds
lahf
pop
mov
sbb
decl
dec
or
adc
std
loopne
xchg
dec
jno
loop
lea
iret
lahf
aas
aaa
std
xlat
cld
inc
les
out
adc
idiv
cld
stc
repz
push
push
sub
ss
cmpsl
addr16
lahf
aas
jg
dec
das
addr16
push
shlb
cld
stc
repz
jmp
jecxz
in
or
push
dec
xchg
jns
aas
jg
mov
mov
and
sbb
iret
insb
std
sbb
data16
add
mov
outsb
lret
cld
out
jle
pop
pop
jle
jg
xchg
dec
pop
cmp
out
lahf
sub
mov
lret
pop
lcall
cld
stc
pop
pop
mov
shll
notl
jle
xor
iret
and
or
xorl
cld
stc
push
sub
push
add
aas
jg
ljmp
aas
jle
fwait
and
pop
mov
stc
repz
inc
xchg
dec
mov
arpl
xor
jg
cld
jmp
mov
lock
xlat
sbb
sarb
repz
lahf
and
notb
lahf
addl
lcall
loop
xchg
cmpsl
xchg
push
pop
pop
push
mov
out
lahf
aas
cmp
and
leave
jecxz
addl
adc
je
jle
jle
outsb
add
or
sbb
jl
repnz
mov
add
fwait
aaa
pop
loop
xor
popf
mov
fidivrs
rcl
ljmp
xor
aaa
outsl
add
out
adc
mov
repz
sub
sbb
dec
jle
lock
mov
loopne
pop
xlat
je
lods
jno
iret
inc
adc
dec
int3
dec
stos
adc
mov
cld
jnp
out
ret
pop
jb
popf
clc
sbb
notl
dec
adc
inc
xchg
lahf
sahf
cld
mov
enter
mov
stc
repz
incb
jecxz
jg
or
cld
push
and
lea
xor
aas
jg
je
add
mov
test
pop
pop
jne
jb
mov
out
jl
lahf
aas
cld
jle
adc
add
jp
js
test
xchg
iret
je
lcall
jg
cld
sbbb
aaa
xchg
add
repz
lahf
inc
popa
mov
or
and
cld
stc
add
in
es
jle
add
pop
adc
sbb
out
lahf
aas
fwait
mov
fisubs
pushf
lock
fmull
in
mov
xchg
hlt
mov
add
aas
xor
and
sbb
pop
hlt
aas
aam
xchg
or
repz
lahf
or
mov
xchg
xchg
push
dec
jg
cld
stc
cmpsl
or
cwtl
jnp
int3
outsl
dec
stc
mov
rcrb
lahf
aas
dec
into
mov
out
inc
into
lds
fnstcw
aas
jg
leave
js
ss
pop
mov
or
out
lahf
lods
cmpsl
pop
add
sahf
mov
cld
stc
test
stos
or
jmp
fwait
lret
adc
out
lahf
aas
cli
neg
jp
rorl
cld
stc
repz
fnstsw
mov
xor
mov
iret
lahf
aas
jg
mov
xor
cs
loop
cld
stc
repz
add
push
inc
bound
inc
cmp
inc
jle
jne
in
iret
mov
cltd
lds
in
outsl
fidivrs
int3
loop
pop
jge
fdivrs
aaa
je
pop
jg
je
mov
adc
fidivrs
mov
jge
cmp
jecxz
mov
fwait
aaa
outsl
adc
push
push
out
push
mov
jb
loop
into
jle
ror
jmp
stc
repz
sub
adc
sbb
imul
aas
xor
jne
iret
lahf
jg
cmp
cmc
frstor
jl
push
cmp
cld
stc
repz
aam
push
pop
xor
mov
fdivr
mov
or
lahf
aas
jg
pop
ds
aad
and
push
jbe
mov
and
aas
push
mov
xchg
fisttps
or
aas
jg
cld
lock
out
imul
stos
xorl
lahf
pop
xchg
dec
push
dec
and
adc
sbb
jg
cld
stc
fsubrl
js
data16
pop
inc
lods
in
xchg
pop
test
icebp
ret
push
fldl
cld
stos
fs
fst
fdivrl
lahf
bnd
out
lahf
aas
aam
mov
call
cld
stc
repz
and
xchg
js
cmp
sub
lahf
aas
jg
movsb
hlt
lcall
mov
int3
cld
stc
repz
sub
jg
sub
jecxz
gs
mov
test
inc
fisttps
ret
call
add
out
aaa
jns
gs
jae
fistpll
xchg
aas
jg
cld
bound
popa
jbe
sbb
repnz
lahf
mov
loop
ljmp
cld
stc
pop
push
jne
mov
pushf
ret
lahf
aas
cmp
inc
adc
dec
fnstcw
adc
arpl
mov
loop
push
and
iret
lahf
aas
jg
cmpsb
push
mov
cmp
in
jl
out
or
pop
hlt
loop
ja
xorb
jbe
lahf
aas
jg
fcmovne
into
mov
fists
out
push
les
lahf
je
inc
mov
fcoml
push
fisttps
jmp
test
or
or
fsubl
add
mov
stc
repz
cmp
movsl
icebp
and
mov
jg
cld
popl
mov
mov
dec
and
mov
out
lahf
cmp
lcall
mov
scas
mov
xchg
aaa
outsl
test
iret
cmpsl
cmp
mov
pop
fwait
aaa
out
test
addr16
mov
sub
repz
js
jb
add
xchg
ja
push
push
in
outsl
fidivrs
dec
jp
nop
inc
jbe
stos
sar
loopne
fwait
stos
xorb
fs
cmc
cli
out
lahf
aas
pop
lock
out
and
mov
cld
stc
repz
adc
push
loope
xchg
mov
iret
lahf
aas
jg
push
mov
add
xor
loop
mov
repz
in
ficomps
push
push
aas
jg
xchg
sahf
lea
xchg
sbb
xor
stos
cwtl
test
sub
cmp
cwtl
cld
sahf
mov
jns
icebp
mov
xchg
mov
lret
add
outsl
fidivrs
mov
dec
pop
mov
inc
int
pop
stos
xchg
lahf
add
enter
mov
mov
or
or
ret
outsl
fidivrs
fwait
add
mov
out
fwait
aaa
dec
aad
in
jge
nop
sahf
mov
mov
add
leave
imul
lds
aaa
outsl
out
jecxz
int
pop
push
push
out
fwait
aaa
cmovne
je
cmpsb
xor
in
mov
inc
fidivrs
jle
cmp
xchg
lret
mov
into
jp
int
aaa
outsl
push
in
cmp
movsb
inc
inc
dec
fwait
insl
cli
enter
push
jl
int
pop
lock
and
jns
cmpsb
out
out
outsb
std
fs
ror
inc
mov
outsl
fisubs
push
cwtl
push
pop
cmpl
repz
inc
xchg
xor
leave
mov
mov
inc
lea
mov
xchg
cmpsb
cld
xchg
mov
add
scas
jle
scas
aas
jg
cld
and
fldl
pop
mov
ret
cmp
out
lahf
adc
or
mov
xor
stc
sbb
icebp
mov
mov
jae
out
lahf
aas
cmp
mov
sub
cld
stc
repz
cmc
mov
nop
xor
pop
inc
jns
rorb
out
int
cmp
fidivrs
int3
jns
adcl
xor
rorl
les
aaa
mov
js
mov
hlt
enter
das
adc
pop
repz
lahf
aas
pusha
pop
sahf
cmp
fwait
icebp
out
cld
cld
stc
repz
dec
int3
pop
push
and
inc
das
push
je
mov
push
xor
repnz
mov
and
sbb
fwait
aaa
outsl
fsubrp
jae
or
or
xor
cmpsl
jns
out
nop
cmp
dec
dec
inc
rcrl
push
pop
test
loopne
inc
fidivrs
cmp
cld
stc
repz
pop
mov
push
ret
cmp
lahf
aas
jg
and
loope
in
aaa
pop
inc
fdivrp
repz
cmp
hlt
in
or
inc
jecxz
cmc
int3
jnp
int3
xor
cld
cld
arpl
sub
xchg
outsl
fiadds
aad
pop
insl
idivl
mov
out
fwait
add
sub
js
js
jmp
fidivrs
cs
jge
jbe
insl
aas
sub
int
aaa
cmc
push
std
dec
shll
rep
in
hlt
sub
pop
cwtl
repz
sti
sbbl
mov
xlat
stc
and
jns
out
mov
leave
roll
inc
xchg
jle
jnp
mov
mov
aad
daa
pop
dec
dec
lds
aaa
xlat
aad
jns
lock
repz
rorb
movsl
jb
pop
test
mov
loop
push
inc
push
gs
in
jg
ss
fwait
aaa
roll
cmp
andl
or
in
mov
push
sbbl
push
mov
out
test
xor
in
pop
ret
aas
push
mov
mov
xchg
aas
sarb
out
sbb
pop
cmp
aas
add
repz
push
inc
push
les
lds
xor
pop
xorb
fidivrs
out
xchg
test
cld
lcall
and
mov
nop
pop
fidivrs
mov
pushf
ret
pop
iret
push
jns
in
fwait
aaa
outsl
sub
addl
jno
repz
sub
cmp
lcall
std
rcrl
dec
inc
imulb
popf
jnp
lret
mov
shll
es
pop
add
int
aaa
outsl
add
jg
dec
adc
mov
lcall
cs
scas
in
mov
je
mov
gs
mov
shrl
push
add
cli
mov
outsl
fidivrs
out
stos
pop
sbb
roll
lock
scas
jns
popf
pusha
repnz
ret
and
jns
mov
sbb
aaa
dec
push
daa
scas
lret
aam
aaa
icebp
cmp
adc
pop
mov
popa
ficoms
cmp
cmpb
outsl
fidivrs
and
mov
dec
pusha
cmp
out
fwait
aaa
and
rcrl
inc
sbb
or
jns
dec
sub
or
mov
shll
je
mov
lcall
mov
out
or
jne
stos
dec
push
lock
add
iret
aaa
outsl
fidivrs
scas
pop
push
mov
xchg
fidivrs
test
lret
sarl
jns
repz
sti
test
out
ds
lods
rcll
fwait
aaa
aad
inc
nop
dec
xchg
js
sub
push
mov
jp
push
es
mov
insl
xchg
fwait
aaa
outsl
fidivrs
cmp
stos
xor
mov
cmp
jns
out
or
sti
adc
ljmp
fidivrs
lds
add
xor
mov
repz
fwait
sti
sub
mov
or
mov
pusha
test
xchg
mov
cltd
out
mov
lods
xchg
dec
aaa
outsl
fcoml
jo
test
dec
sub
jecxz
jo
int
or
lahf
call
imul
mov
mov
adcb
into
ret
xchg
pop
aas
and
aas
sub
mov
pop
out
out
push
into
inc
in
lahf
add
lea
ret
fwait
ja
jmp
xchg
jb
int
loopne
pop
mov
push
test
inc
fidivrs
mov
mov
inc
or
pop
lods
int
aaa
outsl
push
mov
sbb
mov
scas
add
pop
push
xor
mov
mov
xchg
int
aaa
outsl
pop
insl
jo
cmp
mov
xlat
addl
rorb
lea
fidivrs
les
cmpsl
mov
movsb
das
dec
and
out
inc
ljmp
jmp
mov
stc
fsubl
jmp
out
mov
pop
mov
out
lahf
aas
std
vpermpd
or
fdivl
push
loop
in
mov
dec
lods
mov
fidivrs
jl
xor
mov
ret
sbb
insb
imul
and
int
aaa
stos
cmp
popf
push
jo
hlt
sbb
jg
jne
push
not
sub
scas
loope
sub
out
lahf
aad
jp
mov
lret
xlat
dec
jne
sbb
jg
cld
stc
jg
fs
dec
fidivrl
adc
xchg
xor
ja
iret
lahf
aas
mov
arpl
insl
cld
stc
repz
jae
int
sbb
xor
adc
iret
lahf
aas
jg
popaw
int
cmp
lret
cld
pop
ret
and
xlat
jmp
adc
mov
pushf
repz
adc
cld
test
scas
pop
pop
scas
in
iret
jb
daa
iret
lahf
aas
jg
fwait
push
mov
std
push
in
movsl
jecxz
cld
stc
repz
iret
sbb
mov
xor
jmp
jg
add
mov
sub
xchg
mov
iret
clc
dec
adc
push
sbb
cs
icebp
aas
jg
cld
add
adc
cmp
inc
fildll
mov
inc
xchg
aas
sbb
sbbb
int
js
stc
outsb
sbb
mov
push
aas
jg
cld
je
xor
pop
and
shl
mov
lahf
dec
push
sahf
test
ror
adc
stc
into
arpl
push
pop
das
sahf
fwait
ja
pop
push
mov
jns
out
rolb
ret
lods
ret
outsl
xchg
cmovns
xchg
and
outsl
fidivrs
cwtl
mov
ficoms
int
mov
in
cmp
daa
mov
jg
cmc
pusha
dec
dec
shr
or
push
loop
add
lahf
or
mov
fnstsw
mov
iret
lahf
aas
jg
xchg
adc
jp
outsl
cmp
adc
stc
repz
sub
push
outsb
es
push
jecxz
mov
shll
test
jo
leave
rorl
daa
stc
repz
xchg
fiadds
negb
push
sbb
pop
inc
fdivs
sbb
mov
aas
pop
xchg
lds
mov
cmp
jp
repnz
stos
sbb
push
cld
stc
repz
xchg
cmp
fidivrs
adc
xchg
jg
push
arpl
cli
pop
jns
fadds
clc
sub
pushl
test
iret
lahf
aas
jg
sar
mov
aaa
imul
test
cld
stc
repz
or
xchg
jae
iret
fbstp
out
add
dec
pop
repz
mov
in
outsl
fidivrs
mov
sub
inc
sub
mov
int
aaa
roll
repz
icebp
dec
sub
lods
fidivrs
and
xor
aaa
arpl
mov
addb
ficomps
push
and
xor
jns
dec
jp
sahf
inc
sbb
push
icebp
xchg
iret
sub
mov
sub
jmp
sbbl
push
out
fwait
aaa
test
and
stc
sbb
jns
xchg
jge
leave
test
mov
out
mov
mov
push
xor
fwait
aaa
mov
xchg
popa
jne
fidivrs
fstl
cltd
mov
lods
lods
dec
int
aaa
outsl
nop
pop
mov
jae
in
lock
sub
je
sub
sbb
and
sarb
sub
pop
cmc
cmpsb
dec
les
repz
inc
push
dec
push
fidivrs
test
aaa
outsl
fidivrs
push
dec
push
enter
adcl
in
xchg
scas
out
push
inc
lea
out
lahf
aas
jl
stos
mov
pusha
hlt
mov
in
popa
push
test
lahf
aas
jg
ja
jecxz
into
test
popf
push
sbb
out
push
ljmp
stos
push
xor
jg
cld
mov
loopne
data16
imul
push
push
das
mov
lods
icebp
pop
repnz
stc
dec
jl
std
pop
mov
jecxz
pop
jp
aad
iret
lahf
aas
mov
into
pop
rorb
fbld
cld
stc
repz
mov
pop
push
ja
or
rcrl
jg
adc
iret
lahf
aas
jg
aad
movsbl
jecxz
and
cld
stc
repz
ljmp
sbbb
out
add
decb
ret
sbb
dec
in
lahf
aas
lds
mov
icebp
mov
push
add
call
pop
pop
aaa
outsl
fidivrs
in
testl
rcr
out
fwait
lret
lods
test
xchg
jns
jg
imull
mov
push
sub
sbb
adc
add
adc
jmp
mov
xchg
jp
sahf
shll
or
fwait
aaa
outsl
fidivs
mov
mov
sbb
cmp
out
aam
jno
mov
sbb
jl
aam
jecxz
outsl
fidivrs
movsl
roll
test
mov
and
aad
rclb
inc
subl
xchg
into
and
fidivrs
lods
sahf
in
jb
pop
adc
fwait
mov
loope
lods
jo
adc
dec
lcall
cmpsl
pop
je
addl
or
out
lahf
aas
test
fnstcw
aaa
out
or
call
ror
int
daa
xchg
cmp
mov
repnz
xchg
inc
pop
mov
data16
nop
stc
repz
out
sub
sbb
mov
aas
jg
cld
jns
cmp
bound
loope
out
lahf
aad
rcll
out
stos
aas
add
clc
sub
cs
iret
sub
shr
cmp
adc
sbb
iret
lahf
aas
cwtl
dec
push
pop
xchg
adc
daa
aad
mov
jle
stc
repz
inc
call
gs
mov
mov
andl
int
mov
push
jg
repnz
divps
dec
int3
mov
out
lahf
aas
mov
outsb
repnz
hlt
push
cmp
jbe
and
adc
inc
clc
jge
iretw
lahf
aas
jg
xchg
daa
clc
xor
test
lods
ja
ror
jno
push
push
fstl
jb
fwait
repz
fwait
push
mov
xchg
hlt
jnp
dec
pop
mov
bound
popa
mov
jb
divl
inc
outsb
jg
shll
neg
xor
cld
stc
loope
lret
sub
inc
cwtl
lret
inc
mov
jp
out
lahf
aas
lods
ds
popf
push
je
scas
test
fsubs
js
fbld
pop
bound
outsl
ficoms
ja
out
lret
das
test
test
fwait
int3
inc
mov
mov
and
mov
fidivrs
mov
adc
pushf
mov
mov
scas
pop
push
orb
scas
or
adc
adc
add
and
xchg
jp
loop
lahf
shl
pop
lea
pmaxub
pop
iret
jp
adc
adc
cwtl
push
int
aaa
outsl
add
cmc
inc
pop
jle
adc
jge
repz
stc
mov
cmp
mov
xchg
mov
shl
out
fwait
insl
ljmp
cmp
mov
std
loope
out
leave
outsl
fidivrs
int3
sbb
iret
adc
add
enter
adc
lods
scas
call
mov
inc
sub
sub
add
fwait
aaa
outsl
fidivrs
cwtl
push
inc
pushf
sub
sbb
dec
enter
int
push
sub
lods
pushf
mov
pop
mov
inc
lcall
btc
fcmovnb
jg
cld
stc
or
add
dec
leave
mov
add
out
lahf
aas
push
adc
sti
int
icebp
imul
cmc
cld
stc
repz
jns
fwait
dec
nop
add
dec
push
aad
jg,pt
notb
adcb
repz
daa
add
add
imul
lret
fidivrs
repz
inc
sub
or
ja
out
fwait
push
adc
inc
mov
mov
push
push
aas
insb
mov
enter
pop
jl
das
jg
in
fwait
aaa
loope
dec
jne
mov
scas
int
jp
pusha
jge
jl
cmp
repz
aas
adc
addl
cmp
stc
stc
and
fsubrs
inc
dec
jae
sbb
sbb
out
inc
popf
les
repnz
fwait
aaa
add
cmp
sbb
out
sbb
dec
jl
aaa
std
iret
push
into
cmp
fwait
aaa
outsl
fisubrs
inc
sarl
testl
repz
outsl
jno
cmp
cmp
jge
int3
xchg
dec
cmc
jl
outsl
fidivrs
arpl
sahf
fwait
rorb
out
fwait
push
add
ret
xchg
mul
mov
jle
cld
sti
add
out
xchg
ja
sub
add
pop
jecxz
inc
imulb
cs
popf
out
xlat
out
cmp
int
aaa
fs
push
cld
xor
jnp
cmp
aas
jg
jo
call
imul
cmpsb
jle
lret
xor
out
lahf
dec
data16
mov
push
cmovge
cld
stc
stos
dec
mov
ret
test
and
mov
aas
push
xor
ret
imul
stc
loopne
rorb
pop
and
test
ret
fidivrs
fs
mov
lret
shll
push
ret
mov
pop
push
test
repnz
lahf
sbb
mov
mov
mov
and
hlt
testb
out
fwait
aaa
scas
pop
sub
xchg
sub
pusha
scas
ds
repz
jbe
xchg
add
fstps
and
iret
pop
xchg
xchg
call
repz
call
fidivs
jmp
jg
cld
outsl
push
and
addr16
cmp
pop
mov
repz
lahf
outsb
fdivrs
fstl
jae
mov
stc
push
test
mov
mov
jl
mov
int
aaa
out
decl
xor
and
movl
push
ss
xor
add
mov
mov
test
mov
xchg
insb
int
aaa
outsl
jne
jecxz
push
out
pop
mov
ret
stc
stc
test
or
fcomps
loope
xorb
add
or
xchg
aaa
jae
ljmp
cld
jmp
mov
cmp
sub
aas
in
lcall
pop
add
xchg
les
inc
ja
insb
inc
jecxz
addl
lahf
aas
jg
stos
mov
sbb
fs
dec
and
imul
mov
mov
pop
jp
add
sbbb
rclb
fnstcw
ffreep
jmp
iret
jge
shll
sahf
mov
scas
add
mov
cld
sbb
cmpsl
js
loopne
xchg
and
inc
push
mull
dec
in
mov
fwait
test
jbe
shlb
mov
push
sbb
mov
pushf
imul
out
fbstp
outsl
fiadds
lods
loop
ror
pop
out
repz
fwait
mov
popa
mov
popf
adc
xor
jns
and
lret
sbb
pop
and
push
out
fwait
aaa
cmpsb
xchg
cmp
aas
fwait
xchg
sbb
mov
mov
in
fcoms
popf
hlt
ret
out
fwait
aaa
aas
outsl
adc
sub
jg
je
int
pop
push
fwait
sbb
cmpsl
xor
insb
fidivrs
int
mov
data16
repz
sar
pop
sarl
pushf
fdivp
mov
xor
jg
cld
cmp
dec
mov
inc
sahf
sub
xor
out
lret
in
and
mov
fsts
jl
dec
mov
sbb
adc
sub
aam
mov
and
mov
popa
cmc
cs
inc
xor
xor
aaa
outsl
fiadds
xchg
test
inc
lcall
in
pusha
out
fiadds
sub
fidivrs
jg
push
inc
xchg
adc
adc
movsl
test
aaa
scas
sub
enter
mov
pop
aas
jg
cld
push
push
xchg
add
daa
pusha
push
jmp
repz
lahf
dec
or
mov
cltd
sub
jle
inc
stos
push
mov
mov
inc
lret
repz
dec
lahf
jecxz
xchg
faddl
aaa
outsl
inc
insb
dec
mov
mov
lods
mov
repz
test
imul
popa
movsl
cmpsl
mov
aam
sub
das
mov
repz
and
jmp
sbb
sbb
scas
xor
fwait
aaa
outsl
xlat
xorb
mov
cmpsb
jno
xchg
sbb
jge
repz
and
test
mov
dec
das
and
jg
pop
inc
fdivrl
negl
js,pn
outsb
mov
sub
mulb
pop
out
lahf
aas
loopne
repnz
inc
jbe
in
dec
cld
stc
repz
or
jge
mov
int3
push
in
scas
jb
arpl
xchg
das
push
roll
out
xor
xor
sbb
push
xor
mov
aas
jg
pop
pushf
sub
and
mov
repz
xor
mov
div
or
insl
repz
sub
sbb
lcall
cld
stc
xlat
mov
jle
lods
loopne
fsubrs
pop
imul
lahf
aas
jb
negl
pusha
je
cld
stc
repz
divl
fisubs
cwtl
mov
aas
jg
add
pop
jns
rorb
pop
je
enter
cld
xor
cwtl
mov
or
enter
and
aaa
lcall
adc
mov
test
movsb
mov
cli
adc
mov
sub
sbb
gs
fs
scas
add
mov
int3
inc
outsl
fiadds
loopne
ret
icebp
shll
or
xchg
clc
fdivl
cmp
out
ffreep
nop
fsubs
cmp
das
jmp
enter
iret
lahf
aas
cmp
mov
inc
hlt
cmp
push
cmp
repz
and
ljmp
jns
out
lahf
push
stos
call
jmp
xor
mov
mov
movsl
mov
ljmp
pusha
pop
popa
inc
dec
or
sub
pop
data16
out
iret
pop
cmp
std
sahf
outsl
fidivrs
movsb
shll
pop
dec
mov
dec
sub
mov
jne
movsl
mov
stos
out
fwait
aaa
adc
lock
push
outsb
fidivrs
push
inc
es
dec
aad
incb
mov
xchg
aaa
outsl
mov
sub
jnp
popf
push
adcb
aas
jg
pushl
ss
movsl
adc
and
push
aas
or
push
flds
adc
cld
stc
push
popf
push
dec
and
mov
cmpb
jle
iret
lahf
aas
pop
xor
cmp
dec
pushf
push
adc
mov
mov
mov
imul
sub
fmull
enter
jns
clc
xor
sub
push
pop
push
push
mov
and
inc
imul
int
loope
fwait
jae
lods
and
xchg
je
out
mov
push
ljmp
imul
mov
cmp
jns
mov
in
pop
mov
pop
sti
cmp
cmc
int
aaa
outsl
ljmp
adc
mov
js
out
xchg
mov
test
pop
pop
add
repz
sahf
mov
xchg
jnp
jns
sbb
cld
pop
or
in
pushf
jae
repz
push
cmpb
adc
cs
ss
cld
stc
lahf
xrelease
pop
lahf
push
cwtl
jno
cmp
xchg
das
scas
push
lock
mov
adc
mov
sbb
ja
andl
aaa
outsl
fidivs
adc
repnz
aaa
jbe
ljmp
mov
fidivrs
in
stc
dec
jno
mov
scas
loop
fwait
inc
sbb
push
pop
fidivrs
push
add
jle
xor
jecxz
int
aaa
outsl
xchg
mov
nop
sbb
insl
sbb
push
sbb
int3
sub
in
aaa
bound
jo
cli
inc
aaa
outsl
ficoms
jae
inc
cltd
mov
fimuls
out
fwait
stc
outsb
and
rcll
push
add
adc
xor
pop
ds
add
and
out
fwait
aaa
aaa
pop
mov
outsl
push
sbb
sbb
pop
inc
cltd
xchg
inc
test
xchg
add
jbe
fnsave
outsl
and
gs
ret
dec
insl
lods
fidivl
pushf
fld
mov
xchg
add
pusha
mov
imul
push
add
outsl
fdivp
lods
loope
lds
cmpsb
add
fcoml
das
mov
add
test
aaa
outsl
fiadds
sbb
lahf
leave
loope
repz
fwait
sub
mov
inc
repnz
mov
mov
ret
push
out
fwait
aaa
sbbb
inc
jg
push
add
sbb
jns
rol
mov
sti
pop
js
call
fwait
aaa
outsl
xchg
and
in
mov
mov
or
ja
cmp
adc
repnz
addr16
sbb
xchg
flds
pop
sarb
xchg
out
pop
xchg
push
mov
cmp
cwtl
not
mov
fwait
fwait
aaa
outsl
fidivrs
lret
push
leave
lea
scas
loop
cmp
or
sbb
dec
cmpsl
and
pop
ss
iret
lahf
aas
jg
sub
or
cli
subb
rorl
xor
mov
inc
into
adc
in
lret
and
loope
aaa
outsl
mov
aam
movsb
sub
repz
and
lock
inc
and
mov
fidivrs
imul
cmp
mov
mov
inc
ss
jmp
lahf
fdivrl
pop
stos
stc
cmpsl
flds
sub
fstpl
arpl
fdivr
pop
mov
xor
fwait
aaa
daa
mov
fistps
ret
add
mov
dec
sarl
test
int
aaa
outsl
pmulhuw
xor
sub
cmpl
push
iret
mov
cmp
fdivp
fs
cli
stos
jb
jo,pt
mov
repz
rolb
sub
repnz
pop
jmp
mov
fildll
enter
and
xchg
aaa
out
push
or
cmp
sbb
int
mov
scas
pop
adc
ljmp
arpl
lods
or
add
fwait
aaa
out
and
dec
xchg
xchg
mov
cld
loope
inc
jae
mov
clc
stos
or
iret
lahf
aas
jg
in
inc
dec
es
scas
test
daa
rol
sahf
cld
stc
repz
xchg
add
push
mov
cld
jge
lahf
aas
jg
stos
cmp
sub
add
add
repz
decl
mov
adc
mov
jg
cld
xchg
rclb
push
imul
fsub
mov
sub
inc
cmc
mov
rcll
or
test
pop
inc
xchg
cmp
pop
aam
dec
and
popl
outsl
lds
insb
ja
hlt
jp
into
sub
aas
jns
out
pop
xor
mov
leave
cs
nop
inc
outsb
fidivrs
in
cmpsl
and
fwait
aaa
outsl
mov
scas
adc
insl
das
xchg
mov
mov
xchg
push
imul
xchg
cmp
adc
jns
sub
cld
stc
aaa
cmc
xor
cld
mov
xchg
int
mov
imul
iret
xor
icebp
mulb
pop
xor
aaa
outsl
fidivrs
sub
lock
inc
enter
out
test
shlb
mov
push
sbb
repz
fwait
push
mov
out
insb
fstl
dec
inc
lea
in
lahf
mov
mov
repz
cltd
and
iret
or
sub
das
cmp
add
outsl
into
xor
fldcw
ja
pop
and
sarl
jl
das
jns
mov
dec
jle
and
mov
aaa
outsl
aam
cmp
inc
repnz
cmp
aas
cmc
enter
inc
dec
ret
int
mov
std
repz
lahf
cwtl
rcrl
xchg
xchg
or
sub
xchg
pop
cld
push
mov
lret
pop
cmpsl
repz
outsb
xchg
lahf
aas
sub
xchg
cmp
sar
stc
repz
pop
fwait
mov
or
ja
iret
lahf
aas
pop
mov
mov
cmp
cmp
inc
cmpb
out
push
mov
test
iret
lahf
aas
shlb
mov
xchg
cmp
lcall
repnz
ret
out
adc
lahf
aas
jg
loopne
bound
xor
int
stc
repz
fcoms
std
int3
jne
cmp
popa
cmp
aas
jg
and
xor
jne
ss
jle
test
repz
outsl
sti
push
ret
in
test
addr16
aas
jg
cld
push
mov
lock
push
fsub
out
lahf
adc
jno
dec
jns
and
int
push
aas
jg
jl
or
mov
inc
out
or
sbb
out
lahf
gs
push
testl
pop
mov
movq
inc
lret
out
lahf
sahf
cmp
mov
jle
cld
cld
stc
adc
mov
mov
je
repz
xor
outsb
sub
jg
cld
stc
call
push
mov
mov
out
lahf
aas
ds
pop
mov
into
test
ja
push
lds
dec
mov
iret
lahf
aas
jg
cmp
mov
ljmp
cld
sti
leave
out
mov
push
cmp
xchg
and
scas
lcall
pcmpgtw
sbb
sbb
xor
repz
pushf
call
mov
inc
das
push
sbb
and
jg
cld
jmp
inc
mov
imul
in
cmp
dec
adc
lahf
push
pop
arpl
flds
stos
and
push
aad
pop
mov
mov
outsl
fisubrs
xchg
outsb
mov
mov
jmp
xchg
fwait
lahf
ffreep
fcmovu
orb
mov
ds
call
aaa
outsl
fidivrs
and
cwtl
rol
sbb
repz
fwait
call
xchg
mov
sub
outsl
fidivrs
out
add
ds
cld
sbb
fwait
aaa
inc
dec
mov
stos
leave
je
pmaxub
sbb
fdiv
mov
sbb
int
aaa
outsl
test
ret
mov
inc
fstpl
cmp
popf
loopne
jns
out
pop
inc
sub
sub
mov
fiadds
pop
fnstenv
and
and
fbstp
clc
outsl
aad
outsl
mov
in
into
push
sbb
adc
pop
xlat
sbb
ds
stos
fnstsw
jae
mov
xchg
test
fwait
les
xchg
aaa
fists
js
push
das
lahf
ss
int
xchg
rcll
jecxz
outsb
enter
das
mov
in
xchg
xlat
pop
movsb
cmc
xchg
mov
sti
jl
and
inc
pop
int3
int
aaa
outsl
adc
pop
xlat
add
aam
clc
xor
out
dec
ret
in
mov
cmp
mov
fidivs
bound
out
jg
pop
mov
jns
out
fadds
insl
inc
mov
pushf
aaa
outsl
fidivrs
jl
or
outsl
mov
inc
out
in
out
fwait
nop
fwait
cmp
mov
inc
outsb
and
adc
inc
jns
add
mov
inc
testl
mov
inc
sub
mov
or
push
mov
aas
pop
add
xor
dec
lods
or
xchg
mov
repnz
jbe
sbb
pop
xchg
mov
outsl
jb
mov
mov
mov
rcrl
in
sbb
mov
push
jmp
xor
xlat
or
xor
stc
stos
adc
pop
lock
add
xchg
jle
mov
stos
sti
enter
aaa
movsb
xor
pop
push
add
out
cmpsb
divb
test
push
les
mull
pop
in
lahf
mov
or
add
aaa
fldenv
or
mov
mov
mov
add
and
mov
ljmp
mov
mov
cmpsl
mov
stc
stc
xlat
or
lcall
sbb
xchg
stos
mov
lods
addb
cltd
cmp
mov
xchg
lahf
scas
aam
mov
xlat
inc
outsb
cmp
cmp
cmp
insl
scas
out
sub
mov
ds
sub
push
iret
and
andb
add
push
scas
mov
mull
add
adc
das
mov
adc
adc
cld
stos
mov
jmp
or
push
jle
popa
sbb
out
aas
mov
iret
aaa
in
mov
mov
out
sbbb
aas
jg
cld
xchg
inc
jns
lahf
pcmpgtd
in
cli
mov
iret
lahf
daa
and
popf
mov
adc
mov
cld
stc
sbb
sbb
cmc
iret
lahf
sahf
jne
inc
mov
lret
dec
add
jge
repz
xchg
cli
mov
inc
rol
lds
aas
xchg
add
jle
xor
out
fwait
adc
inc
cli
cmp
cmpsl
scas
aam
outsl
fidivrs
xchg
call
es
mov
int
aaa
std
jne
fisttpll
sub
aas
cmp
pop
decb
call
das
or
iret
lahf
push
sub
jae
loop
test
bnd
cld
stc
sbb
mov
pop
pop
adc
adc
out
lahf
aas
lock
sbb
push
xchg
cld
stc
repz
mov
test
clc
push
xor
aas
jg
jae
add
mov
stc
repz
add
jo
sub
cmp
sub
int3
test
jg
dec
stos
sub
lds
mov
pushf
repz
cmp
adc
xchg
mov
mov
movsl
shr
ljmp
and
and
xchg
ds
stc
repz
mov
cmp
stos
jp
scas
ret
aas
jg
cs
sub
lahf
adc
xchg
pop
adc
or
out
pushl
mov
fisttpll
ja
sbb
outsb
ror
orb
mov
or
repz
sub
into
xchg
sub
lea
push
scas
das
fwait
aaa
outsl
fiadds
fdivr
xor
test
adc
or
out
cmp
mov
mov
push
psrld
add
cld
stc
adcb
stos
and
call
dec
pop
stos
sub
push
mov
xor
adc
xor
outsb
fidivrs
sti
loopne
bound
xchg
mov
stc
inc
dec
es
outsl
mov
out
and
ss
dec
jg,pt
xchg
or
imul
xor
cld
stc
roll
or
push
scas
pop
fistl
dec
xchg
push
lahf
loopne
or
loope
jns
ffreep
sar
rorb
cld
pop
ret
filds
cld
stc
roll
les
lea
jg
xchg
or
mov
fisubrs
cmpsb
or
xorb
xor
outsb
adc
rorb
xor
nop
adc
push
mov
push
movsl
mov
test
add
imul
xor
lret
stc
sbb
roll
lret
sub
and
mov
rorb
cmpsb
stos
pop
loopne
decb
lcall
push
lds
sub
and
xchg
insl
xor
cmp
inc
push
mov
insl
outsb
jno
shlb
test
fs
rolb
and
xor
rcl
fildll
mov
fiadds
out
pop
pop
adc
jge
push
fistps
bound
pop
ret
jbe
mov
dec
push
scas
insl
or
mov
and
fsts
or
inc
in
inc
adc
pop
push
jb
or
subb
addl
adc
push
mov
cmp
push
shrl
or
jnp
out
movsl
cmpsl
daa
orb
mov
outsb
lods
stc
pop
in
inc
cmpb
cmp
lods
inc
in
icebp
je
adc
inc
push
jg
adc
push
add
lret
sub
add
or
or
or
bnd
outsl
es
inc
jmp
sub
inc
insl
shlb
push
cmp
sbb
adc
push
push
test
jmp
lods
in
or
adc
inc
test
dec
push
mov
sub
sbb
or
les
and
push
cmpsl
stos
or
stc
cmp
adc
arpl
lahf
test
cmp
mov
aaa
ret
mov
in
and
or
jb
sub
adc
lret
int
inc
mov
xlat
mov
in
repnz
sbb
add
lret
inc
add
sub
sbb
add
sbb
rcrl
inc
lods
or
daa
add
push
mov
icebp
aad
jo
insl
fdivrs
cmp
mov
mov
mov
sarl
inc
ljmp
cmpsb
mov
and
out
pop
push
jge
mov
mov
pop
addb
sbb
fcmovnu
test
pop
addb
cmpb
add
dec
push
movsb
or
in
pushf
sub
push
ss
and
mov
in
add
inc
hlt
lahf
les
xor
adc
stc
mov
call
popa
out
sbbb
inc
rorb
das
aam
push
addr16
rcrb
mov
mov
xor
or
add
adcb
std
xor
mov
push
js
ljmp
sub
test
fwait
mov
loopne
adc
sub
push
mov
ss
jl
inc
dec
ljmp
jmp
and
fisttpl
orb
mov
shrl
ja
outsb
mov
or
cmp
lock
or
mov
call
lods
fildl
loop
pusha
faddl
out
sbb
push
pop
pop
mov
jno
test
repnz
ret
or
ret
out
pop
xchg
or
inc
inc
jge
xor
pushf
add
push
fisttps
repnz
fcmovbe
call
add
add
jecxz
loope,pt
roll
push
and
adc
adc
into
push
cmpsb
stos
rclb
xor
pop
xchg
sub
and
adc
rcll
xchg
adc
add
push
cmp
add
mov
or
sub
add
sub
pop
outsb
pop
arpl
add
imulb
movsb
lock
cwtl
jl
inc
push
fcompl
push
ret
incb
push
adc
mov
lods
or
pop
cmp
das
adc
addb
popf
mov
in
testl
and
fists
shl
sarb
add
jle
fisttpl
popa
rorb
jp
outsl
inc
pop
push
std
jl
or
stos
shll
and
push
stos
sub
push
inc
test
add
dec
fs
push
jae
cmpsb
mov
or
bound
add
jae
sahf
cmp
adc
bound
pop
out
shll
push
pusha
xchg
add
lds
out
inc
add
pop
daa
sub
rorb
adc
and
lods
enter
or
cs
stc
lcall
lahf
js
adc
or
push
sbb
sub
pop
pop
aam
dec
cli
rol
fadds
push
pop
add
cmp
sarl
int
adc
add
test
orl
mov
js
xchg
into
ficoml
lds
sbb
leave
jb
dec
add
add
imul
lods
imulb
xor
mov
das
add
inc
out
sub
mov
cmp
popa
cli
rorb
xor
fwait
rorl
je,pt
sbb
pop
dec
ret
push
or
cmpsb
repnz
imul
cmp
pop
nop
lret
or
adc
add
mov
add
sbb
push
xchg
pop
or
push
cwtl
push
mov
push
pop
fistpl
mov
pop
push
and
pop
push
popa
or
lret
in
and
or
jmp
xchg
loope
fdivrs
movsb
and
dec
push
adc
or
fcompl
vmwrite
pop
stos
movsl
inc
popl
or
sbb
addr16
pop
pop
repnz
lea
mov
mov
dec
dec
push
and
bound
lock
fiaddl
cmovb
pop
inc
mov
shrl
aad
cmp
clc
cmp
nop
jg
inc
sarl
pop
mov
fwait
xor
adc
les
cmp
xchg
adc
lods
mov
shll
jnp
sahf
add
rol
and
jnp
sbb
pop
fadd
push
inc
adcl
lcall
popa
lcall
fdivp
or
pop
push
dec
das
fwait
aam
push
adc
es
dec
inc
cmp
lcall
xor
sbb
push
mov
or
dec
aas
adc
adc
push
push
push
cmp
stos
cld
add
cmp
pusha
adc
xor
lods
or
cmp
cmp
ss
inc
add
sbb
push
cmp
mov
mov
sbb
push
jge
int3
mov
out
roll
mov
adc
test
nop
orl
sbb
jl
cmc
sbb
addr16
mov
mov
lock
ret
ljmp
push
inc
cltd
dec
cmp
inc
pusha
lods
mov
mov
insb
inc
je
and
or
out
inc
adc
call
rorl
and
decl
or
lock
icebp
and
add
pop
add
push
push
sub
adc
lret
movsl
insb
mov
inc
rclb
pop
add
sub
cmp
sub
dec
add
push
pop
pop
scas
or
inc
fdivrs
add
std
icebp
or
add
add
lea
bts
jb
pmaxub
push
data16
adc
mov
dec
shll
leave
and
add
movsl
sbb
std
ds
inc
xchg
rorb
push
cmp
push
add
push
mov
and
push
mov
pop
in
or
cmc
outsb
test
dec
leave
mov
int
notl
pop
lods
popa
sbb
scas
out
xor
jl
dec
inc
add
or
mov
test
lods
inc
jo
scas
mov
push
push
adc
inc
push
shl
lret
or
mov
sbb
push
movsb
sti
loope
out
mov
dec
idivb
mov
fistpll
data16
outsl
push
push
or
and
stos
call
or
xchg
icebp
mov
movsl
pminsw
insb
roll
xchg
nop
push
ss
add
push
sub
in
push
shlb
or
and
adc
sti
add
shll
test
pop
mov
int
dec
or
or
int3
push
mov
pop
jle
in
pop
xchg
xor
mov
inc
cmpsl
and
das
shlb
pop
adc
push
clc
dec
incb
gs
jbe
pop
out
sarb
call
push
jae
push
mov
push
jb
inc
mov
mov
gs
fwait
aad
pusha
rolb
and
ret
ret
push
insl
repnz
out
rcl
loope
sbb
jb
xor
push
ljmp
cmp
cli
add
add
lret
xchg
sub
adc
pusha
push
arpl
inc
mov
call
addb
push
pop
add
xor
ds
push
push
lea
movsb
push
adc
sub
pop
push
mov
jbe
lds
fadds
xlat
orb
xor
dec
jo
rcrl
int3
icebp
mov
mov
push
cltd
sbb
inc
push
push
mov
ja
mov
stos
shll
icebp
popf
adc
into
push
inc
and
jne
fs
inc
and
pop
ret
cmp
aam
push
sbb
xor
inc
dec
add
pop
jg
push
push
xorb
sbb
ret
fstpt
add
and
test
or
push
in
or
test
jno
mov
movsb
adc
mov
cmc
add
push
jnp
pop
mov
xchg
jns
ljmp
sub
pop
enter
cwtl
cmp
and
sub
gs
add
adc
ss
scas
add
fisubrs
loopne
pop
mov
repnz
mov
dec
sub
adc
test
out
inc
mov
lock
std
dec
call
mov
add
or
push
or
sar
push
mov
pop
add
xlat
xchg
out
add
push
test
enter
cmp
sub
push
mov
or
shll
addr16
cwtl
dec
outsl
mov
xlat
addb
add
call
add
lods
push
cmc
hlt
rorl
dec
enter
sbb
xchg
stos
xor
ljmp
dec
mov
add
mov
in
push
xchg
dec
dec
mov
lock
subb
fneni(8087
or
ret
fs
adc
lcall
orl
inc
mov
and
sbb
pushf
pop
ss
jp
mov
push
xchg
push
xchg
xor
adc
stos
pop
mov
hlt
inc
pushf
cs
and
cmpb
jne
outsb
mov
mov
ljmp
push
sbb
sub
xor
movl
push
xor
sub
xor
pushf
add
fstps
rclb
scas
xchg
inc
fs
ds
cli
out
mov
mov
add
clc
mov
jbe
mov
jmp
jne
cmp
push
in
loope
daa
movsl
and
fiadds
enter
fldt
mov
test
les
test
push
and
lret
lds
in
ret
popa
mov
movb
sbb
mov
imul
sahf
sbb
lret
push
bound
cmp
xor
mov
mov
lock
add
aam
push
adc
mov
or
adc
or
mov
pop
xchg
divb
push
andb
pop
ja
dec
add
aad
cmpsb
imulb
pcmpgtw
mov
pop
adc
imul
xchg
dec
shlb
fwait
je
add
iret
adc
dec
and
dec
or
push
stos
jne
subb
in
adc
adc
add
inc
je
sbb
pop
add
jnp
stos
xchg
inc
out
test
ljmp
push
cs
test
bound
add
rclb
mov
add
or
push
hlt
rcrl
lea
pop
fisttps
repnz
subl
mov
int
pop
push
fisttpl
mov
push
pop
lock
bound
add
rolb
lret
cmc
in
dec
fdivrs
push
sub
aad
int
je
ss
loop
enter
add
inc
cld
mov
ss
sbb
out
or
cs
pop
scas
inc
push
ret
inc
inc
loopne
sbb
pop
test
lods
inc
or
mov
mov
cmp
and
adc
cli
adc
xchg
hlt
cmc
add
or
cmp
add
sarl
je,pt
gs
andb
or
push
leave
xlat
dec
lret
mov
cmp
adc
sbb
lcall
jmp
adc
push
or
sbb
inc
rcrb
in
out
push
cmp
sbb
loop
add
cmc
sub
loopne
movsb
insb
cmp
and
push
add
add
testb
push
xor
rcrb
adc
fs
insl
mov
or
push
push
std
sub
xchg
vpunpckldq
jne
lret
mov
sbb
pop
sub
xorb
push
mov
addr16
or
inc
adc
iret
xor
mov
jo
jno
adcb
and
inc
nop
or
pop
push
push
mov
add
add
rcr
pop
mov
lock
bswap
or
pop
or
mov
fimull
inc
or
xor
mov
or
mov
jge
push
mov
mov
das
and
cmp
mov
ds
sbb
les
sbb
cltd
or
mov
sub
subb
pop
jle
leave
pop
hlt
and
mov
push
push
xor
jbe
mov
xchg
xor
inc
aad
add
ljmp
jmp
or
scas
adcl
xor
popf
push
cmp
mov
je
les
sub
or
jo
or
enter
arpl
push
mov
addb
inc
lock
pop
mov
xchg
and
loopne
push
inc
lahf
mov
push
daa
inc
xchg
fs
sbb
pop
adc
sbb
rcrb
es
subb
lock
mov
in
dec
add
out
outsl
popf
rorl
aam
daa
xchg
sbb
push
inc
sbb
rorb
push
and
and
adc
or
adc
into
jecxz
andb
add
imul
rorb
test
pop
xor
lds
add
rclb
or
cmp
push
inc
shrl
add
add
sub
mov
push
push
imulb
inc
call
adc
and
stos
mov
je
repnz
mov
adc
shll
sbbl
push
xchg
lds
pop
xchg
mov
push
mov
dec
mov
inc
or
mov
pop
add
es
inc
xor
std
sbb
and
and
or
push
mov
add
shll
mov
popl
xor
ljmp
ret
push
adc
in
adc
sbb
out
cmpsb
cmp
int3
stos
mov
inc
scas
pop
jo
lds
pop
mov
mov
sub
push
or
mov
inc
pop
sub
xchg
mov
or
inc
adc
jo
mov
mov
mov
adcb
int3
add
add
pop
ja
movsb
xor
sub
stos
lods
xchg
loopne
push
or
adc
sbb
add
sbb
scas
test
push
movsl
cmp
dec
rolb
ss
mov
loopne
pop
or
adcl
lods
mov
stos
fimull
push
mov
mov
enter
sub
dec
add
sub
mov
sbb
rorb
sbbl
cltd
and
pop
xor
push
not
in
mov
orb
arpl
lcall
je
jne
roll
fmuls
data16
imul
jl
shll
add
push
addb
lods
dec
loopne
sbb
dec
push
sbb
sbb
fmuls
shrl
ret
insl
fdivrl
cmp
ret
inc
aad
sbb
mov
lret
push
mov
cmpsb
das
call
addb
ja
mov
jg
shl
mov
leave
adc
xchg
js
imul
cltd
push
mov
out
pop
out
stos
add
push
adc
push
push
add
movb
sbb
mov
in
mov
add
mov
adc
sbb
mov
mov
push
mov
cs
or
stos
dec
push
fsts
xchg
int
and
xchg
popf
call
lcall
out
or
xchg
xor
cmpsb
stos
lcall
sbb
mov
adc
sbb
xchg
ljmp
ja
decl
pop
cli
andl
cli
or
lret
movb
in
mov
mov
mov
cwtl
xchg
fisttpl
aad
dec
movsb
sbb
int
add
loop
xchg
or
in
pop
push
lret
andl
sbb
cmp
test
dec
sbb
xchg
sbb
sahf
and
stos
push
inc
pop
mov
mov
cmp
and
adc
or
es
roll
add
jp
pop
movsl
ds
lds
outsl
call
add
and
cmpb
mov
mov
mov
stc
stos
pop
dec
out
dec
mov
inc
dec
shlb
cmpsb
mov
test
sub
call
fnstcw
mov
repz
out
inc
mov
or
testb
insl
shlb
jp
test
push
and
dec
pop
mov
adc
lds
inc
pop
cmpsl
rcll
cltd
push
je
add
cmp
push
out
xor
pop
out
lea
movsb
and
and
add
lea
inc
stos
inc
mov
mov
inc
test
shll
fildl
rcrb
out
jo
push
lods
mov
mov
ret
xor
ljmp
xchg
add
xor
mov
or
test
dec
das
pop
addr16
or
lcall
dec
add
add
mov
jo
insl
or
pop
lock
test
or
fdivrs
movb
adc
rcr
or
enter
push
sbbb
xchg
and
stc
or
fcmovnbe
push
rcl
add
cmpsl
cmpsb
test
inc
int
hlt
rcrb
mov
inc
push
add
inc
pop
and
sar
and
ret
lods
rorb
cmc
test
andl
add
xor
add
push
sbb
std
push
xor
add
es
push
xchg
addb
add
add
and
repnz
push
xchg
ret
mov
cmpsl
sarb
jo
xor
mov
or
sub
cwtl
jl
arpl
lea
or
adc
aam
sbb
jae
mov
int
jge
ja
in
inc
addb
mov
mov
pop
jno
mov
shlb
jmp
mov
and
repz
and
clc
sbb
mov
xchg
popf
add
add
sbbb
mov
xchg
in
mov
adc
dec
inc
sbb
andb
ret
or
mov
dec
push
jne
js
xchg
test
sbb
and
ret
xlat
sub
inc
cltd
add
inc
sub
sbb
add
mov
mov
sahf
push
push
ret
add
push
and
sbbb
shlb
adc
aas
jge
pop
aam
lahf
or
push
pop
int
rorl
ljmp
hlt
push
jb
xchg
mov
add
push
add
shlb
mov
icebp
sub
jecxz
iret
or
cmove
shlb
pusha
shr
dec
lea
lahf
cltd
out
jnp
nop
loope
add
aam
cmc
add
pushf
xor
push
push
jge
lods
xor
sbbb
add
cmpsb
mov
pop
inc
cwtl
or
int3
andl
lret
sti
dec
incl
push
cs
push
mov
inc
mov
leave
mov
enter
adc
cmpsb
and
pop
scas
xor
xchg
xor
adc
cmp
add
aam
inc
adc
inc
gs
add
add
sbb
push
pop
fmull
clc
ffree
pop
into
in
ja
and
mov
or
push
push
sub
and
cmp
lcall
jb
jb
jae
add
or
sub
push
lret
lret
mov
push
lcall
ret
xchg
sbb
imulb
pushf
mov
stos
jmp
pop
adc
stc
sbb
jmp
enter
sbb
iret
addb
sbbb
cmpxchg
lcall
adc
dec
jno
insb
pop
add
shlb
mov
ret
repz
push
xor
sbb
lcall
add
adc
mov
shlb
xor
inc
lock
cmp
dec
mov
sub
notb
adcl
mov
into
mov
test
loopne
out
add
movsb
cmc
cmpsl
ds
icebp
inc
xchg
add
mov
jo
push
movsl
adc
rclb
push
je
cmp
rclb
int3
scas
into
and
hlt
add
pop
add
stc
pusha
jmp
sar
add
pop
and
das
jb
push
mov
cli
shrl
or
dec
pop
leave
pop
push
stos
lods
mov
pop
leave
shrl
les
cmp
or
dec
sub
and
outsl
jl
mov
notb
cs
cmpsl
ljmp
cld
cmp
lock
mov
push
or
test
sub
sbb
sbb
cwtl
mov
lods
loope
sub
xchg
dec
push
dec
push
js
pop
lahf
jb
or
cmpsb
add
or
push
leave
sbb
adc
adc
mov
sbbl
cmpsb
push
add
mov
bound
mov
syscall
push
adc
icebp
out
adc
add
or
cmp
or
pop
inc
jmp
jecxz
icebp
test
and
inc
ficoml
cmp
jmp
sbb
in
xchg
adc
jnp
das
insb
stos
sbb
sub
cmp
push
push
or
add
pop
add
or
mov
pop
insl
repnz
push
or
mov
arpl
data16
insb
std
cmpxchg
push
cwtl
sbb
pop
sub
cs
adcb
stos
repnz
addr16
out
cmp
ret
inc
aad
or
jge
or
call
repnz
aam
mov
sbb
lahf
mov
enter
shll
push
adc
and
jne
jbe
dec
sub
stos
mov
sbb
or
aad
dec
stc
xchg
add
cwtl
shlb
mov
jb
xor
add
orb
inc
add
mov
loopne
xchg
filds
ja
ficoms
shll
sti
loop
add
test
cltd
js
roll
jne
scas
dec
movsb
sarl
jp
shlb
dec
orl
orl
dec
movb
push
sub
jns
push
push
enter
ja
sbb
fcoml
jno
inc
stos
test
or
inc
mov
fwait
lock
and
push
dec
inc
rcrl
nop
mov
mov
xchg
sbb
loop
sbb
sbb
sub
mov
and
or
mov
jmp
stos
lret
mov
ret
hlt
adc
inc
rorl
ljmp
add
inc
mov
sbb
add
pushf
push
shrb
and
inc
ret
mov
cwtl
in
fs
aad
and
cld
scas
jnp
mov
mov
xchg
xchg
dec
test
add
xchg
jb
cmp
mov
mov
xchg
dec
leave
xor
sub
testb
mov
jmp
pop
ret
cs
jge
add
call
call
and
ljmp
les
cmpsb
sbb
sbb
mov
or
aam
cmpsb
xchg
pop
enter
push
je
shll
xor
add
in
jmp
mov
leave
shlb
cmpl
les
and
lds
add
adc
dec
mov
sbbl
leave
inc
pop
pop
adc
jl
in
loopne
loop
adc
adc
push
into
mov
test
add
inc
out
push
mov
adc
adc
and
adc
jp
sub
rcrl
dec
popf
leave
pushf
ljmp
sub
pop
cmp
add
or
lods
dec
mov
add
ret
das
aaa
lods
adc
jle
add
addr16
xor
iret
scas
mov
shlb
mov
test
mov
adc
bswap
ret
adc
or
popa
mov
lds
sub
add
mov
fwait
adc
push
xchg
push
sbb
mov
inc
scas
fimuls
leave
mov
lds
rcr
addr16
scas
js
out
inc
fbld
push
sbb
repnz
into
mov
hlt
lcall
mov
dec
sub
push
sbb
mov
hlt
mov
aas
sbbb
or
pop
lods
roll
xchg
sbb
dec
push
and
iret
and
xor
mov
lods
jmp
sub
icebp
inc
lds
inc
cmp
push
pop
adc
inc
or
popf
push
adc
in
test
rorl
sahf
popf
add
and
sub
cmp
mov
sub
adc
cmp
mov
sub
rolb
push
test
inc
test
push
scas
and
push
xor
mov
xlat
enter
add
adc
push
arpl
nop
leave
pop
rclb
or
cmp
sbb
mov
ret
xchg
mov
mov
dec
scas
aaa
stos
push
call
mov
xor
mov
sbb
cmc
mov
pop
hlt
and
add
adc
adc
js
xor
pop
sti
mov
rcll
xor
jne
xor
ret
call
bound
pop
das
dec
cmp
orl
rorl
jo
inc
rcrl
dec
hlt
out
push
xchg
push
pop
cmp
sbb
movhps
rcll
push
or
add
scas
dec
jge
mov
aad
imul
push
inc
add
les
stos
pop
mov
cmp
push
es
add
pop
push
lods
inc
cmp
push
and
or
jecxz
dec
andl
and
xor
jo
and
xor
sbb
add
popa
or
std
or
aad
aam
push
scas
adcb
rclb
xor
or
dec
stos
loope
sbb
inc
inc
pusha
add
inc
aam
adc
jmp
je
mov
sub
sbb
xor
sub
push
mov
loope
rclb
dec
mov
mov
into
push
sbb
test
repnz
je
mov
jo
cld
xor
sbbl
pop
sbb
aam
mov
sbb
stc
or
fisubrs
test
and
mov
and
bound
adc
insb
mov
dec
repnz
jp
mov
adc
shll
sub
push
push
or
or
in
cmp
or
mov
rcll
inc
movsl
out
sbb
bound
pop
ret
popa
daa
sub
sbb
loop
cmp
mov
mov
js
andb
shrb
mov
add
test
pop
lds
adc
lcall
inc
sub
mov
add
adc
loopne
in
sahf
mov
pop
push
add
pop
pop
shlb
push
aaa
je
mov
inc
arpl
nop
cmc
push
nop
add
inc
mov
pop
push
lds
andl
jbe
pop
test
rorb
cmpsb
stc
inc
xchg
andl
dec
lock
mov
and
aaa
push
pop
cli
cmp
pop
subb
and
cld
sbb
clc
sub
or
add
sub
add
psrad
sarb
mov
or
and
xchg
cmc
neg
add
xor
aam
aam
jecxz
sbb
fadds
push
adc
inc
or
and
popa
cld
xchg
repnz
push
leave
call
push
or
out
or
mov
add
and
xchg
sub
adc
lahf
fcompl
cmovne
push
jo
lods
loop
xor
inc
xchg
push
das
fimull
adc
inc
sbb
pop
push
roll
js
or
sub
jo
lret
sub
mov
sbb
inc
les
inc
pop
push
daa
dec
mov
mov
push
add
and
and
sub
test
ljmp
sub
inc
xor
jb
and
jne
sar
inc
call
cltd
mov
arpl
and
cmp
rcll
ret
call
fld
add
adc
inc
les
and
hlt
addb
scas
and
aas
das
push
aad
lret
and
scas
xchg
adc
and
push
in
adc
and
xchg
push
sti
add
inc
push
push
sub
push
cmp
add
lcall
bound
inc
lods
sub
les
jge
add
aam
dec
je
sbb
push
push
add
xor
aad
inc
jge
mov
mov
add
add
mov
xchg
leave
call
push
xor
push
fwait
mov
inc
add
sub
add
push
call
aad
loop
mov
into
adc
ljmp
xchg
imull
test
arpl
pop
inc
sub
push
lcall
mov
add
pop
bound
or
jl
mov
xchg
mov
je
rcr
js
clc
sbb
jbe
xchg
push
ret
shlb
add
dec
push
test
or
rorl
sub
inc
sbb
loope
test
jge
loop
sbb
pop
notl
pop
nop
aad
adc
cmp
aam
dec
adc
std
repnz
sbb
adc
daa
sub
ret
push
data16
pop
inc
fistpll
dec
add
lods
xor
mov
mov
sbb
cs
pop
xchg
mov
pushf
test
add
pop
and
loopne
adc
stos
shrl
loopne
xor
inc
pop
in
push
xchg
dec
pop
fisttpl
in
stos
adc
popa
jo
mov
insb
ss
jecxz
jl
add
subb
lock
mov
or
xchg
xor
or
cmp
or
mov
pop
pop
loopne
fmull
mov
sub
xchg
dec
mov
add
sarb
addr16
inc
adc
int3
pusha
sbb
push
add
pop
insl
jns
add
and
push
leave
mov
mov
cmp
sbbb
xor
pop
movsl
mov
cmpsl
cmp
pop
push
fs
lds
rol
pop
mov
in
add
jmp
dec
or
push
shll
or
jb
pop
pop
hlt
in
add
xchg
mov
adc
ret
mov
xchg
fwait
cmp
add
mov
push
or
jns
push
xor
pushf
inc
daa
test
xor
repnz
jne
sub
imull
ljmp
test
cmp
sub
repnz
shll
movsl
or
clc
inc
test
int3
lret
std
cmp
test
rclb
loop
cld
imul
cli
test
push
fdivrs
push
jmp
ds
movsl
jb
in
aaa
pop
or
jle
or
push
leave
mov
push
clc
sbb
or
sub
mov
pushf
iret
scas
dec
cwtl
sub
sub
mov
lods
push
rcrb
mov
and
push
push
stos
xchg
xor
loope
movsl
add
pop
adc
or
fwait
subl
mov
scas
ljmp
cli
mov
and
stos
cmp
and
popf
mov
iret
sbb
icebp
or
dec
test
adc
pushf
je
inc
ret
adc
inc
aad
adc
xchg
push
push
sbb
cmp
leave
hlt
punpckhbw
push
cmpl
inc
mov
mov
mov
adc
aam
or
cli
enter
push
movsl
xor
sbb
adc
out
roll
cld
dec
sbb
sub
inc
adc
push
es
or
lcall
jmp
mov
pop
pop
mov
push
dec
sbb
pop
or
jne
dec
lock
outsl
cmpsb
sbbb
inc
leave
lds
and
stos
repnz
push
negb
mov
push
push
adc
pop
stos
adc
sub
and
out
ljmp
jmp
popa
or
sahf
mov
shrb
std
addl
or
test
add
ljmp
xchg
or
in
imul
mov
loop
test
fs
lods
cmp
dec
out
imul
and
push
push
push
clc
movb
cmpsb
mov
pop
mov
or
cmp
xchg
add
int
cltd
pop
daa
js
leave
inc
push
sbbl
mov
out
pop
dec
test
stos
pop
sbb
ljmp
jb
or
dec
push
stos
lcall
aad
shrl
daa
pop
adc
push
ljmp
or
ds
ud1
inc
adc
je
test
ret
pushf
inc
inc
xchg
das
into
jae
pop
jl
sbb
repnz
pop
in
les
andb
add
jo
je
stos
mov
movsb
jno
fiadds
adc
xor
mov
sub
xchg
push
rclb
icebp
pop
add
push
es
sub
add
or
roll
jo
adc
jb
nopl
jno
pop
icebp
mov
rcrb
xor
pop
push
cmpl
sub
xor
scas
pop
sub
jns
dec
daa
shll
sub
sub
out
and
mov
fsts
test
adc
dec
pop
in
cwtl
jae
nop
icebp
ret
adc
imul
ret
pushf
aad
loope
inc
mov
or
in
push
inc
mov
push
inc
jno
enter
adc
lods
testl
call
sub
pop
call
clc
popa
mov
push
or
mov
lret
sbb
inc
mov
ljmp
mov
sbbb
rol
imul
aaa
stos
adc
inc
mov
push
stos
add
or
lcall
adc
push
movsl
cmp
lcall
lds
rcll
sbb
mov
mov
ss
dec
insl
outsb
or
or
adc
mov
rol
dec
adc
inc
out
inc
and
mov
push
push
adc
xor
test
inc
xchg
sbb
sbb
ret
sti
pop
cltd
cmp
sub
lret
into
xchg
mov
test
add
push
jne,pt
imul
mov
and
mov
mov
xor
nop
mov
aad
sahf
lds
subl
mov
int
aam
push
das
push
sbb
test
subb
add
push
xchg
pop
adc
push
in
cmpb
add
add
dec
mov
test
inc
or
or
or
mov
cmp
sub
jb
lds
mov
inc
test
add
add
or
push
cmp
push
mov
adc
add
pmaxub
mov
pushf
inc
pop
jo
xor
ficoml
hlt
cmp
ficomps
rorb
xchg
stos
scas
scas
in
sbb
xor
sbb
mov
push
scas
xor
sub
mov
in
inc
addb
push
inc
icebp
cmp
pop
push
add
cmp
adc
push
sub
mov
mov
shr
adc
mov
daa
sbbb
dec
xchg
mov
or
or
mov
out
jns
pop
xor
xchg
in
or
or
sahf
test
icebp
xor
push
mov
shrl
push
insl
inc
cmp
movsb
shll
adc
pop
push
cmp
mov
nop
andl
mov
scas
add
cld
mov
lea
in
pop
push
jb
jno
push
jb
mov
jae
push
push
jp
adc
push
test
or
xchg
jae
mov
call
aad
repnz
jb
mov
enter
cwtl
mov
push
lcall
dec
testl
dec
pop
or
mov
subb
mov
cmp
and
push
notb
cmpsb
fildl
mov
add
and
push
ret
pop
stos
mov
jecxz
or
mov
fs
adc
push
adc
xchg
push
inc
sbb
mov
fsubl
ds
xlat
adcb
add
push
lret
adc
push
insl
push
or
dec
in
pop
adc
mov
mov
mov
lret
sub
or
rolb
lods
jo
shll
cmp
and
add
push
push
pop
mov
mov
push
movsb
adc
aaa
orb
ljmp
push
fcomip
jmp
inc
daa
sub
pop
sub
loope
loop
rcrl
mov
xchg
imul
jno
nop
rcll
adc
dec
fsubs
cld
icebp
subl
pop
in
inc
rorb
test
les
mov
mov
cmp
stc
rorl
ds
sbbb
rcrl
call
out
cli
jmp
ret
loopne
pushf
pop
push
adcl
icebp
cwtl
xorb
leave
pusha
pop
sbb
lods
in
outsb
mov
test
daa
mov
inc
aad
lea
pusha
mov
scas
sbb
enter
add
inc
mov
xchg
pop
jb
sbb
sbb
enter
push
lods
orl
xchg
sbb
mov
sbb
jne
stc
xchg
sbb
icebp
pushw
roll
andl
dec
in
pop
jne
iret
adc
pop
inc
xor
jae
loope
dec
cmp
xor
push
or
add
adc
insl
ja
push
adc
pop
aam
mov
push
push
cwtl
lds
jae
inc
ret
ss
jno
enter
es
lret
add
mov
and
xor
add
jb
mov
dec
je
in
cmc
adc
pushf
sub
sahf
call
push
adc
cmpsl
pop
mov
notb
pop
add
mov
pushf
sub
mov
mov
mov
mov
adc
jne
clc
loopne
push
icebp
notb
add
pushf
xor
cs
jb
int3
fldt
or
and
push
inc
push
test
xlat
and
test
enter
pop
xchg
xor
leave
ret
push
loop
mov
insb
pushf
fs
add
aas
loopne
mov
push
push
mov
incl
out
insl
not
mov
mov
movsl
mov
and
in
fadd
shl
lret
shll
decl
test
pop
test
jne
lahf
mov
in
popa
mov
push
adc
xor
mov
mov
jne
or
pop
sbb
stos
sbb
movsl
mov
mov
inc
mov
fs
cs
sub
lea
movsb
push
sub
pushf
testb
je
jbe
fstpt
inc
aam
add
pop
sbb
and
and
clc
out
repnz
imul
in
mov
std
in
jle
dec
cwtl
push
push
adc
pop
pop
ret
mov
jne
push
in
cmpl
test
jne
or
and
or
cwtl
sti
dec
mov
and
nop
and
mov
add
add
inc
sahf
out
sti
add
jo
push
add
add
sti
mov
add
inc
or
adc
in
fwait
nop
add
mov
in
testb
fnsave
sbb
sub
jg
add
pop
and
mov
call
jne
mov
in
pop
and
lea
addr16
mov
pushf
mov
cmp
cltd
sbb
push
jns
jmp
out
out
pop
test
pop
je
or
notb
repnz
outsl
and
mov
and
enter
mov
jmp
ret
jo
push
push
cli
mov
mov
fsubrp
sub
je
outsb
sbb
testb
sti
add
insl
fldl
sub
adc
daa
loop
mov
push
int
mov
mov
mov
pxor
xlat
xor
cmc
mov
ss
push
sbb
lea
movsb
in
subb
jle
sub
and
sbb
sarl
jno
pop
adc
jo
jle
cmp
inc
pop
in
mov
test
pop
cmp
cmp
cmp
cmp
inc
sbbb
popl
push
cmp
pop
push
out
fisttpl
iret
rcrl
js
pop
jmp
call
outsl
lods
cld
mov
or
jmp
xor
or
leave
mov
push
popa
adc
das
lock
push
sub
cmp
add
adc
jae
cmp
jne
out
adc
movsl
mov
jmp
or
pop
ficoml
sti
sbb
and
rcr
mov
pop
je
test
dec
movzbl
das
outsl
fwait
mov
fbstp
jmp
cmpb
or
jbe
inc
or
pop
stos
jmp
ja
xor
add
jmp
pusha
lods
divl
fstpt
sbb
je
fildll
mov
ret
je
cmp
je
inc
out
out
rcrl
cltd
pop
lea
add
jge
je
fildll
add
xrelease
int3
sbb
pop
sti
fcomip
data16
cmp
cmp
cmp
ret
cmpb
and
cmp
das
push
outsl
ja
jge
pushl
or
bound
std
aaa
jne
pop
lock
test
push
xor
add
mov
mov
sub
xor
push
push
ja
dec
sbb
js
cmp
dec
mov
mov
push
add
push
push
push
mov
sbb
jae
xchg
fdivs
fmuls
mov
fwait
das
daa
and
push
push
xor
cld
daa
adc
pop
les
shl
dec
sbb
es
jge
lods
add
jne
jecxz
or
add
dec
sbb
aaa
incb
adc
cmp
inc
cmp
in
in
mov
and
test
add
fs
das
mov
jo
adc
aad
jnp
jbe
into
or
andb
inc
inc
sbb
inc
push
xchg
mov
xor
testb
sbb
je
or
or
arpl
dec
mov
jmpw
gs
inc
xor
daa
add
pop
enter
xor
rcl
push
lods
test
pop
jne
inc
inc
jmp
xchg
sub
ret
inc
and
inc
cmp
or
jecxz
pusha
fmuls
xor
jecxz
or
mov
push
xchg
ret
shr
mov
dec
test
push
inc
mov
push
pop
inc
mov
jne
andb
push
aas
je
cmpps
sub
loop
pop
outsb
inc
cmp
cmovo
adc
add
fnsaves
cvtdq2ps
sti
push
stos
movl
mov
sti
pop
mov
dec
and
sub
xor
rcr
shlb
ss
add
xor
dec
xor
out
jnp
hlt
jmp
pop
inc
xor
pop
ljmp
pop
push
sbb
inc
or
daa
ret
push
mov
jmp
inc
or
jne
push
lahf
or
shrb
inc
sar
mov
add
mov
mov
xor
xor
je
mov
sbb
and
and
push
or
daa
pop
or
adc
mov
jmp
xorl
sti
dec
daa
jae
mov
cmp
mov
je
inc
cmp
in
push
outsl
sti
add
movl
lods
mov
sti
jmp
mov
fld
jbe
push
cmp
insb
loope
jno
pop
dec
in
dec
push
sbb
fisubrl
or
imul
sbb
loopne
lea
outsl
add
std
ret
andl
inc
add
push
ja
add
mov
push
lock
pop
cli
mov
cmp
mov
add
fimuls
jbe
clc
jl
pop
addr16
mov
dec
add
push
cmp
andl
mov
pusha
or
sub
mov
and
roll
xchg
mov
cmp
adc
xor
lock
loop
add
cmp
arpl
or
push
and
fiadds
rcrl
rcr
test
movsb
rolb
pop
mov
mov
mov
inc
add
inc
cmp
jl
pusha
push
loop
testl
cmp
dec
ss
in
pop
lods
push
das
enter
jmp
ret
dec
neg
sbb
popa
mov
jecxz
jp
or
or
ret
ds
pop
mov
jle
or
jne
or
add
addb
jl
dec
jge
jo
ret
pop
test
outsb
cld
mov
mov
adc
mov
fnstenv
jns
push
sub
sbb
sbb
fcoms
pop
pop
ljmp
pop
push
adc
jmp
arpl
popf
add
push
ficompl
int
fisubrl
es
les
sbb
mov
sub
adc
jmp
adc
outsl
pop
push
sub
jg
push
cmp
lods
inc
lret
adc
incl
pop
rcl
jbe
test
sub
popa
test
call
ret
int3
add
lds
xor
or
rorb
in
fmuls
push
das
testl
ljmp
adc
sub
jle
adc
push
push
inc
les
subl
adc
roll
mov
and
sbb
mov
pop
jl
jbe
adc
pushl
jge
jbe
push
or
ret
fs
cltd
fimuls
call
fildl
jns
push
ret
out
insl
jl
or
push
xchg
inc
mov
mov
or
or
dec
outsl
in
pop
fadds
inc
mov
or
pop
ret
push
inc
xor
pop
inc
xor
rorb
sahf
pop
or
mov
cmp
adcb
cmpsb
dec
adc
cli
ds
mov
mov
jae
or
popa
cwtl
jbe
mov
je
push
push
lea
test
pop
pop
inc
or
xor
and
add
outsb
sbb
sbb
ss
fstpt
mov
push
or
or
out
fsubr
ja
mov
jmp
mov
jmp
pop
inc
insb
mov
fidivrl
pop
push
xchg
fnstsw
sbb
sbb
add
push
or
ljmp
roll
jns
sub
mov
jge
push
clc
pop
ret
push
test
roll
in
movsb
test
xor
mov
inc
out
cs
aaa
or
mov
xor
out
cmp
insb
aaa
jmp
jo
adc
fcmovu
inc
xlat
test
jne
icebp
incb
sub
lcall
pusha
fnsave
adc
push
xchg
in
push
hlt
mov
cmp
push
jb
pop
mov
inc
pop
gs
sub
push
push
fbstp
cmp
clc
or
add
inc
loopne
aaa
mov
push
lcall
lret
into
adc
sub
iret
fnsaves
shll
adc
pop
mov
daa
cwtl
push
pop
daa
sub
sub
in
adc
mov
or
test
mov
pop
push
pop
movsb
sbb
pop
in
stos
xor
aam
push
insb
cmp
das
cmp
imul
jle
ds
push
pop
clc
call
mov
ljmp
or
adc
imul
addb
mov
fisubs
sbb
rcrl
sbb
add
adc
mov
mov
cmp
test
inc
jne
pushf
jb
movzwl
or
fildl
stc
add
add
inc
sbb
test
iret
mov
fmuls
push
add
cltd
cmpsl
mov
push
mov
jge
or
xchg
fists
add
pop
mov
je
inc
xor
push
call
or
test
mov
scas
pop
jae
and
mov
jg
cmp
rep
stos
mov
xchg
adcb
jge
gs
cmp
xor
scas
js
inc
call
aam
in
fstl
xchg
and
ds
sub
lea
sub
loope
fadds
lea
lret
aad
inc
outsl
add
add
sti
out
pop
mov
cld
mov
inc
inc
adc
pop
jg
cmc
inc
inc
cmpb
lret
test
push
pop
push
jge
jb
data16
jge
repz
int3
scas
push
mov
in
jle
mov
movsl
movsl
pop
mov
inc
jns
lahf
adc
addr16
or
pop
mov
dec
xchg
jb
push
cmp
dec
fstp
push
mov
jmp
or
add
lahf
outsb
add
push
jb
pusha
cwtl
jb,pn
push
movsl
pop
jle
xor
jo
subl
push
les
movsb
pop
andl
fnstenv
pusha
call
lret
mov
cmp
xchg
andl
push
mov
add
push
sbb
mov
int
add
push
and
rcrb
mov
in
pop
mov
add
clc
mov
adc
mov
push
mov
jb
mov
movb
and
aaa
fmuls
mov
cmp
sub
lea
inc
mov
shr
test
and
shrl
add
stos
inc
inc
mov
xor
rcrb
push
in
cli
mov
lea
push
mov
mov
or
std
sbb
push
push
push
xor
cmpl
dec
and
ljmp
add
lea
idiv
std
mov
adc
nop
jae
mov
je
and
mov
mov
inc
jb
add
jg
arpl
dec
enter
mov
mov
sbb
ja
and
and
inc
cmc
dec
dec
mov
or
push
inc
fistps
adc
rcl
mov
push
jge
mov
adc
or
push
jb
sbb
push
lds
mov
int3
bound
stos
aaa
pop
jmp
lea
push
ljmp
test
inc
leave
cmp
inc
std
lahf
push
jne
mov
mov
out
lock
outsb
subl
test
call
out
cld
and
lods
push
jns
mov
lea
or
std
jmp
imul
pop
sbb
inc
loopne
lock
out
jmp
mov
fsubrl
imul
test
daa
test
push
mov
push
cmp
or
or
inc
out
or
pop
push
cwtl
sbb
push
cmp
push
xchg
jl
loopne
and
add
xchg
cmp
inc
jne
int
and
adc
cmp
jl
inc
mov
jnp
jb
add
inc
and
rclb
mov
add
xchg
out
jnp
sbb
loope
pop
jl
outsl
outsb
inc
push
js
rcrb
xor
and
and
sub
ret
or
rorl
leave
std
cld
jle
test
idivb
aad
dec
lret
fisttpl
jbe
clc
fidivl
jecxz
cmpb
mov
mov
rep
jmp
push
sbbl
imul
pop
pop
test
sbbb
js
pop
jbe
nop
add
adc
add
mov
das
mov
fdivs
push
or
pop
xchg
cmp
add
and
pop
add
cmpsb
nop
and
inc
mov
aas
mov
pop
xor
shll
dec
pop
inc
cmp
sub
int
shll
mov
mov
call
shr
in
lock
or
xor
hlt
clc
clc
cld
pop
cmp
push
adc
repnz
or
lock
inc
mov
nop
popf
or
adc
adc
sub
mov
or
cmp
jg
or
adc
ja
add
fldenv
mov
repz
adc
mov
jmp
sub
or
add
pusha
insl
add
outsl
add
dec
push
mov
inc
mov
xchg
pop
mov
cmpsl
out
add
mov
daa
and
sub
pop
scas
inc
pop
sbbl
mov
mov
imul
imul
cmpsb
imul
out
xor
add
adc
sbb
cmp
ret
scas
mov
xchg
adcl
rclb
mov
mov
inc
pop
pop
or
add
push
loopne
fidivs
ljmp
mov
cmp
cli
pop
pop
nop
shll
jne
push
or
insl
and
and
xchg
rcrb
test
push
inc
push
cmp
xchg
imul
hlt
add
js
mov
rcr
fdivs
mov
mov
mov
mov
in
ljmp
mov
mov
cltd
addr16
pop
push
or
insl
lea
inc
jnp
add
jb
addr16
shll
add
jno
filds
ret
shr
jl
cld
imul
add
dec
mov
mov
mov
jnp
dec
dec
or
test
cld
testb
rcrl
or
iret
jbe
mov
jnp
dec
adc
add
dec
mov
jae
mov
clc
shr
lea
xlat
and
decb
sub
rcll
and
jmp
add
push
sub
pop
mov
sbb
aaa
fdivrl
push
adc
adc
add
jl
mov
or
sar
icebp
aas
mov
xchg
mov
inc
cmpsb
fcmovbe
mov
inc
testl
cmpsb
jbe
repz
mov
lret
sti
inc
ds
jbe
insb
fldt
cli
mov
push
mov
inc
push
mov
ds
in
push
mov
lds
dec
push
mov
lret
add
adc
fucomip
or
cmp
repnz
xor
mov
lock
or
pop
jae
mov
push
add
stos
gs
arpl
add
jge
dec
in
jle
paddd
mov
jae
lods
cmovbe
mov
mov
or
or
cmp
jmp
and
lea
sbb
push
rorl
test
test
jge
inc
xor
mov
inc
dec
push
jl
cli
dec
lods
fisttps
or
loope
add
push
xorb
inc
nop
inc
add
push
call
pop
xor
pop
and
push
or
cmp
fucomp
std
inc
adc
paddd
or
mov
inc
adc
andl
pop
out
jne
sub
jo
pop
adc
adc
hlt
adc
sbb
adcb
sub
lea
push
push
lcall
incl
sub
adc
add
lods
mov
in
data16
lahf
fsubl
subb
pop
cmp
dec
sbb
pop
push
xor
push
mov
out
sub
mov
jmp
es
mov
shr
push
or
pop
cmp
test
fdivrs
jae
mov
cmp
sub
decb
iret
jne
notb
lcall
out
jne
mov
cmp
es
add
pop
and
push
jnp
in
pop
inc
pop
or
aaa
jmp
es
in
sbb
push
or
jnp
push
test
insl
addl
pop
mov
outsb
sarb
pop
shr
jbe
movsl
and
dec
popa
xchg
push
outsl
sub
adcb
in
aaa
mov
jo
push
fldl
push
inc
or
mov
jne
in
pusha
stos
xchg
adc
sbb
jmp
and
or
je
mov
push
push
pop
pop
dec
jbe
ja
mov
or
pop
test
jl
shl
scas
fldt
and
or
jg
cs
icebp
jnp
incb
cwtl
aas
jle
pop
daa
cltd
sbb
and
dec
add
dec
and
adc
out
outsl
dec
pushf
shl
in
and
mov
decb
jne
push
shlb
or
xor
in
push
mov
xor
sbb
push
or
ss
sub
pop
xchg
dec
into
and
sarb
add
scas
jp
nop
test
and
icebp
inc
or
and
ror
mov
fs
decb
jge
les
or
mov
bound
leave
mov
cmp
jmp
punpckhwd
mov
jnp
rol
mov
push
mov
movsl
pop
jo
cmp
or
lods
add
jns
mov
cld
fimuls
or
ret
jne
push
xlat
ljmp
movsb
ljmp
mov
movsb
dec
xchg
in
inc
add
add
mov
sar
pop
jne
pop
mov
sbb
mov
xchg
sbbl
ds
cmp
je
pushf
shlb
push
inc
lret
pop
andl
xor
mov
imul
inc
adc
pop
and
shll
mov
sbb
adc
les
dec
and
sub
jle
incl
sbb
jmp
push
jno
inc
or
fcmovnb
jge
push
ret
aaa
imul
bound
andb
outsb
or
mov
shl
stc
insb
mov
jns
mov
addb
xchg
leave
add
and
add
nop
lea
dec
ja
xor
repnz
push
movl
lock
push
out
jmp
call
adc
push
or
add
jmp
mov
inc
pop
sbb
das
fs
inc
inc
mov
jno
stos
mov
or
push
pusha
mov
or
mov
mov
fsubrs
leave
cmpsl
fs
jno
sub
adc
inc
mov
addr16
mov
rcl
popa
fs
adc
in
imul
add
pop
icebp
jle
insb
mov
sarb
je
adc
adc
jnp
mov
add
cmp
pusha
xchg
int3
add
push
pop
insl
call
push
mov
jne
imull
mov
and
jno
jne
jmp
add
inc
inc
inc
dec
je
adc
fidivl
sub
add
xor
das
fsubrs
pop
sarb
or
ret
pop
je
cmp
dec
adc
out
les
cs
sub
sbb
mov
xchg
arpl
xchg
pop
push
add
sub
adc
jne
cmp
sbb
lcall
xor
push
jbe
insl
imul
or
aas
pop
jne
inc
or
mov
enter
out
sbb
push
das
nop
jne
push
push
or
xor
rorl
xchg
mov
insb
lods
cld
ss
sbb
cmp
stos
pop
push
sbb
repz
nop
pop
adc
adc
cmp
sarb
jmp
ficomps
call
push
out
push
sbb
sbb
out
lods
loope
pop
sub
mov
roll
ss
jnp
cmp
jae
andb
std
mov
push
aaa
and
sbb
xlat
cs
test
sbb
pop
add
sub
or
les
ficoms
jmp
lock
adc
cmp
je
push
dec
fsubl
xlat
and
dec
in
sbb
dec
xchg
xchg
movsl
jmp
jne
add
divl
inc
or
sbb
mov
mov
int
aad
push
fidivl
dec
mov
daa
gs
into
cmpb
inc
mov
inc
adc
mov
xchg
xchg
mov
fmull
push
mov
je
push
fs
je
jbe
mov
add
jmp
mov
pop
in
xor
push
mov
lds
jno
movsl
mov
rorb
test
push
decl
ljmp
icebp
dec
fwait
pop
mov
pop
lret
sub
add
add
sbb
sbb
xchg
lods
jns
lea
push
lcall
push
movsl
mov
add
push
fiadds
pop
mov
ds
add
sbb
xor
inc
int3
mov
lahf
xchg
pop
sbb
subb
pop
loopne
fsubrs
fcoml
arpl
cmp
sub
xor
xchg
mov
sbb
pop
add
xor
dec
sub
push
pop
jnp
fs
sbb
push
clc
xlat
and
pop
inc
xchg
mov
in
xchg
mov
or
sbb
and
popa
add
xlat
divb
mov
stc
add
jb
neg
cli
je
push
mov
add
and
loopne
roll
lret
cmpsb
jmp
test
stos
cmp
and
mov
mov
add
mov
mov
cmp
pop
testl
sbb
jns
mov
mov
je
sub
aas
push
pop
add
xor
xlat
add
cld
add
in
in
adc
inc
fdivrl
mov
dec
pusha
repnz
add
jo
imul
adc
or
add
in
inc
je
and
jb
mov
pop
dec
shll
je
jl
mov
movsb
mov
shll
adc
add
adcb
call
sbb
push
jle
pop
lret
jb
sub
add
jae
mov
les
loope
jnp
mov
out
cmp
sbb
sarb
js
lock
sbb
sbb
hlt
loopne
in
sbb
sbb
or
add
sbb
pushl
xor
dec
add
jne
je
insl
and
fimuls
jb
or
nop
jmp
adc
dec
dec
inc
notb
dec
dec
inc
adc
push
xor
cmp
mov
and
bound
and
imul
stc
data16
aaa
daa
aaa
outsb
outsl
je
mov
test
jae
popa
arpl
data16
mov
jnp
outsl
ja
cmp
outsl
outsb
aaa
add
push
enter
fs
jo
jb
jbe
jb
jne
xor
arpl
and
insb
sub
xlat
mov
adc
sub
pop
das
pop
push
test
pop
xor
neg
jbe
imull
gs
xor
pcmpgtb
arpl
pop
imul
gs
push
inc
test
and
outsl
fucomi
and
insb
lods
je
mov
arpl
xchg
imul
pop
imul
mov
add
mov
insl
add
addr16
insl
and
sub
test
das
xor
dec
sbb
sub
xor
push
enter
cmp
addr16
mov
pop
xor
shrw
mov
mov
subb
cmp
fs
inc
sub
adc
pusha
cld
ret
imul
push
mov
ja
daa
or
imul
add
insl
jae
fadds
cmp
loopne
sub
insb
out
fdivr
in
ja
sbb
je
popa
xor
jbe
push
fcmovne
bound
scas
jne
adc
push
xchg
fs
mov
jae
popa
addr16
outsl
js
movsl
jae
es
push
xor
cs
iret
dec
inc
add
mov
test
add
or
inc
inc
leave
pop
push
add
fs
cmp
add
jne
imul
imul
add
mov
or
push
xchg
lea
fs
push
mov
push
xchg
xchg
xchg
scas
lcall
lahf
das
xchg
aad
or
mov
xchg
sbb
pop
add
daa
dec
inc
or
or
jns
enter
je
dec
sbb
leave
and
sbb
sahf
cmp
bnd
push
js
jns
jp
xchg
daa
dec
and
sbb
or
and
push
fldenv
xorb
inc
jle
jge
add
das
movsb
add
jns
and
cld
in
cmpsb
fbld
cld
inc
jle
cld
sbb
shll
incb
sbbl
frstor
mov
iret
mov
in
call
iret
push
jle
push
add
pop
pop
fcmove
in
scas
in
fidivl
rcr
fsubp
stc
cmp
jle
inc
repnz
clc
add
sub
add
and
add
adc
xorl
addb
inc
and
add
mov
and
add
das
cmp
add
push
mov
nop
leave
dec
subb
push
or
std
filds
dec
outsl
fs
gs
popa
outsb
fs
popa
sti
fldcw
xor
outsb
outsw
adc
insl
insl
pop
add
pop
mov
push
gs
aas
push
xor
sbb
mov
mov
arpl
or
negb
adc
adc
jne
jb
outsb
and
imul
outsb
push
jo
inc
mov
imul
popa
insl
and
inc
cmp
adcl
sbb
imul
gs
bound
outsl
dec
inc
inc
jns
adc
push
insl
fwait
sarb
clc
jne
pop
insb
or
adc
push
in
jns
gs
js
fs
in
mov
inc
push
popa
insb
jne
or
add
add
sbb
daa
sbb
test
sahf
or
mov
sbb
jns
mov
iret
data16
loopne
or
insb
cmp
imul
dec
jmp
mov
jo
or
cltd
loope
pop
arpl
push
adc
dec
push
jbe
lds
mov
jbe
or
pop
dec
inc
dec
or
xchg
push
gs
mov
inc
fs
dec
xchg
add
inc
and
orb
mov
dec
inc
push
or
lds
pop
inc
paddsb
inc
push
imul
test
sub
shrl
sbb
inc
test
insl
dec
js
push
popa
addr16
js
loopne
mov
inc
mov
imul
inc
dec
mov
pop
addr16
fs
dec
xlat
jbe
lcall
dec
jae
jo
jno
movsb
push
je
push
sarb
outsl
je
shll
push
mov
ja
lods
push
xor
in
cld
sub
in
insl
gs
or
imul
dec
mov
insl
jge
insb
fbld
or
xchg
dec
mov
jg
push
lock
aaa
mov
inc
test
mov
lock
add
inc
add
nop
add
dec
inc
lock
adc
lock
jge
adc
sub
lock
mov
mov
orb
inc
add
insl
sti
test
dec
adc
add
scas
sbb
add
fcomi
cli
and
lock
add
mov
xor
mov
inc
add
lock
push
lock
add
xchg
inc
inc
ret
arpl
test
xor
and
mov
mov
fldl
push
push
add
lock
inc
inc
inc
outsb
ljmp
test
xor
push
test
lods
xor
repnz
sti
mov
ja
outsb
pusha
jbe
add
jne
lock
imul
adc
shlb
fstp
mov
movl
and
mov
lock
rclb
mov
fisubrs
rol
dec
cwtl
mov
add
jnp
jb
mov
lret
lods
lock
das
add
pop
mov
repnz
lock
mov
mov
xor
testl
jb
mov
lods
adc
add
ds
mov
adc
sbb
adc
pop
cmp
lea
add
push
add
aaa
add
ja
fisttps
outsl
dec
cmp
xchg
lock
neg
mov
aas
inc
add
add
mov
je
mov
in
xchg
mov
orb
nop
pop
mov
imul
mov
lahf
sbb
dec
xor
push
and
add
inc
mov
fdivl
adc
getsec
jnp
inc
dec
test
sbb
fcomi
push
xor
dec
cld
adc
pop
xchg
in
sahf
cmp
lock
add
movsl
xor
das
cmp
fiaddl
add
data16
adcb
xchg
or
add
ret
ret
cmc
add
sub
stos
jbe
rolb
decl
push
or
xor
xor
or
or
adc
pop
jg
or
or
push
push
push
test
cmovl
xor
inc
or
adc
or
incl
dec
inc
jecxz
xor
aas
push
adc
xor
pop
adc
and
push
xor
adc
outsl
fcmovnbe
sbb
sbb
cmp
pop
sbb
adc
sbb
sbb
lods
std
lock
add
adc
or
inc
adc
or
adc
outsl
mov
add
or
orb
adc
and
and
outsb
mov
pop
adc
or
sub
in
fistpl
sbb
outsl
mov
adc
or
push
movups
std
push
lock
add
push
ret
sbb
scas
add
sub
sbb
add
dec
push
aas
and
add
or
pop
push
sbb
push
or
jg
lods
insl
jecxz
xor
or
dec
add
mov
or
mov
or
fimuls
inc
cmpsb
lock
add
adc
test
sbb
adc
int
fisubrl
pop
adc
sbb
pushl
mov
sbb
pop
push
xor
es
in
sbb
pop
adc
rcrl
push
add
es
idivb
or
lock
or
or
and
sbb
lock
add
push
inc
push
orb
jmp
loopne
add
or
or
add
stos
fs
or
sbb
push
addr16
and
add
cmovle
pushl
inc
subl
and
das
movsb
js
rolb
rclb
mov
dec
or
test
cmpsl
add
cs
or
mov
add
adc
jb
or
jae
push
testb
push
outsb
mov
ret
add
es
sbb
fwait
xchg
cmpsb
imul
jae
arpl
pop
rcr
dec
adc
push
outsl
dec
push
jns
test
sbb
orb
mov
add
add
add
add
inc
jmp
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
