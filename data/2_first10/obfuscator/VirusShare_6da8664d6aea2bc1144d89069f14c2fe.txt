lcall
rcll
jns
mov
mov
int
lcall
ret
or
in
and
and
mov
pop
ret
rorb
sbb
xlat
fldl
nop
pop
push
add
sub
fistps
add
nop
mov
nop
add
out
jge
nop
aaa
dec
or
adc
push
dec
add
jg
sbb
dec
mov
and
adc
adc
and
nop
and
fistpl
adc
add
nop
or
add
in
imul
add
inc
sub
mov
mov
and
or
or
addr16
bound
and
adc
inc
cmp
and
fidivrl
fcmovnu
and
or
and
stos
sbbl
mov
lods
adc
inc
sidtl
mov
fisubl
mov
mov
sbb
lods
add
nop
and
mov
fisubrs
mov
jl
pop
imul
pusha
testb
add
xor
movsl
and
lcall
popl
and
insl
fldl
add
inc
add
and
subl
inc
arpl
insl
sbb
or
stos
popf
pop
adc
and
and
sub
leave
fiaddl
shlb
and
mov
inc
and
ja
test
sub
mov
push
imul
jne
dec
pop
adc
xor
test
sbb
sub
add
add
jmp
lock
add
add
leave
mov
add
add
sar
lcall
or
add
xor
add
nop
cs
xor
cmp
mov
neg
add
dec
add
xchg
in
mov
xchg
inc
push
enter
divb
call
add
leave
add
add
add
clc
add
in
arpl
lahf
push
and
sbbb
add
adc
add
mov
sti
jg
movsl
pop
psllq
lods
cmp
mov
add
stos
mov
popa
mov
mov
add
add
jg
xchg
adc
andb
mov
or
enter
pop
mov
add
jo
add
add
cs
inc
add
sbb
pop
mov
jle
filds
fildl
add
or
aaa
add
pop
clc
test
mov
and
push
lret
data16
xchg
je
add
fadds
lea
sbb
jbe
incl
add
je,pn
cltd
add
inc
add
sti
out
mul
mov
ds
xor
mov
or
mov
add
add
test
or
jp
clc
outsl
jnp
mov
scas
mov
lahf
inc
sub
push
cmc
loope
fisttpl
add
movsl
add
mov
adc
enter
add
dec
add
or
or
adc
add
sub
std
xor
push
out
dec
sub
xchg
add
out
mov
sub
das
nop
loopne
mov
popf
loope
mov
ljmp
mov
in
or
insb
jo
sti
cmc
les
xchg
outsl
cmp
jecxz
or
mov
cmp
inc
and
not
inc
dec
sub
sub
add
dec
jmp
push
iret
imulb
decl
movl
je
inc
add
mov
mov
or
adc
mov
cs
pop
add
mov
repz
jle
add
neg
mov
sbb
pop
les
dec
mov
imul
scas
insl
in
mov
sbb
or
xor
not
insb
sbb
dec
inc
jnp
inc
mov
jg
lds
je
fistps
jne
add
mov
mov
aas
jmp
sub
mov
mov
out
xchg
add
js
adc
neg
insl
sbb
adc
imul
enter
lahf
or
test
pop
js
push
cltd
and
push
pop
fdiv
lret
mul
jecxz
add
jne
mov
or
aad
sub
and
es
and
hlt
fcomi
loope
cwtl
adc
adc
dec
mov
mov
fimuls
in
xlat
xor
lret
push
ja
movsb
shlb
cld
test
adc
gs
or
sbb
out
aaa
sbb
fdivrs
dec
mov
sub
adc
scas
or
and
add
test
add
int
cli
add
push
js
sbb
adc
pop
push
mov
xor
adc
mov
and
mov
cmp
jecxz
mov
outsb
aam
sub
ret
ljmp
mov
adc
sub
sbb
sbb
int3
pop
aam
pop
or
jns
repz
jne
or
es
loopne
jne
fldt
fwait
loopne
jg
int
loopne
xor
cs
sbb
push
adc
cli
xchg
adc
mov
fcomi
out
bound
inc
scas
repnz
mov
dec
hlt
sub
mov
lret
fists
sar
scas
out
ljmp
xlat
das
dec
push
call
adc
sbb
in
jle
push
call
pushl
push
lea
inc
ja
mov
fwait
xchg
mov
stc
xlat
out
lret
dec
hlt
xor
fsub
dec
imull
mov
ret
adc
cmp
lods
popf
inc
loopne
pop
and
xor
mov
xor
mov
hlt
mov
push
pusha
add
xchg
add
iret
mov
outsl
pop
add
jb,pt
gs
mov
pop
sub
fchs
hlt
sub
decl
pmaxub
neg
sub
imul
pop
add
dec
repnz
or
fisubs
cmpsb
stos
pusha
mov
mov
cld
inc
dec
out
or
les
shr
add
popl
ficomps
gs
mov
or
cmp
xchg
or
mov
clc
inc
addl
fcompl
cltd
or
imul
das
lock
push
test
int3
inc
add
mov
xchg
mov
add
push
pop
clc
adc
mulb
sub
xor
push
sar
fldt
add
sub
push
pop
test
add
lea
jge
stos
js
and
cmp
rcll
out
sbb
add
jnp
sbb
repnz
mov
fistps
adc
adc
outsl
lock
push
cmpsb
add
bound
mov
decl
jnp
dec
sub
lods
add
or
or
int3
movsl
dec
sbb
inc
jp
pop
mov
mov
add
in
and
mov
xlat
popf
int3
push
imul
mov
add
pop
sbb
outsl
lcall
popf
out
mov
sbb
cld
mov
push
sub
fisttps
stos
or
sbb
movups
pop
add
and
cmp
add
data16
cmp
pusha
jnp
jge
push
cmp
movsb
push
clc
outsl
push
lods
jecxz
mov
cld
jbe
repz
cld
or
xchg
roll
scas
incb
in
test
fidivl
add
das
stc
std
jo
std
shrl
xchg
xor
cli
and
icebp
fwait
pop
dec
sub
fidivrs
push
sbb
lods
scas
sbb
xchg
insl
popa
loope
mov
pop
jg
xchg
ljmp
adc
cmpsl
sbb
in
jb
push
mov
std
dec
push
sub
add
jmp
sub
mov
adc
add
lock
notl
jg
jl
or
mov
push
imul
xchg
aad
mov
sar
mov
out
loope
in
or
stc
rorb
jno
adc
mov
int3
add
push
out
insl
js
test
or
mov
lock
aaa
xchg
fcompl
sbb
mov
mov
jne
andb
inc
sbb
dec
cwtl
xlat
mov
add
pop
out
outsb
out
loope
cwtl
pop
outsl
bound
sub
and
sti
cmp
cmc
mov
push
cmp
call
aaa
pop
hlt
sub
lods
dec
sti
jmp
add
sub
outsl
mov
pop
imul
and
addr16
mov
jmp
outsl
or
adc
jns
xchg
lahf
orb
fisttps
sbb
xor
adc
push
sbb
mov
faddp
roll
jle
in
mov
inc
jnp
dec
enter
pop
pop
in
dec
iret
lds
pushl
outsb
cld
adc
movsb
pop
or
sahf
sub
ljmp
hlt
rcrb
xchg
cli
in
inc
test
lahf
xor
adc
add
sub
jle
cld
or
icebp
or
mov
xchg
jecxz
fistpll
shrl
jbe
pushf
pop
mov
inc
imul
aaa
loopne
pushl
adc
jo
leave
lds
je
fsubrs
cld
ffreep
xchg
pushf
push
push
ds
sbb
jle
mov
dec
pop
ds
in
leave
sub
mov
push
pop
movsl
sub
ja
lea
jmp
push
sbb
xor
pop
incl
sbb
and
jb
pop
cmpsl
ss
inc
repz
and
aad
push
mov
sbb
pusha
scas
cmp
push
roll
dec
fists
inc
cmp
cmp
xchg
cmp
xchg
pop
cmc
fwait
jmp
adc
inc
push
or
fldl
sbb
ret
jmp
pop
enter
mov
push
add
mov
div
fiadds
cld
or
test
inc
or
mov
ds
sbb
ret
sub
in
cmp
icebp
mov
shl
mov
jg
jl
mov
lods
and
popa
add
xor
fbstp
cld
cwtl
pushf
lock
iret
mov
mov
lods
fiadds
pop
inc
add
xchg
ret
push
adc
shll
sub
inc
mov
sbb
jb
jmp
outsb
out
les
add
jl
pop
pop
cs
add
daa
sahf
xor
sbb
fisubrl
or
divb
aam
ds
in
inc
cmp
adcb
iret
outsb
mov
shll
xchg
xchg
mov
add
stos
mov
dec
dec
jae
clc
pop
xor
jmp
adc
mov
sub
jp
ja
fcomps
stos
imul
dec
fisttps
movsl
add
push
inc
jb
jnp
jecxz
repz
jp
into
adc
mov
sbbb
adc
mov
insb
jns
movsl
ret
cmp
clc
das
xor
jl
jb
xor
cmc
push
mov
mov
and
xor
add
out
xor
adc
rcl
add
push
add
mov
out
pusha
pushf
daa
and
int
int3
push
pop
mov
ret
inc
sub
mov
std
ss
lods
cs
adc
in
in
aas
je
add
lds
add
mov
jb
mov
inc
andb
xor
push
xorl
lcall
leave
and
mov
push
sbb
add
push
insl
cmc
add
pop
std
mov
mov
test
jno
cmpsb
in
call
std
loope
mov
add
aad
push
pushl
or
shrl
cli
adc
pop
aaa
inc
aaa
mov
jp
mov
ret
or
adc
jo
imull
test
add
and
std
outsl
xor
pop
adc
inc
faddl
fisttpl
fldt
push
dec
mov
mov
jns
or
jge
mov
into
dec
leave
jns
inc
ja
mov
mov
push
mov
fsubrl
mull
add
cmpsb
and
rcr
mov
cmpsb
test
pop
xorl
shrb
movsl
outsl
std
lret
add
sbb
xor
xchg
fnstenv
and
imul
imul
push
movsl
pop
mov
mov
cmc
in
add
inc
daa
lret
adc
push
xlat
enter
ss
test
jg
popf
push
sti
notb
jl
add
ficomps
xchg
loope
fildl
loopne
or
das
sbb
pushf
pushf
adc
jg
iret
or
jecxz
inc
pop
xor
imul
je
inc
xorl
cld
test
daa
cltd
mov
cmp
fsubrp
das
mov
or
ficoml
cmp
sti
or
cltd
roll
jae
push
stos
mov
mov
mov
xor
or
add
push
adc
push
push
cwtl
je
js
mov
xchg
xchg
push
outsl
add
inc
imul
mov
add
xchg
jns
add
mov
int
test
fldt
jl
adc
arpl
out
dec
adc
sti
lods
inc
out
ret
cmpsl
orb
icebp
rcll
push
into
fucomp
push
in
cmc
pop
push
and
pop
fstl
lahf
adc
ljmp
cmp
loop
out
loope
mov
xchg
movsl
dec
sbb
mov
jg
xor
jecxz
push
sarb
ret
inc
ret
xchg
enter
dec
decl
jnp
inc
stos
pop
mov
das
push
das
xor
jae
mov
ret
andb
fiaddl
test
jne
or
cmp
loopne
sbb
clc
push
mov
adc
mov
mov
mov
scas
mov
fisttps
hlt
jp
jbe
add
pop
out
ret
xchg
inc
mov
cmp
ja
sbb
add
xor
test
sbb
add
loop
rcr
or
test
decl
or
divl
mov
sahf
pushf
leave
mov
aas
sub
push
loopne
ds
and
lret
loop
shll
cmpb
inc
test
insb
out
add
pusha
pop
idiv
mov
nop
xor
incb
or
sti
push
aad
sbb
repnz
filds
pop
ret
repz
das
shrl
pop
mov
or
adc
xchg
jae
in
lret
mov
cmp
out
cmp
xchg
pop
add
sub
push
sbb
xchg
outsl
fld
aas
int3
data16
out
je
mov
adc
and
dec
inc
ret
insl
test
cmp
and
push
out
inc
nop
ret
mov
movsb
sub
adc
stc
inc
negb
mov
stos
sbb
push
sub
push
cmp
insl
pop
dec
jecxz
movsl
in
dec
lock
mov
rcll
xchg
pop
sbb
dec
ret
inc
xchg
push
mov
hlt
sbb
sub
call
or
and
mov
cmovns
test
ret
scas
loopne
test
sbb
ret
ret
popa
mov
or
negb
push
push
cmpsb
rolb
mov
pop
sub
mov
iret
adc
mov
out
xorb
mov
push
icebp
xchg
scas
ret
scas
or
xor
push
fcmovnbe
incl
push
and
jbe
stos
loopne
xlat
jno
dec
fcomip
add
sub
repz
shrb
and
ja
decl
adc
jp
inc
inc
mov
push
mov
frstor
stc
pop
arpl
mov
cmc
aad
fdivrs
fdivrp
cld
or
insl
adc
cltd
or
fs
sub
sub
sbb
xchg
xchg
xor
aaa
outsb
xor
adc
lret
jle
mov
add
enter
lcall
sub
sub
pusha
cs
addr16
insb
xchg
call
pop
or
push
mov
adc
and
xlat
call
decb
xchg
inc
add
jle
cli
insb
sub
adc
popa
or
loope
or
adc
insb
dec
mov
mov
idiv
mov
mov
sbb
cmp
fnstenv
movntq
movsl
push
in
jno
jecxz
call
xchg
push
mov
mov
aaa
push
shrl
push
mov
cld
ljmp
push
add
andb
pop
call
add
push
sub
pop
popf
lret
adc
leave
fidivrs
sub
popf
sarl
sub
or
pop
pop
adc
mov
add
mov
jae
pop
sub
ljmp
dec
push
stos
add
jmp
popl
pop
int
push
in
mov
push
or
jp
and
or
jg
cmpb
xor
add
dec
xor
dec
scas
adc
mov
fidivrl
shrl
push
push
ret
adc
sub
jg
decl
xchg
inc
pop
lret
or
mov
add
jno
xor
push
sub
jne
aam
adc
mov
in
out
aam
test
mov
pop
std
sbb
jmp
repz
jmp
cld
out
adc
mov
mulb
not
mov
lock
xlat
sbb
add
mov
aaa
add
sub
add
aas
test
imul
pop
xor
mov
jecxz
daa
test
add
cld
pop
add
dec
add
sub
pop
inc
mov
and
jmp
fcompl
imul
or
mov
cmpsl
add
mov
sub
fldl
mov
pop
pop
xor
pop
jmp
test
decl
insb
mov
xchg
adc
dec
repz
add
lahf
or
icebp
pop
enter
add
xchg
fadds
pop
enter
sbb
pop
add
mov
and
mov
insl
fstp
lea
add
sub
int
test
imul
adc
adc
xor
inc
mov
outsb
add
push
repnz
fisubl
or
mov
stc
mov
and
imul
adc
xor
outsl
mov
mov
mov
inc
add
and
imul
or
pop
adc
sbb
cmpb
pop
out
subb
push
mov
fimull
or
test
sub
and
add
mov
ss
and
sub
lock
or
jae
test
jp
movsb
sti
fists
rolb
mov
adc
fldt
ljmp
enter
int
das
xor
mov
pop
and
repz
fisubrs
and
sub
lea
push
push
push
push
xchg
movsl
inc
xor
jo
jae
fcoms
push
jmp
stos
sbb
or
push
mov
sbb
or
push
adc
sbb
add
fcmovnu
jecxz
mov
sbb
rcl
aas
or
ds
popa
fistps
sub
jb
ja
add
pop
jge
pop
fisubrl
lock
dec
cmp
dec
sbb
jl
or
out
not
xor
jbe
push
icebp
lods
clc
jnp
cmp
ret
jbe
push
add
iret
loop
int
xchg
mov
pop
out
cmp
jno
sar
idivb
in
dec
jle,pt
lahf
and
sti
test
jae
jecxz
mov
push
pop
add
xchg
out
jo
das
jo
cmc
leave
jne
xor
sbb
jne
and
push
xor
add
out
sbb
fstl
adc
rorb
hlt
and
mov
arpl
clc
inc
inc
and
ja
fstp
sbb
inc
add
sti
or
sarb
dec
add
imul
aaa
hlt
call
call
push
push
aaa
jne
jbe
adc
lea
push
fdivs
rclb
stos
push
sbb
and
mov
mov
addb
jp
sbb
dec
fnsave
push
pop
divb
lods
mov
mov
loopne
sbb
dec
adc
adcb
clc
adc
daa
loopne
pop
adc
test
push
dec
or
pop
adc
sub
jb
insl
aam
mov
iret
lods
outsl
bound
ja
lret
jmp
add
and
rcll
sub
jo
negb
int3
in
out
std
push
xchg
movsl
stos
mov
subl
loopne
in
js
pop
cli
scas
iret
in
addb
pop
sahf
push
ljmp
mov
shl
cmp
push
mov
mov
mov
xchg
lods
and
mul
cmp
inc
pop
jl
or
js
jge
std
fistps
add
and
jge
test
test
int
es
or
rcr
add
and
or
mov
inc
outsl
ror
sbb
cmp
out
adc
je
jb
addr16
adc
test
or
mov
das
cmc
adc
push
pop
jp
pop
or
iret
repz
mov
neg
or
in
mov
inc
ds
loope
add
cmp
aam
push
add
add
dec
ss
dec
sbb
mov
out
cmp
jecxz
outsb
xlat
pushl
mov
xchg
jnp
lods
cld
cmp
and
sti
or
scas
xor
jle
cmpsb
loopne
es
adc
lcall
mov
fs
add
fwait
inc
out
xor
mov
mov
ficoms
mov
lds
sub
out
call
mov
mov
xlat
sbb
popl
dec
out
push
xchg
xor
dec
mov
xchg
negl
mov
mov
sahf
pop
jg
inc
pop
shl
jno
int
mov
sbb
aaa
ficoml
sub
mov
xor
mov
or
inc
aas
inc
sub
repz
lock
pusha
fs
in
bnd
lds
xchg
nop
push
pop
push
lods
lds
ret
stc
and
orb
mov
sahf
sbbl
jg
push
mov
sub
insl
cltd
ljmp
aaa
in
xchg
push
sbb
sub
in
icebp
outsl
fidivs
pop
mov
xor
in
mov
xchg
out
cli
rcl
sub
xchg
cwtl
mov
dec
and
aam
out
clc
test
mov
fsubrs
outsb
stos
into
lret
sbb
inc
out
fisttpl
fistpl
cmpsb
sti
inc
popf
jns
testb
mov
mov
inc
in
in
push
jmp
test
push
pushl
mov
cmp
int
ror
pop
adc
inc
adc
mov
mov
lahf
test
xor
mov
mov
lock
aas
imul
cli
lods
cmpsl
sub
mov
or
mov
mov
mov
loop
add
rorb
fwait
add
out
aad
divl
outsb
test
inc
shll
ss
push
vcomisd
mov
lods
addr16
or
pusha
push
out
mov
inc
xchg
sub
stos
jbe
xor
or
jg
cmp
push
dec
push
fdivrs
dec
out
insl
cmp
das
rol
push
lret
fistl
cmpsl
mov
mov
test
ljmp
and
inc
pop
xor
push
aam
jmp
in
cmp
outsl
dec
xor
or
enter
add
adc
imul
loopne
sub
cmpsl
or
xor
repnz
and
pop
enter
adc
scas
pop
loopne
fiadds
into
out
inc
add
mov
inc
push
push
arpl
fidivrs
inc
sbb
adc
add
pusha
jbe
into
pop
in
add
inc
dec
xchg
mov
push
sbb
mov
mov
cmp
mov
or
lcall
jne
inc
or
mov
xchg
jl
cmp
add
or
loop
sahf
adc
mov
xor
mov
test
mov
popa
mov
cli
test
jmp
mov
add
in
test
pop
adc
xor
cmp
negb
sbb
and
xor
negb
jno
mov
or
fiaddl
sbb
dec
lahf
adc
fld
lea
add
mov
popf
fadd
test
or
sub
ret
testl
cmp
adc
mov
cmpsb
test
btr
push
add
sahf
jnp
or
push
nop
cmpb
int3
pop
and
sub
or
lods
std
inc
and
cmp
add
pop
sbb
adc
and
cmp
mov
xchg
mov
lahf
cld
cs
lcall
nop
or
xchg
lcall
addl
mov
repnz
bound
neg
push
mov
ljmp
rol
js
or
xchg
mov
lret
inc
icebp
mov
mov
sub
and
add
fcoms
or
add
scas
or
insb
jle
inc
filds
mov
dec
fcmove
sub
mov
jle
dec
cmp
ret
and
fsubr
call
add
das
shrl
mov
push
xor
movsb
dec
xchg
add
gs
add
add
outsb
jne
test
adc
adc
pushf
mov
inc
mov
stos
jl
xor
pop
std
ljmp
fs
es
loope
cld
push
dec
lahf
ljmp
lods
or
fyl2xp1
pop
std
and
pop
mov
stos
xorl
jl
jmp
or
addl
xchg
fs
mov
add
and
rcrl
addr16
rcrb
stos
ljmp
icebp
pop
cwtl
xchg
adcl
loopne
lods
adc
dec
mov
call
clc
sub
mov
sbb
add
cs
out
nop
movl
lcall
cmp
stos
lods
imul
into
xor
and
enter
cld
push
fmuls
div
mov
adc
sti
mov
xor
pop
bound
jp
sbb
jne
iret
adc
jmp
das
pop
push
dec
inc
jb
inc
ficoml
mov
outsl
mov
lods
mov
ficoms
fwait
sbb
jge
std
pop
clc
mov
inc
sub
inc
ret
push
push
fistpll
dec
outsb
mov
mov
sub
cmp
inc
xchg
push
popl
mov
or
sub
jecxz
xchg
subb
dec
aam
add
decl
push
cmpsl
mov
lahf
stos
outsb
cmp
dec
pop
or
aas
mov
imul
loop
in
js
sub
lahf
push
xchg
sbb
adc
popf
lock
or
mov
jb
xchg
sbb
sbb
es
int
mov
mov
arpl
push
in
ret
push
popf
aad
xor
and
pop
inc
cmpsl
dec
cli
sbb
jge
ljmp
jecxz
sbb
xor
or
adc
in
ljmp
jp
in
ss
lods
dec
out
sub
hlt
and
ror
stos
xchg
rcrb
add
sbb
or
jle
sbb
push
xor
cwtl
adc
mulb
and
int
jbe
and
cmp
xor
lahf
add
fcomip
loope
pop
sub
jo
rolb
cwtl
sbb
cmc
mov
add
pop
enter
mov
lcall
or
pushf
loop
adc
testl
mov
cltd
pop
les
testl
or
in
xchg
das
adc
sub
loopne
add
sbb
or
push
lock
jge
insl
ret
lea
fsubs
or
dec
adc
jmp
jns
jge
sbb
mov
clc
dec
or
addr16
clc
or
or
xorb
jmp
mov
add
gs
push
ljmp
insl
sti
popf
jne
fisubs
lahf
std
and
out
xor
mov
jo
ja
insb
add
clc
bound
jno
es
xchg
lods
fdivrl
or
sub
jne
cmp
aaa
and
or
sti
add
rolb
or
adc
es
sahf
test
add
cmpsl
dec
pop
sbb
mov
cmp
cmp
adc
jnp
jp
icebp
mov
adc
shll
lret
js
cmpb
add
xorb
xor
adc
mov
fildl
arpl
push
loopne
sbb
inc
shrb
sbb
dec
inc
sub
mov
jmp
adc
into
xor
inc
xor
pop
icebp
jg
inc
cmpsb
inc
jl
mov
imul
fwait
call
sbb
cmp
sbb
add
lods
add
fdivrs
xor
sub
lock
cltd
jnp
jnp
push
or
push
jge
adc
mov
xchg
sbb
mov
loopne
inc
adc
outsl
loope
imull
mov
test
mov
stos
mov
inc
cmp
loop
cltd
and
pop
fdivs
sbb
sarl
pop
dec
sbb
lret
mov
add
sbb
pop
or
sahf
sub
sahf
or
xor
popf
pop
ret
adc
loopne
cmp
jae
mov
cmc
xlat
mov
in
inc
cld
scas
mov
clc
or
idivl
or
xchg
clc
fs
outsl
pushf
mov
les
insb
jmp
adc
xorb
xor
and
rol
or
sbb
les
jl
cmp
int3
lock
sub
cmpsb
orb
repnz
push
jo
jg
loope
test
testb
das
mov
pop
insl
mov
cwtl
negl
jle
mov
fcmovne
rolb
pop
adc
lcall
dec
js
and
xchg
loopne
incb
test
jb
dec
test
ficomps
sub
popl
sub
je
adc
sub
je
scas
and
pop
imul
cld
sub
or
dec
les
and
push
out
clc
sub
add
xor
and
and
jp
xorl
sbb
cmp
movsb
js
mov
mov
and
cwtl
loope
cmp
cld
movsb
ja
sbb
mov
push
pop
cmp
punpcklwd
addb
mov
adc
clc
jae
aad
jae
sarl
jns
xchg
mov
loop
adc
add
outsb
sbb
or
adc
bnd
idivl
mov
pop
fidivl
insb
xor
lock
jne
dec
loopne
adc
xor
sub
lock
and
daa
fnstenv
pop
ret
cmpsl
add
or
add
xor
adc
adc
or
xchg
or
cmp
pop
jnp
pop
pusha
sbb
test
es
bound
jae
fsubs
data16
loopne
sbb
push
loopne
dec
inc
sbb
sub
push
mov
sti
and
or
sbb
test
ja
pop
clc
ss
jp
add
leave
sub
dec
jne
call
mov
and
cmp
pop
inc
in
lock
es
sbb
fnstcw
xor
xor
push
or
mov
sub
mov
adc
fs
or
push
lock
and
test
add
adc
sbb
addl
clc
out
or
push
or
pop
sub
add
lret
aad
cmp
jge
dec
sub
adc
stos
push
fsubl
sbb
movsl
xlat
fdivrl
pop
inc
mov
xchg
icebp
dec
adc
cmpsl
cmpb
ret
cs
or
adc
push
push
das
imull
jae
pop
dec
jmp
push
mov
dec
pop
arpl
add
rcl
mov
or
mov
pop
divb
xor
mov
add
push
shr
adc
xchg
pop
sbb
or
sbbl
cmp
xor
push
mov
or
jmp
inc
pop
and
iret
adc
rorb
sti
jae
roll
rcll
push
int
dec
scas
les
call
aam
mov
xor
add
fsubrl
cld
sbb
or
or
int
xchg
outsl
push
mov
cmp
nop
xchg
adc
mov
les
divl
cmp
mov
and
jl
mov
sbb
add
jne
pop
ret
pop
rorb
mov
call
cmp
mov
test
daa
negl
dec
inc
mov
or
or
mov
in
in
xor
jno
push
jb
or
pop
out
xor
pop
sysenter
push
mov
popf
aas
sbb
in
push
popa
insb
inc
clc
aas
dec
cld
inc
andl
jne
insb
mov
adc
lcall
add
js
or
fwait
inc
or
pusha
add
cmp
cmp
in
xor
pop
les
pop
fwait
lods
lahf
pop
ljmp
xchg
movsb
out
push
cld
or
xchg
push
adc
inc
push
hlt
mov
mov
cwtl
sub
jno
loop
cmp
loop
loope
inc
js
fcmovb
inc
mov
add
cmp
fnstenv
jae
leave
adc
test
jne
shl
or
cmp
sub
outsb
pop
push
loope
sti
adc
loope
xchg
fwait
push
or
dec
es
xor
sbb
stos
testb
pop
ljmp
push
jge
divl
fwait
jp
jbe
jne
fidivrs
mov
sub
fmull
aam
mov
add
lock
ss
clc
sbb
jnp
fcomps
adc
or
clc
add
inc
lods
and
dec
adc
jno
xchg
jecxz
scas
mov
insl
je
orb
or
fsubrs
pop
test
es
xor
and
bnd
sbb
pop
sbb
and
arpl
fnstenv
jmp
imul
es
sub
cmp
into
scas
adc
push
lret
cmc
call
bound
je
push
aas
jmp
loop
and
pop
scas
clc
add
and
lock
repz
jbe
cmp
scas
stc
ljmp
jno
sbb
aaa
pushf
xor
dec
mov
les
cmp
mov
lea
lahf
rcr
fcmovb
adc
int3
inc
sub
je
fsubrs
or
pusha
mov
add
icebp
jp
fwait
rcll
pop
dec
jo
push
push
jmp
push
jl
scas
dec
mov
test
jne
pop
ja
repz
in
xchg
sbb
arpl
push
rclb
dec
daa
xor
ret
lcall
xor
inc
sbb
cwtl
pop
mov
insb
aad
out
clc
and
pop
pop
call
ret
mov
jmp
les
dec
pop
rorl
xchg
mov
ret
pop
dec
pusha
dec
sub
sbb
add
shrl
pop
gs
push
loopne
dec
and
mov
es
outsl
clc
mov
addb
cmp
cmp
sbb
push
inc
inc
out
xchg
jmp
sub
jne
in
or
cli
loope
out
icebp
loopne
fadds
adc
xor
lods
xchg
shrl
jb
pop
shll
flds
xlat
jl
ret
inc
stos
into
pusha
jo
or
lods
add
ja
outsb
lock
push
jae
or
pop
dec
mov
sbb
scas
pop
addl
xchg
mov
mov
das
adcb
or
pop
jmp
inc
loop
sub
inc
jno
pop
jle
cmp
inc
sub
std
cmp
lea
or
adc
xchg
ss
add
fistps
add
mov
mov
jmp
sbb
ss
sbb
movsl
add
mov
add
or
roll
hlt
lods
adc
jb
pop
ja
nop
lods
add
fildl
xchg
mov
leave
pop
ficoml
adc
and
jp
je
outsl
pop
push
js
out
xchg
mov
pushf
loope
push
xchg
out
pushf
cld
lret
add
adcl
push
addb
cld
sbb
scas
lock
sbb
sbb
shrb
das
and
sbb
orb
pop
sbb
adc
in
push
adc
push
inc
add
scas
mov
xchg
aaa
jnp
cmc
mov
mov
dec
enter
mov
test
dec
sub
testl
cmpsb
addr16
jbe
rorl
fisttpl
jne
shll
popf
jmp
idivl
das
adc
inc
push
les
dec
pop
push
cmp
xor
loopne
or
push
add
sub
push
pop
pop
xor
cmp
sti
sar
sbb
or
movsl
mov
in
scas
out
ja
subb
add
cmpsb
sahf
out
lcall
popa
push
lea
push
out
out
shrl
inc
lock
out
test
jbe
test
and
inc
pop
cld
pop
jg
or
fdivr
pusha
xor
or
lock
je
xor
aam
push
lds
dec
cwtl
push
xor
rcrl
mov
shrl
cmp
and
push
inc
jbe
vmread
jbe
push
mov
imul
or
adc
push
adc
repnz
mov
sub
adcb
in
aam
cmpsl
shll
repnz
clc
inc
outsb
push
add
sbb
xchg
stos
in
and
adc
sarl
inc
daa
pusha
rol
adc
lret
sbb
xchg
shlb
mov
cmp
xchg
enter
test
xchg
or
mov
cld
scas
jp
adc
ss
xor
inc
fwait
movl
and
les
mov
sbb
pop
add
mov
cmc
adc
insl
adcb
loopne
xor
sub
xor
and
adc
lret
jb
sub
pop
clc
testl
out
pop
jne
je
dec
add
mov
xor
ficompl
adc
cmp
adc
roll
or
icebp
cmpb
mov
fmull
adc
jae
jg
xchg
pop
out
xor
loopne
and
scas
xchg
push
sbb
pop
push
jns
jbe
clc
outsb
dec
sahf
sahf
sub
stc
cmp
pop
push
les
jo
xor
jmp
add
push
cmp
xlat
mov
mov
inc
or
xchg
push
adc
inc
add
sub
xor
jl
cmp
addr16
hlt
cmpsl
out
dec
jmp
dec
rcrl
lahf
xchg
mov
loopne
das
fldt
xchg
mov
push
pusha
ret
add
pushf
mov
cmp
addl
fisubrs
loope
lock
sbbl
push
nop
mov
daa
pop
negl
stos
and
add
dec
jno
aad
iret
jle
addl
ficoms
cmpsb
xor
or
or
mov
lahf
adc
add
add
adc
sbb
mov
dec
hlt
push
xchg
or
adc
lea
js
addl
cmc
or
dec
xor
push
sbb
xchg
jnp
data16
xchg
cmp
sbb
dec
jae
jo
pop
cmp
addb
ret
sub
mov
sub
data16
add
mov
or
xor
rolb
push
mov
int3
das
pop
out
cmp
sbb
sbb
mov
adc
int3
repnz
push
xchg
cmp
sbb
jnp
ret
mov
or
adc
decl
or
and
aas
jb
add
mov
cs
or
push
mov
jg,pn
into
ficompl
adc
cli
push
lret
push
xchg
sbb
pop
ret
std
mov
cmp
jmp
add
std
bnd
imul
cmp
aam
xor
xchg
mov
and
lock
imul
scas
sbbb
cmp
add
xlat
add
or
clc
pop
xchg
fisttpl
adc
aad
sbb
sbb
ds
or
sub
in
repz
mov
adcb
xchg
or
daa
add
mov
fmul
clc
insb
push
or
ljmp
or
mov
jp
add
ds
cs
push
cltd
add
and
stos
push
ret
and
and
mov
and
xlat
xor
iret
cmc
mov
inc
mov
lds
jnp
imul
ja
test
pop
and
mov
jmp
sub
ja
lahf
adc
add
jge
jb
mov
inc
lock
mov
lahf
inc
stc
enter
jl
mov
inc
cmp
mov
xchg
adc
add
cltd
outsb
dec
loope
movzwl
flds
dec
shl
adc
fnstcw
ret
sti
mov
add
xor
or
insl
xor
repnz
filds
aaa
and
cmp
ja
pop
jne
mov
push
scas
cmp
out
movb
shll
arpl
out
mov
add
and
jo
aam
push
push
jne
xchg
lock
push
popf
sbb
xlat
cmp
movsb
and
push
jae
mov
lret
dec
sub
sbb
inc
push
das
stc
adc
push
outsb
inc
jno
sbb
test
inc
test
mov
sbbl
sahf
cmpl
mov
fiaddl
fsubrl
enter
cld
inc
sbb
in
daa
out
sbb
and
xor
adc
aam
pop
je
mov
jmp
add
cmp
js
dec
mov
nop
daa
lock
dec
pop
push
stos
jbe
or
and
dec
xchg
les
test
dec
cmp
mov
les
jns
inc
nop
fs
clc
movsb
js
pop
rorl
inc
sbb
push
negl
rcr
cmp
and
sub
mov
shrb
adc
sub
sub
mov
pop
test
jb
xor
add
clc
sahf
sahf
adcb
jecxz
clc
add
inc
fwait
cmp
jb
arpl
push
inc
clc
mov
ret
xchg
sub
paddw
enter
and
sbb
data16
jmp
arpl
les
push
daa
and
rolb
mov
ljmp
or
sub
jo
imulb
dec
xchg
stos
test
add
loopne
lcall
add
cmp
popf
ffree
and
dec
out
or
sbb
int
aaa
adc
insl
or
adc
sbb
or
pop
xlat
clc
out
popf
dec
into
pop
inc
adc
sbb
test
out
pop
mov
and
rcr
adc
icebp
clc
xor
int
clc
add
mov
cli
test
xchg
cld
les
add
or
into
or
add
push
cwtl
fisubs
adcb
mov
in
fucomip
and
dec
xchg
mov
scas
das
loope
icebp
jle
push
or
in
loopne
lock
mov
or
mov
scas
cmpsb
pop
pop
adc
mov
xchg
or
sub
pop
xlat
inc
inc
or
lahf
dec
call
subb
push
add
push
rcrl
xor
and
add
or
jmp
inc
pop
loope
in
loopne
hlt
add
sbb
movsl
test
sarb
hlt
setl
cld
sbb
add
xor
shlb
fidivs
shrb
test
push
cli
stos
nop
cmp
and
pop
sbb
in
imul
fistpll
xchg
xchg
or
mov
lock
sbb
inc
hlt
insl
or
js
rolb
mov
jb
es
insb
les
sbb
test
mov
addr16
adc
scas
cmp
data16
arpl
jb
enter
jp
add
lock
add
add
fnstcw
pop
mov
lods
mov
shrl
hlt
cwtl
and
imul
pusha
mov
icebp
push
lahf
and
sbb
pop
mov
add
add
aaa
xchg
and
dec
inc
jae
sbb
push
cmc
mov
mov
dec
and
xchg
inc
add
pop
notl
call
orb
idivl
ja
mov
inc
or
jo
jne
adc
or
fnstenv
cld
shr
push
xchg
cmp
adc
or
outsl
jmp
cmp
inc
je
pop
jne
insl
sub
or
dec
cmc
and
mov
push
cmp
cmp
dec
jae
les
cmpl
or
push
and
xchg
jecxz
lock
fildll
cmc
push
push
cmc
into
aas
outsl
add
fbld
xor
in
mov
mov
outsl
cwtl
test
ret
xor
icebp
cmovae
iret
mov
or
jo
push
mov
jg
push
test
sbb
pushaw
mov
je
scas
inc
loopne
xchg
jmp
cli
and
mov
xchg
adc
andb
bound
mov
daa
inc
mov
mov
ret
pop
aam
and
aas
or
dec
arpl
xchg
negl
sbbl
sbb
mov
pop
shlb
pushf
mov
mov
mov
jne
rcrl
inc
mov
popa
adc
aad
push
pushf
jno
fwait
sbb
cmp
in
inc
jle
lea
inc
dec
ret
and
dec
mov
push
sbb
pop
adc
mov
push
xor
dec
incb
add
adc
and
push
xor
mov
jb
mov
cmp
mov
nop
or
dec
or
jno
sbb
mov
outsb
mov
jmp
add
add
loope
insl
add
xor
and
in
sahf
xor
sub
pop
jg
or
push
addr16
lods
adc
je
jl
push
sub
cwtl
adc
es
add
mov
push
jmp
dec
add
xorb
fiadds
icebp
ja
pop
push
cmp
ss
xor
add
adc
push
inc
xor
lahf
shll
mov
sar
xor
sbb
or
repz
xchg
mov
or
test
ja
add
pop
xor
ljmp
addl
jp
shl
loop
nop
adc
pop
cld
dec
xorb
cmpsb
cmp
pop
mov
adc
inc
jnp
push
mov
inc
add
xor
jne
dec
or
xor
xor
cmp
xor
clc
icebp
int3
or
xor
add
ret
jnp
shr
jo
lea
stc
out
nop
pusha
jae
cwtl
xchg
pop
orl
fs
lret
mov
sub
sbb
adc
add
add
sbb
lret
call
frstor
mulb
mov
ss
push
add
fisubrs
pop
sbb
mov
adc
push
mov
add
ljmp
mov
hlt
jo
out
dec
ret
popf
es
mov
dec
sub
jmp
lret
add
xchg
add
cmp
inc
lods
or
jno
add
ret
mov
adc
scas
lods
add
out
sub
adc
add
and
iret
add
mov
or
pop
xor
decb
incl
dec
sbb
add
inc
dec
stc
jp
addl
jmp
rorb
fisttps
inc
fdivrs
add
movsl
mov
jmp
inc
mov
sbb
inc
xor
adc
sahf
incl
idivl
in
jle
test
sub
add
push
jb
call
inc
imul
aaa
roll
mov
jbe
inc
bnd
in
test
fistpl
and
cmpsb
sbb
enter
jns
pop
pop
add
call
jecxz
pop
out
add
lods
fildl
fs
cmp
push
add
xor
decl
aaa
filds
xchg
lret
scas
add
dec
aam
cmp
incl
adc
add
loopne
add
icebp
add
sidtl
or
xor
mov
scas
xchg
in
cli
adc
ljmp
add
push
xchg
add
jno
xor
mov
cmp
and
ljmp
notb
add
sub
lods
pop
inc
mov
popf
add
pop
mov
dec
xor
xchg
push
fcomps
mov
fstl
call
in
add
adc
push
dec
scas
rolb
mov
mov
enter
decb
jmp
lahf
cli
test
lret
sub
inc
mov
push
or
call
add
pop
add
mov
lock
cmp
push
repnz
mov
jo
jae
fwait
and
andb
pop
shl
pop
xor
add
adc
xchg
mov
and
xlat
test
or
sti
mov
and
inc
sub
mov
xor
or
daa
loopne
aas
add
rorb
out
pop
inc
fwait
cmp
je
aam
mov
insb
test
mov
cld
xchg
pop
sub
cli
das
in
ret
sahf
add
int3
rcrb
imul
adcb
add
jnp
sbb
mov
sbb
js
jl
ds
lock
and
aad
shrb
pop
or
jge
mov
shrb
sub
das
xchg
pop
sub
sub
adc
xchg
loopne
fnsave
movsb
clc
iret
mov
push
lea
push
aam
roll
add
adc
dec
nop
sub
jge
pushf
inc
aam
dec
push
pushf
jp
cmp
cwtl
pop
and
or
dec
jne
jl
cld
push
adc
loope
es
lret
add
mov
adc
inc
xchg
test
mov
test
pop
es
pop
pop
leave
nop
les
sti
inc
sbb
cli
add
out
loopne
cmc
shlb
mov
inc
sbb
call
leave
ret
in
and
jb
dec
loop
push
add
incl
jno
fbld
out
aad
stos
cmp
cli
add
stos
in
cmp
js
jle
flds
or
movsl
call
cmp
orl
les
sahf
xor
sar
jg
pop
push
dec
mov
addb
inc
xchg
out
add
dec
sub
fidivl
jmp
push
imul
rorb
add
fcompl
inc
or
pop
or
and
push
sbb
das
pop
jbe
add
sbb
push
and
dec
mov
scas
push
and
pop
cmp
mov
cmp
jg
sti
jmp
das
xchg
add
xor
call
jle
push
xor
je
mov
add
push
hlt
data16
sarl
test
addr16
pop
cli
in
mov
fldenv
xorb
cwtl
add
sub
adc
outsb
inc
das
add
lahf
jmp
cmp
ret
add
pop
ljmp
cmp
sbb
dec
icebp
add
and
sti
out
and
or
outsb
jns
imul
aam
jns
cmc
pusha
mov
jno
inc
leave
lea
mov
movl
mov
daa
add
dec
in
int
sub
adc
sub
pop
dec
adc
sub
add
and
outsl
add
aaa
hlt
cs
aaa
imul
aad
cmp
popl
in
inc
mov
sub
xchg
or
xchg
xor
and
and
jbe
and
insb
decb
sub
icebp
pop
add
cli
dec
pop
scas
or
add
push
scas
xor
or
test
ret
mov
sbb
push
xchg
push
or
mov
lods
mov
incl
cmc
add
dec
cmp
pop
mov
mov
xor
lahf
mov
adc
dec
pop
push
insb
pop
mov
lds
clc
fisttps
dec
int3
sbb
stc
sbb
ljmp
test
sbb
fisubrs
sbb
in
inc
out
notl
push
scas
jge
dec
jp
test
dec
loopne
add
adc
stc
fs
jmp
cmp
mov
mov
push
fcom
mov
inc
pop
adc
mov
add
smsw
adc
lcall
scas
add
divl
stos
pusha
adc
lea
and
or
scas
or
add
in
and
sti
in
int3
push
rcrb
sub
add
ljmp
or
jae
mov
mov
insb
ljmp
pcmpeqw
adc
push
adc
adc
xlat
insl
mov
mov
das
mov
clc
sbb
sbb
or
cmp
bound
fstpt
aad
cmp
push
mov
sarb
mov
add
add
jg
mov
mov
frstor
adc
or
adc
add
add
mov
jmp
lea
adc
inc
out
dec
jo
push
add
mov
pop
cwtl
or
lods
and
je
push
mov
cltd
lcall
roll
xor
lahf
lds
insl
shrl
and
pop
sahf
mov
clc
dec
mov
fidivs
aad
and
mov
inc
aas
fdivs
or
fsubrl
bound
inc
push
adc
mov
shl
pop
mov
sub
inc
fwait
xor
dec
cmp
sbb
insb
dec
inc
adc
push
push
jg
pop
cmp
divb
cwtl
fmull
subps
mov
mov
insb
cld
mov
push
push
push
iret
sbb
pusha
pop
ret
in
clc
gs
and
add
add
dec
cmpsl
adc
aam
and
incl
addr16
addb
push
cmpsb
mov
insb
test
jne
inc
imul
add
rolb
cld
mov
push
outsb
call
and
sbb
test
xor
lock
ljmp
mov
inc
mov
addr16
xor
mov
jg
aam
sti
add
mov
and
aaa
lock
adc
jmp
xorl
int
outsl
add
sub
sbb
lret
outsl
push
mov
add
add
mov
rcrb
test
icebp
or
nop
pop
ja
testl
jg
mov
cs
or
jnp
fstps
fildl
mov
aad
cld
inc
pop
std
push
aad
fiaddl
sub
rol
mov
pop
sub
sbb
jo
push
sub
lods
pop
cs
outsb
lock
sahf
loopne
mov
pop
lods
xchg
xchg
std
pusha
sub
int
jecxz
incl
push
imul
jo
dec
jne
sub
dec
in
mov
xchg
jp
dec
lods
insl
push
das
push
stos
repz
adc
or
stc
jl
dec
lock
mov
pop
mov
shrl
sbb
mov
pop
das
add
dec
mov
add
into
fs
cwtl
push
test
ss
out
add
fdivl
inc
fcmovnu
outsl
mov
dec
add
jmp
test
repnz
mov
xor
aaa
iret
jnp
loop
xor
xchg
mov
ds
push
push
imul
insl
mov
pop
and
rolb
movsl
lcall
out
mov
rorl
jle
xchg
sti
in
adc
sbb
dec
mov
out
out
and
in
in
jo
push
cmc
adc
push
sti
ja
gs
sbb
loop
mov
lret
add
mov
pop
mov
mov
and
negl
push
data16
jg
inc
loope
mov
in
scas
mov
mov
ljmp
inc
add
adc
pop
add
bound
lods
insb
loop
xchg
pop
jle
aad
adc
ja
sti
adc
pop
mov
addb
scas
push
clc
mov
repz
addb
xor
mov
cld
push
test
out
push
cmp
test
push
daa
inc
mov
add
xchg
push
pushf
decb
push
jo
jg
mov
pop
js
mov
push
stos
ret
pop
cmpsl
inc
ja
pop
xchg
addr16
pop
pop
andb
adc
adc
mov
mov
bound
pushf
pop
mov
fwait
test
ds
mov
cmp
add
insl
fsubrs
or
je
push
inc
lock
and
or
sarb
fldt
ss
int
imul
xor
jnp
mov
jg
add
int3
cmp
and
filds
jge
jp
sahf
clc
and
rol
inc
and
add
ret
and
out
test
gs
shll
icebp
sub
jno
cmp
xor
data16
cs
mov
jne
add
fbstp
or
daa
scas
pop
fbstp
mov
adc
cmpsl
nop
test
sbb
or
xchg
mov
sub
dec
inc
mov
and
sbb
and
push
psubd
jbe
dec
sbb
mov
fisttpll
mov
push
sti
idivl
into
sub
jne
addr16
clc
add
ds
adc
and
loope
jge
xchg
loope
dec
cli
jb
mov
mov
pushl
jp
rcrl
pop
inc
pop
icebp
cli
fdivp
sub
push
jle,pt
sub
insl
sub
and
sbb
pop
ljmp
or
imul
adc
add
lods
repz
mov
mov
sbb
cld
lock
mov
push
shlb
xorb
pop
pushf
mov
in
mov
stos
fadd
push
and
inc
pop
add
and
filds
std
mov
xor
and
stos
pop
jp
scas
add
mov
not
daa
sub
shrb
sbb
or
lret
cmp
das
sbb
call
or
mov
inc
aaa
dec
xchg
bound
xchg
mov
fidivrl
je
je
rcll
aam
jnp
sub
mov
push
push
stos
xor
insl
jmp
push
xchg
adc
inc
push
mov
mov
pop
pop
out
jg
sti
dec
lods
inc
daa
arpl
mov
push
push
push
push
clc
mov
pop
xor
cmp
iret
cmp
cwtl
adc
lods
in
fists
insl
pop
cwtl
mov
push
inc
xlat
pop
clc
mov
cwtl
cmp
movsb
cmp
push
loop
sub
pop
mov
lds
mov
ljmpw
push
xchg
es
fdivrl
mov
js
xchg
rclb
fldt
mov
xor
xor
mov
ljmp
jl
int3
lret
pushl
out
in
iret
add
lods
call
imul
push
mov
and
mov
fdivs
out
inc
lea
sbb
sahf
in
add
jb
or
xchg
or
std
repnz
mov
and
push
je
ss
and
idiv
std
idiv
ljmp
cmc
sbb
inc
adc
mov
je
int
loope
sbb
cs
jg
das
pusha
je
dec
mov
icebp
int3
bound
dec
push
mov
insl
arpl
out
mov
push
inc
stos
sbb
xchg
adc
cli
or
xchg
testl
adc
icebp
pop
cli
add
add
mov
scas
xor
sub
dec
fistpll
mov
add
xchg
push
and
ret
loop
sahf
adc
std
jmp
daa
cmc
add
adc
adcb
jb
jg
sti
mov
popa
xchg
popf
xorb
mov
out
pop
inc
icebp
jbe
adc
jecxz
icebp
jecxz
cltd
outsl
incl
cmpsl
sbb
imul
daa
ljmp
xchg
es
mov
xlat
out
shlb
mov
inc
push
add
lcall
movb
nop
sbb
or
ret
imul
push
test
insb
sbb
aas
sub
repnz
ja
mov
and
lods
and
push
mov
cmp
icebp
lcall
cli
jg
inc
xor
and
push
xor
lods
ja
cmp
mov
adc
stc
mov
icebp
jg
add
sub
mov
mov
stc
jle
icebp
mov
mov
dec
lret
dec
cmpsl
ja
clc
ljmp
sahf
in
mov
scas
pop
cmp
push
dec
or
jp
mov
rorb
es
jae
es
jp
or
mov
shl
cmp
aad
out
sahf
push
je
das
pop
push
das
les
dec
add
add
mov
cmp
xchg
fdivrl
mov
adc
mov
cmpsb
jg
xchg
pop
ja
fs
sub
push
dec
push
add
jp
cltd
outsl
dec
pushl
and
cmpb
negl
outsl
std
cs
xor
and
xor
lods
mov
and
push
sbb
lret
shl
fisttps
je
movsl
fadds
dec
cmpsb
xchg
repz
or
mov
cmp
jle
push
add
bound
int
mov
sub
pop
jecxz
loop
dec
fwait
jb
xchg
in
outsb
roll
push
imul
sub
inc
mov
lret
cmpsl
xor
cli
rclb
xchg
aam
xlat
adc
popf
jbe
pop
jl
inc
xchg
sbb
or
or
aaa
sbb
jne
mov
incl
lret
xor
imul
addb
shll
jle
lods
mov
inc
push
xchg
pop
dec
nop
add
pop
bound
sub
jae,pn
jns,pn
push
imul
mov
in
inc
pop
fdivs
mov
push
sti
mov
push
dec
xchg
inc
jl
dec
je
jo
in
fwait
push
ja
ffreep
dec
sub
mov
mov
push
or
ja
sbb
imul
pop
or
sbb
jl
nop
imul
icebp
push
repz
mov
shlb
aas
jbe
push
ficompl
fistpll
mov
push
jp
dec
add
sarb
pop
add
adc
mov
lahf
cmp
mov
mov
scas
push
test
repz
pop
jp
sbb
fnsave
mov
push
or
pop
add
inc
jge
ss
jne
daa
nop
mov
xlat
mov
mov
dec
int3
dec
fisttps
mov
rclb
mov
and
mov
mov
sub
jge
shl
push
imul
or
mov
repz
cmp
mov
cwtl
inc
xor
xor
cmc
mov
inc
arpl
mov
rorl
es
xor
out
mov
testb
pop
clc
pop
stc
ss
mov
lret
xchg
xlat
push
push
leave
cmpb
std
addr16
sbb
jg
stos
xchg
sbb
outsb
push
sub
int
mov
pop
scas
xor
ljmp
push
or
jecxz
pop
int3
add
fdivrl
pop
mov
icebp
push
sub
outsl
insb
push
clc
xor
jecxz
push
sub
add
jns
jl
jmp
mov
negb
xchg
rcll
pop
clc
test
cltd
into
cld
mov
nop
mov
or
cmc
mov
dec
adc
dec
inc
push
jg
in
cmp
adc
and
or
inc
lods
insb
mov
push
jecxz
aaa
mov
ds
orps
std
int3
lret
loop
aas
sub
mov
jmp
sbb
filds
xchg
outsl
icebp
mov
mov
mov
movsb
pop
cmp
adc
sbb
outsb
shll
inc
cmc
xor
mov
stos
xor
push
xchg
pop
popf
sahf
and
add
arpl
add
rcr
pop
bound
mov
sbb
fbstp
cmp
pop
roll
and
aas
xor
mov
pusha
push
out
addr16
or
call
xorl
ret
sub
dec
pushf
aas
dec
dec
add
mov
xchg
std
fadds
test
mov
pushf
dec
adc
sub
in
fisubrl
std
outsl
frstor
cmp
and
andb
negb
decb
or
pop
in
data16
jnp
xor
std
outsl
cld
jmp
aam
sbb
jg
mov
repnz
leave
mov
jmp
jne
sahf
jne
iret
add
or
xor
lods
inc
pushl
sbb
sti
loope
xchg
shl
xchg
and
ret
mov
pop
dec
sub
fcoms
pop
pop
inc
xchg
lea
sub
loopne
stc
pop
push
push
pop
cmpb
lods
fs
and
sub
mov
adcb
clc
pop
sbb
add
shll
rorb
orb
sub
testl
sub
pop
cli
adc
and
pusha
add
jmp
mov
in
sbb
xor
stos
popl
push
int
xchg
adc
mov
push
mov
add
pop
push
in
jne
sbb
in
and
stos
xor
test
adc
sbb
fnstenv
inc
std
fmuls
filds
or
or
mov
inc
jne
push
cmc
pop
inc
pushf
or
xchg
bound
scas
or
and
adc
xor
cld
jbe
ljmp
ror
in
enter
inc
add
test
hlt
cmp
and
and
nop
pusha
xchg
mov
and
jg
pop
out
fbstp
xor
add
sub
mov
repnz
mov
fdivrl
xor
fisttpll
das
aad
push
adc
femms
je
lret
push
xor
pop
dec
mov
mov
pop
push
or
add
mov
insl
jl
add
push
rol
mov
fsubl
push
jp,pn
fsubp
sbb
and
in
je
or
or
push
add
cmc
vcompressps
loopne
stos
jecxz
inc
mov
sbb
cmp
mov
push
rcr
test
cmp
pop
jo
inc
nop
add
in
hlt
aas
bound
pop
lods
inc
push
jno
and
lock
out
push
mov
in
in
inc
mov
addr16
cmp
lock
mov
sub
roll
xchg
icebp
sbbb
loop
es
lret
inc
xchg
add
sbb
rorl
or
cld
aam
leave
roll
push
add
xchg
fildl
add
out
repnz
mov
test
push
add
jmp
daa
xchg
sbb
adc
out
inc
sbb
fdiv
nop
js
or
pushf
mov
test
shll
mov
dec
xchg
jp
repz
jmp
sbb
int
or
or
adc
les
je
mov
les
sbb
aam
rcrb
add
inc
mov
cmpb
divl
sbb
mov
in
or
jb
ss
sbb
jmp
push
adc
fsubrl
lods
ljmp
or
outsl
dec
inc
xchg
dec
pushf
cld
inc
jg
sbb
fistps
xchg
push
xor
pop
addr16
movsl
or
mov
dec
xchg
imul
mov
std
mov
les
mov
mov
lods
pop
pop
fisttpll
hlt
add
sbb
pusha
mov
iret
sub
mov
pop
cli
adc
adc
sti
sbb
xchg
jle
faddp
dec
sub
mov
lds
sub
pop
std
mov
fsts
jp
mov
push
popf
stos
std
sahf
cli
ljmp
fdivl
or
pop
jg
push
mov
mov
cld
mov
lock
clc
push
mov
outsl
jle
lahf
inc
lock
out
or
and
jae
out
pop
pop
loop
and
lahf
cltd
push
add
dec
call
arpl
sti
xchg
pusha
pop
filds
pop
jne
es
xchg
in
push
adc
sbb
cmpsb
add
pop
cld
pop
faddp
xor
mov
xlat
xlat
test
sub
push
mov
gs
mov
sbb
idivl
inc
out
jg
dec
arpl
or
enter
and
mov
in
rcrl
jge
jl
shrl
popa
lahf
xor
movsl
and
hlt
push
inc
lods
push
decb
xor
inc
adcl
call
lock
add
mov
out
sub
sub
loopne
or
pop
jbe
fildl
test
ja
dec
push
jnp
mov
mov
sbb
insl
jecxz
sbb
cmp
je
push
orl
jecxz
loopne
sub
jo
mov
inc
xor
jle
bound
cmp
add
call
push
add
sub
jne
push
test
add
sub
adc
pusha
mov
rol
sbb
cmp
adc
das
push
loopne
pop
push
mov
dec
aam
mov
sub
popf
add
adc
cmpsl
sbb
aad
mov
sbb
test
inc
les
rcll
repz
orb
xchg
fnsave
and
mov
shr
orb
pop
dec
and
bound
pop
ret
xchg
xor
xchg
add
cmp
jp
shl
xchg
sbb
mov
in
jle
dec
cwtl
inc
sbb
sti
or
daa
fists
jns
pop
out
sbb
mov
or
loope
dec
cmpsl
mov
mov
adcb
or
add
call
xor
fucomp
aas
test
cmp
fidivs
push
roll
fbstp
addl
lcall
cmp
cmp
pop
cmp
mov
ret
mov
cmp
push
dec
pop
test
add
add
xor
cmp
add
lcall
aaa
mov
stos
decl
inc
loopne
into
aaa
push
fdivrs
mov
stc
std
jmp
pop
jbe
jmp
data16
mov
fstps
lods
ljmp
mov
loope
dec
mov
int3
in
icebp
cmp
mov
or
in
jg
call
ljmp
sub
dec
std
inc
mov
adc
sbb
out
lea
add
inc
or
pop
mov
cmc
call
push
xor
adc
or
les
shll
add
inc
out
adc
arpl
shll
fcomps
adc
cs
test
mov
xlat
push
adc
lcall
adc
mov
fnstenv
scas
loope
into
dec
fisttps
mov
incl
ss
mov
lock
fistps
mov
jne
lods
and
cltd
cmp
and
subl
movsl
stc
sub
mov
inc
stos
push
clc
or
sub
sub
inc
shlb
div
push
loope
mov
scas
push
pop
out
jae
jp
mov
xor
mov
leave
push
xchg
adc
dec
iret
rcll
pop
mov
xchg
cli
incl
mov
sti
cs
daa
repz
or
mov
adc
add
push
aaa
cltd
popf
and
push
add
aaa
call
cmp
iret
jnp
insl
sbb
outsl
lock
int3
push
mov
and
incb
adc
fistpll
and
rcr
es
aas
outsl
mov
pop
incl
adcb
inc
push
pop
cmp
ljmp
icebp
outsl
adc
or
decl
xor
and
pushl
pop
cmp
xorb
pop
add
cmp
imul
dec
mov
xchg
test
jg
xchg
xchg
out
adc
cmpb
outsl
aad
arpl
xchg
jns
arpl
adc
cs
ja
mov
push
and
sahf
lods
and
add
ljmp
or
mov
pop
sbb
mov
scas
jns
or
push
inc
mov
push
shll
lret
adc
or
push
sbb
rolb
push
mov
push
xchg
rorl
ss
sbb
pop
mov
daa
subb
addr16
mov
and
aaa
shr
ss
adc
loop
mov
add
adc
hlt
pop
or
testl
adc
jp
sub
sub
jno
add
insl
cmp
ror
mov
sub
dec
pop
dec
jl
mov
negl
test
jl
dec
sbb
stc
inc
and
mov
fcoml
jae
pusha
push
scas
aam
mov
jo
cmp
mov
dec
adc
add
cmp
fisubrs
ret
sbb
mov
sbb
add
add
sub
pop
jne
sti
cmc
adc
sub
sub
dec
pop
not
pop
mov
xchg
fwait
inc
hlt
or
adc
int
aam
test
push
clc
or
mulb
adc
or
push
shll
cwtl
xchg
addl
cmp
pop
inc
fildl
adc
loop
mov
test
mov
pop
std
test
inc
xor
mov
push
dec
push
int3
sub
inc
mov
sub
fldcw
adc
and
ljmp
cmp
inc
cmp
fdivl
arpl
add
in
ss
das
mov
inc
add
jne
jle
aaa
out
adc
mov
xor
inc
icebp
push
lds
push
stos
mov
dec
push
in
push
xchg
in
lock
pop
stos
ret
pop
adc
add
and
cmc
adc
adc
add
sub
test
mov
inc
fwait
xor
imul
dec
cmp
mov
push
movsl
push
mov
cltd
or
andb
incb
lret
call
dec
sahf
stos
and
push
sub
push
push
cltd
jge
push
nop
mov
ficoml
lcall
notl
or
ret
rol
and
repz
cmp
mov
testl
pop
mov
sbb
loopne
adc
sub
sub
adc
cmp
jns
and
push
or
hlt
stc
aas
mov
cli
outsb
hlt
pop
mov
insl
sub
mov
cmc
adc
arpl
or
movsl
mov
xor
insb
jecxz
jecxz
sbb
sbb
cs
fnstsw
adcb
std
lret
add
out
adc
sar
inc
das
adc
inc
mov
lahf
push
pop
fstpl
push
mov
or
xchg
aas
cld
inc
xor
push
mov
adc
sbb
dec
mov
cltd
jecxz
pop
mov
mov
pop
scas
aaa
jle
and
xor
sub
cltd
push
les
fstp
mov
xor
and
mov
scas
std
pop
jnp
ficoml
push
in
xchg
and
int3
and
outsl
lock
push
jne
decb
mov
and
jbe
mov
mov
test
jne
pop
out
cli
outsb
rorb
xchg
aas
mov
jecxz
in
push
ljmp
ss
xchg
into
mov
out
mov
repnz
call
jg
cs
add
cltd
push
sbb
sub
mov
aam
aad
das
sub
sbb
push
mov
mov
inc
mov
pop
jl
aas
mov
sub
mov
jne
in
imul
js
xchg
mov
jecxz
add
xchg
ljmp
jo
adc
jmp
daa
pop
cwtl
shrl
ljmp
clc
out
lret
stc
outsb
or
pop
xchg
pop
stos
dec
mov
lcall
or
outsl
lods
mov
add
imul
mov
or
or
and
mov
divl
dec
cld
popf
in
jl
jmp
add
xor
xchg
pop
pop
xchg
xchg
aad
xor
ret
push
call
cmpsl
inc
pushf
inc
add
mov
pop
clc
out
mov
pop
sub
rcl
shrb
mov
xchg
dec
pop
hlt
in
inc
mov
sub
sbb
loope
push
xor
test
push
out
and
imul
movsl
mov
mov
ficomps
nop
stc
xchg
and
out
mov
jle
cmpsb
fstps
stc
clc
jg
xchg
adc
jle
fbld
movsl
imul
cld
push
inc
and
test
or
test
add
or
std
sub
mov
xchg
or
mov
push
add
mov
iret
mov
in
xchg
and
cmp
lds
push
in
and
mov
and
add
mov
mov
dec
fsubs
lahf
call
stos
pcmpgtb
dec
add
ret
mov
and
scas
push
cmp
or
mov
push
fstpl
xchg
xor
and
lcall
je
or
mov
cs
cmp
add
mov
or
pop
cmpsl
test
jo
push
insb
mov
mov
or
adcl
push
mov
lock
sub
inc
jp
pop
and
sbb
and
shl
xchg
das
fnstsw
loope
nop
dec
mov
sub
push
sbb
push
or
notb
and
je
xor
rol
add
pushl
jp
sub
jne
or
test
lea
add
mov
jg
adc
mul
cmovno
in
fwait
daa
lret
mov
sbb
mov
loop
push
jecxz
outsl
ss
fdivl
xchg
jle
outsl
aaa
outsb
mov
fcmovnb
shlb
in
aad
lea
adc
add
sbb
inc
fs
decl
fs
dec
dec
or
push
pop
cli
ljmp
xchg
pop
stos
test
cwtl
xor
lea
mov
push
xchg
mov
add
call
ljmp
sbb
mov
adc
ficompl
nop
nop
xor
in
pop
gs
cmc
and
push
insb
push
test
repnz
outsb
not
xor
addr16
adc
add
int
lret
adc
push
or
dec
leave
fstp
pop
hlt
push
push
sti
xor
adc
lahf
sbb
inc
lea
sub
or
pop
and
inc
add
sbb
and
les
outsb
cmpsl
adc
and
stc
aaa
mov
and
js
sbb
push
shl
mov
mov
xchg
imull
inc
xchg
push
and
imul
sbb
dec
rep
pop
popa
roll
sbb
pop
sub
frstor
cmp
mov
insl
jae
lret
hlt
lcall
fiaddl
lret
int3
push
test
fst
syscall
imul
jb
dec
jno
adc
push
loopne
test
int3
loop
mov
lahf
daa
dec
xorb
jo
test
pusha
inc
pop
sub
movsl
ljmp
and
out
repnz
pop
sub
adc
ss
hlt
fistps
dec
dec
sub
out
das
std
int
add
adc
in
pop
outsb
in
jbe
sub
test
out
or
enter
divb
add
sub
adc
rol
xor
lods
sbb
mov
sbb
decl
rorl
orb
jg
cmp
sbb
incl
ja
dec
inc
mov
int3
cmp
jle
add
jp
mov
dec
inc
cs
dec
call
and
pushf
js
adc
fldl
insb
push
cmpsl
stos
or
cmp
push
inc
pop
movsb
call
int
les
or
shlb
adc
jl
add
inc
aas
add
pop
add
in
mov
inc
addr16
ds
loop
xor
in
cmp
out
mov
or
add
inc
mov
push
and
xchg
sub
lea
in
dec
call
lods
in
dec
test
fwait
inc
ljmp
ljmp
and
fildll
jmp
rep
lds
add
dec
inc
jne
mov
and
decl
push
jb,pn
sbb
sar
dec
aad
add
or
sub
inc
movsl
pop
xor
and
mov
push
push
or
loope
cmc
fnstcw
vpsubusb
mov
mov
jnp
cs
mov
mov
faddl
stc
pop
sbb
add
cwtl
in
adc
xchg
adc
out
adc
add
pusha
inc
dec
inc
fdivrs
fsubrl
aas
push
hlt
js
fsubrl
push
daa
or
into
pop
mov
sub
hlt
sbb
into
ljmp
pop
popa
jmp
mov
dec
push
ja
divl
dec
pushf
pusha
mov
sbb
or
testl
stc
outsb
mov
sbb
fsubp
and
inc
nop
cmp
mov
imulb
or
mov
addl
aad
dec
mov
or
fcomps
je
push
dec
xor
cmc
adc
push
adc
int3
notl
inc
xrelease
xor
adc
mov
fistps
push
pop
mov
sub
pusha
arpl
ud0
daa
mov
into
leave
jp
enter
movsl
das
push
and
mov
jns
loopne
fcom
fiadds
mov
pop
sub
adc
js
jne
sub
add
jo
mov
cmovs
and
add
pop
shll
stc
adc
and
fimull
movsl
jmp
sti
cmpsl
cmpsb
cmpl
inc
out
pushf
popf
in
lods
push
fistpl
jne
ficompl
adc
inc
stos
xor
aad
sbb
adc
cmpsb
ds
enter
adc
flds
mov
je
mov
outsl
loopne
and
mov
pop
add
jge
inc
push
cwtl
out
or
xlat
and
add
push
stos
sub
aad
jbe
push
insl
pop
jae
lods
fdivrl
and
rcrl
fildl
or
and
jno
push
mov
jle
jne
sbb
pop
cli
sahf
pop
add
add
in
mov
or
mov
push
loope
mov
loopne
jp
push
xchg
test
push
int
imul
das
push
or
out
dec
iret
push
and
lods
test
inc
mov
adc
xor
add
push
cmp
testb
or
jmp
addb
sub
and
ret
cmpb
aam
push
pop
adc
mov
sbbl
cmp
or
mov
sub
or
push
cld
leave
jno
add
xchg
push
loopne
or
or
push
sbb
data16
jo
notl
mov
rorb
sahf
les
test
push
scas
insb
int3
mov
iret
pop
sub
xor
mov
mov
cmp
adc
or
jge
inc
cmp
ja
adc
sub
cmp
xlat
push
or
bound
icebp
jl
loope
shll
add
xchg
nop
imull
xor
fmull
push
orb
cli
dec
adc
push
nop
fldenv
insl
repnz
cld
ret
pop
lods
cmp
aaa
roll
lods
jp
xchg
push
loopne
or
inc
jnp
loopne
popf
inc
add
stos
adc
cmpsl
pop
pop
xchg
mov
clc
xorb
enter
shll
jbe
and
negb
mov
mov
adc
sub
xor
adc
loopne
jp
add
inc
repz
add
xor
out
xor
lcall
ss
rcr
clc
inc
loope
shrb
adc
or
mov
push
push
les
inc
lea
xchg
imul
scas
add
add
jl
add
les
inc
pop
loope
stos
loopne
les
orb
fisubrs
sti
xor
sbb
add
jmp
loop
push
ljmp
jnp
mov
loop
out
aam
jno
xor
mov
add
xor
dec
add
push
aaa
jle
dec
fnstsw
int3
inc
mov
daa
add
stc
loope
and
xor
adc
in
cmp
mov
add
mov
int3
add
sbb
or
push
adc
dec
mov
cmpb
pusha
adc
or
cmp
and
push
sbb
and
mov
xor
inc
cld
lea
cltd
push
jmp
or
aam
lds
dec
sub
pop
push
ljmp
dec
scas
fnstsw
lds
inc
insl
mov
fistpll
imul
mov
xor
sbb
icebp
repz
xchg
das
jne
outsl
je
fwait
scas
jno
sbb
mov
add
sub
inc
mov
fwait
dec
and
sub
lret
lock
imulb
jmp
dec
insl
into
xchg
insb
popa
mov
repnz
mov
jbe
frstor
cmp
cmc
jg
mov
pop
or
icebp
test
leave
les
mov
jecxz
push
mov
test
and
fisttps
jle
sbb
aam
sub
jnp
mov
adc
mov
pop
add
sbb
sar
out
inc
filds
imul
sbb
mov
push
pop
lret
test
adc
shrb
lods
push
or
roll
rcll
push
fistps
fldcw
sbb
mov
clc
or
pop
jnp
aad
mov
push
dec
lds
lret
mov
jns
in
inc
cli
into
add
mov
mov
std
fdivrp
outsl
lcall
jnp
mov
aad
clc
es
jecxz
jne
sbbb
adc
ds
add
stos
dec
push
or
jb
inc
mov
push
mov
negb
mov
jno
inc
fs
cmp
add
push
decl
decl
sbb
jno
pop
mov
xor
das
cmc
jb
dec
mov
adc
sub
push
jno
jbe
mov
mov
and
in
jmp
fistpll
and
fstps
inc
ret
imul
iret
and
test
push
sub
inc
std
ret
sbb
mov
jp
sbb
or
fisttps
filds
inc
out
call
push
or
push
mov
enter
incl
movsb
pusha
repnz
and
jno
lret
add
mov
add
clc
sbb
mov
sbb
lahf
jae
inc
ja
mov
and
mov
fsubrp
add
xor
std
pop
sbbb
shrb
xor
ljmp
add
in
or
fisttps
fs
add
outsl
mov
ds
lods
xchg
std
xchg
or
pop
sbb
mov
pop
js
lds
or
sub
inc
push
mov
jae
pop
and
iret
and
and
push
scas
sbb
sti
scas
mov
js
or
test
inc
or
add
fnstcw
cmp
pop
xchg
call
mov
push
pop
mov
lcall
jo
dec
fldt
ss
mov
out
jne
fistl
xor
pop
and
ds
pop
dec
fcoml
test
adc
scas
imull
mov
push
push
pop
ja
pop
xchg
pop
mov
mov
js
subl
testb
jns
mov
cld
jmp
cwtl
sub
push
enter
sbb
bound
ret
cmp
aaa
int
sbb
and
mov
mov
mov
fcoms
sti
inc
nop
pop
adcb
mov
paddsb
dec
sub
adc
pop
mov
decl
push
out
sbb
push
in
popa
sbb
adc
gs
adc
outsl
mov
pop
adc
lods
jg
jp
cltd
mov
adc
fisubs
aam
fmuls
xor
fdivs
pop
add
sub
fsub
in
push
out
fwait
cmp
add
mov
aad
push
cmpl
loopne
sub
adc
subl
and
fcomps
ds
adc
push
xor
pop
jo
mov
pop
fmull
ja
mov
pop
and
aaa
xchg
or
inc
fisttpl
xor
je
sub
aam
call
dec
loop
mov
das
lea
and
and
xchg
lcall
inc
ja
add
mull
mov
lock
fs
insl
testb
movsl
xchg
pop
xlat
mov
ljmp
sbb
sarl
flds
ljmpw
or
popa
loop
cmp
sub
cmp
inc
sbb
inc
addr16
pusha
pop
subl
mov
inc
popa
jmp
push
aas
push
dec
shr
ret
mov
inc
or
nop
adc
mov
testl
hlt
icebp
imul
xchg
mov
icebp
sbb
cld
dec
sbb
mov
movsb
into
or
cld
loope
popa
rcl
inc
adc
rcrl
mov
inc
xor
pusha
push
scas
add
pop
xor
adc
test
shll
subb
sub
push
sbb
inc
test
push
cwtl
xchg
jb
sbb
push
adc
es
xor
add
mov
bound
mov
push
cmp
add
mov
inc
push
je
mov
pop
insb
test
fcom
aaa
loope
add
xchg
fstl
sbb
pop
jle
or
sub
idivb
das
adc
push
psllq
add
int3
or
inc
push
mov
xchg
jae
icebp
add
pop
mov
stos
dec
push
out
imul
clc
push
insb
cld
and
mov
arpl
jo
jecxz
jle
lock
mov
mov
cltd
inc
mov
add
or
lret
mov
ss
cwtl
cs
or
pop
rolb
ljmp
addl
inc
jb
je
lds
fwait
pushf
sbb
push
pop
and
insl
jge
popl
add
xchg
cwtl
rorb
sbb
push
mov
lods
sub
jnp
lret
xchg
andl
sbb
sbb
mov
outsl
push
push
cwtl
adc
cld
into
inc
shrl
in
cmp
adc
or
rorb
add
xchg
cmp
mov
and
test
sub
dec
pop
jnp
mov
pop
dec
arpl
test
lds
adc
mov
mov
sti
mov
or
or
push
leave
xchg
out
mov
imul
inc
or
arpl
xor
lea
or
in
das
mull
popa
xor
dec
std
lods
fcomps
clc
mov
jbe
adc
push
xor
mov
les
lret
into
dec
inc
scas
or
add
or
mov
and
mov
enter
ficoms
and
enter
or
fmuls
test
xorl
lock
je
push
pop
mov
aad
mov
lret
scas
cmp
mov
jne
outsl
lahf
outsl
cmpb
shlb
cltd
pop
arpl
std
add
test
and
or
aaa
loopne
sbb
pop
push
cld
jecxz
mov
jge
int3
out
movzbl
lret
push
push
push
xchg
sahf
in
add
cli
aad
jle
mov
mulb
push
arpl
je
das
sbb
xor
add
stc
inc
not
insb
mov
mov
int3
es
mov
push
xchg
mov
add
adc
imul
mov
xor
adc
add
stos
jmp
loopne
shrl
lock
push
add
adc
dec
jno
daa
mov
or
add
add
and
cmp
sub
mov
js
inc
mov
dec
mov
out
sbb
inc
fisttpll
pop
adc
out
cmp
pop
sbb
pop
and
fadd
nop
or
cmp
fistpl
mov
mov
xor
call
sbb
clc
loop
and
add
dec
les
jbe
cmp
call
lahf
les
stos
ret
adc
ljmp
push
jnp
push
stos
es
dec
fstpt
dec
cmp
mov
outsl
push
pop
mov
add
scas
mov
mov
ljmp
push
repnz
int3
sti
and
addl
rcrl
int
rclb
sti
cmp
xchg
idivl
push
addb
pusha
sub
xor
sub
add
adc
cwtl
jbe
inc
push
or
rcrb
clc
pop
adc
mov
stos
ja
add
in
jo
pop
fsubr
add
les
push
mov
jmp
sbb
orl
sbb
pusha
push
pushf
ret
push
push
lret
sbb
inc
fidivs
inc
add
mov
inc
loope
xlat
mov
mov
mov
pop
add
cmpsb
sbb
xor
push
inc
lods
loop
inc
sub
clc
fsubr
jge
jb
add
jle
outsb
int
movb
dec
mov
cmp
popa
adc
push
or
ret
rcll
je
cld
jmp
rolb
cmpsb
shrb
push
jmp
call
or
or
call
fdivrl
pop
push
out
in
stos
sbb
pop
dec
push
ret
shlb
cmp
pop
xchg
dec
xlat
and
add
js
mov
and
adc
shll
mov
enter
mov
test
iret
and
enter
xchg
xor
das
sbb
cmp
add
mov
decl
mov
and
shlb
mov
call
push
mov
pop
iret
aad
std
aas
sbb
pop
push
movsb
ret
jne
mov
idivl
fildl
test
adc
stos
xchg
inc
insl
jo
mov
push
sarl
movsl
xor
ss
mov
aas
mul
fisubs
lds
add
xorl
aaa
push
mov
add
out
loop
add
xor
adc
fsubl
or
xlat
push
call
scas
sbb
in
fstl
lods
insl
orl
mov
or
fidivl
inc
sti
xchg
cmp
je
ss
xor
mov
std
cmp
xchg
js
xor
push
insb
jne
pop
les
loopne
mov
jle
mov
dec
add
ja
jno
lds
mov
cld
lret
xor
test
insl
inc
add
add
sub
cmp
pop
shll
push
push
pushf
jp
push
out
dec
xchg
and
loopne
and
cmp
add
int
jl
jecxz
jne
jge
cmp
add
inc
push
jo
aad
push
mov
mov
mov
dec
test
movsl
mov
inc
cs
pop
fldt
stc
mov
sub
jg
fcmovnb
inc
mov
les
and
sbb
sub
xchg
adc
popf
je
and
jp
lea
mov
js
rorb
pop
nop
add
adc
arpl
mov
add
adc
call
out
add
jl
mov
daa
lock
sub
and
fdivrl
xlat
rorb
adc
mov
outsl
std
das
in
push
adc
mov
sahf
inc
stos
mov
xchg
or
or
jmp
mov
in
jle
data16
seta
pop
das
stos
push
inc
enter
jge
aaa
inc
popa
and
loope
cld
mov
int
jecxz
jle
sub
subb
and
sub
fwait
or
sbb
pop
sub
sub
cmp
rcll
js
inc
aaa
adc
ret
lret
testl
add
sub
inc
inc
loop
rclb
cmp
adc
clc
mov
insb
xchg
jnp
inc
xor
push
xchg
dec
sbb
aas
push
aaa
push
cmp
ja
and
or
lock
cmp
xchg
pop
mov
mov
test
dec
and
cld
out
jno
jno
pop
mov
lock
mov
mov
inc
sbb
sbb
out
pushl
repnz
adc
imul
cmp
movsb
ja
and
test
push
icebp
insl
jns
push
idivl
test
leave
and
mov
fsub
xchg
mov
mov
pushf
ret
add
cwtl
or
addl
lock
in
dec
or
add
adc
dec
push
outsb
push
sbb
push
sbb
sub
test
cmpsl
mov
in
lahf
mov
cltd
jg
lea
or
mov
lret
clc
mov
sbb
icebp
pop
adc
andb
sahf
inc
mov
xor
shlb
test
pop
add
in
ss
outsl
fdivrl
xchg
hlt
inc
and
hlt
fnsave
faddl
push
xchg
movb
and
and
daa
les
push
test
es
xor
jg
push
mov
mov
mov
nop
int3
insl
adc
xchg
and
sbb
cld
push
mov
pop
inc
xor
mov
je
xchg
les
push
cmp
cwtl
sbb
stos
sbb
loopne
js
push
andl
in
repnz
pop
cmp
inc
cwtl
scas
pop
push
sbb
push
jge
cld
dec
iret
scas
rol
add
sahf
xor
hlt
test
inc
pop
pop
sbb
mov
addr16
jno
lret
int3
sub
xor
int3
xlat
nop
idivl
and
xor
sub
sub
xor
xor
sub
sbb
adc
lahf
xchg
dec
push
inc
add
fisubs
xchg
jne
imul
jbe
adc
sbb
mov
cmpb
sub
orb
sbb
push
popf
push
mov
ds
negb
shr
lock
aam
jg
pop
and
es
call
dec
adc
pusha
mov
sbb
mov
or
push
popl
mov
xchg
lock
enter
mov
hlt
sub
aaa
stc
push
jg
addb
cmp
pop
popl
adc
add
adc
and
adc
add
icebp
push
cli
inc
or
add
mov
or
cmpsb
hlt
std
add
loop
mov
shll
adc
push
push
loop
jbe
test
jne
test
add
inc
bound
mov
nop
scas
jae
jno
cld
xchg
mov
jne
xlat
cltd
dec
and
fwait
jno
mov
sti
dec
aad
cmp
enter
orb
mov
in
aaa
jae
insb
cmp
imul
jl
add
and
inc
sbb
addr16
addl
mov
add
jl
arpl
or
inc
into
lcall
xor
mov
cmp
lock
sub
sub
mov
shll
mov
adc
out
jb
faddl
das
test
jne
int3
test
outsb
pop
add
or
scas
xchg
arpl
xor
inc
lcall
inc
int3
push
xlat
adc
aam
pop
xor
and
inc
xor
jae
push
enter
fidivrl
enter
push
ljmp
ljmp
inc
fdivl
or
js
cmp
xor
or
dec
sub
loop
add
fdivrs
pop
jp
dec
int3
fsts
lods
mov
or
push
loopne
inc
cmp
mov
int
ss
or
mov
mov
add
inc
ficompl
fadd
mov
cli
std
and
outsb
pop
xchg
inc
dec
sbb
or
bound
subb
or
pop
loopne
add
jg
dec
cld
push
addr16
ds
push
dec
dec
cld
and
inc
je
cld
or
repz
push
iret
out
adc
jg
aad
shrb
addr16
mov
fmull
int
daa
call
mov
lcall
je
clc
outsb
loop
lock
lods
dec
sbb
andb
mov
add
aas
aaa
adc
mov
xor
addb
xorb
inc
orb
mov
clc
pop
pop
push
xorb
cmpb
mov
out
cmp
dec
push
cmp
push
xchg
aas
cld
jg
fistl
mov
lahf
or
mov
and
jecxz
shll
test
and
jb
movsl
pop
test
ds
add
inc
ja
sub
and
add
cmc
jge
and
inc
roll
push
cmp
aaa
clc
fildll
push
popa
mov
pop
xor
leave
push
testb
cld
inc
push
js
mov
or
sahf
mov
pop
add
pop
mov
aad
pop
hlt
outsl
call
add
sub
or
add
xchg
fdivr
jg
movsl
jne
and
xor
mov
xchg
test
orb
shll
icebp
mov
test
mov
int3
iret
lcall
sub
mov
scas
sti
rolb
or
ret
add
fnstcw
lea
cltd
or
mov
jge
jb
fstpt
xchg
nop
pushf
adc
movsl
mov
pop
sub
jmp
xchg
in
pop
mov
fdivl
or
sub
js
in
ljmp
pop
es
and
pop
jae
push
adc
mov
lods
in
cwtl
push
mov
out
or
outsl
test
lock
test
imulb
movsb
jnp
xor
cmpsb
mov
adc
orl
and
dec
xchg
das
icebp
imulb
lods
idivb
and
mov
movsl
pushf
cmp
mov
roll
gs
pop
sub
or
nop
pop
fsubrp
pop
lea
stos
pop
in
insb
test
pop
sub
mov
sub
jl
or
and
imulb
outsb
push
lret
enter
pop
scas
xor
loope
roll
test
movsl
mov
dec
mov
or
jmp
loop
loope
inc
call
mov
mov
sti
test
les
enter
mov
cmc
inc
popa
pop
jb
mov
mov
jb
sahf
and
adc
and
pop
loope
mov
fsubrp
jl
jg
icebp
fildll
mov
shrb
mov
push
and
scas
aaa
insb
sbb
ja
and
push
push
mov
cs
cmp
lds
adc
stos
ret
adc
xchg
push
ret
sbb
stos
rorb
add
loopne
xor
inc
fbld
pop
inc
or
popf
iret
mov
shrl
icebp
mov
loopne
mov
mov
jle
cmp
test
sbb
out
fs
xor
add
icebp
xor
sub
add
mov
add
mov
ljmp
cmp
and
jne
lock
inc
cs
and
pop
mov
mov
and
inc
je
rorb
mov
sbb
cld
int
icebp
in
shll
and
mov
cmp
add
jae
fsubrl
mov
fs
pop
mov
dec
ja
sbb
bound
nop
jno
notl
or
or
ds
pop
loopne
pop
dec
adcl
mov
or
mov
mov
sbb
adc
and
jecxz
push
jg
mov
lock
mov
les
into
xchg
mov
xchg
lods
mov
rcrb
lock
push
inc
mov
pop
std
call
cli
mov
mov
popl
and
scas
pusha
stos
cmp
mov
pop
push
loop
mov
pop
sbb
das
jge
jmp
sub
xor
dec
adc
add
cli
sbb
shl
jno
icebp
repnz
xor
cmp
pop
mov
jecxz
add
roll
test
movsl
adc
loopne
aam
test
jnp,pn
or
iret
xchg
cltd
sbb
sub
nop
adc
push
scas
stc
xor
xchg
jmp
sub
mov
mov
jns
xchg
mov
mov
and
dec
inc
sbb
call
pop
je
lret
ret
mov
pusha
cld
adc
and
stos
std
xor
test
sub
test
inc
xor
stos
inc
push
sub
and
adc
jecxz
outsl
mov
ljmp
clc
lret
push
mov
xchg
int
push
mov
cmp
pop
push
sbb
cli
imul
sub
lods
imul
xchg
in
pop
std
cmp
mov
js
jge
push
mov
dec
pushl
xor
stos
adc
lock
aas
xchg
pushl
jecxz
dec
adc
cmp
bound
insb
rol
and
dec
or
inc
fldt
and
stos
jns
and
andb
mov
sbb
adc
mov
add
mov
jecxz
cmp
mov
mov
shr
push
aam
fs
and
fs
scas
sbb
sbb
or
loopne
shll
icebp
ljmp
std
cmpl
or
mov
mov
jmp
jp
push
into
sub
pusha
mov
mov
ret
ljmp
jle
inc
repz
xor
fisubrs
inc
cwtl
pop
add
addb
aaa
cmc
sbb
xchg
dec
and
add
pop
sbb
add
int
adcl
or
jl
pop
cmc
adc
sub
xor
cmp
jne
mov
mov
mov
stos
push
pop
sbb
sub
mov
push
sub
sarb
call
mov
test
ljmp
and
enter
xchg
jecxz
andb
pop
stc
movsb
shrb
push
outsb
ds
inc
jae
ror
lret
mov
mov
mov
inc
mov
and
or
or
pop
jns
dec
sub
jmp
popf
in
push
and
push
adc
das
insb
cmpb
or
faddl
sub
push
cli
imull
mov
pusha
adc
test
xchg
lahf
fisubrs
cmp
cmp
mov
sti
movsl
xlat
lods
jns
addl
enter
adc
jnp
fs
js
fistpll
pop
inc
jp
inc
sbb
mov
in
fisubs
jne
ret
cmp
jg
sbb
mov
lcall
and
cwtd
jle
sbb
cwtl
mov
add
scas
xor
test
icebp
mov
mov
les
jnp
icebp
insl
int3
xchg
dec
mov
nop
or
rcrb
imul
or
add
lret
mov
loop
addl
push
jo
cmp
testb
stos
push
lock
pop
fbld
or
repz
or
xchg
push
xchg
aam
xor
stos
lods
mov
dec
or
push
and
add
and
adc
xchg
xor
sub
insb
push
in
fisubrs
jb
out
mov
outsb
scas
repnz
and
fnstenv
add
fisubs
add
lock
dec
cmp
repnz
push
cld
xchg
ret
out
es
push
in
adc
pop
and
dec
jns
jle
out
test
fwait
pop
sub
lds
insl
add
cmp
int
pop
jnp
shlb
dec
in
addb
fimull
mov
add
aaa
xor
ja
jle
push
and
into
add
lods
mov
mov
das
mov
xchg
add
inc
sub
rorl
stos
fimuls
pusha
in
ds
in
adc
jo
out
add
inc
or
stos
pop
mov
and
cmpsb
mov
xor
fsubs
test
xor
sub
aad
adc
add
mov
lcall
sub
adc
or
loopne
sbb
test
add
xor
mov
aaa
ss
fmul
enter
out
and
les
clc
add
adc
gs
adc
cmp
adc
mov
mov
mov
or
mov
clc
inc
dec
incb
mov
fwait
inc
add
xor
jecxz
imul
jecxz
jnp
xchg
aam
xchg
fadd
js
cmpsl
add
pop
test
es
xchg
jno
xor
insl
sbb
sahf
xchg
mov
add
clc
dec
pop
xchg
data16
push
jl
or
clc
mov
call
cli
clc
shl
in
mov
hlt
push
clc
cltd
test
pop
hlt
inc
mov
lods
ret
popa
mov
add
dec
add
fstp
aad
jo
sub
adc
cmp
mov
je
mov
orb
out
insb
sbb
inc
push
jbe
arpl
outsb
xchg
xchg
or
mov
repz
xorb
aad
xchg
aaa
jno
test
cld
cld
cld
into
out
mov
aad
sbb
mov
mov
push
ljmp
or
mov
pop
shll
cli
xor
mov
movsl
sub
dec
push
mov
sbb
sbb
cmpsl
fists
test
pop
mov
dec
repz
repz
fiadds
or
loopne
xchg
cmp
cs
pop
out
cltd
push
push
mov
stc
int
fwait
push
mov
into
out
in
shll
dec
das
mov
push
jecxz
jecxz
xchg
cmp
sti
and
gs
rcll
mov
movsl
jp
and
adc
pop
dec
sub
or
xchg
lea
and
in
bound
jl
cltd
outsb
jge
ljmp
cwtl
or
pop
notl
out
in
stc
add
xchg
xchg
lea
xor
mov
sti
inc
adc
loopne
jecxz
cmpsb
loopne
mov
push
ds
jbe
jmp
or
js
pop
or
sti
nop
in
arpl
data16
das
pop
ja
pop
mov
jge
stos
sbb
fucomip
cmc
testl
pop
adc
mov
add
clc
xchg
mov
fcmovb
aas
sub
add
fdivs
pop
clc
and
je
andl
in
jmp
shrl
add
add
push
orb
dec
push
in
adc
push
inc
sub
sahf
xor
and
sub
clc
fsub
adc
or
sti
xor
mov
mov
add
imul
add
and
sbb
adc
jl
fwait
test
pop
push
inc
push
insl
mov
bound
into
sbb
cmc
mov
mov
dec
or
cmp
hlt
cmpsb
adc
jge
outsb
or
loope
cmpsl
mov
mov
cld
add
or
dec
hlt
subb
inc
adc
mov
and
xor
add
aas
hlt
popf
loopne
push
roll
fs
cmpsl
push
xchg
ljmp
loopne
mov
pop
mov
scas
xorb
je
inc
pop
test
bound
nop
sbb
and
out
test
push
fldenv
sbb
call
jmp
out
test
xor
add
ja
sub
mov
negb
push
aad
les
jo
xchg
loopne
fstpt
shlb
pop
ret
jns
push
shlb
pop
addb
ljmp
jp
pop
test
mov
daa
fmuls
mov
add
test
outsl
and
enter
mov
stos
mov
dec
mov
adc
push
xor
in
sub
mov
dec
adc
push
cmp
sbb
repnz
or
and
inc
aad
sbb
test
inc
call
fadds
fmul
cld
jno
push
mov
nop
or
in
ss
cmp
iret
loopne
out
jne
add
add
inc
push
movsb
andl
sbb
dec
jb
lds
add
xchg
xlat
push
adc
int3
mov
rorb
or
sub
lcall
ss
roll
sub
insb
mov
or
pop
xor
add
fdivrs
jg
mov
cmp
movsb
ss
cli
push
std
mov
sub
inc
rolb
cmp
scas
insl
push
lahf
jmp
iret
daa
jo
data16
mov
rcrb
jbe
mov
dec
stos
shr
or
mov
outsl
test
xchg
pop
daa
adc
mov
cmp
jno
decb
jae
pushf
push
rorl
or
adc
iret
popf
cmp
adc
stos
pop
in
xor
cmp
lea
push
mov
in
call
sub
mov
popf
pop
mov
adc
xchg
pop
lods
jne
shl
ficoml
add
push
ss
mov
dec
push
enter
push
out
roll
sub
adc
fbld
sub
cmp
jne
xor
inc
jmp
add
or
jno
ret
xor
mov
dec
push
cs
aad
les
inc
les
and
add
and
addr16
into
mov
add
mov
sahf
mov
push
xor
mov
cmc
fcompl
mov
adc
nop
addb
orl
push
sbbb
add
cmp
jl
xchg
loopne
adc
xchg
stos
ljmp
into
aam
dec
nop
je
aam
fisubrs
and
lret
outsb
scas
popf
mov
adc
inc
hlt
inc
push
add
push
frstor
xlat
dec
hlt
adc
loop
inc
sbb
pop
inc
cwtl
inc
test
in
and
shlb
daa
push
scas
test
push
testl
xor
lcall
fdivl
es
icebp
sub
jne
or
ror
inc
inc
in
sub
mov
test
cmp
or
ret
add
mov
mov
push
sbb
dec
sbb
mov
push
dec
or
and
mov
pushf
mov
cmc
in
inc
outsl
es
dec
imul
sub
cmp
mov
inc
sbb
rolb
imul
popf
adc
enter
add
ret
jns
or
xlat
repnz
sbb
pushf
adc
adc
xor
bound
cmovl
pop
xor
xchg
orl
jbe
mov
in
mov
fsubl
or
rolb
test
jae
pop
ljmp
data16
aam
fs
fsubs
das
loop
or
mov
mov
call
hlt
sub
pop
loope
in
in
inc
frstor
shrb
stc
or
repz
rcl
mov
sti
fs
pushf
mov
mov
adc
add
sub
rcll
add
fbstp
jo
ficoms
jne
pop
test
jl
shll
leave
xchg
mov
cmp
jmp
sbb
xor
jecxz
mov
sbb
and
out
jge
aas
mov
into
sub
pop
icebp
add
adc
imul
inc
pop
cs
repnz
adc
xchg
or
bound
pop
fbstp
sub
fwait
test
sbb
sbb
mov
int
lret
inc
or
out
cmp
rcll
rcr
dec
or
or
mov
push
cli
mov
jbe
rorl
xor
ret
in
xlat
decb
jecxz
aam
xor
cli
and
xchg
xor
mov
das
xchg
popa
cmpsl
push
sub
ss
adc
das
shrb
cwtl
repz
push
mov
inc
mov
xchg
jae
fnclex
in
popa
repnz
push
push
loop
andb
inc
aam
lret
call
sbbb
lret
cmp
add
out
lods
lret
leave
in
sub
xchg
adc
add
and
pop
cld
mov
movsb
mov
push
mov
cwtl
lock
inc
loope
xor
stc
sub
and
push
and
mov
push
lcall
and
cpuid
and
xchg
sbb
add
sub
ret
lea
out
jbe
add
add
rclb
hlt
xchg
mov
ds
inc
cld
sbb
cmp
inc
mov
adc
nop
icebp
sbb
in
inc
xchg
adc
rcl
imul
mov
aaa
inc
stos
cwtl
fbstp
cmp
stos
aad
lcall
jg
lret
jg
sbb
xor
inc
and
push
scas
pusha
mov
push
mov
pop
add
sbb
pop
jge
xchg
inc
aas
fmul
sbb
in
sub
fwait
aad
dec
mov
add
clc
sbbl
lret
sbb
adc
push
pminub
aas
dec
dec
in
mov
mov
add
out
pop
fs
out
lods
outsb
shl
cli
test
test
xchg
add
aam
popa
das
mov
or
sti
popa
adc
rorl
mov
jns
subl
test
orb
sub
or
in
adc
mov
rolb
lods
and
and
fildl
inc
clc
lahf
add
cmp
mov
mov
cli
sahf
sbb
jno
notb
loopne
inc
test
sub
popa
mov
or
xchg
jg
into
add
mov
pop
add
stos
cld
inc
les
cmp
add
insl
mov
rclb
stos
cli
cs
stos
add
lcall
inc
add
pop
push
fimuls
jno
in
stos
jns
scas
push
data16
lret
lods
or
push
add
jae
push
out
dec
sub
in
cmp
adcb
xor
inc
gs
gs
dec
pop
pop
mov
das
lcall
rolb
popa
xor
add
and
dec
xchg
rcrl
mov
mov
dec
int
push
and
inc
jno
sbb
add
pop
push
xchg
lods
les
int3
lods
push
inc
aam
scas
mov
cmp
das
and
adc
or
cmp
jge
jns
inc
inc
cwtl
lea
adc
mov
xchg
push
dec
outsl
sub
movsb
dec
push
sub
dec
aaa
push
pop
les
icebp
xchg
fs
inc
inc
xchg
fldt
out
pop
mov
out
xchg
push
imul
outsl
decl
mov
inc
pop
dec
cmp
inc
shr
lcall
jle
pushl
sbb
stc
stc
leave
scas
dec
xchg
xchg
rorl
ljmp
std
dec
adc
mov
ljmp
std
out
lret
mov
shlb
add
and
ret
test
jg
pop
int
imul
mov
cmp
cmp
std
pop
cmp
adc
mov
sbb
icebp
jmp
mov
xor
bswap
dec
mov
sub
mov
jns
cld
lods
sarb
sahf
and
sbb
xor
cmc
mov
mov
shrl
or
loope
mull
out
or
jg
hlt
push
fistps
inc
cs
nop
or
jae
dec
cli
cmp
xchg
test
pop
lock
test
pop
push
lods
xor
pop
or
or
icebp
cld
adc
mov
mov
xchg
add
sti
or
js
inc
fisubs
or
jbe
jecxz
idiv
pop
or
dec
mov
inc
adc
xor
or
and
aad
das
pop
ret
add
loopne
push
andl
pop
js
mov
mov
fwait
inc
lahf
outsl
shl
dec
cld
sbb
sub
popa
xchg
decl
mov
sbb
and
ljmp
ds
sahf
add
adc
sub
enter
call
jmp
pop
call
push
xor
das
imul
ss
imul
xlat
adc
lret
xchg
inc
and
and
ljmp
cmpsl
dec
and
nop
scas
outsb
jmp
lahf
xchg
loope
test
les
jg
pop
dec
xor
inc
ljmp
adc
aas
andl
adc
idiv
xchg
jecxz
sub
jne
imul
jg
cmp
nop
loop
xor
in
pop
loop
or
ds
scas
mov
lods
and
xor
mov
inc
sub
cltd
dec
in
outsb
jge
add
push
adcb
add
pop
in
pop
les
lock
add
pusha
shll
sbb
and
cmp
lcall
aam
sbb
je
cwtl
and
inc
mov
clc
sub
test
in
es
inc
add
xchg
std
data16
mov
repnz
lods
push
jbe
mov
in
and
rcr
cmc
pushf
push
and
xor
divl
ret
or
mov
pop
loop
inc
fwait
shrl
lahf
mul
ja
jg
rorb
shlb
xor
push
cld
push
addr16
loopne
sbb
adc
loop
or
mov
pop
bound
add
ds
inc
xlat
lcall
mov
int3
jl
add
adc
mov
jo
push
add
out
lock
push
jne
bound
clc
ds
loope
iret
mov
pushf
mov
mov
mov
push
lcall
cs
xchg
js
scas
jmp
cmp
add
rcll
test
and
or
sub
add
mov
dec
loope
mov
jecxz
or
dec
inc
idivb
call
mov
mov
push
push
divb
lcall
dec
pop
aad
mov
rcrb
push
mov
pop
jl
lods
mov
sub
xchg
mov
cli
or
lcall
icebp
and
ljmp
pop
cli
adc
jmp
add
cli
jg
sahf
and
mov
adc
xor
fucomip
push
adc
cli
repnz
mov
es
xor
fld
sub
xor
sub
xchg
push
sti
push
jg
xor
inc
sbb
scas
jg
adc
sti
add
mov
and
xor
add
leave
push
sbb
sbb
rcll
pop
arpl
add
inc
xchg
xor
sbb
mov
aaa
inc
fnstenv
pop
call
sbb
pop
aad
movsb
loop
data16
xchg
or
mov
cmpsb
outsb
xchg
mov
push
aaa
addr16
mov
inc
dec
lds
cld
sub
dec
addb
les
dec
push
xor
adc
ret
xor
cmp
out
movb
xor
jge
addb
xor
inc
inc
add
outsl
adc
dec
stos
nop
imul
cmpsl
pop
push
jno
xlat
pusha
mov
sbb
xchg
xchg
clc
or
leave
add
sbb
and
cld
and
int
int
push
cmp
dec
es
test
xchg
push
cmp
js
sbb
call
xor
bound
inc
adc
push
mov
js
pop
push
test
add
inc
in
xor
jae
or
frstor
std
gs
das
cltd
aam
dec
loopne
lds
addr16
aad
fcomp
stos
xor
shrl
add
add
cmp
mov
std
dec
mov
inc
or
inc
sub
mov
bound
dec
hlt
rol
rorb
stos
jp
mov
mov
mov
ret
add
mov
xchg
xchg
in
xlat
inc
xchg
in
int
dec
cwtl
or
mov
jne
xchg
int3
scas
out
dec
je
fisubs
cld
adc
jb
loop
imul
stc
cli
jl
xchg
xlat
pop
test
fs
lcall
push
lret
cltd
push
push
stc
and
lret
or
mov
jb
clc
dec
sub
and
cmp
dec
int
mov
or
push
sti
cmp
pop
aam
cli
xor
fdivl
jp
popl
arpl
bound
pop
adc
incl
pop
test
roll
cmp
cwtl
lret
pusha
push
pop
fnop
xor
fs
mov
or
into
incb
call
es
add
and
ljmp
or
inc
xor
adc
dec
pop
test
je
jge
or
sbb
xor
clc
stos
fstps
push
bound
es
orb
lods
mov
pusha
rol
jae
dec
ljmp
and
roll
sbb
inc
cmc
sub
pop
not
pop
xor
push
mov
push
hlt
or
sarl
adc
mov
push
sbb
add
mov
mov
dec
mov
cmp
and
xchg
outsl
cmp
je
lret
shlb
jo
xor
mov
add
movsb
mov
add
mov
add
xchg
mov
add
repz
pop
int3
adc
daa
imul
add
iret
mov
inc
mov
pop
imulb
or
or
sub
hlt
add
cmpsl
test
cmp
in
out
fisubl
mov
shl
out
or
out
pusha
push
xchg
js
in
mov
data16
or
hlt
jns
mov
icebp
cmpsb
sub
adc
mov
mov
hlt
daa
cmc
movb
fisttps
scas
nop
lock
xor
jl
lcall
dec
pop
adc
data16
sbb
in
sub
lds
pop
shlb
jbe
adc
pop
hlt
dec
movsb
mov
mov
fs
xchg
test
ret
sub
fs
sbb
mov
mov
bound
mov
or
push
mov
movsb
movsl
fcomps
xchg
enter
sbb
sbbb
pop
cmp
inc
cmp
add
mov
push
dec
and
rolb
dec
fildl
aam
xor
xor
dec
out
inc
or
testb
and
scas
cwtl
push
je
push
cmp
inc
sbb
outsb
les
or
sbb
scas
in
lods
and
adc
inc
sti
in
rorl
mov
mov
clc
fimuls
cmp
pop
inc
ret
mov
mov
and
les
dec
mov
sub
test
fidivl
jg
push
pop
addb
in
stos
add
jmp
mov
into
sar
in
lcall
sbb
addr16
aad
pop
add
scas
es
push
sbb
sub
ja
inc
icebp
test
imul
repz
pop
push
xor
fcmovnu
pop
pop
test
sub
xchg
add
and
jno
sbbb
push
leave
sbb
adc
std
sbb
push
lea
sti
pop
sbb
scas
pop
inc
xor
fmull
out
fs
pop
int3
xchg
divb
and
inc
ficoml
pop
arpl
adc
fadds
xor
mov
mov
insl
adc
frstor
cs
shll
push
subb
mov
pop
mov
stos
ljmp
enter
sub
mov
mov
out
out
pop
or
loopne
shrl
fcoms
mov
scas
stos
xor
aam
jl
jbe
sbb
push
inc
fisttpll
dec
ret
test
jo
out
pushf
adc
add
xorb
add
add
xlat
fidivl
mov
movb
pop
jb
xor
or
mov
dec
icebp
decl
shrl
or
xchg
mov
ljmp
dec
inc
cmpsb
in
mov
adc
xchg
cmp
stc
mov
and
mov
mov
lea
xchg
mov
ret
inc
xor
dec
test
sub
lret
loopne
outsb
icebp
in
jg
inc
out
mov
es
seta
pop
clc
sub
xor
add
sti
mov
lcall
jbe
mov
data16
lea
sti
mov
jb
jg
fists
leave
dec
sarl
stos
push
fwait
outsb
das
cld
sbb
cld
nop
push
or
xchg
xchg
int3
and
push
out
test
frstor
jnp
xchg
inc
popa
clc
ja
stos
add
gs
negb
insl
in
mov
outsl
push
std
int3
lahf
sbb
cli
mov
aad
fsubr
xchg
lds
mov
cmp
stos
outsl
add
xchg
das
scas
in
pushf
fs
decl
pop
outsb
dec
jmp
mov
push
pushf
clc
and
loop
jg
mov
add
xchg
mov
mov
cli
pop
mov
or
sbbb
add
lea
inc
mov
mov
inc
add
pop
clc
push
sar
sbb
dec
mov
add
dec
jl
adc
js
jns
pop
sbb
ret
mov
jno
jae
pop
in
das
lcall
push
leave
add
push
add
rcrb
inc
pop
out
loop
cltd
push
inc
jl
stc
inc
test
pop
push
test
out
in
test
mov
movsb
inc
insl
jg
std
das
cld
decl
mov
cltd
ret
outsl
daa
jbe
or
je
das
aad
sub
fisubrs
lahf
sbbb
mov
jbe
add
pop
fcmove
rclb
mov
decl
sub
push
lret
mov
les
mov
sub
mov
repz
lods
xor
stos
test
ret
adc
cmc
pop
sbb
iret
push
xchg
jmp
in
add
lock
cmp
jmp
add
das
pop
fdivrl
iret
inc
jmp
lods
and
mul
adc
mov
call
cli
or
xlat
pop
push
cmp
jmp
cmp
insl
inc
std
add
pop
dec
lea
stos
test
loopne
mov
or
cmpsl
in
inc
pop
jb
mov
mov
sbb
sbb
pop
xchg
adc
testb
rol
dec
fimuls
popa
cmp
sbb
sbb
add
jl
adcb
mov
inc
pop
loopne
lock
inc
movsl
jg
arpl
in
and
fcoms
dec
mull
psllq
xor
pop
sub
or
cs
dec
jmp
int
mov
and
xchg
push
bound
adc
or
sbb
popf
fmul
push
imul
test
sahf
jge
push
lods
xor
ret
mov
xchg
xor
testl
xor
dec
jle
jge
roll
push
and
adc
data16
cmp
and
add
scas
push
mov
andb
aaa
ret
je
je
pmaxsw
out
out
fiaddl
xchg
dec
sub
lcall
cs
add
push
mov
push
jmp
inc
outsl
mov
nop
add
xor
mov
cwtl
xor
xchg
mov
leave
and
mov
dec
jl
jmp
mov
adc
loope
imul
jbe
repz
jg
push
mov
sbb
enter
lret
add
mov
push
adc
andl
mov
sbb
rorl
lock
decl
mov
stos
push
lods
mov
clc
in
aaa
jp
mov
jle
sub
lds
xor
xor
out
loopne
fs
xor
es
lock
sub
or
push
cmp
ret
cvtps2pi
adcl
ljmp
sub
cli
pop
sbb
int3
lret
cmp
mov
add
shrb
mov
es
sub
add
call
bound
shlb
jmp
or
xchg
int3
sub
les
pusha
sub
push
add
fdivs
add
mov
and
cmovo
lcall
mov
int3
aam
dec
and
test
mov
jnp
cmc
insl
mov
cmp
ss
or
je
subb
inc
push
test
adc
cld
inc
xor
adc
shrl
lret
outsl
ret
cmpb
sub
push
test
add
dec
je
cltd
sub
push
jne
ljmp
int
adc
enter
scas
mov
fxch
fwait
jecxz
add
jge
adc
and
mov
nop
fnstcw
cmp
xchg
push
shlb
xchg
mov
pop
rorb
cmp
mov
cmc
outsb
pop
je
jo
aam
xchg
mov
or
or
insb
inc
mov
icebp
mov
je
clc
lret
sbb
aam
mov
nop
movl
inc
jae
inc
adc
ljmp
jb
or
cmp
xchg
mov
cmp
xchg
push
enter
movsb
add
xor
adc
inc
sub
mov
inc
cmp
cs
and
inc
test
or
xor
adc
xor
or
pop
mov
sbb
or
sub
mov
push
loopne
mov
ror
rcr
rclb
xor
and
insl
jne
sbb
inc
add
cli
adc
loop
push
outsl
ret
push
adc
shrb
loopne
push
push
sub
or
xchg
mov
gs
fdivs
cmp
dec
popf
stc
push
cmc
das
lock
rolb
jne
add
sbb
loopne
loopne
or
dec
aad
out
pop
push
out
ljmp
pushf
faddl
inc
aam
data16
clc
cmp
push
call
and
fwait
ror
xchg
push
jmp
xchg
xchg
add
das
and
lret
aaa
jnp
pushf
hlt
call
mov
sbb
sub
lea
movsb
inc
jne
add
loope
xor
loope
inc
cmp
pop
dec
push
rcrb
push
mov
dec
xchg
or
pop
aad
add
aas
in
nop
loopne
sub
push
and
push
sub
popf
call
subb
inc
sbb
pop
mov
shll
pusha
add
pop
mov
sar
adc
aam
cmp
jo
shl
or
and
add
push
mov
mov
in
popa
push
in
in
call
stos
test
outsl
xchg
mov
mov
fucomip
push
push
add
loop
inc
sbb
clc
popf
or
sbb
divb
ljmp
jl
jb
jmp
push
xor
aam
ret
cmpsb
mov
test
shlb
test
xor
cmp
leave
push
ret
imul
pop
je
jg
push
add
loopne
or
push
pop
jmp
stos
pop
sbb
int
and
roll
je
outsb
sub
pop
insl
jecxz
nop
mov
es
pushf
mov
mov
imul
jg
inc
xchg
mov
jg
pop
nop
clc
pop
dec
jbe
pop
sub
jb
movsl
test
cli
daa
loop
cmp
mov
mov
sub
stos
xchg
push
add
mov
hlt
cmp
ds
pop
std
lock
jnp
adc
push
mov
or
in
lea
push
loope
in
rclb
icebp
insb
movsb
iret
cltd
outsb
mov
push
andb
hlt
push
icebp
lock
pop
pop
or
jo
test
dec
aad
and
jmp
std
sbb
fildl
or
pushf
mov
arpl
iret
jno
out
mov
xchg
pushf
leave
or
stos
bound
and
ret
insb
outsl
push
add
repz
cmc
sbb
fs
in
fxch
cmp
fwait
repz
cmp
xor
movsl
aaa
cmp
cltd
jae
and
mov
insl
ret
das
rolb
fistl
in
pop
jmp
pop
pop
sub
loopne
pop
mov
aam
jnp
cmpsl
inc
or
xchg
fst
rcl
mov
pop
mov
loop
xor
inc
sub
pop
scas
popa
lahf
cmp
sub
out
xor
fisttpll
inc
jg
add
dec
jno
pushf
sbb
mov
xchg
sub
push
fwait
lret
in
repz
xchg
loop
addb
mov
mov
pop
inc
or
in
mov
aam
mov
or
and
lds
mov
sbb
push
xchg
stos
hlt
mov
mov
sbb
pop
jmp
or
sbb
cwtl
sbb
loope
inc
gs
ljmp
adc
xor
xor
cld
into
lret
lret
push
mov
scas
dec
daa
orb
ljmp
call
sub
icebp
fwait
cmp
adc
add
scas
inc
outsl
mov
adc
jb
and
aam
das
mov
dec
pop
icebp
pop
cwtl
ret
add
inc
dec
sub
icebp
push
pop
cwtl
lock
adc
lds
add
pop
mov
sbb
dec
movl
fwait
out
mov
mov
cmpsb
jl
pop
adc
pop
and
add
insb
subl
cmp
and
fildl
fstl
repnz
insl
cwtl
pop
inc
js
cs
sar
gs
out
mov
fstpl
xor
or
sbb
js
cmpsb
push
cmpsb
xor
out
repnz
fwait
loopne
sub
xchg
inc
jl
mov
cmp
push
aas
sbb
fldl
in
cmp
xchg
pop
mov
xlat
sti
or
dec
add
mov
inc
lret
fdivr
mov
test
sub
incl
inc
aas
jmp
add
ret
pop
ss
pop
dec
idiv
pushl
int3
xchg
mov
push
insb
loopne
addr16
stos
jbe
jb
ret
xchg
mov
jbe
mov
jecxz
movsb
jbe
jnp
out
les
add
jb
jecxz
push
pop
aad
pop
popf
mov
mov
shrl
xchg
pop
sub
jle
inc
fdivrl
mov
das
sarl
test
sub
mov
fs
xor
add
jl
mov
dec
aam
add
xchg
mull
dec
inc
jge
xchg
leave
roll
int
roll
mov
outsb
adc
jmp
incl
loopne
into
sti
mov
jae
out
mov
add
sarl
dec
mov
sub
inc
jg
js
rcl
jno
push
lock
inc
cli
xchg
lea
je
inc
out
mov
pop
xlat
bound
or
leave
jl
inc
in
xchg
incl
aam
inc
and
sub
adc
stc
pop
xchg
shll
add
inc
cmp
popa
adc
je
lret
sbb
sbb
icebp
fildl
pop
in
push
dec
push
ljmp
std
dec
mov
sub
xchg
out
push
add
pop
jg
out
rcl
loope
enter
std
inc
loope
lds
lods
test
insl
dec
lods
loopne
adc
adc
jl
pop
or
call
xor
lods
cld
in
mov
and
lock
int
dec
mov
or
ljmp
mov
mov
incl
cltd
sti
dec
and
pop
out
xchg
fdivrs
std
pop
cli
outsb
mov
push
repz
jle
in
jge
test
xchg
lds
jmp
push
mov
rdmsr
in
jecxz
es
cmp
call
mov
std
sbb
test
push
imul
inc
call
add
xor
or
inc
sbb
push
mov
mov
jmp
cli
adc
sbb
or
insb
rolb
out
clc
stos
jno
fisttps
arpl
mov
push
jmp
sub
inc
scas
sub
daa
fsubs
movsb
out
js
lods
bound
jge
out
imulb
divl
in
repnz
imul
hlt
inc
aad
rol
inc
test
cmc
cld
cwtl
add
mov
shrl
dec
mov
jg
popa
add
add
shrd
sbb
jp
jle
imul
sub
and
add
add
push
and
shlb
sub
gs
rcrl
out
mov
std
pop
mov
mov
cmp
sahf
and
inc
rcrb
hlt
fbld
adc
stc
mov
inc
add
pop
mov
outsl
xchg
bound
inc
mov
aaa
inc
pop
decl
jge
ficomps
int3
pop
mov
aad
xlat
in
xchg
in
addr16
outsl
addr16
clc
out
fdivrp
push
aas
mov
jb
jp
stos
or
cld
dec
aad
or
roll
dec
xor
pusha
mov
jmp
or
jl
mov
cmpsl
iret
adc
test
lock
pop
fildl
pop
not
test
into
test
mov
fucomp
sub
popa
mov
jo
or
and
dec
call
pop
or
mov
adc
sub
add
sbbb
in
mov
imul
ds
cs
arpl
sub
frstor
mov
aaa
mov
jne
inc
jno
jo
sub
aaa
loop
inc
shrl
xchg
cmpb
and
aam
loopne
mov
cltd
inc
out
mov
pop
test
or
data16
jp
push
hlt
xchg
sub
mov
dec
add
call
mov
sti
push
mov
or
scas
test
sahf
repz
xor
cwtl
cs
push
jae
aaa
push
jge
loop
inc
sbb
push
pop
lods
push
mov
dec
sti
xor
xchg
mov
mov
pop
rorl
mov
sbb
in
add
into
inc
push
xchg
add
loop
xchg
jecxz
shrl
sub
jecxz
inc
test
push
or
lock
fbld
or
addr16
or
and
aaa
mov
les
mov
mov
ljmp
sarb
pop
in
adc
sbb
stc
lods
bound
sbb
fdivrs
sbbl
sub
or
fstl
inc
pusha
decl
mov
jp
jp
lock
pop
in
push
adc
aas
lret
dec
incl
mov
sub
push
gs
shr
or
das
or
fildl
jmp
inc
stos
shrb
inc
cmc
xor
sbb
cmp
dec
lcall
or
dec
bound
mov
fisttpl
mov
push
in
jne
ret
outsb
shlb
mov
dec
mov
or
repz
push
inc
pop
call
xchg
out
mov
cmpb
add
xor
fistpll
daa
fstpl
sbb
cld
aam
fdivrs
xchg
lahf
addb
aaa
outsb
inc
imul
scas
mov
jp
and
imul
mov
mov
leave
out
pop
mov
or
ficoml
fsubl
mov
push
sarb
jbe
and
fnsave
call
lret
and
add
enter
lock
mov
xchg
mov
sbb
dec
xor
pop
orb
clc
jmp
inc
scas
pusha
pop
pusha
int
jle
push
int3
mov
scas
xor
mov
mov
push
ret
sti
push
push
jge
ljmp
pop
cli
scas
jae
das
adc
push
mov
or
adc
xor
push
xchg
call
sbb
stos
jle
roll
int
and
or
xor
mov
in
addl
dec
or
fst
filds
pop
xor
or
pusha
pop
mov
xor
addb
cmpsb
xchg
add
lcall
xor
out
adc
stos
inc
jo
cwtl
add
lock
insl
aam
push
loopne
out
ja
adc
gs
insl
fcomps
inc
sbb
mov
cmp
out
dec
int
out
or
subl
push
enter
adc
cld
sbb
clc
fiadds
xchg
jp
insl
fwait
rcr
out
and
int3
cmp
fildl
fisubl
sub
mov
or
adc
add
clc
or
sub
scas
xor
addb
cmp
and
adc
mov
popa
jp
mov
or
mov
add
adc
cmp
add
sub
pop
or
fdiv
push
push
stc
inc
arpl
adc
adc
xchg
mov
xor
adc
xchg
sbb
sub
popf
inc
lahf
add
adc
mov
jns
jo
addb
inc
push
lock
push
aam
push
sub
int
pop
fsts
jo
ret
xor
and
pop
out
mov
ljmp
cmpsb
test
adc
testb
inc
adc
loop
xchg
fisttpll
xlat
inc
outsb
clc
arpl
movlps
fists
inc
dec
and
add
test
jb
push
xor
add
out
mov
xchg
mov
out
add
cli
rolb
repnz
mov
sbb
or
fbstp
data16
fcmovnu
dec
test
jne
fcmovnb
test
lret
repnz
aam
sbb
adc
adc
daa
je
movb
lcall
add
test
andb
push
rolb
mov
mov
push
mov
mulb
ds
xor
dec
cmpsb
sub
and
stos
clc
sub
or
jecxz
mov
push
subb
inc
lock
and
hlt
push
push
clc
scas
lea
jge
sub
mov
call
fstl
push
cmp
add
or
xor
aas
lahf
sub
xchg
jns
pop
push
mov
inc
lock
cmpsb
push
jge
arpl
and
jae
outsl
aas
sbb
sbb
xor
psubusw
sbbb
push
fwait
cli
aaa
pop
insl
adc
mov
jle
xor
mov
cmp
and
mov
sub
push
dec
mov
das
mov
das
mov
xor
sub
push
cmc
or
fwait
or
xor
aad
xor
and
xchg
test
inc
cs
in
aas
cli
in
mov
pop
call
and
outsl
mov
mov
mov
inc
fcomps
dec
bound
ss
nop
jge
inc
jo
jle
inc
std
inc
xchg
xchg
hlt
lods
jnp
cli
test
and
lea
cs
sbb
stos
or
push
testl
pop
xor
xchg
out
ffreep
push
mov
mov
sbb
add
lret
fneni(8087
cmp
pop
jl
adc
rcrb
popa
stos
sbb
loopne
orl
sbb
sbb
jae
xchg
insb
xor
lea
in
adc
sub
push
mov
xorb
fucomi
mov
inc
mov
outsl
movsb
mov
jge
outsb
jno
pop
mov
hlt
dec
movsb
lods
dec
idivb
imul
push
test
or
fs
mov
aaa
push
jle
ret
adc
cmpsl
bound
cwtl
cmpsl
jne
add
push
jp
xor
ljmp
cltd
xchg
mov
adc
push
xchg
test
xchg
cli
lds
pop
xor
lds
clc
inc
data16
sbb
test
hlt
in
int
push
add
aaa
mov
jb
or
mov
mov
mov
and
sbb
mov
ret
inc
sbb
adc
push
sbb
push
inc
pop
push
mov
mov
pop
cmpsb
das
icebp
cmp
jg
cs
lcall
pop
in
xor
jg,pn
into
and
sub
adc
call
xor
xchg
cmp
insl
mov
mov
or
cmp
inc
in
cmove
in
clc
ljmp
sub
insb
inc
enter
pop
jns
lret
mov
xchg
loop
aam
xlat
gs
push
pop
shl
xor
mov
mov
lock
push
iret
mov
subb
mov
adc
pushl
adc
push
lcall
outsl
insb
push
std
cld
pop
outsb
cs
int3
icebp
sub
jbe
in
xchg
sub
js
ret
arpl
mov
push
jecxz
pop
clc
jl
repz
mulb
mov
mov
add
mov
fbld
add
loop
or
push
insl
js
jne
lea
dec
push
fisttpll
jle
or
je
insb
sub
test
dec
mov
cwtl
test
cwtl
in
mov
test
roll
sbb
andl
fcmovnb
fldt
mov
add
xchg
or
fimull
inc
pushf
sub
decl
mov
push
add
lret
sub
bound
popf
daa
mov
std
fildl
scas
push
mov
xor
add
std
mov
lea
jecxz
aad
or
fbld
add
dec
xchg
ljmp
lock
rolb
xlat
ja
imul
jno
movsl
mov
adc
sbb
and
dec
lret
and
hlt
jnp
xor
mov
add
popa
fists
mov
aad
outsb
sub
hlt
int3
mov
xchg
jns
test
cmp
mov
or
cmpsb
mov
ljmp
mov
pop
sub
popa
xor
mov
inc
cmp
call
pop
pop
push
cwtl
sbb
sub
arpl
jl
cld
push
xchg
inc
incl
ljmp
gs
test
mov
add
sbb
mov
fsub
or
and
loop
adc
lock
aaa
and
stc
mov
push
out
insb
pushf
movsl
adc
stos
jle
test
test
pop
push
mov
test
stc
je
sti
push
je
loopne
mov
outsb
mov
rep
dec
push
cmp
fcompl
int3
sub
push
test
mov
scas
cmp
mov
xchg
and
push
jne
cmp
mov
mov
repnz
pop
push
test
pop
fcompl
push
inc
mov
fbstp
cmp
lods
in
pop
cmpsl
pusha
repnz
fdivrs
jno
mov
push
jae
fsubrl
test
push
stos
das
loop
and
cmpsb
mov
test
stc
xor
ja
insl
jo
and
addr16
sub
cli
and
dec
sub
jne
adc
mov
bound
js
mov
das
push
mov
push
rolb
adc
adc
rclb
lock
subl
imul
inc
cmp
enter
inc
inc
jmp
mov
daa
nop
into
mov
mov
jae
fucomp
fcmovnu
outsb
push
add
pop
add
stos
mov
popa
adcl
jne
je
test
mov
data16
mov
lds
lret
pop
insl
inc
pop
test
mov
rcr
and
int3
or
adc
gs
into
add
ljmp
lret
test
rclb
jg
arpl
sub
inc
adc
enter
sbb
jae
xchg
add
pop
inc
sbb
mov
or
adc
scas
testb
push
outsb
adc
adc
dec
push
inc
scas
mov
add
in
lds
call
add
out
push
add
push
add
stc
adc
add
or
stos
sahf
xor
xor
in
les
out
jmp
and
push
adc
or
inc
cmpsb
mov
push
push
outsl
sub
xor
pop
int3
addr16
imul
pop
cmp
dec
pop
sbb
xor
out
push
sub
mov
sbbl
fidivrl
inc
or
push
adc
mov
xor
addr16
rorb
inc
movsl
and
add
mov
lods
sbb
or
sub
and
sahf
mov
xchg
mov
inc
fs
and
jo
push
rorb
xor
inc
popl
lods
inc
int
out
f2xm1
adc
in
pop
add
dec
inc
or
cmc
into
arpl
sub
push
sub
fisttpl
data16
and
adc
or
sbbb
leave
test
push
sub
push
aad
mov
icebp
fcoms
add
sbb
mov
nop
je
shlb
shlb
push
hlt
daa
mov
sub
cmp
dec
sub
fwait
cmp
dec
or
sbb
int3
add
dec
xlat
add
sub
xor
lds
fdivrl
rcrl
sbb
adc
fldlg2
jmp
adc
mov
sub
push
mov
cmp
mov
mov
addr16
call
lcall
xchg
pop
and
pop
fcmovu
lahf
inc
ret
mov
out
xlat
push
cmc
cwtl
jb
sub
pusha
adc
sbb
test
dec
ret
aas
inc
out
movsl
pop
sti
jg
fdivrp
subl
pop
inc
ret
and
pop
pushl
jns
call
ja
push
mov
pop
js
test
test
mov
mov
and
test
fdivs
jo
ret
and
add
mov
sub
jnp
sbb
push
inc
pushf
scas
or
loopne
push
insb
push
cltd
adc
xor
mov
fwait
mov
fidivl
push
push
shr
sti
jo
adc
or
pop
cmp
rorl
jl
add
pop
or
scas
aaa
mov
sbb
ja
adc
xchg
icebp
jb
aaa
hlt
or
sub
insl
stos
inc
or
dec
iret
adc
ja
cmpsl
push
fisttpl
or
pop
lods
inc
push
stos
dec
out
fadds
sbb
add
leave
add
add
sub
addr16
fisubrs
shrl
scas
push
dec
shr
sub
adc
cld
and
addl
popa
pop
and
movsb
addr16
fsubl
subb
iret
pusha
or
scas
aaa
pop
ljmp
or
push
test
rorl
mov
cltd
imul
lret
jo
adc
ret
xor
push
insb
sub
mov
and
pushf
mov
adc
in
xlat
out
into
es
sbb
adc
push
xor
aad
push
jne
pushf
inc
dec
inc
pop
inc
xchg
ror
shl
inc
cmp
inc
dec
xchg
cmp
lret
stos
adcl
stc
mov
or
push
movsl
pushf
popa
ret
fmuls
cmpb
rolb
add
jae
jp
dec
mov
sub
test
js
inc
cld
mov
or
aad
fdivrs
popa
daa
and
adc
loopne
lods
push
dec
mov
jb
push
sbb
or
cli
xor
ret
mov
cmp
setbe
xchg
mov
adc
shl
inc
or
jge
in
pusha
inc
cmp
jne
loopne
mov
sysenter
cwtl
pop
stos
ss
adc
and
addb
push
pop
aad
mov
les
jno
rcrb
subb
xchg
pop
inc
pushf
loopne
movsb
adc
repnz
xchg
add
daa
xor
add
jp
rolb
or
daa
push
loop
mov
cmpb
and
fadds
cwtl
mov
pushf
jmp
fildl
sub
jo
jne
xchg
add
xor
sub
pmulhw
lock
inc
and
sbb
jmp
or
in
sbb
or
add
in
push
adc
push
cmc
add
clc
loopne
sarb
pop
lock
push
push
mov
push
test
mov
or
jns
fstps
push
into
adc
mov
int
mov
xor
jno
lret
call
mov
add
dec
adc
pop
sub
call
mov
pop
xorb
jle
jl
das
shrl
in
or
cmp
popf
and
and
fldl
cs
adc
rcll
mov
inc
pop
data16
clc
jb
dec
adc
xchg
jp
pop
jbe
fwait
cmpsb
loopne
fs
in
outsl
mov
into
cmc
ror
xor
push
negl
and
enter
mov
add
sbb
loope
jg
and
inc
loop
pop
mov
test
add
push
shlb
outsb
xorb
add
fucomip
cmpsl
mov
fsubr
mov
les
movsb
jecxz
sbb
fwait
and
xchg
clc
sub
mov
or
jle
xchg
adc
test
call
inc
jae
insl
cld
aad
scas
shlb
loopne
fildll
cld
dec
jl
xchg
fisttpll
in
mov
xor
stos
pop
insb
push
shlb
mov
sahf
bound
or
adc
adc
rorb
outsl
sub
mov
je
cmp
mov
stos
lds
add
sub
xchg
or
cltd
adc
js
aaa
and
nop
roll
stos
jg
cmc
in
or
movsl
arpl
aam
ljmp
push
leave
sarl
jbe
and
scas
xchg
and
jbe
outsl
cmp
push
jle
in
daa
push
je
push
sub
lock
rcrb
push
push
jmp
mov
cli
adc
add
shll
jne
cmp
or
fisttps
rcll
inc
adc
mov
fwait
jmp
adc
pushf
js
and
xor
cmpb
pop
push
outsl
mov
lock
test
add
push
dec
inc
outsl
push
mov
fnstenv
je
xchg
jg
mov
push
xor
stc
or
fcomps
cmpsb
xchg
lea
or
cld
incl
push
test
jmp
push
int3
lock
loopne
add
insb
mov
cld
call
ret
arpl
je
sub
and
push
jg
test
sbb
add
jno
or
loopne
and
sbb
inc
mov
sbb
gs
push
pop
mov
mov
add
pop
add
and
icebp
add
xor
insb
data16
movsb
mov
pushf
sbbl
or
push
das
jmp
cmp
mov
stc
out
push
sarb
addr16
inc
sub
aaa
decb
mov
or
jl
mov
mov
and
or
jp
jecxz
add
std
or
adc
loope
adc
std
das
adc
pop
mov
mov
cmpsb
or
imull
sub
jb
loope
mov
mov
clc
jl
clc
sub
call
int3
int
add
fs
mov
adc
cld
mov
ret
push
xlat
mov
lahf
jg
adc
jns
inc
add
push
or
or
cli
or
jl
sar
call
lods
repz
fs
in
push
cld
xlat
sbb
pusha
psubusb
xchg
call
fsubrs
ror
add
xor
fldl
clc
and
test
scas
inc
jg
les
xor
imul
std
popf
push
sti
dec
sbb
lahf
cmpsl
js
add
xlat
cmp
ret
out
test
roll
insb
mov
jne
fwait
stos
pusha
subl
inc
icebp
loopne
cmp
push
inc
stos
repz
jge
outsl
imul
ds
and
sub
ljmp
loope
cmp
in
dec
lret
sahf
xchg
mov
icebp
pop
mov
mov
lret
push
rcl
mov
sbb
fsubp
push
sub
mov
popa
sti
stos
pop
ljmp
push
pop
or
cld
mov
lods
std
push
jbe
cmc
xchg
js
cmc
cmpsl
mov
push
mov
or
push
lock
cwtl
mov
push
pop
ljmp
pop
add
in
int3
pop
and
cmp
or
fmul
xor
or
in
scas
aaa
ljmp
and
sti
decl
pop
jge
inc
sbb
fistl
movb
pop
or
push
int
aaa
inc
in
jg
insl
cwtl
call
cmc
fidivs
fldt
adc
fisttps
mov
pushf
sub
sti
adc
movsb
pop
sbb
and
and
add
mov
in
sub
xchg
loop
shrb
jmp
ljmp
stos
fistpll
movsl
out
mov
or
insb
shrl
mov
hlt
call
sbb
pop
sub
jno
mov
jg
std
ret
add
pusha
mov
pop
jge
mov
or
add
sbb
lahf
mov
lcall
dec
mov
lock
outsb
cmp
mov
stos
les
cmp
cmpsl
xchg
sbb
jbe
cld
call
xchg
shrb
pop
out
std
lahf
shr
inc
push
cmc
shrl
sbb
pop
jg
dec
into
insl
popa
jae
inc
sub
xchg
adc
jg
shr
out
xor
fildl
push
scas
test
imul
clc
jno
repz
adc
outsb
adc
fsubs
push
lock
imul
and
jl
sub
nop
cmpsb
pop
fsubl
ret
insl
popa
shll
push
aas
pop
push
xchg
xor
decl
sbb
sarl
add
loope
pushf
sub
lret
cmp
add
orl
cld
push
pusha
negb
test
call
cs
inc
mov
ret
mov
rcl
jnp
mov
sub
mov
cmp
cmpl
inc
cmp
aad
sub
jns
lret
cmp
push
decl
mov
shr
add
imul
andb
mov
sub
cmp
and
jmp
sarl
mov
xor
mov
popa
fadd
ficompl
stc
xchg
inc
and
and
shr
lods
push
scas
dec
test
mov
inc
es
sbb
test
cmpb
add
ret
jge
inc
aad
add
push
jae
sub
loopne
loope
add
and
pop
ljmp
les
lds
gs
lods
lcall
shrb
notb
insl
loope
movl
mov
das
mov
lahf
repz
or
std
pop
icebp
rorl
cwtl
pop
lahf
fisttps
pop
push
test
pop
clc
or
sub
mov
adc
or
mov
rclb
and
fisttpl
icebp
sbb
pop
es
je
popf
mov
sbb
cs
shll
xchg
data16
rolb
lods
push
inc
ja
add
mov
mov
aad
mov
shl
stc
cs
fbstp
fwait
sbbl
sbb
outsl
andb
outsl
jg
inc
mov
scas
sbb
pop
cmp
inc
adc
aad
adc
lods
loopne
fisttps
popf
clc
mov
clc
rorb
mull
and
es
outsb
pop
ja
or
xor
jp
xchg
mov
fisttps
vpcmpeqd
addb
sub
mov
push
and
sbb
outsb
bound
xlat
mov
outsl
hlt
jg
les
rorl
xor
xlat
jo
nop
xor
clc
add
inc
pushl
mov
fiaddl
aam
mov
xor
push
pushf
pushf
dec
jle
daa
js
test
mov
adc
cwtl
and
aaa
pusha
inc
aam
loop
jge
dec
lds
mov
mov
cmp
lock
xchg
add
sbb
sub
inc
sbb
les
mov
mov
scas
push
mov
adc
mov
aam
call
rcrb
sbb
dec
mov
fs
xchg
adc
jnp
int
je
rcl
inc
je
xchg
nop
ljmp
in
cltd
inc
js
mov
inc
pushf
and
push
insb
jle
jae
sbb
cmp
repnz
inc
loope
mov
and
or
push
lret
popf
loop
pop
mov
dec
adc
add
addr16
mov
movsb
cmp
push
pushf
and
add
or
push
xchg
lock
dec
sbb
movbe
fwait
xor
js
mov
mov
test
testl
mov
xchg
es
test
push
or
xlat
inc
cmp
xor
jp
sub
push
popf
pop
pop
aaa
popa
enter
jne
push
mov
mov
cmpsb
inc
ljmp
xchg
or
sbb
test
adcl
lock
aaa
ljmp
mov
call
and
icebp
jno
call
stos
dec
ja
lock
sbb
dec
jno
fists
adcl
mov
inc
push
xlat
xorb
pop
test
pop
shrb
cmp
jae
filds
add
inc
xacquire
nop
or
add
cmc
jae
incl
push
adc
icebp
dec
lahf
xor
xchg
scas
subl
or
lods
jne
sbb
sbb
xor
mov
rolb
and
push
stc
xchg
loopne
sbbl
jecxz
pop
stos
fwait
push
data16
cltd
mov
add
mov
enter
sub
dec
aam
jnp
cld
lods
test
dec
add
das
mov
lahf
push
adc
pop
out
idivl
cs
adc
adc
mov
inc
lahf
fisttpl
subb
stos
mov
inc
sbb
es
fidivrs
push
adc
pop
imul
les
adc
cmpsb
lahf
inc
push
out
or
fcoms
movsl
scas
jnp
pop
aad
daa
cmp
pmaddwd
sarl
popf
inc
out
stos
iret
rclb
scas
mov
rolb
incb
aaa
aad
ror
sbb
push
out
jb
or
inc
fsub
and
loopne
fldenv
adc
loope
sub
xchg
fidivs
cld
mov
mov
lahf
mov
jns
and
lcall
cmpsl
push
adc
mov
mov
sub
and
push
pop
mov
aam
mov
ret
cs
cmpb
into
fstps
or
xchg
push
cmp
sbb
sub
jns
push
jecxz
mov
out
sbb
sbb
out
dec
cmp
mov
lea
lds
outsb
mov
xor
sub
xchg
add
call
mov
mov
bsr
inc
xchg
or
jo
in
pop
hlt
dec
aam
and
orb
pop
mov
pop
fs
stc
test
std
mov
out
popa
mov
xchg
inc
mov
ljmp
int3
mov
push
dec
out
dec
add
push
sbb
pop
mov
push
mov
inc
mov
jb
cld
xlat
mov
outsb
sbb
pop
test
inc
stos
cs
imul
mov
or
shrb
insl
push
lea
xchg
cmp
jp
out
mov
not
ds
sahf
xchg
call
test
mov
jbe
sbb
cmp
dec
inc
insl
lcall
fisttpl
push
jge
cmp
out
cltd
push
mov
test
in
cwtl
inc
xor
mov
shl
jo
push
jns
pushf
rcr
push
int
dec
rcl
mov
inc
sub
mov
sbb
icebp
jp
adc
fistl
xchg
xchg
cmc
sbb
jl
cmp
cmp
lret
fucom
jge
mov
jg,pn
ret
push
inc
mov
in
mov
cld
add
xchg
shlb
idivb
stos
out
sub
rcrb
jle
sbb
fcomps
xor
add
mov
ret
xor
sbb
push
add
inc
push
std
mov
stos
outsb
and
sub
iret
imul
pop
cmp
mov
divb
inc
call
or
pop
mov
xor
pop
jbe
scas
xor
cmc
lock
pop
push
fdivrs
lahf
mov
sarb
add
mov
xchg
inc
push
addb
mov
lret
fiaddl
mov
fwait
add
xor
fistl
icebp
imul
in
mov
inc
int3
jg
adc
xor
aam
dec
fidivl
mov
push
mov
and
loope
jbe
ja
pop
inc
dec
or
incb
inc
ret
lods
rcrb
pop
pushf
push
sti
popf
pop
hlt
sbb
lret
add
test
xchg
xchg
sbb
fwait
daa
or
popa
in
iret
jo
pop
jp
aaa
jecxz
add
inc
insl
push
cmpsb
add
out
push
add
pop
mov
adc
ss
imulw
cwtl
mov
movsl
addl
hlt
aaa
adc
lret
cmp
loop
pop
leave
cmp
je
adc
lea
cli
add
insb
xor
ss
fstpl
cmc
into
or
push
pop
add
aaa
int3
dec
cmpsl
cmp
xchg
xor
dec
imul
dec
loope
repnz
jle
jne
fistl
std
xchg
sub
cwtl
ljmp
sub
aad
mov
mov
jp
push
fisubrl
cmp
sbbl
push
cmp
aaa
insl
lock
jl
adc
jecxz
pop
inc
adc
adc
dec
xor
push
out
outsb
jp
pusha
and
cwtl
adc
lahf
clc
fdivrl
jmp
mov
or
push
pop
ss
mov
nop
xchg
cld
ss
scas
jne
or
notl
and
subl
cli
xchg
mov
or
imul
pop
clc
aaa
divl
xchg
sub
out
lcall
lock
or
or
push
mov
cmp
mov
leave
inc
mov
shlb
aaa
mov
inc
mov
aad
clc
in
sbb
mov
jge
movsl
int3
clc
sarb
fidivs
push
ljmp
jecxz
ljmp
xchg
lahf
add
push
bound
inc
push
jmp
push
jmp
push
push
fidivs
mov
fs
jbe
loop
jmp
repz
testl
adc
lcall
mov
inc
std
jbe
and
pop
cli
mov
inc
pop
jmp
sbb
sub
ja
mov
jle
mov
or
xchg
movsl
loope
push
fcomp
clc
push
imul
or
sar
insb
std
jae
sbb
loopne
lock
xchg
inc
dec
iret
push
popa
stos
and
lcall
fistpl
out
es
repz
mov
mov
cwtl
or
mov
ja
jb
and
jmp
sti
pop
lret
insb
sti
test
cmc
pop
jb
rorl
mov
adc
mov
xchg
xchg
pop
dec
ja
sub
mov
mov
popf
je
in
mov
adc
fmull
dec
fcoml
push
sub
outsb
cs
cs
shrl
dec
add
lods
xor
sub
rolb
adcb
faddl
mov
inc
shlb
cs
dec
repz
push
neg
push
jne
ljmp
dec
jmp
and
inc
fdivrl
push
in
add
cmp
inc
lods
xchg
lcall
shll
mov
jne
das
aad
je
sbb
addb
mov
add
aaa
add
sbb
or
xor
jae
loopne
out
movsl
mov
push
adc
aad
adc
mov
test
sahf
test
fisttpl
jmp
or
adc
sbb
aad
lods
ret
mov
inc
pusha
push
jge
sti
leave
decb
es
fidivs
cld
add
mov
pop
xchg
shrb
xlat
sub
fisubl
sbb
in
movsb
adc
inc
nopl
bound
pop
adc
dec
xchg
cs
or
nop
or
adc
mov
adc
or
mov
pop
adc
testl
xchg
lea
pop
dec
shlb
cmp
add
push
rolb
loop
add
add
dec
jbe
adc
inc
lock
push
inc
inc
cld
mov
add
lret
fwait
das
addr16
and
mov
sub
mov
mov
push
sub
aad
outsl
jle
pop
loopne
pop
cmp
shll
sbb
push
rcll
dec
js
shlb
sub
jae
mov
or
jnp
sub
xorb
loope
mov
sbb
lcall
jno
clc
out
divl
sub
jo
mov
mov
aas
mov
push
add
aaa
adc
data16
inc
fnstsw
xchg
clc
ljmp
ljmp
idivb
es
push
push
mov
rolb
jo
movsl
rcr
dec
in
push
rcr
or
or
mov
mov
vcvtsi2sd
fwait
adc
cli
outsl
lock
sbb
cmc
add
or
dec
xchg
cltd
push
lock
xor
into
push
cmp
mov
insl
add
rorb
mov
pop
call
push
iret
push
ret
or
sbb
popf
inc
xor
or
sbb
add
aam
add
jo
aam
rclb
cli
jge
cltd
and
mov
rcrl
inc
push
jne
add
dec
mov
dec
addr16
add
outsl
stc
or
add
and
sbb
fcomip
jb
ret
and
hlt
aam
fs
xor
xorb
bound
dec
push
popf
loope
cmp
outsl
xor
pusha
xchg
hlt
shrb
je
test
std
inc
push
in
mov
outsb
and
and
mov
adc
dec
aam
imull
adc
imul
xor
xor
loopne
push
push
enter
add
fldt
xchg
je
out
push
aad
inc
push
xchg
and
add
clc
lcall
test
add
jbe
push
in
inc
and
add
sbb
into
xchg
or
mov
inc
mov
mov
pop
hlt
pop
mov
sbb
jno
or
or
pop
hlt
test
add
or
push
push
mov
inc
inc
mov
rolb
cmpsb
add
inc
movsb
mov
jb
lcall
xor
je
pop
mov
rol
outsb
xor
jne
sub
jne
dec
arpl
push
les
push
and
loop
push
push
inc
lock
fsubrs
pop
cli
inc
cmp
and
mov
shl
outsl
hlt
mov
or
cli
test
mov
cmp
stc
test
mov
ror
loop
sub
cmp
fwait
js
xor
jl
dec
or
movsl
outsl
sbb
xor
add
out
enter
addl
dec
cmpsb
mov
sbb
test
xchg
js
push
and
sub
mov
push
into
jp
cmc
insb
pop
pop
ficoml
pop
bound
jl
idivb
test
xchg
or
push
add
lahf
pop
jg
je
cmp
movsb
push
dec
lock
dec
loope
jmp
imul
mov
aad
push
in
fucomi
cwtl
sar
fcmovnu
loop
fwait
jb
rclb
sbb
in
test
jbe
cmc
sub
aaa
cli
or
clc
cmpsl
cli
push
sbb
das
push
mov
das
push
cltd
unpcklps
scas
je
sbb
or
xchg
add
xchg
jae
out
mov
and
inc
mov
shll
out
cmc
outsb
and
push
out
outsl
pop
jge
gs
mov
push
lods
sub
push
mov
jge
pop
clc
push
dec
xchg
xchg
ficoml
ret
aam
push
push
or
movsb
fiadds
pop
mov
push
shlb
stc
cmpsl
popa
push
and
cli
pop
pop
adc
add
ficoms
inc
inc
icebp
or
jb
insb
mov
adc
mov
je
fldt
cmp
and
ljmp
cltd
mov
mov
xchg
sbb
xchg
pop
jno
pop
scas
or
ljmp
inc
xchg
pmaxub
scas
cmp
cmc
lea
sbb
fbld
pop
sbb
test
inc
lock
icebp
das
ret
pop
addr16
adc
pop
outsl
cltd
push
incl
mov
movsl
xor
shlb
js
push
insb
lahf
ja
mov
mov
repnz
xorb
jp
outsb
push
ljmp
pop
lods
adc
ret
inc
ljmp
es
xchg
pop
xchg
sbb
enter
fwait
in
adc
movsb
cld
push
jg
inc
imul
rol
jno
sti
sbb
in
aaa
mov
incb
pop
popa
push
int3
add
int3
in
mov
sub
mov
outsb
inc
push
cmp
push
mov
outsb
iret
and
sub
addr16
sbb
mov
mov
or
jg
xchg
lods
adc
dec
xchg
das
pop
cmp
shrb
jnp
lock
fisttpl
test
cs
dec
leave
hlt
fbld
cld
jg
aad
js
into
sub
lahf
js
xorb
dec
jno
and
jo
ljmp
mov
movsl
xor
stos
sub
and
cmp
mov
and
mov
imul
dec
sbb
pop
mov
cmpsl
sub
sbb
cmpsb
je
mov
mov
jo
cli
aaa
loopne
or
adc
sahf
xchg
dec
int
mov
outsl
sar
aaa
mov
mov
pop
sbb
mov
icebp
fldt
daa
stos
cwtl
inc
icebp
mov
pop
dec
xchg
subb
sbb
push
sbb
ds
add
mov
adcb
mov
test
mov
ffreep
and
or
mov
rclb
lds
in
fadds
frstor
add
data16
jle
inc
pop
push
adcb
lods
dec
sbb
cmp
pop
sahf
xor
cmp
xchg
dec
or
imul
xor
jp
popf
fs
jge
bound
lahf
jne
sub
add
dec
sub
loopne
or
mov
loopne
mov
popa
mov
add
out
ret
outsb
sub
test
clc
jno
out
mov
cwtl
dec
or
add
sbb
push
enter
cmpb
add
into
aam
sub
xchg
fidivs
xor
ror
test
das
rorb
add
and
mov
js
adc
or
xor
xchg
cld
rclb
xor
push
mov
inc
loope
or
jge
fmull
cmpl
cmp
mov
sahf
pop
sbb
dec
pusha
sub
add
das
cld
push
rcrb
inc
inc
add
je
sbb
push
cmpsl
call
rolb
call
sbb
sub
aam
pop
mov
or
jge
xchg
add
imul
jo
mov
subl
mov
pop
cmp
dec
sbb
xor
std
outsb
jmp
loope
add
jge
and
orb
jnp
jl
sub
les
xor
movsb
push
adcl
sub
stos
gs
lock
xchg
jne
adc
and
xor
and
sub
mov
aad
or
addb
js
idiv
mov
xor
test
fsubl
cmpsb
xchg
mov
sbb
mov
jno
push
pop
mov
and
fs
dec
or
les
pop
popf
jb
pusha
jne
mov
in
fadd
cmp
adc
xor
outsl
xorl
mov
xlat
nop
or
adc
sub
fsubr
jmp
add
xor
shlb
jg
jmp
bound
add
jo
dec
sbb
xor
and
and
jmp
pop
xor
adc
frstor
sahf
fsubrs
dec
lea
mov
pop
mov
sbb
and
sbb
push
test
mov
movsb
in
iret
inc
adc
pop
cld
clc
mov
or
orb
xchg
lock
lock
movsl
cmpsb
mov
aam
add
or
or
pop
xchg
mov
aaa
pop
xor
xor
mov
cmp
aaa
fsubp
xchg
add
ds
bound
or
int3
and
sub
push
inc
or
fcompl
loopne
fcmovne
les
das
sar
and
pop
mov
imul
jmp
mov
movsl
or
sub
imul
dec
in
jae
pop
pop
pop
cmp
jbe
fmull
dec
cld
call
sbb
into
fidivs
clc
mov
mov
add
cmp
mov
inc
divl
dec
fwait
xrelease
add
mov
jle
in
test
insb
lock
inc
insb
aaa
mov
ja
loopne
jge
test
call
call
xor
adc
or
cmp
mov
sahf
call
or
rcl
or
out
jns
xorb
push
mov
scas
scas
push
hlt
test
insb
mov
vpshuflw
cld
outsl
adc
push
jbe
xchg
mov
repnz
lock
jne
outsl
push
aad
popf
and
xchg
mov
out
mov
int
or
xlat
ljmp
js
push
mov
out
pop
faddl
test
adc
push
push
call
filds
mov
loope
sbb
mov
stos
dec
mov
pop
pop
pop
incb
mov
xchg
inc
dec
push
add
xchg
add
subl
or
push
cmp
jp
sub
in
and
in
aaa
ja
pop
xchg
mov
sbb
pop
pop
jae
leave
mov
idiv
lea
pop
and
push
pushf
hlt
imul
jg
cs
bound
cmpsl
add
cmc
aad
pop
or
leave
adc
mov
call
repz
mov
dec
pop
sub
std
fwait
call
repz
mov
mov
loopne
lret
hlt
inc
je
mov
mov
jno
pop
clc
fnstsw
add
cld
jae
xlat
and
pop
xor
imul
lret
stc
out
xchg
xor
in
dec
push
mov
mov
std
ret
jle
mov
add
iret
in
bound
push
sbb
jp
and
sbb
inc
pop
popf
and
sub
outsb
mov
and
dec
jle
notb
aaa
push
cmp
aaa
cmp
mov
and
pop
cld
inc
mov
adc
xchg
jecxz
or
mov
sbb
test
outsb
in
cmp
orl
das
hlt
lods
inc
fcompl
data16
ficoml
fcmovnu
sbb
ds
dec
popf
lea
sub
sub
test
clc
movsb
icebp
es
push
test
mov
std
inc
into
xor
dec
inc
adc
decl
mov
in
pop
mov
dec
dec
sub
dec
sarb
and
aaa
mov
and
inc
cmpsb
dec
js
add
out
adc
jg
pop
inc
push
mov
cli
and
mov
pushf
or
repnz
mov
outsl
iret
sub
mov
jmp
mov
jmp
push
cli
clc
cmp
je
add
bound
mov
ds
mov
lea
maxps
cmp
insb
ret
cmp
ret
mov
sub
mov
sbb
push
add
jg
pop
and
scas
mov
push
clc
mov
xchg
das
rclb
ret
stos
lmsw
mov
push
add
loope
adc
mov
jns
inc
inc
push
sub
push
or
das
push
inc
dec
push
dec
sbb
push
mov
inc
out
out
aad
inc
lds
loop
or
cli
mov
mov
add
mov
mov
dec
and
add
jno
mov
scas
call
sub
or
pop
dec
jnp
je
in
or
ret
cmpsl
insb
push
jae
push
insl
mov
and
dec
imul
rclb
lods
add
dec
scas
inc
jae
adc
add
or
pop
shlb
add
inc
jmp
gs
add
in
add
xorl
xchg
enter
add
scas
xchg
jp
daa
hlt
lods
fstl
inc
xor
mov
mov
push
flds
dec
cltd
pop
jp
fists
mov
in
rol
xchg
jae
das
jge
xchg
sub
mov
adc
sbb
lds
scas
repz
sbb
jp
lds
fisttps
or
and
adc
cmp
inc
das
std
pop
faddp
mov
xchg
sub
fsts
and
inc
pop
sub
test
lods
ss
mov
sbb
or
cmp
lock
fstp
add
in
icebp
lahf
push
pop
xchg
cmp
inc
xor
cmc
push
fwait
and
sub
enter
decb
scas
clc
xchg
in
roll
jno
loopne
aad
cltd
adc
mov
adc
movsb
es
iret
xchg
stc
and
pop
ljmp
mov
xor
aad
clc
lea
jle
jno
insb
jge
adc
pop
or
shl
inc
out
test
cmp
fwait
hlt
adc
and
les
int3
or
ljmp
mov
cmp
movsl
jmp
insb
insl
test
fs
xchg
mov
mov
jmp
ja
cld
mov
jle
ds
or
fldpi
push
push
movsl
outsl
arpl
xorb
pusha
lea
lods
xchg
pop
add
inc
pop
scas
fstpl
mov
mov
jbe
push
add
and
dec
pop
xchg
push
mov
mov
jno
mov
fstpt
loope
mov
fstps
push
lds
add
push
loopne
jle
insb
mov
or
jp
mov
and
mov
sti
ljmp
mov
shll
xor
ret
push
clc
sub
aas
repnz
repnz
cld
push
fmulp
aad
dec
test
arpl
lret
cld
cmc
iret
ss
popa
rcrl
cmp
and
and
stos
inc
test
cmpsb
stc
push
inc
xchg
loopne
aad
clc
adc
sti
lods
adc
add
push
sub
mov
inc
xchg
lcall
push
je
push
sbbb
cld
dec
cmp
pop
jno
mov
adc
shlb
add
clc
gs
pop
imull
lcall
cmp
icebp
out
and
push
add
aas
xlat
push
add
mov
add
jl
out
jne
fistpll
push
mov
sub
pop
stos
jno
mov
sub
cmp
pop
dec
mov
mov
test
bound
test
xchg
aas
sbb
mov
aaa
sub
jge
mov
mov
fs
jne
or
mov
shrb
and
fs
inc
sbb
xor
and
cmpsb
jp
jg
js
insl
adc
adcb
xor
mov
in
stos
lcall
adc
cmp
roll
adc
adc
cmp
repz
jns
outsb
aaa
out
mulb
shll
loop
dec
jp
fidivrs
test
and
fsubp
out
add
adc
push
call
das
lock
lcall
cli
and
orl
testl
mov
mov
bound
loopne
push
jle
mov
mov
imul
popf
and
push
push
jg
pop
cld
das
test
imul
and
je
sub
adc
test
adc
xchg
mov
dec
mov
testb
mov
cli
fildl
jae
dec
subl
sub
and
les
sarl
mov
jns
dec
fistpll
gs
sbb
mov
or
jb
bound
mov
les
sub
add
cmp
dec
fisubs
cld
stc
ret
jo
outsl
push
sub
xchg
jg
js
fwait
lea
xor
push
jo
arpl
sbb
aaa
jb
sub
and
dec
or
mov
rcrl
test
dec
push
loop
pop
xor
or
insb
adc
jo
sti
dec
sbbb
cmp
lds
pusha
arpl
jp
mov
mov
dec
sbb
sub
mov
push
pop
aam
xor
sbb
add
jg
negb
scas
lret
and
into
mov
adc
into
sbbb
dec
push
and
icebp
out
call
sbb
adc
insl
insb
call
and
in
jne
add
mov
popa
test
mov
jbe
mov
loope
loope
mov
adc
jbe
daa
mov
xchg
rolb
roll
cmpsl
mov
repnz
std
push
ss
mov
addr16
xor
dec
cli
sbb
idivl
push
jnp
inc
lcall
push
mov
lret
inc
or
lcall
pushf
lret
mov
fistps
imul
and
icebp
or
adc
sbb
hlt
aas
sbb
add
aam
xor
fcoms
pop
in
cmpb
or
inc
cmc
sbb
pop
xchg
pop
cmp
lcall
sbb
sbb
cld
mov
loopne
mov
dec
or
rorb
xor
stos
dec
dec
test
cmpsl
fwait
in
mov
lea
neg
out
push
or
testl
pop
js
adc
push
jmp
pop
jb
jns
gs
subb
push
popf
mov
fstpt
scas
iret
cs
or
pop
movsl
clc
and
test
xchg
movsl
mov
sub
shll
push
std
mov
pop
movsl
pop
inc
ljmp
cwtl
add
add
inc
aas
fistpl
mov
cmp
mov
inc
pushf
dec
test
mov
jbe
xchg
lahf
jne
push
pop
xchg
shr
aam
jno
imul
into
mov
outsl
xchg
inc
cmp
out
inc
roll
ljmp
fimuls
add
lcall
dec
cmp
ja
loopne
enter
jecxz
rcrl
ds
adc
jno
and
test
imul
imul
or
mov
push
xchg
in
xor
sub
sub
mov
mov
lret
ret
lea
cwtl
dec
jp
shrb
sub
test
mov
push
arpl
lcall
or
daa
jle
scas
pop
shrl
sub
and
call
xbegin
and
in
pop
mov
push
dec
mov
or
negl
cli
lret
mov
or
adc
mulb
fwait
dec
xchg
rcl
les
ljmp
xchg
inc
or
ret
mov
int3
orb
cmc
push
outsl
mov
ret
nop
and
xor
pop
add
sbb
cld
jmp
cmp
les
ret
jb
aad
shlb
sub
mov
loopne
jnp
mov
jmp
gs
pop
or
inc
decb
jmp
fs
daa
mov
js
xor
jecxz
inc
and
cmp
or
sub
mov
fstl
mov
movsl
mov
mov
add
outsl
mov
adc
inc
mov
mov
ss
sub
sbb
mov
cli
pop
jmp
adc
jbe
mov
repz
and
adc
pop
je
popf
jle
les
xchg
aam
pop
imul
ljmp
pop
and
xchg
push
fisubl
inc
orb
sbb
leave
ds
daa
dec
in
xchg
rcl
les
pushl
in
xchg
and
inc
rcrl
cs
sub
imul
idivl
mov
push
fisttpl
daa
adc
inc
mov
pop
or
rcrb
icebp
fildll
popf
inc
mov
bnd
mov
sbb
hlt
fmull
jne
jecxz
push
decl
xor
fmulp
jnp
shrb
aad
or
mov
arpl
cmp
and
movsl
mov
and
mov
mov
push
fucomip
test
sub
mov
dec
sub
orl
nop
imul
faddl
mov
insb
cmc
into
sub
stc
cmp
pop
clc
mov
mov
and
fdivrs
xchg
push
cmc
push
dec
mov
push
pop
mov
mov
dec
mov
mov
cwtl
ja
mov
enter
movsb
nop/reserved
xchg
pusha
jg
adc
mov
popf
pop
in
xchg
cwtl
dec
jb
cli
jg
dec
rcrl
bound
cmp
aad
dec
xchg
cmp
dec
call
frstor
jle,pn
cwtl
data16
mov
xchg
outsb
loop
and
das
or
pop
mov
insl
jo
dec
mov
hlt
movsb
push
lds
bound
or
out
in
sbb
sbb
adc
pop
mov
dec
or
pop
loopne
out
inc
leave
push
mov
push
fucomi
pop
mov
push
xor
mov
mov
fcoml
inc
dec
inc
sar
add
push
cltd
dec
pusha
or
out
mov
and
js
lret
cwtl
sbb
mov
in
mov
inc
rcrb
shl
cmp
movsb
aad
stc
addr16
and
cmp
idiv
decl
jno
cmp
movsb
sbb
cli
or
and
mov
aas
lock
mov
in
sbb
xchg
adc
repnz
enter
aaa
daa
out
ss
nop
push
pop
and
aaa
or
cli
fists
fcoml
nop
nop
inc
adc
pushl
clc
cmpsb
imul
mov
in
lret
cmc
scas
push
sub
xor
call
lcall
inc
mov
ds
xchg
or
loop
cmp
pop
int
sbb
incl
jns
mov
pop
jge
cwtl
lods
mov
pop
mov
xchg
fbld
lea
out
pop
rol
loop
and
fsubs
jle
ret
in
or
js
or
inc
scas
les
das
stc
or
hlt
sbb
pop
and
ja
lds
cltd
jne
cmc
xor
out
mov
iret
cmp
xor
dec
pop
or
inc
xor
inc
mov
ljmp
jl
and
mov
sbb
mov
pop
cmp
pop
call
repz
clc
cs
leave
inc
push
outsl
pop
shlb
test
test
lds
loopne
arpl
int
shrb
add
xchg
pop
cli
filds
sbb
xchg
hlt
push
sub
sub
fnstenv
call
int
int3
pop
lds
setae
pusha
aas
ja
pop
aaa
mov
pusha
and
or
ror
data16
push
ljmp
pop
out
hlt
push
adc
push
idivb
leave
insl
incb
aam
clc
lahf
bnd
push
mov
pusha
jecxz
fidivrs
sbb
mov
sub
cmpsl
arpl
test
cmpb
push
dec
mov
pop
incl
sub
cwtl
mov
fs
xlat
fdiv
sar
jg
jge
push
mov
repnz
jg
sbb
pop
das
mov
addl
pop
aas
sub
test
mov
test
sbb
call
nop
mov
mov
test
xchg
clc
out
cmpsb
out
or
dec
cmp
push
inc
sub
push
inc
test
cmp
sub
push
fistpl
lea
xchg
in
xchg
out
nop
dec
push
adc
mov
hlt
pop
push
and
stc
dec
xor
loopne
std
jne
jmp
inc
dec
adc
mov
mov
and
xor
loop
pop
stos
mov
int
xor
test
pop
loopne
out
mov
sti
fdivrs
test
sbb
pop
sbb
mov
jmp
fcomi
push
test
adc
cwtl
mov
std
sbb
dec
imul
ret
sub
pop
clc
in
aam
das
xchg
push
in
pop
adc
pop
bnd
test
loope
xor
sbb
imul
int
fadd
jmp
inc
dec
in
pop
ljmp
xchg
rorb
mov
ret
add
out
inc
push
movsb
dec
add
clc
adc
lret
stos
cmp
filds
rol
roll
ret
push
clc
test
jmp
test
js
mov
xor
stos
sub
dec
push
ss
das
mov
sub
mov
xlat
loop
pop
mov
popa
mov
arpl
pop
push
shll
add
or
mov
lods
fadds
inc
dec
cmp
mov
inc
add
jg
push
cmpsl
fnstsw
inc
jg
lods
das
call
xor
mov
shrb
pushf
je
sbb
leave
cmpb
push
cmp
push
scas
mov
pop
or
jg
pop
cmp
pop
adc
push
lea
jmp
jg
ljmp
lds
mov
movsl
ficoml
subl
inc
stc
imul
rol
jge
rcrl
stc
bound
mov
aas
in
dec
mov
jecxz
push
repz
enter
push
gs
inc
push
adc
sbb
fs
stc
jg
inc
cmc
sub
adc
xchg
mov
mov
lcall
push
pop
mov
sbb
or
fimuls
rclb
mov
cmpsl
xchg
fs
insb
mov
dec
bound
and
ret
mov
sub
into
iret
call
add
push
and
mov
insl
daa
mov
decl
and
out
add
mov
clc
loop
dec
mov
mov
test
in
cmp
sub
push
adc
and
push
pop
cs
std
mov
lods
adc
shrb
mov
xor
outsb
add
andb
push
in
sbb
ret
pop
cmp
xor
cs
mov
mov
pop
fsqrt
xchg
dec
and
loope
lock
rcr
pop
lcall
mov
mov
stc
mov
lock
jle
and
cwtl
stos
push
mov
clc
call
mov
pop
out
mov
frstor
pop
rcrl
or
push
dec
mov
mov
orl
outsl
cld
fistpl
loop
jle
cmp
jg
jg
jo
and
loop
jno
mov
test
shl
push
sub
dec
jg
xchg
push
cmp
mov
and
cmpb
cli
inc
and
addl
stc
jmp
fsubs
ja
dec
sbb
call
sub
cld
dec
popa
mov
mov
es
push
cmp
push
cmp
negb
fbld
mov
pop
mov
imulb
hlt
mull
xchg
scas
mov
rcrb
ljmp
mov
ret
imul
sbb
jle
mov
pop
ret
outsl
fsubrl
inc
mov
das
xchg
mov
aam
inc
mov
ss
cmc
jnp
fisttpl
add
rcll
sbb
in
jg
lock
cmpsl
dec
sbb
daa
cwtl
xor
dec
and
divb
add
jnp
sahf
in
jnp
aam
adc
mov
mov
scas
mov
or
dec
int3
das
loope
mov
or
repnz
adc
fimuls
mov
or
mov
fidivrl
inc
inc
mov
mov
out
outsl
jnp
cltd
shrl
jne
mov
xor
sbb
in
mov
inc
adc
movsl
fisttpll
mov
int
test
mov
outsb
hlt
sbb
or
and
cmpsl
cmp
or
inc
test
or
push
pushf
mov
mov
inc
mov
xchg
add
xlat
icebp
ljmp
and
lahf
or
ja
ljmp
cmpsl
mov
sub
stos
cmp
std
fists
lret
xchg
sahf
leave
push
inc
movsb
stc
pop
sub
loopne
push
push
add
add
std
outsb
lock
movsl
ss
iret
pop
mov
je
sbb
pop
and
inc
std
data16
mov
or
movsl
jmp
clc
daa
shlb
stos
pop
out
out
and
inc
mov
fcmovu
lahf
adc
fildl
insl
adc
int3
stos
sub
fs
lods
sbb
in
add
sub
cmp
outsb
pushl
xchg
and
mov
inc
inc
xchg
lret
push
jbe
pop
clc
dec
pop
xor
mov
dec
adc
leave
sub
push
jge
mov
add
adc
mov
outsl
pop
bound
mov
mov
adc
mulb
xlat
fcmovnbe
adc
gs
nop
jg
loop
push
gs
dec
test
push
add
mov
xchg
in
stos
test
xchg
adc
lds
nop
pop
pop
subb
sahf
jmp
cmp
dec
pusha
orb
jb
test
mov
sub
popa
xor
test
mov
pop
jecxz
mov
dec
pop
push
push
jo
andb
mov
or
loop
xor
pop
mov
adc
imul
push
jmp
pop
mov
push
int3
pop
mov
lea
xchg
dec
orb
or
stos
pop
xchg
mov
sahf
imul
mov
fs
dec
popf
add
daa
js
push
jecxz
xor
inc
add
setne
es
imul
pop
push
faddl
movsl
or
js
cld
jae
fcompl
call
ljmp
or
call
aam
pop
adc
adcl
and
adc
rcrl
scas
mov
or
add
lods
call
adc
aas
or
sahf
aas
xor
push
popa
lods
sti
mov
jo
test
mov
mulb
ljmp
inc
insb
inc
cli
adc
ret
mov
insb
push
rclb
inc
xor
inc
lock
pop
adc
jge
push
loop
js
mov
lret
pop
pop
test
mov
jle
and
push
jmp
mov
lods
das
adc
incl
out
jecxz
dec
mov
inc
and
mov
adc
fldt
cwtl
push
add
mov
or
xchg
shlb
mov
add
xor
clc
mov
test
loope
sub
fldcw
js
hlt
or
adc
fistpll
sub
stos
dec
movsb
subb
shll
dec
and
and
adc
xor
adc
adc
mov
cltd
and
ja
insb
xchg
cmp
cmp
mov
or
xor
inc
adc
jp
mov
jecxz
push
jb
and
sbb
imul
cmc
sahf
call
mov
xor
dec
decl
pop
adc
pop
not
test
bound
ljmp
divl
sub
xor
cltd
decl
xchg
test
push
adc
push
pop
cld
ljmp
pop
sub
sbb
not
mov
mov
in
in
dec
inc
cmp
scas
push
in
je
rol
sar
and
mov
mov
xchg
jmp
mov
add
adc
in
xchg
mov
pop
iret
lahf
daa
add
jl
fcmovnu
adc
add
sub
jge
jnp
push
rclb
frstor
push
add
outsb
and
inc
aam
xchg
adc
das
lahf
arpl
push
fisubs
dec
inc
mov
dec
push
xor
push
mov
sti
shlb
pop
dec
les
mov
add
add
leave
sbb
cltd
int3
add
negb
mov
mov
xlat
pop
push
pop
adc
add
add
and
pop
loop
gs
sub
push
lret
add
pop
outsb
xor
or
loop
mov
cmpsl
jbe
test
aad
mov
rolb
pop
mov
mov
cmp
jge
mov
cmp
cmpb
push
sahf
mov
mov
pusha
sahf
sub
dec
mov
push
push
mov
pop
lret
adc
mov
pushf
jo
adcb
xor
in
adc
inc
loope
mov
mov
jne
push
jne
aaa
popf
mov
adc
test
rorl
push
inc
repnz
lcall
ds
dec
or
mov
js
push
pushf
adc
xor
movsl
loop
test
addb
iret
dec
mov
and
or
adc
aam
adc
ja
test
jb
mov
and
add
ljmp
xchg
jecxz
adc
push
aas
add
leave
cld
push
mov
lea
push
add
dec
or
mov
insl
mov
xor
icebp
xchg
dec
mov
mov
and
lods
and
insl
mov
clc
testb
or
pusha
adcb
int3
es
roll
or
push
xor
mov
and
cmp
jg
dec
rolb
sub
dec
cmp
std
xchg
test
xor
std
sbb
inc
fwait
push
iret
jecxz
sarb
sub
loopne
les
loop
and
add
pop
inc
cmp
and
pop
enter
and
adc
ja
in
push
ljmp
or
xor
das
shlb
cs
bound
or
hlt
call
xchg
cli
mov
fimull
and
mov
ret
es
icebp
inc
push
add
outsl
mov
xchg
or
xchg
mov
mov
mov
mov
push
or
lods
je,pn
push
dec
sub
fdivs
sub
pop
cs
dec
incb
xor
stos
push
mov
hlt
rcl
mov
mov
and
add
repnz
lock
jg
in
jge
shl
push
rcll
mov
mov
test
mov
lcall
cld
mov
and
jge
lret
cmc
add
repnz
in
leave
inc
dec
cmc
dec
jge
jl
stos
scas
out
mov
pushl
inc
jnp
xchg
mov
fildll
lods
ss
ret
mov
rcll
or
and
push
hlt
and
inc
enter
out
jo
or
outsl
sarb
xchg
lcall
inc
push
add
add
pop
aaa
jmp
cmp
mov
sub
pop
fbld
insb
pop
push
fistl
outsl
mov
mov
in
sub
adc
cld
sub
push
push
test
aaa
inc
cld
incl
cld
lods
inc
mov
sbb
pop
xor
std
jmp
sub
fisubrl
jne
push
ret
xchg
fnstcw
add
ds
pop
ret
cli
outsb
fidivrl
inc
mov
xchg
sub
aaa
sub
pop
int
lcall
sbb
daa
adcb
iret
pop
call
pop
icebp
cmp
scas
in
out
nop
in
incb
ljmp
icebp
icebp
fsubrs
adc
mov
sub
jle
inc
push
and
xchg
mov
cs
das
pop
mov
inc
sub
mov
rorb
iret
out
xor
mov
jle
lea
sub
clc
cmp
aam
inc
xchg
mov
mov
aaa
mov
scas
xchg
leave
and
xchg
and
inc
call
in
je
mov
inc
inc
jge
dec
loopne
mov
movsb
pop
stos
mov
mov
jge
pop
call
icebp
fwait
push
subl
scas
inc
or
outsl
scas
stos
jo
mov
mov
push
mov
push
clc
mov
jecxz
repz
lods
add
mov
xchg
push
xor
push
lods
jne
sti
stos
inc
adc
jae
jnp
mov
inc
sub
or
jmp
mov
dec
clc
jbe
loope
nop
cli
inc
xchg
inc
add
dec
dec
lock
clc
inc
setl
cltd
mov
jmp
scas
lds
lret
pop
clc
push
outsl
mov
cmc
lahf
cld
mov
das
scas
lods
sub
out
push
leave
push
aaa
adc
stos
out
jne
sbb
das
fdivrl
cs
shlb
ret
les
sbb
xlat
mov
mov
addb
sub
nop
xor
sub
cld
xchg
movsb
addr16
mov
sbb
pop
xchg
outsb
aam
ss
movsb
push
stc
movsl
sbbb
fildll
outsb
das
adc
jno
fdiv
inc
jecxz
xchg
pop
clc
data16
jno
call
outsb
cmc
push
in
movsl
mul
shll
imul
sub
stc
xor
jg
inc
lcall
sbb
add
jge,pn
mov
es
add
cmp
mov
dec
jge
xchg
jl
cld
outsl
lock
incb
cwtl
mov
dec
inc
mov
add
sub
bound
inc
subb
and
js
push
adc
mov
cmp
dec
adc
adc
inc
push
rorb
cmp
pop
push
insb
sbb
xor
das
int3
ret
sahf
orb
xchg
scas
add
mov
daa
cltd
mov
stos
jb
lahf
jge
sbb
add
xlat
xchg
adc
or
dec
les
adc
and
adc
repz
xor
loop
lds
adc
ret
sbbb
inc
inc
ja
mov
push
xor
fadds
testb
xor
es
cmp
bound
mov
mov
mov
ret
test
sub
xor
.byte
.byte
pop
dec
hlt
lcall
rcll
jns
mov
mov
int
lcall
ret
or
in
and
and
mov
pop
ret
rorb
sbb
xlat
fldl
nop
pop
push
add
sub
fistps
add
nop
mov
nop
add
out
jge
nop
aaa
dec
or
adc
push
dec
add
jg
sbb
dec
mov
and
adc
adc
and
nop
and
fistpl
adc
add
nop
or
add
in
imul
add
inc
sub
mov
mov
and
or
or
addr16
bound
and
adc
inc
cmp
and
fidivrl
fcmovnu
and
or
and
stos
sbbl
mov
lods
adc
inc
sidtl
mov
fisubl
mov
mov
sbb
lods
add
nop
and
mov
fisubrs
mov
jl
pop
imul
pusha
testb
add
xor
movsl
and
lcall
popl
and
insl
fldl
add
inc
add
and
subl
inc
arpl
insl
sbb
or
stos
popf
pop
adc
and
and
sub
leave
fiaddl
shlb
and
mov
inc
and
ja
test
sub
mov
push
imul
jne
dec
pop
adc
xor
test
sbb
sub
add
add
jmp
lock
add
add
leave
mov
add
add
sar
lcall
or
add
xor
add
nop
cs
xor
cmp
mov
neg
add
dec
add
xchg
in
mov
xchg
inc
push
enter
divb
call
add
leave
add
add
add
clc
add
in
arpl
lahf
push
and
sbbb
add
adc
add
mov
sti
jg
movsl
pop
psllq
lods
cmp
mov
add
stos
mov
popa
mov
mov
add
add
jg
xchg
adc
andb
mov
or
enter
pop
mov
add
jo
add
add
cs
inc
add
sbb
pop
mov
jle
filds
fildl
add
or
aaa
add
pop
clc
test
mov
and
push
lret
data16
xchg
je
add
fadds
lea
sbb
jbe
incl
add
je,pn
cltd
add
inc
add
sti
out
mul
mov
ds
xor
mov
or
mov
add
add
test
or
jp
clc
outsl
jnp
mov
scas
mov
lahf
inc
sub
push
cmc
loope
fisttpl
add
movsl
add
mov
adc
enter
add
dec
add
or
or
adc
add
sub
std
xor
push
out
dec
sub
xchg
add
out
mov
sub
das
nop
loopne
mov
popf
loope
mov
ljmp
mov
in
or
insb
jo
sti
cmc
les
xchg
outsl
cmp
jecxz
or
mov
cmp
inc
and
not
inc
dec
sub
sub
add
dec
jmp
push
iret
imulb
decl
movl
je
inc
add
mov
mov
or
adc
mov
cs
pop
add
mov
repz
jle
add
neg
mov
sbb
pop
les
dec
mov
imul
scas
insl
in
mov
sbb
or
xor
not
insb
sbb
dec
inc
jnp
inc
mov
jg
lds
je
fistps
jne
add
mov
mov
aas
jmp
sub
mov
mov
out
xchg
add
js
adc
neg
insl
sbb
adc
imul
enter
lahf
or
test
pop
js
push
cltd
and
push
pop
fdiv
lret
mul
jecxz
add
jne
mov
or
aad
sub
and
es
and
hlt
fcomi
loope
cwtl
adc
adc
dec
mov
mov
fimuls
in
xlat
xor
lret
push
ja
movsb
shlb
cld
test
adc
gs
or
sbb
out
aaa
sbb
fdivrs
dec
mov
sub
adc
scas
or
and
add
test
add
int
cli
add
push
js
sbb
adc
pop
push
mov
xor
adc
mov
and
mov
cmp
jecxz
mov
outsb
aam
sub
ret
ljmp
mov
adc
sub
sbb
sbb
int3
pop
aam
pop
or
jns
repz
jne
or
es
loopne
jne
fldt
fwait
loopne
jg
int
loopne
xor
cs
sbb
push
adc
cli
xchg
adc
mov
fcomi
out
bound
inc
scas
repnz
mov
dec
hlt
sub
mov
lret
fists
sar
scas
out
ljmp
xlat
das
dec
push
call
adc
sbb
in
jle
push
call
pushl
push
lea
inc
ja
mov
fwait
xchg
mov
stc
xlat
out
lret
dec
hlt
xor
fsub
dec
imull
mov
ret
adc
cmp
lods
popf
inc
loopne
pop
and
xor
mov
xor
mov
hlt
mov
push
pusha
add
xchg
add
iret
mov
outsl
pop
add
jb,pt
gs
mov
pop
sub
fchs
hlt
sub
decl
pmaxub
neg
sub
imul
pop
add
dec
repnz
or
fisubs
cmpsb
stos
pusha
mov
mov
cld
inc
dec
out
or
les
shr
add
popl
ficomps
gs
mov
or
cmp
xchg
or
mov
clc
inc
addl
fcompl
cltd
or
imul
das
lock
push
test
int3
inc
add
mov
xchg
mov
add
push
pop
clc
adc
mulb
sub
xor
push
sar
fldt
add
sub
push
pop
test
add
lea
jge
stos
js
and
cmp
rcll
out
sbb
add
jnp
sbb
repnz
mov
fistps
adc
adc
outsl
lock
push
cmpsb
add
bound
mov
decl
jnp
dec
sub
lods
add
or
or
int3
movsl
dec
sbb
inc
jp
pop
mov
mov
add
in
and
mov
xlat
popf
int3
push
imul
mov
add
pop
sbb
outsl
lcall
popf
out
mov
sbb
cld
mov
push
sub
fisttps
stos
or
sbb
movups
pop
add
and
cmp
add
data16
cmp
pusha
jnp
jge
push
cmp
movsb
push
clc
outsl
push
lods
jecxz
mov
cld
jbe
repz
cld
or
xchg
roll
scas
incb
in
test
fidivl
add
das
stc
std
jo
std
shrl
xchg
xor
cli
and
icebp
fwait
pop
dec
sub
fidivrs
push
sbb
lods
scas
sbb
xchg
insl
popa
loope
mov
pop
jg
xchg
ljmp
adc
cmpsl
sbb
in
jb
push
mov
std
dec
push
sub
add
jmp
sub
mov
adc
add
lock
notl
jg
jl
or
mov
push
imul
xchg
aad
mov
sar
mov
out
loope
in
or
stc
rorb
jno
adc
mov
int3
add
push
out
insl
js
test
or
mov
lock
aaa
xchg
fcompl
sbb
mov
mov
jne
andb
inc
sbb
dec
cwtl
xlat
mov
add
pop
out
outsb
out
loope
cwtl
pop
outsl
bound
sub
and
sti
cmp
cmc
mov
push
cmp
call
aaa
pop
hlt
sub
lods
dec
sti
jmp
add
sub
outsl
mov
pop
imul
and
addr16
mov
jmp
outsl
or
adc
jns
xchg
lahf
orb
fisttps
sbb
xor
adc
push
sbb
mov
faddp
roll
jle
in
mov
inc
jnp
dec
enter
pop
pop
in
dec
iret
lds
pushl
outsb
cld
adc
movsb
pop
or
sahf
sub
ljmp
hlt
rcrb
xchg
cli
in
inc
test
lahf
xor
adc
add
sub
jle
cld
or
icebp
or
mov
xchg
jecxz
fistpll
shrl
jbe
pushf
pop
mov
inc
imul
aaa
loopne
pushl
adc
jo
leave
lds
je
fsubrs
cld
ffreep
xchg
pushf
push
push
ds
sbb
jle
mov
dec
pop
ds
in
leave
sub
mov
push
pop
movsl
sub
ja
lea
jmp
push
sbb
xor
pop
incl
sbb
and
jb
pop
cmpsl
ss
inc
repz
and
aad
push
mov
sbb
pusha
scas
cmp
push
roll
dec
fists
inc
cmp
cmp
xchg
cmp
xchg
pop
cmc
fwait
jmp
adc
inc
push
or
fldl
sbb
ret
jmp
pop
enter
mov
push
add
mov
div
fiadds
cld
or
test
inc
or
mov
ds
sbb
ret
sub
in
cmp
icebp
mov
shl
mov
jg
jl
mov
lods
and
popa
add
xor
fbstp
cld
cwtl
pushf
lock
iret
mov
mov
lods
fiadds
pop
inc
add
xchg
ret
push
adc
shll
sub
inc
mov
sbb
jb
jmp
outsb
out
les
add
jl
pop
pop
cs
add
daa
sahf
xor
sbb
fisubrl
or
divb
aam
ds
in
inc
cmp
adcb
iret
outsb
mov
shll
xchg
xchg
mov
add
stos
mov
dec
dec
jae
clc
pop
xor
jmp
adc
mov
sub
jp
ja
fcomps
stos
imul
dec
fisttps
movsl
add
push
inc
jb
jnp
jecxz
repz
jp
into
adc
mov
sbbb
adc
mov
insb
jns
movsl
ret
cmp
clc
das
xor
jl
jb
xor
cmc
push
mov
mov
and
xor
add
out
xor
adc
rcl
add
push
add
mov
out
pusha
pushf
daa
and
int
int3
push
pop
mov
ret
inc
sub
mov
std
ss
lods
cs
adc
in
in
aas
je
add
lds
add
mov
jb
mov
inc
andb
xor
push
xorl
lcall
leave
and
mov
push
sbb
add
push
insl
cmc
add
pop
std
mov
mov
test
jno
cmpsb
in
call
std
loope
mov
add
aad
push
pushl
or
shrl
cli
adc
pop
aaa
inc
aaa
mov
jp
mov
ret
or
adc
jo
imull
test
add
and
std
outsl
xor
pop
adc
inc
faddl
fisttpl
fldt
push
dec
mov
mov
jns
or
jge
mov
into
dec
leave
jns
inc
ja
mov
mov
push
mov
fsubrl
mull
add
cmpsb
and
rcr
mov
cmpsb
test
pop
xorl
shrb
movsl
outsl
std
lret
add
sbb
xor
xchg
fnstenv
and
imul
imul
push
movsl
pop
mov
mov
cmc
in
add
inc
daa
lret
adc
push
xlat
enter
ss
test
jg
popf
push
sti
notb
jl
add
ficomps
xchg
loope
fildl
loopne
or
das
sbb
pushf
pushf
adc
jg
iret
or
jecxz
inc
pop
xor
imul
je
inc
xorl
cld
test
daa
cltd
mov
cmp
fsubrp
das
mov
or
ficoml
cmp
sti
or
cltd
roll
jae
push
stos
mov
mov
mov
xor
or
add
push
adc
push
push
cwtl
je
js
mov
xchg
xchg
push
outsl
add
inc
imul
mov
add
xchg
jns
add
mov
int
test
fldt
jl
adc
arpl
out
dec
adc
sti
lods
inc
out
ret
cmpsl
orb
icebp
rcll
push
into
fucomp
push
in
cmc
pop
push
and
pop
fstl
lahf
adc
ljmp
cmp
loop
out
loope
mov
xchg
movsl
dec
sbb
mov
jg
xor
jecxz
push
sarb
ret
inc
ret
xchg
enter
dec
decl
jnp
inc
stos
pop
mov
das
push
das
xor
jae
mov
ret
andb
fiaddl
test
jne
or
cmp
loopne
sbb
clc
push
mov
adc
mov
mov
mov
scas
mov
fisttps
hlt
jp
jbe
add
pop
out
ret
xchg
inc
mov
cmp
ja
sbb
add
xor
test
sbb
add
loop
rcr
or
test
decl
or
divl
mov
sahf
pushf
leave
mov
aas
sub
push
loopne
ds
and
lret
loop
shll
cmpb
inc
test
insb
out
add
pusha
pop
idiv
mov
nop
xor
incb
or
sti
push
aad
sbb
repnz
filds
pop
ret
repz
das
shrl
pop
mov
or
adc
xchg
jae
in
lret
mov
cmp
out
cmp
xchg
pop
add
sub
push
sbb
xchg
outsl
fld
aas
int3
data16
out
je
mov
adc
and
dec
inc
ret
insl
test
cmp
and
push
out
inc
nop
ret
mov
movsb
sub
adc
stc
inc
negb
mov
stos
sbb
push
sub
push
cmp
insl
pop
dec
jecxz
movsl
in
dec
lock
mov
rcll
xchg
pop
sbb
dec
ret
inc
xchg
push
mov
hlt
sbb
sub
call
or
and
mov
cmovns
test
ret
scas
loopne
test
sbb
ret
ret
popa
mov
or
negb
push
push
cmpsb
rolb
mov
pop
sub
mov
iret
adc
mov
out
xorb
mov
push
icebp
xchg
scas
ret
scas
or
xor
push
fcmovnbe
incl
push
and
jbe
stos
loopne
xlat
jno
dec
fcomip
add
sub
repz
shrb
and
ja
decl
adc
jp
inc
inc
mov
push
mov
frstor
stc
pop
arpl
mov
cmc
aad
fdivrs
fdivrp
cld
or
insl
adc
cltd
or
fs
sub
sub
sbb
xchg
xchg
xor
aaa
outsb
xor
adc
lret
jle
mov
add
enter
lcall
sub
sub
pusha
cs
addr16
insb
xchg
call
pop
or
push
mov
adc
and
xlat
call
decb
xchg
inc
add
jle
cli
insb
sub
adc
popa
or
loope
or
adc
insb
dec
mov
mov
idiv
mov
mov
sbb
cmp
fnstenv
movntq
movsl
push
in
jno
jecxz
call
xchg
push
mov
mov
aaa
push
shrl
push
mov
cld
ljmp
push
add
andb
pop
call
add
push
sub
pop
popf
lret
adc
leave
fidivrs
sub
popf
sarl
sub
or
pop
pop
adc
mov
add
mov
jae
pop
sub
ljmp
dec
push
stos
add
jmp
popl
pop
int
push
in
mov
push
or
jp
and
or
jg
cmpb
xor
add
dec
xor
dec
scas
adc
mov
fidivrl
shrl
push
push
ret
adc
sub
jg
decl
xchg
inc
pop
lret
or
mov
add
jno
xor
push
sub
jne
aam
adc
mov
in
out
aam
test
mov
pop
std
sbb
jmp
repz
jmp
cld
out
adc
mov
mulb
not
mov
lock
xlat
sbb
add
mov
aaa
add
sub
add
aas
test
imul
pop
xor
mov
jecxz
daa
test
add
cld
pop
add
dec
add
sub
pop
inc
mov
and
jmp
fcompl
imul
or
mov
cmpsl
add
mov
sub
fldl
mov
pop
pop
xor
pop
jmp
test
decl
insb
mov
xchg
adc
dec
repz
add
lahf
or
icebp
pop
enter
add
xchg
fadds
pop
enter
sbb
pop
add
mov
and
mov
insl
fstp
lea
add
sub
int
test
imul
adc
adc
xor
inc
mov
outsb
add
push
repnz
fisubl
or
mov
stc
mov
and
imul
adc
xor
outsl
mov
mov
mov
inc
add
and
imul
or
pop
adc
sbb
cmpb
pop
out
subb
push
mov
fimull
or
test
sub
and
add
mov
ss
and
sub
lock
or
jae
test
jp
movsb
sti
fists
rolb
mov
adc
fldt
ljmp
enter
int
das
xor
mov
pop
and
repz
fisubrs
and
sub
lea
push
push
push
push
xchg
movsl
inc
xor
jo
jae
fcoms
push
jmp
stos
sbb
or
push
mov
sbb
or
push
adc
sbb
add
fcmovnu
jecxz
mov
sbb
rcl
aas
or
ds
popa
fistps
sub
jb
ja
add
pop
jge
pop
fisubrl
lock
dec
cmp
dec
sbb
jl
or
out
not
xor
jbe
push
icebp
lods
clc
jnp
cmp
ret
jbe
push
add
iret
loop
int
xchg
mov
pop
out
cmp
jno
sar
idivb
in
dec
jle,pt
lahf
and
sti
test
jae
jecxz
mov
push
pop
add
xchg
out
jo
das
jo
cmc
leave
jne
xor
sbb
jne
and
push
xor
add
out
sbb
fstl
adc
rorb
hlt
and
mov
arpl
clc
inc
inc
and
ja
fstp
sbb
inc
add
sti
or
sarb
dec
add
imul
aaa
hlt
call
call
push
push
aaa
jne
jbe
adc
lea
push
fdivs
rclb
stos
push
sbb
and
mov
mov
addb
jp
sbb
dec
fnsave
push
pop
divb
lods
mov
mov
loopne
sbb
dec
adc
adcb
clc
adc
daa
loopne
pop
adc
test
push
dec
or
pop
adc
sub
jb
insl
aam
mov
iret
lods
outsl
bound
ja
lret
jmp
add
and
rcll
sub
jo
negb
int3
in
out
std
push
xchg
movsl
stos
mov
subl
loopne
in
js
pop
cli
scas
iret
in
addb
pop
sahf
push
ljmp
mov
shl
cmp
push
mov
mov
mov
xchg
lods
and
mul
cmp
inc
pop
jl
or
js
jge
std
fistps
add
and
jge
test
test
int
es
or
rcr
add
and
or
mov
inc
outsl
ror
sbb
cmp
out
adc
je
jb
addr16
adc
test
or
mov
das
cmc
adc
push
pop
jp
pop
or
iret
repz
mov
neg
or
in
mov
inc
ds
loope
add
cmp
aam
push
add
add
dec
ss
dec
sbb
mov
out
cmp
jecxz
outsb
xlat
pushl
mov
xchg
jnp
lods
cld
cmp
and
sti
or
scas
xor
jle
cmpsb
loopne
es
adc
lcall
mov
fs
add
fwait
inc
out
xor
mov
mov
ficoms
mov
lds
sub
out
call
mov
mov
xlat
sbb
popl
dec
out
push
xchg
xor
dec
mov
xchg
negl
mov
mov
sahf
pop
jg
inc
pop
shl
jno
int
mov
sbb
aaa
ficoml
sub
mov
xor
mov
or
inc
aas
inc
sub
repz
lock
pusha
fs
in
bnd
lds
xchg
nop
push
pop
push
lods
lds
ret
stc
and
orb
mov
sahf
sbbl
jg
push
mov
sub
insl
cltd
ljmp
aaa
in
xchg
push
sbb
sub
in
icebp
outsl
fidivs
pop
mov
xor
in
mov
xchg
out
cli
rcl
sub
xchg
cwtl
mov
dec
and
aam
out
clc
test
mov
fsubrs
outsb
stos
into
lret
sbb
inc
out
fisttpl
fistpl
cmpsb
sti
inc
popf
jns
testb
mov
mov
inc
in
in
push
jmp
test
push
pushl
mov
cmp
int
ror
pop
adc
inc
adc
mov
mov
lahf
test
xor
mov
mov
lock
aas
imul
cli
lods
cmpsl
sub
mov
or
mov
mov
mov
loop
add
rorb
fwait
add
out
aad
divl
outsb
test
inc
shll
ss
push
vcomisd
mov
lods
addr16
or
pusha
push
out
mov
inc
xchg
sub
stos
jbe
xor
or
jg
cmp
push
dec
push
fdivrs
dec
out
insl
cmp
das
rol
push
lret
fistl
cmpsl
mov
mov
test
ljmp
and
inc
pop
xor
push
aam
jmp
in
cmp
outsl
dec
xor
or
enter
add
adc
imul
loopne
sub
cmpsl
or
xor
repnz
and
pop
enter
adc
scas
pop
loopne
fiadds
into
out
inc
add
mov
inc
push
push
arpl
fidivrs
inc
sbb
adc
add
pusha
jbe
into
pop
in
add
inc
dec
xchg
mov
push
sbb
mov
mov
cmp
mov
or
lcall
jne
inc
or
mov
xchg
jl
cmp
add
or
loop
sahf
adc
mov
xor
mov
test
mov
popa
mov
cli
test
jmp
mov
add
in
test
pop
adc
xor
cmp
negb
sbb
and
xor
negb
jno
mov
or
fiaddl
sbb
dec
lahf
adc
fld
lea
add
mov
popf
fadd
test
or
sub
ret
testl
cmp
adc
mov
cmpsb
test
btr
push
add
sahf
jnp
or
push
nop
cmpb
int3
pop
and
sub
or
lods
std
inc
and
cmp
add
pop
sbb
adc
and
cmp
mov
xchg
mov
lahf
cld
cs
lcall
nop
or
xchg
lcall
addl
mov
repnz
bound
neg
push
mov
ljmp
rol
js
or
xchg
mov
lret
inc
icebp
mov
mov
sub
and
add
fcoms
or
add
scas
or
insb
jle
inc
filds
mov
dec
fcmove
sub
mov
jle
dec
cmp
ret
and
fsubr
call
add
das
shrl
mov
push
xor
movsb
dec
xchg
add
gs
add
add
outsb
jne
test
adc
adc
pushf
mov
inc
mov
stos
jl
xor
pop
std
ljmp
fs
es
loope
cld
push
dec
lahf
ljmp
lods
or
fyl2xp1
pop
std
and
pop
mov
stos
xorl
jl
jmp
or
addl
xchg
fs
mov
add
and
rcrl
addr16
rcrb
stos
ljmp
icebp
pop
cwtl
xchg
adcl
loopne
lods
adc
dec
mov
call
clc
sub
mov
sbb
add
cs
out
nop
movl
lcall
cmp
stos
lods
imul
into
xor
and
enter
cld
push
fmuls
div
mov
adc
sti
mov
xor
pop
bound
jp
sbb
jne
iret
adc
jmp
das
pop
push
dec
inc
jb
inc
ficoml
mov
outsl
mov
lods
mov
ficoms
fwait
sbb
jge
std
pop
clc
mov
inc
sub
inc
ret
push
push
fistpll
dec
outsb
mov
mov
sub
cmp
inc
xchg
push
popl
mov
or
sub
jecxz
xchg
subb
dec
aam
add
decl
push
cmpsl
mov
lahf
stos
outsb
cmp
dec
pop
or
aas
mov
imul
loop
in
js
sub
lahf
push
xchg
sbb
adc
popf
lock
or
mov
jb
xchg
sbb
sbb
es
int
mov
mov
arpl
push
in
ret
push
popf
aad
xor
and
pop
inc
cmpsl
dec
cli
sbb
jge
ljmp
jecxz
sbb
xor
or
adc
in
ljmp
jp
in
ss
lods
dec
out
sub
hlt
and
ror
stos
xchg
rcrb
add
sbb
or
jle
sbb
push
xor
cwtl
adc
mulb
and
int
jbe
and
cmp
xor
lahf
add
fcomip
loope
pop
sub
jo
rolb
cwtl
sbb
cmc
mov
add
pop
enter
mov
lcall
or
pushf
loop
adc
testl
mov
cltd
pop
les
testl
or
in
xchg
das
adc
sub
loopne
add
sbb
or
push
lock
jge
insl
ret
lea
fsubs
or
dec
adc
jmp
jns
jge
sbb
mov
clc
dec
or
addr16
clc
or
or
xorb
jmp
mov
add
gs
push
ljmp
insl
sti
popf
jne
fisubs
lahf
std
and
out
xor
mov
jo
ja
insb
add
clc
bound
jno
es
xchg
lods
fdivrl
or
sub
jne
cmp
aaa
and
or
sti
add
rolb
or
adc
es
sahf
test
add
cmpsl
dec
pop
sbb
mov
cmp
cmp
adc
jnp
jp
icebp
mov
adc
shll
lret
js
cmpb
add
xorb
xor
adc
mov
fildl
arpl
push
loopne
sbb
inc
shrb
sbb
dec
inc
sub
mov
jmp
adc
into
xor
inc
xor
pop
icebp
jg
inc
cmpsb
inc
jl
mov
imul
fwait
call
sbb
cmp
sbb
add
lods
add
fdivrs
xor
sub
lock
cltd
jnp
jnp
push
or
push
jge
adc
mov
xchg
sbb
mov
loopne
inc
adc
outsl
loope
imull
mov
test
mov
stos
mov
inc
cmp
loop
cltd
and
pop
fdivs
sbb
sarl
pop
dec
sbb
lret
mov
add
sbb
pop
or
sahf
sub
sahf
or
xor
popf
pop
ret
adc
loopne
cmp
jae
mov
cmc
xlat
mov
in
inc
cld
scas
mov
clc
or
idivl
or
xchg
clc
fs
outsl
pushf
mov
les
insb
jmp
adc
xorb
xor
and
rol
or
sbb
les
jl
cmp
int3
lock
sub
cmpsb
orb
repnz
push
jo
jg
loope
test
testb
das
mov
pop
insl
mov
cwtl
negl
jle
mov
fcmovne
rolb
pop
adc
lcall
dec
js
and
xchg
loopne
incb
test
jb
dec
test
ficomps
sub
popl
sub
je
adc
sub
je
scas
and
pop
imul
cld
sub
or
dec
les
and
push
out
clc
sub
add
xor
and
and
jp
xorl
sbb
cmp
movsb
js
mov
mov
and
cwtl
loope
cmp
cld
movsb
ja
sbb
mov
push
pop
cmp
punpcklwd
addb
mov
adc
clc
jae
aad
jae
sarl
jns
xchg
mov
loop
adc
add
outsb
sbb
or
adc
bnd
idivl
mov
pop
fidivl
insb
xor
lock
jne
dec
loopne
adc
xor
sub
lock
and
daa
fnstenv
pop
ret
cmpsl
add
or
add
xor
adc
adc
or
xchg
or
cmp
pop
jnp
pop
pusha
sbb
test
es
bound
jae
fsubs
data16
loopne
sbb
push
loopne
dec
inc
sbb
sub
push
mov
sti
and
or
sbb
test
ja
pop
clc
ss
jp
add
leave
sub
dec
jne
call
mov
and
cmp
pop
inc
in
lock
es
sbb
fnstcw
xor
xor
push
or
mov
sub
mov
adc
fs
or
push
lock
and
test
add
adc
sbb
addl
clc
out
or
push
or
pop
sub
add
lret
aad
cmp
jge
dec
sub
adc
stos
push
fsubl
sbb
movsl
xlat
fdivrl
pop
inc
mov
xchg
icebp
dec
adc
cmpsl
cmpb
ret
cs
or
adc
push
push
das
imull
jae
pop
dec
jmp
push
mov
dec
pop
arpl
add
rcl
mov
or
mov
pop
divb
xor
mov
add
push
shr
adc
xchg
pop
sbb
or
sbbl
cmp
xor
push
mov
or
jmp
inc
pop
and
iret
adc
rorb
sti
jae
roll
rcll
push
int
dec
scas
les
call
aam
mov
xor
add
fsubrl
cld
sbb
or
or
int
xchg
outsl
push
mov
cmp
nop
xchg
adc
mov
les
divl
cmp
mov
and
jl
mov
sbb
add
jne
pop
ret
pop
rorb
mov
call
cmp
mov
test
daa
negl
dec
inc
mov
or
or
mov
in
in
xor
jno
push
jb
or
pop
out
xor
pop
sysenter
push
mov
popf
aas
sbb
in
push
popa
insb
inc
clc
aas
dec
cld
inc
andl
jne
insb
mov
adc
lcall
add
js
or
fwait
inc
or
pusha
add
cmp
cmp
in
xor
pop
les
pop
fwait
lods
lahf
pop
ljmp
xchg
movsb
out
push
cld
or
xchg
push
adc
inc
push
hlt
mov
mov
cwtl
sub
jno
loop
cmp
loop
loope
inc
js
fcmovb
inc
mov
add
cmp
fnstenv
jae
leave
adc
test
jne
shl
or
cmp
sub
outsb
pop
push
loope
sti
adc
loope
xchg
fwait
push
or
dec
es
xor
sbb
stos
testb
pop
ljmp
push
jge
divl
fwait
jp
jbe
jne
fidivrs
mov
sub
fmull
aam
mov
add
lock
ss
clc
sbb
jnp
fcomps
adc
or
clc
add
inc
lods
and
dec
adc
jno
xchg
jecxz
scas
mov
insl
je
orb
or
fsubrs
pop
test
es
xor
and
bnd
sbb
pop
sbb
and
arpl
fnstenv
jmp
imul
es
sub
cmp
into
scas
adc
push
lret
cmc
call
bound
je
push
aas
jmp
loop
and
pop
scas
clc
add
and
lock
repz
jbe
cmp
scas
stc
ljmp
jno
sbb
aaa
pushf
xor
dec
mov
les
cmp
mov
lea
lahf
rcr
fcmovb
adc
int3
inc
sub
je
fsubrs
or
pusha
mov
add
icebp
jp
fwait
rcll
pop
dec
jo
push
push
jmp
push
jl
scas
dec
mov
test
jne
pop
ja
repz
in
xchg
sbb
arpl
push
rclb
dec
daa
xor
ret
lcall
xor
inc
sbb
cwtl
pop
mov
insb
aad
out
clc
and
pop
pop
call
ret
mov
jmp
les
dec
pop
rorl
xchg
mov
ret
pop
dec
pusha
dec
sub
sbb
add
shrl
pop
gs
push
loopne
dec
and
mov
es
outsl
clc
mov
addb
cmp
cmp
sbb
push
inc
inc
out
xchg
jmp
sub
jne
in
or
cli
loope
out
icebp
loopne
fadds
adc
xor
lods
xchg
shrl
jb
pop
shll
flds
xlat
jl
ret
inc
stos
into
pusha
jo
or
lods
add
ja
outsb
lock
push
jae
or
pop
dec
mov
sbb
scas
pop
addl
xchg
mov
mov
das
adcb
or
pop
jmp
inc
loop
sub
inc
jno
pop
jle
cmp
inc
sub
std
cmp
lea
or
adc
xchg
ss
add
fistps
add
mov
mov
jmp
sbb
ss
sbb
movsl
add
mov
add
or
roll
hlt
lods
adc
jb
pop
ja
nop
lods
add
fildl
xchg
mov
leave
pop
ficoml
adc
and
jp
je
outsl
pop
push
js
out
xchg
mov
pushf
loope
push
xchg
out
pushf
cld
lret
add
adcl
push
addb
cld
sbb
scas
lock
sbb
sbb
shrb
das
and
sbb
orb
pop
sbb
adc
in
push
adc
push
inc
add
scas
mov
xchg
aaa
jnp
cmc
mov
mov
dec
enter
mov
test
dec
sub
testl
cmpsb
addr16
jbe
rorl
fisttpl
jne
shll
popf
jmp
idivl
das
adc
inc
push
les
dec
pop
push
cmp
xor
loopne
or
push
add
sub
push
pop
pop
xor
cmp
sti
sar
sbb
or
movsl
mov
in
scas
out
ja
subb
add
cmpsb
sahf
out
lcall
popa
push
lea
push
out
out
shrl
inc
lock
out
test
jbe
test
and
inc
pop
cld
pop
jg
or
fdivr
pusha
xor
or
lock
je
xor
aam
push
lds
dec
cwtl
push
xor
rcrl
mov
shrl
cmp
and
push
inc
jbe
vmread
jbe
push
mov
imul
or
adc
push
adc
repnz
mov
sub
adcb
in
aam
cmpsl
shll
repnz
clc
inc
outsb
push
add
sbb
xchg
stos
in
and
adc
sarl
inc
daa
pusha
rol
adc
lret
sbb
xchg
shlb
mov
cmp
xchg
enter
test
xchg
or
mov
cld
scas
jp
adc
ss
xor
inc
fwait
movl
and
les
mov
sbb
pop
add
mov
cmc
adc
insl
adcb
loopne
xor
sub
xor
and
adc
lret
jb
sub
pop
clc
testl
out
pop
jne
je
dec
add
mov
xor
ficompl
adc
cmp
adc
roll
or
icebp
cmpb
mov
fmull
adc
jae
jg
xchg
pop
out
xor
loopne
and
scas
xchg
push
sbb
pop
push
jns
jbe
clc
outsb
dec
sahf
sahf
sub
stc
cmp
pop
push
les
jo
xor
jmp
add
push
cmp
xlat
mov
mov
inc
or
xchg
push
adc
inc
add
sub
xor
jl
cmp
addr16
hlt
cmpsl
out
dec
jmp
dec
rcrl
lahf
xchg
mov
loopne
das
fldt
xchg
mov
push
pusha
ret
add
pushf
mov
cmp
addl
fisubrs
loope
lock
sbbl
push
nop
mov
daa
pop
negl
stos
and
add
dec
jno
aad
iret
jle
addl
ficoms
cmpsb
xor
or
or
mov
lahf
adc
add
add
adc
sbb
mov
dec
hlt
push
xchg
or
adc
lea
js
addl
cmc
or
dec
xor
push
sbb
xchg
jnp
data16
xchg
cmp
sbb
dec
jae
jo
pop
cmp
addb
ret
sub
mov
sub
data16
add
mov
or
xor
rolb
push
mov
int3
das
pop
out
cmp
sbb
sbb
mov
adc
int3
repnz
push
xchg
cmp
sbb
jnp
ret
mov
or
adc
decl
or
and
aas
jb
add
mov
cs
or
push
mov
jg,pn
into
ficompl
adc
cli
push
lret
push
xchg
sbb
pop
ret
std
mov
cmp
jmp
add
std
bnd
imul
cmp
aam
xor
xchg
mov
and
lock
imul
scas
sbbb
cmp
add
xlat
add
or
clc
pop
xchg
fisttpl
adc
aad
sbb
sbb
ds
or
sub
in
repz
mov
adcb
xchg
or
daa
add
mov
fmul
clc
insb
push
or
ljmp
or
mov
jp
add
ds
cs
push
cltd
add
and
stos
push
ret
and
and
mov
and
xlat
xor
iret
cmc
mov
inc
mov
lds
jnp
imul
ja
test
pop
and
mov
jmp
sub
ja
lahf
adc
add
jge
jb
mov
inc
lock
mov
lahf
inc
stc
enter
jl
mov
inc
cmp
mov
xchg
adc
add
cltd
outsb
dec
loope
movzwl
flds
dec
shl
adc
fnstcw
ret
sti
mov
add
xor
or
insl
xor
repnz
filds
aaa
and
cmp
ja
pop
jne
mov
push
scas
cmp
out
movb
shll
arpl
out
mov
add
and
jo
aam
push
push
jne
xchg
lock
push
popf
sbb
xlat
cmp
movsb
and
push
jae
mov
lret
dec
sub
sbb
inc
push
das
stc
adc
push
outsb
inc
jno
sbb
test
inc
test
mov
sbbl
sahf
cmpl
mov
fiaddl
fsubrl
enter
cld
inc
sbb
in
daa
out
sbb
and
xor
adc
aam
pop
je
mov
jmp
add
cmp
js
dec
mov
nop
daa
lock
dec
pop
push
stos
jbe
or
and
dec
xchg
les
test
dec
cmp
mov
les
jns
inc
nop
fs
clc
movsb
js
pop
rorl
inc
sbb
push
negl
rcr
cmp
and
sub
mov
shrb
adc
sub
sub
mov
pop
test
jb
xor
add
clc
sahf
sahf
adcb
jecxz
clc
add
inc
fwait
cmp
jb
arpl
push
inc
clc
mov
ret
xchg
sub
paddw
enter
and
sbb
data16
jmp
arpl
les
push
daa
and
rolb
mov
ljmp
or
sub
jo
imulb
dec
xchg
stos
test
add
loopne
lcall
add
cmp
popf
ffree
and
dec
out
or
sbb
int
aaa
adc
insl
or
adc
sbb
or
pop
xlat
clc
out
popf
dec
into
pop
inc
adc
sbb
test
out
pop
mov
and
rcr
adc
icebp
clc
xor
int
clc
add
mov
cli
test
xchg
cld
les
add
or
into
or
add
push
cwtl
fisubs
adcb
mov
in
fucomip
and
dec
xchg
mov
scas
das
loope
icebp
jle
push
or
in
loopne
lock
mov
or
mov
scas
cmpsb
pop
pop
adc
mov
xchg
or
sub
pop
xlat
inc
inc
or
lahf
dec
call
subb
push
add
push
rcrl
xor
and
add
or
jmp
inc
pop
loope
in
loopne
hlt
add
sbb
movsl
test
sarb
hlt
setl
cld
sbb
add
xor
shlb
fidivs
shrb
test
push
cli
stos
nop
cmp
and
pop
sbb
in
imul
fistpll
xchg
xchg
or
mov
lock
sbb
inc
hlt
insl
or
js
rolb
mov
jb
es
insb
les
sbb
test
mov
addr16
adc
scas
cmp
data16
arpl
jb
enter
jp
add
lock
add
add
fnstcw
pop
mov
lods
mov
shrl
hlt
cwtl
and
imul
pusha
mov
icebp
push
lahf
and
sbb
pop
mov
add
add
aaa
xchg
and
dec
inc
jae
sbb
push
cmc
mov
mov
dec
and
xchg
inc
add
pop
notl
call
orb
idivl
ja
mov
inc
or
jo
jne
adc
or
fnstenv
cld
shr
push
xchg
cmp
adc
or
outsl
jmp
cmp
inc
je
pop
jne
insl
sub
or
dec
cmc
and
mov
push
cmp
cmp
dec
jae
les
cmpl
or
push
and
xchg
jecxz
lock
fildll
cmc
push
push
cmc
into
aas
outsl
add
fbld
xor
in
mov
mov
outsl
cwtl
test
ret
xor
icebp
cmovae
iret
mov
or
jo
push
mov
jg
push
test
sbb
pushaw
mov
je
scas
inc
loopne
xchg
jmp
cli
and
mov
xchg
adc
andb
bound
mov
daa
inc
mov
mov
ret
pop
aam
and
aas
or
dec
arpl
xchg
negl
sbbl
sbb
mov
pop
shlb
pushf
mov
mov
mov
jne
rcrl
inc
mov
popa
adc
aad
push
pushf
jno
fwait
sbb
cmp
in
inc
jle
lea
inc
dec
ret
and
dec
mov
push
sbb
pop
adc
mov
push
xor
dec
incb
add
adc
and
push
xor
mov
jb
mov
cmp
mov
nop
or
dec
or
jno
sbb
mov
outsb
mov
jmp
add
add
loope
insl
add
xor
and
in
sahf
xor
sub
pop
jg
or
push
addr16
lods
adc
je
jl
push
sub
cwtl
adc
es
add
mov
push
jmp
dec
add
xorb
fiadds
icebp
ja
pop
push
cmp
ss
xor
add
adc
push
inc
xor
lahf
shll
mov
sar
xor
sbb
or
repz
xchg
mov
or
test
ja
add
pop
xor
ljmp
addl
jp
shl
loop
nop
adc
pop
cld
dec
xorb
cmpsb
cmp
pop
mov
adc
inc
jnp
push
mov
inc
add
xor
jne
dec
or
xor
xor
cmp
xor
clc
icebp
int3
or
xor
add
ret
jnp
shr
jo
lea
stc
out
nop
pusha
jae
cwtl
xchg
pop
orl
fs
lret
mov
sub
sbb
adc
add
add
sbb
lret
call
frstor
mulb
mov
ss
push
add
fisubrs
pop
sbb
mov
adc
push
mov
add
ljmp
mov
hlt
jo
out
dec
ret
popf
es
mov
dec
sub
jmp
lret
add
xchg
add
cmp
inc
lods
or
jno
add
ret
mov
adc
scas
lods
add
out
sub
adc
add
and
iret
add
mov
or
pop
xor
decb
incl
dec
sbb
add
inc
dec
stc
jp
addl
jmp
rorb
fisttps
inc
fdivrs
add
movsl
mov
jmp
inc
mov
sbb
inc
xor
adc
sahf
incl
idivl
in
jle
test
sub
add
push
jb
call
inc
imul
aaa
roll
mov
jbe
inc
bnd
in
test
fistpl
and
cmpsb
sbb
enter
jns
pop
pop
add
call
jecxz
pop
out
add
lods
fildl
fs
cmp
push
add
xor
decl
aaa
filds
xchg
lret
scas
add
dec
aam
cmp
incl
adc
add
loopne
add
icebp
add
sidtl
or
xor
mov
scas
xchg
in
cli
adc
ljmp
add
push
xchg
add
jno
xor
mov
cmp
and
ljmp
notb
add
sub
lods
pop
inc
mov
popf
add
pop
mov
dec
xor
xchg
push
fcomps
mov
fstl
call
in
add
adc
push
dec
scas
rolb
mov
mov
enter
decb
jmp
lahf
cli
test
lret
sub
inc
mov
push
or
call
add
pop
add
mov
lock
cmp
push
repnz
mov
jo
jae
fwait
and
andb
pop
shl
pop
xor
add
adc
xchg
mov
and
xlat
test
or
sti
mov
and
inc
sub
mov
xor
or
daa
loopne
aas
add
rorb
out
pop
inc
fwait
cmp
je
aam
mov
insb
test
mov
cld
xchg
pop
sub
cli
das
in
ret
sahf
add
int3
rcrb
imul
adcb
add
jnp
sbb
mov
sbb
js
jl
ds
lock
and
aad
shrb
pop
or
jge
mov
shrb
sub
das
xchg
pop
sub
sub
adc
xchg
loopne
fnsave
movsb
clc
iret
mov
push
lea
push
aam
roll
add
adc
dec
nop
sub
jge
pushf
inc
aam
dec
push
pushf
jp
cmp
cwtl
pop
and
or
dec
jne
jl
cld
push
adc
loope
es
lret
add
mov
adc
inc
xchg
test
mov
test
pop
es
pop
pop
leave
nop
les
sti
inc
sbb
cli
add
out
loopne
cmc
shlb
mov
inc
sbb
call
leave
ret
in
and
jb
dec
loop
push
add
incl
jno
fbld
out
aad
stos
cmp
cli
add
stos
in
cmp
js
jle
flds
or
movsl
call
cmp
orl
les
sahf
xor
sar
jg
pop
push
dec
mov
addb
inc
xchg
out
add
dec
sub
fidivl
jmp
push
imul
rorb
add
fcompl
inc
or
pop
or
and
push
sbb
das
pop
jbe
add
sbb
push
and
dec
mov
scas
push
and
pop
cmp
mov
cmp
jg
sti
jmp
das
xchg
add
xor
call
jle
push
xor
je
mov
add
push
hlt
data16
sarl
test
addr16
pop
cli
in
mov
fldenv
xorb
cwtl
add
sub
adc
outsb
inc
das
add
lahf
jmp
cmp
ret
add
pop
ljmp
cmp
sbb
dec
icebp
add
and
sti
out
and
or
outsb
jns
imul
aam
jns
cmc
pusha
mov
jno
inc
leave
lea
mov
movl
mov
daa
add
dec
in
int
sub
adc
sub
pop
dec
adc
sub
add
and
outsl
add
aaa
hlt
cs
aaa
imul
aad
cmp
popl
in
inc
mov
sub
xchg
or
xchg
xor
and
and
jbe
and
insb
decb
sub
icebp
pop
add
cli
dec
pop
scas
or
add
push
scas
xor
or
test
ret
mov
sbb
push
xchg
push
or
mov
lods
mov
incl
cmc
add
dec
cmp
pop
mov
mov
xor
lahf
mov
adc
dec
pop
push
insb
pop
mov
lds
clc
fisttps
dec
int3
sbb
stc
sbb
ljmp
test
sbb
fisubrs
sbb
in
inc
out
notl
push
scas
jge
dec
jp
test
dec
loopne
add
adc
stc
fs
jmp
cmp
mov
mov
push
fcom
mov
inc
pop
adc
mov
add
smsw
adc
lcall
scas
add
divl
stos
pusha
adc
lea
and
or
scas
or
add
in
and
sti
in
int3
push
rcrb
sub
add
ljmp
or
jae
mov
mov
insb
ljmp
pcmpeqw
adc
push
adc
adc
xlat
insl
mov
mov
das
mov
clc
sbb
sbb
or
cmp
bound
fstpt
aad
cmp
push
mov
sarb
mov
add
add
jg
mov
mov
frstor
adc
or
adc
add
add
mov
jmp
lea
adc
inc
out
dec
jo
push
add
mov
pop
cwtl
or
lods
and
je
push
mov
cltd
lcall
roll
xor
lahf
lds
insl
shrl
and
pop
sahf
mov
clc
dec
mov
fidivs
aad
and
mov
inc
aas
fdivs
or
fsubrl
bound
inc
push
adc
mov
shl
pop
mov
sub
inc
fwait
xor
dec
cmp
sbb
insb
dec
inc
adc
push
push
jg
pop
cmp
divb
cwtl
fmull
subps
mov
mov
insb
cld
mov
push
push
push
iret
sbb
pusha
pop
ret
in
clc
gs
and
add
add
dec
cmpsl
adc
aam
and
incl
addr16
addb
push
cmpsb
mov
insb
test
jne
inc
imul
add
rolb
cld
mov
push
outsb
call
and
sbb
test
xor
lock
ljmp
mov
inc
mov
addr16
xor
mov
jg
aam
sti
add
mov
and
aaa
lock
adc
jmp
xorl
int
outsl
add
sub
sbb
lret
outsl
push
mov
add
add
mov
rcrb
test
icebp
or
nop
pop
ja
testl
jg
mov
cs
or
jnp
fstps
fildl
mov
aad
cld
inc
pop
std
push
aad
fiaddl
sub
rol
mov
pop
sub
sbb
jo
push
sub
lods
pop
cs
outsb
lock
sahf
loopne
mov
pop
lods
xchg
xchg
std
pusha
sub
int
jecxz
incl
push
imul
jo
dec
jne
sub
dec
in
mov
xchg
jp
dec
lods
insl
push
das
push
stos
repz
adc
or
stc
jl
dec
lock
mov
pop
mov
shrl
sbb
mov
pop
das
add
dec
mov
add
into
fs
cwtl
push
test
ss
out
add
fdivl
inc
fcmovnu
outsl
mov
dec
add
jmp
test
repnz
mov
xor
aaa
iret
jnp
loop
xor
xchg
mov
ds
push
push
imul
insl
mov
pop
and
rolb
movsl
lcall
out
mov
rorl
jle
xchg
sti
in
adc
sbb
dec
mov
out
out
and
in
in
jo
push
cmc
adc
push
sti
ja
gs
sbb
loop
mov
lret
add
mov
pop
mov
mov
and
negl
push
data16
jg
inc
loope
mov
in
scas
mov
mov
ljmp
inc
add
adc
pop
add
bound
lods
insb
loop
xchg
pop
jle
aad
adc
ja
sti
adc
pop
mov
addb
scas
push
clc
mov
repz
addb
xor
mov
cld
push
test
out
push
cmp
test
push
daa
inc
mov
add
xchg
push
pushf
decb
push
jo
jg
mov
pop
js
mov
push
stos
ret
pop
cmpsl
inc
ja
pop
xchg
addr16
pop
pop
andb
adc
adc
mov
mov
bound
pushf
pop
mov
fwait
test
ds
mov
cmp
add
insl
fsubrs
or
je
push
inc
lock
and
or
sarb
fldt
ss
int
imul
xor
jnp
mov
jg
add
int3
cmp
and
filds
jge
jp
sahf
clc
and
rol
inc
and
add
ret
and
out
test
gs
shll
icebp
sub
jno
cmp
xor
data16
cs
mov
jne
add
fbstp
or
daa
scas
pop
fbstp
mov
adc
cmpsl
nop
test
sbb
or
xchg
mov
sub
dec
inc
mov
and
sbb
and
push
psubd
jbe
dec
sbb
mov
fisttpll
mov
push
sti
idivl
into
sub
jne
addr16
clc
add
ds
adc
and
loope
jge
xchg
loope
dec
cli
jb
mov
mov
pushl
jp
rcrl
pop
inc
pop
icebp
cli
fdivp
sub
push
jle,pt
sub
insl
sub
and
sbb
pop
ljmp
or
imul
adc
add
lods
repz
mov
mov
sbb
cld
lock
mov
push
shlb
xorb
pop
pushf
mov
in
mov
stos
fadd
push
and
inc
pop
add
and
filds
std
mov
xor
and
stos
pop
jp
scas
add
mov
not
daa
sub
shrb
sbb
or
lret
cmp
das
sbb
call
or
mov
inc
aaa
dec
xchg
bound
xchg
mov
fidivrl
je
je
rcll
aam
jnp
sub
mov
push
push
stos
xor
insl
jmp
push
xchg
adc
inc
push
mov
mov
pop
pop
out
jg
sti
dec
lods
inc
daa
arpl
mov
push
push
push
push
clc
mov
pop
xor
cmp
iret
cmp
cwtl
adc
lods
in
fists
insl
pop
cwtl
mov
push
inc
xlat
pop
clc
mov
cwtl
cmp
movsb
cmp
push
loop
sub
pop
mov
lds
mov
ljmpw
push
xchg
es
fdivrl
mov
js
xchg
rclb
fldt
mov
xor
xor
mov
ljmp
jl
int3
lret
pushl
out
in
iret
add
lods
call
imul
push
mov
and
mov
fdivs
out
inc
lea
sbb
sahf
in
add
jb
or
xchg
or
std
repnz
mov
and
push
je
ss
and
idiv
std
idiv
ljmp
cmc
sbb
inc
adc
mov
je
int
loope
sbb
cs
jg
das
pusha
je
dec
mov
icebp
int3
bound
dec
push
mov
insl
arpl
out
mov
push
inc
stos
sbb
xchg
adc
cli
or
xchg
testl
adc
icebp
pop
cli
add
add
mov
scas
xor
sub
dec
fistpll
mov
add
xchg
push
and
ret
loop
sahf
adc
std
jmp
daa
cmc
add
adc
adcb
jb
jg
sti
mov
popa
xchg
popf
xorb
mov
out
pop
inc
icebp
jbe
adc
jecxz
icebp
jecxz
cltd
outsl
incl
cmpsl
sbb
imul
daa
ljmp
xchg
es
mov
xlat
out
shlb
mov
inc
push
add
lcall
movb
nop
sbb
or
ret
imul
push
test
insb
sbb
aas
sub
repnz
ja
mov
and
lods
and
push
mov
cmp
icebp
lcall
cli
jg
inc
xor
and
push
xor
lods
ja
cmp
mov
adc
stc
mov
icebp
jg
add
sub
mov
mov
stc
jle
icebp
mov
mov
dec
lret
dec
cmpsl
ja
clc
ljmp
sahf
in
mov
scas
pop
cmp
push
dec
or
jp
mov
rorb
es
jae
es
jp
or
mov
shl
cmp
aad
out
sahf
push
je
das
pop
push
das
les
dec
add
add
mov
cmp
xchg
fdivrl
mov
adc
mov
cmpsb
jg
xchg
pop
ja
fs
sub
push
dec
push
add
jp
cltd
outsl
dec
pushl
and
cmpb
negl
outsl
std
cs
xor
and
xor
lods
mov
and
push
sbb
lret
shl
fisttps
je
movsl
fadds
dec
cmpsb
xchg
repz
or
mov
cmp
jle
push
add
bound
int
mov
sub
pop
jecxz
loop
dec
fwait
jb
xchg
in
outsb
roll
push
imul
sub
inc
mov
lret
cmpsl
xor
cli
rclb
xchg
aam
xlat
adc
popf
jbe
pop
jl
inc
xchg
sbb
or
or
aaa
sbb
jne
mov
incl
lret
xor
imul
addb
shll
jle
lods
mov
inc
push
xchg
pop
dec
nop
add
pop
bound
sub
jae,pn
jns,pn
push
imul
mov
in
inc
pop
fdivs
mov
push
sti
mov
push
dec
xchg
inc
jl
dec
je
jo
in
fwait
push
ja
ffreep
dec
sub
mov
mov
push
or
ja
sbb
imul
pop
or
sbb
jl
nop
imul
icebp
push
repz
mov
shlb
aas
jbe
push
ficompl
fistpll
mov
push
jp
dec
add
sarb
pop
add
adc
mov
lahf
cmp
mov
mov
scas
push
test
repz
pop
jp
sbb
fnsave
mov
push
or
pop
add
inc
jge
ss
jne
daa
nop
mov
xlat
mov
mov
dec
int3
dec
fisttps
mov
rclb
mov
and
mov
mov
sub
jge
shl
push
imul
or
mov
repz
cmp
mov
cwtl
inc
xor
xor
cmc
mov
inc
arpl
mov
rorl
es
xor
out
mov
testb
pop
clc
pop
stc
ss
mov
lret
xchg
xlat
push
push
leave
cmpb
std
addr16
sbb
jg
stos
xchg
sbb
outsb
push
sub
int
mov
pop
scas
xor
ljmp
push
or
jecxz
pop
int3
add
fdivrl
pop
mov
icebp
push
sub
outsl
insb
push
clc
xor
jecxz
push
sub
add
jns
jl
jmp
mov
negb
xchg
rcll
pop
clc
test
cltd
into
cld
mov
nop
mov
or
cmc
mov
dec
adc
dec
inc
push
jg
in
cmp
adc
and
or
inc
lods
insb
mov
push
jecxz
aaa
mov
ds
orps
std
int3
lret
loop
aas
sub
mov
jmp
sbb
filds
xchg
outsl
icebp
mov
mov
mov
movsb
pop
cmp
adc
sbb
outsb
shll
inc
cmc
xor
mov
stos
xor
push
xchg
pop
popf
sahf
and
add
arpl
add
rcr
pop
bound
mov
sbb
fbstp
cmp
pop
roll
and
aas
xor
mov
pusha
push
out
addr16
or
call
xorl
ret
sub
dec
pushf
aas
dec
dec
add
mov
xchg
std
fadds
test
mov
pushf
dec
adc
sub
in
fisubrl
std
outsl
frstor
cmp
and
andb
negb
decb
or
pop
in
data16
jnp
xor
std
outsl
cld
jmp
aam
sbb
jg
mov
repnz
leave
mov
jmp
jne
sahf
jne
iret
add
or
xor
lods
inc
pushl
sbb
sti
loope
xchg
shl
xchg
and
ret
mov
pop
dec
sub
fcoms
pop
pop
inc
xchg
lea
sub
loopne
stc
pop
push
push
pop
cmpb
lods
fs
and
sub
mov
adcb
clc
pop
sbb
add
shll
rorb
orb
sub
testl
sub
pop
cli
adc
and
pusha
add
jmp
mov
in
sbb
xor
stos
popl
push
int
xchg
adc
mov
push
mov
add
pop
push
in
jne
sbb
in
and
stos
xor
test
adc
sbb
fnstenv
inc
std
fmuls
filds
or
or
mov
inc
jne
push
cmc
pop
inc
pushf
or
xchg
bound
scas
or
and
adc
xor
cld
jbe
ljmp
ror
in
enter
inc
add
test
hlt
cmp
and
and
nop
pusha
xchg
mov
and
jg
pop
out
fbstp
xor
add
sub
mov
repnz
mov
fdivrl
xor
fisttpll
das
aad
push
adc
femms
je
lret
push
xor
pop
dec
mov
mov
pop
push
or
add
mov
insl
jl
add
push
rol
mov
fsubl
push
jp,pn
fsubp
sbb
and
in
je
or
or
push
add
cmc
vcompressps
loopne
stos
jecxz
inc
mov
sbb
cmp
mov
push
rcr
test
cmp
pop
jo
inc
nop
add
in
hlt
aas
bound
pop
lods
inc
push
jno
and
lock
out
push
mov
in
in
inc
mov
addr16
cmp
lock
mov
sub
roll
xchg
icebp
sbbb
loop
es
lret
inc
xchg
add
sbb
rorl
or
cld
aam
leave
roll
push
add
xchg
fildl
add
out
repnz
mov
test
push
add
jmp
daa
xchg
sbb
adc
out
inc
sbb
fdiv
nop
js
or
pushf
mov
test
shll
mov
dec
xchg
jp
repz
jmp
sbb
int
or
or
adc
les
je
mov
les
sbb
aam
rcrb
add
inc
mov
cmpb
divl
sbb
mov
in
or
jb
ss
sbb
jmp
push
adc
fsubrl
lods
ljmp
or
outsl
dec
inc
xchg
dec
pushf
cld
inc
jg
sbb
fistps
xchg
push
xor
pop
addr16
movsl
or
mov
dec
xchg
imul
mov
std
mov
les
mov
mov
lods
pop
pop
fisttpll
hlt
add
sbb
pusha
mov
iret
sub
mov
pop
cli
adc
adc
sti
sbb
xchg
jle
faddp
dec
sub
mov
lds
sub
pop
std
mov
fsts
jp
mov
push
popf
stos
std
sahf
cli
ljmp
fdivl
or
pop
jg
push
mov
mov
cld
mov
lock
clc
push
mov
outsl
jle
lahf
inc
lock
out
or
and
jae
out
pop
pop
loop
and
lahf
cltd
push
add
dec
call
arpl
sti
xchg
pusha
pop
filds
pop
jne
es
xchg
in
push
adc
sbb
cmpsb
add
pop
cld
pop
faddp
xor
mov
xlat
xlat
test
sub
push
mov
gs
mov
sbb
idivl
inc
out
jg
dec
arpl
or
enter
and
mov
in
rcrl
jge
jl
shrl
popa
lahf
xor
movsl
and
hlt
push
inc
lods
push
decb
xor
inc
adcl
call
lock
add
mov
out
sub
sub
loopne
or
pop
jbe
fildl
test
ja
dec
push
jnp
mov
mov
sbb
insl
jecxz
sbb
cmp
je
push
orl
jecxz
loopne
sub
jo
mov
inc
xor
jle
bound
cmp
add
call
push
add
sub
jne
push
test
add
sub
adc
pusha
mov
rol
sbb
cmp
adc
das
push
loopne
pop
push
mov
dec
aam
mov
sub
popf
add
adc
cmpsl
sbb
aad
mov
sbb
test
inc
les
rcll
repz
orb
xchg
fnsave
and
mov
shr
orb
pop
dec
and
bound
pop
ret
xchg
xor
xchg
add
cmp
jp
shl
xchg
sbb
mov
in
jle
dec
cwtl
inc
sbb
sti
or
daa
fists
jns
pop
out
sbb
mov
or
loope
dec
cmpsl
mov
mov
adcb
or
add
call
xor
fucomp
aas
test
cmp
fidivs
push
roll
fbstp
addl
lcall
cmp
cmp
pop
cmp
mov
ret
mov
cmp
push
dec
pop
test
add
add
xor
cmp
add
lcall
aaa
mov
stos
decl
inc
loopne
into
aaa
push
fdivrs
mov
stc
std
jmp
pop
jbe
jmp
data16
mov
fstps
lods
ljmp
mov
loope
dec
mov
int3
in
icebp
cmp
mov
or
in
jg
call
ljmp
sub
dec
std
inc
mov
adc
sbb
out
lea
add
inc
or
pop
mov
cmc
call
push
xor
adc
or
les
shll
add
inc
out
adc
arpl
shll
fcomps
adc
cs
test
mov
xlat
push
adc
lcall
adc
mov
fnstenv
scas
loope
into
dec
fisttps
mov
incl
ss
mov
lock
fistps
mov
jne
lods
and
cltd
cmp
and
subl
movsl
stc
sub
mov
inc
stos
push
clc
or
sub
sub
inc
shlb
div
push
loope
mov
scas
push
pop
out
jae
jp
mov
xor
mov
leave
push
xchg
adc
dec
iret
rcll
pop
mov
xchg
cli
incl
mov
sti
cs
daa
repz
or
mov
adc
add
push
aaa
cltd
popf
and
push
add
aaa
call
cmp
iret
jnp
insl
sbb
outsl
lock
int3
push
mov
and
incb
adc
fistpll
and
rcr
es
aas
outsl
mov
pop
incl
adcb
inc
push
pop
cmp
ljmp
icebp
outsl
adc
or
decl
xor
and
pushl
pop
cmp
xorb
pop
add
cmp
imul
dec
mov
xchg
test
jg
xchg
xchg
out
adc
cmpb
outsl
aad
arpl
xchg
jns
arpl
adc
cs
ja
mov
push
and
sahf
lods
and
add
ljmp
or
mov
pop
sbb
mov
scas
jns
or
push
inc
mov
push
shll
lret
adc
or
push
sbb
rolb
push
mov
push
xchg
rorl
ss
sbb
pop
mov
daa
subb
addr16
mov
and
aaa
shr
ss
adc
loop
mov
add
adc
hlt
pop
or
testl
adc
jp
sub
sub
jno
add
insl
cmp
ror
mov
sub
dec
pop
dec
jl
mov
negl
test
jl
dec
sbb
stc
inc
and
mov
fcoml
jae
pusha
push
scas
aam
mov
jo
cmp
mov
dec
adc
add
cmp
fisubrs
ret
sbb
mov
sbb
add
add
sub
pop
jne
sti
cmc
adc
sub
sub
dec
pop
not
pop
mov
xchg
fwait
inc
hlt
or
adc
int
aam
test
push
clc
or
mulb
adc
or
push
shll
cwtl
xchg
addl
cmp
pop
inc
fildl
adc
loop
mov
test
mov
pop
std
test
inc
xor
mov
push
dec
push
int3
sub
inc
mov
sub
fldcw
adc
and
ljmp
cmp
inc
cmp
fdivl
arpl
add
in
ss
das
mov
inc
add
jne
jle
aaa
out
adc
mov
xor
inc
icebp
push
lds
push
stos
mov
dec
push
in
push
xchg
in
lock
pop
stos
ret
pop
adc
add
and
cmc
adc
adc
add
sub
test
mov
inc
fwait
xor
imul
dec
cmp
mov
push
movsl
push
mov
cltd
or
andb
incb
lret
call
dec
sahf
stos
and
push
sub
push
push
cltd
jge
push
nop
mov
ficoml
lcall
notl
or
ret
rol
and
repz
cmp
mov
testl
pop
mov
sbb
loopne
adc
sub
sub
adc
cmp
jns
and
push
or
hlt
stc
aas
mov
cli
outsb
hlt
pop
mov
insl
sub
mov
cmc
adc
arpl
or
movsl
mov
xor
insb
jecxz
jecxz
sbb
sbb
cs
fnstsw
adcb
std
lret
add
out
adc
sar
inc
das
adc
inc
mov
lahf
push
pop
fstpl
push
mov
or
xchg
aas
cld
inc
xor
push
mov
adc
sbb
dec
mov
cltd
jecxz
pop
mov
mov
pop
scas
aaa
jle
and
xor
sub
cltd
push
les
fstp
mov
xor
and
mov
scas
std
pop
jnp
ficoml
push
in
xchg
and
int3
and
outsl
lock
push
jne
decb
mov
and
jbe
mov
mov
test
jne
pop
out
cli
outsb
rorb
xchg
aas
mov
jecxz
in
push
ljmp
ss
xchg
into
mov
out
mov
repnz
call
jg
cs
add
cltd
push
sbb
sub
mov
aam
aad
das
sub
sbb
push
mov
mov
inc
mov
pop
jl
aas
mov
sub
mov
jne
in
imul
js
xchg
mov
jecxz
add
xchg
ljmp
jo
adc
jmp
daa
pop
cwtl
shrl
ljmp
clc
out
lret
stc
outsb
or
pop
xchg
pop
stos
dec
mov
lcall
or
outsl
lods
mov
add
imul
mov
or
or
and
mov
divl
dec
cld
popf
in
jl
jmp
add
xor
xchg
pop
pop
xchg
xchg
aad
xor
ret
push
call
cmpsl
inc
pushf
inc
add
mov
pop
clc
out
mov
pop
sub
rcl
shrb
mov
xchg
dec
pop
hlt
in
inc
mov
sub
sbb
loope
push
xor
test
push
out
and
imul
movsl
mov
mov
ficomps
nop
stc
xchg
and
out
mov
jle
cmpsb
fstps
stc
clc
jg
xchg
adc
jle
fbld
movsl
imul
cld
push
inc
and
test
or
test
add
or
std
sub
mov
xchg
or
mov
push
add
mov
iret
mov
in
xchg
and
cmp
lds
push
in
and
mov
and
add
mov
mov
dec
fsubs
lahf
call
stos
pcmpgtb
dec
add
ret
mov
and
scas
push
cmp
or
mov
push
fstpl
xchg
xor
and
lcall
je
or
mov
cs
cmp
add
mov
or
pop
cmpsl
test
jo
push
insb
mov
mov
or
adcl
push
mov
lock
sub
inc
jp
pop
and
sbb
and
shl
xchg
das
fnstsw
loope
nop
dec
mov
sub
push
sbb
push
or
notb
and
je
xor
rol
add
pushl
jp
sub
jne
or
test
lea
add
mov
jg
adc
mul
cmovno
in
fwait
daa
lret
mov
sbb
mov
loop
push
jecxz
outsl
ss
fdivl
xchg
jle
outsl
aaa
outsb
mov
fcmovnb
shlb
in
aad
lea
adc
add
sbb
inc
fs
decl
fs
dec
dec
or
push
pop
cli
ljmp
xchg
pop
stos
test
cwtl
xor
lea
mov
push
xchg
mov
add
call
ljmp
sbb
mov
adc
ficompl
nop
nop
xor
in
pop
gs
cmc
and
push
insb
push
test
repnz
outsb
not
xor
addr16
adc
add
int
lret
adc
push
or
dec
leave
fstp
pop
hlt
push
push
sti
xor
adc
lahf
sbb
inc
lea
sub
or
pop
and
inc
add
sbb
and
les
outsb
cmpsl
adc
and
stc
aaa
mov
and
js
sbb
push
shl
mov
mov
xchg
imull
inc
xchg
push
and
imul
sbb
dec
rep
pop
popa
roll
sbb
pop
sub
frstor
cmp
mov
insl
jae
lret
hlt
lcall
fiaddl
lret
int3
push
test
fst
syscall
imul
jb
dec
jno
adc
push
loopne
test
int3
loop
mov
lahf
daa
dec
xorb
jo
test
pusha
inc
pop
sub
movsl
ljmp
and
out
repnz
pop
sub
adc
ss
hlt
fistps
dec
dec
sub
out
das
std
int
add
adc
in
pop
outsb
in
jbe
sub
test
out
or
enter
divb
add
sub
adc
rol
xor
lods
sbb
mov
sbb
decl
rorl
orb
jg
cmp
sbb
incl
ja
dec
inc
mov
int3
cmp
jle
add
jp
mov
dec
inc
cs
dec
call
and
pushf
js
adc
fldl
insb
push
cmpsl
stos
or
cmp
push
inc
pop
movsb
call
int
les
or
shlb
adc
jl
add
inc
aas
add
pop
add
in
mov
inc
addr16
ds
loop
xor
in
cmp
out
mov
or
add
inc
mov
push
and
xchg
sub
lea
in
dec
call
lods
in
dec
test
fwait
inc
ljmp
ljmp
and
fildll
jmp
rep
lds
add
dec
inc
jne
mov
and
decl
push
jb,pn
sbb
sar
dec
aad
add
or
sub
inc
movsl
pop
xor
and
mov
push
push
or
loope
cmc
fnstcw
vpsubusb
mov
mov
jnp
cs
mov
mov
faddl
stc
pop
sbb
add
cwtl
in
adc
xchg
adc
out
adc
add
pusha
inc
dec
inc
fdivrs
fsubrl
aas
push
hlt
js
fsubrl
push
daa
or
into
pop
mov
sub
hlt
sbb
into
ljmp
pop
popa
jmp
mov
dec
push
ja
divl
dec
pushf
pusha
mov
sbb
or
testl
stc
outsb
mov
sbb
fsubp
and
inc
nop
cmp
mov
imulb
or
mov
addl
aad
dec
mov
or
fcomps
je
push
dec
xor
cmc
adc
push
adc
int3
notl
inc
xrelease
xor
adc
mov
fistps
push
pop
mov
sub
pusha
arpl
ud0
daa
mov
into
leave
jp
enter
movsl
das
push
and
mov
jns
loopne
fcom
fiadds
mov
pop
sub
adc
js
jne
sub
add
jo
mov
cmovs
and
add
pop
shll
stc
adc
and
fimull
movsl
jmp
sti
cmpsl
cmpsb
cmpl
inc
out
pushf
popf
in
lods
push
fistpl
jne
ficompl
adc
inc
stos
xor
aad
sbb
adc
cmpsb
ds
enter
adc
flds
mov
je
mov
outsl
loopne
and
mov
pop
add
jge
inc
push
cwtl
out
or
xlat
and
add
push
stos
sub
aad
jbe
push
insl
pop
jae
lods
fdivrl
and
rcrl
fildl
or
and
jno
push
mov
jle
jne
sbb
pop
cli
sahf
pop
add
add
in
mov
or
mov
push
loope
mov
loopne
jp
push
xchg
test
push
int
imul
das
push
or
out
dec
iret
push
and
lods
test
inc
mov
adc
xor
add
push
cmp
testb
or
jmp
addb
sub
and
ret
cmpb
aam
push
pop
adc
mov
sbbl
cmp
or
mov
sub
or
push
cld
leave
jno
add
xchg
push
loopne
or
or
push
sbb
data16
jo
notl
mov
rorb
sahf
les
test
push
scas
insb
int3
mov
iret
pop
sub
xor
mov
mov
cmp
adc
or
jge
inc
cmp
ja
adc
sub
cmp
xlat
push
or
bound
icebp
jl
loope
shll
add
xchg
nop
imull
xor
fmull
push
orb
cli
dec
adc
push
nop
fldenv
insl
repnz
cld
ret
pop
lods
cmp
aaa
roll
lods
jp
xchg
push
loopne
or
inc
jnp
loopne
popf
inc
add
stos
adc
cmpsl
pop
pop
xchg
mov
clc
xorb
enter
shll
jbe
and
negb
mov
mov
adc
sub
xor
adc
loopne
jp
add
inc
repz
add
xor
out
xor
lcall
ss
rcr
clc
inc
loope
shrb
adc
or
mov
push
push
les
inc
lea
xchg
imul
scas
add
add
jl
add
les
inc
pop
loope
stos
loopne
les
orb
fisubrs
sti
xor
sbb
add
jmp
loop
push
ljmp
jnp
mov
loop
out
aam
jno
xor
mov
add
xor
dec
add
push
aaa
jle
dec
fnstsw
int3
inc
mov
daa
add
stc
loope
and
xor
adc
in
cmp
mov
add
mov
int3
add
sbb
or
push
adc
dec
mov
cmpb
pusha
adc
or
cmp
and
push
sbb
and
mov
xor
inc
cld
lea
cltd
push
jmp
or
aam
lds
dec
sub
pop
push
ljmp
dec
scas
fnstsw
lds
inc
insl
mov
fistpll
imul
mov
xor
sbb
icebp
repz
xchg
das
jne
outsl
je
fwait
scas
jno
sbb
mov
add
sub
inc
mov
fwait
dec
and
sub
lret
lock
imulb
jmp
dec
insl
into
xchg
insb
popa
mov
repnz
mov
jbe
frstor
cmp
cmc
jg
mov
pop
or
icebp
test
leave
les
mov
jecxz
push
mov
test
and
fisttps
jle
sbb
aam
sub
jnp
mov
adc
mov
pop
add
sbb
sar
out
inc
filds
imul
sbb
mov
push
pop
lret
test
adc
shrb
lods
push
or
roll
rcll
push
fistps
fldcw
sbb
mov
clc
or
pop
jnp
aad
mov
push
dec
lds
lret
mov
jns
in
inc
cli
into
add
mov
mov
std
fdivrp
outsl
lcall
jnp
mov
aad
clc
es
jecxz
jne
sbbb
adc
ds
add
stos
dec
push
or
jb
inc
mov
push
mov
negb
mov
jno
inc
fs
cmp
add
push
decl
decl
sbb
jno
pop
mov
xor
das
cmc
jb
dec
mov
adc
sub
push
jno
jbe
mov
mov
and
in
jmp
fistpll
and
fstps
inc
ret
imul
iret
and
test
push
sub
inc
std
ret
sbb
mov
jp
sbb
or
fisttps
filds
inc
out
call
push
or
push
mov
enter
incl
movsb
pusha
repnz
and
jno
lret
add
mov
add
clc
sbb
mov
sbb
lahf
jae
inc
ja
mov
and
mov
fsubrp
add
xor
std
pop
sbbb
shrb
xor
ljmp
add
in
or
fisttps
fs
add
outsl
mov
ds
lods
xchg
std
xchg
or
pop
sbb
mov
pop
js
lds
or
sub
inc
push
mov
jae
pop
and
iret
and
and
push
scas
sbb
sti
scas
mov
js
or
test
inc
or
add
fnstcw
cmp
pop
xchg
call
mov
push
pop
mov
lcall
jo
dec
fldt
ss
mov
out
jne
fistl
xor
pop
and
ds
pop
dec
fcoml
test
adc
scas
imull
mov
push
push
pop
ja
pop
xchg
pop
mov
mov
js
subl
testb
jns
mov
cld
jmp
cwtl
sub
push
enter
sbb
bound
ret
cmp
aaa
int
sbb
and
mov
mov
mov
fcoms
sti
inc
nop
pop
adcb
mov
paddsb
dec
sub
adc
pop
mov
decl
push
out
sbb
push
in
popa
sbb
adc
gs
adc
outsl
mov
pop
adc
lods
jg
jp
cltd
mov
adc
fisubs
aam
fmuls
xor
fdivs
pop
add
sub
fsub
in
push
out
fwait
cmp
add
mov
aad
push
cmpl
loopne
sub
adc
subl
and
fcomps
ds
adc
push
xor
pop
jo
mov
pop
fmull
ja
mov
pop
and
aaa
xchg
or
inc
fisttpl
xor
je
sub
aam
call
dec
loop
mov
das
lea
and
and
xchg
lcall
inc
ja
add
mull
mov
lock
fs
insl
testb
movsl
xchg
pop
xlat
mov
ljmp
sbb
sarl
flds
ljmpw
or
popa
loop
cmp
sub
cmp
inc
sbb
inc
addr16
pusha
pop
subl
mov
inc
popa
jmp
push
aas
push
dec
shr
ret
mov
inc
or
nop
adc
mov
testl
hlt
icebp
imul
xchg
mov
icebp
sbb
cld
dec
sbb
mov
movsb
into
or
cld
loope
popa
rcl
inc
adc
rcrl
mov
inc
xor
pusha
push
scas
add
pop
xor
adc
test
shll
subb
sub
push
sbb
inc
test
push
cwtl
xchg
jb
sbb
push
adc
es
xor
add
mov
bound
mov
push
cmp
add
mov
inc
push
je
mov
pop
insb
test
fcom
aaa
loope
add
xchg
fstl
sbb
pop
jle
or
sub
idivb
das
adc
push
psllq
add
int3
or
inc
push
mov
xchg
jae
icebp
add
pop
mov
stos
dec
push
out
imul
clc
push
insb
cld
and
mov
arpl
jo
jecxz
jle
lock
mov
mov
cltd
inc
mov
add
or
lret
mov
ss
cwtl
cs
or
pop
rolb
ljmp
addl
inc
jb
je
lds
fwait
pushf
sbb
push
pop
and
insl
jge
popl
add
xchg
cwtl
rorb
sbb
push
mov
lods
sub
jnp
lret
xchg
andl
sbb
sbb
mov
outsl
push
push
cwtl
adc
cld
into
inc
shrl
in
cmp
adc
or
rorb
add
xchg
cmp
mov
and
test
sub
dec
pop
jnp
mov
pop
dec
arpl
test
lds
adc
mov
mov
sti
mov
or
or
push
leave
xchg
out
mov
imul
inc
or
arpl
xor
lea
or
in
das
mull
popa
xor
dec
std
lods
fcomps
clc
mov
jbe
adc
push
xor
mov
les
lret
into
dec
inc
scas
or
add
or
mov
and
mov
enter
ficoms
and
enter
or
fmuls
test
xorl
lock
je
push
pop
mov
aad
mov
lret
scas
cmp
mov
jne
outsl
lahf
outsl
cmpb
shlb
cltd
pop
arpl
std
add
test
and
or
aaa
loopne
sbb
pop
push
cld
jecxz
mov
jge
int3
out
movzbl
lret
push
push
push
xchg
sahf
in
add
cli
aad
jle
mov
mulb
push
arpl
je
das
sbb
xor
add
stc
inc
not
insb
mov
mov
int3
es
mov
push
xchg
mov
add
adc
imul
mov
xor
adc
add
stos
jmp
loopne
shrl
lock
push
add
adc
dec
jno
daa
mov
or
add
add
and
cmp
sub
mov
js
inc
mov
dec
mov
out
sbb
inc
fisttpll
pop
adc
out
cmp
pop
sbb
pop
and
fadd
nop
or
cmp
fistpl
mov
mov
xor
call
sbb
clc
loop
and
add
dec
les
jbe
cmp
call
lahf
les
stos
ret
adc
ljmp
push
jnp
push
stos
es
dec
fstpt
dec
cmp
mov
outsl
push
pop
mov
add
scas
mov
mov
ljmp
push
repnz
int3
sti
and
addl
rcrl
int
rclb
sti
cmp
xchg
idivl
push
addb
pusha
sub
xor
sub
add
adc
cwtl
jbe
inc
push
or
rcrb
clc
pop
adc
mov
stos
ja
add
in
jo
pop
fsubr
add
les
push
mov
jmp
sbb
orl
sbb
pusha
push
pushf
ret
push
push
lret
sbb
inc
fidivs
inc
add
mov
inc
loope
xlat
mov
mov
mov
pop
add
cmpsb
sbb
xor
push
inc
lods
loop
inc
sub
clc
fsubr
jge
jb
add
jle
outsb
int
movb
dec
mov
cmp
popa
adc
push
or
ret
rcll
je
cld
jmp
rolb
cmpsb
shrb
push
jmp
call
or
or
call
fdivrl
pop
push
out
in
stos
sbb
pop
dec
push
ret
shlb
cmp
pop
xchg
dec
xlat
and
add
js
mov
and
adc
shll
mov
enter
mov
test
iret
and
enter
xchg
xor
das
sbb
cmp
add
mov
decl
mov
and
shlb
mov
call
push
mov
pop
iret
aad
std
aas
sbb
pop
push
movsb
ret
jne
mov
idivl
fildl
test
adc
stos
xchg
inc
insl
jo
mov
push
sarl
movsl
xor
ss
mov
aas
mul
fisubs
lds
add
xorl
aaa
push
mov
add
out
loop
add
xor
adc
fsubl
or
xlat
push
call
scas
sbb
in
fstl
lods
insl
orl
mov
or
fidivl
inc
sti
xchg
cmp
je
ss
xor
mov
std
cmp
xchg
js
xor
push
insb
jne
pop
les
loopne
mov
jle
mov
dec
add
ja
jno
lds
mov
cld
lret
xor
test
insl
inc
add
add
sub
cmp
pop
shll
push
push
pushf
jp
push
out
dec
xchg
and
loopne
and
cmp
add
int
jl
jecxz
jne
jge
cmp
add
inc
push
jo
aad
push
mov
mov
mov
dec
test
movsl
mov
inc
cs
pop
fldt
stc
mov
sub
jg
fcmovnb
inc
mov
les
and
sbb
sub
xchg
adc
popf
je
and
jp
lea
mov
js
rorb
pop
nop
add
adc
arpl
mov
add
adc
call
out
add
jl
mov
daa
lock
sub
and
fdivrl
xlat
rorb
adc
mov
outsl
std
das
in
push
adc
mov
sahf
inc
stos
mov
xchg
or
or
jmp
mov
in
jle
data16
seta
pop
das
stos
push
inc
enter
jge
aaa
inc
popa
and
loope
cld
mov
int
jecxz
jle
sub
subb
and
sub
fwait
or
sbb
pop
sub
sub
cmp
rcll
js
inc
aaa
adc
ret
lret
testl
add
sub
inc
inc
loop
rclb
cmp
adc
clc
mov
insb
xchg
jnp
inc
xor
push
xchg
dec
sbb
aas
push
aaa
push
cmp
ja
and
or
lock
cmp
xchg
pop
mov
mov
test
dec
and
cld
out
jno
jno
pop
mov
lock
mov
mov
inc
sbb
sbb
out
pushl
repnz
adc
imul
cmp
movsb
ja
and
test
push
icebp
insl
jns
push
idivl
test
leave
and
mov
fsub
xchg
mov
mov
pushf
ret
add
cwtl
or
addl
lock
in
dec
or
add
adc
dec
push
outsb
push
sbb
push
sbb
sub
test
cmpsl
mov
in
lahf
mov
cltd
jg
lea
or
mov
lret
clc
mov
sbb
icebp
pop
adc
andb
sahf
inc
mov
xor
shlb
test
pop
add
in
ss
outsl
fdivrl
xchg
hlt
inc
and
hlt
fnsave
faddl
push
xchg
movb
and
and
daa
les
push
test
es
xor
jg
push
mov
mov
mov
nop
int3
insl
adc
xchg
and
sbb
cld
push
mov
pop
inc
xor
mov
je
xchg
les
push
cmp
cwtl
sbb
stos
sbb
loopne
js
push
andl
in
repnz
pop
cmp
inc
cwtl
scas
pop
push
sbb
push
jge
cld
dec
iret
scas
rol
add
sahf
xor
hlt
test
inc
pop
pop
sbb
mov
addr16
jno
lret
int3
sub
xor
int3
xlat
nop
idivl
and
xor
sub
sub
xor
xor
sub
sbb
adc
lahf
xchg
dec
push
inc
add
fisubs
xchg
jne
imul
jbe
adc
sbb
mov
cmpb
sub
orb
sbb
push
popf
push
mov
ds
negb
shr
lock
aam
jg
pop
and
es
call
dec
adc
pusha
mov
sbb
mov
or
push
popl
mov
xchg
lock
enter
mov
hlt
sub
aaa
stc
push
jg
addb
cmp
pop
popl
adc
add
adc
and
adc
add
icebp
push
cli
inc
or
add
mov
or
cmpsb
hlt
std
add
loop
mov
shll
adc
push
push
loop
jbe
test
jne
test
add
inc
bound
mov
nop
scas
jae
jno
cld
xchg
mov
jne
xlat
cltd
dec
and
fwait
jno
mov
sti
dec
aad
cmp
enter
orb
mov
in
aaa
jae
insb
cmp
imul
jl
add
and
inc
sbb
addr16
addl
mov
add
jl
arpl
or
inc
into
lcall
xor
mov
cmp
lock
sub
sub
mov
shll
mov
adc
out
jb
faddl
das
test
jne
int3
test
outsb
pop
add
or
scas
xchg
arpl
xor
inc
lcall
inc
int3
push
xlat
adc
aam
pop
xor
and
inc
xor
jae
push
enter
fidivrl
enter
push
ljmp
ljmp
inc
fdivl
or
js
cmp
xor
or
dec
sub
loop
add
fdivrs
pop
jp
dec
int3
fsts
lods
mov
or
push
loopne
inc
cmp
mov
int
ss
or
mov
mov
add
inc
ficompl
fadd
mov
cli
std
and
outsb
pop
xchg
inc
dec
sbb
or
bound
subb
or
pop
loopne
add
jg
dec
cld
push
addr16
ds
push
dec
dec
cld
and
inc
je
cld
or
repz
push
iret
out
adc
jg
aad
shrb
addr16
mov
fmull
int
daa
call
mov
lcall
je
clc
outsb
loop
lock
lods
dec
sbb
andb
mov
add
aas
aaa
adc
mov
xor
addb
xorb
inc
orb
mov
clc
pop
pop
push
xorb
cmpb
mov
out
cmp
dec
push
cmp
push
xchg
aas
cld
jg
fistl
mov
lahf
or
mov
and
jecxz
shll
test
and
jb
movsl
pop
test
ds
add
inc
ja
sub
and
add
cmc
jge
and
inc
roll
push
cmp
aaa
clc
fildll
push
popa
mov
pop
xor
leave
push
testb
cld
inc
push
js
mov
or
sahf
mov
pop
add
pop
mov
aad
pop
hlt
outsl
call
add
sub
or
add
xchg
fdivr
jg
movsl
jne
and
xor
mov
xchg
test
orb
shll
icebp
mov
test
mov
int3
iret
lcall
sub
mov
scas
sti
rolb
or
ret
add
fnstcw
lea
cltd
or
mov
jge
jb
fstpt
xchg
nop
pushf
adc
movsl
mov
pop
sub
jmp
xchg
in
pop
mov
fdivl
or
sub
js
in
ljmp
pop
es
and
pop
jae
push
adc
mov
lods
in
cwtl
push
mov
out
or
outsl
test
lock
test
imulb
movsb
jnp
xor
cmpsb
mov
adc
orl
and
dec
xchg
das
icebp
imulb
lods
idivb
and
mov
movsl
pushf
cmp
mov
roll
gs
pop
sub
or
nop
pop
fsubrp
pop
lea
stos
pop
in
insb
test
pop
sub
mov
sub
jl
or
and
imulb
outsb
push
lret
enter
pop
scas
xor
loope
roll
test
movsl
mov
dec
mov
or
jmp
loop
loope
inc
call
mov
mov
sti
test
les
enter
mov
cmc
inc
popa
pop
jb
mov
mov
jb
sahf
and
adc
and
pop
loope
mov
fsubrp
jl
jg
icebp
fildll
mov
shrb
mov
push
and
scas
aaa
insb
sbb
ja
and
push
push
mov
cs
cmp
lds
adc
stos
ret
adc
xchg
push
ret
sbb
stos
rorb
add
loopne
xor
inc
fbld
pop
inc
or
popf
iret
mov
shrl
icebp
mov
loopne
mov
mov
jle
cmp
test
sbb
out
fs
xor
add
icebp
xor
sub
add
mov
add
mov
ljmp
cmp
and
jne
lock
inc
cs
and
pop
mov
mov
and
inc
je
rorb
mov
sbb
cld
int
icebp
in
shll
and
mov
cmp
add
jae
fsubrl
mov
fs
pop
mov
dec
ja
sbb
bound
nop
jno
notl
or
or
ds
pop
loopne
pop
dec
adcl
mov
or
mov
mov
sbb
adc
and
jecxz
push
jg
mov
lock
mov
les
into
xchg
mov
xchg
lods
mov
rcrb
lock
push
inc
mov
pop
std
call
cli
mov
mov
popl
and
scas
pusha
stos
cmp
mov
pop
push
loop
mov
pop
sbb
das
jge
jmp
sub
xor
dec
adc
add
cli
sbb
shl
jno
icebp
repnz
xor
cmp
pop
mov
jecxz
add
roll
test
movsl
adc
loopne
aam
test
jnp,pn
or
iret
xchg
cltd
sbb
sub
nop
adc
push
scas
stc
xor
xchg
jmp
sub
mov
mov
jns
xchg
mov
mov
and
dec
inc
sbb
call
pop
je
lret
ret
mov
pusha
cld
adc
and
stos
std
xor
test
sub
test
inc
xor
stos
inc
push
sub
and
adc
jecxz
outsl
mov
ljmp
clc
lret
push
mov
xchg
int
push
mov
cmp
pop
push
sbb
cli
imul
sub
lods
imul
xchg
in
pop
std
cmp
mov
js
jge
push
mov
dec
pushl
xor
stos
adc
lock
aas
xchg
pushl
jecxz
dec
adc
cmp
bound
insb
rol
and
dec
or
inc
fldt
and
stos
jns
and
andb
mov
sbb
adc
mov
add
mov
jecxz
cmp
mov
mov
shr
push
aam
fs
and
fs
scas
sbb
sbb
or
loopne
shll
icebp
ljmp
std
cmpl
or
mov
mov
jmp
jp
push
into
sub
pusha
mov
mov
ret
ljmp
jle
inc
repz
xor
fisubrs
inc
cwtl
pop
add
addb
aaa
cmc
sbb
xchg
dec
and
add
pop
sbb
add
int
adcl
or
jl
pop
cmc
adc
sub
xor
cmp
jne
mov
mov
mov
stos
push
pop
sbb
sub
mov
push
sub
sarb
call
mov
test
ljmp
and
enter
xchg
jecxz
andb
pop
stc
movsb
shrb
push
outsb
ds
inc
jae
ror
lret
mov
mov
mov
inc
mov
and
or
or
pop
jns
dec
sub
jmp
popf
in
push
and
push
adc
das
insb
cmpb
or
faddl
sub
push
cli
imull
mov
pusha
adc
test
xchg
lahf
fisubrs
cmp
cmp
mov
sti
movsl
xlat
lods
jns
addl
enter
adc
jnp
fs
js
fistpll
pop
inc
jp
inc
sbb
mov
in
fisubs
jne
ret
cmp
jg
sbb
mov
lcall
and
cwtd
jle
sbb
cwtl
mov
add
scas
xor
test
icebp
mov
mov
les
jnp
icebp
insl
int3
xchg
dec
mov
nop
or
rcrb
imul
or
add
lret
mov
loop
addl
push
jo
cmp
testb
stos
push
lock
pop
fbld
or
repz
or
xchg
push
xchg
aam
xor
stos
lods
mov
dec
or
push
and
add
and
adc
xchg
xor
sub
insb
push
in
fisubrs
jb
out
mov
outsb
scas
repnz
and
fnstenv
add
fisubs
add
lock
dec
cmp
repnz
push
cld
xchg
ret
out
es
push
in
adc
pop
and
dec
jns
jle
out
test
fwait
pop
sub
lds
insl
add
cmp
int
pop
jnp
shlb
dec
in
addb
fimull
mov
add
aaa
xor
ja
jle
push
and
into
add
lods
mov
mov
das
mov
xchg
add
inc
sub
rorl
stos
fimuls
pusha
in
ds
in
adc
jo
out
add
inc
or
stos
pop
mov
and
cmpsb
mov
xor
fsubs
test
xor
sub
aad
adc
add
mov
lcall
sub
adc
or
loopne
sbb
test
add
xor
mov
aaa
ss
fmul
enter
out
and
les
clc
add
adc
gs
adc
cmp
adc
mov
mov
mov
or
mov
clc
inc
dec
incb
mov
fwait
inc
add
xor
jecxz
imul
jecxz
jnp
xchg
aam
xchg
fadd
js
cmpsl
add
pop
test
es
xchg
jno
xor
insl
sbb
sahf
xchg
mov
add
clc
dec
pop
xchg
data16
push
jl
or
clc
mov
call
cli
clc
shl
in
mov
hlt
push
clc
cltd
test
pop
hlt
inc
mov
lods
ret
popa
mov
add
dec
add
fstp
aad
jo
sub
adc
cmp
mov
je
mov
orb
out
insb
sbb
inc
push
jbe
arpl
outsb
xchg
xchg
or
mov
repz
xorb
aad
xchg
aaa
jno
test
cld
cld
cld
into
out
mov
aad
sbb
mov
mov
push
ljmp
or
mov
pop
shll
cli
xor
mov
movsl
sub
dec
push
mov
sbb
sbb
cmpsl
fists
test
pop
mov
dec
repz
repz
fiadds
or
loopne
xchg
cmp
cs
pop
out
cltd
push
push
mov
stc
int
fwait
push
mov
into
out
in
shll
dec
das
mov
push
jecxz
jecxz
xchg
cmp
sti
and
gs
rcll
mov
movsl
jp
and
adc
pop
dec
sub
or
xchg
lea
and
in
bound
jl
cltd
outsb
jge
ljmp
cwtl
or
pop
notl
out
in
stc
add
xchg
xchg
lea
xor
mov
sti
inc
adc
loopne
jecxz
cmpsb
loopne
mov
push
ds
jbe
jmp
or
js
pop
or
sti
nop
in
arpl
data16
das
pop
ja
pop
mov
jge
stos
sbb
fucomip
cmc
testl
pop
adc
mov
add
clc
xchg
mov
fcmovb
aas
sub
add
fdivs
pop
clc
and
je
andl
in
jmp
shrl
add
add
push
orb
dec
push
in
adc
push
inc
sub
sahf
xor
and
sub
clc
fsub
adc
or
sti
xor
mov
mov
add
imul
add
and
sbb
adc
jl
fwait
test
pop
push
inc
push
insl
mov
bound
into
sbb
cmc
mov
mov
dec
or
cmp
hlt
cmpsb
adc
jge
outsb
or
loope
cmpsl
mov
mov
cld
add
or
dec
hlt
subb
inc
adc
mov
and
xor
add
aas
hlt
popf
loopne
push
roll
fs
cmpsl
push
xchg
ljmp
loopne
mov
pop
mov
scas
xorb
je
inc
pop
test
bound
nop
sbb
and
out
test
push
fldenv
sbb
call
jmp
out
test
xor
add
ja
sub
mov
negb
push
aad
les
jo
xchg
loopne
fstpt
shlb
pop
ret
jns
push
shlb
pop
addb
ljmp
jp
pop
test
mov
daa
fmuls
mov
add
test
outsl
and
enter
mov
stos
mov
dec
mov
adc
push
xor
in
sub
mov
dec
adc
push
cmp
sbb
repnz
or
and
inc
aad
sbb
test
inc
call
fadds
fmul
cld
jno
push
mov
nop
or
in
ss
cmp
iret
loopne
out
jne
add
add
inc
push
movsb
andl
sbb
dec
jb
lds
add
xchg
xlat
push
adc
int3
mov
rorb
or
sub
lcall
ss
roll
sub
insb
mov
or
pop
xor
add
fdivrs
jg
mov
cmp
movsb
ss
cli
push
std
mov
sub
inc
rolb
cmp
scas
insl
push
lahf
jmp
iret
daa
jo
data16
mov
rcrb
jbe
mov
dec
stos
shr
or
mov
outsl
test
xchg
pop
daa
adc
mov
cmp
jno
decb
jae
pushf
push
rorl
or
adc
iret
popf
cmp
adc
stos
pop
in
xor
cmp
lea
push
mov
in
call
sub
mov
popf
pop
mov
adc
xchg
pop
lods
jne
shl
ficoml
add
push
ss
mov
dec
push
enter
push
out
roll
sub
adc
fbld
sub
cmp
jne
xor
inc
jmp
add
or
jno
ret
xor
mov
dec
push
cs
aad
les
inc
les
and
add
and
addr16
into
mov
add
mov
sahf
mov
push
xor
mov
cmc
fcompl
mov
adc
nop
addb
orl
push
sbbb
add
cmp
jl
xchg
loopne
adc
xchg
stos
ljmp
into
aam
dec
nop
je
aam
fisubrs
and
lret
outsb
scas
popf
mov
adc
inc
hlt
inc
push
add
push
frstor
xlat
dec
hlt
adc
loop
inc
sbb
pop
inc
cwtl
inc
test
in
and
shlb
daa
push
scas
test
push
testl
xor
lcall
fdivl
es
icebp
sub
jne
or
ror
inc
inc
in
sub
mov
test
cmp
or
ret
add
mov
mov
push
sbb
dec
sbb
mov
push
dec
or
and
mov
pushf
mov
cmc
in
inc
outsl
es
dec
imul
sub
cmp
mov
inc
sbb
rolb
imul
popf
adc
enter
add
ret
jns
or
xlat
repnz
sbb
pushf
adc
adc
xor
bound
cmovl
pop
xor
xchg
orl
jbe
mov
in
mov
fsubl
or
rolb
test
jae
pop
ljmp
data16
aam
fs
fsubs
das
loop
or
mov
mov
call
hlt
sub
pop
loope
in
in
inc
frstor
shrb
stc
or
repz
rcl
mov
sti
fs
pushf
mov
mov
adc
add
sub
rcll
add
fbstp
jo
ficoms
jne
pop
test
jl
shll
leave
xchg
mov
cmp
jmp
sbb
xor
jecxz
mov
sbb
and
out
jge
aas
mov
into
sub
pop
icebp
add
adc
imul
inc
pop
cs
repnz
adc
xchg
or
bound
pop
fbstp
sub
fwait
test
sbb
sbb
mov
int
lret
inc
or
out
cmp
rcll
rcr
dec
or
or
mov
push
cli
mov
jbe
rorl
xor
ret
in
xlat
decb
jecxz
aam
xor
cli
and
xchg
xor
mov
das
xchg
popa
cmpsl
push
sub
ss
adc
das
shrb
cwtl
repz
push
mov
inc
mov
xchg
jae
fnclex
in
popa
repnz
push
push
loop
andb
inc
aam
lret
call
sbbb
lret
cmp
add
out
lods
lret
leave
in
sub
xchg
adc
add
and
pop
cld
mov
movsb
mov
push
mov
cwtl
lock
inc
loope
xor
stc
sub
and
push
and
mov
push
lcall
and
cpuid
and
xchg
sbb
add
sub
ret
lea
out
jbe
add
add
rclb
hlt
xchg
mov
ds
inc
cld
sbb
cmp
inc
mov
adc
nop
icebp
sbb
in
inc
xchg
adc
rcl
imul
mov
aaa
inc
stos
cwtl
fbstp
cmp
stos
aad
lcall
jg
lret
jg
sbb
xor
inc
and
push
scas
pusha
mov
push
mov
pop
add
sbb
pop
jge
xchg
inc
aas
fmul
sbb
in
sub
fwait
aad
dec
mov
add
clc
sbbl
lret
sbb
adc
push
pminub
aas
dec
dec
in
mov
mov
add
out
pop
fs
out
lods
outsb
shl
cli
test
test
xchg
add
aam
popa
das
mov
or
sti
popa
adc
rorl
mov
jns
subl
test
orb
sub
or
in
adc
mov
rolb
lods
and
and
fildl
inc
clc
lahf
add
cmp
mov
mov
cli
sahf
sbb
jno
notb
loopne
inc
test
sub
popa
mov
or
xchg
jg
into
add
mov
pop
add
stos
cld
inc
les
cmp
add
insl
mov
rclb
stos
cli
cs
stos
add
lcall
inc
add
pop
push
fimuls
jno
in
stos
jns
scas
push
data16
lret
lods
or
push
add
jae
push
out
dec
sub
in
cmp
adcb
xor
inc
gs
gs
dec
pop
pop
mov
das
lcall
rolb
popa
xor
add
and
dec
xchg
rcrl
mov
mov
dec
int
push
and
inc
jno
sbb
add
pop
push
xchg
lods
les
int3
lods
push
inc
aam
scas
mov
cmp
das
and
adc
or
cmp
jge
jns
inc
inc
cwtl
lea
adc
mov
xchg
push
dec
outsl
sub
movsb
dec
push
sub
dec
aaa
push
pop
les
icebp
xchg
fs
inc
inc
xchg
fldt
out
pop
mov
out
xchg
push
imul
outsl
decl
mov
inc
pop
dec
cmp
inc
shr
lcall
jle
pushl
sbb
stc
stc
leave
scas
dec
xchg
xchg
rorl
ljmp
std
dec
adc
mov
ljmp
std
out
lret
mov
shlb
add
and
ret
test
jg
pop
int
imul
mov
cmp
cmp
std
pop
cmp
adc
mov
sbb
icebp
jmp
mov
xor
bswap
dec
mov
sub
mov
jns
cld
lods
sarb
sahf
and
sbb
xor
cmc
mov
mov
shrl
or
loope
mull
out
or
jg
hlt
push
fistps
inc
cs
nop
or
jae
dec
cli
cmp
xchg
test
pop
lock
test
pop
push
lods
xor
pop
or
or
icebp
cld
adc
mov
mov
xchg
add
sti
or
js
inc
fisubs
or
jbe
jecxz
idiv
pop
or
dec
mov
inc
adc
xor
or
and
aad
das
pop
ret
add
loopne
push
andl
pop
js
mov
mov
fwait
inc
lahf
outsl
shl
dec
cld
sbb
sub
popa
xchg
decl
mov
sbb
and
ljmp
ds
sahf
add
adc
sub
enter
call
jmp
pop
call
push
xor
das
imul
ss
imul
xlat
adc
lret
xchg
inc
and
and
ljmp
cmpsl
dec
and
nop
scas
outsb
jmp
lahf
xchg
loope
test
les
jg
pop
dec
xor
inc
ljmp
adc
aas
andl
adc
idiv
xchg
jecxz
sub
jne
imul
jg
cmp
nop
loop
xor
in
pop
loop
or
ds
scas
mov
lods
and
xor
mov
inc
sub
cltd
dec
in
outsb
jge
add
push
adcb
add
pop
in
pop
les
lock
add
pusha
shll
sbb
and
cmp
lcall
aam
sbb
je
cwtl
and
inc
mov
clc
sub
test
in
es
inc
add
xchg
std
data16
mov
repnz
lods
push
jbe
mov
in
and
rcr
cmc
pushf
push
and
xor
divl
ret
or
mov
pop
loop
inc
fwait
shrl
lahf
mul
ja
jg
rorb
shlb
xor
push
cld
push
addr16
loopne
sbb
adc
loop
or
mov
pop
bound
add
ds
inc
xlat
lcall
mov
int3
jl
add
adc
mov
jo
push
add
out
lock
push
jne
bound
clc
ds
loope
iret
mov
pushf
mov
mov
mov
push
lcall
cs
xchg
js
scas
jmp
cmp
add
rcll
test
and
or
sub
add
mov
dec
loope
mov
jecxz
or
dec
inc
idivb
call
mov
mov
push
push
divb
lcall
dec
pop
aad
mov
rcrb
push
mov
pop
jl
lods
mov
sub
xchg
mov
cli
or
lcall
icebp
and
ljmp
pop
cli
adc
jmp
add
cli
jg
sahf
and
mov
adc
xor
fucomip
push
adc
cli
repnz
mov
es
xor
fld
sub
xor
sub
xchg
push
sti
push
jg
xor
inc
sbb
scas
jg
adc
sti
add
mov
and
xor
add
leave
push
sbb
sbb
rcll
pop
arpl
add
inc
xchg
xor
sbb
mov
aaa
inc
fnstenv
pop
call
sbb
pop
aad
movsb
loop
data16
xchg
or
mov
cmpsb
outsb
xchg
mov
push
aaa
addr16
mov
inc
dec
lds
cld
sub
dec
addb
les
dec
push
xor
adc
ret
xor
cmp
out
movb
xor
jge
addb
xor
inc
inc
add
outsl
adc
dec
stos
nop
imul
cmpsl
pop
push
jno
xlat
pusha
mov
sbb
xchg
xchg
clc
or
leave
add
sbb
and
cld
and
int
int
push
cmp
dec
es
test
xchg
push
cmp
js
sbb
call
xor
bound
inc
adc
push
mov
js
pop
push
test
add
inc
in
xor
jae
or
frstor
std
gs
das
cltd
aam
dec
loopne
lds
addr16
aad
fcomp
stos
xor
shrl
add
add
cmp
mov
std
dec
mov
inc
or
inc
sub
mov
bound
dec
hlt
rol
rorb
stos
jp
mov
mov
mov
ret
add
mov
xchg
xchg
in
xlat
inc
xchg
in
int
dec
cwtl
or
mov
jne
xchg
int3
scas
out
dec
je
fisubs
cld
adc
jb
loop
imul
stc
cli
jl
xchg
xlat
pop
test
fs
lcall
push
lret
cltd
push
push
stc
and
lret
or
mov
jb
clc
dec
sub
and
cmp
dec
int
mov
or
push
sti
cmp
pop
aam
cli
xor
fdivl
jp
popl
arpl
bound
pop
adc
incl
pop
test
roll
cmp
cwtl
lret
pusha
push
pop
fnop
xor
fs
mov
or
into
incb
call
es
add
and
ljmp
or
inc
xor
adc
dec
pop
test
je
jge
or
sbb
xor
clc
stos
fstps
push
bound
es
orb
lods
mov
pusha
rol
jae
dec
ljmp
and
roll
sbb
inc
cmc
sub
pop
not
pop
xor
push
mov
push
hlt
or
sarl
adc
mov
push
sbb
add
mov
mov
dec
mov
cmp
and
xchg
outsl
cmp
je
lret
shlb
jo
xor
mov
add
movsb
mov
add
mov
add
xchg
mov
add
repz
pop
int3
adc
daa
imul
add
iret
mov
inc
mov
pop
imulb
or
or
sub
hlt
add
cmpsl
test
cmp
in
out
fisubl
mov
shl
out
or
out
pusha
push
xchg
js
in
mov
data16
or
hlt
jns
mov
icebp
cmpsb
sub
adc
mov
mov
hlt
daa
cmc
movb
fisttps
scas
nop
lock
xor
jl
lcall
dec
pop
adc
data16
sbb
in
sub
lds
pop
shlb
jbe
adc
pop
hlt
dec
movsb
mov
mov
fs
xchg
test
ret
sub
fs
sbb
mov
mov
bound
mov
or
push
mov
movsb
movsl
fcomps
xchg
enter
sbb
sbbb
pop
cmp
inc
cmp
add
mov
push
dec
and
rolb
dec
fildl
aam
xor
xor
dec
out
inc
or
testb
and
scas
cwtl
push
je
push
cmp
inc
sbb
outsb
les
or
sbb
scas
in
lods
and
adc
inc
sti
in
rorl
mov
mov
clc
fimuls
cmp
pop
inc
ret
mov
mov
and
les
dec
mov
sub
test
fidivl
jg
push
pop
addb
in
stos
add
jmp
mov
into
sar
in
lcall
sbb
addr16
aad
pop
add
scas
es
push
sbb
sub
ja
inc
icebp
test
imul
repz
pop
push
xor
fcmovnu
pop
pop
test
sub
xchg
add
and
jno
sbbb
push
leave
sbb
adc
std
sbb
push
lea
sti
pop
sbb
scas
pop
inc
xor
fmull
out
fs
pop
int3
xchg
divb
and
inc
ficoml
pop
arpl
adc
fadds
xor
mov
mov
insl
adc
frstor
cs
shll
push
subb
mov
pop
mov
stos
ljmp
enter
sub
mov
mov
out
out
pop
or
loopne
shrl
fcoms
mov
scas
stos
xor
aam
jl
jbe
sbb
push
inc
fisttpll
dec
ret
test
jo
out
pushf
adc
add
xorb
add
add
xlat
fidivl
mov
movb
pop
jb
xor
or
mov
dec
icebp
decl
shrl
or
xchg
mov
ljmp
dec
inc
cmpsb
in
mov
adc
xchg
cmp
stc
mov
and
mov
mov
lea
xchg
mov
ret
inc
xor
dec
test
sub
lret
loopne
outsb
icebp
in
jg
inc
out
mov
es
seta
pop
clc
sub
xor
add
sti
mov
lcall
jbe
mov
data16
lea
sti
mov
jb
jg
fists
leave
dec
sarl
stos
push
fwait
outsb
das
cld
sbb
cld
nop
push
or
xchg
xchg
int3
and
push
out
test
frstor
jnp
xchg
inc
popa
clc
ja
stos
add
gs
negb
insl
in
mov
outsl
push
std
int3
lahf
sbb
cli
mov
aad
fsubr
xchg
lds
mov
cmp
stos
outsl
add
xchg
das
scas
in
pushf
fs
decl
pop
outsb
dec
jmp
mov
push
pushf
clc
and
loop
jg
mov
add
xchg
mov
mov
cli
pop
mov
or
sbbb
add
lea
inc
mov
mov
inc
add
pop
clc
push
sar
sbb
dec
mov
add
dec
jl
adc
js
jns
pop
sbb
ret
mov
jno
jae
pop
in
das
lcall
push
leave
add
push
add
rcrb
inc
pop
out
loop
cltd
push
inc
jl
stc
inc
test
pop
push
test
out
in
test
mov
movsb
inc
insl
jg
std
das
cld
decl
mov
cltd
ret
outsl
daa
jbe
or
je
das
aad
sub
fisubrs
lahf
sbbb
mov
jbe
add
pop
fcmove
rclb
mov
decl
sub
push
lret
mov
les
mov
sub
mov
repz
lods
xor
stos
test
ret
adc
cmc
pop
sbb
iret
push
xchg
jmp
in
add
lock
cmp
jmp
add
das
pop
fdivrl
iret
inc
jmp
lods
and
mul
adc
mov
call
cli
or
xlat
pop
push
cmp
jmp
cmp
insl
inc
std
add
pop
dec
lea
stos
test
loopne
mov
or
cmpsl
in
inc
pop
jb
mov
mov
sbb
sbb
pop
xchg
adc
testb
rol
dec
fimuls
popa
cmp
sbb
sbb
add
jl
adcb
mov
inc
pop
loopne
lock
inc
movsl
jg
arpl
in
and
fcoms
dec
mull
psllq
xor
pop
sub
or
cs
dec
jmp
int
mov
and
xchg
push
bound
adc
or
sbb
popf
fmul
push
imul
test
sahf
jge
push
lods
xor
ret
mov
xchg
xor
testl
xor
dec
jle
jge
roll
push
and
adc
data16
cmp
and
add
scas
push
mov
andb
aaa
ret
je
je
pmaxsw
out
out
fiaddl
xchg
dec
sub
lcall
cs
add
push
mov
push
jmp
inc
outsl
mov
nop
add
xor
mov
cwtl
xor
xchg
mov
leave
and
mov
dec
jl
jmp
mov
adc
loope
imul
jbe
repz
jg
push
mov
sbb
enter
lret
add
mov
push
adc
andl
mov
sbb
rorl
lock
decl
mov
stos
push
lods
mov
clc
in
aaa
jp
mov
jle
sub
lds
xor
xor
out
loopne
fs
xor
es
lock
sub
or
push
cmp
ret
cvtps2pi
adcl
ljmp
sub
cli
pop
sbb
int3
lret
cmp
mov
add
shrb
mov
es
sub
add
call
bound
shlb
jmp
or
xchg
int3
sub
les
pusha
sub
push
add
fdivs
add
mov
and
cmovo
lcall
mov
int3
aam
dec
and
test
mov
jnp
cmc
insl
mov
cmp
ss
or
je
subb
inc
push
test
adc
cld
inc
xor
adc
shrl
lret
outsl
ret
cmpb
sub
push
test
add
dec
je
cltd
sub
push
jne
ljmp
int
adc
enter
scas
mov
fxch
fwait
jecxz
add
jge
adc
and
mov
nop
fnstcw
cmp
xchg
push
shlb
xchg
mov
pop
rorb
cmp
mov
cmc
outsb
pop
je
jo
aam
xchg
mov
or
or
insb
inc
mov
icebp
mov
je
clc
lret
sbb
aam
mov
nop
movl
inc
jae
inc
adc
ljmp
jb
or
cmp
xchg
mov
cmp
xchg
push
enter
movsb
add
xor
adc
inc
sub
mov
inc
cmp
cs
and
inc
test
or
xor
adc
xor
or
pop
mov
sbb
or
sub
mov
push
loopne
mov
ror
rcr
rclb
xor
and
insl
jne
sbb
inc
add
cli
adc
loop
push
outsl
ret
push
adc
shrb
loopne
push
push
sub
or
xchg
mov
gs
fdivs
cmp
dec
popf
stc
push
cmc
das
lock
rolb
jne
add
sbb
loopne
loopne
or
dec
aad
out
pop
push
out
ljmp
pushf
faddl
inc
aam
data16
clc
cmp
push
call
and
fwait
ror
xchg
push
jmp
xchg
xchg
add
das
and
lret
aaa
jnp
pushf
hlt
call
mov
sbb
sub
lea
movsb
inc
jne
add
loope
xor
loope
inc
cmp
pop
dec
push
rcrb
push
mov
dec
xchg
or
pop
aad
add
aas
in
nop
loopne
sub
push
and
push
sub
popf
call
subb
inc
sbb
pop
mov
shll
pusha
add
pop
mov
sar
adc
aam
cmp
jo
shl
or
and
add
push
mov
mov
in
popa
push
in
in
call
stos
test
outsl
xchg
mov
mov
fucomip
push
push
add
loop
inc
sbb
clc
popf
or
sbb
divb
ljmp
jl
jb
jmp
push
xor
aam
ret
cmpsb
mov
test
shlb
test
xor
cmp
leave
push
ret
imul
pop
je
jg
push
add
loopne
or
push
pop
jmp
stos
pop
sbb
int
and
roll
je
outsb
sub
pop
insl
jecxz
nop
mov
es
pushf
mov
mov
imul
jg
inc
xchg
mov
jg
pop
nop
clc
pop
dec
jbe
pop
sub
jb
movsl
test
cli
daa
loop
cmp
mov
mov
sub
stos
xchg
push
add
mov
hlt
cmp
ds
pop
std
lock
jnp
adc
push
mov
or
in
lea
push
loope
in
rclb
icebp
insb
movsb
iret
cltd
outsb
mov
push
andb
hlt
push
icebp
lock
pop
pop
or
jo
test
dec
aad
and
jmp
std
sbb
fildl
or
pushf
mov
arpl
iret
jno
out
mov
xchg
pushf
leave
or
stos
bound
and
ret
insb
outsl
push
add
repz
cmc
sbb
fs
in
fxch
cmp
fwait
repz
cmp
xor
movsl
aaa
cmp
cltd
jae
and
mov
insl
ret
das
rolb
fistl
in
pop
jmp
pop
pop
sub
loopne
pop
mov
aam
jnp
cmpsl
inc
or
xchg
fst
rcl
mov
pop
mov
loop
xor
inc
sub
pop
scas
popa
lahf
cmp
sub
out
xor
fisttpll
inc
jg
add
dec
jno
pushf
sbb
mov
xchg
sub
push
fwait
lret
in
repz
xchg
loop
addb
mov
mov
pop
inc
or
in
mov
aam
mov
or
and
lds
mov
sbb
push
xchg
stos
hlt
mov
mov
sbb
pop
jmp
or
sbb
cwtl
sbb
loope
inc
gs
ljmp
adc
xor
xor
cld
into
lret
lret
push
mov
scas
dec
daa
orb
ljmp
call
sub
icebp
fwait
cmp
adc
add
scas
inc
outsl
mov
adc
jb
and
aam
das
mov
dec
pop
icebp
pop
cwtl
ret
add
inc
dec
sub
icebp
push
pop
cwtl
lock
adc
lds
add
pop
mov
sbb
dec
movl
fwait
out
mov
mov
cmpsb
jl
pop
adc
pop
and
add
insb
subl
cmp
and
fildl
fstl
repnz
insl
cwtl
pop
inc
js
cs
sar
gs
out
mov
fstpl
xor
or
sbb
js
cmpsb
push
cmpsb
xor
out
repnz
fwait
loopne
sub
xchg
inc
jl
mov
cmp
push
aas
sbb
fldl
in
cmp
xchg
pop
mov
xlat
sti
or
dec
add
mov
inc
lret
fdivr
mov
test
sub
incl
inc
aas
jmp
add
ret
pop
ss
pop
dec
idiv
pushl
int3
xchg
mov
push
insb
loopne
addr16
stos
jbe
jb
ret
xchg
mov
jbe
mov
jecxz
movsb
jbe
jnp
out
les
add
jb
jecxz
push
pop
aad
pop
popf
mov
mov
shrl
xchg
pop
sub
jle
inc
fdivrl
mov
das
sarl
test
sub
mov
fs
xor
add
jl
mov
dec
aam
add
xchg
mull
dec
inc
jge
xchg
leave
roll
int
roll
mov
outsb
adc
jmp
incl
loopne
into
sti
mov
jae
out
mov
add
sarl
dec
mov
sub
inc
jg
js
rcl
jno
push
lock
inc
cli
xchg
lea
je
inc
out
mov
pop
xlat
bound
or
leave
jl
inc
in
xchg
incl
aam
inc
and
sub
adc
stc
pop
xchg
shll
add
inc
cmp
popa
adc
je
lret
sbb
sbb
icebp
fildl
pop
in
push
dec
push
ljmp
std
dec
mov
sub
xchg
out
push
add
pop
jg
out
rcl
loope
enter
std
inc
loope
lds
lods
test
insl
dec
lods
loopne
adc
adc
jl
pop
or
call
xor
lods
cld
in
mov
and
lock
int
dec
mov
or
ljmp
mov
mov
incl
cltd
sti
dec
and
pop
out
xchg
fdivrs
std
pop
cli
outsb
mov
push
repz
jle
in
jge
test
xchg
lds
jmp
push
mov
rdmsr
in
jecxz
es
cmp
call
mov
std
sbb
test
push
imul
inc
call
add
xor
or
inc
sbb
push
mov
mov
jmp
cli
adc
sbb
or
insb
rolb
out
clc
stos
jno
fisttps
arpl
mov
push
jmp
sub
inc
scas
sub
daa
fsubs
movsb
out
js
lods
bound
jge
out
imulb
divl
in
repnz
imul
hlt
inc
aad
rol
inc
test
cmc
cld
cwtl
add
mov
shrl
dec
mov
jg
popa
add
add
shrd
sbb
jp
jle
imul
sub
and
add
add
push
and
shlb
sub
gs
rcrl
out
mov
std
pop
mov
mov
cmp
sahf
and
inc
rcrb
hlt
fbld
adc
stc
mov
inc
add
pop
mov
outsl
xchg
bound
inc
mov
aaa
inc
pop
decl
jge
ficomps
int3
pop
mov
aad
xlat
in
xchg
in
addr16
outsl
addr16
clc
out
fdivrp
push
aas
mov
jb
jp
stos
or
cld
dec
aad
or
roll
dec
xor
pusha
mov
jmp
or
jl
mov
cmpsl
iret
adc
test
lock
pop
fildl
pop
not
test
into
test
mov
fucomp
sub
popa
mov
jo
or
and
dec
call
pop
or
mov
adc
sub
add
sbbb
in
mov
imul
ds
cs
arpl
sub
frstor
mov
aaa
mov
jne
inc
jno
jo
sub
aaa
loop
inc
shrl
xchg
cmpb
and
aam
loopne
mov
cltd
inc
out
mov
pop
test
or
data16
jp
push
hlt
xchg
sub
mov
dec
add
call
mov
sti
push
mov
or
scas
test
sahf
repz
xor
cwtl
cs
push
jae
aaa
push
jge
loop
inc
sbb
push
pop
lods
push
mov
dec
sti
xor
xchg
mov
mov
pop
rorl
mov
sbb
in
add
into
inc
push
xchg
add
loop
xchg
jecxz
shrl
sub
jecxz
inc
test
push
or
lock
fbld
or
addr16
or
and
aaa
mov
les
mov
mov
ljmp
sarb
pop
in
adc
sbb
stc
lods
bound
sbb
fdivrs
sbbl
sub
or
fstl
inc
pusha
decl
mov
jp
jp
lock
pop
in
push
adc
aas
lret
dec
incl
mov
sub
push
gs
shr
or
das
or
fildl
jmp
inc
stos
shrb
inc
cmc
xor
sbb
cmp
dec
lcall
or
dec
bound
mov
fisttpl
mov
push
in
jne
ret
outsb
shlb
mov
dec
mov
or
repz
push
inc
pop
call
xchg
out
mov
cmpb
add
xor
fistpll
daa
fstpl
sbb
cld
aam
fdivrs
xchg
lahf
addb
aaa
outsb
inc
imul
scas
mov
jp
and
imul
mov
mov
leave
out
pop
mov
or
ficoml
fsubl
mov
push
sarb
jbe
and
fnsave
call
lret
and
add
enter
lock
mov
xchg
mov
sbb
dec
xor
pop
orb
clc
jmp
inc
scas
pusha
pop
pusha
int
jle
push
int3
mov
scas
xor
mov
mov
push
ret
sti
push
push
jge
ljmp
pop
cli
scas
jae
das
adc
push
mov
or
adc
xor
push
xchg
call
sbb
stos
jle
roll
int
and
or
xor
mov
in
addl
dec
or
fst
filds
pop
xor
or
pusha
pop
mov
xor
addb
cmpsb
xchg
add
lcall
xor
out
adc
stos
inc
jo
cwtl
add
lock
insl
aam
push
loopne
out
ja
adc
gs
insl
fcomps
inc
sbb
mov
cmp
out
dec
int
out
or
subl
push
enter
adc
cld
sbb
clc
fiadds
xchg
jp
insl
fwait
rcr
out
and
int3
cmp
fildl
fisubl
sub
mov
or
adc
add
clc
or
sub
scas
xor
addb
cmp
and
adc
mov
popa
jp
mov
or
mov
add
adc
cmp
add
sub
pop
or
fdiv
push
push
stc
inc
arpl
adc
adc
xchg
mov
xor
adc
xchg
sbb
sub
popf
inc
lahf
add
adc
mov
jns
jo
addb
inc
push
lock
push
aam
push
sub
int
pop
fsts
jo
ret
xor
and
pop
out
mov
ljmp
cmpsb
test
adc
testb
inc
adc
loop
xchg
fisttpll
xlat
inc
outsb
clc
arpl
movlps
fists
inc
dec
and
add
test
jb
push
xor
add
out
mov
xchg
mov
out
add
cli
rolb
repnz
mov
sbb
or
fbstp
data16
fcmovnu
dec
test
jne
fcmovnb
test
lret
repnz
aam
sbb
adc
adc
daa
je
movb
lcall
add
test
andb
push
rolb
mov
mov
push
mov
mulb
ds
xor
dec
cmpsb
sub
and
stos
clc
sub
or
jecxz
mov
push
subb
inc
lock
and
hlt
push
push
clc
scas
lea
jge
sub
mov
call
fstl
push
cmp
add
or
xor
aas
lahf
sub
xchg
jns
pop
push
mov
inc
lock
cmpsb
push
jge
arpl
and
jae
outsl
aas
sbb
sbb
xor
psubusw
sbbb
push
fwait
cli
aaa
pop
insl
adc
mov
jle
xor
mov
cmp
and
mov
sub
push
dec
mov
das
mov
das
mov
xor
sub
push
cmc
or
fwait
or
xor
aad
xor
and
xchg
test
inc
cs
in
aas
cli
in
mov
pop
call
and
outsl
mov
mov
mov
inc
fcomps
dec
bound
ss
nop
jge
inc
jo
jle
inc
std
inc
xchg
xchg
hlt
lods
jnp
cli
test
and
lea
cs
sbb
stos
or
push
testl
pop
xor
xchg
out
ffreep
push
mov
mov
sbb
add
lret
fneni(8087
cmp
pop
jl
adc
rcrb
popa
stos
sbb
loopne
orl
sbb
sbb
jae
xchg
insb
xor
lea
in
adc
sub
push
mov
xorb
fucomi
mov
inc
mov
outsl
movsb
mov
jge
outsb
jno
pop
mov
hlt
dec
movsb
lods
dec
idivb
imul
push
test
or
fs
mov
aaa
push
jle
ret
adc
cmpsl
bound
cwtl
cmpsl
jne
add
push
jp
xor
ljmp
cltd
xchg
mov
adc
push
xchg
test
xchg
cli
lds
pop
xor
lds
clc
inc
data16
sbb
test
hlt
in
int
push
add
aaa
mov
jb
or
mov
mov
mov
and
sbb
mov
ret
inc
sbb
adc
push
sbb
push
inc
pop
push
mov
mov
pop
cmpsb
das
icebp
cmp
jg
cs
lcall
pop
in
xor
jg,pn
into
and
sub
adc
call
xor
xchg
cmp
insl
mov
mov
or
cmp
inc
in
cmove
in
clc
ljmp
sub
insb
inc
enter
pop
jns
lret
mov
xchg
loop
aam
xlat
gs
push
pop
shl
xor
mov
mov
lock
push
iret
mov
subb
mov
adc
pushl
adc
push
lcall
outsl
insb
push
std
cld
pop
outsb
cs
int3
icebp
sub
jbe
in
xchg
sub
js
ret
arpl
mov
push
jecxz
pop
clc
jl
repz
mulb
mov
mov
add
mov
fbld
add
loop
or
push
insl
js
jne
lea
dec
push
fisttpll
jle
or
je
insb
sub
test
dec
mov
cwtl
test
cwtl
in
mov
test
roll
sbb
andl
fcmovnb
fldt
mov
add
xchg
or
fimull
inc
pushf
sub
decl
mov
push
add
lret
sub
bound
popf
daa
mov
std
fildl
scas
push
mov
xor
add
std
mov
lea
jecxz
aad
or
fbld
add
dec
xchg
ljmp
lock
rolb
xlat
ja
imul
jno
movsl
mov
adc
sbb
and
dec
lret
and
hlt
jnp
xor
mov
add
popa
fists
mov
aad
outsb
sub
hlt
int3
mov
xchg
jns
test
cmp
mov
or
cmpsb
mov
ljmp
mov
pop
sub
popa
xor
mov
inc
cmp
call
pop
pop
push
cwtl
sbb
sub
arpl
jl
cld
push
xchg
inc
incl
ljmp
gs
test
mov
add
sbb
mov
fsub
or
and
loop
adc
lock
aaa
and
stc
mov
push
out
insb
pushf
movsl
adc
stos
jle
test
test
pop
push
mov
test
stc
je
sti
push
je
loopne
mov
outsb
mov
rep
dec
push
cmp
fcompl
int3
sub
push
test
mov
scas
cmp
mov
xchg
and
push
jne
cmp
mov
mov
repnz
pop
push
test
pop
fcompl
push
inc
mov
fbstp
cmp
lods
in
pop
cmpsl
pusha
repnz
fdivrs
jno
mov
push
jae
fsubrl
test
push
stos
das
loop
and
cmpsb
mov
test
stc
xor
ja
insl
jo
and
addr16
sub
cli
and
dec
sub
jne
adc
mov
bound
js
mov
das
push
mov
push
rolb
adc
adc
rclb
lock
subl
imul
inc
cmp
enter
inc
inc
jmp
mov
daa
nop
into
mov
mov
jae
fucomp
fcmovnu
outsb
push
add
pop
add
stos
mov
popa
adcl
jne
je
test
mov
data16
mov
lds
lret
pop
insl
inc
pop
test
mov
rcr
and
int3
or
adc
gs
into
add
ljmp
lret
test
rclb
jg
arpl
sub
inc
adc
enter
sbb
jae
xchg
add
pop
inc
sbb
mov
or
adc
scas
testb
push
outsb
adc
adc
dec
push
inc
scas
mov
add
in
lds
call
add
out
push
add
push
add
stc
adc
add
or
stos
sahf
xor
xor
in
les
out
jmp
and
push
adc
or
inc
cmpsb
mov
push
push
outsl
sub
xor
pop
int3
addr16
imul
pop
cmp
dec
pop
sbb
xor
out
push
sub
mov
sbbl
fidivrl
inc
or
push
adc
mov
xor
addr16
rorb
inc
movsl
and
add
mov
lods
sbb
or
sub
and
sahf
mov
xchg
mov
inc
fs
and
jo
push
rorb
xor
inc
popl
lods
inc
int
out
f2xm1
adc
in
pop
add
dec
inc
or
cmc
into
arpl
sub
push
sub
fisttpl
data16
and
adc
or
sbbb
leave
test
push
sub
push
aad
mov
icebp
fcoms
add
sbb
mov
nop
je
shlb
shlb
push
hlt
daa
mov
sub
cmp
dec
sub
fwait
cmp
dec
or
sbb
int3
add
dec
xlat
add
sub
xor
lds
fdivrl
rcrl
sbb
adc
fldlg2
jmp
adc
mov
sub
push
mov
cmp
mov
mov
addr16
call
lcall
xchg
pop
and
pop
fcmovu
lahf
inc
ret
mov
out
xlat
push
cmc
cwtl
jb
sub
pusha
adc
sbb
test
dec
ret
aas
inc
out
movsl
pop
sti
jg
fdivrp
subl
pop
inc
ret
and
pop
pushl
jns
call
ja
push
mov
pop
js
test
test
mov
mov
and
test
fdivs
jo
ret
and
add
mov
sub
jnp
sbb
push
inc
pushf
scas
or
loopne
push
insb
push
cltd
adc
xor
mov
fwait
mov
fidivl
push
push
shr
sti
jo
adc
or
pop
cmp
rorl
jl
add
pop
or
scas
aaa
mov
sbb
ja
adc
xchg
icebp
jb
aaa
hlt
or
sub
insl
stos
inc
or
dec
iret
adc
ja
cmpsl
push
fisttpl
or
pop
lods
inc
push
stos
dec
out
fadds
sbb
add
leave
add
add
sub
addr16
fisubrs
shrl
scas
push
dec
shr
sub
adc
cld
and
addl
popa
pop
and
movsb
addr16
fsubl
subb
iret
pusha
or
scas
aaa
pop
ljmp
or
push
test
rorl
mov
cltd
imul
lret
jo
adc
ret
xor
push
insb
sub
mov
and
pushf
mov
adc
in
xlat
out
into
es
sbb
adc
push
xor
aad
push
jne
pushf
inc
dec
inc
pop
inc
xchg
ror
shl
inc
cmp
inc
dec
xchg
cmp
lret
stos
adcl
stc
mov
or
push
movsl
pushf
popa
ret
fmuls
cmpb
rolb
add
jae
jp
dec
mov
sub
test
js
inc
cld
mov
or
aad
fdivrs
popa
daa
and
adc
loopne
lods
push
dec
mov
jb
push
sbb
or
cli
xor
ret
mov
cmp
setbe
xchg
mov
adc
shl
inc
or
jge
in
pusha
inc
cmp
jne
loopne
mov
sysenter
cwtl
pop
stos
ss
adc
and
addb
push
pop
aad
mov
les
jno
rcrb
subb
xchg
pop
inc
pushf
loopne
movsb
adc
repnz
xchg
add
daa
xor
add
jp
rolb
or
daa
push
loop
mov
cmpb
and
fadds
cwtl
mov
pushf
jmp
fildl
sub
jo
jne
xchg
add
xor
sub
pmulhw
lock
inc
and
sbb
jmp
or
in
sbb
or
add
in
push
adc
push
cmc
add
clc
loopne
sarb
pop
lock
push
push
mov
push
test
mov
or
jns
fstps
push
into
adc
mov
int
mov
xor
jno
lret
call
mov
add
dec
adc
pop
sub
call
mov
pop
xorb
jle
jl
das
shrl
in
or
cmp
popf
and
and
fldl
cs
adc
rcll
mov
inc
pop
data16
clc
jb
dec
adc
xchg
jp
pop
jbe
fwait
cmpsb
loopne
fs
in
outsl
mov
into
cmc
ror
xor
push
negl
and
enter
mov
add
sbb
loope
jg
and
inc
loop
pop
mov
test
add
push
shlb
outsb
xorb
add
fucomip
cmpsl
mov
fsubr
mov
les
movsb
jecxz
sbb
fwait
and
xchg
clc
sub
mov
or
jle
xchg
adc
test
call
inc
jae
insl
cld
aad
scas
shlb
loopne
fildll
cld
dec
jl
xchg
fisttpll
in
mov
xor
stos
pop
insb
push
shlb
mov
sahf
bound
or
adc
adc
rorb
outsl
sub
mov
je
cmp
mov
stos
lds
add
sub
xchg
or
cltd
adc
js
aaa
and
nop
roll
stos
jg
cmc
in
or
movsl
arpl
aam
ljmp
push
leave
sarl
jbe
and
scas
xchg
and
jbe
outsl
cmp
push
jle
in
daa
push
je
push
sub
lock
rcrb
push
push
jmp
mov
cli
adc
add
shll
jne
cmp
or
fisttps
rcll
inc
adc
mov
fwait
jmp
adc
pushf
js
and
xor
cmpb
pop
push
outsl
mov
lock
test
add
push
dec
inc
outsl
push
mov
fnstenv
je
xchg
jg
mov
push
xor
stc
or
fcomps
cmpsb
xchg
lea
or
cld
incl
push
test
jmp
push
int3
lock
loopne
add
insb
mov
cld
call
ret
arpl
je
sub
and
push
jg
test
sbb
add
jno
or
loopne
and
sbb
inc
mov
sbb
gs
push
pop
mov
mov
add
pop
add
and
icebp
add
xor
insb
data16
movsb
mov
pushf
sbbl
or
push
das
jmp
cmp
mov
stc
out
push
sarb
addr16
inc
sub
aaa
decb
mov
or
jl
mov
mov
and
or
jp
jecxz
add
std
or
adc
loope
adc
std
das
adc
pop
mov
mov
cmpsb
or
imull
sub
jb
loope
mov
mov
clc
jl
clc
sub
call
int3
int
add
fs
mov
adc
cld
mov
ret
push
xlat
mov
lahf
jg
adc
jns
inc
add
push
or
or
cli
or
jl
sar
call
lods
repz
fs
in
push
cld
xlat
sbb
pusha
psubusb
xchg
call
fsubrs
ror
add
xor
fldl
clc
and
test
scas
inc
jg
les
xor
imul
std
popf
push
sti
dec
sbb
lahf
cmpsl
js
add
xlat
cmp
ret
out
test
roll
insb
mov
jne
fwait
stos
pusha
subl
inc
icebp
loopne
cmp
push
inc
stos
repz
jge
outsl
imul
ds
and
sub
ljmp
loope
cmp
in
dec
lret
sahf
xchg
mov
icebp
pop
mov
mov
lret
push
rcl
mov
sbb
fsubp
push
sub
mov
popa
sti
stos
pop
ljmp
push
pop
or
cld
mov
lods
std
push
jbe
cmc
xchg
js
cmc
cmpsl
mov
push
mov
or
push
lock
cwtl
mov
push
pop
ljmp
pop
add
in
int3
pop
and
cmp
or
fmul
xor
or
in
scas
aaa
ljmp
and
sti
decl
pop
jge
inc
sbb
fistl
movb
pop
or
push
int
aaa
inc
in
jg
insl
cwtl
call
cmc
fidivs
fldt
adc
fisttps
mov
pushf
sub
sti
adc
movsb
pop
sbb
and
and
add
mov
in
sub
xchg
loop
shrb
jmp
ljmp
stos
fistpll
movsl
out
mov
or
insb
shrl
mov
hlt
call
sbb
pop
sub
jno
mov
jg
std
ret
add
pusha
mov
pop
jge
mov
or
add
sbb
lahf
mov
lcall
dec
mov
lock
outsb
cmp
mov
stos
les
cmp
cmpsl
xchg
sbb
jbe
cld
call
xchg
shrb
pop
out
std
lahf
shr
inc
push
cmc
shrl
sbb
pop
jg
dec
into
insl
popa
jae
inc
sub
xchg
adc
jg
shr
out
xor
fildl
push
scas
test
imul
clc
jno
repz
adc
outsb
adc
fsubs
push
lock
imul
and
jl
sub
nop
cmpsb
pop
fsubl
ret
insl
popa
shll
push
aas
pop
push
xchg
xor
decl
sbb
sarl
add
loope
pushf
sub
lret
cmp
add
orl
cld
push
pusha
negb
test
call
cs
inc
mov
ret
mov
rcl
jnp
mov
sub
mov
cmp
cmpl
inc
cmp
aad
sub
jns
lret
cmp
push
decl
mov
shr
add
imul
andb
mov
sub
cmp
and
jmp
sarl
mov
xor
mov
popa
fadd
ficompl
stc
xchg
inc
and
and
shr
lods
push
scas
dec
test
mov
inc
es
sbb
test
cmpb
add
ret
jge
inc
aad
add
push
jae
sub
loopne
loope
add
and
pop
ljmp
les
lds
gs
lods
lcall
shrb
notb
insl
loope
movl
mov
das
mov
lahf
repz
or
std
pop
icebp
rorl
cwtl
pop
lahf
fisttps
pop
push
test
pop
clc
or
sub
mov
adc
or
mov
rclb
and
fisttpl
icebp
sbb
pop
es
je
popf
mov
sbb
cs
shll
xchg
data16
rolb
lods
push
inc
ja
add
mov
mov
aad
mov
shl
stc
cs
fbstp
fwait
sbbl
sbb
outsl
andb
outsl
jg
inc
mov
scas
sbb
pop
cmp
inc
adc
aad
adc
lods
loopne
fisttps
popf
clc
mov
clc
rorb
mull
and
es
outsb
pop
ja
or
xor
jp
xchg
mov
fisttps
vpcmpeqd
addb
sub
mov
push
and
sbb
outsb
bound
xlat
mov
outsl
hlt
jg
les
rorl
xor
xlat
jo
nop
xor
clc
add
inc
pushl
mov
fiaddl
aam
mov
xor
push
pushf
pushf
dec
jle
daa
js
test
mov
adc
cwtl
and
aaa
pusha
inc
aam
loop
jge
dec
lds
mov
mov
cmp
lock
xchg
add
sbb
sub
inc
sbb
les
mov
mov
scas
push
mov
adc
mov
aam
call
rcrb
sbb
dec
mov
fs
xchg
adc
jnp
int
je
rcl
inc
je
xchg
nop
ljmp
in
cltd
inc
js
mov
inc
pushf
and
push
insb
jle
jae
sbb
cmp
repnz
inc
loope
mov
and
or
push
lret
popf
loop
pop
mov
dec
adc
add
addr16
mov
movsb
cmp
push
pushf
and
add
or
push
xchg
lock
dec
sbb
movbe
fwait
xor
js
mov
mov
test
testl
mov
xchg
es
test
push
or
xlat
inc
cmp
xor
jp
sub
push
popf
pop
pop
aaa
popa
enter
jne
push
mov
mov
cmpsb
inc
ljmp
xchg
or
sbb
test
adcl
lock
aaa
ljmp
mov
call
and
icebp
jno
call
stos
dec
ja
lock
sbb
dec
jno
fists
adcl
mov
inc
push
xlat
xorb
pop
test
pop
shrb
cmp
jae
filds
add
inc
xacquire
nop
or
add
cmc
jae
incl
push
adc
icebp
dec
lahf
xor
xchg
scas
subl
or
lods
jne
sbb
sbb
xor
mov
rolb
and
push
stc
xchg
loopne
sbbl
jecxz
pop
stos
fwait
push
data16
cltd
mov
add
mov
enter
sub
dec
aam
jnp
cld
lods
test
dec
add
das
mov
lahf
push
adc
pop
out
idivl
cs
adc
adc
mov
inc
lahf
fisttpl
subb
stos
mov
inc
sbb
es
fidivrs
push
adc
pop
imul
les
adc
cmpsb
lahf
inc
push
out
or
fcoms
movsl
scas
jnp
pop
aad
daa
cmp
pmaddwd
sarl
popf
inc
out
stos
iret
rclb
scas
mov
rolb
incb
aaa
aad
ror
sbb
push
out
jb
or
inc
fsub
and
loopne
fldenv
adc
loope
sub
xchg
fidivs
cld
mov
mov
lahf
mov
jns
and
lcall
cmpsl
push
adc
mov
mov
sub
and
push
pop
mov
aam
mov
ret
cs
cmpb
into
fstps
or
xchg
push
cmp
sbb
sub
jns
push
jecxz
mov
out
sbb
sbb
out
dec
cmp
mov
lea
lds
outsb
mov
xor
sub
xchg
add
call
mov
mov
bsr
inc
xchg
or
jo
in
pop
hlt
dec
aam
and
orb
pop
mov
pop
fs
stc
test
std
mov
out
popa
mov
xchg
inc
mov
ljmp
int3
mov
push
dec
out
dec
add
push
sbb
pop
mov
push
mov
inc
mov
jb
cld
xlat
mov
outsb
sbb
pop
test
inc
stos
cs
imul
mov
or
shrb
insl
push
lea
xchg
cmp
jp
out
mov
not
ds
sahf
xchg
call
test
mov
jbe
sbb
cmp
dec
inc
insl
lcall
fisttpl
push
jge
cmp
out
cltd
push
mov
test
in
cwtl
inc
xor
mov
shl
jo
push
jns
pushf
rcr
push
int
dec
rcl
mov
inc
sub
mov
sbb
icebp
jp
adc
fistl
xchg
xchg
cmc
sbb
jl
cmp
cmp
lret
fucom
jge
mov
jg,pn
ret
push
inc
mov
in
mov
cld
add
xchg
shlb
idivb
stos
out
sub
rcrb
jle
sbb
fcomps
xor
add
mov
ret
xor
sbb
push
add
inc
push
std
mov
stos
outsb
and
sub
iret
imul
pop
cmp
mov
divb
inc
call
or
pop
mov
xor
pop
jbe
scas
xor
cmc
lock
pop
push
fdivrs
lahf
mov
sarb
add
mov
xchg
inc
push
addb
mov
lret
fiaddl
mov
fwait
add
xor
fistl
icebp
imul
in
mov
inc
int3
jg
adc
xor
aam
dec
fidivl
mov
push
mov
and
loope
jbe
ja
pop
inc
dec
or
incb
inc
ret
lods
rcrb
pop
pushf
push
sti
popf
pop
hlt
sbb
lret
add
test
xchg
xchg
sbb
fwait
daa
or
popa
in
iret
jo
pop
jp
aaa
jecxz
add
inc
insl
push
cmpsb
add
out
push
add
pop
mov
adc
ss
imulw
cwtl
mov
movsl
addl
hlt
aaa
adc
lret
cmp
loop
pop
leave
cmp
je
adc
lea
cli
add
insb
xor
ss
fstpl
cmc
into
or
push
pop
add
aaa
int3
dec
cmpsl
cmp
xchg
xor
dec
imul
dec
loope
repnz
jle
jne
fistl
std
xchg
sub
cwtl
ljmp
sub
aad
mov
mov
jp
push
fisubrl
cmp
sbbl
push
cmp
aaa
insl
lock
jl
adc
jecxz
pop
inc
adc
adc
dec
xor
push
out
outsb
jp
pusha
and
cwtl
adc
lahf
clc
fdivrl
jmp
mov
or
push
pop
ss
mov
nop
xchg
cld
ss
scas
jne
or
notl
and
subl
cli
xchg
mov
or
imul
pop
clc
aaa
divl
xchg
sub
out
lcall
lock
or
or
push
mov
cmp
mov
leave
inc
mov
shlb
aaa
mov
inc
mov
aad
clc
in
sbb
mov
jge
movsl
int3
clc
sarb
fidivs
push
ljmp
jecxz
ljmp
xchg
lahf
add
push
bound
inc
push
jmp
push
jmp
push
push
fidivs
mov
fs
jbe
loop
jmp
repz
testl
adc
lcall
mov
inc
std
jbe
and
pop
cli
mov
inc
pop
jmp
sbb
sub
ja
mov
jle
mov
or
xchg
movsl
loope
push
fcomp
clc
push
imul
or
sar
insb
std
jae
sbb
loopne
lock
xchg
inc
dec
iret
push
popa
stos
and
lcall
fistpl
out
es
repz
mov
mov
cwtl
or
mov
ja
jb
and
jmp
sti
pop
lret
insb
sti
test
cmc
pop
jb
rorl
mov
adc
mov
xchg
xchg
pop
dec
ja
sub
mov
mov
popf
je
in
mov
adc
fmull
dec
fcoml
push
sub
outsb
cs
cs
shrl
dec
add
lods
xor
sub
rolb
adcb
faddl
mov
inc
shlb
cs
dec
repz
push
neg
push
jne
ljmp
dec
jmp
and
inc
fdivrl
push
in
add
cmp
inc
lods
xchg
lcall
shll
mov
jne
das
aad
je
sbb
addb
mov
add
aaa
add
sbb
or
xor
jae
loopne
out
movsl
mov
push
adc
aad
adc
mov
test
sahf
test
fisttpl
jmp
or
adc
sbb
aad
lods
ret
mov
inc
pusha
push
jge
sti
leave
decb
es
fidivs
cld
add
mov
pop
xchg
shrb
xlat
sub
fisubl
sbb
in
movsb
adc
inc
nopl
bound
pop
adc
dec
xchg
cs
or
nop
or
adc
mov
adc
or
mov
pop
adc
testl
xchg
lea
pop
dec
shlb
cmp
add
push
rolb
loop
add
add
dec
jbe
adc
inc
lock
push
inc
inc
cld
mov
add
lret
fwait
das
addr16
and
mov
sub
mov
mov
push
sub
aad
outsl
jle
pop
loopne
pop
cmp
shll
sbb
push
rcll
dec
js
shlb
sub
jae
mov
or
jnp
sub
xorb
loope
mov
sbb
lcall
jno
clc
out
divl
sub
jo
mov
mov
aas
mov
push
add
aaa
adc
data16
inc
fnstsw
xchg
clc
ljmp
ljmp
idivb
es
push
push
mov
rolb
jo
movsl
rcr
dec
in
push
rcr
or
or
mov
mov
vcvtsi2sd
fwait
adc
cli
outsl
lock
sbb
cmc
add
or
dec
xchg
cltd
push
lock
xor
into
push
cmp
mov
insl
add
rorb
mov
pop
call
push
iret
push
ret
or
sbb
popf
inc
xor
or
sbb
add
aam
add
jo
aam
rclb
cli
jge
cltd
and
mov
rcrl
inc
push
jne
add
dec
mov
dec
addr16
add
outsl
stc
or
add
and
sbb
fcomip
jb
ret
and
hlt
aam
fs
xor
xorb
bound
dec
push
popf
loope
cmp
outsl
xor
pusha
xchg
hlt
shrb
je
test
std
inc
push
in
mov
outsb
and
and
mov
adc
dec
aam
imull
adc
imul
xor
xor
loopne
push
push
enter
add
fldt
xchg
je
out
push
aad
inc
push
xchg
and
add
clc
lcall
test
add
jbe
push
in
inc
and
add
sbb
into
xchg
or
mov
inc
mov
mov
pop
hlt
pop
mov
sbb
jno
or
or
pop
hlt
test
add
or
push
push
mov
inc
inc
mov
rolb
cmpsb
add
inc
movsb
mov
jb
lcall
xor
je
pop
mov
rol
outsb
xor
jne
sub
jne
dec
arpl
push
les
push
and
loop
push
push
inc
lock
fsubrs
pop
cli
inc
cmp
and
mov
shl
outsl
hlt
mov
or
cli
test
mov
cmp
stc
test
mov
ror
loop
sub
cmp
fwait
js
xor
jl
dec
or
movsl
outsl
sbb
xor
add
out
enter
addl
dec
cmpsb
mov
sbb
test
xchg
js
push
and
sub
mov
push
into
jp
cmc
insb
pop
pop
ficoml
pop
bound
jl
idivb
test
xchg
or
push
add
lahf
pop
jg
je
cmp
movsb
push
dec
lock
dec
loope
jmp
imul
mov
aad
push
in
fucomi
cwtl
sar
fcmovnu
loop
fwait
jb
rclb
sbb
in
test
jbe
cmc
sub
aaa
cli
or
clc
cmpsl
cli
push
sbb
das
push
mov
das
push
cltd
unpcklps
scas
je
sbb
or
xchg
add
xchg
jae
out
mov
and
inc
mov
shll
out
cmc
outsb
and
push
out
outsl
pop
jge
gs
mov
push
lods
sub
push
mov
jge
pop
clc
push
dec
xchg
xchg
ficoml
ret
aam
push
push
or
movsb
fiadds
pop
mov
push
shlb
stc
cmpsl
popa
push
and
cli
pop
pop
adc
add
ficoms
inc
inc
icebp
or
jb
insb
mov
adc
mov
je
fldt
cmp
and
ljmp
cltd
mov
mov
xchg
sbb
xchg
pop
jno
pop
scas
or
ljmp
inc
xchg
pmaxub
scas
cmp
cmc
lea
sbb
fbld
pop
sbb
test
inc
lock
icebp
das
ret
pop
addr16
adc
pop
outsl
cltd
push
incl
mov
movsl
xor
shlb
js
push
insb
lahf
ja
mov
mov
repnz
xorb
jp
outsb
push
ljmp
pop
lods
adc
ret
inc
ljmp
es
xchg
pop
xchg
sbb
enter
fwait
in
adc
movsb
cld
push
jg
inc
imul
rol
jno
sti
sbb
in
aaa
mov
incb
pop
popa
push
int3
add
int3
in
mov
sub
mov
outsb
inc
push
cmp
push
mov
outsb
iret
and
sub
addr16
sbb
mov
mov
or
jg
xchg
lods
adc
dec
xchg
das
pop
cmp
shrb
jnp
lock
fisttpl
test
cs
dec
leave
hlt
fbld
cld
jg
aad
js
into
sub
lahf
js
xorb
dec
jno
and
jo
ljmp
mov
movsl
xor
stos
sub
and
cmp
mov
and
mov
imul
dec
sbb
pop
mov
cmpsl
sub
sbb
cmpsb
je
mov
mov
jo
cli
aaa
loopne
or
adc
sahf
xchg
dec
int
mov
outsl
sar
aaa
mov
mov
pop
sbb
mov
icebp
fldt
daa
stos
cwtl
inc
icebp
mov
pop
dec
xchg
subb
sbb
push
sbb
ds
add
mov
adcb
mov
test
mov
ffreep
and
or
mov
rclb
lds
in
fadds
frstor
add
data16
jle
inc
pop
push
adcb
lods
dec
sbb
cmp
pop
sahf
xor
cmp
xchg
dec
or
imul
xor
jp
popf
fs
jge
bound
lahf
jne
sub
add
dec
sub
loopne
or
mov
loopne
mov
popa
mov
add
out
ret
outsb
sub
test
clc
jno
out
mov
cwtl
dec
or
add
sbb
push
enter
cmpb
add
into
aam
sub
xchg
fidivs
xor
ror
test
das
rorb
add
and
mov
js
adc
or
xor
xchg
cld
rclb
xor
push
mov
inc
loope
or
jge
fmull
cmpl
cmp
mov
sahf
pop
sbb
dec
pusha
sub
add
das
cld
push
rcrb
inc
inc
add
je
sbb
push
cmpsl
call
rolb
call
sbb
sub
aam
pop
mov
or
jge
xchg
add
imul
jo
mov
subl
mov
pop
cmp
dec
sbb
xor
std
outsb
jmp
loope
add
jge
and
orb
jnp
jl
sub
les
xor
movsb
push
adcl
sub
stos
gs
lock
xchg
jne
adc
and
xor
and
sub
mov
aad
or
addb
js
idiv
mov
xor
test
fsubl
cmpsb
xchg
mov
sbb
mov
jno
push
pop
mov
and
fs
dec
or
les
pop
popf
jb
pusha
jne
mov
in
fadd
cmp
adc
xor
outsl
xorl
mov
xlat
nop
or
adc
sub
fsubr
jmp
add
xor
shlb
jg
jmp
bound
add
jo
dec
sbb
xor
and
and
jmp
pop
xor
adc
frstor
sahf
fsubrs
dec
lea
mov
pop
mov
sbb
and
sbb
push
test
mov
movsb
in
iret
inc
adc
pop
cld
clc
mov
or
orb
xchg
lock
lock
movsl
cmpsb
mov
aam
add
or
or
pop
xchg
mov
aaa
pop
xor
xor
mov
cmp
aaa
fsubp
xchg
add
ds
bound
or
int3
and
sub
push
inc
or
fcompl
loopne
fcmovne
les
das
sar
and
pop
mov
imul
jmp
mov
movsl
or
sub
imul
dec
in
jae
pop
pop
pop
cmp
jbe
fmull
dec
cld
call
sbb
into
fidivs
clc
mov
mov
add
cmp
mov
inc
divl
dec
fwait
xrelease
add
mov
jle
in
test
insb
lock
inc
insb
aaa
mov
ja
loopne
jge
test
call
call
xor
adc
or
cmp
mov
sahf
call
or
rcl
or
out
jns
xorb
push
mov
scas
scas
push
hlt
test
insb
mov
vpshuflw
cld
outsl
adc
push
jbe
xchg
mov
repnz
lock
jne
outsl
push
aad
popf
and
xchg
mov
out
mov
int
or
xlat
ljmp
js
push
mov
out
pop
faddl
test
adc
push
push
call
filds
mov
loope
sbb
mov
stos
dec
mov
pop
pop
pop
incb
mov
xchg
inc
dec
push
add
xchg
add
subl
or
push
cmp
jp
sub
in
and
in
aaa
ja
pop
xchg
mov
sbb
pop
pop
jae
leave
mov
idiv
lea
pop
and
push
pushf
hlt
imul
jg
cs
bound
cmpsl
add
cmc
aad
pop
or
leave
adc
mov
call
repz
mov
dec
pop
sub
std
fwait
call
repz
mov
mov
loopne
lret
hlt
inc
je
mov
mov
jno
pop
clc
fnstsw
add
cld
jae
xlat
and
pop
xor
imul
lret
stc
out
xchg
xor
in
dec
push
mov
mov
std
ret
jle
mov
add
iret
in
bound
push
sbb
jp
and
sbb
inc
pop
popf
and
sub
outsb
mov
and
dec
jle
notb
aaa
push
cmp
aaa
cmp
mov
and
pop
cld
inc
mov
adc
xchg
jecxz
or
mov
sbb
test
outsb
in
cmp
orl
das
hlt
lods
inc
fcompl
data16
ficoml
fcmovnu
sbb
ds
dec
popf
lea
sub
sub
test
clc
movsb
icebp
es
push
test
mov
std
inc
into
xor
dec
inc
adc
decl
mov
in
pop
mov
dec
dec
sub
dec
sarb
and
aaa
mov
and
inc
cmpsb
dec
js
add
out
adc
jg
pop
inc
push
mov
cli
and
mov
pushf
or
repnz
mov
outsl
iret
sub
mov
jmp
mov
jmp
push
cli
clc
cmp
je
add
bound
mov
ds
mov
lea
maxps
cmp
insb
ret
cmp
ret
mov
sub
mov
sbb
push
add
jg
pop
and
scas
mov
push
clc
mov
xchg
das
rclb
ret
stos
lmsw
mov
push
add
loope
adc
mov
jns
inc
inc
push
sub
push
or
das
push
inc
dec
push
dec
sbb
push
mov
inc
out
out
aad
inc
lds
loop
or
cli
mov
mov
add
mov
mov
dec
and
add
jno
mov
scas
call
sub
or
pop
dec
jnp
je
in
or
ret
cmpsl
insb
push
jae
push
insl
mov
and
dec
imul
rclb
lods
add
dec
scas
inc
jae
adc
add
or
pop
shlb
add
inc
jmp
gs
add
in
add
xorl
xchg
enter
add
scas
xchg
jp
daa
hlt
lods
fstl
inc
xor
mov
mov
push
flds
dec
cltd
pop
jp
fists
mov
in
rol
xchg
jae
das
jge
xchg
sub
mov
adc
sbb
lds
scas
repz
sbb
jp
lds
fisttps
or
and
adc
cmp
inc
das
std
pop
faddp
mov
xchg
sub
fsts
and
inc
pop
sub
test
lods
ss
mov
sbb
or
cmp
lock
fstp
add
in
icebp
lahf
push
pop
xchg
cmp
inc
xor
cmc
push
fwait
and
sub
enter
decb
scas
clc
xchg
in
roll
jno
loopne
aad
cltd
adc
mov
adc
movsb
es
iret
xchg
stc
and
pop
ljmp
mov
xor
aad
clc
lea
jle
jno
insb
jge
adc
pop
or
shl
inc
out
test
cmp
fwait
hlt
adc
and
les
int3
or
ljmp
mov
cmp
movsl
jmp
insb
insl
test
fs
xchg
mov
mov
jmp
ja
cld
mov
jle
ds
or
fldpi
push
push
movsl
outsl
arpl
xorb
pusha
lea
lods
xchg
pop
add
inc
pop
scas
fstpl
mov
mov
jbe
push
add
and
dec
pop
xchg
push
mov
mov
jno
mov
fstpt
loope
mov
fstps
push
lds
add
push
loopne
jle
insb
mov
or
jp
mov
and
mov
sti
ljmp
mov
shll
xor
ret
push
clc
sub
aas
repnz
repnz
cld
push
fmulp
aad
dec
test
arpl
lret
cld
cmc
iret
ss
popa
rcrl
cmp
and
and
stos
inc
test
cmpsb
stc
push
inc
xchg
loopne
aad
clc
adc
sti
lods
adc
add
push
sub
mov
inc
xchg
lcall
push
je
push
sbbb
cld
dec
cmp
pop
jno
mov
adc
shlb
add
clc
gs
pop
imull
lcall
cmp
icebp
out
and
push
add
aas
xlat
push
add
mov
add
jl
out
jne
fistpll
push
mov
sub
pop
stos
jno
mov
sub
cmp
pop
dec
mov
mov
test
bound
test
xchg
aas
sbb
mov
aaa
sub
jge
mov
mov
fs
jne
or
mov
shrb
and
fs
inc
sbb
xor
and
cmpsb
jp
jg
js
insl
adc
adcb
xor
mov
in
stos
lcall
adc
cmp
roll
adc
adc
cmp
repz
jns
outsb
aaa
out
mulb
shll
loop
dec
jp
fidivrs
test
and
fsubp
out
add
adc
push
call
das
lock
lcall
cli
and
orl
testl
mov
mov
bound
loopne
push
jle
mov
mov
imul
popf
and
push
push
jg
pop
cld
das
test
imul
and
je
sub
adc
test
adc
xchg
mov
dec
mov
testb
mov
cli
fildl
jae
dec
subl
sub
and
les
sarl
mov
jns
dec
fistpll
gs
sbb
mov
or
jb
bound
mov
les
sub
add
cmp
dec
fisubs
cld
stc
ret
jo
outsl
push
sub
xchg
jg
js
fwait
lea
xor
push
jo
arpl
sbb
aaa
jb
sub
and
dec
or
mov
rcrl
test
dec
push
loop
pop
xor
or
insb
adc
jo
sti
dec
sbbb
cmp
lds
pusha
arpl
jp
mov
mov
dec
sbb
sub
mov
push
pop
aam
xor
sbb
add
jg
negb
scas
lret
and
into
mov
adc
into
sbbb
dec
push
and
icebp
out
call
sbb
adc
insl
insb
call
and
in
jne
add
mov
popa
test
mov
jbe
mov
loope
loope
mov
adc
jbe
daa
mov
xchg
rolb
roll
cmpsl
mov
repnz
std
push
ss
mov
addr16
xor
dec
cli
sbb
idivl
push
jnp
inc
lcall
push
mov
lret
inc
or
lcall
pushf
lret
mov
fistps
imul
and
icebp
or
adc
sbb
hlt
aas
sbb
add
aam
xor
fcoms
pop
in
cmpb
or
inc
cmc
sbb
pop
xchg
pop
cmp
lcall
sbb
sbb
cld
mov
loopne
mov
dec
or
rorb
xor
stos
dec
dec
test
cmpsl
fwait
in
mov
lea
neg
out
push
or
testl
pop
js
adc
push
jmp
pop
jb
jns
gs
subb
push
popf
mov
fstpt
scas
iret
cs
or
pop
movsl
clc
and
test
xchg
movsl
mov
sub
shll
push
std
mov
pop
movsl
pop
inc
ljmp
cwtl
add
add
inc
aas
fistpl
mov
cmp
mov
inc
pushf
dec
test
mov
jbe
xchg
lahf
jne
push
pop
xchg
shr
aam
jno
imul
into
mov
outsl
xchg
inc
cmp
out
inc
roll
ljmp
fimuls
add
lcall
dec
cmp
ja
loopne
enter
jecxz
rcrl
ds
adc
jno
and
test
imul
imul
or
mov
push
xchg
in
xor
sub
sub
mov
mov
lret
ret
lea
cwtl
dec
jp
shrb
sub
test
mov
push
arpl
lcall
or
daa
jle
scas
pop
shrl
sub
and
call
xbegin
and
in
pop
mov
push
dec
mov
or
negl
cli
lret
mov
or
adc
mulb
fwait
dec
xchg
rcl
les
ljmp
xchg
inc
or
ret
mov
int3
orb
cmc
push
outsl
mov
ret
nop
and
xor
pop
add
sbb
cld
jmp
cmp
les
ret
jb
aad
shlb
sub
mov
loopne
jnp
mov
jmp
gs
pop
or
inc
decb
jmp
fs
daa
mov
js
xor
jecxz
inc
and
cmp
or
sub
mov
fstl
mov
movsl
mov
mov
add
outsl
mov
adc
inc
mov
mov
ss
sub
sbb
mov
cli
pop
jmp
adc
jbe
mov
repz
and
adc
pop
je
popf
jle
les
xchg
aam
pop
imul
ljmp
pop
and
xchg
push
fisubl
inc
orb
sbb
leave
ds
daa
dec
in
xchg
rcl
les
pushl
in
xchg
and
inc
rcrl
cs
sub
imul
idivl
mov
push
fisttpl
daa
adc
inc
mov
pop
or
rcrb
icebp
fildll
popf
inc
mov
bnd
mov
sbb
hlt
fmull
jne
jecxz
push
decl
xor
fmulp
jnp
shrb
aad
or
mov
arpl
cmp
and
movsl
mov
and
mov
mov
push
fucomip
test
sub
mov
dec
sub
orl
nop
imul
faddl
mov
insb
cmc
into
sub
stc
cmp
pop
clc
mov
mov
and
fdivrs
xchg
push
cmc
push
dec
mov
push
pop
mov
mov
dec
mov
mov
cwtl
ja
mov
enter
movsb
nop/reserved
xchg
pusha
jg
adc
mov
popf
pop
in
xchg
cwtl
dec
jb
cli
jg
dec
rcrl
bound
cmp
aad
dec
xchg
cmp
dec
call
frstor
jle,pn
cwtl
data16
mov
xchg
outsb
loop
and
das
or
pop
mov
insl
jo
dec
mov
hlt
movsb
push
lds
bound
or
out
in
sbb
sbb
adc
pop
mov
dec
or
pop
loopne
out
inc
leave
push
mov
push
fucomi
pop
mov
push
xor
mov
mov
fcoml
inc
dec
inc
sar
add
push
cltd
dec
pusha
or
out
mov
and
js
lret
cwtl
sbb
mov
in
mov
inc
rcrb
shl
cmp
movsb
aad
stc
addr16
and
cmp
idiv
decl
jno
cmp
movsb
sbb
cli
or
and
mov
aas
lock
mov
in
sbb
xchg
adc
repnz
enter
aaa
daa
out
ss
nop
push
pop
and
aaa
or
cli
fists
fcoml
nop
nop
inc
adc
pushl
clc
cmpsb
imul
mov
in
lret
cmc
scas
push
sub
xor
call
lcall
inc
mov
ds
xchg
or
loop
cmp
pop
int
sbb
incl
jns
mov
pop
jge
cwtl
lods
mov
pop
mov
xchg
fbld
lea
out
pop
rol
loop
and
fsubs
jle
ret
in
or
js
or
inc
scas
les
das
stc
or
hlt
sbb
pop
and
ja
lds
cltd
jne
cmc
xor
out
mov
iret
cmp
xor
dec
pop
or
inc
xor
inc
mov
ljmp
jl
and
mov
sbb
mov
pop
cmp
pop
call
repz
clc
cs
leave
inc
push
outsl
pop
shlb
test
test
lds
loopne
arpl
int
shrb
add
xchg
pop
cli
filds
sbb
xchg
hlt
push
sub
sub
fnstenv
call
int
int3
pop
lds
setae
pusha
aas
ja
pop
aaa
mov
pusha
and
or
ror
data16
push
ljmp
pop
out
hlt
push
adc
push
idivb
leave
insl
incb
aam
clc
lahf
bnd
push
mov
pusha
jecxz
fidivrs
sbb
mov
sub
cmpsl
arpl
test
cmpb
push
dec
mov
pop
incl
sub
cwtl
mov
fs
xlat
fdiv
sar
jg
jge
push
mov
repnz
jg
sbb
pop
das
mov
addl
pop
aas
sub
test
mov
test
sbb
call
nop
mov
mov
test
xchg
clc
out
cmpsb
out
or
dec
cmp
push
inc
sub
push
inc
test
cmp
sub
push
fistpl
lea
xchg
in
xchg
out
nop
dec
push
adc
mov
hlt
pop
push
and
stc
dec
xor
loopne
std
jne
jmp
inc
dec
adc
mov
mov
and
xor
loop
pop
stos
mov
int
xor
test
pop
loopne
out
mov
sti
fdivrs
test
sbb
pop
sbb
mov
jmp
fcomi
push
test
adc
cwtl
mov
std
sbb
dec
imul
ret
sub
pop
clc
in
aam
das
xchg
push
in
pop
adc
pop
bnd
test
loope
xor
sbb
imul
int
fadd
jmp
inc
dec
in
pop
ljmp
xchg
rorb
mov
ret
add
out
inc
push
movsb
dec
add
clc
adc
lret
stos
cmp
filds
rol
roll
ret
push
clc
test
jmp
test
js
mov
xor
stos
sub
dec
push
ss
das
mov
sub
mov
xlat
loop
pop
mov
popa
mov
arpl
pop
push
shll
add
or
mov
lods
fadds
inc
dec
cmp
mov
inc
add
jg
push
cmpsl
fnstsw
inc
jg
lods
das
call
xor
mov
shrb
pushf
je
sbb
leave
cmpb
push
cmp
push
scas
mov
pop
or
jg
pop
cmp
pop
adc
push
lea
jmp
jg
ljmp
lds
mov
movsl
ficoml
subl
inc
stc
imul
rol
jge
rcrl
stc
bound
mov
aas
in
dec
mov
jecxz
push
repz
enter
push
gs
inc
push
adc
sbb
fs
stc
jg
inc
cmc
sub
adc
xchg
mov
mov
lcall
push
pop
mov
sbb
or
fimuls
rclb
mov
cmpsl
xchg
fs
insb
mov
dec
bound
and
ret
mov
sub
into
iret
call
add
push
and
mov
insl
daa
mov
decl
and
out
add
mov
clc
loop
dec
mov
mov
test
in
cmp
sub
push
adc
and
push
pop
cs
std
mov
lods
adc
shrb
mov
xor
outsb
add
andb
push
in
sbb
ret
pop
cmp
xor
cs
mov
mov
pop
fsqrt
xchg
dec
and
loope
lock
rcr
pop
lcall
mov
mov
stc
mov
lock
jle
and
cwtl
stos
push
mov
clc
call
mov
pop
out
mov
frstor
pop
rcrl
or
push
dec
mov
mov
orl
outsl
cld
fistpl
loop
jle
cmp
jg
jg
jo
and
loop
jno
mov
test
shl
push
sub
dec
jg
xchg
push
cmp
mov
and
cmpb
cli
inc
and
addl
stc
jmp
fsubs
ja
dec
sbb
call
sub
cld
dec
popa
mov
mov
es
push
cmp
push
cmp
negb
fbld
mov
pop
mov
imulb
hlt
mull
xchg
scas
mov
rcrb
ljmp
mov
ret
imul
sbb
jle
mov
pop
ret
outsl
fsubrl
inc
mov
das
xchg
mov
aam
inc
mov
ss
cmc
jnp
fisttpl
add
rcll
sbb
in
jg
lock
cmpsl
dec
sbb
daa
cwtl
xor
dec
and
divb
add
jnp
sahf
in
jnp
aam
adc
mov
mov
scas
mov
or
dec
int3
das
loope
mov
or
repnz
adc
fimuls
mov
or
mov
fidivrl
inc
inc
mov
mov
out
outsl
jnp
cltd
shrl
jne
mov
xor
sbb
in
mov
inc
adc
movsl
fisttpll
mov
int
test
mov
outsb
hlt
sbb
or
and
cmpsl
cmp
or
inc
test
or
push
pushf
mov
mov
inc
mov
xchg
add
xlat
icebp
ljmp
and
lahf
or
ja
ljmp
cmpsl
mov
sub
stos
cmp
std
fists
lret
xchg
sahf
leave
push
inc
movsb
stc
pop
sub
loopne
push
push
add
add
std
outsb
lock
movsl
ss
iret
pop
mov
je
sbb
pop
and
inc
std
data16
mov
or
movsl
jmp
clc
daa
shlb
stos
pop
out
out
and
inc
mov
fcmovu
lahf
adc
fildl
insl
adc
int3
stos
sub
fs
lods
sbb
in
add
sub
cmp
outsb
pushl
xchg
and
mov
inc
inc
xchg
lret
push
jbe
pop
clc
dec
pop
xor
mov
dec
adc
leave
sub
push
jge
mov
add
adc
mov
outsl
pop
bound
mov
mov
adc
mulb
xlat
fcmovnbe
adc
gs
nop
jg
loop
push
gs
dec
test
push
add
mov
xchg
in
stos
test
xchg
adc
lds
nop
pop
pop
subb
sahf
jmp
cmp
dec
pusha
orb
jb
test
mov
sub
popa
xor
test
mov
pop
jecxz
mov
dec
pop
push
push
jo
andb
mov
or
loop
xor
pop
mov
adc
imul
push
jmp
pop
mov
push
int3
pop
mov
lea
xchg
dec
orb
or
stos
pop
xchg
mov
sahf
imul
mov
fs
dec
popf
add
daa
js
push
jecxz
xor
inc
add
setne
es
imul
pop
push
faddl
movsl
or
js
cld
jae
fcompl
call
ljmp
or
call
aam
pop
adc
adcl
and
adc
rcrl
scas
mov
or
add
lods
call
adc
aas
or
sahf
aas
xor
push
popa
lods
sti
mov
jo
test
mov
mulb
ljmp
inc
insb
inc
cli
adc
ret
mov
insb
push
rclb
inc
xor
inc
lock
pop
adc
jge
push
loop
js
mov
lret
pop
pop
test
mov
jle
and
push
jmp
mov
lods
das
adc
incl
out
jecxz
dec
mov
inc
and
mov
adc
fldt
cwtl
push
add
mov
or
xchg
shlb
mov
add
xor
clc
mov
test
loope
sub
fldcw
js
hlt
or
adc
fistpll
sub
stos
dec
movsb
subb
shll
dec
and
and
adc
xor
adc
adc
mov
cltd
and
ja
insb
xchg
cmp
cmp
mov
or
xor
inc
adc
jp
mov
jecxz
push
jb
and
sbb
imul
cmc
sahf
call
mov
xor
dec
decl
pop
adc
pop
not
test
bound
ljmp
divl
sub
xor
cltd
decl
xchg
test
push
adc
push
pop
cld
ljmp
pop
sub
sbb
not
mov
mov
in
in
dec
inc
cmp
scas
push
in
je
rol
sar
and
mov
mov
xchg
jmp
mov
add
adc
in
xchg
mov
pop
iret
lahf
daa
add
jl
fcmovnu
adc
add
sub
jge
jnp
push
rclb
frstor
push
add
outsb
and
inc
aam
xchg
adc
das
lahf
arpl
push
fisubs
dec
inc
mov
dec
push
xor
push
mov
sti
shlb
pop
dec
les
mov
add
add
leave
sbb
cltd
int3
add
negb
mov
mov
xlat
pop
push
pop
adc
add
add
and
pop
loop
gs
sub
push
lret
add
pop
outsb
xor
or
loop
mov
cmpsl
jbe
test
aad
mov
rolb
pop
mov
mov
cmp
jge
mov
cmp
cmpb
push
sahf
mov
mov
pusha
sahf
sub
dec
mov
push
push
mov
pop
lret
adc
mov
pushf
jo
adcb
xor
in
adc
inc
loope
mov
mov
jne
push
jne
aaa
popf
mov
adc
test
rorl
push
inc
repnz
lcall
ds
dec
or
mov
js
push
pushf
adc
xor
movsl
loop
test
addb
iret
dec
mov
and
or
adc
aam
adc
ja
test
jb
mov
and
add
ljmp
xchg
jecxz
adc
push
aas
add
leave
cld
push
mov
lea
push
add
dec
or
mov
insl
mov
xor
icebp
xchg
dec
mov
mov
and
lods
and
insl
mov
clc
testb
or
pusha
adcb
int3
es
roll
or
push
xor
mov
and
cmp
jg
dec
rolb
sub
dec
cmp
std
xchg
test
xor
std
sbb
inc
fwait
push
iret
jecxz
sarb
sub
loopne
les
loop
and
add
pop
inc
cmp
and
pop
enter
and
adc
ja
in
push
ljmp
or
xor
das
shlb
cs
bound
or
hlt
call
xchg
cli
mov
fimull
and
mov
ret
es
icebp
inc
push
add
outsl
mov
xchg
or
xchg
mov
mov
mov
mov
push
or
lods
je,pn
push
dec
sub
fdivs
sub
pop
cs
dec
incb
xor
stos
push
mov
hlt
rcl
mov
mov
and
add
repnz
lock
jg
in
jge
shl
push
rcll
mov
mov
test
mov
lcall
cld
mov
and
jge
lret
cmc
add
repnz
in
leave
inc
dec
cmc
dec
jge
jl
stos
scas
out
mov
pushl
inc
jnp
xchg
mov
fildll
lods
ss
ret
mov
rcll
or
and
push
hlt
and
inc
enter
out
jo
or
outsl
sarb
xchg
lcall
inc
push
add
add
pop
aaa
jmp
cmp
mov
sub
pop
fbld
insb
pop
push
fistl
outsl
mov
mov
in
sub
adc
cld
sub
push
push
test
aaa
inc
cld
incl
cld
lods
inc
mov
sbb
pop
xor
std
jmp
sub
fisubrl
jne
push
ret
xchg
fnstcw
add
ds
pop
ret
cli
outsb
fidivrl
inc
mov
xchg
sub
aaa
sub
pop
int
lcall
sbb
daa
adcb
iret
pop
call
pop
icebp
cmp
scas
in
out
nop
in
incb
ljmp
icebp
icebp
fsubrs
adc
mov
sub
jle
inc
push
and
xchg
mov
cs
das
pop
mov
inc
sub
mov
rorb
iret
out
xor
mov
jle
lea
sub
clc
cmp
aam
inc
xchg
mov
mov
aaa
mov
scas
xchg
leave
and
xchg
and
inc
call
in
je
mov
inc
inc
jge
dec
loopne
mov
movsb
pop
stos
mov
mov
jge
pop
call
icebp
fwait
push
subl
scas
inc
or
outsl
scas
stos
jo
mov
mov
push
mov
push
clc
mov
jecxz
repz
lods
add
mov
xchg
push
xor
push
lods
jne
sti
stos
inc
adc
jae
jnp
mov
inc
sub
or
jmp
mov
dec
clc
jbe
loope
nop
cli
inc
xchg
inc
add
dec
dec
lock
clc
inc
setl
cltd
mov
jmp
scas
lds
lret
pop
clc
push
outsl
mov
cmc
lahf
cld
mov
das
scas
lods
sub
out
push
leave
push
aaa
adc
stos
out
jne
sbb
das
fdivrl
cs
shlb
ret
les
sbb
xlat
mov
mov
addb
sub
nop
xor
sub
cld
xchg
movsb
addr16
mov
sbb
pop
xchg
outsb
aam
ss
movsb
push
stc
movsl
sbbb
fildll
outsb
das
adc
jno
fdiv
inc
jecxz
xchg
pop
clc
data16
jno
call
outsb
cmc
push
in
movsl
mul
shll
imul
sub
stc
xor
jg
inc
lcall
sbb
add
jge,pn
mov
es
add
cmp
mov
dec
jge
xchg
jl
cld
outsl
lock
incb
cwtl
mov
dec
inc
mov
add
sub
bound
inc
subb
and
js
push
adc
mov
cmp
dec
adc
adc
inc
push
rorb
cmp
pop
push
insb
sbb
xor
das
int3
ret
sahf
orb
xchg
scas
add
mov
daa
cltd
mov
stos
jb
lahf
jge
sbb
add
xlat
xchg
adc
or
dec
les
adc
and
adc
repz
xor
loop
lds
adc
ret
sbbb
inc
inc
ja
mov
push
xor
fadds
testb
xor
es
cmp
bound
mov
mov
mov
ret
test
sub
xor
fadds
xor
sbb
mov
movsb
add
xor
adc
test
fisubs
jne
mov
rcll
dec
xor
sbb
cli
add
and
es
adc
fsubrs
addb
lcall
jl
and
fadds
test
sbb
sahf
xor
cmp
mov
jbe
or
and
pop
ror
adc
pushf
ss
sbb
fsubrl
cwtl
ja
inc
out
orb
or
aam
pusha
push
scas
mov
les
push
cmp
sahf
clc
or
ret
sbb
fcoml
int
sahf
pushf
mov
xor
sbb
mov
fldcw
cld
dec
aam
cmp
arpl
add
add
lock
out
cs
test
and
add
js
mov
popa
mov
xor
mov
jne
add
and
sub
rorw
sahf
mov
inc
outsl
mov
enter
adc
fisubl
fidivrl
and
sbb
sbb
sub
and
mov
add
popf
jge
adc
cmp
jecxz
or
sbb
sbb
repnz
xlat
adc
stos
loop
or
or
scas
add
jg
mov
or
inc
xchg
xor
fstpl
fdivrs
fdivs
jne
add
pop
adc
loopne
pusha
movl
out
push
dec
push
test
repnz
jo
push
mov
or
das
lret
or
decl
adc
lods
test
push
push
idivl
fcomps
shll
or
popa
bound
test
pop
push
insl
and
hlt
fdiv
sbb
test
add
sub
add
xchg
aad
loopne
inc
dec
mov
stos
mov
push
jle
add
roll
inc
jge
aad
and
jb
scas
sub
ss
sti
pop
pop
xor
cmp
and
les
cld
fbld
fucomip
into
mov
int3
mov
lods
ss
stos
sub
imul
sbb
mov
testb
inc
gs
push
outsb
lret
ret
push
or
dec
rorl
inc
psllw
push
xchg
or
jmp
out
cmp
inc
je
pop
cld
rcrl
insb
imul
sbb
fsubrl
mov
xchg
sbb
mov
popf
and
and
das
inc
jg
test
ljmp
or
adc
call
cmp
inc
popa
jmp
jno
dec
daa
inc
inc
iret
pop
push
cmp
and
jne
shlb
mov
push
add
adc
test
push
or
int
mov
and
rcl
mov
shr
out
jns
add
push
aam
push
adc
imulb
inc
lds
fisttpll
mov
fwait
addl
les
mov
inc
test
pop
add
sub
inc
fisttps
or
push
jle
pop
mov
loope
push
cmp
or
jl
sub
incb
xchg
mov
mov
xor
fwait
out
add
push
call
sub
cmpsl
jbe
imul
mov
xchg
cmp
fsts
inc
call
das
mov
mov
or
xchg
js
test
push
cmpsb
mov
and
pop
adc
sub
push
push
push
dec
fmull
daa
out
lock
ds
ss
in
pmaddwd
add
inc
inc
mov
jg
fistpl
data16
outsb
decl
jb
ja
push
pop
sub
pusha
call
mov
repz
pop
pop
xorl
pop
aaa
hlt
xlat
je
xchg
dec
inc
sti
inc
in
in
mov
popa
sub
inc
or
iret
sub
sbb
pop
mov
popf
dec
out
add
testb
outsl
pop
push
hlt
into
cmpsb
xor
cmpsl
idivb
pop
cmpsl
jne
ds
cwtl
jg
aas
ficoml
mov
stos
mov
mov
pop
lds
das
test
ja
movsb
es
ss
sub
ret
lods
loop
outsl
hlt
push
outsl
sbb
test
push
out
dec
cs
test
jnp
incb
add
stc
mov
add
aas
add
dec
insl
hlt
es
xor
rcl
test
js
in
jo
inc
jl
or
cmp
pushf
lret
mov
enter
jbe
mov
in
adc
lods
and
mov
mov
add
xchg
andl
pusha
loopne
add
mov
arpl
popf
stos
loope
aad
jae
insb
popf
arpl
push
lret
je
push
fisttpl
push
into
jne
dec
and
adc
aas
rolb
mov
shlb
add
das
inc
mov
pop
and
pushf
push
xchg
inc
push
add
sbb
sub
pop
jnp
loopne
sbb
out
cmp
mov
jae
pop
xchg
mov
imulb
hlt
aas
jp
nop
notb
mov
adc
dec
out
add
in
test
jecxz
lds
test
aaa
push
sub
pushf
mov
daa
cmp
ret
dec
jge
and
and
ljmp
xchg
adc
insl
pop
sub
pop
rcll
add
decl
test
stos
out
jns
jmp
mov
out
add
mov
jecxz
adc
add
leave
cmp
and
push
add
add
mov
bound
mov
xchg
lahf
inc
pop
mov
jg
pushl
jg
or
dec
xchg
call
sbb
and
outsb
push
mov
in
add
lcall
adc
lods
push
sti
jecxz
icebp
inc
lock
jnp
test
cmc
jno
les
enter
pushl
iret
int3
lret
imul
dec
and
xor
jmp
rorl
mov
out
test
mov
lock
dec
int3
fisubs
in
mov
sub
inc
xchg
mov
js
subl
das
fdivrl
or
inc
pop
mov
mov
shl
loop
and
sub
or
pop
imul
mov
mov
pop
call
cmp
int3
inc
das
add
ficoml
into
les
imul
cwtl
or
sbb
jmp
fbld
fcoml
add
jecxz
mov
mov
lock
pop
lds
lock
leave
cmp
fdivrs
cwtl
or
cs
jmp
lret
jecxz
or
jbe
add
addr16
sti
in
lea
mov
xchg
aad
mov
pop
xchg
iretw
xchg
ja
cli
das
hlt
push
mov
cs
xchg
into
sbb
imul
insl
jnp
clc
adc
xchg
roll
std
andl
pop
int3
shll
leave
int
jns
dec
pop
sbb
mov
idivb
inc
jo
push
js
mov
mov
rcrl
cmc
jmp
mov
push
cmpsb
daa
fiaddl
or
aaa
outsb
repnz
pusha
lods
mov
outsl
jge
inc
repnz
cmc
aad
popf
mov
dec
push
adc
mov
neg
roll
aaa
aam
and
sub
call
push
addr16
lret
ja
fsubrl
das
xor
rclb
xor
rcl
outsl
mov
dec
arpl
inc
adc
dec
pop
call
loop
mov
jp
adc
push
push
dec
add
xorb
sbb
or
pop
add
sbb
mov
jmp
jecxz
push
rorb
dec
push
popf
adc
shlb
sub
push
enter
scas
jae
cmp
leave
lea
adc
push
fiaddl
ret
enter
dec
adc
nop
insb
sbb
or
mov
or
rorb
inc
push
mov
add
test
orb
inc
cmp
pop
pop
movsb
mov
movsb
outsl
mov
repz
xor
add
lea
add
inc
hlt
push
dec
jb
add
data16
sarb
sbb
xchg
rorl
mov
xor
add
adc
notl
loopne
push
xor
sub
pop
out
adc
rol
aam
and
pop
stos
bound
pop
sbbl
adc
cmp
clc
jae
jae
push
mov
pop
iret
dec
or
add
into
sbb
pop
orw
out
jl
or
xchg
fiaddl
xchg
inc
and
push
xorl
outsl
pop
sbb
leave
outsl
aam
dec
add
mov
adc
aam
mov
sbb
repz
mov
leave
jb
xor
rorl
aam
inc
faddl
xor
imul
push
mov
or
dec
inc
lret
in
negb
cwtl
sub
sub
or
cmp
jl
add
int
mov
mov
imul
push
add
int
mov
adc
aad
aas
sbb
inc
out
aam
pop
icebp
add
jg
aaa
push
fldenv
mov
icebp
insb
cmp
add
cld
ds
mov
mov
cmpsl
dec
adc
xchg
aaa
js
push
in
fsubp
into
sub
ss
dec
sub
or
mov
xor
or
mov
dec
push
xor
add
or
cmp
jnp
dec
adc
test
xchg
dec
dec
jne
mov
jne
sbb
sub
fcoms
or
jns
mov
shl
sbb
pop
xor
pop
ljmp
pop
pusha
xor
pop
and
push
push
cs
lods
sarl
lods
mov
adc
lret
daa
std
sbb
test
adc
jae
and
cld
push
lods
dec
insb
xchg
add
je
jno
lods
clc
hlt
mov
dec
xchg
orb
add
orb
pushf
or
loop
in
mov
filds
out
add
mov
or
pop
sub
clc
das
fistpll
xor
add
sahf
adc
xchg
and
push
inc
lods
cli
add
cmc
or
jmp
imulb
cmp
aaa
inc
mov
or
cli
push
test
aas
adc
add
add
subb
sbb
mov
clc
jp
mov
sbb
daa
fistpl
pushl
clc
and
into
sub
je
addr16
sti
mov
shll
insl
pop
inc
mull
push
sub
or
jnp
dec
pushf
cmp
pop
sbb
das
mov
je
and
jbe
push
out
mov
pusha
inc
dec
mov
rclb
mov
pop
stos
sub
mov
sbb
pusha
push
xchg
mov
fdivr
fildll
fdivr
jae
bound
lret
lds
jge
fiaddl
popa
push
mov
mov
or
push
scas
mov
test
cs
mov
cs
nop
push
popa
clc
mov
sahf
pop
roll
sbb
out
or
lods
jge
mov
into
outsb
mov
jp
gs
xchg
orl
fcmovnu
std
test
jbe
jmp
cwtl
cmp
or
push
ret
divb
sbb
addb
mov
mov
push
cld
es
sbb
sbb
mov
xlat
mov
stos
mov
fldl
or
rcrb
andb
aam
add
hlt
xor
mov
popf
in
lret
jnp
xlat
packssdw
mov
mov
imul
jne
dec
movsl
push
sbb
lock
sbb
inc
test
inc
aas
fldcw
add
dec
inc
clc
mov
ret
jbe
sub
dec
jl
xchg
imul
clc
ss
test
sub
pop
lods
jae
outsb
sbb
jecxz
dec
mov
mov
imul
or
xor
outsl
sub
jne
popf
jmp
cmpsb
aad
mov
jecxz
mov
adc
data16
insb
aam
dec
mov
loopne
push
inc
ss
mov
xor
icebp
out
mov
lds
mov
movsl
lea
and
icebp
and
mov
cmp
es
mov
pop
cmp
stos
mov
mov
rcll
push
mov
mov
ficompl
xlat
addr16
dec
jg
daa
rcll
pop
paddw
inc
inc
xchg
roll
jo
cmpsl
loop
loopne
shll
ja
stos
jo
mov
mov
addb
inc
outsl
push
mov
fs
sub
or
inc
inc
adc
sbb
push
xor
xchg
cmp
adc
and
movsb
and
stos
or
fsubrs
mov
add
push
fiadds
dec
mov
imul
and
mov
inc
daa
aad
add
adc
inc
mov
adc
and
add
or
sbb
lock
loopne
push
adc
adc
push
or
or
aaa
lock
and
fistpll
pop
adc
movsl
orb
lock
shr
sbb
xor
scas
call
adc
pushf
push
mov
inc
fdivrl
shr
pop
xor
loopne
stc
pop
add
hlt
sbb
dec
sbb
lcall
add
cwtl
adc
dec
mov
nop
add
add
fiaddl
xchg
add
cmpsl
sub
rcr
outsl
sbb
dec
in
dec
and
pusha
imul
int3
push
xor
stos
cmovno
sahf
add
fildl
out
or
in
sbb
add
sub
push
das
pop
insb
sub
inc
dec
push
ss
or
loopne
call
insb
mov
inc
xor
out
and
test
sub
adc
lods
add
mov
syscall
push
test
dec
mov
and
fdivrl
dec
adc
cmpsl
xor
sub
dec
movsb
add
adc
int3
pushf
mov
sbbl
fsubrs
call
lods
mov
mov
int3
cmp
add
pop
adc
cmp
xor
cmp
jmp
push
fwait
outsb
leave
push
add
daa
int3
ja
outsl
jge
lahf
sub
pushf
add
mov
mov
xchg
pop
xchg
bound
cmc
lods
push
cmp
lahf
call
adc
sti
negl
mov
push
adc
cld
das
pushl
cli
jle
loopne
mov
repnz
clc
aaa
inc
mov
dec
adc
fstl
xlat
lcall
data16
ficoml
pop
es
cmp
inc
cmp
aaa
mov
push
push
fldcw
loop
rorb
mov
fwait
leave
inc
ror
mov
pop
adc
sti
std
outsb
movsb
aam
sbb
ja
mov
ljmp
pop
push
gs
clc
out
lock
sar
add
mov
rorl
loope
roll
into
pop
cmpsl
loopne
ss
bnd
jb
mov
sub
mov
mov
mov
inc
loop
rol
shll
mov
jmp
mov
iret
lcall
add
test
mov
stc
rcrl
adc
fbstp
test
imul
outsb
sbb
mov
pop
jmp
add
ret
add
xchg
hlt
adc
daa
loop
incl
xchg
mov
or
sbb
sbb
int
clc
dec
push
test
xor
jl
sbb
add
or
fcompl
add
pop
js
cmp
mov
ja
sub
dec
sbb
push
inc
call
mov
xchg
cmp
in
mov
inc
dec
pop
add
stc
mov
imull
mov
mov
movsb
cli
cmc
cltd
xor
out
xor
push
xchg
cli
cmp
inc
repnz
and
aas
iret
xchg
mov
cld
ret
push
cmp
repnz
adc
stos
incb
push
adc
decl
xor
and
cli
mov
pop
popf
push
push
decb
push
pushf
bound
sub
in
or
add
inc
rolb
popf
or
adc
pop
cld
dec
mov
ja
mov
imul
movsl
das
rol
fistpll
jb
insb
cmpsl
pushf
aas
test
aam
mov
aad
xor
test
push
inc
pop
mov
sub
xor
cmp
rclb
call
mov
sbb
adc
negl
sub
test
psraw
aas
jae
test
inc
sti
pop
cmp
outsb
push
bound
fisubl
sti
mov
fisttps
mov
pusha
addr16
push
add
inc
les
icebp
insb
inc
cmp
stc
xlat
pop
std
mov
jg
pop
mov
jl
sub
dec
mov
lcall
push
inc
jle
cmp
sub
gs
cmc
sub
xchg
stos
call
stos
pop
mov
xor
in
enter
decl
mov
xor
popf
ds
push
cmp
incl
or
mov
jno
jns
cltd
repnz
jbe
outsl
imul
mov
test
pushf
in
mov
ret
push
sub
test
ret
adc
adc
lock
xor
adc
jmp
clc
outsl
loop
out
lcall
arpl
mov
stos
subb
fucomi
scas
mov
pusha
mov
push
mov
sub
dec
jg
test
push
loope
xor
xchg
inc
cmp
dec
incl
push
mov
aas
scas
lea
cmp
shl
sub
ret
fistpll
clc
insl
ffreep
push
fcomi
stos
vpsrlq
adc
loope
retw
aad
push
out
lods
loope
pop
xchg
fwait
outsb
insl
pop
ljmp
push
bound
push
and
jo
cmp
mov
push
jae
add
cs
mov
rclb
xor
imul
add
lock
sbb
sub
pop
or
lods
push
push
mov
adcb
jp
mov
fisubrl
jle
sub
pop
add
test
mov
int3
and
sub
rcl
lods
dec
iret
inc
psubd
gs
lret
push
mov
xor
lods
ret
repnz
aaa
sub
mov
or
inc
lock
cmp
out
and
push
nop
ret
int3
pop
push
xor
jbe
pop
mov
sub
lods
fildl
jne
mov
inc
out
jno
and
ljmp
add
ljmp
dec
adc
enter
adc
mov
arpl
sar
inc
js
cmc
aas
pop
mov
and
call
imul
cmpl
xchg
lahf
imul
loopne
pop
mov
mov
xchg
in
push
imul
pop
jo
loope
sbb
rcll
mov
push
hlt
inc
xchg
cmp
jbe
sar
jbe
mov
mov
fidivrl
mov
jmp
adc
ret
mov
push
cltd
cwtl
loop
pop
ss
push
icebp
mov
push
mov
test
roll
xor
bound
mov
fdivs
repz
stc
dec
in
jecxz
adc
add
ret
fdivrl
adc
add
mov
pop
addl
insb
mov
ss
sub
scas
mov
mov
inc
push
mov
mov
call
mov
js
mov
cmp
or
insb
sub
mov
lods
cpuid
pop
xor
in
jne
push
xor
sub
push
push
dec
addr16
xchg
add
mov
xor
pop
repnz
jo
in
mov
add
daa
ds
daa
out
mov
inc
mov
add
sahf
xchg
jg
sbb
lahf
test
and
test
pop
push
jge
sbb
cmp
shll
int3
ss
lock
subl
arpl
mov
testl
mov
mov
ret
movsl
icebp
xchg
add
sbb
fisttpll
mov
xchg
sbb
lea
jnp
nop
test
enter
ret
or
add
and
lock
testb
in
pop
icebp
pop
push
or
push
dec
lods
sbb
sbb
or
scas
adcb
in
xchg
orb
cltd
sti
subl
loope
fstpl
movsb
call
imul
adc
push
adc
imul
pop
fildl
sub
test
jo
ss
rolb
xor
das
sub
mov
inc
lock
mov
dec
in
sbb
jg
icebp
lret
das
sbb
sarl
daa
add
adc
cld
inc
add
or
fs
aad
sti
add
jae
leave
lods
inc
lods
mov
add
add
ljmp
mov
imulb
inc
cmp
ja
icebp
fwait
or
in
sbb
dec
pop
dec
mov
arpl
pop
shrl
or
pop
and
mov
jbe
call
cmp
aad
out
add
mov
orb
movsl
or
and
or
sub
add
sub
sbb
repz
jl
andb
test
mov
push
dec
inc
mov
and
test
insb
sub
and
cwtl
xor
ficoml
movsb
pop
test
pop
lock
jl
mov
lret
jb
xchg
mov
add
and
jge
xor
adc
pushf
lock
rclb
in
add
xor
dec
xor
xor
lods
ret
stos
mov
test
mov
or
js
mov
pusha
and
mov
out
xchg
adc
fxch
fcomps
pop
clc
push
cld
push
pop
clc
out
shlb
sarb
add
xlat
jl
fs
test
es
imul
add
dec
fisttpll
aam
or
ja
faddl
sbb
jg
inc
adc
in
scas
add
hlt
push
push
rorb
sbb
xlat
xor
data16
orb
fldl
dec
orb
jns
dec
jns
sarb
and
dec
adc
vsqrtpd
add
aam
je
push
es
fisttps
mov
ficomps
dec
int3
stos
mov
adc
fldcw
or
xor
xor
subb
nop
jmp
or
add
inc
lock
lock
fsts
lods
insb
in
push
pushf
mov
in
mov
sbb
sbb
jle
or
sbb
add
fistl
inc
addr16
addb
mov
dec
lods
jno
outsl
sub
clc
pop
loope
pop
lret
testb
test
lahf
cs
inc
loopne
add
fcoml
or
rcrb
mov
sarb
in
and
outsb
inc
in
cmpsb
xor
inc
rcll
mov
fcmovnbe
enter
mov
mov
adc
or
imull
mov
cmpb
pushf
add
sub
data16
and
pop
sbb
insl
movsl
lret
enter
enter
cmp
js
mov
or
fnstsw
lret
lock
repz
sub
rcrb
cmp
jl,pt
fiadds
inc
push
or
nop
pop
fsub
sahf
loope
and
inc
cmp
fistpll
mov
xor
test
push
inc
sub
xor
mov
imul
inc
int
stos
or
jge
xchg
sub
cmc
addb
xor
and
xchg
sbb
loope
lock
add
or
stos
and
insb
inc
and
cmp
mov
wbinvd
shr
arpl
xor
cmp
push
or
inc
mov
rolb
jle
aad
jns
inc
add
or
push
jge
adcb
or
in
enter
push
aaa
imul
or
pushf
sahf
out
int
inc
sbb
pop
xor
in
orb
lcall
add
mov
dec
mov
in
add
cwtl
shll
mov
dec
lcall
dec
loopne
mov
mov
pusha
dec
ja
add
lock
add
inc
dec
xor
mov
push
outsb
cmp
and
add
add
xchg
femms
add
xchg
xchg
and
mov
mov
hlt
lods
cmp
je
mov
mov
sub
out
mov
decl
pop
aad
and
xor
daa
sub
aam
fimull
iret
mov
sbb
push
test
scas
jge
dec
loop
cmp
mov
ret
subl
mov
add
and
leave
cltd
mov
sub
adc
push
inc
adc
mov
jbe
mov
adc
das
and
dec
and
adc
mov
lcall
push
mov
js
sarb
sub
sub
ds
lods
std
jb
push
aad
push
pushf
push
dec
adc
das
testb
mov
das
push
add
shrl
push
lret
loop
fisttpl
loop
scas
inc
push
jle
scas
in
in
xor
inc
push
xorb
ja
mov
pop
iret
notb
outsl
mov
inc
mov
xchg
add
incl
or
dec
sbb
call
loope
mov
pop
inc
mov
aas
hlt
mov
nop
jnp
jmp
icebp
ljmp
lahf
std
movsb
or
and
push
adc
ja
ljmp
incl
outsb
and
or
pop
mov
xchg
fs
cmp
fsubrp
xor
repz
sbb
mov
adc
jp
xchg
mov
adc
pushl
xor
rorl
repz
mov
rorb
sbbb
sbb
mov
cli
out
in
inc
andl
pop
loop
mov
push
jl
adc
add
jg
stc
adc
jp
mov
inc
cwtl
push
adc
out
mov
pop
pop
push
sbb
jp
test
or
ja
mov
pop
repz
filds
outsl
xor
shlb
sub
sub
test
ja
and
push
incl
mov
cmpb
dec
cmp
aam
std
pop
adc
fcoms
pop
roll
dec
push
ljmp
nop
imull
lret
imul
es
add
xchg
xor
mov
lea
xchg
clc
pusha
andb
mov
cmp
mov
mov
jecxz
mov
and
xor
pusha
test
dec
and
jp
dec
jmp
mov
xor
adc
incl
add
enter
jmp
js
push
scas
push
call
out
adc
sbb
nop
in
cmpsl
mov
pop
bnd
mov
divb
mov
outsl
out
scas
xchg
hlt
mov
add
test
adc
test
jbe
out
icebp
insl
test
add
aas
adc
xor
or
add
subl
aad
add
loopne
cmpsl
mov
fwait
sbb
mov
cmpsb
cmp
or
mov
call
inc
stc
fcomps
arpl
jb
sub
insb
mov
roll
shr
and
fldenv
cli
mov
lods
punpckldq
pop
jbe
and
fisttpll
jp
and
and
in
jl
mov
outsl
pop
pop
or
mov
cli
mov
out
xor
jle
pop
push
mov
loop
ret
mov
std
pop
inc
xor
lahf
repnz
popa
pop
int
ret
or
pop
loopne
mov
or
xchg
repz
inc
stos
sbb
hlt
push
int
mov
sbb
lret
subl
mov
and
shll
sbb
outsl
notb
ss
lahf
ljmp
push
test
fimuls
jle
pop
push
rcrb
adc
inc
fbstp
addb
inc
out
push
fildll
shrl
dec
jns
mov
insl
mov
mov
ret
call
mov
adc
rorb
movsl
insl
mov
cmp
popf
xchg
shll
add
hlt
jp
mov
call
pop
adc
fistpll
jbe
notb
mov
sub
add
ret
sub
mov
pop
lret
add
roll
pop
jbe
ja
loopne
cwtl
jmp
or
ljmp
shr
movsl
xchg
adc
pextrw
mov
clc
in
pop
sbb
jae
pop
and
jp
dec
xor
std
inc
cmpb
call
scas
pop
add
shll
das
add
ficoms
or
jo
dec
lods
add
divb
lods
mov
mov
fistpl
add
rolb
sub
loop
addb
int
mov
adc
in
add
xor
inc
push
lahf
jae
mov
sbbl
lcall
cld
xchg
xorl
sub
cmp
mov
imul
adc
mov
lods
pusha
xchg
push
lods
mov
icebp
pusha
bound
rclb
sub
cmc
add
sub
daa
add
imul
mov
add
ja
mov
pop
call
xor
shll
jmp
mov
cs
mov
add
orb
jge
inc
insl
stos
pop
filds
insb
stos
mov
repz
add
jae
mov
sti
pop
pop
outsb
xor
add
mov
scas
into
call
pop
lret
pop
sbb
pop
jge
mov
test
aaa
test
push
les
add
adcl
pop
in
sbb
add
aaa
loopne
in
test
pop
or
shlb
les
cmp
jne
enter
mov
arpl
and
push
jno
lret
sub
or
dec
or
aas
push
add
in
push
mov
imul
sbb
push
dec
push
adc
dec
jb
sub
adc
cmpl
jl
mov
call
rcrb
adcl
sti
test
movsb
repnz
dec
cmpsb
in
loop
push
lret
or
push
stos
test
lret
jl
push
movsb
insl
lahf
cmp
xchg
ljmp
xchg
cmpsb
adc
pop
roll
dec
sbb
inc
insb
cld
es
or
push
jp
nop
cmc
dec
in
enter
fmull
mov
das
cld
mov
loopew
adc
xor
pop
lds
lock
lods
pop
pop
sbb
push
lea
dec
clc
or
xchg
sti
loopne
mov
adc
enter
cmp
testl
scas
addb
test
and
stos
dec
fcmovnu
incl
jl
xor
in
movl
dec
fcoms
and
or
incl
loope
sbb
nop
leave
mov
decl
sar
lahf
push
pusha
xlat
ret
lea
out
xlat
fcmovnu
clc
mov
fildl
sub
pop
pusha
loope
cmpsl
js
cmc
mov
adc
jmp
ss
xor
sbb
out
stos
in
mov
stos
scas
mov
jg
jg
sahf
mov
aad
mov
push
mov
jno
jmp
pushl
orl
lret
bound
mov
sbb
lcall
pop
call
mov
jg
jp
jns
jnp
jge
jecxz
out
mov
jno
lret
xchg
add
pop
mov
pop
sub
test
cmpsb
test
movsl
stc
fxch
mov
scas
cmp
sub
mov
jecxz
pop
pop
js
add
test
je
popf
movsb
xor
push
inc
cld
test
xchg
add
inc
lret
xor
lcall
rcrl
das
xor
ss
mov
arpl
sar
jmp
mov
push
push
or
lahf
xchg
push
inc
mov
icebp
pop
subl
subl
ja
sbb
xor
mov
cmp
mov
scas
fistpll
outsl
hlt
xor
ds
sub
je
std
roll
out
fistpl
mov
dec
inc
aad
dec
jl
shlb
fbld
gs
mov
mov
pop
outsl
ja
push
mov
pop
lahf
pop
insb
add
lods
cmpsb
adc
test
test
mov
mov
adc
aam
jecxz
add
ds
jmp
push
xchg
mov
mov
and
das
push
int
icebp
sti
dec
les
in
mov
or
sbbb
inc
les
pusha
sbb
adc
xchg
pop
mov
outsl
xor
sbb
inc
dec
inc
fisubl
push
fistl
push
cmpsl
leave
sub
xor
jmp
lds
pop
pop
jmp
jle
push
push
cmp
dec
lcall
xlat
add
inc
cmp
xchg
lcall
sbb
addr16
jge
sbb
push
sub
mov
jp
mov
dec
push
aam
pop
push
mov
and
insl
push
inc
xchg
dec
daa
sbb
ss
fildll
loop
or
adc
lcall
dec
mov
mov
in
pop
xchg
or
mov
scas
xchg
int
adc
push
leave
jge
aad
ljmp
or
cmp
xchg
inc
in
sbb
fs
in
inc
mov
add
stos
xchg
hlt
out
pop
int
aaa
xchg
pop
mov
pop
pop
mov
mov
test
in
andb
mov
inc
sub
mov
das
dec
sbb
sbb
imulb
pop
ret
adc
mov
adc
mov
cmp
sarl
outsb
and
cwtl
push
popa
push
and
pushf
imul
js
sub
roll
cmp
jecxz
cmp
mov
or
out
fdivrl
mov
out
cmp
mov
jmp
lret
add
das
inc
inc
shrb
not
xor
scas
shll
call
xlat
fidivl
loop
sbb
adc
and
xchg
adc
push
inc
aad
add
sub
mov
inc
jge
mov
xorb
out
and
aaa
inc
sub
call
shrb
outsb
sub
pop
and
inc
sti
or
shrl
imull
ror
push
adc
inc
inc
mov
xchg
or
mov
inc
and
inc
jg
xchg
sub
mov
jp
hlt
stos
pop
pop
xor
testl
push
pop
sub
inc
and
add
add
mov
aaa
adc
rclb
jo
mov
and
adc
adc
cld
and
push
or
or
push
fmulp
dec
push
dec
or
stos
pop
add
adc
and
adc
cmp
xlat
sub
pop
roll
pop
hlt
xchg
call
add
mov
pop
sarb
adc
xorb
mov
lods
or
add
loope
sbb
dec
xor
adc
fisttpll
add
push
inc
inc
cld
pop
stos
or
ljmp
dec
dec
push
loop
adc
xchg
es
hlt
sbb
xor
les
adc
lcall
jnp
and
rolb
repz
adc
lods
pop
cwtl
sarl
push
push
add
es
imul
mov
adc
add
inc
pushf
stos
mov
lods
call
push
inc
fadds
push
adc
test
or
dec
xchg
sub
out
int3
divl
test
jge
bound
loop
mov
test
pop
sbb
neg
std
ja
mov
rolb
fstps
stos
andl
clc
testb
mov
enter
mov
sbb
mov
ret
loop
mov
sub
mov
sbb
jne
adc
adc
adc
cmp
in
inc
call
es
out
xchg
filds
sub
cmpsb
dec
leave
int3
push
push
jg
lret
pop
push
cmp
into
xor
mov
icebp
dec
xor
and
in
nop
rcrb
mov
cmp
and
fs
adc
add
inc
int
pop
xor
inc
mov
int3
in
leave
sbb
inc
frstor
mov
test
push
mov
mov
xor
popa
std
aaa
cmc
mov
fistps
push
shrl
push
mov
test
and
cmp
icebp
cmp
or
add
mov
push
ja
and
pop
pop
cmc
mov
enter
pop
xor
push
adc
orb
or
clc
sub
push
aam
or
push
outsl
sub
mov
mov
adc
and
cli
testb
pop
adc
sti
js
cld
push
cmpsb
adc
cli
aas
hlt
mov
xor
ljmp
push
xchg
jle
xor
rol
stos
pop
test
pop
insl
cmpsl
jl
xchg
test
loopne
insl
jp
or
and
and
mov
lcall
ficomps
stos
mov
lret
gs
rol
jg
push
inc
mov
fcompl
fbld
out
dec
movsl
push
cmp
dec
mov
cmpsl
push
sbb
out
dec
push
scas
xor
pop
repz
push
mov
or
push
xchg
pop
xor
sbb
fwait
cli
jb
sti
shrb
ja
pop
test
mov
mov
sub
dec
jmp
fwait
xchg
stos
push
mov
xchg
loope
test
das
adc
movsl
sub
mov
pop
popa
xchg
push
cmpsb
adc
inc
sub
pop
cmp
sub
mov
xchg
adc
mov
inc
jle
lock
dec
nop
out
mov
pop
rcll
enter
mov
lret
jg
xor
and
imull
inc
iret
or
into
jo
jbe
inc
pushf
dec
adc
pop
cli
sti
out
ret
xor
mov
cmp
daa
add
arpl
scas
nop
or
loope
popa
inc
test
inc
mov
dec
insl
inc
push
push
int3
mov
out
adc
shll
pop
lds
jbe
ds
int
jge
lahf
or
sbb
repnz
insb
cld
mov
lret
in
fmull
jecxz
add
or
clc
cmp
dec
js
clc
cmp
out
call
in
pop
lds
mov
and
adc
clc
dec
pop
ret
fiaddl
pop
pop
aaa
mov
sti
cltd
lret
or
mov
std
rorl
jne
mov
mov
sbb
hlt
loopne
insb
dec
icebp
lret
and
inc
cld
cld
popa
test
mov
and
xchg
lcall
pop
jbe
xor
push
cld
mov
hlt
and
sbb
inc
fs
jb
pop
sbb
dec
push
jne
addl
sarb
inc
andb
fnstcw
mov
xchg
clc
jo
and
mov
inc
add
adc
jecxz
push
lods
push
ljmp
cmp
mov
addb
daa
and
jae
sbb
shlb
cmpb
sub
add
and
popf
call
lods
and
push
inc
cmp
and
or
and
fdivrl
dec
andb
sbb
xchg
sub
aaa
repz
or
test
test
pop
mov
mov
mov
push
mov
push
fcompp
or
and
adc
sbb
adc
and
enter
mov
mov
cmp
sub
cwtl
test
fldl
pop
adc
or
pop
addb
cmp
iret
add
mov
fnstcw
add
or
inc
pushf
push
adc
inc
mov
ret
xchg
pop
iret
adc
pop
or
push
xchg
mov
test
int
rcrb
rorb
adc
add
popa
add
adc
sub
lods
inc
popf
inc
mov
imul
inc
adc
lods
in
sahf
push
shll
sbb
and
dec
add
pop
xor
jb
icebp
xor
mov
add
bound
sbbb
or
xchg
into
push
jp
lcall
xchg
sahf
dec
std
sbb
mov
inc
leave
enter
sub
cltd
cmpb
jge
sbb
fiadds
insb
stos
dec
push
xor
mov
mov
xor
cmpb
sub
mov
cmpsl
jecxz
and
cs
loop
jle
ret
lahf
jnp
sbb
sahf
or
adc
imul
mov
dec
dec
gs
out
aaa
jnp
inc
sub
mov
mov
mov
rclb
or
fdivrl
sbb
cmpsb
scas
inc
ja
arpl
mov
pop
jae
gs
pop
inc
rorb
sub
lahf
jp
imul
jns
popa
loope
je
lods
rclb
test
or
mov
fcompl
outsb
sub
or
in
sub
ret
mov
aas
dec
fsubrs
adc
xor
sub
adc
inc
jno
push
les
addr16
jle
pop
test
repz
adc
add
cltd
bndstx
iret
jecxz
ret
enter
mov
push
into
lcall
or
popa
sbb
xchg
mov
mov
mov
push
add
icebp
mov
dec
jb
add
sub
jl
stos
cld
jnp
inc
lret
sub
adcl
pop
in
cmc
call
lock
sub
stos
stc
cmc
es
add
xor
insb
inc
mov
push
xchg
shll
mov
jecxz
xchg
sub
cltd
xchg
adc
loopne
dec
pop
mov
adc
mov
and
loopne
sbb
sub
sbb
jns
dec
push
mov
dec
pop
push
push
cmc
lods
and
mov
push
add
push
shrb
insw
insb
sbb
test
lock
fsubrs
into
xor
dec
mov
stos
cmp
adc
push
jo
push
push
jg
pop
add
in
loopne
sbbl
pop
sub
add
mov
cld
mov
add
orb
dec
mov
jmp
xlat
mov
test
cmc
mov
pop
mov
inc
jg
pushl
sbb
add
into
push
mov
sbb
or
loopne
push
xor
movsb
cld
add
ret
das
push
lock
daa
ficomps
and
mov
test
hlt
adc
pop
subb
add
and
ljmp
call
sti
mov
mov
add
dec
cld
push
pop
xchg
push
test
icebp
mov
cmp
fs
sub
jns
dec
lods
sarb
lret
lret
xchg
dec
sub
adc
and
sbb
arpl
dec
mov
pop
and
pop
roll
mov
lds
cmp
cltd
mov
or
adc
bound
jg
pop
mov
sub
rorl
ret
insl
mov
and
cmp
pop
or
dec
nop
sub
jle
paddusw
out
loop
adc
push
pop
lret
push
or
sbb
imulb
xchg
xor
inc
in
ds
addr16
sbb
fldl
adc
jb
insl
test
xchg
ret
call
std
jmp
and
or
sti
mov
repnz
test
dec
dec
js
cld
lds
push
or
push
mov
xchg
ja
lods
call
das
je
dec
aas
aas
jne
pop
fdiv
dec
stc
stos
sub
loop
lds
js
lods
dec
push
dec
out
mov
xchg
sbbb
adc
cmp
call
loope
ret
inc
cwtl
lcall
aad
sbb
mov
jl
add
xchg
sub
add
push
nop
mov
push
aas
cmpsb
inc
and
push
int3
mov
jg
mov
aas
movsb
imul
adc
jne
jecxz
jle
mov
lock
rorb
add
inc
or
push
std
call
jle
dec
jne
adcb
pop
stos
popa
sub
push
adc
or
mov
outsl
stos
push
mov
ds
daa
dec
push
inc
sbb
aam
aad
inc
adc
pop
outsl
inc
out
sub
adc
lret
orb
ret
xchg
lock
xchg
insb
sbb
inc
dec
aam
je
cmpsb
stos
sbb
pop
rol
rclb
cmp
ret
daa
mov
cmp
push
mov
xor
enter
stos
mov
xor
enter
xchg
js
xor
adcl
mov
pop
sbb
in
cmpsl
test
jge
adcl
mov
push
js
mov
fistps
mov
daa
mov
pop
add
adc
sbb
rclb
mov
fcomi
jg
mov
jmpw
mov
loopne
pop
clc
or
inc
cli
or
repz
dec
das
mov
dec
gs
hlt
cltd
jl
ds
in
or
lea
adc
mov
add
push
jno
mov
mov
shll
mov
cmc
ja
das
test
lea
icebp
jae
decb
ljmp
subb
jecxz
test
adc
add
shlb
mov
mov
mov
xchg
rol
and
inc
repnz
jl
movsl
outsb
dec
ds
filds
sbb
mov
and
leave
fldenv
stos
push
lret
cs
sbb
mov
jae
fldt
repz
imul
mov
inc
and
mov
xchg
sub
jg
add
stc
mov
ds
cmpsb
fidivrs
ja
jae
jg
inc
popf
adcl
sbb
xchg
jp
cltd
pusha
cs
sbb
loop
dec
scas
aas
pop
xchg
hlt
adc
push
addr16
adc
das
mov
xlat
cmp
mov
data16
mov
sub
lock
xrelease
and
cmc
add
xchg
aas
pop
add
mov
mov
pushf
inc
mov
sbb
mov
andb
or
xor
stc
sahf
adc
pop
loopne
int
mov
adc
fimuls
push
das
sub
and
loopne
fwait
loope
insl
movsb
divb
xchg
movsl
les
test
aaa
mov
jle
adcb
add
push
pusha
inc
or
add
arpl
jae
js
add
data16
pop
cmp
xlat
roll
and
stos
mov
sub
pusha
inc
jb
and
icebp
jge
inc
adc
adcb
push
shlb
or
push
push
pop
add
xor
mov
shlb
daa
adc
pop
or
push
addb
lds
mov
flds
loope
into
ljmp
leave
xchg
sbb
add
pop
xor
test
adc
cmp
insl
cmpsl
pusha
mov
jno
xor
enter
dec
cmp
dec
sbb
or
in
dec
aas
das
outsb
clc
inc
test
pop
popl
or
jbe
push
call
mov
inc
cmova
xor
sbb
cld
orb
adc
cmp
scas
pop
les
nop
cmc
or
sub
sbb
and
mov
adc
add
sbb
xchg
rcrb
fbld
int3
js
lret
push
inc
rclb
lds
mov
sbb
mov
in
adc
push
rcrb
stos
and
cmp
addb
jg
inc
push
pop
in
xor
lea
arpl
adc
inc
std
add
add
xlat
aas
mov
das
mov
outsl
add
vpackssdw
inc
pop
add
push
and
cs
shlb
mov
sub
jl
cmpsb
inc
push
inc
xor
idivb
and
mov
pop
orb
mov
repz
sbb
sub
add
push
outsl
and
out
mov
inc
fisubl
test
sbb
xor
pop
sub
jg
pop
sbb
cli
jb
add
fistl
mov
cli
scas
mov
in
mov
sub
cld
out
mov
andl
sbbb
inc
cmp
orl
incb
test
and
inc
imul
mov
add
aaa
cmp
aas
js
mov
leave
add
mov
loopne
xchg
jne
dec
jb
push
adc
bound
mov
pushl
ja
mov
or
cmp
lods
adc
addr16
cs
dec
int3
dec
in
es
mov
mov
cmp
cld
mov
add
mov
pop
outsb
cmp
popf
fldl
sbb
das
xchg
ljmp
pop
inc
int3
and
xorb
ficomps
movsb
es
imul
cmc
xchg
sbb
stos
lods
scas
clc
and
scas
mov
push
divb
push
xlat
cli
std
and
clc
sub
and
adc
ljmp
push
or
das
or
hlt
xlat
sub
adc
adc
cmp
adc
inc
in
aad
add
das
adc
popa
or
mov
fmul
std
inc
imul
mov
push
adc
loop
dec
or
repnz
call
das
sbb
mov
cli
inc
sarb
int3
cltd
add
cld
cs
adc
repz
push
sub
dec
je
test
inc
pushf
cmp
xchg
inc
mov
lea
loope
push
mov
cld
ret
fistpll
push
or
cmp
xor
out
andnps
loopne
cltd
nop
repnz
sub
ret
repz
add
add
jno
js
xchg
xchg
jecxz
add
sub
cli
mov
sarl
adc
cld
enter
xchg
pushf
loope
jno
inc
push
add
outsb
xor
popf
aad
aam
cld
pop
cmp
push
xor
adc
dec
jmp
hlt
out
in
in
xchg
pop
pushf
int3
jg
add
outsl
outsb
das
hlt
mov
shlb
adc
pop
jmp
push
and
inc
adc
rcl
lds
js
jge
cmp
ljmp
test
add
add
dec
jge
cmp
sub
fwait
xlat
jle
aaa
outsb
fsubs
cmp
jge
insl
insb
add
imul
pop
popa
jnp
mov
les
cld
inc
or
nop
jecxz
sti
cmp
xchg
push
or
pusha
outsb
inc
add
inc
imul
test
sub
mov
lret
inc
push
mov
sbb
and
mov
incl
sub
or
xor
ret
fnstsw
xchg
fildl
dec
stos
xor
xorb
loop
dec
push
jo
fimull
addb
test
mov
jmp
and
fisttps
xor
mov
inc
dec
test
pop
mov
xor
inc
stos
mov
stos
ja
sar
push
stos
cmp
pushl
sbb
pop
jne
popf
xchg
lods
inc
movsl
jnp
in
pop
cli
andl
jecxz
hlt
les
test
lea
cmp
les
or
push
lods
fisttpl
popa
and
mov
add
lods
cltd
sbb
in
cmpsb
dec
push
aas
adc
outsb
cltd
push
gs
iret
xor
mov
sbb
mov
mov
rclb
mov
ret
mov
pop
ja
mov
xchg
clc
lea
xchg
xchg
sbb
pop
sbb
nop
aad
dec
mov
adc
or
movsl
mov
mov
inc
dec
xor
push
test
mov
adc
sbb
sub
push
cmp
xchg
fiaddl
aam
ficompl
pop
fadds
ficompl
sahf
das
cwtl
int3
xchg
rorl
test
add
aaa
or
jnp
mov
call
xchg
in
mulb
jle
xchg
mov
leave
xor
sbb
stc
testb
adc
adc
mov
lcallw
dec
mov
xor
insl
pop
test
jne
mov
ss
cli
sub
or
dec
lea
and
inc
jne
ret
sti
add
sub
inc
sbb
add
aaa
test
out
add
add
pop
inc
in
pushl
adc
push
sub
testb
sub
xor
inc
decl
incl
or
mov
sbb
testb
and
adc
fldcw
cmp
roll
fnsave
shll
mov
mov
ja
fbstp
aam
cmp
aas
xchg
mov
insb
out
adc
mov
mov
mov
cmp
hlt
mov
enter
rorl
ret
lea
add
adc
jb
jbe
pop
stos
fidivrs
add
pop
fptan
xchg
pop
mov
mov
inc
add
push
ss
pop
fiadds
fisttpl
mov
jmp
sub
jmp
mov
mov
loop
adc
push
stc
test
adc
mov
jle
pop
jne
arpl
lock
adc
xchg
outsl
jg
pop
push
and
out
push
pusha
push
cmpsl
inc
xor
test
fildl
leave
mov
loopne
pop
and
mov
mov
icebp
mov
mov
lock
inc
mov
cmp
push
notb
or
push
fnstsw
add
dec
sbb
mov
insl
mov
push
lds
cmpsl
aas
fildl
add
and
lock
in
int
jp
dec
xchg
mov
jge
jbe
xor
loop
xor
ds
js
jge
pop
fidivl
cmp
mov
pushf
mov
in
and
fistl
mov
cmp
iret
dec
mov
pushf
orl
aam
mov
xor
stos
cmpl
loop
or
dec
jl
fisubl
push
outsl
jl
sbb
pop
mov
xor
rol
gs
cmp
ljmp
in
int3
sub
stos
mov
addb
aas
loope
lods
jp
sbb
inc
sbb
fsubl
subb
inc
sbb
das
inc
movsb
ds
cld
jnp
ja
inc
xor
jge
or
int3
sbbl
cmpsl
push
pop
cmp
and
jle
xchg
icebp
pop
sar
out
dec
push
adc
call
sub
out
cld
mov
cli
mov
mov
in
add
out
pop
dec
and
or
adcb
push
pop
xor
xchg
push
test
in
mov
clc
push
add
jecxz
cltd
sbb
stos
sahf
add
cmpsl
bound
dec
sbb
and
inc
pop
mov
movsb
mov
or
dec
adc
repz
dec
shrb
add
cld
xor
adc
or
jbe
lock
pop
and
add
pop
int
push
rolb
mov
fsubs
mov
iret
push
in
les
jecxz
jmp
popa
movsb
adc
sub
mov
jne
std
cmpb
inc
push
jbe
or
pop
xchg
incl
jle
jl
fadds
loopne
mov
mov
cs
iret
xor
cli
call
incb
fimull
or
test
mov
test
mov
loopne
add
push
sbb
xor
push
xchg
inc
add
bound
pop
mov
cmc
daa
idivb
sbbb
jg
mov
add
cmp
test
dec
shlb
or
push
pushf
push
adc
lock
xchg
and
fisttps
or
sub
rdpmc
lea
sbb
ficoms
sbb
push
out
in
mov
pop
jnp
mov
fsubrl
loop
add
push
cwtl
sbb
popa
subb
push
int3
lock
mov
cmpsl
filds
sahf
inc
dec
dec
and
or
dec
mov
inc
scas
jno
inc
lods
adc
adc
sbb
sbb
add
fcompl
fdivrs
shrl
daa
jno
dec
inc
into
orb
fmuls
inc
pop
mov
arpl
adc
rorl
sub
mov
mov
and
addb
push
and
cld
mov
cmp
movsb
in
fdivl
add
mov
xor
mov
mov
push
hlt
ret
hlt
add
push
ja
hlt
push
adc
outsw
mov
and
in
lcall
push
sbb
cmpsl
sub
sub
sub
inc
lods
insb
mulb
test
push
out
dec
or
dec
push
add
adc
in
in
jo
aam
aas
divb
ror
roll
sbb
outsl
add
push
jnp
adc
daa
out
cwtl
andb
mov
nop
sub
mov
into
jp
and
aaa
adc
pop
xor
jo
in
std
add
lcall
and
push
xor
mov
push
test
inc
in
outsl
sbb
hlt
adc
sbb
int3
add
mov
xlat
mov
adc
xchg
push
jge
in
pop
adc
rcll
mov
dec
insl
jmp
test
lret
ret
mov
insb
push
call
mov
and
cltd
jl
mov
mov
xor
pop
mov
dec
imul
pop
outsl
sub
nop
icebp
cmpsb
js
jl
xor
sti
lcall
fwait
test
in
outsb
push
stos
pop
xor
je
test
cmp
xchg
ss
add
xor
or
xor
xor
addr16
pop
ds
ja
out
out
or
testl
andl
cmp
sbb
pop
pop
xchg
std
popf
jg
fildll
loope
arpl
xchg
sub
loopne
outsb
mov
enter
jge
xchg
addb
jg
std
add
jo
scas
mov
fadd
cmp
push
sbb
sahf
fsubr
fmull
or
ds
repz
fwait
clc
aam
fsts
cmp
and
mov
adc
pop
aaa
mov
shll
sub
mov
add
test
or
push
mov
sti
mov
pop
adc
or
push
mov
push
jle
push
cmp
inc
push
in
jbe
xor
push
popf
sbb
leave
andl
push
push
inc
pop
js
and
sahf
and
loop
jns
push
aam
pop
inc
mov
xchg
xchg
mov
mov
xchg
mov
inc
dec
loopne
or
dec
mov
push
pop
mov
fisttpl
sbb
test
in
aad
cmpsb
mov
push
push
push
imul
dec
lea
pop
cltd
add
jmp
hlt
movsl
mov
push
pop
pop
jo
clc
adc
cmp
pusha
mov
mov
in
add
sbb
sub
xchg
es
bound
adc
and
nop
js
dec
iret
dec
iret
pcmpgtd
mov
inc
sti
sub
ja
add
lds
out
dec
outsl
xor
xlat
std
and
data16
jge
push
mov
or
daa
sbb
sub
data16
jg
mov
mov
rcrl
inc
or
pop
mov
xor
cmp
mov
or
or
jmp
lock
fidivs
pushf
dec
sub
jmp
or
mov
lea
xorb
fwait
jno
das
loopne
stos
mov
jle
cmpsl
sahf
sbb
rcrb
adc
aas
push
mov
movsb
jge
push
mov
mov
mov
sbb
ds
jl
mov
mov
stc
and
or
sti
movsl
xchg
sarb
or
fs
cwtl
in
dec
int
dec
lods
sbb
fistpll
jl
cmp
cmp
fcmovnbe
cmp
inc
mov
mov
aaa
outsb
lcall
mov
mov
xor
movsb
pop
dec
ret
loope
jle
lret
idivl
inc
arpl
adc
mov
mull
sbb
mov
fbld
push
push
sub
popa
mov
mov
mov
or
and
shlb
pop
xor
rcrb
xchg
adc
pop
xlat
outsl
xchg
bound
mov
push
subb
inc
fucomip
mov
pop
xorl
outsl
out
xchg
insl
push
sub
sub
adc
out
pop
loope
stos
das
xlat
mov
or
cmp
arpl
insl
or
dec
std
fwait
jmp
dec
add
dec
popf
fldt
les
fld
and
push
xlat
rol
movl
std
jb
pusha
xor
mov
mov
ja
hlt
out
cmpsl
push
inc
inc
xor
xor
and
das
jne
push
inc
and
mov
imul
ljmp
je
fstpl
pop
fstl
cli
and
mov
imul
push
mov
cmp
cmp
int
ljmp
and
cmpsb
test
add
xchg
and
loop
cmp
push
sub
mov
fwait
jg
pushf
and
lods
ret
mov
mov
push
sbb
jne
inc
add
or
shrl
out
xor
dec
outsl
shrb
divb
or
mov
pushf
push
push
mov
shll
inc
jns
adc
jl
xlat
les
cmpsb
and
or
out
sub
test
jbe
push
add
jbe
clc
and
mov
jns
sub
scas
iret
rcrb
stos
outsb
xchg
lock
cmp
inc
scas
icebp
adc
cli
sub
pop
mov
loope
scas
int3
dec
andl
xlat
push
jl
sbb
mov
repnz
add
mov
sbb
mov
out
sti
lcall
inc
push
sarl
fcmove
shlb
cmp
xor
inc
fucomip
pop
sub
cmp
or
cmpl
mov
inc
or
xchg
sub
pop
mov
fldt
push
mov
adc
lock
pop
xchg
aas
sbb
les
jnp
mov
jmp
dec
in
stos
mov
fcmovnb
ljmp
inc
cs
dec
enter
pop
icebp
xchg
dec
sbb
add
addb
ja
lods
negl
jp
jmp
mov
mov
or
jb
fisttps
loope
push
xorb
es
movsb
pop
push
lds
mov
bound
push
jo
push
fwait
sahf
in
sti
adc
fwait
and
xchg
outsl
les
cmc
pop
add
sbbb
sbb
or
add
or
pop
pop
sbb
inc
in
enter
mov
and
bound
fistpl
sub
sbb
and
add
sub
jecxz
int3
sarb
out
or
jge
pop
push
cs
out
inc
popa
stc
das
cmp
mov
cmc
aaa
pop
jle
adc
mov
or
sub
xor
xor
fcompl
call
add
or
cmp
sbb
lahf
push
adc
add
push
outsl
mov
ja,pn
dec
add
cmpb
pop
cltd
cmp
fcomp
lods
mov
in
xor
pop
mov
pop
loop
test
inc
pop
dec
cmp
xor
push
fstl
fstpt
or
lds
sub
insb
popa
andl
jl
sub
push
ljmp
xchg
stos
adc
movsl
pop
mov
in
push
lds
inc
push
push
or
adc
add
negb
jne
push
and
or
and
add
lock
into
jle
push
sbb
ret
and
sahf
or
sbb
sub
inc
xchg
imul
pop
add
cmpsl
gs
lcall
sub
add
lock
mov
in
xor
jl
icebp
pop
mov
cmp
popa
push
jae
test
ds
ds
int3
loop
adc
mov
mov
pop
in
out
dec
jl
outsb
insb
stos
xchg
pop
ret
mov
xorl
mov
sub
outsb
and
je
addl
and
mov
lds
outsl
adc
jg
in
sbb
imul
fwait
xchg
div
adc
push
inc
fildl
clc
and
push
push
movl
dec
fcoms
sbb
cmp
je
add
xchg
pop
fsubrl
inc
es
fcoml
out
cmp
mov
out
or
psrlw
pop
cmpsb
addl
movsb
outsb
dec
stos
je
jle
sti
xor
adc
imul
mov
add
cmp
fidivs
pusha
add
sar
add
shlb
jmp
add
xchg
or
and
push
dec
inc
icebp
or
repz
inc
pusha
pusha
inc
hlt
add
rolb
adc
push
repz
fimuls
xor
lock
sub
inc
adc
sarl
adc
loopne
lods
adcl
add
pop
lret
movups
mov
cli
sbbb
or
xchg
rclb
lcall
or
sahf
ljmp
sbb
push
aam
paddq
push
ljmp
gs
adc
sub
out
roll
adc
cld
inc
xor
sbbb
add
imul
repz
ljmp
mov
add
sbbb
inc
sbb
or
add
fsubrl
mov
rol
outsl
in
rcrb
popa
sub
mov
pop
xor
add
ja
add
push
std
adc
in
or
shrb
inc
xor
mov
inc
outsl
mov
movsl
mov
dec
add
push
push
hlt
jecxz
push
roll
hlt
push
dec
lock
shl
add
bound
xor
push
cmp
xlat
mov
dec
mov
add
pusha
stos
mov
rcl
lds
aas
or
xlat
mov
decb
push
mull
inc
sbb
mov
pop
sub
push
push
dec
cmp
bound
cmp
out
sub
adc
dec
inc
int
mov
out
xchg
das
dec
or
loopne
or
inc
repz
stos
push
movsl
scas
aaa
inc
loope
pop
inc
sahf
xor
add
rcrl
in
aaa
xchg
or
pop
scas
push
out
adc
adc
pop
or
mov
cmp
stos
cmp
sbb
mov
add
mov
or
adc
add
xchg
mov
and
xchg
adc
movsb
sbb
adc
inc
int3
pop
xor
stos
loop
push
push
clc
lods
xorb
push
sub
cmc
js
sub
inc
mov
pop
gs
push
jecxz
xor
and
in
xchg
or
cmp
lea
inc
mov
cmp
rol
int3
or
aam
movups
daa
repnz
cltd
in
sbb
add
lcall
fdivr
dec
jo
movsl
inc
xor
iret
mov
cli
mov
adc
out
dec
je
cs
loopne
add
lcall
push
adc
xor
rolb
inc
pusha
sarl
pop
mov
cmp
js
pop
je
fs
sub
sub
and
pop
or
mov
iret
inc
fdivr
sub
in
lret
fadds
jne
mov
out
shlb
pop
xor
and
push
add
into
ret
and
xor
mov
inc
lods
lock
enter
sbb
addb
scas
pop
pop
adc
adc
pusha
adc
cltd
mov
pop
js
pop
xlat
addl
pop
inc
mov
mov
cs
out
jle
sub
pop
add
arpl
add
fidivl
lea
shrb
jo
and
cltd
in
adc
inc
insb
clc
xchg
ret
xor
sub
jo
sbb
frstor
je
adc
out
out
dec
mov
or
adc
xor
hlt
add
push
es
mov
push
loopne
out
inc
add
or
fcmovbe
inc
mov
push
sbb
aaa
add
push
loope
or
push
mov
in
pop
jb
enter
push
test
pop
push
mov
pop
add
mov
xor
push
mov
dec
push
int3
push
sbb
inc
loopne
jecxz
add
mov
maxps
jo
mov
lret
fcmove
pop
adc
and
mov
shl
daa
sbb
das
mov
das
ljmp
xor
pop
inc
into
adc
les
fmul
xchg
inc
and
cmp
lods
mov
xor
or
rclb
jle
fisubrs
xorb
idivb
int3
icebp
jl
int3
adc
jge
adc
stos
lds
and
and
and
adc
adc
not
movsl
inc
inc
into
jg
mov
mov
test
jne
push
lcall
inc
inc
pusha
adcb
dec
mov
push
dec
fstps
pop
stos
fcomps
jne
clc
sbb
sahf
clc
test
jae
inc
repnz
adc
sbb
and
push
jae
call
cmp
sar
xchg
push
cmp
jb
jno
test
sbb
mov
ljmp
add
mov
mov
jecxz
xchg
shll
fcmovnb
and
cmp
jge
out
les
mov
insl
mov
in
mov
aas
out
andl
lcall
mov
add
jnp
mov
les
imul
jae
cs
loopne
or
mov
mov
and
mov
and
rcrl
sub
int3
or
push
out
mov
add
xlat
inc
xchg
out
pop
push
bound
sub
pop
sahf
adc
push
lcall
push
movsl
or
jmp
loop
mov
fldt
nop
pop
test
cmp
xor
jp
lods
jg
mov
gs
roll
xchg
dec
int
adc
out
icebp
js
mov
adc
sub
cmpsl
mov
or
outsl
jnp
imul
mov
nop
mov
mov
gs
adc
arpl
mov
adc
lret
rolb
rclb
add
out
into
dec
mov
push
mov
fwait
mov
int3
cmpsb
sub
mov
and
mov
or
xor
test
mov
or
push
punpckhdq
cmp
pop
mov
push
movsl
repnz
addr16
aam
dec
mov
add
xchg
sub
adc
and
dec
adc
and
jns
aad
fld
cmc
and
mov
sbb
das
sahf
xor
imul
mov
sbb
jge
aas
or
repz
test
dec
sub
fmuls
into
popa
pushf
cmp
pop
or
lock
xor
ljmp
xor
inc
stos
adc
test
testb
stos
and
add
rcrb
dec
mov
sub
cld
call
iret
scas
fstl
fiaddl
dec
dec
in
and
aam
enter
inc
add
or
cs
stos
jo
ror
in
adc
and
fadd
stos
add
jae
stos
mov
inc
mov
lods
xor
sub
shr
test
loope
sub
mov
ret
fbstp
cmpsb
aaa
test
pusha
je
rolb
in
pusha
movsb
mov
add
imul
jo
dec
leave
popf
mov
std
ss
hlt
mov
push
pop
insl
shlb
ja
and
cwtl
ljmp
sub
jl
test
lods
mov
dec
push
add
push
adc
je
lods
jmp
sbb
xor
int3
loop
lock
cmp
jb
jecxz
sbb
or
popf
stos
lock
daa
add
add
or
fdivrs
jae
mov
sub
xchg
test
shrl
incb
fs
cltd
pop
xor
mov
cmp
and
sub
fisttpll
inc
std
test
push
pop
les
cmpb
stos
xchg
add
das
call
clc
mov
add
loop
xor
aad
add
loope
outsl
xor
and
test
outsl
out
add
orb
adc
add
sub
lea
insb
mov
fisubrs
test
adc
cmpsb
ljmp
addb
data16
sti
insl
or
fwait
mov
sub
or
add
lds
adc
inc
in
adc
scas
aam
out
jg
mov
inc
stos
push
jbe
inc
test
rcrl
add
pop
popa
adc
pop
add
pushl
daa
sbb
dec
inc
roll
mov
loopne
loope
mov
aas
inc
lcall
clc
add
mov
add
pop
faddl
inc
xchg
lds
dec
fildll
mov
mov
pusha
sub
test
push
or
in
call
lcall
push
or
inc
sub
call
arpl
mov
jp
je
fists
cmp
add
xchg
aaa
adc
mov
lods
add
decb
and
cwtl
jecxz
and
pop
or
in
and
sub
push
add
ljmp
jg
mov
sbb
lahf
add
inc
incl
iret
xchg
inc
inc
arpl
cmp
sbb
push
or
std
lods
incl
hlt
dec
adc
or
aad
add
outsl
sbb
pop
mov
pop
nop
out
xlat
xor
add
call
ja
lock
data16
add
xchg
or
sub
pop
pushf
std
pop
or
call
loope
fildl
sub
cmp
pop
std
aaa
stos
pop
mov
aas
insl
and
ret
xchg
cld
mov
add
or
sub
clc
dec
call
sbb
repnz
cmp
fildll
adc
les
pushf
mov
dec
enter
lcall
stc
fldt
add
js
stos
inc
jmp
das
aad
movsb
enter
popa
cltd
add
je
and
add
mov
mov
jo
pop
gs
sbb
and
stc
cmpsb
inc
out
js
in
out
add
test
xor
loop
cmp
cmp
rcr
inc
cmc
in
smsw
stos
hlt
lcall
fildll
jp
mov
test
mov
incl
jno
pop
stos
gs
roll
sub
xorl
subb
sbb
push
pop
xchg
jbe
outsl
pushl
mov
sbb
cltd
das
sub
popa
inc
movb
cmc
test
sbb
mov
mov
hlt
lret
cmc
add
mov
jb
push
jmp
movsl
outsb
fisttps
mov
lds
add
clc
adc
sub
push
or
jecxz
mov
pusha
loopne
aad
dec
ljmp
mov
sub
mov
xor
jo
jne
int
jno
add
and
std
incl
xor
push
xchg
pop
pop
int3
hlt
push
cmp
scas
pop
pop
pop
in
fisubrl
sbb
add
scas
mov
jp
mov
pusha
test
addl
lahf
jl
adc
gs
cmp
test
cltd
rcl
cs
popf
dec
add
das
mov
add
jg
xchg
mov
scas
into
jg
inc
xchg
inc
inc
insb
add
add
sub
push
mov
jne
and
int3
loopne
mov
dec
push
pop
add
ja
mov
mov
out
jmp
mov
sub
mov
testl
sbb
aad
pop
jo
mov
mov
aam
stos
pop
imul
stos
scas
loope
jbe
adc
xor
daa
mov
adc
sbb
inc
cwtl
rcrb
outsb
mov
and
les
test
adc
jmp
inc
adc
push
nop
test
or
pop
lcall
sti
fists
jg
mov
dec
out
scas
mov
inc
scas
outsl
es
fwait
mov
add
outsl
stos
call
pop
jne
push
fsubs
scas
jmp
pop
loop
dec
mov
dec
add
or
push
or
incl
sarl
xor
dec
pop
lret
inc
aad
dec
outsl
pop
js
clc
gs
cld
mov
adc
fdivrs
in
cmpl
xor
pop
jne
fstp
rol
fwait
adc
push
pop
inc
mov
roll
lcall
mov
js
dec
scas
add
ljmp
les
pop
sahf
test
inc
add
and
sub
mov
pop
and
repz
imul
test
cld
fildll
int3
xorb
testb
jp
mov
bound
inc
pop
sub
adc
pop
inc
loope
sti
jp
mov
hlt
pop
test
loopne
inc
mov
out
insl
mov
push
daa
pop
push
jmp
mov
jne
mov
loopne
subl
rdpmc
sub
ja
fucomp
xlat
mov
mov
adc
fisttps
insb
cmpsb
arpl
bnd
lds
add
sbb
stc
fwait
scas
sti
pop
jge
out
addb
add
in
in
popa
add
sub
icebp
add
push
fistpll
inc
adc
imul
mov
fcomps
mov
test
es
xchg
mov
dec
iret
add
inc
dec
es
fadds
mov
adc
or
jg
decl
xor
movsl
inc
jno
jae
pop
sub
leave
pusha
and
jg
testb
cmpsb
inc
or
or
out
loop
pop
cmp
jge
push
and
mov
inc
fwait
mov
into
leave
bound
inc
push
mov
xchg
jp
cmp
push
data16
leave
dec
cmpsl
add
or
mov
fisttpl
lcall
pop
pop
jmp
mov
add
and
xor
push
std
mov
popf
xchg
inc
xchg
xchg
or
or
push
das
inc
pop
jb
or
fistpll
adc
cmc
lcall
xor
call
addr16
and
mov
aam
cmp
lock
test
fistpl
lea
test
mov
mov
mov
rolb
mov
push
ljmp
mov
inc
sbbb
mov
clc
pop
lahf
cmp
pushf
stos
push
addb
scas
test
into
push
rorl
notb
sub
or
loopne
pop
lock
hlt
psrlq
movsl
sti
lds
icebp
repz
sbb
lea
enter
xor
add
cli
mov
mov
mov
stos
out
pop
pop
and
inc
fnsave
adc
jmp
icebp
cmp
xchg
add
adc
icebp
jns
or
mov
and
jnp
push
cli
stc
or
pop
fiaddl
sub
aam
cli
xchg
inc
sub
mov
push
mov
sub
push
adc
xlat
xchg
lret
push
jecxz
movsl
inc
and
cld
stos
cmpsb
pop
fiadds
pop
ret
repz
daa
push
cs
mov
nop
in
iret
lea
insl
adc
add
cmp
cmc
jbe
daa
ffreep
push
push
mov
xchg
jmp
xchg
xor
mov
mov
jp
xlat
enter
adc
xor
imul
jnp
sbb
dec
add
mov
stos
incl
cmp
mov
lahf
sub
add
lods
mov
adc
or
call
inc
jmp
clc
sub
adc
into
mov
pop
imul
jecxz
jno
popf
dec
pop
xchg
imul
or
jge
inc
popa
js
lret
sbb
xor
cltd
xchg
adc
lods
bound
hlt
loope
add
ljmp
movsb
push
pop
xor
add
sub
repz
sbb
or
icebp
cmp
incb
data16
push
loope
rcrl
pusha
out
cli
jg
dec
mov
rorb
xlat
mov
dec
repz
popf
lahf
subl
fistl
lods
add
xchg
mov
xchg
xchg
xor
pop
push
xor
push
xor
add
test
fmul
adcb
movsl
das
lock
dec
repnz
jno
daa
mov
lock
les
jns
jb
pop
jbe
adc
aaa
out
cmpb
icebp
jge
cmp
ds
ret
es
jecxz
sar
adc
in
ret
iret
inc
popf
fdivrs
negb
cs
pop
insb
push
cmpl
dec
rcll
xchg
loopne
push
outsb
mov
in
jl
dec
scas
aas
je
mov
pop
cld
int3
sub
jle
lea
add
cmp
mov
add
data16
out
xchg
sbb
sub
mov
pop
jnp
std
outsl
mov
dec
imul
add
sbb
lret
bound
ss
outsb
xor
stos
add
cli
call
in
mov
icebp
and
or
test
adc
pushf
jbe
lcall
imul
mov
mov
arpl
movsl
das
add
fdivs
xlat
incl
sub
sti
jb
sub
add
repnz
filds
inc
dec
xchg
in
jle
jg
cmpsl
pop
cli
stc
and
in
adc
push
stos
outsb
popa
ds
mov
sub
pop
xchg
es
dec
fcomip
dec
test
lock
add
adc
xor
lahf
sbb
lds
fldt
hlt
lock
dec
shrb
mov
inc
gs
icebp
push
inc
ljmp
mov
ror
mov
jg
pushl
mov
and
mov
insb
fcomp
xor
cli
lods
push
pop
add
xorl
movzwl
ja
inc
rorl
inc
or
mov
gs
or
jb
pop
mov
push
sbb
in
push
push
dec
mov
out
cmp
add
test
sub
pop
rcr
out
cli
decl
imul
and
mov
mov
cli
repz
sub
jmp
stos
and
sarl
jne
or
mov
jge
idivl
shlb
fsubrs
push
push
leave
inc
addr16
cmp
inc
jo
inc
addr16
cli
mov
cmp
push
xor
mov
shr
xor
mov
lcall
adc
xchg
jmp
pop
push
push
push
push
fs
inc
rcrb
outsl
hlt
mov
xor
push
add
cmpsb
imul
cmovo
pop
std
lea
inc
xchg
sub
cld
adc
jmp
or
ror
rorb
popa
and
xor
jp
lea
scas
fstl
inc
push
inc
mov
call
dec
in
dec
loopne
ja
loopne
mov
mov
pop
add
pushf
fcomps
cmp
xchg
mov
in
inc
adc
push
inc
pop
lcall
filds
or
popf
pusha
and
and
movsb
pusha
mov
inc
stc
sbb
push
push
aam
sti
sbb
or
lahf
in
mov
fisubs
sub
adcb
or
subl
sub
dec
add
push
jmp
push
pop
and
pop
pop
sub
pop
pusha
or
mov
push
cwtl
in
cmpb
jns
jne
bnd
sbb
test
pop
inc
xchg
sbb
adc
jl
push
sub
push
jmp
push
loop
jo
popf
xor
mov
push
rcrb
jl
and
insb
in
pop
jae
movsb
dec
xchg
mov
xor
test
mov
rcrb
bound
push
jnp,pt
inc
cltd
inc
aad
xor
sbb
mov
mov
stc
mov
mov
out
addr16
bound
mov
push
jle
in
or
out
ljmp
sahf
cmp
loope
jecxz
push
xchg
dec
inc
jbe
sbb
js
jp
loopne
and
sub
mov
outsl
add
cs
and
mov
bswap
cmp
aaa
jnp
dec
add
xchg
test
push
mov
jle
pop
push
ret
push
loopne
and
cs
mov
push
hlt
rorb
jne
ljmp
dec
push
push
dec
lock
int3
dec
inc
or
test
orb
or
es
movsl
pop
mov
add
negb
loopne
jne
push
mov
lock
push
xor
setns
bound
aam
mov
cmpsl
outsl
pop
jle
jns
nop
sbb
sub
and
pop
das
out
sub
mov
cmp
jmp
nop
dec
jns
mov
outsl
add
fbstp
push
sub
adc
mov
aam
dec
inc
loop
push
ss
and
ds
push
les
aad
aaa
mov
push
xchg
subb
lcall
jle
xor
xchg
pop
lds
xor
jg
out
mov
adc
mov
add
inc
or
xchg
cli
cmc
mov
mov
mov
sub
out
pop
xor
adc
add
mov
mov
mov
or
mov
adc
dec
sbb
mov
cli
or
xorl
adc
push
or
mov
fiaddl
mov
fiadds
mov
xchg
xorw
cwtl
and
cmp
fimuls
push
inc
repz
cmp
and
enter
adc
data16
push
lock
popf
inc
inc
test
push
push
std
rorl
push
sbb
data16
scas
inc
in
and
stos
mov
xor
mov
or
outsl
sub
mov
dec
adc
loopne
jae
fsubs
xchg
pop
orb
push
inc
aam
loopne
add
dec
addb
sahf
vmwrite
call
dec
inc
add
pop
add
mov
adc
and
push
out
imul
clc
addr16
call
clc
ja
or
and
cs
sub
or
lds
sbb
fstpt
sti
sbb
sub
or
loopne
add
add
cwtl
lods
js
stc
sbb
in
and
or
inc
je
inc
in
xchg
pop
sbb
mov
shr
rcll
pop
test
ss
cmp
sti
xchg
mov
scas
xor
xlat
push
cld
sbb
pop
mul
dec
add
mov
jge
mull
pop
sub
dec
testl
pop
data16
sti
dec
aad
mov
icebp
fstpl
xchg
out
push
jmp
sub
roll
mov
add
and
scas
mov
xor
aam
push
dec
mov
mov
or
mov
in
test
inc
je
lret
clc
lea
and
adc
jmp
lret
aas
push
cmp
rorl
mov
mov
push
in
gs
clc
shlb
data16
loop
data16
cmove
dec
mov
add
xchg
dec
shlb
movsl
es
mulb
adc
or
mov
cmp
push
dec
mov
xor
inc
adc
loop
jmp
pop
add
dec
xor
stc
daa
loop
unpckhps
lcall
adc
xor
pop
sub
or
sub
incl
aam
mov
adc
adc
lods
arpl
sarl
mov
scas
add
inc
js
call
add
inc
pop
mov
stc
mulb
lret
out
das
std
inc
test
inc
clc
inc
push
roll
mov
jecxz
das
mov
incl
out
jl
fisttps
int
dec
or
mov
shll
out
sub
sbb
mov
sbb
sbb
das
push
ja
inc
mov
inc
mov
jb
cmp
fstpt
daa
adc
or
adc
mov
xor
push
sbbb
jmp
push
jp
aam
mov
sarl
xchg
inc
xlat
adcb
ret
lods
fstl
aaa
js
outsl
cwtl
or
adc
and
into
add
mov
shl
insb
ljmp
call
pop
mov
movsl
cmp
ret
and
aad
push
aad
clc
mov
ret
mov
or
ljmp
push
mov
test
mov
mov
push
dec
push
and
xlat
mov
jle
rolb
lea
lods
arpl
test
push
popa
sbb
jge
push
rcrb
mov
xchg
and
and
xchg
imul
ljmp
inc
push
sahf
test
push
xchg
nop
mov
fldcw
decl
loop
or
push
scas
or
mov
push
mov
push
mov
pop
call
nop
mov
int3
xlat
xor
mov
loopne
jno
sub
or
shl
ljmp
dec
insb
push
or
out
les
adc
fiaddl
pop
addl
les
sub
xor
jge
das
sub
jns
mov
imul
mov
mov
stc
clc
and
xchg
adc
inc
inc
nop
or
lds
push
jne
cmc
or
push
pop
sbb
or
pop
inc
loopne
adc
sbb
push
andb
into
mov
add
ret
hlt
cmp
xchg
inc
loopne
incb
loop
test
hlt
int3
loopne
in
push
xor
xor
addr16
xchg
sbb
push
mov
adc
inc
movsb
fimull
data16
orps
ja
mov
dec
in
jns
imulb
add
sbb
sbb
cld
fcoms
gs
pop
add
mov
out
pop
jne
or
into
xor
ret
push
test
out
mov
xchg
add
pusha
xor
imul
fstl
sarb
inc
inc
ret
inc
shlb
lea
sbb
pop
rcrl
into
shlb
pop
outsl
inc
cmp
pop
xchg
pop
ret
das
mov
daa
add
push
inc
inc
cmp
sbbl
add
daa
ret
in
sbb
dec
push
adc
mov
mov
mov
repnz
cmp
push
push
ljmp
ret
es
cmpsb
iret
inc
daa
mov
ds
add
xchg
and
adcb
pop
hlt
sbb
mov
inc
rcll
adc
add
loop
sbb
or
aad
mov
outsl
ret
push
add
mov
sti
ficomps
jb
mov
mov
add
sub
xchg
adc
mov
sub
mov
or
push
out
inc
or
xor
mov
and
xchg
stos
push
adcl
pop
or
in
push
sub
mov
or
aad
insl
inc
rol
dec
lret
mov
fcomps
sub
or
and
fadds
int3
xor
jl
lcall
hlt
ficomps
push
pop
les
andb
inc
shl
pop
sbb
dec
and
lods
pop
sub
movb
nop
sbb
pop
stos
pop
cmc
cld
add
pop
push
xchg
jne
pop
shlb
rcr
sbb
lcall
push
inc
in
sbb
mov
add
adcb
dec
adc
add
shlb
out
adc
push
cmp
jp
and
mov
ficoms
faddl
jae
pop
push
mov
add
or
pop
imul
inc
lds
pushf
loop
xchg
mov
int3
cld
jge
inc
in
mov
shlb
test
dec
ss
mov
add
test
push
sub
or
xchg
mov
bound
rorb
sub
mov
repnz
ret
sbb
les
aam
mov
ja
sbb
mov
inc
sub
dec
jo
lds
hlt
adc
and
xchg
inc
fwait
cld
addb
sub
call
pushf
insb
popf
mov
loopne
orb
cmp
loopne
leavew
add
adcb
and
push
dec
xor
jmp
or
fildll
and
mov
add
and
sbb
adc
inc
cmpsb
loop
loopne
shrb
sbb
inc
add
scas
or
shl
jae
inc
mov
inc
adc
and
inc
mov
mov
negl
xor
inc
and
add
mov
add
mov
add
stos
push
xor
nop
mov
arpl
xchg
loop
in
test
push
insb
outsb
dec
fs
inc
loopne
in
mov
rclb
sbb
and
and
push
cmpsl
cmp
push
cltd
xor
cli
xchg
mov
ja
sbb
jo
or
popa
inc
add
or
adc
jne
popf
test
or
rcll
lock
pop
mov
and
in
mov
andb
add
sbb
sub
pop
sub
das
idivl
les
fwait
test
inc
add
scas
dec
es
sub
cld
or
shl
push
ljmp
or
push
mov
xor
and
pusha
inc
adc
mov
insl
jno
or
jle
push
add
dec
push
adc
and
jmp
insb
test
xchg
push
lock
rcrl
mov
adc
iret
mov
push
insb
xor
shl
ret
testl
test
xchg
nop
mov
enter
push
inc
xchg
pop
mov
or
cmp
pusha
sbb
test
mov
mov
inc
pop
cmp
movsb
or
movsb
dec
aad
into
xor
test
aad
mov
data16
outsl
jnp
adc
popa
xchg
push
inc
das
mov
test
sbb
adc
test
lock
push
add
cmpxchg
sub
popf
mov
fnsave
push
or
xchg
stc
lea
aas
add
mov
sbb
fs
or
fildl
inc
mov
push
pop
sbbb
sbb
out
add
gs
ds
fucomi
pop
cmc
lds
or
add
aad
lea
xchg
mov
test
daa
push
insb
push
or
negl
pusha
cli
jle
aam
cmc
pop
aas
mov
sbb
test
lret
mov
out
add
push
in
iret
lds
aaa
aaa
adc
aas
jno
xor
push
and
pop
push
mov
push
fwait
clc
fiadds
notb
stc
pusha
xchg
insl
inc
pop
mov
cmpsl
dec
add
jge
push
jo
sub
or
push
inc
cld
and
mov
and
inc
das
sbb
and
jle
or
push
add
pop
mov
lret
mov
into
sbb
sti
loopne
adc
lahf
xchg
lahf
das
push
lds
aad
mov
dec
push
loopne
push
mov
cmp
pop
test
fstps
arpl
shlb
add
in
xchg
fcompl
cwtl
shlb
jne
scas
js
in
out
mov
loope
add
adc
sub
in
out
add
fldcw
xchg
lds
xchg
insb
rorl
mov
stc
inc
mov
incl
rorb
jle
mov
lds
sbb
pop
fildll
stos
cs
in
les
insl
into
add
push
jbe
sub
push
inc
xorb
cmc
pushf
test
dec
jne
push
aas
inc
je
inc
adc
fidivrl
sbb
outsb
gs
pop
xchg
loopne
cld
fwait
test
lcall
incl
xchg
mov
jae
cltd
icebp
mov
mov
out
lahf
adc
lock
ret
lahf
sti
lcall
popa
pusha
mov
pop
pop
xor
jp
cld
jo
adc
incl
imul
jl
xor
sub
lahf
push
mov
clc
sbb
shr
mov
mov
gs
add
mov
xchg
cld
jg
ljmp
jp
add
jne
stc
loopne
mov
bound
mov
popa
cmp
cld
inc
sbb
shl
cmc
dec
add
sarb
xor
sbb
cmp
push
lret
sbb
out
jo
stos
pop
mov
xor
shl
jle
jae
cmp
mov
mov
cwtl
cmc
testb
adc
jg
idiv
bound
push
std
xchg
int3
daa
sarb
add
or
in
add
jae
stos
shlb
scas
test
std
or
push
mov
lret
icebp
ljmp
xchg
inc
and
push
adc
mov
mov
pop
push
sub
jnp
rcr
cmp
xchg
or
idivl
lea
dec
cmp
movsl
mov
stc
stos
jg
or
jne
adc
dec
inc
xorl
dec
jo
cmpsl
int3
in
and
decl
loope
dec
xchg
repz
xor
cmc
jl
inc
dec
and
pop
mov
roll
pop
push
jl
call
stc
or
adc
das
into
mov
shlb
lock
xchg
mov
std
cmp
or
jle
mov
pusha
mov
mov
repnz
mov
add
push
test
or
daa
mov
or
mov
push
jb
dec
hlt
jecxz
les
adc
push
lahf
jg
cld
incl
adc
sti
mov
push
add
aaa
or
ficomps
adc
and
decl
jb
or
rol
icebp
add
in
push
fldcw
mov
and
popa
add
mov
mov
hlt
cwtl
int3
inc
mov
dec
mov
iret
leave
test
call
dec
imul
add
fidivrs
jl
cmp
pop
or
lods
into
push
mov
jge
rorb
negl
pop
jne
mov
clc
mov
xlat
add
cmp
pop
or
or
std
xlat
das
insb
pop
mov
leave
imull
test
dec
fadd
cld
jl
ret
fisubl
xchg
xlat
dec
icebp
inc
mov
andb
test
inc
js
jmp
outsl
jp
cmc
je
outsb
fs
dec
jge
push
fildl
cwtl
pop
jp
fnsave
sub
ljmp
mov
sti
leave
adc
cmp
mov
mov
cmpsl
sbb
add
mov
mov
scas
icebp
lods
nop
mov
das
inc
testb
mov
sbb
in
mov
ss
nop
ss
mov
stos
and
cwtl
loopne
adc
fst
mov
rolb
ss
or
xor
pop
lcall
pop
sbb
cmp
test
lods
mov
jle
pop
call
cmp
add
int
in
and
push
std
cmpsb
mov
js
or
aad
xchg
or
into
pop
stc
call
cmp
xor
addr16
clc
out
or
pop
ljmp
lock
or
bound
xchg
push
repz
clc
das
pushf
mov
mov
sbb
fwait
loope
je
stos
pop
test
test
adc
das
outsl
jbe
adc
jmp
cmp
sbbb
call
shl
inc
inc
mov
sbb
dec
lret
lock
ljmp
inc
mov
jle
test
ljmp
or
leave
or
popf
push
pop
mov
cli
testl
ret
push
fcoms
lods
fbld
aaa
stc
sub
jmp
js
fs
popl
cmpl
or
push
mov
shrl
lods
push
jb
xchg
adc
cmp
pop
clc
pop
adc
cld
mov
inc
sub
mov
fnsave
lcall
popa
and
decl
in
pop
stc
in
mov
xor
pop
insl
cmp
mov
loop,pn
jno
out
icebp
mov
icebp
lods
in
or
sbb
xchg
mov
mov
and
push
movsb
push
cltd
cmp
mov
xlat
mov
sbbl
dec
push
repz
scas
pop
adc
clc
les
test
cmc
lcall
mov
or
roll
xchg
scas
adc
mov
xor
call
jae
mov
fwait
dec
add
pop
mov
mov
cmc
pop
pop
mov
dec
cmp
cwtl
repnz
notb
fiaddl
shrd
inc
xchg
mov
js
pop
stc
loope
and
dec
sarb
jb
or
adc
mov
fbld
add
rcll
decl
xor
and
xchg
inc
jecxz
xor
jg
inc
in
adc
cs
ljmp
inc
decl
push
or
push
incl
adc
jo
inc
add
out
xor
call
int3
out
sub
orb
adc
das
cli
lcall
sbb
jp
aas
js
ss
jno
lock
dec
xchg
mov
or
sti
adc
clc
push
xchg
cmp
lods
decl
out
add
das
adc
out
testb
loope
mov
je
cmp
mov
adc
dec
ljmp
cld
lds
inc
xor
inc
mov
cmp
cld
jg
call
jne
mov
cmp
nop
sbb
cmp
fldcw
in
das
clc
fsubrl
push
cmovle
adc
mov
ljmp
lock
mov
mov
or
cli
xor
icebp
cmp
sbb
mov
pop
mov
xchg
jae
mov
or
and
lcall
add
pushf
outsl
lds
jl
and
fadds
test
inc
fisttps
scas
adc
jae
sub
push
mov
ljmp
fdivrs
mov
cli
xchg
dec
fwait
or
xchg
xchg
mov
jnp
xlat
inc
mov
xchg
add
and
add
clc
ja
mov
adc
sbb
mov
nop
jnp
and
pop
aam
repz
mov
add
iret
adc
leave
push
repz
lret
and
dec
mov
inc
enter
jno
aaa
cltd
mov
ljmp
stos
mov
xlat
movsb
mov
jl
outsb
add
adc
inc
inc
outsl
lahf
cmp
lret
xor
shrb
adc
dec
and
and
in
push
scas
es
lock
imul
or
adc
push
mov
repz
out
imul
fwait
sbb
clc
dec
cmp
push
rolb
adcb
adc
pop
or
pop
scas
sbb
enter
sbb
push
xor
ja
dec
add
js
scas
ja
call
outsl
sub
mov
pop
cld
gs
cmp
push
mov
fidivrs
add
sti
push
aaa
addb
jmp
jp
mov
or
or
push
out
adc
in
fcmovbe
or
jae
push
lds
movsb
aaa
cld
shlb
or
loope
cltd
das
and
in
rcl
sbb
sbb
clc
bound
push
popf
enter
cmpb
push
inc
xor
push
dec
mov
rclb
sarl
test
divl
dec
mov
addr16
addr16
and
mov
pop
lds
sbb
add
xchg
aas
das
sub
and
insb
xchg
mov
sbb
ret
fcmovnb
cmp
sbb
push
xor
ljmp
cmpsb
pop
jno
xor
loop
lock
inc
popa
lret
push
je
inc
jl
xor
sbb
int
inc
lcall
adc
xlat
cmpsl
and
or
mov
mov
arpl
mov
test
dec
push
and
cmp
lock
pushf
cs
iret
into
dec
pop
jns
mov
insl
cmp
pop
inc
or
and
and
imul
lahf
test
out
xchg
adc
jno
pop
xor
xor
or
lcall
xchg
push
mov
dec
add
bound
or
adc
cmp
jl
adc
add
adc
enter
adc
and
or
gs
cmpsl
mov
jmp
mov
rorl
cmc
inc
mov
jle
push
pop
add
aas
sbb
inc
andl
ret
sbbl
pop
add
mov
mov
add
mov
push
mov
rcrl
cmp
je
jne
cmp
push
orb
inc
out
mov
or
inc
aas
insb
or
roll
ja
movsl
dec
push
mov
add
bound
pop
and
mov
add
ret
xchg
ljmp
das
or
or
js
fdivrp
insl
call
sub
dec
mov
push
mov
repnz
pop
mov
mov
push
mov
ret
cmp
cmp
test
rcrb
adc
mov
mov
inc
inc
in
add
dec
push
push
outsb
mov
sub
adc
or
adc
mov
and
jge
jae
arpl
inc
or
cmpb
xor
test
sbb
inc
adc
insl
mov
lahf
dec
xlat
mov
cwtl
mov
inc
aad
mov
stos
adc
and
xor
pop
imul
mov
xchg
testb
out
mov
dec
lock
sub
fistps
add
fcomp
imul
jo
adc
mov
jae
es
xor
or
push
inc
in
cmp
sbb
movhlps
std
dec
push
xchg
in
call
add
xorl
push
push
add
lds
dec
sub
das
lock
popf
in
imul
lds
ljmp
add
loop
icebp
fisttps
or
sarl
test
jecxz
or
dec
adc
repz
aaa
lea
cmp
rorl
movsl
imul
aad
mov
inc
pop
popf
lock
imul
mov
mov
ret
outsl
in
jg
lahf
hlt
loopne
aaa
inc
fwait
sub
mov
cmp
mov
sahf
xchg
adc
add
xor
mov
call
mov
test
ds
or
inc
lahf
jbe
dec
sti
in
in
push
cltd
cmpsl
mov
int3
mov
int
jg
jae
dec
xchg
sub
add
xorb
movsl
daa
push
push
or
test
stc
push
or
cs
nop
rolb
push
push
inc
mov
sbb
mov
xchg
mov
cmp
add
ffree
repnz
xchg
lds
mov
fs
push
enter
cld
pop
add
jp
pop
dec
mov
inc
jl
cld
jb
add
jnp
fwait
mov
cli
inc
orl
adc
sub
movsl
sbb
int3
dec
mov
in
or
dec
pop
jae
add
mov
roll
lahf
lret
jg
mov
call
adc
insb
fsubrs
pop
adc
push
and
es
add
fsubrs
or
popa
lcall
xchg
ljmp
push
push
jge
sysexit
mov
sarl
mov
sbb
aaa
or
ficoms
aas
loop
or
mov
mov
push
mov
inc
int
jge
jg
sbb
ja
and
sbb
sbb
call
inc
dec
adc
iret
xlat
and
test
mov
or
or
daa
xlat
mov
sbb
std
mov
call
rclb
xor
push
js
sub
test
ret
add
js
xlat
out
imulb
xchg
les
les
push
rcll
pop
rcrl
cli
mov
in
test
call
stos
rcll
push
pop
xchg
clc
inc
push
aam
das
add
jle
test
cmp
dec
and
pop
ja
inc
imul
mov
and
mul
sub
fidivl
das
incb
jl
in
inc
or
pop
xor
aam
sbb
push
sti
dec
nop
add
push
test
sub
je
rorb
cmpsb
fcmovb
dec
adc
pop
in
ror
and
sub
shrb
or
push
inc
xor
ja
stc
or
push
pop
add
adc
fcoml
xor
fmull
popa
inc
push
mov
repnz
xlat
mov
adc
ret
mov
cli
or
es
mov
lock
bound
add
sub
inc
in
insb
call
push
or
and
es
je
iret
sub
cwtl
fmul
push
in
push
pop
jb
sub
push
sbbl
pop
jmp
xchg
mov
sub
pusha
or
and
dec
push
mov
pop
jae
lret
lds
mov
mov
jl
jnp
mov
lea
aaa
call
jnp
push
nop
loope
fs
call
lret
mov
mov
sbb
std
shll
inc
lods
sbb
std
add
push
lahf
inc
mov
imul
cwtl
sbb
dec
inc
adc
push
stc
adc
popa
into
or
and
mov
daa
scas
dec
cld
jae
inc
ss
and
and
roll
or
cmp
push
pop
fsubr
mov
push
sbb
cs
cmpsl
cltd
pusha
and
inc
push
mov
pop
ljmp
cmpsl
dec
push
ffreep
bound
decb
sub
adc
adc
aaa
mov
lods
sbb
shll
mov
and
daa
ds
push
adc
push
or
stos
jg
dec
add
or
std
pop
orb
lods
inc
repnz
fnstsw
mov
sbb
jo
mov
sbb
jbe
subl
mov
mov
cli
push
sub
lods
hlt
dec
adcb
in
pop
iret
and
and
and
in
sbb
pop
mov
sub
lods
ja
mov
je
aaa
xchg
pop
popa
jecxz
xchg
nop
sbb
inc
loopne
fidivrs
push
xor
test
mov
call
fisttpl
mov
add
inc
lea
jb
mov
sti
mov
aad
lret
mov
lods
inc
loope
or
mov
xchg
ja
cld
mov
and
je
mov
add
add
outsl
mov
or
outsl
in
sbb
dec
rcll
mov
mov
pop
fldcw
mov
cmp
jns
cmc
push
cld
or
push
jno
rcr
pop
and
sarb
loope
sbb
sbb
push
and
or
pop
addl
sub
out
sbb
inc
test
sbb
jns
decl
incl
dec
jl
sahf
xchg
ja
xor
push
sbb
flds
les
fcmovnu
xchg
mov
mov
xchg
jbe
dec
pop
stos
or
loopne
inc
mov
push
icebp
push
mov
jo
fdivr
outsl
pop
pop
cltd
int3
inc
pop
fst
mov
lods
xchg
mov
adc
test
je
scas
shl
push
mov
cmpsb
in
pop
ljmp
sub
add
mov
xchg
rol
out
test
arpl
pop
idiv
jne
cltd
mov
scas
jo
and
jg
dec
inc
dec
inc
add
pop
mov
pusha
add
lock
sbb
clc
ret
testb
inc
shrl
mov
clc
fldt
les
out
lods
lds
lahf
jge
xchg
jl
push
insl
outsb
mov
hlt
pop
out
ret
or
xor
push
nop
cmp
mov
and
jp
mov
pop
jg
mov
in
lock
sarl
dec
and
mov
mov
mov
xchg
popa
pop
jae
cmp
mov
outsb
aam
inc
insl
pop
clc
add
or
icebp
jg
adc
inc
fldt
cmp
sbb
inc
inc
mov
in
testb
mov
add
sub
or
ret
dec
add
bound
mov
sarl
mov
push
lret
mov
pop
outsb
pop
inc
aaa
fstps
xchg
lea
outsl
inc
out
pop
bound
fldl
and
sub
cwtl
cs
mov
pop
subb
jo
mov
sbb
popl
std
aaa
loopne
xchg
clc
adc
xor
es
sbbb
pop
imul
and
fstpt
dec
test
sbb
fldt
jo
dec
jno
mov
push
dec
lcall
pop
xorb
jg
icebp
mov
push
jb
cmp
jmp
xor
lcall
pop
or
lds
aad
push
mov
mov
push
in
loope
pushf
pop
cmp
sti
sub
clc
jg
outsb
in
mov
sbb
xchg
sbb
inc
or
add
dec
and
jne
out
mov
nop
getsec
negb
mov
repz
cmp
in
adc
mov
add
cmp
and
or
mov
jle
cli
dec
inc
mov
xor
lret
pop
repz
lcall
mov
out
adc
or
jecxz
jo
addb
shlb
mov
adc
add
mov
cwtl
jp
out
mov
adc
mov
dec
pusha
addr16
loopne
lahf
sub
or
rolb
inc
iret
loopne
test
and
sub
add
enter
lsl
ds
add
add
cmp
push
hlt
stos
xlat
ret
fstpt
pop
aad
adc
imul
jae
je
call
mov
out
and
add
push
adc
add
or
hlt
je
in
rorb
sub
mov
out
sbb
dec
mov
xchg
dec
add
push
xor
leave
mov
add
test
add
pop
movsl
andl
xor
sub
shrb
loopne
je
bound
cmp
cwtl
das
mov
adc
mov
push
lahf
repz
add
and
adc
adc
rolb
cmp
mov
imul
sahf
sub
add
push
inc
push
inc
inc
mov
cmp
lret
icebp
orb
gs
or
mov
fdivr
mov
jl
lock
lock
popa
mov
sbb
loop
test
arpl
mov
and
lods
in
add
pop
shll
sbb
fildl
lock
push
fsubl
pop
cwtl
pop
fstp
push
jmp
sub
into
mov
dec
aad
jg
outsl
pop
pusha
sub
mov
inc
xchg
lods
adc
sbb
incl
jnp
out
jmp
xor
push
repnz
mul
dec
jmp
push
pushf
cmc
and
xchg
lret
cwtl
mov
psllq
adc
std
incl
or
clc
jl
cmp
sbb
clc
jecxz
adc
ljmp
jmp
dec
mov
adc
rol
pusha
ds
push
call
xchg
aad
shr
mov
dec
jle
cld
xchg
clc
in
aas
pop
cmp
call
out
ja
sti
mov
xchg
lahf
ret
cmp
scas
jo
aam
and
adc
and
fisttpl
mov
sbb
cwtl
cmp
fisttps
loop
int
sbb
xor
sub
idivl
jae
pop
mov
lret
xchg
outsl
add
dec
mov
sahf
adc
mov
jg
lcall
push
in
iret
or
or
push
pop
add
leave
mov
xchg
dec
aad
mov
call
cmp
sub
enter
shrb
push
in
adc
lods
test
cld
popa
in
ja
push
sarb
xchg
mov
sbb
mov
ljmp
cli
xchg
cmp
lea
jo
lods
je
fnsave
add
push
pop
lock
lock
add
push
test
cli
inc
xchg
call
mov
ss
mov
sub
xor
push
jg
mov
mov
mov
dec
adc
lret
push
mov
mov
iret
stos
loopne
fistps
fbld
jbe
mov
push
pushf
or
inc
inc
andl
push
pop
clc
pop
cld
sbb
lcall
popf
add
xchg
mov
add
push
push
lock
rolb
mov
ljmp
decl
or
jg
daa
pop
cmpsb
xor
push
push
loopne
sub
roll
repnz
cmc
lcall
mov
out
lods
cwtl
pusha
les
scas
dec
lock
js
push
cmp
add
loopne
mov
movsb
mov
adc
into
or
mov
mov
movsl
imul
imul
cld
outsl
xorl
sub
pop
jno
popa
into
loopne
call
mov
ljmp
dec
sbb
mov
scas
add
outsl
jl
mov
sub
add
test
dec
jns
ret
outsb
add
mov
pusha
dec
or
jbe
or
andl
sub
and
mov
mulps
sbb
fldt
jbe
ja
icebp
scas
push
rcr
das
cmp
cmp
cmp
or
mov
into
pushf
outsl
repz
mov
icebp
fbstp
test
lcall
incb
in
jg
adc
testl
sub
jle
loope
std
mov
cs
lods
mov
jp
mov
jns
lods
sbb
ja
mov
mov
std
xor
test
or
xor
push
cwtl
dec
pop
pop
call
stos
divl
mov
test
mov
mov
decb
and
iret
stc
or
adc
sub
sbb
sti
stos
mov
aad
clc
xchg
rcll
xorb
aad
popa
rsqrtps
cmpsb
mov
mov
out
push
adc
iret
sub
fwait
test
pop
out
das
xchg
sub
push
mov
test
jle
stos
repnz
lods
xchg
sbb
xor
flds
pop
test
rol
jb
cld
adc
push
adc
shl
js
mov
clc
mov
call
sbb
into
pop
lret
lahf
fbstp
dec
inc
add
in
imul
sbb
bound
pop
push
push
cli
mov
repz
jmp
mov
jno
loopne
adc
jnp
mov
xchg
and
das
test
inc
dec
and
imul
or
sbb
or
scas
test
mov
andl
cmp
jp
out
and
dec
mov
sbb
movsb
adc
cwtl
loopne
lret
push
call
sub
or
ret
mov
lock
int
xchg
mov
into
mov
dec
das
aad
popa
std
adc
cmpb
dec
pop
push
inc
jbe
loopne
mov
pushl
cmp
sbb
les
sahf
mov
jg
jmp
mov
dec
mov
xor
test
sbb
fsubrs
mov
pop
mov
pop
inc
inc
nop
xor
test
icebp
jl
sub
ljmp
cld
test
adc
rcrb
push
mov
adc
pop
jl
clc
sbb
jg
cltd
lret
clc
push
push
popl
je
loope
adc
std
incl
inc
xor
in
pusha
sub
mov
mov
pop
cmp
leave
popf
inc
push
ljmp
xchg
or
enter
or
sbb
cmp
xchg
fs
popa
repz
push
inc
mov
pop
std
push
and
mov
xchg
fxch
add
and
rol
pop
loopne
ret
call
jns
or
dec
and
dec
mov
mov
mov
fldt
mov
jmp
mov
xchg
sub
push
mulb
sbbb
loopne
in
sub
loope
addr16
push
push
sahf
mov
andb
pop
loop
adc
mov
incl
add
insb
cs
or
and
jmp
sub
cltd
mov
sbb
pop
decl
test
ret
aad
fwait
lods
ljmp
loopne
ds
fisubrs
mov
repz
aaa
cmpsb
mov
inc
add
imul
xor
pusha
sbb
xchg
xor
push
test
mov
jmp
mov
pushl
add
rcrl
in
in
pusha
ret
and
dec
adc
mov
das
jae
adc
ja
or
mov
ss
pushl
movl
popf
xchg
mov
iret
add
negl
aaa
stos
adc
stos
daa
jae
jmp
add
in
jbe
insl
sub
xor
inc
mov
jns
fsub
mov
cmp
pop
jb
push
push
loope
shll
adc
mov
add
push
inc
fdiv
lods
or
jns
mov
ljmp
mov
jecxz
pop
mov
cmp
mov
cmp
ror
inc
cmp
popa
sub
add
jecxz
inc
jno
inc
cmp
in
out
xor
adc
js
int
mov
lea
fldl
loopne
sbbb
popf
cmp
add
xor
xchg
das
ljmp
enter
push
jle
enter
inc
lock
ss
cwtl
scas
xchg
mov
inc
pushl
mov
xor
sarb
push
fwait
aaa
cmc
inc
mov
sub
stos
push
push
and
int3
in
xchg
inc
add
aas
stc
mov
pushf
adc
mov
dec
pop
stc
xchg
sbb
mov
mov
out
push
push
or
mov
jo
cmp
mov
inc
out
or
push
sbb
sub
lcall
jne
arpl
mov
push
test
sbb
std
jg
cmp
and
xor
push
fdivrs
sbb
mov
or
in
cli
sbbb
addr16
inc
xchg
xchg
adc
aaa
icebp
lret
gs
jae,pn
in
fsubs
adc
lcall
lcall
pop
sbb
or
popa
cmp
cld
sbb
fwait
sbb
pop
pop
mov
ljmp
cld
lret
push
or
push
jl
lahf
lods
or
nop
into
mov
std
stos
outsl
mov
popa
sub
mov
test
cmc
mov
fidivl
pop
out
mov
icebp
and
xor
les
dec
outsl
adc
dec
sbb
pop
inc
test
ret
leave
out
rol
xchg
cmp
mov
and
rcrb
or
mov
popw
loope
fcmove
adc
adc
inc
dec
pushl
sbb
push
mov
movsl
dec
push
add
pop
ljmp
std
jg
mov
lea
xor
cmp
jb
out
cld
inc
sbbl
or
into
adc
dec
adc
in
das
mov
scas
xor
inc
xchg
in
scas
jge
adc
mov
lea
lret
mov
fdivrp
cmc
push
cmc
out
inc
cmp
iret
and
in
sub
cmp
mov
testb
mov
cmp
adc
jl
loop
dec
dec
mov
mov
mov
cmp
mov
lds
xor
popf
addr16
fildll
cmp
or
mov
jp
jmp
sbb
dec
into
jge
mov
daa
jno
ljmp
xchg
in
scas
push
das
add
sahf
in
jb
in
or
pusha
sub
pop
rorl
pop
cmc
adc
movsl
loop
add
dec
jmp
sub
inc
sbbl
inc
mov
mov
jmp
xlat
dec
insl
pop
rorl
and
adc
inc
dec
adc
xor
adc
sbb
push
pop
ficoml
lcall
cwtl
shrl
rolb
pop
pop
jl
xchg
mov
adc
pop
and
pop
jnp
cmp
inc
xchg
cmp
out
add
les
sbb
adc
and
mov
cltd
dec
cmpsb
or
data16
ret
sbb
scas
aad
jb
xor
xchg
negb
sub
mov
out
mov
testl
gs
mov
dec
jbe
fwait
mov
adc
sub
pop
out
incl
jnp
pop
mov
cmp
or
mov
fucom
jo
fisttpll
sti
loopew
xor
jne
pop
dec
mov
push
inc
jno
xchg
pop
pop
mov
push
jle
pushf
pop
inc
cmpsb
adcb
outsb
insb
xor
pop
scas
inc
dec
jae
dec
xchg
movsl
mov
outsl
test
adc
pusha
mull
fdivrl
xchg
mov
jle
pop
add
fsubrs
mov
xor
pop
inc
sbb
fcoml
pop
adc
push
adc
mov
adc
jne
mov
adc
cmp
sub
fidivrl
es
push
or
cmc
add
pop
mov
jo
push
and
cld
ret
and
int3
mov
jge
adc
lahf
or
mov
dec
adc
out
fdivrl
scas
in
repnz
cli
lcall
pushf
aam
icebp
xor
lods
inc
pop
or
rcr
out
cmpb
xor
or
add
ficoml
dec
dec
mov
add
xlat
inc
fcmovnbe
cmp
out
adc
push
add
imul
daa
adc
ja
int
sti
std
pop
xchg
stos
mov
xchg
pop
inc
pop
xchg
js
sbb
or
in
xchg
decb
inc
pop
mov
dec
mov
sbb
shlb
jbe
adc
adc
cmp
das
push
shrb
push
lds
cmp
or
test
xchg
loope
int
fsub
insl
sbb
fbld
xchg
stos
dec
add
ljmp
sarl
arpl
add
fsubrs
inc
sbb
rorb
pop
mov
push
sub
lret
sbb
push
inc
mov
xchg
loopne
push
adc
lcall
movsb
xchg
push
xchg
orb
push
out
cmp
lcall
dec
mov
lods
outsl
mov
lahf
das
imul
repnz
and
pop
jne
pop
sub
push
push
nop
mov
inc
xchg
xchg
out
loopne
push
out
cltd
adc
dec
push
mov
mov
pushf
mov
push
lock
dec
insb
mov
jns
dec
xlat
pop
push
mov
cmpsb
ja
enter
lcall
cwtl
movsb
xchg
es
shrl
clc
les
popf
fistpl
sub
pushf
jb,pn
mov
das
cld
sbb
mov
and
fistpl
gs
neg
pusha
mov
and
sbb
movsl
inc
stos
mov
in
repnz
xchg
sti
loopne
mov
push
ja
mov
jae
xchg
sbb
sbb
pop
sub
arpl
pop
fdivr
jg
outsl
pop
leave
cwtl
int
cli
scas
mov
adc
mov
mov
xchg
pusha
dec
inc
stc
cli
xchg
aam
pop
ss
jl
cmpsl
jg
pusha
jle
sbb
sbb
lock
popf
jno
popa
adc
lock
or
adc
dec
je
imul
sub
cmp
shrb
lock
push
mov
loopne
shl
ljmp
rcrb
jno
xchg
loopne
ss
pop
mov
mov
frstor
sub
inc
adc
clc
jne
mov
cs
jg
cmpsb
nop
cltd
pop
scas
fcmovu
nop
add
mov
out
mov
dec
sub
xor
push
mov
js
pop
bound
jg
cltd
cmp
bound
andb
inc
enter
or
inc
inc
push
lret
mov
cmp
faddl
inc
push
or
xor
add
in
sahf
jge
or
mov
mov
xchg
icebp
daa
sub
mov
sub
xor
lcall
movsb
inc
lods
pop
aad
jecxz
mov
bound
dec
les
cmp
in
fbld
scas
or
lret
jns
testb
jne
push
mov
arpl
or
inc
in
jmp
mov
mov
shrl
inc
dec
push
fiaddl
std
xlat
and
fildll
std
daa
mov
cmp
dec
add
inc
xor
mov
fldl
daa
mov
or
andb
in
add
cmp
scas
sti
movsb
sti
decl
iret
dec
push
pop
pop
outsl
xchg
xor
and
clc
iret
lods
fnsave
and
pop
insb
cli
inc
mov
popa
ss
hlt
popf
in
fbld
jae
pop
dec
lods
andb
xchg
aam
adcl
pop
pop
xchg
andb
push
lods
dec
push
jge
sbbb
cmp
adc
out
int3
nop
add
xor
cltd
pushf
arpl
mov
shrl
fstps
jno
insb
cmp
aam
out
imul
shlb
aad
mov
insl
push
testb
and
sbb
test
sub
jbe
rol
jg
std
repnz
insl
mov
adc
pop
ds
pop
xchg
sahf
jge
aaa
xor
ljmp
lds
pop
adc
and
or
pop
xchg
or
sbb
fldenv
push
xor
push
push
pop
mov
std
mov
test
cmpsb
iret
hlt
or
lds
or
sbbl
pand
add
or
dec
les
daa
mov
xchg
stos
mov
pop
hlt
ljmp
cltd
or
jmp
sti
aam
lods
add
ja
mov
jbe
inc
sub
cli
xor
lods
pop
orl
xor
sbb
sbb
adc
mov
fsts
sarb
cmp
loopne
xor
mov
lds
inc
push
inc
sub
lds
mov
xor
fwait
sti
cmp
pop
call
gs
dec
mull
dec
pop
lods
decb
mov
loop
sub
comiss
negl
movsb
sub
sub
outsl
sar
jg
ja
mov
pop
mov
stos
mov
call
lret
fcmovbe
imulb
imulb
mov
gs
sbb
fdivrp
or
cmp
mov
insl
ja
mov
lods
or
sub
xchg
jae
movsl
lds
sub
mov
je
mov
ret
loopne
add
mov
xchg
xor
mov
loope
jg
or
popa
mov
mov
icebp
xchg
insl
mov
push
cmpsb
insl
jb
adc
out
mov
popa
int3
inc
xchg
mov
xor
pusha
test
adc
loop
js
jo
int3
sub
push
fidivs
ljmp
mov
idivl
jno
shll
ret
cmp
cmp
xor
cmc
adc
jo
cld
sbb
lods
xchg
or
mov
psrlw
push
sub
loop
xchg
mov
jmp
mov
rcr
mov
adc
sub
add
scas
or
loopne
loopne
pop
lahf
cs
sub
out
enter
mov
roll
or
cmpsl
jmp
sahf
sbb
fisubrl
rcrl
lahf
cli
cld
cmc
lret
sub
jmp
pop
lcall
outsl
sbb
repz
test
mov
int3
adc
hlt
lods
ud1
add
mov
sarl
cmpsl
jmp
jo
loope
stc
xor
add
insl
mov
jnp
out
int3
das
fcoml
jecxz
adc
inc
outsl
fldt
add
test
or
jmp
pop
mov
push
test
mov
mov
lcall
das
push
call
ss
shll
jp
inc
add
int
jl
add
xchg
push
imul
push
jnp
cmp
xor
loopne
push
or
mov
inc
aaa
add
std
cmpsl
mov
add
jg
test
fwait
add
adc
adc
call
add
jo
sbb
dec
shl
hlt
mov
sarb
adc
adcb
pushf
adc
mov
dec
pop
sub
xchg
push
push
lods
test
lock
inc
mov
idivb
repz
enter
stos
push
add
cmc
lods
mov
imul
lret
pushf
dec
push
add
lds
add
in
adc
push
push
add
sub
dec
cmpxchg
in
pusha
or
int
and
sbb
and
cmp
add
xor
adc
jmp
loopne
xor
jge
dec
fsubrl
js
jp
ss
mov
jno
cld
sub
in
nop
retw
push
sbb
sbb
and
pop
mov
add
repnz
ret
je
jno
movsl
hlt
add
inc
xor
fistpll
nop
adc
mov
push
inc
insb
add
lret
fs
aad
xor
sbb
aaa
clc
push
mov
add
pop
or
and
mov
jp
test
faddl
sbb
mov
xlat
inc
loope
js
pusha
xlat
mov
pusha
movsb
ret
int
push
push
adc
mov
cmp
sbb
push
nop
pop
orl
mov
push
bound
adc
jecxz
in
out
push
clc
jmp
adc
mov
lock
push
inc
add
adc
test
jmp
nop
inc
aad
aas
loope
incb
inc
and
mov
ss
jo
mov
push
loope
add
or
push
sarb
jns
xor
xor
lret
sub
adc
js
sub
mov
lods
inc
push
push
out
cmpsl
cmp
sub
pop
loop
mov
adc
inc
cmp
sub
shll
or
sub
push
jne
add
sbbl
adc
call
or
lahf
adc
std
repz
pop
xchg
add
loopne
and
icebp
stos
sub
mov
or
add
or
add
push
cmp
movsb
fistpl
lret
jbe
or
add
pop
and
mov
test
mov
xor
or
xlat
add
cwtl
inc
ret
pop
jmp
sub
out
push
enter
sub
ljmp
mov
test
insb
pusha
mov
xchg
popa
and
mov
lock
jnp
pop
or
fwait
cli
mov
rcrl
ds
or
aas
cmp
inc
mov
pop
andb
push
mov
pop
sbb
pop
mov
and
dec
mov
fcom
and
ds
mov
aaa
shrl
mov
movl
je
insl
or
nop
movsl
stos
clc
dec
icebp
cmp
mov
mov
or
out
clc
and
xor
add
sbb
out
jcxz
icebp
sysret
xchg
lret
repnz
inc
xchg
push
ss
push
add
push
stc
jecxz
push
or
pop
mov
in
scas
cwtl
push
mov
jecxz
add
push
mov
sub
ficoml
cli
fcmovnu
and
cmp
dec
inc
outsb
inc
lahf
sbb
push
in
ror
pop
sub
hlt
outsl
mov
mov
cmpb
xchg
movsb
movups
aas
and
mov
pop
rcrb
aam
jb
sub
cmp
pop
mov
shlb
xor
lds
aam
dec
iret
mov
stc
pop
std
aaa
aam
push
fisttpll
iret
xor
in
mov
shrl
push
faddp
mov
jl
imul
ja
and
sahf
pop
decl
add
lret
ret
xchg
mov
divb
outsb
mov
outsb
hlt
xchg
mov
add
pop
adc
sub
rolb
in
mov
sbb
jg
mov
es
sub
das
hlt
ljmp
sti
push
pop
js
outsb
stc
lds
mov
fwait
aad
mov
jg
inc
dec
lret
shlb
sub
arpl
sub
jg
mov
notb
enter
add
out
in
xor
idivl
lea
sbbb
cs
push
in
mov
adc
ja
sub
loope
push
push
xchg
add
mov
fildll
push
jle
or
icebp
push
dec
add
or
icebp
idiv
xor
push
jp
testl
aas
jl
pop
stc
or
hlt
incl
mov
adc
fiadds
jge
fbstp
and
jno
sub
mov
mov
es
daa
daa
data16
push
nop
xor
push
jno
test
xor
ret
mov
lcall
jecxz
cmp
stos
cmp
in
clc
cld
imul
out
je
fildll
jno
inc
andl
mov
in
mov
jne
shll
adc
int3
dec
loop
cmp
pop
jl
fimull
daa
xor
jg
jl
and
nop
or
into
xor
pop
lods
pop
int
ljmp
pusha
rcrb
xchg
cmc
mov
cmp
leave
mov
mov
aam
sbb
jmp
jo
leave
sbb
movsb
mov
jb
bound
adc
fnsave
push
mov
sub
out
pop
sub
xchg
in
xor
decl
jle
dec
push
es
fwait
cmp
enter
inc
jl
push
call
jecxz
adc
dec
mov
dec
popf
fisubrs
loope
jp
jmp
or
or
cld
cld
lahf
loop
call
mov
fnstsw
adc
push
pop
out
adc
mov
enter
cld
rcr
xor
cmp
adc
int3
cld
movsb
aad
stos
add
int
aad
or
std
and
mov
jne
dec
in
xchg
les
jo
movb
or
xchg
xor
popf
mov
adc
push
sar
xchg
mov
add
idiv
js
jns
lock
or
roll
add
inc
inc
in
xor
dec
push
sbbb
out
dec
add
testl
andb
int
sub
popa
jle
push
flds
and
sub
lock
js
add
and
and
hlt
inc
pushf
and
dec
or
aam
xor
dec
inc
fwait
mov
add
mov
add
pop
mov
syscall
cmc
pop
aaa
popa
icebp
add
xchg
enter
fisubl
cmp
lods
and
pop
mov
test
lahf
dec
repz
je
push
addb
fmul
call
push
xor
cmp
enter
test
push
mov
xchg
in
adc
jne
xchg
sub
mov
add
es
mov
cmp
pop
cwtl
int
out
faddl
mov
cmp
dec
and
add
pop
add
add
push
cld
and
or
mov
xor
or
or
es
or
lahf
shr
mov
movsb
lds
inc
xchg
scas
xor
sbbl
push
jmp
lock
addb
orb
loop
add
push
and
or
xor
mov
or
ss
jmp
inc
icebp
sbb
sbb
rcrb
ds
pop
cli
sbb
loopne
aam
xchg
add
inc
inc
int3
mov
fcompl
mov
cli
mov
mov
sub
cmp
les
aam
mov
mov
mov
jge
xchg
test
ret
dec
pop
fildll
inc
mov
clc
xchg
push
lret
mov
or
dec
xor
push
fwait
jle,pn
push
add
add
or
cmovge
fldenv
cmp
sub
test
iret
fs
push
jecxz
lock
mov
adc
mov
sub
in
jne
out
mov
aas
sub
fildll
jo
push
rclb
loop
add
mov
iret
xor
pop
jl
dec
sub
adc
xor
push
mov
mov
mov
or
cmp
xchg
dec
push
push
call
cmp
icebp
inc
push
pop
jl
adc
push
dec
jl
fbstp
xchg
aaa
and
shll
mov
cmpsb
cmc
cmp
ljmp
dec
int3
scas
addl
subb
lcall
into
orl
xchg
movsl
call
icebp
xchg
lea
pop
add
push
lods
jno
mov
jae
fisubs
out
add
xlat
mov
cmpsl
push
pop
cmp
je
lcall
push
pop
push
loop
add
dec
sub
outsl
hlt
enter
jmp
pop
add
xor
inc
cmpb
test
and
inc
inc
dec
jge
xor
mov
hlt
movsl
lahf
inc
int3
outsl
jns
sub
xchg
lea
aam
dec
push
int
sbb
inc
adc
sbb
arpl
inc
js
sbb
inc
icebp
loop
jl
adc
inc
mov
ficoml
aaa
cmp
pop
and
mov
imul
add
adc
xlat
in
and
cld
rolb
adc
cltd
adc
sbb
add
or
cwtl
inc
pusha
xorb
mov
subb
push
or
aam
testl
daa
test
and
insb
push
movsl
pop
inc
add
xor
shlb
rcl
loop
hlt
cwtl
dec
xchg
sbb
mov
xor
sub
add
mov
mov
rolb
pusha
loope
call
hlt
test
shrl
mov
out
movsb
adc
les
in
jb
cmpsb
ret
out
mov
mov
xor
add
negb
iret
sbb
sbb
ja
push
mov
jbe
in
mov
aad
lods
dec
aad
or
adc
ss
jg
lahf
mov
mov
pop
jo
mov
mov
cld
in
mov
xorb
imul
test
add
movsl
aaa
stc
mov
lahf
cmp
mov
cmp
push
xor
xchg
or
inc
mov
arpl
arpl
test
inc
daa
data16
mov
jg
pushf
sbb
test
dec
xor
scas
fwait
push
push
add
xchg
jl
ret
add
fs
push
adc
push
mov
fstps
out
xor
fucompp
xchg
popa
and
popa
sbb
roll
pop
dec
fldt
ljmp
adc
add
nop
shrl
adc
imul
push
jle
test
mov
cs
imul
pop
jmp
inc
adc
mov
mov
das
jne
lcall
repnz
aam
dec
push
cmp
ja
inc
push
push
pop
mov
mov
outsb
mov
js
sbb
cli
lcall
mov
subl
or
mov
push
dec
xlat
xchg
orb
cmpsl
add
cli
sbb
pop
icebp
jecxz
or
popf
ret
cmpsl
sub
movb
movsl
sbb
add
fsubrl
pop
push
pushf
bnd
shrb
fiaddl
mov
int
xchg
xchg
ljmp
mov
sbb
clc
push
and
adc
or
pop
dec
out
sub
stos
lods
mov
ret
jg
lds
pop
or
shlb
stos
xorb
fstpt
jecxz
mov
fwait
xor
add
mov
mov
ret
mov
pop
cmp
sbb
jmp
outsl
mov
push
inc
int
xchg
jge
sti
insl
outsb
aaa
jmp
fstpt
sbb
iret
int
scas
loope
decl
or
mov
inc
into
stos
jnp
out
mov
mov
adc
adc
cmp
mov
mov
lds
insb
add
add
mov
fsubrs
mov
ss
pop
cld
pop
push
sub
in
mov
outsb
mov
adc
scas
sub
mov
pushl
jae
jae
or
mov
push
adc
jne
adc
or
fildll
add
fs
call
je
test
mov
sbb
pop
shlb
sti
lods
shrb
dec
adc
push
mov
jns
add
loopne
loopne
cmp
pusha
dec
jl
xchg
cmp
aaa
stos
adc
or
rcll
mov
push
movsl
js
push
xlat
ja
sbb
shrl
aad
xchg
faddl
or
adc
sahf
xchg
inc
sti
out
in
popa
mov
out
add
loop
jmp
cs
mov
adc
mov
imul
or
cmpsl
inc
mov
aad
je
adc
add
shlb
xchg
xchg
mov
adc
add
xlat
mov
test
adc
inc
and
push
cmpsl
fstpl
push
inc
test
stos
test
sbb
sub
sub
inc
in
xor
in
cmp
fcom
lds
add
adc
cmc
scas
cmc
and
test
xor
push
adc
roll
mov
jo
xor
movsb
test
int3
mov
outsl
and
bound
xchg
imul
rolb
and
les
inc
scas
push
lea
lds
test
cmp
inc
xor
adc
and
pop
enter
lods
mov
or
fsubr
test
fs
ja
cwtl
orl
or
popa
add
jmp
jmp
scas
push
aaa
add
mov
inc
or
out
mov
xchg
nop
push
jmp
dec
ljmp
test
or
mov
pop
pop
mov
popa
pop
inc
xchg
dec
pop
shl
es
sarb
sti
aad
inc
mov
cmp
xor
frstor
mov
mov
xor
jg
push
xor
xor
fcomps
std
pushl
out
nop
or
dec
xor
fmull
inc
xchg
das
push
xlat
out
popf
xor
into
dec
jne
clc
ret
mov
mov
pop
dec
pop
mov
mov
xor
jp
mov
dec
imul
shlb
adc
adc
push
stos
dec
mov
imul
sub
sbb
std
sub
sub
lods
clc
mov
adc
lea
or
xor
adc
int3
call
xorl
fcoml
cmpsl
cwtl
lahf
ljmp
sbb
sbb
icebp
shlb
cmpsl
mov
jle
push
cli
jmp
push
bnd
lock
movsl
mov
icebp
inc
or
mov
push
or
rclb
add
xchg
cwtl
frstor
mov
lret
or
cmpsb
or
sbb
aaa
ljmp
jecxz
dec
mov
std
jecxz
push
jg
inc
xchg
movsb
mov
loopne
adc
out
stos
cmp
frstor
fistl
incl
cli
scas
lods
adc
pop
push
pusha
in
pop
pop
iret
xchg
sub
loopne
cmpsl
aaa
ljmp
xor
out
cli
xchg
add
scas
ds
or
shll
lcall
adc
cmpsb
bound
ljmp
cmp
int
inc
and
mov
jmp
mov
popa
sub
or
pop
aas
std
imul
sbb
cld
outsl
lock
out
popa
sbb
jbe
push
and
test
in
or
mov
mov
add
stos
pop
orl
push
adc
fsubp
mov
sarb
jge
or
adc
mov
xchg
sbb
pop
in
or
xchg
loop
mov
loope
sbb
sub
pusha
lock
sbb
shl
negl
das
xor
inc
mov
sbb
ret
xor
and
mov
loop
loopne
int
ss
cmp
push
mov
loope
cmp
bnd
es
ret
movsl
xor
pop
add
cli
mov
push
xchg
popl
mov
inc
jbe
pop
sbb
shl
add
jns
mov
scas
ljmp
sarl
loopne
mov
pop
xchg
iret
out
push
adc
cli
aaa
sbb
inc
stc
pop
push
push
adc
cli
or
or
sub
pop
cmp
mov
lods
jo
jg
jge
js
mov
addl
pop
cli
fwait
js
mov
clc
scas
add
cmp
add
sbb
hlt
pop
mov
les
lods
sub
push
jg
call
shll
clc
inc
and
add
lds
inc
add
adc
leave
pop
mov
xchg
mov
pop
and
ffree
sbb
xchg
subb
xorb
loop
js
pop
cld
gs
adc
ret
and
es
mov
jg
dec
xor
sub
gs
pop
adc
mov
push
inc
pushf
cmp
push
mov
ds
cld
push
xchg
sti
adc
and
lahf
movsb
jmp
outsl
lcall
xor
loop
mov
push
loope
push
out
jg
leave
jns
aam
jnp
xchg
jo
test
cmp
pop
rcr
cmc
add
sarb
mov
or
imul
cmpsl
lods
mov
stos
rcl
adc
popa
sbb
sbb
insb
add
mov
jbe
ret
xchg
fildl
inc
cmc
push
pop
data16
out
sub
jo
pusha
loope
cwtl
adc
loop
mov
xchg
adc
dec
xchg
pop
ss
push
mov
jns
imul
inc
mov
fstl
add
sbb
stos
pop
out
leave
cmp
repnz
jne
imul
push
pop
xor
push
in
jle
subb
push
push
je
xchg
or
or
sbbb
push
popa
or
adc
sub
cmc
movaps
leave
out
jg
mov
jns
add
mov
rorb
pop
sbb
add
fistl
push
test
pop
fimull
xchg
adcl
inc
or
mov
mov
aas
push
push
and
repz
dec
and
aaa
add
sbb
xchg
clc
mov
push
adc
out
mov
mov
dec
shrb
jmp
loop
pop
jae
es
out
sub
shlb
clc
inc
ret
adc
nop
aam
jno
mov
loop
sarb
or
jne
call
xchg
roll
dec
or
movsb
insl
clc
push
shl
sbb
mov
or
push
push
sti
outsl
pop
xchg
dec
ret
mov
jb
mov
shlb
pop
sub
add
xor
aaa
subb
pop
popa
push
pop
mov
lock
pop
add
pop
inc
sub
lds
xor
jae
sahf
sub
aaa
aas
out
dec
cmp
add
int3
fcmovbe
stc
fmull
push
mov
dec
push
scas
inc
sub
and
cwtl
sbb
pop
inc
mov
or
ljmp
inc
push
addr16
repz
add
adc
xor
push
add
aas
adc
dec
jnp
sub
and
pop
inc
jnp
aam
and
push
mov
loop
pop
xor
jo
dec
or
lcall
daa
ja
fdivrl
push
add
add
adc
add
popf
rolb
adc
jne
rcl
pop
loopne
ljmp
mov
dec
add
adc
push
fwait
xor
and
rclb
inc
movsl
xor
inc
in
sbb
sub
lahf
inc
add
mov
fisubl
mov
xchg
int
lret
cld
xor
ja
jnp
mov
mov
out
filds
test
add
ret
xor
faddl
fidivs
mov
out
leave
inc
rcrb
push
aad
xchg
stos
xorb
call
aam
fcoml
inc
mov
sub
inc
add
jns
insb
inc
iret
test
mov
jae
add
pop
lock
loopne
and
push
mov
es
push
inc
icebp
mov
mov
add
jg
dec
adc
ret
inc
pop
dec
jecxz
sub
lahf
adc
popf
and
ja
out
test
or
in
stc
adc
sub
inc
dec
jg
or
lock
mov
dec
lcall
imul
lahf
xor
pushf
cmp
mov
test
pushl
sub
in
add
scas
mov
push
add
mov
leave
lock
xlat
sub
ds
push
popa
incl
mov
ret
enter
push
cli
das
jge
test
xchg
movsb
inc
shr
fwait
outsl
mov
and
pusha
ds
adc
cmp
mov
pop
pusha
imul
push
push
pop
loopne
sub
movsl
pop
inc
iret
jb
mov
or
inc
aad
in
mov
xlat
inc
pop
inc
xor
jl
inc
push
push
inc
in
ret
lret
movsl
lret
add
test
mov
or
ss
xchg
mov
push
jb
in
pop
lods
ja
mov
mov
int3
stos
outsb
push
hlt
in
jecxz
in
mov
cmc
lret
fildl
stos
add
cmp
xchg
mov
mov
push
xlat
adc
es
xor
test
fcoms
inc
popa
mov
clc
ret
mov
push
ficoml
mov
jnp
cmp
sub
jle
jae
push
and
inc
pop
call
jg
fmuls
cmp
das
jo
orb
sbb
ja
fldl
rolb
std
or
cld
out
cmp
cmpsb
dec
mov
mov
xchg
subb
cmp
and
les
push
sbb
xchg
cmp
pop
push
in
cli
gs
add
or
xor
dec
in
xor
je
mov
dec
cmp
xor
std
nop
mov
sub
cmp
jns
mov
popa
int3
lea
jno
pushf
inc
in
mov
and
jp
notb
adcb
cmp
xchg
push
jl
cmp
jno
daa
sbb
pop
mov
fbstp
iret
dec
push
insb
loop
dec
xchg
or
inc
and
jnp
mov
std
and
stos
mov
sahf
add
inc
mov
aaa
lock
xchg
lods
mov
sub
outsl
xor
pop
mov
inc
shll
mov
fwait
inc
cltd
outsb
sbb
fstl
xchg
lock
cltd
js,pn
adcb
outsl
xchg
pop
imul
jns
xor
add
inc
insb
in
fwait
and
lahf
enter
inc
mov
das
inc
lods
aas
pcmpeqd
jg
mov
mov
out
inc
mov
hlt
scas
leave
shrb
mov
test
stc
stos
adc
adc
sbb
adcb
lods
loopew
push
andl
pop
xlat
add
and
leave
xchg
sub
out
jb
repnz
inc
stos
iret
sbb
loopne
in
adcl
loopne
and
ret
sahf
xor
sbb
es
cmpsl
dec
inc
cmc
insl
pop
clc
mov
add
mov
adc
or
lods
inc
outsl
ljmp
and
sub
pop
sub
pop
sub
jbe
icebp
in
xchg
xchg
xchg
ds
mov
add
sub
fs
dec
push
pop
adc
mov
loop
sbb
xchg
shlb
pop
inc
lods
jle
lahf
aam
scas
fst
lahf
mov
inc
mov
std
imul
insb
pop
mov
in
fdivrp
push
jecxz
mov
dec
cmp
and
dec
gs
push
incb
pop
outsl
sub
test
lds
fcmovnb
jg
rorb
outsl
adc
jg
inc
test
pushl
cli
je
jne
pop
add
mov
and
stos
inc
sti
es
ss
rcl
cmpsl
sub
mulb
ljmp
cwtl
out
dec
mov
and
test
mov
xchg
xchg
add
fwait
or
lds
mov
ljmp
popl
js
mov
pop
or
xor
jne
popa
xor
push
xlat
fildll
dec
test
pop
mov
sbb
jns
adc
ja
in
pop
pop
sub
mov
stos
sub
iret
imull
scas
mov
ret
testb
int3
xchg
bound
xor
or
pop
lcall
xchg
push
punpcklwd
jl
inc
bound
jns
lea
repnz
ret
xchg
roll
push
call
mov
outsl
cld
andb
dec
and
or
data16
push
mov
mov
xchg
pop
fstps
loope
repz
mov
mov
or
mov
adc
pop
cmp
inc
das
mov
and
pop
xor
mov
pop
inc
rcll
je
addr16
or
cld
dec
lahf
xor
cmc
decl
mov
fmuls
mov
xchg
in
cmp
inc
subl
lods
paddusw
rclb
mov
add
push
or
insb
sbb
pop
or
inc
xor
les
push
in
aaa
lods
mov
cmp
or
cltd
add
inc
test
adc
mov
lods
dec
jb
scas
aaa
pop
cmp
lcall
addr16
add
adc
mov
call
pop
fnstenv
mov
outsl
aaa
shr
pushf
mov
jae
nop
add
incl
adc
xchg
iret
stos
stc
lods
mov
stos
aas
adc
jbe
jp
fs
movsb
xchg
mov
dec
or
mov
aad
xchg
mov
roll
cmp
dec
fdivs
lods
push
outsb
xchg
lods
aad
or
push
in
fimuls
inc
push
pop
xchg
cmc
lahf
arpl
or
jge
aaa
ret
outsl
mov
sbb
jne
pop
jb
addl
inc
sbb
lret
ja
sahf
jle
sbbl
pop
lods
icebp
sbb
push
stos
cwtl
add
lcall
mov
addl
mov
lock
outsb
cld
outsl
mov
jae
cmpsb
and
out
enter
aad
fldenv
ret
sub
in
push
mov
fdiv
mov
jg
out
movsl
xor
mov
and
gs
adc
loope
mov
mov
pop
ds
clc
loope
push
or
and
fistpll
lock
movsl
mov
clc
arpl
mov
flds
sub
jmp
idivb
dec
pusha
adc
mov
fistl
inc
cmpsb
call
or
out
fstpl
loopne
xchg
add
out
into
in
call
jo
mov
pop
fdivs
push
pop
push
outsl
out
sbb
sbb
cli
and
or
xchg
dec
jmp
clc
cli
in
fstpt
sbb
and
enter
or
rclb
out
pop
dec
xchg
or
jg
dec
push
hlt
test
sub
push
call
cwtl
test
jmp
push
pop
and
aad
test
fdivrp
mov
rol
clc
out
pop
idivl
ret
adc
sub
rolb
and
cmp
and
les
pop
cli
fwait
mov
xor
mov
xchg
add
mov
xchg
inc
push
dec
lds
in
sbb
frstor
fadds
call
loope
in
jmp
les
scas
out
loop
or
mov
out
test
ficoml
push
outsl
jmp
mov
jbe
stos
fsubrl
mov
in
push
push
mov
mov
adc
mov
xchg
fimuls
push
icebp
or
mov
sub
push
cld
push
loopne
pop
inc
push
loopne
or
push
pop
pop
lret
or
jo
sarl
cmp
mov
push
adcl
xlat
sbb
xchg
push
shll
decb
fmul
cmp
push
imul
sbb
jle
test
jl
mov
xchg
lods
xor
mov
pop
mov
cmp
call
lods
xchg
fistps
fwait
aas
adc
mov
add
scas
notb
arpl
mov
cwtl
int3
or
push
pop
dec
loope
xor
aam
sbb
pop
cld
mov
rorl
mov
mov
sub
add
add
mov
inc
pop
mov
mov
insl
jns
popa
popf
stc
adc
adc
imulb
rcl
les
int
movsl
inc
sbbl
movsl
shrb
cmpb
add
lds
or
mov
mov
je
pop
sub
pop
xchg
and
test
loope
je
sbb
xor
jbe
or
and
xor
push
xchg
xchg
mov
add
adc
pop
aam
mov
xchg
pusha
test
addr16
in
jg
dec
inc
mov
or
je
mov
int
test
icebp
pop
sub
mov
and
push
sbb
adc
lods
pushl
push
or
pop
dec
test
mov
test
ljmp
mov
leave
sbb
loope
decb
out
movsb
jecxz
sbb
inc
iret
lret
test
adc
int
ja
inc
adc
outsb
imul
jbe
insl
inc
inc
mov
mov
lods
in
mov
and
mov
push
mov
scas
or
mov
xchg
mov
cmp
add
cmp
popa
incb
fidivrs
push
rolb
sub
arpl
and
daa
in
ljmp
add
mov
mov
cli
sbb
mov
or
mov
mov
pop
mov
loope
inc
cmp
rolb
pop
and
jge
jo
insb
clc
push
cld
in
fucomp
adc
movsb
sahf
jg
inc
mov
fisubrs
jno
adc
mov
rcll
and
mov
mov
jl
call
push
lcall
outsb
in
sbb
mov
mov
sub
add
sti
or
and
xchg
inc
mov
sar
xchg
mov
mov
and
call
clc
filds
mov
daa
jo
popf
lahf
icebp
jle
sahf
ds
pushf
repnz
ret
push
mov
and
movsl
das
aam
out
adc
sub
sub
loope
loopne
push
imul
shlb
pop
out
push
int
fidivl
and
fdivrp
daa
and
xor
mov
ja
loop
sarl
ret
push
push
and
adc
dec
dec
nop
mov
nop
ret
add
mov
adc
ljmp
xchg
cltd
cmp
stos
orl
add
pop
push
jns
das
cmp
insb
xlat
push
call
inc
push
xchg
test
xchg
enter
pop
lcall
imul
dec
enter
test
jns
mov
rclb
pop
mov
out
ljmp
jbe
inc
mov
in
popf
fwait
ds
mov
mov
sti
sbb
es
mov
repnz
sub
mov
aaa
mov
leave
inc
ljmp
ljmp
pop
and
clc
negb
cli
subb
adc
test
stos
mov
and
cmp
test
adc
mov
cs
clc
fs
cmp
outsb
nop
les
xchg
sbb
loope
lret
mov
std
add
mov
aas
pop
lea
adc
movsl
scas
jnp
iret
fistl
push
cmc
or
push
mov
sbb
mov
sar
loop
pop
xor
mov
or
inc
xor
dec
pop
and
sbb
mov
data16
cmpsb
xchg
and
add
std
jg
jle,pn
push
xchg
out
lock
sub
outsb
scas
andl
jmp
lods
add
cmp
insl
addr16
stos
stos
and
std
pop
aad
test
mov
mov
fists
inc
jne
int3
decl
pop
mov
imul
xchg
cmp
mov
jp
lcall
sahf
loopne
lock
sub
cmc
insl
xor
lcall
jge
mov
push
test
out
mov
sti
pop
mov
and
or
dec
push
cltd
dec
cld
pop
fdivr
push
icebp
aas
xlat
fwait
xor
mov
stos
add
rcrl
inc
cld
das
sub
mov
push
filds
adc
sub
inc
pop
dec
lock
pushf
outsl
mov
inc
outsl
popa
sti
mov
adc
adc
jno
add
ret
jne
stc
mov
mov
mov
sarl
inc
es
push
push
sub
bound
fsubr
mov
ljmp
addr16
mov
test
jbe
mov
mov
inc
stc
cltd
push
std
nop
push
sbb
lods
jo
mov
fsub
std
inc
xor
loopne
xchg
pop
xchg
dec
xchg
cmp
xchg
dec
fs
mov
cmpsl
leave
mov
xchg
shrl
cwtl
rorl
cli
or
or
xor
lahf
incb
mov
fildll
mov
push
jnp
add
add
jbe
push
pop
adc
test
mov
inc
les
std
mov
bsr
push
pushl
loopne
rorl
cmp
iret
pushl
and
out
sbb
outsb
loope
stc
call
jl
arpl
rclb
std
lcall
or
or
ss
icebp
sub
mov
add
push
lds
jle
imulb
push
cmp
dec
gs
inc
cli
loopne
mov
and
shl
mov
int
leave
mov
pop
loope
pop
pop
pop
add
sbb
sbb
lock
add
outsb
arpl
das
jge
or
not
adc
clc
xchg
mov
add
mov
rorb
dec
fcmovnbe
xchg
push
out
mov
mov
add
jg
dec
lea
add
xchg
or
mov
insl
add
sub
sti
push
add
mov
popf
inc
jl
cmc
jbe
xor
xor
inc
inc
insl
ret
or
add
and
add
stos
inc
inc
inc
mov
aaa
xorb
out
xchg
rcll
push
sub
loope
or
inc
loope
mov
push
jo
push
mov
jbe
lods
dec
push
cmp
jo
jmp
int
or
push
sbb
fildll
jo
pusha
aam
sub
repz
xchg
cmpl
xor
lret
rol
out
movups
clc
xor
dec
sarl
bound
rcll
testl
xchg
pop
pop
jbe
xchg
sub
scas
loop
sbbl
cmc
jae
pusha
or
scas
xlat
push
faddl
jno
xor
mov
adc
jmp
push
add
adc
cs
mov
and
outsl
inc
dec
or
out
pop
fwait
mov
cmovs
push
mov
popf
jno
pop
mov
subl
xor
rorb
inc
loope
sub
psrld
lcall
dec
in
cmp
outsl
enter
cmpsb
imul
test
scas
leave
sub
popf
stos
dec
cwtl
sbb
outsl
shl
mov
test
daa
sbb
mov
xor
adc
push
cmp
add
sbb
push
jge
mov
push
pop
inc
xchg
mov
xchg
lods
mov
shr
loopne
in
aad
jl
inc
lahf
push
sbb
stos
not
push
or
adc
nop
ljmp
add
imul
in
lret
fldl
lock
and
mov
push
inc
or
sub
in
fadds
insb
xchg
popa
in
repz
test
ja
pop
adc
fmul
adc
mov
mov
mov
mov
sbb
push
pop
movsb
jge
stos
adc
loopne
mov
mov
sar
add
sti
mov
sub
std
pop
mov
push
subb
push
outsl
xchg
jle
inc
test
push
add
push
mov
je
add
inc
push
pop
mov
push
jmp
add
ljmp
outsl
fcoms
mov
int
add
add
ja
stos
mov
sti
and
es
sbbl
aam
sbb
ss
loope
adc
xor
jle
std
and
lret
push
out
dec
fwait
push
lret
iret
xchg
jg
or
leave
cmp
adcl
ret
mov
push
rorl
test
xchg
push
adc
andl
push
js
push
in
adc
xor
rorb
inc
lea
push
push
inc
push
nop
jge
scas
mov
add
mov
pop
daa
add
out
std
mov
cmc
xor
and
and
jns
loope
repnz
push
mov
xor
and
pop
daa
push
xlat
push
add
xchg
adc
dec
pop
mov
pushf
out
test
fnstsw
loope
ds
ja
mov
movsb
out
mov
sub
inc
rorl
jp
mov
clc
ja
mov
mov
cmp
or
out
push
mov
and
ljmp
push
add
stos
mov
adc
jmp
ret
push
or
ja
repz
push
fdivs
test
cwtl
rorl
jmp
dec
lods
mov
cmpsl
mov
push
pusha
jl
psadbw
sti
push
and
jl
inc
loopne
or
jnp
cmc
mov
xchg
add
xchg
pop
test
popa
ret
nopl
lock
and
pop
shll
test
sub
imul
rorb
jl
movsl
dec
fwait
mov
adc
lcall
xchg
int3
ret
fmuls
cmp
test
cwtl
insl
test
mov
repz
ret
cmova
add
pop
divl
pop
adc
pop
and
inc
mov
adc
xchg
dec
popa
and
lcall
sbb
lahf
add
pop
add
setb
clc
jmp
push
mov
mov
lret
mov
pop
add
inc
ret
test
sub
mov
out
cli
mov
popf
cli
cmc
das
stos
lods
sub
rorw
fisttps
pop
jne
test
xchg
sub
mov
rol
cli
sbbl
loopne
pop
jmp
dec
sub
mov
je
mov
mov
mov
mov
cmp
sub
add
adc
addl
fdiv
aad
cs
int
mov
cmpsb
sarb
push
pushf
loopne
push
roll
xor
push
andb
xchg
mov
test
jle
cmpl
outsb
pop
mov
aam
sub
cltd
fistpll
push
hlt
push
jmp
jp
jnp
mov
insl
and
push
fiadds
mov
xlat
lret
incl
rcrl
in
loope
cmpsl
sub
push
and
push
mov
cmp
jo
mov
add
shll
insb
or
adc
pop
sub
test
ja
cmp
xchg
or
mov
and
sub
sbb
ffreep
mov
push
sub
dec
clc
subl
pop
xor
sbb
mov
adc
adc
test
push
jmp
mov
cld
adc
or
add
les
sbb
orb
sti
fiaddl
call
inc
mov
add
pop
hlt
pop
stos
sbb
inc
loopne
push
adc
mov
lret
or
sbb
aaa
sub
les
sbb
inc
jns
add
jp
test
test
jp,pt
js
dec
push
scas
sti
sbb
pop
nop
and
pop
aad
sbb
mov
adc
add
cmc
cmp
mov
loope
incb
cs
aas
and
fcmovne
mov
rclb
mov
idiv
inc
mov
add
and
pushf
ljmp
in
stos
icebp
adc
pop
addr16
pushf
icebp
add
mov
call
fwait
adcb
lock
push
adc
sbb
push
ftst
adc
inc
cmp
xor
or
pop
add
fcmovbe
call
stos
call
fsubl
loop
ss
aad
leave
mov
jne
lret
jp
repnz
add
or
jns
inc
lock
jp
jae
or
inc
push
dec
in
call
bswap
pop
inc
icebp
pop
mov
daa
adc
ja
adc
pusha
add
icebp
jecxz
mov
ds
add
mov
repnz
push
push
pusha
add
sahf
addr16
subb
push
addr16
cmpsl
inc
dec
lcall
insb
mov
mov
xchg
repnz
push
sbb
out
jnp
sbb
add
notl
test
fwait
out
mov
jge
sbb
sbb
add
xchg
add
filds
push
sub
scas
mov
xor
mov
or
inc
xor
rcll
xchg
out
xchg
xchg
jmp
or
cmp
pushf
cmp
ret
lods
add
ljmp
xchg
sbb
sbb
es
xchg
shlb
inc
imul
test
inc
in
int3
pop
aas
mov
mov
ret
aaa
fs
adc
aaa
push
pop
movb
inc
pop
fcoms
aad
fildll
inc
sbb
jbe
jg
popa
pop
inc
inc
jp
or
mov
shlb
add
cmp
outsb
iret
aaa
jnp
insl
push
call
add
mov
sbb
xor
mov
mov
pop
jmp
les
dec
mov
or
pop
ljmp
push
jp
mov
sbb
push
dec
fbld
inc
dec
fs
inc
sbb
dec
imul
mov
iret
xor
or
or
aad
mov
pop
stos
stos
dec
lock
mov
mov
inc
inc
pop
les
clc
outsl
hlt
and
aas
pinsrw
cmp
stos
xchg
call
pop
mov
push
sub
stos
mov
jmp
push
incl
lods
repz
cmp
push
rorl
sbb
outsl
call
icebp
pop
test
sbb
push
loop
into
pop
jmp
xor
ljmp
xchg
dec
addl
cmp
cmpsl
push
add
cld
imulb
cmp
out
in
cld
movsl
rclb
adc
out
out
or
bound
and
push
cs
in
popf
sub
shrb
ja
jg
aad
test
push
cmp
andb
filds
cmp
xchg
sub
sbb
xor
addb
pop
mov
push
fidivrs
sbb
aaa
push
adc
lret
sub
das
cmp
push
xor
jmp
or
nop
pop
mov
lock
pop
pop
call
call
inc
xor
fisubl
dec
mov
testl
xor
jmp
push
push
jbe
sub
shlb
cmp
pushf
pushf
dec
iret
jge
sub
or
jle
dec
loopne
fidivrl
jecxz
enter
inc
inc
fdivs
in
sub
xor
sub
cs
mov
adcb
push
pop
fsts
mov
fiadds
add
arpl
das
les
lahf
add
loope
fmull
cwtl
add
add
mov
adc
push
dec
shrb
mov
ja
add
rol
push
mov
bound
add
jmp
xchg
ret
daa
xchg
add
add
add
mov
adc
xor
outsb
sahf
push
ljmp
js
mov
adc
andl
je
xchg
jp
adc
scas
jbe
adc
rclb
add
or
mov
lods
mov
inc
es
loope
xorb
inc
fdivrl
es
aad
out
ficoms
and
xor
cmp
repnz
scas
jecxz
sub
fistl
xchg
rclb
iret
filds
push
pop
je
xchg
daa
clc
push
bound
std
decl
sbb
gs
jae
xchg
shlb
stos
aaa
mov
or
addr16
inc
out
sbb
orl
daa
subl
push
jmp
outsb
lds
ret
or
push
nop
dec
mov
movsl
push
pusha
inc
outsl
hlt
push
jmp
and
or
lret
and
or
xchg
jg
mov
test
popf
mov
call
and
cmc
decl
iret
push
jne
adc
jg
mov
repz
lcall
lods
and
pop
cwtl
lock
mov
xchg
xchg
cmp
mov
mulb
dec
lret
das
hlt
jmp
push
jae
sub
fld
mov
inc
andb
mov
pop
incl
hlt
pop
and
and
sbb
inc
mov
pusha
jg
or
xorb
in
sbb
mov
jmp
push
out
leave
iret
adc
aaa
and
inc
ss
sarb
pop
sub
push
and
pop
push
loop
or
decl
mov
sub
xor
dec
rclb
mov
push
mov
lcall
xor
shll
pusha
aam
adc
hlt
pop
jg
testb
in
cmovs
mov
in
mov
sub
mov
scas
dec
mov
ds
lock
mov
ficoms
out
sbb
pop
ljmp
push
or
and
cmp
pop
aas
ret
pop
orb
adc
and
sbb
adc
pop
inc
xchg
ljmp
imul
push
add
lods
mov
or
xchg
cmp
das
dec
add
faddl
jg
or
mov
and
xchg
les
xorb
aam
or
cmp
push
mov
push
adc
andl
negl
add
fcomps
xor
adc
jne
ljmp
movsb
inc
lret
pop
stos
and
sbb
daa
popf
outsb
sbb
lea
mov
xor
cmp
cmc
pop
push
inc
orl
dec
xor
push
inc
xor
add
push
not
aad
cld
mov
add
js
movsl
cmpl
loopne
clc
clc
dec
inc
cmp
mov
rorl
call
lahf
xchg
mov
lea
sbb
adc
and
fldl
or
pusha
adc
jb
fisubs
xchg
cld
repnz
in
stos
dec
push
mov
add
fwait
mov
icebp
scas
movsb
sub
dec
sbb
ret
xchg
adc
sbb
sahf
cmc
test
fldt
add
fidivs
cltd
loopne
incl
or
jle
imul
mov
shrb
push
sub
loopne
inc
lods
icebp
cmp
stos
pop
xchg
mov
aam
addl
add
dec
add
lods
inc
sbb
ss
adc
xlat
jno
pop
pushf
bound
adcl
mov
sbb
sub
popf
mov
cltd
sbb
dec
cltd
sbb
push
ja
or
aas
popf
into
outsl
pusha
adc
or
sub
out
add
cmp
insb
icebp
or
sub
sub
xchg
fisttps
add
mov
pusha
adc
out
inc
cmp
fcmovnbe
faddl
cmp
test
inc
mov
rcll
sub
jbe
adc
dec
mov
ret
mov
into
rcll
inc
mov
pusha
or
xchg
jb
and
stos
cmpsb
add
cmc
outsl
lea
jecxz
lret
adc
mov
and
adc
sub
out
mov
in
or
sub
mov
inc
int3
pop
or
test
and
sbb
ret
fdivr
or
add
add
dec
inc
or
shlb
pop
mov
scas
or
adc
jae
loope
push
ret
mov
cmp
pusha
or
push
inc
push
add
orl
xchg
mov
inc
scas
add
loopne
sub
xorl
test
mov
inc
rorl
push
xchg
add
fcomp
push
and
mov
adcb
repnz
jp
pop
or
cld
rclb
negb
add
push
mov
and
call
call
inc
pop
sub
jecxz
test
push
add
inc
pop
push
cmp
sub
sbb
add
adc
pop
sahf
push
lock
je
dec
inc
int
in
or
lock
cwtl
fildl
fcmove
adc
sbb
cltd
add
into
imul
dec
inc
mov
sub
add
decb
mov
or
sbb
mov
dec
insl
lods
sahf
je
out
lock
or
adc
push
adc
out
test
movl
imulb
or
aam
rcrb
inc
add
or
push
adc
mov
mull
add
mov
mov
lahf
icebp
add
sbb
or
je
inc
adc
push
aas
push
enter
push
mov
ret
jle
test
lea
push
ljmp
les
mov
or
cmp
xor
and
push
inc
add
sub
cmp
cmp
jle
push
sub
sbb
std
or
fisttpl
push
inc
jge
mov
xor
fcompl
fsub
mov
es
xchg
lock
sbb
xorb
add
mov
add
push
ljmp
push
add
add
roll
subb
mov
inc
adc
push
jb
arpl
mov
mov
and
adc
rol
adc
xor
in
adcb
mov
xor
and
xchg
push
aam
lret
push
cltd
mov
setne
sarb
ret
add
shrb
cld
lcall
aaa
xchg
add
mov
sbb
xchg
clc
ljmp
push
addr16
cmp
repz
xlat
push
add
test
aam
sbb
popa
pusha
adc
fs
adc
pop
loopne
flds
sub
outsb
push
xchg
lret
aas
mov
pop
dec
xor
cmc
decl
mov
inc
mov
jge
lahf
call
cwtl
cmp
mov
xor
pop
outsl
loope
bswap
inc
xor
fidivl
or
test
and
dec
icebp
ficomps
add
adc
mov
rcrl
push
js
pop
mov
movsl
xor
and
mov
mov
pop
clc
ret
in
dec
rorb
lea
pushf
push
or
jns
sub
ja
and
lcall
adcb
xchg
and
dec
and
sub
out
shl
push
jle
push
xor
jmp
cld
push
leave
loope
out
test
dec
push
jp
mov
test
push
xchg
insl
adc
fisttps
decb
add
mov
and
hlt
xchg
add
leave
ljmp
aad
in
mov
xor
test
incl
xchg
aas
pop
add
jg
fmul
div
add
mov
add
pushl
shll
add
pop
movsl
add
jg
cmpsl
push
cltd
shll
and
mov
inc
jmp
fbld
cltd
std
inc
mov
adcb
icebp
adc
les
xchg
leave
arpl
mov
pusha
inc
mov
sbb
jmp
sbb
aad
dec
into
jg
aam
lret
call
cmp
jmp
jb
lahf
jmp
sbb
ret
mov
fbstp
push
and
cmp
cwtl
mov
repz
and
adc
push
pop
and
lcall
stc
inc
aad
mov
add
add
xor
pushf
adc
notb
movsl
bound
add
and
inc
mov
rolb
cld
ja
les
scas
jnp
and
mov
clc
pop
rorl
inc
notb
pop
loopne
jns
or
and
aam
sub
hlt
xchg
jp
clc
sbb
lods
sub
cmp
add
jbe
sub
or
iret
adc
cs
sbbb
adc
nop
mov
adc
js
aad
inc
stos
clc
add
mov
push
mov
and
inc
xor
push
cmp
rclb
pop
add
or
mov
fldcw
mov
push
pop
or
add
adc
dec
mov
add
jle
cli
cmovbe
push
xor
pusha
cmp
mov
aam
or
clc
and
push
rolb
sarl
data16
and
insb
add
data16
or
addb
push
sub
add
ret
repnz
and
pop
pop
xchg
inc
js
add
sbb
jmp
cmp
add
push
mov
jbe
js
cmp
xor
push
mov
xchg
shrl
mov
enter
negb
scas
dec
cmp
xor
jnp
je
and
or
stc
mov
cwtl
and
test
cmovl
clc
stos
jmp
rcl
or
lods
and
mov
add
and
inc
or
mov
rcrb
sar
inc
and
dec
xor
das
aaa
movsb
mov
or
push
and
or
mov
pop
adc
fcmovnb
jmp
rcr
and
xor
loope
lret
ja
sarb
or
mov
loope
add
roll
stos
pop
push
loope
sar
inc
cmp
lds
xor
js
int3
jmp
mov
xchg
mov
mov
xchg
cltd
nop
push
rorb
pop
or
in
jb
adc
and
or
in
out
pop
lret
cmpxchg
test
out
das
call
mov
call
mov
jl
iret
lds
push
xchg
out
xchg
add
daa
or
stos
or
adc
adcl
xchg
xor
sub
adc
push
adc
add
aas
inc
out
mov
ds
add
adc
lret
test
add
rorb
fmuls
dec
lret
pushf
fnstcw
loopne
xlat
mov
pop
ficoms
sub
adc
sub
cmpsb
mov
xchg
pusha
sub
daa
adc
adc
mov
inc
inc
int3
aas
xor
add
bound
int
jno
cmpsl
adc
in
add
xchg
daa
jns
negb
cmp
daa
and
jae
inc
or
cltd
cmp
push
cmp
insl
hlt
daa
xorl
lods
mov
and
das
fcoms
fidivrl
mov
sub
into
filds
int
sub
fs
cmpsl
push
add
mov
cmp
cltd
push
inc
roll
xorl
jbe
scas
sub
mov
adc
in
adc
ss
sbb
sub
ret
rorb
push
rcll
lods
mov
inc
pop
or
pop
stc
pusha
add
xchg
fs
cmpl
icebp
out
push
add
jp
and
fadds
xor
shrb
cli
inc
sarb
adc
inc
add
inc
aaa
rcll
and
cld
sbb
ja
sbb
mov
fisubl
lret
mov
adc
stos
mov
mov
inc
es
add
add
xchg
push
add
sub
loopne
shlb
inc
in
mov
mov
add
push
gs
or
call
cli
outsl
pop
jl
aaa
push
mov
and
add
incl
inc
sbb
div
ret
pop
add
mov
sub
stos
stos
addl
mov
cmp
jecxz
inc
cld
pop
jne
stos
pop
stos
enter
test
sbb
mov
pop
movsl
add
or
or
adc
hlt
fistps
icebp
inc
std
xor
mov
hlt
call
incb
and
xor
fadds
xchg
push
sub
insb
add
pop
orl
repz
mov
jmp
stc
inc
jp
mov
jl
add
js
pop
cld
iret
mov
ret
dec
push
addr16
je
insl
sar
test
orb
addb
repz
xchg
ds
jo
fbld
pop
cli
testb
xchg
cmpsl
push
add
inc
mov
inc
imul
mov
mov
test
loope
fucomi
leave
pop
cmc
dec
pop
imul
mov
fisttps
mov
out
mov
jl
dec
jl
cli
cld
dec
add
cmpsl
inc
sbbl
mov
jecxz
xchg
push
add
sub
pop
cli
pop
mov
loop
jg
pop
add
pusha
add
inc
sub
xchg
cmp
call
in
les
nop
sbb
insb
adc
outsl
imul
add
imull
aaa
push
jl
push
xchg
xor
shr
movsb
and
loope
lock
inc
add
stos
jge
or
ljmp
xchg
mov
push
pop
xor
mov
testl
dec
shrb
jne
cld
shlb
out
jmp
push
xchg
icebp
add
mov
or
or
push
add
out
add
jne
cmp
sbb
add
aad
or
lds
add
mov
add
lods
push
outsl
add
jnp
mov
and
adc
ret
push
lea
or
or
mov
fcmovnu
and
and
into
xchg
fisttpl
adc
sahf
mov
int
or
out
test
push
push
cmpsb
daa
add
inc
push
push
pop
mov
ja
and
add
or
cltd
sub
sub
or
jo
outsl
aad
cmp
test
and
add
push
mov
adc
add
xor
dec
ret
insl
mov
cmp
mov
sub
aad
cmp
add
loop
adcl
add
jge
xor
in
aaa
in
cmpb
sahf
ds
in
push
push
push
jle
mov
jge
add
push
nop
pop
or
add
lods
hlt
int
test
repnz
add
mov
push
call
ret
xor
mov
je
xor
inc
mov
insb
mov
fdivl
cld
xchg
sbb
push
push
repz
mov
mov
loop
jecxz
jnp
mov
fiadds
push
add
jb
outsl
push
mov
sub
add
call
aaa
push
adc
dec
adc
xor
mov
pop
das
mov
stos
filds
movsl
std
add
stos
adc
xchg
andb
in
xor
fcmovne
std
pop
jg
jecxz
sub
jmp
xor
std
mov
adc
icebp
mov
cmp
sub
out
jb
fcoms
add
jl
jg
or
jno
sub
inc
and
jne,pt
mov
jp
ljmp
add
xchg
adc
add
lcall
jae
jmp
jp
fsub
or
cmp
or
mov
ds
adc
fcoms
in
cmpsl
sub
pop
icebp
mov
adc
mov
mov
roll
adc
lds
stos
call
xor
lods
push
clc
add
push
sti
push
push
test
mov
in
sbb
ss
inc
loop
mov
add
aad
cmpsb
aaa
fcoms
jl
aaa
mov
mov
mov
or
ljmp
jecxz
pop
sub
incb
test
clc
push
or
rolb
xor
mov
inc
dec
add
or
pop
mov
xchg
or
cmp
xchg
mov
adc
push
orb
js
and
outsl
adc
outsb
std
adc
andb
push
lods
inc
jbe
inc
cmp
mov
aad
movl
cmp
lcall
adc
mov
shr
adc
xor
repnz
xor
stos
call
addb
sub
testb
popa
inc
pop
push
sub
addr16
data16
es
xchg
hlt
aaa
and
test
and
pop
inc
out
cli
ret
sub
cltd
cmc
popf
xchg
lods
stos
mov
arpl
decb
out
cmp
cmp
roll
xor
out
divl
dec
push
cmc
adc
add
sbb
pushf
push
xor
adc
int3
xchg
ud2
rorl
pop
cmp
dec
push
in
add
push
mov
pop
jnp
jbe
dec
les
adc
push
in
push
xchg
popa
xor
bound
clc
jle
adc
inc
ret
sbb
add
stc
movsb
cmpsl
mov
cmp
or
insb
in
sbb
dec
add
inc
mov
adc
pop
stos
ja
roll
cmpsl
mov
imul
xor
push
jne
fsts
test
or
movsb
cmp
xor
out
mov
imul
movsb
lcall
jmp
pop
mov
lds
dec
pop
sbb
xchg
push
lcall
js
inc
int
cltd
inc
dec
jnp
sbb
pop
rcll
dec
push
add
incb
int3
xorl
mov
loop
les
rcrl
icebp
xchg
cli
aad
stc
xor
js
out
pop
and
movntps
or
xchg
sbb
test
dec
hlt
sbb
stos
push
loopne
sub
mov
out
lret
out
or
mov
mov
adc
mov
loopnew
add
cs
loopne
sbb
jnp
and
dec
add
xor
xor
xchg
xchg
ret
sub
leave
cli
loope
imull
xor
fs
inc
fildll
and
add
mov
lahf
add
scas
testb
inc
lods
add
aas
nop
and
sbb
movsl
hlt
mov
inc
or
lock
sbb
xchg
sub
xorl
jne
data16
adc
and
pop
and
orl
push
dec
adc
jnp
jl
jge
imul
xchg
xor
mov
xchg
cmp
inc
mov
int
lret
aas
jle
lcallw
push
and
daa
pushf
sub
pusha
test
mov
ss
add
push
jle
mov
inc
loopne
push
add
outsb
int
mov
icebp
adc
ss
jbe
dec
sbb
pop
push
in
pop
adc
negl
sahf
aas
in
mov
inc
in
sbb
mov
push
enter
std
mov
adc
mov
inc
into
adc
cld
mov
xchg
inc
jl
stos
sub
movsb
jecxz
xor
std
sbb
incl
dec
inc
sbb
mov
jbe
push
push
mov
sti
mov
insl
mov
cld
pop
add
pop
jle
or
adc
sarb
push
or
imulb
mov
dec
leave
push
les
test
sbb
fsubs
sbb
dec
pop
push
cs
mov
or
and
mov
pop
jno
mov
adc
mov
ret
dec
push
mov
fistps
xchg
lcall
xor
jmp
and
sub
jecxz
inc
aam
test
push
scas
lret
sbb
mov
xlat
mov
cmp
negl
fadds
into
pop
mov
aaa
push
shlb
mov
scas
xchg
sub
cli
mov
cmp
sbb
jmp
lds
lcall
add
cmp
test
ds
aam
xor
cmp
movsb
inc
sti
mov
jne
mov
jge
imul
mov
xchg
dec
sub
faddl
aaa
xor
lods
lods
sub
mov
pop
clc
outsl
cld
sub
inc
add
mov
aaa
xor
push
cmovb
divb
scas
adc
mov
repnz
insl
jg
fistpl
enter
sub
clc
in
sub
dec
mov
sub
mov
cld
outsl
icebp
test
lods
jl
js
mov
sbb
inc
jl
sbb
jmp
daa
sbb
and
in
push
mov
mov
lret
mov
inc
mov
dec
mov
xchg
or
jmp
sbb
push
dec
mov
icebp
das
std
or
push
push
cli
xchg
jg
xlat
incb
mov
jmp
dec
push
daa
mov
jns
lahf
xchg
cld
and
cmc
jo
fmulp
fcoml
adc
or
pop
movsb
lea
les
ret
ljmp
pop
cli
inc
pop
test
cmp
adc
dec
adc
or
pop
push
call
push
pop
and
adcl
add
cmp
out
hlt
cmpsb
adc
test
jb
push
lock
and
fisubl
mov
jnp
xchg
flds
popf
dec
push
xor
fcoml
mov
pop
in
pop
add
roll
sub
in
pop
fsubs
shl
xorb
add
pop
adc
inc
push
daa
shll
sbb
dec
xor
sub
xor
push
ficoms
xchg
into
or
rcrb
adc
popa
add
cs
sbb
xchg
push
mov
adc
xor
add
pop
addr16
or
shll
sarb
lock
push
xlat
stc
add
lods
dec
mov
dec
pop
int
lcall
cld
fcompl
and
sti
or
sub
bound
pop
dec
lock
ja
insb
out
bound
or
inc
jo
pop
outsb
ret
testb
sbb
adc
adcb
mov
push
add
mov
mov
add
pop
cld
xchg
cmp
mov
mov
and
dec
mov
mov
arpl
scas
fnstcw
out
inc
cmp
sbb
cmp
popa
sbb
dec
push
jno
sarl
push
mov
pop
xor
or
nop
dec
adc
xchg
and
cmp
mov
xor
mov
icebp
adc
fwait
inc
mov
jne
inc
aam
xor
dec
mov
cmp
aad
and
fisttps
sub
xchg
jmp
or
sbb
sbb
xrelease
jae
das
ds
icebp
ffree
sub
cmp
mov
mov
add
call
sbb
mov
add
test
clc
lock
mov
enter
fwait
adc
lods
loope
pop
adc
or
lcall
and
fwait
push
fstp
jp
mov
jae
push
loopne
nop
orl
sbb
test
les
lret
adc
and
outsl
int
aaa
xchg
mov
mov
add
popa
push
ret
mov
mov
add
and
or
inc
into
testb
push
xor
mov
xchg
ret
mov
push
daa
loope
loop
xor
bound
ljmp
pusha
jp
adc
xchg
or
sbb
dec
lds
lock
loope
enterw
in
aad
data16
and
dec
insb
dec
dec
sub
sub
mov
outsb
fs
les
push
adc
mov
shlb
movups
dec
sbb
addb
and
mov
incl
push
mov
add
adc
test
das
pop
dec
mov
adc
and
inc
sbb
mov
dec
add
adc
mov
and
dec
and
inc
mov
and
addb
and
add
and
jnp
fisttpl
push
mov
inc
and
adc
dec
and
fisttpl
and
inc
addb
add
dec
mov
push
xor
pop
fstpt
test
and
mov
subb
add
add
mov
insl
dec
inc
xchg
add
int
insl
and
adc
daa
dec
inc
fucomi
outsb
jne
add
add
in
pop
fisttpl
mov
or
or
ss
fimull
test
inc
dec
and
in
jae
adc
inc
lods
fistpl
fisttpl
or
push
imul
or
xchg
imul
adc
or
pop
imul
pop
sub
push
jne
rcr
dec
leave
push
pop
mov
imul
jb
and
in
out
jmp
inc
add
outsl
inc
nop
andb
sbb
pop
add
adc
push
push
int
sub
lods
je
sti
and
dec
and
lods
mov
fiaddl
or
pop
jmp
imul
sub
mov
cmp
add
and
ret
pop
mov
pop
inc
sub
mov
adc
or
arpl
push
rorb
sarl
jp
ret
pop
loope
cwtl
cmp
and
shlb
and
insl
lods
loopne
test
test
jp
inc
inc
imul
mov
push
adc
or
and
xchg
sub
add
pop
jae
pop
and
sub
inc
fistpl
sub
sbb
lods
push
push
inc
jp
push
inc
imul
or
inc
imul
js
lcall
cmp
mov
clc
jae
jmp
nop
arpl
daa
rclb
shll
inc
filds
std
inc
sub
test
mov
or
dec
sub
sbb
aas
sbb
ss
rorl
loop
xchg
cmp
stos
push
and
fcomps
sub
jge
imul
inc
cs
imul
int3
push
and
or
inc
jge
xor
xor
andb
insl
fsts
inc
mov
imul
rcrl
mov
outsl
daa
mov
rcrb
movsb
or
adc
push
xchg
pop
dec
sarl
mov
pop
mov
test
imul
in
adc
aam
push
mov
and
rorl
imul
sbb
adc
pop
sub
shrl
iret
out
push
sub
pop
xor
cs
rorb
mov
clc
scas
jo
sub
das
dec
call
lods
insl
xchg
xorb
or
int
sbb
cmp
push
mov
sbb
sarl
mov
push
push
pop
adc
mov
mov
out
outsb
loopne
add
pop
jmp
nop
push
lea
sub
mov
mov
fistl
adc
xchg
rorl
push
sbb
gs
data16
xchg
sbbb
add
mov
xlat
aam
jle
add
jmp
inc
and
xchg
xor
repnz
imul
push
mov
and
push
out
sbb
nop
aam
adc
jo
fcoml
shrd
xchg
test
mov
scas
out
push
sbb
xor
push
mov
sub
loopne
in
pop
mov
or
loopne
scas
lret
cmpsb
imul
mov
cmpsl
lret
cmp
out
lahf
adc
fwait
jge
pop
xor
sbbb
inc
jae
xor
xchg
cmp
or
add
push
inc
jae
cmp
mov
jb
or
dec
dec
cmp
pop
out
sub
mov
fisubl
in
stos
pop
outsl
rcrl
in
shlb
fcmovb
fistps
adc
or
pop
push
test
or
mov
aam
cmp
sti
xchg
cmp
push
shll
int
adc
or
rcr
push
nop
mov
adc
mov
dec
inc
roll
leave
sub
dec
xchg
and
pop
pop
std
xor
mov
shlb
jmp
cmp
xor
lock
push
xchg
push
mov
test
pop
cmpsb
xchg
mov
mov
or
and
mov
js
mov
cs
mov
movsl
mov
sbb
sbb
or
adc
test
dec
jg
inc
imul
adc
cmp
push
dec
int
pop
div
xor
mov
push
mov
lcall
lcall
mov
mov
lods
test
fisttps
popa
adc
sbbl
nop
xor
jmp
and
or
out
dec
cmp
scas
sub
in
dec
inc
arpl
movsb
adc
pop
adc
dec
push
push
arpl
mov
mov
out
cmpsl
out
dec
mov
cmp
lcall
test
mov
pop
add
xchg
imul
adc
fildll
dec
pop
or
push
test
cmp
iret
inc
inc
add
sbb
sbb
xchg
add
out
lods
adc
mov
out
les
pop
pop
fstpt
xor
ss
xor
sub
or
mov
mov
out
int
popa
jbe
dec
adc
push
lcall
loopne
rolb
sbb
push
mov
shlb
pop
pusha
shlb
jb
cmp
pusha
aas
mov
lcall
int
cmpsb
imulb
cwtl
cmpsb
outsb
sbb
pop
scas
and
insl
movsl
ret
inc
add
lods
or
xor
inc
or
or
push
rclb
ficompl
dec
add
insb
jbe
data16
std
adc
xor
lret
cmpsb
mov
xorl
mov
inc
and
jbe
adc
lods
icebp
les
je
push
pop
addb
pop
xor
hlt
lds
cltd
xor
addr16
div
ret
pusha
xor
inc
jg
mov
shll
mov
sbb
int
iret
cs
mov
xchg
or
outsl
notl
bound
push
mov
lcall
dec
mov
lret
jae
pop
cmp
xor
bound
rcrb
and
mov
sbb
repnz
pop
adc
xchg
or
xor
aad
or
js
pushf
ret
loopne
in
pop
fisttps
in
orl
dec
mov
pop
xchg
imul
and
inc
imul
and
es
xor
daa
sbb
xor
scas
add
mov
xchg
inc
sbb
jnp
or
sbb
mov
cs
jl
cmpsb
inc
fistl
ja
and
mov
inc
xchg
push
mov
mov
pop
cmpsb
lods
inc
adc
jne
and
cltd
js
xor
sub
cmp
lret
xor
or
fs
popf
lahf
mov
or
cs
or
outsl
jle
into
rol
test
popa
push
iret
sub
test
outsb
nop
popf
pushf
fsubrs
out
fcomps
mov
mov
mov
scas
fs
rcrb
pop
lods
mov
sub
shl
cmp
push
or
push
xlat
sbb
jb
sub
push
push
mov
cltd
pusha
aaa
push
add
xor
lahf
push
jge
or
bound
xchg
cmp
xor
int
push
mov
fiadds
enter
in
pop
mov
scas
or
andb
popf
mov
jnp
pop
adc
bound
ds
aad
dec
les
cmp
xchg
sbb
xor
mov
jge
mov
adc
std
dec
push
lods
push
stos
pop
cmpsl
int3
and
lock
sahf
in
std
outsl
inc
pushl
out
mov
mov
adc
or
cmp
mov
cli
cmp
in
test
add
pop
scas
sar
mov
test
test
outsl
incl
pusha
push
mov
add
das
sub
sbb
and
push
jl
decl
mov
stc
aad
fildll
aas
pop
add
and
adcl
jns
cmc
xchg
cmc
stos
ss
sbb
out
in
jg
jp
xchg
decl
roll
fsubl
dec
jg
adc
dec
mov
es
pand
dec
lcall
hlt
insb
imul
fs
or
mov
incl
cwtl
dec
add
cmp
sub
out
bound
dec
mov
push
add
jb
sbb
loop
outsb
lods
dec
testb
mov
sarb
and
jnp
sub
jl
push
add
push
jmp
xchg
fsubs
movsb
jne
pop
add
cmpsl
filds
xchg
xchg
xor
jmp
inc
outsb
mov
adc
jmp
or
loope
xchg
add
push
ljmp
cmp
add
inc
aam
cli
mov
ficoms
push
loopne
jno
pop
test
test
jb
aam
outsl
cwtl
sub
pushl
aad
fxch
daa
lods
xor
pop
mov
add
jp
inc
jmp
mov
or
fs
add
mov
and
adc
ja
pop
sub
cmp
jne
jle
lahf
loopne
aam
add
pop
jb
fisttps
popa
ret
pushl
mov
or
sub
repz
push
jne
pop
js
sub
rclb
dec
ds
mov
inc
xchg
xchg
sub
int3
stos
aas
add
mov
or
out
jbe
add
pop
and
add
pop
fisttps
push
jmp
cltd
xchg
cmp
mov
mov
xchg
adc
add
sti
cmp
lds
outsb
das
xchg
pop
push
xlat
add
sub
das
pop
js
or
xor
mov
data16
jg
test
add
iret
inc
inc
pop
mov
je
das
hlt
inc
sbb
sub
jne
dec
setae
pop
sti
outsl
clc
push
loope
in
adc
cmc
jp
bound
add
mov
xchg
fildl
add
mov
sbb
jne
shr
je
mov
mov
lods
lds
mov
pushf
sbb
clc
and
lret
shrb
je
pop
addb
clc
fcomip
ret
ficomps
cmovno
xor
aaa
cs
pop
mov
sahf
mov
or
and
mov
inc
sub
outsl
adc
add
fistpl
mov
les
in
jg
scas
add
add
les
testl
dec
add
and
rcl
loop
mov
mov
mov
lods
loop
test
fisttps
inc
int
jp
test
xor
pushl
inc
movsb
adc
add
addr16
subb
scas
stc
xor
leave
jge
je
test
jg
mov
dec
adc
push
jg
lcall
in
sbb
pop
dec
mov
jnp
mov
stc
sbb
mov
xchg
pop
mov
and
testl
pop
push
mov
cmp
gs
and
add
jnp
in
adc
cmp
or
stos
test
xor
mov
scas
inc
andb
and
mov
jmp
outsl
jbe
mov
add
fdiv
pushf
loopne
stos
popf
imul
gs
xchg
repz
pop
aaa
outsb
add
inc
roll
sti
sbb
fsubl
sarl
jo
push
xlat
pop
fs
fbld
std
sbb
outsb
cmp
scas
dec
push
cwtl
dec
push
inc
add
pop
pop
cli
cmp
push
mov
sbb
cmp
loopne
or
fwait
pop
mov
inc
test
int3
jg
dec
loopne
mov
movsb
xor
lcall
scas
or
imul
mov
popf
pop
cmp
nop
pop
jno
fidivs
sti
imul
roll
mov
dec
ljmp
mov
sahf
push
subb
jmp
push
fistl
fildll
push
pop
mov
mov
jb
mov
jbe
mov
cltd
push
cmp
push
test
adc
rolb
adc
mov
in
pop
or
out
test
push
xor
and
lock
aad
rcr
aaa
ss
std
lahf
repz
out
js
clc
mov
push
cmp
in
push
or
jp
adc
adc
aam
push
ljmp
rorb
popf
add
insl
aam
inc
dec
notb
outsl
or
xchg
mov
ds
jmp
in
punpckhbw
negl
pop
js
and
xor
das
xor
jg
dec
jg
scas
mov
jp
jmp
sub
js
jg
icebp
add
lods
outsl
xchg
lods
orl
cmp
push
or
imul
popl
jnp
arpl
pop
js
out
sub
inc
inc
mov
pushf
js
or
or
jp
mov
fisubrl
cmp
cltd
cmp
add
add
push
adc
pushf
inc
notl
aam
imul
jmp
sbb
repnz
inc
fimuls
push
xchg
mov
out
inc
add
xchg
scas
pop
mov
cwtl
mov
add
aaa
mov
sub
mov
add
test
xlat
jmp
push
imul
lret
bound
loopne
and
out
popa
mov
push
fsub
dec
fistpll
adc
insb
mov
std
pusha
fdivp
cltd
jp
adc
fs
sahf
stos
mov
outsl
jecxz
sbb
or
or
shl
out
xchg
push
stos
sbb
out
clc
push
sub
jnp
mov
sub
repz
aaa
test
out
push
jp
and
push
je
loope
stos
fisubrl
in
aam
cs
je
ds
mov
mov
jge
repnz
stos
xchg
sub
mov
and
mov
jp
das
ljmp
or
mov
loope
movsl
mov
mov
cmc
adc
adc
int
jo
in
aaa
js
push
ficompl
outsl
movsl
or
pop
mov
pop
mov
or
je
loope
jb
pop
add
incl
sub
xchg
pushf
pop
sbb
cmp
out
sub
jmp
adc
daa
adc
mov
in
lods
add
xchg
scas
mov
and
sbb
cmpsl
sbb
hlt
xchg
pop
mov
mov
pop
cs
outsb
data16
into
xchg
jne
lahf
fisubrs
jle
pop
mov
imul
sbb
adc
xchg
jl
fisttpl
flds
push
jp
cmp
fwait
xchg
jle
jl
pusha
inc
repnz
mov
cs
mov
sbb
inc
pop
daa
xor
xchg
pop
push
loope
push
loop
and
mov
loop
and
nop
jle
pop
decb
cmpl
pusha
mov
shrb
bsf
outsb
mov
gs
inc
mov
cltd
pop
push
mov
mov
orb
insl
out
mov
add
leave
fldt
jmp
sbb
call
cli
push
or
shrl
sbb
xchg
xchg
sbb
gs
lds
mov
out
out
sub
leave
xchg
sub
mov
pop
or
pusha
mul
jbe
xor
cmp
jl
sub
sbb
push
loop
in
xchg
sub
testl
popa
pusha
call
add
inc
ret
rclb
sub
push
movsl
and
inc
pop
les
les
popa
cs
adc
and
incl
xor
mov
out
push
jbe
in
pop
jo
cmp
mov
mov
bnd
jb
sarl
nopl
xchg
jo
cmp
jecxz
dec
inc
lcall
lret
stos
js
pushl
inc
mov
pop
push
mov
dec
push
movsl
jge
das
and
jp
mov
icebp
mov
loop
loop
or
push
sti
ds
aaa
sbb
leave
imul
pop
dec
bsr
sub
movsb
push
call
jle
mov
rcr
cmp
add
or
xchg
outsb
decl
jnp
push
mov
adc
cmp
inc
xor
dec
movsl
mov
call
das
mov
push
ljmp
pop
testb
mov
scas
mov
bound
xchg
rorb
fildl
scas
mov
jmp
pop
mov
insl
dec
idivb
sub
jecxz
mov
hlt
fdivl
out
repnz
sbb
in
push
cmp
daa
pop
mov
lcall
movsl
daa
sub
push
negb
roll
outsb
push
aas
mov
push
dec
mov
mov
add
lret
daa
adc
mov
sub
aad
push
movsb
or
pop
mov
or
jg
in
and
mov
pop
js
jo
pop
ficoms
out
push
or
les
dec
xor
outsl
xor
icebp
cmp
push
fwait
imul
cmp
test
xor
xor
std
add
dec
js
loop
daa
dec
adcb
jg
mov
bound
cmp
sbb
rcl
or
inc
add
hlt
or
sbb
out
cmpsb
pop
test
inc
data16
jmp
dec
movsl
das
mov
clc
adcl
mov
insl
xchg
fisubrs
fsubrl
loope
mov
xchg
in
and
mov
pop
xchg
stos
xlat
and
scas
cs
shlb
pop
mov
js
xorl
fst
movsb
mov
cmp
adc
adc
icebp
or
mov
fxch
aam
pushl
insl
mul
sbb
xchg
loop
pusha
rcl
pop
in
push
mov
add
ja
adc
xchg
shl
xchg
leave
jnp
push
in
lds
and
outsb
jo
mov
repnz
mov
mov
dec
mov
push
fistps
push
cli
inc
ja
aaa
fld
fdivrl
adc
jmp
inc
sbb
lock
in
fidivs
jo
sub
mov
lahf
xchg
adc
xchg
rolb
pop
pop
fistl
pushf
je
dec
test
mov
arpl
pop
and
leave
cltd
fiadds
ljmp
scas
sbb
sbb
mov
outsb
jmp
adc
xchg
mov
outsl
or
aad
cmp
dec
add
icebp
rolb
cwtl
mov
mov
test
add
mov
test
lea
mov
test
jmp
xlat
dec
mov
outsb
addl
popa
mov
cmp
cmc
pop
popa
mov
add
pushl
mov
mov
pop
add
sub
cmp
push
nop
lds
cmp
das
outsl
bound
cli
pop
sub
pop
sarl
dec
arpl
mov
sub
push
sub
mov
nop
lock
les
sbb
hlt
sbb
or
and
xchg
xchg
int
push
jge,pn
lret
addb
pop
sub
aad
fidivl
xor
mov
cmp
in
sub
jg
adc
and
aam
adc
sub
xchg
ljmp
movsb
rorl
mov
lret
out
test
lock
mov
icebp
jmp
test
fs
fcmovnb
dec
and
pushf
push
aad
jbe
push
pop
inc
cltd
mov
out
outsl
cmp
sbb
shlb
lock
aam
hlt
cmp
dec
fwait
test
push
fsubs
pushf
dec
xor
and
xlat
push
int
loop
enter
icebp
aaa
fdivr
enter
pop
jae
push
dec
push
inc
mov
ret
add
xchg
sub
incb
outsb
loope
cmp
repnz
xor
fiaddl
test
movsl
popa
popf
and
cmpsb
inc
inc
add
jle
jg
xchg
shll
push
les
mov
jmp
xchg
aaa
jl
add
pop
js
testb
pop
daa
sub
and
sub
xor
stc
xchg
lret
jecxz
sti
fiaddl
adc
sbb
xor
addr16
or
or
popf
mov
sub
lods
shll
mov
daa
xlat
add
push
cmc
mov
loope
fidivl
jecxz
pop
pop
inc
sbb
insl
xchg
inc
loopne
and
lds
add
add
repz
mov
add
addr16
inc
inc
cmpsb
xor
dec
fdivrl
jecxz
cmpsl
push
js
fistpll
jno
xor
stos
test
or
and
push
or
xorl
lds
inc
jno
mov
xor
sub
hlt
out
adc
mov
xlat
rcrl
cmpsb
loop
adc
pop
outsb
xchg
mov
or
stos
test
mov
mov
fdivrl
call
sbb
xor
push
arpl
xchg
dec
xor
push
add
loopne
fcmove
cltd
and
call
ljmp
push
inc
push
cld
sbb
mov
ret
cmpsb
xlat
jg
imulb
inc
dec
cmp
inc
fstpl
fs
pop
or
insl
hlt
or
fisubs
jg
call
push
cld
adc
cmp
sahf
sbb
xor
and
rcrb
push
inc
repnz
inc
arpl
rolb
add
adc
aad
sbb
xchg
sbb
in
rorl
out
cmp
cmp
es
in
xor
iret
push
movl
dec
mov
outsl
sahf
push
xor
inc
loope
inc
mov
and
out
iret
mov
rcr
icebp
lds
movsl
das
cld
repnz
xchg
sbb
mov
pusha
add
mov
in
pop
mov
and
std
mov
cmp
sbb
mov
sub
add
sbb
out
pop
stos
sar
enter
pusha
xchg
jp
inc
fistps
les
mov
dec
cmp
mov
push
insb
lock
cmp
movsb
dec
mov
mov
lret
cmp
or
xchg
pop
mov
jg
das
cld
mov
push
arpl
test
fcomps
dec
fildll
xchg
aam
decb
cltd
insl
mov
adc
inc
xchg
mov
das
icebp
ja
js
into
popa
mov
jl
daa
pop
xor
adc
add
in
sarb
rcl
movsl
inc
cs
roll
or
add
jecxz
adc
mov
divb
sbb
sbb
jo
loop
test
fucom
jg
pop
mov
js
push
jae
sub
adc
pop
jbe
push
pop
scas
jne
inc
xlat
inc
inc
sar
lcall
xor
or
pop
call
pop
cmp
mov
shll
test
mov
sti
bound
imul
xchg
hlt
mov
dec
ljmp
mov
pop
mov
std
lea
cmpsb
rclb
jnp
clc
jecxz
ret
push
cwtl
cmp
ffree
push
lcall
lret
into
scas
xchg
jp
pop
xchg
test
or
xor
push
je
mov
push
stos
cmp
mov
fdivrl
jne
lods
pushl
in
xor
push
mov
mov
loopne
xchg
xor
cmp
pop
mov
adcl
fwait
mov
sub
test
popf
jmp
xchg
loopne
jns
jmp
mov
cwtl
dec
dec
sub
ret
adc
mov
sti
sahf
fcmovnu
sbb
mov
repnz
inc
xchg
movsb
push
cmp
jmp
xchg
add
scas
mov
shll
pop
sbb
mov
call
sub
jge
ret
adc
cmc
lods
jae
iret
adc
call
and
cmp
pusha
jmp
cs
mov
xchg
inc
or
pop
inc
loope
call
adc
push
push
cli
adc
mov
rorb
add
outsl
jo
and
cmp
inc
and
lods
mov
imul
ja
and
dec
jb
push
inc
mov
xchg
push
push
xlat
sub
rorl
xor
mov
stos
fstpt
stc
xchg
andb
push
fs
dec
fadds
pushf
sbb
xchg
mov
cmp
cld
sbb
push
insb
bound
loop
out
addr16
hlt
add
inc
sub
jbe
repz
mov
xchg
mov
mov
add
mov
dec
xor
in
and
test
outsl
jg
push
in
btc
cld
lods
subb
out
or
lret
icebp
mov
ss
rcr
daa
sbb
push
jmp
pop
xor
or
xor
call
mov
mov
subb
fs
inc
iret
aaa
call
fisttpl
into
repnz
dec
les
outsl
fbstp
inc
lret
xchg
cmpsb
scas
inc
push
inc
xchg
adc
mov
call
sarl
ja
pop
sarb
movsb
mov
mov
jecxz
clc
andb
scas
ja
in
inc
out
jecxz
cs
popa
in
enter
imul
testl
test
lods
mov
lds
jb
inc
imul
xor
in
adc
mov
dec
loopne
shrl
das
test
inc
xchg
aam
out
jl
and
iret
fnstcw
sub
mov
pop
sbb
or
adc
movsb
ljmp
insl
push
xchg
jp
adc
sub
push
scas
ds
ljmp
je
and
test
or
mov
cltd
mov
jno
jbe
subb
adc
test
jbe
pop
std
mov
das
in
xchg
mov
jge
lds
mov
inc
xchg
jno
jo
int
aam
hlt
jle
push
icebp
cmp
mov
out
stc
mov
and
ret
xor
andl
icebp
dec
jbe
adc
xchg
test
std
outsl
pop
mov
adc
repz
pop
mov
outsb
kxnorw
jecxz
xchg
andb
xor
pop
or
jle
out
jno
and
adc
sbb
add
mov
shl
mov
add
or
scas
hlt
mov
cltd
or
adc
add
sbb
dec
pop
cmp
add
mov
jl
or
or
jp
pushf
mov
xchg
es
xor
adc
adc
add
and
ja
pushf
lret
and
mov
dec
push
mov
lods
shll
pop
cltd
dec
je
or
cmp
xchg
das
push
pop
ljmp
lea
jb
xor
push
mov
inc
xor
inc
jae
sti
adc
adc
cmc
aad
mov
pushl
insl
insb
or
mov
in
aaa
push
jl
rcll
push
outsb
xor
mov
xchg
xchg
aam
std
jmp
addr16
mov
pop
cs
dec
cli
jo
in
adc
shlb
cld
lds
mov
mov
rorl
or
sbb
shll
ljmp
mov
mov
xor
idiv
fstp
mov
ds
lds
lods
xor
pop
xchg
pop
mov
repnz
test
ret
mov
fidivl
add
dec
adc
and
xchg
bound
add
or
mov
jg
and
push
lock
movsl
roll
lcall
dec
sti
jg
aam
mov
movb
das
std
ljmp
out
arpl
call
frstor
sbb
fdiv
cltd
adc
adc
push
ljmp
test
and
sbb
hlt
inc
subb
cli
xchg
or
pop
sub
mov
push
test
push
fidivs
sti
inc
lahf
xor
xchg
movsb
or
hlt
inc
jbe
nop
movsb
push
movsl
lock
inc
mov
insl
sub
ret
adc
dec
mov
data16
sarb
pop
push
or
sub
aaa
adcb
and
or
adc
cmp
test
pop
fs
neg
aam
shr
pop
addb
pslld
out
clc
shlb
sarb
shll
sub
mov
popa
shrb
lock
jno
mov
mov
ja
add
cwtl
in
addr16
mov
inc
loopne
sbb
stos
test
push
inc
int3
lcall
xor
xchg
or
fidivl
jmp
mov
inc
test
jmp
xor
dec
dec
mov
pop
mov
shlb
push
jae
mov
fimuls
bound
xchg
out
mov
push
jle
sbb
or
mov
xor
aaa
sbb
pop
fadds
inc
in
flds
or
mov
call
and
pop
and
inc
adc
in
sti
dec
jg
and
add
xor
es
jecxz
aaa
mov
xor
rol
incl
and
sbb
jb
xor
dec
dec
adc
cmp
in
lods
sub
fiadds
mov
mov
movups
sbb
test
lds
out
lds
insl
jmp
call
xchg
data16
in
pop
mov
das
lods
sbb
dec
cld
sub
cmpsl
decl
cmp
pop
lds
decl
shlb
dec
push
or
leave
or
inc
lds
fidivl
ljmp
mov
or
scas
cmpl
cli
fdivr
aad
xchg
push
lea
xor
popf
jnp
repnz
movsl
mov
and
cmpsb
mov
sbb
in
jge
ss
cwtl
mov
imul
cs
lds
aam
or
rclb
xor
aam
inc
test
repnz
mov
ss
cmp
jmp
push
mov
mov
push
dec
inc
faddl
lahf
stc
mov
movsb
xor
push
jns
adc
mov
mov
pusha
jp
adc
pop
mov
pop
jbe
fsts
fldcw
div
sbb
or
push
push
test
leave
aad
sti
mov
dec
das
shlb
aas
xchg
ja
xor
lds
pop
in
dec
aad
sbb
jge
xchg
enter
jns
sbbb
cmp
sub
sub
js
mov
mov
xchg
mov
adc
int
sbbl
test
inc
and
test
inc
dec
jl
fcmovnbe
push
adc
lds
cmpxchg
and
mul
pop
je
fdivrl
fstpl
push
xchg
sahf
xchg
jbe
daa
fimuls
loop
cs
aad
push
repnz
xor
or
sbb
fcomip
and
pop
aaa
out
cld
inc
daa
xor
jne
or
dec
mov
cli
or
adc
scas
or
push
sub
scas
das
or
movsb
loope
lods
call
movsb
aaa
mov
sub
sbb
pop
pop
mov
mov
daa
sbb
dec
div
pushl
leave
out
in
mov
test
jae
rclb
dec
fadds
xor
insl
enter
or
and
dec
incl
or
mov
jno
fcmovu
clc
das
mov
stos
ret
aam
inc
dec
cld
mov
inc
inc
sar
xchg
lock
mov
icebp
jbe
jns
repz
adc
shrb
add
lea
mov
std
mov
filds
adc
cmpsl
inc
mov
rclb
cmpb
push
push
or
mov
lock
lahf
lods
mov
add
inc
loope
pushl
in
adc
leave
adc
pop
push
cmp
and
cmpsl
daa
xchg
adc
cmpsl
mov
ljmp
inc
sub
mov
jo
xchg
mov
and
enter
push
pop
stc
mov
mull
jmp
push
or
flds
es
gs
arpl
ds
ljmp
jecxz
cmp
hlt
in
cmpsb
sbbb
and
mov
andb
jp
outsl
jp
fcmovnb
xlat
xor
and
clc
xchg
inc
push
mov
sub
adc
and
or
cmp
mov
xor
dec
push
mov
mov
jo
in
jb
scas
icebp
adcb
jge
loopne
dec
pushl
decb
mov
mov
mov
push
mov
jmp
cmpsb
daa
mov
pop
xchg
add
call
cmc
mov
sbb
fsubl
push
xchg
dec
sbbl
cmp
fwait
push
cmp
dec
cli
dec
and
js
mov
cli
mov
pop
cmpsl
push
ljmp
add
xor
cmp
aaa
cmc
lea
sub
sub
lret
decb
or
xchg
pop
sub
test
pop
dec
scas
xor
pop
test
aad
adc
mov
call
sub
rep
inc
push
ss
nop
popf
inc
adc
mov
maskmovq
testl
mov
or
subl
js
push
or
xchg
arpl
push
push
fbld
jns
cmpl
pop
or
lcall
scas
mov
inc
mov
std
outsl
push
xchg
cmp
mov
jb
shr
inc
jle
or
movsl
int
mov
lds
orl
jnp
fmuls
orb
mov
push
sub
jbe
xchg
mov
sti
call
call
enter
pop
jg
mov
xor
mov
sbb
fnstsw
int3
icebp
pop
sub
pop
imul
cli
aad
aas
jle
out
jo
xchg
push
dec
sti
rcrl
das
in
mov
js
inc
cwtl
push
xchg
sub
sub
je
das
xor
pop
out
cmc
lods
jge
xchg
add
std
sub
mov
xor
inc
enter
inc
out
mov
out
loopne
testl
inc
sbb
in
mov
cmpsb
xchg
add
sbb
stos
std
shl
mov
decb
incl
inc
sub
jg
jnp
inc
repnz
stc
push
dec
mov
lret
test
ljmp
fldt
out
arpl
mov
push
xor
mov
in
and
js
dec
seta
pmovmskb
sub
mov
push
adc
and
adc
out
and
mov
lret
add
sub
push
mov
adc
and
cbtw
aaa
mov
insb
aas
mov
dec
mov
add
mov
and
int3
arpl
in
sub
sbb
dec
dec
mov
cltd
lds
sbb
xor
pop
pop
repz
push
push
mov
inc
orb
lea
div
and
orb
dec
cmpsb
ss
push
stos
and
xadd
adc
mov
dec
jp
aas
cli
test
std
clc
lds
or
adc
outsb
ret
mov
subl
subb
sbb
mov
movsb
ret
je
mov
stos
popf
ja
cs
ret
bound
lcall
mov
stos
dec
or
jle
push
aad
or
dec
mov
subl
test
push
movsl
test
dec
xor
pop
jne
and
adc
push
fcmovb
je
or
mov
or
mov
mov
pop
into
leave
dec
ffreep
push
jno
call
idiv
or
fidivrl
cmpsb
fisttps
lcall
adc
loope
mov
lcall
sbb
jge
jo
inc
sub
rorb
jbe
pop
testb
das
test
mul
mov
sub
loope
leave
cmc
inc
incb
jbe
jo
call
xchg
test
inc
fs
sub
sbb
jle
out
rcl
mov
inc
xchg
fsub
stos
imul
outsl
std
int
cmp
lock
pop
sbb
pop
cmp
xchg
sti
push
pop
xor
adc
lea
movsb
adc
xchg
insb
jmp
test
add
or
xor
jo
imul
out
push
dec
sbb
sbb
aam
scas
fildll
pop
inc
fcmovb
cmpsb
push
xchg
inc
cmpsb
xchg
aas
aas
daa
in
pop
adc
outsb
mov
cmp
test
push
loope
loope
push
les
sahf
inc
pop
mov
jmp
add
lcall
mov
mov
aam
or
sbb
pop
scas
jb
push
out
or
xor
or
cltd
cmp
pop
rcrb
shrb
test
insl
inc
push
fimull
inc
cld
xor
mov
iret
push
pop
jge
cmp
stos
imul
or
ds
hlt
ret
mov
or
ss
or
dec
sarb
in
sti
test
add
mov
sti
jmp
mov
es
mov
jecxz
das
std
outsl
and
jecxz
pop
dec
or
sbb
mov
add
fcompl
sbb
dec
adc
sbb
sbb
fstps
adc
mov
xchg
cmpb
pop
daa
js
adc
negl
repz
mov
lds
int3
icebp
adcb
add
inc
cmp
mov
leave
mov
or
fdivrl
cmp
outsb
and
mov
loop
cltd
adc
cmpsl
outsl
or
adc
push
lock
jge
dec
fucomi
mov
mov
mov
xchg
sub
les
and
jge
mov
dec
jb
pop
shrb
or
pop
pop
call
inc
push
testb
aam
add
in
push
adc
popa
sub
mov
ds
sbb
lcall
and
mov
push
in
fldenv
add
dec
push
inc
movsl
fdivrp
pop
and
sbbb
mov
and
outsb
out
ljmp
in
sbb
loopne
mov
sbb
ljmp
sbb
out
cmp
sbb
rolb
adc
in
es
insb
test
rcll
sahf
out
test
pushf
mov
loopne
sub
arpl
fidivl
mov
push
aad
push
aas
dec
and
lea
add
or
fldl
sub
xor
stc
aam
inc
outsl
jne
push
jb
mov
shlb
xorl
sbb
push
mov
pop
mov
nop
xchg
loop
pop
movsl
mov
adc
mov
sbb
xchg
sbb
aad
in
call
js
sub
inc
std
das
mov
iret
adc
pop
mov
movsl
lods
mov
ds
push
ror
fisttps
test
in
cmp
mov
mov
dec
sbb
xor
jle
jbe
out
lcall
pop
scas
stc
pop
divb
push
or
lea
std
ret
push
add
xchg
xor
sub
jecxz
out
fdivs
outsb
andb
sbb
lock
loop
scas
xchg
mov
mov
adc
pushf
hlt
add
outsl
in
fwait
xor
xor
push
jmp
iret
lock
loope
ret
lods
or
mov
push
jne
movsl
lea
xor
les
cmpsb
scas
bound
pop
test
stos
push
mov
enter
aam
nop
outsb
clc
insl
sti
or
sub
mov
cwtl
shll
and
mov
fxch
inc
ficompl
push
sbb
push
fsubp
lea
int3
dec
xor
popa
add
decb
inc
jle
cmp
sbbl
adc
mov
arpl
loopne
pop
cmpsl
inc
push
pop
sbb
test
shll
or
sub
out
shlb
outsb
call
or
sarb
adc
call
or
imul
pop
fisttpll
or
xchg
sbb
cld
lret
in
or
lods
icebp
mov
mov
outsl
pop
cmc
sbb
out
ficompl
push
aaa
jno
les
jecxz
mov
mov
pop
sbb
cmp
iret
test
cmpsl
push
xor
cld
sbb
cmp
popa
xorl
cs
ljmp
sub
add
or
push
js
mov
repz
or
loopne
xor
aaa
test
inc
and
cmp
in
xchg
shll
push
xchg
outsb
outsb
add
mov
sarb
adc
cld
outsb
push
in
inc
imul
aaa
mov
insb
cld
rcll
mov
dec
jecxz,pt
iret
in
cmpsb
pop
xlat
scas
xchg
adc
in
leave
dec
cld
jo
fwait
push
loopne
mov
subl
imul
rorl
dec
pop
pusha
inc
jp
fcoml
es
call
mov
jne
arpl
sbb
out
notb
setnp
jbe
and
xchg
or
xor
pop
shrl
leave
imulb
adc
xor
dec
sub
inc
dec
ljmp
cmc
pop
mov
rcll
xor
icebp
or
daa
push
loop
adc
push
dec
or
add
xlat
mov
jns
mov
sub
dec
mov
cli
addl
fdiv
mov
jle
jbe
lahf
loopne
rolb
out
push
sti
xchg
roll
mov
das
movsb
mov
mov
and
fadds
mov
and
ds
jge
lods
test
pop
sbb
das
xchg
jl
dec
out
aas
pop
call
mov
mov
inc
pop
or
jb
push
xor
lcall
stos
cmpsb
lea
pushf
ret
jmp
ja
push
mov
inc
cltd
pop
aaa
or
in
sbb
pop
push
in
mov
incl
mov
ret
push
cmp
fdivp
pop
in
test
xchg
push
cmp
mov
mov
fnstenv
sbb
lds
ja
inc
pop
hlt
outsl
lock
xchg
xlat
jo
test
pop
jmp
push
adc
pop
cmp
loopne
hlt
sbb
mov
mov
push
xlat
stos
xchg
mov
cmp
mov
lds
int
test
push
ljmp
es
sbb
call
orb
dec
sbb
sti
push
lock
dec
sahf
stos
mov
lcall
xor
ja
or
mov
push
sub
hlt
jp
push
xor
fildl
mov
shl
aas
mov
clc
mov
js
cld
push
mov
dec
inc
pop
rorb
xchg
mov
pop
cli
pop
mov
push
adc
inc
push
dec
call
dec
fistpll
stos
jo
mov
jae
popf
cmp
ss
mull
fidivl
add
inc
pop
mov
jge
das
jl
arpl
aad
shl
add
inc
ljmp
mov
imul
add
jno
push
pop
clc
push
out
popa
add
and
and
or
jmp
lret
stos
test
call
fwait
loop
sub
mov
jecxz
das
mov
adc
mov
aaa
mov
sbb
and
fnstcw
test
pop
mov
test
sub
sub
data16
pop
inc
add
lds
shrb
cmp
dec
in
idivl
push
fprem1
jg
mov
addr16
inc
xchg
mov
cld
call
in
clc
das
push
lret
add
rol
inc
inc
pusha
adc
adc
push
cld
fbld
xchg
mov
inc
nop
jecxz
sbb
fwait
mov
inc
jno
sbb
in
repz
mov
fidivrs
fdivs
pop
imul
cli
ljmp
in
mov
std
adc
push
test
pop
rcl
add
xchg
mov
inc
fsubl
jae
add
aam
out
adcl
rorl
dec
mov
pop
aaa
or
cmp
insl
push
fisttpl
mov
inc
das
mov
stos
popa
pop
iret
and
mov
sub
mov
shlb
and
call
push
dec
pushf
clc
in
add
repnz
jp
daa
add
inc
rcll
mov
xor
popf
xchg
and
mov
pop
dec
aaa
inc
jecxz
pop
insl
push
add
mov
mov
sbb
sbb
lret
lods
push
popa
or
xchg
gs
xchg
mov
fs
int3
mov
test
lock
std
cmp
cli
scas
in
test
mov
jecxz
and
sbb
lods
cmp
and
and
mov
pop
scas
fcoms
mov
sub
test
add
xchg
and
xor
shl
xor
inc
imul
mov
out
ret
sub
pop
ret
dec
dec
test
mov
movsl
stos
sti
jmp
fisubrs
adc
add
jmp
fs
fisubs
movsb
xchg
jne
shlb
movsl
or
jmp
sti
gs
xchg
bswap
mov
rclb
mov
outsb
repz
mov
fwait
std
push
inc
and
adcl
cmp
call
mov
mov
mov
pop
mov
aas
shl
mov
inc
shll
inc
or
outsb
xchg
add
push
outsl
sub
adc
mov
or
cmc
pop
adc
pushl
add
pop
cmp
xchg
mov
add
enter
sub
or
jmp
sub
in
ss
sub
xchg
cmp
add
orl
lock
cwtl
pop
push
mov
bound
les
in
xchg
push
push
add
fsub
scas
jbe
xor
mov
inc
or
mov
sub
pop
and
mov
in
jb
clc
cli
in
scas
pop
pushf
jae
test
or
enter
mov
push
ja
mov
faddl
lahf
leave
adc
add
xchg
fs
outsb
dec
jecxz
and
mov
loopne
sbb
cs
cmp
lock
fwait
inc
xor
sbb
testl
inc
sbb
cmc
lret
mov
rorl
pop
imul
inc
aad
adc
jp
lcall
mov
mov
xchg
pop
cs
push
mov
adc
ja
push
cld
xchg
imul
call
imul
dec
shll
mov
decl
bound
lcall
jecxz
mulb
es
add
add
sbb
xchg
dec
ljmp
mov
dec
cwtl
arpl
and
cltd
xor
sub
ljmp
jmp
and
test
push
imulb
or
mov
movl
int3
jne
aas
in
push
mov
aam
int3
enter
xchg
xchg
aaa
scas
pop
pop
fnsave
pop
lock
enter
ret
mov
in
mov
adc
hlt
cmp
rol
fdivr
inc
loopne
cmp
mov
stos
pusha
sub
xchg
or
mov
aaa
ss
stos
into
leave
ja
pop
inc
jg
in
pop
sub
test
jb
add
push
and
call
fldl
push
jg
imul
xchg
push
insb
dec
mov
outsl
hlt
fistps
sub
inc
out
test
pop
fs
pop
push
mov
cmp
popa
pop
jns
mov
pop
movsb
in
addb
sbb
and
dec
loop
icebp
xor
add
subb
pushf
push
mov
push
mov
adc
fmull
es
xchg
popa
mov
cli
mov
addl
ret
pushf
je
gs
fisubrl
std
mov
xor
inc
js
outsb
fistps
aas
xorb
xor
sub
subb
cmp
gs
xchg
cli
xchg
cmp
xchg
sub
mov
inc
cs
adc
int3
and
aas
arpl
jnp
insl
pop
or
xor
add
subl
sub
sbb
inc
dec
in
std
jno
mov
mov
and
jg
mov
jne
mov
ffreep
push
and
scas
cmp
insb
inc
inc
aad
push
aaa
pop
pop
roll
sti
or
jge
lea
inc
icebp
mov
pop
adc
and
clc
push
lods
mov
mov
rorb
in
loop
fbstp
cmpsl
hlt
test
xor
push
jp
xchg
jns
mov
pop
sbb
pop
lcall
outsl
insl
fs
ds
xchg
repz
pop
test
pop
jae
sbb
push
xor
pop
test
or
add
add
mov
push
add
stc
push
ljmp
insl
xorb
dec
push
mov
mov
and
insl
ss
and
sti
shll
faddp
adc
loopne
or
bound
cld
pop
faddl
jmp
cld
das
std
jg
cmc
sub
pop
xor
dec
inc
stc
movsl
add
data16
xchg
mov
sbb
jo
jge
cmp
mov
cmpsb
and
pop
clc
in
incl
adc
add
pop
and
incl
lahf
popf
arpl
mov
aas
mov
sahf
push
outsl
or
xor
mov
mov
cmc
mov
pushf
test
das
push
push
add
cmp
mov
inc
mov
aad
aad
mov
ret
lods
mov
dec
or
mov
icebp
push
adc
dec
insl
pop
or
cmp
dec
mov
out
mov
outsb
push
jno
loopne
sbb
out
mov
jle
inc
cmp
adc
jl
dec
jae
mov
pop
mov
repnz
jne
xchg
push
pop
sbb
fdivrs
adc
mov
rcrl
prefetchnta
cs
add
sti
movsb
dec
lahf
lods
xor
jge
punpckldq
out
sbb
outsl
test
push
pop
push
mov
add
std
push
sbb
bound
lods
dec
add
dec
shlb
dec
addb
inc
out
mov
adc
int3
mov
sbb
ror
cltd
cmp
adc
test
pop
testl
push
dec
std
test
scas
pop
int3
add
mov
xor
test
inc
mov
sbb
mull
stos
mov
lods
sbb
lods
add
jae
or
cs
arpl
mov
pop
mov
loope
jp
pushf
icebp
mov
jnp
rcrl
cs
and
dec
cs
in
jb
outsb
imul
push
gs
mov
aaa
loopne
mov
lret
and
jmp
mov
inc
rorb
sbb
lds
jp
hlt
ljmp
and
inc
xchg
nop
jae
fdivs
or
add
mov
inc
jo
xchg
lods
sbb
loopne
das
mov
or
add
lods
dec
decl
sbb
packssdw
or
ret
sbb
sbb
mov
cmp
adc
cmp
dec
mov
out
cli
add
inc
ret
sbbb
pop
cld
adc
mov
std
and
sub
sbb
adc
jle
outsl
aaa
fidivrs
lds
hlt
xor
jl
inc
sbb
mov
outsl
or
outsb
push
and
cmp
mov
test
xchg
out
inc
lods
pop
cmpb
push
mov
pushf
out
adc
mov
mov
in
pop
and
sbb
push
test
ljmp
int
adc
sub
les
shlb
pop
push
mov
test
inc
insl
mov
pop
loopne
mov
mov
jge
inc
mov
jmp
shrl
insl
sbb
xlat
pop
mov
in
pop
mov
adc
cwtl
shlb
pushf
pop
fs
fisttpl
jnp
subl
data16
inc
lock
dec
cmpsb
test
divb
sub
leave
cltd
mov
mov
movsb
jecxz
das
fstl
cli
mov
int
popf
or
xor
test
jno
inc
sub
xchg
repnz
gs
aaa
std
pop
outsb
xchg
add
std
je
icebp
jne
loope
push
aad
push
dec
dec
jl
jle
cmp
sub
loope
addl
pop
jp
andl
pop
inc
mov
call
bound
jb
es
sub
repnz
or
stos
inc
cmp
xchg
adc
hlt
incl
inc
je
fs
add
xorb
movb
push
jl
mov
push
pop
dec
pop
mov
mov
mov
into
pop
cmpsb
cmp
adc
out
shl
insl
dec
cld
test
arpl
mov
sbb
out
scas
lahf
jne
sub
add
cmpl
mov
cltd
lock
inc
or
push
clc
dec
inc
addr16
xchg
cmp
iret
or
xor
mov
lods
in
push
mov
mov
sbb
mov
pushf
fs
pop
cli
or
nop
pushf
fwait
push
mov
icebp
pop
inc
lret
jbe
dec
loopne
jp
jbe
nop
psraw
in
outsl
or
jge
int3
int
fdiv
xor
adc
loop
jnp
ret
enter
or
out
pop
pop
add
pushf
cmp
nop
xlat
add
lock
loopne
ret
xchg
jecxz
xchg
xlat
mov
inc
pop
pushf
in
ror
mov
inc
and
dec
xor
mov
xchg
ret
xchg
mov
push
es
inc
fcmovb
push
mov
leave
and
lds
add
jae
hlt
loopne
push
dec
sbb
jo
inc
test
mov
cmc
js
mov
cli
or
inc
jbe
addr16
dec
data16
insl
mov
sbb
adc
xor
push
outsl
mov
sbb
sti
stos
cmp
xchg
adc
shl
xlat
push
xchg
mov
pop
in
enter
and
cmp
icebp
mov
adc
mov
icebp
or
sub
xor
dec
push
leave
add
inc
das
jo
ja
movb
xor
mov
sbb
movsl
popa
subl
mov
jae
lea
insl
or
cmpsb
jle
orl
stc
arpl
pop
jecxz
push
outsl
cmpsb
lods
xlat
inc
mov
xchg
stos
push
imul
xor
push
lock
mov
add
andl
pushf
lcall
pop
fldlg2
add
orl
add
sub
mov
sub
in
mov
dec
dec
xchg
jmp
inc
pop
test
imul
pop
and
test
mov
scas
jo
jne
push
sub
sbb
jne
jl
arpl
aam
gs
sub
fs
fsubl
incb
dec
jl
and
inc
pop
js
icebp
adc
aaa
sbb
sbb
push
in
and
and
inc
leave
jl
ficoml
insl
xchg
sub
outsl
insl
or
cmpsl
xchg
js
lds
mov
call
ret
mov
mov
movw
jecxz
xor
add
inc
ret
cmpsb
pop
adc
shlb
inc
jmp
fnstsw
out
fwait
sub
push
rol
cmc
sub
pusha
inc
cmp
mov
je
test
jge
insb
loopne
mov
mov
mov
movsl
mov
popa
cltd
xor
mov
push
rolb
push
cld
or
mov
sub
enter
addr16
icebp
test
mov
out
stos
push
mov
mov
pop
and
fstl
mov
add
outsl
out
shlb
ljmp
daa
stos
xor
add
shll
gs
popa
fldt
lcall
mov
xchg
lret
rclb
inc
clc
cmp
mov
movsl
cmp
push
enter
add
mov
test
into
push
shlb
dec
pop
pop
ds
push
sti
pop
fiaddl
aaa
or
imul
fistpll
pushf
test
add
pop
mov
pslld
ds
fmull
adc
push
or
jle
aad
int3
pop
les
gs
in
loopne
push
scas
inc
or
bound
push
in
hlt
lds
andl
popa
scas
mul
sub
nop
xlat
or
xchg
leave
roll
jo
test
mov
test
mov
xchg
xchg
jg
push
int
mov
dec
mov
dec
push
cmc
jbe
sbb
and
xchg
inc
jnp
jge
adc
sarl
sbb
fcmovnbe
jle
push
adc
cld
push
pop
pop
mov
mov
ret
and
scas
pop
jl
cwtl
sub
jmp
or
mov
sbb
cmp
mov
mov
mov
adc
jle
sarb
ja
insb
test
mov
or
testb
outsb
mov
imul
fstpt
inc
jg
outsb
aas
pop
or
test
fcomip
mov
mov
ret
mov
mov
push
jo
xchg
xchg
sti
aaa
xlat
jmp
aad
iret
xchg
scas
xor
xchg
lods
mov
mov
xchg
pop
fld
xchg
js
pop
mov
jecxz
movsl
rcll
daa
add
loopne
mov
push
sub
test
pop
fdivs
cmc
and
shll
sti
mov
mov
jecxz
lcall
push
jns
adc
inc
inc
insl
jnp
loope
fwait
xchg
mov
xlat
fdiv
push
jb,pt
dec
jb
push
out
or
cmp
insb
mov
fsubrs
aam
sar
adc
adc
fisubrs
jmp
repz
cwtl
jmp
out
pop
icebp
sub
out
das
test
xchg
mov
cmp
and
mov
out
cmp
out
repnz
jle
jmp
cld
adc
and
lret
mov
into
mov
fcmovnb
push
adc
cs
push
enter
pop
aaa
sub
aad
add
or
lock
add
pop
in
pop
sub
or
jg
js
test
add
cmpsl
cmc
stc
cwtl
sti
mov
call
decl
inc
xor
jbe
arpl
inc
sbb
sub
stos
ljmp
lea
lods
mov
clc
sub
mov
cwtl
dec
rolb
incl
loop
cmp
sbb
arpl
xchg
andb
addr16
mov
enter
idivl
push
das
jmp
sbbl
call
mov
adc
jge
xor
and
loopne
call
push
mov
insl
sarl
bound
mov
aad
dec
into
imul
sub
mov
dec
dec
dec
test
cmp
xchg
add
aaa
mov
xor
add
mov
test
sub
les
cli
das
mov
ret
in
fldenv
mov
lock
lock
pop
test
mov
dec
jb
push
out
jle
dec
clc
movb
add
and
pop
incl
leave
inc
ja
iret
mov
mov
cs
call
in
enter
clc
sbb
shr
mov
stc
in
or
repz
cmp
xchg
shlb
mov
shl
cmpsb
lahf
pop
in
fndisi(8087
les
fmuls
cld
jbe
mov
push
push
sub
push
ret
push
shll
mov
inc
mov
movsb
test
pop
std
adc
into
mov
lods
jmp
mov
jbe
pushf
in
xor
xor
mov
add
inc
push
ja
ds
fisttps
loopne
lock
sti
js
addr16
jae
cmp
pushw
aas
rorl
cmc
adc
adc
mov
xchg
lods
push
jae
dec
outsl
dec
bound
les
pusha
int3
loope
cmp
sarl
adc
jecxz
add
mov
nop
int
ret
push
loopne
lahf
sbb
cmp
scas
inc
cmc
push
lret
subb
sarb
loopne
in
lock
insb
sub
hlt
pop
push
mov
jmp
dec
lock
icebp
sbb
pop
lock
jbe
ljmp
or
jmp
fisubl
das
jmp
rolb
rclb
or
pushf
pop
fwait
sbb
movsl
sbb
mov
mov
jecxz
mov
sub
pop
test
popf
popf
dec
dec
push
adc
test
imul
cmp
aad
sahf
insb
loopne
fidivs
xchg
add
idivl
inc
push
test
push
cmp
pop
jg
out
out
push
pop
xchg
icebp
ret
mov
sbb
lods
xor
pop
jg
fnstsw
xchg
push
pop
xchg
out
pop
lret
xchg
test
sbb
je
push
push
add
icebp
mov
pop
shr
mov
sbb
fwait
cli
or
add
mull
xchg
pusha
add
std
aad
mov
mov
xchg
call
das
push
sarl
xchg
pop
push
jle
fwait
jo
mov
mov
orb
jbe
cld
dec
jecxz
orl
adc
jl
jg
icebp
and
lea
pusha
lock
insb
pop
jp,pn
mov
rcrb
ljmp
dec
fildl
cli
mov
rorb
aas
fxch
inc
sbb
lcall
pop
dec
lock
jb
movsl
push
add
inc
fisubrl
jno
cmp
das
pop
xor
lock
out
jb
into
mov
clc
ja
add
mov
outsl
out
clc
pop
mov
mov
pop
stos
add
lret
dec
insb
fistps
lea
inc
subb
incl
mov
pop
jbe
lret
adc
xor
call
loopne
jecxz
das
mov
adcb
push
fwait
inc
mov
scas
sub
in
sub
or
cmc
addr16
dec
aam
jle
mov
lea
and
mov
sbb
pushf
push
faddl
pusha
test
xchg
cmp
or
enter
dec
cwtl
sub
inc
popf
dec
push
out
in
pop
mov
pop
adc
and
aaa
clc
in
inc
inc
or
and
test
jecxz
inc
popf
dec
cmp
pushf
in
nop
pop
pop
out
add
pop
mov
dec
fisubrs
test
mov
sbb
sbb
xor
das
xor
dec
cld
mov
jl
jae
cmpb
clc
mov
push
sub
fadd
les
enter
hlt
pop
push
add
out
test
inc
jle
cmp
loopne
inc
outsl
or
enter
mov
lock
ds
xor
std
xchg
add
mov
mov
xchg
pop
loopne
pop
sbbb
fucomip
loopne
jb
sbb
and
xor
fildll
and
mov
and
push
pop
mov
add
out
test
insl
mov
icebp
pushf
xor
xchg
cmp
cmpsl
push
sub
mov
clc
inc
les
ljmp
cmp
xchg
stc
dec
lock
sbb
xor
std
rcrb
les
pop
aas
mov
movsl
ret
movsb
icebp
jno
dec
dec
push
xor
lahf
inc
imul
or
movsb
ret
mov
mov
stos
xchg
shlb
js
add
lret
bound
bswap
mov
mov
fists
fisubs
out
inc
fs
mov
out
jo
lret
lea
sahf
mov
pop
xor
cmp
icebp
xchg
cmc
mov
adc
add
idivb
fmull
xor
andb
mov
push
jecxz
push
in
pop
mov
lock
orb
mov
aam
sbb
xor
test
fcoml
js
notb
mov
jle
jp
sti
mov
mov
push
add
call
push
in
clc
clc
pop
mov
mov
ret
test
mov
mov
ljmp
sarb
fwait
sbb
mov
aaa
xchg
jge
es
fisubrs
in
outsl
out
popf
pop
mov
or
sbbb
mov
das
test
andnps
sbb
fwait
inc
and
or
outsb
and
sbb
pushf
xchg
mov
inc
inc
jb
pushf
sti
cmp
ljmp
mov
mov
mov
inc
pop
add
push
lds
lahf
push
imul
push
cmpsl
mov
and
ja
mov
jg
or
insb
je
aas
cmpb
and
repz
movsl
add
xchg
mov
addl
roll
add
sub
xchg
jae
inc
xor
xchg
xlat
sbb
adc
or
dec
in
jno
mov
mov
movsl
dec
pop
jmp
sbb
test
jmp
int
sbb
mov
fwait
mov
xchg
adc
mov
ss
pop
sub
mov
cmp
pusha
push
fs
repz
stos
addr16
ds
jb
add
das
addb
pop
sub
lcall
xor
movsb
push
mov
daa
xor
sub
orb
and
adc
lret
outsb
sbb
xor
adcl
mov
mov
push
push
xor
inc
and
push
shlb
shll
or
mov
loope
mov
aaa
jge
push
xchg
aaa
lods
pusha
xchg
insl
add
jb
mov
bound
es
sub
add
testl
and
in
inc
jp
lods
cmp
das
xor
dec
cli
mov
mov
out
mov
jp
pop
push
hlt
scas
stos
and
xor
add
pop
sub
add
pop
cmpb
scas
push
js
inc
xchg
shr
mov
iret
cmp
lea
sub
fdivrp
lret
nop
mov
inc
or
add
dec
pop
scas
loop
insl
mov
out
insb
movb
jo
add
das
inc
pop
shlb
ret
arpl
cmp
pop
cmp
mov
pop
mov
cmp
ret
cmp
pop
xchg
xchg
mov
mov
lret
and
or
sbb
pop
jle
sub
mov
jbe
dec
jl
cmc
decl
xor
setle
icebp
push
add
dec
sarb
jns
popf
mov
jb
testb
pushl
stc
jl
stos
mov
loopne
sti
divb
test
push
add
push
lock
cmp
lcall
test
mov
outsl
inc
jae
lcall
incl
scas
and
sbb
inc
andb
or
sbb
add
cmp
lds
lock
test
dec
js
xchg
pop
mov
sub
adc
icebp
std
xor
sub
dec
rorl
jne
add
dec
and
xor
clc
push
ja
test
inc
mov
mov
lret
call
xchg
cmp
adc
enter
mov
mov
pusha
push
aad
sub
jmp
mov
aad
mov
lods
fnsave
sub
imul
mov
lods
das
push
cs
jne
fldcw
rclb
incl
inc
jl
sbb
xchg
add
lea
jg
mov
out
xor
call
insl
out
das
cmc
rcrb
movsl
out
inc
adc
movsb
lods
cmpsl
sub
cmp
add
cmp
push
cwtl
aam
clc
cld
movsb
xor
in
pop
cmpsb
inc
or
jg
adc
or
in
jmp
adc
inc
mov
fcoml
arpl
popa
or
sbb
pop
insl
movsb
call
subl
clc
mov
dec
fildll
sbb
mov
sbb
mov
movsb
call
mov
xchg
lods
push
outsb
pusha
pop
cld
mov
pop
dec
adc
dec
adc
adc
mov
insl
sbb
test
xchg
shrb
add
xchg
imul
and
rorb
push
mov
mov
sub
and
dec
mov
clc
mov
out
xchg
pop
cmp
fiaddl
xchg
in
data16
into
shrb
loopne
or
mov
cs
stc
sub
aaa
cmc
in
arpl
dec
xor
js
pop
aas
fcomp
scas
movsb
jmp
add
sbb
negl
fsubrl
xchg
adc
inc
or
jbe
or
dec
mov
xchg
mov
stc
cmp
repz
xchg
shrb
dec
add
insl
add
jmp
call
test
faddl
ds
dec
mov
ss
sbb
cmp
bound
pop
popf
call
xchg
lds
push
mov
test
push
fimuls
inc
xor
in
push
or
inc
jns
jmp
inc
and
in
pop
decl
aaa
roll
lahf
lea
pop
sti
ret
inc
out
shlb
inc
push
subb
fmuls
mov
popl
jp
jae
ja
fists
movsl
adc
jne
addr16
inc
lods
push
dec
cmpsl
sbb
iret
add
jae
push
dec
jmp
sti
cld
pcmpeqb
mov
in
outsl
pop
lcall
outsl
xchg
fimuls
inc
or
pop
cmp
in
fcmovnu
aad
es
je
call
push
jno
and
adc
push
mov
lds
sbb
xlat
enter
adc
dec
add
mov
xchg
xor
nop
mov
sti
fs
fistpl
or
adc
pop
inc
inc
jp
or
adc
jo
sahf
xchg
dec
in
mov
aam
add
ret
push
add
loope
outsl
imul
mov
in
ds
jg
ja
jmp
and
jmp
aaa
cs
mov
mov
or
or
les
lods
add
call
cmp
call
icebp
fldt
pop
sub
adc
sub
jo
mov
clc
clc
out
int
pop
and
jb
pop
xor
or
pop
and
jno
lds
sti
xchg
lcall
lcall
inc
or
pop
cmp
xchg
mov
shr
push
rcll
cld
popa
fnstenv
enter
xchg
ds
or
inc
and
lea
add
fisubrs
scas
aaa
mov
sbb
jg
xor
push
cmp
lcall
imul
in
fnstcw
or
adc
movsb
pop
hlt
adc
es
lcall
fiadds
outsb
xchg
lret
roll
sub
adc
inc
ficoml
les
adc
clc
sbb
sub
das
std
sbb
cmc
decl
sub
cmp
imul
repz
mov
cmc
in
pop
std
test
arpl
adc
add
adc
mov
mov
sbb
bnd
aaa
jns
jmp
and
lods
xchg
gs
aaa
dec
adc
imul
mov
mov
mov
or
scas
dec
je
cmc
mov
xor
or
sti
add
jg
cs
sub
inc
or
pushf
repnz
cmc
js
xchg
cld
dec
pop
sub
mov
shll
repnz
sbb
daa
in
pop
jl
or
xorb
adc
loope
sarl
dec
lahf
cwtl
aas
mov
imul
pop
shlb
pop
inc
mov
adc
out
add
and
in
sbb
dec
repz
jp
add
cmpb
cltd
cmp
lcall
pop
nop
in
loope
push
dec
and
in
aas
mov
mov
out
fwait
popf
jnp
mov
mov
clc
pop
jl
add
cmp
negb
mov
or
test
mov
inc
std
in
add
and
out
sbb
inc
adc
jnp
lds
dec
imul
nop
sbb
call
out
jge
mov
pop
and
pop
test
xchg
loop
mov
cmp
lods
ljmp
insb
jbe
adc
or
mov
push
adc
mov
fdivrl
cmp
stos
lods
push
sbbb
fsubs
adcb
push
test
pop
push
adc
sti
cmpsl
lods
mov
pop
or
cmp
mov
outsb
sub
ljmp
cmpb
adc
les
mov
sbb
pop
mov
add
lods
mov
ja
in
pop
or
jle
mov
int
frstor
push
sbb
sub
aaa
leave
xchg
xchg
push
sub
andb
cld
sbb
hlt
or
pop
lret
cmpsb
jecxz
decl
cltd
aad
out
pusha
mov
dec
cld
dec
insb
std
adc
ss
xlat
fwait
cmp
je
in
or
pop
adc
push
cltd
pop
fcmovu
sahf
fs
decl
aas
xorb
xchg
and
dec
mov
fcmovne
stos
call
cmp
shll
xchg
adc
push
xlat
mov
movsl
pop
sbb
dec
lea
ss
aad
and
sar
jno
mov
mov
inc
add
and
cld
cmpsb
loop
hlt
jle
jne
adc
or
push
or
icebp
movsb
mov
dec
jecxz
or
push
pop
out
sub
scas
fadds
cmp
mov
jle
daa
popaw
leave
xor
clc
loopne
idivl
push
ljmp
ret
mov
lds
mov
pop
push
dec
jge
mov
lock
nop
jbe
mov
or
notl
xor
ljmp
in
bound
in
sahf
push
push
cmp
push
and
out
stos
cmp
sbb
divps
out
and
mov
mov
push
fistpll
mov
adc
adc
dec
fwait
pop
and
lret
imull
dec
push
jg
pop
repnz
dec
mov
cmpb
sbb
int3
pop
gs
jl
inc
call
sub
dec
xchg
arpl
and
mov
xchg
jmp
dec
out
ret
dec
add
in
lock
sub
ljmp
mov
frstor
push
movsl
jge
js
and
pop
xchg
cmp
sub
aas
jns
aas
mov
clc
outsl
aad
dec
xchg
in
pushf
stc
iret
insb
jle
dec
jmp
jmp
push
movsb
jle
pop
scas
and
addr16
mov
push
pop
clc
call
aaa
dec
out
mov
sbb
ss
inc
in
cmp
call
ret
xchg
mov
jg
repnz
repz
pushf
dec
cmpsl
xchg
jle
loop
cmp
loopne
push
mov
mov
loopne
or
rorl
bound
jne
jle
mov
cmpb
outsl
adc
js
xchg
lret
nop
ret
aaa
js
pushl
aad
sbb
pop
in
call
ds
inc
inc
mov
mov
jg
pop
loop
adc
lds
xchg
cli
push
xchg
int3
test
es
add
jl
xchg
je
or
mov
ficomps
lea
lds
enter
out
pop
scas
in
ret
sub
stos
or
lock
jb
movsb
into
mov
mov
add
mov
frstor
sub
or
mov
out
pop
push
sbb
shlb
icebp
sub
adc
std
dec
ljmp
lret
cwtl
lea
movsl
and
jmp
push
mov
out
ljmp
pop
loop
mov
adc
fldt
int
mov
hlt
jg
fucomip
inc
lret
inc
rol
xor
adc
lods
mov
shrl
xchg
jb
jg
test
sbb
das
cld
dec
jo
push
xchg
add
fisubrs
ffreep
aad
frstor
cwtl
adc
sbb
jno
pop
out
lods
lret
sti
ss
pop
cmp
inc
fsubr
repz
out
inc
or
shrb
push
xchg
mov
sahf
sub
hlt
lret
and
pop
pop
mov
cmp
inc
jo
mov
jle,pn
loope
adc
dec
mov
int3
sbb
or
in
pop
dec
sti
in
mov
xor
insb
fnop
lcall
insb
data16
jmp
addr16
pop
cli
jmp
jo
dec
xor
jl
push
add
cs
jmp
stos
pop
xor
faddl
lret
add
jnp
xchg
imul
loop
mov
sub
mov
push
shlb
insb
xchg
into
fwait
insb
cld
ja
push
sarb
xor
xchg
ljmp
sbb
sar
je
jecxz
inc
or
unpckhps
out
js
cmp
cltd
lret
mov
mov
mov
xor
mov
dec
adc
stc
fldl
mov
rorl
pushf
cmp
or
xlat
jmp
add
stc
xor
add
aad
aaa
push
add
cmpsb
je
into
mov
pop
pop
scas
and
clc
pop
jg
push
rcrl
imul
mov
in
jbe
in
xor
rcl
jns
add
push
rolb
mov
xor
sub
xor
sbb
aam
mov
lahf
out
push
test
pop
xor
clc
add
mov
sti
push
sbb
fbld
add
fs
sub
adc
mov
add
or
sbb
icebp
adc
popf
adcl
fcmovnbe
mov
enter
jge
movsl
pop
jno
lret
rorb
addb
movsl
dec
and
sub
or
jle
jo
mov
push
xacquire
ss
bound
pop
adc
test
sub
mov
cld
ss
outsb
pusha
aas
mov
adc
test
or
cmp
sbb
arpl
shll
push
imul
into
push
cld
pop
jb
decb
js
outsb
into
add
adc
movsbl
das
pushf
aam
xchg
lcall
sbb
lock
jns
add
pop
dec
sbbl
pop
rcl
adc
mov
ret
test
clc
pop
clc
repnz
and
add
lcall
ficomps
sub
cmp
mov
fcoms
jg
ljmp
outsb
add
gs
cmc
push
adc
or
movsl
int3
dec
test
cmp
adc
sbb
cmp
imul
add
mov
inc
add
stc
dec
inc
sarb
xor
add
in
loope
mov
repnz
push
aaa
pop
mov
enter
sti
dec
push
pushf
out
lea
repz
arpl
mov
mov
xchg
cmpsb
sub
bswap
or
addr16
in
test
push
adc
mov
outsl
insb
test
stos
mov
fsubrs
add
outsl
in
push
loopne
adc
cmp
mov
pop
cli
arpl
adc
sti
mov
mov
jnp
xor
inc
imul
dec
jo
jo
cmp
ret
pop
push
shll
sub
std
and
mov
outsb
addl
fcmovnu
icebp
adc
sub
or
jae
out
aaa
mov
not
or
pop
clc
mov
xor
jnp
mov
mov
out
or
sahf
mov
push
int
jb
ret
dec
add
xchg
loop
cmpsb
test
scas
outsl
xchg
test
lcall
jmp
sub
push
xchg
cmp
pusha
sub
sbb
mov
xchg
mov
outsl
lods
xorl
push
sbb
out
mov
fcmovnbe
add
xchg
mov
cmp
call
jnp
jg
push
scas
push
repnz
sub
add
bound
jg
adc
mov
inc
aas
clc
outsl
mov
sub
xchg
shlb
mov
cmpb
fbstp
shrl
cmp
cmp
aaa
je
pop
mov
xchg
and
jp
sti
in
dec
push
xchg
xchg
jns
stc
push
dec
sbb
cs
pop
fldenv
add
cmp
jg
outsl
jl
jno
cs
adc
add
sub
pop
cld
fs
clc
adc
imulb
sbb
cmp
mov
in
imul
or
pop
fcomi
icebp
pop
inc
adc
jmp
iret
or
cli
test
incl
mov
out
pop
inc
into
pop
cmp
pop
stc
mov
xor
jg
das
clc
lods
pop
mov
ret
push
sub
ds
mov
fistpll
js,pt
xchg
mov
mov
in
fistpll
mov
fs
jecxz
adc
shlb
mov
jecxz
das
cld
push
icebp
mov
mov
and
shlb
inc
mov
divb
jle
cmp
sar
arpl
clc
xorl
andl
or
jle
mov
inc
or
in
mov
dec
or
mov
mov
xor
loopne
fcmovnbe
aaa
add
out
add
jno
or
fcmovne
aas
push
aam
je
call
lea
es
jns
pop
jo
push
inc
pusha
sub
outsl
loopne
hlt
xor
inc
pop
xorb
arpl
fidivrs
jmp
ja
adc
mov
dec
inc
daa
out
cltd
xor
mov
and
fldt
dec
movsl
test
pop
scas
xor
aaa
jle
jp
mulb
push
cs
lahf
clc
mov
mov
push
rolb
adc
mov
mov
mov
test
das
dec
xchg
nop
orl
lahf
daa
or
cmp
xlat
add
cmp
jl
push
movsl
mov
out
rolb
mov
enter
add
mov
loop
movsl
pop
cmpsb
addr16
les
pop
jo
repnz
repz
out
jecxz
sbb
xchg
sarl
inc
mov
out
mov
popf
cmp
lahf
mov
jg
xchg
aam
mov
je
lock
mov
and
in
outsl
mov
dec
enter
stc
mov
lods
and
fistpll
pushf
cmp
or
lahf
pop
call
and
iret
inc
push
loopne
ja
filds
mov
out
mov
cli
insl
xorb
sbb
stos
fistpl
xchg
jbe
insb
rcr
push
sbb
ss
in
loop
test
movsb
xchg
std
repz
cli
shl
clc
scas
test
or
push
jmp
push
stos
pop
bound
fists
mov
js
xor
mov
insb
dec
stos
mov
movsl
jp
sbb
inc
push
and
push
pop
cli
out
cmpsl
and
mov
pop
mov
xchg
pop
cs
test
sub
das
jno
rol
and
inc
lock
test
into
inc
add
inc
jo
movsb
je
adc
fldt
and
push
mov
das
fstpt
jne
mov
lock
adcl
or
test
in
cld
insb
adc
mov
fistpl
mov
fs
push
aam
popa
ljmp
add
xorl
dec
jne
sub
movl
xor
loop
stos
push
test
and
test
stc
mov
sub
stos
mov
jge
push
lcall
ljmp
test
mov
stos
stc
ss
push
mov
ljmp
cld
inc
push
mov
cmp
call
iret
subl
mov
mov
shl
cltd
xchg
and
bound
sbb
lret
pop
loop
insl
jnp
fstpl
mov
jbe
out
lret
xor
cmp
cmpsl
outsl
sbbb
dec
mov
sbb
int
push
cmp
jle
push
test
mov
or
pop
jb
aas
jbe
faddl
arpl
mov
and
adc
scas
mov
hlt
ret
mov
outsl
rorl
aad
add
lret
loopne
enter
mov
imul
add
bound
push
adc
out
lret
mov
cmp
outsl
js
int3
faddp
mov
ror
sar
mov
push
mov
and
lods
push
add
movsb
iret
out
inc
or
test
jg
fsts
push
pushf
mov
stos
stos
push
mov
les
push
or
test
fs
mov
add
in
inc
sahf
stos
ss
lods
cmp
jo
les
outsl
movswl
xchg
dec
pop
cmp
aaa
cmpb
mov
sub
xchg
dec
gs
mov
ljmp
outsl
inc
ret
paddq
mov
mov
mov
jbe
fidivs
adc
jmp
jbe
sbb
dec
mov
lcall
lock
cmp
out
outsb
fidivrs
push
xor
mov
mov
clc
cld
insl
imul
je
xchg
inc
sarl
rolb
arpl
inc
jecxz
andb
lahf
ss
cmc
hlt
loope
decl
test
jo
incl
and
push
test
cmp
ljmp
xchg
test
adc
cmpb
test
sbb
leave
inc
sbb
sub
xadd
cmp
fs
call
daa
or
cmc
cmp
ljmp
mov
insb
or
adc
jnp
inc
fcmovnb
xlat
push
xchg
ss
sti
jl
xchg
out
neg
ja
cld
pop
clc
push
incl
cwtl
cmpsl
xchg
adc
add
sub
outsl
fildll
jnp
lret
rorb
in
rclb
out
inc
cs
pop
sbb
movsl
repnz
cltd
or
ret
inc
xor
inc
es
loop
insb
std
andb
mov
aam
inc
pop
lock
push
loope
rcrl
arpl
clc
call
mov
jno
inc
lahf
dec
or
and
stc
leave
xlat
add
inc
add
sub
pushl
mov
sub
push
lock
lcall
jg
loopne
andnps
outsb
push
sub
in
adc
repz
jg
decl
je
pop
cmpsl
scas
dec
test
cmpl
inc
test
jp
inc
shrb
adc
test
mov
cwtl
fs
jg
xor
adc
jg
sbb
sbb
xor
je
flds
inc
sbb
mov
rcl
fwait
test
cmp
and
adc
roll
outsl
cmp
adc
stc
add
cli
addb
orb
movsl
clc
testb
mov
rcll
pop
cmp
pushf
jae
orb
xchg
imul
call
test
push
jns
adc
add
push
jecxz
call
inc
aaa
scas
icebp
in
mov
pop
sbb
test
cmpsb
in
cli
ss
jmp
and
push
addb
addr16
adc
jp
sbb
lret
in
data16
jg
out
fisubs
lahf
data16
mov
cmp
push
inc
inc
outsl
std
push
lods
or
test
pushf
addl
insl
cmp
pop
test
repz
idiv
inc
xor
push
and
sbb
daa
lds
fbld
mov
std
jle
ljmp
mov
adc
adc
pop
jne
adc
push
dec
cltd
jecxz
cs
mov
push
fcmovnb
cli
out
sbb
adc
mov
adc
pusha
out
into
pop
mov
pop
sub
and
cmpsl
orl
mov
fidivrs
inc
pusha
xchg
mov
pop
int
dec
dec
add
in
int
aaa
lock
fldt
dec
xchg
mov
xchg
mov
pop
mov
adc
sbb
cmpb
incb
and
sbb
push
cmp
inc
loopne
add
mov
ss
out
aaa
aam
or
movsb
fnstenv
lds
jl
and
push
and
add
fisttps
test
mov
push
lock
cmp
jp
dec
aam
cmpsl
mov
mov
adc
loop
cltd
cmp
adc
cmpsb
push
mov
subl
sbb
inc
inc
shld
test
xchg
xor
lret
mov
ret
or
sub
rol
iret
lcall
sub
jl
jmp
pop
mov
inc
pop
popf
sbb
mov
fists
insl
xor
cmp
out
jge
xchg
insb
out
mov
mov
or
xor
jno
push
adc
mov
add
adc
lds
inc
enter
inc
call
das
shrl
bound
push
cwtl
cmp
mov
jp
sarb
fisubrs
cmp
rolb
lock
rclb
fidivrl
ds
add
testb
icebp
ror
scas
dec
sub
add
loop
sbb
dec
inc
fildl
ljmp
jp
sub
icebp
lahf
rorb
add
jne
jecxz
push
and
outsl
lods
mov
ljmp
push
add
es
sbb
sub
inc
mov
push
mov
outsl
dec
or
mov
mov
scas
shrl
and
test
les
xchg
sahf
mov
cmpsl
dec
inc
pop
iret
mov
xchg
stos
out
cld
dec
movsl
lcall
mov
cld
pop
or
push
jl
jl
sub
dec
mov
jle
xchg
sarb
adc
sti
sti
jbe
jae
sbb
fcmovne
arpl
adcb
mov
or
add
xchg
dec
sbb
pop
push
mov
inc
push
outsb
lock
add
outsl
mov
movb
ja
pop
scas
test
icebp
es
andl
sbb
sbb
rorb
in
loope
inc
das
call
sub
clc
xchg
jg
add
jbe
lret
xchg
and
je
xchg
mov
xor
aam
out
popf
inc
adc
inc
fbld
push
rclb
mov
movsl
aad
lods
mov
jmp
cmp
sub
push
sub
aaa
mov
fwait
out
cmp
cwtl
gs
add
scas
das
cld
inc
dec
sti
ds
and
bswap
fwait
fwait
push
in
out
xor
in
repnz
mov
push
or
pop
shlb
inc
ret
lcall
andl
ss
scas
fdivr
mov
test
xchg
outsb
shrl
inc
pop
xor
call
push
adc
pop
fiaddl
inc
into
lret
xor
adc
jge
orb
jecxz
inc
add
shlb
fs
xchg
jo
or
jno
push
adc
icebp
pop
xor
sbbl
ds
sbb
inc
rcrb
xorl
loop
test
into
cli
pop
mov
push
pop
fmul
cmp
sbb
push
je
addb
or
jge
dec
mov
xchg
lret
xchg
mov
jle
das
mov
or
aas
dec
aam
sub
dec
mov
movb
jb
jo
inc
push
xchg
add
call
and
leave
aas
xchg
aam
sarb
in
and
jg
mov
inc
xor
xor
xchg
pop
adc
pop
xor
mov
clc
outsl
rcrl
insl
fsubrs
sub
add
cmp
jg
jg
insb
gs
push
and
xchg
divb
inc
mov
test
ljmp
jbe
js
xor
fnstenv
xchg
jno
pop
iret
out
je
pushf
es
mov
sbb
push
xchg
mov
push
cli
in
push
cltd
pop
mov
pop
and
xor
sbb
loopne
ss
xchg
sbb
adc
xchg
sbb
ljmp
enter
pop
ljmp
imull
test
or
gs
test
cwtl
or
loopne
outsl
cmpsb
mov
hlt
inc
dec
test
das
lods
mov
xor
pmulhw
mov
das
xor
push
fistpll
stos
xchg
xor
je
xchg
pop
fisubrl
cwtl
push
imul
pop
jns
adcl
cmc
cld
test
js
std
js
std
mov
shlb
lret
stos
and
rorb
inc
mov
ja
xchg
xor
outsl
fnstsw
pop
movsb
jno
mov
outsb
daa
mov
lods
mov
xchg
subl
outsb
add
call
cld
cmpsb
xchg
pushf
inc
fwait
mov
pop
fidivrs
cld
push
stos
cltd
mov
jl
inc
cmpsb
jle
or
xor
test
sbb
sub
or
mov
and
mov
stos
stos
leave
mov
jmp
xlat
pusha
pop
dec
lret
js
add
mov
mov
push
xchg
sbb
outsl
dec
jecxz
mov
lods
popa
sub
xchg
pop
dec
fs
inc
cmp
adc
push
xor
jmp
test
outsl
cli
jmp
add
lock
shlb
lds
jo
mov
js
xor
repnz
pop
js
add
fimuls
xlat
dec
push
je
andb
jg
shll
mov
or
mov
rolb
adc
hlt
pop
mov
in
and
push
jl
aam
cld
xor
outsb
pop
mov
pusha
cmpsl
inc
repz
movsl
hlt
fstl
out
lcall
xchg
test
ficoml
mov
mov
dec
inc
and
aaa
or
ss
pop
outsl
insl
cmp
mov
inc
sbb
sti
subl
int3
stc
mov
sahf
adc
je
push
mov
sbb
clc
mov
mov
pushf
icebp
xchg
mov
mov
add
cmp
loop
mov
mov
mov
push
mov
leave
inc
imul
sbb
icebp
and
enter
push
clc
test
xor
mov
inc
and
das
cmpsl
xchg
push
jb
out
push
jecxz
fstpt
scas
rorl
and
dec
dec
xchg
mov
fs
ljmp
cmp
jl
jo
pop
lcall
xchg
or
sub
icebp
mov
fsubrl
mov
mov
or
cmp
jg
data16
movsl
inc
negb
jle
sbb
test
inc
add
enter
in
les
gs
ja
xor
shrl
push
and
pop
adc
pop
rcrb
mov
mov
sbb
pop
fldt
and
push
int
add
adc
push
fcomps
sub
inc
out
je
outsb
lds
jmp
sarb
pop
mov
add
jmp
das
popa
mov
inc
sar
mov
sbb
mov
lret
dec
adc
adc
mulb
adc
or
push
adc
loope
jecxz
push
mov
cmp
pusha
mov
rclb
jno
push
pop
pop
jno
add
pop
or
or
push
xor
fnstsw
push
and
icebp
or
jmp
dec
nop
mov
inc
rcrl
into
shr
clc
cmpsb
arpl
sahf
out
scas
dec
aad
imulb
loop
inc
aam
repz
and
or
roll
push
xor
mov
push
adc
adc
in
cmp
mov
or
prefetcht0
pusha
jl
jp
fildl
adc
adc
int3
xor
and
jecxz
sbb
inc
and
out
add
std
cmp
lret
lcall
dec
pop
cmp
je
insb
inc
mov
out
sbb
mov
push
push
outsb
push
sbbl
jge
insl
mov
inc
add
idivb
rorl
fistl
lcall
and
inc
arpl
jbe
test
add
popa
push
push
xchg
push
jne
sarb
shlb
out
xchg
ds
sbb
push
add
in
fnstsw
hlt
pop
or
or
inc
and
add
mov
outsb
jl
outsb
push
or
mov
cmc
cmp
mov
and
into
or
mov
or
sar
nop
jbe
inc
ja
test
ds
or
adc
mov
push
mov
push
lock
fldl
negb
sarl
jno
repz
sbb
mov
ret
pop
les
dec
push
push
lock
mov
push
pop
inc
cwtl
gs
dec
mov
int3
pop
scas
into
enter
or
push
mov
ret
add
andl
and
call
adc
scas
xchg
sarb
jno
mov
cmp
xchg
sub
mov
test
sub
das
je
xchg
xor
inc
je
testb
add
xlat
ret
shll
sbb
inc
fsubrs
xchg
jo
add
loop
repnz
pop
ficompl
and
popf
inc
rcr
testb
stos
les
adc
dec
pusha
mov
int
arpl
gs
add
gs
movsl
dec
iret
sbb
aam
adc
test
sbb
mov
arpl
xchg
sub
sbb
mov
nop
push
clc
xorl
mov
push
xchg
lret
rolb
jg
sbb
out
in
es
mov
repz
ffreep
push
sbbl
jno
lret
lret
or
insl
and
add
test
hlt
cmpsl
adc
jnp
aaa
insl
fists
fistps
fisttps
hlt
xchg
cmp
adc
xor
or
dec
cmpsb
test
jg
daa
loopne
iret
and
mov
push
in
gs
pop
rcll
test
daa
adc
mov
fs
fldl
pop
mov
jle
adc
leave
xor
pop
or
std
shll
dec
daa
xchg
mov
loope
fimull
test
repz
sub
cmp
mov
cmp
int3
mov
sub
pop
andl
insl
addr16
negb
cltd
cmp
aaa
es
loope
mov
xor
scas
mov
add
in
in
dec
insl
and
ljmp
mov
lahf
imul
or
lds
mov
jmp
popf
jno
xchg
xchg
mov
mov
jg
aaa
imul
push
loopne
or
repz
divb
adc
mov
push
dec
adc
out
call
aaa
or
xchg
xor
mov
push
xlat
push
paddsw
push
mov
push
scas
sub
jne
inc
sti
aam
out
cmpsl
mov
mov
sbb
das
sbb
ficompl
icebp
jmp
nop
les
add
lahf
mov
pop
pop
lock
push
adc
or
add
ret
test
xchg
jle
pop
jb
mov
fildl
sbbb
xor
push
sbb
or
cmp
pop
clc
test
insb
test
mov
lahf
shrb
mov
ljmp
repnz
jo
pop
shll
dec
cwtl
cmp
repnz
mov
out
xor
push
xor
shll
push
sti
cmpsb
push
mov
divl
cmp
shr
sbb
push
outsb
imul
adc
xor
hlt
ret
xlat
push
jno
adc
stos
dec
or
call
jl
insl
shlb
xchg
lds
lds
ja
outsl
cld
das
jae
jg
sti
int3
cmp
add
faddp
dec
cs
xor
sub
je
mov
cli
pop
imul
mov
ret
pop
cmpb
cmpb
ficoml
ds
std
inc
mov
pop
insl
aad
clc
fdivl
ja
jl
jecxz
push
xchg
mov
mov
das
hlt
xchg
or
push
orb
outsb
lock
mov
ljmp
dec
stc
sbb
adc
sahf
mov
and
cld
js
jbe
inc
add
faddl
stc
cmp
sti
jg
dec
je
mov
bound
mov
repnz
mulb
xchg
pop
and
jge
cmp
stc
inc
sarb
ret
insl
daa
aaa
sbb
shll
stos
mov
outsl
jb
jge
outsb
push
scas
jno
mov
mov
or
das
mov
ja
cs
mov
push
jle
out
mov
repz
and
outsb
rcll
es
cli
out
pop
sub
add
xchg
ret
nop
out
aas
and
adc
xor
gs
xchg
mov
fdivl
bnd
ljmp
adc
adc
popa
lock
jecxz
pop
mov
push
mov
sbb
or
incl
ss
push
xchg
das
testl
je
xchg
in
loope
push
loop
aas
call
lds
add
or
adc
jp
jp
cmp
adc
loope
lods
xlat
shrb
mov
mov
or
ret
sub
test
addl
daa
xchg
enter
ljmp
add
insl
stos
loop,pt
sti
and
mov
mov
mov
in
filds
arpl
sbb
add
jne
push
sbb
adc
in
mov
int
and
mov
jne
push
loopne
movsl
cld
sbb
push
dec
es
ret
shrb
mov
scas
mov
jmp
roll
xorl
xchg
repz
mov
ret
jae
nop
and
jle
in
xor
ja
cld
ljmp
stos
andb
iret
scas
fs
frstor
test
outsl
pop
imul
mov
das
stc
mov
hlt
mov
jno
cmp
cwtl
add
insb
push
in
dec
je
pop
insb
sar
fstpt
or
sub
jno
and
dec
xchg
pop
dec
pop
mov
clc
outsb
jge
test
cltd
xor
out
add
std
sbb
mov
jo
sbb
and
pushl
mov
xchg
push
mov
xlat
insb
mov
pop
push
lahf
cmpsl
in
imulb
adc
icebp
in
hlt
leave
adc
mov
adc
pop
push
dec
add
cmpsl
xchg
pop
out
push
mov
shr
sbb
cmp
inc
inc
mov
call
pop
roll
or
xor
out
cmc
mov
jmp
sub
xor
mov
test
pop
push
loopne
adc
and
mov
and
mov
lea
fdivl
lock
cld
cli
sbb
sbb
mov
dec
adc
lret
add
pop
push
and
imul
xchg
mov
out
or
jo
pop
enter
pushl
hlt
jbe
addr16
fisubl
jbe
in
cmp
cmpl
mov
aaa
jle
jno
xchg
loope
outsl
adc
lods
xor
or
adc
leave
mov
movsl
cltd
adc
jg
mov
ret
fisubrs
call
bound
insb
pop
ja
mov
xchg
pop
js
dec
push
in
and
into
int3
mov
xchg
push
push
push
add
pop
push
xor
xor
pop
xchg
mov
sbb
popf
ja
shrb
add
push
mov
mov
lock
addr16
push
cwtl
xor
push
mov
sahf
incl
pop
or
mov
sbb
popa
and
cmp
or
mov
inc
out
pusha
imul
leave
pop
clc
or
dec
jl
mov
add
mov
add
movsb
rorl
sub
pop
enter
mov
mov
cld
sbbb
mov
mov
int3
mov
cmp
sub
lcall
pop
pop
shr
cwtl
repnz
cmpsb
xchg
sbb
jle
xor
stos
mov
pop
pop
hlt
jl
ficoml
mov
mov
clc
or
mov
inc
jecxz
mov
xchg
fs
lods
and
lock
sub
sbb
out
cmp
mov
rcll
xor
cmp
mov
mov
das
call
or
sub
inc
xor
adc
in
subl
loopne
mov
test
lea
mov
pop
fisubs
mov
sarb
mov
push
adc
pusha
outsb
movsl
sbb
mov
fcomps
out
inc
mov
outsb
xchg
mov
mov
inc
jle
lock
mov
cmp
and
inc
push
adc
xchg
xor
or
fisubs
mov
sub
mov
adc
xchg
mov
pop
pop
ss
add
mov
fiaddl
xchg
insl
xchg
lahf
adc
mov
pop
lods
push
xor
or
jb
dec
enter
in
hlt
mov
jo
adc
sbb
dec
loope
xor
pop
mov
push
or
sbb
mov
cld
fmuls
dec
and
mov
in
push
sbb
jno
add
jno
pmulhuw
in
pop
rorl
inc
adc
jp
cltd
outsb
mov
mov
cmc
adc
mov
ja
or
or
push
shl
mov
push
push
jmp
fsubp
add
jne
cmp
pop
fcomp
pushf
movhps
jo
call
out
aas
test
pop
mov
nop
adc
sub
fs
test
ljmp
fisubrl
and
jp
mov
mov
mov
mov
sahf
dec
mov
push
ss
or
xor
loope
call
movsb
imul
stos
imul
mov
lcall
lcall
mov
les
xor
jle
fisubrs
xor
imul
dec
or
push
cld
comiss
cmp
loop
jb
sbb
dec
adc
pop
inc
jl
mov
or
push
adc
rcr
pop
call
in
or
pushf
push
or
fcmovne
pop
xor
xchg
daa
dec
cld
cmp
xor
pop
sub
pop
aas
shrl
pop
loope
inc
lcall
jbe
xor
inc
mov
sbb
testb
mov
insl
inc
xchg
test
aaa
stos
movl
jne
cs
cmp
mov
or
mov
dec
pop
sti
pop
sbb
stc
ds
inc
lds
out
int3
es
xlat
sbb
xor
and
xor
or
test
scas
inc
dec
adc
inc
push
push
movsb
xor
jecxz
inc
imul
divb
idivl
and
adc
mov
cli
popa
fmuls
das
mov
push
fiaddl
push
dec
test
or
mov
bound
jg
push
pop
push
pop
clc
sub
ficomps
roll
ja
dec
das
dec
nop
mov
inc
sbb
ss
incb
rcrl
inc
cli
iret
sub
ret
movsb
imul
aas
mov
or
stc
out
or
xor
push
cmp
inc
sbb
sbb
xchg
sbbb
repnz
pop
mov
scas
pop
clc
mov
jo
call
xor
nop
adc
and
push
sub
pop
arpl
aam
call
xchg
push
pushf
add
inc
cmp
pop
mov
mov
mov
mov
inc
es
movsb
cmp
roll
mov
mov
das
jl
or
out
mov
pusha
enter
cs
add
shl
pop
dec
daa
jge
inc
push
jno
insl
pop
stos
sub
call
cmpsb
ja
call
mov
outsb
pop
dec
and
sbb
mov
lock
or
pop
mov
inc
ret
ficoms
mov
movsl
outsb
mov
adc
sbb
ja
mov
mov
jg
inc
pop
mov
mov
xchg
in
ds
inc
and
cli
inc
aaa
mov
scas
mov
ss
push
adc
and
aam
fbstp
js
push
int3
outsl
fldl
insl
lret
and
fisttpll
test
loopne
repz
dec
cmp
xchg
push
fldpi
add
cld
mov
icebp
and
inc
fs
jmp
loop
sub
rcrb
je
xchg
pushf
add
xor
repz
mov
scas
push
mov
push
push
or
inc
pop
jo
sarb
int3
pop
mov
stc
test
add
aaa
loopne
inc
es
rcll
cmp
push
call
add
ja
test
mov
inc
or
mov
mov
cmp
sub
lods
pop
mov
in
out
lds
insl
xor
test
and
cmp
ds
mov
xchg
xor
insb
ja
push
imulb
mov
aas
sub
xor
mov
pop
adc
pusha
dec
push
stos
pop
inc
ss
out
jle
adc
aad
push
jp
nop
rcl
mov
adcl
movsl
or
jnp
inc
push
rcl
loop
mov
hlt
mov
push
add
xchg
dec
mov
xor
cmpsl
sbb
inc
and
shrb
pop
cmp
add
cwtl
or
adc
psrad
loopne
push
jo
imulb
mov
or
pusha
mov
push
fnstenv
mov
jb
or
dec
decl
ror
int3
leave
add
sub
mov
aam
popa
je
lds
xor
pop
nop
xchg
in
push
mov
and
add
ljmp
mov
mov
cli
lods
test
mov
xor
in
sub
mov
call
lea
inc
out
mov
aad
std
sub
adc
loope
daa
dec
mov
dec
sti
mov
xor
pop
jnp
ja
lret
lea
pop
pop
scas
jle
cs
movl
mov
mov
icebp
aas
sub
adc
fistps
xor
jg
add
sar
jg
mov
mov
pop
outsl
jne
test
jg
and
jne
inc
xor
pusha
lods
cmc
push
test
pop
loop
xchg
inc
repnz
call
popf
pop
cwtl
lcall
stc
push
xor
je
aad
and
fisubs
loopne
mov
jmp
adc
mov
inc
mov
inc
adc
fildl
mov
sub
xor
incl
jno
add
leave
test
jle
decl
jmp
and
or
sub
or
push
mov
dec
loop
ss
shl
lea
jp
and
mov
jle
push
inc
call
jmp
and
pop
les
push
mov
push
adc
cli
pop
mov
ret
pop
jg
in
xchg
imul
outsl
icebp
jg
jno
popa
jg
les
adc
adc
xchg
ret
dec
bound
push
iret
fnstenv
ljmp
shrl
daa
cli
jbe
xor
popf
push
push
push
dec
adc
cld
movsb
pop
inc
xchg
mov
mov
mov
pop
stc
ljmp
aad
rorb
outsl
std
xchg
mov
mov
aaa
pop
push
jo
nop
push
repnz
sbb
aaa
cmp
daa
gs
call
mov
ret
lds
and
cmp
push
jp
mov
mov
cmpl
sub
shll
or
mov
test
mov
add
hlt
fildll
imul
sbb
push
mov
adc
lods
fdivs
out
insl
mov
mov
xor
mov
sub
pop
xchg
and
adc
sub
std
ffreep
xor
pushf
mov
out
pop
cltd
mov
push
and
call
incl
pop
roll
push
int3
stos
xchg
addb
jp
pop
hlt
push
incb
lods
xor
call
lds
repz
xlat
outsl
mov
incl
push
cmp
mov
inc
cld
les
xor
and
push
test
adc
je
decl
add
push
mov
push
lret
jmp
cmpb
mov
or
imul
sbbb
das
pop
dec
call
xchg
sub
push
cs
sub
inc
push
mov
sbb
mov
add
mov
push
xor
outsl
cld
inc
loope
nop
xchg
fld
push
dec
jle
fstps
jb
je
loop
sahf
fcomps
and
imul
or
iret
loop
push
lods
js
mov
cmc
mov
orps
fisubrl
push
lods
sbbl
mov
add
bound
push
or
and
outsb
inc
leave
xchg
xchg
pop
dec
sbb
mov
mov
mov
jb
sahf
mov
out
das
mov
inc
cld
mov
lock
sbb
sbb
mov
sbb
jne
adc
pop
mov
push
fcompl
push
dec
xchg
popa
and
in
das
adc
fstl
sub
out
cmpsl
test
loop
xorl
cli
ljmp
call
xchg
mov
xchg
push
push
add
xchg
fisubrl
ret
xorl
xchg
pop
add
mov
jg
mov
mov
mov
push
insl
cli
xor
inc
ja
sub
inc
popf
scas
test
test
icebp
shlb
inc
and
in
cli
push
push
daa
data16
inc
mov
mov
xchg
lods
out
into
les
pop
das
jae
daa
inc
jns
cmpsb
xchg
sti
jg
pushl
sarl
loope
out
jp
mov
and
cs
xchg
sbb
mov
xchg
cmp
xchg
xchg
fsubs
mov
fidivrl
incl
sbb
je
inc
or
lret
ret
inc
sahf
push
jmp
sbb
xchg
or
loopne
push
xchg
push
clc
das
sbb
das
cmc
aam
imul
dec
int3
and
xchg
daa
push
mov
iret
and
std
jno
push
or
add
cld
jnp
push
sbb
mov
or
jno
packsswb
jl
in
adc
repnz
push
insb
jp
xchg
cltd
pop
mov
roll
xor
cld
add
jp
xchg
bound
mov
rolb
push
out
in
jle
jl
aaa
mov
cs
neg
scas
shll
ret
stos
scas
rcll
aad
loope
je
movsl
fbstp
inc
fildll
hlt
xchg
cmp
shlb
lcall
push
push
ret
jp
pop
and
push
adc
imul
jb
jnp
pop
cmp
lahf
clc
add
push
and
daa
aaa
inc
call
and
xchg
mov
adc
push
clc
push
mov
inc
out
popf
and
sar
and
push
add
sub
pop
data16
inc
popa
fcoms
adc
dec
outsb
dec
outsl
call
and
lock
add
adc
sub
jp
inc
ss
icebp
pop
clc
push
fsubl
roll
lret
and
mov
pushl
adc
fidivs
std
cmpsl
dec
inc
mov
mov
sbb
jecxz
xchg
in
jl
ds
mov
movsw
dec
push
sub
push
inc
inc
mov
lods
lock
call
and
pop
or
lock
clc
cmp
jmp
sarl
das
mov
cld
add
pop
loop
add
out
add
pop
push
sbb
pop
pushf
test
or
or
icebp
bound
push
push
lock
pusha
call
dec
mov
xor
icebp
xchg
outsl
lds
or
repz
pop
loop
cmp
in
je
xor
mov
mov
mov
bound
add
and
mov
dec
mov
mov
add
or
pop
xchg
mov
sub
mov
in
mov
inc
pop
sar
aam
imul
add
fwait
les
test
add
pop
movsl
add
ret
out
testl
add
and
lock
mov
xor
push
xchg
sbb
lods
lock
roll
adc
jmp
les
aad
jns
leave
add
ja
mov
mov
push
std
ds
dec
adc
ss
leave
inc
aaa
add
add
ja
addb
imul
sti
xchg
ds
sub
scas
ljmp
mov
stc
mov
and
push
add
sbb
dec
sub
in
cltd
movsl
jae
push
xchg
js
sbb
xor
mov
lods
jb
scas
ds
inc
decl
pop
jle
mov
aaa
jne
mov
inc
lock
jne
sbb
and
in
sbb
and
mov
adc
dec
sub
cmp
mov
sub
test
inc
mov
inc
fwait
movsb
sbb
mov
adc
fisttps
popf
jmp
test
fstp
cld
and
fwait
cmc
and
addr16
sbb
add
lcall
jle
ljmp
jp
mov
test
fldcw
sahf
ret
adc
pushf
push
xor
inc
xchg
rcl
cld
scas
jmp
and
jle
add
cwtl
pop
add
clc
negb
pop
push
inc
jmp
clc
shld
xor
je
mov
fists
ss
lods
push
dec
jne
jg
jns
push
pop
outsb
call
pop
or
mov
test
in
cmpsb
call
outsb
sub
jmp
mov
testb
js
push
inc
test
xlat
pop
add
ds
xor
je
sbbl
fucomp
movsl
fmull
sbb
rep
and
mov
jmp
inc
adc
and
or
sahf
xchg
test
push
lods
gs
cmp
cld
mov
movsl
mov
mov
push
mov
push
jge
jecxz
push
mov
fwait
lcall
push
lea
dec
push
ss
repz
sbb
es
outsl
outsl
mov
iret
subb
jne
dec
jns
or
inc
cs
clc
mov
or
and
jp
je
mov
inc
sbb
push
pop
dec
lods
testb
push
cmp
pop
cmp
stos
push
lock
outsl
cwtl
les
jb
sbb
cmp
add
rolb
popf
addr16
inc
mov
mov
add
cmpsl
pop
hlt
outsl
dec
mov
sbb
push
enter
cli
fidivrl
or
cmp
or
jns
adc
lret
ds
fmulp
cmpsl
dec
and
lea
addr16
pop
xchg
dec
pusha
add
or
mov
mov
loope
clc
test
inc
mov
sbb
jno
push
pop
lcall
add
lahf
pop
icebp
fldt
adc
fstpt
lret
fwait
sub
mov
pop
cmp
xchg
adc
fstpt
dec
mov
lock
leave
cltd
cmp
and
addr16
push
movsb
aas
jge
movsl
out
pop
loopne
dec
mov
notb
je
mov
mov
mov
mov
test
mov
push
cmc
inc
aas
pop
out
pop
ficoml
sbb
jmp
xor
jbe
test
mov
adc
lcall
pop
aas
inc
test
mov
and
dec
cmpsb
jno
xorl
jge
xlat
sub
sbb
dec
or
ljmp
pop
fadds
sbb
adc
es
jnp
sbb
and
in
jo
ss
mov
or
lahf
cmpl
shl
push
popf
inc
mov
fidivrl
xchg
lock
cwtl
xchg
jmp
xchg
mov
xchg
dec
shrb
ret
inc
cwtl
dec
cmp
xchg
popl
int3
aad
cmp
pop
shll
push
xchg
mov
int3
ljmp
cmp
aaa
movb
push
push
sahf
push
dec
mov
aas
add
jmp
push
clc
andb
mov
lret
mov
test
and
inc
mov
nop
mov
les
fildll
jo
add
push
imul
adc
mov
clc
lods
sti
into
loop
pop
mov
int
es
and
mov
shll
xor
flds
or
sarl
iret
push
scas
xor
icebp
rcr
movsl
adc
mov
push
mov
out
sbb
fldln2
js
aam
pushf
ljmp
sub
sbb
sub
lcall
add
sub
xchg
sbbb
dec
int
sbb
or
add
fs
es
nop
gs
mov
aad
je
jmp
sbb
out
and
or
dec
ja
arpl
cs
xlat
nop
cmpb
push
or
jg
aaa
ss
rclb
dec
stos
scas
test
sbb
cmc
pop
sbb
pop
int
mov
bound
add
jb
ret
es
ss
scas
push
inc
std
ljmp
sbb
fcmovu
dec
xchg
test
push
sbb
test
sub
insl
jp
shr
sbb
pop
push
mov
adc
jno
rcr
mov
xlat
mov
cmp
outsl
jl
fcompl
ret
out
xchg
scas
mov
outsb
jns
push
insl
jmp
into
cld
shll
pop
lock
xchg
or
sub
fisubl
sbb
lret
xchg
lds
repz
inc
rcrl
movsl
dec
fidivl
mov
cmp
test
adc
cmpl
into
icebp
cmc
sbb
andb
in
test
hlt
aas
push
jns
out
clc
sbb
js
loop
pop
pop
cmp
pop
xchg
jae
outsl
in
out
mov
inc
mov
jns
nop
cmp
aam
inc
popa
mov
js
out
xchg
xor
jbe
mov
mov
jl
adc
clc
out
stc
rolb
rolb
lret
call
mov
jne
pop
inc
push
xchg
lcall
xchg
lcall
into
neg
mov
movsl
or
sti
xchg
enter
push
or
mov
sub
xchg
sub
cmpsb
nop
add
pop
sbb
in
ficompl
fstl
jne
xchg
cmp
call
pop
ja
mov
xor
mov
or
shll
pop
scas
cmpsb
sub
xchg
add
sti
pop
mov
fwait
push
pop
imul
hlt
fisttps
ret
add
xchg
insl
scas
leave
and
imull
push
mov
stos
mov
dec
inc
push
xchg
lahf
test
mov
or
jnp
xchg
outsb
aam
out
cwtl
fcompl
pop
lock
and
sarb
addb
push
mov
or
stos
fwait
call
push
sbb
fmulp
lods
imul
mov
aaa
xchg
mov
lret
mov
dec
pop
or
fdiv
imul
pop
cld
sub
push
aad
and
xlat
push
sub
jg
outsl
fsubrs
ljmp
cmp
stos
adc
push
ljmp
push
insl
xchg
xchg
mov
pop
jmp
lahf
and
xor
insb
test
lahf
inc
mov
xchg
and
cld
inc
nop
xor
or
js
mov
hlt
mov
mov
jns
dec
mov
pop
or
sahf
push
lds
adc
js
int3
daa
or
lret
inc
push
or
loope
xchg
jge
xlat
and
jmp
in
imul
ret
fnstcw
ret
mov
insb
jl
arpl
xor
or
inc
lcall
jae
arpl
pushf
lock
sub
bound
inc
andps
mov
and
pop
xchg
loope
ljmp
or
or
dec
jo
fucomp
test
test
and
mov
sbb
stos
outsl
sbb
xlat
inc
rclb
add
pop
mov
fildll
add
push
test
mov
inc
pop
mov
call
lcall
std
pop
insb
repnz
mov
outsl
loopne
repz
jp
mov
out
pusha
dec
adc
push
clc
movsl
push
push
lock
add
loope,pt
push
call
addl
sbbb
imul
test
aad
mov
cwtl
pop
push
or
pop
in
in
jnp
mov
fs
test
pop
mov
mov
fdivr
in
dec
push
adc
add
push
cli
sbb
js
adc
or
sbb
pop
clc
pusha
lods
in
test
scas
mov
lret
subl
mov
decl
sbb
stos
aam
shlb
pop
bound
and
add
lret
inc
dec
pop
hlt
enter
pop
xchg
testb
mov
je
sbb
adc
pop
dec
scas
or
repnz
inc
pop
ficomps
adc
xchg
popf
loop
mov
cld
xchg
stos
or
test
jmp
cmpsb
stc
into
adc
mov
lods
sbb
fcmove
jle
mov
inc
loope
ljmp
dec
dec
in
or
movsb
popf
dec
fs
out
xchg
push
aam
test
inc
shrl
shl
es
pop
call
pop
cmp
and
movsb
jbe
inc
lds
das
push
jl
push
rorb
mov
xorb
jno
mov
dec
inc
inc
lods
cltd
insl
std
stc
pop
les
nop
incl
lahf
cs
movsl
mov
mov
dec
and
dec
jl
push
sub
addr16
pop
pop
jo
xchg
or
inc
insl
sti
jbe
xchg
or
fstpl
test
push
nop
dec
sbb
pop
inc
mov
arpl
lcall
inc
adc
loopne
mov
push
push
stos
dec
mov
and
decl
cli
sahf
or
jl
sub
fldt
scas
or
mov
mov
fdivrl
iret
rolb
pop
sub
pop
inc
mov
subl
mov
mov
repnz
cmpsb
insb
jg
xchg
adcb
mov
jl
mov
push
pushl
es
xchg
incb
push
jnp
int
mov
cmp
xchg
xor
mov
mov
repnz
and
popf
js
test
cmp
std
ljmp
dec
lods
fists
and
icebp
or
aad
and
lret
sbb
mov
mov
test
call
popa
fnsave
loope
inc
std
xchg
shlb
imul
jge
pushf
jns
push
icebp
pop
jmp
cmp
aaa
mov
jno
push
jle
adc
sub
jae
call
bound
inc
sub
add
or
mov
ja
out
shr
sbb
sbb
lcall
and
pop
cmp
add
fists
sar
add
in
xchg
ret
xchg
xor
aam
pop
test
pop
stos
icebp
iret
loope
or
mov
pop
icebp
xchg
inc
mov
cmpsb
inc
or
jmp
insb
xor
and
movsl
cs
fsubrp
mov
insl
push
enter
insb
adc
lds
pop
rcrb
enter
repz
jp
mov
and
adc
dec
mov
adcl
insl
mov
add
insb
xchg
mov
adc
mov
mov
test
inc
xchg
adc
inc
aaa
rorb
push
sbb
insl
orl
jb
movsl
aas
inc
lock
nop
push
adc
in
cmp
test
outsb
lock
nop
test
lcall
jne
test
repz
rol
out
orb
pop
push
repz
dec
stc
or
lcall
jmp
insl
mov
adc
add
sahf
scas
test
xor
std
inc
sub
icebp
lret
lahf
aas
jmp
lods
hlt
jl
adc
sbb
push
push
jmp
mov
scas
sti
jb
aam
jecxz
push
cmpsl
mov
pop
xchg
fildll
sarb
addb
es
cmp
fcmovnb
pop
lock
inc
mov
adc
addr16
mov
or
cmpsb
test
add
push
fistl
rcrl
bound
fcmovb
mov
mov
mov
loopne
sysenter
mov
mov
pop
adcb
sarl
aam
out
mov
jns
mov
jecxz
lret
adc
adc
jg
and
jge
inc
cmp
sbb
sub
ja
cmp
inc
pop
loopne
jecxz
jl
jmp
rolb
cltd
sti
lahf
je
icebp
add
ja
dec
jb
push
jb
cmp
mov
ja
addr16
insl
jmp
movsl
dec
mov
cmp
mov
mov
jl
stos
push
inc
cmp
pop
cmpl
mov
flds
dec
lods
lds
arpl
pusha
mov
jl,pn
mov
mov
push
lea
add
mov
xor
mov
mov
mov
gs
mov
dec
inc
fmuls
push
mov
sbb
xor
sub
and
fistpll
ss
cmp
out
lds
or
clc
mov
into
jl
jne
ret
pushf
loop
popa
fs
jnp
lea
lods
cmp
mov
jmp
aaa
mov
lods
inc
mov
fidivrs
inc
or
add
or
inc
ffreep
mov
jbe
cld
sbb
xor
jb
mov
push
or
mov
dec
movsl
pop
pop
enter
cmpsl
mov
out
jb
push
shlb
push
inc
mov
ret
mov
or
mov
scas
sub
in
adc
lods
push
lret
mov
in
mov
inc
xor
mov
lods
mov
sbb
std
mov
mov
stos
mov
push
mov
mov
rcr
and
push
fbld
ret
jecxz
pop
int
pop
inc
mov
cld
add
sbb
pop
adc
lds
insb
in
mov
movsb
jmp
and
ljmp
mov
mov
adc
push
fists
jmp
lds
sbb
ja
jno
sub
ljmp
mov
sahf
mov
sub
mov
das
arpl
push
adc
push
push
es
dec
xchg
adc
loopne
xlat
daa
dec
jns
mov
and
mov
insb
nop
je
clc
mov
out
mov
ret
cmp
mov
xchg
push
in
jmp
fs
gs
jge
bound
adc
sbb
xchg
adc
adc
lret
incl
xor
test
enter
mov
fdivl
adc
enter
mov
or
inc
dec
es
fmull
ret
aam
cmp
cmp
dec
lret
push
ret
aam
mov
inc
lods
xchg
cmp
stos
adc
popl
sbb
jb
repnz
add
mov
and
adcb
ret
nop
sub
fcoms
scas
stos
push
cmc
inc
sarb
jmp
pop
xlat
cmp
mov
mov
ljmp
cmp
mov
push
faddl
lcall
sbb
xor
push
sar
mov
fbld
pop
out
add
andl
testl
xor
daa
mov
pop
add
aaa
pop
sbb
repz
sub
insb
popf
out
aaa
mov
nop
scas
test
or
or
and
push
cmpsb
cmp
jmp
scas
ljmp
rcrb
jno
sub
and
and
lcall
cli
cmc
add
jg
add
inc
or
and
mov
aad
fucomip
xchg
stc
jbe
andl
jb
loope
aaa
cmc
and
pop
push
orb
std
add
retw
and
pop
ljmp
and
dec
imull
fs
test
es
mov
test
arpl
ljmp
dec
loop
mov
in
repnz
mov
mov
sahf
mov
dec
pop
outsl
movsb
fisubs
gs
roll
aad
inc
ja
dec
outsb
or
bound
adc
jge
and
mov
bnd
pusha
dec
into
loopne
int3
inc
je
es
in
cli
loop
and
inc
jecxz
les
pop
cmp
out
leave
mov
jmp
repz
cltd
dec
jl
outsb
xchg
enter
add
lea
push
adc
data16
lods
cld
xor
das
mov
push
iret
sbb
and
or
push
fists
pop
mov
and
pop
clc
rclb
outsl
test
sti
pop
pop
pop
jecxz
dec
add
mov
xchg
lret
dec
pop
pop
xchg
and
inc
fs
jl
pushfw
mov
and
sub
mov
stos
icebp
pushl
pop
and
data16
push
lahf
inc
cmpl
inc
push
or
hlt
hlt
ret
gs
cmp
mov
add
push
mov
pop
clc
lods
test
xchg
test
fstpl
sbb
lods
gs
sub
pop
or
cmp
shrb
stos
inc
sub
push
loopne
pop
add
stos
pop
fucomip
cli
push
push
pop
mov
test
aaa
pop
hlt
push
cmc
fisttps
jle
push
sub
sbb
fisubl
imul
mov
jbe
xchg
rorb
ss
adc
in
mov
inc
xchg
mov
in
sahf
dec
mov
ja
sbb
inc
lds
mov
insb
stc
and
loop
xchg
lds
sbb
or
fidivrl
and
jno
imul
mov
testb
cmp
lock
aam
popa
or
push
or
push
imul
cmpsb
jb
out
sbb
xlat
test
mov
scas
mov
xchg
mov
cli
xor
stos
mov
insb
push
pushf
adc
int
adc
mov
out
arpl
clc
add
xor
aaa
xor
mov
fdivs
mov
adc
jo
in
incl
fisubrs
int3
xchg
pop
jae
ljmp
add
fsubrs
jbe
scas
lods
xor
ljmp
nop
sub
into
inc
adcl
cmpsb
loope
xchg
push
xlat
push
and
loope
cmp
movsl
sbb
mov
in
pop
add
and
lret
stc
or
loopne
shrl
cltd
pop
daa
addr16
and
jle
inc
out
shrb
cmp
inc
rep
mov
paddw
mov
sti
ss
gs
popf
or
adc
outsb
and
adcl
mov
push
cmp
int
dec
xchg
dec
push
jge
xchg
shrb
jg
push
pop
std
xchg
mov
mov
movsb
imul
adc
jns
decl
imul
inc
add
mov
xor
pop
mov
fistpll
mov
jecxz
dec
in
jns
pop
mov
arpl
mov
dec
repnz
sub
and
inc
sbb
shll
stc
addb
test
pushf
inc
ja
add
ljmp
push
sbb
adc
xchg
fildll
insb
sbb
jne
insb
mov
jb
xchg
adc
cmp
push
sbb
imul
in
loopne
into
pop
ret
nop
mov
into
push
lea
mov
ss
std
loop
mov
and
or
inc
pop
in
leave
testl
dec
mov
jg
sub
adc
dec
mov
test
ret
test
shlb
or
sbb
push
fcmovnbe
sahf
mov
lcall
adc
adc
xor
inc
mov
sbb
xlat
or
sbb
sbb
ret
sub
mov
dec
icebp
pop
pop
popa
in
push
xor
scas
insb
test
cmpsb
das
bound
dec
push
jg
sub
inc
aas
adc
cld
mov
lock
mov
push
outsb
and
aas
adc
add
ret
mov
cmpsl
add
aas
push
test
pop
add
cmc
daa
pop
std
fwait
cmpsl
mov
add
fidivl
cmpsb
js
test
mov
xor
in
std
ja
jnp
pop
mov
das
cwtl
ljmp
add
pop
data16
jne
mov
popf
or
mov
mov
loopne
dec
adc
dec
mov
or
xchg
xor
mov
test
pushl
adc
jecxz
imul
adc
dec
pusha
push
adc
std
inc
inc
cmp
clc
pop
sub
pop
mov
push
sub
hlt
call
or
dec
fdivrs
mov
cmc
lods
jns
ret
xchg
xchg
adcb
lock
int3
or
push
jle
dec
lret
insb
sub
data16
push
push
clc
sbb
cmp
xlat
sbb
adc
das
insb
or
mov
mov
lds
mov
pusha
cmp
and
lea
loopne
mov
subl
inc
jbe
fisubrl
add
outsb
fisubs
xchg
push
rcl
xchg
enter
dec
and
int
add
out
mov
loop
das
rorb
ret
push
lret
or
in
sti
xor
sbb
cli
add
sbb
subb
loope,pn
gs
call
incl
ljmp
inc
jne
out
loopne
loopne
inc
test
shr
je
mov
xchg
icebp
cmp
mov
push
mov
loope
iret
mov
iret
mov
push
lock
test
out
dec
shlb
dec
decl
cli
mov
addr16
sbb
push
xchg
xchg
loop
fistpl
mov
xlat
sbb
repnz
std
cmp
das
inc
sar
andb
sub
incl
and
adc
sbb
mov
push
push
cld
pushl
nop
inc
fadd
push
jmp
push
bound
or
stos
in
movsl
mov
repz
push
inc
test
loopne
pop
js
adcb
mov
xor
sub
xchg
jecxz
mov
jmp
nop
insb
pop
cli
pop
mov
mov
lret
and
sar
mov
in
mov
in
std
das
xchg
js
adc
out
push
lcall
icebp
cmc
mov
xabort
test
in
cmp
cld
dec
ret
inc
je
pop
pushf
dec
fwait
push
mov
std
andb
incb
jno
js
push
insb
ss
popf
push
lea
and
stos
aad
mov
mov
das
inc
xor
adc
js
test
aaa
pop
adc
jge
inc
dec
push
add
test
mov
cmpsl
aas
nop
and
sub
fisttps
jl
pop
mov
mov
adc
or
xchg
add
xor
je
sbb
or
sub
cs
shr
xchg
pop
inc
rorb
enter
mov
mov
imul
das
fstpl
mov
inc
push
dec
ret
sbb
js
in
mov
test
imul
and
adc
inc
jl
and
cmp
pop
cli
rcl
ljmp
add
xchg
popa
hlt
jb
mov
aad
test
add
xchg
inc
dec
push
jae
repnz
pushl
xchg
and
push
jo
in
inc
push
push
imul
push
mov
pop
cmc
sub
in
rolb
das
inc
mov
std
mov
cwtl
add
sahf
sub
call
orb
test
out
cli
rcrb
ds
cmpsl
fldl
pop
jns
mov
jg
pop
jo
add
inc
cmp
dec
fsubrp
push
cmp
cmpb
sbb
jmp
imulb
add
lret
mov
movsb
insb
mov
fnstsw
add
fmull
xchg
and
lods
fistpll
std
xor
dec
pushf
pushf
sbb
mov
mov
in
fwait
lods
popa
aas
imul
cmp
xchg
dec
push
cmp
or
icebp
lcall
or
adc
add
jecxz
shrl
ljmp
mov
mov
ret
sub
add
fwait
inc
out
in
jbe
jle
aam
in
mov
stc
sti
push
cs
inc
push
dec
in
add
sahf
and
jae
sahf
das
adc
pop
xor
adc
arpl
or
xchg
icebp
mov
lods
and
testl
dec
and
add
lock
sub
lods
push
add
sbb
outsb
jmp
push
cmpsb
pop
push
pushf
js
cmc
or
ja
imul
sub
inc
rcrb
add
push
mov
pop
and
mov
cmp
pop
int3
mov
mov
push
or
jg
mov
mov
in
pop
and
lea
enter
push
xor
aam
insb
sbb
mov
mov
int3
rol
cmp
fdivp
push
cld
outsb
or
xchg
movsl
js
out
inc
mov
mov
test
inc
cmc
stos
jo
adcl
adc
lock
in
outsl
push
cmp
mov
dec
inc
sub
and
push
fadds
fldenv
hlt
aad
divl
mov
mov
xor
mov
push
pop
lods
jge
sbb
das
xor
pusha
inc
mov
xor
movsb
fsts
sbb
pushf
mov
xchg
mov
in
xchg
rcrb
inc
ds
das
mov
push
pop
jo
pop
add
imul
mov
ja
inc
add
xor
mov
add
aad
lcall
ljmp
les
notl
sti
and
mov
jg
ss
jbe
mov
mov
stos
leave
sbb
or
push
cmp
pop
shlb
aaa
cli
std
ret
sbb
push
jmp
rcr
hlt
jg
fsubr
or
jne
xchg
clc
adc
ljmp
push
les
adc
mov
and
dec
aad
xchg
xor
icebp
mov
xor
fsub
movsl
sbb
sbb
outsl
mov
aam
lds
fcmovbe
in
xor
inc
bound
test
cmp
push
fbstp
dec
iret
or
call
in
loope
mov
mov
xchg
or
jp
inc
loope
mov
cmpsb
adc
mov
testb
mov
aad
mov
or
mov
ficoms
rcll
add
enter
cmp
jmp
rcr
or
mov
sub
sbb
sbb
mov
aam
add
icebp
into
push
inc
ja
sbb
rolb
aam
addr16
and
jg
incb
js
xor
repz
sbb
jle
mov
loopne
push
out
jnp
cwtl
jp
fwait
jge
repnz
sti
incb
aam
xor
cs
push
filds
cltd
adc
mov
jno
fstpt
call
jl
nop
adc
roll
ljmp
loop
jnp
cltd
imul
jo
cmp
lahf
das
std
push
mov
mov
ljmp
mov
fmull
fs
mov
in
ret
imul
ret
rolb
popa
or
push
add
pop
xor
inc
rcrb
ds
pop
push
inc
add
in
jg
mov
int3
mov
aaa
dec
lret
addr16
dec
test
pop
mov
dec
pop
mov
bound
add
insl
mov
scas
lea
movsb
ja
pop
mov
fldl
xlat
fs
mov
test
sar
incl
adc
movsb
inc
fstpt
add
shlb
lret
int3
mov
sbbb
push
mov
adc
mov
pop
loopne
mov
jae
das
add
mov
lds
popa
idivl
in
dec
shlb
or
and
or
sub
jg
test
jno
adcb
inc
ds
outsl
add
stc
mov
ljmp
cmp
cmp
dec
das
push
cmc
inc
fmull
pop
jb
movsb
add
shrb
andl
sbb
stos
ret
or
dec
add
cwtl
push
daa
inc
xorl
dec
add
rclb
add
iret
push
mov
mov
aam
dec
scas
push
jns
and
adcl
cli
pop
mov
and
mov
cwtl
mov
mov
int3
shlb
cmp
sbb
push
jp
inc
mov
mov
mov
mov
cwtl
aam
push
jge
imul
mov
aaa
js
add
clc
dec
xorl
push
mov
loopw
loopne
push
mov
repz
mov
pop
sbb
push
int3
lcall
imul
stc
jo
xchg
insl
stc
xor
inc
sub
pusha
mov
fists
xchg
push
cmc
xor
push
outsl
lcall
sbbb
sub
jmp
in
jl
shrb
decl
push
sbb
mov
inc
inc
add
inc
fbstp
in
adc
sbb
adc
andb
mov
add
pusha
push
fs
orl
inc
cmp
leave
push
adc
add
clc
pop
mov
xor
mov
xchg
adc
sub
test
cmc
das
std
out
ret
xchg
jb
and
mov
movsb
mov
jge
cmc
mov
hlt
iret
adc
add
fcompl
push
pop
call
enter
add
or
sbb
cmp
mov
sub
or
sub
and
mov
movsl
aaa
loope
fildl
push
inc
mov
lods
jo
ljmp
pop
icebp
or
mov
or
clc
xchg
fdivp
test
sub
dec
inc
sbb
push
lea
cli
mov
sti
xchg
mov
xor
mov
cmp
test
stc
call
cmp
clc
pop
inc
call
icebp
xchg
inc
jnp
dec
inc
les
popa
jne
inc
jg
sub
sbb
out
xorl
mov
fidivrl
and
fwait
lcall
lods
xchg
add
loopne
mov
out
sbb
xchg
dec
push
xchg
repz
nop
idivl
inc
shlb
push
mov
out
cmpsl
sub
daa
push
mov
xchg
ret
jge
dec
cmp
lret
push
nop
pushf
cwtl
nop
arpl
fdivrp
out
movsb
dec
jne
mov
push
outsb
jge
and
push
jge
pop
sub
jno
add
fisttps
xor
adc
aaa
rcrb
std
jae
lock
popl
cli
mov
xor
repz
cmp
std
sbb
sahf
or
pop
fs
push
and
lods
imul
cli
stos
push
sbb
xchg
test
and
lcall
push
and
rolb
mov
push
cltd
mov
and
and
fcoms
loopne
xor
jge
cmpsl
paddq
test
sbb
push
call
mov
mov
incb
mov
jg
ss
and
pop
add
xor
dec
arpl
pop
xor
sub
inc
or
stos
loop
dec
pushf
xor
jl
xchg
mov
mov
ljmp
imul
dec
mov
lea
dec
push
test
lods
test
add
xchg
loopne
mov
iret
cs
sub
xor
addr16
frstor
je
in
loopne
std
scas
sti
mov
sbb
xchg
push
inc
xor
je
lea
xor
sub
mov
imul
idivl
dec
adc
jge
pusha
adc
mov
xchg
mov
push
add
push
pop
push
aaa
ss
mov
das
add
bound
mov
cwtl
mov
inc
or
add
cmpsl
data16
lds
gs
mov
outsb
aaa
sbb
scas
les
cmp
outsb
insl
stos
dec
pop
mov
cmp
push
insb
out
dec
fdivrl
mov
mov
sbb
sub
and
pop
inc
push
mov
dec
pushf
pop
mov
jb
cmp
mov
dec
add
dec
xor
negl
mov
insb
cmp
mov
sbb
call
cltd
cs
pushf
and
push
or
mov
lea
movsl
test
and
out
sub
pushf
or
mov
mov
in
mov
daa
mov
xchg
cltd
cmp
xor
mov
mov
lret
and
and
xor
jl
mov
xchg
nop
in
divl
fcmovnbe
addb
fwait
pusha
pop
mov
mov
rorb
mov
neg
lahf
hlt
mov
xchg
out
fnsave
xchg
or
das
nop
jno
fcomp
mov
dec
mov
aad
scas
push
decl
aaa
add
jg
push
lret
aad
les
jl
mov
jno
add
pop
sbb
xchg
inc
cwtl
mov
jg
dec
pop
xchg
cmp
aad
pop
push
je
ja
mov
inc
in
pusha
enter
clc
mov
fimuls
xchg
lahf
nop
test
je,pn
lock
outsl
sbb
mov
aad
loopne
test
stos
lock
out
dec
cmpsl
xchg
jl
stos
popf
fldt
lret
test
in
das
mov
xor
push
aam
test
icebp
je
int
mov
sbb
not
add
loop
outsb
xlat
dec
nop
add
xor
dec
test
sub
push
mov
inc
sti
nop
inc
jl
jb
push
sbb
mov
movsb
sub
ret
mov
es
xchg
lahf
lock
mov
mov
mov
mov
outsb
cmp
mov
and
cwtl
mov
pop
add
adc
jb
push
outsb
xchg
in
movsb
sbbl
inc
add
mov
fnsave
push
dec
mov
inc
or
jno
mov
popa
fiaddl
jge
test
lret
pop
mov
in
rclb
ja
adc
sbb
ficoml
movsl
xor
push
outsl
in
mov
jecxz
jg
in
mov
int
jg
dec
xchg
sub
xchg
aas
or
push
adc
les
cmpsb
ret
nop
cmp
in
and
lock
mov
xchg
xchg
and
add
pop
mov
push
mov
icebp
imul
or
push
or
in
movsl
sbb
js
add
mov
or
pop
out
and
cs
ret
inc
call
or
cmc
mov
lock
mov
jbe
jne
mov
fdivs
add
out
mov
mov
push
add
jle
mov
shll
or
test
outsl
pop
dec
jmp
mov
cmp
lret
shlb
cltd
dec
mov
rcrb
lret
jecxz
dec
clc
lods
mov
mov
hlt
fdivrs
sub
pop
mov
cmp
faddl
jmp
test
icebp
pop
pop
loope
seta
adc
test
adc
sbb
mov
jbe
push
popf
and
xor
lea
addr16
aam
fdivr
outsl
lahf
push
adc
xchg
cltd
mov
lret
add
ljmp
pop
and
test
inc
mov
mov
push
dec
or
lock
in
leave
enter
jne
jns
sbb
add
sbb
loopne
pop
and
lods
add
xchg
inc
dec
out
fsubr
mov
mov
das
cmp
jecxz
movl
sub
das
fyl2xp1
roll
mov
sub
fldcw
mov
inc
arpl
push
cmp
jmp
and
xor
insb
push
and
adc
outsl
cmc
es
inc
dec
bswap
mov
test
add
lock
inc
pop
lret
lods
sbb
jg
movsl
cmpsl
mov
pop
addr16
add
sbb
lcall
pop
inc
add
inc
je
jno
cmpl
ja
movb
dec
stc
cmp
ss
outsb
sbb
sub
rolb
and
pop
test
incb
inc
out
in
add
adc
out
inc
mov
outsl
lcall
imul
jecxz
and
adc
lret
cli
insl
stc
dec
inc
jns
sar
jl
xor
pop
pop
leave
sbb
js
jb
mov
lds
jle
fnstsw
pop
add
ret
adc
hlt
daa
push
idivl
xchg
add
aam
sub
fmuls
mov
or
rol
sbb
int
imul
stos
sbb
sbb
cmp
stos
push
mov
test
rorl
push
stos
mov
cltd
sarl
add
push
divb
call
push
sbb
rcl
sub
add
pop
xor
ljmp
lods
fdivs
pop
pop
aaa
cmp
cld
aaa
shll
inc
test
das
inc
in
andl
in
outsb
lock
cmpsl
fistpll
xchg
in
xchg
xchg
push
mov
lea
inc
lahf
subl
das
xchg
and
xor
stos
pop
cmc
xchg
loopne
repnz
dec
idiv
pop
and
stc
fildll
adc
into
int3
inc
mov
mov
je
jp
jno
sub
mov
xchg
dec
icebp
pop
fsub
inc
lea
out
sub
or
mov
jge
push
mov
ljmp
insl
mov
and
inc
sub
popf
sbb
jb
dec
cld
pop
mov
inc
jge
adc
inc
je
or
mov
jge
push
xor
into
stos
push
jl
fdivrl
ret
mov
push
ss
mov
xchg
ficoms
sub
addr16
jb
les
inc
cmp
orb
add
push
icebp
fbstp
xlat
sbb
cmpsb
je
mov
xor
imul
aas
push
xor
sbb
je
push
xor
mov
outsl
inc
in
clc
testl
divl
insl
icebp
cs
lcall
inc
ljmp
xchg
ret
or
icebp
add
cmc
jg
mov
jecxz
out
jno
lret
int3
mov
mov
push
xchg
pop
leave
mov
in
mov
hlt
cmp
subl
outsl
fstp
mov
nop
or
and
mov
fldenv
lea
adc
cmpsb
mov
hlt
adc
or
cmp
test
xchg
lret
push
aaa
sub
hlt
call
mov
stos
and
nop
scas
push
push
or
jg
dec
fsubs
ljmp
pop
jg
cli
xlat
stos
call
pop
add
addb
incb
lret
pop
pop
jne
hlt
push
xor
pop
bound
xchg
push
jne
insb
movsb
mov
das
aam
add
arpl
mov
inc
inc
rcr
inc
cltd
or
push
std
push
loop
ss
mov
push
push
or
sahf
dec
sbb
mov
dec
or
pop
and
and
out
subl
mov
pop
fadds
inc
cmpsb
push
test
and
or
clc
push
adc
into
sub
mov
push
mov
pop
loopne
inc
push
lcall
sbb
sbb
sarb
or
pop
sbb
sbb
fwait
mov
adc
mov
lds
sahf
and
outsl
cld
adc
sbbb
incl
sub
jp,pn
in
out
rep
out
xchg
mov
sarb
mov
sbb
aad
std
clc
fcmovnb
push
or
inc
lods
lcall
aam
mov
jmp
das
incb
rol
fistpl
inc
call
sbb
xor
outsb
addr16
mov
xlat
xchg
loop
out
jmp
push
subb
add
push
jl
les
jno
cli
mov
imul
outsb
push
ficompl
dec
sbb
xchg
rcl
jne
cmpsl
inc
pop
or
sarb
test
sub
mov
inc
sub
mov
hlt
cmp
mov
push
or
jae
insl
je
xor
cs
push
fildll
cli
ret
xor
and
add
fistl
pusha
cld
sbb
ljmp
repnz
xchg
push
in
pushl
add
lret
sub
xchg
or
stos
push
daa
jg
xor
stc
inc
mov
jns
imul
test
cs
daa
and
vmovlpd
outsb
sar
adc
in
adc
jmp
hlt
ret
idivb
mov
jp
test
mov
loop
test
in
pop
rcrl
pop
xchg
cmc
inc
jle
cmp
push
ffreep
je
xor
cltd
clc
aad
in
mov
sbb
mov
stos
cmc
stos
movsl
decl
or
nop
ss
xchg
fdivr
out
mov
cmp
fadds
jge
xchg
mov
test
fists
out
mov
outsb
in
add
mov
std
incl
sbb
inc
cmp
popf
and
sbb
into
pop
maxps
clc
aaa
les
jle
fsubl
jg
movsb
cltd
js
out
in
leave
inc
cmpsl
or
data16
movsl
test
mov
repz
xchg
cmp
fucom
scas
enter
or
push
jae
adc
sarb
push
xchg
push
jns
xorl
stos
add
clc
sbbl
cmp
pop
test
andb
icebp
aad
call
mov
xchg
push
push
popa
loopne
movl
repnz
movsb
mov
mov
inc
jl
hlt
loop
inc
or
je
cmp
scas
jo
cmc
std
pop
stc
push
sarl
pusha
xor
mov
test
xor
in
pop
mov
in
fwait
pop
push
es
lea
inc
sbb
je
ljmp
imull
ss
stos
mov
aam
popl
aaa
decl
and
nop
push
pop
jecxz
dec
out
repnz
sub
mov
adc
daa
dec
pushf
dec
out
jmp
sub
sbb
test
aaa
mov
inc
and
cmp
cmp
rolb
sub
mov
sub
jge
test
jecxz
pusha
cmp
in
popf
adc
imulb
sbb
sub
incl
jle
adc
pop
loop
xchg
cmp
test
fs
popf
mov
push
outsl
add
and
jl
adc
mov
jg
das
cld
mov
lds
or
lock
push
ret
dec
xchg
mov
lds
or
dec
xchg
sub
pop
cld
ret
add
sub
push
rcrb
test
adc
in
fstpt
fsubrp
imul
repz
testl
cli
pop
xchg
sub
cltd
mov
xchg
jbe
inc
outsl
cld
call
es
mov
jle
xor
aaa
decb
out
mov
pop
fs
or
lcall
loopne
adc
aaa
fwait
fwait
imul
or
cli
or
dec
lds
add
ljmp
push
imul
icebp
and
ja
repnz
add
pusha
push
xor
mov
in
stos
push
xor
shlb
cwtl
movsb
mov
pop
inc
adc
std
sbbb
inc
lea
fldt
test
notb
dec
repz
mov
cmp
pop
bound
inc
xor
dec
outsl
xchg
xlat
inc
dec
cs
aaa
mov
lods
mov
cmp
pop
stos
mov
in
lds
lods
pop
fwait
sub
rorb
movsb
add
and
or
loop
cmpsl
repz
jp
popa
push
mov
iret
stc
insl
push
and
cmp
mov
mov
inc
js
xor
push
fnstsw
jbe
leave
pop
add
pop
cmp
enter
aad
pop
add
mov
ja
jbe
xor
out
mov
ljmp
adc
or
mov
add
jp
sarb
fistpl
sub
mov
roll
add
lret
aaa
add
xor
call
gs
and
in
mov
outsl
pop
sbb
int
pop
adc
mov
mov
cmp
testb
sbb
lahf
stc
inc
xchg
add
xor
adcb
sub
lds
out
mov
loopne
imul
insl
inc
fisttpll
dec
push
rclb
xor
call
aas
mulb
add
xchg
popf
or
out
xchg
cmp
mov
in
lods
pop
ja
mov
lock
std
por
adc
pop
icebp
inc
fistpl
push
fdivrl
xor
in
lahf
shlb
jg
clc
pop
pop
pusha
mov
fisttpll
sbb
jg
push
inc
xchg
or
std
adc
sub
sahf
fisttps
pop
and
push
mov
and
pop
mov
pusha
pop
mov
pop
rcl
mov
das
cld
pushl
pop
out
mov
sub
mov
sbb
pop
ret
ret
fiadds
xchg
subl
fwait
inc
mov
jnp
lret
das
hlt
aam
sbb
xchg
stc
inc
sub
stc
cmpb
nop
adc
fisttpl
jae
and
in
add
mov
push
push
adc
mov
rclb
mov
std
pusha
test
loopne
aaa
inc
mov
pop
je
add
or
fsub
push
adc
add
gs
xlat
jo
pop
outsb
sbb
mov
pop
inc
jmp
pop
fmul
push
leave
xchg
mov
xchg
push
push
enter
sbb
mov
dec
pop
lret
and
jnp
or
pop
loop
pop
jg
idivb
push
mov
mov
jecxz
leave
ljmp
mov
push
jmp
std
nop
mov
cli
mov
pushl
jb
cmp
or
clc
cmp
out
and
adc
add
add
xchg
mov
mov
inc
mov
je
adc
mov
mov
jecxz
rclb
stos
shl
cmp
mov
cld
aad
decl
loope
mov
or
cwtl
xlat
and
loop
inc
ret
or
adcb
movsb
fisttpl
inc
filds
inc
outsb
mov
fstpl
mov
or
mov
pop
enter
pop
jmp
add
mov
mov
test
dec
test
and
sbb
shl
fistps
mov
lods
enter
xor
cmpsb
pop
xor
scas
mov
dec
call
sbb
fcom
xchg
fs
pop
shr
mov
jo
jns
mov
dec
adc
sahf
jecxz
insl
jmp
sub
js
icebp
out
push
dec
and
andb
ljmp
in
or
sbb
rclb
add
fldenv
pop
xor
mov
les
cltd
inc
mov
loope
jnp
ss
mov
ret
nop
cmpsl
hlt
mov
mov
jmp
movsl
pop
fwait
or
stc
push
insl
fldt
popl
lds
sub
test
imul
pop
andb
hlt
fwait
sub
xor
push
jg
xor
je
aaa
sub
adc
into
fstl
sbb
push
or
ret
in
mov
nop
divb
ljmp
sbb
push
shrl
mov
mov
jne
cmp
xchg
mov
nop
push
fcomi
inc
jae
test
pop
daa
mov
in
int3
add
mov
in
ret
insl
sbb
xchg
stc
roll
adc
jbe
push
pop
shrl
test
add
adc
inc
sub
and
sahf
outsl
sbb
jmp
inc
aas
mov
hlt
add
dec
mov
sub
pusha
push
rclb
cli
xchg
ss
rcll
add
test
and
bound
mov
testb
xchg
mov
ret
or
mov
stos
pop
jmp
push
mov
outsb
movsl
dec
mov
sbb
xchg
sbb
pop
lret
push
lds
xor
cmpsb
mov
push
imul
das
addr16
loop
cltd
mov
mov
pop
js
add
or
pop
loopne
incl
inc
fdivs
ror
or
sbbb
or
call
dec
insl
mov
add
dec
and
fisttps
std
mov
ret
jg
loop
xlat
pop
enter
aad
subb
out
lds
jmp
cmc
mov
insl
add
int3
add
mov
loopne
fildl
sub
mov
inc
dec
add
mov
push
jno
fwait
ret
cmp
push
pop
sub
int3
sub
jne
add
test
sbb
arpl
ljmp
mov
mov
mov
insl
test
mov
add
notl
mov
inc
das
adc
mov
mov
insb
adc
mov
mov
add
push
cwtl
mov
add
pop
xor
stos
mov
xchg
shrb
loope
xor
imull
inc
or
fistps
lcall
mov
mov
mov
jb
nop
adc
xchg
pop
lock
test
jl
test
negb
imul
outsl
sub
adc
icebp
xchg
mov
fdivrl
xchg
jnp
xchg
arpl
fcompl
xchg
and
fcomp
fstl
imul
mov
je
stos
and
fmuls
loopne
movsl
add
cmp
pop
add
das
sbb
sub
mov
fidivl
lahf
and
jno
or
dec
jge
and
sub
sbb
add
lcall
push
pop
mov
jl
and
icebp
mov
and
icebp
fs
icebp
sbb
pop
xor
mov
decl
xchg
jge
dec
mov
inc
push
into
lret
fisttpl
cmc
or
mov
mov
inc
stos
testb
cmp
cs
js
mov
mov
dec
add
fstp
mov
aaa
mov
push
or
loope
inc
jp
inc
pop
cmpsl
pop
jl
sbb
sti
or
jge
push
push
jecxz
dec
les
xchg
xchg
mov
inc
cmp
mov
adc
push
mov
lock
nop
add
clc
movsb
or
xor
push
arpl
sbb
lds
cmp
pop
cmp
daa
repnz
jbe
loopne
inc
aaa
mov
dec
insl
fcmovnbe
xchg
dec
jae
push
shlb
inc
and
fisttps
cmpsb
jb
mov
add
cmpsb
sti
test
gs
mov
mov
lods
call
aad
inc
std
sub
cmp
das
xchg
jne
cmp
clc
inc
insb
adc
inc
fisubs
arpl
push
stos
xor
lock
add
pusha
enter
das
mov
mov
or
stc
cmp
cli
aaa
adc
je
ss
mov
xchg
mov
test
into
or
lret
xchg
call
das
pop
in
ja
loop
lcall
mov
outsb
shrb
fistl
repnz
fisubrs
jge
pop
adc
adc
and
pop
dec
pop
jo
add
cli
sbb
or
in
mov
push
sbb
shrl
lcall
mov
adc
hlt
mov
mov
or
xchg
xchg
mov
dec
jo
jge
cmp
loope
push
out
outsb
in
xor
bound
or
sbbl
divb
hlt
aaa
push
jne
inc
in
andb
sbb
sbb
push
fstps
adc
fimuls
testb
push
adc
push
movsb
add
or
xchg
sbb
fwait
pop
or
push
cmpsb
xchg
inc
jo
jne
adc
fildl
push
and
mov
push
out
xchg
or
mov
jbe
pop
cmp
fdivr
outsb
iret
push
imul
int3
sbb
mov
cmpsb
sbb
add
sub
and
mov
test
dec
fucomp
mov
shrb
push
sbb
or
fdivl
dec
jg
push
xlat
push
cmp
daa
fldt
mov
fsubrp
dec
add
cmp
dec
int3
inc
loopne
inc
fsincos
pop
mov
inc
push
jae
movsb
adc
dec
hlt
xchg
ljmp
push
sbb
movsl
xor
testb
dec
or
add
add
dec
add
insb
sub
xchg
mov
push
mov
icebp
addb
push
pop
jg
add
add
outsl
insl
adc
cmp
outsl
aaa
or
clc
stos
jl
test
push
lea
or
in
lods
paddd
arpl
arpl
adc
sbb
ffreep
in
push
fcmovu
and
cmp
pop
popa
mov
cmpsl
pop
pop
and
pop
stc
mov
cs
or
inc
inc
mov
adc
mov
and
icebp
sbb
adc
bound
sub
ds
mov
clc
outsl
pavgb
rol
imul
out
fbld
out
or
in
movsb
sbb
ljmp
bound
sbb
lcall
sub
cmc
lcall
mov
push
pop
pop
mov
repnz
outsl
call
stos
enter
or
mov
xor
mov
test
and
jle
stos
jo
inc
sbb
sbb
dec
scas
sysenter
push
sub
adc
cmpsl
stos
popf
loope
in
lea
nop
push
stos
mov
daa
pop
in
call
out
mov
inc
cmp
cltd
stos
outsl
fbld
lret
fcomip
gs
scas
or
mov
fidivrs
lahf
and
inc
or
mov
in
pop
dec
cmc
inc
insl
mov
outsl
decb
push
fiaddl
mov
pop
cmpsl
repz
ja
mov
xchg
sub
test
xor
sub
xchg
and
lcall
fcoms
es
ret
scas
xor
push
xor
rorb
xor
aam
jbe
iret
mov
fidivrs
cmpsb
loope
das
clc
mov
push
es
outsl
adc
mov
cld
ret
lea
stos
cmp
leave
or
inc
cmc
stc
movsl
jmp
adc
jp
sti
aam
inc
int3
rorl
fcoms
jbe
sbb
push
mov
jbe
test
fistl
inc
adc
roll
call
mov
pushf
mov
pop
sbb
and
shl
fcoms
mov
out
jbe
hlt
in
outsl
lahf
mov
mov
push
popf
icebp
ret
mov
std
shrb
rorl
out
stc
test
es
rorb
and
loop
cltd
out
shrl
fidivl
dec
iret
es
rol
testb
mov
test
in
mov
mov
pushf
repnz
mov
xchg
inc
lock
jmp
dec
push
movsb
lret
fldl
aam
sbb
sub
into
sub
je
fmull
repnz
adc
out
pop
sbb
cmp
fwait
cmp
jno
dec
ja
xor
fimuls
sbb
mov
aam
or
dec
out
jge
fsts
xchg
xor
push
pushf
mov
xor
fiaddl
rcr
dec
fiaddl
pop
je
mov
mov
das
mov
mov
mov
sub
or
fdivs
insb
ffree
leave
pop
inc
movsl
cli
lcall
add
cltd
jnp
inc
hlt
stos
dec
jecxz
test
mov
std
xor
or
mov
loopne
aam
push
lret
xor
fnstsw
fsubs
mov
mov
sbb
addr16
cmpl
out
and
subl
push
mov
push
mov
insb
sub
js
push
loope
dec
push
add
pop
add
mov
aaa
push
add
xchg
sub
lods
mov
je
scas
lods
mov
adc
mov
jb,pt
sahf
test
pop
inc
push
sbb
mov
sbb
outsl
fmull
lret
sub
jmp
mov
mov
int3
and
mov
mov
xchg
inc
fsubs
mov
jne
sub
xor
in
mov
sub
mov
xchg
shl
jp
aad
aaa
jb
xchg
push
jecxz
fldl
std
aam
xor
outsl
shrl
setno
xchg
push
dec
data16
and
jecxz
sbb
sub
ljmp
in
jne
mov
fs
jmp
out
fnstsw
shr
add
fsts
stc
inc
vpsrad
insb
xchg
or
incb
icebp
sub
dec
aaa
mov
imulb
jmp
jg
hlt
jl
loope
lods
mov
push
push
lcall
mov
mov
addr16
test
repz
push
dec
sbb
push
pop
sbb
mov
pop
mov
jbe
roll
repnz
add
inc
test
jmp
call
insl
enter
or
std
cli
fwait
mov
out
mov
pop
mov
mov
mov
jo
jg
cmp
int
push
push
and
je
add
dec
insb
jns
test
mov
mov
in
subl
lock
adc
std
lods
add
sbbb
out
imulb
shll
cli
cmp
test
inc
rolb
or
out
ljmp
xor
data16
mov
fistpll
lret
mov
cmpl
pop
and
gs
pop
scas
dec
jnp
mov
fimull
das
std
movsl
mov
cmc
sbb
imul
jg
in
aaa
fdivrl
outsb
pusha
dec
icebp
dec
jne
mov
cmp
jne
mov
cmpsb
scas
sub
cmpsb
nop
mov
outsl
fisttps
sahf
jle
push
out
mov
stos
mov
xchg
movsl
cmp
ret
dec
pop
lea
cmp
push
mov
insl
pop
ljmp
stc
mov
xchg
int3
mov
fisubrs
mov
or
jmp
sbb
lds
cld
push
fdivl
inc
mov
mov
pop
leave
dec
sbb
mov
dec
scas
andb
adc
loope
add
adc
mov
jp
dec
in
inc
jnp
leave
fisttps
lods
or
cmc
cli
xchg
cmp
ret
adc
rcrb
fdivl
ljmp
adc
inc
ret
scas
divb
mov
adc
je
popf
adc
dec
inc
cmp
sbbl
in
ds
ss
into
fsubs
scas
dec
jo
mov
es
rdpmc
or
adc
lods
lret
gs
sub
mov
stos
orl
addl
or
inc
jecxz
lods
xor
inc
jae
fbld
mov
inc
sbb
loop
or
xor
stos
arpl
cli
pop
mov
xor
fstl
outsl
bound
mov
or
rcr
fisttpl
or
int
outsl
cmp
faddp
xchg
adc
add
or
add
les
xor
pop
or
xchg
fdivrs
stc
push
sti
scas
outsb
fwait
or
icebp
test
stos
sbb
int
pop
mov
sbb
cmp
sub
push
rorl
push
adc
cmp
mov
in
enter
add
mov
rolb
popa
rcrb
mov
clc
pop
push
dec
in
popl
cmp
xor
sbb
fdiv
lock
in
aaa
jns
xor
jb
rcl
ficoms
and
or
or
adc
mov
out
sub
xchg
add
movsl
xchg
sbb
call
dec
jne
mov
sbb
cwtl
push
outsl
or
push
push
cmc
stc
adc
and
xor
mov
adc
or
cmpb
or
movsl
sub
es
add
movsl
mov
in
xchg
cmp
xchg
mov
push
aaa
push
xor
les
dec
push
fcomi
lods
rcrl
mov
adc
ror
and
lea
aas
cmpsb
mov
and
lods
cli
test
cwtl
popf
mov
sahf
jmp
dec
jecxz
das
sarb
loopne
rcr
andb
fists
lods
pop
int
test
adc
mov
test
lock
xchg
cmc
mov
mov
inc
popf
pop
push
jne
cmp
mov
xor
mov
mov
xlat
xchg
lds
lcall
js
and
lahf
mov
fcos
push
fdivr
outsb
add
mov
or
mov
fchs
test
mov
mov
cltd
sub
push
aaa
push
jp
dec
and
push
sti
add
adc
pop
and
sbb
ds
sub
mov
inc
cmp
mov
sbb
pop
xor
mov
push
sub
out
repz
dec
aad
inc
in
and
jge
out
ret
push
mov
imul
rolb
repz
mov
pop
xchg
shl
add
xchg
mov
js
hlt
xchg
leave
mov
jl,pt
mov
adc
mov
cwtl
inc
push
loope
out
mov
pop
imul
cmp
push
lcall
loopne
mov
loopne
push
sbb
push
adc
pop
cld
test
inc
movsl
xchg
cmp
sub
mov
sbb
mov
ret
or
push
lea
outsl
mov
add
inc
cmp
aas
inc
fucomip
sbb
mov
hlt
jecxz
adc
or
outsl
lock
jp
dec
in
lret
jb
mov
add
adc
add
hlt
lret
mov
mov
scas
mov
lds
add
mov
ja
std
mov
ja
js
mov
fimuls
xor
add
adc
cwtl
test
insl
mov
arpl
popf
cmp
jecxz
push
out
pop
jecxz
add
out
or
push
add
out
mov
test
das
jg
cmpsb
xchg
mov
clc
pop
jb
popl
stos
mov
mov
je
pushf
bound
mov
jg
fldl
cmp
fbstp
inc
icebp
pop
sub
sarl
cld
pushl
mov
mov
test
jg
out
fdivr
dec
dec
push
movsb
dec
sbb
imul
ffreep
aaa
inc
fildl
cwtl
cmp
sbb
repz
addl
das
push
add
mov
sbb
xor
clc
out
inc
imul
std
inc
dec
or
and
pop
push
push
add
jg
mov
fdivrp
iret
loopne
or
fwait
int
addr16
xchg
jno
cltd
stc
push
call
movsl
and
or
mov
lock
mov
iret
push
dec
and
cmpsl
arpl
pop
inc
mov
nop
rcrl
add
jge
js
sbb
jo
push
ret
dec
sbb
adc
pop
push
test
and
and
popl
xchg
xchg
sub
adc
inc
push
mov
add
cmp
or
jg
push
loop
lds
mov
or
jnp
add
add
sbb
or
dec
arpl
vandps
xor
xchg
and
inc
and
inc
inc
test
push
nop
daa
ret
mov
inc
popf
adc
pop
fcomps
and
or
nop
jno
push
dec
lea
sysret
jnp
mov
mov
mov
movq
xor
insl
adcb
pop
clc
or
cmc
pop
fcoms
pop
movsl
mov
aam
push
dec
andb
fisttpl
dec
clc
mov
mov
fsubrl
jp
inc
int
xlat
sbb
push
push
fdivrp
inc
notb
mov
mov
movsb
loope
add
mov
sbb
pop
into
jnp
das
mov
push
mov
dec
dec
std
dec
cld
sub
lret
imul
mov
cwtl
fdivr
inc
in
and
movsl
imul
cltd
fidivl
loopne
jmp
xor
sbb
fisubrs
mov
inc
xchg
cs
dec
add
clc
mov
lahf
fs
outsl
inc
mov
jp
jecxz
mov
mov
pop
idiv
pop
fisttpl
cmp
pop
and
mov
mov
or
stos
int3
mov
daa
testb
push
icebp
lahf
jae
stc
adc
dec
outsl
sbbl
add
mov
xchg
or
sub
xchg
insl
add
jge
push
insl
pop
mov
repnz
pop
xchg
das
cld
movb
popa
and
adc
ljmp
lea
add
push
sbb
mov
sti
jg
test
inc
gs
cmpb
outsl
jne
int
jg
sub
xlat
and
sub
pop
add
inc
jnp
in
out
push
lds
inc
int
add
dec
loope
incl
fcmovb
adc
lock
incl
out
and
pop
mov
cmpsb
mov
sbb
test
push
xor
inc
add
or
bound
aas
cli
outsl
cld
dec
dec
cmp
sub
mov
mov
jne
sub
call
inc
inc
xchg
pushf
mov
scas
jae
push
or
std
bnd
cmp
xchg
fsubp
mov
icebp
ficoms
push
aaa
xchg
mov
lea
push
xchg
adcl
add
or
push
inc
cmpsb
jb
fwait
sub
je
in
leave
cld
push
or
add
cmp
lods
sub
push
leave
sub
sti
pop
mov
out
cli
cmpsb
and
xor
std
pop
jle
notb
je
hlt
adc
out
pop
in
jl
xchg
push
sbb
sub
mov
outsb
sub
cmpl
pop
loop
add
lds
sub
mov
lock
cmp
sbb
xchg
sub
xor
jg
jmp
jl
mov
mov
adc
lods
adc
decl
addl
adc
fisttpll
cmpsb
call
dec
inc
rolb
and
mov
push
loopne
fstpl
pop
jne
andb
adc
push
jmp
dec
push
sub
bound
shlb
inc
mov
js
push
test
outsl
cld
xchg
fsub
lahf
cmp
mov
pop
mov
lods
cmp
aas
jg
pop
or
pop
pushf
jae
mov
sar
outsl
inc
pop
rolb
cwtl
addr16
adc
mov
nop
lods
and
sti
lret
andl
loop
and
int
mov
inc
cmp
mov
adc
jge
test
push
add
out
pusha
jecxz
lret
fstps
mov
sbb
sbb
dec
das
inc
sbb
scas
loop
lea
sbb
aad
pop
cmp
scas
or
aaa
push
pop
sub
jecxz
test
cld
popf
mov
test
mov
fsts
lods
mov
iret
lods
push
cmc
insb
or
enter
outsb
notb
mov
sbb
push
xor
pop
jnp
jg
push
sarl
mov
sub
adc
cmp
mov
adc
out
dec
outsl
cmpl
in
out
dec
sbb
icebp
shll
jb
pop
lea
dec
jl
jae
pushl
mov
sbbl
dec
xchg
push
adc
icebp
sub
sbb
aaa
lock
mov
mov
js
mov
es
pop
test
adc
xor
in
jbe
cmp
cs
inc
xor
xchg
ficoms
dec
adc
jge
add
pop
inc
adc
pop
or
fistpll
in
mov
add
jns
loopne
pop
iret
aam
inc
ja
adc
cmp
push
imul
out
sub
push
push
dec
xor
inc
xchg
clc
jns
loope
jp
test
bound
repz
mov
xor
fwait
mov
sarl
incb
push
sbb
adc
adc
and
stos
aad
jle
jle
sahf
dec
pop
dec
adc
add
or
jo
adc
nop
fnstcw
test
cmc
add
mov
mov
out
or
imul
inc
addr16
mov
cmp
dec
sbb
fnstenv
lret
jge
jb
pop
out
and
pop
adc
push
in
outsl
jg
pop
std
push
lret
mov
pop
sub
xorb
mov
mov
aaa
mov
or
ja
xchg
or
lret
ljmp
lahf
pop
pop
iret
std
movsb
xchg
pop
clc
jne
testb
mov
push
int3
xor
pop
stc
mov
xchg
and
outsl
dec
cmp
imul
jg
addr16
mov
std
lea
xchg
push
xchg
and
mov
je
ret
xor
mov
fcoml
jb
lock
ret
jmp
mov
cli
das
fdivr
fildll
pushf
in
and
jns
fcmovbe
jno,pt
daa
rcrb
mov
mov
jmp
mov
bound
mov
adc
loop
or
jne
jnp
mov
cmp
inc
test
mov
fwait
outsl
fldenv
ret
push
jl
decl
xchg
jb
push
mov
scas
pmovmskb
adc
adc
adc
hlt
outsl
adc
loopne
out
dec
inc
dec
lods
pop
int
sbb
shl
outsb
hlt
xchg
test
inc
call
jecxz
cmp
mov
stos
popa
sti
jmp
orl
dec
sbb
sar
mov
pop
mov
jecxz
pop
inc
mov
stos
push
int3
mov
sarl
jge
ljmp
sub
lea
lret
mov
add
daa
jg
xchg
stos
inc
cmp
roll
das
xor
cmp
data16
mov
stos
jne
or
stos
pushaw
push
jbe
jecxz
sub
or
dec
inc
das
jge
mov
in
ja
pop
mov
rcll
inc
daa
std
dec
outsb
test
pop
jle
fisttps
mov
movsb
lahf
iret
add
jecxz
mov
dec
int
lcall
push
sub
sbb
cld
mov
fbstp
xor
arpl
in
jno
xor
xchg
outsl
cld
ja
add
add
cmp
inc
addl
addr16
mov
sar
xor
jne
daa
loop
adc
adc
pop
jne
inc
push
jo
ljmp
sbb
add
xor
repz
push
ffreep
lds
mov
and
xor
fldt
fldenv
imul
or
xlat
cmpsb
dec
inc
cmp
jns
mov
decl
inc
sti
loopne
mov
test
or
bound
sbb
sarb
pop
in
mov
adc
std
mov
lods
dec
add
test
xchg
jge
add
sbb
in
into
clc
jg
push
dec
mov
sbb
add
cmp
movsl
mov
mov
sar
lock
push
movsb
ficoms
or
rcrl
bound
and
into
xor
fidivs
jo
rcrl
loope
add
adc
inc
sub
sbb
js
call
loop
call
xchg
pop
push
icebp
add
pop
xorb
jbe
jb
jae
es
mov
fistl
imul
pop
and
sar
push
movsl
push
xor
sub
stc
mov
enter
fsubp
pop
mov
lcall
sbbl
roll
inc
jmp
arpl
cmpl
test
dec
cs
cld
dec
sub
clc
pop
push
xlat
inc
cmp
cmp
dec
lds
and
xchg
jecxz
adc
or
mov
pop
je
push
cmp
cmp
enter
shll
cmc
pop
add
xchg
clc
pop
shrl
bound
push
push
dec
aam
dec
pop
stos
out
lds
push
push
bound
pop
mov
xlat
or
and
fidivl
xchg
xchg
xor
jmp
cli
sbb
cs
js
leave
cmp
and
push
rorl
repz
imul
add
fidivrl
cmpsb
inc
loope
pop
fisttps
adc
mull
roll
mov
stos
sbb
sbb
int
loopne
andb
push
scas
subl
add
outsb
das
sub
iret
sbb
das
test
fnstsw
mov
loopne
std
add
in
and
jmp
jne
sarl
ljmp
mov
arpl
mov
cli
cmp
test
dec
imul
xlat
push
imul
and
and
jecxz
enter
or
cltd
orl
movb
aam
gs
mov
xchg
xor
movsl
dec
mov
rcll
test
xor
jge
aam
in
popf
xchg
sbb
repz
orb
dec
sub
dec
dec
repz
sub
pop
pop
insb
insb
mov
jno
insl
ljmp
test
mov
cli
xlat
inc
or
pushf
leave
inc
xchg
mov
inc
jae
outsb
cmp
pop
lock
mov
adc
dec
cwtl
xor
outsb
dec
jnp
adc
xor
mov
int3
loopne
push
mov
js
sub
pushf
xor
int
mov
sbb
test
or
xchg
adc
mov
aaa
leave
ljmp
mov
roll
push
mov
xchg
mov
je
lahf
mov
dec
and
adc
cmp
mov
jo
pushf
pusha
sub
xlat
mov
fstpt
mov
jg
lcall
mov
clc
sbb
xchg
inc
sbb
ret
inc
mov
aam
xchg
cwtl
mov
sti
pop
sub
cmpsb
out
fucomip
and
lahf
sahf
lret
fistpll
push
dec
popf
lods
repnz
lahf
xchg
call
mov
cmp
outsb
shlb
dec
sbb
shll
dec
ds
push
jne
push
inc
inc
sub
int3
mov
mov
in
mov
mov
mov
adc
pop
lcall
rorl
orb
cwtl
mov
mov
cs
fs
sti
inc
insb
pop
push
sbb
clc
xor
jb
cli
xchg
xchg
xor
mov
mov
setl
mov
xchg
int3
xorb
push
xchg
ljmp
dec
add
arpl
daa
cld
pop
clc
outsl
push
pop
lods
divl
movsb
xchg
nop
xchg
pop
mov
mov
cli
outsl
mov
mov
call
jbe
dec
cmpsb
sbb
add
jno
push
push
lcall
test
lahf
dec
sbb
adc
xchg
and
cmp
xchg
sbb
adc
mov
dec
filds
cmpsl
adc
test
dec
out
or
pop
loopne
lods
mov
push
test
lds
movl
sub
pop
mov
in
or
outsl
push
push
xchg
mov
jg
mov
mov
popl
jg
push
fstpl
sbb
inc
pop
push
insl
ljmp
sbb
push
jnp
pop
sub
pusha
in
movsb
loope
mov
adc
dec
or
mov
ja
adc
lret
inc
adc
pop
in
or
aam
mov
cmpl
ss
in
out
test
push
mov
movsb
jno
dec
mov
adcl
jp
test
ja
notb
mov
dec
and
addl
imul
cmpsb
mov
push
or
sub
pop
push
arpl
lea
xchg
adc
fisttpl
push
sbb
xchg
sub
call
incb
sbb
mov
sbb
dec
mov
divb
push
mov
f2xm1
stos
push
imul
testb
pop
mov
add
sarl
jge
je
ret
hlt
push
push
adc
outsl
inc
lahf
fildl
jmp
inc
imul
imul
divb
ret
outsb
insb
outsl
into
jbe
mov
cmp
popa
add
enter
sbb
jbe
jmp
bswap
sub
or
rol
jge
sub
push
or
rclb
mov
mov
xor
pushf
sbb
pop
subb
mov
mov
outsb
ja
ret
push
xor
clc
test
subb
shrb
add
jg
xor
loope
pop
aam
sub
std
ljmp
je
leave
mov
adc
les
test
add
in
movsl
ljmp
cmc
and
or
sbb
mov
adc
out
icebp
enter
mov
pop
cmp
pop
test
ret
and
in
nop
and
xchg
dec
clc
insl
das
aad
add
mov
rolb
push
ja
inc
fimuls
outsb
xor
inc
pop
loopne
mull
ja
push
pop
aam
rcrb
outsl
frstor
ss
pop
iret
xor
push
mov
add
xor
aaa
scas
mov
dec
mov
cmp
lahf
inc
out
mov
outsl
adc
xchg
stc
fisubs
call
xchg
mov
outsl
push
out
cmp
jge
inc
xchg
add
std
sbb
test
test
mov
dec
fistpll
mov
xchg
lock
outsl
jp
cmp
mov
xchg
xchg
les
push
add
clc
mov
iret
xor
and
sub
das
add
lods
xor
mov
jl
push
incb
jmp
pop
aad
vpcmpgtw
sub
rclb
add
cmp
mov
repz
cmpb
or
jge
sub
jmp
or
xorps
inc
pop
jl
aad
movsl
jmp
cs
int3
xchg
or
imul
jne
and
push
push
scas
out
dec
mov
xorl
or
shll
push
xchg
out
inc
loope
push
stc
ret
incl
pusha
inc
aas
pop
rorb
jge
xor
or
sarb
or
adc
push
insb
jl
into
xchg
add
add
mov
mov
rcl
lds
pop
fisubrl
ret
xchg
pop
sbb
add
ret
gs
xchg
lahf
cld
add
ficompl
fs
pop
lods
nop
lret
jmp
icebp
loopne
pop
into
adcb
add
and
mov
push
in
das
lcall
pop
movsl
inc
xchg
inc
loop
daa
insl
jo
mov
pop
cld
inc
sbb
mulb
dec
adc
imul
imul
ret
adc
out
lret
add
and
push
mov
rcr
out
cmpsb
sar
add
pop
mov
push
jne
call
pop
inc
push
int
add
cltd
sbb
rclb
test
call
jb
mov
xchg
decb
pop
iret
and
cli
push
cmp
xor
dec
retw
xor
ficompl
pop
cld
jg
sbb
cwtl
dec
xor
push
xor
aas
dec
pop
push
int3
push
nop
xor
outsb
stos
sub
push
push
aad
inc
repz
inc
inc
mov
filds
stos
mov
dec
in
pop
push
negb
jns
popf
mov
or
aam
js
mov
dec
loope
pusha
and
dec
test
andb
loop
dec
mov
ret
sub
inc
pop
jo
rolb
xchg
or
add
add
call
test
les
rclb
aas
jb
scas
cmp
mov
adc
add
or
push
cmpsl
pop
inc
daa
add
mov
dec
mov
mov
add
adc
or
mov
adc
jne
ss
aas
add
test
jb
xchg
jno
pop
in
lods
add
call
and
aad
xchg
loopne
movsl
pop
fsubrp
jae
repnz
pop
jb
xchg
or
or
ja
push
dec
rorb
or
outsl
mov
mov
cmc
or
adcb
or
dec
mov
mov
test
pop
out
aaa
inc
sbb
scas
adc
rol
mov
mov
inc
les
mov
and
mov
fsubrs
insl
xchg
xor
mov
pop
and
movsb
pushf
decl
lods
add
push
mov
fdivrs
shl
push
roll
cld
pop
inc
cmp
adc
pop
mov
add
lahf
mov
or
and
fistl
lds
push
add
adc
pusha
rcl
addb
inc
sub
insl
pop
pop
aaa
sub
aas
jno
pushl
jbe
rclb
inc
mov
leave
imul
fists
cmp
mov
lret
in
es
je
pusha
or
iret
stos
inc
gs
mov
hlt
and
gs
sub
insl
mov
addb
out
fidivs
addr16
testb
lock
jp
xor
lea
out
ficompl
push
lahf
mov
mov
outsl
or
sahf
sbb
aaa
or
aaa
jle
shll
es
pop
push
mov
ja
jne
adc
mov
mov
cltd
mov
dec
mov
pop
test
sbb
imul
sti
lret
adc
push
and
fldt
jnp
or
or
adc
outsb
adc
cli
cs
std
stos
adc
xlat
cmp
mov
pop
jecxz
inc
pop
add
test
call
adc
push
sub
push
fsubrl
call
lea
push
mov
fcmovbe
push
push
push
sub
ja
mov
inc
jge
mov
adc
mov
cmp
jg
jno
scas
and
pop
repz
mov
pop
pop
mov
mov
pop
sbb
dec
sub
dec
fcmovu
or
or
dec
add
ret
jnp
adc
mov
mov
jmp
dec
jmp
jmp
sub
icebp
aam
add
push
jp
mov
or
pushf
fadd
pop
ss
sub
fnstcw
mov
xchg
jge
sub
test
mov
hlt
mov
mov
ret
clc
sub
jmp
aaa
inc
stos
addr16
stos
loopne
movsl
push
add
xchg
fwait
cmp
daa
test
pusha
addb
outsb
sbb
mov
hlt
push
mov
test
test
jecxz
test
js
adc
shl
jnp
cltd
loopne
mov
lock
out
inc
aaa
std
or
dec
pop
pop
icebp
sub
addr16
xchg
push
dec
xchg
mov
loope
jne
xchg
adc
add
scas
cmc
add
ja
add
add
adc
icebp
xor
rcr
outsb
dec
fldt
pop
xor
adc
loopne
fwait
cmp
out
loop
iret
mov
rcll
addl
pop
fistpll
rolb
loopne
mov
dec
mov
icebp
push
sub
mov
xchg
fcomp
hlt
imulb
insl
cwtl
push
xor
and
inc
aaa
in
ss
mov
mov
fsub
mov
out
lea
lock
dec
jmp
or
test
push
fsubrl
mov
repz
cmpsl
add
cltd
cmp
test
iret
inc
aas
lods
mov
fistps
mov
and
pop
out
push
mov
push
sub
test
fs
bound
ja
cmpsl
test
mov
lea
notb
in
insb
stc
in
dec
fwait
mov
jo
mov
jecxz
pop
mov
scas
mov
push
inc
insb
js
sub
in
orb
jb
pop
jl
jae
sub
push
inc
push
fcoms
rclb
jo
pusha
das
lds
lea
sahf
fldt
rcll
inc
mov
mov
fists
testl
sbb
or
loope
mov
fistpl
mov
push
lret
ret
mov
aam
cs
adc
push
int
dec
jg
jmp
int3
fadd
pusha
rep
sarl
shlb
dec
and
mov
pop
xchg
jl
push
test
test
pusha
ja
push
je
sub
and
aaa
mov
into
and
pushl
mov
sbb
stos
mov
jmp
mov
lock
and
lock
xchg
lret
fwait
or
dec
dec
int3
scas
inc
push
jb
hlt
xchg
fstpt
jmp
inc
lcall
sbb
jmp
dec
xor
je
and
mov
sbb
or
decl
cwtl
sub
test
loopne
jo
xor
jp
loopne
rclb
ret
push
jo
inc
jne
into
iret
dec
add
sbb
lret
orl
popf
aaa
std
xor
or
adc
das
loop
je
push
insb
mov
pop
inc
pop
in
int
jmp
mov
icebp
push
jg
ss
lret
enter
sub
inc
cmp
adc
std
dec
pop
leave
sbb
cmp
mov
loopne
cmp
mov
or
aam
pop
incl
dec
std
insb
js
out
push
cmp
jp
pop
mov
adc
ret
lret
jg
jecxz
jo
add
xchg
pop
mov
and
pop
cli
xchg
mov
adc
pop
xchg
outsb
sub
pop
clc
pop
lahf
push
dec
data16
add
adc
incb
psubd
ljmp
sub
and
lahf
test
loope
push
push
jecxz
rolb
pop
pop
rol
call
decl
xor
sbb
jle
and
test
rorl
adc
mov
adc
ficoms
mov
or
add
jno
in
gs
pop
stos
enter
lcall
adc
jo
jmp
push
out
jg
adc
or
out
add
sub
dec
cmp
mov
cli
aaa
lcall
shl
pop
sar
gs
hlt
stos
jl
or
mov
jmp
sub
and
and
dec
inc
cld
or
jb
shl
cli
sub
cld
js
sarb
js
mov
test
in
push
movb
insb
dec
sti
sahf
pop
int
iret
push
jmp
rcrl
cmp
mov
xchg
adc
out
and
pop
cmp
push
adc
das
add
or
sbb
cmpsb
andb
xchg
ss
jo
pop
cmp
lcall
cmp
pop
sbb
or
call
ljmp
pop
pop
cmp
push
jge
lahf
pop
inc
xor
stos
adc
inc
scas
jl
sbb
mov
in
add
xchg
cwtl
and
adc
push
ret
repnz
aaa
sbb
or
adc
cmpb
mov
push
jne
inc
cmpsl
out
sub
incb
shr
mov
push
xchg
sub
sti
stos
sub
or
or
xchg
push
dec
int
mov
lret
pop
add
mov
add
sbb
push
loop
rol
mov
or
mov
push
push
out
pop
dec
repz
and
stos
popa
es
jo
mov
xchg
insl
dec
add
lcall
add
mov
add
popf
add
lahf
stos
lret
fistps
mov
lcall
das
sub
cmp
mov
jl
aad
xor
sbb
xor
icebp
adc
bound
cld
or
jecxz
in
inc
adc
fcoms
and
lock
mov
inc
jo
jecxz
ds
ja
mov
idiv
dec
out
and
pop
mov
mov
add
pop
mov
int3
or
loopne
dec
loopne
jle
inc
push
xor
add
adc
lret
repnz
or
mov
stos
pop
inc
mov
mov
xchg
test
ds
or
nop
add
xor
out
xchg
adc
or
mov
cld
dec
pop
xchg
mov
call
inc
pop
and
push
add
push
jl
mov
mov
push
sub
mov
adc
mov
jne
or
xor
outsl
icebp
cmp
jge
ror
mov
es
repz
ret
or
out
or
gs
sbb
or
icebp
movsl
lea
xchg
cmpsb
mov
hlt
outsl
sbb
mov
stc
dec
ret
jl
aam
outsl
std
inc
cmpsl
data16
mov
pop
nop
xchg
fcomi
rclb
movsl
pop
and
sahf
sti
fisttps
daa
movsl
adc
xchg
jg
or
mov
test
iret
jns
ret
out
ret
inc
fistpll
pop
dec
mov
hlt
mov
test
jbe
xor
mov
stc
divl
xchg
add
movsl
roll
xchg
aaa
shll
imul
loope
push
mov
pop
xor
out
aaa
sub
out
jp
sub
mov
fwait
adc
pop
push
lock
mov
or
in
lcall
jb
inc
jg
jp
filds
mov
inc
and
adc
xor
mov
sub
pop
sbb
lret
jnp
in
fdivrs
xchg
push
push
rol
leave
xor
jbe
arpl
cli
idivb
ljmp
pushl
cmp
inc
xlat
je
xchg
mov
shlb
lahf
inc
bound
je
outsb
pop
adc
icebp
int3
js
icebp
outsl
jmp
cld
xchg
adc
loopne
pop
mov
in
test
rorl
cmp
mov
cs
mov
or
in
sub
aas
xor
lret
fistpl
xor
pop
or
push
gs
out
scas
aad
or
mov
jne
mov
pusha
sub
fwait
xor
cs
cmc
mov
pusha
push
insb
xor
xlat
sbb
cmc
movsl
dec
jmp
ljmp
dec
jmp
sahf
ljmp
mov
das
rcrb
xchg
mov
push
xchg
adcb
jg
fcmovnu
call
jno
ss
xchg
rcrb
sbb
xor
out
ljmp
inc
pushf
dec
fiadds
pop
test
pushf
pop
dec
bound
insl
mov
or
sub
mov
lcall
pop
push
xchg
repnz
addr16
adc
adc
sbb
das
popf
jmp
or
push
add
sbb
pop
jmp
scas
push
sub
lods
nop
mov
stos
inc
ret
testb
mov
int3
lods
push
xorb
cmpsl
in
pusha
mov
dec
xchg
add
movsb
xor
mov
push
or
pop
cwtl
xchg
push
sbb
out
cmp
outsb
aad
decb
lret
push
push
or
and
mov
shrl
mov
push
mov
pop
mov
xchg
push
push
pop
lret
jne
outsb
mov
and
and
sub
xlat
test
aas
cli
jg
ljmp
cmp
in
push
fbstp
pop
gs
out
sbb
xchg
sbb
jmp
pusha
imul
scas
push
jo
fbld
push
icebp
out
subl
fldl
mov
mov
dec
inc
and
aam
stos
xchg
shrl
push
xlat
and
xor
or
loopne
mov
or
pop
stos
jp
outsb
out
and
sub
push
mov
fwait
mov
outsl
aaa
jle
roll
icebp
movsb
sbb
jno
xchg
sbb
mov
cmpsb
out
mov
mov
hlt
je
mov
sub
andb
mov
sbb
aaa
mov
mov
lods
jbe
test
int
pusha
in
movb
lea
jl
fadds
mov
or
mov
fldl
dec
mov
cmp
shl
sub
push
clc
pop
fcomps
stc
das
fadds
xor
jne
ret
mov
push
mov
mov
jns
cld
scas
mov
jb
imul
lret
sbb
push
sub
mov
or
xchg
push
pop
mov
or
inc
out
inc
in
xchg
jne
ja
push
sbb
lcall
lock
push
mov
push
inc
push
aas
add
das
addr16
in
mov
or
inc
ds
jl
dec
imul
cli
dec
cld
or
lea
pop
sar
cmp
and
mov
cmp
mov
clc
cmp
xchg
jo
xor
jno
pushf
insb
lahf
and
loope
ret
xchg
les
mov
push
pushl
popl
fs
ret
pop
cs
pop
xor
adc
sar
loop
mov
ljmp
mov
mov
pusha
les
in
sbb
cld
mov
xchg
jl
xchg
xchg
stos
push
stos
fdivrp
dec
push
sub
mov
lods
insl
dec
xchg
ss
insl
jecxz
aaa
cmp
pop
mov
add
es
lock
popf
dec
test
pushf
xchg
or
pop
pusha
jae
dec
jl
cmp
loop
test
clc
mov
shlb
fcom
sbb
mov
pushf
mov
jne
stos
js
jno
mov
in
cld
sbb
lea
or
pop
push
pop
iret
jg
adc
push
inc
mov
pop
sbb
mov
daa
gs
push
icebp
pop
subb
xchg
mov
xor
jno
inc
sub
xchg
push
pop
mov
mov
xor
inc
pop
and
sub
rcrb
mov
and
imul
adc
daa
cs
call
add
rclb
adc
xchg
push
rcrl
cld
push
lcall
scas
or
in
xchg
fisttpll
les
jb
jnp
sbb
outsl
pop
push
mov
sub
cmpb
setns
pop
xor
aas
in
cltd
in
pop
or
push
pop
jl
add
xor
inc
xlat
daa
pop
mulb
jmp
ret
call
aam
and
daa
les
sbb
pop
adc
mov
out
xor
out
add
xor
lds
js
adc
cmp
icebp
and
das
cmp
icebp
ljmp
not
adc
or
in
test
cmp
jo
push
push
test
sahf
and
and
adc
lock
daa
mov
into
pop
push
mov
inc
fnstsw
mov
mov
lret
pop
gs
adc
rolb
adc
clc
adcb
icebp
insl
mov
call
lea
lock
jbe
sar
xchg
dec
stos
push
lahf
aas
orb
popl
es
out
leave
mov
pop
loop
dec
add
jl
cmp
mov
std
mov
pushf
jl
dec
adc
popa
push
jb
and
mov
cli
xor
mov
jecxz
inc
mov
call
inc
adc
mov
fnstsw
pushl
popa
ffree
xchg
inc
jnp
mov
push
lods
inc
dec
cltd
jo
fsubrl
add
or
push
clc
pop
test
out
in
xchg
and
test
rcrl
pop
fistpl
lock
je
rep
int3
loop
data16
mov
das
sarl
bound
sub
in
pop
cmpsl
cmpsb
jg
mov
les
loopne,pn
cmp
inc
insb
loop
sbb
flds
mov
fildl
sti
icebp
and
lret
xchg
push
mov
out
loopne
fsubrs
inc
inc
jmp
inc
sbb
pop
out
jle
push
cmc
add
out
cwtl
push
incl
cld
dec
sahf
inc
mov
loopne
pop
sub
icebp
cmpsb
add
add
imul
sub
fucomip
push
stc
loop
test
lock
add
mov
hlt
fildll
mov
xor
xor
xchg
inc
lret
outsl
iret
sub
nop
loope
pop
cmp
clc
scas
mov
or
lahf
mov
rolb
pop
pop
cmp
dec
mov
mov
gs
or
pop
sub
mov
loop
sub
xor
mov
push
add
jns
or
jmp
inc
jp
dec
and
mov
xchg
jl
subl
jns
js
or
ja
sti
hlt
push
aaa
cmc
ffreep
and
jb
adc
aad
cltd
xor
outsl
lds
lds
and
stc
inc
xchg
mov
push
clc
addb
sbb
xchg
or
sbb
imul
mov
test
fucomi
inc
and
loopne
hlt
and
mov
push
rolb
add
inc
ret
jge
les
push
andb
mov
das
sbb
std
sub
jnp
loope
mov
pand
or
outsb
mov
push
mov
jecxz
outsb
out
dec
inc
outsl
mov
sbb
repnz
rorl
pop
in
mov
sbb
js
push
sub
adc
and
xchg
into
decl
dec
and
or
rcl
sti
dec
sub
icebp
or
sbb
out
sar
lret
shrb
int
push
imul
mov
clc
test
fimuls
loopne
mov
das
push
mov
gs
hlt
jbe
push
sub
dec
loopne
sbb
sbb
pop
inc
std
push
sbb
mov
nop
xor
rcll
fiadds
or
fdivrp
lock
mov
cld
xor
cltd
jns
test
xchg
mov
repz
ja
decb
xor
lcall
rolb
add
pop
icebp
loop
add
mov
fimuls
ret
leave
add
andl
loop
fbld
cld
cwtl
sub
dec
xchg
or
rol
mov
mov
fistl
pop
mov
test
cld
out
jp
jmp
andl
aad
fisttps
push
ret
aad
mov
adc
das
push
stos
aad
ljmp
rorl
sbb
add
push
test
sbbb
idivb
jl
mov
push
gs
mov
hlt
cmpsb
in
stos
mov
pop
jbe
mov
dec
sarl
sar
in
imul
ffreep
jle
and
scas
das
mov
in
lods
fmul
mov
stos
dec
in
adc
or
fcoms
mov
lea
cld
pop
or
cmp
aad
jns
aam
mov
xchg
add
das
mov
jae
push
popf
shl
ja
xor
outsb
xor
out
pop
pop
repz
aaa
shll
lret
fbstp
push
dec
movl
add
pop
inc
nop
cmp
sbb
mov
push
sbb
sub
mov
jnp
mov
adc
xchg
loopne
xchg
call
mov
in
cmpsl
xor
inc
jmp
pop
dec
push
rorl
out
testb
jns
shlb
icebp
adc
fildl
mov
lods
or
cmp
dec
sub
fsubrl
aam
mov
or
mov
or
lock
push
inc
jecxz
adc
jecxz
jne
mov
push
push
aam
pop
push
movsb
push
mov
mov
and
jle
mov
pop
shlb
add
xchg
lcall
enter
mov
fldenv
jmp
shll
jg
pop
or
pop
in
add
xchg
repz
movb
dec
imul
bound
idiv
shrb
mov
mov
les
mov
test
outsl
sbb
sub
mov
lock
cmpsb
outsb
insb
or
mov
aas
clc
jl
lahf
jmp
xchg
mov
push
outsl
or
or
movsl
cmp
xchg
lds
gs
in
push
mov
push
sysenter
mov
push
ret
mov
or
add
inc
inc
xor
hlt
inc
xchg
inc
cmp
in
insb
lods
imul
inc
fnsave
mov
jmp
jmp
test
iret
pusha
xchg
xor
sub
jo
scas
sbb
pop
mov
add
adc
negl
jg
adc
ja
push
shlb
dec
mov
jg
fwait
mov
xchg
push
push
inc
and
es
mov
decl
cmc
xchg
dec
enter
sti
out
cmp
rclb
mov
push
rcr
fisubrl
into
add
loopne
repnz
dec
fdivl
adc
xchg
cli
ret
pop
in
or
push
pop
xchg
adc
ds
cld
fbld
dec
adc
outsl
add
xchg
test
ss
xchg
and
or
shrl
imul
addb
inc
jle
loope
imul
loopne
or
outsl
push
fidivs
push
data16
cmp
and
xchg
or
inc
add
std
pop
jmp
or
ljmp
fucomip
cmpb
lea
sbb
add
js
test
xchg
loope
js
mov
negl
loope
xor
add
sbb
mov
jp
pop
cmpsl
les
cwtl
push
mov
sub
push
cmc
outsl
sar
push
add
sbb
jge
iret
bound
insb
std
add
jecxz
sub
xchg
xchg
das
mov
mov
imul
xor
scas
inc
inc
or
sub
fsubrs
les
jle
mov
data16
xchg
mov
inc
jnp
test
inc
shll
out
imul
lret
lods
push
or
sarb
xchg
lcall
sbbl
stos
pop
aad
adc
sbb
inc
sub
nop
fldt
sahf
sbb
push
mov
in
mov
das
add
lds
loope
jbe
mov
hlt
add
pusha
jmp
inc
dec
repnz
dec
add
jns
sahf
dec
test
lock
test
add
mov
std
add
fsubrl
pop
adc
icebp
dec
cmp
stos
mov
sbb
mov
lret
or
cmp
mov
ficoms
mov
or
xor
fwait
jge
or
push
aad
call
xor
jle
pushw
loopne
fs
lret
cmc
filds
inc
cld
dec
int
sub
mov
fwait
jmp
mov
out
xchg
mov
incb
cmpsb
mov
pop
lret
inc
add
sub
jns
aaa
inc
icebp
cmp
mov
stos
call
add
cltd
int3
add
orb
inc
mov
andb
or
add
push
testb
in
test
ss
ljmp
adc
pop
cli
ljmp
inc
or
cmc
cltd
pusha
inc
test
jbe
adc
test
sbb
push
clc
andb
mov
xchg
pop
js
sub
and
cli
push
outsb
mov
dec
pop
xor
loop
add
sarb
mov
jns
xchg
testl
cmc
add
dec
mov
sbb
notl
fdivrs
and
imul
fimuls
jle
int3
icebp
pusha
andb
push
iret
shll
cltd
hlt
cmp
ljmp
mov
cmp
je
stc
jae
sub
aaa
or
mov
imul
mov
pop
pop
das
pop
test
sti
cmp
inc
insb
mov
jo
std
outsl
mov
mov
fwait
mov
sub
mov
push
ficoml
out
pop
sbb
mov
mov
mov
mov
xlat
rorb
stos
jge
cmp
lods
sub
mov
cld
sbb
pop
xor
cli
mov
lret
idivl
mov
sbb
fisttpll
jmp
loopne
lcall
push
call
cmp
and
shll
imul
cmp
or
fs
sbb
mov
insb
mov
nop
or
test
push
mov
mov
push
nop
les
push
popa
add
xchg
loopne
cmp
and
scas
inc
push
sbb
ret
push
sub
cmp
pop
mov
and
and
aam
sub
fsqrt
jge
enter
or
das
adc
xor
aad
or
ficoms
push
mov
loopne
andl
or
add
push
movsl
sar
mov
xchg
leave
inc
push
lret
sarb
fdivl
lds
insl
lock
jmp
lret
lods
lret
insl
jbe
decl
mov
sarl
xor
push
push
outsl
or
mov
mov
push
add
in
mov
and
push
dec
mov
loopne
xchg
adc
dec
ret
dec
orb
and
mov
mov
push
cmpb
or
dec
in
and
inc
pop
mov
mov
mov
jle
lds
std
xadd
adc
dec
fistps
sub
aaa
jbe
rcrl
add
dec
sub
ret
rolb
cmp
pusha
sbb
and
iret
adc
and
pop
pushf
call
and
and
ja
mov
or
or
sub
pop
mov
pushf
push
push
mov
or
xor
icebp
adc
out
scas
mull
fldt
call
decl
mov
dec
inc
es
push
lcall
mov
mov
ret
mov
aaa
ds
push
mov
or
sub
outsb
fdivs
gs
mov
sbb
data16
and
mov
push
push
enter
cmpsl
fdivrs
inc
dec
rcll
mov
call
repz
pop
pop
jnp
or
or
push
loope
add
pop
stos
pop
aad
mov
pushf
mov
fcmovb
mov
xchg
fs
xchg
and
xor
orl
mov
std
movsl
or
loopne
dec
fucomp
stos
ss
push
pop
pop
and
or
insl
xchg
js
sbb
mov
mov
mov
push
sub
fwait
push
adc
pop
cmp
rolb
gs
inc
je
int3
jbe
xor
pop
dec
ror
ret
out
aas
mov
pusha
scas
popf
call
sbb
es
mov
lahf
adc
xchg
aad
add
mov
mov
fcoml
std
dec
shll
out
cmpsb
cmp
lds
mov
ja
xchg
sub
icebp
aaa
mov
sbbb
push
lahf
sub
fisttpl
mov
mov
pop
call
fbld
pop
repz
sarl
mov
and
or
fs
popf
pop
mov
fildll
insl
jg
mov
add
sbb
adc
mov
popl
cmp
inc
icebp
out
push
das
mov
jb
and
dec
mov
cmp
xor
shl
fwait
xorb
push
sub
lock
cwtl
in
popa
scas
iret
xchg
lods
clc
aad
stos
das
add
loop
mov
stos
xchg
cltd
inc
mov
stos
push
xor
arpl
lock
out
inc
sahf
mov
adc
inc
aaa
out
stos
xor
test
ret
push
cli
or
dec
mov
sbb
mov
cli
xchg
pop
outsl
ljmp
jo
mov
sbb
dec
test
pop
sar
cmpsl
sbb
std
or
pusha
xchg
test
cwtl
cli
popf
mov
cmpxchg
data16
insl
adc
mov
mov
clc
sbb
inc
bound
xor
cli
pop
adc
mov
pop
inc
icebp
jnp
xorl
pop
jecxz
fistpl
fiadds
iret
movl
in
jl
cmpsl
fs
lahf
ljmp
insb
daa
cmpsb
imul
mov
mov
dec
mov
inc
cli
divb
je
movsl
add
mov
ja
or
inc
out
or
fdiv
cmpb
and
lock
mov
mov
outsb
sar
add
sbb
add
mov
iret
xor
sbb
ds
cmc
addl
adc
imul
xorl
aam
jmp
mov
mov
inc
mov
es
sbb
mov
repz
inc
or
call
test
in
iret
pop
rorl
js
mov
fbstp
add
outsb
rcl
xor
fwait
push
push
fcmovu
insl
outsl
inc
push
imul
fldl
ljmp
adc
jmp
add
sub
ffreep
insl
cwtl
push
scas
out
mov
mov
test
imul
jbe
bound
xchg
inc
lods
cmpsb
jbe
inc
fwait
jae
pop
popf
sub
xchg
test
ja
stc
xchg
imul
ret
lret
aaa
imul
out
rcrl
out
mov
fbstp
add
sarb
incb
negb
mov
lods
inc
pop
inc
lock
jns
mov
fadds
nop
inc
adc
mov
cmp
jle
mov
add
dec
filds
daa
fsubrs
xchg
lcall
or
adcb
imul
pop
loop
sub
inc
aam
push
mov
or
outsb
insb
insl
sub
daa
scas
cld
adc
roll
mov
xorl
xchg
lahf
std
lret
cmpsl
jns,pt
movsl
dec
dec
sar
int
cmp
lcall
iret
fucompp
aam
pop
jne
sbb
push
push
sub
jmp
inc
jl
mov
in
cmc
rolb
sub
mov
mov
or
adcl
push
outsb
adcl
mov
lock
sbb
lret
lds
mov
call
jmp
push
and
jnp
ret
andnps
mov
mov
xor
cmc
imul
orl
xlat
sbb
mov
push
mov
mov
rcl
dec
or
push
mov
add
mov
movsl
pop
cld
push
pop
xor
pushf
mov
mov
and
aam
sbb
add
in
add
inc
lods
andb
mov
rcrl
push
scas
movsb
das
fwait
sti
ret
popl
add
dec
push
arpl
xchg
sub
loopne
add
mov
xchg
das
cmp
iret
inc
push
push
mov
jno
inc
cltd
js
jno
push
loop
test
je
negb
xchg
dec
push
sahf
mov
iret
cmp
fistpll
xchg
shr
mov
dec
mov
test
xor
mov
mov
clc
and
or
pop
mov
push
inc
push
push
icebp
push
adc
incb
push
out
mov
std
mov
mov
sub
addb
jmp
add
loope
lock
mov
mov
xchg
lea
jge
mov
outsl
mov
xchg
ds
xchg
fstpt
in
ror
mov
mov
jg
lahf
mov
mov
xchg
cld
aaa
or
arpl
pop
jo
int
cmp
and
adc
popa
jne
test
jle
dec
das
mov
shrl
ret
xchg
inc
leave
inc
sbb
mov
mov
sbb
jp
mov
test
xchg
addr16
adc
ljmp
fbstp
sbbb
mov
xchg
sbbl
scas
in
pushf
add
xchg
fimuls
fcmovb
ret
add
mov
icebp
les
add
pushl
ret
jo
sbb
fildll
scas
or
mov
cmpsb
ret
mov
sbb
mov
mov
outsl
push
mov
sbb
xor
mov
cmpsl
mov
dec
dec
add
sti
test
mov
jmp
ficomps
mov
fwait
imul
add
outsb
xchg
xchg
pushf
mov
adc
pop
pop
inc
jno
fst
pop
xor
mov
lahf
xchg
addr16
imul
mov
loop
outsl
pop
in
mov
pop
rorl
lds
inc
pop
inc
rcrb
loopne
adc
sub
out
add
adc
nop
and
adc
sti
fsubrs
pop
loopne
adc
or
pop
jmp
cs
inc
jle
and
mov
and
sbb
aad
addr16
movsb
ret
push
out
ja
mov
test
xor
add
jae
pop
rolb
repnz
out
cltd
arpl
mov
shrl
fs
pop
shll
adc
jnp
mov
inc
xlat
lcall
or
mov
jle
pusha
imul
ja
jg,pt
pop
push
mov
mov
pop
sub
inc
sub
pop
sub
pop
sub
sub
sub
push
mov
xor
and
lds
inc
pop
adc
test
cmc
in
jno
popf
and
leave
call
icebp
loop
ret
dec
mov
xchg
sbbb
notb
and
jge
cmp
mov
xor
cmp
fldl
dec
push
xor
aaa
mov
adc
inc
xchg
mov
movsl
cs
sbb
push
xor
ret
in
push
sub
aad
inc
jo
in
jecxz
dec
jge
aaa
dec
inc
add
ds
jecxz
push
adc
mov
shl
sbb
sbb
fidivs
mov
and
inc
pop
cmp
dec
mov
aad
in
lret
cmp
out
dec
jecxz
sbb
and
cld
jg
cmp
mov
cmp
shr
jg
aam
insl
mov
ja
xchg
inc
rclb
dec
outsl
das
sbb
push
or
add
push
mov
mov
scas
out
repnz
pop
sbb
mov
jno
xchg
ljmp
dec
cmc
orl
add
xchg
mov
xchg
jnp
add
or
test
and
rclb
aam
clc
imul
ret
cmpsl
sar
push
das
mov
test
mov
scas
pmullw
jnp
out
adc
shl
push
pop
mov
mov
ret
cli
pop
push
xchg
shl
xchg
ds
add
pop
decb
jg
pop
fsubrs
add
push
test
inc
dec
cld
sub
lods
mov
inc
fldl
outsb
mov
inc
adcb
jge
mov
int
adc
pushf
pusha
or
xlat
and
rcrl
mov
daa
jp
mov
outsl
in
pop
clc
lods
pop
dec
mov
lds
push
andb
jg
icebp
cmpsb
ss
cmp
mov
cmpl
push
mov
jl
mov
xor
push
xor
mov
scas
or
pushl
cwtl
inc
decl
pop
xchg
adc
pop
fisubrs
and
addb
inc
aaa
jg
inc
or
add
icebp
add
stos
mov
mov
jecxz
mov
iret
push
add
xchg
mov
mov
mov
push
call
mov
aas
pop
idivl
xchg
xchg
test
and
xchg
mov
cmpsb
jb
lret
cmp
pop
add
mov
add
es
xor
fdiv
adc
cwtl
jmp
das
mov
int3
cmc
inc
test
xlat
inc
lea
aam
mov
insl
lock
repnz
adc
and
lahf
dec
inc
sbb
es
mov
gs
test
pop
cmp
lcall
adc
cs
jne
loope
imul
cs
cli
or
insl
adc
adc
loopne
les
gs
and
pop
hlt
jmp
fsts
aad
add
clc
push
jmp
sbb
aas
je
pop
inc
imul
mov
lea
loope
xchg
cmp
ljmp
das
pop
xorl
xchg
cli
jmp
ljmp
pushf
repnz
stc
xchg
pop
pushf
loopne
mov
sarl
mov
or
lock
xchg
test
loope
aas
out
sahf
out
or
push
imul
dec
fisubrl
cmpsb
loopne
push
xorb
push
in
inc
cmp
addr16
js
out
xor
add
loopne
sbb
aad
clc
inc
sti
and
cmpl
insl
xchg
imul
iret
fdivr
cmpsb
pop
pop
xchg
add
dec
and
insl
inc
leave
cltd
mov
movsl
push
xchg
aam
cmp
jmp
pop
or
or
cmc
mov
lcall
xchg
jbe
xor
push
fstl
paddw
std
jecxz
sar
movsb
xchg
outsb
icebp
daa
sub
in
ss
xchg
push
sbb
movsb
sub
jo
hlt
push
add
dec
shrb
fsubrs
fistpl
dec
icebp
xor
adc
aas
in
pusha
mov
mov
xchg
incb
inc
xor
sbb
mov
push
mov
jns
sub
aaa
xor
mov
mov
cmp
cmp
nop
or
adc
pop
fcompl
adc
test
xchg
jne
or
xchg
sbb
dec
clc
rorl
test
mov
repz
sub
icebp
mov
insl
mov
lods
pop
mov
xchg
and
push
push
add
fbstp
lret
fdiv
daa
mov
adc
loopne
fisubs
fdivs
arpl
push
mov
push
cli
out
mov
lds
push
xor
xchg
test
cs
xchg
and
push
adc
clc
or
push
inc
or
inc
or
sub
in
clc
xor
adc
sub
insl
aad
rorl
fdivr
sub
mov
sub
cwtl
mov
std
dec
add
jle
push
mov
test
fdivs
icebp
or
adc
inc
mov
mov
jle
add
xchg
push
or
inc
les
inc
sbb
xor
xchg
nop
icebp
adc
imul
sub
imul
inc
xor
fcom
cmpsl
add
rolb
mov
inc
jp
xor
fs
add
in
mov
or
pop
inc
movups
out
ret
ret
sahf
sub
icebp
cmp
inc
jp
icebp
imul
js
sbbb
pop
dec
and
sub
test
mov
jecxz
inc
fists
pop
inc
int
sbb
lea
into
test
sub
rcrb
stc
adc
jmp
add
pop
push
cwtl
rcll
out
clc
insl
das
xor
adc
test
lods
cmp
jl
lahf
ret
xor
mov
dec
dec
sub
out
sub
jae
pop
pop
call
sbb
jbe
push
mov
lock
daa
shr
sti
mov
cwtl
push
xchg
lea
push
cmpb
incl
pushl
js
pusha
mov
mov
pusha
mov
or
je
ljmp
std
xchg
mov
incl
loope
in
sbb
mov
rcrl
jg
jmp
das
decl
and
and
arpl
dec
pop
or
lds
pushf
inc
lahf
pmaxsw
popa
sub
in
dec
sti
mov
rorl
push
jne
jne
xor
mov
mov
loop
mov
pop
es
lret
and
cmp
push
xor
js
ret
jne
idiv
fmuls
mov
sbb
cltd
pop
and
scas
testb
add
mov
outsb
jg
add
and
mov
dec
daa
iret
inc
call
sub
fdivr
out
jle
std
lcall
das
mov
pop
imul
xlat
mov
stos
mov
ja
and
mov
pop
xor
icebp
fiaddl
cmp
fisttpl
rclb
add
xor
mov
ljmp
add
mov
xor
lods
dec
subl
clc
incl
sub
sbb
rorb
adc
push
pop
jbe
into
rolb
xchg
pushl
lods
jno
std
imul
popf
ret
xchg
pop
xor
xchg
je
nop
pop
lds
jns
insl
out
adc
out
nop
adc
mov
fisttpll
dec
mov
or
pop
ffree
jmp
cmp
ss
rcll
mov
cmp
mov
shlb
insl
push
cmc
stc
leave
js
arpl
add
rclb
rcrb
xchg
mov
pop
xor
stc
inc
js
push
dec
push
pop
or
pushl
jnp
mov
shr
shll
fs
pushf
cli
push
push
iret
hlt
push
mov
jns
jge
sar
and
push
mov
lods
jnp
pusha
rcrl
cmpl
pop
adc
loopne
jecxz
shrb
or
subb
insl
adc
bound
mov
incl
xor
cwtl
fsubl
je
sbb
repz
imull
lahf
mov
fnstsw
loope
dec
jbe
pop
scas
sarb
pop
mov
sbb
push
dec
lcall
cli
jp
cmp
pop
inc
out
insl
call
mov
xchg
jp
es
je
mov
lock
xchg
fwait
dec
xlat
decl
aas
xor
mov
lret
add
jb,pt
and
cmp
pop
call
sub
pop
popa
xor
mov
push
stos
xchg
xchg
cld
insb
jbe
fucomi
push
cmp
sub
push
mov
scas
bound
jge
xor
cmc
mov
loop
bnd
xchg
mulb
pop
cmp
js
push
jl
cmpsl
pop
jns
clc
ljmp
adc
int
jno
pop
scas
dec
push
in
cmp
jmp
in
ret
lcall
les
and
je
sbb
sub
push
out
xor
and
sbb
ljmp
hlt
push
dec
fbstp
repz
das
arpl
cld
xchg
repz
sar
inc
loope
dec
fistpll
ss
lods
pop
out
push
and
adc
jg
pop
frstor
insl
repz
lret
sar
out
xor
mov
ret
add
or
mul
repz
and
test
movb
mov
inc
outsl
push
jge
xchg
pushf
mov
sub
shrl
jecxz
sub
xor
loopne
test
aad
mov
xor
pop
sbb
popf
xor
decl
jg
fldenv
fists
mov
nop
fistpl
sbb
std
adc
adc
dec
roll
adc
sbb
out
or
int3
sbb
aaa
or
dec
aad
outsl
dec
pop
fwait
fs
sub
fistl
cli
jmp
out
add
call
pop
push
repz
push
ljmp
jg
lods
mov
arpl
mov
lret
pop
cmp
mov
xor
push
movsb
and
jle
outsl
lock
and
clc
or
push
out
sub
decl
or
lods
call
xor
scas
inc
xor
mov
fcmovne
sti
cmp
push
ljmp
icebp
rcrl
jno
mov
push
xchg
sbb
mov
decl
pop
fs
cltd
mov
stos
mov
adc
pop
adc
xchg
data16
ljmp
or
inc
xchg
and
and
lock
xchg
inc
cwtl
or
mov
sub
repnz
inc
repnz
jb
popf
loope
lods
ret
cmpsl
pusha
cld
mov
arpl
pop
decl
sub
mov
xchg
fists
mov
gs
jne
pop
insl
mov
pop
lock
mov
lret
stos
scas
push
lock
aas
cmpsb
mov
das
lock
hlt
out
je
push
xchg
add
xchg
sub
dec
adc
xor
jecxz
pop
int3
icebp
rep
sbb
fildll
das
xchg
dec
ffreep
sub
push
sub
xchg
stos
mov
lods
aaa
push
sbb
in
fucomip
jg
pusha
mov
adc
imul
out
js
push
call
pop
pop
inc
xor
mov
sahf
insl
aad
pop
dec
xor
ja
call
push
xchg
xor
add
mov
adc
sub
test
mov
pushl
gs
bound
sub
out
aaa
bound
lea
daa
mov
call
pop
xor
fsubrp
ja
imul
inc
imul
imul
lcall
jmp
push
push
cmc
cmp
mov
mov
xor
and
add
mov
cmp
cmc
aaa
xchg
hlt
jmp
inc
sbb
sbb
mov
mov
and
jo
sbb
out
jae
dec
mov
xor
inc
aaa
out
inc
jno
xchg
push
mov
mov
test
jbe
jo
xchg
xchg
aas
inc
bound
adc
mov
incl
mov
decl
cmpsb
shll
jg
jb
jg
push
lcall
lahf
jne
pop
inc
out
cltd
enter
xchg
insb
cwtl
mov
pushf
mov
xchg
enter
int
pop
and
sub
or
cld
sub
out
adc
decl
push
fmulp
add
fcoms
sub
das
and
jns
or
mov
ss
decl
cld
sbb
bound
sub
clc
testb
test
cli
incl
xchg
sbb
push
xchg
sar
cmp
ds
aas
push
jno
rolb
nop
pop
lods
add
insb
mov
in
into
mov
int3
xor
jne
and
ja
xor
call
lods
and
jl
jae
insl
in
dec
xchg
es
cmpsb
jg
rcrb
imul
sub
mov
pop
scas
js
adc
mov
push
lret
inc
xor
mov
std
divb
jns
mov
xchg
push
out
xor
lds
mov
aaa
stc
ds
jnp
ds
mov
std
jmp
int3
sbb
ret
test
hlt
cmpsl
incl
dec
test
andl
jae
lods
push
adc
pushl
hlt
add
loopne
xchg
rcrb
out
or
iret
or
adc
mov
daa
jne
pop
les
cli
decl
testb
cwtl
mov
jne
cmp
lds
ljmp
push
std
lea
rorb
pop
in
cmpsl
cmpsb
lahf
sti
mov
fisttpll
out
xchg
add
xchg
cs
add
push
jg
mov
adc
pop
xlat
mov
cli
fimuls
out
aam
rcrl
je
call
inc
mov
mov
fbld
push
lods
roll
int3
mov
xor
xchg
sarl
leave
add
push
mov
pushl
movl
addr16
adc
mov
out
out
mov
jmp
jo
test
mov
call
mov
sub
sub
add
mov
sbb
andl
xchg
lods
jo
or
leave
sbb
mov
jmp
fistl
xchg
mov
aaa
mov
ss
pop
mov
cmp
cltd
or
adc
decl
pop
mov
inc
xlat
push
xor
inc
outsl
lcall
push
jmp
and
dec
lods
pop
arpl
sbb
rol
popa
cs
or
lahf
xchg
xchg
or
add
mov
mov
mov
data16
xor
mov
adc
mov
jo
xchg
fxam
fs
mov
adc
jge
xchg
pusha
idiv
decl
sub
fcmovnbe
clc
fsubrl
jo
in
push
aas
idivb
and
dec
mov
arpl
and
sbb
adc
xlat
fs
xchg
aam
rcll
fiadds
lds
jmp
and
jp
test
fs
adc
or
dec
add
jno
repz
jg
ljmp
fs
sbb
out
mov
test
or
ljmp
xor
pop
es
popf
sahf
jl
sbb
jge
add
adc
decl
enter
push
ret
sti
data16
mov
mov
xchg
or
sti
test
incl
aad
stc
add
cmpsb
xlat
ds
inc
addr16
sub
ljmp
inc
and
adc
xor
dec
test
sarb
lret
xchg
sahf
jne
mov
add
cltd
xor
xor
stos
out
mov
pop
js
mov
push
inc
pop
pop
in
jae
movsb
hlt
incl
iret
sbb
sub
lods
loop
mov
stos
arpl
imul
outsl
xor
mov
cmp
push
clc
lret
jg
aaa
aaa
xor
mov
xchg
jbe
fmul
add
adc
je
xchg
orb
jbe
addr16
decl
pusha
push
xchg
and
lret
shrb
cmp
push
repnz
pushf
lods
xor
into
ret
mov
sbb
jle
push
in
call
fscale
stc
cmc
xchg
xchg
inc
push
add
test
cli
mov
lds
dec
pop
mov
jl
xchg
sbb
incl
paddq
lods
fistl
movsb
jbe
dec
pop
jae
push
aad
cmp
jne
cwtl
out
jmp
and
sti
push
aam
mull
pop
xchg
dec
sub
in
cmpsl
mov
dec
stos
xor
ret
imul
jecxz
push
push
xchg
clc
pop
scas
sti
xchg
insl
push
test
jbe
cmp
inc
lea
sub
sub
jmp
mov
mov
add
sti
mov
and
sbbl
mov
popf
orl
inc
mov
ljmp
lods
jg
out
inc
push
jl
jb
cmpsl
jg
cmp
popf
xchg
aam
and
mov
inc
sbb
pop
sbb
idivb
repz
sahf
pusha
jecxz
sbb
dec
leave
daa
test
and
ds
xchg
je
sub
fistpll
push
pushf
jbe
test
in
jp
jae
fldt
mov
mov
adcl
pusha
adc
jnp
mov
push
mov
xchg
loop
imul
push
inc
add
or
jbe
lcall
cmp
in
loopne
pop
stc
scas
fists
push
sbb
es
icebp
push
lret
lcall
add
xchg
jg
repz
hlt
dec
test
nop
mov
rcrb
outsl
rclb
sub
outsb
pop
cmp
sub
push
mov
xchg
frstor
and
repnz
stos
fld
ljmp
cmp
out
daa
enter
hlt
jmp
pop
mov
pop
dec
dec
cmovle
popf
inc
sbb
int
decl
scas
mov
inc
adc
fistpl
loopne
clc
filds
pop
dec
faddl
das
imul
notb
rcr
imul
mov
imul
and
mov
pop
scas
cmp
daa
bound
push
mov
je
adc
hlt
decl
iret
mov
aad
pusha
add
sub
dec
movsl
stc
mov
mov
stos
enter
outsl
arpl
popf
outsb
in
cwtl
outsl
std
dec
lods
jge
decl
mov
jp
lds
mov
xchg
das
dec
pop
call
das
inc
or
jle
sbbl
cwtl
sub
call
out
pusha
cmp
jge
out
push
or
int3
cmc
add
xor
jg
push
pop
loop
int3
add
mov
dec
dec
push
inc
stc
lods
sub
fsts
aaa
cli
xchg
inc
push
dec
mov
pop
scas
dec
mov
filds
mov
cmpsb
or
cmp
outsb
xchg
fs
stos
push
loop
push
pop
in
cmp
movsb
mov
mov
js
popf
jnp
test
sti
shrb
or
sub
in
dec
or
in
fsubl
filds
jns
jp
scas
mov
cli
fistps
or
lret
mov
and
pop
loop
fistps
lods
mov
xchg
das
xchg
scas
into
test
call
insl
mov
xchg
adc
cmp
pop
xchg
or
push
mov
fnstsw
push
jno
rcr
xchg
push
test
add
popl
push
dec
push
decl
bound
mov
jo
rorb
cs
dec
mov
fildl
pop
into
push
incl
lahf
scas
pop
sbb
mov
outsl
in
sub
incl
jg
push
outsb
loope
incl
rsm
lcall
dec
push
iret
mov
push
mov
jg
cmp
hlt
fdivl
xchg
xor
scas
cli
icebp
shll
and
inc
hlt
cmp
xchg
xor
dec
mov
or
pop
jl
dec
je
sbb
and
imul
pusha
outsl
cmpsl
cmpb
mov
push
ljmp
inc
mov
ds
call
cmp
inc
int
into
xchg
sub
sbb
ljmp
std
call
pop
jmp
rorl
mov
ret
in
cli
scas
push
pop
cld
ret
vpsrlw
and
fwait
or
cltd
iret
ret
mov
mov
adc
and
popf
inc
test
ficoms
adc
jmp
lds
decl
mov
inc
push
in
sub
jl
aad
xchg
in
lods
stc
leave
das
lds
clc
and
ljmp
cmpl
scas
stos
outsl
decl
adc
aas
mov
push
lock
jmp
test
stc
xchg
jg
inc
cmpsb
pop
inc
ja
lahf
adc
adc
mov
subl
test
push
prefetch
or
cli
mulb
ljmp
add
jmp
sbb
jp
sbb
dec
jg
repnz
psubd
xchg
jg,pn
into
xchg
rol
add
outsl
call
loope
ret
notb
and
es
push
lods
inc
cmpsl
fwait
jg
incl
insb
sbb
mov
sbb
repnz
dec
int3
repz
mov
push
movsl
ljmp
xor
and
rolb
in
sub
and
rclb
int3
mov
outsl
scas
sub
inc
jno
cmpsl
or
pmaddwd
mov
movsl
jnp
ljmp
mov
pop
rcrl
pushf
push
push
lds
mov
fucomip
dec
das
cmp
add
and
and
add
repz
call
bound
sbb
je
pop
fidivrs
mov
xlat
xchg
xchg
xchg
iret
lcall
lret
insl
enter
xlat
sub
and
cmp
lahf
inc
ret
scas
adc
pop
std
mov
jg
fst
inc
cmp
sub
out
inc
and
call
mov
call
call
std
std
arpl
adc
push
leave
ss
aad
int3
and
enter
xchg
lock
jle
lret
inc
addr16
push
mov
incl
mov
jp
dec
mov
je
and
adc
ja
jnp
out
shlb
call
or
push
sbb
scas
or
in
add
and
clc
adc
lods
pop
sbb
sbb
sti
mov
push
push
decl
cld
fsubrp
ret
mov
jb
push
push
lock
sub
mov
mov
rcrb
add
lcall
fwait
push
mov
jp
test
orb
outsb
xchg
push
push
lret
dec
push
clc
pop
clc
xchg
sub
mov
and
cmp
sub
pushl
loop
lret
xor
pushf
cs
sub
jle
hlt
scas
icebp
outsl
std
fnstsw
and
xchg
adc
repnz
mov
leave
xchg
out
inc
dec
std
movsl
mov
jmp
ret
int
sahf
xchg
ret
dec
lcall
test
mov
push
jp
insl
popa
adc
movsb
lea
sbb
sub
nop
cpuid
loop
jmp
inc
jp
jle
jge
cwtl
or
shl
pushl
pop
enter
fs
jnp
sarl
or
lcall
dec
inc
push
decl
xchg
cld
lret
dec
jb
pop
push
dec
rcrl
shlb
jle
ftst
jl
push
xchg
aad
sbb
cli
lcall
in
int
mov
sub
repz
mov
adc
call
xchg
ljmp
mov
or
int
push
popf
mov
outsl
cli
inc
fdivrl
lcall
jne
push
and
jecxz
sub
lret
aaa
mov
xchg
fisubrl
sub
ljmp
testb
sbb
inc
repnz
jb
cmp
push
mov
ret
jmp
jno
sbb
jno
aad
pop
pop
dec
bound
pop
gs
mov
cmc
mov
xchg
xchg
aam
pop
jb
and
jmp
add
and
sub
xchg
sub
nop
je
ret
xchg
push
call
aam
lret
dec
lret
dec
ret
mov
cld
xchg
inc
cmp
lcall
popa
int
icebp
fs
push
mov
jmp
mov
push
xchg
adc
dec
outsl
inc
mov
fmuls
push
nop
mov
test
stos
popf
add
inc
out
mov
and
pop
aam
loopne
fsubs
stc
insb
cltd
push
pop
sub
ss
mov
push
stc
jae
xchg
mov
sub
sti
shlb
cmc
or
jg
sarb
outsb
es
shlb
inc
mov
test
loopne
incl
sub
fcompl
out
mov
sar
loop
dec
in
decl
fstl
fnstcw
mov
repnz
or
nop
lret
adc
xchg
cli
jg
sahf
add
cmp
pop
cmp
stos
adc
ljmp
adc
movl
dec
enter
in
jmp
push
and
or
jno
pop
or
mov
lret
lret
call
xor
cmp
sub
call
xchg
inc
cmpsb
and
popf
sti
dec
sahf
pop
pop
dec
in
dec
scas
lret
dec
out
pushl
imul
rorl
hlt
push
add
pop
xor
lods
add
fmull
mov
cmpsl
push
jae
in
push
inc
and
mov
ljmp
bound
repnz
pop
out
xchg
mov
cmpsl
xchg
add
mov
jmp
dec
faddl
and
jmp
lods
fisttps
mov
test
xchg
int
lea
jl
lret
pop
lods
dec
int3
clc
repnz
adc
mov
decl
in
fidivs
jecxz
sti
int
and
notl
inc
pop
rcrb
decl
mov
inc
mov
push
inc
jmp
mov
and
jo
sahf
mov
sbb
je
and
jge
sbb
jmp
fisttpll
popf
or
fwait
pusha
fistps
fmull
cmpsb
fnsave
call
popa
adc
mov
jno
mov
and
loop
insb
loop
sar
push
add
add
inc
ret
inc
sub
pop
xchg
or
fisttps
out
push
push
xor
jge
adc
fisubrs
cli
pushl
xor
sbb
mov
cmp
fwait
mov
movsl
adcl
push
out
cmpb
lcall
loope
in
push
jnp
adc
es
inc
mov
hlt
inc
adc
fcomps
cld
in
xor
xchg
daa
in
mov
aaa
jle
mov
or
mov
pushl
mov
mov
leave
ret
add
pop
cli
mov
imul
mov
int3
xchg
mov
mov
inc
adc
xlat
and
mov
adc
add
popa
dec
pushf
jecxz
push
clc
sub
clc
inc
daa
xchg
inc
je
es
in
inc
push
jmp
into
movb
xor
mov
pmaxsw
mov
or
push
stos
mov
jg
pushl
xlat
test
mov
jmp
push
ds
mov
mov
inc
pop
lret
fwait
mov
push
push
mov
inc
scas
inc
and
pop
clc
jmp
pop
popf
ljmp
bound
add
push
xchg
lret
or
incl
stos
out
fcmovnb
xchg
sub
xchg
sbb
loop
mov
add
loopne
jge
mov
push
dec
xor
call
rorl
fistpl
aad
lock
pop
push
mov
sub
pop
mov
pop
call
push
hlt
daa
loope
rorb
inc
and
sub
jbe
mov
test
pop
mov
in
jbe
ljmp
lock
pop
xchg
into
pop
popl
fiaddl
pushl
mov
xchg
stos
jg
push
xor
sbb
xchg
vpshufhw
in
mov
insb
sbb
dec
mov
aas
add
dec
cmc
add
test
sarb
icebp
decl
icebp
cmp
push
cli
or
jl
test
inc
mov
push
ljmp
dec
pop
add
ljmp
cmp
call
out
shll
cmpsb
sbb
pop
popa
je
outsl
add
call
pushl
shlb
data16
out
pop
push
jle
aas
adc
cmc
and
arpl
ljmp
inc
dec
xor
lock
nop
aad
push
mov
mov
pushf
pop
jecxz
andl
test
jmp
push
movsb
xor
sub
icebp
xchg
push
out
out
stos
dec
dec
jno
daa
outsb
dec
pop
std
jp
inc
jg
inc
cmc
shrb
mov
mov
push
popa
dec
mov
mov
out
jns
ss
mov
mov
into
imul
adc
hlt
pop
sbb
dec
pusha
adc
xchg
addr16
fmuls
add
loopne
fdivrp
push
xchg
imul
lods
xor
pop
loopne
pushl
mov
out
cmp
dec
out
add
jns
jns
idiv
call
rorb
jl
cmp
hlt
xchg
mov
inc
push
test
pop
cld
decl
cmc
and
rcrl
aam
fcoml
push
gs
pop
notb
pop
adc
aas
add
pop
subl
jno
test
add
mov
push
or
clc
pop
dec
xchg
cmp
inc
test
js
fsubr
mov
test
push
notl
jle
mov
mov
push
enter
fcmovu
dec
and
add
call
mov
or
fldl
cs
iret
inc
xchg
sbb
dec
dec
incl
lcall
dec
imul
and
lods
aam
sub
jmp
ljmp
jmp
sbb
xrelease
mov
push
sbb
xchg
jle
sub
fldcw
inc
ret
mov
jo
fwait
loopne
and
pop
xor
es
mov
ljmp
in
les
sbb
or
push
adc
jmp
xchg
test
stos
add
call
out
in
test
cmp
or
jbe
jg
std
rolb
mov
xor
stos
sub
inc
loop
lret
and
dec
in
push
cmpsb
lahf
js
mov
out
mov
push
enter
cmpsb
in
jo
and
ljmp
fptan
cmpsl
pop
dec
imul
movsl
and
sub
test
inc
hlt
pusha
imul
add
loope
fnstenv
xchg
lret
dec
cmp
fistpll
fnstcw
mov
xor
and
es
loop
pop
inc
jne
les
test
push
ljmp
jb
mov
sub
lods
mov
ja
mov
mov
decl
pop
in
cs
sti
shlb
icebp
push
fst
sahf
sbb
push
orl
and
mov
mov
call
xchg
mov
lea
xchg
pop
push
pop
lret
adc
pop
mov
cmp
stos
std
outsb
shl
sub
scas
push
and
cmp
or
les
stc
mov
or
adc
sbb
push
inc
mov
mov
jg
loopne
popa
mov
hlt
inc
xchg
repnz
std
lea
sbb
negl
lcall
dec
adc
imul
int3
sti
fisttps
xchg
cmp
mov
jbe
adc
aaa
clc
ret
cmp
rorb
stc
out
ss
cld
dec
jno
cmc
clc
shll
pushaw
stos
fsubl
sbb
adc
adc
add
call
jmp
lcall
xor
lods
mov
jbe
movsl
mov
jmp
icebp
push
mov
aas
pop
push
add
cmp
rol
mov
insl
fcos
or
andl
push
pushl
clc
ljmp
sbb
stos
pusha
xchg
mov
pop
data16
ss
dec
shll
dec
mov
dec
jmp
cmp
movsb
rol
pop
mov
pushl
adc
and
imul
shlb
adc
fdivl
add
jle
dec
dec
hlt
sub
sbb
repnz
mov
loope
xor
jecxz
jo
push
cmp
ja
xor
add
lcall
or
mov
movsb
jbe
cli
rcrb
dec
lock
imul
ljmp
pushf
mov
repz
cltd
loop
shlb
int3
xor
fnstenv
pop
dec
jbe
aad
ljmp
notl
add
mov
inc
pushf
mov
xlat
push
or
sbb
fiaddl
lcall
repz
and
add
test
cmp
cmp
mov
jns
cld
call
pop
daa
daa
stos
outsl
jne
insl
pop
sti
test
rcrl
mov
rorl
push
dec
aas
push
dec
sub
push
es
cmp
pop
jecxz
or
adc
adc
lret
and
andl
loope
xchg
xchg
pop
inc
mov
sbb
mov
fcmovnb
cmp
xchg
inc
cs
mov
inc
push
fdivs
xchg
mov
ljmp
xor
xchg
pop
out
jle
add
sbb
xor
inc
fildl
mov
incb
call
xchg
jg
fwait
stos
cmp
or
mov
mov
mov
sar
ljmp
cmc
mov
push
insb
cmpb
pop
outsb
pushf
jl
and
jge
adc
test
cmpsl
das
icebp
lcall
shrl
mov
sti
mov
je
gs
aaa
clc
dec
mov
mov
lea
pop
sub
call
in
ja
dec
sar
popf
aad
scas
shrb
movsb
lods
lret
rol
dec
mov
or
loopne
lea
in
es
lahf
out
rcll
mov
call
dec
cld
mov
loop,pt
fdivs
cmp
in
iret
pop
cmpsl
sub
sbb
movsb
and
mov
call
out
aad
xchg
mov
sbb
jb
mov
addr16
xchg
mov
mov
mov
pop
cld
call
addr16
push
mov
or
incb
adc
fucomip
or
mov
daa
dec
aaa
imul
call
mov
out
arpl
lea
xchg
sbb
xor
outsl
das
lock
filds
mov
pusha
pop
sysret
dec
sahf
fcomps
and
clc
mov
in
lcall
vdivsd
mov
xchg
inc
out
sbb
mov
repz
fsts
cld
sub
lds
shll
leave
xchg
sbb
sbb
cmp
sbb
ljmp
test
pushf
in
clc
ljmp
fnsave
aaa
aaa
mov
stos
jns
jbe
push
xchg
dec
lds
call
shll
mov
outsl
nop
jb
insl
sahf
bound
gs
dec
push
adc
xchg
sub
daa
out
iret
jg
outsl
hlt
movsb
imul
and
jecxz
ret
cld
icebp
jg
sub
pop
cmpsb
and
pop
loope
daa
lret
in
adc
gs
xlat
aaa
adc
decl
push
add
jg
inc
fcomi
pushf
mov
pusha
ljmp
pop
push
jl
dec
mov
incl
pop
mov
xor
mov
jbe
je,pt
cmp
call
aas
push
mov
stos
mov
es
mov
addl
inc
incl
and
lcall
outsl
or
mov
vmread
push
jl
push
into
inc
stos
inc
jg
incl
dec
ljmp
cmp
outsl
pop
imull
mov
repz
call
dec
mov
inc
mov
xor
xchg
jg
jp
add
mov
adc
lock
test
mov
adc
cld
movsb
stc
mov
and
incl
aad
xchg
lcall
lock
jl
sub
pop
cwtl
jmp
dec
fists
push
dec
fs
xor
dec
push
mov
js
arpl
and
incl
mov
and
add
jnp
inc
or
xchg
xchg
inc
aad
mov
or
lock
adc
addr16
jge
stos
push
add
xchg
insb
mov
loope,pt
mov
xchg
or
pop
scas
lock
mov
cmc
test
int3
xor
inc
insl
cli
mov
mov
mov
mov
or
lahf
sbb
ds
fcmove
push
orl
fbstp
cmp
xor
repnz
call
imul
push
lods
je
fiaddl
je
add
data16
pop
ret
lcall
popf
and
aad
mov
push
loop
decl
cld
mov
xlat
inc
xor
adcl
inc
xchg
push
addr16
push
incl
and
pop
imul
push
mov
movsl
jmp
mov
insb
add
push
xlat
jle
xchg
shr
imulb
shr
test
sub
push
dec
jmp
in
adc
adc
jae
rorb
jg
test
mov
sub
into
nop
ljmp
adc
cwtl
lock
lea
pop
fdivrl
ljmp
jno
mov
imul
dec
cmpsl
hlt
lcall
mov
jg
cmp
push
xlat
scas
mov
sti
jmp
outsl
or
rcr
adc
aas
and
dec
sbb
or
xchg
cld
push
pop
popf
jbe
insb
jg
sbb
ljmp
mov
push
lret
mov
sbb
inc
or
stos
fwait
inc
pop
cmp
stc
mov
dec
lahf
aad
pop
std
int3
xchg
ret
mov
in
xor
inc
sbb
fstpt
std
cmp
inc
dec
iret
jle
adc
xchg
or
mov
cld
testb
aam
cmpsb
lock
mov
jnp
lret
xchg
icebp
mov
mov
sub
outsb
mov
test
arpl
jnp
and
aam
push
xor
push
push
jl
inc
call
gs
fidivrs
or
jb
adc
inc
in
cmp
fsubrl
lea
push
cs
jmp
adc
and
cltd
jno
jbe
pushl
mov
mov
add
xor
call
cli
lcall
jbe
lock
xchg
and
mov
pushl
mov
inc
or
out
stc
int
es
or
push
xchg
mov
or
pop
adc
mov
mov
mov
xor
lret
pop
sbb
push
or
sarl
call
out
mov
ja
sub
prefetcht1
add
jne
aad
pop
ds
fucomip
inc
movsl
add
test
add
inc
jae
mov
bound
ljmp
aas
sub
cmp
daa
mov
xor
and
hlt
mov
into
fidivs
test
out
imul
in
adc
das
js
call
popf
loopne
push
cmpl
mov
and
fs
adc
adc
or
data16
jmp
adc
popa
sahf
clc
sub
ret
and
iret
mov
push
add
adc
adc
nop
pop
xchg
lds
sbb
sub
jge
scas
pop
repz
add
nopl
icebp
ret
sahf
jmp
fldt
cmp
sarl
mov
cmovae
xor
decl
mov
ret
mov
jb
jbe
repnz
fs
imul
and
mov
pushf
loope
mov
ljmp
cwtl
imul
rorl
push
add
lret
inc
cld
inc
jns
ljmp
mov
popa
mov
arpl
jmp
mov
push
dec
lds
cmc
and
dec
lcall
cli
dec
std
decl
insb
repnz
insl
mov
in
bound
test
pushl
rsqrtps
push
pop
iret
pushl
sbb
pop
push
clc
dec
or
in
mov
push
leave
test
lods
sar
sahf
lahf
fldpi
xor
ds
xchg
jg
jl
and
jg
jl
sbb
bound
sbb
pusha
jo
push
jne
outsb
mov
jne
movsb
or
arpl
cltd
aad
jo
mov
mov
mov
insl
jb
mov
hlt
add
pop
sbb
adc
push
aam
pushf
cmp
jmp
lods
hlt
xchg
int
jmp
loop
repz
mov
pop
das
fisttpl
bound
adc
call
cmpsl
ja
add
xchg
or
popf
xor
mov
rcrl
imul
pop
mov
xor
dec
pop
aam
jbe
movsb
or
lcall
push
mov
sar
cmp
cli
inc
sahf
pop
xor
hlt
scas
in
sbb
push
mov
jg
fistps
lahf
sub
mov
xor
cmp
sbb
bnd
aas
imul
inc
sub
lea
aad
stos
cmp
xchg
je
addl
xchg
jmp
jmp
das
cmc
incl
call
in
cmp
je,pn
sub
lahf
pop
push
test
enter
stos
sub
cmp
out
sub
repnz
decb
xor
shll
lock
push
jno
cmp
dec
sarl
pusha
std
les
and
lods
fwait
mov
inc
mov
push
pop
fsubrl
in
aaa
decl
lock
jl
mov
dec
adc
cld
add
or
decl
xchg
mov
mov
xchg
mov
aas
dec
mov
fwait
and
sar
jmp
lock
data16
sub
movl
pop
add
cmpb
push
cmc
lods
cmp
inc
in
lds
inc
cmp
fwait
mov
out
or
sahf
pop
scas
ss
mov
fsubrs
adc
push
outsb
data16
jns
push
push
push
jl
out
mov
lods
push
mov
cmc
lods
jg
cltd
out
leave
mov
test
popa
nop
cltd
std
inc
clc
mov
dec
mov
and
mov
dec
daa
in
jbe
loop
cmp
mov
mov
lret
popa
lds
cmp
cmpsl
mov
sub
ja
push
rolb
movsl
cmpsb
mov
ljmp
mov
aam
mov
mov
adc
jae
int3
mov
call
repnz
mov
inc
daa
adc
outsl
jmp
pop
out
hlt
das
sub
out
stc
jmp
xchg
or
cmp
mov
sub
out
xchg
test
push
stos
mov
inc
jge
or
xchg
fisttpl
dec
mov
pop
mov
adc
mov
xchg
mov
cwtl
mov
jp
setl
xlat
inc
push
mov
into
fildl
jg
push
cmp
mov
ss
fs
jb
inc
add
mov
push
ljmp
rcr
and
ret
cmp
rorl
or
mov
xchg
in
dec
popf
and
call
cmp
xchg
ljmp
push
repz
scas
imul
sub
mov
inc
aad
or
rcrb
stc
xchg
out
sub
jae
fists
push
insb
and
add
leave
sbbl
or
xchg
push
jnp
mov
sar
lcall
dec
dec
mov
shll
enter
lods
pop
out
mov
xor
mov
push
test
in
and
sbb
fisttps
lahf
out
lods
mov
push
mov
fs
mov
lcall
fdivrs
fmull
push
je
cmc
or
sbbl
jne
mov
jg
mov
mov
dec
shl
cmp
clc
jge
xlat
dec
push
sahf
jns
loopne
lock
mov
mov
mov
call
xor
sbb
inc
sbb
cli
push
orl
and
push
xor
xchg
xor
mov
sub
clc
jmp
fstl
cs
mov
xor
pushf
and
hlt
dec
cld
sbb
mov
push
loopne
cmp
or
or
push
push
cmp
out
aaa
add
push
out
cmp
push
jmp
lea
imul
cmpsb
mov
decl
push
mov
sub
jns
movq
shlb
call
shll
mov
push
rcrl
lcall
lcall
fwait
into
cmp
xchg
lods
jae
clc
and
icebp
iret
daa
xchg
call
pop
pop
into
shll
adc
and
negl
inc
sub
xor
imul
dec
aas
in
inc
outsl
mov
sub
mov
adc
push
sti
lea
decl
push
push
mov
fstl
fmulp
cs
mov
jecxz
adc
fldl
mov
inc
pushl
in
mov
mov
ss
in
push
fucomi
jle
jmp
or
and
cmp
jg
enter
xor
shll
test
cld
adc
sti
push
jne
cld
fistpl
or
or
jno,pt
mov
popa
dec
fwait
or
lcall
push
inc
movsb
sbb
sbb
mov
std
jns
mov
cmp
or
pop
jae
sub
add
jp
mov
fbld
mov
aad
sbb
mov
sbb
add
incl
int
push
in
jge
cld
ror
testb
cld
fdivrl
ljmp
pusha
cmp
fsubs
pushf
or
add
pop
xchg
adc
cmp
pop
jns
ud0
cmp
ret
dec
mov
lea
lods
pop
lret
lock
cs
xchg
shrb
daa
mov
rcl
clc
mov
mov
adc
sub
or
mov
push
lds
push
divb
mov
mov
sub
call
ret
xor
jns
cmpl
jmp
or
push
push
sbbl
cmp
icebp
test
cmp
loopne
mov
push
push
notl
push
aas
lds
pop
or
dec
add
cli
bound
sbb
adc
inc
fldt
adc
sarl
push
dec
shrl
push
ficoms
aam
ja
jae
pop
jns
xor
push
insb
xor
hlt
mov
mov
jnp
movsb
xchg
and
pop
or
popf
sbb
insl
sti
lock
mov
das
fcompl
pop
ret
cwtl
sahf
data16
or
ret
jmp
lcall
add
xlat
or
rolb
imul
aas
dec
jno
fistpl
insb
mov
out
adc
jl
pop
jmp
pop
rorb
leave
into
popf
push
xor
adc
out
inc
lcall
filds
dec
xor
xor
dec
leave
sbb
sbbl
loopne
in
aam
mov
popa
cld
in
test
inc
inc
std
lcall
in
pushf
add
xor
fisttpll
dec
cltd
std
sub
pop
cmp
push
dec
dec
out
inc
mov
jae
decl
inc
add
shl
test
imul
xchg
push
xchg
xchg
jg
and
or
inc
decl
mov
je
aas
insb
cmp
stos
aaa
add
mov
mov
nop
nop
daa
lock
pop
sbb
jae
in
lods
xchg
aam
fdivr
mov
xor
lds
test
lcall
cld
or
imul
and
movsb
push
adc
add
lcall
jmp
fisubs
pop
ret
jmp
je
adc
je
push
das
std
fadd
push
xor
inc
int3
jb
or
js
ljmp
in
cmc
clc
sti
popa
push
mov
mov
fsub
inc
cltd
scas
incl
sbb
les
icebp
dec
mov
call
cmp
xor
adc
jae
cwtl
or
outsb
popa
lea
add
repnz
inc
fwait
xchg
pop
xorb
incl
or
xchg
fnstcw
test
dec
mov
icebp
mov
and
jl
inc
dec
xchg
nop
add
push
into
andl
mov
outsb
mov
ljmp
sub
fisubl
cmp
mov
push
cmp
add
xlat
movsl
lods
add
or
sub
lcall
jae
pop
addb
repz
out
sub
aad
mov
or
div
dec
frndint
fwait
shlb
gs
inc
add
fcos
mov
cmc
int3
push
es
push
jb
dec
psubb
cmp
push
js
testb
rorb
xor
cmp
mov
dec
rcl
lret
sar
jg
std
push
and
fdivp
dec
shll
pop
jp
ss
dec
dec
in
or
xchg
mov
xchg
xchg
ficoml
fists
call
fsubs
add
jns
aam
adc
pop
lods
jmp
xor
pop
push
iret
cmp
add
movsl
sar
call
mov
test
dec
jns
jg
or
mov
sub
jo
clc
pop
incl
decl
iret
xchg
mov
mov
mov
sahf
inc
das
ret
outsb
add
ljmp
ja
cmp
out
xchg
rcr
jo
clc
stos
loope
int
jmp
mov
push
push
pop
dec
mov
pop
cmc
pop
push
popa
pop
es
adc
inc
xor
cmpl
incl
push
rcll
ffreep
mov
dec
mov
sarb
mov
xchg
jno
xchg
sbb
sub
xor
mov
inc
dec
pop
loopne
push
roll
lea
and
inc
inc
popa
cli
cld
xchg
call
repnz
cmp
sbb
in
xchg
sbb
mov
bound
pop
and
es
incb
sbb
pop
popf
rorb
movsb
jnp
gs
outsb
jg
icebp
push
xchg
outsb
icebp
test
xchg
into
dec
lea
les
fdivr
pop
clc
or
sahf
mov
mov
into
pop
cmp
ret
adc
movsl
imul
push
adc
sbbl
clc
sub
jmp
lcall
divb
and
push
cltd
shrl
dec
dec
into
test
push
add
cli
incl
sub
inc
push
rorb
mov
iret
and
incb
sarb
or
and
mov
and
sbb
push
sbb
jo
fildl
ret
or
cltd
pop
mov
mov
das
fimull
xor
jp
mov
nop
mov
lret
mov
icebp
ud0
mov
push
dec
push
push
adc
xchg
jmp
fs
test
cwtl
jo
jbe
ljmp
push
and
mov
lea
insl
pusha
repnz
mov
pushl
jb
sub
sbb
orl
mov
dec
mov
ljmp
lock
pop
mov
adc
xchg
sbb
jecxz
cmp
adcb
lcall
push
or
adc
es
sub
loopne
dec
daa
iret
lds
out
cs
jl
ljmp
das
lea
and
mov
push
jb
in
cwtl
inc
lcall
jl
ds
insl
bound
mov
mov
js
and
cmp
lcall
std
notl
imul
out
inc
cmc
and
lcall
sti
add
jmp
pusha
outsl
jecxz
jo
push
xor
fucomip
mov
jecxz
aam
cltd
add
les
insb
push
cld
cld
mov
loopne
add
add
xor
pop
lret
xor
into
arpl
adc
lcall
ja
js
inc
popa
adc
mov
andb
das
add
fnstsw
cmp
icebp
push
sub
dec
les
sahf
ret
je
rcrb
mov
mov
jb
in
inc
sub
popf
ja
pop
fidivrs
jns
pop
outsl
jae
decl
popl
jae
add
dec
popa
flds
push
mov
loope
xlat
pop
fs
cld
pushl
xchg
movsl
sub
xor
xchg
xchg
rol
and
insb
in
adc
lcall
negb
aas
add
mov
cmp
xchg
mov
decl
pop
je
insl
mov
insb
cli
mov
movsb
xchg
or
sub
filds
aad
push
jmp
repz
jge
nop
shlb
cli
test
push
adc
ds
and
xchg
inc
enter
or
je
aad
xor
pop
movsb
adc
push
and
repnz
inc
aam
stos
cld
jge
mov
cli
stc
push
stos
sub
decl
movsl
add
test
push
jge
and
ljmp
inc
mov
push
xchg
ret
shrl
xchg
inc
call
sbb
pusha
popf
pop
jb
xor
popa
mov
sbb
pop
lahf
sbb
in
dec
mov
add
mov
movsl
xor
notb
sbbl
mov
xor
cli
call
int3
popf
jge
mov
xor
dec
repnz
mov
push
adc
jle
pop
pushl
xor
hlt
es
jnp
adc
inc
pop
popa
ljmp
rcr
call
xchg
cmc
jge
in
xchg
sbb
sbb
sub
popf
cmp
pop
xchg
pusha
cmp
aaa
cmp
jmp
or
push
mov
cmp
into
or
jl
xchg
ja
sarb
jecxz
push
cmp
cmp
jl
mov
cmpsb
mov
dec
or
pop
aam
in
in
lea
mov
dec
pop
pop
fiaddl
dec
int3
add
dec
jle
loopne
mov
mov
shlb
and
jns
dec
cmp
pop
test
push
push
fstps
add
jmp
loop
scas
adc
dec
jns
insl
je
xchg
cs
jg
inc
xchg
sub
decl
push
xchg
aad
pop
sub
mov
sbb
insl
push
mov
pushl
mov
insb
jl
out
and
dec
jg
xchg
pop
sub
mov
adc
jl
sub
pop
jp
xchg
jg
call
arpl
xchg
out
add
pop
sbb
jecxz
jge
cmp
dec
add
movsb
xchg
in
inc
imul
cmp
pushl
sbb
movsl
jle
xchg
rorl
push
jp
lcall
dec
sbb
inc
jae
inc
jecxz
insb
cmp
fisttpl
xchg
inc
cmp
inc
pushl
mov
pop
ds
sbb
rolb
adc
int3
ljmp
add
cld
add
out
enter
sahf
je
mov
repnz
cld
sub
cmp
mov
push
call
or
and
cli
clc
sbbb
push
pop
fildl
mov
jne
jo
jo
cmpb
in
mov
ljmp
inc
and
mov
xor
aad
and
adc
dec
push
jae
rcl
sbb
sub
xchg
pop
cmp
sub
sub
and
or
iret
cmp
js
in
outsl
icebp
decl
mov
arpl
cli
xor
inc
sub
push
cmp
js
fucomip
dec
mov
xor
push
lret
outsb
je
mov
test
jecxz
call
lock
mov
jmp
sbb
xlat
mov
ljmp
lcall
inc
inc
inc
xchg
mov
out
fwait
testl
or
jmp
arpl
insl
add
out
lcall
jno
inc
add
add
mov
mov
stos
int
jg
sub
jg
test
les
dec
pop
popa
or
push
mov
cmp
push
push
add
sbb
hlt
incl
cmc
cs
mov
andb
mov
add
rol
int3
pop
dec
in
call
cli
mov
pop
cld
decl
add
xchg
call
mov
movsl
ljmp
mov
lahf
jbe
lahf
or
push
iret
into
dec
jg
stos
incl
nop
add
subl
test
incl
lock
mov
popa
xchg
data16
jo
dec
mov
bound
test
push
subl
fs
dec
lods
je
cmp
lea
int
movsb
mov
inc
inc
iret
sbb
add
xchg
clc
push
mov
push
lock
sbb
add
push
clc
lcall
pop
aam
fdivrs
out
or
lcall
mov
data16
icebp
adc
lods
jge
push
mov
out
jae
mov
out
adc
xor
mov
mov
xchg
mov
dec
adc
aaa
imul
sub
sbb
mov
icebp
test
xlat
insb
pop
cmp
scas
mov
add
dec
mov
or
pop
mov
sbb
pop
and
call
or
hlt
sbb
inc
and
scas
mov
or
ljmp
add
lods
cmp
pop
pop
dec
rclb
incl
push
mov
or
mov
aam
jmp
lds
lret
jecxz
pop
leave
mov
xchg
add
push
lock
dec
jmp
pop
clc
and
inc
or
fsubp
pop
jp
sbb
ret
jnp
ret
mov
divl
ret
dec
mov
sbb
or
push
hlt
cld
jmp
add
xor
dec
jg
mov
clc
push
enter
lahf
push
add
push
test
push
cs
or
add
stc
inc
clc
add
jo
add
pop
pop
cli
mov
mov
fcoml
in
mov
add
and
lret
cmp
imul
loopne
fildl
cli
or
pslld
fwait
test
sub
outsb
add
pop
ret
mov
sbb
aas
hlt
add
clc
sub
pusha
jne
sahf
popf
out
cs
push
mov
xchg
pop
jl
inc
stos
sub
cli
fs
insl
jnp
and
add
cmp
jae
outsl
mov
mov
mov
in
in
xor
fucomi
lods
les
mov
int3
mov
negl
lods
xorb
sarl
inc
cmc
js
movsb
popf
int3
jb
inc
sub
adc
int3
push
adc
imul
mov
ret
daa
pop
jbe
adc
lahf
adc
mov
cmp
test
scas
fs
dec
xor
and
mov
std
mov
mov
sbbb
fldcw
stc
das
inc
pop
sbb
mov
aad
inc
stos
sbb
fildll
push
sbb
jmp
out
mov
add
test
sub
jb
cmp
js
or
or
sbb
es
in
ljmp
cmp
inc
aaa
xor
cmp
or
sub
adcl
jo
dec
aas
adc
push
add
mov
negl
fistpll
add
sub
push
cld
xchg
cmp
int
add
push
push
je
bound
sub
mov
inc
repnz
mov
stos
mov
orb
dec
pop
les
inc
and
sub
dec
push
add
adc
push
adc
mov
lods
push
cmovo
push
icebp
push
pop
and
stos
fdivs
nop
jbe
stos
mov
add
push
nop
inc
daa
addr16
push
add
ja
or
inc
outsb
push
mov
and
or
fcmovnbe
popa
aaa
or
adc
push
clc
mov
adc
orb
fldt
and
and
inc
imul
es
pop
dec
nop
mov
insl
gs
test
mov
fcmovnu
or
jo
pusha
test
adc
pop
push
fcompl
push
or
mov
xor
rclb
js
or
test
or
fiadds
lcall
je
lods
fcompl
ss
adc
add
and
jmp
sub
cmp
mov
mov
pop
fstl
stos
dec
adc
outsb
pop
sub
cmp
test
lods
jmp
or
rolb
pop
lret
or
add
popa
mov
insl
xchg
std
add
mov
insl
lods
push
mov
cltd
sbb
inc
test
inc
sub
out
sub
jno
push
jo
push
xor
add
adc
inc
adc
mov
popa
nop
dec
cmp
data16
dec
lea
add
int
mov
popf
adc
or
push
dec
dec
sub
insl
imul
sbb
dec
adc
adc
sbb
popa
xor
ja
and
test
sbb
lea
pushf
pop
pop
fsubrs
imul
inc
imul
push
jo
imul
jne
adc
inc
xchg
and
xchg
repnz
jbe
fisttpl
dec
roll
adc
xor
test
sbb
dec
and
mov
jno
subb
push
jo
ljmp
push
insb
fists
sub
pop
cmp
pop
imul
xlat
dec
ret
nop
inc
in
lcall
adc
test
jle
add
test
jg
jnp
pusha
aaa
data16
or
push
mov
out
adc
and
jecxz
mov
pop
fucomi
and
inc
imul
adc
adc
imul
pop
leave
test
test
rcrb
inc
pusha
mov
ja
rcl
pop
filds
add
or
mov
push
sub
xlat
cmp
xor
addb
int
xor
sub
insb
into
push
aaa
cmpsl
inc
rol
int
or
sti
jo
pushw
push
adc
cmp
pop
and
mov
rolb
arpl
rclb
mov
and
push
jb
mov
loopne,pt
inc
sub
or
inc
and
into
adc
ljmp
das
sbb
in
cmpb
or
mov
test
or
and
cwtl
faddl
dec
xchg
and
or
in
je
sub
jmp
push
adc
inc
nop
pushf
jo
insl
add
add
fwait
imul
xchg
stos
inc
inc
jae
imul
mov
or
xor
sbb
iret
sub
dec
das
sbb
push
test
push
add
cmp
shll
test
inc
add
dec
push
pop
leave
inc
push
popa
inc
push
pushf
and
xor
push
pop
imul
fnstcw
add
insl
cmp
pop
stos
xorb
stos
in
je
inc
xlat
mov
adc
or
test
nop
push
or
shrb
adc
and
subl
jecxz
or
je
mov
push
nop
ja
pop
pop
jae
imul
xchg
pop
push
inc
or
aaa
inc
inc
cwtl
leave
or
out
dec
push
push
sub
rcrl
xorb
jne
mov
add
fisubrl
and
sbb
mov
sub
sbb
icebp
add
mov
jo
xor
push
in
mov
mov
or
idivb
insl
adc
rcrb
int
inc
test
mov
pop
pop
pop
lcall
push
or
jae
das
mov
pop
mov
sub
jle
adc
jp
pop
push
movl
orl
test
and
pop
or
pop
xor
and
mov
jo
out
mov
out
mov
pop
xor
push
inc
mov
sub
xor
or
mov
mov
test
jae
dec
sbb
ja
pop
imul
dec
pop
xor
jo
jae
or
xchg
out
xorb
dec
push
rorl
push
xlat
adc
mov
sub
mov
pop
je
add
in
inc
dec
test
dec
das
xchg
scas
add
mov
pusha
mov
sbb
pop
mov
sub
inc
and
mov
mov
adc
mov
sbb
pop
and
sub
cmovs
jecxz
cmp
sub
and
push
andb
cmp
lods
ret
mov
inc
xor
lcall
or
or
sbb
jo
cmpb
ds
jnp
add
test
xor
push
xor
insl
mov
sahf
ss
subl
or
cld
aaa
aas
push
dec
inc
inc
and
dec
and
push
add
or
dec
pop
ljmp
xchg
or
and
push
or
add
inc
mov
push
and
inc
cmc
mov
adc
sbb
inc
rorb
or
mov
mov
test
add
dec
sub
add
push
lea
icebp
sbbb
inc
and
adc
adc
or
add
mov
addr16
sarb
or
mov
sbb
push
pop
lock
add
inc
push
adc
sbb
inc
fcompl
rcrb
add
and
or
mov
or
icebp
and
mov
dec
icebp
push
mov
icebp
inc
mov
add
push
faddl
and
or
into
mov
xor
add
pop
add
andb
mov
sbb
lods
aad
adc
add
mov
xchg
loop
mov
add
and
inc
into
adc
or
sbb
push
icebp
and
ja
test
add
je
lods
push
ss
or
and
adc
lods
fnstsw
inc
inc
push
or
jbe
outsl
or
dec
cwtl
and
add
xor
add
sbb
or
in
pop
fstpt
adc
loop
pop
fsubrl
test
mov
sbb
test
sbb
fisttpl
and
inc
sub
inc
andb
adc
inc
adc
push
add
add
pop
lret
and
add
adc
test
loope
xlat
push
jp
lock
stos
add
lock
and
inc
inc
and
mov
mov
inc
addb
test
ret
dec
lea
or
inc
movl
fs
pop
adc
aad
sub
add
jns
movhps
pop
adc
and
and
filds
add
jns
and
add
mov
pop
or
cmp
cmpsb
cmc
adc
inc
insl
sub
push
sub
stos
add
lcall
aad
test
test
pusha
imul
inc
add
lods
xor
aas
push
add
sbb
or
test
push
mov
or
mov
mov
push
stos
lods
mov
sub
stos
add
insb
pop
jmp
mov
and
aad
imul
cs
push
add
ja
fisubs
lcall
jns
int
and
adc
cs
ret
imul
lcall
and
and
push
pop
sub
fcomps
cltd
mov
mov
push
add
sub
movsl
sub
xchg
push
fcomps
push
sub
insl
adc
push
add
mov
test
test
jae
push
cmpsb
mov
int
or
sbb
xchg
lods
push
inc
sbb
scas
daa
add
push
js
imul
xor
inc
mov
stc
jle
inc
sub
adc
cmp
xchg
add
mov
or
cmp
sbb
je
mov
cwtl
subb
stos
xchg
rclb
mov
add
dec
and
mov
sub
xor
popa
add
cmp
hlt
scas
inc
cmp
mov
leave
mov
mov
push
pop
jae
test
xor
sbb
sti
sbb
andb
inc
imul
pushl
lcall
mov
aad
mov
add
ret
lret
jo
mov
dec
ret
xchg
lret
pop
mov
cltd
xlat
daa
arpl
fwait
mov
pop
adc
ror
test
lcall
out
push
andb
inc
push
movsl
push
cmpsb
xor
testl
push
stos
xor
push
xorb
stos
fwait
dec
inc
and
add
mov
adcb
mov
into
add
imul
imull
cltd
pop
stos
bound
mov
pop
lahf
test
int
sbb
xlat
mov
mov
adc
add
cmp
leave
jae
shlb
push
stos
out
movsb
add
jg
mov
dec
cli
xchg
ret
data16
inc
or
pop
stos
pushf
mov
push
mov
jnp
imul
rcll
add
mov
xchg
add
insl
cmpsb
pusha
add
imul
inc
xorb
scas
loope
cmp
pushl
inc
ret
in
or
stos
push
mov
stos
int
lods
aam
lahf
bound
sbb
mov
xchg
jbe
in
lcall
cmp
cmp
adc
inc
mov
cmpsb
or
push
or
add
sbb
xor
pop
inc
pop
adc
jae
loopne
je
xchg
xchg
xor
shll
or
sbb
pop
mov
or
xlat
pop
inc
xor
adc
pop
push
inc
and
pop
inc
imul
imul
push
or
nop
cmp
sbb
loopne
inc
mov
movsb
mov
adc
popa
push
repz
and
mov
add
add
xor
pop
push
push
dec
inc
jae
pop
cmp
js
inc
xor
cmc
andb
dec
mov
test
xor
imul
push
out
scas
add
cmp
cmp
fidivrl
or
jg
xchg
subb
push
popa
jo
inc
subb
repz
sbbb
sub
test
mov
pop
repz
loope
into
mov
mov
imul
jae
sub
dec
or
int
push
aaa
push
or
inc
sbb
inc
mov
loopne
and
insl
xlat
push
mov
push
add
jge
dec
xchg
in
push
fcomps
scas
push
dec
ja
or
mov
adc
rcrb
pop
rcll
add
bt
cmp
xchg
ja
nop
jae
loope
mov
pushf
inc
xor
pop
cs
jnp
mov
inc
rclb
icebp
push
jmp
leave
cmp
andb
xchg
lea
or
int
xor
ss
jne
adc
adc
mov
inc
in
pop
mov
and
inc
mov
jo
je
and
or
mov
leave
adc
xchg
add
test
push
xor
lods
into
pop
ss
insb
adc
and
or
dec
shlb
or
add
jp
shrl
roll
fs
test
test
push
jo
mov
cmpsl
or
push
dec
pop
out
dec
add
sahf
xor
or
add
aad
nop
cmc
or
aaa
inc
imul
or
insb
in
loope
int
cmp
xor
and
dec
es
ret
in
scas
sub
imul
add
addr16
popa
inc
dec
test
mov
cmp
dec
and
jae
push
push
iret
arpl
pop
ljmp
and
in
dec
clc
mov
or
pop
ret
sbb
stos
sub
sahf
and
mov
fmull
push
jae
sbb
ficompl
mov
cmpsb
jo
es
addr16
sub
sub
mov
sbb
call
sbb
push
je,pt
or
add
inc
xor
loope
std
mov
lds
pop
test
test
fdecstp
or
loopne
lcall
pusha
ret
loopne
inc
ret
pusha
jo
loopne
cmp
pop
or
nop
das
xchg
fiaddl
dec
mov
mov
add
pop
sbbl
shlb
lock
push
pop
int
sbb
imul
xor
pop
mov
mov
lea
lods
adc
xchg
mov
sbb
mov
sbb
or
mov
pop
sub
xor
sbb
flds
jo
sub
push
mov
inc
mov
imul
fdivrs
mov
push
data16
test
jg
inc
adc
add
pop
incl
inc
outsl
insl
jo
jb
push
je
imul
dec
outsl
fs
gs
popa
outsb
pushl
inc
adc
jb
outsb
je
jb
arpl
jae
jbe
pushl
gs
gs
sub
dec
dec
sub
addr16
sbb
dec
aaa
outsb
dec
mov
call
push
pop
je
jo
outsb
outsw
dec
push
xor
jnp
or
popa
je
dec
and
gs
push
pop
paddsb
outsl
ja
inc
imul
push
ja
push
add
outsb
push
inc
jo
jnp
pop
sti
imul
dec
push
imul
jae
gs
cmp
cvtps2pi
push
fmul
movsl
push
scas
mov
xor
fsubrl
lahf
and
insl
inc
push
outsl
outsb
dec
pop
into
inc
cmc
xor
or
and
push
gs
popa
outsb
mov
sub
outsl
jb
test
sbb
xchg
loope
cmove
daa
outsb
push
inc
lds
repnz
dec
add
add
adc
add
inc
inc
adc
sbb
in
xorb
xlat
int
or
add
or
fcomp
jnp
and
sbb
adc
bound
sbb
add
and
inc
in
add
les
mov
pusha
push
popf
fstpl
add
fwait
pop
add
int3
pop
pop
and
sbb
push
sar
sbb
pop
pop
add
mov
sub
inc
inc
fs
sbb
pusha
iret
roll
cs
arpl
pop
nop
push
pop
jo
cmp
lret
jo,pn
or
add
leave
data16
add
jb
inc
mov
push
daa
int3
je
push
sbb
inc
inc
adc
or
jge
rcl
rcrb
mov
add
cmp
add
add
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
