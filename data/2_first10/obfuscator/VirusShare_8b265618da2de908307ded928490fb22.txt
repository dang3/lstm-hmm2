call
mov
add
mov
inc
sub
dec
add
add
dec
mov
imul
dec
sub
xor
inc
dec
sub
push
outsb
push
push
sub
imul
adcl
jge
inc
cmpsl
cmp
lret
loope
clc
addl
xor
in
incl
popf
pop
shll
cmp
sti
pop
lret
ret
je
dec
insl
sub
std
out
dec
push
jo
add
rolb
gs
inc
inc
add
inc
add
insb
mov
and
aaa
xchg
and
adc
sub
push
fimuls
jg
in
jb
jne
dec
push
rorl
cwtl
movb
incl
shlb
add
or
push
in
leave
ret
nop
ljmp
pushl
scas
pop
aas
cmpsb
xor
xchg
cmpsb
add
hlt
dec
cmp
sarb
fsubp
lahf
test
pop
sbb
test
push
dec
push
push
popa
mov
jb
imul
dec
xor
outsb
push
mov
ficoms
dec
fidivrl
fldt
ja
push
inc
add
xor
xor
pushl
add
lea
push
jg
into
xchg
dec
mov
jne
mov
sbb
stos
mov
incl
mov
push
inc
repnz
fcomi
add
fadd
push
imul
inc
mov
gs
dec
or
sbb
mov
mov
sbb
adc
jnp
bound
mov
fldl
loop
in
push
decl
mov
push
rorb
outsb
ljmp
rcrl
mov
ja
push
add
aam
cmp
ss
clc
pop
sbb
cmpsb
mov
addr16
mov
push
inc
jle
push
pop
dec
outsl
inc
sar
jg
stos
add
adc
mov
hlt
fwait
mov
ljmp
add
jg
scas
addr16
sahf
nop
in
mov
dec
mov
push
lahf
in
cmovp
dec
xchg
mov
popa
fcomp
pop
lock
sbb
push
mov
aam
jb
clc
sbb
in
xorb
inc
pop
jns
shlb
inc
push
iret
mov
lds
rolb
inc
js
arpl
inc
sarb
pushl
in
stos
lds
cmpsl
enter
sub
mov
adc
lcall
repnz
push
into
pop
dec
inc
push
push
inc
mov
inc
test
add
inc
mov
pop
push
imul
cmp
add
in
gs
addr16
jecxz
call
incl
or
sub
mov
jl
decb
dec
mov
fiaddl
sbb
imul
push
in
push
add
jo
sti
je
ja
lcall
dec
mov
inc
dec
mov
loop
out
dec
push
clc
mov
clc
jg
rcr
xor
ja
push
mov
sbb
mov
pop
cmp
jmp
push
dec
lds
js
mov
mov
pop
enter
inc
adc
dec
push
add
lcall
rcr
xchg
or
inc
scas
loope
mov
or
mov
lret
sahf
int3
jns
or
pushf
sbb
in
out
dec
inc
add
nop
dec
sbb
push
mov
or
xor
outsl
filds
cmp
dec
fdivr
dec
dec
inc
lcall
incl
dec
loop
inc
in
dec
jno
lahf
sarb
push
js
ret
fs
xchg
rcl
and
jno
sbb
and
jbe
push
cmp
nop
mov
ret
js
push
add
outsl
lahf
sbb
mov
xchg
jmp
xor
xchg
movsl
pop
jl
mov
jle
mov
jne
fs
test
ss
hlt
cli
push
incb
push
lods
pop
jg
fs
dec
cmp
loop
jecxz
outsb
mov
inc
fistl
jl
xor
xchg
push
mov
sbb
enter
iret
xchg
dec
test
mov
inc
das
shl
je
movsb
fsubs
dec
add
jno
dec
push
sbb
cmp
mov
push
push
imul
or
mov
ss
pop
inc
je
je
rolb
pop
jnp
lret
addb
lcall
sti
push
pop
popa
push
cmpsb
inc
push
pushf
out
inc
outsb
push
dec
inc
mov
and
xor
adc
inc
xor
mov
aam
or
cld
mov
inc
inc
fisttpll
loop
xor
ja
lea
popa
cli
aas
mov
pop
pop
xchg
mov
cli
je
call
push
sbb
jl
jge
roll
dec
or
sub
push
std
sub
repnz
mov
or
roll
sub
shlb
inc
jae
jbe
fidivl
filds
stc
stos
nop
mov
dec
sbb
pop
insb
rorb
jmp
push
bound
clc
orb
test
or
cmp
dec
in
popa
mov
outsb
ret
decl
adc
call
out
je
pop
xor
mov
adc
xor
into
imul
inc
push
dec
inc
arpl
jns
dec
sub
jns
ljmp
mov
or
push
ljmp
sbb
pushl
xor
sbb
and
jl
adc
mov
clc
add
ret
dec
add
inc
push
inc
mov
dec
pop
xor
sub
sbb
add
jbe
fldcw
jb
imul
or
inc
addr16
cmp
icebp
sbb
call
jl
mov
xchg
cmp
xchg
mov
inc
repnz
jg
jmp
enter
mov
call
add
inc
mov
ljmp
dec
sahf
mov
clc
dec
pushf
push
cmp
add
nop
daa
cld
mov
call
and
and
sub
pop
sbb
mov
dec
pop
fdiv
add
cmpsl
jae
sub
push
mov
cmp
pop
sarb
scas
adc
sub
mov
movl
inc
cltd
push
xor
dec
dec
neg
mov
cmp
xlat
insl
outsb
sti
lods
push
jae
decl
adc
sbb
nop
hlt
mov
mov
and
add
inc
in
mov
mov
add
testl
lcall
mov
aas
insb
push
push
lods
dec
movsb
fcom
ret
mov
inc
mov
je
jb
cli
ret
cmc
jb
hlt
testb
repnz
push
inc
push
xor
jg
or
push
rolb
test
pop
push
dec
jge
xorb
fdivrs
xorl
jmp
sub
fistpl
jne
sbb
mov
dec
xor
test
pop
inc
inc
dec
xor
cmpsl
sub
dec
inc
stos
inc
aaa
inc
jg
fdivrl
inc
mov
xchg
repz
out
and
xchg
movsl
jmp
pop
sbb
idiv
mov
aas
dec
mov
add
test
or
cltd
or
add
fxch
enter
mov
xchg
xchg
fxch
in
xchg
cmc
int
lods
push
shl
nop
fistl
mov
mov
or
fstps
cmp
xorl
mov
sbbl
or
push
sub
mov
ret
push
pusha
sub
fldt
add
loop
mov
pop
sbb
ret
push
sbb
cmpsl
sbb
rol
push
cltd
pop
adc
aas
inc
es
jo
test
daa
xchg
cmp
push
sub
movsb
or
add
inc
cmp
sub
cmp
ss
dec
arpl
fnstcw
or
xor
sbb
testl
push
mov
push
pop
aad
repnz
roll
fs
lret
loop
add
xor
fnstenv
mov
rcrw
or
inc
inc
adc
sti
inc
jp
adc
push
rorl
or
mov
dec
mov
cmp
xchg
push
xor
loopne
movsb
and
pop
and
push
nop
mov
mov
add
cmp
sub
les
sarl
xor
sub
sbb
jo
dec
push
sub
dec
push
add
or
add
imull
test
loope
inc
mov
fs
mov
adc
call
xchg
mov
xchg
push
and
fstps
out
popa
leave
push
scas
stc
lods
add
sub
push
icebp
mov
loope
call
ficoml
inc
imul
mov
add
jae
subl
add
jmp
adc
mov
adc
push
stos
sub
in
push
add
dec
int3
or
sbb
sbb
enter
pop
leave
lock
mov
loopne
cltd
leave
pop
aam
xor
and
bound
fcomp
arpl
mov
into
push
arpl
cmp
add
inc
sbb
notl
jo
cmp
sub
pusha
pushf
jecxz
mov
jbe
daa
leavew
bound
jg
cs
rorb
xchg
add
adc
dec
jl
mov
js
call
test
out
sbb
int
jo
mov
or
lcall
mov
adc
jnp
jmp
mov
push
into
dec
sbb
mov
mov
shll
sub
js
dec
jne
dec
adc
js
aam
das
mov
add
mov
add
push
insb
push
mov
push
push
hlt
push
ljmp
aaa
or
ret
popf
lock
dec
rorl
shlb
lods
sbb
mov
inc
shlb
ss
rolb
repz
lock
decl
inc
add
mov
pop
rclb
xchg
call
jae,pn
in
pop
cli
pop
sbb
inc
push
inc
je
movb
dec
ja
mov
bound
lcall
cmc
rorl
aaa
inc
pop
pop
push
dec
ja
dec
jp
scas
hlt
jmp
clc
cmp
xor
push
mov
aaa
jo
sub
popa
jp
out
mov
in
scas
incl
testb
imull
push
out
fsubrs
in
jb
mov
lahf
inc
cli
dec
mov
lock
jl
insl
rorb
aam
push
in
add
dec
dec
les
jg
jmp
aas
cmp
insl
cmp
cltd
daa
in
rcrl
subl
pop
mov
std
call
jl
cld
lcall
ja
lcall
iret
or
jmp
jne
lods
rclb
or
mov
push
cmp
mov
fidivrl
and
ljmp
incl
dec
pop
int3
je
call
lds
pop
fiaddl
pop
lods
outsl
push
jmp
outsb
js
adc
jae
push
mov
or
ficomps
int3
call
inc
push
fsubr
scas
add
popa
dec
jbe
shlb
jae
pusha
mov
notl
test
clc
ficoms
xor
cld
add
mov
cmp
sub
mov
jo
in
lds
hlt
outsl
jae
add
iret
dec
mov
aam
out
aaa
outsl
imul
pop
add
test
sub
jne
mov
push
push
clc
popf
pop
sbb
das
testl
pushl
xor
ficoms
jns
pop
push
xchg
ret
insl
xor
and
imul
push
jbe
sbb
hlt
shlb
dec
dec
imul
cmp
out
add
pushl
bound
mov
notl
stc
add
mov
fldenv
cmpsb
mov
and
pop
movsb
loop
mov
in
imul
test
add
lds
mov
push
mov
rol
mov
dec
pop
jno
imul
pop
cs
ret
sbb
shrb
inc
push
jge
inc
xor
shrl
shrl
pop
mov
scas
call
data16
or
xor
mov
inc
push
push
xor
xor
jo
xchg
pop
or
enter
jl
fadds
cmp
bound
mov
and
mov
pop
mov
fwait
aas
popf
pop
xor
popf
das
inc
aaa
jnp
mov
in
mov
fmull
scas
dec
mov
pop
jle
mov
jno
fsubs
rolb
sub
dec
jne
adc
dec
shrb
dec
lock
aad
dec
jle
push
decl
mov
mov
jmp
sbb
addl
xchg
mov
add
in
xor
xor
dec
pop
mov
lahf
mov
push
pop
or
mov
cltd
mov
gs
inc
sbb
jbe
jbe
add
popa
add
adc
sub
adc
dec
leave
push
imul
xor
nop
or
dec
sbb
cmp
sti
or
dec
mov
int
inc
add
or
mov
add
add
sub
popf
add
xor
add
leave
sub
xor
and
lds
mov
and
pop
or
cmp
stc
pusha
stos
xchg
mov
pop
push
adc
or
mov
or
inc
xchg
pop
push
inc
and
es
jg
movsl
cmp
mov
mov
xor
sub
pop
push
fs
push
push
sbbb
js
jns
push
pop
loope
push
mov
rcll
ss
repnz
inc
ss
sub
push
addr16
repnz
ret
outsb
out
ja
out
fldt
js
imul
call
fimuls
jbe
ja
clc
outsb
test
mov
add
icebp
fistpll
push
or
fbstp
mov
push
mov
outsb
mov
divl
pusha
sar
and
sbb
sbb
ja
in
ret
call
dec
sub
inc
or
push
roll
push
test
cmpb
xor
push
and
stos
add
adc
fbstp
mov
insl
test
mov
scas
adcb
in
sti
inc
sub
inc
mov
dec
adc
aam
xlat
sahf
push
in
xchg
dec
je
mov
mov
dec
adc
popf
adc
shrb
fcmovnbe
mov
cld
insb
dec
sbb
subl
cmpsl
fdivrs
aam
int3
cli
stc
jo
in
cmpsb
jb
add
repz
cli
adc
push
dec
clc
sbb
jp
dec
inc
dec
dec
push
fistpll
je
mov
sub
jno
mov
daa
loope
adc
inc
pop
imul
test
in
cmp
das
outsb
fmull
popa
push
inc
daa
xor
inc
in
push
mov
stc
push
dec
adc
mov
stc
sub
std
call
fadd
out
fimuls
mov
jle
jns
pusha
jp
arpl
adc
or
inc
pushf
cmp
push
sbb
call
xchg
add
cmp
dec
and
fldenv
inc
sahf
or
ds
jmp
fdivs
pop
or
lahf
sbb
je
ljmp
jo
hlt
in
js
push
sbb
arpl
jo
xor
adc
mov
or
push
xor
adc
pop
or
es
ljmp
cld
call
cmp
mov
repz
outsb
inc
adc
mov
xor
out
mov
push
cmp
ror
fs
jae
pop
jg
int3
mov
test
xor
add
dec
push
mov
fwait
subb
call
call
ret
test
mov
inc
incl
popl
jno
pop
push
lahf
add
add
xchg
das
adc
fisttpl
cmp
pop
sbb
inc
aaa
pop
xor
dec
xor
inc
mov
popa
nop
shll
nop
dec
push
jmp
js
ret
mov
jns
pop
inc
sub
dec
sub
ljmp
loope
push
push
adc
jecxz
fists
dec
xchg
cli
out
fstpl
sbb
mov
test
lcall
iret
mov
out
fsubl
pop
hlt
add
push
dec
je
bound
dec
aaa
mov
icebp
int3
je
out
push
cmp
call
incl
imul
sub
sbb
sbb
cmc
pusha
jmp
imul
xchg
add
enter
jae
jno
jmp
jecxz
and
dec
aad
daa
xchg
test
mov
mov
jo
ffree
jno
push
jae
push
push
xor
mov
jmp
pop
insl
rorb
repz
and
sub
sbb
pop
ja
out
pop
cli
add
outsl
sbb
adc
jae
rcrb
inc
test
jb
sahf
or
bound
or
inc
mov
add
sbb
lock
sbb
leave
jno
sbb
xchg
enter
cmp
mov
xor
adc
nop
cwtl
inc
add
push
or
cmp
add
insb
add
imul
je
and
or
pop
or
lods
push
adcb
mov
ficoms
pop
loop,pt
pop
pop
test
pop
mov
fs
pop
or
lahf
movsb
pop
imul
xchg
xchg
subb
imul
xchg
bound
xor
mov
xchg
push
pusha
jns
inc
dec
ror
sbb
lock
int
xchg
mov
pop
les
stos
jns
outsl
mov
mov
pop
mov
add
dec
ret
and
add
mov
or
pop
loope
xchg
arpl
xorb
mov
xchg
pop
cmp
in
push
out
in
xchg
xchg
cmpsb
xorl
aam
test
dec
mov
lock
stc
and
pop
int
xor
rcll
scas
cmpsl
cmp
call
les
xchg
and
or
sub
gs
scas
faddp
add
pop
lods
ljmp
inc
adc
cld
das
dec
gs
lahf
sbb
or
mov
inc
adc
mov
mov
lock
call
leave
stc
sub
xchg
sub
sub
add
adcb
jecxz
and
jmp
aam
pop
push
inc
repnz
inc
fsubs
lods
or
inc
sub
adc
daa
xchg
and
fisttpl
movsl
mov
daa
mov
or
out
jno
sbb
xor
imull
add
mov
movsl
or
les
xor
stos
addr16
test
add
je
in
aaa
adc
outsl
add
jg
or
dec
add
pusha
dec
sub
mov
add
sub
xchg
or
jnp
xchg
sbb
icebp
mov
or
jbe
mov
mov
and
fsubrs
cmp
jae
push
test
pop
cmpsb
cs
mov
fistpll
bound
sbb
mov
leave
popa
in
push
adc
pop
jb
sbb
or
mov
cld
pop
jne
cmp
cli
outsb
and
lahf
mov
lahf
lods
inc
repz
leave
push
sbb
pop
mov
jl
sub
movsb
mov
cwtl
lea
jl
and
lods
add
lods
add
cltd
enter
aad
mov
inc
cmp
daa
enter
pop
ror
cmp
popa
add
nop
push
add
outsl
mov
add
cmpsl
loope
xchg
les
icebp
push
imul
into
or
sarl
xor
ja
fcom
and
jmp
mov
lds
cmpsl
or
dec
pusha
mov
sub
incl
add
xor
mov
xchg
lret
stc
add
rorb
mov
dec
add
jae
dec
dec
add
fs
dec
add
lock
sbb
out
xor
mov
outsl
jns
xorl
shlw
mov
pop
outsb
push
call
scas
movsl
jnp
and
cs
enter
add
adcl
or
pop
xor
cmp
push
shlb
cltd
bound
mov
dec
push
ss
xchg
icebp
outsl
loopne
mov
test
dec
push
add
mov
push
add
std
or
leave
inc
xlat
jb
add
mov
jae
repnz
mov
insl
ja
push
adc
pop
xchg
mov
icebp
add
push
inc
jo
jne
push
dec
je
outsl
imul
lods
pusha
xor
dec
jp
ret
insb
xor
aaa
in
jno
xor
fadds
add
aam
push
call
mov
out
decl
mov
gs
xchg
push
mov
push
imul
add
fwait
arpl
fwait
clc
in
add
inc
jle
jo
push
mov
cmp
cmp
dec
aam
sti
xor
shl
dec
pop
outsl
in
lret
xchg
push
lods
add
dec
pop
test
inc
pop
jle
or
lcall
outsl
clc
lcall
aam
mov
repnz
push
ret
in
xchg
cld
xor
dec
sbb
or
arpl
inc
push
dec
fisttps
fmull
test
pop
add
sbbb
cmpb
std
incl
ror
and
stos
aad
in
imull
sbb
shlb
push
sbb
cld
popa
cwtl
xor
and
aas
adc
psrld
dec
add
call
sub
fwait
in
inc
sar
adcl
in
mov
inc
add
mov
sbb
inc
loopne
mov
push
inc
pushf
decb
push
jmp
je
rorb
xor
shrb
fisttps
icebp
dec
xchg
scas
adc
mov
sub
sub
stos
jae
sbb
dec
jl
jno
pop
sbbl
inc
add
xchg
push
shrl
push
in
ret
std
or
addr16
xor
dec
or
inc
jp
ret
fcoml
push
sbb
push
outsl
jbe
xchg
outsb
push
mov
mov
jne
rclb
and
dec
xor
mov
std
roll
push
xor
cmp
ja
arpl
cli
subb
into
push
inc
push
push
jae
add
jne
mov
push
pop
mov
and
mov
sbb
jge
std
incl
or
cmp
repnz
mov
sbb
out
pop
push
dec
inc
xor
sbb
push
push
call
lret
outsb
inc
and
mov
fisubrs
addr16
inc
adc
mov
mov
push
fs
adc
js
mov
jmp
xor
xchg
packuswb
mov
jmp
push
xor
cwtl
mov
ljmp
lods
jmp
fucomip
jmp
int3
ja
jp
icebp
xchg
mov
xor
pcmpeqd
jbe
inc
cmpsl
mov
lcall
push
or
inc
cmp
js
jmp
adc
mov
or
jae
add
loop
clc
lcall
sahf
add
in
sbb
mov
push
mov
push
jne
jno
ds
rclb
xlat
mov
push
outsb
jo
rorb
bound
int
push
gs
sarl
sub
adc
sub
xchg
fcomip
call
cmp
adc
cmp
jecxz
inc
into
es
pushf
stc
push
push
ret
pop
jo
inc
and
pop
filds
jno
fisttpl
xor
arpl
mov
mov
lahf
xchg
mov
stos
adc
jp
out
out
jp
into
xchg
call
stc
scas
jmp
pop
xchg
cmp
cld
jecxz
inc
leave
lret
popa
push
loopne
mov
mov
push
popf
or
push
jo
pop
push
sbb
data16
adc
fnstsw
sti
or
cmp
rorl
fs
or
pushl
push
jl
mov
lret
mov
pusha
pop
mov
adc
icebp
dec
xor
jl
nop
faddp
and
enter
jno
pop
add
add
adc
xchg
dec
sub
add
mov
jns
sub
add
lock
rorl
cmp
mov
pop
or
lock
or
add
pop
icebp
xor
or
add
sub
push
inc
or
ror
sbb
xor
sbb
push
sbb
adcl
inc
test
mov
add
cwtl
dec
push
fidivl
add
jns
and
enter
inc
sbb
add
adc
repnz
jo
or
bound
sbb
add
xor
mov
or
or
mov
cmp
fdivrs
and
pusha
and
mov
xlat
mov
pop
push
sbb
inc
rcrl
xor
adc
js
hlt
and
add
icebp
or
or
nop
or
lds
xchg
adc
inc
popf
imul
sbb
lods
pop
inc
mov
cmpsb
sbb
add
pop
in
insl
pop
xorb
inc
sbb
jnp
inc
or
shlb
rolb
shlb
ss
lcall
cmp
das
xlat
sbb
fidivrs
pop
rcrl
pcmpgtw
insb
aas
cmp
mov
sti
cltd
sub
xchg
add
pusha
adc
outsl
pusha
cwtl
xor
fs
lea
out
imul
xor
inc
cs
cmpsb
add
cs
jo
pop
mov
or
adc
cs
pusha
leave
add
jae
dec
incl
add
push
cmc
pop
and
shrb
mov
cmc
mov
dec
dec
out
mov
xchg
test
or
shr
mov
fs
adc
jmp
or
rorl
jo
or
adc
mov
gs
cmp
adc
xchg
nop
das
ljmp
push
add
lret
jg
fcoml
pop
inc
int
adc
insb
dec
pop
je
adc
decl
sbb
xchg
xchg
js
adc
test
sbb
loopne
sbbb
mov
or
mov
test
inc
ss
popa
cmp
cmpsb
pop
jo
insl
push
clc
shrl
inc
pop
add
lock
xor
out
ret
cs
sbb
sbb
and
jbe
in
sbb
stos
mov
cwtl
mov
subb
inc
and
or
and
and
sub
outsl
push
sub
cmp
ret
pop
mov
out
sbb
mov
vpsubusw
lcall
pop
scas
add
dec
lds
mov
cmp
or
inc
cwtl
xchg
fcomi
push
test
push
sbb
sbb
push
push
cltd
adc
test
jne
sbb
cltd
pusha
pop
cmp
lret
mov
test
xor
xchg
lea
and
mov
in
mov
into
xchg
jbe
pop
push
cmp
push
xchg
rcr
sbb
and
ljmp
jecxz
dec
xor
inc
fdivrl
rorl
dec
jb
fiadds
or
and
adc
jp
jg
test
ud1
mov
rorb
add
clc
std
movsb
psadbw
dec
scas
cmpsl
shl
jns
imul
nop
dec
mov
push
pop
pop
inc
rclb
sbb
pop
cmp
popf
mov
mov
jo
lea
shrl
pop
ret
arpl
popa
aas
mov
dec
scas
mov
mov
dec
or
push
mov
and
fiaddl
nop
xchg
lret
dec
aam
bound
test
mov
movsb
stc
or
sub
xlat
adc
leave
loope
jp
rcrb
fdivl
jo
push
cld
int
xchg
icebp
aaa
xor
lds
push
add
push
and
scas
mov
mov
pop
int
or
cmp
sbbl
add
addb
pop
inc
call
popa
sub
cmp
out
sub
es
loope
add
clc
lret
xor
mov
fnstenv
sbb
mov
lcall
dec
inc
or
xor
shlb
movsl
dec
lret
pusha
jno
cmpb
sbb
jno
mov
jecxz
and
xor
outsb
sub
js
add
mov
dec
addr16
inc
dec
xchg
or
pop
xor
inc
jns
pop
add
xchg
sub
lods
add
addb
sbb
enter
incl
in
and
sbbb
jg
push
adc
in
push
jae
dec
cmp
enter
and
lea
add
push
dec
ljmp
loopne
dec
dec
sahf
or
mov
and
icebp
xor
loopnew
call
ss
xor
stc
sub
sbb
sub
mov
test
jp
ljmp
push
rolb
decl
sti
sarl
push
adc
and
clc
or
fcmovb
xor
stos
cmp
int
test
sbb
jbe
data16
sub
and
test
inc
mov
mov
sbb
inc
mov
sbb
incl
cmp
jae
cmp
mov
mov
xlat
or
mov
xchg
cs
dec
loop
pop
repnz
mov
adc
aaa
push
orl
aaa
xor
rorl
fildl
call
fdivrp
ljmp
mov
out
into
stc
adc
sbb
mov
icebp
xor
lahf
inc
ret
in
in
cmc
ss
push
mov
sbb
hlt
rorb
lahf
andl
lds
inc
dec
ja
mov
add
push
roll
jl
dec
add
clc
loop
ret
dec
xor
push
inc
add
xor
jmp
xchg
pop
push
das
push
mov
sahf
scas
lret
into
int
loop
aas
pusha
icebp
in
subl
pop
add
bound
jle
jno
xorl
test
and
dec
popa
add
mov
ljmp
inc
push
jns
jg
ds
jae
mov
pushl
and
sbb
addl
inc
cmp
lock
daa
add
dec
xor
cmp
xchg
loop
or
jns
mov
add
sbb
rcr
icebp
and
push
jo
arpl
mov
sarb
pushf
lret
outsl
jae
lcall
aam
mov
stos
or
mov
jmp
sbb
mov
add
dec
data16
mov
call
addr16
cld
fsubrp
push
sbb
in
push
fs
pop
cmp
jle
and
pop
dec
icebp
decl
dec
decb
adc
sub
testb
ret
dec
inc
mov
dec
push
into
push
imul
pop
push
imul
fwait
mov
arpl
addr16
iret
push
fsubl
clc
dec
mov
ljmp
shll
imul
xchg
xor
xchg
add
out
push
pushf
ret
push
inc
dec
push
ficoms
jb
push
push
jno
xchg
adc
int3
outsb
xor
insl
dec
push
fildl
lods
ret
arpl
jns
inc
mov
pop
dec
dec
dec
fcom
pushf
cmp
jnp
inc
ret
clc
les
mov
xor
mov
sbb
push
jns
and
inc
test
or
push
cli
stc
divb
jne
gs
push
push
mov
stos
rorl
fimuls
add
xchg
push
test
or
mov
aas
mov
push
bound
movsl
add
test
pop
or
push
in
cltd
or
ljmp
or
dec
push
inc
in
push
push
outsl
xor
dec
add
dec
loop
out
push
outsb
js
mov
and
das
js
insl
jno
inc
push
jbe
imul
pop
xchg
fdivrs
cmp
mov
pop
mov
dec
jle
imulb
jns
push
dec
clc
push
loopne
or
and
dec
dec
dec
jo
imul
mov
insl
push
outsb
inc
dec
sbb
icebp
sub
je
mov
lahf
and
in
in
into
in
or
adc
cmpsl
mov
call
and
pop
dec
incb
cmpsb
inc
mov
inc
mov
inc
negl
cmp
call
test
mov
aad
arpl
fmuls
int
inc
push
pusha
add
push
cmp
loop
call
jno
lret
pop
bound
repnz
jo
add
mov
mov
xchg
mov
lret
in
dec
mov
jg
scas
pop
imul
adcl
push
shrb
aam
pushf
xchg
sub
ljmp
inc
into
hlt
cmpsb
lods
sbb
fidivrl
mov
into
jbe
jno
dec
fdiv
mov
ss
and
mov
jae
pop
push
out
jnp
mov
fs
ljmp
sti
sbb
fsub
xchg
xor
pusha
xchg
pop
jo
pushf
sbb
push
ss
mov
adc
inc
push
ret
outsb
add
mov
add
dec
jne,pn
and
adc
dec
dec
cld
push
fs
jg
ficoms
fcomp
mov
fwait
in
cmp
fiaddl
jno
add
inc
pop
in
scas
imul
adc
popf
loopne
add
test
fdivrs
pop
imul
rolb
decl
jno
dec
mov
call
pusha
xchg
xor
mov
sti
out
cmc
mov
and
inc
jp
insb
cli
jmp
sbb
dec
call
push
clc
ret
inc
dec
jecxz
add
jno
pop
cwtl
dec
jnp
xor
cmpsb
popf
movsb
pxor
aas
sub
xchg
inc
or
rorl
sbb
xchg
jmp
xchg
aaa
mov
or
test
sbb
subb
popa
or
adc
dec
fmuls
hlt
xor
mov
add
mov
jns
sbb
jne
pop
mov
stc
rolb
dec
cmc
and
mov
jg
jo
inc
xchg
and
andb
push
add
xor
inc
add
inc
test
fcomip
mov
push
xchg
mov
cmp
xsaveopt
mov
sar
adc
pop
lcall
sbb
cld
push
push
push
dec
data16
repnz
cli
add
movsl
ret
aaa
push
push
push
jg
icebp
pop
inc
push
push
cld
xor
stos
std
dec
addr16
call
bound
cmp
adcb
adc
mov
les
cwtl
cmp
mov
inc
cmp
mov
add
or
pop
pop
xchg
divb
dec
add
cltd
mov
int
mov
sti
and
test
dec
push
int
cltd
adc
addr16
mov
loopne
and
xlat
push
push
sahf
pushf
ret
inc
push
or
mov
mov
jo
push
pop
mov
mov
insb
push
and
shrb
dec
outsb
xchg
in
pop
or
movl
mov
cmp
orb
sbb
in
xor
loopne
jl
add
or
or
dec
pop
sbb
mov
sbb
fldl
addl
add
cmp
out
movl
xchg
pop
scas
cmp
inc
pusha
push
xchg
daa
repnz
or
xorb
push
push
cld
lods
ss
rorl
je
jecxz
jno
shl
pop
mov
cmp
sbb
aaa
arpl
push
pop
repnz
jo
cmp
xchg
xchg
ss
imul
pusha
add
sub
and
arpl
scas
loop
and
nop
addl
inc
add
outsl
push
in
cmp
add
cmc
dec
out
xchg
pop
arpl
in
rolb
xchg
xor
cmp
adc
sbb
lcall
test
add
fwait
lcall
insl
lds
pop
jne
xchg
or
mov
es
dec
fiaddl
roll
std
out
dec
sbb
adc
sbb
or
adcb
in
sbbl
push
xchg
out
icebp
adc
hlt
add
sub
inc
xorl
icebp
add
mov
add
in
fwait
add
pop
xor
cmp
in
loopne
inc
xchg
pop
xor
xor
pop
das
aaa
lea
add
cmpsl
inc
notb
sub
data16
rclb
movsb
es
call
pop
inc
jge
shrl
xlat
scas
outsb
xor
add
cmp
out
lea
shll
js
mov
bswap
xchg
stc
dec
and
out
call
sbb
xor
in
sti
sbb
fiadds
lea
icebp
and
std
pop
fldl
rsqrtps
mov
adc
pop
xchg
xchg
cli
jge
mov
lcall
loop
add
fimull
push
cmc
ret
jg
or
mov
movsl
mov
pop
shll
mov
xchg
sbb
in
push
jnp
xchg
and
daa
pop
mov
dec
fdivl
mov
jge
lds
movb
cld
popa
bound
popf
xor
or
cmp
pusha
and
outsb
sub
xorb
dec
cmpsl
adc
mov
cltd
mov
xor
aam
sub
add
and
jo
ret
in
int
aaa
adc
xchg
add
mov
data16
jge
cmp
jbe
pop
add
iret
push
cltd
scas
in
push
popf
pop
sbb
and
shlb
add
test
js
leave
enter
pop
push
addr16
daa
lock
incb
stos
nop
push
call
decl
cld
shlb
and
fs
subb
hlt
mov
xor
inc
mov
fwait
jae
rcll
inc
pusha
adc
fcmovb
stos
jbe
inc
or
jb
push
adc
inc
mov
negl
ret
dec
leave
es
decl
in
sub
out
mov
xchg
push
sub
sbb
imul
push
mov
sub
adc
out
jne
mov
lock
inc
andb
xchg
mov
outsb
data16
mov
dec
lcall
add
mov
inc
ss
push
add
out
ret
jmp
test
pop
shll
and
mov
mov
push
cmpsb
push
cwtl
jo
pop
dec
and
sti
loopne
push
in
push
add
lock
call
in
test
adc
bound
or
mov
pusha
call
hlt
in
shrl
mov
add
data16
inc
dec
push
xor
mov
dec
arpl
inc
add
dec
mov
add
xchg
mov
cld
pushl
test
adc
xchg
mov
lods
fwait
mov
out
clc
inc
mov
das
xorb
xor
push
adc
rclb
inc
shl
insl
dec
repnz
call
test
mov
insb
cmp
jo
jb
push
and
dec
sahf
sti
popa
cmp
xchg
shlb
add
jmp
shll
cli
and
movsl
dec
adc
xchg
or
inc
or
pop
incl
mov
jl,pn
jle
or
enter
outsl
pusha
out
jns
bound
inc
inc
inc
dec
mov
dec
xchg
test
or
lods
dec
ljmp
adc
scas
cwtl
cld
push
push
push
in
lret
lcall
cmp
adc
fistpl
lret
inc
and
or
mov
mov
rorb
xor
cltd
pop
mov
fisttps
push
pop
push
xchg
leave
mov
fidivs
inc
fstpl
dec
loopne
or
std
dec
jbe
test
into
cmp
xchg
mov
movsl
fdivrl
xchg
lds
or
aas
ret
push
dec
inc
js
bound
rcrl
outsb
ret
xor
push
pop
push
mov
and
mov
sarb
jg
movsl
jp
push
cmpsb
cltd
lret
fs
mov
int3
fstpt
aad
lock
push
jo
decb
mov
sbb
push
addr16
push
ret
xor
fildl
jae
add
sar
sbb
xlat
mov
adc
dec
dec
insb
js
ljmp
inc
je
inc
mov
js
aam
xchg
popa
pop
pop
rclb
add
insl
cmp
inc
movsb
repnz
sub
xchg
pop
cmp
mov
cmp
adc
push
dec
ja
pusha
inc
dec
inc
push
push
addr16
sbb
jne
mov
test
jne
add
outsb
roll
imul
and
adc
popa
adc
mov
stc
aad
test
lds
enter
mov
cmpl
jl
fcomps
xor
sub
dec
xor
pusha
inc
mov
paddd
nop
gs
push
inc
push
push
inc
pop
inc
jns
out
sbb
fs
xchg
test
jns
sub
mov
sub
aam
divb
or
scas
ds
enter
xchg
jle
jbe
dec
outsl
and
add
push
addr16
jo
sbb
faddl
xor
addr16
outsb
xchg
inc
mov
xor
mov
jg
in
or
fwait
sub
nop
sub
inc
dec
and
paddw
add
test
inc
dec
cmp
flds
loopne
fcmovu
push
cmp
sub
and
ret
js
xchg
data16
mulb
jbe
inc
inc
xor
das
test
mov
and
shll
gs
pushl
movsb
lret
decb
push
cmp
das
dec
fstps
jae
push
das
or
fadds
rclb
inc
inc
aas
lds
cmp
push
inc
ret
cmp
push
dec
ljmp
shlb
sbb
popf
jl
lock
lock
jmp
jo
jmp
lea
jmp
insb
jge
push
jle
pop
xchg
add
lcall
push
push
dec
inc
hlt
cmp
jg
push
test
call
add
test
mov
movsl
jno
mov
and
addb
or
cmpsl
dec
push
out
loop
sub
push
cld
add
ljmp
fidivrl
inc
ss
xchg
mov
push
add
icebp
lret
insb
js
enter
pop
mov
pushl
xor
xor
cmp
push
or
xchg
pop
add
cld
jae
jl
inc
int
call
enter
mov
rclb
xorb
inc
push
add
loope
cmc
sub
fwait
or
inc
test
arpl
aaa
mov
dec
and
nop
and
out
jg
loope
cld
pop
rorl
imul
sub
sbb
aas
mov
lcall
testl
dec
mov
int3
cld
lds
aaa
and
jae
pop
out
push
dec
dec
push
es
sub
push
push
insb
aaa
dec
out
mov
adc
adc
arpl
push
mov
and
jmp
xor
jns
lret
add
lret
pop
pop
imul
in
xor
div
xor
arpl
jecxz
push
bound
add
inc
push
mov
into
cmp
jb
xchg
fcomip
pushl
xchg
es
aam
cmpsl
repnz
fnsave
mov
lcall
mov
shll
push
les
dec
mov
pop
outsl
xor
loopne
je
insl
or
xor
popa
pop
enter
stc
cld
clc
jecxz
hlt
cli
push
and
mov
push
lcall
push
and
mov
add
jp
push
sbb
fistl
stos
enter
ss
js
sub
bound
add
out
inc
mov
ret
push
mov
dec
add
jge
ss
arpl
xchg
pushf
or
aaa
std
lcall
ljmp
push
add
ror
test
rcrl
iret
ficomps
or
and
push
inc
fsubl
arpl
out
rcr
lods
out
dec
pop
inc
push
sub
inc
cld
xor
sub
and
scas
mov
add
fs
int
stos
pop
imul
stos
leave
sti
or
mov
xor
lock
loop
push
jne
movl
mov
mov
loopne
adc
movsb
ret
push
idivb
jno
and
jb
repnz
or
arpl
lret
xchg
mov
lcall
sub
or
mov
mov
mov
or
outsl
dec
jg
ds
cmpsb
adc
lea
and
dec
add
fsts
inc
and
inc
jo
add
leave
stos
add
enter
loope
fdivr
push
xor
ss
fcomip
adc
cmp
jne
sub
or
add
cmc
call
ds
and
mov
cmp
lcall
adc
imul
orb
pavgb
jp
or
sarl
and
mov
fnstsw
lcall
sbb
mov
call
roll
lcall
sbb
loopne
mov
push
push
push
cmp
fnstenv
out
aas
push
bound
jbe
pop
add
data16
pop
adc
ret
xor
sbb
pushl
leave
pop
xor
fildll
test
add
xor
push
loope
push
dec
test
push
jne
add
or
sub
cli
es
xor
das
inc
or
cmp
lock
mov
push
dec
jo
xchg
incl
mov
aas
push
mov
xchg
mov
mov
mov
jo
xor
mov
or
add
mov
jne
and
rol
mov
outsl
popa
std
in
andl
add
adc
test
pusha
int
sbb
mov
lea
add
and
cmpsb
test
mov
pop
push
and
loop
addr16
push
mov
mov
xchg
jne
push
test
movsl
out
jbe
test
sbb
rcll
mov
and
dec
lods
aaa
aam
lods
push
aad
fsubl
or
shrl
xor
mov
inc
jmp
movsl
daa
mov
bound
dec
orl
aaa
jp
rolb
push
and
test
cmp
bound
xchg
sbb
rcrl
or
dec
mov
imul
lahf
ret
adc
cmp
and
out
out
and
push
jae
cwtl
dec
add
push
repnz
mov
and
jecxz
or
or
js
enter
lods
dec
mov
loop
aam
jno
movsl
mov
jmp
add
in
push
adc
das
add
sub
sti
fdivrl
dec
mov
add
jno
mov
aam
inc
add
mov
pop
sarb
rolb
push
and
xchg
addb
mov
cmp
std
xlat
test
lock
in
xor
adc
icebp
mov
aaa
in
xor
sbb
cmc
pop
repz
repnz
pop
jns
mov
xchg
sbb
lret
insb
mov
fmulp
add
incb
dec
mov
call
inc
dec
out
sbb
mov
inc
pop
jl
adc
push
rolb
in
and
push
xchg
aaa
loop
and
fnsave
mov
hlt
fs
pop
and
pop
hlt
mov
pop
scas
ficoms
adc
inc
inc
push
push
jmp
out
test
mov
mov
add
cmpsb
addl
sub
test
cmpsb
aam
cmc
xchg
int3
dec
imul
fs
addb
fwait
lret
gs
mov
cmp
sahf
fdivs
das
push
pop
xor
out
lcall
lods
cs
rolb
adc
add
arpl
inc
add
or
sub
sbb
pop
xor
ror
dec
enter
adc
jnp
mov
daa
push
int3
ds
pop
xchg
call
and
or
cltd
les
xor
pop
sarl
repz
roll
pusha
and
push
std
xchg
xchg
loope
mov
add
jl
mov
pop
xchg
sbb
not
and
or
test
repz
pop
in
jne
or
jne
cmpsl
xchg
enter
mov
jns
aas
dec
les
fwait
out
cmpsl
cmp
out
push
inc
test
sti
std
or
adcl
dec
pop
or
sub
lods
sub
mov
dec
adc
jecxz
sar
pop
mov
gs
mov
push
int
repnz
mov
xor
adc
xor
push
jnp
in
adc
test
adc
jo
mov
xchg
mov
mov
div
lahf
jle
pop
call
std
out
movsb
lahf
call
jmp
xchg
cmp
cs
loopne
pop
xor
jge
fimull
or
or
loop
fdivrl
cmp
bound
jns
sbb
push
adc
mov
stc
push
rcrl
inc
popa
pop
push
filds
jnp
cmpsl
inc
adc
add
dec
add
mov
push
add
add
xor
add
jecxz
sbb
pushl
cmp
pusha
cwtl
inc
or
mov
sbbl
sub
mov
mov
stos
push
xchg
insl
loopne
ljmp
add
mov
pop
push
sub
mov
adc
add
push
and
cmp
aas
inc
ficoms
bound
fbld
repz
xor
jae
dec
imul
inc
inc
and
mov
sbb
repz
and
pop
fwait
xchg
jb
addl
outsb
cmp
ficoml
js
fs
pop
add
inc
sub
push
adc
dec
addr16
sbb
cmc
pop
les
cmp
push
fdivrl
das
clc
xorl
sbb
and
cmp
jo
testb
sahf
mov
in
jnp
shrl
push
addr16
aas
movsl
or
shll
push
jmp
fiadds
add
and
cmp
call
cmc
add
std
inc
xor
push
jmp
out
in
nop
mov
mov
sbb
lock
mov
stos
mov
insb
push
adc
mov
in
call
dec
flds
pop
arpl
addr16
in
stos
xchg
inc
inc
jne
in
mov
push
testb
adcl
jo
daa
sub
pop
fidivs
add
add
mov
dec
or
outsl
mov
rorb
xchg
lret
decl
pop
rcrl
fnsave
adc
rolb
jle
cs
movsl
jg
pushl
sub
pop
mov
mov
jns
dec
add
mov
ficomps
outsb
jne
scas
dec
inc
sub
pop
sbb
push
dec
pop
roll
stc
lcall
fldl
imul
and
mov
daa
mov
lcall
sub
push
popf
aad
or
ja
pop
fcom
push
mov
aam
xor
inc
mov
cli
mov
push
add
inc
mov
call
fldcw
int
stc
xchg
jnp
cmpsb
and
fbstp
out
xchg
sbb
fwait
sarl
or
dec
jb
mov
call
icebp
xor
inc
jo
mov
aas
and
mov
outsl
cmpsb
push
jb
enter
out
or
add
xor
mov
jo,pn
fdivrl
movsb
scas
gs
and
arpl
outsl
xchg
push
add
sub
ljmp
and
add
cmp
gs
sbb
test
mov
pop
outsb
push
or
imulb
pusha
xor
jnp
arpl
mov
jnp
aas
mov
sub
fldt
rorl
je
loopne
mov
cs
sbbl
scas
dec
fcoms
fwait
add
sbb
mov
and
pop
scas
xorl
js
pop
int
inc
es
push
scas
lret
push
sbb
cmpb
or
mov
fmull
push
orl
push
add
mov
mov
inc
and
out
sbb
rclb
mov
mov
and
dec
inc
inc
cmp
movsb
lret
out
xor
je
sbb
bsf
fmul
pop
cwtl
insl
fwait
inc
xchg
test
sbb
mov
movsl
lret
dec
pop
and
aaa
les
fbstp
and
jno
add
add
xchg
cmp
mov
enter
cmpsl
imul
or
bnd
push
dec
daa
aaa
or
push
mov
pmaddwd
mov
mov
or
xor
pusha
lahf
lock
push
jo
xor
notb
shll
imul
mov
cmp
xchg
pop
mov
mov
xor
test
cld
xor
push
icebp
je
cmp
sbb
lds
arpl
in
mov
pop
add
adc
cmp
mov
bound
lret
popf
push
inc
push
cmpsb
faddl
ljmp
xchg
and
ja
sub
xchg
lahf
add
sub
pop
cs
cs
ss
jno
push
int3
repz
mov
add
insb
pop
jno
imul
xor
test
in
push
push
test
jmp
movsb
add
cmp
xor
stos
sbb
sbb
stc
fldt
test
les
sbb
pop
pop
ss
bound
jb
adc
adc
dec
xchg
dec
adcb
into
jge
aam
pop
pop
test
roll
movups
xor
push
xchg
je
and
ret
leave
adc
sbbl
cmpsl
pop
jmp
jne
pop
lahf
insl
pushf
outsl
adc
xor
movb
pop
xchg
ret
xchg
pop
inc
in
fildll
movsl
lcall
mov
and
mov
js
imul
dec
or
xchg
fsubs
dec
inc
mov
lret
popa
popl
stos
daa
aas
mov
or
mov
sbb
and
sbb
sbb
mov
clc
or
shrl
je
lods
outsb
jns
and
or
insl
std
lods
jo
cltd
push
flds
push
loopne
aas
test
dec
adc
adc
imull
mov
test
pop
xorb
dec
xchg
jmp
pop
push
idivb
add
inc
in
jbe
cltd
cli
lret
iret
lcall
sub
add
sbb
push
into
or
sbb
push
lock
fidivs
fisubrs
or
pusha
imul
and
mov
pop
jo
sub
adc
mov
leave
iret
mov
popa
jno
dec
aas
xchg
int
add
jmp
addr16
xor
cmp
rorl
jns
adc
or
mov
rcr
test
jnp
push
cs
xchg
in
sbb
je
loope
sti
shlb
xchg
inc
dec
sbb
sub
pusha
sub
jg
add
pop
sub
out
mov
adc
call
shlb
out
mov
int
jnp
sahf
push
cld
aam
pop
jl
pushf
inc
lock
mov
add
stc
pop
cmp
sub
sub
xor
add
and
popa
sbb
lret
sti
sti
pop
jmp
adc
shrl
rorb
jecxz
add
adc
loopne
push
mov
pop
imulb
daa
pop
jae
xchg
jo
push
push
push
push
jno
mov
inc
push
out
dec
lea
add
pusha
push
popa
pop
movb
ret
mov
cmp
ljmp
jmp
xchg
push
fs
scas
lret
sbb
xor
or
sti
or
push
decl
cli
sti
mov
out
push
jae
sar
clc
pop
das
xchg
adc
lret
sub
ljmp
shll
and
jbe
orb
or
adc
nop
pusha
xor
out
sub
sbb
xor
jno
add
adc
mov
incl
push
pop
out
mov
adc
jge
push
call
cmpsl
mov
push
inc
sub
imul
stos
sub
and
inc
push
jmp
shr
dec
imul
dec
add
mov
inc
jg
push
xlat
pusha
cltd
push
je
dec
scas
push
jle
cmc
shll
push
scas
inc
adcl
inc
shl
dec
sbb
repz
sbb
pop
test
mov
push
jb
lret
loope
sbb
pop
mov
cli
negl
push
add
rolb
inc
jl
call
jbe
insb
js
jne
outsl
jge
test
jo
inc
xor
mov
imul
mov
xchg
mov
cmp
fadds
mov
iret
aaa
in
mov
test
incb
es
inc
call
jmp
jl
cld
pop
add
push
mov
and
ret
das
test
dec
fmull
mov
mov
cwtl
fadd
dec
loope
xorb
or
scas
jb
jle
dec
je
xor
clc
incl
in
add
pop
addr16
outsb
ljmp
leave
xor
aam
inc
outsb
outsl
fdivs
test
mov
push
sbb
inc
cmp
dec
rcl
push
loopne
mov
sbb
inc
dec
jae
shrl
sbbb
inc
push
ret
or
nop
jns
test
imul
clc
inc
lcall
cmpsl
push
sbb
rclb
pop
addr16
xor
out
test
insb
in
notb
pop
lods
lock
imul
jmp
cld
inc
movsb
cmp
inc
rcrl
stos
inc
fnstenv
outsb
in
or
in
mov
mov
and
push
dec
jo
mov
arpl
popa
pop
xor
pop
std
jle
pop
jno
movsl
rolb
movsl
mov
popa
add
inc
inc
jmp
inc
dec
inc
dec
push
out
push
push
dec
add
repz
call
add
jmp
cmp
hlt
ss
add
out
pushf
mov
out
je
push
sbb
inc
mov
sbb
adc
repz
ret
stos
je
jbe
inc
mov
lcall
dec
cmp
lds
cmp
xor
push
inc
cli
mov
jle
mov
cmp
xchg
push
test
gs
decl
jno
pop
mov
pop
lahf
push
inc
addr16
aas
daa
std
ds
pop
push
mov
mov
mov
cli
fstl
cmpl
rcl
loop
loope
dec
mov
clc
loop
xor
fs
inc
cmc
cs
push
outsb
jbe
mov
adc
ljmp
incl
jg
mov
inc
pop
sahf
loop
out
aaa
pop
sub
jno
loop
repnz
cmp
jo
fwait
adc
push
insl
je
dec
sub
aam
movsl
jg
mov
xor
dec
addr16
push
and
pop
mov
dec
cli
or
scas
int
jnp
and
push
popa
sbb
fwait
out
dec
in
jns
jbe
sbb
and
pushl
adc
mov
pfsubr
or
mov
cmp
xor
testl
xor
dec
outsl
dec
inc
testl
dec
jae
ja
dec
inc
mov
hlt
flds
incl
mov
mov
mov
rcll
inc
movsb
push
jns
js
and
std
ljmp
mov
xchg
xor
hlt
test
jnp
inc
pushf
or
dec
inc
dec
aas
mov
jg
sub
push
pop
jmp
aam
jo
call
push
sti
xchg
std
and
enter
pop
pop
lods
push
rclb
push
and
add
orb
ds
push
mov
mov
ljmp
mov
out
fcompl
inc
mov
nop
jns
pop
cld
call
pop
imul
test
bound
mov
test
jmp
lret
pop
aas
mov
xchg
lret
pop
loop
call
ja
fwait
daa
sti
nop
rorl
rorb
out
push
jmp
movsb
les
sbbl
pushl
cmp
sub
ss
lods
aas
push
mov
sub
ljmp
lock
xchg
mov
ret
jae
outsb
arpl
mov
insb
lods
fdivrs
popa
push
xor
mov
scas
cld
rclb
stc
mov
out
mov
pop
int3
jo
icebp
icebp
cs
xchg
in
bound
adc
push
push
dec
nop
fcomps
sbb
rol
jns
jb
sbb
ja
divl
xor
sbb
inc
xchg
dec
sub
sbbl
incb
jmp
decl
scas
bound
ret
push
add
mov
dec
aad
fbstp
fucomp
lock
cltd
sbb
outsb
shl
and
imul
pop
shrb
dec
fimuls
ret
inc
rolb
nop
xorb
ss
loopne
mov
test
push
push
pop
call
clc
pop
add
push
mov
mov
mov
test
popa
mov
add
dec
jnp
jg
dec
lods
xor
mov
inc
mov
pushl
xor
test
out
lock
inc
or
test
xchg
fnstcw
mov
lods
inc
jo
clc
fsubrl
clc
push
bound
add
push
pop
les
pushl
stos
push
ja
or
int3
sub
fsubs
xchg
ret
dec
test
inc
dec
dec
repz
imul
or
push
mov
decb
pop
jl
out
mov
inc
imull
jmp
outsl
and
cli
mov
jo
xchg
shl
add
mov
push
aam
add
xor
push
sub
stos
subb
int3
incl
outsb
xchg
rorl
adc
jb
imull
stos
int3
inc
ret
dec
sti
pop
inc
pushf
imul
repz
add
fiaddl
loopne
data16
cmp
adc
bound
push
mov
aam
mov
rolb
pop
lcall
push
inc
test
adc
fcompl
lahf
pop
xchg
ret
sbb
movb
sub
add
idivb
ret
fildl
sub
adcl
jmp
lea
leave
iret
xchg
sbb
inc
xor
push
mov
sbb
pop
sbb
bound
xor
mov
adc
shrb
cmpsl
outsb
xor
add
and
pop
xchg
push
fsubrs
mov
inc
int3
inc
dec
es
mov
mov
cmp
js
pop
es
cmp
test
dec
mov
xchg
outsl
push
dec
stos
cmpw
dec
cli
lods
dec
mov
imul
push
outsb
and
lcall
jl
mov
gs
jp
xchg
insl
lcall
cmpsl
ja
les
icebp
ljmp
cmpsl
mov
shrb
outsl
dec
hlt
mov
cmpsl
daa
mov
lock
aaa
add
xchg
inc
push
dec
loopne
mov
lock
mov
dec
test
shrl
bound
outsb
imul
hlt
aas
out
call
rorb
rorb
cld
aaa
adc
stc
xchg
lds
and
int3
shlb
add
je
dec
pop
mov
adc
push
push
pusha
mov
xchg
je
push
outsb
imul
clc
lcall
hlt
sub
and
mov
mov
lret
dec
mov
cmpsl
mov
sub
adc
adc
mov
insl
inc
sbb
sbb
test
jmp
shrb
lods
test
inc
and
fstl
dec
push
pop
inc
inc
sbb
push
movl
and
or
cs
sahf
scas
test
push
xor
add
shlb
adc
movsb
out
pop
push
dec
push
mov
movl
mov
cmp
push
mov
pop
cld
out
clc
mov
data16
shl
push
inc
ret
xor
aaa
cmc
mov
fcomps
cld
or
pop
sbb
insl
or
jmp
lea
fimuls
dec
rcl
shll
pusha
aam
outsl
pop
lods
dec
add
dec
mov
les
ss
out
ljmp
fs
or
inc
lods
push
ss
adc
data16
stos
or
inc
add
add
movsb
inc
shll
mov
dec
push
jno
pop
out
clc
xchg
lret
jle
ffree
jmp
push
dec
cmc
mov
mov
mov
lods
fldcw
and
mov
or
mov
jae
and
icebp
adc
xor
inc
inc
push
pop
add
call
push
mov
mov
add
or
jmp
imul
lcall
ss
outsb
das
ret
inc
imul
jp
push
push
insb
ret
fdivrs
jae
push
and
insb
xor
das
call
fbstp
enter
adc
jbe
jmp
icebp
out
push
jmp
scas
in
in
rclb
out
lret
xchg
pop
add
jno
pusha
add
xor
adc
jmp
shll
inc
add
cmp
loop
loop
cmp
jne
push
fdivr
mov
push
popa
cmpsb
aaa
jns
and
mov
loopne
ljmp
icebp
mov
cmpsl
mov
add
lea
mov
dec
inc
add
push
loop
test
ret
jns
inc
lock
dec
or
ja
lcall
or
or
hlt
jle
cmpsb
jno
mov
lahf
fs
stos
jnp
mov
lcall
ljmp
lcall
out
dec
pop
inc
or
and
imul
push
call
out
push
push
je
adc
scas
pop
mov
dec
aaa
xor
add
leave
add
aad
sub
ljmp
bnd
sub
or
loope
inc
dec
fs
dec
cmpsl
mov
and
cwtl
popa
push
fdivr
clc
pushl
mov
aad
push
daa
leave
mov
push
daa
xor
mov
inc
xor
imul
jmp
inc
popf
mov
into
xor
push
mov
dec
cmp
fidivl
add
jno
sbb
hlt
fidivs
mov
push
cmc
decl
loop
cmp
icebp
jmp
jmp
insb
push
repnz
mov
dec
ss
inc
mov
inc
mov
inc
data16
mov
inc
mov
inc
sbb
sub
in
dec
sub
and
lret
loopne
decl
inc
and
mov
shl
int3
outsl
cmc
dec
jno
inc
into
rcr
movsb
pusha
bound
movsb
sbb
aaa
mov
sbb
mov
dec
mov
inc
loopw
dec
dec
mov
arpl
popa
scas
addl
cltd
mov
and
adc
push
shl
adc
das
or
arpl
aas
sub
sub
loope
lcall
push
insl
ror
sbb
ljmp
or
jecxz
aas
fadds
inc
inc
pop
daa
repnz
stc
dec
jecxz
es
hlt
jmp
mov
stos
cmp
and
mov
out
daa
mov
push
ficoml
dec
mov
mov
popa
outsb
push
pushf
xor
jbe
add
ss
dec
movsb
loopne
push
out
sbb
test
scas
test
dec
cmp
sti
stc
fdivl
cmp
rol
adc
mov
lds
test
ret
pop
imul
add
push
scas
lock
inc
dec
shr
dec
inc
outsb
push
or
fistpll
jo
daa
inc
dec
push
in
rorb
hlt
cwtl
inc
loop
push
sub
lods
popfw
push
xor
test
test
call
loop
xlat
dec
jbe
arpl
mov
shlb
dec
rolb
add
push
cwtl
jbe
subl
pop
ror
jge
mov
jle
test
test
inc
add
push
shlb
or
fadds
ljmp
repnz
shrb
pushl
inc
xor
push
dec
scas
icebp
fsubp
dec
xor
sti
mov
test
pop
test
sbb
mov
jl
pop
or
xor
jl
lds
clc
adc
jge
in
hlt
xor
jmp
outsb
insl
pop
xchg
xor
pop
insl
sarb
push
xchg
jno
dec
dec
push
mov
jmp
jmp
shlb
cli
inc
shlb
mov
sbb
fs
push
push
lods
out
and
outsb
rorb
sub
and
add
push
dec
dec
incl
dec
pusha
adc
in
out
sbb
fisttps
push
in
aam
push
mov
xchg
shlb
je
add
mov
xor
push
cmp
lret
pop
cld
rclb
mov
pushw
push
cli
dec
mov
and
push
push
fidivrs
push
and
xor
xchg
es
loop
clc
sti
dec
loope
mov
ret
inc
js
out
pushf
lcall
mov
add
fistps
push
add
xor
stos
sub
mov
aaa
roll
fdivr
inc
pop
mov
fwait
jge
rcrl
push
mov
frstor
pop
jle
inc
addr16
lock
sbb
loop
stos
ficompl
repz
add
mov
std
jno
lret
out
fidivs
int
inc
cmp
shufps
jle
add
test
xor
cs
xor
ja
push
ret
je
inc
xchg
outsl
js
inc
pop
sub
das
cmpsb
sub
ss
insb
xchg
xchg
mov
scas
aad
mov
jmp
push
shlb
cli
add
ds
es
dec
loop
mov
dec
mov
repnz
push
loope
jo
and
or
jecxz
sahf
decl
add
inc
inc
ret
jns
addr16
das
or
jbe
addr16
add
inc
dec
add
shll
dec
push
lahf
lret
inc
clc
jg
cmp
or
dec
pop
mov
jge
add
mov
popf
ret
js
aam
pop
jne
sbb
cmp
jb
je
jo
fildl
inc
sbb
dec
cld
jb
push
cmp
int3
push
pop
fistpll
outsb
fs
les
test
std
jle
pop
jmp
pop
ret
mov
xchg
aaa
fsub
xor
jmp
iret
push
mov
push
push
xor
dec
daa
lds
js
scas
dec
popa
pop
aaa
rolb
hlt
mov
ljmp
ret
cmp
jb
hlt
xchg
xchg
leave
dec
sub
sub
in
test
stos
scas
fisubl
subb
ljmp
jns
subl
cli
out
aaa
dec
push
sub
outsl
insl
jb
lock
lcall
pop
push
push
fimull
or
ret
xor
adc
xor
lock
decb
bound
gs
outsb
xor
pop
inc
push
jmp
stos
and
pusha
lret
fstl
push
ja
push
aad
xor
clc
or
xchg
inc
dec
push
mov
pop
inc
outsl
push
call
mov
push
jp
ret
lods
mov
mov
inc
ds
aaa
rcl
cmpsb
js
xor
push
inc
mov
dec
push
jmp
fnsave
out
mov
lret
ljmp
pop
es
in
bound
xchg
hlt
fimuls
jb,pn
into
pop
push
mov
lea
xchg
cs
inc
inc
out
xchg
psllq
lret
push
pop
and
pop
repz
int3
dec
lret
loopne
inc
xor
and
pusha
adc
xor
cmp
inc
insl
mov
bound
inc
mov
add
data16
cld
addl
push
pop
push
mov
call
xchg
cmp
or
mov
add
inc
mov
xchg
daa
mov
insb
dec
dec
arpl
incl
cli
xchg
repnz
push
push
push
call
inc
rcrb
sti
les
inc
push
mov
and
fdiv
mov
mov
int
sub
xchg
test
cwtl
ficompl
fs
jp
out
stc
xchg
add
outsb
inc
shrb
movsb
or
push
or
adc
mov
scas
ljmp
pop
stc
xor
lahf
push
or
stos
repz
xchg
cmpsl
loopne
popf
add
roll
inc
mov
add
ljmp
pop
add
je
add
pop
stos
aam
inc
rorb
movsl
sub
push
jo
jge
fwait
test
mov
insl
sub
jl
lret
movsl
test
cmp
imul
orb
fidivs
mov
or
lahf
cmpsl
out
jecxz
jp
mov
cmpsl
xchg
xor
inc
add
sub
push
sbb
sbbl
mov
lret
cmp
inc
mov
dec
js
push
dec
notb
fisttps
mov
adc
push
jne
lcall
cli
add
out
push
jg
clc
stc
in
aas
scas
jo
xor
test
xor
push
lcall
ljmp
add
inc
in
sbb
inc
xor
jb
test
or
fprem
cwtl
iret
insl
je
cli
call
insl
cmp
data16
mov
xor
in
loop
mov
mov
xchg
pop
andl
push
pushf
xchg
sbb
adc
push
dec
xor
add
clc
pushl
sbb
add
decl
pop
push
mov
nop
inc
dec
lock
je
mov
add
pop
xor
inc
mov
les
jns
jg
shlb
dec
outsb
push
ljmp
push
scas
inc
inc
dec
insl
mov
shrb
loopne
mov
dec
sub
jle
pushf
out
xchg
adcb
jg
pop
sbb
fsubs
push
cs
dec
dec
js
jl
loopne
pop
dec
push
dec
insb
xchg
lahf
pop
cmc
cwtl
shlb
and
shll
jo
outsb
add
js
jg
fadds
lahf
mov
fld
jg
pop
pushf
test
push
aaa
inc
inc
test
leave
jae
lods
ss
jbe
loopne
inc
pushf
cwtl
cmp
inc
sub
fdivrl
ja
ret
mov
mov
cs
mov
ljmp
push
mov
push
sub
test
jecxz
add
lcall
lret
loopne
xor
fnstsw
inc
rcl
pusha
mov
dec
popa
ljmp
iret
jb
add
xor
fcmovbe
push
test
dec
movsb
mov
ss
imul
int
outsl
push
mov
inc
push
push
xor
jg
out
cwtl
cmpsb
or
movsb
iret
fimuls
sbb
xor
ffree
mov
push
xchg
fiadds
mov
and
fistpll
jmp
arpl
inc
jo
xchg
lock
outsb
or
adc
sub
push
divb
and
lods
stc
mov
jns
clc
xor
add
sbb
push
push
sbb
mov
fdivrp
xchg
dec
sub
dec
lret
xchg
inc
jg
sar
pushl
mov
mov
dec
cmp
js
add
sbb
mov
xor
sbb
test
bound
inc
lock
fsubrl
test
lock
mov
dec
call
rcl
pusha
jle
or
cmp
loop
jo
ss
xchg
fcomps
jmp
and
jbe
outsb
cmp
lret
mov
push
outsb
push
add
mov
xor
jg
push
sbb
inc
mov
repnz
and
pop
sub
mov
mov
cmpsb
ss
pushf
jo
lret
mov
cli
adc
dec
mov
cwtl
push
pop
mov
xor
rorl
or
cs
scas
dec
nop
add
add
mov
sub
adc
dec
xchg
addb
rcrb
lock
jne
popa
dec
les
add
mov
ret
or
push
nop
dec
andl
mov
nop
jmp
and
add
mov
and
pop
or
dec
notl
lret
inc
shrb
leave
shrl
adc
repnz
subl
sub
add
dec
and
add
push
shl
arpl
jg
pop
call
xor
outsb
pop
std
test
sbb
lahf
cmp
add
xor
push
aaa
pop
and
xor
mov
test
sbb
and
loopne
inc
xor
loope
and
push
pop
push
add
adc
xorl
icebp
je
cmp
addr16
mov
inc
stos
arpl
fcmovnb
jecxz
pop
xlat
adc
repnz
or
stos
add
or
pop
xchg
je
xor
testl
mov
sbb
enter
rcll
in
jmp
lret
aam
add
inc
add
add
push
xchg
in
loopne
cmp
test
or
sbb
cwtl
rcl
outsb
ja
sbbb
dec
mov
jns
add
jnp
sbb
out
adc
cmpsb
jo
test
loope
push
xor
fwait
outsb
test
orl
outsb
call
jae
mov
pop
add
mov
xchg
push
pop
stos
jle
mov
loope
and
mov
xor
es
mov
cmp
jg
loope
gs
sub
pop
mov
dec
ljmp
mov
and
mov
stos
or
loop
jmp
psraw
pop
adc
jp
push
sub
in
pusha
mov
jae
adc
int3
push
mov
and
aaa
arpl
inc
cli
cs
sarl
fs
sub
or
cmp
inc
inc
add
hlt
rorb
ficomps
adc
push
incb
pop
test
js
ret
pop
pushl
std
pop
mov
les
call
xchg
in
sub
ret
mov
outsb
dec
pop
loop
stos
cltd
mov
xlat
sub
push
mov
lock
sbb
add
jmp
js
push
inc
push
jmp
ljmp
mov
mov
push
fwait
jecxz
xchg
testl
mov
mov
mov
mov
push
in
mov
shl
pop
adc
imul
lahf
jo
adc
jae
cmpsb
dec
jle
adc
xor
xor
cmp
jg
ret
scas
ficoml
add
push
pop
push
add
mov
push
sub
jge
mov
jns
leave
das
pshufw
adc
lahf
sar
stos
les
xchg
add
stc
jno
in
lcall
or
push
and
aaa
push
loopne
pop
sbb
dec
jne
xchg
jns
inc
sbb
enter
clc
sub
stos
jge
jl
add
push
hlt
xor
adc
inc
jle
repnz
pop
mov
inc
addl
cmp
test
mov
or
fisttpl
stos
mov
stos
push
ret
nop
push
sub
aaa
or
mov
mov
sbb
inc
cmpsb
mov
decl
mov
ror
sbb
or
inc
push
mov
pop
mov
xchg
sbb
in
push
jno
iret
mov
cwtl
xchg
test
sbb
popa
cmpsb
add
in
inc
xchg
xchg
sub
add
pop
xor
arpl
fiaddl
rorb
lods
add
sti
fbstp
inc
jb
daa
pop
lds
cmp
mov
cs
sbb
es
push
dec
mov
mov
xor
bound
sbbl
add
les
pop
xor
mov
pushf
xchg
xchg
call
ja
test
mov
xchg
cmp
add
ljmp
in
and
jne
pushl
and
and
mov
ljmp
mov
incl
inc
mov
std
push
loop
repnz
andb
mov
inc
hlt
pop
rcll
nop
jbe
movsb
in
inc
push
mov
rcrl
xchg
pop
and
test
sub
clc
jg
inc
mov
jo
xchg
and
or
and
xchg
popa
push
decl
mov
scas
push
mov
push
jb
popl
push
sub
jns
movb
sub
inc
ss
pushf
dec
incl
testl
xor
push
mov
jno
fiaddl
dec
loop
es
aaa
jbe
out
dec
les
push
ret
push
inc
mov
and
jbe
adc
outsb
inc
mov
inc
mov
add
aaa
enter
jecxz
pusha
rcll
jmp
push
pushl
rorb
cmp
popaw
outsl
stos
loopne
jno
mov
dec
je
inc
fistl
sbb
mov
inc
dec
sahf
xchg
xchg
loopne
and
je
pusha
loopne
mov
or
add
fcomi
pushl
addb
pusha
icebp
popa
loope
sbb
in
xchg
inc
or
cli
xchg
sarb
pop
icebp
jo
pop
in
sub
push
push
dec
pop
push
lret
lods
add
arpl
jbe
in
push
je
mov
mov
inc
pop
xor
push
pop
pop
add
inc
dec
movl
negl
ja
dec
and
dec
pop
mov
mov
cmp
mov
xchg
jnp
and
mov
inc
mov
insb
popf
lods
sbb
xchg
jb
xor
call
cmc
rol
dec
aas
jl
jecxz
xor
fsubrl
pop
das
sbb
shll
cmpsb
inc
ja
sub
loopne
je
push
inc
and
jecxz
inc
les
testl
adc
cwtl
into
mov
push
test
je
dec
push
sbb
push
clc
hlt
arpl
addr16
lock
mov
mov
out
out
push
and
xor
cmpsb
mov
int3
mov
ss
inc
pop
cli
pop
push
mov
dec
cli
js
add
or
test
lods
xor
add
addr16
fistpll
ret
add
dec
fsubrs
sbb
fildll
loop
lcall
or
pusha
dec
adc
and
stos
mov
xor
leave
cli
popa
popa
int3
adc
inc
cs
andb
push
inc
pop
into
inc
inc
jo
mov
or
outsb
aaa
cltd
fcomps
pusha
and
rorb
sub
inc
or
pop
adc
ja
push
fbstp
and
add
adc
pop
sub
mov
lret
ljmp
xor
mov
icebp
daa
ret
in
fs
inc
xchg
push
pop
out
add
mov
insb
std
gs
xor
xlat
inc
dec
inc
dec
cli
inc
dec
dec
std
mov
addr16
and
imul
mov
aad
bound
xchg
ror
xor
gs
je
mov
mov
mov
fisubrs
pushl
jno
icebp
bound
pop
cli
pushl
jne
mov
dec
pop
pop
adcb
dec
pusha
enter
std
movsl
mov
pop
xor
cmp
lock
xchg
jns
mov
adc
and
inc
scas
hlt
lods
fwait
mov
fs
push
dec
add
ja
test
scas
sbb
test
arpl
loop
inc
clc
mov
inc
call
mov
incl
sub
xchg
loop
test
push
jnp
in
addb
fdivrl
xor
push
dec
cmp
push
in
imul
je
mov
push
adc
mov
je
or
dec
xor
js
mov
inc
popa
in
lock
inc
cmpsl
xchg
dec
jo
dec
pusha
fcmovnbe
cs
push
mov
add
aas
xchg
loopne
nop
or
mov
ret
pop
loop
shlb
sahf
mov
mov
add
enter
sub
leave
leave
movsl
test
scas
jbe
and
pop
jne
cmp
sti
aam
ljmp
or
popl
jp
ss
je
scas
aaa
addr16
ret
xor
gs
xchg
incl
insb
cmp
aad
or
inc
xchg
movsb
insl
add
xor
adcl
in
rclb
xor
dec
shl
or
cmp
stos
pop
and
cwtl
jmp
sub
push
pushf
push
notb
dec
add
cli
mov
mov
mov
lcall
xor
or
xor
sbb
lret
bound
test
jne
push
inc
xor
rolb
push
push
mov
dec
ljmp
mov
cmp
pop
jmp
out
test
outsb
jne
adc
and
jmp
jmp
sub
je
add
dec
lret
adc
or
dec
mov
lcall
push
ja
inc
imul
cmp
push
imul
iret
sub
xchg
out
adcb
pop
ja
xchg
mov
jo
xor
xor
or
mov
in
aas
add
jo
pushf
mov
pop
xorb
inc
cmp
pop
stos
ljmp
decl
dec
jb
jne
insl
std
pop
xchg
jecxz
cltd
test
in
les
ret
push
add
cmp
pop
repnz
push
adc
cmp
xor
mov
je,pt
insl
mov
pop
jne
outsb
push
mov
jl
movsl
in
xor
pop
inc
add
inc
push
dec
push
xchg
movb
mov
xor
cmpb
ja
dec
mov
je
inc
call
outsb
outsb
mov
enter
jmp
sldt
ljmp
andb
pop
sub
push
pop
xchg
lock
cmp
push
push
int
mov
inc
push
dec
xor
cmp
adc
lock
gs
push
sti
ret
stos
loopne
cs
xchg
cltd
mov
mov
daa
ss
push
add
mov
std
sub
dec
jnp
lcall
jl
pop
jo
lcall
push
or
adc
inc
ss
incl
lea
in
dec
leave
add
push
push
popf
cmp
daa
lahf
cli
push
insb
insb
daa
loope
push
insb
cmp
idivb
push
clc
fisubrl
aam
inc
xor
lret
inc
inc
aaa
mov
stos
jmp
aas
stos
jbe
push
test
mov
jo
cmpl
sbb
mov
sub
inc
repz
xor
loope
popa
inc
push
pop
push
inc
clc
or
push
loop
push
jb
push
orb
mov
fidivs
mov
ret
xor
gs
in
xchg
popl
pop
es
test
push
xchg
jp
push
sbb
or
xor
cli
rorb
imul
or
aam
jne
dec
push
cwtl
jmp
js
mov
mov
mov
mov
into
jno
outsl
cmp
cli
xchg
repnz
add
xchg
pop
sbb
ficoml
data16
adcl
pop
jb
jmp
int3
scas
fcoms
xorl
mov
jae
push
imul
sub
lods
mov
add
mov
mov
adc
mov
test
mov
imul
dec
rorb
sbb
cmp
in
scas
sub
sbb
imul
test
stos
lods
add
in
mov
data16
push
dec
test
lret
and
cs
sub
dec
daa
jp
popa
in
dec
adc
dec
mov
repnz
out
inc
add
push
lahf
adc
sbb
fisubrs
push
lods
out
imul
pop
cwtl
inc
sub
cltd
mov
xchg
xchg
pop
mov
and
je
test
in
lahf
lret
incl
adc
fadds
mov
incl
add
xchg
es
mov
lock
je
shll
enter
mull
jno
mov
mov
icebp
dec
or
sub
dec
in
mov
sbb
dec
pop
in
xor
sbb
and
leave
rorb
addb
inc
ja
and
test
jbe
or
dec
adc
enter
in
pop
leave
adc
es
dec
outsb
scas
roll
loopne,pt
mov
test
dec
sahf
jns
iret
and
mov
icebp
sbb
adc
inc
jo
ljmp
cmp
ljmp
mov
dec
add
mov
mov
inc
sub
adcb
jo
xchg
cmp
or
pop
sahf
mov
xchg
push
in
or
xor
xchg
xchg
scas
ret
adc
or
push
or
sub
mov
pushl
dec
movntq
hlt
mov
jmp
push
sbb
xchg
cld
mov
pop
aam
outsb
leave
test
cmp
adc
sbb
cmp
jo
mov
scas
aas
jl
outsl
stc
add
and
loop
aad
test
fists
add
or
or
xor
leave
lds
mov
sbb
adc
or
nop
cmp
pop
xchg
add
or
or
dec
dec
insb
fmull
nop
jns
rorb
sti
adc
or
mov
push
sbb
sub
je
or
and
xchg
pop
imul
xchg
rcrb
dec
inc
add
testl
out
ret
mov
gs
and
lock
fldenv
call
test
popa
add
and
mov
xor
jmp
xchg
int3
pop
mov
aaa
cmpsb
mov
jle
lea
or
cmpsl
loopne
mov
inc
jbe
jge
push
pop
xor
stos
adc
xchg
pop
inc
xor
sbb
xor
xchg
jg
xor
inc
test
xchg
hlt
jge
mov
lahf
daa
and
push
xchg
or
mov
mov
sub
push
sbb
xchg
add
leave
ja
xchg
jo
dec
aaa
push
sarl
icebp
aaa
mov
mov
les
movsl
inc
mov
add
insl
xchg
adcb
ret
cltd
jg
mov
imul
enter
lret
stc
mov
repnz
leave
and
mov
add
cmp
hlt
jecxz,pn
and
inc
push
rolb
inc
stos
dec
sub
cmp
pop
sbb
push
inc
enter
repz
lea
or
sub
leave
imul
addr16
adc
es
cmp
decl
popw
mov
jb
xor
bound
add
fwait
adc
xorl
repz
push
cmpsb
out
loop
cmc
and
enter
movsl
inc
mov
sub
push
sbb
xchg
inc
xchg
ss
in
std
rcll
inc
daa
push
addl
inc
cwtl
inc
bound
lods
adc
adc
mov
movsl
insb
lods
in
dec
ret
js
cwtl
sub
xor
out
adc
sbb
shll
leave
iret
lahf
testb
test
pop
aaa
cltd
add
std
test
mov
add
or
data16
shr
cmp
or
pop
xor
or
adc
popa
cwtl
or
dec
and
sbb
sub
bound
loop
rorb
pusha
mov
xor
sti
mov
stos
push
rcl
out
jecxz
sbb
aad
bound
aas
test
push
adc
dec
cs
in
ud0
jmp
rcr
test
mov
cmp
cmp
lock
inc
ljmp
lret
and
add
cmp
add
outsb
ljmp
jne
test
inc
std
or
mov
push
push
daa
pusha
mov
loopne
enter
cli
lcall
les
aas
fidivrl
lcall
sahf
mov
das
cmp
incl
xchg
neg
inc
ja
sub
and
shll
por
dec
fdivr
call
inc
push
dec
imul
mov
push
mov
dec
sub
dec
adc
repz
insl
arpl
punpckhwd
xorl
loopne
cwtl
dec
mov
add
inc
rclb
push
mov
shlb
mov
insb
and
loop
roll
cld
xchg
sub
lret
ffree
add
push
inc
lods
fmull
xorb
xor
inc
insb
dec
add
fimuls
or
dec
fsubr
jb
dec
test
pop
sbb
inc
dec
cli
mov
cli
jnp
sbb
pop
and
daa
mov
iret
xchg
in
adc
inc
loopne
cmpsl
imul
rorb
pop
je
out
inc
push
inc
fs
jns
test
shll
add
jmp
enter
sbb
jo
call
xchg
loope
outsb
sub
inc
xor
int3
adc
sahf
sbb
pushl
stos
ret
push
sbb
adc
inc
and
and
movb
cmpsb
icebp
xchg
imul
dec
fucom
add
inc
ja
pop
lahf
mov
lret
divl
pop
andb
movsb
pusha
pop
mov
mov
loope
dec
lds
jnp
stos
fldcw
mov
inc
js
ss
loopne
cli
out
inc
arpl
nop
mov
es
roll
push
sbb
imul
mov
jg
jmp
je
insl
loope
sub
and
and
jle
in
dec
scas
testl
clc
call
inc
xor
or
mov
jb
shlb
cmpl
adc
andl
push
jno
mov
sbbl
mov
popa
push
mov
add
pop
fisubs
cli
push
shr
jno
jno
subl
addr16
lods
jp
and
bound
and
lea
cmp
push
pop
insb
loopne
cli
push
adc
fildll
sub
daa
sbb
sub
pop
pop
xor
ret
rcll
mov
inc
inc
push
dec
rolb
movlps
or
lock
jp
push
push
jae
rorb
enter
push
xchg
jns
cmp
mov
add
or
adc
xchg
mull
sbb
or
adc
and
xor
stos
push
sub
test
and
or
mov
and
out
mov
xlat
mov
aas
andb
cwtl
inc
xor
icebp
outsb
mov
out
dec
mov
aaa
dec
or
jg
sbb
test
mov
cmpb
aad
fwait
scas
adc
jmp
cmp
bound
iret
or
nop
push
fsubs
jb
scas
fadd
insl
popa
push
xchg
stc
cltd
in
and
nop
dec
mov
pop
inc
rcll
push
inc
inc
cld
ret
push
or
rcr
push
dec
sbb
cli
ds
xchg
inc
inc
gs
push
mov
pop
dec
sub
mov
push
mov
std
shrb
notb
icebp
jns
jno
call
mov
dec
std
ret
inc
cli
or
mov
push
sbb
js
push
pop
xor
mov
inc
inc
and
mov
cmp
incl
loopne
popf
rclb
es
pop
and
shll
inc
lds
push
fs
je
mov
cmpsl
addl
dec
fs
insb
gs
repnz
inc
aad
dec
lret
sti
shr
xor
mov
xor
fildll
mov
dec
cld
mov
or
notl
lea
aam
pop
sub
xor
gs
inc
addb
loopne
movsl
shll
jbe
js
pushl
add
xor
sub
inc
lahf
inc
add
ljmp
mov
imul
push
mov
insb
inc
add
js
push
push
push
cs
mov
adc
dec
mov
xor
sub
sbb
inc
mov
dec
pusha
scas
out
mov
out
cli
in
or
push
sbb
mov
pushf
adc
call
andl
xchg
xor
daa
and
mov
push
popa
insl
xchg
iret
inc
mov
sub
jns
jmp
clc
inc
aam
adc
out
cmp
pop
lods
cmp
lock
mov
jne
gs
into
push
shrl
mov
dec
arpl
test
lods
cmp
dec
addr16
cmpsb
sub
jmp
push
mov
cmp
movsl
repnz
cld
jnp
outsl
testl
cmpsl
mov
test
daa
mov
jb
push
js
mov
cmpsb
dec
xor
cmpxchg
fimull
popa
inc
add
cmp
or
mov
pushl
sbb
fadds
jo
add
push
ja
add
mov
inc
add
sub
fs
xchg
hlt
dec
jne
pusha
add
sub
fnstcw
and
inc
dec
push
dec
adc
mov
lcall
aam
dec
daa
pop
cmp
jns
subb
mov
clc
ljmp
adc
fcomip
iret
scas
jecxz
lfs
in
and
mov
imul
lock
call
shll
inc
push
sub
push
imul
jecxz
incl
test
scas
mov
inc
mov
pop
imul
cmpsb
mov
test
ret
lods
adc
in
xchg
fs
lret
pusha
cli
stos
or
dec
sbb
mov
cmc
jnp
xchg
adc
lret
dec
call
aas
dec
movsl
ret
cmc
lret
out
cld
rclb
xchg
ret
push
jbe
xchg
adc
inc
fistps
repnz
dec
outsl
cwtl
xchg
popa
js
inc
mov
jo
sub
push
popa
dec
aam
mov
pop
jno
inc
movsb
in
cmpsl
mov
push
add
jg
xchg
add
out
sbb
push
pop
or
or
or
xchg
and
pop
incl
mov
sub
movb
cmp
das
or
mov
mov
std
fbstp
add
notb
and
inc
add
cmc
lods
insb
adc
decb
imul
xchg
sbb
lods
fmull
sti
in
into
rcl
mov
sub
cmp
out
mov
inc
push
jb
sub
js
fidivrl
jo
push
addr16
mov
adc
std
sub
pushl
clc
inc
lds
insl
adc
xchg
and
in
adc
outsb
push
pop
jle
jmp
jg
jg
sbb
cmpsb
or
out
dec
fimuls
push
lret
jmp
inc
push
cs
fprem
xor
mov
loopne
pop
rcrl
ss
lcall
outsl
notb
sub
mov
mov
filds
pop
cs
jecxz
inc
cld
jmp
sti
imul
mov
rorl
int3
aad
xchg
dec
out
push
pop
cmp
dec
rorb
add
mov
subl
xor
aad
mov
ret
pop
sub
lods
cmp
xchg
mov
lock
or
jno
xor
ret
push
inc
scas
push
fs
inc
subl
mov
in
push
xor
and
cld
jmp
sub
mov
mov
mov
fstps
pop
in
or
je
into
add
mov
testl
pop
push
mov
cmp
push
lcall
pusha
cltd
fstl
lock
cmp
sbbl
sub
pop
test
call
enter
ds
inc
mov
scas
movsb
mov
stc
fsubrs
push
push
fistpll
sub
shrb
sbb
push
pushf
push
add
mov
lret
and
jns
or
jnp
je
out
sbb
push
add
imul
lods
pop
sub
addr16
filds
mov
outsb
das
aaa
inc
addr16
and
clc
lcall
shlb
mov
push
aaa
imul
rolb
or
inc
push
rcll
jae
fdivr
incl
or
mov
pop
dec
ja
out
adc
adc
movsb
push
sub
sub
les
jmp
bound
add
cmp
inc
fs
fs
inc
dec
fadds
js
inc
fadd
dec
add
xlat
fimull
call
std
pushl
lret
fstpt
pusha
bound
es
mov
dec
sub
pusha
and
js
pop
cmp
inc
inc
add
cld
xor
movsb
bound
imul
pop
out
outsb
push
inc
insb
iret
mov
adc
enter
decl
sbb
jb
out
push
divl
dec
or
shrb
and
pop
test
cwtl
flds
fs
jae
add
imul
push
mov
push
dec
cmp
notb
cli
xor
mov
lahf
push
dec
or
decl
insb
out
mov
push
std
mov
adc
sub
cmp
xor
and
push
enter
push
repnz
sarl
mov
xor
push
xor
jg
inc
lock
dec
sahf
aam
pop
push
add
xor
adc
inc
cmc
inc
inc
ret
imul
je
inc
inc
xor
mov
imul
jo
and
shll
jbe
dec
dec
incl
mov
loope
sbb
mov
lods
mov
push
in
push
or
or
shl
out
cwtl
inc
and
loopne
stc
sbbl
inc
imul
sarl
in
ret
dec
inc
mov
or
add
mov
push
xor
cld
decl
loope
test
sub
pop
lret
mov
test
push
dec
sbbb
pusha
insl
mov
ss
mov
jb
xor
jle
gs
aam
mov
jnp
mov
sbb
xlat
call
je
push
bound
push
dec
cmp
test
pop
jb
or
stos
bnd
sbb
jno
xor
incb
mov
dec
dec
inc
inc
arpl
sti
dec
mov
adcl
add
call
or
push
adc
push
insl
out
and
dec
ret
sbb
push
divb
xlat
or
pop
out
jo
inc
mov
dec
imul
push
ss
mov
fisubrs
dec
mov
jecxz
or
dec
mov
bound
data16
jg
popf
push
addr16
xlat
jge
lea
add
or
pop
push
fldt
mov
xor
int
lock
lea
loop
into
dec
cli
or
call
imul
call
cld
push
fisttpl
jmp
hlt
fsubrl
xchg
flds
call
sbb
pop
ljmp
push
push
xchg
cmp
or
mov
nop
dec
dec
xor
mov
inc
jno
ss
aaa
xor
dec
fcom
dec
sbb
sbb
mov
mov
adc
mov
js
jno
icebp
dec
enter
jae
push
mov
inc
add
andb
mov
imul
jo
clc
arpl
cmp
add
fwait
dec
nop
std
aas
sbb
xchg
int
call
jbe
fwait
mov
pop
jg
clc
cwtl
or
adc
and
and
sub
loop
test
add
xor
dec
jp
and
insb
ss
xor
mov
xchg
push
add
jg
lahf
adc
out
inc
int3
inc
cwtl
xchg
xor
jae
jmp
stos
sbb
mov
xchg
into
mov
aad
stc
insl
xchg
iret
xor
mov
jb
roll
xlat
sub
mov
fcoms
inc
decb
imul
adc
adc
gs
dec
shlb
gs
jmp
xchg
ljmp
lea
std
loopne
negb
mov
cli
out
bound
hlt
xor
mov
test
add
jle
xor
ret
add
push
push
mov
ret
mov
outsb
or
cwtl
xchg
push
jb
xor
rclb
addl
jl
and
aam
sub
sub
imul
push
ss
push
sub
push
push
test
inc
es
dec
cld
decl
neg
aad
in
lret
lock
sti
mov
adc
cltd
push
dec
mov
out
xor
push
mov
pop
outsl
mov
pop
xor
cmp
jg
out
add
mov
loope
loope
jp
fimuls
push
clc
mov
ljmp
lds
adc
int
jmp
xlat
inc
cwtl
ret
pop
dec
xchg
js
filds
scas
lret
jns
insb
jmp
dec
lods
leave
xchg
and
inc
sbb
lahf
adc
jns
aas
xor
mov
pop
adc
imul
add
adc
dec
xor
outsl
insb
push
add
out
jb
adc
dec
ljmp
push
cld
out
dec
push
imul
loopne
stos
out
daa
ss
pop
mov
call
and
jecxz
jecxz
stos
cmc
lods
jl
push
sbb
lock
push
jns
inc
inc
insl
xor
pop
jo
pop
push
iret
mov
push
dec
xor
push
inc
pop
out
push
incb
icebp
hlt
push
mov
hlt
dec
call
mov
loop
into
and
fsubr
lea
mov
mov
cmpsl
jbe
pop
mov
sub
mov
dec
imul
ret
dec
adc
xchg
add
aaa
push
push
dec
dec
fs
xor
es
fwait
call
inc
xor
call
mov
lret
lret
scas
dec
jmp
lcall
rorl
or
scas
adc
cmc
cmpsb
dec
mov
fidivl
push
cmp
dec
jo
or
gs
loope
jp
xor
dec
inc
stc
outsl
insl
popa
icebp
incb
jmp
pop
jns
cmp
jmp
push
pop
mov
fcomip
xchg
ret
push
pop
push
fstpt
adc
push
inc
dec
inc
sub
cwtl
mov
or
fistpll
jo
xor
dec
jle
pop
mov
dec
add
sbb
jle
cmp
fcomip
mov
dec
mov
pop
movsb
fwait
add
movsb
gs
sub
and
out
incl
repnz
and
add
push
nop
pop
xor
mov
call
inc
dec
outsl
xor
dec
push
mov
and
pop
adc
or
pop
xor
mov
cld
mov
fisttpll
xchg
push
mov
pushf
jbe
add
mov
mov
in
push
mov
or
sub
je
cmp
and
insb
sub
mov
inc
inc
adc
push
sbb
xchg
fsts
aaa
push
dec
decl
pop
push
bound
xchg
mov
adc
adc
push
mov
lock
ljmp
outsb
jae
sbbb
stos
xor
roll
inc
data16
inc
jmp
pusha
and
jbe
popa
cmp
les
mov
sahf
xor
sbb
fistl
pop
push
xchg
xor
ficompl
addr16
ret
jae
scas
jb
cmp
push
sbb
cld
adc
clc
enter
xchg
add
pop
add
lahf
push
adc
add
or
mov
sub
push
push
stc
jg
aad
cs
sahf
sub
daa
and
in
sbb
push
test
push
fs
add
dec
xchg
cs
cmp
inc
add
cs
shlb
je
aaa
mov
cmp
cmp
arpl
jmp
outsl
in
into
dec
xor
sbb
sti
jb
repz
cmp
leave
arpl
push
rorl
sahf
sti
push
das
out
clc
push
cmc
dec
mov
dec
push
add
mov
mov
cli
add
pop
sbb
sbb
mov
add
jg
jae
out
jno
mov
xor
cmp
jecxz
mov
pusha
in
testb
psubsw
lea
je
stos
sarb
mov
out
push
cmp
subb
clc
shll
pop
insb
dec
divb
mov
inc
sbb
xchg
xorb
jecxz
dec
sbb
lcall
je
xchg
es
jo
jl
pop
cmp
loope
out
scas
fisttps
dec
outsb
jns
out
push
inc
popa
mov
subb
dec
add
or
fistpll
push
dec
jp
push
ret
jno
mov
mov
dec
lock
decl
arpl
in
jl
icebp
or
push
stos
jle
incb
mov
movsl
pop
dec
popa
dec
jbe
shlb
xor
fists
out
ja
inc
mov
xor
ljmp
mov
aaa
mov
hlt
adc
xlat
das
push
dec
js
pop
rcll
dec
ss
inc
lea
dec
dec
jo
je
ljmp
pop
push
push
mov
incl
xorl
inc
dec
pushf
inc
inc
leave
lcall
in
add
mov
pop
xchg
jnp
mov
fimull
and
fcompl
es
inc
outsb
mov
cmpsl
add
pushf
xor
sub
testb
adc
xchg
nop
push
xor
push
fistpll
jmp
cmp
inc
cmp
adc
imul
mov
mov
xor
push
rorb
push
and
inc
dec
cmp
pushf
repnz
add
inc
push
inc
data16
mov
inc
jo
in
push
mov
and
inc
add
shl
mov
call
or
ljmp
stos
fistl
adc
mov
movsb
ret
movsl
or
out
icebp
push
loope
fcomps
ss
sbb
je
fwait
outsl
sub
ret
inc
out
pusha
fldcw
hlt
dec
inc
je
fdivl
xchg
in
popa
mov
in
mov
add
jno
pop
mov
mov
stc
mov
mov
cmp
mov
shrl
xchg
sbb
sbb
inc
sbb
imul
or
jb
shll
stos
inc
and
push
or
lret
mov
add
push
call
icebp
xor
mov
outsb
imul
cmp
xor
jp
xchg
in
dec
insb
add
jae
arpl
loopne
cmp
movsl
push
dec
add
push
jg
es
mov
mov
lods
xorl
out
push
dec
iret
lret
jge
mov
das
cmpsl
xor
fwait
and
lret
inc
add
insb
fsubl
push
mov
mov
sub
pop
lahf
pop
cmp
sub
inc
jg
cmp
js
js
aam
sub
sarl
ja
cld
call
xor
adc
sbb
sbb
icebp
repnz
sbb
inc
pop
mov
push
rclb
dec
add
je
dec
jo
jmp
jecxz
push
cmp
push
mov
outsl
arpl
sub
push
jmp
std
stos
mov
pop
mov
into
push
pop
mov
test
lcall
or
je
push
or
arpl
cli
xchg
int3
dec
pusha
inc
sub
mov
adc
aaa
cmpb
pushl
shlb
into
add
jge
sahf
and
adc
jge
out
ljmp
jecxz
lcall
and
mov
inc
sti
lock
fadds
addb
iret
jns
loopne
push
or
xor
dec
sub
or
pop
add
rcll
jp
std
push
and
nop
cmp
pop
dec
xchg
fistpl
test
imul
out
das
jbe
jmp
mov
cmp
xchg
icebp
inc
mov
iret
xor
sti
push
fsubrs
xchg
mov
xor
lock
jg
mov
shll
jns
adc
std
adc
mov
popf
loope
das
cli
testb
scas
inc
pop
adc
pop
lret
and
xor
push
add
xchg
inc
jo
add
imul
jmp
cwtl
dec
ljmp
cmp
mov
xchg
dec
dec
gs
inc
xor
push
cmove
out
jbe
push
out
or
cmp
fucom
jbe
push
adc
push
push
mov
test
mov
mov
out
jne
jo
add
loop
add
dec
inc
ss
xor
jb
rep
aaa
ja
add
nop
orl
imul
mov
pushl
fstl
xor
cs
sbb
pop
test
mov
mov
sub
hlt
add
push
inc
inc
and
addb
jg
and
sbb
cmp
shrb
cmp
sbb
xchg
mov
call
cmpsb
jmp
push
inc
adc
scas
mov
divps
sub
sub
adcb
inc
add
inc
scas
or
and
or
xchg
adc
adc
push
push
adc
add
mov
mov
incl
inc
aaa
gs
mov
xchg
push
mov
push
clc
xchg
xlat
pop
sbb
xchg
mov
clc
into
push
je
test
insl
dec
jae
shr
or
decl
xor
inc
mov
jmp
xchg
lds
dec
shlb
inc
mov
dec
jmp
cmp
call
out
rorb
outsb
xor
out
inc
arpl
fcmovnu
test
js
jo
gs
jg
sbb
and
loope
cmp
ss
push
mov
mov
pushf
adc
gs
mov
decb
add
mov
push
data16
inc
pop
inc
or
insb
imul
aas
push
mov
aas
sbb
push
lret
ja
mov
out
jmp
out
jo
fwait
sbb
loopne
xor
rcrb
pushf
jle
cmp
push
insb
push
inc
mov
ljmp
mov
jb
imul
das
imul
dec
cmc
xchg
and
pop
rolb
inc
ret
orb
pop
in
add
sub
imul
inc
xor
imul
cli
ljmp
mov
mov
lret
cmp
push
shlb
push
imul
pop
mov
out
pop
dec
popa
insb
inc
dec
cwtl
pop
mov
push
outsb
jns
addr16
call
rorb
jne
jns
mov
add
push
or
movsb
cmp
sbb
inc
xchg
mov
repz
dec
mov
fstpt
add
dec
and
test
out
adc
testb
data16
pop
das
add
dec
dec
insb
test
push
mov
add
mov
inc
xlat
fadd
mov
insl
xor
push
push
stos
inc
addb
cli
push
jg
ret
sub
jge
pop
push
insl
in
js
xor
mov
imul
or
sbb
mov
jo
add
or
mov
pop
inc
dec
inc
cmpsb
and
cwtl
cmp
pop
adc
decl
shlb
lods
jnp
cmp
ljmp
xchg
test
cmp
inc
loopne,pn
pusha
out
pop
ss
or
imul
pop
loope
add
xor
outsl
dec
test
outsb
dec
push
inc
lcall
jo
mulb
add
ja
mov
lret
lcall
mov
out
or
je
pop
sbb
cmc
movsl
dec
movsl
cmp
lods
xchg
dec
dec
sar
rolb
mov
ljmp
inc
inc
jbe
mov
add
adcb
push
rcrl
xchg
lahf
xchg
cli
mov
addr16
pop
jo
sbb
rcrb
call
cmc
dec
cltd
add
inc
add
add
mov
fstps
xchg
jbe
add
or
popf
or
lret
lahf
add
mov
lahf
cli
pop
and
mov
sub
xchg
gs
movl
mov
jg
ret
ljmp
dec
push
mov
test
cs
repnz
movsl
dec
psraw
scas
adc
pop
mov
jnp
push
lcall
adc
out
inc
sbb
dec
rolb
add
pop
push
push
xchg
emms
or
mov
aad
in
adc
jne
sbb
or
sbb
add
add
mov
cmp
xorb
xor
sub
lcall
add
test
imul
test
dec
mov
inc
je
icebp
add
add
mov
push
xor
mov
mov
arpl
nop
add
sar
call
ss
or
xor
aaa
nop
push
out
fwait
lcall
call
pushl
mov
xor
xor
jns
pusha
subl
cli
xor
sbb
adc
mov
je
push
jge
es
je
sbb
mov
and
push
loope
adc
js
push
dec
popa
jnp
in
jp
and
lods
shll
imul
mov
addl
cwtl
flds
xor
xchg
jne
sahf
pop
inc
movsl
into
add
jl
int3
les
add
and
mov
stc
sbb
xchg
xchg
rcl
push
add
jp
scas
inc
add
subl
and
xor
lret
dec
dec
inc
imul
pushf
and
test
xor
jno
dec
fisttpl
mov
sbb
call
jae
mov
and
inc
push
addl
mov
nop
lock
mov
loopne
xor
push
mov
jmp
sbbb
sub
mov
cmp
js
mov
repz
movsb
mov
xchg
mov
bound
xchg
imul
ja
adc
pop
js
cwtl
rolb
pop
push
ds
mov
dec
push
or
xor
fldt
je
ficoml
inc
repnz
xor
xor
lahf
hlt
mov
cmp
sub
add
or
clc
sbb
aaa
add
add
jns
ljmp
orl
xor
push
sahf
push
pop
pop
push
cmpsl
scas
jecxz
sub
movsl
mov
scas
icebp
add
jecxz
test
xor
sub
mov
add
test
sbb
sbb
cmp
jo
out
mov
test
mov
and
sbb
mov
sbb
inc
sbb
mov
add
fwait
outsl
stos
adc
xchg
insb
movb
in
inc
test
mov
repnz
add
mov
adc
test
mov
test
push
push
rorb
inc
std
xchg
sbb
pop
xor
stos
movsb
pop
stos
or
imul
xor
loope
mov
das
lret
or
jo
mov
lea
xorl
lahf
nop
cvtps2pd
rcrb
xor
push
cwtl
sarb
jnp
int3
lods
hlt
mov
sub
rcl
int3
movsb
add
out
js
xor
rcrb
or
mov
inc
add
and
stos
in
das
xor
sarb
jo
shrb
enter
jne
lcall
clc
mov
rcrl
repz
pusha
lahf
push
scas
daa
xlat
sbb
pop
add
push
xor
les
addl
jmp
lock
clc
dec
imul
push
cli
jbe
mov
inc
ret
dec
dec
popa
insl
xchg
icebp
ret
inc
push
les
bound
cmp
leave
inc
clc
lods
fimuls
pop
shl
stos
and
lods
xor
mov
jecxz
movsb
pop
addr16
mov
nop
cmp
jnp
call
ljmp
adc
or
jno
popa
xor
das
js
adc
cmp
add
nop
pop
xchg
push
push
aaa
jo
push
dec
push
aad
mov
push
xor
incl
incb
xor
cld
call
pop
gs
nop
cwtl
cmp
popa
cmp
xchg
cmp
test
add
and
into
sub
jae
jno
les
lock
ficomps
nop
mov
fbld
xorb
ds
dec
incl
cmp
push
dec
mov
mov
retw
push
pop
xchg
xchg
outsb
or
cld
in
xor
add
loope
mov
adc
xor
adc
andl
dec
lcall
sahf
leave
data16
or
ljmp
inc
mov
push
jecxz
scas
mov
sub
and
sub
push
lea
ja
dec
mov
ret
push
push
aad
aad
movb
js
les
sbb
or
xor
pop
pop
sbb
cli
test
ds
mov
mov
std
ds
ficompl
inc
das
aad
fists
lret
xchg
jnp
mov
mov
subb
int3
jno
inc
pop
inc
ret
push
inc
xor
jno
loop
mov
fimull
push
dec
repnz
bound
cwtl
inc
scas
shlb
daa
adc
inc
add
pop
mov
pop
inc
imul
jns
cmc
and
dec
jo
jo
insl
adc
add
sti
dec
xor
ret
dec
pop
fsubs
sbb
jb
stc
cwtl
mov
jbe
fdivrs
fidivrs
mov
shl
and
push
insl
je
ret
lock
mov
mov
push
push
jo
mov
inc
insb
aaa
sbb
mov
aaa
mov
fs
inc
dec
push
loopne
or
dec
mov
mov
into
fdivrs
or
into
mov
mov
inc
incl
inc
push
repnz
repnz
xor
cmp
inc
ljmp
iret
inc
ret
inc
outsl
sbb
imul
jg
mov
jl
sub
insb
loop
push
xor
sti
add
js
out
sarb
imul
fnstenv
jmp
mov
adc
hlt
sbb
dec
inc
push
ret
rcrb
jo
mov
xor
inc
pop
dec
aas
pop
push
std
sbb
xor
cmp
and
jl
inc
cmp
push
or
xchg
mov
fildll
push
jp
dec
jnp
inc
in
rorl
lock
jb
inc
pushf
mov
or
inc
push
daa
imul
inc
outsl
mov
flds
iret
ret
xor
imul
mov
cli
aaa
fs
push
fcoms
mov
push
test
cmp
mov
push
data16
dec
pop
sbb
imul
dec
shrb
inc
cmp
pop
inc
arpl
outsb
cmp
lods
add
pop
xlat
aam
lcall
mov
pminsw
movsb
int3
pop
sbb
mov
sti
in
mov
push
jl
repz
lcall
cmc
aad
scas
cs
cmpsl
arpl
pop
imul
push
ret
sub
aad
lock
outsl
clc
mov
mov
aaa
andl
into
lret
in
das
xchg
loope
jge
arpl
mov
push
shrd
jle
or
js
inc
leave
mov
mov
xor
mov
pop
jo
paddd
push
jbe
push
cmp
dec
dec
mov
icebp
inc
jmp
loop
cmp
mov
cmp
push
add
arpl
mov
add
pushl
sub
mov
mov
lea
ffree
pop
les
mov
jb
out
loopne
mov
adc
sbb
fsubrs
ret
dec
aaa
inc
mov
shrl
xor
lahf
test
xor
adcb
push
rorb
arpl
push
decl
ret
lock
dec
sbb
mov
or
data16
call
outsl
cmp
jae
popf
test
inc
sbb
aaa
stos
and
ss
std
mov
and
inc
dec
mov
or
jg
add
sahf
push
lahf
cmpsb
or
mov
mov
std
fidivl
inc
xor
pop
pop
xchg
fdivrs
add
jb
push
fcomp
icebp
jp
out
call
xchg
jbe
jns
sbb
outsb
xchg
fisttpl
inc
ljmp
out
sub
lock
jg
and
enter
leave
adc
sub
mov
jle
xchg
arpl
ret
addr16
or
adc
dec
dec
sbb
mov
ja
push
push
test
cmp
add
jp
aaa
and
leave
lods
sub
dec
pop
xchg
insl
imul
lock
sbb
mov
push
cld
jno
pop
push
dec
jnp
mov
sub
pop
xchg
push
int3
shrl
dec
dec
rorl
shrb
std
pop
mov
adc
cld
xchg
je
mov
sti
jb,pn
sbb
arpl
inc
adc
int
jecxz
fmuls
dec
jno
call
push
push
jecxz
and
ds
inc
pusha
mov
dec
jge
sub
gs
add
cmp
fadds
ret
or
sub
aaa
cmp
enter
std
jmp
pop
push
pop
lods
imul
pop
sub
jo
cli
mov
cltd
dec
add
jecxz
jmp
xor
lods
xor
inc
add
dec
sti
mov
shll
outsb
dec
dec
popa
push
lcall
add
push
decl
and
lret
or
test
das
stos
sbb
imul
jmp
cld
xchg
rcl
sbb
pop
rorl
sarl
je
xchg
and
pop
cmpsb
in
in
hlt
aaa
test
jo
xor
push
in
or
lods
add
pop
pop
out
inc
ficompl
idiv
push
test
and
sar
sub
dec
sub
mov
cmp
and
and
js
js
insb
arpl
add
test
add
sbb
or
push
pop
stc
xorb
aas
addl
pmuludq
adc
sbb
pop
mov
sub
mov
data16
and
hlt
cmp
pop
cmp
pusha
mov
cld
rclb
pop
add
int3
sbb
pop
mov
push
leave
clc
adc
dec
andb
ret
es
dec
sbb
dec
sbb
xchg
xchg
inc
xchg
lock
jl
inc
inc
lock
ret
pop
dec
push
jne
ss
incl
scas
mov
pop
push
movl
add
xchg
imul
and
jmp
jl
ss
push
rolb
enter
jnp
sub
stos
outsl
lock
rcll
sub
pop
pushl
pop
or
ja
jp
test
std
jmp
xchg
cs
jg
jl
rorb
out
ljmp
divb
pop
push
dec
call
loope
enter
stos
in
fxch
imul
jno
lret
xchg
jbe
mov
pop
sbb
inc
push
fistpl
mov
mov
aad
or
push
push
mov
jg
sahf
or
push
cmp
sar
push
repz
jbe
cmp
mov
call
pop
pushl
insl
dec
insl
jb
js
adc
inc
pop
mov
js
mov
rorb
sbb
rolb
inc
and
mov
ljmp
and
xchg
fldl
mov
xor
jo
outsb
imul
inc
pop
addb
mov
dec
orb
sbb
mov
adc
out
cmpsl
adc
inc
js
incb
xor
dec
fs
adc
cmp
inc
jo
out
add
mov
outsb
insl
fdivrs
popf
and
jo
dec
bound
lret
int
mov
xor
sub
fdiv
push
loopne
mov
sahf
rcrl
outsb
dec
jecxz
inc
imul
shrb
in
inc
loop
into
add
pop
lahf
push
inc
mov
loopne
daa
push
addr16
cmpsb
js
inc
jbe
inc
in
vcvtpd2psx
dec
bound
cmp
cmp
mov
dec
or
dec
daa
xor
xchg
mov
xor
scas
jne
js
lea
bound
cli
adc
add
es
push
mov
loopne
and
lods
dec
sarl
dec
into
rcrl
jbe
push
inc
inc
outsb
decl
or
xchg
or
cmp
ljmp
push
mov
jo
push
xchg
push
jl
mov
and
ret
rolb
pop
mov
jmp
arpl
dec
push
push
ret
ss
pop
push
inc
jp
push
scas
push
inc
jo
fs
bound
xor
loopne
inc
add
cmpsl
jno
insb
popf
adc
cmp
das
cli
mov
loope
bound
and
movsl
cld
dec
xchg
orb
jmp
inc
jl
leave
daa
cmpsb
dec
push
xchg
inc
dec
pop
xchg
push
cmp
inc
lcall
pusha
cld
add
add
dec
ljmp
sbb
ljmp
xor
push
pushl
loope
addr16
or
mov
xor
mov
inc
mov
pusha
lds
fwait
andl
xchg
adc
inc
dec
dec
inc
adc
jmp
sub
sbb
mov
pop
adc
int
aam
movsb
pop
xor
push
inc
es
mov
sub
out
ja
js
push
dec
pop
cmp
test
test
xchg
pop
jp
or
ja
jb
xor
or
aas
nop
shrb
xchg
ud1
fildll
pusha
loopw
in
testl
cmp
cld
adc
inc
adc
adc
or
test
fisubrs
mov
xor
mov
clc
test
pop
mov
add
mov
pop
test
mov
add
test
test
push
xchg
loope
mov
jle
cs
push
pop
mov
pop
fcomps
and
decl
sub
xchg
fs
mov
cltd
inc
sbb
cmpsl
es
xor
in
mov
lcall
in
out
ds
ljmp
outsb
add
mov
xchg
mov
ds
pushf
mov
or
mov
inc
and
jo
jle
aad
in
outsl
jmp
jbe
sub
and
adc
cmc
pusha
ja
xchg
jl
and
push
jp
pusha
movl
inc
loop
pop
mov
inc
out
dec
iret
lock
pop
hlt
jbe
pusha
ret
push
jg
cmp
and
mov
xor
stos
repnz
pop
clc
loope
test
movsb
jb
mov
test
dec
inc
roll
cmp
xor
inc
jne
sub
sub
pop
popa
sub
inc
hlt
or
dec
push
xchg
sbb
incl
int3
jmp
rclb
xchg
mov
insl
cltd
or
xor
jnp
gs
cmp
clc
loopne
and
es
xor
fsubrl
adc
dec
in
dec
je
pushf
lret
cmp
xchg
inc
push
jae
js
pop
jl
cmp
rcll
jmp
pop
es
negl
adc
jno
daa
roll
xchg
rcrb
inc
inc
loop
rcll
cmp
pop
adc
popa
inc
push
scas
mov
xchg
xor
fisttpl
push
cwtl
jbe
mov
or
arpl
cmp
lret
fstpt
outsl
adc
xor
add
pop
repnz
arpl
loopne
or
nop
add
test
mov
mov
xchg
fidivl
hlt
mov
scas
mov
mov
push
and
in
fwait
test
filds
clc
and
pop
inc
push
popa
jbe
cmp
lods
inc
jg
mov
dec
cmc
lds
incl
jge
cmp
add
push
adc
nopl
mov
test
and
push
gs
cld
nop
jae
pop
and
rcl
pop
cmp
push
or
adc
punpckhbw
nop
ja
jb
push
sub
fiadds
jmp
xchg
add
add
ret
pop
xchg
ds
pop
and
adc
ret
insb
orb
xchg
clc
push
mov
add
cld
imul
push
test
push
xlat
js
xchg
push
add
ficompl
loopne
mov
nop
or
dec
pop
push
cwtl
dec
inc
inc
dec
xchg
cwtl
adc
psubd
test
out
std
dec
das
or
add
dec
lcall
in
add
fcomi
notl
lea
in
sub
lcall
adc
das
push
adc
repnz
rol
scas
xchg
lea
fiadds
imul
xor
jb
push
sbb
sti
gs
faddl
lahf
inc
icebp
mov
inc
xchg
lea
in
shlb
xchg
xor
sbb
test
sti
insb
xchg
pop
repz
xchg
jo
movsl
lret
adc
je
mov
or
inc
aaa
inc
xor
fstpl
jns
aad
sbb
push
jo
shll
call
jb
outsb
pop
iret
or
scas
test
jne
jb
fwait
xchg
xchg
mov
add
shrl
push
mov
js
inc
pop
and
pop
sbb
iret
lret
ja
scas
mov
ljmp
pusha
sub
and
adc
cmc
push
loop
add
in
nop
aad
or
lock
ret
xor
pop
imul
filds
repz
mov
and
xor
and
push
xlat
xchg
cmpsl
les
jl
enter
lcall
sbbl
adc
stc
ret
sub
sub
push
imul
cs
or
lock
stos
and
and
ret
lret
mov
inc
jb
sbb
fldenv
inc
lcall
dec
add
or
and
add
inc
add
push
inc
pop
test
and
mov
lea
add
or
pushf
inc
ljmp
and
aas
rolb
mov
pop
add
jecxz
add
xchg
ret
movsb
movsl
jns
repz
and
cs
dec
ror
in
mov
nop
outsl
add
sub
pop
xchg
subb
push
sub
mov
sbbl
mov
push
in
in
mov
push
popl
adc
add
lock
xor
lahf
and
jae
lret
mov
mov
pop
inc
aad
push
or
mov
aaa
or
xor
pop
ljmp
mov
and
and
inc
mov
mov
dec
ja
fwait
je
or
enter
cmp
or
dec
movsb
mov
add
rcll
cwtl
in
subl
movsb
dec
pop
jle
adc
xor
test
imul
dec
jle
dec
lahf
inc
mov
xor
push
loopne
mov
mov
jecxz
adc
push
xchg
sbb
push
pop
and
test
sbb
gs
pop
repnz
into
ficoms
ret
and
and
mov
insl
out
popa
and
xchg
dec
mov
cltd
outsl
call
ljmp
lret
push
fcmovbe
sti
mov
andb
pop
inc
nopl
pop
or
cmp
push
push
hlt
xchg
and
shrb
leave
inc
loope
ljmp
push
sbb
mov
jo
mov
lcall
insl
and
subl
dec
inc
mov
repz
cs
aam
adc
and
pusha
xchg
stc
or
les
ret
int
andl
jb
xchg
repnz
add
leave
inc
adc
jecxz
rorb
push
add
rol
fwait
sbb
fcompl
cmp
push
xlat
enter
push
cs
addl
nop
or
and
hlt
xlat
xchg
loope
push
cmp
loope
mov
xchg
icebp
testb
mov
cmp
jns
jns
or
orl
add
and
loop
push
lahf
or
inc
inc
push
enter
mov
fidivl
mov
cmp
ret
jle
mov
xchg
mov
lcall
loope
push
dec
and
fcmovne
sub
inc
sub
repz
inc
sbb
mov
add
push
push
arpl
sub
loopne
and
iret
in
rcrb
bound
inc
mov
les
jg
sub
decl
repnz
test
cmp
adc
lods
jnp
mov
jmp
inc
test
repnz
clc
loopne
xchg
in
call
jecxz
adc
add
dec
jbe
inc
cmp
dec
push
adc
xor
arpl
data16
push
push
xor
mov
aas
aas
movsl
mov
jle
mov
icebp
ljmp
jno
loope
jb
pop
lcallw
mov
clc
sbb
repz
sbb
sbb
inc
sbb
inc
jo
js
popa
cmp
sbb
jmp
int3
xlat
sbb
or
ret
push
push
shlb
ds
xor
aam
mov
imul
ss
lods
das
push
pop
and
dec
mov
inc
ss
pop
dec
je
aaa
jmp
aaa
dec
pop
sarb
iret
and
js
xchg
xchg
test
jns
idivl
sbb
xor
inc
ljmp
xor
mov
inc
jbe
push
jmp
jbe
add
addr16
outsl
mov
pop
das
popf
pop
xchg
cld
mov
nop
lock
std
mov
sub
mov
daa
xchg
sub
andl
test
mov
nop
xchg
addr16
xor
imul
insb
dec
push
bound
push
cmp
decl
subb
sbb
shlw
out
insb
ret
or
push
insb
inc
dec
add
jle
icebp
out
push
inc
xor
dec
incb
roll
dec
jge
es
inc
dec
ljmp
xor
jne
add
adc
jb
jmp
mov
push
mov
aaa
xchg
mov
push
xor
test
inc
add
or
inc
les
fbld
call
addr16
or
cltd
dec
fisttpll
outsl
jae
psrld
mov
dec
inc
js
xchg
jmp
arpl
aam
stos
imul
pop
scas
icebp
mov
ret
jno
lcall
in
xor
js
enter
call
or
mov
loope
pop
or
insb
xor
xchg
cmp
xor
mov
incl
pop
repz
inc
fwait
xchg
cmp
mov
mov
stos
lock
dec
popa
outsb
xor
push
jo
sub
push
rorb
outsb
pop
scas
or
dec
orl
add
jns
mov
ljmp
sub
push
pop
shll
stos
cltd
loopne
xchg
arpl
outsb
sub
imul
cmpsb
jo
and
into
inc
mov
rolb
sbb
movsl
inc
insl
mov
rcll
inc
inc
jno
je
pop
lock
std
dec
or
dec
dec
imul
fildll
fiaddl
adc
daa
jecxz
cli
stos
cmp
pusha
scas
xor
add
shlb
push
pop
sub
cld
mov
inc
pop
pop
push
push
push
stos
add
inc
fistl
pop
inc
jp
or
pop
and
jmp
mov
and
mov
xchg
out
loopne
xor
aad
push
push
push
mov
jbe
call
adc
jb
ss
adc
call
movsb
dec
in
mov
mov
fimull
push
imul
rclb
inc
stc
cmp
jnp
insb
xor
nop
insb
inc
sub
xchg
sub
pop
sbb
pop
xchg
cmp
repz
add
rorl
add
xorb
out
sbb
mov
rcrb
sahf
add
fisttpll
arpl
leave
xor
imul
in
mov
aas
mov
sub
in
push
push
mov
jmp
push
fsubl
fldcw
fstps
adc
je
mov
cmp
pop
jmp
ret
je
mov
mov
aas
add
inc
dec
inc
mov
test
mov
or
dec
imul
dec
dec
sub
add
fwait
sub
dec
data16
cmp
mov
xchg
fldcw
push
neg
stc
in
icebp
push
mov
dec
mov
push
push
imul
shl
mov
out
sbb
sbb
push
push
push
mov
jne
int
add
lds
movb
xchg
rcrl
pushl
xchg
out
sbb
in
adc
cmp
push
add
xchg
les
and
nop
push
adc
add
cld
jmp
add
outsb
push
lods
das
mov
and
shll
push
mov
mov
jge
xchg
dec
sbb
xor
push
fisttpl
or
dec
cmp
xor
and
pusha
orb
imul
push
sub
pop
clc
jg
in
lea
pop
jne
lock
cmp
imul
push
arpl
xor
jo
push
inc
adc
mov
dec
mov
enter
fisubrl
push
ret
jne
sub
cmp
bound
xor
ljmp
mov
cwtl
incl
mov
leave
cmpsb
mov
mov
mov
fnstenv
add
dec
sub
movsl
cwtl
loopne
push
das
dec
pop
js
idivb
lods
cmp
inc
dec
icebp
mov
loopne
dec
inc
int3
mov
add
in
or
sub
mov
mov
mov
lds
sbb
lahf
lods
lahf
sahf
in
inc
sub
inc
fisttpl
inc
daa
adc
daa
out
or
jg
jb
cs
aam
mov
out
pusha
mov
pop
sar
sbb
dec
cmp
cmp
out
jne
push
jb
mov
data16
push
cwtl
out
arpl
push
push
les
fs
adc
loope
fildll
cmp
push
xchg
mov
ja
mov
pop
jmp
ljmp
shr
mov
and
call
outsb
fsubrl
aad
sar
divl
movsb
shl
mov
nop
push
push
and
jns
lcall
jl
ljmp
mov
push
add
mov
lods
out
sbb
lock
ljmp
dec
sbb
gs
dec
or
xchg
mov
scas
fs
push
jne
push
xchg
lock
idiv
insb
push
push
fmulp
rolb
loopne
mov
mov
loope
xor
scas
add
fs
pushl
popf
or
xor
mov
js
ret
jmp
stos
push
sahf
jns
cmpsb
repnz
cli
mov
outsl
dec
inc
push
popa
inc
pop
movsb
outsb
ret
cmp
ljmp
add
loop
cmpsl
dec
ret
jnp
jmp
cmp
cmp
movsl
ret
inc
pop
cmpsb
popa
mov
xchg
cmc
fdivrl
movsb
pushf
pop
aam
add
nop
cli
shrb
cwtl
push
mov
pop
in
push
push
lcall
jmp
xor
mov
pop
xchg
iret
jge
xchg
in
jns
nop
cltd
push
mov
bound
aas
test
in
out
mov
or
clc
mov
add
cli
sub
js,pn
sbbl
pop
es
push
jb
jno
or
push
sub
test
movsb
ret
cmp
inc
imul
pushf
insb
ja
inc
aam
arpl
mov
mov
jb
sub
sti
adc
or
jmp
test
pop
inc
push
push
dec
and
jp
xchg
push
and
divb
add
xchg
sub
ret
ret
fs
cmc
stos
repz
push
dec
inc
add
add
jno
dec
inc
rcrb
adc
je,pt
xor
fimull
mov
inc
dec
cmp
andl
insb
jmp
pop
enter
dec
sbb
leave
pop
fsub
popa
popa
mov
sbbb
add
xor
adc
push
push
or
js
push
push
lea
clc
mov
lock
lods
mov
push
pop
das
aad
jns
sbb
mov
popa
jo
loopne
add
cmp
loopne
call
jnp
inc
adc
inc
addr16
stc
orl
loopne
pop
ds
adc
and
adc
inc
ja
add
repnz
clc
lea
std
outsb
jno
xor
les
fdivrs
jecxz
cs
fs
sahf
addr16
insl
inc
enter
int
push
xorb
jg
sbb
cmp
cmpsb
sbb
and
ret
and
sbb
jecxz
iret
cmp
mov
leave
xor
and
add
or
scas
flds
xchg
push
inc
mov
and
xchg
cmp
dec
or
imul
pop
jbe
pop
mov
inc
sbb
xchg
pop
inc
push
xchg
mov
in
addb
xchg
jle
scas
out
mov
push
imul
popa
mov
xchg
negb
xor
insb
movsl
xor
adc
and
cmpsb
push
lahf
leave
std
or
loope
and
pusha
call
push
mov
cli
call
xor
lea
jns
fst
cmp
xor
scas
in
scas
rcl
inc
and
test
adc
imul
sarb
icebp
dec
addl
sbb
scas
lock
das
es
dec
pusha
inc
popa
xchg
nop
inc
test
inc
clc
pushf
lea
leave
or
and
repnz
loopne
or
push
das
andb
xor
clc
inc
enter
cmc
add
cmp
jg
and
loope
test
mov
jg
test
sub
cs
dec
ret
inc
in
addl
stos
jo
xor
stc
xor
les
loopne
int
fs
push
out
test
push
cmp
bound
rorl
int
out
pop
mov
nop
fsts
int
push
pop
cmp
jns
or
adc
js
in
cmp
stos
test
ret
and
shrl
cmp
mov
jae
sbb
test
lcall
mov
pop
or
cwtl
or
jmp
cmpsl
jns
xchg
push
and
mov
sub
lcall
roll
das
cmp
xchg
rolb
bound
sub
push
push
mov
mov
js
shrb
cmc
jl,pt
test
mov
es
faddl
inc
xor
dec
ljmp
push
lods
shlb
in
test
dec
rolb
jae
arpl
stc
cmp
pop
jl
push
es
shl
shl
addr16
test
lea
dec
inc
ja
xchg
or
inc
jmp
pop
xor
sbb
add
lcall
test
decl
push
push
dec
bound
cmp
cmpsl
test
hlt
fs
fsubr
and
incl
sbb
movsl
sbb
or
pop
loope
xor
mov
push
pushf
dec
dec
push
je
push
inc
test
out
xor
or
dec
lea
sarb
lahf
xlat
inc
ljmp
and
cmp
push
aaa
mov
fisttpl
out
and
aam
stos
fsubs
mov
mov
fsubrs
xchg
mov
cmp
mov
dec
inc
inc
dec
cmp
dec
xchg
dec
cmp
or
jmp
sbb
and
xchg
add
loope
andb
or
mov
int
loopne
mov
xor
bnd
sbb
xchg
rcrl
mov
shlb
xor
rolb
fnsave
xlat
aad
punpckhwd
push
nop
mov
add
jae
addl
pop
jo
leave
in
add
jnp
jo
rolb
inc
imul
xor
rorl
loop
fcmove
jl
inc
loope
push
repz
pop
add
subb
pop
inc
aas
sbbl
out
jmp
movsl
pop
mov
add
icebp
add
ret
jb
xor
jmp
and
push
add
sub
repz
add
pop
xor
or
pop
xor
fnstcw
xor
push
aaa
dec
dec
mov
and
inc
inc
inc
incl
bound
fstps
fs
addr16
pop
mov
or
mov
cli
fbstp
cmpsb
or
adc
jmp
push
mov
dec
and
push
loope
inc
pop
call
test
xor
push
mov
sbb
jo
sbb
sbb
xchg
add
xor
mov
outsl
inc
or
pop
inc
out
and
roll
xchg
movsb
add
imul
lret
xchg
loop
cmpsl
aam
mov
adc
dec
xchg
sbb
pushf
nop
or
sub
dec
popf
inc
push
xor
add
sbb
nop
aaa
adc
leave
addr16
or
mov
cmc
popa
push
jbe
out
add
jle
adc
sti
imul
daa
addr16
orps
adc
iret
xchg
pop
lcall
push
pop
sub
add
mov
imul
sbbl
xchg
cld
push
and
scas
insb
jno
push
cmp
std
xlat
aas
or
mov
out
sbb
pop
sbb
or
xor
dec
or
cmpsl
or
jl
es
xlat
push
sbb
aas
orl
dec
mov
les
fcmovb
jns
cmpsb
and
cs
adc
mov
mov
aam
jmp
jecxz
inc
cmp
outsl
mov
jp
cmc
popf
movsb
jb
pop
sub
xchg
rcll
pop
inc
mov
in
test
or
out
push
add
movsb
mov
sub
mov
add
lds
add
leave
inc
pop
ss
iret
dec
call
lcall
shll
adc
enter
and
out
mov
add
mov
xor
pop
push
add
mov
popa
call
and
pop
push
add
cli
and
fidivl
xor
test
lahf
lock
mov
je
ds
sbb
stc
rorl
popf
cmpb
stc
mov
or
sbb
loope
add
je
pop
push
xorb
fs
dec
push
push
add
xchg
xchg
or
icebp
outsb
jecxz
lock
inc
jb
ds
ret
mov
mov
outsl
jge
or
cltd
into
sbb
pop
gs
push
cmp
jle
fisubs
push
xchg
cmp
or
push
outsb
aaa
loop
push
inc
xchg
stos
je
cwtl
imul
pusha
cmpsl
jno
pop
jp
jg
adc
popa
test
lds
ret
in
lahf
cmpsl
add
loop
xor
cwtl
push
or
or
ljmp
mov
lock
outsl
mov
xchg
dec
jo
push
cmpsb
pop
cmpb
lods
hlt
movsl
sbb
and
and
add
or
adc
scas
push
inc
js
inc
mov
or
cltd
sar
lcall
xorb
mov
mov
xorl
push
inc
sbb
ljmp
or
cmovge
sub
push
cmp
loope
test
lcall
push
push
data16
push
pusha
loopne
dec
inc
push
icebp
jo
add
outsl
xor
xchg
mov
add
pop
movsl
les
mov
jno
jb
jl
lahf
pop
rol
arpl
in
lahf
cmp
add
cs
adcb
push
loope
adc
test
adc
or
xor
adc
adc
add
sbb
outsl
ret
sbb
mov
test
sub
jno
inc
xchg
inc
and
pop
orl
ud0
sub
sbb
dec
or
loopne
add
scas
orl
ret
or
in
or
or
mov
js
andl
sbb
in
add
dec
cs
sbb
pusha
stos
pop
cmpsl
mov
outsb
adc
test
mov
nop
push
test
adc
lahf
pop
cmp
inc
dec
movsl
sub
rcr
mov
adc
leave
test
lods
and
pop
das
mov
dec
and
in
movsl
sub
sbb
jo
xchg
xchg
push
popa
nop
sbb
sub
and
xchg
cs
test
icebp
inc
cmp
jg
cmp
cmpsb
cwtl
dec
xor
fcom
mov
push
cmp
jns
popa
cli
and
jmp
imul
xchg
mov
sub
jne,pn
and
add
jg
cmp
movsb
notb
shrl
xor
popa
popf
stc
loope
out
lret
fcmovnbe
outsl
mov
jecxz
inc
je
sbb
push
scas
ss
inc
adc
add
and
enter
loop
mov
icebp
outsl
cmp
inc
push
inc
mov
incl
jns
and
sti
push
cs
or
inc
jp
mov
jo
and
lea
fmuls
pop
push
jmp
push
pop
je
imul
push
dec
aaa
dec
mov
push
push
mov
ret
aas
js
leave
ret
adc
orl
lcall
push
das
jle
xchg
aam
adc
cltd
pop
fsts
scas
mov
loop
jle
mov
lods
test
dec
dec
xor
inc
push
jo
lock
or
or
je
lds
addl
jmp
loop
aaa
jo
sbb
stos
sbb
lds
cs
loop
jmp
sti
test
movsl
hlt
stc
or
dec
es
imul
inc
cmp
inc
cmp
inc
insb
jo
jbe
pushf
std
mov
xchg
mov
pop
cmp
push
scas
mov
data16
fdivl
add
xorl
push
inc
dec
repnz
test
jae
dec
push
xor
aas
xor
ljmp
negl
xor
cmpsl
ja
xorb
sbb
in
mov
sbb
ljmp
dec
inc
faddl
into
jb
or
test
adc
and
cmp
jae
lret
sar
push
cltd
dec
dec
cmp
sar
adc
push
ljmp
mov
lods
jne
push
dec
jb
mov
fnsave
add
jle
jne
adc
shll
incl
dec
or
in
add
call
adc
xchg
jle
imul
imul
lcall
and
pop
rcll
and
enter
ss
daa
cmpsb
push
mov
sbb
ret
mov
inc
mov
add
push
dec
aaa
fstl
dec
daa
push
xchg
dec
sar
mulb
loopne
add
jbe
ja
dec
jecxz
outsl
sti
cltd
cmp
nop
jae
jns
adc
mov
sbb
dec
push
ds
cmp
sub
arpl
push
aas
pop
add
andb
ja
jb
enter
add
incl
adc
push
sbb
and
mov
roll
loopne
jmp
push
sbb
inc
sub
adc
fsts
push
loopne
jmp
sub
push
pusha
pusha
ret
jecxz
pushf
sahf
dec
arpl
jg
add
pop
dec
add
pop
pop
add
cs
push
mul
xor
sbb
movsb
lret
dec
dec
xor
xchg
or
mov
or
test
dec
repz
jb
testb
xchg
ret
mov
dec
insl
popa
js
enter
cmpsb
pushf
div
mov
das
jns
adc
pop
cmp
js
popa
inc
adc
fimuls
cmc
lret
paddusb
inc
adc
mov
int3
xchg
adc
icebp
xchg
test
outsl
lret
or
subb
cltd
or
add
mov
xchg
iret
call
xchg
cmp
repz
xor
fwait
add
leave
pop
arpl
xor
push
aaa
aam
movsl
xchg
and
fildll
cmp
loopne
and
cli
mov
lret
dec
dec
add
nop
xlat
fidivl
jmp
xor
sarb
mov
rcrb
and
int3
out
cmc
add
dec
add
icebp
add
ror
pop
xchg
aaa
xor
inc
sahf
add
mov
mov
dec
xor
sti
imul
das
pop
test
mov
pmaddwd
add
pop
add
orl
push
pop
jl
lret
xorl
loope
mov
sarl
subb
xchg
adc
cmpsb
jmp
adc
insl
xor
scas
dec
sbb
rorb
and
ret
dec
or
sbb
popf
addl
cmpl
lods
push
pop
xchg
xchg
out
adc
xor
inc
lret
cmp
xor
fimuls
jbe
jae
dec
adc
push
icebp
xor
add
inc
aaa
lods
cli
sbb
adc
jns
add
lea
and
mov
cmpsl
in
jle
rol
fiaddl
enter
push
or
les
cmp
sbb
jne
push
js
cmp
arpl
inc
inc
dec
out
clc
pop
jb
mov
push
pop
dec
les
xchg
inc
push
jo
fwait
cld
mov
pop
xor
inc
out
sub
cmpsl
outsl
mov
lods
sub
test
add
aas
xlat
cmp
mov
je
dec
cltd
mov
loope
mov
mov
mov
mov
sbb
cmp
xchg
adc
int3
dec
mov
das
shlb
mov
push
rorb
sbb
pop
lcall
add
scas
mov
add
fcoms
fwait
jl
or
test
add
sub
push
xor
ret
loope
test
inc
fs
dec
pop
imul
jmp
mov
stc
pop
mov
pop
xor
jne
inc
lahf
hlt
mov
into
pop
js
js
dec
iret
cmp
aas
mov
xor
and
push
in
stc
in
std
pop
fsubl
or
and
add
ljmp
testb
addl
cmp
pop
inc
imul
jno
inc
cmp
shrb
mov
or
mov
sbb
xor
pop
dec
pushl
push
push
inc
int3
dec
jle
adc
ret
hlt
pop
addr16
push
cmp
in
mov
inc
xor
cmp
xor
test
lea
popa
inc
imul
lock
inc
add
inc
jne
ss
ja
add
xchg
decl
push
outsl
lahf
repz
movsb
xchg
pop
push
and
pop
jg
cmp
inc
and
out
and
jecxz
sar
cmp
imul
push
push
dec
pop
push
incb
aaa
xor
jmp
scas
out
js
dec
inc
jle
adc
ja
dec
push
or
outsb
inc
add
sbb
mov
lods
das
stos
add
into
cmp
dec
xchg
lock
aas
nop
insb
dec
in
imul
mov
std
push
pushf
adc
ja
dec
jo
or
test
shrl
mov
stos
ljmp
dec
xor
push
rclb
fcompl
mov
add
sar
stc
sbb
fcoml
lahf
pop
and
ds
movsl
icebp
psubsb
dec
hlt
jmp
dec
imul
movl
pusha
jmp
aaa
jns
imul
cli
out
cmp
je
mov
inc
mov
mov
cmp
push
and
cmp
add
hlt
add
and
fcom
push
push
sti
xor
jne
and
sarl
mov
out
fdivl
cmp
adc
push
mov
movsl
int3
repz
nop
das
sbbb
cwtl
fiadds
adc
push
dec
outsl
xor
dec
nop
push
xchg
dec
jb
movsb
sbb
lock
push
stc
fsub
push
mov
inc
inc
lcall
cld
rol
arpl
mov
loopne
sti
xchg
pop
cmp
adc
push
mov
mov
popa
adc
or
pushf
dec
bound
inc
pop
outsl
inc
dec
loop
sub
inc
dec
inc
push
mov
lods
mov
xor
push
mov
add
mov
pushf
nop
shl
mov
mov
push
push
sbb
in
dec
ljmp
adc
mov
ja
and
pop
nop
ss
fiadds
loopne
lret
jmp
stos
pop
jmp
and
sbb
dec
jmp
push
mov
push
xchg
xchg
out
bound
inc
push
mov
mov
gs
in
notl
pop
rolb
mov
and
sub
cmp
adc
sub
dec
nop
dec
pop
adc
adc
sbb
jmp
and
out
cmp
mov
inc
jp
sub
add
sub
xor
orb
scas
ja
jns
adc
push
repnz
mov
add
cmp
and
and
loope
jno
and
ficompl
pop
add
sbbl
xor
mov
push
movsl
fs
je
sbb
sub
add
add
addr16
or
std
js
add
sbb
fadd
cli
mov
test
push
adc
and
bswap
in
ret
xor
adc
movsb
scas
sub
icebp
jmp
out
std
and
test
les
and
cwtl
adc
pop
cmp
popa
dec
rorb
out
dec
daa
xor
imul
dec
dec
xlat
ja
or
inc
adc
orb
incl
je
adc
xlat
lods
inc
jns
xchg
cmp
adc
adc
mov
mov
repnz
push
jg
push
enter
push
mov
add
inc
js
dec
mov
cmp
arpl
jb
jns
add
dec
loopne
sbb
pop
add
xchg
jle
int3
dec
int3
jae
cmp
cmp
xor
mov
outsb
inc
fstps
clc
in
mov
lods
adc
icebp
mov
jmp
adc
loopne
outsl
push
je
mov
or
adc
loopne
inc
scas
ret
inc
xor
shr
sub
dec
cmp
inc
dec
decl
subb
jbe
dec
nop
mov
std
call
push
aas
mov
xlat
clc
call
push
test
or
dec
icebp
clc
andb
push
test
inc
sub
es
sti
ret
shlb
or
jg
cmp
add
mov
pop
jo
xchg
sub
cltd
lds
std
dec
fstpt
add
cwtl
push
std
pop
or
loopne
inc
ror
aas
dec
pop
addr16
aaa
cmpsb
lock
fiaddl
gs
inc
mov
call
jmp
mov
push
outsl
sub
sbb
jg
mov
dec
movsl
xchg
in
inc
inc
add
add
adc
aam
int3
aad
push
in
movsb
push
jo
mov
insb
jecxz
sar
insl
insb
outsw
and
dec
xor
icebp
or
ljmp
std
movsb
cmpsb
rcrl
jo
push
or
lods
jb
leave
bound
dec
sti
pushf
loopne
filds
scas
aad
sbb
xor
add
push
or
dec
jne
add
push
es
dec
fwait
sub
arpl
jg
sbb
mov
ljmp
add
push
lods
fstp
fcmove
lock
xchg
mov
mov
popl
in
jle
push
jb
data16
push
mov
iret
in
fs
loopne
adc
jnp
jne
outsl
lcall
loopne
jmp
roll
and
test
popa
cltd
xlat
and
les
call
stc
xchg
sub
pop
mov
daa
movsl
pop
enter
dec
inc
push
add
lahf
and
xchg
arpl
sub
icebp
std
ja
lcall
dec
dec
mov
ljmp
cltd
imul
ror
push
adc
lods
jae
cmp
ret
lahf
scas
xchg
cmp
push
sbb
add
adc
fs
xchg
mov
xchg
dec
aam
mov
je
dec
aaa
gs
jbe
ja
mov
jno
mov
jae
dec
dec
ss
pop
popf
adc
xlat
mov
and
loop
adc
sbb
mov
and
es
mov
adc
mov
push
sub
push
dec
jg
testl
xor
inc
push
jns
icebp
dec
call
pop
loop
xor
dec
lods
push
fistpl
sub
ljmp
out
adc
or
hlt
mov
mov
dec
lods
nop
push
leave
lcall
add
inc
xchg
adc
cmp
or
mov
lods
arpl
mull
bswap
iret
adc
push
call
outsl
xchg
fs
in
push
add
cwtl
pop
jb
fadds
add
adc
bound
ret
repz
mov
popa
iret
add
or
dec
xor
cltd
ja
cmp
sub
aas
lahf
mov
das
out
stos
jno
push
pavgw
fcmovnbe
pop
and
push
xor
cmp
nop
orl
stc
mov
fstpt
mov
ret
adc
pop
fildll
dec
lret
push
out
orl
mov
inc
repz
cmpsb
pusha
stos
into
lock
cmp
roll
cmp
dec
lods
lock
adcl
mov
lahf
clc
cmp
imul
in
push
mov
pop
xor
mov
pop
orb
cmp
sahf
sbb
xchg
or
and
sub
ret
dec
pop
inc
test
lcall
fmull
pusha
push
xchg
and
dec
addr16
or
mov
pop
adc
sub
sub
fdivrs
rclb
enter
or
inc
cmc
ds
adc
xor
dec
dec
ror
decl
push
packsswb
pop
sub
xchg
pop
dec
pop
insl
and
add
pusha
sbb
jge
cli
inc
sbb
int
int3
dec
mov
xlat
mov
pop
imul
test
push
xor
xchg
test
stc
hlt
and
orl
xor
loopne
nop
out
or
ret
test
push
push
dec
jl
lret
sub
pop
femms
add
frstor
popl
add
pop
into
pusha
dec
xchg
dec
sbb
and
pop
testb
in
dec
cmpsb
flds
or
jo
scas
dec
popl
pop
cwtl
adc
pop
jmp
pushf
dec
lcall
fs
leave
or
add
into
mov
mov
push
sub
add
andb
sub
repnz
xor
inc
negb
js
lret
dec
mov
sbb
loopne
pop
es
sbb
xorl
and
pop
out
push
add
xchg
xlat
stos
add
sbb
jl
insb
pusha
jns
add
inc
pop
jecxz
push
fbld
test
imul
cmp
popa
push
sbb
xlat
inc
stos
sub
mov
pop
inc
stos
cmp
pop
daa
adc
adc
in
add
mov
imul
xor
inc
xchg
jl
push
fsubl
gs
insb
fisttps
fildll
cmp
lods
xchg
add
stc
xchg
leave
pop
shll
xor
jne
cltd
jo
gs
jb
mov
mov
enter
clc
imul
mov
orb
in
push
pop
lds
loope
insb
dec
or
cmp
and
xchg
push
data16
push
pushf
or
push
jg
outsb
scas
flds
hlt
in
mov
jns
push
int3
test
iret
loope
test
mov
mov
jns
mov
movsb
or
jge
lcall
ret
sahf
aas
sub
aad
inc
push
mov
ljmp
enter
push
jmp
out
std
movsb
pop
and
sbb
dec
sub
enter
push
mov
mov
push
add
xor
dec
push
test
inc
mov
loope
sti
test
push
mov
stc
fst
sbb
dec
into
sahf
aad
std
mov
cwtl
push
dec
bound
add
push
inc
mov
pop
push
jg
or
ss
xchg
out
push
imul
push
rorb
cmp
pop
cmp
pushl
mov
lret
ret
jne
mov
jmp
pushl
insb
jmp
sub
and
not
inc
test
inc
mov
add
mov
les
inc
int
inc
mov
aaa
xchg
incb
push
call
inc
add
mov
outsb
lcall
xchg
leave
sti
xlat
mov
int3
in
ret
or
aaa
shl
sub
push
stc
push
pcmpeqb
push
dec
sbb
lock
andl
inc
xor
fistpll
push
sub
add
push
ficompl
or
adc
cwtl
mov
xor
cltd
add
inc
aam
push
mov
jae
dec
or
daa
mov
xor
dec
cmp
xor
cmpsl
or
ljmp
insl
sub
xchg
sbb
mov
pushf
mov
xlat
or
shll
mov
add
xchg
daa
sub
lods
cmp
xor
je
sub
jae
jno
xchg
inc
stos
cmp
iret
inc
dec
push
incb
push
push
sbb
pushl
jecxz
les
rorl
push
cmpsb
arpl
addb
pop
fwait
call
jae
inc
and
loopne
xor
add
dec
rorb
out
rcll
push
adcb
inc
sbb
push
test
pop
movhps
rorb
decl
jl
lcall
data16
add
mov
or
ror
sar
lcall
daa
dec
mov
or
pop
inc
dec
cld
cmp
push
inc
out
jb
jbe
int
sbb
jg
lret
rclb
inc
inc
gs
sbb
jne
inc
ja
push
and
cmp
dec
dec
fdivrs
pop
push
inc
dec
lods
ljmp
add
add
scas
or
mov
fdivrs
gs
pop
mov
test
dec
adc
ljmp
sub
jnp
idivb
dec
and
repz
sbb
movsb
mov
mov
jae
xchg
mov
loopne
andb
add
dec
push
inc
fucom
adc
decl
sti
ror
add
cmp
or
mov
enter
adc
cwtl
inc
and
insb
inc
inc
cmp
dec
je
insl
dec
mov
sahf
imul
aaa
je
mov
or
sarb
cmp
nop
adc
mov
adc
dec
and
dec
sbb
lret
jl
pop
repz
mov
mov
or
icebp
arpl
push
movsb
push
into
push
mov
mov
sarb
inc
inc
dec
test
inc
sbb
aaa
push
enter
inc
push
es
sub
push
mov
aaa
orb
mov
test
pop
push
jo
fidivrs
push
call
icebp
int3
inc
mov
dec
sub
arpl
lock
jns
jbe
dec
pextrw
test
mov
mov
arpl
or
call
repnz
sarl
add
lret
mov
jmp
or
lods
sub
test
push
in
shll
lret
int3
push
ja
mov
cmp
mov
push
xor
push
bound
sahf
mov
rcl
imul
or
add
das
mov
outsb
decl
push
push
dec
fstps
and
jae
fsubrs
fiaddl
ret
test
push
jg
push
push
dec
in
pop
icebp
or
das
add
in
fs
mov
js
mov
sbb
test
xor
popa
jb
dec
arpl
enter
sbb
jb
dec
imul
adc
pop
inc
bound
arpl
sarb
bound
or
pop
push
ds
add
push
movb
fs
and
sti
jb
sbb
popf
mov
sbb
stc
mov
int3
cmpsb
call
jbe
push
fs
push
shll
popa
mov
sbbl
lcall
jne
cmp
fsubs
add
ss
push
sbb
filds
jecxz
jg
xor
imull
push
pop
mov
daa
fwait
xchg
mov
mov
mov
push
xchg
cld
or
inc
xor
and
icebp
jge
inc
sarb
call
cmpb
sub
mov
dec
push
jecxz
in
fs
jbe
outsl
rolb
outsl
popa
inc
jne
imul
inc
rcll
imul
jmp
data16
in
inc
xlat
jp
mov
jle
push
xchg
cltd
idiv
jle
xchg
sti
jmp
mov
or
std
dec
and
sub
mov
cmpsb
ds
push
jne
dec
inc
dec
mov
outsl
push
mov
cmp
shll
cmp
in
lret
xchg
xor
pop
adc
cmpsl
sub
cmp
aam
sub
jecxz
mov
pop
aas
push
xchg
das
or
or
and
loopne
inc
xchg
loope
roll
in
jp
test
inc
jne
addl
mov
adc
adc
test
jge
inc
adc
mov
cs
add
addl
push
push
lahf
cwtl
inc
cltd
lock
sbb
cltd
shrb
lds
test
movsb
inc
xor
leave
jecxz
push
shrb
les
and
push
add
popf
or
leave
sbb
or
cld
lods
inc
add
inc
repnz
dec
testb
cmp
aas
jo
cmp
push
aaa
xor
mov
mov
fisubrs
aad
sahf
pop
add
pop
push
mov
xchg
inc
arpl
add
cmpsb
push
dec
pusha
int
das
xchg
arpl
ret
mov
dec
hlt
clc
sbb
mov
test
adc
mov
push
add
std
or
sbb
test
nop
lahf
cmpsb
inc
iret
inc
adc
pop
addr16
aam
andl
pop
lods
xchg
adc
inc
enter
cmp
inc
addl
push
cmp
sbb
sub
or
push
adcb
mov
dec
cwtl
mov
ficoml
push
add
mov
pop
mov
out
mov
rcrb
adcb
jns
xchg
ret
mov
add
add
repnz
inc
sub
fs
inc
lahf
dec
test
fmuls
push
jo
push
jo
sbb
adc
jne
mov
mov
out
mov
in
cltd
jmp
push
sbb
xor
mov
andb
xchg
mov
pop
cwtl
ljmp
push
jno
or
mov
push
jo
push
out
inc
cmovno
mov
aad
stc
jns
fbld
push
xor
daa
or
jne
xor
jge
cmpb
call
out
icebp
ds
insb
cmp
and
or
in
faddl
push
sahf
sub
push
and
dec
ret
adc
xor
or
xor
add
pop
inc
sbb
jbe
inc
inc
cmp
and
je
fcmovnb
dec
stos
cmp
ljmp
add
lret
fwait
or
data16
pop
pushf
lods
pop
sbb
and
xchg
mov
add
jmp
int
stos
jge
insb
into
mov
sahf
dec
cli
testb
scas
ret
mov
lds
pop
ret
sbb
push
cwtl
fistps
adc
fsts
scas
dec
adc
or
mov
push
arpl
dec
es
jbe
sbbb
jmp
ret
mov
std
lods
jbe
inc
sahf
sbb
xor
fnstsw
shlb
cmc
xchg
xchg
nop
loopne
jmp
jno
add
add
push
sti
and
xor
nop
xor
sahf
addl
push
mov
f2xm1
dec
and
jb
push
push
cli
dec
inc
inc
jnp
in
cmp
lcall
lcall
push
fnstsw
leave
notb
xchg
sub
loopne
push
xlat
mov
or
shrl
clc
loop
test
mov
jecxz
insb
aaa
jl
pop
shr
ret
inc
xor
ret
scas
xor
and
shl
add
dec
sub
dec
push
push
clc
dec
dec
add
push
jg
push
adc
int
shl
out
push
imul
stos
adc
jae
mov
test
lods
enter
mov
cwtl
xor
les
mov
out
xor
add
js
dec
ljmp
jl
repnz
pop
adc
les
mov
decl
gs
xor
cmp
popf
jb
push
movl
enter
pushl
lcall
lods
push
adc
ja
and
int3
arpl
cld
pushl
fldt
ss
std
in
push
or
jl
ljmp
dec
dec
mov
test
in
mov
pop
push
inc
adc
mov
jne
ret
gs
ss
imul
sahf
cmpb
test
lcall
cmp
or
ja
mov
ret
popa
cwtl
or
sbb
sti
cmp
push
jno
cwtl
imul
dec
jno
dec
test
dec
inc
aaa
orb
dec
dec
push
or
insb
bound
bound
jmp
arpl
add
jae
push
inc
sub
inc
inc
dec
inc
call
push
inc
cmp
lret
lds
fildl
je
mov
fs
fs
xchg
inc
mov
pop
fisubrl
ja
in
sar
push
addw
cs
adc
gs
loop
pushl
scas
imul
xchg
stos
ss
hlt
pop
ds
or
dec
jno
jbe
add
fcomps
inc
jp
clc
add
sbb
adc
mov
adc
xor
or
jmp
dec
test
in
call
ss
shr
jge
hlt
mov
pop
jnp
hlt
sub
add
shlb
push
mov
add
push
mov
sub
arpl
mov
popf
shr
sub
cli
aad
cmc
rcrb
pop
outsb
push
cmpsb
cmp
push
xchg
ds
fs
inc
jp
hlt
push
sub
ds
jb
orb
enter
push
fiadds
inc
clc
jno
subb
insb
push
mov
sbb
mov
call
sbb
push
inc
lret
sub
cmp
sahf
loope
inc
aad
lock
push
loop
sbb
xchg
jno
mov
push
dec
pop
lock
mov
xor
cli
daa
sar
call
mov
dec
dec
sub
enter
add
test
adc
fadd
xchg
mov
loope
sbb
bound
dec
aam
jge
and
ja
push
outsb
xor
jmp
pushf
test
sbb
test
loopne
jnp
cmpb
cmp
gs
jb
hlt
inc
push
push
into
lods
add
popl
sbb
cmp
add
leave
inc
xorl
inc
mov
and
and
insb
stos
test
rolb
push
dec
inc
xor
das
inc
ds
push
movsl
fstpt
jle
out
loope
repnz
sbb
sub
add
inc
mov
add
fwait
testb
sbb
xchg
pop
ffree
jecxz
cld
in
jb
sub
dec
stos
test
stos
pop
in
mov
or
test
insl
or
clc
mov
xchg
leave
sahf
sbb
mov
inc
xor
mov
mov
inc
xchg
out
fimull
dec
loop
adc
mov
bound
add
cmp
stos
or
inc
daa
mov
lea
loope
jo
mov
shrl
inc
xchg
xor
pop
mov
sti
sbb
cmp
pop
sbb
shrl
mov
sub
out
adc
pop
ljmp
les
pop
mov
enter
xlat
add
inc
and
gs
adc
sub
inc
call
rorb
xchg
pop
subl
mov
cli
adc
loopne
lock
or
and
dec
inc
iret
rcr
or
popa
jne
scas
xchg
test
insl
jb
les
xchg
arpl
inc
inc
mov
cwtl
out
jne
popf
add
ror
jo
jecxz
pop
rcr
lods
lods
pop
sub
aad
dec
es
xchg
add
loopne
dec
add
inc
inc
popa
dec
push
scas
test
sbb
xor
iret
imul
decl
or
fstl
test
and
lock
sub
and
push
cmpsb
adc
faddl
mov
sbb
add
inc
push
inc
inc
icebp
adc
out
mov
les
dec
pushl
sbbb
adc
neg
pusha
push
xchg
addl
push
dec
in
jmp
decl
sbb
dec
lods
stos
mov
mov
hlt
insl
sub
mov
les
les
pop
fs
es
inc
push
push
mov
dec
push
pop
inc
push
pop
jp
push
xor
cs
decl
push
movsl
fbld
iret
pop
test
pop
dec
test
jns
jecxz
sbb
das
out
inc
lcall
xor
inc
add
adcl
xor
stc
movl
addl
adc
xor
xor
aas
js
or
cmp
mov
ficoml
inc
cltd
out
xor
add
arpl
mov
or
cwtl
xlat
push
xchg
cwtl
inc
inc
rcrl
push
in
mov
fs
mov
ret
shrb
call
ret
outsb
jmp
mov
push
push
dec
cmp
add
stos
hlt
enter
ficompl
arpl
lret
int
inc
xchg
cld
inc
mov
movsb
sub
or
fld
insl
stos
sbb
outsb
jbe
cmp
mov
lret
cmpps
mov
mov
cmp
loope
cmp
xor
inc
push
add
and
xchg
xchg
cmp
adc
xchg
adc
mov
jae
cmpsb
mov
popa
jae
xchg
clc
cltd
inc
xor
pop
testb
or
sbb
repz
jb
mov
xchg
popf
push
lock
test
mov
rclb
push
outsb
fs
pop
add
lods
xchg
sarb
ljmp
xor
or
adc
push
jb
push
jp
inc
cli
aas
sub
mov
jmp
cmp
ljmp
into
jecxz
lcall
arpl
insb
shll
xchg
push
adc
or
mov
xor
ret
dec
push
jb
or
add
in
adc
in
inc
fsubs
imul
jae
mov
popf
out
div
jg
les
mov
jmp
mov
or
out
stos
cmp
sbb
jns,pt
dec
push
pop
pop
mov
ss
rcrl
inc
popa
fcomps
xchg
fcom
into
rclb
lods
sub
jge
call
ds
loope
into
adc
ffree
mov
scas
leave
push
lret
ss
jmp
subb
cmpsl
fisubl
shrb
sbb
cmp
push
jae
ss
test
icebp
and
mov
nop
dec
dec
dec
inc
pop
clc
ljmp
push
inc
loopne
loopne
dec
fstl
push
cmp
pop
call
call
leave
stos
pop
int3
std
gs
push
add
movsb
pusha
and
xor
pop
push
inc
push
add
push
dec
out
into
movsl
ljmp
ds
mov
adc
sbb
outsb
and
or
dec
jp
data16
stc
fiaddl
push
cmp
dec
cmp
inc
cmp
lahf
repz
fwait
adc
addr16
popa
and
jne
rcl
push
jo
sti
mov
push
fimuls
in
std
sbb
scas
sar
jg
jecxz
pop
sub
stc
daa
mov
in
arpl
sbb
leave
arpl
push
dec
mov
and
xchg
xor
inc
in
daa
aam
popa
mov
sahf
dec
inc
sbb
into
pop
add
lods
aad
stos
sbb
jg
sub
sub
sub
cmp
pushf
movsl
sti
out
or
aas
xor
push
adc
popa
pop
push
pop
test
or
clc
pop
and
push
imul
scas
ficoml
divl
cwtl
inc
mov
in
lcall
pop
xorb
dec
movsb
and
dec
jo
stc
ret
xchg
ret
std
adc
inc
in
dec
dec
bound
out
popa
mov
cmp
xor
rorl
and
bound
rolb
loop
pop
sub
cmovno
outsl
and
fs
inc
add
je
adc
shl
pop
pop
xchg
movb
cmp
daa
test
scas
cld
mov
imul
inc
std
xchg
inc
dec
adc
addl
mov
jmp
orb
xor
ljmp
mov
ljmp
mov
cmp
mov
ja
mov
push
add
cmp
ja
mov
adc
ret
ret
ja
mov
lock
lret
xchg
movsb
les
enter
jl
ret
out
push
sahf
cmp
jl
mov
ss
cli
decl
inc
rcl
lahf
dec
mov
icebp
push
out
popf
mov
lea
je
das
inc
cmp
push
insb
movsl
dec
pop
xor
jo
fists
xchg
jo
test
sbb
jmp
jmp
out
mov
adc
stc
fs
bound
icebp
add
add
dec
pop
pushl
adc
jne
les
jns
ds
ret
loopne
pop
cli
xchg
push
in
inc
push
outsl
xor
jg
dec
sbbl
add
push
sub
push
dec
fbstp
aad
push
sub
mov
dec
push
dec
add
in
add
ss
dec
icebp
cli
add
rep
push
movsb
inc
cwtl
xor
ret
ja
sbb
dec
outsl
movsb
pop
add
dec
xor
pop
xor
rol
and
push
adc
out
pop
and
push
mov
inc
jecxz
cmp
insb
mov
stos
ret
stos
push
or
filds
pushf
cwtl
mov
dec
add
pop
inc
cmc
and
popa
bound
stc
jg
sub
or
andb
jne
xor
test
and
das
jecxz
adc
and
sti
jp
negl
or
ja
jp
push
xor
lahf
xchg
repnz
lret
cmp
push
gs
mov
inc
mov
push
cmc
add
movsl
pop
and
dec
sbb
lock
mov
sbb
rcrb
push
pop
xchg
xor
mov
nop
icebp
fsubl
sub
sub
cmp
inc
pusha
hlt
mov
jbe
mov
pop
push
mov
inc
jno
pusha
push
std
decl
xor
and
out
push
adc
sub
push
fwait
adc
mov
aam
xor
scas
dec
mov
loopne
ret
in
mov
mov
fdivl
jo
push
addb
mov
out
mov
mov
dec
loopne
lahf
lds
test
nop
out
adc
push
cli
adc
daa
int
scas
arpl
pop
or
add
aam
es
sbb
ret
shlb
fmuls
insb
fs
ss
push
pusha
lods
inc
testl
jmp
push
xor
js
imul
leave
test
push
inc
add
xlat
insb
dec
xchg
cmpsb
mov
push
dec
insl
ja
nop
inc
xor
arpl
jl
stos
fists
daa
aam
popf
cltd
test
xchg
mov
out
icebp
push
mov
sbb
push
inc
lock
and
add
dec
stos
movsb
xchg
pusha
push
push
inc
std
fcoms
xchg
and
loope
pop
xor
enter
fwait
in
pop
pop
pop
add
jb
sbb
orl
push
pop
rclb
or
das
call
ja
cmp
pop
ret
inc
mov
addr16
fldl
sub
es
pushf
pop
and
inc
mov
xchg
xor
addl
loop
push
xchg
outsl
xchg
dec
outsl
sub
mov
je
out
sub
rclb
das
pop
pop
add
or
push
popf
sti
adc
mov
mov
notl
call
inc
cli
inc
pop
inc
xchg
xor
jns
adc
lea
cmpsb
xor
mov
add
sbbl
mov
and
sbbl
push
add
add
mov
add
pop
mov
out
push
movb
mov
lret
dec
pop
add
xor
jno
sub
mov
addl
sub
and
das
andl
cltd
dec
mov
sarb
shlb
adc
shlb
and
adc
enter
jp
pop
jno
sbb
jecxz
stc
scas
cwtl
repz
pop
or
icebp
ret
jl
ret
rolb
lods
jb
inc
pop
inc
scas
pushf
xorl
lcall
inc
sub
call
icebp
shrb
ret
jnp
jecxz
cs
xchg
xchg
pop
xlat
adc
cmp
or
jmp
rcrl
inc
and
mov
sub
push
cwtl
push
cmpsb
ljmp
aas
shrl
cmc
cmp
sbb
and
imull
lcall
in
push
cmpsl
je
sub
add
xlat
xchg
dec
inc
fisubrl
jns
sub
ret
inc
sub
mov
pop
xor
add
jns
add
xchg
dec
xchg
sbb
loop
out
rcll
adc
imul
xchg
mov
sbb
xor
or
lods
dec
int3
cld
jae
ss
mov
mov
les
jne
enter
dec
cld
dec
adc
addr16
add
inc
fistpl
jb
js
push
mov
push
and
dec
push
lock
cmpsl
cmp
pop
imul
cs
popa
bound
loope
mov
xchg
outsb
pop
test
sub
push
ss
test
mov
sub
push
inc
movsb
std
add
mov
add
cmp
ljmp
or
mov
jmp
jo
jle
add
pop
lds
test
dec
ret
cld
fistpl
mov
dec
inc
add
lods
pop
orl
pop
test
mov
push
insb
dec
xchg
ljmp
inc
std
or
incl
push
adc
cwtl
dec
cmpsb
call
dec
test
divb
std
push
fdivs
xor
ss
inc
out
imul
mov
pop
leave
gs
jp
jmp
sub
fdivs
xchg
cmc
cs
and
dec
sti
push
cmp
or
inc
push
mov
and
mov
dec
fistl
fnsave
push
mov
pop
insl
mov
mov
ret
jl
fmuls
and
in
decl
mov
xor
cmpsl
hlt
test
movsb
or
dec
xor
punpckldq
mov
popw
inc
repnz
mov
xor
aaa
popa
xchg
pop
mov
inc
and
out
scas
jmp
and
xchg
dec
sbb
xor
push
and
fstl
fcmovne
xchg
int
mov
add
mov
inc
sbb
repz
sub
xchg
popf
das
cmp
rclb
popa
add
test
or
jl
jne
sbb
mov
daa
mov
lock
mov
lods
mov
jnp
add
ret
es
xchg
jmp
shll
loope
add
daa
repnz
push
out
std
cmp
and
aam
push
or
popa
dec
icebp
xor
push
cmp
dec
faddl
orl
mov
repnz
mov
xchg
ret
cmpsl
sub
adc
jge
or
std
inc
mov
jb
das
mov
jl
leave
add
add
aas
rcrl
dec
popa
leave
ret
jmp
out
outsb
lock
push
pop
cmp
and
push
repz
js
xor
adc
in
cli
fdivs
jo
add
mov
movl
or
inc
sahf
jno
pop
arpl
adc
test
aaa
jecxz
and
xchg
loopne
add
sbbb
sbb
add
inc
dec
mov
add
fadd
clc
sbb
ss
or
inc
or
stos
mov
add
sub
movsl
mov
xor
and
or
fs
pusha
dec
andb
cld
inc
add
je
fwait
add
cmp
rolb
leave
test
outsl
push
mov
cmp
add
ljmp
nop
inc
xrelease
loopne
mov
cmp
xor
mov
daa
dec
mov
and
test
sbb
sub
sbb
lcall
dec
xchg
mov
sbb
or
popa
fldt
and
or
shlb
push
mov
movsb
jno
inc
stos
sti
or
cmp
icebp
inc
jbe
mov
push
cli
call
or
cmp
pop
adc
mov
int
xor
and
cli
and
jne
aas
xor
xchg
imull
or
sbb
sarl
pop
xor
sbb
lods
in
rclb
dec
les
xchg
imul
jo
push
lsl
lahf
mov
adc
or
int
lods
inc
dec
ss
sbb
sbb
call
insl
arpl
xor
daa
cs
cmp
adc
push
fiadds
ret
nop
sbb
xchg
repnz
jg
pop
int
add
xchg
ljmp
roll
pop
aaa
ret
xchg
xor
test
data16
shlb
jl
inc
scas
outsb
shlb
popa
addb
add
ljmp
push
xchg
ds
lds
xor
dec
js
inc
xchg
cmp
jb
ss
sub
push
shr
mov
inc
or
inc
shlb
pusha
add
add
inc
loopne
dec
movsb
aas
sbb
mov
or
es
pop
pop
mov
std
push
cmpsb
pcmpeqb
fistl
sahf
sub
loope
lahf
cmp
xchg
loope
jmp
add
adc
jb
in
push
notb
hlt
mov
push
inc
test
psraw
push
xor
dec
cmp
mov
call
dec
insl
dec
mov
sbb
or
push
pusha
or
add
movsb
adc
out
popa
ljmp
mov
or
inc
leave
pop
and
incl
loop
rclb
inc
jne
mov
cmc
push
xchg
add
push
push
push
lahf
dec
std
ss
outsl
outsl
or
pop
rol
push
jae
push
xor
cs
dec
push
call
test
pop
mov
andb
add
in
repz
mov
rcrl
iret
call
dec
jno
out
xorl
jb
loop
or
imul
push
push
dec
call
mov
dec
js
imul
cltd
push
loopne
scas
je
mov
mov
xor
lcall
fcoml
jge
stos
add
test
pop
dec
loop
xor
bound
mov
ss
ret
fs
adc
pop
inc
jns
jb
ret
push
cs
lcall
decl
jns
cmp
fistl
cmc
aad
lret
or
es
mov
std
stc
add
push
imul
push
roll
sbb
mov
loope
xchg
ja
popf
mov
test
xor
xor
xor
xorl
cs
pop
ss
add
out
les
jno
arpl
cld
mov
flds
int3
repnz
cmp
nop
mov
es
or
add
call
loope
mov
xchg
xor
dec
fisttpl
push
fadds
inc
lahf
mov
adc
lahf
ret
loop
dec
mov
xchg
paddb
out
push
dec
sub
xchg
mov
or
int3
mov
mov
dec
shlb
lock
add
mov
add
nop
lods
fsubp
push
cld
incl
push
rcl
sbb
sub
push
test
add
fbstp
jp
jp
sbb
insl
push
mov
test
je
dec
insl
popa
and
jbe
decl
adc
inc
cmp
add
inc
mov
aam
lods
jg
out
aaa
fs
lret
insb
sahf
add
cmp
inc
and
lret
rcl
pop
sbb
dec
xor
decl
ss
outsb
fidivrs
and
clc
cmpsl
push
outsb
push
pop
bound
xor
xchg
shlb
xor
push
inc
mov
xchg
push
inc
dec
data16
ljmp
incl
dec
dec
stos
pop
das
pop
mov
jmp
mov
xor
es
adc
sub
loope
notb
inc
lds
dec
dec
addr16
pop
jl
orl
pop
push
sarb
cmc
push
insb
aaa
mov
aam
adc
inc
adc
push
dec
push
js
in
pop
add
push
lods
pop
sti
sub
or
jb
xchg
cmp
fisttpl
dec
stc
data16
pop
js
shrb
inc
shrb
lret
mov
out
xor
push
je
mov
inc
ljmp
add
movsl
inc
ret
jbe
inc
inc
inc
out
xor
inc
push
lods
rorl
je
push
lods
xchg
imul
outsb
dec
lcall
insb
hlt
outsb
sar
cli
enter
pop
mov
mov
lcall
push
rolb
bound
add
mov
test
sbb
or
adc
cmp
push
int
clc
adc
hlt
divl
jo
xor
mov
data16
imul
ljmp
or
xchg
add
add
fldl
jmp
sti
adc
inc
jne
jl
mov
shl
test
mov
insb
inc
or
aaa
dec
sub
shlb
js
adc
adc
cld
push
fdivr
arpl
out
adc
xchg
jo
cmp
xchg
adc
sbbb
adc
jp
sbb
hlt
lods
add
and
flds
pop
mov
icebp
add
lcall
cwtl
push
jmp
std
push
shlb
imul
repz
dec
cmp
sbb
mov
popa
imul
pushf
in
xor
push
mov
je
cs
push
ljmp
ficoms
push
mov
mov
dec
icebp
cli
push
imul
mov
mov
arpl
jbe
adc
sub
pop
fistpll
pop
mov
xchg
test
cmp
dec
dec
inc
data16
xchg
cltd
push
add
sbb
call
xor
push
dec
push
xor
and
fmuls
push
push
pop
js
inc
imul
lcall
repz
jns
pop
dec
cltd
loope
dec
inc
mov
add
imul
xor
or
test
pop
add
aaa
mov
cwtl
pop
push
dec
gs
xchg
into
mov
call
sahf
xor
xchg
xchg
cmp
and
aas
daa
inc
pop
or
pusha
call
dec
ljmp
ret
push
jne
clc
dec
adc
dec
movb
pop
setle
or
ljmp
test
sub
jp
in
test
mov
int3
mov
jle
pop
lahf
lods
or
ret
and
add
mov
mov
jle
push
fs
jo
shlb
inc
xor
fdivl
into
pop
cwtl
js
ljmp
add
cli
jmp
bound
jno
or
jecxz
inc
bound
in
inc
orl
sti
ret
push
jmp
leave
jno
test
dec
inc
dec
cltd
adc
enter
ss
xor
cmp
cmpsb
xorl
and
or
dec
sarb
mov
mov
int3
inc
std
sti
inc
or
add
adc
xlat
xor
adc
dec
sbb
movsl
fildll
outsb
add
dec
or
subb
jg
les
mov
fimull
gs
mov
inc
cld
sbb
push
pop
out
push
inc
mov
test
pusha
mov
jmp
xchg
inc
orb
pop
pop
outsb
jb
dec
inc
les
leave
aad
clc
incl
add
sub
ss
pop
cmc
sbb
pop
xchg
leave
mov
sbb
xlat
add
and
push
dec
outsl
ret
lcall
insl
jae
dec
mov
mov
bound
adc
shll
push
cmp
pushl
fstps
movsb
lock
pop
sarl
sub
lods
ficoms
cld
aam
adc
incl
sub
cmp
popf
addr16
test
mov
pop
inc
dec
loopne
aaa
imul
inc
xor
filds
jb
pop
jle
jb
inc
xor
pushl
mov
ja
cmp
outsb
aad
ljmp
or
shrb
sub
jle
pop
mov
dec
shlb
mov
jns
jg
add
jmp
in
pop
mov
add
push
movsl
test
pop
std
cli
jno
lock
in
test
and
jmp
jle
or
xchg
pop
ljmp
std
outsb
push
push
iret
inc
add
lcall
test
hlt
pop
xchg
xor
sbb
mov
add
inc
dec
addr16
in
sti
or
mov
test
call
adc
insb
jg
push
or
lods
inc
adc
je,pt
leave
sbbb
xor
push
aad
push
dec
adc
jp
pop
sbbb
add
push
inc
mov
outsb
dec
jl
cmp
out
and
xchg
in
dec
add
mov
pop
mov
inc
out
notb
cli
jb
pop
mov
mov
add
mov
pop
mov
jb
stos
pop
mov
stc
dec
cmp
jne
xor
pop
mov
data16
mov
inc
jg
xchg
cmp
out
fsub
sbb
mov
sbb
xorl
and
sarl
mov
shlb
mov
dec
push
inc
jne
add
push
sahf
cmp
xchg
or
into
fcmovbe
ja
aam
ljmp
push
lods
roll
mov
daa
ja
dec
fldl
mov
inc
add
push
push
pop
jno
push
movsb
outsl
das
xchg
pop
lods
dec
dec
outsl
xchg
js
outsl
jbe
fdiv
sbb
dec
cs
pusha
jbe
inc
mov
mov
outsl
inc
aaa
in
inc
pop
sbb
inc
dec
out
arpl
call
shlb
and
sti
or
jle
lret
xchg
pop
cs
pop
in
cmpsb
adc
cmp
bound
adc
dec
lock
push
sub
mov
imul
sub
ret
inc
cmc
pushf
push
fcompl
mov
aaa
inc
push
popa
xchg
nop
cmp
cmp
icebp
ss
adc
jb
popa
inc
insb
jo
jbe
xchg
aaa
es
hlt
addr16
inc
cli
sbb
cmp
dec
xor
jbe
push
inc
out
jo
dec
cld
test
mov
mov
push
sub
cmp
mov
popf
stc
int3
xor
sahf
or
and
jp
repnz
push
sbb
sar
decl
dec
and
sahf
mov
mov
inc
mov
adcb
xor
jo
inc
dec
pusha
cmpb
scas
imul
mov
adc
mov
sbb
or
jmp
xor
jecxz
inc
jmp
dec
inc
in
add
addr16
sbb
pop
xchg
add
jp
dec
iret
adc
mov
and
mov
mov
xor
inc
jae
ss
inc
gs
cmp
pop
cltd
push
das
mov
jae
rcll
push
cmp
lock
fists
popa
shlb
mov
ds
es
pop
push
jle
xor
xor
inc
inc
imul
lods
inc
test
or
insl
scas
ljmp
jl
push
outsb
sbb
push
push
mov
dec
adc
lcall
dec
jnp
mov
js
dec
xor
je
add
jg
add
mov
mov
lock
pushl
dec
mov
jae
mov
mov
mov
jb
cmpsb
inc
adc
push
mov
push
lods
and
dec
testb
cmp
jge
imul
hlt
cli
sti
dec
mov
push
icebp
mov
push
xor
jg
push
int
inc
sbb
jge
and
lcall
xor
test
cmp
not
add
les
xor
push
imul
inc
jae
inc
jae
bound
dec
cmpsb
pop
xlat
fs
cs
xor
addr16
sub
mov
and
fists
es
aas
out
loope
rcrl
mov
push
jp
pusha
cwtl
test
ljmp
bound
inc
push
push
mov
test
mov
cmp
call
or
mov
add
mov
incl
inc
mov
jmp
mov
sub
xor
or
dec
insb
add
push
pop
adc
ret
mov
mov
fs
sub
out
push
pop
jle
ljmp
jns
mov
rol
add
inc
fdivrl
mov
lods
sub
aaa
push
pop
push
pop
jne
stos
bound
push
dec
xchg
xchg
pop
add
fsubp
pop
aaa
cmc
adc
insb
cwtl
arpl
and
pushl
hlt
out
push
gs
lret
dec
xor
fcomip
xchg
push
sub
repnz
and
jbe
xor
inc
js
push
cmp
lock
psrad
into
add
or
dec
jecxz
and
push
cmp
insl
mov
loope
push
mov
push
jmp
add
add
sbb
inc
dec
movsl
xor
daa
sub
dec
cs
pop
hlt
xor
dec
popa
mov
jle
adc
push
jne
imul
cmpsb
xor
repz
sub
jbe
add
mov
mov
shlb
in
inc
xchg
call
sbb
jns
xchg
sbb
cwtl
push
xor
and
inc
xchg
lret
and
jo
ja
jne
xor
jge
lcall
orb
adcb
test
and
cmp
lods
mov
ffree
or
adc
adc
movsb
xchg
mov
add
stc
add
xor
add
arpl
fbld
xor
push
pop
mov
outsb
mov
leave
das
testl
and
xor
out
push
adc
mov
les
adc
ds
mov
dec
push
rorb
add
je
test
lea
in
sub
imul
jg
xchg
dec
push
or
adc
je
in
push
arpl
add
add
ss
jb
addr16
xchg
push
dec
loope
lods
sbb
jo
jno
into
adc
pop
daa
mov
mov
sbb
in
clc
test
push
test
clc
push
mov
clc
in
out
testl
jecxz
add
mov
lcall
mov
xlat
push
jecxz
adc
movsb
lods
dec
das
jp
hlt
inc
sahf
push
mov
add
inc
jb
and
int3
mov
push
testb
jp
insl
dec
push
hlt
icebp
icebp
movb
sub
xchg
lock
mov
mov
sbb
andl
ds
cmp
cs
adc
sbb
in
pop
faddl
ss
and
fucom
push
ret
dec
xchg
xchg
aas
int
add
dec
mov
ret
rclb
insl
sbb
xor
sub
mov
sub
or
cs
inc
xor
insb
xchg
ja
xor
xor
inc
inc
rcrb
mov
out
imul
pusha
xor
in
add
mov
shlb
sub
inc
adc
push
and
cmc
sub
inc
scas
and
and
xor
pop
mov
cmp
sahf
dec
sub
sar
inc
pop
ds
xchg
lock
or
popf
ds
dec
stc
aad
test
push
lret
dec
push
hlt
pop
sahf
sub
and
orl
aad
mov
mov
or
fisttps
add
xlat
sbb
call
int
in
push
lret
pop
xchg
jnp
lcall
fiadds
insb
jo
enter
daa
or
sbb
icebp
ffree
daa
scas
cmp
push
or
hlt
push
push
lret
xor
mov
lcall
pop
lock
outsb
addl
jne
dec
xchg
insl
es
sub
ss
mov
xchg
mov
push
ljmp
push
pop
jb
cli
jmp
shlb
xor
jg
push
xchg
dec
js
enter
sub
inc
xor
cmpsl
dec
adc
dec
sbb
pop
ret
cmc
jbe
cld
fadds
push
mov
lcall
xor
lret
inc
push
inc
insb
add
push
push
push
mov
xchg
fidivl
push
add
dec
jbe
jb
cmp
pop
or
ret
gs
std
xor
add
fadds
add
and
and
fwait
cmovne
push
xor
dec
pushf
shlb
push
mov
mov
mov
jo
sub
mov
clc
xlat
orb
repz
pop
adc
data16
hlt
std
decb
lods
std
cltd
or
add
dec
mov
outsb
test
fisubrl
out
outsl
ss
ja
push
ss
out
js
jmp
lea
out
mov
rclb
test
call
add
pop
mulb
cmp
add
lock
inc
mov
outsl
fs
mov
inc
dec
mov
ljmp
sbb
push
rorl
add
mov
xchg
push
lods
repnz
jg
lret
jg
mul
adc
adc
out
push
mov
std
incl
sti
aam
xor
jmp
out
jp
lret
sbb
mov
xchg
pop
ss
sbb
je
pusha
and
fcom
jmp
js
cmp
lahf
sbb
outsl
lret
xchg
inc
cmpsb
roll
adc
pop
mov
xchg
incl
in
out
rcrl
jecxz
inc
loope
xchg
pop
add
scas
scas
xor
and
mov
and
xchg
push
sub
leave
pop
sub
push
mov
rcll
cmp
cld
push
inc
lds
shl
cmp
or
xor
sub
aam
jne
aam
dec
arpl
sub
add
lret
sub
sbb
insb
sbb
sbb
cmp
cmc
sub
pop
int3
fistl
jb
and
mov
out
dec
mov
pop
inc
jb
shl
das
xchg
xor
inc
xchg
popf
aad
pop
insb
lret
inc
push
mov
jbe
leave
push
jmp
mov
cmp
inc
dec
add
sbb
lock
shll
and
or
pop
add
leave
insl
mov
sbb
jo
clc
gs
or
bswap
rolb
pushf
lds
inc
lahf
mov
lahf
mov
repnz
xchg
cwtl
iret
lods
mov
pop
mov
lahf
push
insl
loopne
std
push
jmp
es
mov
cmp
lds
pop
mov
lahf
dec
aaa
xchg
fnstsw
mov
incl
call
cmp
adc
adc
outsl
shr
dec
adc
int3
mov
jae
lock
repnz
and
xchg
xadd
push
mov
pop
and
inc
or
in
outsb
push
dec
roll
mov
bound
inc
mov
jbe
adc
xchg
roll
dec
fdivrp
jmp
sbb
lahf
and
aam
mov
mov
lret
sbb
push
aas
rol
mov
fdivrs
sti
and
aas
lock
icebp
inc
test
inc
pop
jbe
lret
pop
loope
scas
loope
mov
push
dec
cmp
fwait
mov
cmpsl
add
jl
push
cwtl
scas
dec
inc
dec
lods
mov
dec
xchg
push
jns
push
sub
cmpsl
and
cmp
imul
popf
arpl
mov
xlat
sub
add
mov
ljmp
inc
vcomiss
ljmp
testl
popa
cmp
add
xchg
scas
push
mov
ja
inc
enter
out
int3
aaa
pop
push
and
push
test
aam
pop
fbstp
push
xor
je
fucomp
es
mov
mov
sub
xchg
push
and
jge
nop
int3
orb
inc
pop
icebp
roll
xor
and
loop
mov
xchg
pop
bound
jecxz
int3
or
dec
push
loopne
jae
mov
clc
xor
subl
leave
daa
arpl
or
and
mov
stos
mov
loop
and
cli
scas
ss
cmpsl
or
rclb
jo
adc
aaa
or
popa
push
sbb
ret
mov
jl
dec
jo
dec
sub
pop
xlat
subl
xchg
outsb
lds
repz
aad
call
pusha
pop
push
push
dec
mov
and
mov
adc
sbb
dec
add
popf
and
dec
test
and
in
push
dec
int3
push
daa
aas
add
addr16
in
frstor
in
aad
sbb
and
xchg
loopne
cld
xchg
neg
cmp
popl
mov
mov
call
das
adcb
and
and
xchg
or
cltd
repz
cmpsb
jnp
movzbl
incl
sub
lods
fpatan
and
sbb
inc
pop
push
lods
xor
iret
fwait
outsl
push
pop
inc
enter
or
shlb
pushf
mov
fwait
inc
mov
mov
ss
inc
push
push
inc
outsl
cmc
dec
cmp
ljmp
push
dec
adcb
jo
add
xor
lret
pop
scas
test
sahf
shl
xchg
xor
call
stc
ret
push
ret
pusha
ret
inc
outsb
jae
incb
jo
sbb
dec
push
inc
push
pop
push
mov
ret
push
jae
inc
pop
fdivrs
out
pop
push
dec
jecxz
das
movsl
sub
lret
enter
adc
test
dec
jae
jo
lcall
scas
lea
xchg
fwait
jecxz
fcmovbe
jne
dec
sub
in
xchg
cmp
insb
jg
cwtl
rcrb
sahf
push
aas
mov
lock
xor
cmc
jo
mov
push
loopne
scas
push
push
lcall
aad
les
xor
popf
inc
jmp
stos
mov
es
add
shll
inc
push
push
cmp
ret
adc
leave
adc
and
add
pop
mov
xchg
leave
xorb
mov
imul
dec
cmp
rcll
pop
pop
xchg
add
sub
in
nop
add
fiadds
pop
imul
ss
cmpsb
dec
lcall
jne
mov
sub
sub
arpl
mov
sbb
inc
jle
dec
popf
inc
lahf
fildll
int
out
ss
add
cltd
nop
sbb
arpl
fbld
sub
icebp
add
dec
push
add
xor
test
loopne
jecxz
adc
xchg
push
xor
xchg
cltd
cmc
dec
aaa
xor
in
pop
pusha
mov
es
cmp
pop
fidivl
mov
and
dec
rcrl
or
mov
insb
xchg
cld
test
pusha
cmc
outsb
cmp
or
pop
dec
out
and
scas
cmp
push
jns
hlt
cmp
and
adcl
popl
lods
test
into
sub
call
inc
add
inc
sbb
xchg
fwait
int
hlt
out
call
xor
sbb
push
scas
test
addl
arpl
dec
xchg
repnz
sarb
fstpt
xchg
into
and
movsl
leave
lahf
sbb
imul
out
jbe
add
inc
or
sbb
push
movsl
sub
add
fstpl
jno
push
pushf
inc
movsb
xchg
movsl
inc
repnz
sbb
loop
cmp
xchg
xorb
and
adc
insl
mov
xor
aas
int
inc
test
jmp
add
sub
fisttpll
dec
push
daa
xchg
hlt
mov
flds
and
jb
sub
lock
in
jo
lret
dec
stos
sarl
adc
mov
cli
movlps
test
pop
shlb
stos
push
inc
cmp
pop
shrl
lcall
arpl
jo
pop
mov
es
mov
lock
push
mov
ret
ret
jecxz
fadds
pop
pop
nop
cmpsb
mov
xor
cmp
loope
inc
test
shl
cmp
adc
sbb
icebp
xor
pop
mov
mov
or
adc
icebp
popf
rcll
and
inc
psubw
mov
and
loopne
push
or
ja
and
jns
mov
nop
jno
js
inc
inc
call
loope
into
jg
add
outsl
test
jbe
rorb
pusha
cmp
cmpsl
call
ljmp
xor
add
ljmp
xchg
enter
dec
cltd
loope
gs
ja
dec
test
pop
push
cmp
push
mov
imul
sarl
push
mov
xor
sub
push
jg
xorb
fs
mov
cmp
sbb
aam
inc
dec
push
dec
mov
pop
add
std
add
pop
push
dec
mov
ret
jae
dec
jno
xlat
lahf
jbe
mov
pop
inc
jno
arpl
out
push
popa
xor
add
push
aaa
shlb
mull
aam
clc
cmp
lods
in
push
xor
lods
dec
sbb
sub
and
sbb
addr16
stos
outsl
ljmp
inc
xor
ss
sbb
push
xlat
xchg
cmp
les
stc
jle
cmp
dec
push
bound
mov
jle
mov
jno
and
push
pop
lock
das
jg
or
pop
loope
add
stos
push
dec
inc
add
push
dec
inc
js
ret
loopne
sar
cmp
push
outsb
imul
sahf
inc
call
push
push
pop
js
dec
add
sbb
imul
mov
mov
jecxz
lcall
roll
pop
daa
and
add
jo
movsl
imul
dec
xchg
jb
pop
xchg
fidivl
outsb
inc
sub
lret
ja
add
mov
fs
decl
mov
xchg
cmpsl
lcall
ljmp
fcmovnb
inc
scas
mov
jge
jb
push
out
mov
mov
inc
jns
xchg
xchg
rorb
xchg
inc
shll
shlb
loope
cmp
jge
push
jno
call
es
call
add
cwtl
mov
dec
insl
in
push
or
pushf
iret
add
pop
rcl
and
lods
sub
into
jmp
fs
mulb
mov
and
adc
pop
iret
cmp
inc
leave
loop
or
sbb
or
mov
and
sbb
and
pop
movb
das
ljmp
sbb
leave
or
lods
and
add
iret
lock
mov
lret
arpl
sub
or
xchg
xor
jae
push
imul
andl
mov
clc
mov
or
stos
push
and
dec
xchg
sti
push
sub
pop
jno
imul
repnz
push
iret
dec
or
inc
xor
and
add
xchg
decl
dec
jo
jns
or
popa
scas
ss
fs
xor
push
test
push
sub
pop
sbb
pop
push
xor
sbb
dec
adc
xchg
mov
lods
mov
adc
in
jle
adc
mov
shll
push
mov
pop
movsl
push
dec
in
popf
fstl
push
jne
lret
add
or
rolb
dec
ljmp
push
or
addb
leave
xchg
jge
and
and
mov
sbb
jecxz
sbb
leave
adc
stos
mov
push
cmpsb
add
jns
ret
xchg
xlat
push
add
inc
dec
jns
mov
sbb
popf
sub
sqrtps
iret
ret
in
inc
mov
add
and
and
and
inc
add
jno
insl
je
out
mov
fisubrs
xchg
in
and
incl
rcrl
or
sbbb
cwtl
loope
jb
sbb
push
scas
mov
pop
jno,pt
dec
inc
jecxz
jl
add
jo
dec
jne
jno
outsl
ljmp
xor
sub
icebp
and
add
jbe
ja
out
or
mov
push
or
or
icebp
push
sbb
mov
push
jbe
iret
aam
adc
cmp
clc
push
jo
addr16
add
mov
popl
insb
dec
sbb
addb
push
cmp
sub
jo
dec
add
inc
jmp
sbb
cld
shll
lcall
ja
pop
lock
add
sbb
push
jg
mov
pop
ret
inc
jbe
jno
add
in
in
jo
ret
mov
addb
cmpb
xlat
add
xchg
mov
inc
dec
inc
push
inc
xor
inc
lock
pop
fdiv
add
filds
adc
xchg
cwtl
outsb
jae
pusha
and
jl
inc
add
sbb
popa
add
xlat
sub
out
xor
push
adc
sub
sbb
xchg
push
jmp
add
dec
dec
jo
nop
sarl
mov
imul
and
inc
push
xor
addr16
jbe
movl
pop
sbb
add
cmp
add
dec
dec
pop
jg
add
or
or
shrl
mov
lret
sbb
or
mov
mov
daa
leave
rol
and
lsl
movsb
test
test
push
insl
and
push
dec
mulb
dec
pop
je
jno
dec
dec
push
ljmp
dec
push
lock
inc
fmuls
pop
scas
das
xlat
mov
rcrl
mov
cld
in
call
hlt
cmp
outsl
cmpsl
lret
jmp
and
dec
call
rolb
xlat
add
jns
jbe
adc
push
scas
lea
adc
sub
fst
outsl
push
xor
scas
or
addr16
test
out
mov
or
mov
movsl
pop
sub
pshufw
dec
push
jno
movb
mov
xor
xlat
dec
notb
xor
inc
xor
hlt
xchg
mov
inc
sbb
push
outsb
push
in
jg
xor
sub
stos
sub
mov
lahf
xchg
cs
mov
push
nop
dec
fidivrs
enter
xor
sahf
add
dec
inc
mov
insl
ja
pushf
mov
filds
mov
mov
dec
push
scas
cmp
pop
ret
loopne
cmp
push
inc
dec
sub
cltd
fs
movb
add
dec
push
fidivl
sbb
into
sar
idiv
sbbb
add
pop
decl
push
icebp
ja
out
ret
imul
je
xchg
xchg
ret
in
les
mov
mov
dec
jl
add
adc
dec
leave
add
mov
dec
das
mov
push
loop
push
arpl
incl
push
aad
loop
jp
jnp
out
fs
or
in
xor
add
inc
fs
add
fisubs
jo
test
fmuls
call
loopne
push
push
ret
int3
inc
or
dec
mov
int
addr16
nop
jmp
inc
insl
xor
dec
xchg
adc
ret
popf
lds
aaa
jb
xor
dec
inc
ret
mov
insb
shlb
xchg
lock
sub
je
pop
fsubs
add
inc
into
fisttps
popa
pop
and
imul
jg
dec
cli
sarl
test
cmp
sbb
pop
jno
jp
fdivrl
icebp
call
les
adc
out
shl
fcomps
jge
push
mov
jb
sbb
mov
ret
outsb
mull
out
iret
mov
dec
pop
or
xchg
movsb
dec
dec
ljmp
jmp
scas
adc
sarl
xchg
and
ljmp
loope
lret
ds
inc
loop
je
jns
lahf
jp
ja
addr16
push
inc
pushf
cmpsb
cwtl
sarb
xchg
push
imul
aaa
imul
cmp
mov
xchg
test
jle
fmulp
xchg
test
inc
mov
cmp
int
jmp
test
mov
addl
mov
xchg
or
lock
js
inc
sbb
push
into
fwait
cmp
push
clc
aas
and
jle
mov
cld
add
sbb
imul
aad
xchg
adc
adc
lds
aam
rol
fidivrs
pop
popa
xor
imul
in
aas
insl
cltd
mov
inc
rcrl
stc
inc
mov
xor
mov
idiv
fs
jbe
and
push
cmpw
leave
jae
and
inc
sbb
mov
repz
pop
xchg
je
add
add
pop
movsb
decl
xchg
xchg
mov
sbbb
cmpsl
in
andb
gs
mov
sub
add
lods
pop
frstor
std
adc
neg
xchg
adc
or
inc
cs
adc
mov
dec
push
scas
xchg
add
pop
push
add
stc
or
xchg
sar
call
xor
sbb
jae
js
outsl
sub
rolb
aam
and
push
dec
cmpb
push
fisubrs
or
das
out
mov
xchg
adc
mov
jo
in
add
cmp
fstps
jne
pop
mov
xor
or
xor
iret
rorb
js
dec
push
jno
out
push
cld
inc
dec
ljmp
add
xchg
inc
imul
or
ret
add
mov
fisubrs
mov
push
push
cltd
js
lret
and
ds
nop
jno
adc
add
das
clc
inc
insb
inc
cmp
push
pop
xchg
push
xchg
inc
fs
enter
in
pop
lahf
or
call
dec
ds
fs
popa
dec
cmp
mov
mov
sub
pop
leave
sarb
jle
mov
fcmovb
sbb
push
inc
lea
inc
outsb
lret
dec
adc
and
push
pusha
and
repnz
adc
cmp
mov
add
jl
test
lcall
mov
ss
xor
cmp
and
adc
mov
ja
sbb
lods
cmp
add
sbb
adc
and
pop
and
dec
ljmp
adc
mov
sbb
test
movsb
adc
sub
push
inc
fildll
addl
xchg
mov
add
pop
leave
inc
pop
mov
test
arpl
jo
xchg
and
add
sbb
add
and
jns
mov
cmp
ds
je
es
mov
mov
mov
stos
or
cmp
pop
adc
add
mov
xchg
and
pop
je
and
sbbl
mov
cmp
mov
xorb
jb
or
je
jno
adc
cmp
add
stc
xchg
les
add
daa
fs
or
xor
xchg
push
ljmp
es
in
movsl
add
lock
scas
insl
aaa
jbe
add
sbb
test
sbb
scas
jnp
xor
hlt
arpl
shll
stos
xchg
jae
outsb
mov
fxch
enter
lcall
jmp
push
pop
push
lret
mov
mov
xor
andb
jne
lods
and
jns
xchg
adc
sbb
andb
std
out
xchg
pop
cmc
fwait
mov
pop
orb
dec
pop
xchg
or
pop
mov
add
mov
adc
sbb
flds
lods
lods
mov
xchg
daa
rol
mov
test
sbb
gs
push
inc
les
mov
push
fmulp
xchg
fmuls
dec
add
int
dec
not
mov
sysret
xchg
jmp
jno
pop
movsl
sbb
pushf
dec
and
loope
add
push
lods
orl
lcall
inc
in
lea
subb
xor
rclb
pop
fildll
dec
fwait
das
jle
addl
add
cmp
sbb
and
jne
xchg
pop
loopne
and
sbb
mov
sbb
dec
inc
push
ds
ss
lock
test
mov
ret
dec
rclb
sbb
add
cltd
and
xorb
pop
jno
mov
loopne
or
das
xchg
xorl
jmp
clc
push
or
xor
lock
or
mov
movsb
xchg
incb
stc
push
sahf
mov
jp
repnz
es
add
mov
inc
jbe
mov
jne
nop
sub
jmp
sbb
xor
or
cmp
cmp
arpl
sti
in
roll
rolb
out
or
jecxz
xchg
daa
adcl
clc
inc
cmp
ja
and
leave
xor
testb
push
repnz
stc
and
je
loope
mov
sub
imul
fimuls
or
xchg
je
mov
add
pop
cmc
mov
push
adc
mov
sub
stc
inc
sub
arpl
test
mov
xlat
out
scas
cmp
test
jge
inc
mov
add
fsubr
cmp
cmp
int
data16
popa
int3
jle
mov
and
dec
dec
mov
repnz
xor
jbe
bound
add
data16
mov
arpl
imul
insb
loope
push
outsl
insl
xchg
xchg
push
mov
insl
xor
call
movsl
ds
cmp
or
insl
insb
add
xchg
jb
sar
jmp
loope
push
ret
pop
cmp
cmpsl
mov
jns
jle
outsl
push
add
jp
xor
ss
inc
aaa
inc
in
cmp
aaa
fadds
push
sbb
insb
xor
inc
sub
ret
call
dec
cltd
icebp
sbb
incl
clc
xchg
push
pop
sub
or
test
push
lds
movsl
stc
lret
mov
and
lcall
aad
jo
pop
xchg
pop
fidivrl
stos
cmc
mov
out
jge
sub
pushf
and
adcl
jno
insl
fstpt
ror
mov
jg
clc
jp
push
push
dec
call
mov
xor
inc
add
lods
scas
dec
sub
mov
cli
or
stc
cli
pop
jge
mov
cmp
notb
mov
bound
call
mov
fisubl
pusha
cmp
mov
or
push
jle
outsl
ljmp
imul
iret
and
adc
jp
xchg
mov
or
std
divb
addl
xchg
mov
call
push
cmp
dec
aas
lock
in
mov
aaa
sub
or
in
mov
sub
push
jbe
in
repz
mov
xchg
push
or
jmp
add
jbe
in
mov
cmp
push
inc
xor
dec
sub
jo
jo
clc
xchg
cli
inc
xor
pop
ret
push
sar
fildll
cld
lret
pop
mov
mov
lock
add
mov
aad
nop
sbb
shll
and
sbb
addb
test
xor
cwtl
stc
fwait
add
rolb
inc
sub
cltd
jb
pop
subl
inc
jne
jmp
rclb
adc
mov
orb
arpl
cmp
or
and
adc
add
xor
bound
mov
xor
add
xor
mov
push
mov
or
stos
push
dec
lahf
out
lods
adc
ret
xchg
jl
add
inc
mov
mov
cmp
push
pop
mov
popa
jb
cmpsb
mov
adc
rolb
test
adc
add
and
adc
add
xor
repnz
xchg
cmp
and
dec
sbb
xchg
or
adc
add
jb
mov
dec
sub
iret
ret
or
cmpl
inc
xor
test
mov
adc
pop
xchg
test
inc
stos
sbb
mov
mov
aas
and
pop
and
or
aaa
add
mov
cmp
add
call
mov
push
leave
mov
adcb
fldcw
add
and
rol
int
mov
mov
jl
cmc
arpl
sbb
addr16
fmuls
push
fistpl
mov
jb
incb
pushf
ja
push
arpl
add
aas
cmp
mov
outsb
sbb
mov
stos
divl
inc
popf
lret
ljmp
xor
hlt
int3
dec
pop
mov
pop
je
push
cmpsb
pop
inc
ds
mov
ljmp
cltd
mov
out
scas
nop
lock
xchg
or
dec
dec
inc
std
dec
fdivl
bnd
jnp
xor
fdivl
xchg
xchg
push
push
adc
push
mov
test
push
pop
push
push
dec
data16
incl
inc
inc
test
mov
dec
cmc
push
cli
in
fs
icebp
xchg
xchg
outsb
jmp
les
outsl
jo
shr
push
and
inc
xor
dec
jb
fdivrs
fwait
mov
dec
inc
insb
addr16
out
push
sub
push
or
push
fisttps
or
sub
fwait
lret
fucomp
sub
ret
or
decl
mov
or
ljmp
xor
decb
outsl
or
dec
mov
ljmp
adc
cwtl
in
xchg
outsl
dec
jo
jg
cld
xor
push
push
push
mov
push
xor
aaa
sarl
inc
xor
call
sbb
xchg
inc
out
cmp
mov
out
push
jecxz
push
mov
push
inc
inc
inc
push
aaa
mov
ficoms
inc
inc
xor
inc
mov
pop
add
mov
or
adc
mov
adc
bound
scas
xchg
test
xor
filds
lods
xor
into
push
sub
inc
fistpll
sbb
or
sub
xchg
shlb
arpl
shr
xchg
mov
lcall
push
xlat
mov
pop
jno
cmpsb
hlt
xor
fistl
add
jmp
mov
dec
inc
dec
mov
adc
sarb
xor
sub
cmpsb
icebp
cld
insb
pop
mov
test
jno
sbb
push
push
hlt
fwait
fwait
jl
inc
inc
sbb
ljmp
mov
xchg
pop
aam
inc
ja
cmpsb
xchg
mov
js,pn
or
or
push
cltd
data16
dec
cld
fildll
cmp
jbe
ljmp
incl
push
inc
dec
mov
jecxz
jp
mov
mov
push
aas
imul
icebp
das
xor
xor
pop
les
add
push
jo
inc
cmp
leave
inc
mov
imul
call
add
push
imull
push
imul
inc
push
sar
mov
test
push
popa
fisubrl
add
pop
add
push
enter
add
push
outsb
test
dec
jo
inc
mov
insl
jns
icebp
sub
add
or
mov
jno
and
dec
fdivl
push
loopne
push
lock
dec
inc
ss
or
push
jp
aaa
inc
mov
xor
pop
jge
pop
es
rcrb
and
xchg
push
dec
xor
mov
sbb
cmp
call
mov
dec
inc
mov
dec
dec
mov
or
inc
jno
lock
out
outsb
inc
xor
imul
scas
cmp
popf
cmp
in
sbb
ja
movsl
insb
in
cmp
push
xchg
pop
cltd
cli
jmp
adc
cli
mov
push
mov
mov
inc
dec
cwtl
daa
xor
or
mov
es
arpl
outsl
insl
ret
out
sbb
jg
popa
push
cmc
lds
vmovd
pop
mov
shrb
xchg
in
arpl
jae
push
lods
lods
adc
push
icebp
shlb
jae
mov
stc
inc
inc
sbb
push
arpl
test
ficompl
icebp
out
pop
push
jmp
stc
lahf
jg
jle
or
clc
js
xchg
pop
dec
rolb
nop
imul
ret
fcmovb
gs
insl
stos
mov
pop
hlt
enter
xchg
mov
pop
dec
imul
cmpsb
dec
dec
stos
das
mov
aaa
xor
shl
xor
lea
pop
and
pushl
jle
insb
add
mov
bound
pop
push
inc
bound
lock
mov
lret
xchg
fs
cmpsb
dec
fisttps
jne
dec
outsb
jg
add
aad
xchg
and
mov
in
mov
and
or
scas
das
inc
dec
ja
scas
sub
aaa
in
cs
add
fildll
cmp
xor
and
nop
inc
dec
mov
adc
xor
sar
aas
iret
and
ss
xchg
adc
add
fildll
and
mov
ss
int
lcall
jge
add
mov
adc
dec
ja
sbb
clc
push
out
ja
jbe
addb
dec
add
nop
add
jb
sbb
insl
scas
cli
jnp
and
push
jno
push
repnz
lods
xor
out
fisubrs
cld
dec
loop
and
xchg
add
call
mov
pop
lods
sbb
jbe
outsb
xchg
pop
lods
in
jmp
add
bound
call
mov
add
and
fbstp
xchg
into
dec
ss
xchg
push
js
jmp
jne
std
push
push
xchg
cmp
decl
xor
dec
inc
cmp
cmp
or
adc
movsb
mov
pop
aam
lcall
inc
push
shll
jle
je
movsb
mov
sbb
mov
in
pop
cltd
pushl
repz
add
cli
jae
cmp
test
jae
addl
mov
movsl
push
pop
mov
sbb
fbld
out
lock
fcoms
dec
add
pop
imul
decl
jp
fimuls
insl
dec
push
movsl
data16
lcall
fwait
cmp
andl
not
es
jbe
js
rolb
inc
sbb
dec
mov
outsl
push
add
lods
mov
scas
call
push
add
mov
xor
jmp
jecxz
jo
jnp
add
pop
daa
mov
mov
dec
dec
cmpsb
mov
outsb
inc
repz
ja
jbe
pop
xor
lock
clc
enter
mov
js
rclb
push
adc
xchg
cld
mov
outsl
insl
psrld
pop
dec
mov
push
mov
mov
cmp
addb
or
dec
xorl
cmpsb
push
aam
sbb
je
shlb
inc
push
adc
jae
loopne
mov
push
js
mov
imul
or
mov
adc
jg
jns
adc
pop
push
lcall
repnz
mov
and
mov
or
inc
movsb
clc
adc
jle
pop
outsb
jbe
data16
inc
xor
dec
jmp
xor
and
sub
cmpsl
fsubrs
add
xchg
call
rcrb
pop
stos
mov
jbe
push
fadds
rorl
add
ret
push
dec
inc
les
shrb
xchg
xorb
decl
push
ret
or
sbb
in
inc
ror
pop
imul
lahf
pextrw
movsb
push
scas
jb
enter
inc
jae
loope
push
jo
jno
call
xor
xchg
sarb
or
outsb
xor
lods
call
jo
in
cmpsl
cltd
mov
popf
sbb
sbb
repz
pop
stos
jmp
inc
outsl
sbb
lods
jb
add
or
lea
sbb
xchg
cmp
loop
fcomip
jle
jp
outsl
push
imul
and
xchg
lret
or
sbbb
aas
push
fcoms
pop
in
imul
in
cmpsb
push
jnp
xor
sysexit
aam
ss
push
ljmp
lcall
fmuls
pushf
arpl
repnz
repnz
pop
inc
mov
lret
sub
xor
lcall
pop
xor
pusha
pop
mov
movsb
sti
in
in
pushf
je
push
xchg
sub
dec
popf
mov
imul
or
mov
cmc
pop
xchg
adc
std
dec
cs
ljmp
mov
xchg
push
lods
push
sub
iret
xor
shrb
fs
lds
psubb
imul
out
mov
icebp
cmp
sbb
or
or
dec
loope
pop
sub
nop
ja
mov
pop
test
sbb
test
leave
mov
mov
mov
lcall
jcxz
test
dec
jno
cmp
jb
mov
dec
lds
adc
cs
xchg
mov
int3
lahf
dec
lods
xchg
push
movsl
inc
inc
imul
lock
cld
movsl
sbb
mov
sbb
mov
sbb
mov
xor
push
or
lock
sbb
insb
cmp
xchg
pop
cmp
pop
call
dec
rorb
test
inc
cld
cmovg
repnz
fisttpl
sub
aam
cmp
arpl
rclb
adc
mov
insl
cmp
movsb
lds
push
lds
adc
sub
mov
or
cmp
adc
jmp
scas
cmpsl
and
ret
add
cmpsb
mov
fldl
pop
into
outsl
inc
mov
outsl
mov
adc
scas
sbb
lahf
cwtl
gs
add
xorl
aas
push
cli
cmpsl
sub
xchg
add
add
and
sbb
or
pop
jno
inc
adc
cmpsl
imul
push
popl
add
rorl
cmp
inc
lcall
inc
xchg
xchg
jmp
lahf
jle
inc
mov
inc
mov
dec
xchg
das
dec
cs
mov
lock
jecxz
inc
inc
cs
jo
jne
ljmp
add
or
shrl
bound
inc
adc
inc
or
mov
pop
push
inc
push
cmc
sub
stc
ficoml
cwtl
mov
inc
push
pop
lods
leave
popa
mov
and
xchg
lahf
cmp
sub
jb
ret
adc
cmp
sar
int
or
andb
push
in
jno
inc
dec
cmp
and
dec
mov
daa
aas
push
addr16
rol
bnd
in
nop
lcall
enter
scas
stc
ret
xchg
jo
loop
adc
or
push
rcr
add
sub
out
add
and
add
movb
inc
lock
ss
icebp
mov
mov
push
lret
add
adcb
lock
mov
je
pop
add
scas
push
aas
orl
or
sbb
gs
add
xchg
cmp
xchg
fistps
dec
mov
insl
pop
mov
add
addb
movsb
mov
ljmp
fldcw
or
xchg
pop
jl
pushl
jg
inc
add
mov
push
call
incl
mov
fwait
jbe
xchg
movb
jbe
pushf
jge
je
movsl
add
loopne
testl
sub
dec
xlat
sbb
xor
cmp
in
test
repnz
not
fwait
test
adc
adcb
lds
adc
lcall
dec
and
sub
rorl
push
popa
mov
xlat
mov
loop
ffree
scas
sub
xchg
in
add
mov
in
imul
jp
pop
pop
inc
shrl
rolb
push
inc
push
push
pop
jns
mov
add
add
ja
xchg
insb
and
ds
shlb
call
pop
addb
mov
sbb
and
aad
add
std
jbe
mov
rcll
jbe
sub
loopne
std
shlb
sbb
int
adc
jno
cmc
imul
dec
push
adc
or
jnp
fs
inc
jnp
inc
test
ret
inc
jno
leave
push
imul
sub
mov
xor
lcall
mov
or
pop
rclb
mov
push
les
add
int3
shlb
add
xchg
mov
bound
and
jns
sbb
aas
inc
mov
cltd
lahf
out
sbb
sub
adc
jp
test
jmp
xchg
jno
lahf
push
aad
jae
mov
or
jb
or
sbb
sub
mov
or
les
lds
rclb
mov
shrl
aaa
push
dec
cs
orb
lods
es
xor
mov
pop
mov
push
sub
sub
outsl
call
mov
jno
fcmovnb
jo
xor
jge
inc
jb
cmpsb
ss
andl
xor
imul
inc
repnz
insb
lahf
cmp
mov
push
in
sbbb
pop
int3
cwtl
xchg
push
aaa
shlb
push
xor
leave
xchg
fwait
mov
sub
sbb
popf
adc
sbb
jmp
cs
jge
femms
sub
rolb
stos
jecxz
iret
lret
lea
fs
lret
mov
sub
push
xchg
out
pop
mov
outsl
cli
aas
sub
inc
adc
dec
inc
call
shrb
call
rorb
sbb
sub
jle
repz
rcll
mov
push
in
int
cmp
sub
imul
and
fisttps
mov
mull
and
enter
cmpsb
xor
ret
dec
inc
imul
or
and
aas
sbb
enter
or
inc
jne
lods
clc
call
push
fistps
pop
leave
mov
js
xchg
inc
or
shlb
fisubs
xor
inc
or
pusha
mov
stos
inc
aad
inc
inc
loopne
push
call
jg
mov
dec
inc
sti
jnp
pop
sub
or
xor
ja
add
jge
ret
dec
jnp
inc
jbe
and
mov
test
adc
lcall
sub
jae
add
fwait
jmp
and
or
xor
dec
xor
pushl
adc
int3
or
dec
outsb
xor
xor
pop
jo
add
or
pusha
stos
push
sbb
xchg
clc
jmp
mov
and
dec
mov
mov
jns
rcll
push
jb
jne
dec
test
ss
out
fcmovnb
mov
adc
dec
push
sbbl
iret
cmp
and
pop
movhps
repz
push
pop
adc
ret
cmp
testl
inc
jne
imul
dec
jo
and
nop
fiadds
mov
add
insb
clc
jmp
inc
cld
nop
mov
mov
sub
push
ja
mov
cltd
push
inc
xchg
adc
xchg
xor
jo
adcb
jmp
stos
ljmp
ficompl
dec
or
fistpll
push
jmp
fmull
dec
outsl
in
call
inc
jno
xor
pop
and
push
pushf
mov
inc
es
jecxz
xchg
mov
cmp
pop
cmpsb
lret
push
cmp
and
decl
adc
rorb
cmpsb
sub
decl
bnd
pop
push
dec
sub
inc
xchg
movsb
mov
divl
add
fmuls
mov
xchg
ret
je
sbb
jge
stos
add
pushl
inc
fisttps
in
push
ficoml
sub
xchg
outsb
rolb
pop
jb
outsl
imul
push
inc
xor
xchg
in
xor
lahf
insl
loopne
cmp
or
insl
mov
cld
popa
fwait
stos
inc
cld
cmp
push
std
daa
stos
test
jge
ja
sti
sub
or
fcoms
bound
sub
jae
inc
cli
jnp
mov
leave
pop
test
outsl
mov
xor
jge
add
mov
sbb
dec
add
lret
clc
mov
inc
dec
ljmp
ds
push
outsl
negb
sarb
dec
ds
jne
divb
jg
pop
fistps
cs
pop
and
mov
decl
adc
xchg
cmp
shlb
xor
mov
bound
pusha
sub
add
daa
or
hlt
pop
incl
ret
shll
std
scas
subb
scas
enter
sub
incl
fisubs
and
mov
std
push
int3
inc
xorl
xor
xor
or
test
mov
push
cld
incl
lcall
fisttpll
inc
jbe
pop
jecxz
or
xor
jo
cmc
gs
movsb
and
addr16
addl
shrb
xchg
fs
rcrb
push
out
lcall
movsl
jp
aad
add
mov
push
xchg
xor
adc
fisubl
es
sub
popa
lods
insl
leave
outsb
out
mov
clc
pop
pop
out
inc
push
jno
cmp
push
pop
mov
push
ja
mov
push
inc
faddl
xor
push
inc
test
and
movsl
fwait
loope
inc
xor
push
fiadds
sub
jmp
push
fidivrl
cmp
dec
mov
xorl
dec
sarl
lock
ljmp
int3
mov
iret
dec
push
push
or
enter
dec
and
mov
push
stos
data16
lods
mov
pushf
ficompl
ljmp
xchg
and
mov
mov
sub
add
push
int
ss
test
ret
cli
pushl
out
fs
scas
lcall
call
sbb
rolb
movsl
push
jmp
shl
rorb
push
dec
push
aas
movsl
or
jp
aaa
fs
push
test
data16
dec
into
fs
shrb
inc
mov
adc
inc
and
cmp
incl
add
repnz
loope
rcr
test
pop
inc
movb
dec
pop
fidivl
pushf
dec
mov
adc
out
push
ljmp
outsb
test
xchg
xor
loopne
sarb
mulb
enter
push
push
add
lcall
fs
adc
jmp
jae
mov
xchg
ret
les
and
pop
shrl
mov
dec
cmp
or
mov
fdiv
decl
movsl
lock
xchg
mov
sarl
push
lock
adc
sbb
arpl
pop
popa
and
inc
dec
test
xor
shrl
jg
push
push
sub
lret
push
inc
jg
mov
or
xlat
pop
cmp
jnp
mov
stos
les
mov
aam
jnp
adc
dec
bound
dec
dec
insl
pop
and
fcom
js
xor
scas
jo
bound
push
mov
push
dec
ja
idivb
mov
decb
jns
and
daa
cmp
pop
fimull
jae
rcrb
ja
sbb
sub
and
sbb
dec
xor
rorl
gs
stc
or
cmpl
ret
das
nop
xchg
inc
jo
cmp
mov
stos
shll
sub
vandnps
xor
jmp
inc
fwait
xorb
push
lahf
popa
arpl
test
jmp
or
lea
jmp
xor
or
fs
add
loopne
mov
and
mov
add
sbb
adcl
jo
addl
dec
xor
or
pop
mov
out
jmp
adc
adc
cs
and
in
xor
daa
pop
ljmp
and
or
ja
xchg
xor
mov
sub
jg
jl
adc
ret
pop
or
outsl
loopne
jle
sbbb
fldenv
loope
mov
cmp
mov
jae
sbbl
js
inc
lods
push
xchg
or
xchg
rol
test
mov
xlat
pushf
inc
mov
push
xor
xchg
daa
mov
lret
dec
cmp
adc
xor
adc
and
jecxz
mov
sub
bound
arpl
sbb
add
pop
push
lcall
insl
sbb
cmp
into
fidivl
inc
push
sahf
add
ret
inc
sar
ljmp
or
std
jbe
inc
arpl
xchg
pop
or
bnd
loop
jmp
jmp
enter
loope
mov
jns
inc
or
xchg
loop
stos
sarb
outsl
mov
push
nop
arpl
ja
jmp
xchg
mov
shlb
icebp
xchg
add
enter
sbb
jbe
push
dec
mov
pop
mov
push
scas
pop
into
xchg
pop
fstl
push
jp
je
pop
and
xchg
inc
lcall
xor
out
cmp
jb
testl
mov
xchg
xchg
and
mov
push
mov
in
test
ja
cli
xor
mov
jp
push
fnsave
stos
add
pop
dec
xlat
icebp
int
xchg
dec
or
xchg
shl
adc
int3
notl
pop
push
xchg
test
push
adc
fdivs
lock
pop
pop
popa
pop
mov
shl
icebp
shll
in
rclb
arpl
repnz
ret
cwtl
cmp
mov
dec
pop
inc
or
and
and
sub
idivb
jmp
pushf
sub
aad
mov
shlb
jnp
cwtl
cmp
pop
enter
roll
shrb
out
jns
shlb
andb
aam
leave
xor
adc
cmpsb
sarb
dec
fnsave
jecxz
and
nop
jo
pop
cmp
sbb
cmpsb
aas
push
jp
call
or
leave
cmp
dec
daa
xor
jg
jns
cmp
and
pop
mov
push
mov
jnp
push
add
lret
mov
sub
movsl
mov
or
jecxz
pop
jp
sub
jne
ja
jae
adc
inc
in
pop
leave
leave
xchg
jl
mov
gs
lahf
ret
sub
stos
or
xor
xchg
sub
dec
xor
sbb
xchg
mov
loopne
icebp
cmpsl
inc
push
scas
shlb
aad
pop
mov
or
addr16
pop
adc
dec
lcall
sbb
mov
mov
ficoml
pusha
test
xor
aam
aad
ljmp
dec
and
nop
mov
sub
push
rorl
jnp
pushaw
cs
xchg
les
cmpl
mov
popa
pop
adc
and
jmp
mov
jne
pop
and
mov
xchg
pop
stos
adc
xchg
sbb
inc
cmp
mov
cld
and
or
or
jo
shrb
outsl
sub
dec
pop
dec
xlat
add
addl
mov
and
iret
xchg
sub
fidivs
cmp
push
dec
out
jle
xor
mov
cwtl
cli
mov
push
xor
ret
jo
popf
mov
sbb
fmuls
pop
push
mov
roll
and
mov
dec
adc
popl
adc
mov
nop
sti
jl
push
test
xor
movsl
cld
mov
sbb
jno
cmpneqps
sub
cmp
sbb
in
jp
mov
mov
das
sub
outsl
adc
mov
repnz
jno
inc
loopne
cmp
add
or
pop
xchg
lret
movsl
cmp
push
stos
inc
insl
out
pop
mov
adc
pop
and
jecxz
cld
stc
daa
pop
sbb
dec
jne
push
cmpsl
xchg
sub
dec
ja
jno
lods
lcall
loopne
test
cmpsb
jo
push
fxch
lods
and
inc
xchg
popf
lcall
cld
xchg
cmpsb
sbb
jns
pop
or
leave
pop
ret
xchg
jge
sub
push
dec
xchg
adc
cwtl
xchg
sbb
lret
imul
sub
loopne
add
jecxz
dec
cs
xor
bound
bound
and
mov
inc
pop
push
lods
aas
xchg
jl
push
mov
and
fld
xchg
inc
xor
rcll
adc
gs
cmp
adc
mov
pop
fldcw
dec
jge
data16
scas
add
vminps
dec
or
test
or
int3
insb
push
jmp
imul
daa
roll
jo
inc
shrb
lea
add
add
aas
pop
shll
sbb
loopne
pop
cltd
jecxz
add
sub
sbb
pop
and
and
scas
or
lds
aam
das
dec
or
mov
mov
sbb
mov
and
in
pop
or
orb
pop
rolb
sti
sbb
xchg
ficomps
jb
sbb
or
lcall
xor
inc
push
add
add
inc
mov
adc
push
cmp
jmp
ret
pop
test
cwtl
and
jo
mov
rolb
stos
data16
sbb
adc
cmp
mull
fisttpl
adc
jo
jo
sbb
xchg
mov
fwait
pop
cmpsb
jno
stc
inc
cmp
add
push
or
jg
cmpsl
rol
xchg
and
into
pop
es
dec
addr16
xchg
gs
leave
mov
ljmp
add
mov
add
pop
orb
add
testl
inc
dec
aad
adc
inc
insb
add
lret
xor
or
and
and
mov
mov
jp
xor
inc
mov
pop
or
call
inc
or
icebp
mov
insb
adc
ret
ret
outsb
mov
imul
dec
je
repz
sar
mov
mov
dec
arpl
sbb
jo
xor
push
xor
xchg
movsl
push
movsb
les
inc
add
stos
aam
mov
jo
gs
pop
sbb
js
loopne
les
in
inc
arpl
ja
adc
sub
movsb
inc
dec
add
inc
push
ljmp
lcall
ja
cmp
mov
dec
jecxz
mov
jb
or
cltd
jae
out
mov
xor
xchg
push
inc
add
dec
inc
push
shrb
dec
enter
js
stos
push
js
imul
or
sbb
decl
inc
inc
les
leave
popl
popf
sub
jbe
loopne
dec
sbb
rorb
xor
mov
in
xchg
insb
inc
and
push
bound
iret
push
cli
push
jae
inc
sbb
xlat
int3
aam
gs
mov
jl
push
ljmp
fucomip
aaa
inc
orl
jae
dec
push
aaa
rcll
fcmovb
lds
test
add
push
push
mov
and
icebp
and
mov
ret
push
test
push
xchg
lock
xor
push
pop
mov
fwait
add
sarb
jns
push
push
dec
shlb
jge
mov
push
and
incl
sub
fst
mov
pop
mov
lea
dec
cmc
mov
call
mull
push
add
insb
jl
rcrb
push
test
push
arpl
jl
add
or
clc
mov
call
or
inc
test
mov
mov
xchg
sub
sub
jle
aas
rcr
inc
dec
andb
xchg
push
fcoms
fisttps
int
int3
popf
and
mov
and
inc
inc
or
inc
ss
push
std
fbld
cmp
stc
inc
outsl
inc
insl
or
mov
cld
popa
jecxz
xchg
test
push
dec
mov
es
imul
icebp
mov
inc
pushl
push
cmpsb
mov
enter
mov
fwait
lret
adc
outsb
cmc
loopne
out
lds
in
insl
das
push
cld
dec
xor
arpl
push
dec
clc
mov
nop
jae
sahf
xor
jecxz
mov
push
sub
add
stos
pop
pop
push
ljmp
rorb
push
in
inc
sbb
fwait
stos
movsl
int3
inc
ljmp
jmp
push
inc
lock
inc
pop
dec
and
inc
mov
push
clc
jb
lods
jg
mov
popa
inc
lcall
inc
pop
cmpsb
xchg
mov
aaa
cmp
call
sub
out
mov
loopne
xlat
jnp
mov
jno
pop
mov
lock
je
sub
dec
andl
popf
xor
pop
ljmp
pop
sbb
add
rcr
jmp
mov
icebp
cltd
cmpsl
jae
ja
rorb
loopne
jecxz
jecxz
shrl
mov
mov
fistpll
mov
shrb
test
push
inc
dec
ror
imul
test
das
jns
test
das
daa
call
lods
or
decl
sbb
adcl
jp
inc
sbb
cmp
add
jb
sbb
pop
or
lret
fistpll
xor
xorl
xor
mov
push
js
push
fbld
mov
adcb
pop
pop
add
fadd
mov
inc
sahf
add
aas
orb
jl
mov
or
ss
out
rcrb
push
add
hlt
test
or
adc
dec
test
pusha
jmp
xchg
mov
mov
mov
ret
pushl
and
add
mov
mov
pop
cmc
lahf
ja
xchg
add
popf
aaa
subb
jmp
add
adc
xchg
push
imul
add
or
inc
or
pop
mov
int3
js
sarb
out
dec
jl
cmp
in
xchg
sbb
sub
sbb
add
roll
jne
lock
int3
cmpsl
add
jl
jns
jge
xchg
jno
test
movmskps
loope
add
dec
mov
jne
push
inc
cmpsb
cs
lea
xchg
dec
add
ret
enter
pop
sbb
shlb
push
jne
jno
cmpsb
mov
mov
cmp
stos
and
popa
push
rorl
stc
sub
pop
push
sbb
jbe
xor
xor
mov
mov
jmp
inc
cli
aas
es
pop
fbld
cmp
movsl
addl
sbb
aam
add
jge
popf
cmc
mov
call
cmp
xchg
lcall
js
mov
shrl
xchg
xor
movsl
jnp
inc
gs
nop
xchg
scas
sub
sbb
js
adc
xchg
adc
fsubs
pop
jl
test
in
jecxz
push
movsb
mov
and
pslld
pop
movsb
mov
fsubrs
sbb
cmp
adc
sub
cmp
std
cli
xor
add
ficoml
push
fistpl
cmp
repz
xchg
dec
cltd
xchg
outsl
and
test
jae
pop
inc
rorb
xchg
lret
scas
movsb
xchg
popa
dec
cmp
xor
sub
scas
pop
inc
xchg
fbstp
sti
push
aam
push
fstps
fdiv
iret
sub
popa
pushf
loop
in
movsl
push
sub
mov
push
xchg
jmp
xchg
dec
mov
lods
cmp
push
icebp
xor
gs
imul
insl
or
imul
dec
sbbb
call
dec
movsb
dec
mov
mov
aaa
aam
push
add
inc
cli
std
xchg
ss
pop
cltd
lea
add
lds
cli
je
imul
sbb
fs
movsb
ret
or
lahf
xlat
inc
adcl
xor
xor
outsl
bound
ds
out
jns
push
jno
mov
jmp
push
fwait
aad
sub
pop
andb
sub
adc
pop
aaa
out
jecxz
sahf
data16
je
leave
addl
jmp
stos
mov
cs
sub
dec
mov
clc
pop
repnz
and
pushf
add
scas
leave
stos
push
jmp
or
adc
pushf
lcall
pop
inc
sbb
lods
shll
mov
leave
mov
clc
push
jns
adc
mov
fiaddl
mov
cmp
fisubs
icebp
out
or
mov
xchg
or
add
decl
hlt
std
bound
in
or
sub
add
popf
mov
inc
xchg
lock
mov
xor
jge
fistpll
shll
hlt
into
roll
sldt
mov
pop
push
push
es
mov
into
push
js
adcb
mov
mov
pop
data16
sbb
movsb
xor
pop
jl
lcall
lds
xchg
push
negl
lods
into
jo
cwtl
pop
outsl
test
into
inc
js
dec
push
jp
xor
inc
or
cmp
inc
jno
jns
popf
hlt
jnp
xchg
ret
push
push
lods
add
decl
push
pop
add
loope
in
and
ficoms
push
call
mov
or
lahf
xchg
sub
sub
insb
rolb
push
aaa
mov
mov
mov
mov
leave
jecxz
dec
ror
inc
xor
jb
imul
cmpsb
orb
push
jne
and
imul
out
nop
inc
je
inc
insb
dec
inc
repnz
jl
repnz
add
loop
les
daa
adc
lcall
push
cmc
cltd
add
or
je
lock
es
cwtl
imul
ljmp
dec
mov
xor
cmp
inc
arpl
inc
cmp
fcmovb
inc
bound
xchg
out
push
mov
in
fdivrl
enter
into
inc
sarl
xchg
pushl
fadd
sarb
ds
cs
mov
mov
outsb
rolb
orl
xchg
rcr
ljmp
fnstcw
or
add
pop
popa
pop
xchg
ficomps
fiaddl
movsl
icebp
mov
ss
in
cmp
mov
inc
cld
out
sbb
rcrb
call
add
push
subb
sbb
imul
mov
lcall
push
fmull
lcall
adc
loopne
rcll
fs
xchg
push
mov
pop
push
fsubl
pop
addr16
in
pop
mov
stos
call
cld
jmp
popf
jns
inc
adc
ljmp
shll
scas
mov
lret
fidivrl
dec
mov
cmpsb
push
push
inc
lock
push
jbe
js
mov
add
mov
aaa
sub
sub
insl
insl
jbe
add
dec
mov
clc
pushf
dec
mov
dec
insl
mov
adc
and
das
xlat
inc
cmpsl
popf
pop
mov
ljmp
mov
sub
push
cwtl
lods
mov
sbb
out
dec
ret
or
xchg
popa
imul
sbb
testl
ljmp
push
lret
lret
addr16
and
pop
add
mov
jmp
insb
pop
cwtl
subl
mov
rcll
fisubrl
push
in
dec
adc
jae
cli
lods
add
pusha
cld
dec
xor
ficoms
mov
cmp
dec
sub
mov
fcmovbe
dec
clc
mov
push
xchg
push
inc
sbb
jl
loope
jno
cwtl
pop
fadds
sbb
imul
inc
mov
cli
cmpsl
mov
out
insb
popa
jmp
xchg
and
les
fiaddl
or
call
stos
cltd
int
add
mov
out
sub
jne
xor
les
cmc
fcoml
xor
jne
dec
mov
push
mov
scas
or
popa
inc
jns
inc
and
out
test
dec
cld
call
lcall
add
sarl
cmp
mov
addr16
inc
pop
add
inc
and
pop
pushl
in
inc
mov
shrl
cmp
sbb
das
enter
push
ret
imul
dec
fisttpll
or
int
fmul
xchg
lods
or
sbb
or
jo
dec
std
and
jae
lret
adc
cmp
mov
pop
fwait
jo
dec
mov
mov
sahf
gs
test
ret
sub
insb
xchg
cmpsl
aam
je
ds
das
in
pop
sti
xchg
dec
je
push
xor
rorl
les
lods
inc
cs
cmp
dec
dec
pop
push
aas
or
add
ja
lcall
ljmp
adc
lds
add
ret
outsb
data16
mov
addr16
pop
pop
loope
movsb
rolb
and
pusha
outsb
and
mov
xor
ffreep
mov
int3
ljmp
push
leave
test
inc
jle
xor
sub
mov
adc
jnp
fs
xchg
dec
xorb
mov
sbbb
inc
fistpll
fsubrl
js
arpl
dec
inc
andb
mov
ljmp
and
dec
jecxz
jg
addr16
subb
add
fildl
fimuls
fimuls
cmp
jno
push
test
jb
jmp
or
insb
movsb
outsb
or
cli
pop
xchg
add
ret
call
sub
lret
push
sbb
mov
pushl
or
es
mov
push
dec
jmp
aad
shl
sub
push
imul
inc
nop
fwait
std
mov
scas
mov
mov
pop
push
xor
push
imul
push
bound
decl
cmpsb
cld
outsl
adc
adc
in
or
pop
mov
cmp
loope
sub
push
jnp
sahf
jmp
js
imul
stos
mov
sbb
xchg
push
xchg
dec
mov
arpl
mov
adc
add
aaa
jno
xchg
jae
jle
popa
xchg
pop
add
pushl
sbb
sarl
adc
pop
bts
cmc
add
inc
nop
mov
ficoml
mov
sahf
stos
mov
push
addr16
jnp
stos
jae
aam
js
or
inc
inc
cmpsb
jbe
movsl
xor
jg
call
inc
inc
out
jmp
inc
inc
jecxz
pop
je
mov
mov
jle
jo
ret
std
sti
and
shll
cmp
movsl
jecxz
lahf
push
jns
sub
dec
pop
ljmp
push
mov
cld
inc
cmp
mov
repnz
aas
arpl
int3
ret
stos
sbb
pop
mov
xchg
add
cmp
jbe
clc
lahf
repnz
mov
movsl
cmp
push
adc
add
repz
or
xchg
pop
mov
xchg
mov
lods
push
adc
sub
lahf
inc
dec
fiadds
dec
push
test
bnd
mov
push
mov
mov
mov
jg
jb
dec
dec
ljmp
xor
jl
popa
pushf
movsb
add
aam
cmc
mov
data16
lock
push
dec
push
fsts
sahf
je
pop
mov
xchg
sbb
adc
push
cwtl
jecxz
push
xor
adc
dec
pop
insb
mov
mov
popa
movsl
data16
adc
aam
pop
repnz
adc
inc
inc
into
orb
outsb
mov
jp
sbb
fiadds
jo
icebp
test
jg
adc
daa
or
xchg
sub
inc
add
test
icebp
sub
xchg
pop
jge
push
popf
add
xchg
push
push
sub
sbb
mov
fsubr
iret
and
mov
arpl
cltd
scas
dec
and
bound
rorl
jp
int
sti
jmp
cs
stos
cltd
outsl
popf
bound
movl
lods
pop
mov
popa
psubw
pop
jo
jmp
pop
xor
adc
sub
mov
iret
cs
adc
aaa
push
inc
push
lods
inc
add
lock
mov
lods
pop
xchg
mov
daa
mov
xor
jno
call
ja
scas
add
test
loopne
imul
sub
ret
or
push
sub
repz
dec
or
jle
bound
jns
add
xchg
stc
mov
mov
add
pop
test
and
add
lret
dec
subl
lcall
gs
movsb
mov
notl
fisubrl
xor
add
cld
je
jne
test
mov
dec
jp
or
sbb
mov
or
and
call
cmpsb
movsb
xchg
xorb
cmc
fisubs
movsl
jecxz
dec
mov
mov
dec
negl
or
push
cltd
cmp
xor
stos
adc
sub
mov
icebp
push
pusha
mov
jg
mov
loope
movsl
add
int
sub
pop
cmp
scas
fisttps
or
not
stos
ret
xor
sub
jbe
fistpl
dec
je
mov
jl
pop
add
clc
mov
cmpsb
sbb
mov
fwait
xor
sbb
fxch
and
or
push
add
mov
roll
test
xlat
rcrb
jne
sti
add
mov
cli
in
nop
dec
mov
cmp
fisttpll
clc
push
fcoms
and
call
sub
subl
jp
pop
push
daa
cmpsb
push
push
adc
pop
iret
lret
into
stc
fistpl
mov
sbb
add
xchg
mov
and
test
pop
popf
pop
and
incl
add
arpl
pop
inc
icebp
sbb
push
jecxz
xor
iret
movsb
out
sub
push
enter
xchg
adc
fwait
cmp
test
push
out
push
inc
push
xor
pop
pop
lret
dec
or
shlb
sub
xchg
adc
scas
inc
xor
je
dec
outsl
aaa
sub
push
test
jmp
push
xlat
push
pop
idivb
mov
xchg
andb
cld
dec
enter
incb
arpl
rorl
push
add
dec
insb
jns
push
inc
mov
js
xlat
inc
inc
inc
rorb
imul
sbb
lods
cld
or
push
xchg
sbbb
dec
mov
adc
fwait
aam
push
fiaddl
and
fbstp
ret
and
jbe
pop
or
jb
inc
adc
imul
xor
ljmp
push
push
ret
daa
add
mov
orl
inc
inc
ret
sbb
add
imul
or
bound
or
mov
dec
pop
dec
dec
add
lret
insl
inc
or
mov
arpl
lcall
xchg
loop,pn
mov
xor
mov
xchg
xor
dec
inc
jo
jns
repnz
imul
mov
loope
sbb
pop
xor
movsb
stos
xor
rclb
sbbb
push
lcall
xchg
aaa
out
pop
mov
int
cwtl
sahf
inc
adc
or
jae
arpl
lcall
add
ds
xor
dec
jo
movsl
xorb
fs
push
push
test
jae
lcall
stos
mov
aam
xchg
je
in
cmpsb
movsl
mov
add
clc
decl
mov
lds
jbe
adc
jbe
out
push
outsl
ss
ficoml
cmp
call
mov
cmc
test
dec
add
syscall
js
sar
add
test
js
cmpsb
cmpb
xchg
push
mov
mov
mov
mov
repnz
addr16
inc
push
in
and
push
testb
shll
cmp
incl
lods
pop
outsl
xor
ljmp
xchg
add
test
sti
in
push
and
outsl
fcoms
add
inc
xor
mov
fs
xor
xchg
mov
inc
orb
inc
xor
mov
ret
xor
and
mov
aam
or
sahf
insb
dec
dec
je
mov
dec
scas
int3
mov
sub
cmpsl
ss
jno
enter
in
mov
ret
stos
or
xchg
std
push
clc
enter
inc
js
push
push
ljmp
das
jbe
in
ret
sub
mov
out
scas
insl
call
shlb
adc
lock
cwtl
add
add
inc
or
xchg
sbb
mov
dec
jecxz
sbb
pop
icebp
mov
in
imul
pop
inc
xchg
loope
fists
stos
adc
outsb
mov
dec
stos
rcrb
cwtl
jl
aaa
dec
out
xchg
or
xchg
cmp
iret
push
lahf
fstpl
push
sbb
jl
xchg
and
data16
sbb
sub
ljmp
shll
xchg
inc
xchg
rorb
jmp
addl
or
shll
outsl
fwait
sub
ret
lds
cmp
fistl
cwtl
dec
test
lods
add
inc
xchg
mov
incb
pop
mov
ret
aaa
cmc
cmp
inc
ret
cmp
adc
stc
mov
mov
mov
cmpsb
or
jo
in
mull
adc
cld
stos
nop
xchg
aas
push
rorb
and
sub
adc
mov
das
fnstcw
xchg
out
lret
and
lahf
mov
sbb
mov
in
jae
dec
jns
push
cmp
cmp
mov
adcb
pusha
inc
cld
js
and
or
pop
xchg
and
cmp
or
pop
pop
add
test
cmpl
fldcw
fiaddl
push
push
je
std
add
mov
push
add
sub
or
and
sbb
daa
lods
orl
inc
inc
daa
adc
jne
mov
sbb
jge
mov
std
cwtl
lock
mov
dec
je
add
pop
pop
and
and
aaa
stc
aaa
rcll
xor
mov
or
neg
clc
push
mov
jl
xchg
or
lret
jnp
inc
jp
shl
cmpsl
or
loope
imul
fstps
push
daa
cmp
insl
imul
mov
rorb
or
push
mov
inc
dec
movsl
jno
mov
pop
cmpsl
daa
xor
aaa
icebp
pop
jbe
clc
loop
inc
push
jmp
sbb
cmpsl
push
jle
inc
pop
adc
mov
test
jnp
mov
and
mov
cmpsb
ja
notl
mov
fiaddl
add
mov
sub
cwtl
push
iret
and
aad
jb
pop
loopne
clc
cmp
push
loope
rcr
aas
inc
test
mov
cmpsl
mov
in
imul
dec
jmp
xchg
cmp
mov
mov
jmp
stc
xchg
jg
adc
mov
jnp
xlat
fcmovnbe
loopne
js
fdivl
push
adc
add
lret
rcll
lock
add
shlb
fnstsw
aaa
outsb
jno
lock
mov
adc
pop
inc
int
jo
cmpsb
add
inc
movsl
lds
fwait
push
mov
ret
addr16
push
sbb
std
movsb
inc
jne
dec
daa
sbb
push
sub
xchg
int
or
or
pop
xor
mov
jnp
add
mov
inc
adc
add
roll
or
mov
or
cld
mov
or
insb
cmp
ss
imul
push
stc
out
inc
mov
inc
inc
xor
dec
xchg
sbb
push
aam
push
and
mov
insb
mov
jecxz
sbb
xor
sub
enter
lock
stos
xor
cmp
add
pop
xor
es
insl
or
pop
and
jne
mov
sub
ret
push
jo
and
xor
or
jecxz
jno
lret
mov
subb
dec
jmp
dec
xor
add
push
and
or
test
cmp
test
insb
cmpsl
push
mov
mov
loopne
pop
repnz
test
adc
daa
xor
jne
xor
orl
lock
sub
mov
daa
pop
push
sub
adcl
mov
dec
sub
scas
cmp
push
rol
mov
lock
inc
dec
je
xchg
or
adc
pop
mov
imul
arpl
mov
inc
arpl
or
adc
sub
dec
jns
aam
dec
adc
jmp
jp
nop
pop
enter
xchg
sbb
push
test
cmp
dec
jo
mov
mov
mov
xor
scas
push
test
iret
mov
push
ret
pop
mov
shrb
mov
adc
or
jne
cmp
insl
pop
subb
inc
xor
pop
mov
add
and
inc
mov
mov
imul
std
fdivr
test
imul
cmpsl
pop
repz
mov
lret
daa
addr16
inc
insl
sbb
sbb
or
xchg
push
iret
test
xor
inc
add
xchg
dec
xor
inc
movzwl
lcall
sub
ret
movsl
or
cs
rorl
push
dec
ljmp
xchg
mov
pusha
ret
mov
or
test
add
inc
mov
test
add
dec
lret
cmovbe
jns
fidivrs
pop
mov
mov
in
cmp
sub
dec
jecxz
in
cwtl
in
xchg
adc
pop
push
mov
movsl
dec
lock
adc
and
cmp
dec
orl
adc
adc
mov
repz
mov
jno
out
xchg
lods
push
adc
es
and
adcl
push
loope
insl
sub
pop
aad
rcrb
inc
inc
cmpsl
loopne
scas
mov
incl
or
fstps
shrb
pop
mov
fiaddl
mov
inc
stos
mov
imul
add
add
and
sbbl
push
push
or
xchg
jbe
lds
or
mov
gs
popa
sub
mov
test
lret
nop
xlat
rclb
cmp
mov
jmp
add
mov
jmp
imul
mov
movsl
subl
pop
adc
dec
pop
in
xor
inc
cmpsl
das
fisttps
xor
xorl
mov
adc
pusha
xchg
dec
loopne
ret
add
jmp
mov
test
imul
push
cmpsl
enter
sbb
xor
in
mov
sbb
jae
mov
add
lods
mov
addb
into
inc
enter
les
roll
sbb
jb
inc
and
and
adc
adc
push
das
fwait
xlat
scas
stos
jge
xor
imul
pop
cmp
adc
mov
cmp
sub
inc
in
out
loope
call
sti
hlt
xchg
data16
data16
cmp
jl
xchg
aaa
insl
push
add
xor
pushl
fnstsw
jns
push
mov
das
inc
mov
dec
ss
movsb
pop
shll
xor
adcl
mov
dec
rorb
jle
xor
dec
outsl
repz
decl
rclb
test
scas
xor
adc
call
adc
fistl
int
test
cmp
add
pop
cmp
push
mov
and
mov
ret
sarb
mov
inc
mov
hlt
fbld
push
push
cmp
dec
cli
push
dec
insb
out
rcll
and
js
push
loopne
or
jp
xor
icebp
and
pop
adc
fiaddl
dec
adc
lock
nop
js
inc
mov
push
jge
push
xor
imul
andb
sbb
shr
pusha
cmp
outsb
push
push
ljmp
test
out
or
jae
dec
jae
bound
xchg
std
add
jo
outsl
and
mov
mov
repz
push
push
call
mov
clc
int3
stc
xor
ljmp
dec
jbe
fcoms
push
outsl
push
mov
push
and
sahf
push
lcall
addr16
inc
mov
ljmp
xlat
les
xor
fcmovnu
leave
adc
pop
das
rcrl
mov
dec
dec
aaa
mov
test
mov
subb
dec
pop
pop
add
or
dec
inc
dec
ret
outsb
xchg
js
scas
les
sarb
imul
ljmp
xchg
test
mov
in
dec
cmpsb
adc
push
adc
inc
jnp
xchg
xorb
mov
icebp
adc
jne
mov
push
dec
mov
jge
add
pusha
insb
xlat
addr16
jmp
sar
dec
add
lods
loope
movsb
adc
leave
mov
xchg
pop
test
decb
push
pop
fisubs
fs
insb
insl
loopne
xor
dec
dec
dec
fisubrs
pop
push
push
arpl
out
dec
push
dec
lahf
add
push
loopne
and
inc
xor
xor
incl
xor
jl
xlat
push
jl
leave
rcll
incl
dec
lock
and
lret
cld
mov
clc
cmpsl
iret
cmp
sarb
push
lods
mov
inc
dec
sahf
movsb
pop
xchg
imul
jne
shlb
dec
mov
rolb
or
jb
dec
fists
inc
xchg
xorb
push
pop
xchg
setnp
int
mov
arpl
pop
popa
lock
add
ret
xor
adc
imul
sub
push
pop
inc
loop
mull
xor
xor
inc
sbb
movsb
das
lret
xchg
mov
pop
nop
imul
push
pop
in
ret
ljmp
adc
ljmp
dec
sbb
push
mov
pop
jae
mov
mov
push
xor
nop
out
adc
pop
dec
fmuls
int
ljmp
or
push
inc
mov
jb
clc
xor
add
xchg
adc
jle
int3
bound
ljmp
xchg
push
rclb
mov
cwtl
xchg
shll
decl
ret
addr16
pushf
ds
rcr
bound
rcr
mov
push
bound
pop
push
inc
inc
sarb
in
jb
outsb
outsb
cli
or
pushw
addb
inc
add
push
lcall
jp
and
dec
roll
icebp
inc
subl
fadd
sbb
inc
jne
lea
pop
pop
adc
test
les
add
pop
stos
inc
dec
cli
addl
dec
adc
ja
lock
dec
jg
xchg
cmp
xor
adc
add
mov
ss
adc
lcall
std
mov
testl
repnz
xor
fisubs
shll
adc
cld
xorb
out
inc
xor
call
ss
shrl
shlb
jno
jg
jl
push
cmp
mov
je
nop
sbb
jnp
scas
repnz
sar
aad
xor
mov
pop
testb
inc
sbb
mov
fimuls
dec
jbe
outsl
cmp
jecxz
cmpsb
sar
decl
mov
repz
leave
fcom
push
hlt
dec
jmp
mov
push
sbbb
inc
jno
mov
push
dec
push
jl
test
sub
push
jg
and
jne
mov
movsl
pop
or
mov
jle
notb
orl
pop
out
icebp
xor
nop
fs
push
push
insb
int
lock
mov
imul
add
push
jmp
addr16
in
mov
xchg
cmpsb
cmp
incl
pop
shl
mov
push
sub
dec
add
inc
jg
push
pushw
shll
mov
xor
rorb
xchg
adc
push
inc
push
movsb
cli
sar
dec
mov
inc
pop
dec
in
add
jo
bound
push
dec
cmp
aas
mov
inc
pop
mov
out
call
mov
repnz
gs
mov
xchg
or
fiaddl
imul
inc
add
lods
je
xchg
jo
or
cmpsb
lock
in
mov
std
and
sub
imul
mov
sub
imul
stos
xor
in
jno
xor
lods
xor
jae
inc
mov
popa
std
incl
sbb
insl
ss
add
pop
adc
sbb
and
es
sbb
mov
sub
dec
sbb
in
and
jo
je
jae
fwait
adc
les
push
loopne
adc
xchg
test
fcoms
jle
adc
jns
or
add
cmp
mov
jl
add
push
sub
test
xchg
loope
mov
sub
mov
inc
add
in
push
adc
sti
sub
dec
dec
adc
inc
enter
sbb
imul
fwait
jae
in
dec
test
add
inc
xlat
adc
sub
mov
adcl
in
cmp
repz
lret
mov
pop
pop
je
inc
mov
sbb
or
cwtl
subb
mov
movl
sub
ja
imul
in
lcall
imul
enter
fldt
mov
addl
or
mov
mov
sub
ret
add
add
mov
mov
fmuls
loop
push
shrb
push
dec
sub
add
sub
shl
dec
push
ffree
mov
out
pushf
push
test
insb
push
fcom
inc
fwait
dec
loope
mov
mov
add
add
add
sti
xor
push
pop
cmp
data16
cs
sub
sbb
and
dec
xor
cli
incl
lea
mov
xchg
inc
mov
les
pop
lret
push
xchg
lods
push
and
adc
ds
push
inc
into
adc
dec
adc
andl
xor
cwtl
subb
pop
enter
sarb
fdivs
sarb
dec
rcrb
add
mov
push
xlat
clc
mov
loopne
icebp
loop
xchg
jp
ret
push
inc
and
mov
push
add
or
out
js
lcall
in
sub
leave
jecxz
push
or
dec
push
cmc
add
outsb
push
stc
mov
dec
mov
inc
mov
inc
sub
scas
xor
xor
pusha
push
std
pushl
inc
cmp
adc
mov
or
push
sub
sti
pop
push
dec
push
sub
outsb
push
xor
repnz
mov
in
andl
js
jns
insb
inc
lock
adc
call
cmp
push
incl
cmpsb
jle
adc
inc
push
lds
sti
cwtl
sub
mov
push
mov
jbe
mov
adc
sar
call
xor
decb
dec
enter
push
inc
sbb
inc
xor
dec
popa
dec
dec
aas
cmp
jnp
jle
loop
inc
and
lock
lcall
pop
sbb
jbe
or
push
sub
inc
sbb
aam
adc
mov
jp
and
lcall
dec
jl
mov
pop
gs
xor
test
jmp
aad
lods
in
mov
cs
daa
dec
fucomip
dec
outsl
fs
inc
mov
push
push
int
push
xor
adc
and
in
in
sbb
pushl
clc
jb
push
pop
push
or
push
xchg
jb
insb
icebp
repnz
xchg
inc
dec
sbb
cmp
out
mov
inc
imul
or
cwtl
stos
mov
sub
jg
pop
fists
add
mov
shl
jle
in
movsb
push
inc
mov
xor
fisubrs
jb,pn
mov
push
push
rolb
je
sbb
ret
cld
decb
dec
stos
jmp
insl
xor
insb
and
xor
movsb
das
jg
push
sti
dec
scas
xchg
call
add
or
xor
dec
inc
pop
nop
xor
movl
push
push
xor
push
dec
pusha
jo
leave
jg
sbb
sub
dec
push
add
inc
inc
xchg
dec
sub
ljmp
pop
popf
fwait
jne
int3
xchg
push
clc
aam
roll
add
add
sti
mov
dec
clc
pop
out
addr16
push
mov
ss
pushf
test
pop
aaa
adc
cmp
xchg
incl
mov
outsl
pop
sahf
inc
jbe
mov
mov
ss
cmp
sub
lock
insl
xor
dec
and
data16
pop
mov
out
dec
xchg
and
xor
dec
out
decl
rcrb
pop
fsubl
sub
push
jle
lods
inc
sbb
add
pop
dec
add
outsl
sbb
ret
scas
adc
jbe
das
mov
cmpsb
xor
dec
enter
mov
mov
popf
sbb
mov
lds
jmp
lods
test
sbbb
std
sub
dec
inc
es
push
aam
push
repz
dec
push
jmp
fs
adc
cmpsb
aad
push
pop
push
dec
addl
loope
mov
mov
sub
decl
dec
inc
sub
lods
push
jmp
and
test
dec
pusha
sbb
je
pop
sub
call
pop
int
into
push
movsl
pushf
movsb
sub
mov
fidivrl
ret
xchg
out
dec
dec
xor
mov
mov
jmp
clc
scas
fwait
cmpsb
xor
fcomip
mov
mov
dec
fs
xchg
push
and
dec
sub
and
and
dec
mov
cmp
decl
adc
mov
mov
fs
push
add
pop
mov
pop
push
jecxz
jl
mov
stos
pop
push
mov
rcpps
jns
call
dec
pop
bound
xchg
jg
stc
stos
push
sti
das
in
lahf
hlt
out
out
push
clc
idivl
scas
test
lods
pusha
fisubl
fincstp
jle
push
adc
push
push
shr
dec
movsl
je
loopne
or
xor
addl
jo
enter
cmc
subl
sbbl
outsb
movsl
adc
into
sub
sbb
cmpsb
int
clc
call
int
popa
xor
sub
and
cmpb
xor
sub
jb
aaa
fs
out
icebp
pop
rcr
lcall
lds
int
cli
fistps
sub
mov
ror
pop
sahf
sahf
jo
dec
add
imul
push
fsubs
bound
pop
dec
lret
push
aaa
sbb
jmp
pusha
into
mov
hlt
outsl
push
js
lret
insb
xor
jg
cmp
xor
sub
cmp
popa
out
ret
cmc
jp
adc
jne
adc
mul
mov
clc
or
xor
add
jae
sub
popa
adc
pop
dec
adc
pop
sbb
push
dec
xor
mov
xor
loope
negb
test
aas
jb
iret
and
aam
les
xchg
dec
mov
shr
dec
pop
imul
xchg
mov
jmp
rorb
lds
sub
jo
pop
dec
aaa
inc
test
xor
jo
inc
xchg
inc
sbb
ja
or
push
ds
lcall
ljmp
sahf
cmpsb
sbb
pushf
out
inc
roll
cli
out
xchg
nop
inc
mov
add
push
xchg
sub
es
stos
jo
stos
xor
enter
xor
dec
fisttps
fidivl
xor
pop
fwait
push
rcl
or
pushf
xchg
fists
sar
push
js
addb
pop
xchg
movsl
addl
push
inc
ss
jno
jo
mov
fwait
arpl
psubd
or
nop
adc
cmp
fnstcw
pop
pop
push
fcomi
inc
xchg
ja
mov
jle
out
adc
or
xchg
mov
inc
call
dec
and
icebp
jp
pusha
and
sbb
cmc
movsl
je
int
clc
jg
mov
mov
jb
idivl
cwtl
dec
sbb
dec
adc
mov
push
inc
scas
pop
aas
push
dec
dec
add
ficompl
imul
fdivrl
adc
pop
leave
sti
fdivr
call
ds
imul
ds
push
sub
push
push
xor
jmp
sbb
sub
or
les
xchg
adc
sub
and
rcl
push
pop
xchg
cmp
addb
call
rorb
pop
add
imul
add
inc
mov
cltd
inc
sub
xchg
or
inc
lret
insb
lods
adc
sub
pop
ja
and
or
je
test
out
xor
jns
add
leave
popf
pop
or
in
mov
stc
jns
lods
stos
adcb
inc
enter
imul
pop
rol
repz
sub
dec
mov
inc
jmp
push
sbb
mov
arpl
xchg
pop
cld
cwtl
es
push
rorb
ds
out
stc
sbb
in
push
sbb
rorl
aaa
mov
rolb
movl
adc
xor
pop
xor
fidivrs
jmp
xor
cwtl
adc
nop
pop
lahf
out
and
test
sub
mov
rolb
leave
inc
aas
fcmovb
and
or
mov
sub
and
and
roll
jp
adcb
fldt
aaa
dec
mov
repnz
and
dec
or
das
and
xor
adc
adc
ljmp
adc
outsl
inc
sub
push
xchg
iret
push
mov
outsl
cmp
stos
incl
es
lea
push
std
addr16
push
jg
nop
inc
add
cli
test
xor
dec
sahf
xor
push
rcl
add
xchg
mov
jb
dec
insl
adc
xchg
and
popa
cmp
call
dec
mov
pusha
pop
mov
into
push
ss
inc
mov
pop
or
cmc
insb
test
aaa
push
ss
popa
clc
inc
dec
imul
sarb
js
out
mov
dec
lods
jae
pop
stos
mov
dec
inc
inc
adc
test
cwtl
jmp
lret
dec
std
enter
mov
cld
into
lods
ja
xchg
dec
mov
inc
adc
imul
es
mov
mov
ss
xor
aaa
and
xor
mov
rolb
pop
pop
rcr
call
lock
jne
div
mov
dec
int
mov
jp
jne
scas
push
jns
ret
loope
dec
imul
jns
loop
jno
dec
cmpb
outsb
inc
imul
jg
push
inc
and
js
xor
test
dec
dec
add
sahf
lret
mull
cmp
aad
pop
movsb
call
insl
xchg
add
leave
inc
in
xor
lcall
addr16
lahf
jge
push
sbb
cmpl
pushf
or
add
push
push
xor
mov
mov
fisttps
addr16
shll
stos
or
cmc
call
jmp
into
jne
inc
xchg
lods
fisubrl
xor
aaa
adc
jne
xchg
jo
fildll
call
mov
cwtl
or
fsubrs
cmp
fisttps
lods
stos
pop
jb
loopne
or
dec
pop
jp
ja
nop
inc
sub
dec
dec
jbe
ljmp
push
ss
or
lret
jl
out
dec
roll
adc
iret
outsb
inc
mov
push
push
jne
inc
loope
push
jmp
dec
sahf
push
inc
outsb
sbb
adc
push
inc
add
outsl
add
sbbl
cwtl
mov
sub
fsincos
ja
pop
sarb
fiaddl
shll
fcmovb
jl
insl
or
aaa
bound
ret
lahf
sub
add
add
jmp
leave
incl
loope
cltd
sub
fs
xchg
stos
in
imul
pop
stos
rclb
pop
add
testl
mov
loopne
push
add
dec
inc
mov
inc
dec
sub
mov
ljmp
lods
out
fs
jb
cmpsl
das
xchg
iret
sub
mov
mov
lods
add
pop
filds
pop
sub
mov
aas
push
test
inc
jo
pop
xchg
cmp
push
mov
dec
enter
mov
inc
jno
roll
adc
test
popf
jmp
incl
cmp
inc
aam
push
sub
mov
lret
inc
xor
adc
rcrb
movl
jae
mov
push
call
incl
add
xchg
or
mov
mov
aad
or
pop
lcall
add
adc
stos
adc
aam
fistl
aam
push
pop
mov
stos
sar
inc
fsubs
inc
mov
cmpsl
or
jae
fucomp
pop
mov
loop
push
ret
push
lods
dec
xchg
pop
hlt
mov
push
sub
bound
dec
dec
or
cmp
push
mov
xchg
sub
mov
movsl
mov
outsl
mov
mov
sbb
pusha
loope
scas
int3
lcall
test
jle
inc
movsb
test
adc
push
xchg
data16
mov
adc
movsb
cs
lock
arpl
dec
jae
jmp
inc
std
and
mov
outsb
inc
inc
jne
push
jge
rol
sbb
decl
mov
sub
inc
mov
push
pusha
pop
xchg
cmp
inc
ljmp
sarl
iret
es
add
mov
lcall
popa
mov
stos
pop
adc
dec
push
or
scas
inc
ss
je
dec
pushl
jmp
adc
or
icebp
cwtl
clc
iret
decl
sbbl
bound
adc
inc
imul
pop
popa
adc
add
mov
mov
and
add
ljmp
cld
or
pop
mov
sub
xchg
ja
scas
jno
cltd
cli
inc
cmp
mov
push
cltd
out
dec
outsb
push
fcmovnbe
push
mov
and
cmp
incl
pop
test
sbb
ljmp
jae
push
pushf
ja
mov
push
mov
pop
sbb
mov
je
cld
cwtl
dec
push
fs
push
or
pop
mov
shlb
je
push
adc
mov
ja
aaa
sbb
or
sub
icebp
fbld
add
push
add
loopne
push
loope
sbb
std
xchg
mov
jbe
in
cmp
adc
add
fimull
fidivs
sub
outsb
pop
jbe
and
les
lods
scas
or
movsb
call
incl
mov
ret
jle
pop
cmp
jno
xchg
add
fwait
xlat
sbb
inc
testl
jb
jmp
cwtl
cmp
mulb
flds
jle
jecxz
or
outsb
push
pop
push
imul
push
mov
adc
fistps
xchg
sbbb
cli
imul
shlb
push
scas
xchg
es
adc
mov
cs
jno
push
outsl
push
testl
decb
xor
push
jmp
loope
sub
mov
in
lock
movsb
and
aas
or
mov
inc
pop
pusha
xchg
xchg
mov
inc
loopne
outsl
adc
mov
xchg
ret
push
popa
repz
bound
pushf
xchg
test
orb
push
fs
les
mov
call
or
ss
lock
jp
cmpb
mov
xor
dec
sahf
pushf
pop
into
mov
shll
xor
ljmp
imul
cmpsl
out
push
jbe
dec
sbb
std
mov
dec
push
add
fidivs
bound
mov
inc
add
aam
push
push
push
test
push
gs
mov
mov
push
jp
stos
lret
push
and
fmulp
sbb
bound
nop
fiadds
std
push
rorb
shrb
clc
rclb
jbe
loope
xchg
movsl
mov
notl
push
popa
test
inc
ss
add
adc
es
fimuls
test
xchg
jns
ret
imul
cmp
xor
insl
pop
inc
shl
pop
js
lret
dec
gs
cltd
mov
mov
rorl
sub
incl
push
fisttps
xchg
mov
dec
inc
out
cmc
lock
jmp
test
add
mov
clc
data16
xor
xor
jae
push
mov
mov
rcll
stc
push
movsb
add
and
jg
scas
scas
jecxz
sub
das
mov
cs
push
mov
mov
into
add
sub
adc
lret
insl
inc
xor
es
lret
fmull
gs
dec
ss
fwait
or
jno
je
push
pop
loopne
scas
in
test
cli
sbb
into
lock
cli
jmp
loopne
test
mov
daa
negb
lcall
and
sbb
add
pop
nop
jb
nop
rol
insb
dec
or
inc
xor
mov
je
ss
fistpll
or
leave
xor
and
ret
clc
clc
popa
test
fsubrs
jl
outsl
lea
xorb
jnp
dec
mov
xchg
inc
or
adc
inc
inc
addr16
aam
cmp
push
mov
ja
add
jmp
mov
mov
push
add
daa
jne
jge
mov
outsb
clc
movsb
js
sub
jb
stos
aad
pop
dec
mov
dec
xchg
dec
pushl
jns
and
dec
jb
mov
jns
mov
adc
mov
fistps
ds
shrl
and
icebp
jmp
iret
jmp
push
adc
mov
rcrb
xchg
jb
jne
inc
mov
mov
js
sahf
mov
dec
add
stc
mov
push
pop
lcall
stos
call
push
mov
test
ss
in
test
xchg
xchg
in
and
mov
cli
push
ret
dec
dec
shl
add
add
std
push
pusha
cli
sarb
push
adc
in
dec
pop
repnz
les
push
in
inc
adc
sahf
cmp
ret
incl
mov
out
andb
pusha
call
out
pop
ret
les
sbb
cmp
inc
or
stc
inc
dec
gs
fcom
or
out
inc
mov
decl
pop
out
ljmp
pop
jbe
int3
imul
xlat
push
pop
push
ret
mov
or
in
aas
pop
push
nop
fiaddl
jl
dec
or
ja
pushf
decl
rcll
add
push
outsb
xchg
pop
pushf
negl
jl
push
test
add
out
push
test
in
lahf
aaa
or
test
cmp
or
push
divb
arpl
lcall
sbb
insl
inc
out
and
popa
add
push
popa
gs
mov
fs
outsl
mov
dec
call
add
adc
push
mov
nop
mov
std
lods
pop
and
js
push
aad
adc
mov
push
dec
fs
je
add
setb
cwtl
inc
data16
mov
jle
sar
outsl
outsb
inc
jno
call
dec
xor
sbb
or
hlt
xor
add
sbb
imul
cmpl
push
xor
aas
xchg
adcb
push
push
lahf
es
cld
push
push
cld
test
in
incl
fstpl
cld
mov
or
fiadds
pushf
jae
or
mov
add
jl
pop
lods
std
add
jmp
sbb
ret
cli
push
sbb
rolb
push
ljmp
lret
jb
mov
imul
fwait
outsl
icebp
lock
jp
adcb
rcr
nop
stos
int3
nop
inc
sub
push
mov
push
mov
dec
mov
sub
cmovae
xor
push
int3
mov
push
cld
lea
add
cmpb
ffree
pop
into
or
cwtl
xor
test
inc
out
shlb
les
push
jae
or
js
jb
add
movsl
sbb
dec
and
push
das
push
and
inc
mov
cmp
cld
adc
cli
loop
xchg
push
sbb
mov
inc
sahf
pop
jl
pop
clc
dec
lock
push
inc
and
adc
adc
sbb
pushl
ret
rol
mov
ffree
sbb
ja
dec
insb
bound
js
clc
jmp
add
gs
into
aad
mov
adc
test
mov
ljmp
jp
call
das
or
int
xor
cld
mov
call
sbbb
xchg
sbbl
scas
jo
jb
sub
xchg
nop
mov
push
rclb
adc
rorl
dec
rorb
lret
in
add
dec
or
addb
rolb
sub
mov
testb
mov
add
stos
push
fisttps
rclb
sbb
sbb
test
or
bound
ret
rorb
sub
add
popa
add
bound
andb
xchg
icebp
inc
or
inc
insl
insl
mov
fadds
repnz
adc
xchg
mov
cmp
sub
mov
adc
pop
std
inc
mov
jb
out
add
aas
sub
add
andb
bnd
xor
add
add
xor
adc
jno
inc
inc
pushf
jns
rolb
xor
or
sub
cmp
mov
sti
cltd
loop
xor
xchg
sbb
cmpsb
test
test
ror
inc
sub
aad
insb
lods
or
mov
fistpl
and
aaa
mov
jno
sub
cmpsb
adc
or
xchg
stos
dec
or
push
mov
dec
lods
push
cmp
pop
inc
pusha
adc
or
scas
lock
sub
incl
fadds
xchg
fs
mov
imul
std
cmp
sahf
repnz
jb
test
shlb
hlt
enter
jl
jmp
lahf
test
mov
mov
cli
inc
enter
orl
inc
push
inc
je
xor
data16
push
out
pop
lcall
orl
fdiv
xor
js
insb
inc
or
decl
stc
out
mov
xchg
in
inc
or
cmp
jle
inc
dec
mov
add
std
sbbl
xchg
incl
jge
mov
movsb
int3
pushf
pop
xchg
in
movsl
jbe
mov
mov
push
movsb
jg
lods
dec
cmp
fsts
push
in
xchg
test
movsb
add
movsb
dec
aas
sbbb
push
inc
push
cli
xchg
rorb
sbb
or
orl
cmp
xor
popa
lods
xchg
adc
pushf
jb
and
test
es
shlb
aaa
jns
inc
arpl
lock
jp
push
incl
into
xor
ljmp
loop
inc
pushf
fs
xchg
add
xchg
imul
cmpsb
jno
sbb
jmp
xchg
jbe
testb
insl
imul
push
clc
sbb
mov
jns
fldt
mov
adc
jl
sar
pushl
xchg
sbb
inc
mulb
push
mov
and
mov
xchg
mov
xor
cld
mov
repnz
nop
fs
add
cmp
push
mov
mov
adc
dec
pop
dec
or
outsb
push
jmp
sub
incl
push
std
mov
pop
xchg
scas
inc
inc
fdivrp
fistps
jmp
inc
call
lret
int3
pop
out
repnz
pop
inc
out
push
inc
adc
mov
ss
lcall
je
or
xlat
dec
mov
lret
popa
xor
push
push
jnp
scas
ret
shll
or
aaa
and
aad
xchg
sti
jmp
sti
sub
and
or
loop
cmp
xor
and
mov
or
lret
sbb
mov
pop
push
pop
inc
sub
insb
inc
ljmp
mov
clc
hlt
sub
fstl
hlt
cmc
fmul
sarb
push
jo
ja
adc
outsb
ficoml
clc
aad
inc
inc
jno
dec
and
and
repz
inc
mov
push
pop
sub
adc
dec
xchg
xor
out
pop
inc
shr
pop
add
xor
dec
je
ljmp
jl
cld
lock
fnstenv
mov
popf
jg
inc
cmp
mov
cmp
xor
push
dec
aaa
jmp
jmp
sbb
cli
movsb
inc
jbe
mov
fcmovu
or
adcb
mov
insb
push
cs
mov
xor
jo
sub
dec
jg
inc
daa
lcall
decl
jnp
iret
fadds
adc
popf
jmp
out
xor
test
pop
dec
cwtl
sub
aas
ret
outsb
adc
insb
icebp
insb
shlb
out
jae
pop
cmp
inc
call
fistps
stc
pushf
adc
jecxz
movsl
xor
add
push
adc
lods
int3
add
or
cwtl
mov
or
jo
add
arpl
push
xchg
rolb
int
jnp
ret
pop
xor
adc
loopne
jo
pop
cmpsb
dec
enter
repz
fstl
adc
cmp
mov
add
sub
loopne
test
lahf
push
ficoml
add
and
add
pop
pop
pop
and
xor
xchg
add
sub
and
or
sbb
in
sbbb
cmp
add
adc
and
jns
cld
lcall
dec
call
repnz
adc
pop
adc
mov
add
mov
xchg
pop
cs
mov
mov
subl
mov
ret
ss
push
lcall
mov
fbstp
gs
xor
cmp
xchg
cli
inc
out
and
cmp
lldt
dec
les
xchg
cmp
pushf
mov
sbb
inc
leave
push
sub
jecxz
movsl
adc
add
popa
loop
push
or
inc
inc
rorl
and
xor
mov
bnd
adc
loope
or
xchg
adc
ja
das
sub
cmp
lcall
mov
cli
pop
ret
fnstcw
gs
push
imul
jae
add
call
inc
sarb
test
lret
mov
imul
lret
adc
jne
lock
sub
xor
push
or
aas
ret
jae
jle
mov
add
inc
xor
dec
xor
inc
fs
add
cmp
int
add
mov
jmp
scas
aad
jl
ret
and
mov
push
sbb
rorb
add
and
inc
jno
imul
sti
inc
push
push
outsl
mov
inc
arpl
outsb
push
aaa
fmuls
and
adc
data16
fbld
jae
inc
ja
lods
xor
adc
jo
repnz
rcl
scas
dec
aam
daa
dec
xchg
push
jnp
int
cwtl
mov
jne
std
cs
mov
jmp
js
aam
ret
dec
dec
push
adc
jg
or
popf
fisubl
adc
sbb
dec
xchg
shlb
push
mov
inc
ret
loopne
push
or
xor
or
or
xlat
inc
or
ret
and
movsl
or
pop
adc
mov
fcomp
mov
js
xchg
ret
xchg
push
adc
or
stos
iret
lods
inc
dec
clc
shlb
cs
xor
jb
jae
test
pop
lcall
or
push
dec
push
jns
push
fisubs
enter
cli
adc
xchg
repz
push
popa
sahf
push
fidivrs
sbbl
pop
fdivrs
and
xchg
sub
jle
outsl
mov
push
dec
jae
push
xchg
fstpt
xor
lcall
sbb
movsb
mov
rcr
data16
shll
sub
xchg
lds
hlt
mov
or
or
inc
mov
jb
lds
in
sar
and
or
enter
test
push
jg
jo
pop
inc
pop
sub
xor
pop
sub
adc
inc
fucomi
mov
cwtl
iret
adc
leave
repz
imul
dec
ret
jbe
jb
mov
imul
jo
in
push
jo
mov
push
push
jp
add
ljmp
inc
inc
xchg
lret
or
mov
xor
cmp
psraw
out
jmp
int
sbb
push
xchg
aad
loop
adc
loop
cli
inc
adcb
or
outsl
ljmp
inc
inc
aas
jnp
cmc
je
mov
icebp
push
sbb
and
sub
sub
inc
inc
arpl
jmp
and
shlb
cmp
addb
fucomp
push
sbb
pop
mov
shll
pushf
and
icebp
leave
dec
cmp
lods
mov
movsl
lock
cmp
pop
movl
std
sub
inc
cwtl
jmp
inc
sub
add
dec
sbb
mov
xor
inc
jecxz
das
mov
jl
sarl
loop
mov
gs
jg
pop
out
xor
jae
bndstx
jmp
xor
adc
lahf
push
mov
aaa
push
pushl
xor
mov
sub
mov
adc
and
mov
call
movsb
lahf
addr16
xchg
pop
loopne
aaa
mov
mov
popa
dec
ret
rorb
out
es
mov
and
cmp
je
add
out
pushf
insl
or
pop
imul
jae
stos
sbb
mov
jg
xor
test
adc
add
sub
jmp
pop
pop
les
add
test
cmp
mov
pop
test
ds
test
push
jbe
cld
dec
js
sub
clc
xchg
inc
lcall
aas
lods
mov
cli
decl
xchg
js
aam
push
add
lds
jo
mov
rcll
jge
jmp
cmpsl
jnp
pop
and
imul
sbb
mov
inc
inc
mov
cwtl
add
dec
mov
mov
movsb
cmp
mov
jmp
dec
add
xor
jne
sti
pop
icebp
push
mov
jmp
push
pop
insb
inc
add
lods
push
push
xchg
push
outsb
inc
jmp
cmc
pusha
push
adc
push
add
push
cmpb
pop
push
or
fwait
stos
adc
push
mov
pop
fincstp
and
in
rcrl
div
ds
push
fsubrs
dec
push
fcmovbe
pop
cli
subb
mov
je
xor
test
hlt
inc
add
dec
push
dec
push
outsb
int3
imul
shl
push
fcoml
jmp
imul
loope
popa
loop
dec
add
dec
xchg
pop
or
fldt
jb
adc
out
mov
sub
rclb
ret
test
adc
lock
insl
outsl
mov
jne
and
pusha
jl
repnz
or
push
inc
lods
mov
jno
lahf
add
push
jno
out
jmp
ret
ja
jae
push
lcall
push
jl
jl
pop
sahf
mov
inc
mov
xchg
clc
repnz
std
mov
pop
ds
jbe,pn
dec
js
jp
jp
jno
push
leave
xor
xchg
and
int
push
je
xchg
daa
cmpb
push
cs
ljmp
shll
dec
or
cli
pop
in
and
push
add
pop
incl
inc
sbb
jmp
adc
loopne
inc
in
out
inc
cmpsl
incb
inc
add
jmp
jg
adc
loopne
test
imul
or
pusha
dec
push
adc
mov
loopne
js
fwait
andb
xor
je
push
or
push
push
aas
fmuls
sbb
add
xor
sub
pusha
outsb
push
pushl
outsb
push
cmc
cs
fisttps
loopne
pop
add
xor
ds
cmpl
dec
aaa
cltd
shr
jb
xchg
mov
aas
cli
mov
and
inc
lcall
lcall
pop
dec
les
jmp
xor
loopne
mov
mov
gs
dec
push
push
add
sbb
out
mov
sbb
cmp
inc
mov
je
fs
xor
mov
pop
cmp
pushl
cli
or
mov
aad
or
imul
adc
mov
inc
clc
xchg
mov
out
jno
push
iret
rclb
dec
dec
xor
aaa
add
outsl
mov
push
outsb
js
dec
mov
loopne
jmp
or
lock
cwtl
mov
add
ljmp
sbb
adc
push
mov
jbe
or
adc
add
add
iret
les
push
movswl
cltd
sub
pop
idivl
adc
imul
pushl
jnp
adc
mov
dec
or
pusha
stos
lods
cmp
sbb
pop
test
das
and
pop
into
shr
lods
mov
je
push
popa
test
dec
das
mov
aaa
enter
cmp
aam
dec
out
bound
sarl
hlt
shlb
lock
dec
sub
inc
mov
mov
insb
adc
rclb
shl
dec
cwtl
enter
xor
mov
andl
push
arpl
fs
arpl
fistpll
adc
lds
int3
out
clc
in
pop
out
push
ds
pop
ret
jae
sub
pop
and
sub
js
lcall
sub
inc
mov
jo
sub
lret
arpl
scas
mov
push
aam
push
movsb
fstl
ret
add
ficomps
pushl
sbb
and
jbe
xlat
adcb
shll
xchg
out
in
sbb
xor
mov
or
js
dec
sub
xor
and
jmp
inc
fadds
fisubrl
test
jmp
aaa
add
stc
inc
jg
mov
stos
mov
pop
and
inc
mov
xchg
sub
pop
dec
test
inc
adc
mov
add
pusha
fdivrl
push
dec
cmp
sbb
and
aaa
rolb
clc
push
shrb
dec
imul
pop
lock
call
mov
fists
shrb
inc
and
pop
movaps
dec
push
adc
mov
mov
call
dec
je
push
adc
dec
loopne
incl
xchg
mov
mov
push
mov
ret
rorl
lcall
aad
dec
push
dec
bound
out
dec
push
inc
add
out
jns
push
call
inc
ret
push
jge
jmp
insl
or
cld
pushf
mov
cmpsb
lds
fwait
mov
or
jns
sti
repz
pop
fidivrs
sbb
adc
dec
lock
je
and
aaa
jno
sbb
or
nop
jne
stos
mov
mov
mov
call
xchg
ljmp
mov
stos
sbb
pop
add
adc
stos
push
add
push
fs
mov
insl
roll
scas
fs
ljmp
push
push
cmpsl
fwait
popa
cwtl
and
lcall
jae
fs
mov
add
imulb
outsl
mov
outsl
ret
jb
and
add
ljmp
cli
and
mov
jbe
dec
je
dec
xor
push
xchg
shll
ds
repnz
push
js
jbe
dec
xor
inc
ds
mov
mov
std
cmp
sbb
sbb
cmp
sbb
and
or
xlat
sub
inc
pop
aam
pop
inc
js
inc
xor
xlat
and
dec
pusha
das
xor
outsl
and
and
decl
pop
sbb
outsb
int3
lahf
cmp
push
xchg
push
cli
sbbl
sub
shr
gs
inc
js
pusha
inc
ss
inc
adc
movsb
cmc
les
push
xor
inc
add
lret
xor
incl
jae
push
dec
push
and
lret
push
push
cmp
sbb
fdivp
or
inc
lcall
cmp
mov
imul
inc
dec
add
in
or
push
aas
movsb
dec
je
icebp
or
ja
push
ja
clc
ja
in
add
dec
fisttpl
sbb
ja
mov
jl
in
dec
test
cs
mov
les
fcmovnbe
add
test
daa
jns
into
dec
xchg
scas
pop
inc
outsl
insl
js
dec
dec
sub
or
je
xor
dec
pop
aas
fldcw
cwtl
arpl
nop
clc
call
hlt
xchg
add
das
xchg
cmp
fimull
stos
cmpsl
dec
in
or
jmp
test
xchg
pop
lods
lock
scas
mov
dec
js
mov
cmpb
shlb
sahf
lods
inc
cmpsb
stc
in
nop
sbb
pusha
push
and
sahf
leave
aam
push
push
cmp
imul
push
ljmp
or
dec
cmp
cwtl
lock
xchg
iret
hlt
mov
nop
mov
int
outsb
inc
dec
pop
or
shlb
or
ds
fimuls
mov
inc
movsl
test
decl
pop
sbb
sub
aad
dec
add
mov
je
addr16
out
sbb
push
js
cli
sbb
adc
loope
or
push
outsb
xor
or
add
jnp
les
orl
dec
aas
ja
pop
push
jno
xchg
push
jle
mov
sbb
or
xor
call
dec
pusha
int3
mov
test
out
dec
sbb
xor
dec
into
mov
cld
ret
pop
push
jns
addr16
imul
jmp
pushf
inc
push
push
lcall
push
pop
adc
pop
push
sbb
das
pop
outsb
lcall
movsb
cmpsl
pop
pop
push
es
xor
push
mov
sub
mov
inc
mov
push
add
sbb
incl
in
cltd
push
sbb
mov
sub
movsb
sbb
inc
xorb
adc
inc
sub
lret
mov
test
std
cmpl
push
test
xorb
xchg
mov
push
clc
xor
cmp
push
and
ljmp
adc
inc
xor
cmp
inc
pop
lods
inc
or
sti
loopne
ss
std
cltd
jecxz
xchg
xor
insl
into
repnz
cmpl
xor
mov
pop
pop
js
cwtl
mov
outsl
sbb
mov
dec
add
add
xchg
jl
jmp
loope
popa
clc
out
cltd
into
icebp
cltd
mov
out
pop
inc
leave
mov
js
int3
outsb
push
xor
xor
or
aaa
inc
imul
ss
ss
push
test
leave
icebp
sbb
repnz
inc
or
out
push
addr16
sar
mov
popa
dec
inc
movb
mov
pop
mov
decl
inc
adc
std
int
stos
cltd
jns
dec
xchg
leave
loopne
pusha
lods
jecxz
arpl
dec
imul
inc
aam
mov
jne
loope
add
pop
push
cmp
les
ret
dec
mov
adc
scas
push
sbb
rolb
pmulhuw
sub
xlat
pushl
dec
ja
xchg
xchg
mov
adc
icebp
adc
xor
sbb
xchg
cmp
mov
repnz
inc
dec
push
dec
test
or
ret
pop
dec
lock
movsb
ds
xor
out
lock
leave
fbld
out
data16
push
and
out
aas
cmpsl
sbb
in
fstps
fimull
push
les
mov
inc
sbb
add
jo
mov
dec
movl
test
dec
pusha
jp
pop
dec
lcall
mov
call
mov
test
lcall
clc
out
push
add
jne
cmp
jae
push
sbb
inc
imul
mov
notb
sub
fisttpll
push
lea
mov
inc
sub
ret
into
test
jl
negl
or
hlt
fimuls
jbe
data16
pop
xchg
mov
clc
sbb
jle
bound
xor
or
jle
and
inc
xor
sbb
jle
mov
shrl
cmp
sbbb
hlt
dec
clc
mov
iret
sub
outsb
mov
out
dec
ljmp
push
jae
dec
jge
push
jmp
into
jne
stc
or
pusha
xchg
jnp
sbb
lcall
jge
or
adc
idivl
jecxz
adc
adc
stos
xlat
mov
lret
es
xor
push
mov
jo
add
lods
adc
xor
push
xchg
test
jb
lock
inc
adc
inc
jp
xchg
int
pushf
push
xlat
jb
sub
cmp
mov
sub
arpl
sbb
xor
or
insb
lock
or
enter
inc
pushf
imul
je
and
cld
decl
dec
sbb
pop
out
pop
lret
daa
cmp
js
scas
pop
pop
and
nop
pushw
movsb
inc
xchg
pop
sbb
inc
adc
cmp
sbb
sub
mov
add
or
fucomp
jg
jb
cmp
loopne
imul
or
dec
add
pop
jns
arpl
xor
inc
das
dec
mov
xor
jg
xchg
ja
bound
pop
mov
mov
lea
pop
call
xor
aaa
stos
dec
aam
idivl
and
lcall
cmp
jecxz
sub
sbb
cltd
push
dec
repnz
lea
mov
sahf
cld
dec
stos
daa
sub
xchg
xor
decl
ret
jg
clc
dec
dec
dec
fsubr
mov
pop
jle
and
jbe
sub
mov
fistps
dec
add
clc
clc
loop
enter
dec
outsl
outsl
xor
ss
pop
inc
and
mov
decb
push
sub
adc
lcall
enter
mov
xor
add
pop
sub
icebp
sub
mov
xor
sub
push
lcall
mov
push
movd
imul
mov
lods
dec
ret
out
scas
das
xchg
or
jge
adc
fscale
or
adc
pop
out
cltd
push
dec
js
roll
insl
push
fimull
jne
out
dec
inc
add
mov
mov
add
fisttpll
js
stc
dec
cmp
fcompl
add
test
or
clc
adc
shlb
push
or
xchg
mov
lock
not
ret
sub
jnp
andl
and
push
ljmp
add
push
loopne
or
cmc
dec
sahf
mov
lret
daa
out
dec
or
mov
inc
mov
dec
fs
ljmp
add
notl
sub
bound
sub
jns
xor
or
lret
aaa
lss
pop
mov
mov
dec
mov
jp
je
pop
xorb
push
xlat
in
inc
pop
inc
mov
into
inc
cmpsb
test
add
pop
or
bound
nop
je
push
cs
incl
add
or
and
lret
lcall
shrl
aad
lret
cmp
rorl
sub
subl
push
mov
jb
cmp
fwait
sbbl
push
ljmp
inc
ljmp
cmp
mov
dec
int3
fcomps
daa
scas
mov
jno
sub
mov
jp
imul
incl
add
adc
out
mov
sub
pop
mov
push
daa
outsb
ret
and
int
out
and
cld
andb
insb
sbb
outsb
cmp
pop
inc
pop
mov
inc
xor
lret
xchg
loope
lcall
jb
pop
cmp
aam
mov
dec
popa
add
pop
or
and
or
dec
xor
out
lret
inc
jnp
inc
jno
xchg
mov
rorl
ss
mov
lcall
iret
sub
xchg
xchg
add
pop
sub
jns
arpl
adc
ljmp
pusha
std
rorl
xchg
cwtl
mov
out
xor
inc
inc
lcall
xchg
je
cmc
sbb
clc
push
pop
mov
mov
inc
xchg
in
mov
cmc
pop
adc
stos
push
arpl
int3
ret
pop
sar
out
mov
aam
lods
aaa
push
push
jns
push
jmp
mov
mov
mov
aad
outsl
loopne
std
inc
pop
add
sub
inc
popa
dec
and
pop
sbb
rorb
idivl
push
inc
inc
xorl
or
jno
es
jb
scas
lret
cmp
fbstp
dec
push
in
and
sbb
adc
fstl
dec
xchg
idivl
xor
push
mov
lcall
mov
je
dec
lret
pop
addr16
inc
dec
ljmp
out
sbb
arpl
push
sbb
mov
inc
lahf
or
mov
pushl
xor
mov
jle
out
or
fwait
dec
xor
cmp
push
mov
pop
push
jo
dec
inc
inc
es
data16
dec
test
dec
or
xor
xorl
xchg
loopne
test
mov
movsl
and
mull
andl
or
sti
or
push
dec
js
test
aaa
mov
push
ss
inc
inc
fcmovnbe
sti
lret
cld
mov
fs
adc
sub
xchg
xchg
and
inc
ret
and
jmp
mov
int
inc
cmpsl
pop
adc
jno
fmuls
fstl
sbb
adc
loop
xor
xlat
adc
mov
mov
jg
inc
inc
call
lret
loopne
add
xlat
fs
mov
sar
fistpll
inc
in
into
or
adc
push
mov
xchg
test
push
xchg
inc
push
shl
push
add
icebp
xchg
arpl
push
movsb
jg
push
dec
test
dec
stos
inc
fimull
out
icebp
std
int3
call
aas
sub
push
sub
or
add
mov
push
dec
adc
das
outsb
ret
inc
js
jge
out
fistpl
inc
adc
xlat
stos
scas
daa
adc
sub
int3
imul
and
dec
adc
cmp
aad
mov
test
lds
mov
dec
and
xchg
std
je
sbb
out
mov
inc
aaa
out
cld
faddp
xor
ret
or
push
sub
rorl
mov
jmp
push
dec
add
xchg
jmp
cmp
push
jo
or
pushl
push
mov
add
push
jg
daa
test
repnz
in
leave
out
add
adc
and
bound
inc
push
pop
dec
outsl
ret
jb
jo
test
jmpw
test
movsb
out
nop
das
stc
push
negl
xlat
loopne
aas
sbb
out
cmp
xchg
mov
mov
xorb
sub
add
sarl
inc
push
sahf
ja
addr16
inc
dec
add
push
pop
xor
push
sbbb
mov
dec
rcll
fiadds
pushl
sub
imul
mov
fiadds
aad
lock
or
test
sbb
fisttpll
ret
jo
cmp
insb
imul
and
bound
jns
and
push
cmpsb
test
cmpsb
inc
jnp
pushf
nop
mulb
xor
fwait
xor
push
inc
xor
inc
incl
mov
mov
sub
daa
dec
cmc
mov
incl
mov
jno
pop
dec
mov
dec
in
std
nop
inc
cmp
sub
mov
aad
fdivrs
dec
mov
inc
cli
mov
outsl
dec
test
xor
fcompl
cmp
push
rolb
sub
cld
xchg
cmp
cld
sbb
ljmp
mov
push
inc
addb
loope
jb
push
push
dec
pushl
in
roll
repz
xchg
stos
lods
shlb
cmp
mov
xor
push
popa
pusha
aaa
sub
dec
aaa
imulb
adc
jnp
pop
add
jmp
inc
in
pop
ret
push
stc
xor
dec
call
stos
pusha
sbb
sub
lea
xlat
sbb
mov
cmp
cli
rcr
sub
push
jo
xlat
inc
xor
lcall
cmc
mov
xor
fisubs
pmaddwd
sahf
push
aaa
mov
enter
inc
push
mov
add
shlb
adc
insb
jno
adc
orb
mov
les
popa
imul
dec
mov
mov
ret
push
push
inc
and
cmp
imul
sub
ljmp
test
test
cmp
adc
push
pop
mov
push
jns
inc
dec
rorl
mov
pop
pop
add
jmp
in
ret
insb
out
loop
jp
mov
imul
imul
imul
es
ret
iret
pop
mov
mov
inc
mov
subl
jne
push
jmp
xor
or
jp
popa
push
pop
js
mov
cmpsl
nop
fbld
pop
xor
ja
jmp
adc
mov
daa
call
lret
std
mov
test
bound
mov
shll
push
xor
mov
lcall
shll
into
in
push
inc
outsl
mov
out
mov
fs
dec
push
inc
jo
lods
jg
jb
push
gs
mov
ljmp
push
in
mov
in
insl
fs
shlb
repnz
cmpsl
add
mov
daa
pushf
rclb
jmp
ja
dec
test
adc
subb
pop
cmova
jae
outsb
dec
lods
decl
inc
arpl
pop
ficompl
in
ror
mov
int3
push
mov
push
push
test
or
push
and
rcl
cmp
xchg
in
popa
jno
mov
das
cli
mov
dec
shlb
cmp
or
push
je
insb
dec
dec
decl
loopne
mov
bound
xor
pushf
fnstcw
mov
dec
pop
lods
sub
xor
jmp
push
je
mov
lcall
out
jbe
int3
cmpb
mov
sub
repnz
mov
push
pop
cmp
and
inc
and
inc
scas
inc
sub
cmp
call
ds
pop
sub
cwtl
jae
or
push
sub
xchg
mov
jg
adc
mov
xor
loope
mov
ds
inc
enter
or
fsubrs
fadd
stos
inc
arpl
mov
mov
aaa
push
mov
jl
fs
xor
and
shrb
into
cmp
dec
imul
xor
test
ljmp
in
mov
push
test
inc
sbb
xchg
jb
mov
cmp
add
popa
or
dec
mov
test
iret
decb
les
popf
push
insb
lret
arpl
cmp
pop
or
das
inc
dec
mov
mov
std
das
sub
and
mov
fimuls
bound
xchg
push
inc
aas
cmpsl
lods
pop
xchg
add
add
clc
add
aas
sub
inc
mov
imul
movsb
push
xchg
dec
lahf
repnz
ret
movsb
push
push
imul
xchg
jb
push
xor
push
push
inc
add
dec
pop
or
push
clc
and
pop
daa
or
lock
mov
xor
movsb
push
outsb
lahf
in
pop
push
dec
insl
inc
xchg
sbb
push
xchg
push
lods
daa
dec
aas
jmp
inc
jae
sahf
add
adc
into
xor
scas
cmp
add
jg
add
and
shll
dec
ret
jle
pop
repz
push
ret
adc
pop
pop
shl
push
push
stc
std
imul
mov
push
push
add
xchg
push
inc
jmp
pusha
into
movsb
jb
xor
inc
dec
mov
xchg
stos
in
pop
sbb
push
pop
push
pop
cmpsb
sar
aaa
std
lret
insl
lods
std
push
mov
rorl
sbb
pop
dec
pop
loop
push
in
das
jbe
xchg
fwait
outsl
rcrb
shl
push
ss
movb
or
mov
popa
cmpsl
aas
mov
inc
mov
push
jne
pop
dec
xor
adc
dec
std
sahf
cli
jecxz
je,pn
and
cmpl
sbb
sbb
subb
cmpsb
lret
sub
popf
mov
add
js
mov
rorb
xor
inc
fimuls
call
and
data16
and
shll
pop
inc
mov
xchg
inc
and
lea
cld
cmpsb
xchg
inc
lods
movntps
into
jae
mov
pop
ret
or
fwait
and
dec
ja
imul
sub
fdivs
aaa
imul
xchg
ljmp
cli
mov
bound
lock
xchg
push
xlat
fsubl
adc
cmpsl
inc
es
push
jns
dec
subb
pop
mulb
mov
test
fucomi
aaa
bound
or
dec
arpl
rolb
cmpsl
sarb
inc
ja
sub
int
push
cld
and
cmpsb
sub
sub
xchg
ret
ud0
mov
and
inc
push
adcb
shl
xchg
negl
in
inc
dec
data16
add
out
mov
add
jge
sub
out
push
gs
addr16
xor
inc
scas
or
cld
incl
std
outsb
es
dec
insb
insl
mov
jb
pusha
jne
adc
pusha
clc
pushf
outsl
lock
jns
rorl
xor
inc
aaa
clc
sbb
clc
push
pop
add
or
jmp
cmp
jg
jecxz
out
jbe
and
scas
call
push
cld
jnp
sub
cmp
mov
jecxz
xchg
xor
jl
idivl
mov
jmp
inc
adc
mov
sti
xchg
ret
jae
xchg
dec
xor
dec
pusha
call
add
mov
notl
mov
inc
sbb
adc
xor
add
pop
inc
xor
push
inc
and
movsl
mov
es
adc
test
add
jb
cmp
imul
jno
aas
icebp
adc
cmp
popa
add
mov
bound
dec
ds
sub
mov
sbb
imul
mov
int
sub
mov
ja
cs
int
mov
ja
fs
xchg
sub
or
mov
mov
add
jo
xchg
dec
xchg
sbb
dec
adc
inc
mov
jp
adc
xchg
or
rcrb
or
push
imul
xor
in
push
enter
inc
jno
cwtl
dec
push
inc
sub
jle
aas
or
add
push
popf
sbb
out
imull
sbb
shlb
cltd
repnz
xor
pop
and
push
scas
or
mov
ret
sar
lret
ljmp
push
jmp
inc
lahf
movsl
xchg
mov
bound
in
xor
xchg
lahf
stos
je
in
adc
pop
cs
inc
push
adc
push
nop
dec
in
pushf
add
add
xor
rol
inc
stc
roll
xchg
shlb
inc
lret
ret
push
pop
test
add
adc
js
leave
sbb
pop
jb
lahf
out
aam
xor
cmp
add
xlat
addr16
inc
pop
rorb
dec
and
or
sbb
xor
call
sbb
inc
xor
or
nop
xchg
xchg
sbb
cmovns
xchg
push
mov
add
jmp
mov
das
aaa
sub
xchg
or
lcall
rcl
call
cld
fwait
pop
sahf
outsl
scas
les
adc
into
ror
insl
test
dec
call
lcall
dec
xor
call
inc
cs
push
ja
dec
pavgb
mov
ret
call
push
movsb
pop
mov
faddl
push
in
cli
jmp
jb
xchg
dec
inc
adc
add
push
inc
jb
inc
pop
ljmp
mov
cmc
inc
aaa
aaa
add
data16
jns
push
inc
mov
inc
push
or
bound
imul
and
js
pop
outsb
or
outsl
dec
sub
adc
inc
into
pop
jmp
out
and
cmp
addl
and
mov
dec
cld
xorl
dec
pop
lock
jae
je
add
mov
inc
lock
flds
insb
inc
push
movsb
mov
sbb
imul
sbb
pop
pushf
cmp
pushl
std
rcl
es
and
repnz
jbe
fwait
rcrb
imul
shll
adc
mov
or
add
jmp
mov
sbb
xor
aam
out
dec
jb
subl
xchg
push
scas
mov
daa
sbb
xor
xchg
rorl
aaa
cwtl
sbb
mov
and
mov
sbbl
stos
movsl
add
pop
aaa
cs
dec
sbb
jne
lcall
sbb
push
and
add
and
ret
xchg
inc
dec
mov
test
cmp
or
xchg
int3
shlb
add
jecxz
push
xor
lea
inc
xor
mov
mov
stc
dec
sub
sbb
push
leave
test
test
subb
pop
insl
outsl
jg
mov
inc
lea
jae
push
rolb
repz
mov
sbb
mov
cld
orb
mov
les
in
fistpl
cmp
mov
xchg
ret
pushf
xchg
or
inc
push
mov
dec
inc
add
nop
cmp
cmp
xchg
pop
gs
pop
scas
sub
lahf
mov
add
daa
es
ss
icebp
pop
imul
sub
push
cmp
sbb
inc
bound
mov
cmp
test
adc
cmpsl
mov
jb
sar
imul
call
add
shlb
addl
xchg
mov
subb
popl
adc
pop
adc
xchg
test
shlb
bound
adc
add
mov
inc
mov
sub
pop
mov
in
movsb
shlb
lods
or
push
xchg
or
icebp
xchg
adc
add
popf
pop
rclb
sbb
push
xor
gs
push
in
addl
mov
adc
dec
cmp
loope
mov
inc
inc
cmpsb
leave
jae
adc
mov
cmp
test
lcall
add
pushf
hlt
iret
bound
dec
into
ficoml
dec
ss
js
pusha
ficoml
nop
dec
fidivrl
mov
mov
inc
cwtl
fs
jne
cmp
inc
jo
loopne
pop
pop
mov
bound
pushl
movsl
and
test
clc
push
xchg
outsb
push
in
js
inc
popa
adc
arpl
mov
push
repnz
add
dec
push
mov
pop
mov
pushl
xor
repnz
hlt
xchg
add
fisubrl
add
mov
cs
lret
push
or
add
decl
hlt
or
testb
push
frstor
loopne
and
cs
xor
add
jb
es
cwtl
popa
pop
ja
mov
lock
adc
xchg
in
push
pop
mov
adc
add
rol
jmp
fneni(8087
fidivl
pushf
es
fimuls
fistl
lea
add
inc
mov
je
xor
mov
cmp
jae
dec
ljmp
jl
sbb
inc
sub
sbb
loope
jle
pop
pusha
pusha
and
jmp
mov
std
mov
cmpb
mov
and
call
mov
add
shrb
stos
jmp
and
mulb
ret
jo
js
xor
mov
fs
jg
out
mov
out
xor
pop
int
jl
dec
inc
shll
bound
stc
cmp
fstl
aas
stc
push
faddl
add
mov
clc
data16
mov
add
jp
push
inc
fwait
pushw
mov
nop
xchg
sub
mov
mov
outsb
arpl
test
orb
pushf
imulb
xor
push
addr16
cltd
mov
insb
sub
dec
xchg
push
cmp
test
sub
test
mov
es
push
mov
mov
into
out
inc
mov
aaa
cmpsl
test
scas
fcomps
mov
pop
sub
add
insl
pop
inc
sbb
imul
push
ljmp
cwtl
push
inc
imul
dec
or
xor
sbb
mov
sahf
xor
pushl
or
and
repnz
xchg
test
in
mov
icebp
mov
jne
lahf
int
sbb
push
lock
stos
mov
aaa
js
outsl
xchg
sub
rorb
mov
and
ljmp
and
push
sbb
fldl
lret
mov
daa
nop
dec
or
aaa
scas
unpcklps
les
pusha
cwtl
mov
push
jno
mov
pop
inc
test
dec
pop
dec
call
mov
and
push
push
dec
cmp
mov
push
in
pop
pusha
add
faddp
mov
add
clc
imul
stc
shll
push
rorl
inc
push
jmp
jne
inc
movb
adc
dec
push
in
std
sub
push
scas
cli
push
jg
hlt
ror
add
mov
ret
mov
jae
and
aaa
icebp
jmp
xchg
inc
arpl
test
gs
insb
cmpl
scas
dec
jl
filds
pop
fldenv
mov
dec
ss
jg
pxor
xor
lcall
mov
add
sar
test
and
mov
push
dec
ljmp
stos
or
hlt
xor
adc
scas
mov
cld
das
xchg
add
cmp
lret
stc
xchg
popa
repnz
xchg
add
adc
popa
cmp
dec
pushf
outsl
popf
test
ficomps
mov
xor
sbb
mov
filds
pop
repnz
imul
in
call
jmp
subl
inc
inc
loopne
xor
test
sub
rclb
cwtl
test
pop
push
dec
add
add
or
mov
fistl
adc
jp
aaa
add
push
push
and
xchg
jo
out
idivl
std
pop
and
fs
fs
lods
pop
or
add
jb
mov
in
sar
jp
dec
ja
xchg
loopne
dec
addb
add
insl
shl
sahf
negl
dec
sbb
adc
mov
std
pushl
stos
xchg
ja
jl
and
xchg
add
repnz
jl
rcrl
mov
jb
xchg
sbb
shlb
inc
inc
mov
push
sbb
mov
bound
inc
stc
pop
jecxz
js
sub
stc
clc
jg
jle
cmp
mov
repz
mov
push
dec
dec
mov
fbld
push
xor
inc
cmp
outsl
mov
orb
jo
jge,pt
lret
push
mov
orb
pop
js
or
sbb
stos
faddl
loopne
subl
addr16
push
mov
js
dec
call
jbe
lret
push
movsb
or
xchg
test
jmp
xor
ljmp
notl
ret
jb
inc
popf
inc
xor
pop
stos
mov
add
add
or
push
call
cld
stos
push
fstps
stos
bound
pop
fstp
mov
jg
xor
ja
sbb
xor
lret
xchg
xchg
xchg
test
sbb
push
dec
insl
dec
pop
pop
mov
push
fs
inc
inc
push
inc
loop
leave
mov
std
jo
je
adc
inc
xor
insb
xor
call
lret
test
push
mov
bound
std
incl
xor
mov
les
sbb
int3
adc
push
or
pop
bound
insb
ss
pop
jno
jo
inc
pop
js
push
in
das
or
cmc
rcl
mov
pop
out
mov
scas
xchg
movsb
jbe
jbe
xchg
sti
or
add
ss
push
mov
sbb
int3
ss
popa
adc
outsb
cmp
xchg
outsb
imul
mov
mov
jg
push
sub
test
lahf
xchg
ljmp
mov
in
mov
lret
pop
into
sbb
sbb
pop
push
imull
out
icebp
imulb
out
les
pop
adc
jae
lods
xor
jo
xor
add
jbe
call
dec
inc
xor
je
sub
sub
pop
jae
insb
mov
and
cmp
push
mov
aaa
in
adc
cli
add
sbb
push
inc
lea
call
rclb
mov
test
loope
enter
incl
push
test
jo
nop
xorl
popa
push
je
rol
mov
xchg
lret
xchg
js
stos
mov
gs
sbb
aas
sub
xchg
js
in
fisttps
xchg
out
or
ljmp
xchg
mov
adc
call
push
jns
loop
in
cld
inc
pusha
lea
add
mov
xlat
jecxz
dec
jb
daa
out
in
cmp
std
icebp
mov
pop
roll
ret
sub
addb
and
pop
push
jae
cltd
sub
stos
fdivp
ja
mov
mov
nop
and
scas
outsb
sub
jae
fstpl
dec
daa
sahf
movsl
arpl
lcall
sub
jno
fsubl
jno
xchg
xor
add
mov
movsb
sti
cmp
inc
mov
xor
push
push
inc
xor
outsl
sub
mov
fistpll
dec
xor
inc
pushl
xor
push
jnp
cmc
push
nop
out
xorb
ret
cmp
mov
xor
xor
sbb
icebp
sub
out
inc
mov
xchg
inc
aaa
sti
js
es
ffreep
ret
lods
add
stos
mov
lods
xor
imul
inc
jp
jle
dec
cli
insl
push
jno
add
paddusb
ficomps
pusha
shll
push
or
fisttpll
stos
mov
sahf
pop
jecxz
dec
or
xchg
test
insl
jb
addb
pop
inc
repz
inc
fnstenv
outsb
inc
imul
dec
mov
data16
cmp
jle
cmpsb
mov
jg
loopne
adc
pop
jp
dec
xor
pop
jne
or
ds
sahf
xchg
repnz
cld
dec
fisttps
imul
mov
mov
cmpsb
or
xchg
andb
je
push
pushl
les
pusha
sub
xor
test
mov
aaa
daa
jbe
sub
mov
mov
movsl
rcll
mov
and
cmp
inc
arpl
jno
cmpsb
xchg
vmwrite
in
in
es
dec
inc
lcall
sub
xchg
mov
fsubrs
xor
int
in
jnp
movsb
roll
test
jecxz
data16
adc
cmpsb
lock
cwtl
insl
jl
movsb
bound
sti
dec
jle
das
lret
cmpb
adc
lods
add
lods
int3
daa
das
xchg
or
pop
or
mov
add
inc
mov
sbb
jo
pop
pop
jns
pop
test
sbb
or
xchg
fisttpll
fdivl
jne
cmpsl
pop
sbb
dec
call
pop
add
dec
push
add
mov
mov
xchg
pop
iret
sub
out
cmp
sbb
cmp
jne
mov
jns
dec
aad
add
xor
xchg
sbb
adc
dec
xor
push
into
pop
add
mov
imul
out
loopne
mov
jae
xchg
lret
add
mov
jecxz
xchg
iret
push
xor
push
adc
push
hlt
jmp
insl
add
aam
inc
gs
xor
jle
js
pop
ja
iret
ret
daa
cmp
cltd
addb
push
shrl
stos
pop
addl
loopne
mov
adc
pop
data16
and
repnz
movsl
xchg
push
push
outsb
pusha
sbb
mov
fidivrs
jmp
pop
sub
iret
push
jne
xchg
cmc
call
pop
add
loope
xchg
cmp
mov
cmp
mov
cli
and
sub
aad
cmp
xlat
fwait
sbb
or
xor
dec
mov
jbe
jbe
call
or
sub
sbb
fsts
add
cmpsl
dec
and
mov
cli
clc
icebp
int
arpl
mov
jle
push
or
add
leave
adc
cltd
loope
xchg
add
jl
ja
rorb
mov
inc
cmc
roll
loope
xlat
loop
out
call
inc
cmp
iret
xlat
lret
fdivrp
aad
jno
dec
shll
cmp
mov
sub
cltd
bnd
push
arpl
fsubp
jae
clc
sbb
aam
jmp
jl
roll
mov
cltd
add
call
jns
iret
loopne
repz
mov
add
push
rorl
sub
mov
add
lcall
cmp
scas
shrl
inc
lcall
xchg
aaa
loopne
mov
mov
das
jno
adc
mov
xchg
xor
in
ret
shrb
mov
cmp
popa
js
push
out
in
leave
imul
xor
popa
andb
jge
mov
push
add
popa
rorl
andl
adc
cmpl
mov
fimull
nop
lret
mov
fcmovnbe
popf
enter
and
les
mov
jmp
dec
addl
addb
or
jno
jae
add
loopne
and
push
add
mov
sbb
ret
fwait
add
stos
lahf
push
cmp
jge
adc
aas
iret
adc
test
and
ja
scas
out
jmp
xchg
test
mov
clc
orb
mov
or
pop
xor
lock
sbb
aas
iret
cmc
gs
sbb
sub
lcall
adc
add
rolb
in
and
push
cmp
aam
mov
clc
ljmp
pop
pushf
ret
and
cmp
je
or
stos
push
add
outsl
jle
inc
jno
dec
and
dec
pop
rol
add
inc
push
jno
call
xor
incl
push
dec
sbb
sub
pop
mov
popa
mov
into
movsl
shrl
in
xor
out
test
add
xchg
pop
inc
lcall
jle
or
adc
dec
scas
xchg
push
inc
sar
jne
jae
dec
test
dec
adc
dec
loope
dec
push
inc
aas
xor
sub
cltd
or
fidivrs
int
loop
push
in
hlt
push
je
xorl
aam
aam
imul
in
push
or
adc
jg
popl
int3
push
xchg
das
cld
inc
cmp
mov
test
push
xchg
out
pop
dec
jbe
add
mov
sahf
adc
or
insb
jg
add
fs
pop
sub
incl
fdivl
mov
outsb
jg
lret
pop
inc
ret
std
add
jbe
inc
pop
rclb
imul
cmp
shl
sub
outsl
aaa
cmpsb
mov
icebp
dec
gs
push
lods
cltd
decl
mov
repnz
cmc
or
nop
mov
testb
jp
sbb
push
jp
xchg
clc
dec
or
adcl
aam
jbe
cmp
dec
sbb
divb
and
jg
incl
mov
sub
nop
or
xor
push
cs
arpl
arpl
pusha
mov
lret
jp
pop
icebp
dec
outsl
pop
mov
inc
inc
xor
aad
sahf
mov
loopne
call
pusha
pop
cmp
je
mov
les
clc
cs
fstpt
hlt
repnz
ret
sahf
sbb
xchg
lcall
loop
sub
push
jne
mov
xor
ss
sub
dec
bnd
cmp
jp
imul
cltd
sti
mov
dec
sub
popf
movsl
jo
dec
jle
mov
iret
mov
push
xor
pop
aas
aam
jl
and
popa
out
sti
inc
inc
pop
rol
mov
adc
dec
push
push
jno
add
pop
fmul
jle
outsl
xor
xor
test
xchg
push
dec
inc
mov
push
jns
das
add
or
mov
push
inc
add
sti
sbb
ds
mov
pop
mov
or
lock
adc
and
push
dec
aad
inc
or
call
or
jnp
in
sbb
add
mov
movsl
sbb
and
pop
in
dec
jne
jns
loope
bound
dec
fsub
jno
test
orb
mov
iret
popf
pop
sbb
iret
jmp
and
and
pop
movsl
mov
popf
and
std
add
adc
or
dec
repnz
out
inc
mov
out
or
pop
ret
inc
iret
div
sbb
roll
imul
popa
sub
sub
insl
or
mov
pusha
lods
inc
add
out
pop
adcb
test
sbb
jp
and
cmp
lods
adc
pop
sub
xchg
imul
aam
jne
outsl
add
andl
jmp
mov
je
clc
cmp
mov
mov
jo
pop
xor
add
adcl
sbb
jmp
outsl
std
pop
mov
in
dec
xchg
aad
ror
bound
xor
mov
jp
enter
nop
push
clc
push
les
add
rcl
dec
and
sbb
sub
jo
orl
cmp
pop
adc
xchg
mov
bound
sbb
ret
aad
ds
fadd
inc
mov
and
int
push
sti
push
xchg
push
dec
pop
and
inc
mov
sbb
inc
mov
in
sub
popa
test
cmpsb
sbb
outsl
mov
je
inc
nop
out
inc
addb
call
add
push
push
add
orl
cli
and
pop
lea
push
xor
push
cmpl
cmp
andl
int
rcrb
mov
or
ret
mov
pop
cmpsb
or
add
mov
push
jmp
hlt
mov
loopne
add
push
cltd
mov
cmpsl
add
inc
mov
dec
insb
popf
jge
fsubl
fcompl
and
sbb
pop
xor
sbb
adc
inc
cwtl
cmp
aad
shrb
and
cmpsb
shlb
and
xlat
push
xchg
sbb
std
jmp
rol
dec
xchg
pusha
add
mov
ret
xchg
mov
adc
push
xchg
sbb
in
cltd
sub
scas
je
in
inc
pop
bound
jns
cmp
sbb
aad
in
test
pusha
xor
jo
mov
add
shrl
mov
test
xchg
and
les
scas
mov
into
jbe
sbb
sahf
or
dec
push
es
mov
cmp
data16
call
es
inc
ss
jle
daa
into
notb
jecxz
cmp
dec
jbe
loopne
fdivs
js
sub
ss
inc
mov
mov
xor
add
xchg
push
inc
push
lcall
push
jp
push
enter
ss
mov
es
inc
push
cmp
loopne
out
push
jo
add
xchg
dec
scas
push
fdivr
incl
and
cmp
aad
jle
pop
mov
xchg
mov
and
pop
add
imul
fdivrl
xor
int3
push
push
xor
or
mov
outsb
ljmp
sti
fstps
aad
adc
lock
dec
incl
insb
jbe
inc
ljmp
inc
mov
push
or
fbstp
or
sub
js
dec
mov
fs
orb
mov
jnp
jb
push
dec
dec
and
lret
ret
pop
js
aad
push
inc
insl
imul
or
xchg
push
adc
outsb
xor
lds
out
or
add
std
cmpsl
adc
filds
sbb
faddl
or
push
bound
lret
repz
adc
add
dec
inc
out
jae
push
lock
and
inc
or
call
adc
lcall
dec
jb
xchg
and
out
das
shlb
decl
scas
jl
inc
fdivr
fnsave
lods
sbb
aas
sbb
dec
jecxz
push
push
xchg
pusha
xchg
push
fs
push
adc
leave
movsb
pop
les
add
or
dec
lea
or
lcall
mov
int
in
repz
mov
mov
mov
adc
int3
aam
dec
hlt
jmp
loopne
dec
push
jle
dec
bound
xor
jno
cs
push
and
das
jmp
jne
jmp
addr16
dec
xor
sbb
addr16
pop
lret
push
sbb
push
push
fstpt
loope
aas
arpl
mov
cmc
cli
sbb
das
xchg
popf
ret
inc
lahf
jecxz
xchg
mov
loop
mov
fs
pusha
and
jae
push
je
sti
and
mov
push
pop
arpl
mov
dec
mov
out
mov
mov
xlat
xor
pop
hlt
dec
push
pop
into
or
xor
inc
jmp
rol
xor
sub
inc
mov
popa
sbb
push
clc
sub
dec
xor
add
ljmp
int
fwait
mov
pop
lea
shrl
adc
sbb
decl
mov
addb
adc
jo
mov
cltd
mov
test
movq
aam
xchg
pop
mov
and
fcmovb
mov
js
mov
dec
mov
xor
inc
dec
clc
mov
ljmp
adcb
es
xorb
sbb
lods
scas
adc
das
xchg
insb
cmp
add
sbb
cwtl
les
repnz
pop
push
nop
push
jbe
and
pop
arpl
sahf
or
std
jae
xor
pushf
fcoml
subl
add
scas
arpl
scas
cmp
rcr
mov
jne
or
mov
jmp
or
inc
es
dec
jne
cli
imul
leave
subl
mov
lods
data16
and
push
addb
add
test
inc
inc
pop
and
add
cld
jg
sub
xor
lahf
in
stos
jg
xchg
inc
stos
push
add
ds
jle
mov
xchg
outsb
push
dec
les
dec
je
test
sahf
imul
popl
and
jmp
or
rcrl
into
mov
loope
movl
or
loopne
jge
push
inc
dec
inc
lcall
xchg
ds
xlat
and
inc
bound
jle
hlt
mov
out
mov
ja
push
pop
jl
push
out
pop
test
adc
sti
jmp
ret
mov
jno
add
rolb
pop
daa
pusha
dec
ds
inc
add
or
or
adc
xor
mov
aad
cmpb
stos
push
jecxz
jnp
cmp
shl
dec
mov
rclb
enter
aam
pop
add
sbb
dec
xor
out
add
mov
or
das
mov
insl
cmp
int3
movsl
jecxz
xchg
add
lock
and
lods
pop
fidivs
or
clc
and
dec
repz
call
cmp
data16
xchg
lds
or
sbb
js
push
push
adc
cmp
xchg
push
lret
jg
mov
fldt
fwait
inc
lods
add
cld
filds
rcrl
add
pop
dec
and
and
add
daa
cli
insb
aad
add
lahf
adc
jns
cmpsb
sbb
imul
cmpsl
jb
roll
jl
ficoms
movsl
adcb
mov
lods
mov
or
jne
and
adc
xchg
adc
lea
sbbb
dec
rolb
movl
xlat
jno
xchg
sbb
xchg
dec
in
out
lret
arpl
and
jae
inc
inc
repz
mov
sub
dec
xchg
mov
addb
adc
sub
sahf
jl
xchg
or
add
les
popa
dec
xor
stc
lahf
mov
mov
mov
sbb
adcb
mov
rcll
pop
in
shll
es
adc
jno
push
lret
test
jo
test
inc
addr16
dec
repz
shl
mov
je
inc
push
mov
sbbl
jl
and
mov
adc
cs
sbb
cltd
add
cmp
add
pop
scas
mov
adc
push
sub
insl
loopne
cmp
insl
inc
and
xchg
jmp
stos
pop
mov
cmpsb
mov
or
das
cmp
repnz
cmp
mov
std
sub
insl
xchg
inc
jmp
xchg
mov
aad
cmpsl
lea
xchg
lcall
dec
cmpsl
mov
insb
cmp
lahf
xor
shlb
sub
mov
sub
xchg
hlt
pop
rcr
inc
mov
mov
xchg
xlat
push
gs
mov
sbb
and
imul
adc
add
aaa
pusha
bound
mov
sub
rcrb
outsb
adc
xchg
add
das
mov
pop
inc
in
xchg
xchg
xor
fadds
add
mov
push
add
lds
popf
pop
nop
es
mov
in
popf
jmp
mov
push
xchg
mov
shrb
jmp
mov
inc
filds
fnstcw
imul
and
popa
jae
test
mov
mov
orl
inc
popf
mov
pushf
lcall
pop
add
sbb
xor
add
js
ljmp
mov
jl
cmp
sbb
mov
rcrl
xchg
orb
jno
xchg
sahf
dec
imul
pop
pushf
push
sarb
int3
pop
loopne
sub
stos
fimuls
in
dec
ja
in
push
jae
mov
mov
cmp
in
stos
jge
adc
pop
inc
adc
movsl
das
xchg
add
test
pop
xorl
mov
test
ret
mov
popa
push
jmp
mov
mov
dec
jb
pop
test
jne
xchg
xchg
or
and
push
mov
or
jecxz
in
mov
sbb
std
push
inc
mov
add
fwait
jo
clc
lahf
pusha
pop
push
pusha
ror
mov
ljmp
fldl
push
aas
or
cmp
in
dec
int
lret
xchg
cmp
jbe
mov
in
sahf
fadd
call
inc
dec
jno
and
push
mov
fwait
push
adc
lds
add
adc
cmp
leave
sub
xor
inc
test
dec
sbb
les
pslld
aam
xchg
outsl
mov
adcb
xor
jbe
xchg
xchg
jbe
bound
adc
push
or
jecxz
scas
dec
push
aad
xor
orl
into
vmovaps
sbb
inc
sub
push
adc
mov
js
dec
leave
movsl
out
addb
test
dec
dec
xor
je
xchg
aad
pop
repnz
test
nop
dec
pop
mulb
test
jns
repz
stos
xchg
adc
sub
mov
sbb
les
jp
nop
out
mov
jb
lret
scas
cmp
pusha
dec
sahf
cmp
scas
lea
xor
and
lods
mov
ds
mov
jecxz
repnz
sbb
dec
sbb
nop
or
xchg
jmp
daa
add
inc
cwtl
rcr
and
mov
dec
imul
stc
and
add
sub
and
jle
cltd
mov
outsl
xchg
push
aam
int3
adcl
cmp
repnz
push
repnz
lahf
dec
mov
lods
inc
ret
enter
xor
in
rorb
ds
pusha
mov
inc
mov
xchg
push
mov
jae
call
push
xchg
clc
aam
in
push
push
mov
mov
cmp
jle
scas
lock
mov
mov
bound
iret
xchg
test
repnz
addl
fs
cmpsl
sub
add
pop
sbb
push
cmp
and
in
repnz
xor
and
and
js
sub
popf
outsb
pusha
jp
adc
jo
push
or
pushf
dec
lock
out
addl
mov
pop
xchg
add
vmwrite
insl
popa
inc
mov
xchg
inc
jp
lods
test
or
fwait
es
inc
and
xchg
jle
test
mov
or
stos
or
call
popf
into
es
imul
xor
jo
sbb
pop
arpl
jo
mov
xor
xchg
lahf
sbb
push
test
loope
push
and
fwait
mov
lret
push
subb
push
mov
repnz
loopne
stos
aam
subb
dec
push
mov
lods
or
pushf
pop
and
data16
and
loope
or
rorb
adc
pop
pop
sbb
push
imul
test
mov
mov
xor
add
xor
mov
inc
sub
mov
xchg
add
arpl
stc
add
sub
cmp
sarl
nop
ljmp
push
sbb
sbb
xlat
jns
xor
stos
sbb
lcall
ljmp
sub
fiadds
inc
rclb
mov
sub
dec
jmp
inc
and
inc
inc
cwtl
xchg
iret
call
popf
push
roll
test
je
enter
inc
dec
rcll
and
lcall
jmp
in
inc
enter
testl
pop
xor
xchg
jno
mov
sti
scas
or
and
pusha
sarl
dec
mov
add
test
and
aas
sbb
lahf
cmp
jo
out
mov
mov
push
fdivs
or
movsl
imul
xor
push
ja
sbbb
mov
adc
lods
sbb
pop
aas
sbb
adc
push
adc
ret
dec
adc
add
aam
xor
mov
mov
loop
mov
fs
push
stos
test
xchg
out
lea
pop
loope
inc
mov
cs
cmp
add
ret
sar
imul
mov
xor
imul
jns,pn
xor
popa
test
sbb
sbb
in
add
lcall
repnz
test
flds
mov
jecxz
leave
sbb
gs
jg
fwait
sbb
stc
jge
add
add
int
repnz
mov
cmc
lcall
ja
push
addb
jnp
adc
sbb
mov
mov
stc
lea
ret
test
ret
pop
sub
adc
mov
je
mov
and
mov
sarl
bound
ss
mov
loop
xlat
test
dec
cmp
and
add
imul
aaa
pushf
inc
dec
push
push
sbb
xlat
pop
dec
mov
add
inc
notl
std
jg
scas
mov
push
enter
jb
jne
insb
inc
insb
insb
mov
add
mov
jo
shll
das
imul
or
jg
jecxz
push
gs
sub
testl
loopne
rol
cmp
cmp
lds
lock
mov
and
in
mov
icebp
mov
or
push
mov
push
roll
push
lods
fildl
add
loopne
and
adc
sahf
sbb
pop
cmp
or
imul
in
pusha
push
insl
or
jno
arpl
into
out
cs
add
sub
sbb
adc
and
iret
mov
cld
lods
or
mov
or
outsb
adc
fdivrl
or
cld
fxch
adc
daa
pusha
lret
std
call
or
jl
mov
or
or
push
leave
mov
add
dec
dec
push
aam
jns
pop
adc
pop
push
mov
lahf
cmp
les
push
inc
roll
jb
inc
add
stos
imul
jle
movsb
cmpl
xchg
dec
das
add
lret
mov
fwait
icebp
in
sbbl
fwait
je
jmp
pop
inc
add
xchg
repz
les
nop
push
sub
call
out
push
jbe
cwtl
subb
ja
xor
mov
or
adc
inc
adc
mov
sbb
imul
ja
cmp
adc
add
cwtl
jne
lcall
add
mov
sub
or
in
or
lea
les
fists
stos
mov
pop
adc
inc
stos
sub
pop
clc
les
or
cs
outsl
nop
jge
push
incl
jmp
xchg
lret
pop
lds
cld
popa
hlt
xchg
push
sbb
enter
pop
push
jecxz
xor
xchg
push
push
insl
inc
pusha
pusha
ret
fstpt
jns
adc
push
xor
add
and
and
fucomp
xor
xchg
sbb
mov
dec
jo
aaa
sahf
es
orl
movsb
jnp
jmp
cmpsb
lcall
test
or
call
stos
jno
bt
sbb
mov
enter
sbb
int3
dec
pop
and
add
inc
and
jno
dec
inc
add
add
cmpsb
cltd
jecxz
in
sbb
mov
and
jnp
bound
sub
fs
push
sbb
rcll
lds
jge
pop
lods
push
incl
mov
and
lret
mov
adc
jo
arpl
aas
movsb
push
mov
mov
and
mov
cwtl
stc
and
leave
xchg
lock
dec
insl
sbb
aaa
das
test
lods
rol
push
mov
jo
in
add
xchg
mov
cmpsb
movsl
mov
test
sbbl
out
nop
test
sti
pop
push
and
jno
inc
or
lahf
ja
adc
je
add
bound
push
lret
or
and
mov
lds
xlat
in
cltd
popa
lcall
jo
dec
cmp
nop
xor
je
mov
mov
dec
dec
adc
add
mov
sti
add
ficoml
and
repz
jo
ljmp
lods
dec
sbb
movsl
or
push
ss
nop
xchg
fwait
test
lret
adc
fs
cmpb
xchg
cmp
pop
repnz
mov
enter
xor
or
and
stos
mov
push
mov
lret
imul
mov
push
jle
cmpsb
test
aad
sub
addr16
movsl
sbb
lods
clc
out
mov
ljmp
out
sub
popa
in
dec
mov
xor
adc
dec
jecxz
and
or
leave
mov
or
xchg
das
or
aam
test
andl
sbb
ret
mov
stos
shlb
jno
cwtl
and
les
fadds
loopne
xor
inc
adc
mov
fisttpl
je
rolb
inc
call
cli
mov
pusha
lds
xor
add
push
xchg
and
or
jbe
dec
mov
and
out
jno
ds
add
mov
movsb
cmp
nop
lret
push
test
push
insb
lea
jl
sbb
shrl
dec
outsb
icebp
mov
jno
xor
popf
inc
das
pop
xchg
jle
inc
testb
in
sub
roll
ljmp
pop
stc
cmp
push
jo
cwtl
mov
xchg
in
lea
cmpsl
push
xchg
push
fnstcw
mov
stos
jle
pop
adc
inc
pop
pop
dec
mov
jbe
pop
sbb
add
mulb
pop
push
or
ret
and
or
or
mov
xchg
push
in
in
push
scas
or
cld
gs
repnz
dec
cltd
and
in
sbb
arpl
add
sbb
inc
xchg
or
add
ss
mov
sub
sub
mov
cld
je
inc
sbb
jge
inc
sub
push
ljmp
mov
xor
sub
outsb
pop
xor
popa
sbb
add
lcall
fildll
cmp
pop
inc
fdivrs
or
fwait
lock
cmpb
sub
jmp
mov
and
jae
pop
dec
mov
cmpl
mov
push
xchg
stos
pop
cmp
mov
inc
xchg
sbb
pop
sub
invd
jbe
xchg
int3
dec
add
pop
push
push
cmpsb
xchg
ljmp
fists
pop
xchg
js
mov
cmpsb
dec
push
xor
push
cltd
cmp
mov
add
sub
je
cwtl
xlat
xchg
cs
pusha
add
stc
inc
and
jb
mov
aaa
test
pushf
mov
shlb
scas
sbb
out
jecxz
fs
mov
sarb
jge
int
adc
mull
and
cmpsl
in
test
dec
mov
into
arpl
inc
push
loopne
sbb
je
jns
dec
xor
out
dec
lods
fdivs
cmp
out
lret
jns
aas
gs
sbb
sbb
cmp
jl
mov
scas
xchg
jne
and
dec
icebp
push
or
imull
sub
imul
jp
fs
stos
or
cld
jmp
push
ret
call
xlat
cs
incl
jecxz
stos
pushf
mov
sahf
mov
int
aaa
rcll
fistpl
nop
fdivr
call
ret
out
mov
jae
xor
daa
int
popf
fwait
leave
movl
mov
mov
test
dec
shlb
fs
dec
imul
fld
mov
cli
cmp
jmp
jle
inc
ja
sub
xor
inc
icebp
dec
cwtl
das
sbb
xchg
mov
jmp
inc
movsl
or
xor
dec
data16
adc
xchg
inc
push
filds
sbb
jne
lods
or
and
xchg
sbb
sub
dec
add
jg
addr16
jnp
int3
notb
push
xchg
cmp
inc
faddl
mov
stos
popa
sub
pushf
out
fdivrl
mov
int3
das
sti
incl
adc
rcl
rcll
pusha
les
fnstsw
aas
mov
cmpb
lcall
mov
cmpl
push
pusha
dec
movsb
add
push
mov
cmp
jae
adcb
cmp
les
fldenv
xor
lcall
or
and
inc
out
test
cwtl
sti
pop
stos
enter
fwait
sbb
clc
jmp
inc
mov
js
pop
mov
fcomip
test
push
mov
pop
nop
or
jmp
aam
into
add
add
jbe
pop
mov
data16
cmpsl
or
cmp
pop
mov
dec
aas
js
cmc
cmp
ljmp
jbe
pop
mov
or
cltd
mov
xchg
hlt
pushf
clc
inc
imul
int
stc
out
jbe
subb
out
push
sahf
scas
xchg
inc
mov
sbbb
ljmp
gs
movsb
mov
cwtl
mov
push
mov
add
movsb
pop
push
loope
jo
movsb
fdivrl
loope
jmp
inc
xchg
inc
jb
cmp
fwait
dec
mov
decl
push
sarl
pop
pop
xchg
incl
daa
and
lods
fbstp
xchg
cmp
mov
lods
jnp
test
daa
lods
or
icebp
push
dec
jecxz
fcomip
cmpsb
push
sub
push
nop
jmp
ss
push
mov
or
xchg
fistpll
ljmp
sbb
adc
xor
test
mov
add
xor
pop
lock
call
ror
add
cmpsl
dec
scas
test
test
cmpsb
js
cmp
pushl
push
mov
data16
cmpsb
or
and
inc
test
xchg
xor
push
jne
enter
lcall
cmp
and
cs
stos
lds
dec
repz
cmp
push
das
lock
jg
pop
and
cs
xor
mov
and
pop
and
pushf
pop
or
jmp
pushf
out
push
mov
and
mov
mov
push
xchg
inc
xor
push
jb
lods
jno
popa
cmp
decl
pushl
pop
mov
gs
insl
out
cmp
das
xchg
fisubrs
in
xchg
cmp
ss
mov
popf
ret
cltd
fsubrp
lds
out
lods
in
push
cwtl
mov
jg
and
push
jns
dec
mov
jge
aaa
ljmp
js
daa
xlat
sbb
xchg
fdivl
push
xchg
mov
sar
pushl
retw
cmp
es
sub
gs
xor
sbb
xchg
nop
je
clc
outsl
aaa
pop
andb
xor
fs
popa
fcomip
cs
and
sub
in
mov
hlt
shrl
std
pop
push
enter
push
int3
nop
in
push
fists
loopne
xor
add
test
les
mov
xor
jmp
stos
das
xchg
mul
inc
pop
jp
dec
mov
mov
jp
jmp
jmp
hlt
incl
dec
push
subl
or
out
andb
btr
mov
mov
aam
adc
sub
push
cwtl
inc
addr16
jecxz
push
std
scas
mov
and
ret
push
clc
inc
mov
xchg
cmc
add
inc
mov
inc
add
stc
jmp
aaa
adc
ja
ds
mov
adc
mov
push
xor
mov
dec
xor
in
lock
mov
fisubs
jl
push
das
std
pop
stos
or
pop
jp
movsb
mov
add
dec
jmp
jecxz
mov
add
inc
lock
gs
mov
mov
mov
fcmovne
sub
clc
mov
dec
scas
jae
aam
pop
into
fdivrp
outsl
xor
repz
addr16
inc
cmpsl
or
adc
incl
fmulp
dec
scas
adc
xlat
mov
add
fwait
sub
leave
cmp
decl
or
shlb
int3
stos
adc
testb
adc
pushl
out
inc
outsl
cmp
sbb
lret
add
jmp
scas
daa
lea
xor
shll
xchg
mov
cmp
outsb
aam
lcall
adc
out
cmp
xorb
mov
push
or
fcomip
push
inc
stos
mov
mov
es
clc
cmp
jp
lret
hlt
and
adc
jmp
mov
mov
xchg
sub
jecxz
icebp
dec
lcall
inc
scas
jp
pusha
push
jmp
jg
call
push
add
inc
pop
xor
sbb
fidivrl
jo
pop
and
mov
rcrb
push
shl
pop
clc
cmp
fsubr
ret
in
cltd
es
cld
push
mov
incl
mov
lock
push
loopne
jbe
insb
ja
jo
inc
scas
adc
arpl
mov
loope
push
mov
push
pop
das
xchg
clc
jmp
nop
mov
call
xor
add
ret
xchg
cltd
lock
mov
rcl
jo,pn
mov
inc
sbb
xchg
adc
cmp
sbb
lods
mov
jb
mov
sbb
negb
dec
out
mov
xchg
sarl
fwait
out
sub
int3
in
scas
stos
mov
int3
mov
inc
xor
lods
push
in
decl
jp
lret
mov
pop
test
test
pushf
ss
ret
mov
lcall
dec
adc
fdivrl
mov
popf
cmc
fcom
int3
mov
or
lcall
imul
mov
js
or
cwtl
int
jg
mov
pop
int
das
jne
outsl
rol
test
inc
and
push
and
jmp
jg
sbb
cs
xor
out
ret
shlb
idivb
dec
cwtl
push
jp
mov
aaa
pop
mov
incl
cs
andl
add
adc
insl
es
jg
sub
push
test
inc
insl
fidivs
or
dec
scas
mov
add
pushl
jg
inc
std
xchg
mov
xor
xor
adc
insl
jmp
lods
cmpsb
incl
pop
shlb
sub
jl
sbb
int
fdivr
inc
pusha
sbb
in
jo
sub
adc
les
jno
mov
add
aad
jmp
mov
andb
dec
cmc
sub
ljmp
and
add
in
xchg
push
movsb
dec
and
mov
xchg
arpl
stos
and
cwtl
aad
mov
mov
in
xor
push
or
rcrl
mov
add
xor
push
push
mov
jnp
inc
push
or
loope
jmp
push
mov
cmpsb
xchg
mov
ja
cld
lcall
or
in
mov
mov
xchg
jnp
push
ret
out
jle
ljmp
movsl
or
cmpsl
sub
lods
in
mov
sub
ljmp
or
sar
int3
repz
cmp
adc
mov
push
je
sti
inc
push
push
js
leave
inc
or
ret
lcall
movsl
sti
fadd
or
xchg
xor
adc
loop
imul
mov
pushl
inc
sbb
push
clc
sub
fisttpll
inc
sbb
push
scas
popa
jge
dec
dec
adc
mov
pusha
aaa
fdivl
push
inc
jne
pop
sub
sbb
inc
lcall
cmp
mov
aaa
fimull
imul
fiaddl
in
jnp
sahf
shlb
lcall
fisttpll
mov
jp
push
mov
jg
jg
and
cmp
push
dec
and
or
xor
xchg
icebp
push
call
xchg
icebp
decl
cli
pop
dec
adcb
mov
arpl
jge
cmp
jnp
fwait
xchg
cmp
xor
pminsw
xlat
cmp
std
decl
xchg
cs
jge
inc
xor
bound
sbb
or
sub
sarl
test
lods
arpl
mov
loope
mov
or
mov
xor
insb
or
movsb
jge
ret
mov
inc
mov
jne
sub
or
or
mov
inc
movsl
leave
dec
xlat
in
pop
mov
lods
adc
arpl
or
mov
stc
mov
jecxz
lcall
subl
push
clc
xorl
adc
decl
inc
jmp
cmc
mov
stos
stc
pop
mov
out
bnd
dec
mov
incl
push
dec
daa
xchg
hlt
shl
fisubs
cwtl
xchg
fwait
imul
ret
cmp
ds
mov
andl
imul
pop
xchg
mov
pop
shrl
pop
aaa
push
jp
cmp
dec
pop
das
inc
aas
dec
and
push
and
add
in
je
mov
ljmp
incl
sub
fstpt
mov
xchg
cmp
sbb
push
mov
js
xchg
std
repz
stos
vmmcall
arpl
pop
js
insl
push
xorl
jg
pop
mov
addb
fs
pushf
mov
mov
outsl
decl
xchg
xchg
mul
xor
gs
mov
xchg
pop
lds
pushl
fwait
pop
imul
jge
push
mov
cwtl
add
lock
in
jg
jmp
mov
push
sahf
push
jb
inc
or
xchg
mov
jecxz
cmpsb
mov
push
jb
std
ljmp
scas
lods
fdivrp
cmp
cs
imull
sub
mov
inc
pop
sbb
mov
popl
and
xor
mov
lock
and
jg
pop
lret
nop
fcompl
cmp
cs
rol
addr16
lret
mov
sbb
inc
test
sahf
leave
xor
cs
dec
jg
dec
lcall
mov
loop
sub
cli
out
mov
mov
xor
fbld
lret
mov
fsubr
push
mov
pop
cmp
push
push
inc
incl
and
jmp
push
or
adcl
std
decl
or
je
test
jb
outsb
fwait
dec
scas
adc
das
cwtl
dec
xchg
lock
lret
call
push
loope
loopne
test
decl
cmp
out
ret
sub
jnp
adc
jmp
outsl
cmp
aaa
pop
mull
lods
cmp
push
mov
dec
cmp
jb
mov
push
or
or
cmp
push
shll
and
pusha
ret
por
dec
mov
mov
fisubrl
cmc
jg
lret
popf
add
sti
fs
out
aaa
icebp
repz
push
dec
out
push
std
fldl
dec
jle
mov
clc
test
lock
dec
ja
enter
push
mov
add
mov
shlb
es
adc
adc
push
fisttpll
push
fsubrl
xchg
stc
mov
dec
push
jbe
ljmp
and
sbb
adc
clc
pop
xchg
or
insl
test
mov
mov
mov
notl
dec
jg
dec
mov
and
cmp
fmuls
lea
xorb
std
test
cmp
repnz
push
test
lock
mov
lock
das
mov
in
jne
cmpsb
cmp
mov
mov
jne
mov
int3
sbb
or
mov
cld
pop
mov
mov
xchg
cld
addr16
mov
mov
das
mov
fs
fistpl
cmp
sub
out
icebp
push
mov
sub
fadds
or
mov
sub
jo
inc
adcl
push
add
inc
adc
icebp
mov
push
cmc
repnz
push
jle
mov
ljmp
mov
cwtl
shrb
hlt
daa
mov
xchg
adcl
imul
inc
mov
or
fadd
jecxz
out
xchg
mov
lods
cmp
push
sub
dec
xor
push
mov
inc
ja
dec
xchg
xorb
andl
adc
in
push
mov
add
movsl
pop
pop
sarl
decb
pop
mov
xchg
cmp
ret
jl
ljmp
movsb
pop
sarl
push
or
cmp
icebp
jmp
mov
cld
stos
test
mov
jp
push
pushf
push
imul
jmp
pop
clc
in
cmp
inc
push
ret
sbb
push
add
out
fsubrs
sbb
push
ljmp
inc
or
inc
stos
or
std
jo
fst
add
fwait
pushl
cltd
xor
aaa
mov
xor
sti
lcall
ret
cmp
les
cmpsl
lcall
mov
lds
aaa
mov
jbe
lods
std
push
mov
cwtl
ret
jbe
jbe
jecxz
mov
xchg
jbe
inc
dec
ljmp
cmp
pusha
rclb
out
sub
imul
into
test
cld
ljmp
popf
mov
ljmpw
movsl
or
push
pop
cmpsl
mov
loope
dec
sub
cwtl
test
arpl
inc
inc
fdivp
pop
push
jle
push
inc
scas
cmp
mov
jg
imul
adc
push
mov
fs
mov
inc
pop
out
and
addr16
sub
scas
roll
in
dec
or
sub
addr16
jl,pn
push
mov
or
std
cmpsl
and
cld
mov
call
dec
xchg
add
xor
ja
lcall
lock
call
jne
int3
mov
dec
sahf
fistps
inc
sahf
inc
cmc
clc
jmp
mov
or
int
icebp
and
adc
stos
scas
mov
jl
or
xchg
rorb
pop
add
dec
push
xor
or
cs
mov
lds
dec
xor
sbb
data16
test
xchg
lock
es
add
mov
push
push
ss
inc
cmp
dec
pop
fldt
test
or
mov
sbb
shll
dec
lcall
pusha
pop
pop
jge
and
popa
mov
cmc
add
jb
inc
arpl
lahf
xor
dec
xor
add
in
sbb
sub
pop
jo
inc
xchg
jae
ljmp
sarl
leave
xchg
pop
insl
pop
dec
fwait
push
mov
test
add
aaa
push
insb
add
movsb
adc
sbb
test
add
icebp
add
nop
and
sbbb
mov
shll
cmpsl
rorl
js
iret
adc
lods
stos
cmp
push
enter
and
cltd
add
jbe
mov
add
xchg
dec
fisubs
xchg
mov
jns
out
add
xor
adc
repz
movsb
bound
icebp
sub
mov
or
push
inc
push
test
jo
push
test
inc
pop
adc
or
bound
inc
and
in
fisubl
fcomps
rorl
faddl
xorl
dec
leave
mov
fs
int
mov
sub
dec
jo
mov
push
in
adc
outsl
mov
push
dec
adc
rolb
inc
and
and
xchg
lods
or
cmpl
mov
mov
loopne
outsl
dec
ss
movsb
fstps
and
cmp
aam
xchg
or
mov
push
pop
iret
and
cli
xchg
or
test
popf
inc
jp
xchg
loopne
sti
ret
push
orl
add
add
mov
xchg
push
aam
dec
cmp
dec
aaa
push
jae
pop
push
dec
popa
cmp
sbb
add
mov
xor
jb
dec
cs
or
inc
mov
or
scas
arpl
add
sub
loopne
xor
outsb
mov
add
mov
inc
sbb
lea
mov
test
inc
cmpsb
add
nop
push
orl
inc
mov
dec
push
cmp
add
orb
inc
lock
scas
cmp
mov
ss
jne
inc
lds
sub
call
add
cmp
subl
adc
sub
and
push
mov
add
lock
jo
xchg
flds
mov
push
and
aam
rolb
xchg
xchg
jnp
xor
add
scas
inc
and
fwait
test
inc
addr16
in
jns
shlb
push
mov
arpl
aad
add
add
imul
or
jecxz
xor
pop
fisubl
cmpsb
lcall
int
mov
fdivrl
push
clc
jecxz
xor
inc
pop
or
adc
ficoms
push
pop
inc
push
xor
inc
and
sbbb
inc
andl
or
sbb
popa
sub
mov
sbb
or
out
sub
mov
jne
xor
inc
enter
adc
inc
dec
mov
testl
rolb
xchg
mov
test
arpl
push
push
add
mov
or
rcll
xchg
xor
int3
lods
dec
rcrb
lock
and
lahf
scas
je
sbb
xchg
sbb
jno
and
inc
movsb
dec
jl
mov
push
cmp
fisttps
scas
cmp
or
adc
sarl
hlt
dec
ljmp
cwtl
clc
jle
rolb
xchg
lcall
mov
test
pop
mov
push
scas
fdivrs
mov
and
jge
fdivp
je
inc
pop
and
add
cmpsb
enter
and
inc
fisttpl
cs
or
nop
dec
or
push
dec
inc
or
pop
enter
lcall
iret
call
out
dec
jl
adc
lods
or
xchg
pop
push
push
add
aad
push
lret
fnstsw
add
rcll
filds
xchg
cmp
add
jl
jo
nop
jno
ficomps
add
xor
xchg
test
pand
hlt
dec
jmp
rclb
clc
shl
lcall
in
mov
idivl
mov
lods
js
adcl
sbb
push
push
ret
or
mov
push
xchg
movsb
dec
orb
addl
int
in
es
or
es
or
cmp
jmp
mov
cwtl
loope
icebp
pop
test
jge
insl
es
mov
mov
xor
cmp
popa
adc
insl
push
addr16
jecxz
rclb
mov
add
jne
fs
fisubl
add
sub
dec
xchg
ret
mov
test
jp
cmp
in
add
ret
sub
loope
jg
sbb
pushf
sbb
add
dec
cs
das
cmc
test
cmc
mov
adcl
push
sub
movsl
jg
test
rol
inc
push
lds
ud2
mov
mov
add
hlt
or
sbb
pop
inc
ficoms
jne
pop
add
outsl
mov
add
test
jo
addr16
push
mov
adc
dec
lcall
push
push
sbbl
sahf
es
cmp
fidivrs
outsl
aas
lods
mov
add
test
bound
and
loope
pop
pop
stos
inc
addr16
sub
xchg
inc
push
lock
std
sub
jae
inc
fisubl
xor
push
and
xor
xlat
cmpsb
xchg
ret
cs
push
sbb
inc
mov
add
or
sub
jge
leave
adc
loopne
jne
mov
dec
pop
xchg
pop
mov
add
loopne
push
jmp
add
dec
jmp
imul
pushf
mov
push
xor
out
jb
cmp
sub
add
orl
icebp
out
inc
mul
fmuls
dec
add
pop
js
push
cs
out
mov
stc
bound
jmp
dec
popf
dec
movb
jae
inc
subl
lret
dec
rcll
adc
push
push
js
xchg
int
adc
and
add
cwtl
dec
xchg
pop
xchg
xchg
in
cmpsl
dec
icebp
adc
lock
cmp
orl
movsl
ja
les
scas
jle
push
idivl
cmp
mov
and
pop
sub
movsl
xchg
adc
add
je
sbb
jae
and
arpl
jmp
add
add
jecxz
push
push
and
jl
insb
rep
mov
mov
mov
daa
add
push
ds
lods
orb
loopne
jb
mov
mov
inc
pop
cmp
cltd
jmp
push
push
addr16
out
test
add
sub
pop
ficoms
push
inc
mov
jne
and
pusha
xchg
in
adc
sub
movsb
dec
xchg
iret
insl
add
into
sbb
rcrl
and
scas
jg
pop
jmp
leave
adc
mov
inc
vmwrite
bound
jmp
in
stos
mov
inc
push
sub
inc
jecxz
cmp
lcall
or
bound
idiv
xor
or
or
mov
pop
rcrb
mov
adc
sub
sbb
dec
out
and
cmp
fdivr
push
call
popa
aam
shlb
lea
out
dec
pop
pop
mov
nop
lret
imul
in
add
xchg
ret
xchg
adc
in
imul
cmp
call
cmp
fstl
dec
leave
aad
and
jae
daa
sub
mov
andl
mov
sub
and
pop
arpl
push
xlat
test
ret
xchg
idiv
test
push
test
sbb
repz
lahf
sbb
pop
js
inc
rolb
mov
sbb
stc
imul
sub
mov
lds
mov
stos
leave
xchg
inc
and
xor
xchg
jmp
cltd
scas
inc
inc
inc
dec
out
sub
jl
andb
or
in
gs
lods
dec
test
fcomps
push
aaa
jl
mov
ret
cmp
ret
xchg
nop
jl
into
and
mov
adc
stos
push
sbb
loopne
je
jl
hlt
push
sbb
shll
mov
movsl
test
sub
lea
adc
inc
dec
aad
adc
push
aad
adc
pop
xlat
cld
insb
daa
loop
scas
pop
add
stc
and
xor
call
pop
cmp
insb
stos
stc
dec
loope
mov
jns
sbb
rorl
insl
push
push
lahf
pop
popa
adc
and
mov
inc
mov
ret
pop
cmpsb
dec
sbb
in
pop
outsl
repz
inc
rcrb
out
sbb
xchg
sahf
icebp
cmp
sub
push
jge
ja
sbb
xchg
mov
ss
mov
movsb
mov
leave
hlt
mov
test
mov
inc
jp
test
jne
stos
jno
push
addr16
jne
pop
icebp
mov
or
test
pusha
pop
add
shr
cltd
shlb
insl
inc
mov
jmp
rcrl
push
xor
mov
xor
mov
mov
cmpsl
xchg
mov
pop
lock
es
jg
leave
sub
bound
xor
xor
jo
add
inc
icebp
dec
adc
and
push
jbe,pn
fwait
adc
sub
jno
adc
std
dec
ret
aaa
je
adc
mov
lock
xchg
cmpsb
and
imul
fnstenv
scas
sbb
jl
stos
in
cmp
and
xor
jecxz
adc
dec
sbb
sub
pusha
popa
pop
or
mov
or
mov
push
les
test
popa
cwtl
jl
sbb
dec
rcll
push
jnp
bound
fwait
sti
dec
test
xor
stc
fildll
sbb
in
pop
dec
push
int
in
test
cmp
add
xchg
test
xchg
movsb
xor
push
addl
cmp
or
outsb
jmp
dec
mov
pop
lcall
repz
cmpsl
xchg
or
inc
push
mov
xorb
jno
adc
mov
pop
and
adc
mov
dec
aam
jo
sbb
sbb
ja
adc
cltd
mov
add
adc
bound
sbb
stos
dec
fistps
inc
push
lea
add
lcall
scas
icebp
nop
cmc
daa
or
aam
fbstp
jnp
leave
mov
jp
xlat
mov
ljmp
aaa
imul
inc
inc
xchg
bound
jne
bound
hlt
ret
lock
ret
lahf
mov
xchg
sbb
and
xor
cmc
test
filds
add
xchg
push
pop
fs
idivl
jg
loop
es
int
xor
scas
pop
imul
stos
hlt
insb
call
adc
cs
and
jne
lea
movsb
add
adc
cs
adc
push
divl
mov
or
jle
mov
pop
shlb
fistpll
aas
mov
dec
lea
add
cmp
mov
jl
dec
xor
or
nop
test
out
dec
add
mov
mov
dec
jecxz
dec
mov
shrb
adc
inc
jo
cmpsl
push
sub
add
adc
push
jnp
pop
pop
jb
imul
pushf
bound
addl
les
mov
arpl
or
imul
pop
xor
ud1
xorl
mov
or
movsl
lret
jmp
and
dec
out
push
inc
dec
je
pop
lock
outsb
jno
jmp
or
loopne
fidivs
scas
lds
andl
adc
dec
jl
sbb
inc
stc
insb
push
xor
xchg
imul
mov
jmp
into
push
push
xor
inc
or
or
mov
cmp
adc
xor
in
ret
adc
mov
fbstp
aam
sbb
lcall
sbb
test
inc
inc
lcall
add
inc
out
ss
test
imul
jb
roll
stos
push
dec
pop
mov
imul
cmp
mov
and
maxps
mov
aas
leave
sbb
or
in
mov
and
cmp
jp
lret
xchg
add
mov
push
xorb
xor
jecxz
mov
test
loop
mov
aad
jb
and
std
jnp
lods
or
push
mov
fistl
jmp
aas
mov
ljmp
add
out
rclb
xor
sarl
sub
cmpb
add
dec
rclb
push
out
mov
enter
lea
adc
xorb
inc
pusha
in
push
or
add
mov
add
pop
call
ficoms
jp
filds
or
sub
cmp
mov
pusha
add
mov
rcrl
and
loopne
shll
add
pop
rorl
add
sub
push
fnstsw
add
movsl
add
inc
int3
les
addl
add
push
pop
lds
sbb
dec
fdivl
xor
jne
subl
aam
dec
and
movb
ss
test
ljmp
movsb
fldl
in
fiaddl
mov
lahf
insb
dec
inc
repnz
and
cmp
addr16
add
xchg
inc
mov
adc
push
add
push
and
in
jmp
dec
shlb
pop
fwait
jno
sub
and
pop
insb
inc
pop
inc
jno
and
loop
lahf
push
and
xchg
and
mov
mov
imul
cmp
loop
xchg
out
or
mov
or
out
or
inc
aam
fcomi
dec
jno
xor
imul
pop
rolb
sbb
push
icebp
mov
cs
out
and
inc
xor
adc
and
arpl
sbb
out
mov
mov
sub
iret
adc
sarb
and
imul
xor
inc
das
enter
add
xor
sahf
pop
sbb
icebp
sub
pop
dec
andb
test
jmp
shrl
cmp
add
test
loopne
or
stos
loopne
lock
leave
mov
jecxz
psubw
cmp
mov
pop
cwtl
cmpsb
and
cmp
mov
imul
sbb
dec
adc
andb
sub
inc
cmpb
sbb
add
ret
mov
pop
pusha
cmpl
mov
popf
mov
int
xchg
xchg
loope
add
sub
sub
mov
and
inc
cmp
push
adc
dec
out
xchg
mov
mov
sarb
popa
lret
int
add
ret
xor
pop
dec
repz
push
push
and
jae
mov
xor
or
add
or
inc
pop
ss
jae
aaa
out
add
in
inc
dec
daa
jnp
jo
shlb
loope
jmp
or
jo
push
lcall
addr16
sbb
xor
push
ret
jns
push
mov
test
inc
js
pushf
sbb
imul
loop
push
add
push
sub
dec
pop
int3
push
call
movsl
inc
jae
movsb
push
mov
mov
lret
repz
sbb
sbb
mov
xchg
mov
aad
lret
fcos
mov
rolb
mov
xchg
lahf
cwtl
data16
adc
xchg
shlb
add
rol
test
adc
jns
aas
rolb
int
mov
and
inc
cmp
aad
adc
cwtl
adc
hlt
nop
or
faddp
jmp
or
jl
scas
xor
loop
adc
lea
bnd
xchg
pop
pop
add
cmp
sbb
jb
cwtl
lret
in
xchg
addb
mov
sub
and
xor
ds
pop
mov
mov
pop
sti
leave
or
pop
mov
mov
ja
sub
in
add
sbb
sbb
cmc
and
cmp
int
or
xchg
and
mov
pop
lret
cmp
jmp
loopne
sub
js
pop
inc
pop
xchg
shrb
jmp
ss
call
insl
rolb
loope
cmp
pop
aas
jb
or
rorl
add
in
or
pushf
insb
inc
cmp
cmp
cmp
pop
jmp
cwtl
mov
sbb
mov
ds
flds
push
push
dec
lcall
data16
movsl
test
adc
js
inc
iret
popf
mov
add
rol
push
popl
adc
and
mov
movsl
push
add
mov
inc
sbb
sbb
cs
push
push
xor
jno
call
mov
push
rolb
cmp
loop
mov
stos
mov
push
jmp
adc
loope
es
push
push
stos
cmp
add
in
sub
loop
popa
dec
pop
xchg
adc
das
jecxz
xchg
imul
mov
and
jno
xchg
jns
mov
xorb
pop
jle
sbb
add
ss
mov
enter
push
or
push
jno
ret
leave
push
subl
sub
add
xchg
push
loopne
lods
fcmovnu
push
inc
cmpsl
add
movsl
dec
sbb
out
nop
mov
jg
and
cmp
out
clts
call
cld
and
adc
push
in
cmp
arpl
add
or
out
mov
and
test
pushf
in
popf
adcb
push
jmp
sbbb
jno
xchg
call
add
inc
loop,pt
ja
or
test
xor
cli
ret
mov
sub
imul
mov
dec
pop
gs
in
or
outsb
out
xchg
dec
pop
pop
imul
pop
inc
pop
sub
fstpl
clc
mov
pop
lods
dec
xchg
stos
mov
sahf
scas
xor
aad
dec
test
aaa
lock
or
or
sub
stc
pop
pop
mov
test
jns
cmpsb
mov
and
adc
mov
and
dec
aam
push
repz
xor
cmp
dec
xor
ror
cli
sbb
or
pushl
insl
sbb
ret
push
dec
jmp
das
outsl
stos
push
xchg
push
jmp
sahf
dec
fsubs
notb
inc
orb
rcrl
jmp
leave
pop
lods
and
in
sub
dec
push
scas
iret
testb
and
add
cld
add
jle
bound
and
sar
fildl
mov
jl
pop
sbb
mov
xor
sbb
jle
dec
jnp
lock
rorb
inc
sahf
xor
and
add
adc
lods
mov
push
sub
int
das
mov
xchg
pop
sub
pop
mov
fcom
arpl
rcrl
xchg
popa
sub
jg
test
xchg
rcr
sub
outsb
loopne
enter
nop
pop
aas
icebp
push
mov
and
or
push
in
cmp
sub
adc
fwait
hlt
pop
not
in
add
pop
cmp
xchg
lret
xor
mov
and
dec
cld
loop
sub
push
jp
dec
pop
in
inc
add
add
adc
and
xor
ss
add
popa
xlat
mov
daa
leave
inc
aad
inc
mov
pop
mov
jne
aas
mulb
inc
sbbl
iret
insl
and
loope
push
enter
add
cltd
push
jl
mov
jle
adc
repnz
cmp
mov
dec
and
ret
jne
stos
lret
xor
pop
inc
cmp
jo
adc
es
fwait
sbb
pop
adc
push
jp
mov
inc
sbb
jo
jecxz
incl
and
ljmp
mov
fldt
cmp
arpl
and
fwait
mov
cwtl
add
push
std
adc
sbb
inc
ret
jnp
sbb
out
sti
adc
push
std
inc
sbb
scas
orl
test
rep
stos
adc
aas
xchg
fcomp
rorb
add
rolb
jecxz
movsb
add
pop
fdivs
loop
pop
aas
dec
loope
jae
je
enter
icebp
in
lcall
xor
jl
scas
outsb
adc
jmp
sbb
mov
xchg
mov
shlb
xor
mov
pop
inc
and
loop
mov
adc
lret
bnd
mov
rcrl
filds
cmp
cmp
xchg
test
mov
dec
adc
rorl
pop
fxch
xchg
fwait
xlat
aas
xor
int
cmp
ljmp
pusha
pushf
rolb
push
loope
inc
jae
shlb
and
adc
dec
pusha
mov
push
sbb
shll
inc
int
inc
mov
js
rcrb
mov
in
dec
stos
xor
movsl
mov
dec
adc
mov
jns
fwait
jo
mov
pop
nop
cmp
mov
push
leave
enter
add
nop
and
inc
lods
bound
adc
xor
inc
add
lds
sahf
in
cs
add
xchg
leave
xor
push
mov
loope
cmpsb
stc
cmpsb
mov
int3
jecxz
pusha
or
adc
daa
mov
jl
mov
mov
pop
cmp
ret
inc
mov
inc
rclb
add
packssdw
aam
orb
sarl
jmp
lcall
in
add
or
aaa
test
mov
test
adc
shrb
in
adc
jl
mov
jne
imul
sbb
test
mov
imul
add
adcl
jne
popf
les
enter
rclb
mov
add
mov
and
jae
and
mov
xor
mov
add
and
and
in
dec
sub
pop
mov
fs
popl
cmp
test
sub
cmp
mov
sbb
loopne
sbb
push
adc
xor
scas
xor
inc
leave
insl
mov
aam
mov
and
aas
add
roll
pop
and
and
add
adc
jmp
addl
or
repnz
dec
push
icebp
aaa
aad
loop
jb
fcoms
mov
cmp
lea
sub
xchg
mov
and
sbb
mov
or
or
les
adc
adc
hlt
push
xchg
mov
mov
jns
insb
push
notl
mov
loop
lcall
xor
inc
sar
lods
cld
jg
jmp
push
xor
ja
pusha
fstpl
mov
nop
lods
mov
sbb
inc
or
sbb
hlt
mov
adc
pusha
push
inc
or
loope
mov
and
mov
xor
les
bound
xchg
push
inc
stos
and
pop
rclb
push
push
adc
call
notl
mov
dec
roll
aas
stos
mov
jmp
sarl
inc
loopne
push
xchg
aaa
popf
inc
add
cmp
jno
and
in
inc
pop
dec
adc
dec
leave
loopne
jno
das
mov
push
pop
and
or
cmpsb
nop
int3
dec
mov
lret
rolb
in
adc
ret
xchg
add
add
mov
popf
loopne
or
mov
cmp
push
filds
sub
pop
sti
or
lcall
push
xchg
nop
dec
das
or
push
movsb
repnz
or
orb
dec
adc
mov
cmpb
lret
inc
adc
jns
add
push
lds
sbb
pop
add
mov
or
xchg
test
pop
aas
jmp
stc
add
sub
movsl
xchg
test
std
lea
and
in
test
sbb
dec
lods
fcmovbe
testb
cwtl
or
and
imul
decl
pop
lahf
push
out
iret
mov
lock
sub
jno
lea
xor
push
xchg
mov
imul
mov
push
pop
push
and
mov
add
add
leave
push
xor
fnstsw
or
dec
dec
xchg
fmul
sub
xchg
lret
aaa
and
dec
in
and
adc
cmpsb
or
jl
add
je
jae
rcrb
inc
push
add
push
shrb
mov
insl
jno
jb
pop
lock
imul
pop
rcll
test
cmp
cltd
mov
xchg
lret
imul
sti
sub
sub
mov
push
rolb
loopne
inc
pop
push
cli
pop
pop
inc
test
inc
das
add
add
ret
or
leave
pusha
pop
scas
jo
pop
hlt
mov
cmpsb
sbb
insl
mov
jo
inc
pushf
sub
jae
jmp
push
jmp
ret
pop
dec
xor
enter
sub
sub
addb
adc
fisttpll
add
flds
push
cmp
loop
dec
lret
inc
imul
and
add
and
xor
dec
adc
dec
sti
rcl
inc
xchg
aaa
mov
add
pop
mov
test
xor
dec
out
mov
jmp
xchg
mov
inc
xchg
scas
outsb
testl
pop
or
lahf
mov
jo
aam
jno
les
jl
sbb
rcl
sub
icebp
popf
push
pop
shrb
inc
mov
xchg
sbb
subb
fsts
jbe
pop
ss
icebp
push
or
jge
aad
pusha
das
icebp
mov
adc
cmpsb
inc
and
inc
testl
subb
inc
test
xchg
sbb
and
inc
out
roll
lret
incl
sub
fisttpl
xor
lcall
xchg
clc
lock
paddq
adc
xchg
out
adc
xor
push
or
cmp
add
add
sub
dec
mov
jns
cwtl
popa
inc
mov
push
cmp
xchg
dec
jp
test
push
dec
imul
dec
add
jo
adc
push
incl
pop
jno
mov
shrb
or
es
jecxz
mov
dec
popf
push
mov
mov
add
cwtl
mov
adc
notl
leave
adc
push
ret
mov
xor
pop
push
inc
sbb
mov
lods
pop
ljmp
add
rcrl
pop
xor
test
pusha
add
pusha
aaa
outsb
jns
inc
or
rcr
cmc
loopne
mov
lret
add
aad
scas
sbb
mov
fs
mov
das
sub
add
mov
and
cmpsl
enter
push
mov
xchg
xchg
pop
inc
std
out
roll
ja
xchg
pop
xor
adc
add
pop
add
ret
lahf
dec
add
push
inc
aaa
cwtl
pop
jb
scas
in
sbb
mov
push
lahf
xchg
push
add
pusha
cmpl
xor
sub
nop
and
push
movsb
and
xchg
js
mov
and
addb
sbb
test
dec
mov
jo
cmp
sub
cs
dec
xchg
mov
mov
push
arpl
mov
adc
popa
xchg
sub
ljmp
jle
iret
fimuls
add
push
inc
loopne
jb
movsb
inc
mov
adcl
adc
pop
int
pushf
dec
loope
repnz
xchg
push
mov
xchg
arpl
xchg
test
add
test
and
push
jns
push
jbe
ret
imul
jnp
aas
dec
jg
dec
cs
and
sub
mov
cmovo
ret
adc
push
ss
stos
jge
call
lds
add
push
jnp
and
popf
cmp
add
mov
mov
cmc
arpl
xchg
ds
xor
scas
imul
jno
adc
sbb
sbb
inc
adc
sub
shrb
cwtl
and
lods
mov
cltd
lcall
lret
dec
jbe
and
in
push
xlat
sub
sbbb
xchg
clc
lock
xchg
pop
shll
xchg
mov
std
cmpsl
scas
cs
lds
adc
pop
push
sbb
dec
das
jmp
out
ffree
std
imul
lahf
aas
xchg
jo
mov
pop
insl
mov
pop
push
add
pavgb
addb
rolb
mov
mov
mov
mov
jge
jns
imul
pop
mov
lret
mov
push
jmp
je
xorb
mul
push
inc
test
xor
add
fsubl
dec
loope,pt
inc
sub
mov
loop
add
push
mov
scas
ja
sbb
adc
xchg
adc
mov
or
xor
stc
ljmp
ficompl
loop
adcl
cs
mov
es
sub
je
rolb
mov
shrl
sarb
and
pop
push
mov
mov
aas
xor
xchg
mov
movsb
xchg
mov
pusha
add
hlt
mov
repnz
sbb
movsl
pop
add
mov
sbb
mov
cs
mov
and
or
shrb
jo
movsl
in
out
sbb
push
dec
cmp
pop
lret
pop
add
add
mov
loopne
out
lahf
and
call
mov
xor
and
orb
mov
leave
xchg
cmpsb
push
test
ljmp
adcl
int
out
sbb
dec
test
jnp
pusha
dec
adc
xor
push
add
add
cmpb
and
xor
add
push
dec
sbb
cmpsl
adc
test
mov
mov
add
test
sub
mov
sub
sbb
push
adc
sbb
adc
test
iret
mov
adc
icebp
xchg
inc
xor
lret
mov
es
xchg
jne
test
sbb
rorl
mov
ret
and
iret
xchg
inc
sbb
inc
stos
out
dec
lea
dec
shrl
mov
shlb
sbb
dec
ret
xor
lock
jp
push
popa
les
in
por
xchg
subl
adc
imul
stos
cmp
pop
pop
shlb
rolb
pop
shrb
mov
inc
pop
cwtl
arpl
stc
dec
or
aas
or
pop
dec
add
dec
addb
dec
add
mov
jecxz
mov
sarb
stc
pop
push
jno
dec
cwtl
mov
push
cmp
mov
jp
sbb
add
mov
and
loopne
push
inc
pusha
or
push
pop
sbb
inc
repnz
add
push
in
add
pop
sahf
pop
xor
fisubrl
add
jb
jecxz
adc
and
fisttpl
push
in
jno
mov
lods
test
mov
dec
cs
dec
mov
or
sbb
inc
movsl
push
push
lock
repz
xor
lds
ja
or
xchg
cltd
add
and
xchg
lock
sub
push
mov
call
pushf
mov
jg
add
and
jmp
pop
test
jno
out
cs
inc
mov
sbb
or
adcl
mov
mov
sti
inc
daa
sub
mov
mov
add
sub
push
addb
push
xor
repnz
aam
push
test
add
adc
sub
dec
and
push
push
dec
push
std
xchg
dec
rcll
pop
nop
xchg
fmulp
shlb
pop
adc
es
cmp
or
push
jl
dec
cs
and
loopne
jg
dec
cmp
cwtl
fiadds
inc
dec
sbb
push
mov
cmp
add
jo
int
xor
testb
cmc
inc
add
movsb
add
sti
sbbl
popf
arpl
add
pop
xor
cmpsl
cs
notb
or
and
mov
xor
push
sbb
mov
add
or
dec
dec
loope
xchg
repz
movsl
mov
addl
mov
xor
andb
xlat
jo
dec
gs
arpl
test
sbb
rcrl
fsub
dec
dec
inc
mov
icebp
mov
mov
mov
push
add
add
test
jne
lea
xchg
gs
jb
add
out
sbb
push
cwtl
rorb
xor
enter
aas
sbb
dec
inc
inc
std
push
add
stos
or
pop
push
leave
push
add
jb
loope
call
lahf
and
add
mov
xchg
push
cmp
ljmp
add
insb
mov
cmc
je
mov
sbb
xor
mov
fildl
mov
mov
or
push
subb
fs
and
xchg
rorb
ret
inc
and
mov
rcll
incl
pop
add
sbb
xor
xchg
dec
into
sub
cmp
sbb
mov
orb
test
lea
or
sbbl
ss
bound
jmp
nop
mov
call
add
push
addr16
outsl
inc
add
add
adc
enter
out
xor
xchg
pop
jge
scas
clc
add
push
mov
push
ret
xchg
mov
adc
ja
andl
dec
dec
jmp
movsl
xor
in
orl
nop
fistpll
inc
or
clc
adc
imull
sub
or
xorl
shlb
inc
pop
stc
test
dec
loopne
push
outsl
add
sub
and
cmp
add
or
jne
mov
pop
nop
in
dec
add
dec
dec
leave
test
adc
cmp
pop
xchg
lahf
dec
nop
popl
jle
ret
in
sbbb
adc
sbb
imul
popa
mov
inc
add
jecxz
fdivrs
cmc
repnz
rclb
movsb
movl
mov
dec
bound
dec
pop
dec
rolb
xor
rcr
sbb
adc
xor
and
cmp
xor
mov
mov
xor
ret
out
sub
iret
int3
pop
ret
add
push
adc
push
in
test
and
dec
dec
test
jge
movl
js
xchg
dec
cs
ljmp
movl
lea
add
loope
pop
jno
adc
pusha
xchg
stos
dec
test
mov
cmp
mov
jo
and
jge
les
or
fwait
pop
xor
sets
lds
cltd
mov
out
xchg
add
xor
add
mov
pop
jmp
add
pushf
push
sbbl
nop
mov
add
pusha
bound
mov
shrl
outsb
ret
test
rcl
add
mov
sub
sbb
adc
push
daa
add
xlat
push
gs
sahf
stos
xchg
push
adc
out
dec
sahf
jbe
orl
daa
loopne
jne
inc
add
aam
fidivl
xor
insl
enter
cld
aaa
fistl
sbb
loop
inc
jmp
mov
icebp
mov
xor
sub
inc
jbe
stos
sub
pushf
movsb
mov
aaa
ds
xchg
push
mov
daa
sbb
scas
mov
xor
push
lcall
sub
fnsave
inc
dec
dec
add
bound
testl
or
mull
mov
push
pop
inc
xchg
cmpsb
imul
test
sub
xor
dec
push
in
iret
add
enter
bound
arpl
pop
ja
cmp
or
cmp
imul
fnstenv
xor
add
mov
test
jae
inc
mov
add
xor
xor
pop
push
inc
imul
xlat
in
xor
lods
outsl
push
xchg
fwait
loopne
mov
fwait
insb
sbb
cmp
fsubrp
or
inc
xchg
add
rorl
push
das
aam
push
fwait
add
outsl
or
jns
and
jmp
test
les
out
and
rcrb
lods
in
pop
mov
int3
sbb
popa
stos
pop
ret
inc
xor
push
mov
cmp
xor
add
push
ja
pusha
aad
mov
int
and
mov
or
movsb
loop
add
push
pop
dec
sbbb
and
and
pop
testb
push
pusha
aaa
je
xor
sbb
nop
out
arpl
inc
push
sub
add
cltd
je
xchg
andl
subb
jl
or
push
and
sub
pop
sub
cmpsl
or
subl
mov
movsl
lret
repz
movsb
push
daa
jns
lock
cmp
outsb
jge
out
sahf
push
mov
pushf
pop
jl
mov
call
mov
dec
sbb
sahf
ror
dec
aad
fs
jb
loop
mov
int3
clc
or
fistl
mov
mov
daa
lea
mov
shl
test
dec
mov
pushf
xchg
push
xlat
add
mov
add
adc
pop
or
and
sbb
popf
out
or
push
xor
push
add
pop
mov
adc
subb
jns
pop
rcrb
adc
jle
mov
jecxz
push
inc
mov
sbb
fcomi
mov
inc
jb
lods
mov
xchg
fisttpll
clc
or
ja
lahf
mov
xor
dec
test
fldl
fxch
loope
push
mov
loopne
jns
ret
decl
sbbb
imul
push
sbb
xor
jecxz
hlt
stos
adc
pop
loopne
add
xchg
sbb
inc
pop
leave
scas
push
sbb
ss
mov
ljmp
nop
lock
jp
jle
pop
jo
test
mov
enter
add
bound
jno
popf
jmp
sbb
je
inc
push
pop
mov
and
adc
jmp
mov
mov
in
cmp
mov
shlb
scas
or
and
add
sub
fnsave
add
mov
add
mov
sub
enter
rolb
mov
scas
sub
scas
outsb
jecxz
mov
sbb
mov
or
add
aad
inc
leave
subl
push
or
jecxz
jecxz
mov
subb
xor
stos
andb
dec
push
ret
sbb
pop
rolb
and
add
pop
push
sub
push
sbb
out
push
xor
xchg
add
push
pusha
pusha
lods
mov
pop
add
push
mov
dec
inc
enter
cmc
add
or
dec
add
inc
leave
add
pusha
mov
jb
int3
in
add
sbb
cmpsb
outsb
cmp
rorl
push
xor
leave
xchg
add
inc
in
shll
cmp
cs
negb
mov
pop
daa
or
xor
sbb
mov
ss
loopne
inc
sbb
aas
cltd
mov
aam
movsl
xchg
or
push
inc
mov
pop
mov
add
ljmp
push
popa
loope
shrb
lea
add
cmpb
cld
cmc
mov
dec
pushf
sbb
cwtl
push
lret
loope
xor
xchg
push
adc
xchg
leave
xchg
jbe
inc
adc
add
fisubl
sbb
add
test
fsts
jno
test
subb
xchg
aad
xor
xor
pop
push
or
fldl
loope
lcall
enter
xlat
push
scas
test
push
add
add
bound
inc
pusha
mov
stc
lret
insl
ficoms
stc
movsb
je
mov
cmpsb
in
inc
stos
cld
inc
adc
adc
adc
cltd
sub
add
jae
push
xchg
push
mov
add
aaa
jecxz
scas
loope
lahf
outsl
pusha
add
cmp
nopl
xor
pop
das
loop
inc
arpl
push
cmpsl
mov
aad
imul
in
pop
xor
and
scas
adc
adcb
adc
push
inc
pop
and
cmp
sub
push
lods
push
xchg
sbb
out
sub
xor
dec
popf
sbb
mov
xor
inc
pop
pop
iret
push
dec
sub
push
jns
jmp
pop
add
push
popa
jns
popa
imul
jns
jo
sarl
aam
arpl
sbb
aas
xor
test
inc
xchg
push
int
lahf
fistl
adc
out
jmp
jae
sbb
ret
sbb
leave
enter
stos
mov
test
xor
pushf
or
mov
mov
aas
mov
mov
push
xor
mov
jmp
or
pop
inc
xchg
lds
mov
xchg
pop
jo
jns
scas
arpl
xchg
push
cmpsl
pop
pop
adc
repnz
jg
cld
rcrb
leave
cmp
nop
lds
and
mov
icebp
jne
clc
inc
dec
mov
rol
mov
xchg
mov
or
gs
ja
aad
sub
cld
mull
inc
ret
or
mov
jmp
loopne
cmc
jno
rclb
pop
or
xchg
jnp
repnz
and
mov
inc
pushf
xchg
pop
push
push
xor
movsb
cmp
popf
xor
fstl
inc
jmp
cld
pop
clc
push
add
nop
das
aam
xchg
loop
test
rcr
loopne
or
sub
arpl
jae
mov
or
jnp
stos
inc
xor
pop
mov
and
lret
mov
add
jo
jo
loopne
pop
and
iret
mov
cmp
add
fistpll
imul
int
cltd
push
aas
mov
or
es
push
popf
sub
cmp
addl
jl
loope
iret
out
inc
cwtl
in
xor
dec
js
pusha
test
mov
lods
loopne
cmpsb
mov
cmp
sub
push
adc
dec
dec
xor
loope
in
inc
vaddpd
ss
fcomp
pusha
je
pop
pop
repz
fwait
arpl
adc
mov
mov
fnstsw
mov
aam
cmc
inc
repnz
xlat
sub
stos
or
pop
clc
lea
adc
in
cmpsl
fiadds
js
xchg
mov
and
orl
daa
push
int3
rolb
push
sarb
loopne
and
add
lods
loop
aaa
sarb
fdivrl
enter
stc
stos
fcompl
in
icebp
push
or
jae
mov
pop
add
xor
add
push
mov
jmp
push
das
cmpsb
add
or
dec
push
xchg
mov
out
xor
fstps
call
pmulhw
lahf
hlt
push
sbb
in
cmp
push
or
xchg
mov
cwtl
jno
pop
adc
addb
call
adc
xor
mov
shlb
lock
test
in
mov
xor
dec
mov
xor
jne
ja,pn
fcompl
cmp
js
fists
xor
ja
xchg
shlb
mov
jge
stos
in
or
adc
sbb
je
test
lcall
std
push
test
int
pusha
sub
push
jae
insl
jae
movl
and
inc
loopne
inc
xchg
fldcw
rolb
ficompl
add
leave
in
repz
mov
cmp
inc
adc
sub
mov
adc
add
mov
mov
or
outsl
push
and
pop
scas
in
sub
lock
scas
inc
mov
cmp
add
push
jg
and
lret
daa
lock
lds
loop
mov
lcall
out
daa
mov
sub
iret
pop
in
push
jl
dec
jmp
rclb
dec
mov
arpl
cmp
mov
loopne
out
in
and
enter
adc
mov
sbb
jl
pop
shlb
ret
mov
jmp
popa
in
mov
push
xchg
dec
decl
adc
pop
fiaddl
lods
arpl
scas
insb
add
dec
sahf
pop
pop
jp
mov
xchg
cmp
outsb
xchg
and
xor
mov
lahf
cmp
adc
inc
leave
xor
les
das
loopne
push
int
andb
dec
mov
ds
xchg
mov
scas
xchg
cmp
fldcw
outsb
or
or
inc
mov
xor
mov
lods
stos
adc
dec
loopne
test
xchg
jb
cmp
dec
sbb
daa
call
movl
xor
cmp
dec
xchg
leave
or
aaa
shl
or
adc
add
je
push
js
imul
and
addl
cld
pushl
push
in
cmpsb
push
jo
aad
mov
push
mov
push
inc
or
dec
je
dec
xchg
daa
cmp
mov
test
orl
push
ret
pop
cmpl
sub
pop
and
lods
popa
lret
addl
loopne
push
cmp
jne
shlb
cmpsl
nop
outsl
jbe
imul
arpl
push
and
xchg
push
pop
inc
loope
add
adc
mov
popf
mov
push
imul
inc
repnz
jb
daa
sbb
pop
scas
sbb
mov
add
ljmp
mov
lret
sbb
or
jmp
call
sbb
icebp
fsubl
inc
clc
lock
and
cmpsl
jecxz,pn
fwait
cmc
aaa
pop
nop
rclb
or
nop
mov
arpl
out
inc
call
mov
repnz
in
lods
xchg
cmpsb
iret
mov
mov
out
loope
loopne
movsl
repz
pop
shrl
lds
int3
xor
lock
pop
fmuls
and
mov
adc
xor
adc
xchg
jl
adc
mov
xor
sbb
movsb
sub
aas
xchg
xchg
lock
or
xchg
fnstenv
in
mov
push
test
xchg
pop
rcl
imul
pop
aaa
arpl
loop
pop
xor
test
xor
xchg
dec
xlat
cli
push
mov
add
add
scas
lcall
pop
sub
add
push
mov
ret
jo
adcb
les
jo
add
pusha
pop
lret
mov
sbb
add
insl
sti
inc
cmp
sbb
sub
inc
mov
inc
stos
sbb
imul
ss
add
das
xchg
in
sub
inc
mov
orl
mov
popa
pop
leave
outsb
xlat
and
sub
xchg
add
inc
ret
ror
outsl
push
add
sbb
push
or
xor
sub
ret
or
pop
lcall
fwait
mov
mov
sysexit
adc
sbb
mov
rclb
push
aad
adc
push
push
cld
js
insl
sbb
shlb
or
push
sbb
dec
testb
jge
das
in
fcmovb
push
imul
inc
andl
negb
mov
cmp
inc
loope
jecxz
sub
fisubl
popf
mov
add
or
mov
pop
jae
pop
inc
sahf
xchg
add
les
les
xchg
add
shr
cmp
sbb
mov
int
mov
ja
mov
sub
sbb
and
push
cmp
dec
add
or
sbb
es
push
rclb
cmpsb
push
lahf
xchg
mov
cmc
dec
cmp
in
pop
mov
xchg
sub
mov
sbb
jnp
pop
mov
jne
orl
xor
scas
in
inc
out
out
jno
lcall
fs
push
mov
inc
add
sub
test
or
push
roll
ret
mov
push
xchg
ret
jmp
leave
test
xor
sub
movsl
dec
data16
daa
jmp
pop
pop
add
mov
dec
les
jle
repnz
sbb
ret
dec
and
loope
push
cmp
or
inc
daa
test
lret
pop
dec
add
mov
lods
pop
inc
test
addr16
add
mov
push
push
repnz
xchg
lahf
scas
and
push
push
aam
add
sbb
and
xor
xchg
mov
loope
ret
fdivrs
dec
dec
cmp
push
xor
xchg
mov
fmulp
sbb
cmp
adc
iret
iret
sub
aas
jb
addl
test
adc
and
mov
and
pushf
test
lcall
cwtl
mov
inc
sbb
pop
out
or
push
sub
cs
fld
inc
shlb
sbb
push
xor
lahf
adc
push
xor
test
inc
call
jnp
pop
add
xor
add
push
inc
cltd
ret
adc
push
and
cmpl
movsb
xchg
cli
jno
aas
push
xchg
dec
dec
idivl
icebp
in
cmp
inc
gs
imul
jmp
and
add
loopne
adc
sbb
xor
add
add
and
adc
mov
adc
xor
fnstsw
aad
sbb
cli
inc
mov
mov
aad
aad
or
shl
rolb
fwait
mov
cmp
bound
scas
insb
push
jnp
inc
add
add
shll
sbb
cmp
pop
loopne
andl
sub
mov
mov
inc
loope
jmp
xchg
andl
testb
mov
jmp
stc
cmpsb
push
inc
movsl
dec
pop
ret
orl
cmp
subb
rcr
xchg
mov
jg
es
bound
inc
data16
dec
add
dec
jo
inc
pop
shrb
inc
leave
cmp
cmpsb
xor
mov
dec
cmp
xchg
and
pop
dec
mov
ja
dec
mov
jns
push
addl
and
les
or
push
pop
jle
cmp
and
mov
xor
pop
mov
and
mov
jno
jg
pop
insl
mov
mov
inc
and
iret
popa
or
xchg
pushf
out
push
test
xchg
fsubrl
xchg
mov
ja
das
inc
pop
clc
ljmp
mov
xor
lret
dec
or
lea
fs
mov
or
and
nop
data16
sub
push
inc
pusha
loope
jl
rcrl
inc
push
data16
pusha
sub
leave
ret
insl
mov
fldcw
inc
mov
ret
or
call
fdivl
dec
call
adc
mov
adc
pushf
cmp
aam
mov
add
xchg
scas
arpl
repnz
jo
fdiv
out
das
mov
inc
fstpl
adcb
in
clc
cwtl
push
add
cmpsl
rorl
into
dec
add
jmp
dec
mov
adc
mov
push
jo
ds
and
add
mov
cld
push
loopne
out
unpcklps
mov
xor
mov
jmp
int3
fisttpl
xchg
and
sbb
popf
sbb
in
xchg
mov
mov
out
add
push
test
mov
stos
loope
pop
fstps
lock
fsubrl
xchg
mov
and
push
popl
cmp
sub
fstpt
stc
push
xchg
lcall
not
or
push
movsl
inc
and
push
jno
or
and
pop
sahf
lock
call
xor
inc
xchg
ss
or
movsb
mov
shll
decl
pop
pop
xor
xor
call
jb
mov
hlt
xchg
add
inc
les
or
cmp
add
icebp
cmp
or
jo
xor
push
loope
xchg
leavew
add
pop
jmp
inc
jae
sub
dec
push
pop
js
fldenv
cmp
nop
jl
iret
ret
and
add
scas
in
ljmp
jbe
cld
movsl
test
cmpsl
popa
or
and
shl
lcall
icebp
loope
cmp
jle
addb
add
xchg
or
xchg
lret
in
xorl
cs
xchg
jo
mov
mov
sub
je
insl
negl
enter
int
lock
xor
mov
jl
or
and
xor
cmpps
int3
sbb
ss
leave
inc
test
pop
inc
mov
mov
add
sub
adc
jo
or
xor
push
daa
call
inc
mov
and
mov
adc
add
mov
sbb
int3
lret
jp
mov
mov
pop
test
mov
adc
push
push
jg
jmp
cmp
aad
mov
es
std
sti
out
sbbb
lahf
testl
inc
lock
inc
ja
xorl
jmp
les
gs
je
adcb
cmp
jo
dec
pop
pusha
dec
test
les
xor
inc
imul
and
xchg
ret
jg
in
adc
daa
fwait
add
push
push
scas
pop
imul
test
pop
arpl
push
add
or
arpl
inc
push
sbb
out
mov
sarl
icebp
push
adc
xchg
je
movsb
repnz
sbb
jmp
jne
aad
pop
adc
dec
dec
cltd
icebp
arpl
mov
outsb
push
pop
out
adc
or
in
pop
sahf
test
cmpsl
cltd
inc
or
mov
pop
fstpt
dec
add
jo
rcrl
stc
rorl
push
shlb
das
sti
jne
clc
push
push
adc
cmp
rcl
insb
and
mov
dec
jle
mov
mov
fdivs
cmpsl
and
lahf
lds
xor
push
lock
hlt
or
sahf
mov
scas
xor
push
jno
or
cwtl
je
add
popf
test
or
into
add
jo
stc
ljmp
shr
lret
mov
ss
jnp
mov
mov
scas
mov
ja
jge
jle
loopne
cltd
cld
out
xor
push
pop
add
jns
xchg
add
shlb
xlat
daa
cmp
adc
fwait
xchg
inc
sbbb
inc
pop
cmpsl
push
out
xor
int3
jmp
rcll
loop
xchg
pop
nop
xchg
lods
cmp
ss
addl
xchg
insb
call
adc
mov
movsl
and
sub
popf
pop
lcall
sbb
adc
inc
pop
test
add
cltd
clc
scas
std
aaa
fisubs
xor
bound
or
push
lds
push
jg
adc
cld
lock
mov
movsl
add
pop
bound
adc
mov
cmpsb
clc
xor
adc
jecxz
xor
mov
xlat
push
test
adc
andl
je
inc
into
insl
leave
pop
xor
jb
pusha
sub
adc
dec
mov
and
adc
inc
and
fistps
int
push
push
push
cwtl
or
and
addb
sahf
aam
sub
test
pushf
xchg
leave
jnp
xchg
dec
dec
add
cltd
push
pusha
adc
adcb
or
mov
popa
mov
xchg
cwtl
push
ret
xor
sbb
jmp
fistps
pop
add
and
and
sub
jnp
bound
push
mov
in
sbb
cli
enter
out
pop
push
or
or
jo
add
mov
xor
addb
jnp
in
xor
inc
xchg
lock
sub
ljmp
mov
pusha
push
call
sbb
aas
sub
xorb
cltd
loopne
mov
loop
loop
cltd
cmpsb
mov
aad
lret
or
adc
add
adc
movsb
insl
jle
push
orl
rcrl
xor
sbb
jno
inc
mov
adc
pop
mov
scas
scas
push
dec
pop
cmp
bound
lahf
xchg
jbe
sbb
arpl
mov
in
fldenv
out
jne
jns
dec
mov
mov
pop
jb
jb
adc
add
icebp
mov
add
adc
gs
mov
or
pop
jb
inc
dec
inc
imul
pop
xchg
push
adc
dec
in
addr16
arpl
push
and
loopne
jo
xchg
pop
xor
adc
aas
jmp
mov
popa
inc
sbb
es
cmc
stc
xchg
call
xchg
add
dec
add
inc
lea
add
and
fildl
add
cmpsl
fisubl
and
sbb
pop
push
in
push
mov
push
sbb
pop
mov
mov
test
push
mov
rclb
mov
hlt
sub
inc
jg
inc
adc
mov
aaa
and
and
add
lea
pop
mov
inc
adc
push
sub
cltd
cmp
enter
mov
xor
les
je
jl
pop
add
ret
adc
rcrb
dec
jl
push
inc
outsl
and
xchg
cmp
cmp
adc
push
add
or
pop
cmp
inc
push
xchg
test
addl
sbb
roll
lds
adc
adc
test
or
in
adc
fidivl
das
jo
add
ds
xor
dec
inc
xlat
xor
sub
jo
pop
scas
data16
add
popf
pop
pop
xchg
or
xchg
mov
daa
popa
stc
sbb
pusha
adc
mov
push
add
rorl
push
lock
push
xchg
push
popa
dec
sub
dec
push
jns
jmp
jl
push
mov
jae
mov
or
lcall
and
xor
sub
mov
pop
sti
in
sub
add
mov
jp
fwait
pop
mov
jae
add
nop
lret
dec
and
inc
fs
imul
xor
iret
jb
ljmp
in
arpl
add
or
or
mov
arpl
or
pop
or
movsb
daa
push
inc
outsl
sar
jnp
adc
and
and
jae
pop
push
test
sbb
push
push
and
bound
orb
dec
pop
jmp
jmp
stos
or
add
and
cld
mov
repz
and
inc
outsb
es
xchg
jbe
sub
and
cmpb
lea
movsl
pop
add
mov
mov
sbb
stc
loope
or
push
pusha
sub
js
pop
jno
xorb
mov
mov
xor
sub
mov
mov
cmp
or
imul
and
sbb
daa
or
push
test
or
fnstenv
cmp
fstpl
adc
jmp
bound
xor
jns
pop
cmp
xchg
push
dec
or
cs
test
iret
in
ljmp
pop
in
jo
imul
dec
loop
pushf
pop
inc
sbb
inc
int3
je
pop
mov
vmwrite
out
sbb
loope
popa
es
repz
ret
aad
inc
mov
push
pop
das
fst
mov
movq
leave
or
cmpb
adc
xor
ret
sbb
lds
js
sub
enter
out
pop
dec
arpl
jmp
mov
xchg
jb
jno
pop
rorb
shrb
xor
sarl
bound
das
sbb
popf
movsl
fstp
push
shrl
add
sbb
je
jb
ja
cmp
lock
repz
mov
enter
sarl
push
into
xor
cmp
sbb
mov
aas
les
out
rorl
push
shll
in
add
mov
inc
sbb
or
rcrb
shr
jmp
or
push
mov
mov
movl
ret
adc
rol
mov
or
js
xor
sub
inc
mov
bound
pop
stc
or
add
dec
adc
add
or
xor
mov
add
xchg
mov
dec
pop
rcll
push
jb
repz
add
ret
lds
test
fidivrs
xor
mov
jae
ret
add
dec
push
mov
out
call
jg
add
fcoms
aas
or
jb
push
loope
add
add
popa
mov
test
enter
xchg
clc
pop
push
cmp
or
dec
cmpsl
adc
sbb
jae
sbb
or
push
loop
call
lcall
xlat
ja
or
loope
cmp
das
movsb
xlat
lcall
test
arpl
sbbl
scas
adc
jnp
lds
jle
jns
dec
imul
add
jecxz
cli
sbb
or
xchg
mov
sub
rcll
add
in
das
bound
sqrtps
cmpsl
mov
mov
adc
arpl
rorl
repz
imulb
pop
shll
add
push
test
jle
push
add
nop
push
and
or
mov
mov
data16
and
xor
adc
and
pop
add
or
adc
andl
xchg
icebp
jnp
sub
cmp
movsl
lret
push
inc
cmp
dec
scas
sub
les
cli
lods
pop
mov
mov
test
pop
lods
fcmovbe
mov
ret
dec
sahf
sub
dec
lea
sub
sub
xor
or
sbb
fstpt
repnz
mov
js
mov
lock
outsb
inc
rcrl
and
addl
push
fisttps
inc
jg
mov
lds
js
pop
cld
jle
adc
or
lahf
add
adcb
jbe
add
push
pop
adc
sub
cmp
ja
shlb
bound
mov
repnz
xchg
hlt
adc
xor
and
pushf
mov
mov
daa
es
iret
mov
sbb
pop
push
add
rolb
cmp
addl
rolb
xchg
insb
dec
std
cmp
in
sbb
add
and
stc
mov
loopne
imul
enter
imul
mov
popa
mov
pop
xchg
mov
es
lahf
outsl
inc
inc
int3
add
mov
enter
xchg
jmp
xchg
xchg
addl
mov
dec
pop
push
cwtl
mov
sub
jno
test
dec
and
outsb
loope
shlb
add
jecxz
test
xor
and
or
dec
push
xor
pop
rclb
bnd
sahf
repz
and
mov
and
addr16
rolb
dec
jno
xor
stos
adc
xchg
incb
jne
ret
pop
cmpsl
adc
adc
lcall
sahf
mov
pop
mov
push
adc
pop
xchg
add
lret
clc
call
clc
shrb
xlat
add
sub
mov
add
mov
adc
mov
mov
push
cs
xchg
add
add
add
fstpl
pusha
stc
call
sbb
or
xchg
cmp
inc
sbb
fcomi
insb
bound
out
or
sahf
imul
rorl
xor
adc
mov
addr16
xor
aam
mov
add
add
jnp
cmpsb
xor
xor
push
inc
pop
cmp
sbb
mov
fs
or
mov
mov
cmc
push
adc
push
mov
fistl
movsb
lahf
lahf
sbb
mov
and
jb
push
push
cmp
js
xchg
jno
mov
scas
push
and
mov
adc
shlb
mov
sub
mov
fnsave
sbb
leave
movsl
jmp
xorb
es
in
shll
jg
xor
ret
test
cmp
neg
add
push
popa
sbb
add
push
insb
pop
add
xor
je
sbb
sub
scas
pop
int
and
stc
bound
and
das
pop
decl
popa
xor
nop
aas
pusha
cmpsb
andb
arpl
or
pushf
sub
lods
dec
push
inc
sbbl
lods
into
dec
pop
in
repnz
push
push
mov
sbb
dec
dec
addr16
cmp
cs
cmpsl
jnp
add
mov
bnd
push
js
mov
mov
daa
fnsave
xlat
out
leave
mov
sarb
sub
sbb
push
in
mov
movsb
push
xor
mov
mov
xchg
scas
cmp
bsf
sbb
adc
imul
push
add
sub
jmp
test
mov
mov
pop
lahf
out
in
mov
add
mov
inc
mov
push
cmpl
or
jno
mov
mov
stc
cmp
pop
imul
dec
in
and
stos
dec
lea
sbb
pop
inc
pop
add
and
popf
xlat
push
inc
add
out
arpl
add
or
cmpsb
popa
mov
leave
loop
mov
xchg
add
orb
pop
andl
shlb
jo
dec
mov
cmp
inc
ret
mov
aad
jno
sub
inc
adc
je
jnp
sub
pop
cmp
sbb
lret
or
xchg
xchg
mov
sub
or
and
xchg
scas
daa
mov
inc
insl
sbb
fsubrs
orb
fildll
test
pusha
orl
shrl
xor
out
pop
dec
xchg
int3
and
in
loopne
out
fs
cmp
mov
mov
adc
aas
jo
mov
xchg
daa
pop
jo
sub
inc
test
enter
cmpb
movsb
xor
xchg
mov
stos
in
addr16
push
das
jmp
jnp
jg
lea
push
xchg
ss
dec
jg
or
nop
jg
xchg
sarl
push
jns
sub
mov
jb
push
mov
loopne
repnz
test
cmpb
nop
xor
inc
rolb
push
adc
clc
mov
jne
lods
ljmp
dec
pop
inc
shl
sub
sbb
push
fldl
stos
sbbl
pushf
iret
or
inc
push
int
jmp
cmp
sbb
jno
in
push
and
push
movsl
add
push
pop
mov
mov
fs
or
lock
dec
ljmp
cwtl
add
movsl
enter
repz
loopne
xor
adc
pop
cmp
or
movsb
orb
int3
je
sbb
xor
jecxz
sbb
push
je
push
ja
ror
aas
inc
sti
sbb
js
xor
sub
nop
stc
push
bound
repz
mov
fsubs
dec
xlat
in
sti
adcl
ror
orb
or
cmp
in
fnstenv
in
out
in
mov
scas
adc
add
jle
nop
cmp
dec
cmp
xor
bound
jbe
and
push
or
outsl
pop
leave
out
ljmp
in
jae
cs
and
push
mov
jo
xor
inc
sbb
in
inc
lds
pop
sub
enter
jae
call
dec
icebp
dec
aam
cs
add
jmp
cmpsl
jmp
dec
inc
inc
xchg
into
loope
xor
dec
js
xor
enter
cmpsb
outsb
loope
add
mov
sub
dec
add
fldenv
dec
add
inc
jne
imul
xchg
inc
daa
xchg
pop
xorl
cmp
arpl
push
stc
sub
ret
sar
push
ret
lahf
mov
mov
pop
mov
imul
adc
sbb
test
jo
and
jo
adc
push
sbb
mov
push
aaa
leave
sbb
dec
mov
add
add
rcl
pop
sbb
scas
lcall
mov
dec
xchg
or
sub
add
nop
xchg
cmp
orl
push
xchg
daa
or
mov
aaa
add
cmp
lds
xor
cmp
pop
jne
xchg
or
dec
cli
or
test
add
mov
cmp
pop
pop
scas
dec
inc
arpl
call
hlt
mov
add
dec
or
mov
jne
push
into
test
inc
sub
and
inc
rorl
pop
xchg
adc
divl
sbb
jl
lahf
xchg
add
fnstcw
pop
pop
jne,pn
inc
clc
outsl
or
imul
iret
test
aad
inc
adc
fwait
mov
jo
je
ret
fdivs
adc
jo
xchg
test
xor
inc
rorb
or
or
pop
enter
add
add
mov
and
ss
rcll
ret
add
mov
add
xor
insl
int3
sub
push
insb
pop
addl
stos
js
mov
mov
lahf
or
or
addr16
push
lahf
sbb
sbb
popw
fldcw
push
cmc
bound
or
or
imul
pop
sub
mov
push
ret
mov
lahf
pusha
inc
and
roll
pop
pop
popf
add
rorb
imul
sbb
push
je
xlat
stc
push
jb
jno
rorl
loopne
inc
dec
repnz
pop
cs
addb
pop
jne
dec
mov
or
dec
negb
hlt
add
add
or
and
mov
jle
rclb
cwtl
lahf
leave
cmp
stc
es
icebp
jo
les
xor
inc
push
js
mov
pop
sub
jp
str
or
mov
pop
jp
jmp
mov
insl
add
hlt
dec
mov
stos
or
inc
pushf
cmp
scas
mov
shl
fs
pop
adc
mov
jge
inc
and
andl
dec
je
clc
ret
jl
add
and
dec
dec
in
daa
lock
or
fidivrs
add
cmc
pop
call
in
jae
cmpsl
addl
les
cmpsl
xor
xor
adc
lret
aaa
add
dec
movsl
clc
andl
sbb
aaa
scas
sub
lahf
shlb
mov
mov
mov
cmp
dec
sub
dec
ret
sbb
push
mov
push
pop
enter
ds
jmp
push
loopne
cs
imul
jle
inc
inc
mov
sbb
add
cld
cmpb
mulb
push
xor
lea
xor
xlat
mov
and
xchg
mov
bound
rcl
or
je
jmp
fwait
jns
dec
lahf
and
pop
test
jno
adc
mov
pusha
xchg
push
imul
aas
nop
xor
inc
or
lea
and
inc
popa
hlt
lret
sub
inc
xlat
int
es
mov
lock
jne
or
enter
mov
and
je
jp
mov
sbb
shlb
les
int
sub
and
fisttps
inc
lods
test
jo
stos
fisubrs
andb
or
stos
mov
aas
mov
sbb
scas
cmpsl
xor
arpl
cmpsl
rolb
fildl
pop
xchg
and
cmp
ljmp
and
in
sahf
addr16
adc
mov
in
cmp
stos
sti
stos
roll
jo
xor
add
pop
fwait
out
rcrl
stos
cmpsl
dec
popf
add
mov
inc
and
or
and
in
and
push
enter
test
xchg
sbb
add
icebp
adc
inc
scas
fbstp
and
mov
shlb
roll
cs
mov
btc
aam
movsl
orl
mov
jae
pusha
push
jo
jle
pop
jge
aam
and
rclb
xor
jl
mov
adc
jns
and
mov
sub
jecxz
test
ljmp
rcl
mov
pop
mov
rorb
inc
sbb
popl
cmp
push
mov
add
sbb
adc
add
adc
mov
les
pop
movsl
or
aam
adc
addr16
mov
cmp
pusha
jbe
roll
inc
mov
fists
add
or
test
imul
lahf
ja
jnp
mov
lds
sub
xchg
pop
add
in
pop
sbb
add
inc
jae
adc
add
add
popa
icebp
inc
out
hlt
test
xchg
fwait
nop
ds
pop
sbb
sub
and
arpl
mov
imul
out
sbb
dec
xor
add
add
sub
or
dec
mov
rol
bnd
mov
mov
mov
or
xchg
cmp
pop
pop
mov
stc
mov
add
aas
inc
ds
daa
pop
adc
loopne
shrl
hlt
jb
out
lds
cmp
xchg
sbb
adc
xor
jo
lahf
pop
add
mov
xlat
nop
stos
int3
fwait
pop
stos
cmpsb
cltd
inc
sbb
xor
jmp
add
adc
clc
add
outsl
test
jl
shll
ret
addr16
es
popa
and
clc
shlb
loopne
pop
lret
rol
or
add
dec
insl
and
lock
xor
aam
mov
dec
lmsw
aaa
sarb
cli
inc
mov
sub
add
pusha
test
mov
les
sbb
es
mov
and
loope
nop
mov
and
ret
pop
push
push
inc
sub
adc
popf
inc
mov
jecxz
fistl
add
sbb
xchg
sbb
inc
push
mov
gs
cltd
test
nop
mov
mov
fisttps
mov
push
or
pushl
lods
inc
popa
add
out
es
pop
rcrl
inc
mov
filds
aas
or
mov
mov
pusha
and
mov
or
and
fstl
pop
inc
add
add
mov
jns
mov
jns
inc
mov
cmp
adc
xchg
movb
popa
xchg
xor
sub
daa
and
sbb
sbb
mov
add
and
add
clc
inc
lds
xor
adc
mov
ja
xor
lcall
mov
or
inc
add
adc
and
xor
aad
jno
outsl
push
add
arpl
or
lea
push
pop
push
add
sbb
push
flds
adc
arpl
and
rorl
or
lock
cmp
stos
xor
add
loope
sub
jno
test
pop
orl
xor
cmpsb
mov
or
orl
xchg
nop
sbb
push
push
add
pop
xchg
or
xor
in
int3
loope
xchg
int
jne
aam
imul
dec
push
inc
arpl
or
sub
xor
or
repnz
pop
push
push
add
popa
xchg
pusha
xchg
inc
dec
push
lds
dec
repnz
mov
add
dec
dec
addr16
lea
imul
lods
or
aad
movsb
adc
and
adc
add
adc
fwait
sbb
mov
sub
shlb
jecxz
xchg
push
push
rolb
mov
push
xchg
adc
insb
mov
add
imul
xchg
hlt
mov
xor
jne
cmp
mov
dec
xor
and
push
sbb
cltd
sub
or
and
cmp
rcrl
jle
scas
jnp
pop
scas
and
addl
nop
xor
sbb
mov
es
cmp
inc
and
inc
inc
loopne
and
xchg
sbb
sti
inc
shlb
add
dec
xor
icebp
mov
fadds
cs
lahf
mov
xor
int
xor
and
adc
adc
out
xlat
mov
or
jge
lods
push
rolb
repnz
xchg
xor
inc
enter
js
or
inc
and
mov
imul
inc
lods
in
sbb
in
mov
fwait
lods
in
movsl
addl
jno
pop
mov
xor
push
out
pop
ja
sub
add
rol
xchg
add
sbb
fistps
push
imul
mov
adc
pushl
sti
mov
and
xchg
dec
es
sarl
int
shlb
sarl
xchg
and
arpl
xor
inc
adc
xor
mov
mov
mov
fmuls
nop
test
mov
mov
push
sbb
ss
jnp
arpl
add
push
andb
adc
cltd
pop
repnz
add
mov
sub
cs
cmc
imul
xchg
push
xchg
je
hlt
xchg
xlat
in
mov
in
and
xor
mov
sub
add
sti
mov
lods
push
aaa
add
push
xor
xor
inc
xchg
and
mov
pop
mov
orl
push
in
xor
je
loope
mov
int3
jmp
add
fwait
roll
ret
dec
jle
add
sbb
fwait
daa
xchg
sub
xchg
arpl
sbbb
inc
inc
inc
enter
sub
loopne
add
repnz
or
push
and
sub
xchg
pop
xchg
mov
fldl
inc
sbb
or
add
cmpsl
fsincos
icebp
in
xchg
cmp
cmpsb
lret
mov
hlt
icebp
mov
push
push
std
add
in
fs
scas
push
pop
pusha
jmp
ret
in
ret
push
nop
pop
push
and
lock
or
inc
data16
xor
mov
mov
cmp
sbb
dec
mov
mov
adc
pop
xor
dec
push
lock
inc
dec
adc
mov
adcb
sbb
lcall
pop
adc
mov
andl
sub
icebp
add
stos
imul
xlat
pmulhuw
mov
loope
cmp
pop
jno
roll
ja
mov
sub
cmpsl
adc
rorb
inc
dec
and
pusha
add
inc
and
mov
pop
xor
mov
loopne
sub
mov
add
inc
xor
or
or
pop
adc
jg
stos
or
mov
leave
adc
push
orb
xor
aad
orb
adc
addl
in
or
and
or
iret
add
dec
iret
xchg
push
out
sbb
sbb
sbb
pop
stos
ljmp
inc
xchg
test
cmpsl
cltd
in
das
mov
fcoml
or
stos
xchg
cmpl
and
and
scas
add
int
dec
add
and
add
sbb
dec
adc
push
shrb
dec
mov
xchg
orl
sbb
lock
aam
add
flds
xchg
mov
sub
cmp
mov
sub
cmp
and
arpl
add
stos
sub
sub
inc
pop
mov
in
in
test
adc
ret
adc
mov
or
loop
test
fists
stos
dec
adc
adc
cmpsb
outsl
loope
add
dec
inc
sbb
xor
scas
nop
and
xchg
mov
bound
sub
mov
sbb
movsl
in
popa
faddl
mov
out
and
inc
add
cmp
jne
and
adc
shlb
xchg
adc
adc
push
adc
or
sub
jo
xchg
je
xor
mov
jb
cmp
sbb
mov
mov
jg
in
mov
subl
imul
int3
insl
mov
sbb
lds
inc
insl
test
daa
inc
mov
pop
xor
fwait
popf
push
sub
add
scas
mov
inc
mov
and
xor
addr16
or
out
ss
xchg
dec
js
es
mov
jnp
rolb
or
mov
decb
push
adc
cmp
cmp
pusha
and
dec
jae
push
xor
adc
stc
dec
push
in
xor
sbb
pop
lea
and
pop
lods
aaa
or
xorb
xor
inc
sbb
add
in
mov
out
jbe
xor
sbb
ja
mov
scas
in
out
cmp
sbb
mov
or
and
push
adc
leave
pop
adc
jmp
ds
xchg
mov
insl
xor
inc
sahf
xchg
insb
popf
insb
mov
xchg
sub
mov
inc
and
stos
add
sbb
fs
test
or
push
xor
stos
jmp
daa
push
inc
lods
mov
adc
sbb
lret
push
or
push
adc
aam
adcl
addb
sub
add
sbb
push
aas
inc
das
xchg
stos
cmp
je
cld
ret
cmp
inc
cltd
jg
data16
inc
repnz
int
jl
nop
loopne
or
xchg
cmc
sbb
dec
into
sbb
or
add
fbld
sarb
sbb
adc
ror
test
sti
jmp
icebp
enter
cs
mov
sub
or
sub
add
xor
cmp
mov
sbb
jae
into
fwait
push
xor
mov
cmpb
xchg
rolb
adc
xchg
or
jbe
sbbb
lret
popl
inc
cmp
ficoml
xchg
ficomps
cs
add
and
dec
movsb
jge
mov
jns
je
pop
xor
inc
or
flds
jl
insl
call
gs
sub
xor
add
cmp
cs
rol
nop
jno
insl
and
stc
and
aas
jge
mov
adc
xchg
cwtl
or
mov
sbb
add
es
lds
je
mov
adc
mov
mov
clc
sbb
shrl
xor
inc
add
xchg
add
xor
sbb
mov
imul
popa
mov
cs
daa
iret
or
lret
mov
loop
movsb
call
pop
ficoms
subl
mov
les
xor
insb
xchg
dec
in
lret
ljmp
pop
xchg
ds
jnp
outsl
ja
mov
int
mov
lret
or
js
mov
stos
dec
jp
xchg
outsl
xchg
out
push
cld
adc
xchg
popa
mov
lods
jecxz
cmp
jo
and
add
jmp
loop
test
insb
outsl
add
or
aaa
and
imul
mov
jmp
fidivs
pop
mov
repnz
mov
into
dec
inc
test
stc
mov
jg
lea
xchg
push
stos
xchg
sbb
sub
or
add
adc
divl
cmc
xchg
mov
fidivl
xchg
lcall
gs
lcall
dec
stos
nop
jns
les
imul
fsts
icebp
mov
sub
addr16
inc
addb
mov
add
xchg
or
pop
sbb
lods
fstpl
test
xlat
mov
add
icebp
pop
ficoml
push
bound
dec
gs
inc
aad
jl
mov
int
in
lcall
xchg
mov
cmpsl
aad
or
jb
and
inc
les
imul
stos
mov
mov
bound
mov
push
arpl
lcall
es
stc
andl
inc
sub
add
repnz
sarl
movsb
mov
pop
cmc
xchg
pop
mov
and
fnstsw
mov
xor
sub
test
imul
jg
mov
call
rsqrtps
in
insb
inc
loope
and
add
mov
xor
arpl
sahf
jge
roll
jl
push
dec
push
out
rolb
mov
and
mov
mov
sbb
dec
xchg
or
pop
aam
ret
fsts
mov
neg
or
and
sbb
jge
add
andl
push
nop
fcomps
lock
xchg
ret
xor
and
sub
adc
cmpsl
add
and
stos
testb
dec
pop
fcmovnb
jne
icebp
and
rcll
inc
xchg
xor
cld
js
shlb
push
adc
sub
setl
jg
icebp
and
cmp
outsl
subl
and
sbb
dec
call
js
repz
loopne
adc
test
inc
daa
ljmp
std
sub
fdivrl
leave
or
test
lahf
jae
imul
push
sbb
adc
xchg
sub
push
and
mov
stc
aaa
dec
leave
rolb
cmp
es
sbbl
dec
adc
lods
and
or
mov
mov
add
inc
fnstsw
fists
push
adc
inc
xor
mov
mov
cmpsl
ljmp
outsl
call
loope
push
add
leave
jbe
inc
adc
rorb
and
imul
fisubl
cmp
cmpl
cmp
xchg
mov
dec
pop
or
cmp
jo
pop
rclb
cmp
push
dec
repnz
xchg
test
cmpsl
jns
mov
and
mov
and
or
sbb
repnz
fdivrs
orl
inc
pop
sbb
stos
xor
or
ljmp
jmp
jo
adc
add
jns
inc
sarb
xchg
outsl
incl
fs
aas
cmp
cmp
lds
xchg
inc
sbb
xchg
imul
adc
dec
and
mov
nop
jae
cmp
xchg
mov
xchg
pop
and
xchg
sti
loopne
mov
xlat
sbb
pop
pop
lds
jecxz
jne
iret
cmpsb
mov
in
ret
in
add
pop
adc
push
cmp
mov
mov
xor
mov
pop
std
and
inc
shl
mov
sub
cld
pop
adc
cmp
dec
hlt
sub
adc
jo
pop
repnz
ss
and
mov
sub
or
mov
xchg
push
sub
jae
shr
fildll
mov
or
rolb
pop
mov
rolb
sub
push
push
pusha
lds
push
and
cmp
cmp
xlat
es
mov
int3
mov
ds
rorl
xor
inc
cmp
mov
test
mov
vandnps
adc
pusha
jg
rcll
add
push
sbb
lock
push
dec
dec
xchg
pop
setno
repnz
popa
jns
fsts
mov
mov
pop
sub
imul
add
aam
es
cli
lcall
adc
inc
fimull
lock
sub
aaa
out
or
test
or
cld
mov
dec
pop
loopne
cmc
inc
roll
inc
or
dec
aaa
mov
sbb
jp
dec
inc
pop
push
cmpsl
add
push
ret
pop
rclb
xor
mov
repnz
and
mov
iret
inc
xor
sub
add
scas
orl
push
push
out
jge
mov
cmp
add
xor
add
mov
mov
and
or
insl
mov
xchg
js
push
mov
inc
lcall
imul
lcall
lds
addb
pop
loope
add
sbbb
or
loop
jns
loopne,pt
and
or
jle
dec
pop
xchg
stc
fs
imul
das
es
dec
sub
dec
cmp
or
xchg
out
or
int3
loopne
rorb
pop
pop
lcall
shrb
dec
and
enter
imul
ret
aad
dec
inc
mov
xor
orb
pop
cmp
jecxz
lcall
out
and
jo
enter
out
sub
lea
add
rcl
fldln2
or
mov
lods
and
jne
aas
pop
push
inc
push
loop
push
sar
adc
fildll
cmpsb
mov
or
loop
out
pop
xchg
popf
mov
lock
leave
mov
push
sbb
xor
dec
rorl
ds
stos
sbb
dec
push
jns
add
push
mov
nop
stos
shlb
xchg
lds
xor
fs
inc
jmp
loope
insb
rcll
xor
sbb
enter
sub
or
dec
loop
inc
jge
bound
das
stos
into
xchg
cmp
rcll
cwtl
or
dec
cmp
test
add
nop
inc
xchg
leave
adc
inc
repnz
andl
and
pushf
rclb
xchg
cmp
roll
imul
inc
ss
lea
add
jae
adc
sub
out
pusha
dec
xorb
push
add
inc
jae
jne
ret
push
and
in
inc
sub
push
movsl
cmp
push
roll
sbb
lcall
lcall
push
test
jno
adc
push
xor
stos
js
dec
lcall
cmc
cmp
lcall
in
push
xor
or
or
pop
orl
lldt
mov
arpl
mov
and
fwait
sbb
pop
adc
xchg
sub
dec
rcrl
pop
inc
mov
dec
dec
sti
roll
orb
mov
hlt
or
pop
sub
add
movsb
sysret
out
xor
push
test
dec
in
sbb
cmp
lcall
inc
pop
mov
scas
mov
add
add
rdtsc
cli
imul
cmpb
inc
in
arpl
and
or
popa
and
mov
loop
push
int3
xor
fs
jmp
cwtl
push
mov
jns
or
or
js
orb
sbb
jp
lods
leave
test
mov
dec
leave
fldt
jns
test
subl
les
push
xchg
cwtl
sub
mov
dec
xchg
lret
add
xchg
mov
das
in
xlat
xor
iret
stos
and
insl
dec
xchg
je
lahf
mov
push
add
push
and
jl
add
test
push
std
cs
pop
and
add
pusha
stos
and
cmp
push
cs
lods
xchg
xchg
ficompl
das
add
and
pop
rcl
shld
cld
cmpsb
jo
add
popa
or
sub
cmp
add
test
and
jns
sbbb
cltd
dec
pushf
push
andl
jo
and
daa
in
rcll
sbb
popa
das
inc
repnz
or
lea
call
movsb
flds
xor
add
mov
add
in
int
dec
sub
cmp
xchg
push
pop
dec
adc
in
mov
mov
xchg
nop
jne
push
enter
out
pop
test
cmp
std
pop
adc
sbb
dec
rolb
inc
add
mov
mov
ret
mov
fbld
add
and
xor
loop
lock
ret
sbb
pop
jb
xor
and
cmp
aas
aad
sub
mov
jmp
inc
sub
dec
aaa
xchg
mov
scas
in
mov
aas
add
cmp
jo
inc
aad
enter
daa
mov
add
mov
adc
push
enter
mov
adc
jnp
sub
imul
sub
jmp
mov
jmp
icebp
add
and
insl
test
add
ljmp
mov
es
cs
push
int3
mov
or
adc
cmp
cmp
lret
mov
js
cwtl
test
inc
aad
sbb
and
pop
sub
add
scas
or
add
dec
push
adc
xor
jmp
shll
push
xor
adc
xchg
jne
aam
into
mov
lds
scas
add
aam
pop
inc
out
dec
sub
or
repz
mov
inc
in
dec
push
mov
sarb
add
sub
adcl
lods
dec
sbb
aad
jmp
xchg
inc
and
add
add
add
call
push
sub
jo
jno
mov
and
loope
xor
push
imul
push
or
lods
push
adc
sbb
out
rol
push
roll
pop
fistps
imul
and
jmp
push
rcrb
cmp
gs
lods
mov
frstor
and
cmp
rorl
xor
xchg
jecxz
dec
lcall
fstpt
dec
jne
lea
adc
andb
adc
mov
cwtl
pop
or
es
push
dec
inc
and
push
sbb
pop
adc
mov
push
inc
mov
mov
jge
sub
cmp
sbb
and
and
sub
xchg
nop
add
and
lret
jno
inc
bound
add
push
or
jo
and
pop
mov
mov
jp
inc
sub
xor
das
mov
dec
fisttpll
ljmp
cmpsb
inc
inc
int
cmp
jno
xor
mov
sbb
stos
fiaddl
adc
sbb
mov
shl
dec
ret
test
push
lea
cmp
outsb
dec
dec
and
sub
dec
sbb
cmpsl
xor
mov
mov
rcl
push
nop
push
scas
sub
jp
repz
out
xor
pop
xlat
sbb
mov
pop
xchg
xor
adc
sbb
mov
dec
shlb
loop
or
sub
subl
sbbb
daa
jno
mov
xor
and
inc
add
out
aad
mov
cmp
call
sub
xor
add
jo
pop
fcomps
add
jnp
sub
subl
cs
push
push
sbb
dec
fildl
inc
pop
adc
stos
push
in
leave
xor
shr
dec
leave
or
stc
mov
sbb
inc
xchg
add
mov
jl
or
mov
shll
jno
inc
dec
das
add
pop
inc
inc
jg
nop
and
push
loopne
test
jle
sub
jno
dec
adc
mov
fnstcw
nop
sub
push
mov
scas
dec
sbb
jecxz
add
incl
adc
add
inc
je
mov
pushl
xor
dec
iret
mov
into
daa
dec
adc
xor
push
or
or
out
popa
xor
sbb
jno
sbb
dec
jg
ja
daa
and
insb
and
push
add
or
dec
xchg
adc
mov
bound
inc
fildl
jne
lods
mov
and
test
xor
xor
aam
sbb
xor
stos
mov
mov
pop
test
cwtl
xchg
sbb
popf
mov
xor
nop
inc
cmp
rcl
aad
dec
pop
in
push
push
jecxz
xchg
xchg
xchg
dec
rol
jecxz
sbbl
lea
mov
je
mov
mov
jo
pop
mov
adc
icebp
mov
pop
add
inc
arpl
es
scas
and
sub
pop
lods
and
jns
adc
push
or
mov
insb
jmp
sub
aam
jb
addb
and
mov
adc
ret
add
stos
and
push
addl
scas
sbb
sub
xchg
mov
mov
add
int3
test
nop
xchg
pcmpgtw
mov
bound
mov
mov
add
idivl
cmpsb
mov
xor
shlb
dec
mov
hlt
xchg
mov
loopne
inc
out
ja
sub
cld
das
jae
jl
pop
dec
decb
push
ss
cmpsb
inc
xor
mov
andl
or
sbb
mov
adc
iret
xchg
add
mov
dec
add
push
pop
add
and
adc
test
in
fidivs
lods
push
xchg
mov
sti
xchg
jbe
in
andl
or
sarb
or
loopne
imul
gs
xor
cs
jg
lcall
imulb
ss
xchg
shl
fwait
dec
decl
push
add
cwtl
sub
sub
sahf
xor
inc
xchg
sub
fistl
mov
lcall
sbb
aam
push
or
loope
out
fnstsw
inc
dec
jno
pop
pop
dec
mov
arpl
loop
jmp
dec
or
xor
inc
fs
add
mov
lds
push
lahf
rolb
orb
repnz
js
jmp
inc
adc
imul
add
sbb
adc
test
pushf
cs
test
mov
xor
cmp
jns
jbe
mov
ret
fidivrl
and
mov
jne
test
adc
jmp
pop
or
add
lds
stos
push
and
cmp
push
dec
pusha
addl
leave
push
arpl
add
jno
and
and
push
dec
jmp
or
fs
adcl
cmp
mov
inc
test
push
push
inc
inc
lods
push
adc
xor
cli
in
dec
pop
fs
das
movsb
pusha
push
das
add
xchg
mov
fldenv
adc
sbb
aas
mov
lods
mov
sbb
add
in
movb
scas
adc
leave
sub
pop
repnz
cmpsb
sbb
loope
pop
shlb
aam
mov
mov
cmpb
jno
repnz
insb
jge
cpuid
add
clc
jne
inc
mov
push
aad
jl
or
popl
sbb
jg
xchg
repnz
add
popa
mov
fldl
xchg
add
shl
xor
jae
sub
repz
jmp
xchg
jp
sbb
loope
add
add
pop
or
aad
adc
mov
and
mov
push
loope
add
lea
mov
test
pop
xchg
mov
jns
jb
xchg
sbb
push
add
movsb
mov
cltd
mov
dec
out
call
pop
and
rclb
xor
xchg
and
insb
or
pop
cmp
xchg
sbb
push
testb
mov
fldt
xchg
bound
and
insl
lea
aad
add
cwtl
fdivs
fwait
jge
mov
shlb
push
xor
scas
xchg
push
dec
aaa
push
in
cmp
cmpsb
xchg
push
js
jg
addb
loop
xor
cmp
sahf
cmp
sbb
xor
mov
xorb
cmp
inc
pop
xor
fwait
leave
push
mov
xor
imul
xor
mov
sbb
dec
push
push
outsl
rorb
add
jns
hlt
mov
ds
fnstsw
jmp
mov
imul
leave
jl
inc
or
stos
dec
nop
das
add
dec
inc
and
add
repnz
jno
mov
fidivs
mov
push
pop
inc
jl
hlt
add
pusha
cmp
leave
cmp
addr16
inc
fsub
adc
push
ret
sub
jg
and
shlb
fcomi
lock
inc
jmp
out
in
dec
or
xchg
fwait
in
stos
xchg
insl
shl
dec
mov
xor
sbb
mov
imul
loopne
sub
add
movsl
add
add
pop
mov
popf
xchg
inc
xchg
orb
cmpsb
scas
push
popa
xchg
jo
or
scas
or
and
sbb
push
ljmp
mov
dec
xchg
imul
mov
or
adc
dec
sub
sub
pop
and
fs
rorl
or
shrb
or
xor
mov
dec
aad
sbb
loope
push
xchg
out
and
sti
xor
cwtl
cmovae
mov
mov
adc
adc
movsl
scas
mov
jecxz
pop
dec
and
fwait
hlt
or
pushf
xor
out
xor
jno
pop
movl
add
cmpb
push
movsb
loope
dec
pop
jg
sbb
mov
inc
gs
push
jg
xchg
push
shrb
das
adc
rorb
mov
push
shr
or
lock
ss
div
mov
mov
fdivr
pop
xchg
cmpsb
inc
mov
icebp
dec
xchg
int
fdivrs
aaa
pusha
sbb
xor
sbb
or
push
fnstcw
or
das
mov
clc
push
sub
mov
test
dec
pop
out
out
xchg
pop
jl
or
xorb
es
xor
inc
inc
mov
sub
jno
pop
sub
sti
out
add
stc
jmp
loop
cmp
in
dec
cltd
addb
lock
mov
js
xor
in
sbb
fstpl
sbb
mov
das
xor
push
es
mov
xchg
addl
rclb
fwait
cmp
lods
cld
cltd
xchg
out
pop
addl
and
jle
test
push
movl
sbb
xor
mov
addr16
popa
fwait
xchg
sbb
adc
pop
lods
jbe
xchg
xor
dec
test
lahf
cmp
sub
jae
mov
aas
popa
shll
and
stos
push
jb
outsb
repnz
enter
mov
dec
iret
cwtl
cs
je
mov
aaa
dec
adc
mov
inc
aas
mov
pop
fwait
adc
shlb
jmp
mov
and
dec
je
mov
jecxz
jmp
dec
inc
subl
mov
shl
cmp
sbb
or
adc
add
add
sbb
dec
ss
inc
dec
add
inc
push
pop
repnz
cmp
ret
mov
push
popf
add
sbb
sub
adc
ja
pop
enter
or
test
jmp
add
or
ss
cmp
test
dec
iret
mov
sub
call
sub
add
pop
mov
mov
loopne
movsl
stc
das
add
loop
lea
outsb
cmpsb
sbb
mov
cmpl
dec
dec
cs
enter
int3
pushf
xlat
xor
ljmp
les
mov
pop
pusha
pushf
cwtl
popf
jb
sub
test
push
adc
push
stc
ja
mov
repz
sbbl
dec
popf
inc
xor
fst
insl
xchg
sub
in
es
cmpsl
sbb
xor
cmp
fdivs
test
xor
adc
sub
pushf
xchg
fs
or
lock
mov
add
std
movsl
lahf
rolb
mov
xchg
xchg
jnp
cmp
andl
sub
jg
shl
ret
or
mov
or
outsl
insb
je
popf
rclb
int
movsl
xchg
jns
mov
mov
push
shlb
sub
mov
lret
adc
les
inc
xchg
sbb
sbb
cmp
xchg
sbb
pop
test
in
lods
in
mov
jge
aaa
cmp
fwait
sub
xchg
jl
aaa
and
int
das
or
shll
int
xor
lds
sbb
push
fists
rolb
push
or
mov
fildl
punpckhwd
mov
enter
popf
jg
fmuls
mov
ljmp
push
mov
popw
icebp
stc
shlb
mov
sub
inc
imul
mov
arpl
shll
mov
mov
cmp
cmp
std
push
jns
sub
dec
loope
jmp
mov
pop
scas
sub
aas
adc
sbb
mov
mov
cmpsb
and
adcl
aaa
icebp
imul
and
xchg
stos
test
gs
xor
jle
mov
xor
lea
es
loope
pop
mov
fucomp
xchg
inc
mov
ret
mov
pop
test
loopne
dec
sbb
pop
ss
movl
and
dec
sub
loopne
or
mov
movsl
popf
inc
test
inc
add
xchg
mov
add
push
or
imul
jl
in
xor
dec
daa
xor
outsb
jmp
shrl
dec
imul
movsl
adc
push
or
pop
mov
rorl
inc
es
mov
push
and
je
jno
sarb
sbb
test
or
xchg
addr16
dec
pop
dec
add
pushf
mov
push
test
adc
movsb
adc
andb
pop
and
ret
and
data16
sub
sbb
aaa
cmp
inc
stc
add
subb
adc
sbbb
adc
and
cs
rclb
outsb
int
dec
dec
popa
mov
stos
inc
gs
mov
insl
mov
xlat
push
testb
jmp
jne
sbb
sbb
clc
ret
jmp
and
add
jbe
int
imul
cmc
lea
inc
ficoms
in
shrb
xchg
aam
sarl
dec
push
cmpsb
pop
bound
dec
leave
fistps
ret
frstor
pop
int
pop
repnz
cmp
inc
push
xchg
add
mov
sub
out
jg
add
jae
insl
gs
push
sbb
inc
jbe
outsb
je
int
insl
outsl
jbe
inc
imul
and
push
jle
outsb
xor
push
inc
imul
idiv
filds
bound
push
je
imul
pop
mov
dec
jne
je
inc
jns
fsubrl
imul
cs
out
scas
jbe
fcoms
adc
jl
imul
outsl
arpl
outsl
jne
arpl
popa
fs
add
jns
pop
sbb
pop
and
inc
xor
arpl
push
test
outsl
ds
mov
sub
and
imul
loope
fcomp
sbb
outsb
insb
in
push
push
push
adc
divb
inc
fs
jae
bound
rcll
gs
popa
outsb
imul
push
les
hlt
mov
sbb
mov
push
into
lret
jg
andb
push
jnp
popa
ja
into
add
outsl
fs
ret
jo
insb
push
pop
mov
jb
sub
arpl
insb
dec
bound
mov
aaa
cmp
inc
jne
dec
xor
xor
xor
aaa
pop
fildl
xor
jp
jb
out
mov
add
jns
into
ret
mov
inc
cmp
xor
cmp
push
cld
mov
pop
dec
sub
pop
gs
or
fidivl
addr16
jne
jns
lods
gs
in
cmp
push
sbb
push
xor
dec
sbb
sbb
push
jae
rol
jle
imul
int
les
gs
jecxz
sbb
mov
dec
inc
dec
popa
xor
mov
xchg
push
fsubrl
data16
xor
push
jae
loopne
push
and
imul
xor
cbtw
pop
push
xor
lods
xor
sbb
andl
insl
jae
add
sbb
addr16
xor
int3
cs
lcall
inc
cmp
out
jnp
outsb
aas
mov
add
jne
mov
mov
pop
xor
insl
das
lods
lcall
dec
lods
out
ret
call
push
push
int3
push
test
movsw
push
icebp
pushf
test
push
outsb
xor
dec
insl
cmp
test
push
data16
arpl
pusha
push
jge
jo
insb
sbb
jae
inc
jo
pusha
pop
xchg
and
inc
mov
sbb
inc
jnp
daa
inc
or
inc
out
inc
inc
adc
mov
push
mov
inc
and
xor
test
dec
jae
subl
lock
inc
mov
inc
and
jecxz
fs
mov
add
adc
call
and
jp
push
aad
outsl
and
pop
cwtl
push
das
push
daa
test
lretw
inc
out
push
scas
imul
pop
shlb
lea
add
popa
insl
and
and
push
mov
jl
inc
outsb
popaw
add
fisubrs
add
sti
xor
mov
ret
jge
inc
nop
mov
popa
stos
sub
push
sbb
movsb
pop
sub
sbb
cwtl
jno
int
or
outsb
dec
gs
sub
rcrl
lahf
jns
jno
and
sub
jg
sbb
jnp
push
outsl
or
inc
sub
push
shll
add
dec
aad
in
push
adc
lret
or
fcoml
pop
jb
cmp
pop
inc
pop
insb
imul
scas
push
lods
mov
adc
cmp
sbb
les
inc
dec
or
jns
xor
and
mov
push
nop
push
push
jbe
outsb
jo
push
lcall
or
add
xchg
cmpsb
mov
fdivp
jecxz
inc
dec
sbb
bound
inc
dec
js
rcrl
mov
insb
push
dec
push
pop
dec
jae
fsubs
cmp
pop
mov
fisttpl
bound
inc
xchg
dec
int3
adc
sbb
fwait
aad
add
insl
bound
or
addr16
into
jl
inc
outsl
mov
outsl
or
std
daa
jmp
push
inc
add
dec
add
add
cmc
jge
loopne
sidtl
add
pop
add
jb
daa
icebp
xchg
jge
adc
inc
pop
xor
mov
pop
add
add
cmp
imul
push
push
inc
shl
outsb
and
daa
sub
jo
add
scas
loopne
divb
inc
std
cs
xlat
cmp
nop
and
mov
js
jb,pn
mov
mulb
cmpsb
cmp
inc
add
mov
pusha
add
mov
lahf
dec
jo
lahf
movsb
stc
push
cs
sbb
orb
push
pushf
or
lea
cmp
xchg
or
inc
aaa
xor
cmp
and
sbb
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jo
inc
add
inc
add
pusha
inc
