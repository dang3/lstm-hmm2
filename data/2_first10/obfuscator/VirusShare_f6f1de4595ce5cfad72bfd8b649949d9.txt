push
call
ret
ret
pop
inc
in
cld
lahf
push
mov
ds
mov
in
lea
clc
ror
negb
jge
loop
inc
push
cmp
adc
mull
lret
jo
jp
loop
mov
aam
inc
outsl
jle
mov
cmp
xchg
xor
sub
out
cmp
sbb
dec
push
xorb
mov
inc
pop
dec
sub
in
or
xchg
in
dec
es
aas
sbb
jp
in
pop
in
out
les
cmpsl
jp
gs
iret
mov
pop
pop
dec
test
push
sub
subb
or
es
xchg
addl
stos
insl
imul
daa
push
inc
xchg
fildl
dec
sahf
pop
jbe
sbb
jg
mov
jae
data16
jl
sub
xchg
je
mull
andb
sub
test
inc
sub
mov
dec
pop
pusha
mov
lock
inc
mov
push
enter
jnp
daa
aaa
jne
mov
outsb
fmul
add
mov
in
or
dec
repnz
adc
lods
pop
fnstcw
mov
movsb
add
jb
or
popa
pop
and
push
lds
ds
ds
pusha
dec
shr
fnstsw
inc
mov
pusha
fiadds
xor
mov
gs
int3
adc
inc
roll
or
lock
cld
mov
cs
push
dec
iret
jp
push
xchg
pop
xlat
arpl
cwtl
inc
push
arpl
cltd
lods
xchg
jle
or
in
mov
cltd
sti
insl
xchg
mov
fiadds
sar
cmp
dec
shll
lcall
aas
sbb
fdivrp
mull
or
sarb
cmpsl
jne
enter
leave
cmc
pop
aas
test
cli
nop
push
popa
repz
xchg
sahf
outsb
aaa
aaa
push
sub
push
cmp
xchg
sbb
add
jnp
mov
mov
ret
test
fists
cs
jg
loop
aad
inc
jp
pop
dec
jg
sub
test
lods
mov
xlat
mov
test
push
stos
xor
mov
and
mov
adc
push
push
xlat
sub
icebp
bound
cmpsb
mov
jns
repz
jg
cmp
jp
enter
push
xor
or
call
mov
hlt
xchg
pop
icebp
daa
arpl
arpl
cld
inc
addr16
xor
add
or
shrl
into
xor
enter
pushl
inc
clc
int3
lock
test
xchg
imul
jmp
out
and
xchg
aaa
sbb
scas
int
aaa
adc
xor
dec
insl
adc
in
out
jle
cld
cmp
cld
std
js
cmp
jno
inc
fstps
std
inc
xor
icebp
out
nop
scas
cmp
daa
scas
push
in
sub
in
iret
xchg
xchg
pusha
xor
pop
inc
imul
mov
rcll
pop
mov
xchg
pop
push
push
imul
call
pop
dec
int3
or
push
and
cmc
or
jmp
sahf
outsl
xchg
mov
fs
push
jno
xlat
into
lods
or
inc
xor
ja
push
incl
loope
xor
das
fwait
outsl
mov
sub
jmp
dec
cmp
pop
and
hlt
sbb
or
lahf
pushf
int
mov
push
pop
lahf
pop
mov
cltd
aam
jge
xor
lea
mov
std
jne
ja
hlt
mov
mov
push
sub
jnp
adc
jne
mov
ja
xor
pop
push
and
loope
sbb
add
es
pop
bound
out
jne
inc
mov
sub
xlat
pop
sbb
and
je,pn
movsl
xchg
jns
dec
out
mov
int3
loopne
jae
sub
mov
loopne
es
mov
push
test
cwtl
mov
xchg
js
mov
xchg
cmpb
leave
mov
lds
test
sahf
adc
std
dec
xchg
sub
insb
adcl
scas
pop
xlat
popf
cmpsb
out
inc
mov
mov
jg
out
das
call
xchg
mov
jbe
adc
cld
xchg
push
add
or
jecxz
push
mov
inc
faddl
test
shlb
adc
rorb
loopne
in
repz
aaa
les
punpckhwd
sub
jle
inc
jb
imulb
nop
iret
jnp,pn
repnz
lret
mov
fwait
dec
shlb
adc
pop
xor
lods
out
test
leave
in
orl
and
fdivp
xor
cltd
fwait
lret
push
adc
aaa
jns
cmp
lret
jecxz
in
xchg
push
xor
or
sti
sbb
sub
ljmp
cmp
cmpsb
ljmp
xchg
std
lods
mov
in
aam
push
dec
repnz
dec
lock
out
xchg
insb
inc
dec
cmp
dec
ljmp
mov
inc
clc
add
push
sub
sbb
sub
sub
jns
fs
mov
push
stos
lods
dec
xchg
dec
pop
add
pushl
cltd
xchg
cmp
popa
fs
insl
leave
and
mov
repz
jp
lds
test
aad
and
in
out
scas
movsl
and
scas
mov
jg
cs
je
lds
push
jns
mov
jle
sarl
jnp
clc
test
repz
pop
popa
dec
add
ret
sub
and
jo
or
jmp
xor
pop
arpl
jo
js
out
push
jno
int3
cmp
fmull
repnz
int3
lods
pop
mulb
ss
fmuls
jp
leave
out
mov
inc
xchg
test
xchg
mov
in
push
mov
xchg
inc
arpl
inc
repnz
in
pop
lock
arpl
cli
mov
mov
imul
lcall
adcl
aad
test
mulb
xor
xlat
into
in
sbbb
lea
repz
inc
adc
add
xchg
fiaddl
or
lods
push
ja
mov
jmp
xchg
adc
scas
adc
mov
mov
cmp
xor
les
push
mov
inc
dec
pushf
sub
mov
ja
mov
adc
push
sub
jo
jg
pop
or
mov
sarl
pushf
mov
push
push
and
mov
mov
inc
jl
cmp
xchg
dec
ja
and
cmpsl
daa
cld
add
lahf
mov
sub
data16
test
cmpsb
sub
jnp
fwait
aad
pop
jae
and
or
mov
jecxz
jo
pop
push
mov
stc
xchg
inc
popa
inc
movsl
sbb
sti
cld
div
sarb
pop
jge
jne
push
dec
fcmovne
std
cmp
mov
orl
lods
icebp
into
insl
loop
faddp
repz
sub
popa
push
xchg
shlb
pop
mov
xchg
rolb
adcb
js
mov
cs
inc
sub
adc
cmc
les
int3
in
divl
xor
movsl
mov
mov
xchg
and
mov
jbe,pt
xor
sarl
mov
push
loop
inc
gs
xchg
mov
sti
dec
jo
pop
mov
in
pop
jecxz
mov
loope
insb
dec
mov
sbbb
iret
push
int
ds
in
or
or
stc
mov
xor
ret
cld
scas
hlt
add
adc
cwtl
pop
hlt
into
ja
gs
and
rcrl
or
inc
xchg
ret
or
out
push
in
cmp
aam
adc
test
adc
inc
sub
dec
lret
into
mov
fwait
jo
sbb
sbb
sub
dec
sahf
xchg
push
js
cmpsb
adc
iret
aas
cmp
sub
pop
fidivl
sub
inc
inc
fldenv
mov
jecxz
mov
xor
jg
inc
mov
pop
inc
mov
fwait
mov
jnp
xor
or
cmp
fs
push
lret
cmp
or
mov
lcall
cltd
ja
inc
ret
adc
lret
and
adc
mov
fwait
or
cmp
aaa
arpl
icebp
popa
enter
mov
inc
sbb
movsl
ret
mov
inc
and
loopne
lret
lock
dec
sahf
insb
stos
jecxz
jg
cmp
je
cltd
es
movsb
mov
es
mov
cmp
adc
jo
jno
movsl
sarb
push
inc
dec
dec
lahf
nop
push
and
das
xchg
sbb
add
dec
sub
outsb
or
xchg
mov
ja
int3
dec
in
scas
popa
mov
es
stos
cmp
mov
push
sbb
icebp
insl
adcl
ret
cmp
bound
mul
int3
mov
adc
comiss
adc
rcrl
out
sub
fisubl
int
lret
fisubs
cltd
or
sbb
fxch
in
sub
cmp
xor
out
xor
fsubrs
xchg
and
bound
pop
pop
orb
jl
movsb
mov
loop
std
sub
pcmpeqw
xlat
adc
and
mov
pop
test
xchg
sub
in
outsl
das
lods
rcrl
ss
mov
outsb
push
mov
ljmp
xchg
lahf
lds
inc
push
adc
repnz
cmp
out
xchg
sub
and
fdivl
and
pop
sbb
push
insl
lds
jl
pop
js
cs
test
and
mov
pop
js
push
outsb
adc
sbb
dec
fisttps
sahf
jo
and
lret
dec
dec
jae
nop
xlat
dec
fdivrs
addr16
std
in
xchg
dec
or
mov
jle
rolb
sti
and
rorb
sbb
fsubrs
push
xchg
fldln2
dec
jle
xchg
pusha
xchg
pop
jmp
stos
sbb
shlb
out
gs
lahf
iret
out
sub
mov
adc
nop
maxps
scas
dec
gs
dec
outsl
inc
fs
sahf
push
sbb
frstor
pop
sub
mov
mov
push
pop
mov
ret
out
rcrb
sub
jae
cmc
push
outsl
pop
and
insb
jp
mov
jmp
jmp
pop
sub
add
adc
and
xchg
xor
pop
aam
pop
xor
mov
mov
aaa
jae
sti
aas
in
mov
in
jns
dec
clc
lods
int3
bound
cld
loopne
popa
mov
daa
sbb
mov
or
add
int3
fisubl
xchg
rcll
jbe
dec
mov
icebp
ds
xchg
in
xchg
cs
mov
pop
lods
jb
push
rcrb
cmpsb
sbbl
push
hlt
int3
inc
aam
lcall
js
aad
sub
add
cwtl
lret
incb
pop
push
cmp
arpl
jecxz
push
ret
adc
frstor
pop
mov
xchg
ja
ds
aas
addr16
loope
mov
inc
cmp
rep
push
daa
xlat
fldt
push
imul
xchg
stos
ss
test
fprem
jno
or
cli
ret
mov
sbb
sub
jno
lock
sbb
shll
arpl
mov
xchg
xchg
adc
dec
dec
dec
outsl
cmpsb
in
pop
mov
cmp
mov
push
lret
mov
dec
sub
dec
and
pusha
fwait
pop
cmp
push
sbb
or
pop
mov
sub
imul
xchg
into
sbb
repnz
not
xor
pop
pop
cmpsb
jge
xor
cmp
mov
imul
daa
push
dec
push
mov
cmp
pop
mov
cmp
sti
push
push
jl
mov
jle
jge
aas
out
lret
mov
outsb
cmp
mov
rcll
roll
sub
arpl
or
xlat
sub
rclb
inc
lods
add
pop
dec
sub
hlt
push
cmp
sub
xor
insl
lahf
dec
cmp
notl
xor
inc
je
popa
jl
mov
push
or
pop
fs
lret
xchg
pop
jge
daa
leave
andb
add
inc
sti
in
push
inc
mov
scas
test
shl
mov
pop
movsb
sets
fwait
sahf
cmp
test
mov
leave
stos
jg
sbb
or
lds
repz
ja
cs
jle
scas
push
daa
iret
cmpsb
imul
xlat
push
ficoms
push
mov
aam
out
sub
cmc
xchg
lods
enter
xchg
push
xor
jne
scas
push
jmp
sbb
cli
clc
mov
inc
push
pop
pop
dec
and
cmpsl
sub
gs
inc
mov
and
xor
gs
mov
push
icebp
mov
jg
shlb
mov
push
movsl
fiadds
outsl
add
dec
sahf
lea
xchg
outsb
lds
aam
lret
cli
sub
pop
pusha
inc
std
stos
aas
xor
sbbb
ret
jecxz
stc
rcr
or
ret
aad
mov
sbb
xchg
add
ret
test
add
mov
push
xor
stos
inc
jae
inc
jmp
imul
cmp
inc
lods
pop
mov
iret
xchg
movsl
jb
mov
pop
sbb
xchg
mov
incl
mov
ret
lcall
inc
add
popf
cmp
xor
aad
jge
arpl
shlb
iret
cmp
das
xchg
mov
jmp
and
adc
aad
pushf
sub
mov
xchg
sub
fistpl
jns
popf
andl
bound
sti
add
jb
xor
mov
out
das
pop
add
cmc
fstps
insl
mov
cltd
popa
sbb
adc
pushf
xchg
cmp
fldcw
push
sti
cwtl
xor
aad
lahf
inc
add
scas
mov
andb
dec
add
daa
adc
xchg
jge
fisttps
add
inc
add
lahf
inc
push
jmp
sbb
sahf
cmpsb
out
cmp
jae
xor
cmp
and
pop
cmc
imulb
xchg
jp
or
mov
pop
adc
and
cmp
push
loopne
xchg
and
and
and
jl
mov
in
xchg
outsl
lods
inc
jle
adc
dec
cld
pop
mov
sbb
mov
in
sub
imul
call
mov
fsub
cmp
imul
cmp
lods
in
cmp
push
cmpsl
xchg
out
push
xor
jne
out
jae
push
sbb
sub
rolb
pusha
int
cwtl
fldenv
push
shr
fiaddl
popf
cmp
push
jle
and
jnp
pushf
xlat
inc
fistpl
push
orb
push
and
movsb
fs
mov
or
push
js
mov
fwait
add
push
nop
add
test
movsb
ret
pop
mov
clc
fidivs
dec
loope
xor
cmp
mov
aam
mov
popf
scas
mov
mov
mov
mov
js
jns
and
ret
mov
mov
enter
push
inc
xchg
clc
dec
xchg
lcall
mov
call
mov
pop
and
fsubrl
fcompl
push
shlb
inc
cwtl
adc
sub
jg
cmc
insb
into
jnp
push
jmp
in
jecxz
push
roll
pop
xor
imul
ret
test
sbb
add
mov
sbb
mov
dec
insb
aaa
jnp
xlat
aas
jecxz
sbb
pop
sub
fldl
push
mov
mov
adc
jmp
pop
imul
fs
psrad
pop
loope
cmp
or
sbb
xchg
jno
mov
rorb
lcall
inc
cmp
popf
dec
pop
push
xor
enter
push
sub
icebp
sub
push
into
jmp
push
and
xchg
mov
jo
imul
and
out
stos
xacquire
repz
push
jecxz
mov
or
call
aam
add
or
lret
cmp
cmpsb
cli
xchg
leave
inc
add
scas
sti
xchg
lea
pop
testb
cmp
sub
push
jnp
js
dec
fidivrl
mov
popa
repz
shrb
test
mov
push
lret
jp
incl
jge
adc
pop
cmpsl
adc
and
mov
push
pop
cmp
sbb
add
pop
and
test
adc
push
fistpl
sbb
jno
xlat
and
fwait
daa
hlt
outsb
std
js
cld
lret
test
dec
in
ss
xchg
mov
test
inc
imul
rorl
out
adc
dec
outsl
rol
push
popa
xor
shr
test
inc
icebp
pop
outsb
fsubrl
sbb
dec
pop
sub
int3
mov
test
lock
int3
pop
add
dec
fnstsw
dec
aaa
xor
cmp
mov
sbb
lock
mov
fcomps
test
iret
inc
les
nop
cs
stc
iret
or
xchg
pop
push
push
pushf
call
cli
sbbb
dec
and
inc
shll
cs
ds
imul
cs
ss
rcrl
mov
cmp
cwtl
mov
dec
ja
xor
ds
xor
push
mov
sbb
sahf
mov
add
jo
sahf
push
and
sti
and
cmpsb
out
das
push
jne
les
ljmp
fidivs
int
push
fdiv
bound
pop
adc
jb
std
pop
ss
dec
adc
jg
add
daa
imul
lret
les
xchg
or
je
push
loope
pop
mov
js
sarl
out
cli
insl
insl
xchg
mov
ds
ja
dec
or
push
fwait
bound
fsubrs
mov
pop
mov
cltd
popf
xor
lcall
xor
inc
loopne
pop
jbe
aaa
mov
scas
mov
in
insb
js
mov
pop
push
leavew
sti
test
out
and
inc
rol
jae
dec
cs
lea
mov
cwtl
push
scas
mov
adc
mov
jmp
pop
decl
inc
mov
mov
mov
stos
adc
in
pop
xor
mov
hlt
push
ja
and
xchg
inc
in
ja
lret
sub
mov
leave
mov
int
negb
pop
imul
dec
jg
adc
sub
mov
out
xchg
movsl
or
pop
fwait
lret
ret
adc
pop
rorb
cltd
cltd
mov
jnp
and
in
popa
xor
inc
shl
out
pop
inc
and
cmp
cmpb
loope
scas
sti
and
pop
push
dec
xorb
and
clc
xchg
pusha
sbb
jns
sbbb
ljmp
andl
int
rol
fwait
mov
cmp
add
dec
cmpsl
stos
out
xlat
or
cmp
out
ss
sbb
outsb
into
mov
xchg
je
dec
and
jp
decl
or
and
jno
lods
lods
icebp
enter
fnstsw
xchg
cld
in
mov
push
js
test
push
cmp
addb
sub
idiv
vpmaxsw
and
sbb
pop
push
out
repz
or
mov
mov
fs
aas
cmp
loopne
jnp
lret
mov
cli
inc
dec
pop
or
inc
push
xchg
sub
cmp
mov
psubb
lea
mov
lret
cwtl
xor
dec
cmpsl
test
mov
sub
vprotd
imul
fmuls
mov
cmp
sbb
mov
loope
imul
xchg
sbb
into
lock
add
je
cmp
cmpb
jbe
rcrb
jge
testl
push
push
cmp
stc
jmp
pop
sub
pop
cmc
js
stos
dec
cwtl
cmp
fstl
mov
fstl
dec
aas
xchg
sahf
cli
or
xor
mov
inc
mov
call
xor
jo
fwait
xchg
and
call
and
fldenv
jae
sub
xor
mov
stc
bound
jge
cmp
mov
xor
mov
mov
and
sarb
push
in
or
fwait
je
inc
sbb
sub
iret
xor
aaa
cmp
shr
xor
push
insb
decb
push
lret
adc
subb
lret
push
dec
std
or
or
cli
fcmovu
js
ficomps
mov
out
scas
aad
jb
add
call
pop
popa
aad
rol
xchg
jle
add
jge
sbb
imul
inc
aad
adc
ret
add
aam
dec
fisttps
mov
mov
xor
ljmp
hlt
dec
and
mov
cli
fcompl
cmc
xchg
adc
pop
fdivs
fsubp
jp
loope
je
pop
xchg
sbb
lds
jns
xchg
mov
subb
outsb
sbb
sub
in
les
push
pop
jecxz
inc
push
adc
xor
shl
jle
inc
pop
sub
xchg
jae
es
push
dec
xorl
inc
or
insl
cmp
mov
cmp
and
lock
testb
inc
clc
iret
inc
test
or
sub
outsb
in
pop
decb
test
inc
mov
xchg
loopne
inc
test
stc
divb
int3
aaa
inc
test
xchg
insb
insb
dec
xchg
pop
mov
lahf
dec
lret
nop
ficoms
loope
js
in
inc
mov
aaa
jo
test
adc
test
icebp
adc
sahf
daa
pop
lock
sbb
push
sub
ret
ds
inc
pushf
jg,pn
scas
push
jb
inc
aam
adc
out
fstpl
jge
aad
out
sbb
jmp
cmpsb
andl
inc
xor
sbb
out
lret
sub
xor
cltd
adc
aas
inc
push
fwait
pushf
mov
in
pop
pushf
lods
iret
addr16
inc
sub
push
xor
outsl
dec
outsl
add
pushf
push
jb
out
std
sub
jns
jl
stos
out
insb
xor
ja
mov
inc
lock
xchg
cs
cmp
or
mov
sti
adc
fadd
rolb
lods
pushf
add
xor
dec
pop
mov
int3
test
mov
pop
daa
pop
push
xor
xor
push
incl
repnz
fiadds
dec
in
inc
mov
jl
or
jae
int3
inc
jg
outsl
ret
jnp
adc
xchg
out
iret
push
out
sub
xor
out
pop
fbld
fcompl
mov
or
sub
lcall
out
test
push
in
fwait
mov
test
cmp
in
fsts
and
int
xor
mov
push
push
nop
and
jmp
stc
aam
jle
jge
bound
pop
jbe
xchg
jle
lds
stos
mov
xchg
mov
adc
or
xchg
adc
icebp
jmp
fs
test
cmp
xor
sbb
jne
pop
adc
repz
xor
enter
cmp
cld
jg
sub
popa
sahf
pop
sub
lea
shl
adc
das
in
divb
insb
mov
into
xchg
out
jl
popa
out
popf
fmull
pop
les
les
xchg
rclb
sub
cs
pusha
scas
imul
xchg
nop
lcall
fld
cmp
xlat
xor
daa
test
jl
loopne
sahf
das
gs
arpl
push
sbb
imul
ds
add
lcall
fdiv
jg
adc
sub
push
cmp
addr16
loop
jmp
inc
test
mov
add
fldcw
jl
call
and
jne
lds
mov
or
push
adc
jg
jnp
test
movsl
add
jmp
push
pop
stos
dec
stc
sub
popf
mov
fmull
mov
or
push
scas
cmp
push
mov
sub
fs
sbb
sbb
fidivs
arpl
stc
or
sub
inc
fwait
lret
add
loop
and
mov
daa
popf
push
imul
int3
sbb
stos
fidivrs
test
jbe
dec
ds
ss
loopne
mov
pusha
jge
dec
ss
inc
pop
in
dec
loope
pop
roll
inc
add
sbb
xor
aad
bswap
mov
fs
push
dec
or
es
inc
outsl
mov
mov
and
xor
cmpsb
push
jg
ret
iret
inc
testl
and
xor
jnp,pt
iret
nop
inc
rol
lea
or
mov
lahf
push
repnz
xlat
andb
lret
popl
outsb
pop
xchg
and
pop
mov
mov
mov
adc
dec
into
inc
lahf
sub
out
ljmp
aam
imul
jp
inc
mov
xchg
jno
jae
dec
xlat
fistpl
adc
mov
int3
jp
inc
mov
xchg
sbb
mov
jo
dec
push
repnz
clc
mov
dec
mov
sbb
xchg
aaa
and
scas
inc
jge
cmp
imull
lahf
fcomps
inc
adc
inc
adc
lods
or
mov
or
pop
xchg
or
and
push
jae
push
and
mull
sbb
dec
jns
sub
sti
repz
xchg
enter
and
xchg
shl
scas
xchg
cld
dec
inc
aas
incl
dec
or
pop
adc
and
jl
add
test
lahf
adc
or
mov
scas
pop
aam
ffreep
cmp
bound
adc
dec
adcb
xchg
jns
jns
xchg
mov
fdivrl
mov
popa
sbbb
daa
xlat
lret
lea
sbbl
out
xor
mov
sub
sub
aaa
fnstsw
xlat
pop
mov
xchg
loopne
sub
sti
push
insb
inc
and
sbb
add
add
or
dec
cwtl
push
fisubs
push
pop
sub
ffreep
movsb
add
inc
ljmp
aaa
hlt
ffreep
sub
mov
jae
jb
add
add
cld
loope,pt
adc
std
aas
cmp
nop
xchg
out
jg
push
idivb
push
mov
sbb
dec
mov
mov
mov
cmpl
mov
sbb
cmpsl
insb
lock
and
pushf
mov
cmp
mov
mov
mov
dec
mov
sub
sarb
xlat
movsb
push
or
test
or
pusha
xor
dec
das
mov
out
push
cli
insb
push
int
adc
jnp
test
outsl
clc
pop
mov
stos
subb
fstps
arpl
jbe
scas
stc
xor
jle
push
enter
lds
jp
loope
dec
add
daa
ficoms
ffree
xchg
cltd
dec
mov
jno
and
dec
out
in
mov
or
inc
sarl
scas
test
mov
testl
sahf
add
xor
icebp
and
mov
rclb
repnz
xchg
push
stos
push
test
data16
sbb
fisttpl
push
lret
and
push
sbb
xchg
sbb
aas
mov
push
ficomps
inc
movsb
js
pop
mov
fsubs
and
and
push
stos
arpl
cld
push
inc
dec
sti
cmp
sub
xchg
xchg
sub
loop
mov
mov
mov
adcl
xchg
dec
fistl
xor
mov
mov
ret
arpl
xlat
cmc
xor
in
daa
imul
outsb
addl
push
xor
inc
jns
rol
or
loop
cmp
ds
shlb
ss
dec
jnp
mov
or
inc
int
pop
sub
mov
dec
mov
enter
out
cltd
out
mov
in
insl
xchg
sbb
imul
std
or
test
push
xchg
cmpsb
loope
mov
out
and
cmp
fisubl
ret
sarl
xor
or
hlt
pop
push
lods
mov
jns
dec
jecxz
std
dec
into
jae
or
dec
es
and
or
daa
cwtl
jmp
and
enter
jl
push
sbb
add
call
push
mov
rcll
lahf
jl
jae
mov
jecxz
clc
add
sbb
and
push
ja
cmpsb
push
mov
xchg
decb
or
lods
scas
addl
subb
insl
fidivl
and
mov
push
dec
gs
xor
add
or
jp
mov
out
add
orl
mov
test
jo
nop
dec
in
jns
ljmp
test
mov
lds
mov
outsb
inc
movsb
or
xchg
les
lock
cmpsb
fwait
pop
pop
das
push
lock
mov
and
mov
xlat
ror
jb
into
lock
mov
stos
arpl
push
push
arpl
sarb
jp
repnz
shrb
mov
sbb
mov
or
jbe
popf
xor
dec
and
jecxz
pop
pop
int
test
xchg
popf
dec
or
jmp
mov
imul
int
adc
mov
mov
imul
mov
jmp
fiadds
adc
xchg
push
xor
hlt
adc
ret
sub
sbb
mov
icebp
and
frstor
mov
and
jl
pop
les
sub
insb
xor
mov
jp
pop
sub
mov
outsb
out
cmp
fcomp
adc
dec
aaa
jge
mov
cli
dec
inc
ja
jne
push
iret
clc
ret
mov
insb
sub
in
xor
or
and
or
or
nop
mov
inc
out
or
dec
cli
cmp
xchg
add
arpl
or
shrb
test
pop
repnz
cmc
mov
sub
push
loope
push
out
enter
inc
dec
xchg
and
test
mov
add
add
jno
add
jmp
scas
mov
aam
mov
pusha
gs
pop
jle
jl
mov
fnstsw
sbb
fwait
cmp
scas
mov
mov
cmpsb
pushf
fdivp
jbe
cmpsl
arpl
mov
mov
addr16
xchg
test
xor
xchg
or
ljmp
push
mov
repnz
aas
fstpl
push
or
jae
hlt
jb
xchg
jg
adc
fstl
cmpsl
inc
mov
out
mov
outsl
mov
adc
and
cmp
call
xor
jle
jle
jns
aas
adc
andb
adc
dec
icebp
and
subb
cmc
and
icebp
and
xor
insl
or
stc
iret
scas
jo
rorb
xlat
xor
pop
sbb
xor
ret
pop
loop
xlat
adc
jg
movsl
or
rcrl
push
daa
dec
push
xchg
mov
sbb
into
jbe
push
mov
testb
add
mov
jg
dec
imul
or
fs
pop
clc
cmpsb
add
adc
sbb
jp
jno
xchg
pop
add
xor
jnp
movl
cmp
lret
jbe
call
pop
lods
xlat
jl
or
xchg
push
aaa
enter
xchg
test
inc
mov
mov
or
push
pop
test
rclb
sbb
rorl
mov
ds
subb
icebp
sbb
sub
push
sub
xchg
addr16
xchg
dec
add
mov
pop
stos
and
pop
pop
imul
in
popl
inc
fs
jae
jno
call
test
pusha
push
ds
cs
rcl
iret
or
jp
push
sbb
cmpsl
push
rorl
mov
idivb
xor
movsb
jmp
les
rcr
sub
inc
xchg
cwtl
int
jbe,pt
mov
cmpsb
sub
cmp
add
dec
test
imul
jo
fsubl
repnz
lcall
test
inc
movsb
scas
mov
arpl
jne
xlat
aad
adc
neg
movb
movsl
scas
movb
jno
mov
xor
jbe
subl
and
mov
inc
pop
xchg
insb
mov
leave
mov
rcl
or
xchg
xor
fstpl
inc
xchg
sub
jns
or
loope,pn
aaa
lods
xchg
aaa
sub
mov
or
mov
fs
loopne
hlt
xor
fsts
sub
xchg
pop
sbb
xor
and
es
xor
cmp
out
repnz
imul
cmp
ljmp
mov
scas
nop
cmp
lea
add
gs
out
mov
pop
imul
in
inc
xlat
ret
fadds
xchg
insl
insb
lret
xlat
into
or
je
pop
xchg
xchg
xchg
pop
push
test
aam
loope,pt
jnp
in
pop
icebp
dec
and
push
ret
mov
jp
inc
mov
fcmovnbe
adc
loop
lock
push
in
js
cmc
push
dec
inc
popf
push
cmp
clc
xchg
sti
xchg
sbb
daa
pop
xlat
fucomp
add
sbb
pusha
sahf
lret
jmp
mov
ds
es
cmp
push
adc
sbb
lds
sub
cmc
js
add
hlt
call
call
les
xchg
faddl
and
mov
inc
xchg
jb
jecxz
sbb
adc
arpl
int3
cld
mov
dec
stc
std
fs
sti
incl
lcall
ss
add
pop
mov
push
cmpsl
cmpsl
xchg
ja
bound
add
mov
lret
mov
stos
dec
in
gs
cli
cmpsl
fldt
out
out
hlt
inc
lcall
push
sub
data16
hlt
cmp
sbb
push
bsr
xor
insl
out
mov
in
test
adc
fistl
repnz
addr16
xchg
addr16
push
or
loopne
push
mov
stc
aam
xchg
push
sub
or
mov
and
mov
mov
push
push
test
add
pop
pop
enter
cmp
inc
add
dec
jmp
test
icebp
and
sub
mov
and
lds
arpl
in
adc
xlat
dec
scas
subl
scas
jbe
aam
fdivrs
pop
insl
dec
inc
lcall
xor
add
mov
pop
xchg
mov
mov
addr16
mov
out
sbbl
adc
adc
jns
mov
sti
mov
rolb
cmpsl
jnp
mov
mov
jg
sbb
es
push
popf
or
push
test
cmp
mov
ljmp
clc
jbe
push
rcrb
pop
pushf
dec
or
mov
pop
mov
rclb
fstps
popa
sbb
arpl
popf
add
xchg
cmp
dec
mov
dec
insl
aam
lret
and
stos
test
jbe
cltd
jne
push
pop
inc
jne
cmp
xchg
fiadds
hlt
xor
push
test
lret
add
or
adc
sbb
and
ja
popa
shll
push
pop
fs
mov
std
sti
and
cmpl
jno
movsb
push
mov
scas
fldenv
ss
fnstenv
subl
cmp
jo
adc
mov
leave
mov
cwtl
or
sti
sarl
lods
lods
sub
adc
mov
cmp
lret
or
fwait
cmp
lret
mov
ds
fcom
sbb
jno
sahf
xlat
add
test
repnz
xor
dec
ret
or
out
stos
push
repz
mov
jle
add
pop
ffree
xchg
je
xchg
and
dec
int3
insb
jae
dec
adc
dec
jno
out
fwait
loopne
js
fisubrl
stos
xchg
arpl
xchg
int3
fs
or
sbb
cwtl
sub
jecxz
dec
movsl
dec
pop
mov
xlat
fcompl
dec
mov
clc
int3
adc
stos
cmp
lods
fisttpll
adc
and
loop
popf
jb
pop
test
ret
test
and
jns
add
xchg
or
out
sub
orl
and
mov
ret
insb
sarb
cwtl
adc
pop
xor
jae
repz
mov
mov
mov
movsb
cwtl
es
mov
mov
clc
add
dec
pop
insl
cmpb
mov
iret
adc
and
jg
pop
and
popf
sti
shll
cmp
sub
push
pop
testb
and
call
cmp
xor
gs
push
mov
scas
call
dec
clc
and
js
push
cwtl
adc
pop
adc
xchg
jno
or
fdivl
jno
leave
loope
lock
stos
dec
jnp
addr16
dec
mov
ret
cmp
push
or
fstp
jmp
lcall
int3
xchg
or
adc
cmp
cmp
add
xchg
and
jo
ret
pop
emms
icebp
inc
pop
xchg
adc
or
pushf
aas
cmp
push
mov
bound
dec
js,pt
imul
fs
cmpsb
test
je
xor
out
dec
sub
add
in
mov
fwait
repz
out
sarb
pop
mov
cld
adc
in
pop
sub
push
push
push
mov
sti
adcl
aas
aam
ljmp
mov
loop
pop
and
aas
inc
and
imul
pop
xchg
inc
jmp
loope
cli
lea
xchg
mov
mov
out
rcll
insb
jnp
adcl
mov
test
scas
jb
add
in
xchg
cld
jge
lds
sub
cmpsl
mov
pop
cmp
add
out
jp
jnp
mov
pop
xchg
pop
mov
movsb
dec
push
lea
push
fidivs
jmp
aas
push
dec
addr16
and
mov
test
das
sahf
jo
rcrb
jae
push
or
and
scas
les
adc
popa
out
dec
bound
xchg
loop
adc
mov
test
icebp
jl
fmul
test
xchg
pop
mov
mov
lock
pushf
xorl
push
jecxz
out
fidivrl
xor
icebp
sub
bound
sarb
inc
jecxz
mov
je
mov
push
mov
cs
lcall
in
mov
adc
mov
xor
xor
sub
fisubrs
inc
mov
cmp
inc
dec
imul
test
jae
adc
mov
fsubs
sub
add
dec
lret
xchg
add
fnstsw
mov
mov
sub
sbb
icebp
pop
push
sahf
ja
mov
andb
push
jb
xchg
adc
adc
cmp
nop
aas
dec
dec
add
insb
lea
imul
sub
cmc
inc
inc
xchg
test
add
mov
adc
xchg
loopne
jae
mov
imul
cmp
loopne
lahf
and
sbb
js
xor
out
sbbl
jno
orb
ret
aas
data16
out
int
mov
sub
xchg
xchg
jp
lods
pop
mov
push
pop
dec
loop
es
and
fistps
cmp
pop
imul
xor
jecxz
das
or
xorb
cwtl
sub
clc
das
fidivs
sahf
fcmovnu
push
pop
jnp
bswap
pusha
pop
fsubl
mov
or
xchg
outsl
sahf
xor
scas
add
or
xlat
sub
mov
je
iret
dec
fcom
lret
or
testl
sub
cmpsl
lret
inc
ret
lock
rcl
mov
mov
pusha
aaa
cmp
movsb
inc
hlt
cmp
loopne
adc
mov
jb
ret
lds
mov
fiaddl
dec
inc
mov
jge
adc
adc
cmp
loopne
inc
inc
out
xchg
dec
ror
lahf
xchg
pop
sti
fstps
stos
jo
xor
jns
mov
gs
inc
movsl
dec
fldcw
xor
mov
fisubrl
xchg
add
mov
dec
mov
cld
inc
das
scas
pop
xlat
add
fwait
sti
mov
rcl
and
push
out
adc
push
cmp
ret
sahf
pop
insb
call
imul
and
jbe
pop
stos
mov
js
sbb
aaa
mov
and
mov
push
decb
test
sbb
lcall
mov
xor
xchg
jp
rorb
in
cmp
dec
push
test
mov
fdivrp
xor
xchg
and
and
loop
inc
cmpl
pop
sbb
jno
or
or
pusha
daa
pop
pop
in
mov
fs
and
leave
push
cmp
nop
or
mov
mov
and
and
jns
push
lcall
jno
lea
movsl
inc
dec
mov
repnz
testb
aaa
cmp
mov
rcll
insl
jmp
sub
testl
inc
test
mov
adc
stos
cs
popa
and
mov
pop
outsl
ficompl
cmpsl
add
xchg
addb
out
sbb
loop
and
sub
mov
scas
push
push
adc
push
out
and
outsl
ror
shl
and
mov
fstpt
mov
insb
scas
inc
dec
cld
arpl
cmp
sbb
pop
out
dec
push
xchg
sbb
shr
mov
outsl
out
inc
mov
pop
je
xor
and
scas
test
icebp
dec
push
cmp
xchg
mov
jbe
mov
cmp
pop
xchg
into
and
test
dec
pop
sub
out
insb
push
popa
sbb
mul
jge
add
enter
mov
pop
add
inc
into
mov
sub
jecxz
ss
cmp
out
sub
mov
sbb
jbe
repnz
jp
clc
jl
inc
mov
cli
push
lods
bound
push
mov
shr
push
out
scas
subl
jae
shll
int3
inc
pop
push
and
and
sbb
sarl
jle
cmp
cmp
in
pop
inc
inc
sbb
mov
lds
stos
bound
ljmp
pop
push
data16
mov
out
out
add
jp
lret
stos
loopne
negl
pop
imul
dec
pop
cmpsl
lods
xor
out
orb
daa
xchg
into
andb
sahf
add
cwtl
mov
dec
jbe
sbb
testb
cld
cmpsl
push
or
faddl
ljmp
fistl
movsl
iret
inc
mov
xchg
in
imul
sub
xchg
loope
movsl
daa
iret
or
sub
pusha
insl
inc
js
inc
mov
pop
sub
sub
js
rol
or
dec
mov
lea
sub
hlt
mov
sbb
pop
cmp
push
faddp
add
mov
pop
in
inc
mov
fisubl
into
or
dec
fs
ja
pop
mov
pop
es
iret
sti
popa
fwait
out
idivb
daa
daa
cld
jecxz
stos
mov
outsb
aas
repz
dec
int
pop
cmpsb
pop
push
cmp
pop
xchg
sarb
jb
fstl
pop
and
daa
repnz
add
imul
adc
lods
jge
lods
stos
sub
jb
jecxz
jge
sub
cmp
lods
sbb
fildl
mov
push
fisttpll
mov
sbb
mov
add
dec
fnstcw
sub
call
sti
adc
push
rclb
sti
dec
mov
pop
add
das
test
jbe
mov
push
pop
fsubp
add
les
addr16
fbstp
rcrl
insl
cmp
jmp
sub
inc
fimull
out
sub
ja
aad
shlb
int3
cld
lahf
mov
xchg
mov
pop
mov
xlat
mov
pop
push
jae
pop
aaa
push
lods
aad
in
xchg
sar
lods
out
jecxz
add
mov
les
add
jne
dec
daa
sahf
mov
mov
or
fwait
jbe
outsb
inc
adc
mov
or
add
rcrl
cli
cmp
mov
nop
insb
push
shr
lret
std
int3
data16
lahf
dec
jo
shlb
adcl
and
nop
or
mov
ret
fcmovbe
pushf
addr16
sbb
clc
push
jne
aam
sahf
dec
push
jno
rcrb
in
mov
ret
arpl
mov
dec
pop
adc
inc
mov
adc
cwtl
addr16
movsl
mov
push
movl
jbe
add
repnz
inc
jle
xchg
xorb
outsb
hlt
fldt
imul
cmp
divb
and
xchg
adcb
mov
cmpsb
jge
ja
out
test
sub
xor
xor
mov
scas
jnp
pop
call
xor
stc
js
adc
push
cmp
pusha
aam
sbb
daa
fsubrs
inc
std
arpl
fld
and
adc
cmpsb
jl
int
sub
lock
fs
xchg
bndstx
xor
push
or
dec
call
arpl
addr16
pop
mov
dec
ds
mov
sub
lret
xchg
pop
sbb
dec
scas
push
push
aas
and
lods
adc
push
pop
ja
inc
jp
addr16
lahf
push
lea
cli
mov
mov
pop
mov
jmp
psubusw
mov
mov
push
into
push
inc
cs
in
frstor
or
cmp
adc
dec
in
aas
push
mov
pop
cmp
test
loopne
mov
or
cmpsl
mov
rclb
mov
xor
js
xchg
xor
subl
test
dec
test
ficoml
jge
rolb
cmpsl
add
mov
sub
pop
push
and
xchg
inc
xchg
and
push
and
adc
add
push
sbb
stos
push
cmp
and
bnd
jl
scas
movsl
leave
aaa
fnstcw
popa
mov
hlt
ret
dec
push
xchg
push
adc
mov
and
popf
jle
outsl
dec
dec
out
inc
pop
fistpll
sbb
outsb
xor
xchg
iret
push
add
mov
xchg
mov
sbb
xchg
cmp
cmp
mov
mov
adc
xchg
or
shll
push
mov
push
out
sub
call
sarb
add
xchg
lds
push
sub
inc
mov
pop
cmpsl
mov
ja
adc
cmp
lods
arpl
cmp
enter
xchg
fldl
mov
loop
jmp
jmp
lods
pop
enter
aam
imul
inc
fidivrl
imul
pop
gs
scas
mov
mov
mov
pushf
and
addl
push
cwtl
test
sub
lods
mov
sub
aaa
adc
aas
xor
sub
xor
push
xor
cmp
loop
lock
in
jmp
jecxz
daa
stc
adc
mov
xor
inc
aam
sub
and
mov
lds
push
inc
sbb
jge
and
pop
dec
cmc
mov
repnz
pusha
cmpsl
dec
xchg
fisubrl
jb
fadd
push
adc
mov
xor
mov
out
mov
mov
xchg
add
mov
ret
mov
pushf
stc
lea
dec
mov
and
dec
scas
sub
pop
in
sarb
enter
inc
lret
fistps
adc
pop
and
adc
cwtl
cmc
fldenv
lods
aad
and
xor
in
adc
ljmp
and
enter
mov
mov
dec
fdivs
les
in
jle
mov
lret
das
lret
orb
das
sbb
xchg
outsb
xchg
push
dec
jo
das
test
xor
jl
ja
adc
push
decb
pcmpeqw
lods
popa
mov
xlat
int3
mov
mov
popa
shll
sbb
test
xchg
aam
xorl
push
lock
les
push
lods
out
jg
daa
add
jl
lahf
xchg
push
ljmp
gs
jnp
jle
ss
inc
jno
mov
outsb
leave
in
cmc
cli
inc
jne
and
aam
je
or
mov
push
add
out
dec
pop
lahf
add
xor
mov
fsts
add
mov
int3
imul
xchg
in
mov
mov
xor
hlt
mov
inc
pusha
adcl
push
adc
jp
ljmp
notl
or
call
adc
inc
add
add
test
daa
repnz
push
fldenv
dec
test
inc
mull
int
mov
mov
push
out
mov
aas
mov
inc
outsl
cmp
lret
add
lcall
pushl
inc
jae
sub
scas
fcomps
push
sub
cmp
add
pusha
daa
pop
fidivrs
cmpsl
dec
add
mov
cwtl
mov
fildll
cli
pop
cmpsl
mov
loope
mov
lods
push
scas
xchg
sub
sbb
popl
test
xchg
hlt
add
insl
push
mov
rcrb
and
or
pop
jns
mov
rorl
scas
mov
psrld
dec
adc
iret
pop
frstor
add
sub
dec
jo
and
int
jae
push
repnz
xor
mov
mov
je
or
insb
jg
pushf
fmuls
stos
fstp
test
xor
sbb
addb
imul
in
ljmp
jmp
out
rcll
mov
cmp
cmp
ja
aaa
mov
or
imulb
clc
popf
cmc
sbb
cmc
in
shr
lock
push
jo
je
insb
push
push
and
sahf
xor
inc
dec
mov
mov
in
andb
mov
xchg
sbb
push
out
jbe
fldz
stc
dec
mov
mov
loop
jno
sub
pusha
pop
sbb
imul
aaa
mov
mov
dec
dec
fwait
cmpsl
inc
aam
cmc
ss
in
jbe
cmp
je
leave
and
cmpb
xlat
push
cmpsl
ljmp
pusha
sbb
les
mov
into
outsb
lock
inc
jmp
imul
iret
in
dec
mov
ljmp
mov
in
pusha
aaa
imul
xlat
mov
fstps
pop
sub
shll
repz
jbe
push
fsubr
stos
andb
pop
sbb
pop
mov
repz
mov
cmp
xchg
notb
lea
ficompl
jns
adc
cmc
lods
outsb
je
sbb
sbb
jbe
repnz
mov
gs
pop
dec
mov
repz
mov
std
leave
mov
orl
mov
mov
leave
rcl
push
cmpsl
sbb
jno
stos
imul
loopne
jmp
sbb
cltd
lock
mov
cwtl
mov
pop
filds
cmp
ss
mov
mov
pop
call
shll
jb
leave
les
mov
es
pop
test
xchg
mov
xor
cs
hlt
pop
mov
xor
xor
out
movsl
dec
or
int
adc
xor
sub
lea
mov
into
or
push
dec
push
lahf
cmc
popa
xor
fstl
xchg
lret
xchg
mov
leave
mov
add
mov
dec
outsb
mov
pushf
cmp
movsb
mov
aam
pushf
cmp
fs
push
sbb
or
jle
in
xchg
aas
add
fcomps
pop
mov
pop
or
lcall
xor
mov
test
xchg
xchg
cmpsl
fstpt
lea
mov
cs
push
mov
and
jp
xor
loop
lods
cwtl
sbb
or
inc
add
or
ret
out
out
mov
push
mov
or
push
adc
sbb
push
fdivr
popf
pop
call
je
mov
call
sti
outsl
inc
movsb
adc
adcb
xchg
sahf
or
adc
xchg
sbb
into
mov
sub
loope
xchg
roll
insb
sub
xor
fdivrl
dec
and
faddl
add
xor
cltd
pusha
lods
cltd
cmc
add
xchg
adc
inc
enter
ja
gs
outsb
xor
dec
cld
adc
into
pop
push
push
sub
rcrl
cmp
dec
popf
dec
mov
stc
pop
fs
sub
sbb
fmuls
cltd
and
sbb
outsb
inc
jb
cmp
aad
pop
mov
or
test
mov
mov
std
sbbb
mov
cmpxchg
mov
sbb
addr16
jne
pushf
mov
and
divl
add
and
jo
or
stos
xchg
sub
data16
push
gs
pop
cmp
dec
std
imull
cwtl
out
fwait
arpl
sti
iret
adc
pop
mov
push
and
pop
loope
adcl
stos
and
xchg
xchg
mov
inc
pushw
sub
aad
ds
sti
push
dec
movsb
test
in
inc
dec
test
out
push
adcb
pop
inc
add
fld
and
sub
xor
ficoms
and
jmp
mov
subb
mov
mov
cld
dec
jecxz
pop
inc
js
sbb
mov
les
lahf
and
scas
jnp
cwtl
popa
add
lret
sti
in
and
sbb
dec
mov
adc
adc
ss
test
or
sub
fistl
outsl
push
cwtl
rcrb
lods
out
mov
push
lds
shlb
cld
inc
mov
xchg
jo
jne
jl
inc
bound
jbe
cli
or
cmpsb
imul
imul
lret
pushf
xor
and
push
loop
das
jnp
call
and
adc
clc
lret
stos
or
jle
inc
push
dec
fistpl
stos
rclb
push
jecxz
repnz
pop
mov
xchg
ret
test
and
fnstcw
repnz
xchg
cmpsb
cmpb
add
or
scas
mov
inc
cmp
lret
outsl
jmp
cmp
adc
push
inc
xchg
cmpsl
shrb
scas
daa
xchg
or
pop
pop
add
hlt
js
pushf
jmp
fimuls
fwait
sub
mov
stos
pop
ret
mov
add
cmp
rolb
lods
xor
xchg
cmp
mov
std
jecxz
push
outsl
and
flds
xchg
sub
inc
int3
xor
popa
push
jno
out
jno
stos
push
push
loopne
gs
mov
push
mov
push
fisttps
sbb
inc
popa
dec
testb
out
mov
push
movsl
push
mov
mov
or
dec
addr16
out
call
jbe
mov
in
add
xor
inc
jo
mov
dec
imul
mov
dec
pop
fisttpll
jp
sbbb
mov
scas
push
icebp
les
xor
test
add
mov
mov
xchg
leave
hlt
mov
inc
mov
mov
adc
mov
shll
sbb
pop
aad
push
sub
mov
push
fisttps
add
lock
fisttps
pop
cwtl
ss
in
or
sahf
les
pop
xlat
rcl
xor
add
in
leave
mov
icebp
jbe
dec
pop
mov
push
enter
lods
call
shll
cmp
daa
sub
mov
lods
lcall
fcomip
push
and
lds
lods
push
sbb
jno
mov
lret
negb
adc
and
mov
es
scas
jne
add
cmpsb
mov
fsubr
es
pusha
cmpsl
cmc
mov
aas
and
inc
ss
pop
lods
outsb
lods
icebp
arpl
loopne
add
jecxz
dec
jmp
dec
rcll
mov
call
in
xchg
fimull
push
pusha
repnz
pusha
mov
mov
mov
out
mov
lahf
dec
push
mov
pop
jae
mov
cltd
out
movsb
int
test
aas
adc
shrb
imul
leave
aam
cwtl
mov
add
sub
popa
out
inc
dec
movsb
sahf
pop
push
fldt
jecxz
adc
cltd
xchg
in
stos
or
mov
push
loop
test
sti
xchg
fdivs
rolb
push
mov
sub
jno
repz
xor
sbb
xchg
mov
testl
orl
sahf
jnp
test
flds
bswap
iret
pushf
lds
or
mov
fisubrl
adc
out
push
mov
bnd
mov
sarl
lea
cwtl
iret
mov
test
jmp
insb
pop
sbb
xor
dec
push
aam
sahf
inc
adc
jmp
mov
in
in
fnstcw
ss
xchg
jl
mov
in
cmp
les
sbb
jp
mov
jge
repnz
dec
sub
enter
out
testb
inc
sbb
jns
enter
push
push
sbb
stos
test
xchg
or
xchg
mov
ret
cwtl
mov
repnz
or
mov
add
out
xchg
mov
scas
pop
or
cs
pushf
bound
aas
sub
bound
add
daa
cmp
jo
jb
sbb
in
sub
js
mov
stos
sbb
inc
sub
mov
in
fldcw
sbb
test
push
mov
dec
dec
adc
sub
and
push
dec
sub
bound
push
imul
pusha
push
int3
mov
and
aam
xchg
xchg
cld
outsl
aad
add
addr16
ror
sbb
out
xchg
stc
and
pusha
repz
xchg
xlat
cmp
mov
test
xchg
test
cmpb
sbb
popw
ljmp
lret
mov
adc
lea
adcl
dec
mov
fimull
jp
cli
mov
lret
mov
mov
pop
jno
mov
mov
lahf
nop
mov
push
clc
inc
cwtl
mov
inc
mov
mov
mov
and
mov
or
addr16
push
mov
mov
inc
cmpsl
sarl
xor
dec
shlb
outsl
lock
cmp
in
call
je
enter
scas
push
xchg
in
or
shl
add
xchg
cld
dec
sub
dec
ret
je
mov
mov
in
mov
stos
xlat
daa
jo
pop
scas
cs
inc
push
int3
lcall
fcoml
xor
xor
xchg
mov
clc
dec
leave
andl
pop
sbb
int3
rcrl
cmp
insl
jle
pushl
lret
cmpsl
jae
dec
aaa
mov
adcb
adc
je
mov
nop
mov
test
into
call
aam
adc
sub
adc
xchg
inc
and
stos
pushf
jecxz
lcall
stos
pop
js
pop
outsb
lods
pop
bound
outsl
mov
stos
out
out
cmp
push
add
or
mov
sarl
sub
icebp
cmpsb
sahf
mov
push
cbtw
repz
test
or
add
jecxz
mov
lods
insl
je
call
outsb
cld
and
cltd
bndstx
outsl
arpl
adc
lcall
add
ja
aas
fists
push
dec
outsb
lds
xor
adc
jp
insb
adc
fdivl
and
lret
mov
pop
inc
cs
xor
push
sub
or
inc
inc
pop
lods
adc
mov
insl
push
and
xchg
pop
jno
mov
stos
xchg
pop
call
sbb
xchg
scas
dec
dec
push
adc
rcr
ds
ds
cmp
mov
jae
pop
xor
jne
mov
jle
inc
loop
inc
fninit
inc
push
sbb
fsts
daa
sub
out
sub
stc
gs
hlt
ja
int3
mov
mov
mov
fdivl
movq
popa
pop
pop
iret
hlt
cmp
emms
adc
cmp
outsb
frstor
mov
in
call
sbb
or
lret
pop
dec
inc
add
mov
popf
test
fwait
jecxz
sarb
xlat
fcomip
mov
call
add
lock
fwait
sar
lock
pop
push
push
lcall
aaa
fs
cmp
push
xchg
lret
or
ss
cmp
mov
pusha
lahf
and
aaa
out
jge
fbstp
adc
cmp
loop
repnz
push
lahf
int
push
push
cmpsl
mov
sub
jmp
pusha
push
push
por
sti
imul
enter
test
push
test
mov
cli
mov
mov
sub
mov
pop
mov
xor
cmpsb
xor
ret
sub
pop
loop
mull
aad
outsb
inc
mov
jae
pusha
push
mov
sub
push
push
inc
cmpsl
push
mov
mov
clc
sub
jge
insb
cwtl
mov
mov
inc
movsb
mull
scas
push
mov
push
cmp
and
daa
fs
jae
shrl
dec
mov
arpl
in
lea
jne
ret
roll
call
jg
push
cmp
dec
mov
cmp
sub
push
bound
and
ret
int3
in
aam
push
pop
or
imul
and
repnz
data16
pop
and
cltd
cmp
jae
dec
jecxz
inc
ds
sub
jp
lods
rol
lahf
adc
cmp
xor
push
cld
and
push
outsb
mov
out
nop
xor
ficompl
inc
rcl
je
pop
pop
fwait
call
xchg
test
movsb
mov
call
aad
clc
mov
pushf
clc
xor
pop
addr16
test
jnp
fisubl
jmp
mov
inc
inc
sub
jno
push
nop
rclb
mov
ds
out
in
movsl
pop
ret
icebp
pop
xchg
cmpsb
inc
daa
cmp
jne
jbe
xchg
cld
lcall
in
add
mov
jle
imul
cs
mov
xor
cmp
jb
out
sub
add
aas
add
dec
mov
add
stos
dec
arpl
aam
lock
pop
mov
ljmp
test
lods
and
adc
add
xor
dec
in
xor
sub
xor
lret
fsts
mov
jle
cmp
jno
insb
add
xchg
mov
cmp
push
minps
mov
movsl
ja
fs
das
imul
adc
out
push
mov
pop
aas
jmp
xchg
fstps
cld
and
subl
add
call
jmp
mov
aaa
enter
imul
pop
xlat
in
dec
adc
xchg
xchg
mov
repz
mov
xchg
in
fwait
dec
cwtl
je
add
lods
xor
xchg
mov
cmpsb
xor
loopne
and
sbb
lret
or
xchg
inc
add
xchg
aas
inc
mov
lods
xchg
pop
out
pop
push
int
aas
jmp
ja
sub
xchg
popa
push
aad
mov
and
cmp
lds
sub
sar
or
in
inc
mov
pop
cmp
neg
pop
jle
dec
xchg
adc
push
test
and
inc
cmp
xor
push
cmpsb
mov
dec
inc
jmp
aaa
dec
push
enter
add
mov
cmpsl
aad
das
add
lcall
rcll
test
xchg
mov
push
pop
scas
popa
pop
pop
cltd
lahf
addr16
push
outsl
push
out
lcall
icebp
mov
idivb
stc
dec
in
mov
scas
inc
cld
cwtl
mov
jne
cmpsb
dec
cmp
daa
lret
gs
dec
cmp
and
out
aad
sbb
mov
jg
inc
insb
data16
test
push
xchg
xchg
push
adcb
jge
push
ret
mov
adc
or
sbb
ret
sub
mov
f2xm1
fs
cmpsb
mov
and
addl
aaa
pop
adc
push
clc
into
je
inc
adc
in
es
in
xchg
xchg
subl
sub
sub
push
push
dec
mov
dec
mov
sub
hlt
mov
js
jp
nop
inc
and
iret
cmp
or
jne
xor
inc
daa
jmp
push
adc
insl
sub
cmp
in
xor
mov
in
cmc
int
fnstenv
cmpsb
fldt
or
popf
xchg
stc
scas
icebp
mov
popa
mov
nop
arpl
scas
leave
mov
jp
shl
xlat
stc
aaa
pusha
es
jno
xor
sub
out
jl
lock
add
dec
orb
push
cwtl
cmp
popf
xor
frstor
or
inc
mov
nop
fisubrs
ja
imul
aad
xlat
push
sub
push
fidivl
std
sub
call
xchg
jo
fs
xlat
and
adc
mov
icebp
and
lcall
in
dec
enter
mov
pop
or
lods
ds
sti
out
clc
imul
sbb
ljmp
mov
xchg
cmpsb
outsl
rcrl
sbb
dec
cmp
mov
push
jmp
test
xchg
inc
push
inc
push
dec
inc
inc
cmc
ret
push
or
bound
ljmp
and
inc
jl
outsb
xorps
mov
js
pop
jp
icebp
and
inc
push
dec
or
ret
push
jne
pop
ds
cmp
mov
pop
insl
xor
xchg
jl
leave
sub
shrl
ss
add
adc
mov
jns
cli
push
jno
mov
xlat
mov
les
aaa
xchg
outsb
iret
lcall
jbe
fdivs
inc
sub
aad
lcall
push
xchg
rorb
cmpsb
stos
call
jae
cmp
and
insl
and
add
sbb
aam
mov
xchg
repnz
cmp
outsb
xlat
popl
iret
subb
or
rcrl
and
push
pop
fs
imul
mov
inc
ds
movsb
lret
outsl
popa
stc
stos
sbb
lods
imul
cli
jne
adc
dec
jns
loope
lea
mov
icebp
mov
mov
scas
imul
add
fists
nop
cwtl
cmc
xor
clc
jns
loope
mov
pop
sub
xor
jecxz
movsb
push
dec
ret
jp
jo
ja
inc
and
sub
pop
jg
aam
aad
sub
sar
ret
fchs
pop
ficomps
mov
xchg
cmp
icebp
xor
xchg
jb
hlt
into
push
jno
xchg
jp
mov
jno
adc
lcall
scas
dec
loope
mov
xchg
mov
add
push
adc
dec
imul
sbb
pop
cmc
push
es
jg
lret
popf
sbb
push
adc
push
push
nop
movsb
into
lahf
insl
negl
mov
sti
pop
js
scas
xchg
lret
nop
jb
cmp
fisubrl
jbe
mov
adc
cltd
push
in
sbb
mov
jno
jo
cmp
mov
push
pop
cmpsb
fmul
fcoml
xchg
repz
xchg
xor
lds
and
adc
std
aad
in
rcrl
cmp
cli
add
shlb
push
js
cli
es
movb
rorb
mov
mov
cmp
sub
pop
lret
in
int
jecxz
jne
loope
cltd
aas
push
mov
push
ficoml
mov
movsl
xchg
mov
sbb
stc
xchg
dec
repz
pop
push
mov
out
xor
jmp
cmpsl
or
imul
das
and
dec
inc
mov
jmp
andl
dec
ds
outsl
sbb
push
inc
push
loopne
adc
cmp
clc
mov
sub
in
push
cli
lea
jb
mov
hlt
popa
jne
shl
sbb
xchg
sbb
add
sahf
pop
dec
bound
cmp
les
gs
repnz
add
xor
out
aad
add
fwait
imul
divb
aad
popf
test
mov
in
cmp
xor
data16
rcrb
test
lcall
mov
push
fs
and
aas
dec
outsb
push
and
icebp
out
jbe
mov
push
sbb
pop
add
adcb
test
lcall
arpl
mov
out
into
mov
dec
push
je
fistl
testl
test
shl
jecxz
in
mov
lea
bound
fdivrl
popa
or
dec
inc
cmp
bound
mov
mov
push
outsl
cmp
fidivl
fwait
mov
cld
mov
adc
dec
mov
xchg
xchg
xchg
in
pop
shlb
jl
add
jmp
sti
mov
fcmovu
rcl
mov
fs
sbb
imul
ljmp
shll
or
fcoms
scas
pushf
in
ret
cmpsb
jl
addb
stos
sbb
inc
addr16
cmp
sub
xor
xchg
aam
popf
adc
frstor
add
out
jo
sub
sub
mov
jl
push
mov
or
sbb
lods
or
or
lods
pop
pop
sbb
sbb
int
mov
das
lea
mov
add
jp
repnz
stos
jns
mov
push
arpl
push
pop
sub
adc
mov
lods
mov
les
push
shl
scas
fists
add
sub
push
push
sub
rcr
enter
xor
pop
.byte
.byte
jmp
hlt
adc
mov
nop
add
add
xchg
mov
hlt
out
aaa
cmp
add
cld
mov
add
cmp
push
lret
rcll
out
and
or
fwait
mov
jno
mov
fsubr
mov
loope
mov
mov
popf
lds
cld
mov
push
ret
hlt
int
add
rolb
push
insb
mov
ret
loopne
mov
jp
hlt
pop
pop
push
sbb
enter
test
xor
or
mov
inc
cmpsl
scas
scas
sub
cmp
roll
dec
mov
add
jno
dec
dec
loope
enter
pop
sbb
movsl
in
jge
or
sub
and
cmpb
pop
inc
cs
dec
int3
out
mov
lret
xor
fisttps
sub
mov
imul
and
sub
add
jno
outsb
lods
lods
imul
sub
inc
sbb
pop
push
add
push
jg
push
xor
test
nop
int
jmp
xchg
andb
and
jae
and
lret
pop
adc
sbb
popa
stos
xchg
add
movsb
jl
imul
out
shl
push
mov
mov
or
popf
xor
xorl
inc
cmp
push
lea
loop
jmp
lret
gs
inc
int3
out
insl
stos
outsl
arpl
cs
imul
mov
pop
adc
adc
fldcw
mov
or
and
xchg
pusha
dec
adc
adc
gs
cmp
mov
iret
sub
add
and
hlt
cmpb
js
sti
cmp
push
mov
leave
shrb
fwait
pusha
inc
cmp
or
inc
loopne
ljmp
hlt
outsb
ss
cmpsb
inc
mov
or
jecxz
cmpsb
mov
sbb
dec
or
aaa
cmp
in
pop
add
aaa
pusha
std
sti
or
sbb
jno
mov
gs
add
add
sub
add
add
add
addb
addb
add
pop
add
addb
add
lock
orb
add
xor
add
mov
add
sub
add
add
add
add
add
addb
add
sub
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
sub
add
inc
add
addb
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
add
add
add
add
pop
add
mov
pop
add
rolb
add
call
pop
add
add
add
sbb
add
xor
add
sub
add
add
add
add
add
add
add
pusha
add
orb
add
add
nop
add
adcb
add
add
add
add
addb
add
sub
add
add
add
add
add
subb
add
or
or
add
loop
add
testb
adcb
addb
add
and
add
inc
or
sbbb
add
or
or
add
loopne
add
clc
add
adcb
add
sub
add
add
add
add
add
add
sub
add
add
add
add
add
inc
add
add
sub
add
add
add
add
add
push
add
add
sub
add
add
add
add
add
pusha
add
add
sub
add
add
add
add
add
jo
add
add
add
sub
add
add
add
add
add
addb
add
add
add
add
add
add
nop
add
add
sub
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
sub
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
sub
add
add
add
add
add
loopne
add
add
add
sub
add
add
add
add
add
lock
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
adc
add
add
add
sub
add
add
add
add
add
and
add
add
add
sub
add
add
add
add
add
xor
add
add
add
sub
add
add
add
add
add
inc
push
add
add
add
sub
add
add
add
add
add
push
push
add
add
add
sub
add
add
add
add
add
pusha
push
add
add
add
sub
add
add
add
add
add
jo
add
add
add
sub
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
nop
push
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
sub
add
add
add
add
add
add
push
add
add
add
sub
add
add
add
add
add
add
push
add
add
add
sub
add
add
add
add
add
add
push
add
add
add
sub
add
add
add
add
add
add
pop
add
add
add
sub
add
add
add
add
add
add
pop
add
add
add
sub
add
add
add
add
add
add
pop
add
add
add
sub
add
add
add
add
add
add
pop
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
addb
add
add
in
add
add
add
clc
or
add
add
in
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
in
add
add
add
inc
testl
add
add
add
or
add
add
add
add
add
jmp
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
dec
pop
add
adc
add
in
add
add
add
pop
pop
add
or
add
in
add
add
add
pusha
pop
add
insb
add
add
add
add
add
add
pop
add
faddl
add
in
add
add
add
test
add
aam
add
in
add
add
add
jl
add
inc
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
xor
add
add
add
add
in
add
xor
add
in
add
add
add
and
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
in
add
add
add
rclb
add
add
add
add
add
nop
add
add
add
add
add
add
nop
add
add
add
add
add
add
nop
add
add
add
add
add
add
nop
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
sub
por
hlt
fs
mov
sahf
sub
lahf
pop
cmc
mov
mov
inc
je
jns
sbb
push
arpl
mov
push
dec
sub
je
scas
cmp
scas
xchg
iret
jp
mov
inc
daa
mov
jmp
popa
push
fs
xor
and
xlat
pop
jns
pop
sbb
in
dec
mov
enter
dec
dec
inc
pop
push
xor
sbb
sbb
arpl
mov
jns
jns
sbb
inc
fsts
jno
jbe
adc
xchg
sbb
sbb
mov
and
pop
inc
or
test
call
data16
rclb
orb
pop
iret
add
adc
dec
popa
sbb
push
filds
mov
mov
int3
sub
jecxz
mov
push
mov
mov
fwait
jg
testb
insb
dec
xor
xchg
std
sti
js
out
xchg
mov
jo,pt
out
cmpsl
cld
imul
insb
lret
scas
lcall
je
test
xor
lea
mov
fimuls
test
pop
aas
clc
ljmp
sub
mov
pop
jnp
push
add
insb
test
shrb
add
ds
outsl
lds
add
xchg
push
outsb
outsl
jg
and
test
lock
out
inc
adc
jp
xor
push
push
add
pop
push
mov
ljmp
fsubrs
popa
cmp
cld
fldenv
lahf
push
or
fwait
cmp
das
loop
in
loope
pop
and
add
idivl
pop
cmp
sub
les
inc
dec
xchg
jnp
fisubrl
sbb
inc
pop
mov
int3
mov
xchg
bound
insl
out
int
sub
and
inc
dec
or
and
add
inc
add
lock
sub
adc
mov
dec
push
mov
xchg
mov
lds
mov
repnz
aad
iret
lods
aam
push
mov
lea
mov
or
push
xor
adc
imulb
sub
pusha
pop
pop
imul
repnz
imul
push
out
mov
push
leave
rorl
jg
in
aad
jbe
or
xor
ds
sub
push
xchg
sbb
test
dec
mov
add
mov
repz
cmp
lret
jmp
pusha
and
inc
jbe
and
pop
pop
fdivrl
nop
or
mov
sarb
lods
push
push
sub
mov
push
enter
test
dec
addr16
and
adc
mov
lods
dec
js
hlt
inc
pop
dec
mov
xchg
sahf
pop
lcall
adc
push
inc
mov
or
repnz
sti
fnstsw
popa
out
bound
rorl
ljmp
hlt
mov
cltd
xor
add
jno
sti
jecxz
jo
adcb
pop
dec
cs
mov
and
mov
mov
sbb
add
jno
sbb
cmc
lock
scas
cmp
lcall
movq
mov
push
mov
scas
jbe
adc
cmpsb
aad
clc
dec
ret
push
sub
and
mov
ss
cmp
sbb
in
lcall
aad
mov
test
mov
mov
ret
mov
repnz
out
and
push
outsl
loop
and
call
lock
or
sub
cmpl
incb
push
cmp
mov
fdivp
fs
jb
das
inc
cmp
pop
push
in
mov
aaa
cwtl
mov
repz
ljmp
mov
adc
jno
int
inc
jle
insb
cmp
sti
dec
xchg
push
aam
popf
dec
outsb
xchg
aaa
call
and
mov
and
outsl
mov
cmpsb
xor
in
cs
in
mov
das
push
pop
pop
mov
xor
cmp
add
aad
lcall
orl
repnz
mov
ds
scas
xor
sbb
inc
sti
inc
and
add
insb
cli
jae
mov
pop
jmp
imulb
and
xchg
movsl
repz
mov
add
fdivs
ror
rcrb
popf
xchg
fmull
pushf
test
mov
aam
sub
mov
int
mov
inc
pop
xchg
ds
iret
xchg
push
hlt
stos
and
ret
xor
call
and
cmp
into
cli
fmul
fwait
cmpsl
sub
call
cmc
jnp
cltd
cmp
out
test
pop
outsb
sbb
cmc
xor
pop
sub
jle
mov
mov
mov
sahf
sub
jnp
push
out
jg
push
cld
popa
mov
sarb
je
add
movsl
or
out
adc
jo
sbb
adc
shl
out
dec
sub
shl
inc
idivl
sti
xchg
aaa
cmpl
pusha
push
mov
lret
mov
jo
xchg
in
dec
jnp
lods
lods
les
xchg
cs
mov
outsl
pop
orl
outsb
hlt
movsb
test
or
pop
inc
xor
call
lock
loope
pop
jle
sbb
mov
xor
inc
sbb
dec
loopne
sub
push
xor
and
mov
out
aas
jle
inc
in
stc
sarl
dec
test
mov
sub
jnp
aam
xchg
mov
sbb
ss
fsubrs
mov
pop
fildll
js
arpl
clc
ds
fldcw
cmc
inc
and
fcompl
sub
in
adc
imul
outsb
cli
sub
sbb
cmc
divl
cli
xchg
push
mov
sub
push
loope
ja
mov
jns
mov
jo
popf
lahf
call
pushf
cmp
popa
nop
dec
sbb
mov
cmp
daa
out
jb
ss
push
insb
outsl
cmc
add
mov
push
ljmp
cli
and
ja
mov
cld
ret
lds
push
and
cmc
jb
fsubrl
xlat
or
shlb
xlat
sub
push
mov
jae
stc
mov
mov
imul
pop
js
xor
in
incb
call
dec
jecxz
mov
popf
inc
and
pop
popf
or
cmpsl
popf
rorb
push
push
adc
mov
xor
bound
inc
scas
lret
or
outsl
xor
mov
fstpt
mov
stos
and
inc
mov
movsl
adc
in
frstor
inc
inc
popa
cltd
sbb
cmp
fmull
adc
and
xchg
xchg
pop
xor
mov
ret
sbb
xchg
ljmp
ss
daa
xor
and
lods
mov
mov
aad
mov
in
out
dec
addr16
jge
insb
cltd
fbld
movsl
es
pop
push
loopne
mov
bound
dec
fxch
jg
cmpsl
cmp
cmp
sbb
cmp
and
adc
pop
imul
sbb
or
jns
loop
sarb
lds
in
jmp
out
test
clc
repnz
shlb
dec
push
call
shll
outsl
int3
in
jae
jecxz
adcl
rolb
sarb
sub
shrl
out
and
out
pushf
lods
sub
stc
fsubl
cwtl
and
pop
pop
inc
test
jle
arpl
add
push
popl
ficomps
pop
sahf
fwait
xchg
fiaddl
andl
enter
inc
sbb
push
shll
push
jo
fstl
movsb
push
ficompl
arpl
pop
sub
rolb
mov
pop
sarb
bound
aad
daa
andl
dec
insl
push
mov
cli
jno
pop
jecxz
cmp
sti
mov
add
or
into
xor
rorb
pop
out
dec
popa
xchg
sbb
xor
jne
ljmp
pop
dec
dec
xchg
mov
push
mov
aaa
ret
push
scas
es
insl
push
adc
sub
aad
aas
push
outsl
lods
clc
mov
test
sub
fmul
mov
aad
push
mov
inc
mov
mov
adcb
out
sahf
add
jae
ja
popf
loopne
dec
xchg
into
pop
popa
gs
add
scas
sub
in
mov
test
in
mov
ret
jg
fisttpll
jecxz
sub
outsl
dec
mov
push
inc
js
addr16
jo
sub
adc
jmp
xor
out
adcl
dec
inc
xor
rcrl
and
mov
dec
stos
test
mov
xchg
mov
pop
xchg
in
repnz
xchg
hlt
xchg
pop
stos
int
xchg
lds
adc
or
mov
insb
ljmp
mull
cmpsl
lret
fwait
adc
sbb
lcall
ret
aam
scas
sbb
in
fs
add
out
pop
mov
or
inc
dec
mov
and
inc
xchg
pop
pop
fs
push
jne
arpl
cmp
or
sub
out
cmpsb
push
jecxz
add
mov
cmp
stos
imul
push
inc
fidivrl
test
es
movsl
sub
push
dec
mov
cmp
sbb
sar
clc
mov
cmp
mov
nop
add
lods
jp
sub
sub
ss
loopne
lcall
cmp
mov
xor
xor
adc
push
and
adc
ficoml
fnclex
fdivrp
push
movsb
rclb
test
movsb
iret
inc
mov
or
pop
adcl
out
and
add
mov
cmpsb
push
orb
clc
adc
mov
cmp
xchg
or
int
stos
in
enter
data16
rol
stos
mov
test
ret
adc
js
add
imul
jno
call
lock
lcall
cli
clc
xor
xor
cld
scas
cmp
bnd
scas
aam
and
xor
andb
dec
adc
clc
insl
jnp
xor
imul
movsl
mov
fsubrs
sub
sahf
cs
lcall
push
or
js
lods
out
popf
dec
pop
sahf
dec
sub
and
dec
or
mov
out
xchg
ljmp
sub
iret
daa
jp
add
cwtl
inc
out
iret
inc
dec
pop
fucomi
js
in
mov
xchg
jnp
pop
mov
mov
testl
scas
xor
imul
in
test
andb
and
repnz
xchg
fsubrs
jmp
popf
lcall
cmp
mov
test
mov
rolb
and
and
push
dec
pushf
into
mov
push
jg
testl
xchg
dec
cli
push
adc
std
xchg
andl
sbb
call
xlat
adc
and
movsl
cld
iret
clc
xchg
jne
imul
nop
loop
aas
clc
xor
es
or
lcall
outsl
inc
stos
pushl
mov
fwait
enter
shrb
out
push
daa
ds
daa
xrelease
cmp
adc
adc
les
xor
cmp
push
mov
int
mov
pop
or
mov
je
mov
aam
mov
push
andl
and
addr16
and
fstps
or
je
sbb
fwait
mov
int
xor
pop
movb
cmp
xchg
out
ja
dec
push
adc
je
xchg
stc
into
xor
pop
je
push
mov
push
adc
mov
out
xor
or
aaa
std
ljmp
sbb
ret
push
inc
adc
adc
sub
imul
ja
mov
mov
stos
bound
pinsrw
out
inc
in
imul
xchg
jnp
fdivrl
cwtl
cli
std
lods
add
xor
cltd
add
mov
call
bound
call
adc
mov
negb
notb
cmp
sbb
orl
push
xchg
push
iret
in
in
xlat
mov
mov
dec
in
in
push
inc
xchg
addr16
adc
lds
hlt
in
and
ret
xor
inc
repnz
add
xchg
out
enter
lcall
jo
arpl
iret
dec
lcall
adc
dec
mov
sahf
int3
ret
rcrb
das
std
mov
arpl
mov
mov
mov
nop
inc
addr16
pop
jne
xchg
fists
lcall
add
sub
xchg
xor
incl
nop
push
xchg
pushaw
inc
lcall
push
lock
test
push
fdiv
loopne
loop
hlt
pop
pop
mov
jo
fnstsw
in
in
into
rdtsc
test
inc
ret
and
sub
movsl
push
rcl
add
add
and
pop
inc
push
std
jne
cltd
pop
add
inc
adc
or
cmpsb
out
into
mov
mov
jmp
jbe
add
cmp
ja
push
jb
hlt
std
repz
pop
push
scas
add
mov
jge
notl
sub
push
mov
mov
push
imul
jmp
js
arpl
sbbb
jecxz
mov
and
dec
es
rcll
jbe
int
or
es
xchg
pop
push
insl
fists
jmp
aam
cmp
push
inc
xchg
mov
clc
popf
add
mov
imul
dec
lods
cmc
out
pop
xchg
insl
sub
mov
jnp
mov
sub
and
add
dec
icebp
and
and
push
cmpsl
cs
xchg
out
scas
and
inc
cmp
jns
pop
jp
gs
mov
mov
ret
lods
add
leave
ss
int3
jb
pop
jo
xor
aad
xchg
shr
jg
push
and
cli
mov
es
cmp
iret
sub
popf
mov
jb
push
pop
inc
lret
pop
aad
jo
xchg
sub
adcl
mov
in
les
sub
sbb
jno
lret
pop
lcall
addb
pop
cmp
in
jg
loopne
outsb
mov
xchg
ss
push
lock
dec
pop
frstor
rolb
xlat
push
popa
stos
xchg
xchg
adc
ss
call
jbe
out
sbb
mov
aad
sub
inc
js
rcll
lcall
lods
outsb
pop
jp
xchg
jge
and
push
add
scas
inc
cs
cmc
popa
inc
and
sbb
fidivrl
popa
shll
cmpsl
sbb
adc
mov
cmc
add
shll
pop
insb
lods
pop
mov
mov
nop
pushl
mov
call
dec
or
outsb
scas
pop
frstor
inc
movsb
sub
push
cmp
fld
pop
sbbl
fsubrl
leave
out
loope
mov
out
out
in
xor
adc
mov
fcmovnu
jmp
mov
in
or
cwtl
xor
dec
aas
insb
notl
mov
push
in
and
stc
xchg
push
lret
mov
and
outsb
jl
pop
and
ja
loope
or
in
xor
leave
popa
stc
mov
outsb
pop
dec
aas
into
add
movsl
rcrl
xchg
inc
add
insl
imul
adcl
sub
cmpsb
mov
mov
inc
in
mov
fwait
pop
or
cmp
leave
sarl
ret
mov
jno
mov
mov
push
push
pusha
negl
popa
pop
paddusw
cld
popa
mov
inc
sbb
mov
cmc
xchg
aam
pop
setl
icebp
int3
pop
rcl
shl
iret
mov
fcoml
jne
fidivl
fdiv
fists
push
and
cli
cmp
mov
lcall
cli
add
imull
sbb
or
fcomip
insb
mov
fdivs
mov
pop
pop
out
imul
jo
leave
icebp
rcrl
jae
fbstp
cli
cmpsl
lret
add
mov
pop
cmc
sbb
hlt
rolb
notl
idivl
rorb
nop
push
lcall
or
out
sbb
pop
imul
mov
sub
jmp
imul
cmpsl
jns
add
mov
icebp
mov
push
sub
stos
sub
sub
sbb
test
pop
add
in
cmpsl
les
or
dec
xor
hlt
lret
loope
sub
loope
lods
add
mov
jmp
adc
ret
icebp
push
int
or
adc
inc
inc
cmp
iret
imul
cmp
lahf
xor
repz
jnp
sub
pop
ret
int
mov
inc
lret
pop
dec
cltd
pop
data16
jle
dec
sub
pop
dec
test
cmpsl
jbe
scas
hlt
movsb
pop
sub
push
sti
out
jle
mov
and
inc
popa
jne
xor
xchg
gs
xor
push
cmp
repz
mov
xor
sub
dec
push
dec
inc
data16
add
loop
lds
lods
stos
shrb
sahf
lea
stos
sbb
jle
rclb
cmpsb
iret
ret
mov
insl
jnp
pop
rolb
sbb
insl
adc
daa
mov
or
cmc
mov
fdivrs
or
xchg
nop
cs
push
jbe
jl
sbb
pop
rorl
into
fistpl
inc
mov
arpl
addr16
call
or
shlb
jne
ds
sub
mov
xchg
loope
jb
pop
cmp
jecxz
mov
fmul
push
pop
and
mov
in
jge
nop
or
xchg
sub
mov
in
push
and
fcoms
mov
add
push
and
pop
ret
jmp
or
and
outsb
dec
aam
bound
test
push
lcall
jo
in
mov
xorl
xchg
xlat
xlat
out
cmp
lods
cmp
bound
xchg
stc
js
cli
out
fdiv
popf
in
fsubs
sbb
fwait
add
jns
inc
dec
mov
mull
xor
movsb
push
das
in
mov
ss
fstl
jecxz
stc
imul
testl
in
aad
in
cmpsl
test
or
jno
sub
cli
pop
xor
lods
adc
xlat
mov
and
out
and
mov
or
fists
mov
ret
sub
bound
stc
xchg
inc
push
aaa
mov
scas
shl
ficoml
pop
arpl
jle
je
add
mov
mov
in
cmpsb
repz
jnp
repz
sub
dec
or
jbe
mov
stos
out
hlt
iret
fbstp
xchg
test
add
sbb
mov
adc
inc
test
pop
add
dec
addr16
outsl
push
lods
repz
add
pop
push
les
inc
test
inc
in
add
rcr
cmp
lcall
ds
add
mov
xor
xor
add
enter
testl
cli
mov
icebp
sub
pusha
jnp
and
push
jno
xor
and
mov
and
xchg
cld
xchg
jbe
pop
jp
into
movsb
adc
push
xor
in
push
push
pop
sub
imul
lcall
mov
push
push
nop
adc
mov
std
pop
mov
xor
in
push
shll
jb
mov
imul
and
imul
mov
fs
aad
in
sub
cmp
nop
cmovg
fwait
andb
jge
push
mov
in
or
jmp
mov
insl
dec
xchg
add
fs
xchg
pop
cld
repnz
xor
pushf
xchg
mov
imul
jp
sbb
cmp
push
push
in
lcall
xchg
repnz
in
mov
jl
jl
push
xlat
test
fadd
adc
arpl
js
sub
fwait
in
mov
xor
jle
cltd
dec
ret
int3
push
push
mov
mov
push
mov
test
sub
and
shll
mov
push
loopne
shl
push
push
mov
fisubrl
jb
cld
outsb
dec
stos
out
stos
aam
add
test
sbb
cli
std
push
rcrb
inc
jbe
mov
arpl
bound
adc
add
stos
movsb
xchg
cmp
repz
inc
mov
popa
sub
in
sahf
xchg
sub
and
lock
xchg
stos
or
pop
shl
fnsave
mov
out
dec
daa
lods
into
or
lahf
sub
push
fsub
cli
mulb
xlat
fisttpll
cmp
push
cmc
les
xchg
outsb
subl
pop
adc
adc
icebp
cmp
mov
cmp
in
add
mov
push
andl
lds
int
aam
test
jno
cmp
push
mov
pop
pop
test
lods
and
mov
insl
mov
rorl
lods
dec
fcoml
xchg
std
or
sbb
adc
sub
cmp
in
inc
xor
mov
lret
outsb
std
xor
popa
mov
fildl
add
fldenv
loop
pshufw
inc
pop
jg
mov
ds
mov
divl
cmpsl
xchg
dec
pop
mov
xor
dec
jno
mov
and
sahf
mov
push
adc
push
mov
xchg
sub
xlat
f2xm1
lock
lods
pushf
js
add
sub
sarb
jo
push
lret
xor
mov
dec
rcrb
lods
inc
mov
push
decb
sahf
sbb
and
sbb
cmpsb
scas
scas
sub
mov
out
lahf
jo
imul
repnz
mov
cmpl
popa
arpl
out
ret
add
push
nop
lds
push
ja
jns
cmp
mov
sub
inc
repnz
popf
cmp
sbb
inc
fstps
std
sbb
sbb
aam
loopne
arpl
mov
jp
xchg
add
test
cmp
push
lds
pushf
cld
das
add
popa
scas
adc
mov
xlat
sub
inc
rclb
pop
push
arpl
inc
popa
xor
cld
cmpsl
jecxz
ret
fstpl
test
cmpsb
rcrb
shlb
enter
fcmovnbe
lock
dec
jle
popf
mov
insb
orl
inc
cld
xchg
fwait
inc
cmc
adc
or
sbb
jbe
in
aas
cmc
aad
mov
cmp
push
mov
iret
dec
xchg
sbb
sub
iret
sarl
rcll
test
add
pop
stc
dec
and
enter
pop
gs
loope
pop
fimuls
dec
lret
cmp
jae
and
push
xor
cmp
dec
repnz
dec
push
push
mov
int
cmp
cmpsl
in
pop
xor
xchg
add
mov
mov
jecxz
ljmp
mov
push
xor
test
push
xchg
or
mov
out
push
rclb
outsb
cmpsb
add
sub
sub
sti
pop
rolb
ds
scas
pop
push
movsb
popf
hlt
pop
xor
ja
call
xchg
std
pop
sti
mov
sti
icebp
das
iret
pop
lds
push
test
fstpl
imul
jecxz
dec
mov
nop
or
hlt
addr16
fimull
stos
imul
loopne
lods
jne
push
push
xchg
cli
lods
pop
bound
add
lods
xchg
outsb
and
and
lds
mov
push
sti
shlb
jg
testb
stos
loop
stc
pop
filds
lret
loopne
lret
ffree
push
movsb
and
or
bound
jp
movsb
and
jmp
mov
addl
pop
xor
in
testb
shlb
xor
je
loopne
or
jno
roll
adc
mov
jge
and
and
xor
add
mov
jl
or
aaa
jmp
test
sub
cmpsb
mov
mov
mov
inc
jb
test
xchg
mov
out
mov
addl
adc
or
sub
in
adc
ss
nop
mov
xor
ret
sbb
sbb
pop
push
fnstenv
adc
jae
repz
adc
xchg
jbe
dec
movsl
addr16
push
jns
in
ja
sub
test
sbb
pop
mov
mov
bound
mov
or
iret
leave
mov
stos
mov
cmp
mov
push
fldt
push
or
cmpsl
inc
je
mov
xor
test
popa
jl
icebp
xor
pop
cmpsl
inc
adc
cmc
push
inc
jns
scas
mov
stos
outsb
dec
lods
cmpsl
enter
and
ret
or
and
mov
xor
jp
les
push
and
aad
or
insb
xlat
push
pop
cmp
leave
pop
das
lahf
mov
sub
inc
jbe
fisttpl
fimuls
ret
jge
pop
sahf
push
js
xchg
repz
imul
dec
ror
out
and
clc
inc
sbb
or
mov
and
inc
pop
mov
movsl
xor
sbb
test
and
inc
inc
roll
xchg
imul
lock
pushf
fldl
fcoml
cmpb
xor
out
decb
jnp
dec
xor
lods
mov
insb
mov
pop
mull
test
push
insb
fnsave
push
pop
xchg
and
pop
in
or
mov
aam
mov
adc
cmp
ss
push
pop
mov
adc
and
or
call
mov
pop
insl
dec
cmp
mov
push
nop
push
mov
cmpsl
fisttpl
mov
push
aaa
jge
jbe
divb
xorb
call
or
mov
lcall
xchg
inc
imul
push
xchg
mov
leave
mov
mov
dec
lahf
call
sahf
out
js
and
sub
cmp
push
fmulp
or
int
add
sbb
jnp
lds
les
int3
add
call
mull
xor
jmp
push
rcll
scas
rol
adc
in
lds
scas
js
fnstsw
push
pop
dec
mov
jo
data16
and
test
pusha
ja
in
lods
xchg
ljmp
nop
daa
pushf
pushf
lret
dec
and
imul
mov
or
pusha
push
lret
addr16
inc
arpl
repz
mov
mov
fldt
xchg
sahf
call
cmp
push
add
fld
xchg
xchg
xchg
aas
cmp
push
sbb
sbb
add
addr16
xchg
cmp
sub
outsb
out
fldt
or
push
xor
pop
enter
loope
mov
aad
or
and
xor
jl
adc
addr16
outsl
xor
in
pop
jno
inc
lea
out
xchg
iret
jp
xchg
cmc
sbb
clc
mov
inc
cmp
sub
inc
rolb
addr16
push
ds
psubq
push
inc
push
inc
push
roll
push
mov
jno
inc
popa
jle
ret
push
ud2
sbb
mull
test
loop
sbb
lret
imul
xor
mov
push
pushf
imul
jbe
sub
test
clc
andb
jbe
sbbl
mov
addr16
jmp
rol
xlat
jno
test
jle
sub
int
es
fs
mov
inc
imul
gs
in
pop
mov
inc
repnz
js
mov
cmp
sbb
iret
jmp
cmpl
int3
dec
mov
sbb
pop
adc
adc
and
mov
pop
fisttps
addr16
adc
insb
mov
or
daa
mov
notb
pop
or
int
mov
clc
sbb
lret
sub
idiv
aas
pop
inc
out
jo
pop
jge
push
jno
fsts
jns
adc
or
and
inc
jle
xorb
stos
setl
jge
dec
scas
subb
pop
xchg
fnstenv
repz
xchg
call
mov
sbb
sbb
jle
sub
or
inc
xchg
das
pop
xchg
push
pop
aad
mov
push
es
push
mov
inc
imul
shlb
sti
and
mov
lret
nop
add
sahf
mov
out
mov
divb
call
dec
rclb
cmp
mov
addr16
shll
mov
xor
in
inc
adc
mov
fwait
mov
shlb
sahf
xchg
push
add
popa
mov
sbb
dec
adc
rorl
in
lds
out
pop
popa
sub
or
mov
orl
ss
icebp
add
cmp
test
roll
xchg
aad
cli
mov
je
test
adc
outsl
gs
fstpt
ficoms
je
lods
lcall
in
lea
pop
ds
inc
push
test
push
repz
aam
shr
mov
dec
push
xlat
das
outsb
inc
xor
lret
shr
div
sbb
xchg
push
xor
cmp
lret
inc
sbb
movsb
mov
jno
clc
jae
mov
sarb
push
inc
in
out
int3
mov
cmp
clc
jo
push
fisubrl
mov
popa
shll
sbb
leave
cmp
jg
cmp
cmp
xchg
xor
inc
jmp
repz
and
xor
in
cmp
test
push
mov
lahf
xor
lret
push
dec
inc
xor
ret
test
fstps
xchg
inc
adc
jne
int3
add
dec
cmp
jle
cltd
inc
call
push
or
jp
cmp
xor
pushf
shlb
lock
mov
mov
mov
insl
fmulp
or
mov
mov
dec
shrl
adc
dec
mov
and
and
ljmp
push
xchg
jo
loop
add
jp
sti
rorb
aaa
xchg
test
add
pop
lret
mov
mov
jp
jo
fst
dec
push
into
sub
inc
sbb
fisubrl
push
and
jne
xchg
testb
mov
push
in
lea
dec
or
sbb
inc
dec
xchg
out
aad
mov
adc
mov
out
popa
pushf
sbb
nop
dec
ljmp
fnstcw
ds
and
xor
dec
pop
stos
dec
call
push
sub
shll
je
pop
incb
dec
sahf
popa
fstpl
mov
in
jl
outsb
xor
testl
sub
in
xchg
add
cmc
and
xchg
call
jno
push
sbb
pop
sub
and
push
cli
loopne
ljmp
push
test
fnsave
test
mov
int
arpl
add
fiadds
push
mov
dec
pop
icebp
jg
add
and
sarl
test
sub
pushf
xchg
gs
push
push
stos
ja
jl
or
xor
int3
inc
and
cmpsl
xor
andb
add
jge
fldt
lcall
xorl
scas
push
push
rcrb
lret
addr16
push
shlb
jae
cmpsl
ss
and
cmpsl
xor
or
dec
testl
in
je
inc
xorb
jae
repz
dec
adc
ljmp
inc
sarl
jb
insw
std
inc
sbb
dec
xchg
pop
sub
in
sub
push
push
fsubs
dec
xchg
add
dec
mov
loopne
call
fcomps
aad
xchg
xchg
loopne
popa
loopne
testl
cwtl
sbb
xor
out
orb
xor
jmp
and
add
lahf
add
mov
cmp
pop
fucom
shr
adc
xchg
ficomps
dec
cmpsl
sbb
outsb
test
cmc
int
push
rcr
mov
mov
cmp
dec
shlb
fcomp
cs
inc
fs
ja
int
test
jb
cld
pop
push
mov
sub
cmpsb
jns
nop
cmp
stos
ds
in
fnstsw
cmp
data16
adc
pop
test
mov
cmp
add
leave
cltd
stc
and
and
pushf
pminsw
push
out
dec
sbb
test
in
int
adc
lcall
jge
mov
and
or
nop
dec
dec
add
ret
popa
sbb
js
setae
jo
and
sbb
dec
or
add
hlt
test
and
add
and
nop
mov
sysret
pusha
mov
push
or
rorl
or
scas
stc
xchg
and
add
aas
sti
push
lods
and
fwait
sahf
mov
aaa
and
mov
push
ret
or
adc
icebp
or
push
rol
mov
cmp
sahf
sub
popa
les
mov
and
cld
push
push
out
pop
lcall
jno
iret
jb
mov
testb
hlt
push
xlat
andl
aam
mov
cmp
lds
and
xor
cmpb
mov
cwtl
jge
cmpsb
in
mov
mov
aaa
sbb
push
leave
shlb
xchg
xor
mov
mov
leave
inc
pcmpeqd
adc
xchg
ret
sbb
mov
imul
inc
inc
jl
test
mov
scas
loop
jmp
or
dec
adc
xor
pop
mov
and
or
xor
out
aad
xor
clc
pop
mov
xchg
mov
adc
xchg
push
xchg
cmc
popa
sbb
test
sub
int3
xchg
pop
pop
lods
adc
mov
mov
pusha
cmp
cmp
cmp
aaa
jne
dec
adc
cld
fdivs
add
sub
in
mov
xchg
or
xlat
pop
mov
pop
cs
in
fisttpl
inc
xor
lods
cmp
mov
andb
jl
sbb
ljmp
mulb
sbb
jne
scas
icebp
push
stc
fstpl
enter
mov
out
add
dec
loope
mov
stos
lods
cltd
push
and
add
pop
jge
lea
pop
int3
mov
insb
mov
mov
push
pop
or
les
pop
imul
pop
stc
stos
inc
test
mov
into
in
int3
mov
adc
push
sbb
add
cmp
rcll
sbb
push
sub
push
jae
loopne
or
push
and
xor
push
push
out
pop
push
xor
leave
adc
sbbl
push
and
mov
mov
lock
cmpsl
mov
and
in
mov
mov
sbb
xor
mov
dec
cli
add
sub
xchg
add
aad
dec
mov
fsubp
jmp
xor
stos
pop
push
lcall
dec
pop
mov
jecxz
xor
lock
cmp
or
dec
fscale
jp
push
pop
inc
jne
and
in
dec
je
jg
stos
xchg
lods
inc
add
xor
mov
test
movsl
das
push
inc
and
cmp
sbb
mov
scas
fadds
jo
test
dec
sub
popa
mov
addl
in
fbstp
fwait
cmp
and
das
or
push
scas
es
add
jb
in
leave
enter
adc
dec
out
and
add
xchg
adc
jl
xchg
mov
add
jge
push
out
aam
pop
int3
mov
mov
cmpsb
dec
mov
test
sbb
std
das
push
jns
cmp
jmp
fildl
dec
push
outsl
dec
pop
jle
mov
dec
inc
mov
push
shl
mov
jp
nop
dec
outsb
sub
int3
testl
stc
inc
and
int3
jae
inc
out
xlat
cmp
add
cmp
mov
pop
in
je
cmpsl
mov
scas
lods
or
add
push
cmpsl
push
inc
cli
jb
sbb
insb
add
aad
lds
adc
pop
call
sbb
je
push
jnp
and
dec
pop
jl
inc
push
je
aas
fstl
add
sub
mov
fcompl
mov
out
mov
lods
mov
lcall
outsl
insb
xlat
push
enter
sbbl
repnz
inc
mov
inc
cmp
push
pop
adcb
mov
scas
and
dec
out
mov
imul
xor
jge
loope
cmp
cmp
push
adc
movsl
popa
fldl
clc
sti
add
push
push
rorl
xchg
pop
xlat
xchg
fsubrp
pop
xlat
stos
cs
dec
cmc
jb
mov
sbb
sarb
and
xlat
or
ret
dec
les
iret
inc
sbb
cmp
adc
in
cwtl
xor
test
adc
fidivrl
pslld
lock
inc
hlt
adcb
test
aaa
mov
inc
and
lock
inc
mov
xchg
pop
add
cmp
mov
arpl
insb
xor
push
arpl
aad
sub
mov
jmp
repnz
je
inc
xor
fs
sbb
mov
adc
shrl
mov
cmp
jno
in
mov
inc
out
mov
scas
pop
lods
pop
inc
add
adc
sbb
data16
jns
outsl
out
ss
fadds
push
ss
addr16
test
imul
push
ja
shl
add
xor
jnp
sbb
icebp
sbb
mov
aam
data16
cwtl
push
movsb
and
sub
xor
scas
test
shlb
add
mov
in
imul
sahf
mov
js
jae
in
cmc
push
movb
or
dec
jb
cmpsl
sub
aam
or
mov
mov
nop
pop
loop
test
and
inc
mov
sub
sub
jmp
cs
cs
add
or
add
mov
andnps
aad
test
inc
cltd
xor
rcrb
subb
outsb
lret
jmp
lahf
push
lahf
cwtl
add
test
std
jmp
xchg
jns
ss
pop
outsl
rclb
icebp
add
adc
fwait
mov
js
push
subb
inc
fists
sbb
shrl
push
lock
inc
cmpsl
mov
xor
jne
pop
in
enter
mov
dec
arpl
roll
cmpsb
push
addb
test
imul
jg
in
punpckldq
xor
scas
xchg
jp
adc
pop
test
jge
sbbl
mov
repnz
pop
shrl
mov
push
je
mov
add
push
imul
or
imull
pusha
fs
mov
sub
push
xchg
cmp
ret
scas
es
xchg
xor
and
dec
xchg
adc
lea
out
cltd
rcl
cmp
push
ss
aas
push
jge
fs
enter
scas
arpl
pop
adcl
inc
aas
cmp
xrelease
pop
pop
cmp
adc
xchg
movsb
ret
shll
jns
jae
mov
loop
adc
xor
stc
into
nop
pop
cmp
push
and
push
pop
data16
sahf
aam
fisttps
xor
pop
inc
cmp
push
jae
scas
lcall
xor
mov
pop
push
inc
sbb
jecxz
jbe
inc
push
cltd
jne
test
sbb
dec
push
cmpsl
push
int
add
pop
jbe
jecxz
push
clc
jmp
mov
test
ja
pop
test
repnz
outsb
call
pop
cltd
jge
and
movsl
jne
cmp
push
and
cmp
mov
jnp
insb
cmp
insb
add
fistps
jo
xor
outsb
mov
mov
jo
icebp
mov
aam
stc
ret
pusha
pushl
mov
jge
je
mov
or
sub
xchg
lcall
mov
inc
ja
push
add
jp
xor
sbb
sbb
leave
or
les
jecxz,pn
in
pop
mov
xchg
mov
dec
add
xchg
gs
fdivrs
fstpl
mov
sbb
cmp
mov
mov
gs
mov
pop
insb
add
pop
lock
mov
or
ret
sbb
lea
xor
iret
mov
and
mov
pop
into
gs
sbb
mov
shlb
test
int
adc
fsqrt
xchg
imull
inc
xor
add
fldl
push
add
and
push
or
jnp
pop
cmp
dec
cmpsb
nop
and
pop
movl
pop
sub
ds
test
loopne
movsb
hlt
cmpsl
adc
sbb
inc
push
and
iret
add
pop
out
aad
jno
push
fidivrs
inc
lods
lods
fsubs
cmp
scas
in
xor
xor
mov
inc
mov
adc
aad
xchg
cmpsb
sub
mov
dec
sbb
jae
jge
jge
pop
mov
outsl
daa
int
add
adc
jb
jnp
cmp
subl
loop
jbe
mov
push
lds
js
shll
cmp
inc
lods
aad
adc
jg,pn
dec
push
xchg
loopne
clc
cmp
pop
mov
fcomp
jmp
inc
dec
and
ds
stos
lea
mov
div
repnz
in
jg
sar
xchg
int3
jno
jl
outsb
push
dec
lret
dec
fisubrs
dec
pop
xlat
or
adc
mov
mov
insb
sub
test
adcb
xchg
xchg
dec
or
xor
xchg
mov
out
enter
fildl
iret
xchg
pop
sbb
mov
and
xlat
sti
xchg
add
daa
pop
sub
push
or
jp
in
cmp
mov
jo
addr16
jmp
js
lret
inc
ret
adc
push
cmpsl
xchg
adc
push
pop
mov
mov
xchg
pop
enter
pop
xlat
mov
cwtl
xchg
mov
sbb
mov
sbb
lahf
dec
mov
faddl
enter
roll
or
loope
mov
jmp
orb
sbb
in
sbb
push
jg
dec
dec
cmp
leave
fisttpl
bound
fwait
jmp
fdivr
xchg
out
mov
mov
lret
mov
inc
fmuls
je
and
nop
lcall
xor
xchg
and
sbb
and
repnz
test
or
mov
scas
xchg
sub
loop
jp
cmp
mov
std
mov
sbb
cmc
inc
jg
or
xchg
pop
cmp
out
insb
jne
inc
les
cmp
cmp
dec
and
lods
cld
shlb
scas
push
inc
nop
je
cltd
arpl
clc
push
xchg
pop
loop
xorl
insb
mov
bound
ss
sub
sub
cmpsl
adc
cmp
out
mov
dec
mov
addb
xor
xchg
mov
imul
adc
aas
scas
and
add
mov
push
loope
sbb
mov
sti
scas
xchg
mov
sub
clc
jecxz
pop
sub
lock
js
clc
lock
mov
lods
pop
insb
adc
cs
scas
adc
xchg
cmc
ljmp
cmpb
insl
jle
call
fdivl
add
adc
pop
cmp
insl
push
popf
fwait
mov
mov
cs
fwait
jnp
cmpl
push
mov
imul
pop
ja
jno
call
stos
lcall
aam
stos
mov
lret
lock
cmp
popfw
pusha
cmp
mov
xlat
dec
aam
inc
shlb
jbe
aaa
jp
sahf
mov
fwait
rcrl
dec
jge
ljmp
cmc
jmp
popa
lea
xchg
icebp
mov
dec
fiaddl
add
xchg
pop
bound
ficompl
mov
jg
sub
lea
xchg
push
and
leave
jne
xchg
repz
test
ret
add
push
aaa
movq
push
orl
stos
cmp
cmpsb
scas
push
sbb
mov
sub
jae
mov
and
imul
sbb
pop
mov
xor
cmp
or
jecxz
and
push
cmp
stos
sahf
add
inc
push
mov
jmp
loop
movsl
cmp
and
fldenv
push
mov
and
inc
cltd
xlat
inc
add
in
rol
pushf
xor
bound
test
xchg
enter
mov
rcl
out
or
mov
imulb
mov
jbe
jmp
ret
popa
gs
and
nop
flds
and
jns
mov
cmp
clc
icebp
add
and
popa
cwtl
xchg
cmp
or
int3
sbb
jnp
ja
inc
loopne
inc
jb
push
jmp
imul
fisubrs
inc
nop
popf
out
call
dec
xor
jge
hlt
out
loopne
andl
popf
xchg
sub
pop
xchg
xchg
jns
mov
hlt
mov
inc
xor
or
enter
inc
add
xor
sbb
push
and
rep
insb
in
ds
lock
inc
shrl
jge
rorl
sbb
test
add
cmc
cmp
add
jmp
jle
mov
xlat
push
pop
shll
outsb
cmc
dec
arpl
jb
add
imul
pop
in
mov
xchg
jns
push
add
cmpsb
bound
push
icebp
pop
adc
popa
sub
sub
scas
test
mov
push
leave
or
fcomps
xorb
repnz
insb
outsl
fisubs
popa
xchg
cmp
out
enter
lock
lods
mov
das
pop
push
mov
cwtl
pop
andl
not
lret
jo
cmp
mov
fcmovnbe
movsb
adcb
mov
push
sbb
jle
inc
sub
int3
aaa
xor
jg
push
xchg
push
insl
push
inc
movsb
movsb
mov
xor
pop
jecxz
lods
push
imul
sahf
push
cmp
leave
cmpb
xor
sub
in
jo
scas
test
imul
inc
xor
push
push
mov
test
add
and
jg
sbb
out
mov
test
xorb
rorb
adc
and
push
jb
inc
xor
jb
cld
mov
push
mov
adc
popa
xor
faddl
jecxz
leave
pop
inc
out
cmp
jl
or
iret
pushl
lods
cmc
in
adc
lock
sbb
mov
mov
clc
gs
dec
xor
jns
sub
aas
adc
mov
adc
mov
and
shll
inc
adc
aas
or
xchg
pop
inc
outsb
xchg
nopl
rolb
pop
pop
and
sub
mov
das
ja
xchg
test
ret
xchg
inc
leave
mov
out
cmpsb
adc
cmpsl
hlt
mov
cmp
jecxz
xlat
cmpsl
stos
std
xchg
sub
outsb
iret
aad
fwait
aas
popf
mov
xor
inc
add
sub
jecxz
mov
jns
and
hlt
pop
jo
test
adc
mov
sbb
push
pop
cltd
mov
insl
xor
mov
add
test
cmpsb
insb
ja
outsb
mov
mov
add
jae
les
loop
aam
fdivl
and
addr16
sub
xchg
jo
das
jb
fistps
sub
divb
pop
dec
cld
mov
dec
hlt
mov
mov
std
jne
sub
scas
cmc
pop
mov
xchg
inc
sbb
in
and
dec
add
lahf
stc
xchg
dec
mov
arpl
pop
xchg
dec
xchg
pop
inc
xor
cmpsb
imul
jnp,pt
xor
adc
jne
push
lret
cwtl
jne
pop
and
add
lds
stc
nop
mov
inc
mov
shrl
lret
call
mov
cmp
std
pushf
sbb
movsb
mov
mov
cltd
push
shrl
dec
loopne
push
push
leave
test
repz
or
cwtl
mov
cmp
mov
adc
push
icebp
ljmp
scas
sbb
test
cmc
movsb
pop
add
xchg
mov
rcll
dec
mov
dec
add
repz
mov
std
adc
jle
sub
lods
mov
lahf
or
xchg
hlt
sbb
pop
and
xchg
sti
sbb
xor
lahf
fisttpll
insl
ja
ja
adc
mov
mov
cmp
fistl
std
inc
and
js
mov
ja
and
into
and
push
lahf
lea
jae
cmpsl
inc
pmulhuw
mov
add
cwtl
push
dec
shrb
gs
inc
mov
or
xchg
sbbl
xchg
or
les
nop
ljmp
sti
jae
stc
jns
jne
jbe
out
add
cli
lds
xchg
mov
test
xchg
cs
addl
jp
in
pop
mov
inc
jle
pop
inc
dec
and
js
std
data16
rorl
scas
cli
popf
xor
cld
xor
xchg
out
aaa
and
cmp
adc
ds
bound
cld
aas
xchg
cld
nop
movsb
xchg
mov
pop
xchg
pop
mov
cmp
inc
in
cwtl
imul
imul
bound
test
pop
lcall
inc
cwtl
fistpl
rcrb
mov
les
lret
adc
outsl
rorl
jp
jae
mov
cmc
jg
xchg
negb
adc
fxch
fisubrl
outsl
xlat
add
imul
mov
dec
adc
jbe
outsb
test
jbe
push
shll
sahf
add
or
int
sbb
repz
mov
cmpsl
jnp
sbbl
jno
in
mov
inc
push
cltd
sbb
es
shll
dec
add
xchg
sbb
in
popf
bound
aas
std
jne
std
movsb
mov
push
dec
repz
jge
mov
pop
iret
xor
movsb
jge
fstps
sbb
enter
or
cmpsb
or
mov
leave
cmp
stos
mov
iret
sbb
mov
dec
xchg
cld
mov
dec
pop
jmp
js
fstpt
out
stos
jnp
call
mov
cmc
inc
mov
jno
mov
pop
mov
push
lods
adc
sub
jae
adc
rclb
adc
mov
scas
insl
into
test
cmpsb
popf
and
inc
jne
or
jns
fwait
sti
jno
pop
and
xchg
fld
pop
mov
sub
inc
sarl
mov
pop
aad
out
cmpsb
push
xchg
cmp
inc
cmp
fldcw
cmp
in
into
push
push
daa
fidivrl
dec
push
xchg
push
adc
mov
ds
xor
repnz
insl
adc
push
cwtl
pop
test
pushf
dec
scas
ret
add
inc
rcrl
xchg
jge
hlt
dec
jle
dec
loope
inc
add
sub
dec
cmp
int3
push
pop
shlb
dec
sub
pop
add
ljmp
mov
orl
icebp
into
movsb
repnz
push
cs
pop
loop
dec
mov
sub
pop
into
mov
in
add
xchg
mov
nop
addr16
adc
stc
aad
cmp
fs
jge
fsubrs
inc
out
arpl
fxch
dec
dec
mov
ret
jp
loope
test
frstor
inc
fidivs
sbb
addr16
int3
xor
or
cmpsl
sub
hlt
nop
dec
scas
cmc
lret
and
mov
out
inc
lret
mov
mov
xchg
inc
jne
or
stos
nop
mov
sub
pop
push
pushf
fstps
test
jge
xor
pusha
pop
out
scas
fs
mov
add
fsubrp
and
add
mov
mov
xlat
xchg
std
sub
xchg
push
loope
add
mov
cmp
jle
ret
pushf
or
into
in
dec
cwtl
pop
push
dec
mov
stos
xor
and
cmp
inc
out
adc
in
je
rcrb
pop
xchg
ret
ss
or
cmc
sbb
dec
adc
dec
test
xchg
jmp
je
loopne
mov
ror
faddl
dec
xor
fcos
lret
das
push
mov
cld
adc
repnz
pop
mov
xchg
inc
iret
pushf
inc
pusha
xchg
sahf
and
cmp
testl
and
movb
jb
xchg
inc
jne
xchg
sbb
sub
jne
lret
scas
pushf
add
push
xchg
lcall
cmp
pop
mov
arpl
and
xor
fsubl
push
insl
stos
sub
mov
stos
xchg
xorl
aam
loope
adc
lods
andl
xor
push
sub
int
adc
sub
cmp
in
das
sbb
pop
mov
push
jno,pn
cli
cld
mov
mov
and
shll
scas
mov
or
in
push
pop
stos
cmp
xorl
cmpsl
pop
push
xchg
sbb
xor
dec
and
in
cmpl
jae
add
adc
push
mov
xchg
cmc
jbe
punpcklwd
insl
pop
cwtl
popl
cltd
xchg
sub
xor
mov
inc
ret
lea
sti
test
cli
adc
aad
inc
loop
rcrb
mov
mov
ss
clc
pop
sbb
fcompl
pop
inc
mov
or
or
sub
jecxz
mov
out
sbb
adc
cmpsl
js
les
inc
cmp
in
les
xchg
fwait
lods
jl
pop
push
sbb
inc
cmp
xor
shrb
ja,pt
and
lds
sub
or
inc
jge
push
bnd
cmp
das
push
ret
das
or
pop
std
shlb
mov
lods
sub
xor
fsubrl
inc
js
push
mov
xor
fsubl
dec
jle
push
or
xor
jne
cld
lea
mov
mov
cmp
outsb
push
mov
ret
mov
jmp
cmpsb
pause
fdiv
imul
leave
jno
dec
les
out
jns
test
jl
cmc
dec
and
sbb
ljmp
testl
jns
adc
mov
bound
sbb
lds
push
ficompl
subl
dec
add
mov
sbb
inc
push
lea
ret
dec
js
pop
cli
cs
daa
das
add
das
sahf
aas
movsb
scas
fidivl
out
xor
in
dec
lods
cmc
sbb
pop
inc
push
idivb
pop
inc
push
test
sbb
and
ljmp
sub
dec
adc
jb
test
add
imul
aas
mov
mov
xor
repz
test
into
xchg
mov
fisubrs
rcl
push
push
mov
sub
in
aad
cmp
sbb
push
lahf
insb
xor
cmp
xchg
in
mov
inc
add
das
popa
hlt
pop
adc
notb
adc
gs
test
mov
pop
paddusb
jmp
or
and
int
in
adc
pop
sti
pop
jge
fs
lock
sbb
push
dec
insl
cmp
inc
jmp
lcall
pop
mov
stos
push
push
imul
push
xor
cmp
sahf
jbe
dec
cmp
mulb
daa
push
aam
dec
fwait
xor
cltd
in
lcall
in
fisttpll
mov
fistps
xchg
outsl
pop
pop
or
fwait
test
idivb
lea
jecxz
test
cmp
jge
cmpl
push
xchg
fisubl
push
or
dec
xchg
aas
int
sbb
mov
mov
dec
push
sarl
popf
xchg
hlt
imul
cmp
xor
cmpsb
cmpsl
in
out
stc
lcall
in
fucomi
and
xor
xor
sbb
fistpll
sbb
lock
loop
pop
fs
push
ffree
jno
out
inc
adc
mov
nop
mov
xchg
sbbl
dec
insl
sbb
dec
cmp
int3
push
pop
leave
mov
jo
mov
mov
stos
fisubl
or
pop
shrb
dec
mov
jne
mov
sub
cmp
or
fstp
pop
ja
sub
icebp
inc
jo
stc
xor
jl
das
cmp
notb
push
push
jb
pop
xchg
add
xor
out
pusha
xchg
jmp
and
push
fisubs
xchg
mov
scas
leave
mov
inc
sbb
or
lcall
sbb
mov
xlat
xor
fdivrs
rcrl
dec
cs
int
cld
std
or
rcr
ds
call
movsb
cld
out
adc
shlb
pop
sub
int3
mov
data16
pop
xchg
bound
inc
xor
mov
push
dec
xchg
enter
cs
push
or
cmpsb
inc
xchg
insb
push
add
mov
pop
push
jae
and
loopne
jbe
mov
pop
cwtl
js,pt
les
xor
mov
dec
inc
dec
xor
inc
xlat
insl
add
or
add
orl
sbb
jno
jnp
movsb
lock
loope
mov
jge
pop
dec
and
mov
sbb
pop
cmp
add
sub
inc
lahf
cli
sbb
mov
lret
jecxz
add
dec
imul
dec
andb
sarb
jnp
mov
mov
inc
sbb
add
insl
pushf
nop
arpl
in
jle
rcrb
in
fildll
sbb
xor
cwtl
xchg
jmp
test
notb
jmp
mov
xlat
xor
roll
scas
and
xor
mov
clc
sub
cmp
stos
dec
push
shr
jae
orb
pop
pop
testb
lods
xchg
cltd
ja
jno
cmp
pop
or
adc
icebp
fiaddl
mov
jbe
popa
sbb
ss
adc
insb
je
aaa
cmp
pop
aas
xor
ja
xchg
inc
xchg
sub
test
add
mov
mov
jo
or
add
bswap
mov
stos
add
in
fidivs
push
loopne
loopne
out
ss
rol
add
sbbl
fidivrl
xor
insl
pop
lahf
adc
sbb
outsl
xor
and
jbe
sub
cmp
adc
hlt
in
scas
das
pop
dec
inc
inc
clc
add
lock
push
xor
jb
shl
test
and
in
mov
mov
rcrb
in
mov
sti
andl
leave
fwait
xlat
mov
pop
dec
mov
mov
cmpsb
and
or
dec
pusha
lret
cltd
lret
sbb
hlt
popf
adc
dec
imull
mov
call
adc
out
std
xchg
ret
jmp
or
mov
stos
or
sub
imull
xor
push
rcr
or
adc
out
into
or
fistl
popa
jg
cmpsl
jnp
scas
sub
mov
push
mov
adc
scas
jle
jecxz
mov
xchg
cmp
and
out
xchg
add
push
in
fildl
xor
xchg
scas
pop
sarl
mov
mov
js
pop
jo
lea
loopne
adc
lret
test
das
and
lods
stos
push
add
add
xchg
jo
cld
popa
inc
in
xchg
loop
out
xchg
add
in
and
jns
jo
aas
cmc
es
in
stos
mov
cld
xchg
and
adc
hlt
hlt
inc
xor
jae
inc
or
dec
shrl
xor
pushf
fisubrl
cmc
leave
repnz
cli
repnz
lret
jne
xlat
bound
lcall
lods
adc
mov
pop
paddb
cmp
add
and
lods
inc
nop
jmp
xchg
cmp
pop
das
lcall
adcb
add
nop
lea
add
neg
fwait
jo
dec
pusha
dec
sub
push
push
cmp
pop
or
mov
out
ja
cmp
lahf
je
cmp
xchg
int
iret
rcll
cmp
or
decl
pop
stos
mov
pushf
adc
cs
dec
scas
sub
in
decb
adc
jb
cmp
pop
add
or
sbb
adc
mov
dec
fsubrs
xor
popf
lahf
mov
aam
xchg
movsb
in
cmp
lods
and
notl
mov
or
jnp
popf
sub
insb
xchg
push
cltd
clc
arpl
jns
xor
xchg
syscall
mov
inc
in
lahf
mov
mov
fisubrs
je
mov
sbb
cwtl
fidivs
insb
movsb
dec
pusha
shll
es
mov
and
dec
cmp
sbb
adc
mov
xchg
loop
aas
sub
push
dec
in
shlb
loopne
mov
in
stc
clc
rorl
cmc
loope
xor
mov
xchg
scas
fs
mov
sub
aam
xor
inc
sub
cmpsl
jnp
fsubrp
inc
popf
mov
repnz
sahf
push
fnsave
into
jns
jb
sub
loopne
push
addl
hlt
cmpsb
jnp
jnp
sub
push
push
add
pop
shl
push
cmp
sbb
mov
andl
jecxz
lahf
loop
dec
sahf
xchg
lret
cmpsl
in
sub
fdivrl
and
sub
loop
mov
addr16
dec
dec
dec
bnd
cmp
inc
pop
cli
sbb
xchg
aas
addr16
push
sbb
xchg
jle
insl
out
or
movsb
add
fs
clc
int3
movb
into
gs
js
loop
mov
mov
insb
dec
xchg
je
xchg
or
cmp
sub
insl
scas
test
popf
cmp
adc
pop
rclb
pop
cmp
push
xor
push
imul
rol
pop
addr16
and
pop
and
std
cltd
or
loop
fcmovnb
inc
push
adc
mov
mov
shl
cmpb
cli
test
fdivrl
xchg
inc
pop
xlat
nop
fnstsw
push
sar
pop
and
xchg
jb
sub
pop
repnz
sub
dec
inc
test
fwait
add
jae
stos
push
or
mov
sub
jl
test
mov
icebp
mov
ret
jl
dec
das
lds
std
stos
sbb
jns
stos
add
inc
psubusb
rolb
jbe
pushf
imul
out
repnz
inc
addr16
inc
mov
cmpsw
je
push
dec
push
lret
lds
sti
or
push
sub
jnp
mov
sarb
sarl
cltd
lcall
xchg
or
inc
sub
jg
imull
or
pop
mov
mul
stc
insb
jp
jmp
cltd
repz
xchg
popa
in
addr16
fdivs
lahf
stc
aam
lcall
outsl
lahf
cmp
cmp
repnz
pushf
adc
sub
in
call
popf
or
cmp
mov
out
mov
add
pop
frstor
jl
pop
xchg
jno
cmpsl
leave
push
xchg
call
mov
les
push
test
inc
and
cmp
push
jg
or
mov
sub
mov
and
mov
mov
roll
adc
push
lea
imull
pusha
push
daa
xor
and
pop
jbe
adc
outsb
mov
insb
insl
test
ds
inc
aaa
in
xor
cmp
and
neg
cwtl
pop
xor
fdivr
sbb
and
outsl
fld1
mov
fwait
mov
loope
sbb
pushf
shrl
push
add
dec
dec
and
mov
sub
push
cmp
lock
xchg
into
push
adc
xchg
std
jg
xor
popa
sbbl
cli
cmp
jbe
mov
fidivl
mov
bound
rcr
jge
inc
pop
and
jae
add
shrb
sbb
aaa
dec
pop
ret
jbe
mov
lods
cmc
or
fcmovb
or
rcl
adcl
mov
fs
xchg
pusha
loope
in
cmp
cltd
inc
outsb
pop
dec
mov
jl
adc
add
addr16
lods
push
outsb
outsb
and
add
mov
and
or
fiaddl
adc
int
das
sbb
or
push
scas
mov
test
jne
testb
pushf
insl
test
xchg
pop
dec
mulb
arpl
or
into
jg
pop
adc
mov
mov
dec
scas
int3
sbb
add
xbegin
cmp
mov
ja
in
outsl
pop
pop
icebp
icebp
mov
dec
lods
test
or
stc
stos
mov
push
push
xchg
push
inc
loopne
push
cmp
sbb
jb
pop
jge
lret
popf
stos
imul
inc
jne
inc
fildl
push
outsl
outsb
xchg
push
sub
adc
mov
int
subl
dec
test
sbb
push
xchg
jle
jnp
cltd
es
sub
lahf
or
push
mov
pop
in
pop
xorl
inc
jle
jb
and
pushf
jle
mov
mov
jmp
call
movsl
and
mov
inc
mov
sub
pop
mov
push
ret
mov
jns
rcrb
push
dec
clc
add
mov
or
push
and
or
mov
out
lods
push
xor
ss
stos
andl
loopne
inc
inc
aaa
sub
mov
inc
andb
inc
or
and
mov
fnop
into
sarl
mov
fdivrs
std
imul
fcomps
push
in
rolb
sub
cmpsl
inc
jp
and
or
mov
push
mov
outsl
fucomip
lods
xchg
enter
push
fwait
dec
cmp
pop
adc
test
dec
sbb
mov
test
adcl
add
xchg
das
xchg
jno
pop
bswap
rorb
pop
cwtl
push
jbe
aam
loop
rcll
push
push
filds
inc
pusha
repz
mov
test
or
divl
push
pop
adc
inc
mov
push
push
mov
dec
cmp
xor
mov
and
sbbb
jb
xor
and
fisttps
mov
fistpl
inc
in
and
lea
out
xor
ret
add
xlat
dec
add
mov
jns
lahf
fsubs
and
ja
cmp
adc
cmp
and
ret
adc
popf
xbegin
pushf
inc
xchg
cmp
je
out
imul
rcl
and
cmp
orb
fiadds
std
mov
dec
lods
movsl
push
sti
jecxz
mov
shl
call
mov
mov
adc
shlb
scas
xor
fwait
imul
push
sbb
inc
out
dec
mov
sbb
dec
add
fidivs
rcl
mov
iret
add
ret
repnz
sub
push
or
fmuls
leave
pop
cmp
int3
mov
add
and
outsl
jle
mov
pop
int3
fcomip
or
lea
sub
xlat
aas
xlat
xchg
mov
rol
add
je
loope
mov
sbb
iret
xor
leave
out
push
jp
out
movsb
xor
fs
sub
xor
fidivs
pop
sarl
sbb
arpl
mov
fists
repnz
loope
aam
lods
ss
pushf
xor
dec
cmp
ret
hlt
in
push
mov
mov
shlb
add
mov
mov
cs
add
inc
jecxz
xor
lods
pushw
mov
iret
lahf
loop
lahf
sarb
xchg
clc
stc
lea
mov
xchg
jmp
sub
mov
xlat
in
cmc
fdivr
mov
mov
insb
lods
lret
lods
sbb
movsl
add
ret
fcoml
cltd
pop
into
sbb
incl
sub
xor
mov
mov
mov
fnsave
imul
aad
dec
cmp
sub
jge
xor
or
lahf
push
inc
cld
lods
pusha
lock
xor
mov
jns
ret
fstl
imulb
daa
adc
rorb
jne
std
sub
std
jecxz
jno
das
sbb
or
les
loopne
xor
xchg
mov
jge
sbb
lock
scas
es
jae
xchg
pop
pusha
pop
pop
push
jp
inc
push
cmp
mov
jmp
pop
cmc
add
adc
xor
and
into
mov
adc
loope
into
pop
into
out
test
adc
jo
lcall
repnz
jge
cli
insl
ds
xor
jno
cs
xor
addr16
push
arpl
mov
jmp
popa
out
jb
cmpsl
xlat
rcr
fld
pop
lret
jb
or
je
pop
fcmovnbe
loop
loopne
aaa
pop
mov
repnz
ret
jg
jno
repnz
das
push
sub
js
mov
sbb
cld
sbb
leave
xchg
enter
or
pusha
mov
popf
push
sahf
xor
xchg
cwtl
call
push
push
jp
xchg
mov
adc
push
mov
dec
jne
xchg
push
jg
iret
int
aas
rcll
mov
sarl
inc
adc
jb
into
pusha
popa
jbe
dec
pavgb
dec
jge
lock
add
idiv
mov
loop
cmp
push
inc
out
pop
mov
cs
sub
mov
pushf
je
int3
lea
stc
xor
lds
ss
push
or
ret
pop
pop
fbstp
add
lods
mov
pop
dec
xor
sub
in
js
sbb
insb
xchg
clc
pop
xchg
iret
lock
fisubrl
je
incl
pop
rcll
mov
into
aaa
popf
cmp
push
mov
pop
jecxz
jecxz
leave
jnp
xchg
inc
xchg
mov
pop
stc
test
int
pop
or
cli
je
loopne
mov
add
adc
jno
mov
sbb
stos
add
push
or
leave
fmull
ffreep
and
adc
xlat
adc
pop
xchg
sarl
cmpsl
xchg
push
xor
outsl
outsb
popa
push
push
pop
scas
in
das
xor
ds
xor
subl
or
xorb
scas
cmp
jno
loop
jns
lock
dec
push
jo
inc
mov
xchg
cmp
sub
mov
pop
dec
aad
mov
dec
in
shll
pop
bswap
xorb
fucomp
mov
mov
cmpsb
dec
aaa
jo
cmp
popf
or
fwait
adc
jns
mov
ret
xor
lahf
jnp
xchg
mov
pop
out
mov
sbbb
sbb
js
add
cmp
add
rorb
and
push
jmp
leave
fstl
aam
add
xchg
jge
in
jl
ds
into
inc
pop
dec
jp
adc
mov
arpl
and
loope
mov
sarl
push
and
or
cmp
jnp
jns
xchg
inc
int
sbb
outsl
add
int
jne
inc
inc
fsubrp
cmpsb
lret
lret
xorb
pop
js
ds
sbb
stc
jo
repz
fbld
push
pusha
sbb
xor
mov
xchg
nop
push
mov
xchg
movsb
and
sahf
xchg
pop
jbe
add
or
ja
cmp
cs
pop
out
push
pop
shl
cli
rorl
mov
mov
xchg
mov
cmp
sahf
mov
std
jo
push
push
fs
or
inc
enter
xchg
inc
xorb
inc
repnz
or
enter
enter
andl
inc
jmp
call
mov
pusha
push
sub
cmp
arpl
xchg
cli
cmc
popf
lahf
sbb
jno
js
mov
lds
pop
mov
in
jl
imul
mov
mov
movsb
inc
xor
mov
stos
add
xor
js
pop
lret
xor
dec
mov
jle
outsb
add
sbb
sti
or
jg,pn
jb
insb
rcrb
repnz
iret
int3
out
mov
hlt
xchg
das
lea
inc
cltd
loopne
jno
fnstsw
dec
scas
mov
pop
imul
out
clc
push
xchg
in
mov
notb
pop
fildll
adc
and
mov
psllq
cmpsl
adc
cltd
mov
jb
pop
xchg
dec
add
movsl
or
sbb
cs
lock
out
cmp
fidivrl
xchg
lods
insb
inc
vmovlpd
xor
mov
dec
or
mov
into
pop
cmp
notl
push
dec
pop
add
in
cmpsl
scas
mov
mov
cld
scas
movsl
cmpsl
xor
pop
filds
xchg
mov
add
mov
ds
adc
scas
jo
dec
xor
scas
lahf
ss
push
les
or
cmpsb
repz
mov
dec
incb
insb
mov
jns
push
aaa
xor
mov
jp
inc
xchg
mov
popa
out
lretw
xlat
sahf
jbe
mov
insb
or
xor
dec
int3
push
loop
jno
cmpl
or
call
dec
cmp
clc
aas
cmp
sub
testl
mov
orb
push
enter
cmp
sarb
adc
je
sbb
mov
jae
sub
or
inc
mov
cs
hlt
movsl
jbe
jmp
cmpb
pop
and
xlat
mov
lods
cmpsb
mov
sbb
jb
idivl
not
rcrb
lea
and
push
gs
lcall
ljmp
jns
push
or
push
cmc
cld
mulb
mov
pop
push
mov
xchg
add
ss
mov
leave
push
or
push
pop
or
sti
jl
ja
jmp
pusha
inc
fs
shl
jno
mov
cmpsb
std
mov
fsubrs
test
popf
in
mull
mov
sbb
mov
in
or
scas
test
cs
call
mov
xchg
and
mov
dec
lret
clc
sbb
mov
out
cmp
fimuls
jae
xchg
add
imul
dec
and
or
jle
xchg
lea
or
ljmp
in
inc
imul
sub
leave
pop
mov
xchg
pmaxsw
mov
fcmove
jge
movsb
int
decb
dec
jg
mov
pop
sub
aad
jge
jmp
mov
shl
lods
or
insl
gs
std
pop
sbb
cli
and
mov
inc
xlat
or
pop
scas
add
bound
neg
rcl
in
pop
inc
jo
out
xchg
jge
dec
fcmovnb
push
cltd
sbbb
jb
aas
hlt
inc
ret
leave
clc
dec
mov
push
jae
stc
out
jg
push
mov
mov
jbe
xchg
cmpxchg
jbe
outsb
hlt
data16
mov
or
mov
out
push
inc
cwtl
inc
adc
add
pushf
pop
cld
lock
xlat
cs
shll
mov
xor
pusha
dec
loopne
or
lock
fsts
testb
outsb
imul
xor
xor
jo
loope
aad
stc
int
sbb
and
mulb
add
adc
mov
out
popf
addb
stos
mov
icebp
lret
adc
stos
lods
popf
cmp
sbb
xor
aas
sbbb
mov
jle
stos
shl
lret
jp
fldcw
jns
test
adc
xchg
dec
xchg
movsl
icebp
mov
fidivrs
aaa
sbb
mov
xor
movsb
push
data16
adc
insl
or
inc
cli
clc
push
jecxz
notb
push
mov
andl
sti
out
inc
pop
int
gs
mov
adc
dec
push
andl
mov
mov
lcall
cmp
inc
inc
mov
jl
cmp
dec
mov
or
stos
in
cmp
pushf
inc
int
leave
lods
xlat
js
push
mov
and
lea
lock
adc
mov
mov
out
sbb
leave
mov
movsl
leave
das
xchg
xchg
sub
scas
jmp
scas
push
push
xchg
jg
and
bnd
or
pusha
xlat
dec
add
inc
cltd
and
and
mov
lret
add
leave
mov
dec
adc
in
cmpsb
and
insl
into
jp
loopne
call
dec
mov
insb
dec
jg
cld
out
je
ret
sbb
repnz
push
mov
sbb
movsl
dec
inc
add
pushf
push
adc
push
jo
lahf
mov
dec
sbb
inc
lcall
pop
inc
mov
out
pop
and
lahf
mov
ss
push
jae
addb
addr16
mov
cltd
inc
lods
fnop
test
pop
ret
jae
adc
jb
and
gs
ds
jmp
test
sub
push
sub
xor
mov
jb
cmpsb
insb
aaa
scas
push
fbstp
xchg
adc
lods
stc
fisttps
or
leave
or
loope
mov
fwait
in
fdivrl
movsl
pop
adc
mov
icebp
mov
xchg
add
inc
adc
add
test
pushf
adc
shl
pushf
xchg
mov
sub
pop
rorb
inc
pop
jmp
push
adc
fcompl
xlat
mov
sarb
jno
repz
push
xorl
inc
mov
mov
shr
sbb
in
push
lods
pop
stc
pop
pop
adc
cwtl
scas
repnz
aam
inc
clc
outsl
jae
test
mov
mov
mov
out
inc
les
jge
hlt
ja
push
cmp
mov
dec
add
adc
cmp
push
mov
pop
dec
mov
loop
std
xchg
arpl
inc
arpl
mov
cmpsb
cmp
cwtl
cmp
pop
and
cmp
repz
push
adc
in
sbb
push
or
addr16
dec
dec
mov
jmp
int
push
dec
adc
les
mov
lcall
fs
xor
sbb
test
inc
mov
lahf
shlb
sbb
icebp
push
jg
adc
jb
pop
les
in
cmp
xchg
iret
ds
xchg
roll
out
js
xor
push
sarb
fildll
arpl
lahf
shll
mov
cs
lea
sbb
mov
jecxz
addr16
pop
xor
in
push
xchg
xchg
aam
xor
or
cmp
in
pop
fucomip
or
dec
push
sub
cld
mov
loope
incl
mov
lock
sbb
jb
frstor
stos
cmp
push
add
xor
mov
or
test
insb
mov
xchg
and
shlb
jo
xchg
push
cmc
push
or
rol
movsl
mov
ds
jae
xchg
arpl
cltd
pop
leave
jbe
sbb
aad
cli
orb
std
mov
sub
add
stc
pop
or
add
call
adc
adc
repz
mov
popa
xchg
jno
stos
jp,pn
sub
into
icebp
adc
insb
ret
sub
movsb
sbb
mov
jg
sbb
pop
movsb
cmp
in
inc
mov
adc
in
stc
rcrl
cltd
adc
cli
pop
mov
lahf
out
dec
fldl
push
ljmp
das
xor
cld
fistps
add
lret
mov
mov
push
mov
les
jae
xchg
xchg
cmp
leave
push
arpl
push
adc
stos
mov
push
sarb
fwait
sub
dec
bound
lods
cld
negl
add
std
sub
int
out
leave
loop
nop
add
notl
pop
adc
or
dec
add
xlat
dec
stos
arpl
add
jl
inc
out
mov
jb
aam
cmp
adc
loope
aad
add
pop
mov
int3
mov
dec
sbb
mov
or
fsts
gs
jmp
push
add
jmp
xchg
sub
icebp
jno
add
stos
adc
sbb
jb
inc
mov
ds
push
fwait
mov
sub
cli
jge
cmpb
imul
stos
insb
add
outsl
push
aaa
dec
fcoml
mov
rorl
mov
mov
fnstsw
test
dec
insl
lcall
je
stos
xor
lret
out
in
jl
out
add
jbe
cs
xchg
in
int3
ficoml
cmpsb
inc
nop
shll
test
repz
fsubs
push
jecxz
xor
fs
dec
or
les
fisttps
add
push
sbb
or
sbb
sti
xor
and
mov
mov
stc
subb
mov
xchg
out
adc
mov
ficompl
sub
jmp
jmp
xchg
mov
sub
mov
xlat
mov
or
repz
and
and
mov
add
scas
mov
test
mov
mov
movsl
roll
sub
push
dec
mov
lahf
jne
dec
subl
incb
pop
push
mov
cmpb
sbb
or
sub
mov
data16
fcomps
jge
and
arpl
sbb
mov
dec
mov
insl
jecxz
mov
dec
stc
jl
jecxz
arpl
scas
rcrb
push
add
cmc
mov
loope
jbe
mov
pop
ss
and
imul
popa
xchg
fisttpll
push
xor
insl
mov
pop
sahf
call
jae
dec
orb
mov
inc
sbb
mov
xchg
stc
push
sbb
mov
andb
mov
fcmovb
cwtl
pop
pop
aaa
lahf
rolb
mov
push
jne
call
sbbl
and
adc
sbb
push
gs
jb
push
pop
enter
mov
xor
sbb
jns
add
jo
rcrb
fisubs
loope
mov
outsb
sbb
mov
jae
pushl
lret
mov
sti
jg
push
push
sbb
addr16
mov
sub
cmp
xlat
dec
or
movsl
mov
cmpsb
cmpsl
test
fidivrl
push
addb
pop
jnp
std
jle
jne
jge
aad
fwait
dec
xchg
subb
cwtl
mov
adc
rcrl
xor
mov
mov
hlt
xor
pop
mov
jmp
inc
test
popf
nop
imulb
mov
data16
xchg
scas
sahf
fsubl
mov
sti
inc
xorb
subl
ljmp
stos
dec
int
jmp
int
out
stos
pop
and
jb
fdivrl
stos
test
or
pop
and
add
xchg
sbb
sbb
repnz
push
add
int3
xchg
push
xchg
lock
stc
rolb
out
mov
cwtl
or
xchg
jne
push
repnz
push
ja
sahf
lock
iret
push
stos
or
lock
cmp
mov
daa
leave
imul
ljmp
fistps
or
call
aaa
cli
mov
call
xor
xchg
and
test
js
mov
addl
out
and
jae
pushf
add
or
stos
or
pushf
sub
fcomps
js
add
xorl
cmp
popa
fstps
push
pop
sub
mov
sbb
cmp
cmc
lock
add
imul
sbb
loop
dec
xor
add
imul
cltd
insl
sahf
out
inc
xchg
ss
push
nop
aas
inc
and
or
jl,pn
insl
jp
sbb
insl
test
dec
cmp
sbbb
out
xor
pop
adc
push
test
lahf
hlt
es
sub
mov
jl
add
push
add
cltd
cmpsb
rorl
imul
jbe
cld
jae
lret
std
gs
sti
nop
adc
in
mov
fcmovbe
inc
adc
movsl
xchg
out
jb
sbb
bound
int3
and
rcrl
adc
dec
stos
push
xchg
and
daa
fsts
cmp
dec
mov
xchg
in
push
out
ja
jle
mov
arpl
inc
stos
aaa
dec
lcall
jae
je
in
mov
mov
xchg
mov
jb
lret
out
popf
das
shr
xlat
test
lret
jb
scas
inc
lahf
adc
cmp
fmull
mov
pop
icebp
in
push
push
pop
lods
xchg
cmp
pop
test
push
mov
shll
sbb
lods
ret
pop
outsl
xor
das
iret
notb
xchg
and
push
fcoms
jb
imul
insl
repz
add
mov
or
inc
push
into
sbb
push
int
fsubrl
cmp
sarb
sbb
inc
inc
dec
xchg
ficoml
ficomps
daa
lods
mov
ds
sub
fnstsw
out
nop
in
push
cmp
xorb
and
push
repz
jno
mov
push
stos
mov
inc
cli
pop
mov
ret
in
js
xchg
cs
xor
cltd
scas
rorl
aam
icebp
out
sub
xlat
sub
loop
lahf
push
pop
push
mov
repnz
and
loop
pop
das
rorl
sub
adc
lret
xchg
adc
pop
push
adc
daa
pop
jl
inc
xor
fildll
inc
jnp
dec
adc
adc
jle
adc
sub
imul
divl
int3
jbe
xchg
negb
repnz
xor
xorb
shlb
bound
icebp
ljmp
sahf
xor
cmp
sbb
push
int
lock
jle
outsb
aam
rolb
dec
mov
sbb
int3
insb
push
sub
stos
rolb
lcall
fs
adc
jns
push
int
cld
andb
mov
and
scas
pusha
loop
je
mov
cmpsb
mov
mov
inc
pop
mov
mov
ret
imul
dec
push
popf
imul
imul
mov
aas
aad
dec
fs
stos
or
sti
shlb
mov
push
push
mov
sub
dec
fadd
ja
mov
pop
and
pop
ja
cmc
dec
ja
mov
insb
lea
outsb
scas
jmp
xlat
out
repnz
or
jl
into
mov
outsl
sub
xchg
fs
adc
or
jno
push
add
push
inc
in
repnz
sbbl
aaa
push
and
adc
shrl
push
fs
sbb
fbld
loopne
or
adc
cltd
int
cli
pop
jb
mov
sub
sbbl
push
out
std
bound
xorl
js
aas
sub
sahf
pop
mov
test
push
fmull
add
das
test
xor
jecxz
adc
fcoms
push
push
jne
in
xor
inc
jae
in
push
mov
repnz
enter
sbb
out
stc
add
std
ret
lods
clc
xchg
mov
popa
or
cmp
adc
pop
jbe
mov
icebp
inc
andl
mov
sub
dec
decl
adc
push
and
xor
pop
test
scas
adc
or
or
dec
and
dec
mov
xlat
leave
sub
into
mov
sbb
dec
jle
and
push
pop
leave
shrb
cmp
ss
ffree
dec
repnz
imul
adc
xchg
dec
xchg
testb
sub
outsl
jp
pusha
sbb
pusha
pop
arpl
xor
dec
mov
pop
adc
js
mov
sub
filds
and
mov
push
pop
lret
xor
out
xchg
jno
inc
in
pop
iret
js
push
pop
mov
lods
mov
pushf
mov
lcall
push
dec
mov
mov
adc
pop
inc
jo
mov
sub
xchg
push
scas
in
add
mov
jbe
lahf
xor
les
mov
push
arpl
xorb
pop
or
cld
dec
push
popf
jecxz
mov
mov
inc
sub
xor
insb
test
ljmp
dec
and
shl
outsl
mov
scas
push
dec
sub
inc
orl
ds
ja
fwait
adc
jg
push
popf
mov
fwait
popf
mov
inc
add
lcall
sub
push
sbb
pop
rclb
inc
stc
jmp
xchg
scas
lcall
jo
cmp
mov
pop
orb
in
inc
lods
sbbb
or
mov
dec
popaw
fadd
ss
push
addr16
lret
mov
fistl
data16
xor
scas
arpl
add
in
or
cmp
jge
jo
xchg
shll
push
addr16
dec
cmp
mov
push
scas
data16
sub
sub
in
aas
imul
pop
jnp
xor
pop
bnd
bound
fs
sbb
push
loope
pop
bound
popa
lea
xor
in
data16
mov
or
or
rcll
scas
cmp
nop
aaa
out
rorb
test
jp
pop
sbb
cmpsb
out
loopne
lret
jb
jb
ljmp
addl
dec
xchg
and
fimuls
xlat
or
xchg
hlt
mov
adc
ss
mov
call
in
dec
dec
lcall
xchg
sbb
dec
fisubs
push
ss
loope
add
jnp
pop
loop
push
pop
sbb
in
repnz
sti
add
lret
scas
xor
cltd
rcrl
add
add
add
mov
mov
pop
push
lcall
scas
dec
fnstcw
bound
pop
xor
push
pop
xlat
push
mov
inc
fdivrs
pop
pop
mov
jnp
nop
dec
idiv
pop
test
stos
movsl
imul
mov
push
sbb
div
incl
jmp
scas
push
call
imul
dec
popl
es
popf
sbb
pop
inc
sbb
js
mov
mov
push
mov
sub
stos
test
push
xchg
mov
and
sub
mov
mov
out
mov
pushf
sbb
push
lret
lcall
out
dec
jnp
jp
push
out
test
call
int
push
adc
sarl
and
jl
xchg
xor
mov
outsb
mov
add
cmp
lods
sbb
sarb
enter
adc
cmpsb
sbb
cmpsl
and
sbbb
push
iret
sub
out
negl
inc
ficoml
push
out
push
test
enter
xchg
lock
adc
bound
outsb
lods
mov
sub
cmp
addl
adc
push
int3
ss
adc
mov
mov
pop
cmp
pop
inc
adc
loopne
xor
fwait
mov
and
std
push
jno
adc
dec
mov
sbb
mov
repz
cwtl
imul
push
mov
movl
adc
xchg
pop
pop
push
leave
and
fnstsw
cmp
cmp
push
stos
sub
xchg
cmp
jb
cld
pop
call
inc
data16
das
ret
cs
push
add
movsl
push
sbb
pushl
fs
movsb
jns
cld
sbb
and
xchg
jle
ficoms
testb
fld
sub
cs
int3
lret
das
dec
add
out
fiaddl
push
adc
aam
mov
cmp
add
sub
mov
mov
or
fidivrl
scas
lcall
lea
push
je
cwtl
sub
jae
mov
movsl
lods
jnp
xchg
mov
jns
ljmp
cmp
mov
loop
testl
enter
loope
lds
cmp
add
or
dec
push
rcll
adc
in
add
aaa
xchg
sbb
ljmp
or
repz
adc
pop
mov
pop
das
mov
lods
jle
sbb
fcmovb
xchg
test
jno
xchg
add
push
jno
out
add
rolb
jnp
jno
bound
fidivl
insl
movsl
cmpsl
fadds
pop
push
jb
and
pop
mov
mov
mov
mov
mov
mov
aaa
rorb
mov
sbb
mov
aad
insl
and
in
adc
and
mov
mov
sbb
mov
shll
mov
dec
sub
cmp
fcoms
jns
nop
in
sbb
inc
pop
out
repnz
out
push
adc
pop
jmp
xchg
bound
stc
imul
in
lock
pop
sub
pop
lods
mov
int
movsl
xor
push
add
dec
icebp
lret
imul
and
mov
mov
adc
inc
cmp
jge
jae
cmp
push
jg
push
aad
lret
daa
nop
das
dec
mov
aas
push
aas
push
shlb
jno
xchg
pop
pop
sbb
lods
out
sub
shl
in
lret
xchg
iret
adc
jns
leave
data16
sub
pushf
mov
icebp
scas
fistl
cmp
inc
nop
sub
adc
int
and
fnstcw
test
or
call
cmp
cs
inc
aaa
xlat
adc
cmp
pushf
inc
or
sbb
inc
dec
clc
mov
aam
inc
adc
push
sbb
dec
lods
int
leave
mov
xchg
and
cmp
cmp
jecxz
sbb
sbbb
leave
pop
jp
cltd
mov
add
mov
mov
push
js
add
jbe
pop
ror
dec
xor
jne
adc
call
jnp
sbb
fdivr
hlt
cmc
je
lods
adc
loopne
aad
mov
mov
aam
ss
xchg
clc
inc
rorb
loop
pop
rol
xlat
mov
in
xor
jle
cltd
push
or
xchg
aad
xor
xlat
mov
or
ror
ss
adc
push
lahf
adc
or
dec
xor
inc
stos
sbb
dec
push
xor
mov
pcmpgtb
xchg
or
pop
sti
sbb
push
adc
out
jp
jmp
out
dec
jle
out
jnp
xor
cmp
xor
pop
xlat
or
jb
sti
lret
je
inc
cmp
jl
stos
add
cmp
pop
mulb
popa
push
jb
data16
jb
into
pop
dec
mov
sahf
sub
dec
stos
lods
mov
lds
xor
inc
into
cli
mov
sbb
test
sub
sbb
inc
in
hlt
cmpsb
and
or
sub
sbbl
movsb
or
sarb
shr
rolb
dec
push
jns
or
mov
and
pop
ds
loop
pop
bswap
sarl
insb
fstpl
jg
jmp
ud1
xchg
fnsave
sub
cmp
xchg
and
pop
mul
pop
push
mov
fs
mov
ret
sbb
dec
mov
lret
bound
pop
xchg
sbb
dec
cmpsl
mov
ds
push
gs
lahf
outsb
push
or
incl
pop
pop
inc
out
push
div
xlat
outsl
mov
xchg
popa
xchg
or
decb
aam
push
mov
mov
mov
or
in
dec
inc
or
stos
leave
mov
aaa
sub
fwait
out
mov
out
adc
clc
xchg
xor
mov
mov
lcall
push
sub
inc
xchg
and
cmpsl
adc
jns
rcrl
movb
inc
xchg
pusha
out
loopne
fwait
sbb
mov
ja
xchg
dec
xchg
xor
pop
xchg
xlat
add
ljmp
add
push
or
mov
pop
inc
into
mov
xor
cmpsl
push
xchg
bound
mov
inc
insb
out
add
fisubrl
pop
cltd
fidivrs
mov
fildl
daa
add
xor
hlt
sbb
mov
inc
mov
add
ss
lcall
mov
pop
sbb
mov
push
and
les
adc
test
out
jbe
jbe
div
in
cmpsl
jl
std
and
fisttpl
sub
insb
mov
icebp
std
cltd
pushf
fstps
loop
dec
mov
xchg
sub
xchg
mov
cmp
adc
fstpt
and
adc
cli
ret
cmp
aam
push
jg
mov
imul
pop
jp
mov
sbb
cmpsl
cmp
sub
outsl
in
sub
lods
xchg
je
notl
mov
hlt
sbb
lahf
sbb
xchg
out
inc
lea
shl
lea
sbb
icebp
mov
inc
push
into
mov
popf
pusha
mov
es
inc
int
xor
lds
push
xchg
jno
pop
inc
leave
xchg
and
push
data16
cmc
pop
jp
sti
pop
in
int
push
adc
dec
push
inc
es
pop
pop
cltd
out
and
ret
leave
jnp
movsb
rorl
inc
push
dec
xor
lahf
xlat
xor
sub
lret
sub
pop
test
loope
inc
test
test
lcall
sbb
cmpps
xor
push
push
xor
int
jno
aaa
std
push
or
jne
push
test
or
clc
daa
push
adc
test
and
push
addb
cltd
xchg
aas
in
xchg
popf
imull
lret
mov
in
push
es
ljmp
or
repz
sub
xor
pop
in
mov
scas
leave
pop
into
idiv
inc
xor
push
adc
mov
push
pop
loope
jae
int3
add
or
pop
sbb
pop
mov
imul
loop
sub
mov
sub
pop
lds
mov
and
fwait
or
test
add
lret
sbb
in
pop
ficoml
mov
dec
and
rorb
pop
inc
mov
jb
xor
pop
test
out
or
dec
mov
jne
inc
jl
int3
pop
cmp
adc
inc
jle
add
and
bound
stos
dec
pop
xor
pop
jecxz
pop
cmp
mov
adc
xchg
adc
sbb
shlb
shlb
add
and
xor
dec
movsl
into
mov
into
dec
lods
test
pop
mov
repz
pop
mov
mov
aas
imul
cmpsb
imul
mov
push
testb
addr16
iret
mov
push
imul
xchg
test
jge
xchg
shrl
inc
mov
pop
ds
popa
and
ss
dec
mov
and
xor
add
pusha
dec
push
movsb
test
repz
je
cld
adc
xchg
out
scas
or
pop
cmp
jno
or
push
lods
and
outsl
ret
movb
xchg
test
or
dec
shll
test
xchg
push
mov
mov
subb
orb
adcl
rol
or
xor
cmc
icebp
mov
cmp
aaa
ss
add
sbb
cmc
insb
jp
xor
or
mov
in
test
inc
insl
mov
cmpsl
xchg
and
mov
ret
mov
out
sbb
lret
xchg
jnp
imul
mov
cs
jb
pop
insl
arpl
rcr
inc
xor
cmc
cmp
std
xchg
xchg
fistl
fcoms
adc
stc
cmp
adc
push
shrb
push
and
add
cltd
jg
mov
shll
mov
sbb
jmp
sahf
adc
hlt
xchg
mov
add
popf
mov
mov
jg
jg
fucomi
gs
aam
inc
lahf
pop
js
or
dec
cs
push
lahf
fs
test
adc
sahf
jle
xchg
int
test
xor
jmp
dec
and
lea
jle
sub
cmpsb
dec
or
dec
add
test
fcmovne
roll
jb
push
scas
or
jge
out
push
cli
divl
popa
mov
push
push
xchg
add
mov
xor
pop
int
jg
cltd
push
ret
xlat
xchg
aaa
sti
mov
sub
push
loop
mov
inc
mov
push
test
adc
inc
jge
stos
outsb
push
xchg
sub
push
out
mov
gs
pop
mov
stos
rorl
sub
sub
push
pop
push
leave
pop
cmp
dec
mov
inc
gs
faddp
sbb
mov
add
add
dec
xor
in
sbb
repnz
cld
sub
cmp
insb
add
cmpsb
loopne
inc
jle
push
sbb
js
jg
hlt
lret
and
shr
hlt
cmpsb
cltd
jg
jmp
iret
push
sbb
test
imul
sti
xchg
inc
test
enter
or
jp
or
adcl
push
sbb
jno
dec
mov
push
jp
mov
stos
icebp
mov
jl
mov
dec
mov
dec
ficomps
cwtl
mov
inc
lahf
jmp
xor
aad
inc
movsl
out
in
adc
sti
mov
loope
outsl
out
add
imul
add
mov
pusha
cs
lret
cltd
icebp
pop
imul
mov
outsl
into
add
mov
and
call
lret
sub
jl
cld
js
push
adc
sti
add
and
inc
inc
dec
jl
test
popa
xor
loope,pt
xchg
test
sbb
mov
xor
inc
xor
popf
xor
dec
pop
cmc
inc
orl
and
sbb
add
nop
inc
push
fcmovu
cmpsl
orb
cmpsl
mov
pop
in
loopne
sub
jl
xchg
jns
inc
popf
mov
mov
ljmp
adc
es
mov
lods
jge
xchg
cs
xchg
push
pop
sbb
mov
and
dec
pop
cltd
mov
dec
jno
fisttps
int3
imul
leave
xor
or
adc
pop
cld
mov
push
sarl
sbb
push
mov
inc
outsb
jne
push
mov
xchg
mov
in
stc
ret
jge
jb
popf
dec
inc
addps
pop
rcrb
mov
mov
pusha
lahf
bnd
or
and
push
fs
jl
adc
fiadds
test
dec
mull
and
push
stos
adc
sub
or
leavew
mov
incb
push
loop
mov
push
inc
mov
loope
aaa
cmp
mov
mov
pop
fs
nop
stos
sarb
cmp
arpl
mov
jle
ds
and
into
jge
push
cltd
mov
pusha
sub
add
cmp
pop
push
dec
and
jecxz
sub
lds
mov
outsl
xor
add
in
hlt
rcll
jne
aam
das
inc
imul
shlb
cwtl
sub
repz
jl
inc
xchg
mov
imul
add
jg
sbb
lret
pop
test
mov
movsb
jle
in
fldl
mov
inc
mov
xchg
daa
std
les
orb
pop
sahf
adc
mov
daa
push
sbb
jns
cli
and
les
mov
ss
add
popf
out
int3
out
int3
pop
jp
push
repnz
in
sbb
ror
jo
sub
jo
maskmovq
cmp
jmp
in
push
mov
pop
cmpl
adcl
sbb
int
dec
pop
dec
jb
add
add
xlat
daa
push
inc
push
cltd
push
xor
or
fnstsw
mov
fidivrl
leave
lock
add
jne
add
push
xchg
and
mov
hlt
dec
rorb
mov
cmc
ds
sahf
pushf
pop
fldt
mov
mov
sbb
or
mov
jg
pop
sub
push
mov
fnstenv
mov
popf
sahf
imul
adc
inc
clc
enter
add
push
or
pop
popf
mov
push
mov
inc
mov
xchg
out
mov
loopne
pop
xchg
insl
arpl
cmp
loop
cmp
mov
mov
add
add
out
test
mov
inc
cmpb
enter
lcall
add
jecxz
cmp
subl
mov
adc
or
das
out
scas
outsl
hlt
mov
loopne
mov
pop
dec
xchg
sbb
dec
je
push
xchg
frndint
lret
aaa
popl
xchg
jl
push
mov
clc
cmpsl
fsubs
inc
mov
or
mov
mov
and
outsl
mov
aaa
popf
jne
lcall
ja
std
pop
mov
or
and
and
xor
add
adc
leave
push
das
xor
jmp
jge
jns
faddl
std
sbb
pop
pop
rolb
shr
mov
or
jnp
test
aam
stos
and
int3
fsubs
cld
call
int
sbb
int
dec
push
ret
and
ficomps
and
push
int3
ds
loope
ret
call
aam
xchg
adc
ljmp
and
in
jmp
stos
mov
xor
and
into
imul
ja
cmp
loopne
stos
xchg
int
aas
mov
dec
jno
dec
dec
inc
push
out
inc
shr
mov
jne
xor
es
fistpl
cs
ror
cmp
lods
inc
pop
pop
xchg
adc
dec
jo
cmpsb
adc
jmp
lods
inc
ja
rdpmc
cli
cmp
sbb
icebp
jne
push
fs
dec
popa
shlb
je
lcall
pop
jae
stos
xchg
loopne
iret
mov
pop
add
cmp
pop
fcomps
enter
addr16
in
pop
xlat
inc
aas
repnz
lret
inc
subl
jl
decb
std
les
jl
lds
push
repz
mov
mov
sub
cmc
mov
out
xchg
cmpsl
cwtl
sbb
and
aad
cmc
fistps
sahf
xor
pop
xchg
in
mov
xchg
inc
mov
dec
inc
sub
xchg
mov
jbe
jge
pop
mov
pop
imul
shrl
in
lret
add
into
pop
sahf
mov
sbb
adc
andb
out
inc
push
loop
stos
enter
sbbb
rcrb
sbb
mov
dec
aas
cld
incl
mov
jns
fs
xchg
cmpsl
es
jecxz
inc
pop
ret
push
enter
push
push
fs
dec
mov
inc
cltd
in
adc
rolb
cmp
pop
mov
add
ffree
adc
test
insl
and
inc
pop
mov
mov
mov
mov
daa
std
mov
add
inc
mov
stc
arpl
cmc
popa
pop
xchg
mov
lods
sub
dec
sbb
or
addr16
or
movsb
cmp
xor
pop
out
shlb
xchg
js
addr16
mov
je
enter
add
sbb
shll
dec
jp
mov
cmpsl
or
xlat
xchg
xor
pop
les
fdivrs
dec
mov
sbb
adc
inc
outsb
lea
lds
aad
jp
pusha
jnp
inc
lret
push
or
mov
stos
or
stc
mov
call
mov
in
mov
mov
mov
insb
lods
jg
cmpsl
mov
imul
in
dec
lods
test
mov
push
pop
push
adc
mov
pop
mov
xor
xchg
add
pop
fwait
leave
rcl
testl
push
lret
pop
jns
mov
js
mov
cli
lahf
inc
sub
push
cmc
sbb
mov
mov
lret
mov
inc
adcb
dec
test
shl
inc
jbe
sahf
je
fst
add
lds
inc
pop
sub
sub
xor
xchg
test
jne
stc
ja
dec
aas
mov
push
popa
cld
push
push
pcmpeqd
andb
addb
cmp
jnp
outsl
xchg
jmp
inc
sub
xchg
push
or
fisttps
imul
aad
push
mov
pop
push
je
xor
jb
push
jge
jl
ret
cmp
cld
sub
xor
imul
xlat
adc
or
xor
xor
mov
or
inc
push
test
cmpsb
push
mov
loop
jmp
pop
jno
out
iret
enter
pop
fs
lds
mov
mov
and
cltd
dec
data16
mov
inc
mov
aad
sbb
sbb
lods
sub
or
scas
cmp
fcmovnbe
fisttps
cmp
pop
pop
add
inc
jo
je
imul
insb
adc
out
adc
sti
shrb
lock
movsl
mov
repnz
cmp
fsubrl
inc
xchg
sub
das
mov
add
mov
add
cs
movsl
pop
or
jge
cwtl
inc
cltd
jecxz
fsubl
cmp
arpl
mov
leave
imul
test
mov
pop
pop
or
pop
hlt
dec
mov
and
ss
cmpsl
lock
inc
sbb
inc
xchg
ret
ss
mov
in
mov
cmp
add
mov
jno
sbb
stc
push
outsl
fcos
aas
ja
pop
xchg
lds
mov
int3
fmuls
or
int3
ret
cmp
sbb
inc
xlat
aaa
aam
add
enter
ljmp
adc
adc
sbb
xchg
cmpsb
ja
mov
imulb
movlps
outsb
pop
add
hlt
in
in
movsb
push
test
pop
xor
mov
loop
mov
jne
and
mov
push
cmc
push
int
sti
cltd
and
in
and
xor
rorb
mov
orb
shll
data16
je
loop
test
lret
lock
inc
inc
and
add
or
sbb
jb
jl
jo
cmp
pop
imulb
cli
out
mov
adc
hlt
adc
push
mov
test
sub
cmp
int3
sbb
stos
faddl
mull
in
ficompl
mov
mov
mov
pusha
add
out
sub
dec
sub
push
aam
clc
jnp
divb
insb
stos
inc
leave
cld
popa
cmpsl
mov
inc
lret
loopne
hlt
loop
xchg
add
jne
dec
filds
push
out
xor
cs
fnstenv
jns
sbb
test
or
test
dec
push
mov
fs
pop
add
jno
lahf
sbb
in
xlat
sbb
push
mov
xor
jns
inc
mov
adc
mov
xchg
mov
xor
jl
cwtl
test
lea
sbb
loop
lea
daa
testl
or
adc
mov
sub
mov
aaa
xlat
cmpsb
nop
test
mov
jg
pop
push
cmp
insb
in
test
pop
xor
pop
add
test
cmp
cld
cmpl
dec
dec
inc
aaa
sbb
orl
push
mov
sub
mov
cs
xchg
jge
jns
int3
mov
push
das
mov
cld
xchg
fwait
das
cmp
int
int
shlb
push
dec
ss
movsb
xchg
div
mov
fstpl
outsl
sarb
sub
xchg
add
inc
test
add
imul
cmp
call
fcomps
test
dec
sbb
mov
mov
push
movsl
pop
sbb
inc
dec
and
aaa
sahf
xchg
jl
push
rcll
or
add
jmp
dec
mov
pop
movsl
mov
sbb
sub
lret
mov
mov
pop
shll
dec
mov
into
test
hlt
imul
mov
arpl
xchg
inc
sub
test
dec
and
mov
jmp
insb
je
mov
jne
lret
stos
rolb
pop
push
xchg
lahf
or
add
lret
repz
xor
inc
pop
cmp
push
clc
hlt
pop
jno
dec
cwtl
pusha
cld
sub
jno
mov
out
aaa
xchg
xchg
lret
je
in
jp
or
or
dec
push
outsb
dec
cmp
jb
pop
dec
jns
and
cmpb
scas
int3
add
arpl
adc
movb
lcall
jae
fdivr
cmp
mov
push
or
or
adc
aam
sub
out
sub
cmc
or
pushf
mov
in
sub
sahf
jo
xchg
mov
test
add
out
add
aaa
test
std
dec
stos
fstl
sub
out
xor
jecxz
addr16
add
mov
xor
sub
into
xlat
xor
sub
lds
mov
xlat
pop
jae
sbb
dec
or
pop
cmp
cld
adc
mov
pop
ret
add
scas
sahf
xor
lods
lock
mov
pop
xchg
leave
out
cmp
je
push
and
out
add
pop
sbb
out
push
jns
cmpsb
test
xor
xor
inc
push
jae
mov
push
jecxz
push
nop
sbb
mov
mov
fdivrl
or
cmp
jle
cmp
pop
xor
inc
das
push
mov
push
inc
test
div
dec
add
lods
pop
addb
stc
in
shlb
sti
adc
xchg
mov
jle
add
cmc
cld
add
mov
add
cmovp
jl
pop
int
push
cmp
pop
dec
test
aas
pop
push
mov
jl
fisttps
mov
push
gs
mov
adc
dec
xchg
nop
gs
dec
cmc
outsb
cmp
lods
xchg
pop
cmp
mov
fnstcw
sub
and
push
inc
jae
push
cmpsb
jnp
ret
adc
mov
sbbb
add
rcrb
lret
inc
dec
rolb
aad
mov
mov
lret
and
dec
cltd
cmp
adc
jl
jmp
mov
scas
jns
mov
test
subb
cmpsb
scas
shl
ds
sub
lret
les
lret
outsl
lahf
pop
mov
and
sbb
cmpsl
push
ret
adc
or
inc
aas
loop
push
mov
lods
shll
mov
or
and
xchg
sbb
and
jo
mov
enter
sbb
sub
aaa
mov
gs
push
xor
mov
jp
fimuls
insl
dec
dec
mov
popa
bsf
add
add
mov
sbb
push
mov
imul
aaa
or
dec
mov
mov
xchg
jne
loope
jp
and
mov
lcall
mov
dec
xor
cltd
mov
vcvttss2si
add
mov
dec
insl
push
inc
cld
scas
push
bound
or
loopne
lcall
cld
add
add
ret
or
xorb
hlt
dec
loope
add
inc
stos
insb
aaa
sub
jp
repz
pop
stos
mov
cmp
mov
push
fld
cs
lods
out
les
cs
mov
jnp
and
jne
push
aas
jle
dec
xor
jmp
push
fcompl
ljmp
icebp
jecxz
push
cmpl
ret
gs
inc
inc
rorb
xor
enter
jbe
jne
stos
lahf
daa
out
xor
cs
dec
inc
pop
mov
or
xchg
sub
and
mov
lcall
jae
mov
roll
pop
movsl
mov
push
mov
inc
adc
js
adc
push
push
stos
test
jl
fyl2x
jge
jmp
mov
inc
shrb
sarb
or
and
inc
or
push
ja
ljmp
dec
mov
push
add
mov
scas
jl
cmpsb
in
in
jmp
mov
test
fcomps
insl
fs
jle
aaa
insb
xchg
jae
ret
sub
cmp
jno
xchg
push
pop
imul
daa
mov
aam
mov
lcall
popf
inc
mov
mov
jl
inc
jmp
and
popa
fsts
inc
cs
filds
pop
jns
mov
int
xor
aaa
xchg
jmp
cltd
pop
xchg
insl
rcr
jmp
mov
pop
popf
cltd
out
jmp
jecxz
cmc
push
out
nop
mov
test
shlb
outsb
mov
enter
cmp
pop
adc
add
iret
jg
pop
inc
mov
xlat
inc
in
cmpsb
push
cmp
repnz
iret
xor
lahf
fs
pop
scas
in
sub
ljmp
stc
sub
lahf
or
lods
jae
into
fstl
lock
sbb
push
daa
aas
pop
mov
and
xor
and
push
outsl
cltd
mov
movsb
stos
aam
or
out
test
adc
data16
lcall
mov
cmpsb
lds
xorb
stos
or
inc
sarl
test
stc
sbb
std
xchg
popa
jnp
bound
push
push
gs
call
pop
dec
and
inc
mov
daa
inc
dec
rorl
dec
mov
lds
iret
xlat
sub
cmpsb
out
mov
or
xor
inc
xor
call
push
jp
vextractps
pusha
mov
sbb
mov
dec
pop
sub
testb
test
stos
mov
xchg
andb
jmp
imul
and
xlat
pushf
cmp
fldcw
jne
pop
and
mov
out
add
test
sbb
add
cmc
nop
hlt
mov
sbb
notl
ss
fs
cld
int3
mov
leave
mov
stos
xorl
mov
movsb
jae
pop
jne
fldcw
mov
lods
aam
das
xor
xor
adc
mov
push
outsb
adc
dec
and
lea
cmp
out
lock
test
test
and
xchg
pushf
pop
jp
pop
dec
dec
sub
sub
ljmp
mov
dec
cmc
or
lea
jne
cli
fnsave
cs
push
jmp
inc
inc
lds
test
push
pop
mov
je
pop
mov
cmpsb
mov
rcll
div
lret
cmp
loopne
pop
fnsave
jo,pt
mov
push
cmpb
popl
add
cmp
cli
pop
shll
fcompl
enter
test
mov
jnp
mov
in
cld
sti
pop
jp
test
xchg
xchg
cmpl
push
mov
xor
xchg
pop
adc
add
xchg
inc
mov
mov
dec
jae
aam
aaa
imul
insb
mov
repnz
mov
popa
adc
cmpsl
mov
sub
sub
sbb
addr16
or
mov
lret
popl
pop
xchg
mov
mov
inc
cmp
inc
pavgw
xor
sub
mov
dec
or
insl
es
pop
dec
cmp
pop
mov
jl
sti
mov
in
push
or
les
xor
pushf
cmp
mov
xchg
jne
push
lods
jbe
add
jmp
add
insb
loop
repnz
mov
popa
clc
inc
call
lds
bnd
add
xchg
jecxz
xor
dec
xorb
rcrb
or
jne
jbe
sub
xchg
int3
out
outsb
lret
aaa
fld
clc
push
and
pusha
sahf
cmp
mov
aad
mov
pop
cmovo
ds
loop
mov
andb
xchg
pop
push
pop
pop
or
inc
into
jg
test
or
stos
mov
in
adc
mov
leave
inc
clc
xorb
jno
adc
stos
inc
scas
ds
xor
jo
inc
pop
mov
out
sarb
fwait
adc
pop
cmc
test
test
ljmp
jno
and
sti
out
dec
inc
cmpb
xor
xchg
xchg
bound
int3
adc
dec
fldcw
mov
aaa
fldcw
mov
xchg
or
jg
inc
xchg
pop
mov
add
mov
std
add
ja
cmpsb
jg
dec
insb
xor
pushf
mov
std
int3
xchg
js
cmp
sbb
jbe
lcall
sar
mov
jnp
lea
xorb
arpl
inc
inc
mov
mov
dec
mov
insb
jbe
ljmp
pop
xchg
jno
and
je
fstl
cmpsb
or
push
mov
xor
pop
push
ret
fsubrl
cwtl
pop
sarl
sbb
mov
insl
add
leave
push
adc
sub
je
sbb
push
sbb
dec
fnsave
call
dec
bnd
mov
out
mov
jge
cmp
hlt
and
out
lds
scas
jecxz
ds
cs
mov
jne
cmp
in
out
jbe
out
lahf
mov
ljmp
pop
mov
lock
xor
mov
addr16
cld
in
movsl
decb
inc
sub
xor
adc
repnz
pop
pop
fstp
pop
push
cmp
jno
stos
movsb
mov
add
inc
lods
xor
loop
pop
scas
jno
out
dec
insl
cwtl
mov
test
pushl
mov
jno
sbb
mov
ja
scas
data16
sub
and
cmp
out
xchg
ror
add
test
pop
inc
add
call
mov
mov
in
test
pop
adc
sub
jle
cltd
outsl
mov
enter
and
pop
push
mov
mov
lods
xchg
mov
mov
jl
aad
or
negl
mov
outsb
mov
mov
inc
dec
cmp
mov
test
sub
sbb
mov
lret
fstpt
pop
sub
xchg
mov
clc
ficoms
mov
push
mov
aam
ja
shrl
pop
push
lahf
jge
or
pop
or
cld
xor
in
dec
faddp
mov
aas
shrb
sbb
sub
xor
xor
or
lahf
insb
mov
cmp
xchg
fwait
stc
xor
xor
mov
adc
lods
stos
jg
dec
dec
gs
loope
outsb
mov
mov
rol
enter
pop
outsl
out
fdivrs
cmp
mov
pop
xor
mov
inc
fdiv
sub
pop
cmp
jmp
jns
sub
jne
lods
je
insb
fdivrl
rolb
out
dec
xor
insb
sbb
aam
xchg
push
popf
sbbl
mov
mov
and
sub
scas
and
inc
jnp
and
pop
mov
fisubrs
pop
icebp
data16
ja
inc
mov
mov
xchg
push
adc
ret
cld
cmc
daa
fdivrs
jg
mov
addb
xchg
and
dec
pop
pop
cs
jle
push
mov
jecxz
lret
iret
test
lock
add
push
mov
adc
dec
je
inc
repz
sbb
xchg
and
cmpsb
ficompl
int
and
adc
cmp
pop
call
loop
int3
lret
mov
xchg
sub
clc
pop
iret
jno
pop
add
dec
insl
shll
push
inc
add
pop
mov
cmc
fs
aad
int3
cwtl
fimull
pop
imul
mov
std
lret
cli
jp
rcrb
pop
repnz
or
pop
push
bound
pop
sbb
daa
dec
xor
adc
mov
xor
jns
add
mov
lcall
adc
xchg
pop
mov
aad
push
or
int3
cmp
out
xlat
mov
jo
push
lock
mov
mov
cmpsb
inc
lret
ljmp
lret
sarb
cmp
imul
cmp
fcmovnbe
fdivrp
in
adcl
cmp
xchg
xchg
fsubp
push
repnz
aad
push
adc
xchg
jae
xor
jns
lret
push
sarb
call
sub
mov
insl
sbb
sub
or
xchg
xchg
scas
loope
push
dec
jne
jns
cmp
cmp
add
sbb
inc
and
outsl
dec
subl
mov
push
pop
sahf
sahf
test
sbbb
pop
pop
imul
jecxz
mov
bound
sti
xchg
cmp
jl
adc
mov
or
dec
push
and
fsts
dec
movsb
adc
aam
retw
cmp
sbb
out
jb
cmc
xor
stc
mov
popa
jne
pop
fildl
out
addb
mov
sub
xorb
pushf
in
stos
das
or
xchg
pop
mov
fldl
mov
and
jmp
lcall
jb
je
add
sbb
in
insl
inc
sarb
mov
jb
jp
cmp
push
pmaxsw
cmp
push
pop
xor
lret
mov
or
mull
fsubs
int
call
lcall
repz
rcrb
and
daa
mov
or
popf
addb
stos
popa
shrl
push
aas
test
scas
push
push
jo
stc
cmp
pop
fwait
jb
pop
ss
sahf
ret
pop
call
faddl
iret
cmp
sub
and
or
sbb
push
and
xor
lds
scas
insb
sbb
lahf
push
fdivrp
popa
int3
stos
int
idiv
or
movsl
pop
mov
rorb
call
or
std
addl
dec
ret
aam
adc
mov
cmpsl
pop
lahf
rcl
pop
adc
jecxz
aaa
push
xor
lock
mov
cltd
scas
insl
and
inc
jae
rol
xorb
xchg
popa
pop
pop
mov
aam
mov
and
inc
adc
ret
inc
out
and
add
add
mov
push
jae
xchg
outsl
adc
ret
sbb
mov
dec
sbb
jmp
in
leave
pop
xchg
mov
and
mov
pop
cli
xchg
adc
push
cmp
mov
push
aam
in
mov
lret
mov
leave
or
mov
lods
add
insb
in
or
call
dec
sahf
jmp
mov
or
adc
daa
pop
adc
lret
adc
sbb
les
inc
stc
sbb
divl
sbb
in
jmp
jnp
jo
mov
je
or
lahf
pop
push
cmp
pop
dec
add
hlt
mov
dec
enter
push
mov
leave
and
jge
mov
leave
cmp
mov
pop
jg
jbe
jmp
fldcw
xor
scas
push
fidivl
negl
mov
xlat
mov
push
cltd
ret
mov
out
pop
test
sub
adc
adc
ss
ja
pushf
aam
es
or
inc
xchg
sub
push
in
pop
pop
call
sbb
addl
aad
je
daa
xchg
imul
jmp
sbb
movsw
jmp
dec
lea
xchg
repnz
cmp
lret
adc
fidivl
jle
and
in
test
mov
push
subl
out
outsb
adc
pop
std
lock
and
test
mov
jecxz
cmp
lods
pop
cmp
shlb
push
inc
pop
add
mov
and
push
fidivrs
jb
in
out
mov
pop
stos
nop
loope
push
inc
jns
xor
sub
inc
mov
test
fiaddl
pop
push
int
cmc
jecxz
jnp
push
adc
push
insl
mov
push
cli
or
sarb
nop
imul
inc
aam
sbb
jle
xchg
shlb
push
aas
ret
sahf
pop
add
mov
jo
cmp
shll
leave
sbb
and
push
mov
sub
mov
icebp
stos
notl
hlt
sti
ja
jne
cltd
bound
xchg
inc
cltd
inc
fisubrl
jp
cmp
aad
inc
dec
mov
inc
push
icebp
iret
mov
daa
add
adc
in
jp
inc
lret
insb
mov
mov
gs
repz
mov
out
sub
nop
push
fsubr
mov
mov
lods
jmp
inc
out
xor
add
dec
add
pmaxub
and
xlat
mov
sahf
push
pop
shrb
and
rcrl
jo
daa
inc
dec
hlt
sub
mov
mov
outsl
addr16
mov
divps
add
mov
push
or
icebp
or
push
aas
push
push
push
sub
into
add
test
rorl
sbb
sbb
sbb
imul
cmpsb
mov
push
dec
and
jl
sub
fdivrs
in
out
mov
pusha
inc
sbb
jns
popf
in
rolb
mov
int
cs
inc
mov
data16
sub
lds
dec
xchg
and
jbe
outsl
cmpsl
lods
xor
shll
add
in
adc
and
dec
mov
lret
xor
xchg
sbb
xchg
push
mov
adc
cmp
mov
adc
repz
sbb
jp
icebp
cwtl
pop
jmp
mov
cmp
adc
xchg
jmp
xchg
scas
push
addr16
inc
arpl
test
nop
out
out
cmp
addl
or
cmp
push
mov
cmp
imul
xchg
in
jns
and
incb
sbb
das
fstpt
hlt
out
and
push
push
jns
cmp
and
sub
test
popa
aam
lahf
pop
jbe
dec
pop
fistl
iret
and
mov
fsubrl
pop
repnz
push
pop
dec
push
ficomps
pop
jns
imulb
jg
mov
or
mov
or
sub
or
push
pop
jbe
aaa
push
push
jecxz
out
flds
aad
repz
inc
aad
inc
lock
xor
fwait
ja
sub
mov
sbb
dec
bound
inc
adcb
and
xchg
cs
ror
movsl
pop
les
sbb
fists
mov
mov
jmp
lea
aas
jns
sbb
mov
push
rcrb
rolb
fndisi(8087
pop
add
jl
addb
push
addr16
xorl
cmpsl
pop
or
mov
stos
cmovae
movsl
xchg
shlb
dec
push
cltd
mov
mov
sbb
out
and
loopne
jnp
in
lahf
add
aas
fisttpll
gs
fsubrs
stc
pcmpeqb
or
les
in
subl
xor
subl
push
cmp
fs
insl
and
adc
sub
pop
cmc
cmp
pop
mov
outsl
hlt
inc
test
mov
mov
push
pop
insl
jecxz
int3
adc
cmpsb
pop
vpminub
inc
pop
addr16
into
cmp
movsb
movsl
cmp
lcall
sbb
iret
imul
fadds
dec
ljmp
pop
cmc
enter
or
pop
pop
lods
push
pop
mov
sbb
les
add
loope
out
mov
inc
dec
mov
mov
popa
inc
mov
jo
dec
jg
xchg
test
gs
daa
mov
movsl
xor
out
add
int
adc
jmp
fimuls
push
in
mov
mov
pop
mov
jp
jecxz
add
mov
je
sahf
or
or
and
adc
pop
push
int3
sub
test
sub
fadds
mov
fistpll
push
gs
push
mov
test
in
jns
push
cmp
jle
sub
clc
pusha
test
pop
jg
sbb
outsb
inc
int3
xchg
lahf
and
pop
je
lods
lds
cmp
insl
push
rorb
mov
mov
jg
add
inc
lods
scas
fisubl
mov
fs
mov
test
xor
xchg
dec
add
sahf
mov
test
and
or
mov
inc
lea
jge
inc
xchg
cwtl
cli
push
jno
inc
sub
js
lods
mov
rolb
imul
adc
jmp
mov
and
cmp
sub
iret
frstor
in
fstpt
xor
icebp
mov
jo
data16
xchg
jae
xor
bound
je,pn
in
into
jae
cmpb
fsubrl
push
cmp
loop
cmp
and
pop
push
loopne
stos
sub
jae
pop
push
adc
inc
push
xchg
jnp
mov
mov
inc
cmp
sbb
popf
sub
repnz
in
push
jg
add
xlat
jmp
leave
sbb
push
pop
push
mov
call
inc
aaa
pop
push
add
dec
scas
aas
add
inc
mov
sub
add
addl
pushf
xor
loopne
in
jnp
cwtl
xchg
add
mov
push
test
inc
jbe
xor
repz
aam
in
inc
mov
jae
dec
cli
mov
leave
mov
jmp
icebp
mov
pop
xlat
jb
lock
outsl
jne
push
cmpsl
mov
lcall
or
inc
cli
xchg
push
add
movsl
cmp
sbb
mov
rcr
out
iret
xchg
notl
mov
jno
fnstsw
mov
sub
cmp
pop
add
push
mov
inc
js
call
outsl
mov
std
mov
and
xor
or
ffree
cwtl
enter
mov
and
in
out
dec
mov
and
mov
lods
ja,pn
test
addr16
cli
xor
and
fldcw
fwait
je
es
cmp
stos
aas
adc
mov
daa
xor
push
xchg
pop
test
or
ja
sbbl
lods
pop
stc
nop
jle
sbb
imul
or
rclb
and
inc
adc
data16
push
repnz
insl
mov
test
mov
test
dec
jo
dec
or
fwait
enter
and
arpl
mov
fisttpl
test
mov
add
pop
ds
adc
sub
push
lock
cmp
ret
movsl
inc
pop
xor
cmpsl
inc
ja
add
cwtl
repz
push
enter
insl
ror
test
mov
repz
and
jb
pop
fcomps
xchg
adc
pop
out
outsb
roll
rcll
movsl
lret
adc
mov
cmp
imul
push
mov
pop
mov
mov
std
mov
mov
cmpsl
push
and
shll
pop
xor
out
test
sbbl
push
fnstcw
add
aad
mov
push
sub
pop
lock
repnz
daa
and
inc
xchg
mov
mov
aad
outsb
daa
insb
pop
mov
mov
pop
ljmp
push
jns
mov
notb
dec
dec
pop
push
into
inc
sub
shll
xchg
sbb
lcall
add
add
xchg
std
out
push
pop
in
xchg
cld
sub
lock
dec
aaa
jns
fwait
cmp
pop
pop
jbe
push
inc
mov
lcall
cltd
pop
mov
mov
xor
std
mov
add
lahf
testl
add
push
repz
dec
jge
jbe
adcb
inc
jl
push
cmp
mov
inc
cmpsl
mov
inc
hlt
mov
and
dec
and
cmc
fldl2e
fldt
jge
mov
in
inc
xchg
adc
mov
jmp
pop
cmpsl
lds
sbb
sbb
frstpm(287
das
pop
mov
sub
aaa
xor
cltd
xor
das
inc
out
imul
mov
inc
test
outsb
icebp
pop
and
shrb
cmp
loop
and
cltd
push
push
sbb
jns
xchg
cmp
mov
sbb
insb
popf
push
fidivl
js
sub
into
sbb
sbb
dec
iret
mov
ss
daa
fildll
adc
fstpl
push
push
cltd
js
insb
mov
pop
clc
std
jae
lods
mov
outsb
sub
sub
adc
sub
fildl
frstor
fdivr
jae
xchg
lret
andb
cmp
sarl
testl
pop
push
sarb
mov
mov
mov
inc
subb
cltd
xlat
fcoml
cmp
insl
sbb
xor
or
out
ds
rcrb
adc
rcll
ds
fnstenv
mov
scas
addr16
push
or
pop
test
push
jg
cmp
dec
sbb
enter
and
stos
mov
push
push
stos
push
lods
outsb
fnstsw
mov
dec
jae
push
xchg
inc
divb
xchg
imul
jbe
sub
psadbw
add
rorl
push
inc
add
in
test
fnsave
mov
add
fisubrl
vmovaps
shrl
push
cmp
mov
push
mov
jns
xchg
fidivrs
rcrb
scas
out
stos
icebp
push
cmp
imul
add
inc
test
jge
xchg
mov
repz
sbb
dec
cli
push
ljmp
cmpb
lcall
xchg
nop
xor
mov
sub
dec
gs
lds
popf
pop
adc
test
sub
pop
sar
push
inc
mov
jge
test
cmp
add
jge
shrb
sub
lahf
and
test
inc
aam
mov
mov
popf
mov
push
stc
in
pop
scas
xchg
jne
jnp
lds
int
mov
inc
jp
cmp
xchg
pop
test
inc
jnp
sbbl
adc
xor
aam
push
jnp
bound
je
jno
mov
gs
inc
jle
xor
cld
inc
sbb
mov
mov
fistl
sti
arpl
sbb
inc
push
or
and
rolb
aas
cld
inc
gs
inc
out
pop
popf
lods
cmp
out
push
xchg
mov
lahf
and
jg
repnz
sti
mov
pop
mov
xchg
aaa
mov
jns
add
push
mov
outsb
in
jge
lods
xchg
shrl
insb
xchg
sbb
push
xchg
push
sbb
imul
aas
jl
xor
es
std
push
stc
and
lods
xor
in
cmpsb
xchg
lret
mov
in
or
rcrl
xor
xlat
push
adc
inc
mov
push
xor
repz
cmp
sbb
insl
add
pushf
jno
xor
lock
push
cmp
popf
jnp
dec
cmp
je
jns
popa
xor
sahf
or
sbb
jmp
call
lds
fbstp
push
loope
xlat
mov
mov
add
rolb
push
stc
cmc
arpl
and
dec
mov
decl
fwait
xor
imul
and
sahf
sub
addb
cmp
rorb
mov
arpl
or
adc
xor
xlat
jg
fisubrl
aaa
mov
orb
fnstcw
aaa
test
and
and
js
cld
jge
clc
push
sub
dec
inc
sbb
adc
lds
das
pop
xchg
aam
adc
mov
push
dec
data16
repz
enter
xchg
pop
movsb
rcrl
push
jl
lods
fcoml
movsb
mov
idivl
stos
fisubrl
pop
fwait
sbb
mov
scas
mov
mov
test
sbb
fisttps
jne
aad
lock
sbb
movsb
adc
adc
mov
sbb
fstl
nop
jg
dec
cmp
loop
sub
orb
push
leave
or
mov
inc
movsb
xor
adc
mov
mov
cmpsb
inc
and
cltd
xchg
cmp
mov
and
in
nop
aad
mov
sub
test
insb
outsb
divl
mov
add
leave
push
xor
ss
imul
cwtl
pop
mov
cld
mov
adc
mov
pop
enter
cmp
imul
call
mov
ss
das
scas
sbb
aam
xchg
jo,pn
cld
or
jns
iret
fidivrl
mov
out
adc
ficomps
out
mov
mov
imul
jbe
jmp
sbb
mov
xor
loopne
loop
pop
mov
js
movd
adc
in
orl
popf
enter
inc
push
mov
enter
ljmp
sbb
xchg
push
inc
push
inc
mov
in
inc
mov
inc
inc
out
xchg
push
and
fdivrp
pop
dec
sahf
pop
stc
clc
xchg
mov
jmp
fsubrp
dec
sub
mov
ss
fisubrs
lcall
push
imul
or
add
loop
aam
xor
cwtl
stos
cs
sub
jle
outsl
popf
xlat
mov
dec
dec
jge
das
jmp
repnz
mov
xor
jne
ret
lock
and
mov
enter
mov
je
fstpt
mov
mov
push
xchg
mov
push
xchg
mov
sbb
js
inc
testl
xor
xor
add
pop
sarl
jne
push
xor
push
outsb
stos
mov
pushf
bound
mov
push
shll
xor
sbb
mov
std
lahf
pop
jg
clc
je
inc
dec
stc
mov
push
xchg
out
mov
outsl
jnp
mov
adc
dec
add
fcomps
ss
pop
jle
test
mov
in
pusha
push
lds
fwait
test
adc
xchg
xchg
fdivl
loop
lds
pop
xchg
cmc
mov
icebp
fdivrp
jns
or
jae
and
mov
sahf
cmc
mov
iret
out
stc
dec
cmc
fcmovnbe
lods
popf
mov
jmp
xchg
jb
shrl
inc
mov
sti
mov
stos
cli
mov
jecxz
pop
popa
cs
ljmp
ret
aas
or
ficoms
lds
or
push
mov
pop
lock
cmpsb
leave
mov
repz
inc
jno
add
mov
mov
push
pop
mov
cwtl
into
pop
mov
loopne
cmc
bound
jns
mov
add
pop
es
mov
enter
mov
popf
inc
pop
or
dec
xlat
mov
pusha
pusha
add
and
data16
inc
stos
sub
bound
xor
xchg
and
je
movsb
pop
lds
or
cmc
cmp
fstl
daa
xor
aaa
outsb
movsb
mov
mov
mov
mov
cmp
movsl
or
mov
in
and
adc
or
xchg
jb
jns
and
lds
jo
add
dec
mov
cmpsl
or
push
fmulp
add
mov
frstor
mov
inc
jbe
pop
lods
adc
gs
mov
xchg
fisubs
int3
and
xor
push
xchg
jbe
sbb
shlb
cmp
add
cmp
mov
mov
sbb
shlb
testb
leave
sti
push
mov
inc
jg
adc
ficomps
jno
jge
dec
sub
sub
jb
jl
cmp
fsubs
js
popf
jnp
push
rorb
sbb
adc
jo
addr16
cmpb
into
ja
test
and
push
loope
xor
movsl
insb
adc
mov
rep
fcomi
orl
popf
movsl
inc
pushf
arpl
lods
adc
sub
push
jo
mov
inc
sbb
push
ret
xchg
fwait
pop
fidivs
repnz
mov
xchg
cmp
lcall
clc
cmpsb
cld
popa
sub
xchg
dec
outsl
or
sub
sbb
cwtl
inc
pop
mov
mov
cmpsb
je
xor
sbb
sbb
shr
xorb
fstp
popa
out
fldln2
xlat
and
stos
insb
dec
dec
pop
bound
aaa
pusha
xchg
jp
hlt
cmp
in
repz
and
ret
pop
xor
shll
sarb
xchg
fstps
push
int3
repz
pop
or
das
in
push
push
imul
adc
jns
jp
mov
pop
mov
test
mov
cmp
bound
enter
loopne
add
fcmove
and
add
clc
and
cmp
adcb
push
and
inc
shr
inc
add
and
pop
sub
jp
out
rcr
ret
xlat
fstpl
in
and
or
ret
testl
dec
stos
sbb
add
mov
fcompl
aam
mov
dec
mov
into
leave
add
mov
mov
fdivl
stos
fidivrs
sub
xchg
aam
xchg
and
rcr
daa
inc
out
cltd
out
mov
lahf
mov
scas
sbb
xchg
add
int
mov
push
lret
mov
lock
dec
pop
fs
jae
cmp
lea
or
cmc
dec
mov
subb
push
movsl
sub
rorb
cmpsb
push
sub
jnp
pop
pop
lret
ror
mov
mov
add
addr16
movsl
mov
rorb
int
jnp
push
arpl
call
std
or
stos
pusha
mov
sbb
nop
stos
lcall
repnz
stos
jecxz
pushf
xchg
push
sbb
pushf
movsl
fstpl
sar
repnz
adc
out
inc
fnstenv
pop
insl
cmpsl
int
mov
enter
adc
jl
and
mov
fs
test
cs
dec
int
xlat
dec
les
fidivs
loope
jl
icebp
leave
cmpsb
iret
inc
fwait
mov
jb
movsl
call
repz
and
in
fisttpl
cmp
push
and
leave
dec
sub
into
adc
xor
mov
sub
and
mov
loop
sbb
push
pop
add
inc
xor
nop
push
adc
aas
or
pop
fnstenv
es
sbb
call
adc
ss
repz
jl
cmp
hlt
orl
and
sub
loopne
sbb
adcb
lock
test
cmp
fs
addr16
in
es
out
sahf
mov
dec
imul
mov
xchg
pop
daa
das
in
and
push
loope
push
sti
dec
popa
ret
lods
xchg
test
push
push
jae
lds
vsubpd
pop
cwtl
xchg
jmp
jmp
push
mov
scas
or
mov
adc
or
cmp
jnp
jb
pop
cwtl
add
test
mov
cmp
cld
dec
dec
and
mov
jne
dec
jne
lcall
sbb
popa
repnz
dec
mov
jp
xor
mov
mov
sub
xchg
inc
lret
movsb
aam
jbe
dec
jnp
xor
sbb
lret
mov
inc
dec
xor
divl
sti
cltd
and
adc
or
push
hlt
mov
cmp
popa
stos
sti
repnz
dec
xchg
repz
push
outsl
test
sbb
fld
add
mov
aam
mov
dec
call
lds
inc
stos
push
dec
push
add
or
and
adc
push
imul
push
adc
mov
jmp
pop
test
sarl
aam
outsl
push
xorb
or
cmp
push
pop
mov
adc
pop
dec
add
jnp
pop
xor
mov
dec
pop
ljmp
pushf
and
dec
andl
sub
stc
jb
fstps
xchg
int3
add
aaa
daa
sub
mov
cmc
jg
mov
aas
out
xor
cmp
and
mov
movsl
test
push
sbb
mov
in
xchg
mov
push
ret
cmp
and
add
iret
adc
aam
scas
xor
sbb
pushf
dec
mov
jle
add
into
adc
inc
or
cmp
and
sub
mov
xor
dec
bound
sub
mov
or
les
sub
mov
jg
mov
sbb
mov
fs
xor
cmpb
mov
loopne
jmp
call
dec
cmp
mov
cmpsl
dec
addr16
sbb
mov
insl
pop
lea
mov
jb
jle
sbb
inc
pop
push
cmp
daa
and
cmpl
sarl
and
mov
cmpl
dec
enter
push
cmpb
jmp
dec
or
push
mov
loopne
popa
mov
sub
imul
test
mov
inc
ficoms
sub
cmp
iret
and
bound
in
xchg
push
cs
push
inc
ss
xor
popa
dec
jbe
mov
add
adc
cmc
and
in
cmc
cmp
cmp
rclb
mov
or
mov
lea
pop
enter
ret
xor
ret
divl
add
dec
dec
sbb
xor
cmp
inc
shll
decl
lcall
push
jno
pop
lret
cmp
lea
and
mov
cmp
or
sarb
mov
repz
insb
sahf
les
cmovo
dec
stos
jle
mov
pop
mov
mov
cs
inc
imul
jns,pn
jne
sub
mov
adc
mov
int3
icebp
mov
mov
sub
shrb
aaa
outsl
push
cmpsb
cmp
loop
dec
and
push
xor
xchg
lret
cmpb
jg
or
pop
mulb
fimull
jae
pop
adc
push
cmp
mov
sub
lahf
outsb
adc
push
push
pop
scas
mov
inc
lds
in
ret
and
fisttpll
stos
sbb
xor
fmul
mov
stc
stos
and
xchg
call
xor
add
mov
gs
lcall
cmp
les
out
xor
flds
addl
loope
sti
pushl
xor
inc
jle,pn
mov
std
sbb
cmp
insb
and
dec
or
hlt
sbb
out
pop
in
mov
cltd
icebp
int3
aad
mov
push
add
mov
movsb
push
stos
leave
repnz
push
adc
mov
mov
pop
push
sbb
or
mov
mov
sub
fildl
ret
adc
aad
movb
jle
jno
icebp
mov
aaa
xchg
mov
xchg
xchg
xor
dec
fiadds
dec
dec
fwait
jg
mov
clc
xlat
xor
jbe
sub
xchg
outsb
push
xor
sbbl
stos
inc
mov
sub
cmpsb
xchg
fwait
es
data16
rol
cltd
or
gs
xor
add
rcr
pop
test
add
dec
loope
insb
inc
inc
lret
adc
or
xchg
jae
mov
inc
in
scas
pop
pushf
std
mov
lcall
add
jmp
push
and
and
adc
push
jle
pop
iret
out
mov
popa
mov
inc
xchg
xchg
cmp
arpl
fsubl
out
insl
sub
xchg
sub
jg
and
sub
add
inc
decb
mov
lcall
iret
fwait
push
scas
cwtl
lret
stos
push
cmpsl
cli
cmp
and
mov
sub
lods
or
stc
jae
test
ljmpw
dec
push
jb
dec
imul
xchg
movsb
movsb
xchg
sbb
xchg
js
cmc
push
testl
pop
daa
mov
xchg
push
push
mov
rorl
mov
fnsave
mov
les
stos
popa
pop
cmpsl
dec
fists
outsb
add
cmp
loope
lcall
inc
fcoml
iret
iret
clc
xor
inc
scas
mov
or
loop
das
call
mov
xor
stos
push
std
jbe
mov
mov
jecxz
sbb
sar
pop
roll
push
add
cmpsb
test
inc
sti
rep
in
mov
in
add
and
pop
push
push
rclb
adc
cmp
lock
insb
into
sub
pushf
mov
sub
repnz
imul
aam
push
inc
lds
dec
mov
mov
fwait
mov
cmc
fisttpl
out
adc
icebp
imul
sub
das
imul
dec
jp
mov
jno
mov
or
jns
in
adc
mov
sbb
aaa
cmp
repz
xor
xor
lret
xor
jecxz
pop
jmp
lds
lcall
testb
je
popf
push
cmp
sahf
out
jb
mov
sbb
or
add
or
clc
inc
and
subl
xlat
or
dec
scas
ja
sbb
adc
testb
leave
inc
xorl
cmp
xchg
add
mov
loope
lock
js
cmpsb
fucomi
sbbl
inc
scas
bnd
mov
mov
gs
outsl
adc
mov
sbb
loope
push
pop
add
sahf
and
pop
fdiv
ljmp
pop
mov
lret
adc
or
mov
leave
pop
sbb
sub
and
das
fwait
cmc
rcll
lea
popa
daa
cmp
insl
add
es
into
add
push
sbb
out
movsl
out
dec
pushf
stos
repz
xor
das
in
adc
adc
out
repnz
fstpl
xchg
lahf
int
int3
popf
mov
pop
or
adc
leave
cmp
div
inc
ret
xchg
inc
pop
imul
mov
ficoms
push
jbe
inc
sub
in
out
sbb
test
sub
mov
cmc
ja
jmp
sbbb
imul
pop
call
loopne
mov
popf
mov
adc
jmp
es
sub
dec
add
or
mov
mov
inc
je
lcall
aaa
mov
mov
fcmovb
push
pop
push
daa
aas
or
adc
sarb
dec
sbb
fildl
test
jno
push
inc
outsb
mov
sub
push
jae
jo
int3
jg
xchg
jg
outsb
pop
test
call
lcall
sub
push
addr16
add
inc
dec
inc
mov
lods
movsl
in
sbb
shrl
jg
mov
push
out
jb
int
rclb
xor
aad
inc
in
push
push
stos
das
js
or
popa
inc
mov
test
sbb
jne
shl
out
mov
out
sbb
push
push
mov
xchg
scas
aas
andb
inc
sbb
push
mov
rcrl
mov
push
jo
xchg
xchg
sbbl
sahf
movsl
adc
jl
or
xor
xor
insl
dec
xor
ret
dec
pushf
movsl
incb
and
and
add
mov
in
dec
jne
lahf
leave
sti
adc
xor
mov
loopne
inc
repnz
js
inc
ret
int
dec
mov
inc
and
in
or
imul
mull
jne
imul
and
sbbb
sbb
add
std
scas
jg
fs
pop
dec
xchg
push
hlt
nop
pop
aad
mov
jmp
dec
sbb
push
and
jo
scas
jmp
clc
or
in
jmp
aam
pop
aam
mulb
and
xor
in
movsl
call
mov
pop
jne
add
xor
shrl
adc
mov
leave
or
lock
push
dec
test
icebp
fadd
decb
es
push
ss
pop
in
jmp
leave
xor
ret
xchg
sub
sbbb
and
in
xor
add
js
jnp
mov
jecxz
repz
loopne
inc
push
mov
pop
das
xchg
add
push
addr16
sbb
xor
push
popf
repnz
cmp
lods
mov
loope
lock
mov
ljmp
sbb
cmp
das
xor
out
mov
sub
push
xchg
cmp
pop
adc
ror
adc
and
popa
sbbb
inc
lahf
sbb
or
cmp
pop
dec
dec
and
dec
scas
adc
mov
pop
add
mov
cmp
add
mov
pop
pop
sahf
mov
sub
cmp
popf
pop
push
repnz
and
aaa
sbb
mov
mov
sbb
xchg
jl
push
adc
enter
shr
cld
mov
dec
pusha
icebp
lods
jl
jmp
aam
dec
int
or
xlat
and
pusha
ss
insl
xchg
xor
xchg
jp
data16
add
adc
xlat
es
aad
inc
xor
test
lods
in
or
mov
or
mov
xor
in
sub
xchg
je
js
inc
pop
push
or
push
pop
cmp
dec
xchg
mov
adc
lods
cmp
add
sbb
push
fildll
sti
lret
bound
jnp
aas
aad
lea
pop
or
jl
out
xor
movaps
ficoms
outsl
xchg
xchg
stc
cwtl
pop
or
pop
or
push
popf
sbb
inc
sub
mov
dec
cli
xchg
fiaddl
add
mov
dec
mov
jmp
jb
xchg
lea
jl
outsl
ret
or
in
fsubp
lret
mov
xor
fisttps
adc
sub
adc
aam
in
adc
push
cld
and
cmp
sbb
mov
or
xchg
hlt
jae
and
pushf
xchg
lock
cs
jl
xchg
das
add
das
inc
leave
call
pop
adc
leave
mov
mov
mov
cmpsl
mov
pusha
cld
mov
xor
push
or
std
jecxz
mov
js
ljmp
cli
clc
xchg
cs
std
subb
lods
cmp
pop
faddp
rclb
jg
stc
hlt
data16
ret
push
mov
or
in
mov
xor
mov
pop
pop
xchg
cs
lcall
mov
cmp
push
nop
add
add
lea
mov
iret
jl
subb
mov
inc
dec
ficomps
mov
and
popf
repnz
cli
clc
sub
subl
mov
xchg
push
push
rolb
lds
mov
push
stos
xlat
repnz
ret
xorl
jge
xor
movsl
adc
dec
mov
sub
in
add
adc
int
add
mov
add
loop
fsubrp
addr16
mov
les
pop
mov
and
and
ret
xchg
into
ss
pushf
mov
dec
jae
jnp
mov
lahf
mov
cmp
mov
insl
sub
shlb
fwait
sub
adc
cmp
or
aas
lea
xchg
inc
xor
mov
sbb
hlt
sub
sbb
sbb
and
in
adc
popf
les
push
test
jp
sub
mov
rclb
cli
dec
push
dec
jb
jle
cmp
pop
and
ss
mov
in
rcrb
xchg
add
shll
ljmp
insl
std
pop
mov
mov
rcll
sub
fnsave
repz
or
inc
mov
icebp
inc
andb
mov
dec
aaa
lret
push
insl
fsubl
mov
xchg
sub
ficoml
push
lock
mov
out
fcmovu
push
cli
rolb
add
lgs
mov
or
pop
lds
pushf
or
insb
insl
adc
lret
sbb
js
outsb
ljmp
in
and
mov
test
nop
pop
in
dec
ja
pop
mov
cmc
addl
mov
sub
scas
dec
ret
xor
xchg
stc
gs
hlt
adc
repnz
or
push
cld
cld
adc
and
mov
clc
cmp
sbb
test
cli
bound
and
dec
insw
dec
insl
push
dec
xor
mov
cmp
scas
add
ret
lods
jmp
sti
push
mov
popf
nop
js
xor
lea
sub
mov
mov
sbb
in
popf
lock
and
cmc
sti
pop
jae
les
push
add
adc
xor
jnp
testb
subb
sub
cmp
jl
push
mov
xchg
cmp
pop
cmp
push
xor
inc
inc
inc
iret
cld
xlat
sarb
dec
mov
mov
xchg
pop
jbe
imul
arpl
mov
test
in
lea
les
ret
scas
pop
nop
mov
dec
dec
ja
add
inc
jl
xor
fdivs
fcmovb
cmp
ja
sbb
adc
mov
inc
mov
loopne
jg
xor
out
mov
pop
and
in
divb
popf
arpl
xor
sbb
lods
add
cld
imul
adc
jnp
xchg
popa
sbb
ja
adc
add
jns
jmp
stos
nop
dec
dec
mov
ja
add
sti
jae
sub
out
xorl
jo
pmullw
insb
cmp
sbb
xchg
xor
ja
cmp
xor
adc
mul
loopne
bound
in
mov
mov
pop
xor
stc
adc
in
xchg
outsb
inc
push
ficompl
jp
push
fsubrs
lret
out
and
xor
cmp
sbb
xchg
je
cli
jbe
data16
jae
mov
in
and
mov
andl
fisubs
fidivl
inc
out
and
pop
cwtl
jecxz
jnp
sbb
push
or
jo
sbb
xor
stos
cwtl
cmp
notl
icebp
lret
xchg
cmpsb
sbb
ds
cmp
ret
pop
pop
xchg
aas
into
pushl
push
mov
jmp
test
lods
lds
inc
mov
xor
add
push
sbb
jb
cld
dec
mov
rol
popa
ftst
adc
cltd
or
xlat
and
jp
xor
aad
stc
lret
sub
pushf
xsave
ret
sub
jecxz
mov
push
mov
pop
in
inc
je
sbb
inc
pop
ja
inc
shrl
js
mov
mov
jne
cmp
xor
jb
inc
je
inc
jno
and
shll
lock
jg
mov
mov
scas
cmp
pop
mov
xor
fwait
mov
xor
popa
mov
sub
cltd
mov
mov
jo
fwait
ja
jbe
pop
aaa
cmp
cmp
int
mov
test
push
outsl
loop
shlb
pop
cwtl
jmp
and
icebp
repz
push
mov
dec
scas
mov
std
imulb
fstpl
fs
lods
jo
ljmp
in
jg
shrb
movsl
movsl
hlt
lea
enter
pop
cmc
loope
imul
cmp
adc
jne
mov
mov
sub
add
into
lea
arpl
jmp
mov
decb
lock
jbe
inc
mov
outsl
jl
sub
mov
inc
or
sbb
cli
inc
shll
jbe
ror
push
pop
test
or
fsubrl
jns
xchg
test
jge
mov
or
sub
ds
std
cmp
decb
ss
mov
mov
mov
cld
and
mov
jnp
cmp
xchg
imul
dec
pop
xchg
dec
test
cmpsl
imul
dec
mull
das
cmp
jmp
push
mov
outsb
dec
or
sbb
jecxz
pusha
out
add
or
adc
or
stos
ja
daa
jle
xchg
mov
xchg
push
lcall
dec
and
adc
or
mov
sbb
xchg
popa
jl
stc
push
cmp
lock
stc
rol
les
xchg
xchg
faddl
or
cmpb
mov
mov
sbb
cmp
pop
mov
cltd
cs
pop
jne
aam
insl
jns
jmp
or
xor
fcompl
js
inc
nop
aas
movsl
push
cli
xor
scas
mov
test
add
ret
test
mov
lahf
hlt
jg
rcrb
xchg
pop
fimuls
xchg
outsb
jns
incl
adc
std
pop
lcall
out
stc
xchg
push
push
jns
sub
imul
into
daa
and
push
mov
cmp
mov
out
jne
jo
or
sub
xchg
or
icebp
or
leave
jae
cmpsl
shrb
jne
mov
push
fstpl
jbe
rclb
push
xchg
loope
and
jno
enter
mov
sub
aad
test
push
aam
or
rcl
jb
or
jbe
and
fimuls
imul
aam
sub
xor
pop
fcmovne
sarl
jecxz
dec
ss
sbb
mov
cmp
stc
ror
iret
mov
sbb
push
jg
aam
lods
add
sub
dec
out
push
xchg
xor
fdivrl
or
push
inc
jae
dec
decb
stos
jmp
or
cmpl
test
lcall
fiadds
inc
mov
leave
insb
fbstp
inc
inc
push
cltd
loope
or
fs
xchg
repnz
cmp
jbe
xchg
xor
lret
jg
ljmp
push
popa
xchg
xor
push
pop
pop
push
ss
das
insl
mov
xchg
push
jb
inc
aad
pop
cmp
fstl
pushf
test
mov
mov
adc
xchg
mov
popa
lods
mull
mov
sti
sti
inc
push
push
out
outsb
add
lahf
insl
ja
xor
sbb
mov
inc
push
in
loopne
jle
add
repnz
cmpsl
mov
cmp
insl
adc
cmpsb
push
shl
test
mov
or
sbb
enter
jbe
lret
neg
xchg
mov
sti
cli
add
test
aas
insb
fisttps
adc
aaa
inc
lods
dec
add
mov
popa
je
xlat
xchg
and
stc
xor
pushf
push
mov
adcb
pop
imul
cmpsl
stc
out
mov
xchg
push
call
fidivrs
cmp
data16
push
rsm
mov
cmp
push
adc
bound
in
sbb
pop
add
outsb
fnstcw
fs
mov
test
sub
sub
flds
adc
xchg
std
pop
pop
testl
mov
jno
popa
fs
xchg
xchg
or
xlat
ret
test
jmp
call
jae
mov
nop
repz
mov
jl
cli
pop
adc
rclb
sub
andb
repnz
sbb
aas
and
clc
addl
popa
nop
es
mov
fisubrs
dec
jae
repz
jnp
xchg
pop
fisubs
xchg
and
push
dec
imul
vpslld
ret
mov
inc
jnp
cmp
in
cmp
cli
repnz
mov
sbb
pop
mov
call
xor
rcrl
jp
push
subb
daa
pop
pop
fadd
xlat
test
int3
les
xor
sub
dec
mov
mov
jne
stos
movsb
ret
push
into
pop
lcall
aaa
push
dec
outsl
jecxz
xor
test
xchg
popl
in
mov
push
cmp
out
cmc
jb
movsl
adcb
cwtl
mov
and
lcall
pinsrw
push
xchg
test
ljmp
mov
xlat
in
pop
jge
push
jo
pop
call
out
fadds
xchg
mov
and
pop
sbb
add
xlat
push
push
shlb
and
je
lret
mov
and
ret
push
aaa
mov
int
xchg
mov
mov
gs
add
int
jmp
jecxz
repz
loope
xor
inc
xchg
lock
loope
rorb
test
cmp
mov
sbb
and
mov
in
cmp
stc
jg
mov
jg
in
adc
cmp
fst
adc
mov
repnz
mov
data16
jl
jle
scas
inc
add
jg
inc
jp
ljmp
mov
or
jb
or
insl
inc
jnp
in
xor
pop
mov
addb
inc
std
shrl
je
jo
fwait
into
pushf
ret
lret
adcb
cmp
cmp
mov
lds
stc
push
mov
and
adc
aam
int
test
int3
inc
stc
dec
stos
leave
ds
push
shl
jecxz
lret
aad
or
mov
enter
mov
add
loop
adc
roll
mov
cs
jbe
or
add
repz
inc
test
into
sub
add
es
into
arpl
in
scas
aad
xor
lea
sti
mov
mov
dec
cltd
sub
enter
aam
push
movsl
xchg
pop
icebp
add
jge
pop
xchg
sbb
push
fdivl
ja
loop
mov
pop
mov
mov
jnp
sbb
push
lahf
xchg
or
inc
enter
mov
mov
lock
popf
mov
jp
es
pushl
adcb
xchg
mov
fcomps
ret
inc
adc
ret
adc
sbb
xchg
subl
outsl
stc
jnp
push
mov
mov
aaa
mov
and
xor
in
pop
icebp
dec
and
stos
fst
fwait
xchg
lods
mov
and
stc
mov
xchg
xchg
out
add
pop
jo
sub
fimuls
in
mov
fldl
scas
and
aam
xor
repnz
into
imul
pop
xor
je
pop
mov
add
fcoml
mov
cmp
pop
jae
sub
and
jg
add
and
mov
nop
and
jbe
xchg
mov
add
dec
mov
call
cs
scas
jb
pushf
les
vpsubsw
cmpb
xchg
pop
inc
cmp
sbb
dec
mov
mov
adc
pop
mov
inc
inc
fwait
loop
repz
inc
mov
sahf
xor
shll
jge
fisubl
ret
xchg
fwait
mov
inc
mov
jnp
pusha
sbb
jb
idivb
repnz
mov
fxtract
lods
ss
stos
cli
lods
jo
scas
jge
push
adc
jmp
insl
xchg
pop
pusha
jecxz
and
xor
cmp
movaps
rcr
andb
popf
fs
subl
sub
cltd
out
push
stc
mov
sbb
mov
dec
enter
sub
popf
jo
call
in
xchg
roll
mov
mov
xor
cmp
jecxz
jne
xchg
mov
mov
adc
pop
fwait
in
mov
mov
push
adc
lahf
stc
mov
ret
and
es
mov
into
out
cli
jno
or
nop
aaa
mov
int
and
sahf
popf
in
pop
adc
xchg
mov
in
testb
addr16
movsl
sbb
pop
lahf
ljmp
cli
push
xchg
add
ljmp
mov
fidivrs
mov
aam
ja
cmp
orl
sbb
mov
mov
pop
test
mov
mov
pop
hlt
gs
aad
add
jl
nop
jmp
mul
dec
xchg
pop
das
and
mov
scas
rclb
mov
lret
sahf
push
mov
cmc
xchg
jmp
loope
sbb
ret
lret
mov
mov
sbb
inc
vmaxpd
gs
jecxz
or
sahf
lods
sub
mov
and
shrb
ja
mov
pop
xor
lock
ret
xor
testl
daa
fists
mov
popf
sbb
rcll
mov
hlt
jbe
dec
lcall
imul
sbb
cmpsb
mov
xor
pop
sub
mov
in
lret
xchg
sahf
push
movsb
jb
outsl
in
movsb
mov
data16
mov
test
mov
and
mov
jne
sbb
mov
mov
xor
das
xor
aad
rcrl
cwtl
dec
addr16
inc
sbb
aad
add
int
xchg
test
loop
je
or
fnstenv
mov
mov
lds
pop
mov
cltd
movsb
shll
test
fcmovnb
push
movsb
pop
mov
pop
les
insl
ljmp
xor
sbb
mov
js
jp
cmpsl
test
adc
incb
or
out
leave
inc
shl
mov
stos
mov
sti
adc
adc
cld
adc
add
or
adc
xchg
pop
leave
inc
inc
or
lock
jge
loope
add
sub
sbb
out
sbb
ss
cwtl
or
pusha
lds
je
pop
test
gs
es
lret
ss
testb
xor
mov
loopne
adc
imul
jae
daa
cld
sahf
jo
or
ret
stos
xor
xor
outsb
cs
and
pusha
hlt
or
mov
mov
fs
pop
mov
and
jns
push
aad
cmc
loope
mov
or
pop
mov
and
call
pop
fcomps
lcall
andb
push
icebp
das
inc
dec
mov
arpl
negb
testl
stos
and
not
nop
inc
test
loopne
cwtl
or
or
push
add
lods
push
ficoml
es
jo
addr16
mov
mov
sub
lea
iret
bound
or
lret
xchg
ficoml
cli
cs
inc
mov
lock
and
fnsave
pop
ljmp
dec
pop
fisubl
popf
sbb
xchg
sub
cli
push
cld
fcomps
into
mov
pushf
ss
lcall
out
int3
movsb
inc
xor
cmc
dec
aad
test
xchg
dec
sub
sub
and
and
ret
mov
push
or
xchg
fdivrl
mov
enter
pop
mov
scas
imull
mov
cltd
mov
stc
lea
in
iret
ret
in
lcall
jo
stos
xor
and
xor
orb
sub
movsb
push
push
mov
dec
jns
lea
orl
popf
dec
cmc
test
ss
add
pushf
enter
mov
cmp
insl
testl
inc
aas
stos
imulb
xor
push
in
fistps
fdivrl
test
mov
imul
dec
lock
rorl
xchg
jo
addr16
packssdw
inc
data16
loope
call
shrl
or
mov
bswap
mov
pop
ret
sbb
jle
jno
lcall
jge
fwait
test
add
or
xchg
es
jge
rorb
inc
lret
lock
shlb
test
scas
popa
xor
xchg
in
mov
xor
jb
mov
popf
push
nopl
imul
sbb
mov
call
push
xor
es
push
jmp
mov
sub
shl
jns
jmp
xchg
add
in
sbb
mov
mov
aaa
sub
dec
sahf
insb
add
pop
or
pop
icebp
cmp
stos
int
jno
fwait
outsb
aad
subl
mov
pop
arpl
aam
lret
xor
les
lds
mov
sbb
cmpsl
lret
lods
subl
jmp
mov
shrl
in
clc
mov
mov
shll
jp
xor
xor
scas
inc
lods
jp
push
cmp
jno
nop
adc
mov
or
pop
xchg
xor
jne
mov
test
idivl
mov
sub
push
mov
push
data16
dec
cmp
jmp
push
out
push
mov
adc
cmp
inc
call
ficoml
les
jne
test
test
es
or
sub
inc
sbb
push
xchg
pop
mov
mov
iret
xchg
fs
cwtl
cwtl
mov
test
pop
mov
es
cmp
sub
adc
loop
test
insb
into
cmp
es
sahf
or
into
ja
mov
les
rep
mov
mov
push
jecxz
imulb
xchg
movb
push
rclb
adc
mov
mov
push
fstl
ljmp
dec
or
dec
lock
and
add
sub
sbb
mov
mov
in
sub
mov
adc
int3
mov
xor
inc
out
adc
inc
cltd
adc
mov
or
push
mov
pop
push
cmp
sub
xchg
jle
outsl
and
mov
scas
mov
loop
lret
cld
fldenv
pop
in
lret
mov
jb
test
jno
je
dec
jge
clc
stos
loope
cmp
jbe
sub
mov
fmulp
pop
cmp
jge
pop
add
or
popa
jae
lods
mov
mov
sbb
xchg
lcall
lods
fnstcw
popa
push
jae
xchg
push
adc
or
loope
lods
fs
push
jbe
in
pop
aas
xchg
sar
sti
cwtl
or
es
and
push
fcoml
loopne
outsb
inc
push
mov
xchg
cld
into
daa
xchg
loop
xchg
cmp
popa
cwtl
hlt
sub
call
jle
mov
stc
pop
fxch
adc
ficoml
cmp
mov
add
push
sbb
arpl
jmp
and
addr16
inc
mov
es
jns
andl
jo
lcall
xchg
ret
aad
jno
jno
push
mov
call
push
ret
sbb
popl
xor
or
pop
pop
dec
xchg
pop
adc
stos
pushl
adc
xchg
negb
or
cmp
lahf
mov
pop
push
in
filds
inc
sahf
xchg
cld
in
adc
hlt
clc
out
xchg
cli
pop
mov
test
roll
ds
jecxz
rorl
scas
mov
push
stos
call
mov
ss
jmp
insb
repnz
or
aad
shll
adcl
aaa
mov
enter
mov
aam
mov
mov
sub
add
inc
pop
xchg
aas
and
ljmp
out
fst
sbb
mov
gs
fisttps
push
cmp
vcomisd
loop
dec
pop
ljmp
loopne
push
inc
add
mov
or
fidivrs
push
insb
pop
add
sbb
ds
add
adc
imul
fidivrs
push
pop
xor
push
and
inc
pop
pop
sbb
mov
adc
mov
add
and
mov
cmc
das
xlat
dec
popa
jp
int
fstps
insb
xchg
or
negl
push
cld
sar
icebp
fstpt
mov
clc
push
in
mov
stc
xchg
ret
cmp
jl
mov
or
cltd
inc
cmpsb
dec
mov
lock
inc
in
push
jg
dec
dec
and
sub
lret
mov
pop
int
jle
jno
or
nop
fisubrl
ljmp
not
sbb
mov
mov
imul
sub
add
jnp
mov
add
jnp
repnz
leave
aas
imul
or
icebp
sbb
xor
out
mov
push
movsb
popf
pusha
pusha
and
in
popa
pop
into
or
or
nop
xchg
lret
das
jge
adc
mov
mov
int
mov
dec
jae
sbbl
push
inc
int3
add
adc
icebp
lea
sbb
mov
popfw
mov
out
or
or
scas
lock
pop
mov
popl
adcb
dec
inc
and
es
scas
mul
cwtl
aam
in
jae
adc
or
fcmovbe
mov
sti
xchg
sub
mov
xchg
cmp
outsl
mov
ds
leave
cmp
mov
mov
mov
movsl
cmp
stc
sbb
addr16
daa
es
xor
loop
bound
mov
lods
fyl2xp1
sbb
leave
mov
push
negb
dec
mov
ljmp
cltd
sub
loopne
inc
cmpsl
mov
or
or
mov
aad
and
movsb
stos
mov
adc
out
pop
rcll
rol
xchg
mov
sub
sub
inc
and
or
roll
mov
dec
aad
fucomip
xor
adc
or
dec
pushf
sbb
nop
xor
pop
fadds
test
fstpt
sub
out
lods
or
push
and
xor
push
lea
jns
dec
in
push
push
xchg
and
cltd
fwait
and
sbb
sub
push
aam
js
mov
mov
iret
dec
xchg
push
xchg
pop
fists
push
fcoms
push
cwtl
add
enter
pusha
pop
aad
nop
pop
mov
out
cmc
repnz
aam
push
movsb
sbb
popf
mov
loop
fmull
push
or
cmp
add
clc
mov
mov
lcall
mov
call
call
pop
fwait
fwait
mov
or
push
dec
xor
repnz
inc
stos
pop
mov
inc
pop
call
rclb
les
jmp
je
add
int
push
movsb
lock
jge
decl
dec
into
cmp
xor
into
fs
lods
xchg
and
shll
dec
jmp
divl
jle
push
jb
stos
inc
mov
or
rclb
in
bound
pop
xor
test
inc
add
push
mov
sar
cmc
add
fcomps
inc
inc
popa
mov
aad
sbb
clc
repz
cmpb
xchg
je
adc
in
iret
jno
pusha
inc
loopne
icebp
sub
fnstcw
pop
or
jmp
dec
push
inc
adc
jbe
mov
aam
aam
roll
jecxz
icebp
ret
movsb
push
lock
pop
adc
repz
punpckhwd
fwait
hlt
sbb
pop
adc
ds
xor
arpl
push
mov
mov
std
dec
xchg
jno
imul
sbb
cld
adc
lods
sub
mov
sti
stc
cwtl
mov
xchg
add
mov
push
cmp
adc
dec
cmp
cmp
cld
daa
getsec
fldenv
cld
mov
aas
sahf
xorl
jge
fldt
dec
leave
jns
xor
repz
jo
pop
pop
pop
push
sub
sahf
inc
cli
add
lods
popf
lds
ljmp
lret
pop
mov
lds
dec
mull
out
jo
cwtl
sbb
aam
cmp
push
xlat
or
mov
jg
loop
mov
fs
repz
hlt
jb
insb
or
mov
movb
sbb
jo
jae
mov
outsb
adc
nop
out
popf
addr16
fisubrs
insb
dec
add
add
outsb
imul
sbb
mov
rcl
arpl
jae
int3
popf
mov
int
or
add
sub
mov
movsb
mov
mov
pop
ret
mov
mov
lret
xor
inc
stos
pop
mov
popf
loop
xchg
dec
insb
push
mov
addr16
idivl
iret
adc
jmp
rcrb
stc
out
xor
dec
sbb
in
out
stc
fwait
jbe
jno
in
add
lret
test
push
js
cmpl
push
jne
add
xchg
pop
xchg
jbe
push
push
std
adc
sbb
sub
mov
repnz
sub
lahf
outsb
cwtl
pop
out
xchg
sti
lret
pop
in
adc
inc
cmp
xor
cld
xchg
arpl
ds
add
xlat
lods
rorb
push
mov
lods
and
and
or
push
cmp
popf
lds
push
pop
cmp
test
push
adc
cltd
imul
xchg
and
aas
aad
sarl
sbb
inc
loope
rcll
push
mov
push
lret
push
insl
sub
jo
cmc
in
push
xorl
xchg
or
aad
adc
fnstenv
jp
ror
andb
aaa
mov
mov
test
rorl
and
jb
mov
inc
stc
stos
inc
push
cwtl
xchg
imul
sbbl
push
and
inc
jp
pop
popa
lahf
xchg
push
xor
push
stc
lods
or
mov
insb
rol
repnz
xor
les
into
mov
arpl
outsl
inc
adc
add
xchg
pop
mov
add
cmp
mov
insb
push
sub
fists
imul
adc
pushf
adc
mov
push
xchg
mov
int3
add
insb
xchg
data16
jl
push
dec
pop
jmp
lods
add
dec
sbbb
jb
pop
pop
inc
paddb
in
fsubrl
adc
sahf
inc
mov
cmp
inc
adc
dec
adc
aam
push
sbb
xchg
int
push
test
mov
ficomps
std
cmp
pusha
lods
and
sub
es
andb
lret
in
movsb
add
out
dec
out
add
pop
js
cmpb
scas
jmp
xor
cmp
sahf
sarl
jg
cli
xchg
mov
fdiv
leave
xor
and
jae
sub
movsl
loop
test
push
lods
cmpsl
bnd
out
shr
in
mov
imul
xchg
mov
jmp
loop
pushl
das
clc
incb
dec
fwait
add
xor
les
lods
lea
ljmp
jae
ror
xchg
outsb
scas
jbe
sbb
cmp
pop
notb
jecxz
add
call
push
or
sub
incb
dec
out
inc
mov
test
out
cmpsb
ss
push
sub
and
fxch
out
push
clc
mov
mov
stos
mov
cld
pop
subl
push
stos
xchg
jns
cld
sbb
dec
scas
mov
jg
sub
adc
cmp
fcmove
in
setl
aam
cwtl
pop
rolb
aaa
insb
lea
ss
ljmp
and
and
aaa
call
rep
mov
mov
bound
jbe
push
push
test
enter
add
mov
mov
or
inc
push
push
xor
mov
jne
call
jnp
fs
push
pop
sbbb
mov
xchg
sbb
lock
pop
lea
imul
mov
xor
ret
push
loope
icebp
push
mov
xchg
adc
xchg
das
sub
xor
and
inc
rcll
shll
test
inc
pop
xchg
pusha
jp
repz
xchg
sub
mov
out
test
test
into
in
sbb
cmp
pop
daa
cmp
jbe
shrl
jg
mov
into
aaa
inc
jmp
and
iret
jb
add
or
dec
sar
dec
arpl
notb
dec
sbb
je
jle
sbb
sbb
pop
or
insl
cmp
adcl
out
push
mov
mov
inc
mov
movsl
inc
and
inc
leave
scas
out
and
xchg
mov
xchg
cmp
sub
sub
hlt
mov
fs
shll
and
lds
in
loop
push
inc
mov
in
inc
cmp
lds
ret
push
push
out
sub
lock
jae
cmp
or
xchg
push
cwtl
sub
in
enter
andl
fs
movsb
xor
pop
jae
add
mov
ret
push
push
push
xor
pop
or
sub
xchg
aam
fcoms
shlb
ljmp
sti
fwait
mov
cmc
pop
adc
aas
mov
mov
lahf
lock
popa
cld
mov
aad
xchg
stos
je
jne
repnz
jno
dec
repz
dec
in
lock
inc
popf
fcoml
fnstcw
lret
adc
cmc
xchg
sub
inc
push
shll
or
mov
mov
ss
jae
and
mov
out
adc
gs
rol
cmp
sbb
and
lret
mov
mov
sbb
cmp
fcomps
cmc
cmp
xchg
sub
mov
rcr
orl
and
push
mov
jg
aas
inc
movsb
and
cli
cmp
pop
rcll
push
in
pop
jb
stos
xchg
pop
inc
jg
mov
mov
pop
add
inc
cmp
iret
pop
imul
mov
xlat
and
sbb
xchg
mov
sub
test
scas
inc
dec
roll
adc
in
nop
insl
push
inc
xor
and
dec
fwait
sbb
int3
push
sbb
adc
pop
out
and
stos
and
out
scas
and
imul
mov
pushf
adc
data16
jne
sbb
xor
shll
cwtl
xchg
dec
gs
inc
in
inc
lods
cmp
sub
inc
scas
cltd
call
sti
inc
inc
addl
dec
mov
mov
push
inc
xchg
mov
sub
jo
mov
pop
or
call
mov
pusha
andb
loope
cs
daa
subl
mov
sub
and
popa
adc
push
bsf
sbb
daa
add
pop
inc
sub
addb
sub
pop
nop
xlat
xchg
inc
cmp
in
cmp
pusha
dec
popf
gs
imul
cltd
rorb
in
xor
adc
shrl
aas
jb
push
add
or
adc
jecxz
inc
jecxz
into
mov
in
sub
fnsave
inc
les
xor
movl
jne
out
or
add
mov
lcall
cld
jp
push
das
sahf
cld
js
mov
lret
test
cmp
xor
mov
adc
cmp
imul
pushf
mov
jnp
dec
xor
xchg
xor
je,pt
ret
jecxz
test
lods
out
add
popa
or
mov
daa
cmp
lahf
orb
dec
sbb
test
cs
cli
inc
mov
mov
dec
pop
repnz
mov
sbb
fbstp
add
dec
lret
adcl
ss
clc
das
mov
jae
pop
popf
sti
mov
cmpsb
popf
test
mov
and
adc
mov
movsb
cmpsb
in
mov
cmp
dec
bound
inc
push
or
icebp
nop
sub
dec
mov
xor
pop
inc
pop
aam
pusha
jmp
and
pop
vpmovzxwd
stos
lods
sbb
inc
loopne
xchg
dec
in
and
mov
pop
dec
pop
sbbl
push
sub
in
out
add
rcll
push
cli
xchg
sub
add
lcall
mov
scas
addr16
mov
into
xor
clc
jbe
outsl
fs
mov
jae
ds
cmpsb
cmc
push
ss
sbb
pandn
inc
mov
ficompl
lods
stos
sub
pop
xchg
add
rol
sti
adc
aas
inc
orps
cld
push
ret
cmp
js
dec
lcall
inc
mov
popf
mov
scas
int
xor
cmp
inc
rorb
fucomi
sbb
and
mov
dec
repz
addr16
push
je
add
pop
push
xorl
js
pop
push
outsb
subl
in
iret
popa
xchg
jne
sub
and
jmp
shll
and
lret
adc
jecxz
pop
sahf
test
iret
lods
movsb
repz
rcr
dec
imul
popf
push
pop
pop
push
mov
push
mov
or
sub
xor
popl
mov
loop
mov
mov
dec
rorl
pop
cmpsl
sbb
cmc
push
mov
in
cld
or
cmp
mov
mov
jge
aaa
dec
xchg
out
dec
mov
sbb
dec
out
ficoml
push
mov
mov
popa
loop
mov
outsl
jo
shrb
dec
in
inc
addr16
aaa
lods
cltd
leave
mov
jno
aas
lahf
adc
push
ud0
xor
fs
xchg
bswap
jnp
andb
dec
jb
andl
dec
imul
pop
shl
scas
inc
lock
pop
mov
jne
cmp
test
pop
adc
pop
xorl
cmp
sbbb
xor
aaa
int
xorb
mov
test
push
mov
jae
mov
xchg
mov
ret
inc
fldcw
jb
push
lret
aam
insl
sbb
mov
push
pusha
sub
ss
cmp
in
mov
cmp
adc
pop
pop
nop
dec
pop
data16
je
inc
pop
cli
ret
inc
orl
jo
sub
xchg
nop
push
xchg
cmc
lcall
mov
inc
add
into
pop
pop
dec
sub
inc
lods
push
arpl
push
cmp
test
stos
ret
movsl
add
xor
mov
sub
xchg
jl
movsl
leave
push
push
loopne
mov
cmp
jg
pushf
push
sbb
call
push
mov
cmc
sub
inc
ret
xorl
sub
adc
mov
shrl
sbb
js
xchg
add
add
test
sub
test
call
adc
push
scas
les
shl
paddq
or
addr16
inc
adc
stos
lea
outsl
mov
pop
jns
mov
push
inc
pop
mov
mov
jae
xchg
xchg
je
jb
leave
mov
out
jp
in
mov
xchg
fstps
nop
ficompl
mov
cltd
fnsave
stc
pushf
and
adc
repnz
adc
adc
cmp
cmc
repz
inc
fdivl
fcom
dec
lret
xchg
push
fadds
xorb
xor
mov
jp
mov
sub
push
loop
dec
cmp
sti
dec
pop
adc
cmpsb
inc
in
mov
je
and
mov
js
push
rorb
xchg
into
cld
push
stc
adc
jg
push
jmp
dec
mov
push
sub
push
jne
imul
fisttps
sbb
mov
int3
xchg
sub
mov
xchg
cmp
repz
mov
call
mov
sub
ror
cmpsb
jns
leave
add
jle
mov
ret
cmpl
xchg
ss
flds
jae
xchg
and
leave
mov
data16
push
sbbl
loope
fbstp
dec
ljmp
ror
mov
and
mov
cmp
push
mov
fidivl
mov
mov
or
mov
add
out
add
scas
lock
aad
jmp
in
xchg
into
jns
pop
sub
pop
xchg
dec
out
jne
cmp
or
andl
inc
jnp
jae
negb
mov
mov
sub
sbb
add
fsubrs
push
push
lods
testb
ljmp
push
ds
sub
or
notl
incl
fists
out
test
mull
lods
xchg
cmpl
pop
dec
xor
shlb
push
push
ficoms
push
mov
mov
lods
movsl
scas
lret
lods
or
inc
rcrl
pop
adc
push
add
mov
pusha
insb
add
enter
and
arpl
sub
sub
sub
jnp
cs
lahf
jecxz
xchg
jbe
xchg
outsb
xchg
dec
in
in
loop
xchg
repz
sbb
fs
mov
into
lret
push
shl
cmp
hlt
mov
mov
in
pop
inc
pop
dec
xor
push
daa
xor
mov
push
sub
in
jns
adc
push
pop
sbb
cmc
or
nop
pop
data16
jnp
jo
lgs
cmp
pop
push
popa
xor
push
push
xor
mov
push
inc
cmpsl
out
addl
stos
sbb
xlat
and
shll
mov
push
inc
or
mov
out
xlat
sub
stc
adc
pop
ret
mov
outsb
je
js
popf
xor
mov
xor
xor
jle
push
out
imul
mov
sbb
dec
cld
mov
gs
mov
outsl
sub
cs
pop
je
faddl
mov
mov
and
mov
mov
ss
mov
xchg
pop
icebp
add
gs
dec
ljmp
xchg
stc
das
popf
adc
mov
dec
adc
insl
add
rcrb
mov
js
movsb
lahf
mov
insl
cli
xchg
testb
add
sub
mov
jne
mov
stos
enter
or
adc
outsl
jb
shlb
hlt
mov
mov
lcall
fisubrs
mov
mov
cwtl
das
pusha
sub
cmc
enter
in
mov
push
aam
ljmp
sbb
ret
add
cld
xchg
xor
mov
push
push
jmp
mov
jnp
sbb
push
jmp
imul
jae
mov
aas
adc
pop
pop
push
in
sub
cltd
jle
dec
mov
push
push
dec
jecxz
and
jne
shll
xor
adc
bswap
jg
mov
sbb
in
inc
imul
andb
aaa
xchg
lea
xchg
or
sub
xor
aam
adc
aam
insb
add
loopne
or
xor
pop
aam
inc
mov
inc
mov
sti
sub
add
aam
sub
xchg
add
cmp
xor
pop
out
mov
scas
aas
mov
pop
jmp
xchg
mov
ss
insb
notl
adc
fs
imul
arpl
aaa
pop
movsb
lock
shll
cmp
xlat
xor
sub
es
mov
jo
pop
dec
jmp
repz
mov
push
cmp
and
xchg
dec
fiadds
repz
ret
adc
mov
aas
movsl
fucomp
movntq
xchg
fwait
lret
dec
cmpb
xchg
mov
dec
jg
fwait
testb
sub
int3
rcr
gs
lea
mov
test
insl
outsb
addr16
adc
fwait
cmp
shll
xchg
aaa
arpl
jno
fisubrs
sub
popf
ret
into
inc
cmpsb
cmp
push
xchg
lahf
pusha
sub
movb
jnp
in
push
in
sbb
dec
int3
fnsave
mov
int
fidivrs
repnz
jl
mov
jmp
lock
dec
fstps
loope
mov
xchg
out
or
popf
aas
push
popf
push
adc
shll
incb
cmp
xchg
or
stc
scas
mov
fisubrl
mov
xchg
adc
mov
inc
and
cs
in
adc
mov
ret
sub
cwtl
jnp
pushf
mov
mov
adc
rol
mov
shlb
ja
push
stc
cmp
xchg
jo
adc
cmp
fldcw
and
mov
insl
mov
mov
cld
or
mov
aaa
test
mov
xchg
ret
bound
push
adc
test
adc
out
cmp
jg
mov
cli
rclb
xor
sbb
push
jae
or
mov
sbb
push
out
inc
ljmp
push
mov
mov
adc
adc
xlat
js
mov
dec
push
dec
mov
pop
inc
out
mov
aam
movsl
fs
imul
psllq
test
pop
cmp
jp
addb
jne
repz
mov
out
push
shrl
fs
add
aas
pop
leave
jb
push
cmp
sbb
mov
sbb
imull
clc
pop
pop
adc
ror
push
ficoms
mov
mov
push
loopne
mov
stos
dec
ljmp
int
sub
xor
mov
out
loope
std
cmp
push
icebp
mov
mov
dec
push
fisttpll
or
and
jo
cwtl
out
lcall
mov
cld
mov
rclb
loop
cmpsb
adc
and
mov
sahf
inc
ds
sbb
and
sarl
push
mov
cmp
pop
aad
xor
int
inc
push
test
mov
mov
je
lods
bound
les
out
jbe
pop
sahf
xor
add
mov
inc
and
into
sbb
mov
mov
incl
mov
cwtl
sub
xchg
mov
and
ret
add
push
sub
out
leave
mov
out
shrl
and
dec
popf
das
sub
roll
cmp
jno,pt
hlt
or
lock
mov
sub
call
lcall
sub
xchg
sub
add
cli
and
sbb
cmp
sbb
or
mov
nop
loop
out
jns
jns
push
dec
loope
xor
jns
hlt
std
and
push
fnstsw
loop
mov
push
dec
fsubrs
out
cmp
mov
inc
fisttpl
rolb
mov
dec
cld
ds
xchg
aam
xor
cmp
stos
xor
sub
fcoml
sbbl
sbb
jne
stc
xchg
popa
push
insb
jg
das
pop
popf
ret
rclb
cmc
js
lock
push
mov
adc
movsl
call
add
sbb
test
lods
inc
clc
sti
cmpb
fisttpll
sub
xchg
not
mov
in
lods
insb
push
add
push
aaa
cs
scas
pop
lcall
ret
movb
icebp
sub
hlt
mov
dec
iret
push
arpl
nop
cltd
inc
push
stos
xor
aas
or
mov
or
rorb
pop
cld
sbb
fisttpll
xchg
sbb
jb
jb
adc
test
lahf
xor
jmp
std
fnstsw
scas
fldenv
cmp
sub
pop
or
lret
imul
decl
or
push
mov
xor
mov
test
lds
mov
jne
aas
jnp
adc
repnz
add
sub
imul
insl
mov
push
inc
fdivs
mov
mov
mull
mov
fwait
push
and
adc
popf
jl
cmpsl
jo
out
jne
cmpsb
outsb
out
scas
addb
outsl
inc
jge
xchg
pop
js
dec
pop
and
push
push
insb
jns
ja
sbb
insl
mov
inc
mov
mov
movsl
adc
pop
sub
sbbl
fs
mov
fadds
mov
mov
jmp
mull
loop
data16
popa
dec
fistps
gs
mov
lret
cmp
fisubrl
xor
jo
movsl
add
cmp
stc
adc
sbbb
fcoms
cmp
jo
sub
sbb
insb
lock
fs
pop
divl
jbe
xchg
psubsw
out
push
shlb
mov
mov
cmp
inc
lea
push
jbe
lea
mov
or
cltd
inc
idiv
jmp
mov
or
cmp
popa
xor
mov
jne
cli
shll
dec
xlat
repnz
mov
sbb
movsl
aas
dec
xor
push
dec
in
dec
fbstp
ljmp
jae
sahf
push
inc
xor
or
cmp
mov
xchg
sbb
fsts
mov
mov
add
stc
dec
rol
dec
mov
hlt
sub
loop
stc
push
push
mov
loopne
imul
jno
jmp
popa
mov
enter
ret
mov
and
mov
es
push
push
stos
cmp
adc
pop
sub
mov
lea
int3
repnz
and
jmp
mov
add
jae
add
in
inc
cli
jb
push
adc
cld
inc
roll
jmp
inc
sub
ss
cli
xlat
mov
out
int3
dec
fdivs
lods
cmc
mov
cmp
adc
scas
popa
inc
je
dec
push
movsb
out
xchg
add
fildl
adc
clc
or
jl
sub
jmp
in
jbe
pop
or
push
jl
in
roll
xor
cs
cmpsb
push
xchg
stc
je
mov
cltd
adc
rolb
dec
stos
mov
mov
cmp
push
lods
cs
mov
jecxz
int3
xor
rcr
and
scas
movsb
popf
mov
pop
fsubl
mov
cs
push
andb
mov
fs
dec
push
dec
call
jne
sbb
fdivs
std
mov
or
mov
in
mov
mov
adc
xor
rcr
push
ja
or
jg
lea
push
test
add
or
movsl
xchg
out
mov
jle
push
sbb
xor
mov
icebp
loopne
rolb
xor
lods
out
flds
movsl
lcall
mov
rclb
pop
sbb
daa
stos
cmc
subb
popa
pop
sti
cmp
jle
testl
inc
jo
mov
mov
xor
xlat
push
jge
ljmp
repnz
mov
xor
push
mov
or
adc
dec
iret
aaa
adc
adc
xor
mov
cmp
inc
daa
test
jns
lcall
push
std
inc
add
mov
insb
cwtl
jp
scas
dec
pause
pop
stos
xrelease
inc
clc
add
mov
mov
negb
mov
xchg
psrad
dec
mov
mov
loop
ja
outsb
sub
xchg
add
sub
pop
dec
cmp
jg
test
push
pop
dec
movl
pop
add
ja,pn
inc
or
pusha
push
ficompl
rolb
lds
add
mov
xor
push
mov
loopne
mov
into
mov
fwait
jbe
test
and
xchg
xchg
lcall
stos
dec
ja
fldt
push
add
stc
sub
mov
mov
mov
pop
dec
inc
cmp
inc
cmc
cmp
or
pop
insb
out
lods
xchg
fcomps
in
jne
jne
pop
inc
mov
es
dec
fildll
rclb
adc
rorb
sarl
inc
clc
inc
arpl
leave
push
stos
sub
cmp
lea
lcall
sbb
xchg
in
loope
dec
mov
mov
pop
jae
adc
fiadds
sub
inc
xchg
int3
cmp
enter
xchg
cmpsb
fcompl
mov
enter
pop
mov
int3
sti
out
adc
aad
cltd
jb
cmp
vmptrld
mov
std
lret
insb
inc
pop
into
lods
in
jae
enter
dec
sub
subb
xchg
mov
pop
mov
mov
and
mov
push
js
cmpsb
sub
cld
adc
aad
cmpsl
push
into
dec
inc
xchg
push
stos
add
inc
mov
cmp
orl
dec
sbb
sub
rcr
sbb
mov
dec
mov
in
cs
lea
cmpl
push
cmp
pushf
fmul
lahf
gs
or
pop
adc
mov
xor
cs
out
cli
fiadds
or
or
sbb
mov
ss
test
lods
inc
repnz
into
push
mov
sub
lock
ljmp
mov
push
sub
xor
test
xchg
inc
sub
lret
jp
cmpsl
inc
add
aad
shll
lock
push
test
cmp
sbb
stos
sub
push
mov
popa
movsl
movsl
mov
jle
jne
sbb
ss
std
fistps
sbb
mov
test
pop
push
jns
add
sub
cli
loope
movsb
inc
int
lods
mov
and
cmp
iret
sbbl
pslld
mov
add
adc
inc
fwait
sti
dec
je
xchg
cli
pop
ss
mov
insl
adc
sub
adc
idivb
std
sahf
adc
test
or
mov
sti
sbb
movsb
mov
lcall
hlt
les
xor
jbe
cmc
dec
sub
adc
adc
scas
arpl
sti
sbb
clc
or
or
inc
mov
mov
das
scas
js
mov
inc
adc
adc
movsb
pushf
cld
cmovg
jg
cltd
in
sbb
cmp
test
lock
out
inc
cmp
jle
mov
lahf
pop
repnz
xchg
xor
icebp
mov
cli
lret
push
dec
jae
jmp
fcmovb
xchg
aam
mov
das
fimuls
lret
rcrl
mov
mov
pop
add
mov
rcll
testl
pop
lock
add
add
add
out
shll
push
popf
ja
mov
sbb
mov
test
mov
fldt
stos
rcrl
sub
add
addr16
dec
imul
clc
cmpb
ret
jae
mov
stos
jne
loop
dec
int
outsb
test
jb
jnp
inc
jp,pt
sbbl
push
pop
pop
xchg
jle
test
mov
aam
jo
cmp
add
dec
xor
leave
rcl
sbb
cmp
dec
sbb
mov
icebp
inc
xor
inc
mov
sbb
aad
and
inc
xchg
call
shr
dec
xlat
lea
cmpsl
in
push
mov
add
repnz
sbb
sbb
lock
aam
mov
pop
jle
arpl
fnstcw
repz
xchg
inc
lock
cwtl
outsb
xchg
icebp
sub
int
into
adc
ret
arpl
nop
das
xorb
mov
dec
popa
insl
imulb
andl
push
xor
add
ss
aas
and
cmpsl
xchg
test
mov
pop
adc
or
dec
jle
rep
negb
lahf
xor
and
adc
pop
mov
subl
dec
out
rorl
popw
aaa
cli
lods
arpl
lods
pushf
outsb
jo
add
mov
cltd
rcrb
xor
notb
sub
nop
test
push
insb
push
std
mov
loop
icebp
pop
and
push
lgs
and
js
js
cld
pop
popa
loop
mov
outsl
test
je
out
int3
pop
sub
mov
inc
add
iret
mov
and
sbb
mov
daa
cltd
pop
popa
lahf
mov
sbb
cmp
out
or
popa
lcall
and
fistps
and
mov
push
call
and
loop
pop
orb
mov
outsb
cmp
cmpb
decl
xor
xchg
out
cld
xchg
imul
pop
stc
xchg
cltd
bnd
mov
out
mov
es
lea
scas
insb
insl
jmp
mov
jno
push
arpl
test
add
ljmp
xchg
ja
pop
sbb
rep
xchg
into
stos
fldenv
insl
push
mov
aaa
lret
subb
loopne
xchg
clc
mov
test
jmp
pop
cmc
insb
cli
ficoml
sub
in
movsl
or
cmp
xchg
add
add
xor
jb
and
push
dec
xchg
push
ret
incl
sahf
push
scas
xchg
ja
pop
jns
mov
ja
jae
dec
mov
fidivrl
outsb
and
push
jp
pop
add
jge
dec
pop
sahf
xor
push
inc
jbe
fisubl
jle
xchg
cli
pop
cmp
xchg
repz
mov
sbb
push
dec
mov
popf
sahf
push
int
mul
lcall
daa
and
pop
shlb
scas
lea
adc
out
sbb
mov
repnz
pop
sub
stc
out
add
aad
sti
mov
push
xchg
cmp
js
shll
scas
std
dec
mov
and
cmp
movsl
mov
xchg
push
sbb
int3
mov
xor
out
sbb
mov
mov
jmp
push
push
insl
add
mov
mov
jo
or
pop
scas
stos
mov
jnp
cld
mov
imul
nop
mov
adc
pop
push
outsb
out
fidivrl
enter
fcmovnbe
push
das
inc
pop
xchg
cmp
sub
cmp
mov
mov
xor
sub
sub
adc
in
adc
cmp
ljmp
dec
xor
push
iret
adcb
imul
jb
lahf
xor
imul
jo
add
and
xchg
pop
stos
inc
sbb
lea
lcall
insl
ret
jecxz
scas
aas
sub
imul
jae
pop
lret
dec
inc
aaa
xor
xlat
pop
aam
int
xor
insl
push
loop
rcll
fcmovnb
jmp
ljmp
lods
inc
fwait
push
decl
inc
rclb
adc
xor
mov
mov
lds
or
lods
out
xorb
in
into
push
mov
lock
xchg
inc
push
in
arpl
in
or
inc
mov
cmpsl
lods
sysenter
aas
add
sub
mov
out
mov
jg
negb
pop
rclb
iret
filds
adc
pop
out
aam
or
lret
lds
pop
jp
push
aad
mov
cmp
ffree
std
jg
adc
pop
mov
cli
repz
ret
sarb
pop
jo
and
cld
mov
out
rolb
data16
mov
imul
dec
testl
pop
test
sti
loop
pop
in
fldl
fmul
jnp
xchg
popa
mov
cli
jecxz
in
xchg
and
mov
cmp
clc
mov
pop
les
pop
dec
pusha
pop
pusha
subl
cmc
js
or
jae
and
scas
and
mov
mov
lds
inc
pop
daa
loope
dec
push
cmp
loopne
or
test
mov
sbb
jg
mov
clc
xchg
xlat
fistl
gs
add
aam
out
adc
sbb
jmp
mov
leave
into
pop
sub
outsl
pop
pop
ret
push
ret
jbe
inc
dec
out
cmpb
xlat
test
xchg
mov
push
push
test
insl
rcrb
sbb
or
xor
xchg
mov
sbb
sub
lods
das
test
sub
arpl
cmc
mov
pop
movsl
inc
in
mov
add
js
sub
push
jmp
stos
cmp
cs
jnp
int3
daa
xchg
popf
data16
fists
leave
or
add
pushf
nop
shl
xlat
mov
mov
lods
shl
repz
xor
jb
pop
insl
mov
outsb
jge
out
out
fwait
dec
mov
subb
push
push
xor
push
js
sti
lcall
ds
ret
in
cld
add
cmp
push
negb
lret
rorl
jnp
in
into
lea
jo
jb
dec
out
mov
cmp
sbb
repnz
sbb
pop
sbb
out
lock
fstpl
ja
nop
pop
lahf
xlat
fadds
add
inc
fwait
sub
pop
push
enter
cwtl
mov
xchg
push
das
lahf
inc
call
leave
push
lahf
jbe
pop
pop
imulb
bound
cmpb
daa
sbb
jge
sub
pop
loope
adc
sub
hlt
adc
aaa
add
clc
lods
inc
fcoml
pop
push
lcall
push
jns
jp
add
push
push
pusha
std
jns
loop
push
push
rorl
sub
pop
insl
push
jbe,pn
jns
js
mov
mov
and
and
sbb
mov
outsb
sub
xchg
mov
rep
pop
lcall
rcrb
mov
xor
notl
dec
dec
and
sub
repnz
movb
jmp
paddusb
std
mov
ss
mov
jae
cmpl
xor
ret
sbb
pop
je
mov
mov
clc
fxtract
movsb
sub
push
ja
int3
je
cmp
cmpsl
cmp
in
mov
cmp
shll
aad
mov
xor
ljmp
xchg
inc
inc
push
add
imul
push
rcll
xor
xlat
adc
xchg
jge
ret
rcrl
inc
shrb
xchg
jne
fstpl
int
je
push
sbb
mov
ss
or
mov
push
cmp
xlat
cld
fnsave
and
cmpsl
and
mov
and
mov
cltd
popf
add
je
call
jge
rclb
insb
loopne
jno
xor
add
cwtl
adc
sbb
roll
pop
shll
sub
mov
sahf
aaa
jnp
sub
sbb
aaa
nop
in
push
sbb
ret
out
or
jo
push
xchg
ret
call
cmpsb
mov
test
jmp
ss
cmpsl
rcr
mov
sbb
fdivr
adc
push
inc
sub
sub
mov
int3
push
inc
sub
push
jle
cmp
inc
sarl
test
xchg
jne
inc
jae
jl
jle
mov
out
mov
jmp
sahf
je
lock
mov
jecxz
inc
in
push
daa
in
es
add
sub
dec
repz
lods
sbb
loop
inc
inc
pusha
fbld
push
jne
jno
fidivl
xor
pop
jecxz
sub
repz
fimull
mov
je
fstpl
xchg
push
notb
sbb
rorl
test
xchg
stos
jae
dec
push
orl
dec
mov
in
or
jg
cli
mov
mov
stos
mov
xchg
jl
dec
dec
cmp
push
out
ss
out
push
mov
insb
add
adc
shr
push
insb
xchg
dec
rcll
adc
mov
add
aas
subb
pop
scas
mov
repnz
imul
fs
and
js
mov
leave
inc
fabs
or
lods
iret
gs
jmp
subl
dec
js
xchg
aad
rcll
cld
jne
je
out
sbb
in
lret
lret
add
fimull
bound
pop
sub
add
jecxz
and
leave
mov
xchg
and
push
adc
push
push
clc
mov
test
stc
pushf
int3
jecxz
test
cmpsl
loope
or
or
sub
cmp
dec
icebp
mov
mov
outsb
dec
sub
sub
cmp
aaa
mov
loope
pop
mov
pop
push
out
push
lods
xchg
testb
shll
adc
inc
or
stos
test
ret
inc
mov
test
jnp
outsb
push
ds
mov
dec
aas
loope
test
lret
add
int
add
adc
jmp
push
std
push
ljmp
jb
xchg
fmul
dec
inc
cld
idivb
pop
daa
xor
enter
cmp
outsb
into
inc
popa
push
sub
jo
add
das
xor
das
dec
jecxz
pop
ret
add
arpl
mov
scas
fdivrs
and
xor
cld
icebp
push
hlt
push
pop
xchg
daa
fiadds
call
out
push
sbb
in
repnz
pop
cmp
test
scas
sub
jo
xchg
ds
pop
fistl
or
push
fwait
rcl
bound
mov
cmp
add
xor
mov
xchg
xor
or
repnz
mov
push
adc
pop
jbe
fwait
in
imul
pop
loop
pop
xchg
mov
aad
jae
add
push
pushf
dec
mov
push
lret
into
sub
adc
xor
pop
rcrb
pop
insb
push
fs
dec
jb
jbe
mov
cmp
push
jmp
adc
and
stc
or
sbb
dec
mov
dec
add
lahf
add
jbe
xlat
inc
lret
dec
ficoms
jecxz
test
inc
pop
aaa
test
xor
mov
jo
popf
fildll
xor
pop
jge
jl
jo
push
mov
aam
push
mov
in
loop
scas
jno
ss
xchg
subl
dec
in
cmp
adc
sub
fldenv
arpl
cli
out
xor
push
je
dec
push
cwtl
inc
add
jle
lods
sub
std
mov
fadds
mov
and
imul
dec
cmp
jbe
sbb
xchg
mov
out
lcall
ljmp
pop
mov
fdivrl
das
les
sbb
mov
cli
pushf
push
bound
adc
aad
push
mov
mov
sti
pusha
mov
inc
cmp
dec
adcb
sti
jmp
mov
adc
enter
or
jne
xlat
ret
cmp
leave
aad
xchg
sbb
pop
arpl
bound
jp
cmp
or
fsubs
push
test
dec
outsl
mov
push
fld1
cli
jle
mov
rcl
stc
dec
push
test
adc
xchg
ds
pop
ret
mov
pop
mov
jae
mov
sub
jno
sbb
or
lea
pop
cld
or
popa
out
push
fwait
mov
icebp
popf
pushf
lret
push
mov
mov
cmp
xor
fisubs
mov
pop
mov
mov
jg
scas
dec
andb
addb
xchg
mov
rcr
out
mov
ljmp
fldl
repnz
repz
repz
loop
icebp
repnz
repz
mov
jae
hlt
inc
and
pop
fiaddl
mov
mov
out
dec
push
rol
inc
xchg
dec
push
adc
mov
add
xor
pop
inc
jle
xchg
sub
jns
lret
imul
push
test
fimull
movsb
dec
mov
mov
adcl
call
pop
arpl
fs
xchg
addb
mov
xorb
outsb
in
dec
fdivr
mov
xor
iret
lock
stc
jae
jecxz
int3
or
mov
push
scas
mov
jae
out
xor
xchg
jnp
jle
push
inc
dec
lea
aas
js
aas
push
dec
push
sbb
div
push
lods
sub
push
stos
mov
lret
insl
push
xorl
je
push
cmp
push
jo
out
rcll
pusha
dec
add
inc
jae
mov
mov
and
xlat
push
push
cmp
inc
jmp
stos
mov
mov
mov
mov
bound
jecxz
stc
scas
sbb
xor
mov
mov
push
data16
cmp
adc
hlt
push
cmp
cmc
lock
movsl
jo
lods
mov
rorl
xchg
ljmp
pushf
stos
pop
js
dec
out
arpl
pushf
dec
out
scas
rol
or
int
outsl
mov
inc
push
and
pop
pop
fbld
punpckhbw
call
push
aaa
ret
loopne
and
and
loop
pop
cmp
nop
clc
aam
jne
push
push
xlat
mov
rcl
sub
lret
fisttps
mov
js
loopne
add
mov
loopne
add
dec
lods
mov
mov
or
pop
nop
stos
sbb
shrl
pop
xchg
pop
fdivrs
sub
push
mov
dec
add
sub
imul
push
and
sub
adc
mov
mov
mov
fs
loopne
jecxz
jg
adc
ss
push
xlat
mov
in
dec
shl
cltd
cmpsb
cmp
cld
aas
dec
sub
imul
xchg
cmp
hlt
push
icebp
cmp
push
or
inc
addr16
lods
repnz
cltd
sub
lods
sbb
jg
and
and
jae
xchg
inc
push
add
es
cwtl
adc
mov
hlt
mov
cmpl
push
xchg
out
jb
xchg
rcrl
pop
ljmp
pop
repnz
jg
sbb
mov
fisttpl
sarl
cld
fstpl
rcrl
mov
push
sbb
jne,pt
nop
mov
cmovb
push
rolb
add
dec
pop
addr16
jle
aas
mov
pop
sub
adc
shl
shr
cmp
xor
das
scas
pop
xchg
cmp
cmp
in
out
cwtl
add
aaa
push
xchg
jns
dec
subb
hlt
add
fwait
jl
sahf
notb
das
dec
ficomps
inc
push
insb
ret
gs
add
outsl
lods
cmc
movsb
adc
roll
out
add
pop
shr
stos
sti
out
and
fsubrs
js
cli
call
inc
sub
shrb
movsb
iret
mov
push
sub
enter
scas
jl
shl
jns
lcall
inc
sub
sub
dec
and
enter
inc
scas
repz
mov
addr16
scas
cld
mov
xchg
mov
push
sahf
out
hlt
pop
pop
inc
fisttps
clc
cmpsb
divb
vmovntdqa
sub
jge
shll
and
cmp
fst
not
mov
pop
jmp
and
sub
cwtl
es
push
inc
ss
mov
test
fisubs
lret
fisubrl
pop
jge
ret
test
jg
add
mov
adc
jb
push
mov
lods
mov
sub
jnp
push
imul
arpl
nop
imul
sub
and
pop
adc
inc
pop
cs
xor
repz
call
rcr
lahf
test
cmp
adc
lods
xchg
mov
add
lret
mov
out
jp
in
dec
inc
sti
fadds
fwait
push
mov
stos
add
cs
js
push
xchg
lret
add
aas
add
jge
popf
sub
sti
xchg
xchg
loopne
popf
inc
leave
in
insl
cmpl
mov
xor
jne
add
push
mov
fs
stc
xchg
daa
dec
pop
xchg
ja
mov
out
movsl
scas
fcmovnu
sbb
jnp
xor
push
mov
push
add
fistl
scas
jbe
jns
int3
adc
icebp
jp
jecxz
mov
push
inc
adc
pop
test
push
or
pop
dec
mov
ret
mov
jae
je
bsr
stos
std
adc
cs
inc
repnz
jbe
dec
mov
xor
dec
sbb
imul
loopne
add
ficompl
dec
lret
xlat
mov
outsb
cmp
add
dec
insl
and
push
push
lcall
adc
fimull
dec
xor
stos
aam
into
dec
jo
gs
orl
jb
fisubrs
cmc
mov
cli
mov
mov
dec
mov
push
sbbl
popf
std
rorl
cmp
imul
fsub
loop
and
out
ss
fcmovnb
subl
shld
into
data16
inc
lods
addr16
add
inc
jle
sbb
or
arpl
add
push
push
xchg
repz
je
cld
xlat
pop
sahf
push
lea
mov
out
ds
into
sahf
repnz
imulb
cltd
orb
mov
nop
adc
fs
adc
or
fidivrl
in
sahf
xchg
inc
dec
mov
stc
or
aaa
xchg
pop
mov
mov
and
loop
sub
cmpsb
in
mov
movsl
xchg
addb
mov
adc
lock
jns
pop
iret
and
daa
pop
pop
push
int
inc
std
inc
loop
sub
outsb
and
add
daa
scas
je
es
lea
pop
xor
enter
dec
mov
mov
add
dec
cwtl
cmp
je
sbb
inc
clc
push
data16
shlb
icebp
inc
cmp
jl
mov
jno
jecxz
dec
ret
mov
into
jle
mov
ret
pop
jae
mov
pop
jae
mov
pop
dec
mov
sub
sbb
push
mov
jge
adc
ljmp
and
inc
les
shlb
inc
shl
and
xor
outsl
mov
add
xor
pop
fstl
mov
jne
lret
mov
jnp
jns
cmp
pop
push
fadds
std
mov
inc
stos
or
leave
push
add
clc
add
xlat
jge
push
fistpl
gs
lret
lea
xchg
add
or
decb
sub
and
push
inc
cmpsb
int
inc
out
and
cmp
cli
mov
fisubrs
sub
cltd
cmpsb
mov
leave
sub
pop
div
cld
popa
jecxz
inc
sarl
adc
ds
push
loopne
pop
cltd
mov
mov
js
lret
mov
test
lahf
jl
mov
adc
sbb
pusha
adc
dec
mov
stc
test
sub
into
outsl
pop
stos
in
iret
int3
and
lock
movb
xor
pushf
cli
scas
int
adcl
inc
out
stos
fmull
inc
lds
shl
xchg
addr16
mov
out
xchg
dec
push
jbe
inc
into
jmp
lods
sbb
cld
shll
push
fs
std
and
fstl
dec
leave
mov
mov
les
shlb
sti
mov
daa
add
jo
dec
imul
test
cmp
jno
scas
push
cli
cmp
jp
inc
cmp
mov
scas
push
imul
adc
dec
lods
scas
mov
xor
or
push
sub
scas
dec
and
push
scas
xchg
cmpsl
cltd
mov
aam
dec
std
or
das
movsl
loop
sub
dec
lds
lahf
or
outsl
call
inc
and
mov
jl
insb
shl
jg
and
sbb
push
fs
aad
data16
cwtl
ss
pop
jbe
push
icebp
inc
test
fdiv
dec
outsl
adc
ret
push
ficoml
inc
mov
and
loope
and
cmp
subl
sbb
adc
ja
mov
in
ret
cmp
and
jae
xchg
insb
mov
mov
push
iret
mov
repz
cmp
or
imulb
lea
fiadds
repnz
sub
push
mov
dec
test
sbb
inc
int3
and
popf
repz
push
stc
pop
push
cwtl
in
sbb
sub
mov
lahf
loop
out
arpl
inc
cmpl
xor
aam
mov
jae
ljmp
mov
movsl
and
adc
pushf
jl
jecxz
mov
pop
je
hlt
idivb
out
in
shrl
and
sbb
push
leave
iret
repz
js
mov
mov
shrl
adc
cmc
ret
lods
jae
in
lret
mov
mov
aad
pop
fwait
sub
mov
or
mov
xchg
adc
lods
pop
lahf
and
icebp
xor
outsl
xor
out
shrl
out
lcall
cmp
xor
add
shrl
pop
mov
sub
ss
iret
bnd
je
iret
xlat
outsb
add
and
jae
repnz
leave
xchg
push
call
or
das
inc
lods
shlb
std
mov
aam
mov
add
cmp
dec
add
outsl
lahf
cmp
mov
dec
push
ret
or
pop
push
fwait
ret
jg
pop
loop
cmpsb
je
sahf
fidivl
insb
lds
int
jecxz
sub
les
popf
mov
in
mov
jp
dec
mul
xor
mov
loop
push
mov
pop
jnp
subl
test
pop
cs
inc
mov
lods
dec
ss
pop
pop
xor
test
mov
pop
ret
ret
mov
rorl
add
mov
or
jp
and
inc
mov
lahf
mov
mov
adc
sbbb
arpl
pusha
movsb
arpl
enter
jge
mov
xchg
inc
mov
fldenv
pop
mov
add
int
mov
gs
mov
xchg
aas
xor
popf
rorb
lods
imul
push
mov
and
pop
fmuls
mov
inc
inc
jecxz
lea
xchg
xor
repnz
inc
jnp
fcmovnb
xor
push
int3
push
pop
frstor
mov
pop
push
xchg
xchg
xlat
push
inc
or
movsb
out
movsl
loopne
in
dec
ffree
es
jle
jo
jmp
adc
cwtl
lea
sbb
cmp
mov
pusha
movsb
mov
lret
mov
xchg
inc
fisubl
arpl
xlat
dec
in
xchg
jmp
xor
repz
shlb
ds
lea
in
data16
int3
pop
aas
addr16
sti
pop
push
fmuls
inc
sub
fwait
sub
jmp
push
pop
inc
daa
ret
adc
idiv
jbe
fsubrl
xchg
sub
mov
mov
in
frstor
mov
mov
mov
cs
lret
and
mov
mov
cs
add
pop
mov
mov
movsl
add
add
sub
repz
aam
fistpl
cmp
xor
lcall
pop
mov
and
repz
or
add
push
sub
and
xor
sarl
jg
pop
pop
pushl
jp
data16
mov
and
mov
cmp
xor
leave
gs
mov
aaa
test
pop
mov
add
inc
das
int3
lcall
mov
outsl
test
fbld
decl
repz
out
mov
xlat
pop
std
dec
cli
imul
or
sahf
subb
jne
ret
adc
xor
test
mov
std
and
xor
pop
push
pop
dec
sahf
scas
leave
adc
pop
call
test
xchg
movl
inc
sub
gs
xor
mov
movb
mov
in
pop
dec
mov
in
daa
addr16
add
dec
pop
ret
inc
push
xor
sub
pusha
in
rcrb
sbb
add
cmp
adc
add
cmp
sbb
mov
or
pop
xor
cmpsl
sbb
cmc
push
das
jo
ss
mov
fildll
jo
add
insl
cltd
xchg
mov
xor
push
jp
xor
dec
jbe
stc
ja
insl
mov
adc
call
xchg
movsl
enter
dec
mov
cmp
iret
mov
cmp
out
arpl
insb
ficoml
pop
cmp
xor
iret
js
cmpsl
in
mov
add
sbb
xchg
int
xor
in
movsb
xor
sub
rcrl
idivl
bound
in
lds
adc
or
ret
xor
fs
mov
out
insl
mov
jbe
les
dec
lds
repnz
mov
cmpsl
cmp
pop
test
push
and
sbb
pusha
hlt
leave
mov
popa
sti
divb
push
mov
add
mov
xor
adc
mov
icebp
xor
mov
lea
push
js
and
cmp
mov
add
pop
fs
or
js
mov
pop
mov
in
je
or
les
push
arpl
sbbl
mov
inc
add
pop
push
cli
push
das
fidivs
enter
push
push
lcall
in
push
aaa
mov
and
or
dec
in
std
imul
push
adc
cs
ret
sub
iret
loope
arpl
push
sub
jge
sub
idivl
jmp
out
lea
adc
mov
sbb
inc
push
sbb
loopne
mov
fwait
mov
adc
jns
push
orl
cmp
dec
cmp
jns
movsb
push
loop
push
cmpsl
sbb
cmc
repz
cmpsl
sbb
xchg
mov
jecxz
xchg
fs
jns
nop
hlt
mov
or
ja
sub
fs
clc
jne
mov
mov
pop
aas
orl
inc
dec
push
xor
div
sub
cmp
icebp
bound
popf
mov
mov
ret
outsl
sbbl
mov
lods
dec
adc
cmc
jbe
lock
aam
and
pop
ja
outsb
dec
jns
lcall
cs
sbb
icebp
dec
shl
mov
hlt
adc
pop
mov
mov
and
mov
in
sbb
out
movnti
fstl
and
daa
jb
daa
pop
or
orl
and
mov
inc
mov
je
jp
fdivs
shll
dec
aas
adc
adc
nop
pop
add
push
jo
mov
jp
add
xor
leave
mov
fstpt
cli
pushf
neg
pop
fsubs
jge
loope
adc
jge
dec
or
cmp
repz
sub
subl
lea
mov
lds
xor
pop
mov
or
lods
dec
mov
mov
in
insb
adc
ljmp
inc
inc
sbb
mov
idiv
cmp
or
leave
lds
inc
xor
rep
movsl
pusha
movsl
mov
fisttps
lea
cli
ja
int3
dec
rcr
mov
and
or
dec
movsl
add
sbb
enter
loopne
dec
pop
mov
stc
dec
pop
push
sub
mov
jg
dec
and
jbe
xor
ljmp
push
rol
addr16
sbb
jl
and
jae
pop
int
cs
ret
stc
sbb
sahf
xchg
or
xor
loope
pop
and
inc
mov
dec
xor
test
mov
dec
xor
mov
mov
ficomps
stos
mov
in
stc
and
jmp
push
adc
repnz
cmp
clc
popa
xor
ret
sahf
mov
rclb
cmpsb
fwait
das
dec
and
jmp
ss
dec
icebp
in
adc
sbb
xchg
mov
sub
sbb
cmp
xlat
dec
xorps
jmp
fldl
xchg
adc
dec
cld
repz
lods
int3
sti
dec
or
pop
adc
mov
xor
ret
popf
es
movsl
push
call
insl
mov
test
mov
js
shr
sbb
add
inc
push
dec
cwtl
push
xlat
arpl
repz
cmpb
pop
push
mov
test
and
push
lods
lcall
mov
repnz
xor
pop
and
leave
div
arpl
cs
pop
xchg
outsl
xor
mov
pop
cmp
xorb
movzbl
fwait
das
icebp
cld
jg
xchg
or
adc
mov
and
and
insb
sti
sub
dec
sub
pop
lea
sbb
test
inc
xchg
mov
xor
sub
mov
sbb
outsb
sub
and
sub
stos
pushf
mov
lcall
mov
loopne
rorl
jb
pop
xlat
jle
pop
add
sbb
xchg
lock
jl
shrl
mov
jp
inc
into
mov
mov
fildll
add
popf
test
cmp
cmp
mov
mov
loop
loopne
sbb
or
bound
ss
sbb
or
stos
xchg
mov
scas
enter
cwtl
push
cwtl
stos
mov
outsb
push
ljmp
in
dec
add
das
jo
xor
in
push
scas
and
stc
jge
lock
xchg
add
mov
fwait
clc
ljmp
rolb
insl
dec
add
in
outsb
jns
shrb
push
dec
push
clc
out
push
popa
cld
push
or
pop
daa
test
mov
mov
jb
je
lcall
lahf
stos
ss
add
jecxz
push
adc
dec
mov
xchg
movsb
jns
hlt
lds
cmp
subb
dec
fisubrs
orl
xchg
cld
lea
mov
jg
push
xchg
add
add
mov
rclb
dec
mov
out
jnp
adc
mov
das
mov
pop
jl
inc
fdivrs
xchg
adc
ret
es
loope
xor
pusha
xchg
imul
xchg
imul
iret
add
xchg
test
rclb
ljmp
xor
jbe
or
loope
xor
push
in
imul
pop
std
inc
pop
cld
pop
aam
cmpb
popf
xor
adc
jnp
jnp
movsb
aaa
mov
and
out
mov
mov
in
sub
push
lds
xor
push
mov
icebp
bnd
stos
dec
inc
or
arpl
sqrtps
inc
pop
pop
test
adcb
insl
pop
repnz
popl
pop
jo
jae
cld
push
orb
lock
std
push
mov
jge
lret
shl
pop
pop
pop
int3
inc
jb
mov
lret
sahf
mov
test
sbbl
pop
jns
lea
sbb
xchg
pop
mov
jb
pop
fadds
jbe
fidivs
mov
adc
pushf
lods
mov
mov
ret
out
push
jnp
lods
jle
sbb
arpl
jecxz
and
pusha
or
inc
push
out
out
sub
inc
and
push
mov
psrld
add
pop
insl
repz
movsb
cmpsb
cmc
cli
mov
bound
adc
push
xchg
imul
jmp
insl
xor
cmp
mov
add
ret
or
int
or
arpl
mov
aam
sbb
sarb
xor
adc
int
outsl
mov
jmp
faddl
mov
fimuls
incb
rcll
pop
dec
js
push
cmp
cld
mov
adc
int3
adc
lret
icebp
insl
clc
loop
sbb
inc
mov
sub
mov
cmp
sbb
repz
pop
scas
ret
pop
jbe
pop
and
subl
into
inc
mov
mov
fmul
cmp
dec
int
sti
in
stos
fstpt
or
lds
cs
faddl
out
repnz
add
dec
cmp
and
movsb
push
cwtl
lock
mov
sub
jp
inc
call
adc
xor
adc
jo
ret
jne
add
adc
mov
pop
xchg
mov
data16
aas
xchg
dec
lcall
jmp
pop
mov
movb
cmp
sub
shll
adc
insb
test
lods
pop
jl
orb
mov
cmp
or
and
movsb
pop
mov
rcrb
ds
dec
sub
mov
pop
jp
iret
inc
pop
push
scas
outsl
and
mov
push
cmp
cmp
add
inc
je
jmp
out
shll
not
xchg
pop
icebp
sub
push
cmp
in
movsl
dec
mov
add
and
fists
pop
popa
cld
cmp
sub
cld
pop
or
or
ja
sbb
dec
mov
ficoml
cli
ljmp
stos
sub
dec
sub
or
add
lret
cltd
sub
fistpll
and
sub
jmpw
cmp
hlt
dec
mov
fildl
or
or
jns
stos
mov
adc
jno
inc
shl
and
xor
mov
and
mov
out
cwtl
out
mov
mov
arpl
insl
push
inc
jne
outsl
adc
and
push
xchg
jne
test
push
data16
lcall
xchg
test
adc
cmp
pop
jmp
pop
adc
insl
mov
stos
push
or
jae
jecxz
in
js
out
in
fimull
stc
sub
frstor
test
aad
jmp
add
icebp
lock
inc
sub
popf
lods
repz
mov
jo
dec
jmp
mov
mov
inc
xlat
lret
stc
mov
lcall
shlb
enter
sahf
dec
in
mov
lea
andb
ljmp
iret
imul
lods
mov
lret
paddsb
pop
and
mov
push
repz
add
cmpsl
jbe
lcall
and
xchg
das
call
mov
xor
mov
adc
test
jp
add
pop
xchg
nop
aam
add
cmp
lods
and
fs
loop
rcl
jnp
das
lds
frstor
mov
push
popa
pop
adc
push
sbb
fldenv
cmp
dec
sub
inc
inc
rorl
dec
push
sarl
jno
loopne
sbb
bnd
iret
lea
or
es
cltd
int3
add
dec
adc
mov
adc
aad
enter
xchg
das
lds
and
xchg
loopne
fsubs
aas
jecxz
fs
or
xor
movsb
jbe
mov
mov
les
jecxz
mov
out
mov
cmp
hlt
sahf
notl
xchg
adc
shll
or
fnstenv
pushf
fidivrl
stc
lock
mov
idivb
and
in
mov
xchg
imul
xchg
stc
nop
in
pop
es
sahf
aam
adc
imul
loopne
ljmp
push
add
shll
test
mov
ret
or
pop
stc
sub
cs
jno
fdivrl
test
xor
leave
mov
test
es
dec
scas
xchg
xlat
dec
adc
testl
mov
or
or
jle
lcall
insl
dec
inc
je
insl
out
outsb
les
jno
adc
mov
nop
mov
jns
sbb
popa
out
pop
fsubl
push
inc
lds
mov
adc
push
xchg
addl
fstl
cmp
push
jns
inc
push
cld
adc
dec
inc
scas
shl
jg
lahf
xor
mov
dec
popf
jge
dec
add
sti
cltd
xor
push
inc
lea
int
xor
ja
fildll
outsl
mov
ret
mov
cmp
cltd
leave
aad
cmp
cmp
inc
iret
rol
pop
mov
bound
addr16
pop
fildl
xor
in
cmp
xchg
xorl
arpl
jmp
sbb
xorl
mov
negl
jns
xchg
pop
jno
mov
fdivrl
lret
mov
jge
scas
dec
ret
cmc
mov
imul
push
rcrb
and
sbb
push
add
in
into
pop
in
push
mov
lcall
add
pop
sub
cltd
negb
lods
scas
fimuls
stos
aas
rcrb
jb
and
int
stos
sub
cli
add
inc
add
lock
and
rorb
test
insl
repz
jne
xchg
lods
add
jecxz
outsl
int
pushf
mov
out
cmc
shll
inc
scas
dec
pop
mov
mov
pop
dec
sbb
push
in
xchg
xchg
in
push
pop
movsb
int3
out
or
rcr
push
cmp
pushf
pop
repnz
mov
les
iret
insl
dec
inc
or
xchg
inc
pop
push
lret
lods
inc
pusha
pop
cmp
jg
xchg
out
leave
lods
adc
out
shll
adc
call
jb
sub
ja
jg
mov
bound
test
xchg
pop
cmpsb
ds
mov
mov
adc
pop
jmp
rclb
aad
repnz
pop
adc
inc
iret
and
mov
inc
or
or
subl
pop
xor
movsl
lds
loope
xchg
stc
or
inc
dec
xor
or
xor
dec
inc
or
out
repnz
out
into
push
lret
pop
outsl
aas
jg
ret
aas
mov
pop
pop
bound
jg
ret
inc
aaa
mov
mov
call
hlt
in
adc
add
sub
push
mov
jnp
inc
loope
bound
or
xchg
lods
addr16
mov
aam
adc
mov
cmp
add
mov
inc
loopne
in
sub
or
jo
and
or
in
adc
inc
ljmp
fisubs
stos
rol
jo
mov
scas
or
mov
adc
cld
xchg
pop
push
cld
stos
repz
imul
jo
pop
in
push
repnz
lcall
bound
pop
jl
test
push
mov
jp
shll
dec
lcall
loop
jecxz
dec
scas
out
and
bound
mov
fistl
sahf
jge
xchg
mov
div
hlt
sub
decl
mov
out
out
jb
xchg
push
imul
repz
mov
in
fcompl
das
ret
ret
out
mov
push
fcmovne
enter
popf
pushf
adc
add
sbb
push
sbb
sub
add
mov
insl
inc
xor
push
pop
jns
lahf
rorl
scas
adc
and
testb
pop
or
shlb
mov
push
test
push
xor
orb
jns
rolb
mov
jb
je
lret
add
decb
sub
mov
cmp
flds
jmp
loop
inc
mov
aam
add
lods
mov
sbb
call
mov
fwait
add
inc
dec
fistpll
icebp
arpl
fidivrs
mov
imul
mov
and
arpl
lds
mov
mov
mov
and
sbb
dec
and
mov
or
addr16
inc
push
gs
mov
mov
inc
cld
jmp
sbb
arpl
adc
lret
or
out
add
mov
cmc
mov
test
sahf
cltd
sub
sarl
mov
sbbb
iret
push
mov
pop
rolb
sub
outsl
dec
bswap
sbb
mov
rcll
icebp
call
sahf
add
and
xor
out
jnp
ret
les
cmpsb
pop
addr16
cld
adc
cmp
push
add
rcll
sar
add
pop
inc
mov
mov
ljmp
xchg
std
add
outsb
testb
xor
sbb
lea
xlat
sub
sahf
ret
loopne
pop
pop
cmp
cld
and
test
sub
jne
push
pop
mov
add
in
imul
stc
js
mov
push
dec
stc
dec
gs
ja
push
lock
cmp
adc
stc
sbb
add
inc
into
add
pop
subb
and
jp
xchg
das
and
outsl
rcrl
xchg
psubb
pop
movsb
outsl
test
mov
aam
adc
push
add
cltd
mov
inc
xchg
test
in
jle
imul
lret
mov
or
jne
and
jae
mov
pop
repnz
scas
in
adcl
cmp
sub
mov
lret
jb
seta
and
arpl
gs
push
rorb
ja
sbb
push
mov
or
lcall
pop
pop
and
xor
out
repz
add
ficoml
les
push
cmp
push
js
xor
lahf
ljmp
sbb
fidivrl
dec
jecxz
xchg
push
nop
inc
add
jno
test
pop
movsl
xor
xchg
or
aas
sbb
ja
dec
pop
bound
repnz
sbb
outsl
into
cmp
and
add
cli
mov
pop
icebp
ljmp
gs
out
ficoms
imul
imulb
pop
data16
push
rorb
mov
and
mov
pop
push
mov
std
call
popa
popa
iret
ret
cmp
pop
lahf
aam
lods
mov
add
pushl
jo
push
mov
test
jo
arpl
mov
xor
gs
dec
test
jnp
lcall
push
std
lock
xchg
sbb
xor
ja
cmc
or
lods
lea
dec
xchg
clc
sbb
repnz
jnp
cwtl
int
dec
dec
pop
jle
cs
and
or
cmp
jb
data16
cmp
loop
fistpl
cmp
and
sub
add
iret
push
mov
outsb
jg
shll
inc
sub
push
cmpsl
fsub
jle
repz
mov
xchg
outsl
subb
loope
movsl
cmp
cwtl
mov
fwait
test
sti
je
cwtl
out
mov
mov
gs
mov
loopne
pop
or
shl
pop
push
inc
adc
adc
cwtl
ja
popa
aaa
sub
loopne
clc
add
fldcw
mov
xchg
lock
dec
sub
dec
pop
nop
xchg
xchg
addr16
loop
push
inc
push
adc
fistl
pop
les
xor
dec
adc
mov
sar
inc
or
js
xor
sbb
jp
movsl
push
adc
dec
fucom
pop
popf
shll
nop
lock
fs
fs
xchg
cmpsl
dec
fwait
inc
je
xor
pop
xor
fistpll
mulb
shrb
and
dec
jnp
dec
vcvttpd2dqy
fisubrl
fdiv
fstpt
pop
rorb
mov
imul
or
inc
jbe
mov
popa
idiv
lahf
mov
adc
pop
pop
push
and
nop
ds
stos
mov
pop
push
insl
lock
dec
sub
adc
sbb
fidivl
adc
jecxz
rcrl
mov
imul
add
sub
aas
faddp
jne
push
inc
pop
int
shrl
in
fs
popf
adc
sub
lock
ja
jns
xchg
or
push
push
out
mov
or
push
aas
out
shl
std
or
movsb
stc
fiadds
mov
es
jb
icebp
stos
adc
add
addb
lahf
xchg
rcr
sti
sbb
icebp
repnz
fld
imull
mov
sub
ljmp
lea
lods
or
and
xor
inc
mov
mov
xchg
dec
out
add
imul
es
in
and
push
stc
push
or
aam
jmp
mov
fisubrs
pop
and
test
mov
inc
lcall
je
test
sahf
dec
cwtl
lds
push
dec
adc
jnp
outsb
xchg
add
fsubr
push
jecxz
push
scas
inc
scas
push
jle
lea
mov
sub
insl
sti
dec
leave
daa
xor
stc
inc
push
mov
insb
push
xchg
mov
repz
lret
jp
je
les
mov
and
mov
aas
loopne
fs
xor
repnz
mov
insl
lret
cmp
sbb
pushf
adcb
dec
xchg
leave
out
cs
adc
cs
or
adc
pop
sub
and
jo
xlat
std
add
mov
fimull
mov
mov
je
pop
or
aam
pushf
cltd
fildl
pop
in
mov
into
sub
sbb
xchg
fldcw
cmp
mov
xchg
jns
push
adc
inc
xor
mov
insl
mov
in
and
and
dec
mov
pushf
pop
jae
jne,pn
inc
sbb
aad
cmp
pushf
sbb
lret
ja
inc
icebp
mov
daa
cltd
push
cs
pushf
pop
push
stos
insl
mov
aam
andb
add
lahf
jge
ja
push
loope
outsl
inc
in
lods
bound
push
into
and
or
adc
add
fldcw
xchg
or
mov
cmp
movsl
icebp
xor
adc
scas
pop
adc
lret
cmp
push
mov
xor
push
rcr
jle
out
mov
and
insb
pop
cmp
daa
pusha
shlb
inc
icebp
stos
xor
push
push
push
repz
gs
pop
or
pmaxub
sbb
pushf
adc
xchg
outsb
out
stos
rcl
dec
xchg
icebp
je
jle
std
mov
mov
cmp
mov
mov
test
hlt
out
out
jle
ret
sub
and
inc
dec
mov
cli
push
or
lea
repnz
mov
nop
into
adc
add
imul
nop
movsb
call
out
dec
and
fsts
mov
adc
sbbb
sbb
dec
outsl
cld
push
sar
cmpsl
dec
out
cmpl
or
or
aas
imul
aam
loopne
jmp
push
mov
fistpll
xor
fldt
xchg
dec
dec
fdivp
push
cmp
bnd
rorb
in
adc
pop
lret
into
idivl
in
sub
pop
cmpb
jne
leave
push
push
push
std
dec
add
xor
push
add
fcomps
scas
inc
jne
aam
and
cld
xchg
in
shlb
rolb
aaa
xchg
shl
jb
aas
ret
push
pop
cmpb
mov
dec
or
in
jo
adc
fisubl
cmpsl
push
sbb
cltd
cli
xor
test
sbb
sbb
push
jl
lds
sbb
adcl
push
and
rorb
add
ret
jle
mov
repnz
pop
mov
jne
faddp
push
movsl
push
sub
xchg
mov
inc
xor
mov
and
sub
add
cmp
sbb
adc
jp
incl
xor
jle
shlb
aas
sub
jbe
shll
dec
cwtl
loop
add
inc
fwait
lcall
outsl
xchg
das
mov
test
cwtl
ret
dec
jbe
jo
popf
mov
fcompl
jo,pn
mov
sbb
push
add
xor
sbb
jmp
jecxz
push
rclb
daa
mov
inc
pusha
fstl
mov
mov
mov
gs
xchg
push
mov
mov
sti
jmp
push
bound
sub
sbb
cmp
push
iret
gs
inc
or
adc
cmp
mov
and
mov
popa
aam
data16
pop
mov
xor
cmp
sbb
jbe
aad
mov
adc
test
mov
mov
test
rcrb
out
ror
inc
xchg
adc
dec
mov
or
sarb
in
lahf
rcrb
imul
fdivr
mov
shll
addb
mov
mov
add
fs
mov
mov
cmpsl
or
mov
in
stc
sbb
xchg
add
adc
xchg
cwtl
loope
and
push
mov
rcl
imul
icebp
icebp
std
push
adc
mov
outsl
sub
sbb
add
and
repz
mov
bound
xor
cld
cmp
dec
adc
test
lahf
sub
clc
insl
cmp
dec
pop
push
jp
sbb
mov
mov
push
add
xchg
lcall
mov
mov
sar
mov
ljmp
and
and
push
insb
test
fstl
in
dec
sbb
ds
movsl
movsb
cmp
in
cmp
add
push
and
imul
bound
jg
movsl
ret
xchg
jl
add
shll
outsl
sub
out
add
es
mov
push
pop
mov
mov
adc
mov
int
mov
jno
adc
xchg
push
push
jns
or
div
jns
rcll
daa
sarl
sbb
movsl
push
fld
inc
pop
push
and
jge
out
sbb
jp
or
dec
rcl
xchg
xchg
imul
adc
frstor
bound
sub
shll
inc
cmp
inc
cmpsb
rclb
out
dec
roll
sub
mov
inc
sti
xorl
rorb
jns
fsubrl
cwtl
adcl
pop
and
and
pop
lds
sub
das
push
pushf
movsb
inc
mov
add
cmp
mov
shlb
clc
aaa
and
xchg
inc
out
aaa
in
inc
in
xor
push
push
mov
aam
pop
roll
and
adc
adc
cs
loop
inc
sub
rcrb
add
cld
ja
add
dec
jecxz
add
jne
sbb
loopne
sub
leave
add
cltd
pop
mov
test
sbb
sbb
pusha
pop
mov
sahf
inc
ja
adc
stos
dec
push
cli
pop
fs
lods
mov
sar
cld
xor
leave
mov
fcompl
sbb
xchg
jae
push
gs
aaa
add
imul
test
xchg
pop
pop
push
outsb
pop
adc
cli
mov
jge
push
or
dec
xor
mov
in
push
nop
dec
cmp
inc
movsb
hlt
fdivs
lret
mov
bound
in
pop
xor
sbb
pop
lcall
jb
xlat
sub
cltd
adc
sub
lea
or
pop
lret
sub
push
imul
cli
pop
sbb
js
and
lds
popa
lods
ja,pn
in
mov
mov
xor
das
stos
test
sub
and
fnstcw
pop
xchg
adc
stc
movsl
test
out
inc
lahf
adc
lret
push
push
inc
test
adc
and
pop
push
nop
cmc
lret
dec
inc
cld
pusha
jecxz
xchg
xchg
cmp
rolb
cmp
mov
js
mov
jmp
ficoms
scas
pop
or
push
outsl
int
cmp
shll
test
aas
les
loopne
or
fdivrl
push
mov
push
or
lret
or
pop
ffreep
mov
out
repnz
sbb
push
std
stos
fcmovne
ret
and
stos
add
xor
adc
ficoml
xchg
ret
loopne
ljmp
add
adc
out
sarb
sbb
xor
sbb
repnz
fiaddl
mov
out
mov
cs
pop
loope
movsb
jnp
push
jmp
mov
mov
stc
daa
adc
xor
add
xchg
jge
mov
pop
inc
pusha
sahf
imul
les
fdivrs
fisttpl
neg
loop
lret
popf
nop
clc
shl
pop
clc
pop
adc
pop
adc
sub
aas
pusha
test
lds
pop
mov
cmp
fs
sbb
mov
add
adc
inc
movsl
xchg
imull
sub
pop
insl
pusha
setbe
orb
mov
mov
fimuls
lret
cli
enter
jp
mov
push
adc
xor
insl
loop
add
jmp
add
ja
mov
and
lret
mov
movsb
daa
lds
jb
in
jo
sub
add
cltd
cmpsb
or
loop
adc
std
cltd
pop
jg
outsb
shl
enter
lods
push
imul
test
rcl
inc
jb
jbe
jno
pushf
addr16
pop
mov
sti
fistpll
es
enter
add
push
mov
mov
scas
enter
push
xchg
out
ret
jecxz
cld
mov
jb
or
dec
scas
jecxz
in
shrl
pop
test
cmpsl
pop
and
add
notb
sub
cmp
fsubrs
aam
cmp
push
rcll
test
imul
add
mov
push
or
shrl
xchg
loopne
cmp
movsl
mov
mov
insl
jo
lods
outsl
add
adc
inc
fnstcw
fldcw
stos
jmp
mov
and
pop
repnz
lcall
call
testl
jge
xchg
in
sbb
inc
andb
mov
adc
mov
xchg
or
mov
lds
fsts
mull
ret
les
jb
or
stc
push
adc
in
clc
push
call
and
xor
jo
pop
push
leave
movsb
out
lods
cld
push
jnp
sub
shrb
pop
icebp
xor
hlt
loopne
dec
les
shl
cmpsl
jg
adc
scas
addr16
jl
mov
and
and
pop
mov
or
out
cwtl
in
push
jbe
pop
cld
ret
cmpsb
jl
sub
movsl
sbb
rep
iret
jmp
or
pop
filds
xor
mov
cwtl
and
loope
xor
aaa
jb
rorb
mov
xchg
daa
mov
nop
lret
and
cmp
or
ja
jecxz
jge
cltd
sub
cmp
test
xchg
cltd
gs
push
add
xlat
dec
cmp
adc
mov
and
mov
sahf
loope
in
shrb
movsb
sub
pushf
mov
loopne
loopne
rcl
xchg
xchg
sbb
add
enter
pop
movsb
imulb
ljmp
pop
outsb
xchg
add
into
rcll
movl
hlt
push
xchg
mov
test
push
sbb
or
jo
jge
sti
rorb
push
fbstp
jae
cmc
into
jnp
xor
data16
daa
inc
cmp
sub
mulb
mov
sbb
inc
pop
mov
loop
xchg
test
xor
rolb
repnz
pop
xchg
fldl
idiv
cwtl
fwait
mov
cmp
fcompl
aam
sbb
mov
mov
mov
popa
jno
xchg
xor
or
jns
xchg
cmp
xchg
adc
lock
int3
rolb
pop
inc
jmp
fsts
adc
cmpsb
push
lods
ret
or
loop
clc
mov
jle
jg
clc
pop
jno
in
adc
mov
repz
mov
mov
lock
mov
pop
pop
lods
pop
jae
mov
pop
pop
mov
mov
push
mov
movsl
push
mov
mov
jae
pushl
fcomps
into
sbb
rol
sahf
out
pop
lret
cmp
das
cmp
fsubp
xor
or
lock
nop
fidivs
lret
scas
cli
push
call
mov
fwait
sub
push
pusha
xchg
and
clc
inc
pop
fmull
hlt
sub
xchg
aaa
es
cld
lock
add
mov
jecxz
inc
movsl
ja
add
jge
call
dec
call
mov
pop
inc
or
ja
jo
xchg
movsl
cltd
leave
jbe
xchg
sbb
outsb
mov
push
imul
inc
adcb
cmpsl
gs
insl
lds
ret
jg
jmp
jmp
fisttpll
daa
push
mov
jb
movsl
hlt
test
mov
lea
xor
rcl
cmp
addr16
fnstenv
or
loope
or
les
in
shll
iret
loopne
dec
lea
or
and
lcall
or
dec
jg
and
repnz
test
std
sub
sub
aaa
sub
add
sub
rcrb
repz
dec
adc
sbb
inc
fcoml
cs
xchg
xor
hlt
ss
jnp
mov
or
cli
xor
out
sbb
and
jno
std
cwtl
insb
mov
rcrb
cld
jo
jae
fbstp
sbb
loope
inc
ret
hlt
dec
pop
sti
fisttpl
mov
pop
xchg
adc
sub
jmp
sub
or
fdivr
jno
sbb
pop
les
lret
ja
push
ljmp
mov
xor
fimuls
push
sub
pusha
lds
into
mov
add
xor
or
stos
icebp
inc
sbb
and
pop
push
fiaddl
andb
jecxz
icebp
ja
xchg
and
or
dec
inc
mov
push
adc
push
in
push
addr16
movsl
xor
ss
jge
iret
sub
push
adc
test
enter
icebp
ss
filds
push
shlb
mov
pop
adc
fnclex
cmp
es
clc
enter
test
and
mov
and
jmp
sti
aad
cmc
inc
icebp
pop
or
jnp
out
das
pushl
inc
aas
add
stos
or
mov
mov
sub
arpl
fnstcw
cmc
sbb
mov
movsb
mov
fsubrs
cld
ret
arpl
stos
jmp
add
shll
outsl
fistps
mov
xor
cmpsb
lods
xlat
push
insl
inc
mov
mov
and
hlt
pusha
mov
repz
bound
push
jno
and
cmovp
js
lret
dec
cmp
jge
xor
mov
popa
shl
mov
shl
dec
mov
mov
leave
jo
sbb
std
aam
or
or
js
inc
addl
ds
and
xchg
sub
add
js
mov
adc
mov
adc
lret
mov
outsb
xor
xlat
test
loop
imul
push
mov
pop
es
js
pop
jnp
mov
mov
and
aad
xchg
test
arpl
loopne
adc
cli
xor
shrb
adc
iret
popa
lock
movsb
xlat
xor
dec
jae
fldcw
adc
inc
in
sub
lods
push
std
insb
jge
fistps
adc
push
pop
adc
dec
and
sbb
fildll
push
iret
mov
jmp
adc
loop
jmp
popa
xchg
lock
cmpsb
fistpll
cmp
dec
lret
mov
jl
mov
scas
loopne
imul
std
or
xchg
dec
movsl
dec
lods
cld
sbb
loope
jecxz
addr16
jmp
jb
clc
stos
xchg
jnp
lea
xchg
mov
cld
xchg
insl
sbb
inc
ret
addr16
xchg
add
xchg
mov
cltd
and
std
daa
jbe
push
jnp
sub
cmp
ret
movsb
test
cmp
sub
and
xchg
das
pop
or
repnz
jns
les
loope
fcomp
fdivl
xor
push
stc
jl
dec
out
fstpt
fmulp
mov
add
movsb
sbb
fwait
sub
pusha
push
icebp
push
mov
fwait
shrl
out
test
mov
push
jl
or
daa
arpl
outsl
daa
dec
iret
lds
cmpsl
add
loop
idivb
jne
sub
in
lret
sub
sbb
inc
fsubr
xchg
out
enter
mov
dec
mov
aaa
ds
sub
mov
repnz
popf
pop
fcomps
mov
shrl
or
jae
sbb
ficoms
mov
xchg
icebp
adc
xor
hlt
ds
leave
inc
push
inc
mov
fs
and
jbe
inc
je
mov
lds
dec
xchg
inc
cltd
and
int3
push
arpl
push
lret
movsb
pop
fdivrl
sahf
cld
imul
mov
paddq
out
jg
xor
xchg
xchg
mov
sbb
icebp
xor
xchg
es
pop
mov
je
sahf
rol
xlat
das
les
xor
mov
xchg
mov
shlb
clc
mov
jmp
pop
sbb
pop
lods
and
push
icebp
nop
fs
xchg
pop
push
mov
dec
faddl
mov
mov
ret
jb
mov
fsubrp
or
jae
jge
pop
push
jmp
lock
jb
adc
pop
iret
in
mov
xchg
shlb
fidivrs
mov
xchg
lret
sbb
jne
dec
sbbl
xchg
out
gs
dec
push
stos
and
mov
sbb
sub
mov
or
xlat
je
xor
xchg
jg
add
xor
rorl
scas
clc
add
dec
out
mov
mov
push
fistpll
hlt
fdivp
out
fists
dec
mov
sahf
pop
sbb
cmp
mov
aaa
iret
xchg
daa
pop
sbb
add
filds
aam
cmp
insb
jae
cmpl
cwtl
jbe
fcomp
popf
in
add
jb
dec
mov
jno
mov
jl
jne
test
sbb
movsl
xchg
insb
or
add
jmp
or
jecxz
pop
sbb
xchg
sbb
xor
sbb
mov
pop
outsb
shr
push
imul
xchg
or
insl
out
push
jge
cmp
mov
and
cmpsl
push
push
loopne
mov
adc
xchg
mov
pop
icebp
lret
push
sbb
leave
cld
mov
or
inc
ror
dec
add
xchg
cs
into
jecxz
sbb
cld
pop
fimuls
sub
out
xor
adc
dec
loopne
out
push
push
xlat
xchg
pop
test
pop
lcall
movsb
xchg
cltd
cmc
dec
sahf
sti
and
xchg
xor
gs
scas
out
adc
jns
and
sub
mov
frstor
lahf
sub
jmp
mov
loope
out
pop
push
xchg
lods
sub
daa
inc
out
leave
insl
sub
movsl
inc
lds
lahf
stc
jb
lods
or
sbb
movsl
enter
movsb
shll
ja
pop
pop
push
adc
mov
mov
divb
pop
ljmp
sbbb
lahf
mov
iret
cmc
jmp
shll
cli
lods
sbb
jmp
aam
or
jl
sub
jecxz
or
sahf
aaa
lret
xchg
mov
lea
inc
dec
fldcw
loopne
jnp
push
loop
fucomi
xlat
cmpb
or
stos
mov
cs
push
jne,pn
push
lret
sahf
sub
fildll
lcall
test
mov
loopne
aas
add
fisubl
jo
mov
rol
test
mov
aas
jmp
inc
cmpsl
xor
or
dec
in
shrb
and
fimull
es
jns
or
out
dec
push
mov
leave
jno
add
xor
or
jb
dec
mov
sbb
sub
shll
lods
xor
cmpsb
cli
fwait
out
mov
das
addr16
mov
cmp
stc
repz
stos
or
in
cs
sub
orl
stos
jns
fsubs
gs
aas
pushf
pop
movsb
xchg
jbe
pop
mov
dec
and
movsl
xor
adc
inc
xchg
inc
fwait
pop
adc
mov
sbb
imul
push
jecxz
lea
out
cmp
scas
mov
mov
mov
mov
mov
filds
lods
jne
sub
mov
mov
jle
movsl
out
lret
fdivrl
add
int3
fnstenv
cmp
mov
movsl
enter
pop
mov
sbb
fldcw
xor
cmp
movsl
fimuls
sub
fs
mov
stos
insb
fs
movsb
hlt
lret
push
sar
aam
or
jb
cli
sbb
xchg
rcrb
inc
nopl
sbb
adc
lahf
ret
sbb
lret
shll
mov
fdivr
cli
push
mov
sub
outsb
push
pop
jbe
je
fidivs
test
cmp
xor
add
mov
jecxz
cmp
inc
push
mov
lahf
and
dec
push
pusha
pop
aaa
hlt
dec
into
stos
ror
and
nop
cs
adc
test
cli
xchg
idivl
pop
mov
movsl
in
test
imul
imul
not
divb
outsb
mov
add
cmp
lods
mov
lret
sbb
icebp
add
sbb
push
xor
inc
decl
ret
or
arpl
stos
jmp
or
inc
ficompl
add
stc
daa
mov
pop
test
mov
xlat
mov
jbe
repz
xor
mov
hlt
mov
and
and
xchg
cld
fistpl
cmp
sub
movsb
jmp
test
popf
pop
insb
addr16
mov
movsl
out
jo
mov
mov
pop
or
dec
mov
aaa
imulb
adc
sahf
mov
dec
mov
inc
push
inc
jns
mov
pop
inc
push
in
fcomp
pop
dec
and
mov
fnstsw
cltd
cwtl
pop
inc
mov
insl
cmpsl
xor
xor
outsl
imul
ja
push
fcomps
mov
mull
cmpl
adc
pop
gs
enter
nop
loope
loope
stc
aam
add
mov
int
sub
xchg
fmul
push
lahf
sahf
dec
in
xor
adc
mov
add
sti
adc
xor
jnp
jmp
sbb
sub
out
je
adc
xchg
test
lahf
lret
aam
cmp
adc
add
test
inc
adc
xor
std
fsubrl
xchg
mov
xor
dec
jge
sti
mulb
jb
addr16
or
sbb
sbb
dec
adc
mov
out
mov
iret
outsl
stc
dec
xor
test
int
ljmp
push
lock
lcall
sahf
int
push
scas
mov
pop
loop
call
loope
lea
adc
jae
rorl
adc
add
push
arpl
xor
test
pusha
jmp
cmp
int3
pop
cli
push
hlt
out
sbb
popa
pop
inc
jno
xor
rolb
repnz
pushf
imul
filds
inc
xor
adc
xor
fistpl
push
sbb
or
cmpsb
enter
inc
je
fcompp
ret
xchg
loope
lods
insl
push
or
adc
dec
add
xor
outsb
push
add
dec
dec
mov
xchg
enter
movsl
enter
pop
arpl
dec
dec
dec
dec
mov
in
mov
lcall
xchg
sub
mov
mov
inc
pop
jno
sbb
ror
fsubl
test
dec
mov
pop
in
or
sub
inc
mov
mov
ljmp
sub
fildll
and
fwait
out
pushf
jb
sahf
cmp
aaa
xlat
cld
repnz
adc
mov
cmp
aam
jl
jbe
adc
or
sub
pop
ja
fwait
cmpl
adc
fnstenv
test
mov
add
pop
aad
rclb
cli
add
aad
xchg
add
add
ss
sub
or
test
and
pop
add
pop
xor
sbb
sti
or
call
fnsave
enter
dec
enter
cli
xor
fcompl
xor
push
pop
nop
xchg
stos
bound
cmp
jo
outsl
jecxz
es
and
jne
pop
dec
test
ss
int
mov
pop
mov
notl
ja
jmp
test
sub
jnp
xchg
insl
mov
xchg
xlat
jne
scas
pop
test
pop
add
ret
dec
mov
mov
inc
scas
shl
loop
aad
mov
mov
rcrb
stos
cli
cmpsb
or
repnz
inc
shll
js
push
cmc
sbb
or
sti
cmp
addr16
call
icebp
mov
add
mov
inc
dec
pop
and
adc
lods
or
cwtl
out
adc
xchg
fwait
lods
or
push
mov
jns
mov
xchg
xor
adc
nop
int
add
adc
jns
pushf
mov
int3
in
cli
fstpt
int
lock
inc
jmp
mov
aas
popa
fwait
push
and
inc
rcl
jmp
push
sti
stos
xor
jecxz
or
push
mov
or
cld
fisubrs
fstpt
cmp
ljmp
repnz
aad
insb
shlb
or
cmpsb
repz
push
scas
nop
repnz
push
xchg
and
pop
ss
and
xorl
arpl
shlb
aam
paddusb
fucom
xchg
ficoml
inc
inc
repz
adc
scas
subb
subl
pop
push
push
push
rcll
push
push
sub
xchg
adcl
lock
jns
mov
ret
rcl
xor
sti
mov
fsts
xchg
mov
or
in
aad
mov
push
ja
inc
scas
mov
mov
mov
dec
push
dec
sub
jecxz
comiss
push
inc
mov
in
cmpsl
ret
and
mov
pop
jae
imul
fiadds
sbb
mov
xor
scas
dec
in
fsubl
cmpsb
cmp
or
imul
mov
jnp
jb
fsubrs
repnz
adc
adc
testb
add
push
shll
push
test
test
fdiv
shr
sub
pop
scas
sbb
lea
dec
ja
dec
push
rolb
cmpb
insl
push
iret
dec
xchg
xorb
jmp
push
loope
add
dec
xchg
add
and
in
sbb
pushf
jp
cmpsl
mov
std
stos
popa
jne
mov
and
gs
xchg
and
or
xor
daa
and
cmp
out
cmp
jae
pop
fdivrp
orl
outsb
lcall
mov
andl
add
dec
pop
inc
jmp
sbb
xor
xor
push
mov
data16
xor
adc
jge
pop
lret
jae
xchg
bound
inc
or
jno
mov
pop
je
mov
adc
sarl
out
es
iret
pop
mov
xor
mov
insb
adc
mov
fdivrl
or
hlt
xor
mov
fs
jne
pop
mul
outsb
ja
hlt
imul
xchg
and
cmpsl
xchg
sub
sti
insb
mov
loop
lcall
shlb
and
or
cmp
mov
jbe
clc
jmp
mov
push
imul
mov
shll
xchg
pushw
adc
xor
push
test
fldt
and
mov
cmp
daa
pusha
mov
enter
fdivp
popl
pop
xor
or
or
lods
fdivrs
les
or
sbbl
aas
and
push
repz
xor
xlat
out
jno
test
mov
mov
outsl
xchg
enter
push
mov
dec
cmpsb
mov
sub
cmpsl
xchg
push
mov
ret
jo
push
inc
dec
jae
scas
clc
jg
push
add
xor
icebp
clc
jge
jecxz
test
std
pusha
mov
jp
test
pop
dec
shlb
and
imul
lcall
mov
ljmp
fimuls
mov
sbb
aaa
inc
cmpsb
int
js
add
push
ds
loope
jo
pop
mov
adc
push
cmp
call
stos
or
popa
xchg
xchg
call
addr16
cmp
mov
pop
inc
adc
or
lock
cli
cmp
cmp
loopne
pop
arpl
aaa
jp
xchg
movsb
shll
les
xchg
and
clc
scas
mov
pop
fstl
std
pop
sub
pop
inc
mov
lret
jmp
mov
fnstcw
in
fcoml
daa
jae
jmp
mov
xchg
in
pop
adc
mov
xor
pushf
out
cmpsb
lods
xor
mov
xor
fistpll
rorl
test
or
lds
push
pop
imul
rcrb
inc
stos
icebp
mov
lds
aaa
jae
idiv
inc
cli
call
add
mov
push
mov
cmp
sbb
adc
sbb
jae
movsb
sbb
mov
scas
sub
jo
xchg
dec
lret
fs
or
clc
lods
out
jge
cmp
imul
fmull
fdivrs
xchg
sub
mov
mov
pusha
jg
sti
popa
dec
adc
xlat
sbb
mov
pop
les
enter
jae
mov
fldt
and
daa
das
sbb
mov
mov
mov
mov
pop
push
and
xchg
in
and
mov
cmp
fs
or
dec
pop
mov
pop
ret
cli
mov
sub
ret
xlat
fisttpll
in
movsl
jp
icebp
ret
std
inc
call
pop
xchg
ret
push
jecxz
sbb
or
les
es
ja
xchg
pop
pop
mov
enter
arpl
js
xlat
lcall
aad
bound
cmp
pop
xor
sbb
add
mov
xchg
mov
add
ffreep
clc
push
mov
push
gs
mov
dec
jge
mov
nop
lret
lret
rcrl
pop
jae
adc
lret
or
sub
cmpsl
pop
scas
mov
scas
repnz
jb
cmpsb
pop
cli
movsl
mov
xchg
sbb
jp
jg
jbe
das
es
dec
mov
mov
shlb
push
mov
imul
and
lds
into
mov
jne
pop
pop
fs
ja
data16
jns
insb
in
mov
mov
vpmuludq
dec
cltd
or
adc
cli
in
lret
out
sbb
lahf
mov
pop
aaa
push
lret
shr
addr16
xchg
sbb
sbb
inc
jns
jae
fisubs
push
arpl
add
or
mov
mov
daa
scas
loopne
aam
outsb
mov
imul
sbb
lock
inc
dec
shrb
mov
pop
imul
pushf
in
sbb
stos
sbb
aam
jbe
cltd
das
inc
test
daa
mov
insb
movsl
jl
pop
mov
sbb
mov
out
lahf
sub
mov
pop
std
mov
mov
mov
aad
cmp
mov
mov
out
imul
mov
incl
jmp
pop
adc
addb
cmpsl
cmp
movsb
ss
pushf
pop
push
shrb
push
mov
lock
test
jge
jno
lds
lret
mov
jecxz
sbb
push
xlat
out
jp
xchg
push
or
icebp
cld
mov
ja
cli
jp
test
mov
and
movsl
daa
aad
out
adcl
and
jne
nopl
lods
or
or
adc
or
push
cwtl
pop
popa
popf
inc
jbe
and
outsl
pop
pop
das
sub
jecxz
out
jbe
pusha
sti
mov
and
fwait
mov
xchg
fists
xchg
repnz
popa
mov
mov
outsl
cs
add
mov
push
jb
or
rcrb
fdivs
add
ret
lods
in
xor
mov
addr16
not
scas
jne
into
sti
push
xor
dec
pop
inc
movl
rcrb
scas
push
in
cmpsl
mov
push
push
test
mov
mov
sbb
roll
pushf
addb
pop
fistpl
sub
imul
mov
dec
bnd
and
mov
lret
xor
out
cmp
push
cmp
mov
aaa
mov
push
outsl
or
outsb
cmp
pop
mov
jl
lret
ds
add
sahf
fsts
aaa
jns
clc
sub
or
inc
inc
xchg
aad
fadds
mov
leave
push
mov
dec
ja
rorb
sbb
push
insb
sbb
rol
out
add
call
cmc
mov
test
shl
pop
loope
je
rcrb
push
xchg
mov
scas
mov
dec
shrb
in
scas
pop
xchg
and
jg
adc
xor
xlat
fcoml
bound
pusha
xor
jnp
in
pop
popf
pushf
jae
decl
into
push
loopne
pop
loope
mov
cmp
jl
out
dec
push
lods
fsubrl
imul
int
or
aad
xchg
stos
jmp
sub
mov
pusha
push
stos
xchg
inc
aam
popa
ret
cmpsl
push
ficompl
int
cmpb
pop
jmp
iret
cli
or
cld
sub
insb
and
mov
jg
imul
sub
or
lret
sub
mov
or
mov
xchg
enter
ret
push
cmpl
stos
jbe
push
divb
push
or
imul
pop
adc
dec
sbb
adcb
fildll
push
sub
adcl
push
inc
cmc
pushl
and
stos
scas
xchg
hlt
push
inc
xchg
insb
add
jge
xor
bound
sub
pop
mov
out
fstl
inc
adc
sbbb
pop
pushf
cmp
add
notl
sub
adc
or
sbb
movsl
cltd
inc
or
in
xchg
loop
popf
mov
movsl
mov
in
and
cmp
aaa
rol
inc
and
or
shrb
cs
jge
vunpckhps
adc
pop
and
insl
mov
cld
jmp
push
cmp
out
sub
cmp
sbb
shll
mov
dec
leave
loope
mov
pop
imul
fildl
cmp
push
push
dec
aam
icebp
ja
inc
pop
loope
jo
cmc
test
jb
xlat
or
adc
jbe
jae,pt
push
mov
mov
lea
movsl
add
sbb
daa
aas
cld
pop
outsb
jns
cmp
setg
int3
imul
clc
sub
js
cltd
mov
lods
testb
cmc
repnz
push
addr16
jbe
movsl
and
bound
mov
or
mov
daa
dec
jae
mov
jl
test
xlat
addr16
dec
and
into
fwait
mov
call
bound
scas
jmp
jno
pop
mov
xchg
add
flds
mov
pop
xchg
sbbl
xchg
jmp
sbb
xchg
movsl
or
xchg
movsl
dec
push
cmpsb
mov
jnp
out
test
cmp
jbe
sub
shll
fsubrl
sbb
jg
push
xchg
es
into
mov
imul
dec
and
push
mov
inc
lret
jns
gs
cli
pop
xor
daa
xor
or
das
roll
imul
mov
sbb
and
lret
push
jecxz
nop
cmp
pop
xchg
loopne
or
xchg
ret
jne
enter
mov
push
aad
push
xor
adc
sub
ds
lods
aaa
ds
cli
in
xchg
or
imul
mov
cmp
pop
xchg
outsl
pop
inc
pop
in
mov
int
xor
cmpl
mov
sub
call
das
dec
movsl
pop
cmp
push
movb
jle
scas
push
xchg
add
rcr
pop
dec
and
iret
fcmovu
adc
ds
insb
dec
xchg
jg
into
dec
out
data16
cld
test
push
popa
pushf
and
mov
pop
jle
add
stos
pusha
out
push
push
cli
das
cmp
nop
xchg
ljmp
push
jo
divps
push
std
jns
mov
dec
xor
or
xchg
cmpsb
inc
cmp
ret
xor
out
xchg
mov
movd
cmpsl
or
mov
pop
push
add
push
pop
cmp
mov
insb
xor
lods
push
add
mov
test
fs
push
adc
repz
cmp
add
adc
cld
adc
and
clc
fcomps
cmp
adc
out
lods
cmpsl
cmp
lock
lock
arpl
in
cmp
popa
xor
rcrl
mov
and
and
daa
in
cli
repz
cs
dec
scas
imul
jmp
orl
push
ficoms
jb
or
mov
push
js
or
or
dec
push
loop
jg
loopne
in
add
or
test
addr16
jne
or
inc
sub
shll
lret
mov
imul
lds
sar
xchg
test
leave
mov
ret
outsb
imul
or
ret
fstpt
add
or
movsl
push
mov
popl
stos
hlt
orl
callw
or
in
add
xchg
sahf
mov
mov
loop
gs
ljmp
or
inc
mov
jle
and
xchg
cmc
cli
ds
test
fisubrl
lret
or
mov
js
ljmp
rcrb
inc
pop
pusha
lods
jae
mov
push
push
push
stos
fbld
lcall
dec
jp
sbb
loopne
movsb
inc
mov
cmp
jp
push
scas
ja
pop
mov
es
jb
pop
cmpl
aam
loope
xchg
jg
dec
dec
lock
repnz
cld
xlat
into
dec
cmp
out
out
mov
sub
cmc
mov
repnz
stos
outsl
ds
inc
cs
mov
rorb
int
pop
dec
mov
sarb
fisubs
jns
in
mov
mov
andl
ja
mov
push
xchg
xorl
ficompl
mov
inc
iret
into
scas
jne
pop
test
mov
or
lahf
fwait
adc
stos
iret
aas
shlb
stos
pop
xchg
cmpsb
cmovbe
mov
popf
das
loopne
in
stos
leave
insb
xchg
pop
ret
das
inc
push
pop
ret
sub
rcl
adc
inc
or
xor
or
dec
mov
aaa
loopne
mov
and
maskmovq
divl
and
call
sbb
daa
arpl
lods
cmpsl
aas
fldl
inc
add
xor
insb
mov
decl
inc
pop
movsb
js
lret
inc
mov
or
pop
inc
push
add
ffreep
out
ja
sub
and
xor
stos
mov
test
cld
popa
call
es
bound
and
pop
fcmovu
out
cmp
push
movsl
or
iret
sub
cwtl
int3
aaa
shll
xchg
xchg
dec
xchg
shrl
jb
out
or
js
loopne
pop
stos
add
mov
mov
inc
adc
xor
out
xchg
or
aad
inc
jge
mov
sub
add
out
jge
pop
sarl
push
jbe
dec
jge,pn
add
xor
add
in
adc
mov
and
popf
inc
insl
imul
and
xor
inc
iret
cmpsl
mov
xor
xchg
fidivl
sub
pop
lock
xchg
or
xchg
dec
lcall
push
pop
sbb
xchg
jmp
cmp
loopne
icebp
je
lret
rorb
into
enter
adc
and
adc
jle
mov
mov
mov
loopne,pn
jge
cmc
push
sub
out
ficoms
cmpsb
pop
xor
fldt
adc
popf
fs
les
mov
fs
inc
pop
push
jge
jge
lods
rclb
mov
out
mov
loop
jne
xor
adc
in
adc
cwtl
scas
dec
lods
movsb
xor
inc
sbb
loopne
push
xchg
cmpsb
not
int
repnz
inc
pop
in
xor
les
incb
jle
iret
shlb
inc
mov
push
cmp
pop
xlat
pushf
repnz
mov
push
pop
dec
xchg
add
dec
mov
cmp
movsl
lret
sbb
fnstcw
shlb
pop
aad
jae
push
movsb
in
sbb
xor
int3
inc
jns
out
js
sbb
adc
pop
jbe
into
jecxz
adc
mov
pop
sbb
mov
lret
inc
jae
cmp
aad
or
ret
push
mov
leave
repnz
pop
out
loop
push
lds
outsb
mov
xor
jl
lahf
mov
jle
sub
rclb
in
adc
xorb
cmp
data16
sbb
repz
add
mov
aas
xor
push
sub
lahf
dec
outsl
pop
jno
daa
xchg
jg
push
call
jmp
lods
in
xchg
sarl
adc
mov
popf
cmpsl
and
jle
nop
mov
push
xor
pop
orl
push
push
pop
jle
call
lret
pop
sbb
js
jb
push
and
add
movsb
addl
imul
das
push
mov
clc
fdivrl
bound
enter
jnp
outsb
cwtl
jo
bound
dec
jnp
xchg
or
mov
push
ljmp
sub
fsubrp
mov
aas
mov
addr16
scas
testl
or
lret
lock
call
add
inc
jnp
sub
pop
je
push
sub
jl
leave
and
xchg
testb
cmp
push
lock
lcall
sbb
mov
add
pushf
int
popf
lock
push
cmc
push
push
push
loopne
jmp
nop
adc
and
adc
int3
adc
xchg
xlat
insl
addr16
inc
mov
and
fidivrl
push
push
iret
stos
push
mov
and
popa
jb
mov
jecxz
fildll
shlb
adc
xchg
sub
test
cmp
or
std
mov
mov
sub
cmp
xchg
out
add
lods
sub
mov
mov
add
cmc
or
das
lods
outsl
insl
mov
or
test
es
cmp
jb
in
lods
popa
xor
mov
cli
cmp
push
cld
mov
call
stos
inc
push
jle
mov
lock
outsl
pop
rcrl
xchg
mov
fcmovnbe
sbb
popl
xorl
dec
outsb
leave
xchg
mov
xor
push
incb
sar
call
sub
push
filds
pop
pop
insb
loope
in
sahf
adc
cmp
mov
adc
or
ds
or
insb
jle
std
xor
imul
push
inc
loopne
das
test
rcrl
mov
jo
aaa
out
mov
stc
xchg
push
mov
shlb
jp
ljmp
outsb
jo
lock
inc
xor
fisubrl
stos
inc
sahf
aas
test
push
clc
popf
ljmp
dec
roll
cs
inc
mov
mov
or
pop
cmp
gs
push
lahf
mov
inc
and
jnp
scas
xchg
mov
xchg
das
cmp
mov
pop
nop
mov
popa
iret
jp
fisttpll
push
pop
cmpsb
cwtl
rcl
dec
lahf
mov
cmc
jns
inc
cmpsb
addr16
lods
pop
xchg
dec
inc
fs
push
and
xor
mov
inc
mov
xchg
aad
fsubl
mov
xchg
lret
stos
imul
mov
ret
mov
loopne
lret
push
out
xorl
cli
sub
jge
rclb
dec
in
push
inc
cmpsb
outsl
sbb
lret
sub
jbe
ret
andl
pushl
enter
aaa
imul
sahf
out
jne
loop
roll
cmpsl
mov
and
add
push
sbb
daa
add
or
push
sti
jg
ret
jg
lds
loop
push
cmpsl
hlt
xchg
push
adc
cmpsb
ror
xlat
out
out
adc
jecxz
push
loopne
shlb
mov
or
repz
add
in
sub
aaa
pushf
fadds
adc
aam
andb
cmp
lret
sbb
daa
mov
js
movsb
mov
add
pop
xchg
aam
dec
pop
jmp
mov
mov
cmp
icebp
xchg
add
loope
loopne
lods
add
std
loope
xor
dec
push
imul
sbb
sbb
outsb
push
and
sub
orl
subl
or
iret
inc
test
push
iret
loope
xor
test
dec
xchg
movsl
xchg
loopne
cmp
add
cmp
call
lahf
nop
xor
xor
sti
adc
pusha
adcl
in
mov
jmp
or
cmp
or
or
jecxz
xchg
add
jne
cmpsl
cmp
push
jnp
push
lea
icebp
daa
mov
xor
repnz
ret
mov
pop
or
out
mov
adc
imul
inc
add
test
test
std
and
cmp
xor
push
popf
pop
add
jbe
insb
hlt
jl
xor
cmp
cmp
cmp
jae
sub
mov
jecxz
or
inc
nop
and
adc
hlt
adc
xor
xchg
jecxz
ficompl
add
push
jbe
loopne
ljmp
mov
mov
lcall
aaa
xchg
jge
scas
fdivp
cmpb
add
jb
std
mov
dec
mov
and
out
and
lret
lods
popa
repz
inc
out
ficoms
pop
test
stc
fldl
jle
or
arpl
mov
aaa
mov
movsl
jp
popa
mov
mov
cmpsb
fmull
mov
or
inc
adc
iret
lods
fdivs
shl
aam
jne
addb
cltd
xchg
nop
jne
decb
and
mov
xchg
loop
rol
call
sub
and
les
inc
mov
jnp
sbb
xchg
cltd
lods
insb
inc
dec
mov
imul
mov
inc
jo
or
mov
xor
data16
aad
loop
mov
push
scas
pusha
xchg
rclb
mov
sahf
xchg
stc
cwtl
push
cltd
adc
outsl
ljmp
fucomp
inc
jno
shlb
cmpsb
aam
movsb
ficomps
lods
fadds
push
orb
push
ficomps
or
push
mov
ljmp
test
jo
mov
mov
aas
mov
push
subb
cmpsl
xchg
xlat
jbe
jecxz
sub
cmc
xchg
data16
rclb
xchg
mov
dec
icebp
stc
sub
push
and
mov
in
mov
cmc
aaa
flds
jmp
insl
aad
sbb
out
mov
inc
mov
cmpb
sub
leave
xor
push
loope
aam
pop
mov
das
mov
movsl
push
rol
inc
or
shlb
xchg
mov
cmp
seta
sbb
xchg
in
or
cmp
js
out
ret
lods
dec
cmc
mov
lods
lock
mov
add
fstpt
lret
push
and
jae,pt
or
pop
sbbl
mov
and
cld
in
jp
stos
vprotd
shlb
jnp
call
or
hlt
xor
sar
mov
or
pushf
arpl
sub
out
lds
pop
dec
lahf
test
pop
icebp
xchg
add
adc
cmp
ljmp
stos
in
int3
xor
clc
aas
and
jo
enter
in
jecxz
sub
mov
nop
test
cmpsb
mov
insl
scas
pop
push
test
std
push
mov
leave
push
adc
mov
jmp
xchg
mov
out
sub
jb
outsl
adc
jae
xor
shlb
adc
jle
daa
pop
or
add
movsb
jp
push
or
adc
xor
hlt
in
lock
in
pop
data16
std
jne
jnp
jae
movsb
xchg
and
pop
or
test
jge
mov
mov
roll
divb
xor
cmp
pop
or
sub
mov
mov
fldt
xchg
sub
aam
sti
mov
in
in
das
or
inc
or
push
outsb
push
insl
pop
shr
push
pop
loope
sahf
andl
xor
pop
or
xor
mov
sub
int3
push
pop
jnp
dec
push
test
stos
xchg
mov
popf
cmpsl
aas
rol
mov
rol
in
out
scas
fcoms
sbb
xchg
or
sbbl
inc
mov
add
pop
sbb
inc
dec
dec
out
or
mov
daa
xchg
aad
push
xlat
push
cmp
xchg
js
fstpl
add
cmp
in
add
jle
mov
stc
addr16
pop
or
xor
cmpsl
and
mov
push
lock
and
jae,pt
and
and
scas
decl
lock
lock
insl
inc
cwtl
adc
cmpsb
ds
pop
movsb
dec
std
xor
jge
enter
cmc
inc
sbb
stos
xchg
scas
jnp
orl
fcom
ret
add
icebp
mov
inc
lea
lods
and
cmovl
mov
leave
inc
dec
rcrl
push
jle
outsl
jae
in
push
and
add
or
add
cmpsl
sbb
gs
jl
mov
shll
push
pop
int3
in
inc
sti
add
fisttpl
dec
mov
add
ljmp
pop
mov
and
jmp
xlat
addr16
jmp
je
sub
sbb
scas
dec
cmpsb
popa
arpl
push
mov
aad
insb
dec
mov
shl
test
xor
leave
add
pop
or
dec
push
xchg
aam
and
mov
push
fbstp
sub
clc
movsb
aam
jo
in
shll
mov
sub
and
mov
roll
fs
cmp
sub
adc
push
jg
popf
push
scas
cmpsl
aas
scas
xor
scas
pop
add
sub
aas
cmp
jle
das
add
sub
mov
cmpsb
mov
xor
rcl
int3
xchg
stos
fs
in
in
push
or
jmp
dec
add
in
fdivs
jg
push
arpl
mov
mov
add
add
aam
xlat
mov
cmpsl
jb
outsl
and
add
lcall
push
and
sti
add
mov
sub
push
adc
in
addr16
cli
lods
jb
cltd
gs
loop
movsl
push
xlat
cmc
xor
inc
std
sub
call
in
adc
cmp
mov
dec
xor
push
mov
or
adc
stos
outsb
cs
xlat
or
iret
outsl
call
xor
lock
adc
fisttpll
ss
or
ret
xor
test
nop
test
int3
jnp
rcrl
aad
pop
dec
jo
pop
scas
push
fsubl
and
test
shl
dec
mov
cmp
xchg
es
shrl
cltd
jae
negl
sbb
cmp
movsl
add
push
int3
or
leave
inc
jns
loope
jnp
ds
std
dec
add
jge
loope
pop
lea
jne
sbb
push
and
jns
int
or
in
test
xchg
cmp
add
jmp
inc
inc
push
sub
bound
push
and
rcrl
addb
jmp
and
pop
sub
dec
pop
mov
cwtl
icebp
lahf
push
sbb
jae
jl
or
inc
mov
stos
mov
ds
mov
lea
mov
insl
repnz
int
jg
ljmp
fwait
repz
inc
fwait
add
lret
repz
fdivrs
and
mov
add
jb
add
sbb
popa
adc
test
dec
sbb
mov
push
repnz
xchg
jg
sti
ljmp
loopne
bnd
sahf
xchg
pushf
stc
mov
rolb
sub
adc
mov
aam
shl
rolb
daa
inc
fwait
arpl
sbb
loop
inc
leave
scas
mov
mov
mov
data16
sbb
lret
int3
lret
in
aam
push
shlb
lds
jl
js,pt
aaa
ret
jmp
aas
xchg
dec
mov
daa
mov
sahf
imull
aam
dec
lea
jge
scas
gs
pushf
stos
ds
adcl
sub
inc
inc
mov
test
paddb
int
xchg
mov
aas
orb
cmp
movsl
or
arpl
cli
inc
popf
ds
out
jb
clc
out
pop
xor
add
or
ss
lcall
mov
fwait
outsl
popf
mov
mov
jno
rorb
jmp
cmp
ret
push
push
pop
pop
lret
test
adc
sti
cli
jge
mov
or
stc
xor
push
aaa
jecxz
lahf
pop
pop
adc
pop
repz
pushf
pop
sbb
sub
pop
sub
pushf
lds
fcoml
ror
mov
mov
or
loop
pop
fnstcw
push
aam
adc
es
iret
rorl
xor
push
imul
clc
call
fcoml
add
int3
jp
sbb
sub
inc
adcl
out
push
call
dec
ljmp
insl
adc
shll
or
mov
mov
xor
aaa
cmpsl
push
mov
xchg
jbe
addb
cs
ret
xlat
dec
push
test
jmp
fwait
inc
mov
jecxz
sbb
in
sbb
add
jmp
insl
xchg
mov
fldcw
sub
mov
pop
mov
pop
jge
in
ficompl
jns
rcrl
push
sarb
mov
inc
loopne
lret
dec
test
adc
cmp
push
cli
dec
lods
fwait
mov
lea
enter
andb
pop
xchg
data16
negb
int
ljmp
rorb
mov
adc
and
out
out
xchg
adc
xchg
xlat
outsb
repz
mov
xchg
fildl
aam
pushf
test
cmc
mov
dec
inc
mov
int3
pop
in
sbb
push
cmp
imul
int
gs
fstl
fstl
lret
jg
jne
ds
cmpsb
je
sub
movsl
stos
scas
pop
filds
imul
push
clc
outsl
sub
dec
adc
mov
xor
or
xchg
sti
pushf
ffree
ds
mov
add
xchg
or
pushf
pop
sub
js
push
cwtl
dec
mov
sub
dec
ud1
xchg
xor
inc
cmpsb
daa
cmp
sub
jno
adc
lea
leave
add
in
cmp
rolb
and
bound
clc
adc
dec
xchg
xor
push
test
stc
in
cli
xchg
ficoms
sub
xchg
mov
add
out
sub
jle
cld
cmp
mov
test
sahf
adc
jmp
and
mov
les
dec
mov
shll
sub
jg
ja
or
push
das
mov
popf
jo
ss
push
cmp
or
into
sbb
shll
fadds
insb
in
mov
out
ljmp
ja
cwtl
sbb
sar
pop
stos
cmp
add
xchg
nop
or
cwtl
in
pop
mov
mov
jecxz
shr
dec
sahf
aam
cld
scas
mov
inc
xor
outsb
cli
faddl
mov
ss
in
or
sub
cli
movsl
inc
adc
dec
pop
adc
or
or
mov
popf
adc
mov
cmp
cs
enter
mov
cmp
pop
pop
mov
test
push
stc
mov
and
daa
and
lahf
jge
cmp
jae
outsb
cli
xor
arpl
xor
popf
sub
and
scas
mov
inc
xchg
stos
dec
cltd
js
dec
ret
es
gs
cmp
pop
shll
cli
repz
xchg
lcall
adc
inc
xchg
mov
xor
scas
pusha
sbb
dec
stos
pop
push
xor
push
pop
cmp
mov
or
push
decb
repnz
xchg
mov
lods
nop
xor
dec
cld
xchg
mov
test
icebp
sbb
push
loopne
xor
je
xchg
push
adc
xor
test
test
out
push
addr16
pop
mov
lds
ds
mov
scas
xor
mov
jge
loop
cmpsl
cli
iret
add
xchg
lret
jg
cwtl
adc
mov
lret
jb
push
inc
sub
div
sub
or
mov
dec
jmp
jno
pop
xorl
jmp
push
movsb
jne
pushf
sbb
bnd
in
loop
or
out
cmpsl
pop
mov
sti
pop
xor
adc
ja
or
andps
inc
leave
aam
popf
cmp
inc
push
sub
insb
addb
lods
fsts
repz
push
jbe
lds
adc
inc
xchg
adc
and
mov
int3
cmp
imul
incb
paddb
test
xchg
xchg
mov
nop
adc
adc
rorb
enter
shrl
into
fwait
hlt
pavgw
mov
sar
cld
scas
mov
jb
in
push
dec
push
pop
or
pushf
shlb
mov
dec
jae
inc
repnz
xchg
lock
or
mov
cwtl
jnp
clc
push
adc
lods
jae
outsl
pop
fcoml
inc
xor
popa
push
faddl
inc
gs
ja
daa
cli
dec
dec
add
das
jnp
test
leave
dec
jp
rol
testb
lret
push
incl
fimull
ds
rcll
and
pop
cmp
data16
fsubp
add
xchg
adc
pop
push
jbe
pushf
jbe
push
cmp
and
fwait
dec
sub
jle
mov
inc
adc
sbb
in
push
xchg
dec
aam
cmc
push
dec
inc
daa
xchg
repnz
cmp
mov
fsubrl
add
je
push
mov
inc
pushf
sub
lds
pushf
xor
stos
nop
ljmp
filds
push
test
daa
xchg
jnp
imul
pop
xor
xor
adcb
and
mov
sarl
xlat
or
lds
data16
test
adc
push
mov
lds
jmp
inc
dec
mov
sbb
popf
pusha
add
int3
imul
and
cmp
pop
push
sub
dec
mov
rcl
aad
sub
jge
xorl
ds
jle
sub
in
sbb
dec
add
test
push
jle
jle
xor
icebp
and
call
pop
stc
je
pop
fildll
pusha
jb
inc
xchg
or
or
mov
inc
pop
mov
insl
loopne
in
mov
outsb
mov
jl
inc
xor
add
fimuls
mov
jge
xor
pop
pusha
jnp
out
push
lds
mov
into
sbb
cmp
adc
fidivl
adc
outsl
cmp
fs
std
add
in
add
mov
push
out
adc
pop
xor
mov
sub
in
mov
xorl
xlat
mov
sbb
inc
sahf
andl
arpl
out
push
jle
jle
xor
cmpb
test
or
rcrl
inc
jg
mov
pop
mov
clc
mov
mov
jle
xor
fs
mov
push
sti
sub
cmp
popa
sbb
cmp
mov
movl
pop
test
stc
jae
add
cmp
leave
mov
mov
cmp
mov
movsb
mov
jmp
in
cmp
xchg
rolb
mov
cltd
call
jmp
lcall
out
enter
shll
ljmp
je
sti
jnp
movsb
in
loope
xchg
ror
jge
jmp
shll
cld
inc
pop
push
dec
inc
xlat
sub
mov
dec
pop
cmpsl
loope
movsb
jge
les
ds
add
sub
push
repnz
cmp
pop
and
or
popl
sbb
sub
leave
mov
push
fsubrs
daa
cmpsl
mov
popf
pop
ljmp
and
jge
xor
lock
pop
xchg
cmp
ss
inc
pop
push
fildl
movsb
icebp
out
adc
xchg
mov
ss
add
ljmp
ret
std
sbb
stos
sub
dec
xchg
orb
rorb
jle
and
rcll
push
adc
addr16
icebp
fcompl
pop
or
into
btr
or
daa
les
add
shll
dec
je
je
lcall
pop
sarl
sti
movl
inc
sbb
fwait
sbb
jl
cmpsb
movsl
outsl
movsl
aas
xor
sbb
jecxz
fdivrs
and
jecxz
cmp
pop
in
fnstcw
popa
je
dec
incl
imul
mov
and
cltd
imul
mov
scas
xor
leave
adc
cmp
outsl
dec
push
ret
mov
inc
test
iret
xor
cmpsb
sub
lods
adc
in
cmp
mov
fstpl
aas
loopne
mov
shll
push
dec
pop
pop
arpl
jno
cld
jmp
mov
push
lcall
jnp
xchg
sub
cmp
js
mov
or
xchg
xchg
test
push
xchg
jns
push
xchg
or
inc
jns
sarl
movsl
loopne
sub
jge
adc
sbb
sub
fldenv
ror
jp
sbb
xchg
aad
mov
mov
cmpl
jbe
inc
dec
fwait
test
xchg
rorb
hlt
fdivrs
imul
xor
int3
sbb
push
lahf
or
mov
mov
sbb
cmp
xchg
pop
insl
in
mov
push
add
cs
test
sbb
test
or
and
cwtl
mov
jp
fcoms
negb
inc
pushf
stos
mov
outsl
xor
mov
or
bound
push
jg
cmp
sub
jg
sub
dec
mov
inc
mov
adc
or
sbb
leave
jo
inc
clc
adc
xchg
mov
scas
testb
stc
in
rcrb
js
out
or
push
dec
pop
les
loope
cmp
xchg
and
xor
mov
inc
xor
push
popf
xchg
in
fisttps
repz
mov
xchg
cld
decb
dec
mov
jb
push
xor
fsub
imul
stos
or
fidivl
jle
cwtl
and
jge
loop
pmaxub
jp
adc
xor
int
lea
jnp
cmp
push
hlt
out
lret
dec
cmp
or
imul
pop
dec
adc
mov
mov
loop
pushf
aaa
cltd
lahf
mov
adcb
test
pop
scas
mov
jno
lret
lahf
insb
jmp
lods
sub
arpl
jg
pop
in
sbb
xor
push
jae
pop
fstpl
cltd
fbstp
xchg
sub
sbb
sub
adc
cmp
mov
push
movl
in
pop
mov
ret
fptan
inc
adc
push
pop
sahf
xchg
in
es
cmpsl
mov
xlat
jb
inc
inc
mov
icebp
inc
inc
cmpsb
addb
fiadds
stos
and
jecxz
sbb
mov
mov
adc
jp
adc
imul
and
xchg
mov
xchg
gs
jg,pt
xor
sti
scas
xchg
mov
mov
inc
mov
mov
mov
int3
movlhps
in
stos
in
testb
fistpl
pushl
pop
xor
bound
add
insb
inc
stos
sub
add
psrlw
cli
mov
mov
mov
mov
lahf
adc
cltd
lock
stos
inc
out
xor
inc
testb
xor
sub
jecxz
jb
jae
push
push
or
in
arpl
mov
clc
scas
jecxz
arpl
pop
mov
sbb
lea
test
idiv
cmp
sub
cmpsb
lea
shlb
mov
cmp
push
cmp
lcall
cmpsl
js
test
jp
scas
mov
in
arpl
jge
or
lds
jmp
fisubrl
pop
pop
pop
leave
repz
xor
xor
push
dec
dec
or
das
or
and
jb
push
sbb
andl
dec
lods
mov
add
inc
add
sbb
adc
rcr
int3
call
mov
inc
jg
mov
mov
push
fnsave
iret
mov
dec
mov
pop
sarl
insb
xchg
fisubl
jg
xchg
gs
fimull
jle
adc
ds
roll
jmp
xor
imul
inc
dec
xorl
jbe
es
lock
pop
out
scas
js
mov
xchg
cltd
or
call
jbe
enter
clc
add
mov
jmp
sub
push
jmp
xchg
dec
xor
push
sahf
lods
inc
rcl
mov
sarl
int3
push
dec
jbe,pn
es
xchg
push
gs
jo
cmp
lds
push
cmp
xchg
out
mov
jne,pn
mov
addr16
fisttpll
jge
xchg
popf
dec
and
bound
or
fcomi
xchg
and
add
pushf
dec
inc
mov
dec
adc
xchg
add
movl
lret
inc
fldl
xor
ret
xor
xor
add
lcall
add
jg
bound
push
or
daa
nop
jmp
push
add
push
sbb
popa
xor
sub
dec
pop
fsts
jns
sub
lea
sub
jno
adc
or
cmpsb
aad
test
jle
pop
cmc
sahf
repz
idivb
mov
pushf
std
dec
cmpsl
insb
cmpsl
imulb
pushf
or
pop
push
xchg
out
sub
icebp
mov
adc
jno
test
adc
push
cmp
xor
adc
jl
mov
lcall
push
mov
jno
insl
test
sti
lret
or
leave
push
fimuls
inc
data16
cmc
subl
inc
fldenv
jae
jns
xor
and
pop
push
in
enter
push
add
sub
mov
pop
fldenv
mov
push
push
pop
mov
inc
adc
lcall
xorl
sbb
out
sahf
and
jg
imul
inc
pop
insb
andb
std
cmpsb
cmp
subb
or
mov
fwait
push
mov
xlat
nop
insl
int3
sub
add
idivb
xchg
xor
lcall
dec
out
xchg
dec
push
xor
push
or
and
out
imulw
int3
popa
loop
sub
sbb
jg
pop
push
frstor
mov
jbe
and
pop
fs
aad
mov
pop
not
stos
push
rolb
sbb
mov
testb
sbb
mov
or
jb
fildl
daa
cmpsb
orb
jae
in
jmp
push
pop
sub
shlb
fdivs
cwtl
aam
shrl
std
mov
in
outsb
loopne
dec
xor
dec
fnstcw
cmp
jle
sbb
roll
ficoms
scas
mov
sbb
and
int
adc
inc
pushf
sub
mov
lods
daa
fildl
push
mov
fucom
js
aas
inc
loop
enter
push
in
fcoms
clc
ret
mov
push
mov
push
push
mov
cmpl
sahf
fmull
fsub
imul
sahf
add
xor
add
dec
testb
add
sbb
or
mov
test
out
not
and
and
pop
test
int3
scas
cltd
jge
add
movsb
gs
mov
xchg
in
xor
fxch
int3
mov
shl
leave
adc
ficomps
insl
pop
ljmp
mov
dec
or
xchg
repnz
imul
pushf
sbb
shlb
cmpsl
cmp
add
movsb
push
mov
fadds
and
dec
test
jge
dec
sbb
cmpsw
inc
xchg
xor
xchg
bound
arpl
je
icebp
sahf
insb
mov
mov
insl
mov
dec
es
pop
adc
shr
push
push
lds
dec
sbb
inc
xchg
inc
outsl
fld
pop
xchg
pop
mov
not
push
loope
mov
push
add
cltd
subb
cmp
cld
sbb
int
sbb
mov
sbb
add
inc
int
lea
stos
inc
jg
mov
jns
popa
jb
jae
movsl
xor
jb
fidivs
cld
push
mov
mov
mov
out
adc
mov
clc
mov
or
jg
and
mov
add
mov
orl
adc
adc
mov
xor
jns
jo
ss
loopne
jge
cwtl
lods
icebp
scas
movb
fadd
mov
mov
dec
fstpt
mov
sbb
cld
adcl
cmpsl
scas
cmp
adc
dec
lods
inc
sub
inc
lods
movb
insb
cmp
cmc
jl
push
repnz
cmpsb
push
pop
shll
mov
daa
sub
xchg
sub
sbb
mov
rolb
ja
pop
mov
mov
push
xor
or
imul
push
cmpsl
mov
add
cmp
xor
or
cmpsb
arpl
sbb
xchg
sbb
xchg
aaa
testl
dec
add
sub
int
jb
mov
bound
nop
jle
lcall
sbb
mov
xor
scas
sbb
cmc
loope
pop
sbb
mull
jle
pusha
cmc
push
dec
inc
inc
mov
adc
mov
push
cld
pop
mov
rcl
adc
in
pop
sbb
lds
jp
clc
hlt
ret
pop
shlb
test
in
inc
out
rorb
pop
and
pop
or
fcmovne
push
xchg
scas
hlt
and
stos
dec
xor
test
jb
mov
xchg
ds
and
cmp
inc
sub
or
repnz
lds
xor
je
lds
int3
xor
sti
aam
call
loop
in
decl
mov
nop
in
add
repz
mov
xor
xchg
std
sub
into
cwtl
mov
stos
andl
push
movsl
cltd
and
aaa
sub
mov
xchg
xchg
jecxz
dec
cmpl
ja
std
ja
cli
or
mov
into
push
pop
in
and
fcmovb
dec
push
mov
pop
scas
pop
rcll
cmp
mov
in
inc
shrl
pop
dec
es
mov
enter
jne
bound
arpl
xchg
in
je
mov
roll
pop
sub
fidivs
shlb
xor
sub
push
push
mov
mov
dec
cmp
aaa
fwait
sti
xor
xchg
popl
rcrb
jo
adc
sbb
sbb
punpcklwd
roll
sub
ret
xchg
sbb
push
jle
dec
xchg
cmp
lds
xorb
adc
push
ret
ljmp
mov
inc
cmp
ljmp
scas
jns
cmpsb
or
in
xchg
scas
mov
inc
fsubrs
cmp
and
nop
rol
jo
cld
mov
in
data16
icebp
imul
xchg
aas
lea
push
xchg
lods
push
xchg
inc
in
lods
xchg
sbb
mov
inc
pop
dec
jne
ljmp
adc
stos
aam
aam
ret
cld
xchg
fs
push
cmpsl
fcomi
fisttpll
mov
jnp
rcl
and
rol
xor
cmp
xchg
mov
xchg
dec
pop
pop
mov
and
nop
push
and
mov
mov
mov
aad
test
add
mov
dec
pop
mov
arpl
mov
aam
lahf
ja
mov
dec
and
and
enter
or
jne
rol
int
add
lret
mov
push
mov
mov
xor
fdivl
sub
cmc
stc
icebp
push
push
sarb
mov
cmp
lods
loop
clc
lds
pop
mov
inc
leave
pop
xchg
test
mov
sub
add
ds
movsb
jnp
or
xor
sub
in
or
jb
xchg
dec
mov
icebp
or
dec
adc
test
push
sbb
add
xchg
adcl
iret
and
sub
sbb
sub
fiadds
dec
mov
jmp
shufps
clc
daa
mov
dec
adc
sub
fisubl
sub
add
mov
dec
pusha
jl
push
insl
dec
or
in
fs
adc
ljmp
or
sub
sbb
cwtl
cmp
jo
mov
dec
cltd
cmpsb
sub
loope
mov
enter
add
jge
ljmp
loopne
dec
es
mov
aas
sub
sub
clc
or
nop
shl
movsb
arpl
out
stc
outsl
ud1
in
not
xchg
sbb
xchg
mov
stos
sub
mov
sbb
aas
scas
mov
aaa
jbe
mov
mov
sarl
push
cmp
test
movsl
xlat
ljmp
scas
sbb
jno
cmp
hlt
cwtl
xchg
and
sahf
lret
mov
and
fnstsw
popf
sbb
out
sub
sbb
aad
loop
mov
cmovb
adc
push
in
arpl
aas
pop
mov
call
cs
cmp
jg
pop
fsts
mov
and
inc
fimull
data16
in
cmp
in
cmp
jb
push
test
pop
in
stos
push
popf
fisubrl
jnp
rol
inc
mov
sbbb
push
cmc
out
incl
lahf
es
mov
pop
clc
inc
cmpsb
push
jne
cmp
add
mov
lds
add
jg
lret
mov
sbb
mov
loopne
mov
fidivl
cmp
cmp
mov
fdivrl
das
xor
sahf
in
insb
mov
mov
sti
repz
cmp
jno
mov
loope
sub
add
add
insb
testb
add
adcl
testl
cmpsl
in
pushf
pop
add
outsb
out
dec
ret
or
dec
jns
outsb
dec
dec
sub
test
mov
div
into
inc
andl
push
pop
stc
add
push
jmp
mov
sbb
iret
jno
mov
mov
sti
insb
iret
jg
mov
mov
repnz
cwtl
ljmp
fcoms
xchg
sbb
lahf
sahf
adc
add
push
insl
mov
mov
in
cmpsb
mov
cmc
ror
xor
loope
loope
mov
imul
sbb
sub
inc
cmc
f2xm1
rdpmc
adcb
and
orb
mov
jne
mov
pop
add
adc
cmpsl
xchg
stos
xchg
rorl
test
shlb
loope
push
cld
xor
shlb
or
mov
cmp
sub
sbb
std
jae
mov
jne
pop
add
iret
push
stc
adc
jo
mov
cltd
push
mov
add
cmpsb
in
sub
xor
outsl
xor
ret
pcmpeqw
fstps
and
xchg
scas
arpl
sub
xor
jge
sahf
imul
fldcw
push
jmp
enter
pop
pop
popf
pop
ljmp
icebp
pop
push
addl
lcall
xchg
cmp
xchg
mov
ds
pop
test
scas
fcompl
std
test
cmpsb
mov
pop
rcll
xchg
dec
mov
inc
xor
mov
out
or
popa
lods
lods
push
arpl
jmp
leave
push
scas
lods
push
xchg
sbbl
aad
fstpt
andl
jo
ss
imul
pushf
adcl
xor
bound
mov
push
add
mov
xor
or
repnz
sub
sub
xor
xchg
in
inc
xchg
div
push
in
pop
loopne
mov
or
jl
pandn
es
mov
sub
mov
test
stos
stos
sti
or
je
pop
lret
not
movsb
and
vsubss
sbb
jns
lods
or
xlat
inc
cmp
xor
add
push
cmp
mov
pusha
pop
mov
outsl
mov
jge
jae
xorb
mov
xor
fdivs
pcmpeqb
dec
in
jne
iret
and
dec
scas
or
popf
dec
fbld
sbb
xlat
inc
jns
das
sbb
cmpsl
pop
or
add
ret
mov
stc
add
jo
loope
out
mov
jo
mov
jmp
jmp
in
xchg
push
pop
rcrb
out
xchg
jae
dec
push
add
mov
mov
add
mov
icebp
push
jns
sbb
ret
mov
test
dec
popa
lods
je
jno
mov
scas
cmp
mov
cmpsb
push
mov
mov
in
out
popf
js
cmp
cltd
mov
push
and
mov
sbb
movsb
mov
test
mov
xchg
push
or
xor
cmc
adc
xchg
loopne
shr
sti
test
cs
mov
sarb
adc
ret
inc
adc
adc
mov
pushf
mov
outsb
pop
dec
rolb
add
cld
jmp
xchg
jmp
mov
add
xor
pop
mov
int
xor
into
add
imul
and
jg
outsb
jbe
jge
cltd
js
jbe
xor
les
jae
rorb
cmp
repnz
pusha
dec
add
dec
rolb
sub
mov
mov
fwait
aaa
xchg
call
mov
iret
push
mov
scas
mov
out
in
or
push
leave
push
iret
or
xorl
lods
loopne
mov
adc
lcall
rolb
cmp
mov
hlt
inc
aaa
jbe
test
fsubrp
jnp
test
jmp
push
mov
jb
mov
les
outsb
mov
fldcw
inc
pushf
movsb
pop
jecxz
pop
mov
push
cmp
mov
lret
idivl
stc
fldt
insl
push
mov
mov
std
and
shrl
xlat
mov
jns
in
xor
in
mov
std
push
push
popa
sub
idivb
lods
or
adc
scas
sahf
cwtl
and
aas
imul
mov
push
stos
add
in
out
push
inc
int
sbb
lcall
out
pop
bound
adc
mov
ret
mov
jnp
xchg
lcall
xchg
add
addb
ss
inc
test
dec
aas
push
inc
push
xor
jmp
push
add
mov
movsb
mov
out
lcall
inc
and
imul
dec
mov
std
mov
addr16
pop
shll
pop
jle
mov
stos
ret
cmp
jne
dec
adc
dec
aad
fdivrs
or
loopne
pop
jno
lahf
sub
and
jns
push
lahf
fsts
sbb
data16
sahf
xchg
shlb
pop
test
mov
and
cmp
sbb
lods
push
sqrtps
js
test
shll
outsb
cmp
mov
mov
jp
push
dec
adc
mov
sbb
ret
cmc
out
push
xor
inc
mov
fidivrs
or
jmp
push
sbb
xchg
jnp
pop
mov
orl
sub
insb
hlt
pop
dec
lods
sahf
mov
push
or
mov
imul
nop
or
cmpsb
jmp
ss
mov
or
jo
cs
or
ja
xorl
cs
stos
or
fwait
cli
dec
lahf
rcl
pop
lods
fcmovne
js
inc
pop
add
push
inc
dec
add
mov
jae
dec
fmull
fidivl
sbb
pusha
add
scas
push
aaa
add
ss
push
add
and
jno
xor
and
or
mov
push
jns
les
lods
faddl
mov
inc
mov
std
xchg
ss
cmpsl
pusha
sti
push
aas
outsb
dec
and
mov
popa
nop
js
fisttpll
es
mov
add
ss
into
test
orl
cmc
clc
in
aaa
ds
cmpsl
rolb
pop
mov
and
stos
fwait
push
cmp
fnstenv
stos
or
xor
pop
jb
xor
xchg
pusha
addps
pop
sahf
mov
outsl
sbb
std
sbb
jb
aas
sub
dec
xor
outsl
jmp
popf
test
rorl
add
data16
mov
hlt
rol
sbb
mov
das
mov
inc
dec
push
cs
mov
mov
js
xchg
or
sub
dec
faddl
ss
or
jmp
fnstsw
dec
ljmp
out
pop
adcb
or
inc
xor
cmc
shrl
ret
or
into
in
sahf
push
fidivl
cwtl
cmpsl
xchg
or
jne
cmpsl
push
sbb
sub
arpl
and
or
insb
lahf
inc
fdivrp
push
and
in
mov
in
sbb
cmp
rorl
mov
cld
aaa
scas
pushf
mov
xor
lcall
pop
inc
fwait
xchg
push
fidivrs
jle
ja
into
gs
cmc
and
dec
sub
movsb
stos
fsubrl
inc
and
cwtl
and
insb
into
xor
int
sahf
sbb
fs
lock
inc
test
add
dec
lds
sbb
pop
imul
add
ret
mov
pop
sub
push
adc
lock
into
or
pop
cmpsb
test
or
mov
xchg
push
push
jnp
jle
pushf
loopne
or
xlat
stos
jns
sahf
mov
divl
dec
push
int
xor
cmp
inc
mov
cmpsl
inc
or
sahf
iret
ljmp
jno
test
or
scas
fstp
fwait
push
leave
xor
add
pop
pusha
xchg
jl
iret
xchg
cmpsl
sbb
clc
adc
pop
ds
stos
mov
or
fsubrs
pop
cmc
push
mov
adc
cmp
adc
add
mov
stc
mov
out
or
mov
cmp
cmp
test
add
movsb
movl
pop
inc
lret
xor
xchg
into
mov
insb
pop
fcoml
push
xor
jmp
sub
push
xchg
adc
insl
int
or
scas
ret
fadds
outsb
incl
mov
adc
pushf
mov
sub
fildl
xchg
and
fdivr
push
xchg
cmpb
sarb
test
aas
pop
lods
sbb
mov
fwait
push
add
sbb
sub
cmp
int
stc
push
idivl
push
mov
adc
mov
loope
aas
scas
dec
push
ret
flds
adc
sahf
imul
mov
jnp
xlat
repnz
movsl
fcomps
adc
dec
or
repnz
or
mov
fwait
pop
daa
xchg
push
push
mov
movsl
lds
cmpsb
mov
aam
add
add
and
imul
adc
sub
inc
add
fadds
xor
iret
in
cmp
pop
fldl
faddl
jbe
xor
cmp
mov
xchg
xor
daa
push
dec
mov
cltd
outsl
sbb
inc
sbb
outsb
sbb
or
pusha
lahf
fwait
push
aad
mov
jmp
test
and
sub
cmp
incb
rcr
cmc
mov
int
in
in
dec
xor
loop
lods
adc
rcll
push
pop
dec
in
call
jb
jno
daa
test
ss
leave
shll
dec
aad
add
cmp
std
fwait
and
or
dec
mov
pop
jno
push
dec
add
mov
out
cld
unpckhps
int3
gs
loop
and
pop
mov
sysret
xor
cld
je
shll
mov
xor
adc
xchg
mov
lret
pop
mov
ljmp
mov
jo
pop
call
and
jp
adc
xor
dec
push
jge
repz
stos
sbb
mov
push
adc
dec
mov
sbb
popa
push
das
fcoml
in
cs
enter
hlt
dec
jge
aam
cs
add
test
push
push
int
scas
aaa
xchg
mov
mov
aad
mov
xor
jnp
inc
jae
sbb
and
cli
push
popa
jno
sub
mov
out
jnp
inc
inc
int3
ljmp
adc
jae
push
and
out
xchg
out
call
out
mov
dec
fstp
add
mov
repnz
daa
outsb
fcompl
lcall
xchg
sub
adc
imul
xchg
cmp
pop
mov
adc
lret
add
fistl
jnp
arpl
pop
sbb
push
iret
inc
jmp
mov
or
in
xor
or
std
cmp
in
movsb
fdivl
pop
lods
sub
idivl
adc
push
jmp
aaa
jg
mov
jmp
push
scas
fsubrs
sbb
lcall
push
sti
xorb
sti
out
sarl
sar
and
movsl
scas
data16
fisttpl
mov
cwtl
mov
es
jl
lods
xor
and
xor
add
imul
int
icebp
mov
insb
inc
add
push
lcall
mov
xchg
and
cmp
arpl
inc
fwait
mov
or
test
mov
jmp
xchg
lret
and
pop
pop
or
jge
add
pop
mov
insl
sub
sbb
or
flds
inc
push
inc
mov
jp
add
dec
pusha
pop
jno
push
or
cmp
loope
xor
sub
sbb
sub
std
cs
in
frndint
fdivl
sub
pushf
dec
aam
cmp
pop
rcrl
xchg
int
jne
dec
and
out
in
mov
jns
jns
subl
mov
ficomps
push
xchg
ror
popa
enter
ljmp
lretw
sub
pmuludq
lcall
out
stos
jecxz
and
jns,pt
push
test
pop
cmp
bound
sbb
dec
jl
stos
dec
xchg
ror
push
sti
mov
daa
repnz
cmpsl
frstors
or
call
imul
lods
insl
mov
xchg
xor
je
cmp
and
cltd
dec
dec
shl
cmpsb
lea
pop
jbe
mov
std
mov
jecxz
ja
dec
lret
xor
push
pop
clc
iret
dec
xor
out
stos
out
test
das
and
add
pop
fistpl
imulb
adc
out
lahf
imul
xchg
jecxz
das
dec
inc
loopne
enter
add
test
push
call
outsb
pop
or
mov
push
jle
in
adc
pop
clc
shrl
insb
add
pop
or
pop
stos
ja
lcall
dec
aam
mov
in
mov
xor
data16
adc
push
mov
xchg
cwtl
sysenter
inc
je
pop
mov
inc
mov
scas
cmc
sub
jmp
into
inc
adc
inc
shrb
loop
lods
aaa
xor
dec
ret
out
xor
je
adc
aam
sub
mov
adc
sbb
jmp
mov
mov
movups
ja
push
addl
mov
sbb
mov
cltd
push
lods
ja
sbb
fnsave
enter
nop
mov
cmp
jmp
mov
ret
pop
or
pop
or
mov
sbb
pop
sbb
dec
das
mov
mov
outsb
es
inc
int
out
stos
push
mov
xor
loop
adc
or
les
pop
jp
ret
ss
lcall
cmp
sub
or
inc
xchg
push
dec
test
and
or
xchg
or
movsb
pop
aas
cwtl
adcb
or
pop
pusha
xorb
push
dec
test
out
xchg
mov
ficoms
jl
mov
out
cmpsl
lahf
pusha
jns
mov
jae
in
and
or
add
and
adc
popa
or
push
cmp
out
adc
aam
and
or
out
xchg
mov
push
mov
mov
pop
pop
pop
sbbb
adc
enter
lock
and
or
rcrl
cwtl
scas
adcl
jae
mov
daa
fmuls
outsl
pop
je
cmpsl
push
out
in
out
pop
push
dec
dec
cmpb
inc
scas
mov
mov
aad
lret
push
loopne
push
jmp
popf
jnp
inc
mov
sub
pushf
xor
into
ja,pn
scas
fld
jae
add
dec
or
aaa
pop
xlat
popa
lea
xlat
inc
adc
loop
in
fadd
out
mov
xor
xchg
pusha
sub
in
mov
add
pop
push
pushl
imul
out
xchg
shlb
pushf
or
mov
js
ret
loopne
xchg
out
test
mov
sbb
std
xchg
jge
call
dec
fndisi(8087
sub
sub
xlat
mov
mov
stos
sub
loope
mov
cld
das
roll
adc
adc
push
mov
cmp
pop
dec
sub
ja
enter
cmpb
sar
jo
rcrl
pop
push
and
sbb
xchg
jno
mov
je
adc
mov
and
loopne
xchg
or
mov
aad
out
inc
scas
out
inc
in
sbb
jo
lcall
sbb
xor
lods
lods
jmp
and
sahf
fisttpll
imul
ret
inc
addr16
xchg
fistpll
out
je
int3
xchg
jb
mov
outsb
lea
inc
ja
push
cmc
ja
lret
sbb
inc
jmp
push
fdivp
cltd
movsb
mov
cmp
lret
mov
iret
adc
sbb
adc
push
sbb
jle
lock
enter
fnstsw
into
ja
mov
jle
jmp
mul
sbb
lahf
arpl
xor
aaa
pop
sub
mov
cwtl
cmp
and
mov
insl
mov
pop
mov
cmpsl
mov
or
xor
push
fimuls
sbb
xchg
dec
test
xlat
jp
or
push
mov
mov
inc
mov
adc
pushf
pushf
cmpsl
sbb
js
mov
sub
aam
dec
cld
sbb
repz
push
lret
cmpsl
fcmovne
fdivl
push
into
outsl
repz
pop
je
mov
repz
repz
mov
js
push
std
mov
shrl
ret
loope
fwait
and
or
push
cmp
xor
ss
in
push
aaa
inc
push
sub
das
mov
pop
xor
lds
dec
sahf
das
mov
add
test
and
push
imulb
stos
push
xchg
sbb
cmc
sbb
and
pop
dec
inc
repz
pcmpgtb
rcll
pop
test
add
popa
add
popa
or
test
imul
pop
adc
xor
xor
cmp
jmp
inc
lods
pop
and
jo
in
scas
lds
xchg
cltd
cli
ljmp
mov
rorb
xchg
sahf
out
xchg
jle
aad
inc
adc
pop
mov
add
mov
jg
jp
test
lahf
cmpl
clc
pop
inc
xlat
addl
mov
xor
inc
popf
mov
mov
js
notl
mov
movsb
inc
jae
sub
mov
iret
inc
mov
add
lret
pop
bound
repz
mov
xor
mov
cmpsl
scas
inc
js
adc
scas
dec
loop
pop
jb
shll
or
in
mov
aaa
jae
cmc
into
sub
sub
push
xchg
add
out
rcrl
pop
add
adc
push
xchg
xchg
mov
inc
idiv
ror
loope
inc
jl
xor
cmp
cmp
and
sbb
iret
xchg
out
sti
out
cmpsl
pop
jmp
fbld
mov
imul
mov
mov
pop
out
sbb
scas
pushf
dec
pop
sbb
lahf
test
mov
mov
out
ret
sub
rcl
pushf
adc
lea
inc
bnd
idivb
imul
inc
in
inc
out
ret
mov
pop
rcrb
inc
sub
push
sub
faddl
jp
xchg
mov
out
dec
mov
ds
rorl
bound
fimull
or
xor
bound
pop
adc
std
pop
pop
jnp
push
cmpsl
dec
mov
dec
ficoms
push
rorb
dec
insl
clc
push
shl
jl
cmp
arpl
frstor
cmp
shl
test
call
test
cld
repz
movsl
and
xchg
fwait
orb
inc
in
inc
idivb
lea
xor
mov
inc
mov
mov
pcmpeqb
mov
sbb
cmp
push
pop
jmp
cmp
pop
test
insl
aas
fs
sub
mov
mov
pushf
push
add
dec
jle
push
adc
insb
push
adc
daa
stos
aad
insb
rclb
cmp
mov
cli
incl
xchg
out
sti
sti
jb
rcrb
or
ja
mov
push
push
push
mov
mov
pop
shlb
pop
jne
add
mov
pusha
sbb
mov
and
inc
fistpl
test
fcompl
out
incb
je
xchg
rol
jbe
dec
mov
dec
lcall
in
mov
iret
gs
leave
mov
fsubp
mov
js
pop
pop
repnz
jbe
fistpl
loope
lock
orl
fcmovb
test
and
movb
lret
add
leave
xchg
pop
add
mov
imul
pusha
mov
in
jecxz
mov
push
sub
je
test
data16
loop
imul
movsb
dec
lock
xor
pop
add
cmp
sbb
adc
test
and
mov
pop
jnp
and
xor
in
fwait
pop
outsb
ds
loop
call
fsts
cmp
stos
addb
pop
std
push
jp
shlb
xchg
daa
addr16
or
sbb
push
xor
into
ljmp
dec
subl
push
mov
sub
std
fs
mov
adc
arpl
xlat
ljmp
adc
sbb
arpl
ss
cs
jns
xchg
xchg
stc
xchg
mov
add
jnp
stos
xor
push
inc
pop
out
add
ds
mov
push
pop
push
in
xor
sub
jge
mov
imul
loop
movsl
pop
movsb
nop
mov
inc
add
lea
ljmp
repnz
jnp
pop
das
mov
mov
xchg
add
leave
js
and
pushl
scas
mov
lcall
in
pushf
push
ror
add
gs
xor
and
jno
scas
add
add
imul
xchg
imul
adc
xchg
sbb
ret
cmpl
stos
fs
int
adc
loop
lods
and
dec
and
mov
int
mov
smsw
mov
inc
or
pop
ljmp
sub
clc
cmpsb
icebp
into
aam
fs
aas
mov
pusha
jns
enter
mov
jbe
adc
outsb
adc
xor
in
fists
pop
test
stos
xchg
out
repz
jne
xchg
cmp
or
loop
push
sbb
cmpsl
clc
arpl
les
or
adc
or
insl
lret
xor
push
or
or
adc
mov
jnp
aad
mov
in
inc
add
aad
pop
lahf
int3
mov
je
andnps
enter
add
js
add
addr16
dec
out
and
imul
hlt
and
pop
out
pop
fisttpl
and
loop
lcall
cmc
push
leave
inc
adc
loopne
lods
mov
incl
push
insb
push
and
pop
dec
xor
cmp
insb
ja
jmp
xchg
aam
jns
jmp
adc
test
jge
out
push
mov
negb
jns
sbb
and
lea
mov
loopne
xor
cs
lock
pop
add
sbb
mov
leave
hlt
fstps
xchg
pop
daa
movsl
popf
andb
lret
insl
icebp
outsl
xchg
fcomi
or
js
js
ror
outsb
xor
jns
fbstp
dec
das
and
jnp
or
sbb
cmpsb
scas
push
mov
or
mov
shr
or
cmp
inc
and
sbb
arpl
adc
mov
notb
es
mov
add
lahf
push
inc
or
inc
pop
sarb
adc
mov
sub
mov
jnp
add
test
push
bound
cmpsb
pop
adc
xchg
add
mov
xlat
xchg
cmp
insb
or
inc
into
xchg
xor
scas
pop
inc
mov
mov
push
pushl
jg
enter
push
inc
inc
add
jl
push
rcll
mov
pushf
ficompl
adc
dec
mov
sbbl
andl
inc
sahf
push
xchg
outsb
outsb
pop
xor
insb
das
cmc
push
push
loope
mov
loopne
pop
popf
lea
lret
mov
sub
add
push
and
pop
xlat
into
cmp
xchg
jnp
push
add
fistps
fdivl
leave
push
repz
aam
add
sahf
ds
mov
mov
xor
push
roll
push
rolb
shlb
mov
movsb
and
out
stc
xchg
jb
rdpmc
or
ret
idivb
sti
bound
xchg
xchg
sub
mov
dec
mov
mov
mov
and
hlt
orl
nopl
mov
pop
dec
enter
cli
sbb
out
es
inc
in
hlt
jecxz
js
dec
call
out
and
push
push
sbb
xchg
sub
ljmp
xchg
and
in
aad
mov
sub
loope
subl
or
push
dec
sub
and
mov
aam
adc
rclb
in
iret
jnp
add
popl
jle
repz
adc
test
int
xchg
adc
xor
lds
pop
sub
popf
loopne
pop
cmpb
sub
lds
jno
mov
orb
push
inc
adc
jecxz
fwait
push
into
test
test
mov
icebp
in
inc
and
cmp
mov
mov
out
push
ja
jle
pop
pop
adc
jbe
push
jge
sbb
lret
pop
mov
sub
pop
mov
push
xchg
xchg
movsb
mov
jp
cld
ss
inc
ficomps
pop
popf
mov
mov
push
pop
lret
fldpi
outsb
dec
test
mov
aas
or
push
out
mov
mov
pop
aad
mov
pop
sti
xor
call
xchg
adc
cmp
int3
test
mov
xchg
cmp
out
xor
sbb
inc
mov
adc
adc
fwait
mov
mov
push
and
and
dec
push
inc
out
mov
insl
dec
xor
pop
mov
loope
add
call
cmp
das
jne
xlat
xor
jo
into
mov
inc
inc
cmc
les
mov
movb
add
push
xor
pop
push
xor
scas
daa
out
sti
fimuls
push
dec
inc
icebp
push
outsb
cmp
add
pop
sub
in
pushf
data16
push
rolb
fidivrl
push
rorl
and
les
mov
cs
push
or
cld
or
push
test
pop
mov
call
jl
inc
sub
xchg
scas
push
add
dec
dec
push
iret
ret
push
movsl
shll
add
test
mov
xor
xor
cmp
sbb
push
std
aam
fcom
mov
test
add
adc
add
push
inc
mull
sbbl
adc
cmp
or
mov
ficomps
hlt
push
cltd
cmovno
add
repz
adc
mov
int
add
idivb
fmull
mov
enter
loopne
loopne
pop
hlt
loope
enter
push
xchg
and
aam
jb
js
push
je
sub
adc
mov
shl
lods
jl
test
clc
jp
dec
jo
jae
int3
cmp
lret
leave
push
or
nop
xor
or
add
push
push
hlt
out
into
sub
ret
insl
cmovge
mov
pop
das
add
adc
mov
insl
je
dec
inc
ljmp
add
dec
push
mov
add
test
or
das
mov
mov
fists
dec
jmp
sub
movsb
jle
in
mov
outsb
icebp
lock
in
push
shlb
repz
and
shlb
rorl
dec
and
mov
add
mov
fidivs
inc
mov
xlat
sub
adc
addr16
insl
pop
xchg
sbb
into
xchg
cmp
and
lock
jmp
cli
and
cld
adc
roll
out
mov
test
sbb
repnz
rorl
xchg
sarl
pop
out
addr16
loopne
popf
out
cli
aam
adc
ja
js
pop
mov
push
or
lahf
test
insl
mov
push
mov
je
leave
shll
xchg
outsb
inc
cmpsb
addb
orl
fildll
xchg
or
xor
jbe
aas
and
std
sbb
ret
xchg
pop
cs
adc
and
adc
dec
dec
push
outsb
loope
dec
mov
mov
dec
loope
into
cs
orb
es
stos
inc
sub
mov
xchg
cmp
push
fsubrl
xor
addr16
rcr
insl
into
je
mov
push
fsubrl
in
cwtl
jmp
gs
push
movsb
sub
add
mov
cmc
pop
mov
jbe
jl
stos
adc
int
clc
addr16
xchg
mov
sti
and
stos
icebp
es
jle
and
mov
fisttpl
test
xor
cmp
insl
cmp
push
fs
fistpll
and
cmpsl
mov
push
js
and
dec
repz
and
mov
sbb
push
pop
std
dec
adc
mov
call
les
imul
dec
je
sti
or
sub
imul
ljmp
mov
loopne
cmp
or
jg
dec
lds
adc
pusha
addr16
ret
outsb
mov
pop
pcmpeqw
rcl
jecxz
mov
xor
mov
inc
add
mov
xchg
sysret
test
sub
cli
mov
arpl
in
jae
and
rcrb
pop
xor
push
in
cs
inc
lock
pop
xor
add
jl
inc
hlt
orl
mov
mov
jl
sbb
sahf
pop
lock
or
cmp
out
test
jbe
mov
cwtl
add
cmc
ja
jae
xchg
sahf
loopne
and
or
mov
mov
mov
xchg
adc
aaa
inc
imull
div
les
popa
cmp
jl
xchg
mov
adc
adc
decl
imul
cmpsl
inc
xor
cmp
repz
cmpsb
mov
call
dec
jns
stos
test
dec
pop
mov
mov
insb
jge
sbb
fimull
dec
fisubl
dec
or
fdivl
fwait
movsl
fwait
xchg
push
add
mov
bound
pop
adc
ret
popa
decl
pop
lea
clc
hlt
sarb
xchg
cmpsl
jp
cwtd
push
dec
in
das
mov
jp
pop
and
add
ret
push
ss
push
xor
cmp
push
test
jp
fldl
enter
pusha
adc
nop
repnz
dec
or
mov
add
addr16
test
mov
dec
pop
repz
jg
lock
aam
std
fisubs
repz
add
out
mov
lds
sub
sti
aas
ret
lock
out
cmpl
ja
push
call
out
pop
push
mov
js
cltd
shll
mov
clc
pop
leave
mov
xchg
xchg
mov
popa
xchg
fs
lods
sub
shlb
faddp
test
push
and
out
sub
fdivrl
into
lea
cmp
push
leave
fwait
mov
cmpb
es
fisttpl
lret
pop
sub
clc
and
inc
push
inc
add
dec
enter
mov
mov
dec
adc
aas
jns
cmp
jne
or
mov
hlt
mov
push
push
cmp
icebp
pop
jmp
out
mov
xor
movsl
sbb
inc
arpl
lock
jg
inc
xor
mov
cltd
cmp
mov
mov
pop
cmp
pop
xor
sbb
and
xchg
or
pop
outsb
aaa
cmp
fcmovnb
jg
or
fidivrl
lcall
xchg
lock
and
in
xor
mov
mov
jle
lahf
ret
inc
xor
dec
push
and
in
jp
or
jle
jbe
adc
mov
mov
inc
mov
cmpb
ds
xor
jbe
fidivl
into
and
dec
out
lea
repz
leave
pop
pusha
cmp
std
pop
loopne
psubsw
or
push
pop
jne
jp
lret
in
mov
stos
outsb
sub
nop
in
insl
xor
lods
push
shl
je
out
lahf
sub
mov
out
mov
ds
push
adc
push
fwait
out
sbb
stos
jecxz
pushf
add
sti
mov
xor
test
scas
fsubr
mov
adc
arpl
adc
pop
mov
xor
andb
mov
jmp
loope
sbb
imul
add
jo
and
into
shl
shll
adc
push
add
jb
push
dec
rol
add
inc
pop
ss
gs
cmp
lcall
push
dec
push
out
pop
into
cmp
cmpsb
pop
fs
lret
popf
add
jecxz
movsb
xchg
movsl
inc
add
stos
cltd
lds
pop
cmp
push
out
cltd
xchg
mov
mov
hlt
cmp
sbb
fisttps
dec
sub
pusha
mov
dec
inc
xor
add
pop
and
mov
pop
xchg
push
inc
xchg
mov
insl
out
xor
dec
mov
int3
outsb
out
lea
xchg
xor
in
call
mov
adc
aaa
mov
inc
mov
popf
dec
xchg
lds
subl
mov
fwait
cmpb
push
sub
dec
loope
jno
xchg
adc
push
insl
js
cld
mov
xor
notl
decb
jno
popf
xor
insl
pop
dec
jo
cmp
lahf
adc
jae
mov
sbb
movsl
cmp
int3
hlt
push
push
loop
dec
mov
push
or
mov
pop
xor
jge
sub
ljmp
ja
sbb
and
push
ja
xchg
jecxz
mov
ret
adc
inc
rcl
pop
gs
mov
test
enter
call
and
fistpll
and
imul
icebp
xchg
mov
nop
stos
clc
and
xchg
ficomps
sbb
hlt
jle
and
jno
lds
add
jge
andl
cmpsb
xchg
mov
notb
push
fmull
lods
jle
xor
rorb
into
iret
mov
jne
jmp
sbb
xchg
jmp
mov
rcr
cmpsl
pushf
ret
pop
sbbl
jo
icebp
mov
inc
ljmp
xor
rclb
test
rorb
sub
data16
jg
shlb
inc
outsb
jb
mov
mov
push
xchg
mov
add
movsl
sub
cmp
repz
and
push
push
xor
fcos
inc
dec
lahf
mov
sub
and
jmp
loopne
pop
nop
mov
out
out
test
lods
cmpsb
add
aaa
mov
fildll
pop
out
mov
outsl
sbb
inc
popa
shll
mov
xor
sbb
jb
jb
or
rcrb
sbb
outsb
lds
loop
subl
dec
cwtl
arpl
add
rol
adc
aad
push
mov
in
sub
shl
outsb
cld
or
mov
inc
and
les
push
inc
sub
sub
push
pushl
or
add
mov
jmp
aam
push
xchg
and
push
inc
jns
cmp
mov
bsr
jmp
xor
enter
push
mov
or
movsb
mov
pop
bound
sbb
inc
push
ljmp
out
mov
fldl
jl
add
pop
pushf
imul
sub
pop
jno
xor
lea
inc
sub
inc
or
mull
out
push
es
inc
cmp
cld
jae
xchg
pop
or
dec
xor
ret
ret
pop
mov
loop
aad
hlt
xchg
outsl
popf
stos
lret
int3
adc
sub
add
sub
scas
movsl
cli
jnp
mov
test
out
cmc
in
add
dec
pop
stc
lea
adc
pop
or
loope
aaa
dec
test
push
call
sub
inc
sbb
cmpsb
pop
xchg
jno
inc
scas
jmp
out
out
hlt
fstpt
pusha
rclb
inc
push
shr
sub
add
sbb
push
fs
fwait
js
jmp
sbb
aaa
ljmp
jg,pt
fnstenv
out
push
loopne
cmp
dec
pop
imul
mov
ljmp
jg
pusha
cmpb
lcall
sbb
aam
aad
sub
push
and
pushf
into
sub
mov
and
push
pop
xchg
aaa
jp
movsb
arpl
xchg
cli
shlb
jb
jo
mov
xchg
push
cltd
sarb
aam
fwait
jecxz
lea
fwait
push
mov
cld
addr16
cmp
jle
mov
js
mov
je
fistps
dec
sub
ret
add
out
inc
stos
aam
fiaddl
xor
pop
cmp
mov
aas
sbb
leave
xor
int3
pusha
xor
pop
lret
mov
pusha
sub
cwtl
push
mov
mov
dec
jno
cmp
and
enter
push
add
xchg
mov
ja
push
fwait
mov
push
adc
or
sub
mov
mov
and
xchg
pop
mov
mov
in
pop
ss
or
imul
adc
inc
daa
push
cmp
addl
cltd
out
faddp
or
addr16
lods
ret
jnp
add
or
dec
push
in
out
push
popf
cmp
imul
mov
ret
lcall
jp
sbb
inc
sub
sub
popa
cli
mull
mov
ja
ja
je
jmp
inc
iret
mov
ljmp
mov
sbb
shr
jecxz
cld
lea
cmp
adc
dec
sahf
add
dec
sahf
int
stos
dec
mov
inc
push
sub
or
add
jmp
in
jbe
add
mov
pop
shl
sub
mov
sbb
jbe
in
add
inc
mov
dec
stc
fstl
add
jnp
push
jecxz
or
ja
and
add
lcall
outsl
stc
insb
std
aas
pop
adc
ja
aam
rol
stc
xor
jecxz
and
mov
out
out
les
or
inc
pop
ret
aaa
adc
nop
shrl
or
repnz
xor
mov
cs
xchg
dec
int
jae
inc
jp
popf
inc
mov
dec
test
cld
add
jno
push
xchg
pusha
js
pop
adc
nop
neg
fs
imul
ss
dec
test
jl
fimull
jp
aas
mov
scas
jns
inc
mov
out
out
shll
dec
xchg
lcall
es
repz
es
push
pop
cmp
xchg
or
xor
mov
xor
shlb
loope
xchg
and
mov
mov
cmp
mov
xor
xor
out
into
add
cmp
push
int3
sub
pusha
cwtl
test
aam
test
push
push
mov
sbb
or
es
out
jmp
test
movl
jns
lds
cwtl
sarb
or
sbb
pushf
push
out
and
aas
je
pop
ret
mov
lock
push
in
adc
loop
pop
mov
cmpsb
push
inc
mov
fadds
and
mov
inc
test
sub
outsb
lret
shlb
sub
lea
pop
push
in
in
fadds
sbb
pop
and
or
xchg
mov
ds
pop
leave
or
lcall
fildl
mov
fistl
pop
out
shll
add
outsl
mov
les
jg
std
jp
jmp
jns
and
lret
push
lahf
pop
inc
xor
stc
dec
out
mov
and
test
push
add
stos
cmpsl
loop
mov
sub
jmp
mov
bound
inc
sub
push
loope
mov
pop
pop
aaa
mov
dec
aam
and
invd
lds
hlt
mov
sub
push
out
fidivl
ret
push
adc
mov
mov
or
int
out
jno
mov
xchg
imul
ret
cmp
mov
jne
mov
ljmp
popa
jnp
sub
and
mov
xchg
mov
fdivrs
push
pop
ret
fsubl
inc
inc
mov
or
sbb
or
mov
pusha
push
out
inc
out
mov
ret
inc
pop
sub
pop
sbb
test
mov
xor
mov
dec
fsts
or
shl
divb
add
out
out
hlt
add
insl
and
pushf
iret
jb
mov
mov
dec
mov
clc
mov
dec
mov
mov
test
mov
lods
adcl
pop
mov
fnsave
jl
lods
int
cmc
add
inc
std
xchg
out
sub
mov
outsb
daa
call
scas
push
mov
cmp
cmp
xchg
les
mov
mov
or
movsb
cltd
imul
nop
lods
dec
scas
sub
xchg
lahf
fmuls
inc
into
push
pop
sub
inc
dec
nop
cmpsl
mov
sbb
add
fsubr
push
adcl
xchg
daa
mov
xor
pop
push
jns
push
shl
jp
ss
mov
push
push
lods
lcall
inc
sbb
dec
out
ss
imul
insb
cmp
jo
xlat
push
ja
negb
xor
ds
int
push
jb
jne
xor
test
in
mov
pusha
out
lcall
mov
jp
cmp
mov
or
roll
pop
mov
mov
cmp
pop
jl
or
mov
in
iret
lret
push
stos
icebp
bound
mov
inc
cld
inc
inc
je
imul
rcrb
mov
mov
std
ficomps
mov
stc
mov
je
sub
sub
xor
sub
jmp
mov
mov
movsl
sub
dec
pusha
dec
cmc
mov
sub
sub
std
out
xchg
movsl
pushf
sub
jmp
imul
dec
test
in
jnp
jmp
stos
or
pop
lods
xor
pop
push
out
jo
cmc
insl
push
xlat
mov
add
pop
mov
call
adc
lcall
dec
lock
fnstsw
addr16
iret
adc
mov
jb
adc
and
into
out
popf
repz
ss
mov
dec
mov
loopne
in
xor
aam
stos
insl
and
xchg
in
out
mov
insl
xlat
inc
cs
loope
jmp
cmp
sahf
or
shll
dec
push
pop
sahf
aaa
adc
jne
lcall
jp
dec
mov
mov
push
cmp
aas
jl
inc
push
add
mov
ljmp
and
mov
or
pop
les
push
aam
cmpsb
pusha
andl
cmp
lods
xchg
std
jmp
xor
addr16
inc
stc
push
ja
cs
lods
cld
cmp
adc
add
jmp
xchg
in
clc
xlat
jle
cwtl
add
or
out
pop
add
mov
test
adc
jns
push
ja
cmp
scas
jnp
mov
and
jno
or
mov
add
jbe
or
mov
cli
cmpsl
mov
mov
xchg
movsl
lea
mov
jle
das
lods
cmpsl
jmp
sbb
mov
mov
jle
pop
scas
add
hlt
lods
mov
mull
iret
mov
out
cmp
and
mov
mov
cmp
sbb
mov
rolb
dec
jecxz
ljmp
mov
mov
hlt
lds
inc
mov
loop
sbbb
adc
fsubs
push
mov
pushf
popa
pop
and
mov
push
add
adc
jp
adc
shlb
jl
or
dec
bts
mov
sbb
pop
ja
cmc
lods
jecxz
jnp
loope
fidivl
fisttpll
inc
out
leave
lret
and
bound
pop
lods
or
push
or
sub
mov
fistl
stc
mov
cmpsb
out
sub
sbbl
icebp
ljmp
mov
push
fsubr
pop
dec
int
mulb
sbb
mov
mov
loopne
dec
in
mov
pop
xor
orb
pop
bound
pop
cmp
push
rolb
ljmp
jmp
lea
mov
fcmovb
mov
add
add
popa
inc
add
jne
dec
insb
sub
sbb
scas
insl
cmp
or
pop
jo
mov
xchg
add
pop
add
adc
or
pop
pop
in
adc
or
test
das
pop
inc
sub
test
lods
mov
dec
shl
cmc
mov
loope
jne
in
push
pop
in
mov
rolb
fildll
imul
mov
shll
xchg
pop
insb
cmp
std
imul
js
add
mov
sbb
push
fadd
loopne
xor
push
xchg
mov
and
xchg
mov
mov
call
lea
adc
mov
call
sub
pop
mov
lret
pop
inc
inc
xchg
mov
stc
mov
outsb
std
dec
inc
cmp
push
shrl
mov
jle
pop
addb
and
faddl
adc
imul
and
inc
scas
cmc
das
pop
pusha
insl
mov
cmp
in
adc
shll
notl
clc
imul
test
lods
dec
pusha
mov
repz
jmp
es
into
mov
adc
mov
test
js
lea
xchg
xchg
cmp
pop
sub
xchg
mov
sub
push
cwtl
xchg
mov
add
sub
and
mov
out
push
or
outsb
fidivrl
xchg
movsb
push
fdivl
stc
pusha
pop
pop
push
sar
sub
out
inc
ss
adc
stos
les
mov
test
movsl
mov
test
out
push
lret
jg
jecxz
rorl
rclb
ljmp
cmp
dec
test
sbb
jae
and
mov
ret
sub
enter
mov
icebp
call
adc
or
testl
jl
xchg
mov
pop
cmpsb
scas
sbb
test
push
sub
movsb
lods
popa
dec
pop
sub
xchg
lods
in
push
cmp
iret
in
not
jl
lcall
out
ja,pn
push
outsb
xor
loop
test
lret
mov
adcl
loop
pop
sub
xchg
sub
in
adc
lret
add
js
jle
std
stc
mov
and
loop
outsl
xor
jmp
cli
in
xor
aas
mov
mov
jno
xchg
ret
stos
mov
mov
cmp
push
mov
arpl
sarb
scas
loope
cmc
sbb
sbb
adc
jmp
sbb
xor
jg
or
fnstcw
xor
cmc
mov
xor
call
lds
leave
jbe
cltd
or
fs
adc
dec
clc
pop
in
mov
push
adc
pushf
cli
or
add
imul
jno
insb
mov
jnp
mov
or
pop
iret
xor
or
dec
adc
pushf
les
scas
das
popl
sub
xorb
jne
lret
dec
sub
sub
loopne
push
in
sahf
or
dec
es
pushf
lods
pusha
iret
sub
mov
pushf
ds
sub
dec
dec
push
es
lahf
and
clc
pop
mov
or
ss
cs
fisubl
adc
jns
in
in
insb
rcrl
xchg
pop
popf
or
fs
xchg
into
std
imul
dec
test
push
lea
repnz
pop
dec
xor
inc
mov
pop
xchg
adc
push
pop
ss
call
jo
mov
mov
add
cmp
or
push
iret
sub
outsl
mov
or
dec
adc
mov
mov
gs
out
stos
rcll
enter
mov
xlat
fcmovnu
arpl
inc
cmc
dec
jne
cmp
or
dec
lods
xchg
repz
dec
js
and
out
shr
and
mov
clc
lock
test
insb
call
mov
add
push
pop
mov
dec
push
rcrb
push
inc
es
lcall
outsb
mov
nop
xorl
in
mov
int3
pop
sbb
push
loope
pop
adc
xor
pop
mov
mov
gs
gs
xchg
dec
in
adc
popf
int3
cmp
inc
imul
pop
push
jbe
shll
or
adc
in
es
mov
lock
pushf
fidivrl
push
cmp
adc
pushf
mov
mov
push
stc
jmp
lods
fidivs
push
push
xchg
mov
cmp
ljmp
jp
scas
cmp
xchg
cmp
xchg
and
in
js
lahf
jp,pt
sub
mov
push
mov
call
cs
jl
rolb
push
mov
roll
mov
adc
jge
ret
or
sahf
aad
testb
mov
mov
sarl
test
lods
push
rcr
pop
call
inc
rcll
jb
aas
mov
or
ljmp
outsl
sub
lods
pushf
icebp
ret
mov
push
cmp
cmpsl
adc
leave
jae
or
xchg
adc
out
xor
dec
into
push
das
mov
icebp
cs
sbb
call
mov
ja
divps
out
pop
pop
lods
out
sahf
xor
jno
shr
leave
sbb
and
mov
dec
sbb
inc
sub
mov
push
roll
icebp
jns
jb
loopne
xor
pop
rcll
xorl
in
sub
addb
hlt
push
cltd
xor
in
add
insl
movsb
xor
mov
pop
push
lock
decl
movsl
imul
xchg
pop
sbb
outsl
push
daa
jns
mov
adc
sbbb
lods
sub
and
mov
pop
cmpsl
jle
out
in
hlt
mov
out
out
push
mov
addl
sbb
icebp
repz
sar
scas
insl
xchg
sub
and
popa
ljmp
and
push
pushf
imul
dec
loop
lahf
loop
inc
dec
xchg
subl
xchg
inc
adc
arpl
sub
rcrb
jge
xchg
push
xchg
insb
pop
orl
dec
sub
xor
add
dec
insb
jp
xchg
clc
push
lods
fdivp
cmp
lods
daa
rorb
imul
mov
cmp
jecxz
or
xchg
and
or
dec
mov
loopne
cmp
mov
es
add
cs
ss
or
jno
mov
lcall
loope
sti
cld
cltd
and
les
inc
orl
adc
xchg
jg
mov
push
fwait
shlb
outsl
fbstp
sub
inc
mov
cmp
dec
faddl
xor
add
inc
sub
xor
in
inc
cmp
xor
add
cmp
and
cmc
ror
inc
push
aam
inc
shrb
sub
adc
popf
stos
add
enter
movsl
loopne
sub
dec
iret
add
jae
pop
cmp
and
cltd
int
iret
fldenv
insb
xor
push
popf
dec
ss
out
adc
stc
dec
push
add
rol
rorl
rcrb
cmpsl
rolb
in
jbe
out
fisttpll
jbe
xchg
mov
rolb
cmpsl
daa
movsl
test
xchg
push
loop
fstps
repz
pop
push
gs
mov
push
inc
or
out
mov
aas
cmp
jge
repz
mov
inc
sbbl
adc
adcl
xchg
pop
pop
call
xor
add
add
mov
dec
mov
rcr
mov
push
adc
fnstenv
mov
push
push
push
or
daa
xorl
pop
popf
outsb
add
or
clc
adc
repz
mov
fisubrl
xchg
cmc
ret
dec
mov
insb
push
push
cmovp
aam
pop
pushf
push
aam
push
push
xchg
xor
std
sub
push
out
pop
dec
push
sbb
and
jno
inc
into
jmp
shlb
adc
les
sahf
dec
pop
insl
loopne
lods
leave
push
inc
cmpsl
jg
cli
sbbl
out
enter
in
cmc
dec
push
fcmovnbe
sbbb
popa
xorl
pop
fwait
pusha
jns
shll
xor
jae
adcl
lds
dec
jle
sub
mov
push
sub
int
mov
inc
push
push
jbe
sub
add
and
sub
nop
ret
lea
lds
stos
adc
pop
mov
cli
xchg
aam
int
ret
mov
lret
adc
sub
fcompl
gs
mov
pop
dec
jnp
js
mov
jle
jno
cmp
lock
or
not
scas
insb
inc
push
in
in
xor
ret
dec
xchg
into
in
inc
es
cld
aam
cld
lret
jb
or
je
mov
sbb
clc
hlt
xlat
or
dec
sub
daa
cmpl
fisttpll
in
fnstsw
lahf
pop
les
cld
movsb
or
adc
rolb
mov
dec
ss
clc
repnz
xlat
cmp
sub
jmp
sub
aad
cli
push
push
xor
xor
push
in
inc
lahf
sahf
or
adc
loope
aad
mov
adc
lea
iret
push
adc
cld
sarl
leave
xor
jle
out
mov
cmpsb
lahf
stos
sbb
outsb
push
nop
pop
mov
js
push
add
push
pminub
cmpsl
sahf
insl
xor
std
stos
pop
adc
add
sbbb
test
inc
lods
loop
sub
cmpsl
dec
push
and
jmp
sbb
lahf
fmull
sbb
cmc
cmc
stc
es
adcb
push
add
inc
jp
fwait
inc
out
mov
dec
mul
xchg
jno
pop
ss
adc
popa
sub
xor
cmc
bnd
das
scas
lahf
sbb
arpl
lds
pop
mov
pop
cld
sub
into
test
mov
sbbb
call
and
mov
fisttpl
test
aam
fistps
and
iret
out
mov
pop
pop
cltd
push
stc
adc
push
xlat
xor
add
mov
sub
pop
scas
pop
jb
outsl
dec
mov
cmp
call
loop
fwait
dec
mov
int3
mov
adc
and
mov
loopne
cmp
sbb
xchg
je
xchg
sahf
fdivs
sbb
sub
aad
xchg
shlb
cmovno
cmp
xchg
addr16
fisubl
movsl
cwtl
push
out
push
sbb
leave
sbb
mov
out
repz
mov
rcl
mov
jae
test
adc
or
xchg
cwtl
push
shrl
lcall
leave
fidivrl
jp
or
addr16
jge
ss
jns
outsb
repnz
xchg
or
dec
das
out
fiaddl
data16
ljmp
sub
fldcw
mov
cwtl
lods
jbe
mov
xchg
mov
aam
mov
sbb
rorb
cmpsl
stos
aaa
adc
popa
push
xor
or
pop
les
mov
sub
xor
fmul
lods
lock
aad
and
dec
jmp
sahf
mov
mov
movsl
jp
push
mov
aam
adcb
fldt
aad
jle
inc
bound
xor
lcall
into
sub
movsl
push
bound
inc
mov
je
in
je
call
pop
mov
push
mov
mov
int3
add
pop
pop
mov
outsl
lret
cmp
xor
inc
ret
xchg
and
mov
lahf
inc
pop
ds
jle
mov
mov
lcall
sti
and
dec
movsl
call
arpl
xchg
std
mov
inc
incl
addr16
sbbl
jne
inc
mov
fsubl
test
xchg
nop
lock
push
lahf
daa
fldt
bound
xchg
cs
mov
sub
push
jo
push
or
jmp
mov
xor
movsl
adc
or
fsub
mov
sbb
lock
popa
repz
fs
subb
mov
lea
mov
dec
inc
xor
lret
adc
pop
push
cmp
jne
nop
mov
mov
xchg
cmp
mov
fsubrl
push
fistpll
jns
push
nop
cld
mov
cmpsl
cmpsl
sub
sbb
pusha
jno
das
repnz
clc
sbb
incb
mov
clc
sbb
xchg
sbb
bound
es
jns
sub
dec
or
adc
mov
mov
mov
push
or
ja
xor
orb
in
push
xchg
mov
call
leave
jbe
jbe
cmp
leave
push
int3
xchg
and
arpl
or
stc
or
sbb
xchg
out
imul
xlat
dec
pop
mov
cmp
and
adc
mov
fildll
shll
adc
iret
jb
popf
push
sub
sbb
lods
mov
data16
scas
cltd
cli
loopne
jle
fiaddl
push
sar
and
mov
sti
pop
push
dec
lods
mov
dec
sub
aam
pop
dec
sbb
aas
inc
fsubrp
mov
mov
mov
ds
xchg
roll
push
pop
xlat
fndisi(8087
cmp
ror
out
outsb
bnd
fidivrs
test
adc
mov
jno
popf
cli
cltd
daa
push
jae
pushf
loop
hlt
jo
or
jge
mov
arpl
popa
repz
out
cmp
push
dec
cwtl
adc
push
mov
out
inc
xchg
sub
add
push
cmpsl
push
lods
stos
sub
xor
sahf
cmc
mov
jb
xlat
add
lock
call
shl
into
rorb
data16
out
mov
fs
add
mov
lcall
cmp
pop
imull
jecxz
jmp
xor
pop
dec
adc
jno
cld
mov
sub
xchg
push
ret
adc
and
mov
lret
xor
shll
jp
or
add
mov
fstpl
faddp
repnz
xchg
arpl
bound
enter
xchg
xor
jle
sarb
jmp
jecxz
push
aad
push
mov
into
inc
mov
and
cmp
push
jne
dec
mov
fidivl
imul
ds
aad
loopne
rcrb
mov
mov
cwtl
sub
inc
dec
lds
mov
and
inc
inc
cs
xor
test
dec
rsm
fmull
or
xor
push
daa
loop
hlt
popa
xlat
and
bnd
in
cli
mov
insl
push
push
mov
call
add
cltd
sbb
fdivl
sbb
fsubrl
ret
mov
and
outsl
mov
enter
stos
jmp
jmp
inc
in
icebp
add
inc
pop
dec
ss
or
mov
sbb
adcb
xchg
lods
rorl
jp
and
rolb
ret
mov
mov
xor
aas
out
inc
test
xor
mov
dec
xor
call
sbb
je
jl
xor
or
in
mov
lret
in
daa
out
cmc
push
aam
adc
adc
push
js
or
and
push
push
inc
sbb
test
inc
sar
mov
pop
push
aas
dec
mov
or
shlb
adc
into
xchg
sti
mov
jnp
adc
sbb
pop
add
pop
lahf
lahf
inc
addr16
daa
les
inc
and
dec
aaa
cs
xchg
addr16
xor
push
test
fwait
mov
fninit
nop
ja
or
lds
mov
divb
cmc
xor
out
das
add
fdivrl
sub
iret
repz
or
inc
out
imul
roll
mov
push
sbb
lods
inc
push
ret
and
repnz
aas
lahf
loop
pushf
enter
out
fwait
inc
jno
adc
dec
and
cmpl
ret
jno
addl
in
jne
add
stc
int3
cld
xchg
xor
dec
mov
fisttpll
rcrb
jg
pop
stos
mov
iret
inc
pop
ljmp
mov
das
sbb
inc
fnstsw
in
bsf
aad
adc
sbb
xor
pop
jle
jecxz
int
out
mov
and
js
test
push
mov
xchg
mov
cmp
mov
mov
mov
mov
clc
aas
cltd
jle
push
lea
rcrl
sbb
mov
pop
jo
popf
mov
stos
cmp
cmp
lods
fidivs
mov
sbb
in
sub
mov
push
inc
into
adc
push
les
daa
mov
lods
leave
in
ret
stos
and
xchg
idivl
enter
popa
gs
mov
repz
adc
push
dec
mov
xchg
aas
xchg
sub
roll
push
ret
mov
mov
leave
aaa
shll
in
pop
leave
stc
and
jmp
push
push
xchg
nop
fiadds
jecxz
inc
or
fs
adc
mov
and
jle
dec
inc
cmpb
aam
les
mov
lea
jge
iret
lret
adc
push
adc
les
inc
pop
addb
out
inc
pushf
dec
popa
movsb
mov
sahf
xchg
popf
cmpsb
fisttps
test
adc
xor
cli
cmp
cwtl
popa
hlt
adc
call
repz
and
fisubs
ljmp
je
xor
imul
jae
dec
mov
ret
pop
out
push
lods
inc
ja
or
dec
enter
mov
jb
jae
dec
push
push
aas
jecxz
push
jg
ljmp
nop
cwtl
inc
outsl
jg
push
nop
cmc
loopne
fmuls
cmp
push
push
ds
cmp
sub
imull
popa
pop
ss
sbb
lahf
test
cmp
dec
adc
ljmp
or
pop
out
cwtl
fistps
sub
in
add
scas
shrb
adc
test
stos
push
nop
push
push
jae
cmp
es
ret
jnp
cmp
adc
bound
mov
scas
lcall
push
cltd
push
cli
sub
and
mov
hlt
fisubrs
push
push
xor
xchg
insb
xchg
jmp
sbb
vprotq
mov
lret
mov
jg
lret
sub
pop
sti
mov
mov
push
das
test
mov
ja
pushf
ja
pop
jmp
cmovs
jl
mov
loop
jl
adc
jecxz
or
adc
push
pop
lea
jnp
push
pushf
inc
lods
outsb
push
dec
popa
scas
push
test
and
xlat
popf
test
mov
jns
popf
inc
in
in
sub
fdiv
xor
mov
mov
jl
and
mov
mov
push
xor
push
sub
out
sbb
push
mov
movsb
stos
insl
repz
cld
insb
mov
lahf
lds
mov
pop
mov
loope
in
adc
dec
rorb
fisubs
in
sbb
add
dec
pop
leave
repnz
sbb
inc
mov
jecxz
or
outsb
push
ds
xchg
xchg
andb
push
or
lods
icebp
addr16
cmp
sub
xchg
cmc
push
mov
fwait
sti
sbb
movsb
lods
rcrb
jbe
push
inc
xor
imul
lea
adc
mov
ret
loop
or
cmp
add
and
imul
loop
xlat
neg
push
or
pop
sbb
imul
or
outsl
push
mov
test
push
mov
xor
dec
xor
iret
clc
xchg
sti
jae
pop
cmp
aas
cmp
sbb
lahf
xchg
test
pop
movsl
cmpsb
cmp
adc
pop
fidivrl
rcrl
sub
sub
push
movsb
sbb
outsb
add
add
sahf
stos
jle
add
xchg
fsubrl
dec
sbb
or
jle
pop
lret
stc
or
inc
xor
xor
in
out
enter
ss
sti
mov
mov
dec
push
or
movsl
xor
push
mov
mov
lahf
fstpt
push
inc
and
dec
xchg
xchg
into
stc
test
jge
or
and
push
divb
call
jl
ds
pushf
xchg
cltd
sbb
xor
lea
in
sub
and
push
fnstcw
test
or
arpl
test
add
outsb
sbb
fdivl
or
sbb
push
sub
fs
jle
lea
jmp
out
or
jne
pushf
pop
dec
xchg
lret
std
jb
in
test
int
inc
jnp
adc
xor
fildll
lods
test
and
pop
bnd
pop
inc
scas
loope
add
mov
pop
push
pusha
and
add
xchg
nop
std
rcrb
mov
xor
dec
and
mov
repz
aam
icebp
sbb
add
decl
add
dec
sub
jns
fwait
xchg
shl
pop
pushf
jl
lods
jnp
outsl
outsl
dec
adc
ljmp
sbb
mov
sbb
mov
dec
nop
push
sbbl
inc
jnp
outsl
aas
ret
fidivrl
fucomi
mov
ret
xchg
inc
cs
push
dec
adc
cmp
sbbl
subl
or
or
insl
addl
dec
cwtl
add
mov
mov
lods
sbb
ss
aas
dec
or
pop
inc
dec
cmc
hlt
stos
mov
pop
sbb
mov
out
inc
xor
push
xor
mov
ret
arpl
adc
xor
add
sub
movsb
sarb
int3
iret
std
push
sarl
imul
xor
mov
sahf
int
jg
nop
test
xlat
nop
mul
popf
xlat
pop
test
push
mov
inc
out
jmp
or
shr
shlb
mov
ss
push
xlat
int
sbb
cmp
or
cmp
inc
pop
test
jmp
cwtl
jecxz
jl
insl
stos
push
sub
push
movsl
mov
jmp
sar
jge
lcall
xchg
outsl
fwait
sub
mov
push
and
daa
or
orb
ret
push
mov
shll
out
and
mov
mov
mov
add
fidivrl
pop
iret
mov
push
cwtl
dec
and
test
push
popf
mov
lahf
xchg
ret
aam
mov
sti
lock
and
lods
ret
xchg
xchg
adc
into
or
test
add
enter
push
clc
jl
into
cs
int
out
int
sti
pop
mov
cld
divb
shl
loopne
mov
shl
aam
xchg
sbb
in
je
pop
xchg
pop
repz
popf
inc
xor
dec
xchg
cwtl
or
sarl
sub
cmc
push
rcrb
cmc
shl
mov
pop
ret
mov
dec
pop
adc
xor
jb
call
or
hlt
data16
lock
into
adc
dec
arpl
mov
add
loope
mov
in
push
fldt
in
cmp
push
ss
stc
test
cld
sti
lods
sbb
add
xchg
inc
mov
add
jmp
lahf
dec
mov
lods
test
pop
in
mov
ret
dec
fstps
mov
ljmp
rolb
bound
add
or
add
xor
stc
in
jle
call
mov
in
add
adc
cmp
cli
sub
sbb
mov
jbe
xchg
xchg
jle
or
stos
xor
mov
jnp
shl
cmpsb
test
xchg
mov
xchg
mov
sub
or
mov
jmp
dec
inc
inc
mov
or
cmp
loopne
hlt
mov
orl
mov
pop
call
pop
loop
adcl
xchg
pop
mov
adcl
int
mov
push
insl
sahf
jge
push
popf
imul
jb
loopne
xchg
ljmp
sbb
js
shrl
sbb
hlt
jne
fmuls
enter
mov
lea
mov
lea
ss
xchg
inc
das
or
fsubrl
xchg
imul
dec
mov
cmp
adc
push
dec
mov
jne
or
adc
jge
and
sbb
iret
xlat
ja
push
xor
xchg
jp
mov
arpl
idivb
add
lret
pop
and
xlat
imul
adc
test
leave
mov
gs
jbe
out
push
xchg
dec
loop
and
mov
sub
mov
jg
das
pop
rorl
into
fnstcw
fbstp
lahf
pop
dec
test
inc
inc
lods
andb
aam
mov
adc
ret
loopne
push
sbb
xor
mov
in
cwtl
mov
sub
nop
cld
and
and
aaa
dec
jg
jmp
cmc
dec
stos
gs
xchg
dec
je
sbb
loope
lahf
outsb
xor
out
cld
inc
js
orl
ret
pop
lods
pop
or
mov
cmp
insb
hlt
mov
mov
xor
stos
mov
mov
scas
adc
cmc
orl
cmp
lret
xchg
mov
leave
nop
gs
or
rol
stc
test
arpl
dec
jb
mov
scas
jnp
mov
xor
das
push
push
jmp
js
in
fisubrl
push
pop
fidivs
lds
mov
loop
mov
sbb
pop
rolb
push
push
push
pmulhw
jp
out
pop
adc
lcall
push
lcall
add
sub
xor
add
jge
mov
pop
in
cmp
sub
jb
sahf
movsl
test
pop
inc
jb
les
dec
sbb
and
nop
mov
xlat
lahf
int3
arpl
bound
lcall
push
pop
ret
jl
xchg
ficompl
roll
add
and
stos
mov
movsb
out
loop
pop
nop
dec
mov
sbbb
push
push
outsl
xchg
inc
xor
aam
mov
adc
jb
push
subb
dec
mov
mov
fmul
js
push
repnz
fisubrs
sbb
scas
sub
pop
mov
std
mov
rol
sub
push
xchg
test
mov
pop
jns
xchg
mov
xchg
adc
xchg
or
mov
jl
dec
xchg
sbb
in
inc
add
repz
andb
int
jl
xchg
push
jg
cmp
jle
add
cmpsl
scas
xor
loopne
jmp
mov
ds
add
rclb
add
xor
jge
adc
or
mov
lret
lock
pop
dec
mov
fisubrl
loope
xchg
mov
xchg
ja
pop
movsl
fisubrl
dec
mov
jne
repnz
out
pop
arpl
int
push
sbb
test
dec
or
scas
sbb
jle
mov
sub
push
sbb
mov
mov
lret
mov
or
cvtdq2ps
dec
mov
push
movsb
mov
adc
push
insl
xchg
push
xor
jne
and
cmp
leave
and
xchg
mov
xchg
ret
and
mov
ljmp
mov
mov
mov
xchg
push
cmp
or
ljmp
popa
xor
leave
adc
cltd
int3
fwait
add
cmp
pop
push
orb
repnz
in
shlb
sub
imul
xchg
xchg
xchg
jle
ret
fildll
nop
push
add
or
mov
mov
stc
je
or
add
out
lods
mov
or
dec
imul
add
stos
lock
mov
mov
xor
jg
popf
stc
rorb
negl
leave
rorl
hlt
loop
jecxz
adc
bound
mov
cmpsb
pop
sub
cmp
outsl
in
iret
ret
adcl
fwait
mov
inc
sbb
dec
sbb
sbb
cwtl
sti
jecxz
cmp
jae
lret
push
push
clc
jecxz
insb
sbb
mov
cmp
xchg
outsb
inc
int
sub
mov
adc
shrl
jmp
xlat
xchg
dec
jmp
mov
dec
jmp
les
and
xchg
or
xor
negl
sub
movl
pop
pop
lods
scas
pop
cmp
scas
stc
sti
sbb
lds
sahf
outsb
lock
sti
xor
das
loop
mov
sti
lea
xchg
movl
pop
lcall
mov
stos
mov
das
push
jb
cli
sahf
adc
aas
ljmp
pop
mov
xor
lret
les
imul
enter
push
push
mov
rolb
leave
jb
xchg
push
jne
sub
pop
push
xor
cwtl
mov
mov
mov
and
dec
or
sbb
inc
arpl
repnz
sarb
cmp
sbb
xor
and
mov
js
xor
xchg
ret
ja
cmp
push
int3
jns
nop
cmp
ss
inc
push
dec
call
sti
sbb
sub
adc
shr
or
fisttpl
call
jae
data16
push
push
or
adc
lcall
mov
mov
mov
call
mov
jne
lea
ret
test
shlb
sub
push
sbb
or
push
cwtl
push
out
movsl
adc
dec
aaa
in
jo
repnz
les
cwtl
out
inc
loopne
cli
and
or
js
sti
sbb
cmp
ret
sub
addr16
sub
sbb
push
fstsw
jo
inc
popf
inc
mov
das
clc
pushf
dec
leave
mov
sub
jmp
jno
icebp
test
hlt
cmp
clc
sub
dec
repnz
push
xchg
outsb
out
outsl
xchg
and
mov
push
mov
sbb
pusha
pushf
jmp
xchg
pusha
jmp
cmp
mov
cmp
inc
enter
jbe
dec
sub
fs
call
addb
outsl
push
cmp
cmpsl
xchg
push
je
leave
push
lret
cmp
lea
jbe
xor
mov
out
mov
sub
or
dec
mov
enter
add
jle
fsubrl
je
int3
mov
pop
dec
mov
cmc
xchg
daa
mov
out
cmp
mov
out
outsl
mov
outsl
daa
dec
movsb
inc
push
into
ljmp
scas
decb
loopne
or
sahf
loopne
push
or
pop
jecxz
inc
popf
xor
or
daa
inc
and
mov
repz
popf
repnz
mov
pop
xchg
in
fstpt
add
inc
fdivrl
inc
push
lret
cmp
lea
push
mov
inc
mov
out
ja
dec
cmp
and
les
fdivr
pop
dec
in
xchg
pop
mov
push
add
cmp
cli
or
xchg
add
push
daa
and
xchg
and
mov
xor
pusha
pop
ret
cmp
pop
mov
mov
pop
jg
and
xchg
dec
clc
aam
icebp
jnp
rcll
mov
jg
leave
arpl
gs
adc
repz
insl
sub
mov
and
jmp
mov
sub
enter
imull
out
xor
mov
insl
int3
mov
mov
cmp
cmpsl
or
xchg
insb
fnstcw
mov
xchg
or
pop
lds
dec
jecxz
in
lds
enter
aad
mov
aad
loopne
and
es
test
repz
sub
popf
mov
lds
cld
iret
xchg
movsb
add
lods
push
out
jmp
daa
out
lret
push
push
call
sub
lret
sarb
ret
jo
fs
cltd
xchg
cmp
sub
cmp
icebp
mov
iret
adc
xor
je
pop
jnp
sar
jno
adc
fwait
loop
fidivrs
cmpsb
push
leave
inc
mov
lods
pop
jno
dec
pop
sbb
add
leave
out
lock
push
aam
leave
fisubrl
fxch
mov
jle
enter
outsl
lock
daa
subl
add
ljmp
jne
mov
jl
das
adc
sbbb
inc
pushf
je
jp
jecxz
xor
dec
cs
test
mov
add
sbb
shlb
mov
pop
sub
stos
std
in
into
cmp
push
in
gs
lods
out
or
cmp
stos
pop
push
sub
pop
push
loopne
mov
or
pushf
xchg
mov
ret
mov
and
std
adc
jg
sbb
testb
xchg
sub
xchg
stos
jecxz
adc
aam
stc
je
imul
in
pop
fwait
push
push
sarb
and
nop
cmp
add
insl
mov
cmp
pop
dec
xchg
jp
inc
pop
popf
lea
int
les
push
add
mov
out
jge
icebp
scas
pop
pop
mov
dec
movsl
mov
mov
sub
jge
cwtl
dec
lret
xor
dec
inc
test
pop
das
outsb
cltd
fmull
orl
cmpsl
popa
cmp
enter
jae
das
stc
arpl
scas
mov
mov
stc
jb
and
rcl
pop
dec
jl
sbb
or
fcomps
pop
dec
shl
out
cmp
xchg
push
and
ds
ds
dec
inc
sub
fwait
int3
add
es
xchg
movsl
fidivrs
cmpsl
pop
jg
cmp
xchg
adc
fpatan
loop
jns
xchg
sbb
lret
loope
xchg
into
push
jp
xchg
stc
out
inc
add
in
test
lea
push
or
xor
sub
xor
jbe
mov
pop
inc
and
imul
adc
pop
lea
in
iret
ds
icebp
add
jne
mov
sbb
ljmp
shl
pop
addr16
or
mov
sub
inc
rcll
popa
mov
adc
and
push
clc
mov
out
mov
jb
sbb
cmp
daa
mov
adc
mov
xlat
addr16
aaa
xchg
xor
rorb
out
clc
rclb
shll
repz
sahf
cld
jne
clc
out
adc
pop
mov
inc
insl
pop
push
mov
es
sub
shrb
lock
sahf
repnz
arpl
add
out
or
mov
add
stc
mov
or
push
jge
push
cli
popa
push
dec
push
aas
test
inc
gs
out
pop
pop
mov
loop
pusha
lds
adc
in
insl
fisubl
dec
xchg
inc
adc
lods
push
sub
sbb
adc
sahf
cmp
cmp
push
ja
leave
jmp
push
out
insb
jns
std
in
cmp
cld
fidivl
imul
pop
popf
cmp
sbb
inc
jge
clc
pop
cmc
pop
addr16
adc
loop
lock
inc
jg
inc
mov
ljmp
mov
out
mov
and
in
xor
cmpsb
test
sub
mov
cld
popa
lock
xchg
xchg
test
add
xchg
cltd
pop
push
inc
into
cmpsb
pop
add
shr
mov
push
sahf
pop
pop
pop
or
into
stc
sbb
and
xchg
adc
in
mov
mov
ss
dec
pop
sub
movsl
jae
inc
outsl
lods
xchg
mov
dec
outsb
cli
pop
int
jmp
bound
jg
sub
xchg
pop
pusha
pop
pop
and
imul
je
mov
jmp
dec
xchg
mov
adc
mov
inc
insb
lea
mov
inc
orb
mov
push
loope
adc
sbb
xor
dec
les
jge
loope
lret
leave
cmp
add
and
int3
jmp
inc
outsl
test
sub
fadd
stc
call
mov
pushf
sbb
fidivl
aad
and
aas
dec
out
pusha
mov
push
lock
loop
xchg
jns
cli
mov
push
xor
mov
jmp
add
ja
xlat
cld
nop
push
sbb
in
cmp
xor
sub
and
or
pop
pop
pop
pop
pusha
xorl
stc
int3
add
pop
add
fdiv
movsl
inc
test
or
xchg
addr16
mov
repnz
sub
fsub
in
push
push
cmp
jbe
cwtl
ret
add
mov
mov
dec
jmp
xchg
mov
mov
es
pushw
xchg
xor
mov
mov
jb
inc
xlat
jne
cmp
out
daa
push
sbb
loope
out
push
mov
gs
jbe
lret
int
ja
mov
xor
repnz
sbb
sbb
test
icebp
pushf
push
std
enter
movsl
dec
mov
jno
arpl
lahf
jmp
std
push
dec
imul
dec
jbe
cmp
jl
fisubrs
push
jbe
jl
scas
div
je
fidivrl
xchg
iret
test
and
loop
xchg
ret
mov
and
pop
aad
decl
adcb
dec
push
jnp
jg
in
fxch
pushf
in
push
shr
notl
loope
repnz
fs
pop
push
das
pop
pop
push
pop
mov
aas
dec
call
inc
xchg
push
xchg
sub
fmull
movsl
imul
pusha
lock
lahf
xor
movsb
mov
sub
pxor
push
jl
pusha
pop
push
jnp
xlat
in
and
bound
mov
adc
clc
jns
xchg
sub
ds
inc
inc
insb
pop
pop
sub
pushf
shlb
aas
pop
mov
outsb
add
sbb
cmpsb
jle
scas
lods
sbb
das
mov
jmp
les
imulb
cmpsl
sub
pusha
dec
aad
jecxz
jmp
aad
scas
push
and
es
nop
mov
mov
adc
fdivs
inc
mov
nop
add
cli
dec
push
jle
test
and
adc
loopne
inc
mov
mov
aad
and
in
test
cld
lock
cltd
test
xchg
or
xor
inc
adc
outsb
lea
paddusw
stc
shrb
ffree
pop
inc
mov
scas
mov
lahf
dec
loop
fistl
push
daa
sub
jecxz
lods
mov
vmaxsd
mov
pop
test
jns
adc
mov
cmp
shrl
adc
dec
cli
xor
outsb
data16
sub
mov
jle
cmp
call
adc
imul
pop
sub
mov
insb
mov
add
inc
mov
sbb
pop
inc
xlat
adc
mov
inc
daa
cmpsl
xchg
cmp
sbbb
ret
sbb
movsb
pop
or
or
jmp
lret
and
mov
jne
pmulhuw
lods
pop
jg
add
add
out
sub
divl
repnz
jbe
sub
jle
rol
mov
mov
cltd
enterw
stos
xor
test
jno
xchg
cmp
xchg
insb
jbe
jmp
jp
sub
outsl
sub
push
or
popa
xor
jns
jmp
fucomp
xor
jle
mov
push
mov
adc
sahf
jnp
adc
fists
aad
movsl
ljmp
mov
int
add
pop
xchg
sbb
xorb
mov
movsb
idivl
mov
jno
in
sbb
in
aas
nop
pop
pop
sbb
sub
std
mov
cs
inc
movsl
sbb
jo
push
shufps
cmpsl
sub
push
mov
push
es
popa
lret
fisubl
cmp
inc
xchg
sbbb
mov
aam
and
push
mov
or
cld
ds
cmp
dec
dec
data16
sub
ret
arpl
or
insb
es
ficomps
mov
jge
out
insb
scas
dec
mov
in
lods
fdivrp
loopne
lds
aaa
jle
and
xor
cmc
mov
gs
pop
mov
daa
leave
sti
fcomps
adc
jg
pop
mov
fmull
cwtl
push
lods
or
rolb
xchg
and
js
cmp
push
movsl
dec
mov
inc
aad
mov
out
shll
sub
mov
stos
sti
xchg
push
push
iret
jnp
push
mov
arpl
cwtl
pop
jle
jle
mov
mov
daa
mov
add
sub
aaa
cld
pusha
stos
mov
in
adc
inc
daa
add
cld
jnp
cmp
orl
pop
pop
adc
inc
nop
sub
arpl
repnz
adc
rcrl
in
xor
ret
mov
aas
dec
enter
xor
push
aad
hlt
xchg
push
push
test
je
lret
fcoms
js
mov
dec
push
pusha
mov
xchg
shrl
push
and
cmp
cltd
fcompl
ret
test
sbb
jl
or
les
imul
jnp
xchg
dec
addr16
sbb
xlat
mov
shll
mov
fdivl
in
popa
add
mov
cmpb
je
xor
stos
repnz
pop
fbstp
pop
loope
sbb
aam
push
pop
adc
out
adc
aaa
or
mov
dec
lret
stc
movsl
and
gs
lods
pop
loopne
add
jecxz
sbb
in
ljmp
repz
mov
stc
addb
iret
mov
fdiv
movl
jno
mov
mov
xchg
dec
cmp
or
insb
shl
xor
movnti
xlat
mov
adc
fstpt
andb
in
inc
loope
sar
movsl
fbstp
or
out
push
dec
dec
stos
pusha
mov
aad
and
pop
cmc
movsl
test
and
inc
jmp
mov
sti
mov
sbb
int3
xchg
pandn
jbe
xor
pushf
jnp
mov
mov
pop
lret
test
data16
jge
add
out
and
std
fprem1
orb
cmp
jb
dec
cmc
add
sahf
mov
jae
mov
icebp
and
mov
push
out
test
xchg
movsl
dec
push
sarl
adc
cmp
outsl
dec
loopne
notb
pushf
dec
sub
cmp
sbb
fwait
xchg
xor
std
cmpsb
lea
xor
arpl
push
push
sbb
es
mov
fsubs
or
outsb
add
mov
insl
rol
sbb
push
fnstenv
orl
in
pushf
stos
mov
push
push
in
test
loope
pop
clc
ss
cmp
cmc
mov
adcl
cmp
cld
shlb
jg
cld
sbb
sub
xchg
push
fs
dec
pushf
pop
sarl
dec
in
inc
jo
outsb
or
adc
in
xor
jnp
or
out
cmp
adc
push
insl
je
or
les
nop
in
jg
fwait
addr16
jge
fldenv
lds
sbb
push
push
popa
and
add
ja
pop
dec
call
lea
sbb
inc
orb
push
pop
jecxz
gs
pusha
rol
jns
out
mov
cmc
scas
push
es
xchg
sbb
pop
test
popf
mov
in
addr16
mov
adc
clc
scas
pop
lds
or
mov
test
pusha
fbstp
xchg
cli
popa
pop
pop
add
xchg
jmp
repz
jo
xchg
xor
dec
dec
jb
popf
ja
test
and
add
cs
in
adc
inc
push
popa
sti
test
sbb
mov
stc
lods
push
pushf
inc
into
fwait
mov
rorb
or
mov
icebp
scas
lret
fisubl
xchg
jnp
lahf
loopne
jns
cmp
addr16
and
das
or
shll
xchg
lock
or
sbb
mov
sub
push
xchg
inc
adc
out
mov
scas
popa
loop
pop
outsl
sbb
dec
add
xchg
ror
adc
adc
insl
rcll
stc
aaa
inc
jne
sub
cwtl
or
add
mov
movsb
inc
jl
bound
cmp
sbb
repnz
scas
xchg
aas
bnd
in
xchg
xchg
mov
adc
aad
daa
and
pop
pop
and
mov
test
jmp
and
imul
fadds
dec
cli
loope
jnp
push
mov
mov
fwait
imul
lods
aam
fbstp
test
jo
and
pop
jp
lret
mov
aam
in
lods
cmc
inc
fidivl
mov
push
sub
and
ja
cld
addl
sahf
jge
xchg
aas
cmp
nop
fcmovu
mov
ss
sub
add
cwtl
iret
icebp
ret
ljmp
imul
cmpsb
sti
pop
data16
pop
cs
bound
xor
mov
add
leave
push
mov
mov
je
fistpl
ljmp
in
movsl
iret
sbb
aad
hlt
movsb
popf
cmpsb
mov
jae
inc
xchg
sbb
xor
faddl
movl
rcl
mov
xor
fsubr
mov
lcall
jmp
ror
sub
jnp
dec
and
mov
movsb
fdivs
ret
out
sbb
inc
sbb
sbb
or
xchg
lds
cs
or
ficompl
in
ljmp
std
xchg
xorb
faddl
xorb
or
inc
pop
fidivrl
or
popa
adc
int3
push
xchg
adc
push
cmpsl
xchg
add
rorl
in
sbb
jmp
ficomps
lds
push
rorb
lock
pushf
cli
fmul
xchg
sbb
cmpb
sbbb
sbb
push
and
cmp
and
lret
cs
outsl
imul
jecxz
mov
test
loopne
xlat
popf
arpl
cmp
rorb
incl
push
dec
pop
imul
call
jmp
sbb
mov
scas
test
mov
dec
jne
cmp
push
mov
mov
jns
sub
bound
inc
cmp
outsl
cwtl
dec
dec
sub
cmp
ss
fstl
adc
push
lret
ficoml
movsb
inc
lea
shll
out
mov
mov
add
push
jb
inc
jae
mov
js
inc
mov
mov
xchg
movups
xchg
mov
inc
ffreep
cmp
in
add
je
ds
aas
into
std
mov
repz
gs
cmp
ret
js
das
and
testb
or
and
in
sbb
cmp
addr16
call
aaa
add
push
scas
xor
sbb
push
shlb
xchg
sti
insb
pop
inc
fsubrl
and
sarl
pop
push
mov
sahf
ret
shll
inc
sbb
daa
out
call
cmpsl
shlb
lea
pslld
sub
sub
dec
scas
stos
rolb
sti
hlt
dec
bound
lods
adc
hlt
add
adc
inc
mov
add
lods
faddl
in
lock
dec
push
out
pop
imul
iret
fcmovb
pop
loope
or
cli
pop
push
pushf
clc
mov
stos
xorb
sarl
scas
inc
sahf
int3
mov
ret
xchg
in
jno
outsl
in
lock
es
rcrb
jmp
movsb
cmp
inc
mov
clc
or
mov
loop
and
push
add
popa
or
adc
push
xchg
in
lret
push
push
jae
and
je
mov
cmpl
std
xchg
push
push
cltd
hlt
mov
mov
add
dec
loope
mov
xacquire
mov
es
sbb
je
lods
fdivp
xor
inc
mov
jp
jg
jmp
push
aaa
stos
les
in
call
xor
sub
loop
jae
sbb
std
aas
mov
xlat
loop
test
data16
call
cmpsb
push
add
mov
aad
fstpl
idiv
adc
fisubl
add
lods
dec
xor
mov
adc
aam
pop
in
mov
or
sub
sbb
mov
rcl
push
pop
loop
push
mov
scas
push
dec
rcll
pop
fisubl
pop
adc
dec
cmp
test
jge
xor
dec
pop
mov
jnp
je
ljmp
mov
sub
rolb
and
imul
jecxz
add
jbe
and
movsl
cmpsl
xor
or
dec
fsts
repnz
test
push
or
or
cmc
push
jo
mov
std
fnstenv
cmp
cli
pop
xor
mov
and
add
add
lea
mov
mov
sbb
dec
sbb
in
pop
stos
xchg
stos
or
inc
aad
dec
pop
aas
notl
dec
mov
xor
jmp
jno
pop
loop
jbe
rcll
je
mov
sbb
pop
push
inc
rcrb
xor
push
adc
pop
pop
in
pop
clc
leave
xchg
lret
sub
inc
jp
xchg
cmp
out
xchg
int
inc
and
aam
jnp
push
xchg
dec
ret
inc
jl
mov
pop
inc
gs
in
xor
xlat
xchg
xor
imul
into
jle
lds
push
xchg
mov
sbb
add
sbb
add
mov
xor
push
lods
jnp
sbb
add
rcrl
in
mov
xchg
cmpsb
xchg
je
push
mov
add
cmp
cmpsb
cmp
cmpsb
mov
dec
inc
push
mov
les
xor
jmp
enter
rcrl
jp
mov
add
jns
mov
aad
push
sbb
xor
pop
andb
loope
iret
push
add
out
lods
in
dec
fwait
jno
xor
sub
daa
ss
sub
lock
hlt
sub
nop
aaa
inc
push
xchg
cli
inc
xor
fisttps
fidivs
mov
cmpxchg
pop
sub
enter
sub
pop
in
xchg
decl
mov
inc
mov
push
clc
inc
ja
jl
and
cmp
sbb
cmp
fildl
pop
mov
ljmp
loop
int
and
es
cmp
lods
aas
cmc
xor
push
outsb
gs
test
dec
jge
repz
mov
cmp
mov
pushaw
pop
cli
ds
and
out
sbb
fistpll
sahf
adc
cltd
jbe
sub
mov
pusha
aas
pop
fdivrs
or
cmc
jmp
pop
mov
jbe
mov
hlt
popl
mov
andl
jge
sub
mov
ja
lock
and
fildll
jae
jle
into
int3
cltd
xchg
mov
lcall
dec
mov
notrack
cmpsb
cmp
cmp
popf
daa
rclb
das
pusha
xchg
push
sbb
mov
mov
mov
decl
stos
or
add
unpcklps
push
mov
adc
repnz
loopne
movaps
add
out
pop
mov
push
fistps
xchg
sub
mov
mov
xor
lods
repnz
idivb
daa
cmpsl
adc
out
gs
jnp
cmc
sbb
ss
dec
repz
out
call
test
push
leave
jnp
sbb
adc
or
add
mov
xor
xchg
inc
es
dec
aam
push
xlat
aas
arpl
shlb
call
and
adc
pop
lods
jg
orl
dec
test
ja
shrb
in
xchg
cmpsl
adc
fdiv
es
pop
inc
xchg
data16
mov
cmp
pop
nop
push
mov
fsubl
pop
pop
or
mov
orb
ficomps
jne
jp
sbb
jnp
mov
sub
imul
aam
pop
loope
inc
jl
mov
lods
sbb
outsb
cmc
repz
leave
enter
mov
add
or
and
mov
ljmp
outsl
or
jg
loop
inc
xor
mov
adc
sub
mov
flds
and
les
jg
push
or
imul
add
addr16
loope
push
mov
fs
dec
or
and
xchg
movsl
mov
movsl
and
push
push
lods
mov
inc
and
aam
add
and
push
repnz
insb
mov
popf
cmp
rorb
push
push
cwtl
leave
mov
jns
call
scas
andb
and
xchg
push
icebp
lcall
fisubl
in
stos
push
mov
xor
ss
jp
jae
shl
push
in
fnstenvs
inc
add
fneni(8087
sub
subl
imul
sbb
sbb
cmpsl
aad
sub
push
push
ljmp
nop
dec
std
sub
scas
pop
jno
jl
add
lods
xchg
icebp
lods
je
jnp
popf
xchg
adc
and
fidivrs
jle
ret
inc
jl
cmp
cmp
jnp
imul
ja
cmp
push
into
iret
jno
leave
xchg
in
sahf
and
jl
mov
pop
pcmpgtd
mov
mov
sbb
add
sub
jb
sub
loopne
jecxz
test
scas
cs
into
mov
push
cmpsl
push
inc
adc
mov
xchg
mov
cs
add
dec
sub
stc
inc
mov
xchg
xchg
inc
lea
rcr
cmpsl
inc
sti
shl
push
subb
add
push
mov
mov
pop
je
insb
ja
sbb
mov
clc
sbb
dec
clc
dec
pop
inc
divb
mov
or
das
dec
cmc
xorb
sbb
xor
fistl
roll
push
adc
jne
mov
mov
imul
dec
mov
sub
lds
mov
ret
and
mov
cmp
ss
jg
jle
mov
fisubs
push
lock
or
pop
shlb
and
mov
cmp
mov
insl
inc
pop
das
or
mov
aad
pop
sub
iret
mov
pop
mov
mov
sbb
push
jecxz
cmc
add
add
outsb
xlat
pop
shlb
test
mov
xlat
sbb
cmp
ret
jo
pop
or
into
fcoml
lods
cmpsl
add
popf
cld
les
inc
je
imul
ret
dec
xor
fmuls
out
sahf
xchg
cld
arpl
loop
sbb
mov
dec
cmp
fiaddl
jp
movsl
dec
push
out
push
add
dec
addb
mov
sub
popf
data16
lds
int3
adc
mov
adc
iret
pop
sbb
popf
mov
rorb
xor
pop
pop
xchg
stos
push
dec
jnp
push
outsl
inc
jmp
jl
cld
cltd
popa
nop
and
pop
out
iret
inc
xchg
clc
pop
in
cmp
jl
test
loope
push
add
decb
mov
movsb
dec
xchg
jg
xchg
pusha
mov
lret
jns
subl
cmpsl
and
ret
ror
xchg
pushf
add
add
mov
dec
xchg
pop
clc
jle
adc
sub
sbb
jne
jno
lret
push
dec
sub
loope
frstor
popa
mov
dec
stc
adc
inc
add
adc
mov
xchg
mov
xor
sub
dec
dec
pop
inc
push
mov
sub
or
ss
int
xor
in
std
mov
scas
mov
xor
pop
lds
sub
push
pop
aaa
std
repz
addb
insl
mov
xchg
or
jg
pushf
pushf
mov
dec
mov
xor
leave
jmp
pop
out
stos
dec
sahf
jno
cmp
cs
int
std
dec
imul
nop
cmp
mov
repnz
es
call
and
inc
push
cli
xchg
jae
add
mov
jp
xor
cmp
cmc
test
mov
add
cmp
out
jae
adc
pop
pop
lret
xchg
fwait
ds
and
fwait
xchg
inc
dec
cli
and
jmp
jmp
dec
fsub
test
jle
adc
lds
cmpsl
or
call
sti
fisubrs
insb
pop
push
xchg
aad
data16
mov
dec
out
xor
add
scas
sbb
lcall
into
adc
sbb
inc
fs
mov
in
cmp
loopne
add
xchg
call
fldenv
mov
mov
test
push
push
add
mov
dec
inc
xor
add
cld
xlat
pop
pop
push
mov
push
mov
mov
loopne
and
popa
loop
insl
pop
jb
inc
sub
sub
cmp
mov
in
xchg
mov
loop
sbb
fisttps
or
dec
test
ja
mov
test
movups
jns
popf
outsb
push
les
or
add
push
sar
popf
out
mull
and
mov
mov
adc
jnp
jne
movsb
cltd
sarb
mov
and
add
fwait
inc
pop
outsb
lock
ficomps
cli
sbbb
setbe
enter
push
jle
mov
int
popa
mov
inc
ds
test
mov
in
dec
out
mov
movsb
lcall
cmp
icebp
or
jnp
sbb
lahf
jg
jb
add
nop
test
cmpsb
test
jne
sti
push
sub
pushl
mov
lock
cwtl
adc
cwtl
add
fwait
push
jp
jp
mov
xchg
add
mov
cmp
addb
xchg
xchg
bound
dec
idivb
cmpsb
pop
xchg
das
subl
adc
in
push
imul
jae
push
and
in
inc
pop
cmp
push
movsl
add
pop
inc
fld
mov
lods
and
xchg
push
orl
jle
insl
rcrl
inc
fs
movl
ja
imul
xor
cltd
ljmp
int
pop
and
jp
add
cltd
into
enter
push
jo
jne
cltd
aas
mov
mov
xchg
mov
aad
sub
rcrl
out
addl
aam
push
cld
mov
cli
jo
adc
das
sti
jnp
or
ljmp
insl
movsl
push
jle
xchg
ret
jns
inc
mov
cmp
push
cmp
add
sti
loop
es
lods
test
sti
cwtl
cmpsb
and
stos
aad
test
test
repz
aaa
lea
sub
add
sbb
adc
repz
es
and
pop
mov
into
sub
arpl
xchg
daa
xchg
movsb
sar
jp
scas
push
pop
xchg
mov
sbb
sti
jp
and
std
cmp
cld
xchg
fstps
or
adc
repz
adc
out
les
add
ret
add
jecxz
jp
mov
jae
int
ja
xchg
int3
xchg
iret
adc
dec
inc
mov
cwtl
icebp
mov
jp
adc
iret
jne
or
mov
popf
xchg
fildll
nop
ja
lds
loop
push
rcl
jecxz
add
xchg
mov
arpl
dec
shlb
sbb
mov
stos
pop
lods
cmp
jp
sub
push
adc
xchg
mov
lods
pop
adc
jge
adcl
xchg
mov
push
pusha
into
cmp
pop
pop
dec
insl
xchg
mov
and
outsl
sti
arpl
sti
enter
mov
xor
rorb
lods
and
inc
cmpsb
into
mov
add
mov
pop
fisubs
stos
scas
mov
push
sub
out
push
andb
lock
lahf
jl
pop
or
add
add
inc
mov
daa
fwait
icebp
outsb
aaa
sbb
ret
stos
xchg
in
add
jle
add
xlat
push
cmp
aaa
cmp
and
push
lcall
lds
sahf
test
mov
xchg
lds
daa
mov
lds
push
pop
push
movsl
in
pop
test
add
mov
add
test
psubd
and
mov
push
fstpl
push
repnz
mov
adc
mov
outsl
push
pop
push
xor
sbb
ds
iret
mov
fs
mov
sbb
out
xor
out
aad
fcomps
jp
mov
pushf
fwait
jle
xchg
mov
inc
xor
xor
in
iret
jno
jmp
dec
and
mov
cld
push
fucomip
mov
dec
lods
add
dec
adc
or
aaa
shrb
cli
pop
rcll
mov
in
inc
pusha
jb
inc
push
dec
cmp
mov
sbb
addr16
in
or
mov
adc
adc
fs
insb
ljmp
and
sub
mov
outsl
dec
push
orb
inc
adcb
mov
dec
mov
pop
cmp
and
xchg
ficompl
cmp
mov
ficoms
sbb
nop
ret
adc
loopne
push
xchg
xor
inc
imul
dec
in
call
ljmp
mov
push
in
rcrl
popa
xchg
sbb
push
mov
out
xor
mov
mov
je
mov
gs
xchg
jl
inc
xor
or
xchg
stos
sub
sub
jno
mov
mov
imul
and
sub
jns
aaa
bound
push
aam
aas
push
push
or
icebp
cmpsb
hlt
cwtl
adc
jg
scas
test
pop
pop
ljmp
mov
out
jo
push
mov
mov
jecxz
mov
or
daa
lret
fsubrs
fwait
test
fstp
mov
jnp
pop
pop
xor
pop
cltd
push
popa
sub
inc
lock
dec
ss
and
insl
or
mov
lods
cmp
movsl
adc
xchg
int
pop
jbe
cld
sub
lret
pop
dec
sbb
leave
repnz
hlt
mov
and
jno
add
xchg
add
rclb
adc
mov
and
lret
adc
sub
test
push
fsubs
fwait
inc
xchg
daa
test
push
xlat
fldcw
subb
lahf
xor
movsl
inc
sbb
jge
fistl
sub
stos
cmp
sbb
lds
xchg
dec
aas
mov
inc
push
pop
cmp
loopne
sbb
jmp
mov
iret
test
jae
inc
sbb
gs
mov
jle
xchg
stos
jno
mov
jl
repz
test
add
nop
lods
jmp
sahf
mov
dec
xchg
mov
or
sbb
dec
repz
iret
sub
mov
pusha
stos
jns
fcomp
xorl
mov
mov
aas
idivb
fsub
jmp
call
pop
jo
jle
and
dec
gs
jp
fnstcw
out
gs
shll
mov
into
sbb
jmp
iret
adc
out
adc
sub
sbb
ror
in
mov
add
pop
sub
pop
arpl
fildl
or
mov
scas
int
or
sahf
fdivrl
mov
add
pop
cs
xor
cmpsb
cltd
sahf
jbe
mov
adc
xchg
or
sub
adc
fst
push
loope
jle
pop
xor
repnz
pop
scas
and
jb
in
mov
jmp
mov
idiv
or
adc
call
jnp
push
or
adc
rcrl
pop
mov
inc
nop
jl
shr
jno
fldl
mov
push
stos
mov
sub
xlat
jnp
fidivl
mov
xor
xchg
inc
shr
dec
push
mov
pushf
test
xor
movsl
fimull
inc
gs
sbb
mov
lock
add
push
je
mov
pushf
lea
test
stos
jbe
push
xor
dec
andb
lcall
mov
mov
and
xor
or
push
xchg
clc
cmp
scas
mov
jnp
jg
add
int3
add
dec
mov
mov
adc
imul
fimuls
pop
mov
dec
jno
ljmp
cmp
and
int
int
jp
mov
or
push
jb
int
imul
sub
int
sub
cmp
out
nop
jle
movsb
xor
or
insl
dec
cmpsl
leave
or
lahf
mov
push
cmp
sbb
mov
lret
leave
mov
loop
js
aas
sub
and
jb
lret
fidivs
xchg
mov
cmp
mov
pusha
xlat
inc
jnp
xchg
mov
sub
out
mov
testb
push
shll
adc
adc
sbb
push
and
gs
push
outsl
pop
in
push
ja
loope
sahf
mov
mov
cmp
lahf
adc
outsl
jp
and
jo
iret
push
lock
repz
daa
outsb
lahf
dec
iret
inc
xchg
xor
test
sbb
cmp
jmp
aas
xor
pop
testb
pop
out
dec
adc
pusha
addr16
pop
pop
jp
daa
jbe
neg
xchg
je
jne
nop
cmpsb
sub
mov
clc
cmp
cs
leave
aad
sbb
xchg
stos
inc
sub
cwtl
xor
ljmp
into
and
pop
pop
repz
xor
xor
add
int3
sub
sarb
mov
out
fldl
dec
cmpsb
push
lret
pop
js
push
data16
xor
fildl
loop
cs
mov
sub
or
gs
mov
xchg
int
adc
adc
roll
push
xchg
sub
jp
daa
js
ljmp
hlt
aas
pop
int
or
pop
sbbl
jp
xor
and
frstor
sbb
dec
aas
jne
cmpb
ljmp
ss
cmp
sub
mov
jmp
cmpsb
pop
and
mov
js
cli
mov
xchg
iret
jns
bswap
call
sarb
jne
loope
mov
sub
jae
clc
or
mov
adc
nop
int
sbb
xor
adc
or
sub
mov
xor
in
add
sbb
int3
cmp
sub
aas
icebp
sahf
sub
pop
pop
inc
mov
rolb
cmpsl
mov
or
std
pop
xchg
cwtl
out
scas
lret
test
lock
aas
shlb
out
into
les
adc
imul
cmpb
jb
sbb
pop
lea
or
dec
movsb
add
scas
sbbl
repnz
dec
js
into
dec
mov
cmp
lret
fcmovne
inc
jae
leave
dec
pop
add
inc
mov
add
inc
cltd
adc
push
cwtl
cwtl
cmp
outsb
mov
mov
pop
inc
jmp
sub
hlt
mov
ficoml
int3
out
stc
mov
mov
sbbl
lahf
das
xchg
sbb
xor
fidivrl
pop
clc
or
adcb
or
test
rcrb
inc
je
stos
std
bound
or
jle
jns
jne
test
jle
test
stos
pop
jmp
dec
adc
push
mov
call
sub
dec
aad
insb
or
fmull
xor
adc
lds
imul
mov
push
shrl
std
push
cltd
iret
cmpsl
loopne
dec
je
push
addr16
jb
or
pop
push
push
inc
mov
iret
loop
in
push
dec
cmp
in
pop
add
stc
add
dec
jns
inc
shl
arpl
les
dec
fimuls
scas
and
xchg
mull
jle
es
aad
add
inc
in
xor
enter
call
std
jg
push
dec
aas
and
push
enter
adc
inc
cli
xor
fimull
cmp
jns
add
scas
cmp
jp
leave
cmp
adc
out
xchg
jp
inc
sbbb
ja
cwtl
push
leave
pop
aam
sub
cmp
inc
js
dec
jo
imul
push
pusha
mov
fidivs
xchg
sbb
push
mov
test
mov
jp
add
pop
je
jg
clc
mov
push
inc
subl
aad
mov
inc
stos
vextracti32x8
xchg
cltd
out
jne
lret
fnstsw
push
jns
mov
movl
imul
inc
xchg
subb
mov
out
add
pop
sub
adc
sbb
jnp
aad
lcall
jbe
imul
mov
fwait
psubusb
jns
out
cmpxchg
test
addr16
fdivrs
test
addr16
out
push
lcall
push
jne
mov
cmp
mov
xchg
mov
cmp
insb
jp
mov
and
jmp
dec
and
inc
ds
lret
nop
aam
jb
push
mov
fcomps
mov
dec
stos
adc
pop
repz
ja
and
add
leave
mov
movsl
xor
cld
lahf
out
popf
mov
fistpll
repnz
int
es
mov
aam
pop
lret
out
sub
fwait
xchg
xchg
and
sbb
popf
in
out
pop
mov
push
inc
push
and
mov
bnd
mov
xlat
insb
and
das
or
in
push
fwait
lahf
mov
jns
adc
or
ja
xor
iret
jb
cli
das
data16
xor
cmp
or
push
mov
or
jns
inc
lds
les
cmp
lcall
adc
lret
dec
sti
fsubrs
rep
inc
or
scas
pop
faddl
aad
arpl
push
dec
inc
push
jo
sub
nop
rcrl
inc
xlat
cld
inc
out
pusha
ss
xor
inc
add
mov
xor
aaa
xchg
jb
ret
insl
or
es
pop
pop
sbb
sub
push
pop
push
fcomps
and
push
aas
movsb
lea
pusha
mull
rol
push
sub
leave
dec
xchg
psrad
pop
push
sub
xchg
call
sbb
jo
out
loope
sub
xchg
mov
outsl
daa
sbb
adc
pushf
loop
push
insb
or
pop
icebp
mov
add
fwait
jle
cmp
andl
cmpsb
xchg
sub
add
or
mov
sub
xor
cs
push
xor
sub
xor
mov
pop
int
xor
hlt
dec
orb
xor
movsb
mov
clc
dec
mov
mov
testb
cmp
hlt
cmp
or
aas
xchg
out
push
or
adc
movsl
shll
add
inc
xor
push
mov
push
push
leave
mov
xchg
sub
dec
cmp
test
mov
adc
outsb
xor
cltd
pop
dec
jo
out
int
push
fwait
inc
mov
icebp
adc
and
mov
mov
mov
cmp
jge
adc
cmpsb
add
push
or
andb
ss
push
push
adc
imul
mov
test
adc
dec
test
aad
leave
dec
fisubs
test
adc
or
imul
dec
mov
pop
jecxz
mov
decb
int
inc
mov
cmp
xchg
addr16
push
or
aam
or
ret
mov
and
cmpsb
mov
add
mov
lods
pop
shr
xlat
dec
fnstsw
lea
call
and
ss
and
or
shrl
rol
shlb
mov
mov
push
inc
hlt
cmp
jne
jl
inc
fadd
in
daa
pusha
push
je
fdivrs
and
inc
and
test
leave
sbb
adc
lahf
scas
dec
ficoml
enter
xchg
aad
rorb
loopne
out
or
dec
jg
mov
mov
inc
ficomps
repnz
xor
mov
jns
adc
xor
lret
xchg
mov
fisttpl
push
or
mov
push
add
sub
cli
mov
mov
aad
mov
mov
icebp
push
data16
sti
cld
adc
mov
xchg
sbb
fsubrl
rcrb
iret
and
aam
sbb
aad
lock
stc
lcall
sbb
cs
adc
std
mov
push
jbe
movsb
push
cwtl
ret
cli
stos
xlat
xchg
loop
lahf
mov
int
push
xor
andl
mov
xor
jge
mov
xor
jno
fmuls
jmp
es
decl
xlat
outsb
dec
inc
rclb
sub
or
insl
int
in
ret
cmp
mov
inc
xor
push
sbb
icebp
adcb
stc
sub
push
in
mov
cltd
imul
jg
mov
into
cli
sarb
pop
jb
fwait
outsl
popf
inc
out
sub
jae
and
push
xor
and
aas
jecxz
sub
xchg
int3
push
pop
pusha
sub
sbb
mov
pop
jge
test
or
mov
pop
or
pop
push
popf
jne
mov
sub
mov
jbe
adc
adc
inc
leave
dec
notb
in
sbb
or
mov
fldpi
enter
sbb
aas
lds
or
push
dec
cld
push
mov
lcall
push
and
loope
cmpsl
jne
add
and
sub
lods
mov
rorb
mov
addr16
jno
fidivs
mov
push
lahf
mov
orl
aam
xlat
sbb
imul
cmp
or
dec
xchg
stos
lock
push
cli
fldenv
int3
lock
or
sti
mov
mov
fdivs
ljmp
stos
xor
mov
sub
aad
xchg
jae
fldl
jl
std
test
lahf
das
cmp
dec
mov
xchg
stos
test
sbb
test
or
loop
stos
out
sbb
mov
fs
push
jne
lcall
popf
inc
fs
nop
sbb
fimuls
mov
sub
lds
lahf
sti
inc
out
aam
ja
roll
stos
out
mov
xor
push
hlt
pop
imul
pusha
jg
rcl
test
out
xor
add
sbb
rorl
aaa
xchg
insl
int3
xor
mov
or
hlt
xorl
xlat
loopne
outsl
in
adc
adc
lahf
mov
push
cmp
cmp
dec
inc
shlb
mov
jbe
loop
sbb
stc
pop
fstp
in
leave
pop
int
mov
push
dec
push
sub
pop
adc
fdivl
xchg
sbb
out
xor
sti
aam
cmpsl
xchg
mov
xchg
lods
jno
js
inc
push
mov
sbb
inc
inc
mov
mov
sbb
xor
mov
inc
nop
out
pop
sbb
and
inc
inc
jbe
jmp
mov
aam
incb
pop
gs
daa
jmp
xor
sbb
shlb
xorl
push
and
outsl
pop
leave
inc
xor
cmp
jne
lea
inc
iret
sub
and
dec
ficoml
mov
clc
mov
sbb
dec
inc
mov
dec
mov
and
fcmovu
cmc
jno
loop
clc
push
add
inc
mov
cmp
leave
lret
cld
cmp
enter
popf
cli
jp
jbe
arpl
sub
cmc
xchg
mov
icebp
int3
xchg
push
cwtl
lret
ffree
bound
adcb
adc
out
dec
jge
ret
cltd
or
cmp
push
jmp
xor
mov
jbe
shrl
movsb
mov
cmp
jecxz
out
xorb
mov
add
outsb
fildll
rcr
cs
sub
pop
jae
jbe
sub
or
pusha
data16
popw
mov
pop
mov
sbb
xchg
test
repnz
mov
mov
mov
out
jl
mov
punpckldq
cmc
outsl
mov
push
ja
lahf
xchg
xor
sub
int
cli
xchg
lret
mov
aas
and
lock
jno
lahf
or
cmp
insl
pop
mov
mov
adc
pop
out
fld
push
mov
fs
aad
lock
jbe
cltd
jp
dec
pop
cmp
outsb
imul
cmp
mov
rolb
inc
loop
ljmp
mov
outsl
popf
ficoml
shl
stos
or
cmp
aas
scas
dec
xchg
lret
testb
mov
push
loopne
cli
push
and
rcll
ja
test
mov
and
inc
out
mov
shrl
add
mov
cmp
stos
scas
mov
loope
cmp
mov
jecxz
dec
out
xlat
xchg
xor
jg
ljmp
sahf
lods
jb
or
sbb
leave
xchg
or
stc
icebp
fildll
push
out
imul
setge
sbb
lea
rorl
cmp
sbb
cmp
int
insl
mov
mov
add
add
lret
lret
mov
ret
scas
cmp
out
cmp
lret
mov
and
adc
jle
sub
pop
hlt
cmp
outsb
insb
pop
fidivs
mov
enter
mov
jne
jp
scas
popf
jbe
jbe
roll
outsl
adcb
fisubrs
push
or
fsubr
shrb
test
xor
pop
pop
jns
lock
rclb
das
mov
sub
les
xor
pop
jnp
jmp
xor
xchg
mov
aam
lahf
push
fistl
jo
fstl
jne
adcb
jbe
aam
popf
jns
or
jo
mov
mov
fsubrs
add
xchg
push
adc
nop
or
add
lds
add
xchg
jge
mov
leave
bnd
jle
enter
jle
pop
arpl
inc
por
jge
pop
es
aas
movsl
ja
mov
inc
rcll
mov
dec
sahf
sbb
jg
fdivrs
lods
pop
inc
call
hlt
and
inc
lret
lods
xchg
mov
fdivl
pop
xor
scas
lret
mov
xchg
cmp
jo
inc
or
movsl
fstpl
aaa
xlat
pop
push
cmp
stos
insl
jmp
mov
dec
adc
insl
mov
jno
add
sbb
xchg
pusha
nop
jecxz
add
insl
jecxz
push
jle
orb
neg
fistpll
cmpsl
dec
ret
mov
dec
shlb
add
inc
xchg
mov
mov
jne
mov
sub
mov
sbb
inc
insl
pop
aas
mov
mov
fdivrs
mov
lods
fnsave
jg
xchg
or
and
fldt
xlat
jno
mov
rol
xorl
loope
xchg
sbb
mov
bound
stc
inc
mov
mov
xor
or
add
cmp
ds
inc
lods
cmpsl
sub
dec
inc
push
ljmp
pushf
out
pusha
add
pop
shll
rcr
and
and
addr16
pop
stos
sub
cmp
lcall
cmp
mov
fisubrl
fildl
sahf
and
jo
jge
dec
mov
fiaddl
stos
and
std
out
stos
faddl
fcoms
xor
test
xorl
jbe
cld
push
push
in
sub
mov
hlt
popa
sbb
cmp
fdivp
push
adc
test
aad
jb
pop
repnz
lcall
jb
imul
clc
call
cmpsb
lds
mov
pop
nop
xchg
xor
imul
call
adc
cmp
push
xor
xchg
loope
xlat
cmovl
inc
pop
repz
sbb
mov
xchg
test
mov
inc
sbb
inc
xchg
sti
int3
mov
bound
gs
daa
and
push
out
js
in
rorl
popf
leave
push
and
orl
jecxz
jne
inc
mov
push
jp
dec
pop
mov
inc
push
jmp
es
fcom
test
mov
bound
xchg
movl
rcll
add
or
xor
adc
add
push
xor
mov
xor
dec
xchg
test
cwtl
dec
ds
ret
insb
lock
sub
cmpsl
cmp
mulb
repz
cmc
mov
cld
stc
jmp
mov
adcb
nop
popa
mov
jl
sbbl
loop
loopne
lret
jns
jae
daa
or
cmc
cmc
mull
lcall
ljmp
inc
inc
push
xchg
fs
dec
mov
or
lret
loop
btc
xor
adc
arpl
and
jmp
popf
push
and
out
loopne
mov
movsb
fdivrl
xchg
fsubrs
das
andl
insb
pop
leave
mov
mov
rcrb
mov
fstps
dec
aas
mov
jp
push
aad
call
xlat
add
or
mov
pop
bound
in
push
cmp
in
and
les
clc
sbb
ror
lahf
inc
jmp
stc
dec
mov
or
scas
push
stc
mov
adc
or
cwtl
pusha
xor
imul
inc
clc
xchg
mov
iret
lock
ret
mov
pop
aas
arpl
xchg
add
stos
mov
outsl
scas
jecxz
loopne
sbb
outsl
jnp
adc
out
lock
or
test
out
icebp
mov
movsl
pop
pop
push
cwtl
pop
cmp
sbb
dec
push
mov
into
dec
jl
cmp
movsb
pusha
inc
adcb
mov
cmp
push
in
push
in
dec
lret
addr16
sub
sbb
dec
sub
sbb
add
in
mov
outsl
sbbl
add
mov
cs
sbb
daa
loop
push
cmp
xor
mov
fsubrs
outsb
int
nop
push
and
adc
cmp
mov
roll
jecxz
les
stc
mov
inc
cmc
sbbl
xchg
and
stos
inc
call
pop
ja
cli
rcrb
repnz
xchg
into
xor
adc
adc
inc
xor
inc
mov
ret
pop
cmp
mov
jns
and
fwait
out
ds
mov
clc
pusha
and
push
fldt
adc
dec
mov
inc
lds
cmp
negl
stos
insb
pop
sti
sub
mov
inc
test
adc
jg
pop
jne
pusha
inc
hlt
cmpsb
adc
int
xor
push
push
pop
or
xor
xorl
int
add
mul
jmp
dec
paddusw
adc
cs
pop
fstpl
push
push
adc
pop
arpl
or
xchg
shlb
out
pop
mov
mov
rcrb
data16
fsubrl
stos
and
cld
or
xchg
push
scas
or
or
pop
mov
fwait
sbb
push
mov
sbb
pop
jg
mov
sub
xlat
arpl
or
pop
jne
js
push
pop
jo
divl
ret
fistpl
sti
lcall
sti
push
mov
jns
pusha
jns
out
jns
jmp
loope
inc
rorl
or
lahf
icebp
jno
push
sub
mov
pop
jge
mov
popf
sbb
mov
nop
iret
adcb
fstpt
rcrl
mov
inc
cmp
add
movsl
mov
jo
pop
icebp
das
lcall
inc
outsl
jo
mov
pop
xor
xchg
mov
sbb
mov
out
frstor
and
jge
leave
sub
fucomip
test
scas
ret
sub
jne
subl
popa
iret
and
or
aaa
adc
cmp
rcrb
add
inc
loopne
or
pop
xor
mov
test
adc
and
push
fs
flds
pop
aaa
ss
pusha
es
push
cmp
in
scas
sbb
push
sti
std
rol
push
inc
andb
add
push
movsb
push
mov
fwait
ja
iret
push
mov
repz
fcom
js
imul
movsl
into
xchg
mov
mov
cmp
lret
sbb
sbb
adc
jns
cmp
cmp
adc
icebp
in
cmp
add
pop
fistps
ja
sbb
int
push
push
mov
lret
jle
mov
sarb
repnz
cs
pop
ret
je
xchg
int
scas
loopne
cmpsl
add
sbb
dec
cltd
xor
lods
testl
fcomps
xchg
insb
xchg
testb
adc
aaa
loope
cmp
popa
js
das
dec
lcall
imul
in
sarl
jp
popa
loope,pn
push
insl
repz
lret
xchg
cltd
jb
xor
mov
int3
push
lods
pusha
jl
jns
bound
jnp
sub
mov
add
or
ret
inc
mov
jae
xor
insb
andb
mov
mov
xchg
push
pop
jge
pusha
out
repz
pop
cs
es
xor
adc
xor
jl
inc
dec
imul
imulb
push
xor
fstps
cli
movsb
mov
push
xchg
cmp
xor
jbe
cmp
xchg
cmpsb
mov
lods
sahf
loop
sbb
fisubs
mov
push
fistl
call
lods
xchg
in
mov
imul
xchg
cs
pushf
movlps
stos
fnsave
or
jbe
pusha
mov
jmp
sub
adc
enter
push
insl
mov
stc
bound
sbb
pop
push
incb
lock
sti
mov
das
sbb
pop
fists
lods
out
jne
push
imul
dec
mov
jno
fsts
push
push
test
out
std
jp
push
mov
adc
imul
sbb
nop
jecxz
lods
push
push
sub
mov
push
sub
dec
and
xor
or
std
xchg
movsb
fwait
les
inc
imul
pop
xchg
lock
leave
adc
sbb
inc
or
iret
andb
push
aaa
repz
pop
out
sub
dec
mov
pushf
add
inc
mov
into
lock
inc
lret
cmp
push
movsb
and
imul
inc
out
cmp
loopne
sbb
mov
insl
mov
in
or
insb
push
mov
mov
icebp
lods
inc
jmp
repz
jge
jp
loopne
push
push
aas
pusha
or
mov
std
push
in
xchg
jo
mov
dec
sbb
mov
test
pop
and
mov
push
popa
rcrl
jo
sub
and
dec
div
push
sbb
test
jae
jge
jle
js
pop
mov
sbb
dec
or
imul
test
movsl
or
inc
xchg
stc
stos
dec
aad
rcl
data16
in
push
and
jl
push
sub
lea
jne
std
imulb
xchg
sub
aam
mov
lcall
sti
pop
js
ljmp
test
xchg
sbb
int
inc
cmc
and
ret
fs
cltd
dec
dec
xchg
jmp
push
sub
push
dec
cmc
pop
jno
sbb
pop
sbb
and
push
add
cmpsl
fadds
scas
add
mov
int
lods
popa
jp
iret
div
lcall
adc
xabort
inc
adcl
and
and
and
leave
inc
fistpll
movsl
pop
mov
push
stos
lock
sahf
pop
cmc
shrb
shl
cld
and
subb
and
mov
rcrb
lcall
push
add
sti
les
sbb
js
repz
shlb
and
pop
push
cmp
into
call
subl
mov
enter
ficomps
aad
out
inc
ret
gs
sbb
mov
add
lods
xlat
jg
jp
pop
inc
xchg
cwtl
lcall
inc
test
fwait
mov
push
xchg
adc
fildl
sbb
out
test
inc
mov
pop
sti
loope
fucomi
cli
cmpsb
pop
xchg
aas
inc
sti
popa
cmp
pop
jp
sub
inc
call
fldenv
jle
pushf
ret
in
inc
sub
pushf
in
cmc
out
or
push
out
lahf
or
adc
xor
nop
cmp
out
jns
mov
xlat
xchg
pop
xor
fwait
loop
shr
das
lahf
scas
dec
in
and
jl
outsl
push
lock
or
cld
fprem
pop
sub
das
pop
mov
bound
cmpsl
test
xor
iret
mov
loopne
sub
add
cmpsl
or
xlat
loopne
or
xchg
jl
mov
dec
call
sbb
test
dec
sub
push
sbbb
das
or
daa
xchg
popa
rcll
rclb
pop
sti
xchg
pushf
int
movsb
popf
push
push
and
cltd
test
push
mov
shlb
mov
lret
mov
push
cmp
sub
add
div
sub
dec
inc
mov
stc
testb
inc
jno
enter
sub
stc
js
in
andb
ret
cmp
jp
cmp
das
dec
and
dec
xchg
add
jle
pop
mov
outsl
ja
mov
mov
push
dec
nop
add
int
sbb
into
repnz
jmp
lods
popa
xor
mov
mov
or
or
out
mov
vmwrite
inc
popl
pop
add
sub
ss
sahf
enter
xlat
xor
and
xchg
inc
roll
aaa
mov
cmpsl
ja
sub
jg
aas
mov
jo
andl
inc
dec
movsb
cmpsl
jp
pop
inc
aad
paddb
adcl
pop
ret
into
out
cmp
dec
rcl
enter
lahf
pop
jne
jns
push
cli
lret
mov
mov
sahf
lret
xchg
sbb
ss
xchg
sub
push
call
push
lahf
xlat
sub
stos
fbld
and
push
push
stos
aas
or
enter
pushf
sbbb
mov
mov
lcall
out
arpl
mov
push
dec
or
sbbl
jne,pn
enter
cmpxchg8b
int3
sbb
add
xor
loopne
les
sub
ret
cmpl
sub
mov
jnp
aad
icebp
xchg
cmp
xor
xor
int
scas
push
sbb
mov
inc
push
clc
stos
sub
out
mov
mov
push
xchg
cmpsb
mov
ss
adc
mov
pushf
or
fcmovnu
mov
push
dec
shrl
mov
inc
jb
mov
xor
xor
fnstenv
pop
ficompl
repnz
loop
mov
sbb
mov
ljmp
test
pop
inc
je
in
out
dec
popf
mov
stos
insl
mov
mov
jle
pop
mov
jnp
xor
xchg
inc
mov
mov
lds
jle
mov
les
push
cltd
imul
cmp
mov
or
insl
sbb
ret
mov
cltd
or
or
aad
xor
fwait
and
push
sub
push
les
push
pop
sbb
inc
mov
ficomps
imull
ja
lret
les
stc
push
pusha
enter
les
fs
mov
movsb
std
addr16
out
clc
addr16
adc
arpl
sub
imul
add
popf
sub
xlat
cmp
sarl
lcall
pop
leave
mov
push
pop
movsl
jno
dec
xor
into
or
sub
push
cmp
insl
loopne
mov
aaa
adc
out
cltd
rep
iret
push
rsqrtps
push
fnstsw
jnp
or
cmp
jns
cwtl
jnp
mov
jmp
push
pop
cli
mov
mov
lret
xchg
push
sub
add
dec
pop
and
add
pop
pop
in
add
into
fcmovu
xchg
mov
cmp
adc
xor
mov
cli
sbb
rcl
or
xor
dec
mov
xor
or
ret
js
adc
push
cld
imul
nop
sub
sub
cmp
sarb
bnd
js
rcrl
cmp
aaa
lock
in
inc
movsb
cli
subl
sbb
sbb
mov
push
ds
mov
in
repnz
pop
push
add
fildll
cmp
xchg
pushf
dec
adc
outsb
inc
lea
loop
sub
out
dec
aam
mov
sbbl
js
and
lret
jg
mov
movsb
add
daa
and
dec
cmp
mov
loop
cli
call
mov
xlat
inc
inc
add
and
jl
scas
dec
or
loop
movsb
dec
pop
jnp
push
fwait
adc
pop
neg
push
lock
mov
cmp
loope
mov
popl
push
jp
or
das
mov
cmc
xor
add
mov
mov
mov
fs
dec
cmp
xchg
cmp
jno
ja
mov
jmp
sbb
xor
test
jp
out
pop
add
aad
shll
sub
adc
dec
push
xchg
jb
call
mov
shlb
adc
or
lea
cmp
dec
sub
je
cmp
push
xchg
scas
notl
push
shrl
pop
sub
or
cmp
dec
scas
neg
frstor
mov
mov
les
dec
xchg
divb
inc
nop
lods
in
lcall
push
cs
gs
sahf
popa
in
lcall
orb
dec
popa
mov
aam
lret
lret
pop
add
jae
lahf
jmp
frstor
xchg
xchg
outsb
cli
mov
xor
mov
nop
fwait
addr16
pop
add
frstor
lods
shll
add
pusha
daa
add
pop
popf
adc
or
sub
fs
mov
jb
lret
mov
add
je
bound
xchg
mov
xchg
adc
enter
rcrl
aaa
cld
insl
dec
cs
lea
cmp
or
pop
pop
ret
cmp
push
pop
aad
dec
jo
dec
mov
and
inc
iret
xor
xchg
int3
sbb
div
lods
mov
pop
test
xchg
fnstenv
stc
cmc
scas
mov
jns
call
cmc
popa
in
and
xchg
ds
icebp
add
rcll
or
imul
mov
nop
test
shrl
pushf
insl
mov
and
adc
outsb
ja
pop
jl
fwait
push
outsl
iret
push
sub
fsubrl
add
add
outsb
test
xchg
out
mov
lcall
cmc
rorb
repz
and
pop
sub
gs
stc
xchg
jbe
fistl
mov
sub
push
inc
lods
xchg
std
sub
xor
aas
inc
cltd
inc
popa
jnp
dec
push
inc
inc
xchg
aam
jp
cmp
xor
cltd
imul
mov
fldt
in
mov
xor
jae
into
nop
mov
lret
dec
in
mov
mov
fldenv
sub
add
popa
xchg
outsb
les
mov
xor
lds
push
dec
lock
aam
jnp
inc
sbbb
les
arpl
add
pop
xchg
or
mov
xlat
dec
jecxz
outsl
xchg
mov
mov
jne
repz
cmc
inc
pop
std
adc
lret
or
bound
out
sub
mov
inc
lods
add
loop
xchg
cmpsb
cld
push
in
cmp
stos
dec
adc
or
inc
lret
xchg
or
xor
aas
xchg
fcomps
sti
sbbb
pushf
pop
or
divl
shlb
rol
ja
dec
cmpb
cli
je
mov
xlat
dec
enter
inc
test
scas
lcall
div
and
cmc
scas
das
movsl
mov
iret
call
mov
and
xchg
inc
mov
mov
orl
adc
cmpsb
aas
shrb
and
cli
add
or
fisttpll
movsl
int3
pop
das
mov
mov
mov
inc
push
sub
add
hlt
jmp
aad
pop
mov
sub
adcl
mov
pop
xor
mov
push
mov
pop
loopne
push
lock
test
push
push
int3
cmp
idivb
mov
pop
sahf
add
jp
dec
mov
fstpl
jecxz
add
sar
dec
fisubrl
push
rclb
pop
cmpsl
out
ja
cmpsb
pop
mov
addr16
jp
pop
adc
lret
sbb
repnz
lds
ret
dec
pop
movaps
cmpsb
jnp
jle
lds
xor
inc
sahf
lahf
test
mov
insl
aas
sbb
lods
mov
cmpsb
in
cltd
lods
push
jmp
int3
cmp
add
rcll
fisubrl
inc
aas
xor
mov
repz
outsb
push
popf
pop
xor
test
in
or
mov
lret
rolb
je
push
data16
enter
or
cmp
and
jge
cmp
movsb
lods
pop
push
shrb
inc
or
cmc
cld
xchg
hlt
or
fisttpl
sub
dec
adc
dec
mov
mov
mov
movsl
loope
inc
loope
aam
cmp
or
aas
and
lret
mov
imul
js
adc
popa
pop
xlat
lret
jns
neg
or
mov
aas
mov
icebp
or
pop
js
push
jp
jno
enter
sub
scas
push
shll
xor
dec
xchg
outsb
mov
sub
and
dec
imul
push
pop
jns
ja
jbe
xlat
mov
push
pusha
cmpsl
insl
clc
aas
dec
pop
jle
xchg
aas
adc
inc
arpl
jg
jbe
sub
inc
push
rcr
lods
pop
shrl
xchg
loopne
dec
popf
loope
addl
cmp
mov
mov
jb
loopne
add
cs
jbe
xchg
cmp
pop
lahf
sbb
shll
stos
mov
push
pop
mov
cmp
push
push
cltd
adc
ret
adc
insb
rcl
dec
mov
sbb
push
mov
pop
dec
jl
sbb
sbb
mov
movsl
adc
orl
or
hlt
xchg
jo
xor
orb
mov
jl
cmpsb
mov
sti
mov
aas
sbb
xor
test
sub
jge
lock
lock
outsb
jnp
sub
popa
mov
mov
inc
scas
cmp
or
push
insl
mov
xor
push
sub
rol
cli
xchg
mov
scas
out
inc
sbb
icebp
jge
xchg
jge
mov
push
jae
cld
mov
pushf
inc
push
les
js
pop
stos
bound
aam
daa
out
sbb
das
sti
pop
scas
decl
jbe
mov
or
pop
push
adc
inc
in
fcmovnu
mov
aas
jbe
add
mov
in
stos
or
mov
jl
pop
cmp
daa
cld
sub
lret
xchg
fwait
sarb
xchg
sub
lds
arpl
sbb
lcall
in
imul
addr16
cmp
mov
fnstcw
mov
inc
in
add
test
or
rclb
pop
push
shrl
test
adc
pop
jo
insb
sahf
cmc
sub
je
xchg
popa
data16
out
mov
and
or
sub
mov
gs
loop
push
stos
sub
xor
ret
int
iret
xor
pop
pop
sarl
enter
add
jle
popf
xchg
dec
xchg
adc
xchg
popf
js
add
int3
subl
lods
xor
ret
or
adc
idiv
fwait
mov
dec
hlt
outsl
jo
mov
mov
fcmovu
adcb
icebp
and
mov
jno
cmpsb
mov
adc
and
and
mov
mov
pop
pop
dec
adc
jo
inc
sti
test
inc
pop
fwait
mov
arpl
jle
pop
imul
xchg
stos
xor
pop
add
adc
aas
inc
roll
jbe
test
nop
mull
add
or
sub
pop
negl
inc
cmp
daa
sub
cmp
hlt
das
dec
mov
push
jmp
xchg
in
inc
out
fwait
xchg
sahf
popa
test
popa
dec
sub
aaa
pusha
and
subl
or
daa
dec
and
jo
sbb
or
push
pop
or
lea
call
jns
dec
dec
rcr
gs
xchg
jno
jae
adc
fdivl
arpl
mov
movsb
roll
xchg
adc
pop
mov
sbb
mov
and
inc
jmp
js
jecxz
xchg
xchg
dec
mov
sbbb
xchg
ret
xor
icebp
cmp
mov
inc
mov
pop
xchg
add
movsl
clc
cltd
add
lcall
adc
xchg
mov
cmp
imul
scas
jecxz
cmpsl
add
test
gs
data16
popa
mov
jne
mov
into
push
out
int
das
pop
sub
stos
adc
ret
sbb
sbbl
clc
mov
xchg
jbe
and
bound
movsb
sbb
mov
pop
sbb
xchg
or
div
dec
xchg
sbb
jge
aad
daa
xor
cld
xchg
add
xchg
jae
ljmp
movsb
stc
fstpl
rol
out
inc
ss
aad
inc
adc
cmp
dec
dec
lret
cmp
out
outsl
paddusb
or
stos
jl
fwait
popa
loope
pusha
testl
cwtl
dec
pop
jns
mov
pop
xchg
pusha
and
jl
repz
lock
dec
jbe
orb
mov
jnp
add
xor
outsb
movsl
les
lea
sbb
rorl
sbb
aam
mov
xor
arpl
ficoms
aam
dec
es
mov
adc
cmp
lods
cwtl
xchg
mov
fstl
clc
icebp
enter
in
fsubs
xchg
outsb
mov
shr
dec
sub
push
arpl
out
cmp
lock
in
loopnew
lret
mov
in
arpl
roll
movsl
sub
rcrl
loope
idivl
xchg
pop
xchg
jne
or
outsl
pop
cmp
cld
push
jnp
scas
dec
xchg
or
xor
inc
out
push
shrl
jns
out
pop
out
jmp
push
adc
leave
dec
dec
nop
pop
js
mov
cwtl
mov
icebp
loop
mov
add
divb
test
in
sub
imul
daa
cmpl
push
mov
sbb
add
xchg
push
popf
fdivrs
imul
or
pushf
lret
sahf
jne
pop
mov
cmp
pop
mov
inc
jge
cwtl
mov
sub
lds
pop
pushf
sarl
js
or
cltd
out
out
pop
cmpsb
jno
mov
ss
fildl
stos
imul
lods
add
mov
push
or
out
or
jmp
gs
insb
ret
pop
mov
test
mov
stc
pusha
cmp
jp
das
movsl
loopne
loop
movsb
xchg
inc
adc
sub
clc
mov
lahf
inc
mov
or
test
mov
mov
sub
fistps
pop
mov
mov
lea
and
jl
sub
cmpsw
xor
idivb
mov
mov
add
lcall
mulb
rcrb
and
loopne
lret
mov
jb
cmc
dec
mov
push
dec
subl
and
jmp
negb
xor
jecxz
push
push
cwtl
dec
xchg
xchg
or
mulps
test
mov
and
outsl
sbb
out
jl
movsb
enter
loop
in
sahf
mov
out
mov
xor
xor
add
pop
xchg
mov
jg
aad
jb
aaa
bound
aad
pop
sub
popf
pop
dec
popa
sub
or
imul
dec
imul
adc
nop
rcr
and
in
shrl
pop
mov
loope
int3
dec
lahf
dec
push
jb
or
in
mov
popf
dec
loopne
dec
push
mov
or
jne
test
lods
test
in
lea
mov
bound
fsubp
or
cmpsb
sub
imul
fsubrs
cmpsl
dec
sbb
gs
jl
push
inc
pop
lret
icebp
outsl
adc
cltd
cwtl
add
pop
jge
mov
cmp
sbb
push
test
aas
add
ss
adc
loope
mov
xchg
mov
scas
cmp
jnp
out
adc
cmpsl
pop
jle
stos
nop
lret
cli
mov
mov
int
les
adc
mov
jno
xor
pop
push
loope
lds
into
insl
rcrb
es
das
push
jae
pusha
jge
fsubrs
dec
idiv
in
pushf
push
jae
pop
jge
add
dec
pop
pop
dec
ja
lea
xor
xchg
push
sub
ss
jo
cmp
xchg
rcll
mov
test
data16
rcrl
adcb
jp
out
test
fsubl
xor
ss
sub
enter
and
push
inc
mov
ret
dec
ffreep
and
stos
mov
int
cmp
mov
push
je
js
lods
cmp
jle
cwtl
mov
ja
es
enter
jp
adc
sbb
out
les
sub
cld
lds
imul
xlat
jp
stc
and
std
mov
pop
cmp
loope
hlt
inc
mov
push
lock
or
pop
movsb
push
sub
sbbb
dec
mov
xchg
fiadds
add
iret
jle
pop
repnz
xor
lahf
js
loopne
xchg
aam
jl
and
fsubrs
mov
and
push
or
mov
mov
pop
pop
push
stos
mov
ja
aam
out
xchg
or
rcrl
xchg
loop
imul
mov
xchg
push
adc
jae
jne
dec
xchg
in
ds
mov
mov
xchg
add
mov
inc
fstpl
daa
in
jp
push
cmp
lods
fnsave
fcompl
jb
xor
rorl
fistps
push
rcr
es
pop
fmuls
lret
inc
orl
sub
mov
mov
sbb
mov
les
mov
lods
mov
sub
jo
dec
mov
iret
xchg
fwait
aam
testl
test
jl
xor
jle
mov
sub
add
pop
test
jp
push
inc
popa
mov
sub
mov
outsl
pusha
inc
mov
out
out
out
lret
mov
outsb
xorb
ret
stos
pop
enter
jmp
fwait
enter
test
push
xor
add
sbb
xchg
add
xchg
lcall
nop
push
out
pusha
mov
cmpsb
mov
or
sbbb
stc
push
nop
das
rcll
sti
mov
dec
xchg
mov
push
cli
mov
jb
aaa
cmp
jge
add
jl
fcom
mov
pop
pop
adc
xchg
jbe
push
loop
adc
hlt
and
push
aas
out
paddb
xchg
out
fildl
loopne
out
scas
sub
adc
jnp
inc
iret
dec
outsl
orb
inc
add
addl
sbb
loope
mov
imul
xchg
sub
push
in
inc
fs
adc
fmulp
mov
push
or
push
aam
clc
fimuls
outsb
pop
mov
push
test
jnp
std
mov
xchg
arpl
fwait
aas
cwtl
ds
sbb
aad
xor
mov
flds
push
lea
mov
xchg
sti
out
cmpsl
daa
addr16
ja
out
cmp
xorl
lret
loop
loope
addr16
rolb
cld
clc
cmpl
mov
pop
pop
jl
add
orb
xchg
add
cmp
push
insb
dec
into
lcall
fs
mov
jns
mov
shr
in
add
pop
adc
cltd
leave
lds
pop
add
sbb
loopne
dec
gs
rol
pop
sahf
in
cmpsb
les
enter
aam
sub
fadds
xchg
xlat
sbb
or
movsl
les
xchg
pop
outsb
out
es
sbbl
add
ljmp
pop
rcrb
jecxz
fadds
loopne
sbb
mov
ds
pop
pop
shll
or
jbe
lock
xchg
sahf
jne
fwait
and
xchg
int
stc
std
add
jle
sub
cs
int3
stc
ror
sar
push
jne
lods
insb
mov
push
pop
sub
inc
xor
jne
sub
lahf
xchg
jae
mov
xchg
ds
iret
sti
sbbl
sub
sub
fs
sub
aam
inc
scas
or
les
jns
fiaddl
je
roll
fsubrs
add
xor
out
popa
mov
xchg
mov
int3
mov
jp
faddp
add
fs
cs
add
cs
or
mov
mov
shl
stos
mov
popl
ret
add
xchg
in
pop
or
xchg
mov
push
push
fcomps
cld
mov
dec
out
nop
xchg
push
ret
xchg
repz
cmp
xchg
fwait
lahf
fwait
push
xchg
ljmp
jp
dec
sbb
sbb
add
loop
add
or
mov
icebp
stc
jg
popf
push
loopne
movsl
jle
scas
push
shlb
xor
cli
lock
adc
adc
mov
mov
fwait
clc
push
mov
lcall
jg
hlt
jnp
push
test
jmp
in
pop
addr16
sub
out
les
fs
and
cmp
mov
mov
sbb
sbb
popa
cmc
inc
psllq
or
mov
out
push
test
inc
and
mov
push
shll
adc
in
movsb
fsubs
xchg
pop
ret
jecxz
xor
jle
stos
mov
cmp
fldcw
and
mov
popa
mov
out
movsb
sbb
fdivl
xchg
fst
fcmovnb
outsl
aad
cmp
jae
notb
lea
push
pusha
mov
push
push
in
in
data16
lahf
lock
jb
ret
sub
mov
pop
add
lods
inc
or
cmp
add
sarl
clc
inc
mov
pop
stos
pop
pop
ret
and
pop
iret
dec
in
lds
das
out
sti
call
push
mov
jg
or
in
jg
jns
sub
icebp
fiadds
fbld
jp
cwtl
insb
inc
pop
movsb
sbb
mov
xchg
pop
push
pop
xchg
test
xor
leave
adc
fdivrl
dec
mov
in
mov
aaa
in
cli
sbb
mov
jg
and
subb
add
xor
pop
sbb
testb
negb
shlb
pushf
mov
mov
das
cmpsb
or
lods
aad
insl
xor
add
fistpl
sbb
push
movsl
js
or
xchg
popa
mov
shlb
out
hlt
sbb
mov
insl
fiadds
gs
mov
add
mov
dec
inc
je
mov
mov
mov
shrl
sub
popa
sbb
orl
out
add
jmp
push
mov
fldenv
into
cmpsl
in
ret
or
mov
push
jle
imul
and
sahf
inc
data16
add
sub
mov
gs
dec
mov
clc
popa
filds
pop
ror
dec
jle
mov
jmp
cmpsl
icebp
inc
popa
pusha
push
clc
outsb
rolb
jae
aam
lret
sub
loope
mov
jle
xchg
es
cmp
in
mov
data16
push
cmp
in
push
inc
mov
fwait
clc
daa
call
sbbl
lea
popa
xor
mov
push
xchg
mov
lods
les
adc
or
jnp,pt
outsl
loopne
cmp
std
aam
adcl
inc
nop
pop
mov
jp
andb
jne
test
ljmp
test
leave
xchg
inc
add
movsl
cmove
sub
rclb
inc
shll
cmp
mov
cmp
mov
pop
call
shll
push
es
pop
jl
pop
scas
clc
mov
jge
mov
jg
sbb
ret
std
sahf
cltd
sbb
mov
xchg
in
mov
push
sbb
push
mov
jl
scas
or
enter
lods
adcl
xor
dec
ljmp
jnp
pop
sti
mov
mov
pop
dec
and
cli
and
test
add
push
mov
add
jb
xchg
shl
adc
mov
xchg
outsl
cld
xchg
test
jno
push
cli
mov
jae
add
dec
arpl
decl
or
mov
pop
sub
dec
andl
loopne
jns
add
push
pop
lret
jl
sbb
cmp
imul
lahf
or
into
inc
imul
movsb
sub
pushf
pushf
daa
mov
mov
adc
lds
push
out
lods
shlb
into
dec
out
sub
inc
sub
js
ljmp
pop
mov
out
add
lock
jl
push
or
jns
hlt
repnz
leave
mov
pop
rcrb
xor
gs
and
cmp
lds
jnp
jl
xor
cwtl
mov
out
sub
sbb
scas
lods
inc
fmull
jecxz
adc
mov
xorl
and
sub
dec
sahf
inc
mov
push
push
ja
jb
mov
and
fidivrl
or
jmp
idiv
out
inc
dec
aam
loopne
ljmp
xor
mov
dec
cmpb
xchg
or
scas
cmp
movsl
jb
out
cmpsb
jge
scas
and
sub
jg
xor
pop
xchg
cmc
popa
aaa
mov
pop
sub
popa
push
orb
stc
out
push
mov
lret
mov
jo
mov
push
aas
mov
pop
icebp
pop
jp
push
inc
ds
and
out
cmp
pop
test
lods
cmp
inc
xor
mov
push
mov
jge
std
mov
test
stos
rorl
push
stc
xor
outsl
xchg
xchg
loopne
mov
add
inc
in
push
cwtl
pop
jl
mov
mov
push
mov
xor
insl
out
jle
adc
adc
add
mov
aam
imull
enter
push
sub
inc
mov
test
or
adc
mov
int
movsl
mov
mov
fwait
nop
ret
mov
stos
xlat
jge
pusha
pop
adc
mov
fcmove
or
and
jge
jmp
cwtl
mov
xor
sti
leave
xchg
mov
orb
xchg
add
push
jno
sub
or
mov
out
shrl
lods
aas
cmpl
or
pushf
lahf
adc
inc
add
pop
loope
xchg
mov
cmp
ficomps
jns
add
popa
mov
and
insb
inc
jb
data16
pop
mov
cli
xchg
aas
xchg
jp
rcrl
mov
or
pop
mov
ja
fcomps
xor
sub
jmp
cmp
iret
jle
rcll
mov
cmpsl
jmp
push
mov
push
insl
je
mov
sbb
stc
jmp
jns
outsb
ljmp
divb
call
insb
xor
fimuls
hlt
sti
pop
popa
unpcklps
mov
ss
icebp
jp
and
iret
fiadds
cmpsb
mov
sbb
xor
lds
add
inc
dec
jg
and
aad
jmp
in
or
xchg
negb
out
and
aaa
mov
xchg
dec
gs
aad
scas
jecxz
xorl
icebp
mov
out
movsb
ljmp
xchg
lret
pop
pop
xor
jno
adc
mov
pop
ret
jbe
rcrb
cmp
xorl
call
inc
sbbl
inc
mov
sbb
add
dec
or
stc
pop
int3
test
lods
call
inc
xor
mov
cmp
or
mov
push
sbb
in
aad
fisubl
arpl
aas
mov
sbb
xor
xchg
push
dec
ficoml
mov
out
xor
ficoml
pop
cmc
shll
xlat
rdtsc
jmp
pop
sbb
divb
lcall
inc
cmp
xchg
jg
cmpb
imul
inc
shr
mov
adc
mov
and
mov
imul
rcrb
pop
adc
das
pushf
fidivrs
repz
dec
sbb
pop
test
jbe
jp
ja
or
cmp
std
jmp
inc
and
or
and
movsl
push
xchg
adc
xlat
imull
shrb
push
or
sub
js
scas
jle
jo
adc
jnp
push
adc
mov
int3
scas
notl
cmp
bound
inc
cmp
scas
mov
dec
inc
xor
sbb
sbb
out
mov
adc
push
xchg
lds
clc
xor
sub
mov
cwtl
fdivr
sti
lea
or
loope
call
out
insl
iret
and
jbe
pop
jge
pop
jl
aas
imul
lahf
sbb
mov
jmp
sbb
xchg
or
pop
lahf
cmp
mov
div
call
mov
lods
lock
cmpsb
mov
into
lods
jmp
test
cmc
in
fcompl
add
inc
mov
jle
mov
ret
mov
mov
testb
jo
push
and
int
iret
sbb
pop
out
push
mov
sub
sbb
pop
push
inc
push
or
jae
insl
push
push
pop
popf
cmp
insb
jle
imul
icebp
cmp
ljmp
dec
mov
iret
fmull
mov
bound
sbb
add
sbb
jg
bound
in
sbb
gs
mov
push
or
cmp
push
inc
mov
mov
xchg
ljmp
jp
mov
test
pop
cmpsl
sbb
stc
cs
fs
mov
add
or
adc
shll
push
int
mov
je
mov
clc
add
mov
iret
or
mov
out
and
mulb
sub
sbb
inc
je
jae
mov
mov
aad
dec
fidivrl
mov
add
mov
daa
jmp
jb
xor
mov
add
ljmp
ja
inc
add
and
dec
pop
and
adc
loopne
jl
dec
int3
add
inc
pop
and
pushf
lods
xchg
lcall
scas
pop
out
lcall
sbb
pop
xchg
push
xchg
jmp
cmp
movsb
jo
add
xor
mov
lods
call
sub
jg
mov
insl
out
push
xor
imul
les
mov
xor
mov
es
xor
loopne
rclb
push
push
popa
test
int
add
cmp
jg
or
in
outsl
es
decb
shrb
mov
dec
int3
or
ror
mov
add
nop
xor
iret
mov
and
cwtl
fstl
xchg
push
cmp
ret
test
mov
xor
push
push
cld
xor
cli
xor
sub
cwtl
call
jnp
mov
lods
dec
and
rcll
ljmp
enter
push
xchg
jmp
das
xor
pop
inc
cmp
xlat
push
sarl
add
popa
ja
int3
and
test
xor
sbb
xchg
mov
fnsave
pop
inc
call
mov
jae
mov
jmp
or
in
mov
call
xchg
push
xor
push
fmull
and
mov
mov
mov
mov
lock
loope
outsl
into
cs
mov
jp
inc
jnp
mov
xor
mov
mov
add
add
or
fcoml
aaa
adc
mov
add
fs
lods
jb
pop
ffreep
mov
imul
mov
xchg
cmp
mov
ficoml
in
dec
sbb
in
push
loopne
incb
push
rorl
in
xor
pop
adc
xchg
xor
imul
push
shr
jno
movsb
cli
jo
pop
dec
mov
rorb
ljmp
subb
push
shrb
or
sarl
jecxz
push
mov
insl
inc
loop
push
shll
pop
es
sub
sub
stc
addr16
ja
repnz
test
ss
enter
data16
out
push
out
cs
xchg
pop
mov
cmp
xor
fwait
adc
insb
xor
adc
xchg
jle
std
popa
int3
mov
lahf
sbb
mov
ficompl
faddl
mov
xor
imul
cs
xor
mov
ja
scas
push
and
adc
push
push
jle
pop
sahf
mov
pop
xor
dec
add
orl
jnp
test
mov
add
insb
fistl
mov
nop
addr16
inc
push
imul
push
icebp
mov
push
sub
lahf
inc
ds
hlt
cmp
cld
bound
xlat
das
into
dec
mov
push
lret
add
mov
jno
add
adc
mov
or
xor
xchg
pop
jne
pushf
jnp
and
inc
cld
cmp
icebp
out
push
jge
jmp
dec
pushf
loop
inc
in
xchg
cmp
xchg
repz
dec
xchg
or
mov
popf
adc
cmp
pop
ret
iret
xor
in
mov
out
out
fadds
sub
inc
push
pop
mov
cltd
sbb
mov
in
scas
cmpsl
push
subb
xor
jnp
pop
adc
mov
push
daa
jp
lds
cmovbe
mov
out
jle
cltd
out
xchg
mov
cmp
sub
pop
stos
test
xor
mov
test
cmp
mov
mov
iret
mov
sub
jbe
push
push
adc
add
mov
pop
stc
push
cmp
pushf
fistps
mov
mov
out
cwtl
adc
test
sarb
fwait
and
add
jo
pop
dec
push
out
mov
mov
gs
mov
fldl
xchg
scas
or
cltd
add
ja
add
jmp
xorl
add
fs
rorl
xor
cmc
pop
mov
cmpsl
xchg
ds
dec
mov
adc
pop
sbb
ss
in
lret
xchg
jo
xor
dec
pushf
data16
mov
cmp
xchg
movsb
dec
mov
push
sub
cmp
mov
inc
test
push
test
mov
xor
mov
adc
mov
adc
sbbl
pusha
enter
mov
imulb
jns
cmp
mov
jo
loopne
dec
sbb
in
mov
adc
mov
addr16
imul
pop
leave
xor
pop
cmp
js
dec
sbb
xchg
aaa
fxch
jne
call
pop
in
add
sub
faddl
lcall
hlt
loopne
add
test
fistl
in
out
jle
incl
sbb
sub
rolb
dec
mov
shr
mov
popf
adc
or
ds
dec
or
mov
fistps
cmp
xor
xchg
ja
rclb
fsincos
in
sub
les
cli
incb
xchg
lds
and
dec
jns
xlat
pop
andl
cld
test
pop
fwait
cmp
fists
mov
sub
add
sbb
stos
mov
incl
pop
dec
loop
jecxz
test
mov
dec
popf
dec
xchg
add
ss
sahf
in
int
jecxz
arpl
mov
push
loopne
sub
xchg
sub
inc
nop
out
inc
mov
shlb
popa
mov
jb
push
mov
mov
fnsave
and
mov
scas
stc
mov
sub
in
mov
xchg
mov
sahf
adc
aas
and
and
or
aas
fildll
out
sbb
in
not
xchg
sbb
sbb
dec
test
je
inc
jl
test
outsl
stos
jnp
xchg
notb
sub
mov
popa
in
push
xchg
sub
and
xchg
sbb
xchg
and
push
jo
inc
in
int3
mov
inc
incl
push
xor
testl
imul
jbe
fadds
ljmp
lret
mov
sarl
push
fadds
in
sahf
add
sbb
es
sbb
mov
mov
popf
repz
push
mov
add
ret
movsb
or
cmp
xchg
cwtl
shlb
insb
les
in
sbb
jp
sub
xchg
and
dec
mov
sbb
loop
push
insl
cmp
sub
rcrl
arpl
xchg
mov
mov
loope
xchg
pushf
fidivrs
mov
out
sbb
in
jg
jo
fisubl
mov
inc
out
out
mov
fucom
jno
sarb
jne
lahf
sub
rcll
imul
scas
mov
rcr
and
ret
and
xor
adc
or
out
shlb
mov
jne
or
xchg
aaa
insb
in
adc
xor
sub
outsb
pushf
jbe
hlt
sahf
jns
pushf
lret
outsl
stc
clc
jo
loopne
stc
inc
ljmp
sub
jp
ficompl
sub
add
lea
cmp
push
xor
dec
insl
fmul
inc
stos
fdivs
and
mov
adc
xor
gs
dec
orb
hlt
dec
push
mov
mov
fwait
or
add
inc
lret
xchg
imul
cli
jmp
test
jmp
and
clc
std
js
mov
cmc
mov
xchg
sahf
inc
xchg
mov
fcomi
cltd
add
jns
popa
jg
jae
clc
push
push
mov
sub
sbb
std
aad
jne
and
jle
pop
stos
mov
je
add
imul
filds
cwtl
xor
adc
arpl
aam
mov
test
cmpsb
mov
hlt
rcrl
sub
inc
mov
das
lcall
cld
stos
scas
ds
iret
mov
jno
cmp
lea
mov
dec
and
xchg
cmpsl
test
sub
mov
ret
mov
mov
push
aas
push
cmp
adcb
fistl
ss
outsl
or
imul
push
fsubl
ss
in
push
dec
cmc
lea
dec
lods
xchg
sub
stos
popa
repnz
add
cmp
das
xchg
inc
adc
lret
into
addr16
push
aaa
cs
pop
sbb
pop
call
aas
or
jb
lcall
clc
iret
pop
mov
sbb
sbb
pop
push
jmp
nop
inc
rorb
push
mov
xchg
push
test
out
pop
inc
and
cmp
mov
mov
adc
cltd
mov
cmp
dec
decl
and
icebp
sbb
ss
xor
jbe
in
jge
ja
aas
adc
iret
out
inc
lret
mov
outsb
fidivrs
xchg
or
xchg
mov
jg
outsl
hlt
test
ds
adc
jge
cmp
xorl
jns
sub
pop
iret
cld
xlat
pop
push
ficomps
jg
data16
lcall
xchg
cmp
pop
int3
loopne
and
cltd
jle
js
mov
nop
and
mov
daa
repz
sub
scas
and
fnsave
pop
jno
insb
in
int
push
pusha
push
jo
mov
xchg
jno
mov
in
adc
mov
and
sbb
data16
xchg
rcl
xor
lcall
loop
imul
loop
pop
pop
xchg
dec
mov
xchg
mov
insl
hlt
mov
xchg
jno
jp
push
jo
out
repz
std
and
data16
hlt
jb
shll
imul
adc
sbb
les
sahf
cmc
divl
adc
clc
xlat
sub
xchg
or
cmp
cmpsb
mov
sub
daa
or
imul
dec
scas
ljmp
sub
xchg
ret
movsb
mov
pop
lret
rcll
cmp
mov
inc
mov
and
adc
and
cmp
dec
fdivs
sub
sub
shl
mov
pop
stos
cmc
cmp
scas
cli
in
mov
and
lret
jnp
loop
shlb
jmp
mov
mov
fs
and
sub
mov
xlat
mov
scas
movsl
xchg
sbb
inc
sbb
cwtl
fbstp
cmp
jno
lahf
pop
pop
jo
dec
inc
fcompl
cmpsb
fisttpl
sub
dec
mov
dec
repz
test
xchg
push
pop
mov
fildll
sarb
sbb
push
stos
push
lcall
movsl
inc
mov
out
popa
or
sbb
mov
icebp
jno
jns
mov
push
insb
lds
test
repz
into
sub
xor
sahf
stos
dec
dec
jae
test
stc
jl
mov
push
mov
fistpll
lds
inc
icebp
mov
inc
dec
data16
fisttpll
xchg
pop
xchg
out
mov
xchg
sub
int
and
aaa
xchg
in
je
cmp
xor
mov
cltd
and
cmp
stc
mov
repz
and
sub
icebp
add
mov
cmpsl
cmp
push
and
jp
push
mov
adc
rorl
xchg
mov
or
pop
nop
shlb
inc
fldcw
or
sbbl
xchg
ret
movb
stos
push
push
shrb
push
sub
mov
add
lock
inc
fstpt
dec
cmp
int3
push
mov
outsb
jle
in
aaa
in
imul
sub
insl
jnp
arpl
lods
test
and
or
in
xchg
mov
pop
mov
fsts
and
pop
stos
jl
xor
mov
jmp
cli
sbb
mov
jg
sbb
loope
nop
xchg
xor
outsl
mov
sbb
sub
shll
sti
push
call
cmp
mov
int
enter
dec
cmp
mov
sbb
xchg
xchg
xchg
rcll
xchg
shrl
fsts
fistl
jmp
sbb
inc
pop
gs
add
daa
in
jb
push
mov
repz
jge
or
ja
popf
adc
inc
jmp
lea
shll
test
in
mov
mov
mov
dec
mov
or
fwait
push
les
lret
aas
popf
int
loop
fstl
xor
sarl
jae
loope
test
aaa
mov
out
xchg
dec
fistps
test
dec
stos
btc
inc
pop
xchg
push
adc
dec
xor
insl
pushf
into
insb
push
mov
add
sbb
ret
mov
add
int3
inc
stc
push
add
mov
xorb
push
gs
cld
and
stos
sbb
std
lcall
pop
pop
notb
cmpsb
mov
movsb
inc
sub
sub
stc
dec
orb
rcrb
jg
cmp
inc
sahf
orb
dec
push
mov
sub
sub
jge
mov
adc
xchg
sbb
sbb
iret
dec
sarb
test
div
pusha
loop
int
shll
dec
fsubl
mov
cld
jmp
mov
imul
rcl
cmp
dec
ficoml
mov
dec
xor
mov
xchg
aas
insb
jle
imul
inc
lcall
imul
es
popa
mov
and
push
sub
pop
cmpsb
pop
jle
sbb
sbb
xchg
dec
repz
cmp
and
in
sarb
loop
insb
test
lods
ror
fildll
adc
mov
push
inc
shrl
or
pop
jne
mov
jb
dec
push
inc
enter
xor
xchg
repz
mov
mov
xor
andb
or
fsubrp
aad
movsl
push
addr16
push
dec
test
sarb
imul
inc
mov
jbe
sub
lods
ret
outsl
dec
jno
shlb
mov
dec
pop
pop
fwait
ja
ds
orb
pop
jg
dec
divb
mov
mov
imul
xor
jge
lcall
mov
sbb
push
cmc
xlat
leave
fcomps
outsl
inc
insl
mov
insl
dec
call
jecxz
sbb
mov
lahf
xor
cwtl
ljmp
movsl
insb
iret
sub
scas
push
jnp
or
jnp
lock
decl
and
test
push
dec
dec
cmpsl
mov
push
test
std
les
inc
mov
sub
or
mov
popf
sbb
sbb
mov
pop
outsb
jmp
ja
sbb
test
shlb
stc
mov
dec
push
or
imul
dec
inc
lea
out
inc
test
xor
cs
int3
test
jne
outsb
fwait
inc
add
dec
inc
lahf
dec
loopne
add
aam
and
je
sub
sub
inc
inc
out
aaa
movsl
inc
sub
rcrl
push
xor
xchg
lret
push
mov
ret
xchg
in
mov
pop
and
jns
jl
cmp
out
je
addr16
inc
hlt
cmp
ret
mov
int
gs
adc
stos
xchg
pop
sub
jg
pop
fildl
and
xchg
rolb
ljmp
rcrl
sub
ss
mov
adc
pop
mulb
add
cli
repnz
sarb
cmpsl
sub
scas
jl
fsubs
enter
orl
cmp
cli
push
inc
push
jge
xchg
sub
and
arpl
incb
xor
lcall
and
js
repz
push
push
fyl2x
hlt
push
in
push
pop
fildl
mov
insb
push
les
fldl
or
test
sub
or
dec
out
aaa
and
lods
dec
add
and
sbb
sbb
in
mov
sub
sbb
lods
into
in
cltd
mov
fsts
cmpsl
cmp
pop
xor
stos
test
or
push
outsb
inc
or
lods
ja
inc
pop
and
pop
in
outsl
gs
imul
cld
mov
int
and
inc
mov
and
adc
clc
decl
or
fadds
cmpsb
jp
retw
cmp
dec
clc
subl
pop
mov
pop
vpsraw
and
in
rolb
cmc
mov
lods
xchg
xlat
aam
popa
mov
ret
in
mull
adc
icebp
shld
or
mov
sub
or
mov
enter
pusha
lods
xor
cmpsb
pop
lcall
xor
fsubp
mov
imul
cltd
loop
jl
fldenv
jmp
pop
cmpsb
cli
aas
jmp
mov
pop
movsb
cmpsb
ret
push
mov
and
jne
jnp
in
add
int3
fdivl
push
jnp
gs
scas
imul
aam
pop
rcrl
jmp
mov
pushf
pop
jmp
push
call
xor
push
dec
mov
test
ja
test
imul
adc
out
fisttps
movsb
or
mov
cmp
movsb
in
scas
push
outsl
push
mov
push
sbb
cmp
cltd
xchg
and
jo
jbe
sahf
push
rcrl
mov
cltd
mov
sub
cmc
cwtl
xor
repnz
aam
sub
aaa
outsb
adc
aas
lods
cmp
inc
popa
lods
mov
adc
push
xor
sbb
pop
xchg
sub
loop
mov
jne,pn
inc
rcll
mov
shl
fisubrl
repz
das
fisubrs
or
sbb
hlt
xorl
push
dec
dec
test
arpl
jmp
mov
stos
shrl
ja
testl
shl
mov
push
fwait
xchg
xchg
test
rclb
push
push
cmp
fstps
sub
cmp
adc
jo
or
scas
out
fwait
mov
insb
das
lahf
imul
je
sbb
xchg
push
jne
std
xchg
jle
push
adcl
or
xor
dec
fisttpl
cli
sbb
push
cmp
test
adc
xor
pop
and
aam
idivb
adc
jns
int3
or
mov
les
ja
adc
jno
jns
popa
fcoml
mov
repnz
adc
outsl
sbbb
mov
scas
lods
enter
pop
mov
sahf
push
jbe
push
cmp
cmp
inc
pop
or
cwtl
fwait
es
and
rol
push
test
cmp
cwtl
dec
int
pop
repz
hlt
sbb
not
cmpsl
adc
addl
in
xor
pop
cwtl
hlt
mov
push
cwtl
mov
cli
pushf
xor
xorl
fdivl
jmp
lds
jp
mov
jecxz
fildll
imul
xor
xor
pop
scas
jl
adc
popf
add
sub
dec
callw
jnp
mov
lahf
add
add
jo
bound
fs
fcomps
cld
xbegin
dec
mov
lahf
cltd
ss
cmp
test
fcmovnb
pop
jo
push
xchg
and
hlt
mov
xor
ljmp
sbb
sbb
addl
inc
pop
out
lret
and
in
lahf
jbe
xchg
mov
sbb
xchg
and
mov
aas
sbb
jl
stos
idivl
test
stos
cwtl
fmuls
clc
xor
mov
jo
imul
stos
push
or
add
mov
bound
jl
mov
pop
mov
ret
sbb
stc
decb
in
push
pop
xchg
mov
mov
dec
int3
xor
fisubl
jmp
adc
xor
add
adc
or
mov
out
mov
adc
imul
into
rcrl
daa
mov
lahf
lock
push
mov
mov
testl
jb
scas
fsubl
pop
pop
cmp
and
inc
aas
int
cmp
js
mov
movsl
inc
pop
clc
or
mov
sbb
outsb
push
out
sbb
or
xchg
jnp
iret
mov
sahf
mov
jns
add
leave
sarl
xchg
mov
mov
cmp
andb
and
sar
fsubrs
inc
mov
lret
and
ret
int3
push
repz
in
lods
jmp
in
ret
mov
xor
stos
shrl
loope
xchg
bnd
inc
dec
xor
xor
pop
in
adc
xchg
outsl
jno
mov
mov
mov
add
out
cmc
scas
js
cmp
xor
or
sub
push
test
xchg
insl
and
mov
xor
icebp
lret
add
loopne
inc
mov
clc
mov
clc
pop
iret
popf
mov
push
push
adc
rorl
pop
jne
dec
jmp
push
inc
das
je
xchg
mov
push
sub
inc
mov
nop
jp
add
loop
test
insl
ds
testl
adc
xor
and
inc
mov
and
das
push
lock
les
push
test
xor
mov
daa
fwait
or
add
mov
cmp
out
push
adc
cmc
ja
outsl
lret
sub
ljmp
jg
sub
dec
mov
nop
sbb
push
dec
and
jb
sbb
xchg
push
ss
aam
orl
mov
adc
cmc
int
pop
pop
pop
pop
aam
out
data16
cmp
xor
jbe
inc
add
cld
outsl
out
jge
add
lea
pushf
add
add
pop
loopne
aad
je
mov
in
inc
push
jnp
xchg
mov
pop
mov
decb
sub
dec
in
pushf
rcrl
popf
jb
dec
xchg
or
inc
add
add
popf
movsb
icebp
xor
shll
pop
jne
mov
stos
roll
mov
imul
cli
popf
fcom
adc
pop
stos
outsl
inc
pop
lock
or
pop
sub
mov
imul
fwait
adc
scas
cmpsl
sti
push
test
jo
push
or
dec
or
gs
mov
mov
jne
mov
cld
jb
addr16
sbb
adc
fcom
push
rorb
rorl
fstl
bound
dec
jnp
adc
jae
push
mov
sbb
ret
adc
inc
adc
fldt
inc
mov
hlt
cltd
loopne
inc
es
add
push
jg
int
cmpl
imul
push
out
ljmp
hlt
divb
xchg
pop
fucomp
hlt
popa
push
or
and
pusha
cmp
lcall
pop
daa
cld
pop
xchg
loope
int3
mov
and
ds
xchg
pop
scas
inc
xor
xor
pusha
sahf
xchg
mov
pushf
mov
lcall
inc
add
into
stos
cmp
ret
pop
dec
dec
fimull
js
mov
int
ficoms
lock
pusha
pop
cmp
fsubrl
push
fcmovne
dec
sub
dec
fiaddl
mov
mov
cmp
aam
rcrb
add
lcall
adc
test
lcall
and
xchg
shr
sbb
insb
inc
mov
mov
mov
cmp
xor
popf
ret
jp
and
adc
mov
push
sti
fwait
inc
push
fdivl
arpl
cmp
stc
xchg
out
cmc
xchg
push
xor
mov
das
and
jnp
or
mov
inc
testl
pop
jb
dec
jge
out
sbb
ljmp
cltd
jne
mov
sbb
pop
incb
mov
xor
jmp
pop
add
in
adc
mov
aaa
mov
adc
adc
lds
pop
test
jns
dec
std
test
push
notl
sbb
out
outsb
leave
mov
aad
fbstp
pop
pop
xor
dec
adc
mov
adc
out
sbb
pop
or
or
push
inc
adc
pop
pop
cmpsl
mov
jmp
push
cs
scas
lds
rclb
jecxz
mov
scas
add
jne
pop
jmp
lods
pop
dec
inc
stos
jo
popa
aas
cmc
js
lret
adc
cmp
fisttpl
and
xchg
imul
add
insb
sti
fwait
inc
mov
xchg
jb
sbb
push
imul
stos
add
test
in
sub
incb
mov
or
xor
push
repz
mov
fs
lcall
mov
jb
push
jae
cmc
out
mov
hlt
sub
leave
cltd
dec
mov
add
insl
outsl
cmpsb
repnz
push
jmp
cmp
popf
lods
idiv
ret
gs
xlat
jne
jno
pushf
test
mov
pop
pop
mov
mov
jo
adc
mov
outsb
mov
rcr
pop
int3
dec
cmc
xchg
push
loope
xchg
pop
xlat
mov
inc
cmp
jbe
cltd
pop
inc
lock
test
dec
leavew
cmpsb
cmp
push
mov
adc
adc
jae
push
insb
adc
push
pop
in
push
xchg
and
mov
adc
cmpl
arpl
mov
jo
pop
sbb
adc
lret
mov
and
pop
mov
mov
jne
roll
iret
aad
lret
dec
test
ret
test
fiaddl
mov
add
pop
in
mov
iret
js
push
sbb
cmp
call
inc
mov
mov
mov
js
mov
aas
cmpsl
cltd
dec
rolb
test
out
cmp
lea
adc
mov
decb
dec
add
ret
add
fimuls
adc
lds
inc
sti
mov
test
xor
push
xor
pop
pop
addr16
push
sub
mov
pop
loop
arpl
outsb
mov
xor
dec
dec
nop
test
dec
mov
xchg
pop
stos
je
in
jnp
xchg
inc
in
add
push
cmpb
jle
or
push
clc
pop
or
mov
pop
pop
imul
sub
sahf
fucomip
repz
cmp
or
leave
sti
out
lret
mov
dec
repnz
xor
xchg
aam
mov
mov
xchg
nop
shlb
add
insl
cmpsb
mov
and
sahf
dec
sub
nop
jmp
mov
xchg
data16
out
cmp
push
lret
sub
or
inc
cmp
je
imul
push
push
jo
mov
les
jg
sub
mov
xor
ljmp
sub
jge
stos
add
cltd
mov
jo
cs
inc
sti
lods
and
lods
jnp
in
jne
scas
mov
ffreep
adc
pop
xchg
lahf
mov
jnp
xchg
std
imul
and
adc
out
mov
cmp
jecxz
pmovmskb
lods
aas
sbb
pop
dec
inc
add
pusha
xlat
jmp
aas
mov
jp
xchg
or
lods
add
mov
aad
and
inc
aas
popa
andl
js
fwait
mov
push
cmpsl
dec
sub
stos
adc
jns
int
xchg
data16
jo
leave
jnp
cmp
cmp
icebp
pop
daa
outsb
xor
push
sub
adc
jecxz
cmp
test
cmp
push
adc
add
push
mov
push
push
aaa
lods
push
add
scas
insl
data16
sbb
cmp
jb
or
loopne
inc
inc
cmc
je
dec
cmovg
mov
in
jmp
imull
pop
movsl
sub
pop
mov
ret
outsl
outsl
adc
imul
xchg
movsl
pop
or
scas
gs
jmp
repnz
lcall
arpl
nop
cmp
push
add
shlb
ror
call
lret
cmpsb
sbb
xchg
mov
frstor
pop
out
ljmp
xlat
and
aas
out
out
rol
imul
bound
pusha
pushf
sti
cmc
out
adc
mov
sarb
xchg
jae
jnp
add
nop
dec
xor
cmc
add
dec
cmp
out
xor
add
fwait
adc
xor
sahf
testb
sub
cs
fnsave
daa
jo
cli
aad
repz
pop
cld
mov
mov
cmp
stc
add
mov
sub
js
shr
gs
inc
inc
enter
mov
movsb
adc
icebp
sub
adc
aas
sti
out
jmp
shl
dec
int3
pop
mov
mov
xchg
push
scas
daa
cvttps2pi
or
pop
inc
jns
lds
outsl
sahf
dec
nop
fistpll
xor
lahf
bound
pop
xchg
mov
into
outsl
pop
dec
mov
and
push
xor
ret
and
push
out
popa
mov
xchg
add
js
aad
pop
xlat
inc
sbb
je
or
cs
mov
int3
popf
test
jns
sbb
insl
cmc
or
add
mov
inc
out
stc
out
mov
or
and
imul
dec
in
sarl
ret
repnz
jmp
mov
out
or
mull
les
roll
sub
lahf
pop
lock
leave
aas
mov
xchg
xchg
xchg
sub
mov
mov
cmp
add
cmp
pop
mov
xchg
in
scas
mov
in
or
fsubrl
add
sub
adc
int
fstpt
popa
or
cmp
stos
pop
add
cld
jno
sub
mov
xchg
negl
loopne,pn
and
cmpsl
cltd
pop
mov
inc
sbb
mov
jne
popw
or
mov
pop
adc
lahf
in
stos
testb
cmc
mov
cmp
and
mov
push
in
pusha
in
push
movsb
in
out
add
arpl
popf
stos
cmp
mov
push
lret
and
popa
push
sahf
and
cmp
shl
rorb
jno
scas
dec
pop
jg
dec
ret
and
fnstenv
jb
xlat
fbld
jnp
nop
cli
xchg
iret
ds
popa
push
insl
dec
cmp
es
xchg
out
mov
mov
mov
push
fdivs
aaa
out
pusha
jbe
cmpsl
cs
xchg
pop
stc
add
mov
das
adc
je
fdivp
sub
scas
xorl
aam
xor
out
xchg
enter
les
leave
or
imul
mov
mov
pop
ljmp
das
jo
cli
xor
xchg
mov
enter
sub
imul
pop
xor
rcr
hlt
out
sti
cld
xorl
stos
push
dec
xchg
jne
call
lea
and
or
dec
loop
mov
jg
jo
jne
loop
fistl
and
and
in
jb
and
fdiv
test
mov
jne
or
mov
mov
push
xchg
sbb
mov
shl
cld
testb
mov
in
clc
shrl
push
cmp
push
push
in
lds
xor
aas
out
dec
and
sub
sbbb
movsb
sub
sub
loope
les
xor
push
outsb
mov
sub
push
clc
jg
out
mov
repnz
mov
fwait
lret
jp
scas
xor
jl
jbe
push
inc
pop
xor
mov
sbb
pop
push
loopne
push
inc
int3
xor
in
cli
adcb
imul
mov
xor
prefetch
inc
dec
ljmp
aad
pop
in
mov
jbe
pop
mov
cltd
lea
lea
je
lcall
pop
addl
loopne
std
cld
push
mov
pop
pop
lock
lods
mov
loope
mov
inc
jge
stos
add
xlat
dec
inc
jp
outsl
mov
cmp
pop
fsubrp
push
ret
rcr
add
cld
lods
cmp
int
scas
push
mov
popf
xor
std
das
cmp
sbbb
icebp
test
daa
ds
adc
sahf
sti
mov
mov
js
outsb
push
out
bound
imul
fildl
test
xor
pop
push
xor
mov
cmp
enter
dec
inc
bound
sub
or
dec
test
shl
dec
stc
inc
dec
mov
jle
imul
mov
aam
cmp
cwtl
push
mov
or
loopne
ljmp
pop
xor
imul
pop
sti
inc
lret
xchg
xor
popa
pop
adc
or
sub
popf
movsb
cmp
xchg
sub
ja
or
loopne
outsl
push
dec
push
mov
pop
fs
mov
dec
test
jg
mov
test
outsb
adc
jo
dec
sub
stos
mov
adc
enter
int3
jbe
add
xchg
lret
xchg
or
sbb
test
shlb
hlt
add
insb
subb
fwait
inc
pop
xor
icebp
or
and
and
mov
ret
lret
loopne
jns
inc
enter
sti
imul
mov
add
dec
int
xor
mov
stc
lods
popf
mov
xchg
cltd
push
loop
fisubl
pop
pushf
je
cmp
add
fisttps
pusha
adc
ss
inc
adc
jl
cmp
or
lahf
scas
adc
aas
fists
loope
pushf
inc
lock
pop
mov
ret
out
mov
mov
mov
jne
fs
dec
lock
push
test
dec
popa
nop
push
inc
pop
inc
mov
stc
push
push
daa
mov
scas
mov
jbe
sbb
imul
cmp
fnstenv
ja
div
cld
repz
lcall
bound
jb
in
jns
push
jns
jb
pop
insl
and
mov
xchg
or
fldcw
dec
dec
inc
insb
cmc
sbb
lahf
insl
mov
cmp
mov
dec
sahf
push
in
ja
sbb
push
sbb
mov
mov
xor
test
imul
sbb
sbb
lock
jno
cld
outsb
testl
imul
push
jno
sub
vunpcklps
pop
jns
fsubrs
inc
inc
test
sbb
lcall
ja
jbe
jns
mov
dec
or
or
icebp
mov
jo
int
ljmp
xor
jmp
ss
xchg
xchg
jecxz
sbb
in
and
lret
lds
inc
dec
test
ret
sbb
pop
test
ror
adc
xor
negl
sbb
sub
and
xor
mov
mov
cli
mov
fadd
cmpsb
inc
mov
cmpsl
xchg
push
andl
jo
mov
adc
mov
cmc
and
push
loop
push
adc
aam
or
pop
cs
push
sub
shrl
pop
mov
icebp
add
fbstp
xchg
xor
pop
int
test
mov
mov
mov
mov
daa
icebp
lock
hlt
push
lea
push
sbb
aam
push
idiv
push
xor
data16
cli
or
mov
iret
xchg
stc
aas
pop
out
adc
push
mov
add
enter
popf
cli
inc
fisttpll
dec
push
pop
ss
sbb
fwait
dec
out
pop
test
incl
scas
mov
mov
ja
dec
add
lcall
out
add
outsl
pop
cs
sub
sbb
jb
and
sbb
repz
fucom
rcl
lods
fbstp
add
movsb
leave
push
repz
xchg
push
int3
out
xor
fldenv
push
lds
dec
xchg
add
je
push
into
in
pop
pop
xor
pop
repnz
inc
xlat
in
or
dec
lods
out
lret
push
sahf
jb
pop
iret
lgs
bnd
lock
or
add
ja
ss
mov
pop
pop
lock
mov
jmp
pop
adc
mov
and
mov
xchg
adc
aam
mov
pop
popa
test
je
jae
xlat
and
sub
pop
lds
push
cmp
cwtl
sbb
ret
lds
inc
xchg
adc
aaa
and
dec
xchg
mov
lret
dec
stos
rorl
push
jmp
inc
nop
or
pop
add
andl
movsl
sub
xlat
movsb
nop
cmp
lret
lods
int3
jo
xchg
or
int
add
popa
mov
sub
mov
fcom
arpl
lret
scas
and
mov
fst
sub
or
pop
mov
push
pusha
push
xor
pop
mov
in
in
pop
pop
loope
in
xchg
test
cli
testb
lods
cmp
clc
sub
js
mov
cmp
jecxz
pop
in
test
loop
in
loop
ffree
sbb
xchg
jge
sarb
orl
pop
xchg
pop
insb
cwtl
in
dec
fdecstp
dec
adc
imul
rorl
or
test
mov
mov
lods
xchg
cld
pop
inc
pop
xor
sbb
test
enter
sbb
enter
pop
orl
pushf
cmp
insl
fwait
pushf
or
lret
push
mov
in
imul
mov
loope
test
iret
cltd
pop
xor
faddl
adc
test
push
aas
std
in
outsl
insb
mov
dec
mov
mov
and
sub
mov
pop
inc
rorl
fmuls
xorl
movsb
cltd
in
xchg
jle
adc
mov
aad
or
ret
lock
inc
push
and
push
mov
sbb
arpl
cli
cmpsb
int
mov
daa
mov
insl
sbb
xor
mov
pop
cwtl
xor
lea
dec
fiaddl
sbb
jle
xchg
js
cmp
mov
mov
lods
ljmp
sub
adcb
or
arpl
push
or
pushf
mov
dec
lahf
mov
xchg
or
sub
add
jl
int3
and
lds
mov
pushf
mov
mov
push
push
xor
sbb
movsb
cltd
fcmove
push
sub
mov
popf
pop
bound
sbb
push
cs
pop
imul
mov
mov
dec
or
push
jmp
push
imul
lcall
jp
arpl
and
or
dec
lock
cmp
clc
pop
and
add
push
sub
inc
icebp
or
outsb
popa
cmp
ja
inc
mov
inc
je
and
daa
or
aaa
push
or
adcb
push
popa
jle
jge
popf
jae
cmp
dec
adc
icebp
or
ljmp
xor
popa
dec
dec
stos
mov
fst
das
rorl
jae
xor
mov
inc
call
outsb
add
mov
and
jnp
movsb
test
jg
or
std
loope
pop
mov
hlt
rcrb
bound
movl
fisubs
mov
stos
pop
out
add
push
sub
mov
inc
push
jg
test
xor
adc
dec
fistpll
sub
fdivrs
pusha
aad
cmp
cmpsb
stc
xor
pop
mov
lret
insb
iret
lahf
loopne
out
icebp
lret
xor
in
lods
mov
cmpl
arpl
ds
arpl
mul
scas
inc
test
in
jl
mov
inc
mov
xchg
aaa
pushf
cli
jmp
pop
jno
ds
aas
xchg
cmp
cmpl
repz
popf
pop
dec
ret
mov
leave
adc
xchg
sarb
mov
or
lds
or
dec
mov
pop
outsb
popf
push
scas
dec
movsl
push
hlt
and
stos
push
test
neg
jno
or
lods
mov
fsubr
xchg
movsb
lock
repz
mov
pop
push
insb
jbe
sub
in
dec
mov
mov
push
pop
or
inc
mov
jg
cmp
ror
sub
gs
mov
ja
inc
xchg
pushf
into
jg
fimull
add
inc
rorb
sub
rcrb
lods
lahf
test
add
adc
push
insl
mov
dec
push
aad
out
scas
stos
cmp
lods
cmpl
xchg
sbb
ds
pop
push
pushf
jae
jnp
insb
mov
cli
xchg
lods
push
or
add
mov
fdivl
imul
aaa
pop
inc
mov
dec
stos
jns
clc
les
adc
cmp
aaa
scas
repz
negb
mov
insb
mov
dec
cmp
cmp
imul
jle
mov
cmp
cwtl
jl
sub
out
jmp
movsl
adc
pop
divl
pop
lret
push
sbb
jl
or
pop
dec
inc
bound
xchg
lods
shlb
pop
cmp
mov
popa
outsl
sbb
je
dec
scas
fsubl
dec
cld
out
shl
rcrb
imul
sbb
daa
and
cwtl
or
adc
add
lret
iret
cwtl
lds
mov
subb
fisttps
aad
mov
dec
pushf
mov
cld
jg
adc
fldl
add
mov
mov
movsl
inc
sub
dec
iret
movsl
ds
pop
mov
ret
jl
push
int3
jg
bound
cltd
outsb
xchg
insb
pop
or
xor
pop
sbb
and
mov
push
jbe
sub
nop
arpl
jae
popa
sub
les
inc
call
movsl
stc
cmc
lods
cltd
inc
je
cld
jle
xor
inc
movsb
dec
dec
into
hlt
mov
pop
adc
clc
aam
movsb
add
hlt
and
mov
loope
cs
cmp
add
adc
dec
outsb
in
and
lret
arpl
jle
cmpsb
outsb
clc
aaa
hlt
test
arpl
lods
sbb
jmp
repz
getsec
shll
jmp
insl
out
data16
mov
cmp
dec
out
enter
aaa
lret
dec
pop
jle
or
mov
and
das
inc
mov
mov
adc
inc
scas
subb
xchg
flds
or
cmp
mov
inc
sbb
cli
in
fldl
dec
es
aam
mov
js
mov
jbe
ds
es
adc
lock
inc
cmp
pushf
cmp
arpl
faddp
push
inc
in
mov
in
pop
imul
push
xchg
or
je
shlb
jecxz
in
cmp
xor
mov
gs
movsl
out
adc
cmp
lahf
and
in
push
inc
cmp
sti
cmp
cmp
mov
xchg
sbb
mov
cs
rcl
movsl
movsl
pop
jns
mov
fndisi(8087
mov
xor
pushf
push
jg
fadds
xchg
icebp
pop
dec
fisubs
in
mov
nop
sbb
loope
lods
bound
movsb
inc
test
pop
sahf
arpl
xchg
mov
mov
ljmp
cltd
loopne,pn
inc
cli
add
fwait
or
in
faddl
sub
sub
loope
fsubrl
in
in
sbb
and
xchg
cltd
adc
fdivrs
loopne
mov
incl
test
mov
sbb
ret
adc
aam
mov
jge
imul
cmp
sbb
mov
sbb
hlt
pop
sub
test
cltd
xor
popf
push
leave
arpl
mov
xor
mov
mov
add
push
jecxz
jnp
sbb
psraw
out
xchg
bound
pop
pop
call
sub
mov
jo
enter
or
out
adc
mov
aas
push
nop
push
loopne
lahf
push
mov
mov
or
sbb
xor
lods
test
xorl
and
pop
std
in
sub
ljmp
aas
movsb
mov
lret
mov
push
imul
ljmp
shrb
fcompl
insb
imul
pop
lret
in
ret
sub
ret
shrl
dec
into
cmp
or
xchg
outsl
mov
iret
das
faddp
iret
out
push
divl
push
dec
inc
lcall
push
xchg
cmpsb
fistps
mov
mov
jp
xlat
mov
shll
adc
pop
test
jb
cmpl
or
popa
jge,pn
enter
push
scas
adc
pop
mov
lods
popa
xlat
test
pop
and
push
shll
and
lds
das
lock
lcall
mov
sbb
cmp
xlat
sub
dec
jo
pop
push
repnz
dec
jbe
fwait
js
sti
int
subl
mov
mov
xchg
xchg
int3
in
repnz
cmp
ret
push
cmpsb
sti
icebp
sub
jmp
hlt
fisubrl
add
fistl
and
fcmove
cmp
insb
xchg
imul
cmpb
and
xchg
sbb
fmuls
mov
sub
sub
popf
out
movsl
out
sub
mov
adc
jecxz
addr16
sub
popf
leave
out
hlt
inc
mov
mov
es
mov
push
sarb
mov
fsubr
int
out
imul
jmp
mov
lahf
test
out
xor
sub
sbb
loopne
lret
lds
in
loop
sub
inc
stc
jp
add
cs
jle
adc
inc
mov
dec
add
fucomi
cmp
xchg
or
push
sub
sub
inc
pop
mov
cmp
imull
insl
enter
xchg
push
daa
popf
ds
in
cmp
lahf
into
xor
out
jae
test
sbb
pop
push
mov
sub
jb
aam
pop
std
push
xchg
hlt
cld
decb
popf
stc
mov
inc
xchg
mov
jnp
xchg
rcr
xor
subl
add
sbb
cmp
hlt
ss
ror
dec
aaa
jbe
lret
mov
std
addl
cwtl
out
mov
out
sub
lahf
ss
push
xchg
add
mov
sub
inc
ljmp
jg
jb
out
push
pop
mov
sbb
jns
xchg
sub
pusha
out
insb
lret
cwtl
movsl
popf
stc
or
mov
or
fistpll
out
push
mov
daa
pushf
les
pushf
sar
ljmp
push
lcall
adc
or
les
push
pop
sub
push
pop
in
rcr
jl
loope,pn
pop
push
dec
xlat
ljmp
and
or
xchg
dec
mov
xor
nop
arpl
jnp
jo
jbe
adc
xchg
arpl
daa
test
popa
pop
pop
cmpsl
add
mov
loope
cmp
dec
or
adc
stos
out
cmc
js
mov
add
ret
bound
popa
pmullw
psllq
cmpsb
lret
push
jnp
dec
sti
testb
scas
jp
popf
iret
inc
sbb
cmp
dec
xchg
std
addr16
or
xchg
sbb
cltd
xchg
movsl
call
xchg
arpl
lods
sub
shlb
aas
add
xor
pop
loopne
xchg
bswap
cwtl
movsl
fcomps
cmpsl
jae
xor
dec
ss
inc
and
pop
push
daa
jnp
call
push
jl
movsl
out
pop
repnz
or
sbb
xlat
push
fwait
loopne
bound
in
jl
jae
sahf
pop
jnp
push
lcall
rcl
or
into
test
dec
imul
cmp
cmp
push
dec
imul
add
sahf
cmp
sbb
xor
add
push
pushf
call
pop
pop
mov
rolb
jecxz
lds
outsl
vpsubsw
stos
add
test
and
inc
or
cmpsb
pop
cwtl
jb
sar
call
into
pop
xchg
ret
pushf
sub
repz
xorl
das
scas
sbb
sbb
mov
sub
shll
ret
add
mov
es
or
mov
xchg
push
mov
lods
pop
cmpsb
dec
mov
xchg
adc
cmp
clc
pop
fdivr
repz
jns
rorl
leave
xchg
or
outsl
mov
mov
or
push
jg
xor
int3
mov
in
jns
jmp
add
stos
add
iret
push
xor
lret
mov
lock
lds
xchg
jmp
or
popa
add
or
shr
icebp
add
addr16
push
fmul
fstpl
lea
sar
jge
or
add
mov
pop
fnsave
loope
dec
fdiv
sarb
popf
int
mov
pop
or
sbb
sarl
jno
hlt
push
insl
inc
sbb
mov
lea
jnp
clc
or
inc
jmp
and
inc
jmp
xor
sub
inc
popa
lret
in
into
add
shl
jg
xchg
inc
inc
mov
loopne
inc
adc
push
add
mov
mov
xor
rcl
and
mov
fwait
dec
in
je
mov
sub
mov
dec
mov
mov
js
mov
mov
int3
lock
sub
cmp
xchg
adc
mov
mov
inc
jge
sbb
fnstcw
and
push
or
jno
mov
mov
icebp
or
push
and
insl
push
stc
push
movb
mov
cmp
jne
add
dec
push
movsl
les
ljmp
mov
test
add
add
pop
inc
fwait
mov
push
pop
aaa
in
imul
outsb
cmp
cwtl
add
icebp
jge
movsb
ret
dec
mov
adc
std
ret
sahf
inc
test
sbb
sub
out
push
cmp
enter
jae
pop
movsl
pop
andb
std
lock
out
sub
in
pop
jne
xor
fbstp
insb
push
mov
test
decl
jge
lea
add
sbb
cmpl
cmp
mov
lods
mov
sahf
sub
pop
je
sbb
lods
addr16
lahf
cltd
adc
jb
lcall
mov
jg
add
cltd
mov
addr16
mov
mov
scas
out
lcall
in
sub
push
xlat
pop
dec
dec
mov
das
push
scas
pop
in
sub
divb
jp
and
push
sub
rclb
jmp
and
push
out
push
testl
outsl
adc
sbb
shrb
xchg
lock
popf
jmp
daa
mov
scas
mov
test
divl
mov
popa
pop
pusha
mov
inc
sub
insb
outsl
test
xchg
imul
adc
test
jns
mov
pop
push
mov
jns
jl
movsl
cltd
mov
shll
leave
sbb
insb
cmp
sti
jns
push
insb
into
shr
mov
lret
and
jecxz
sub
bnd
fwait
xchg
push
xlat
push
loope
fcomps
xchg
pop
aaa
inc
cld
adc
lods
stc
xor
pusha
pushf
aaa
test
jo
jl
xor
xor
outsb
mov
lcall
dec
mov
das
sub
xchg
cmp
xor
and
out
popa
mov
xorl
flds
loope
repz
pusha
aad
sbb
dec
xor
add
inc
mov
stos
push
pop
lahf
inc
jge
xor
xchg
or
ret
mov
es
ret
jb
push
fs
xchg
dec
inc
push
cmp
bnd
push
jle
in
test
je
push
icebp
sub
lods
fisubrl
jg
sbb
call
movsl
arpl
mov
mov
jl
addr16
cmp
loop
push
mov
test
mov
jnp
fcmovne
leave
jbe
xor
shr
pop
mov
inc
sar
imull
jb
inc
push
call
aas
xchg
dec
inc
cwtl
ret
inc
push
or
into
nop
xchg
ljmp
sbb
or
loopne
jnp
xchg
or
in
pop
jecxz
ror
jg
pop
fstps
ret
and
mov
mov
dec
movsl
mov
jbe
inc
inc
jnp
xchg
mov
outsl
je
stos
das
cmpsl
sub
popa
stos
mov
mov
subb
cmp
cmp
mov
popaw
add
inc
inc
in
iret
stos
inc
jno
mov
mov
xchg
out
cmp
sub
jae
call
mov
jecxz
call
popf
lods
aam
fwait
hlt
push
jnp
mov
xchg
dec
jle
mov
mov
push
nop
rcrl
arpl
or
loopne
inc
pop
test
mov
cwtl
hlt
jecxz
ljmp
mov
insb
fildll
xchg
into
and
mov
inc
xor
mov
testl
lret
push
xchg
inc
fsts
xor
popf
test
add
xchg
inc
in
repz
cmp
das
mov
dec
xchg
mov
push
subl
and
aaa
hlt
jae
mov
jnp
push
fldcw
mov
in
pop
mov
mov
jp
lock
paddsw
mov
mov
shl
mov
lcall
mov
ds
cli
xor
add
sub
fs
mov
xlat
aam
inc
loope
inc
and
std
adc
clc
jge
fsts
add
rep
xor
cmp
jne
sarb
jo
dec
adc
daa
rorl
fidivl
mov
and
inc
mov
inc
mov
lds
test
lock
hlt
adc
loope
cs
icebp
clc
fs
mov
scas
and
stc
bound
cmc
out
pop
rcrb
into
sbb
pop
not
and
mov
jg
call
mov
stos
popa
sete
dec
pop
jo
ficomps
popf
aaa
inc
repz
hlt
lods
xor
or
cwtl
movsb
mov
pop
fisubs
daa
ss
loopne
decl
mov
leave
fistpll
test
mov
or
stos
inc
in
adc
in
ja
loopne
test
pop
les
adc
hlt
pop
cmc
mov
les
fnstcw
pop
mov
out
mov
movsb
cltd
inc
jmp
and
bound
sub
xlat
pusha
int
and
fwait
dec
cwtl
fstpt
sub
outsl
pop
cmpsl
ret
xchg
xchg
xor
test
jl
les
add
push
popa
or
cli
out
pop
cmp
ds
data16
cmpsl
in
jnp
sbb
pop
pop
jl
mov
cmp
lcall
mov
push
or
bound
inc
or
roll
scas
out
sbbl
arpl
xchg
addr16
in
sbb
xorl
mov
cmp
sub
mov
push
lods
add
loopne
adc
aad
mov
sbb
aaa
pop
and
out
scas
das
xor
mov
mov
mov
mov
andb
dec
pop
push
mov
loopne
xlat
push
decb
fs
dec
js
cs
test
sbb
fwait
cs
cmp
aam
data16
xchg
cmc
lods
push
xor
mov
leave
loop
cltd
cmp
cs
popa
rcll
push
xchg
or
and
dec
ja
pop
mov
in
fidivrl
int
add
in
mov
pop
sahf
insb
or
pop
filds
sbb
stos
jne,pt
rcll
xchg
pop
dec
xchg
incl
cli
ret
mov
or
stos
repnz
dec
pop
loopw
lock
jae
and
xchg
js
movsl
cmpsl
std
push
cltd
fldl
out
jg
add
push
dec
pop
test
or
xchg
xlat
shrl
arpl
mov
pop
xchg
sahf
les
out
or
pop
sub
mov
cli
ljmp
hlt
mov
push
sbb
dec
dec
test
stos
mov
jp
mov
xchg
dec
shlb
ja
sbb
pop
pop
pop
mov
cltd
mov
scas
pop
frstor
aaa
aam
push
ds
jmp
xchg
mov
push
cmpsl
mov
xchg
cmpsb
inc
das
stos
lahf
mov
ret
add
stc
gs
jbe
and
mov
das
xchg
psubsw
jge
je
or
mov
dec
fcompp
lock
les
fs
pop
push
ret
pop
jl
cld
mov
orps
shll
insb
or
loope
pop
cli
lahf
xor
xchg
loope
jns
fiadds
mov
inc
xor
lock
jmp
pop
lahf
nop
jmp
xor
push
xor
rolb
mov
xlat
fcoms
cmp
mov
jb
mov
nop
sti
mov
jns
cld
push
inc
cmpsl
jle
mov
js
inc
mov
xor
jmp
sub
pop
push
fadds
pusha
iret
mov
ffreep
cld
leave
pop
lret
jl
mov
or
cltd
sbbb
xor
inc
gs
pop
nop
popf
sarb
nop
outsl
push
bound
xor
inc
mov
notl
in
mov
dec
sbb
xchg
insl
cmp
mov
ja
inc
fisubs
adc
popa
aaa
cwtl
pop
lret
scas
mov
lods
std
out
xchg
fisttps
out
add
movsl
xchg
movzbl
and
adc
mov
lret
inc
dec
idiv
stos
jg
push
loopne
movsl
xor
pop
subb
addl
push
mov
ret
sub
mov
mov
test
cwtl
sarb
pop
lret
lcall
lock
push
mov
xor
fistl
push
mov
jnp
dec
movsl
lds
mov
mov
jae
sub
push
cmpb
xchg
and
lret
stos
pusha
sbb
xlat
push
loop
rorb
adc
popf
xor
mov
add
xchg
push
add
adcl
adc
ja
mov
and
addr16
rolb
add
mov
outsb
dec
or
dec
and
inc
into
in
mov
xchg
pop
repz
je
or
mov
int3
je
fiadds
inc
mov
push
mov
ror
repnz
addr16
rcr
pop
xchg
dec
out
dec
mov
xlat
fidivrl
daa
mov
cmp
pop
inc
and
mov
mov
jne
mov
pop
mov
sbb
cs
loope
push
imul
mulb
push
xchg
ret
sub
fcmove
fadds
dec
ljmp
sti
test
cmp
inc
sbb
add
jns
int
xchg
jbe
jge
push
fadds
imul
adc
pop
push
imul
cmp
in
jb
pop
xlat
adc
dec
xchg
lock
es
mov
psubb
mov
inc
mov
daa
mov
int3
mov
aaa
imul
sbb
in
and
pop
pop
push
pop
mov
popa
in
or
aas
sarl
imul
test
es
ja
jns
lcall
jno
xchg
add
jg
xor
pop
jb
fwait
scas
rorb
add
adc
fs
jns
mov
xchg
push
cs
xchg
cmc
xor
push
and
das
push
xchg
fdivrl
cmpsb
lea
ja
push
adc
pushf
cmpsb
fstps
adc
mov
mov
ret
or
data16
add
pop
js
outsl
xchg
fwait
inc
inc
fildll
add
pop
out
sbbl
enter
cs
push
insl
pop
and
clc
mov
mov
push
jne
inc
ljmp
test
adc
pop
xlat
sti
test
or
push
cmpsl
pop
and
nop
inc
insb
je
fs
not
pusha
sbb
out
mov
out
sub
xor
cli
jge
cmp
dec
sub
xlat
inc
add
decb
add
dec
mov
sbb
dec
cmpsl
mov
ror
pop
int
lods
push
xlat
out
jne
add
push
mov
dec
dec
xchg
cltd
addb
stc
sub
cli
or
imul
lock
fcmovnb
pop
pop
adc
push
adc
nop
icebp
or
movsb
jb
and
mov
jecxz
lret
addr16
xchg
out
mov
sbb
adc
fs
xor
mov
lahf
lret
xchg
pop
loopne
es
add
jnp,pn
iret
fwait
push
add
inc
xor
sbb
pop
mov
dec
inc
addb
das
jns
in
in
sbb
adc
mov
ret
ss
stos
sbb
sarb
cmpsl
test
mov
flds
cwtl
rclb
and
and
xor
adc
add
nop
das
test
xor
add
mov
ljmp
out
sub
andl
sub
and
and
push
sbb
in
mov
fsubrl
and
sub
mov
push
push
mov
add
push
pop
push
pop
insl
in
test
rcrb
int
ret
mov
xor
daa
ffreep
shl
xchg
ss
ljmp
daa
movsb
jnp
lock
aam
ja
aam
iret
jo
xor
dec
test
test
inc
dec
popf
pop
cmp
xchg
testb
fidivs
mov
loopne
add
jbe
xor
iret
push
jno
push
mov
pop
nop
jne
loope
popf
aaa
enter
insb
shll
call
xlat
daa
push
fidivs
mov
xor
mov
ja
mov
add
fsubs
adc
mov
std
movsb
or
popa
nop
sti
stc
sbbl
stc
and
inc
dec
pop
in
sbb
ds
mov
mov
sub
ret
dec
mov
into
testb
out
mov
mov
shlb
shrl
aad
and
mov
icebp
adc
adc
test
insl
pop
mov
je
les
xchg
xchg
lods
adcb
out
cmp
lret
rorb
mov
and
pop
mov
fbstp
dec
out
imul
enter
cld
fmulp
and
add
das
inc
add
adc
inc
or
inc
xor
mov
rcll
inc
sub
subb
jp
and
scas
adc
push
add
push
mov
popa
loop
sbb
adc
and
lds
push
inc
mov
movsb
sub
inc
mov
mov
dec
push
dec
mov
and
mov
cmovbe
test
add
mov
push
fwait
inc
or
mov
fs
sarl
mov
fcoms
es
sbbl
push
add
insl
ljmp
xor
xchg
mov
xchg
jo
hlt
xchg
xchg
xor
test
cmp
jge
das
pop
and
mov
push
iret
cmc
add
iret
lods
jne
inc
cld
lods
push
rcrl
dec
or
push
mov
pop
out
in
insb
lea
int
pop
or
testb
inc
mov
sub
aad
fs
or
add
add
movsb
inc
lock
add
jne
out
popa
or
mov
jnp
xchg
mov
rorl
pop
adc
lock
fsubs
cmc
inc
inc
pop
sub
mov
jo
sub
stos
es
pop
inc
int3
out
push
nop
daa
mov
gs
cmp
shrb
pop
loop
divb
mov
gs
cmpsb
mov
gs
xor
dec
jbe
or
scas
add
loopne
push
shr
out
jge
mov
sub
xor
dec
cmp
pusha
push
push
sahf
rcrl
psraw
dec
outsb
cmp
xchg
inc
or
mov
fwait
cmp
or
mov
sbb
adc
lret
jbe
mov
sub
ret
push
push
test
out
sub
imul
mov
fbld
jp
lret
mov
push
mov
mov
stos
cmp
jmp
mov
aam
orb
pop
dec
in
push
mov
rcll
test
shlb
mov
add
jge
add
fdivrl
mov
ljmp
insb
push
add
cli
adc
add
adc
xlat
test
enter
add
xor
adc
fnsetpm(287
and
or
jo
ss
mov
push
std
jo
dec
gs
icebp
fisttpl
inc
cmp
sub
imul
fstps
stc
cmp
push
stos
iret
dec
iret
push
imul
mov
and
outsb
dec
cmp
pusha
imul
and
sbb
cmp
lds
aad
lret
xchg
jp
jle
movsl
icebp
out
mov
cmp
ret
in
lds
pop
arpl
dec
pop
fnstenv
jge
and
call
in
pop
incb
xchg
push
pop
cmp
xor
fs
xchg
jmp
pop
fildl
loop
xchg
xchg
popa
fcmovbe
sbb
in
xchg
xor
pop
adc
jge
int
add
daa
andl
mov
inc
add
mov
test
pop
jmp
les
inc
daa
push
rclb
dec
movsb
xchg
scas
call
in
outsb
std
ret
cmp
mov
cmpsb
inc
lret
adc
mov
dec
call
lock
cmp
sarb
jne
ljmp
jmp
pop
cmp
cmp
stos
jl
xlat
xlat
lods
cmp
xchg
xchg
mov
lret
fiadds
stos
sar
pop
out
aam
cmp
scas
jmp
mov
enter
xchg
popf
ja
clc
out
rcll
xlat
cwtl
jbe
movb
mov
mov
jb
iret
outsb
cmp
ss
cmp
in
dec
lahf
sahf
ljmp
mov
cmc
inc
xor
cmp
insl
mov
push
pushf
or
dec
aad
add
lahf
push
idivl
lods
adcb
lret
filds
test
test
inc
icebp
sub
mov
add
jns
pop
inc
xchg
jmp
lea
inc
push
jl
test
pop
inc
je
inc
imulb
insl
sti
clc
mov
dec
iret
popa
xchg
clc
adc
lea
aad
sub
in
jg
pop
shrb
and
test
or
push
dec
imul
mov
iret
jae
xchg
pusha
and
pop
cltd
and
fldenv
jb
test
lock
aad
mov
fldcw
arpl
movsb
pop
add
jmp
or
xchg
pop
add
mov
leave
sub
or
xor
lahf
dec
testb
sahf
push
xor
out
pop
stos
stc
das
pop
push
cli
push
push
nop
add
cld
mov
xchg
inc
enter
mov
in
mov
outsl
xchg
xor
xchg
push
fistpll
hlt
pop
shlb
add
fisttps
and
std
add
incl
pop
add
cli
mov
mov
mov
cmp
lods
in
xchg
push
test
lret
adc
mov
or
jmp
xchg
lock
add
in
pop
dec
jge
negb
sub
inc
in
in
xchg
push
shl
add
aam
sbb
sbb
out
adc
aas
repz
jmp
inc
jae
and
rcr
fdivp
pop
cmp
adc
push
in
sbb
icebp
cmp
rcll
cmc
pusha
mov
fwait
pop
clc
mov
mov
fnstenv
in
fadds
mov
arpl
ret
xor
fldl
iret
data16
repz
and
cld
scas
jp
adc
aas
sbb
outsb
inc
pusha
les
ret
push
or
mov
add
addr16
scas
imul
sarl
orl
loopne
cmp
stc
add
and
outsb
out
aas
repnz
lcall
adc
and
mov
jmp
insb
mov
jmp
add
sahf
jl
pop
push
bound
stos
pop
gs
or
les
push
pop
stos
adc
test
cmpsl
ljmp
sub
ds
dec
jecxz
popf
push
push
cld
mov
inc
xchg
clc
out
mov
in
mov
jbe
aas
fwait
outsb
pop
daa
sub
fisttpl
jp
lret
popf
stos
pop
adc
mov
cmpsl
nop
mov
pusha
sub
loop
add
cwtl
or
and
je
popa
in
jnp
push
pop
xchg
xor
adc
fistpl
mov
sarb
sti
cld
bound
ret
mov
adc
lret
push
xor
cmp
loop
mov
jmp
pop
int
shlb
add
jno
sbb
adc
addb
inc
mov
and
shll
fs
imul
stos
or
add
mov
push
pop
and
jecxz
or
sahf
stos
sub
jne
and
cmp
out
fistps
cld
xor
cmp
xor
jbe
int3
cli
decl
mov
movsl
out
outsl
ds
out
dec
arpl
fimull
inc
jmp
fistpl
cld
je
loopne
cmp
xchg
ljmp
pop
aad
insl
cld
sub
or
fistl
jle
je
fdiv
mull
jno
jns
lcall
clc
pop
pop
sub
inc
sub
mov
sbb
daa
jle
ds
dec
movsl
stos
dec
adc
cld
dec
std
cli
push
mov
mov
xchg
insl
test
inc
int
push
jnp
jp
cmpsl
sub
mov
sti
icebp
mov
pop
xchg
pop
fsubrl
addr16
out
cmp
and
aad
or
insb
inc
adc
pop
daa
pusha
repnz
xchg
shrb
add
mov
xor
sbb
fs
orb
rcrb
mov
in
sahf
mov
adcb
sbb
mov
call
popf
lcall
mov
cmp
mov
push
movsb
movsb
pop
ret
push
mov
mov
push
push
push
sbb
ficompl
jb
dec
sub
das
jp
into
push
cmp
push
out
pmulhw
xchg
cld
mull
dec
xor
mov
stos
push
and
stos
xchg
adc
fs
rol
fcmovne
idivl
int
push
in
scas
or
xchg
inc
xchg
xchg
sub
cmp
and
data16
movsb
mov
rolb
sbb
in
shlb
inc
sub
insl
jae
mov
flds
inc
jge
mov
into
inc
add
mov
rol
adc
pop
cmp
fmuls
push
adc
daa
imul
addl
repz
and
sti
js
jge
fsubs
arpl
fistps
repnz
pop
cmp
ds
mov
jl
dec
and
cmp
adc
jne
enter
iret
stos
mov
and
push
fists
pop
loope
in
jae
dec
into
xor
pushf
shrl
arpl
jl
cwtl
sarb
aad
js
xor
pop
push
lea
lock
adcb
mov
mov
push
fstps
inc
ds
inc
stos
das
dec
xor
pop
fistpl
adc
cwtl
jge
sub
lahf
jmp
cmc
or
outsl
xchg
inc
inc
and
jecxz
push
mov
push
cmp
rorl
js
loope
sarl
or
push
sahf
inc
int
call
push
mov
int3
xchg
push
push
nop
and
das
push
imul
inc
inc
xor
cmp
test
jnp
lock
ss
pop
cld
in
or
das
test
jbe
or
mov
in
cmp
add
xchg
aaa
aas
iret
data16
ja
lods
test
popf
iret
je
aam
push
movsl
shll
xchg
xchg
mov
test
jno
iret
jmp
loopne
ds
aam
pop
enter
aaa
daa
xchg
xor
movsl
sbb
into
dec
and
out
sbb
or
xor
push
add
addr16
jo
outsl
mov
outsl
dec
shll
test
ljmp
mov
subl
xor
and
dec
mov
fstpl
xor
das
add
mov
aaa
loopne
jecxz
std
subb
ljmp
test
mov
mov
push
inc
std
ss
xor
mov
fdivl
xchg
out
rolb
mov
xchg
stc
sub
cltd
pop
imul
xor
xchg
pop
push
and
pop
imull
dec
xor
stos
out
xorl
or
cmp
mov
ret
xchg
test
push
add
movsl
test
flds
inc
jp
push
test
inc
fdivrl
lcall
test
iret
cwtl
loope
test
das
xor
jno
mov
lea
adc
lock
hlt
push
rcl
fisubrl
cmp
pusha
jo
sub
test
sub
jb
add
add
dec
adc
cltd
imul
push
fwait
leave
shlb
aad
in
xchg
mov
xor
fisubrl
jl
lahf
jb
daa
insb
jno
push
lds
arpl
inc
cmp
insb
roll
fwait
cltd
dec
dec
loope
xor
push
jmp
cli
das
inc
fnstenv
sub
loopne
push
mov
mov
addb
sahf
imul
xchg
pop
jnp
imul
aas
mov
pop
add
mov
stos
xor
insl
adc
add
psubsw
clc
js
enter
inc
xlat
mov
out
and
jle
fwait
mov
orl
mov
dec
es
addr16
inc
jbe
js
or
mov
sahf
aaa
inc
fs
out
je
hlt
clc
and
and
adc
jg
repnz
int3
cmpsb
testl
mov
sbb
cmc
and
adc
pop
dec
push
rcll
mov
sbb
imul
ja
mov
es
loop
or
pushf
lea
cmp
jg
les
add
ret
pop
sbb
insl
or
adc
mov
push
adc
lahf
push
xchg
pop
mov
rcrl
ret
enter
call
movsb
and
cli
js
add
mov
cmp
adc
bound
xchg
enter
aas
clc
loope
aas
pusha
or
mov
or
js
mov
divb
mov
rcr
scas
mov
pop
jge
insb
jnp
adc
xor
inc
ljmp
push
insl
jle
inc
adc
mov
aam
aad
pop
jle
call
add
fwait
xchg
mov
sbb
push
cmpsl
adc
xchg
push
repnz
outsl
cmp
rcrl
push
cmpsl
test
xchg
rcll
fimuls
leave
mov
aas
fistpll
pop
mov
aaa
pop
aam
stos
mov
scas
push
mov
jmp
xlat
push
fildll
push
jp
jns
inc
mov
jno
sbb
mov
test
out
inc
inc
pop
jbe
int3
fisubl
insl
repz
cld
push
fcmovnu
mov
outsl
pushf
ja
loope
mov
popf
and
cmpsb
mov
xchg
xor
aas
sarl
xchg
pop
es
insb
pop
test
cmp
jbe
mov
xor
xor
mov
cltd
or
imul
pop
idivb
jae
cmp
push
cs
inc
and
mov
push
mov
mov
push
mov
jle
clc
and
cmpsl
shrb
aad
test
sub
popa
pop
pusha
mov
sbb
inc
inc
nop
notl
imul
inc
outsb
adc
mov
xchg
lock
mov
or
je
xchg
dec
test
les
lods
int
xor
test
in
lret
dec
dec
jne
mov
and
lahf
dec
cmp
and
and
inc
iret
mov
loope
test
jp
das
frstpm(287
lcall
mov
mov
in
inc
je
inc
js
xchg
lahf
sahf
shll
loope
push
jno
les
arpl
imul
fidivl
cmp
aaa
or
movsl
mov
push
rorb
jmp
in
xor
push
cld
in
jo
push
std
ficoml
xchg
cld
es
inc
push
popa
push
inc
ljmp
jns
lret
std
ficomps
mov
stos
jns
sti
aas
mov
inc
mov
dec
pop
sbb
push
jbe
dec
dec
xchg
mov
lds
mov
push
push
adc
or
sar
jno
add
scas
pop
pop
fldl
lret
shll
insb
xor
jb
sarb
sbb
mov
repz
sbb
cmp
mov
fwait
jno
jae
adc
sarb
outsb
rorl
fiaddl
and
or
sbb
sub
stc
rcrl
pop
fdivr
or
and
or
and
adc
aam
jo
mov
ds
test
stc
fstl
pop
or
jmp
xchg
mov
dec
sbb
jmp
add
mov
or
enter
jg
mov
mov
mov
add
mov
pop
cmp
test
or
mov
sarb
aas
into
cli
in
pop
aaa
cmp
mov
fs
jecxz
clc
lea
test
jge
lcall
out
dec
pop
shlb
mov
or
jne
cmpsl
lcall
mov
movsb
loopne
pop
mov
out
in
pop
or
test
jae
sti
and
stos
pop
rcrb
test
or
je
clc
mov
aad
or
fnsave
scas
mov
xor
jle
or
int3
addl
std
les
int3
mov
addr16
inc
into
lahf
gs
ret
jle,pn
fcmovb
push
stc
lahf
xor
dec
mov
mov
out
cmpl
das
xchg
jns
dec
jnp
dec
mov
adc
int3
and
push
rcrl
cld
enter
cmp
pop
mov
pop
dec
jns
gs
into
ss
mov
add
test
cmp
cmpsb
dec
divb
hlt
jecxz
or
aaa
std
pushl
andb
mov
lret
out
or
mov
and
negl
cmpsl
adc
rorb
push
pushf
add
cmpb
cmc
sub
mov
leave
lock
sub
xor
or
mov
out
fsub
push
add
int
mov
xor
cmp
cmp
or
xchg
jle
and
sub
scas
daa
stos
out
test
pop
mov
test
jecxz
mov
ficompl
enter
repz
incb
mov
mov
out
push
xchg
dec
xchg
out
add
cltd
add
test
out
and
mov
mov
xor
out
rcrb
xchg
psubusb
icebp
das
mov
pop
cmp
xchg
xchg
pop
daa
mov
fs
fdivrl
or
daa
push
cmpl
cmp
xchg
mov
jle
adc
push
cli
popf
arpl
movb
dec
iret
inc
xor
into
cs
mov
ss
cmc
divl
and
in
mov
adc
dec
push
sub
imul
ficoml
push
pop
cmpsl
adc
ds
test
mov
sbb
cmpsl
pop
cmpsb
in
movsl
xor
xchg
adc
sbb
sahf
pop
pop
fwait
sub
or
inc
mov
xor
mov
mov
pusha
ret
icebp
pop
push
mov
or
inc
mov
inc
pop
and
xor
dec
add
stos
and
addb
or
rcrl
movsb
fcoms
and
loopne
rcll
scas
icebp
sbb
jle
movsl
fwait
inc
test
lock
ss
aaa
and
les
adc
xchg
lret
or
xchg
sub
sub
outsl
xchg
jp
ljmp
cli
shlb
cmp
sbb
sbb
ficoms
xorl
and
hlt
sbb
jg
xchg
aam
stc
js
addb
lods
test
daa
and
in
mov
pop
xor
dec
pusha
lret
xchg
sub
and
sub
and
fidivrl
push
int3
in
xchg
ret
stc
out
cs
insb
pop
outsb
ret
popf
aad
xchg
scas
mov
mov
daa
fsubrp
sbb
mov
cmpsb
test
int
clc
pop
in
add
mov
into
inc
movsb
aad
push
adc
out
jb
jb
in
icebp
jmp
mov
pinsrw
pop
scas
mov
fld
xlat
icebp
je
test
lret
cmp
les
jno
lea
xchg
pop
insl
xchg
xor
out
xor
orl
enter
scas
inc
je
push
sbbb
push
dec
cmp
ret
jno
int3
pop
or
xor
sub
push
in
or
jmp
mov
leave
mov
cld
aam
mov
fdiv
pop
cmp
js
mov
mov
lock
dec
push
jp
adc
jmp
ficompl
push
push
fs
sub
xchg
xorl
es
rcll
xor
insb
cmp
adc
dec
cmp
lea
push
test
xlat
cmp
es
push
push
ja
scas
add
out
or
push
scas
mov
aam
and
sti
jg
xor
cwtl
or
les
mov
inc
cmp
cli
sub
dec
lds
push
mov
stc
lods
test
lock
pop
xchg
lea
ja
aam
popf
sti
sbb
mov
adc
dec
fcomps
roll
pop
dec
cmp
add
test
test
add
jae
mov
jbe
outsl
pop
lahf
movsl
lods
mov
mov
aam
sti
inc
in
push
cwtl
aad
lret
push
testb
fistpl
jns
and
scas
dec
fs
test
into
cmp
inc
les
loope
enter
cmpsb
jae
mov
cmp
in
movsl
fistps
dec
inc
clc
imul
aaa
cli
fcomi
sbb
loope
dec
push
inc
sbb
ror
and
sub
rorb
test
push
ret
sbb
push
push
call
cwtl
dec
in
and
cld
push
test
add
jb
addb
mov
push
test
xor
loopne
cmpsl
dec
jle
pop
ja
fwait
push
and
mov
sbb
or
jae
mov
fs
popl
hlt
scas
jecxz
or
sub
aaa
leave
xor
xchg
adc
out
or
jmp
pop
inc
out
and
mov
outsl
nop
sub
test
mov
or
ficompl
push
sbb
mov
fwait
xchg
push
cltd
mov
push
dec
movsb
adc
fiaddl
test
mov
sti
stos
jbe
imul
push
test
insl
dec
insb
addr16
outsl
jle
cwtl
sub
inc
mov
or
inc
dec
push
push
aaa
dec
faddl
aam
shll
lret
dec
adc
cwtl
mov
mov
movsb
jp
testl
cmpsl
mov
gs
pop
sbb
mov
test
adcb
xchg
int3
jle
ljmp
ljmp
pop
loope
adc
insb
pop
add
and
je
mov
clc
into
sahf
jo
xor
gs
je
shl
mov
aam
addr16
dec
gs
imul
les
xor
mov
push
jae
mov
mov
iret
jge
push
fwait
insl
sbb
push
mov
jecxz
stc
and
gs
inc
movsl
add
jp
xor
pop
mov
or
gs
push
jae
ljmp
ret
dec
xchg
sub
xchg
cmpsb
inc
push
movb
mov
in
pop
dec
jae
movsl
push
cmp
movsl
push
loopne
add
mov
lret
mov
cld
push
sbb
ja
xor
sbb
pop
jp
dec
xor
inc
incb
sbb
cmpsb
add
mov
sbb
mov
bound
sub
lret
mov
fdivrl
jno
test
cmp
mov
aaa
xchg
mov
popa
pop
cmp
ljmp
jmp
cmp
xchg
movsl
sbb
jno
push
cmp
xor
add
icebp
popl
int
inc
mov
fistpll
movsb
xchg
in
jecxz
jge
cmc
out
fldt
sub
fdivs
pop
cmp
sbbb
jmp
jle
das
daa
mov
adc
cmp
mov
mov
adc
jle
sub
add
stc
jmp
and
movsb
sbb
pop
clc
jl
push
ja
pop
add
imulb
cld
daa
cmp
enter
and
insb
jns
enter
cld
xor
pushf
fisubrl
xor
inc
andl
xchg
pop
in
jmp
cld
aad
adc
jecxz
pop
jmp
arpl
xchg
adc
xchg
notl
aam
pop
add
jnp
pop
scas
or
jmp
jge
adc
or
fcomp
imul
aam
sahf
iret
loope
cmc
scas
enter
add
mov
lods
adc
mov
ficoms
mov
sub
mov
pop
cs
fisubl
out
movsb
lcall
mov
mov
icebp
and
fisttps
imul
sbb
mov
hlt
fildl
cli
gs
das
je
lock
fwait
xlat
dec
insl
adc
lret
ret
pop
int
cltd
and
push
mov
cwtl
push
or
cmpsb
stos
pop
mov
xchg
sahf
push
imul
cmpsl
mov
xor
cwtl
xchg
stc
fidivs
and
sub
aam
loope
mov
jle
out
fwait
test
jg
cmp
xorb
dec
push
cmp
icebp
pop
test
and
fisubl
aas
cmpsl
pop
fstpt
inc
nop
xchg
insl
adc
int
rcrb
pop
sahf
xchg
jbe
movsb
popf
ret
lea
shll
jmp
push
int
test
jle
fsubl
push
hlt
out
jns
das
push
or
xlat
xchg
push
pop
xlat
sub
ret
mov
mov
or
lds
or
loop
cli
inc
push
jne
sbb
hlt
mov
popa
and
mov
xchg
xchg
mov
sarl
mov
or
lods
dec
rdtsc
mov
dec
out
push
test
sbb
adc
loope
daa
lock
stc
lcall
fsubr
mov
rep
adc
adc
pop
test
pop
push
out
scas
jns
pop
xor
and
fsubrs
adc
dec
jns
push
sarb
cmc
int3
adc
mov
je
loopne
adc
loop
mov
movsl
ljmp
lods
inc
dec
insl
jmp
mov
ljmpw
xor
inc
in
dec
jns
cwtl
ljmp
les
addr16
pop
insb
mov
adc
sub
movb
mov
sub
jmp
jae
xor
cmp
push
pop
jne
xorl
adc
sbb
add
ret
fisttpll
push
pop
xchg
pop
jp
jno
cmpsl
test
pop
or
rcll
fmuls
pop
lahf
cmpsb
jno
fldenv
xor
cmp
mov
jmp
cmc
popf
div
cmpb
pop
add
lock
mov
adc
cmp
push
loopne
add
jmp
and
dec
xchg
into
lahf
pop
dec
insb
jmp
outsl
cs
je
shll
add
ljmp
jns
ret
dec
jbe
and
stc
lds
cltd
xlat
mov
cmpl
mov
mov
push
pop
sbb
push
jmp
lret
clc
mov
jns
aad
cli
jns
and
cld
dec
sti
jmp
fcmovbe
out
repnz
xor
mov
cmpsb
or
xchg
cmpsl
mov
jl
inc
test
call
jp
add
in
xchg
sub
dec
arpl
and
idivl
cmpsl
mov
cmc
aas
jecxz
jb
mov
leave
jo
arpl
mov
imulb
cmp
sbb
insb
cmc
enter
out
jne
push
cmp
mov
andb
mov
inc
mov
adc
cmp
adc
jg
stc
ds
das
jae
and
add
mov
insl
pop
mov
js
fmuls
into
enter
add
add
je
clc
xor
outsb
mov
cmc
jne
out
in
sbb
add
scas
inc
cmp
add
stos
mov
lret
out
ljmp
inc
je
dec
iret
clc
cld
popf
mov
cmp
and
jl
ret
xor
psrlq
aaa
lret
addr16
mov
inc
push
and
jle
and
pop
loopne
adc
or
xor
jg
xchg
les
xor
jnp
xchg
icebp
insb
inc
add
stos
orb
notl
mov
xor
and
arpl
xchg
pop
jl
jno
fcomps
cmp
stos
ret
xor
jne
mov
stc
popa
jge
sub
jg
xchg
mov
lret
fs
mov
cmp
pop
mov
call
pop
push
cmc
test
sbb
jns
rcll
insb
sahf
pop
mov
mov
inc
and
icebp
mov
push
mov
rorb
mov
mov
sbb
mov
in
cmp
push
xor
ficompl
test
jno
push
daa
out
push
test
sub
push
add
mov
push
int
cmc
pop
gs
sbb
out
popf
mov
les
cli
push
mov
movsb
scas
fcom
push
cmp
aam
add
sub
lods
jae
mov
inc
dec
scas
xchg
jge
loope
adc
xchg
mov
mov
iret
mov
in
rcl
aaa
std
push
and
mov
jno
insl
mov
cmp
mov
sbbb
adc
lea
adc
out
insl
fsubrs
mov
cmp
cmp
sbb
mov
leave
aad
pop
sbb
xor
xchg
sbb
adcl
push
repz
add
fistpll
xchg
xor
jp
inc
add
aaa
loopne
loop
pop
in
lods
inc
push
mov
jbe
jns
add
xlat
xchg
adc
loop
xorb
and
xor
inc
stc
cmp
jno
fs
sub
fnsave
push
xor
fcmovbe
cmp
mov
sub
lods
mov
push
xchg
xchg
loope
xchg
imul
mov
or
jge
ret
call
nop
decl
dec
xor
add
add
gs
shr
mov
sahf
push
leave
adc
in
cmp
and
mov
pop
je
and
test
add
push
cmp
xor
sub
cmp
inc
lods
or
and
mov
js
mov
lea
xchg
dec
push
ds
clc
or
add
mov
inc
push
pushf
test
enter
xchg
xor
popa
aaa
dec
outsl
decl
jg
lret
lcall
iret
mov
or
mov
test
cmp
add
jp
sub
xor
sti
jno
jmp
sub
call
dec
push
and
xor
mov
pop
mov
sub
xor
mov
or
add
pop
or
lcall
xor
dec
push
out
dec
js
xchg
into
cmp
mov
push
sub
pop
sub
mov
sbb
in
adc
fadds
mov
popf
out
dec
lret
imul
sbb
push
adc
mov
cmc
dec
mov
repnz
or
jmp
loopne
push
ds
xor
cmp
mov
mov
into
push
inc
pusha
arpl
xlat
push
push
cli
stos
mov
cmp
cltd
jns
mov
xchg
push
xor
ss
imul
test
xchg
subl
ss
std
inc
aam
enter
jno
cmp
push
sub
xor
jbe
mov
rcr
insb
scas
or
movsb
xor
sti
loopne
aas
in
mov
push
xor
out
mov
outsl
xchg
les
nop
mov
inc
xchg
cld
push
or
xchg
mov
push
in
jmp
out
inc
clc
in
xor
fcomi
mov
xchg
adc
ficomps
jp
xor
ss
and
les
pop
es
push
mov
mov
mov
in
leave
and
mov
xchg
sub
scas
addr16
cmp
jle
mov
push
mov
mov
aad
test
push
or
es
jmp
ja
jecxz
inc
enter
ret
sbb
leave
pop
sub
and
push
cwtl
push
lock
mov
sub
mov
jno
out
stos
adc
mov
outsb
int
ret
icebp
cmp
bound
insl
fistl
jge
pop
je
sbb
inc
pop
dec
push
hlt
in
mov
mov
movsb
push
xchg
jg
lods
les
mov
cmpsl
addr16
popf
les
insl
mov
xchg
xchg
in
mov
and
movsb
clc
adcl
lock
mov
movsl
in
divl
xchg
or
test
dec
and
movsb
dec
xlat
or
adc
js
leave
aas
cmc
fisttpl
fidivl
ss
or
jecxz,pt
int3
xchg
cmpl
pop
das
movsl
lcall
ja
sbb
fisttpll
mov
dec
fs
fs
int3
in
adc
mov
mov
adc
outsl
addr16
xchg
aaa
pop
stos
sbb
or
sbbb
dec
leave
add
cs
sub
mov
test
sbbl
scas
stos
add
in
push
inc
mov
xor
xor
jg
sub
dec
movsb
and
dec
hlt
xchg
mov
stc
lock
aas
sbb
or
sbb
mov
sub
mov
fstps
hlt
adc
shl
inc
arpl
das
test
adc
filds
aad
push
sbb
inc
adc
loopne
mov
outsl
test
jg
dec
in
cmp
call
xchg
dec
lahf
fistps
jg
stos
popf
movsl
adc
lcall
movsl
push
and
lods
xchg
ret
stos
inc
rcl
adc
sbb
or
icebp
lret
das
mov
jge
sbb
mov
jle
fists
cmp
and
sbb
cmp
test
std
pusha
mov
pop
ret
gs
inc
sarb
into
adc
loopne
lea
or
ss
adc
clc
lcall
popf
adcl
leave
loopne
cmpsl
cltd
shlb
sbb
add
test
ja
das
popa
jecxz
sub
xor
aas
rcrb
push
xchg
loope
dec
ja
and
lret
mov
ss
inc
stc
pusha
pop
pop
push
icebp
jg
sar
incl
fstpt
push
fs
ja
icebp
jge
mov
das
arpl
push
imul
cmc
add
xor
push
sbb
lret
roll
into
inc
push
out
dec
lods
and
mov
jbe
in
push
sahf
movsb
fcmovbe
repz
sub
mov
stos
add
insl
repz
aad
sub
or
mov
push
in
inc
xchg
lea
pop
pop
inc
mov
mov
mov
ljmp
clc
das
pop
sub
inc
push
push
and
sahf
xchg
in
and
pop
cwtl
fmul
jl
lcall
xor
jns
call
pop
je
lret
fwait
das
pusha
cltd
in
jbe
or
aad
pop
pop
imul
mov
mov
jge
jne
mov
lods
pop
mov
aas
push
mov
jb
adc
pop
lods
data16
inc
xor
push
add
xchg
push
push
mov
fwait
xor
add
mov
iret
int
sub
mov
dec
xor
xchg
popf
ss
repz
sub
mov
pop
pusha
dec
cmc
jb
cwtl
pop
int3
jge
das
pop
push
mov
mov
les
xchg
or
dec
sub
je
lds
sbb
xchg
inc
out
aad
test
sbb
pop
movsb
xchg
sub
pop
imul
rcll
push
roll
mov
adcl
cli
imul
lahf
pop
out
add
sbb
sub
mov
or
insl
ror
inc
pop
ret
mov
xor
xor
push
pmulhuw
inc
pushf
jnp
inc
xlat
das
xchg
mov
ja
lcall
dec
les
xor
sbb
pop
push
sbb
mov
add
mov
add
sub
inc
or
pop
or
pop
ljmp
xchg
stos
xchg
push
adc
xlat
push
jecxz
cmpsb
jp
push
fiaddl
inc
pop
jg
cmp
add
jg
jae
cmp
nop
int3
or
aam
fwait
sub
int
dec
lds
loopne
mov
mov
arpl
and
xorl
add
xor
mov
xor
test
fs
out
js
xor
cmpl
inc
movsb
pop
cmp
cmpsb
pop
outsb
push
sti
je
in
mov
xchg
mov
mov
push
mov
inc
notb
adc
stos
inc
push
pop
sub
xor
lock
fs
sbb
xchg
out
and
push
pop
cmp
insl
int
sbb
jbe
and
xchg
popa
xchg
jp
mov
fdivl
rep
fisttps
pushf
repz
inc
pop
push
into
gs
jbe
les
cltd
push
xor
imul
mov
leave
mov
pop
xchg
testl
jbe
fdivl
mov
mov
xchg
or
xlat
jecxz
ja
mov
or
in
aam
pop
insb
mov
cmp
push
sti
addb
mov
scas
subl
stc
xchg
push
daa
cltd
jl
mov
mov
jo
das
mov
roll
adc
push
xchg
push
imul
lds
aad
scas
push
sbb
sbb
jge
xor
enter
lret
movsl
fnsave
push
in
jns
jmp
fdivl
jb
cld
mov
lret
fdiv
imul
inc
dec
out
insl
mov
push
insl
nop
sbb
dec
jns
out
sub
xlat
inc
cmp
push
xchg
and
jnp
stos
stos
out
jp
movsb
xor
jge
int3
stos
inc
inc
push
jne
add
lods
push
cmp
fidivs
enter
test
lods
adc
push
adc
add
fnsave
ss
inc
jnp
and
iret
test
xchg
cmp
fmuls
jmp
shlb
scas
adc
in
lahf
fdivr
hlt
aaa
dec
call
leave
scas
popf
cmc
ss
dec
dec
jmp
rorl
push
jg
std
mov
arpl
cmp
sub
dec
sub
cmpsl
sub
pop
push
xchg
stos
cli
pusha
push
js
mov
fld
sbb
xlat
mov
sub
out
rcl
ret
dec
dec
into
bnd
jno
sbb
push
aaa
push
repz
sahf
sarl
add
pop
fistpl
popa
pusha
sbb
lahf
je
daa
mov
lcall
testb
adc
call
jmp
cli
outsb
stos
cmp
mov
test
inc
cmp
lret
cmp
icebp
in
cmp
outsl
mov
arpl
test
inc
jno
pushl
cmp
push
je
fdivrp
es
bound
sub
sar
rorl
loop
inc
lds
push
rclb
xchg
pmaxub
jmp
push
xor
dec
add
stos
cmp
mov
dec
repnz
cmp
add
sub
adc
adc
movsl
adc
jmp
mov
mov
aam
jb
aaa
and
or
sbb
enter
neg
fs
push
and
popf
cmpsl
popf
mov
andb
cmp
lea
jle
mov
insb
sbb
data16
mov
xchg
push
mov
stos
jp
push
cwtl
ja
testl
adc
stc
jno
repnz
jo
mov
xchg
data16
push
lret
add
or
add
adc
dec
fdivrs
xchg
sub
ljmp
out
mov
jbe
daa
mov
and
out
adc
repnz
xchg
daa
orb
lea
imul
push
jecxz
jp
bound
push
movsb
pop
fwait
add
in
mov
xorl
inc
testl
scas
mov
sub
jns
popa
inc
jmp
push
jl
fmuls
jle
cmp
xchg
xchg
push
ss
add
loope
cmp
test
dec
pop
fstl
std
in
movsb
cmp
and
mov
push
dec
mov
cmpsl
dec
imul
popa
lahf
out
cltd
mov
dec
nop
ret
repnz
leave
inc
sti
mov
sub
imul
cltd
divb
shll
jnp
lea
jecxz
repz
popa
push
sbb
ret
sbb
push
stc
les
xlat
insb
mov
or
pop
pop
xchg
aam
mov
idivb
push
scas
mov
imul
dec
fiadds
cmpsb
xor
or
out
xor
jl
add
rcll
or
mov
push
hlt
xchg
aam
test
cmp
dec
push
pop
lret
popf
imul
ds
iret
xor
fsubrp
test
dec
pop
inc
lcall
repz
or
jns
lcall
les
cmp
test
popf
mov
pop
fwait
lahf
add
mov
sub
subb
cmp
ja
jno
clc
sbb
mov
lea
pusha
stc
push
sbb
test
into
adc
push
jns
jo
outsl
jb
addr16
mov
adc
pop
sub
lods
addr16
repz
or
push
sbb
out
jae
call
push
enter
jo
sbb
pop
movl
pop
jnp
vmovq
push
data16
fcmovnbe
rorl
scas
mov
in
push
cwtl
test
sbb
jae
xlat
mov
jnp
add
push
repz
inc
outsb
inc
pop
mov
or
pop
add
fcmovne
lcall
leave
cmp
das
icebp
leave
lods
shll
push
gs
enter
jmp
imul
loope
or
mov
out
lret
xchg
pop
jo
fnstcw
xorb
stos
out
push
pop
add
stc
lret
pushf
dec
dec
pop
mov
aad
ljmp
adc
mov
xchg
dec
sub
scas
and
test
sbb
lea
xor
sbb
push
lds
mov
imul
dec
xchg
mov
arpl
inc
movsl
mov
iret
pushf
das
add
push
imul
dec
sbb
int
push
lret
sub
andl
gs
enter
mov
cmpsl
lea
and
sti
add
divl
mov
fucom
or
cmp
push
fisubrs
mov
gs
call
in
dec
shrl
negl
cmp
inc
rorb
push
jle
cmp
pop
add
sub
in
popa
cmp
sbb
ficoml
push
or
add
divl
cmp
movmskps
ficompl
lock
mov
xor
and
xchg
ret
push
je
and
add
push
adcl
adc
inc
mov
cltd
sub
into
ja
and
push
ret
movb
testb
lds
cli
and
out
add
mov
jl
sahf
lock
push
mov
rclb
pop
data16
mov
push
int
scas
mov
loopne
enter
xorl
mov
gs
clc
imul
mov
xor
and
lock
loope
sbb
mov
fldt
ficoms
loope
cmp
xchg
jbe
or
fiadds
adc
xor
out
adc
shl
cmc
or
out
mov
into
sub
pop
addb
addr16
xlat
push
fistpll
push
add
pop
xchg
cmp
fldcw
jle
out
pop
shlb
cmc
mov
addr16
mov
fidivrl
ret
and
sbb
lods
popf
cwtl
enter
cmp
jb
adc
pop
insb
jae
jnp
ret
jp
cmpsl
aaa
hlt
or
pop
jmp
mov
test
leave
jbe
lods
fisubs
mov
popf
cmp
pusha
dec
dec
pop
loop
xchg
mov
jae
nop
lcall
in
xor
shrl
or
pushf
lods
cmovle
and
ds
and
pop
inc
ss
insl
addl
test
cmpsl
xchg
sbb
test
adcb
xor
sub
sub
pop
mov
mov
dec
js
push
or
pop
test
ret
xchg
jmp
push
push
mov
mov
or
mov
aas
stos
je
mov
aaa
sub
mov
jle
out
mov
jae
sbb
sub
iret
pop
testl
push
or
aam
daa
mov
fcoms
cmpsl
and
lahf
scas
sub
fnstcw
mov
adc
dec
je
cs
rcll
push
insl
insl
sbb
sub
pop
fldenv
loope
push
jne
in
xor
xchg
andl
js
xor
mov
xor
imul
or
or
jg
pop
mov
sub
dec
jg
fwait
jecxz
popf
jp
pop
jg
inc
incl
in
dec
call
loope
or
cmp
mov
movsb
xor
loop
and
adcb
fnstenv
cwtl
cmpb
mov
mov
dec
cmpsb
fbstp
in
jg
xor
ds
and
arpl
or
adc
inc
scas
push
jle
sub
sbb
lods
or
cld
push
lahf
out
sub
aam
int3
adcl
shl
push
movsb
cmc
sti
pop
xchg
enter
aam
jbe
sub
cmp
mov
fs
cltd
popa
push
test
inc
fbld
test
negb
dec
jb
in
add
dec
pcmpgtb
jmp
rcr
test
lret
pop
sub
xchg
stos
jae
or
jmp
xor
jle
ja
xor
insb
les
filds
das
lods
push
push
mov
mov
jmp
mov
cmc
leave
stc
ja
jg
push
push
pop
daa
xchg
out
insb
cmp
clc
mov
sar
jb
jmp
imul
dec
jbe
push
adc
cmpsl
rcrb
mov
aas
adc
in
mov
jns
sahf
xchg
push
ret
cmp
fbld
lret
inc
int3
dec
dec
lods
adc
mov
adc
scas
movsl
pop
mov
das
mov
out
jb
add
push
fcompl
pop
enter
inc
test
pop
cmp
rclb
loopne
dec
mov
into
shll
jle
jecxz
push
lods
subl
lds
imul
enter
enter
and
inc
loope
xchg
aam
jle
pushl
lods
mov
sahf
pop
mov
pop
xchg
sbb
jnp
outsb
mov
lods
jp
or
sub
andl
fisubrl
call
sub
rclb
jnp
mov
pop
sbb
cmp
test
sbb
int
insl
cs
test
cmpsb
inc
add
sub
lcall
movsl
sub
std
pushf
xchg
popa
xor
sub
scas
jno
pop
cltd
fmuls
popa
lret
dec
or
repz
push
or
sbb
xor
addr16
sub
push
push
pushf
mov
add
into
ret
or
inc
fidivrl
rorl
fstps
pop
faddp
mov
push
sub
in
dec
pop
enter
mov
mov
lret
mov
pop
icebp
pop
xchg
daa
or
mov
mov
ds
cmc
cmp
scas
push
mov
popf
test
lahf
scas
movsl
in
mov
loopne
cltd
xchg
add
dec
pusha
and
scas
push
dec
xchg
mov
mov
scas
adc
xor
inc
push
mov
and
pop
mov
outsb
xor
xchg
pushf
xchg
nop
scas
ret
mov
mov
jge
lea
or
xor
sbbb
dec
jnp
pop
enter
jbe
pop
jmp
hlt
inc
jne
pop
fisubs
insl
add
stc
mov
int3
and
mov
jp
or
inc
enter
repnz
mov
loopne
adc
pop
xor
push
fxch
or
inc
iret
sub
data16
bound
pusha
adc
leave
and
jmp
pop
scas
out
adc
mov
scas
insl
lods
mov
inc
stos
xchg
add
popa
cmc
push
sbb
push
add
add
cld
mov
inc
rcll
ljmp
out
jmp
push
dec
loopne
idivb
pop
adc
movsl
cmpsb
lock
in
daa
cmpsb
and
jbe
sahf
insb
je
insb
sbb
sub
adc
cmp
test
adc
pop
xchg
shrb
xchg
xchg
cwtl
jbe
mov
in
xor
in
adc
dec
sbbl
sub
xlat
sub
adc
inc
cmpsb
pop
cs
std
mov
mov
mov
cmp
or
add
add
fmul
outsb
cmp
cli
inc
das
jnp
cmp
into
in
dec
rcrl
ljmp
vmwrite
fcompl
xor
data16
cmp
test
inc
pop
pop
mov
outsb
inc
sub
arpl
push
sahf
jge
mov
sbb
cmp
mov
jl
inc
mov
roll
xchg
pop
hlt
and
fstps
sub
decb
push
call
hlt
test
mov
push
xor
out
adc
cwtl
sbb
mov
xchg
in
sub
dec
and
std
dec
shll
mov
pop
sahf
jns
jp
cltd
pop
sub
shr
call
mov
mov
jl
andl
fidivrs
mov
stc
and
test
jmp
or
aam
mov
fwait
loopne
sbb
cltd
adc
cmp
adc
scas
pop
xor
rclb
or
push
add
stc
ficoml
aad
cmc
sub
mov
cmp
inc
xchg
sbb
dec
pop
out
push
rclb
outsb
sub
test
mov
jb
and
and
cs
push
mov
rcl
les
hlt
call
stos
insb
ret
and
sbb
jle
xor
inc
leave
xchg
mov
out
dec
aam
outsb
stos
out
cs
fnsave
mov
xor
pushf
sbb
outsb
cmp
sarb
mov
ror
mov
rol
decb
mov
imul
fdiv
movsb
push
andb
sub
sbb
mov
xor
mov
cmpl
push
mov
or
inc
pop
les
arpl
call
test
sub
and
mov
lret
push
sbb
pushf
je
testb
pop
sbb
add
push
dec
mov
insl
jp
xchg
inc
jae
call
push
repz
or
outsb
in
stc
repz
jecxz
imul
aaa
cmp
push
lret
push
add
mov
inc
jb
mov
push
sti
fcomi
addl
adc
mov
out
cmpsb
stos
sbb
jns
sbb
jmp
cmp
lahf
mov
pop
mov
fwait
dec
mov
sub
lcall
outsl
cmp
xchg
push
les
pop
adc
add
and
icebp
or
lea
ja
out
mov
add
sub
pop
xor
mov
call
mov
cmovp
data16
outsl
imul
imul
lods
pop
cli
cmc
lea
loop
scas
fdivs
in
ss
and
divl
pause
mov
or
adc
add
lds
add
or
or
pop
lods
outsl
and
movsl
cld
dec
jbe
xor
ret
sahf
test
or
mov
lock
push
inc
sbb
mov
and
js
daa
jmp
mov
or
movsl
aas
lds
fisttps
pop
add
sub
sbb
aad
test
pop
pushf
push
test
cmpb
std
adc
inc
ffreep
dec
mov
push
inc
add
movsb
sti
xor
loopne
aaa
cmp
jmp
imulb
and
jne
xor
movsl
xchg
mov
sbb
mov
das
pop
lods
out
leave
nop
xchg
repnz
push
jg
mov
out
pop
jnp
xor
lret
pop
sbb
das
and
jb
rcll
sbb
scas
in
mov
dec
es
inc
mov
jecxz
aas
dec
iret
hlt
cmp
scas
daa
les
xor
cmp
das
jae
xor
lds
inc
dec
ret
or
xor
mov
fucomp
in
dec
adc
fxtract
nop
arpl
stos
cmp
and
shll
cmpsl
sbb
dec
push
xor
cpuid
cmpb
fiaddl
std
imul
scas
movsb
jp
orb
adc
pop
add
xor
mov
out
stc
out
into
daa
jle
and
sub
out
scas
cwtl
mov
mov
stos
mov
das
repz
sbb
cmp
xchg
leave
test
push
jno
jl
xor
xchg
cmp
adc
std
or
add
pop
inc
push
mov
jmp
push
ret
std
mov
test
adc
inc
pop
stos
fcomip
pop
pop
cmc
jmp
add
mov
and
dec
insl
xchg
mov
add
mov
mov
jp
popf
sbb
pop
dec
leave
and
sbbl
ds
pop
loop
xchg
mov
pusha
dec
stc
add
mov
lock
jmp
jns
mov
sar
jmp
pop
jecxz
jmp
jmp
or
inc
jge
aas
mov
in
xchg
xor
out
test
mov
imul
xor
adc
jecxz
xlat
adc
lret
sti
insl
addr16
adc
fs
outsb
js
pop
incb
cmc
jne
cmp
inc
or
inc
add
dec
fildl
clc
das
and
mov
xor
fcom
add
gs
push
in
fiaddl
sahf
mov
jge
add
sub
push
ljmp
mov
inc
inc
das
mov
xor
test
loope
in
fs
and
and
push
mov
imul
push
xor
cltd
cmp
xchg
dec
add
mov
mov
jns
stos
dec
pop
aas
shr
sar
or
icebp
xchg
mull
scas
sub
mov
pop
fisubs
out
daa
insb
repz
and
cmpsl
enter
aam
ss
jne
ret
adc
movb
movswl
pop
subl
jecxz,pt
xor
mov
lret
outsb
pop
dec
cltd
daa
dec
mov
jne
loop
pop
dec
mov
pusha
outsb
mov
push
jle
push
dec
push
out
dec
out
loopne
xor
out
lods
mov
aad
or
stc
add
or
out
sub
xor
inc
lahf
jp
xor
call
mov
loop
scas
rep
icebp
popf
fst
mov
jle
cmpsl
xor
pop
cmp
lock
mov
aas
mov
jg
jb
dec
sahf
sub
cltd
std
test
shll
adc
loop
shl
and
sbb
jo
mov
popa
outsb
bound
mov
sub
imul
mov
sub
int
inc
mov
hlt
in
inc
rcr
in
nop
rcrl
mov
cmp
sub
jmp
pushf
dec
lret
dec
in
pop
cmp
mov
mov
push
scas
in
or
popl
int3
cs
adc
std
les
sub
pusha
shlb
fisubl
adc
cld
push
cmp
cmpsl
xchg
dec
jmp
aaa
adc
leave
push
andb
imul
cs
mov
adcl
pusha
mov
adc
fwait
inc
push
xchg
mov
mov
sub
push
or
mov
push
cmp
arpl
pop
lea
mov
adc
jmp
adc
xchg
mov
pop
std
call
mov
in
xchg
inc
in
out
push
repnz
push
ja
test
push
mov
test
jmp
arpl
je
mov
inc
sbb
dec
add
hlt
lds
or
xchg
inc
pop
inc
add
test
add
shlb
mov
fxch
outsb
cli
sti
dec
loop
loope
mov
pop
adcl
stos
das
lret
movsl
inc
addr16
sbb
push
jnp
ret
cmp
jo
dec
jne
iret
mov
jns
cwtl
inc
or
xchg
xchg
mov
pop
jnp
imul
pushf
xor
nop
stos
loop
bound
xor
repz
or
mov
imul
xchg
push
sbbl
or
inc
movsl
int3
mov
das
mov
xchg
repz
in
cmpsl
cmpsb
or
inc
decb
or
imul
scas
aam
pop
in
mov
jl
and
loope
and
jg
pop
and
and
xchg
icebp
fidivs
movsb
ficoms
aad
out
sbb
adc
cld
loope
je
loope
leave
mov
sbbb
sbb
xchg
mov
testl
or
adc
lret
xor
fs
push
xor
sbb
mov
mov
push
mov
and
imull
js
insb
stc
aam
mov
and
cmp
xor
cmp
mov
mov
or
outsl
pop
hlt
mov
ret
push
xchg
jecxz
pushf
push
add
subb
lods
adc
rcl
xor
lea
xchg
sub
jb
sbb
stos
dec
pmullw
dec
jecxz
ljmp
scas
or
sub
mov
pop
scas
push
mov
insl
inc
inc
mov
leave
push
cmp
or
mov
jl
dec
adc
adc
jbe
add
xchg
mov
and
adc
fwait
incb
pusha
pop
and
dec
ss
pop
fnstenv
and
movsb
xor
clc
lea
mov
es
scas
lea
lods
cs
sarl
iret
jno
adc
jmp
adc
fcoms
daa
andl
into
or
dec
mov
cltd
inc
dec
sbb
sbbb
movsl
add
imul
jb
decb
mov
jl
call
pop
sub
cmp
loopne
repnz
or
pop
sub
jns
xor
nop
out
sub
loope
pop
in
insl
xchg
inc
in
roll
fidivl
in
scas
test
out
mov
xchg
lahf
push
mov
and
dec
and
mov
sub
std
or
fildl
enter
sarl
add
sbb
fsubp
fstps
lahf
lahf
mov
data16
stos
pushf
push
pop
popa
ss
mov
or
cmp
dec
dec
inc
inc
mov
xchg
xchg
dec
test
fwait
clc
out
mov
push
andb
push
in
sub
jmp
xchg
jecxz
call
test
popf
xchg
and
add
fistpll
pop
fidivrs
cmp
cmp
lret
jecxz
aas
mov
mov
inc
fwait
sbb
sub
pop
aad
sbb
mov
adc
loope
loop
sbb
inc
xor
cmp
lock
loop
fldl
in
xchg
sub
ror
aad
fisubrl
std
adc
dec
mov
inc
pop
pop
pop
mov
pop
loop
xor
out
jae
mov
scas
pop
shlb
push
jge
mov
call
sahf
fdiv
rcl
je
arpl
orb
popf
mov
inc
xor
jmp
ja
gs
push
insl
cmp
adc
cmp
push
xchg
push
sbb
mov
pushf
sub
push
stc
je
push
ja
inc
jbe
pcmpeqb
inc
jno
mov
scas
adc
and
add
call
scas
dec
in
iret
mov
sub
fdivr
sbb
pushf
dec
mov
jle
mov
pop
xlat
pop
sub
enter
xor
mov
pop
mov
pop
push
cld
or
jne
lea
mov
call
sub
jle
or
xchg
add
sub
or
xchg
cld
imul
xor
dec
sub
fisubrs
ret
mov
cmp
adc
xchg
dec
out
ret
sbbl
jle
adc
adc
loope
push
lahf
aas
pusha
lods
xchg
incl
jb
inc
mov
aam
es
mov
hlt
out
cmp
cmpsb
push
xchg
hlt
mov
push
mov
in
addb
cmpsb
adcb
mov
fisttpll
mov
cmp
addr16
rclb
call
scas
insl
test
int3
loope
sbbb
cltd
sbb
add
dec
xchg
adc
add
inc
sub
inc
dec
es
bound
aaa
push
bound
and
sbb
out
push
enter
mov
sbb
jne
icebp
pop
adc
cmc
repz
lds
mov
js
xor
mov
lea
adc
mov
stc
cld
pop
dec
pop
push
dec
fwait
pop
and
pop
in
push
sti
dec
jmp
xor
fdivr
call
or
pop
cmc
mov
cmpsl
push
xchg
xchg
int
pop
xchg
clc
popa
repnz
inc
or
adc
cld
inc
jnp
cmp
icebp
xchg
jge
push
mov
stc
jo
loope
sub
insb
loop
xchg
dec
pop
packsswb
dec
jae
push
in
clc
lret
roll
mov
xchg
lcall
imul
outsb
sarl
jl
mov
cmp
ficoml
cltd
xchg
xor
dec
pusha
sub
ja
insl
fwait
pop
sbb
xchg
jge
mov
push
into
mov
lods
or
sub
mov
push
inc
nop
rcr
sbb
sbb
xchg
add
sar
pushf
bound
xchg
enter
sub
jne
arpl
sbb
pushf
mov
icebp
jge
jg
out
test
int3
push
mov
pop
outsb
pop
rcrl
shlb
lods
and
inc
fs
pop
cmp
idivb
adc
icebp
es
fnstsw
dec
sbb
outsb
gs
adc
or
repnz
mov
popa
jo
fildl
push
add
push
xor
pop
lret
pop
lret
mov
repz
push
jne
test
gs
stos
leave
push
adc
sub
cmpb
loopne
mov
mov
adcb
leave
addr16
rcrl
arpl
sti
sbbb
out
xchg
or
dec
mov
jo
jbe
dec
pop
jbe
divb
xor
pushl
lods
add
loop
dec
lret
ljmp
pushf
cmp
data16
pop
adc
fdivrl
ret
add
add
stc
das
add
inc
sub
or
sbb
pop
add
fldt
push
cmpsb
inc
jns
xor
pop
insl
es
cmc
fildll
sbb
lret
sbb
sub
dec
mov
push
jae
pusha
mov
inc
mov
andb
inc
outsb
lods
xor
push
jne
insb
sbb
int
test
jne
std
movsb
fsubl
sar
fs
pop
mov
and
adc
xor
mov
leave
and
std
in
xor
adc
and
mov
push
jle
imul
negl
stc
mov
sub
push
xchg
rcrb
jbe
cmp
in
mulb
out
jb
es
sbb
pop
gs
push
popa
cmc
movsb
rorl
xchg
sub
pop
push
cwtl
test
out
dec
cmp
aad
stos
push
sahf
mov
dec
xchg
in
xchg
mov
movsl
mov
pop
mov
leave
push
cmp
sub
mov
add
sub
cmp
ss
rcrl
cld
push
xchg
fbstp
sub
enter
roll
aas
mov
push
cld
aaa
insb
cmc
shld
enter
jge
mov
jbe
out
cmpb
scas
lock
sbbb
xchg
pop
cli
cmc
mov
add
iret
loopne
addr16
stos
imul
mov
mov
bound
sar
out
xchg
jmp
adc
add
int3
cli
adc
pop
xor
add
sbb
cmpb
jo
test
pop
mov
mov
maxps
adc
rol
sbb
jbe
xor
jl
rclb
fcompl
or
and
jns
insb
or
es
or
mov
pop
push
mov
jge
sbb
xchg
les
adc
mov
cld
outsl
push
jnp
mov
lret
test
fistpll
adcb
fildl
sbb
dec
test
mov
mov
push
and
xchg
push
add
movsl
or
adc
or
sarb
sub
pop
lret
inc
out
push
xor
xor
decb
dec
shrl
push
outsb
mov
cmp
mov
cmp
dec
stc
xchg
lahf
outsl
xor
sub
jae
adc
mov
cmp
xor
push
stos
jle
mov
jns
pop
jmp
enter
add
out
jp
fldl
cld
and
andb
aam
xor
in
std
cmp
lcall
and
lds
mov
test
popa
adc
stos
enter
sbb
ljmp
lret
mov
dec
push
pop
jmp
mov
fldt
xchg
dec
fisttps
cli
push
cmp
sbb
call
jno
xor
cmpsl
scas
ds
jg
hlt
inc
add
fdivr
mov
add
mov
xor
push
adc
or
sbb
inc
mov
das
xchg
inc
and
test
pop
es
test
cmp
add
aam
sti
or
cltd
test
jge
mov
push
test
mov
add
js
mov
shlb
ret
adc
and
js
jmp
popf
fwait
sbb
sbb
mov
cli
push
ljmp
sbb
ret
sbb
xchg
mov
addl
out
xor
inc
pop
or
loope
adc
push
rcll
push
int3
add
or
sub
fldenv
jmp
cwtl
testb
iret
dec
jle
std
pushl
ja
jmp
pop
shr
dec
xchg
inc
xchg
xadd
ret
loop
mov
mov
loop
add
aam
dec
movsb
jns
negb
fwait
add
lret
or
fimull
mov
stos
inc
shufps
dec
add
xor
inc
cmpsb
sbb
daa
add
pushf
test
pop
in
sbb
aam
loopne
mov
mov
repnz
or
xlat
jecxz
insb
dec
push
dec
ljmp
jmp
cs
jle
pop
push
xor
repz
int3
mov
aas
xchg
xor
or
adc
mov
lods
cmpsl
sbb
jb
pop
add
lret
ljmp
pop
stos
mov
ljmp
mov
ret
rcrb
and
addl
pop
fcoms
fdivs
pop
rcr
and
cwtl
stc
push
inc
pop
lret
std
mov
add
xor
mov
mov
rorl
fwait
scas
xlat
ret
mov
insl
lret
daa
aas
imul
lods
imul
or
mov
mov
stos
inc
mov
pop
and
add
push
mov
dec
mov
xchg
push
sbb
int3
xchg
test
cmp
adc
lret
adc
xor
stc
insb
stc
mov
pop
and
xchg
out
inc
pusha
fstpl
xorl
or
mov
mov
mov
sub
push
dec
addl
lock
mov
stos
cmc
imul
mov
faddl
push
adc
js
outsb
add
push
push
or
pop
xor
xor
std
xor
xor
jg
or
jo
jns
insb
add
mov
jbe
negl
pop
xchg
inc
scas
sub
mov
les
insl
xor
loope
je
out
jge
ret
lods
aad
add
push
lret
mov
ljmp
lret
or
inc
sbb
xchg
into
push
xor
sbb
jae
shrl
xchg
daa
fsubl
pop
or
mov
cld
push
mov
adc
push
sti
xchg
ficoml
dec
xor
add
gs
out
mov
xor
stos
int
push
mov
lahf
add
negl
mov
scas
mov
fs
aam
inc
and
sti
iret
mov
movsb
aam
loopne
pop
data16
nop
test
mov
jl
lds
mov
aad
adc
sub
lret
int
cmp
out
pop
and
cmpb
mov
inc
pop
movsl
icebp
out
imul
xor
imul
pop
add
xchg
in
adc
add
sbb
dec
inc
sbb
popa
lcall
xor
inc
adc
insb
loop
jo
dec
mov
andb
inc
xchg
xchg
push
test
sbb
sahf
pop
adc
outsb
or
push
adc
orb
mov
je
adc
sbb
pop
mov
cmp
out
push
mov
add
popf
adc
sbb
sti
inc
xchg
mov
movl
int
fsubrl
xor
les
push
mov
lea
pop
mull
pushf
in
mov
dec
adc
mov
lret
xor
and
sbb
lret
out
jmp
sbb
sub
mov
mov
test
clc
repnz
mov
jle
adc
pop
push
out
stc
mov
mov
addr16
mov
out
mov
sub
arpl
rclb
and
xor
std
into
add
sar
cmc
outsb
jl
pop
std
xchg
xor
and
jo
mov
sbb
cli
jne
mov
test
adc
or
adc
add
inc
je
and
mov
std
out
lock
iret
in
or
inc
pop
xor
fidivl
lahf
add
mov
and
sbb
stos
cmp
cwtl
pop
roll
js
icebp
add
gs
or
mov
inc
iret
mov
movsl
hlt
xchg
test
mov
jp
cmp
fldl
xor
mov
sbb
jp
ss
popf
mov
xor
pop
stc
mov
or
mov
aaa
adc
push
in
mov
mov
popf
out
and
lock
sbb
aaa
test
sub
dec
adc
cmpsl
push
sahf
daa
and
push
fdiv
pop
sub
sbb
xchg
int3
lret
sbb
mov
movsb
pushf
fwait
mov
mov
aad
push
adc
test
mov
cmp
addr16
lea
orl
loope
loope
jo
pop
lods
rolb
push
call
sbb
cmpsb
movsl
daa
mov
in
sti
mov
cltd
sub
jl
cli
mov
add
popa
cmp
xchg
inc
mov
hlt
mov
cltd
mov
adc
fldt
push
stc
mov
enter
push
inc
and
push
int3
cmp
sbb
pop
imul
mov
mov
and
adcb
pop
mov
jno,pn
xchg
dec
push
mov
les
repz
sub
fldl
out
inc
push
xlat
std
imul
adc
mov
outsb
fistps
cmp
pop
xchg
cwtl
and
sbb
faddp
or
aad
cmpsl
mov
dec
insb
outsl
add
mov
xchg
or
mov
nop
or
pushf
insb
aam
fldenv
loopne
and
push
and
jp
dec
mov
push
popa
mov
or
mov
xchg
pop
out
sub
xchg
xor
fsubl
in
or
xor
inc
adc
aad
outsl
dec
fadd
sbb
int
jnp
pop
sbb
les
dec
rcll
repnz
ljmp
and
outsl
inc
fistl
lods
mov
sarb
daa
or
xor
mov
add
sahf
decl
popf
repz
cmc
lds
inc
lcall
in
xchg
lcall
rclb
cli
fidivs
shrl
andl
cmp
faddl
sub
test
xor
push
pop
and
sub
pop
and
pop
xchg
dec
push
push
pop
mov
out
out
int3
cmp
ret
addb
xor
int3
xor
nop
pop
xor
in
pop
aas
addl
jae
gs
out
xchg
xchg
test
jae
in
cs
or
pop
xor
xchg
mov
sbb
lret
fs
jle
mov
dec
das
arpl
cwtl
leave
mov
lods
pop
xchg
stc
or
sub
mov
pop
pop
fwait
xlat
and
lds
enter
or
ja
loope
cmpsb
shrb
cmpsl
fidivs
dec
pop
fnstsw
pop
or
outsb
sub
sbb
les
dec
fwait
push
inc
mov
mov
lret
push
sub
lea
arpl
xor
jmp
jnp
hlt
sbb
pop
push
xor
jnp
sar
sub
aaa
lret
adc
daa
out
enter
xor
ret
je
cli
jg
mov
cmpsb
mov
add
notl
xchg
sbb
shrl
sbb
jno
mov
sar
push
xchg
scas
add
fidivs
cmpl
rorb
into
les
lods
cmp
inc
aas
and
stos
push
and
pop
jne
lahf
cmp
sbb
adc
push
in
mov
popf
imul
js
lret
xor
cmp
stos
push
mov
mov
dec
sbb
add
pop
in
inc
push
jmp
cmp
cli
imul
add
mov
hlt
mov
outsb
sbb
xchg
lcall
addl
test
and
push
adc
push
ret
in
idivb
adc
test
outsb
pop
xchg
jbe
add
stos
and
jo
push
dec
frstor
push
out
in
orl
cmpsb
jl
repz
mov
jae
das
lret
movb
lahf
mov
xor
and
cwtl
jecxz
cld
in
push
add
insb
adc
mov
loope
lret
lods
test
mov
lret
nop
jne
mov
dec
or
je
call
lea
dec
dec
push
in
or
jno
dec
jmp
pop
test
fildll
jp
inc
gs
imul
or
iret
mov
jne
lods
xchg
js
adc
fwait
repz
dec
mov
pop
iret
cmpsl
adc
mov
arpl
sub
in
inc
notb
mov
inc
pop
les
lds
jle
call
or
mov
aaa
sub
dec
cmp
outsl
pushf
lahf
ret
cmpsb
ja
andb
leave
sahf
icebp
inc
and
add
add
hlt
and
and
lcall
sbb
push
mov
scas
out
xchg
mov
hlt
addl
push
add
int3
mov
push
mov
mov
sbb
dec
push
add
scas
aaa
push
inc
movsb
xor
mov
jp
in
orb
sub
jno
out
enter
pop
int
mov
cmp
pop
roll
outsl
fwait
xchg
andb
cmp
inc
insb
inc
mov
cmpsl
xchg
dec
hlt
ret
adc
clc
jns
push
popf
addr16
arpl
pop
imul
sbb
push
inc
sub
or
ficompl
inc
jle
mov
sub
scas
xor
push
and
inc
outsl
call
mov
jb
cmpsb
icebp
mov
dec
jne
outsb
xchg
das
test
cmpsl
mov
sbb
lods
add
test
dec
lock
and
decb
jne
jl
dec
sar
sub
ljmp
mov
sbb
xorl
dec
xchg
mov
inc
es
call
xor
test
jns
mov
mov
mov
shrb
aas
mov
das
mov
mov
test
insb
dec
jns
flds
mov
in
xor
mov
loope
in
mov
cmc
pop
mov
push
fcoms
fcomps
jo
xor
pop
repnz
sub
decb
sti
xchg
add
jge
mov
stos
fcompl
out
or
xor
lcall
cmpb
data16
pop
dec
xor
add
bound
in
data16
outsl
pop
into
jbe
dec
stos
inc
push
add
xchg
ret
pop
les
out
mov
cmp
pop
stc
xorl
outsb
jns
out
jl
push
mov
cmp
xor
add
fisubrl
push
stc
cmc
jnp
daa
adc
rolb
fdiv
mov
inc
stos
and
aaa
adc
xchg
popf
adcb
inc
dec
cmp
fst
adc
sbb
mov
sarl
dec
popf
ds
lahf
in
ret
aas
and
popf
mov
mov
inc
jnp
or
cmp
clc
test
dec
push
inc
mov
mov
jp
testl
sbb
xor
inc
mov
add
add
arpl
call
mov
aam
and
lret
insl
or
icebp
xor
pop
lds
inc
dec
repz
jno
in
or
cwtl
outsl
cmc
icebp
je
repnz
int
ds
lahf
sub
jge
mov
jb
or
mov
push
jae
mov
adc
jecxz
add
jnp
sub
mov
bound
jne
jg
lods
pushf
movsl
dec
mov
mov
xlat
mov
fistpll
in
scas
mov
fidivs
iret
dec
jl
ja
or
ret
pop
lock
cmp
in
in
lods
mov
push
pop
or
mov
adc
mov
cmp
jp
in
jmp
fsts
xchg
adc
repz
and
xchg
dec
push
sub
lret
jnp
xor
inc
sbb
dec
mov
testl
in
pop
push
xor
mov
mov
pop
dec
js
push
cli
pop
xchg
fisttps
mov
sub
aad
sub
mov
test
jb
add
mov
jg
add
and
lds
pop
das
fisttps
insl
subb
loope
inc
fdivrp
cltd
mov
int3
and
aad
mov
je
pop
nop
jmp
or
mov
pop
shlb
lret
mov
out
scas
sahf
mov
pop
add
lds
dec
enter
cmpsl
jne
xchg
mov
adc
icebp
xor
fs
push
dec
pop
leave
je
mov
cltd
ss
jp
sub
and
cmc
cmp
push
data16
insl
ljmp
lods
test
int
jne
mov
cmp
add
or
bound
jns
xor
push
sar
loop
cs
mov
pop
add
ror
jbe
mov
jae
add
mov
mov
mov
pop
jno
cli
dec
cld
ror
lret
inc
or
cmp
lcall
sub
mov
enter
std
lahf
mov
and
pop
outsb
xchg
sbb
and
and
dec
mov
repnz
xchg
cmc
aam
sahf
in
aad
cli
lea
mov
xor
je
sbb
idiv
push
push
mov
cmp
dec
xor
and
mov
push
mov
sub
jnp
dec
xchg
xchg
jg
mov
lods
cld
nop
mov
sub
pop
fdivl
cmpsl
cmpsl
stos
add
cmp
push
scas
xor
stos
div
push
outsl
stos
add
ljmp
mov
jmp
dec
repz
rcll
icebp
pushf
cmp
andl
jae
sub
outsl
xorb
jle
outsl
mov
outsb
mov
loopne
add
movsl
inc
mov
or
xor
loopne
adc
mov
ljmp
push
pop
add
or
mov
mov
or
mov
mov
andb
hlt
add
sti
int
icebp
inc
cld
imul
jle
pop
cld
in
mov
enter
je
xchg
jnp
add
rcll
test
mov
cmp
js
int3
rcrb
xchg
sarb
mov
mov
inc
cmp
repnz
in
stc
jg
jo
sahf
sti
call
movsl
push
arpl
push
add
je
adc
movsb
jb
lcall
call
mov
pop
outsb
push
nop
or
cmp
jmp
out
imul
adcb
lock
and
mov
aaa
ljmp
rorl
or
cmp
rcrb
movsl
leave
icebp
pop
push
ja
xor
sub
jmp
cs
pop
and
movb
pushf
mov
in
pop
rorb
jnp
test
xchg
xchg
inc
cld
xchg
aad
rol
shll
int
call
incl
push
test
lds
mov
push
cmpsl
adc
sbb
cmpb
sbbb
dec
xchg
ret
inc
sbb
push
test
sbb
xchg
dec
xchg
sub
cld
lcall
cmp
fistl
js
insb
jne
xchg
sub
cmp
or
int
sbb
stos
add
ljmp
lods
cld
cld
or
push
push
pop
loopne
mov
cmovge
inc
fdiv
fs
stos
sub
xor
sarl
jae
notb
adc
int
addr16
add
aad
ret
push
mov
push
insb
cld
lea
outsb
repz
cmpsb
mov
sbb
stc
push
gs
mov
pop
mov
decb
stos
enter
sbb
fwait
xor
mov
outsl
jg
mov
rcl
inc
enter
xchg
cmp
rcr
jmp
popf
adc
push
and
std
dec
push
arpl
xchg
push
into
leave
test
fstpl
stc
ficoms
mov
cli
hlt
lods
stos
mov
cmp
in
icebp
cli
and
fmuls
fs
scas
stos
int3
mov
aaa
cmp
mov
stos
lods
dec
add
sarb
lret
sub
std
incb
ret
push
cwtl
dec
lahf
popf
das
sub
jb
xchg
jo
iret
mov
jp
jb
mov
add
stos
cmc
std
in
ds
and
or
stos
iret
dec
data16
les
inc
adc
lcall
inc
mov
int
inc
push
xchg
cltd
cmpsl
mov
jbe
out
cmpsb
jbe
test
xor
in
mov
adc
sub
loopne
mov
hlt
or
inc
cmpsl
mov
seto
adc
cld
push
pushf
pop
mov
scas
adc
lds
sbb
test
loope
and
je
mov
mulb
inc
inc
add
cmp
mov
push
sarb
sbb
pop
or
sbb
test
xchg
aas
sbb
ja
dec
push
rcll
outsl
shlb
cmp
mov
jns
lods
sti
repnz
in
push
or
jge
and
and
sbb
sub
xor
cmpsb
sub
mov
hlt
adc
and
aaa
mov
cltd
orl
loop
test
jno
out
adc
xchg
aaa
mov
cmp
lock
xor
rcll
aam
jge
dec
fdivs
adc
add
out
shll
mov
sbb
fs
fsub
insb
jb
outsb
add
out
inc
in
test
dec
push
jns
cmpl
mov
out
rcll
lods
mov
js
mov
jns
mov
lods
imul
jne
scas
jne
cmc
and
lret
pop
test
ja
jle
daa
pushw
cmc
pop
sub
cmp
and
es
add
pop
adc
flds
dec
and
adc
aaa
push
push
inc
rol
dec
jno
mov
lahf
and
pushf
pop
pop
inc
ja
cli
jbe
and
inc
mov
jnp
pop
lods
cmpsb
mov
xchg
outsl
rcll
sbb
mov
cld
mov
cwtl
scas
xor
mov
xchg
push
push
mov
and
mov
insb
jmp
pop
clc
push
popf
lock
lcall
push
mov
cmp
cltd
gs
jne
test
or
dec
sub
add
test
dec
insb
popf
pusha
jns
mov
iret
insb
sub
aad
fsubr
aaa
insb
lcall
dec
mov
fiaddl
jmp
lcall
push
push
cld
leave
scas
inc
add
daa
test
pusha
pop
dec
out
adc
mov
jne
loopne
outsl
jge
in
mov
fisttpll
iret
and
jno
inc
filds
push
out
sub
adc
test
or
and
fdivl
cwtl
fsubrl
sub
scas
hlt
ljmp
addr16
pop
mov
or
pop
loopne
jo
enter
xchg
mov
ret
pushf
inc
sarl
jb
sbb
mov
mov
int3
mov
fdivp
lods
mov
push
adc
sbb
arpl
xchg
add
stos
inc
adc
sub
add
andl
test
xor
or
jno
and
push
cmp
scas
mov
inc
fstpt
adc
nop
shrb
add
mov
sarl
sub
mov
jne
dec
test
pop
jg
mov
in
rcr
pop
xchg
push
xchg
shl
ss
cs
mov
or
mov
add
add
or
insb
je
loopew
je
mov
xchg
sti
or
add
roll
sti
ret
pop
add
cmp
lcall
mov
leave
adc
cmc
add
inc
shlb
out
push
cmpb
cld
roll
push
sti
inc
icebp
bound
jmp
cmp
mov
into
ret
jl
int3
sarl
aad
mov
mov
and
adc
js
jge
mov
stos
push
dec
xlat
jmp
fdivl
push
mov
cmpb
mov
shr
push
and
sti
cmc
mov
addr16
push
mov
sub
imul
xchg
xchg
sahf
aad
mov
movsl
rcl
xchg
lock
popf
push
sbb
negl
sbb
cmp
fsub
out
ja
fidivs
mov
cmp
shll
xor
mov
inc
adc
or
mov
fldl
inc
pxor
addb
popa
and
mov
jp
adc
hlt
cli
adc
dec
movsl
repz
hlt
mov
les
jbe
mov
cmpb
add
aas
push
dec
xchg
xchg
outsl
inc
imul
jne
inc
dec
cmc
mov
pop
adc
add
fwait
add
mov
push
push
pop
lret
mov
jae
mov
sub
in
xchg
sbbb
fxch
shrb
fiadds
jne
lods
and
scas
pop
add
sti
sub
out
add
jno
dec
inc
xor
dec
test
mov
pusha
movsl
sbb
dec
sub
mov
lea
aam
movsb
push
mov
pop
shl
add
addr16
mov
sub
add
scas
icebp
aam
push
adc
inc
add
lahf
mov
mov
mov
aas
xchg
lock
in
je
mov
fcmovb
cmpsl
fcomp
popa
lea
sub
cli
pop
adc
iret
inc
pop
or
dec
add
je
clc
hlt
push
pop
adc
inc
mov
sbb
jle
js
popa
lods
mov
mov
add
mov
adc
and
mov
imul
adc
ss
shlb
cmpsl
addl
repz
adc
mov
jae
xor
scas
inc
inc
mov
ret
and
fnstsw
xchg
shrl
fs
or
clc
cwtl
adc
lret
idivb
notl
fwait
mov
xchg
pop
shlb
int3
push
lds
loop
xlat
imul
arpl
jmp
pop
repnz
scas
pop
sbb
inc
mov
mov
popa
pcmpgtw
insl
jle
lret
in
sub
popf
or
dec
mov
cmp
add
scas
jp
mov
push
cwtl
push
fnsave
sub
adc
pop
rol
and
in
xchg
lret
and
test
imul
lahf
xchg
cmp
mov
test
jbe
and
movl
dec
mov
rorb
cli
inc
dec
jnp
add
jg
pop
mov
test
cmpsl
and
and
jnp
cmpsl
fwait
push
mov
repnz
sub
call
inc
push
mov
dec
or
cmpsb
pusha
jnp
jmp
cmp
xor
push
dec
ret
and
bound
jmp
inc
pusha
les
adc
dec
pop
push
dec
push
xchg
mov
sbb
xchg
pop
loope
jno
inc
xchg
fisttps
or
pushf
or
inc
pop
test
xchg
mov
cmpb
and
and
push
aam
adc
in
dec
jmp
sub
bound
mov
push
fists
push
ficoml
lock
loope
cmp
aaa
in
das
add
cmp
nop
mov
and
test
pop
addr16
sbb
sub
xchg
xor
cmpl
jno
xchg
add
xor
mov
sar
adc
repnz
cli
sub
das
inc
and
add
std
mov
in
aad
pop
popf
pusha
mov
hlt
and
loop
test
jno
and
xlat
and
pop
or
and
mov
fcmovnu
daa
dec
jge
iret
cmp
imul
pop
or
daa
orl
lods
mov
data16
or
xchg
mov
xchg
sub
jno
xor
insl
adc
add
pop
adc
inc
xor
push
negb
lret
and
int3
inc
loopne
fwait
cmp
lock
xchg
aas
adc
ret
xchg
bound
adc
inc
push
push
xorb
mov
xchg
lods
mov
xchg
push
adc
inc
push
jne
addb
aam
xor
sahf
lcall
add
dec
push
add
xor
fadds
icebp
arpl
add
ja
or
cmc
lods
add
pop
in
mov
jecxz
pop
dec
xchg
xor
jl
mov
cmp
jecxz
insl
mov
loop
sti
es
lea
test
mov
aas
lock
pop
sti
aas
insb
mov
scas
std
jnp
stos
push
mov
jnp
sub
cmp
mov
je
dec
lret
sbb
mov
xor
insl
xor
test
cwtl
xor
jns
nop
cltd
insb
xchg
xorl
loop
popf
dec
stc
pushf
cmp
mov
push
iret
cmp
out
dec
pusha
mov
and
shl
sbb
fisttpl
push
dec
icebp
push
adc
pop
and
es
mov
mov
xchg
cltd
repnz
mov
or
fmull
cmp
jge
loopne
push
xor
mov
scas
lea
iret
out
shll
jb
and
icebp
in
and
pop
sti
push
movsb
xlat
inc
jb
fistpll
mov
pop
sub
xor
sbb
fldt
pop
aaa
repnz
and
out
push
out
scas
inc
sarb
adc
xor
loopne
imul
jnp
dec
mov
sub
xchg
sbb
or
and
in
jmp
and
push
push
test
cli
sub
into
sti
les
sub
jae
ret
fwait
or
sub
pop
dec
js
mov
arpl
jo
enter
jb
outsl
mov
cli
push
mov
adc
xchg
roll
fimuls
lret
sbb
imul
and
cli
outsl
xchg
xor
cs
bound
cmp
daa
mov
pop
sub
pop
out
cmp
out
adc
push
mov
add
andl
or
adc
cltd
push
out
cld
lcall
imul
push
ja
inc
insl
adc
pop
pusha
movsb
push
push
nop
fldenv
jbe
xchg
xor
dec
pushf
faddp
xor
pop
iret
mov
pushf
fists
insb
push
sub
xlat
jp
jmp
add
lock
out
rorb
into
dec
in
cmc
jl
sub
fsubr
push
and
mov
or
xchg
stc
mov
push
sub
sbb
std
repz
inc
fucomip
inc
sbb
clc
sub
adc
ret
cmpsb
sar
inc
popa
sbb
movb
jp
fstps
lea
mov
add
xchg
sub
lock
aas
sbb
cmp
mov
pop
stos
sub
fcomps
incb
adc
xor
or
pop
stos
and
adc
les
in
sbb
pusha
push
inc
je
jle
lods
cld
xor
mov
fsubrp
or
popa
mov
push
test
adc
xchg
and
int3
or
sub
jg
push
shrb
ljmp
sbb
xchg
das
int3
lods
pusha
imul
sub
jae
jnp
leave
pusha
out
cmpsl
idivl
push
leave
xchg
cmp
cmp
movsl
call
into
fdivrl
dec
cmpsl
mov
or
testl
jge
scas
xchg
or
mov
dec
sarb
cs
cmpsl
add
cmp
mov
dec
out
mov
fwait
aas
jne
add
xor
dec
lods
pop
jnp
addb
lock
sub
fwait
dec
adcb
rcrl
push
push
into
into
dec
loop
add
ror
faddp
negb
divl
jge
dec
addb
jo
mov
xchg
aad
rcl
dec
xchg
lret
jns
repz
lea
lea
cmc
or
mov
mov
ja
inc
in
and
dec
outsl
jecxz
sub
jnp
inc
push
shl
xchg
xchg
dec
jbe
mov
mov
das
push
dec
ficompl
dec
sahf
push
int3
adc
sbbl
sub
adc
pop
inc
jle
cmpsl
xchg
mov
pop
cmpsl
shr
jne
xor
sarl
ds
mov
push
test
and
mov
sbb
jo
aad
mov
stos
cli
mov
test
xchg
xchg
cmp
mulb
sti
mov
divl
scas
xchg
cld
mov
cmp
jbe
mov
inc
adc
mov
call
divb
mov
jbe
inc
push
or
dec
mov
pop
mov
xchg
push
sbb
fwait
lret
mov
das
inc
inc
jo
bound
mov
loop
mov
mov
rcrb
fimull
and
sub
pop
sbb
pop
jg
cwtl
xchg
js
es
sbb
stc
cs
arpl
out
stc
sbb
mov
jo
cmp
push
xchg
and
mov
lret
jb
adc
and
pusha
call
mov
mov
loopne
cmc
xchg
and
fwait
push
arpl
pop
addr16
or
mov
adc
or
or
mov
loope
lds
icebp
popf
pop
adc
xor
xchg
mov
scas
mov
mov
add
dec
rorb
int3
andb
fnstcw
jb
lds
add
aaa
push
loope
push
jl
mov
inc
jo
fidivrs
mov
cmpl
gs
call
xchg
fst
mov
push
insl
out
push
mov
shlb
push
cmpsb
jns
inc
push
mov
push
lret
mov
and
mov
jbe
dec
loop
arpl
cwtl
out
addr16
lea
fstl
mov
repnz
shl
cmpsl
loope
in
dec
push
pop
aad
jp
push
push
push
into
addr16
fdivrs
xchg
mov
inc
sub
cltd
mov
movb
lock
insb
xor
xlat
andl
and
push
inc
ret
lsl
stos
jmp
les
imul
add
fists
sub
inc
fwait
xor
push
int
cmp
insl
mov
push
mov
pushfw
push
cmp
xchg
xchg
mov
mov
sbb
push
mov
dec
stos
loop
jp
pusha
pop
je
mov
xchg
adc
sbb
add
xchg
js
add
or
adc
adc
and
sbb
sti
pop
mov
xchg
add
jge
jnp
jp
ja
sub
push
or
loop
aaa
mov
call
vcomisd
xchg
and
pop
test
repnz
pop
adc
push
and
add
ret
push
mov
scas
lret
lahf
dec
inc
xchg
fadd
jns
mov
lcall
out
mov
loope
fcmovu
cmp
xor
bound
adc
push
stc
dec
pop
loopne
push
mov
inc
and
js
test
mov
sbb
faddp
adc
addr16
dec
orb
adc
sub
cmp
stc
int3
jno
xchg
fnsave
shl
or
sub
imul
and
sbb
mov
test
push
sbb
sub
mov
and
pusha
dec
nop
rorl
dec
shr
pop
and
ljmp
sub
mov
cwtl
dec
setp
push
sub
mov
aas
xchg
push
fstpt
scas
add
jae
push
jne
aam
adc
scas
push
sbb
push
imul
jmp
ret
enter
js
inc
jmp
xor
xchg
jb
xor
mov
mov
popa
xorl
jge
inc
dec
dec
push
cs
and
mov
fs
pop
jno
push
stos
jne
in
mov
setns
lods
jne
arpl
add
lods
scas
sbb
imul
out
add
test
push
lcall
or
xchg
dec
pop
pop
imul
jno
std
add
es
and
xchg
mov
pop
adc
cmp
jae
jns
stc
or
daa
in
fnstsw
push
dec
xor
sub
out
jnp
or
out
fs
ja
repnz
ret
idivb
pop
fnstsw
fsubl
pop
dec
imul
lods
cmp
stc
in
ret
outsl
pop
clc
adc
xor
cmp
mov
mov
fisubs
outsl
jno
imulb
imul
gs
ret
in
dec
dec
lahf
out
addr16
mov
or
adc
out
add
inc
fsub
xchg
int
divb
jg
pushf
testl
add
repz
cld
mov
and
leave
int3
je
jge
lret
adc
add
jecxz
dec
ljmp
push
lret
or
andb
test
or
imul
xchg
ss
xor
movsb
std
cmp
dec
push
xorb
jecxz
cmp
in
add
pop
adc
jmp
in
mov
mov
dec
pop
lods
hlt
arpl
jp
adc
aaa
jno
stc
cmp
pop
pushf
lock
mov
xchg
ret
push
jg
cmpsb
aam
inc
enter
pop
mov
dec
loopne
adc
mov
aam
mov
jp
mov
je
jg
loope
cli
and
push
adc
lcall
loope
mov
pop
addr16
ss
xor
add
sub
mov
testl
jecxz
push
pusha
add
outsl
push
fmull
xlat
bound
clc
notl
dec
adc
lahf
pop
fisubrs
hlt
adc
fnstenv
rcll
fwait
push
arpl
lret
xor
sbb
mov
aaa
sbb
lret
xor
loopne,pn
scas
lods
mov
xchg
stos
outsl
insl
mov
jl
adc
mov
aam
icebp
push
repnz
push
data16
cmpsl
pop
popa
int3
outsb
addr16
push
inc
test
test
and
outsl
fstpt
dec
add
mov
fidivrs
adcb
leave
pop
sti
dec
inc
xor
dec
cmp
std
loopne
std
xor
fs
mov
cwtl
xchg
lods
or
insb
sbb
orb
addl
push
xor
daa
or
es
inc
fucomi
inc
movsl
aad
in
pusha
orl
fdivrs
sahf
mov
xchg
cmp
shll
push
call
jmp
imul
fcmovnu
pop
fwait
xor
fdivs
mov
cbtw
mov
in
repz
imul
shlb
bnd
pushf
xlat
popf
repnz
sbb
sbb
pop
mov
mov
push
mov
gs
adc
mov
imul
popa
nop
fs
arpl
adc
jnp
stos
push
aam
repz
lret
sbb
and
cmc
inc
push
pop
out
jecxz
jecxz
jb
imul
lahf
mov
sub
or
popf
lock
mov
or
mov
xor
enter
jbe
xor
push
mov
mov
fldcw
mov
xchg
ret
movsb
clc
lcall
dec
sarb
addl
icebp
inc
push
push
sub
fsubs
ss
sets
lods
dec
pop
decb
mov
shufps
jno
sbb
pop
xchg
inc
cltd
je
insb
inc
icebp
adc
scas
pop
push
dec
dec
mov
hlt
loop
push
cmp
dec
test
dec
mov
sub
push
adc
inc
xor
orb
mov
fistpll
cltd
pop
test
aas
or
mov
cmp
jnp
mov
rorb
jp
in
gs
or
push
dec
xchg
dec
mov
pop
movsl
add
sbb
popa
sbb
xor
insl
mov
sahf
fbld
cmpsl
xor
iret
mov
add
icebp
push
mov
pop
mov
sub
wrmsr
dec
xchg
cwtl
pop
shrl
shll
pop
inc
pop
cs
in
xor
in
cltd
fmull
sbbl
dec
lods
add
jmp
cmp
lods
loopne
dec
inc
aaa
pop
and
jbe
inc
lods
insl
xorb
xchg
ret
cmp
pop
pop
test
jnp
jl
mov
xor
pop
push
adc
cmp
sbb
inc
add
aad
stos
arpl
flds
add
mov
mov
mov
push
jmp
add
test
push
icebp
xchg
add
std
sbb
test
mov
mov
push
movsl
pop
or
in
mov
xchg
jmp
mov
or
lret
repz
mov
lods
push
xchg
mov
test
jae
mov
push
stc
or
xor
push
in
stos
xchg
jbe
icebp
xor
and
subb
sbb
inc
pop
inc
cwtl
addr16
lods
movsl
sub
orl
xchg
add
inc
cli
fs
arpl
mov
cmp
push
dec
movsb
lcall
fldcw
rcrl
lods
mov
pusha
and
nop
es
xchg
sub
arpl
ret
xchg
das
mov
cmpsb
ret
dec
sarb
pop
loope
and
cmp
loopne
fsubl
jmp
fdivrs
in
mov
push
xchg
cmp
or
cmp
cmp
pusha
scas
js
faddl
mov
add
mov
rorb
cli
adc
inc
test
push
pop
mov
adc
les
push
mov
gs
fwait
stos
adc
imul
ret
or
pop
gs
mov
mov
mov
add
jb
push
mull
sub
add
outsb
adc
xlat
fldt
mov
sub
shll
and
and
inc
cs
cmp
add
mov
push
sahf
pop
call
or
pop
pop
nop
rcrb
js
push
outsl
subb
leave
std
push
or
adc
push
mov
notb
add
repnz
xorl
sub
xchg
mov
pop
insl
mov
mov
adc
in
js
mov
xchg
sub
xchg
adcb
popa
dec
cmp
adc
jge
xchg
jecxz
arpl
loope
dec
sti
mov
out
test
imul
jg
or
pop
inc
aas
repnz
movsb
push
xchg
ret
add
or
loopne
subb
pop
sbb
cs
outsl
mov
push
push
adc
in
mov
adc
dec
fwait
inc
out
int3
fildll
add
sahf
into
dec
movsl
cmp
iret
aaa
sti
fists
sbb
sbb
test
mov
test
fsubl
lcall
roll
jl
and
jo
inc
push
jg
push
fwait
or
sub
shll
cmp
mov
mov
mov
test
mov
jne
loope
mov
sub
adc
jbe
cld
dec
push
xor
rcl
sub
into
roll
movsl
mov
cmp
or
lock
clc
cmp
sbb
xchg
xor
cmp
pop
push
cld
sub
xor
push
cli
or
in
imul
fsubrs
sbb
movsb
gs
sub
and
ret
and
mov
mov
scas
jge
int3
jp
cltd
jmp
fcomps
cs
out
xor
adc
rcll
add
xor
ds
and
mov
repnz
or
filds
das
shll
push
push
mov
das
dec
mov
pop
xchg
mov
dec
aas
pushf
mull
push
inc
jbe
inc
pop
repnz
mov
adc
sub
jmp
sub
cmp
mov
xor
out
cmp
fwait
aas
scas
sbb
sahf
sub
test
mov
mov
cld
test
cmovns
out
sub
add
imul
push
cmp
pop
dec
and
sub
or
movsb
jae
roll
cmp
add
call
lahf
outsl
in
inc
sub
fldcw
sarl
rorb
jle
es
mulb
into
movsb
out
lock
xchg
sub
cwtl
sbb
mov
jae
fwait
mov
push
pop
cld
test
int
mov
or
nop
xchg
imul
or
dec
xor
pop
fdivl
hlt
cmc
jo
inc
sub
inc
jne
push
cwtl
adc
imul
jae
xor
cs
mov
adc
out
mov
mov
xor
enter
push
pusha
test
sub
ljmp
pop
add
addr16
popf
xchg
ja
dec
mov
and
addl
scas
shlb
aaa
sub
add
and
cmp
shl
and
fstpt
xor
aad
fistps
cmc
repz
inc
stos
and
and
fdivrp
add
pop
in
adc
std
sub
or
mov
mov
sbb
jb
js
fisttpll
xor
aas
cs
cwtl
jnp
lods
outsb
inc
outsl
add
adc
mov
add
movsl
adc
add
aam
push
sub
sbb
sbb
mov
mov
dec
or
sub
push
mov
cli
fldt
jnp
or
pop
stos
repz
jne
push
inc
or
dec
jo
pop
std
mov
sub
aad
or
fldcw
dec
lods
test
outsl
lahf
stos
daa
mov
and
dec
dec
or
mov
cmp
mov
lea
pushf
sti
sbb
xor
das
aas
scas
int
in
and
jmp
lret
mov
and
mov
mov
gs
pop
into
xor
test
mov
adc
enter
dec
jae
sub
xchg
aas
jns
pop
xchg
pop
dec
xchg
bound
loope
js
add
mov
hlt
shlb
int
ja
push
mov
cltd
outsl
and
push
add
mov
pop
icebp
push
nop
cwtl
inc
sbb
movsb
incb
dec
mov
test
add
frstor
xchg
repz
xchg
mov
out
pop
mov
jp
cwtl
mov
mov
into
insl
cmp
icebp
sub
aad
xor
nop
repz
lock
cltd
out
adc
lods
jno
mov
incb
mov
fcomps
push
es
std
iret
pop
cmp
xor
xor
mov
test
insb
test
mov
movsb
test
push
jl
inc
push
cmp
cmpsb
mov
mov
lods
loopne
push
hlt
pop
aam
fwait
ljmp
sbb
lret
out
add
sti
loopne
mov
popa
in
int
and
insb
test
mov
ss
mov
mov
popf
mov
out
arpl
int
sub
or
push
popf
dec
iret
dec
mov
out
ss
jbe
dec
dec
ja
add
pop
jmp
xor
push
fistpll
test
leave
imul
out
mov
fwait
subl
and
ds
repz
out
pop
mov
mov
leave
sub
movsl
movsl
mov
sti
movsl
jbe
xor
inc
mov
push
mov
ljmp
shll
mov
lcall
inc
jne
pop
xchg
push
lods
dec
or
clc
jnp
pop
ret
imul
cmpsl
xchg
mov
push
push
pop
cmpsb
pop
aad
mov
sbb
test
dec
mov
sub
scas
daa
and
movsb
inc
in
aaa
inc
ret
cld
enter
out
dec
push
jb
push
push
or
repz
leave
lods
cmpsb
sti
fadd
xor
add
adc
push
pop
mov
xchg
je
dec
or
xchg
idiv
mov
mov
jecxz
adc
lds
shlb
or
int
sub
or
out
arpl
fs
dec
jno
fimull
xor
cwtl
or
mov
rclb
cld
lret
pop
gs
push
cmp
xor
jl
mov
out
pushf
jo
dec
cmp
mov
fcmovbe
scas
leave
add
sbb
jnp
cmp
int3
xchg
mov
sar
std
cmp
sub
inc
ror
inc
add
cltd
pop
cmp
in
cmpsb
mov
es
fisubrl
pop
shrb
sub
arpl
enter
jo
fs
mov
dec
xchg
loope
and
push
jecxz
mov
dec
arpl
mov
xchg
insb
dec
in
notb
in
in
dec
das
lahf
mov
jle
jo
ret
mov
or
pop
imul
xor
dec
push
jge
mov
inc
iret
arpl
mov
push
xor
addr16
xchg
push
cmc
jae
xor
fnstsw
into
dec
pop
daa
dec
add
sub
pop
jge
push
aaa
jg
mov
xor
pop
fldt
mov
inc
sub
jno
mov
cmc
nop
sub
js
nopl
inc
push
mov
or
sub
ret
mov
sub
push
enter
sub
ret
pusha
in
sub
lods
lea
mov
xchg
cld
mov
fdivrs
xchg
js
mov
push
xchg
lret
push
es
and
lcall
cld
pop
je
popl
xchg
clc
out
mov
inc
adc
out
inc
jge
js
pop
sahf
inc
decb
cmc
xchg
roll
nop
mov
adcb
xchg
iret
xor
loop
and
xchg
xor
ja
scas
ret
cmpsb
xchg
insb
js
adc
daa
pop
mov
imul
out
shrd
push
movsl
outsl
int
or
adc
ss
push
mov
mov
in
call
mov
push
out
rcl
sbb
pop
popa
sbb
lods
in
adc
jns
cmp
cmp
scas
test
jecxz
jns
loopne
sub
dec
dec
xor
dec
adc
xor
pop
div
jl
mov
push
xchg
mov
das
lds
fcmovb
jp
jp
mov
stos
scas
xchg
stc
cmp
jecxz
cmp
pop
jp
jb
mov
lods
pop
pop
sub
add
outsl
dec
cmp
outsb
pop
pop
mov
int
mov
in
push
cmp
shlb
pop
jg
leave
mov
sahf
enter
fwait
hlt
xor
sbb
xchg
in
jns
rcll
ljmp
cs
push
lods
ds
sbb
notb
das
xor
dec
jge
jg
push
cmp
jp
cli
js
xor
repnz
sbb
movsl
outsb
jne
add
dec
jae
notb
xchg
jnp
jns
fidivl
ds
add
mov
sti
mov
rcll
mov
xchg
out
inc
cmp
inc
outsl
jecxz
outsb
pop
pop
xchg
int
test
movsl
mov
int
lret
mov
mov
ss
out
les
rcrb
loop
popf
sbb
pop
popa
xchg
daa
mov
sub
gs
xchg
out
out
cld
mov
dec
insl
aam
into
xor
push
cmpsb
dec
test
add
sbb
mov
ds
xchg
push
sub
rcr
shll
jp
or
pop
dec
sub
xchg
sub
mov
inc
sub
lods
mov
cmp
jno
leave
in
push
cmp
pop
and
negl
add
sub
fidivrs
out
sub
dec
ret
jns
and
sub
ss
pop
cmp
or
cmpsl
inc
fimull
fcomps
rcrl
mov
out
inc
pop
mov
scas
es
xchg
push
jb
xor
cmc
pop
cmp
into
mov
scas
mov
xor
les
pop
aaa
jb
dec
insb
fs
mov
dec
sbb
pop
retw
xchg
xor
mov
and
insb
and
arpl
imul
es
mov
xor
repnz
das
inc
pop
aam
mov
mov
mov
xor
inc
lcall
fidivrs
shr
fdivs
xor
repz
out
fs
fidivl
add
xor
mov
pop
call
lods
jp
dec
test
jp
cltd
cmp
test
lret
lds
adc
aam
sub
inc
call
xchg
mov
dec
push
mov
cmpsl
cs
cmp
sbb
iret
push
add
in
icebp
pushf
mov
leave
jge
jg
js
bound
mov
fistps
data16
and
dec
stos
cmp
aas
adc
aas
fs
push
pop
movsb
ret
loop
outsl
xor
out
pop
dec
dec
test
push
aas
mov
not
sahf
test
mov
mov
aaa
outsl
sbb
or
in
mov
push
pop
mov
icebp
repnz
ret
iret
mov
out
jno
aas
xchg
push
popa
sbb
adc
call
pop
jbe
sbb
rol
or
into
sub
ja
sbb
xchg
and
popa
test
jnp
in
xor
inc
or
daa
mov
xlat
outsb
insb
add
and
and
pop
mov
sti
adc
inc
stc
out
repnz
sahf
or
fwait
fs
int3
cwtl
jge
pop
fisubrs
adc
mov
jge
dec
add
mov
and
pop
popl
scas
sub
lods
enter
aas
dec
add
sub
das
jae
inc
aaa
inc
jnp
add
lock
into
push
xor
shl
cmp
push
repnz
nop
mov
stc
dec
imul
lock
popl
test
xchg
mov
pop
xorl
in
imul
or
add
das
or
mov
mov
outsb
mov
add
addr16
push
dec
inc
clc
not
adc
fs
sub
jle
lcall
xchg
add
fpatan
mov
shll
scas
xor
push
loopne
pop
sub
xor
xchg
sbb
jl
repnz
aas
jle
imul
lret
faddl
jmp
jb
bound
in
mov
mov
adcl
xor
inc
cmp
mov
push
call
xchg
lcall
orb
inc
push
pushl
sub
pop
ficoml
or
push
nop
inc
aas
int
rol
xor
cmp
mov
mov
loop
and
mov
rsm
ds
sarl
add
or
test
ja
and
aam
sarb
sub
dec
outsl
and
or
cmpb
pop
loopne
shlb
push
setb
aas
xlat
cld
movsb
divb
inc
lcall
dec
push
rorb
out
test
inc
shlb
fidivrl
mov
pop
and
icebp
push
adcl
or
das
mov
mov
imul
test
fisubrs
test
in
popa
lods
or
mov
or
popa
jmp
cltd
vorps
xchg
jb
pop
cmpsb
jo
lock
rolb
mov
mov
int3
xchg
pop
xor
mov
iret
aas
out
add
add
sbb
and
movsl
xor
arpl
leave
xchg
loopne
xor
jne
cmp
pop
and
cs
lret
data16
push
addl
add
xchg
and
mov
jo
push
or
xlat
jl
mov
push
ds
bound
xorl
add
repnz
lcall
test
jmp
mov
fidivl
inc
push
adc
out
in
insl
pop
sbb
or
lods
pop
aam
repnz
jp
jbe
clc
cmp
lds
sub
in
fimuls
iret
mov
mov
adc
xchg
adc
cmp
pop
and
push
mov
shr
push
push
xorl
outsb
imulb
jp
bound
adcl
fdivr
mov
pusha
ja
xchg
jecxz
adc
sti
push
das
iret
push
testl
lret
pop
mov
div
orb
mov
add
add
adc
cmp
mov
in
push
or
push
lods
das
out
and
mov
push
test
cld
and
sub
cmp
popf
mov
push
cwtl
push
out
dec
movsl
or
jns
fists
xchg
or
pop
mov
popa
push
or
jecxz,pn
mov
cwtl
test
jne
pop
jbe
lcall
add
cmpl
pop
push
stc
xor
jb
and
sbb
imul
xor
dec
aaa
push
jo
ret
sbb
insb
inc
out
mov
ret
mov
mov
stc
out
mov
mov
jnp
mov
les
scas
mov
pop
popa
inc
add
shll
mov
pop
adc
movsl
fs
lahf
in
sbb
js
arpl
aas
dec
loopne
stos
fcoms
xor
mov
and
in
gs
jno
ds
fwait
in
lahf
jbe
xor
inc
in
sbb
xor
loopne
pushf
xchg
sub
dec
movsl
mov
and
xchg
mov
jge
addb
push
push
mov
test
push
jmp
mov
lcall
pop
xor
outsb
xchg
add
dec
loop
cmpsl
pushf
dec
inc
into
pusha
xlat
mov
mov
lock
outsb
xchg
cltd
or
andl
rcll
icebp
mov
jg
pop
int3
fists
cld
push
xor
xor
lcall
cli
shlb
mov
jbe
popa
sbb
hlt
fmull
test
movsb
je
and
rcll
and
sub
ficoml
and
jns
pushf
dec
in
jbe
fbstp
int
shlb
xchg
mov
jns
iret
shll
dec
cmp
lahf
push
push
pop
scas
shlb
lcall
jge
jmp
jnp
es
pusha
cmpsb
lcall
adc
or
inc
pop
mov
out
loopne
scas
cmp
repz
xor
mov
fs
cmpsl
push
mov
cmp
loopne
mov
insl
push
xor
jo
scas
movsb
fcompl
xor
sbb
ds
pusha
pop
out
ss
lock
inc
imul
into
aas
inc
cltd
stos
xlat
imul
aad
adc
rcll
dec
sbb
push
mov
movsb
sub
push
imul
mov
inc
add
adc
inc
add
test
imul
push
cmpsl
push
sbbb
scas
int3
subb
mov
mov
imul
inc
je
add
push
inc
cmp
mov
imul
sbb
test
lods
mov
movsl
sub
popf
clc
loope
mov
in
gs
loop
jne
push
jl
rolb
inc
lahf
dec
cmp
ja
inc
sub
loop
dec
inc
adc
pop
sub
movb
cli
xchg
pop
push
fwait
cmp
xchg
sbb
mov
mov
or
jmp
xchg
scas
and
mov
pop
ss
lock
mov
and
andb
fs
aas
cmc
fisubl
test
pop
test
data16
sbb
mov
xor
adc
loope
pop
jno
fldl
int3
and
lret
mov
pop
and
xor
icebp
mov
mov
int
inc
jne
jns
pop
leave
inc
sbb
roll
xchg
pop
imul
push
andl
je
out
clc
loopne
push
xor
mov
and
sbbb
cmp
daa
inc
out
clc
gs
xchg
lret
and
cmpsb
jle
arpl
sub
add
mov
add
cmpsb
push
int3
or
mov
push
ss
jge
inc
lea
push
sub
adcb
aam
push
xor
push
xchg
push
loopne
repz
out
test
das
lds
jno
stos
dec
or
pop
add
std
in
loop
cwtl
roll
xchg
xor
adc
pop
and
or
inc
lcall
call
inc
pop
jae
cmp
jp
ficompl
xchg
pusha
mov
test
add
insl
xchg
jg
push
cmp
mov
xchg
iret
push
sub
call
popa
or
cmpsb
stos
aaa
enter
sbb
sar
in
call
lcall
cmpsl
add
mov
pop
icebp
xor
aas
and
sub
and
mov
into
test
out
scas
in
mov
test
shlb
lds
ss
test
pop
sbb
jl
fsubs
imul
jg
xor
push
subb
inc
push
dec
fcomp
sarl
imul
push
mov
addb
movsb
addb
into
push
cwtl
ret
daa
cli
mov
push
sub
sarl
repnz
aaa
inc
std
loop
lods
add
xchg
mov
imul
dec
dec
jbe
xor
sub
mov
dec
sub
mov
xor
mov
cwtl
push
dec
test
mov
mov
hlt
les
aas
xchg
call
add
aas
notl
shll
inc
add
mov
and
loop
hlt
mov
sub
xchg
or
ljmp
lret
js
fucomp
mov
sub
xchg
or
das
mov
shrb
sub
outsl
pop
stos
ret
push
mov
mov
orb
dec
lret
dec
rolb
lret
xor
pop
mov
out
xchg
sbb
xor
out
xor
xchg
jle
ja
mov
mov
jg
jmp
fldenv
pop
and
dec
push
pop
jecxz
aaa
sbb
fdivrs
loop
cmp
push
or
sbb
push
daa
xchg
andl
xchg
int
jge
inc
out
shll
movsl
mov
push
push
js
sub
in
push
inc
jmp
ret
dec
adc
xor
arpl
push
xchg
mov
mov
mov
jp
xorl
push
nop
inc
or
xlat
adc
std
leave
gs
mov
jge
dec
xchg
dec
or
mov
sub
enter
mov
mov
cs
shlb
iret
push
sbb
and
cmp
cmp
xchg
pop
jmp
or
mov
dec
fdivrl
imull
insb
jmp
les
jecxz
ss
push
cmp
aaa
fs
cmc
or
cmpsb
push
test
pop
push
hlt
push
jb
fadds
sub
fs
xchg
std
jae
cmp
xchg
cs
adc
jnp
inc
push
sub
lea
jbe
adc
aad
inc
aad
roll
fstpl
lcall
sub
dec
mov
out
xchg
ds
lret
or
roll
and
xor
addr16
xor
mov
push
pop
pusha
cmp
lods
sub
mov
outsl
pop
aas
jg
xchg
jae
jecxz
test
in
fistpll
fsts
xor
clc
mov
sub
and
or
and
scas
jmp
aam
sbb
and
sub
dec
mov
iret
xchg
inc
lea
push
pop
ja
pop
cwtl
dec
xor
shll
mov
pop
push
adc
in
pop
shll
dec
mov
jl
out
xchg
and
fnstcw
mul
orl
dec
jmp
push
out
dec
lods
loop
sbb
xchg
insl
mov
lret
inc
test
jno
dec
pop
dec
xor
les
sub
pop
mov
insl
jg
adc
sub
mov
and
daa
lds
dec
repz
push
dec
lds
int3
addr16
jne
outsl
in
cli
mov
add
scas
jmp
out
or
in
push
sahf
bound
out
addr16
inc
mov
je
xor
mov
orl
mov
je
and
fwait
test
ds
fwait
push
nop
lret
loop
sbb
repnz
mov
sti
add
adc
jo
mov
and
mov
sti
es
xor
outsb
out
push
lret
popa
pop
push
das
mov
cltd
call
jo
out
push
orb
lcall
mov
hlt
jecxz
insl
or
iret
xchg
icebp
add
adc
and
scas
xchg
inc
stos
ret
int
dec
sbb
or
sub
loop
loop
lock
addl
pop
shl
add
pop
add
push
inc
inc
xlat
mov
movsb
nop
iret
xor
jmp
cwtl
adc
or
jno
ja
lret
das
and
and
mov
mov
cmp
cmpsb
rorl
shlb
mov
ss
insb
dec
sub
lock
loope
mov
call
adc
xor
imulb
xchg
shlb
pop
jae
or
mov
incl
xorb
mov
add
mov
fildll
hlt
hlt
aaa
sbb
mov
fs
fs
mov
je
int
adc
push
cltd
clc
loop
insb
aam
adc
sub
shrl
rol
sti
pop
mov
pop
sbb
leave
jecxz
push
jmp
imul
test
dec
sarl
add
mov
inc
cmp
repz
setno
xchg
adc
xchg
jl
lods
mov
in
mov
sahf
mov
ret
aas
fstp
xchg
dec
sub
sub
imul
lea
push
pop
cmpsb
dec
stc
int
les
pop
and
push
cmp
lods
fsubrs
mov
insl
bound
xchg
sub
divb
loope
mov
loope
popa
dec
addr16
lret
sub
insb
adc
push
and
xorl
push
xor
aam
insl
ret
mov
pushf
clc
fs
testl
sub
pop
ret
xchg
jne
test
mov
pusha
adc
aad
xlat
and
mov
jecxz
out
mov
hlt
inc
daa
add
out
lock
push
out
fcompl
jns
or
inc
jmp
int
cld
xchg
mov
mov
mov
aas
push
mov
jmp
xchg
sbb
jge
pop
dec
and
ret
sub
add
mov
jae
aas
lods
sahf
adc
lcall
pop
mov
clc
adc
inc
or
decb
loope
mov
mov
dec
test
push
jb
pop
pop
into
ja
sub
inc
sub
loopne
dec
mov
icebp
lods
or
and
fs
cmc
bound
pusha
out
outsb
jae
mov
push
sarb
enter
addl
scas
cmp
into
test
xor
mov
pop
nop
push
mov
jp
inc
ret
popf
lods
xor
dec
out
push
ret
push
test
aam
test
sbb
xor
shll
pop
adc
arpl
lods
xchg
xor
push
xchg
xor
xchg
mov
push
ss
loopne
push
xor
push
ret
out
mov
sub
daa
or
outsl
sub
ss
xor
xchg
rcll
push
xchg
sub
mov
lock
repnz
sub
scas
shll
movsb
add
and
rcl
sub
add
std
push
movsb
adc
cmp
mov
lods
pop
sahf
mov
lock
jmp
add
inc
call
sub
outsb
lcall
es
jp
stc
shlb
xchg
adc
out
les
or
repnz
imul
mov
xchg
sub
loop
cld
cltd
push
aam
sbb
outsb
add
sti
int
mov
hlt
stc
out
mov
xchg
mov
out
and
dec
xchg
mov
das
dec
xchg
push
hlt
outsb
mov
and
xchg
pusha
jns
mov
je
mov
pop
add
sbb
cmp
adc
push
pusha
bound
sub
lds
sbb
xor
and
xor
jbe
sub
jle
push
mov
adc
jp
lret
sbb
sti
out
pop
imul
int
test
lcall
orl
adc
test
push
inc
fisubs
cmp
arpl
test
mov
imul
push
adc
jl
mov
dec
mov
and
roll
ss
or
and
fstpt
pop
pop
addr16
stos
pop
cmp
std
repnz
lds
mov
adc
pop
xor
and
add
mov
das
lahf
enter
sub
popa
call
aad
out
mov
cmp
aaa
inc
xchg
jp
test
hlt
out
add
inc
or
xor
mov
sahf
icebp
push
xchg
idivb
dec
shl
pop
out
fwait
sub
leave
imul
in
dec
aaa
roll
repz
pop
insb
add
jge
les
pop
dec
fdivrp
lods
fisttpl
jg
push
cmp
jbe
or
cli
repnz
scas
out
ja
cmp
fucom
aas
fwait
mov
xchg
fadd
xor
sbb
lret
aad
jno
out
into
push
xor
cmp
scas
loop
jg
mov
repz
lret
hlt
sub
enter
mov
cmp
inc
push
push
jno
fistps
pop
add
mov
popa
push
aad
sbb
imul
mov
xor
sub
mov
sbb
andb
xlat
lock
mov
negl
test
adc
lcall
gs
sti
dec
xchg
jmp
xor
mov
push
sbb
dec
mov
out
mov
add
clc
or
decb
cmp
enter
pop
jl
sub
mov
lds
iret
jge
pop
leave
sub
pop
dec
pop
out
aas
aas
jne
mov
cld
inc
jne
push
sbb
js
mov
mov
movsl
ret
jns
and
inc
leave
outsl
rcrl
sbb
movsl
insb
test
pop
jae
adc
push
fistps
roll
pop
inc
sbb
in
cli
in
pop
xchg
xchg
sub
xchg
int3
xchg
sbb
mov
ss
and
pusha
cmp
xchg
push
repnz
mov
or
mov
or
incb
mov
scas
sarb
mov
enter
push
xchg
fisttps
adc
ljmp
fisttps
sub
jae
js
ds
adc
push
pop
xor
jbe
bound
inc
aam
mov
mov
jo
lret
sub
dec
and
loop
xchg
test
mov
imul
cmp
fiaddl
jecxz
push
test
mov
movsl
jbe
mov
adc
pusha
fadd
cli
push
mov
fisubl
leave
push
push
push
call
mov
mov
aad
in
push
out
jle
fnsave
out
popa
mov
mov
push
sbb
fwait
push
push
and
jns
mov
dec
jb
xlat
push
das
bnd
push
xchg
jge
sbb
sub
mov
dec
fcomps
dec
mov
mov
bound
xchg
sbb
mov
push
add
out
cmc
mov
out
jecxz
xor
js
mov
jbe
stos
and
inc
rcrb
mov
and
mov
es
sub
out
test
xchg
lahf
push
stos
jl
lcall
sub
imul
mov
cmp
outsb
xchg
or
fistl
xlat
ds
xchg
mov
dec
movsl
push
es
push
fidivs
loope
not
adc
dec
test
insl
pop
lods
pop
das
add
es
loopne
fwait
mov
sbb
fstl
dec
rclb
push
adc
mov
xor
inc
and
pop
lea
inc
pop
mov
pop
jle
imul
addr16
cmc
cmpsb
lahf
pop
push
xchg
xchg
sub
mov
into
hlt
mov
sahf
clc
cmp
in
cwtl
popa
and
pop
sub
hlt
iret
sub
andl
xlat
jmp
push
addl
jge
jl
jl
jg
sbb
and
push
in
call
xchg
popfw
mov
mov
mov
out
sti
aaa
mov
jbe
xorb
pop
or
xor
jns
and
lods
jbe
scas
cltd
sti
pop
pop
rcll
insl
dec
fmull
inc
jl
test
je
sahf
jns
mov
jnp,pt
scas
in
shrb
push
je
cs
movaps
ret
pop
inc
ljmp
lahf
xchg
sub
push
and
push
push
sub
mulb
inc
push
jns
mov
dec
data16
fists
adc
mov
imul
imul
sub
lret
addr16
add
adc
aas
inc
add
pop
and
cmp
inc
outsl
mov
mov
jp
or
cmpsl
adc
and
pop
dec
stos
pop
xchg
xchg
mov
or
out
mov
sub
mov
sahf
xlat
mov
mov
dec
jo
push
and
xchg
cwtl
in
test
es
ljmp
sub
scas
cmpsl
sbb
xor
sarl
adc
adc
repz
lahf
jae
add
jno
les
leave
mov
sbb
sahf
addl
inc
jno
das
js
and
ja
in
push
loop
pop
xor
into
cmc
push
mov
test
xorl
jecxz
push
bound
jns
int
sbbl
add
fsubrl
test
in
sbb
jmp
and
jne
jle
lds
iret
add
cvtps2pi
leave
or
lret
push
inc
pop
bound
jno
test
fs
push
loope
mov
add
cltd
mov
xchg
out
dec
push
scas
std
jae
lea
sub
repz
jle
data16
fwait
jne
jecxz
lods
mov
push
mov
sub
notb
test
push
xchg
jl
jecxz
ja
jg
push
jo
ds
xchg
sub
sbb
push
aas
cmp
test
inc
pop
dec
int
cs
pop
scas
arpl
mov
sbb
xor
mov
ss
scas
repnz
cmp
push
xchg
movsl
cmp
fs
inc
loopne
xchg
add
hlt
lods
lcall
and
xor
xlat
xor
movsw
push
push
pop
xor
add
aaa
hlt
mov
or
faddl
or
inc
fisttps
sub
mov
inc
test
and
pushf
jno
addr16
fsub
aad
sbb
push
xchg
mov
mov
mov
sahf
push
imul
adc
enter
imul
or
sbb
adc
into
push
loopne
jnp
imul
fwait
mov
fmul
jg
xchg
mov
and
mov
mov
pop
divl
jmp
xor
into
sub
loope
mov
jno
outsb
jg
dec
or
int
xor
arpl
add
fidivl
mov
jle
in
lock
inc
mov
push
hlt
out
jo
dec
push
daa
scas
pushf
int3
xor
adc
push
stos
les
fcompl
aas
shlb
sbb
sub
cmp
daa
cmp
nop
and
rorl
cmp
xor
in
test
popf
jmp
loope
and
loopne
sar
cmp
es
jecxz
sbb
push
test
sub
push
jne
popa
lds
jle
sarb
stos
arpl
pop
js,pt
pop
fidivl
test
imul
int3
lods
out
push
jge
fwait
xchg
imul
dec
lds
lds
leave
cmc
pop
mov
adc
jl
popf
loope
aas
dec
sahf
sub
pop
or
shl
xchg
icebp
test
insb
add
data16
ficoml
mov
mov
cmp
ret
fistpl
lods
dec
dec
pusha
fcoms
pop
enter
ja
outsl
mov
mov
adc
subl
and
adc
cltd
js
push
xchg
scas
jge
call
and
add
xlat
cld
lret
push
fiaddl
fs
xchg
mov
push
jl
dec
dec
jno
dec
or
gs
jle
sub
sbb
stc
dec
mov
mov
pop
out
ja
jg
xchg
lods
call
insb
call
addr16
iret
lods
mov
sbb
mov
mov
aad
pop
cmp
movd
cmpsl
pop
adc
jae
hlt
lcall
mov
pusha
jbe
pop
adc
lods
shrl
inc
and
in
pop
and
and
inc
fs
mov
push
lods
fdivl
sbb
mov
sbb
jno
dec
insl
or
mov
push
gs
jnp
das
push
cmp
lret
jge
xchg
hlt
sub
push
adc
mov
inc
jno
lret
push
stc
dec
or
aad
mov
add
lret
dec
xchg
shrl
or
bnd
mov
testl
pop
xchg
enter
cmp
push
shl
imul
sub
das
insl
out
mov
int
popf
enter
inc
pop
movsb
mov
cmp
outsl
das
in
rdseed
adc
sbb
sbb
cmpsl
imul
sti
lret
adc
insb
pushf
push
testb
xor
push
mov
mov
mov
cltd
or
jns
pop
mov
iret
and
ret
ficomps
jb
mov
or
cmp
aaa
cmp
sub
adc
adc
fs
mov
addb
cmp
test
fs
cld
push
mov
xor
jge
sbb
add
mov
pushf
pop
and
or
push
scas
push
cmp
lret
sbb
or
cmp
dec
xlat
mov
mov
xor
inc
lock
add
subb
shlb
jp
imul
sub
xchg
es
out
call
fnsave
lods
jo
in
xchg
xchg
cmp
cmpl
lahf
inc
enter
and
mov
scas
inc
repnz
pop
mov
mov
out
out
mov
sarb
scas
shll
aas
adc
adc
ficoms
pop
movsb
sub
stc
and
or
sub
pop
lcall
outsb
jbe
adc
dec
mov
mov
into
dec
dec
mov
int
jne
pop
jae
jp
xor
fucomp
stos
pop
xchg
push
add
sti
lds
in
cmpsb
mov
push
stos
jmp
lahf
push
daa
roll
cmp
insl
xchg
mov
pop
adc
mov
jmp
xor
enter
dec
or
leave
dec
subb
ds
inc
mov
push
pop
pop
arpl
imul
loope
ljmp
mov
arpl
xchg
in
scas
pmuludq
sub
jmp
inc
push
popa
xor
xor
cmp
inc
mov
and
fdivr
inc
sahf
jmp
std
insb
in
mov
sbb
out
aas
mov
mov
popa
out
mov
pop
push
pop
jnp
pushf
test
mov
cld
pop
add
lret
xor
stos
mov
and
xor
stos
bound
dec
or
push
add
stc
mulps
rcrb
gs
scas
mov
mov
loopne
xchg
negb
mov
inc
cld
push
fcmovb
scas
pop
sub
mov
inc
mov
mov
and
sub
cmp
sub
nop
adc
mov
dec
pop
jmp
test
notb
data16
xor
sbb
call
sbb
fildl
mov
xchg
jecxz
xchg
dec
outsb
out
lret
lret
jl
dec
imul
sar
pusha
enter
icebp
sbb
aaa
push
xor
jnp
adcl
pushf
mov
pop
inc
mov
push
bound
lods
or
fldcw
pop
js
aas
test
in
je
xchg
int
xor
mov
icebp
mov
or
mov
mov
shll
inc
inc
add
enter
popf
adc
xor
add
cltd
sbb
xchg
push
lahf
test
adcb
test
roll
cltd
dec
das
sbb
jge
daa
push
mov
ljmp
lds
ja
sbb
lds
and
adc
test
jl
daa
ss
mov
mov
xchg
push
and
cmp
xor
push
push
fcomi
in
push
inc
inc
in
cltd
sahf
mov
dec
cltd
mov
push
andb
cmp
xchg
mov
mov
cmp
xlat
enter
testb
lds
dec
adc
int
cli
out
shlb
mov
xchg
fimuls
les
dec
adc
int
fistpll
out
push
fistps
inc
push
xchg
popa
insb
push
lock
out
cwtl
out
loope
ds
add
ret
ljmp
int
shlb
clc
xlat
jno
fnstcw
jb
or
mov
mov
jle
ret
pusha
stos
dec
push
pop
pop
jb
push
mov
mov
sbb
pop
mov
clc
scas
add
mov
outsl
lcall
lcall
dec
call
push
push
ljmp
std
jne
sbb
xor
or
mov
inc
addb
pop
scas
xor
and
enter
imul
mov
dec
iret
inc
mov
mov
sbb
repz
in
sbb
adc
dec
and
dec
adc
hlt
cmp
mov
adc
cmpsl
rorb
cmpsl
lock
xchg
out
lret
xor
sbb
or
pop
add
adc
lcall
nop
pmulhuw
push
mov
pop
popf
cmp
dec
inc
loop
and
mov
sahf
or
jle
pop
in
xchg
sbb
jp
sbb
sbb
pop
or
xchg
movsb
inc
jp
andb
xor
into
xchg
cltd
lret
push
in
xchg
push
and
aad
xchg
aam
or
and
adc
cmp
sbb
movsl
testb
inc
rcll
sub
inc
and
mov
lods
mov
in
cmp
sbb
sahf
cmp
je
pop
mov
test
pop
push
dec
sub
in
xchg
outsb
clc
cli
jg
aad
std
dec
pop
inc
adcl
pop
ljmpw
xor
mov
leave
lea
or
jb
xor
mov
xor
cli
inc
and
decb
out
xchg
xchg
ret
jle
mov
pop
scas
dec
mov
and
pop
orb
cwtl
pop
stos
mov
out
lods
mov
jge
icebp
stos
leave
repnz
xor
inc
loope
or
adc
test
or
inc
mov
push
sbb
and
lock
sub
xchg
add
push
xchg
fstpt
push
in
cmc
mov
enter
lahf
pop
sub
dec
cmp
add
jno
loop
jno
push
call
pop
insb
mov
push
sub
rorl
fistl
fs
aaa
sbb
lcall
push
dec
dec
fnsave
jp
imul
je
push
fcmovnb
fcoml
xchg
es
test
dec
push
mov
and
inc
xchg
mov
jecxz
cmp
inc
adc
ljmp
inc
out
sbb
push
icebp
sub
imulb
loope
pop
dec
sub
outsl
push
sarl
lock
stos
shll
add
and
jg
scas
jno
out
ja
cs
stc
bnd
cmp
cmpsb
sbb
jg
sub
xchg
push
dec
and
into
add
mov
mov
cmp
into
rcr
mulb
aaa
pop
add
xor
addb
xchg
lods
lret
js
frndint
imul
push
jmp
imul
lock
leave
lock
mov
push
mov
imul
pop
call
xlat
shll
add
scas
dec
push
mov
mov
push
scas
xchg
movsl
jg
adcb
xchg
das
xor
fwait
clc
mov
inc
aaa
mov
jp
pop
push
cld
es
sbb
mov
mov
out
mov
insl
dec
lret
insl
push
dec
pop
gs
cmp
aas
sbb
mov
lret
cmp
jno
outsb
xor
repnz
shrl
jle
mov
and
sbbb
insl
popa
mov
adc
jns
repnz
dec
mov
scas
cli
dec
and
ljmp
inc
daa
mov
repz
clc
push
dec
jb
mov
fbstp
pop
cli
xchg
add
pop
inc
add
ja
pop
movsb
push
cmp
dec
sbb
cmpsl
bound
push
je
jns
pop
jne
ljmp
mov
and
adc
xorb
jo
faddp
scas
popa
movups
rorb
lea
fcompl
cmp
push
sbb
pop
bound
pop
add
push
aad
mov
bound
pop
xlat
mov
rcr
testl
loop
fnsave
das
pop
imul
sarl
xchg
xchg
stos
sbb
int3
mov
ret
pop
mov
pop
mov
pop
push
mulb
inc
xor
jle
iret
lret
sbbl
mov
sbb
jbe
adc
xor
stos
gs
clc
nop
dec
daa
pop
mov
mov
cmpsb
push
push
pop
fcoms
fisttps
loope
enter
or
fidivs
mov
lahf
cmpsb
lods
roll
and
loopne
mov
push
stos
cmpsl
xchg
and
push
popf
mov
xchg
adc
mov
inc
pop
or
hlt
lods
out
mov
in
jnp
xchg
and
aaa
jmp
inc
in
or
loopne
je
bound
push
sti
pop
icebp
nop
int
pop
xchg
xor
int
call
or
repnz
and
loop,pt
sub
scas
enter
leave
sub
mov
notb
fs
or
mov
adcl
pop
fwait
add
nop
adc
xor
push
push
es
sub
adc
mov
sbbl
mov
push
or
std
sbb
mov
enter
scas
popa
insb
int
movsb
and
add
lret
pop
out
sub
jg
gs
lea
fidivl
jnp
dec
sti
fisubs
jns
and
loop
sub
cmpsl
xchg
xor
or
lds
je
sub
mov
push
push
aad
icebp
stos
xchg
outsl
mov
add
nop
push
divb
imul
mov
sbb
rolb
xchg
fidivl
or
inc
mov
dec
jb
mov
sar
outsl
aam
mov
add
xor
push
js
push
fcoms
xor
iret
lcall
xchg
dec
add
jmp
xchg
dec
imul
movsl
push
push
lret
es
nop
popa
inc
jp
test
int3
mov
xchg
sub
mov
xchg
clc
dec
popa
mov
mov
or
pop
xchg
ja
jmp
in
or
fcomps
xchg
insb
cmpsb
push
xchg
insb
fbstp
or
ficompl
call
lret
dec
rcrb
jo
xor
push
xor
mov
aaa
mov
mov
data16
mov
add
jmp
outsl
sahf
pop
lret
call
int3
pop
aam
add
jnp
adc
test
addr16
adc
mov
xchg
push
push
and
or
jp
and
scas
inc
xchg
cmp
mov
pop
and
mov
xchg
fdivrl
sbb
mov
loopne
iret
sub
add
movsl
scas
mov
iret
ret
xor
in
xor
pop
jo
jns
test
mov
leave
sbb
ds
incb
and
in
push
clc
cltd
or
lret
adc
cmpsl
ja
inc
or
in
pop
jne
pop
mov
rcrb
fstpl
adc
dec
fistl
and
xchg
nop
testl
inc
arpl
inc
daa
add
subb
xchg
mov
or
in
push
push
or
push
cmp
ds
lret
jle
cmp
gs
mov
cmp
dec
mov
nop
sbb
or
aam
pop
lds
daa
fadds
mov
roll
ret
sub
mov
and
mov
dec
mov
dec
jne
xorl
insl
loopne
fsts
and
pusha
lcall
xchg
jecxz,pt
and
or
lods
cwtl
cs
xor
ja
lcall
mov
ja
std
cld
lods
inc
adc
cmpsl
inc
sbb
xchg
adc
xor
decl
stos
adc
popa
sbb
xchg
loopne
loop
ret
cmp
dec
add
xor
add
and
inc
pop
call
jns
hlt
fadds
mov
cmp
sub
icebp
hlt
push
mov
popf
enter
fimull
call
pop
mov
jne
dec
rcll
push
stos
movsb
out
mov
stc
loope
sbb
mov
ja
je
xor
push
xor
aaa
lods
xchg
adc
push
push
shlb
loope
jbe
pusha
fiadds
adc
add
cmc
add
pop
adc
pop
pop
and
mov
sahf
js
rcrb
ljmp
pop
out
mov
or
adc
mov
jle
cmpsb
aaa
ds
sbb
mov
mov
int3
cli
sahf
mov
mov
cmp
pushf
rcr
fstps
mov
int
sub
imul
sbbb
mov
inc
rolw
cmpsl
or
sbb
inc
adc
and
test
inc
xor
mov
mov
das
and
inc
scas
popa
xor
mov
andb
icebp
and
mov
sub
fisttpll
mov
loope
out
insl
call
mov
xor
shrb
and
add
rcrb
inc
xor
inc
jo
pop
mov
mov
sti
sbb
or
mov
mov
or
mov
add
dec
xchg
mov
jge
leave
addr16
fstp
or
cmp
fldl
in
ljmp
insl
push
jg
pop
sbb
test
xor
cmp
push
lahf
or
xor
or
subb
pusha
insb
aaa
inc
insl
mov
popa
cwtl
mov
test
cmpl
ljmp
loop
aam
mov
pop
loope
jp
jns
fwait
pop
scas
das
xor
xor
mov
jo
mov
aaa
into
push
inc
xorl
jno
pop
push
je
jno
pusha
ja
sbb
push
xchg
mov
inc
insl
jo
sub
inc
mov
je
aas
mov
test
xchg
inc
lahf
lret
jns
adc
data16
xor
sbb
notb
sbb
js
jmp
loop
sahf
xchg
pusha
xchg
sub
mov
icebp
dec
sbb
jbe
adc
sbbb
mov
add
pop
xchg
push
aam
sub
inc
xchg
loope
mov
sub
sbb
jnp
mov
pmaxub
fmuls
push
push
inc
push
sti
shlb
or
sti
arpl
loope
xchg
or
lea
push
add
jg
insb
clc
scas
std
test
cltd
lea
push
test
xorl
or
mov
stos
imul
test
inc
adc
insl
scas
mov
pop
scas
sbb
sub
adc
sub
inc
int3
jnp
bound
pop
pop
fmuls
inc
imul
sub
and
shlb
xor
arpl
or
adc
xor
fisubs
jns
and
jg
add
in
pop
xchg
xor
push
sub
shl
arpl
cmpsb
sub
sbb
or
scas
mov
pop
push
scas
pusha
enter
insl
or
or
push
aad
add
out
pushf
cmp
into
data16
sbb
test
movb
shr
pop
jbe
jns
push
pop
xchg
es
mov
jno
icebp
ret
cmp
mulb
cmp
mov
cmp
xor
pop
xor
inc
ljmp
jp
bnd
lea
xor
fcompl
ficoms
mov
cli
jp
aas
mov
popf
int3
dec
adc
xor
sub
fwait
rol
push
xor
xchg
mov
test
dec
sbb
fdivr
jp
nop
adc
add
emms
add
out
sbb
and
xor
lret
cmp
and
in
leave
push
loope
test
xchg
xchg
or
mov
imul
sahf
je
push
and
xchg
xor
cmp
lcall
xchg
sbb
sub
out
es
std
shr
jo
lret
fildl
insl
repnz
jl
cmpsb
lea
and
inc
push
sbb
iret
dec
pop
lahf
xor
repz
lcall
or
xchg
inc
sti
dec
add
mov
lods
push
stos
gs
pushf
loop
mov
cmpsb
sbb
into
addr16
mov
pop
stc
outsl
shlb
add
inc
jge
testl
subb
fs
pop
jle
movsl
xchg
stos
stos
push
out
mov
xchg
jnp
xchg
cmp
push
and
mov
jo
movsl
xchg
nop
jnp
cmp
mov
int3
jno
mov
jl
mov
sar
fdivs
jno
lea
jmp
pop
inc
and
aam
xor
jl
cmp
dec
jp
repnz
push
jno
cld
imul
push
rorb
rclb
mov
mov
push
fwait
inc
or
fistpl
lret
sub
jae
push
push
or
push
inc
iret
addr16
imul
mov
fiaddl
rorb
ds
or
clc
cmp
and
mov
mov
cmpl
mov
shlb
add
in
hlt
bts
sbb
xchg
xchg
dec
int3
sbb
jp
xlat
mov
aad
rclb
lea
pop
ja
loop
mov
cmc
icebp
jbe
cmp
mov
push
jbe
gs
std
cmpsl
mov
dec
in
cmc
jle
jmp
or
leave
mov
pop
pop
mov
xlat
add
jb
cmp
call
and
inc
mov
xor
sti
dec
loop
out
pop
xchg
mov
in
pop
sbb
test
sbb
inc
std
lds
inc
pushf
aad
sarl
mov
pushl
lret
jg
sbb
and
add
jne
lods
dec
jle
sub
adc
lock
and
cmc
pop
sub
fdivs
addr16
push
xchg
ret
cmp
jecxz
ret
aad
jbe
jo
inc
pop
inc
movsl
ja
jne
mov
test
xrelease
dec
out
cmp
push
test
push
cld
push
sbb
insl
push
ret
add
jo
jle
ret
xlat
adc
inc
cmpsl
dec
adcl
xchg
aam
dec
add
inc
imul
stos
mov
mov
jecxz
mov
cmp
fldenv
aam
out
xchg
jmp
ljmp
das
sub
xchg
dec
push
enter
inc
movsl
sar
lea
call
inc
inc
shrl
mov
pop
cmp
iret
enter
int
int3
cli
test
repz
dec
mov
out
out
dec
mov
xchg
orl
lods
add
xor
or
testl
and
iret
dec
mov
push
test
sahf
mov
inc
pop
mov
lds
lret
adc
testl
and
inc
repnz
push
aaa
dec
and
gs
jmp
out
xor
arpl
ja
dec
xor
sbb
adc
clc
mov
sbb
jmp
test
js
or
sub
insl
and
int
xchg
inc
jnp
mov
push
jno
jecxz
xor
inc
push
push
mov
jl
mov
jb
jb
inc
sti
aam
sbb
jbe
sbb
test
or
daa
sarb
pop
jmp
scas
cld
add
daa
enter
push
mov
loope
push
inc
aaa
pop
sbb
xchg
or
mov
pop
fidivrs
sbb
mov
js
pop
pop
adc
add
xlat
inc
push
cli
das
push
xor
mov
jns
mov
ds
outsl
jnp
or
push
mov
jp
imul
mov
arpl
mov
push
mov
mov
dec
xchg
sub
sbb
mov
loop
xchg
in
push
jo
jae
xor
andl
mov
mov
aaa
in
jno
sbb
inc
xchg
mov
pop
adc
xor
mov
mov
sub
jmp
lahf
pop
outsb
imul
xchg
ja
fiadds
adcl
fnstenv
and
pop
dec
fldcw
and
xchg
test
mov
nop
ret
sub
mov
xchg
mov
ret
mov
mov
int
filds
sarl
dec
push
rcr
pop
das
mov
mov
xchg
cmp
pop
push
jno
pusha
out
inc
in
daa
inc
cmp
cmp
or
mov
int3
bound
xor
fs
mov
adc
test
jg
pop
mov
out
pop
and
xor
add
mov
ret
in
mov
outsl
mov
xchg
push
adc
ljmp
std
sbb
call
shlb
insl
inc
push
hlt
cmp
pop
mov
push
ds
mov
clc
arpl
cmpb
popf
xchg
das
fwait
lods
popa
sti
fimull
es
mov
loop
out
jb
je
in
aam
add
inc
jmp
cmp
or
and
mov
push
add
inc
push
sbb
movl
sub
pop
adc
imul
push
in
push
aaa
les
nop
in
arpl
and
aaa
pushf
add
mov
pop
xchg
scas
shrb
mov
xchg
loopne
movups
movsb
popa
adc
nop
mov
fsubr
cmp
cmpb
adc
insl
cmpsl
enter
xchg
pusha
cmp
and
sub
test
push
xor
test
lea
jecxz
mov
stc
ret
dec
push
dec
cs
sub
jle
push
je
mov
dec
mov
cmp
mov
xchg
shll
aaa
push
mov
ret
pop
lret
cmp
test
dec
addl
daa
das
scas
out
cwtl
pop
and
lods
mov
cmp
dec
adc
sahf
cli
fists
int
aam
mull
jae
insl
jmp
ljmp
fstps
testb
sub
popa
mov
push
push
lds
xchg
es
rclb
ja
into
jmp
jno
xorb
dec
or
push
and
adc
js
sahf
and
ror
jge
xchg
lahf
out
imull
sub
xchg
ret
cmp
loope
int3
aad
xchg
mov
dec
cmp
out
and
or
and
fimull
mov
scas
addb
mov
or
mov
sbb
sbb
sbb
adc
aam
dec
cwtl
das
jns
cli
sbb
repz
scas
jg
cmpsb
jecxz
popa
subl
sbbb
mov
cwtl
ss
pop
icebp
or
cld
pusha
push
or
shrl
in
cmp
push
mov
cmp
jno
push
add
aam
ret
push
pop
fsubl
loop
aam
clc
iret
inc
pop
push
jmp
shl
negl
inc
sub
inc
fs
jnp
mov
push
adc
cld
and
xchg
loope
fwait
sub
push
iret
out
xchg
inc
push
insl
ret
pop
jo
jle
adc
xlat
gs
filds
inc
xor
jnp
fisttps
clc
mov
lret
ret
icebp
lea
pop
push
daa
cwtl
mov
addb
mov
fldenv
mov
pop
mov
cld
pushf
mov
jecxz
inc
sub
daa
jne
movsb
clc
sub
cmpxchg
in
ljmp
scas
add
into
movsl
xchg
cmp
adc
data16
into
subl
cmovp
inc
arpl
int3
add
aam
js
and
sahf
les
pop
fildll
rclb
mov
cmp
outsb
sbb
fisttps
inc
cmpsb
fwait
daa
xor
adc
xchg
push
mov
ret
data16
mov
xor
orb
iret
push
rolb
cmpsb
int
mov
mov
push
inc
mov
sti
int
mov
mov
std
aam
xor
xor
mull
or
mov
insb
test
adc
adc
insb
pop
lcall
add
lahf
and
cmp
in
mov
bnd
dec
icebp
cwtl
mov
xor
pop
pushf
jns
scas
in
add
and
push
jb
or
test
push
pop
cmp
mov
mov
addr16
pop
sub
mov
movsb
les
popa
push
jns
sbb
out
scas
fwait
lahf
test
xchg
out
xchg
and
movsb
ljmp
cmpsl
je
xchg
addr16
sbb
sbb
js
push
mov
leave
mov
stos
in
or
adc
popl
loop
lcall
mov
outsl
and
mov
jnp
jecxz
jmp
push
cmc
mov
inc
bound
call
lea
xor
xor
pop
pop
inc
idiv
jp
mov
int
mov
pop
lcall
add
arpl
iret
jecxz
inc
or
inc
int
sbb
mov
sti
pop
dec
xor
push
pop
inc
jecxz
cwtl
test
cmp
xchg
pop
insl
pop
or
in
inc
test
fadd
mov
jbe
fnstcw
jne
mov
xor
pandn
xor
inc
push
mov
out
push
pop
mov
and
push
scas
mov
and
jge
adc
jecxz
addr16
mov
aaa
jecxz
popa
sub
ds
aas
cmp
mov
shrl
enter
cmp
mov
mov
fs
push
add
lahf
notl
lods
mov
out
mov
iret
movsl
jne
cmp
push
lock
out
cwtl
fstl
sub
subb
mov
xor
fucomi
mov
cltd
dec
loop
inc
stos
xchg
pop
cmp
add
int3
loop
and
rorl
jbe
cmp
xchg
jbe
cmp
inc
lds
mov
insb
cs
adcb
test
cltd
mov
outsb
sbb
lret
sub
inc
enter
add
push
xchg
aad
and
push
insl
dec
adc
js
push
decb
pop
sub
mov
mov
xor
add
and
arpl
das
addr16
shrb
mov
test
cmp
xorb
inc
fistpll
loop
pusha
aad
push
fwait
stc
mov
aad
sbb
shl
push
inc
ret
mov
std
clc
aam
cli
mov
mov
sti
mov
es
shll
mov
and
or
mov
or
dec
addr16
call
mov
stos
out
loopne
cld
jmp
icebp
jno
mov
inc
lcall
insl
cmpsb
xchg
and
push
pop
adc
lods
sbbl
lods
comiss
or
mov
push
dec
mov
cmp
xor
hlt
sbbl
out
jns
lds
or
flds
push
pusha
std
jg
imul
ficoms
adc
add
aad
call
scas
and
jp
repz
mov
bound
ja
adc
sub
sahf
or
sbb
lods
add
mov
scas
inc
insl
pop
test
fwait
jge
lods
test
vhaddps
inc
and
inc
cwtl
push
xchg
sub
inc
nop
jmp
fistpl
pop
cmp
sub
inc
loopne
stc
enter
dec
cmp
scas
mov
je
cmpsb
addr16
or
out
xchg
cwtl
cmp
xchg
cmc
scas
mov
xor
dec
mov
and
dec
jno
and
fwait
or
insl
xor
push
mov
mov
pop
es
mov
shlb
and
cmp
adc
cmp
fstl
sub
sbb
in
pop
or
enter
fdivrs
fidivrl
pop
insl
scas
rol
dec
lods
fcmovnu
cltd
lcall
or
or
sub
clc
bound
cmp
pop
out
daa
leave
dec
xlat
cmpsl
push
lret
ret
jno
pop
cmp
pop
cmp
push
jae
loop
inc
sbb
rclb
shll
sub
pop
int3
cmpsl
fstpl
xchg
in
fsubl
and
fs
lods
pop
imul
jo
aam
xchg
clc
sbb
jp
fsubp
stc
cwtl
out
fninit
into
aad
pop
adc
xor
negl
sarb
inc
daa
jo
cld
dec
mov
jns
inc
adc
mov
xchg
cld
movsb
in
xor
test
inc
loop
mov
div
jl
pop
inc
data16
sbb
rolb
stos
lods
repnz
test
fs
or
lret
daa
xor
xor
mov
sti
or
add
mov
jno
lock
test
test
movsb
lea
sub
jne
xchg
cmp
mov
dec
push
push
notb
mov
icebp
test
lods
insb
nop
jmp
pusha
seta
dec
fsubr
lahf
mov
or
xchg
mov
jecxz
jns
jno
jnp
je
or
out
lods
in
mov
mov
hlt
dec
test
sub
hlt
push
mov
mov
jp
stc
mov
dec
repz
nop
and
push
or
push
mov
xor
push
xchg
mov
jl
lahf
lds
fwait
lds
je
scas
jle
cld
loop
dec
test
or
sub
dec
fldcw
mov
clc
xchg
jp
add
lods
repz
movsl
sbb
sti
and
rcr
pop
mov
mov
mov
insb
bound
adc
fdivl
inc
loope
invd
test
sti
adc
inc
mov
out
mov
mov
cmpl
movsb
orb
ds
cwtl
push
pop
jg
rcrb
faddl
inc
adc
rcl
sub
jl
mov
aas
adc
sub
push
test
cmp
xor
mov
lcall
push
push
addr16
imul
add
fsub
add
scas
push
subb
nop
out
and
leave
cmp
mov
aad
insb
lods
jmp
pushf
push
inc
fs
sti
dec
cmp
mov
loope
in
xlat
leave
stos
inc
es
imul
inc
mov
cmp
mov
int3
dec
or
xchg
mov
mov
xchg
xlat
cmc
orb
jae
shrb
jb
pushf
out
addr16
nop
xor
movsb
fbld
pinsrw
into
inc
loop
call
and
xlat
inc
mov
mov
test
lods
pop
call
and
mov
jae
cmp
mov
dec
idivb
xchg
sti
aam
mov
push
or
sub
imul
aaa
ss
shlb
and
cmp
ret
out
arpl
ficomps
cmp
mov
into
mov
loopne
and
mov
lcall
or
sub
pop
mov
pop
push
gs
mov
int3
fimuls
addr16
mov
cpuid
cmp
aaa
xchg
dec
mov
push
push
movsl
mov
xor
inc
popa
and
mov
dec
aas
pop
scas
out
add
pushf
adc
or
out
fldt
cwtl
inc
fisubrs
test
ret
nop
jb
movsb
fdivs
pusha
mov
push
jo
mov
mov
movsl
cmpsb
repz
adc
dec
jmp
cwtl
lea
dec
cmp
repz
xor
cli
pop
out
movsl
lret
inc
jl
int
pusha
pop
daa
mov
mov
outsl
cld
adc
adc
mov
xor
adc
fisttpl
or
pop
jno
push
in
subb
push
and
stc
loopne
sbbl
out
pusha
divl
dec
inc
sahf
push
mov
push
inc
push
cli
and
dec
clc
mov
and
xor
cmp
and
pop
inc
lock
jbe
push
push
loopne
divb
sti
test
mov
xchg
pop
fmull
jmp
test
lret
cli
lods
sbb
cmp
pop
mov
adc
repz
xor
ljmp
xchg
out
adc
add
xor
cs
xchg
test
lea
inc
pop
in
jne
pushf
adcl
mov
int
int
sbb
lahf
fldt
fs
adc
test
data16
lock
mov
xchg
xchg
mov
jb
out
push
in
es
sbb
ja
mov
in
push
push
jg
nop
nop
adc
js
lcall
lret
push
pop
jecxz
in
ss
cli
aam
jmp
test
pop
cmpsl
dec
or
movsb
jg
int3
inc
sbb
sbb
jg
adc
adc
xchg
pushf
hlt
aas
sub
sbb
push
std
les
adc
cltd
fidivl
ret
icebp
pop
popf
negb
mov
jns
cli
add
mull
loopne
mov
je
in
push
int3
in
movsl
push
mov
sbb
sbb
cmp
pop
sub
cld
mov
sbb
test
push
sbb
push
mov
mov
mov
lock
int3
enter
imul
pop
inc
outsb
adc
sbb
mov
sbb
jge
sbb
adc
ja
das
xor
jp
adc
xor
dec
inc
push
mov
lret
hlt
inc
inc
jnp
daa
dec
std
cmp
cmpsl
jmp
push
jmp
push
sbb
xor
dec
add
jecxz
push
loop
scas
sub
inc
cmp
loop
and
les
int
arpl
adc
inc
sahf
cli
xchg
cmp
in
pop
lret
and
inc
jl
fs
insl
jge
imul
pop
das
dec
cs
pop
cmpsl
sbb
andl
dec
fwait
lret
jno
imul
ja
mov
push
mov
mov
icebp
ret
out
dec
mov
push
jbe
add
lahf
inc
pushf
cwtl
cmp
idiv
aam
cmc
movsb
std
test
push
adc
push
push
js
push
stc
bound
insb
adc
int
inc
fdivl
inc
push
pop
add
js
jg
hlt
mov
inc
pop
aas
push
sbb
insb
add
lods
cmp
inc
sbb
mov
xchg
xchg
sub
xchg
idivb
xchg
sarl
lahf
mulb
mov
adc
or
push
ret
lcall
orl
pop
mov
sbb
mov
mov
push
ja
pop
dec
mov
test
aam
mov
jne
aaa
test
out
xor
aad
inc
push
sbb
push
lds
sub
test
pushf
imul
in
mov
ja
mov
mov
movsl
mov
add
je
stc
push
les
jg
mov
test
cmp
sbb
ret
push
mov
fisubrl
ror
in
cmp
test
push
pop
add
jg
aam
scas
adc
mov
popa
stos
jne
test
stos
call
decl
pop
sahf
mov
es
int3
cmp
cltd
inc
call
mov
cmc
or
loop
xor
aad
mov
mov
adc
sbb
push
mov
sbb
movsb
int
adc
outsb
cmp
mov
out
ljmp
inc
fisubrl
push
lods
fidivrl
in
test
cmp
movsb
xchg
test
out
shl
fadds
xor
mov
xchg
lcall
jb
mov
addr16
dec
dec
fdivrs
and
nop
xor
sub
imul
test
pop
mov
imulb
jnp
adc
lock
xorb
pop
dec
sub
sbb
sbb
inc
push
push
push
pop
ret
lcall
fadds
imull
sahf
xor
sbb
popa
ja
popf
lods
xor
and
lret
out
testl
push
and
fs
mov
xchg
das
adc
ret
int3
lcall
adc
sbbb
std
mov
ljmp
xchg
mov
push
adc
nop
cld
adc
pushf
push
shl
adc
mov
test
orl
stos
cs
dec
aam
je
push
imul
mov
push
fcomip
outsb
mov
lods
aad
adc
testb
dec
fbstp
loope,pn
jae
cmp
mov
xchg
enter
inc
push
in
shll
jge
push
push
and
insb
ret
sbb
or
adc
popa
cmc
lods
fcompl
cs
sbb
int3
pop
fcompl
in
lahf
les
lret
dec
movsl
add
mov
lret
fidivs
nop
sbb
andl
test
or
dec
cli
insl
pop
push
cltd
or
sub
nop
testb
stos
hlt
and
and
add
dec
sbbl
je
xor
daa
mov
adc
inc
notl
sub
in
pushf
mov
jge
lods
pop
cmpsb
outsb
ret
shrl
pop
stc
cltd
jnp
test
pop
jo
xchg
add
jge
inc
clc
jb
dec
mov
ret
out
sub
loopne
cmp
or
mov
lret
xchg
add
and
mov
ret
cmp
stos
xor
mov
iret
movups
mov
out
xchg
mov
and
xchg
jns
fcomp
std
dec
dec
mov
gs
popw
push
pushf
dec
xlat
mov
popf
dec
arpl
mov
jo
pop
sbb
comiss
repnz
rolb
iret
pop
mov
mov
mov
pop
mov
pop
jbe
ret
enter
fimull
dec
ret
mov
jl
and
push
test
scas
cmp
mov
cmc
or
mov
lock
dec
aaa
lods
test
addr16
xor
and
cwtl
aas
jae
mov
js
inc
clc
cli
insl
add
mov
aaa
and
shl
dec
adc
stos
lcall
outsl
mov
std
filds
cmpsb
test
or
aad
xor
push
inc
sub
dec
lret
cmpsb
xor
inc
lahf
insl
lret
arpl
into
mov
repnz
mov
sbb
and
je
out
pushl
lods
xchg
jmp
inc
jne
and
imul
mov
lods
xchg
fwait
pop
sahf
sub
push
add
out
sub
mov
loopne
and
addl
xor
push
and
mov
cmc
out
popa
loope
scas
shrl
sbbw
stos
lds
or
popf
nop
cmp
movups
inc
test
and
ja
add
mov
ret
ds
pop
sub
inc
adc
sbb
dec
lret
das
jge
leave
xchg
data16
jg
sti
inc
and
stc
sub
fsub
mov
and
mov
xchg
xlat
jno
filds
pushf
repz
pusha
ja
mov
lret
jae
lds
cltd
movsl
adc
pop
out
pop
inc
pop
addr16
cmp
adc
sbb
xchg
mov
ret
adcb
outsb
pop
xlat
cs
mov
imul
sti
loop
push
iret
out
xor
and
pop
jns
push
pop
xchg
mov
jnp
inc
mov
mov
or
hlt
jg
dec
cltd
das
mov
xchg
cld
sbbl
pop
lret
inc
rcrl
sbb
ss
add
push
scas
psubusb
cmpsb
and
loope
push
mov
sub
negb
fcompl
inc
dec
in
adc
mov
sub
ds
inc
push
jne
test
xor
pop
inc
out
leave
mov
xchg
pop
push
cmp
and
xchg
jg
mov
cmpsl
orl
push
xchg
inc
movsb
pop
in
sti
sti
popf
xchg
repz
shl
lock
xchg
and
in
decl
push
pop
lods
mov
sbb
sub
jp
nop
test
addr16
or
sub
or
aaa
loop
es
gs
in
mov
cmp
mov
dec
lea
push
jnp
cmp
xchg
pop
jl
inc
sti
push
sahf
mov
cmc
inc
stc
sbb
lea
fcomps
or
mov
cmp
aam
cmpsl
es
pop
and
rolb
xor
inc
pop
mov
push
sub
adc
jno
loop
shrl
add
aaa
in
jns
xchg
jno
jmp
daa
cmpsb
lock
lret
push
call
sub
sbb
aad
nop
out
rcrl
loop
xor
adc
cmp
inc
xor
sub
stos
outsb
stos
sti
sub
adc
jmp
popa
mov
insl
imul
popf
sbb
ret
rcrb
mov
mov
std
jg
xchg
xor
inc
pop
or
fstps
pop
cmp
push
incl
outsb
xchg
cmp
add
mov
jo
xchg
mov
pop
clc
mov
testl
imul
cld
aam
sbb
fbld
ror
inc
test
and
cs
loop
inc
fadds
rclb
xchg
cltd
stos
cmp
cmpsl
fisubl
pop
fs
jb
cmp
lock
sbb
insl
stos
insl
pushf
jp
mov
daa
repz
mov
push
cmp
loopne
mov
xlat
lcall
xchg
lcall
mov
lret
xchg
imul
in
ds
and
xchg
xchg
mov
rcrl
xchg
out
inc
sbb
lahf
out
jo
xor
mov
mov
xor
outsl
fidivrs
ljmp
lea
cmp
jbe
sbb
ret
test
aas
aam
clc
or
xchg
shlb
sub
fwait
ds
adc
addl
jb
push
inc
jb
repz
sbb
pop
jge
pop
mov
sbb
mov
push
mov
pop
ret
scas
cmp
movsb
xchg
shr
add
addr16
xchg
push
xlat
push
and
add
jo
ret
pop
jno
mov
push
aam
push
inc
out
mov
daa
xchg
lea
cmp
mov
stos
fldl
out
pop
imul
daa
sahf
adc
fcoms
add
inc
xchg
and
stos
lcall
mov
push
xorb
lds
sahf
push
jecxz
xchg
jae
mov
sti
xchg
jno
push
sbb
inc
mov
mov
add
push
fwait
cld
adc
xchg
sbb
repz
packsswb
xlat
pop
mov
outsb
jnp
xlat
pop
ficoms
rcll
repnz
test
inc
mov
sarl
mov
ljmp
pop
adc
mov
imulb
stos
rclb
out
sub
mov
add
aad
and
fistpl
adc
arpl
jns
push
push
adc
cs
mov
xor
in
push
ret
mov
lock
test
xchg
fs
fisubs
or
mov
mov
mov
cmc
push
out
insb
sbb
add
inc
jmp
lods
lds
jle
bound
pop
in
pushf
test
and
in
pop
lock
inc
bound
das
jo
jnp
mov
sub
sahf
push
in
fnstcw
jb
fwait
out
or
mov
push
aas
cmp
add
hlt
fbld
xor
mov
test
xor
fisttpl
mov
mov
cmpl
scas
loope
jmp
jge
in
xchg
xor
cmc
test
adc
mov
dec
ja
lods
add
and
jns
xchg
add
add
push
lock
jecxz
cmp
sbb
lret
fisttpl
lods
rcrb
sbb
call
jp
sahf
jg
adc
fidivrl
adc
ljmp
add
sbb
push
shll
fildl
sub
jg
xchg
outsl
popa
pushf
lret
mov
pusha
adc
add
sub
repz
push
cmp
cmp
mov
in
test
or
sub
add
das
push
test
setle
in
je
dec
int3
inc
testl
and
xchg
sub
mov
or
add
hlt
jno
sub
dec
inc
mov
sub
jne
push
dec
fwait
adc
mov
outsl
add
cmp
adc
clc
inc
jg
jecxz
xchg
dec
pop
sub
aaa
push
push
mov
and
xchg
call
test
lret
das
lret
mov
pop
aas
out
jae
cli
jmp
in
lods
mov
jmp
shrl
mov
addr16
dec
lret
push
popf
mov
pop
pop
cmp
aaa
xchg
cmp
and
pop
jns
lret
out
scas
data16
mov
ljmp
sti
arpl
lcall
mov
andb
jne
in
xchg
lret
pusha
fisubs
push
or
ss
mov
sbb
xchg
inc
cmp
inc
jnp
out
push
call
adc
lods
mov
insb
mov
scas
ljmp
add
out
ds
pop
dec
dec
push
pop
or
in
push
shrl
adc
adc
mov
lods
data16
cwtl
lock
jns
addr16
push
mov
pusha
aad
in
mov
mov
sbb
jecxz
push
ljmp
mov
orb
inc
fdivr
xchg
mov
jno
inc
outsb
neg
stos
sarb
pop
cmpsl
dec
fcoml
cmc
pop
scas
inc
sbbb
arpl
or
out
xchg
jmp
sbb
loope
dec
leave
add
cli
mov
fwait
lds
adc
fists
mov
pusha
push
jo
jecxz
mov
mov
and
repnz
aam
and
jge
idivl
scas
shrb
xlat
or
movsb
mov
cmp
lods
jmp
jge
push
out
pop
enter
popf
adc
mov
mov
movsb
outsl
adc
pop
mov
outsl
mov
xchg
loop
push
push
fsts
jge
pop
das
and
aam
sti
out
mov
jae
pop
test
movsl
xchg
cwtl
sbb
jecxz
repnz
mov
inc
mov
fdivrl
loop
adc
fwait
int3
dec
stc
cli
fstp
sarb
sahf
jmp
mov
cltd
sbb
cmpsl
inc
addr16
cmp
cmp
dec
inc
mov
repnz
add
cmp
mov
sbb
push
das
mov
mov
sub
aam
or
xor
xchg
mov
xchg
js
and
cmc
lcall
iret
out
pushf
sbb
stos
cmp
adc
pop
mov
mov
push
les
cmpsb
mov
xor
cld
or
sub
mov
mov
subl
psraw
loope
movsl
aam
xchg
jg
dec
mov
je
sub
or
and
push
push
cltd
mov
cmp
fwait
aaa
fildll
rclb
scas
aam
cwtl
and
insb
lret
xchg
jg
jnp
inc
es
cmp
push
divb
loopne
pop
sarl
mov
add
jns
and
cli
or
pop
lods
pushl
jno
sbb
xor
jle
sub
in
mov
notb
sub
xchg
sbb
inc
jge
mov
jns
std
pop
pop
push
dec
lret
stc
push
jmp
jae
repz
jae
cmp
out
xchg
xchg
andnps
insb
cmp
fwait
mov
jmp
sbb
scas
test
push
mov
jne
xor
add
mov
ss
aas
outsl
test
outsb
xchg
test
sbb
jl
dec
jge
mov
cltd
xchg
popf
jmp
subl
repnz
dec
xchg
rclb
pop
stc
push
ret
shlb
in
movsl
aaa
imul
push
scas
mov
pop
dec
ja
add
fistpl
add
movsb
rorl
aam
fdivrs
xchg
add
cmp
mov
xchg
jmp
jmp
mov
in
cmc
mov
lods
and
or
xchg
mov
dec
mov
ss
mov
inc
push
push
jl
inc
imul
jg
cmp
mov
out
push
and
push
cwtl
inc
or
das
mov
mov
adc
and
push
psllq
hlt
sar
and
jbe
scas
ss
xor
faddl
cmp
mov
imul
pop
movsb
imul
rolb
or
aam
add
ljmp
incl
cmp
jmp
sbb
ret
pop
mov
imul
stos
inc
inc
aaa
fidivl
inc
xchg
add
sub
and
aad
push
sub
repz
sbb
call
addr16
gs
jmp
xor
pop
add
dec
xchg
push
jmp
in
lret
mov
negl
sub
dec
xchg
add
popa
stos
cmp
mov
inc
jbe
fwait
mov
dec
cmc
or
sbb
shll
pop
lret
dec
mov
push
sti
stos
push
mov
icebp
mov
mov
jl
sbbl
add
cvtps2pd
xchg
movsl
or
negl
repz
dec
mov
jae
iret
mov
and
rcrb
inc
dec
mov
push
arpl
clc
idivb
lods
sub
push
push
inc
setno
out
and
dec
aaa
sub
mov
imul
fidivrl
fsubrl
hlt
xchg
clc
mov
push
fldl2t
movsl
lcall
das
loopne
jno
and
nop
imul
push
cmpsl
mov
dec
sbb
push
js
stc
nop
fisubrl
jge
shl
pop
cld
mov
repnz
mov
in
push
cwtl
leave
gs
mov
iret
imul
jno
xchg
mov
iret
lds
adc
fs
aam
movsl
ds
ja
sbb
sbb
push
mov
or
inc
jae
mov
ret
inc
inc
ret
stos
pop
lahf
scas
dec
out
jge
sti
mov
movsl
movsl
dec
outsb
add
test
sub
addl
into
mov
lea
cmpb
xchg
inc
testl
cmc
gs
pop
outsl
mov
sub
popf
add
loop
shll
mov
mov
nop
mov
rorl
or
pminsw
rolb
xchg
xorl
adc
add
in
hlt
dec
lods
das
adc
out
outsl
jecxz
and
push
or
lret
stos
cmp
adc
pop
pop
sub
jb
bound
sub
out
pop
mov
scas
sbb
mov
je
fidivl
outsb
adc
dec
jbe
mov
pop
out
xor
int3
les
cmp
fmull
xlat
shrl
and
test
sub
and
popa
mov
orl
arpl
sub
mov
mov
testb
cmpsb
sahf
sti
jae
mov
andl
xor
lds
loop
jge
mul
jg
jge
idivl
ficompl
cmp
sbb
outsb
lods
mov
popa
imul
orl
lock
pop
or
push
loope
mov
leave
mov
pop
xor
cmp
dec
cwtl
inc
arpl
jp
xchg
add
mov
loope
xor
test
cs
leave
cmp
jb
das
add
or
std
out
or
mov
add
cwtl
xor
in
sahf
dec
sbb
pop
hlt
dec
sbb
fs
mov
incl
cmpsl
sbb
add
mov
jl
jnp
les
xchg
cmp
insb
add
shl
fildll
pop
lahf
or
mov
test
push
add
sub
sub
xor
mov
inc
xchg
loope
pop
mov
mov
fwait
pop
jg
dec
xor
daa
pop
push
inc
cmp
fdivrl
push
popf
mov
pop
in
xor
inc
dec
repnz
jno
xor
cmp
daa
add
pusha
roll
adc
fsubl
enter
in
sub
fstpl
dec
cld
push
cmp
test
into
mov
jp
leave
clc
jae
add
cmpsl
int3
mov
pop
int
dec
and
mov
mov
jecxz
push
lock
xchg
cwtl
shlb
mov
mov
lcall
xchg
inc
dec
adc
xchg
call
in
and
mov
adc
push
mov
sub
in
lock
adc
pop
jb
leave
gs
sbb
cmpsb
call
cmp
sahf
sub
or
test
inc
inc
sbb
fldt
sarb
dec
adc
jg
dec
ret
cmpl
inc
mov
add
int3
xchg
test
incl
push
or
test
les
imul
adcb
out
sbb
cmp
leave
call
je
jns
jecxz
mov
sub
ja
push
pop
add
push
xlat
lods
dec
pop
sbbl
leave
add
and
sub
cltd
jmp
test
add
jp
push
mov
les
nop
mov
xchg
dec
jae
sub
les
and
adc
outsb
xor
clc
fs
inc
sti
sbb
jmp
stc
imul
and
xchg
ss
popf
push
jo
sub
arpl
cmp
sbb
fdivrl
xor
cmpsb
aad
xor
lds
lods
pop
push
dec
pop
xchg
dec
aam
popa
ret
rcll
jmp
insl
psrad
add
sub
imul
sbb
pushl
stc
xor
lods
cmp
test
adc
jp
mov
iret
cmp
sub
xchg
dec
mov
iret
test
inc
inc
bnd
push
mov
add
daa
sub
fldt
mov
push
cmpsb
push
jae
mov
stos
ja
cld
jmp
xchg
mov
push
loope
push
scas
repnz
fldl
pop
push
int
dec
ja
jb
inc
or
daa
pop
push
pushf
adc
addr16
hlt
add
and
jne
cld
scas
dec
daa
sti
cmp
and
jae
in
adc
add
xor
out
and
js
outsl
ret
sbb
push
mov
cli
movsl
mov
mov
mov
inc
lret
mov
mull
jne
mov
push
iret
pop
jnp
jo
inc
pop
es
push
sbb
pop
iret
es
pop
mov
movsb
enter
inc
cmp
mov
data16
fdivrl
jmp
rolb
push
mov
adc
imull
rcrl
mov
gs
or
xchg
xlat
adc
movsl
outsl
sbbl
push
call
mov
jp
jno
push
jge
lahf
cmpsl
das
js
mov
mov
jecxz
cmp
popa
mov
sub
mov
dec
xchg
fisttps
xchg
aas
mov
fstl
in
shrb
call
cmp
lret
es
int3
sbb
mov
push
pop
bound
int3
xor
imul
inc
mov
and
popa
es
mov
cli
fnstcw
cmp
or
add
cmp
ss
jae
sub
scas
and
out
scas
in
mov
mov
adc
inc
cs
cs
ljmp
scas
fucomi
cmp
mov
repnz
adc
cltd
xor
jne
lret
add
mov
adc
popa
jmp
cmp
jae
mov
xchg
out
pop
sub
paddsb
push
mov
mov
fwait
and
or
popf
adc
out
mov
insl
cmp
mov
mov
add
cmp
sbb
and
cs
mov
mov
orl
mov
sbb
xlat
std
sub
pop
fisttps
imul
pop
lods
nop
pop
cmp
dec
test
popf
les
arpl
in
lods
jmp
je
jecxz
stc
jge
loopne
mov
mov
sbbl
mov
cs
aas
sbb
aad
out
jb
das
popw
push
aas
cwtl
push
jo
clc
mov
xchg
or
sbb
shrb
inc
in
fmuls
inc
dec
adc
hlt
cmp
loope
pushf
lret
insb
arpl
ficompl
loopne
inc
pop
hlt
orb
and
jp,pn
cmp
ret
ljmp
int3
or
subl
aas
sub
dec
mov
fildl
pop
sub
add
fwait
aad
int3
mov
push
add
xor
cs
daa
and
pop
xor
cmpsb
repnz
addr16
repnz
jmp
out
out
dec
in
inc
jnp
outsb
mov
jns
rolb
xchg
jnp
fisttpll
pop
dec
jl
xchg
and
push
aas
xor
mov
cmp
cltd
sarb
sub
xchg
inc
mov
mov
test
sbb
pop
jp
and
jecxz
xor
xor
je
push
loope
pop
pop
hlt
lea
ficoml
push
test
in
les
insb
lods
ret
or
lea
mov
and
sbb
jns
pop
mov
iret
mov
outsb
pusha
cmp
xor
dec
enter
sti
jnp
clc
jecxz
mov
orl
jle
xchg
sti
sahf
pop
jl
lcall
addb
inc
jl
icebp
push
fs
lds
pop
popf
test
cmpsb
movsl
mov
ret
sbb
xor
loope
xlat
int
shl
push
pop
ljmp
push
icebp
push
mov
insb
leave
or
daa
sub
push
lret
fdivs
dec
sbb
xor
mov
jnp
xor
cmpsb
cmp
dec
pop
loope
cs
add
pop
cmp
hlt
mov
dec
arpl
add
adc
xor
push
inc
inc
lods
pop
xlat
outsl
ljmp
das
mov
sti
enter
cmp
js
inc
adc
addl
test
into
movsl
int3
jb
adc
mov
cmc
pop
push
ds
sub
ret
and
jge
cmp
add
lret
pop
ljmp
adc
xor
stos
into
mov
pushf
stos
push
sub
cmpsl
scas
push
mov
jl
dec
rcl
rcrl
cmc
ret
loop
push
pop
xor
push
fstpl
add
mov
mov
stc
mov
sub
push
sbb
popa
push
mov
add
in
ret
icebp
and
sbb
or
sarb
or
cli
push
inc
imul
mov
xchg
sbb
add
fisttpl
and
cwtl
out
jmp
mov
inc
adc
mov
dec
arpl
mov
or
stos
inc
pop
arpl
push
sarl
mov
das
in
mov
pop
aas
lods
in
xor
fstl
push
and
mov
rcrb
and
ss
sbbb
inc
popa
jl
xchg
pop
fs
lds
adc
cmp
les
push
dec
fldt
and
shl
cld
add
mov
xlat
popa
cmp
pop
je
jne
jp
or
adc
rcrb
insb
stos
xlat
sub
nop
mov
push
mov
adc
into
imul
pop
sub
dec
sub
in
sub
push
neg
mov
sbb
xor
pusha
inc
sbb
xchg
into
ret
out
mov
adc
sbbl
pop
inc
sub
xor
jbe
push
adc
icebp
dec
or
and
out
cld
add
and
test
xchg
jecxz
sbb
movsb
cli
mov
repnz
xor
scas
sahf
mov
add
fcoml
aas
mov
mov
xchg
cmc
or
popa
inc
fisttpl
inc
pusha
and
mov
cmp
sub
mov
pop
stc
sbb
cmc
pusha
cmp
outsb
and
pop
push
out
pop
test
xor
push
sbb
mov
ret
cmp
cs
sbb
cmp
inc
ficomps
popf
mov
sbb
mov
jmp
sbb
dec
int3
cmpsl
insb
and
std
sbb
lea
ret
xchg
mov
lea
loop
and
movsl
xchg
or
and
mov
es
inc
xchg
xlat
arpl
inc
xchg
and
mov
gs
out
pop
cmp
shl
mov
jnp
and
das
jmp
xor
mov
sub
ret
imul
inc
in
push
add
icebp
jge
out
sbb
push
fwait
and
roll
cmpsl
adc
frstor
test
or
shl
cmpsl
mov
jecxz
and
push
in
int3
cmpb
or
out
in
stos
fidivrs
bound
cmovbe
enter
jns
call
xlat
loopne
fidivrs
add
pop
sbb
iret
pop
int3
mov
lds
mov
test
and
jae
sub
xor
lods
push
xchg
or
int
push
cmp
mov
dec
jmp
imul
aaa
mov
imul
mov
imul
rclb
xor
lock
adc
push
in
mov
das
dec
add
inc
jl
add
into
lahf
ffree
les
aas
lock
fcmovnb
stos
orb
out
in
xorb
mov
ret
push
nop
push
jp
xor
subl
je
or
or
rorl
and
rolb
and
out
or
mov
pop
push
adc
push
enter
pushf
mov
and
adc
dec
shlb
inc
call
lahf
cs
sub
outsb
inc
imul
cmpsb
adc
movsl
push
movsb
les
call
cltd
test
mov
ds
shl
cmpsl
mov
or
adc
lret
les
sub
fdivp
sbb
jns
push
cmc
and
je
xlat
mov
popa
sub
inc
addr16
shlb
xorb
aad
movsl
and
xor
sub
adc
movsl
inc
loop
fiadds
xor
pop
popf
sbb
jae
pop
dec
loopne
push
mov
es
mov
xchg
mov
xchg
es
int
icebp
push
mov
out
nop
jno
pop
enter
jae
inc
fisubrs
stos
mov
aas
fwait
sti
js
fdivs
test
push
dec
roll
stos
mov
fisubs
add
test
dec
jnp
mov
adc
pop
xor
aam
push
aas
sub
shr
aam
or
push
jg
dec
loop
nop
into
push
in
xchg
fisttpll
loopne
xchg
dec
or
jl
std
test
add
xchg
adc
in
pop
in
lods
aad
jb
stos
vmwrite
loop
and
pop
dec
or
pop
mov
adc
mov
aad
loope
mov
dec
pop
insl
sub
pop
sbb
les
lods
pushf
lods
push
sbb
jnp
arpl
daa
cld
pop
push
and
aad
arpl
scas
push
shll
cmp
dec
or
fidivs
out
mov
mov
cmp
filds
scas
adc
out
pop
repnz
jl
popa
mov
jae
jg
shld
pop
adc
jbe
mov
das
imul
xchg
popf
cvtdq2ps
add
mov
in
push
pop
pop
adc
sar
loop
jp
sbb
xorl
in
shlb
loopne
ljmp
mov
repnz
sub
cli
cmpl
insl
clc
dec
jmp
lods
dec
ret
bound
or
dec
xor
adc
fs
xchg
js
aaa
nop
pop
in
cwtl
outsl
add
dec
and
push
lds
into
adc
pop
inc
or
lahf
dec
push
es
push
adc
mov
push
pop
or
lcall
xor
leave
jg
pusha
sbb
fldenv
sbb
sub
or
sbb
sub
jg,pn
or
dec
imul
es
push
js
dec
out
out
aas
ret
add
pop
jecxz
dec
jb
pop
xor
hlt
adcb
xchg
inc
add
das
dec
ret
push
dec
aam
pop
adc
or
add
sub
lods
cld
cwtl
inc
shll
push
push
sub
jo
jge
mov
inc
adc
and
clc
mov
lret
push
jne
xchg
lea
lar
call
sub
pop
ret
and
cmp
mov
jo
sbb
add
lods
add
mov
cmp
jmp
push
and
dec
adc
cmpl
lcall
jae
out
add
cmp
cs
in
mov
pop
iret
sahf
mov
int3
inc
ja
pop
fdivl
add
sbb
mov
inc
jno
sti
lock
cmpsl
adc
aam
jae
insb
push
aas
xchg
ljmp
jecxz
or
stos
push
jns
test
loope
sbb
pop
outsl
lret
dec
sarb
cltd
dec
mov
mov
test
cwtl
pushf
out
xlat
ljmp
notb
jmp
adc
and
push
and
stc
into
xor
scas
mov
push
mov
pop
jno
jae
pop
xchg
jae
out
into
rol
repnz
add
dec
lret
insl
jg
pop
in
pusha
test
lock
xchg
xor
divl
xchg
push
nop
xor
mov
addr16
push
scas
adcb
mov
pop
cmp
xor
out
lahf
cmc
inc
scas
shl
jns
nop
hlt
dec
rcrl
aaa
lret
cwtl
dec
dec
dec
mov
and
xchg
adcl
test
pop
push
int
mov
jno
test
adc
fnstcw
in
add
push
lds
xor
movsl
fcompl
add
xchg
into
sbb
addr16
subb
cmp
movsb
dec
jns
js
imul
pop
ret
dec
insl
loop
test
outsb
cli
cs
push
call
cmpsl
stos
lods
mov
push
lds
mov
sbb
das
ficoml
cwtl
jns
out
sub
data16
out
test
xlat
mov
push
dec
push
popf
pop
testb
jmp
pop
jae
mov
mov
add
into
cmp
scas
cmp
fdivs
std
ja
test
cli
shrb
in
jmp
fisttpl
jg
and
mov
pop
adc
sub
cmp
jne
sarl
sti
in
adc
or
cmp
lock
cmp
jns
lods
and
addr16
inc
nop
add
xor
bound
mov
mov
pop
iret
cmp
out
in
xor
das
mov
cmpsb
out
add
and
xor
out
cmp
xor
jmp
aaa
lods
jle
pushf
outsl
xchg
lock
xor
subl
mov
pop
push
lret
and
jns
push
popf
mov
add
mov
sbb
inc
push
shr
loopne
xor
add
mov
push
jecxz
loopne
fsts
xchg
or
mov
sbb
lret
out
or
mov
fdivrl
push
xchg
mov
xchg
cwtl
rorb
sbb
mov
dec
push
xchg
gs
dec
lahf
jne
lret
out
mov
or
dec
add
out
cmp
push
push
sahf
xchg
lods
xchg
popl
stc
daa
and
out
or
je
hlt
popa
xchg
pop
addr16
push
pop
jmp
sub
or
mov
sbb
mov
pusha
divb
icebp
mov
push
cmp
mov
jns
or
and
push
test
ss
adc
jns
test
mov
dec
sub
jle
sbb
inc
das
in
add
fdivrs
push
dec
mov
or
xchg
out
jne
mov
push
mov
or
dec
es
sbb
xor
int3
aam
data16
pop
dec
or
mov
add
or
dec
jecxz
pop
push
inc
pop
pop
cmp
fnstsw
outsl
out
pop
andb
aas
push
arpl
pop
nop
add
mov
stc
jno
pop
dec
fisttps
aas
add
sbbl
popf
scas
add
call
mov
lcall
mov
test
sahf
dec
es
sub
inc
lret
je
and
negl
add
add
or
cmp
sbb
aam
adc
mov
test
pusha
sub
test
xor
inc
lods
cmp
jmp
push
cltd
mov
stos
mov
sar
and
stos
or
aad
fildl
push
jbe
dec
xchg
test
adc
jnp
outsl
inc
sub
push
mov
cmpsl
imul
out
push
imul
hlt
xor
dec
nop
test
std
xor
rcrb
xor
ljmp
bound
xchg
inc
popa
hlt
sar
pop
jmp
call
or
popf
cmp
pop
ljmp
push
lcall
jns
popa
mov
dec
jg
sbbb
cvtps2pi
fwait
mov
mov
jo
or
jg
outsl
push
xchg
mov
jge
sarl
shll
aas
cs
je
push
or
lret
pop
sub
repnz
and
out
jmp
ss
and
dec
adcb
jl
inc
fimull
mov
sti
data16
push
into
sbb
add
jns
data16
in
xor
ret
mov
lcall
aaa
repnz
roll
mov
xchg
popf
push
mov
pop
out
test
lret
pop
inc
xor
out
or
in
add
add
ss
jecxz
inc
lods
insb
sahf
pop
sbb
sbb
sarl
pop
into
enter
filds
add
sub
sub
xchg
xchg
lods
push
mov
insl
mov
dec
inc
pop
mov
ret
dec
cmp
mov
jns
test
jno
dec
shl
jg
pop
pop
les
shll
aaa
cmp
push
adc
cltd
jle
cmp
inc
decl
mov
icebp
and
pop
popa
xchg
fmuls
pop
xlat
push
rolb
btsl
stos
daa
sub
dec
mov
mov
add
in
adc
dec
sti
aam
mov
loopne
js
dec
gs
xchg
in
pop
adc
js
fwait
push
imul
ss
add
mov
mov
test
aas
jb
sti
in
jmp
push
inc
xchg
sbb
mov
inc
stc
lods
insl
jns
fisubs
mov
jl
inc
push
and
or
add
inc
stc
push
xchg
xchg
lret
push
rclb
daa
pop
loopne
mov
loopne
std
out
mov
mov
add
cmpsl
ss
ss
scas
aas
cmp
in
insb
jns
push
mov
inc
popa
es
dec
mov
sbb
mov
int
sub
fstps
les
ss
scas
lahf
fwait
mov
mov
lret
lea
xor
mov
enter
sub
icebp
dec
scas
push
std
or
arpl
mov
mov
mov
shrb
sbb
dec
fimuls
lock
ficomps
ret
fcmovb
lea
inc
push
add
pop
lahf
ds
fisttpll
lock
out
gs
fbstp
mov
mov
arpl
and
movsl
pop
mov
cld
cmp
sub
jbe
push
cwtl
pusha
outsb
das
adc
sbb
xchg
leave
lahf
jecxz
pop
jecxz
rclb
scas
jbe
push
mov
stc
jecxz
jge
and
cmpsb
subb
mov
sarl
or
push
mov
pop
js
jecxz
shll
jnp
dec
movzbl
hlt
mov
dec
and
push
jb
mov
mov
aam
lahf
mov
inc
fsubrs
mov
cmpsl
stos
mov
shrb
sbb
cs
mov
nop
jnp
push
out
jbe
mov
xchg
sbb
je
sahf
mov
out
mov
lock
movsb
sti
sti
popa
shrl
jnp
mov
or
jmp
dec
sub
sub
pop
aas
adc
outsl
mov
push
pop
inc
xor
lahf
mov
fisttpl
sub
cmp
cmp
or
or
push
in
jle
jmp
mov
lock
jle
inc
daa
dec
lea
aad
pop
pop
and
sti
add
popa
out
out
dec
pop
xchg
or
or
repz
lret
dec
adc
mov
ss
sbb
or
jbe
loopne
xor
add
inc
negb
stc
dec
lahf
xor
mov
call
outsb
or
out
ret
imul
lods
sbb
ja
mov
push
lcall
dec
add
movsb
adc
lahf
std
outsl
xor
jmp
arpl
mov
dec
aas
decb
dec
mov
aas
sub
inc
push
int
adc
cltd
xor
push
insl
add
adc
in
fs
lock
jg
cmp
das
mov
pop
lods
xchg
mov
dec
inc
ja
mov
xchg
pop
out
adc
jbe
mov
int3
rolb
push
lds
test
insb
hlt
test
xchg
add
xor
inc
inc
es
cmc
std
cmp
add
fnsave
data16
cmp
xchg
push
test
hlt
push
cmc
jl
fisubrl
mov
xchg
mov
repnz
xchg
icebp
inc
inc
ljmp
or
fwait
loope
xor
dec
daa
jmp
add
push
mov
mov
pushf
fs
or
and
and
dec
pop
iret
jae
js
mov
mov
out
out
fs
js
dec
add
inc
cmp
push
movsl
ljmp
push
xor
or
add
mov
mov
negl
sbb
fcoms
das
xchg
inc
or
ja
mov
mov
push
test
fisubrs
pusha
jge
pushf
push
sarl
repnz
inc
cmp
pop
lods
and
fcmovbe
adcb
xor
mov
ljmp
cmpl
in
mov
jne
aas
cmc
mov
int3
push
inc
pop
sti
mov
or
lods
incl
pop
xchg
xor
je
enter
jmp
cmp
inc
icebp
lods
jns
cs
adc
movsl
ret
lahf
pushf
mov
pop
mov
lea
arpl
adc
sbb
add
pushf
seta
mov
stc
call
mov
bound
into
push
xor
test
inc
xchg
mov
jp
arpl
adc
cmpl
scas
sub
dec
jnp
shlb
popa
popf
cs
add
mov
mov
into
inc
daa
and
int
adc
fnstenv
jae
lahf
outsl
ret
cmp
mov
mov
pop
cld
fwait
addl
jp
popa
push
fisubs
inc
jle
icebp
inc
outsl
sub
in
cmc
enter
sbb
pusha
jg
xchg
mov
cmpsl
dec
jg
sbb
cmpsl
lock
nop
and
sbbb
add
aas
cmp
jo
cmp
xor
inc
xchg
or
fstpl
cli
lcall
dec
aaa
dec
fsts
fstpt
cld
lods
jno
jno
es
test
psubusw
arpl
adc
fwait
mov
pop
xor
outsl
shl
pop
and
jne
xor
and
repnz
sub
mov
jge
sbb
fadds
cmp
dec
imul
dec
or
repnz
lock
fst
xlat
jo
add
imul
xchg
pop
shll
jbe
or
psrad
push
or
push
jnp
or
imul
int
inc
cmp
xchg
in
pop
movsl
fisubl
sahf
jno
mov
and
mov
outsb
inc
cmpsl
mov
dec
sbb
jmp
push
pop
adc
rolb
lods
lods
push
fcoml
mov
sahf
popf
cmp
push
and
sub
adc
inc
lods
jno
xchg
add
mov
lea
cmp
or
xlat
sbb
and
bound
and
mov
lcall
ret
pop
cmp
ljmp
push
filds
pop
lods
mov
rcll
hlt
das
push
lods
jecxz
je
das
xchg
ljmp
pop
les
push
mov
cld
add
push
push
dec
fcmovb
test
clc
les
sbb
ljmp
movsb
fidivs
sti
ja
mov
sub
mov
add
scas
add
pop
rcl
into
adc
iret
hlt
inc
cmc
test
movsb
sub
push
int3
lods
gs
xchg
push
popf
mov
xchg
inc
in
sbb
jge
pop
aas
lock
aad
repnz
or
imul
mov
roll
in
ret
mov
pmaxub
gs
into
or
fucomip
test
fcomp
xor
xor
cmp
inc
ret
outsl
fucom
cmc
divb
push
dec
gs
or
out
and
add
dec
xor
aaa
adcb
out
xchg
pop
jl
mov
call
and
add
repnz
push
add
rol
clc
cs
mov
fmuls
add
dec
cmp
inc
pop
repz
xor
cmp
mov
ret
push
fisttpl
into
inc
shll
out
dec
and
mov
out
lods
sbb
lcall
cli
rolb
cltd
stos
pop
insb
icebp
test
cltd
xchg
or
data16
mov
fisubl
xor
mov
sbb
or
test
mov
add
push
xchg
popa
xor
fndisi(8087
aam
jns
jnp
arpl
mov
pop
adc
lcall
dec
mov
loop
or
xor
add
ret
int3
sub
jo
adc
push
mov
mov
or
lds
cmpl
cmp
cwtl
xor
aas
add
movsb
cmp
jge
or
subl
inc
scas
pushf
fidivrl
call
jp
xor
add
pusha
stos
loopne
or
mull
dec
add
mov
imul
enter
repnz
and
in
popa
ja
dec
ret
iret
push
hlt
mov
aam
mov
ss
out
lret
jb
mov
outsl
movsb
in
jg
xor
les
lcall
pop
clc
lods
push
in
push
test
inc
sbb
jl
imul
dec
sub
cmc
insl
push
push
pop
push
push
sahf
inc
roll
or
and
scas
sub
push
hlt
test
adc
xchg
in
xor
dec
lods
inc
stc
and
add
push
mov
xchg
dec
mov
push
pop
xor
cli
repnz
and
inc
out
imul
push
sub
push
mov
inc
push
test
pop
xchg
or
dec
ljmp
bnd
push
fnstsw
stos
xchg
dec
insb
mov
mov
insb
cmp
push
in
fdivrs
insb
pop
and
xchg
ret
mov
jns
mov
mov
or
push
iret
addr16
mov
lods
xlat
xchg
pop
or
jmp
xor
imul
push
lods
jnp
roll
and
cli
in
test
fisubrs
sahf
inc
mov
adc
in
xlat
mov
out
push
xchg
das
lock
rcrl
js
inc
push
outsl
data16
loope
inc
jbe
jle
sbb
cmp
or
sub
adc
lahf
inc
fistps
mov
mov
dec
xchg
fisttpll
add
cmpsl
or
pop
in
push
dec
aaa
sarl
mov
mulb
cltd
mov
cld
pop
loop
out
or
adc
xchg
xchg
mov
mov
stc
adc
cltd
xchg
enter
imul
cltd
mov
out
imull
test
mov
jg
adc
sahf
adc
sub
add
scas
sbb
mov
mov
js
mov
in
mov
push
fists
mov
je
insb
jb
lret
das
inc
adc
fsubrp
cmp
mov
movsl
or
mov
notb
popf
pop
adcl
mov
lods
and
outsl
testl
inc
pop
js
sub
in
mov
add
aad
insb
icebp
out
fucomp
lods
sbb
movsl
lret
adc
xorl
inc
adc
mov
mov
ja
mov
sbb
mov
pop
xchg
scas
sbb
fists
shl
pop
gs
outsl
mov
push
add
push
out
pop
stc
or
insl
lods
mov
jg
sbb
sbb
out
out
call
popa
sub
je
idiv
xor
xor
inc
je
dec
and
inc
movsb
xor
xchg
ret
mov
fisubrs
sarl
popf
pop
push
push
cmpsb
jg
arpl
pop
pop
pop
sbb
shrl
mov
xor
hlt
cmpsb
sub
scas
call
cmp
out
sti
xor
adc
mov
fld
test
jge
pop
xchg
test
mov
jo
dec
and
push
xor
dec
sti
stc
or
rcll
xor
insb
or
mov
mov
cmc
fs
movsl
stos
mov
sbb
mov
and
mov
mov
push
pop
es
inc
notb
pop
sbbb
fildl
lahf
rcr
sbb
ds
call
cmp
cmc
inc
sbb
inc
xor
js
int
mov
std
ja
sub
hlt
dec
mov
pop
scas
out
lret
imul
lea
lock
inc
mov
pop
fisttps
std
xor
cld
add
das
repz
outsl
add
and
outsl
or
jno
fiaddl
pop
loop
cltd
mov
xor
arpl
in
movsb
imulb
test
mov
inc
mov
sti
in
cmpsb
je
dec
dec
sbb
adc
pop
dec
jne
pop
ds
ficoms
cmp
cltd
shrb
sub
push
sahf
pop
lcall
adc
fwait
dec
in
call
mov
adc
jge
pop
xor
stos
and
mov
loop
test
lret
sbbl
mov
adc
mov
mov
cmpsl
lret
scas
lods
pop
ffreep
and
pushf
lea
push
popa
inc
and
or
xor
inc
adc
cmp
add
inc
sti
xchg
je
lock
inc
mov
addr16
fnstsw
sub
lea
sub
adc
inc
mov
mov
lds
and
into
mov
sbb
aaa
bound
jne
test
in
cmp
aam
lret
sbb
imul
jae
test
cmp
fld
mov
jno
jle
imul
push
pop
add
cmpsl
or
jp
fimull
mov
in
jb
mov
add
ljmp
fisubrs
pop
out
mov
stos
int
movsl
add
stos
xor
je
pushl
das
dec
mov
pop
adc
gs
cli
popa
pop
mov
sub
out
jge
aaa
push
or
jg
mov
rcrb
ds
xchg
ljmp
xchg
loope
mov
mov
mull
xchg
sbb
lds
fsub
mov
flds
outsl
or
outsl
ds
push
add
sbb
cmp
push
ret
inc
call
insl
mov
jp
cmp
jp
inc
lahf
dec
inc
in
nop
das
nop
mov
std
push
clc
fcoms
fmul
xor
mov
xchg
mov
mov
or
lret
dec
dec
fisubrl
adc
sub
dec
sbb
test
ljmp
xchg
pop
and
mov
sbb
dec
jp
int3
clc
lahf
cwtl
fists
push
and
xlat
push
roll
ljmp
cmpsb
xchg
push
cmp
movsl
adc
scas
shll
jb
outsb
mov
int
and
cmp
fbld
sbb
xchg
int3
imul
in
or
lods
test
and
sub
push
in
pop
mov
jne
lcall
xchg
lahf
pop
ja
mov
or
and
push
xor
mov
cwtl
fmuls
loopne
xor
or
pop
lret
mov
jle
jne
or
pop
lcall
adc
pushf
adc
out
pop
fmuls
jecxz
jbe
jg
mov
push
dec
dec
and
addr16
or
pushf
insb
cs
lock
hlt
jnp
push
inc
cmc
xlat
xor
mov
push
mov
xchg
inc
cmp
cmp
inc
aad
loope
sahf
stos
mov
mov
jecxz
xor
pop
xchg
loope
adc
cmp
pop
fwait
jl
stos
fisubs
insb
data16
pop
je
xor
jbe
dec
leave
pop
sbb
cmc
cld
int3
cmp
scas
rol
insl
jbe
in
add
lods
and
pop
pushf
out
imul
subl
jb
int
add
jge
addb
out
dec
or
mov
addb
mov
imul
cmpsl
sar
mov
int
aas
cmp
arpl
lods
or
xchg
outsb
sub
mov
subb
inc
jle
sbb
lods
insb
stos
enter
lret
adc
movl
and
lcall
bound
daa
adcb
jl
jnp
cmpsl
ljmp
mov
sbb
fnsave
sub
loop
lds
push
iret
push
xchg
or
cmpsb
sbb
push
test
mov
push
pop
lret
inc
rolb
and
dec
sbb
pxor
fs
into
dec
scas
jb
testb
dec
push
sahf
arpl
mov
daa
loop
push
cmpsl
cld
fists
popa
pusha
sub
sti
ljmp
test
fnsave
call
das
pop
adc
lea
ret
jl
imul
or
lret
gs
int
icebp
ljmp
popa
pop
andb
gs
das
sub
pop
test
ret
add
add
xchg
dec
xchg
sub
fiaddl
fdiv
movsl
cwtl
cmp
ja
lahf
mov
mov
and
xchg
loopne
add
aam
test
inc
in
sar
arpl
mov
jne
ret
jnp
lods
mov
cmp
cltd
gs
jmp
add
inc
ja
out
out
mov
sbb
mov
add
sbb
push
mov
loopne
jns
pushf
cmp
mov
jl
push
push
sub
or
sub
lods
cs
aam
bound
pop
mov
add
ret
pusha
cmp
xor
ja
dec
mov
insb
dec
rorl
pop
mov
enter
and
cmp
mov
test
inc
sub
and
enter
and
adc
jne
xor
adc
call
rcrl
push
sbb
aaa
sub
stc
mov
das
push
or
sbb
pop
mov
dec
adc
insl
push
das
mov
mov
xor
je
pusha
test
xlat
xchg
clc
pop
frndint
push
sub
push
je
and
cmp
jne
sub
mov
loop
sahf
mov
decl
pop
out
ror
in
es
das
shl
fcmovb
iret
adc
cmc
inc
or
aam
stos
mov
out
cmpsl
push
mov
mov
cmp
jp
aas
and
out
cwtl
and
sub
pop
mov
lret
pusha
pop
mov
mov
dec
pushl
mov
jne
outsb
mov
mov
mov
enter
pop
imul
scas
in
lea
aaa
push
jno
imul
stos
out
jae
and
insb
fcomp
in
push
add
or
mov
outsb
scas
adc
add
and
lahf
es
enter
jge
pop
add
sub
xor
mov
movsl
test
dec
jge
mov
adc
fisubs
mov
insl
pop
les
sbb
cmp
test
rcrl
frstor
sbb
pop
cld
push
pop
jge
cmpsl
dec
push
sbb
push
jne
adc
insl
pop
in
sar
mov
sub
sbb
cmp
vmwrite
outsb
cmp
push
in
inc
pop
mov
xchg
daa
out
dec
in
add
dec
aaa
mov
add
fs
fdivrl
lock
aad
std
xor
shr
call
cmc
pop
jns
clc
or
xchg
mov
xchg
clc
mov
daa
pop
push
fisttpl
sub
jmp
cmpsl
ficoml
into
out
cmp
scas
mov
sub
xchg
pop
pop
and
sahf
loope
pop
in
pop
mov
ret
gs
sti
stos
aas
jnp
aam
mov
fwait
mov
cmp
dec
add
test
or
lods
add
or
and
mov
jl
fistpl
xor
aaa
push
imulb
xchg
adc
das
mov
mov
test
cld
cmpsb
test
adc
iret
decl
mov
test
shl
cmp
jmp
out
add
fbld
cmp
rcll
pop
xchg
sbb
cmp
orl
daa
xchg
jae
push
loop
lcall
clc
rol
nop
leave
push
repnz
add
jo
in
lahf
subb
push
push
pop
sti
in
pop
dec
add
cwtl
sub
in
repnz
jl
stc
pop
cmp
sub
cmp
adc
sbb
jl
xchg
iret
lret
jecxz
and
shlb
jns
mov
mov
loopne
out
add
mov
jo
cmp
push
mov
stos
in
repnz
xor
xor
repz
sti
mov
imul
push
shrb
inc
imul
pop
outsl
sub
xor
adc
ss
je
push
iret
lcall
jne
popf
mov
in
stos
adc
hlt
sahf
movsl
stos
inc
xor
ffree
inc
ljmp
cwtl
inc
ss
aad
pop
test
ficomps
add
pop
xchg
jmp
stc
or
adc
jle
les
mov
push
xor
or
sbb
and
pop
jl
mov
fs
xor
and
movsl
gs
xor
or
pusha
inc
ds
fnstsw
or
inc
xor
mov
lret
js
or
sub
cltd
xor
inc
dec
scas
nop
cmp
fldcw
jge
add
test
mov
xchg
fnstcw
adc
and
cmc
ret
jno
ret
push
arpl
mov
inc
mov
lret
jbe
dec
dec
push
cmp
adc
das
push
int3
push
shlb
roll
in
les
mov
mov
pusha
mov
cwtl
fadds
push
push
pop
enter
adc
xchg
xchg
fidivl
lods
pusha
fistps
sub
sbb
sbb
iret
jge
inc
xchg
jae
sub
push
or
imulb
insb
test
xor
jge
aaa
and
adc
scas
loopne
dec
push
fldt
fstpl
movsl
cmp
mov
and
push
movsl
gs
in
iret
mulb
dec
xor
jnp
inc
popa
je
jb
mov
lds
sub
inc
push
mov
aad
aas
and
push
inc
cmp
ret
adc
aas
mov
jbe
js
sub
jbe
sti
in
loop
mov
mov
ljmp
movsb
mov
and
mov
xchg
mov
push
scas
std
call
pop
mov
jb
mov
push
cmpsb
mov
aas
fldenvs
adc
scas
arpl
inc
ret
jmp
mov
loop
int3
hlt
dec
jp
addl
lea
je
sbb
mov
jo
push
faddl
outsl
jo
mov
fistpll
mov
xor
jne
xchg
enter
push
cmc
into
lret
stos
clc
subl
jae,pt
in
je
inc
sbb
lret
inc
out
stos
ljmp
push
lds
je
adc
enter
mov
in
add
inc
dec
or
mov
pop
jnp
scas
add
fistl
inc
sbb
jle
loope
dec
test
jp
incb
xor
out
jno
push
es
stos
in
pop
std
imul
lds
xorl
dec
mov
fmull
or
add
test
pop
sbb
cmp
popf
repnz
outsb
in
mov
and
and
add
adc
inc
pop
and
loope
pusha
pop
sub
out
jns
inc
mov
push
xchg
mov
mov
sti
ret
inc
mov
mov
out
or
pop
imul
enter
xchg
sub
dec
lods
add
mov
test
fisubs
adc
mov
jbe
cltd
sub
roll
or
test
push
jp
pop
sub
outsl
xor
mov
js
and
and
arpl
mov
sbb
enter
pop
cmp
dec
repz
nop
out
aas
mov
les
mov
int3
scas
jle
mov
or
fidivrl
daa
or
sub
daa
cltd
inc
scas
add
out
mov
push
iret
bnd
sub
lret
iret
mov
in
in
cmp
pop
xor
pushf
imul
mov
jg
push
cwtl
jns
xchg
mov
leave
pusha
cmp
sbb
push
loope
jle
lahf
xor
mov
or
insb
mov
ret
ds
mov
mov
mov
push
stos
add
dec
ret
mov
dec
lods
jge
xor
or
push
lods
jne
lahf
inc
pop
and
and
inc
mov
lcall
add
or
pop
sbb
mov
sbb
xchg
adc
sub
jb
les
push
pop
in
xchg
out
loopne
pop
dec
adc
sti
pushf
push
scas
sub
push
fldenv
orl
stos
fisubl
cmpsb
dec
mull
adc
jl
fcmovnu
cmp
mov
scas
mov
outsb
add
insb
stos
xchg
outsl
pushw
push
add
pop
inc
aas
jp
repnz
stos
cltd
out
nop
pop
int
sub
sahf
mov
jl
in
xor
cmp
sub
pop
movsl
hlt
mov
in
cmpsl
outsl
adc
hlt
mov
stos
adc
jo
mov
inc
push
or
cli
ret
xchg
sub
xchg
fiaddl
aam
shrl
bound
mov
jno
pop
sar
mov
ljmp
insb
mov
pop
fwait
and
or
jecxz
jne
push
xor
movsb
sbb
lock
and
imul
xchg
icebp
mov
mov
shll
std
les
cli
push
enter
pop
sub
movsb
sub
shll
or
fisttpll
arpl
xchg
cwtl
iret
xor
int
insb
sub
jb
sbb
ds
pop
stos
sub
mov
adc
rorb
lock
mov
lock
mov
jo
add
sub
sbb
xor
je
pop
std
loop
cmc
mov
lods
mov
and
das
mov
mov
xchg
es
sub
cltd
iret
xchg
loopne
rcl
les
xor
push
pop
enter
jne
aaa
jmp
cmpsl
mov
shl
adc
lods
and
mov
gs
mov
add
sub
add
push
mov
nop
cli
insl
insb
sub
push
ljmp
sub
adc
sbb
out
xchg
repnz
dec
jle
mov
push
jp
and
out
arpl
dec
scas
mov
pop
push
mov
pop
add
rol
jl
pop
outsb
je
inc
mov
mov
jb
rol
mov
xchg
jnp
push
mov
pop
inc
jle
push
in
dec
imul
sub
sbb
jge
add
icebp
cltd
inc
out
dec
std
pop
mov
xchg
inc
inc
xchg
pop
mov
mov
cmp
mov
enter
xorl
psubq
inc
fs
pop
lcall
int
push
jmp
dec
cmc
mov
pop
cld
out
jg
jo
arpl
jns
mov
add
jne
and
inc
mov
pop
push
mov
cmpsl
pop
out
sbb
or
mov
enter
rolb
mov
outsl
idivl
and
ja
mov
ljmp
cmp
xor
dec
jp
pop
xor
dec
aam
sub
mov
jnp
push
push
jb
and
test
mov
out
cmp
mov
push
jmp
imul
cwtl
in
insb
imul
fdivp
test
xchg
sbb
xlat
cwtl
scas
mov
inc
xor
pusha
or
out
das
xor
xchg
or
mov
addr16
push
mov
out
xchg
xor
xor
ret
add
rcll
stos
rol
aam
pop
and
outsb
mov
aam
je
or
int3
push
mov
sti
sub
out
sahf
data16
pop
pop
pcmpgtw
out
decb
xor
inc
or
mov
or
shll
pop
mov
mov
pop
hlt
xor
inc
sub
not
popf
cmp
pop
mov
aam
imul
cld
aam
dec
mov
enter
sarl
adc
pushf
aad
pop
fs
adc
jecxz
mov
add
sub
dec
jne
inc
cmp
cmp
insb
ljmp
push
das
lds
int
xchg
sahf
movsb
stos
mov
cmc
insl
xor
lea
xlat
adc
aam
mov
jnp
add
movsb
mov
scas
xchg
std
sub
adc
dec
inc
mov
sub
jnp
inc
cltd
test
push
shr
ja
add
xor
in
jo
dec
fptan
push
push
adc
fcompl
ja
jo
pushf
repnz
insl
dec
jg
jns
imul
add
popf
adc
das
leave
sbb
hlt
xchg
popa
sbb
cs
jnp
scas
jnp
mov
sbb
dec
add
icebp
adc
xor
mov
jbe
or
mov
sub
loop
fwait
xchg
mov
loop
pop
rcl
notl
adc
insl
mov
repnz
imul
lcall
jmp
lods
stos
dec
dec
push
inc
int3
xchg
jmp
mov
leave
fwait
ret
push
test
and
je
in
xor
mov
aad
mov
movsb
stc
mov
dec
jl
lock
out
xor
xchg
mov
cwtl
and
loopne
xchg
and
mov
or
inc
jnp
clc
movsl
test
leave
inc
mov
fisubrs
mov
jns
jne
in
adc
dec
pop
int3
stos
dec
mov
xchg
fsubrl
testb
es
or
dec
xor
mov
lods
pop
int3
adc
add
or
jnp
icebp
movsb
jne
xor
push
pusha
or
adc
testl
mulb
or
stos
arpl
jecxz
push
sub
pop
flds
fcoml
jmp
inc
in
popf
cmc
cmc
push
add
add
mov
pop
inc
cmpb
stos
add
out
cmp
lods
popa
fadds
xorb
mov
test
fcompl
das
andb
and
or
int
outsl
sti
pop
or
mov
jg
mov
jns
sbb
add
stc
movsb
rorb
adc
push
jge
aad
arpl
mov
xchg
int
out
dec
pop
ljmp
adc
sbb
mov
lea
and
nop
mov
orl
or
stos
int
out
lock
fcomip
fwait
arpl
popa
xchg
cmpsb
fnstsw
fcoml
mov
aad
pop
mov
shl
cwtl
xchg
cmp
cmp
adc
add
cmpb
in
test
inc
stc
lea
adc
xor
cmp
gs
scas
jl
adc
jnp
mov
icebp
pop
mov
cli
in
jno
jmp
inc
cwtl
cmp
push
popa
adc
popa
sub
mov
mov
dec
mov
inc
jp
sahf
sbb
inc
cmp
jp
jle
out
fcoml
add
inc
lds
test
xchg
inc
jp
xor
imul
pop
xor
pop
xchg
data16
pop
push
mov
add
sub
fadds
cmp
int
and
ljmp
hlt
les
adc
sub
sbb
inc
cltd
out
push
xor
arpl
jecxz
push
xchg
mov
cmp
cmpl
xor
push
mov
enter
cmpsl
je
sub
xor
andb
sbb
mov
push
stc
fwait
or
addr16
test
inc
mov
ss
sub
mov
or
fimuls
in
pop
mov
sti
push
dec
or
imul
add
call
sub
and
pop
dec
xor
shr
add
stos
popf
mull
sbb
aad
cmpl
jae
mov
cmp
fcomp
sarb
cld
adc
out
out
mov
aam
ret
mov
jne
hlt
mov
dec
in
or
mov
add
mov
push
ss
mov
cs
mov
xor
adc
cmp
push
popa
hlt
mov
cmp
int
mov
adc
dec
loop
out
add
push
inc
jecxz
xor
jb
push
repnz
dec
icebp
xlat
xchg
sub
divb
test
mov
fstps
or
xchg
sbb
jae
mov
jae
adc
scas
and
mov
sub
shl
aad
push
dec
sub
lahf
or
testb
sbb
sbb
sub
aad
push
cmp
and
xchg
jae
sbb
xlat
lds
out
daa
and
push
loop
jbe
adc
jmp
sub
cmp
rol
arpl
arpl
test
rclb
inc
cli
jbe
adc
test
mov
fs
enter
int
sub
xchg
sub
pop
popf
and
mov
pusha
lret
test
popf
ret
mov
mov
shlb
dec
dec
or
test
lahf
in
pop
sahf
mov
cmpsl
ja
test
popa
push
mov
lret
clc
mov
negb
insl
sarl
repz
shlb
call
movsb
inc
movsl
sub
mov
pop
lahf
mov
push
lock
mov
sarb
pop
inc
lods
and
test
push
cmp
daa
leave
push
testb
call
push
add
js
aaa
in
xchg
mov
lea
inc
cmp
jg
jmp
inc
jle
adc
aaa
mov
mov
push
sbb
pushf
ljmp
xor
test
mov
add
shl
insl
sbb
push
rcrb
push
dec
mov
sti
popf
sub
dec
mov
lea
mov
lcall
push
xchg
loop
sub
jae
enter
rorl
arpl
outsl
pop
xor
dec
pop
push
scas
test
adc
jmp
andl
lock
mov
sbb
push
test
pop
arpl
pop
jns
jg
cmp
jae
jmp
icebp
pusha
sar
out
xor
push
shrl
pop
das
pop
dec
xor
mull
mov
add
in
adc
adc
xchg
rolb
insb
cmpsb
addl
mov
and
insl
stc
or
adc
mov
out
add
pop
xor
push
repz
xchg
jecxz
fcmovu
negl
inc
andb
and
adc
stos
outsl
int3
mov
inc
das
jle
sbb
lods
pusha
mov
cmp
jmp
inc
loop
jno
in
je
inc
cmp
lds
out
mov
das
and
xchg
and
stc
subl
push
movsb
mov
es
push
scas
test
in
cmp
mov
aad
mov
jo
movsl
adc
fsubs
xchg
and
jnp
xchg
mov
jno
lahf
mov
in
adc
cmp
mov
into
loop
jl
or
and
insb
jmp
cmc
lcall
fistpll
push
jle
dec
pop
push
in
mulb
cmp
inc
dec
sbb
into
dec
imul
xor
jae
jb
cmp
push
mov
shll
adc
pop
cld
in
jmp
xchg
inc
scas
bound
jl
cmc
xor
nopl
call
js
into
lods
cmp
jnp
pop
inc
loop
in
jge
cs
pop
jo
mov
dec
out
pop
jbe
ret
lcall
lods
lahf
inc
and
pop
jp
mov
xor
hlt
add
std
add
add
cmp
lcall
jnp
lret
in
in
mov
add
pop
stos
xchg
dec
lea
xor
pop
mov
add
adc
push
or
into
outsl
out
test
les
cmp
enter
mov
movsb
ds
pop
sub
shlb
insl
jbe
jns
dec
hlt
aad
jecxz
mov
adc
dec
pop
div
popf
sub
lods
fisubl
sub
inc
test
ror
xchg
in
mov
dec
jecxz
jb
orb
stc
mov
cmp
cmpsb
sub
pop
xor
add
mov
cmpl
insl
jae
fdivrl
and
outsl
lods
std
xchg
jbe
scas
or
repz
hlt
mov
and
out
je
imul
lock
aad
shll
jbe
aaa
dec
jns
lods
scas
ret
pop
aam
pop
dec
mov
cmpsb
inc
xor
adc
popa
lds
jp
idiv
rcll
aas
jbe
push
or
push
outsl
xchg
xor
cmp
enter
or
push
aaa
mov
xchg
xchg
pop
or
xor
sbb
int3
xchg
xchg
repnz
movsl
lock
in
cmp
lods
sub
cmp
outsl
or
mov
mov
cld
loopne
out
or
ret
inc
imul
or
cmp
jecxz
mov
loop
outsl
dec
cmc
dec
jp
jns
mov
cmp
cltd
test
xchg
push
lahf
sub
xlat
or
cli
out
jno
and
mov
mov
out
inc
and
jmp
mov
test
push
lods
cmp
loope
in
push
in
cmpsl
jbe
ljmp
dec
push
or
mov
ja
ds
jb
add
jne
mov
imulb
sub
xchg
les
rolb
push
push
in
pop
xchg
xor
jns
cmp
arpl
pushf
test
das
mov
and
shl
outsl
nop
ret
iret
xchg
adc
cltd
sub
cmp
mov
loope
out
push
pop
in
xor
dec
sub
cmp
bound
dec
jle
lods
add
inc
pop
mov
push
int
stos
in
std
dec
dec
leave
xchg
out
xchg
lods
adc
xchg
test
xchg
sub
or
pop
cmc
cmp
iret
in
loope
imul
xor
dec
jbe
jne
ret
sub
movsl
mov
outsl
sbb
xchg
insl
xchg
sub
ficompl
add
icebp
icebp
jae
jecxz
and
fstl
lods
and
jns
leave
cmp
jecxz
cmc
aaa
daa
xlat
xor
mov
push
ljmp
push
leave
mov
jle
mov
lret
dec
lods
sbb
sub
fimull
faddp
test
jle
pop
aam
je
rol
test
pop
scas
incl
lea
mulb
insl
jmp
icebp
or
in
push
push
jns
out
fistpll
jle
cld
outsl
fdivrp
jo
push
mov
mov
loop
mov
cmpsl
jmp
out
mov
pop
xlat
pop
imul
jg
ljmp
rorb
inc
add
add
xor
in
insl
add
jecxz
mov
aad
aad
flds
dec
or
movups
add
cmc
jns
daa
imul
lock
jp
sub
adc
fwait
mov
pop
sti
jmp
lock
push
push
addr16
es
test
std
mov
repz
mull
xchg
lcall
hlt
jmp
cmp
xor
repz
push
pop
mov
pop
idiv
cld
cmp
in
outsl
nop
aad
rcrb
out
ds
mov
mov
out
movsl
mov
shll
adc
test
jo
xchg
pop
mov
sub
imul
adc
mov
push
daa
das
fimuls
adc
bound
push
in
in
cmc
repz
inc
call
sbb
fldl
jmp
xchg
xchg
and
ret
sub
jns
cltd
outsl
mov
xor
push
xchg
lcall
pop
cs
imul
mov
aaa
nop
sbb
sbb
les
outsb
cli
cs
mov
mov
inc
add
lret
mov
and
sbb
sub
dec
stos
push
int
arpl
xlat
adc
adc
or
bound
pop
jb
xorb
add
adc
insl
jle
push
daa
sarl
inc
pop
inc
push
mov
sub
frstor
mov
loop
in
fmull
addl
pushaw
jecxz
cmp
xchg
or
sub
or
stos
stos
andb
jge
dec
fsubs
je
lea
cmp
xor
jae
ss
test
and
jge
xchg
test
mov
stos
mov
or
enter
mov
in
mov
popa
bnd
roll
jge
jle
outsb
mov
jp
xchg
sub
pop
stc
xor
mov
xchg
mov
xchg
insl
movsl
mov
lds
pop
or
mov
jg
push
pusha
test
jae
insb
mov
leave
adc
clc
mov
jbe
xchg
loop
out
dec
sbb
rcrb
cmp
pop
pusha
cmp
test
dec
cmp
push
lods
stos
xchg
fwait
inc
orps
stos
lea
adc
or
pop
jae
decb
fidivs
inc
cmp
in
pop
xchg
pushf
sti
dec
enter
loopne
movsb
cli
adc
shll
pop
jmp
and
out
xor
jne
lret
scas
jno
inc
jmp
or
pop
shl
push
adc
mov
pop
sub
stc
scas
hlt
test
xlat
or
push
out
pop
cmp
sbb
push
cwtl
push
jns
iret
testl
and
or
int3
push
call
pusha
mov
and
lret
bound
and
int3
xorb
xor
mov
adc
repz
sti
pushf
cltd
repnz
pop
sub
pop
dec
dec
mov
je
hlt
dec
mov
push
testl
pop
pop
rol
shll
je
mov
lods
popa
insb
gs
mov
ss
divb
les
imul
nop
pushf
push
in
ss
loopne
lret
iret
mov
cld
mov
pop
pusha
mov
shll
push
pop
cld
cmp
sub
sbb
dec
xchg
push
cmp
sbb
leave
imul
mov
add
call
mov
arpl
icebp
movsl
ljmp
aas
int
es
sub
popa
mov
movsl
cmp
shlb
fnstsw
xor
xchg
fwait
and
pusha
mov
fsts
sbb
ja
xlat
mov
js
lods
testb
sahf
xor
sbbb
cmp
test
mov
iret
imul
pop
ss
movsl
fcompl
xchg
pop
push
cmpsl
ja
ja
and
rorl
cmc
push
int
fbstp
fistps
mov
push
sub
pop
lods
cmpsb
adc
jbe
adc
adc
js
ja
popf
lods
test
pusha
mov
lods
inc
mov
fmull
adc
xor
sub
repz
sti
ja
cmp
imul
mov
dec
and
outsb
pop
das
fnsave
mov
xchg
cli
pusha
addr16
mov
popf
sbb
imul
xchg
cwtl
lret
loope
enter
add
jp
pop
aad
dec
mov
jb
and
mov
ja
dec
cld
outsb
fcmove
mov
movb
cld
mov
mov
push
or
jno
idivl
add
adcb
cmpsb
mov
in
push
mov
add
sbb
inc
shl
fwait
xor
push
mov
iret
mov
xchg
into
outsl
cmpb
xchg
xchg
outsl
int
out
daa
xchg
xor
cmp
pop
sub
jp
push
std
push
cmc
jl
pop
sti
out
fwait
adc
movsl
inc
out
mov
push
jmp
cmc
pop
push
push
and
mov
lcall
int
lahf
lock
jnp
mov
inc
xor
pop
incb
test
cld
int
mov
mov
xor
sbb
jno
test
xchg
push
ss
pop
sbb
sbb
sub
cmp
dec
add
jo
jae
inc
sti
jnp
xor
xor
aas
pop
and
push
fcompl
movl
sub
dec
mov
divb
stos
push
ret
js
icebp
decb
and
sub
dec
push
ljmp
loopne
mov
or
call
pop
mov
lahf
or
lods
sahf
push
lock
lea
or
mov
or
adc
icebp
daa
test
popf
idivl
scas
add
push
sub
cmp
cmp
lret
mov
xchg
xor
lods
fs
aam
aam
or
rclb
enter
add
add
je
imul
mov
sub
inc
repz
cmc
int3
ret
sub
pop
mov
fstpt
adc
and
and
xlat
mov
and
out
scas
dec
mov
jecxz
and
push
push
iret
fmulp
call
xchg
inc
int3
push
xor
adc
or
mov
jp
fs
sbb
mov
js
fdivl
mov
push
push
adc
inc
inc
int3
inc
dec
and
jne
stos
pushf
mov
sub
rcrb
ljmp
loop
mov
mov
fisubl
jle
mov
sub
cmp
sbb
sub
push
es
shlb
in
in
hlt
cmp
adc
mov
cmp
push
sub
or
mov
fwait
loopne
xchg
out
scas
neg
inc
mov
mov
xchg
or
and
sbb
lds
arpl
and
push
shrb
or
push
dec
xchg
mov
sub
stos
lret
in
sarl
test
pushf
js
mov
inc
fwait
pushl
mov
xchg
sbb
decl
push
pop
pop
xchg
push
fmul
into
inc
xchg
mov
or
and
add
mov
xchg
aas
inc
inc
pop
loopne
sub
in
aad
jp
sub
int3
outsl
pop
mov
lods
cmpsl
leave
jle
leave
cmpb
lret
push
push
repnz
sbb
std
sahf
inc
xor
addr16
imulb
sub
or
rcll
push
test
adc
push
jae
cmp
leave
imulb
xchg
cmpsl
out
fstl
mov
jmp
test
rorb
inc
mov
mov
inc
xchg
sub
outsl
mov
sbb
jmp
popf
push
jo
mov
ss
fists
leave
inc
icebp
xor
add
sbb
sub
imulb
not
add
mov
inc
icebp
xor
ja
addb
bound
daa
inc
fiadds
xor
orl
lahf
adc
push
scas
jp
dec
xor
sub
ljmp
mov
dec
out
sub
inc
call
or
mov
cmp
xchg
icebp
sub
mov
jo
sbb
stc
aam
inc
fs
outsb
adc
sarl
into
sbb
in
fucom
jae
jb
mov
sub
jbe
and
test
fwait
cmp
stos
js
cltd
add
ljmp
sub
inc
dec
dec
aam
insb
sbb
push
push
xchg
es
cmp
ret
jp
test
inc
dec
jnp
or
push
pushf
repz
push
dec
fs
sbb
push
mov
les
xor
inc
mov
rep
push
dec
mov
insb
push
inc
insb
mov
test
sub
sbb
adc
aas
jmp
jno
sub
or
inc
add
clc
adc
aaa
repnz
xchg
mov
sbb
mov
xchg
fdivrl
mov
or
push
push
push
jbe
test
imul
cmpsb
adc
dec
pop
fwait
push
fimuls
sbb
in
and
mov
dec
or
sar
cwtl
sub
and
mov
mov
add
cmp
dec
sarb
inc
addl
dec
adc
imul
pop
pop
out
pop
jecxz
xor
insb
xchg
mov
add
aas
inc
sub
cmp
movsb
adc
rcll
inc
cmp
shrl
aaa
lds
lret
popf
lods
cmpsl
test
sub
out
vmwrite
imul
inc
add
mulb
test
movsb
orl
jl
rol
xlat
mov
or
test
scas
push
js
jo
jge
xchg
jecxz
xor
and
into
mov
insb
or
cmp
inc
fsubr
adcb
add
faddl
test
push
mov
push
enter
out
mov
sarb
mov
pop
lcall
repz
pop
mov
adc
outsl
cmp
mov
sub
inc
repnz
scas
out
in
xchg
xor
sahf
xchg
xor
push
jae
and
inc
outsl
cli
insb
sbb
sbb
pop
xchg
xchg
push
mov
into
aaa
popf
lcall
sbb
lahf
icebp
dec
jbe
ss
repz
rcrb
seta
fmull
cli
popa
push
push
mov
add
mov
in
sbb
adcb
sbb
mov
cmc
addr16
push
push
rcrb
push
dec
xchg
xchg
sbb
and
push
xor
and
fnsave
rolb
movsl
or
aad
sti
sub
mov
repz
pop
repnz
cmp
sti
xlat
xlat
pop
mov
inc
pop
adc
out
rcl
lock
jge
aas
gs
xlat
push
fcomip
adc
addr16
inc
xchg
test
ret
sahf
call
int
add
push
mov
dec
cmpsl
sbb
fwait
ret
shl
fimuls
push
loop
iret
dec
arpl
cmpsl
push
adc
push
test
bndstx
mov
test
mov
mov
fnstcw
add
jmp
push
and
push
or
movsb
testb
cmp
iret
mov
mov
cmpsl
pop
mov
rclb
push
jecxz
adc
hlt
push
add
and
xchg
ret
xchg
or
cmp
fsubrs
mov
cmp
and
shlb
faddl
out
cs
gs
mov
insb
cmpsb
and
inc
xchg
xor
cmpsb
xor
dec
push
push
outsb
pop
hlt
push
enter
cmp
pop
fs
add
pushf
mov
adc
xor
lock
fcoms
lcall
hlt
mov
mov
pushf
aam
mov
andb
rcll
sahf
add
and
pop
insb
pop
mov
jg
in
sub
jl
cmp
pop
stos
cmpsb
push
movsb
std
and
in
mov
lods
mov
scas
sti
jecxz
push
es
or
cmpsl
pop
shl
out
mov
lds
mov
inc
mov
xchg
cmp
cmpsb
lcall
xor
pop
mov
inc
and
mov
sarl
cld
out
sub
lret
in
out
nop
mov
cmp
mov
ret
inc
ret
enter
shrl
dec
sbb
pop
sub
popa
or
sbb
jno
int3
rep
scas
add
mov
cmp
call
scas
int
popa
mov
push
inc
add
pop
repnz
dec
iret
mov
stos
push
lret
clc
jo
xor
outsl
jo
xor
aas
mov
stc
mov
pop
shr
xor
jb
pop
mov
movsb
jecxz
mov
data16
xchg
or
call
xchg
jecxz
adc
xor
repz
clc
push
add
int3
xchg
fwait
push
test
fmull
or
mov
sahf
sahf
adc
fsubrs
fstpt
loop
lcall
cmp
and
fidivl
inc
xor
sub
xchg
inc
enter
mov
pop
outsb
mov
inc
addr16
sub
mov
mov
nop
cltd
mov
sbb
and
dec
repnz
aas
mov
inc
mov
rcr
imul
mov
add
addb
push
popa
pop
mov
jle
loop
fs
rcrl
stos
add
pushf
push
jns
xchg
mov
xor
cltd
dec
mov
mov
jnp
lods
lcall
mov
sbb
test
lret
call
fdivrs
pop
mov
inc
out
fs
icebp
rep
cmc
or
mov
pop
in
loop
mov
and
aas
out
mov
call
gs
addb
push
push
cmp
pusha
paddusb
mov
inc
loopne
jmp
xor
add
mov
push
cmpsb
mov
sub
add
jns
xchg
lahf
mov
xchg
arpl
pop
test
sbb
sbb
bound
xor
push
sbb
sub
in
fldenv
sbb
cmp
out
mov
inc
push
test
pushf
pop
loop
cmp
lock
sub
sub
mov
mov
mov
sbbl
cmpsb
mov
sub
jb
mov
inc
aas
stos
sub
aam
test
mov
push
xchg
jbe
pop
fldenv
jne
mov
loope
fldt
mov
mov
or
std
cmp
sbb
test
aas
jne
je
mov
adc
cmpsb
sub
sbb
mov
dec
testl
lods
xchg
xorb
sbb
jl
orl
mov
mov
pop
lock
leave
mov
shrb
lret
mov
push
shll
lcall
dec
ret
push
pop
ds
test
adc
cld
add
iret
push
je
push
clc
xor
fnstsw
or
fbstp
scas
mov
add
or
add
in
push
mov
imul
mov
cmp
gs
add
daa
dec
shll
test
lds
lcall
or
lret
imul
repz
imull
movsb
mov
push
stos
negb
add
popa
cmp
aaa
sub
push
jecxz
jmp
daa
les
cmpsb
jecxz
adc
add
int3
out
push
fbstp
cltd
dec
out
mov
xor
movsb
notb
push
and
rorb
clc
push
sbb
sti
imulb
rol
aad
test
ljmp
scas
or
sbb
insb
xchg
cs
int3
sbb
jg
mov
lea
xor
dec
cmpsl
dec
sub
or
mov
add
sbb
mov
xchg
fwait
cmp
inc
cltd
inc
ret
add
dec
lods
popa
ss
mov
mov
mov
hlt
mov
push
mov
adc
xchg
inc
call
stos
les
xchg
aas
mov
jp
in
inc
push
sbb
cmc
cmp
into
jbe
fcomps
push
cmp
add
push
movsb
adc
pop
stc
mov
sbb
aaa
xchg
js
jp
add
sbb
repz
or
rcrl
mov
mov
lods
aaa
lods
mov
scas
mov
dec
mov
inc
cwtl
cmc
ss
ja
lret
test
add
ljmp
xor
add
inc
add
lods
sti
mov
sti
xchg
xchg
cmpsl
dec
sbb
inc
ljmp
xchg
mov
sti
cmp
lds
js
fwait
dec
jnp
aaa
add
sub
sti
shll
lret
push
sub
jne
shr
push
shll
push
mov
dec
add
xor
pop
cmp
test
loope
push
loope
bound
mov
push
sbb
jbe
fisttpll
popf
lret
lods
push
fdivl
lods
ds
arpl
push
mov
repnz
fwait
mov
jbe
sub
push
pop
and
lock
jmp
xchg
nop
iret
inc
dec
pcmpeqd
sub
push
pusha
out
jbe
lret
test
lods
sbb
sbb
dec
pop
push
add
cs
xlat
mov
jmp
incb
mov
cmc
cmp
mov
shll
ret
scas
sbb
sahf
xchg
and
jmp
mov
lock
icebp
cmpsl
xor
fwait
xchg
mov
mov
imul
es
loop
add
in
add
push
sub
mov
les
test
test
ret
lret
stos
jae
in
fs
ds
pop
push
jbe
pop
adc
inc
aas
xchg
dec
jo
cmc
push
inc
adc
mov
mov
push
push
or
cld
xor
xchg
sbbb
adc
add
shrl
pop
cli
jae
or
aad
jo
sbb
xor
xor
adc
stos
add
imul
lahf
rorl
push
push
lcall
imul
cmp
aas
mov
je
call
push
ja
mov
xlat
fnsave
popf
lea
pop
inc
leave
jg
pop
xchg
xchg
fisttpll
cltd
repz
int3
adc
push
lods
cmp
or
cmp
mov
sbb
shlb
mov
cmp
jo
loop
inc
mov
jbe
rcl
js
inc
add
mov
pop
and
out
cmp
mov
lea
in
xchg
jbe
jne
push
mov
loope
ret
sbb
jg
pop
cmp
outsb
push
out
repz
data16
lods
cmp
out
aam
rorb
mov
cmp
in
lds
loopne
lret
cmp
dec
icebp
das
imul
sbb
cmp
fldl
lds
cmpsb
std
aas
xor
popa
sbb
mov
mov
or
cmpb
test
adc
loope
xor
ljmp
or
adc
loop
imul
xor
lods
mov
popa
or
xor
pop
add
fstps
push
gs
or
pop
dec
fsubr
mov
fisttps
rolb
push
push
sbb
push
sarb
pop
dec
scas
std
fstl
jno
dec
clc
cmp
cmc
mov
sub
test
or
pop
ret
fisubl
leave
test
push
movhps
xchg
pop
cmp
push
ja
sub
adc
arpl
repz
pushl
push
jb
pop
aad
je
jae
lock
imul
dec
ficoml
jns
dec
xor
fldl
jmp
cmp
lret
in
ljmp
popa
mov
gs
jmp
into
or
sbb
cmp
pusha
push
sbb
aam
xor
mov
call
cmp
repnz
test
dec
mov
push
inc
push
int3
iret
dec
iret
int
sub
push
inc
mov
xchg
shrb
clc
decb
or
mov
test
sub
adc
aad
test
std
push
cld
cld
ja
pop
loopne
mov
mov
xchg
cmp
inc
xchg
test
xchg
add
and
out
mov
sti
adc
adc
lahf
scas
scas
rolb
add
pop
out
xlat
cltd
jmp
sbb
mov
sbb
xor
jg
mov
mov
call
adc
rcrb
and
adc
xor
movsl
pop
mov
jecxz
movsl
loopne
xchg
int3
add
out
rorl
inc
dec
popf
rcrb
cmp
ja
xor
ja
push
arpl
and
xchg
sti
xor
mov
test
dec
mov
push
nop
cmc
push
push
js
xchg
mov
dec
jg
fdivl
cmpb
jecxz
adc
mov
sub
jle
or
mov
pop
add
mov
dec
leave
jbe
cmp
inc
pushf
mov
ss
adc
inc
mov
xchg
push
into
daa
aas
and
and
pop
and
xor
cmp
sbb
leave
sbb
loope
shl
mov
shlb
lret
repnz
adc
or
and
lock
push
mov
add
jnp
cmp
cmpb
sub
dec
mov
stos
outsl
shl
add
repnz
push
xchg
mov
xor
push
insb
es
lahf
push
std
pop
jo
pop
push
adc
mov
int
sub
jecxz
outsb
dec
aas
out
jg
lcall
xor
lock
bound
and
pop
test
jo
cmc
and
push
in
and
push
inc
xchg
mov
fs
insb
je
jp
clc
adc
mov
inc
in
rep
shlb
gs
and
and
add
and
xorl
std
lods
inc
dec
cs
mov
pop
insb
sub
gs
nop
mov
sbb
cmpsb
xchg
pop
orb
pop
imul
sub
imul
xchg
mov
in
mov
pop
pop
push
push
out
mul
adc
cltd
inc
push
mov
lret
jmp
mov
fwait
rclb
leave
xchg
push
lret
sbb
adc
subl
dec
lds
out
xchg
cs
xor
sbb
data16
cltd
cld
ret
xchg
sub
addr16
test
lock
and
jle
inc
mov
push
fwait
ret
popf
aam
les
lahf
mov
xchg
sub
testl
dec
lret
cwtl
pop
pushl
mov
xor
cmp
xchg
fwait
and
jmp
insl
mov
cmp
sbb
rcrl
lock
pop
loope
mov
sbb
into
out
xor
xor
mov
xchg
rcrb
loop
jnp
adc
ss
cs
push
push
dec
dec
daa
ret
lcall
aam
adc
pushf
mov
in
xor
subb
jge
repnz
mov
gs
add
dec
int
ret
frstor
mov
cmpsb
add
stos
adc
int
adc
add
jp
daa
sti
inc
pop
xor
and
jo
fnsave
mov
mov
pop
in
mov
adc
lcall
iret
and
dec
rorl
in
push
mov
fs
xlat
inc
or
pop
or
inc
sub
sbb
test
sbb
add
hlt
adc
pop
mov
lcall
push
test
push
aaa
mov
into
inc
sub
cli
popf
jno
sbb
mov
add
pop
lods
stc
mov
pop
popf
fsubr
add
pop
nop
sbb
push
fldl
ret
mov
dec
inc
pop
arpl
insl
add
mov
push
mov
sbb
inc
insl
jg
sub
jno
push
push
rcr
mov
inc
sbb
xor
inc
cltd
lods
adc
adc
cmp
push
rclb
dec
and
das
out
test
add
sub
leave
mulb
insb
dec
mul
sarb
sbb
icebp
imul
xchg
cmp
int
xchg
mov
fcoml
imulb
cmp
roll
push
stos
jp
addl
int3
in
imul
sub
pusha
nop
push
insl
fists
xchg
test
jb
pop
mov
sub
mov
gs
dec
cwtl
mov
xchg
pop
std
or
push
sbb
push
scas
jno
enter
mov
adc
seta
sahf
dec
addr16
jne
jne
push
add
and
inc
push
or
jg
nop
add
adc
sub
jo
ss
jne
lock
jno
in
pop
xor
ficompl
push
inc
insl
jbe
xor
int
adc
add
pushf
hlt
popf
imul
adcb
jno
or
in
adc
hlt
jle
cmpb
mov
dec
testl
inc
push
xchg
out
dec
mov
out
jg
adc
std
ret
subb
rolb
dec
adcl
pop
iret
mov
outsl
roll
cmp
ja
aas
int3
jo
push
arpl
jb
jge
sahf
test
xor
loopne
push
jae
push
lock
cmp
mov
push
xor
mov
cmpsl
sbbb
jge
andl
sub
repz
xchg
xchg
xchg
inc
mov
mov
lcall
adc
mov
mov
punpcklwd
xchg
add
sahf
mov
push
call
loop
ret
xor
fwait
loope
ljmp
ss
inc
lret
adc
stos
test
mov
mov
out
dec
mov
adc
outsl
push
sub
sub
gs
es
cmp
dec
xor
in
fadd
es
ret
mov
ljmp
pusha
testb
mov
push
xchg
mov
sub
inc
sbb
stos
mov
mov
sub
xchg
iret
inc
scas
subb
sub
push
push
cmp
negb
add
in
pusha
sti
xor
mov
inc
xor
cs
mov
fcomi
and
xchg
jns
stc
out
data16
idiv
nop
or
mov
push
xor
mov
loope
lods
jle
out
cmp
push
jg
scas
lock
rcrb
push
mov
cmp
push
call
testl
popa
int3
insl
shll
jb
or
fdivrl
jo
mov
popl
mov
mov
add
push
hlt
push
mov
in
lea
loope
xchg
adc
outsb
xlat
lcall
or
inc
das
push
es
iret
or
cwtl
jmp
adc
ficoml
push
imulb
pop
sub
sbb
stc
popf
movsb
repz
das
sub
or
shrl
arpl
cmp
sbb
sbb
dec
push
jp
ja
arpl
gs
mov
sub
shrb
mov
cld
std
xor
jle
xchg
popf
push
outsb
inc
xchg
nop
add
out
jo
dec
in
push
loope
mov
in
and
mov
push
and
loop
mov
ds
cmpsb
cmp
push
shll
add
addl
nop
gs
testb
mov
ficoms
add
es
push
inc
aad
jle
jnp
mov
add
mov
call
jb
hlt
in
jns
cmp
fsubrs
pop
and
aam
xchg
jb
xchg
sbb
adc
xchg
call
dec
dec
mov
mov
out
fwait
arpl
or
icebp
xor
mov
fcmovb
arpl
pop
dec
jl
icebp
push
pop
ds
ds
add
mov
push
mov
icebp
je
cmp
sbb
mov
mov
mov
xchg
sbb
aad
mov
mov
int
fs
inc
pushf
movsb
cmp
fsubrp
addr16
fcmovnbe
ret
fwait
pop
outsb
jg
mov
jle
push
ja
fs
fwait
or
imul
popa
sub
lods
rcll
sub
adc
push
cmp
nop
adc
fidivl
push
cmpsl
stos
dec
imul
adc
adc
push
scas
mov
in
push
mov
cwtl
test
or
rcll
pop
mov
mov
aam
sbb
sbb
xor
loope
adc
jae
xchg
sub
mov
mov
cmpsb
jp
dec
sbb
ror
cmp
pop
loope
push
popa
pop
call
aad
push
jmp
lret
pusha
out
mov
dec
push
inc
add
stos
xor
addr16
movsl
pop
nop
adc
rorl
sub
adc
pop
inc
push
add
test
cmp
dec
clc
ljmp
mov
test
cs
cmp
jmp
mov
shlb
test
loop
xchg
popa
add
inc
dec
add
dec
pop
pop
fisubrl
test
adc
pop
jb
inc
mov
pop
dec
mov
pop
cmp
xchg
and
icebp
fucom
int
and
inc
adc
mov
sbb
repz
js
inc
mov
clc
pop
sub
les
mov
or
insl
jb
push
test
hlt
clc
push
aaa
sbb
lcall
adc
out
cmp
jmp
lahf
inc
inc
and
loopne
adc
mov
roll
cmp
out
mov
mov
xchg
in
pop
mov
jno
xor
add
xor
jge
jecxz
xchg
sub
jne
cmpsl
mov
push
ja
dec
xor
popf
sbb
pop
jmp
lea
rclb
sub
cmp
push
lret
xor
and
fbld
sub
mov
pop
pop
popa
push
fstpt
je
dec
aad
mov
shlb
adc
dec
popa
insl
push
mov
and
pop
jl
and
pop
xlat
les
lret
sub
mov
pusha
jne
sbb
loope
lea
lret
repnz
xor
std
bnd
ret
push
cmpb
or
xor
pop
sbb
cmp
cmc
xchg
movsb
or
push
mov
xchg
mov
inc
or
in
cmp
cmpl
cmp
mov
dec
jnp
pop
sahf
sbb
inc
xor
or
sbb
jb
outsb
mov
mov
push
mov
lock
lret
shrb
xchg
mov
mov
imul
cmp
inc
mov
push
pushf
test
sub
hlt
repnz
ja
jmp
sbb
repz
sub
inc
pushf
popf
insb
sbb
mov
xor
movsl
jl
mov
xorl
xor
clc
or
adc
xor
dec
pop
xchg
mov
out
icebp
fisubrs
ss
mov
add
fldt
mov
icebp
pop
add
mov
test
pop
mov
das
rol
aam
ret
jo
inc
std
outsl
dec
mov
push
cmpsl
lahf
mov
xchg
movsb
or
addr16
jbe
sbb
das
xchg
xchg
enter
aas
nop
fnstenv
lds
test
xor
xchg
inc
cmp
sbb
sbb
movsl
cli
dec
sub
cmp
pushf
jg
into
pop
loop
or
jge
mov
inc
mov
mov
or
sub
mov
or
jge
push
mov
inc
test
mov
in
aaa
fnclex
popf
test
dec
xor
scas
lods
cmc
ret
daa
or
mov
mov
push
fcmovu
std
movsl
xchg
mov
lcall
push
mov
cwtl
cs
cmp
xchg
mov
push
push
mov
pop
and
push
lahf
inc
xchg
jmp
pop
cmp
dec
sahf
mov
pop
pushl
cmpsl
pushf
lret
repnz
mov
push
pop
pop
push
notl
dec
iret
lcall
psubsb
daa
xchg
scas
popa
xchg
mov
sbb
outsl
mov
sbb
push
xchg
dec
jl
xchg
cwtl
xchg
pop
or
clc
shrb
pop
pop
aaa
rcl
sbb
ds
xor
out
mov
rcl
lret
push
jno
insb
pushf
xchg
or
in
pop
repz
mov
pop
pop
push
in
mov
out
outsl
mov
xchg
call
and
mov
sub
pushf
loop
cmp
sbb
fnstsw
dec
adc
lret
mov
jno
inc
jns
enter
ficomps
fsubs
push
clc
mov
push
ja
cmp
cmc
lods
hlt
push
inc
aad
jge
imul
enter
nop
adc
mov
sbb
enter
arpl
mov
mov
sahf
divl
adc
das
and
push
test
lods
xchg
stos
inc
sbb
fsubrs
adc
pop
dec
loopne
popa
mov
icebp
and
arpl
lret
in
push
aas
sbb
pop
mov
mov
pop
add
mov
or
and
and
mov
and
aas
cltd
push
cmp
les
add
aad
ret
dec
or
movsl
or
or
jle
mov
iret
pop
push
xor
inc
movsl
shrb
adc
popf
cli
and
ror
cmp
xor
mov
xor
rorb
out
rcpps
out
cmp
inc
repz
in
sbb
mov
insl
and
inc
jl
sub
mov
dec
cs
dec
mov
cltd
fcmove
push
pop
lods
add
loope
jnp
mov
int3
iret
xchg
iret
pop
in
jle
cmp
xor
jbe
adc
jno
sub
fwait
pop
cld
rolb
or
adc
lods
mov
xor
jecxz
mov
cmpsb
mov
mov
out
and
imul
ljmp
cltd
add
imul
xlat
pop
jge
in
jecxz
fcmovb
subb
xor
dec
leave
pop
add
push
push
dec
movsb
lods
jmp
mov
xchg
movsb
shll
adc
pop
xchg
xchg
inc
xchg
or
into
pop
push
ret
sub
leave
xchg
scas
or
or
cmpsl
mov
je
call
cmpsl
cmp
imul
push
mov
mov
outsl
mov
mov
int3
nop
pushf
xchg
pop
cmp
sbb
clc
fistpl
mov
cmpl
testb
xor
pop
mov
in
sub
loop
leave
pop
mov
sbb
xor
pop
pop
pop
inc
push
xchg
and
or
int
in
and
jp
push
jb
dec
cmp
xchg
adc
xchg
push
test
xchg
and
mov
cmpsl
lret
daa
push
xchg
test
inc
add
dec
mov
cmp
jp
neg
pop
daa
sbb
out
jg
adcb
xchg
test
scas
enter
sub
adc
sbb
pop
std
outsl
lds
xor
xor
inc
lea
mov
inc
fisubl
push
nop
fwait
sub
push
add
cltd
shrb
dec
mov
jne
adc
mov
adc
mov
rcr
ret
xlat
inc
pop
or
sub
out
xor
inc
jg
aad
lock
jp
inc
xchg
in
xor
or
mov
mov
cmp
mov
and
xor
sti
jmp
push
mov
in
mov
ret
test
fsub
or
adc
xchg
addr16
testl
pop
dec
out
inc
or
jbe
xchg
or
push
cmp
push
pop
movsb
cld
xchg
dec
sbb
mov
mov
pop
imulb
stc
adc
xor
or
pop
ljmp
test
pop
iret
adc
jmp
jmp
jl
ds
push
mov
clc
sbb
mov
sbb
mov
cwtl
lretw
aas
lcall
sub
lock
call
sub
lods
push
imul
outsb
mov
add
lret
lsl
push
mov
pop
dec
lcall
inc
out
lods
adc
sbb
mov
out
sbb
pop
xchg
fists
fiaddl
loop
loopne
test
mov
jp
out
daa
or
xchg
mov
inc
lret
inc
or
xchg
mov
pop
jb
push
xchg
jle
push
les
mov
push
pushf
sti
gs
sub
ds
fmul
and
push
xor
adc
push
insl
cmp
xor
or
icebp
pop
dec
add
icebp
push
inc
dec
or
jge
xor
add
insb
ss
ss
int3
jne
dec
mov
arpl
lret
sbb
out
popf
sbb
xchg
jl
and
test
jp
sub
test
jno
xor
aaa
lea
aaa
cmpsb
pop
sbb
lock
flds
enter
loopne,pt
push
cwtl
add
movsl
xchg
das
push
mov
inc
add
bound
int3
inc
dec
cmp
mov
scas
dec
push
mov
mov
add
pusha
loope
sbb
push
repz
mov
es
mov
push
pop
shlb
popa
xor
sbb
lock
xor
push
jmp
and
lods
or
icebp
sbbl
aad
xlat
or
ds
in
in
mov
mov
push
mov
cmpxchg
stc
scas
sub
add
inc
sub
lock
movsb
push
sbb
inc
mov
pop
xor
mov
mov
xor
es
fxsave
mov
idivb
rcl
mov
cltd
arpl
test
dec
mov
cmp
sub
subb
or
push
pop
test
pop
xor
int
clc
mov
gs
out
loopne
xor
mov
ret
repnz
lds
add
mov
and
nop
icebp
nop
jbe
aas
icebp
mov
adcl
stos
out
dec
push
sub
rcll
mov
aaa
xor
jle
and
cmp
mov
jno
cmc
sahf
outsl
cmp
sub
and
push
lea
push
xor
sbb
inc
sti
jns
into
mov
sub
push
call
cmc
pop
icebp
mov
or
push
inc
jecxz
pop
mov
sahf
cwtl
dec
sahf
repnz
add
sub
setae
gs
scas
orl
cli
xchg
push
mov
xor
sub
rorb
push
add
sub
dec
mov
cs
outsl
inc
pop
jnp
cmp
jne
loopne
xchg
ret
and
ds
lahf
shlb
popf
xor
mov
subb
push
xchg
push
mov
fwait
gs
out
daa
aaa
xor
jb
pxor
inc
jmp
sbb
jnp
push
movl
je
adc
pop
fisubl
clc
jge
sbbb
out
les
add
rcrl
jbe
insb
sub
nop
cs
sub
mov
hlt
inc
sub
sbb
adc
push
or
jecxz
ja
nop
and
or
jb
jecxz
add
imul
and
mov
adc
pop
in
pop
mov
dec
movzwl
or
stos
fucomp
or
fwait
add
insb
xor
dec
loop
xchg
mov
inc
ljmp
jl
and
orl
test
push
jbe
in
fisttpl
sbb
inc
pop
push
fcomps
inc
pmaxub
std
mov
daa
lds
adc
xorb
inc
lcall
shr
ret
xchg
les
push
aaa
push
out
adc
orb
jnp
sub
gs
arpl
adc
mov
cmp
jne
idivb
lret
aam
clc
in
jbe
cmp
popf
outsb
or
pop
jnp
push
fs
inc
int3
xchg
mov
popf
or
loope
popf
and
bound
add
fcmovne
inc
push
int
or
adc
and
jl
setp
adc
jle
push
andl
or
pop
scas
push
inc
adc
dec
mov
pop
iret
pmulhw
int
push
out
popf
push
loopne
xor
int
out
inc
xlat
mov
cmp
or
out
or
pop
mov
and
sbb
mov
mov
hlt
inc
xor
icebp
clc
out
or
outsl
mov
mov
popa
pop
stos
nop
lea
sub
aaa
and
and
sub
inc
call
sub
add
mov
into
rorl
cli
xor
das
jp
xlat
frstor
addl
mov
rcr
xor
sub
xorl
cmp
xchg
insb
pop
push
cmp
push
pop
xchg
rol
inc
sbb
pop
or
dec
fs
jne
pop
fistl
add
test
inc
test
mov
adc
mov
iret
mov
pushf
testb
out
movsb
int
mov
xchg
divb
orl
jbe
jmp
jmp
pushf
repnz
dec
pop
es
test
cmp
adc
adc
pop
and
xchg
xor
cmp
cwtl
ss
icebp
push
hlt
lds
push
out
push
mov
hlt
sarb
jo
lods
enter
push
xchg
aaa
xlat
or
jp
push
mov
xor
inc
pushf
mov
fisubrs
out
dec
xor
sbb
sbb
aas
add
outsb
jg
jb
stc
or
or
gs
and
das
pop
push
inc
jae
xchg
test
enterw
aas
sbb
mov
vmovupd
cli
popaw
in
push
push
add
nop
mov
sahf
rorb
lods
and
jns
jp
cmpsb
addr16
pusha
cltd
xchg
dec
and
fdivrs
mov
mov
xor
mov
ss
pop
dec
rcll
push
or
mov
sbb
sti
popf
xchg
mov
stos
data16
mov
popf
daa
push
test
jbe
sub
sub
cmp
lret
mov
xor
adc
comiss
mov
ret
mov
imul
dec
mov
or
jp
sub
out
mov
pop
mov
mov
fcom
xchg
jae
add
addr16
xor
or
mov
pusha
sahf
xchg
in
inc
mov
mov
jmp
mov
xor
sbb
fidivl
lahf
out
and
pop
int
pop
fistpll
xor
nop
mov
insl
adc
pop
push
add
test
add
jmp
adc
stc
sub
outsb
in
test
xchg
adc
sbb
and
scas
xchg
std
mov
out
mov
out
imul
push
in
sbb
jae
adc
std
mov
cmp
imul
jmp
mov
shr
pusha
push
push
pop
out
push
inc
loop
xchg
sbbb
mov
jb
sbb
scas
add
lcall
shlb
es
enter
and
push
push
insb
sub
dec
or
stc
push
js
fwait
stc
xchg
pushf
jo
sti
int3
jge
mull
adc
test
add
imul
insb
test
sub
sub
jno
hlt
jg
cmpsl
out
add
xor
inc
adc
stos
push
add
aas
dec
ja
bound
sbb
aad
cmpsb
jp
mulb
cmpsl
inc
add
int
aad
xchg
adcb
add
pop
rcrb
mov
jnp
xchg
dec
movsb
imul
mov
xchg
push
mov
stos
in
push
mov
fs
dec
xchg
test
pop
mov
jmp
repz
scas
add
and
adc
shlb
mov
stos
and
sbb
addr16
push
stos
push
and
dec
std
das
into
adc
test
iret
adc
fwait
insb
mov
aam
stc
adc
dec
sbb
mov
pop
out
sbb
out
sbb
stos
nop
cld
or
aad
test
mov
stos
pop
mov
sbb
fdivr
or
mov
lret
out
ja
bound
sub
shrl
dec
mov
mov
lret
xchg
in
lds
in
mov
shl
sub
push
sub
add
inc
test
mov
push
cwtl
mov
xorl
xchg
push
inc
sti
test
pop
aad
xlat
andb
mov
push
pop
mov
jnp
cwtl
out
jg
mov
dec
mov
cmp
addr16
push
and
cmp
xchg
gs
pop
repz
push
mov
mov
flds
pop
pushf
cltd
sub
popf
cmp
mov
and
imul
lret
pushf
leave
out
and
testl
or
icebp
in
cmp
mov
cmp
fidivrl
xlat
jge
jge
xor
hlt
out
adc
jle
or
mov
sbb
into
loope
sahf
mov
inc
addr16
xchg
out
mov
inc
adc
dec
dec
lock
jle
lret
out
xchg
sbb
rorl
or
sub
dec
mov
xchg
das
mov
dec
pop
push
or
into
test
cwtl
jnp
adc
pop
fs
sti
and
xor
or
adc
xor
sbb
stos
mov
lret
adc
mov
push
fcoms
inc
and
inc
fimull
adc
pop
jno
cmpsb
lock
sarb
xchg
ljmp
fcoml
ss
movsb
fbstp
out
inc
push
jne
stos
jno
pop
xchg
pop
rolb
in
cmp
xchg
cltd
mov
stos
add
xchg
push
pop
loope
inc
pop
sub
add
cmp
nop
fbstp
push
jp
dec
ljmp
mov
repnz
imull
leave
cmp
subl
ja
fwait
andl
fsubl
loop
ljmp
test
or
cmp
xchg
mov
in
xchg
pop
mov
popf
loopne
xchg
in
mov
ret
iret
push
das
xor
dec
mov
mov
pop
mov
jl
lahf
and
inc
push
sub
lods
mov
push
or
mov
push
and
test
sub
mov
imul
sub
mov
push
adc
dec
mov
sub
push
and
frstor
push
lock
icebp
stc
xor
add
mov
test
push
in
dec
push
jge
imul
push
dec
fldl
repz
in
scas
push
mov
and
jmp
test
les
xlat
inc
outsb
mov
loope
leave
rolb
cld
add
bound
xor
inc
dec
or
jecxz
dec
mov
mov
test
rcrb
fld
ljmp
popf
adc
pop
out
stc
mov
inc
scas
xchg
or
pop
xor
scas
xchg
push
std
out
aad
clc
sbb
jne
mov
push
int3
ja
and
mov
inc
lds
iret
cmc
cli
cltd
xorl
loop
pop
mov
test
leave
xchg
fisubs
xchg
movsl
icebp
mov
gs
pusha
push
pusha
sub
mov
imul
mov
fsubl
pop
adc
sbb
fistpll
movsb
inc
cli
fsubs
int
addl
mov
or
addr16
dec
icebp
movsl
xchg
lahf
mov
mov
jp
mov
pop
in
pop
pop
out
leave
cmp
pop
mov
je
jmp
dec
mov
ds
xor
and
xchg
repz
in
fistps
out
scas
loop
pop
jae
xchg
pop
xor
ljmp
jne
and
rorl
cwtl
and
and
lods
das
jb
pop
les
sbb
aam
lret
jg
jnp
subl
add
or
pop
mov
dec
out
addl
and
imulw
cwtl
fs
ficoml
movsb
lods
add
ret
mov
mov
std
jb
jbe
jl
inc
mov
test
cmp
and
adc
dec
shr
dec
test
pop
lret
out
mov
jb
fsubs
mov
sbb
fcmove
pusha
cmpsb
pop
dec
nop
outsb
xchg
push
or
repz
stos
dec
addr16
jns
dec
or
int3
pop
xchg
fucomp
test
aad
test
add
cmp
sbb
jg
mov
mov
loopne
add
into
dec
aam
sahf
xor
xor
divl
rcll
xor
push
or
mov
std
cld
fiaddl
popf
out
aas
jg
xchg
addb
roll
inc
out
xchg
lahf
pop
xchg
je
test
adc
sbbb
xchg
divl
dec
push
jle
xor
pop
shrl
mov
inc
inc
xchg
mov
xchg
mov
ret
fcoms
jno
mov
dec
scas
lret
inc
sarb
cwtl
sahf
mov
outsb
jb
or
dec
aad
daa
sbb
sar
or
xchg
jno
adc
fisubrs
xor
in
orl
shll
das
mov
pop
dec
add
jmp
imul
mov
jno
xchg
inc
imulb
dec
inc
shll
mov
xorl
in
les
sahf
loope
sbb
lods
cli
arpl
push
js
fdivrs
push
dec
or
lea
pop
test
jnp
xchg
out
lock
sbb
popa
mov
xlat
rcl
pop
sub
fldl2e
mov
adc
or
adc
icebp
notl
inc
inc
add
cmp
popf
jb,pt
jmp
jo
xchg
xor
dec
sub
add
popl
ret
leave
cmp
mov
dec
xchg
shr
xor
popf
mov
imul
cld
adc
cmpsl
dec
mov
cltd
clc
mov
ds
ljmp
xchg
dec
or
shll
jmp
xor
lahf
outsb
push
dec
jae
or
and
ss
ja
mov
or
jbe
jbe
pop
iret
pusha
push
or
ret
nop
sarb
cmp
sub
xorl
lret
outsl
xchg
adcb
push
cmc
push
out
and
loop
jne
pop
pusha
push
mov
insb
movb
cmpsl
push
test
incl
jb
mov
inc
scas
push
movsl
dec
stos
cmp
xor
mov
mov
stc
mov
hlt
mov
xchg
sbb
pop
in
iret
inc
outsb
or
jecxz
sti
sub
roll
inc
jb
movsb
jg
push
in
jmp
push
cmpsl
dec
dec
adc
mov
lock
xor
lcall
mov
add
das
mov
push
jl
inc
nop
cltd
cmp
sub
xchg
hlt
jne
popf
mov
or
cmp
sbbl
sbb
shl
xor
scas
adc
ja
mov
sub
dec
dec
lods
jl
icebp
sub
xchg
jl
push
pop
push
adc
sub
repz
push
imul
test
sbb
loopne
pop
mov
fistpl
xor
pop
addr16
sub
lret
divb
pop
xchg
or
sbb
out
cmp
cmp
adc
outsl
pop
add
outsl
push
out
sub
mov
jg
sbb
pop
cmp
push
aam
cwtl
mov
orl
pop
mov
fs
push
leave
push
clc
out
fbstp
adc
mov
popl
jbe
mov
sub
sbb
in
xchg
and
add
push
pusha
add
sub
mov
cmp
adc
pusha
inc
mov
imul
popf
xlat
movsb
xchg
add
mul
pop
call
outsb
xchg
addr16
je
pushf
outsl
mov
or
add
or
mov
dec
push
sbb
mov
lret
int
sbb
gs
push
xor
mov
js
shll
xchg
mov
sbb
nop
jle
adc
pushf
mov
push
fsubr
jl
inc
inc
sbb
push
adc
repnz
dec
mov
insl
ljmp
push
or
movsl
inc
dec
mov
xchg
cmp
push
leave
mov
ror
aam
fildl
xor
or
sbb
scas
push
sub
jge
sti
mov
test
push
add
scas
push
jle
sbb
pusha
jno
xchg
sti
cmp
push
loope
and
push
cmc
js
lret
sarl
fisttpll
inc
xlat
pop
ljmp
test
add
add
fists
insl
pusha
sahf
outsb
pop
leave
jne
sahf
ds
outsl
in
int
imul
pop
iret
mov
add
lds
dec
loop
adc
inc
push
imul
pop
jmp
js
rorb
dec
sbb
aaa
and
outsl
rorl
ljmp
jl
ficomps
push
in
cwtl
sbb
je
std
dec
pop
fisttps
leave
push
shlb
sbbb
pop
inc
jecxz
dec
cmc
mov
call
gs
pushf
out
jnp
adc
lret
inc
sub
xchg
mov
dec
test
lahf
ds
sub
in
and
mov
fnstenv
ss
addr16
jno
repnz
add
das
out
cwtl
outsb
out
sbbl
arpl
lea
jbe
pop
scas
loope
push
enter
test
jo
stc
ss
cmpsb
fisubrl
add
idiv
inc
enter
shrl
and
ret
int3
mov
cmp
aas
mov
popa
ljmp
inc
imul
fs
mov
jl
fiaddl
pop
sub
jp
mov
insb
ljmp
inc
das
lock
pusha
add
pop
cmp
mov
test
das
jnp
shll
xchg
pop
cmp
or
in
mov
push
pop
jmp
cmpsb
jb
pop
pop
das
adc
mov
adc
in
push
out
push
cmp
test
mov
mov
push
mov
mov
test
jl
repnz
push
out
xchg
inc
mov
sbb
shll
jnp
data16
aam
cwtl
cmp
mov
or
jae
stos
sbb
xchg
mov
dec
arpl
out
ds
jg
sub
pop
ja
mov
pop
add
cmp
fildl
dec
iret
sbbb
fsubrl
ficoms
out
adc
sbb
adc
rolb
dec
jle
inc
call
push
mov
push
and
adc
mov
sbb
lcall
mov
int
jmp
icebp
mov
aaa
mov
lcall
push
je
cmpl
cmp
shll
adc
inc
cld
stos
jl
lock
popa
xchg
rcr
xor
mov
mov
nop
or
filds
jge
push
js
add
mov
loopne
pop
int
imul
sbb
lea
or
hlt
lcall
ljmp
sub
dec
pop
stos
pmaxub
test
mov
mov
xor
adc
sbb
or
xchg
test
fmuls
mov
mov
adc
adc
dec
fwait
adc
lahf
push
sub
inc
sub
jle
hlt
insl
ret
pushf
jae
stos
inc
scas
jle
shll
xlat
gs
mov
push
jg
or
pushl
cli
loope
fidivl
roll
adc
aaa
aas
cmp
adc
pop
lods
aaa
push
xor
dec
mov
flds
pop
fdivl
rolb
cmpsb
push
xor
xchg
leave
or
fcoml
push
inc
sbb
sub
sbb
test
call
adc
jecxz
push
cmc
sbb
test
push
cmp
xor
fnstcw
or
das
out
push
xor
lcall
fldcw
push
xchg
xor
jne
jae
movsb
imul
fdivl
call
je
lds
add
jns
dec
dec
cmpb
mov
mov
stc
fcompp
cmpsl
cmp
shr
nop
ljmp
mov
push
or
mov
outsb
or
out
popa
mov
adc
sbb
adc
rorb
mov
xchg
add
push
repnz
sbbl
jbe
out
repnz
mov
xchg
cmp
ficompl
adc
popa
out
outsb
rcll
lret
cmpsb
stos
fs
inc
or
jmp
mov
js
fdivs
adc
pop
lods
add
cmc
fiadds
mov
jmp
loopne
jmp
or
movsb
push
and
add
sub
mov
xchg
pop
mov
adc
aam
cmp
jnp
sbbl
mov
cmpsl
add
mov
cmp
fstps
icebp
sub
cmp
dec
xchg
jbe
orl
popa
dec
xor
xor
mov
test
ljmp
loopne
and
push
iret
cmp
les
ret
fcoml
dec
mov
repz
jae
imul
add
mov
pop
sub
xchg
xor
jmp
icebp
xchg
or
fsts
push
shll
sahf
sti
push
faddl
cmp
push
jge
mov
addr16
xor
and
dec
inc
das
cmp
inc
dec
adc
cmp
push
sub
pop
jg
out
loop
push
aas
push
js
and
dec
dec
ret
sub
jge
mov
xor
loopne
sbbl
iret
out
xchg
jb
cmp
lret
fisttpl
inc
jl
sbb
jnp
pop
cmp
and
or
push
mov
mov
sbb
pop
ret
sub
dec
push
leave
sbb
and
jb
dec
sub
std
popf
das
sbb
movsl
shrb
and
and
fs
es
lea
jl
xor
xchg
je
test
fnstenv
fdivl
xchg
or
je
jne
adc
cmp
fwait
out
lock
pop
sarb
pop
cmp
xchg
gs
insb
shll
dec
cmp
jb
sub
add
add
xorb
imul
or
xor
aam
add
iret
jbe
cwtl
jl
out
ljmp
jle
dec
pop
jmp
test
sub
ret
adc
je
jecxz
in
add
je
ja,pn
or
inc
negl
addr16
dec
pop
call
insb
or
mov
or
push
push
adc
gs
scas
aaa
adc
sarl
clc
xchg
xchg
loop
jg
mov
adc
mov
add
inc
mov
xor
jg
sub
and
dec
or
dec
jecxz
mov
test
orl
fisubs
and
std
pusha
sti
sub
cmp
adc
xlat
or
loop
push
aad
xchg
ja
enter
sbb
mov
out
sbbb
pop
popa
jmp
icebp
loope
mov
mov
adc
mov
outsl
mov
dec
mov
push
fs
jecxz
xchg
int
mov
jb
jmp
hlt
dec
add
jb
xchg
out
adc
sbb
loopne
push
dec
ja
nop
jo
insb
das
ljmp
push
lret
jnp
pop
mov
jge
sti
mov
jne
dec
and
add
inc
xchg
push
fstl
test
call
xor
mov
cmc
sub
hlt
mov
pop
lods
dec
addr16
imul
jns
in
shll
inc
pusha
out
insl
int3
popa
leave
pop
mov
and
into
sbb
cltd
jnp
cs
mov
inc
and
pop
fs
mov
std
cmpsl
xchg
cwtl
das
jne
jae,pt
mov
call
sbbl
mov
xor
mov
mov
push
add
xchg
jae
sbb
ljmp
push
fs
xor
sbb
aaa
into
and
cmp
jp
popf
xchg
shrb
psrlq
stc
out
xchg
mov
leave
sub
addr16
mov
dec
sub
sbb
inc
adc
mov
insl
minps
pop
out
daa
inc
cli
mov
jg
mov
repnz
cmpsl
dec
lcall
cmp
call
adc
lock
js,pt
inc
stos
sahf
jg
fs
jg
pop
xor
nop
lods
fnstcw
dec
push
stc
gs
std
int3
mov
aaa
jno
mov
sub
cs
rolb
pop
push
mov
and
mov
ffree
cmc
dec
out
dec
lret
jae
mov
and
test
stos
sub
jne
nop
xor
cmp
mov
sub
loopne
rcr
movsl
ds
inc
or
xchg
arpl
fnstsw
loop
popa
add
xchg
mov
xor
pushf
xchg
out
inc
in
jnp
jb
movsl
cmp
std
in
mov
push
or
in
mulb
jbe
addr16
movsb
into
jnp
dec
clc
ds
into
leave
fs
push
sbb
aad
in
imul
push
mov
divl
jnp
mov
int
xchg
push
push
lret
rolb
xor
mov
pop
enter
mov
cmp
lea
adc
fcmovne
fucomip
loop
adc
mov
scas
in
iret
inc
mov
inc
addl
push
sub
lret
lahf
push
mov
xor
sbb
dec
std
out
or
xchg
not
test
loop
mov
repnz
das
add
sub
jne
addr16
mov
and
mov
xchg
push
insl
xor
jecxz
dec
xchg
stos
mov
cli
pop
xor
jecxz
xchg
mov
xor
xchg
or
cmpl
add
sub
mov
fists
push
or
les
xchg
lcall
jg
mov
and
shlb
push
loope
imul
mov
and
push
getsec
mov
dec
fnstcw
fistps
test
pop
cmc
sar
jo
add
fisubs
jmp
repnz
addl
push
dec
lods
int
mov
imul
dec
fists
push
adc
fcmovbe
andb
aaa
in
rol
mov
inc
inc
rcll
xchg
div
adc
sbb
movsl
aad
and
lcall
fsts
fbld
sbb
rcrb
addl
sbb
sub
sbb
adc
xchg
loopne
add
mov
adc
cmp
add
loop
push
insb
jl
lret
scas
jmp
push
and
es
sbb
adc
mov
sti
out
jno
inc
mov
into
test
and
bound
js
jmp
mov
add
or
mov
mov
pop
inc
and
aam
adc
lret
xchg
cmc
imul
lcall
push
push
inc
lret
daa
ret
or
cld
sbb
bound
imul
mov
add
daa
mov
insb
sbb
orl
or
dec
shlb
push
enter
repnz
or
movsl
inc
mov
dec
out
outsl
add
ficoms
push
sarl
cmp
mov
lods
jl
into
pop
xor
mov
sub
push
push
xchg
xor
push
iret
andb
pop
jmp
mov
jb
aam
rolb
push
and
jb
mov
push
inc
xchg
dec
push
sbb
imul
mov
in
sarl
xlat
outsl
call
loope
dec
je
mov
and
sbb
inc
ss
fnstenv
mov
push
mov
outsb
mov
fistl
or
je
fnstenv
mov
cmpsb
adc
adc
mov
add
pop
add
inc
or
push
mov
cmp
add
jge
jno
scas
lahf
icebp
int
inc
mov
mov
lods
jl
cmc
mov
or
pop
imul
ds
ret
and
xlat
mov
xchg
add
sub
test
andb
push
and
jge
dec
xor
sbb
in
loopne
jns
adc
fsubs
cmpsb
iret
xchg
repz
jns
and
stos
out
nop
push
out
fisttpll
push
and
test
jmp
mov
repz
pusha
je
push
pop
push
loop
xchg
pop
jo
xor
inc
push
mov
cmpsl
mov
fsubr
cmp
inc
mov
or
int3
mov
cmp
xrelease
or
repz
pop
mov
push
push
add
xchg
adc
cmpsb
mov
hlt
sbb
enter
mov
stos
jg
mov
nop
jp
test
addr16
sbb
stc
insb
insb
into
lock
mulb
pop
in
addb
push
inc
push
mov
ret
jae
push
push
mov
icebp
mov
add
sub
out
xor
adc
movsl
call
push
adc
and
daa
mov
and
or
fstps
fdivrp
iret
out
mov
repz
sub
dec
push
sub
xor
testl
jl
ds
mov
mov
mov
in
aaa
jl
xchg
jmp
dec
jno
xchg
or
mov
shlb
in
ss
out
loopne
pop
loopne
inc
cmpsb
popf
dec
xor
scas
lcall
hlt
fadd
out
push
insb
jnp
jno
out
sbb
adc
add
sbb
sub
xchg
fwait
addl
ss
mov
cmp
je
arpl
push
cs
cwtl
out
cmpsl
xor
stos
add
mov
jo
mov
int3
mov
daa
das
xchg
int
or
std
call
inc
test
fwait
dec
pusha
inc
pop
dec
test
out
mov
cmc
das
xor
sti
fcmovb
mov
addl
mov
pop
stc
insb
dec
mov
dec
pop
jle
sbb
scas
insb
and
cmp
imul
mov
dec
mov
sbb
dec
or
into
test
push
add
jmp
dec
stc
repnz
dec
in
das
jp
push
sbb
adc
and
cmp
jbe
shll
cmpl
inc
stos
out
sbb
fwait
sbbb
and
mov
sub
jno
fwait
bound
or
adc
rolb
aas
repz
pop
jge
das
pop
sbb
dec
push
mov
adcl
xchg
sub
xor
aad
push
mull
or
outsb
sub
or
lcall
push
test
leave
lahf
arpl
subb
mov
sbb
das
xor
cmp
fcoml
xor
and
outsl
sub
or
jp
and
push
lret
out
subl
xchg
popa
cld
xchg
aam
xlat
out
ja
sti
xchg
into
sbb
testl
outsl
lret
mov
lea
or
js
mov
aad
scas
mov
jbe
mov
add
scas
mov
popf
stos
repnz
adc
sbb
adc
sbb
pop
xor
fdiv
cmpsb
jne
dec
and
fnsave
fisttpl
xchg
sbb
or
in
sbb
jbe
add
mov
mov
sub
sahf
mov
repz
loopne
sbb
and
cli
pop
and
daa
or
in
repnz
adc
mov
rcr
in
cmpsb
std
jg
cmc
dec
rcrl
imul
adc
add
push
mov
mov
sbb
add
lods
fnstsw
movsb
and
mov
out
sbb
sbb
gs
incl
mov
mov
fisubrl
js
out
xchg
or
adc
dec
call
and
out
imul
mov
inc
je
add
movsb
pushf
pusha
shll
outsb
jae
mov
xchg
push
mov
icebp
iret
fisttpl
and
push
daa
sub
aaa
or
in
jp
add
xchg
push
stos
dec
imul
insl
xchg
je
cmp
and
pop
popf
roll
pop
xchg
push
orb
jbe
ljmp
sti
mov
addl
dec
jns
xor
cmp
xchg
inc
fisubrs
add
fcoml
repnz
inc
dec
es
cmpsb
negl
sbb
jp
jbe
les
jns
xchg
cmp
mov
mov
lea
push
push
pop
xchg
imul
shlb
es
and
addr16
sbb
rorb
xor
sub
scas
jnp
clc
dec
mov
jg
pop
out
jge
std
xchg
data16
andps
dec
inc
repz
jl
or
jae
stc
out
fildll
push
in
out
xor
xor
adc
push
jg
sbb
pop
mov
push
stos
lods
add
lcall
sbb
push
fidivrs
lret
and
mov
sbb
jge
cmp
test
sbb
mov
push
add
mov
dec
cs
flds
jp
ret
roll
or
jb
dec
rcrb
aam
fisubl
test
cltd
dec
andl
push
test
dec
clc
mov
loopne
cmp
and
nop
mov
push
add
fbld
xchg
pusha
pop
mov
cmp
insb
mov
push
movsb
out
mov
and
loop
andb
shll
jns
shrb
or
xchg
sbb
addl
mov
divb
push
mov
fcmovnbe
fs
movsl
in
loop
loop
pop
fldenv
mov
cmp
fdivp
adc
adc
sub
xchg
adc
hlt
mov
subl
fidivrl
jns
cwtl
fs
fs
test
out
push
ljmp
sub
outsb
lcall
in
sbb
add
push
dec
jo
ret
cmp
xor
dec
js
cmp
cmp
dec
mov
jmp
mov
in
dec
addr16
inc
jbe
aam
add
jno
insl
rcrl
mov
push
mov
subb
jecxz
mov
push
and
mov
imul
in
jmp
lock
or
cmc
test
cmp
add
fldt
mov
adcl
xchg
fisttps
jg
pop
inc
leave
or
sbb
cmpsl
negl
fwait
mov
int
pop
push
filds
outsl
fsincos
gs
aaa
inc
sbb
jmp
into
leave
sub
xor
push
aad
popa
sbb
pushf
test
xor
sti
cmp
jp
push
dec
jns
call
pusha
push
mov
dec
mov
xchg
or
loopne
jno
shll
stos
popf
cmp
rolb
add
aas
push
cmp
lea
scas
frstor
leave
push
fmuls
and
sbb
cmp
and
sbb
xchg
scas
or
sub
cmp
lret
std
xchg
gs
cmpsb
add
push
sbb
fbstp
jl
pop
jae
sub
adc
leave
dec
sub
mov
sub
jnp
test
rcll
xchg
pop
inc
push
into
xor
fisttps
add
xlat
jg
jo
test
mov
test
jmp
fldt
mov
inc
decb
inc
pop
push
push
and
shll
arpl
jle
loope
popf
pushf
xor
sbb
mov
jae
adc
mov
jnp
inc
stos
stc
repz
cwtl
mov
sub
pop
popf
dec
push
push
in
test
dec
add
inc
adc
repnz
fcmovnbe
clc
fcomp
into
pop
lret
mov
sbb
cltd
push
repz
cmpl
bound
cmpsl
lock
enter
mov
and
add
sbb
lcall
loopne
xchg
aaa
or
cmp
jno
cmc
fcmovne
mov
and
sarb
push
inc
leave
div
int3
or
testb
rcrb
xchg
mov
pop
xchg
mov
dec
inc
in
fdivrl
or
push
inc
pop
and
or
xchg
dec
decb
mov
cmp
fsubrl
mov
icebp
mov
addl
push
ljmp
jb
clc
pushw
stos
icebp
call
test
sub
add
xor
push
xor
mov
cmp
or
sbb
clc
mov
cmp
inc
fstpt
jae
dec
mov
dec
sbb
test
or
pop
jle
movsl
cs
test
inc
adc
pop
sbb
mov
fwait
aas
fdivs
inc
xchg
ret
nop
pop
jb
ljmp
loopne
addr16
mov
or
das
fdivl
cmc
jae
std
jp
mov
jne
inc
cmp
outsl
cmpsb
lods
dec
lock
lea
mov
sarl
stos
in
jl
es
mov
je
mov
or
inc
pusha
jnp
fcomp
clc
or
inc
dec
aam
enter
out
in
mov
jg
mov
jle
dec
push
or
fmul
pop
dec
push
lretw
scas
es
xchg
test
pop
scas
rcrl
sahf
insl
and
push
insl
into
in
xor
call
sbb
jecxz
fisubrl
clc
int
cmp
sbb
sub
in
jbe
or
loopne
stos
lcall
call
bsr
mov
lcall
xor
cmp
sbb
fs
mov
add
test
ljmp
mov
lds
pushf
or
addr16
pop
ffreep
dec
sbb
dec
inc
xlat
lods
mov
ss
cmp
add
inc
outsb
mov
xor
stc
add
gs
add
xor
and
push
add
fdivrs
cld
inc
xchg
sarb
ja
mov
cltd
and
inc
in
mov
pop
std
sbb
rol
and
inc
dec
bound
inc
xchg
mov
test
mov
loopne
test
orb
xchg
test
sarb
adcl
sub
pop
daa
push
lret
fstpl
pushf
xchg
cld
ljmp
cmp
push
jmp
test
fwait
scas
dec
mov
test
lcall
sub
fldl2e
pusha
data16
mov
and
arpl
lods
cli
leave
ret
std
jno
or
mov
fdivr
cmp
and
mov
mov
or
or
aad
mov
pop
xchg
xor
dec
lods
mov
mov
sti
xor
xchg
cmp
scas
jg
mov
dec
jo
mov
in
sub
jns
dec
pop
push
and
fwait
sub
ss
dec
pop
adc
adc
adc
cmc
dec
aad
cmp
dec
icebp
push
jb
movsb
cmp
ret
push
icebp
ror
dec
outsl
stos
pushf
lcall
call
mov
imul
mov
push
movsb
mov
mov
vrsqrtps
daa
and
xchg
mov
stc
mov
push
ljmp
lock
xchg
push
aas
jo
sub
icebp
inc
mov
data16
roll
insb
push
pop
sub
mov
insl
push
or
jl
jmp
in
xchg
dec
xchg
inc
pop
cmp
push
jnp
imul
lahf
sub
inc
out
jmp
out
cwtl
or
in
and
fcomi
std
push
add
or
and
enter
mov
and
aaa
mov
cmpsb
xchg
dec
cmpsl
mov
insl
jp
cmp
repz
push
xchg
movsl
inc
dec
mov
lret
fcompl
rcll
sbb
mov
loope
aad
mov
jecxz
jno
push
push
inc
or
dec
lcall
aas
pushl
daa
jae
cmp
sub
cmp
dec
mov
jl
rol
ds
fsubrl
adc
cmc
jae
sub
iret
mov
mov
push
add
mov
sbb
mov
mov
cmp
in
scas
ss
rorl
loop
jae
sar
pushw
inc
into
je
notb
gs
or
jb
sub
scas
in
jmp
dec
add
mulb
test
jnp
mov
je
mov
inc
frstpm(287
cmp
xchg
popa
aad
adc
cli
imul
add
scas
rcll
add
rcl
jecxz
and
das
fmulp
sbb
idivb
cmp
xor
adc
dec
fbstp
in
shll
aad
fiadds
push
outsl
adc
nop
ret
lock
jl
out
iret
subw
loopne
int3
out
test
repnz
dec
mov
fs
insl
push
lahf
lods
push
mov
or
arpl
or
xchg
lods
sar
xchg
pop
in
pop
jbe
adc
orb
in
pop
inc
and
ja
jmp
cli
or
push
mov
test
loop
rcrb
cmpsb
dec
outsb
push
daa
cmp
sub
cmp
insl
ds
adc
insb
add
xor
pop
jb
bound
insl
xor
fildl
cmpsb
aaa
out
pop
sub
sbb
jbe
fildl
ret
cltd
mov
pop
stos
mov
mov
les
sbb
mov
insb
lret
or
xor
sbb
pop
push
xor
loope
inc
rclb
inc
lret
and
push
out
mov
dec
sbb
rcll
mov
jecxz
je
je
pop
add
adc
mov
rolb
add
inc
xlat
xor
adc
pop
insl
testb
fisubl
shrl
jl
inc
add
shll
pop
rorb
jno
cwtl
ret
cmp
or
mov
lods
and
jbe
or
mov
cmp
jp
and
rolb
outsb
push
mov
push
cmc
out
xlat
pusha
in
mov
pushf
in
lcall
cld
stos
jg
mov
fiaddl
jmp
xchg
xor
mov
js
call
pop
cmp
jecxz
fidivs
cmp
lock
fcoms
je
adc
sbb
jl
js
lods
add
cmp
jl
cmp
imul
jbe
adc
pop
inc
cmp
jnp
cltd
jns
sub
jp
ja
dec
mov
mov
jmp
idivl
lret
cmp
sbb
mov
aas
outsb
add
jno
loop
imul
and
mov
dec
fsubrs
xor
mov
addr16
pop
jns
and
sbb
gs
outsl
mov
add
std
sub
cmp
mov
icebp
lret
lret
addr16
adc
sbb
das
add
mov
sub
mov
sub
dec
mov
xor
mov
and
jbe
inc
push
imul
ja
in
dec
add
adc
push
xlat
jbe
jg
push
arpl
data16
ja
adc
int
popa
and
sbb
mov
fistpl
sub
mov
or
xor
jecxz
outsb
leavew
movsl
cmp
stos
insl
xor
sbb
mov
insb
call
add
push
add
lods
dec
lock
cmp
mov
jne
cmp
dec
cmpsb
dec
sub
xor
sub
fdiv
mov
cmp
nop
mov
sub
test
jno
pop
mov
sub
testl
and
inc
lea
insb
mov
adc
ret
stos
lcall
adc
not
lahf
xor
cmp
stc
daa
jb
pop
pop
push
out
in
and
xor
repnz
sbbl
mov
jnp
add
mov
mov
test
leave
pop
xchg
mov
sbb
loopne
imul
xchg
shll
popw
add
or
popf
xchg
hlt
push
xchg
push
push
andl
xchg
adc
jge
xchg
cwtl
lock
outsb
mov
jl
mov
cmp
adc
inc
test
sub
add
pop
and
aad
pop
jbe
jmp
rep
adc
test
sub
cmp
push
sbb
push
adc
imul
dec
outsl
mov
decb
jae
jno
add
cli
or
icebp
pop
jle
cmp
fcoms
stc
icebp
adc
inc
push
lcall
rorb
lahf
jo
lock
cld
leave
and
pushf
adc
push
mov
pop
dec
in
mov
lock
sbb
inc
stos
inc
push
enter
cmp
ljmp
push
imul
call
lahf
sahf
lds
lea
inc
jo
xor
repz
dec
mov
je
xchg
dec
inc
sub
xchg
fwait
push
dec
pop
aam
add
inc
outsl
ds
mov
sub
xchg
jecxz
jnp
sub
xlat
adc
sub
lret
pop
ffreep
imul
lds
in
mov
sbb
out
add
ljmp
notb
mulb
and
out
xchg
push
test
sbbb
js
pop
test
in
cli
clc
pop
push
xor
push
push
sbb
jns
sub
cmp
insl
mov
add
fsubrl
sbb
add
xor
sti
inc
cmp
test
lock
mov
popf
movl
out
enter
out
xor
mov
push
push
cmp
mov
nop
or
xor
or
cwtl
xchg
loop
scas
out
mov
andb
sub
xor
inc
add
push
mov
out
pop
sbb
add
cmp
icebp
and
mov
cmpsl
add
cltd
xor
cmc
test
call
mov
push
ja
in
pop
and
arpl
push
pop
lock
jecxz
push
sub
mov
mov
sahf
cmp
jecxz
xor
mov
cmp
xchg
addr16
and
int3
jle
stos
jo
mov
jecxz
cmp
mov
adc
push
iret
test
gs
add
mov
insb
and
inc
or
out
pop
inc
fcomps
mov
cmp
push
lret
jmp
push
data16
mov
pop
push
dec
xchg
out
ud1
in
jo
pop
mov
sbb
loopne
pop
je
popf
popa
lahf
jecxz
notb
cmp
ret
fwait
test
add
js
movsb
dec
cmpsb
in
leave
sub
rcl
dec
add
test
test
movsb
jnp
mov
mov
push
test
mov
outsl
and
adc
sub
mov
imul
push
fcompl
mov
faddp
bound
ja
repz
push
std
les
sbb
or
push
sahf
sahf
imul
jl
test
sub
sbbl
adc
rorl
lea
pop
push
sub
ror
pop
push
pusha
call
enter
call
mov
ss
insb
arpl
es
jp
dec
std
push
jg
adc
icebp
jae
or
or
in
lds
dec
movsl
fcmovnbe
cmp
cmp
pop
push
pushf
data16
dec
testl
pop
mov
jg
cmp
jp
arpl
jno
jge
rorl
inc
repnz
and
das
aam
inc
fisttpl
pusha
and
xchg
addr16
out
fsubp
bound
js
and
mov
pop
jge
cwtl
mov
mov
clc
insl
mov
cmpsl
adc
jnp
pop
rorl
daa
push
insl
mov
out
repnz
jl
xor
xor
dec
std
test
mov
jle
push
jnp
lret
pushf
es
mov
dec
jmp
push
cmp
xchg
pop
pop
dec
inc
xchg
and
fld
lret
int
jge
es
dec
daa
repz
jo
push
int3
ret
fdivr
adc
popf
daa
jnp
je
adc
iret
hlt
repnz
mov
orb
fsubrl
inc
cmp
mov
fldenv
decl
push
pop
lds
jl
iret
mov
sbb
adc
popl
mov
daa
shrl
dec
inc
in
inc
dec
or
fwait
imul
dec
lahf
outsb
test
inc
call
pop
loopne
sub
inc
jmp
dec
outsb
cmpsl
xchg
add
mov
add
outsl
fwait
jge
dec
or
cmp
sub
cmp
icebp
dec
movl
lcall
sti
aam
pop
cltd
movsb
dec
inc
jnp
sub
mov
call
mov
mov
push
lods
repnz
cmp
push
js
aaa
jnp
xchg
cmp
xchg
arpl
mov
mov
cmp
sbb
les
dec
out
or
jecxz
jmp
test
and
fmul
dec
pusha
push
xchg
in
xchg
inc
lods
jnp
add
mov
fsubp
into
rcrb
xlat
ret
mov
sub
add
cmp
pop
adc
jb
and
mulb
aad
xlat
insb
lcall
inc
sbb
sahf
xor
jge
mov
xchg
xchg
xor
push
popa
or
movsl
movsb
mov
push
mov
outsb
or
notl
ss
lret
and
ja
lock
dec
imulb
in
pop
repz
es
std
pop
gs
into
jbe
mov
pushf
mov
jb
mov
ds
rcrb
jp
cmc
fldcw
out
dec
outsb
adc
in
pushf
push
test
scas
add
and
sbb
imul
lods
cli
out
sbb
es
fimuls
mov
imul
shr
or
aad
popf
mov
popf
bound
ret
add
jg
cmp
jno
in
sbb
sti
push
mov
push
cmp
xor
or
inc
xchg
test
into
repnz
ficoms
lods
movsb
add
push
jno
jnp
fildl
fldl
std
xor
sbb
xchg
sub
lea
cmpsb
mov
mov
movzwl
into
imul
loopne
sbb
std
or
ficoml
mov
shll
cmp
out
push
loopne
or
addr16
push
push
cld
jg
push
std
pop
cmp
mov
fcoml
fsub
xor
cmp
cmp
ss
dec
pushf
in
mov
aas
xor
aad
call
rorl
loop
xor
push
cmpsb
stc
inc
iret
add
lds
loope
or
and
mov
sti
out
ljmp
jp
mov
push
out
lcall
pop
ret
adc
mov
push
mov
mov
daa
jo
mov
pop
je
push
push
sbb
int
icebp
stos
push
mov
mov
stos
adc
sub
mov
lods
ds
mov
insb
mov
inc
adc
imul
cmp
loop
jl
cld
repnz
fs
push
push
dec
add
xchg
test
sub
jge
nop
jp
sub
cltd
iret
mov
xchg
stos
dec
fnsave
fstp
push
push
inc
clc
push
ljmp
fucomi
push
insl
mov
mov
adc
loopne
sarl
jp
add
das
in
add
and
dec
mov
dec
imul
cwtl
add
cld
lods
or
pop
aaa
mov
enter
inc
mov
repnz
into
mov
out
cs
sbbb
in
inc
in
mov
cmpsb
or
fyl2x
cmp
mov
xor
mov
mov
add
fs
xor
push
jle
add
cld
push
xor
and
push
mov
lret
daa
xor
inc
xchg
xor
sub
out
jl
gs
push
stos
in
push
vmulss
cmp
pop
hlt
push
sarl
sbb
adc
in
lods
ljmp
in
xchg
mov
and
cmpl
mov
das
adc
sbb
xchg
pop
jge
lea
xchg
cmpsb
add
jmp
jl
repz
jae
and
pop
ret
jnp
lea
xlat
pop
and
mov
sbb
ret
ljmp
xor
in
rcrb
loope
jge
pop
dec
je
lret
call
sbb
test
jmp
aad
leave
and
sub
pop
rclb
xchg
dec
das
mov
cs
mov
add
repz
push
dec
sub
cs
push
testl
push
sarb
and
mov
xor
out
test
jns
jo
loope
sub
xchg
rcrb
cmp
std
sahf
cmc
mov
lahf
or
push
outsb
out
push
pushf
lods
cwtl
jbe
nop
in
mov
or
sub
test
leave
out
arpl
ja
xor
in
into
popf
das
subps
add
pusha
test
and
das
inc
lret
cmp
push
in
xchg
or
sahf
lods
and
cmp
loope
popl
dec
and
lret
stc
xchg
push
int
cmp
push
sar
sbb
test
sub
negb
lret
jbe
popa
inc
pop
mov
pop
clc
insb
push
sub
into
js
cmp
lea
lods
cmp
popa
gs
aaa
jnp
cmc
movb
cmp
fwait
roll
jle
add
pop
cmpsl
pop
add
xor
iret
popa
push
popf
and
pop
sbb
mov
enter
and
push
mov
xor
call
aas
pop
lcall
imulb
pushl
or
and
pusha
je
cmp
cmpsb
pop
push
jecxz
and
lock
in
dec
out
push
sub
add
int3
ret
shlb
ret
jne
fiadds
pop
inc
rcr
inc
sbb
addr16
imul
inc
aas
sub
cmp
pop
test
in
loop
insl
out
aaa
cmc
dec
or
dec
cmc
jmp
jno
ss
testl
fwait
das
std
jle
out
and
fs
push
outsb
xor
lret
cmpb
rorl
mov
pop
popf
sub
add
add
testb
adc
or
lods
inc
arpl
js
je
jp
sub
inc
inc
push
movsb
arpl
orl
loopne
or
push
mov
into
add
imul
loope,pt
fimull
je
push
daa
test
pop
cmp
cltd
lahf
orb
add
mov
inc
cli
mov
xor
pop
lods
adc
scas
sti
xchg
mov
iret
mov
adc
mov
nop
lods
cmpb
inc
ss
jg
ss
pop
cmp
dec
jnp
loop
sub
pop
pop
xor
pop
sbb
cld
out
or
sbb
or
rcl
insb
mov
pop
xor
xchg
fisubrs
mov
xchg
movsl
inc
sbb
test
cmc
sbbl
movsl
jp
mov
enter
fstl
xchg
inc
in
shl
rcrl
mov
fisubrs
lods
movsl
stos
sbb
clc
dec
cmp
and
es
xchg
jno
sub
push
mov
daa
test
sub
push
push
sahf
sbb
jl
stos
lret
pusha
test
dec
ss
adc
movsl
sub
adc
cmc
insb
stos
outsl
lods
dec
push
push
push
push
pushf
cmp
push
std
sahf
pop
loop
mov
add
push
and
lds
dec
ds
pusha
pusha
cmp
arpl
jl
cmp
sbb
es
stos
push
lods
mov
movsl
jge
jae
popf
icebp
mov
pop
push
call
mov
mov
test
add
repz
dec
and
push
orb
lahf
mov
movsl
cmp
insl
push
mov
push
sarl
pusha
into
xor
push
mov
pop
sbbb
fcmovb
arpl
inc
add
push
lods
or
and
cmp
xor
inc
mov
lcall
pusha
loopne
ret
stc
cmp
and
cld
es
mov
add
and
mov
aaa
inc
frstor
lret
mov
adc
sub
cmpsl
push
pop
jnp
mov
aam
and
mov
fbstp
stos
mov
pextrw
dec
cwtl
popa
dec
mov
sbb
imul
into
adc
dec
lahf
gs
ret
in
xchg
or
cmpsb
mov
insl
inc
out
out
inc
jl
xor
std
xorb
lcall
or
or
movsb
mov
jl
rclb
jnp
stos
mov
out
andps
inc
and
inc
or
mov
sub
xchg
push
push
mov
js
xor
xlat
ret
jno
fmul
fwait
sbb
and
andl
scas
push
pop
icebp
repnz
fwait
orl
addl
andb
mov
aam
push
mov
push
pushf
lret
jg
mov
mov
repz
xchg
inc
cmp
pop
cmp
or
and
hlt
ss
int
dec
ret
insb
push
pusha
sbb
int
pop
pop
xor
dec
xchg
pushf
push
leave
icebp
bound
icebp
or
push
cmp
roll
out
jle
out
and
mov
je
scas
insl
movsb
ds
xchg
pop
sbb
mov
ss
loop
mov
cmp
pop
mov
scas
fwait
ss
enter
jo
call
pop
ret
or
fstpl
mov
sub
out
inc
fsubrp
push
and
loopne
jge
fwait
jns
outsb
pushf
outsl
mov
mov
dec
scas
xchg
push
aas
sub
scas
divps
pop
out
mov
mov
lock
repz
pusha
bound
shr
add
imul
sub
cmp
pop
mov
mov
mov
jns
add
inc
ss
jne
pop
mov
dec
xlat
jge
jp
lea
push
jecxz
hlt
mov
ljmp
aaa
or
cmpsl
pop
cmp
sbb
jbe
aam
inc
mov
mov
adc
data16
rep
add
fmull
mov
mov
mov
pop
test
and
xchg
xchg
mov
xchg
cld
fmuls
push
lods
in
das
iret
inc
mov
cs
lcall
addr16
int3
mov
ret
mov
loope
or
push
mov
pop
in
cmp
push
arpl
test
sbb
fldpi
mov
mov
sahf
cltd
mov
mov
int
repz
fadds
sti
jecxz
cmp
daa
cmp
jp
pusha
jg
jb
mov
testl
dec
pushf
push
cmp
std
fwait
jnp
outsb
scas
xchg
mov
mov
dec
cmc
and
lret
icebp
push
fisttpll
pusha
lret
xchg
lret
add
and
lds
aaa
mov
adc
or
jmp
sub
nop
mov
mov
call
outsb
jo
loope
jno
adc
jne
and
jp
or
sbb
cltd
jb
in
push
pusha
add
subb
js
xor
dec
xchg
ret
pop
pop
cltd
mov
adc
subl
imulb
mov
mov
xor
xorb
imul
pop
popa
push
jns
jbe
stos
push
in
lret
jg
inc
movsb
xor
test
jo
imul
or
or
and
test
lret
mov
cld
mov
imul
ret
fadd
imul
jae
add
call
inc
inc
int3
or
cmp
cmp
test
push
pushf
stos
lcall
cltd
rcll
movsb
ja
sub
mov
xchg
repz
jge
jmp
cmp
inc
outsl
in
pop
fisubl
sbb
call
daa
adc
scas
frstor
jno
clc
jno
mov
pop
lret
mov
push
lret
loopne
pushf
js
dec
cs
je
push
adc
xchg
lret
dec
imul
out
sub
fiadds
data16
adc
ret
lods
pop
mov
mov
sbb
stos
push
xor
and
lock
insl
jle
sbb
lods
dec
mov
mov
out
sub
insb
movsb
pop
dec
mov
push
out
mov
add
out
fisubs
mov
std
mov
xor
pop
loope
rolb
fiaddl
addr16
std
jno
add
push
inc
sub
jb
outsl
subb
sbb
insb
jns
push
jg
and
fidivl
sbb
mov
orl
pop
inc
sub
cmpsb
xchg
jo
push
stos
mov
stos
or
outsb
pop
in
data16
repnz
fdivl
js
gs
mov
dec
cmp
push
outsl
mov
adc
pusha
enter
and
int3
fnstenv
fimull
mov
push
incb
pop
imul
popa
push
nop
es
hlt
jp
push
cmp
andl
popa
lret
ja
xor
pop
push
ret
jae
mov
sub
xor
mov
sub
ret
mov
lahf
enter
lea
lret
js
cmpsb
ret
add
pop
clc
fmull
test
pushf
jge
imul
dec
pop
jp
ret
pop
mov
mov
clc
aas
in
cwtl
jmp
cmp
or
popf
add
push
repz
call
sbb
add
xor
mov
inc
out
sarl
add
lock
int3
jecxz
popf
cmp
pop
stos
xor
mov
shl
sbb
sbb
jnp
ffreep
ljmp
mov
in
icebp
out
inc
dec
lret
nop
jle
in
dec
pop
sub
dec
cmp
lods
inc
lahf
xlat
in
ja
jne
cmpsb
dec
cmpsb
mov
frstor
in
or
dec
bound
lds
les
xchg
imul
push
fmuls
cmp
into
fucom
and
add
jo
push
std
mov
mov
push
movl
mov
int
pop
stos
cmp
sahf
jne
and
test
xor
daa
test
pop
pop
addr16
lahf
sub
cmp
dec
jmp
push
mov
repz
daa
jmp
inc
iret
adc
enter
nop
xor
call
and
hlt
in
push
mov
bound
sub
adc
cmp
fwait
arpl
push
adc
mov
jp
add
aam
add
imul
jg
pushf
test
jecxz
mov
sbb
sub
xchg
addr16
jg
test
push
mov
out
cmp
ret
or
pop
and
inc
cmp
incb
or
pop
mov
jb
mov
push
testb
test
jno
cwtl
jp
pop
mov
xchg
ret
cs
push
push
sti
ret
inc
xor
xchg
jb
in
loopnew
xchg
out
mov
lea
pop
mov
fwait
lods
inc
mov
mov
aaa
loope
stc
xor
add
iret
sbb
mov
jae
adcl
roll
and
push
fcmovne
mov
mov
shr
lea
xchg
jno
sub
cmp
movsb
sbb
mov
ret
popa
pop
push
ja
pop
pop
ds
icebp
inc
jne
ss
fcmovne
insl
ja
pop
mov
cmp
add
bound
xor
add
mov
es
into
aam
js
xchg
or
out
xchg
fisubl
dec
pop
pop
jmp
jb
sbb
ret
mov
pop
xor
jg
adc
pop
inc
pop
mov
clc
das
lahf
sub
pop
cmp
repz
inc
sub
adc
and
iret
jne
push
aas
xchg
pop
push
es
cmpsb
aaa
cmp
and
fsub
aas
call
xor
mov
push
cmp
in
add
inc
adc
ficoml
leave
bound
lret
sub
fwait
inc
ljmp
jns
iret
stc
push
movb
sub
out
add
stos
xor
ljmp
or
lock
test
inc
iret
xchg
mov
jns
mov
dec
mov
jne
xchg
shrl
mov
mov
movsb
inc
sarb
mov
add
inc
mov
dec
fcompl
enter
xor
outsb
xchg
mov
cmp
int3
call
pop
repnz
ja
clc
mov
xchg
stos
stc
mov
inc
mov
filds
push
inc
repnz
cwtl
les
dec
xchg
sub
mov
xchg
mov
enter
out
loop
test
pop
adc
and
stos
jb
orl
pop
cmp
adc
mov
mov
cli
push
cmp
inc
inc
ret
loop
movsl
call
pop
shl
mov
pop
jne
aaa
cmp
fistps
int
pop
jge
repz
ret
aam
frstor
add
pop
movsb
jg
mov
cmp
std
dec
pop
inc
lods
test
cmp
and
mov
push
gs
inc
lcall
adc
lods
sub
xchg
or
xchg
jmp
leave
or
pop
fcompl
inc
and
xchg
add
fstpt
addr16
mul
sar
mov
lahf
js
mov
fs
inc
fists
ret
cli
aaa
xor
inc
sbb
test
rcl
je
rcr
into
or
and
mov
sub
outsb
dec
mov
jmp
clc
loope
cld
lds
sub
test
adc
adc
call
popl
gs
push
js
icebp
xchg
mov
inc
jbe
ss
push
je
push
jb
xor
insl
lret
jns
pop
cwtl
cmp
addr16
scas
adc
mov
lea
mov
pusha
sbb
insb
ja
fdiv
pop
xor
mov
xchg
insb
xor
out
cs
sbb
repnz
cmp
enter
sarl
pop
mov
mov
inc
les
cmp
in
lret
adc
cmpb
loope
jb
add
sbb
cmpsl
stc
pop
mov
sub
or
enter
pushf
idivb
or
cmp
mov
shl
pop
push
rcrb
bound
inc
jb
xchg
jnp
loope
add
pop
test
sbb
sbb
jp
pop
push
jo
mov
test
inc
pop
daa
pop
stos
dec
sbb
sub
es
in
cmp
int3
xchg
sub
adc
inc
popf
cmp
jl
and
dec
test
mov
or
lret
pop
ds
and
or
inc
lds
ja
aad
int
out
jp
mov
xlat
xchg
mov
add
inc
mov
pop
sbb
js
fsubrl
sub
and
inc
xor
iret
je
push
fmul
aad
dec
fcoml
sar
popa
adc
xor
xchg
and
je
test
jnp
test
mov
in
leave
cmp
popa
shr
imul
sub
sti
push
jo
aad
out
andl
andb
aaa
fstps
pop
insb
data16
push
push
inc
js
adc
adc
xor
pushf
cmp
test
xlat
int
sub
jmp
push
out
mov
rolb
lcall
mov
dec
cmp
dec
mov
dec
aad
in
sbb
bound
jp
jecxz
movsl
push
test
out
xor
cld
inc
repnz
dec
cmc
fiadds
mov
jnp
shl
and
neg
imul
mulb
adc
xor
sbbl
stos
push
add
repz
xor
pop
clc
mov
dec
or
xchg
push
jecxz
je
mov
inc
popf
scas
lock
cmp
je
andb
xchg
arpl
xchg
mov
call
push
pop
sub
lea
insb
into
sti
push
movb
mov
pop
or
inc
add
arpl
sbb
lds
cmp
sub
outsb
jmp
or
in
fcompl
mov
shll
mov
pop
jp
sbb
pop
pop
hlt
adc
cmpsl
and
faddp
je
bound
sar
sub
jbe
pop
fmull
sbb
es
aam
test
dec
psadbw
lahf
shrb
xchg
cmp
out
and
aad
daa
lods
loopne
push
push
popa
mov
enter
aam
and
xor
or
icebp
xchg
scas
add
or
dec
mov
out
movb
push
das
ljmp
test
insl
and
dec
sbb
lds
int
sub
mov
es
xchg
test
mov
dec
lret
dec
xchg
icebp
in
push
shll
mov
mov
roll
or
rcll
roll
or
cmp
add
arpl
sarb
test
loop
xchg
jbe
push
inc
fbld
insl
xchg
inc
in
pop
jo
sub
mov
mov
jge
dec
in
and
pushl
add
dec
jnp
sub
adc
shl
adc
popf
aam
arpl
pop
repz
es
push
movsb
stos
and
aam
aad
stos
cmpsl
movsl
mov
sbb
xor
xchg
xor
in
repnz
out
inc
sbb
addb
mov
fs
arpl
mov
dec
in
fsubs
nop
aas
mov
pop
in
xor
xlat
or
add
mov
or
jmp
cmp
push
or
jb
out
leave
add
mov
ljmp
inc
ja
and
negb
inc
or
mov
sahf
mov
xchg
jb
lret
fiadds
orb
mov
adc
pop
in
inc
xor
sbb
pop
fisttpll
cmp
add
stos
inc
mov
mov
lcall
lret
clc
inc
mov
inc
inc
mov
in
pop
lret
mov
jp
rclb
ret
test
testl
ja
xchg
jg
fwait
jl
add
movsb
popf
movsl
dec
seta
shll
pop
fdiv
mov
add
mov
pop
int
lret
xor
lock
and
xchg
jl
decl
push
or
mov
dec
int
xchg
cltd
imul
xchg
mov
into
cmp
xor
xlat
rcrl
push
mov
push
jns
fimull
imul
xchg
movl
push
push
fwait
jno
sbb
adc
dec
lock
adc
mov
and
and
inc
jns
xchg
leave
mov
add
cmp
cli
dec
arpl
adc
mov
int3
sbbb
add
push
push
das
xchg
jno,pn
rcl
mov
xlat
push
jge,pt
xor
imul
repz
pop
cmc
and
xor
or
and
lds
test
xchg
pop
lcall
in
mov
outsl
fcmovnu
adc
xor
inc
outsl
xchg
in
jnp
cs
mov
push
outsb
mov
fsubl
push
jb
cmp
xor
fisttpl
pop
aam
loopne
add
xlat
dec
inc
mov
decl
leave
mov
pop
push
outsl
push
mov
lods
cmp
and
in
mov
sub
jg
mov
inc
lret
icebp
jmp
adcb
call
loopne
cmc
jp
js
lret
insl
and
scas
push
cli
dec
mov
repnz
int
aaa
das
fs
dec
in
int
inc
xlat
lods
sbb
pop
mov
adc
scas
sub
pop
movsl
jnp
mov
mov
out
add
cmp
fistps
xchg
rcrb
cmp
sub
xor
jp
imul
daa
push
pop
sub
adc
or
imul
sub
je
out
add
sarl
jg
shlb
dec
cmp
adc
xchg
xor
negl
nop
xor
xor
aas
inc
jno
xor
fcomip
sbb
xchg
repnz
sbb
push
insl
fs
mov
mov
pop
jne
icebp
mov
inc
loop
and
frstor
jl
or
or
stos
in
pop
push
ret
jmp
into
mov
pusha
and
test
adc
rcl
mov
jp
mov
jne
test
push
adcb
xchg
adc
or
and
bound
aaa
push
testb
xlat
data16
aas
mov
mov
pop
and
mov
adc
popf
sbb
push
out
mov
jnp
sbb
repz
sub
xchg
xchg
sahf
adc
imul
inc
mov
into
xor
add
imul
movsl
push
pop
stos
leave
sbb
mov
enter
or
aas
pop
mov
inc
fidivs
insl
std
mov
ss
popl
je
xchg
rcr
sahf
xlat
mov
pushf
dec
jbe
ja
adc
jae
gs
hlt
leave
add
mov
xchg
mov
hlt
mov
test
out
lahf
stos
sbb
pushf
pop
inc
mov
mov
ret
pop
push
test
into
cli
popf
scas
rorl
fistps
jno
or
movsb
sub
ret
and
add
sub
enter
in
adc
cmp
lahf
insl
mov
mov
add
xor
out
aaa
cwtl
cmp
aam
xor
dec
loopne
cltd
lret
or
fimuls
lret
mov
and
sti
pxor
call
and
mov
add
out
inc
scas
es
push
xor
cmp
push
ficoms
mov
cmp
and
push
jbe
mov
adc
jp
push
sbb
push
pop
mov
sbb
pop
fs
shll
bound
xor
mov
lods
ljmp
cld
pop
adc
addr16
ss
stos
xchg
inc
mov
dec
rcrb
or
scas
xlat
mov
jge
loopne
push
in
sub
mov
scas
xor
sbb
addl
repnz
fisttps
add
sbb
out
hlt
xlat
and
ds
mov
nop
xchg
xchg
cmpsl
mov
mov
fildl
inc
xchg
sarl
scas
or
sbb
push
cmc
jo
mov
imul
fistps
mov
ss
loopne
scas
xchg
sbb
shrb
enter
sbb
jno
mov
sbb
dec
sub
sub
in
fsubrs
cmp
popl
dec
dec
push
xchg
movsb
ret
push
add
xchg
ret
mov
test
adc
pop
popa
cltd
push
gs
sub
xchg
pop
push
stc
inc
jo
out
cld
add
fs
imul
aam
pop
stos
popa
mov
lahf
or
mov
fiaddl
imul
mov
inc
es
cli
sub
andl
push
and
pushf
int3
sbb
mov
lods
sub
imul
test
inc
fisubrs
mov
jg
std
in
stc
sub
es
add
inc
cmp
mov
push
push
cmp
mov
xchg
sub
popf
inc
push
in
push
push
neg
ret
add
ds
pusha
decl
add
mov
dec
sbb
aas
icebp
sub
and
mov
cmp
ds
jno
bound
cmp
jno
sub
or
test
mov
push
sbb
arpl
lahf
jl
pop
jle
arpl
movsb
xor
add
test
mov
mov
push
push
add
mov
mov
cmp
mov
das
sub
mov
xor
cmpsb
or
in
das
xor
loope
arpl
jecxz
loopne
dec
jnp
sub
mov
xor
mov
mov
add
inc
lock
repnz
inc
add
add
push
or
mov
inc
jno
jecxz
stos
sbb
mov
les
popw
pop
mov
cmp
dec
jmp
inc
aam
das
lret
dec
jns
xorb
push
mov
add
inc
adc
pop
or
jg
mov
mov
cwtl
dec
inc
adc
xchg
add
and
fistpl
mov
xor
pop
sbb
xchg
out
sbb
mov
out
out
imul
add
inc
push
mov
sbb
out
dec
pop
push
xchg
mov
outsb
dec
imul
sub
pushf
mov
add
jne
test
enter
repz
push
cli
or
xchg
and
loopne
in
inc
aad
mov
xor
out
mov
test
imul
arpl
mov
ret
lds
scas
out
inc
push
imul
mov
sub
inc
mov
push
and
mov
repz
pop
movsb
stc
jmp
adc
gs
mov
sahf
cmp
addb
test
mov
add
xor
adc
aad
push
mov
stc
outsl
imul
sbb
rclb
test
or
push
xchg
cmp
lods
movsl
mov
xor
jnp
hlt
push
orb
negb
repnz
or
pusha
and
fwait
cwtl
in
xchg
add
add
outsb
xchg
lret
ret
mov
xor
data16
xor
xchg
fsubl
aam
inc
lea
lcall
mov
mov
mov
sub
mov
scas
sbb
imul
stc
xchg
sarb
cli
inc
or
or
adc
negl
je
pusha
fidivs
stos
sub
insl
mov
pop
sbb
leave
jecxz
aam
imul
cli
push
lds
cld
lds
lret
cmpl
test
hlt
hlt
dec
pop
dec
xor
lret
pop
mov
mov
iret
lret
mov
aam
push
sub
sti
shll
stos
or
in
push
fdivrs
mov
xor
iret
jo
aas
pop
out
mov
fdivrl
das
sub
sub
xor
ss
ret
or
xor
out
out
hlt
inc
pop
xchg
cld
mov
sub
jnp
int3
movsb
fistl
and
test
fs
or
orb
adc
mov
cmp
test
xchg
inc
int
jg
mov
call
dec
bound
dec
cltd
fwait
push
mov
insb
jle
shr
das
sbb
in
xor
movsb
popf
gs
bound
and
pop
fcmovnbe
xchg
xchg
mov
xchg
xor
cmp
lea
cmpsb
sahf
push
test
in
pop
dec
jo
xor
xchg
pop
adc
xchg
cld
sub
hlt
shll
mov
dec
push
pusha
fisubs
xor
dec
mov
cmc
out
clc
jge
sbb
dec
xchg
inc
sub
shrl
orl
mov
xchg
mov
outsl
mov
pop
lahf
mov
addl
mov
aam
fs
insl
sub
mov
push
test
loop
test
cmp
jno
mov
pop
pop
jge
pop
scas
xor
pop
jmp
xchg
fptan
int
in
rclb
stos
cltd
test
xor
int
jg
out
addr16
sbb
out
das
aam
daa
dec
pop
fwait
in
mov
ljmp
aas
or
inc
pop
sub
cwtl
add
loop
mov
lods
cmp
mov
push
repz
wbinvd
add
lods
out
fnsave
xchg
mov
push
inc
ljmp
and
adc
cmpsl
fdivs
sti
sub
cltd
jmp
int3
dec
pop
inc
jbe
adc
rclb
mov
nop
mov
xchg
testb
out
push
ss
add
push
aaa
call
inc
jle
loopne
cmp
push
mov
pop
andb
ret
mov
mov
add
add
pop
dec
in
jae
roll
push
mov
add
jbe
lret
sbb
ljmp
movsl
xchg
and
stc
iret
repz
and
sets
adc
add
stos
pop
xor
add
loop
movsb
push
cmp
mov
int3
sub
cmp
dec
inc
mov
push
inc
and
sarb
mov
push
or
movsb
sub
jmp
fdivl
out
mov
adc
mov
pop
jge
or
outsl
jbe
jle
adc
xchg
cs
or
mov
scas
pushl
cmp
out
popf
pop
and
lahf
xchg
sub
push
dec
sub
dec
arpl
jo
js
orb
test
lret
jnp
mov
push
push
mov
stos
xorl
mov
cs
jno
mov
mov
inc
ret
cmp
adc
popa
push
sub
cmp
jge,pn
xor
jno
cmp
lds
mov
add
xchg
frstor
and
adc
bound
mov
mov
add
popf
push
lods
jae
fs
fstp
dec
icebp
xor
and
ja
call
add
xchg
int
sbb
sbb
out
in
push
fldcw
mov
arpl
pop
aad
add
movsb
adc
stc
add
inc
les
push
push
out
scas
mov
xchg
lret
add
mov
les
rdpmc
sub
aas
pop
js
mov
dec
cmp
mov
or
rol
into
mov
xlat
test
call
cwtl
test
insb
pushf
or
push
inc
cmp
mov
cmp
call
adc
jno
dec
mov
enter
mov
mov
icebp
loop
stos
shlb
and
nop
js
dec
call
inc
ss
fistpl
mov
and
dec
imul
mov
or
scas
mov
xor
fisubs
inc
sahf
mov
insb
subb
test
mov
or
mov
pop
ss
mov
out
xchg
in
in
mov
pop
push
mov
push
or
mov
mov
ds
mov
mov
add
shlb
addl
neg
push
push
sub
mov
ljmp
mov
ret
mov
daa
or
xor
cmp
shrb
je
and
adc
popa
and
push
scas
mov
stos
add
mov
cltd
and
pop
inc
cmpsl
popf
clc
mov
enter
fs
push
adc
sub
fwait
sub
or
xchg
ss
pushf
jge
xchg
data16
sbb
cwtl
jl
mov
fcomip
cmp
nop
xor
insb
popf
jecxz
les
and
jno
mov
pop
call
je
test
sub
fbstp
sub
pop
out
ds
jns
mov
popf
arpl
imul
hlt
outsl
mov
and
jbe
pop
adc
fwait
or
lahf
pop
call
out
bound
and
push
pushf
in
or
mov
sub
cmpsb
push
dec
xchg
dec
mov
xor
daa
add
sub
cld
lret
mov
mov
scas
rorl
xchg
push
popa
nop
int
xor
adc
or
add
sbb
push
and
es
xchg
mov
inc
enter
push
mov
or
xchg
cwtl
pop
xchg
jecxz
loope
and
mov
lahf
rcr
add
enter
subl
or
xchg
pop
stos
jg
add
ss
push
outsl
add
in
dec
xor
insl
jae
in
xor
pop
lahf
xchg
lahf
shrb
xchg
mov
jp
ds
fbld
pop
or
xor
aam
xchg
cmp
popa
mov
test
std
stos
xchg
ja
dec
mov
xchg
push
sub
pop
dec
jne
dec
sbb
sub
mulb
ja
std
sti
stos
idivb
jns
outsl
and
and
movsb
jmp
ret
or
mov
add
mov
sbb
or
ja
test
inc
dec
aas
pop
or
adc
lret
sub
or
inc
sub
aas
pop
pop
pop
xchg
mov
icebp
nop
rcr
movsl
adc
enter
stos
sub
or
adc
leave
push
jbe
add
mov
sbb
dec
dec
inc
aaa
es
cld
jne
pop
into
loop
mov
lods
rolb
mov
sub
fidivl
daa
sbbb
jns
roll
es
or
enter
imul
adc
pop
mov
sbb
adc
fdivrl
aad
adc
ret
fidivl
test
mov
test
aaa
jae
mov
cmpsl
mov
push
mov
cmp
rcr
lret
or
test
dec
out
std
dec
add
adc
cmpsb
sti
popa
mov
sbb
lods
outsl
les
outsb
jo
xchg
lds
ss
add
jns
scas
outsb
xor
push
lods
leave
sbb
int
insl
out
jmp
les
andl
sub
mov
sbb
insb
or
xor
mov
dec
in
xor
xor
xlat
cwtl
ret
rcl
icebp
or
adc
inc
fistpl
popa
cli
jae
dec
stc
and
movsl
int3
adcl
ss
scas
mov
mov
inc
mov
in
inc
mov
subb
stc
loopne
xor
sarb
push
push
loope
pop
sbb
adc
sbb
and
cltd
mov
lahf
stc
fisubl
pop
jbe
mov
mov
mov
aad
mov
das
mov
and
lds
inc
mov
pop
test
mov
mov
add
adc
adc
stos
xchg
push
ja
adc
enter
movsb
jns
mov
or
cmp
sbb
mov
pushf
out
lock
shlb
xor
out
icebp
xchg
mov
out
in
or
lods
into
xchg
addr16
mov
js
cli
push
lock
or
sti
insl
fmull
into
xchg
lea
mov
xor
ret
into
pop
sbb
lcall
sub
fs
mov
and
dec
push
mov
call
adc
lock
mov
lods
cmc
jp
sbb
pop
mov
sbb
es
std
ja
cmovne
xchg
pcmpeqb
mov
dec
mov
dec
push
les
inc
dec
cs
adc
out
cmpsb
ret
adc
outsl
popa
cmpsl
dec
repz
pop
cmp
xor
mov
push
xor
pop
and
and
inc
mov
jbe
push
in
add
push
pop
inc
mov
jg
mov
xchg
in
jb
sbb
xchg
or
test
push
sbb
adc
xchg
push
adc
int
repz
push
gs
lea
or
or
inc
adc
cltd
jb
jne
pop
jns
idivl
inc
pop
adc
dec
jne
push
nop
js
sbb
add
in
and
sarl
test
icebp
cmpsb
jmp
sub
mov
sbb
jg
xchg
add
xchg
cmp
movsb
lods
push
insb
cs
movsl
pop
jecxz
mov
pusha
or
fistpll
cmp
mov
inc
pop
xor
dec
cmpsl
mov
scas
mov
mov
or
mov
clc
arpl
lds
scas
add
cmp
mov
sub
and
fucomi
scas
mov
lret
push
sti
xchg
adc
test
sbb
or
xlat
mov
stc
dec
test
ret
aam
lea
aad
mov
fldt
stos
adc
fwait
or
adc
scas
or
cltd
mov
xchg
push
push
cmpsl
sbb
inc
or
push
in
mov
ja
movb
stos
imul
test
lods
jmp
mov
aaa
loopew
rorb
cmp
jle
push
mov
xor
add
sub
xor
repz
enter
les
je
sbb
push
mov
inc
add
test
sbb
inc
pop
xchg
jns
push
imul
inc
cmp
outsl
leave
mov
and
mov
outsl
sbb
out
sbb
aam
fstpt
cmpb
pop
nop
mov
out
sbb
mov
adc
xor
dec
aam
sub
mov
mov
ss
pop
mov
test
outsl
jo
fs
mov
or
inc
jge
lds
jbe
cmp
jns
mov
jno
fidivl
sbb
jne
jg
mov
out
movsb
fsubrs
dec
sahf
push
push
jnp,pn
cwtl
mov
xchg
pop
dec
dec
mov
jae
pusha
push
rcll
test
dec
jb
dec
cmp
cmp
popf
mov
repz
gs
and
rorb
pop
adc
jl
fcmovne
mov
jecxz
lahf
loope
fidivs
xchg
add
cmpsl
sub
jne
aam
clc
dec
dec
out
adc
sbb
add
add
imul
xorb
add
fstp
adc
push
mov
lock
xchg
sbb
data16
mov
mov
mov
pop
xchg
push
and
add
in
pop
addb
adc
fidivrl
pop
sti
mov
sti
fs
out
push
movsb
xor
xchg
push
dec
push
pop
sti
mov
je
or
lret
jo
lahf
in
sub
bound
pop
movsl
mov
jle
push
push
loope
mov
xor
movsl
xchg
add
addr16
or
cld
sbb
mov
push
call
dec
out
movsb
lods
test
xchg
push
jl
xor
xchg
leave
jle
mov
mov
xchg
xlat
loop
mul
dec
mov
xlat
push
movl
mov
adc
lcall
mov
xorb
into
xor
insb
push
lods
test
push
xor
out
and
dec
aas
ljmp
push
jg
adc
inc
lods
xchg
add
lcall
mov
loop
mov
mov
mov
insb
push
jae
jb
or
inc
sub
ja,pn
add
xchg
adc
sbb
jg
inc
xor
mov
ds
inc
inc
xor
jp
iret
das
push
ret
adc
jmp
push
jmp
pushf
rorb
addl
adc
xchg
xor
jb
lahf
mov
cwtl
das
xorl
aas
adc
lds
fdivp
pop
xchg
mov
addr16
aaa
jbe
mov
addr16
icebp
or
pop
sub
xor
lods
inc
push
out
add
and
pop
mov
pushf
push
int3
xchg
xchg
pop
ja
mov
lods
stos
rolb
xchg
icebp
mov
aaa
movsb
sub
jns
popa
movsl
push
xor
xor
daa
sub
xchg
je
aaa
cmp
insb
stc
lret
dec
dec
sbb
jns
adc
push
rorb
imulb
xchg
jb
or
add
pushf
test
push
sbb
out
cmp
xchg
aam
hlt
pop
into
aas
jns
xchg
and
add
jbe
loope
das
mov
cli
nop
xor
fistpll
insb
loope
mov
cmp
inc
xchg
outsb
push
decb
mov
lds
xchg
out
sbb
std
jle
mov
and
sti
dec
xchg
lret
sbb
addr16
pop
sti
rcr
cmovg
mov
mov
sti
jne
inc
out
je
mov
fldpi
add
xor
outsl
int3
dec
test
pop
out
xor
jp
xchg
lret
jg
test
sub
cmp
dec
cmc
lods
jge
add
xlat
mov
dec
out
pushf
jp
mov
jo
xchg
adcb
xchg
shl
pop
lcall
out
pop
jbe
call
xchg
dec
test
pop
lcall
popa
seto
imul
lock
cmp
sbb
ja
pop
adc
or
inc
lock
jle
or
insb
cs
pop
inc
jl
inc
hlt
imul
push
outsl
add
xorl
mov
mov
es
xor
ficompl
fmuls
in
xchg
mov
xchg
notl
call
mov
add
cmc
add
lcall
push
insb
mov
int
dec
lret
stos
inc
pop
jb
lock
mov
push
sarb
jecxz
pop
icebp
ror
mov
adc
jns
adc
mov
cli
mov
mov
push
jnp
ja
mov
add
mov
cmc
fdivl
lds
or
lock
sahf
xchg
cltd
shll
frstor
inc
loope
stos
sbb
pop
push
adc
jae
int3
jp
mov
push
ljmp
jo,pn
insb
hlt
mov
sbb
adc
mov
or
cmpsl
push
inc
jmp
mov
js
or
setle
sub
mov
xor
or
and
add
xor
sub
aam
xor
add
mov
add
in
inc
push
mov
movl
call
lahf
mov
and
xchg
cmpsb
push
or
mov
jb
xchg
lods
push
aaa
bound
adc
jmp
sbb
pop
adc
in
imull
shll
dec
adc
adc
mov
push
adc
cmp
popf
int
push
cmp
fdivrs
ja
or
or
sbb
adc
ljmp
int3
sahf
inc
fidivl
pushf
dec
es
or
clc
push
pusha
or
push
xchg
dec
imul
aad
test
xor
invlpg
stos
jo
nop
push
ficomps
pop
iret
sub
jns
mov
add
test
fnstenv
lods
xlat
or
xchg
xor
sbb
sub
jns
lods
mov
decb
test
and
pop
sbb
jae
mov
ficomps
push
shlb
adc
or
xchg
das
nop
adc
js
ret
aaa
mov
repnz
icebp
nop
and
scas
or
gs
out
repz
jl
iret
inc
mov
ret
dec
jbe
shl
push
and
pushf
push
in
punpckhdq
add
fdiv
cmpsb
dec
sbb
mov
jo
pop
push
cmc
mov
imul
ljmp
addl
popl
imul
xor
fucomip
add
push
shrb
jb
dec
leave
out
mov
pushf
jno
dec
out
xor
ljmp
pushf
or
pop
jne
push
mov
popf
repz
xor
adc
filds
inc
int
mov
inc
int3
testb
pop
in
or
xchg
sub
aaa
inc
int
popl
adc
into
repnz
lods
sub
add
cli
adc
dec
repnz
inc
int
lea
inc
pusha
in
ficompl
xchg
insl
jg
test
xlat
es
jb
jbe
adc
popf
decl
mov
in
insb
pop
mov
fadd
xor
jnp
pop
add
xchg
pop
inc
sbb
fdivl
out
fnsave
jne
pushf
gs
stos
inc
xor
push
adc
aas
and
lret
adc
jl
sub
das
sbb
cmp
lock
push
loop
roll
jmp
sbb
aad
stc
xchg
and
cmp
or
jle
jbe
cmp
insl
test
ja
repnz
push
cs
shl
add
fsubrl
ss
jl
mov
pop
out
outsl
ds
mov
mov
mov
and
mov
adc
sub
mov
pusha
jnp
scas
in
inc
dec
lock
inc
movsb
addr16
xchg
jb
leave
mov
and
stos
inc
adc
leave
pop
ficoml
mov
push
sbb
mov
jmp
push
add
lock
fiaddl
jae
jmp
mov
jge
iret
or
js
pop
and
jne
fstp
add
leave
ds
pop
mov
ss
pop
or
mov
jge
dec
repz
fisttpl
push
mov
scas
rcrb
loop
jge
fdivl
dec
pop
arpl
enter
es
inc
arpl
xorb
bound
fdiv
pop
lret
in
xacquire
mov
mov
hlt
popa
andl
fsts
pop
fldcw
inc
xor
adc
jg
addl
add
rcrl
push
xchg
cmp
addl
xchg
fldenv
push
test
cld
inc
mov
movsb
jne
fs
mov
sahf
cmpsb
jmp
xor
mov
movsl
xchg
xor
int3
mov
repz
iret
pop
test
and
jg
fldenv
cmp
pop
divl
jb
gs
dec
xor
out
jbe
sbb
aam
loope
test
cli
js
lret
push
adc
lret
insb
jnp
cmp
call
lret
lret
lods
inc
movsb
mov
decl
xor
push
or
push
fxch
out
inc
or
mov
rolb
pop
loopne
fwait
leave
jae
jne
popf
fldl
mov
mov
stos
add
stos
lahf
jae
arpl
mov
or
test
ret
lock
or
je
mov
push
cmp
xor
mov
jbe
lret
fcmovnb
jmp
aam
jle
xor
jmp
cld
mov
adc
mov
test
sahf
fwait
insb
shll
mov
leave
and
repz
cmp
push
imul
inc
add
pop
ret
jo
stos
cwtl
sub
int
pushf
sbb
cwtl
push
fcomps
roll
pop
js
xchg
sub
cmp
in
cmp
pushl
xchg
xchg
mov
fmul
or
add
mov
gs
dec
dec
pop
jp
adc
arpl
mov
push
jle
lcall
bound
adc
nop
mov
jge
fmulp
insl
imul
xchg
sbb
js
ss
and
ret
in
fbstp
mov
jle
loope
dec
scas
ss
ss
inc
cmp
ret
lea
stc
or
dec
stos
xchg
push
jmp
repnz
sub
adc
or
mov
jae
dec
sbb
mov
jne
shlb
sub
dec
pop
mov
cmpsb
ss
inc
add
lock
out
cmp
stos
xchg
stos
mov
add
cld
mov
jnp
or
stos
lret
cmp
inc
dec
pop
or
mov
popf
clc
loope
fnsave
ds
adc
sub
fistps
leave
lea
data16
ret
stos
addr16
push
jmp
mov
mov
nop
add
jae
mov
xchg
fiadds
xor
lcall
inc
rolb
jnp
aad
bound
xchg
xchg
push
mov
out
xor
mov
orb
jmp
repz
lock
xor
data16
lea
ret
mov
inc
and
test
xorl
or
and
mov
and
in
inc
cmpsl
int3
pop
das
mov
call
push
dec
enter
fdiv
jne
mov
dec
imul
frstor
cs
pop
cmp
out
mov
fwait
nop
test
pop
lock
xor
pop
push
repz
pop
adc
mov
fwait
pmaddwd
aam
add
inc
mov
pop
nop
mov
fcom
inc
xlat
dec
and
jb
dec
test
stos
add
and
fmul
fcoml
inc
mov
sbb
loope
xorl
jo
bound
and
mov
inc
lcall
xchg
push
pop
jae
add
pop
outsl
dec
cmp
adc
xchg
into
pushf
imul
mov
mov
pop
xorb
rcrl
jmp
jecxz
divl
inc
imul
xchg
movsb
push
aam
insl
push
test
sbb
pushf
popf
in
xor
pop
or
lods
push
mov
jp
and
leave
insl
fbld
test
popf
fst
pop
aad
adc
les
scas
jnp
int
dec
nop
xchg
adcb
dec
xor
inc
mov
sub
outsl
popa
out
add
sub
jmp
mov
inc
iret
dec
jecxz
cs
mov
jg
sbb
mov
jnp
pop
aam
ret
lea
sbb
jg
jmp
push
ss
lds
in
dec
loopne
xlat
adc
lds
loope
xor
call
jb
cmp
push
cmp
mov
cmp
add
arpl
fildl
push
flds
out
iret
pop
sbb
inc
das
pushf
test
test
das
ret
jl
mov
and
movl
je
xchg
cmp
cltd
lods
pop
add
shl
adc
adc
adc
lea
scas
cmp
jns
dec
fdivl
insl
lcall
fidivrs
and
lods
mov
cmp
and
scas
out
lds
popf
mov
xor
sarb
fcoml
aas
mov
dec
cmc
sub
jle
push
insb
add
xchg
jp
mov
push
push
leave
xor
call
add
rcrb
xchg
rolb
cmc
adc
xchg
xor
dec
mov
mov
insl
movsl
sub
mov
out
dec
repnz
out
pop
jmp
daa
mov
imul
ss
int3
push
xor
mov
or
insl
out
push
nop
in
mov
jl
pushf
mov
lret
loop
repnz
sbb
mov
sbb
arpl
mov
neg
ficompl
xor
or
je
jg
jae
fidivs
ds
setl
dec
sub
movsl
arpl
xchg
aaa
cmc
std
pop
pushf
mov
pop
fcmovb
ret
jge
call
add
adc
pushf
imulw
adc
mov
loopne
jae
fs
push
das
outsb
jns
ss
testl
and
xor
xchg
outsl
push
mov
loop
aad
and
xor
mov
sub
jl
xchg
pop
cmp
popf
and
cmpsl
ja
dec
into
push
fs
sub
and
arpl
cmp
dec
imul
mov
test
je
sarl
lock
inc
xor
lock
jg
or
push
sbb
or
lea
inc
fldenv
dec
adc
movsl
jecxz
push
leave
mov
into
cmp
sahf
inc
dec
cmp
arpl
sub
pop
jge
add
mov
xlat
icebp
andl
call
jno
icebp
movsb
je
sub
fimuls
mov
les
pop
pop
lds
fcompl
mov
mov
inc
jle
push
enter
std
shrl
push
outsb
add
lahf
out
movsb
outsb
cmpsl
nop
push
and
andl
cmc
lds
adc
mov
addr16
clc
pushf
mov
mov
lock
popf
std
jae
test
push
mov
xchg
xor
xor
add
loopne
rcll
fwait
push
in
xor
in
roll
mov
mov
mov
cmp
adc
insb
scas
xor
jl
addr16
imull
push
sbb
push
push
jno
pop
adc
or
pushf
std
into
inc
fst
mov
jg
pop
fistpl
std
inc
iret
cmp
sbb
sub
lea
es
dec
xor
or
out
loop
ja
shlb
jne
dec
pop
mov
mov
stos
je
adc
lds
inc
lret
xor
loopne
je
pop
stos
xchg
repz
mov
repz
and
addr16
test
mov
cmc
fstps
adc
inc
pop
stos
xor
mov
mov
imul
mov
cmp
in
sbb
ss
test
mov
inc
add
out
out
cltd
dec
testl
lods
push
inc
clc
imul
cmp
or
negb
mov
adc
mov
fnsave
mov
fsubs
push
mov
or
sahf
push
xchg
mov
cs
jl
cld
push
outsl
out
xorb
outsb
jp
lock
or
stc
pop
rcrb
pop
lds
inc
jmp
mov
xor
mov
fistps
les
mov
loopne
push
xlat
jne
shll
ret
stc
icebp
stc
clc
hlt
into
subb
sbb
insl
mov
cmp
adc
mov
test
jecxz
aas
xchg
scas
push
movsl
in
xor
push
jl
push
xchg
nop
sub
cmc
in
cltd
mov
pushf
pop
cmp
xchg
lahf
data16
pop
dec
push
nop
les
iret
jne
push
jo
cwtl
mov
mov
aad
and
jnp
sbb
pop
iret
cli
outsb
iret
dec
fsubrl
ljmp
out
out
icebp
cmc
les
pop
stc
stos
adc
ljmp
mov
rorb
pop
cmpsl
aaa
adc
ja
enter
cmp
adc
and
loopne
sarb
fisttps
fsubl
addb
cmp
adc
xor
adc
jecxz
lea
mov
mov
add
sub
xrelease
cs
mov
mov
lahf
iret
xor
bound
fsubrl
cli
sbb
sbb
mov
addr16
test
push
ljmp
mov
push
test
mov
in
jno
rcrb
fistpll
out
pop
or
insl
xor
pop
ret
lods
js
mov
push
jecxz
fwait
mov
add
jae
in
push
mov
jo
jl
scas
inc
test
pop
insl
jg
pop
mov
xlat
es
dec
xchg
fs
sub
out
cmp
adc
push
mov
sub
and
pop
loop
sbb
fcoms
outsb
pushf
mov
lcall
add
daa
leave
mov
jne
icebp
mov
rcr
mov
jbe
cmc
sbb
out
andb
sarl
xchg
loopne
inc
sub
cmp
dec
mov
pop
or
rcr
push
mov
jecxz
inc
adc
out
loop
mov
cmp
sub
inc
xor
cld
ret
cld
xor
sahf
sbb
les
sti
pop
cld
push
sub
cmp
stos
pop
mov
dec
jbe
xorb
or
push
or
dec
incb
icebp
jnp
das
mov
push
cltd
cmp
fidivrl
fistpll
push
xor
stc
fmull
jp
rcrl
lods
cmp
inc
dec
ds
outsl
sbb
push
xchg
dec
out
pop
lds
mov
mov
inc
mov
dec
ljmp
ret
rorb
fimuls
and
dec
push
movsl
imul
aad
adc
mov
xchg
loope
mov
dec
mov
in
cmp
inc
push
jae
pop
popa
push
mov
sbb
fildl
adc
mov
movsb
sbb
jge
sbb
imul
adc
stos
pop
mov
leave
bound
cs
dec
mov
sub
inc
inc
inc
shrb
mov
nop
iret
jmp
test
pushf
mov
popa
mov
adc
ljmp
jae
push
loopne
push
andl
jmp
inc
pop
sub
test
sti
testb
xchg
out
loop
cs
jno
cmp
xorb
sub
inc
xor
sti
or
fimull
fs
xor
and
scas
shll
popf
fcoms
push
mov
push
or
insl
fistl
or
sbb
ret
jne
cmp
enter
int
fs
sub
outsb
jne
push
inc
mov
shll
adc
cmp
push
lods
mov
add
sarb
mov
push
sub
stos
in
fcomps
mov
mov
xchg
xor
mov
mov
xor
pop
pop
xchg
push
test
stos
jmp
push
repnz
jecxz
jns
pop
fnsave
pop
mov
push
cmp
or
sub
mov
xchg
jle
nop
sbb
sbb
icebp
dec
xchg
adc
dec
pop
pop
xchg
sub
call
sbb
inc
add
fs
push
lods
mov
sbb
sub
inc
fildll
hlt
mov
fs
shr
push
adc
dec
jne
sbb
not
in
adc
imul
mov
leave
scas
push
scas
test
xor
adc
jecxz
adc
adc
xchg
cs
inc
std
lods
mov
fdivs
das
and
rol
lret
add
sub
push
and
cltd
das
pop
pusha
stos
dec
in
mov
mov
and
call
aaa
mov
add
jne
popa
in
cli
jne
mov
xchg
dec
pop
push
cmp
out
add
pusha
xor
movsl
clc
mov
pop
mov
out
jle
dec
test
dec
xchg
cmp
pop
dec
ffreep
push
cmp
add
ret
or
push
les
int3
stc
sbb
xchg
mov
jmp
or
lods
jns
inc
popa
ljmp
aam
int3
and
cmpsb
mov
fcmovu
js
mov
icebp
mov
out
jno
push
pmaddwd
mov
adc
pusha
aad
sbb
xchg
lds
mov
xchg
aam
iret
test
jge
hlt
repnz
push
push
pop
inc
arpl
adc
xchg
adc
push
pop
inc
xchg
sub
ds
test
mov
cmp
add
jmp
shll
and
stos
ja
sarl
loop
mov
imul
les
push
out
out
addr16
enter
outsb
mov
jp
adc
inc
in
inc
rcll
xor
sub
popa
stos
je
cmp
orb
push
sbb
ret
clc
lahf
mov
loopne
dec
aad
add
dec
aad
sbbl
icebp
imul
das
shrl
xor
pop
into
loop
push
pop
ret
adcb
stos
test
hlt
inc
aam
mov
pop
dec
inc
pop
sub
sti
mov
mov
clc
mov
in
and
imul
xchg
pop
dec
in
popa
mov
xor
cmp
inc
les
xchg
adc
lock
dec
and
pop
ror
mov
cmc
mov
mov
mov
bound
mov
divl
loope
or
push
stc
mov
xor
push
push
pop
ss
inc
lahf
push
repz
xchg
mov
pandn
mov
shlb
sub
outsl
das
arpl
xchg
ret
adc
mov
cmp
mov
fdivrs
xchg
sbb
imul
inc
xchg
add
movsl
jge
inc
enter
cmpsl
arpl
xor
cwtl
jne
mov
cli
pop
je
rclb
cmpl
jno
adc
push
xchg
push
add
dec
pushf
cltd
mov
push
pusha
rolb
cmp
inc
testl
jecxz
pop
pop
sub
pop
js
sbb
test
mov
push
pop
and
adc
fwait
cmpsb
xchg
xchg
add
roll
dec
xchg
jecxz
inc
out
and
and
ss
mov
andps
cmc
dec
xchg
cmp
rcrl
inc
sbb
mov
and
add
and
jne
icebp
push
xor
fs
out
mov
cmp
mov
cli
cmc
xchg
in
inc
lods
out
loope
icebp
cli
push
lea
addr16
mov
and
fwait
push
xchg
outsl
ja
cli
sub
xor
enter
jbe
cmp
inc
stos
fisubs
gs
push
cmp
int3
imul
xchg
sbb
flds
mov
out
cmpsl
scas
fcmovne
cmp
movsl
shrl
lock
cld
movsb
mov
mov
lret
mov
push
orl
lret
lea
int
xchg
cmpsl
stos
enter
inc
push
and
pushf
ja
jle
xchg
mov
add
adc
add
cld
mov
pop
jbe
xor
mov
lea
dec
xor
inc
mov
jmp
adc
or
adc
insl
and
loop
bnd
push
or
push
xchg
pop
pop
mov
jg
je
imul
push
push
addr16
cmp
aam
sub
jge
mov
mov
mov
jne
idiv
lods
fstpl
icebp
pop
push
sti
insl
repnz
imul
or
cmpsb
sbb
roll
dec
xor
jecxz
fmull
push
inc
roll
ljmp
lcall
cmpsb
adc
sti
neg
mov
out
lret
push
movsb
cmp
jl
leave
cmp
xchg
lret
jle
mov
mov
xchg
adc
sub
xchg
add
pop
into
push
stc
and
test
mov
scas
xlat
or
add
pop
not
mov
cmpsb
mov
das
sub
rolb
es
sbb
xchg
scas
inc
fstpt
imul
mov
pop
or
mov
sarb
xchg
mov
inc
and
inc
dec
add
jle
loop
inc
jno
mov
pushf
push
xchg
sarl
jl
ljmp
inc
sub
jb
mov
repz
pop
lcall
repz
ljmp
sub
push
jae
jnp
inc
cld
lea
mov
cli
das
pop
dec
inc
add
xchg
inc
and
fbstp
daa
jae
dec
pusha
jg
jg
fdivrs
mov
adc
popf
xchg
mov
call
dec
pop
jl
out
jmp
test
cmc
cmp
cs
adc
dec
inc
mov
jecxz
mov
add
inc
mov
cmp
in
dec
jp
mov
cmc
mov
jno
cwtl
sbb
push
gs
xor
sbb
ja
inc
jg
testl
pop
inc
inc
jg
or
fwait
pop
cs
lds
dec
data16
adc
daa
das
outsb
mov
mov
call
dec
or
jecxz
call
dec
dec
jp
nop
xor
jns
mov
in
xlat
call
mov
outsb
lea
fadd
ret
jmp
bound
ja
je
decl
pop
rcll
mov
mov
push
xchg
dec
lret
cmovg
push
stos
xor
xchg
inc
push
es
or
pop
xchg
pop
xchg
fisubs
enter
push
fiadds
lods
xlat
je
dec
cs
and
stc
sub
xchg
sbb
sub
js
sti
jge
ret
jno
push
sub
dec
fiadds
cmpsl
sbb
mov
xchg
gs
add
or
adc
adc
push
pop
jl
in
mov
push
loope
out
lahf
ja
sbb
test
loopne
dec
nop
add
je
jnp
and
sbb
out
push
mov
push
jg
inc
mov
outsl
mov
test
xor
outsl
cmpsb
mov
lods
jnp
inc
mov
mov
jl
push
mov
dec
inc
es
stc
pop
mov
pop
mov
add
sbb
cli
bnd
mov
cmpsl
push
push
pop
mov
dec
repz
dec
ficomps
shrb
dec
jecxz
and
shrb
or
mov
sub
outsl
cmp
leave
mov
mov
and
lods
and
movsl
and
adc
fwait
arpl
add
negb
pop
jge
sbb
in
dec
dec
cwtl
mov
dec
xchg
push
jmp
or
dec
mov
sahf
test
push
mov
repz
sbb
sub
push
mov
or
ret
call
cmpl
mov
adc
xchg
push
enter
mov
inc
mov
jbe
sbbb
lds
ja
add
xor
mov
pop
call
aad
sbbb
imul
jmp
pusha
int
xor
test
ss
fisubrl
imul
sub
pop
rcrl
out
dec
lods
fildll
stos
fisubrs
adc
test
into
and
inc
shl
pop
inc
not
pop
icebp
mov
inc
pop
jne
inc
sbb
sub
cmp
add
out
xchg
mov
loopne
ja
mov
pushf
in
lret
cmp
adc
icebp
cmp
std
push
orb
clc
enter
fmuls
movsl
inc
sbb
inc
sub
aam
pop
addr16
inc
pop
add
popa
hlt
ljmp
jbe
pusha
mov
into
xlat
or
fcom
xor
mov
popf
and
js
or
cs
jecxz
mov
js
cmpsb
xor
mov
mov
movsb
ljmp
lods
pop
incb
ret
sarl
aam
mov
loopne
lea
js
or
xor
in
in
in
fisubrl
mov
and
inc
jbe
sub
cmp
popa
das
movl
stos
and
mov
test
adc
or
shl
pop
orl
push
mov
rcrl
bound
stc
in
lock
push
or
in
sbb
and
lds
adc
pop
insb
jb
add
into
aam
movsb
xchg
sahf
loopne
lock
cmc
es
or
incl
adc
mov
enter
add
dec
dec
fwait
xor
jp
popf
stc
insl
pusha
and
mov
cmp
notb
mov
loope
cmp
inc
stc
mov
shrb
mov
das
mov
int
jae
orb
stos
hlt
lock
mov
add
xor
inc
rorl
mov
mov
cmp
mov
mov
jae
or
out
arpl
sub
adc
add
cltd
lea
add
cmpsb
scas
xlat
mov
out
pop
sub
xor
fs
gs
lea
xchg
test
dec
popa
fstpt
mov
test
je
and
inc
inc
out
insl
dec
pop
mov
inc
ja
dec
adc
and
and
andb
adc
int
fstpl
mov
hlt
fistpll
aas
ret
mov
hlt
gs
sahf
les
mov
push
mov
cmc
scas
mov
leave
aas
inc
int
bt
ret
pop
lods
jb
in
sub
adc
mov
es
in
adc
push
aad
push
mov
inc
mov
pop
sbb
in
call
outsl
fldt
mov
inc
xor
xchg
jo
cmp
dec
fistps
addr16
sti
jne
pushf
out
call
mov
lods
pop
pop
aam
cmp
pop
out
aam
jbe
in
jo
push
out
push
pop
sub
in
add
insl
into
inc
jecxz
testl
mov
dec
or
cli
gs
arpl
mov
mov
ds
mov
mov
aaa
pop
daa
mov
dec
inc
pop
jnp
sbb
loop
enter
xor
fists
imul
in
adc
pop
mov
push
mov
jle
aam
mov
mov
dec
cmpb
xor
dec
test
lods
ja
imul
fs
xchg
lret
xchg
inc
mov
fldl
js
push
bound
fimull
aad
pop
jae
or
xchg
leave
leave
stc
ds
xchg
inc
fisttps
les
movsb
push
cmp
sub
xchg
scas
sub
xchg
push
cli
jne
cmpsl
ljmp
push
adc
sub
in
or
outsl
mov
mov
adc
loop
push
xchg
jle
pop
xor
int3
mov
stos
stos
lahf
enter
mov
mov
mov
pop
inc
cmp
xchg
data16
loopne
or
out
mov
loop
jmp
cli
ljmp
fs
fildl
jnp
jl
lret
push
xor
push
sahf
jecxz
stos
andb
dec
in
adc
out
pushf
icebp
xchg
inc
sbb
pop
aaa
cli
jecxz
jp
mov
hlt
jns
insb
loope
cld
mov
dec
jne
jb
push
jecxz
push
add
xchg
push
dec
xchg
popf
mov
xor
jle
dec
dec
mov
jb
outsb
jmp
addr16
mov
nop
jp
add
jmp
sarb
or
rcr
dec
xchg
sub
out
inc
sbb
inc
mov
sub
rolb
mov
ja
mov
adc
loopne
inc
or
aad
sub
int
movsb
dec
mov
mov
test
cld
mov
xor
inc
adc
cs
fsub
mov
mov
xor
and
push
lret
cli
mov
cmp
popa
sub
fstps
or
cmp
jnp
mov
loopne
rorb
mov
sbb
pop
into
sahf
mov
lock
xlat
push
in
out
rcl
inc
xor
jecxz
cmpsl
ss
mov
dec
and
jmp
inc
subb
ss
push
dec
mov
test
fimuls
xor
add
push
or
add
jecxz
sahf
inc
lcall
pop
cwtl
arpl
sbb
outsl
hlt
cwtl
into
xor
adc
cmp
mov
adc
xchg
enter
push
xchg
dec
jae
push
iret
xchg
add
push
loope
movsb
dec
popa
sub
ljmp
dec
aam
fistpl
sti
mov
add
mov
inc
fcmovu
cmpsb
mov
sbb
loope
inc
mov
dec
add
fstpt
and
cmc
push
fiaddl
sub
shrb
daa
jmp
ds
fildll
inc
aad
jo
mov
das
push
mov
daa
ret
cmp
test
mov
or
jge
jo
in
loope
mov
incb
pop
mov
js
add
mov
pop
sub
cmp
lahf
sbb
sub
ljmp
cld
mov
ss
and
jbe
xlat
adc
push
push
je
add
aas
xchg
out
push
dec
pop
loope
jb
jbe
fmul
push
int3
or
xchg
imul
lock
add
pusha
mov
and
adc
daa
xor
sbb
fbld
adc
push
jo
stos
cmp
dec
outsl
mov
sbb
sti
xor
jns
int3
push
mov
fisubs
jle
popa
in
jno
or
xchg
lahf
or
imull
push
fwait
xchg
and
sbbb
call
in
lahf
jle
sbb
daa
hlt
in
pop
mov
std
mov
cmc
gs
rclb
fdivl
mov
sbb
add
sbb
neg
pop
repz
push
pop
in
xlat
stos
jnp
pop
xchg
fmull
fld
mov
insb
call
adc
or
mov
xchg
cmpxchg
loop
push
xor
mov
lea
iret
push
mov
jg
xor
iret
adc
or
push
xchg
lret
jnp
sub
sti
push
push
cmp
in
xchg
xchg
pop
mov
movsb
scas
cmpsb
jbe
and
jmp
scas
scas
jmp
mov
scas
loop
pop
movsb
popf
roll
and
in
fsubp
std
les
push
cs
mov
cmp
iret
ret
loop
das
xor
sbb
inc
jmp
or
das
sbb
inc
loope
xchg
mov
mov
and
hlt
dec
loopne
xchg
xchg
jno
mov
sbb
push
mov
repnz
push
popf
mov
mov
mov
adc
ja
fimuls
sbb
mov
daa
js
test
adc
aad
adc
js
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
adc
in
add
push
dec
dec
outsl
jl
pop
jmp
adc
mov
cmpb
jnp
rcrl
add
push
movzwl
pop
mov
sub
xor
mov
xor
call
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
xchg
add
add
nop
repnz
and
pop
movswl
mov
sub
and
dec
dec
or
dec
jne
mov
jmp
adc
div
fs
xchg
ror
into
out
cld
test
jns
jg
cmp
jle
sub
outsb
ficomps
test
stos
aaa
lods
js
cmp
inc
sub
leave
pop
jecxz
sub
imul
sub
sub
push
lods
js
scas
sub
add
mov
push
inc
add
and
pusha
ja
js
aaa
mov
js
loop
mov
mov
fdiv
sahf
cmp
ljmp
mov
js
jge
add
jbe
xlat
sbb
cmp
pusha
lods
push
daa
lcall
js
or
icebp
pop
add
test
outsb
sub
icebp
rcll
xor
aaa
lods
js
psubusb
push
sahf
ja
cmp
test
mov
mov
xchg
cmp
cld
outsl
test
mov
js
and
lods
stos
cmp
shl
in
xchg
ret
sbbl
pop
sbb
mov
pop
aaa
lods
js
sub
sbb
roll
mov
xchg
dec
xor
push
repz
mov
icebp
xor
push
cltd
mov
jmp
pop
cmp
insl
enter
addr16
cmp
in
add
mov
sub
out
push
shrl
adc
jmp
nop
lods
outsl
cs
xor
addr16
fcom
je
jl
movsl
lods
inc
add
in
cmp
insb
scas
rcr
fwait
or
aam
pop
test
pushf
mov
pushf
out
lret
jns
xor
lock
xor
push
outsl
cs
nop
ret
loopne
test
lods
adc
cmp
jg
stc
jbe
icebp
mov
das
push
nop
lods
outsl
cs
mov
lods
nop/reserved
fs
fwait
daa
mov
fcoml
adc
fmull
push
mov
and
jae
sub
mov
xchg
dec
imul
jmp
mov
mov
test
mov
and
cmpsl
jle
sub
inc
mov
daa
jbe
and
inc
in
sbb
mov
ret
loope
lahf
sub
out
jae
scas
sti
xchg
cmpsb
lods
ret
aam
sub
push
adc
pop
js
mov
xchg
and
jbe
and
inc
adc
mov
subl
fildll
pop
mov
loope
sti
xor
jmp
imul
pop
xor
jp
bound
jnp
bound
jg
bound
lock
incl
outsb
sbb
scas
out
lahf
xchg
jle
mov
hlt
sbb
shll
imul
jmp
dec
jb
jecxz
ja
in
lahf
jno
ret
jle
es
dec
cmc
ss
lahf
jmp
in
lahf
jno
and
fsubr
lcall
hlt
in
push
popa
pop
arpl
sbb
notl
lcall
repz
ljmp
enter
dec
sarl
in
das
ror
in
sarb
cmpb
incb
adc
hlt
inc
jbe,pt
cld
lcall
hlt
in
imul
pop
ljmp
hlt
in
ret
call
out
repz
pushl
inc
decb
lret
call
incb
jecxz
lcall
hlt
in
dec
adc
ljmp
hlt
arpl
icebp
in
call
xor
add
lcall
lret
call
ret
or
ret
popa
ds
dec
sub
adc
ffreep
lahf
hlt
arpl
mov
out
hlt
in
dec
pop
shlb
repnz
jmp
ljmp
leave
in
jae
dec
aas
fmuls
icebp
scas
popf
hlt
in
dec
fincstp
ret
rol
in
cs
dec
adc
ljmp
repnz
decl
repz
data16
hlt
in
dec
xchg
dec
data16
hlt
in
dec
push
lock
inc
ljmp
push
js
and
inc
xlat
repnz
call
xor
or
lcall
push
inc
lahf
hlt
cmp
push
imul
rep
lahf
push
adc
lahf
hlt
inc
lahf
hlt
in
sbbb
in
incl
fistps
inc
dec
push
adc
sti
sub
popa
les
in
pushf
add
adc
pusha
fadd
int
out
orb
mov
adc
les
sahf
hlt
in
ror
out
orb
xchg
popa
into
aam
ret
fcomip
mov
add
pushf
add
adc
shrb
int3
dec
inc
xchg
rcrb
in
lcall
dec
cmc
add
pushf
add
adc
popa
roll
push
es
repnz
add
pushf
add
adc
popa
rcll
das
dec
out
cmc
in
push
xor
adc
cmp
lcall
into
aam
ret
icebp
mov
add
pop
hlt
outsl
lahf
popa
icebp
cmp
iret
in
ljmp
sub
jecxz
dec
out
cmc
in
adc
insb
jne
jno
roll
sub
loopne
sbb
lahf
dec
in
mov
pusha
stc
inc
int
popa
out
dec
aam
out
loopne
sbb
lahf
xchg
add
outsb
cli
jge
test
lcall
shr
lcall
repz
sub
hlt
jmp
jno
adc
jle
pop
adc
hlt
popa
mov
sbb
aas
pop
icebp
xor
adc
hlt
jg
lret
decl
ss
adc
hlt
lret
in
stos
adc
out
pop
hlt
push
call
cmp
jmp
ficomps
ret
cs
hlt
in
mov
movsb
push
push
ret
sbb
out
cmc
test
fidivs
pop
ret
xchg
enter
ret
call
mov
xor
mov
sub
lods
jae
mov
shll
fstps
sub
std
jle
ljmp
push
mov
mov
repz
andl
or
hlt
in
lcall
hlt
in
lcall
hlt
in
lcall
cs
jg
out
mov
jmp
lcall
hlt
in
lcall
hlt
in
lcall
js
lahf
hlt
in
lcall
hlt
in
lcall
lahf
lcall
mov
test
fwait
les
inc
into
rorb
or
dec
out
xchg
inc
cmp
xorb
in
fnsave
inc
or
pop
mov
sbb
or
xchg
dec
sub
daa
gs
aas
or
add
sub
mov
dec
mov
loope
pop
and
test
pop
and
pop
mov
jmp
dec
xor
hlt
fxch
xchg
pop
test
decb
stos
cmp
insl
cwtl
and
enter
pusha
jne
testl
loope
xor
lds
lods
xchg
imull
mov
sub
xchg
inc
cli
jns
xchg
mov
call
pop
fcompl
mov
stos
jge
cli
inc
mov
sti
fisubs
xor
pop
inc
sbb
and
push
scas
cld
mov
jmp
out
mov
stc
clc
and
mov
repnz
mov
jecxz
jmp
push
hlt
inc
in
push
mov
mov
ror
iret
and
outsl
stos
shlb
jp
adc
iret
stos
or
hlt
lds
ds
test
int3
dec
pop
in
addr16
inc
shrb
xchg
movsl
in
jns
pop
lock
divl
aas
fadds
ja
pop
shlb
test
adc
pop
aam
scas
in
stc
and
sbb
mov
ret
cmp
inc
push
es
cmc
inc
lahf
aas
sub
add
and
adc
jge
xlat
sub
push
mov
das
lods
sub
clc
rclb
xchg
pop
dec
xchg
xor
add
pop
test
mov
rcl
inc
nop
mov
mov
pop
repz
lcall
icebp
adc
mov
rcll
jbe
std
stos
fnstcw
cmpl
dec
add
dec
scas
les
jnp
loop
lock
or
xchg
or
mov
ljmp
imulb
and
mov
dec
fisttpl
ljmp
dec
sub
es
xchg
pop
mov
xchg
mull
sub
pop
pop
cmp
fwait
inc
mov
add
mov
xor
lea
dec
inc
xchg
push
out
mov
dec
and
sti
push
decl
fisttps
lods
sbb
push
and
mov
imul
mov
pop
sbb
push
or
imul
mov
cmp
push
jb
cmp
fldl
jnp
mov
sbb
xchg
in
gs
mov
in
lds
add
and
add
add
add
lods
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
add
add
lods
add
add
lods
add
add
lods
add
add
lods
add
add
lods
add
add
lods
add
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
lods
add
add
lods
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
add
add
add
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
cwtl
imul
sbbl
nop
nop
nop
and
add
add
mov
mov
cmp
insb
fs
cmp
shll
subl
popl
scas
scas
scas
add
leave
sar
cmpl
jge
pop
aaa
int
push
out
push
dec
dec
and
dec
je
ret
and
inc
imul
jno
jno
in
fdivrp
in
fmul
jmp
aam
call
ret
mov
xchg
mov
mov
mov
ret
jo
mov
mov
xchg
xchg
xchg
or
in
sar
out
fst
in
fxch
ljmp
call
ret
sub
loop
jecxz
lods
pop
jge
jge
loopne
icebp
jecxz
out
jmp
enter
ret
jmp
sarb
jmp
jae
mov
xchg
add
fcomp
hlt
jmp
out
out
loopne
jmp
rol
jmp
sarb
push
in
jmp
jge
fcmovnb
lods
call
mov
popa
popf
xchg
mov
add
add
fcmovu
push
in
in
repz
sar
call
iret
mov
call
mov
inc
movsl
ja
jecxz
mov
shll
addr16
jbe
fcmovnu
in
jmp
jmp
jmp
int
in
mov
jmp
mov
in
frstor
fnstcw
push
inc
mov
push
or
push
push
ror
into
hlt
stc
hlt
icebp
push
icebp
in
push
in
in
jmp
int3
mov
jmp
enter
xchg
ljmp
mov
je
mov
push
jmp
scas
sahf
push
popf
pushf
fwait
push
loop
fsub
div
in
cld
imul
jmp
jmp
enter
ret
scas
jmp
lret
jecxz
xchg
fidivrl
pushf
call
mov
cli
cwtl
jp
mov
jecxz
jecxz
int
int3
jecxz
clc
ffree
mov
fcmovnb
test
call
mov
cltd
call
scas
xchg
ljmp
mov
add
call
movsb
mov
xchg
lds
lahf
shll
inc
fwait
jl
mov
jg
add
add
push
je
lret
movsb
test
inc
mov
test
mov
push
lahf
mov
jmp
add
repnz
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
pop
add
incb
add
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
push
dec
sbb
sub
pop
push
push
push
push
inc
cmp
stos
shll
push
loopne
pop
mov
aaa
push
outsl
popl
pop
push
push
adc
sub
outsl
mov
dec
mov
pop
sub
sbb
mov
filds
call
lods
dec
incl
xor
push
aas
aas
aas
add
arpl
jnp
jns
push
sbb
pop
add
add
add
add
add
inc
daa
test
xor
fdivs
push
fcmove
xchg
cmp
sbb
dec
dec
push
test
jle
sti
loopne
fidivl
cmp
push
add
movups
add
add
cmp
pop
cmc
cmc
cmc
call
ror
inc
mov
insl
mov
sbb
aaa
pop
pop
pop
add
outsl
add
sbb
test
scas
pop
mov
or
add
add
add
mov
in
dec
cmpsb
inc
ljmp
and
add
add
add
add
and
and
mov
in
in
call
int
ret
ret
mov
cld
jae
push
xor
pop
add
lret
lds
adc
mov
jg
add
inc
adc
in
in
in
sarl
shrl
or
add
add
jg
jg
push
push
push
jnp
hlt
hlt
fcom
sar
out
fst
jmp
int3
jmp
aam
fmul
mov
mov
popaw
cmpsb
and
and
cltd
mov
fstpt
xchg
add
add
hlt
rclb
rep
jmp
ret
ret
scas
dec
dec
dec
add
popl
sbb
sbb
call
ror
out
fst
in
fcmovne
in
fcmove
ljmp
fcmovne
mov
mov
imul
iret
jecxz
mov
rclb
cld
repnz
imul
popf
fistpll
inc
pop
pop
pop
add
lcall
sar
lock
out
in
fmul
in
fcmove
jmp
leave
jmp
jmp
iret
mov
dec
mov
mov
inc
lods
pop
mov
out
aad
fdivrl
hlt
add
add
add
pop
pop
xor
call
loope
loop
iret
out
loope
out
in
in
fcmove
jmp
enter
ljmp
call
int
call
ret
jmp
stos
in
xlat
mov
cli
idivl
pushl
add
add
aas
aas
add
xchg
xchg
mov
rcl
int
repnz
push
loope
out
loopne
out
fst
in
fcmove
jmp
ljmp
ljmp
jmp
iret
mov
cld
sti
mov
fistpll
fwait
sub
daa
sbb
add
add
icebp
icebp
fcmovu
in
aad
repnz
push
jecxz
out
loope
out
jmp
lret
jmp
aam
jmp
sarb
jmp
sarb
cld
cld
sar
lret
jo
shlb
test
lock
dec
dec
andl
lahf
add
add
add
and
or
call
into
push
jmp
icebp
in
push
loope
out
ljmp
jmp
rol
call
sarl
jmp
lret
out
out
push
out
lods
out
fistl
fadd
mov
fcmovnb
mov
sarl
xchg
in
push
dec
inc
jge
and
adc
add
add
dec
dec
outsb
icebp
icebp
icebp
call
rcl
ljmp
push
out
push
in
push
loop
out
fst
ljmp
call
sarl
jmp
iret
mov
fmulp
scas
sti
clc
mov
push
loop
call
lods
push
call
mov
mov
loope
mov
fcmovb
lods
call
mov
sub
inc
xor
add
add
add
add
add
iret
iret
jmp
rcl
into
push
in
out
hlt
jmp
push
call
fdivr
icebp
jecxz
in
fcmove
jmp
rol
jmp
sarl
jmp
into
mov
jmp
lret
call
idivb
call
mov
cmp
sahf
pusha
faddp
scas
jmp
lret
jecxz
mov
ffreep
stos
dec
mov
hlt
mov
frstor
add
add
jg
jg
addr16
out
out
dec
int
out
call
call
push
ljmp
icebp
in
ljmp
jmp
sarb
jmp
int
jmp
int3
mov
fadd
scas
clc
out
scas
jmp
int3
test
mov
mov
push
fsubl
dec
lods
mov
loop
scas
jmp
scas
jmp
lds
aam
andl
add
add
add
add
adc
sub
loopne
neg
fstp
call
rcl
clc
icebp
in
push
out
jmp
push
jmp
push
call
out
ret
rol
jmp
iret
mov
jmp
int3
mov
jmp
leave
mov
loop
movsl
std
divb
ljmp
lods
ffree
lahf
call
mov
incl
mov
test
jmp
mov
add
add
pop
add
out
dec
enter
out
ljmp
lock
imul
call
push
jmp
xlat
jmp
rol
jmp
iret
mov
jmp
lret
mov
jmp
leave
mov
fcmovnb
lods
push
loopne
jmp
rcll
mov
ja
faddp
lods
dec
mov
jmp
test
ljmp
xchg
xchg
addb
add
rcl
shl
call
rcl
stc
cmc
icebp
clc
repz
push
repnz
push
out
ljmp
ljmp
in
mov
jmp
int3
mov
jmp
mov
ffreep
mov
fld
mov
jmp
inc
and
lret
mov
fnstcw
ja
in
int
fnstenv
pushl
jae
leave
ror
leave
sbb
add
add
add
add
aas
aas
add
cmp
pop
mov
repnz
cli
div
stc
hlt
lock
clc
repnz
push
lock
cmc
out
call
in
jmp
into
mov
jmp
lret
loopne
mov
faddp
scas
fdivrs
fwait
std
icebp
movsl
std
rep
mov
nop
je
call
mov
fstpt
test
aam
mov
lret
negl
push
pop
pop
pop
add
push
push
sub
hlt
lock
stc
stc
cmc
repnz
clc
repz
icebp
in
push
out
ljmp
fst
jmp
int3
mov
jmp
mov
ffreep
mov
fadd
lods
jmp
into
xchg
stc
jecxz
push
fisttps
jmp
xchg
call
mov
lahf
fdivrs
fwait
call
mov
ljmp
push
rorl
add
add
scas
test
in
in
icebp
in
jmp
div
in
push
out
call
jmp
lret
loopne
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
fwait
call
mov
call
mov
mov
call
mov
call
mov
call
mov
inc
mov
inc
mov
mov
mov
xchg
xchg
mov
fcom
jecxz
out
repz
out
jmp
jmp
leave
mov
ffreep
mov
ffree
scas
fadd
lods
fstpt
cmpsb
fnstcw
fdivrs
sahf
call
mov
call
mov
call
mov
call
scas
nop
cltd
je
roll
add
add
add
mov
shl
out
fld
scas
cmc
ffree
mov
fadd
lods
fcmovnb
stos
fidivrl
movsb
call
mov
lahf
call
mov
call
mov
call
mov
call
scas
nop
call
lods
pushl
pusha
cmp
cmp
add
add
jp
push
dec
subl
mov
fdivrs
call
mov
call
mov
call
mov
call
scas
xchg
call
lods
dec
test
test
mov
mov
push
cmp
mov
push
push
daa
push
inc
xor
mov
xlat
mov
pushf
call
mov
call
scas
xchg
dec
lods
mov
into
test
dec
movsl
test
mov
push
xor
insl
push
sbb
es
mov
stos
mov
mov
dec
lods
dec
test
dec
movsb
test
rcrb
movsb
push
ds
arpl
inc
sub
pop
aas
cltd
lods
mov
movsl
xchg
enter
xchg
push
sub
addl
sub
jae
sub
lahf
lahf
lahf
add
lea
lock
add
add
add
incl
cld
pop
filds
pop
incl
add
incl
add
incb
add
cld
add
cld
add
aas
clc
add
aas
clc
add
jg
add
pop
lock
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
loopne
add
clc
add
paddd
add
incl
add
cld
add
incl
jg
inc
push
ljmp
add
add
add
add
add
add
and
add
add
andb
add
pop
pop
add
sub
push
cmp
pop
pop
pop
push
cmpb
cmp
inc
sub
mov
movsl
dec
in
xchg
aas
stc
mov
fiaddl
adc
pop
pop
pop
or
add
add
add
add
or
mov
leave
outsb
in
lock
lock
in
into
jo
in
popa
fnstsw
push
push
and
addl
pop
sbb
sbb
and
push
push
stos
xchg
dec
mov
adc
inc
add
xchg
mov
lret
jnp
sti
filds
out
iret
jae
shrl
cld
test
add
add
dec
dec
dec
add
push
push
adc
sbb
addr16
add
add
cmp
sbb
pop
xchg
daa
movsl
stos
mov
iret
aam
push
out
call
fisttps
mov
sbb
inc
add
push
add
stc
fldl
shrl
inc
fwait
jge
lret
add
add
adc
add
add
cmp
add
and
dec
mov
mov
ret
ret
ret
jmp
outsl
imul
clts
outsl
outsl
outsl
add
add
add
sbb
aas
mov
mov
pop
in
int
in
into
jo
mul
in
xchg
outsb
fs
xchg
or
add
or
outsl
add
int
pop
sti
fisttps
dec
mov
inc
sti
cmp
adc
add
inc
add
add
jg
jg
add
add
test
test
hlt
hlt
hlt
loope
loop
mov
stos
cld
insb
arpl
pop
cmp
add
pop
ja
ja
add
add
daa
daa
daa
add
jle
ss
mov
insl
pushl
mov
adc
add
inc
add
add
add
cmp
push
sub
cld
out
in
imul
cmpsb
inc
jmp
or
cmp
add
xor
add
sbb
jg
pop
pop
pop
add
inc
inc
je
lock
repz
leave
call
leave
mov
inc
mov
mov
test
adc
xor
dec
dec
dec
add
add
je
jle
inc
in
shlb
lea
mov
xor
inc
cmp
pi2fd
add
add
add
add
inc
cmp
xchg
idiv
jmp
fnstenv
ljmp
and
add
and
add
add
sub
sub
xchg
xchg
xchg
add
add
ret
call
in
in
ror
sar
leave
fmulp
ret
enter
ret
mov
pushf
icebp
popa
pop
pop
sahf
or
lock
xchg
mov
xor
fadd
xchg
sub
add
add
pop
pop
pop
add
mov
mov
fnstenv
dec
repnz
or
add
add
add
add
add
add
pop
pop
pop
add
add
add
or
pop
pop
pop
xchg
stc
stc
stc
out
out
out
dec
lret
lock
jmp
int
jmp
aad
fmulp
sar
mov
inc
mov
popf
negb
push
xchg
adc
adc
and
and
mul
icebp
les
dec
test
imul
add
add
add
sti
out
or
cld
hlt
lods
call
mov
pushl
add
pop
aaa
aaa
aaa
add
arpl
pop
pop
pop
add
aam
out
repz
fdivrp
leave
in
fst
in
fcmovne
in
fcmovne
jmp
lret
enter
lret
mov
dec
mov
stos
ljmp
push
dec
xchg
adc
mov
cltd
in
jle
ret
cmc
loopne
mov
add
repz
repnz
sti
cli
repnz
jmp
mov
push
clc
movsl
inc
add
add
jnp
jnp
clc
clc
clc
jmp
lret
leave
out
in
fst
out
in
fcmovne
in
fcmove
in
fcmove
ljmp
jmp
rol
fmul
mov
dec
mov
stos
cmpsb
cltd
nop
jmp
repz
test
dec
dec
cmpsl
push
movsb
add
add
cld
icebp
mov
cld
divl
jmp
mov
pop
int3
clc
repnz
das
das
das
add
out
clc
out
out
out
fcmovnu
lret
out
out
in
in
fcmovne
in
fcmovne
in
fxch
ljmp
jmp
rol
jecxz
mov
aad
mov
int
scas
inc
mov
fxch
sahf
out
mov
iret
cmpsb
inc
hlt
cmpsb
xchg
pop
dec
sti
divb
jmp
mov
xchg
imul
add
add
add
pushf
pushf
pushf
lret
repz
jmp
jmp
int3
leave
out
loope
out
loopne
out
in
out
in
fcmove
jmp
lret
fmul
jmp
jmp
aam
jmp
rol
jmp
into
mov
call
shll
imul
scas
fdivs
mov
sti
stc
mov
jmp
ret
fstpt
leave
sbb
add
add
aaa
aaa
add
xor
repnz
lock
aad
loopne
int
lock
out
loope
out
out
in
fmul
in
fcmove
in
fxch
jmp
ljmp
ljmp
ljmp
out
mov
xlat
ret
mov
loope
test
imul
stos
cld
cld
mov
jecxz
pop
scas
xchg
inc
movsb
rol
add
add
add
or
push
mov
mov
cmc
cmc
cmc
jmp
in
dec
mov
icebp
jecxz
out
loopne
out
loope
out
in
fmul
in
fcmovne
jmp
leave
ljmp
ljmp
ljmp
jmp
rol
jmp
sarb
fcmovb
scas
push
in
mov
cld
cld
sar
cmc
mov
out
pusha
fidivrs
inc
xchg
push
push
push
pop
inc
inc
inc
add
add
add
or
add
cmc
cmc
cmc
in
in
in
dec
into
iret
jmp
fcmovnbe
push
in
lock
push
loop
out
loope
out
out
in
fcmove
ljmp
ljmp
ljmp
jmp
rol
jmp
sarl
fcmovnb
mov
jmp
mov
cld
sti
mov
loope
pop
call
mov
mov
popl
insb
or
dec
dec
add
add
add
jnp
or
int
ljmp
int3
leave
hlt
jmp
icebp
in
icebp
jecxz
out
loopne
out
loopne
out
jmp
lret
xlat
ljmp
jmp
rol
jmp
rol
call
sarb
out
mov
clc
repz
cld
cld
int
fistpll
sarl
dec
mov
jge
xor
sub
add
add
add
add
je
je
div
idiv
jecxz
jecxz
int3
int3
int3
jmp
out
push
out
repnz
push
jecxz
icebp
loop
push
loope
in
fst
jmp
enter
call
aam
jmp
sarb
call
sarb
jmp
iret
mov
in
scas
cld
cli
mov
push
out
fcmovnb
mov
fadd
mov
fadd
scas
call
mov
movsl
cwtl
mov
xor
sub
add
adc
inc
add
add
add
dec
add
sbb
aas
in
in
jmp
jmp
fdivrp
int
push
ljmp
repz
icebp
in
push
in
icebp
jecxz
out
loopne
out
fst
ljmp
jmp
aam
call
sarb
jmp
iret
mov
out
mov
fcmovb
mov
cmc
in
mov
cld
sti
sar
shlb
repnz
fstpt
fs
mov
mov
loope
mov
fadd
scas
xlat
mov
movsb
inc
mov
sti
mov
lret
and
push
pop
pop
pop
add
add
add
or
jnp
icebp
icebp
in
in
mov
loopne
hlt
jmp
hlt
ljmp
repnz
icebp
in
lock
out
loope
in
fcmovne
jmp
aam
jmp
rol
out
mov
out
mov
out
mov
loop
mov
stos
cld
clc
mov
fsubrs
jp
out
loop
dec
mov
mov
ffreep
mov
in
mov
jecxz
mov
loopne
mov
fcmovnb
stos
mov
fwait
inc
mov
cld
test
mov
push
push
push
add
add
add
and
add
xor
pop
ljmp
call
xlat
fdivr
iret
int3
lret
out
out
cmc
in
in
hlt
ljmp
repz
push
in
icebp
in
push
loop
ljmp
jmp
rol
out
mov
jmp
iret
mov
jmp
into
mov
in
mov
out
loopne
std
cli
mov
call
test
call
mov
hlt
in
mov
iret
scas
pop
inc
sahf
push
sarb
mov
in
mov
jecxz
mov
loop
mov
ffreep
lods
fidivrl
xchg
clc
mov
insl
jecxz
addr16
mov
add
add
add
add
test
repnz
loopne
loopne
out
call
call
push
jmp
push
ljmp
repnz
repnz
out
loope
jmp
aam
jmp
rol
jmp
sarl
jmp
into
mov
out
mov
jmp
int3
mov
fcmovb
test
cli
icebp
mov
cld
cli
mov
inc
fwait
inc
inc
test
loopne
mov
ljmp
mov
lods
jmp
enter
enter
enter
lods
faddp
test
mov
insl
fsubrs
xor
add
add
daa
daa
add
inc
inc
js
lock
jmp
iret
iret
ror
int
clc
icebp
in
imul
call
cmc
in
in
repz
repnz
icebp
in
out
loopne
jmp
rol
out
mov
in
mov
in
mov
in
mov
in
mov
ffree
mov
out
movsl
cld
divb
mov
lea
dec
mov
fld
cmpsl
mul
fwait
mov
jnp
dec
mov
loopne
lods
jecxz
scas
loop
lods
loop
lods
dec
scas
mov
scas
mov
cwtl
jns
mov
addr16
pop
pop
pop
lret
lret
lret
in
out
out
out
call
xlat
xlat
inc
ret
ret
push
out
jmp
div
ljmp
in
in
hlt
jmp
hlt
ljmp
repnz
in
fmul
jmp
rol
out
sar
sarl
in
mov
jmp
lret
mov
jmp
lret
mov
loope
mov
fadd
test
imul
cmpsb
std
divl
ljmp
mov
fnstcw
scas
jmp
leave
xchg
jmp
push
and
test
fs
fdivrs
stos
jmp
les
cli
mov
data16
mov
popa
leave
cwtl
mov
adc
adc
bound
xchg
hlt
hlt
hlt
jmp
loopne
call
rcl
aam
sar
clc
repz
push
icebp
in
div
jmp
imul
jmp
push
in
in
repz
repnz
jmp
rol
out
sar
iret
mov
in
mov
jmp
lret
jecxz
mov
loop
mov
ffree
scas
loopne
mov
clc
lock
xchg
fs
xchg
push
jnp
faddp
scas
ffreep
scas
call
mov
ja
scas
xchg
dec
call
pop
mov
mov
fnstcw
loop
mov
mov
lods
aam
rolb
ja
ja
sbb
sbb
xlat
xlat
xlat
repnz
out
fcomp
fdivr
mov
repnz
clc
repz
clc
repnz
div
in
imul
ljmp
in
in
hlt
jmp
repz
fdivrp
out
out
sar
iret
mov
in
mov
loope
mov
loop
mov
loop
mov
loopne
mov
xlat
mov
popf
cld
repnz
inc
lods
js
jne
sbb
sbbb
into
mov
ffree
lods
xlat
mov
xchg
jmp
shll
xchg
inc
popf
jbe
xchg
jo
lcall
leave
cmpsb
sbbl
outsl
fs
add
add
push
push
jl
lock
loopne
loopne
leave
lret
aad
stc
cmc
repnz
stc
hlt
icebp
clc
repnz
clc
repnz
push
icebp
jmp
imul
jmp
hlt
in
in
repz
out
ret
iret
mov
jmp
into
mov
loope
mov
loop
mov
loopne
mov
loopne
mov
ffree
scas
call
mov
sahf
cli
lock
jge
xor
pop
cmp
call
mov
cmpsb
fnstcw
jbe
in
int
loop
pop
call
test
cmp
mov
mov
call
insl
push
xchg
ljmp
add
or
add
sub
dec
xlat
xlat
xlat
in
rcl
sar
mov
hlt
icebp
cli
div
stc
hlt
icebp
clc
repz
clc
repz
push
icebp
in
push
out
ljmp
in
in
repz
in
mov
in
mov
jmp
lret
loop
mov
loope
mov
faddp
mov
ffree
scas
call
mov
cwtl
std
out
mov
pushl
nop
pop
lcall
scas
cwtl
call
mov
jl
in
iret
je
repnz
jmp
mov
imul
xchg
popa
repnz
jns
iret
fwait
js
shlb
add
addl
or
jp
jp
aad
clc
cli
div
cli
div
stc
cmc
repnz
stc
hlt
lock
clc
repz
div
in
div
jmp
cmc
out
jmp
hlt
jmp
lock
in
mov
jecxz
mov
loope
mov
loopne
mov
ffreep
mov
ffree
scas
mov
cwtl
sti
ljmp
std
repnz
std
lock
cld
in
popf
movsl
mov
jns
cmp
iret
mov
aam
sahf
mov
mov
shll
cwtl
aam
cwtl
std
cmpsb
test
sahf
jp
mov
in
in
in
add
add
add
jnp
sysret
add
add
test
in
ljmp
div
stc
hlt
icebp
stc
hlt
lock
clc
repz
push
icebp
in
push
out
ljmp
in
out
lock
jmp
into
mov
loope
mov
loope
mov
loopne
mov
ffreep
mov
ffreep
mov
fadd
lods
out
xchg
cli
loop
cld
jmp
nop
sti
loop
push
fisttpl
jmp
leave
xchg
call
mov
call
mov
fidivrl
sahf
call
mov
fdivs
cltd
mov
jne
mov
mov
add
add
add
dec
inc
ror
lret
aad
in
in
out
ljmp
stc
cmc
icebp
clc
repz
push
icebp
in
push
lock
imul
jmp
icebp
out
jmp
int
jmp
lret
loope
mov
loopne
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
nop
ljmp
call
mov
lcall
mov
lahf
fdivrs
sahf
call
mov
call
mov
xlat
mov
call
mov
cld
lcall
mov
push
add
mov
mov
jmp
out
lock
out
jmp
clc
repz
div
in
imul
ljmp
jmp
mov
loope
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
lods
fadd
stos
fstpt
movsb
call
mov
mov
fnstcw
mov
fdivrs
pushf
aad
cltd
call
mov
call
mov
shll
insb
fcoml
pop
aas
movsl
mov
scas
push
movsb
movsb
movsb
push
jno
outsb
dec
scas
stos
test
loopne
out
fsubrp
icebp
jmp
div
icebp
in
cmc
out
jmp
loop
mov
ffreep
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
test
fnstcw
fdivrs
mov
xlat
mov
pushf
mov
aam
xchg
aam
xchg
aam
xchg
shrb
xchg
nop
imul
imul
test
test
pusha
pop
pop
cmp
ror
fsubp
fstp
ljmp
jmp
faddp
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
stos
fnstcw
movsl
fidivrl
xlat
mov
mov
aad
fwait
call
mov
call
mov
call
mov
shll
call
lods
mov
mov
arpl
lods
jbe
cmp
imul
jns
jae
iret
lret
loop
xlat
jmp
mov
faddp
mov
fadd
scas
fcmovnb
lods
fcmovnb
stos
fidivrl
cmpsb
fnstcw
call
mov
lahf
call
mov
call
mov
aad
cltd
call
mov
call
scas
xchg
call
scas
xchg
shrb
mov
pusha
cmp
stos
mov
add
bound
push
pusha
pop
pop
push
mov
mov
aad
cmpsl
icebp
ffree
scas
fnstcw
cmpsb
fnstcw
mov
sahf
aam
pushf
aam
lcall
mov
shrb
nop
dec
stos
mov
int
mov
into
test
xchg
imul
pop
cmp
fcmovnu
fildl
xchg
sub
pop
dec
cmp
sahf
cmpsb
mov
into
mov
in
fidivrl
mov
call
mov
pushf
shll
cwtl
call
mov
shrb
nop
dec
stos
mov
int3
cmpsl
mov
int
xchg
mov
push
jle
xor
jnp
xor
sahf
xchg
nop
add
add
test
es
cmp
gs
dec
lcall
xchg
out
mov
popf
call
mov
shll
xchg
dec
lods
xchg
shrb
dec
cmpsb
xchg
int3
movsl
test
mov
ds
push
xor
lock
add
add
add
aaa
xor
push
imul
mov
pushf
test
aam
fwait
cli
shlb
xchg
dec
lods
dec
stos
mov
int3
cmpsb
xchg
lret
movsb
test
lret
mov
push
das
mov
cmpsl
mov
add
aas
cmp
sbb
dec
xor
addr16
test
xchg
jbe
int
test
cmpsb
xchg
lret
dec
mov
jne
jl
xor
gs
inc
pop
out
out
out
add
add
add
push
or
pop
adc
push
cmp
jbe
pop
inc
test
andb
movsl
xchg
lret
inc
mov
dec
je
sub
lret
adc
add
add
arpl
sbb
and
sbb
pushf
nop
push
inc
mov
dec
sub
addr16
dec
dec
pop
pop
pop
add
sbb
push
pusha
ds
insb
inc
daa
xchg
pop
inc
xor
xlat
aad
or
add
add
ret
int3
enter
loope
push
clc
pop
add
inc
sldt
sti
orb
add
incl
add
add
clc
add
pop
add
push
push
add
sldt
push
add
add
add
jmp
add
add
add
inc
add
sldt
inc
add
cmpb
add
addb
cmp
add
cmp
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
pop
add
clc
add
add
pop
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
loopne
add
add
add
clc
add
add
aas
add
incb
add
add
add
addb
add
add
lock
add
add
cld
add
add
add
incl
add
incl
add
inc
add
incl
add
clc
add
incl
add
incb
add
add
incl
jmp
ud0
add
clc
ud0
add
lcall
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
cmpsb
xchg
insb
add
lea
mov
jge
mov
jbe
shrb
outsl
add
movsl
ja
lret
add
mov
push
add
jge
out
shll
mov
test
add
movsb
sahf
add
stos
cwtl
add
mov
add
mov
addb
mov
test
shrb
add
scas
xchg
add
mov
add
mov
xchg
add
mov
add
mov
add
mov
add
mov
lahf
add
mov
cmpsl
add
mov
movsl
add
lea
loope
mov
jecxz
xchg
add
iret
xchg
add
lret
out
xchg
add
loop
add
ret
fcmovnb
test
add
ret
scas
add
ret
mov
ffree
mov
loopne
movsb
add
frstor
add
mov
jecxz
mov
loopne
mov
jecxz
mov
jecxz
mov
add
int
add
iret
mov
add
sarb
add
in
add
les
ror
roll
ror
add
rcl
add
fcmovu
add
fcmovu
add
rol
add
aam
add
rol
add
aad
add
aad
add
xlat
enter
enter
lret
fcmovne
add
fmul
add
fcmovnbe
add
add
fstp
add
hlt
lds
out
loopne
add
loope
add
loope
add
jecxz
add
out
add
call
in
hlt
ljmp
imul
jmp
add
hlt
icebp
add
or
add
or
add
add
add
add
add
adc
add
add
push
add
add
add
add
push
cmp
add
add
add
add
dec
pop
pop
pop
push
inc
xor
add
sbb
bound
push
dec
dec
nopl
add
add
dec
popa
bound
push
inc
inc
dec
adc
sub
add
sbb
addr16
push
inc
inc
or
or
add
dec
gs
inc
cmp
adc
add
imul
add
or
add
push
xor
sub
add
add
cmp
sub
and
add
and
and
sbb
add
pop
push
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
inc
and
xchg
nop
je
add
test
add
mov
add
dec
add
cwtl
inc
add
adcb
mov
stos
nop
outsb
add
lea
test
nop
jne
stos
xchg
jl
mov
jbe
mov
jnp
mov
jge
mov
mov
dec
add
cmpsb
inc
add
movsl
dec
add
lods
dec
add
lods
push
add
lods
push
add
scas
pop
add
mov
add
mov
add
mov
add
mov
pop
add
mov
pusha
add
pushf
jl
shlb
push
add
mov
add
mov
pop
add
ret
jecxz
popa
add
les
loopne
insb
add
leave
push
add
int
add
lret
jo
in
into
jae
call
enter
sarl
out
aad
add
popf
addl
mov
addb
fwait
addb
popf
lea
mov
fwait
cwtl
add
mov
mov
test
mov
xchg
add
test
fwait
add
movsb
mov
add
test
add
mov
add
movsb
test
ret
add
cmpsb
mov
int3
stos
mov
shrb
add
mov
add
mov
add
mov
add
mov
mov
ret
add
scas
xchg
add
mov
add
mov
fwait
add
mov
xchg
add
mov
lcall
mov
popf
add
mov
add
mov
test
shll
add
mov
scas
add
mov
mov
add
mov
mov
add
mov
mov
iret
mov
test
mov
xchg
add
les
add
int
add
int3
test
in
xlat
mov
ljmp
add
fisttps
add
into
xchg
add
rcll
loop
fwait
add
fcompl
add
loope
add
loopne
add
jecxz
add
loope
add
in
add
loop
add
jmp
mov
add
shrl
fcmovb
lods
add
ret
ffree
scas
add
leave
scas
add
ret
rol
mov
fcmovb
mov
faddp
mov
fcmovnb
mov
rol
mov
add
int3
mov
add
lods
add
shrb
add
fisubrs
add
mov
loopne
mov
jecxz
mov
in
mov
loope
mov
in
mov
jecxz
mov
add
int
add
into
mov
add
sarb
add
loopne
add
out
add
out
mov
add
out
scas
add
icebp
movsl
add
rep
add
rep
add
out
add
divb
add
idivb
add
sti
mov
add
mov
add
int
add
into
ret
int
add
ror
add
ror
add
rcl
add
rcl
add
aad
add
aad
add
fcmovu
add
add
fstp
add
rol
add
aam
add
rol
add
aam
add
lds
ljmp
add
fmul
add
fcmove
add
fcmove
add
fcmove
add
fmul
add
fst
add
fst
add
add
cld
roll
cmc
leave
add
loopne
add
loope
add
loop
add
loop
add
loope
add
jecxz
add
in
add
out
add
loope
add
out
add
out
add
call
call
add
call
loope
hlt
jmp
add
in
out
hlt
out
call
add
repnz
add
icebp
icebp
add
repnz
hlt
hlt
add
hlt
icebp
pop
xor
add
add
xchg
push
sbb
push
push
add
add
add
and
add
dec
jnp
add
add
pop
and
add
add
sbb
add
hlt
lret
jno
add
add
mov
shl
movsl
lahf
jno
add
sub
add
shlb
add
hlt
into
xlat
mov
sbb
add
int
out
fcmovu
mov
jae
cmp
lock
fsub
jecxz
fcmovu
fidivrl
les
add
in
in
out
fcmovu
mov
xchg
daa
dec
shl
in
out
jecxz
fcmovu
fidivrl
in
sub
dec
add
int
in
in
in
out
fcmovu
mov
sarl
dec
ljmp
fidivrl
pushf
xor
xchg
je
add
add
add
lock
div
in
in
mov
scas
stos
les
subb
scas
scas
pushf
sbb
add
push
hlt
leave
repnz
div
cmc
in
fcmovnu
mov
mov
mov
mov
push
pop
lods
cmpsl
cmpsl
push
insl
add
add
ror
sti
cli
cli
div
in
xlat
mov
mov
mov
cmpsb
ret
pushf
subb
je
arpl
add
push
lock
idiv
in
in
mov
mov
mov
xchg
stos
mov
push
pushf
cmp
add
add
iret
iret
sti
cli
cli
div
out
mov
mov
lar
cmp
add
add
add
sti
cli
cli
cli
jecxz
mov
lea
pusha
jge
pop
inc
add
add
add
add
cli
cli
cli
mul
mov
mov
xchg
insb
insb
sbb
leave
repnz
cli
cli
cli
jecxz
mov
insb
imul
inc
add
add
aam
cli
ljmp
xchg
xchg
jne
insb
addr16
dec
add
lret
mov
jne
imul
add
jbe
jne
jne
imul
dec
gs
imul
add
add
imul
add
inc
push
push
adc
aas
adc
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
sbb
jge
and
jnp
aaa
add
data16
jnp
add
jo
add
jne
add
xorb
mov
add
mov
add
xchg
cmp
fsubrs
dec
add
xchg
inc
add
pop
add
nop
pop
add
fwait
pop
add
mov
cwtl
pusha
add
cwtl
imul
mov
jae
lods
nop
jne
stos
cwtl
jae
movsl
xchg
jp
stos
xchg
jl
mov
jl
mov
lcall
mov
mov
jle
les
add
mov
dec
add
test
add
stos
dec
add
mov
add
stos
push
add
movsb
pop
add
scas
pop
add
lods
push
add
mov
add
mov
add
mov
add
mov
push
add
mov
data16
lods
fs
test
pusha
add
mov
imul
les
js
lret
mov
add
rcrl
ret
ffreep
jl
in
pusha
add
insb
add
lret
in
into
jb
loopne
jl
out
jnp
in
shlb
jmp
jl
lock
aam
add
cwtl
add
xchg
addl
scas
fwait
xchg
test
cltd
mov
stos
fwait
mov
mov
test
test
xchg
add
mov
mov
lods
mov
cwtl
add
cmpsl
xchg
add
test
pushf
add
mov
add
stos
add
mov
add
mov
addl
lret
add
cmpsl
mov
stos
mov
into
stos
mov
shrb
add
mov
add
mov
add
mov
test
mov
mov
leave
lods
xchg
add
scas
nop
add
mov
add
mov
add
mov
add
mov
add
mov
lcall
mov
sahf
add
mov
add
mov
add
mov
stos
add
mov
stos
add
mov
mov
add
mov
mov
int
mov
faddp
nop
add
lret
fwait
add
lret
out
mov
jmp
fimull
add
fiadds
add
fisttps
add
rcll
add
ficoml
add
fcompl
add
loope
add
loope
add
out
add
jmp
cltd
add
in
add
jmp
add
shlb
stos
add
shrl
add
sarl
ffree
mov
mov
aam
mov
add
leave
mov
add
lds
jecxz
stos
add
mov
loop
mov
in
mov
add
sarl
add
loope
add
loopne
add
in
add
ljmp
hlt
in
add
jmp
add
icebp
movsb
add
icebp
stos
add
loop
add
in
mov
cld
out
mov
cli
hlt
mov
stc
idivb
add
ret
ret
add
mov
add
int3
lret
add
enter
int
add
iret
int
ror
add
ror
add
aam
add
xlat
aad
xlat
xlat
fadds
fcmovnu
fildl
out
roll
aam
add
lret
add
enter
int3
add
fcmovnbe
add
fst
add
add
sti
ret
cmc
lret
add
loopne
add
loope
add
loope
add
in
add
call
jecxz
ljmp
add
jmp
add
jmp
add
out
jmp
add
repnz
add
repnz
hlt
icebp
add
clc
testl
add
das
cmp
or
add
add
push
push
push
dec
cmp
add
addb
add
outsb
sahf
mov
arpl
add
inc
push
stos
stos
inc
add
add
mov
add
add
add
add
xor
push
stos
cmpsb
data16
add
movsb
mov
add
add
cltd
jae
add
add
add
outsb
inc
push
or
add
pushf
scas
dec
xor
add
cld
fcmovnu
mov
add
add
add
sbb
add
add
mov
cmp
add
fnstsw
add
add
into
dec
sldt
add
enter
cmp
add
add
cld
fucomi
jmp
mov
jb
add
add
add
rcll
jge
add
add
cld
hlt
loopne
jmp
fnstsw
add
add
roll
outsl
push
jmp
jmp
out
mov
lret
xor
inc
push
hlt
cld
jecxz
out
jmp
jmp
call
xchg
pushf
cmpsb
xor
add
add
je
neg
out
out
out
jmp
jmp
call
mov
xlat
int3
inc
dec
cld
cld
jecxz
repnz
out
jmp
jmp
out
call
ret
xlat
push
dec
addb
add
out
out
out
out
jmp
call
out
call
in
xlat
dec
ds
add
outsl
cld
mul
ljmp
jmp
out
out
mov
mov
inc
insb
add
add
add
cld
jecxz
repz
repnz
out
jmp
out
out
out
out
mov
push
ds
xchg
xchg
xchg
bound
add
hlt
fcomi
repnz
out
jmp
out
out
out
mov
in
iret
cmp
mov
hlt
div
clc
repnz
icebp
jmp
call
mov
shr
inc
aad
inc
mov
mov
pop
add
hlt
mov
repnz
icebp
jmp
out
out
mov
mov
aad
push
leave
xor
mov
xchg
add
add
add
add
mul
fdivrp
clc
clc
clc
repnz
out
out
out
mov
lret
xor
cmp
xchg
mov
mov
sub
add
add
add
hlt
mov
clc
repnz
out
out
mov
rol
xlat
cmp
inc
mov
rol
rol
sub
add
add
add
neg
fdivrp
cli
clc
clc
clc
clc
repnz
out
out
mov
rol
leave
adc
mov
rol
rorb
add
jecxz
cli
cli
cli
stc
clc
clc
clc
repnz
out
mov
rol
int
cmp
sbb
pop
xchg
rol
ja
add
add
add
hlt
fninit
cli
cli
sti
stc
stc
clc
clc
clc
bnd
mov
rcl
push
push
sub
mov
mov
add
add
jecxz
jecxz
cli
cld
sti
sti
stc
stc
clc
clc
repz
rcrb
mov
pop
or
sub
add
add
cld
hlt
fninit
cld
sti
sti
sti
sti
stc
stc
clc
clc
bnd
rol
mov
add
or
xchg
adcl
xor
imul
add
add
jecxz
jne
std
std
sti
sti
sti
stc
stc
clc
clc
repnz
shlb
push
test
inc
inc
and
sub
add
add
add
add
std
std
std
std
sti
sti
sti
stc
clc
cli
repnz
mov
xchg
movsl
int
ror
mov
add
xchg
mov
popa
jb
jne
std
std
std
sti
sti
sti
stc
stc
clc
repnz
les
movsb
lods
mov
mov
sub
add
jecxz
idiv
std
sti
sti
sti
cli
clc
repz
les
push
fwait
mov
mov
sub
add
div
cli
cli
cli
cli
clc
clc
ffree
les
cwtl
xchg
mov
mov
jbe
pop
mov
cli
clc
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
xchg
mov
test
sub
add
mov
lds
cwtl
cwtl
cwtl
xchg
xchg
mov
test
pusha
add
in
mov
mov
cwtl
xchg
xchg
mov
mov
sub
jae
insb
cwtl
mov
mov
mov
sub
add
add
xchg
cwtl
mov
mov
sub
sub
add
bound
xchg
xchg
mov
jns
js
sub
add
imul
sub
gs
js
sub
sub
add
add
jns
dec
and
pop
add
pop
and
sub
add
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
pop
add
add
add
add
add
add
mov
or
add
add
mov
mov
push
mov
clc
clc
mov
mov
mov
add
mov
add
add
xchg
add
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
add
add
jo
call
add
add
addb
push
jo
add
add
add
mov
or
add
mov
add
add
add
xchg
or
add
add
add
add
clc
mov
call
add
or
vpmacssdd
add
add
mov
add
add
add
mov
add
add
mov
add
add
jg
mov
add
add
mov
add
add
clc
clc
clc
clc
mov
mov
clc
decl
mov
jo
clc
clc
mov
jle
mov
decl
jbe
xchg
decl
mov
push
add
mov
clc
clc
mov
mov
add
decl
mov
out
mov
add
ud0
clc
mov
call
add
mov
decl
mov
add
add
mov
add
add
add
or
xchg
add
add
add
mov
js
add
loopne
add
js
jle
add
add
add
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
or
add
add
ja
mov
rolb
mov
add
outsb
mov
xchg
add
add
add
add
add
decl
call
mov
add
psubb
or
add
call
add
add
add
add
jo
or
add
clc
mov
add
add
add
decl
jo
mov
add
clc
mov
clc
out
add
mov
jle
add
add
add
add
mov
or
mov
mov
call
add
mov
clc
clc
mov
mov
add
add
add
add
clc
mov
mov
add
add
add
clc
mov
mov
mov
or
decl
mov
xchg
add
add
clc
mov
mov
add
add
mov
mov
call
xchg
add
add
clc
mov
mov
mov
jg
mov
mov
mov
mov
mov
mov
clc
clc
decl
mov
call
mov
add
or
clc
clc
clc
mov
mov
enter
call
clc
clc
mov
mov
mov
add
clc
decl
mov
call
add
clc
mov
decl
clc
call
call
add
add
clc
clc
mov
divl
jle
js
loopne
add
or
mov
mov
add
add
clc
mov
mov
mov
add
add
or
clc
clc
clc
mov
mov
jo
add
add
add
clc
clc
mov
mov
mov
ja
add
add
add
add
mov
js
ja
or
mov
xchg
add
add
add
add
mov
js
xchg
add
mov
js
xchg
addb
add
add
js
call
xchg
add
add
xchg
enter
add
or
xchg
add
in
ja
add
add
add
add
addb
xchg
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
mov
add
add
add
test
xlat
adc
inc
out
lret
adc
aaa
or
push
std
repz
out
fsubrs
jns
popa
pop
mov
cmp
cld
fwait
jno
repz
xchg
pop
xlat
lcall
xor
jo
lcall
cwtl
test
cli
mov
lret
mov
test
fistpll
shr
movsl
xor
xchg
fldt
add
mov
iret
jge
jp
push
mov
mov
sbbb
push
test
xchg
push
jmp
fwait
lea
out
fcmovnu
sub
cwtl
fadds
push
rol
aad
mov
mov
lods
pop
fildll
pop
lea
in
int3
mov
push
lret
mov
inc
lea
js
xor
lods
add
cmpb
rolb
sarb
push
mov
lret
mov
std
loope
inc
pop
fsts
fwait
inc
mov
sub
add
cmpsb
jmp
cmpsb
xchg
sbb
pushf
push
cmp
mov
mov
xchg
mov
jp
leave
rorb
push
xlat
xchg
les
les
lret
jo
aad
xlat
movsb
enter
xchg
xchg
jb
into
or
repz
popf
add
jae
dec
mov
call
scas
push
mov
loope
mov
jbe
cmp
add
stc
sbb
mov
jmp
aaa
pop
cmp
in
pop
hlt
sar
ss
jbe
lret
add
push
xchg
mov
out
ret
push
dec
rol
sbb
clc
sti
xchg
sub
push
push
shlb
xchg
movsl
push
repnz
jo
andl
mov
cmpsl
out
push
lret
cld
push
push
mov
lahf
mov
test
lea
push
decl
mov
inc
add
in
pop
and
adc
mov
lcall
lcall
out
lea
push
sti
call
lcall
js
fisubl
mov
mov
lea
pop
cmp
and
sahf
divb
cmp
lcall
mov
pop
fs
jp
out
int3
popa
sbb
jae
sub
or
sub
push
imul
rorb
pop
push
mov
lods
cmp
jns
adc
dec
jbe
movsl
cmc
mov
sbb
outsl
vmulsd
pushf
xchg
movsl
mov
imul
je
ljmp
add
ds
adc
aaa
sbb
stos
or
jg,pn
addr16
sbb
mov
mov
scas
jbe
mov
xor
repnz
adc
repz
mov
aaa
iret
xchg
mov
and
in
push
push
ret
cmp
mov
scas
cmp
mov
inc
mov
push
movsl
jge
pushf
pop
adc
inc
imul
mov
imul
mov
mov
in
xlat
or
cltd
pop
fs
sbb
js
sbb
add
push
add
and
pop
gs
push
dec
inc
decl
cmp
mov
add
test
xchg
pop
mov
pop
xchg
and
sub
dec
subb
lcall
add
stos
push
fwait
xlat
xchg
push
shll
pop
clc
adc
imull
mov
int3
test
pop
aaa
sbb
inc
or
jmp
int
not
lret
adc
imul
mov
adc
adcl
push
or
mov
andl
imul
push
jp
jecxz
in
xor
leave
inc
mov
and
sub
cmp
push
mov
sbb
test
fcomp
dec
jmp
rol
outsl
cmp
std
loopne
jnp
sbb
dec
pop
data16
sbb
pushf
out
hlt
test
jmp
bound
sub
xchg
fucom
pop
fwait
testb
stc
sarl
jbe
and
and
add
lret
inc
lret
call
loopne
shlb
mov
popf
mov
or
mov
in
stos
cwtl
mov
and
pushf
std
out
in
aad
mov
mov
call
aaa
push
ds
mov
loope
test
nop
ss
leave
fidivrs
mov
mov
dec
popa
or
dec
push
push
and
cmp
or
jne
lcall
test
sbb
xchg
xchg
scas
mov
xchg
add
sbb
pop
cmp
lahf
call
inc
out
outsb
hlt
rcll
ljmp
mov
rclb
xchg
ret
mov
jne
cli
mov
inc
push
jae
loope
push
pusha
add
addr16
test
add
insl
add
jl
xchg
sti
es
in
mov
adc
ja
add
jbe
das
or
push
jg
bound
push
xor
pop
sarb
dec
punpcklbw
ret
mov
rcr
pop
mov
rol
jno
dec
jns
mov
call
loopne
scas
or
mov
repnz
push
in
jnp
pop
dec
jmp
in
das
mov
xlat
icebp
dec
mov
mov
test
ss
cltd
lahf
push
xor
jmp
js
cmp
inc
orb
sbb
cmp
ljmp
mov
or
cmc
push
adc
stos
lods
adc
xchg
cs
jl
into
add
mov
pop
dec
fdivr
pop
push
bound
lret
in
mov
fildll
call
in
std
out
push
and
xchg
jmp
scas
aaa
push
mov
mov
push
mov
inc
jae
jo
cmp
lods
and
and
xor
pop
cmpsb
movsl
daa
sbb
mov
mov
jmp
push
inc
in
push
int3
vsqrtps
pop
into
mov
outsb
out
push
jo
dec
roll
adc
cltd
mov
in
sahf
sub
mov
fwait
sub
adc
and
js
mov
mov
mov
mov
dec
nop
adc
xchg
mov
icebp
push
push
pushf
scas
and
push
cmp
pop
shr
xchg
inc
test
fs
rclb
dec
pop
mov
jmp
sti
push
stos
pop
sub
jecxz
dec
inc
add
mov
lret
adc
lods
mov
sbb
sbb
fisttpll
out
loop
pop
or
mov
cmc
jnp
xchg
jge
clc
xor
jp
adc
jo
sub
inc
mov
mov
std
jbe
cmpsl
call
lods
pop
test
nop
loop
scas
xchg
sub
mov
lods
das
adc
andl
addl
aas
mov
cmpl
aaa
mov
or
iret
ljmp
dec
repz
enter
adc
dec
cs
lcall
push
or
idivl
call
xchg
popf
testl
inc
jb
and
loop
jge
mov
cmp
ss
inc
push
jbe
loope
sbb
mov
xchg
les
or
sub
xchg
mov
sbb
push
inc
lods
mov
pushf
add
aaa
xor
inc
jnp
movsl
xlat
pushf
add
or
dec
lea
rcll
nop
fs
sbb
push
sti
int3
cs
data16
xor
inc
inc
gs
cmpsl
clc
fldl
mov
fucompp
fldt
arpl
ss
sub
mov
add
std
fs
mov
push
dec
sbb
fsubl
sub
rol
xor
jecxz
adc
pop
xchg
or
loope
mov
cli
scas
fistl
shlb
or
or
lahf
shll
sti
cwtl
push
js
push
push
push
jle
lahf
xor
pop
xchg
mov
das
jnp
std
xchg
iret
cwtl
aas
int3
imul
loopne
fldpi
sbb
loop
loopne
stos
inc
sbb
and
xor
or
outsb
testb
or
add
cltd
xchg
rcl
sahf
clc
mov
leave
loopne
movsb
xorl
adc
enter
hlt
rorl
mov
arpl
mov
repz
sub
inc
pop
movsb
jecxz
xor
or
mov
pop
hlt
gs
lcall
or
mov
fdivs
ret
push
push
adc
fimull
dec
and
mov
fsubp
pop
add
push
xlat
add
je
ret
jle
subl
push
and
cmp
sbb
insb
jp
jl
fs
inc
inc
test
mov
add
daa
push
mov
idivb
cs
popa
aad
pop
push
pusha
pop
xor
xchg
dec
fistpl
scas
sub
test
ljmp
jmp
jne
lret
cmp
test
cmpsl
int
sub
aam
mov
dec
es
fdiv
mov
push
aaa
xchg
pop
inc
push
arpl
mov
pop
mov
mov
xchg
sub
inc
lods
mov
xor
mov
das
sbb
test
iret
xchg
popf
pop
sahf
into
push
xchg
xlat
xor
mov
mov
jmp
inc
ret
sar
pusha
adc
iret
movb
call
cs
and
int
stos
jmp
pop
lods
xor
jecxz
dec
cmp
sbb
pop
xchg
ja
or
mov
loopne
mov
mov
and
idivb
xchg
out
mov
lds
aam
and
hlt
mov
xchg
or
jle
lods
pop
dec
movsb
inc
and
hlt
sub
out
inc
adc
lods
scas
cmp
bound
xor
push
xchg
mov
movsb
jmp
fistl
pop
mov
mov
dec
xchg
jmp
jbe
rol
jg
pusha
mov
add
push
mov
mov
imul
or
test
jge
mov
mov
jno
outsl
int
add
es
gs
cs
push
cmp
bound
std
pop
movsb
lret
mov
add
mov
mov
testl
ds
sub
mov
mov
aad
push
outsb
jae
addb
in
lods
pusha
lea
ds
loopne
add
mov
xorb
xor
lahf
fbld
sbb
fstps
loopne
push
imul
push
inc
xor
or
cmpsl
jnp
icebp
mov
je
int
pop
mov
shl
xor
cltd
stos
out
pop
popa
and
scas
inc
cmp
push
cld
adc
int
out
popa
pop
dec
sbbl
cmpsl
popa
jl
test
popf
addl
pushf
cli
outsb
cmc
mov
nop
lcall
xchg
pop
rcrb
and
inc
popa
mov
mov
lea
and
push
out
daa
sbb
xchg
dec
push
sub
or
imul
xchg
push
movsl
mov
pushf
lods
outsb
jmp
fisubrl
jmp
lds
jg
test
outsl
ret
out
add
sbb
pop
and
inc
lock
mov
cmp
pop
movb
faddl
mov
xchg
fsts
dec
mov
dec
lcall
push
xchg
loope
in
mov
les
xchg
test
imul
nop
and
int3
pop
aas
or
xor
inc
mov
sub
div
cmp
or
frstor
xchg
xchg
clc
mov
push
inc
stos
sub
jg
pop
pop
in
xchg
xor
jb
test
mov
add
nop
pop
in
xor
nop
xchg
setno
cli
mov
shl
and
push
mov
mov
aaa
jp
sub
mov
mov
dec
or
sbb
jle
pop
dec
adc
xor
insb
or
ja
add
cwtl
stos
xchg
imul
pop
hlt
pop
int
fld
sbbl
mov
les
sti
stc
cli
mov
inc
push
nop
int3
mov
fs
jb
ret
adc
test
out
ficoms
shrl
pop
imul
in
and
mov
fwait
jl
stos
mov
lcall
cmp
pusha
lret
push
testb
pop
mov
sbb
rcrl
or
loop
ret
sarb
ds
pop
cmp
les
xor
jno
add
outsl
shrl
mov
mov
dec
data16
shrl
push
cld
ja
mov
jns
mov
out
push
decb
cld
mov
lret
fildl
dec
inc
push
push
fisubs
cmp
mov
sub
dec
ja
call
mull
in
jl
xchg
mov
pop
repz
and
mov
addr16
mov
mov
aaa
orl
sbb
imul
hlt
add
xor
iret
push
gs
loope
lods
or
rcrb
loope
scas
dec
ret
jge
pop
mov
inc
push
jg
sub
mov
jp
add
ja
sub
and
cmp
or
dec
jno
inc
mov
into
cld
mov
dec
ret
cmp
fldenv
iret
lds
je
pop
addr16
pop
xchg
ja
ret
or
jmp
fstps
xchg
add
inc
mov
loop
xor
adc
mov
shrl
cmp
imul
fdiv
scas
dec
jmp
jecxz
cmp
mov
scas
mov
lds
jge
add
push
or
jns
mov
lods
bound
mov
fs
pop
sarb
sub
cmpsb
jae
fisttpl
or
hlt
mov
hlt
pop
pop
leave
pop
push
cmp
jnp
cmp
sbb
mov
mov
inc
stc
pop
pop
dec
popf
dec
pusha
cli
or
rcll
jecxz
adc
xorb
ljmp
and
ljmp
and
add
jo
sqrtps
add
sbb
into
sbb
mulb
lret
mov
xor
mov
or
scas
loop
je
out
aam
dec
mov
push
enter
ss
sbb
jecxz
sub
jl
arpl
xlat
adc
out
push
lds
mov
movl
mov
inc
pop
rcrl
cltd
ljmp
cwtl
sub
in
out
scas
aam
push
lods
shll
rolb
lcall
cmpsb
out
test
pushf
inc
iret
hlt
sub
nop
shlb
fs
xor
or
cmp
mov
movsb
jnp
mov
xchg
adc
xor
cltd
movsl
cmc
cli
stos
adc
out
in
pop
xchg
cmp
cld
jnp
lock
into
push
gs
sbb
mov
sbb
mov
mov
cmp
testl
mov
aas
sar
shrd
test
enter
idivl
cmp
jg
cmp
jne
mov
hlt
psubusb
enter
call
pop
push
mov
mov
out
arpl
or
lret
jg
cmp
cmpsb
ds
and
or
or
sarb
fdivrs
popa
in
jbe
dec
push
mov
mov
stc
outsl
or
and
dec
mov
xlat
arpl
test
adc
add
addb
push
sub
dec
mov
cmpsl
js
lahf
cltd
ljmp
mov
fs
xchg
mov
mov
outsb
and
push
adc
add
sub
cmpsb
repz
mov
lea
shrb
in
lcall
push
mov
pusha
loopne
bnd
out
or
in
and
les
or
lock
xor
inc
lock
pop
js
adc
test
outsl
pusha
xor
push
jg
pushf
xchg
sbb
mov
fsts
mov
mov
pop
aad
pop
jno
lds
inc
sbb
sets
stos
mov
out
push
ss
lcall
push
shlb
stos
ds
xchg
mov
scas
adcl
sbb
orb
sbb
mov
lods
push
adc
gs
fldt
daa
leave
xchg
fs
stc
fsubrs
jecxz
inc
xor
pop
and
mov
inc
inc
sbb
sbb
mov
int
sbb
fwait
cmpsb
mov
cmpxchg
fsubrs
xchg
ja
and
adc
fsubp
shll
add
insl
pop
mov
data16
adc
xor
in
in
add
pushf
test
aam
mov
mov
lds
mov
mov
or
jmp
pop
sbb
imul
add
pop
adc
in
rcll
dec
jl
add
xchg
rcrl
jns
jle
dec
aas
and
and
mov
push
cmpsl
pushf
add
outsb
adc
pop
popa
push
out
outsb
divb
adc
js
cwtl
jg
jns
lods
fmull
mov
add
or
iret
push
mov
adc
or
pusha
mov
mov
cmp
xor
jbe
or
xchg
or
sub
add
jb
mov
jns
fcomip
pop
movl
je
pushf
ret
in
xor
stc
dec
sbb
sahf
es
dec
lar
and
pushl
push
ret
test
cld
mov
out
js
ret
mov
lods
mov
sbb
inc
scas
stc
fisubs
roll
out
or
dec
add
scas
test
sub
inc
cmc
loopne
push
sbbl
pop
fwait
xor
cmpsl
xchg
sub
cmp
pop
xor
jns
and
pop
mov
mov
cmp
cmp
je
jp
and
xor
mov
sti
js
in
pop
mov
ds
dec
movsb
gs
cmp
add
in
jg
push
mov
aad
inc
adc
mov
mov
xor
dec
movsb
shlb
inc
adc
adc
outsl
sub
ret
mov
aad
pop
jecxz
sbb
inc
cmp
fnsave
adc
clc
or
push
imul
cld
pop
sub
adc
push
fnstcw
inc
les
cmp
jnp
idiv
xor
sub
ret
repz
fprem1
push
or
cmc
sti
data16
add
in
add
mov
add
or
jne
out
stos
adc
adc
pop
mov
in
push
cmp
gs
repz
ss
push
inc
aas
fmull
fidivl
das
arpl
push
mov
dec
repz
das
addr16
adc
mov
mov
xor
fists
fwait
push
or
sbb
xor
jecxz
cwtl
cwtl
mov
addr16
hlt
mov
test
sbb
and
sahf
data16
lods
push
push
dec
or
stc
popf
mov
test
push
and
mov
jge
or
rcrb
adc
aaa
inc
movsb
adc
es
enter
jo
cmp
inc
xlat
out
and
cmp
mov
ss
incl
iret
mov
mov
and
repz
repz
push
sarl
sub
lock
mov
jbe
shl
pop
jb
test
shlb
or
lret
sbb
jmp
xor
not
mov
or
lret
inc
mov
ja
push
xchg
xor
inc
push
clc
pop
mov
xor
outsl
call
sub
imul
das
mov
mov
je
lahf
adc
stos
pop
mov
nop
gs
test
data16
out
movl
xchg
out
cmp
roll
fadds
repz
xor
stc
inc
mov
xor
fisubl
push
mov
cs
mov
and
xor
scas
or
fistpl
cld
pop
pop
repnz
lahf
jg
pop
shl
add
sbb
inc
notl
add
sub
lds
cwtl
mov
test
fwait
sbb
je
cwtl
xorb
lret
pop
pop
call
insb
push
cmpsb
inc
mov
sbb
or
mov
pusha
into
pop
je
and
outsb
pop
adc
sti
cmp
repnz
test
adc
ss
inc
pop
cmp
int
xor
stos
adc
mov
lds
pop
cmp
repz
fmuls
sub
movsb
inc
rorb
cld
jl
add
aaa
fmull
push
adc
hlt
dec
gs
and
iret
dec
push
jns
push
mov
cmp
vpunpckhwd
xor
xlat
js
mov
mov
xchg
lds
in
mov
incl
fdivrs
cmp
cmc
dec
es
dec
shrl
xchg
mov
hlt
in
mov
mov
test
lahf
mov
jno
xchg
pop
test
std
mov
ds
clc
sub
adc
std
or
mov
mov
out
or
aad
insb
push
in
repz
cmpsl
mov
jmp
mov
fsub
inc
xor
cmp
push
popa
mov
mov
or
lock
cmp
mov
shl
in
lock
in
std
cli
pushf
lcall
inc
and
xor
cmp
lcall
in
movsl
cmpl
pop
inc
sbb
jnp
dec
add
rolb
aam
adc
fisttpl
dec
xchg
loopne
dec
pop
jl
es
jg
pushl
cmp
jo
arpl
push
inc
aam
fstl
xchg
cmp
lods
push
daa
add
je
sub
cwtl
xchg
movsl
push
adcl
stos
or
sarl
cmp
test
mov
gs
in
mov
fs
mov
popf
bound
xchg
idivl
es
pop
jmp
dec
inc
jne
lcall
sahf
mov
test
aaa
aaa
fistps
sub
inc
loopne
out
ss
lret
pop
out
pop
subl
dec
push
xchg
daa
loopne
mov
xor
inc
cmc
jnp
or
popa
jo
out
sbb
aas
mov
pop
mov
pop
pop
xchg
lahf
stos
sahf
popa
inc
adc
add
xchg
or
inc
push
jns
loopne
jl
push
bound
loop
rcll
and
push
lcall
repnz
and
sub
sbb
mov
cli
mov
adc
sbb
inc
adc
sub
dec
pushf
mov
sub
mov
call
fimuls
pop
push
cli
mov
and
jmp
adc
sbb
notl
mov
dec
xorl
add
ljmp
testb
or
pop
movsb
jp
int
mov
std
lock
mov
jbe
and
mov
jp
sbb
cmp
dec
adc
cmp
ja
mov
xchg
shlb
xchg
mov
add
movsb
out
int
jo
ds
cld
loop
popa
or
testb
inc
outsb
orb
test
cs
inc
fcomi
and
and
jnp
rcl
push
stc
add
test
xchg
arpl
adc
pop
mov
xchg
imul
adc
jecxz
xchg
jmp
ds
push
addl
xor
sub
js
push
or
or
lods
out
popf
gs
clc
outsl
dec
cmp
sbb
imul
lea
roll
xor
lds
inc
pop
and
fcoml
push
push
fnstsw
sbb
rorb
stc
jg
jb
cmp
ja
pop
or
out
and
leave
mov
aam
add
mov
xor
lret
mov
jne
xlat
loopne
out
xor
ret
mov
dec
mov
sub
fld
psubd
push
pop
adcb
inc
cmp
push
iret
inc
ret
test
mov
shll
data16
xor
ret
push
ret
cmp
mov
xchg
or
scas
movsl
xor
add
mov
mov
jnp
aad
mov
hlt
sbb
sarl
dec
push
hlt
aas
push
out
mov
lds
xchg
sub
mov
adc
xor
dec
push
pop
loop
aaa
push
adc
test
jl
dec
jbe
jecxz
loopne
jne
test
lahf
jb
aaa
mov
pop
and
repz
bound
out
insl
jb
in
xor
inc
ss
iret
pop
in
out
inc
movsb
add
sbb
scas
push
inc
testl
pop
inc
stos
scas
mov
aam
jp
dec
or
sub
bound
ja
jo
dec
jl
push
imul
lea
push
inc
adc
cmp
jmp
pushf
mov
push
imul
arpl
cmpsl
inc
popl
outsl
cmpsb
cmp
cmp
dec
adc
jg
or
fadd
fcomps
or
bound
dec
sbb
xor
pop
sbb
std
into
stos
pop
mov
or
lods
sbb
inc
lds
fwait
call
pop
lcall
out
xlat
loope
movsb
pop
sti
push
inc
clc
fsubrl
mov
pop
jns
add
or
mov
test
nop
test
mov
xchg
icebp
pop
dec
add
and
lcall
add
sub
ljmp
loop
test
faddl
mov
daa
and
aam
cltd
pop
jbe
les
dec
cmpsl
inc
xchg
lahf
les
lock
mov
nop
adc
lahf
bound
std
movsb
mov
xor
out
xor
mov
dec
rolb
out
sbb
push
cmp
daa
mov
mov
scas
out
into
in
mov
cmp
adc
inc
push
dec
popf
pushf
inc
sbb
ljmp
andl
mov
cltd
test
push
sbb
pop
sub
iret
xchg
arpl
scas
jbe
lcall
xchg
test
and
fcoms
stc
add
mov
scas
inc
out
dec
push
or
ds
cmp
mov
cmp
sbb
sub
pop
lret
add
dec
test
xchg
ljmp
xchg
pop
mov
rcll
lcall
insb
xchg
iret
mov
fnstcw
nop
outsl
leave
and
sub
hlt
adc
cmc
rcll
lcall
insl
push
test
and
inc
repnz
ljmp
push
addr16
pop
push
xchg
cltd
dec
icebp
cmp
scas
mov
orb
add
push
pop
mov
test
xor
lods
adc
in
loopne
jnp
mov
pop
scas
cmpsl
ja,pt
mov
sbb
loope
lock
cmp
inc
adc
aas
jmp
les
mov
in
addr16
add
sub
jg
dec
subb
xor
sbb
xor
int3
cmp
test
imul
cmpsl
jecxz
mov
push
shlb
mov
cli
mov
sbb
jne
mov
or
je
mov
inc
ret
in
xchg
jo
shl
fmulp
jmp
lret
sahf
cltd
and
lret
bound
xchg
sbb
pushf
jnp
mov
gs
call
cli
push
pop
pop
test
pop
and
xlat
push
sub
mov
mov
rclb
enter
push
jns
enter
jbe
incb
in
aaa
xor
inc
in
mov
and
std
mov
or
mov
push
out
lock
cmp
xor
mov
xchg
sbb
cmp
idivb
push
dec
mov
push
repz
out
lods
adc
add
mov
dec
insl
lds
dec
dec
orl
int
std
dec
xchg
je
mov
dec
push
mov
pop
mov
push
lahf
or
faddl
popf
test
jno
pop
xchg
push
rcll
and
cmpsl
sbb
addr16
sbb
mov
cltd
test
ret
sbb
jne
xorb
add
fdivrl
cmp
mov
xor
icebp
repz
inc
mov
xchg
cmpsl
sub
dec
xchg
daa
xor
mov
lea
outsl
fs
xchg
lods
push
sub
sti
movsb
cmp
dec
mov
daa
lcall
fs
in
mov
out
pop
dec
sub
add
jg
inc
lret
cmp
fs
mov
lret
mov
sbb
shr
out
fidivl
aas
cmp
insl
jecxz
push
push
xchg
jno
and
xor
jns
xor
daa
cmp
jb
negb
dec
mov
inc
mov
pop
cmpsl
push
int
or
ja
ret
aad
push
cmp
sbb
divb
pop
xor
pop
stc
jb
loop
out
das
push
bound
jnp
sbb
stos
scas
fwait
out
ficomps
xor
stos
fsubrl
jmp
stc
dec
cmc
mov
mov
int
call
or
inc
enter
xchg
cmp
push
push
inc
enter
fldcw
sbb
mov
mov
cmp
and
test
jne
ror
into
iret
cwtl
push
sbb
add
push
add
sbb
es
mov
add
mov
iret
fisubl
out
push
faddl
fildll
xchg
or
xor
loope
mov
pop
jl
pushf
xor
stc
pop
pop
mov
sahf
xor
pop
xor
cli
repnz
lcall
adcl
mov
inc
xor
mov
push
and
pop
clc
in
sub
dec
inc
mov
inc
rorb
mul
aaa
jle
xlat
mov
xchg
movsl
ret
push
aad
ret
fldenv
fidivrl
mov
out
push
fcmovne
or
aam
mov
inc
sbb
cmp
jle
insl
jno
test
call
test
jno
sbb
dec
cmpsl
inc
pop
jg
pop
mov
dec
fs
outsb
lea
mov
or
in
sub
loopne
pop
and
mov
inc
pop
xchg
sbb
or
inc
and
pop
loope
dec
insb
movsl
mov
nop
mov
jle
rorw
leave
jp
rcrb
inc
cmp
sti
aaa
xor
and
push
lea
in
pop
push
jmp
jo
pop
rolb
mov
pusha
and
push
cltd
cmp
shr
xchg
aaa
push
dec
cmp
xlat
xlat
sbbl
xchg
push
pop
push
bound
adc
mov
icebp
sub
fstps
out
mov
stos
dec
push
pop
out
in
insl
pop
loope
mov
mov
ds
stos
dec
call
add
stos
js
xor
hlt
xchg
or
or
mov
jae
adc
jnp
lret
lret
ljmp
and
pushf
std
mov
je
adcl
inc
mov
mov
push
pushf
daa
mov
xchg
aaa
jne
loope
add
repz
js
gs
movsb
cmp
cmp
fsubrl
scas
dec
xor
fidivrs
cs
insl
ljmp
stc
aam
or
xor
aaa
mov
xchg
and
cmc
ss
push
inc
pusha
call
fisubl
scas
fdivl
xorl
testb
xlat
out
and
insl
shlb
push
jne
nop
sub
dec
dec
or
in
pop
insb
push
pop
fildll
add
pop
add
xor
mov
add
mov
inc
int
xchg
and
dec
repnz
push
add
push
enter
mov
clc
sub
xchg
sub
and
mov
test
loope
push
mov
sub
adc
cmc
xlat
xorb
repz
push
in
sbb
inc
in
adc
jmp
jge
mov
outsl
dec
and
pop
inc
movsb
loope
lcall
loop
addb
xchg
out
mov
mov
stos
sti
fs
push
repz
pop
mov
stos
or
das
push
mov
cmp
js
push
mov
xor
xchg
call
mov
movb
xorb
mov
and
inc
mov
ret
roll
jmp
stos
lret
inc
lods
sbb
sub
jp
mov
push
jae
movl
aam
mov
pop
xchg
mov
stc
lea
stos
cvttps2pi
add
insb
mov
into
sbb
mov
data16
xor
fnsave
jge
stos
cmp
je
push
adc
mov
pushf
or
daa
add
pop
ds
lock
adc
outsl
jo
adc
push
xor
nop
sbb
iret
call
mov
inc
lret
lock
push
jmp
or
xor
gs
movsl
and
fstpt
xorl
rol
add
aam
pop
loope
mov
push
mov
pop
ret
mov
and
mov
stc
push
loopne
cld
faddl
cs
je
popf
or
imul
dec
aas
loopne
and
inc
repz
mov
adc
mov
xchg
out
fldt
dec
mov
in
out
aaa
xor
and
mov
xor
pop
dec
stos
cmpl
jno
pop
lock
push
adc
test
cwtl
xchg
aaa
fbld
mov
mov
fnstsw
inc
rorl
adc
dec
or
cmp
lods
xchg
inc
mov
sbb
xchg
xchg
icebp
shl
mov
shlb
cmpsl
out
andl
fcompl
mov
xchg
iret
push
jbe
jg
int
cwtl
das
cmp
pop
cld
popf
or
add
pop
test
mov
in
xor
pop
aas
mov
dec
aam
sbb
xchg
xchg
jbe
ficompl
mov
idivb
fldl
mov
les
pop
sub
or
dec
sbb
in
icebp
push
ja
imul
add
fwait
jo
mov
jbe
adc
sbb
movl
xor
fs
out
add
andb
scas
bound
jmp
xchg
push
test
inc
aas
mov
cli
mov
jo
mov
pop
mov
mov
sbb
arpl
dec
divb
xchg
cmc
iret
push
nop
insb
xlat
jns
push
test
in
inc
insb
int3
add
sub
std
fucomi
jb
pop
sub
xor
mov
sbb
into
inc
jecxz
in
pop
sahf
dec
mov
les
lods
dec
push
fsub
call
xlat
in
add
mov
push
adc
jae
cmc
stos
pop
mov
insb
sbb
and
je
bnd
enter
mov
or
or
jl
add
mull
aas
dec
add
roll
xchg
frstor
dec
dec
mov
and
fst
xchg
mov
xchg
sub
push
pop
jle
test
mov
popa
xor
lods
xor
scas
gs
and
aam
pop
in
and
insl
mov
xchg
ljmp
or
fcmovnb
cmp
xor
rcrl
push
inc
and
push
insl
loop
pop
jb
pop
dec
imul
out
icebp
rclb
push
push
iret
aaa
out
cltd
lods
cmpsb
stc
in
je
mov
repnz
mov
loope
clc
cmp
sahf
divb
enter
pop
and
inc
push
cld
dec
insl
pop
fbld
inc
lds
mov
ror
add
push
mov
sub
xchg
push
scas
dec
jbe
add
inc
add
mov
dec
popa
sub
mov
out
xchg
pop
insb
arpl
pop
pop
loope
jns
insl
inc
mov
mov
xchg
nop
mov
call
setno
mov
mov
adc
test
or
jmp
or
sbb
mov
imul
jle,pt
out
fidivl
or
cmp
mov
test
push
sub
pop
hlt
call
or
lods
clc
dec
into
mov
insb
scas
xchg
add
out
sub
xchg
insb
push
mov
xchg
ss
lods
int
ret
add
xchg
add
in
mov
or
mov
xor
xorb
loop,pn
rorb
shlb
rcll
sbb
fcompl
testl
jmp
adc
lea
stos
and
in
sbb
mov
adc
sahf
push
aam
xor
pop
addb
cltd
jne
push
xlat
test
decb
jmp
xchg
into
popf
rcrb
xor
sub
dec
lods
jle
mov
jae
repz
lods
daa
cmp
imul
imul
cmp
clc
mov
sbb
xlat
lock
push
mov
add
and
add
loope
jmp
mov
fnclex
cltd
add
fdivrs
orl
dec
test
aaa
gs
pop
pop
movsb
sub
mov
insl
fisttps
sub
push
out
popa
test
push
or
xchg
pop
dec
stos
adc
cmp
dec
stos
std
ljmp
imul
ror
popf
fucomp
xchg
and
cmp
xor
aad
jb
stos
stos
mov
mov
addr16
inc
pushf
inc
jmp
stc
mov
ret
int3
sbb
dec
xchg
push
popf
fisttps
push
ja
aam
pop
fadd
mov
ficomps
push
loope
push
mov
test
and
push
fimull
cltd
cwtl
repz
fimull
sbb
jnp
lock
dec
subb
sti
bound
or
lods
mov
loop
add
movsl
stos
inc
fcmovnu
jno
inc
sub
mov
fistpl
mov
xchg
mov
push
incl
or
jg
out
shl
popf
and
icebp
imul
push
fistpl
push
add
ja
jnp
adc
ja
sbb
test
test
mov
dec
xor
in
xchg
jg
clc
repz
fistl
insl
cli
and
outsl
ret
lcall
arpl
cs
sub
cltd
iret
pop
xchg
sub
loopne
out
test
aaa
loopne
inc
mov
xchg
pop
repz
sbb
xor
push
fstl
je
mov
mov
ret
outsb
pop
or
hlt
dec
sub
arpl
repz
push
ffree
xchg
cmp
loope
test
mov
mov
jmp
sbb
and
aaa
insb
jnp
test
out
loopne
lds
mov
mov
push
inc
mov
fsubrp
jo
adc
mov
not
xor
mov
pop
pop
inc
jg
xor
xlat
and
sbb
out
shll
xor
pop
dec
out
cmpsb
clc
sub
xor
outsl
xor
push
lock
clc
ja
mov
fwait
repnz
xor
sbb
scas
hlt
jg
imul
int
pop
xchg
mov
imul
aaa
mov
call
shrb
add
sub
xorb
pusha
sbb
pop
sub
xchg
cmp
mov
movsl
pop
xor
into
pop
call
leave
popa
dec
dec
push
xchg
push
add
lea
pop
fsub
orl
adc
fwait
dec
xchg
add
or
adc
and
jecxz
and
pop
and
mov
jge
jae
and
loop
adc
dec
mov
int3
mov
nop
pop
sbb
test
ds
xor
pop
ja
and
fsts
push
sub
or
push
ss
inc
into
notb
xorl
insb
push
fmuls
mov
pushw
fbstp
pop
adc
mov
mov
jo
rcr
sub
repnz
mov
xor
pop
mov
fld1
loope
rorl
adc
cmp
jo
dec
dec
adc
adc
mov
dec
mov
push
loope
xchg
push
and
add
rcrb
mov
ljmp
dec
jl
nop
test
mov
loope
adc
ljmp
rolb
jo
mov
push
pop
jge
dec
mov
imul
nop
mov
arpl
pop
pop
or
pushf
icebp
cld
leave
fs
ja
push
outsb
paddq
mov
and
pop
ljmp
daa
jge
xor
mov
push
or
inc
addr16
mov
movsb
push
stos
popl
lock
in
jne
jno
clc
les
cmpsl
mov
sbb
lahf
das
mov
movsl
call
sbb
dec
inc
pusha
mov
or
inc
adc
je
or
and
aas
mov
ja
shll
into
insl
jle
jbe
scas
adc
mov
cmpsb
pop
popa
icebp
pushf
test
xor
pusha
insl
jne
mov
fstl
mov
mov
fnstsw
adc
pop
add
in
jnp
cmpsb
insl
movsb
xchg
insb
mov
add
pop
sbb
dec
lcall
pop
and
ljmp
aaa
xor
setp
pop
repz
pusha
pop
mov
sbb
xchg
push
pushf
shlb
xchg
xor
push
cld
pop
test
jb
xchg
mov
xchg
and
fildll
mov
pop
push
lods
mov
xchg
sbb
push
cmp
filds
lods
inc
sub
dec
xchg
rcrb
cmp
inc
cmp
xchg
gs
into
pop
inc
aas
pop
adc
pushf
xor
pop
popa
sbb
cmp
stos
xorps
cmp
inc
cs
ljmp
int
lahf
loop
dec
jmp
pop
cmp
jns
scas
pop
orl
cmp
nop
pop
push
repz
inc
stc
cmp
std
cs
test
sbb
imul
mov
arpl
dec
dec
inc
inc
push
movsb
imul
f2xm1
mov
or
xchg
xchg
dec
push
in
inc
adc
lahf
fs
mov
xlat
lods
mov
test
mov
jbe
mov
mov
and
push
int3
jmp
cmc
pop
push
adc
mov
jo
lret
push
stos
push
subl
mov
push
or
or
testl
mov
scas
cs
adcb
mov
mov
cmp
and
or
sbbb
xchg
xor
adc
xor
push
mov
push
ret
mov
lods
dec
punpckhwd
ficoml
data16
jmp
stos
xor
push
sub
pop
jge
cmp
sbb
xor
iret
mov
sbb
jne
mov
mov
pop
enter
sahf
add
mov
test
inc
addl
int3
imul
xchg
out
inc
mov
sub
add
pop
cmp
in
cs
test
ds
push
dec
cmpsl
add
push
jbe
cmpb
scas
test
loope
lds
mov
push
inc
jg
add
aam
dec
movsb
sub
lea
xor
xor
nop
mov
icebp
xchg
xor
mov
mov
faddl
and
imul
mov
cwtl
imul
cmc
add
mov
aaa
or
aaa
les
xchg
dec
inc
lss
dec
jg
arpl
ficoml
std
mov
inc
jge
push
decl
std
xchg
pop
stc
add
fnstsw
scas
and
xor
out
push
mov
movsl
popa
pop
sbb
push
mov
jno
and
or
ja
push
sub
jg
mov
push
sub
mov
push
mov
push
clc
inc
adc
divb
xacquire
loop
jbe
xor
sti
cmp
mov
loope
clc
mov
jne
sahf
sub
jle
cli
and
pop
enter
xorl
js
sti
rorb
mov
sub
rorl
cmp
push
test
and
pop
mov
sub
and
cltd
lods
faddp
daa
jnp
mov
fldl
fmul
shr
or
inc
aaa
mov
ret
leave
sti
adc
cmp
cwtl
cld
mov
cmp
lods
or
fldcw
in
add
add
lcall
fldt
sub
mov
cwtl
mov
and
adcb
push
daa
enter
ss
dec
pop
shr
lar
stos
jmp
adc
int
inc
jl
call
lods
xchg
mov
andl
jno
adc
into
dec
or
shll
in
ja
push
repnz
loopne
loop
adc
sub
imul
sub
xor
outsb
cli
ss
scas
add
dec
jg,pn
dec
mov
rcr
rcrl
roll
sub
push
push
cmp
push
mov
sahf
testl
pop
btr
sub
inc
ss
arpl
frstor
scas
mov
lea
out
xchg
fxch
aam
mov
mov
pop
rcr
aam
xchg
pop
mov
sub
arpl
jnp
lock
inc
inc
push
mov
mov
lods
mov
daa
adc
mov
jmp
jne
incb
pop
inc
xchg
xor
aam
js
adcl
mov
in
in
test
mov
repnz
jbe
jno
inc
imul
pop
sbb
mov
mov
push
sub
push
pop
shll
aas
out
xchg
xorb
sub
nop
pop
or
cs
clc
pop
or
sti
jmp
jle
movb
sub
das
adc
inc
bound
scas
xor
push
loop
int
int3
and
inc
pop
xchg
or
adc
fnstenv
js
int3
pop
repz
testb
mov
xchg
inc
nop
loope
int3
insb
and
popf
xor
mov
mov
data16
fisubl
adc
push
test
dec
xchg
insl
mov
xchg
jb
pop
mov
mov
in
xchg
and
ficoms
dec
mov
mov
test
lods
rclb
sbb
adc
cmp
xchg
jge
jae
outsb
push
sbb
or
push
pop
or
jne
xorb
cmp
aad
jnp
pop
inc
daa
arpl
cmp
push
dec
inc
jns
jo
add
pop
mov
scas
ss
xor
adc
clc
inc
fildl
es
movsb
sti
icebp
enter
xchg
mov
int
jmp
sbb
rorb
xchg
cmp
push
pop
cmp
outsb
dec
popa
push
cwtl
fsts
cli
lahf
std
lret
out
mov
gs
mov
in
imulb
in
jp
push
dec
jnp
stos
xchg
mov
sbb
fsubp
mov
or
in
mov
mov
lret
loopne
adc
aam
outsb
mov
xorb
jecxz
sbb
cmp
xchg
jb
jo
lret
sub
adc
push
out
dec
pop
dec
inc
sub
mov
mov
testl
adcb
das
and
arpl
rclb
jge
sbb
lret
adc
jge
inc
fcmovnbe
adc
or
pushf
loop
push
in
cwtl
or
and
es
mov
decb
push
lret
and
adc
xor
sub
dec
sbb
shll
ja
std
jmp
push
fidivs
hlt
or
rorl
jge
loop
daa
xchg
incb
mov
dec
sub
add
sub
data16
loopne
mov
sub
in
push
inc
mov
pop
cs
lock
add
lea
movsl
xor
in
xor
cli
cwtl
push
xchg
fcomi
gs
das
mov
es
aad
arpl
vxorps
les
pop
jbe
jo
adc
inc
outsb
stos
inc
or
call
ficoms
jmp
in
add
hlt
add
in
in
push
je
mov
mov
adc
or
mov
sbb
stos
js
dec
cmp
ret
pop
xchg
lret
xor
cmp
mov
xlat
loopne
pop
pop
dec
cwtl
out
or
int3
push
aas
add
mov
stc
mov
mov
fldcw
jmp
out
add
cltd
lcall
and
call
push
pop
mov
jg
mov
push
xor
xlat
xchg
or
cmc
repnz
adc
sbb
or
bound
sahf
adc
cwtl
sbb
pop
cmp
cmpsb
cwtl
add
std
jl
fisubs
scas
push
xor
xor
mov
xchg
sti
gs
add
mov
loop
rclb
add
aaa
outsl
push
lret
pop
insl
enter
fnstsw
xchg
in
testb
fcoml
lcall
bound
mov
mov
loope
js
sti
mov
mov
adc
popa
push
movsb
xchg
push
add
sub
aam
push
shll
arpl
stc
sbb
dec
scas
shll
cmp
or
dec
cltd
aas
incl
lock
out
adc
daa
out
mov
xchg
out
movb
sahf
mov
les
arpl
mov
mov
mov
mov
aad
aaa
mov
pop
or
aad
lcall
sbb
das
mov
cmp
dec
sbb
insb
jge
in
repz
xchg
dec
roll
jmp
dec
or
gs
je
repnz
int3
mov
mov
mov
clc
xor
sbb
adc
outsb
call
in
sbb
inc
sub
push
sub
clc
add
or
in
imul
shll
mov
mov
pop
or
push
pop
inc
subl
jb
xor
xchg
imul
sub
bound
lock
cmp
aaa
cmpsl
sbb
mov
jno
pushf
mov
clc
xchg
scas
dec
notl
add
ja
nop
add
sub
jbe
lret
cld
outsb
jl
sub
jle
sbb
dec
test
push
push
fdivrl
lods
dec
mov
push
pop
js
inc
cld
aad
jno
dec
stos
xchg
jle
int
lcall
jbe
jno
test
cli
sub
fcompl
mov
scas
pop
call
or
std
pop
fisubs
cltd
daa
jmp
cmc
movsl
jge
js
adcb
std
push
enter
sub
sbb
pop
inc
loop
pop
dec
sbb
scas
repz
test
cwtl
pop
add
in
jmp
jp
sub
sub
addr16
nop
fwait
stos
mov
inc
or
xor
int
jp
pusha
or
xor
and
lahf
mov
xchg
pop
movsl
push
mov
insb
cmc
xchg
mov
sbbl
push
fstpl
jp
and
pop
mov
js
jbe
mull
hlt
inc
stc
shlb
push
cmpsl
in
jp
andl
out
lods
cmp
movsl
push
xchg
mov
hlt
movsl
rcr
cmpsl
hlt
push
repz
sbb
sub
daa
cmpb
mov
in
in
fs
stos
movsb
in
sbb
mov
shlb
sahf
test
xchg
jbe
inc
cmpsl
insl
inc
into
pop
pop
stc
mov
arpl
xchg
loope
jmp
cltd
push
mov
mov
cs
test
imul
dec
movsb
imul
pop
imul
cltd
sub
and
in
int
add
std
dec
xor
xchg
xlat
scas
sbb
sub
mov
negb
mov
xchg
fiadds
mov
push
xchg
adc
in
cmp
and
push
or
jg
mov
pop
sub
xor
xorb
sti
mulb
enter
xchg
mov
sbbl
cmp
mov
fucomi
add
repz
scas
add
cmp
mov
arpl
adc
and
repz
mov
add
incl
jns
repnz
pop
scas
mov
rolb
xor
mov
ss
out
mov
ret
pop
out
sahf
outsb
mov
push
pop
mov
scas
icebp
data16
pop
jl
cmp
xor
scas
mov
loop
mov
fisubrl
lret
gs
adc
lds
inc
xchg
out
shl
sub
jle
enter
hlt
dec
std
ja
sbb
ficompl
call
inc
jecxz
js
fnstcw
and
mov
cmc
or
jp
xor
rol
or
cmp
or
ficoml
inc
mov
push
bound
mov
mov
mov
mov
ret
or
fdivs
sub
cmp
jbe
int3
pop
and
mov
xchg
lock
pop
pushf
xchg
pop
fdivrp
movsb
fnstcw
cmp
test
js
jmp
jle
test
fstpt
into
dec
adc
cld
pop
stc
add
imul
mov
lret
dec
std
jecxz
or
mov
sub
fwait
adc
std
faddp
addb
fsubr
or
push
mov
ret
xchg
lea
ss
mov
pop
sti
cmp
xchg
test
cwtl
shlb
push
call
mov
add
in
shlb
pop
lcall
mov
rolb
or
outsb
loop
ss
pop
loop
xor
hlt
sub
and
xor
aad
pop
adc
inc
stc
push
ficomps
testb
cwtl
push
fcompl
scas
std
hlt
or
stc
sarb
aaa
push
and
in
lds
lods
test
pushf
test
xchg
jge
or
lods
push
pop
cli
xchg
test
pop
hlt
push
and
sub
xor
popf
inc
mov
mov
push
pop
jle
and
lods
pop
adc
mov
mov
jo
sar
ffreep
push
loop
and
xor
add
cmp
sub
insb
push
imul
push
push
movsb
in
outsb
sbb
adc
and
pop
movsb
mov
adc
insl
cwtl
fs
xchg
cwtl
adc
pop
pop
cmp
cli
cmpsl
cmp
mov
add
push
adc
outsl
psraw
dec
inc
sbb
inc
jb
push
push
pop
out
sub
pop
fisttpll
pop
test
fisttpl
pop
out
push
xchg
inc
movsl
movsb
sbb
repnz
or
dec
push
out
fwait
xchg
cmpsb
cwtl
shl
imul
jne
ja
push
cs
inc
rorb
mov
cs
push
push
dec
adc
sub
jae
mov
pop
decl
adc
outsl
xor
pop
stos
jp
dec
mov
scas
push
bound
sahf
andb
pop
int3
pop
dec
lahf
or
adc
mov
inc
ret
test
mov
dec
add
fcomps
ljmp
scas
mov
push
mov
push
pop
xchg
sti
push
cmp
dec
cmpsl
inc
cmp
pop
lock
pop
aad
adc
clc
leave
cmp
insl
jb
test
dec
add
xor
xchg
loop
or
or
push
sub
jno
sbb
or
xor
xchg
fldl
movsl
enter
jmp
icebp
mov
stc
ds
pop
stos
outsl
dec
xchg
pop
cli
pusha
in
cmp
js
pop
jg
test
shrl
sub
rol
jp
jg
lds
out
cli
push
xor
fisubs
push
sti
out
mov
lock
adc
pop
out
bound
jp
leave
cmc
jg
mov
jl
pop
popf
mov
cmp
sub
cld
jmp
out
rcrb
inc
add
pop
mov
inc
push
icebp
dec
imul
stos
dec
push
adc
loop
cmp
pop
mulb
jmp
or
push
fisubrl
aas
lds
repz
scas
es
push
dec
dec
pop
hlt
pop
ljmp
mov
std
out
add
push
and
stos
hlt
imul
adc
add
daa
pop
shl
in
mov
ret
sarl
fs
xlat
jl
or
lahf
mov
xorb
pop
out
loop
xlat
mov
xchg
icebp
pop
and
sbb
push
push
xchg
sub
dec
test
mov
xchg
ljmp
adc
or
mov
mov
sbb
leave
icebp
addr16
cltd
jp
mov
hlt
mov
mov
mov
xlat
cmp
sub
fs
in
popa
pop
adc
pop
sbb
imulb
jg
adc
movsb
addb
mov
sub
shl
or
iret
add
ret
adc
inc
sti
pop
roll
inc
dec
pshufw
xchg
and
fwait
into
imul
push
xor
push
cmp
or
out
cld
arpl
sub
add
mov
add
cmc
sahf
fs
out
rcr
mov
mov
cmpsb
lds
movsl
sub
nop
movsl
xchg
mov
or
imul
lahf
xchg
roll
cs
stos
shr
inc
outsl
jns
mov
pop
gs
fbstp
jmp
cmp
jecxz
push
jge
loop
out
ds
inc
daa
imul
and
hlt
xchg
aad
jp
mov
sti
dec
sahf
outsb
lods
insb
inc
loop
cmp
call
jp
rclb
push
mov
fwait
sub
push
xor
xor
add
and
or
test
xchg
cmp
jl
inc
dec
in
mov
inc
adc
adc
push
sti
inc
cli
popa
fisttpl
repz
dec
dec
inc
dec
jl
lcall
sbb
ss
xchg
iret
pop
mov
mov
mull
test
mov
pop
inc
cmp
gs
jmp
xor
inc
push
lds
dec
bnd
cltd
pop
sahf
jl
xchg
stos
mov
inc
shl
sub
jno
lods
xchg
jo
inc
lods
pop
mov
add
push
jo
sbb
mov
inc
mov
lea
or
cmp
test
shll
adc
gs
scas
iret
fidivrl
and
add
or
cmp
pop
sub
mov
fisubrl
ljmp
test
xchg
das
sub
adc
clc
loop
xor
add
mov
imull
xchg
out
loope
xchg
xor
lahf
es
sbbb
lods
jp
xlat
adc
dec
aad
push
mulb
dec
jecxz
into
fldt
mov
scas
imul
mov
adc
cmp
mov
lds
adc
add
jnp
lret
cmpsb
xlat
lret
scas
mov
mov
stos
mov
pop
adc
adc
lret
sbb
or
pop
daa
cmovp
xor
imull
mov
or
mov
inc
inc
cmpsl
mov
out
cmp
test
pop
add
add
test
mov
push
sbb
das
dec
cs
shlb
lods
lock
fldcw
sub
jae
and
sbb
aad
sub
cmpsl
dec
add
push
or
fdivl
addr16
sbb
ljmp
ficomps
jle
mov
outsb
test
add
dec
stc
addb
jnp
adc
cmp
xor
mov
rorl
mov
bound
out
leave
lcall
cmc
push
roll
outsb
sub
fwait
mov
add
mov
ss
add
stc
mov
hlt
add
jae
imul
out
mov
jmp
jge
imul
jne
outsl
dec
push
or
xchg
movsl
shll
arpl
xor
xor
ret
notl
push
mov
int3
xor
mov
std
inc
inc
fucomi
sub
mov
int3
out
ret
xor
push
pop
mov
std
clc
adc
inc
addr16
ds
outsb
xchg
les
flds
cmp
mov
push
dec
outsl
in
in
cmp
pop
out
lds
dec
or
xlat
pop
in
sub
cmp
fistpll
mov
jmp
das
xchg
cmpsb
iret
jbe
cmp
push
fildl
pop
ret
mov
iret
pandn
out
je
and
insb
mov
popa
jl
and
lods
std
gs
xchg
out
shlb
inc
loope
push
decb
cmpsb
fwait
popa
mov
xor
inc
stos
jne
mov
or
add
lret
mov
aad
jle
hlt
movsl
aaa
mov
mov
aam
adc
or
mov
mov
addr16
xchg
icebp
cs
and
pop
sub
cmp
add
adc
sbb
pop
outsl
mov
sbb
fldenv
dec
mov
repz
jecxz
xchg
aam
cmc
inc
mov
loope
dec
mov
nop
jg
rorl
and
pop
jb
stc
add
mov
popf
xlat
mov
outsl
xchg
push
sahf
xor
fmul
xor
insl
fucomi
test
jmp
gs
pop
ljmp
jp
jb
outsl
lds
xchg
popf
mov
fsubrl
clc
movsl
mov
cmp
adc
xor
outsb
pop
and
or
mov
pop
shrl
push
enter
push
push
cmpsb
rcrb
fstpt
xor
xchg
adc
cmp
push
es
fs
faddl
sub
sub
aam
mov
fwait
lahf
insl
add
mov
adc
and
lods
into
jbe
adc
stos
je
add
in
xchg
adc
mov
je
cmpsl
mov
xchg
sbb
and
hlt
outsb
jl
jmp
or
imul
mov
stos
sti
xchg
inc
jp
dec
scas
fcoms
jne
fdivrs
dec
pop
pop
sub
cmpsb
mov
jo
jg
push
and
loopne
pop
push
jl
popf
cli
mov
mov
pop
push
in
in
mov
mov
int
dec
frstor
dec
call
xchg
pusha
mov
pop
sub
pop
cmovle
xchg
pop
lods
xchg
mov
rclb
mov
aaa
or
inc
mov
or
aad
and
out
push
int
or
jp
mov
ret
mov
push
pop
push
inc
push
mov
lds
pop
std
xor
scas
push
dec
inc
inc
jecxz
mov
or
jnp
dec
and
std
sbb
scas
js
sarl
out
push
movsl
insl
jnp
xchg
push
test
add
jns
jb
push
mov
mov
jl
ds
cld
push
imul
js
dec
jae
add
vandps
outsl
and
ret
adc
mov
loope
arpl
scas
out
jmp
xor
sub
jno
jb
sti
movsb
std
lret
sahf
out
aaa
xor
sub
lds
out
pop
inc
push
adc
ja
mov
xor
add
sub
and
adc
pop
movl
sbb
xor
or
aam
and
adc
push
sbb
cmpsl
or
sub
ffreep
sub
lock
inc
int3
faddp
xchg
xlat
ds
adc
gs
out
std
ljmp
jne
in
adc
inc
fwait
jge
popa
imul
cwtl
cltd
push
jnp
xchg
lret
jl
das
ret
movl
mov
or
xchg
ljmp
sub
lret
jb
subb
sub
fidivs
push
fdivrl
movq
inc
sbb
test
xlat
lret
pop
hlt
jge
mov
sti
ror
mov
js
jns
xchg
xchg
lds
in
pushf
sbb
jp
in
btr
or
data16
xor
pop
test
mov
mov
pop
mov
jbe
fisttpl
es
add
add
stos
rorb
test
cmpsb
cmp
and
movsl
and
ret
add
mov
inc
insb
mov
js
cmp
xchg
xor
inc
out
popa
pop
lock
outsb
movsb
inc
orl
gs
mov
mov
scas
inc
adc
xchg
test
mov
xchg
jb
inc
lret
sahf
inc
xor
or
ret
inc
push
outsb
xor
sbb
data16
ret
pop
mov
cmp
clc
dec
enter
jns
push
dec
mov
pop
loope
jle
adc
sbb
mov
mov
mov
and
jg
xchg
xchg
inc
jno
cmp
push
pop
and
iret
test
icebp
bound
mov
jp
pop
lret
clc
push
insl
test
xor
mov
inc
and
call
cmpl
add
mov
insl
xlat
fstpt
mov
sub
xor
in
stos
popf
orl
pop
jne
aas
and
jmp
mov
xor
add
aad
sahf
fimull
sub
orb
or
lret
inc
cltd
decl
leave
scas
dec
cli
push
cmc
test
mov
movsb
loope
scas
int3
int
insb
pop
in
cmp
les
cmp
int
push
fwait
pushf
jp
xor
cs
push
mov
cld
js
sub
arpl
rorb
in
jbe
adc
inc
bound
repz
fnstcw
push
mov
sahf
shl
adc
dec
or
push
test
arpl
adc
imul
jnp
outsl
repnz
dec
fidivrs
fwait
ret
movb
push
add
push
clc
das
add
mov
test
imul
ss
mov
pop
test
xor
int3
adc
popf
sbbl
add
cmp
sbb
pop
aaa
or
stos
insl
ljmp
ds
out
into
fsin
xchg
sbb
cmp
mov
or
loopne
mov
lods
mov
push
int3
repz
inc
cmc
arpl
les
adc
roll
mov
idivb
xlat
nop
jmp
push
inc
cltd
cwtl
dec
ret
fwait
nop
fiaddl
push
das
pop
sbb
jle
mov
sub
dec
shrl
das
xchg
std
push
xchg
adc
add
push
inc
cld
cld
mov
lds
mov
cwtl
pop
pop
mov
ret
into
jb
xchg
inc
and
inc
int
outsb
addl
add
adc
loopne
dec
cmp
dec
cmpsl
lcall
insb
cmp
inc
add
out
dec
je
pop
scas
jns
shlb
jne
pop
add
imul
xchg
mov
test
aas
inc
jnp
sbb
cmp
adc
dec
sahf
aaa
mov
leave
mov
jno
dec
jne
testb
int3
or
adc
add
fbstp
sti
push
fisttpll
dec
jno
enter
adc
gs
mov
adc
fcomps
pop
mov
adc
xor
xor
pop
jge
mov
cli
cmp
mov
out
xor
loop
push
ret
jecxz
add
xlat
dec
sahf
cltd
or
jno
jmp
add
lret
sub
add
adc
addr16
jle
mov
fisttpl
cmpsb
jne
ret
mov
mov
pusha
pop
push
daa
into
adc
sbb
sbb
pop
pop
lahf
mov
setae
inc
fs
mov
addb
push
inc
test
lcall
inc
js
inc
lods
ret
dec
mov
adc
or
nop
les
push
adc
ret
jns
jo
mov
fs
out
push
je
arpl
inc
xlat
mov
xor
inc
cmp
inc
movsb
mov
loope
cmp
pop
outsb
mov
or
je
aad
into
shrl
xor
pop
aas
mov
fldenv
in
jno
call
bound
mov
cmp
shl
or
rclb
aam
push
mov
insl
test
pop
and
out
mov
sahf
cmp
adc
pop
add
mov
push
mov
push
das
dec
or
and
mov
pop
xor
fmuls
mov
push
loope
push
xlat
data16
mov
aaa
jl
cmc
loop
clc
faddl
and
pop
fnsave
dec
daa
push
rclb
es
mov
bound
inc
loop
aas
inc
xchg
or
pop
cmp
int
pop
pop
adc
subl
lock
cli
in
and
cmp
inc
es
inc
testb
mov
rorl
stos
xor
fisubrl
test
dec
test
push
aad
fdiv
movsl
insl
fstps
mov
xor
inc
dec
jns
mov
movsl
test
adc
ret
pusha
out
sub
cmpl
lret
and
fisttps
or
inc
jge
inc
loop
aaa
xchg
and
xchg
sbb
jbe
push
sub
lods
enter
nop
xchg
int
mov
pop
or
fcoml
jns
jae
push
and
push
sub
cmc
movb
add
adc
repz
movsb
fists
adc
sub
xchg
fucom
xor
leave
rcrb
scas
icebp
inc
sub
cmpsb
xchg
rorb
addr16
mov
sar
fisubl
adc
xchg
pop
cmp
aam
push
jmp
mov
pop
adcl
repnz
add
sbb
jmp
lods
cmp
pop
jns
push
aaa
cmpsb
inc
cs
mov
xchg
loop
mov
ljmp
mov
shl
imul
push
or
outsl
mov
loope
adc
addb
or
mov
cltd
mov
orl
cmp
cmpsb
sub
jb
ljmp
inc
cmp
fdivrs
clc
testl
push
xor
xlat
pop
mov
sbb
out
bound
in
xchg
or
imul
xchg
xchg
imul
lds
push
mov
iret
out
sub
lcall
mov
fisubs
mov
push
inc
aaa
mov
fdivrl
cmp
add
fcoms
xchg
push
lock
push
std
jno
xchg
pop
mov
stos
push
nop
adc
sbb
int3
sbb
in
jp
sti
and
sbb
ret
adc
or
lcall
push
mov
jnp
call
adc
dec
movsb
cltd
jne
sti
jnp
dec
scas
sbb
sub
lret
js
push
and
inc
inc
lds
and
or
add
cmp
mov
sarb
pop
lcall
push
insb
push
push
mov
mov
mov
and
out
arpl
outsl
dec
adc
or
jmp
xchg
push
push
out
lds
pop
or
test
sbb
inc
cld
mov
das
push
bound
adc
outsb
iret
ficoml
jmp
mov
aas
sbb
cmp
adc
test
aas
pop
push
out
ss
mov
mov
pop
push
xor
cmc
cmp
sub
sbb
call
lret
test
lock
push
xchg
into
cli
sbb
loop
enter
jno
popf
popf
push
dec
jge
and
stos
ljmp
jecxz
int3
mov
or
push
es
jns
adc
push
xchg
cmp
jb
xchg
lret
jg
int
push
mov
rcrl
and
pop
lret
push
iret
dec
jg
pushf
pop
lret
fmull
jbe
aas
xchg
dec
dec
jnp
insb
lret
dec
aam
bound
int
int
mov
fnstcw
bnd
mov
xchg
xchg
test
jp
jecxz
ds
test
int
or
loop
mov
pop
arpl
adc
pop
sub
ds
jg
or
mov
mov
push
cmpsl
pop
jp
pop
mov
movsl
cmp
jno
pushf
aam
sahf
int3
fs
add
aaa
mull
das
and
ljmp
add
and
sub
mov
dec
andps
dec
movsb
ds
in
sahf
mov
push
movsl
mov
gs
xchg
mov
cs
push
push
in
cwtl
mov
xor
push
inc
sbb
loop
cwtl
daa
pop
xlat
fcoms
sub
xor
jle
mov
out
dec
fistps
push
sub
cmpsb
sbb
xchg
and
push
sti
push
push
add
xor
inc
jo
out
stos
idiv
mov
aam
std
add
mov
add
add
mov
inc
rcl
js
nop
daa
or
cmp
arpl
loop
std
xor
cmpsb
or
and
fs
scas
lcall
xlat
fld
imul
push
sarl
add
mov
jmp
adc
lret
push
and
pop
rcl
adc
jge
rcr
int
inc
cmpsl
outsb
cmp
mov
sar
ret
push
dec
xchg
sub
inc
and
lret
sub
xchg
enter
push
mov
inc
mov
push
mov
and
subb
jecxz
sub
push
jg
push
jmp
out
mov
mov
push
cmpb
ret
movsl
mov
cltd
mov
xlat
ja
orl
dec
sbb
lods
sub
mov
push
mov
ds
xlat
push
shll
add
mov
bound
popa
add
mov
adc
ljmp
loopne
add
xchg
test
pusha
sub
dec
lret
pop
fsubs
mov
or
daa
pop
lcall
int3
add
jle
std
and
sub
pushf
xchg
fcompl
sub
xchg
fidivrs
sbb
sbbb
fsubr
or
stos
jne
and
inc
cs
lret
xchg
jno
inc
test
or
fisubrs
mov
or
cmp
and
pushf
jg
jne
pop
mov
push
mov
pop
push
xor
mov
lahf
decl
lret
testl
sbb
aad
sbb
fiadds
dec
pusha
adcb
sbbb
pop
mov
popf
loope
sub
notl
sub
mov
test
data16
arpl
repnz
daa
inc
dec
addb
mov
mov
les
addr16
jbe
fisubs
jo
inc
movsl
das
inc
jmp
mov
push
aaa
mov
mov
push
fs
sahf
mov
dec
pop
fucomip
mov
cmp
pop
xchg
je
mov
or
mov
dec
sub
outsl
sub
lods
jne
mov
inc
dec
call
or
xor
enter
movhps
mov
imul
add
and
dec
mov
addr16
roll
pop
and
adc
pop
adc
adc
fistps
call
fdivrs
inc
jmp
hlt
addr16
lcall
mov
shll
mov
stc
loopne
pop
fwait
vpshad
out
push
mov
cld
push
inc
aas
stos
mov
mov
jle
xchg
fbld
jns
jp
shll
fsubs
punpckhbw
out
xchg
and
push
adc
jns
and
xchg
fnstenv
push
int
dec
in
pushf
lret
notb
aad
movsb
ret
xor
lcall
sub
dec
mov
fs
add
push
into
cld
mov
fsts
inc
mov
inc
insb
sbb
push
ret
out
pusha
adcl
ss
jnp
inc
mov
dec
mov
inc
stc
loope
inc
adc
jno
or
cltd
xor
call
mov
movsb
pop
inc
repz
es
dec
out
dec
fs
push
sbb
push
clc
mov
mov
fcoml
push
gs
test
ss
lods
ja
push
outsl
adc
jns
pop
stc
in
mov
push
jge
mov
in
xchg
mov
add
push
xor
jle
push
iret
cld
mov
je
mov
xchg
lds
mov
mov
sub
out
inc
adc
mov
jno
lods
inc
or
push
sub
insb
mov
lock
gs
mov
sahf
test
cmp
orps
dec
popa
pop
sub
cmc
or
je
test
in
push
or
jmp
das
shlb
dec
addr16
aaa
repnz
mov
pop
sbb
testb
inc
cmp
mov
dec
jns
or
pop
movsl
mov
stc
sarb
and
stos
outsl
mov
insl
mov
sub
mov
test
xor
lock
out
int
stos
mov
mov
mov
je
xchg
das
fidivl
lods
shrd
push
dec
jbe
repnz
pop
xor
int3
idiv
sub
push
pop
lock
mov
in
jne
lcall
subl
jg
and
xchg
or
dec
jg
daa
sub
inc
pop
es
adc
in
inc
and
in
cmp
jbe
mov
jb
aaa
daa
in
and
daa
in
push
sub
pop
loop
mov
sbb
enter
ljmp
push
ret
xor
push
dec
aad
jb
fucomp
jecxz
popf
sub
mov
push
loop
mov
mov
lock
sbbb
dec
sbb
mov
call
xor
inc
xchg
add
insl
xchg
push
push
fisubrs
jmp
iret
xchg
pop
inc
xchg
mov
arpl
mov
push
xchg
ljmp
in
lods
jne
cwtl
fisubl
dec
sbb
nop
jp
loope
pushf
cmp
cmp
leave
or
pop
sti
punpckhbw
iret
daa
xor
lret
cmp
cmp
call
xchg
fmuls
mov
ds
mov
out
imul
int3
pop
sti
push
imul
push
sub
push
sub
xchg
mov
testl
mov
jp
lods
add
cmpsb
jne
push
mov
pop
jno
pop
les
sbb
mov
xor
bound
aam
rcll
pop
lcall
loope
out
xchg
pop
inc
shr
movsb
inc
sti
stc
jo
orl
jb
mov
dec
cmp
xchg
ljmp
sub
cli
mov
add
fcomps
ja
ljmp
cmpsl
lret
dec
aas
lods
insl
in
mov
xor
nop
pop
fidivs
add
or
arpl
addr16
mov
push
cli
push
hlt
aad
xchg
fistl
jno
repnz
sub
mov
scas
insl
dec
cmp
xor
add
cmp
inc
stos
mov
xchg
sub
cld
das
push
push
mov
sub
xor
repz
jl,pn
lods
dec
cmp
sbb
mov
cltd
jns
jmp
aam
ja
xchg
lds
les
pop
shll
divl
push
and
cmpsl
or
gs
push
js
movsl
in
ds
jo
mov
nop
cmp
loopne
fs
xchg
hlt
adc
dec
jg
das
cmp
js
and
rcrl
pusha
das
insb
loopne
aam
pusha
adc
dec
or
gs
pop
aam
out
sbb
aas
test
add
daa
inc
sub
je
lods
push
aas
cmpsl
push
inc
cwtl
sarb
sub
lods
imul
ret
aaa
sbb
in
iret
and
insl
negb
ret
jle
xchg
lea
fsub
testb
in
xchg
or
stos
dec
pop
xchg
push
notl
andb
jo
xor
inc
in
mov
nop
std
xchg
xor
out
jl
mov
mov
adc
je
fcomps
mov
cmp
arpl
jp
jb
cmp
push
sbb
pop
mov
push
das
clc
sub
push
xor
out
rclb
movsl
xor
xor
ret
mov
xchg
mov
mov
movsl
dec
fistpl
cmp
pop
adc
call
repz
mov
mov
shr
ficomps
xorl
sbb
push
pushf
inc
pop
inc
lret
data16
bound
xor
jp
pop
dec
mov
popa
cmpsb
xchg
xlat
movsb
xchg
adc
pop
in
loope
frstor
je
sub
fdivr
arpl
pop
sub
push
mov
cltd
jmp
arpl
mov
lock
fmuls
aad
dec
xor
leave
int
push
cmc
imul
js
adc
imul
mov
mov
jbe
hlt
shl
pop
in
xchg
stos
pop
xlat
inc
daa
sti
mov
jge
pop
adc
push
xlat
out
push
fnstsw
sbb
cmp
shrb
dec
mov
pop
cmpsb
dec
das
cs
movsb
in
cmp
sub
mov
daa
cltd
imul
sbb
push
lahf
roll
cld
jbe
scas
mov
xorb
mov
aad
dec
subb
mov
jb
xchg
pop
les
aad
pusha
or
rolb
insl
jmp
call
sub
adc
mov
cmp
addr16
or
sub
adc
sub
cmpsb
inc
addr16
outsb
test
mov
adc
push
rcll
je
testb
stos
out
repnz
mov
cmp
icebp
cmp
lea
lret
insb
push
push
jbe
mov
and
lods
pop
push
xchg
pop
mov
sub
mov
out
or
aad
fisttpll
cmpsb
popf
out
push
aam
cmp
test
mov
loopne
das
mull
mov
fmul
aad
sahf
repnz
out
scas
dec
icebp
cld
mov
inc
les
leave
add
in
fimuls
xorl
jmp
test
insl
bound
xor
inc
add
lahf
andl
mov
pusha
dec
cmp
ss
jmp
aaa
or
out
xor
test
lods
mov
inc
insl
pop
pop
sub
jecxz
xchg
loop
les
cmp
mov
fldcw
data16
push
inc
mov
and
aas
scas
cld
dec
fcoml
xchg
push
xchg
sahf
sbb
lods
xchg
cmc
scas
fisubrs
sub
or
repz
scas
xlat
inc
mov
mov
xchg
in
test
jb
lods
sub
cli
dec
fwait
jne
add
addr16
mov
ss
stos
aaa
scas
cld
inc
mov
es
xchg
pusha
stos
movsl
xchg
fwait
movsl
mov
dec
sbb
pusha
aas
scas
add
push
aas
hlt
in
daa
pop
push
jo
xchg
jbe
jbe
imul
lahf
fldenv
push
adc
add
jnp
sub
aad
ja
xor
call
jbe
outsb
nop
jp
inc
jg
cli
std
sbb
xorl
mov
jbe
or
mov
je
out
cmpsl
push
icebp
xchg
pushf
push
mov
sbb
fs
inc
std
and
xor
lea
fdivrs
lds
subl
lret
out
daa
pop
or
cmp
arpl
leave
out
sub
in
jne
mulb
pop
in
pop
sahf
or
xchg
sub
push
pop
fimuls
mov
dec
xchg
divb
scas
mov
xchg
test
or
jle
cld
lret
icebp
or
popa
sub
xor
loopne
ja
dec
sbb
out
sbbl
lret
sub
arpl
movsl
daa
ja
lret
data16
inc
push
sub
sbb
xor
inc
fnstenv
test
jg
push
push
mov
add
ficoml
out
jbe
movsl
mov
mov
xchg
xchg
enter
cmp
xlat
lcall
dec
mov
test
pushf
inc
mov
push
dec
push
pop
mov
movsb
push
sub
dec
test
test
mov
int3
sub
in
pop
adc
mov
fstpl
sbb
inc
out
lret
sub
mov
add
xor
fimuls
or
xor
mov
sbb
add
stos
scas
push
pop
sbb
mov
stc
xchg
and
add
add
loop
push
icebp
mov
jne
adc
dec
outsl
sbbl
push
pop
bnd
mov
cmc
int3
mov
jl
in
cmp
mov
xchg
lea
aas
inc
enter
aaa
xchg
dec
add
leave
lcall
daa
fidivrl
movl
fdivrl
sub
in
dec
in
scas
mov
mov
mov
mov
das
movsb
andb
xchg
xchg
fs
out
mov
int
jnp
mov
adc
push
cwtl
push
hlt
cmp
dec
mov
fmull
dec
lcall
dec
mov
lcall
sbb
push
sbb
test
pop
movsl
mov
xor
addr16
mov
lahf
sbb
add
or
mov
in
and
or
xor
cli
lods
mov
pushf
jecxz
sbb
aam
lret
pushf
shrb
sbb
push
inc
mov
mov
in
jp
lock
jmp
into
je
loop
mov
cwtl
js
xor
dec
adc
test
sub
xchg
dec
in
jo
shll
push
cli
cmp
lds
orl
push
rcll
dec
sbb
int3
test
adc
in
cs
daa
or
test
fdivrl
das
cltd
jae
xchg
pop
test
repnz
pop
in
repz
mov
push
pop
jae
or
jae
pop
sbb
xor
cld
rcl
dec
xor
mov
cmp
in
dec
jb
push
xor
cltd
add
add
ret
inc
mov
pop
mov
ljmp
push
inc
xchg
fsubrs
xchg
pop
sbb
insl
xor
mov
cmp
pop
mov
and
icebp
and
mov
neg
stos
push
or
xchg
mov
sub
nop
sbb
fprem
xchg
lret
cmp
test
mov
leave
cltd
stc
push
xor
das
push
je
mov
inc
xor
in
sub
dec
and
xor
fcmovnb
mov
rcr
xchg
out
aam
push
lock
add
inc
push
mov
dec
jp
xchg
test
adc
add
jl
add
push
pop
lret
pop
adc
dec
jo
lods
aas
push
xchg
cmpsl
xor
add
push
out
or
push
mov
sbb
xchg
mov
inc
fwait
jle
mov
clc
xchg
or
xlat
mov
cmp
mov
lods
sub
jmp
pusha
jae
inc
test
jmp
jl
std
inc
mov
xorl
push
sub
adc
fistpll
ds
mov
and
adc
das
popf
jp
cmc
mov
imul
cmp
jne
insb
ja
dec
js
or
insb
les
xlat
lahf
insb
aad
mov
bound
add
test
addr16
dec
sub
and
jne
push
ja
dec
mov
sub
and
call
pop
imul
push
out
adc
cmp
sarl
repz
ja
clc
add
xor
lret
mov
dec
daa
dec
scas
jecxz
xchg
fsts
aad
cmp
jge
jns
shlb
pop
jle
push
fwait
adc
es
sarb
mov
jns
std
dec
cmpsb
push
jo
pop
scas
adc
xchg
cmp
xor
mov
arpl
ljmp
push
lock
jmp
or
loopne
rorl
xorl
frstor
xchg
adc
push
mov
mov
push
sti
ja
xor
movsl
insb
push
adc
shrb
adc
mov
pop
xchg
adcb
out
mov
or
fs
imul
xlat
cs
add
jge
xlat
in
in
loopne
or
push
mov
out
mov
inc
jnp
es
cltd
sbb
xor
in
outsb
sbb
fwait
and
lcall
jo
scas
mov
jmp
lcall
and
aaa
inc
aas
xor
jno
pop
dec
adc
les
pop
ds
out
repnz
sub
push
in
inc
and
cmc
push
or
neg
mov
sub
in
aad
sti
jp
lods
daa
dec
in
loop
pop
test
pop
out
sti
mov
inc
hlt
mov
sub
inc
scas
inc
test
dec
mov
lock
loope
mov
jbe
xchg
test
jle
das
insb
sub
ffree
out
jne
sub
arpl
flds
jp
push
lods
push
sub
add
sub
mov
popa
push
jmp
in
gs
fnstsw
xor
sti
inc
or
loopne
jge
sub
pop
loope
test
mov
mov
push
test
loop
and
push
add
cmp
imul
mov
dec
inc
push
outsb
es
lcall
jns
mov
jp
xchg
sbb
cltd
insb
push
fwait
jle
mov
push
loope
fnsave
imul
add
in
lds
sbb
and
and
mov
fldcw
mov
repz
out
in
jmp
jbe
mov
xlat
cmpsb
inc
sbb
fsubs
fcoms
xchg
andl
loopne
xchg
ss
dec
imul
bswap
cmpsb
bound
negl
sub
mov
sbb
mov
jmp
inc
fsubl
mov
pop
aas
xchg
ja
xchg
inc
fiadds
rorl
dec
mov
adc
and
xor
sarl
sbb
cmpl
shll
bound
ror
pop
lret
fdivr
mov
pop
sbbb
inc
mov
loopne
sar
mov
xchg
jg
inc
mov
and
xchg
in
mov
cwtl
xchg
leave
mov
dec
in
fisttps
andl
mov
and
das
into
imul
sbb
or
or
and
movsl
xchg
push
loope
test
fs
sub
adc
dec
lahf
dec
cmpsl
xor
repz
pop
adc
ds
xchg
push
sahf
push
fcmovb
lods
and
hlt
pushf
movsl
mov
icebp
mov
out
fs
outsb
cmp
adc
repz
dec
pop
inc
jge
test
sub
pop
test
icebp
sbb
pop
daa
mov
rorb
aaa
pop
sbb
fsubr
jge
aaa
mov
addb
rcl
ficomps
jp
js
or
cmpsl
je
xor
imul
out
push
push
stc
add
repz
repz
inc
dec
pop
xchg
nop
push
add
bound
push
jmp
fdivl
pop
mov
sub
pop
cmp
mov
aaa
cmp
xchg
sub
and
mov
pusha
daa
cmp
mov
cs
ret
add
mov
std
int
pop
js
neg
rorl
idivl
ret
call
xchg
push
repz
and
data16
mov
or
movsl
shlb
and
shrl
ss
xchg
or
imul
jne
into
outsb
jnp
xchg
cmc
inc
cmp
loop
out
mov
jne
lods
rcll
jae
sub
mov
push
mov
cmpsl
cmc
lret
loope
loop
insb
in
sbb
and
mov
daa
mov
dec
xchg
roll
lds
inc
cmpsl
lods
xchg
sbb
mov
cmp
js
pop
mov
sbb
xor
sbb
push
inc
je
cmp
pushf
insl
adc
mov
pop
or
out
sub
clc
jmp
sub
ljmp
mov
mov
inc
adc
stos
push
rol
shlb
cmp
cmp
fiaddl
jae
addb
enter
jp
xlat
dec
incb
shlb
xchg
push
ja
adc
fiaddl
cs
or
mov
das
xor
pop
call
jae
nop
fistpl
lret
sysenter
push
mov
jno
cmp
out
les
enter
loop
int3
push
jo
jns
adc
mov
adc
xor
test
pop
push
inc
push
add
mov
jecxz
outsl
popf
lret
jne
jbe
mov
loop
or
out
cmp
sub
push
add
push
cmp
jnp
inc
jmp
mov
ss
jle
call
stos
mov
cmp
inc
in
sub
mov
adc
pushf
out
ds
cltd
jmp
fmull
mov
push
xchg
cmp
pop
and
mov
popf
mov
es
out
hlt
mov
fdivl
in
lods
add
imul
xor
cmp
xor
insb
daa
imul
sbb
sahf
mov
loop
in
ss
cmp
dec
push
push
dec
je
push
dec
cs
lds
mov
loopne
jb
repz
pop
in
repz
loopne
out
fisubs
sub
and
ja
jle
sub
add
out
push
out
mov
pop
aas
push
cli
testl
test
mov
cwtl
test
sub
dec
leave
addr16
cli
call
cmp
fldt
lock
int
call
mov
pop
sbb
iret
cmpl
dec
xor
xchg
jne
mov
mov
sti
xor
sbb
inc
jnp
sub
and
mov
push
scas
inc
dec
sbb
mov
pop
dec
push
pop
gs
xchg
clc
loop
push
orl
cmp
mov
jne
cli
ljmp
or
mov
stc
aas
sbb
pop
cltd
clc
roll
xchg
xor
pop
enter
pop
movb
cld
jg
xorl
movsb
cmpsl
std
push
mov
sub
lods
push
mov
cs
in
in
mov
inc
push
scas
jne
lret
inc
out
sbb
push
mov
js
lods
inc
lds
mov
pop
repnz
and
insl
in
xchg
dec
push
cmc
je
fidivrs
bound
repz
push
flds
xchg
roll
movnti
pop
imul
xchg
imul
mov
lock
jns
jecxz
js
aaa
cltd
push
fprem
xor
repnz
mov
insl
push
mov
dec
cli
pusha
dec
push
lcall
mov
dec
cmpsl
scas
mov
adc
xchg
push
daa
xor
jecxz
sbb
dec
les
imul
data16
sti
or
xchg
pop
dec
out
adc
dec
xor
fcompl
lret
or
cld
je
in
daa
mov
push
inc
sub
gs
mov
add
fisubrl
xchg
in
aaa
adc
mov
out
sub
test
scas
inc
pop
int3
out
insb
mov
daa
test
inc
lret
mov
sbb
out
inc
fdivrl
pop
loopne
inc
or
stos
inc
in
and
in
stos
pop
add
ret
jb
lcall
fs
jb
push
add
jp
outsl
stos
ja
mov
data16
lahf
xchg
cltd
test
mov
outsb
sub
jle
loop
jbe
pusha
dec
xor
call
xlat
lods
sub
fnstenv
out
icebp
loop
movsl
xchg
mov
sbb
mov
test
dec
dec
stos
sub
pushf
adc
into
xchg
fnstenv
lret
adc
push
call
int3
or
xchg
sub
loop
ds
fwait
fwait
ja
sbb
adc
cmp
cmp
xor
fdivrs
adc
sbb
fcomp
aaa
inc
xor
inc
gs
shr
pop
sub
sub
add
xchg
sub
cmp
pop
xor
and
lsl
push
dec
mov
stos
push
jle
movsl
movsb
add
pop
mov
imul
sbb
popa
call
cmp
mov
add
stc
sbb
add
std
pop
push
sub
cmp
jns
loopne
ret
pusha
hlt
xor
jo
orb
cmc
les
push
push
sti
mov
xor
ja
add
sub
cli
enter
add
loopne
shll
lret
sarb
sbb
aaa
add
ljmp
pop
jecxz
xchg
xor
test
cltd
xorl
je
jl
and
push
in
std
inc
pop
in
jmp
bound
cmp
cmp
cmp
jno
pushf
sbb
inc
stos
pop
push
xor
push
jns
pushf
push
jbe
and
repz
ja
adc
sarb
mov
shlb
movsl
mov
and
shr
mov
push
xchg
and
adc
lods
sti
int
and
cmp
fstl
out
addl
adc
or
lcall
repz
int3
mov
clc
loopne
cmp
les
pusha
xor
pop
add
nop
mov
aas
and
adc
dec
xor
les
and
jo
cmp
xchg
mov
lahf
nop
cmp
sahf
mov
sbbl
and
jns
aaa
push
in
lods
mov
aam
fwait
pop
cltd
xor
orb
inc
jae
jnp
dec
inc
sub
cmp
mov
outsb
mov
lods
les
cwtl
js
sub
nop
jmp
out
or
inc
and
or
stc
sbb
jmp
loope
aaa
inc
mov
mov
xor
mov
js
cmp
xchg
pop
imul
out
push
scas
pop
push
repz
stos
mov
sub
lret
mov
jo
jmp
les
psubsw
sti
cmp
adc
int3
push
out
fisubrl
mov
jp
push
fidivrl
lds
fwait
sarl
dec
cmc
fstp
fs
ja
sbb
or
mov
ljmp
lods
fnstcw
test
popf
cmp
test
rolb
sbb
leave
mov
sub
adc
sub
mov
jne
adc
nop
push
popa
stos
mov
pop
mull
mov
ss
out
pcmpeqw
add
add
push
hlt
popf
mov
nop
aam
fsubr
jnp
push
dec
adc
mov
inc
mov
inc
add
adc
jle
sbb
fistpll
out
sub
cmpsl
out
mov
daa
outsb
leave
sti
mov
insl
inc
shlw
inc
clc
ss
dec
cld
xor
dec
aam
mov
icebp
fsts
xor
movsb
jle
sbb
dec
push
movsb
cmc
xor
push
jg
fsts
push
mov
test
push
add
push
xor
clc
leave
or
pop
fistps
pop
dec
and
push
mov
xchg
lret
xchg
in
out
scas
mov
je
push
jp
mov
mov
jae
test
mov
xorl
stos
hlt
add
push
or
or
out
mov
mov
push
addb
sub
mov
nop
into
adc
sbb
jns
cmp
or
jo
push
push
or
fsubrs
sub
testl
xchg
test
cmp
jb
mov
arpl
movl
pop
js
std
mov
cmpps
lahf
add
outsb
lock
xlat
xor
and
rcr
xor
pop
divl
hlt
sub
gs
mov
ret
cltd
push
xor
in
repz
pop
loope
dec
stc
adc
fistps
mov
push
call
adc
andb
pushf
or
cmc
xchg
das
xor
mov
lock
fstpl
insb
ja
pop
out
xchg
ficoms
js
push
mov
in
data16
out
adc
sub
xlat
scas
xchg
cwtl
notb
enter
xor
mov
push
xor
jae
cmp
cmp
pop
pop
xchg
rcrl
test
pop
cltd
jns
xchg
dec
leave
into
cltd
pop
add
inc
and
inc
cmp
setno
ror
sub
pop
inc
pop
push
add
in
sub
pop
lcall
xor
adc
ret
inc
mov
inc
mov
in
and
rcr
loopne
add
mov
das
mov
in
mov
push
add
lds
mov
jb
dec
add
clc
jb
jbe
outsl
sub
iret
mov
imull
pop
inc
flds
cld
adc
add
push
mov
inc
ret
fxch
add
inc
insl
lods
inc
push
es
incl
inc
jns
lret
lahf
mov
leave
orl
scas
pop
or
push
xor
dec
repz
fwait
jnp
lods
js
pushf
lcall
imul
mov
icebp
push
mov
or
dec
lds
push
jecxz
sbb
std
inc
fnstsw
ret
ss
lret
loopne
mov
fwait
inc
fwait
sbb
loope
pop
inc
repz
cmp
push
xlat
sub
jo
xchg
popa
outsb
fmulp
movsl
jb
fsubrl
sti
out
dec
lods
call
shll
sbb
je
dec
inc
lea
ja
clc
adc
mov
shl
fcmovbe
or
ljmp
mov
shrl
pushf
incl
sbb
les
negb
push
rorl
xor
leave
aam
mov
loop
lret
insl
andb
mov
mov
sbb
cmp
cs
jle
mov
inc
andl
pop
sub
push
fmul
int
inc
or
jb
aaa
lahf
mov
lock
dec
stos
in
lea
and
icebp
pop
pop
sbb
js
loop
es
shll
cmp
inc
add
lds
push
sti
cmp
test
and
mov
dec
mov
negb
cmp
stc
jg
jg
sbb
shlb
cmp
lods
dec
sbb
inc
dec
pop
dec
pusha
les
rcrl
jo
mov
xchg
inc
dec
ljmp
mov
and
jno
xor
stc
imul
je
shrb
movsb
stos
sub
mov
pop
sub
pop
inc
inc
fmul
gs
mov
xor
inc
addr16
lods
gs
and
xchg
adc
lsl
out
es
mov
xor
or
inc
div
test
sbb
and
adc
push
dec
mov
mov
cmp
roll
loope
sub
cmp
loopne
icebp
fsts
add
xchg
xor
adc
push
mov
fld
ret
imul
aad
ja
dec
loopne
mov
and
stos
mov
scas
dec
in
sub
jmp
cmp
cmp
sbb
mov
lcall
jb
adc
sub
fsts
lods
inc
loope
jge
xchg
pop
and
or
outsb
or
xchg
xchg
fbld
jno
lods
enter
xlat
and
xor
adcl
add
std
inc
fmul
pop
push
pop
ss
fs
lea
xorl
ffree
mov
mov
sahf
add
addr16
ss
aaa
pop
dec
sti
cmpsb
inc
add
dec
je
inc
mov
dec
out
fldcw
cli
ds
sbb
mov
dec
push
cmp
fidivl
or
call
das
cld
add
fs
xchg
std
cmp
cmp
subl
mov
push
mov
cld
mov
sti
stos
cld
ss
cli
and
cld
jbe
sbb
pop
push
mov
mov
pop
fisubl
mov
icebp
imul
out
cwtl
xor
jb
fdivl
pop
adc
mov
ss
mov
xor
int3
jb
ds
movsl
inc
push
outsl
orb
xchg
sbb
arpl
or
hlt
sub
into
test
mov
push
data16
pushf
lods
fildll
stos
lock
cmp
ror
jp
mov
sbb
stos
insb
push
dec
mov
int
mov
and
jmp
and
call
enter
sub
jmp
loopne
adc
or
movsl
lds
leave
fs
add
xor
dec
in
dec
inc
jmp
add
scas
loope
addr16
shl
test
sub
mov
stos
xchg
xchg
or
push
inc
js
pop
loopne
stc
add
cmp
sub
pusha
mov
mov
push
aad
push
jmp
mov
mov
and
aas
je
call
pop
ja
or
pusha
dec
into
sahf
mov
xor
popf
xor
and
mull
adc
dec
stc
pcmpeqb
jns
jnp
jmp
pmulhuw
and
lds
mul
mov
lods
loopne
fsubrl
jecxz
sbb
aas
sbb
lahf
test
dec
idivb
jecxz
rol
scas
push
ret
push
push
lahf
out
movsb
ret
sbb
pop
or
jae
fidivrl
jl
sbb
call
add
gs
div
push
fs
push
add
adc
pop
ljmp
xchg
idivb
jle
ret
outsb
mov
jg
andb
mov
adc
shrl
pop
adc
or
pop
cmp
lret
aam
push
cmc
inc
mov
mov
out
leave
or
mov
sbb
insl
nop
imul
adc
ss
in
xchg
adc
repnz
arpl
testb
cmp
add
mov
popf
ds
mov
imul
lea
mov
xor
jecxz
cwtl
mov
fcomi
pop
jno
lea
lahf
filds
scas
test
lods
mov
in
sbb
jno
pop
outsb
and
ret
push
cmp
mov
les
fstpl
add
test
es
test
xchg
xchg
lret
add
or
fadds
and
stos
xor
daa
lds
test
add
fidivrs
push
in
cs
fmull
int
mov
and
sti
imul
and
pop
mov
inc
inc
sub
cli
iret
add
scas
add
rorl
xor
loope
mov
out
call
dec
xor
adc
jge
push
mov
dec
enter
inc
out
sub
cld
sbb
mov
mov
out
in
fwait
jnp
mov
adc
and
pop
sbb
add
sbbb
mov
das
jo
mov
push
sbb
cmp
test
dec
or
divl
cmp
stos
mov
sbb
test
leave
addb
mov
fcomps
test
pop
pop
adc
push
push
add
loopne
adc
add
xor
addr16
push
pushf
pop
sbb
jmp
andb
sbb
jge
rcrl
out
rcrl
mov
pop
jl
lods
mov
loopne
imul
sub
test
jno
sub
dec
cmp
lret
mov
js
lds
xor
outsl
cmpsl
xor
rclb
jo
or
daa
adc
int3
lahf
or
sbb
add
mov
sub
and
out
ljmp
xlat
xchg
push
pop
pop
jge
cmc
dec
push
lret
xor
and
ja
mov
xorb
insb
ja
sbb
jne
mov
xor
shr
mov
sbb
stos
push
ljmp
xor
cld
clc
mov
fs
sbb
aam
stos
and
or
dec
and
pop
popf
fs
movsb
jp
mov
mov
dec
or
xchg
test
test
stos
and
add
arpl
push
test
push
sbb
pop
push
imul
outsb
mov
and
pop
cld
jns
adc
jo
push
pop
lods
jmp
nop
iret
cmp
addl
jge
es
bound
cltd
mov
stos
push
xor
int
outsb
popf
jbe
stc
adc
dec
jle
xor
pop
and
add
and
js
stos
std
lea
aad
rolb
data16
insb
sbb
insb
push
icebp
dec
xchg
stos
jl
jb
adc
mov
dec
lds
inc
repnz
adc
xchg
pop
cmc
mov
iret
or
pop
loop
roll
mov
rol
dec
loopne
enter
decl
or
mov
sub
cmp
ror
out
in
or
aas
mov
xor
mov
ret
dec
sti
push
and
inc
test
jmp
push
inc
mov
cltd
je
add
dec
inc
cmpsl
sub
push
cmpb
je
xor
push
sub
mov
ja
jmp
pop
popaw
sub
pop
jecxz
mov
sbb
cld
xchg
push
outsb
ljmp
je
enter
subl
push
lret
jbe
adc
cmp
sahf
clc
aaa
lret
call
fs
outsb
push
jg
je
repz
push
sub
lahf
mov
mov
sbb
cmc
test
or
ljmp
mov
loop
xchg
lods
lods
inc
orb
mov
pop
fmulp
cmp
jle
inc
push
push
and
mov
fidivrs
fs
xlat
ljmp
or
test
ret
out
lods
aad
repz
push
cmp
and
mov
call
inc
dec
lods
lods
inc
iret
call
divb
mov
cltd
hlt
cmc
xchg
mov
clc
out
cltd
out
popf
out
aas
lds
xchg
repz
mov
mov
jp
cmp
add
fs
cld
and
loopne
ret
sbb
sarb
push
xlat
jb
cwtl
pop
or
sarl
pop
outsb
scas
xor
call
out
aaa
in
stos
inc
pop
outsb
fnstcw
cltd
pop
in
jne
or
imul
cmp
xorl
ljmp
mov
fcoml
inc
cmp
add
add
call
push
mov
cmp
sti
scas
pushl
cwtl
test
xor
daa
das
xor
sub
jle
adc
dec
dec
jb
fwait
pop
jo
lcall
popf
mov
fcompl
adc
add
xchg
lahf
subb
sbb
mov
add
aas
sub
test
in
cmp
mov
sbb
scas
cwtl
rorl
mov
xchg
int
lods
fsubl
xorb
aaa
inc
pop
out
dec
adc
insb
orb
fistl
rclb
lods
xchg
add
sbb
pop
fucomp
repz
cmp
add
stos
jnp
mov
pop
mov
push
adc
cmp
aaa
push
mov
and
cs
jl
fwait
repz
leave
mov
dec
push
mov
stos
adcb
gs
push
push
jmp
inc
pop
rorb
fimuls
data16
rolb
or
out
insl
xlat
out
add
or
mov
aam
ficompl
idivl
inc
cmp
pop
dec
ret
cmp
jl
aad
or
add
stc
ficoml
popf
addr16
rorb
andl
enter
dec
xor
jae
sub
jo
ja
test
pop
std
cmpsb
sarb
push
lahf
lea
sub
addb
shll
push
jecxz
sbb
jo
pop
jnp
loop
xchg
push
or
shl
mov
mov
mov
dec
les
idiv
lret
rcl
shll
out
add
mov
repz
mov
mov
xor
sub
nop
cwtl
sbb
pop
idivb
mov
cld
or
jno
sub
gs
mov
and
sbb
mov
jge
sub
inc
imul
test
aam
fs
xchg
popa
scas
dec
xchg
pushf
popf
into
add
imul
std
daa
insl
outsb
gs
push
mov
fstl
inc
jne
sub
adc
shll
pop
out
jge
adc
pushl
push
mov
arpl
add
add
jecxz
mov
fidivs
stos
rclb
scas
into
popa
mov
jge
lock
movb
jns
popf
sarb
es
int
je
std
movsl
inc
xor
movsb
jecxz
mov
clc
push
aam
hlt
lea
sahf
jbe
fs
jb
pushf
stc
outsl
xor
movsl
gs
cmp
out
je
and
cld
pop
movsl
dec
sub
pop
mov
sbb
sbb
cwtl
bnd
addr16
fldl
loop
cmp
ja
xchg
sub
mov
iret
ror
ror
cmp
iret
pop
in
scas
jb
dec
push
dec
pop
insl
dec
sbb
repz
mov
mov
movsl
loope
mov
mov
mov
test
adc
inc
xchg
mov
cmp
in
lcall
mov
pop
cmp
dec
push
pop
cld
pop
adc
dec
and
push
repnz
adc
cmc
dec
add
cmp
bound
sbb
inc
mov
sbb
jmp
daa
jmp
mov
xchg
pop
es
data16
cmp
jmp
into
flds
fnstsw
jp
aad
cmp
faddl
cli
lds
push
mov
inc
data16
gs
andb
push
sti
bound
in
aaa
sarl
inc
mov
and
jns
inc
add
icebp
repz
mov
xchg
xlat
scas
xchg
andl
xchg
mov
cmp
fsubrs
hlt
loope
rorl
mov
filds
xchg
sbb
into
lods
fisubrl
fiadds
sbb
iret
std
fcoms
icebp
mov
mov
fwait
aaa
sbb
or
lods
jmp
xor
fidivl
sub
cmpsl
sbb
push
ljmp
insl
or
xchg
pop
sub
pop
sub
mov
call
rorb
cmp
pushf
or
test
adc
add
mov
scas
addr16
jg
dec
popf
sarl
or
cltd
test
xor
rcll
aaa
fsin
sbb
dec
testl
repnz
popf
std
sbb
cmp
lds
jge
cmpsl
push
pop
imul
mov
xor
xlat
inc
ljmp
inc
sbbb
cwtl
rclb
jne
sub
push
scas
icebp
ret
iret
lods
add
mov
push
stos
sub
pop
jl
pop
nop
xchg
adc
push
scas
cld
adc
push
add
repz
imul
into
fwait
cmp
popa
prefetch
or
rol
daa
add
push
cs
add
inc
xor
adc
push
inc
and
push
jnp
fsubl
pop
dec
pop
mov
inc
cs
dec
outsb
mov
mov
in
pushf
pop
mov
not
sub
out
loope
cmp
es
adc
adc
bound
add
dec
sbb
inc
add
jae
das
outsb
mov
and
or
xlat
fisttpl
xchg
hlt
jb
mov
or
mov
mov
dec
lret
iret
or
and
cmp
pop
imul
cmp
jl
int
mov
mov
shlb
mov
push
out
shl
jae
xor
out
mov
scas
pop
fdivs
bound
shll
xchg
adc
adc
mov
adc
cmp
bndstx
xchg
jmp
lret
adc
cmp
js
jecxz
leave
push
mov
fstl
cwtl
fcmovb
mov
inc
jb
pushf
pop
dec
push
negb
mov
push
push
cmp
jo
mov
clc
aam
dec
clc
sub
cmp
or
sbb
xchg
inc
mov
add
xor
fmul
fwait
loop
out
fdivrs
repz
sbb
push
imul
andl
jp
mov
jg
sahf
or
dec
imul
push
ja
sub
inc
imul
std
sub
mov
add
and
and
pop
mov
xchg
dec
das
cmpsb
and
fisttps
neg
test
or
pushf
leave
mov
lock
xchg
lock
aaa
cld
leave
cmp
push
mov
fstps
inc
mov
cmp
mov
cs
mov
mov
inc
add
and
aas
rcrb
cltd
jnp
push
leave
imull
cmpsb
test
xchg
dec
mov
shll
push
mov
rorb
mov
sub
lds
dec
in
and
out
cwtl
loop
push
jns
xor
mov
loopne
mov
cmpl
mov
push
clc
cmpsb
mov
adc
mov
nop
aad
icebp
test
push
ds
into
mov
jg
pop
jecxz
pop
ficoms
stos
sub
cmp
lea
and
lea
loop
sub
or
insl
push
mov
sahf
cmp
mov
jbe
loopne
pop
das
mov
shl
insl
rolb
adc
je
mov
jg
adc
scas
or
pusha
mov
cli
mov
jns
inc
adc
mov
cmp
mov
std
orb
sbb
xorb
xchg
sub
pop
cmp
shrb
push
xor
jecxz
out
repz
adc
add
jg
and
push
pusha
loopne
fadds
and
cmc
and
mov
je
inc
push
mov
or
pop
mov
pop
add
jecxz
sahf
insl
fs
xor
lea
mov
out
mov
repz
push
ret
cmp
xchg
daa
dec
pop
cmp
jmp
pop
sbb
adc
adc
fisttpl
pop
push
hlt
lea
xchg
push
mov
jle
jno
and
add
ret
xorl
xchg
adc
push
push
fisttpll
test
test
pop
insl
mov
jae
sub
xchg
jle
rcrb
sbb
and
bound
xchg
xchg
fsubl
xor
xchg
and
cmp
mov
pushf
insl
mov
add
in
les
test
jle
nop
popa
clc
call
ja
adc
mov
cmp
and
lock
pop
fwait
sahf
xor
dec
shrb
mov
or
lret
cmp
inc
sbb
out
mov
xchg
cltd
adc
pop
cmp
dec
int3
cmp
fiaddl
pop
or
jl
sbb
fisttps
lea
fildl
out
aas
ret
and
aaa
inc
ja
jae
jne
popf
pop
inc
push
mov
stc
pop
je
xlat
or
inc
push
pop
mov
rclb
ret
fnstcw
dec
int3
adc
cmp
push
sub
hlt
rolb
popa
ja
or
adc
lret
dec
aaa
jne
test
stc
cmp
push
inc
xchg
xchg
mov
in
movsl
push
push
hlt
push
out
pusha
push
clc
loope
mov
insb
mov
xorl
push
inc
cmp
out
inc
jmp
dec
mov
frstor
jb
inc
pop
push
sub
push
add
leave
push
scas
push
push
loopne
mov
sti
dec
mov
jae
xlat
jb
dec
pushf
mov
sbb
jmp
stos
sbb
xchg
andl
push
punpckhdq
mov
add
cwtl
ret
or
or
jmp
cmp
dec
ss
inc
dec
adc
jmp
inc
push
or
mov
dec
dec
xchg
sub
push
adc
pop
popa
xor
mov
pop
mov
fldenv
lcall
gs
mov
leave
in
or
jns
cmc
or
or
shr
enter
mov
mov
js
jmp
scas
ret
xrelease
lds
add
adc
dec
lods
popa
out
fsin
outsl
sub
lock
or
aas
iret
fldenv
ljmp
pop
aaa
add
dec
sbb
shrl
frstor
pop
fldt
jg
adc
mov
push
cmp
inc
or
jl
add
pop
mov
or
pop
jae
sub
mov
scas
dec
inc
or
or
pop
lock
inc
mov
ret
jle
adc
dec
test
lret
xor
mov
push
cs
jl
xor
push
sti
fwait
push
cltd
arpl
dec
out
shll
and
ds
rcrb
mov
ret
or
rclb
sub
cltd
push
addr16
jle
add
inc
scas
xlat
mov
jnp
std
dec
ret
andb
dec
stos
mov
fildll
lea
xchg
lods
mov
or
sub
inc
jp
hlt
fsubrl
aas
mov
or
cmpsl
jmp
lret
clc
xchg
ret
fldz
dec
xchg
arpl
mov
sbb
gs
or
in
pushl
popa
push
fimull
add
dec
aam
inc
negb
dec
mov
lret
push
faddp
push
je
mov
rcll
test
hlt
mov
cmp
out
into
iret
inc
cmc
sub
fwait
out
das
xor
xor
mov
jl,pt
pop
cmpsb
aad
xchg
sahf
inc
aam
in
dec
int
sbb
mov
stos
rcll
pop
or
xor
out
mov
pop
mov
mov
mov
jge
push
int
push
loopne
mov
lock
movsl
les
in
cltd
lret
and
rcll
pushf
jbe
fidivrl
jbe
xchg
lds
pop
imul
shlb
orb
repnz
leave
mov
mov
lea
nop
jg
fwait
adc
shrl
repz
pop
mov
fbstp
jmp
and
jne
out
test
mov
inc
je
mov
sub
xor
dec
out
and
jbe
add
shlb
fidivs
sarb
jecxz
loopne
fwait
pop
jne
pop
movsb
and
push
ja
inc
or
imul
dec
lock
push
cld
js
imul
pusha
pop
sahf
mov
push
test
inc
fwait
loope
cmp
inc
fdivrl
sub
out
pop
fists
test
add
rcll
dec
cmc
mov
sub
sahf
push
nop
cld
or
arpl
jmp
es
push
popf
xchg
sub
pop
add
lock
das
dec
movsb
push
xchg
xor
mov
popa
or
pop
and
inc
addl
xchg
loop
pop
cmp
jmp
push
cli
mov
mov
out
dec
fstl
push
in
pop
lcall
in
notb
lods
ljmp
dec
js
fisubrl
lret
push
filds
popf
xor
cwtl
sahf
aad
faddl
scas
xchg
add
inc
sub
shrb
mov
xlat
mov
sbbb
xchg
adc
sbb
orb
je
loopne
jo
xchg
out
mov
add
subl
mov
xchg
leave
leave
sub
adc
xchg
mov
or
cmp
test
popa
bound
dec
sub
ds
bound
out
cmp
pop
outsb
flds
aad
or
cmpsl
out
jo
push
in
decl
sub
fmull
cltd
inc
ja
pop
int3
sub
fwait
dec
or
lods
pop
stos
es
lods
xchg
movsl
pop
mov
cmp
xchg
lret
in
imull
xor
idiv
mov
push
mov
lahf
dec
pop
imul
mov
jg
pop
repz
cmp
shlb
add
shll
enter
data16
nop
sub
inc
mov
inc
rorb
ds
push
fcomi
and
xor
movsl
sbb
lods
aad
cwtl
xor
add
lcall
idiv
sbb
xchg
pop
hlt
das
hlt
push
mov
mov
push
pop
inc
jbe
mov
inc
rclb
ret
lods
mov
jecxz
lret
fcoml
jns
add
jp
popf
sbb
mov
dec
movsb
test
xchg
cmp
fisubrl
sbb
call
adc
adc
adc
je
adc
sti
mov
pop
push
mov
or
iret
test
mov
dec
aaa
daa
or
cmp
push
adc
xor
pop
mov
out
mov
daa
cli
jae
mov
aaa
add
ret
cmp
jnp
jnp,pn
mov
shll
pushf
jecxz
dec
sbb
adc
movsl
out
andl
pop
add
inc
push
cmp
xor
jp
cld
mov
inc
or
mov
out
sahf
rcll
mov
out
push
add
push
mov
sub
sbb
loopne
imul
push
sub
xor
push
ret
into
and
push
pop
jmp
cmp
adc
movsl
cli
sbb
in
or
xchg
adcl
les
xchg
inc
dec
push
jecxz
lods
pop
stos
dec
incl
std
dec
xchg
jbe
adc
mov
adc
jb
xchg
dec
inc
fisubrl
mov
fnsave
mov
mov
and
imul
test
ss
imul
daa
push
js
test
ret
mov
push
lea
sub
sub
mov
xchg
jno
mov
ror
push
sub
aad
mov
xor
jae
inc
not
je
repz
cmpsl
pop
sbb
inc
popa
rorb
subb
mov
nop
mov
cli
and
sahf
leave
outsl
sub
in
scas
sub
push
mov
mov
mov
cmp
lret
jg
cmpsl
cmpsl
daa
inc
mov
mov
pop
insl
pop
adc
and
daa
mov
loope
or
adc
adcl
xor
ret
jae
out
pop
insb
pop
jae
cmp
sub
mov
xchg
jp
fbld
adc
push
mov
jns
mov
out
inc
pop
lret
jb
dec
les
cwtl
xchg
mov
jge
push
mov
inc
ret
mov
jle
pop
es
fistpl
and
insb
mov
sub
jo
movsb
xchg
and
inc
fcmovnu
jecxz
aad
jnp
inc
hlt
lds
mov
xchg
cs
mov
iret
test
xlat
icebp
adc
rcrl
data16
mov
or
add
mov
mov
scas
dec
push
fidivrs
xor
mov
movsl
out
or
stos
sub
sub
xor
pop
push
idivb
fidivrs
enter
sub
and
ss
mov
sbb
call
jle
rolb
aad
iret
sbb
in
loope
jno
inc
pop
test
jbe
lret
cmp
add
xchg
mov
popa
int3
ds
test
stc
lcall
mov
mov
test
aaa
mov
add
inc
pop
jno
jns
ret
xor
pop
cmc
scas
lea
xchg
mov
jl
inc
ja
pop
fs
push
xchg
inc
sbb
xchg
test
add
fdivrl
adc
shrl
lcall
add
pop
pusha
sahf
inc
aas
scas
mov
or
or
out
cmp
fdivrl
mov
mov
push
inc
xchg
das
mov
add
rorb
dec
mov
mov
lods
das
xchg
jo
enter
pop
or
push
test
enter
mov
sti
cmpsl
pop
ficoms
sbb
mov
enter
loope
inc
mov
pop
lods
enter
jb
nop
push
mov
push
xlat
dec
push
pushf
jae
cmp
xor
jns
std
out
lods
push
mov
mov
std
push
outsb
stos
inc
je
or
mov
xor
sbb
sub
sahf
pop
stc
push
fs
negb
fistpll
jp
mov
xor
in
and
test
aam
mov
mov
mov
push
sub
xor
mov
rclb
test
push
push
jmp
and
mov
mov
test
mov
mov
in
pop
mov
lret
icebp
mov
into
pop
sbb
ds
loope
push
outsl
cmpsl
stos
pop
arpl
sbb
call
movsb
adc
cwtl
sbb
mov
test
pop
nop
jg
adcl
cwtl
bound
mov
mov
jle
test
clts
lahf
in
mov
push
out
in
inc
cld
sahf
call
ret
popa
loope
mov
push
inc
mov
popa
pop
xchg
jo
mov
movsb
fisttpl
pop
imul
sti
xchg
mov
cmpsl
rorb
lahf
in
sub
and
jle
ret
and
popa
rolb
pop
push
jecxz
lcall
fadds
adc
pop
hlt
mov
js
ja
xor
icebp
jbe
movsb
cmpsb
push
jb
rcrb
jno
jmp
sbb
fiadds
leave
adc
lock
in
es
lock
leave
fldt
lret
push
xchg
test
leave
neg
sub
es
stos
mov
mov
inc
adc
out
stos
and
test
push
icebp
movsb
movsb
mov
push
out
cmp
inc
nop
in
stos
sbb
sbb
scas
adcl
push
mov
push
enter
fcomp
mulb
pop
in
dec
idiv
pop
int3
push
out
scas
xchg
mov
jbe
push
icebp
adcl
roll
push
out
or
jbe
or
push
cli
cmp
jb
imul
adc
inc
mov
fidivl
mov
std
inc
sub
in
mov
mov
in
gs
loopne
insl
xor
popf
sbb
adc
outsb
in
imul
test
fldt
lret
pop
adc
int
dec
sbb
loopne
or
pop
repz
inc
mov
and
cmp
sbb
ret
pop
test
lret
cmpsl
daa
inc
idiv
xor
mov
out
inc
sub
pushf
mov
jnp
lahf
outsb
popa
shll
add
test
cmp
inc
mov
xor
mov
jg
leave
rcrb
popf
frndint
dec
pmaddwd
repnz
hlt
mov
dec
inc
push
xchg
incl
jbe
cmpsb
in
nop
fnsave
add
aas
mov
fldenv
fcom
inc
fucomi
pop
mov
mov
sbb
pop
je
rolb
mov
fs
push
adc
cld
mov
inc
xor
xorb
mov
loop
cmc
jns
hlt
mov
or
push
mov
xor
imull
fs
jg
adc
nop
and
add
xchg
int
push
test
dec
xor
pushf
in
xchg
and
xor
addb
fadds
add
negb
and
insb
aam
sub
lock
and
aad
stos
test
xor
or
scas
leave
mov
bound
mov
inc
movsb
ror
testb
jl
add
aas
sub
inc
je
dec
xchg
push
pop
repz
stc
push
inc
lock
jnp
std
pop
cmp
aad
cmpsl
mov
mov
test
mov
scas
js
mov
mov
pop
xor
loop
std
lahf
xchg
daa
push
clc
adc
sbb
jns
frstor
xchg
lock
out
xchg
jle
mov
push
notl
imul
dec
dec
outsl
xchg
imul
js
and
or
jmp
das
jo
test
clc
or
stos
test
xchg
adc
aam
pop
pusha
mov
int
or
test
stos
push
mov
lea
movsb
cmp
push
mov
test
xadd
or
inc
pusha
push
loop
shll
push
shrb
stos
sbb
cmpb
adc
out
je
lods
pusha
popa
es
mov
ret
xlat
stos
adc
enter
std
cmc
sub
xor
mov
mov
and
add
imul
std
jo
pop
lcall
adc
cmpl
std
loop
dec
iret
mov
icebp
pop
mov
pop
xchg
sti
push
cli
xchg
mov
test
add
ljmp
xchg
dec
mov
sbb
cltd
xchg
leave
fisttpll
cmp
push
scas
ljmp
mov
jo
inc
mov
leave
push
lret
in
add
cmpsl
jbe
fistpll
push
pop
mov
cmp
adc
dec
mov
lds
mov
out
test
xchg
sub
xor
lcall
repnz
imul
icebp
lcall
and
fnstsw
aaa
decb
push
cmc
dec
pushf
cmp
or
sub
push
cwtl
sub
lret
lret
insb
call
icebp
dec
lock
or
cld
cbtw
insb
xor
shl
addr16
bound
lret
jmp
pushf
out
cwtl
gs
lret
fcomps
push
lods
repz
scas
aaa
sbb
je
pop
outsb
mov
movsl
sub
cwtl
mov
mov
dec
stos
sub
les
scas
cmc
mov
sub
push
shll
adc
sub
adc
dec
ret
std
scas
sti
imul
jmp
pop
hlt
jnp
mov
pop
loope
je
int
sbb
push
mov
jecxz
arpl
es
movsl
fwait
push
mov
and
pusha
or
jae
push
mov
adc
xchg
daa
jg
ret
nop
sub
mov
cmp
push
or
lods
js
mov
xchg
inc
sbb
mov
pop
pop
int3
and
pusha
imul
and
in
fldcw
add
mov
outsb
jg
ss
out
out
repz
push
xorb
jp
aam
add
sbb
cwtl
inc
std
fsubr
mov
mov
out
in
std
mov
les
and
aaa
mov
jo
arpl
leave
or
or
xchg
push
adc
cmc
lea
xor
fidivrl
imul
pop
mov
mov
mov
dec
je
nop
cld
stos
mov
mov
ds
pop
xchg
mov
jns
sbb
sbb
in
cld
push
cmp
stos
cltd
pop
mov
mov
scas
cmp
ss
add
hlt
leave
or
pop
popf
jnp
sbb
jle
aam
es
mov
stos
data16
dec
inc
push
in
add
lods
adc
popf
sub
dec
call
rclb
bound
sub
into
inc
pop
mov
negl
add
add
into
fisubl
push
adc
shlb
aas
pop
cltd
out
push
jb
push
adc
xchg
lods
add
lahf
fcmove
popf
push
push
xor
pop
outsb
xor
push
inc
in
repz
jl
push
adc
cs
xor
imul
add
fistl
or
int
cmp
seto
mov
repnz
cs
push
sbb
es
repz
inc
test
xchg
shll
in
mov
inc
out
and
add
sbb
lods
scas
fmuls
cld
and
push
je
pop
movsb
jle
aad
dec
xor
xchg
jmp
pop
roll
sub
mov
clc
or
and
enter
rorl
xor
mov
flds
lods
lret
pusha
push
fadds
lods
xchg
add
inc
mov
sub
aaa
es
mov
fldenv
mov
mov
jmp
call
out
imul
sub
imul
in
and
push
out
mov
xorb
enter
ret
push
scas
xchg
cld
xorl
gs
jl
loopne
daa
sub
gs
adc
add
movsb
sub
fisubrl
push
inc
pusha
movsb
enter
adc
pop
loopne
clc
xchg
lods
mov
xor
sbbl
mov
cli
test
cs
inc
mov
mov
pop
je
repnz
sbb
sahf
and
mov
sub
push
test
mov
data16
sahf
sbbl
iret
sbb
fistpll
fstpl
xor
push
adc
stc
in
sbb
jne
adc
data16
xor
dec
std
outsb
sub
int
ja
pop
xchg
xor
int3
cmc
jg
push
loop
push
insl
pop
leave
and
mov
lds
sub
or
mov
rcrb
iret
idivb
add
stos
jp
cwtl
xlat
sub
mov
add
push
mov
cwtl
sbb
sbb
cmp
mov
mov
pushf
out
orl
mov
push
jmp
push
addr16
xor
pusha
push
ss
adc
clc
or
mov
mov
roll
outsb
push
pop
cmp
movl
adc
insl
inc
or
fmuls
xlat
out
dec
je
sbb
cmp
cmc
jecxz
hlt
clc
ret
lea
mov
jo
cmp
aam
dec
or
rorb
and
clc
bound
xchg
iret
lods
jecxz
xchg
jo
cmp
scas
sub
mov
pushf
test
aam
std
pop
dec
xor
add
adc
hlt
repz
aam
add
imul
ja
pop
int3
addl
std
fdivrs
repz
push
mov
add
xchg
jl
lret
or
ljmp
xchg
or
push
insl
sub
jbe
enter
lcall
jle
xchg
movq
das
pop
repnz
addl
movsl
inc
sub
or
pop
sarb
and
mov
lret
shrl
scas
xchg
mov
push
rolb
icebp
jmp
orb
dec
add
aad
jnp
sti
xlat
lods
icebp
cmpsb
mov
xchg
lret
js
and
add
mov
xor
jbe
add
dec
adc
xchg
shll
sub
leave
xor
jns
cmc
and
push
cltd
leave
ljmp
inc
lret
popf
lcall
shll
add
jg
sub
fsubrl
lods
and
mov
add
jnp
and
je
sbb
dec
cmp
fsubrl
mov
cmp
or
pusha
push
jo
ret
cmp
orb
hlt
jmp
push
es
cmp
jl
out
push
leave
jb
fcmove
int3
aas
repz
test
inc
lea
gs
sbb
cmp
sahf
adc
mov
push
inc
into
pusha
mov
gs
inc
mov
popa
out
cmpsl
pop
repnz
jo
enter
cmpsb
xorl
fsubrl
pop
nop
shl
jl
enter
lods
cmovns
jne
shr
inc
cmp
add
and
leave
lret
out
sbbb
out
stos
outsl
insl
outsl
mov
jmp
mov
or
mov
es
add
cmp
xchg
adc
dec
pop
add
and
pop
sbb
test
xchg
mov
in
fldt
jmp
shll
aam
push
cmpl
mov
inc
jne
ret
lods
lahf
xor
in
push
mov
mov
push
xor
repnz
fistpll
out
pop
clc
push
cmp
or
mov
scas
jmp
add
or
jp
cmp
sbb
push
stos
es
jnp
pop
cmp
std
push
stc
out
fcomp
xor
mov
rcr
lcall
aaa
jb
mov
int3
mov
or
cli
sahf
std
mov
mov
xor
movsl
dec
out
aam
adc
jns
jmp
into
push
mov
lret
cs
fs
xchg
or
sub
xor
and
inc
sahf
ror
fs
fmull
mov
xchg
sub
jmp
or
dec
in
dec
sbb
rcrb
shrl
subb
add
cmp
lea
cmp
inc
les
mov
out
pop
and
add
push
inc
or
sti
pop
xchg
shlb
pop
add
jmp
inc
push
push
push
pop
pop
adc
jno
adc
out
cmpsl
addr16
out
sbb
or
xchg
test
out
stos
out
jmp
outsl
fcomip
gs
sbb
sbb
jbe
adc
aas
mov
add
cmp
xor
mov
orb
loope
and
push
xor
jns
inc
cld
jnp
arpl
push
ret
mov
enter
stc
mov
push
and
sbb
push
cltd
fidivrs
mov
daa
pop
inc
mov
or
aaa
dec
mov
and
xor
div
std
dec
xor
jp
nop
mov
pusha
mov
stos
enter
jb
pop
mov
push
xchg
and
mov
lahf
push
sarl
inc
imul
in
push
das
in
fisubs
mov
test
xchg
mov
mov
loope
ja
outsb
jns
xchg
in
sbb
test
fists
mov
mov
sbb
mov
pushf
pop
sub
andl
in
jp
cld
dec
xchg
add
cld
mov
xor
cltd
lods
mov
scas
mov
ds
repz
adcl
mov
inc
mov
stos
lds
xchg
pop
push
mov
sub
pop
negl
mov
cmp
and
dec
add
outsl
icebp
cs
imul
insl
test
into
xor
popa
lods
bound
jecxz
xchg
mov
icebp
rcl
jno
loope
mov
ficoms
sbb
daa
or
jmp
mov
repnz
xchg
and
adc
jnp
mov
cli
popa
testl
pop
out
jg
out
sbb
xor
repnz
push
push
movsb
shll
ds
movsb
popf
gs
push
push
sahf
aam
inc
xchg
adc
iret
xchg
pop
iret
imul
pop
mov
mov
dec
rclb
push
insl
negl
dec
push
gs
addl
or
stos
dec
mov
aam
cmpsb
pop
push
add
push
xchg
ret
andl
mov
test
cmp
and
cltd
jns
dec
movl
int3
ss
cwtl
mov
mov
and
std
popf
and
push
cs
jmp
xchg
testl
adcb
and
mov
ds
mov
lds
mov
mov
xchg
xchg
incb
inc
mov
sub
fwait
out
lock
add
dec
arpl
repz
cmp
adcl
insb
or
ret
inc
aas
mov
jle
bound
int
inc
and
add
scas
mov
pop
jecxz
pop
test
mov
loop
jbe
mov
xorl
xchg
or
and
xchg
adc
push
mov
dec
and
xor
pop
or
or
cmpl
inc
mov
xchg
arpl
sbb
sub
jo
cwtl
fildl
movsb
jo
pop
mov
pop
or
imul
repnz
scas
xchg
addb
dec
mov
push
mov
imul
and
pop
insl
test
push
mov
pop
into
outsb
jl
in
add
repnz
sarl
out
jne
mov
dec
jae
arpl
shrl
push
push
mov
jge
and
lahf
loop
icebp
pop
pop
jno
movsb
sub
inc
xlat
clc
icebp
pop
aad
stos
pushf
enterw
or
stos
cltd
outsb
addr16
sbb
cmpsb
gs
sub
lret
mov
or
pop
mov
hlt
mov
sub
shrb
inc
fstpt
cli
test
cmp
jns
pop
and
dec
sbb
shlb
enter
mov
es
rcrl
push
hlt
adc
decb
dec
push
lcall
test
test
ret
inc
into
negb
mov
shrb
test
cmpsl
movsb
jmp
icebp
xchg
pop
and
cs
sub
flds
xor
push
cmp
push
cld
inc
mov
js
lds
ret
cltd
mov
addb
lock
mov
sbb
adc
mov
inc
mov
and
hlt
jae
sarl
divl
test
mov
dec
xor
jnp
arpl
mov
stc
push
call
add
loope
add
xor
fwait
scas
xchg
shlb
adc
ja
mov
arpl
movsl
xor
out
ret
into
fisubl
pop
ret
outsl
dec
and
std
add
mov
jle
mov
xor
pop
add
insl
push
mov
dec
mov
aas
sbb
aad
push
lahf
inc
lods
lds
loope
mov
inc
mov
outsb
mov
push
push
mov
subb
mov
mov
test
cmp
and
pop
mov
push
fld
inc
movsb
cld
add
mov
cwtl
xor
cmp
pop
cmp
push
fdivrl
shll
mov
addr16
jle
fstpl
out
add
sub
in
das
int
mov
inc
fs
out
lret
mov
divl
push
movsl
mov
jl
inc
insl
notb
inc
sbb
lods
lods
aas
test
bound
stos
xor
mov
rclb
mov
lret
ds
and
cli
ss
sub
loopne
outsl
sbb
sahf
into
add
das
gs
loop
cmc
xchg
fsubl
ret
mov
addl
xchg
loopne
xchg
in
push
stos
cltd
lock
mov
into
int3
in
add
push
imul
xor
and
gs
pop
clc
xchg
scas
jno
adc
jg
scas
and
sbb
test
pushf
mov
pop
bound
lcall
xor
pop
imul
aam
lods
pop
cld
mov
ja
and
cld
pop
mov
stos
adc
mov
and
or
fucomp
repnz
xorb
insb
jp
pop
or
rolb
enter
test
add
push
dec
push
testl
mov
stos
xor
outsb
pop
loope
loope
push
mov
dec
mov
movsb
roll
jecxz
mov
mov
push
push
and
shlb
inc
pop
test
adc
les
push
pop
sbb
stos
sbb
aas
js
jbe
sbb
mov
push
scas
inc
add
mov
mov
xchg
enter
mov
aas
sbb
mov
add
adc
add
jo
lcall
outsb
lods
pop
sbb
jbe
jl
nop
cmc
jp
mull
stos
and
insb
mov
mov
pop
stos
adc
sbb
xchg
outsb
lea
shlb
or
xchg
roll
jecxz
push
stos
fwait
outsb
and
xchg
je
pop
popf
mov
shrl
push
cltd
mov
push
sarb
cli
lret
xor
push
mov
pop
pushf
mov
jns
leave
movb
cmp
adc
ret
lds
iret
push
jbe
idivl
arpl
dec
popf
inc
sub
mov
lock
mov
lods
add
or
xorb
sti
inc
imul
push
and
jns
mov
cmpsb
jmp
xchg
inc
insl
or
movsb
sahf
add
popf
xorl
shr
fsts
gs
add
int3
shlb
sub
test
sbb
adc
mov
jp
xchg
shl
jns
sbb
xchg
jbe
mov
sbb
enter
pop
push
dec
mov
in
sbb
lahf
lea
jae
mov
test
and
pop
jp
mov
mov
sub
fsubrp
cmpsl
mov
inc
jne
push
in
cmpsl
mov
add
mov
xchg
iret
test
loopne
cmpsb
cs
mov
sub
hlt
xchg
dec
adc
popf
fstp
jp
sbb
out
fmul
sub
jl
push
dec
roll
mov
fildll
inc
dec
xor
pop
stc
hlt
cmpsl
sub
pop
call
jle
movsb
sbb
and
xor
movsl
data16
xor
push
cmc
imul
shr
add
call
mov
mull
sarl
fmul
pop
in
loopne
call
pop
pop
das
lahf
add
icebp
cli
shlb
and
xchg
inc
cmpl
mov
pop
movsb
sti
je
shll
cmpsb
iret
xchg
mov
pop
dec
cld
je
dec
and
pop
test
or
dec
bound
test
inc
das
xor
ja
add
fldl
roll
pop
shrl
xor
ret
sahf
aam
and
leave
mov
adc
outsb
xchg
inc
push
test
mov
mov
xor
scas
iret
add
pop
adcb
xlat
out
jb
shrl
mov
pop
lahf
jl
sub
cld
jg
inc
sub
sbb
xor
xor
sub
inc
dec
ret
xchg
sbb
add
dec
adc
push
rol
mov
sub
cs
loop
in
or
loope
mov
mov
int3
aas
and
repz
mov
mov
mov
mov
arpl
pop
cmp
fisubrl
push
cmp
outsl
movsb
ljmp
sbb
lods
outsl
push
sbb
push
ret
imulb
inc
mov
test
and
scas
mov
xor
xor
jns
mov
cmp
push
xor
arpl
ss
xchg
addr16
pop
pop
rorl
out
jmp
fs
adc
jb
aaa
ss
mov
push
sub
imul
lods
push
push
xor
xchg
inc
sahf
out
daa
es
test
xor
mov
inc
inc
dec
sti
std
mov
cld
fdivs
pop
add
or
pop
or
inc
and
jecxz
mov
add
pop
mov
push
mov
fcmovbe
addr16
fnstenv
enter
dec
das
cmpsb
iret
xor
xchg
xchg
in
mov
sti
sti
iret
pop
lock
loope
xor
xchg
xchg
ss
movsb
imul
popf
mov
push
add
pop
and
pop
sbb
ss
in
outsb
shll
or
mov
scas
in
cs
cmp
pop
movb
pop
mov
jb,pn
cltd
push
mov
lds
pop
sub
lock
pop
xor
jmp
popf
leave
mov
in
mov
xor
popf
xchg
aaa
loopne
lahf
pop
fdivs
jecxz
inc
push
pop
dec
lahf
pop
xor
pop
pop
in
sti
fidivl
ret
in
stc
xor
push
push
stos
jbe
xor
mov
test
xlat
clc
leave
outsb
sarl
mov
xchg
mov
hlt
jns
jo
jne
jle
or
dec
xchg
or
insl
hlt
xchg
das
cltd
in
ljmp
jno
push
popa
sti
ds
lods
popf
xlat
sub
icebp
lret
and
xchg
mov
cmpsb
mov
pop
sti
xchg
xchg
test
in
cmp
pop
lods
jbe
cmp
fistl
repnz
fnstsw
push
xor
xchg
enter
imul
and
push
pop
pop
repnz
inc
filds
push
je
dec
inc
mov
in
ret
sbb
hlt
sub
int3
mov
sub
and
mov
xchg
add
roll
stc
mov
out
daa
sahf
daa
xor
outsb
pop
repnz
in
test
push
in
or
and
inc
mov
aas
lods
iret
mov
popa
pop
or
dec
cmp
jo
pop
pop
call
and
lahf
test
sub
xchg
jbe
mov
repnz
adc
dec
icebp
inc
or
test
add
mov
xchg
in
sub
frstor
in
ret
ret
addb
sarb
js
and
int3
and
dec
sti
testb
cmp
push
icebp
xchg
dec
mov
ds
and
cmp
aaa
cmp
insl
xor
popa
jecxz
xchg
fcmovnbe
sub
inc
xchg
mov
mov
mov
in
fisttpl
dec
out
repnz
mov
mov
incl
xor
and
test
cld
aad
dec
jle
mov
and
push
pop
sbb
push
repnz
int
xor
stc
cltd
cmp
dec
imull
mov
mov
out
jbe
int3
in
std
push
mov
dec
fadd
cwtl
push
mov
xchg
imul
pop
push
test
jb
les
ds
jmp
dec
sbb
mov
pop
inc
movsl
jns
mov
std
pop
rcrb
test
test
lods
cmp
jl
mov
lock
lret
in
xlat
aas
xchg
ja
push
xchg
iret
stos
push
in
dec
push
mov
jecxz
mov
js
push
add
xchg
mov
push
sbbb
mov
pushl
xor
jb
jns
scas
xchg
gs
into
and
pop
cs
dec
sti
outsl
mov
or
pop
cld
ret
movsl
xchg
add
ljmp
or
lock
mov
push
mov
sub
xchg
cltd
hlt
and
add
adc
fisttpll
fwait
mov
addr16
dec
scas
push
xchg
int3
loope
int
jne
push
loope
xchg
cmp
es
mov
arpl
cmp
pop
jb
pop
fcoms
xor
sbb
stos
push
les
rol
cltd
inc
adc
inc
inc
mov
loope,pn
pop
mov
inc
xchg
lcall
repnz
dec
icebp
xor
pop
pop
aas
sub
inc
cmpsl
dec
rclb
or
cwtl
aaa
jmp
jno
fucomip
movsb
pop
hlt
jge
xchg
imul
xchg
adc
roll
cmp
lods
pop
lods
lods
cmp
add
dec
lods
popf
sbb
jae
cmpsl
popa
sub
mov
xchg
and
loop
lods
push
xchg
mov
xchg
out
call
push
add
clc
roll
cmp
fnsave
dec
mov
filds
lcall
mov
mov
mov
xchg
xchg
add
mov
adc
xor
push
fstps
sbb
out
out
jle
adc
mov
cmpsl
xchg
inc
pusha
dec
dec
inc
xchg
lea
lcall
lcall
dec
dec
sbb
addb
jl
nop
rcll
bound
insb
mov
inc
loop
roll
outsb
xor
mulb
ss
fisubs
mov
mov
fldt
mov
call
jmp
or
loop
push
lock
mov
popf
ss
clc
jae
pop
dec
cld
fistl
cmp
hlt
inc
out
cmc
in
xchg
mov
mov
xchg
jbe
mov
sbb
fsts
pop
add
stos
popa
jge
popa
div
push
sarl
jnp
lcall
jne
jmp
mov
push
and
clc
and
pop
insl
das
cmpl
sbb
add
fdivrp
aaa
and
js
fld
inc
mov
lret
mov
lds
clc
fildl
rcrl
rorb
push
lea
scas
leave
int3
faddl
jg
outsl
sub
jne
xor
xchg
outsb
lods
ja
lods
dec
mov
xor
cmpb
inc
jle
ja
adc
packsswb
dec
imul
or
inc
setno
xchg
inc
mov
xchg
and
or
aad
and
mov
inc
jge
ljmp
jne
in
hlt
push
lock
stos
cld
clc
inc
in
test
loopne
sti
jbe,pn
pop
movsb
jno
lret
divl
dec
mov
popa
clc
movl
lds
pop
mov
sub
sub
mov
push
mov
mov
adc
adc
insl
mov
fiaddl
enter
sbb
sbb
popf
xchg
mov
pusha
repnz
rclb
push
push
jp
fs
sbb
pop
or
dec
lret
fwait
loop
shll
mov
iret
icebp
and
sbb
push
jno
jp
test
shlb
xor
movsbl
add
repz
xchg
sbb
cmp
dec
loopne
adc
push
aaa
insb
pop
or
scas
cli
jle
dec
lods
dec
mov
pop
es
xchg
sbb
pop
xor
lcall
push
mov
sub
pop
mov
aaa
jno
cmp
mov
out
mov
mov
sub
sub
and
mov
in
dec
fwait
inc
enter
mull
dec
out
test
adc
or
mov
loope
or
fisttpll
test
popf
xor
adc
inc
orb
je
jle
lret
jns
outsb
sbb
pushf
es
lods
jge
xchg
lcall
mov
cmpsb
and
out
repz
fs
mov
mov
es
or
mov
mov
or
xchg
inc
sarb
push
enter
jmp
dec
cmpsl
in
mov
cli
sti
pop
ret
mov
jno
rclb
enter
mov
sub
repnz
sti
jle
and
add
dec
sbb
in
and
aaa
and
popf
jg
test
cwtl
int3
add
cmp
mov
ljmp
mov
ljmp
xchg
fwait
in
in
jnp
rol
adc
inc
push
lcall
lcall
mov
xor
add
push
or
xor
pop
sub
sbb
movsb
es
out
add
int
adc
pusha
or
imul
in
lret
enter
je
je
loop
sub
mov
cmp
bound
insb
mov
mov
test
insb
xchg
loop
xchg
jae
mov
test
push
or
repz
jecxz
dec
ret
sub
les
call
sbb
mov
ficoml
loop
xchg
xor
mov
sar
fstpt
loop
std
gs
dec
mov
lock
add
addr16
pop
mov
and
rclb
and
popf
int
xchg
and
sub
sbb
sub
and
stos
pop
pop
mov
or
clc
dec
pop
mov
xacquire
movsb
inc
ret
imul
jns
aam
sub
jns
les
push
dec
stos
ljmp
mov
pop
lcall
ret
add
pop
mov
adc
dec
mov
jg
sbb
xchg
sbb
pop
mov
in
mov
divb
scas
push
arpl
call
mov
in
xor
ljmp
in
movsb
fwait
inc
pusha
repz
jbe
shll
test
pop
push
aas
mov
xor
popa
cld
adc
loopne
leave
arpl
push
sub
cmp
insb
scas
pushf
cs
mov
aad
jl
into
cmp
das
xchg
sub
sbbl
andb
xor
sbb
pop
in
xor
out
pop
sahf
les
fsubrl
mov
xchg
or
aas
sarl
adc
xor
popa
sar
xor
xchg
xor
es
ljmp
test
jno
pop
dec
and
stos
sbb
and
inc
insb
icebp
movsb
xor
outsb
jo
jge
cld
or
pop
mov
cmp
fstpt
pop
scas
movsl
pushf
fistl
push
push
jp
lret
add
mov
fimuls
mov
and
mov
push
js
cmp
jns
nop
shll
daa
shr
xchg
fisubs
mov
mov
fcoms
jmp
popf
jne
dec
mov
out
fstl
sbb
mov
jecxz
repz
xor
stc
scas
mov
out
xchg
cli
xor
addr16
pop
icebp
push
adc
adc
das
in
xor
jl
jns
mov
push
or
jmp
bound
inc
scas
ljmp
sub
xor
inc
push
outsl
xor
movsb
sub
sub
mov
mov
push
mov
clc
fdivrp
movsl
lock
xchg
fidivrs
add
xchg
sub
inc
fidivrl
mov
movsb
movsl
pop
cmp
inc
adc
cmpsl
inc
cs
xor
in
mov
lds
mov
pushf
xchg
mov
xchg
xor
jle
push
pop
adc
mov
aam
pusha
enter
mov
dec
std
jge
sti
push
ss
jecxz
inc
cmp
cld
mov
int3
std
jno
repnz
and
push
andb
xor
inc
aam
add
mov
jg
pop
mov
pusha
mov
mov
xor
inc
sub
add
gs
xchg
shl
push
lret
stc
xchg
push
sbb
sbb
fsubr
mov
in
pop
adc
les
mov
imul
scas
push
sbb
xorb
sti
xchg
xchg
cmpsb
js
outsb
je
daa
cmp
sub
and
xor
and
imul
dec
inc
dec
test
ds
les
cmp
call
lods
adc
mov
ret
jo
push
int3
mov
or
daa
xchg
rclb
je
inc
mov
dec
test
cltd
and
shlb
insl
mov
je
iret
dec
and
stos
cltd
pusha
xchg
icebp
aaa
cmpsb
scas
aas
sbb
pop
mov
push
pop
sbb
shlb
sub
sbb
sub
dec
cmpb
fistps
scas
inc
int3
mov
test
dec
hlt
aas
push
sub
and
shrb
jo
icebp
sbbb
gs
imul
scas
js
jbe
push
aas
pop
cmp
push
mov
sbb
mov
or
pop
xchg
movsl
sub
aad
jg
nop
push
mov
sub
int3
xor
cld
ja
xchg
dec
and
out
loope
out
test
in
add
repz
nop
scas
push
cmpsb
aad
sub
int3
jg
hlt
pop
push
loope
and
xor
sub
std
leave
adc
hlt
ret
imul
inc
mov
and
pop
fisubrs
icebp
add
cltd
pop
es
out
add
pop
push
cmp
test
mov
loop
cli
lret
cmp
sub
pop
dec
xor
sbb
push
pop
add
into
inc
test
pop
xchg
jge
addr16
cmp
pmuludq
xchg
sbb
xchg
lret
outsb
cmc
mov
add
int3
pop
shlb
inc
cmp
and
cld
dec
js
jmp
xchg
mov
xchg
stc
outsl
popf
mov
cli
int
aam
inc
and
mov
xchg
pop
dec
out
xchg
adc
test
inc
mov
movsl
dec
add
cmpsl
pop
xor
add
push
out
xor
cld
ljmp
jmp
ljmp
xor
repz
pop
mov
jno
lret
jmp
les
mov
cld
cmp
dec
loopne
dec
add
xchg
adc
and
pop
rorl
mov
and
pop
aaa
mov
adcl
cld
lcall
popa
jno
lret
jmp
add
and
add
scas
ja
scas
repnz
pop
cld
pop
lods
ljmp
aam
sbb
fnstcw
adc
push
jmp
pop
push
add
xchg
xchg
or
or
xchg
jp
sub
inc
les
inc
push
inc
fs
sub
stos
sti
xchg
into
dec
cltd
fcoml
gs
pop
bound
jo
pusha
push
iret
mov
fiaddl
mov
push
sbbl
sbb
and
fimuls
push
pop
popa
jle
jnp
orl
fstl
ja
les
mov
in
xchg
push
lods
popa
pop
push
test
mov
stos
and
int3
cmp
dec
pop
int3
or
push
nop
mov
gs
gs
loopne
jo
pop
push
jmp
mov
jnp
movsl
mov
jle
push
mov
jle
add
fs
out
add
add
je
jnp
insl
mov
cmp
and
aad
add
xor
cmpsl
bound
mov
or
mov
cmp
xor
pop
inc
lock
rep
push
loope
xor
or
faddp
push
ret
add
adcb
lcall
dec
xchg
mov
adc
push
mov
in
mov
sbb
divb
or
pop
ds
enter
mov
jnp
inc
divl
and
in
ret
and
imul
ror
inc
or
out
sahf
fsub
xchg
push
adc
dec
xchg
pop
ljmp
inc
loopne
mov
or
aad
ret
dec
in
lret
jecxz
cmp
popf
inc
sahf
paddb
mov
push
jecxz
les
cmpsb
pop
jl
pop
mov
adc
notl
fidivs
pusha
mov
xchg
push
popf
pop
js
pusha
clc
clc
jb
xchg
jl
inc
out
sti
push
add
les
dec
adc
mov
jp
or
xchg
mov
pushf
mov
stos
and
scas
ds
lret
in
jmp
outsl
pop
cmp
mov
sub
inc
push
cltd
or
sbb
popf
js
cmp
test
inc
jge
cmp
test
js
adc
mov
sub
mov
and
outsb
xor
shlb
std
loop
pop
and
ret
in
fisubrs
jbe
xchg
add
pop
pop
adc
mov
or
mov
insl
xchg
ds
mov
inc
mov
jecxz
js
sub
in
adc
pop
dec
mov
adc
xor
movsl
mov
sub
cmc
jno
mov
test
cmc
ret
in
loopne
mov
ret
testl
pop
test
add
jne
xchg
movsb
cmpl
xor
jp
stc
cmc
jnp
iret
call
mov
push
add
push
push
out
int3
aad
mov
jl
aas
pop
inc
or
push
add
sbb
jno
out
aas
fimuls
pop
daa
mov
mov
jl
inc
xchg
xchg
and
mov
push
pop
icebp
pop
sbb
xor
dec
or
adc
or
scas
movsb
lock
jle
sbbl
add
mov
testb
ret
cmc
loopne
sbb
test
imull
pop
outsl
jecxz
mov
je
sbb
ret
add
loop
fidivrl
add
bound
mov
aaa
inc
mov
cmpsl
xor
xchg
push
push
jmp
dec
and
idivb
jno
adcl
push
jecxz
sbb
loope
pop
int
sbb
inc
dec
mov
dec
push
pop
fidivl
test
test
bound
lods
ret
scas
push
adc
test
rcrb
mull
and
int3
daa
lea
sbb
add
dec
add
lcall
mov
ret
jne
push
jns
add
stos
jns
imul
nop
mov
inc
shll
iret
add
mov
dec
dec
dec
or
cmp
jns
inc
mov
inc
rorb
inc
push
mov
notb
fistpll
or
lret
xor
adc
aad
mov
mov
addl
icebp
mov
xor
out
inc
sub
add
cmc
lcall
and
nop
mov
dec
xchg
pop
xor
test
sub
jecxz
push
jbe
imul
aam
jne
sbb
mov
jp
add
pop
addb
xchg
pusha
and
cmp
jno
and
imul
bound
ret
pop
mov
mov
add
rcr
out
push
and
mov
mov
xchg
cmp
testb
loopne
sbb
xlat
mov
imul
pop
push
pop
fcmovu
test
add
out
dec
xchg
add
insl
ds
aad
repnz
jl
loop
inc
mov
jbe
aam
push
ret
cmpsl
adc
lret
dec
ficoml
and
jl
jge
movsl
lea
cmp
xchg
imul
lret
mov
stos
push
push
out
jae
push
mov
loopne
ds
sbb
xchg
jb
inc
sbb
mov
push
mov
addr16
fidivl
insb
shl
sub
aaa
out
mov
sub
dec
aad
jl,pn
enter
iret
arpl
movsl
js
fistpl
sub
inc
mov
bound
negl
mov
icebp
lods
stc
sbb
jnp
mov
pop
jmp
inc
outsl
cmp
orl
xor
lret
insl
inc
dec
in
mov
and
adc
xchg
scas
pop
in
mov
outsb
mov
test
lret
inc
add
and
mov
adcb
push
bound
cmp
cmpsl
outsl
fnsave
nop
mov
cmp
mov
leave
pushf
std
movsb
testl
stos
jne
sub
ret
mov
mov
lods
adc
mov
test
stc
fdivl
stc
mov
and
pop
int3
stc
and
call
jae
mov
mov
fs
in
cli
mov
dec
cmpsl
jne
mov
add
xor
movsb
out
aad
adc
push
ljmp
mov
jae
mov
ja
and
outsb
in
and
sbb
loop
pusha
jne
int
dec
jbe
pop
and
popf
das
cmp
in
adc
mov
negl
and
hlt
ss
int
fmul
adc
inc
pop
inc
push
test
push
xor
imul
stos
sbb
mov
pop
sbb
mov
bound
movsl
push
in
sbb
jecxz
dec
pop
adc
adc
adc
fisubl
xor
lds
cmc
mov
popa
and
fstl
xorb
lock
cmpsl
test
popa
add
aas
inc
fistpl
push
addr16
repz
test
test
loop
jecxz
jl
xchg
inc
clc
mov
mov
jp
xchg
fwait
sbb
out
jl
dec
fdivr
stos
jbe
lods
mov
aad
fistps
pop
pop
mov
sub
xchg
jl
adc
sub
icebp
jmp
hlt
gs
mov
les
pop
mov
into
push
stos
clc
addr16
mov
js
mov
adc
jp
mov
pop
cmp
pop
scas
pop
mov
and
imul
xlat
lcall
lcall
cld
pop
xchg
sub
cld
es
popf
jnp
mov
out
subl
psubusb
pusha
rorl
or
aas
inc
out
sarb
testl
inc
sahf
aaa
jp,pn
mov
leave
or
pop
lods
xchg
or
andl
mov
test
lds
stos
and
rol
aaa
push
inc
fwait
cmpsl
mov
outsl
iret
sub
test
gs
add
in
xchg
cmp
mov
cmc
fstpl
push
push
cmp
xchg
pop
iret
cmp
xor
mov
call
and
aam
xorb
aaa
addr16
int
arpl
jecxz
outsb
mov
xchg
dec
pop
xor
mov
inc
mov
mov
fildll
sbb
js
xchg
sbb
sahf
nop
jle
push
and
test
sbb
pop
ret
cmp
pop
bound
mov
outsl
shl
fimull
lret
add
fs
inc
push
xor
cmp
push
xlat
and
push
imul
in
add
add
dec
push
pop
mov
mov
aam
movsb
out
out
mov
inc
lret
inc
adc
jo
dec
sarl
fwait
xchg
dec
push
loop
pop
enter
mov
test
cmp
sub
xlat
xchg
popf
jb
and
int
sti
inc
shl
rolb
jmp
clc
outsb
push
push
jnp
cmp
scas
aad
mul
push
pop
cltd
mov
into
leave
jnp
into
into
mov
test
pop
insb
or
push
loop
pop
ss
dec
cld
push
repz
mov
je
cmp
mov
jg
push
je
adc
das
fstpt
stc
or
pushf
push
cli
dec
clc
xor
dec
mov
cwtl
or
repnz
xchg
cmc
pop
adc
xchg
rol
sub
or
jg
sub
and
or
lods
shll
mov
sahf
xchg
outsl
or
sub
cld
ret
pop
push
ss
mov
xchg
js
push
movsb
les
sbb
rcl
rcr
packssdw
imul
push
rcrb
data16
jne
data16
testb
in
data16
jecxz
aas
popf
out
mov
xor
movq
dec
repz
iret
shrb
cmp
inc
rcrl
mov
push
sti
outsb
je
ss
lea
test
aas
loopne
ss
movsb
bound
push
mov
pop
stos
mov
add
call
inc
mov
cmpsl
call
jmp
lcall
pop
pop
inc
add
les
sub
jmp
jmp
jnp
jbe
mov
push
out
xchg
mov
cs
xchg
je
fcomip
sub
outsl
sti
xchg
lods
jl
xor
sbb
adc
mov
mov
sarl
test
scas
cmp
rcrb
jg
dec
push
cmp
rcrl
rcl
stos
mov
je
imull
inc
mov
jo
in
sub
cltd
jle
std
sub
push
jb
jmp
dec
subl
stos
xchg
int3
or
and
addr16
mov
cld
and
dec
test
dec
mov
xor
sbb
pop
mov
scas
lahf
pusha
cli
scas
jno
mov
ficompl
test
adc
dec
add
icebp
lea
jnp
cmpsb
into
adc
pop
mov
push
xor
sbb
repnz
cmpsb
popf
xlat
shll
mov
mov
loopne
ja
cli
dec
aam
or
popa
fucomip
hlt
lock
js
pop
cwtl
xor
mov
adc
inc
xchg
adc
inc
subb
adc
push
pop
insl
js
push
movsl
andl
ret
jae
pop
nop
shll
xor
xor
xor
cmp
stc
or
gs
adc
lods
dec
adc
dec
std
imul
xor
call
add
mov
xlat
ljmp
shlb
add
xor
push
inc
gs
push
push
xor
cld
add
das
push
mov
or
nop
cmp
lods
out
push
cmpb
clc
mov
jle
mov
into
aaa
xchg
pop
test
cwtl
pop
sub
or
in
add
mov
insb
jg
add
mov
addr16
scas
sub
and
rcl
jecxz
fcomip
sub
adc
adc
dec
jo
mov
push
shlb
stc
icebp
je
into
das
and
dec
xchg
xor
std
mov
mov
adc
inc
mov
scas
pop
hlt
inc
ljmp
adc
inc
outsb
jae
into
rcl
jo
push
dec
push
rcll
test
daa
and
cmpsb
in
push
stc
mov
mov
push
push
fwait
mov
lds
pop
enter
imul
sbb
inc
pop
ret
outsb
imul
jns
cmp
insb
andl
xor
in
loop
mov
sbb
sahf
rclb
lcall
jae
mov
xchg
sub
hlt
xchg
outsl
fcoml
mov
dec
fcomip
out
aaa
mov
push
or
in
xchg
mov
orb
jb
sbb
cmp
sub
push
aam
add
xor
push
addr16
gs
in
jnp
fnstcw
inc
dec
push
mov
bound
test
xor
dec
sub
push
cwtl
pop
mov
testb
add
mov
adc
sub
inc
loopne
mov
enter
outsb
in
mov
add
adc
stos
mov
pop
sbb
mov
popa
mov
push
std
jg
enter
push
subb
adc
in
pop
or
mov
xor
cli
lods
xchg
xchg
mov
jecxz
jmp
push
sub
test
jp
fidivrl
inc
push
sbb
lcall
pop
test
in
arpl
fcmovu
insb
outsb
bound
sub
mov
clc
loope
fstpt
jbe
pop
jne
mov
outsb
push
or
icebp
push
inc
mov
inc
push
add
mov
sahf
icebp
bound
bound
movsl
jb
sub
test
xchg
xchg
xor
xchg
push
jno
pop
or
xor
fdivrp
add
xchg
or
aam
mov
inc
out
lret
add
adc
fisttps
packsswb
sbb
add
lods
outsl
aas
pop
pop
shll
mov
pop
stc
cmpsb
repnz
imul
mov
mov
fwait
movsl
jb
mov
negb
mov
jmp
cltd
jbe
insl
xchg
jecxz
inc
jnp
arpl
dec
xor
call
xor
mov
push
mov
pop
pushf
enter
ret
pop
clc
adc
cmp
sub
shlb
adc
vmaxsd
loopne
sbb
pop
icebp
leave
xor
cmp
data16
cmp
xchg
cmp
adc
jmp
in
loopne
fisttps
pop
xchg
jb
mov
inc
nop
jno
sub
test
xor
push
test
mov
inc
cmp
and
add
loopne
inc
or
adc
mulb
pop
leave
inc
dec
add
mov
leave
mov
jnp
sahf
sub
in
sbb
fst
les
cmc
stos
jne
inc
stos
dec
inc
jl
add
jbe
into
adc
pop
dec
or
dec
sbb
sub
pop
arpl
mov
push
cmpb
test
mov
inc
jecxz
or
cmp
nop
into
mov
jp
es
mov
adc
mov
add
jnp
scas
into
jae
lahf
mov
dec
add
xchg
es
out
cmp
inc
jle
push
mov
push
je
add
shrl
in
mov
inc
adc
pop
imul
cmp
jp
cmp
dec
mov
jnp
aas
leave
pop
add
pop
aam
cmp
nop
xchg
popa
and
push
aad
test
dec
movsb
fisubl
push
cmp
cmc
int3
cmpsb
cltd
mov
hlt
inc
adc
xchg
aas
xchg
mov
and
mov
fmul
imul
push
push
pop
mov
ret
gs
imul
pop
pushf
mov
cmp
lea
lcall
fisttpll
mov
testb
out
xor
imul
icebp
lcall
mov
fcomip
jl
popf
jmp
mov
dec
xor
shll
ljmp
cwtl
and
imul
das
fldl
imul
adc
adc
test
cltd
cmc
push
cmpsb
push
cmc
ret
sbb
mov
sbb
popw
adc
je
cmpsl
rcrl
imul
push
pop
lock
arpl
mov
xor
je
jmp
mov
push
and
sbb
jle
add
lock
and
adc
dec
outsl
mov
dec
fwait
xchg
scas
ret
push
mov
imul
cmp
mov
out
movsb
sub
and
xor
iret
test
mov
xchg
call
jmp
dec
lea
adc
xchg
stos
jg
push
lret
loope
and
adc
push
in
fdivr
cmp
test
hlt
aaa
std
mov
xchg
xor
jb
or
enter
stos
mov
mov
lret
dec
sub
adc
jb
jae
sbb
cmpsl
mov
bound
sub
and
xchg
xor
scas
movsb
aaa
mov
lret
faddl
mov
ffreep
imul
xor
icebp
in
jg
cmp
xchg
jecxz
insb
push
js
sbb
fistpll
add
ljmp
pop
mov
popf
lds
add
jae
in
mov
xlat
mov
dec
or
dec
xor
aas
loopne
jnp
cmp
roll
lods
and
fildll
xchg
push
lods
leave
lahf
sub
and
xchg
hlt
xchg
or
adc
mov
hlt
test
jl
int3
lods
jns
pop
lock
pop
jns
jge
dec
mov
mov
push
mov
adc
cwtl
jae
sahf
and
xchg
sub
fists
popf
jecxz
das
mov
fmuls
jmp
decb
adc
lea
test
sbb
mov
dec
pop
inc
push
jl
int
sbb
mov
add
leave
aad
or
xor
xor
mov
shlb
push
out
stos
jp
and
dec
add
mov
movsl
neg
pop
lds
push
xchg
xor
fidivl
mov
jg
pop
push
pop
leave
jmp
arpl
out
pop
mov
inc
test
cpuid
mov
fbstp
fbstp
fwait
inc
xchg
inc
mov
js
mov
dec
fsubrs
ret
mov
push
push
test
imulb
mov
pushf
jno
lock
lahf
and
aaa
mov
adcb
jnp
mov
jns
shrb
insl
pop
sub
ja
rcrb
ljmp
jmp
mov
mov
inc
adc
sbb
jbe
and
mov
xor
dec
int3
adc
push
sbb
enter
xor
dec
inc
loopne
mov
mov
and
jecxz
enter
xchg
fadds
cli
dec
loopne
std
or
fwait
stc
pop
insb
add
push
xor
pop
cmp
xchg
sbbl
clc
sbb
pop
or
repz
ret
sub
sub
insl
adc
push
dec
mov
xor
hlt
jnp
jns
push
lret
sub
cli
icebp
imul
ret
sti
sub
mov
cmp
push
in
jle
and
mov
adc
fmull
lcall
fisttpl
mov
loope
xor
lahf
iret
xchg
xor
cmp
call
and
jne
mov
cmp
adc
scas
xlat
fsub
mov
mov
sarb
jg
adc
les
add
popa
cld
and
sbb
insl
jg
out
mov
lret
inc
push
jne
inc
out
jge
mov
push
xor
imul
push
xchg
cmp
mov
cltd
add
jp
int
adc
dec
out
movsb
mov
mov
add
rcl
dec
jno
mov
fisubl
repz
fs
scas
mov
adc
in
aas
stos
test
out
xchg
sbb
in
test
fs
lock
jb
lret
fisubs
mov
push
adcl
lret
addl
stos
sub
push
icebp
mov
pop
sub
xchg
fsubrs
rcr
aad
and
and
outsb
pushf
cmpsl
inc
dec
dec
jno
int3
ja
adc
out
sub
adcl
jmp
scas
cmp
sbb
adc
pop
mov
fwait
lods
cmp
movsl
push
cmp
mov
ljmp
mov
sbb
xchg
push
sub
cmp
repz
pop
lret
sbb
leave
push
enterw
lret
mov
cli
popf
fmull
add
push
leave
add
shrl
mov
mov
jno
iret
mov
and
jbe
sbb
dec
movsl
pop
xlat
shlb
mov
test
insl
sbb
mov
mov
scas
int
pop
js
rol
jne
inc
lcall
sub
mov
mov
in
dec
adc
ds
ja
aad
js
ds
mov
sbb
mov
arpl
addr16
outsb
inc
ficoms
jle
insl
ss
stc
test
je
mov
push
loopne
pop
cmp
jno
test
int
push
repz
dec
outsb
adc
mov
repz
shl
pop
pop
testl
or
nop
jle
dec
cmpsb
push
or
aas
ljmp
mov
jle
fcomps
push
test
push
popa
popa
push
sbb
lock
adc
jb
cmp
cmp
add
fsub
or
cld
mov
jmp
mov
bound
aas
loopne
in
aam
or
neg
push
sbb
popa
out
mov
pop
push
in
mov
cmpsb
push
lock
cmpsb
jbe
cmp
jp
insl
adc
mov
mov
pusha
adc
xchg
loop
lods
and
in
inc
cmp
xchg
and
mov
lods
sub
in
mov
push
mov
out
adc
or
mov
imul
xchg
adc
sbb
cli
fcmovb
sbb
in
sbb
repz
cmp
sbb
gs
mov
push
call
and
mov
adc
xchg
mov
mov
popa
lock
jb
push
test
or
movsl
rcrb
cmp
cltd
rcll
pusha
sub
add
pinsrw
pushl
inc
xchg
sub
xchg
sarl
out
or
xchg
ljmp
xchg
mov
jbe
mov
scas
les
or
cli
mov
cld
cmc
jne
pop
or
jne
xchg
and
dec
aas
lods
ret
icebp
xor
add
mov
jecxz
aad
fs
mov
push
cmpsl
in
add
and
mov
negb
xlat
imul
hlt
imul
inc
cmp
int3
jne
and
mov
bound
hlt
xchg
adc
lret
fcoml
hlt
dec
push
addr16
sbb
sub
sti
inc
fs
or
dec
cwtl
movsb
dec
int
clc
mov
adc
xchg
mull
out
stc
sub
dec
ja
mov
sbb
insl
dec
fld
in
in
stos
loope
test
hlt
jns
scas
imulb
sub
int
out
cmp
dec
dec
dec
fcmovu
or
aad
sbb
sub
mov
js
or
fldt
xchg
mov
cmpl
jg
cmp
inc
push
mov
movsl
mov
aas
scas
mov
data16
rcrl
dec
daa
bound
cmp
das
inc
inc
ficoml
fimuls
fisttpl
iret
xchg
mov
adc
clc
fiaddl
mov
loopne
push
pop
xchg
mov
int3
xchg
in
mov
scas
daa
int
or
inc
scas
push
jmp
inc
in
pushf
push
xchg
mov
xor
and
in
subl
jle
hlt
hlt
pop
push
add
das
jb
lahf
jge
ficompl
lods
mov
sub
xchg
adc
jno
xchg
sub
jecxz
je
xor
jl
adc
add
bound
repnz
xor
xor
cmpsl
jnp
cmpsl
int3
lret
das
shlb
jge
pop
fisubs
jns
push
inc
test
scas
xorb
mov
dec
mov
inc
xorl
sbb
cmp
mov
mov
repnz
lret
cmp
pop
sahf
sub
jno
rcrb
addl
or
insb
je
add
aaa
nop
dec
int
pop
es
adc
jp
jo
mov
ss
fcomp
pop
push
cld
cld
sub
pop
jb
xchg
sbbb
or
pop
loopne
in
jo
popa
mov
adc
mov
cmovne
mov
fnstenv
daa
arpl
pop
das
push
sub
clc
xchg
idivb
add
mov
les
mov
fistpll
enter
cs
lahf
stc
cmpsb
xchg
cmc
roll
xchg
andl
xor
lds
repnz
mov
adcb
xchg
adc
push
fs
imul
in
mov
test
aam
out
fdivl
adc
or
mov
inc
sbb
cmpl
jmp
mov
gs
js
cmpsl
sbb
adcl
mov
ret
xor
inc
push
xor
pop
clc
jb
sarb
dec
push
xchg
lea
sarl
push
ljmp
xor
xchg
xor
rcrl
inc
out
popa
or
aaa
pop
dec
add
lock
call
push
mov
call
ja
cmpsl
add
adc
loopne
add
int
mov
add
and
movsl
push
dec
and
fcompl
adc
jo
push
mov
xchg
mov
ljmp
xchg
loop
test
ja
sbb
and
sbb
sub
push
sti
ds
les
in
cld
jmp
adc
aas
inc
or
jmp
repz
test
outsl
xor
rcrb
aas
scas
shrb
mov
cltd
rcl
dec
data16
xadd
cmp
add
pop
loop
in
ret
mov
movsl
enter
mov
das
pop
orl
insb
push
jmp
leave
push
pop
rclb
jnp
mov
xchg
mov
stos
adc
xor
aaa
mov
mov
dec
fidivrl
test
sahf
jecxz
notb
sbb
lcall
out
sub
jmp
loop
iret
nop
mov
mov
cs
enter
xchg
jg
aas
clc
xor
lea
xchg
imul
or
mov
mov
and
mov
ss
cmp
dec
in
dec
test
jg
xchg
push
xchg
dec
dec
sahf
cmc
mov
imull
ljmp
mov
cmp
or
sub
mov
hlt
mov
mov
or
insb
lret
je
jmp
push
xor
fwait
mov
mov
pusha
sbb
sbb
adc
push
mov
mov
cmp
sub
pop
jo
in
cwtl
hlt
nop
aam
stc
mov
shrl
mov
icebp
rorl
and
ficoml
iret
icebp
pop
lock
iret
mov
fcom
mov
adc
ds
test
fnstsw
inc
data16
sti
stos
jge
sbb
addr16
repnz
scas
js
lcall
jmp
mull
mov
jecxz
jle
xchg
je
pop
out
cmp
sbb
movsb
out
in
xchg
sahf
push
push
xlat
pop
cmp
iret
sbb
mov
ja
sub
aad
push
cli
in
aam
sbb
push
mov
mov
mov
mov
ret
outsl
mov
daa
inc
lcall
sbb
adc
cli
outsb
mov
test
cld
iret
jb
mulb
push
out
mov
xchg
scas
fnstenv
inc
or
subl
mov
push
lds
jno
neg
pop
cltd
or
out
pop
and
repnz
mov
push
mov
nop
mov
xchg
in
adc
cmp
push
cli
push
test
sub
pop
cmp
shrl
adc
call
pusha
inc
mov
jl
adc
xor
xchg
sub
jbe
pop
aad
cmpsb
fcomip
push
mov
sub
mov
and
out
inc
pop
dec
push
sar
pop
pop
int
inc
sub
outsb
inc
daa
add
out
in
mov
cmp
cmp
fdivrl
mov
xchg
adc
in
cwtl
and
inc
cmpps
xor
sub
dec
data16
mov
sbb
fidivl
xor
xchg
and
rorl
in
inc
dec
enter
jno
bound
push
scas
and
xor
dec
in
popf
and
insl
dec
mov
or
cmp
stos
dec
and
std
dec
cs
nop
lahf
dec
xchg
stc
test
leave
inc
lods
scas
dec
xor
dec
fnstcw
push
pusha
lds
mov
pop
push
fcmovnb
jmp
les
enter
fcmovnbe
fiadds
lea
cld
cmp
les
mov
mov
into
imul
or
push
imul
iret
scas
xchg
cli
scas
pop
xchg
stos
cmp
addr16
or
test
pop
mov
sub
mov
dec
jns
fs
inc
fsts
sub
mov
cld
mov
repz
call
xchg
ljmp
rcll
lret
jge
cmp
popf
mov
imul
adc
and
or
sub
popa
loop
imul
mov
add
pop
mov
xor
mulb
xlat
mov
adc
xor
mov
lods
enter
mov
inc
lret
jb
loopne
ret
test
inc
std
enter
or
xor
ds
mov
test
pop
bound
aad
jl
fisubrl
sbb
xor
ss
fmul
mov
jmp
cs
lock
hlt
jae
sbb
jg
adc
mov
pop
add
mov
add
xchg
lret
push
sub
add
dec
fsubrs
xlat
or
mov
das
loope
pop
xor
andl
shll
bound
pop
shr
pushf
hlt
sti
js
repnz
mov
stos
xor
or
leave
icebp
leave
mov
ljmp
in
and
cmp
cmp
dec
xchg
test
sar
pop
andl
mov
imul
loopne
xchg
mov
test
outsl
and
test
nop
cmp
aad
inc
push
in
xchg
add
push
and
jge
xor
into
dec
in
ljmpw
push
nop
lahf
insb
and
mov
mov
orl
xchg
outsl
jle
inc
cmc
sahf
cwtl
out
xchg
ljmp
and
jecxz
mov
xor
xchg
sbb
sbb
loope
mov
inc
add
imul
je
shlb
gs
dec
ss
mov
cmp
jg
cmp
pop
or
jbe
mov
xlat
out
inc
mul
inc
jge
xchg
not
dec
xchg
imul
popa
jle
sub
call
dec
cmp
dec
and
cld
aad
aad
repz
clc
inc
sub
xchg
sub
mov
je
pop
inc
mov
rcr
jle
sbb
sub
ljmp
leave
cmpsb
push
or
mov
jb
fs
xchg
es
lock
je
pusha
mov
add
into
sbb
in
in
wrmsr
arpl
loopne
cli
and
movsb
jecxz
adc
mov
lret
in
out
sbb
imul
je
jecxz
mov
or
cltd
inc
dec
arpl
mov
mov
decb
repnz
and
inc
lahf
imul
cmp
or
or
or
nop
xchg
nop
or
cmp
sbb
int
imul
shlb
stos
ja
test
mov
outsl
andb
clc
in
dec
and
xchg
mov
or
xor
mov
fwait
add
sbbb
int3
cmpsb
jnp
lea
sbb
in
pminsw
adc
or
bound
or
icebp
jnp
out
in
jecxz
stos
xchg
mov
adc
push
mov
pop
jbe
fwait
mov
cmp
xchg
cmp
mov
push
push
jp
push
push
inc
cmp
in
fs
mov
mov
cmp
int
clc
cmp
jle
divb
and
jg
jge
sahf
std
adc
sub
fdivs
jp
fimull
insb
popa
jmp
insb
pop
cltd
jl
mov
xchg
push
and
addr16
inc
pop
inc
sbb
cmp
jo
out
inc
push
and
dec
sbb
pop
push
push
mov
lahf
mov
or
iret
call
out
rolb
sbb
inc
lret
sub
test
call
fwait
xchg
in
lock
inc
fcmovu
out
popf
jno
xchg
ljmp
mov
in
or
js
jb
pop
int
fildl
mov
jle
mov
lock
dec
push
mov
mov
sar
sarb
stc
jecxz
leave
cld
sbb
and
xchg
mov
sub
xor
add
cld
roll
js
cs
and
movsb
pushl
lret
mov
mov
pop
jae,pn
loop
pop
test
jns
pusha
jmp
adc
cmp
sub
lahf
cltd
shl
out
cld
cmp
cmpsb
ret
inc
sbb
fdivs
pop
adc
and
cmp
mov
jmp
pusha
mov
sub
cltd
push
adc
xchg
bswap
aad
icebp
add
jno
inc
test
mov
repz
lret
popa
lods
xorl
out
pop
jno
add
cmp
pop
mov
fiaddl
sbb
and
mov
or
xchg
jb
cmpsl
fildll
out
imul
stc
mov
cs
outsb
insl
sahf
sbb
and
adc
pop
push
repz
mov
aaa
dec
xor
mov
icebp
popf
lcall
and
xchg
mov
out
mov
scas
bt
mov
jl
sub
in
adcb
sahf
rcrl
xchg
dec
cmp
pop
jns
ljmp
jp
mov
mov
push
jmp
and
iret
inc
jnp
jne
movsl
cmp
arpl
xchg
xor
call
push
stos
fistpl
jg
in
or
jbe
icebp
adc
jecxz
dec
sar
inc
push
adc
adc
loopne
mov
adc
dec
mov
imull
cmp
xchg
xor
movsl
mov
test
mov
sub
xchg
scas
or
icebp
inc
rcrb
sbb
push
and
iret
adc
push
bound
loope
cli
addl
dec
cmc
std
xor
stos
andb
pop
mov
mov
sbb
movsl
jecxz
mov
fdivs
fsubs
pushf
fwait
sbb
mov
mov
subl
push
dec
push
enter
adc
adc
mov
adc
lahf
jmp
outsl
push
mov
adc
mov
lods
loope
bound
js
mov
clc
test
sbb
jecxz
jb
xlat
xor
lea
cmp
cmp
mov
sub
mov
in
mov
mov
mov
xchg
fldenv
das
mov
xor
mov
pop
notb
into
dec
jle
cmpsb
scas
xchg
cli
add
jecxz
fbstp
push
cmp
cmc
je
cmp
fsts
pop
out
sahf
aas
mov
mov
xor
sub
fimull
mov
lods
mov
inc
sti
cmp
out
jmp
jge
mov
cmp
jae
imul
xchg
pop
outsb
sti
arpl
pop
push
outsb
cltd
movl
lods
andb
mov
jns
xor
decl
mov
scas
mov
js
adc
std
mov
imul
mov
bound
shrb
or
out
insl
loopne
add
fsubp
scas
lea
movsl
mov
sbbb
sub
rcr
add
scas
fwait
icebp
sub
repz
arpl
addr16
repz
inc
mov
adc
mov
sarb
sbb
push
sub
pop
sbb
xlat
adc
or
and
jle
movsb
mov
jp
or
mov
shlb
pop
and
jnp
inc
fdivr
cmc
jb
sbb
stos
adc
mov
adc
icebp
push
leave
push
pop
adc
bound
clc
cmc
mov
ficompl
mov
loope
pop
out
adc
insl
add
mov
aas
xchg
mov
or
and
in
repnz
movsl
fs
xchg
push
mov
xor
decb
nop
and
call
fdivrp
push
stos
cld
mov
js
stos
mov
fcomi
push
mov
and
ret
sbb
je
jmp
xlat
jmp
push
xor
das
push
mov
jo
mov
cmp
les
insl
pop
jae
mov
push
iret
jp
aam
clc
aas
and
sub
jle
js
out
add
pop
addr16
push
sub
sub
dec
fs
cwtl
in
lahf
data16
pop
cmp
push
sahf
fisttps
fwait
jae
sub
popa
fwait
pop
adc
xlat
in
int3
mov
jne
mov
test
out
mov
jnp
orb
arpl
bound
xchg
subl
cmp
pop
arpl
in
xchg
lret
dec
inc
mov
in
push
or
or
dec
out
cmp
mov
fwait
add
xchg
cmp
mov
mov
mov
push
stos
fwait
loope
lods
mov
dec
xchg
dec
stc
jbe
pop
xor
pop
sbb
xchg
movsl
mov
push
mov
and
mov
xchg
dec
rcr
xchg
rorb
and
or
aad
add
cmp
mov
pop
das
inc
cmp
aas
test
cmp
mov
xor
jns
xor
or
xchg
leave
dec
jge
adc
inc
xchg
lods
cmpsb
jg
pop
push
xchg
call
popa
inc
ds
clc
fstps
pusha
mov
test
cltd
sub
xor
stos
mov
insb
xorb
outsb
mov
cmc
gs
xor
cmpl
cmpsl
sub
add
in
aam
push
loopne
fistl
push
add
fldcw
imul
into
add
push
sbb
xor
loop
mov
jmp
mov
mov
add
xchg
pop
ret
shrb
pusha
mov
cwtl
les
xchg
or
out
popa
add
ljmp
inc
js
dec
xor
jg
ficomps
cs
ds
out
add
xor
add
pop
outsl
pop
test
mov
repnz
mov
sub
call
cmpsl
xlat
push
cltd
aas
fwait
in
lock
cmpsl
dec
movsb
push
push
pop
xchg
pop
sbb
inc
jl
and
inc
add
xchg
push
cltd
dec
push
aad
out
in
popa
mov
ds
sbb
xchg
mov
mov
stc
out
mov
jo
push
enter
pushf
scas
leave
mov
lds
inc
rcll
out
add
or
or
push
pop
jns
mov
fcmovnb
popf
sub
or
cmp
xchg
outsl
leave
pop
mov
daa
movlps
and
add
sbb
fst
add
inc
push
ss
andl
xchg
test
dec
shll
cmp
outsb
divl
mov
pop
add
pusha
orb
ss
mov
cmpsb
pop
push
fists
mov
outsb
mov
dec
push
xchg
leave
sbb
and
jnp
test
pusha
mov
scas
push
mov
shl
cmp
and
jg
xchg
gs
xorb
fwait
aas
pop
jb
fmuls
andb
mov
sub
popa
sti
push
jno
mov
add
scas
test
inc
shl
add
and
fmull
or
std
or
or
jl
sbb
insb
sub
mov
mov
pop
hlt
loopne
fidivl
scas
pop
addr16
cmp
add
cmp
mov
push
and
pushf
ret
sub
pop
jne
jns
loope
add
xchg
sti
inc
jecxz
imul
imul
inc
push
xor
or
fdivl
out
in
orb
aaa
mov
sbb
popa
in
je
addr16
stc
jns
jmp
icebp
add
or
aam
rorb
jmp
insb
cmp
shl
mov
pop
test
sbb
fnstsw
mov
jb
jb
jbe
lret
pusha
and
stos
fildll
outsb
jo
ror
jns
aaa
add
outsl
ficoms
xor
dec
adcl
jnp
xchg
add
les
or
cmp
jno
loop
jnp
mov
popa
fwait
and
pop
xor
leave
inc
cmp
enter
mov
xor
pop
fisttps
adc
push
shll
fcmove
mov
jbe
jecxz
dec
dec
fstpt
jne
test
xor
cmpsb
adcl
movsl
mov
inc
sbb
outsl
lock
imul
mov
add
push
sbb
mov
pop
mov
inc
cmp
in
sbb
imul
mov
push
test
jbe
cs
mov
insb
test
hlt
shlb
out
leave
movsl
shl
je
into
movsl
mov
sub
out
mov
das
test
mov
add
enter
jo
dec
mov
in
fwait
dec
add
in
test
sbb
or
fnstcw
sbb
lods
mov
scas
push
push
scas
lret
push
mov
xor
inc
das
shrb
push
std
inc
mov
jp
cmp
out
pop
in
movsb
sub
cwtl
jns
ds
icebp
addb
decl
cwtl
add
or
sbb
pop
adcb
in
cmp
fldenv
mov
movsb
pop
into
fwait
sub
or
mov
dec
test
mov
into
call
out
jmp
int
and
jp
sub
xor
push
xor
test
fmull
bound
into
into
popa
add
jle
repz
push
leave
lahf
jl
push
sahf
es
xlat
test
fwait
and
cmpsb
xchg
das
bound
ljmp
test
xchg
and
adc
lods
xchg
lret
mov
adc
nop
xor
xorl
out
mov
lret
hlt
pop
xor
mov
ss
in
std
stos
pop
rorl
lds
and
cli
icebp
xor
cli
andb
dec
xchg
or
add
xchg
adc
xchg
dec
rcll
out
mov
dec
ljmp
loopne
jb
aas
or
pop
mov
cltd
fbstp
lret
xchg
scas
jne
pop
adc
push
jecxz
nop
push
mov
jno
js
push
inc
nop
cltd
push
xchg
add
fldenv
xchg
jbe
popf
mov
xorb
mov
std
or
in
pusha
ret
ljmp
sub
push
cmp
dec
jae
lods
cld
dec
in
loop
and
ds
mov
mov
std
imul
pusha
outsb
pop
mov
cmp
enter
pusha
jnp
push
mov
fwait
fs
and
roll
out
bound
xor
sbb
in
mov
pop
enter
into
push
arpl
in
or
xchg
out
pop
pusha
mov
mov
xchg
mov
pop
js
iret
jbe
xchg
push
jmp
mov
pop
cmp
sbb
pusha
cmp
jae
mov
pop
jno
mov
cwtl
ss
loope
jae
popl
daa
mov
enter
jb
inc
jge
mov
popf
aad
in
enter
andl
movlhps
adc
or
lcall
out
nop
adc
ret
xchg
fstpt
and
out
or
sbb
sbb
jp
ds
mov
sub
andb
gs
dec
mov
ret
inc
jle
rol
pop
outsl
ljmp
sbb
cs
or
adc
cs
daa
jns
repz
inc
jmp
cmp
fsts
adc
inc
hlt
xlat
push
adc
cmp
aas
leave
inc
cmp
je
adc
cld
inc
add
fistl
inc
inc
adc
loop
pop
cld
cmp
rolb
add
movsl
sub
sub
sub
cmp
or
push
jle
ret
test
sbb
es
xchg
or
mov
inc
mov
mov
dec
ja
test
push
mov
pop
push
push
stos
pusha
pop
add
or
ficompl
out
dec
push
and
push
mov
lahf
xor
add
mov
pop
enter
fisubs
sbb
mov
fs
stc
cmp
xor
mov
sti
fwait
mov
imul
movsb
rolb
std
das
mov
jnp
roll
jno
lods
lcall
dec
test
push
xchg
mov
subl
pop
fisubl
popa
out
sub
sub
mov
mov
popa
xchg
push
jns
jp
xchg
mov
lods
aad
addr16
jge
inc
xchg
out
lods
xor
in
rcr
lret
mov
inc
into
jbe
ret
cwtl
frstor
data16
call
fcoms
imul
or
sub
inc
mov
rcll
cmp
sbb
movsb
dec
data16
arpl
push
cwtl
incl
icebp
cld
sub
outsl
in
or
mov
mov
xchg
sbb
inc
clc
or
repz
out
loope
jecxz
jg
fwait
push
pop
aad
pusha
lea
scas
pop
sti
idiv
test
cmp
add
addr16
imul
filds
cli
loopne
rcrb
ljmp
push
loope
inc
sti
inc
je
jp
jbe
imul
es
ret
call
dec
lret
mov
adc
pop
test
mov
cmp
fdivrl
xchg
in
mov
imul
out
pop
inc
mov
js
rorl
xor
int3
jne
and
cmpsl
cmp
ja
ljmp
mov
push
add
ret
add
pop
gs
addr16
fcmovnbe
ds
cmp
notb
repz
and
mov
gs
mov
popa
cmp
or
push
inc
or
mov
jp
mov
push
lds
jo
xchg
cwtl
jae
add
xchg
ds
lods
pop
les
push
sbb
xchg
sub
mov
je
adc
xor
ss
xchg
inc
xchg
pushf
repz
mov
lret
rol
movsl
and
loope
cwtl
inc
aaa
xor
mov
ror
push
sbb
mov
dec
add
test
cwtl
lock
jp
loope
fists
sbb
and
mov
pop
mov
dec
stos
inc
test
push
mov
xor
test
sbb
rcll
push
arpl
andb
mov
into
hlt
or
sbb
push
adc
rcll
int3
pop
jmp
xchg
jne
dec
pushf
fstps
ss
gs
push
xchg
push
dec
push
or
scas
scas
ss
xor
mov
repnz
ds
sub
dec
ror
adc
jne
repz
adc
imul
mov
clc
sub
xchg
push
sbb
test
js
and
add
mov
push
or
sub
xor
andl
nop
jae
cmp
mov
mov
mov
les
jno
aam
sub
cltd
jb
push
sub
pop
in
nop
mov
push
push
mov
in
ja
pusha
loopne
dec
shlb
sub
add
ljmp
xor
pop
out
mov
adc
dec
dec
loopne
inc
add
fildll
mov
jae
lahf
cmp
ret
inc
pop
adc
out
cwtl
popf
jo
psrad
sub
inc
inc
add
xchg
push
test
fcmovbe
lret
mov
lods
test
mov
mov
mov
or
lock
and
dec
mov
lahf
test
or
or
and
inc
cmp
xlat
mov
pop
jl
dec
out
pop
insl
les
pop
insb
fdivr
xor
sti
mov
cmp
cmp
dec
add
sub
insl
sbb
mov
or
fiaddl
lahf
sahf
mov
inc
cmp
xor
ret
insb
xor
lret
loopne
gs
cld
sub
popf
daa
add
subb
dec
das
xor
mov
mov
add
repnz
ds
and
xor
add
es
sub
test
icebp
aas
movsl
movsb
fs
jge
fsub
lret
sub
pop
scas
push
daa
push
xlat
test
or
xor
add
enter
sbb
mov
sahf
jns
je
arpl
cmp
cld
test
push
bound
in
jg
add
mov
mov
popa
fistl
jg
sbb
les
pop
adc
cmpl
mov
push
jae
sub
mov
and
mov
mov
and
mov
pop
ret
and
stc
popa
sub
mov
adc
or
aad
xor
mov
push
mov
jb
push
xor
pop
lcall
shrb
call
xchg
insl
sti
mov
ja
mov
sub
pushf
mov
call
das
add
xor
out
inc
or
enter
mov
mov
sub
repz
push
mov
or
cmp
dec
adc
out
popf
test
ljmp
cli
mov
adc
jecxz
aaa
enter
ret
test
outsb
fimuls
jg
pop
loope
call
dec
push
and
pushf
leave
sahf
movsb
xchg
stos
xchg
pop
jbe
popf
pop
push
cmp
mov
cmp
aam
xchg
scas
loope
addb
push
pop
fdivs
pop
sarl
andb
xor
sbb
mov
jns
mov
clc
aaa
icebp
jge
or
cmp
sub
sbb
xchg
and
mov
fcomip
bound
scas
jnp
and
sub
neg
and
dec
enter
aam
add
lahf
or
stos
mov
xchg
xchg
fisttps
rcrb
xchg
pop
outsl
ret
xlat
inc
xor
in
xor
inc
xchg
inc
pop
push
das
xchg
bound
sahf
sub
out
mov
xorl
cltd
and
adc
cmpb
es
mov
sub
or
push
stos
pop
push
mov
aad
es
rcll
hlt
add
push
sub
in
sbb
sbb
xor
pop
pop
in
inc
rcrl
mov
les
lcall
enter
dec
js
mov
xchg
idivb
adc
adc
or
fwait
jns
out
lods
out
aad
dec
leave
insl
xor
mov
adc
add
and
add
xor
or
xor
imul
pop
jp
jae
fsts
dec
jp
xchg
enter
mov
cmp
jg
or
jmp
popa
outsb
aaa
pop
std
push
decb
add
push
jl
pop
and
arpl
mov
mov
push
sbb
push
xor
jnp
mov
xchg
ret
xorl
pop
pop
ljmp
push
lds
nop
push
adcb
mov
and
inc
fists
dec
negl
sbb
jo
stos
sbb
or
jle
out
push
rol
int
scas
cmp
aas
jg
stc
jo
fwait
sbb
enter
dec
push
int3
leave
bound
mov
dec
xor
mov
insb
push
xchg
mov
inc
dec
out
jmp
out
leave
lret
mov
shlb
shl
adc
scas
scas
pop
sbb
call
pop
push
nop
ja
jns
in
adc
mov
out
push
test
loope
dec
mov
or
es
cmp
test
pop
mov
loopne
dec
jbe
lds
loope
jns
imul
jmp
and
mov
jbe
das
pop
sub
mov
in
fnsave
ja
adc
int
mov
sti
sti
mov
inc
or
dec
sarb
pop
jo
cmp
jbe
push
xorb
aam
jle
mov
mov
cmp
in
lea
sbb
inc
sub
lock
xor
js
pop
in
pop
fidivrl
into
mov
cmp
sub
scas
mov
push
lret
and
sbb
push
lret
subl
xor
in
clc
lahf
mov
xor
pusha
mov
and
jle
sarb
popa
sbb
aam
cmovne
pusha
push
mov
loope
xor
arpl
mov
xchg
popa
or
pushf
stc
in
addr16
add
adc
sub
rcrl
in
jecxz
and
sbb
sbb
pop
pop
inc
sbb
clc
push
lock
mov
sub
insb
xor
sub
mov
mov
inc
arpl
adc
ret
inc
sbb
lahf
clc
ret
jne
into
ss
sbb
dec
fidivrs
adc
arpl
push
pusha
out
mov
addr16
insb
scas
rcrb
enter
xchg
enter
and
xchg
adc
repz
push
mov
imul
and
out
mov
and
add
and
inc
adc
ja
ret
lods
js
pop
into
in
out
enter
mov
notb
je
in
fsubrs
jle
lahf
movsb
test
xchg
call
orl
mov
outsl
shr
scas
nop
cli
xor
or
incb
ficoml
outsb
inc
dec
sub
ss
enter
pop
pop
mov
loope
insl
inc
aad
js
lods
inc
push
nop
imul
dec
dec
lods
pop
iret
add
out
fsubl
sbb
cmp
pop
fldlg2
mov
into
fsubrl
dec
scas
aam
repnz
mov
in
jmp
xchg
cli
or
xchg
add
rcrl
or
icebp
std
mov
xchg
mov
enter
rorb
dec
cs
imul
lahf
xchg
addl
or
push
filds
sbb
test
sub
int
xchg
movsl
inc
sarl
pop
into
shrl
ficoms
lods
cltd
ret
aam
hlt
stos
movsb
pop
xlat
push
xorb
jg
test
dec
lock
jne
nop
mov
and
pop
xchg
or
lahf
mov
fdivs
or
neg
inc
jae
xchg
bound
mov
ret
or
call
je
imul
xchg
sti
pop
push
lret
jp
cmp
mov
popl
popa
mov
mov
xor
xor
popf
pop
pop
pop
mov
dec
into
in
ja
mov
and
loop
gs
rcrb
jmp
push
roll
rcll
push
fdivr
stos
add
pop
jmp
test
cmpsl
pop
es
cli
call
and
into
mov
out
inc
outsb
adc
xchg
pushf
loop
lcall
scas
mov
cmp
push
shlb
xchg
mov
inc
ds
test
or
add
in
loope
scas
pop
push
sbb
cltd
sbb
aad
pop
fadds
loopne
sbb
in
mov
ret
pop
lods
mov
add
adc
cs
mov
pop
cmpsl
inc
mov
sarb
sbb
jo
lcall
jb
int3
pcmpeqw
push
into
xor
cmp
jg
pop
fwait
mov
xchg
add
xchg
out
fwait
mov
ds
xor
sub
int
pop
mov
push
cmp
mov
jne
push
gs
xor
clc
or
jge
mov
pop
xchg
ss
sbb
popl
dec
pop
lock
in
inc
fldcw
mov
add
adc
insb
mov
fistps
xchg
adc
ret
arpl
cwtl
mov
add
jmp
test
mov
cmc
push
mov
ja
fisttps
pop
sarl
sub
mov
imul
lret
fsubl
clc
push
lea
stos
fnstsw
pop
hlt
pop
add
fcmovne
in
sti
cmpl
mov
mov
sub
sub
and
xchg
mov
stos
les
int
ljmpw
fbstp
rcrb
jp
scas
sub
or
push
cmp
add
lret
scas
stc
mov
fdivl
into
xchg
arpl
adc
inc
xchg
mov
js
lock
shl
add
push
ret
push
mov
xchg
xchg
cmc
ss
jnp
add
stos
ret
xor
jle
sbb
mov
and
movsl
cmc
js
jnp
or
ss
mov
cmpsb
in
mov
aas
jbe
cltd
test
or
push
adc
shl
jnp
dec
data16
xchg
jecxz
mov
frstor
fisubrl
fwait
shl
into
pop
popf
stc
out
lods
xchg
nop
mov
add
stos
test
test
lds
pop
mov
jne
add
dec
lret
ja
mov
pop
rcl
jbe
and
outsb
dec
orl
xchg
cmpsb
push
movsl
xchg
insb
adc
pop
dec
aad
inc
ljmp
ljmp
xchg
mov
ja
inc
push
cmp
enter
mov
jo
pop
nop
mov
insl
std
les
and
xchg
xchg
add
jo
or
loop
xchg
mov
dec
jae
scas
add
in
inc
add
mov
push
clc
sbb
mov
mov
pop
xor
push
scas
lock
push
inc
out
mov
aaa
adc
mov
pop
xlat
roll
mov
mov
clc
add
jle
push
test
jle
xchg
mov
aaa
cmp
ffree
add
or
loopne
nop
dec
in
insb
in
cwtl
fldcw
inc
pop
cmpsb
push
aas
jo
lret
in
aaa
adc
adc
jg
or
cld
add
push
lret
and
lret
repnz
mov
sbb
adc
stos
jns
arpl
lret
mov
xor
lods
adc
inc
push
add
cmp
jb
push
test
subl
dec
pop
test
std
cmp
push
sbb
jle
dec
mov
sbb
dec
dec
jae
jmp
sarb
lahf
jge
insb
dec
inc
aaa
lret
loop
mov
sbb
test
or
mov
loop
popf
in
xchg
inc
movaps
mov
mov
arpl
popf
cmp
icebp
dec
jmp
mov
bound
loopne
xchg
repnz
pop
movsl
dec
sub
mov
dec
lret
xchg
fcmovu
cmpsl
test
pop
pop
push
mov
bswap
jnp
dec
aaa
push
and
sub
fistpl
adc
test
dec
xchg
dec
mov
sbb
add
ljmp
in
rolb
fdivp
push
dec
push
jl
mov
cli
rcrl
jg
inc
mov
shrl
mov
or
out
mov
adc
xor
sub
jae
push
scas
pop
mov
xlat
xchg
mov
cmovb
pop
jl
fcmovne
pop
or
rorl
jno
imul
mov
outsl
and
push
nop
inc
cmp
repz
adc
xor
lret
sub
ljmp
leave
arpl
jge
clc
hlt
frstor
lfs
fldl
int3
or
mov
inc
pop
nop
inc
xlat
or
nop
cli
out
das
push
daa
or
repnz
fdivp
xchg
ret
fdivs
pop
fidivl
insl
into
test
js
fcoms
mov
pop
mov
push
mov
adc
fwait
sbb
sbb
out
popf
jnp
xor
call
lahf
push
ja
fxch
cld
cmpl
les
pop
cltd
mov
ss
mov
inc
je
jl
fwait
xor
dec
imul
dec
test
cld
lock
mov
inc
adc
dec
shrl
jle
fldenv
aad
jge
mov
fcom
mov
shlb
fdivrp
pop
ljmp
or
popf
dec
out
push
roll
jp
scas
mov
adc
jmp
subb
push
pop
movsl
mov
stc
dec
repnz
sub
mov
fincstp
mov
cs
push
mov
ja
shrl
push
jno
sbb
dec
or
div
mov
iret
jge
push
and
mov
push
xor
mov
inc
divb
jb
lods
push
aaa
ret
mov
into
out
stos
cltd
mov
xlat
push
xchg
ds
cwtl
inc
adc
inc
mov
mov
bound
dec
div
dec
inc
pop
lods
cmp
movsl
dec
jmp
mov
dec
mov
subb
es
mov
call
push
cwtl
stos
pop
ds
cld
mov
sarb
push
mov
add
cmp
adc
imul
ljmp
or
cmp
push
mov
mov
int3
sarb
sbb
mov
loop
sbb
mov
pop
lahf
cmpsb
xchg
jle
hlt
js
mov
inc
lahf
notl
lea
or
push
sti
aaa
sbb
mov
adc
cltd
cwtl
das
es
loop
mov
pop
sarb
fnsave
out
xor
dec
add
pushf
scas
mov
push
xchg
pop
sub
ljmp
icebp
mov
jbe
in
in
jae
pop
jnp
ficomps
data16
or
xchg
out
arpl
call
inc
and
adc
or
aad
mov
cmpsb
cli
dec
cmp
push
nop
stos
fucomp
mov
insl
add
mov
out
mov
nop
icebp
test
jno
enter
movsl
cwtl
test
or
arpl
fstps
fisubrs
inc
std
pop
shrb
cmp
and
aaa
mov
xchg
leave
call
popf
pop
xchg
rcrl
repz
jo
mov
cmp
leave
push
mov
cmp
pop
mov
jne
je
xchg
fsubr
mov
jg
mov
into
sbb
fldl2t
jne
pop
xchg
stc
jo
jnp
and
pop
xchg
jnp
lds
or
into
adc
cld
jae
loope
mov
xchg
and
repz
addb
fcmovnb
push
push
cmp
lahf
xor
cli
movsl
xor
repz
cli
repnz
stos
mov
int
adc
pop
inc
ret
jg
inc
rcl
leave
std
sbb
mov
mov
pop
inc
lcall
fs
pop
mov
add
lock
adc
popf
ljmp
sbbl
xor
mov
sbb
dec
and
sub
lret
cs
cltd
push
jnp
sub
loop
adc
pop
mov
jne
mov
std
inc
cmp
push
inc
sub
inc
or
or
pop
jmp
push
adc
xchg
int
movsb
sub
sbb
cld
insl
inc
and
add
xlat
stc
adc
fs
lock
jb
pop
ss
pop
adc
test
out
jecxz
mov
sbb
ds
outsb
das
fst
call
sub
xorl
jbe
sarb
pop
fiaddl
repz
sbbl
and
xchg
loope
gs
dec
std
xchg
push
mov
das
push
sbb
add
mov
xchg
and
hlt
cmpsl
loop
or
flds
xor
pop
ja
inc
and
stc
xor
inc
xchg
dec
mov
cli
lcall
add
es
addr16
mov
dec
ljmp
jb
sbb
mov
fldl
xchg
mov
mov
insl
mov
and
dec
shrl
or
nop
in
bound
xchg
test
xchg
cmc
add
js
inc
in
jmp
repz
fisubl
pop
es
push
aad
adc
jb
stc
jle
sti
stc
xchg
stc
push
adc
jo
mov
ficompl
xor
repz
jp
in
cmp
sbb
sbb
in
lret
cld
iret
jbe
jp
push
es
pop
movsl
into
xchg
arpl
push
jmp
sbb
xchg
sbb
jl
or
jb
adc
repz
jnp
pushf
mov
xor
push
inc
dec
mov
scas
rcrb
push
push
cmp
stc
bnd
mov
test
cmp
push
test
stos
nop
mov
js
xor
mov
mov
xlat
repnz
lds
lret
xchg
adc
scas
mov
xchg
xor
fistl
dec
out
into
xchg
adc
mov
sbb
or
ds
mov
rclb
stos
push
mov
enter
mov
dec
add
jecxz
subb
cs
push
mov
jp
xorl
dec
dec
mov
xchg
mov
in
lock
dec
hlt
mov
mov
out
push
sbb
push
addb
jb
push
and
xor
les
lods
inc
test
loope
out
enter
or
jmp
iret
mov
jne
mov
sbb
gs
and
popf
dec
outsb
call
cld
scas
push
lcall
addr16
lds
or
stos
daa
lret
dec
dec
dec
inc
add
sub
in
shll
aam
outsl
sbb
push
dec
mov
loope
adc
xchg
xor
lahf
jecxz
jns
push
xor
jecxz
cwtl
jb
fsubl
push
fldt
add
and
rorl
aam
out
and
cmp
cmp
lods
test
enter
mov
cwtl
sub
outsl
jnp
pusha
ljmp
test
int3
roll
popa
or
movsl
push
daa
jb
gs
pop
fistpll
fiaddl
sarb
mov
fistps
cmp
in
inc
int
shr
pop
cs
dec
addr16
mov
ljmp
sbb
pop
add
sub
sub
shll
inc
inc
and
cmpsb
pop
aam
xchg
inc
jno
or
and
sub
cld
mov
ds
fwait
sub
inc
std
inc
lds
xor
outsl
out
inc
sbb
xlat
repz
test
sub
inc
jl
add
xchg
bound
decl
cmp
dec
push
adc
cmp
adc
aaa
sti
sub
shrl
movsb
arpl
outsl
mov
mov
xor
push
adc
repz
jno
pop
je
nop
sbb
addr16
test
iret
sbb
mov
int
into
mov
jge
and
push
adc
mov
mov
push
and
cmp
outsb
xor
mov
das
cmpsl
mov
sub
movsb
push
inc
stc
and
and
sub
dec
jg
adc
adc
mov
jmp
jl
fadds
mov
cmp
xor
lea
fmuls
out
shr
xchg
xor
cmp
mov
sbb
inc
in
add
add
mov
aad
mov
pop
jb
xchg
lea
inc
outsl
mov
mov
dec
subl
inc
jecxz
stos
repnz
out
in
xor
outsb
mov
jmp
push
scas
or
jecxz
dec
cmp
lds
dec
mov
into
std
shll
push
mov
daa
hlt
jnp
sub
imul
or
rcll
ret
sub
adc
scas
mov
aam
sub
mov
sarl
cmpsl
int3
pop
inc
xlat
arpl
jp
or
cmp
test
xor
orl
ficompl
and
das
es
inc
push
popa
mov
and
cmp
mov
inc
mov
gs
fstl
mov
imul
stc
into
push
inc
sti
inc
adc
jb
mov
dec
mov
jne
dec
jbe
lret
lret
sub
enter
sub
ljmp
jb
repz
xor
inc
imulb
sbb
dec
lret
outsb
jnp
jbe
and
or
sti
ds
cmp
cltd
aad
outsb
xchg
sub
dec
mov
lock
loope
xor
inc
lods
mov
mov
jb
inc
xor
mov
push
xor
push
cmp
mov
push
and
je
call
movnti
pop
fidivrl
sub
arpl
or
add
mov
add
fistl
or
daa
int
xchg
cli
outsl
movsl
out
pop
sub
data16
int
cltd
lods
lock
adc
sbb
loopne
dec
jbe
sbb
shlb
pop
inc
jno
scas
pop
mov
fidivl
insl
pop
cmp
dec
in
fsubr
pop
sub
clc
pop
lea
sub
dec
add
ja
fnstcw
dec
fcmove
adc
push
scas
add
int3
xchg
xchg
add
and
scas
rcrb
sahf
mov
jns
cltd
inc
pop
insl
xchg
cwtl
int3
ret
sbb
sbb
dec
push
cli
bound
loopne
jbe
imul
add
push
push
out
or
iret
loopne
sub
xor
jmp
pop
idivl
jnp
sbbl
mov
addb
scas
fcmovne
leave
imul
push
rcrl
xor
popl
fsts
enter
arpl
cmp
mov
js
pop
xchg
int
cmp
cmp
out
sbbb
add
and
inc
lock
jbe
daa
push
sbb
adc
pop
jne
xor
sub
push
xchg
jl
cmc
inc
dec
cwtl
pop
aam
mov
lret
imull
stos
xchg
in
sub
sub
roll
mov
push
mov
in
cmp
std
push
lret
shlb
aad
cs
int3
adcl
test
repnz
sahf
dec
popa
xchg
mov
sbb
fcoml
or
insl
or
les
addr16
pop
xchg
cmp
loope
inc
mov
pushf
xchg
mov
jne
pop
stc
aas
xor
mov
cmpsl
insb
data16
xor
or
or
in
adc
test
jno
xor
sbb
xchg
cli
gs
mull
insl
js
cmp
jecxz
scas
loope
ljmp
fsubl
dec
inc
jne
sbb
loope
mov
test
inc
push
test
sarb
movsl
sub
sub
lds
or
sub
push
jbe
jne
cmp
jle
ss
insb
mov
movsb
out
mov
add
add
arpl
and
xchg
fiadds
xlat
test
push
and
pop
or
ja
and
lea
mov
rorl
bound
jnp
jg
inc
imul
ss
mov
xchg
dec
sbb
clc
aam
test
sub
xchg
inc
and
shl
movsb
dec
repnz
fxch
loope
gs
ljmp
inc
push
jo
loope
adc
pop
jne
sub
out
inc
pushf
scas
mov
shrl
clc
jg
faddl
jb
and
call
adc
sbb
xor
cmc
mov
dec
pushf
gs
mov
xchg
xchg
sbb
adc
icebp
add
xchg
stc
fimull
adcb
mov
and
jg
aad
adc
sub
stos
pop
push
dec
add
mov
or
popa
pushf
call
xchg
sbb
gs
push
rcrb
sbbl
add
push
aas
jo
popa
push
mov
ffreep
sub
aas
cmp
out
sti
mov
cltd
mov
lret
fdivrl
ljmp
mov
push
mov
and
outsb
jb
jmp
rolb
stc
xchg
int
iret
jae
or
mov
xor
pop
xlat
mov
sub
gs
xlat
lret
int
jle
loopne
jne
mov
xor
loope
subl
js
scas
mov
jo
aas
cmp
jmp
and
jmp
pop
sbb
divb
jmp
stos
out
int
mov
cmpsl
jns
xchg
inc
cld
mov
mov
int
dec
call
xor
dec
push
sahf
addr16
lcall
aad
push
push
stos
or
cmp
mov
dec
dec
std
cmp
or
icebp
pusha
sahf
sub
movsb
mov
ds
mov
adc
clc
rol
hlt
shrl
popf
into
and
jmp
icebp
sarb
pop
mov
sti
xchg
sub
push
sub
cmp
aad
loopne
push
mov
movsb
push
sbb
cmpl
jp
jb
lcall
jle
and
cmp
addr16
jmp
int3
sbb
xchg
sub
jns
repnz
inc
inc
jmp
lret
mov
fsts
jle
or
cmpsb
movb
jmp
sbb
out
jnp
inc
shlb
outsb
sub
xchg
std
addr16
cmpsw
in
fwait
dec
int
mov
pop
fisubrl
imull
push
push
aad
hlt
add
pop
jbe
mov
pop
cmp
fldl
mov
xor
adc
mov
dec
add
xchg
add
outsb
fidivrs
fwait
push
imul
pushl
or
ljmp
aam
add
pop
inc
mov
and
popf
in
inc
pop
sbb
je
add
outsb
cmp
rclb
fcoms
getsec
xchg
or
movsl
and
aas
les
jmp
ja
int
je
ret
call
pop
fidivs
jo
lahf
jl
sbb
jecxz
adc
test
sahf
xchg
hlt
rorb
lea
mov
push
sti
mov
ret
xchg
mov
fcomip
mov
cmpsl
jge
in
and
jle
or
stc
push
cmp
or
lahf
flds
and
popa
xchg
aam
aas
dec
testl
mov
jp
mov
pop
imul
js
fwait
movsl
or
pop
mov
shlb
jmp
sarl
clc
movsl
movsb
ret
cmp
sub
fwait
mov
sbb
sbb
inc
idivl
aad
scas
jmp
rolb
scas
pop
jo
aam
xor
imul
cmp
adc
lods
jne
testl
push
aad
fs
sbb
test
mov
mov
mov
add
dec
repnz
pusha
sbb
stos
out
movsb
dec
push
jecxz
sarb
add
imul
cmp
lret
mov
movsb
push
clc
xor
cmp
jl
sub
nop
dec
clc
out
ljmp
sbb
ret
scas
lahf
and
test
fmuls
stos
push
cmp
subl
mov
pop
cmc
fmuls
push
jb
mov
sub
sub
mov
iret
mov
shrl
shl
xchg
mov
cmp
push
pop
mov
fisubrl
jl
mov
cmovs
push
sub
sbb
xor
ret
mov
lret
aad
sub
and
add
data16
nop
push
fs
mov
out
cs
xlat
inc
fcmove
cmpsl
in
lret
data16
adc
and
cmp
mov
je
push
xchg
addr16
aas
pop
dec
and
fcmovnu
dec
shrb
inc
in
mov
je
cltd
shll
int
cli
jbe
movsl
dec
aas
jne
or
pop
sbb
mov
push
adc
popa
divb
repz
inc
in
or
xorb
push
mov
dec
jns
pop
cmpsl
faddp
aam
xor
and
inc
xor
add
clc
ret
push
sub
shlb
stc
mov
aam
xor
lods
leave
repnz
cmc
xor
mov
xchg
ds
inc
mov
dec
loope
add
mov
addr16
jns
je
mov
jne
scas
dec
data16
cli
bound
and
or
cmp
leave
mov
sbb
dec
cltd
jno
dec
insb
out
scas
nop
sub
push
xchg
adc
adc
sahf
insl
stos
inc
push
arpl
movsb
push
and
adc
inc
ljmp
jo
leave
shrl
lret
jg
xchg
dec
push
or
mov
js
jbe
push
pop
fldenv
fisubrs
cmc
ja
mov
out
push
fnstsw
adc
xor
lods
cmc
sub
xor
pop
insb
lret
mov
and
adc
imul
adcl
jae
sbb
xchg
xchg
in
mov
dec
je
incb
mov
mov
add
shlb
ljmp
adc
adcb
add
mov
jmp
sti
ret
mov
int
inc
cli
lods
push
shlb
imul
pop
aam
xor
shlb
mov
mov
pop
loop
inc
sbb
sub
xor
ljmp
mov
ficoms
insb
or
aaa
cmp
or
sub
lea
adc
sbb
cwtl
fidivs
das
popa
mov
es
loopne
inc
adc
fstps
out
sti
cmpps
fistl
dec
and
loope
sbb
lock
ret
sbb
sahf
xor
xor
jmp
add
clc
xor
pushf
mov
push
and
push
gs
loopne
lds
dec
sbb
in
inc
les
and
ret
mov
inc
pop
add
sub
mov
jg
sub
cs
cmpsb
fldl
sahf
adc
andb
popf
jecxz
fst
insb
xlat
pop
jno
push
ret
cltd
lds
jmp
mov
jae
push
xchg
dec
js
test
mov
sub
mov
or
idiv
add
mov
arpl
cmp
das
roll
cmc
xchg
gs
aam
sti
adc
inc
pop
jno
sbb
dec
mov
into
stos
cmpsl
xor
push
outsl
addb
add
xchg
cmp
adc
insb
enter
es
mov
jg
cmp
loope
fwait
ret
loop
mov
or
jge
add
ss
pusha
stos
pusha
lods
and
or
mov
les
push
jge
jne
lea
cmpsl
pop
xorl
je
aad
scas
push
lds
pop
cmp
lods
out
xorb
push
fwait
mov
ds
jo
or
jmp
push
cmp
dec
inc
testl
mov
lcall
icebp
push
jb
mov
pop
and
xchg
ret
movb
cmp
ficoml
js
add
sarb
mov
incb
mov
pop
aad
lock
insb
sahf
fistps
sbb
fnstcw
or
or
jns
dec
js
not
xchg
mov
pop
pop
shrl
mov
das
sarb
or
int
loope
adc
add
mov
sbb
cmp
mov
insb
fstenv
sbb
xchg
push
xchg
cwtl
cmpsb
sbb
inc
mov
insb
cmc
inc
into
inc
or
mov
movl
inc
add
cs
add
cltd
iret
stc
mov
and
loop
xor
push
xchg
push
jb
push
lret
loope
int3
pop
mov
mov
pop
mov
lods
push
inc
ficomps
and
adc
sbb
ljmp
add
lock
mov
pop
mov
xorb
push
push
push
mov
or
stos
mov
push
jns
test
pusha
in
arpl
mov
lock
dec
mov
in
shll
push
jne
lcall
enter
cltd
pop
inc
out
js
stos
dec
ret
push
dec
sbb
mov
mov
jo
inc
hlt
loop
push
clc
push
or
add
std
push
popl
mov
xchg
out
sub
out
mov
cmp
jo
cli
jecxz
xor
in
mov
repnz
into
xchg
stos
addr16
inc
cmpsb
adc
mov
push
xchg
out
inc
pop
loop
arpl
jge
psubq
pushf
scas
add
xchg
xor
popf
stos
sub
inc
jo
mov
insb
lea
movsb
lahf
andl
jo
inc
dec
popa
or
pop
out
imul
cmp
sub
cmp
fwait
mov
add
stos
aad
push
loope
adc
stc
sub
jecxz
fdivl
jns
fldenv
jae
push
add
sbb
mov
mov
mov
sub
hlt
into
stos
sub
xor
clc
add
xchg
cmp
mov
fbld
jns
mov
pusha
aaa
mov
loopne
mov
inc
jbe
sub
stos
inc
pop
push
rcrb
xchg
leave
loopne
mov
cmp
movsb
push
mov
je
mov
mov
sbb
popf
adc
cmp
mov
adc
cmpb
inc
cwtl
pop
sarl
aam
loop
or
mov
out
rcl
pop
pop
add
pop
mov
sbb
fstl
test
imul
xchg
bound
lahf
xchg
lret
pushf
add
aaa
or
dec
movsb
daa
sub
or
jbe
enter
sub
xor
hlt
xchg
call
sbbb
adc
nop
shl
dec
mov
es
jg
or
and
xor
test
and
popf
scas
xor
sbb
sub
fistpll
xor
xor
outsb
cld
pushaw
rolb
mov
es
xor
aas
out
out
orl
push
cwtl
jb
push
lds
pop
pop
cli
or
mov
addr16
stos
xor
fldl
rorb
sbb
jge
pop
out
rorb
xor
mov
cmpl
out
add
lds
loop
jb
out
xor
je
mov
inc
or
lret
es
push
push
mov
add
jecxz
int
repnz
arpl
mov
cmp
out
sub
movl
cmp
jmp
mov
jge
test
or
cmp
stos
rcrl
jmp
insb
mov
les
sbb
es
aaa
outsb
xchg
or
nop
xor
cmp
jp
popa
mov
cmp
jmp
mov
cs
xor
fstpl
shlb
cmc
sahf
jmp
aas
adc
movsl
pop
sbb
push
fs
aam
jno
inc
sub
insl
dec
fwait
xchg
mov
sub
outsb
jno,pn
inc
jge
sbb
test
push
fildll
ret
pop
std
out
lcall
aam
cmp
cld
jo
inc
add
xchg
ret
dec
inc
xlat
mov
mov
orl
jp
test
pop
aas
jmp
mov
pop
into
adc
das
inc
in
shll
stos
arpl
das
lret
imul
loope
jle
test
mov
sahf
ja
inc
arpl
jecxz
sub
mov
sbb
sub
cltd
xor
mov
mov
mov
dec
inc
pop
jg
mov
js
push
fcoml
adc
and
mov
shlb
rcl
pop
or
inc
cltd
enter
adc
int
and
and
jp
pop
cmp
mov
adc
hlt
add
jbe
data16
lret
xchg
sbb
mov
int
mov
stc
lods
pop
testl
sub
sbb
mov
test
and
push
sbb
ror
pop
mov
aas
dec
push
test
and
clc
idivb
cmc
aaa
mov
mov
jp
sub
mov
jg
mov
icebp
rcrb
pusha
popaw
lods
inc
out
add
mov
inc
xchg
add
outsb
jb
sub
es
mov
xor
notb
aad
or
lds
inc
mov
iret
mov
mov
fiadds
arpl
dec
testl
xor
aam
mov
sub
cmp
mov
and
xchg
in
mov
push
dec
mov
testl
rcr
pop
in
cmp
dec
jbe
mov
es
aam
inc
cmp
je
xchg
popf
lock
inc
add
push
or
lds
jmp
jne
lock
jns
jmp
stc
jp
test
leave
xchg
sahf
stos
jecxz
mov
jg
pop
xchg
sbb
cmp
sub
or
stos
mov
sbb
test
push
das
vminps
or
nop
loopne
pop
pushf
in
push
adc
je
mov
lea
push
fldcw
fstpt
push
jmp
enter
and
jo
mov
into
mov
fcoms
addr16
dec
dec
jp
rorb
xor
and
iretw
and
mov
pushf
fdivs
pop
imul
and
jb
sarl
jp
icebp
and
das
fnstenv
fstpl
dec
enter
call
mov
shl
subb
cmpsl
imul
pop
cmc
scas
cmpl
add
fcmovne
jbe
nop
repz
adc
pusha
scas
jmp
and
cmp
repz
cli
lret
mov
sbb
mov
sub
and
mov
push
shrb
and
pop
pop
sbb
lcall
mov
xchg
fmuls
in
add
jge
cmp
push
sbb
xchg
sar
lret
vmovntdq
xchg
in
mov
outsb
mov
cld
lret
mov
adc
data16
cli
cmpb
push
mov
in
cld
fidivrl
scas
int3
mov
decl
xchg
pop
imul
loop
dec
cld
mov
dec
jns
mov
sbb
inc
sub
jmp
test
add
enter
repz
dec
and
fwait
sub
out
dec
cmp
and
lcall
out
es
mov
sbb
and
mov
loope
testb
inc
hlt
stos
dec
or
pop
cmovs
add
cmp
cwtl
fisttps
into
mov
test
add
sub
or
jo
or
roll
rorl
sbb
adc
sbb
cltd
dec
xchg
pop
lea
shll
ficomps
call
pop
in
in
cld
adc
in
xchg
push
and
outsl
inc
pop
push
xorb
out
push
movsl
xchg
and
fcoml
sbb
out
mov
iret
out
or
xor
xor
jbe
push
lods
or
ss
movsl
loop
inc
jno
sar
xchg
jae
mov
push
xor
cmpsl
jne
adc
inc
mov
mov
mov
imul
jge
cmpsb
mov
dec
out
repnz
ss
add
and
mov
sub
inc
xchg
jne
mov
insl
sahf
add
add
pop
add
dec
mov
mov
pop
adcl
mov
xchg
ljmp
adc
xor
repz
and
stos
das
imul
fnstcw
daa
mov
in
out
stc
cmpsb
lcall
xchg
imul
js
in
mov
aad
outsl
dec
ret
out
clc
cld
push
stc
pop
add
jl
in
xchg
dec
in
xor
ljmp
popf
cmp
or
cli
sub
jp
dec
dec
scas
jbe
add
push
xlat
mov
lret
shlb
or
lret
push
mov
outsl
add
and
addl
ret
push
add
enter
fstps
mov
jg
mov
nop
add
ret
enter
push
dec
sarl
or
in
sarb
rcr
inc
enter
popf
mov
sub
std
and
mov
in
sub
push
sbb
shlb
sbbb
xor
pusha
cmpsl
pop
mov
insl
cmpsb
mov
jmp
ret
hlt
adc
pusha
xchg
pop
push
push
imul
cltd
cmpsb
mov
pop
jo
lea
adc
jne
push
jbe
nop
sub
clc
lret
and
test
dec
jo
xor
ja
jmp
adc
add
test
mov
push
cltd
movsl
mov
pop
xchg
inc
push
adc
pop
out
jge
jg
xor
int3
test
dec
sbb
clc
pop
dec
lock
js
fcoms
xchg
sbbb
cmp
sub
mov
pop
cmpsl
mov
cmp
je
sbb
mov
mov
cmp
test
repnz
nop
mov
jp
loope
jmp
out
mov
cmpsb
imul
pop
xorl
setae
sbb
pop
xchg
outsb
bound
ja
loop
call
cmpsb
cli
out
jmp
rcrb
aas
pop
fs
jae
dec
or
enter
mov
out
adcb
stos
or
pop
xor
out
dec
popf
int3
push
lock
mov
loopne
add
pop
fidivrs
sub
movsb
dec
ss
push
dec
jp
xchg
cmp
shrl
insb
mov
dec
xlat
fldt
and
mov
mov
pop
out
inc
sub
out
and
inc
push
rcrb
xor
divb
popa
mov
push
pop
int3
shrb
fdivp
add
movsb
mov
sub
aas
dec
int
or
push
push
pop
inc
dec
in
pop
jne
mov
fwait
nop
sbb
cmp
add
mov
rclb
fs
mov
xor
push
xor
ds
rcrl
in
xchg
fwait
push
in
jmp
fdivrs
outsl
ljmp
mov
or
mov
es
add
sub
mov
mov
dec
frstor
cmp
push
ljmp
push
mov
out
jbe
pop
push
popf
divl
repnz
mov
jl
or
cmpsw
mov
stos
cwtl
daa
xchg
aam
je
nop
loop
add
leave
jne
xor
inc
into
aad
inc
dec
stos
adcb
lcall
movsl
lods
aad
int3
fimull
js
push
xor
dec
fcoml
fwait
mov
xchg
addl
push
and
and
mov
lods
fnstsw
out
insb
cltd
mov
daa
cmp
mov
add
das
ljmp
dec
jnp
out
sub
cld
fs
decl
sarl
les
cmp
loopne
stos
imul
daa
sub
cmc
aam
aam
cmp
mov
cmpsl
arpl
mov
andb
inc
je
mov
or
mov
js
jmp
pop
popa
dec
dec
inc
jl
xchg
jo
out
or
jno
incl
xchg
push
mov
addr16
incb
stos
inc
pop
outsl
push
add
pop
sbb
mov
inc
ffree
fwait
jge
jns
js
loop
and
fdiv
push
out
pop
jge
jne
jbe
push
fwait
mov
xchg
sti
rol
outsb
aad
rcrb
mov
fmuls
push
stos
xor
adc
push
adc
mov
repnz
jmp
xor
add
mov
clc
jnp
push
and
sarl
mov
xchg
add
sub
mov
xchg
pusha
repnz
movsb
or
imul
fwait
sub
mov
imul
mov
xchg
pop
fwait
loop
pop
lods
pop
outsb
sub
mov
into
and
inc
cmpb
xchg
jmp
mov
outsb
add
xchg
dec
jecxz
in
sbb
dec
ror
movsl
repz
dec
stc
cli
sub
testb
mov
adc
sahf
xchg
scas
sti
ret
stc
jmp
xchg
popa
add
add
push
call
ljmp
andb
or
push
ss
cltd
repnz
aaa
addb
je
dec
fistps
mov
test
mov
nop
aaa
and
mov
sbb
cmp
inc
xor
xor
mov
jg
lea
aas
cwtl
sbb
dec
fbstp
xchg
and
ret
add
jmp
sub
xor
aaa
out
icebp
jge
mov
rorl
or
mov
and
js
dec
rcll
dec
sub
mov
sub
in
push
outsl
sub
and
into
movsb
repnz
bnd
mov
lcall
pop
lret
pop
pop
out
out
and
push
fs
and
dec
mov
inc
cmp
push
jg
mov
jle
movsl
pop
adc
mov
mov
add
sbb
fisttpl
icebp
leave
push
js
fldcw
sbb
push
jmp
add
push
stos
mov
inc
cs
xchg
push
pop
cmp
and
cld
orl
popf
sti
cld
ss
aas
lea
ss
dec
nop
fdivs
cltd
int
inc
test
popf
js
outsl
dec
fsubs
mov
mov
mov
sub
push
imulb
push
loope
dec
xor
scas
mov
cmc
bound
out
or
mov
mov
scas
les
ja
inc
jecxz
lret
sbb
pushf
dec
lea
inc
call
hlt
in
lret
jns
out
mov
lods
jl
add
mov
sbb
cmp
push
or
loope
pop
out
sbb
inc
orl
xchg
xchg
xchg
gs
popf
mov
ucomiss
fdivr
pop
daa
xchg
mov
popa
or
mov
mov
es
adc
cmp
adc
xchg
stos
add
or
pop
fldl
push
ljmp
out
fcmovnbe
push
xchg
xor
ret
in
fdiv
pop
sbb
out
lret
ds
subl
outsb
push
cltd
sarb
stc
cs
cmp
mov
or
pop
scas
pusha
dec
loopne
mov
jl
imul
int
or
or
mov
int3
cmpsl
cltd
xor
cmc
mov
mov
inc
loope
ja
xchg
std
push
or
jo
out
aaa
mov
xchg
and
sbb
in
aas
inc
xor
iret
loopne
xorl
popa
jp
sbb
xor
add
lea
es
adc
shl
pop
jmp
imulb
mov
xchg
adc
outsb
pop
sbb
fadds
gs
push
fwait
test
xchg
or
and
push
in
mov
lods
jae
lret
pop
lds
outsb
xchg
pop
mov
add
ljmp
jle
call
sub
aas
out
cmp
xor
loope
js
add
ret
clc
leave
xor
mov
shl
nop
sti
aam
pop
popa
call
mov
out
stos
sub
fs
mov
sub
inc
stos
aas
mov
mov
xchg
je
cli
mov
pop
inc
xchg
imul
jns
sbb
mov
andl
stc
lret
adc
int
push
pmaxsw
sbbl
xor
and
sbb
adc
es
mov
push
mov
adc
xchg
lcall
lahf
xchg
jo
push
add
mov
mov
orb
aad
das
lds
mov
inc
dec
cmp
mov
sarb
aam
fbstp
xchg
iret
out
jecxz
mov
lret
cmp
pop
or
jns
aad
bound
pop
add
in
gs
sahf
pop
sbb
inc
xor
dec
xchg
add
inc
inc
in
jno
xchg
pushf
mov
je
cmp
cmp
mov
insb
ret
cmp
mov
add
sbb
and
mov
pop
push
or
movl
lods
in
fsubs
fldenv
ret
int3
xchg
test
push
sub
xor
xor
pop
xor
loope
fcmovu
out
bound
and
std
dec
pop
sbb
xor
in
pop
mov
add
cmpsl
pushf
dec
jp
xchg
jae
out
out
mov
into
push
in
push
xor
orl
mov
mov
insl
enter
std
add
mov
cmp
shrb
push
popa
inc
add
mov
cmp
push
and
int
push
dec
adc
pop
into
aas
add
ja
inc
push
bound
sti
dec
inc
mov
enter
lret
xlat
test
in
dec
cmpsl
lea
xchg
mov
fidivs
push
cmp
stos
insb
stos
xor
repz
cltd
das
mov
ret
cmpl
aam
inc
fadd
pop
inc
jl
cld
jg
insl
fcomps
mov
cmp
sub
cmp
ret
std
jmp
pop
mov
mov
test
rcrb
jg
pop
and
jl
jmp
xor
adc
sbbb
push
inc
mov
xchg
jb
stos
fists
sbb
pop
or
or
out
nop
pop
sub
sbb
mov
push
sub
sbb
adc
add
std
pop
add
jl
imul
pop
sub
dec
gs
clc
push
fdivl
jno
icebp
jnp
mov
mov
push
push
enter
aad
adc
out
scas
stc
lods
jmp
or
imul
mov
pop
in
inc
hlt
xor
adcb
je
jae
movsb
adc
setbe
push
mov
cs
push
in
and
mov
ret
outsl
scas
das
fwait
rcr
lods
lret
xchg
clc
out
sub
test
mov
addr16
daa
jb
fwait
test
push
jno
popl
out
movsl
adc
sub
inc
adc
cmpsl
xchg
sti
fisubl
ret
pusha
mov
movnti
dec
and
adc
imul
sub
mov
fwait
or
aaa
repz
pop
mov
lock
out
jge
xchg
pop
cwtl
repz
adc
pop
xor
mov
ljmp
cli
mov
popf
cmp
test
cmc
add
jge
aaa
pop
sbb
test
enter
ja
or
js
aas
push
std
jns
jecxz
mov
lods
cmovns
repnz
repz
sub
sbb
adc
cmp
jmp
xorb
cli
lcall
sbb
addb
mov
mov
cmp
bound
pop
aam
les
or
cmpl
pop
adc
sti
insb
push
ss
dec
jb
test
pop
js
lahf
ret
adc
push
sbb
jns
adc
cmpsb
out
push
sub
stos
mov
and
xchg
cwtl
push
jbe
pop
sti
stos
dec
out
xor
adcl
push
scas
scas
push
loope
sub
dec
push
bound
lock
clc
dec
cmp
in
mov
je
cmp
push
pop
cli
stos
dec
xor
cld
push
mov
dec
enter
call
xchg
cmpsb
add
mov
sub
lods
and
xchg
mov
fs
data16
lea
and
pop
std
rcll
dec
mov
mov
in
test
lret
inc
bound
aad
jb
nop
add
pushf
scas
movsb
outsl
fnstsw
cmp
adc
push
jb
orb
cmp
xchg
add
mov
inc
fisttpl
inc
cmpsl
adc
clc
xlat
loop
push
insb
dec
pop
nop
xor
in
call
or
mov
movsl
loopne
sub
mov
push
jb
cmp
mov
insl
mov
pop
inc
xchg
dec
lods
sbb
dec
fnstsw
pop
in
inc
loopne
insb
xor
in
jbe
inc
jl
mov
cmp
push
mov
imul
pop
imul
jae
adcl
push
into
push
movb
xchg
dec
or
xchg
pop
sub
divl
lahf
jg
jecxz
fistl
and
add
push
scas
jl
sbbb
leave
enter
repz
fiaddl
dec
imul
cmpsb
add
dec
stc
xchg
hlt
cmp
mov
rep
sub
add
sti
pop
dec
js
xor
dec
sub
fisubl
sbb
adc
sub
sub
cmp
in
ret
cld
fbld
xchg
lods
sub
dec
mov
in
movsl
shrl
loop
push
cmpsb
addl
adc
call
sub
mov
das
lea
pcmpgtd
and
jle
imul
pop
out
adcb
mov
ret
dec
push
dec
mov
repnz
mov
test
xor
xchg
jo
pop
movsl
stos
cmp
js
mov
sti
cli
stc
sub
sbb
test
pushf
cs
mov
jle
sbb
lret
mov
out
lods
pop
lock
inc
lcall
mov
mov
or
adc
adc
xchg
in
rorl
add
jbe
add
add
sti
imul
pop
or
jnp
test
andb
xchg
out
jb
outsl
sub
insl
js
mov
test
test
mov
push
data16
jae
insb
fbld
movsl
jg
cld
shrb
fwait
sub
mov
leave
cld
adc
jle,pt
in
test
and
lcall
lret
loopne
stos
ss
adc
sbb
mov
jnp
push
adc
adc
hlt
ret
stc
mov
pushf
inc
repz
add
sbb
inc
or
cmp
push
shrl
rcrl
cmp
sbb
ljmp
je
jle
stos
cltd
ret
dec
jno
mov
je
js
mov
in
dec
push
xchg
enter
imul
rclb
mov
and
push
ret
mov
stos
cwtl
int3
mov
dec
jae
sub
xchg
push
sub
jge
sbb
and
iret
gs
or
push
and
dec
push
fcoml
outsl
cmc
test
bound
mov
aaa
ja
adc
nop
sub
fwait
and
inc
pop
insb
xor
popf
cmp
inc
pop
push
icebp
dec
scas
sbb
cltd
bound
sbb
ja
aas
xor
rolb
loopne
push
pop
mov
pop
xor
movsb
mov
test
cmp
data16
cli
clc
sbb
daa
push
and
sbb
add
rolb
lds
cmp
enter
jne
adcl
mov
mov
push
mov
and
jecxz
xlat
das
cltd
pop
mov
dec
js
and
mov
in
addr16
pop
jp
jne
xor
lret
lret
add
sbb
outsl
or
mov
adc
dec
fisttpll
sbb
jb
in
xorb
dec
sub
mov
jl
add
lret
lahf
div
cmp
cmp
mov
les
pop
push
fsubrs
cmp
xor
mov
or
lock
fistpll
adc
cli
jns
cli
jp
ja
jne
lods
cmp
jbe
rorb
in
mov
push
in
sub
jp
ss
mov
cltd
pop
loop
ss
test
or
ss
scas
repz
stos
popa
fdiv
test
in
cmp
test
test
inc
pop
xchg
in
fstl
in
push
add
cmpsl
jl
lret
pop
add
sbb
jg
sbb
decb
jno
push
jo
mov
ja
mov
in
adcl
adc
dec
pusha
lahf
rcrb
or
lods
push
xor
jae
mov
lods
jg
mov
or
push
dec
les
loop
or
pop
sub
and
cmp
sahf
inc
roll
cmp
out
sbb
push
and
cli
xchg
fwait
repnz
lcall
mov
push
xor
push
rorb
cmp
loop
rol
dec
in
mov
out
xor
and
add
scas
sbb
xor
stc
push
jecxz
in
repnz
cmc
cmpsb
in
std
not
sub
and
sahf
push
leave
loope
fwait
cwtl
ljmp
iret
call
clc
pop
rcrl
inc
iret
iret
lock
out
into
xor
shlb
adc
inc
mov
pop
inc
scas
xor
sub
es
or
gs
rcll
push
ja
repnz
mov
jl
test
dec
fisttpll
out
in
fisubl
movsb
inc
sub
orl
mov
popa
pop
add
mov
xlat
sbb
int
pop
xchg
roll
add
sbb
xchg
add
out
jecxz
dec
sub
inc
cmp
mov
jo
cmp
sbb
xor
pushf
dec
lods
lods
xor
sbbl
or
icebp
dec
gs
mov
scas
sbb
repz
ret
stc
into
mov
and
push
aam
sahf
mov
xchg
sbb
lret
or
insl
inc
ss
xlat
int
dec
lret
lahf
je
bound
cli
and
mov
std
cmp
jle
sub
int3
cli
daa
lret
testl
mov
xor
cmp
sub
and
dec
pop
iret
or
push
pop
push
mov
add
fisubl
mov
dec
and
das
add
mov
and
data16
adc
or
mov
inc
mov
les
xlat
push
xor
mov
popa
loopne
push
movsl
mov
loopne
es
pop
icebp
imul
and
push
xchg
pusha
mov
clc
repz
fmulp
ret
push
loope
inc
lahf
xor
loopne
pusha
ds
in
cmp
xchg
mov
jge
lcall
ds
xor
jae
shr
sbb
mov
imul
ficompl
mov
cmp
dec
fnstenv
enter
mov
xchg
push
adc
test
jp
pmullw
pop
sub
nop
out
inc
lods
xor
cld
std
insl
pop
fwait
orl
push
aam
adc
and
push
and
or
jo
or
mov
out
inc
dec
out
xor
push
pushf
int
dec
push
push
lds
loop
xchg
xor
test
xchg
fdivrs
or
xchg
mov
jne
pop
push
je
sub
dec
jbe
mov
nop
xchg
cmp
cmpb
mov
fsts
pop
mov
inc
in
in
xchg
xchg
loope
js
loop
jmp
push
mov
dec
inc
sbb
orl
in
in
mov
sub
fisttpl
scas
into
out
ss
pushf
inc
movsl
idivl
outsl
mov
sbb
mov
adc
insl
add
mov
loop
add
into
push
jno
dec
loope
lret
xchg
les
outsb
hlt
jne
xchg
mov
scas
insl
in
mov
bound
mov
ret
pop
lock
jmp
sbb
push
mov
mov
cmp
jmp
les
out
mov
ret
xchg
cmpsl
xchg
dec
add
sbb
test
not
test
push
mov
push
xchg
cltd
loopne
cmp
fs
and
fmuls
or
sarb
pop
and
rcrl
mov
int
repnz
push
ficoms
pop
lods
sahf
xor
sub
pop
jns
pop
fcoms
ror
adc
mov
or
push
popa
jp
int3
fisubrs
movsb
pop
fnstcw
mov
aad
gs
jns
adc
leave
mov
jmp
dec
and
adc
jno
or
mov
push
jns
out
push
sbb
sub
mov
pop
push
in
std
add
fstp
mov
jp
pop
dec
inc
test
sti
pop
xchg
stos
jle
lret
jmp
pop
xor
iret
add
xchg
sarb
dec
jbe
sarb
sub
sbb
aas
mov
pop
inc
add
test
adc
add
pop
mov
mov
clc
es
inc
pop
push
sub
movsl
and
or
movsl
jmp
testb
jb
data16
xor
push
adc
out
or
clc
mov
xchg
push
cmc
ret
xor
cmpl
adc
in
into
inc
xchg
fcmovu
cmp
clc
adc
pminub
lahf
mov
cmp
loop
cwtl
sbb
jb
xor
push
push
sub
and
inc
or
mov
or
and
jecxz
adc
jns
mov
repz
movsb
sub
xchg
push
push
adc
sub
repz
ja
pop
into
sarl
mov
jo
shlb
icebp
dec
inc
nop
push
data16
cmp
jp
shrb
and
add
dec
sub
or
out
fsubr
lods
lahf
ja
jecxz
xchg
xor
leave
xor
xchg
push
adc
movsl
or
lods
jmp
insb
adc
mov
sub
adc
inc
js
dec
mov
sub
or
js
test
das
into
subb
mov
sub
loopne
in
lods
inc
dec
ljmp
cmp
leave
dec
or
mov
push
popf
aam
adc
adc
rorb
addr16
cli
aam
mov
jecxz
add
stos
sarb
mov
arpl
daa
fwait
cli
nop
mov
xor
pop
cmp
test
push
sbb
mov
and
pop
repnz
sbb
xlat
jge
push
mov
repnz
loop
mov
mov
out
jl
adc
and
std
fsubrs
jge
rcrb
push
inc
arpl
insl
lods
sahf
sub
fldlg2
loope
sub
cmp
ss
inc
lret
inc
adc
mov
fs
imul
lcall
popa
mov
call
pop
and
popa
sub
inc
dec
sar
adc
pop
cltd
jae
test
xchg
push
or
addr16
mov
cli
mov
pushf
push
push
stos
arpl
pop
sbb
inc
fisttpl
rclb
mov
cmp
lods
movsl
lea
ja
in
lahf
mov
test
cmp
test
cmpl
fcomp
rcrb
repnz
aas
fst
ss
das
xor
in
int
jecxz
stos
lcall
add
xchg
jbe
dec
xor
sub
jae
or
push
pop
aam
inc
fcoms
inc
inc
or
mov
push
xchg
cmp
pushf
mov
aaa
mov
sub
call
mov
xor
push
enter
out
popf
loopne
sbb
jmp
mov
mov
and
scas
xlat
fbld
sub
pop
lds
pop
and
adc
lret
ss
inc
inc
jle
ja
in
push
mov
iret
jb
out
cmc
cmp
syscall
es
ds
fidivrl
inc
inc
repnz
lods
and
mov
xor
jno
and
mov
lods
push
cmc
cmc
jp
sbb
ss
sbb
xchg
xor
bound
cmp
icebp
in
frstor
pop
lock
add
in
mov
test
jge
push
cmp
pop
es
mov
inc
pop
aaa
mov
sub
inc
imul
pop
aam
pushf
lret
mov
push
enter
or
scas
outsb
xchg
pop
sub
adc
fisttpl
js
and
push
add
jae
jg
xchg
das
push
loopne
iret
sbb
push
fnstcw
dec
and
and
idivb
call
or
xchg
sbb
sub
mov
sbb
addr16
mov
scas
dec
arpl
loope
pushf
jmp
xorb
mov
in
pop
xor
imul
sti
sarb
mov
fdivs
aam
and
fisubrl
cmpb
dec
dec
in
insl
in
fisttpll
adc
xchg
clc
out
mov
imul
cmp
dec
scas
add
jmp
mov
jmp
int3
movsl
dec
lret
inc
mov
xchg
pop
std
cmpsl
push
lods
sbb
mov
mov
dec
enter
pop
lds
clc
sti
int3
mov
jge
inc
dec
push
stos
mov
jecxz
jmp
in
cmc
gs
inc
dec
pop
adc
ret
movl
pop
fsts
outsl
call
sub
adc
jge
cwtl
insb
jmp
mov
xor
inc
jne
dec
stos
sbbb
add
sahf
inc
push
paddsw
sub
cltd
call
ds
add
cmpsb
lret
push
add
dec
fwait
jmp
out
in
fiadds
mov
inc
sub
cwtl
jl
jp
adc
or
jmp
inc
adc
mov
jns
sub
in
jae
out
lcall
aam
negl
pop
pop
das
dec
lock
cltd
jae
mov
cmp
push
loopne
insb
and
mov
arpl
fsubl
fcoms
les
popa
sahf
adc
inc
dec
and
xchg
lahf
or
sahf
cli
repnz
or
xchg
xlat
fsub
adc
mov
and
jmp
cmp
dec
push
int3
and
mov
jo
sbb
cld
jne
fs
jge
dec
mov
cwtl
es
sbb
inc
ret
push
arpl
cs
cmc
push
mov
jns
inc
sub
jns
mov
adc
fcompl
roll
sbb
dec
aaa
shll
push
jl
insl
mov
andb
call
js
pop
aas
sbb
popf
xor
push
xchg
leave
mov
test
xlat
push
ja
dec
icebp
or
mov
loop
fwait
call
mov
fs
pop
adc
lahf
arpl
jne
add
sub
jle
sbb
adc
shll
pop
ficomps
rorb
arpl
sahf
loope,pn
add
push
adc
jmp
xchg
fiadds
pusha
lcall
icebp
out
adc
dec
je
shrl
push
cmpsb
clc
fcoml
lcall
dec
popa
push
pop
add
xchg
xchg
mov
sti
sub
mov
or
adc
pop
ret
jo
push
int3
mov
sarb
xor
push
popf
test
add
std
clc
or
xchg
adc
jecxz
pushf
fmulp
and
mov
test
cmpl
fiadds
int
or
js,pt
jp
pop
pop
push
sahf
sbb
mov
scas
mov
jg
mov
ror
xchg
mov
pop
in
push
xabort
icebp
push
mov
mov
pop
test
inc
movsl
pop
xchg
xchg
aad
outsb
dec
dec
lock
jnp
inc
test
sbb
mov
xchg
and
insl
mov
dec
and
add
mov
fwait
ja
pop
arpl
cmc
scas
insb
mov
sbb
js
cmp
xor
push
aas
ret
mov
nop
jnp
aad
dec
pop
and
jno
stos
fwait
dec
mov
aas
mov
fs
and
mov
mov
and
mov
cs
adc
pushf
pop
push
sti
leave
xor
sbb
xchg
jle
dec
daa
es
sqrtps
mov
lret
loop
mov
fcoms
adc
in
bound
push
movsb
lds
jbe
cmp
pop
loope
sbb
mov
cmpsl
pop
jl
or
adc
ds
push
mov
mov
sub
lcall
js
stos
sub
pushf
lods
cli
inc
roll
dec
dec
imul
pop
mov
mov
push
mov
xchg
or
sub
adc
and
ss
and
or
mov
jecxz
jb,pt
je
jb
enter
ljmp
push
leave
push
test
jmp
pop
jae
pop
ljmp
push
cli
shrb
pop
cmpl
mov
xchg
enter
dec
nopl
dec
sbb
sbb
or
sbb
xchg
out
fisubrl
cmpsb
filds
sbb
mov
xchg
test
mov
mov
stc
push
sti
test
or
adc
sub
gs
in
xchg
sbb
repz
adc
mov
into
dec
and
dec
imul
push
mov
and
cmp
insb
dec
leave
push
dec
cmpl
push
ss
sub
sub
mov
frstpm(287
fcmovnbe
enter
rcrb
cld
lret
sub
pushf
fsubrs
or
test
icebp
dec
fwait
aas
push
push
push
jae
jae
fisubrs
jns
pop
lods
faddl
imul
mov
scas
fidivs
int3
adc
sub
add
dec
jecxz
das
in
sub
rcrb
or
enter
mov
call
jp
jae
es
and
pop
inc
les
cld
push
mov
insb
xchg
mov
out
inc
and
loop
repz
jb
xchg
fdivrl
stc
mov
inc
outsl
cmp
cmp
pop
rcr
lea
addr16
xchg
adc
or
push
pop
pop
and
xchg
cmp
push
sbb
adc
enter
cs
cmp
mov
jns
add
aad
in
jo
dec
in
inc
lret
popa
xchg
popa
aas
cmp
mov
and
icebp
add
test
notl
jne
inc
rorl
lods
pop
pushf
cmp
movsb
subb
sub
sbb
xor
jns
and
fs
sub
mov
fnstenv
int3
fcom
dec
jno
popf
in
cltd
mov
xchg
pop
fs
hlt
in
imul
lcall
and
dec
mov
and
add
inc
aaa
int3
je
es
test
lcall
dec
push
addr16
iret
inc
inc
cmpsb
cltd
or
add
pop
sti
push
push
pop
mov
jl
in
mov
dec
sbb
mov
sbb
ret
mov
fisubs
sub
fistpll
lsl
sbb
xchg
inc
test
mov
jb
fs
out
push
mov
fbstp
xchg
pop
xor
loop
fstl
xor
inc
mov
out
jle
cmp
int
add
xchg
mov
mov
pop
xchg
mov
hlt
xchg
jno
pushf
pop
mov
iret
filds
xor
mov
xorl
or
lock
bound
insb
clc
stos
inc
lock
sub
sub
fwait
add
mov
dec
mov
jle
das
push
jae
cmpsl
stos
xchg
imul
pop
fstl
push
mov
jle
cmp
adc
cmpsl
inc
lcall
mov
js
pop
mov
push
xor
arpl
cwtl
cltd
adc
mov
add
sbb
and
pop
in
push
cwtl
and
js
sti
or
pop
jno
dec
dec
out
inc
test
ja
jo
imul
pop
mov
jg
cli
mov
or
inc
scas
repz
add
adc
stos
dec
fildll
sbb
sbb
cld
inc
add
xchg
xor
dec
scas
add
add
lods
arpl
jmp
fstpl
jmp
xor
icebp
in
les
dec
pop
fsub
fs
mov
mov
outsb
pop
fnsave
mov
lods
add
mov
sbb
out
adc
lods
mov
cmpsl
push
add
mov
repnz
into
pop
lds
iret
mov
inc
inc
je
fidivrl
cwtl
xchg
add
pop
mov
xchg
ror
dec
mulps
cmpsb
mov
jecxz
into
sub
cli
iret
xlat
and
push
cmp
loope
ficoms
add
stos
mov
lcall
cmp
aaa
int
sbb
inc
cltd
pop
loop
das
or
repz
je
adc
adc
push
hlt
jb
scas
pop
ja
add
sub
push
mov
xor
ja
jnp
call
adc
stc
fstpt
xor
fsubs
ret
nop
push
pushf
xor
cltd
cmp
jae
fimuls
mov
cmp
mov
decb
or
and
sahf
enter
arpl
cmp
lcall
pop
push
fsts
fdiv
cmp
cld
mov
sub
mov
mov
push
and
out
aad
and
sbb
inc
scas
pop
out
aad
mov
xor
sbb
iret
jp
inc
or
and
enter
int3
test
cld
in
and
adc
pushf
mov
push
js
scas
loop
cwtl
mov
sub
ds
xchg
cmp
rol
mov
cltd
mov
jne
mov
mov
mov
popa
mov
sbb
push
ret
mov
mov
jecxz
bound
scas
add
das
lahf
lret
ret
push
add
adc
pop
xor
ss
hlt
pop
imul
in
je
mov
into
cmp
and
jno
out
mov
cmp
hlt
push
test
adc
dec
mov
push
ficomps
int
incb
adc
icebp
mov
bound
cmp
dec
cmpsb
clc
jns
movsl
jle
jge
dec
add
push
popa
push
arpl
cmp
jnp
idivl
adc
xchg
sbb
add
test
leave
cmp
push
das
xchg
js
test
adc
rcl
xor
cmp
jecxz
popa
cmc
cmc
stc
adc
ds
in
push
sbb
sub
movsb
out
and
test
mov
lea
push
mov
pop
inc
ja
ds
fcoml
push
out
aad
add
ficompl
push
lcall
inc
scas
fmul
sbb
adc
sbb
out
bound
sub
imul
dec
jecxz
sbb
aad
push
mov
mov
iret
mov
test
imul
jnp
pop
or
xor
push
negl
jno
dec
test
mov
and
sbb
mov
inc
punpckldq
mov
push
scas
test
dec
inc
adc
jg
cs
cli
sub
inc
adcl
mov
scas
shrl
jb
push
clc
fisttpl
pop
ljmp
sahf
test
xchg
lods
popf
mov
jp
std
or
cmc
popf
in
dec
or
or
mov
inc
sbb
inc
imul
xor
cmp
notl
pop
lock
pop
jecxz
aam
cmp
mov
push
cmc
mov
imul
jecxz
dec
push
mov
pop
pop
sub
ds
mov
jl
or
pop
xorb
mov
pop
fildl
pop
outsb
ret
xchg
mov
mov
sbb
out
stc
ljmp
cmp
in
and
clc
lret
mov
push
ret
add
add
rcrb
push
shlb
outsb
into
mov
sarb
jmp
aad
imull
lods
ret
int
scas
mov
popa
or
scas
in
xor
dec
loopne
lret
push
in
cmp
or
inc
sbb
out
sbb
cmc
inc
fimull
xor
ret
ficomps
jae
push
fldenv
xor
scas
sub
stos
es
ret
jg
dec
push
sub
loope
loopne
test
lret
addr16
ljmp
xchg
imul
je
cmc
xchg
je
cld
jnp
xor
xchg
jo
sub
pop
inc
mov
push
pop
or
mov
clc
and
test
jle
addl
sahf
mov
in
jns
pop
int3
cmp
ja
xor
add
sbb
cmp
lods
ret
mov
push
ret
rcrl
xchg
in
imul
adc
xor
mov
add
inc
ficompl
cmpsl
mov
xor
push
jnp
sbb
enter
leave
cmp
push
mov
adc
cmp
push
push
lret
repnz
xchg
push
pop
insb
int
or
jmp
mov
sbb
sbb
mov
inc
subl
xor
cld
fdivl
dec
jo
push
not
mov
sub
add
fldenv
cs
xchg
dec
test
xor
pop
cmpsl
imul
fmuls
cmp
mov
stos
adc
jge
fbld
shr
inc
vpsubd
out
dec
incb
stos
pop
jp
and
add
pop
push
in
xlat
jmp
mov
xchg
inc
xchg
cli
pop
clc
divl
test
add
push
fisttpll
outsl
mov
or
inc
rcr
and
mov
or
mov
es
scas
fcomps
adc
pop
sti
and
stos
loope
iret
or
xchg
xor
sub
enter
pop
arpl
repz
cld
ret
outsb
out
cmc
testl
lahf
in
out
jns
pop
and
bound
pop
xor
les
or
xchg
or
sti
outsb
cmc
aas
lahf
mov
or
inc
or
adc
xchg
pop
imul
add
jno
mov
sub
testb
jb
icebp
inc
je
inc
hlt
jo
pusha
dec
rorl
push
sarl
push
mov
push
inc
and
scas
test
orl
jo
pop
pop
or
push
movsb
out
out
mov
xchg
out
fucomp
xchg
imul
insl
jno
pop
push
nop
mov
push
jae
lods
push
pop
and
test
shrb
pushf
cmpsl
daa
sarb
nop
fwait
gs
in
loopne
shl
jnp
add
pop
push
inc
jp
sbb
and
fcomip
lahf
clc
xchg
test
lock
insl
pop
test
push
call
mov
mov
mov
call
push
scas
pusha
lods
sahf
push
outsl
roll
les
push
sbb
mov
cmp
ficomps
jmp
leave
adc
loopne
xchg
loope
xor
jae
iret
sbb
xchg
or
jbe
shrb
inc
dec
popa
outsb
fucom
jmp
in
adc
fistpll
stos
push
mov
dec
fcmovbe
in
xchg
mov
mov
pop
sbb
cld
add
and
sarl
sbb
ret
lods
push
movsb
or
inc
mov
jo,pn
sbb
or
or
or
or
or
inc
pop
jecxz
mov
mov
jno
pop
mov
iret
cmovne
push
mov
or
xchg
push
xchg
movsl
or
add
cmp
xchg
cli
subl
aaa
les
add
out
adc
xor
pop
int3
addr16
fucomp
mov
pop
divb
xchg
rol
add
and
pop
push
lods
popf
jne
push
cmpsb
xor
cli
call
jo
adcl
jnp
in
shlb
pop
inc
inc
rolb
aad
lcall
and
andb
push
adc
push
add
xchg
shll
test
inc
add
aam
pop
mov
mov
cmp
mov
dec
pop
mov
daa
xchg
jns
sub
cmc
aad
cmp
ljmp
fidivs
pop
shlb
cltd
dec
mov
push
sbb
cmp
and
fildl
inc
int3
decl
sbb
lods
out
shl
lods
outsb
mov
test
mov
scas
int
fistl
stos
pop
sbb
lods
ljmp
jl
or
fdivrl
hlt
adc
cwtl
mov
sti
jge
popa
pop
cmp
or
and
xor
jge
out
mov
sub
imul
mov
push
ret
add
addl
adc
leave
aaa
out
pop
shrl
mov
cmp
test
les
push
stos
fwait
jae
inc
imul
dec
ljmp
or
mov
cmc
imul
insl
ret
andb
cmp
decb
ret
ror
fisubs
xorl
adcb
and
and
push
xor
or
pushf
or
cwtl
mov
frstor
add
mov
jl
jno
das
and
je
or
push
mov
jns
mov
popa
je
data16
ret
jae
pop
fs
and
xchg
adc
xor
aaa
adcl
or
rcrl
sbb
ja
mov
fists
test
dec
or
push
popf
jecxz
or
ja
sbbl
fsubrl
repnz
repz
cli
mov
lcall
cmpsl
jbe
sbb
sbb
add
jns
jge
fdivrs
subb
insl
mov
xchg
imul
dec
xchg
insl
sti
push
ds
mov
into
in
js
sub
jne
jb
fwait
inc
fiaddl
jbe
push
sbb
lahf
outsb
fwait
push
test
stos
repz
lock
push
lcall
aam
xor
rolb
stos
xchg
xor
aam
push
fs
add
adcb
sbb
push
pop
push
adc
test
mov
adc
das
xchg
push
sbb
int3
cli
dec
push
jmp
je
clc
and
adc
add
sub
jnp
pop
in
sub
jl
popa
fiaddl
mov
cwtl
jae
mov
int
jno
pop
cltd
bound
inc
mov
add
rclb
mov
fldenv
xchg
int
pop
and
jle
js
jb
mov
jbe
xor
ljmp
movsl
jecxz
sbb
out
xchg
pop
mov
into
fdivrl
inc
add
mov
loope
xorl
sbb
imul
adcl
pusha
incb
jae
add
addr16
outsl
sub
ficoml
mov
sub
pushf
into
sbb
jno
cmc
into
pop
inc
push
xlat
or
sbb
pop
stos
daa
leave
mov
add
gs
cli
testl
arpl
add
sbb
and
or
ss
sbb
jns
imul
jbe
or
cmp
pop
out
mov
divl
out
test
mov
adc
push
cmpsl
ret
arpl
fstpl
dec
add
pop
decl
jbe
mov
pop
xchg
fchs
leave
scas
shll
outsb
imul
or
pop
mov
jnp
adc
aam
and
mov
inc
iret
adc
xchg
mov
adc
inc
inc
adc
fcompl
pop
cmp
or
daa
shll
icebp
pop
bnd
pop
repnz
sbb
xor
jb
cmp
imul
cmp
xorb
inc
int
xor
xor
out
int3
jne
or
fsubrs
adc
adc
mov
leave
hlt
xchg
adc
aas
jne
sbb
loope
pop
inc
stos
sahf
fsub
gs
scas
sub
pop
jno
movsl
aam
lods
rcrl
push
insb
cmp
sub
insb
fnstsw
sbb
xchg
mov
fwait
in
pop
inc
push
lea
insb
push
cmp
clc
sbb
out
mov
xchg
nop
outsl
mov
xchg
pop
popa
cli
add
shl
mov
icebp
cltd
enter
movsl
xor
adc
fbld
sbb
iret
and
or
inc
into
add
jbe
inc
push
js
mov
and
cmc
mov
mov
lea
cld
cmpsb
pushf
mov
xchg
xlat
iret
inc
inc
mov
mov
inc
repnz
rorb
pop
movsb
mov
ss
fadds
mov
loope
dec
jae
and
in
or
jge
mov
idiv
out
push
dec
dec
pushf
daa
pop
lods
fisubl
imul
out
pop
add
cmp
cmpsl
mov
sbb
xor
minps
mov
jp
lahf
test
test
test
out
add
inc
fisttps
pop
inc
mov
es
sub
testl
insb
lret
inc
stos
pop
es
jne
push
outsl
mov
insl
inc
ja
jae
int
cmp
inc
aad
mov
jl
push
out
fadds
cmp
js
les
sbbb
call
xor
push
fisubs
pop
cmp
fists
mov
and
mov
aas
and
outsl
rclb
adc
ret
adc
mov
fadds
xchg
aaa
lret
jp
bound
fisttpl
dec
daa
inc
call
cmp
cltd
lahf
fstpt
push
loope
push
imul
sbb
push
inc
ja
test
sahf
add
cwtl
adc
adc
lods
jne
movsl
push
mov
push
cmp
mov
outsl
xchg
das
xor
mov
les
inc
js
cmc
outsl
sti
lahf
out
mov
push
mul
xor
fistl
mov
cs
add
adc
cmp
hlt
addb
and
inc
repz
mov
push
or
xor
mov
inc
lds
or
in
call
aad
aam
ficoml
and
es
mov
std
cmc
push
inc
xchg
mov
fs
fistpll
jmp
push
sub
add
push
test
mov
mov
roll
int
mov
push
mov
mov
in
or
xor
int
lret
inc
jge
clc
mov
mov
cmp
movsl
xor
cmc
xchg
mov
inc
fs
sbb
inc
aam
jge
and
stos
ja
xor
and
aad
das
or
dec
pop
cmp
ret
xor
lahf
into
mov
sti
adc
mov
mov
dec
imul
and
mov
fwait
and
sbb
pop
xor
fstpl
inc
pop
sbb
sbb
aam
adc
mov
fisttpll
cmp
dec
aam
push
mov
xor
test
insb
outsl
aad
xchg
adc
pop
xchg
aad
mov
out
aad
push
pusha
pop
clc
dec
stos
mov
fcmovnb
cmpb
push
add
bound
mov
mov
inc
lret
lock
xchg
loop
mov
popf
jo
adc
push
ss
inc
fcompl
xor
xchg
sbb
ja
dec
das
dec
or
sbb
or
imul
in
nop
xor
pop
and
lock
rcl
fsts
lea
push
pop
xor
insl
fimull
clc
sub
push
iret
clc
movsb
cld
push
popf
push
sti
bnd
xorl
js
out
pushf
add
jl
xchg
and
pop
cmp
mov
push
xlat
mov
adc
lods
std
sbb
xchg
mov
or
in
ljmp
in
cmp
loopne
data16
cmp
in
cmp
and
hlt
push
outsl
or
fadd
dec
or
adc
aam
mov
xchg
lock
and
add
mov
test
dec
andb
stos
das
ss
jo
push
push
or
or
mov
pop
jb
jg
xchg
xor
pushf
hlt
aaa
cwtl
movsl
pop
mov
xor
int3
testb
push
jnp
add
xchg
insl
mov
call
repz
addl
pop
push
ret
out
mov
test
rcll
mov
add
push
js
scas
js
mov
dec
pop
insb
xchg
sbb
cmp
dec
mov
jmp
inc
insl
adc
fwait
sbbl
jle
imul
jg
jge
orb
mov
pop
push
mov
iret
nop
xchg
mov
xchg
mov
dec
mov
sub
pop
fnstcw
dec
jb
fiadds
xchg
cmp
jo
cmp
push
cmp
stc
xchg
in
push
lods
pop
imul
jmp
sub
lods
out
add
mov
sbb
cmp
xorl
mov
add
call
xchg
in
outsb
aaa
aam
or
ficoml
add
aad
mov
jp
xchg
mov
movsl
mov
mov
mov
out
call
xor
out
mov
sahf
xchg
inc
mov
dec
icebp
jmp
ljmp
popf
jle
adc
and
jmp
inc
dec
xadd
in
sbb
cmp
idiv
inc
jle
jle
mov
sub
in
jne
rol
popa
clc
and
out
inc
mov
dec
mov
inc
push
jae
out
xchg
adc
adc
add
dec
inc
lods
pop
jb
sub
out
int
cli
mov
dec
dec
push
das
or
popf
into
notb
cmp
divl
and
jecxz
ss
ljmp
and
pop
cmp
jge
mov
push
ljmp
insb
inc
mov
or
mov
repnz
fdivrs
roll
nop
popa
add
in
icebp
rcr
imul
sbb
or
imul
mov
scas
data16
xchg
or
cmp
adc
cltd
sub
inc
or
or
test
movsb
in
xchg
cmpsl
push
jne
hlt
andl
stc
shll
xor
lret
and
lea
stc
mov
adc
push
leave
les
xlat
in
pop
cmc
fldcw
stc
xchg
mov
lcall
loopne
xor
jnp
mov
js
sub
fdiv
jg
aas
inc
mov
inc
ja
popf
sti
mov
mov
and
cs
mov
inc
mov
pop
stos
shlb
mov
mov
mov
sbb
imul
adc
mov
repnz
sbb
in
pop
sbb
hlt
insb
jmp
ljmp
sub
clc
das
cmpl
xor
pop
or
mov
sti
and
mov
popf
and
push
xchg
cltd
sbb
inc
add
xor
out
popf
dec
arpl
scas
ss
dec
or
and
fucomp
les
stos
sub
inc
das
and
xor
test
xchg
fcomi
scas
out
xchg
cwtl
scas
orl
sbb
scas
inc
dec
test
rclb
jno
mov
cmp
aas
adc
pop
and
cmc
test
fstp
lea
cmc
cmp
cmc
test
or
fisttpl
loop
mov
cmc
pop
xorb
repnz
sbb
into
daa
xor
pop
mov
fdivrp
ljmp
in
jb
int
adc
nop
cmpsb
mov
outsb
nop
dec
lret
push
movsl
pop
insb
lret
and
mov
call
cmp
xchg
pop
shll
icebp
push
push
bound
insl
pop
inc
sub
lds
push
clc
pop
stos
pop
and
imul
mov
jb
push
ds
xor
lods
incb
mov
orl
push
fsubrl
cs
pop
lret
add
pop
mov
push
or
or
ret
sub
lods
in
pop
xor
mov
jo
mov
xchg
cwtl
js
not
or
cmpsb
subb
ret
jge
sub
dec
iret
bound
cmc
aaa
cmpsl
aam
lds
sti
popf
mov
imul
jb
fsubrl
push
xchg
pushf
and
and
movb
mov
mov
and
in
popf
dec
movsl
test
leave
inc
cmp
sahf
and
push
fidivs
std
xlat
inc
adc
push
mov
test
js
mov
sbb
xor
inc
je
pop
incb
insb
shlb
jle
sub
leave
cmp
enter
inc
clc
inc
into
cmp
test
fldcw
cli
cli
dec
movsl
ds
pop
push
or
gs
jne
jl
inc
xchg
loopne
repnz
fcmovnu
repz
lock
lret
fists
cwtl
arpl
icebp
inc
push
sbb
cmpsl
mov
fmul
jne
jg
int
jle
into
inc
inc
pop
aas
jg
mov
loop
ds
xchg
sbb
lea
call
cli
cmp
in
std
and
shrb
xchg
cltd
jge
aam
aaa
mov
xchg
mov
cltd
pop
lods
inc
negb
xor
jbe
push
shrl
mov
push
or
pop
ja
pop
ss
dec
dec
shrb
imull
xor
repnz
push
push
loopne
cmp
fnstenv
sbb
in
inc
xor
arpl
stos
inc
mov
mulb
xchg
es
lock
bound
push
mov
iret
test
mov
fldcw
mov
repz
pop
or
pop
mov
out
aam
add
cltd
das
cmc
aad
mov
jnp
xor
adc
sahf
and
leave
out
mov
repz
adc
and
sub
fisttps
add
adc
push
imul
mov
xor
sti
ret
imul
ret
in
rol
mov
push
mov
push
lahf
rol
mov
pusha
and
jb
sbb
xlat
xor
push
popf
movb
clc
imul
mov
das
jns
mov
and
and
aaa
mov
fxch
sbb
xor
lret
test
pop
mov
aas
adc
out
jnp
cltd
js
mov
in
lock
sbb
cmp
xchg
jns
popa
or
rcr
mov
fs
stos
sub
push
cltd
inc
lods
cmp
adc
xor
xchg
lods
imul
xchg
mov
add
sbb
ror
cltd
test
fiaddl
pushl
js
movsl
dec
cmc
in
mov
shrl
sti
lcall
sahf
or
addr16
adc
sbb
arpl
sub
cmp
mov
lods
testl
mov
jo
loop
pop
jmp
xchg
jbe
loopne
stos
mov
aam
and
inc
cmp
outsl
jmp
push
sub
nop
loope
pop
test
loopne
mov
add
imul
inc
cmp
out
iret
int
xchg
data16
test
mov
outsb
ja
sub
mov
sbb
out
cwtl
test
ret
out
and
push
pop
movsb
imul
mov
cwtl
add
pushl
ss
fisubs
mov
in
push
mov
cmp
cmpsb
je
sarb
xchg
dec
cwtl
mov
push
mov
and
sub
int3
xchg
push
insb
daa
hlt
or
arpl
xor
ja
lea
inc
push
mov
xchg
jnp
movsl
pushf
push
cmp
xchg
fcmovb
sarb
pusha
out
or
pop
pop
gs
xor
popa
in
test
jle
jp
xchg
xchg
sub
add
add
add
lcall
xchg
bound
call
jbe
into
sbb
cmp
push
lcall
leave
adc
lcall
imul
sbb
and
add
jns
add
mov
mov
adc
popf
mov
pusha
popf
sbb
popa
arpl
insb
rorl
fs
dec
mov
xchg
icebp
mov
push
sbb
jae
sub
inc
iret
imull
andb
movsb
sbb
pop
add
xchg
lahf
imul
push
add
cwtl
ss
in
xchg
adc
test
stos
addr16
push
sarl
or
adc
dec
cmp
jg
jae
add
xlat
aas
add
rclb
pop
dec
pop
jmp
lcall
sbb
and
scas
cmp
lcall
jp
xor
and
lds
jnp
cwtl
sbb
jl
mov
ss
inc
or
jge
into
clc
adc
pop
jne
js
xchg
push
enter
adc
test
adc
sub
ds
pushf
and
xchg
call
xchg
sub
aaa
roll
adc
fcoml
jmp
pusha
addr16
sahf
mov
xchg
ficompl
cwtl
mov
movsb
hlt
xchg
je
sub
pop
inc
popa
mov
xchg
in
cmp
jmp
inc
jnp
popa
lahf
cmp
pop
ret
inc
add
sub
add
lods
icebp
add
push
stos
adc
les
jbe
into
mov
xor
int
cmpsl
inc
aas
sbb
xchg
dec
js
lods
dec
or
popa
ds
cwtl
add
test
lods
cmpsl
out
push
out
mov
push
mov
mov
xchg
mov
push
inc
out
scas
cmp
gs
mov
push
sbb
scas
mov
adc
cld
js
arpl
mov
mov
mov
data16
aas
ss
repz
lock
or
daa
out
jecxz
imul
mov
dec
jo
jg
js
loop
pop
bswap
fs
push
push
pop
int
jge
out
icebp
mov
enter
cmp
bound
sarb
push
xchg
rcr
mov
sbb
jp
jo
xchg
enter
icebp
jl
and
ret
sub
es
adc
nop
add
aaa
push
inc
stos
jno
lods
sub
subl
arpl
xor
shl
ljmp
cmpsb
ds
pop
movsl
enter
int
and
pop
inc
mov
sub
into
mov
dec
cmc
repz
or
inc
mov
test
pop
or
lods
fiadds
xchg
mov
imul
scas
cmc
xor
aam
stos
and
sub
xor
je
lret
in
dec
dec
and
or
sub
ljmp
add
lock
in
leave
sbb
dec
inc
idivl
rolb
dec
push
pop
cltd
xor
add
aaa
mov
leave
mov
test
adc
in
leave
arpl
xor
push
pop
outsl
add
and
add
cmp
mov
mov
jno
jns
adc
push
push
in
adc
sub
push
std
jg
pop
sub
jb
stc
fistl
push
imul
arpl
call
iret
test
hlt
jecxz
xchg
pusha
dec
push
sbb
pop
push
inc
out
cmp
mov
mov
lods
arpl
mov
stc
loope
lds
adc
pop
cmpl
mov
iret
mov
push
iret
lods
jno
mov
push
lcall
cmp
daa
pop
dec
out
adc
xchg
repz
add
cmpsl
push
adc
pop
sbb
push
subb
or
jb
movsb
inc
xlat
mov
bound
lret
pop
stos
lcall
js
testb
dec
add
mov
mov
and
add
and
int3
inc
pop
outsb
fdivrs
jle
scas
icebp
or
sbbb
and
add
push
sub
xchg
xchg
xorb
mov
mov
sub
sbb
ret
int
jg
popf
xlat
addr16
out
lret
cmc
xchg
pop
jge
push
sbb
fsubl
mov
pop
push
push
stos
fmull
leave
loope
adc
aam
adc
jns
push
push
test
mov
push
popa
movsb
push
fprem1
les
jg
mov
jae
push
ret
je
scas
jmp
pop
pop
pop
cmc
clc
add
stos
or
mov
mov
dec
push
jecxz
loope
xchg
xchg
ret
jo
or
mov
xor
adc
sahf
dec
mov
add
fildll
test
push
mov
fisttps
jle
inc
imull
mov
sti
sub
and
xchg
loopne
sub
mov
pushf
or
in
sbb
add
add
enter
and
popl
pop
lahf
xchg
sbb
addl
inc
push
or
sub
xor
mov
int
push
add
push
pop
mov
loopne
pop
bound
adc
push
jo
enter
or
stos
xchg
xor
in
xor
add
cli
dec
int3
stc
ss
jb
dec
mov
sub
mov
push
jae
mov
mov
mov
mov
fsubr
cld
lret
cmp
rcl
iret
xor
mov
jle
test
xor
inc
push
dec
out
std
jo
popa
xchg
mov
sub
shrb
mov
outsl
cwtl
cld
xchg
arpl
xchg
shll
add
fsub
or
addl
mov
inc
enter
jmp
fsubl
push
xor
or
les
ja
sbb
xor
iret
in
push
cli
or
pop
mov
sbbl
jg
mov
adc
cmpsl
xchg
inc
jns
sub
or
mov
in
mov
pop
jecxz
call
cwtl
sub
notl
pop
jmp
push
mov
sub
imul
test
xor
dec
push
js
sti
mov
adc
or
outsl
mov
inc
scas
add
bound
sub
mov
adc
sub
cmp
xchg
cs
lret
adc
jl
sbb
test
roll
lea
rol
fwait
add
or
jg
push
fs
push
imul
lret
cld
jnp
mov
cltd
aam
fcoml
inc
fadd
or
adc
push
ds
mov
dec
dec
add
fwait
daa
cmpsl
mov
sub
data16
sti
in
in
cmp
shl
push
int3
cmpsl
aad
jb
hlt
inc
xor
and
repnz
sti
cmp
loope
or
lods
mov
add
mov
adc
loop
ss
movsb
jno
pusha
pop
mov
ds
lret
jnp
push
jb
adc
sub
jae
addl
rorl
fstpl
ja
mov
dec
dec
cmp
jae
and
data16
cli
je
insl
adc
inc
push
cmp
pop
mov
xor
lock
outsl
int
jne
mov
or
adc
cwtl
jns
adcl
mov
dec
data16
sbb
js
outsb
dec
imul
jne
icebp
mov
mov
adc
pop
dec
sub
mov
add
arpl
daa
inc
push
adc
inc
mov
pop
sarl
adc
sti
ret
sti
cld
sbb
mov
cmp
jle
push
sub
mov
popa
add
testl
dec
push
imul
or
add
sarb
push
outsb
fdivr
cmpl
fidivl
adc
or
inc
daa
cld
lahf
sbb
insl
enter
ret
imul
ja
mov
out
cmp
test
ss
fisubrs
pusha
adc
dec
push
cmc
movsl
or
mov
cmp
mov
pop
adc
aas
jb
in
jmp
sti
mov
movsb
scas
repz
shll
lods
sti
loope
inc
lahf
cli
mov
and
pop
mov
mov
xor
xchg
cmp
bound
push
loope
adc
or
cs
push
and
and
inc
jmp
leave
repz
xor
or
hlt
mov
insl
fisubrs
lods
add
pushf
inc
pop
mov
or
xchg
out
ljmp
jns
int
pop
adc
sbbl
cmp
filds
sahf
daa
shll
movsb
adc
add
mov
repnz
jle
call
in
push
sti
sahf
pop
call
mov
add
cmpsl
cmp
mov
ss
push
pop
sbb
push
xor
pop
lcall
insl
mov
rorb
push
dec
imul
xor
mov
inc
xor
mov
cmp
jl
in
dec
in
mov
xchg
push
stos
xlat
lea
daa
mov
or
or
or
mov
decl
leave
int3
insl
test
lret
stos
in
add
fs
rclb
leave
xchg
or
and
xchg
adc
and
cmpsb
sub
dec
cmp
loope
dec
and
icebp
aas
add
xor
cmpsb
test
in
add
xchg
into
insb
jecxz
fcompl
jae
xchg
std
adc
cmp
sbb
mov
sub
sahf
shll
into
insb
fnstcw
sbb
push
stos
push
incl
sbb
jg
pop
jp
js
inc
int3
lret
sbb
mov
ja
sahf
jne
push
ficoml
cmp
or
cltd
popa
jne
fistpll
cmp
lea
jno
je
icebp
mov
adc
jg
inc
xchg
fs
mov
add
xor
cmpsb
lahf
rorl
ss
pusha
push
test
inc
daa
pushf
ficomps
mov
mov
jbe
sbb
adc
mov
mov
cmp
xchg
push
fstps
xor
jae
mov
hlt
xchg
stos
cmpsb
ss
cmp
rol
push
loopne
popa
mov
mov
lahf
push
testl
clc
repz
or
out
jg
xchg
icebp
mov
popa
push
sub
jmp
daa
loopnew
int3
cli
sbb
xor
mov
jnp
dec
pop
pop
mov
and
shll
add
add
sbb
sub
out
xchg
adc
jnp
int
icebp
loope
aaa
addr16
into
pop
test
sbb
out
and
rcll
insb
sub
mov
outsl
mov
mov
push
lods
inc
jle
test
mull
jno
pop
push
and
add
cs
test
lret
call
mov
inc
ljmp
fcmovnb
test
adc
adc
adc
pusha
jnp
dec
add
inc
stos
inc
push
jbe
dec
fcoml
les
and
dec
push
repnz
inc
rcl
testb
mov
mov
call
add
pop
inc
out
lea
bound
test
clc
cmp
in
test
or
mov
xchg
mov
dec
gs
pop
int3
push
into
cmp
fldenv
jb
mov
pop
push
std
and
subl
push
fdivr
bound
repz
push
loop
flds
pusha
inc
fimuls
bound
fmull
mov
cmpsb
jns
pushf
scas
jmp
and
fbld
jno
xor
addl
loope
ret
adcb
pop
jge
and
jg
and
xor
mov
pop
lock
push
icebp
push
push
divb
loop
mov
xchg
icebp
adc
push
dec
and
cwtl
ss
call
mov
insl
inc
cld
cltd
xlat
push
leave
or
imul
mov
dec
adc
push
loope
xchg
xchg
xor
in
xor
push
sti
fildl
push
fwait
int
or
pop
sub
inc
add
out
inc
or
pop
pop
sub
xchg
leave
data16
das
jno
aaa
push
test
xorb
jl
mov
das
dec
jmp
dec
movsb
add
shrl
stc
add
mov
ljmp
out
loop
clc
or
out
mov
push
in
mov
and
xchg
mov
mov
cmp
xor
jge
mov
in
mov
icebp
mov
ret
mov
dec
dec
dec
addps
mov
out
hlt
xor
int
aaa
add
dec
cmpb
scas
ss
or
test
xor
fs
test
enter
add
cli
add
sub
xchg
js
rol
jmp
and
nop
icebp
mov
sub
adc
inc
push
mov
loop
fcmovnbe
cltd
sub
bnd
js
mov
lods
adc
pop
and
int
jbe
ds
cld
imul
sbb
rcll
stos
add
mov
mov
add
or
iret
pop
mov
inc
mov
iret
in
cmpsb
stos
pop
push
inc
das
leave
mov
dec
sbb
and
cmp
stos
jl
inc
sub
aaa
or
jo
lcall
mul
add
add
clc
push
dec
shrb
inc
add
data16
ret
mov
xchg
std
pop
sub
jns
add
adc
sub
test
shrl
and
lds
mov
xchg
stos
cmp
jg
push
ja
xchg
dec
fldenv
out
test
ficomps
and
mov
movsl
int
add
xchg
cmp
sbb
cltd
mov
das
out
aam
cmpsl
testb
int3
lcall
lds
fwait
cltd
adc
xor
push
test
lcall
add
dec
loope
lret
stc
sub
sbb
stos
xchg
push
mov
dec
push
das
jg
jne
cmp
mov
icebp
je
mov
fdiv
xor
cmp
dec
mov
sub
jl
add
insb
sub
mov
pushf
inc
ja
jnp
pop
jge
inc
jnp
les
jecxz
sbb
adc
lock
pop
pushf
movsb
push
lock
jb
sbb
mov
and
push
inc
lods
scas
pop
sbb
or
sbb
xor
js
xchg
stos
pop
pusha
jbe
je
mov
imul
popf
addb
idivb
xlat
add
jae
inc
fwait
and
mov
sbb
mov
xchg
imul
mov
sbb
mov
inc
cwtl
and
mov
sub
pop
lret
loop
dec
test
xchg
lds
in
clc
in
jge
sub
jmp
or
mov
sti
int3
mov
sbb
xor
iret
mov
stos
and
mov
push
push
inc
dec
inc
mov
fwait
pusha
pop
dec
fiadds
mov
hlt
repz
in
xlat
pop
hlt
jl
sub
jle
mov
and
int
clc
ja
push
xor
jns
dec
lahf
cld
movsl
cmp
pop
pop
or
push
inc
repnz
sub
jge
cs
lock
push
sbb
je
div
js
fs
imul
stos
rcrb
arpl
inc
jnp
rcl
loopne
add
dec
inc
test
icebp
je
jne
mov
mov
inc
mov
scas
cmp
imul
imul
jb
stos
pop
dec
test
push
inc
outsb
sub
jnp
add
jbe
or
sub
leave
repnz
jne
mov
xor
xchg
mov
cmp
mov
mov
iret
data16
and
jo
dec
aas
ret
and
cmp
andl
cmpl
jge,pt
mov
or
fs
and
add
mov
test
enter
sbb
into
cltd
ficompl
imul
shll
int
les
fbld
lahf
fdivr
popa
sti
out
shlb
in
test
in
mov
enter
mov
jg
cli
jnp
or
and
jl
mov
outsb
sarb
inc
scas
cmpsl
sbb
jne
fiaddl
movsl
mov
ret
or
fnstsw
push
cmpsl
imul
adc
mov
xchg
adc
shlb
jle
call
js
shlb
push
jp
inc
ds
push
imul
and
ljmp
call
gs
fmul
adc
and
sbb
leave
xchg
and
shl
in
xlat
mov
push
jns
jp
out
add
imul
shl
aaa
mov
aas
add
add
imul
xchg
pop
xlat
pop
mov
mov
pusha
dec
rcrb
push
daa
mov
shll
adc
xchg
push
lds
dec
stos
mov
mov
fistps
mov
lcall
mov
loopw
xorb
push
data16
inc
xchg
prefetchnta
xchg
jmp
out
test
jp
repz
mov
fimull
pop
incb
test
push
and
push
fdivl
mov
lea
fidivrs
mov
repnz
and
pop
sbb
inc
ret
adc
es
sub
inc
cmova
std
repnz
movl
into
addl
ret
int
and
ss
clc
sub
in
or
jmp
jecxz
mov
mov
pop
or
mov
sub
mov
js
cmp
adc
in
inc
insb
xor
les
jg
xchg
dec
pop
or
cmpsl
pop
xor
pop
push
fnstcw
lcall
mov
xor
loopne
movsb
sbb
push
scas
clc
mov
or
pop
adc
outsl
or
je
mov
sbb
cmp
hlt
inc
sbb
sub
push
push
cld
jno
or
and
js
jb
addr16
fst
xchg
dec
or
and
jl
stos
popf
mov
pop
push
jl
xchg
mov
fxch
lods
push
adc
les
aaa
sahf
dec
cmp
int3
dec
jge
sbb
push
mov
dec
je
mov
xchg
ret
hlt
push
fisttpl
decb
fbld
nop
pop
lcall
lret
mov
int3
sub
mov
xchg
mov
add
shl
ljmp
and
andl
dec
xor
or
pop
jbe
mov
hlt
ret
push
push
jge
add
addr16
and
jns
popa
dec
outsb
sub
neg
pop
sbb
mov
lcall
inc
jg
jl
dec
insl
stc
lds
push
xchg
sahf
ret
jae
movsb
mov
call
and
and
cmp
adc
cmpl
addl
xchg
jne
ljmp
jge
pop
jge
cmp
int
inc
jmp
out
test
ret
cmc
fadds
or
fisubrl
shlb
fwait
std
mov
test
leave
mov
and
add
shrb
mov
or
mov
pop
leave
mov
mov
sbb
lahf
ds
pop
jmp
das
mov
in
sub
dec
fadds
push
sbb
xor
sub
flds
fstpt
ret
xor
stos
jnp
push
faddl
daa
xchg
pop
dec
shlb
xor
sbb
jae
loope
ffree
or
or
xor
ror
xor
dec
insb
jo
fstpt
sti
ret
mov
jmp
push
daa
imul
popa
mov
lods
lea
test
xor
push
sub
adc
fists
dec
push
out
ljmp
call
mov
push
mov
imul
mov
xchg
push
loop
cmpsl
pop
lea
pop
mov
and
and
je
sbb
test
cmp
fidivrl
das
jae
dec
andb
push
cli
adc
mov
fs
adc
lret
fmull
icebp
out
cli
xchg
jp
xor
mov
inc
cmp
imul
lods
std
sbbb
add
imul
sbb
mov
sbb
adc
cmp
daa
cwtl
popf
ret
das
add
scas
jo
sti
mov
inc
js
pop
outsl
frstor
outsb
add
xor
in
pop
fs
je
push
cwtl
mov
xor
call
sub
push
test
lcall
out
xchg
insl
cmc
and
mov
mov
cli
das
dec
jns
sub
std
in
fdiv
or
dec
push
lods
jmp
adc
mov
out
or
shl
push
insb
xchg
idivb
inc
push
add
rcrl
clc
sub
loope
jecxz
sbb
mov
adc
fisttpll
jb
pop
testl
inc
mov
jp
hlt
loop
or
out
mov
fmull
or
clc
push
add
push
arpl
dec
fcmovnb
jecxz
call
add
idivl
loope
and
mov
xorl
add
out
sbb
icebp
mov
out
in
lret
mov
ja
cmc
xor
notrack
pop
pop
imul
testl
xchg
in
inc
addl
pop
mov
dec
inc
and
ds
ret
mov
dec
jle
cwtl
adc
inc
jmp
test
and
ret
stos
call
movsl
scas
enter
rcr
movsb
or
cmp
rcr
fs
fildl
push
cmp
shlb
cmp
add
pop
in
push
pusha
lcall
mov
insb
test
data16
aam
cmp
inc
sub
pop
push
ss
fisubrs
cmp
xchg
adc
sbb
ret
pop
mov
jae
int3
cmp
sahf
fadds
in
fmulp
jo
and
cmpsb
mov
mov
stos
movsl
jecxz
push
sbb
aas
jo
je
out
push
adc
addr16
adc
adc
and
fistpl
movsb
mov
or
lret
mov
nop
or
xor
in
pop
adc
mov
into
fisttpll
flds
ret
xor
xorl
push
pop
cpuid
pop
sbb
or
jecxz
mov
nop
popl
inc
adc
push
pop
sti
fistpl
aad
enter
cld
andb
push
mov
push
movsb
hlt
push
cmp
idivl
or
outsb
mov
lock
mov
dec
inc
push
repnz
test
mov
jp
dec
jmp
into
lock
imul
lcall
jp
mov
xchg
mov
ret
sbb
adc
lods
xchg
test
xor
pop
cltd
dec
dec
jb
sbb
int3
jecxz
jl
or
rcll
mov
push
mov
inc
inc
daa
push
aam
xchg
lret
sub
pushf
dec
ljmp
adcl
in
cld
mov
in
jb
rcr
popf
mov
and
mov
push
or
push
dec
sahf
insl
or
ljmp
lahf
cmc
clc
pop
es
ja
or
insl
mov
lahf
pusha
cmpsl
dec
push
stos
adc
jbe
lods
out
mov
ss
mov
ja
jp
fcmovnb
ret
frstor
outsb
je
or
cmpsb
lahf
pop
jae
dec
gs
inc
sub
das
push
lods
es
or
push
scas
push
or
movsl
pop
aad
test
adc
sbb
pop
dec
nop
sub
mov
xchg
inc
mov
std
ja
xchg
sbbl
and
jno
mov
xchg
lods
pop
mov
and
orl
dec
push
std
sub
mov
sub
cli
mov
out
in
orl
fstpt
in
loop
jle
xchg
arpl
jbe
ljmp
lds
in
push
addr16
xchg
out
cmp
clc
mov
popa
dec
dec
or
mov
leave
cmp
pusha
insb
mov
lock
jmp
mov
fdivrp
in
adc
dec
add
cmp
dec
mov
dec
loopne
aaa
mov
jg
fcomp
test
pusha
cmpb
ret
sti
gs
push
xorb
stc
shll
or
xor
ljmp
inc
sbb
scas
jl
lahf
mov
cld
outsl
inc
sbb
adc
and
fimuls
test
jnp
and
gs
cmpsb
pop
and
jge
add
jmp
sub
lcall
add
adc
pop
into
pop
or
ds
push
mov
in
push
ror
pop
popa
push
mov
sbb
xchg
xchg
push
sub
xor
jg
xchg
sbb
add
outsl
push
cltd
xor
sahf
jbe
xor
cs
pop
xrelease
xchg
or
sbbl
je
mov
add
stos
push
mov
cmc
cmp
inc
sub
pop
inc
js
pop
jge
push
imul
inc
jmp
push
lahf
lods
and
or
jo
in
pop
sar
adc
pop
and
outsb
pop
push
xchg
das
lods
pop
orl
imul
or
bound
loope
inc
add
aaa
test
dec
ret
inc
out
jae
mov
loop
test
xor
cmp
mov
mov
outsb
mov
inc
dec
xchg
pop
lret
stos
jecxz
xor
je
mov
imul
js
js
and
mov
arpl
sbbb
cwtl
inc
js
mov
lods
enter
dec
sbb
stos
les
repnz
leave
fildll
fistpl
jb
cmp
out
or
std
in
sbb
and
inc
mov
in
jl
dec
fmul
pop
fs
mov
sub
dec
shlb
adc
mov
and
test
pop
in
hlt
insl
pop
or
cmpsl
push
lods
and
lahf
xchg
pop
mov
cmp
mov
outsl
insl
lcall
sbb
mov
loop
adc
cmp
lret
cld
std
xchg
insl
movsl
in
fnsave
pop
call
andb
iret
mov
mov
pop
stos
rclb
mov
es
sub
mov
mov
sysenter
test
mov
setl
and
movsb
ret
mov
lds
icebp
insl
push
xlat
dec
fldt
lret
fcomps
jne
push
add
inc
mov
test
sbb
leave
icebp
jmp
or
stos
ret
imul
mov
fdivrp
push
icebp
mov
in
pop
scas
pusha
int
ja
add
cmp
outsl
sub
jns
push
mov
add
xor
dec
push
xchg
add
lock
sbb
hlt
and
adc
push
or
sarl
sbb
adc
movsb
jbe
cltd
jl
in
ds
subb
mov
test
adc
cmpsl
adc
shll
adc
fs
leave
les
loop
lods
loopne
sbb
popl
das
push
push
dec
cmp
sub
push
mov
ss
push
sti
loop
xchg
add
jno
mov
in
push
mov
or
loope
movsw
sbb
mov
icebp
pop
add
adc
in
jno
ja
jns
pop
adc
pusha
xlat
pop
addb
sub
les
pushf
int3
bound
mov
shlb
pusha
cmp
daa
sbb
testb
dec
xchg
inc
daa
aaa
scas
push
xchg
sub
add
jmp
pop
xchg
xchg
jae
shl
mov
mov
incl
jns
fstpl
cmpsl
and
jne
inc
push
fsubrs
adc
clc
loopne
fimuls
ss
xor
sub
push
lods
adc
cmc
call
add
and
jecxz
dec
push
mov
sub
ja
movsl
add
sub
les
in
mov
push
push
fimuls
scas
sbb
loope
mov
jns
or
xor
jl
out
imul
ret
nop
lea
sub
sbb
sahf
pushf
or
xchg
push
lods
loope
pop
dec
outsb
js
mov
xchg
xlat
mov
push
dec
xchg
movl
add
popf
das
fs
orb
dec
fsubrl
aam
cmp
xchg
js
inc
or
cmpsb
enter
and
loopne
mov
testb
stos
mov
adc
inc
xor
xchg
mov
in
rcrb
push
xchg
mov
mov
push
adc
inc
dec
jp
cmp
ja
cli
stc
and
movsl
sub
mov
loopne
stc
cmpsb
negb
les
jb
into
lret
adc
jg
test
or
sahf
pop
mov
xlat
imul
mov
mov
fwait
or
xor
push
fs
jno
repnz
test
stos
insb
xor
mov
insl
jo
rolb
fdivs
xchg
bound
xor
subb
sub
fwait
push
dec
sbb
repnz
add
push
loop
int
mov
mov
or
loop
mov
pusha
add
repz
inc
adc
fsts
and
scas
sub
cld
mov
jnp
stc
lahf
adc
stos
idivl
jne
sbb
aam
dec
sub
xor
sbb
add
mov
mov
jecxz
cmp
jb
mov
loope
mov
adc
cwtl
fmuls
incl
jmp
es
ror
push
mov
sahf
ja
movsb
jl
and
dec
repnz
mov
jb
in
enter
or
dec
std
xor
xorb
cltd
push
add
mov
pop
adc
mov
cmp
sbb
mov
mov
mov
clc
imul
jecxz
push
jmp
mov
mov
loope
repz
push
push
push
dec
jnp
push
and
leave
fs
push
insb
lock
cmp
popf
add
lods
lds
adc
cmp
jecxz
aas
aas
shll
cli
loope
pop
shll
out
pop
out
push
in
adc
add
test
rcr
fists
pop
dec
inc
lcall
jo
and
lods
mov
mov
inc
lea
pop
add
mov
out
push
cmc
sbb
clc
aad
out
mov
in
jmp
movsl
pop
js
stos
mov
pusha
pop
loopne
mov
or
nop
cmp
add
enter
mov
inc
adc
push
and
std
rep
cld
inc
daa
int3
fisubrs
push
and
test
mov
mov
idivb
cmp
xor
or
lret
shr
pop
out
pop
pusha
mov
inc
cmp
lods
cmp
inc
ret
arpl
jb
pop
xchg
loopne
out
dec
test
mov
int3
test
shlb
mov
decl
mov
cmp
jb
addr16
adc
insb
pop
cmp
mov
inc
mov
mov
pusha
cmp
cmpsb
sahf
loopne
mov
inc
mov
addr16
mov
rcll
arpl
cwtl
push
insl
imul
mov
into
adc
sub
int3
je
and
cmp
or
mov
jle
push
jo
shll
insb
dec
jb
addr16
rcl
out
push
push
movb
cwtl
adc
add
pushf
push
lahf
gs
xchg
sub
fwait
mov
mov
pusha
pop
cli
jns
lods
sub
lock
call
jmp
push
adc
lods
test
jmp
cmp
push
jmp
pop
movsb
cmpsl
int3
gs
imul
push
dec
add
loope
adc
mov
lods
in
sbb
inc
scas
fsubl
sub
push
or
ds
sub
fcmove
insb
icebp
fwait
add
cmp
inc
or
data16
insl
adc
xchg
add
sbb
cmp
cmpsl
cwtl
sbb
push
add
cld
xor
dec
jmp
pop
mov
mov
mov
clc
jno
mov
inc
jae
int
aaa
jp
addl
addr16
pop
in
pop
insb
aaa
xlat
jns
in
sbb
sbb
out
add
or
movsb
pop
jbe
xor
dec
bound
mov
insb
loopne
dec
es
mulb
jne
push
test
xchg
cld
outsl
push
gs
pop
cmpsb
xchg
or
xchg
sbb
jmp
push
inc
shrl
fiaddl
push
cmpsl
mov
or
shlb
nop
mov
addr16
fdivp
daa
iret
add
fs
sbb
pop
pop
ljmp
in
int3
lock
std
pushf
fwait
xlat
push
sarl
movsb
dec
lea
loop
push
js
std
sub
inc
cmp
jbe
add
mov
ljmp
mov
loop
add
dec
stos
or
jle
jmp
lds
adc
incl
mov
mov
frstor
out
gs
in
dec
or
dec
outsb
add
or
pop
cli
aad
mov
mov
mov
popf
stos
stc
loop
add
loopne
pop
add
mov
mov
dec
fidivs
or
push
cmp
in
add
adc
adcl
pop
fcmovnu
insb
or
mov
pop
movsl
sub
push
bound
fdivs
pop
add
test
pop
xor
mov
inc
jle
in
xor
adcl
out
cmp
cmp
xor
add
out
sbb
inc
or
xor
pop
add
mov
dec
outsl
xchg
jo
sub
inc
push
pop
mov
out
mov
es
popa
push
aad
push
push
add
sbb
leave
lcall
loopne
jmp
and
repnz
cmpsl
cltd
push
in
clc
das
xchg
cwtl
or
xchg
mov
add
mov
mov
mov
cmp
sbb
mov
cmp
mov
shrb
in
clc
sub
shll
sbb
and
fcoml
std
loope
push
js
mov
xor
inc
sbb
inc
inc
shll
xchg
dec
lcall
xchg
pop
cmp
mov
adc
enter
popf
xor
mov
mov
ljmp
and
jmp
or
dec
testl
xchg
ret
pop
pusha
add
push
push
clc
outsl
mov
outsb
test
jl
sbb
mov
sbb
xor
jo
test
dec
std
lds
out
aam
icebp
mov
xchg
inc
pop
nop
arpl
mov
repz
adc
out
xor
cld
fmuls
prefetch
or
push
fistl
cwtl
sbbl
cld
ljmp
mov
test
jae
inc
push
je
test
sub
pop
push
fwait
dec
push
mov
pop
xchg
adc
mov
xchg
popa
leave
jge
xor
and
aam
sub
pop
mov
sbb
orb
stc
ret
and
jbe
mov
dec
sbb
dec
stos
js
stos
testb
cmp
vpmacsdd
sub
je
test
dec
pop
inc
push
mov
sub
je
jbe
std
and
mov
in
cmp
fwait
push
jnp
sarl
pop
mov
pushf
dec
mov
mov
and
data16
fcomp
xchg
push
movsb
ret
inc
aaa
arpl
std
jle
cmp
out
push
mov
hlt
ficoml
mov
jne
or
popf
and
popa
pop
in
and
and
test
xchg
mov
cmpsb
loopne
imul
xchg
lock
ljmp
mov
xor
add
outsl
add
cltd
aad
sub
js
xor
add
or
sub
inc
xchg
mov
popf
pop
les
jle
cmp
jae
mov
test
sub
dec
sbb
sub
lcall
rorb
jge
popf
icebp
incb
in
mov
or
in
test
shl
mov
stos
mov
cmc
outsl
cld
add
and
std
mov
jne
and
push
pmaddwd
test
jmp
test
iret
sub
jo
lret
mov
mov
rclb
imull
push
dec
sahf
adc
les
adc
sbb
stos
mov
jl
push
fisttpl
adc
pop
mov
inc
aaa
mov
push
push
sub
adc
aas
je
mov
sbb
mov
inc
insl
xor
push
jge
ljmp
jecxz
and
mov
pop
jecxz
dec
shrl
xchg
andl
mov
hlt
xor
jo
cli
mov
sti
insl
add
adc
add
pop
fisttpl
addb
popa
fdivrs
inc
sarb
xchg
mov
loopne
or
jg
add
sbb
pusha
mov
movsl
add
pop
rcrb
mov
lds
sub
sbb
push
add
pop
or
js
lret
fadds
dec
or
or
sahf
fucomp
cwtl
stc
xor
jnp
jmp
mov
call
fimuls
out
jp
cmp
nop
mov
shrl
pop
inc
in
mov
or
sub
mov
mov
sbb
cmp
lret
inc
loope
xlat
jmp
dec
and
pop
and
out
mov
xchg
xor
bound
fprem1
stos
jno
ret
insl
repnz
xor
orb
xchg
lcall
arpl
sbb
ret
mov
dec
mov
jle
push
cmpsl
leave
lahf
test
xchg
push
mov
xor
imul
mov
int
outsb
mov
in
push
add
test
adc
hlt
mov
mov
xchg
mov
jg
mov
je
mov
push
cmp
and
cwtl
dec
mov
jecxz
push
sti
xor
cmp
lea
jno
jp
cs
and
xchg
adc
mov
cmp
lret
pop
pop
int
ss
hlt
jbe
ss
add
js
repnz
popf
pop
lods
shr
loop
subb
int
rclb
aas
ret
addr16
sub
dec
or
popf
push
mov
jne
gs
sbbl
add
mov
mov
cmc
add
push
and
hlt
popa
pop
aad
xlat
xchg
inc
xor
imul
xchg
adc
aas
sub
mov
xor
sarb
subb
add
dec
cld
and
pop
lock
cmp
outsl
pop
das
or
mov
jp
sti
das
cli
outsl
jnp
out
sbb
push
dec
mov
xor
and
testl
or
out
dec
mov
iret
jp
add
fmuls
jecxz
jo
mov
hlt
mov
loop
call
ret
add
aas
dec
and
out
sub
cmpsl
ja
lds
fnstenv
mov
inc
lock
mov
push
rclb
push
test
pand
mov
jge
xchg
shr
out
sub
shlb
push
test
cmp
movsb
xchg
mov
mov
mov
daa
cmp
scas
jecxz
cld
and
xchg
dec
dec
int3
cmp
cmp
adc
fiadds
lods
cwtl
jecxz
into
jbe
pop
push
movsb
mov
ja
fistps
stos
mov
push
nop
or
xchg
ja
xor
inc
add
ja
ret
xor
ljmp
xchg
pop
js
xlat
push
ja
pop
out
shl
addr16
std
out
dec
and
into
ss
xor
jne
inc
ja
fcoms
and
push
mov
lds
adc
and
pop
xchg
ret
bound
dec
mov
xor
dec
cmp
and
into
pop
push
inc
test
pop
leave
insl
sub
sub
push
das
fsubrl
cmp
mov
jge
adc
adc
jmp
lret
add
jge
xor
mov
mov
loopne
mov
xchg
out
fcmovne
flds
and
mull
push
mov
mov
mov
out
call
cmp
and
adc
inc
jnp
add
inc
insl
and
mov
sbb
push
mul
clc
lea
xchg
es
mov
mov
mov
enter
xor
je,pn
pop
add
ret
rcr
ss
stc
in
in
and
sbb
sub
bound
xchg
das
cmp
aas
add
xlat
negl
js
lock
pop
add
orb
pop
xor
mov
test
cmc
ret
lcall
cs
loop
repz
jl
subl
dec
sbb
pusha
mov
adc
mov
jne
cmpsl
adc
dec
sub
in
inc
ds
jge
pop
sub
movsb
js
notl
imul
mov
and
mov
sarb
sub
sbb
xorb
jl
loope
add
ret
fisttpll
inc
jecxz
sti
mov
and
or
inc
xchg
cmp
inc
adc
inc
mov
jl
cmpsl
in
fadds
mov
push
inc
dec
in
aad
out
add
sbb
sub
jg
dec
dec
or
icebp
andl
mov
insl
xor
scas
jnp
xchg
imul
imul
add
js
sub
jg
jno
xchg
leave
es
xor
mov
pop
inc
pop
lret
add
aam
sbb
jmp
lods
mov
sbb
adc
into
nop
pop
xchg
mov
into
mov
inc
mov
mov
and
ja
outsb
aad
sahf
adc
les
cltd
inc
dec
sub
pop
stos
sbbb
in
rclb
add
and
dec
cmp
sti
pop
xchg
roll
sbb
repz
xrelease
xchg
fwait
mov
xchg
scas
es
movsb
leave
pushf
mov
out
cwtl
sub
pop
mov
orb
push
inc
cld
and
push
mov
mov
jp
xchg
movsb
aaa
fs
cld
mov
and
dec
mov
fstps
and
stos
ja
add
in
popf
std
iret
xlat
sub
ss
mov
mov
xorb
in
jo
sbb
or
push
push
mov
sbb
dec
xlat
dec
ja
pusha
dec
rcll
cwtl
push
imul
dec
scas
orl
fmulp
pop
js
mov
sub
filds
dec
insl
call
inc
xor
xchg
xor
sub
sbb
arpl
ret
mov
dec
arpl
cmp
sahf
fwait
fs
cmp
pop
cld
lock
pop
and
dec
and
stos
mov
and
add
lds
adc
inc
cmp
inc
xor
outsl
xor
mov
push
lret
repz
pushl
add
cs
popa
xor
test
rorl
sarb
cmpsl
jecxz
int3
jno
push
jb
cs
sbb
sahf
pop
ss
daa
fcoms
fs
sti
push
push
add
lcall
mov
mov
mov
gs
add
sub
mov
dec
fsubrp
xor
inc
and
xor
popa
popa
ja
or
inc
pop
rcrl
xor
mov
pop
or
push
inc
push
fmull
pushf
lahf
scas
push
mov
insb
test
add
mov
fucomip
pop
sti
jnp
shll
mov
push
xor
jle
mov
in
lahf
mov
sbb
arpl
js
addb
mov
xor
repz
insl
xchg
outsl
or
sti
lret
or
mov
cmp
xchg
cmp
movsl
sbbb
and
and
mov
int
push
mov
test
scas
nop
mov
outsl
xchg
push
rcrb
sahf
loopne
into
pop
test
add
xchg
test
dec
paddsw
enter
mov
jno
ficompl
setg
mov
fisttpll
mov
das
and
xchg
shrl
mov
add
add
inc
sbb
dec
scas
popf
arpl
cwtl
imul
jge
pop
stos
cmpsl
frstor
xchg
pop
mov
mov
adc
ljmp
mov
push
popa
in
xchg
repnz
rcr
jno
fiadds
mov
icebp
in
cmp
hlt
sub
jle
add
mov
sub
push
gs
push
movsl
jbe
test
inc
and
mov
inc
das
ja
mov
mov
lock
jle
stc
sahf
cmp
dec
fsubrs
ja
movb
xchg
rcr
sub
sbb
xchg
cmpb
mov
push
push
gs
arpl
jo
jae
push
push
xchg
add
es
aad
popa
int
dec
add
dec
xchg
xorb
ret
out
mov
pop
adc
imul
cmc
test
mov
daa
or
jo
or
shll
mov
xor
movsl
scas
xchg
push
test
and
mov
dec
and
hlt
add
inc
repz
ret
cs
aad
cmp
or
lock
adcb
fistps
push
aad
dec
mov
jne,pn
mov
cli
mov
pop
lods
fsts
dec
test
push
scas
xchg
mov
mov
sub
push
and
sbb
lahf
aas
frstor
sub
ss
test
lret
cmp
lods
les
ljmp
stc
ljmp
in
mov
mov
in
fldt
shl
add
jne
fcoml
inc
mov
add
push
and
test
pop
cmpsb
sarl
mov
and
repnz
loope
cmp
sbb
inc
lock
mov
add
std
in
arpl
pop
test
enter
adc
jno
fcmovb
pop
jnp
inc
stos
sahf
rorl
mov
je
lret
in
adc
ja
pop
pop
fs
jne
mov
sub
push
fs
pop
xchg
adc
popa
sahf
loope
jmp
cmpsl
xlat
or
out
cmp
xor
pop
mov
sbb
test
int3
divl
ss
imul
jno
push
in
int
push
insl
mov
popa
or
add
sbb
push
inc
cmpsb
stos
ret
mov
shrl
dec
das
dec
mov
dec
push
rcll
xchg
arpl
or
rorb
int3
mov
mov
sarb
shrl
stos
xchg
mov
or
and
lret
ret
jb
adc
jl
mov
into
lock
push
je
pop
imul
ficompl
pop
inc
icebp
jge
jmp
jmp
xchg
mov
mov
jecxz
outsb
hlt
fcompl
cmp
push
pop
ret
xchg
into
inc
mov
nop
jno
shlb
xlat
fidivs
popf
jae
mov
or
sub
in
jl
out
pop
arpl
pop
je
xchg
das
outsl
outsb
pop
cmpsl
test
fnstsw
lret
xchg
stc
daa
je
lds
push
aas
decl
cmp
ja
adc
shl
fs
jno
push
cmpb
and
sbb
ret
xchg
fistl
andb
inc
and
dec
inc
loopne
cmp
cli
inc
leave
mov
pop
push
ret
hlt
loopne
lcall
mov
mov
dec
inc
adc
cmp
xor
shll
fs
xchg
mov
add
cs
inc
pop
imul
popa
jo
cmpb
jge
notb
movsl
jo
push
and
push
imul
es
in
outsl
cmp
data16
and
mov
shlb
mov
xor
insl
sti
pop
cli
stos
adc
imul
jl
mov
sub
cmp
sbb
ficomps
adc
fucomp
or
and
add
push
sarb
out
popa
add
scas
iret
sar
scas
push
inc
andl
mov
or
jne
loop
sbb
jb
pushf
mov
cmp
sub
mov
enter
test
cmp
sub
inc
xchg
insl
xchg
jo
scas
ljmp
dec
push
mov
fsub
sub
cs
int
lret
shlb
inc
hlt
sub
ret
jne
cmp
cli
fistpl
and
dec
insb
sbb
jge
cmpsl
or
dec
js
inc
pop
cmpsb
add
arpl
mov
hlt
mov
mov
repz
call
test
insl
jb
jb
adc
ja
sbbb
popf
ret
cmp
sub
pop
mov
out
orl
mov
test
orl
add
shll
mov
ja
xchg
jnp
int
inc
loope
jecxz
into
cltd
mov
push
stos
and
xchg
aam
je
jno
sbb
dec
int3
sbb
out
lret
jno
add
fwait
dec
sub
setp
cs
jnp
xchg
das
mov
testb
sbb
outsl
cld
pop
aad
and
or
icebp
or
ret
data16
aad
dec
add
sub
jge
and
mov
push
jecxz
cmp
push
cltd
cmp
and
scas
push
push
aam
clc
xchg
stos
in
inc
bound
aaa
rol
adc
mov
sbb
sti
movsb
or
adc
push
stc
iret
and
sub
int3
fstps
mov
sub
or
mov
mov
inc
iret
ss
sub
mov
adc
mov
imul
outsl
pop
stos
sbb
sub
jl
in
push
jge
push
cmp
mov
rcr
cmpsl
push
test
xor
out
imul
jge
rcrb
mov
or
movb
jno
data16
insb
adc
xchg
cld
cmc
sbb
mov
or
lods
adc
push
sub
imul
add
fwait
or
pop
aad
xchg
or
fisubrs
xor
mov
dec
fldcw
mov
mov
push
sub
ds
or
add
add
mov
xchg
jne
shrl
xor
mov
rol
in
insl
push
inc
dec
popf
stos
and
test
push
cmp
out
dec
push
jno
les
aaa
mov
daa
cmp
hlt
fsts
xor
ss
je
jno
dec
mov
pop
xor
cmp
int
mov
xchg
repnz
sub
dec
inc
xchg
mov
mov
mov
fadds
xor
cmp
rcrl
sbb
lea
sub
or
movsb
cltd
xchg
lret
pop
out
mov
sbbb
inc
mov
mov
rcrb
xchg
xor
insl
int3
jbe
mov
cmp
out
mov
xor
adc
int3
xchg
jne
mov
stos
ljmp
loopne
inc
push
movsl
mov
mov
bound
mov
clc
mov
dec
mov
push
ds
adc
inc
inc
test
mov
pop
ds
add
mov
fs
ds
lret
ljmp
test
clc
imul
rorl
sub
je
mov
movl
cmp
std
mov
add
aad
fcoml
cmp
scas
sbb
out
cmp
pushf
lock
test
adc
bswap
repnz
ljmp
sbb
xor
outsb
cwtl
int
xchg
rolb
push
xchg
repz
aas
test
mov
xchg
jnp
dec
outsl
mov
inc
cltd
mov
in
mov
shlb
mov
shrb
or
jno
push
or
xor
nop
ret
mov
or
cs
bound
and
mov
call
xchg
sub
mov
sub
jns
sbb
xor
ror
cwtl
pusha
jecxz
nop
and
cmc
mov
outsb
cmc
or
imul
call
xchg
es
outsl
inc
loopne
mov
shlb
fstpl
lret
xor
outsb
and
push
xor
into
dec
xor
icebp
inc
inc
dec
sahf
adc
pusha
sbb
cmc
sahf
inc
dec
adc
jg
rcr
dec
ret
mov
xlat
xchg
sarb
cli
cld
cltd
adc
repnz
test
pop
jl
push
pop
daa
ds
adc
or
pop
xlat
inc
sbbb
push
mov
in
fbld
mov
inc
mov
lea
test
xchg
orl
mov
mov
mov
dec
faddp
imul
ljmp
scas
sbb
cmpsb
and
xor
mov
mov
xchg
and
jo
push
jl
dec
mov
imul
sub
mov
dec
dec
pop
lods
add
loop
mov
daa
test
rolb
incl
pop
dec
das
mov
stos
test
in
lea
and
or
inc
mov
out
cmp
ret
lock
je
push
mov
jle
inc
jb,pn
cli
jle
push
pop
jl
ljmp
mov
fcompl
or
mov
sahf
xchg
mov
jmp
push
mov
add
sbb
dec
inc
lcall
out
xor
and
push
jg
sbb
jp
outsb
movsb
fstpl
sub
xchg
lea
dec
test
push
iret
mov
fs
pop
stos
mov
lock
rcl
mov
sub
mov
mov
jb
rorl
stc
insb
test
sbb
fisubs
nop
and
push
jns
test
mov
lods
push
cwtl
adc
push
mov
popa
shlb
xor
pop
adc
scas
mov
icebp
sbb
in
inc
faddp
push
or
mov
test
sti
lods
mov
lods
and
std
inc
cmp
lcall
in
add
mov
pushf
xor
xlat
cmpsb
test
cmp
cmp
adc
or
notl
xchg
pop
dec
shl
cmp
mov
divl
rcrb
icebp
cmpl
fs
ss
test
stos
jnp
xchg
mov
js
in
push
mov
ds
sbb
ficompl
or
lret
xor
fbstp
nop
sub
jb
pop
cmpl
jne
jno
lods
call
dec
sarb
hlt
mov
sbb
cmpl
push
push
js
mov
jmp
lock
mov
in
or
xchg
mov
mov
push
stos
sti
pop
and
jae
push
loopne
test
xchg
jo
in
shll
or
sub
jle
xchg
std
mov
pop
xchg
push
jb
int
pop
imul
and
sbb
mov
je
gs
popa
out
sub
jecxz
shll
jmp
es
outsl
ds
jle
stos
adc
out
pushf
lods
adc
jnp
xor
insb
xchg
and
int3
mov
push
lock
fstps
mov
mov
mov
out
pusha
sbb
movsb
jp
call
xchg
bound
mov
jl
mov
movsl
cltd
call
stos
mov
loope
mov
fisttpl
dec
andl
fdiv
xchg
jnp
test
out
push
add
cmpsb
jb
loopne
jecxz
in
int3
insl
mov
out
int3
ja
repz
popf
sbb
adc
test
dec
popf
inc
cmp
sbb
pop
mov
out
sbb
dec
dec
loopne
mov
and
or
push
lods
adc
fwait
lds
push
stos
leave
insl
cli
dec
push
cs
daa
push
ret
mov
daa
and
mov
test
fistl
stos
cltd
cmp
mov
pop
xchg
cli
pop
mov
aas
adc
mov
ljmp
std
or
int
jb
dec
xor
int3
sub
xchg
shrl
lahf
inc
lahf
std
and
cli
sbb
mov
xor
mov
jae
enter
push
pop
dec
mov
int3
sub
add
cmp
mov
or
out
mov
lods
mov
call
incl
shll
lods
es
xlat
mov
xchg
aad
mov
in
gs
nop
in
or
push
jg
or
lret
int
xchg
and
pop
in
fldcw
data16
mov
pop
xlat
xchg
je
xchg
mov
mov
repz
cmp
inc
xor
jmp
into
inc
out
inc
mov
adc
mov
lods
xchg
jge
addr16
std
sub
jle
jmp
jecxz
cmp
sbb
clc
mov
cmp
cs
mov
push
xor
orl
jo
aam
pop
mov
nop
mov
decl
dec
in
and
inc
int3
mov
arpl
sahf
dec
xor
add
dec
adc
jmp
mov
cmp
pop
inc
sbb
and
mov
divl
dec
add
hlt
dec
add
aad
push
popf
stos
or
aad
inc
out
sbb
pusha
insl
popa
cmp
push
adc
inc
leave
clc
adc
popf
ret
popa
inc
jle
popf
jmp
shl
dec
dec
mov
lods
inc
xchg
inc
cltd
xchg
fsubs
ret
adc
pop
mov
lds
fsts
aas
ljmp
scas
popf
pop
and
dec
outsl
fsubrl
adc
ffree
dec
andl
stc
out
in
lahf
in
dec
xchg
jg
addr16
je
popa
dec
push
push
push
pop
pop
cli
lods
out
clc
push
and
and
add
adc
mov
mov
or
es
cmp
ja
mov
and
mov
mov
mov
cmp
mov
pop
sbb
icebp
js
mov
sbb
pop
adc
ja
and
shl
jae
aad
mov
pop
jg
cmp
dec
pushl
pop
repnz
or
xchg
daa
fs
pop
jns
mov
pop
aad
icebp
test
cltd
pusha
int
pop
push
fdivrl
std
or
icebp
mov
repz
mov
mov
mov
xlat
pop
and
sbb
sbb
push
nop
inc
xor
jae
repnz
xor
sbb
mov
fsubrl
cmp
jne
mov
stc
scas
repz
sbb
jne
imul
fs
pop
mov
movsb
dec
lret
shr
test
mov
mov
pop
adc
outsl
std
mov
enter
mov
loopne
imul
xchg
in
shr
scas
out
movsl
lahf
jl
les
imul
sbb
push
sub
xlat
jae
and
repnz
mov
jbe
inc
out
ret
sahf
adc
lret
sbb
sub
mov
xchg
lds
push
xchg
sub
push
std
mov
cmc
mov
mov
ja
sarl
or
cmp
sti
add
mov
cmp
lret
fsubl
ret
aaa
stos
jo
daa
incb
mov
pop
push
push
dec
imulb
fs
fstps
sbb
cltd
cmpl
sbb
pcmpeqd
mov
notb
cld
subl
jecxz
ljmp
xor
pop
dec
xchg
test
or
adc
or
ror
nop
movsl
in
dec
sbb
mov
rcrl
popf
inc
mov
and
cmp
pop
mov
pushl
xor
cmp
add
iret
cmp
mov
pusha
mov
adc
sbb
gs
push
imul
rcll
cmp
lahf
jns
psubb
pop
ljmp
arpl
fs
stc
xchg
cmpl
ljmp
das
mov
fdivrl
inc
loope
or
and
inc
adc
push
or
xchg
je
dec
icebp
or
pop
nop
xor
xlat
mov
pop
int
jmp
lret
push
add
adc
pop
pushf
leave
mov
test
aam
arpl
add
int
mov
and
mov
scas
arpl
into
rorb
push
jnp,pn
decl
fwait
or
lods
loope
jp
rolb
inc
mov
inc
adc
clc
xchg
mov
xchg
js
out
mov
sbb
rcrl
mov
mov
sub
cli
outsl
xchg
add
stc
in
mov
fcomps
stos
mov
insb
sbb
inc
jge
jo
push
push
pop
nop
ss
add
aas
xchg
fldenv
pop
dec
adc
sbb
mov
les
jo
sbb
jnp
notb
loop
adc
nop
test
pop
sub
mov
sub
pop
pop
jp
mov
mov
dec
or
rcl
jp
ficomps
in
out
xor
addr16
jno
cltd
cwtl
cmpsb
jae
pop
das
inc
cltd
mov
in
das
sbb
pop
lds
push
sti
jp
scas
test
pop
mov
cmp
lahf
ds
popf
loope
out
jmp
rcrl
pop
movsb
ljmp
mov
push
jl
stos
ja
stos
push
mov
pop
adc
stos
cmp
xlat
xor
divb
jl
lods
test
lret
test
or
cli
pop
js
ret
test
inc
je
xchg
dec
out
out
xor
sahf
add
sahf
das
jl
stos
jo
je
lock
mov
pop
xchg
pusha
mov
es
popf
sub
test
les
mov
and
lock
lds
bound
sub
xchg
add
xchg
jbe
out
addr16
popa
cld
lods
xor
movsl
ffreep
sbb
xor
sbb
add
sub
pop
push
rclb
int
in
sub
sub
nop
mov
mov
inc
fnsave
stos
jle
xchg
repnz
push
sbb
mov
jo
lret
cmp
mov
inc
jne
jo
aas
or
add
push
ljmp
incl
push
out
xor
adc
shrl
ljmp
mov
dec
adc
mov
les
shlb
pop
pop
imul
leave
mov
push
adc
cmp
xor
hlt
cmp
imul
mov
xor
lcall
xor
mov
dec
pop
xchg
sub
mov
xchg
jge
push
lods
xchg
add
mul
pop
ja
push
hlt
test
pop
loope
mov
fwait
xchg
movl
test
leave
stos
andb
lahf
fldt
dec
add
fscale
sti
inc
mov
xor
pop
in
xchg
adc
inc
addr16
pop
adc
cmp
pop
push
lea
lcall
sbb
adc
sub
xor
push
bound
and
cmp
jo
lods
sbb
xchg
aas
jle
push
adc
jmp
xor
mov
testl
push
push
push
xchg
insb
imul
add
adcb
lahf
and
scas
dec
idivb
dec
and
clc
inc
adc
jnp
mov
mov
and
pop
pop
dec
ret
int
cmp
mov
jle
jle
cmpsl
lcall
aam
cld
divl
inc
nop
clc
in
in
pop
mov
les
loop
xor
dec
inc
mov
jp
and
cld
sarl
cmp
lea
je
cmp
push
sbb
lss
lret
insb
mov
repnz
ret
jnp
pop
pop
or
shlb
or
nop
jecxz
or
push
push
dec
addr16
int
subb
roll
mov
in
jle
pop
movsl
lock
shr
lcall
repz
in
xchg
hlt
sub
sar
pop
mov
jmp
leave
or
sub
jns
repz
les
rorl
cmp
mov
add
lock
fldenv
adc
sub
stos
repz
popf
leave
out
hlt
add
ret
push
inc
test
mov
call
jbe
sub
rcrl
iret
inc
stc
pop
push
ja
dec
loopne
mov
lods
mov
mov
jp
aas
das
das
pop
jmp
dec
mov
inc
aam
jno
pop
mov
in
cld
adc
imul
ljmp
and
dec
hlt
stc
clc
ljmp
cmp
mov
aam
and
stos
flds
arpl
ljmp
ja
pop
mov
push
jl
std
outsb
and
sub
and
add
les
push
add
lret
or
jl
adc
xchg
xor
aad
jo
jge
xorb
xchg
push
xchg
pop
jb
push
mov
xor
stos
xlat
and
cmc
mov
stc
and
icebp
dec
outsb
fisubrl
sub
dec
jg
outsl
dec
dec
rclb
sbb
arpl
or
aaa
je
xchg
je
leave
popf
fistps
sti
mov
dec
rep
cmp
push
jg
movsb
cmp
repz
loopne
movsl
or
dec
sahf
push
sub
into
xor
popf
test
mov
pusha
out
push
cmp
push
stos
call
pop
dec
stos
mov
dec
sub
mov
rcrb
insb
repnz
cld
fs
repnz
pop
stos
cmp
jns
and
mov
pop
stc
jb
test
mov
sbb
add
sub
mov
and
push
jne
fisubrl
mov
sub
aaa
cmp
mov
pop
out
das
shll
cltd
xchg
add
loope
mov
cmpsl
adc
clc
and
shlb
jp
adc
push
push
pop
sub
push
cltd
cmp
or
push
adcl
mov
jge
fnstcw
jns
lret
popf
pop
punpckhwd
push
mov
jp
pop
popa
xchg
mov
or
ljmp
std
cli
icebp
fsubs
inc
xchg
sbb
cmpsb
call
mov
add
ja
pop
push
pop
fistps
shrb
popf
test
fs
js
mov
fsubl
scas
xchg
jbe
jg
xor
mov
push
sbbb
cmc
inc
mov
ja
stos
mov
fidivs
push
hlt
sub
mov
xlat
inc
push
adc
in
or
cld
pop
mov
and
int
dec
adc
mov
fiaddl
xlat
adc
add
cli
orl
lcall
insb
pop
test
sti
cmp
sahf
jmp
dec
xchg
std
mov
pop
cmpsl
loop
bound
negb
xchg
mov
inc
dec
jb
cs
test
or
push
push
stos
sbb
hlt
pop
loop
jno
loope
jbe
mov
pop
aad
subb
mov
jp
mov
push
push
test
fwait
in
out
lcall
clc
popa
imul
stc
out
les
or
jns,pn
notb
or
sahf
in
mov
xor
adc
cmpsl
fsubrp
in
mov
insl
pop
cmp
xor
add
and
sub
xor
inc
arpl
cmpsl
push
jbe
and
xor
cmp
mov
sahf
cs
push
sub
rcrb
xchg
jae
inc
pop
enter
imul
bound
pop
sub
leave
mov
lar
inc
cmp
lret
xor
in
push
stc
mov
sar
jne
xor
add
cmp
divb
mov
inc
rcl
loopne
mov
push
adc
dec
push
addr16
mov
subb
int3
mov
shlb
pop
jae
jbe
mov
outsl
lcall
mov
add
outsb
imul
lret
imul
sbb
sti
mov
out
lods
insl
movsb
jl
lret
and
sbbb
fstl
mov
sbb
fdivrl
lahf
popf
push
loop
jae
xor
js
fsubr
dec
push
and
xor
and
adc
hlt
sub
xor
in
pop
fidivl
mov
fadd
pop
xchg
dec
into
xlat
loop
lret
pop
sbb
fwait
jbe
stc
out
jl,pn
sub
pop
mov
and
out
bound
pushf
mov
and
jae
mov
cmp
add
in
mov
adc
popf
mov
icebp
adc
cmp
add
mov
out
lret
xchg
scas
add
mov
push
xor
pop
fistps
lods
iret
imul
push
mov
push
xchg
sahf
int3
mov
mov
insb
xor
loop
sbb
sub
push
popf
xor
lret
out
mov
add
sbb
pop
mov
jae
hlt
jne
loopne
gs
and
pop
inc
or
push
iret
adc
shll
xchg
sbb
cltd
call
cltd
dec
rcll
cmpsb
out
je
stc
outsl
mov
cmp
daa
ds
push
jecxz
sub
add
ss
les
or
pop
rorb
repz
mov
adc
push
cmp
mov
jg
sahf
out
dec
imul
outsb
xchg
out
add
xor
jge
lods
mov
fsub
js
daa
or
dec
int
in
loop
mov
inc
out
adc
pop
daa
addr16
sbb
adc
repz
inc
sarl
push
aas
mov
out
out
in
insb
xchg
dec
mov
cmp
pusha
push
mov
dec
aas
int3
jnp
call
into
mov
mov
mov
and
pop
dec
addl
loopne
xor
lcall
sbb
adc
scas
outsb
cmp
xchg
push
das
add
gs
mul
push
inc
dec
leave
inc
cmp
cmp
inc
int3
fldcw
adc
orb
popf
icebp
jecxz
sub
jno
fmulp
cmp
out
push
adc
das
push
stos
dec
xchg
dec
xchg
out
lea
icebp
fsubrl
or
inc
loopne
test
jg
insb
in
inc
mov
xchg
into
ret
and
cmp
loope
bound
mov
bnd
mov
push
fwait
jnp
fwait
bound
xchg
mov
in
imul
xlat
into
push
testl
or
mov
aaa
and
push
insb
pop
fistl
mov
stos
jne
ja
add
fdivrp
movsb
das
add
lods
ss
pop
daa
rorb
ss
sbb
imul
push
lds
data16
aad
add
mov
or
pop
enter
adc
push
inc
hlt
dec
mov
adc
cwtl
je
lret
stos
or
and
cmp
fiaddl
dec
cmp
push
mov
call
mov
gs
das
ds
cltd
jnp
add
or
inc
loop
rcll
sbb
or
cmp
fs
mov
jle
adc
adc
daa
xchg
xchg
adc
in
clc
out
dec
and
aaa
sahf
icebp
mov
mov
mov
adc
inc
cwtl
push
add
lods
inc
ds
jle
std
xor
push
or
mov
sti
push
int
xchg
in
jmp
sbb
insl
jno
jns
cmp
popa
insb
push
insl
fs
ja
add
jnp
gs
jp
jl
mov
pusha
adc
mov
inc
jle
pop
push
int3
mov
adc
cmp
adc
scas
mov
mov
jo
and
fsubl
jae
and
push
cld
lods
lods
imulb
in
sbb
mov
pop
iret
negb
imul
dec
lcall
cs
or
jle
in
test
into
inc
movsl
insb
pop
out
jecxz
add
jb
jb
sbb
ret
add
pop
inc
xchg
and
loopne
inc
sub
xchg
cmp
jno
leave
cmp
jecxz
pop
loopne
sahf
mov
rol
ret
xchg
in
cmp
lods
jns
test
push
test
xor
jl
pusha
jb
push
pop
outsb
jbe
insl
arpl
inc
mov
jb
mov
notb
test
stos
inc
cmc
daa
inc
xor
and
rolb
out
push
pushl
adc
fwait
nop
push
stc
xchg
jnp
and
bnd
call
add
or
adc
clc
sub
ljmp
pusha
mov
imul
mov
out
sbb
out
sub
sbb
aaa
fidivs
cmp
aaa
pop
rsqrtps
jge
popf
and
sub
pop
add
sbb
cld
jb
clc
adc
cmp
xchg
popf
push
mov
rcrl
out
loop
jno
aam
aam
add
aam
outsl
test
jg
cmc
lods
inc
sbb
jecxz
jecxz
lahf
add
fadds
xchg
push
push
adc
push
jle
les
and
mov
fiaddl
pushf
xchg
bound
shrl
stos
jns
jno
shlb
cmp
adc
mov
mov
cmp
cmp
test
adc
imul
data16
popa
add
mov
jg
dec
fstpl
lock
xchg
andb
dec
mov
push
cmp
imul
aaa
mov
adc
lahf
or
mov
fldenv
gs
in
jne
push
incb
loop
cmpsb
mov
rclb
cmp
scas
add
loop
testl
iret
test
repnz
outsb
and
out
xchg
movsl
cmp
mov
std
inc
pop
and
mov
add
dec
rol
aas
and
repz
mov
mov
lret
inc
push
sbb
dec
adc
lahf
push
inc
test
sub
jo
mov
cmpsb
mov
adc
dec
mov
or
push
pop
xchg
ljmp
rolb
aam
hlt
lods
push
arpl
sbb
adc
or
push
int
dec
push
adc
mov
jo
mov
push
xchg
and
sbb
cmp
xchg
pop
cmp
cmp
insl
mov
cltd
sbbb
insl
stos
xor
xchg
push
test
mov
ja
inc
inc
pusha
sub
pop
xchg
mov
pop
dec
dec
fstl
adc
int3
xchg
stos
out
xchg
dec
insl
xor
xor
sbb
or
int3
lock
xchg
or
pop
adc
pop
push
mov
out
outsl
icebp
and
lds
sbb
je
xchg
outsl
mov
jmp
mov
shll
fistpl
lods
rolb
ljmp
fcoml
push
cs
rorb
push
adcb
fistpl
mov
or
dec
out
push
and
fistl
lret
orl
lahf
cmp
add
push
or
sub
jp
aaa
fcmovne
mov
pop
movsl
ja
stc
adc
add
add
adcb
jb
lcall
outsl
loop
mov
fdivs
sub
lds
xchg
sbb
es
dec
add
sbb
aam
jbe
and
loop
fidivl
add
inc
dec
lock
xchg
cmp
loope
inc
fsubl
mov
repz
jge
enter
jne
popf
push
mov
inc
movsl
push
lods
shll
shrl
scas
adc
mov
sub
ja
dec
cvtpi2ps
xchg
dec
pushf
in
js
or
cmp
bound
les
data16
or
mov
push
push
sarl
mov
dec
sub
mov
icebp
clc
xchg
sarb
scas
hlt
xchg
sbbb
inc
aaa
test
int3
or
scas
pop
jno
fildl
pop
xchg
jne
sti
cmp
aam
ja
cltd
jae
sbb
inc
cli
shlb
dec
outsb
mov
mov
mov
dec
loopne
xor
xchg
sbb
ficoml
pop
das
dec
in
sarl
jmp
mov
es
sarl
pop
daa
jmp
mov
adcb
lods
mov
stos
lret
enter
lods
inc
cmp
adc
jle
sbb
enter
pop
in
inc
or
in
lods
orb
in
cmc
sub
loope
add
pop
imul
cmp
xchg
sbb
mov
test
mov
shlb
xchg
orl
jp
inc
jp
jmp
lret
xor
push
cmp
mov
inc
push
ljmp
xchg
dec
lret
test
mov
cmp
jbe
sub
enter
jl
and
cltd
out
and
scas
int
adc
cwtl
pop
je
mov
pop
pop
in
iret
mov
sti
xlat
sbb
outsl
test
movsb
pop
xchg
daa
cwtl
mov
sub
fstl
xchg
pop
or
xor
mov
inc
xor
mov
inc
rcr
cltd
lret
mov
inc
mov
or
test
aaa
xorb
mov
inc
lds
lret
or
sbb
mov
jecxz
retw
je
cmp
xchg
out
jbe
push
ja
mov
cwtl
mov
xchg
rcrl
inc
or
lahf
shl
imul
js
and
bound
out
je
js
dec
pop
data16
sub
test
into
push
jne
pop
fnstenv
sub
aaa
sub
sbb
insb
es
sbb
adc
mov
leave
pop
mov
or
pop
push
stc
adc
stos
pop
xchg
xlat
mov
mov
in
cmp
imul
jo
cmpsl
pop
xor
dec
insl
pop
mov
ret
data16
mov
push
cmp
mov
ficoms
pop
daa
js
pop
adc
fnsave
cmc
je
out
jl
call
dec
je
data16
push
pusha
ss
ja
arpl
mov
and
sub
stos
xchg
xor
push
insl
xor
aad
and
scas
scas
xchg
adc
aaa
bound
mov
fld
mov
loop
jle
adc
lds
cmp
int3
lret
and
adc
pop
pop
mov
inc
xor
mov
jg
hlt
cwtl
pop
mov
cmp
dec
int3
or
sbb
movsl
add
ja
lcall
sbb
gs
nop
add
add
sub
push
ficomps
lds
adc
ds
clc
cli
addr16
jmp
fidivl
leave
mov
cwtl
ss
push
mov
pop
push
adc
inc
imul
dec
pop
fldcw
lods
cmp
into
test
mov
dec
fdivl
lahf
cltd
push
in
push
jne
into
xchg
add
cmp
int
mov
hlt
pop
pop
cltd
inc
fiaddl
xchg
cmp
adcl
mov
adc
mov
lret
pop
adc
xor
std
add
mov
fisubrl
rcr
mov
mov
adc
call
pushf
pusha
mov
mov
add
pushl
inc
cmp
test
mov
mov
cld
cwtl
in
daa
pop
push
lret
pop
jbe
shrl
dec
stos
lret
in
inc
dec
scas
jge
mov
in
inc
adc
lock
dec
ljmp
push
in
ret
in
js
cs
movsb
cmpl
aas
data16
and
mov
orb
ss
outsb
sbb
xchg
jg
xor
and
push
test
adc
aaa
aaa
xchg
call
clc
and
xchg
roll
into
pop
push
jle
pop
xor
sub
lahf
jae
cmp
cmp
das
sbb
in
in
ds
out
sub
loopne
sbbb
dec
and
das
aaa
pop
jecxz
add
lcall
xlat
add
add
jno
xor
jmp
movsb
sbb
dec
movsb
adc
pop
jb
aad
test
pop
inc
lahf
cs
test
push
fwait
lods
mov
imul
inc
mov
and
add
mov
inc
push
add
mov
xor
add
repz
sbbb
xchg
adc
xchg
sub
insb
outsl
jb
mov
stc
xchg
out
mov
sti
dec
or
cs
cmp
insb
mov
cmp
cmc
xchg
cmp
out
data16
data16
adcl
int3
push
lock
sahf
ret
jne
call
cmpsb
add
daa
push
add
int3
xchg
fwait
adc
movsl
out
or
popl
popf
pop
jbe
mov
divb
call
jle
add
push
aad
mov
mov
jecxz
sub
mov
or
out
jl
es
cwtl
insl
sbb
shlb
pop
in
into
iret
loop
mov
pop
fstpt
xchg
stos
pop
repnz
xchg
xchg
add
shlb
jo
fsub
scas
pop
push
sub
xchg
jnp
jmp
xlat
je
sbb
js
sub
add
jno
test
adc
inc
adc
push
in
mov
ds
and
aas
xlat
adc
xchg
testb
neg
add
in
xor
xor
out
ret
sbb
cltd
mov
and
adc
cmp
sub
nop
push
mov
pusha
lods
loopne
daa
pusha
js
and
movsb
jmp
add
mov
aaa
shl
xor
cmpsb
aam
imul
inc
cltd
stos
repz
push
cltd
testb
sub
fwait
in
xor
add
pop
cmp
movsl
push
push
xor
cld
sbb
cli
lods
or
ret
in
and
ljmp
lods
cmpsb
mov
mov
ds
in
aam
jmp
sub
or
cmp
decb
push
in
mov
dec
inc
shlb
movsb
mov
jecxz
lret
ljmp
mov
jns
or
lahf
jno
repnz
enter
insb
push
shr
filds
dec
jae
dec
dec
sub
jno
movsb
mov
sub
mov
inc
dec
out
insb
mov
adc
or
xor
and
cli
imul
lock
sbb
arpl
sar
xor
bound
xor
pusha
xor
add
xor
aas
xchg
adcb
dec
or
loope
daa
adc
leave
inc
add
aas
scas
dec
adc
adc
adc
dec
and
in
sub
ret
imull
add
add
fisttps
adc
push
xorl
insl
push
ss
pop
sbb
dec
sub
insb
pop
xorb
sti
add
mov
pop
and
xor
cmp
outsb
les
jl
push
sub
inc
xor
xchg
imul
xor
mov
adc
cld
sbb
cmpsl
dec
mov
imull
dec
jb
pop
aam
push
inc
adc
inc
test
cmp
leave
clc
in
insb
in
push
and
jbe
dec
in
pop
inc
push
inc
xor
test
sbb
push
nop
stc
xor
clc
add
mov
subl
pop
mov
call
ret
stos
xlat
or
push
lcall
or
lock
into
add
pop
adc
mov
mov
push
mov
adc
ret
out
in
in
push
ret
mov
dec
mov
xchg
bnd
repz
adc
insb
cmp
add
push
in
or
imul
or
out
andl
mov
in
dec
mov
aas
add
fcoms
ret
push
pop
aad
mov
adc
fbld
mov
popa
adc
bound
stc
rorb
push
cmp
xchg
adc
mov
xchg
xchg
push
push
add
mov
daa
out
mov
scas
ret
lock
repz
xchg
loop
insl
fwait
cmpsb
xor
inc
cltd
clc
push
or
mov
mov
test
push
mov
xchg
out
jg
inc
push
mov
dec
cmp
adc
insb
nop
les
pause
jl
loopne
sbbl
sub
mov
aam
aaa
aas
outsb
xchg
pandn
jecxz
in
jne
sbb
movsl
adc
xchg
imul
iret
add
mov
xchg
mov
fwait
mov
mov
jl
stc
popa
sbb
push
fs
mov
fmulp
shrl
dec
fisttpl
rcl
ret
sbb
addr16
stos
push
sbb
js
xchg
dec
adc
sub
stos
ror
or
xor
mov
dec
inc
popa
hlt
mov
inc
sarl
xorb
lds
dec
add
jb
push
sbb
xchg
test
jg
mov
ficomps
insb
mov
jl
mov
inc
hlt
pop
loopne
lret
cmc
mov
je
mov
imul
pushf
stc
or
add
int
movsl
mov
mov
jne
push
sarb
fstl
sub
test
push
loop
sahf
int
fisttpl
sub
and
sbb
popf
scas
adc
adc
movsb
xor
or
pop
jne
add
mov
xchg
jl
inc
ljmp
lret
pop
cwtl
inc
fs
lcall
addr16
pop
repz
sub
or
mov
jae
mov
bound
jo
mov
movsb
cmp
scas
jge
push
mov
aad
int3
adc
mov
fistpll
add
sub
mov
add
das
daa
test
leave
shlb
bnd
push
jne
cmpsl
leave
push
xchg
std
call
mov
adc
into
inc
and
push
arpl
imul
lods
call
cli
jae
adc
mov
jg
outsl
movsl
bound
add
jbe
and
sub
sbb
pop
fldenv
sahf
mov
pop
mov
lock
fdivr
cmpsl
add
loop
imul
jbe
xor
mov
xchg
insb
cmp
popl
insb
leave
push
inc
mov
mov
fmuls
xorb
jl
mov
mov
shrl
sbb
ret
mov
adc
xchg
arpl
xchg
int3
xchg
dec
xchg
mov
lcall
lea
xchg
fdivrs
adc
jb
cmc
and
out
jae
xchg
jl
aaa
cmc
cwtl
inc
mov
addr16
mov
lods
push
repz
insb
clc
adc
or
or
jge
pop
cmp
push
popa
add
icebp
andl
aad
cmp
lret
adc
ret
mov
pop
xchg
sub
in
dec
jnp
sbb
ds
test
psubw
sub
divl
ret
sbb
mov
not
mov
aas
add
or
in
mov
jno
mov
push
out
ret
push
push
inc
in
shll
add
xchg
jb
imul
mov
cmp
ret
cmovae
shl
lret
jns
add
imul
icebp
int
mov
enter
xchg
mov
inc
xor
gs
popa
into
xor
sub
subl
movsb
xor
push
xchg
xchg
dec
fwait
and
data16
pop
adc
jge
outsl
js
mov
aaa
and
sub
insl
dec
loope
cld
adc
cmp
out
sbb
jmp
lret
sub
or
cmpsb
dec
mov
aam
test
pop
fwait
mov
stos
cmp
dec
add
push
mov
sub
stos
add
xchg
jle
dec
int
inc
jno
into
jp
lret
inc
ret
dec
pop
orb
ret
clc
repnz
push
jmp
stc
jae
mov
sbb
scas
jo
sub
aam
rolb
mov
mov
xchg
movsb
inc
ljmp
dec
xchg
mov
push
sbb
add
jae
pop
out
fstpl
bound
pusha
ljmp
jns
lret
ds
fdivrs
jns
push
push
fnsave
push
xchg
and
mov
dec
or
hlt
push
add
in
mov
fmul
cli
iret
mov
lea
imul
js
andl
xchg
pop
xor
bound
cmp
ret
cmp
stc
shll
repnz
xchg
imul
xchg
iret
into
sti
or
dec
xor
pop
push
xor
add
loope
mov
and
and
in
push
insb
jmp
fsts
lea
pop
jbe
pop
xor
mov
sbb
test
add
adc
lods
pop
cmp
cmp
push
in
aaa
cld
inc
ljmp
or
lret
in
jns
pop
mov
stos
jl
mov
dec
les
pop
xor
dec
add
pop
gs
fs
test
mov
sarl
test
dec
sahf
push
cld
out
nop
sub
jl
daa
das
leave
cmp
xor
cmp
mov
enter
mov
mov
stos
rorb
stc
sub
arpl
xchg
into
xchg
aas
fs
or
mov
jle
jl
out
je
push
mov
mov
add
dec
or
loopne
loop
jl
pushf
mov
outsl
adc
push
dec
loop
lret
mov
rcrb
bound
xchg
ds
cmp
add
dec
cs
repnz
loope
lret
std
adcl
clc
ss
pushf
cmp
ret
aam
imul
add
and
imul
shll
add
repnz
fiadds
mov
and
pop
or
aaa
mov
add
aaa
dec
scas
fnstcw
fiadds
call
arpl
mov
xchg
cmp
sbb
fdivrl
jbe
mov
xor
aam
dec
in
mov
cmp
pop
push
add
pop
fstl
adc
insl
xor
and
mov
into
mov
dec
dec
ret
dec
js
cmpsl
or
mov
mov
popa
or
call
lods
jae
add
and
pop
dec
es
push
outsl
lock
inc
out
inc
cmp
stc
arpl
inc
mov
sub
sub
sbbl
xchg
into
aam
arpl
adc
pop
fnstenv
imull
mov
repnz
ds
push
popw
addr16
sti
inc
insl
cs
and
xchg
inc
js
pop
loopne
jo
into
fisubrl
push
loop
into
shll
incb
jne
lds
cmp
subb
test
sarb
xchg
cltd
adc
push
jmp
inc
adc
and
mov
add
mov
fistl
pop
jecxz
and
or
xchg
mov
pop
mov
test
js
lds
cld
mov
ljmp
in
insl
and
add
add
inc
data16
push
sti
lock
es
fsubrp
fstpl
out
dec
std
scas
das
push
mov
adc
xor
cmp
orl
fs
js
hlt
fcompl
pop
mov
les
xor
jno
inc
in
out
add
xchg
cli
fsubl
pop
inc
inc
pop
das
sti
jmp
sar
aas
int3
mov
cmpsb
ds
rcll
pop
sbb
jae
imul
mov
push
lret
daa
or
mov
push
aaa
add
pop
rorb
mov
dec
mov
add
jmp
sub
xor
xlat
mov
jecxz
or
cmpsb
pop
shl
xchg
in
enter
inc
rcll
jns
rorb
cmp
out
movsl
xchg
jle
cwtl
jo
inc
add
fdivr
inc
adc
xlat
cmp
mov
xchg
sub
inc
jo
aad
movsb
cli
insb
mov
pop
mov
rorl
mov
scas
out
pushaw
popa
lock
je
lahf
inc
rorl
dec
sub
push
lret
outsl
cmp
mov
xor
jmp
mov
push
sbb
cmp
aaa
inc
test
sbb
je
mov
in
inc
aas
sub
cmp
fwait
dec
sbb
stc
mov
js
push
dec
out
mov
dec
gs
aas
fstl
mov
add
lret
pop
cmp
gs
sub
mov
push
loop,pn
add
push
aaa
sbb
test
shrl
aas
mov
push
lret
mov
sbb
mov
pop
jl
mov
push
xchg
add
subl
and
dec
out
test
je
mov
mov
sub
or
mov
cltd
lods
idivl
mov
push
out
dec
sbb
insl
adc
inc
cmp
xchg
mov
add
stos
stos
and
adc
popa
mov
jecxz
arpl
fsubl
shl
jp
gs
lock
je
sbb
leave
jecxz
lcall
nop
ds
pop
daa
das
les
test
shrb
outsl
ret
scas
clc
loopne
mov
jae
lcall
pop
add
cmp
sub
add
lahf
das
lret
add
movsl
outsb
ds
pop
fistpl
das
incl
and
mov
or
mov
imul
add
cmp
xchg
mov
test
into
cs
cld
adc
mov
movsb
insl
cmp
dec
call
cs
scas
push
adc
and
jge
sarl
sahf
pop
lcall
sbb
sub
pusha
andb
fwait
dec
cmp
inc
push
cmp
fldcw
packuswb
or
jns
xchg
push
mov
push
lret
in
mov
icebp
xchg
xor
sub
sarb
cmp
fadds
or
pop
mov
dec
mov
aam
xchg
out
push
sbb
xchg
mov
push
jle
pop
je
mov
ja
lcall
jbe
popa
mov
inc
int
test
fs
fcoms
dec
mov
mov
add
dec
mov
inc
cltd
cld
fdivrl
and
sti
sbb
mov
xor
hlt
pop
xchg
lea
iret
xchg
adc
loop
out
call
cmp
jl
jo
negl
out
call
mov
ret
xchg
sarl
push
push
stos
cmp
inc
sbb
fstps
les
dec
test
xor
cmpsl
fisubl
sub
mov
push
test
cmp
add
aam
xchg
inc
pop
ret
loop
out
xor
aam
lds
cmpsb
lock
pop
push
or
cmp
sbb
jb
or
fisubrl
rorl
mov
mov
jecxz
mov
mov
dec
push
jnp
lahf
xchg
xchg
adc
mov
fidivrl
pop
aam
pop
jne
add
sbb
pusha
lods
mov
push
xor
daa
cmp
pop
dec
inc
mov
hlt
xor
fidivrs
xor
cld
mov
lret
flds
pop
fcoml
inc
pop
xchg
cld
testl
push
push
movsb
pop
out
lds
ret
rclb
adc
dec
jmp
call
inc
mov
or
in
mov
jb
sub
das
or
pop
mov
mov
inc
mov
sbb
add
jne
les
cmc
fdivrl
sub
xchg
mov
aaa
dec
ja
jg
mov
inc
repz
adc
mov
dec
jns
fst
les
adc
lods
cmp
push
adc
arpl
xchg
test
popf
dec
xchg
stos
mov
test
pop
push
sarb
into
fnstsw
inc
cltd
sbb
pop
cmp
xchg
jae
dec
aam
out
or
dec
popa
mov
arpl
shll
test
roll
pop
insb
add
hlt
xchg
cmp
sbb
out
xor
pop
jmp
aam
test
jae
mov
lock
dec
sbb
bound
fnstcw
jmp
mov
int
lahf
push
xchg
repz
stc
sti
insl
test
popf
mov
js
addr16
jge
ds
add
sub
add
sbb
xchg
xchg
mov
sarb
lret
dec
in
out
push
pop
imul
sub
cmpsb
repz
cmp
daa
int
call
stos
enter
mov
add
xchg
mov
jno
pop
push
mov
mov
mov
stc
in
pop
mov
sbb
iret
inc
jecxz
jo
mov
push
mov
xchg
or
test
and
mov
stos
pop
or
add
clc
adc
pop
into
frstor
cmp
stos
mov
xchg
adc
inc
shl
xor
jne
ja
xchg
cmpsl
jecxz
icebp
aad
nop
xchg
sbbl
ret
inc
jge
leave
mov
daa
stc
fs
pushf
xchg
xlat
adc
add
loope
movsb
mov
adc
mov
out
lahf
xor
push
lret
xlat
dec
adc
push
aad
push
dec
and
fstps
ret
cmpsl
lea
test
dec
dec
adc
nop
lret
popa
dec
mov
push
popa
decb
add
lret
pop
mov
mov
xor
popa
inc
and
movsb
mov
add
xor
cli
fs
mov
xor
mov
push
jecxz
ljmp
das
rclb
clc
mov
inc
mov
mov
adc
outsl
mov
jp
jno
insl
cld
cmpsl
lds
push
pop
fdivrl
sahf
mov
int3
ret
pop
jae
nop
rorb
imul
rol
loop
xchg
and
sbb
insb
adc
push
sbb
pop
cwtl
mov
ljmp
packssdw
sub
je
mov
cmp
insl
add
dec
sub
outsb
push
push
movsl
call
shrb
frstor
les
and
pinsrw
shr
movl
mov
mov
cwtl
or
xchg
xor
mov
mov
inc
add
push
mov
cwtl
lock
aaa
push
insl
sub
rolb
xchg
sub
add
out
mov
sbb
sbb
fiadds
lret
xor
cmpb
push
ljmp
xchg
enter
and
mov
outsl
mov
imull
push
mov
jle
test
ja
and
dec
ret
xlat
add
push
sub
into
loope
int
push
jl
rol
insl
jne
dec
out
sub
rorb
sti
dec
and
mov
cld
fnstcw
inc
sbb
imul
sub
js
shlb
aad
or
cmp
mov
lea
test
jae
mov
xor
das
addr16
cmp
jmp
scas
out
pop
mov
inc
stos
aad
sbb
loop
and
icebp
testl
and
or
shlb
sti
jmp
imulb
sbb
rcl
mov
mov
rorb
sub
and
cmp
ja
std
xor
inc
lods
and
fbstp
nop
mov
mov
mov
dec
fiadds
fcoml
add
inc
pop
out
pop
dec
rol
movsl
daa
xor
and
and
pop
inc
sbb
rorl
out
insb
mov
mov
adcl
cmp
test
adc
test
adc
xchg
divl
cmp
add
push
das
dec
adc
out
sti
popa
jo
pop
gs
rolb
btsl
into
mov
adcb
mov
lock
cmp
call
adc
push
jecxz
in
jmp
movsl
addr16
in
xchg
jp
stc
sub
cwtl
ficompl
les
fsubrl
rcll
cmp
test
sub
lods
jo
shlb
dec
in
push
cmp
popa
fldenv
dec
sahf
cli
sub
xchg
push
scas
lods
ret
jge
push
mov
loop
lds
add
pushf
mov
out
sbb
hlt
xchg
fwait
mov
xor
jp
cmpsl
push
setae
lret
dec
dec
xchg
mov
dec
xchg
test
lcall
or
mov
fdivrs
xchg
or
xor
xor
xchg
and
pop
pop
fistpll
addb
je
cltd
nop
inc
outsl
adc
push
ret
push
push
add
aam
insb
dec
mov
lret
ficoms
mov
sbb
xchg
adc
pop
cs
lret
ds
jae
jo
add
push
adc
dec
jmp
outsb
aaa
mulb
jle
mov
pop
and
adc
negb
adc
jns
mov
and
push
xchg
mov
xchg
dec
mov
pusha
cld
jmp
aaa
push
mov
and
out
jecxz
lret
push
movntps
adc
mov
mov
push
adc
repnz
push
sbb
push
pop
test
xlat
stc
sbb
ljmp
mov
xchg
lret
dec
enter
cld
add
mov
mov
cmp
outsb
into
out
push
pop
push
add
sub
popa
leave
cmp
xchg
sub
int3
int3
push
flds
orb
and
scas
out
jg
test
sbb
mov
sbb
fbld
mov
pop
dec
ja
pop
in
mov
std
call
inc
mov
aas
mulb
es
mov
gs
pop
lret
adc
inc
in
or
js
je
cli
adc
jge
ja
push
inc
or
jnp
aad
aam
sub
call
nop
jns
inc
inc
or
pop
pop
jmp
cld
icebp
fadds
xor
in
mov
test
jbe
mov
jmp
nop
test
jle
mov
jb
adc
mov
stos
sub
rorb
lcall
movsb
int
or
mov
daa
cmpsb
test
jp
push
dec
sbb
push
pop
lahf
mov
jge
movsl
rcll
mov
mov
xor
call
jne
les
mov
je
push
sub
push
mov
test
push
jl
jns
pop
dec
daa
lahf
cmp
push
shlb
jge
scas
xchg
fstpt
push
imul
rcrb
fnstenv
cmp
xor
add
mov
js
sub
dec
jo
cld
pop
mov
dec
inc
add
xchg
cld
fidivrl
test
lahf
sbb
aas
jnp
cs
cmp
data16
mov
push
cmp
out
imul
popl
test
xchg
aad
add
push
or
push
cld
mov
xchg
inc
jecxz
shlb
cmp
mov
cmp
add
cmp
adc
das
jb
mov
lahf
inc
xchg
jno
test
test
xor
sbb
test
imul
lret
lcall
sbb
sbb
rcrb
pop
sub
test
in
jne
jne
xor
pushf
das
mov
mov
sub
ljmp
xor
xor
adc
sub
test
iret
xchg
fildll
mov
ror
pop
aaa
push
or
scas
mov
mov
push
movsb
adc
lock
mov
add
shlb
pop
fcoms
jp
sbb
xchg
test
test
push
jno
imul
out
sarb
add
push
imul
pop
out
pop
outsb
lret
mov
or
mov
pop
cmp
out
cmpb
xor
jl
push
cwtl
sub
cmp
xor
lock
jno
xor
inc
or
mov
mov
xor
out
xor
andb
xor
cld
mov
jno
mov
inc
sbb
call
push
lret
js
cmp
xor
jg
push
pop
shlb
or
sbb
lea
xor
int
mov
or
cmpsb
pop
cmp
push
test
jle
or
xchg
mov
mov
inc
sub
push
jno
in
xchg
dec
ret
sub
cmp
mov
out
pop
push
add
cltd
cmpl
cmpsb
mov
icebp
insb
test
scas
cmp
mov
xchg
jb
test
pop
jmp
pop
mov
xor
cmpsl
cmp
clc
loopne
pop
sbb
xchg
jo
stos
orl
loope
or
xchg
fs
and
xchg
notl
fistps
mov
push
xchg
fstpt
mov
or
movsl
stc
mov
stc
sbb
and
orb
xor
xor
mov
mov
jo
and
rolb
pop
cmp
or
lcall
sbb
xchg
jbe
scas
sub
mov
shlb
add
icebp
aas
lcall
lds
pop
jae
add
mov
sahf
lea
mov
movsb
pushl
mov
sub
adc
inc
cs
or
subb
xchg
movsl
fdivl
push
movsl
enter
xchg
jmp
xchg
cli
out
add
pop
das
sub
movsl
add
dec
in
jmp
cmp
outsl
aad
dec
jmp
jl
out
sbb
xchg
lcall
lret
mov
and
pop
mov
pop
call
push
fidivrl
in
mov
sub
push
ret
push
or
rorl
in
dec
sub
adc
mov
rolb
or
cmp
scas
repz
int3
xchg
aas
xchg
jne
and
test
cmpsb
sub
out
loope
jne
test
xchg
pop
cmpsb
shlb
imul
push
cmc
outsb
pop
lahf
fcomi
add
cld
jb
popf
out
inc
sti
xchg
and
fwait
dec
cwtl
psrlw
jae
add
add
sbb
jnp
mov
mov
jle
gs
iret
sbb
xchg
ror
pop
into
adc
test
lahf
inc
movsb
mov
icebp
vpmaxsw
cmc
jl
js
mov
fmull
shlb
sub
nop
mov
aam
aas
mov
lret
cmp
dec
mov
lcall
out
lock
mov
xor
jnp
sarl
pop
cld
lods
inc
xor
in
mov
scas
aam
imul
aas
mov
inc
lahf
shlb
add
rorb
lahf
dec
pop
shr
sbb
mov
stos
jl
mov
lcall
adcb
fisttpl
movsb
cmp
dec
adc
outsb
xchg
inc
cmc
das
jne
and
lcall
pop
jo
pop
jecxz
into
inc
mov
rcl
jecxz
dec
jae
pop
sub
imul
cmpsb
mov
fistl
mov
movsb
test
sub
lahf
or
xchg
shl
xchg
inc
xchg
push
ret
lret
outsb
cmc
fildll
rorl
pop
xchg
aas
adc
pusha
sbb
xor
movsl
call
lahf
or
paddusb
sbb
jbe
mov
jne
sbb
rcrl
jb
jb
xchg
lret
fistpll
xor
fstpt
icebp
test
ss
push
in
in
xchg
ss
mov
mov
ds
push
lea
lcall
cs
sub
cld
inc
xor
push
fildl
ret
mov
pop
xor
jmp
push
in
jg
xorl
pop
dec
dec
daa
clc
add
mov
lret
xor
jo
xchg
ja
sbb
outsb
xchg
repz
iret
pop
inc
sub
pop
lock
in
cmp
outsb
cmc
cmp
outsl
jb
fcomip
ss
cmp
xchg
test
cmpsb
mov
clc
adc
xor
sbb
mov
lret
xor
mov
jg
test
mov
jo
les
xchg
xor
sub
loopne
cmp
inc
xchg
xor
cmp
loope
xor
mov
push
je
fiaddl
test
fsubl
je
mov
pop
test
inc
mov
clc
mov
loopne
sbb
or
jae
sbb
insl
push
mov
rorl
clc
lods
xor
and
fcmovnb
loopne
insl
fistpll
das
mov
lahf
movsb
push
fcoms
or
lret
mov
andl
ja
inc
mov
or
daa
aad
arpl
jns
or
lcall
adc
ja
xchg
and
cli
pop
mov
imul
dec
in
xor
pop
jle
sbb
add
sbb
pop
mov
xor
xor
int
into
leave
subb
xchg
or
jle
leave
loopne
stos
into
sbb
xchg
pop
fists
lock
insl
jae
cmp
bswap
pop
cld
fstpt
add
mov
xchg
mov
xchg
add
mov
add
lret
mov
sbb
mov
aas
ljmp
jb
stc
mov
cmp
fbstp
jo
out
add
cmp
jns
sub
sub
dec
jne
lahf
mov
daa
mov
jp
dec
pop
pop
and
loope
inc
enter
xchg
mov
pushf
insb
mov
mov
dec
mov
jo
cld
mov
fwait
add
sbb
xlat
push
sbb
inc
mov
rclb
test
adc
xchg
inc
nop
scas
mov
outsl
insl
in
cwtl
push
jge
pop
cmp
jns,pt
xchg
xorl
xor
int
inc
mov
cmp
jno
dec
pop
sbb
adc
xor
movsl
inc
sbb
and
aad
mov
mov
movsb
pop
pop
and
mov
jmp
inc
insl
es
pop
dec
fwait
adc
lds
mov
pop
ret
pop
imul
loop
cmp
xchg
lahf
sti
pushf
lods
adc
pop
enter
and
and
push
int
mov
cmpsb
cltd
int3
xchg
or
stos
data16
jo
jmp
jp
xchg
cmp
aaa
cmpsl
xchg
icebp
std
shrb
rolb
daa
dec
outsl
repz
fwait
xor
mov
xor
dec
cmc
mov
pushf
push
jmp
push
cmp
add
xor
mov
arpl
fimull
movsl
aaa
idivb
in
mov
fnstenv
dec
mov
xchg
jbe
xchg
fcompl
imul
xor
movl
sti
inc
es
inc
out
stos
cld
jge
jg
clc
test
aam
push
jnp
enter
push
lods
mov
inc
mov
and
inc
cmc
xchg
fildl
ret
push
sbb
dec
cs
add
jno
xor
cmpsl
icebp
jp
xor
xor
pop
into
jmp
int3
je
or
push
pop
mov
push
lret
dec
cmp
loope
int3
pop
test
mov
pop
lods
das
push
jmp
sbb
insl
mov
sbb
add
xorb
or
xor
dec
mov
shrl
push
push
pop
mov
lret
mov
mov
push
mov
jns
ret
aas
repnz
mov
lods
cmp
test
movsb
stc
add
pop
fld
xchg
add
outsl
push
mov
lock
cmp
or
mov
in
or
sub
mov
iret
data16
adc
cmpl
mov
jno
dec
push
test
mov
push
aam
enter
push
call
add
push
push
aad
ss
shrl
xor
or
mov
cmp
fs
xor
pop
push
jnp
repnz
movsl
push
jmp
cmp
subb
push
pop
push
mov
ljmp
imul
loope
xchg
push
jb
adc
shrb
divl
insl
loop
sti
mov
mov
cli
ror
jge
mov
sub
inc
push
sti
outsb
sbb
out
sub
incb
pop
movhps
std
mov
pop
enter
pop
stos
xorb
decl
aas
push
pop
pop
xor
sbb
mov
aad
out
sbb
addr16
adc
or
xor
dec
dec
push
push
adc
adc
gs
jmp
xchg
repz
push
mov
les
out
pop
and
mov
aad
pop
push
daa
push
jns
pop
pop
inc
pop
add
dec
orb
xlat
dec
ret
adc
je
gs
inc
xchg
lret
inc
daa
repz
jae
and
sahf
lret
imul
sar
push
mov
div
add
addl
adc
cmc
jecxz
loop
ror
scas
mov
stc
and
inc
adc
push
mov
xor
repnz
push
ret
sti
or
outsb
jmp
imul
lret
jmp
mov
lods
shl
scas
mov
imul
jne
mov
test
dec
jmp
rolb
cmp
les
add
push
xchg
mov
xor
mov
lret
adc
mov
jmp
fldt
cmp
mov
ret
scas
xchg
add
mov
mov
pop
pushf
mov
out
dec
push
jbe
mov
sbb
mov
xchg
es
rorb
faddl
enter
pop
test
fists
stos
loop
jbe
lahf
pop
scas
add
and
or
pop
ja
mov
and
or
xchg
movsb
movl
loope
mov
add
icebp
jge
dec
mov
sti
inc
neg
mov
jns
xor
xor
jg
lods
cmp
sbb
xorps
aas
or
imul
fdivp
repz
or
cmp
dec
dec
shl
push
and
pushf
loop
addr16
cmpsl
mov
xchg
xchg
xor
jns
lods
adc
pop
cwtl
or
rcrb
lods
cmp
shll
das
cmpsl
bound
icebp
dec
and
cmpsl
repnz
repnz
sbb
xchg
insb
jg
inc
daa
ret
leave
pushf
jnp
push
fbld
aaa
push
outsl
inc
sub
inc
mov
add
lcall
repnz
movsb
mov
out
std
jno
lea
mov
or
ficompl
movsb
mov
in
pop
mov
fmull
cwtl
iret
mov
mov
mov
xchg
and
movsb
pusha
mov
testb
mov
leave
test
aad
cmpsb
call
mov
fs
xchg
aad
sbb
shll
popf
dec
ror
xchg
mov
adc
mov
push
mov
or
clc
sub
jl
outsb
pusha
fidivl
mov
cmp
xor
pop
gs
repnz
jns
add
mov
add
dec
mov
cmp
ret
mov
ficoms
cmp
lds
outsl
jno
push
mov
jge
into
jmp
lret
adc
lock
mov
stos
cwtl
das
jecxz
mov
lock
push
out
dec
and
les
mov
lock
push
insb
sbb
sbb
out
xchg
pop
pop
mov
fmuls
and
inc
ljmp
faddp
xchg
cwtl
xchg
mov
push
inc
movsb
js
xlat
xorl
cmpl
in
mov
and
mov
dec
enter
pop
or
lods
dec
mov
mov
aas
cmp
or
jg
aam
out
movsl
adc
fistpll
mov
icebp
shlb
xorl
cltd
loop
push
sti
sub
sbb
jae
mov
jmp
cmp
fdivs
push
xor
dec
cli
jle
xor
push
adc
xchg
and
dec
nop
pop
inc
xchg
mov
jge
mov
sbb
sbb
adc
mov
enter
adc
bound
mov
xchg
inc
notb
push
xlat
xor
and
dec
sbbb
push
jl
bound
dec
call
fmull
or
mulb
or
daa
cmpsl
stos
aad
sub
push
push
outsb
pop
lret
lock
ja
aas
inc
imul
mov
imul
jae
pop
pop
pop
adc
add
popf
stc
inc
jb
inc
xchg
push
add
cmc
mov
insl
inc
mov
outsl
daa
and
jne
je
add
sub
push
jp
scas
sub
int3
cs
int
cmovge
into
sbb
inc
stos
rolb
xchg
cli
jmp
add
lahf
dec
jl
sbb
out
pop
cmpb
je
cmc
push
jle
xor
cmpsl
les
pushf
shl
loopne
lds
les
add
mov
mov
xchg
and
outsw
int3
dec
in
sub
outsl
in
cmp
cmc
and
jo
mov
sbb
mov
sub
or
jg
jge
lret
or
push
fimull
icebp
push
xor
add
push
sub
mov
ret
cmp
clc
sbb
mov
add
mov
inc
fldcw
es
mov
cmp
sub
sbb
adcl
cs
leave
das
aaa
add
leave
ds
mov
mov
cli
lods
fs
adc
add
cwtl
jmp
jg
jns
out
repz
fisttpl
xchg
iret
fdiv
jle
lahf
insl
mov
push
add
cmp
jbe
add
dec
push
mov
mov
js
adcl
and
mov
xor
xlat
int
or
out
leave
movsl
ret
adc
or
lret
pop
or
and
ds
repz
sti
dec
mov
xchg
shl
ljmp
xchg
inc
mov
stc
dec
mov
jnp
pusha
bound
xor
cmpsl
mov
jnp
mov
sub
dec
jmp
or
scas
dec
or
aam
into
push
out
adc
push
sbb
insl
jl
fs
rclb
out
dec
mov
lret
pop
fucomp
xlat
jo
jmp
es
pop
cmp
movsb
cmp
xor
mov
pop
int3
mov
sub
inc
mov
jmp
push
scas
clc
clc
inc
cmp
mov
add
sahf
inc
mov
insl
sub
mov
sbb
pop
jne
test
out
addb
loope
in
cmp
rcl
dec
pusha
insl
and
jecxz
das
mov
fiaddl
mov
xchg
loopne
repnz
gs
mov
ljmp
sub
push
rcrl
fucom
inc
mov
cwtl
aad
scas
andl
je
stos
mov
and
in
popl
jbe
subb
loope
fldcw
inc
xor
fbld
jns
push
cmp
dec
jecxz
jge
mov
ss
cmpsl
sub
fsubrl
ret
adc
dec
out
in
sarb
push
stc
mov
sub
sbb
or
mov
xchg
test
enter
lret
je
or
push
sbb
xor
inc
std
inc
mov
mov
push
pushf
lret
imul
add
in
inc
leave
xchg
inc
ds
ss
sbb
jle
and
fwait
stos
aas
cmpsb
pop
in
push
stc
stc
jmp
add
and
rorb
xor
fcompl
xor
subb
cmc
adcl
lret
or
jle
sub
mov
ror
xor
ds
dec
dec
mov
in
insb
mov
stc
mov
rcrb
xchg
push
outsb
pop
inc
cmp
pop
fiadds
out
ljmp
pop
je
jo
nop
stos
xor
jae
insb
mov
iret
jg
jge
mov
and
mov
rorl
xchg
add
movsb
int3
push
cmp
cmpsl
rcr
in
jp
mov
jno
filds
stc
cs
sahf
jecxz
cltd
mov
int3
sti
mov
les
adc
scas
cmpsl
inc
sarl
xor
dec
inc
inc
sub
movsl
mov
inc
jb
scas
adc
mov
jno
lret
sbb
sub
cli
push
clc
bound
mov
jns
fs
bound
xchg
or
sub
pop
ret
cmpsl
into
sub
shl
call
or
pusha
cmp
aad
repz
loop
xchg
clc
pop
hlt
pop
std
mov
int
nop/reserved
add
xor
add
hlt
test
cmp
imul
xchg
and
data16
addb
pop
push
jl
std
je
cli
pop
roll
xchg
mov
fdivrs
scas
add
shl
jo
mov
repnz
pop
aam
into
pop
xor
testb
push
sub
xchg
cmc
shl
ja
xor
add
pushf
push
xor
sub
pop
mov
push
xchg
push
mov
je,pn
in
xchg
cmpsb
scas
adc
aam
sub
sub
push
push
adc
ret
sti
and
sub
jns
bound
das
dec
or
add
dec
aas
sar
xchg
sub
std
insb
mov
daa
sub
pop
shrb
popf
mov
push
rorl
jecxz
not
mov
popa
mov
lea
jle
and
jl
clc
xchg
aad
test
lcall
fidivrs
data16
iret
hlt
mov
daa
dec
mov
dec
lahf
pop
lahf
lret
lods
out
xor
pop
repnz
cmp
and
mov
inc
nop
sbb
mov
sbbl
cmpsb
mov
arpl
push
jae
ss
or
in
in
xlat
and
dec
jecxz
das
call
lods
stc
in
popa
jb
pop
xchg
imul
push
dec
movsb
je
pop
jg
daa
dec
xchg
or
imul
or
sbb
sahf
popa
and
add
icebp
imul
in
arpl
xor
cmp
pop
lcall
sbb
fld
adc
inc
out
mov
test
jp
xchg
daa
pop
mov
jge
push
insl
inc
es
es
loopne
repnz
jae
adcw
rcll
adc
mov
mov
xor
inc
stos
filds
popa
adc
jl
pop
in
notl
jmp
mov
mov
sub
lret
test
push
dec
call
xorb
push
dec
sub
sub
mov
or
push
pop
push
fcompl
lahf
add
mov
outsl
jge
rcll
push
dec
push
mov
add
sub
dec
int
aas
jnp
push
popf
jns
jns
xor
mov
xchg
cli
gs
xchg
cmp
mov
xchg
int
push
sbb
arpl
mov
orb
sbb
pslld
mov
xor
inc
or
push
stos
sti
loop
pop
popa
push
jg
pop
vsqrtss
shlb
add
push
push
repz
es
pop
aas
jne
add
outsl
fsubp
push
iret
xchg
das
in
cmp
cmp
pop
sbb
fmull
xchg
jo
cmc
loop
sub
adc
lcall
arpl
mov
jne
mov
push
vmread
sbb
das
mov
cwtl
cwtl
mov
cmp
test
cs
jb
push
les
mov
and
xor
dec
mov
cmp
mulb
fcmovnb
jmp
rol
stos
incb
sbb
imul
sub
cli
mov
jbe
add
mov
cmp
sbb
or
push
push
outsb
push
orb
rolb
sarl
loope
iret
cld
add
dec
enter
sarb
lret
jo
inc
push
fsubs
and
mov
pop
sarb
sbb
das
mov
add
xchg
mov
inc
and
mov
and
mov
outsl
adc
test
push
shrb
xchg
push
fnstcw
mov
jge
or
xchg
mov
fwait
scas
out
unpckhps
pop
mov
lods
inc
es
or
push
popf
je
push
shll
dec
adc
enter
scas
sbb
xor
mov
addr16
jo
jbe
sub
les
daa
and
in
dec
sub
push
dec
mov
clc
call
or
test
cld
mov
sahf
mov
lea
stos
and
mov
pop
mov
outsb
sub
mov
enter
xchg
inc
sub
cwtl
mov
jae
push
int
fldenv
lret
jg
mov
ja
mull
insl
push
cmpsb
sbb
loope
pushf
push
movsb
pop
adc
fcmovne
aas
push
mov
imul
sub
not
cwtl
add
lahf
ds
scas
movsl
movsb
push
inc
les
fcoml
xchg
add
pop
in
xchg
dec
mov
orb
call
dec
cli
orb
xchg
cmpsb
loop
cmp
mov
and
lcall
sbb
jno
xlat
fcmovu
das
aad
rcrl
jle
jg
lock
sbb
clc
dec
daa
push
insl
adc
jmp
inc
push
fsts
add
mov
int3
push
lea
aad
aas
sbb
aam
sahf
out
cmp
add
ja
lret
xchg
popl
push
or
mov
repnz
out
add
inc
mov
or
out
sbb
rolb
outsl
mov
cmp
ret
mov
fwait
pop
lds
push
and
lods
cmpl
js
enter
mov
shll
into
hlt
mov
dec
and
dec
or
or
mov
movsl
xor
pop
mov
adc
push
xor
aas
push
testb
repz
mov
inc
inc
adc
repz
arpl
adcl
mov
xchg
ret
fsubr
cmpsl
mov
jbe
push
lea
mov
push
inc
sbb
jb
xchg
test
mov
mov
pop
les
in
or
xchg
popa
pop
cmp
popf
push
inc
shrl
loope
mov
adc
sbb
inc
shlb
fistps
rcll
fisttps
xor
dec
adcl
lret
in
movsl
and
push
jg
shlb
aam
ds
cmpsw
cmc
xchg
mov
sbb
movsb
add
push
movsl
mov
rcl
add
push
stos
push
mov
hlt
das
xchg
and
adc
xor
dec
or
sub
gs
icebp
and
push
xchg
adc
pop
adc
fdivl
rcrb
jl
mov
sbb
push
xlat
aam
push
cmp
sbb
cmp
les
orb
adc
mov
push
mov
inc
dec
mov
or
xor
das
jmp
mov
sbb
add
lock
push
out
imul
shlb
inc
ret
sbb
jl
gs
shrb
sbb
sub
push
sub
xchg
jae
das
fcom
push
lods
jg
int
repnz
mov
fistl
test
test
repnz
dec
sub
bts
pop
add
cld
ja
jle
mov
lahf
jns
int
pcmpeqb
jnp
movsl
dec
hlt
add
outsb
fnstenv
jmp
lret
mov
aam
jno
dec
cmpl
jne
inc
ss
fs
sub
mov
jmp
loope
dec
and
adc
and
sti
and
loopne
orb
mov
and
repz
sbb
jg
push
add
mov
stc
repz
mov
mov
imul
mov
fmuls
arpl
mov
out
test
enter
shll
sub
je
pop
popf
cld
mov
dec
mov
lock
mov
sahf
lcall
out
les
inc
sbb
push
mov
pop
push
outsl
push
push
lods
lret
fs
mov
cs
shrl
lods
push
mov
cmp
adc
xor
into
fdivr
and
xchg
lcall
aaa
mov
cmp
adc
mov
push
jmp
jl
les
fcmovb
xchg
mov
xor
add
adc
push
sbb
jge
dec
fldl
rcrb
sbb
mov
adc
push
imul
pop
mov
and
adc
push
adc
sahf
pusha
adc
andb
push
sub
out
or
cs
mov
or
xchg
pushf
jbe
rol
xchg
stc
lret
out
push
rcrb
cmp
in
icebp
pop
inc
into
pop
mov
ret
or
out
mov
inc
xor
sahf
cmp
push
mov
inc
jge
mov
mov
sbb
enter
xorb
out
pusha
in
cld
pop
dec
cmc
lret
mov
nop
jp
adc
mov
dec
hlt
test
sbb
sub
inc
or
lret
test
inc
dec
loope
dec
int
push
popf
pop
and
add
repz
mov
xor
ror
adc
push
add
xlat
cmp
es
xchg
rorb
xchg
repz
testl
fistpll
add
cli
out
sbb
push
push
in
pusha
xchg
sub
pop
add
mov
jg
repnz
aam
push
sbb
pop
cmpsl
or
xchg
fisttpll
adc
icebp
into
cmpsl
rcll
inc
and
jae
dec
push
lock
adc
ret
sub
fstp
fisubs
add
xor
lods
mov
repz
mov
fldenv
or
adc
mov
xchg
inc
adc
sbb
es
mov
inc
adc
repnz
in
sbb
inc
mov
ja
outsb
into
mov
lods
inc
and
scas
adc
fdivrs
rcr
ret
mov
mov
iret
inc
aad
iret
repz
sbb
sub
pop
inc
and
fucomp
add
ds
pop
fsubrs
jb
popa
push
test
sub
repnz
and
pop
flds
push
js
cmc
mov
adc
fsubrp
lods
jl
lods
ret
leave
pop
enter
test
xchg
fldenv
ja
inc
mov
cmp
stos
int
jae
out
shrl
jg
jnp
mov
sub
stc
xor
pop
frstor
arpl
xor
movsb
shrb
enter
push
pop
add
ret
mov
idiv
xchg
in
jb
jns
sbb
fidivrl
lahf
stos
aam
lods
hlt
int3
cli
into
orb
in
pop
cmc
arpl
ss
imul
dec
mov
adc
movsb
dec
test
mov
inc
repnz
stc
pop
into
iret
xlat
xchg
jnp
icebp
jnp
inc
push
or
adcb
daa
cld
mov
cli
sub
les
test
ds
mov
mov
cmp
lahf
or
mov
out
jae
mov
xor
fwait
cs
mov
mov
sbb
mov
loopne
pop
subb
out
cmpb
xchg
outsl
mov
popa
rcl
fstpl
and
lahf
insb
movsb
mov
mov
movsb
aam
into
rol
js
fsubrs
lods
sbb
mov
loope
sti
loop
mov
mov
test
test
mov
aam
adcl
mov
iret
and
fsubrp
and
push
in
jbe
outsl
add
xchg
in
cmp
add
inc
lret
imul
in
adc
mov
inc
fstps
mov
xchg
xchg
ljmp
or
mov
push
mov
jb
inc
scas
inc
mov
dec
pop
arpl
in
jnp
faddl
add
insl
fcomps
and
mov
and
out
shufps
jbe
adc
popa
and
pop
or
adc
push
loope
out
mov
jl
sbb
notl
mov
outsl
adc
rolb
pop
mov
sar
bound
jl
pop
cltd
or
popa
add
mov
scas
sbb
mov
aad
push
xor
or
xchg
sub
sbb
cmpsb
mov
cltd
xchg
cld
cmp
int
ret
or
filds
inc
push
das
xlat
scas
cmp
sbb
inc
xchg
mov
xor
and
or
push
test
xor
jne
dec
les
int
push
test
mov
cmc
shlb
jns
and
sti
jns
mov
mov
addb
jbe
add
lods
scas
cwtl
leave
int3
in
jno
jecxz
cmpsb
lsl
repz
jge
aaa
lods
nop
xchg
test
adc
pusha
test
xchg
mov
cmpsb
cmp
push
jp
xchg
je
testb
addr16
in
push
lahf
push
dec
xor
sbb
mov
cld
cmp
adc
inc
xchg
pop
xor
cmp
cmc
sbb
idivb
push
es
std
in
adc
sub
std
aaa
sub
insl
bound
out
inc
mov
mov
push
addr16
xchg
or
lret
fcmovbe
mov
stc
stc
cld
jb
in
adc
add
push
pop
les
lock
movsb
out
push
adcl
push
adc
push
xchg
jo
cmp
out
jae
dec
add
fadd
or
ds
outsb
pushf
fwait
test
mov
mov
ret
jmp
and
and
jno
movsl
mov
mov
pushf
mov
roll
bound
lea
popf
push
enter
xor
xlat
mov
movsl
ret
pop
mov
out
and
cmp
add
pop
scas
jecxz
or
loopne
rolb
jge
mov
out
xchg
clc
jb
dec
adcl
in
aad
xchg
push
rcrb
les
jecxz
fcmovnu
repz
pop
dec
xor
out
shl
jns
cld
cmp
jae
stos
hlt
scas
jecxz
into
mov
jns
inc
icebp
outsb
fabs
cmpsb
cltd
loope
push
int
dec
adc
pop
mov
popf
les
push
jmp
je
and
outsl
cmp
xor
aaa
fistpll
fs
jae
mov
int3
mov
jp
pop
loopne
cmpsl
mov
orb
add
addr16
xor
cs
fwait
inc
scas
xcrypt-ctr
cmpsl
sbb
movb
jbe
shlb
jnp
rclb
hlt
das
pop
lock
mov
std
cli
fwait
lcall
add
xor
inc
mov
and
xchg
mov
sub
dec
imul
scas
mov
in
ss
ljmp
arpl
adc
adc
ret
aad
inc
iret
insl
xlat
pop
dec
cmp
mov
loope
cmp
sbb
inc
fistpll
pop
inc
mov
enter
mov
mov
sub
inc
dec
pop
xchg
and
test
std
pushf
imul
std
add
jmp
or
fists
xchg
push
mov
pop
cmp
xchg
mov
or
jp
repnz
mov
stos
cmp
dec
fists
aad
cmpsl
lds
jp
and
dec
pop
push
cld
ret
les
ja
mov
insb
movsl
lds
jl
vmovups
rorb
iret
outsl
push
into
mov
mov
icebp
imul
rolb
push
inc
sarl
fadds
xchg
jb
pop
lds
les
lods
adc
push
add
je
adc
repz
jl
fidivrs
jmp
pusha
repz
cmp
das
movsb
adc
psrlq
xchg
xchg
mov
pop
mov
push
lods
out
fwait
xor
push
mov
scas
mov
xchg
popf
std
andl
out
add
shrb
xchg
std
enter
mov
out
xchg
daa
mov
push
adc
dec
mov
and
adc
add
mov
inc
fists
mov
outsb
andl
xchg
mov
jbe
mov
xchg
jmp
daa
push
insb
lods
push
into
stos
xor
or
cld
stos
inc
push
loopne
lret
pop
orb
icebp
lcall
xor
pop
push
mov
ja
push
push
shl
scas
nop
cwtl
push
inc
xchg
jo
stos
outsb
cmc
inc
fwait
or
hlt
push
es
dec
std
jp
dec
mov
xlat
mov
push
push
push
in
notb
testl
dec
xor
mov
out
adc
inc
lcall
cwtl
pop
fwait
imul
mov
in
sbb
inc
lods
inc
inc
dec
sub
sbb
mov
out
es
jge
jle
mov
nop
mov
leave
and
xchg
adc
shrl
pop
mov
repnz
xor
mov
aas
xchg
cmp
jb
mov
sbb
in
into
outsl
ret
xor
rcrl
and
add
shll
mov
popa
arpl
aam
mov
push
fnstsw
jns
cmovs
or
mov
lds
sbb
adc
push
mov
insl
bound
add
fidivs
xlat
or
in
pusha
outsl
cltd
out
jl
sbb
mov
lock
scas
inc
mov
roll
rorb
mov
inc
data16
lock
mov
jmp
mov
sbb
dec
rcrl
clc
insl
push
aam
xchg
pop
arpl
test
lock
stos
ds
aas
std
decb
test
pop
mov
or
idivl
enter
cli
xor
dec
insb
or
lea
and
add
js
testl
test
push
nop
arpl
jo
fwait
call
shll
stc
jo
mov
leave
dec
in
ret
fcmovbe
cld
arpl
popf
xlat
lret
sub
movsb
cmp
les
mov
lea
pushf
pop
cli
daa
cli
inc
push
loope
push
sub
sub
push
add
jle
pusha
xchg
cltd
out
arpl
inc
nopl
xor
pop
cvtpi2ps
movsl
mov
adc
add
int3
mov
mov
nop
outsb
jp
or
rorl
add
sbb
or
add
pop
pop
loope
hlt
shrl
or
pop
in
sbb
scas
mov
into
pop
fs
push
mov
shrl
jns
and
jge
lds
shl
mov
lcall
pop
and
and
arpl
adc
cli
in
negb
in
stos
imul
xor
push
xchg
xchg
cmpsb
jle
sbb
test
mov
das
sub
icebp
mov
dec
sti
iret
out
out
jmp
imul
adc
mov
fisubl
cmpsb
movsb
sub
fistpl
mov
lock
arpl
inc
push
das
xlat
out
test
xlat
stc
push
daa
or
dec
repnz
arpl
sarl
fisubl
sbb
or
xchg
cld
add
mov
stos
clc
mov
mov
mov
xchg
mov
jns
sbb
imull
jg
rcll
cmpsb
jp
and
lds
lahf
sub
mov
xchg
pop
mov
lods
shlb
or
jb
inc
xor
int3
jg
ljmp
cli
push
pop
mov
insl
stos
pusha
add
scas
or
adc
icebp
adc
insb
jne
xchg
mov
push
mov
subb
or
fwait
dec
fwait
dec
lds
out
sub
mull
mov
jmp
jecxz
jo
sahf
popa
out
mov
sbb
cld
cmp
das
sub
xor
lea
pop
sub
popf
push
aad
vandps
stos
icebp
add
push
gs
jecxz
iret
xchg
daa
fst
fildll
movsl
movsb
xor
sbb
or
das
pop
ret
cmp
sti
mov
into
jno
aaa
pop
push
cmp
insb
cld
push
pop
bound
push
pusha
insl
insb
mov
adc
cmpb
or
xor
adc
insb
enter
inc
sbb
lods
repnz
repz
sub
push
mov
lret
fwait
mov
call
xchg
iret
pushl
mov
push
pop
loope
xchg
add
imul
lret
test
cmp
jecxz
adc
leave
jns
jg
xor
jnp
or
std
cmp
out
and
or
sbb
and
mov
add
andl
les
and
xor
fnstsw
sub
mull
xchg
xchg
or
adc
dec
xlat
dec
mov
leave
ds
and
xchg
repz
enter
mov
ret
inc
xchg
xchg
jp
or
test
jmp
int
dec
push
mov
cwtl
mov
cltd
sub
outsl
add
test
sahf
test
and
test
mov
dec
or
clc
adc
mov
outsl
mov
cld
aam
ss
daa
xor
jg
sub
pop
mov
jnp
xor
jg
jg
sbbb
add
adc
and
addl
inc
mov
call
pop
aas
pop
xchg
and
push
aam
mov
lock
xchg
movsb
divb
iret
adc
lcall
mov
pop
jg
add
push
jo
movsl
shll
fildll
jecxz
mov
push
lahf
orl
add
inc
ja
sbb
adc
cmp
fildll
pop
pop
ds
mov
sahf
jl
or
lea
lods
push
xchg
out
mov
sahf
std
and
mov
es
push
loope
sti
adcl
ret
rep
dec
mov
push
adc
in
les
cmp
xchg
push
push
stos
add
cmp
push
les
mov
daa
gs
mov
push
les
lock
in
and
jl
clc
adc
mov
movsl
push
insl
insl
std
pop
scas
movsl
mov
jp
shr
dec
mov
out
gs
pop
cltd
notl
ffree
cld
dec
mov
out
push
dec
popf
pop
daa
jns
and
dec
jl
adc
mov
leave
xchg
add
jl
imul
mov
int3
mov
or
insb
xor
pop
dec
mov
jbe
pop
adc
dec
nop
mov
ret
ret
arpl
pop
jne
adc
test
mov
sub
xor
daa
aam
and
popf
daa
repz
lcall
imul
xor
sub
jmp
jne
xlat
nop
movsl
filds
gs
mov
and
sub
ret
xor
lret
std
mov
sbb
mov
xchg
data16
loope
dec
xchg
and
fwait
pop
ds
fistl
nop
jnp
and
in
and
call
cli
push
sti
pop
fistpl
stc
loope
mov
push
shll
inc
inc
int
jns
js
add
jo
movsb
jge
adc
pop
or
mov
cwtl
js
repnz
jmp
dec
rorb
leave
mov
adc
push
fildll
push
shlb
or
dec
fbld
andb
mov
jl
push
arpl
sub
in
dec
cld
add
mov
xchg
jg
or
jp
add
test
repnz
mov
cmp
adc
jg
pusha
pop
sub
dec
in
shl
pusha
shl
sub
cmp
ljmp
repz
outsl
adc
gs
pushf
das
pusha
call
pop
or
dec
mov
xor
sahf
loop
and
in
imul
mov
pop
jne
mov
cwtl
mov
mov
ror
std
xchg
cmp
and
icebp
mov
inc
bound
call
xor
lcall
fisubs
sbb
ss
push
in
pop
jno
push
dec
outsb
dec
add
xchg
fucom
jmp
pop
add
inc
out
scas
xor
mov
cli
lcall
mov
leave
inc
inc
pop
adc
jle
jae
xor
inc
xchg
test
add
clc
movsb
mov
lahf
adc
jbe
out
pusha
fisubs
out
fcompl
mov
popf
rcll
xor
jp
fs
shrb
mov
cs
jo
add
gs
int3
sub
mov
testb
jo
dec
xchg
dec
mov
out
xchg
sbb
scas
out
imul
aam
mov
es
jge
cmp
push
out
stos
or
sbb
scas
enter
sub
mov
inc
pop
cli
cli
outsb
mul
sbb
sahf
icebp
lret
mov
out
loope
inc
js
mov
imulb
jecxz
inc
add
aam
add
sbb
cltd
dec
test
or
mov
je
sub
clc
insb
mov
or
push
shll
mov
out
inc
out
xchg
leave
mov
jae
sbb
ret
xchg
lahf
ds
mov
sub
adc
xchg
movsl
fucompp
mov
push
js
sbb
pop
lcall
mov
mov
lods
sbb
mov
addl
testb
gs
clc
mov
inc
add
lds
inc
repz
add
mov
jb
mov
in
call
push
inc
insb
mov
adc
xor
cs
jbe
push
clc
sub
stc
mov
or
push
mov
and
fiaddl
data16
mov
int3
fsubrs
loopne
mov
scas
in
ja
fisttpl
mov
dec
pop
mov
mov
xchg
andb
lods
mov
neg
outsb
ficoms
xor
add
jns
sub
aam
jns
lock
mov
fchs
out
mov
sbb
movsl
add
and
cmp
mov
xchg
jns
or
test
data16
mov
repz
mov
jne
mov
xor
test
pop
shlb
fisubl
cwtl
add
jo
pusha
test
testl
xchg
cltd
and
test
aad
das
outsl
cmpsl
pop
mov
mov
sub
pop
std
add
adc
inc
fidivs
mov
jnp
cs
sub
mov
ret
shlb
or
ficomps
enter
sahf
mov
ret
jae
jge
lret
cwtl
out
inc
btr
jae
out
shrl
jmp
mov
cli
xor
cmpsl
imul
lds
lret
lods
test
push
push
dec
push
cmpsb
jle
ljmp
adc
pop
adcl
xlat
mov
add
mov
test
or
cs
inc
repnz
icebp
jp
outsb
jle
adc
rorb
enter
jge
xchg
mov
mov
subl
inc
fdivrs
xchg
cmc
popf
in
push
jl
data16
dec
gs
js
stc
sub
and
adc
dec
push
adc
mov
andl
dec
mov
xchg
enter
jecxz
lret
out
push
jno
negb
fstps
mov
stos
xchg
aam
push
iret
lret
xor
cmp
outsl
xchg
lret
pop
ss
push
je
or
xor
jg
movsb
mov
pop
cmp
dec
sub
xchg
cli
cmp
mov
jns
inc
notl
mov
cli
mov
test
sbb
imul
jbe
ss
push
je
loope
mov
in
fbstp
dec
daa
sub
gs
ljmp
js
or
push
icebp
dec
and
mov
ja
sbb
sub
in
clc
popf
jle
mov
scas
dec
loope
enter
imul
pushf
mov
cld
stc
rcl
iret
fbld
aad
sbb
int3
lahf
ja
ja
xor
cmpsl
sbb
movsb
jle
jae
orl
mov
xor
pushl
shll
aas
jmp
into
xchg
pop
in
fisubs
sti
shr
adc
mov
jns
shlw
subl
fisubs
aaa
loopne
dec
sub
movsl
adc
pmullw
fisubs
jmp
stos
mov
jns
mov
xor
add
cmp
dec
fs
sbb
push
stos
or
sub
adcb
jo
cwtl
push
std
in
ret
rolb
dec
fstl
sti
sbb
aam
hlt
push
mov
xchg
arpl
in
pop
mov
bound
inc
test
push
in
jg
add
pop
mov
push
xchg
insl
fstl
icebp
xor
bound
ret
inc
andb
fisttpll
pushf
hlt
aad
mov
movsb
or
push
mov
in
mov
pop
call
hlt
xchg
popa
pushf
aas
insb
push
sbb
lods
sub
push
xchg
dec
aad
scas
dec
xchg
fstl
fmull
adc
push
sub
das
sub
xchg
mov
ds
xchg
mov
cli
dec
pop
int
mov
fstl
pop
lahf
push
ja
push
mov
dec
cli
daa
adc
jl
inc
iret
cld
sbb
push
jle
add
ret
or
std
push
mov
adc
stos
or
dec
decb
sbb
cmp
pop
repz
inc
cmp
sub
shll
inc
xor
push
inc
movsb
xor
pushl
and
dec
inc
add
lret
pop
decl
and
outsb
sarb
je
test
mov
jnp
adc
and
and
clc
loope
add
push
sbb
sub
xchg
xor
cmp
stc
dec
cld
sub
aas
scas
scas
lock
and
test
repz
mov
xorl
pushf
inc
xchg
fs
insb
jecxz
lods
enter
inc
cmpsb
add
adc
push
call
push
aad
xor
mov
push
cmp
inc
mov
js
xlat
dec
and
inc
and
ret
jmp
jp
fs
sub
adc
in
and
xor
cs
lods
pushf
or
push
or
orl
nop
dec
addr16
shrl
or
rcrb
mov
ret
testl
xchg
push
fs
pop
ret
dec
loopne
adc
outsb
incl
lea
pop
imul
mov
mov
cmp
push
jle
lret
faddl
mov
sub
into
or
add
mov
xchg
jmp
mov
int
stos
jmp
fidivl
loop
ja
std
push
xchg
clc
mov
das
test
xchg
fwait
jge
sarb
les
test
xchg
or
out
add
and
mov
daa
out
or
ljmp
lods
or
and
sub
mov
push
cmp
jno
inc
lods
sub
dec
or
aam
pop
in
aam
push
das
test
shll
pushf
mov
push
test
sbb
lock
ret
dec
or
popf
dec
leave
add
cld
mov
fcomp
adc
jne
cmp
pop
insl
fwait
sahf
push
inc
ja
sbb
insb
or
cld
adc
push
aas
cmp
jmp
lods
xor
adc
mov
nop
fbld
add
repnz
xlat
mov
cmp
pop
cmpsl
ret
outsb
lahf
fildl
mov
aas
out
inc
xlat
scas
in
jno
or
outsl
cmpsb
out
insb
and
xor
jbe
mov
scas
lcall
fadds
ds
sar
fisttpl
test
scas
in
lcall
lcall
inc
cld
sub
jmp
jl
sahf
mov
out
pop
cmpsl
fistl
add
orl
xchg
mov
inc
scas
jmp
dec
xlat
dec
fisubrl
and
inc
and
mov
loopne
les
cmpsl
leave
add
mov
scas
adc
jp
or
test
jl
je
sbb
aam
imul
sahf
mov
nop
out
aaa
mov
ret
pop
fisttpl
or
mov
lock
lahf
jno
xchg
decl
pushf
and
daa
mov
jle
sub
mov
adcb
jmp
pop
pop
das
sub
add
push
and
inc
iret
outsl
bound
jbe
add
add
dec
adc
punpckldq
push
mov
gs
and
loop
ja
movsb
outsb
ds
lret
cmp
cwtl
or
sbb
testb
and
inc
jle
lds
inc
arpl
clc
inc
adc
sub
fsubrs
lods
push
dec
xor
mov
cmpsl
push
push
mov
pop
dec
ret
inc
xchg
andb
mov
mov
iret
cmc
subl
or
lock
jge
pusha
and
mov
dec
mov
mov
xor
xchg
jnp
ret
cld
sbb
mov
xor
jge
je
sub
sub
jo
ja
cmp
add
gs
sub
cmp
stos
jg
inc
sbb
lea
in
jl
in
pop
add
in
mov
mov
jne
es
mov
movsb
jae
inc
fistpl
orb
jae
data16
icebp
movsb
mov
jp
xchg
test
int3
cs
shlb
mov
lret
pop
jp
dec
test
in
fstl
mov
mov
ljmp
aam
rcr
push
out
add
daa
daa
sub
inc
aam
nop
mov
adc
push
pusha
jns
scas
lods
cmpsb
aam
cmpsl
cmp
arpl
ficomps
shll
mov
andl
loope
pop
cmp
dec
sub
dec
imul
bsf
inc
push
out
mov
imul
and
cmc
cmc
jne
dec
push
icebp
daa
daa
rorb
sbb
pop
icebp
add
mov
cmpsb
test
dec
xor
sbb
jg
stc
push
xor
jb
xchg
iret
xchg
xchg
push
fisttpll
add
out
xlat
inc
out
insl
mov
pusha
bound
test
jp
mov
xchg
and
jecxz
aaa
arpl
cli
mov
scas
and
jge
fists
shll
fmuls
popf
mov
pusha
adc
dec
mov
icebp
shrl
pusha
inc
cmpsl
inc
push
jge
mov
or
push
pop
rcll
lahf
call
loop
mov
dec
adc
add
inc
shr
leave
ja
lcall
and
test
mov
repz
scas
jne
imul
icebp
out
pop
mov
sbb
iret
les
sbbl
push
pop
loope
aad
or
loopne
jo
sub
les
mov
add
inc
jg
subb
jmp
imul
data16
fldl
xor
inc
sbb
sbb
and
push
xor
adc
testb
andb
call
shlb
cs
fiadds
jge
in
cli
movsb
dec
nop
sbb
xchg
mov
stos
loope
xchg
aam
enter
mov
cmp
fstpl
push
xchg
sbb
push
mov
cmpsb
jmp
push
or
cwtl
lret
addb
dec
je
out
jge
xor
aam
pushl
arpl
xorb
ljmp
adc
loope
xchg
icebp
sbb
and
mul
shll
inc
inc
data16
aad
mov
cmp
je
and
mov
pushf
sbb
daa
out
test
mov
fisubs
aam
cmp
scas
sub
dec
out
xchg
lcall
push
jae
hlt
mov
inc
adc
ljmp
mov
push
pop
push
inc
sti
jg
rcrb
dec
je
jge
shlb
daa
insb
fcomi
pop
or
cmp
bound
int
imul
fwait
mov
arpl
cmp
sbb
sub
shlb
leave
add
jl
addb
mov
sub
mov
fisubrl
inc
out
minps
and
dec
and
rcll
enter
pop
adc
pop
inc
xchg
sbb
orb
nop
aas
call
loopne
pop
cld
inc
enter
xchg
mov
sar
in
gs
jns
ljmp
movsb
cld
or
scas
and
scas
fcmovu
shll
adc
cwtl
in
mov
push
outsl
jl
add
dec
out
in
cli
and
sbb
inc
andl
mov
sbb
scas
stc
aas
xor
jb
test
inc
outsl
scas
push
jecxz
mov
cli
je
movsl
ljmp
iret
jmp
mov
clc
mov
and
mov
mov
cmpsb
out
xchg
pushl
xlat
ret
stos
call
inc
jg
xchg
jg
aaa
ret
movsb
aad
insl
sahf
sub
arpl
mov
pop
lret
lds
shlb
popa
and
sub
fdivrs
leave
es
jmp
aam
push
inc
enter
push
das
mov
iret
cwtl
icebp
jno
sbb
inc
sub
jo
and
xchg
lock
rcrl
cmpsl
iret
ds
add
xor
sbb
cmp
jmp
jb
fisubl
fistpll
nop
xchg
fwait
push
jae
loope
dec
movsl
out
movsb
rclb
js
cmp
jge
fisubs
adc
xor
push
and
pop
mov
fs
jg
add
cli
inc
pop
test
mov
mull
repnz
push
call
int3
sub
dec
lret
pop
push
into
mov
jl
std
add
inc
xchg
pop
jecxz
xchg
repz
dec
sub
popf
inc
lret
int3
sbb
sbb
push
cld
mov
xchg
mov
dec
pop
sub
sub
mov
mov
pop
mov
stc
lahf
repz
xor
int
jnp
mov
hlt
loopne
dec
mov
data16
mov
or
mov
cmp
pop
xor
add
cmp
nop
xor
lock
push
cmovbe
add
push
push
and
jge
aad
aad
and
fiaddl
ret
inc
xor
cwtl
mov
lcall
mov
cld
jns
fbld
in
inc
movsb
rcl
out
dec
out
jae
or
int3
and
mov
dec
in
imul
leave
cmp
lock
add
mov
xchg
push
mov
fsubl
cmp
test
idivl
add
xchg
lods
test
push
mov
pop
sub
xchg
adc
stos
mov
rcrb
xchg
sub
shl
xor
jp
mov
xchg
and
xchg
aaa
jb
mov
xchg
je
fsub
bnd
test
cmc
pop
shrb
pop
shl
adc
je
xchg
jmp
push
outsb
add
mov
mov
fstps
adc
sub
loopne
and
mov
aaa
scas
push
lret
cmp
cmp
out
mov
jne
pop
rcll
addr16
mov
fnstcw
bnd
cltd
push
jp
pop
fmul
jge
cmpsl
les
cmp
cmpsb
loope
cmpsb
scas
xchg
xor
fistps
les
out
daa
fdiv
dec
leave
jno
mov
pop
ds
std
cmp
lret
sub
fistpll
pop
xchg
jne
or
fistpll
cmp
lretw
pop
repz
ja
xor
push
cmp
out
push
call
adc
cmp
fnsave
adc
sub
imul
in
les
xchg
jbe
gs
dec
lods
rcrb
xchg
mov
adc
inc
int
sbb
pop
test
jle
popf
repz
push
or
push
sbb
cld
cld
push
add
inc
or
jmp
mov
cmc
out
sub
push
fsubrp
in
ljmp
push
imul
adc
pop
push
xchg
or
jno
clc
cmp
add
repz
stos
in
sub
inc
cmpsb
pop
bound
lock
orb
dec
pusha
aad
gs
inc
xchg
ja
in
mov
mov
jb
out
xchg
shrb
test
test
lock
jecxz
nop
lods
cwtl
test
stos
imul
sub
stc
xchg
fucomp
push
jne
mov
xorb
cltd
test
dec
ljmp
cmovs
loop
mov
in
aaa
cmpsl
and
mov
xchg
pop
nop
or
shlb
mov
push
push
ret
sub
xor
dec
pop
mov
xor
xchg
dec
addr16
ljmp
into
and
lock
insl
es
xor
test
rcll
and
movsl
iret
jne
int
andb
int3
pop
jp
fcoml
pop
and
ret
cmp
mov
dec
enter
lea
dec
sahf
inc
mov
jo
in
jge
jns
pop
nop
and
inc
jge
cli
es
xchg
pop
jo
lock
es
andb
push
stc
mov
add
lds
mov
mov
sub
push
je
call
jl
sub
dec
fimuls
out
dec
ljmp
mov
test
and
ds
int3
adc
and
xor
and
es
andps
or
insb
pop
mov
push
popf
scas
cwtl
lock
bswap
xchg
xor
aas
or
ja
mov
lret
jno
jno
cmp
lds
pusha
xchg
inc
cld
mov
push
loopne
dec
ret
cmpsl
fildl
cmp
sub
inc
xor
aad
mov
test
sbb
lahf
adc
mov
xor
stos
dec
ds
notl
ret
sub
jmp
adc
cmp
cmpsl
test
sbb
ss
ret
dec
and
aad
lcall
cmp
jge
addr16
lahf
lods
mov
jge
aaa
in
jns
sub
jge
cmp
repnz
sbb
cmc
dec
mov
add
ret
xchg
mov
das
and
mov
in
cli
test
sbb
roll
add
xlat
sbb
outsb
lods
cmp
mov
cmp
hlt
cmc
cmc
popf
movsb
mov
lds
mov
jo
adc
jp
aam
ljmp
xor
inc
push
and
mov
xchg
mov
mov
enter
fucomi
mov
push
inc
mov
out
lock
sbb
xor
mov
add
push
popf
andl
mov
int
mov
inc
jnp
les
xor
rorl
or
xchg
fwait
or
sbb
aaa
or
clc
and
xchg
xor
sbb
xor
push
mov
movsb
cmp
xor
mov
inc
inc
das
mov
daa
aaa
cwtl
mov
pop
int
mov
jno
sub
into
sub
dec
int3
xchg
pop
mov
dec
adc
test
leave
dec
xchg
lcall
adc
test
fs
fstl
adc
aam
pop
mov
xor
cmc
push
jnp
mov
pop
lock
mov
movswl
xchg
adcl
mov
pusha
pushf
and
pusha
ss
xor
shll
icebp
outsl
ja
inc
mov
jl
sub
repnz
loope
fs
adc
cmp
imul
clc
pop
jecxz
sub
imull
popl
sbb
in
xchg
in
call
jnp
add
mov
cltd
and
jmp
cwtl
cmp
mov
shlb
sahf
xor
push
fcompl
das
and
iret
std
ss
in
mov
sbb
push
out
cmp
inc
xorl
mov
adc
jmp
sub
pop
push
mov
scas
fdiv
and
pop
and
cwtl
cld
scas
mov
pop
dec
clc
xchg
sub
movsl
in
mov
mov
shll
ds
jle
lock
sbb
in
or
lcall
fwait
xor
jnp
scas
lea
shrw
mov
jnp
jmp
or
sub
addr16
fimull
add
pop
fbstp
cli
cmp
xchg
lahf
xchg
sti
mov
pushf
cmp
out
orl
mov
and
ret
dec
stc
and
filds
and
mov
out
rcll
sbb
and
outsb
and
dec
in
xlat
icebp
ficoms
jp
sbb
pop
push
sahf
shrl
lods
stos
mov
push
arpl
sub
sub
je
sbb
mov
xchg
lods
cmp
and
xchg
or
inc
lahf
sti
stos
mov
pop
inc
stos
fldl
sbbl
cmc
xchg
lret
shll
scas
cmp
in
dec
loope
adc
or
inc
sub
jb
push
inc
test
pop
push
in
pop
add
loope
push
sti
imul
les
cmpsb
sub
adc
pop
push
cli
xlat
xor
cmp
xchg
inc
stc
out
repnz
ja
inc
lret
push
faddl
mov
cmc
sahf
push
sbb
fsubrl
sub
sub
scas
inc
add
mov
push
loop
mov
jp
fdivl
push
repnz
mov
push
or
out
mov
shll
pop
insl
in
lret
or
xor
loop
lea
cld
fs
das
ljmp
inc
push
or
lcall
push
add
add
inc
test
shll
pop
bound
repz
mov
popa
in
dec
xor
cwtl
adc
cmp
pusha
xchg
shll
pop
hlt
mov
jg
out
xchg
stc
je
sar
sub
stc
and
aaa
test
push
loopne
dec
mov
inc
std
lret
cmp
pop
add
push
push
jbe
nop
inc
clc
sbb
arpl
push
jp
cwtl
mov
pop
cld
or
loopne
xchg
sahf
adc
add
sti
and
add
sbb
es
add
mov
xchg
dec
adc
mov
das
xor
or
jmp
mov
shl
and
mov
ret
ds
xchg
jmp
mov
lcall
fidivs
sbb
cmp
sbbl
pop
mov
or
loop
pop
fcomi
into
cli
lahf
cltd
push
mov
sbb
sbb
cmpsb
out
mov
orb
or
outsl
mov
ror
cmp
dec
popf
movsb
inc
fdivl
xchg
xchg
cmpsb
pop
scas
stc
hlt
lret
out
js
add
add
add
ret
jnp
lcall
clc
in
xchg
movsl
sbb
shrl
inc
add
push
cmpsb
adc
cltd
mov
nop
sub
jmp
pop
pop
cmc
out
out
subb
lods
inc
insl
daa
xor
sti
and
test
xor
xor
in
jbe
push
xorb
loop
mov
ljmp
fimuls
popa
lahf
push
int3
xchg
aas
es
pop
addr16
jne
xor
mov
sarl
enter
fstpl
push
pop
fidivrl
scas
test
pop
xor
jp,pn
loopne
add
pop
jle
les
push
adc
sbb
push
push
divb
mov
mov
div
mov
repz
cmpsl
int
jo
cli
cmp
aas
mov
in
jo
iret
lcall
mov
mov
stos
and
sub
hlt
rol
mov
test
pusha
pop
leave
mov
xor
xor
mov
add
in
jns
shlb
ret
mov
int3
lcall
sub
imul
cs
stos
stos
aad
sub
mov
bound
jb
stc
xor
or
outsb
loopne
out
scas
ret
and
and
cmc
out
lods
jge
cmp
andl
rclb
test
add
adc
adc
mov
js
cld
pop
std
jg
cmpsl
popf
dec
in
dec
jb
movsl
shll
mov
jge
cmp
das
mov
and
jp
mov
fiadds
sub
daa
inc
sub
test
jmp
jae
daa
mov
mov
test
push
ficomps
iret
loope
adc
adc
xchg
sub
xor
adc
test
imul
cs
gs
and
in
outsl
jo
aas
mov
aas
cmp
push
xchg
xchg
adc
xchg
push
push
jno
lea
fimull
jnp
in
rcrb
jae
cmpsb
insb
lcall
sub
sub
pop
in
mov
les
insb
scas
sti
jns
in
lock
jl
mov
orl
push
in
add
mov
mov
call
movsl
mov
sub
xor
xchg
ficomps
popa
shll
notl
inc
pop
les
cmp
js
mov
mov
jb
add
adc
sbb
fisubrl
sbb
jnp
dec
int
cmp
cli
xchg
cmp
mov
push
jmp
gs
addr16
sti
push
add
pop
lret
sbb
arpl
lds
mov
ror
push
shrb
stos
mov
or
cmpsl
in
sub
xchg
in
mov
cmp
xchg
or
insl
outsl
cltd
fcompl
xchg
mov
sbb
clc
cld
or
mov
fcmovu
pop
mov
aas
das
jno
dec
imul
xor
cmp
push
ret
subb
sub
rcr
pop
inc
sub
cmp
add
fdivr
int
mov
notb
push
les
shlb
push
pop
out
xorb
clc
call
mov
adc
pop
pop
std
push
popf
cmp
ljmp
outsl
mov
ja
and
std
add
dec
insb
clc
cmc
cld
sbb
pusha
ficompl
dec
xchg
add
sub
out
mov
mov
mov
or
mov
jne
fiadds
xor
shr
pop
mov
es
cmpsl
icebp
arpl
jle
push
int3
mov
lret
adcl
cld
clc
nop
inc
pop
incl
xchg
sbb
jge
and
inc
jne
cld
call
push
call
jns
xchg
lds
insb
mov
jg
shll
shll
cmp
lcall
mov
mov
pop
push
mov
test
dec
lahf
cli
incl
lret
jmp
scas
stc
sarb
mov
sbb
sbb
push
pop
xchg
jmp
mov
nop
add
pop
jge
outsl
in
mov
push
sbb
cmpb
pop
es
or
insl
xor
xor
xchg
out
xor
sbb
fimuls
repz
int3
pop
addr16
into
add
pop
mov
sti
outsb
push
outsl
dec
test
fcomi
jns
push
and
ror
jecxz
pop
push
into
xadd
fisttpll
testl
adc
cmpsb
stc
mov
into
ljmp
pushl
lcall
mov
popf
aam
adc
pop
iret
test
and
imul
mov
or
into
mov
xchg
lods
lret
lcall
ret
sub
cmp
rcrb
sarb
rorl
xchg
jne
xchg
dec
add
rcrb
mov
outsl
pushf
cmp
stos
bound
mov
andb
mov
ret
or
pop
jae
fnsave
pop
loope
lcall
mov
push
cmp
je
fistpl
loopne
test
test
mov
pushf
inc
jmp
push
test
mov
lret
lock
rorb
enter
mov
lods
sbb
xor
out
mov
movsl
shll
pop
aam
pop
lcall
fistpl
insb
icebp
fsubs
fs
imul
sbb
cmp
mov
scas
lea
push
mov
outsb
movb
mov
push
loopne
jno
dec
jae
pop
sub
xchg
sbb
cmp
pusha
orb
push
add
pop
bound
movsl
cmp
fidivl
mov
dec
or
adc
dec
pop
xor
aaa
out
jle
mov
mov
pop
dec
mov
cmpb
xor
nop
xchg
pop
sti
xlat
xlat
enter
jo
aam
ljmp
stos
pop
lock
ficompl
mov
ljmp
sub
loop
iret
fisubrs
and
push
xor
pop
pushf
or
adc
inc
xor
cli
sub
inc
cmp
sarb
subb
jne
and
fstl
loop
bswap
pop
cmc
sahf
fisubs
pop
stc
pop
clc
cmp
dec
xlat
adc
add
jecxz
jbe
sub
sbb
or
fwait
mov
sub
dec
or
dec
jbe
adc
in
dec
and
push
inc
orb
push
cmp
xor
lds
sub
xor
and
fistps
fchs
cmp
adc
mov
aad
dec
in
add
mov
mov
or
jmp
dec
lret
fstl
adcb
jecxz
mov
sahf
fcompl
xor
aad
jnp
push
xchg
sub
mov
sbb
test
and
fisttps
insl
add
sub
cmp
xchg
xchg
add
adc
data16
or
int3
cmp
pop
imul
dec
loop
cmpsl
stos
cmp
add
cmpsl
jmp
mov
in
adc
inc
push
dec
outsl
divl
lea
and
lcall
arpl
or
sbb
and
or
sbb
jae
sbb
sub
scas
lret
inc
push
dec
js
pop
loop
or
inc
xor
fcomp
jge
cmp
div
dec
sti
mov
or
fs
push
cmp
sub
dec
pop
mov
addb
aam
pop
cmp
lods
fmull
sbb
jg
rolb
mov
nop
out
push
fwait
pushf
xor
pop
or
pop
fwait
push
push
hlt
adc
addr16
insb
inc
lret
rolb
inc
dec
jbe
fisubs
icebp
sub
jne
mov
sbb
cmp
jo
rcll
or
mov
call
mov
mov
adc
xchg
push
push
add
push
jbe
jns
push
ficoml
xor
ret
lcall
adc
mov
push
xorb
jp
daa
sbb
inc
mov
sahf
dec
sub
add
or
xor
aaa
jmp
mov
pushf
push
jge,pn
push
xor
inc
and
js
ds
dec
cli
pop
testl
mov
dec
mov
jns
out
xor
fcoml
enter
fisubs
jmp
dec
andb
jl
jno
add
icebp
pop
cwtl
pop
outsb
jns
add
lret
shlb
je
ss
pop
fdivrl
xchg
cltd
push
ljmp
inc
pop
adc
xor
imul
cwtl
dec
test
sbb
je
icebp
out
pushl
dec
xchg
adc
sub
cmpsl
cmpsl
adc
xor
testb
mov
divl
out
lods
lcall
inc
push
pop
cltd
xchg
lea
sub
repz
bound
lret
jmp
cmp
rcrl
dec
and
cmp
push
sub
in
jle
das
cmp
cs
repnz
pop
out
mov
xor
into
mov
and
sub
mov
mov
lods
mov
push
shrb
pusha
jnp
mov
add
or
push
test
les
mov
stos
push
xorb
inc
std
fwait
or
mov
pop
std
pop
test
jg
test
insb
inc
push
mov
mov
xchg
test
sbb
bound
sub
mov
pop
jl
xor
push
pop
sub
cld
xor
mov
dec
cmp
xlat
xor
andl
loopne
hlt
adc
sahf
mov
mov
cmp
in
xor
push
bound
jecxz
sbb
insl
cmp
mov
sub
lods
faddl
jge
fimuls
daa
lods
jmp
inc
push
dec
xor
bound
rcrb
out
dec
lahf
push
cmp
sbb
mov
inc
out
adc
in
jg
xor
cmp
sbb
in
dec
fmuls
lock
loop
pop
stos
cli
or
cmp
fmul
aaa
push
adc
mov
mov
test
pop
aaa
mov
push
cmpsb
add
in
pop
pop
pop
and
jmp
adc
fimull
add
mov
adcb
cmovge
add
add
xchg
jb
imul
mov
xor
fs
push
xchg
cmpsl
test
aam
sbb
lret
bound
inc
push
sub
into
ds
xchg
inc
test
pushf
and
ljmp
in
rcll
pop
pop
inc
les
insl
sbb
xchg
loop
rclb
dec
loope
sbbb
ds
jb
lret
repnz
or
stos
insl
mov
ja
mov
andl
cmp
adc
lock
fdivp
rolb
pusha
sub
dec
fs
enter
add
sub
add
rclb
jne
jecxz
ja
dec
std
je
dec
repz
xor
loopne
stos
xchg
movsl
mov
xor
gs
and
push
test
xchg
dec
movsb
daa
movsl
push
lret
pusha
inc
sub
in
xchg
add
xchg
mov
or
sahf
pop
and
addr16
xlat
or
adc
into
adc
sti
ss
xchg
push
ret
sbb
popf
pop
sub
sub
movsb
adc
push
adc
pop
cltd
clc
iret
xor
pushf
movsl
push
mov
mov
aas
imul
scas
adc
add
xchg
outsl
stos
push
test
stos
mov
jo
les
xchg
mov
mov
cltd
dec
movl
mov
mov
dec
push
add
mov
push
xor
and
pop
pop
jge
pop
xchg
ja
call
hlt
jp
jb
pop
loopne
jb
add
dec
rorl
inc
push
lock
out
popf
xchg
push
aad
in
mov
int
add
ljmp
sarl
test
add
dec
nop
repnz
stc
adc
hlt
sahf
jge
and
push
add
sub
sub
sbbl
or
dec
rorb
sub
xchg
push
in
lret
int3
loope
mov
mov
out
lock
aam
pop
add
fstpl
adc
mov
insl
popf
push
addr16
dec
xorb
mov
lods
mov
test
stos
cs
jle
ds
icebp
and
out
aas
out
les
sbb
and
add
jb
jns
mov
pop
mov
imul
xor
fmulp
jg
push
lock
stos
xor
cltd
pusha
xor
xchg
gs
jmp
inc
stos
int
imul
enter
xor
jns
stc
sbb
adc
dec
cwtl
pop
repnz
add
popf
xchg
xlat
dec
and
repnz
cld
add
and
shr
das
dec
jg
add
imul
clc
inc
lea
inc
jbe
ljmp
or
mov
in
push
int
xor
jecxz
dec
int3
imull
mov
leave
add
test
lahf
inc
xor
test
cwtl
std
inc
or
xchg
popa
pop
movsb
mov
cs
mov
or
inc
lret
inc
out
out
aad
in
xchg
mov
testb
jb
cmp
mov
je
shlb
mov
shlb
and
jbe
lods
ret
inc
loopne
leave
pop
daa
push
pop
and
inc
rcpps
subl
push
repnz
test
jp
imul
pop
adc
or
pop
add
mov
dec
out
push
inc
shrb
and
fidivrl
imul
dec
sub
rorl
adc
inc
setnp
cld
push
mulb
les
push
pop
inc
fidivrl
jp
push
jne
outsb
incb
loopne
sbb
xchg
call
mov
xor
mov
push
repz
sub
inc
repnz
jae
out
iret
xchg
mov
fnstenv
movsl
pop
scas
jmp
dec
xchg
test
pop
push
sbb
stos
mov
ss
cld
xchg
mov
setne
cmpsb
loop
daa
pusha
pop
movb
bound
fs
jl
mov
push
sbb
testb
das
sbb
sub
lcall
inc
mov
clc
pop
push
jae
popa
dec
imul
xchg
mov
sub
icebp
imul
jne
jno
sbb
nop
xchg
xchg
call
rcl
mov
movl
pop
adcl
imul
insb
loop
push
jns
add
leave
loop
xchg
inc
shrb
adc
mov
out
jnp
inc
and
pop
inc
adc
in
push
add
out
cmpsb
stc
and
fcoms
xchg
pinsrw
jno
inc
dec
lds
mov
mov
cmp
mov
test
ffreep
push
leave
jns
cs
dec
add
pushf
jbe
repnz
insb
aaa
test
enter
shlb
or
push
mov
mov
dec
std
mov
inc
jl
mov
inc
fcompl
mov
mov
fdivr
stos
ret
movsl
insb
lret
aas
ljmp
mov
and
xor
pop
arpl
xor
lds
dec
xor
je
int3
pop
hlt
fdivrs
dec
or
lea
pop
mov
in
xor
dec
sub
addr16
dec
xchg
jg
icebp
add
rcl
iret
jae
xchg
stc
mov
imul
leave
xlat
cs
adc
sti
sbb
lods
cmp
testb
lea
loope
xor
inc
add
gs
pop
ficoml
cmp
test
jl
mov
inc
les
jp
dec
loope
jae
test
sub
addb
jge
pop
std
sbb
push
push
adc
scas
xlat
inc
jmp
add
pop
mov
daa
push
xchg
inc
in
mov
xchg
in
push
lret
mov
mov
leave
popa
in
icebp
in
dec
inc
popf
testl
dec
idivb
lcall
popa
xorb
mov
xor
mov
and
bound
and
push
pop
bound
pop
inc
shrl
aam
fldl
subb
imul
xchg
scas
push
es
jb
mov
fmul
in
sbb
or
out
xor
lock
adc
sub
xchg
outsb
pusha
pop
lea
fidivrl
push
loopne
jmp
pop
push
xorl
iret
mov
push
outsb
sbb
out
cmpsl
out
lret
mov
push
loop
ss
mov
jp
test
in
mov
push
inc
orb
fnsave
add
sub
ja
cmpsl
sub
shll
in
idivl
or
imull
out
sbb
loopne
pop
sub
mov
in
xchg
out
cld
or
inc
inc
mov
in
cmp
scas
pusha
loope
jl
adc
cltd
mov
lods
cwtl
sub
jp
rclb
add
stos
lods
dec
rcrb
fistpll
inc
cwtl
inc
movd
stc
xchg
pop
in
dec
dec
gs
lds
mov
pop
or
sti
lahf
in
inc
push
ja
shrb
std
mov
xchg
cmp
in
scas
cs
mov
movsl
stos
int
cmpsl
popa
and
xor
jl
mov
push
dec
and
gs
jae
nop
sub
popw
imul
insl
jo
insb
lea
xor
jns
jl
out
ret
in
call
jl
push
or
or
pushf
popf
cmpsl
popf
dec
sti
jno
mov
mov
popf
inc
sbb
push
xor
aad
add
or
add
shrl
add
pop
pop
push
or
pop
icebp
sub
dec
mov
dec
movq
sbb
dec
daa
lods
out
movsb
jns
adc
inc
movsb
fnstcw
pop
mov
pusha
or
ljmp
shl
js
mov
sub
cmp
mov
mov
es
pop
inc
or
addr16
jns
jge
lods
test
cli
pop
mov
pop
mov
lahf
imul
addr16
stos
push
xor
bnd
lahf
sub
cwtl
adc
into
ljmp
popa
ja
xor
test
shrb
and
mov
dec
sbb
xor
gs
inc
test
imul
sbb
pop
mov
rolb
or
xor
cmp
lods
jbe
push
pop
adc
mov
aas
mov
arpl
jne
gs
mov
add
test
jp
xor
cmp
xor
dec
popf
mov
loopne
push
out
mov
mov
xor
mov
adc
pop
mov
pop
dec
jno
sbb
pop
dec
loope
lret
gs
lea
cwtl
les
mov
pop
mov
xchg
xchg
mov
adc
shll
jmp
cmpb
xchg
negl
fdivl
mov
cmc
inc
or
adcb
push
shrb
sub
loope
repnz
aaa
in
loop
mov
in
mov
mov
lret
pop
xor
gs
push
das
pop
or
cmp
mov
inc
pop
pop
push
mov
mov
xchg
cmc
mov
aas
popl
jae
pop
mov
ja
xor
in
or
testl
cmp
hlt
sbb
out
mov
inc
ret
fcompl
inc
rcr
cld
adc
mov
and
pop
fld
in
and
mov
rcll
add
mov
fistps
test
and
and
stc
dec
xor
stos
cltd
jge
xchg
mov
loopne
jbe
lock
mov
ds
mov
sbb
nop
out
fsubl
dec
and
mov
dec
ret
push
std
add
mov
imul
mov
sbb
std
pop
fistpll
pushf
je
mov
loop
pusha
mov
mov
and
xor
popf
mov
subb
clc
shlb
imul
cmp
mov
das
xor
sbb
mov
or
mov
mov
lea
icebp
pop
inc
mov
nop
push
mov
or
jp
jp
jmp
ret
nop
ja
pop
notl
xchg
mov
and
mov
ss
inc
mov
ror
pop
addb
aas
movsb
inc
push
sub
fstpl
cmpsl
cmp
repz
insb
mov
xchg
pop
cmpsb
inc
call
repnz
lar
enter
fwait
repz
xorb
orb
out
jl
into
inc
inc
pop
fistl
mov
ret
jno
pop
mov
icebp
stc
mov
dec
cs
xchg
xchg
test
ds
jo
mov
ja
lods
push
bound
dec
andl
push
inc
mov
pop
cli
popf
mov
or
insl
cmc
dec
les
std
lea
cmp
jg
xor
or
test
subb
das
sbb
xchg
ss
stc
pop
mov
or
sub
outsl
movsl
icebp
mov
lea
xor
in
movsb
sub
adc
and
fcompl
push
or
mov
push
adc
dec
test
cmp
push
test
mov
or
push
in
nop
dec
xor
xor
cmc
cmpsb
pop
adcl
lahf
stos
test
cmp
add
lods
pop
lret
enter
icebp
add
adc
and
sub
pop
mov
mov
cmpsl
rcll
scas
jns
mov
or
jbe
insl
inc
or
arpl
adc
cmc
mov
cwtl
sbb
ret
xchg
js
inc
fmulp
mov
test
mov
mov
adc
fsubrp
pop
xor
cmpsb
mov
push
mov
arpl
fmulp
repz
adc
rcrl
adc
jmp
mov
cmp
mov
ljmp
jmp
popf
jb
enter
mov
mov
enter
or
jmp
xchg
shll
or
lds
hlt
leave
popa
mov
pusha
popl
lds
push
pop
push
push
xorl
dec
push
cmpsl
xchg
mov
sahf
pop
fs
xchg
shlb
aaa
scas
sbb
mov
in
mov
lods
in
jmp
stos
add
pop
test
push
pushf
or
andb
or
std
sbb
push
mov
xchg
mov
aas
jmp
das
or
cli
out
jmp
lods
stos
cltd
or
jle
mov
xor
loopne
add
fmull
mov
dec
insb
int3
or
cmpsb
fwait
jmp
or
pop
je
das
cmp
xchg
js
sti
mov
lret
fcmovu
push
push
out
into
scas
mov
or
add
ljmp
pop
xchg
addr16
ret
enter
xor
ret
ret
and
and
mov
aam
pop
mov
mov
fistps
and
pop
cmc
mov
xchg
das
imul
fsubl
imul
jae
sub
icebp
shll
mov
xor
sbb
loopne
sub
arpl
push
xor
pusha
push
pop
lret
mov
leave
dec
pop
pop
jo
xor
xor
test
roll
adc
scas
xchg
add
aas
push
jmp
jmpw
popa
cmc
dec
push
cs
sbb
dec
lock
data16
scas
xchg
xchg
xor
rcrl
jge
js
mov
sub
push
and
inc
cmc
dec
js
jne
mov
or
inc
sbb
mov
xor
out
ds
cs
out
loop
dec
call
fildll
mov
data16
cmpsl
test
pushf
cwtd
in
fcompl
dec
push
lods
cwtl
pusha
scas
adc
js
ror
loope
xor
sub
mov
and
pop
cs
cmpsl
pop
sub
jg
and
test
cmp
test
xlat
out
in
insl
clc
cmpl
dec
int3
jge
out
mov
push
hlt
dec
aaa
jl
mov
mov
lcall
in
pushf
andb
cmpsb
xor
dec
clc
out
jmp
dec
in
stos
es
xlat
xor
cmp
enter
mov
push
testl
cmpsl
pop
push
push
push
xchg
test
xor
add
mov
xchg
stos
test
xor
lds
aam
push
je
sbb
daa
adc
popa
mov
sub
leave
fsub
call
xchg
loopne
lods
xor
inc
mov
sbb
mov
dec
rcll
or
mov
push
xchg
sub
iret
sbb
mov
addl
mov
popf
mov
adc
ds
call
or
das
cmpsb
repnz
cmpsl
xchg
cld
xchg
lcall
sbbl
loop
and
xchg
mov
adc
addr16
fs
hlt
mov
outsl
sbb
jge
xchg
mov
outsl
cmpsb
in
out
dec
stc
fwait
or
mov
cmpsl
out
fimuls
sbb
mov
imull
push
dec
jl
mov
daa
mov
push
push
xor
xchg
pop
push
mov
lahf
pop
dec
scas
ss
fs
and
imul
jo
dec
xor
in
cwtl
pop
pop
dec
hlt
pop
inc
rclb
jae
sub
or
popa
mov
js
inc
adc
jno
sbb
cmp
fidivl
pop
movsl
push
loope
jl
push
out
int
repnz
int
mov
pushf
aad
xor
mov
sahf
lret
adc
sbb
pushf
mov
lds
lods
add
add
jno
ret
xchg
inc
push
xchg
adc
aad
ja
mov
cmpl
into
cli
cmc
inc
leave
repnz
cli
insb
sti
lods
cmp
lods
xchg
jle
dec
inc
rorl
push
fwait
repnz
hlt
pop
add
shrb
call
aaa
jmp
push
sbb
cmp
push
adc
lods
fsts
xchg
xchg
jl
jnp
xlat
and
data16
mov
decl
test
outsl
adc
stos
movsl
xor
cltd
mov
fildll
inc
dec
lea
dec
jg
shll
push
jb
ljmp
push
insl
testb
push
and
or
pop
add
or
sti
pop
imul
fsubrs
mov
xchg
jecxz
xchg
fdivs
into
rcl
and
xlat
lods
mov
dec
ficoml
xlat
jecxz
adc
flds
sbb
testb
xchg
inc
arpl
sbb
and
imul
xlat
cwtl
adc
and
dec
or
lcall
in
stos
push
jg
das
adc
test
push
dec
or
lods
loop
dec
xchg
xor
inc
js
dec
add
js
inc
cmc
jae
mov
pop
les
leave
xor
loop
mov
dec
mov
subb
cmpsl
pop
mov
in
je
mov
clc
xchg
sub
push
into
xchg
fcom
fstpt
pusha
out
jnp
and
fidivrl
lret
push
sub
xor
and
xlat
fiaddl
jne
inc
imul
cwtl
fwait
loopne
xchg
pop
adc
mov
mov
aas
sbb
or
arpl
bound
adc
imul
mov
xor
inc
leave
in
dec
dec
inc
inc
sti
lret
add
mov
outsl
push
leave
lret
fstl
movsb
and
xchg
cmp
and
ret
jge
jno
pop
xchg
add
and
stos
dec
inc
out
sahf
pop
pop
bound
popf
icebp
shlb
and
ret
outsb
add
ret
mov
pop
mov
xor
jbe
sub
inc
and
dec
jmp
sub
test
je
gs
add
sbb
bound
call
and
push
sbb
mov
jmp
in
into
rcr
or
popa
sub
cwtl
lcall
mov
and
insb
stos
mov
add
mov
mov
xor
add
inc
mull
xchg
mov
shr
inc
arpl
jg
cmp
xor
mov
push
jnp
add
repnz
loopne
jbe
xor
ja
jae
movsl
test
out
movsb
pop
xor
movsb
lar
nop
notb
std
sbb
or
ja
mov
push
mov
pop
push
adcb
or
jmp
imul
icebp
push
sub
lret
repnz
sub
jb
addr16
into
jecxz
data16
cltd
pop
stos
xor
lcall
dec
xchg
sahf
cmp
jbe
mov
imul
repnz
movsb
jne
adc
mov
xchg
adc
das
insb
out
pop
inc
sub
push
mov
lods
aam
sbb
or
fs
jmp
scas
sub
in
mov
inc
mov
fstps
cmp
imul
out
pop
mov
sub
adc
cmpsl
pop
imul
add
lret
xor
sub
lods
sti
jecxz
lret
xor
movsl
cmp
ja
addb
sbb
mov
je
or
andl
imul
lds
add
sub
dec
push
push
add
in
jnp
daa
mov
clc
cmp
add
les
pop
xor
outsl
add
int3
mov
jae
pop
aad
mov
xchg
lcall
test
orb
xor
insl
add
mov
mov
hlt
movsb
mov
xor
call
out
movsb
aaa
mov
push
repnz
aad
fbstp
mov
lea
adc
mov
add
jle
sahf
sti
push
jp
sub
shl
ret
jle
sti
test
loop
fidivrs
xor
mov
mov
sbb
fdivrs
add
dec
test
and
leave
mov
and
xor
cmpsb
out
mov
lret
out
adc
pusha
xchg
adc
push
add
pop
sbb
pop
icebp
jl
cli
and
repz
inc
inc
inc
jg
mov
lea
icebp
sbb
pusha
mov
pop
mov
cltd
mov
jle
rolb
je
mov
inc
xchg
add
lahf
cmc
xchg
stos
cmp
push
mov
mov
xchg
pop
dec
pop
aad
pop
mov
push
into
xchg
xchg
mov
lock
mov
inc
jl
and
out
fnsave
and
fldpi
cmpsl
xchg
mov
mov
lds
push
aas
mov
lcall
int
in
cltd
cmp
cmpsl
out
push
mov
enter
sub
aas
mov
sbb
sar
test
mov
push
ds
inc
cmp
fcoml
pusha
ret
cmp
adc
add
fnstcw
out
pop
dec
rolb
loop
dec
xor
movsl
std
pop
lods
xor
iret
or
outsl
xor
pop
aad
mov
xchg
fcompl
jge
in
lahf
test
sbb
movsl
xor
gs
pusha
lret
test
clc
and
and
adc
rcrb
mov
or
gs
jnp
jnp
lods
gs
stos
jbe
jmp
jnp
add
inc
dec
inc
push
cmc
jo
xchg
cli
mov
popf
jae
push
adc
jmp
fs
stos
adc
pop
scas
mov
inc
xor
adc
imul
jg
insb
add
xor
xchg
adc
jns
jbe
fistpl
cmp
testl
pop
cmp
out
push
sub
fldcw
mov
pop
test
lcall
inc
xor
fisubs
shr
out
fwait
cmp
test
popa
mov
jecxz
mov
movsb
int
call
adc
cwtl
dec
inc
adc
cmp
rorl
inc
addl
jl
jb
lcall
xchg
inc
xor
mov
js
filds
out
pusha
mov
pop
mov
cmpsb
pusha
dec
xchg
fisubs
inc
mov
ds
jb
cmp
ja
out
inc
imul
dec
mov
dec
xor
roll
cs
mov
push
pop
sub
sub
mov
fs
ljmp
fldenv
mov
cmpsb
push
sub
aam
pop
push
jmp
sub
jno
mov
sub
mov
aad
pop
cmp
inc
cld
sarl
stc
push
xor
leave
sbb
js
jnp,pn
repnz
gs
ljmp
cld
and
loopne
push
sub
hlt
inc
dec
pop
imul
mov
xchg
rolb
sbb
lock
mov
aas
push
sub
loopne
xchg
mov
inc
aad
ror
mov
mov
rol
ficoml
or
aaa
daa
jmp
pop
add
repz
dec
cltd
aaa
and
xchg
movsl
cmp
adcb
mov
and
pop
daa
push
sub
add
sub
ja
dec
cmp
inc
out
cmpsl
xchg
lcall
pusha
adc
dec
aaa
leave
dec
cltd
lret
sub
push
into
push
addr16
std
push
sarl
cmpsb
jg
dec
out
push
inc
mov
jmp
popf
cs
ds
pop
test
icebp
cli
cmp
or
jb
mov
movsl
sub
mov
mov
cli
repnz
pop
dec
cmp
xor
adc
nop
jo
pop
jp
jns
in
stc
xor
jae
lcall
inc
pop
roll
movsl
jge
daa
subps
cmpsl
adc
out
sbb
inc
jge
sub
clc
ds
out
xor
inc
scas
xchg
popf
cmp
rorb
jge
push
stc
aas
pusha
xorb
pop
insb
sbb
fstps
out
xor
cli
cltd
dec
sbb
add
adc
shrb
leave
fwait
mov
rcll
jecxz
cmp
xor
dec
jmp
ja
sbb
add
lcall
inc
gs
fs
sub
inc
test
mov
adc
jle
mov
xchg
add
enter
add
or
es
fldl
in
out
adc
mov
bound
rcrb
je
and
test
popa
test
adc
xchg
push
cmp
stos
stos
mov
mov
lahf
std
dec
jno
test
idivb
out
stos
mov
outsl
jns
ret
pop
pop
fsubrp
loopne
add
mov
addr16
es
cmp
xchg
jg
and
pop
add
fsubs
inc
inc
xor
jmp
xorb
jae
test
cmpsb
sarl
out
in
mov
adc
das
rcll
mov
mov
sahf
imul
repnz
pop
jle
aam
pop
adc
add
mov
int
cmp
add
mov
sub
roll
dec
icebp
ror
xchg
or
xlat
push
int3
dec
mov
add
outsl
push
pop
push
sbb
inc
mov
in
rcrl
jno
outsl
mov
popf
divb
push
xchg
js
popa
add
ljmp
lods
lahf
push
inc
movsl
pop
in
fimuls
les
scas
sub
xor
jp
int
cmp
hlt
loop
enter
repnz
mov
add
shrb
cmp
sti
hlt
xchg
sub
cmp
out
pop
insb
mov
ljmp
ret
xor
loop
insb
ds
inc
std
pop
mov
lods
scas
dec
test
movsb
hlt
mov
int
add
jecxz
clc
repz
sti
cmpxchg
hlt
cmp
insl
cmpsb
xchg
jo
push
cli
xor
imul
push
mov
add
sbb
insb
fsubp
add
adc
bound
xor
cmp
les
dec
in
mov
rcrl
dec
mov
cmpsl
and
jmp
pusha
or
inc
mov
sbb
mov
adcl
sub
insb
or
xor
xor
ss
pop
fldenv
fnstsw
dec
xchg
fwait
sbb
addr16
lods
jae
ss
sub
ljmp
push
cltd
push
jl
and
push
and
rolb
inc
push
and
shrl
push
mov
dec
push
fdiv
repz
push
push
jae
stc
fcomps
pop
mov
or
aam
pop
lds
mov
imul
cmp
test
bound
push
cmc
sti
xchg
mov
jl
jecxz
pusha
mov
ret
idivb
inc
mov
push
push
dec
dec
out
nop
gs
dec
sarl
jecxz
ret
scas
dec
shlb
ljmp
push
dec
sub
fs
push
test
les
sbb
and
or
gs
test
cmc
push
sub
cmp
sub
pop
fwait
or
std
mov
orl
dec
xchg
jo
or
shrl
jecxz
pop
test
dec
jbe
jno
lods
inc
fsub
inc
aad
sbb
aas
repnz
add
pop
sub
mov
cmp
lahf
ret
xor
loope
pop
in
sub
shll
adc
mov
test
stc
neg
push
stos
outsl
jmp
xchg
cltd
arpl
cmpsl
or
les
xchg
xchg
lods
or
mov
iret
pop
ret
pop
aam
inc
call
scas
xchg
mov
lods
jl
cmp
jg
push
fbld
lods
sub
scas
iret
mov
cmp
aad
jle
icebp
popa
fadds
mov
lahf
mov
xchg
lods
aas
pop
and
sbb
out
aaa
pop
lahf
inc
push
cmp
mov
jnp
push
mov
inc
into
fiadds
add
xor
ret
sub
sarb
leave
add
adcb
mov
lods
cmp
push
xchg
rorl
pop
loopne
mov
mov
arpl
outsl
mov
push
cmp
cmp
mov
xchg
fisttps
adc
out
lret
pushf
loopne
in
xchg
mov
out
cmc
adc
push
and
ja
sub
xchg
push
push
ret
nop
lret
dec
inc
lods
or
gs
test
cli
inc
in
xor
es
push
mov
outsb
mov
push
loopne
pop
in
mov
inc
push
adc
fisubrl
cmp
inc
lock
pop
dec
cli
inc
and
add
shl
xor
movsl
aaa
insb
call
pop
dec
les
ljmp
and
lods
jecxz
xchg
shlb
mov
jg
cmc
sub
mov
mov
jg
cmp
inc
jmp
fildll
aas
fstps
insl
or
jg
das
cmpl
lods
push
sbb
xchg
lock
xchg
push
aaa
scas
add
mov
dec
push
nop
test
mov
inc
sbb
dec
inc
andl
cmp
adc
jo
sub
mov
ljmp
mov
clc
mov
out
int3
add
fpatan
pop
aaa
xchg
lods
roll
push
pop
mov
sbbb
inc
movsb
xor
sbb
and
pop
test
sub
mov
push
enter
inc
test
outsb
mov
mov
and
inc
or
js
xor
jo
cmpsb
sbbl
inc
adcl
scas
cwtl
mov
pop
add
inc
or
sub
mov
ret
jb
nop
cs
mov
je
out
fisttpl
inc
inc
scas
mov
and
dec
jp
inc
xchg
imul
pop
xlat
pop
mov
sbb
outsl
jge
insl
pop
je
inc
fstl
mov
mov
fsts
xchg
outsb
fwait
push
xchg
movsb
js
int3
sub
inc
call
bound
xor
inc
xor
pop
sbb
subl
ret
push
es
dec
xchg
xlat
mov
cmpsl
push
into
aad
cmc
mov
or
subl
sub
sbb
pop
mov
imul
pusha
out
sub
inc
kmovd
scas
mov
mov
mov
xor
dec
mov
mov
iret
mov
fadds
mov
adc
jb
faddl
in
add
mov
jne
das
cmc
xor
add
add
mov
aad
shrl
fnsave
push
pop
pop
cmp
pop
stos
jge
and
call
test
in
in
pushf
dec
pop
push
xchg
test
das
cwtl
les
mov
je
je
mov
insl
fs
inc
sub
adc
pop
adc
mov
je
aam
cmpsb
pop
inc
push
inc
ds
mov
stos
lahf
fs
out
pop
xor
pop
pop
ret
scas
xchg
mov
data16
jns
sbb
mov
mov
aas
xor
xchg
dec
inc
push
lods
xchg
inc
pop
xor
mov
mov
insl
sub
jmp
roll
stos
xchg
cmc
sti
sbb
push
xlat
jb
mov
cmpsl
js
push
push
mov
inc
nop
fbld
pop
out
inc
sub
ss
icebp
jne
sbb
cmpsl
or
scas
jns
jp
cmp
es
ss
add
mov
out
out
loopne
or
inc
pop
adc
push
xlat
cltd
cs
mov
inc
xor
mov
sbb
lret
mov
xchg
cli
pop
add
fmulp
popa
xor
dec
mov
adc
out
mov
xor
jmp
mov
sub
cs
xchg
in
stos
outsl
lret
mov
mull
push
lds
jae
out
insb
adc
jg
mov
nop
and
sbb
jne
adc
test
es
or
out
mov
lcall
imul
push
arpl
add
orl
push
repnz
and
rcrl
jns
and
dec
sbb
js
mov
pop
or
sbb
xchg
sub
divb
in
test
pop
dec
and
fcomps
add
xorl
in
add
inc
and
cli
dec
lock
mov
sub
sbb
sti
mov
negb
lods
mov
lock
fisubrs
ss
rorb
ds
pop
mov
call
inc
xchg
add
loop
pop
fnstenv
jl
aas
daa
sub
lret
xchg
xor
push
pop
data16
mov
mov
or
push
arpl
mov
insl
rol
pop
rorb
int3
mov
xchg
push
test
lahf
das
icebp
inc
shll
sub
rorl
pop
jb
cmp
sahf
ja
out
inc
push
imul
fwait
push
mov
mov
loope
mov
cmp
cld
push
sti
dec
pop
and
es
fnstenv
scas
cltd
addr16
add
xor
int3
mov
xor
mov
sub
lock
test
xchg
test
sub
mov
outsl
xchg
bound
rorl
mov
pop
cwtl
xor
inc
scas
and
add
pop
and
and
or
mov
imul
jbe
mov
cmpsb
or
pop
cld
mov
dec
sub
jb
aaa
gs
pop
jl
and
ret
mov
adc
jb
pop
in
insb
stos
imul
leave
jge
pop
sub
mov
test
inc
mov
ja
or
popf
inc
mov
in
stc
jg
fucomip
push
xchg
aad
push
lds
mov
jae
push
lret
imul
or
lods
shl
push
out
int
sub
cli
xchg
cmp
movsb
push
arpl
lahf
aad
xchg
aad
pop
pop
or
sbb
adc
push
xchg
imul
scas
mov
mov
and
dec
adc
mov
out
pop
xchg
xchg
dec
mov
loope
inc
adc
fisttps
jns
out
in
pop
push
push
hlt
inc
mov
and
loopne
das
push
ljmp
dec
mov
jle
jb
call
push
sbbl
dec
xor
inc
lods
sarb
hlt
neg
leave
jmp
lock
inc
aas
pusha
jecxz
inc
xchg
js
mov
int
sti
hlt
cs
adc
and
xchg
shlb
sti
pushf
fldl
cli
scas
testl
mov
in
mov
jae
and
imul
flds
mov
mov
push
lods
pop
in
mov
fucomp
cli
outsl
fiadds
aam
jns
sub
das
ja
shl
adc
arpl
movsb
nop
mov
or
mov
sub
mov
lret
ret
mov
adc
stos
sub
repnz
js
pop
fiadds
push
movsl
fimuls
sub
mov
mov
cwtl
outsb
data16
xor
inc
int3
or
imul
daa
icebp
and
pop
jns
outsl
and
lods
mov
inc
mov
addr16
adc
data16
dec
ds
test
inc
shlb
or
stos
int
aad
int
push
iret
les
cmp
lods
sti
test
lahf
xor
mov
pop
mov
and
xchg
dec
out
push
imul
cmp
es
daa
out
lcall
add
pusha
imul
in
jb
inc
aaa
xchg
lcall
add
add
imul
outsb
aam
adc
pop
lcall
cmp
ret
cs
lods
xchg
push
or
aaa
inc
sub
xchg
or
push
pop
jns
and
sbb
push
mov
mov
mov
call
xlat
jmp
aas
dec
pop
jmp
fbstp
and
cmp
scas
xor
cmp
jle
cmp
mov
sbb
cmp
push
in
push
add
outsl
pop
xchg
mov
mov
popf
mov
es
sbb
fisttpll
lock
jle
sub
stos
xor
adc
inc
fdivrl
pop
into
xchg
mov
icebp
mov
sub
or
aad
imul
stos
in
pop
pop
loope
andl
js
jmp
xlat
lea
cwtl
pop
sbbb
out
rcll
adcl
inc
mov
cmc
xor
fisubs
outsb
pop
sub
adc
mov
stos
movsb
sub
popa
aaa
add
cmp
jle
mov
mov
mov
lret
in
jo
int3
xchg
mov
clc
adc
pop
adc
call
jmp
stos
hlt
xchg
iret
es
or
or
enter
dec
cmp
push
das
sub
clc
sbb
lahf
inc
mov
es
dec
arpl
nop
jmp
inc
dec
mov
scas
lods
mov
push
fmuls
sbb
mov
mov
add
mov
cld
sub
mov
out
das
sbb
or
add
jg
in
sbbl
jp
adc
nop
popf
mov
pop
mov
inc
aam
fsubrp
lds
mov
pop
pop
aaa
sub
pop
inc
pop
int
mov
std
xchg
push
in
jb
sub
arpl
int3
mov
dec
std
leave
cmp
pushf
sbb
mov
sbb
movsb
out
push
and
pop
or
and
pop
jmp
popf
xor
sar
out
push
pop
push
push
mov
and
rcll
sub
add
cmp
push
cmp
pop
add
xor
fdivr
sahf
cmp
dec
scas
in
loop
shlb
imul
pop
out
aas
movsl
in
fimull
fdivp
mov
jo
mov
scas
sub
mov
das
or
ljmp
push
aas
test
cld
cmp
testb
mull
mov
rolb
mov
cmp
xchg
ftst
inc
mov
mov
cltd
push
lahf
popa
sbb
aaa
rcll
movb
mov
push
adc
ss
fsub
fisttpll
in
push
gs
mov
loope
in
or
inc
adc
or
or
out
cmpsl
nop
and
adc
aam
test
dec
jae
outsb
mov
xor
stos
inc
or
lret
mov
pop
loop
sbb
sarl
hlt
cmp
add
xor
mov
subb
gs
xchg
mov
sub
xor
test
and
jbe
imul
les
dec
js
push
mov
ljmp
cmp
jnp
addr16
cmpsb
add
stos
fstps
and
iret
and
fs
xor
out
pop
dec
mov
shl
out
popf
or
out
sub
enter
mov
push
jne
cmpsb
or
inc
lock
inc
je
fcmovnu
jbe
sarb
rcr
arpl
out
inc
test
dec
or
sub
xchg
cmp
adc
out
mov
nop
cmp
xchg
xor
jb
fucomp
and
stc
aaa
fsubrl
mov
adc
enter
negb
cmp
adc
sti
fcomi
push
mov
dec
rclb
jnp
push
or
outsb
mov
pop
sbbb
int
or
iret
out
lahf
pop
xchg
cli
jnp
jge
pop
test
jb
in
adc
mov
jge
arpl
xchg
xchg
repnz
pop
repz
xor
dec
lock
ret
in
jb
sti
test
movsb
fnstcw
aad
dec
arpl
cmp
into
push
xor
xor
jg
out
sbb
cmp
test
xchg
int3
lret
sbb
mov
in
scas
sub
cltd
mov
jl
fs
ror
xlat
sahf
and
sub
sbb
push
cmp
sub
call
sbb
push
cmpl
mov
test
xchg
test
fnstenv
stc
push
cmp
aam
cmp
iret
fmuls
stos
and
xor
sub
mov
pushf
inc
cmp
in
dec
cwtl
adc
cmp
pop
repz
movsb
cmp
out
popf
in
arpl
cmp
jl
pushf
mov
pop
jb
xor
sub
mov
or
loop
in
jno
bound
xor
and
cmc
mov
leave
insb
outsb
and
xor
fidivrl
pop
movsb
incb
cltd
sbb
push
mov
dec
test
stos
test
mov
dec
js
inc
clc
xor
mov
jle
data16
movsb
push
jnp
pop
je
dec
ret
aaa
lock
stos
mov
aas
sbb
push
loope
lret
lcall
xor
push
xchg
xchg
inc
call
xor
scas
cmp
imul
mov
aas
dec
jnp
and
push
bound
push
xchg
rolb
or
shll
fnstsw
dec
outsl
xchg
ficomps
subb
sbbb
inc
sbbb
sbb
add
xor
add
imul
mov
in
push
cltd
dec
fldenv
and
dec
inc
leave
mov
cmc
loope
push
or
jmp
rcll
fimull
ja
mov
xchg
cmpsl
out
int3
pop
sub
in
xchg
sbb
jno
push
push
mov
divl
mov
xchg
pop
aas
jmp
iret
lea
clc
xor
add
mov
jne
push
test
jmp
inc
fcmovbe
fwait
xlat
outsb
or
fmul
sub
inc
das
push
or
shrb
jbe
cmp
jp
repnz
dec
jg
int
cs
cld
out
add
jno
jp
scas
imul
xchg
loop
push
lcall
xchg
pop
inc
cmc
lcall
xchg
cs
mov
pop
or
jns
inc
pop
and
aam
movsb
or
daa
inc
cmp
paddusw
add
sbb
mov
sti
cmp
mov
cmp
sbb
popa
int
add
jno
ja
sub
cmpsl
lock
subb
adcb
mov
loop
cltd
push
in
push
subl
cmp
es
call
push
test
cs
adc
inc
xchg
fidivl
pop
lret
divl
dec
movsl
outsb
test
mov
lods
pop
lods
xor
mov
daa
cltd
jo
les
mov
pop
jne
pop
mov
xor
int
adc
in
adc
jnp
fisubl
aad
inc
repnz
mov
mov
pop
ret
fcomi
or
add
fsts
fldcw
push
cmp
repz
decl
push
icebp
mov
push
inc
fmulp
push
stos
clc
add
and
or
bound
pusha
shl
push
cmc
insl
mov
dec
jmp
adc
cmp
lock
push
adc
mov
jne
xlat
subb
mov
mov
clc
enter
scas
insl
scas
out
sub
jns
xlat
adc
jbe
fdivrl
jb
frstor
or
push
jnp
or
int
jecxz
mov
cmp
mov
mov
enter
clc
scas
push
dec
and
add
jge
shlb
add
mov
test
pushf
leave
jecxz
dec
lret
mull
cmp
jecxz
and
xorl
decl
xlat
or
in
addr16
push
loope
mov
xor
pop
xchg
add
pop
fsubp
ss
add
or
xchg
mov
adc
test
xor
dec
push
int
fistpll
aaa
and
leave
cld
in
out
dec
je
pop
fsubrs
pop
sbb
pop
jne
insb
lods
aas
xlat
or
notl
js
add
cmp
mov
mov
add
cmp
ds
xor
push
mov
outsl
push
jmp
push
inc
or
leave
xchg
mov
outsb
adc
cli
mov
mov
lods
xchg
adc
push
mov
sar
mov
add
or
in
pop
nop
es
lret
push
jo
std
leave
imul
js
jne
icebp
js
ffreep
sbb
sti
outsb
daa
incb
xchg
jmp
mov
movsb
inc
dec
xchg
fsubr
lret
test
ret
sub
push
inc
mov
mov
add
andl
bound
pop
mov
cmp
ds
mov
daa
jo
add
sbb
lahf
arpl
sbb
inc
mov
inc
push
daa
lret
loop
mov
cli
ret
cmp
adc
fmul
cmp
cwtl
icebp
aaa
aas
in
sbb
mov
dec
out
int
loopne
lret
imul
outsb
pop
imulb
mov
pop
decl
and
push
and
jb
xrelease
clc
jmp
mov
jecxz
jne
xor
je
dec
fwait
jg
imul
stos
mov
adc
xchg
push
sbb
dec
or
pop
cmpb
mov
xor
aad
les
inc
cwtl
iret
inc
or
push
xchg
dec
cltd
mov
mov
shl
mov
jg
popa
js
out
adc
dec
aad
ds
lahf
xchg
data16
shrl
add
mov
mov
hlt
rolb
js
jg
aaa
sub
daa
test
scas
pop
mov
mov
sub
xchg
jmp
pusha
jle
cmp
loope
cmp
dec
xchg
fistpl
jnp
insb
movsl
cwtl
jge
cltd
cmp
cld
stos
xor
jb
xorl
push
lcall
pop
cmp
and
xchg
jl
mov
sub
push
testl
stos
push
mov
pmulhw
pop
xchg
mov
push
stos
cmp
and
pop
inc
mov
imul
test
sbb
pop
adc
in
insl
sub
ret
loopne
jecxz
sub
outsb
fistpll
mov
xchg
mov
fistpll
adc
sub
add
pop
jb
or
jmp
xchg
mov
and
inc
fsts
push
inc
aaa
ds
mov
push
das
pushf
add
ret
cld
ja
ret
and
mov
into
into
rolb
cmc
mov
mov
jecxz
sbb
loopne
adc
aam
idiv
mov
push
pop
ja
mov
inc
lahf
mov
dec
pop
xor
or
sub
xlat
push
sahf
sarl
andb
aad
adc
popf
lea
fucomp
jnp
fstps
lods
ljmp
es
sbb
dec
xor
pop
repnz
xchg
sub
push
jne
es
les
out
iret
xchg
cli
adc
bound
lods
lea
fwait
pop
sbb
fistps
movsb
test
shr
in
pop
pop
xchg
pop
out
dec
cmpsb
add
insb
or
cld
add
std
push
sarb
jge
mov
add
in
push
add
jnp
ds
inc
subl
lods
aad
mov
scas
jp
pusha
insb
sub
test
xchg
das
imul
stos
or
mov
movsl
test
mov
movsb
scas
add
in
add
adc
xchg
mov
dec
enter
jg
cs
xor
lods
jns
in
add
xchg
cmp
dec
fcoml
pop
inc
addr16
call
cli
lea
jo
mov
sarl
push
in
imul
adc
std
gs
sahf
push
pop
mov
out
hlt
ds
aam
rorb
and
jge
cmpsl
imul
movsl
add
js
test
add
das
popf
test
mov
and
jp
add
lea
ret
leave
mov
add
push
repz
fcmovb
ret
lret
add
aaa
and
ss
das
jae
dec
pop
in
pop
insl
or
pop
int3
sbb
jmp
sub
sbbb
jg
fldt
loopne
xor
and
data16
xorl
or
add
mov
add
xor
or
xor
jo
clc
cmp
xor
xchg
cld
pop
aad
and
xchg
push
ljmp
lret
push
xlat
push
sbb
test
sub
xchg
and
out
inc
adc
sub
lahf
xchg
cmp
jecxz
xor
out
aaa
adc
fildl
pop
adc
movsb
repz
jmp
add
pop
push
push
stc
out
popf
cld
cmpsb
into
adcb
movsb
pop
or
add
outsl
jo
insb
stos
imul
arpl
lea
inc
movsb
mov
add
push
test
lock
adc
or
testl
ss
cmp
jbe
sub
sbb
dec
pushf
mov
inc
out
fidivrs
jb
in
hlt
mov
jno
es
fnstsw
pop
inc
cmp
jne
push
add
jae
sbb
out
sub
std
je
mov
xor
movsb
mov
inc
movsb
push
dec
in
inc
cmp
popa
sub
mov
dec
sub
sarb
push
xchg
mov
cmp
xchg
scas
cltd
mov
ljmp
inc
push
enter
jo
dec
popf
outsl
mov
imul
mov
ret
xchg
int3
mov
push
ret
mov
mov
fwait
mov
sarb
adc
cmp
aam
mov
xchg
stc
add
ja
dec
inc
and
cld
addb
je
mov
jge
mov
cmp
fld
mov
hlt
stos
cmc
jge
mov
cwtl
xor
push
ffreep
jnp
stc
push
inc
mov
negb
xchg
mov
rcr
test
fistl
or
int
pop
mov
jnp
fwait
imul
xor
icebp
pop
in
out
xlat
bound
mov
popa
sub
leave
mov
cltd
or
inc
lods
fwait
repnz
adc
adc
push
int3
xor
loope
icebp
inc
jns
int3
adc
decl
fdivrl
jns
ss
mov
mov
enter
push
push
aam
jbe
dec
xor
fistps
xchg
jle
push
mov
push
jg
add
mov
inc
pop
aad
pop
dec
in
jp
in
xor
leave
push
cwtl
sbb
jnp
pop
mov
out
jg
or
mov
daa
loopne
add
add
jl
mov
aam
into
sbb
xor
enter
into
in
clc
and
lea
sbb
mov
cmpsl
scas
inc
push
cmp
stc
into
sti
gs
dec
fidivs
inc
jne
pop
sbb
inc
or
cmp
decb
jmp
sub
inc
idivl
in
or
data16
jb
dec
pop
xchg
je
or
dec
roll
jnp
add
and
xchg
mov
sbb
push
lods
dec
divb
and
fldenv
mov
dec
daa
cltd
imul
add
sub
xor
adc
and
sub
stos
cmp
cwtl
sub
mov
arpl
pop
sarl
mov
cli
fucomp
insl
flds
stos
andl
or
push
test
jmp
mov
or
dec
pop
jae
outsl
ljmp
outsb
xchg
ds
sbbl
adc
int3
xchg
push
lret
xchg
mov
inc
ret
cld
lcall
aad
push
bound
pop
lods
aam
arpl
mov
test
ja
repz
inc
pop
insb
sub
iret
cmp
sbb
fwait
adc
sbb
icebp
and
in
loop
sahf
pop
xlat
cmc
jge
aaa
mov
in
repnz
out
sbb
incb
int3
sub
add
ja
aam
pushf
or
add
aaa
je
int
cmp
scas
fidivrs
scas
adc
mov
lds
stc
or
inc
or
out
pop
jmp
sbb
in
pushf
jns
in
jo
dec
mov
pop
sub
inc
out
call
aam
and
les
loop
add
bound
dec
push
sub
cltd
inc
xchg
adcb
and
mov
cld
xchg
pop
or
dec
ret
das
jns
int
stos
mov
outsb
adc
mov
push
adc
loop
rcrl
orb
movsl
push
xlat
mov
gs
mov
pushf
lret
popl
enter
test
pusha
insb
jle
xchg
jns
in
push
arpl
popf
lcall
out
test
lea
sbb
aad
adc
xlat
das
pop
jg
cld
jmp
jae
inc
jp
jmp
movsl
mov
or
adc
and
icebp
dec
into
loopne
adcb
mov
into
fisttps
xor
lret
xor
repnz
dec
lahf
jns
add
mov
xchg
data16
lods
movsb
xor
arpl
adc
repnz
sbb
fildl
test
jecxz
adc
lods
jnp
not
pop
sarb
sbb
jl
sahf
loopne
rorb
icebp
jl
mov
ja
cmp
shl
lock
sti
fiadds
cmc
les
cmp
push
sub
mov
cmpsl
cwtl
sub
jl
xor
clc
xchg
jp
fidivrs
cmpl
addr16
movsl
imul
inc
pushf
adc
pop
jne
dec
mov
push
inc
call
jg
es
adc
ss
jnp
test
iret
and
jbe
lret
movzbl
and
push
inc
xchg
inc
jmp
xor
add
push
adcl
xchg
mov
inc
pop
mov
pushf
aaa
and
jb
add
dec
and
sub
xor
and
dec
cmp
lahf
dec
sar
test
fcmovnbe
sub
add
call
loop
cltd
inc
sbb
repz
lods
out
xchg
fldln2
jecxz
dec
arpl
in
loop
mov
or
pushf
xorps
lret
cmpsl
lahf
mov
fcmovbe
xorl
fistps
loopne
xor
add
pop
jecxz
sub
cmp
adc
aam
xor
sahf
orl
in
adc
out
aaa
pop
mov
pusha
push
mov
add
cmpl
mov
leave
xor
daa
sti
aas
mov
cmp
in
or
cwtl
xor
jl
inc
sub
filds
cmp
testb
inc
inc
imulb
roll
aas
mov
imul
xor
popf
fidivrl
ret
jge
test
push
jbe
mov
sbb
sbb
pop
movsl
mov
mov
jmp
adc
adc
mov
and
into
and
sarb
insl
out
mov
sub
mov
mov
sahf
pop
xchg
xor
sbb
pop
add
out
sub
push
insl
aad
es
addb
mov
lods
iret
mov
cmpsb
cmp
xlat
roll
dec
and
mov
loop
jb
mov
mov
lret
cmp
pop
xor
lcall
pop
jg
and
test
aas
mov
jg
adc
dec
push
cmp
enter
out
fdivs
xorl
pop
cmp
and
fcmovb
lahf
in
xor
pushf
sbb
push
mov
mov
xchg
jl
test
and
cmpb
mov
imul
pop
mov
cs
pusha
mov
divl
int
mov
stos
rcl
mov
out
ret
scas
pop
and
adc
xchg
adc
or
lahf
xchg
xor
fidivrs
lret
mov
push
daa
addl
xchg
orl
popf
ss
cmp
mov
inc
bound
jns
adc
mov
fistps
adc
xchg
sbb
lahf
sbb
push
push
insl
sbb
movsb
incl
cmp
mov
adc
stc
clc
pop
adc
add
mov
jne
pusha
cmp
xor
inc
fsubs
outsb
dec
imul
cltd
jae
pop
xor
jne
pop
cwtl
or
pop
push
bnd
divb
and
pop
or
xlat
dec
sub
js
adc
orb
jnp
sbb
ss
clc
enter
add
and
mov
lret
xor
test
cli
push
jne
gs
movsb
cmp
std
outsb
push
pop
adcl
int3
shll
test
mov
jbe
jmp
xor
aaa
mov
sbb
jae
aam
jno
bound
jns
bound
xchg
pop
fdivl
addl
dec
adc
jg
adc
jg
out
cmp
cltd
mov
test
mov
shl
inc
inc
cli
cmc
movsb
fildll
sub
dec
adc
arpl
inc
scas
pop
push
push
dec
ret
dec
push
sub
pushf
fisttpl
sbb
push
popa
outsb
sub
push
mov
push
enter
icebp
addr16
mov
cmpb
mov
cmpsl
and
xor
push
out
ja
jp
test
sbb
movsb
repz
cmp
inc
mov
stc
orl
loope
call
mov
aam
adc
scas
movswl
in
pop
mov
and
mov
or
pushf
out
sub
fildl
pusha
ret
push
adc
and
mov
jns
mov
movsb
aaa
jge
lock
lods
sub
mov
mov
jnp
and
sahf
repz
xor
mov
aaa
in
imul
jmp
xchg
je
mov
jno
jbe
ficoms
push
stos
push
pop
fisttps
fs
xchg
pop
xchg
inc
popf
dec
lock
push
lds
inc
cmpsb
push
push
mov
sbb
push
es
push
pop
xchg
vpsubb
in
lcall
into
mov
jns
cli
jg
pop
inc
or
and
ljmp
scas
push
loopne
or
in
repz
push
sbb
sbbb
popa
andl
inc
sbb
pushf
cmc
and
jl
loopne
fisubrl
mov
insl
fidivrs
jae
cmp
xchg
push
adc
adc
adc
add
cmpsb
push
movsl
gs
inc
bound
dec
fdivr
dec
hlt
pop
arpl
inc
mov
out
inc
lock
sbb
jge
pop
mull
push
daa
fadds
jle
mov
sbb
pop
aad
add
ss
mov
inc
mov
pop
inc
xor
adc
adc
mov
iret
or
and
adc
xchg
mov
test
js
pushf
outsl
pop
sub
pop
loope
dec
cltd
push
dec
inc
shrb
pop
push
scas
mov
lds
mov
jo
in
pop
cmp
mov
sahf
sbbb
dec
loope
mov
repz
cmp
pop
mov
mov
push
daa
cli
testl
orl
lods
cmp
dec
test
je
push
gs
and
es
xchg
fisttps
push
ljmp
mov
cmp
mov
push
shlb
sub
pop
adc
inc
pushf
add
mov
aad
push
sbb
cmpsl
jbe
loop
push
push
push
pop
sbbb
flds
orl
aas
mov
or
insb
pop
dec
enter
xchg
inc
data16
aam
mov
test
js
movaps
mov
inc
jl
shufps
push
mov
pushf
mov
mov
adc
fiaddl
sub
out
into
mov
jae
push
outsb
xorb
arpl
sbb
add
dec
jae
push
inc
rcrl
loope
icebp
mov
outsb
or
call
insb
adc
mov
jo
shlb
add
les
std
mov
out
fnstcw
add
movsb
js
and
push
adc
in
ds
pop
xchg
dec
outsb
xorb
mov
inc
sub
notb
jmp
mov
and
mov
add
lods
pop
xor
lcall
movsb
xor
cmp
jle
lahf
or
xor
jnp
pop
mov
loope
xchg
mov
lahf
test
lret
mov
lea
adc
jge
xchg
std
adc
push
data16
pusha
movsb
andl
mov
adc
mov
dec
inc
xchg
scas
adcb
push
push
lods
leave
jmp
inc
xor
bound
push
mov
in
in
dec
pop
xchg
repz
jl
cmp
mov
ljmp
int3
pushl
or
repz
inc
jbe
and
lds
and
add
je
xor
popa
xchg
adc
roll
lret
pusha
test
out
and
adc
pusha
mov
inc
call
or
xrelease
mov
adc
pushf
out
pusha
mov
sti
pop
dec
mov
add
pop
inc
dec
push
dec
push
in
mov
jg
lret
and
inc
outsb
jns
insl
int3
pusha
push
wbinvd
cwtl
test
and
cmpsb
adc
out
mov
fists
pop
push
pop
xchg
dec
adc
js
shll
xor
andl
pop
or
pusha
jno
mov
pop
and
xchg
push
mov
mov
stos
cmp
sub
sbb
mov
push
mov
inc
add
stos
fmuls
mov
sar
out
pop
es
fists
movsb
jle
add
leave
push
dec
rcrl
xchg
movsl
or
repnz
vmread
mov
xchg
sub
dec
cld
mov
cmp
push
adc
xchg
shl
and
lret
sub
add
mov
push
aas
cld
push
mov
xor
sub
xor
lods
sti
xchg
sbb
inc
cmp
push
mov
sub
imul
shr
adc
jae
cmp
cs
pop
ss
lahf
jnp
hlt
dec
mov
or
adc
adc
xchg
js
fimuls
mov
or
push
hlt
daa
sbb
mov
adc
clc
leave
insb
pop
gs
mov
mov
mov
insl
mov
sub
and
rcrb
mov
pop
sbb
jnp
outsb
dec
add
mov
push
or
daa
loop
add
mov
or
dec
pop
ss
ljmp
dec
cmp
mul
push
adc
jg
enter
fdivrs
sbb
out
lret
mov
push
mov
popa
mov
js
xor
lds
mov
iret
jns
or
pushf
jo
test
sahf
push
negl
out
dec
mov
out
lds
add
inc
shll
jl
shrl
xlat
bound
dec
mov
jmp
in
jle
ret
dec
dec
rcr
mov
arpl
shl
lock
mov
pop
sub
gs
lahf
xchg
sahf
pusha
fmull
aad
jo
mov
lds
das
inc
jae
clc
or
sbb
sti
int3
arpl
sahf
les
xacquire
cmc
xlat
popf
push
fstpt
xchg
cmc
sbb
divl
out
adc
scas
loop
scas
or
mov
out
popa
push
out
testl
mov
fisubrl
mov
xchg
sub
mov
out
in
mov
dec
out
cmp
sbb
sub
push
mov
mov
mov
test
add
test
dec
stos
xor
sub
jbe
jge
addl
fsubrs
sub
andb
inc
sub
add
imul
rcll
jle
mov
mov
cmp
jae
aad
xchg
or
add
push
push
mov
adc
or
inc
je
sarb
cmp
or
adcl
or
inc
shll
es
xchg
sub
jnp
and
les
xchg
cmp
dec
mov
insl
inc
pop
pop
mov
imul
dec
add
sub
das
lock
popf
in
aaa
jg
xchg
dec
clc
sbb
inc
movsl
dec
stos
inc
cmp
out
insb
xor
sbb
js
mov
jl
adc
cmp
mov
mov
and
adc
ficompl
jnp
jnp
xor
sub
daa
arpl
fldt
insl
xchg
xchg
jb
adc
outsl
mov
sub
test
cmp
push
pop
jo
xchg
jmp
and
mov
push
test
insl
cmc
dec
lss
cmp
and
cmpsl
mov
enter
enter
cmp
imul
out
xor
pop
sub
mov
push
push
adc
cwtl
pushf
add
mov
push
xchg
lcall
ljmp
fdivrl
arpl
and
repz
dec
movsl
mov
and
mov
loope
outsb
outsl
call
lret
add
daa
push
or
popf
sub
dec
adc
aas
lcall
pop
mov
in
mov
xor
xlat
jno
jg
jmp
xchg
push
pop
xor
jmp
insb
scas
jo
popf
mov
repnz
test
frstor
push
lea
sti
test
xor
out
in
xor
mov
sub
das
push
leave
and
cld
push
sbb
imul
mov
mov
inc
and
fsubr
dec
imull
and
and
cmp
js
cmp
int
mov
or
jp
jle
add
mov
fwait
pop
mov
test
pop
gs
ficomps
cmp
in
enter
ljmp
aaa
push
adc
or
jmp
adc
addb
aam
cmpsb
and
test
leave
adc
xlat
mov
jbe
hlt
popf
sub
jae
cmpsl
dec
and
push
push
fs
inc
lahf
xacquire
lods
out
cmp
mov
push
cld
adc
jnp
repnz
xchg
int3
pop
in
xor
cmpl
into
movsb
outsl
push
shrl
lock
fcomps
xor
out
sbb
dec
fnstenv
dec
test
andl
dec
inc
push
jno
ret
or
push
inc
push
mov
sti
ljmp
pop
imul
jnp
sbb
and
xor
inc
insl
sbb
testb
stos
inc
je
pusha
inc
aad
jo
int
mov
aad
test
xchg
fs
jno
dec
add
cmp
sub
cmp
xchg
js
adc
popa
inc
mov
and
cmpsb
dec
mov
je
test
lods
mov
rolb
cmpsl
ljmp
add
les
leave
inc
cmpsb
shrl
mov
push
leave
jl
cltd
and
push
push
or
push
repnz
cmc
xor
fdivrl
inc
add
insb
xchg
lods
adc
fidivrs
jns
fs
bnd
push
addb
add
inc
mov
xor
or
je
lret
push
loopne
pop
addl
ljmp
push
sub
fstps
pop
mov
pop
pop
push
jnp
push
add
cltd
shlb
in
push
fcmovne
sub
mov
add
cmp
jns
inc
rorl
or
orl
fmuls
mov
mov
and
or
adc
std
out
inc
mov
xor
jecxz
jo
jmp
outsb
addr16
cwtl
inc
movsb
xchg
pop
and
jg
xchg
lahf
jg
cltd
xchg
and
xchg
mov
fscale
rcll
imul
rclb
leave
inc
mov
iret
inc
push
or
sbb
pusha
inc
mov
test
mov
imul
movsl
push
cld
fs
inc
mov
mov
fs
out
sbb
push
push
bound
adc
xor
pop
pop
mov
jmp
pushf
and
jmp
jge
jmp
arpl
jmp
fiaddl
inc
xchg
mulb
jg
inc
mov
push
jle
cmc
sbb
xor
icebp
add
and
clc
stc
lods
xchg
shll
mov
lcall
mov
adc
int
nop
jbe
mov
lea
addr16
jp
sbb
mov
pop
shll
sbb
gs
add
test
add
mov
cmp
ret
add
outsl
or
jae
lret
jns
or
or
pop
jbe
mov
dec
pushf
push
repz
clc
cmp
push
andb
icebp
xchg
sub
add
cmp
movsl
push
jo
push
and
jge
sub
cltd
mov
mov
sub
pop
mov
and
aaa
test
insl
icebp
mov
insb
pop
jb
dec
cmpsb
in
stc
loope
cmp
inc
push
shll
jge
mov
mov
fimuls
ss
dec
push
fnstsw
add
scas
mov
loop
fnstcw
push
gs
cmp
lahf
jo
cmp
push
inc
mov
loop
mov
imul
shl
fwait
inc
or
jmp
out
push
lea
mov
adc
mov
jecxz
rol
dec
cmp
mov
inc
int
leave
lret
mov
icebp
pop
mov
jb
pop
jnp
js
rcr
push
sub
inc
call
mov
push
es
hlt
mov
stos
dec
test
sbb
jg
jle
ljmp
gs
loop
jnp
xor
push
ljmp
insb
and
ljmp
inc
add
inc
lahf
rol
pop
push
and
jl
hlt
int
jb
xchg
loope
push
les
cmp
jecxz
jo
shrb
mov
fadds
mov
jg
pop
pop
popf
sbb
inc
add
xchg
andl
cmp
mov
stos
or
mov
loopne
adcl
jp
mov
jno
in
sti
je
jg
frstor
test
mov
jmp
iret
test
mov
add
pop
inc
mov
cld
icebp
fwait
jb
and
cltd
imull
ret
pop
inc
jg
cmp
mov
daa
arpl
inc
addl
push
mov
pusha
pushf
mov
jae
inc
push
call
out
mov
in
or
dec
inc
loope
das
orb
xor
cwtl
jne
nop
pop
push
mov
mov
push
mov
xchg
incl
inc
outsl
cwtl
push
scas
add
push
cmpsl
push
lret
aaa
xchg
mov
adc
out
dec
les
sub
mov
cmp
lahf
ficoms
and
fimull
mov
push
inc
jnp
mov
ss
and
fbld
decb
popa
repnz
add
dec
lods
les
and
rclb
std
or
outsl
inc
arpl
push
push
pop
xchg
stc
bound
jmp
enter
lods
dec
sub
jnp
xor
int3
rolb
mov
or
pop
mov
lcall
mov
leave
scas
shll
cwtl
add
aad
cmp
mov
push
sub
push
leave
jno
lea
mov
ja
inc
shlb
jb
jae
push
pusha
ds
or
cwtl
call
adc
inc
pop
xchg
insb
pop
dec
aad
jp
aam
adc
add
stos
fisttpll
cmpsb
fildll
dec
clc
add
inc
pop
pop
mov
dec
int3
mov
insb
bound
xchg
adc
lcall
push
xchg
aad
inc
mov
dec
adc
sbbb
mov
jmp
push
shr
test
cmp
cs
mov
xchg
cmp
xchg
and
add
test
jne
cmp
stos
inc
fbstp
imul
hlt
int
lret
mov
in
movsb
shrb
sbb
jno
sub
xlat
push
ljmp
push
mov
js
push
mov
arpl
inc
cmp
push
pop
rorb
icebp
mov
or
das
xor
out
divb
sti
pushf
ljmp
pop
jne
cmp
mov
jno
ja
jmp
addr16
imul
and
in
in
xchg
shlb
test
enter
jl
xchg
inc
push
mov
lea
pop
inc
jno
adc
sub
rorb
sub
jp
cmpsl
clc
out
mov
mov
fs
push
push
clc
pushf
and
mov
and
movsl
cmp
fisttps
stos
add
pop
and
jmp
xchg
aaa
adc
pop
dec
mulb
push
leave
add
cmp
mov
or
xchg
ss
xchg
lahf
out
add
sub
inc
mov
or
cmp
sbb
ret
sub
in
adc
sbb
xchg
mov
and
shlb
mov
iret
scas
es
mov
xor
je
lcall
lea
sbb
dec
scas
sar
repz
xchg
mov
pop
xorl
inc
pop
mov
pop
pop
push
mov
or
lock
in
out
dec
test
xor
cmp
pop
jp
sub
push
jo
lret
and
mov
lea
mov
enter
movsb
or
mov
jge
mov
cmp
lahf
pop
movsb
add
loopne
repz
movsb
aas
lret
int
iret
mov
pop
jbe
dec
cmp
jmp
imul
sbb
into
push
scas
in
lea
pop
iret
insl
loopne
cmpsb
loopnew
dec
out
das
in
mov
fdivrp
mov
push
dec
mov
push
adc
and
cmc
sbbl
sub
in
sbb
or
stos
leave
es
mov
js
out
adc
imul
aad
push
cmp
mov
dec
xor
push
fnstcw
xchg
jb
cli
mov
js
ljmp
repz
jbe
pop
and
add
ds
inc
sbb
add
movsl
inc
push
push
repz
clc
lods
jle
inc
mov
sbb
call
das
sub
push
sarl
mov
add
sahf
jae
pop
dec
sbb
and
out
push
outsb
cmpsb
test
imull
ret
dec
adc
jl
andl
mov
pop
mov
imul
ljmp
ret
addr16
lret
cmp
xchg
lcall
cmpsb
sbb
dec
fcomps
push
or
push
dec
mov
jb
cmpsb
ja
mov
pop
mov
dec
fisubrs
fidivrl
or
ljmp
cmp
in
xchg
pop
repz
jle
or
inc
cld
hlt
jmp
sbb
sub
cmp
in
add
xchg
pusha
scas
shrb
pushf
enter
inc
push
lock
in
fcom
jle
add
repz
fwait
sub
sub
hlt
xchg
mov
xor
sarl
or
xchg
das
scas
or
addl
mov
lret
sub
cmc
pop
mov
gs
sbb
cmpsl
nop
test
mov
out
dec
fsubrl
pop
lock
xor
rcrl
dec
lock
push
adc
or
xchg
sbb
xor
push
iret
fimuls
sahf
add
stos
xchg
popf
imul
cli
testb
fdivr
push
es
fs
stc
pop
loope
sub
and
fsincos
jmp
or
sbb
adc
dec
arpl
int3
or
testl
cld
repnz
mov
cmpsl
mov
mov
xchg
jae
dec
fiaddl
dec
mov
aas
fwait
xorl
push
inc
test
mov
mov
mov
out
jmp
scas
in
pop
pop
mov
mov
out
adc
xchg
ds
in
into
insb
movsl
push
pop
fimull
aas
pop
repz
add
dec
xchg
out
shrb
fisttpl
repz
push
aaa
iret
sti
or
lods
sub
jne
mov
scas
fdivr
test
mov
xlat
out
cli
inc
lahf
pop
pop
mov
mov
add
loopne
cs
mov
or
mov
fwait
sbb
imul
inc
int3
inc
test
pushf
in
pop
jl
out
and
aad
mov
call
jne
or
xorb
lret
add
jecxz
lods
pop
mov
push
insl
stos
inc
sub
mov
mov
repnz
bswap
aaa
test
fwait
pop
mov
xlat
insb
mov
outsl
shlb
cmp
push
push
cmp
cmp
inc
insb
outsb
aaa
push
ds
imul
roll
lahf
aaa
es
ss
and
lods
adc
sarl
push
in
jae
dec
sbb
pop
icebp
aam
dec
xchg
cli
stos
lock
inc
jmp
xor
outsl
mov
lcall
ds
add
dec
xchg
xor
inc
push
push
inc
fs
shl
jae
jno
sub
fdiv
test
push
insb
add
ficomps
mov
jnp
fst
pushf
xlat
mov
inc
mov
movsl
xlat
sbb
nop
icebp
out
pop
sbb
test
fbstp
std
and
data16
aaa
adc
jnp
sar
notb
aaa
scas
das
xchg
out
mov
sahf
sub
push
jae
mov
push
mov
ret
dec
stos
repz
in
rclb
and
jp
dec
or
mov
xchg
adc
mov
inc
test
scas
dec
dec
mov
cmpsb
xor
sbb
or
lahf
sub
int3
or
push
sub
ja
insl
xor
jge
sahf
repz
out
inc
add
stc
or
rcll
popl
cwtl
cmp
fadd
adc
jns
stos
jae
adc
rcrb
pusha
dec
mov
xor
sub
sub
hlt
nop
or
mov
fwait
jl
test
mov
rorl
dec
inc
add
xchg
push
push
neg
and
mov
notl
nop
cltd
into
sti
fdivp
mov
rorl
inc
xor
lods
fwait
push
pushf
push
cmp
and
mov
jmp
fstp
shrb
das
out
and
xlat
in
outsb
insb
js
inc
and
mov
jae
mov
rol
stos
push
ss
fwait
test
inc
jno
add
cmp
jbe
pop
add
mov
outsb
jecxz
loop
cmp
int
jg
lret
in
in
jne
mov
mov
sbb
hlt
cwtl
clc
ss
mov
out
in
fmul
in
jb
and
in
out
mov
add
inc
adcl
insb
inc
insb
mov
shlb
cmp
sbbl
or
imulb
repz
mov
nop
and
rcrl
inc
addl
in
call
mov
dec
push
ljmp
aaa
xor
das
inc
push
adc
mov
add
push
das
into
xor
int3
jle
jle
and
mov
loopne
mov
jbe
andb
cltd
iret
lock
xchg
mov
inc
addr16
xchg
mov
repnz
ficoml
rorl
adc
ffree
dec
sub
push
popf
push
jns
decb
inc
mov
jg
cmc
inc
out
mov
pop
out
int3
mov
int3
and
fadds
sub
adc
and
inc
inc
sbb
out
insl
xchg
loope
in
sub
add
jo
add
jle
stos
jp
dec
prefetcht0
ret
mov
fstps
or
loope,pt
cmp
jg
addb
mov
mov
leave
push
xchg
cltd
mov
pop
push
je
sub
hlt
push
xor
arpl
test
push
outsb
pop
or
adc
test
jmp
sub
movsl
mov
daa
orl
dec
fwait
movsb
mov
out
cmp
push
hlt
mov
jnp
xor
inc
and
xor
xchg
sahf
adc
adc
xlat
cmpsb
dec
cli
cld
adc
push
push
add
dec
dec
leave
sbb
or
xor
sahf
pop
insb
push
stos
cmp
mov
stos
cs
lahf
out
cld
inc
mov
mov
xchg
fs
inc
sbbl
pop
mov
mov
or
ds
mov
inc
xor
hlt
and
push
imulb
aad
shl
movsb
aaa
shrb
int
out
movsb
bound
into
cmp
je
pop
xor
mul
sbb
scas
jbe
in
sahf
inc
insl
dec
lcall
decb
dec
lock
sbb
js
or
adc
and
les
xchg
js
and
push
xor
in
ret
jecxz
mov
js
pop
dec
mov
cs
aad
jle
fimuls
and
insb
inc
fadd
mov
int
std
xor
popf
aad
or
or
je
pop
int3
jbe
fnstcw
pop
fiaddl
push
inc
sahf
out
mov
mov
fidivs
sahf
outsb
jmp
mov
mov
dec
inc
fs
xor
imul
and
ja
push
aas
xor
mov
int
push
leave
fwait
cltd
insl
dec
outsb
sub
push
cs
mov
call
or
inc
inc
gs
jae
loopne
lret
js
mov
out
xor
or
idiv
clc
mov
frstor
or
int
je
imul
in
shl
call
jmp
lcall
sub
cmpsl
and
decb
movsl
pop
sbb
repnz
repnz
rcll
mov
mov
in
mov
rcrl
inc
mov
mov
inc
dec
adc
xor
cmc
xchg
push
cli
or
cmp
jmp
cli
add
xchg
fmull
aad
or
ss
outsl
loop
icebp
shlb
xor
out
mov
frstor
lcall
inc
in
loopne
jecxz
stos
inc
add
sbb
jmp
xor
xor
push
sar
push
xchg
mov
xor
fstpl
mov
imul
ja
out
push
cmp
mov
stos
and
xchg
xchg
pop
add
pushf
mov
outsl
and
add
pop
imul
inc
jmp
adc
push
dec
push
cmp
scas
fsubr
scas
mov
xor
pop
xor
jnp
lret
mov
xchg
mov
das
cld
jbe
lahf
cmp
hlt
popa
icebp
inc
in
mov
mov
negl
in
fstps
xor
add
sub
cmp
leave
clc
jbe
int
fisttpll
mov
into
icebp
xchg
mov
jmp
jmp
lret
mov
or
aas
push
mov
xchg
jmp
jmp
ss
or
cwtl
ss
push
push
sub
jnp
push
push
adc
repz
jb
jecxz
fwait
or
iret
sub
and
adc
dec
nop
sub
in
pop
adc
mov
cmc
xor
incl
loop
lahf
xchg
in
ret
or
mov
xchg
and
mov
mov
sbb
data16
mov
xlat
hlt
int
fs
rorl
push
jae
dec
cmc
enter
xlat
adc
negl
test
push
mov
lods
cmp
mov
jnp
jle
xchg
mov
mov
insb
lea
push
clc
loopne
imul
aad
icebp
and
repnz
jecxz
lock
adc
cmp
cmpsl
inc
js
ret
mov
jae
push
mov
test
pop
mov
add
add
and
mov
int3
daa
imul
sub
cltd
out
test
xchg
mov
pop
cmp
mov
dec
mov
and
in
cmpl
fwait
xor
pop
pop
pop
jmp
adc
push
and
cs
push
sbb
bound
pop
mov
add
push
aaa
jecxz
sbb
xchg
push
lcall
xchg
pusha
outsl
sbb
js
or
xlat
cwtl
inc
push
jns
inc
fwait
cmpsb
sbb
jno
out
cmp
dec
hlt
call
sub
dec
imul
test
mov
sub
cmp
lock
pop
popa
and
mov
mov
sub
fmull
or
call
fdivrp
and
sahf
pop
jmp
push
pop
pop
mov
popa
sti
adcb
jge
outsb
cli
lods
sub
mov
add
fs
fdiv
mov
ljmp
std
fadds
inc
jge
fcmovne
add
mov
jp
xchg
dec
cmp
pop
xor
dec
and
add
ljmp
into
xchg
insb
fs
stos
push
popf
in
cmp
pop
cld
iret
cmc
and
xor
aad
mov
pop
mov
pop
dec
subb
lock
jb
mov
adc
sbb
imul
inc
sbb
inc
sbb
add
pop
stc
mov
negl
adc
push
jmp
and
mov
push
shrl
adc
sbb
iret
add
jno
insb
pop
cmpb
pusha
xor
ljmp
inc
sub
pushf
sub
dec
mov
and
rcll
inc
or
icebp
mov
addr16
sbb
sarb
out
jge
out
sub
mov
fsubrl
adc
push
ds
sti
and
test
push
push
js
jl
xor
popf
aaa
test
jl
mov
lcall
es
mov
ficoml
jge
movsl
xor
push
xor
push
sbb
or
mov
push
enter
dec
addb
fwait
lea
fcmove
mov
sub
andb
clc
push
jecxz
test
ficomps
adc
fisubrl
add
dec
mov
fadd
dec
xor
mov
add
push
xlat
std
int
scas
xchg
loop
and
movsl
pushf
push
lret
int3
mov
leave
inc
das
imul
xchg
movsb
mov
sub
xchg
lret
or
movsl
je
rorb
and
nop
sbb
pop
cli
push
xchg
lea
lods
insl
sbb
inc
fimuls
cld
and
jns
mov
mov
js
dec
mov
and
jp
lea
pop
lods
sub
std
and
shlb
cli
gs
adc
or
jae
push
jae
cmp
fldenv
inc
jne
repz
jle
inc
adc
lods
or
jne
sub
push
sub
jbe
push
shlb
cmp
out
cmpsl
mov
lahf
fiadds
xchg
insl
xchg
std
sub
bound
cli
mov
mov
xor
push
pop
fdivrl
addl
mov
add
cmpsb
jge
and
push
leave
loop
xchg
mov
lock
repnz
add
clc
pop
int3
scas
jp
sub
adc
mov
mov
inc
pop
stc
clc
xchg
sbb
pop
mov
mov
aad
fxch
ret
in
and
ret
repz
add
mov
add
inc
cli
push
sbb
jnp
jecxz
xor
add
xor
xor
fs
and
or
mov
xor
pop
xor
dec
loop
js
sub
int
and
sub
int
mov
cmp
pop
dec
das
fdivrs
xchg
pop
cmp
adc
mov
sbb
daa
fs
jnp
out
jb
mov
push
cmp
and
pusha
xor
int
cmp
mov
and
ret
cmp
incb
daa
sub
adc
ficomps
add
in
lds
sub
inc
cli
in
fucomi
xlat
pusha
hlt
insl
mov
outsb
sti
or
and
cmpb
mov
push
roll
dec
and
inc
mov
push
shll
pop
loop
loop
dec
cmc
ret
push
or
mov
xchg
sub
repz
push
lea
jmp
mov
and
jbe
orb
fimull
and
mov
popa
dec
mov
mov
cmp
mov
pop
test
ret
push
mov
jle
sub
repnz
inc
aas
xorb
cmp
clc
inc
mov
jp
sub
outsl
dec
incb
int3
lods
shrl
std
mov
decl
jle
adc
cmp
push
or
sti
loopne
lret
movsl
repz
mov
lret
cs
dec
pop
inc
es
ret
lods
cmp
push
int3
and
stc
inc
mov
mov
pop
out
insb
into
mov
in
enter
loopne
jl
and
xchg
cli
push
push
ljmp
mov
xchg
repnz
ja
or
xor
xchg
jno
lea
or
incl
sbb
pop
shlb
imul
iret
test
xchg
mov
mov
icebp
sti
das
push
dec
sbb
xchg
repz
mov
mov
push
mov
add
cltd
mov
and
fwait
xchg
xchg
adc
fs
xchg
xchg
lods
pop
xor
rolb
aaa
sub
in
pop
sbb
inc
call
std
rol
pop
add
pop
adc
clc
adc
pop
xchg
lods
aas
cmp
inc
pop
fmuls
mov
inc
stc
iret
or
stos
mov
nop
stc
dec
into
imul
fwait
jmp
push
addb
scas
pop
or
in
addr16
insl
jb
lcall
mov
mov
sbb
xchg
movsb
fnstcw
inc
cli
sti
aam
dec
lahf
imul
xchg
add
enter
mov
aam
call
sbb
subb
fbstp
pop
push
xchg
adc
cmp
enter
out
xlat
loopne
mov
into
addr16
dec
dec
mov
das
fcomi
mov
push
push
pop
adc
cmpsb
jp
xor
hlt
adc
shrb
lock
mov
adc
test
pop
sub
dec
dec
icebp
insb
adc
mov
mov
mov
or
jmp
pop
pop
xor
pop
mov
jmp
lahf
out
sbb
pushf
out
jns
sbb
push
jmp
mov
mov
cmp
jno
aad
pop
mov
ficompl
mov
scas
out
mov
cmp
pop
jae
jl
pop
jae,pn
adc
and
jno
mov
inc
lret
lcall
les
mov
lods
jge
xchg
cwtl
sahf
shll
lret
shll
cld
dec
xor
push
inc
into
mov
icebp
add
testb
adc
lahf
jmp
or
dec
jle
mov
add
ja
jecxz
cmc
das
insb
or
pushw
daa
fimuls
jns
fcomps
cltd
lods
shlb
inc
xchg
mov
jl
test
icebp
fstpt
add
xor
push
gs
ret
mov
cmc
popf
push
mov
das
jge
adc
fsubs
cmp
sub
cmp
mov
gs
pop
push
imul
repnz
repz
xchg
jg
cs
dec
dec
inc
jg
push
rcrl
jno
jo
mov
push
push
fdiv
scas
in
stos
pop
sbb
xor
mov
es
xchg
and
sub
xor
ficoms
dec
pop
nop
add
dec
xlat
add
fmuls
ret
test
inc
aam
fwait
mov
mov
push
ret
cmc
rorl
leave
mov
jae
out
imul
int3
jb
cmpsb
test
add
ret
adc
pop
xor
stos
out
outsb
xor
fucom
clc
add
sti
mov
push
dec
cmpsb
cli
pop
repnz
das
pusha
dec
inc
mov
adc
test
lret
mov
ja
cmc
dec
je
into
push
add
mov
push
jno
fs
xor
lock
cli
mov
jmp
rcrb
loop
push
fwait
js
dec
adc
cmp
add
pop
add
nop
mov
push
out
fimuls
xchg
pushl
sbb
inc
insl
adc
mov
mov
cmpsb
mov
cmp
mov
push
stc
fwait
push
mov
shlb
imul
fs
std
cmp
mov
push
sub
sbb
pop
adcb
jns,pt
dec
mov
mov
sub
shlb
jns
lock
sub
add
sub
rolb
pop
ss
mov
mov
sarl
or
mov
push
dec
sub
rcrl
je
dec
or
es
pop
xchg
int
sahf
adc
fwait
inc
push
dec
scas
sbb
jne
test
ficoms
data16
lods
jp
adc
jns
mov
xchg
add
iret
xchg
pushf
gs
cmp
aad
inc
mov
xchg
jge
cmp
divl
mulps
sbb
fldcw
mov
das
test
sub
jle
pop
lret
xchg
pop
mov
inc
pop
out
outsb
popf
das
rolb
dec
cmp
loop
rolb
js
loopne
mov
fldcw
mov
aas
jge
lds
jne
aad
sbb
or
lea
cmpb
clc
xchg
and
mov
stos
jp
inc
sub
dec
call
push
loop
adc
into
jno
jno
stos
inc
mov
cmp
dec
sbb
andb
das
bound
mov
gs
or
pop
or
mov
stos
imul
rcr
imul
push
dec
insl
shlb
jmp
xor
xor
cli
ljmp
inc
ret
xor
loop
subb
fs
call
mov
out
aad
addr16
bound
sbb
lcall
inc
pop
xchg
push
dec
sbbl
mov
xlat
idivb
das
loop
or
xchg
dec
or
push
mov
pop
scas
xlat
std
scas
jno
popf
adc
push
fsts
mov
cmp
in
inc
rcll
sub
dec
mov
divl
dec
repz
sub
mov
jp
pop
pop
xchg
push
or
add
icebp
cwtl
dec
mov
sbb
cltd
pop
stc
jbe
shrb
aaa
jbe
movsl
pop
mov
insb
in
lods
jge
adc
jo
insb
stos
neg
xchg
les
movsb
jp
je
pop
and
lds
rorb
pop
and
sub
test
and
adc
andb
jge
iret
push
pop
int3
xchg
jecxz
dec
and
dec
lret
push
adcb
subl
movsl
push
sbb
jo
xlat
xchg
lret
xchg
lret
mov
int
lret
dec
lds
pop
sub
mov
pop
xchg
mov
out
push
mov
xor
pop
pop
or
fld
cltd
push
sbb
fiaddl
and
fidivrl
cmpsl
repnz
add
cmp
es
mov
add
sti
shll
ljmp
mov
ret
enter
jecxz
inc
cwtl
dec
in
icebp
mov
pop
mov
pop
lds
enter
sarb
cmp
mov
adc
inc
add
lret
jns
mov
mov
repnz
adc
mov
cmpsb
push
imul
daa
jo
sub
xor
fildll
xchg
shl
dec
pop
fs
and
sbb
mov
add
push
inc
mov
addr16
push
ficomps
andb
inc
xchg
loop
scas
cmp
testb
sub
add
mov
sbb
xchg
adc
enter
xor
dec
hlt
clc
cmpsl
jle
dec
jl
mov
sub
push
mov
xor
and
mov
sbb
test
scas
test
je
shl
xchg
push
movsl
cmp
sbb
popa
imull
out
cltd
lret
dec
outsb
leave
push
xchg
xor
lret
cld
or
push
fwait
and
ja
mov
pop
mov
arpl
mov
in
dec
insl
out
cmpsl
mov
rorb
insb
data16
filds
rorb
imul
sbb
pop
mov
mov
js
addr16
xchg
fs
rorb
and
pushf
mov
inc
movsb
call
pop
add
mov
clc
xor
sub
mov
or
fwait
int3
pop
cmc
mov
loopne
xor
xor
ret
pop
dec
xchg
fidivrl
adc
jbe
ficompl
sti
pop
rorl
cmp
and
and
mov
lods
push
sub
mov
cmp
mov
into
lods
xchg
maxps
nop
push
jne
inc
pop
xchg
test
pop
and
rcr
pop
call
fwait
mov
add
push
popl
test
mov
add
lcall
adc
stos
adc
sub
push
int
mov
mov
in
jns
jb
lret
and
push
sbb
jne
pop
jecxz
push
and
in
jp
aad
xor
gs
ds
test
add
inc
xchg
mov
or
pop
jnp
and
jae
les
pop
jge
xchg
sub
addb
fiaddl
hlt
adc
jns
mov
inc
pop
push
iret
test
outsl
mov
scas
sub
loop
sahf
insb
sti
aam
scas
roll
add
add
pusha
mov
fs
enter
mov
popa
or
jno
nop
xchg
sbb
enter
and
sub
jns
and
dec
mov
jno
data16
mov
imul
jno
mov
pop
sbb
jge
jge
cs
inc
mov
lahf
add
and
icebp
es
mov
sub
in
test
test
stc
rcrb
lahf
add
jns
mov
aam
popf
xchg
dec
in
adc
sbb
sarb
mov
insb
xchg
pop
push
imul
push
aas
mov
repnz
mov
rclb
test
movb
mov
int3
movsl
xchg
arpl
ret
pop
mov
mov
bound
push
xchg
adc
add
out
pop
sti
ret
mov
cltd
lahf
fcmovnbe
inc
shrl
jb
imulb
mov
adc
repnz
lds
adc
out
xchg
out
aaa
mov
mov
jmp
push
add
in
rcrl
dec
pop
xchg
mov
imul
out
aas
sbb
pop
lar
aaa
xchg
fwait
cmp
xor
pop
pop
outsb
mov
ds
cwtl
clc
mov
sbb
rcl
pushf
cmp
ljmp
aam
mov
push
and
and
xchg
pop
ficompl
cmp
cld
xchg
les
inc
mov
mov
test
sub
in
stc
mov
mov
lcall
insl
mov
add
mov
pop
or
mov
fiadds
loop
es
xor
push
into
addr16
inc
hlt
xor
mov
test
sbb
cmp
mov
data16
mov
and
shlb
test
push
sub
sbb
aam
lret
xchg
pop
dec
mov
loope
xchg
inc
mov
add
mov
fisttps
inc
pusha
xchg
dec
xor
rcrl
loop
xor
xor
in
and
fidivrl
ret
mov
inc
movsb
pop
test
adcb
scas
shll
outsb
lret
push
shll
inc
xchg
xor
lcall
or
mov
cli
cmp
cld
jg
insb
add
xchg
xchg
pusha
sbb
popa
mov
mov
out
scas
mov
out
or
insb
mov
cmp
lds
push
cmp
in
dec
in
mov
push
cld
movsb
insl
and
mov
mov
outsb
ja
mov
jg
js
sbb
mov
fmulp
pminsw
cmp
fildll
or
or
mov
push
jo
jb
out
test
test
ss
insb
jne,pn
cli
cli
mov
mov
xchg
orb
in
es
sti
int
insl
sbb
insb
movsb
cmpsb
mov
testb
ficoml
cmp
push
mov
cmpsb
mov
mov
push
mov
pop
shlb
add
lcallw
sub
mov
jnp
popf
adc
cmpsl
mov
push
rcr
or
pop
push
stos
ljmp
pop
xchg
orb
fdivl
mov
cmc
nop
inc
mov
xor
shrb
push
push
xchg
test
push
inc
sbb
scas
mov
dec
mov
and
xchg
sbb
inc
sbb
sbb
xor
lds
lods
xor
ds
decb
jmp
pop
cmp
jl
sbb
into
filds
mov
xlat
repnz
and
pop
test
sbb
cmpsb
lods
mov
xlat
dec
icebp
test
add
into
jb
dec
clc
or
push
mov
lods
fstpl
cmp
jnp
xchg
jae
popf
cmp
pusha
sahf
ret
mov
shr
mov
mov
or
fwait
popa
and
push
mov
cltd
sbbl
mov
cmpsb
popf
lret
lret
loope
mov
setg
in
and
sbb
aam
fcmovne
scas
xchg
mov
cli
out
popa
loopne
aas
pushf
shl
and
in
add
and
ljmp
push
pop
mov
je
push
ss
push
cmp
in
sub
int
loopne
mov
mov
nop
rcll
scas
add
insb
lock
adc
fcmovu
pop
cmpsl
in
push
xchg
loopne
inc
orb
popa
xchg
push
sbb
loopne
and
mov
jns
jp
out
sub
inc
dec
jns
mov
mul
pop
or
loopne
std
mov
lods
and
stos
adc
mov
loope
mov
add
dec
adc
mov
stos
stc
mov
lret
inc
fidivs
jp
jo
jbe
pop
xchg
dec
mov
in
pop
les
jp
and
out
fwait
inc
adc
and
rorb
push
rcll
or
push
js
push
rorb
add
jnp
cmp
jns
in
ja
adc
cmp
jg
xchg
jbe
shrb
cmp
ror
or
loope
adc
cs
jg
mov
data16
push
inc
pop
dec
sub
cmp
push
orb
insb
inc
orl
mov
sarl
in
mov
or
repnz
add
scas
and
jmp
pop
mov
push
repnz
outsb
cmp
lea
mov
std
sbb
popa
or
lcall
mov
shrl
xlat
push
jb
lcall
ret
xchg
and
sub
in
movsl
push
xchg
out
mov
sbb
jle
xor
daa
mov
dec
sti
xchg
fcmovbe
xor
insl
sub
stos
jbe
outsl
js
out
pop
lock
lahf
orb
mov
andb
repz
pushf
xchg
mov
dec
rclb
inc
mov
in
lahf
out
mov
lds
sub
ljmp
jne
jo
push
and
hlt
xor
in
cli
cmp
pop
fucompp
fmul
cmc
mov
scas
xchg
push
dec
test
das
data16
ret
dec
into
jle
loop
cli
repz
mov
sbb
mov
inc
cmp
or
mov
or
loop
icebp
sub
pop
clc
test
and
loope
add
inc
fidivs
inc
shl
loopne
pushf
fsubs
sub
sbb
outsb
cmp
jge
test
mov
add
xchg
loope
sbb
dec
loope
imul
pop
push
je
clc
shlb
outsl
cmp
push
addl
sbb
gs
test
lds
mov
mov
adc
jne
sbb
cmp
sar
pop
mov
in
push
daa
push
mov
dec
movsl
repnz
sbb
jp
test
cs
push
mov
loop
scas
es
mov
icebp
enter
mov
out
and
loop
inc
imul
xchg
dec
pop
lods
insb
cmpb
sub
inc
dec
and
inc
jge
lret
xchg
out
shrl
ret
loop
aad
mov
loope
dec
gs
sbb
jge
add
sbb
sub
jns
pop
test
jae
lods
adc
lret
cli
and
jmp
jle
test
clc
sbb
sbb
cmpsb
out
filds
movsl
inc
shll
insb
test
divl
cmp
pop
hlt
inc
in
popf
pop
dec
jne
cmpsb
push
in
repz
jbe
iret
and
es
mov
push
sahf
xor
mov
pop
mov
lods
adc
loope
pop
enter
test
cmp
stos
dec
jmp
fwait
adc
jmp
lods
std
adc
xchg
in
repnz
in
lret
xor
test
jbe
dec
jns
add
ljmp
popf
xchg
iret
adc
pop
xor
seta
push
and
mov
push
or
mov
in
pop
xlat
mov
lds
es
into
cmp
mov
loopne
add
xchg
xor
dec
clc
out
sbb
inc
jbe
pop
push
mov
jg
or
or
adc
insl
pop
add
adc
pushf
dec
nop
loope
pop
in
callw
cwtl
repz
and
push
sub
push
das
adc
fs
mov
mov
test
xchg
pop
addl
sarl
popf
pop
arpl
inc
js
push
clc
sub
adc
lock
movsb
scas
fstpl
cwtl
sahf
out
imul
lahf
int3
push
or
jb
stc
pop
daa
mov
outsl
xchg
push
jecxz
int
cmp
lods
call
shll
lds
pop
out
jne
lods
nop
pop
int
xor
sub
andb
xchg
ja
mov
testl
out
xchg
cwtl
repnz
mov
mov
pop
rcll
jo
dec
inc
push
jge
pop
sub
lret
arpl
mov
test
pop
mov
in
pop
add
sub
fs
sub
dec
fadd
xchg
loop
sbb
cld
shll
dec
sbb
jmp
sub
jno
aas
stos
mov
shll
loope
xchg
shl
out
pop
mov
int
dec
pushf
lds
fwait
repnz
insb
sub
sub
inc
jb
mov
and
cmp
cmpsb
je
fnstsw
sub
and
data16
sbb
pop
in
lcall
dec
pop
testl
mov
fisttpl
movsl
push
xchg
add
adc
sahf
mov
test
lea
popf
fisubrl
dec
inc
jbe
lahf
ret
inc
push
mov
aas
or
pop
movsl
les
cmp
jle
xor
inc
pop
ret
or
cmp
mov
insb
cmp
xor
insl
ret
test
push
sbb
out
pop
leave
cmp
stos
jno
int3
xchg
adc
cmp
outsb
popf
pop
lret
xor
mov
int
pop
iret
mov
sub
divb
in
xorl
pop
fwait
cld
or
jmp
popa
mov
les
insb
arpl
and
cmpsl
int
aaa
cmp
push
sub
ret
cli
jg
dec
test
js
ljmp
in
js
loop
rol
sbb
add
fcoml
outsl
add
push
adc
loopne
mov
inc
dec
push
fwait
add
add
jo
mov
cli
mov
clc
pop
sub
fs
cmp
mov
dec
testb
mov
mov
jge
test
jmp
or
sahf
outsb
mov
adc
adc
test
xchg
nop
sbb
test
cmpsl
push
or
mov
mov
mov
xchg
mov
push
in
test
dec
into
in
xor
movsl
dec
pop
mov
movq
dec
mov
and
icebp
repnz
es
popf
dec
mov
rol
pusha
xor
aad
add
fldenv
and
pop
push
lret
jecxz
movsb
xor
mov
mull
mov
mov
mov
and
adc
out
pop
mov
mov
es
jne
dec
push
push
sub
mov
xor
pop
testl
push
fcmovbe
cmp
addr16
mov
icebp
or
in
mov
jo
inc
lahf
jp
aam
mov
enter
mov
mov
loope
mov
cltd
les
ds
cmp
inc
lock
aaa
aas
mov
fldl
daa
iret
pop
inc
and
push
ret
movsl
xor
pop
mov
lock
jb
mov
pop
je
mov
je
pop
aas
aas
lock
pop
and
mov
add
or
jo
adc
iret
jp
dec
js
jo
loop
rolb
jnp
aad
jae
test
lret
les
or
adc
shlb
jecxz
xchg
or
cwtl
pop
and
inc
mov
mov
mov
adc
pop
sub
push
and
mov
out
xor
add
stc
sub
loop
scas
adc
xlat
jmp
fsubl
and
and
shll
adc
ret
fucomi
cmc
daa
popa
adc
test
jnp
push
out
fcmovbe
push
jg
xchg
add
out
fistpl
out
add
repz
hlt
adc
fists
dec
adc
out
ret
repz
dec
sbb
jbe
stc
lret
je
aam
sbb
std
mov
xlat
mov
jmp
xor
fstps
pop
popf
xor
ja,pt
test
jno
frstor
sbb
loopne
nop
dec
je
mov
je
into
inc
sub
mov
xchg
push
mov
mov
inc
dec
jns
mov
icebp
lret
lock
sub
lahf
ret
ret
cli
push
push
lock
sub
xlat
sahf
mov
shrl
ss
lock
dec
or
cltd
arpl
outsl
xchg
frstor
aad
xor
fwait
mov
cli
add
xchg
adc
jb
stc
jb
cmp
jno
cli
mov
mov
mov
fcoms
mov
mov
cltd
jecxz
outsb
enter
add
sub
out
fidivrl
int3
adc
push
scas
xor
or
xor
out
loop
scas
or
sbb
inc
call
in
lock
pop
cmp
aaa
movsl
pop
shrb
pop
cmp
sub
jg
and
mov
stc
les
pop
push
mov
dec
lcall
inc
repz
mov
push
not
gs
push
test
dec
repz
add
mov
shl
icebp
or
adcl
std
xor
push
dec
xor
dec
nop
sbb
xlat
and
or
inc
test
add
test
inc
and
xor
inc
mov
sbb
mov
push
std
lret
xor
addb
and
pop
jno
mov
jg
repz
loope
enter
sub
mov
xor
lret
inc
aaa
imul
lods
mov
cld
scas
add
inc
mov
jo
out
mov
xchg
mov
loop
and
shr
jo
push
push
push
aas
outsl
dec
inc
jecxz
popf
imul
pushf
inc
les
cltd
js
xor
bound
sub
jg
push
cmp
roll
mov
xchg
dec
rclb
sti
shlb
int
push
aaa
and
add
test
and
and
in
ficomps
cmc
mov
insb
cmp
push
fimuls
and
pop
rcll
xchg
xor
incb
or
stos
pop
sub
je
or
mov
sti
add
mov
icebp
test
aas
das
jbe
xor
loop
cmpsl
addr16
dec
mov
aad
cmp
popf
out
test
and
faddp
add
or
pop
adc
or
cmc
xchg
ja
fsubrp
and
fists
pop
ret
flds
lret
test
mov
daa
pusha
pop
xchg
or
add
cld
sbb
push
std
and
xchg
dec
xchg
decl
fsubrs
adc
mov
dec
dec
push
and
scas
mov
add
cmp
xchg
test
mov
add
in
aad
mov
dec
inc
or
arpl
int3
cli
dec
xchg
mov
and
jle
mov
subb
dec
stos
imul
jecxz
push
dec
inc
sti
lahf
inc
scas
inc
out
arpl
cld
dec
rcrb
push
rorb
int3
scas
and
sub
out
in
jne
lret
and
test
jmp
lcall
testb
inc
cmp
xor
fsubrl
subb
or
aam
xor
mov
inc
cs
enter
jmp
push
dec
jbe
test
mov
and
divl
push
fiadds
imul
inc
add
mov
jp
incb
mov
je
pop
out
js
cmp
xchg
mov
mov
cmp
push
fsubl
pop
dec
add
out
rorl
and
push
hlt
sbb
lret
rolb
jae
dec
xor
xor
inc
int
repnz
fbstp
cltd
mov
add
je
mov
or
add
subl
cld
lcall
clc
lret
test
in
sub
loopne
push
add
in
aad
jecxz
xchg
sbb
aad
stc
pop
shlb
aam
jmp
out
mov
cltd
loopne
ja
push
pop
fisubs
dec
out
jns
adc
mov
movsb
and
push
lds
aam
jp
ja
xchg
jmp
aaa
leave
mov
mov
outsl
pop
daa
xchg
lret
stos
int3
pushf
mov
pusha
cld
push
or
jnp
pop
xor
adc
jbe
aad
push
mov
movb
ja
movsl
lret
faddl
mov
inc
push
or
mov
rorl
clc
call
sbb
xchg
mov
cltd
or
jmp
or
cmp
scas
and
in
sbb
stos
jo
mov
fsubr
jp
push
cmp
xor
mov
in
adc
ja
lret
inc
adc
xchg
jge
adcl
out
lea
cs
pop
mov
pop
cwtl
mov
int
fcomp
xor
mov
repz
xchg
in
psubsw
and
pop
jno
stos
imul
adc
loop
gs
test
add
push
stos
cmp
rcl
sub
lock
cltd
mov
mov
loope
push
ja
push
mov
js
push
std
mov
out
js
sarl
lea
add
jg
fadd
xor
cmpsb
xor
out
jo
fsubl
sub
daa
cld
mov
cltd
jmp
mov
les
jo
adc
dec
inc
lret
cwtl
iret
test
pushf
test
cmp
fwait
xchg
mov
out
xchg
stc
ljmp
lcall
pop
subb
and
mov
push
ja
aas
enter
int3
bound
cli
in
outsl
cmp
aam
dec
xlat
inc
ret
fsubs
mov
lahf
rcr
adc
out
pop
jne
pushf
mov
add
ja
dec
ja
xor
js
jge
add
mov
push
mov
popf
mov
inc
in
lahf
sub
dec
cmp
mov
jmp
inc
loope
mov
cmp
insl
hlt
dec
jge
cwtl
and
xor
insl
clc
ud2
stos
nop
adc
xchg
and
cmp
rolb
push
sbb
cmpb
and
daa
adc
sub
jne
sbb
clc
out
in
cmp
testb
aas
mulb
or
push
ret
dec
cld
decl
jae
jle
mov
push
loopne
push
iret
add
cltd
ficompl
add
insb
rcll
mov
jg
xchg
xchg
mov
and
movsb
mov
sbb
cmpsl
sbb
adcl
clc
dec
fistpl
adc
in
xchg
jp
lock
jno
pop
lods
cmp
cmp
in
dec
shlb
push
and
into
inc
cmpsl
jg
mov
dec
add
ja
adc
jmp
scas
fistpl
and
jmp
imul
in
sub
pop
lcall
pop
mov
sub
pushf
in
inc
push
mov
pop
out
xchg
cld
mov
fidivrl
xor
pop
loopne
add
sbb
cld
push
mov
dec
out
mov
xor
or
push
push
pop
ljmp
xor
out
mov
sub
cmpsl
ja
mull
in
sbb
loop
ss
repnz
add
mov
mov
andb
repnz
stos
mov
dec
aas
pop
sub
lock
es
ret
addr16
xor
dec
mov
adc
iret
sub
lahf
icebp
and
push
mov
pop
xor
movsl
shll
push
jmp
sub
cmp
stos
mov
mov
sub
mov
mov
mov
dec
jp
jg
jge
addr16
loopne
or
push
daa
inc
out
fsub
ljmp
cmp
imul
fsubrp
cld
in
mov
fstpl
shr
lcall
and
mov
aaa
ds
lds
inc
clc
icebp
push
int3
xchg
in
stos
or
mov
fldt
jno
nop
leave
cmp
adc
fsubl
sub
pop
mov
popf
stc
rorl
push
mov
sarl
les
gs
test
ret
orl
adcb
mov
push
or
cmp
cmp
repz
roll
mov
scas
bound
and
test
in
repz
push
lcall
add
jae
jecxz
inc
mov
mov
xchg
fcom
sub
scas
loope
shrl
pop
jp
loope
xchg
adc
mov
mov
movsl
and
mov
imul
andb
or
fimull
inc
add
or
xchg
pop
ficoms
inc
lods
mov
int3
mov
repz
out
lock
aaa
sti
insl
or
leave
cmp
rorb
test
mov
nop
xor
insl
pop
clc
pushf
stos
aaa
push
imul
sbb
test
jmp
cmc
adc
mov
shll
adc
es
push
lret
xor
nop
push
data16
xchg
mov
pop
mov
mov
outsl
add
cmp
push
pminsw
shrb
lret
cld
pop
subb
bound
and
xchg
mov
and
vpaddw
mov
loope
push
cmp
scas
aas
xchg
pop
xchg
sbb
mov
out
xchg
and
idivb
add
sbb
ja
add
mov
test
jl
aad
and
mov
es
aas
lret
dec
pusha
and
mov
test
cmpsb
mov
fcoms
mov
stos
xchg
push
xor
inc
icebp
pop
mov
mov
jecxz
mov
mov
sahf
xchg
sbb
inc
jbe
stos
je
xlat
fimull
jg
js
mov
push
cmp
stc
mov
loopne
push
arpl
scas
scas
xchg
push
arpl
fwait
ret
xor
stos
mov
dec
rclb
xchg
repnz
mov
xlat
clc
js
add
das
pop
dec
in
aaa
lods
mov
add
lret
pop
stc
jmp
cli
adc
subb
push
push
jno
es
mov
pop
add
popa
fsubs
ljmp
jp
xchg
cmp
into
pop
orl
sbb
mov
xor
add
aam
fidivs
mov
movsl
or
or
push
xor
adc
sbb
xchg
lahf
inc
add
xchg
ss
dec
imul
mov
xchg
mov
js
adc
negb
iret
insb
shrb
cltd
divl
or
sbb
test
cmp
xor
xchg
xor
clc
or
push
adc
vpsadbw
ss
add
xchg
mov
and
loop
aam
xchg
add
neg
xchg
sub
fldenv
pop
repz
pop
hlt
insb
add
in
jl
es
test
inc
popf
jb
jecxz
mov
rorl
jno
add
int
cltd
fwait
dec
cmp
test
aam
sbb
jg
xchg
xor
adc
scas
sbb
fidivrs
xlat
inc
mov
xchg
pushf
xchg
adc
int
and
repz
daa
in
push
pop
in
and
adc
repz
mov
xchg
or
mov
into
mov
sub
sub
cmp
enter
mov
lahf
or
dec
xchg
push
pushf
pop
xchg
into
ds
cmp
call
cltd
add
andb
aaa
outsl
stc
cmp
loope
jge
push
es
shll
lea
daa
int
push
outsl
cmp
das
hlt
or
gs
ja
mov
mov
xor
dec
fisubl
add
sbb
fidivrs
mov
popf
imul
mov
outsb
adc
sar
shlb
lock
mov
sub
enter
inc
mov
mov
frstor
sarb
inc
lods
pop
fsubs
push
sbb
lea
cwtl
das
imul
mov
cli
sub
loop
in
int
jge
inc
mov
gs
mov
and
in
in
icebp
das
test
dec
fdiv
pop
mov
sub
inc
lcall
pop
lds
mov
add
cmpsb
lods
lret
inc
loopne
lds
mov
or
movsl
mov
xchg
stos
add
pushf
lret
mov
dec
enter
push
ljmp
lcall
pop
ljmp
mov
cmp
inc
lds
and
movsl
push
pop
jno
test
je
inc
es
dec
sub
jg
loopne
inc
sub
dec
in
jno
and
and
rorl
arpl
sbb
and
xchg
ja
mov
sbb
or
jle
jge
pop
ss
sarb
enter
aad
mov
call
jnp
je
fwait
add
add
pushf
cld
loop
cmpsl
out
mov
cld
repnz
rorb
rorb
sbb
xor
in
mov
cs
std
mov
jmp
popf
mov
int
fsubp
mov
mov
lds
push
inc
dec
aaa
push
xchg
test
out
data16
adc
cli
fisubs
iret
inc
sbb
mov
mov
pusha
lret
pop
adc
data16
xchg
jbe
dec
inc
jbe
cmp
mov
mov
push
aaa
out
mov
imul
lahf
jp
jg
imul
dec
in
sbb
les
jmp
imul
outsb
in
std
fs
in
or
mov
sbb
cmc
mov
outsb
pusha
cmc
add
lahf
xchg
xchg
data16
jns
popa
test
adc
insl
push
pop
fstps
cmp
mov
or
stos
xchg
cmc
mov
test
rclb
inc
dec
push
scas
std
cs
mov
inc
xchg
out
jbe
push
inc
pop
outsl
jmp
popf
xchg
add
repz
cmp
mov
dec
mov
inc
into
or
fisttps
jbe
out
push
pop
ja
adc
xor
xor
icebp
sbb
cmp
mov
push
cmp
loopne
shll
nop
mov
cmp
add
outsl
pop
mov
pushf
lds
out
jg
jne
pop
or
xor
push
or
lods
repnz
js
ss
or
add
push
lea
lret
cmp
scas
sub
pop
lcall
andb
inc
aam
lret
cmpsl
out
stc
or
add
fdivs
and
test
sbb
pop
lcall
push
enter
negl
lcall
hlt
inc
cltd
repnz
xchg
jo
fistps
aad
jns
aas
test
mov
jno
mov
test
cmc
out
in
jnp
mov
sub
sbb
into
pop
adc
push
out
in
movsb
inc
sub
repnz
ficoml
mov
jge
lcall
fwait
test
sbb
lea
sbb
pop
ja
shrb
aam
or
scas
jp
pop
mov
pop
cmpsb
dec
mov
sbb
push
in
add
jo
lock
fwait
sub
xchg
out
cmp
insl
add
faddl
inc
or
fnstcw
orb
sbb
add
dec
ss
cltd
inc
cltd
pop
jb
or
pop
addr16
xchg
mov
cmp
jae
inc
lea
mov
fnstenv
adc
mov
insb
push
inc
icebp
std
dec
cwtl
insb
mov
xor
cwtl
imulb
inc
mov
mov
popf
mov
sub
dec
add
ds
jnp
push
xchg
dec
shrl
int
mov
in
pop
push
mov
inc
and
xchg
roll
push
leave
xchg
mov
lcall
cli
or
cmp
cmp
stc
dec
mov
pop
loope
add
push
ret
mulps
outsl
lods
out
mov
shl
ret
cwtl
push
jle
jne
pop
in
jl
jno,pt
movsb
out
daa
rcr
inc
mov
ljmp
rcll
addr16
push
sbb
push
push
outsl
fst
loop
pusha
fistpll
lret
xchg
ja
ss
adc
push
mov
les
out
faddp
xor
negl
pop
jo
ficompl
pop
jg
inc
sub
sbb
loopne
sub
std
cmp
cmp
xchg
or
push
push
test
push
xchg
inc
ljmp
jecxz
loope
xor
leave
rorl
push
mov
sbb
loop
mov
mov
push
in
xor
push
dec
mov
push
mov
dec
jmp
inc
pop
loopne
mov
es
movsl
in
repz
stos
xchg
rcrl
scas
lcall
stos
rorl
sbb
xchg
call
das
inc
test
fwait
in
mov
pop
mov
clc
fbld
popa
mov
imul
jl
cld
sbb
adc
sbb
int3
ja
subl
enter
repnz
mov
femms
fsubp
mov
cmpsl
add
pushf
mov
jmp
cmp
mov
icebp
xchg
xor
repnz
out
rcl
insb
outsb
fwait
test
mov
push
cli
lcall
pop
push
adc
cmpsb
dec
cmp
sub
jns
adc
inc
daa
mov
movsl
mov
popa
mov
push
push
clc
mov
sahf
call
and
insl
xchg
lods
inc
and
sti
imul
cwtl
jge
jl
rcrl
mov
ret
je
mov
out
test
rorl
outsl
data16
add
in
cmp
bound
lods
pop
inc
ds
nop
js
sbb
pop
loope
sbb
ret
jb
add
mov
es
js
add
adc
lret
sub
sarb
lea
and
dec
sub
sbbb
lret
out
cmc
xchg
mov
jge
popf
pop
xor
cmp
js
push
mov
hlt
aad
and
xor
shrb
loopne
movsl
in
xor
lds
loop
add
inc
hlt
or
int
insb
add
or
nop
and
popa
mov
mov
cld
mov
add
rcl
sub
and
divb
adc
jo
rcl
rclb
pop
or
les
movups
and
arpl
pop
popf
sbb
fwait
jae
in
jae
xor
jo
mov
aad
cmpl
lods
pop
push
push
int3
ljmp
pop
dec
fdivl
cmp
push
sbb
cs
mov
ret
jecxz
xchg
loope
dec
into
ja
ret
pop
es
cmp
xchg
jmp
xor
pusha
pop
imul
aad
mov
insl
cwtl
test
and
into
push
in
lds
movsl
mov
lret
dec
jne
roll
sub
inc
jne
cltd
icebp
es
jo
dec
sbb
ret
mov
pop
jmp
xchg
dec
jge
cmp
pop
jecxz
mov
icebp
cli
xor
in
inc
xorl
incb
std
jbe
roll
inc
pop
and
adc
mull
sub
lret
sahf
lea
inc
cmp
daa
xor
out
dec
push
lcall
insb
xor
scas
mov
nop
inc
jbe
fs
jl
sbb
cmp
out
jb
fucom
jbe
cmp
push
stos
fisttps
adc
push
scas
nop
or
xchg
xchg
divb
dec
out
dec
pushf
repnz
mov
in
fcmovu
hlt
sti
rclb
cmp
mov
negb
aad
ljmp
or
fnsetpm(287
in
jns
les
inc
pop
fiadds
popa
movsb
call
mov
movb
mov
movsb
and
pop
movsb
push
inc
in
ss
dec
xor
jge
sbb
mov
xchg
sbb
mov
lods
ja
das
push
or
xor
lods
int3
imul
push
push
out
subl
std
daa
das
fsub
mov
and
ds
iret
lods
cmp
push
hlt
outsl
scas
jge
jb
loope
prefetch
or
mov
pop
mov
in
jno,pt
idivl
jne
addb
popf
sub
lods
popa
xor
cmp
inc
cmp
or
int3
xchg
in
inc
leave
aas
mov
loope
and
loopne
in
pop
mov
imul
jmp
mov
and
test
jb
jmp
mov
sub
sub
mov
faddp
out
pop
add
or
in
pop
cmp
add
or
icebp
inc
push
jns
and
xor
mov
lea
in
aad
xor
inc
xlat
or
out
jae
add
test
dec
pop
jno
aaa
mov
sarb
jle
jno
or
ljmp
ds
cmp
xorb
cmpsb
add
cwtl
xor
cmp
mov
mov
popa
pop
aas
shlb
sbb
mov
imulb
out
dec
jns
shll
mov
jo
rclb
jecxz
not
ss
cmp
push
push
push
mov
pop
sub
orb
mov
adc
xor
inc
cmpsb
loopne
imul
loope
fdivrl
stos
out
or
jbe
pop
sbb
lahf
inc
fs
add
mov
in
pop
add
lods
pop
adc
adc
lods
push
or
pop
mov
pusha
jecxz
std
push
sub
in
push
shl
enter
iret
cmpsl
mov
fcomip
mov
clc
out
mov
mov
adcl
mov
insl
pusha
imul
int
aaa
repnz
mov
and
imul
out
mov
jmp
push
stos
mov
sti
adc
dec
inc
sbb
mov
out
fs
xor
xlat
lret
mov
fcompl
or
xchg
mov
dec
movb
push
outsl
add
inc
adc
scas
adc
jl
inc
and
add
sbb
lods
mov
mov
in
jns
lock
mov
nop
call
xor
pop
in
lret
fdivl
sbb
inc
sbb
mov
fsts
ret
push
add
sbb
pop
mov
jb
je
movsl
cmp
xor
insl
jecxz
dec
or
test
add
adc
in
sub
and
arpl
pusha
cmpsb
mov
pushf
mov
add
pop
xchg
rolb
and
sahf
enter
jmp
cmpsl
mov
push
into
clc
lock
data16
loope
pop
pop
lea
mov
xchg
inc
or
jae
clc
cmpsb
jecxz
or
shll
cmp
sub
pop
fnsave
and
js
cmpsl
fmull
mov
enter
xchg
jno
xor
repz
jbe
adc
repnz
popa
fisubrl
cmp
lods
test
push
inc
out
fidivrl
cmpsl
cmp
sbb
jmp
xor
xchg
cmp
outsl
pop
inc
xor
aam
pushf
js
dec
pop
sub
dec
adc
ljmp
fcmovbe
xor
and
ljmp
cmpsl
test
jo
repz
ljmp
ret
or
adc
pop
or
ds
push
xor
mov
mov
or
and
jge
adc
xchg
mov
adc
bound
inc
mov
cld
mov
xchg
inc
jb
mov
push
xchg
je
lret
push
jo
mov
insb
fsubrp
out
cld
pop
cltd
rcrl
push
fldenv
cmp
test
sarl
int3
bound
in
sbb
jecxz
hlt
bound
jae
lods
addl
test
in
in
or
mov
dec
inc
xor
loop
dec
aaa
iret
or
or
in
lret
lods
clc
mov
lret
inc
add
dec
stos
or
mov
pop
sahf
popf
mov
jnp
mov
jo
aam
sbb
jl
sbb
popa
cli
in
mov
xchg
xchg
mov
insl
dec
imul
mov
adc
mov
ss
sbb
mov
rorl
sahf
add
sbb
jno
dec
dec
inc
dec
lock
dec
pushf
movsb
movsl
push
or
push
stos
add
fldcw
mov
mov
jo
xor
mov
push
in
fbstp
mov
add
cltd
sbb
and
mov
test
mov
test
pop
lods
adc
data16
imul
mov
dec
loop
enter
xor
xchg
adc
ja
xchg
mov
xchg
adc
mov
dec
dec
lret
fmull
mov
adc
lods
push
jl
cld
sbb
bound
xlat
fstpl
in
xchg
out
jle
push
mov
ret
movsl
inc
out
mov
dec
cmc
or
push
add
inc
neg
xor
pop
pop
dec
cli
out
fisttpl
fs
mov
jne
push
xchg
popa
sub
ret
cmp
push
pop
adc
sbb
fisubrs
mov
cmpsl
adc
into
mov
pop
mov
add
insb
fimull
cmc
ret
cmp
mov
adc
addr16
inc
mov
fdivr
int
cmp
clc
cltd
fcomp
inc
push
fcoml
pop
rcll
cld
into
adcl
lret
cmpsl
add
mov
lods
es
flds
xchg
jle
jg
and
sbb
cmp
loope
xor
lret
push
daa
cmpsb
jbe
jl
sbb
cld
aaa
cmp
outsl
data16
jb
out
mov
jo
test
inc
jge
inc
mov
lds
adc
cwtl
scas
mul
loopne
add
movsl
scas
fsts
jl
out
sub
xlat
mov
in
cmp
and
lcall
test
out
daa
sub
xor
gs
inc
inc
aad
cmp
sbb
movsb
insb
add
inc
sahf
fptan
cmc
movsb
or
adc
insb
testl
mov
andl
sbb
and
pop
cmp
lcall
cmp
aas
sub
xor
scas
ljmp
push
ret
imul
mov
jp
pop
lods
lds
bnd
stos
lcall
push
je
mov
adc
jne
mov
fisubrl
xor
jl
out
xor
jp
cmpsb
ds
sub
je
sbb
mov
pusha
jns
inc
sbb
push
scas
pop
mov
dec
or
mov
ja
repnz
pop
test
pop
popf
adc
int
or
cmp
xchg
dec
fadds
out
jbe
sub
jno
cwtl
cld
test
xor
add
lea
arpl
push
cmp
mov
push
fisubl
mov
adc
cmp
inc
arpl
xchg
into
bound
out
stos
ret
adc
push
fimuls
mov
clc
mov
sbb
adc
neg
mov
push
sub
aaa
scas
fcompl
pushf
jp
inc
mov
pop
jmp
in
dec
jmp
xor
and
stos
popa
push
cmp
mov
enter
loop,pn
aad
sub
cwtl
and
rcrl
imul
xchg
test
xor
xor
mov
fmull
ret
lcall
cmp
mov
out
outsl
jmp
idivb
fsubs
push
lock
inc
dec
ds
pop
push
test
mov
or
push
adc
inc
pop
out
loop
mov
pop
push
imul
and
adc
jmp
scas
test
idivl
xor
adc
xor
shl
xor
iret
stc
xor
add
lea
jb
out
sub
enter
adc
xchg
dec
in
mov
nop
inc
dec
sbb
stos
aad
adc
xchg
gs
idivl
jp
push
xchg
cmp
sub
dec
outsl
xchg
push
gs
lods
push
jmp
vmovups
stos
jg
push
inc
adc
icebp
ror
lock
add
mov
mulb
mov
or
sarl
pop
xor
xor
sbb
psraw
enter
idivl
repnz
sbb
test
or
pop
push
lds
push
xlat
ja
sbbb
cmc
scas
sub
mov
popa
add
xchg
jns
or
or
push
and
js
test
ljmp
cwtl
inc
cld
jbe
push
mov
fistpl
sahf
jmp
xorb
sbb
inc
cmp
mov
add
jmp
xor
cmp
jno
std
xchg
inc
shrl
adc
mov
xchg
out
pushf
arpl
mov
out
or
push
cltd
push
push
jge
dec
xchg
or
outsl
lret
repz
push
out
push
jo
lret
aas
mov
shrb
cmp
and
lret
hlt
rorb
test
jle
sbb
mov
test
inc
movsl
cmp
test
test
gs
fmul
adc
arpl
cwtl
inc
stc
sbbl
mov
push
lret
pop
daa
sbb
mov
movl
loop
push
sbb
push
iret
jg
mov
inc
fldenv
and
ljmp
leave
mov
xor
cmp
fldenv
xchg
mov
mov
fscale
add
scas
dec
arpl
fs
ja
mov
inc
movsl
shl
push
ret
pop
jnp
mov
imul
and
rcll
fadd
outsl
push
pmullw
push
jae
aaa
les
mov
sbb
cli
mov
fsubrl
xor
roll
and
out
je
pop
sub
fwait
in
cmp
dec
leave
mov
cwtl
jnp
stos
lahf
test
insl
sbb
fyl2x
dec
xchg
scas
push
fsubr
push
fcmovnbe
xchg
xchg
dec
inc
xor
rcr
aam
adc
out
scas
adc
push
xor
loope
popa
mov
aaa
lahf
out
inc
push
lahf
jnp
in
test
popf
cmc
dec
sbb
hlt
dec
dec
sahf
cmp
out
das
push
js
js
cmp
rol
imul
repnz
pop
sbb
cmp
movsl
movsb
lods
pop
inc
roll
pop
mov
inc
push
pop
xchg
notb
mov
int3
cwtl
outsl
cmp
push
inc
xchg
add
adc
jg,pt
adc
.byte
